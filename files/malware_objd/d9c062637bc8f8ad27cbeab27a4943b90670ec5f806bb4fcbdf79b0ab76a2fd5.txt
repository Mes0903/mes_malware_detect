
d9c062637bc8f8ad27cbeab27a4943b90670ec5f806bb4fcbdf79b0ab76a2fd5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	test   ah,0xcc
  401003:	add    bh,bh
  401005:	fild   WORD PTR [ebx-0x4f]
  401008:	js     0x400f8d
  40100a:	cmp    edi,0x0
  40100d:	call   0xffacfca8
  401012:	add    ah,cl
  401014:	or     DWORD PTR [edx-0x8a9b8e],0x0
  40101b:	add    bh,bh
  40101d:	jmp    0x84315906
  401022:	inc    DWORD PTR [eax]
  401024:	(bad)  
  401025:	cmp    al,0xc1
  401027:	sbb    al,0x1d
  401029:	add    DWORD PTR [ebx-0x6a8c3377],0xffffffcb
  401030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401031:	int3   
  401032:	cmp    edi,0xffffffff
  401035:	jg     0x40104f
  401037:	and    ebp,eax
  401039:	add    bh,bh
  40103b:	int3   
  40103c:	add    BYTE PTR [esi+0x2f],ch
  40103f:	mov    ebx,DWORD PTR [edx]
  401041:	inc    DWORD PTR [eax]
  401043:	inc    DWORD PTR [eax]
  401045:	xor    BYTE PTR [edx+0x62],dh
  401048:	xchg   DWORD PTR [eax],eax
  40104a:	inc    DWORD PTR [eax]
  40104c:	mov    DWORD PTR [edx],ebp
  40104e:	mov    eax,0x8900b75e
  401053:	(bad)  
  401054:	call   DWORD PTR [ebp+0x67]
  401057:	out    dx,al
  401058:	daa    
  401059:	add    bh,bh
  40105b:	(bad)  
  40105c:	dec    DWORD PTR [ecx]
  40105e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40105f:	shl    DWORD PTR [eax],cl
  401061:	cmp    edi,0x0
  401064:	inc    DWORD PTR [edi]
  401066:	mov    ebx,0xff001e0d
  40106b:	inc    DWORD PTR [eax]
  40106d:	cwde   
  40106e:	sti    
  40106f:	out    dx,eax
  401070:	outs   dx,DWORD PTR ds:[esi]
  401071:	(bad)  
  401072:	(bad)  
  401073:	(bad)  
  401074:	(bad)  
  401075:	jmp    0xff00:0x896215e2
  40107c:	push   DWORD PTR [eax-0xcbd920]
  401082:	add    BYTE PTR [ecx-0x7f269501],cl
  401088:	pop    ebp
  401089:	add    bh,bh
  40108b:	add    BYTE PTR [ecx+0x44932ae9],cl
  401091:	inc    DWORD PTR [eax]
  401093:	mov    edi,edi
  401095:	mov    ss,WORD PTR [eax+eiz*1]
  401098:	mov    al,BYTE PTR [ebx-0x6000000]
  40109e:	pushf  
  40109f:	pop    ds
  4010a0:	cld    
  4010a1:	(bad)  
  4010a2:	inc    DWORD PTR [eax]
  4010a4:	dec    DWORD PTR [ebx+0x52]
  4010a7:	and    BYTE PTR [ecx+0xff83ff],ah
  4010ad:	aas    
  4010ae:	cmp    DWORD PTR [ebp+0xff8934],0x5d74b5ff
  4010b8:	arpl   di,di
  4010ba:	(bad)  
  4010bb:	(bad)  
  4010bc:	call   DWORD PTR [ebx+0x59]
  4010bf:	xchg   DWORD PTR [esi+0x0],ecx
  4010c2:	inc    DWORD PTR [eax]
  4010c4:	jmp    FWORD PTR [edx]
  4010c6:	(bad)  
  4010c7:	mov    ds:0xff00ffaa,al
  4010cc:	(bad)  
  4010cd:	jl     0x401091
  4010cf:	xor    DWORD PTR [ecx-0x100],esi
  4010d5:	leave  
  4010d6:	mov    eax,ds:0xffff8983
  4010db:	(bad)  
  4010dc:	dec    esi
  4010de:	int    0xf2
  4010e0:	ins    DWORD PTR es:[edi],dx
  4010e1:	(bad)  
  4010e2:	inc    DWORD PTR [ebx+0x37c423ff]
  4010e8:	adc    eax,0xffffff00
  4010ed:	pop    edx
  4010ee:	outs   dx,DWORD PTR ds:[esi]
  4010ef:	aas    
  4010f0:	dec    edi
  4010f1:	add    BYTE PTR [eax],al
  4010f3:	dec    esp
  4010f5:	jge    0x40113c
  4010f7:	mov    BYTE PTR [ebx+eax*4+0x0],dl
  4010fb:	add    BYTE PTR [eax],al
  4010fd:	adc    eax,0xffcf3025
  401102:	int3   
  401103:	add    BYTE PTR [ebx+0x1938d7f2],al
  401109:	inc    DWORD PTR [ebx+0x5a570000]
  40110f:	sub    esp,edi
  401111:	add    bh,bh
  401113:	add    bh,bh
  401115:	mov    edx,0xfffc60d4
  40111a:	add    bh,bh
  40111c:	add    ch,bh
  40111e:	fcmovnu st,st(5)
  401120:	arpl   di,di
  401122:	cmp    edi,0x0
  401125:	das    
  401126:	aaa    
  401127:	lock mov ebp,0xff83ff83
  40112d:	cdq    
  40112e:	pusha  
  40112f:	test   DWORD PTR [ecx-0x7d],edx
  401132:	add    bh,bh
  401134:	jmp    ebx
  401136:	ins    DWORD PTR es:[edi],dx
  401137:	mov    al,0x40
  401139:	inc    DWORD PTR [eax]
  40113b:	inc    DWORD PTR [ebx+0x4652f154]
  401141:	add    BYTE PTR [ebx+0x49a800ff],al
  401147:	sti    
  401148:	cmp    al,0x83
  40114a:	add    bh,bh
  40114c:	(bad)  
  40114d:	mov    edx,0xffb9dc6e
  401152:	(bad)  
  401153:	(bad)  
  401154:	dec    DWORD PTR [ecx+eax*2+0xff2a30]
  40115b:	(bad)  
  40115c:	push   esp
  40115e:	ins    DWORD PTR es:[edi],dx
  40115f:	int    0xf6
  401161:	add    bh,bh
  401163:	cmp    edi,0x3c
  401166:	inc    esi
  401167:	mul    ah
  401169:	inc    DWORD PTR [eax]
  40116b:	add    BYTE PTR [eax],al
  40116d:	jge    0x401198
  40116f:	jle    0x401113
  401171:	inc    DWORD PTR [eax]
  401173:	(bad)  
  401174:	jmp    DWORD PTR [esp+ebp*1]
  401177:	mov    eax,ds:0xffff83db
  40117c:	add    BYTE PTR [edi+0x94bdcd],dh
  401182:	mov    edi,edi
  401184:	(bad)  
  401185:	fmul   DWORD PTR ds:0x89ff94cb
  40118b:	int3   
  40118c:	call   DWORD PTR [eax]
  40118e:	xchg   ecx,eax
  40118f:	inc    eax
  401190:	xor    eax,0xff8983ff
  401195:	or     DWORD PTR [eax],edi
  401197:	push   ebx
  401198:	idiv   bh
  40119a:	(bad)  
  40119b:	(bad)  
  40119c:	call   FWORD PTR [eax+ebx*1]
  40119f:	fwait
  4011a0:	sar    edi,1
  4011a2:	int3   
  4011a3:	dec    esp
  4011a5:	mov    ebx,0xff6b9f17
  4011aa:	inc    DWORD PTR [eax]
  4011ac:	inc    DWORD PTR [eax-0x3f]
  4011af:	cmc    
  4011b0:	dec    ebx
  4011b1:	(bad)  
  4011b2:	dec    DWORD PTR [ecx-0x32802e77]
  4011b8:	jge    0x4011ba
  4011ba:	add    DWORD PTR [ebx+0x44d874cc],0xffffff8a
  4011c1:	(bad)  
  4011c2:	(bad)  
  4011c3:	dec    esp
  4011c5:	xchg   esi,eax
  4011c6:	aam    0x73
  4011c8:	add    DWORD PTR [eax],0x72cc8900
  4011ce:	or     DWORD PTR [edi],esi
  4011d0:	retf   0x89ff
  4011d3:	add    ah,cl
  4011d5:	mov    dh,0xf6
  4011d7:	mov    edx,0xffffffbf
  4011dc:	(bad)  
  4011dd:	jmp    0x83:0x3f715
  4011e4:	int3   
  4011e5:	shl    cl,1
  4011e7:	je     0x4011ac
  4011e9:	(bad)  
  4011ea:	inc    DWORD PTR [ebx+0x136ad700]
  4011f0:	xchg   edi,edi
  4011f2:	add    BYTE PTR [eax],al
  4011f4:	mov    DWORD PTR [edi+esi*4],esi
  4011f7:	in     eax,dx
  4011f8:	xor    bh,bh
  4011fa:	(bad)  
  4011fb:	(bad)  
  4011fc:	call   FWORD PTR [esi-0x18]
  4011ff:	das    
  401200:	add    DWORD PTR [ebx+0x7489ffff],0x2317b4
  40120a:	mov    edi,edi
  40120c:	call   DWORD PTR [ebp+0x20]
  40120f:	pop    ecx
  401210:	fiadd  DWORD PTR [eax]
  401212:	(bad)  
  401213:	(bad)  
  401214:	inc    ebx
  401216:	mov    bl,0xb0
  401218:	in     eax,dx
  401219:	add    BYTE PTR [eax],al
  40121b:	(bad)  
  40121c:	jmp    DWORD PTR [edx-0x2f]
  40121f:	jle    0x40127d
  401221:	(bad)  
  401222:	(bad)  
  401223:	inc    DWORD PTR [eax]
  401225:	push   ss
  401226:	fs mov dh,0x95
  401229:	cmp    edi,0xffffff89
  40122c:	call   ecx
  40122e:	clc    
  40122f:	and    edx,DWORD PTR [edi-0x7cff7d]
  401235:	into   
  401236:	push   ecx
  401237:	and    bh,BYTE PTR [edi-0xff0001]
  40123d:	cld    
  40123e:	aas    
  40123f:	retf   0x83b4
  401242:	add    bh,bh
  401244:	add    BYTE PTR [ecx],ch
  401246:	lock fwait
  401248:	dec    edx
  401249:	add    DWORD PTR [ebx+0x75de00ff],0xffffff96
  401250:	lahf   
  401251:	add    bh,bh
  401253:	dec    DWORD PTR [ecx+0x457afa41]
  401259:	(bad)  
  40125a:	inc    DWORD PTR [ebx+0x6da26283]
  401260:	cs (bad) 
  401262:	(bad)  
  401263:	(bad)  
  401264:	(bad)  
  401265:	sti    
  401266:	xchg   esi,eax
  401267:	(bad)  
  401268:	adc    eax,0xffffffff
  40126d:	sbb    eax,0x329e28
  401272:	add    BYTE PTR [ebx-0xd46fe7d],al
  401278:	add    DWORD PTR [eax],0x290083ff
  40127e:	test   DWORD PTR [ebx],esp
  401280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401281:	int3   
  401282:	or     DWORD PTR [ecx-0x4f5ddd00],0x44
  401289:	add    BYTE PTR [eax],al
  40128b:	add    BYTE PTR [eax],al
  40128d:	sar    DWORD PTR ds:0xff0019f7,0x0
  401294:	add    BYTE PTR [eax-0x9b6d6e],bh
  40129a:	mov    DWORD PTR [eax],eax
  40129c:	cmp    DWORD PTR [ebx],0xffffff9c
  40129f:	and    dl,BYTE PTR [eax]
  4012a1:	add    bh,bh
  4012a3:	add    bh,bh
  4012a5:	sub    DWORD PTR [ebp-0x75],0x8344
  4012ac:	jmp    ebp
  4012ae:	adc    ebp,DWORD PTR [eax+0x3c]
  4012b1:	add    bh,bh
  4012b3:	add    bh,bh
  4012b5:	pop    ss
  4012b6:	jg     0x40129c
  4012b8:	repnz inc DWORD PTR [eax]
  4012bb:	mov    DWORD PTR [eax],eax
  4012bd:	dec    ecx
  4012be:	lods   al,BYTE PTR ds:[esi]
  4012bf:	pop    edi
  4012c0:	rol    BYTE PTR [ebx+0x63890083],cl
  4012c6:	mov    bh,BYTE PTR [esi-0x21]
  4012c9:	cmp    edi,0xffffffff
  4012cc:	jmp    FWORD PTR [ecx]
  4012ce:	cdq    
  4012cf:	dec    esp
  4012d0:	sbb    eax,0xff830000
  4012d5:	xchg   bl,ch
  4012d7:	int3   
  4012d8:	pusha  
  4012d9:	add    bh,bh
  4012db:	int3   
  4012dc:	add    BYTE PTR [esi-0x68],bh
  4012df:	mov    al,0xaa
  4012e1:	inc    DWORD PTR [eax]
  4012e3:	dec    esp
  4012e5:	jg     0x401303
  4012e7:	jne    0x40135d
  4012e9:	add    BYTE PTR [eax],al
  4012eb:	mov    esp,ecx
  4012ed:	xor    ah,ch
  4012ef:	push   eax
  4012f0:	mov    al,BYTE PTR [ebx+0x5e0000ff]
  4012f6:	or     edi,0xffffffbc
  4012f9:	mov    edi,edi
  4012fb:	mov    DWORD PTR [eax],eax
  4012fd:	repz mov bh,0x1c
  401300:	ss mov edi,edi
  401303:	add    ah,cl
  401305:	test   al,0x8a
  401307:	adc    BYTE PTR [edi],ch
  401309:	inc    DWORD PTR [eax]
  40130b:	(bad)  
  40130c:	inc    DWORD PTR ds:0x832857c7
  401312:	(bad)  
  401313:	inc    DWORD PTR [eax]
  401315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401316:	sub    al,0x49
  401318:	push   ss
  401319:	mov    edi,edi
  40131b:	add    bh,bh
  40131d:	out    0x72,eax
  40131f:	jmp    0x48ff:0xcccc00a8
  401326:	cli    
  401327:	cmp    DWORD PTR [eax-0x1],ebp
  40132d:	push   ecx
  40132e:	leave  
  40132f:	pop    edx
  401330:	jb     0x4012fe
  401332:	add    bh,bh
  401334:	jmp    FWORD PTR [eax-0x7c6f57a1]
  40133a:	(bad)  
  40133b:	(bad)  
  40133c:	jmp    DWORD PTR [esi+esi*1]
  40133f:	xor    BYTE PTR [ebx],ch
  401341:	int3   
  401342:	(bad)  
  401343:	(bad)  
  401344:	jmp    DWORD PTR [ecx-0x34]
  401347:	into   
  401348:	push   0xff83ff00
  40134d:	push   esp
  40134e:	shl    BYTE PTR [ebx+0x22],1
  401351:	add    BYTE PTR [ebx+0x336000ff],al
  401357:	fcmovbe st,st(4)
  401359:	mov    DWORD PTR [eax],eax
  40135b:	add    BYTE PTR [eax],al
  40135d:	xor    eax,0x8397da2b
  401362:	add    ah,cl
  401364:	call   ebx
  401366:	div    BYTE PTR [esi+0xffffbc]
  40136c:	jmp    FWORD PTR [edx+0xd]
  40136f:	cld    
  401370:	sub    BYTE PTR [eax],al
  401372:	add    DWORD PTR [ebx-0x48f39c00],0x2a
  401379:	add    BYTE PTR [ebx-0x65d9ff7d],al
  40137f:	xor    DWORD PTR [ebx],eax
  401381:	(bad)  
  401382:	(bad)  
  401383:	inc    DWORD PTR [eax]
  401385:	mov    al,ds:0x227b82
  40138a:	add    DWORD PTR [eax],0x0
  40138d:	dec    edx
  40138e:	arpl   WORD PTR [edi+0xe7],si
  401394:	(bad)  
  401395:	jns    0x401336
  401397:	and    DWORD PTR [esi],ebx
  401399:	or     esp,0xffffff83
  40139c:	(bad)  
  40139d:	mov    esp,0x8323168c
  4013a2:	inc    DWORD PTR [eax]
  4013a4:	(bad)  
  4013a5:	jp     0x4013e2
  4013a7:	std    
  4013a8:	jbe    0x40132d
  4013aa:	(bad)  
  4013ab:	(bad)  
  4013ac:	(bad)  
  4013ad:	sti    
  4013ae:	jno    0x401336
  4013b0:	enter  0x8300,0x0
  4013b4:	dec    DWORD PTR [edx+eax*1-0x7c7cf790]
  4013bb:	(bad)  
  4013bc:	jmp    DWORD PTR [ecx]
  4013be:	ins    DWORD PTR es:[edi],dx
  4013bf:	mov    esp,0xff00ff84
  4013c4:	or     DWORD PTR [esi+ebp*1],0x6c
  4013c8:	mov    dh,0x0
  4013ca:	add    BYTE PTR [eax],al
  4013cc:	push   DWORD PTR [esp+edx*1]
  4013cf:	jno    0x40140d
  4013d1:	int3   
  4013d2:	add    ah,cl
  4013d4:	add    BYTE PTR ds:0xff487c1f,dl
  4013da:	add    DWORD PTR [eax],0x0
  4013dd:	jmp    0xcd2de3f3
  4013e2:	inc    DWORD PTR [eax]
  4013e4:	inc    ebx
  4013e6:	push   edx
  4013e7:	xchg   esp,eax
  4013e8:	dec    ecx
  4013e9:	mov    edi,edi
  4013eb:	dec    esp
  4013ed:	shl    BYTE PTR [edx+0xffb882],cl
  4013f3:	mov    DWORD PTR [eax],eax
  4013f5:	lea    esi,[ebx-0x6d]
  4013f8:	sbb    bh,bh
  4013fa:	dec    esp
  4013fc:	jmp    DWORD PTR [edx-0x2a]
  4013ff:	dec    esp
  401400:	retf   
  401401:	add    BYTE PTR [ecx-0x389d337d],cl
  401407:	(bad)
  40140a:	(bad)  
  40140b:	inc    DWORD PTR [ebx-0x1b20ef07]
  401411:	(bad)  
  401412:	(bad)  
  401413:	(bad)  
  401414:	push   DWORD PTR [edx+0x6a]
  401417:	aas    
  401418:	push   ss
  401419:	cmp    edi,0xffffffff
  40141c:	call   DWORD PTR [esi-0x67]
  40141f:	pop    eax
  401420:	dec    ecx
  401421:	add    bh,bh
  401423:	int3   
  401424:	jmp    DWORD PTR [eax]
  401426:	pop    es
  401427:	push   0xff00ffe1
  40142c:	add    BYTE PTR [ecx+0x0],ch
  40142f:	xchg   BYTE PTR [ebp+0x0],ch
  401432:	add    DWORD PTR [ebx-0x449da401],0xffffffc0
  401439:	mov    edi,edi
  40143b:	mov    DWORD PTR [eax],eax
  40143d:	div    DWORD PTR [edi-0xff9144]
  401443:	int3   
  401444:	adc    DWORD PTR [ebx-0x46],0x10
  401448:	push   esi
  401449:	add    BYTE PTR [eax],al
  40144b:	add    bh,bh
  40144d:	push   cs
  40144e:	dec    esi
  40144f:	ins    BYTE PTR es:[edi],dx
  401450:	inc    eax
  401451:	cmp    edi,0x0
  401454:	inc    DWORD PTR [eax-0x761a1b4b]
  40145a:	add    BYTE PTR [eax],al
  40145c:	add    BYTE PTR ds:0xffe228c9,bl
  401462:	add    bh,bh
  401464:	add    BYTE PTR [eax],bh
  401466:	fnstenv [ebx-0x4f]
  401469:	(bad)  
  40146a:	inc    DWORD PTR [eax]
  40146c:	int3   
  40146d:	adc    DWORD PTR es:[edi],ecx
  401470:	push   edx
  401471:	add    BYTE PTR [eax],al
  401473:	(bad)  
  401474:	(bad)  
  401475:	jg     0x40140b
  401477:	stos   BYTE PTR es:[edi],al
  401478:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401479:	or     esp,0x0
  40147c:	add    BYTE PTR [ebp+0xc0d6ed],ch
  401482:	add    BYTE PTR [eax],al
  401484:	mov    DWORD PTR [ebp*2-0x4783],edi
  40148b:	(bad)  
  40148c:	jmp    FWORD PTR [ecx+0x90186b]
  401492:	add    bh,bh
  401494:	mov    ecx,ecx
  401496:	inc    ebp
  401497:	call   0xff401551
  40149c:	push   edx
  40149e:	or     eax,0x838327eb
  4014a3:	(bad)  
  4014a4:	inc    DWORD PTR [esi]
  4014a6:	aas    
  4014a7:	add    ebx,ebp
  4014a9:	int3   
  4014aa:	(bad)  
  4014ab:	inc    DWORD PTR [ebx-0x7116b5d5]
  4014b1:	dec    esp
  4014b3:	add    bh,bh
  4014b5:	test   DWORD PTR [edi],esi
  4014b7:	mov    ebx,0x83ff03
  4014bc:	add    BYTE PTR [ebx+0x39],ah
  4014bf:	out    dx,al
  4014c0:	pop    ds
  4014c1:	(bad)  
  4014c2:	inc    DWORD PTR [eax]
  4014c4:	mov    DWORD PTR [edx-0xf],edx
  4014c7:	mov    DWORD PTR [ecx],edi
  4014c9:	inc    DWORD PTR [ebx-0x69480034]
  4014cf:	imul   DWORD PTR [esi-0x7c00ff01]
  4014d5:	push   es
  4014d6:	dec    edi
  4014d7:	push   esi
  4014d8:	jmp    0x4014da
  4014da:	int3   
  4014db:	dec    DWORD PTR [ecx-0x40b7bc62]
  4014e1:	add    bh,bh
  4014e3:	inc    DWORD PTR [ebx+0x6a8e959a]
  4014e9:	add    BYTE PTR [eax],al
  4014eb:	(bad)  
  4014ec:	jmp    FWORD PTR [esi-0x5fbd68]
  4014f2:	inc    DWORD PTR [eax]
  4014f4:	push   DWORD PTR [ebx-0x96bfc4]
  4014fa:	dec    esp
  4014fc:	add    BYTE PTR [edx-0xa9a193],ch
  401502:	(bad)  
  401503:	inc    DWORD PTR [eax]
  401505:	aas    
  401506:	xor    ch,BYTE PTR [edx-0x36]
  401509:	(bad)  
  40150a:	(bad)  
  40150b:	inc    DWORD PTR [ebx-0x22ea72c2]
  401511:	add    BYTE PTR [ebx+0x3f3183ff],al
  401517:	pop    edx
  401518:	js     0x40149d
  40151a:	(bad)  
  40151b:	(bad)  
  40151c:	call   edi
  40151e:	xor    al,0x5
  401520:	mov    edx,0xffff0000
  401525:	cwde   
  401526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401527:	push   ebx
  401528:	les    eax,FWORD PTR [eax]
  40152a:	mov    edi,edi
  40152c:	add    ch,ch
  40152e:	loopne 0x401505
  401530:	jg     0x4014b5
  401532:	dec    esp
  401534:	(bad)  
  401535:	mov    eax,0xccbce173
  40153a:	add    bh,bh
  40153c:	int3   
  40153d:	aam    0x27
  40153f:	outs   dx,BYTE PTR ds:[esi]
  401540:	fild   WORD PTR [eax]
  401542:	inc    DWORD PTR [ebx-0x69e50101]
  401548:	pushf  
  401549:	cmp    edi,0x0
  40154c:	(bad)  
  40154d:	mov    edx,0xff875f59
  401552:	inc    DWORD PTR [eax]
  401554:	jmp    FWORD PTR [eax+0x37]
  401557:	enter  0x2d,0x83
  40155b:	mov    DWORD PTR [eax],eax
  40155d:	ins    DWORD PTR es:[edi],dx
  40155e:	push   ecx
  40155f:	sbb    al,BYTE PTR [ebx]
  401561:	int3   
  401562:	(bad)  
  401563:	inc    DWORD PTR [ebx+0x56f48372]
  401569:	inc    DWORD PTR [ebx+0x2af600ff]
  40156f:	shr    DWORD PTR [ecx+0x83ffcc],0x42
  401576:	sub    BYTE PTR [ebx-0x333313],0x83
  40157d:	nop
  40157e:	clc    
  40157f:	(bad)
  401583:	cmp    edi,0xffffff9a
  401586:	sbb    ch,bl
  401588:	sub    al,BYTE PTR [eax]
  40158a:	(bad)  
  40158b:	(bad)  
  40158c:	call   FWORD PTR [ecx+0x59]
  40158f:	pop    eax
  401590:	lods   al,BYTE PTR ds:[esi]
  401591:	(bad)  
  401592:	dec    DWORD PTR [ecx-0x1ba8ec00]
  401598:	repz inc DWORD PTR [eax]
  40159b:	add    bh,bh
  40159d:	es clc 
  40159f:	pop    ebx
  4015a0:	xor    BYTE PTR [eax],al
  4015a2:	inc    DWORD PTR [eax]
  4015a4:	call   ebp
  4015a6:	popf   
  4015a7:	stos   DWORD PTR es:[edi],eax
  4015a8:	arpl   WORD PTR [ebx-0x23000100],ax
  4015ae:	pop    ebp
  4015af:	div    BYTE PTR [edx-0x76003301]
  4015b5:	call   0xff00:0xff94e90d
  4015bc:	add    BYTE PTR [edi-0x76544600],al
  4015c2:	int3   
  4015c3:	inc    DWORD PTR [eax]
  4015c5:	jmp    0x40162d
  4015c7:	clc    
  4015c8:	mov    edi,?
  4015ca:	inc    DWORD PTR [eax]
  4015cc:	add    BYTE PTR [ecx-0x9b5296],ah
  4015d2:	inc    DWORD PTR [eax]
  4015d4:	add    BYTE PTR [ebx],dl
  4015d6:	cs (bad) 
  4015d9:	(bad)  
  4015da:	inc    DWORD PTR [ebx+0x4298e83]
  4015e0:	push   esi
  4015e1:	(bad)  
  4015e2:	dec    esp
  4015e4:	add    BYTE PTR [ecx-0x1f],cl
  4015e7:	mov    esi,0xff89ff79
  4015ec:	and    DWORD PTR [ebx],0xffffffb7
  4015ef:	xor    esp,DWORD PTR [edx-0xff0100]
  4015f5:	jnp    0x4015c4
  4015f7:	push   cs
  4015f8:	jne    0x4015fa
  4015fa:	inc    DWORD PTR [eax]
  4015fc:	int3   
  4015fd:	fxch   st(3)
  4015ff:	mov    ds:0xffffd8,eax
  401604:	add    BYTE PTR [edi-0x852bb8],ch
  40160a:	add    bh,bh
  40160c:	add    BYTE PTR [ecx-0x25],cl
  40160f:	pop    ecx
  401610:	lds    eax,FWORD PTR [ebx+0x28898383]
  401616:	sbb    eax,0xff00f8c3
  40161b:	(bad)  
  40161c:	(bad)  
  40161d:	cld    
  40161e:	mov    ds:0xff8349a0,eax
  401623:	(bad)  
  401624:	(bad)  
  401625:	fnstenv [ecx-0x25]
  401628:	and    edi,edi
  40162a:	(bad)  
  40162b:	(bad)  
  40162c:	jmp    DWORD PTR [ebx-0x4]
  40162f:	inc    esp
  401630:	xchg   ebx,eax
  401631:	inc    DWORD PTR [ebx+0x5acbff00]
  401637:	and    eax,0xff8921
  40163c:	add    BYTE PTR [esi+eiz*4+0x6f],bh
  401640:	mov    ah,0x89
  401642:	add    BYTE PTR [ebx+0x409a75ff],al
  401648:	or     eax,0xff00cc
  40164d:	sbb    ch,cl
  40164f:	syscall 
  401651:	dec    DWORD PTR [ecx+0x3fdcff00]
  401657:	lahf   
  401658:	outs   dx,BYTE PTR ds:[esi]
  401659:	inc    DWORD PTR [ebx+0x490bff00]
  40165f:	sub    DWORD PTR [edi+edi*8],0xffffffff
  401663:	int3   
  401664:	add    BYTE PTR [esi],dh
  401666:	dec    esi
  401667:	(bad)  
  401668:	ror    ah,cl
  40166a:	add    bh,bh
  40166c:	add    BYTE PTR [ebx],dh
  40166e:	pushf  
  40166f:	jne    0x401617
  401671:	add    bh,bh
  401673:	(bad)  
  401674:	(bad)  
  401675:	mov    edx,0xff6f7716
  40167a:	inc    DWORD PTR [eax]
  40167c:	mov    eax,ebx
  40167e:	jg     0x40168e
  401680:	repnz add DWORD PTR [eax],0xffffff89
  401684:	add    BYTE PTR [esi],dh
  401686:	pop    ds
  401687:	aaa    
  401688:	jns    0x40168a
  40168a:	add    BYTE PTR [eax],al
  40168c:	(bad)  
  40168d:	fldenv [ecx]
  40168f:	imul   edi,DWORD PTR [edi+edi*8+0x0],0xffffffff
  401694:	add    BYTE PTR [ebp+0x1a],al
  401697:	fisttp WORD PTR [edx]
  401699:	dec    DWORD PTR [ecx-0x2715ff77]
  40169f:	fidivr DWORD PTR [ebx-0xff34]
  4016a5:	push   ds
  4016a6:	(bad)  
  4016a8:	loopne 0x401633
  4016aa:	add    bh,bh
  4016ac:	call   ecx
  4016ae:	adc    eax,0xffffad91
  4016b3:	mov    edi,edi
  4016b5:	out    0xc3,eax
  4016b7:	jmp    0xa3ff:0xff00ffd6
  4016be:	(bad)  
  4016bf:	ins    BYTE PTR es:[edi],dx
  4016c0:	pusha  
  4016c1:	add    bh,bh
  4016c3:	cmp    edi,0x48
  4016c6:	pop    ebp
  4016c7:	rcl    DWORD PTR [eax-0x1],0xff
  4016cb:	add    bh,bh
  4016cd:	repnz and BYTE PTR [eax+0x57],bh
  4016d1:	int3   
  4016d2:	inc    DWORD PTR [eax]
  4016d4:	call   DWORD PTR [ebp+0x43]
  4016d7:	inc    ebp
  4016d8:	xlat   BYTE PTR ds:[ebx]
  4016d9:	add    DWORD PTR [eax],0xffffff89
  4016dc:	call   FWORD PTR [ebx*2+0x839cb4]
  4016e3:	inc    DWORD PTR [eax]
  4016e5:	repz mov dx,0xffd6
  4016ea:	dec    DWORD PTR [ecx-0x23720e00]
  4016f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f1:	add    BYTE PTR [eax],al
  4016f3:	(bad)  
  4016f4:	push   DWORD PTR [eax+0x3e]
  4016f7:	popf   
  4016f8:	out    0x0,eax
  4016fa:	add    bh,bh
  4016fc:	int3   
  4016fd:	mov    bh,0xf8
  4016ff:	xchg   ecx,eax
  401700:	adc    eax,0xffcc0000
  401705:	(bad)  
  401706:	jmp    0xff40c1d1
  40170b:	add    bh,bh
  40170d:	int3   
  40170e:	jmp    0x4016ed
  401710:	sub    eax,0x83ff0000
  401715:	sbb    DWORD PTR [ebp+0x1b],esi
  401718:	cmp    edi,edi
  40171a:	inc    DWORD PTR [eax]
  40171c:	int3   
  40171d:	jns    0x401795
  40171f:	dec    ebx
  401720:	les    eax,FWORD PTR [ebx+0x62ff8989]
  401726:	test   al,0xdf
  401728:	push   ebp
  401729:	add    bh,bh
  40172b:	inc    DWORD PTR [eax]
  40172d:	(bad)  
  40172e:	xchg   ecx,eax
  40172f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401730:	sbb    BYTE PTR [ecx+0x5f83ff00],cl
  401736:	dec    ecx
  401737:	add    eax,0xffff0014
  40173c:	add    BYTE PTR [esi-0xd],ah
  40173f:	(bad)  
  401741:	add    BYTE PTR [ecx+0x396a0000],cl
  401747:	cld    
  401748:	add    al,BYTE PTR [eax]
  40174a:	(bad)  
  40174b:	dec    DWORD PTR [ecx+0x1910b9ef]
  401751:	add    BYTE PTR [ecx-0x23200000],cl
  401757:	pusha  
  401758:	imul   ecx,esp,0x70ff00ff
  40175e:	mov    al,gs:0xffffff56
  401764:	(bad)  
  401765:	jp     0x401719
  401767:	daa    
  401768:	xor    al,0x0
  40176a:	int3   
  40176b:	inc    DWORD PTR [eax]
  40176d:	mov    al,0xf7
  40176f:	sbb    ebp,0xff00ffff
  401775:	pop    esi
  401776:	or     eax,0xff005149
  40177b:	int3   
  40177c:	add    BYTE PTR [edi],cl
  40177e:	test   DWORD PTR [esi-0x7cff33],esi
  401784:	jmp    DWORD PTR [ebp-0x68c12d]
  40178a:	(bad)  
  40178b:	inc    DWORD PTR [ebx-0x1a0dd6c3]
  401791:	int3   
  401792:	add    bh,bh
  401794:	int3   
  401795:	add    al,0x31
  401797:	push   0x42
  401799:	inc    DWORD PTR [ebx-0x2e9a0001]
  40179f:	loop   0x4017be
  4017a1:	add    BYTE PTR [eax],al
  4017a3:	cmp    edi,0xffffffaa
  4017a6:	bound  ebx,QWORD PTR [edx+ebp*2-0x1]
  4017aa:	inc    DWORD PTR [eax]
  4017ac:	(bad)  
  4017ad:	fisubr WORD PTR [edx-0x7c82fa]
  4017b3:	int3   
  4017b4:	and    DWORD PTR [ecx],0xffffff9f
  4017b7:	mov    ebp,0xffff8917
  4017bc:	int3   
  4017bd:	or     eax,0xffa0fe80
  4017c2:	(bad)  
  4017c3:	inc    DWORD PTR [eax]
  4017c5:	aam    0x94
  4017c7:	jns    0x4017c3
  4017c9:	mov    edi,edi
  4017cb:	add    BYTE PTR [ecx-0xd2e3da5],cl
  4017d1:	add    bh,bh
  4017d3:	inc    DWORD PTR [eax]
  4017d5:	xchg   DWORD PTR [esi],esi
  4017d7:	push   ebp
  4017d8:	sub    DWORD PTR [eax],eax
  4017da:	add    bh,bh
  4017dc:	add    BYTE PTR ds:0xff6f377f,al
  4017e2:	(bad)  
  4017e3:	(bad)  
  4017e4:	dec    DWORD PTR [ecx+0x71]
  4017e7:	sbb    al,0x7c
  4017e9:	int3   
  4017ea:	add    BYTE PTR [ebx+0x41724dff],al
  4017f0:	inc    edi
  4017f1:	(bad)  
  4017f2:	(bad)  
  4017f3:	inc    DWORD PTR [eax]
  4017f5:	bound  eax,QWORD PTR [eax]
  4017f7:	je     0x40184c
  4017f9:	add    bh,bh
  4017fb:	add    bh,bh
  4017fd:	jae    0x401787
  4017ff:	test   DWORD PTR [ebp+0x83cc],0xea14f8d
  401809:	dec    esp
  40180b:	add    ah,cl
  40180d:	mov    edi,0xd7e256
  401812:	(bad)  
  401813:	(bad)  
  401814:	inc    DWORD PTR [eax+eax*1-0xb996]
  40181b:	cmp    edi,0x50
  40181e:	dec    ebx
  40181f:	mov    ds,WORD PTR [ecx-0x34]
  401822:	dec    esp
  401824:	add    dl,cl
  401826:	mov    al,0x65
  401828:	sar    bh,cl
  40182a:	add    BYTE PTR [eax],al
  40182c:	jmp    FWORD PTR [esi+0xd]
  40182f:	pop    ebx
  401830:	sti    
  401831:	add    DWORD PTR [eax],0x0
  401834:	int3   
  401835:	(bad)  
  401837:	out    0xc5,al
  401839:	inc    DWORD PTR [eax]
  40183b:	(bad)  
  40183c:	call   FWORD PTR [ecx-0x3]
  40183f:	push   0x63
  401841:	add    DWORD PTR [eax],0xffffff89
  401844:	jmp    DWORD PTR ds:0x24e10a
  40184a:	add    bh,bh
  40184c:	(bad)  
  40184d:	jns    0x401882
  40184f:	stc    
  401850:	lea    eax,[eax]
  401852:	cmp    edi,0xffffff83
  401855:	mov    eax,ds:0xff2d0af7
  40185a:	int3   
  40185b:	(bad)  
  40185c:	inc    DWORD PTR [ebx+esi*4+0x65]
  401860:	rol    DWORD PTR [eax],cl
  401862:	add    DWORD PTR [eax],0xffffffff
  401865:	scas   al,BYTE PTR es:[edi]
  401866:	and    al,0x9e
  401868:	jns    0x401869
  40186a:	add    bh,bh
  40186c:	mov    DWORD PTR [edi+eax*8+0xffccad],edx
  401873:	dec    DWORD PTR [ecx+0x5f6508ae]
  401879:	dec    DWORD PTR [ecx+0x4b96ccff]
  40187f:	push   eax
  401880:	and    eax,0x89ff83ff
  401885:	imul   esi,DWORD PTR [edi],0xffffffdb
  401888:	inc    ebp
  401889:	int3   
  40188a:	dec    esp
  40188c:	add    DWORD PTR [edx-0xdcd9b1],0x0
  401893:	cmp    edi,0x66
  401896:	(bad)  
  401897:	in     al,dx
  401898:	and    ecx,DWORD PTR [ecx+0x7affff89]
  40189e:	pop    eax
  40189f:	enter  0xffcf,0xff
  4018a3:	cmp    edi,0xffffff9b
  4018a6:	mov    BYTE PTR [edx],ah
  4018a8:	sbb    DWORD PTR [eax],eax
  4018aa:	add    BYTE PTR [eax],al
  4018ac:	int3   
  4018ad:	fldcw  WORD PTR [eax+0x60]
  4018b0:	jp     0x4018b1
  4018b2:	add    BYTE PTR [ecx+0x145d57cc],cl
  4018b8:	nop
  4018b9:	add    bh,bh
  4018bb:	inc    DWORD PTR [eax]
  4018bd:	idiv   DWORD PTR [ebp+0x1a]
  4018c0:	arpl   WORD PTR [ecx+0x48ff83ff],cx
  4018c6:	inc    ecx
  4018c7:	mov    bh,0xa5
  4018c9:	add    BYTE PTR [ebx+0x709cc83],al
  4018cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018d0:	jno    0x4018d2
  4018d2:	inc    DWORD PTR [eax]
  4018d4:	sbb    eax,0x6f
  4018d7:	lock inc eax
  4018d9:	add    BYTE PTR [eax],al
  4018db:	dec    DWORD PTR [ecx-0x6d5b7be3]
  4018e1:	mov    edi,edi
  4018e3:	(bad)  
  4018e4:	jmp    DWORD PTR [ebp-0xd02af3]
  4018ea:	add    BYTE PTR [ebx+0x338227ff],al
  4018f0:	or     BYTE PTR [eax],al
  4018f2:	add    bh,bh
  4018f4:	add    BYTE PTR [eax],dl
  4018f6:	inc    esi
  4018f7:	or     DWORD PTR [ebx],esi
  4018f9:	(bad)  
  4018fa:	(bad)  
  4018fb:	inc    DWORD PTR [eax]
  4018fd:	or     eax,0xff3d4074
  401902:	inc    DWORD PTR [eax]
  401904:	(bad)  
  401905:	jmp    0x83556e5d
  40190a:	mov    edi,edi
  40190c:	push   DWORD PTR [edi]
  40190e:	call   DWORD PTR [edi-0x17]
  401914:	push   ecx
  401916:	jge    0x4018ef
  401918:	mov    dl,0x83
  40191a:	(bad)  
  40191b:	inc    DWORD PTR [eax]
  40191d:	sahf   
  40191e:	jo     0x401993
  401920:	xrelease mov DWORD PTR [eax],eax
  401923:	add    BYTE PTR [eax],al
  401925:	pushf  
  401926:	push   cs
  401927:	mov    esp,0xffffff82
  40192c:	int3   
  40192d:	cdq    
  40192e:	in     al,dx
  40192f:	dec    edx
  401930:	aas    
  401931:	add    bh,bh
  401933:	cmp    edi,0x71
  401936:	sub    edx,DWORD PTR [esi]
  401938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401939:	inc    DWORD PTR [eax]
  40193b:	add    BYTE PTR [eax],al
  40193d:	pop    ebp
  40193e:	push   edi
  40193f:	ins    DWORD PTR es:[edi],dx
  401940:	mov    bl,0xff
  401942:	add    BYTE PTR [ebx+0x1df6ceff],al
  401948:	ud0    eax,DWORD PTR [ebx+0x69edffff]
  40194f:	daa    
  401950:	jbe    0x401951
  401952:	add    BYTE PTR [eax],al
  401954:	mov    DWORD PTR [edi-0x29],edi
  401957:	pop    ebx
  401958:	in     eax,dx
  401959:	dec    esp
  40195b:	cmp    edi,0xffffffe8
  40195e:	add    DWORD PTR [edi-0x3376e1],edi
  401964:	dec    DWORD PTR [ebp+eiz*1-0x5]
  401968:	in     al,0x0
  40196a:	add    BYTE PTR [ecx-0x2c571b01],cl
  401970:	xor    DWORD PTR [eax],eax
  401972:	dec    esp
  401974:	int3   
  401975:	(bad)  
  401976:	jmp    0xffc3f8c6
  40197b:	inc    DWORD PTR [ebx+0x7d98dea0]
  401981:	add    BYTE PTR [eax],al
  401983:	int3   
  401984:	or     DWORD PTR [ebp-0x1f3e7b],0x0
  40198b:	(bad)  
  40198c:	dec    ebp
  40198e:	or     al,0x11
  401990:	retf   0xffff
  401993:	inc    DWORD PTR [eax]
  401995:	push   es
  401996:	cmp    al,BYTE PTR [ebx-0x3376b4]
  40199c:	int3   
  40199d:	xchg   ecx,eax
  40199e:	test   eax,0xe69b
  4019a3:	or     esp,0x46
  4019a6:	xchg   ecx,eax
  4019a7:	xor    ebx,DWORD PTR [ecx+0x0]
  4019aa:	inc    DWORD PTR [eax]
  4019ac:	call   DWORD PTR [ecx+ebp*1-0x68]
  4019b0:	add    DWORD PTR [ebx+0x1400ccff],0x6fba0a
  4019ba:	add    bh,bh
  4019bc:	(bad)  
  4019bd:	cmp    eax,0xff7dc8cd
  4019c2:	inc    DWORD PTR [eax]
  4019c4:	add    BYTE PTR [ecx],dl
  4019c6:	dec    esi
  4019c7:	sahf   
  4019c8:	jo     0x4019ca
  4019ca:	add    bh,bh
  4019cc:	call   FWORD PTR [edi-0x6ed50e]
  4019d2:	add    DWORD PTR [ebx-0x5fa92701],0xffffff81
  4019d9:	add    ah,cl
  4019db:	cmp    edi,0x77
  4019de:	repz cld 
  4019e0:	jp     0x4019e1
  4019e2:	int3   
  4019e3:	add    BYTE PTR [eax],al
  4019e5:	lock cld 
  4019e7:	mov    al,ds:0xff8383f2
  4019ec:	push   esi
  4019ee:	iret   
  4019ef:	cmp    al,BYTE PTR [edi+edi*8-0x7e007c01]
  4019f6:	mul    DWORD PTR ds:0xff83cc7c
  4019fc:	call   DWORD PTR [ebp+0x12]
  4019ff:	inc    ebx
  401a00:	dec    esp
  401a02:	(bad)  
  401a03:	dec    DWORD PTR [ecx+0x11085c42]
  401a09:	add    BYTE PTR [eax],al
  401a0b:	int3   
  401a0c:	(bad)  
  401a0d:	jl     0x401a8e
  401a0f:	sbb    al,0x4e
  401a11:	inc    DWORD PTR [eax]
  401a13:	inc    DWORD PTR [eax]
  401a15:	sub    BYTE PTR [eax],0x52
  401a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a19:	inc    DWORD PTR [eax]
  401a1b:	inc    DWORD PTR [eax]
  401a1d:	dec    ebx
  401a1e:	arpl   bp,dx
  401a20:	repnz or esp,0xffffffff
  401a24:	inc    DWORD PTR [ecx]
  401a26:	mov    esi,edx
  401a28:	rol    DWORD PTR [eax],cl
  401a2a:	inc    DWORD PTR [eax]
  401a2c:	int3   
  401a2d:	jns    0x401a7b
  401a2f:	push   0xffff0043
  401a34:	jmp    DWORD PTR [esi-0x3c]
  401a37:	jle    0x401a83
  401a39:	add    DWORD PTR [eax],0xffffffff
  401a3c:	jmp    FWORD PTR [ecx+0x7d]
  401a3f:	fisub  DWORD PTR [edi-0x7cff0001]
  401a45:	dec    esp
  401a46:	jnp    0x401a63
  401a48:	cld    
  401a49:	(bad)  
  401a4a:	inc    DWORD PTR [ebx-0x10473a77]
  401a50:	in     eax,dx
  401a51:	(bad)  
  401a52:	inc    DWORD PTR [eax]
  401a54:	add    BYTE PTR [ecx+ebp*8+0x13],ch
  401a58:	mov    es,WORD PTR [eax]
  401a5a:	or     DWORD PTR [ecx-0x13c09634],0xffffffe8
  401a61:	cmp    edi,0xffffff83
  401a64:	add    BYTE PTR [esi-0x539ab0],bl
  401a6a:	add    BYTE PTR [ebx+0x623d6d00],al
  401a70:	add    BYTE PTR [eax],0xff
  401a73:	mov    DWORD PTR [ebx-0x339ed441],eax
  401a79:	(bad)  
  401a7a:	(bad)  
  401a7b:	(bad)  
  401a7c:	inc    edi
  401a7e:	pushw  cs
  401a80:	push   es
  401a81:	int3   
  401a82:	mov    DWORD PTR [eax],eax
  401a84:	call   FWORD PTR [ebx+0x51]
  401a87:	mov    edi,0xccffff1e
  401a8c:	add    bh,al
  401a8e:	add    eax,0xffdc75
  401a93:	or     esp,0x40
  401a96:	sub    eax,0xff83d9fc
  401a9b:	add    bh,bh
  401a9d:	xor    bh,BYTE PTR [edi+0x34]
  401aa0:	push   edi
  401aa1:	inc    DWORD PTR [eax]
  401aa3:	add    bh,bh
  401aa5:	aad    0xe3
  401aa7:	icebp  
  401aa8:	dec    esi
  401aa9:	add    ah,cl
  401aab:	inc    DWORD PTR [eax]
  401aad:	hlt    
  401aae:	imul   esi,DWORD PTR [eax+0x8930],0xf7a6e600
  401ab8:	loopne 0x401ab9
  401aba:	add    DWORD PTR [ebx+0x31da9300],0x2d
  401ac1:	inc    DWORD PTR [eax]
  401ac3:	cmp    edi,0x5e
  401ac6:	sbb    DWORD PTR [eax],ecx
  401ac8:	enter  0xff,0x89
  401acc:	add    BYTE PTR [ebx-0x7fe90f],dl
  401ad2:	add    ah,cl
  401ad4:	call   FWORD PTR [edi+0x6a]
  401ad7:	xchg   esp,eax
  401ad8:	fild   WORD PTR [eax]
  401ada:	add    bh,bh
  401adc:	mov    DWORD PTR [ecx+0x12],edx
  401adf:	and    BYTE PTR [eax+eax*1-0x67ff3301],0x4
  401ae7:	mov    edx,0x89ff83e6
  401aec:	cmp    esi,0xffffffbc
  401aef:	jne    0x401ad4
  401af1:	(bad)  
  401af2:	inc    DWORD PTR [eax]
  401af4:	add    ah,al
  401af6:	or     esi,eax
  401af8:	xchg   ecx,eax
  401af9:	add    bh,bh
  401afb:	int3   
  401afc:	jmp    FWORD PTR [edi-0x4e0fcb]
  401b02:	int3   
  401b03:	inc    DWORD PTR [eax]
  401b05:	fst    QWORD PTR [esi-0x337cf776]
  401b0b:	add    BYTE PTR [eax],al
  401b0d:	je     0x401b05
  401b0f:	jno    0x401adb
  401b11:	add    BYTE PTR [eax],al
  401b13:	mov    DWORD PTR [eax],eax
  401b15:	(bad)  
  401b16:	jp     0x401af9
  401b18:	ins    DWORD PTR es:[edi],dx
  401b19:	inc    DWORD PTR [eax]
  401b1b:	add    DWORD PTR [eax],0xffffffcf
  401b1e:	sbb    al,0x89
  401b20:	add    al,0x0
  401b22:	mov    edi,edi
  401b24:	add    BYTE PTR [esi],al
  401b26:	aaa    
  401b27:	das    
  401b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b29:	mov    edi,edi
  401b2b:	inc    DWORD PTR [eax]
  401b2d:	jge    0x401b55
  401b2f:	pop    ecx
  401b30:	lods   al,BYTE PTR ds:[esi]
  401b31:	add    bh,bh
  401b33:	add    BYTE PTR [eax],al
  401b35:	jb     0x401b00
  401b37:	add    eax,0xccffcc8a
  401b3c:	add    cl,ch
  401b3e:	xchg   BYTE PTR ds:0xffffffbd,ch
  401b44:	inc    DWORD PTR [esi]
  401b46:	mov    ah,0xfe
  401b48:	(bad)  
  401b49:	mov    edi,edi
  401b4b:	add    BYTE PTR [eax],al
  401b4d:	xchg   ecx,eax
  401b4e:	xchg   BYTE PTR [eax],ah
  401b50:	jg     0x401b52
  401b52:	add    bh,bh
  401b54:	inc    DWORD PTR [ecx+0x77]
  401b57:	mov    ecx,0xffffff61
  401b5c:	dec    DWORD PTR [ebx]
  401b5e:	jb     0x401b40
  401b60:	jbe    0x401b61
  401b62:	inc    DWORD PTR [eax]
  401b64:	mov    DWORD PTR [edi],edx
  401b66:	pop    ss
  401b67:	xchg   esi,eax
  401b68:	popa   
  401b69:	add    BYTE PTR [ebx+0x49308983],al
  401b6f:	adc    eax,0xff8355
  401b74:	jmp    DWORD PTR ds:0x8438ef
  401b7a:	add    BYTE PTR [ebx-0x2252e177],al
  401b80:	jp     0x401b4e
  401b82:	inc    DWORD PTR [ebx+0x5aae2983]
  401b88:	ins    DWORD PTR es:[edi],dx
  401b89:	inc    DWORD PTR [eax]
  401b8b:	dec    esp
  401b8d:	imul   ebp,DWORD PTR [edi],0xffae9c
  401b93:	cmp    edi,0x3a
  401b96:	pop    ds
  401b97:	hlt    
  401b98:	inc    edx
  401b99:	(bad)  
  401b9a:	(bad)  
  401b9b:	(bad)  
  401b9c:	(bad)  
  401b9d:	fdivrp st(2),st
  401b9f:	mov    al,0xcc
  401ba1:	add    DWORD PTR [eax],0x0
  401ba4:	jmp    FWORD PTR [esi-0x769ebc68]
  401baa:	add    BYTE PTR [ebx-0x440d7a34],al
  401bb0:	sbb    eax,0xffccffff
  401bb5:	das    
  401bb6:	test   BYTE PTR [ebx+0xffff36],0xff
  401bbd:	test   DWORD PTR [ecx-0x6a8],ecx
  401bc3:	(bad)  
  401bc4:	dec    DWORD PTR [esi+0x2214db]
  401bca:	add    BYTE PTR [eax],al
  401bcc:	jmp    edx
  401bce:	sub    BYTE PTR [ebp+0xffcc8e],al
  401bd4:	call   FWORD PTR [ebx]
  401bd6:	jns    0x401bcb
  401bd8:	adc    bh,bh
  401bda:	add    bh,bh
  401bdc:	int3   
  401bdd:	nop
  401bde:	leave  
  401bdf:	xor    ah,ch
  401be1:	add    bh,bh
  401be3:	mov    DWORD PTR [ebx-0x4c6e8bfb],eax
  401be9:	dec    esp
  401beb:	int3   
  401bec:	cmp    DWORD PTR [eax],0xfffffffd
  401bef:	inc    esi
  401bf0:	add    edi,edi
  401bf2:	inc    DWORD PTR [eax]
  401bf4:	call   FWORD PTR [esi-0x330f74ea]
  401bfa:	(bad)  
  401bfb:	dec    DWORD PTR [ecx+0x7e7471b8]
  401c01:	int3   
  401c02:	inc    DWORD PTR [eax]
  401c04:	mov    DWORD PTR [edi-0x7d],eax
  401c07:	pop    ss
  401c08:	xor    esp,ecx
  401c0a:	cmp    edi,0xffffffff
  401c0d:	cmp    al,0x20
  401c0f:	mov    bl,0xc5
  401c11:	or     esp,0x0
  401c14:	add    ah,dh
  401c16:	inc    ecx
  401c17:	shl    DWORD PTR [edx+0xcc00],1
  401c1d:	ror    BYTE PTR [edi+esi*1+0x43],1
  401c21:	(bad)  
  401c22:	(bad)  
  401c23:	(bad)  
  401c24:	inc    ebx
  401c26:	(bad)  
  401c27:	jg     0x401bf4
  401c29:	add    BYTE PTR [ebx+0x68afff89],al
  401c2f:	add    dl,bh
  401c31:	(bad)  
  401c32:	dec    DWORD PTR [ecx+0x2fb8caff]
  401c38:	or     bh,bh
  401c3a:	(bad)  
  401c3b:	(bad)  
  401c3c:	dec    ebp
  401c3e:	cli    
  401c3f:	les    ebp,FWORD PTR [edx-0x1]
  401c42:	inc    DWORD PTR [ebx+0x65fe2b83]
  401c48:	jge    0x401c49
  401c4a:	add    ah,cl
  401c4c:	cmp    DWORD PTR [eax+esi*4],0xffffffee
  401c50:	data16 add BYTE PTR [ecx+0x728683ff],cl
  401c57:	add    bl,bl
  401c59:	int3   
  401c5a:	add    BYTE PTR [eax],al
  401c5c:	int3   
  401c5d:	shl    ebp,cl
  401c5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c60:	add    esp,ecx
  401c62:	cmp    edi,0xffffff83
  401c65:	jo     0x401cb3
  401c67:	inc    esi
  401c68:	inc    DWORD PTR fs:[ebx+0x2d8dff00]
  401c6f:	shl    DWORD PTR [eax+eax*1],1
  401c72:	add    bh,bh
  401c74:	add    BYTE PTR [esi-0x247f0d],ch
  401c7a:	or     DWORD PTR [ecx+0xaf21c00],0x33
  401c81:	cmp    edi,0x0
  401c84:	int3   
  401c85:	add    eax,0xf40902
  401c8a:	dec    DWORD PTR [ecx+0x399ce4ff]
  401c90:	ret    0x83ff
  401c93:	add    DWORD PTR [eax],0xffffffbd
  401c96:	or     cl,BYTE PTR [esi-0xff7623]
  401c9c:	sub    DWORD PTR [edx+ebp*2-0xd4c3],0x0
  401ca4:	mov    DWORD PTR [ebp-0x72a28c],esp
  401caa:	mov    edi,edi
  401cac:	push   ecx
  401cae:	add    BYTE PTR [ecx],ch
  401cb0:	(bad)  
  401cb2:	add    BYTE PTR [eax],al
  401cb4:	add    BYTE PTR [edi+ebp*8-0x3300f27a],dl
  401cbb:	int3   
  401cbc:	int3   
  401cbd:	push   esi
  401cbe:	mov    ecx,DWORD PTR [esi+0xa2]
  401cc4:	dec    DWORD PTR [esi-0x4a]
  401cc7:	adc    esp,DWORD PTR [eax]
  401cc9:	cmp    edi,0xffffffff
  401ccc:	push   DWORD PTR [ebx-0x7c7c9d]
  401cd2:	add    bh,bh
  401cd4:	add    BYTE PTR [ecx+0x5d],al
  401cd7:	pop    esi
  401cd8:	pop    ss
  401cd9:	dec    DWORD PTR [ecx-0x2037007d]
  401cdf:	mov    dl,0x17
  401ce1:	(bad)  
  401ce2:	inc    DWORD PTR [ebx+0x12fab8ff]
  401ce8:	mov    al,BYTE PTR [eax]
  401cea:	add    bh,bh
  401cec:	sub    DWORD PTR [esi+0x13],0x42
  401cf0:	and    bh,bh
  401cf2:	add    bh,bh
  401cf4:	int3   
  401cf5:	jmp    0xff5da941
  401cfa:	or     DWORD PTR [ecx+0x509f90ff],0xffffffe3
  401d01:	add    DWORD PTR [eax],0x0
  401d04:	add    BYTE PTR [esi-0x35ec4b],dh
  401d0a:	dec    esp
  401d0c:	int3   
  401d0d:	ins    BYTE PTR es:[edi],dx
  401d0e:	fidivr DWORD PTR [eax]
  401d10:	dec    ecx
  401d11:	add    BYTE PTR [eax],al
  401d13:	add    ah,cl
  401d15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d16:	sub    al,0xf2
  401d18:	sti    
  401d19:	inc    DWORD PTR [ebx+0x5178ff83]
  401d1f:	retw   
  401d21:	dec    DWORD PTR [ecx-0x3d1f0000]
  401d27:	fstp   QWORD PTR [edx]
  401d29:	(bad)  
  401d2a:	inc    DWORD PTR [ebx+0x63c6e683]
  401d30:	jne    0x401d31
  401d32:	inc    DWORD PTR [eax]
  401d34:	inc    DWORD PTR [ebp+eax*1+0x77]
  401d38:	lea    eax,[eax]
  401d3a:	inc    DWORD PTR [eax]
  401d3c:	add    BYTE PTR [ebx+edx*1+0x35],dh
  401d40:	pop    esi
  401d41:	add    bh,bh
  401d43:	(bad)  
  401d44:	push   DWORD PTR [ebp-0x5a]
  401d47:	mov    cl,0x78
  401d49:	inc    DWORD PTR [eax]
  401d4b:	add    ah,cl
  401d4d:	add    esi,ebx
  401d4f:	in     al,0xfb
  401d51:	dec    esp
  401d53:	add    bh,bh
  401d55:	adc    ebp,DWORD PTR [ebp+0xcdd4]
  401d5b:	add    bh,bh
  401d5d:	push   ss
  401d5e:	ss inc eax
  401d60:	inc    ebx
  401d61:	inc    DWORD PTR [eax]
  401d63:	int3   
  401d64:	call   FWORD PTR [esi]
  401d66:	pop    esi
  401d67:	jbe    0x401d88
  401d69:	(bad)  
  401d6a:	(bad)  
  401d6b:	inc    DWORD PTR [eax]
  401d6d:	jl     0x401db2
  401d6f:	mov    edx,DWORD PTR [ebx-0xff0001]
  401d75:	imul   esi,DWORD PTR [edi],0x61
  401d78:	mov    edi,0x89ff8383
  401d7d:	arpl   WORD PTR [ecx-0x2d],di
  401d80:	loop   0x401d82
  401d82:	add    BYTE PTR [ebx-0x163daa00],al
  401d88:	scas   al,BYTE PTR es:[edi]
  401d89:	dec    esp
  401d8b:	add    BYTE PTR [eax],al
  401d8d:	mov    DWORD PTR [ebx-0xffb315],ebx
  401d93:	(bad)  
  401d94:	jmp    FWORD PTR [ebx]
  401d96:	add    ebp,0xffffff9c
  401d99:	add    BYTE PTR [ecx+0x18cf0083],cl
  401d9f:	jle    0x401dcb
  401da1:	(bad)  
  401da2:	(bad)  
  401da3:	(bad)  
  401da4:	jmp    ecx
  401da6:	test   BYTE PTR [edi-0x7c00ffb2],bh
  401dac:	mov    ecx,ecx
  401dae:	xor    al,0x2
  401db0:	jmp    0x3f1e38
  401db5:	cmp    eax,0xe6e568
  401dba:	add    BYTE PTR [ebx+0x5a432d00],al
  401dc0:	ins    BYTE PTR es:[edi],dx
  401dc1:	dec    DWORD PTR [ecx-0x4acc0100]
  401dc7:	pop    es
  401dc8:	push   0xffccffff
  401dcd:	fidiv  DWORD PTR [edi-0x16]
  401dd0:	in     al,dx
  401dd1:	add    DWORD PTR [eax],0xffffffff
  401dd4:	inc    DWORD PTR [esi+esi*2]
  401dd7:	pop    ebp
  401dd8:	fld    DWORD PTR [eax]
  401dda:	add    DWORD PTR [eax],0xffffffff
  401ddd:	or     esp,DWORD PTR [esi+0xff5346]
  401de3:	inc    DWORD PTR [eax]
  401de5:	sti    
  401de6:	aas    
  401de7:	sub    edx,esi
  401de9:	(bad)  
  401dea:	(bad)  
  401deb:	inc    DWORD PTR [eax]
  401ded:	sub    al,0xe8
  401def:	jns    0x401e3e
  401df1:	inc    DWORD PTR [eax]
  401df3:	add    bh,bh
  401df5:	sub    DWORD PTR [edx],esp
  401df7:	aaa    
  401df8:	pop    DWORD PTR [eax]
  401dfa:	mov    DWORD PTR [eax],eax
  401dfc:	push   DWORD PTR [eax+0x30dba7]
  401e02:	inc    DWORD PTR [eax]
  401e04:	add    ah,ch
  401e06:	inc    ebp
  401e07:	out    0xdb,eax
  401e09:	cmp    edi,0xffffffcc
  401e0c:	add    BYTE PTR [ebx],cl
  401e0e:	pop    edx
  401e0f:	out    0xb1,al
  401e11:	add    DWORD PTR [ebx+0x65c90000],0xffffff8b
  401e18:	bound  eax,QWORD PTR [eax]
  401e1a:	(bad)  
  401e1b:	inc    DWORD PTR [eax]
  401e1d:	sbb    eax,0xff4486c8
  401e22:	add    BYTE PTR [eax],al
  401e24:	call   DWORD PTR [edi-0x18966c]
  401e2a:	add    bh,bh
  401e2c:	dec    DWORD PTR [edi+0x7d]
  401e2f:	add    cl,cl
  401e31:	add    ah,cl
  401e33:	inc    DWORD PTR [ebx+0x57407cb4]
  401e39:	int3   
  401e3a:	(bad)  
  401e3b:	inc    DWORD PTR [eax]
  401e3d:	pushf  
  401e3e:	xchg   esp,eax
  401e3f:	adc    al,0x81
  401e41:	dec    esp
  401e43:	inc    DWORD PTR [eax]
  401e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e46:	nop
  401e47:	js     0x401e05
  401e49:	(bad)  
  401e4a:	(bad)  
  401e4b:	(bad)  
  401e4c:	inc    edi
  401e4e:	mov    cs,WORD PTR [edi]
  401e50:	mov    ch,0xff
  401e52:	add    ah,cl
  401e54:	(bad)  
  401e55:	call   0x89acc315
  401e5a:	int3   
  401e5b:	inc    DWORD PTR [eax]
  401e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e5e:	sub    ecx,DWORD PTR [edi+edx*8+0xff8900]
  401e65:	shl    cl,1
  401e67:	ds retf 0xccff
  401e6b:	mov    edi,edi
  401e6d:	cmp    al,0xe7
  401e6f:	jmp    0x82ff:0x89ff36
  401e76:	push   ecx
  401e77:	cmp    BYTE PTR [eax+0x8900ff],cl
  401e7d:	xor    al,0xdc
  401e7f:	loope  0x401ebb
  401e81:	add    DWORD PTR [eax],0xffffffff
  401e84:	inc    DWORD PTR [ecx]
  401e86:	xor    cl,cl
  401e88:	hlt    
  401e89:	dec    esp
  401e8b:	add    BYTE PTR [eax],al
  401e8d:	call   DWORD PTR [eax+ebx*4+0xc]
  401e91:	(bad)  
  401e92:	(bad)  
  401e93:	(bad)  
  401e94:	inc    DWORD PTR [ebp-0x52cb64]
  401e9a:	(bad)  
  401e9b:	(bad)  
  401e9c:	call   FWORD PTR [eax-0x7ce64a3e]
  401ea2:	(bad)  
  401ea3:	(bad)  
  401ea4:	push   DWORD PTR [ebx+0x15]
  401ea7:	repz fs (bad) 
  401eaa:	(bad)  
  401eab:	inc    DWORD PTR [ebx-0x77507ec5]
  401eb1:	(bad)  
  401eb2:	inc    DWORD PTR [eax]
  401eb4:	xor    DWORD PTR [edx],0xffffffc1
  401eb7:	inc    eax
  401eb8:	sti    
  401eb9:	dec    DWORD PTR [ecx+0x4f92ffff]
  401ebf:	or     cl,BYTE PTR [eax]
  401ec1:	add    BYTE PTR [ecx+0x2190ff00],cl
  401ec7:	sub    BYTE PTR [esi],0x89
  401eca:	dec    esp
  401ecc:	call   FWORD PTR [ecx-0x39]
  401ecf:	mov    ebx,0x838355
  401ed4:	dec    DWORD PTR [edx+0x50]
  401ed7:	test   al,0xe6
  401ed9:	add    BYTE PTR [eax],al
  401edb:	add    bh,bh
  401edd:	push   edi
  401ede:	retf   0x33e5
  401ee1:	dec    esp
  401ee3:	(bad)  
  401ee4:	inc    DWORD PTR [esi-0x33cf6c23]
  401eea:	(bad)  
  401eeb:	(bad)  
  401eec:	dec    eax
  401eee:	mov    bh,0xc4
  401ef0:	scas   eax,DWORD PTR es:[edi]
  401ef1:	int3   
  401ef2:	add    BYTE PTR [eax],al
  401ef4:	sbb    DWORD PTR [esi-0x17],0xffffff83
  401ef8:	ins    BYTE PTR es:[edi],dx
  401ef9:	cmp    edi,0xffffff83
  401efc:	or     DWORD PTR [edx-0x33166774],0xffffff83
  401f03:	(bad)  
  401f04:	jmp    DWORD PTR [edx+0x7c58ee]
  401f0a:	inc    DWORD PTR [ebx+0x40f770ff]
  401f10:	mov    cl,0xff
  401f12:	mov    edi,edi
  401f14:	adc    ebp,0xffffff8e
  401f17:	stc    
  401f18:	arpl   WORD PTR [eax],ax
  401f1a:	inc    DWORD PTR [eax]
  401f1c:	or     DWORD PTR [esi+eax*2-0x8491],0x0
  401f24:	int3   
  401f25:	jg     0x401f02
  401f27:	mov    DWORD PTR [eax-0x1],esi
  401f2a:	add    bh,bh
  401f2c:	add    BYTE PTR ds:0xfffe21c5,dl
  401f32:	add    BYTE PTR [eax],al
  401f34:	add    BYTE PTR [edi-0xb],bh
  401f37:	fistp  QWORD PTR [edi]
  401f39:	dec    DWORD PTR [ecx-0x3f1cff77]
  401f3f:	add    dl,BYTE PTR [ebp-0x7600ff7d]
  401f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f46:	out    dx,al
  401f47:	jl     0x401fa6
  401f49:	cmp    edi,0xffffff89
  401f4c:	int3   
  401f4d:	mov    al,ds:0x892703
  401f52:	int3   
  401f53:	int3   
  401f54:	add    dl,dl
  401f56:	retf   0xda27
  401f59:	int3   
  401f5a:	(bad)  
  401f5b:	(bad)  
  401f5c:	inc    esi
  401f5e:	pop    esp
  401f5f:	lahf   
  401f60:	iret   
  401f61:	add    DWORD PTR [ebx-0x71e10001],0xfffffff8
  401f68:	inc    DWORD PTR [eax]
  401f6a:	int3   
  401f6b:	add    bh,bh
  401f6d:	daa    
  401f6e:	pop    edi
  401f6f:	dec    ebx
  401f70:	test   bh,bh
  401f72:	add    bh,bh
  401f74:	mov    DWORD PTR [eax+0xdaaf06],edi
  401f7a:	(bad)  
  401f7b:	inc    DWORD PTR [ebx+0x3d4a6d1f]
  401f81:	add    bh,bh
  401f83:	add    ah,cl
  401f85:	(bad)  
  401f86:	fwait
  401f87:	out    0xfc,eax
  401f89:	add    DWORD PTR [eax],0xffffff83
  401f8c:	inc    esi
  401f8e:	dec    eax
  401f8f:	js     0x401fe1
  401f91:	(bad)  
  401f92:	dec    DWORD PTR [ecx+0x33401fff]
  401f98:	rol    DWORD PTR [eax],cl
  401f9a:	(bad)  
  401f9b:	inc    DWORD PTR [eax]
  401f9d:	shl    DWORD PTR [esi+0x7e],0x10
  401fa1:	add    BYTE PTR [eax],al
  401fa3:	(bad)  
  401fa4:	push   DWORD PTR [ebp-0xe9697b]
  401faa:	add    BYTE PTR [ecx+0x65342fff],cl
  401fb0:	mov    bl,0x0
  401fb2:	int3   
  401fb3:	int3   
  401fb4:	int3   
  401fb5:	lds    esi,FWORD PTR [edi-0xdc43]
  401fbb:	add    bh,bh
  401fbd:	xor    dl,BYTE PTR [esi+0x1d]
  401fc0:	add    al,BYTE PTR [ebx-0x447c0100]
  401fc6:	adc    BYTE PTR ds:0x89ccccfb,0xcc
  401fcd:	ja     0x401fd1
  401fcf:	push   cs
  401fd0:	sar    edi,1
  401fd2:	inc    DWORD PTR [eax]
  401fd4:	push   DWORD PTR [ebx+0x4a]
  401fd7:	aam    0xeb
  401fd9:	inc    DWORD PTR [ebx+0x6639ff00]
  401fdf:	xchg   BYTE PTR [edi+edi*8-0x7d],cl
  401fe3:	add    bh,bh
  401fe5:	loopne 0x401fe3
  401fe7:	adc    edi,DWORD PTR [ebp+0x0]
  401fea:	dec    DWORD PTR [ecx-0x11769601]
  401ff0:	add    eax,0x8389ff
  401ff5:	and    eax,0x6f49db
  401ffa:	inc    DWORD PTR [eax]
  401ffc:	dec    esp
  401ffe:	sahf   
  401fff:	lea    edx,[ebp+0x0]
  402002:	add    ah,cl
  402004:	or     DWORD PTR [ecx],0x7
  402007:	lahf   
  402008:	inc    edi
  402009:	inc    DWORD PTR [eax]
  40200b:	inc    DWORD PTR [eax]
  40200d:	inc    ebp
  40200e:	mov    esp,DWORD PTR [ecx+edx*1-0x3300ff01]
  402015:	dec    ebp
  402016:	not    BYTE PTR [ebx+edx*8-0x34]
  40201a:	inc    DWORD PTR [eax]
  40201c:	mov    DWORD PTR [ecx+eax*2+0x78],edx
  402020:	sar    edi,0xff
  402023:	mov    DWORD PTR [eax],eax
  402025:	push   ds
  402026:	pop    ecx
  402027:	in     al,dx
  402028:	int3   
  402029:	int3   
  40202a:	int3   
  40202b:	int3   
  40202c:	int3   
  40202d:	int3   
  40202e:	int3   
  40202f:	int3   
  402030:	jmp    FWORD PTR [ecx-0x7dff00c7]
  402036:	mov    ebx,0xacb4ff83
  40203b:	add    DWORD PTR [eax],0xffffff82
  40203e:	adc    BYTE PTR [eax],al
  402040:	inc    DWORD PTR [ebp-0x8000002]
  402046:	dec    esi
  402047:	inc    DWORD PTR [eax]
  402049:	lds    ecx,FWORD PTR [ebx-0x1]
  40204c:	mov    ebx,ecx
  40204e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40204f:	(bad)  
  402050:	jmp    FWORD PTR [ebp-0x29]
  402053:	add    bh,bh
  402055:	xchg   ebp,eax
  402056:	cli    
  402057:	(bad)  
  402058:	call   ebp
  40205a:	sbb    bh,bh
  40205c:	push   DWORD PTR [edx+0x43]
  40205f:	dec    esp
  402061:	add    ebx,ebx
  402063:	add    BYTE PTR [eax],al
  402065:	mov    bl,0x88
  402067:	cmp    edi,0xffffffa2
  40206a:	pop    eax
  40206b:	add    bh,bh
  40206d:	lods   al,BYTE PTR ds:[esi]
  40206e:	jmp    0x40206f
  402070:	(bad)  
  402071:	mov    edi,0x9fccfffe
  402076:	je     0x402077
  402078:	sbb    DWORD PTR [esp+eax*2-0x1],0xffffff83
  40207d:	and    DWORD PTR [eax],edx
  40207f:	(bad)  
  402080:	(bad)  
  402081:	mov    ecx,0x4989ffd8
  402086:	call   0x83ff:0x7ae1ff00
  40208d:	call   0x8373:0x6500ff09
  402094:	adc    DWORD PTR [edi+eax*4-0x1],0x0
  402099:	xchg   edi,eax
  40209a:	mov    bl,0xff
  40209c:	(bad)  
  40209d:	in     al,dx
  40209e:	in     eax,dx
  40209f:	add    BYTE PTR [ecx-0xff4923],cl
  4020a5:	inc    ebx
  4020a6:	inc    ecx
  4020a7:	(bad)  
  4020a8:	jmp    DWORD PTR [eax]
  4020aa:	cmp    edi,0xff7e4f89
  4020b0:	add    BYTE PTR [ebp-0x1c],ah
  4020b3:	(bad)  
  4020b4:	call   DWORD PTR [ebx+0x77ccffc8]
  4020ba:	push   cs
  4020bb:	inc    DWORD PTR [ebx-0x6d49]
  4020c1:	push   eax
  4020c2:	sbb    bh,bh
  4020c4:	push   DWORD PTR [edi+0x65]
  4020c7:	(bad)  
  4020c8:	jmp    FWORD PTR [ebp-0x14007c3f]
  4020ce:	(bad)  
  4020d1:	fmul   QWORD PTR [eax-0x655c7c01]
  4020d7:	add    bh,bh
  4020d9:	xchg   esi,esp
  4020db:	add    BYTE PTR [eax],al
  4020dd:	xchg   ebx,eax
  4020de:	daa    
  4020df:	add    BYTE PTR [ecx+0x78c0],cl
  4020e5:	xor    BYTE PTR [edx-0x1],0x0
  4020e9:	mov    DWORD PTR [edi+0x0],esp
  4020ec:	call   FWORD PTR [edi+0x12]
  4020ef:	add    bh,bh
  4020f1:	and    al,0x61
  4020f3:	add    bh,bh
  4020f5:	jno    0x40213b
  4020f7:	(bad)  
  4020f8:	(bad)  
  4020f9:	jp     0x402150
  4020fb:	int3   
  4020fc:	add    dh,cl
  4020fe:	cmc    
  4020ff:	inc    DWORD PTR [eax]
  402101:	jg     0x4020db
  402103:	add    bh,bh
  402105:	sub    eax,ebp
  402107:	dec    esp
  402109:	mov    BYTE PTR [ebp-0x34],dl
  40210c:	(bad)  
  40210d:	jmp    0x7d3faa37
  402112:	(bad)  
  402114:	call   FWORD PTR [ecx-0x11]
  402117:	add    bh,bh
  402119:	mov    ch,0x68
  40211b:	inc    DWORD PTR [eax]
  40211d:	xchg   ebx,eax
  40211e:	aas    
  40211f:	inc    DWORD PTR [eax]
  402121:	cld    
  402122:	pop    eax
  402123:	add    BYTE PTR [eax],al
  402125:	hlt    
  402126:	lds    eax,FWORD PTR [eax]
  402128:	int3   
  402129:	cdq    
  40212a:	imul   edi,edi,0x0
  40212d:	iret   
  40212e:	mov    al,ds:0xa7a100ff
  402133:	add    DWORD PTR [eax],0x55
  402136:	or     al,0x0
  402138:	add    edi,0xffffffc5
  40213b:	inc    DWORD PTR [ebx-0x333c0b]
  402141:	mov    dh,0xa0
  402143:	add    bh,bh
  402145:	stc    
  402146:	add    BYTE PTR [eax],0xff
  402149:	rcl    edx,0x89
  40214c:	sub    DWORD PTR [edx],0xffffff87
  40214f:	add    bh,bh
  402151:	jge    0x4021be
  402153:	add    BYTE PTR [eax],al
  402155:	pop    eax
  402156:	and    al,0xff
  402158:	call   DWORD PTR [edi+0x32]
  40215b:	int3   
  40215c:	dec    DWORD PTR [eax]
  40215e:	add    bh,bh
  402160:	jmp    DWORD PTR [esi+0x460000ea]
  402166:	es (bad) 
  402168:	call   FWORD PTR [ebx-0x7d]
  40216b:	add    BYTE PTR [eax],al
  40216d:	pop    es
  40216e:	xor    eax,DWORD PTR [ebx-0x64ea7d]
  402174:	jmp    FWORD PTR [edx-0x24007ca6]
  40217a:	in     al,0x0
  40217c:	push   ebx
  40217e:	mov    BYTE PTR [ebx-0x7c15c901],al
  402184:	add    BYTE PTR [eax],al
  402186:	push   ebx
  402187:	add    BYTE PTR [ebx-0xe978],al
  40218d:	pop    esp
  40218e:	idiv   edi
  402190:	jmp    FWORD PTR [eax+0x350083fb]
  402196:	jae    0x402197
  402198:	or     DWORD PTR [edi],0xffffffc4
  40219b:	add    bh,bh
  40219d:	lods   al,BYTE PTR ds:[esi]
  40219e:	inc    ebp
  40219f:	inc    DWORD PTR [eax]
  4021a1:	add    DWORD PTR [ebx-0x31fd0100],ebx
  4021a7:	(bad)  
  4021a8:	dec    esi
  4021aa:	addr16 int3 
  4021ac:	call   FWORD PTR [eax]
  4021ae:	out    0x83,eax
  4021b0:	push   DWORD PTR [esi+0x10]
  4021b3:	int3   
  4021b4:	(bad)  
  4021b5:	cli    
  4021b6:	jmp    0x4021b7
  4021b8:	call   FWORD PTR [ebx-0x70ff0010]
  4021be:	ror    esp,0xff
  4021c1:	jge    0x40223a
  4021c3:	inc    DWORD PTR [eax]
  4021c5:	sub    eax,0x8dffcc5c
  4021ca:	scas   al,BYTE PTR es:[edi]
  4021cb:	dec    DWORD PTR [ecx-0x76d274]
  4021d1:	mov    DWORD PTR [eax-0x1],esp
  4021d4:	jmp    DWORD PTR [eax+0x3bccff34]
  4021da:	mov    DWORD PTR [eax],eax
  4021dc:	call   FWORD PTR [esi+0x3]
  4021df:	cmp    edi,0xffffff92
  4021e2:	cmp    eax,0x31fa00ff
  4021e7:	add    BYTE PTR [eax],al
  4021e9:	retf   
  4021ea:	inc    esp
  4021eb:	add    BYTE PTR [ebx+0xff35b2],al
  4021f1:	mov    edi,0xe900009b
  4021f6:	pop    ss
  4021f7:	dec    esp
  4021f9:	(bad)  
  4021fb:	mov    edi,edi
  4021fd:	mov    al,0x5
  4021ff:	inc    DWORD PTR [eax]
  402201:	jp     0x402195
  402203:	(bad)  
  402204:	inc    DWORD PTR [eax]
  402206:	out    dx,al
  402207:	(bad)  
  402208:	jmp    DWORD PTR [ecx+0x1e]
  40220b:	add    ah,cl
  40220d:	retf   0xca
  402210:	push   DWORD PTR [eax+0x1]
  402213:	add    bh,bh
  402215:	xor    DWORD PTR [ebx+0x0],ebx
  402218:	inc    DWORD PTR [eax+0x7b]
  40221b:	add    bh,bh
  40221d:	mov    dl,0x8c
  40221f:	inc    DWORD PTR [eax]
  402221:	or     ch,BYTE PTR [ebp-0x34]
  402224:	call   DWORD PTR [ebx+0x1dff003e]
  40222a:	dec    ebx
  40222b:	inc    DWORD PTR [eax]
  40222d:	add    DWORD PTR [ebp+0x0],ebp
  402230:	add    al,dl
  402232:	mov    ch,0x0
  402234:	and    DWORD PTR [esi],0x1a
  402237:	int3   
  402238:	(bad)  
  402239:	dec    ecx
  40223b:	add    DWORD PTR [ebx-0xff35f1],0xc
  402242:	jle    0x402244
  402244:	push   DWORD PTR [edx-0xa7c00df]
  40224a:	stc    
  40224b:	(bad)  
  40224c:	jmp    FWORD PTR [ecx+0x3]
  40224f:	int3   
  402250:	add    BYTE PTR [esi+0x5e],al
  402253:	add    BYTE PTR [eax],al
  402255:	fsub   DWORD PTR [edi+edi*8]
  402258:	jmp    DWORD PTR [esi+ecx*1-0x10e30001]
  40225f:	cmp    edi,0xffffffa7
  402262:	pop    ecx
  402263:	inc    DWORD PTR [eax]
  402265:	jne    0x4022bd
  402267:	add    bh,bh
  402269:	mov    al,0xba
  40226b:	add    DWORD PTR [eax],0xffffffaf
  40226e:	aas    
  40226f:	(bad)  
  402270:	push   DWORD PTR [ebx-0x6c]
  402273:	add    bh,bh
  402275:	gs pop ebp
  402277:	add    BYTE PTR [eax],al
  402279:	push   edi
  40227a:	daa    
  40227b:	add    BYTE PTR [eax],al
  40227d:	les    esi,FWORD PTR [eax+eax*1-0x34]
  402281:	xchg   ebp,eax
  402282:	adc    eax,0x591e83cc
  402287:	(bad)  
  402288:	dec    DWORD PTR [esi+0x2a]
  40228b:	dec    esp
  40228d:	jge    0x40221a
  40228f:	inc    DWORD PTR [eax]
  402291:	outs   dx,DWORD PTR ds:[esi]
  402292:	xchg   DWORD PTR [eax],eax
  402294:	add    BYTE PTR [edi+0x2c00ffa5],al
  40229a:	inc    DWORD PTR es:[eax]
  40229d:	push   esi
  40229e:	cmp    eax,DWORD PTR [eax]
  4022a0:	jmp    FWORD PTR [ebp+0x26ff0088]
  4022a6:	xor    edi,edi
  4022a8:	add    BYTE PTR [edx],ch
  4022aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022ab:	int3   
  4022ac:	push   DWORD PTR [edx-0x3c000026]
  4022b2:	outs   dx,DWORD PTR ds:[esi]
  4022b3:	inc    DWORD PTR [eax]
  4022b5:	cmp    BYTE PTR [ebp-0x48c70001],ah
  4022bb:	add    BYTE PTR [eax],al
  4022bd:	adc    eax,DWORD PTR es:[ebx-0x63557d]
  4022c4:	add    cl,al
  4022c6:	mov    bh,bh
  4022c8:	push   DWORD PTR [esi-0x4c]
  4022cb:	add    BYTE PTR [ebx-0x33000b47],al
  4022d1:	push   es
  4022d2:	jb     0x4022d4
  4022d4:	sbb    esp,0x13
  4022d7:	cmp    edi,0x55
  4022da:	fiadd  WORD PTR [eax]
  4022dc:	inc    DWORD PTR [ecx]
  4022de:	sbb    ah,cl
  4022e0:	inc    DWORD PTR [eax-0x4b]
  4022e3:	cmp    edi,0xffffffc8
  4022e6:	dec    esp
  4022e7:	(bad)  
  4022e8:	jmp    DWORD PTR [edi-0x12]
  4022eb:	inc    DWORD PTR [ebx-0x7676b21a]
  4022f1:	push   edi
  4022f2:	mov    al,ds:0xa0d2ff00
  4022f7:	cmp    edi,0xffffffdb
  4022fa:	cmp    al,0xff
  4022fc:	add    BYTE PTR [edx],bh
  4022fe:	dec    ebx
  4022ff:	add    BYTE PTR [eax],al
  402301:	les    ebp,FWORD PTR [esp+ecx*8]
  402304:	add    dh,cl
  402306:	(bad)  
  402308:	(bad)  
  402309:	in     eax,dx
  40230a:	cmp    esp,ecx
  40230c:	and    DWORD PTR [esi+0x1dff0083],0xd
  402313:	add    bh,bh
  402315:	cmp    bl,BYTE PTR [ebx]
  402317:	int3   
  402318:	call   FWORD PTR [ecx+0x5b008906]
  40231e:	xlat   BYTE PTR ds:[ebx]
  40231f:	inc    DWORD PTR [eax]
  402321:	xor    DWORD PTR [eax-0x41530001],ecx
  402327:	inc    DWORD PTR [eax]
  402329:	lea    esp,[ebx+eax*4-0xfa0d77]
  402330:	add    BYTE PTR [edi+eax*1],ch
  402333:	mov    edi,edi
  402335:	jb     0x4022c1
  402337:	add    BYTE PTR [eax],al
  402339:	dec    ebp
  40233a:	test   esp,ecx
  40233c:	add    bl,al
  40233e:	pop    ds
  40233f:	(bad)  
  402340:	call   FWORD PTR [edx]
  402342:	repnz add DWORD PTR [eax],0xffffff82
  402346:	sbb    BYTE PTR [eax],al
  402348:	call   FWORD PTR [edx]
  40234a:	sub    BYTE PTR [ebx+0xde8400],al
  402350:	cmp    esp,0x6f
  402353:	mov    DWORD PTR [eax],eax
  402355:	cmp    edx,DWORD PTR [edx]
  402357:	inc    DWORD PTR [eax]
  402359:	xchg   edi,eax
  40235a:	sbb    eax,0xbf1effff
  40235f:	add    BYTE PTR [ebx-0x33ff13a9],al
  402365:	sti    
  402366:	xchg   ebp,eax
  402367:	add    bh,bh
  402369:	mov    al,0x8
  40236b:	dec    DWORD PTR [ecx-0x33ffe822]
  402371:	adc    esp,ebx
  402373:	add    BYTE PTR [eax],al
  402375:	mov    edx,0x9d83cc33
  40237a:	mov    al,ds:0x753583ff
  40237f:	dec    DWORD PTR [ecx-0xe4d3]
  402385:	inc    eax
  402386:	pop    edx
  402387:	int3   
  402388:	add    BYTE PTR [ebp+0x0],dl
  40238b:	(bad)  
  40238c:	jmp    DWORD PTR [esi-0x1f00ffb3]
  402392:	or     ah,0x0
  402395:	cmp    al,0x38
  402397:	add    DWORD PTR [ebx+0x8306b5],0xffffffcc
  40239e:	(bad)  
  40239f:	inc    DWORD PTR [eax]
  4023a1:	xchg   edi,eax
  4023a2:	jb     0x4023a3
  4023a4:	jmp    FWORD PTR [eax+0x68]
  4023a7:	add    bh,bh
  4023a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023aa:	scas   al,BYTE PTR es:[edi]
  4023ab:	cmp    edi,0xa
  4023ae:	hlt    
  4023af:	add    bh,bh
  4023b1:	(bad)
  4023b4:	call   FWORD PTR [eax]
  4023b6:	xlat   BYTE PTR ds:[ebx]
  4023b7:	add    BYTE PTR [eax],al
  4023b9:	or     cl,dl
  4023bb:	int3   
  4023bc:	add    BYTE PTR [eax],ah
  4023be:	repnz inc DWORD PTR [ebx-0xffc24c]
  4023c5:	pop    ecx
  4023c6:	pusha  
  4023c7:	dec    esp
  4023c9:	adc    ebx,DWORD PTR [ebp+0x332effff]
  4023cf:	(bad)  
  4023d0:	(bad)  
  4023d1:	fcom   DWORD PTR [eax-0x4e900001]
  4023d7:	inc    DWORD PTR [eax]
  4023d9:	or     dl,BYTE PTR [edi+edi*8]
  4023dc:	add    BYTE PTR [ecx+ebp*1],ah
  4023df:	add    bh,bh
  4023e1:	fadd   DWORD PTR [edi+0x594acccc]
  4023e7:	add    BYTE PTR [eax],al
  4023e9:	dec    BYTE PTR [esi+0x1ad8cc83]
  4023ef:	add    bh,bh
  4023f1:	add    BYTE PTR [esi],cl
  4023f3:	inc    DWORD PTR [ebx-0x767ca98d]
  4023f9:	mov    ebp,0x2cffffd9
  4023fe:	sub    al,0x0
  402400:	call   FWORD PTR [ebp+0x7883ff9c]
  402406:	test   eax,0x701affff
  40240b:	add    BYTE PTR [ecx-0x33ffe28d],cl
  402411:	fist   WORD PTR [esi]
  402413:	inc    DWORD PTR [ebx-0x6e54]
  402419:	cmp    al,0x4c
  40241b:	(bad)  
  40241c:	call   DWORD PTR [esi]
  40241e:	lods   eax,DWORD PTR ds:[esi]
  40241f:	add    BYTE PTR [ebx-0x33008091],al
  402425:	xchg   ecx,esi
  402427:	add    bh,bh
  402429:	dec    BYTE PTR [eax-0x3f967c01]
  40242f:	int3   
  402430:	push   DWORD PTR [edx-0x28330060]
  402436:	add    cl,ah
  402438:	add    BYTE PTR [ebx],al
  40243a:	test   bh,bh
  40243c:	push   DWORD PTR [edi]
  40243e:	cli    
  40243f:	mov    esp,ecx
  402441:	cmp    dl,bh
  402443:	add    bh,bh
  402445:	jbe    0x402436
  402447:	add    BYTE PTR [ebx-0x18d1],al
  40244d:	repnz cmp bh,bh
  402450:	call   ecx
  402452:	(bad)  
  402453:	inc    DWORD PTR [eax]
  402455:	imul   eax,DWORD PTR [edx],0xffffffff
  402458:	inc    DWORD PTR [ebx]
  40245a:	pop    ds
  40245b:	mov    DWORD PTR [eax],eax
  40245d:	jl     0x4024dd
  40245f:	add    bh,bh
  402461:	leave  
  402462:	pop    ds
  402463:	inc    DWORD PTR [eax]
  402465:	push   esp
  402466:	and    bh,bh
  402468:	call   DWORD PTR [eax-0x6b]
  40246b:	add    bh,bh
  40246d:	jl     0x40249a
  40246f:	int3   
  402470:	inc    DWORD PTR [esi-0x19]
  402473:	add    BYTE PTR [eax],al
  402475:	inc    edx
  402476:	sar    bh,1
  402478:	dec    ebp
  40247a:	lahf   
  40247b:	inc    DWORD PTR [eax]
  40247d:	jmp    0xfd3fa7bf
  402482:	(bad)  
  402483:	dec    DWORD PTR [ecx-0x760016a8]
  402489:	rcr    DWORD PTR [edi+edi*8],0x83
  40248d:	xor    al,0xa9
  40248f:	add    BYTE PTR [ebx-0xb1c7],al
  402495:	dec    ebx
  402496:	addr16 (bad) 
  402498:	jmp    DWORD PTR [esi]
  40249a:	add    BYTE PTR [eax],0x83
  40249d:	jne    0x40247d
  40249f:	add    BYTE PTR [eax],al
  4024a1:	pop    eax
  4024a2:	push   edx
  4024a3:	mov    DWORD PTR [eax],eax
  4024a5:	dec    edx
  4024a6:	add    eax,DWORD PTR [ebx-0x88c100]
  4024ac:	int3   
  4024ad:	jno    0x402434
  4024af:	add    bh,bh
  4024b1:	push   es
  4024b2:	dec    esi
  4024b3:	(bad)  
  4024b4:	inc    DWORD PTR [edx]
  4024b6:	jmp    0x4024b7
  4024b8:	add    DWORD PTR ds:0xeff0084,0xffffffa6
  4024bf:	inc    DWORD PTR [eax]
  4024c1:	push   esi
  4024c2:	mov    ds:0xfb90ccff,eax
  4024c7:	inc    DWORD PTR [eax]
  4024c9:	mov    ch,0x12
  4024cb:	(bad)  
  4024cc:	call   FWORD PTR [eax-0x3d00763f]
  4024d2:	push   eax
  4024d3:	inc    DWORD PTR [ebx-0xfffc12]
  4024d9:	test   BYTE PTR [esi-0x3b550001],ch
  4024df:	inc    DWORD PTR [eax]
  4024e1:	sub    al,0x14
  4024e3:	add    DWORD PTR [eax],0xffffffd0
  4024e6:	out    dx,al
  4024e7:	(bad)  
  4024e8:	dec    DWORD PTR [ebx+edx*4]
  4024eb:	add    DWORD PTR [eax],0xffffffeb
  4024ee:	xor    eax,0xe16dff83
  4024f3:	mov    DWORD PTR [eax],eax
  4024f5:	mov    DWORD PTR [edi+edi*8-0x7cf1f601],edx
  4024fc:	add    dl,dl
  4024fe:	mov    di,di
  402501:	adc    al,0x99
  402503:	int3   
  402504:	(bad)  
  402505:	ds (bad) 
  402507:	add    BYTE PTR [ebx+0x83102b],al
  40250d:	lahf   
  40250e:	mov    eax,DWORD PTR [eax]
  402510:	add    ch,dh
  402512:	dec    ecx
  402513:	(bad)  
  402514:	(bad)  
  402515:	push   DWORD PTR [esi]
  402517:	int3   
  402518:	add    cl,dl
  40251a:	ds mov edi,edi
  40251d:	int3   
  40251e:	mov    cl,0x89
  402520:	call   FWORD PTR [edi+0x6]
  402523:	add    BYTE PTR [eax],al
  402525:	sbb    eax,0x76008397
  40252a:	cmp    bh,bh
  40252c:	jmp    FWORD PTR [ecx]
  40252e:	or     edi,edi
  402530:	xor    DWORD PTR [esi+0x60],0xffffffff
  402534:	add    BYTE PTR [ecx],ch
  402536:	clc    
  402537:	(bad)  
  402538:	jmp    ecx
  40253a:	jnp    0x40253b
  40253c:	call   FWORD PTR [edi+0x300ffbc]
  402542:	adc    BYTE PTR [ecx-0x214401],cl
  402548:	add    cl,bl
  40254a:	jmp    0xff83:0x91afff00
  402551:	hlt    
  402552:	(bad)  
  402553:	inc    DWORD PTR [eax]
  402555:	push   eax
  402556:	mov    ebx,0x2979ff00
  40255b:	add    bh,bh
  40255d:	mov    edx,0xef0083fc
  402562:	pop    edx
  402563:	add    bh,bh
  402565:	cli    
  402566:	stos   BYTE PTR es:[edi],al
  402567:	inc    DWORD PTR [ebx-0x33ffb50f]
  40256d:	fs dec edx
  40256f:	cmp    edi,0xffffff98
  402572:	rol    BYTE PTR [eax],1
  402574:	add    BYTE PTR [esi+0x58],bl
  402577:	or     esp,0xffffffed
  40257a:	xchg   ecx,eax
  40257b:	inc    DWORD PTR [eax]
  40257d:	test   DWORD PTR [eax+0x5cdcffff],esi
  402583:	inc    DWORD PTR [eax]
  402585:	push   ebp
  402586:	leave  
  402587:	inc    DWORD PTR [eax]
  402589:	iret   
  40258a:	add    bh,bh
  40258c:	add    DWORD PTR [edx],0x4e
  40258f:	add    BYTE PTR [eax],al
  402591:	int    0x4c
  402593:	inc    DWORD PTR [eax]
  402595:	ror    BYTE PTR [edx-0x1],1
  402598:	add    BYTE PTR [edx-0x7bffff39],ch
  40259e:	ret    
  40259f:	(bad)  
  4025a0:	jmp    DWORD PTR [ebx]
  4025a2:	cmp    edi,edi
  4025a4:	(bad)  
  4025a5:	sti    
  4025a6:	out    0x0,al
  4025a8:	jmp    DWORD PTR [esi+ebp*2-0xe0b0000]
  4025af:	add    DWORD PTR [eax],0xffffff93
  4025b2:	adc    DWORD PTR [eax],eax
  4025b4:	push   DWORD PTR [edi-0x6e]
  4025b7:	(bad)  
  4025b8:	call   FWORD PTR [ecx+ebx*4]
  4025bb:	(bad)  
  4025bc:	(bad)  
  4025bd:	fcom   DWORD PTR [esi-0x7d]
  4025c0:	xor    DWORD PTR [eax],0x2e
  4025c3:	int3   
  4025c4:	mov    esi,esp
  4025c6:	sbb    eax,0x79a400ff
  4025cb:	inc    DWORD PTR [eax]
  4025cd:	sub    DWORD PTR [ecx],ebx
  4025cf:	add    bh,bh
  4025d1:	jb     0x40255f
  4025d3:	(bad)  
  4025d4:	(bad)  
  4025d5:	fsubr  QWORD PTR [esi-0x3376ff7d]
  4025db:	inc    DWORD PTR [eax]
  4025dd:	sti    
  4025de:	or     al,0x83
  4025e0:	(bad)  
  4025e1:	jmp    0xcdca24e6
  4025e6:	inc    edi
  4025e7:	inc    DWORD PTR [eax]
  4025e9:	sub    cl,BYTE PTR [bx+di-0x1601]
  4025ee:	cld    
  4025ef:	(bad)  
  4025f0:	jmp    ebx
  4025f2:	mov    bh,0x89
  4025f4:	add    al,ch
  4025f6:	fild   DWORD PTR [ebx-0x334fda01]
  4025fc:	add    BYTE PTR [esi],dl
  4025fe:	jae    0x4025ff
  402600:	add    BYTE PTR [eax+0xa],dh
  402603:	add    BYTE PTR [eax],al
  402605:	out    dx,eax
  402606:	sub    al,0x0
  402608:	add    DWORD PTR [edx+esi*1],0xffffffff
  40260c:	inc    DWORD PTR [ecx-0x2dff7c8a]
  402612:	mov    dl,0xff
  402614:	dec    DWORD PTR [edi+0x3b]
  402617:	cmp    edi,0x43
  40261a:	popa   
  40261b:	add    bh,bh
  40261d:	fsub   DWORD PTR [ebx-0x34]
  402620:	inc    DWORD PTR [ebx+ecx*4-0x7d]
  402624:	add    BYTE PTR [ebx],al
  402626:	add    bh,bh
  402628:	dec    DWORD PTR [edx-0x77]
  40262b:	mov    DWORD PTR [eax],eax
  40262d:	pop    esi
  40262e:	out    0xcc,eax
  402630:	xor    DWORD PTR [edx+0x58],0xffffffff
  402634:	inc    ecx
  402636:	clc    
  402637:	inc    DWORD PTR [ebx-0x7c00e0c1]
  40263d:	nop
  40263e:	rol    BYTE PTR [eax],0xff
  402641:	xor    eax,0xefff83dd
  402646:	mov    ebp,0xf3b8ffff
  40264b:	(bad)  
  40264c:	(bad)  
  40264d:	call   0xcca25a5
  402652:	(bad)  
  402653:	or     esp,0x61
  402656:	push   ecx
  402657:	add    BYTE PTR [eax],al
  402659:	jp     0x4026a8
  40265b:	add    DWORD PTR [eax],0xffffff92
  40265e:	(bad)  
  402660:	mov    DWORD PTR [ecx+0x100fff7],ebp
  402666:	pusha  
  402667:	(bad)  
  402668:	jmp    FWORD PTR [edi+0x2effff03]
  40266e:	sub    eax,DWORD PTR [eax]
  402670:	jmp    FWORD PTR [ebx+0x3489ff20]
  402676:	xor    edi,edi
  402678:	jmp    FWORD PTR [esi+edx*8-0x77]
  40267c:	inc    DWORD PTR [edx]
  40267e:	js     0x402680
  402680:	(bad)  
  402681:	jns    0x40264b
  402683:	add    BYTE PTR [ecx-0x24eb],cl
  402689:	fnstsw WORD PTR [eax+0x0]
  40268c:	jmp    FWORD PTR [ebx]
  40268e:	out    dx,eax
  40268f:	inc    DWORD PTR [ebx-0x49fb]
  402695:	out    dx,al
  402696:	ins    BYTE PTR es:[edi],dx
  402697:	inc    DWORD PTR [eax]
  402699:	icebp  
  40269a:	or     al,0x0
  40269c:	push   DWORD PTR [edi]
  40269e:	mov    ds:0xb112ffcc,al
  4026a3:	add    BYTE PTR [ebx+0xffcf],al
  4026a9:	fs dec eax
  4026ab:	add    DWORD PTR [eax],0x11
  4026ae:	(bad)  
  4026af:	(bad)  
  4026b0:	call   DWORD PTR [ecx]
  4026b2:	mov    eax,ds:0x5a4d0083
  4026b7:	(bad)  
  4026b8:	jmp    DWORD PTR [edi]
  4026ba:	ret    
  4026bb:	inc    DWORD PTR [eax]
  4026bd:	xchg   ecx,eax
  4026be:	std    
  4026bf:	int3   
  4026c0:	xor    DWORD PTR [eax],0xfffffff2
  4026c3:	cmp    edi,0x6
  4026c6:	mov    cl,0xff
  4026c8:	add    BYTE PTR [eax],cl
  4026ca:	mov    ds:0xa897cc83,eax
  4026cf:	add    bh,bh
  4026d1:	sub    eax,0x87ff006b
  4026d6:	jbe    0x4026d8
  4026d8:	int3   
  4026d9:	fisttp QWORD PTR [edx]
  4026db:	int3   
  4026dc:	add    bh,dl
  4026de:	xchg   ecx,eax
  4026df:	add    bh,bh
  4026e1:	inc    ebx
  4026e2:	fld    QWORD PTR [eax]
  4026e4:	mov    ecx,esp
  4026e6:	dec    DWORD PTR fs:[ecx-0xd4d1]
  4026ed:	popf   
  4026ee:	jns    0x4026f0
  4026f0:	add    BYTE PTR [edi+0x7500ff9f],al
  4026f6:	out    0xff,al
  4026f8:	sub    DWORD PTR [ecx-0x64],0xffffff83
  4026fc:	add    BYTE PTR [ebx-0x2500ffff],dh
  402702:	mov    dl,0xff
  402704:	inc    DWORD PTR [ebp-0x33330018]
  40270a:	jmp    0x579e280e
  40270f:	add    bh,bh
  402711:	aam    0x8c
  402713:	add    BYTE PTR [eax],al
  402715:	idiv   BYTE PTR [esi-0xa250100]
  40271b:	mov    edi,edi
  40271d:	jne    0x402757
  40271f:	cmp    edi,0x50
  402722:	inc    edi
  402723:	dec    DWORD PTR [ecx+0xcc3b88]
  402729:	jnp    0x402716
  40272b:	inc    DWORD PTR [eax]
  40272d:	mov    dh,0xf9
  40272f:	add    ah,cl
  402731:	iret   
  402732:	call   0x83ff:0xf818ffcc
  402739:	(bad)  
  40273a:	rol    DWORD PTR [eax],cl
  40273c:	inc    DWORD PTR [edi+edx*4+0x124b0000]
  402743:	inc    DWORD PTR [eax]
  402745:	adc    esi,esi
  402747:	(bad)  
  402748:	push   DWORD PTR [edx+0x33830012]
  40274e:	stos   DWORD PTR es:[edi],eax
  40274f:	int3   
  402750:	adc    DWORD PTR [eax+0x460000a2],0xffffffb4
  402757:	inc    DWORD PTR [ebx-0xff0732]
  40275d:	mov    cl,BYTE PTR [edx]
  40275f:	(bad)  
  402760:	jmp    FWORD PTR [edx+0x4c]
  402763:	mov    edi,edi
  402765:	imul   ebp,edx,0x0
  402768:	add    bh,ch
  40276a:	outs   dx,DWORD PTR ds:[esi]
  40276b:	dec    DWORD PTR [ecx-0x7cfcea]
  402771:	mov    ecx,0x1a83cc65
  402776:	xchg   ebx,eax
  402777:	add    BYTE PTR [ecx-0x33330da3],cl
  40277d:	into   
  40277e:	push   cs
  40277f:	inc    DWORD PTR [eax]
  402781:	dec    esp
  402782:	adc    al,0x0
  402784:	add    BYTE PTR [edx-0x47003391],dh
  40278a:	adc    BYTE PTR [ebx-0xe18e7d],al
  402790:	call   esi
  402792:	pusha  
  402793:	add    DWORD PTR [eax],0x69
  402796:	jp     0x40271b
  402798:	jmp    FWORD PTR [ecx]
  40279a:	scas   eax,DWORD PTR es:[edi]
  40279b:	(bad)  
  40279c:	(bad)  
  40279d:	mov    ecx,0x7e00ffeb
  4027a2:	retf   
  4027a3:	mov    edi,edi
  4027a5:	das    
  4027a6:	out    dx,al
  4027a7:	(bad)  
  4027a8:	inc    DWORD PTR [esi]
  4027aa:	and    edi,edi
  4027ac:	add    BYTE PTR [edi+0x17ff83ec],al
  4027b2:	(bad)  
  4027b4:	dec    DWORD PTR [esp+ebx*1-0x77]
  4027b8:	add    BYTE PTR [eax],bl
  4027ba:	rol    BYTE PTR [eax],cl
  4027bc:	jmp    DWORD PTR [ecx+ebp*2-0x1]
  4027c0:	call   FWORD PTR [ebx+edi*4+0x0]
  4027c4:	jmp    FWORD PTR [edx+0x47]
  4027c7:	inc    DWORD PTR [eax]
  4027c9:	adc    eax,0x31008901
  4027ce:	push   ecx
  4027cf:	add    DWORD PTR [eax],0x3c
  4027d2:	(bad)  
  4027d3:	inc    DWORD PTR [eax]
  4027d5:	(bad)  
  4027d6:	loop   0x4027d8
  4027d8:	add    BYTE PTR [esi+0x71],dh
  4027db:	cmp    edi,0xffffff80
  4027de:	inc    edx
  4027df:	(bad)  
  4027e0:	dec    DWORD PTR [ecx-0x26]
  4027e3:	inc    DWORD PTR [ebx-0xff260c]
  4027e9:	mov    al,BYTE PTR [ecx-0x1]
  4027ec:	add    dl,dh
  4027ee:	data16 add BYTE PTR [ebx-0x7c00d625],al
  4027f5:	imul   ebp,DWORD PTR [eax+0x62120089],0x574c8300
  4027ff:	(bad)  
  402800:	dec    DWORD PTR [edi]
  402802:	test   edi,edi
  402804:	call   DWORD PTR [esi]
  402806:	push   cs
  402807:	inc    DWORD PTR [eax]
  402809:	addr16 out dx,al
  40280b:	(bad)  
  40280c:	inc    DWORD PTR [esi]
  40280e:	outs   dx,DWORD PTR ds:[esi]
  40280f:	(bad)  
  402810:	(bad)  
  402811:	jmp    0x4027c9
  402813:	or     esp,0x5e
  402816:	cmp    eax,0xa8483ff
  40281b:	(bad)  
  40281c:	call   ebp
  40281e:	jmp    0x40281f
  402820:	(bad)  
  402821:	mov    ecx,0x6cffff68
  402826:	aaa    
  402827:	(bad)  
  402828:	jmp    DWORD PTR [ebx-0x3a]
  40282b:	inc    DWORD PTR [eax]
  40282d:	cld    
  40282e:	mov    ds:0xcf610000,eax
  402833:	add    bh,bh
  402835:	sub    BYTE PTR [esi-0x7d],0xff
  402839:	inc    ebx
  40283a:	jno    0x4027bf
  40283c:	(bad)  
  40283d:	stc    
  40283e:	into   
  40283f:	add    BYTE PTR [eax],al
  402841:	scas   eax,DWORD PTR es:[edi]
  402842:	mov    edx,0x133783cc
  402847:	add    bh,bh
  402849:	sub    esp,esi
  40284b:	(bad)  
  40284c:	(bad)  
  40284d:	in     al,dx
  40284e:	dec    esi
  40284f:	add    bh,bh
  402851:	or     BYTE PTR [edx],ch
  402853:	inc    DWORD PTR [eax]
  402855:	clc    
  402856:	add    edi,edi
  402858:	add    ah,bh
  40285a:	push   esp
  40285b:	add    bh,bh
  40285d:	int    0xab
  40285f:	int3   
  402860:	add    ah,dh
  402862:	in     al,0x0
  402864:	call   DWORD PTR [ebx-0x523300c1]
  40286a:	jmp    0x3244ac6e
  40286f:	add    BYTE PTR [eax],al
  402871:	adc    eax,0x6d00cc47
  402876:	mov    ebp,0x8c6ff89
  40287b:	inc    DWORD PTR [eax]
  40287d:	fst    QWORD PTR [ebx-0x27947601]
  402883:	(bad)  
  402884:	call   FWORD PTR [edi-0x3c7c330f]
  40288a:	mov    cs,WORD PTR [ecx-0x76e21c01]
  402890:	mov    esi,esi
  402892:	push   ecx
  402893:	(bad)  
  402894:	jmp    DWORD PTR [edi-0x1c000031]
  40289a:	or     DWORD PTR [eax],eax
  40289c:	add    BYTE PTR [eax-0x78ff00c2],dh
  4028a2:	aas    
  4028a3:	inc    DWORD PTR [ebx-0x33006c72]
  4028a9:	mov    edi,DWORD PTR [eax+0x0]
  4028ac:	mov    ecx,ebx
  4028ae:	xor    bh,bh
  4028b0:	mov    ebp,esi
  4028b2:	inc    esi
  4028b3:	(bad)  
  4028b4:	call   DWORD PTR [ecx+0x7]
  4028b7:	inc    DWORD PTR [eax]
  4028b9:	rcr    DWORD PTR [eax+0x0],cl
  4028bc:	add    BYTE PTR [ecx],dh
  4028be:	mov    edi,edi
  4028c0:	dec    DWORD PTR [eax]
  4028c2:	or     al,0x0
  4028c4:	add    BYTE PTR [ecx+0x17],ch
  4028c7:	inc    DWORD PTR [eax]
  4028c9:	jno    0x402896
  4028cb:	(bad)  
  4028cc:	call   FWORD PTR [esi+0x13ffcc25]
  4028d2:	xor    bh,bh
  4028d4:	add    BYTE PTR [ebx+ecx*2-0x7d],cl
  4028d8:	mov    DWORD PTR [edi+ebp*2+0x0],ecx
  4028dc:	int3   
  4028dd:	xchg   edi,eax
  4028de:	mov    cl,0x0
  4028e0:	add    ch,al
  4028e2:	je     0x402867
  4028e4:	jmp    DWORD PTR [eax+0xd0000fa]
  4028ea:	into   
  4028eb:	int3   
  4028ec:	push   DWORD PTR [ecx+0x640000a6]
  4028f2:	into   
  4028f3:	int3   
  4028f4:	add    BYTE PTR [ebp+0x4f],cl
  4028f7:	add    bh,bh
  4028f9:	sar    BYTE PTR [edi-0x7d],1
  4028fc:	jmp    FWORD PTR [eax]
  4028fe:	es int3 
  402900:	add    BYTE PTR [ecx],dl
  402902:	add    BYTE PTR gs:[ebx-0x3353f2],al
  402909:	mov    edi,0xdccc8962
  40290e:	add    DWORD PTR [eax],0x863bff
  402914:	push   DWORD PTR [edi+0x2b]
  402917:	cmp    edi,0x25
  40291a:	pop    ebp
  40291b:	dec    esp
  40291d:	fadd   st,st(3)
  40291f:	inc    DWORD PTR [eax]
  402921:	fisub  WORD PTR [esi-0x7d]
  402924:	inc    DWORD PTR [eax]
  402926:	jno    0x402927
  402928:	add    al,ah
  40292a:	imul   edi,edi,0x0
  40292d:	push   edi
  40292e:	pop    esi
  40292f:	(bad)  
  402930:	push   DWORD PTR [eax+ebp*8-0x7d]
  402934:	dec    esp
  402936:	jmp    0x4028c1
  402938:	add    BYTE PTR [esi+0x3e],dl
  40293b:	add    DWORD PTR [eax],0xffffffbb
  40293e:	test   DWORD PTR [eax],0xcc9de900
  402944:	push   ebx
  402946:	jmp    0x523bf617
  40294b:	add    DWORD PTR [eax],0xffffffcf
  40294e:	mov    ebx,0xe6fcc83
  402953:	inc    DWORD PTR [eax]
  402955:	nop
  402956:	mov    ebp,0x692d00ff
  40295b:	add    BYTE PTR [eax],al
  40295d:	pop    edx
  40295e:	mov    al,ds:0x4afa00ff
  402963:	cmp    edi,0xffffff9f
  402966:	ins    BYTE PTR es:[edi],dx
  402967:	add    BYTE PTR [eax],al
  402969:	xchg   ebp,eax
  40296a:	imul   eax,DWORD PTR [eax],0xb93cff
  402970:	int3   
  402971:	fdiv   QWORD PTR [ecx]
  402973:	(bad)  
  402974:	inc    edx
  402976:	gs int3 
  402978:	int3   
  402979:	push   ebp
  40297a:	retf   
  40297b:	(bad)  
  40297c:	jmp    DWORD PTR [edi]
  40297e:	(bad)  
  402980:	dec    DWORD PTR [esi+0x7400005e]
  402986:	jp     0x40290b
  402988:	add    dh,bh
  40298a:	xchg   edi,eax
  40298b:	inc    DWORD PTR [eax]
  40298d:	push   esp
  40298e:	daa    
  40298f:	add    BYTE PTR [eax],al
  402991:	xchg   BYTE PTR ds:0x49870000,al
  402997:	inc    DWORD PTR [eax]
  402999:	mov    esi,0xa5000044
  40299e:	(bad)  
  40299f:	mov    edi,edi
  4029a1:	ret    0xff2f
  4029a4:	call   DWORD PTR [edi]
  4029a6:	cld    
  4029a7:	inc    DWORD PTR [ebx-0x33ff3f61]
  4029ad:	mov    ds:0x81838390,al
  4029b2:	push   ss
  4029b3:	add    bh,bh
  4029b5:	ss lahf 
  4029b7:	add    bh,bh
  4029b9:	mov    ds:0x9e000026,al
  4029be:	sub    bh,bh
  4029c0:	add    BYTE PTR [ebx+0x4a],cl
  4029c3:	add    BYTE PTR [ecx-0xff8b3a],cl
  4029c9:	pop    es
  4029ca:	in     eax,0xff
  4029cc:	int3   
  4029cd:	test   al,0xb8
  4029cf:	(bad)  
  4029d0:	(bad)  
  4029d1:	fmul   QWORD PTR [eax-0x7d]
  4029d4:	int3   
  4029d5:	ret    
  4029d6:	and    edi,edi
  4029d8:	push   DWORD PTR [ebx+0x53]
  4029db:	inc    DWORD PTR [ebx-0x7cffcd7c]
  4029e1:	pop    ds
  4029e2:	jae    0xff9777b4
  4029e8:	or     DWORD PTR [edx],0xffffffe8
  4029eb:	dec    esp
  4029ed:	arpl   WORD PTR [edi],di
  4029ef:	or     DWORD PTR [ecx-0xff3dbf],0xffffffaf
  4029f6:	mov    ah,0x0
  4029f8:	call   DWORD PTR [esi+0x5ffffffa]
  4029fe:	mov    edx,0x9bb6ff83
  402a03:	add    BYTE PTR [ebx+0x5723],al
  402a09:	mov    eax,ds:0x2f00ff61
  402a0e:	aas    
  402a0f:	(bad)  
  402a10:	jmp    esi
  402a12:	push   es
  402a13:	inc    DWORD PTR [eax]
  402a15:	dec    edi
  402a16:	xchg   ecx,eax
  402a17:	(bad)  
  402a18:	dec    DWORD PTR [edi+0x7c830079]
  402a1e:	aaa    
  402a1f:	(bad)  
  402a20:	jmp    FWORD PTR ds:0x758389e1
  402a26:	add    DWORD PTR [eax],0x0
  402a29:	ds inc eax
  402a2b:	inc    DWORD PTR [eax]
  402a2d:	shr    DWORD PTR [esp+ecx*8],cl
  402a30:	dec    DWORD PTR [edx+0x4800004e]
  402a36:	jp     0x4029bb
  402a38:	jmp    edi
  402a3a:	lods   eax,DWORD PTR ds:[esi]
  402a3b:	inc    DWORD PTR [eax]
  402a3d:	mov    DWORD PTR [edi],edx
  402a3f:	mov    DWORD PTR [eax],eax
  402a41:	dec    ebp
  402a42:	stos   DWORD PTR es:[edi],eax
  402a43:	add    BYTE PTR [eax],al
  402a45:	ins    BYTE PTR es:[edi],dx
  402a46:	jbe    0x402a48
  402a48:	(bad)  
  402a49:	cmp    al,BYTE PTR ds:0x64d18900
  402a4f:	add    BYTE PTR [ebx+0xff3b18],al
  402a55:	inc    edx
  402a56:	inc    esi
  402a57:	(bad)  
  402a58:	call   FWORD PTR [ecx+0x5d]
  402a5b:	add    DWORD PTR [ebx-0x7c402c],0xffffffbf
  402a62:	dec    ebp
  402a63:	inc    DWORD PTR [eax]
  402a65:	aad    0x1c
  402a67:	cmp    edi,0xffffffe7
  402a6a:	leave  
  402a6b:	cmp    edi,0xffffffc0
  402a6e:	(bad)  
  402a6f:	inc    DWORD PTR [eax]
  402a71:	repz jae 0x402a73
  402a74:	mov    DWORD PTR [ebx+0x50ccff48],ebx
  402a7a:	fwait
  402a7b:	cmp    edi,0xffffffc7
  402a7e:	adc    bh,bh
  402a80:	call   FWORD PTR [ebp+0x30]
  402a83:	inc    DWORD PTR [eax]
  402a85:	(bad)  
  402a86:	idiv   bh
  402a88:	(bad)  
  402a89:	cld    
  402a8a:	loop   0x402a8b
  402a8c:	xor    esp,0x79
  402a8f:	add    DWORD PTR [eax],0x43
  402a92:	ror    ah,1
  402a94:	inc    DWORD PTR [eax+0x57000070]
  402a9a:	mov    edi,0x54d8ff89
  402a9f:	cmp    edi,0xffffffe2
  402aa2:	pop    esi
  402aa3:	(bad)  
  402aa4:	jmp    FWORD PTR [eax-0x52]
  402aa7:	add    BYTE PTR [eax],al
  402aa9:	fild   DWORD PTR [ecx+0x0]
  402aac:	push   DWORD PTR [eax]
  402aae:	repz cmp edi,0x2a
  402ab2:	mov    eax,ds:0xad03cc00
  402ab7:	(bad)  
  402ab8:	inc    esi
  402aba:	enter  0xffff,0x3f
  402abe:	jb     0x402abf
  402ac0:	mov    DWORD PTR [ecx+0x49ffffa4],edi
  402ac6:	xchg   BYTE PTR [eax],al
  402ac8:	push   DWORD PTR [esi+0x53]
  402acb:	cmp    edi,0xffffffba
  402ace:	test   edi,edi
  402ad0:	adc    ebp,0x65
  402ad3:	inc    DWORD PTR [eax]
  402ad5:	add    BYTE PTR [eax],bh
  402ad7:	int3   
  402ad8:	add    BYTE PTR [esi-0x18],dl
  402adb:	dec    DWORD PTR [ecx+0xff7347]
  402ae1:	cwde   
  402ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae3:	(bad)  
  402ae4:	(bad)  
  402ae5:	fcomp  DWORD PTR [eax-0x6c2eff01]
  402aeb:	(bad)  
  402aec:	dec    ebp
  402aee:	fdivp  st(7),st
  402af0:	push   DWORD PTR [edx-0x7d]
  402af3:	or     DWORD PTR [ecx-0xff85fb],0x6f
  402afa:	in     eax,0x0
  402afc:	int3   
  402afd:	pop    esi
  402afe:	into   
  402aff:	cmp    edi,0x57
  402b02:	and    edi,edi
  402b04:	add    BYTE PTR [edi],ah
  402b06:	sbb    DWORD PTR [eax],eax
  402b08:	dec    DWORD PTR [ecx]
  402b0a:	(bad)  
  402b0b:	(bad)  
  402b0c:	call   DWORD PTR [ebp-0x34ff7cd2]
  402b12:	push   esp
  402b13:	inc    DWORD PTR [ebx-0x76988d]
  402b19:	jp     0x402ada
  402b1b:	int3   
  402b1c:	jmp    DWORD PTR [eax]
  402b1e:	cli    
  402b1f:	mov    DWORD PTR [eax],eax
  402b21:	fisttp DWORD PTR [edx-0x34]
  402b24:	inc    edi
  402b26:	int    0x83
  402b28:	push   edi
  402b2a:	push   edi
  402b2b:	add    BYTE PTR [eax],al
  402b2d:	test   BYTE PTR [ebx+eax*4-0x44801],dh
  402b34:	add    BYTE PTR [edi],dl
  402b36:	or     edi,edi
  402b38:	int3   
  402b39:	jmp    0x8398:0xdb83ff18
  402b40:	add    BYTE PTR [edx+0x5800001d],bl
  402b46:	jae    0x402ad1
  402b48:	add    dh,cl
  402b4a:	lahf   
  402b4b:	inc    DWORD PTR [eax]
  402b4d:	pop    esi
  402b4e:	mov    BYTE PTR [eax],0x83
  402b51:	dec    eax
  402b52:	out    dx,al
  402b53:	add    bh,bh
  402b55:	sub    DWORD PTR ds:0xf26fff00,edx
  402b5b:	add    ah,cl
  402b5d:	xor    bl,BYTE PTR [ecx+0x0]
  402b60:	int3   
  402b61:	je     0x402ae9
  402b63:	(bad)  
  402b64:	inc    DWORD PTR [ebx]
  402b66:	ins    BYTE PTR es:[edi],dx
  402b67:	cmp    edi,0x4d
  402b6a:	pushf  
  402b6b:	inc    DWORD PTR [eax]
  402b6d:	adc    ecx,DWORD PTR [eax]
  402b6f:	(bad)  
  402b70:	jmp    FWORD PTR [edi+0x68]
  402b73:	(bad)  
  402b74:	jmp    FWORD PTR [ebp-0x7600ffdf]
  402b7a:	mov    edi,?
  402b7c:	add    bh,ah
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	jmp    ebp
  402b82:	je     0x402b07
  402b84:	dec    DWORD PTR [esi-0x11]
  402b87:	add    bh,bh
  402b89:	mov    eax,ds:0x87ffffe4
  402b8e:	pushf  
  402b8f:	mov    edi,edi
  402b91:	sub    bh,bh
  402b93:	dec    DWORD PTR [ecx-0x76ff9235]
  402b99:	sbb    eax,0x5483ccf7
  402b9e:	and    DWORD PTR [eax],eax
  402ba0:	add    bh,ah
  402ba2:	push   esp
  402ba3:	inc    DWORD PTR [ebx+0x1f02]
  402ba9:	sahf   
  402baa:	call   0x7e9e2b7b
  402baf:	add    bh,bh
  402bb1:	jo     0x402b7d
  402bb3:	add    BYTE PTR [ebx-0x7c7c7c28],al
  402bb9:	das    
  402bba:	fld    DWORD PTR [eax]
  402bbc:	inc    DWORD PTR [ebp-0xa7cffe8]
  402bc2:	sbb    edi,edi
  402bc4:	push   DWORD PTR [ebp+0x3e]
  402bc7:	add    bh,bh
  402bc9:	daa    
  402bca:	aad    0xff
  402bcc:	int3   
  402bcd:	aas    
  402bce:	ret    0xff00
  402bd1:	sbb    eax,0x750089ee
  402bd6:	push   esi
  402bd7:	add    bh,bh
  402bd9:	xchg   ebp,eax
  402bda:	mov    WORD PTR [ebx+0xe68489],es
  402be0:	or     DWORD PTR [ecx+edi*1],0xffffffff
  402be4:	add    BYTE PTR [edi-0x2200ff73],bh
  402bea:	xchg   edx,eax
  402beb:	add    BYTE PTR [eax],al
  402bed:	cwde   
  402bee:	cwde   
  402bef:	int3   
  402bf0:	add    DWORD PTR [ecx-0x8],0xffffffcc
  402bf4:	add    BYTE PTR [ebx],dl
  402bf6:	lahf   
  402bf7:	mov    DWORD PTR [ebx-0xfff2db],eax
  402bfd:	adc    eax,DWORD PTR [eax-0x9280001]
  402c03:	add    BYTE PTR [ecx-0x330089a6],cl
  402c09:	jbe    0x402bd8
  402c0b:	inc    DWORD PTR [ebx+0xf061]
  402c11:	xor    DWORD PTR [eax],esi
  402c13:	inc    DWORD PTR [eax]
  402c15:	adc    bl,BYTE PTR [ebx]
  402c17:	mov    edi,edi
  402c19:	repnz push edx
  402c1b:	add    bh,bh
  402c1d:	rcr    ebx,0x83
  402c20:	(bad)  
  402c21:	jmp    0xfb:0xea8300a0
  402c28:	(bad)  
  402c29:	mov    ebx,0xcaffff4e
  402c2e:	mov    ah,0xff
  402c30:	and    DWORD PTR [ebx+0x69838927],0x5d
  402c37:	(bad)  
  402c38:	dec    esi
  402c3a:	repz inc DWORD PTR [ebx-0x7c00de22]
  402c41:	mov    eax,ds
  402c43:	add    BYTE PTR [ebx-0x33ff5a19],al
  402c49:	pop    esp
  402c4a:	mov    al,0x0
  402c4c:	mov    DWORD PTR [ebp-0x57],ebx
  402c4f:	int3   
  402c50:	or     ecx,0xa
  402c53:	(bad)  
  402c54:	inc    DWORD PTR [edx]
  402c56:	idiv   bh
  402c58:	push   DWORD PTR [ebx]
  402c5a:	(bad)  
  402c5b:	dec    esp
  402c5d:	jl     0x402caf
  402c5f:	int3   
  402c60:	jmp    FWORD PTR [edi]
  402c62:	mov    esp,0xf11d0000
  402c67:	int3   
  402c68:	push   DWORD PTR [edx-0x3c000086]
  402c6e:	arpl   di,di
  402c70:	adc    DWORD PTR [edi-0x26],0xffffff89
  402c74:	add    BYTE PTR [edi+0x40],ch
  402c77:	(bad)  
  402c78:	inc    ebp
  402c7a:	retf   
  402c7b:	int3   
  402c7c:	mov    DWORD PTR [ebx-0x28],ebp
  402c7f:	add    BYTE PTR [eax],al
  402c81:	lods   al,BYTE PTR ds:[esi]
  402c82:	inc    DWORD PTR ss:[eax]
  402c85:	pop    ds
  402c86:	mov    dl,0x0
  402c88:	add    BYTE PTR [eax],ch
  402c8a:	repz inc DWORD PTR [eax]
  402c8d:	mov    ebx,0xc083897d
  402c92:	xchg   edi,edi
  402c94:	mov    DWORD PTR [edi-0x1d000072],edi
  402c9a:	mov    bh,bh
  402c9c:	dec    DWORD PTR [ecx-0x76]
  402c9f:	int3   
  402ca0:	(bad)  
  402ca1:	fcom   st(7)
  402ca3:	add    BYTE PTR [ebx+0x83a880],al
  402ca9:	jne    0x402cdc
  402cab:	inc    DWORD PTR [ebx-0xfff469]
  402cb1:	cli    
  402cb2:	or     bh,bh
  402cb4:	add    BYTE PTR [eax+0x56ff8317],ch
  402cba:	in     al,dx
  402cbb:	(bad)  
  402cbc:	jmp    esp
  402cbe:	retf   
  402cbf:	add    DWORD PTR [eax],0xffffffd3
  402cc2:	aad    0x89
  402cc4:	add    BYTE PTR [esi],ch
  402cc6:	inc    esp
  402cc7:	inc    DWORD PTR [ebx-0x33c158]
  402ccd:	add    DWORD PTR [eax-0x77],eax
  402cd0:	dec    DWORD PTR [ebx+0x4fff83d3]
  402cd6:	mov    edi,edi
  402cd8:	call   FWORD PTR [ebp-0x447c00cf]
  402cde:	(bad)  
  402ce0:	add    BYTE PTR [eax-0x34007670],ch
  402ce6:	and    edi,edi
  402ce8:	xor    DWORD PTR [esi+edx*4],0xffffffff
  402cec:	(bad)  
  402ced:	cmp    eax,0x9fff833d
  402cf2:	pop    eax
  402cf3:	(bad)  
  402cf4:	dec    DWORD PTR [esi]
  402cf6:	pushf  
  402cf7:	int3   
  402cf8:	add    BYTE PTR [eax],dh
  402cfa:	loop   0x402cc8
  402cfc:	add    BYTE PTR [edx-0x4eff0077],ah
  402d02:	ja     0x402c87
  402d04:	add    BYTE PTR [eax-0x6e],bl
  402d07:	mov    edi,edi
  402d09:	addr16 dec eax
  402d0b:	add    BYTE PTR [eax],al
  402d0d:	iret   
  402d0e:	xchg   esp,eax
  402d0f:	mov    DWORD PTR [ebx-0x9a9d],eax
  402d15:	mov    ebx,db0
  402d18:	call   DWORD PTR [edx+0x43]
  402d1b:	inc    DWORD PTR [eax]
  402d1d:	pop    ds
  402d1e:	rol    DWORD PTR [ebx-0x42cb00],0x0
  402d25:	xor    eax,0x4dff890f
  402d2a:	(bad)  
  402d2b:	int3   
  402d2c:	add    BYTE PTR [edx+0x6b],ah
  402d2f:	inc    DWORD PTR [ebx-0xca59]
  402d35:	adc    ebx,edx
  402d37:	(bad)  
  402d38:	inc    DWORD PTR [edi]
  402d3a:	sub    DWORD PTR [eax],eax
  402d3c:	jmp    DWORD PTR [ebx-0xeff00d7]
  402d42:	or     bh,bh
  402d44:	dec    DWORD PTR [ecx+ebx*4]
  402d47:	inc    DWORD PTR [eax]
  402d49:	inc    esi
  402d4a:	pop    DWORD PTR [eax]
  402d4c:	add    BYTE PTR [edx],dh
  402d4e:	pop    ebx
  402d4f:	(bad)  
  402d50:	call   FWORD PTR [ebx+0x53]
  402d53:	add    BYTE PTR [ebx-0x337e7b],al
  402d59:	mov    BYTE PTR [esi],bl
  402d5b:	dec    esp
  402d5d:	cmp    eax,DWORD PTR [ebp-0x1]
  402d60:	push   DWORD PTR [esi-0x5900ffa0]
  402d66:	(bad)  
  402d69:	cdq    
  402d6a:	mov    cl,0x89
  402d6c:	jmp    DWORD PTR [esi+0x1]
  402d6f:	cmp    edi,0xffffff8c
  402d72:	mov    ecx,0x2bd389cc
  402d77:	dec    esp
  402d79:	(bad)  
  402d7b:	add    bh,bh
  402d7d:	das    
  402d7e:	dec    edx
  402d7f:	(bad)  
  402d80:	(bad)  
  402d81:	mov    edi,0xac00fff4
  402d86:	adc    eax,0xc2538300
  402d8b:	add    BYTE PTR [ebx-0x7689aa],al
  402d91:	xchg   ecx,eax
  402d92:	xor    ah,cl
  402d94:	inc    DWORD PTR [ebx+0x76]
  402d97:	inc    DWORD PTR [eax]
  402d99:	loope  0x402d3f
  402d9b:	(bad)  
  402d9c:	inc    ebp
  402d9e:	sbb    al,0x0
  402da0:	mov    edx,edi
  402da2:	mov    WORD PTR [ebx+0xd5c89],es
  402da8:	mov    DWORD PTR [esi-0x7a],edi
  402dab:	cmp    edi,0xffffff8e
  402dae:	and    edi,edi
  402db0:	add    BYTE PTR [esp+eiz*8-0x705c7d00],ah
  402db7:	dec    esp
  402db9:	mov    dl,0x95
  402dbb:	add    BYTE PTR [ecx-0x7c7c94c2],cl
  402dc1:	cs pushf 
  402dc3:	add    DWORD PTR [eax],0xfffffffa
  402dc6:	iret   
  402dc7:	add    DWORD PTR [eax],0xffffff8a
  402dca:	inc    DWORD PTR ds:[eax]
  402dcd:	xor    eax,0x289ff29
  402dd2:	in     al,dx
  402dd3:	add    bh,bh
  402dd5:	aam    0xff
  402dd7:	add    BYTE PTR [eax],al
  402dd9:	or     al,0x8b
  402ddb:	dec    DWORD PTR [ecx-0x7cffa0b0]
  402de1:	fild   QWORD PTR [ecx-0x7d]
  402de4:	add    BYTE PTR [eax],ah
  402de6:	sbb    edi,edi
  402de8:	int3   
  402de9:	mov    ds:0xab8383d8,eax
  402dee:	(bad)  
  402def:	inc    DWORD PTR [eax]
  402df1:	lock test eax,0x8750000
  402df7:	(bad)  
  402df8:	push   DWORD PTR [esi-0x5876004e]
  402dfe:	fmul   DWORD PTR [ecx+0x8b57ff]
  402e04:	add    BYTE PTR [esp-0x3e6f0001],bh
  402e0b:	int3   
  402e0c:	xor    DWORD PTR [ecx+0x1700ccbf],0xffffffd0
  402e13:	mov    DWORD PTR [ecx+0xccc25a],ecx
  402e19:	mov    esp,0x23ffff59
  402e1e:	add    cl,ah
  402e20:	jmp    FWORD PTR [ecx-0x50]
  402e23:	add    BYTE PTR [eax],al
  402e25:	je     0x402e62
  402e27:	add    BYTE PTR [ecx-0x4c8],cl
  402e2d:	std    
  402e2e:	out    0x83,al
  402e30:	int3   
  402e31:	in     al,0x88
  402e33:	cmp    edi,0xffffff96
  402e36:	or     al,0xff
  402e38:	call   esp
  402e3a:	aad    0xff
  402e3c:	inc    edx
  402e3e:	and    BYTE PTR [eax],al
  402e40:	add    BYTE PTR [edx-0x1d],al
  402e43:	inc    DWORD PTR [eax]
  402e45:	sub    BYTE PTR [ebx-0x7d],ah
  402e48:	(bad)  
  402e49:	clc    
  402e4a:	hlt    
  402e4b:	add    BYTE PTR [ecx-0x33a83a],cl
  402e51:	mov    esp,?
  402e53:	cmp    edi,0xffffffbf
  402e56:	aaa    
  402e57:	(bad)  
  402e58:	inc    DWORD PTR [eax]
  402e5a:	push   cs
  402e5b:	cmp    edi,0xffffffc4
  402e5e:	out    dx,al
  402e5f:	int3   
  402e60:	call   FWORD PTR [eax+0x5bff00fd]
  402e66:	ja     0x402e67
  402e68:	and    DWORD PTR [ebx+0x1f],0xffffffff
  402e6c:	add    BYTE PTR [eax],bh
  402e6e:	rol    DWORD PTR [ebx+0x346f83],0x0
  402e75:	lods   al,BYTE PTR ds:[esi]
  402e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e77:	add    DWORD PTR [eax],0x35
  402e7a:	add    al,0xff
  402e7c:	cmp    DWORD PTR [ecx],0xffffffcf
  402e7f:	inc    DWORD PTR [eax]
  402e81:	sbb    DWORD PTR [edx],ebx
  402e83:	(bad)  
  402e84:	jmp    FWORD PTR [edi]
  402e86:	add    DWORD PTR [ecx-0xf45200],ecx
  402e8c:	(bad)  
  402e8d:	(bad)  
  402e8e:	in     eax,dx
  402e8f:	inc    DWORD PTR [eax]
  402e91:	adc    al,0xa4
  402e93:	(bad)  
  402e94:	call   FWORD PTR [edi]
  402e96:	mov    esp,0xb2430000
  402e9b:	inc    DWORD PTR [ebx-0x7c7c2f63]
  402ea1:	aad    0x63
  402ea3:	inc    DWORD PTR [ebx-0x7c00674e]
  402ea9:	adc    DWORD PTR [edx+0x35bff89],0xfbd8ff00
  402eb3:	add    bh,bh
  402eb5:	adc    BYTE PTR [eax-0x5aa1ff01],0x83
  402ebc:	call   FWORD PTR [ebx]
  402ebe:	repz add bh,bh
  402ec1:	mov    edi,0xe400ffe9
  402ec6:	and    eax,0x824e0000
  402ecb:	(bad)  
  402ecc:	call   FWORD PTR [eax]
  402ece:	xchg   esi,eax
  402ecf:	inc    DWORD PTR [eax]
  402ed1:	ins    BYTE PTR es:[edi],dx
  402ed2:	mov    ds:0x8ee083ff,al
  402ed7:	inc    DWORD PTR [eax]
  402ed9:	imul   ebp,DWORD PTR [edi+edi*8],0xffffffff
  402edd:	cmp    dh,BYTE PTR [ebx-0x1c580100]
  402ee3:	int3   
  402ee4:	jmp    DWORD PTR [esi-0x28]
  402ee7:	inc    DWORD PTR [ebx-0x7cfc37]
  402eed:	(bad)  
  402eee:	sub    edi,edi
  402ef0:	sub    DWORD PTR [eax+0x6bcc830b],0xffffffc7
  402ef7:	dec    esp
  402ef9:	jno    0x402ebb
  402efb:	int3   
  402efc:	call   DWORD PTR [ecx]
  402efe:	jg     0x402f00
  402f00:	int3   
  402f01:	(bad)  {k1}{z}
  402f06:	cmp    bh,0xff
  402f09:	jmp    0x402e94
  402f0b:	add    ah,cl
  402f0d:	nop
  402f0e:	jb     0x402f0f
  402f10:	int3   
  402f11:	lds    edi,FWORD PTR [edi]
  402f13:	int3   
  402f14:	dec    DWORD PTR [edx-0x77ff7c83]
  402f1a:	xchg   esp,eax
  402f1b:	add    bh,bh
  402f1d:	adc    DWORD PTR [ebx-0x34],eax
  402f20:	dec    DWORD PTR [edx-0x67]
  402f23:	cmp    edi,0xfffffffc
  402f26:	mov    bh,bh
  402f28:	add    BYTE PTR [edx],bh
  402f2a:	add    BYTE PTR [ecx-0x70fb7d],cl
  402f30:	inc    ebx
  402f32:	cli    
  402f33:	inc    DWORD PTR [eax]
  402f35:	lds    edx,FWORD PTR [eax+eax*1+0x0]
  402f39:	lods   al,BYTE PTR ds:[esi]
  402f3a:	xchg   edi,edi
  402f3c:	jmp    DWORD PTR [esi-0x36]
  402f3f:	mov    DWORD PTR [eax],eax
  402f41:	or     al,bl
  402f43:	inc    DWORD PTR [eax]
  402f45:	dec    ebp
  402f46:	jno    0x402ecb
  402f48:	add    BYTE PTR [esi+esi*1],al
  402f4b:	add    DWORD PTR [eax],0x14
  402f4e:	popf   
  402f4f:	add    ah,cl
  402f51:	call   0xffa8:0xec89ff9b
  402f58:	add    ah,cl
  402f5a:	fwait
  402f5b:	(bad)  
  402f5c:	jmp    DWORD PTR [ebx]
  402f5e:	inc    eax
  402f5f:	dec    esp
  402f61:	das    
  402f62:	mov    edx,0x49d000ff
  402f67:	dec    DWORD PTR [ecx-0x337cd893]
  402f6d:	pop    ds
  402f6e:	sub    eax,DWORD PTR [eax]
  402f70:	dec    edi
  402f72:	cmp    edi,0x83ff83ff
  402f78:	call   DWORD PTR [edi+0x11ff00e8]
  402f7e:	inc    DWORD PTR gs:[ebx-0x7cd7d7]
  402f85:	icebp  
  402f86:	or     edi,edi
  402f88:	call   DWORD PTR [esi+0x789000e]
  402f8e:	sbb    al,0xff
  402f90:	mov    DWORD PTR [ebx-0x78],esp
  402f93:	inc    DWORD PTR [eax]
  402f95:	or     eax,DWORD PTR [edi]
  402f97:	add    BYTE PTR [eax],al
  402f99:	enter  0xffb3,0xcc
  402f9d:	sti    
  402f9e:	push   es
  402f9f:	inc    DWORD PTR [eax]
  402fa1:	jo     0x402fc8
  402fa3:	cmp    edi,0x35
  402fa6:	retf   0xff00
  402fa9:	mov    eax,0xe5ccffce
  402fae:	les    eax,FWORD PTR [ebx-0x33d9ac34]
  402fb4:	call   FWORD PTR [ecx]
  402fb6:	xor    BYTE PTR [ecx+0xfabfff],cl
  402fbc:	add    ch,ch
  402fbe:	clc    
  402fbf:	add    DWORD PTR [ebx+0xff0182],0xffffffc6
  402fc6:	loop   0x402fc8
  402fc8:	push   DWORD PTR [ecx+0xeffffb0]
  402fce:	add    al,0x0
  402fd0:	(bad)  
  402fd1:	out    dx,eax
  402fd2:	in     al,0xcc
  402fd4:	mov    DWORD PTR [eax+0x17cc0065],ecx
  402fda:	cmp    bh,bh
  402fdc:	call   FWORD PTR [edi-0x537600d2]
  402fe2:	xor    al,BYTE PTR [eax]
  402fe4:	(bad)  
  402fe5:	(bad)  
  402fe6:	push   esi
  402fe7:	(bad)  
  402fe8:	jmp    DWORD PTR [esi]
  402fea:	sbb    eax,DWORD PTR [eax]
  402fec:	int3   
  402fed:	ror    DWORD PTR [eax-0x66470100],0x0
  402ff4:	add    DWORD PTR ds:0x800ff97,0xffffffaa
  402ffb:	add    BYTE PTR [eax],al
  402ffd:	jecxz  0x402fba
  402fff:	or     esp,0xffffff8a
  403002:	inc    edx
  403003:	add    BYTE PTR [ecx+0x3e13],cl
  403009:	scas   al,BYTE PTR es:[edi]
  40300a:	mov    bh,bh
  40300c:	add    DWORD PTR [edx+0x56ffff74],0xffffffc4
  403013:	mov    DWORD PTR [eax],eax
  403015:	push   esp
  403016:	fadd   QWORD PTR [eax]
  403018:	add    BYTE PTR [ecx-0x2c],ah
  40301b:	(bad)  
  40301c:	(bad)  
  40301d:	jmp    0x1c3f310c
  403022:	aas    
  403023:	cmp    edi,0xffffffc3
  403026:	mov    ebp,0x12b100ff
  40302b:	inc    DWORD PTR [eax]
  40302d:	xchg   edi,eax
  40302e:	aas    
  40302f:	(bad)  
  403030:	call   DWORD PTR [edi-0x5eff0047]
  403036:	iret   
  403037:	dec    esp
  403039:	jmp    0x1dc9fc7b
  40303e:	outs   dx,DWORD PTR ds:[esi]
  40303f:	cmp    edi,0xffffffbd
  403042:	mov    ecx,0xf26b8900
  403047:	int3   
  403048:	dec    DWORD PTR [eax+edi*1]
  40304b:	mov    DWORD PTR [eax],eax
  40304d:	leave  
  40304e:	retf   0xffff
  403051:	mov    edi,0x9d000076
  403056:	jae    0x403058
  403058:	add    BYTE PTR [edi+0x7e00ff46],cl
  40305e:	dec    ebx
  40305f:	mov    DWORD PTR [ecx-0x7600fb5c],ecx
  403065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403066:	xchg   ecx,eax
  403067:	add    DWORD PTR [ebx-0x7cfff152],0x2d
  40306e:	xlat   BYTE PTR ds:[ebx]
  40306f:	add    bh,bh
  403071:	fdiv   QWORD PTR [ebx+0x0]
  403074:	add    BYTE PTR [edi+0x7dff833a],dh
  40307a:	test   al,0x83
  40307c:	push   esp
  40307e:	mov    BYTE PTR [eax],al
  403080:	push   DWORD PTR [ecx+0x6bffff0c]
  403086:	(bad)  
  403088:	jmp    FWORD PTR [edx-0x697c334f]
  40308e:	inc    esp
  40308f:	add    BYTE PTR [eax],al
  403091:	call   0x10d3090
  403096:	jp     0x403064
  403098:	inc    DWORD PTR [ebx-0x14]
  40309b:	add    BYTE PTR [ebx-0x7cffd367],al
  4030a1:	adc    ah,BYTE PTR ds:0x188d00ff
  4030a7:	(bad)  
  4030a8:	inc    ebx
  4030aa:	sub    DWORD PTR [eax],eax
  4030ac:	inc    ecx
  4030ae:	jl     0x40307c
  4030b0:	jmp    DWORD PTR [ebp-0x3]
  4030b3:	dec    DWORD PTR [ecx-0x99ad]
  4030b9:	popf   
  4030ba:	(bad)
  4030be:	dec    eax
  4030bf:	inc    DWORD PTR [eax]
  4030c1:	pop    es
  4030c2:	test   bh,bh
  4030c4:	(bad)  
  4030c5:	mov    ecx,0xabffffd8
  4030ca:	push   edi
  4030cb:	inc    DWORD PTR [eax]
  4030cd:	les    ebx,FWORD PTR [ebx]
  4030cf:	dec    DWORD PTR [ecx-0x337c4aa6]
  4030d5:	retf   0xffa8
  4030d8:	add    BYTE PTR [eax],dh
  4030da:	ret    0x0
  4030dd:	dec    edx
  4030de:	sub    eax,0x5cce8300
  4030e3:	mov    DWORD PTR [eax],eax
  4030e5:	push   edx
  4030e6:	sahf   
  4030e7:	inc    DWORD PTR [eax]
  4030e9:	and    BYTE PTR [edx-0x98b0000],dh
  4030ef:	inc    DWORD PTR [eax]
  4030f1:	cmp    BYTE PTR [edi],dh
  4030f3:	inc    DWORD PTR [eax]
  4030f5:	jmp    0x4030dc
  4030f7:	inc    DWORD PTR [eax]
  4030f9:	jb     0x4030b6
  4030fb:	inc    DWORD PTR [eax]
  4030fd:	pop    ss
  4030fe:	inc    esp
  4030ff:	add    BYTE PTR [eax],al
  403101:	enter  0xffd3,0xff
  403105:	add    al,0xb
  403107:	add    bh,bh
  403109:	shl    BYTE PTR [ecx+ecx*4-0x77],1
  40310d:	add    eax,0xff8945
  403112:	cmp    edi,0xffc01eff
  403118:	dec    edi
  40311a:	arpl   WORD PTR [eax],ax
  40311c:	int3   
  40311d:	jecxz  0x4030ff
  40311f:	(bad)  
  403120:	call   DWORD PTR [edx+0x5c]
  403123:	int3   
  403124:	add    DWORD PTR [ecx+0x14],0xffffffff
  403128:	mov    DWORD PTR [edx+edx*1+0x3b518300],ebp
  40312f:	dec    esp
  403131:	or     DWORD PTR [eax],0x84068983
  403137:	mov    DWORD PTR [eax],eax
  403139:	(bad)  
  40313a:	stos   BYTE PTR es:[edi],al
  40313b:	(bad)  
  40313c:	call   DWORD PTR [ebx]
  40313e:	and    eax,DWORD PTR [eax]
  403140:	call   ecx
  403142:	push   cs
  403143:	add    DWORD PTR [eax],0xffffff81
  403146:	jl     0x403147
  403148:	dec    DWORD PTR [edi]
  40314a:	cmp    edi,edi
  40314c:	(bad)  
  40314d:	fld    DWORD PTR [edx-0x141c0001]
  403153:	inc    DWORD PTR [ebx-0xea9e]
  403159:	jmp    0x40310b
  40315b:	(bad)  
  40315c:	call   DWORD PTR [ebx]
  40315e:	iret   
  40315f:	inc    DWORD PTR [eax]
  403161:	hlt    
  403162:	sub    eax,DWORD PTR [ebx+0x21e200]
  403168:	int3   
  403169:	arpl   WORD PTR [edi-0x1],bx
  40316c:	int3   
  40316d:	lock adc ecx,esp
  403170:	jmp    FWORD PTR [ebp-0x730000e7]
  403176:	add    edi,edi
  403178:	dec    DWORD PTR [ecx]
  40317a:	ret    0x89ff
  40317d:	pop    esp
  40317e:	sar    edi,0xcc
  403181:	sub    DWORD PTR [ebp-0x1],edi
  403184:	jmp    FWORD PTR [edi-0x67ff3392]
  40318a:	pop    edx
  40318b:	cmp    edi,0xffffffd5
  40318e:	sub    eax,0x796983ff
  403193:	int3   
  403194:	add    bl,bl
  403196:	call   0xff:0x1886ffff
  40319d:	inc    edi
  40319e:	mov    ebx,0x1bf68300
  4031a3:	(bad)  
  4031a4:	dec    DWORD PTR [eax+0x9]
  4031a7:	add    BYTE PTR [ebx-0xffd4f7],al
  4031ad:	dec    edi
  4031ae:	pop    eax
  4031af:	add    DWORD PTR [eax],0x6a
  4031b2:	cdq    
  4031b3:	cmp    edi,0xffffffea
  4031b6:	mov    al,0xff
  4031b8:	mov    DWORD PTR ds:0xbf000009,ecx
  4031be:	push   0xffffffcc
  4031c0:	jmp    DWORD PTR [edx+ebx*2-0x29d30100]
  4031c7:	inc    DWORD PTR [ebx-0xffa79c]
  4031cd:	cmp    al,BYTE PTR [ecx-0x4fe2ff7d]
  4031d3:	(bad)  
  4031d4:	inc    DWORD PTR [edi]
  4031d6:	mov    ebp,0x3f000000
  4031db:	mov    DWORD PTR [eax],eax
  4031dd:	xchg   BYTE PTR [edx-0x8be3400],al
  4031e3:	inc    DWORD PTR [eax]
  4031e5:	dec    esi
  4031e6:	jae    0x4031e8
  4031e8:	cmp    ecx,0x65
  4031eb:	cmp    edi,0x46
  4031ee:	jnp    0x4031f0
  4031f0:	push   edx
  4031f2:	and    eax,DWORD PTR [eax]
  4031f4:	call   DWORD PTR [ecx+0x28fffff1]
  4031fa:	(bad)  
  4031fb:	inc    DWORD PTR [eax]
  4031fd:	xor    esi,DWORD PTR [eax]
  4031ff:	(bad)  
  403200:	inc    DWORD PTR [ebp-0x54ffff93]
  403206:	adc    eax,0x23130083
  40320b:	int3   
  40320c:	int3   
  40320d:	pop    ebx
  40320e:	js     0x403193
  403210:	add    BYTE PTR [ecx-0x5cff76e3],dh
  403216:	mov    eax,0x347300cc
  40321b:	dec    DWORD PTR [ecx-0x33005115]
  403221:	jae    0x4031fa
  403223:	inc    DWORD PTR [eax]
  403225:	jg     0x4031af
  403227:	mov    DWORD PTR [eax],eax
  403229:	mov    ebp,0x898383cd
  40322e:	call   0x2813332
  403233:	(bad)  
  403234:	jmp    FWORD PTR ds:0x4000024
  40323a:	xlat   BYTE PTR ds:[ebx]
  40323b:	int3   
  40323c:	(bad)  
  40323d:	mov    ebp,0xffffff48
  403242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403243:	or     DWORD PTR [ecx-0x7c768617],0x6d
  40324a:	add    bh,bh
  40324c:	or     DWORD PTR [esi-0x40767c5d],0x2
  403253:	dec    DWORD PTR [ecx+0xff9254]
  403259:	into   
  40325a:	cmp    eax,DWORD PTR [eax]
  40325c:	add    BYTE PTR [edx],ah
  40325e:	int3   
  40325f:	add    BYTE PTR [ecx-0xece7],cl
  403265:	aas    
  403266:	ins    BYTE PTR es:[edi],dx
  403267:	inc    DWORD PTR [eax]
  403269:	shl    BYTE PTR [ecx-0x10e97c01],0xff
  403270:	inc    DWORD PTR [eax]
  403272:	cmp    al,BYTE PTR [ebx+0x9218ff]
  403278:	sub    esi,0xffffffc6
  40327b:	inc    DWORD PTR [eax]
  40327d:	or     ebp,DWORD PTR [edi-0x1]
  403280:	(bad)  
  403281:	ds int3 
  403283:	add    BYTE PTR [eax],al
  403285:	jmp    0x4032f8
  403287:	mov    DWORD PTR [ecx-0xff3af0],ecx
  40328d:	jne    0x4032cc
  40328f:	add    BYTE PTR [eax],al
  403291:	daa    
  403292:	imul   eax,DWORD PTR [ebx-0x33a05c7d],0x0
  403299:	sar    DWORD PTR [edi-0x1],cl
  40329c:	mov    DWORD PTR [ecx-0x3fff76f9],eax
  4032a2:	add    DWORD PTR [eax],0xffffffff
  4032a5:	popf   
  4032a6:	or     edi,edi
  4032a8:	add    BYTE PTR [ebp+0x1100896e],bl
  4032ae:	pop    ebx
  4032af:	mov    DWORD PTR [ebx+0xa84a],eax
  4032b5:	dec    ebp
  4032b6:	inc    ecx
  4032b7:	add    BYTE PTR [eax],al
  4032b9:	or     DWORD PTR [ecx],ebp
  4032bb:	(bad)  
  4032bc:	jmp    DWORD PTR [ebp+0x54]
  4032bf:	add    bh,bh
  4032c1:	dec    esp
  4032c2:	scas   al,BYTE PTR es:[edi]
  4032c3:	add    bh,bh
  4032c5:	pop    edi
  4032c6:	mov    eax,DWORD PTR [eax]
  4032c8:	int3   
  4032c9:	popf   
  4032ca:	ud0    eax,DWORD PTR [eax]
  4032cd:	out    0xdd,eax
  4032cf:	cmp    edi,0xffffffc1
  4032d2:	popf   
  4032d3:	(bad)  
  4032d4:	jmp    esi
  4032d6:	mov    ecx,0x433ffff
  4032db:	add    BYTE PTR [ecx+0xcc2ddd],cl
  4032e1:	js     0x403267
  4032e3:	inc    DWORD PTR [eax]
  4032e5:	ja     0x4032ab
  4032e7:	int3   
  4032e8:	dec    DWORD PTR [esi]
  4032ea:	fcos   
  4032ec:	add    BYTE PTR [edx-0x42],dl
  4032ef:	inc    DWORD PTR [eax]
  4032f1:	stos   DWORD PTR es:[edi],eax
  4032f2:	outs   dx,BYTE PTR ds:[esi]
  4032f3:	int3   
  4032f4:	push   DWORD PTR [edi-0x6500ffab]
  4032fa:	outs   dx,DWORD PTR ds:[esi]
  4032fb:	inc    DWORD PTR [eax]
  4032fd:	sub    edi,ecx
  4032ff:	int3   
  403300:	(bad)  
  403301:	in     eax,dx
  403302:	inc    ecx
  403303:	(bad)  
  403304:	push   DWORD PTR [edx-0x4d00ff8e]
  40330a:	int3   
  40330b:	inc    DWORD PTR [eax]
  40330d:	loope  0x40331b
  40330f:	add    bh,bh
  403311:	push   esp
  403312:	loope  0x403313
  403314:	add    BYTE PTR [ebx+0x18fffff7],dl
  40331a:	daa    
  40331b:	add    bh,bh
  40331d:	mov    ds:0x7b8300a2,al
  403322:	inc    edx
  403323:	inc    DWORD PTR [ebx+0x603e]
  403329:	arpl   WORD PTR [ebx+0x5c9cccff],di
  40332f:	add    DWORD PTR [eax],0x2b
  403332:	sbb    eax,0x80e3ffff
  403337:	add    BYTE PTR [eax],al
  403339:	das    
  40333a:	fwait
  40333b:	add    bh,bh
  40333d:	repz enter 0x83,0xe
  403342:	jmp    0xb426ff47
  403347:	add    BYTE PTR [eax],al
  403349:	bound  ecx,QWORD PTR [ebp+0x54b8ffff]
  40334f:	dec    DWORD PTR [ecx-0xff3fdc]
  403355:	mov    ebp,0xa2ff0008
  40335a:	idiv   edi
  40335c:	mov    DWORD PTR [ebx],edx
  40335e:	or     al,0x89
  403360:	mov    edx,esp
  403362:	sub    al,0xff
  403364:	(bad)  
  403365:	(bad)  
  403366:	cdq    
  403367:	inc    DWORD PTR [eax]
  403369:	xor    edi,DWORD PTR [ebp+0x0]
  40336c:	dec    DWORD PTR [eax+0x76]
  40336f:	add    BYTE PTR [eax],al
  403371:	mov    WORD PTR [ecx],?
  403373:	inc    DWORD PTR [eax]
  403375:	push   es
  403376:	mov    ecx,0xde140000
  40337b:	add    bh,bh
  40337d:	push   cs
  40337e:	cwde   
  40337f:	(bad)  
  403380:	(bad)  
  403381:	jge    0x40338b
  403383:	inc    DWORD PTR [eax]
  403385:	sbb    esp,DWORD PTR [ecx]
  403387:	add    DWORD PTR [eax],0x24
  40338a:	pop    ss
  40338b:	add    BYTE PTR [ebx-0xff917e],al
  403391:	dec    esp
  403392:	xchg   edi,edi
  403394:	push   DWORD PTR [ebp+0x3c8383ea]
  40339a:	sub    al,0xcc
  40339c:	add    BYTE PTR ds:0xecff00f7,ah
  4033a2:	and    al,0xff
  4033a4:	int3   
  4033a5:	in     eax,dx
  4033a6:	lock inc DWORD PTR [eax]
  4033a9:	and    al,0x19
  4033ab:	inc    DWORD PTR [ebx-0x7cfffd11]
  4033b1:	es scas eax,DWORD PTR es:[edi]
  4033b3:	add    bh,bh
  4033b5:	aaa    
  4033b6:	mov    dh,0xcc
  4033b8:	add    BYTE PTR [ecx],bh
  4033ba:	xchg   DWORD PTR [eax],eax
  4033bc:	(bad)  
  4033bd:	mov    ebx,0x79cc893d
  4033c2:	popa   
  4033c3:	add    DWORD PTR [ebx+0xff12a5],0xfffffffb
  4033ca:	test   eax,0x32e300ff
  4033cf:	add    BYTE PTR [eax],al
  4033d1:	pop    ss
  4033d2:	add    edi,edi
  4033d4:	jmp    FWORD PTR [edx]
  4033d6:	mov    ecx,0xc33800ff
  4033db:	dec    esp
  4033dd:	pop    es
  4033de:	ds int3 
  4033e0:	add    DWORD PTR [ebx],0x6a
  4033e3:	inc    DWORD PTR [eax]
  4033e5:	mov    WORD PTR [edx-0x15457c34],gs
  4033eb:	int3   
  4033ec:	add    BYTE PTR [edx+0x5c83ffb5],bl
  4033f2:	out    0xff,eax
  4033f4:	add    BYTE PTR [ebx+0x2f],al
  4033f7:	int3   
  4033f8:	xor    esp,0xffffff93
  4033fb:	mov    DWORD PTR [ecx-0xffef9d],ecx
  403401:	add    DWORD PTR [eax+0x0],0xff25a3ff
  403408:	add    BYTE PTR [esi],bh
  40340a:	(bad)  
  40340b:	inc    DWORD PTR [eax]
  40340d:	sub    al,BYTE PTR [edi-0x2280000]
  403413:	(bad)  
  403414:	call   DWORD PTR [esi-0x1d337c27]
  40341a:	fiadd  DWORD PTR [ebx-0x33eb01]
  403420:	int3   
  403421:	jns    0x403495
  403423:	int3   
  403424:	inc    DWORD PTR [edx]
  403426:	mov    ecx,esp
  403428:	dec    esp
  40342a:	retf   0x0
  40342d:	inc    ecx
  40342e:	jle    0x40342f
  403430:	add    BYTE PTR [edi+0x34008338],bh
  403436:	cmp    edi,0x0
  403439:	xor    bh,BYTE PTR [edx]
  40343b:	cmp    edi,0xffffffc6
  40343e:	retf   
  40343f:	add    bh,bh
  403441:	inc    edi
  403442:	mov    al,0xff
  403444:	push   DWORD PTR [edx]
  403446:	mov    ebp,0x4cd30000
  40344b:	inc    DWORD PTR [eax]
  40344d:	add    BYTE PTR [esi-0x25750001],dl
  403453:	inc    DWORD PTR [eax]
  403455:	push   ss
  403456:	fild   WORD PTR [eax]
  403458:	jmp    DWORD PTR [eax+0x75ff00f7]
  40345e:	cmp    eax,0xf714ffff
  403463:	add    bh,bh
  403465:	mov    esi,0x80ff00b3
  40346a:	mov    dl,0x83
  40346c:	jmp    FWORD PTR [esi]
  40346e:	popf   
  40346f:	add    BYTE PTR [eax],al
  403471:	test   al,0x83
  403473:	inc    DWORD PTR [eax]
  403475:	adc    dh,bl
  403477:	(bad)  
  403478:	dec    eax
  40347a:	repz inc DWORD PTR [eax]
  40347d:	(bad)  
  40347e:	xchg   ecx,eax
  40347f:	int3   
  403480:	cmp    DWORD PTR [esi+0x789ffc1],0x50
  403487:	int3   
  403488:	(bad)  
  403489:	fidiv  WORD PTR [edi-0x1accff01]
  40348f:	(bad)  
  403490:	(bad)  
  403491:	jns    0x4034aa
  403493:	mov    edi,edi
  403495:	ss (bad) 
  403497:	(bad)  
  403498:	(bad)  
  403499:	fnstcw WORD PTR [ebx-0x77]
  40349c:	(bad)  
  40349d:	call   DWORD PTR ds:0x7495ffff
  4034a3:	(bad)  
  4034a4:	call   FWORD PTR [esi-0xf007c52]
  4034aa:	rol    BYTE PTR [eax],0xcc
  4034ad:	fcom   st(5)
  4034af:	(bad)  
  4034b0:	call   DWORD PTR [ebp+0x39]
  4034b3:	add    DWORD PTR [eax],0xfffffff4
  4034b6:	enter  0x0,0x85
  4034ba:	sahf   
  4034bb:	add    bh,bh
  4034bd:	xor    eax,0xff832b
  4034c2:	pop    ebx
  4034c3:	add    BYTE PTR [eax],al
  4034c5:	push   esi
  4034c6:	sbb    al,BYTE PTR [eax]
  4034c8:	call   FWORD PTR [eax+esi*2]
  4034cb:	add    BYTE PTR [eax],al
  4034cd:	int3   
  4034ce:	fadd   QWORD PTR [eax]
  4034d0:	add    BYTE PTR [edx],bl
  4034d2:	lods   eax,DWORD PTR ds:[esi]
  4034d3:	(bad)  
  4034d4:	dec    DWORD PTR [ebp+0x218300b4]
  4034da:	in     al,dx
  4034db:	mov    edi,edi
  4034dd:	ja     0x403552
  4034df:	add    bh,bh
  4034e1:	inc    ecx
  4034e2:	mov    DWORD PTR [eax],0x1aeacc
  4034e8:	cmp    DWORD PTR [eax+0x20ff83a9],0xffffffdb
  4034ef:	add    BYTE PTR [ecx-0x7c007872],cl
  4034f5:	or     DWORD PTR [eax-0x772b0077],esp
  4034fb:	add    BYTE PTR [eax],al
  4034fd:	loop   0x403523
  4034ff:	add    bh,bh
  403501:	mov    ebx,ebx
  403503:	mov    DWORD PTR [eax],eax
  403505:	popa   
  403506:	data16 (bad) 
  403508:	push   DWORD PTR [ebp+0x240000c9]
  40350e:	jecxz  0x40350f
  403510:	add    BYTE PTR [ecx*4+0x676ccff],cl
  403517:	add    bh,bh
  403519:	test   DWORD PTR [ebx],ecx
  40351b:	add    bh,bh
  40351d:	scas   eax,DWORD PTR es:[edi]
  40351e:	ins    BYTE PTR es:[edi],dx
  40351f:	add    BYTE PTR [eax],al
  403521:	ja     0x40350a
  403523:	add    bh,bh
  403525:	mov    ds:0xb1ff008d,eax
  40352a:	add    edi,edi
  40352c:	mov    DWORD PTR [edi-0x3976ffaf],eax
  403532:	test   al,0x0
  403534:	jmp    DWORD PTR [edi]
  403536:	dec    edi
  403537:	add    ah,cl
  403539:	mov    esp,0xa383ffa8
  40353e:	mov    eax,0xcf53ff00
  403543:	mov    DWORD PTR [eax],eax
  403545:	mov    edx,ebp
  403547:	dec    DWORD PTR [ecx-0xc634]
  40354d:	pop    ds
  40354e:	add    eax,0x9cb6cc83
  403553:	inc    DWORD PTR [eax]
  403555:	mov    WORD PTR [ebp-0x1],cs
  403558:	inc    DWORD PTR [edi-0x5a]
  40355b:	int3   
  40355c:	push   DWORD PTR [esp+ecx*4-0x50deff01]
  403563:	(bad)  
  403564:	jmp    FWORD PTR [esi]
  403566:	cmp    bh,0x83
  403569:	int3   
  40356a:	cmp    esp,ecx
  40356c:	add    BYTE PTR [ecx],ah
  40356e:	jmp    0x403570
  403570:	call   FWORD PTR [ebp+0x67]
  403573:	add    bh,bh
  403575:	xor    DWORD PTR [edx],edx
  403577:	mov    edi,edi
  403579:	ret    
  40357a:	jle    0x40357c
  40357c:	(bad)  
  40357d:	fadd   DWORD PTR [ecx+0x0]
  403580:	call   FWORD PTR [edi+0x76]
  403583:	(bad)  
  403584:	(bad)  
  403585:	cli    
  403586:	cmp    bh,0x0
  403589:	fdiv   QWORD PTR [esi]
  40358b:	mov    DWORD PTR [eax],eax
  40358d:	adc    edx,DWORD PTR [edi+edi*8+0x0]
  403591:	mov    edi,0x3883ff54
  403596:	scas   al,BYTE PTR es:[edi]
  403597:	add    BYTE PTR [ebx-0x7c844b],al
  40359d:	dec    esp
  40359e:	jl     0x40359f
  4035a0:	jmp    DWORD PTR [esi-0x73]
  4035a3:	inc    DWORD PTR [eax]
  4035a5:	mov    eax,ds:0x73fffffc
  4035aa:	mov    ch,0x0
  4035ac:	call   DWORD PTR [esi-0x7c330058]
  4035b2:	pop    esi
  4035b3:	int3   
  4035b4:	add    BYTE PTR [ecx-0x5],dl
  4035b7:	inc    DWORD PTR [eax]
  4035b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ba:	(bad)  
  4035bb:	dec    DWORD PTR [ecx-0x604b]
  4035c1:	push   cs
  4035c2:	adc    edi,edi
  4035c4:	and    esp,0x40
  4035c7:	add    BYTE PTR [eax],al
  4035c9:	dec    eax
  4035ca:	(bad)  
  4035cb:	(bad)  
  4035cc:	call   DWORD PTR [ebx-0x20760021]
  4035d2:	jge    0x4035d3
  4035d4:	add    al,cl
  4035d6:	iret   
  4035d7:	inc    DWORD PTR [eax]
  4035d9:	push   ebx
  4035da:	das    
  4035db:	inc    DWORD PTR [eax]
  4035dd:	rcl    bh,cl
  4035df:	inc    DWORD PTR [eax]
  4035e1:	popf   
  4035e2:	add    al,0xff
  4035e4:	sbb    esi,0xffffffbe
  4035e7:	(bad)  
  4035e8:	(bad)  
  4035e9:	mov    esi,0x97ffff3e
  4035ee:	pop    eax
  4035ef:	(bad)  
  4035f0:	push   DWORD PTR [edi-0x78000092]
  4035f6:	jmp    0xffff:0xad5ffff
  4035fd:	enter  0xffd9,0x0
  403601:	es ret 
  403603:	dec    DWORD PTR [ecx-0x3300dc93]
  403609:	dec    ecx
  40360a:	arpl   WORD PTR [eax],ax
  40360c:	jmp    DWORD PTR [ebx+0x18]
  40360f:	(bad)  
  403610:	(bad)  
  403611:	jg     0x403634
  403613:	add    BYTE PTR [eax],al
  403615:	push   ecx
  403616:	jne    0x403618
  403618:	add    BYTE PTR ds:0xceffff4a,cl
  40361e:	cmp    edi,0xffabb0cc
  403624:	(bad)  
  403625:	fsub   QWORD PTR [edi+edi*8-0xabe77]
  40362c:	call   FWORD PTR [ebx-0x3f]
  40362f:	inc    DWORD PTR [eax]
  403631:	in     al,dx
  403632:	adc    edi,edi
  403634:	or     esp,0x4
  403637:	dec    DWORD PTR [ecx-0x7c3c44]
  40363d:	xchg   BYTE PTR [edx-0x1],ch
  403640:	int3   
  403641:	and    dl,al
  403643:	or     esp,0x44
  403646:	jae    0x403647
  403648:	add    bl,bl
  40364a:	(bad)  
  40364b:	int3   
  40364c:	add    al,dh
  40364e:	jnp    0x403650
  403650:	mov    eax,edi
  403652:	les    eax,FWORD PTR [eax]
  403654:	add    BYTE PTR [ecx+0x3d],ch
  403657:	mov    DWORD PTR [ebx+0x1098],eax
  40365d:	add    DWORD PTR [eax+0x0],ebx
  403660:	and    DWORD PTR [edx],0x22
  403663:	add    BYTE PTR [eax],al
  403665:	adc    cl,dl
  403667:	cmp    edi,0x0
  40366a:	mov    ds:0xcdfcff83,eax
  40366f:	dec    DWORD PTR [ecx+0x6310]
  403675:	xchg   ecx,eax
  403676:	mov    esp,0xf379ff83
  40367b:	add    BYTE PTR [ecx-0x76ff1eed],cl
  403681:	adc    edx,DWORD PTR [ebp+0x0]
  403684:	add    BYTE PTR [ebx-0x4a00004b],cl
  40368a:	(bad)  
  40368c:	mov    DWORD PTR [ebx-0x19],edx
  40368f:	mov    edi,edi
  403691:	add    eax,0xb7898322
  403696:	cs add bh,bh
  403699:	(bad)  
  40369a:	loopne 0x403625
  40369c:	inc    DWORD PTR [ebp-0x7676aa]
  4036a2:	jo     0x4036a3
  4036a4:	dec    DWORD PTR [edi-0x5effffb0]
  4036aa:	mov    esi,0x5e7ffff
  4036af:	int3   
  4036b0:	add    BYTE PTR [eax-0x4c],dl
  4036b3:	(bad)  
  4036b4:	(bad)  
  4036b5:	fisubr DWORD PTR [ebp-0x33333301]
  4036bb:	int3   
  4036bc:	int3   
  4036bd:	int3   
  4036be:	int3   
  4036bf:	int3   
  4036c0:	xor    eax,0x89d4ff18
  4036c5:	popa   
  4036c6:	add    bh,bh
  4036c8:	loop   0x4036c0
  4036ca:	cmp    edi,0xffffff84
  4036cd:	lods   eax,DWORD PTR ds:[esi]
  4036ce:	add    bh,bh
  4036d0:	fild   QWORD PTR [ecx+0x4ff8683]
  4036d6:	inc    DWORD PTR [eax]
  4036d8:	add    BYTE PTR [eax+0x0],ch
  4036db:	call   FWORD PTR [eax-0x7e007c83]
  4036e1:	repnz (bad) 
  4036e3:	cmp    al,0x0
  4036e5:	add    al,0x89
  4036e7:	add    BYTE PTR [eax],ah
  4036e9:	aam    0x0
  4036eb:	jmp    DWORD PTR [eax]
  4036ed:	mov    dh,0xff
  4036ef:	int3   
  4036f0:	cwde   
  4036f1:	xchg   ebp,eax
  4036f2:	mov    DWORD PTR [eax],edx
  4036f4:	call   esi
  4036f6:	mov    DWORD PTR [eax],eax
  4036f8:	frstor [edx-0x1]
  4036fb:	add    dl,ch
  4036fd:	icebp  
  4036fe:	int3   
  4036ff:	add    BYTE PTR [eax-0x30],dh
  403702:	dec    edx
  403704:	inc    DWORD PTR [edi+edi*8-0x1]
  403708:	push   eax
  403709:	jl     0x40368e
  40370b:	call   esi
  40370d:	dec    esi
  40370e:	inc    DWORD PTR [ebx+0x16ff3234]
  403714:	add    BYTE PTR [edi],bl
  403716:	(bad)  
  403717:	(bad)  
  403718:	aas    
  403719:	scas   al,BYTE PTR es:[edi]
  40371a:	inc    DWORD PTR [eax]
  40371c:	into   
  40371d:	add    BYTE PTR [ebx+0xa77ecc],al
  403723:	pop    edx
  403724:	call   DWORD PTR [ebx-0x237601]
  40372a:	int3   
  40372b:	inc    ebx
  40372d:	xchg   ebp,eax
  40372e:	add    DWORD PTR [eax],0x48
  403731:	in     al,dx
  403732:	(bad)  
  403733:	fdivr  st,st(7)
  403735:	cmc    
  403736:	add    bh,bh
  403738:	gs std 
  40373a:	add    bh,bh
  40373c:	mov    dh,BYTE PTR [edi]
  40373e:	add    BYTE PTR [eax],al
  403740:	mov    ah,ch
  403742:	inc    DWORD PTR [ecx-0xb17d]
  403748:	cmp    al,0x57
  40374a:	inc    DWORD PTR [ebx-0xd468]
  403750:	jnp    0x4036e7
  403752:	sub    DWORD PTR [edx],0x0
  403755:	ds cmp edi,0xffffffce
  403759:	cmc    
  40375a:	add    BYTE PTR [ecx-0xaba],cl
  403760:	call   0x13436b5
  403765:	loopne 0x403766
  403767:	call   DWORD PTR [eax-0x69000011]
  40376d:	cmc    
  40376e:	mov    esp,ecx
  403770:	cmp    ch,BYTE PTR [ebx-0x7d]
  403773:	idiv   bh
  403775:	lods   al,BYTE PTR ds:[esi]
  403776:	mov    edi,edi
  403778:	jecxz  0x4037e8
  40377a:	cmp    edi,0xffffffcb
  40377d:	sub    bh,bh
  40377f:	mov    DWORD PTR [esi+0x6a],ecx
  403782:	push   DWORD PTR [edi+edi*8-0x1d00ffbd]
  403789:	add    BYTE PTR [eax],al
  40378b:	add    BYTE PTR [edx+0x42],cl
  40378e:	inc    DWORD PTR [eax]
  403790:	std    
  403791:	jno    0x403793
  403793:	and    bh,bh
  403795:	adc    ecx,esp
  403797:	call   eax
  403799:	inc    esi
  40379a:	int3   
  40379b:	adc    DWORD PTR [ecx+0x67],0xffffffcc
  40379f:	add    BYTE PTR [eax+0x5aff2e],bl
  4037a5:	mov    edx,0xc8ca8383
  4037aa:	mov    DWORD PTR [eax],eax
  4037ac:	pop    esp
  4037ad:	inc    ebp
  4037ae:	(bad)  
  4037af:	call   edi
  4037b1:	mov    ebx,0xdbff6b00
  4037b6:	inc    DWORD PTR [eax]
  4037b8:	cs cmp bh,bh
  4037bb:	add    BYTE PTR ds:0xa0ff834f,dl
  4037c1:	mov    bl,0xff
  4037c3:	dec    esi
  4037c4:	adc    DWORD PTR [ebx-0x77],0x0
  4037c8:	imul   ebx,eax,0x6e66ffff
  4037ce:	inc    DWORD PTR [ebx-0xf00bd5f]
  4037d4:	inc    ebx
  4037d6:	inc    DWORD PTR [eax]
  4037d8:	outs   dx,BYTE PTR ds:[esi]
  4037d9:	xlat   BYTE PTR ds:[ebx]
  4037da:	add    bh,bh
  4037dc:	sbb    al,0x72
  4037de:	add    bh,bh
  4037e0:	xor    DWORD PTR [ebx+0x0],edi
  4037e3:	(bad)  
  4037e4:	(bad)  
  4037e5:	in     al,dx
  4037e6:	(bad)  
  4037e7:	jmp    DWORD PTR [eax+0x3d]
  4037ea:	add    bh,bh
  4037ec:	mov    ch,0x15
  4037ee:	mov    DWORD PTR [ecx+0x4bff0693],ecx
  4037f4:	dec    eax
  4037f6:	int3   
  4037f7:	add    BYTE PTR [eax-0x4733ff0f],dl
  4037fd:	in     al,dx
  4037fe:	inc    DWORD PTR [ebx+0x44ffc42f]
  403804:	inc    DWORD PTR [ebx-0x77]
  403807:	xor    DWORD PTR [ecx+ebx*4+0x7dfdff83],0x0
  40380f:	add    BYTE PTR [ebx+eiz*2-0x1],ah
  403813:	imul   edi,edi,0xe8ff8322
  403819:	jo     0x4037e7
  40381b:	push   DWORD PTR [edi+esi*8]
  40381e:	(bad)  
  40381f:	jmp    esi
  403821:	int    0x0
  403823:	sar    edi,0x4b
  403826:	add    bh,bh
  403828:	out    0x63,al
  40382a:	(bad)  
  40382b:	jmp    DWORD PTR [edi]
  40382d:	pop    esi
  40382e:	inc    DWORD PTR [ebx+0x36ffe569]
  403834:	int3   
  403835:	jno    0x403836
  403837:	adc    DWORD PTR [ecx-0x620000a5],0x2d
  40383e:	inc    DWORD PTR [ebx-0x4bff5349]
  403844:	add    BYTE PTR [ebx+0x0],ah
  403847:	int3   
  403848:	mov    esi,0xe3ffff5e
  40384d:	lods   eax,DWORD PTR ds:[esi]
  40384e:	(bad)  
  40384f:	jmp    DWORD PTR ds:0x7b0050
  403855:	pop    edx
  403856:	add    bh,bh
  403858:	adc    al,0x96
  40385a:	dec    esp
  40385c:	fwait
  40385d:	and    al,0xff
  40385f:	call   DWORD PTR [edx]
  403861:	cld    
  403862:	add    BYTE PTR [edx-0x2701],bh
  403868:	iret   
  403869:	inc    esi
  40386a:	int3   
  40386b:	call   ebx
  40386d:	fwait
  40386e:	mov    edi,edi
  403870:	and    DWORD PTR [esi],ebp
  403872:	add    BYTE PTR [eax-0x33bc00],bh
  403878:	jp     0x4038f4
  40387a:	inc    DWORD PTR [eax]
  40387c:	jg     0x4038a9
  40387e:	add    bh,bh
  403880:	dec    esi
  403881:	je     0x403883
  403883:	cmp    eax,0xffff14cc
  403888:	retf   0xff7e
  40388b:	inc    DWORD PTR [edx+0x14]
  40388e:	inc    DWORD PTR [eax]
  403890:	hlt    
  403891:	cwde   
  403892:	jmp    DWORD PTR ds:0x1783
  403898:	sbb    DWORD PTR [edi-0x1],ebp
  40389b:	add    DWORD PTR [eax],0xffffffad
  40389e:	mov    DWORD PTR [eax],eax
  4038a0:	mov    ss,WORD PTR [eax-0x1]
  4038a3:	sbb    al,BYTE PTR [ebx-0x2b7c0095]
  4038a9:	push   edi
  4038aa:	inc    DWORD PTR [eax]
  4038ac:	fist   DWORD PTR [edx]
  4038ae:	(bad)  
  4038af:	(bad)  
  4038b0:	jmp    DWORD PTR [ebx-0x7d]
  4038b3:	pop    ecx
  4038b4:	mov    esi,ebp
  4038b6:	add    BYTE PTR [eax],al
  4038b8:	jmp    0xff67:0xb70083f0
  4038bf:	add    BYTE PTR [esp+eax*4],bh
  4038c2:	add    bh,dl
  4038c4:	add    BYTE PTR [edx],dh
  4038c6:	add    BYTE PTR [eax],al
  4038c8:	out    dx,al
  4038c9:	pushf  
  4038ca:	add    BYTE PTR [eax],al
  4038cc:	cli    
  4038cd:	jmp    0x75cc:0xe715ff00
  4038d4:	call   esi
  4038d6:	mov    DWORD PTR [ecx-0xffa4f7],ecx
  4038dc:	loope  0x403882
  4038de:	(bad)  
  4038df:	jmp    FWORD PTR [esp+edi*1]
  4038e2:	(bad)  
  4038e3:	jp     0x4038b1
  4038e5:	lods   eax,DWORD PTR ds:[esi]
  4038e6:	or     esp,0x20
  4038e9:	test   bh,bh
  4038eb:	sbb    ebp,0x2
  4038ee:	add    bh,bh
  4038f0:	repz (bad) 
  4038f3:	(bad)  
  4038f5:	xchg   ebx,eax
  4038f6:	add    bh,bh
  4038f8:	mov    DWORD PTR [edx+0x6949ffff],edi
  4038fe:	inc    DWORD PTR [eax]
  403900:	dec    edx
  403901:	jecxz  0x403902
  403903:	push   ss
  403904:	add    BYTE PTR [ebx-0x13c80100],bh
  40390a:	inc    DWORD PTR [ebx-0x7c0012a4]
  403910:	ret    0x83d3
  403913:	out    0x83,al
  403915:	jle    0x403916
  403917:	dec    DWORD PTR [eax-0x16ff0016]
  40391d:	dec    esp
  40391e:	add    bh,bh
  403920:	xor    al,0x46
  403922:	int3   
  403923:	mov    esp,0xffffb3ff
  403928:	mov    ss,esp
  40392a:	inc    DWORD PTR [ebx-0x8284]
  403930:	retf   
  403931:	mov    ds:0x2aff1eff,al
  403936:	dec    esp
  403938:	inc    esi
  403939:	sar    bh,cl
  40393b:	add    DWORD PTR [ebx-0x587c003f],0x37
  403942:	inc    DWORD PTR [ecx-0x1]
  403945:	loope  0x403946
  403947:	(bad)  
  403948:	ds inc ebp
  40394a:	add    bh,bh
  40394c:	shr    BYTE PTR [ecx+ecx*4-0x7c7fed01],1
  403953:	imul   eax,DWORD PTR [ebx+0x2900839e],0x6c
  40395a:	inc    DWORD PTR [eax]
  40395c:	mov    edi,0x8bff00e1
  403961:	(bad)  
  403962:	int3   
  403963:	push   es
  403964:	int3   
  403965:	aaa    
  403966:	(bad)  
  403967:	push   DWORD PTR [eax]
  403969:	test   DWORD PTR [eax],eax
  40396b:	int3   
  40396c:	mov    ebx,0xad00ff71
  403971:	add    BYTE PTR ss:[eax],ch
  403974:	add    BYTE PTR [eax-0x1f430034],dh
  40397a:	or     esp,0xffffffee
  40397d:	xchg   ebp,eax
  40397e:	add    BYTE PTR [eax],al
  403980:	inc    eax
  403981:	jmp    FWORD PTR [bx+di+0x45ff]
  403986:	inc    DWORD PTR [eax]
  403988:	jmp    FWORD PTR [esi+0x77cdccff]
  40398e:	inc    DWORD PTR [ebx-0xf1f3]
  403994:	add    dh,cl
  403996:	(bad)  
  403997:	inc    DWORD PTR [ebx+0x19]
  40399a:	(bad)  
  40399b:	call   FWORD PTR [ecx]
  40399d:	push   esp
  40399e:	add    DWORD PTR [eax],0xffffff90
  4039a1:	jmp    0x4039a3
  4039a3:	idiv   edi
  4039a5:	inc    DWORD PTR es:[eax]
  4039a8:	in     eax,0x46
  4039aa:	inc    DWORD PTR [eax]
  4039ac:	test   edx,edx
  4039ae:	dec    esp
  4039b0:	dec    edx
  4039b1:	xor    al,0xff
  4039b3:	str    WORD PTR [esi]
  4039b6:	add    BYTE PTR [ebx-0xffa7b0],al
  4039bc:	mov    ch,0xa1
  4039be:	add    bh,bh
  4039c0:	dec    ebp
  4039c1:	cmp    cl,ah
  4039c3:	xor    al,0xff
  4039c5:	xchg   ebp,eax
  4039c6:	add    BYTE PTR [eax],al
  4039c8:	ins    DWORD PTR es:[edi],dx
  4039c9:	sbb    bh,bh
  4039cb:	jmp    FWORD PTR [ebx+0x3c838348]
  4039d1:	dec    ebx
  4039d2:	adc    DWORD PTR [ebx-0xdd00],0xffffff9b
  4039d9:	push   esi
  4039da:	add    bh,bh
  4039dc:	inc    edx
  4039dd:	ret    0xff
  4039e0:	arpl   WORD PTR [esi],ax
  4039e2:	jmp    FWORD PTR [ebp-0x33ff8034]
  4039e8:	and    al,0x38
  4039ea:	inc    DWORD PTR [ebx-0x2445]
  4039f0:	jnp    0x4039bd
  4039f2:	add    BYTE PTR [eax+0xe283],bh
  4039f8:	mov    bh,0x4e
  4039fa:	(bad)  
  4039fb:	push   edx
  4039fd:	xchg   ebp,eax
  4039fe:	inc    DWORD PTR [eax]
  403a00:	out    dx,al
  403a01:	push   es
  403a02:	inc    DWORD PTR [edi-0x1]
  403a05:	and    eax,DWORD PTR [eax]
  403a07:	jmp    FWORD PTR [ebx]
  403a09:	mov    bl,0xff
  403a0b:	call   DWORD PTR [eax]
  403a0d:	mov    ebx,0x8d4400ff
  403a12:	int3   
  403a13:	dec    esp
  403a14:	mov    edx,edi
  403a16:	mov    edi,edi
  403a18:	dec    ecx
  403a19:	push   ss
  403a1a:	or     DWORD PTR [ecx-0xffb62e],0x48
  403a21:	inc    edx
  403a22:	add    BYTE PTR ds:0xff9e89,cl
  403a28:	inc    ecx
  403a29:	push   edx
  403a2a:	add    bh,bh
  403a2c:	jl     0x4039e9
  403a2e:	add    bh,bh
  403a30:	push   0xfffffff8
  403a32:	jmp    FWORD PTR [edx+0x0]
  403a35:	or     eax,0xc9768900
  403a3a:	(bad)  
  403a3b:	push   DWORD PTR [eax]
  403a3d:	scas   al,BYTE PTR es:[edi]
  403a3e:	int3   
  403a3f:	push   DWORD PTR [esi]
  403a41:	cwde   
  403a42:	dec    DWORD PTR [edi+edi*8+0x2c]
  403a46:	inc    DWORD PTR [ebx-0xf644]
  403a4c:	rcr    BYTE PTR [eax+eax*1-0x1],0xd8
  403a51:	pop    ebx
  403a52:	add    esp,0xffffffff
  403a55:	pusha  
  403a56:	add    bh,bh
  403a58:	pop    ebp
  403a59:	(bad)  
  403a5a:	(bad)  
  403a5b:	dec    edx
  403a5d:	push   edi
  403a5e:	add    bh,bh
  403a60:	les    edi,FWORD PTR [ebp-0x4700e677]
  403a66:	int3   
  403a67:	call   DWORD PTR [eax]
  403a69:	xor    al,0xff
  403a6b:	jmp    DWORD PTR [esi-0x7c]
  403a6e:	int3   
  403a6f:	dec    ebp
  403a71:	sbb    DWORD PTR [ecx-0x7657007a],ecx
  403a77:	dec    DWORD PTR [esi+0x69]
  403a7a:	add    bh,bh
  403a7c:	dec    ebx
  403a7d:	outs   dx,BYTE PTR ds:[esi]
  403a7e:	add    BYTE PTR [ebx+0x27ff8fba],al
  403a84:	jmp    DWORD PTR [esi]
  403a86:	add    bh,bh
  403a88:	mov    edx,edx
  403a8a:	cmp    edi,0x49
  403a8d:	fadd   DWORD PTR [eax]
  403a8f:	add    BYTE PTR [edi+esi*4],cl
  403a92:	add    BYTE PTR [edx-0x7c33c001],dl
  403a98:	dec    ebx
  403a99:	(bad)  
  403a9b:	jmp    DWORD PTR [ebp+eax*2-0x34]
  403a9f:	dec    eax
  403aa1:	mov    ebp,0x4f00ecff
  403aa6:	int3   
  403aa7:	cmp    DWORD PTR [edi-0x6b],0xffffffff
  403aab:	add    BYTE PTR ds:0x1400ff20,dh
  403ab1:	push   0x73ffdaff
  403ab6:	add    DWORD PTR [eax],0xffffffa5
  403ab9:	jns    0x403a3e
  403abb:	adc    DWORD PTR [esi],0xffffffb7
  403abe:	inc    DWORD PTR [eax]
  403ac0:	retf   
  403ac1:	inc    ebp
  403ac2:	dec    DWORD PTR [edx-0x77]
  403ac5:	xchg   esp,eax
  403ac6:	add    BYTE PTR [eax],al
  403ac8:	aad    0x57
  403aca:	inc    DWORD PTR [eax]
  403acc:	test   al,0xc2
  403ace:	or     esp,0x16
  403ad1:	or     ah,0x66
  403ad4:	sbb    edx,0xffffffcc
  403ad7:	jmp    FWORD PTR [eax-0x427c00e4]
  403add:	fild   WORD PTR [eax]
  403adf:	add    ah,ch
  403ae1:	or     eax,DWORD PTR [eax]
  403ae3:	pop    ebx
  403ae4:	add    BYTE PTR [esi+0x2e0ccff],dl
  403aea:	int3   
  403aeb:	push   ebp
  403aed:	or     al,0xff
  403aef:	and    DWORD PTR [ecx],0x26
  403af2:	jmp    DWORD PTR [edi]
  403af4:	(bad)  
  403af5:	mov    esi,0x9d0fffff
  403afa:	cmp    edi,0x44
  403afd:	pop    ebp
  403afe:	inc    DWORD PTR [eax]
  403b00:	test   BYTE PTR [esi+0x0],dh
  403b03:	sar    edi,cl
  403b05:	cmp    edi,0xffcf79cc
  403b0b:	add    BYTE PTR [edx+0x1c83ffc1],dl
  403b11:	pop    ebp
  403b12:	add    BYTE PTR [edi-0x7c00737d],ch
  403b18:	push   edx
  403b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b1a:	add    ah,cl
  403b1c:	and    BYTE PTR [edx],cl
  403b1e:	or     esp,0x24
  403b21:	sbb    eax,0x1effd900
  403b26:	inc    DWORD PTR [eax]
  403b28:	adc    eax,0xd0ffff3a
  403b2d:	and    BYTE PTR [ecx+0x973dff],cl
  403b33:	cs add ch,dh
  403b36:	or     DWORD PTR [ecx-0xff4b81],0x4b
  403b3d:	popa   
  403b3e:	add    bh,bh
  403b40:	or     esi,edi
  403b42:	push   DWORD PTR [eax-0x1]
  403b45:	mov    dh,0xff
  403b47:	jmp    FWORD PTR [ebx+0x1a]
  403b4a:	add    BYTE PTR [ebx-0xae0f],al
  403b50:	push   ecx
  403b51:	cmp    bh,0x56
  403b54:	inc    DWORD PTR [ebx+0x0]
  403b57:	int3   
  403b58:	pop    esp
  403b59:	pusha  
  403b5a:	add    bh,bh
  403b5c:	and    ebx,DWORD PTR [edx]
  403b5e:	dec    DWORD PTR [ecx+0x75fff930]
  403b64:	jmp    edx
  403b66:	cmp    edi,0xffffffa5
  403b69:	mov    DWORD PTR [ebx-0x681501],0x6413ff
  403b73:	ret    0x5c83
  403b76:	(bad)  
  403b77:	dec    DWORD PTR [esi-0xc0033fe]
  403b7d:	cs dec esp
  403b80:	dec    eax
  403b81:	popf   
  403b82:	add    BYTE PTR [edi],cl
  403b84:	xor    DWORD PTR [ecx+0x0],0xffffffff
  403b88:	and    al,BYTE PTR [ebx-0x1]
  403b8b:	add    dh,dl
  403b8d:	xlat   BYTE PTR ds:[ebx]
  403b8e:	(bad)  
  403b8f:	inc    DWORD PTR [ebp-0x29]
  403b92:	add    ch,bl
  403b94:	add    BYTE PTR [esp+ecx*8-0x33548301],al
  403b9b:	and    esp,0xffffffe1
  403b9e:	add    BYTE PTR [eax],al
  403ba0:	mov    esi,0x89360031
  403ba5:	mov    dh,0x0
  403ba7:	call   DWORD PTR [eax+0x39ff83ae]
  403bad:	jmp    0xd383:0xdcdaffff
  403bb4:	push   DWORD PTR [esi]
  403bb6:	add    DWORD PTR [ebx-0x760095ea],0xffffffde
  403bbd:	push   eax
  403bbe:	(bad)  
  403bbf:	push   DWORD PTR [edi+ebx*8+0x0]
  403bc3:	js     0x403bc4
  403bc5:	mov    dl,0xff
  403bc7:	dec    DWORD PTR ds:0xe800cc17
  403bcd:	mov    ds:0xb9cc00,eax
  403bd2:	call   DWORD PTR [eax]
  403bd4:	add    BYTE PTR [esi],bh
  403bd6:	cmp    edi,0xfffffff4
  403bd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bda:	add    BYTE PTR [eax],al
  403bdc:	lock imul eax,DWORD PTR [ebx-0x5f8200],0x17
  403be4:	dec    DWORD PTR [edi+edi*8+0x0]
  403be8:	xchg   edi,eax
  403be9:	scas   al,BYTE PTR es:[edi]
  403bea:	cmp    edi,0x75
  403bed:	jl     0x403bef
  403bef:	inc    ebp
  403bf1:	stos   BYTE PTR es:[edi],al
  403bf2:	or     eax,0x0
  403bf5:	test   esp,ecx
  403bf7:	(bad)  
  403bf8:	aas    
  403bf9:	pushf  
  403bfa:	int3   
  403bfb:	call   DWORD PTR [ebx]
  403bfd:	aam    0x0
  403bff:	push   esi
  403c01:	sub    esp,ecx
  403c03:	sub    al,0x83
  403c05:	or     bh,bh
  403c07:	adc    esi,0xffffffb9
  403c0a:	mov    edi,edi
  403c0c:	mov    ecx,edi
  403c0e:	(bad)  
  403c0f:	push   DWORD PTR [edi]
  403c11:	in     al,dx
  403c12:	call   DWORD PTR [edi-0x1]
  403c15:	adc    eax,0xdb2789ff
  403c1a:	int3   
  403c1b:	add    cl,dh
  403c1d:	mov    bh,bh
  403c1f:	jmp    FWORD PTR [esi+eax*2+0x5083e400]
  403c26:	inc    DWORD PTR [ebx-0x33ff6b9b]
  403c2c:	mov    dl,0x19
  403c2e:	dec    DWORD PTR [ecx+0x4ecc17fe]
  403c34:	add    BYTE PTR [ebx-0x1],al
  403c37:	add    DWORD PTR [edi+0x489cc81],0x50
  403c3e:	add    BYTE PTR [ebx-0x7f000acb],al
  403c44:	jmp    DWORD PTR [edx]
  403c46:	inc    DWORD PTR [eax]
  403c48:	imul   edx,DWORD PTR [edi],0x0
  403c4b:	add    bh,cl
  403c4d:	mov    bl,0xff
  403c4f:	jmp    DWORD PTR [eax+0x29]
  403c52:	int3   
  403c53:	add    DWORD PTR [di],0xffffffff
  403c57:	inc    DWORD PTR [ecx]
  403c59:	icebp  
  403c5a:	cmp    edi,0x24
  403c5d:	sbb    ecx,DWORD PTR [ecx-0xf1db01]
  403c63:	and    DWORD PTR [eax],eax
  403c65:	push   ebp
  403c66:	(bad)  
  403c67:	(bad)  
  403c68:	clc    
  403c69:	inc    esi
  403c6a:	inc    DWORD PTR [eax]
  403c6c:	mov    al,0x62
  403c6e:	(bad)  
  403c6f:	push   ebx
  403c71:	inc    DWORD PTR ds:[ebx+eax*4+0x77]
  403c76:	(bad)  
  403c77:	(bad)  
  403c78:	jp     0x403c74
  403c7a:	inc    DWORD PTR [ebx-0x6275]
  403c80:	cmp    al,0x7e
  403c82:	inc    DWORD PTR [ebx]
  403c84:	add    BYTE PTR [edi+edi*8-0x7d],dh
  403c88:	jno    0x403c2b
  403c8a:	add    bh,bh
  403c8c:	jne    0x403d05
  403c8e:	inc    DWORD PTR [eax]
  403c90:	or     al,0x78
  403c92:	jmp    FWORD PTR [esi-0x1]
  403c95:	jae    0x403c20
  403c97:	call   DWORD PTR [eax+ebx*8]
  403c9a:	inc    DWORD PTR [eax]
  403c9c:	mul    DWORD PTR [ebx+eax*4-0x330501]
  403ca3:	push   edx
  403ca4:	mov    eax,edi
  403ca6:	inc    DWORD PTR [eax]
  403ca8:	clc    
  403ca9:	sti    
  403caa:	add    BYTE PTR [ebx-0x337ce97b],al
  403cb0:	dec    esi
  403cb1:	mov    ecx,0x68ff44ff
  403cb6:	add    ah,cl
  403cb8:	xchg   esp,eax
  403cb9:	sbb    edi,edi
  403cbb:	call   ecx
  403cbd:	leave  
  403cbe:	inc    DWORD PTR [eax]
  403cc0:	loope  0x403cee
  403cc2:	mov    DWORD PTR [edx],esp
  403cc4:	call   esp
  403cc6:	add    bh,bh
  403cc8:	jbe    0x403c92
  403cca:	int3   
  403ccb:	add    BYTE PTR [edi-0x40000006],ch
  403cd1:	fcos   
  403cd3:	dec    ebx
  403cd4:	inc    DWORD PTR [ecx]
  403cd6:	(bad)  
  403cd7:	(bad)  
  403cd8:	jle    0x403d59
  403cda:	add    DWORD PTR [eax],0x2d
  403cdd:	mov    edi,edi
  403cdf:	(bad)  
  403ce0:	frstor [eax+eax*1]
  403ce3:	out    dx,al
  403ce4:	cmp    esi,0xffffffff
  403ce7:	inc    DWORD PTR [ebx-0x34]
  403cea:	inc    DWORD PTR [eax]
  403cec:	inc    eax
  403ced:	or     al,0x0
  403cef:	mov    DWORD PTR [esi+0x39],esp
  403cf2:	(bad)  
  403cf3:	call   0x3fbdf7
  403cf8:	imul   esi,DWORD PTR [edi],0xdfec89ff
  403cfe:	(bad)  
  403cff:	call   FWORD PTR [ecx]
  403d01:	xrelease mov DWORD PTR [ebp-0x7c33bc34],esp
  403d08:	in     al,dx
  403d09:	push   es
  403d0a:	mov    DWORD PTR [ebx-0xff0d59],eax
  403d10:	push   ecx
  403d11:	or     al,BYTE PTR [ebx-0x527c7e]
  403d17:	push   DWORD PTR [esi]
  403d19:	xor    al,0x83
  403d1b:	jmp    FWORD PTR [ecx-0x7eff0023]
  403d21:	xchg   BYTE PTR [eax],al
  403d23:	push   edx
  403d24:	mov    DWORD PTR [ecx],ecx
  403d26:	inc    DWORD PTR [eax]
  403d28:	jecxz  0x403ce3
  403d2a:	add    BYTE PTR [ebx+0x88ff],al
  403d30:	sti    
  403d31:	dec    ebp
  403d32:	inc    DWORD PTR [edi+edi*8+0x1d000050]
  403d39:	(bad)  
  403d3a:	dec    DWORD PTR [ecx+0x830e59]
  403d40:	(bad)  ds:0x31ff02ff
  403d46:	add    BYTE PTR [eax],al
  403d48:	and    DWORD PTR [edi-0x179a0001],0xffffffff
  403d4f:	add    BYTE PTR [edx-0x50],ah
  403d52:	jmp    DWORD PTR [ebx]
  403d54:	inc    DWORD PTR ds:0x4b9400ff
  403d5a:	inc    DWORD PTR [eax]
  403d5c:	jno    0x403d5d
  403d5e:	(bad)  
  403d5f:	inc    DWORD PTR [eax-0x497cfd]
  403d65:	out    0xcc,al
  403d67:	add    bh,bl
  403d69:	ds add bh,bh
  403d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d6d:	sbb    edi,edi
  403d6f:	int3   
  403d70:	fisub  WORD PTR [esi-0x20334101]
  403d76:	mov    edi,edi
  403d78:	(bad)  
  403d79:	inc    ebx
  403d7a:	int3   
  403d7b:	push   edi
  403d7d:	fld    QWORD PTR [eax]
  403d7f:	push   DWORD PTR [esi+0x28]
  403d82:	add    BYTE PTR [eax-0x76ff5501],al
  403d88:	daa    
  403d89:	js     0x403d8b
  403d8b:	call   DWORD PTR [edx]
  403d8d:	aam    0xff
  403d8f:	int3   
  403d90:	test   BYTE PTR [edx-0x1],dh
  403d93:	push   eax
  403d94:	dec    DWORD PTR [edx+0xf8dffff]
  403d9a:	cmp    edi,0x1b
  403d9d:	imul   eax,DWORD PTR [ebx-0x424800],0xcc16ff49
  403da7:	int3   
  403da8:	mov    cl,0xd5
  403daa:	add    DWORD PTR [eax],0xffffffb1
  403dad:	dec    edx
  403dae:	(bad)  
  403daf:	dec    esi
  403db1:	mov    edi,edi
  403db3:	inc    ebp
  403db4:	add    BYTE PTR [esi-0x3aa87c77],bl
  403dba:	(bad)  
  403dbb:	call   FWORD PTR [esi-0x5]
  403dbe:	(bad)  
  403dbf:	push   DWORD PTR [edx+0x58]
  403dc2:	add    BYTE PTR [edx-0x76ffe877],al
  403dc8:	push   ecx
  403dc9:	out    0xff,eax
  403dcb:	dec    DWORD PTR [esi*8+0x550affff]
  403dd2:	push   eax
  403dd4:	jmp    ebx
  403dd6:	or     DWORD PTR [ecx+0xff1be5],0xffffffdd
  403ddd:	cmp    edi,0xff89cdff
  403de3:	das    
  403de4:	mov    eax,ecx
  403de6:	(bad)  
  403de7:	push   DWORD PTR [eax]
  403de9:	ins    BYTE PTR es:[edi],dx
  403dea:	add    bh,bh
  403dec:	(bad)  
  403ded:	pop    eax
  403dee:	int3   
  403def:	mov    eax,ebx
  403df1:	outs   dx,BYTE PTR ds:[esi]
  403df2:	push   DWORD PTR [ecx-0x1]
  403df5:	inc    edi
  403df6:	int3   
  403df7:	and    eax,0x55
  403dfa:	cmp    edi,0x6a
  403dfd:	fiadd  DWORD PTR [ebx-0x7cb3e700]
  403e03:	aad    0xcc
  403e05:	aam    0xcc
  403e07:	add    ah,ah
  403e09:	ins    DWORD PTR es:[edi],dx
  403e0a:	mov    edi,edi
  403e0c:	repz inc DWORD PTR ds:[ebx+0x44ff7fde]
  403e14:	mov    ecx,ebp
  403e16:	inc    DWORD PTR [ebx-0x7c0cf9]
  403e1c:	je     0x403dc2
  403e1e:	inc    DWORD PTR [eax]
  403e20:	xor    eax,0xa4ffa1
  403e25:	adc    BYTE PTR [eax],al
  403e27:	call   eax
  403e29:	xchg   edi,edi
  403e2b:	jmp    FWORD PTR [edx]
  403e2d:	ja     0x403e2e
  403e2f:	call   ebx
  403e31:	sub    bh,bh
  403e33:	adc    al,0xff
  403e35:	mov    dl,0x83
  403e37:	sub    DWORD PTR [ecx+edx*4-0x77cff01],0xffffffff
  403e3f:	add    BYTE PTR [ebx],ah
  403e41:	bound  eax,QWORD PTR [eax]
  403e43:	jbe    0x403dc8
  403e45:	mov    ?,edi
  403e47:	mov    ebp,esp
  403e49:	lods   al,BYTE PTR ds:[esi]
  403e4a:	inc    DWORD PTR [eax]
  403e4c:	fimul  DWORD PTR [ebx+0xeb189ff]
  403e52:	sbb    DWORD PTR [edi-0x1],0x69
  403e56:	inc    DWORD PTR [ebx-0x33cf13]
  403e5c:	mov    dh,0x8
  403e5e:	or     DWORD PTR [ecx+0x1b00c966],0xffffffff
  403e65:	dec    esp
  403e66:	or     esp,0xffffff8c
  403e69:	xlat   BYTE PTR ds:[ebx]
  403e6a:	(bad)  
  403e6b:	call   FWORD PTR [edx+0x23]
  403e6e:	dec    DWORD PTR [ecx+0x7dffb6fe]
  403e74:	add    BYTE PTR [edx-0x26fd0100],dl
  403e7a:	inc    DWORD PTR [eax]
  403e7c:	sub    bl,BYTE PTR [edi+0x4f84ff83]
  403e82:	int3   
  403e83:	xor    al,BYTE PTR [ebx+0x6100004a]
  403e89:	mov    edi,edi
  403e8b:	jmp    DWORD PTR [edi+0x64ff001d]
  403e91:	in     al,0x0
  403e93:	sub    eax,0xff05ff
  403e98:	jmp    DWORD PTR [edi-0x29ed0100]
  403e9e:	inc    DWORD PTR [eax]
  403ea0:	mov    edi,0xccbf0085
  403ea5:	jmp    0xa5563fa9
  403eaa:	add    bh,bh
  403eac:	xchg   ebp,eax
  403ead:	cmp    edi,0x0
  403eb0:	mov    eax,DWORD PTR [edi+edi*8-0xfaff0a]
  403eb7:	add    BYTE PTR [edx+0x39ffff37],ch
  403ebd:	mov    dh,0x89
  403ebf:	adc    DWORD PTR [edi-0x5f0038],0x7d
  403ec6:	inc    DWORD PTR [eax]
  403ec8:	inc    esp
  403ec9:	jbe    0x403e97
  403ecb:	add    dl,bh
  403ecd:	dec    ecx
  403ece:	add    bh,bh
  403ed0:	sub    DWORD PTR [edx+0x0],ecx
  403ed3:	ret    
  403ed4:	add    BYTE PTR [eax+eax*1-0xee6601],al
  403edb:	push   DWORD PTR [edi+0x73]
  403ede:	cmp    edi,0x2b
  403ee1:	enter  0xc489,0xff
  403ee5:	jecxz  0x403eb3
  403ee7:	and    DWORD PTR [ebp+0xa],0xffffff83
  403eeb:	call   DWORD PTR [edi+0x33]
  403eee:	add    bh,bh
  403ef0:	or     ah,BYTE PTR [ebp-0x2300a077]
  403ef6:	inc    DWORD PTR [eax]
  403ef8:	ret    
  403ef9:	xor    al,0x83
  403efb:	push   edi
  403efd:	mov    dl,0x0
  403eff:	inc    DWORD PTR [ecx-0xe1ff26]
  403f05:	xchg   edi,edi
  403f07:	add    BYTE PTR [edi],al
  403f09:	call   0x0:0xd7b0ff00
  403f10:	(bad)  
  403f11:	mov    es,WORD PTR [eax]
  403f13:	push   ss
  403f14:	sbb    DWORD PTR [edi+0x0],0x0
  403f18:	sbb    BYTE PTR [ebx-0x7da00001],al
  403f1e:	inc    DWORD PTR [eax]
  403f20:	pusha  
  403f21:	cdq    
  403f22:	add    BYTE PTR [ecx+ecx*4-0x7b33ffb9],bl
  403f29:	mov    eax,ds:0xc1edff00
  403f2e:	dec    esp
  403f30:	nop
  403f31:	push   ecx
  403f32:	dec    DWORD PTR [ebx]
  403f34:	mov    DWORD PTR [esi-0x67957601],edx
  403f3a:	dec    esp
  403f3c:	repz je 0x403f3f
  403f3f:	call   FWORD PTR [ecx-0x8]
  403f42:	add    BYTE PTR [eax],bl
  403f44:	add    BYTE PTR [ecx+0x755dff89],dl
  403f4a:	mov    edi,edi
  403f4c:	jo     0x403f12
  403f4e:	cmp    edi,0xfffffffc
  403f51:	stos   BYTE PTR es:[edi],al
  403f52:	inc    DWORD PTR [ecx]
  403f54:	add    BYTE PTR [edi],ch
  403f56:	inc    DWORD PTR [eax]
  403f58:	xor    DWORD PTR [ebx-0x1],ebx
  403f5b:	push   ebp
  403f5d:	daa    
  403f5e:	inc    DWORD PTR [eax]
  403f60:	repnz xor eax,DWORD PTR [ebx-0xcff65]
  403f67:	call   FWORD PTR [ebx]
  403f69:	inc    DWORD PTR ds:[eax]
  403f6c:	adc    eax,0xfaccff8d
  403f71:	or     esp,0x837c8988
  403f77:	add    bh,cl
  403f79:	mov    eax,ds:0xfe72ffcc
  403f7e:	add    bh,bh
  403f80:	outs   dx,BYTE PTR ds:[esi]
  403f81:	sbb    edi,edi
  403f83:	cmp    ecx,esp
  403f85:	and    eax,0x779affff
  403f8a:	add    BYTE PTR [ecx+0x47d1],cl
  403f90:	add    dh,BYTE PTR [esp+ecx*8-0x6e]
  403f94:	add    BYTE PTR [esi],al
  403f96:	mov    DWORD PTR [ebx-0x611c],eax
  403f9c:	xor    BYTE PTR [ecx+0x0],al
  403f9f:	dec    DWORD PTR [edx+0x67837d]
  403fa5:	iret   
  403fa6:	add    ah,cl
  403fa8:	fs retf 0xff00
  403fac:	jge    0x403fcd
  403fae:	inc    DWORD PTR [eax]
  403fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb1:	mov    edi,?
  403fb3:	rol    DWORD PTR [eax],cl
  403fb5:	add    BYTE PTR gs:[ebx-0x7a9d],al
  403fbc:	fsubr  DWORD PTR [esi+0x204d0000]
  403fc2:	mov    DWORD PTR [ebx+eax*4+0x54ffff2d],esp
  403fc9:	or     eax,0x67aa83cc
  403fce:	inc    DWORD PTR [eax]
  403fd0:	(bad)  
  403fd1:	iret   
  403fd2:	call   FWORD PTR [esi-0xff0c00]
  403fd8:	push   es
  403fd9:	push   ebx
  403fda:	inc    DWORD PTR [eax]
  403fdc:	ds icebp 
  403fde:	(bad)  
  403fdf:	(bad)  
  403fe0:	jge    0x403ff6
  403fe2:	sbb    DWORD PTR [edi+edi*8],0xffffffb8
  403fe6:	inc    DWORD PTR [eax]
  403fe8:	std    
  403fe9:	idiv   edi
  403feb:	add    BYTE PTR [ebx+0x64fffff7],ah
  403ff1:	les    eax,FWORD PTR [eax]
  403ff3:	mov    bl,0xff
  403ff5:	mov    ah,0x0
  403ff7:	push   DWORD PTR [ebx]
  403ff9:	dec    ebp
  403ffa:	(bad)  
  403ffb:	(bad)  
  403ffc:	mov    esp,0x32000052
  404001:	xrelease mov DWORD PTR [ebx],edx
  404004:	add    BYTE PTR [ebx],dl
  404006:	add    BYTE PTR [eax],al
  404008:	mov    cl,0x5e
  40400a:	(bad)  
  40400b:	call   ecx
  40400d:	push   esi
  40400e:	add    DWORD PTR [eax],0xffffffdc
  404011:	mov    eax,ds:0x8fff42cc
  404016:	inc    DWORD PTR [eax]
  404018:	daa    
  404019:	imul   eax,DWORD PTR [ebx-0x33303300],0x898365ff
  404023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404024:	add    BYTE PTR [esi],al
  404026:	add    bh,bh
  404028:	mov    BYTE PTR [ebx],dl
  40402a:	(bad)  
  40402b:	(bad)  
  40402c:	stc    
  40402d:	(bad)  
  404030:	xchg   dl,dh
  404032:	xor    DWORD PTR [eax-0x33d777],0x25
  404039:	inc    edx
  40403a:	cmp    edi,0xffffffba
  40403d:	jne    0x40400b
  40403f:	add    BYTE PTR [edx+0xd],ah
  404042:	dec    DWORD PTR [esi-0x1]
  404045:	add    bh,bh
  404047:	add    BYTE PTR ds:0x25ffffbb,bl
  40404d:	fwait
  40404e:	int3   
  40404f:	push   DWORD PTR [eax]
  404051:	xor    cl,BYTE PTR [ecx-0x9b0091]
  404057:	adc    ebp,0xffffffe9
  40405a:	add    bh,bh
  40405c:	mov    ds:0x3fcc0098,al
  404061:	cmp    al,0xff
  404063:	pop    edi
  404064:	add    BYTE PTR [ecx+0xd65ffff],dh
  40406a:	add    bh,bh
  40406c:	mov    ebp,0x12ff006a
  404071:	pop    ebx
  404072:	dec    DWORD PTR [ecx+0x2089]
  404078:	mov    ecx,0x1cccff8b
  40407d:	rol    BYTE PTR [eax],0xff
  404080:	(bad)  
  404081:	mov    dl,0x0
  404083:	sahf   
  404084:	add    BYTE PTR [ecx],dh
  404086:	inc    DWORD PTR [eax]
  404088:	fcom   st(3)
  40408a:	inc    DWORD PTR [eax]
  40408c:	jmp    0x4040d5
  40408e:	mov    DWORD PTR [eax],eax
  404090:	push   0xff88ff31
  404095:	xchg   ebp,eax
  404096:	add    DWORD PTR [eax],0xffffff9b
  404099:	lods   eax,DWORD PTR ds:[esi]
  40409a:	inc    DWORD PTR [eax]
  40409c:	or     al,BYTE PTR [esi]
  40409e:	dec    esp
  4040a0:	sbb    DWORD PTR [eax+0x18ff2683],esp
  4040a6:	add    BYTE PTR [eax],al
  4040a8:	sbb    ebx,ecx
  4040aa:	add    BYTE PTR [eax],al
  4040ac:	daa    
  4040ad:	dec    ebx
  4040ae:	add    BYTE PTR [eax],al
  4040b0:	jge    0x404110
  4040b2:	add    BYTE PTR [edx],bh
  4040b4:	jmp    FWORD PTR [esi]
  4040b6:	inc    DWORD PTR [ebx+0xff8d1d]
  4040bc:	ins    DWORD PTR es:[edi],dx
  4040bd:	addr16 mov edi,edi
  4040c0:	lock or al,0x0
  4040c3:	mov    DWORD PTR [eax],0xb9ffcc01
  4040c9:	add    DWORD PTR [ecx-0xb7b801],ecx
  4040cf:	sbb    DWORD PTR [ebx+ebx*1+0xcff1200],0xffffffff
  4040d7:	push   esi
  4040d9:	jns    0x4040da
  4040db:	add    BYTE PTR [ecx-0x6c76ff37],ah
  4040e1:	outs   dx,BYTE PTR ds:[esi]
  4040e2:	(bad)  
  4040e3:	mov    ecx,0xff00c9cc
  4040e8:	shl    BYTE PTR [edi+edi*8],0xff
  4040ec:	in     eax,dx
  4040ed:	ss int3 
  4040ef:	sub    edi,0xffffff9e
  4040f2:	push   eax
  4040f4:	or     DWORD PTR [esi+0x77018383],0xffffffff
  4040fb:	inc    DWORD PTR [ebx-0x5d]
  4040fe:	inc    DWORD PTR [ebx+0x42ffe4b4]
  404104:	or     eax,0x0
  404107:	add    BYTE PTR [edi+ebx*4],dl
  40410a:	int3   
  40410b:	dec    DWORD PTR [eax+0x37fffff4]
  404111:	call   0x83ff:0xf00e5ff
  404118:	jnp    0x404121
  40411a:	add    bh,bh
  40411c:	lods   eax,DWORD PTR ds:[esi]
  40411d:	test   DWORD PTR [ecx-0xc6da00],ecx
  404123:	in     al,dx
  404124:	add    BYTE PTR [edi+0x36e4cc83],al
  40412a:	add    DWORD PTR [ebx-0x76cf01],0xffffffab
  404131:	les    eax,FWORD PTR [eax]
  404133:	mov    ah,0x83
  404135:	xchg   esi,eax
  404136:	(bad)  
  404137:	(bad)  
  404138:	cmp    al,0x5d
  40413a:	int3   
  40413b:	call   FWORD PTR [edi-0x3b]
  40413e:	cmp    edi,0x5e
  404141:	jo     0x40410f
  404143:	mov    ch,0xff
  404145:	out    dx,al
  404146:	(bad)  
  404147:	inc    DWORD PTR [ebp-0x14]
  40414a:	dec    DWORD PTR [ecx+0xff7f72]
  404150:	sub    BYTE PTR [ebx-0x5e762300],ch
  404156:	(bad)  
  404157:	call   DWORD PTR [eax-0x1400005b]
  40415d:	adc    esp,ecx
  40415f:	int3   
  404160:	outs   dx,BYTE PTR ds:[esi]
  404161:	mov    edi,?
  404163:	jno    0x404164
  404165:	enter  0xff,0x7a
  404169:	inc    esp
  40416a:	inc    DWORD PTR [ebx-0x78cc]
  404170:	daa    
  404171:	jmp    0xffff:0xd5837900
  404178:	cmp    BYTE PTR [edx+0x22a8ff83],0x0
  40417f:	add    cl,al
  404181:	inc    BYTE PTR [eax]
  404183:	test   BYTE PTR [eax],al
  404185:	mov    ch,0x0
  404187:	and    DWORD PTR [esi+0x2300cc87],0x2
  40418e:	add    DWORD PTR [eax],0xffffffd5
  404191:	sub    ecx,esp
  404193:	inc    ecx
  404194:	(bad)  
  404195:	(bad)  
  404196:	(bad)  
  404197:	call   DWORD PTR [edi+0x1d]
  40419a:	add    BYTE PTR [eax],al
  40419c:	outs   dx,BYTE PTR ds:[esi]
  40419d:	mov    dl,0xff
  40419f:	int3   
  4041a0:	sbb    DWORD PTR [edi],edx
  4041a2:	add    BYTE PTR [eax+eax*1],dl
  4041a5:	dec    ebx
  4041a6:	add    BYTE PTR [ebx-0x33ec5f],al
  4041ac:	sahf   
  4041ad:	inc    DWORD PTR [bp+di-0x1499]
  4041b2:	int3   
  4041b3:	add    BYTE PTR fs:[eax-0x768f7c01],al
  4041ba:	add    BYTE PTR [eax],al
  4041bc:	mov    eax,DWORD PTR [ebp+0x3292ccff]
  4041c2:	jmp    FWORD PTR [esi]
  4041c4:	add    dl,al
  4041c6:	inc    DWORD PTR [ebx-0x7c7cc56e]
  4041cc:	push   ds
  4041cd:	push   ecx
  4041ce:	add    bh,bh
  4041d0:	sbb    BYTE PTR [ecx-0x1],bl
  4041d3:	les    eax,FWORD PTR [eax]
  4041d5:	pusha  
  4041d6:	inc    DWORD PTR [eax]
  4041d8:	call   0x8964:0xd5008341
  4041df:	(bad)  
  4041e0:	mov    ebp,0xff1cffe0
  4041e5:	loope  0x4041e7
  4041e7:	push   DWORD PTR [esi+0x3b008988]
  4041ed:	leave  
  4041ee:	(bad)  
  4041ef:	jmp    FWORD PTR [edx+0x40]
  4041f2:	push   DWORD PTR [edx]
  4041f4:	int3   
  4041f5:	sbb    eax,0x61bfccff
  4041fa:	inc    DWORD PTR [ebx+0xff518f]
  404200:	pop    edi
  404201:	dec    ebx
  404202:	add    BYTE PTR [esi-0xec01],ch
  404208:	hlt    
  404209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420a:	inc    DWORD PTR [eax]
  40420c:	jne    0x40422c
  40420e:	inc    DWORD PTR [ebx-0x5c7c8ab1]
  404214:	call   DWORD PTR [edi+0x7daeff00]
  40421a:	add    bh,bh
  40421c:	psrad  mm1,QWORD PTR [ecx-0x7c294301]
  404223:	mov    bl,0x0
  404225:	pusha  
  404226:	or     DWORD PTR [ecx+0xffac36],0x63
  40422d:	sbb    edi,edi
  40422f:	int3   
  404230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404231:	addr16 dec esi
  404234:	add    al,cl
  404236:	add    bh,bh
  404238:	xchg   BYTE PTR [ebx-0x7d],bh
  40423b:	jmp    FWORD PTR [eax-0x1b00004b]
  404241:	sbb    eax,0x51ff3a00
  404246:	inc    DWORD PTR [eax]
  404248:	bound  esi,QWORD PTR [ecx]
  40424a:	(bad)  
  40424b:	inc    ebp
  40424d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424e:	(bad)  
  40424f:	call   FWORD PTR [ecx-0x61]
  404252:	add    dh,al
  404254:	jmp    DWORD PTR [eax]
  404256:	inc    DWORD PTR [eax]
  404258:	ds xchg edi,eax
  40425a:	inc    DWORD PTR [eax]
  40425c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40425d:	fs (bad) 
  40425f:	jmp    FWORD PTR ds:0x839fff66
  404265:	jo     0x404266
  404267:	dec    DWORD PTR [edi+0x5f]
  40426a:	mov    esp,ecx
  40426c:	adc    esi,ecx
  40426e:	add    bh,bh
  404270:	inc    edi
  404271:	xchg   esi,eax
  404272:	inc    DWORD PTR [eax+eax*1-0x5200001d]
  404279:	mov    edi,edi
  40427b:	add    BYTE PTR [eax],al
  40427d:	xchg   edx,eax
  40427e:	add    bh,bh
  404280:	and    al,0xb1
  404282:	inc    ebp
  404284:	dec    DWORD PTR [ebp+0x0]
  404287:	dec    DWORD PTR [ecx]
  404289:	pushf  
  40428a:	(bad)  
  40428b:	(bad)  
  40428c:	jg     0x40426b
  40428e:	(bad)  
  40428f:	dec    ecx
  404291:	ret    0x88cc
  404294:	add    cl,bl
  404296:	(bad)  
  404297:	push   DWORD PTR [eax-0x56760007]
  40429d:	in     eax,0xff
  40429f:	jmp    FWORD PTR [ebp-0xe00e5]
  4042a5:	stos   BYTE PTR es:[edi],al
  4042a6:	mov    DWORD PTR [eax],eax
  4042a8:	sub    BYTE PTR [esp+ecx*8-0x7c8bc000],ah
  4042af:	push   DWORD PTR [ebp+0x11]
  4042b2:	add    BYTE PTR [ecx],bl
  4042b4:	int3   
  4042b5:	mov    ?,edi
  4042b7:	call   ebp
  4042b9:	loop   0x4042ba
  4042bb:	jmp    FWORD PTR [edx+edx*2]
  4042be:	add    ah,cl
  4042c0:	retf   
  4042c1:	sbb    al,BYTE PTR [ebx+0x9e0054]
  4042c7:	int3   
  4042c8:	outs   dx,DWORD PTR ds:[esi]
  4042c9:	scas   al,BYTE PTR es:[edi]
  4042ca:	inc    DWORD PTR [eax]
  4042cc:	add    DWORD PTR [ebx+eax*4-0x7d],0x31
  4042d1:	cld    
  4042d2:	add    BYTE PTR [edi],dh
  4042d4:	add    cl,ah
  4042d6:	inc    DWORD PTR [eax]
  4042d8:	push   ecx
  4042d9:	jp     0x4042da
  4042db:	add    BYTE PTR [esi],ch
  4042dd:	out    0xff,eax
  4042df:	jmp    DWORD PTR [esi]
  4042e1:	cmp    edi,edi
  4042e3:	inc    ebx
  4042e4:	int3   
  4042e5:	mov    esi,0x18bbff00
  4042ea:	(bad)  
  4042eb:	(bad)  
  4042ec:	dec    BYTE PTR [ebx+0x61e38389]
  4042f2:	add    BYTE PTR [edx-0x7cff6601],bh
  4042f8:	cmp    bh,bh
  4042fa:	int3   
  4042fb:	int3   
  4042fc:	pop    edx
  4042fd:	mov    cl,0xff
  4042ff:	mov    DWORD PTR [edx+eiz*1],edi
  404302:	add    BYTE PTR [eax],dh
  404304:	int3   
  404305:	or     bh,bh
  404307:	and    DWORD PTR [ecx+0x67ccffe3],0x2
  40430e:	add    BYTE PTR [ebx-0x5a7c8352],al
  404314:	dec    esi
  404316:	dec    esp
  404318:	fild   WORD PTR [ebp-0x34]
  40431b:	add    BYTE PTR [eax-0x90000e1],bl
  404321:	or     eax,0xa00099ff
  404326:	dec    esp
  404328:	ja     0x404317
  40432a:	dec    esp
  40432c:	mov    ecx,0xdfff839c
  404331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404332:	dec    DWORD PTR [ebx+0x0]
  404335:	sbb    eax,DWORD PTR [eax]
  404337:	add    BYTE PTR [ebx+0x35],bl
  40433a:	(bad)  
  40433b:	push   DWORD PTR [ebx-0x41ff7ccc]
  404341:	add    al,0xff
  404343:	sbb    al,0xff
  404345:	jo     0x404346
  404347:	mov    DWORD PTR [eax-0x617c007b],esp
  40434d:	adc    eax,0xdc2f00ff
  404352:	xor    edi,0xffffff83
  404355:	push   ds
  404356:	(bad)  
  404357:	jmp    FWORD PTR [edx+0x640000d3]
  40435d:	fild   DWORD PTR [eax]
  40435f:	(bad)  
  404360:	cmp    edx,esi
  404362:	add    BYTE PTR [edx],dl
  404364:	inc    DWORD PTR [eax-0x1]
  404367:	add    BYTE PTR [ebx+0x68],ch
  40436a:	inc    DWORD PTR [ebx-0xff370e]
  404370:	ffreep st(6)
  404372:	(bad)  
  404373:	cmp    bh,bh
  404375:	outs   dx,DWORD PTR ds:[esi]
  404376:	inc    DWORD PTR [eax]
  404378:	lock int 0x0
  40437b:	add    BYTE PTR [esi-0xbffff17],dl
  404381:	pop    ebp
  404382:	call   FWORD PTR [edi-0x7c001700]
  404388:	out    dx,eax
  404389:	je     0x404357
  40438b:	call   FWORD PTR [edx]
  40438d:	test   bh,bh
  40438f:	inc    DWORD PTR [edx+0xf1ff20]
  404395:	pop    ds
  404396:	add    bh,bh
  404398:	xor    dl,bh
  40439a:	add    bh,bh
  40439c:	in     al,dx
  40439d:	push   ds
  40439e:	add    bh,bh
  4043a0:	fild   DWORD PTR [ebp+0x6c006e00]
  4043a6:	(bad)  
  4043a7:	inc    DWORD PTR [ebx+0x7]
  4043aa:	(bad)  
  4043ab:	call   DWORD PTR [eax+0x5]
  4043ae:	add    bh,bh
  4043b0:	jmp    0x1543c1
  4043b5:	mov    DWORD PTR gs:[ecx+0xffdb0f],ecx
  4043bc:	call   0xff1f:0xcfff0077
  4043c3:	aas    
  4043c4:	add    BYTE PTR [edx+0x0],dl
  4043c7:	add    BYTE PTR [eax-0x667600fb],ch
  4043cd:	xchg   DWORD PTR [eax],eax
  4043cf:	mov    eax,ebx
  4043d1:	mov    ebp,0x66007b00
  4043d6:	(bad)  
  4043d7:	dec    DWORD PTR [eax+0x7600ff05]
  4043dd:	xor    al,0x0
  4043df:	call   DWORD PTR [edi-0x8800ed]
  4043e5:	cwde   
  4043e6:	inc    DWORD PTR [eax]
  4043e8:	es js  0x4043eb
  4043eb:	push   DWORD PTR [eax-0x3b00ffbb]
  4043f1:	pusha  
  4043f2:	(bad)  
  4043f3:	fld    QWORD PTR [eax]
  4043f5:	sub    ecx,esp
  4043f7:	call   DWORD PTR [edi]
  4043f9:	cwde   
  4043fa:	int3   
  4043fb:	add    dl,al
  4043fd:	xchg   edx,eax
  4043fe:	add    BYTE PTR [eax],al
  404400:	xchg   edi,eax
  404401:	in     al,dx
  404402:	and    DWORD PTR [ecx-0x33b077],0xffffffaf
  404409:	into   
  40440a:	add    bh,bh
  40440c:	bts    DWORD PTR [eax],eax
  40440f:	mov    edx,ebx
  404411:	into   
  404412:	xor    DWORD PTR [ebp+0xff0d00],0x37
  404419:	sti    
  40441a:	mov    DWORD PTR [eax],eax
  40441c:	push   es
  40441d:	ins    DWORD PTR es:[edi],dx
  40441e:	add    DWORD PTR [eax],0xffffffc5
  404421:	cmp    al,0xff
  404423:	enter  0xe0cc,0x0
  404427:	add    BYTE PTR [edi-0x52],cl
  40442a:	add    DWORD PTR [eax],0xffffffe0
  40442d:	inc    ecx
  40442e:	(bad)  
  40442f:	call   FWORD PTR [edx]
  404431:	add    BYTE PTR [bx+si-0x4801],bl
  404436:	(bad)  
  404437:	(bad)  
  404438:	call   0x9a3f4488
  40443d:	mov    WORD PTR [ecx-0x7c3cb901],cs
  404443:	ror    BYTE PTR [ecx+0x3789ff5b],1
  404449:	das    
  40444a:	(bad)  
  40444b:	(bad)  
  40444c:	jle    0x4044aa
  40444e:	mov    esp,ecx
  404450:	cmp    bl,BYTE PTR [ebx-0x77]
  404453:	pop    ecx
  404454:	add    dl,dh
  404456:	add    BYTE PTR [eax],al
  404458:	add    edx,edx
  40445a:	inc    DWORD PTR [eax]
  40445c:	add    edx,ebp
  40445e:	cmp    edi,0xffffffc9
  404461:	pop    esp
  404462:	inc    DWORD PTR ds:0x839a89
  404468:	rol    edx,1
  40446a:	inc    DWORD PTR [eax]
  40446c:	cmp    DWORD PTR [edx-0x34],ecx
  40446f:	mov    DWORD PTR [esi],edx
  404471:	mov    edi,edi
  404473:	inc    ebp
  404474:	jmp    DWORD PTR [eax+eax*1]
  404477:	add    BYTE PTR [ebx],dl
  404479:	hlt    
  40447a:	add    BYTE PTR [eax],al
  40447c:	adc    bl,cl
  40447e:	add    BYTE PTR [eax],al
  404480:	dec    esp
  404481:	dec    esi
  404482:	mov    DWORD PTR [edx],edx
  404484:	add    BYTE PTR [edx],bh
  404486:	add    bh,bh
  404488:	out    dx,eax
  404489:	mov    eax,DWORD PTR [ebx-0x7cf26f7d]
  40448f:	add    BYTE PTR [ecx-0x6a],bh
  404492:	add    al,dl
  404494:	call   DWORD PTR [edi-0x77]
  404497:	dec    DWORD PTR ds:0xa883ffce
  40449d:	push   cs
  40449e:	(bad)  
  40449f:	jmp    FWORD PTR [edx+ecx*1+0x6900fc00]
  4044a6:	dec    DWORD PTR [ecx-0xbca8]
  4044ac:	das    
  4044ad:	(bad)  
  4044ae:	dec    esp
  4044b0:	clc    
  4044b1:	push   0xffffffff
  4044b3:	retf   0x7483
  4044b6:	cmp    edi,0xffffffb9
  4044b9:	sti    
  4044ba:	inc    DWORD PTR [eax]
  4044bc:	cdq    
  4044bd:	je     0x404442
  4044bf:	(bad)  
  4044c0:	jmp    0xffa9:0xcc1aff3b
  4044c7:	jmp    FWORD PTR [ebp-0x35]
  4044ca:	inc    DWORD PTR [eax]
  4044cc:	(bad)  
  4044cd:	mov    eax,0x3a04ff00
  4044d2:	push   DWORD PTR [ebp+0xffd2ff]
  4044d8:	cld    
  4044d9:	inc    ecx
  4044da:	inc    DWORD PTR [eax]
  4044dc:	sub    BYTE PTR [ecx-0x44ee0001],ah
  4044e2:	add    BYTE PTR [edi+edi*8+0xf],ah
  4044e6:	dec    DWORD PTR [ecx-0x333355d3]
  4044ec:	xor    DWORD PTR [esi+0x715683ff],ebp
  4044f2:	jmp    DWORD PTR [edi-0x1]
  4044f5:	idiv   edi
  4044f7:	add    BYTE PTR [eax-0x207c00e9],dl
  4044fd:	jne    0x4044ff
  4044ff:	call   DWORD PTR [esi-0x7cdf00fd]
  404505:	test   edi,edi
  404507:	add    BYTE PTR [ebp+0x9],dl
  40450a:	add    BYTE PTR [ecx+0x8376f1],cl
  404510:	push   esi
  404511:	inc    eax
  404512:	add    ah,cl
  404514:	jmp    DWORD PTR [edi+edi*8+0x0]
  404518:	pop    ebx
  404519:	(bad)  
  40451b:	jmp    FWORD PTR [esi+0x3400ccda]
  404521:	adc    eax,0xa1ffc4ff
  404526:	or     esp,0xffffff9d
  404529:	retf   
  40452a:	(bad)  
  40452b:	inc    DWORD PTR [ebp+0x1a000056]
  404531:	push   eax
  404532:	mov    DWORD PTR [eax-0x6300],ebp
  404538:	mov    dh,0x38
  40453a:	(bad)  
  40453b:	(bad)  
  40453c:	(bad)  
  40453e:	mov    DWORD PTR [eax],eax
  404540:	outs   dx,BYTE PTR ds:[esi]
  404541:	xor    edi,edi
  404543:	(bad)  
  404544:	(bad)  
  404545:	fild   DWORD PTR [eax]
  404547:	jmp    FWORD PTR [ebp-0x4b00ff48]
  40454d:	ins    BYTE PTR es:[edi],dx
  40454e:	dec    esp
  404550:	ret    
  404551:	vandnps ymm0,ymm0,YMMWORD PTR [eax]
  404555:	lahf   
  404556:	add    BYTE PTR [ecx+0x89255c],cl
  40455c:	aaa    
  40455d:	xchg   ebp,eax
  40455e:	(bad)  
  40455f:	inc    DWORD PTR [ecx+0x54]
  404562:	(bad)  
  404563:	inc    DWORD PTR [eax]
  404565:	mov    ch,0x0
  404567:	(bad)  
  404568:	mov    esi,0x1c83ff17
  40456d:	mov    ds:0x5c5b00ff,eax
  404572:	mov    DWORD PTR [ecx],edi
  404574:	add    dh,cl
  404576:	inc    DWORD PTR [ebx+0x83c3eb]
  40457c:	adc    BYTE PTR [edi+0x1b95ffff],cl
  404582:	add    BYTE PTR [edi+0xcc8883],dh
  404588:	scas   eax,DWORD PTR es:[edi]
  404589:	fild   WORD PTR [eax]
  40458b:	jmp    FWORD PTR [eax+0x1783ffd4]
  404591:	xor    edi,edi
  404593:	mov    DWORD PTR [ecx+0x3900fffd],ecx
  404599:	mov    ah,0x83
  40459b:	dec    DWORD PTR [edi]
  40459d:	xchg   edx,eax
  40459e:	add    bh,bh
  4045a0:	shr    BYTE PTR [esp+ecx*8],0x22
  4045a4:	add    BYTE PTR [edx-0x34],bl
  4045a7:	add    BYTE PTR ds:0x5e00cc70,dl
  4045ad:	and    eax,0x99a6ff00
  4045b2:	int3   
  4045b3:	adc    BYTE PTR [ebx-0x3600009a],al
  4045b9:	inc    edi
  4045ba:	(bad)  
  4045bb:	(bad)  
  4045bc:	jge    0x404565
  4045be:	add    BYTE PTR [eax],al
  4045c0:	pop    ecx
  4045c1:	pop    ds
  4045c2:	inc    DWORD PTR [ebx+eax*4]
  4045c5:	popf   
  4045c6:	mov    DWORD PTR [eax],eax
  4045c8:	mov    dh,0x3f
  4045ca:	(bad)  
  4045cb:	call   FWORD PTR ds:0x40cc0065
  4045d1:	mov    ecx,0xbc003100
  4045d6:	add    BYTE PTR [ebx-0x7c33813c],al
  4045dc:	dec    ebx
  4045dd:	scas   al,BYTE PTR es:[edi]
  4045de:	add    BYTE PTR [ebx+0x38ff1df9],al
  4045e4:	jmp    FWORD PTR [ecx+0x25a6ff00]
  4045ea:	add    bh,bh
  4045ec:	push   ebx
  4045ed:	ret    
  4045ee:	dec    esp
  4045f0:	pop    edi
  4045f1:	and    bh,bh
  4045f3:	xchg   edx,eax
  4045f4:	add    esp,0xffffffff
  4045f7:	(bad)  
  4045f8:	cmp    DWORD PTR [ebp+0x6a3dccff],edx
  4045fe:	add    BYTE PTR [eax],al
  404600:	mul    BYTE PTR [ebp-0x647ca601]
  404606:	inc    DWORD PTR [eax]
  404608:	push   ebx
  404609:	push   esp
  40460a:	(bad)  
  40460b:	call   DWORD PTR [ebp+0x64]
  40460e:	add    BYTE PTR [eax],al
  404610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404612:	call   DWORD PTR [ecx+ecx*4-0x4b7c00b7]
  404619:	sar    bh,1
  40461b:	dec    DWORD PTR [edx-0x3600003f]
  404621:	jbe    0x404622
  404623:	mov    WORD PTR [eax],es
  404625:	mov    bl,0x0
  404627:	add    BYTE PTR [edi+ebx*2-0x1],al
  40462b:	add    al,dl
  40462d:	pop    esp
  40462e:	(bad)  
  40462f:	inc    DWORD PTR [ecx]
  404631:	pop    ss
  404632:	dec    DWORD PTR [eax-0x3300727d]
  404638:	xchg   dl,dl
  40463a:	or     esp,0xf
  40463d:	pop    ecx
  40463e:	add    BYTE PTR [ebx-0x397c9d03],al
  404644:	add    cl,cl
  404646:	cmp    edi,0xffffffee
  404649:	mov    esp,0x23edffcc
  40464e:	add    BYTE PTR [eax],al
  404650:	push   eax
  404651:	mov    edi,?
  404653:	in     eax,0x0
  404655:	jle    0x404656
  404657:	adc    DWORD PTR [ecx+0x33ffff2c],0xffffff9d
  40465e:	mov    DWORD PTR [ecx-0x6d7c02ac],ecx
  404664:	or     DWORD PTR [eax+0x0],0x0
  404668:	cmp    DWORD PTR [esi-0x1],0xffffff83
  40466c:	adc    esi,DWORD PTR [edi+edi*8-0x1]
  404670:	inc    ecx
  404671:	sub    eax,DWORD PTR [eax]
  404673:	and    eax,0x8368ff
  404678:	test   al,0xdf
  40467a:	add    DWORD PTR [eax],0xfffffff0
  40467d:	loope  0x40467e
  40467f:	add    BYTE PTR [edx+edx*4],ah
  404682:	inc    eax
  404684:	jmp    DWORD PTR [eax+0x296700ff]
  40468a:	add    bh,bh
  40468c:	jp     0x40463d
  40468e:	(bad)  
  40468f:	(bad)  
  404690:	cmp    ebx,ecx
  404692:	(bad)  
  404693:	jns    0x404695
  404695:	sub    edi,edi
  404697:	dec    DWORD PTR [eax]
  404699:	adc    bh,bh
  40469b:	add    BYTE PTR [ebx-0x75ffff5c],dh
  4046a1:	jg     0x4046a3
  4046a3:	(bad)
  4046a7:	call   ecx
  4046a9:	ins    BYTE PTR es:[edi],dx
  4046aa:	mov    edi,edi
  4046ac:	mov    ch,0x1d
  4046ae:	mov    DWORD PTR [eax],eax
  4046b0:	and    al,0xb6
  4046b2:	(bad)  
  4046b3:	fld    DWORD PTR [ebx+0x98989e1]
  4046b9:	mov    edi,?
  4046bb:	int3   
  4046bc:	pop    ds
  4046bd:	int    0xff
  4046bf:	call   DWORD PTR [edx-0x54]
  4046c2:	dec    edi
  4046c4:	cmp    DWORD PTR [edi-0x7d],0x0
  4046c8:	jp     0x404739
  4046ca:	int3   
  4046cb:	add    BYTE PTR ds:0xe2ffffb3,cl
  4046d1:	xchg   ecx,eax
  4046d2:	push   DWORD PTR [eax-0x1]
  4046d5:	fdiv   st(7),st
  4046d7:	push   DWORD PTR [eax+0x18898953]
  4046dd:	jecxz  0x4046de
  4046df:	call   FWORD PTR [edx-0x69]
  4046e2:	add    BYTE PTR [ebx],ah
  4046e4:	push   DWORD PTR [edx+0x0]
  4046e7:	add    BYTE PTR [ebx-0xe],dh
  4046ea:	add    BYTE PTR [eax],al
  4046ec:	lods   eax,DWORD PTR ds:[esi]
  4046ed:	and    esp,ecx
  4046ef:	(bad)  
  4046f0:	jmp    0x83de:0x400007
  4046f7:	call   ecx
  4046f9:	(bad)  
  4046fa:	(bad)  
  4046fb:	call   FWORD PTR [ebx+ecx*1-0x71110100]
  404702:	add    BYTE PTR [esi-0x437d],dl
  404708:	xchg   ah,dh
  40470a:	(bad)  
  40470b:	inc    ebx
  40470d:	sahf   
  40470e:	add    BYTE PTR [ebx-0x2d002438],al
  404714:	add    BYTE PTR [ebp+0x2c20ff83],ch
  40471a:	mov    edi,edi
  40471c:	jns    0x40475a
  40471e:	int3   
  40471f:	and    ebp,0xfffffff8
  404722:	int3   
  404723:	cmp    DWORD PTR [eax],eax
  404725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404726:	add    bh,bh
  404728:	out    dx,al
  404729:	xchg   DWORD PTR [eax],eax
  40472b:	int3   
  40472c:	push   eax
  40472d:	sar    bh,cl
  40472f:	add    BYTE PTR [ecx-0x42],al
  404732:	call   FWORD PTR [ebx-0x7d]
  404735:	ins    DWORD PTR es:[edi],dx
  404736:	add    BYTE PTR [eax],al
  404738:	in     eax,0xc8
  40473a:	dec    DWORD PTR [ecx-0x769abd]
  404740:	jmp    0x83bf46ce
  404745:	add    eax,0xbaccff
  40474a:	add    bh,bh
  40474c:	test   BYTE PTR [esi],0x0
  40474f:	add    BYTE PTR [edx+edi*2-0x64002f7d],bl
  404756:	add    bh,bh
  404758:	pop    ebx
  404759:	dec    edx
  40475a:	inc    DWORD PTR [ebx-0xff11e5]
  404760:	clc    
  404761:	lods   eax,DWORD PTR ds:[esi]
  404762:	int3   
  404763:	lds    eax,FWORD PTR [eax]
  404765:	cmc    
  404766:	inc    DWORD PTR [eax]
  404768:	sub    dl,bh
  40476a:	add    BYTE PTR [eax],al
  40476c:	loope  0x40473f
  40476e:	(bad)  
  40476f:	call   DWORD PTR [eax]
  404771:	pop    ebx
  404772:	add    BYTE PTR [edx-0x34],ah
  404775:	adc    edi,edi
  404777:	(bad)  
  404778:	mov    edx,0xd4ff0030
  40477d:	inc    DWORD PTR ds:[eax]
  404780:	retf   
  404781:	pop    esi
  404782:	adc    DWORD PTR [edi-0x7d],0xffffffb3
  404786:	(bad)  
  404787:	(bad)  
  404788:	mov    ebx,0x77ffffbe
  40478d:	push   0xffffffff
  40478f:	(bad)  
  404790:	fnstenv [ebp+0x6ff66ff]
  404796:	add    BYTE PTR [ecx+0x83bb53],cl
  40479c:	jo     0x40477e
  40479e:	int3   
  40479f:	(bad)  
  4047a0:	jp     0x404740
  4047a2:	mov    DWORD PTR [esi-0x34],ebx
  4047a5:	mov    al,ds:0x1e128383
  4047aa:	(bad)  
  4047ab:	inc    DWORD PTR [esp+ebx*1-0x1c470077]
  4047b2:	int3   
  4047b3:	add    eax,DWORD PTR [ebx-0xdff3368]
  4047b9:	aas    
  4047ba:	add    DWORD PTR [ebx-0x767cd79a],0xffffffc5
  4047c1:	mov    ebx,0xbcff87ff
  4047c6:	int3   
  4047c7:	jmp    DWORD PTR [ebx+edi*1-0x4afb0000]
  4047ce:	add    bh,bh
  4047d0:	jae    0x40479d
  4047d2:	mov    ebp,edx
  4047d4:	cmp    DWORD PTR [ebp+0x0],0xffffffff
  4047d8:	ss jmp 0x688a46de
  4047de:	add    BYTE PTR [ebx+0x57ffe438],al
  4047e4:	call   DWORD PTR [edi+edi*8+0x0]
  4047e8:	mov    al,ds:0x8cff0046
  4047ed:	pop    ss
  4047ee:	inc    DWORD PTR [eax]
  4047f0:	jg     0x4047af
  4047f2:	int3   
  4047f3:	pusha  
  4047f4:	jmp    FWORD PTR [esi]
  4047f6:	inc    DWORD PTR [ebx-0x3376e2a0]
  4047fc:	pop    ecx
  4047fd:	xchg   ebx,eax
  4047fe:	mov    edi,edi
  404800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404801:	fld    DWORD PTR [eax]
  404803:	stos   BYTE PTR es:[edi],al
  404804:	dec    ebx
  404806:	add    BYTE PTR [eax],al
  404808:	adc    DWORD PTR [eax+0x7a7dff00],esi
  40480e:	add    BYTE PTR [eax],al
  404810:	cmp    al,0x46
  404812:	push   DWORD PTR [ecx+ecx*4]
  404815:	pop    ebx
  404816:	mov    edi,edi
  404818:	repnz icebp 
  40481a:	add    bh,bh
  40481c:	adc    eax,0xfe008962
  404821:	dec    ebp
  404822:	(bad)  
  404823:	jns    0x4047ae
  404825:	fadd   QWORD PTR [eax]
  404827:	add    BYTE PTR [esp+ecx*1-0x1],ch
  40482b:	add    BYTE PTR [edi+edx*2-0x7d],ch
  40482f:	dec    DWORD PTR [ebx-0x7c63ff3b]
  404835:	cmp    bh,bh
  404837:	and    DWORD PTR [ebp-0x9000089],0xe
  40483e:	add    BYTE PTR [eax],al
  404840:	sub    esp,DWORD PTR [esi-0x34]
  404843:	inc    ebp
  404844:	add    BYTE PTR [esi+0x12ca00ff],al
  40484a:	add    bh,bh
  40484c:	into   
  40484d:	jmp    0x40484f
  40484f:	int3   
  404850:	jno    0x4048b3
  404852:	call   esp
  404854:	inc    esp
  404856:	dec    DWORD PTR [ecx-0xff53b9]
  40485c:	add    dl,ch
  40485e:	inc    DWORD PTR [eax]
  404860:	mov    eax,ds:0x8387ff39
  404865:	add    BYTE PTR [ebx-0x7ebd01],0xff
  40486c:	push   ds
  40486d:	into   
  40486e:	mov    DWORD PTR [eax],eax
  404870:	inc    esp
  404871:	adc    bh,bh
  404873:	sub    BYTE PTR [ebx-0x48763394],al
  404879:	inc    esi
  40487a:	add    DWORD PTR [ebx-0x7274],0xa
  404881:	or     al,0xff
  404883:	mov    edi,?
  404885:	(bad)  
  404886:	add    BYTE PTR [eax],al
  404888:	dec    ebp
  404889:	mov    WORD PTR [ebx+0xeb97ff],es
  40488f:	dec    DWORD PTR [ebx]
  404891:	add    bh,bh
  404893:	cdq    
  404894:	add    BYTE PTR [eax-0x1],al
  404897:	add    BYTE PTR [ebx],bl
  404899:	inc    ebx
  40489a:	add    BYTE PTR [eax],al
  40489c:	mov    ah,0x19
  40489e:	inc    DWORD PTR [ebx+0x740016e3]
  4048a4:	add    al,ch
  4048a6:	inc    DWORD PTR [ebx-0x76d807]
  4048ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ad:	test   DWORD PTR [eax],eax
  4048af:	adc    DWORD PTR [ebp+0x228924],0x58
  4048b6:	inc    DWORD PTR [eax]
  4048b8:	icebp  
  4048b9:	lock add DWORD PTR [eax],0xffffffff
  4048bd:	cmp    al,BYTE PTR [eax]
  4048bf:	add    BYTE PTR [eax],cl
  4048c1:	cld    
  4048c2:	call   DWORD PTR [edx]
  4048c4:	int3   
  4048c5:	sbb    al,BYTE PTR [eax]
  4048c7:	jmp    DWORD PTR [ecx+0x2ff89eb]
  4048cd:	iret   
  4048ce:	int3   
  4048cf:	call   esi
  4048d1:	mov    ecx,0xf4ffdaff
  4048d6:	int3   
  4048d7:	push   DWORD PTR [edx+0x10]
  4048da:	add    DWORD PTR [eax],0xfffffff6
  4048dd:	pop    edi
  4048de:	mov    DWORD PTR [ebx-0x4800d5b6],eax
  4048e4:	add    BYTE PTR [edi+edi*8],cl
  4048e7:	mov    DWORD PTR [ebx+0x2dffffae],ecx
  4048ed:	xchg   edi,eax
  4048ee:	mov    esp,ecx
  4048f0:	jb     0x40492f
  4048f2:	(bad)  
  4048f3:	jg     0x4048f4
  4048f5:	mov    ch,0xff
  4048f7:	push   DWORD PTR [esi+0x9]
  4048fa:	(bad)  
  4048fb:	call   DWORD PTR [edx-0x19]
  4048fe:	inc    DWORD PTR [eax]
  404900:	mov    esp,0xccb2ffcc
  404905:	je     0x404907
  404907:	sbb    DWORD PTR [edi],0x51
  40490a:	add    bh,bh
  40490c:	fiadd  DWORD PTR [esi-0x1]
  40490f:	call   DWORD PTR [ecx-0x670090]
  404915:	push   esi
  404916:	dec    esp
  404918:	mov    edx,0x5f8300d9
  40491d:	jmp    0x4048a8
  40491f:	add    al,bl
  404921:	int    0x83
  404923:	(bad)  
  404926:	add    BYTE PTR [eax],al
  404928:	push   es
  404929:	ins    BYTE PTR es:[edi],dx
  40492a:	add    BYTE PTR [eax],al
  40492c:	xor    al,0xc8
  40492e:	int3   
  40492f:	add    BYTE PTR [edx-0x29],bh
  404932:	call   FWORD PTR [edx]
  404934:	call   FWORD PTR [ecx]
  404936:	add    bh,bh
  404938:	aaa    
  404939:	jae    0x40493b
  40493b:	jmp    DWORD PTR [eax]
  40493d:	xor    al,0xcc
  40493f:	(bad)  
  404940:	stc    
  404941:	(bad)  
  404942:	(bad)  
  404943:	mov    edi,0xfffffeff
  404948:	and    BYTE PTR [edi],bh
  40494a:	inc    DWORD PTR [eax]
  40494c:	sbb    DWORD PTR [edx-0x7d],ebp
  40494f:	jmp    FWORD PTR [ebx]
  404951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404952:	add    BYTE PTR [eax],ah
  404954:	sbb    DWORD PTR [esi-0x25a00034],0xffffffff
  40495b:	int3   
  40495c:	xlat   BYTE PTR fs:[ebx]
  40495e:	mov    DWORD PTR [ecx+0x68ff32af],ecx
  404964:	jmp    DWORD PTR [ebp-0x7d]
  404967:	int3   
  404968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404969:	in     eax,dx
  40496a:	dec    DWORD PTR [ecx+0xcc6917]
  404970:	pushf  
  404971:	jo     0x404972
  404973:	sub    bh,bh
  404975:	xchg   ebx,eax
  404976:	inc    DWORD PTR [ebx-0xff4343]
  40497c:	ds push eax
  40497e:	(bad)  
  40497f:	push   esi
  404981:	cmp    bh,0xdb
  404984:	add    BYTE PTR [ebp-0x7d],al
  40498a:	dec    DWORD PTR [ecx-0x7c7c34]
  404990:	xchg   ebp,eax
  404991:	push   ss
  404992:	dec    DWORD PTR [ecx-0xc7c7683]
  404998:	add    BYTE PTR [ebx-0x7d],ah
  40499b:	je     0x404988
  40499d:	add    bh,al
  40499f:	(bad)  
  4049a0:	mov    ebp,0xcc83fff5
  4049a5:	add    BYTE PTR [ebx+0x2d831b],al
  4049ab:	data16 ltr WORD PTR [edi-0x34]
  4049b0:	dec    esp
  4049b1:	push   cs
  4049b2:	or     esp,0x8
  4049b5:	inc    DWORD PTR [ebx+0x9bffec]
  4049bb:	jnp    0x404a39
  4049bd:	push   DWORD PTR [edx]
  4049bf:	add    BYTE PTR [edx-0x26],cl
  4049c2:	(bad)  
  4049c3:	(bad)  
  4049c4:	jns    0x4049c5
  4049c6:	add    BYTE PTR [ebx],dl
  4049c8:	call   DWORD PTR [edi+0x0]
  4049cb:	jl     0x40497d
  4049cd:	add    BYTE PTR [ecx+ecx*4+0x4b],bh
  4049d1:	mov    BYTE PTR [eax],al
  4049d3:	add    al,bl
  4049d5:	inc    DWORD PTR [ebx-0xa1009a]
  4049db:	pushf  
  4049dc:	in     eax,0xff
  4049de:	mov    ah,0xcc
  4049e0:	jnp    0x404a3e
  4049e2:	add    DWORD PTR [ebx-0x667c7c5f],0x0
  4049e9:	sbb    al,0xff
  4049eb:	inc    ebp
  4049ec:	jno    0x404971
  4049ee:	mov    ecx,0x4c5500
  4049f3:	inc    DWORD PTR [eax-0x530001]
  4049f9:	jmp    0xffaebefd
  4049fe:	and    eax,0xff85ea89
  404a03:	call   DWORD PTR [eax]
  404a05:	(bad)  
  404a06:	inc    DWORD PTR [ebx-0x7d]
  404a09:	and    al,0x83
  404a0b:	ins    DWORD PTR es:[edi],dx
  404a0c:	std    
  404a0d:	jmp    DWORD PTR [ebx-0x602500]
  404a13:	add    BYTE PTR [eax-0x7cb20001],bh
  404a19:	stos   DWORD PTR es:[edi],eax
  404a1a:	(bad)  
  404a1b:	jp     0x40499d
  404a1d:	call   DWORD PTR [ebp-0xb11701]
  404a23:	mov    DWORD PTR [edi+edi*8],eax
  404a26:	mov    DWORD PTR [esi],edi
  404a28:	inc    eax
  404a2a:	push   DWORD PTR [eax]
  404a2c:	dec    edx
  404a2d:	(bad)  
  404a2e:	cmp    al,0xff
  404a30:	ret    
  404a31:	cmp    eax,0xfff28300
  404a36:	jmp    DWORD PTR [edx-0x1]
  404a39:	mov    edi,?
  404a3b:	in     al,0x79
  404a3d:	call   FWORD PTR [edx-0x443301]
  404a43:	xor    DWORD PTR [edi-0x34],0xffffffff
  404a47:	(bad)  [ecx-0x49b20096]
  404a4d:	or     DWORD PTR [edi+edi*8],0xffffffd0
  404a51:	mov    eax,ds:0x57ffff
  404a56:	mov    DWORD PTR [ebx-0x29ffb201],ebx
  404a5c:	push   ss
  404a5d:	push   DWORD PTR [ebx]
  404a5f:	(bad)  
  404a60:	js     0x404a67
  404a62:	add    BYTE PTR [ebx+0x7000ff87],al
  404a68:	int3   
  404a69:	push   DWORD PTR es:[ebx]
  404a6c:	sbb    al,BYTE PTR [ebx+0x351f8361]
  404a72:	dec    esp
  404a74:	mov    ah,0x89
  404a76:	int3   
  404a77:	add    BYTE PTR ss:[eax],dh
  404a7a:	sbb    edx,0x15
  404a7d:	(bad)  
  404a7e:	cmp    al,0xff
  404a80:	ja     0x404a9a
  404a82:	add    bh,bh
  404a84:	pop    ebx
  404a85:	add    bh,bh
  404a87:	pusha  
  404a88:	int3   
  404a89:	and    al,0xff
  404a8b:	(bad)  
  404a8c:	std    
  404a8d:	int3   
  404a8e:	mov    bl,0xff
  404a90:	pusha  
  404a91:	cwde   
  404a92:	cmp    edi,0xb
  404a95:	add    BYTE PTR [eax],al
  404a97:	mov    esi,0x18892c00
  404a9c:	push   edx
  404a9d:	(bad)  
  404a9e:	mov    esi,0xff079700
  404aa3:	call   DWORD PTR [ecx]
  404aa5:	inc    DWORD PTR [eax]
  404aa7:	cmp    bh,0x2f
  404aaa:	(bad)  
  404aab:	mov    ebx,0x83170018
  404ab0:	std    
  404ab1:	dec    edi
  404ab2:	dec    esp
  404ab4:	add    BYTE PTR [eax],0x89
  404ab7:	push   edi
  404ab8:	inc    DWORD PTR [edi+0x2eff00]
  404abe:	push   ss
  404abf:	(bad)  
  404ac0:	mov    eax,0xd1ffff73
  404ac5:	add    BYTE PTR [ebx-0x7ccdffd8],al
  404acb:	lock add BYTE PTR [eax],al
  404ace:	cdq    
  404acf:	add    BYTE PTR [edx+esi*8+0xa9cc83],bl
  404ad6:	jmp    DWORD PTR [ebp+0x7affe700]
  404adc:	sbb    eax,0x40ff4089
  404ae1:	mov    edx,0x8304ffff
  404ae6:	add    BYTE PTR [eax-0x77],bl
  404ae9:	adc    edi,edi
  404aeb:	je     0x404aa3
  404aed:	jmp    DWORD PTR [edx-0x1]
  404af0:	rol    al,cl
  404af2:	(bad)  
  404af3:	dec    eax
  404af5:	mov    edi,edi
  404af7:	jne    0x404a7c
  404af9:	nop
  404afa:	add    al,bl
  404afc:	imul   eax,DWORD PTR [eax],0xfffffff9
  404aff:	int3   
  404b00:	mov    cl,0xea
  404b02:	inc    DWORD PTR [eax]
  404b04:	or     bh,bh
  404b06:	jmp    DWORD PTR [ebx]
  404b08:	int3   
  404b09:	scas   al,BYTE PTR es:[edi]
  404b0a:	add    BYTE PTR [eax+0xff00ac],ah
  404b10:	out    dx,al
  404b11:	stos   BYTE PTR es:[edi],al
  404b12:	(bad)  
  404b13:	call   FWORD PTR [edi-0x76980077]
  404b19:	sub    bh,bh
  404b1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b1c:	push   ecx
  404b1d:	add    BYTE PTR [ebp+0xdeb200],cl
  404b23:	(bad)  
  404b24:	mov    edi,0x83f88389
  404b29:	and    edi,edi
  404b2b:	popf   
  404b2c:	loope  0x404ab1
  404b2e:	adc    eax,DWORD PTR [eax]
  404b30:	push   edi
  404b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b32:	add    DWORD PTR [ebx+0x37ff0077],0x0
  404b39:	xor    al,BYTE PTR [ebx+0x6fff9559]
  404b3f:	or     DWORD PTR [edi],0xfffffff4
  404b42:	add    DWORD PTR [eax],0x5c
  404b45:	(bad)  
  404b46:	(bad)  
  404b47:	js     0x404acc
  404b49:	in     eax,0xff
  404b4b:	cmc    
  404b4c:	es inc edx
  404b4f:	xor    DWORD PTR [edx+0x55cc00e9],0x0
  404b56:	call   DWORD PTR [eax-0x2005134]
  404b5c:	adc    al,0xff
  404b5e:	call   0xff414d62
  404b63:	dec    DWORD PTR [ecx+ecx*4+0x0]
  404b67:	pop    ebp
  404b68:	add    BYTE PTR [eax+eax*1],dl
  404b6b:	ret    0xcccf
  404b6e:	xchg   edi,eax
  404b6f:	add    BYTE PTR [ebx+0x41ff00be],bh
  404b75:	(bad)  
  404b76:	(bad)  
  404b77:	out    dx,al
  404b78:	call   DWORD PTR [edx+0x0]
  404b7b:	in     al,dx
  404b7c:	cld    
  404b7d:	add    BYTE PTR [ecx-0x65d01],ah
  404b83:	push   DWORD PTR ds:0xffebff83
  404b89:	out    dx,eax
  404b8a:	cmp    DWORD PTR [ecx+ecx*4],0xffffff83
  404b8e:	push   ebx
  404b8f:	call   edi
  404b91:	add    al,0xff
  404b93:	add    BYTE PTR [edi],ch
  404b95:	inc    DWORD PTR [eax]
  404b97:	push   es
  404b98:	and    DWORD PTR [ebx+eax*4-0x33],0x2
  404b9d:	jmp    FWORD PTR [eax]
  404b9f:	(bad)  
  404ba0:	mov    eax,0xbfff892c
  404ba5:	inc    DWORD PTR [ebx+0xef008b]
  404bab:	iret   
  404bac:	mov    ebx,0x8cff90ff
  404bb1:	push   ebx
  404bb2:	inc    DWORD PTR [eax]
  404bb4:	dec    edx
  404bb5:	add    DWORD PTR [eax],0xffffffc5
  404bb8:	add    BYTE PTR [ebx-0x21701],bh
  404bbe:	sar    edi,0x41
  404bc1:	clc    
  404bc2:	(bad)  
  404bc3:	call   DWORD PTR [edx]
  404bc5:	(bad)  
  404bc6:	call   FWORD PTR [eax-0x7d]
  404bc9:	pop    edx
  404bca:	cmp    DWORD PTR [ecx+0x30],0xffffff83
  404bce:	add    edi,edi
  404bd0:	leave  
  404bd1:	nop
  404bd2:	add    bh,bh
  404bd4:	fdivr  st,st(7)
  404bd6:	jmp    FWORD PTR [ebp-0x7e332901]
  404bdc:	inc    eax
  404bdd:	jmp    FWORD PTR [eax]
  404bdf:	call   DWORD PTR [eax]
  404be1:	and    BYTE PTR [eax],al
  404be3:	add    BYTE PTR [eax],ah
  404be5:	add    BYTE PTR [eax],al
  404be7:	cwde   
  404be8:	add    ch,dl
  404bea:	int3   
  404beb:	or     al,0xcb
  404bed:	call   DWORD PTR [edx-0xc37400]
  404bf3:	(bad)  
  404bf4:	mov    ebx,0xf7ffff
  404bf9:	js     0x404bfa
  404bfb:	push   eax
  404bfc:	ds int3 
  404bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bff:	dec    DWORD PTR [eax+eax*8-0x34]
  404c03:	call   DWORD PTR [edi]
  404c05:	add    BYTE PTR [ecx-0xf1ff2e],cl
  404c0b:	aaa    
  404c0c:	xchg   ebp,eax
  404c0d:	mov    DWORD PTR [ebx-0x1],ecx
  404c10:	mov    dl,0x94
  404c12:	dec    esp
  404c14:	sub    bh,bh
  404c16:	(bad)  
  404c17:	jl     0x404c18
  404c19:	mov    bh,bh
  404c1b:	fdivp  st(3),st
  404c1d:	int3   
  404c1e:	add    al,0x83
  404c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c21:	sbb    esp,ecx
  404c23:	inc    DWORD PTR [ebp-0x1]
  404c26:	call   DWORD PTR [esi-0x7d]
  404c29:	and    al,0x89
  404c2b:	mov    ch,0x36
  404c2d:	add    bl,bh
  404c2f:	push   DWORD PTR ds:0x91838929
  404c35:	inc    DWORD PTR [eax]
  404c37:	inc    ecx
  404c38:	push   DWORD PTR [ecx]
  404c3a:	int3   
  404c3b:	loope  0x404be9
  404c3d:	mov    DWORD PTR [edi-0xc00501],ebp
  404c43:	(bad)  
  404c44:	call   0xb94d48
  404c49:	loop   0x404c4a
  404c4b:	adc    ebp,DWORD PTR [ecx+0x68ff1d83]
  404c51:	arpl   WORD PTR [eax],ax
  404c53:	call   FWORD PTR [edi+edi*8]
  404c56:	cmp    DWORD PTR [ebp-0x6dffa701],0xffffff82
  404c5d:	adc    DWORD PTR [edx-0x76612d7d],0xffffffff
  404c64:	fld    DWORD PTR [eax]
  404c66:	jmp    esi
  404c68:	int3   
  404c69:	mov    edx,0x4e8fff
  404c6e:	add    DWORD PTR [eax],eax
  404c70:	xor    edi,DWORD PTR ds:0xff338389
  404c76:	inc    DWORD PTR [esi-0x1]
  404c79:	repz jmp FWORD PTR [eax-0x8]
  404c7d:	(bad)  
  404c7e:	mov    edx,0x839a3400
  404c83:	push   DWORD PTR [ebx+0x0]
  404c86:	mov    eax,ebx
  404c88:	call   FWORD PTR [ecx]
  404c8a:	int3   
  404c8b:	das    
  404c8c:	sub    al,0xff
  404c8e:	xor    BYTE PTR [eax],al
  404c90:	out    0xdf,al
  404c92:	add    BYTE PTR [ebx+0x61008314],al
  404c98:	add    BYTE PTR [eax-0x1],dl
  404c9b:	sub    al,0x83
  404c9d:	push   DWORD PTR [esi]
  404c9f:	xor    DWORD PTR [edx],0xffffff81
  404ca2:	inc    DWORD PTR [eax]
  404ca4:	lahf   
  404ca5:	inc    DWORD PTR [eax]
  404ca7:	push   ds
  404ca8:	or     DWORD PTR [edx-0x7d],0x53
  404cac:	jo     0x404cad
  404cae:	adc    eax,DWORD PTR [ebx-0x76004924]
  404cb4:	mov    dh,0x83
  404cb6:	sbb    DWORD PTR [ebp-0x34],0x57
  404cba:	call   FWORD PTR ds:0x83db0008
  404cc0:	push   esp
  404cc1:	jo     0x404cc2
  404cc3:	add    BYTE PTR [edx+0x91ffff],bh
  404cc9:	sbb    bh,bh
  404ccb:	sbb    ebx,ebx
  404ccd:	push   DWORD PTR [edx]
  404ccf:	int3   
  404cd0:	aad    0xaa
  404cd2:	(bad)  
  404cd3:	call   DWORD PTR [esi]
  404cd5:	add    ah,cl
  404cd7:	ins    BYTE PTR es:[edi],dx
  404cd8:	jmp    DWORD PTR [edx-0xe45701]
  404cde:	test   bh,bh
  404ce0:	aam    0x71
  404ce2:	int3   
  404ce3:	or     DWORD PTR [esi-0x860100],0x3
  404cea:	call   DWORD PTR [eax-0x1f]
  404ced:	int3   
  404cee:	or     bh,bh
  404cf0:	call   0xffff:0x3a89ff51
  404cf7:	bound  eax,QWORD PTR [eax]
  404cf9:	call   0x2d28fd
  404cfe:	xchg   DWORD PTR [eax],eax
  404d00:	cli    
  404d01:	popf   
  404d02:	inc    DWORD PTR [ebx-0x6c000094]
  404d08:	add    BYTE PTR [ecx+0x0],ch
  404d0b:	jns    0x404d70
  404d0d:	push   eax
  404d0f:	add    ah,dl
  404d11:	jmp    0x24d09f
  404d16:	add    BYTE PTR [edx+0x0],cl
  404d19:	fdiv   st(7),st
  404d1b:	inc    edx
  404d1c:	aaa    
  404d1d:	int3   
  404d1e:	cdq    
  404d1f:	xor    esi,0xffffffeb
  404d22:	inc    DWORD PTR [eax]
  404d24:	cs (bad) 
  404d26:	(bad)  
  404d27:	mov    ebx,0x9fff7100
  404d2c:	xchg   esp,eax
  404d2d:	(bad)  
  404d2e:	fild   DWORD PTR [eax]
  404d30:	jecxz  0x404da7
  404d32:	add    ah,cl
  404d34:	ins    DWORD PTR es:[edi],dx
  404d35:	add    bh,bh
  404d37:	call   0x2341313b
  404d3c:	adc    eax,0x4d005000
  404d41:	cmp    eax,0x5d83ff
  404d46:	int3   
  404d47:	pop    edi
  404d48:	mov    DWORD PTR [esi],ebx
  404d4a:	dec    DWORD PTR [ebx-0x5cff11]
  404d50:	xchg   edx,eax
  404d51:	mov    bh,0x0
  404d53:	add    DWORD PTR [esi+0x0],0xffffffff
  404d57:	jmp    0x404d59
  404d59:	ret    0x6300
  404d5c:	mov    ds:0x11ff9bff,eax
  404d61:	pop    ss
  404d62:	int3   
  404d63:	cmp    DWORD PTR [ebp-0x1],0xffffff83
  404d67:	loop   0x404d69
  404d69:	mov    dh,0xff
  404d6b:	or     di,di
  404d6e:	pop    ecx
  404d6f:	jmp    esp
  404d71:	je     0x404d3f
  404d73:	add    BYTE PTR [ebx-0xedff7d],cl
  404d79:	jle    0x404d7b
  404d7b:	mov    DWORD PTR [eax],ebx
  404d7d:	adc    DWORD PTR [edi],0x0
  404d80:	pop    ebx
  404d81:	aam    0xff
  404d83:	jmp    FWORD PTR [edi+edi*8-0x6000d00]
  404d8a:	or     ebp,0xffffff83
  404d8d:	jmp    ebx
  404d8f:	add    BYTE PTR [ebx+0x7aff0029],bh
  404d95:	(bad)  
  404d96:	(bad)  
  404d97:	cld    
  404d98:	add    BYTE PTR ds:0x5907ff,bh
  404d9e:	dec    esp
  404d9f:	(bad)  
  404da0:	cmp    ebp,DWORD PTR [ebp-0x34]
  404da3:	call   DWORD PTR [ebx]
  404da5:	mov    esp,ecx
  404da7:	loopne 0x404da8
  404da9:	cmp    eax,0xcc63e900
  404dae:	push   esp
  404daf:	push   DWORD PTR [ebx-0x72]
  404db2:	(bad)  
  404db3:	push   ecx
  404db5:	add    BYTE PTR [eax],al
  404db7:	push   edi
  404db8:	mov    ebp,ebp
  404dba:	sub    eax,0x2a
  404dbd:	push   DWORD PTR [ebp+0x0]
  404dc0:	xor    eax,0x3500ff8a
  404dc5:	add    DWORD PTR [ebx-0x71fff5],0xffffff8c
  404dcc:	cmp    bh,0x31
  404dcf:	(bad)  
  404dd0:	jge    0x404de2
  404dd2:	inc    DWORD PTR [eax]
  404dd4:	pop    ds
  404dd5:	cmp    edi,0x10
  404dd8:	add    BYTE PTR [edx],ch
  404dda:	(bad)  
  404ddb:	mov    ebp,0x41ff75
  404de0:	mov    ebp,0x5fffffc6
  404de5:	add    DWORD PTR [eax],0xffffff83
  404de8:	call   DWORD PTR [eax-0xe42f01]
  404dee:	lds    eax,FWORD PTR [eax]
  404df0:	jns    0x404db2
  404df2:	int3   
  404df3:	push   DWORD PTR [ecx+0x0]
  404df6:	jmp    DWORD PTR [ebp+0x0]
  404df9:	cmc    
  404dfa:	int3   
  404dfb:	sahf   
  404dfc:	mov    edi,0x49ffa2ff
  404e01:	mov    eax,0xff03ff00
  404e06:	add    BYTE PTR [edi],ah
  404e08:	jmp    DWORD PTR [edi+edi*8-0x53]
  404e0c:	push   ebx
  404e0d:	add    DWORD PTR [ebp-0x77],0xffffffc0
  404e11:	aaa    
  404e12:	mov    edi,edi
  404e14:	in     al,0xff
  404e16:	adc    edi,0xffffffff
  404e19:	out    0xff,al
  404e1b:	inc    esi
  404e1c:	(bad)  
  404e1d:	jmp    DWORD PTR [ebx+0xaa84cc]
  404e23:	dec    DWORD PTR [eax-0x330e0034]
  404e29:	call   DWORD PTR ss:[edi]
  404e2c:	fiadd  WORD PTR [eax]
  404e2e:	jg     0x404e2f
  404e30:	cmp    eax,0x34ff834f
  404e35:	(bad)  
  404e36:	call   FWORD PTR [esi]
  404e38:	call   DWORD PTR [esp+ecx*8+0xf]
  404e3c:	mov    ebp,0xe8cc8800
  404e41:	out    0xff,eax
  404e43:	add    BYTE PTR [edi+edi*8+0x26ff2000],ah
  404e4a:	jmp    FWORD PTR [ebx-0xd5336f]
  404e50:	xchg   ebx,eax
  404e51:	jb     0x404dd6
  404e53:	dec    eax
  404e55:	inc    DWORD PTR [ebx+0x8dff3e]
  404e5b:	mov    edx,0x836a0018
  404e60:	xor    dh,BYTE PTR [ebx]
  404e62:	int3   
  404e63:	(bad)  
  404e64:	jg     0x404de9
  404e66:	add    BYTE PTR [eax+eax*1+0x619d0086],ch
  404e6d:	jmp    DWORD PTR [edx]
  404e6f:	inc    ebx
  404e71:	mov    eax,0x8925ffff
  404e76:	dec    esi
  404e78:	dec    DWORD PTR [ecx]
  404e7a:	add    BYTE PTR [ebx],ch
  404e7c:	pop    esi
  404e7d:	adc    DWORD PTR [ebx+eax*4+0xff7e8c],0x39
  404e85:	add    BYTE PTR [ebx-0x7cfe0100],al
  404e8b:	add    eax,0xcc760039
  404e90:	pop    ebp
  404e91:	cmp    edi,edi
  404e93:	int3   
  404e94:	stc    
  404e95:	dec    DWORD PTR [ecx-0x7c347cc4]
  404e9b:	(bad)  
  404e9c:	test   ah,0xc9
  404e9f:	int3   
  404ea0:	leave  
  404ea1:	ins    BYTE PTR es:[edi],dx
  404ea2:	inc    DWORD PTR [ebx-0x350000e6]
  404ea8:	jmp    DWORD PTR [ebx]
  404eaa:	push   DWORD PTR [ebx+0xbfffc1]
  404eb0:	and    DWORD PTR [ebp-0x1],esp
  404eb3:	jmp    FWORD PTR [eax+0xc8ffff]
  404eb9:	or     bh,bh
  404ebb:	push   ss
  404ebc:	sbb    BYTE PTR [eax],al
  404ebe:	adc    eax,0x5e46ff
  404ec3:	push   DWORD PTR [eax+eax*1+0x7fcc39ff]
  404eca:	dec    DWORD PTR [ebx]
  404ecc:	add    edi,edi
  404ece:	dec    ebx
  404ecf:	add    BYTE PTR [eax],al
  404ed1:	push   0xffffffff
  404ed3:	add    BYTE PTR [eax+eax*1],dl
  404ed6:	(bad)  
  404ed7:	mov    edi,0x75005489
  404edc:	repz add BYTE PTR [ecx-0xa51a01],cl
  404ee3:	int3   
  404ee4:	fwait
  404ee5:	mov    DWORD PTR [eax],eax
  404ee7:	cmp    cl,ah
  404ee9:	idiv   edi
  404eeb:	push   ecx
  404eec:	retf   0xc889
  404eef:	call   DWORD PTR [ebp+0x13]
  404ef2:	add    bh,bh
  404ef4:	cdq    
  404ef5:	int3   
  404ef6:	inc    ebp
  404ef8:	call   FWORD PTR [ecx-0x1]
  404efb:	adc    al,BYTE PTR [esi-0x34]
  404efe:	cld    
  404eff:	int3   
  404f00:	push   ss
  404f01:	xor    esp,ecx
  404f03:	inc    ecx
  404f05:	int3   
  404f06:	add    BYTE PTR [edx-0x3cff7800],ch
  404f0c:	fdiv   st(7),st
  404f0e:	lods   eax,DWORD PTR ds:[esi]
  404f0f:	inc    eax
  404f11:	add    DWORD PTR fs:[ebx-0x590000f1],0x0
  404f19:	ja     0x404f1b
  404f1b:	ja     0x404ed8
  404f1d:	sub    DWORD PTR [eax+eax*1],0x51
  404f21:	push   ds
  404f22:	cmp    edi,0xfffffff1
  404f25:	add    BYTE PTR [ecx-0x339f00c9],cl
  404f2b:	dec    ebp
  404f2c:	xor    al,BYTE PTR [eax]
  404f2e:	ss and ebx,0x33
  404f32:	add    bh,bh
  404f34:	std    
  404f35:	inc    DWORD PTR [eax]
  404f37:	nop
  404f38:	(bad)  
  404f39:	call   0x8cff3e
  404f3e:	mov    edx,0xff6cc5ff
  404f43:	call   FWORD PTR [ebx-0x77]
  404f46:	add    DWORD PTR [edi],0xffffffff
  404f49:	(bad)  
  404f4a:	(bad)  
  404f4b:	jmp    0x5cfa:0xffa183ef
  404f52:	or     DWORD PTR [ecx+0x17000005],0xffffffff
  404f59:	jmp    0xcd0d335e
  404f5e:	fimul  DWORD PTR [ecx+0x830869]
  404f64:	cmp    edi,0xffffffff
  404f67:	dec    esp
  404f68:	int3   
  404f69:	xor    al,0x0
  404f6b:	ror    BYTE PTR [esi-0x37c5534],1
  404f71:	out    dx,eax
  404f72:	add    BYTE PTR [ecx+0xbffcc5e],cl
  404f78:	int3   
  404f79:	call   DWORD PTR [ecx+esi*2+0x39ff54ff]
  404f81:	repnz inc DWORD PTR [eax]
  404f84:	inc    edx
  404f85:	mov    esp,ecx
  404f87:	retf   
  404f88:	add    BYTE PTR [esi-0x40c17d],cl
  404f8e:	jle    0x404f90
  404f90:	jns    0x404f64
  404f92:	add    bh,bh
  404f94:	ja     0x404f95
  404f96:	cmp    DWORD PTR [eax+0x1affa400],0xffffffd0
  404f9d:	jmp    FWORD PTR ds:0xcc6f6aff
  404fa3:	call   DWORD PTR [ebx+eax*4-0x1]
  404fa7:	gs (bad) 
  404fa9:	fdiv   st(7),st
  404fab:	pop    esp
  404fac:	(bad)  
  404fad:	jmp    DWORD PTR ds:0xffe7ceff
  404fb3:	call   FWORD PTR [esi-0x34]
  404fb6:	push   esi
  404fb8:	add    BYTE PTR [eax-0xba4001],ch
  404fbe:	in     eax,dx
  404fbf:	int3   
  404fc0:	fwait
  404fc1:	(bad)  
  404fc2:	int3   
  404fc3:	add    al,cl
  404fc5:	add    BYTE PTR [ecx+0x9effc0],cl
  404fcb:	mov    ds:0xffe689c1,al
  404fd0:	enter  0xff7c,0xff
  404fd4:	outs   dx,DWORD PTR ds:[esi]
  404fd5:	(bad)  
  404fd6:	jmp    FWORD PTR [ecx-0x41ffb701]
  404fdc:	lods   al,BYTE PTR ds:[esi]
  404fdd:	sub    DWORD PTR [edx-0x88be01],0xffffff83
  404fe4:	(bad)  
  404fe7:	scas   al,BYTE PTR es:[edi]
  404fe8:	add    BYTE PTR [ecx],ch
  404fea:	mov    DWORD PTR [edi],edi
  404fec:	enter  0xb283,0xcc
  404ff0:	stos   BYTE PTR es:[edi],al
  404ff1:	cwde   
  404ff2:	(bad)  
  404ff3:	inc    DWORD PTR [esi]
  404ff5:	add    BYTE PTR [eax],al
  404ff7:	fiadd  DWORD PTR [eax]
  404ff9:	mov    al,BYTE PTR [eax]
  404ffb:	pop    ebp
  404ffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffd:	sub    DWORD PTR [esi+0x168aff],0xffffffff
  405004:	mov    ds:0x89838383,eax
  405009:	fiadd  DWORD PTR [eax]
  40500b:	dec    edx
  40500c:	or     bh,bh
  40500e:	dec    esp
  40500f:	mov    DWORD PTR [ebp-0x4a],eax
  405012:	(bad)  
  405013:	dec    DWORD PTR [ecx-0x1]
  405016:	adc    DWORD PTR [esi+0x0],0xffffff8b
  40501a:	mov    ebp,edx
  40501c:	jecxz  0x40501e
  40501e:	adc    edi,edi
  405020:	or     dh,BYTE PTR [eax+eax*1]
  405023:	mov    DWORD PTR [edx],esp
  405025:	inc    DWORD PTR [ebx+0xb1ffa3]
  40502b:	jmp    0x1950f6
  405030:	jg     0x405076
  405032:	inc    DWORD PTR [eax]
  405034:	sbb    edi,edi
  405036:	add    bh,dl
  405038:	sbb    DWORD PTR [ecx-0x913b01],0xffffff97
  40503f:	add    BYTE PTR [ecx+ebp*2+0x0],dl
  405043:	mov    eax,esp
  405045:	(bad)  
  405046:	(bad)  
  405047:	jl     0x404fcc
  405049:	cld    
  40504a:	call   FWORD PTR [edx-0x76a5ff3e]
  405050:	or     eax,0x6cfffffd
  405055:	add    bh,bh
  405057:	inc    edx
  405058:	mov    DWORD PTR [ebx-0x1],ecx
  40505b:	jl     0x40502a
  40505d:	add    BYTE PTR [eax],ch
  40505f:	add    bh,dh
  405061:	ror    esp,0xff
  405064:	xchg   BYTE PTR [ebx-0x6b7c4a01],al
  40506a:	push   DWORD PTR [edi+0x70]
  40506d:	int3   
  40506e:	push   0xffffffff
  405070:	push   ss
  405071:	int    0xff
  405073:	add    BYTE PTR [edi],ch
  405075:	add    bh,bh
  405077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405078:	push   ebp
  40507a:	call   FWORD PTR [edi+0x69]
  40507d:	or     edi,0xffffff89
  405080:	or     BYTE PTR [edi],bh
  405082:	int3   
  405083:	call   FWORD PTR [esi-0x567c01]
  405089:	std    
  40508a:	adc    DWORD PTR [ebx],0xb
  40508d:	jmp    FWORD PTR [eax-0x1]
  405090:	in     eax,dx
  405091:	hlt    
  405092:	(bad)  
  405093:	jmp    FWORD PTR [ebp-0x1]
  405096:	sbb    DWORD PTR [ecx-0x1],0x17
  40509a:	jmp    DWORD PTR [ecx-0x7ca3ffea]
  4050a0:	mov    ds:0x22ff00a7,al
  4050a5:	inc    DWORD PTR [eax]
  4050a7:	or     eax,DWORD PTR [eax]
  4050a9:	mov    ebp,0xcc090983
  4050ae:	loope  0x4050af
  4050b0:	mul    BYTE PTR [edi+0x0]
  4050b3:	add    BYTE PTR ds:0xffb5ffff,al
  4050b9:	add    BYTE PTR [ebx+0xfcc96e0],0xff
  4050c0:	xchg   esp,eax
  4050c1:	data16 add BYTE PTR [eax],al
  4050c4:	mov    edx,0x83ea00cc
  4050c9:	inc    ebx
  4050ca:	sbb    DWORD PTR [edi+0x10037],0xffffffe6
  4050d1:	dec    ah
  4050d3:	inc    DWORD PTR [eax+0x0]
  4050d6:	jmp    DWORD PTR [esi-0x5676d87d]
  4050dc:	aas    
  4050dd:	dec    DWORD PTR [edx]
  4050df:	add    BYTE PTR [ebx],ch
  4050e1:	test   BYTE PTR [ebx-0xc900],0xc7
  4050e8:	sbb    edi,0xffffffff
  4050eb:	add    dh,bl
  4050ed:	mov    DWORD PTR [ecx-0x1],ebx
  4050f0:	pop    esp
  4050f1:	jmp    0x89eb50f5
  4050f6:	call   ebp
  4050f8:	add    BYTE PTR [ecx-0x1],ch
  4050fb:	sti    
  4050fc:	xchg   ebp,eax
  4050fd:	add    BYTE PTR [eax-0xc21577],cl
  405103:	jmp    FWORD PTR [edx]
  405105:	int3   
  405106:	inc    DWORD PTR [esi-0x7d]
  405109:	ret    0xfeff
  40510c:	fld    DWORD PTR [eax]
  40510e:	push   eax
  40510f:	dec    DWORD PTR [ebp+0x108900d0]
  405115:	add    DWORD PTR [eax],0xffffff96
  405118:	add    BYTE PTR [edi+edi*8],ah
  40511b:	imul   eax,DWORD PTR [edx+0x4183b4cc],0x50
  405122:	cmp    edi,0xffffffca
  405125:	(bad)  
  405126:	(bad)  
  405127:	cmp    DWORD PTR [eax],eax
  405129:	pop    ebx
  40512a:	(bad)  
  40512b:	cmp    al,0x83
  40512d:	push   esi
  40512f:	push   DWORD PTR [esi-0x3cff0091]
  405135:	or     esp,0xffffffec
  405138:	inc    esi
  40513a:	add    BYTE PTR ds:0xff76898f,bl
  405140:	mov    al,0x57
  405142:	add    BYTE PTR [ebx-0x33330078],al
  405148:	dec    edi
  40514a:	push   DWORD PTR [esi-0x4d]
  40514d:	add    BYTE PTR [edi-0x237f7d],dl
  405153:	mov    DWORD PTR [ecx],ebp
  405155:	inc    DWORD PTR [ebx-0x332fff91]
  40515b:	dec    ebp
  40515c:	pop    esi
  40515d:	call   FWORD PTR [ecx-0x77]
  405160:	or     al,dh
  405162:	inc    DWORD PTR [eax]
  405164:	dec    ebp
  405165:	int3   
  405166:	int3   
  405167:	push   cs
  405168:	add    DWORD PTR [edx+0xdf6dff],0x57
  40516f:	add    al,dh
  405171:	mov    WORD PTR [eax],es
  405173:	add    BYTE PTR [ebx-0xc0007d],dh
  405179:	jbe    0x405104
  40517b:	jg     0x40515d
  40517d:	add    BYTE PTR [ecx+ecx*4-0x7cffa5cc],al
  405184:	addr16 add ah,cl
  405187:	aaa    
  405188:	cmp    edi,0x0
  40518b:	sti    
  40518c:	mov    WORD PTR [eax],es
  40518e:	xor    edi,edi
  405190:	push   esp
  405191:	or     edi,edi
  405193:	dec    DWORD PTR [ecx-0x200100]
  405199:	mov    ebx,0xff3b0eff
  40519e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40519f:	add    ch,al
  4051a1:	jge    0x4051a2
  4051a3:	jmp    FWORD PTR [edi-0xbf3377]
  4051a9:	and    cl,ah
  4051ab:	push   0x39
  4051ad:	int3   
  4051ae:	jbe    0x4051b0
  4051b0:	ds add edi,edi
  4051b3:	jmp    FWORD PTR [ecx+0xcffff]
  4051b9:	sbb    bh,bh
  4051bb:	lahf   
  4051bc:	popf   
  4051bd:	mov    DWORD PTR [ebp-0x1],ecx
  4051c0:	add    DWORD PTR [ebx-0x7a0001],esp
  4051c6:	add    BYTE PTR [eax-0x1],dl
  4051c9:	stc    
  4051ca:	dec    DWORD PTR [eax]
  4051cc:	rol    BYTE PTR [ebx+0x4ef089e5],0x0
  4051d3:	add    BYTE PTR [ebp+0x0],dl
  4051d6:	add    BYTE PTR [ecx-0x1],dh
  4051d9:	mov    ecx,0xffbb0683
  4051de:	cmp    edi,0xffffffc8
  4051e1:	xchg   ecx,eax
  4051e2:	add    BYTE PTR [eax],al
  4051e4:	mov    eax,ds:0xffb483ff
  4051e9:	dec    ebx
  4051ea:	add    ch,ah
  4051ec:	xchg   ecx,eax
  4051ed:	add    BYTE PTR [edi-0x333a7600],al
  4051f3:	add    BYTE PTR [ebp-0x1],ah
  4051f6:	jmp    FWORD PTR [edi+0x35004aff]
  4051fc:	ret    0x800
  4051ff:	add    al,ch
  405201:	mov    ch,0xff
  405203:	int3   
  405204:	test   BYTE PTR [ecx+0x4200d083],0x83
  40520b:	jno    0x405263
  40520d:	add    BYTE PTR [ebx-0x77],ah
  405210:	enter  0xc5,0x83
  405214:	sar    bh,0xff
  405217:	mov    ebp,0x18ffb3ff
  40521c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40521d:	jmp    DWORD PTR [edx-0x1]
  405220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405221:	fwait
  405222:	int3   
  405223:	call   FWORD PTR [ebp+0x0]
  405226:	cmp    DWORD PTR [eax+0x7500c400],0xffffff92
  40522d:	jmp    FWORD PTR [eax-0x1]
  405230:	loopne 0x40520d
  405232:	add    DWORD PTR [eax],0x4f
  405235:	(bad)  
  405236:	call   DWORD PTR [esi]
  405238:	(bad)  
  405239:	jle    0x40523b
  40523b:	ja     0x40522c
  40523d:	call   FWORD PTR [edx+0x169e00]
  405243:	jmp    DWORD PTR [edi]
  405245:	add    BYTE PTR [eax],al
  405247:	mov    dh,0xff
  405249:	les    eax,FWORD PTR [eax]
  40524b:	mov    ebp,0xff830097
  405250:	icebp  
  405251:	pop    edi
  405252:	add    bh,bh
  405254:	nop
  405255:	inc    DWORD PTR [eax]
  405257:	jo     0x405259
  405259:	dec    edi
  40525a:	jmp    FWORD PTR [esi]
  40525c:	inc    edx
  40525d:	call   eax
  40525f:	(bad)  
  405260:	fucomi st,st(3)
  405262:	add    bh,bh
  405264:	lds    eax,FWORD PTR [eax]
  405266:	jmp    FWORD PTR [edi+edi*8-0x68247c34]
  40526d:	add    BYTE PTR [esi-0x1],ch
  405270:	pop    edi
  405271:	sar    edi,cl
  405273:	call   DWORD PTR [ebx-0x1]
  405276:	add    BYTE PTR [ecx],al
  405278:	mov    DWORD PTR [ecx],eax
  40527a:	int3   
  40527b:	arpl   WORD PTR [ebx-0x1],bx
  40527e:	in     eax,0x0
  405280:	cmp    BYTE PTR [ecx-0x1],ah
  405283:	and    DWORD PTR [edx-0x1],0x0
  405287:	sub    DWORD PTR ss:[esi+0x0],0x3f
  40528c:	sub    al,0x0
  40528e:	xchg   esi,eax
  40528f:	int3   
  405290:	scas   eax,DWORD PTR es:[edi]
  405291:	push   ebx
  405292:	(bad)  
  405293:	call   FWORD PTR [esi]
  405295:	mov    esp,ecx
  405297:	cli    
  405298:	xor    ebx,0xffffffff
  40529b:	test   al,0xca
  40529d:	jmp    DWORD PTR [ecx-0x1]
  4052a0:	aaa    
  4052a1:	cmp    eax,DWORD PTR [eax]
  4052a3:	add    ch,bh
  4052a5:	or     DWORD PTR [ecx-0x873312],0x59
  4052ac:	jno    0x4052ad
  4052ae:	mov    es,WORD PTR [ebx-0x99c]
  4052b4:	mov    edi,0x8335cc00
  4052b9:	push   DWORD PTR cs:[ecx]
  4052bc:	out    dx,al
  4052bd:	jmp    DWORD PTR [ebp+0x3c26ff]
  4052c3:	jmp    ecx
  4052c5:	add    bh,bh
  4052c7:	js     0x405295
  4052c9:	add    edi,edi
  4052cb:	dec    esi
  4052cc:	add    DWORD PTR [eax],0x582989f5
  4052d2:	cmp    edi,0xffffff9c
  4052d5:	add    BYTE PTR [eax],al
  4052d7:	dec    ebx
  4052d8:	jmp    FWORD PTR [ecx+0xbd8883]
  4052de:	mov    DWORD PTR [eax],eax
  4052e0:	inc    ebp
  4052e1:	test   edi,edi
  4052e3:	sub    DWORD PTR [edx-0x1],0x0
  4052e7:	(bad)  
  4052e8:	jmp    DWORD PTR [ebp-0x7d]
  4052eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ec:	in     al,0xff
  4052ee:	push   0xcc701fcc
  4052f3:	mov    DWORD PTR [eax+eax*1],esi
  4052f6:	int3   
  4052f7:	mov    ds:0x9883f400,al
  4052fc:	jne    0x405281
  4052fe:	sahf   
  4052ff:	add    bh,cl
  405301:	pop    esp
  405302:	(bad)  
  405303:	dec    DWORD PTR [edx]
  405305:	mov    esp,ecx
  405307:	xor    eax,0xbeff9c00
  40530c:	sub    edi,edi
  40530e:	cmp    esp,ecx
  405310:	fwait
  405311:	inc    ebp
  405312:	add    BYTE PTR [ebx-0x45000031],al
  405318:	(bad)  
  405319:	call   0xffe400ea
  40531e:	sbb    eax,0x83d91aff
  405323:	and    DWORD PTR [eax-0x7d],0x0
  405327:	dec    ebp
  405328:	add    BYTE PTR [esi],bl
  40532a:	jmp    eax
  40532c:	adc    edi,edi
  40532e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40532f:	add    ch,cl
  405331:	sbb    al,0x0
  405333:	(bad)  
  405334:	jns    0x405336
  405336:	call   FWORD PTR ds:0xbff7683
  40533c:	mov    al,ds:0x69005eff
  405341:	pop    edx
  405342:	add    BYTE PTR [ebx+0x7bff83cf],al
  405348:	add    BYTE PTR [eax-0x1],bl
  40534b:	scas   eax,DWORD PTR es:[edi]
  40534c:	(bad)  
  40534e:	pop    eax
  40534f:	call   FWORD PTR [edx]
  405351:	jecxz  0x405353
  405353:	mov    DWORD PTR [eax+eax*1],ecx
  405356:	jmp    FWORD PTR [eax-0x48766600]
  40535c:	call   0xc50ce5e4
  405361:	call   0xccd153e9
  405366:	add    BYTE PTR [ebp-0x1],bl
  405369:	fld    DWORD PTR [eax]
  40536b:	xor    al,0xf8
  40536d:	call   DWORD PTR [ebp-0x33abde01]
  405373:	call   DWORD PTR [edx-0x1]
  405376:	(bad)  
  405377:	jle    0x405302
  405379:	repnz add BYTE PTR [ebx-0xa3000e],ah
  405380:	and    esi,ebx
  405382:	(bad)  
  405383:	call   DWORD PTR [eax+eax*1-0x7d]
  405387:	or     bh,bh
  405389:	xchg   esi,eax
  40538a:	push   DWORD PTR [esi-0x1d]
  40538d:	inc    DWORD PTR [edi+edi*8-0xffc050]
  405394:	cs add ah,cl
  405397:	adc    cl,ah
  405399:	mov    al,ds:0xff812700
  40539e:	jb     0x40536c
  4053a0:	pop    ebx
  4053a1:	adc    al,0x83
  4053a3:	sub    DWORD PTR [edx],0xffffffcc
  4053a6:	int3   
  4053a7:	xor    bh,bh
  4053a9:	rol    BYTE PTR [eax],cl
  4053ab:	push   0x90ff4b
  4053b0:	in     eax,0xb0
  4053b2:	dec    DWORD PTR [ecx-0x45ff339b]
  4053b8:	add    BYTE PTR [ecx],dh
  4053ba:	int3   
  4053bb:	cld    
  4053bc:	dec    ebx
  4053bd:	jmp    FWORD PTR [esi-0x33316700]
  4053c3:	call   ebx
  4053c5:	inc    DWORD PTR [eax]
  4053c7:	(bad)  
  4053c9:	lods   eax,DWORD PTR ds:[esi]
  4053ca:	jmp    ebp
  4053cc:	sbb    bh,bh
  4053ce:	loopne 0x4053cf
  4053d0:	and    ebp,edx
  4053d2:	cmp    edi,0x22
  4053d5:	add    bh,bh
  4053d7:	jg     0x4053d8
  4053d9:	xchg   ebx,eax
  4053da:	add    BYTE PTR [ecx],dh
  4053dc:	adc    cl,BYTE PTR [ecx+0x5b1f8322]
  4053e2:	add    DWORD PTR [ebx+0x5a008335],0xffffffff
  4053e9:	pusha  
  4053ea:	inc    DWORD PTR [ebx]
  4053ec:	ins    BYTE PTR es:[edi],dx
  4053ed:	xor    esp,0xffffff89
  4053f0:	adc    bh,BYTE PTR [ecx-0x2b0000]
  4053f6:	push   DWORD PTR [edx-0x1]
  4053f9:	rol    DWORD PTR [eax],1
  4053fb:	dec    esp
  4053fc:	cmp    edi,edi
  4053fe:	sub    al,0xff
  405400:	or     eax,0x4dff0091
  405405:	inc    DWORD PTR [eax]
  405407:	pop    eax
  405408:	add    BYTE PTR [esi],dl
  40540a:	dec    DWORD PTR [eax-0xf0015]
  405410:	int3   
  405411:	(bad)  
  405412:	dec    DWORD PTR [ecx+0x65ff00cf]
  405418:	dec    DWORD PTR [ecx+0x421d89]
  40541e:	mov    bl,0x0
  405420:	cmp    eax,DWORD PTR [edi+edi*8]
  405423:	add    BYTE PTR [edx],al
  405425:	inc    DWORD PTR [ebx+0x2e00f5]
  40542b:	in     al,0x3d
  40542d:	(bad)  
  40542e:	jmp    0xffcc4cb6
  405433:	jmp    DWORD PTR [edx]
  405435:	add    BYTE PTR [ebx-0xe000c],al
  40543b:	and    BYTE PTR [edi-0x2dfff434],cl
  405441:	inc    BYTE PTR [eax]
  405443:	(bad)  
  405444:	cmp    al,BYTE PTR [ebx+0x73ff9100]
  40544a:	(bad)  
  40544b:	cli    
  40544c:	mov    cl,0x0
  40544e:	idiv   edi
  405450:	jle    0x4054cd
  405452:	add    bh,bh
  405454:	daa    
  405455:	inc    DWORD PTR [eax]
  405457:	push   ebx
  405458:	add    BYTE PTR [ebx],bh
  40545a:	or     DWORD PTR [ecx],0x37
  40545d:	add    al,dh
  40545f:	add    dl,cl
  405461:	retf   0x0
  405464:	in     al,dx
  405465:	add    ah,cl
  405467:	push   edx
  405468:	push   DWORD PTR [eax-0x1]
  40546b:	ret    
  40546c:	stos   DWORD PTR es:[edi],eax
  40546d:	mov    esi,edi
  40546f:	jmp    DWORD PTR [ecx]
  405471:	mov    eax,0x9c8300
  405476:	call   FWORD PTR [ecx+0x0]
  405479:	mov    ebx,0x2e3983
  40547e:	xchg   ebx,eax
  40547f:	dec    DWORD PTR [esi-0x45]
  405482:	add    bh,bh
  405484:	inc    ebx
  405485:	add    BYTE PTR [ebx-0xc80033],al
  40548b:	inc    edi
  40548c:	iret   
  40548d:	dec    DWORD PTR [edi-0x1]
  405490:	jns    0x405479
  405492:	inc    DWORD PTR [eax]
  405494:	mov    ah,0xff
  405496:	add    BYTE PTR [edx-0x7d],cl
  405499:	cmp    bh,bh
  40549b:	sub    BYTE PTR [edi+edi*8-0x4],dh
  40549f:	and    DWORD PTR [ebx+edx*2-0x3368ff01],0xffffffff
  4054a7:	xchg   BYTE PTR [ebx-0x4989337f],al
  4054ad:	jmp    ebp
  4054af:	and    edi,0x3e
  4054b2:	(bad)  
  4054b3:	call   DWORD PTR [ebp+0x0]
  4054b6:	jmp    FWORD PTR [ecx+0x0]
  4054b9:	(bad)  
  4054bb:	dec    edx
  4054bc:	pop    eax
  4054bd:	jmp    DWORD PTR [esi+0x0]
  4054c0:	and    al,0x61
  4054c2:	add    BYTE PTR [ebx+0x65fffffa],al
  4054c8:	inc    DWORD PTR [eax-0x33086d01]
  4054ce:	inc    edi
  4054cf:	and    esp,0xffffff8f
  4054d2:	add    bh,bh
  4054d4:	add    bh,bh
  4054d6:	add    BYTE PTR [ecx+0x19ffa283],dh
  4054dc:	push   0x3dff5900
  4054e1:	rol    BYTE PTR [eax],cl
  4054e3:	int3   
  4054e4:	cmp    esp,ecx
  4054e6:	inc    edi
  4054e8:	dec    DWORD PTR ds:0xff0ae0ff
  4054ee:	or     bh,bh
  4054f0:	sti    
  4054f1:	lds    eax,FWORD PTR [eax]
  4054f3:	add    BYTE PTR [esi-0xd7ff01],ah
  4054f9:	out    dx,eax
  4054fa:	dec    DWORD PTR [eax+edi*1+0x1d006400]
  405501:	sti    
  405502:	add    bh,bh
  405504:	out    0x83,al
  405506:	jmp    ebp
  405508:	add    BYTE PTR [ebx-0x7d],dh
  40550b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40550c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40550d:	add    al,cl
  40550f:	add    BYTE PTR [ebx],ah
  405511:	push   es
  405512:	add    BYTE PTR [ebx+0x67ffffe0],al
  405518:	int3   
  405519:	xor    DWORD PTR [bp+di-0x75],0xffffff83
  40551e:	(bad)  
  40551f:	int3   
  405520:	aaa    
  405521:	aam    0x83
  405523:	add    BYTE PTR [eax-0xf00077],bh
  405529:	jmp    0xff6a872d
  40552e:	jge    0x405530
  405530:	arpl   WORD PTR [edx],cx
  405532:	int3   
  405533:	add    BYTE PTR [edi+edi*8],cl
  405536:	inc    ebx
  405538:	(bad)  
  405539:	sti    
  40553a:	sbb    ebp,0x2d
  40553d:	call   edx
  40553f:	call   FWORD PTR [esp+ecx*2-0x34]
  405543:	inc    eax
  405545:	mov    DWORD PTR [eax],eax
  405547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405548:	add    BYTE PTR [edx-0x49ba00],bh
  40554e:	lahf   
  40554f:	jmp    DWORD PTR [ecx-0x3]
  405552:	dec    DWORD PTR [ecx+0x5083ff15]
  405558:	inc    DWORD PTR [ecx-0x1]
  40555b:	(bad)  
  40555c:	mov    DWORD PTR [eax],eax
  40555e:	xor    DWORD PTR [ebx-0x334a1a],eax
  405564:	inc    edi
  405565:	dec    esp
  405567:	out    dx,eax
  405568:	int3   
  405569:	mov    eax,ds:0x894dec00
  40556e:	ror    ah,0xcd
  405571:	cli    
  405572:	mov    DWORD PTR [eax],eax
  405574:	dec    DWORD PTR [ecx-0x71005801]
  40557a:	add    BYTE PTR [edi],bl
  40557c:	ja     0x40557e
  40557e:	fisttp DWORD PTR [ecx+0xff7de8]
  405584:	clc    
  405585:	add    BYTE PTR [eax],al
  405587:	test   BYTE PTR [eax],al
  405589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40558a:	(bad)  
  40558b:	clc    
  40558c:	(bad)  
  40558d:	(bad)  
  40558e:	(bad)  
  405590:	jbe    0x405527
  405592:	(bad)  
  405593:	dec    edx
  405595:	int3   
  405596:	add    BYTE PTR [ecx-0x7e764c01],cl
  40559c:	push   esi
  40559d:	jmp    FWORD PTR [ebx-0x77]
  4055a0:	call   0x273fdf36
  4055a5:	add    BYTE PTR [eax],al
  4055a7:	dec    ebx
  4055a8:	jmp    DWORD PTR [ecx+0x1e4000]
  4055ae:	das    
  4055af:	add    BYTE PTR [ecx-0x41],ch
  4055b2:	add    BYTE PTR [ebx+0x2f00ff82],al
  4055b8:	inc    esp
  4055ba:	add    BYTE PTR [edx-0x5a],al
  4055bd:	and    edi,0xffffffff
  4055c0:	push   edi
  4055c1:	jb     0x4055c2
  4055c3:	adc    edi,0x0
  4055c6:	add    ah,dl
  4055c8:	add    cl,ch
  4055ca:	and    DWORD PTR [esi-0x761f00a1],0xb
  4055d1:	inc    DWORD PTR gs:[eax]
  4055d4:	xor    bh,bh
  4055d6:	add    bl,bl
  4055d8:	add    al,cl
  4055da:	jmp    FWORD PTR [esp+edi*1+0xa0034ff]
  4055e1:	(bad)  
  4055e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055e5:	int3   
  4055e6:	sbb    esi,0xffffffff
  4055e9:	mov    bh,bh
  4055eb:	sahf   
  4055ec:	sub    al,0x0
  4055ee:	loope  0x4055f0
  4055f0:	sar    BYTE PTR [eax-0x9c0100],1
  4055f6:	add    BYTE PTR [esi-0x1],dl
  4055f9:	cmp    bh,bh
  4055fb:	mov    al,0xfa
  4055fd:	dec    DWORD PTR [esi+0x684fff]
  405603:	push   DWORD PTR [ebx]
  405605:	(bad)  
  405606:	call   DWORD PTR [ebx]
  405608:	dec    DWORD PTR [ebx+eax*4+0xd]
  40560c:	cmp    eax,0xba83bfff
  405611:	and    bh,bh
  405613:	(bad)  
  405614:	mov    eax,0x831a89ff
  405619:	mov    ch,0x0
  40561b:	cdq    
  40561c:	adc    al,0xcc
  40561e:	cmp    BYTE PTR [eax],al
  405620:	add    al,0xe4
  405622:	add    DWORD PTR [eax],0xffffffac
  405625:	(bad)  
  405626:	(bad)  
  405627:	mov    ebp,0x4d00b8ff
  40562c:	outs   dx,BYTE PTR ds:[esi]
  40562d:	add    BYTE PTR [ecx],ch
  40562f:	push   DWORD PTR [eax]
  405631:	stc    
  405632:	int3   
  405633:	sbb    DWORD PTR [esi],0xffffffff
  405636:	jmp    DWORD PTR [edi]
  405638:	call   FWORD PTR [edi+edi*8]
  40563b:	inc    edx
  40563c:	sar    edi,cl
  40563e:	enter  0xc383,0xd5
  405642:	inc    DWORD PTR [eax]
  405644:	mov    cl,0x0
  405646:	add    ch,al
  405648:	push   DWORD PTR ds:0x69d000
  40564e:	sbb    al,0xff
  405650:	pop    ebp
  405651:	inc    BYTE PTR [eax]
  405653:	add    BYTE PTR [eax-0x77],cl
  405656:	add    BYTE PTR [ebx+0x7b89db83],al
  40565c:	int    0xff
  40565e:	dec    edi
  40565f:	jmp    DWORD PTR [ecx-0x27]
  405662:	add    bh,bh
  405664:	jno    0x405632
  405666:	jmp    DWORD PTR [edi+edi*8+0x73]
  40566a:	mov    eax,edi
  40566c:	mov    eax,DWORD PTR [eax]
  40566e:	sbb    bh,bh
  405670:	mov    ecx,0x80ff00f1
  405675:	inc    DWORD PTR [ebx-0xcaff89]
  40567b:	add    eax,0x5e0039
  405680:	sub    dh,ch
  405682:	(bad)  
  405683:	inc    DWORD PTR [esi]
  405685:	(bad)  
  405686:	dec    DWORD PTR [eax]
  405688:	push   edi
  40568a:	push   ebx
  40568c:	adc    al,0x0
  40568e:	push   ebx
  40568f:	call   DWORD PTR [edx+eax*1-0xc4ff01]
  405696:	call   DWORD PTR [eax+0x37ff7183]
  40569c:	jb     0x405621
  40569e:	sub    eax,DWORD PTR [ebx-0x7c7cf7ce]
  4056a4:	inc    eax
  4056a5:	add    BYTE PTR [eax],al
  4056a7:	test   BYTE PTR [ebx-0x6074766c],al
  4056ad:	(bad)  
  4056ae:	cld    
  4056af:	add    BYTE PTR [edi+0x7],dh
  4056b2:	(bad)  
  4056b3:	call   DWORD PTR [ebp-0x34]
  4056b6:	int3   
  4056b7:	xchg   esp,eax
  4056b8:	jmp    DWORD PTR [ecx-0xafae01]
  4056be:	in     eax,0x0
  4056c0:	stos   DWORD PTR es:[edi],eax
  4056c1:	xor    al,0x89
  4056c3:	(bad)  
  4056c4:	inc    DWORD PTR [ebx+0x1500fe89]
  4056ca:	jmp    DWORD PTR [ebp-0xbc33a6]
  4056d0:	cmp    edi,esp
  4056d2:	add    DWORD PTR [ebx+0x31ffff0d],0x0
  4056d9:	stos   BYTE PTR es:[edi],al
  4056da:	add    cl,dh
  4056dc:	add    BYTE PTR [eax],al
  4056de:	jmp    0x4056e0
  4056e0:	push   0xc0ff89a6
  4056e5:	add    BYTE PTR [eax],al
  4056e7:	cmp    edi,0x88a800bf
  4056ed:	int3   
  4056ee:	test   edi,edi
  4056f0:	add    eax,0x16008349
  4056f5:	mov    edi,edi
  4056f7:	mov    ecx,0xa8976cc
  4056fc:	out    dx,eax
  4056fd:	(bad)  
  4056fe:	cmp    DWORD PTR [eax],eax
  405700:	and    eax,0x4bcc000a
  405705:	mov    edi,edi
  405707:	push   0xffffff83
  405709:	(bad)  
  40570a:	jmp    FWORD PTR [eax-0x7c72ff84]
  405710:	stc    
  405711:	mov    es,WORD PTR [eax]
  405713:	push   eax
  405715:	inc    DWORD PTR [eax]
  405717:	xor    al,0x83
  405719:	push   0xffffffcc
  40571b:	fsubr  st,st(1)
  40571d:	(bad)  
  40571e:	fiadd  DWORD PTR [ebx-0x7cff1919]
  405724:	aaa    
  405725:	(bad)  
  405726:	call   DWORD PTR [eax]
  405728:	add    BYTE PTR [edx-0x7c62f000],al
  40572e:	test   BYTE PTR [eax],0xcd
  405731:	enter  0x83,0x39
  405735:	add    DWORD PTR [eax],0x3b
  405738:	add    BYTE PTR [edi],dl
  40573a:	call   FWORD PTR [edi-0x2f33b9]
  405740:	lea    edi,[edi+edi*8-0x1]
  405744:	ja     0x405745
  405746:	xor    DWORD PTR [ecx],0xffffff83
  405749:	loope  0x40574a
  40574b:	or     eax,0x833bffba
  405750:	ret    
  405751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405752:	int3   
  405753:	add    BYTE PTR [ebx-0x7c580100],cl
  405759:	jae    0x40575b
  40575b:	pop    esp
  40575c:	sub    bh,bh
  40575e:	aam    0x83
  405760:	inc    edx
  405761:	out    dx,al
  405762:	inc    DWORD PTR [eax]
  405764:	ins    BYTE PTR es:[edi],dx
  405765:	(bad)  
  405766:	jmp    FWORD PTR [ebx]
  405768:	add    BYTE PTR [edx+0x164cff],bl
  40576e:	pushf  
  40576f:	(bad)  
  405770:	jg     0x405747
  405772:	mov    DWORD PTR [ecx+0x1d89ff7e],ecx
  405778:	sbb    DWORD PTR [ebx-0x7c42ef01],0x3d
  40577f:	(bad)  
  405780:	std    
  405781:	cwde   
  405782:	inc    DWORD PTR [eax]
  405784:	pop    ebx
  405785:	add    BYTE PTR [ebx-0x3348ffd7],al
  40578b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578c:	push   ss
  40578d:	add    BYTE PTR [ebx+0x0],dl
  405790:	(bad)  
  405791:	test   DWORD PTR [ebx-0xb01],0x7a839f
  40579b:	in     eax,0x7
  40579d:	jmp    FWORD PTR ds:0x83bab4ff
  4057a3:	add    BYTE PTR ds:0xff4fff83,dl
  4057a9:	and    al,0x0
  4057ab:	pop    ebp
  4057ac:	fdivr  st,st(7)
  4057ae:	lods   al,BYTE PTR ds:[esi]
  4057af:	call   edi
  4057b1:	pop    esi
  4057b2:	int3   
  4057b3:	dec    DWORD PTR [ebx-0x220000]
  4057b9:	retf   
  4057ba:	cmp    ebx,0x33
  4057bd:	dec    DWORD PTR ds:0xffba15ff
  4057c3:	jmp    DWORD PTR ds:0x8376ff83
  4057c9:	out    0xff,eax
  4057cb:	addr16 pushf 
  4057cd:	add    BYTE PTR [ecx+0x0],ch
  4057d0:	loope  0x4057c0
  4057d2:	inc    DWORD PTR [eax]
  4057d4:	push   ebx
  4057d5:	inc    DWORD PTR [eax]
  4057d7:	lahf   
  4057d8:	push   esi
  4057da:	(bad)  
  4057db:	cmp    eax,ebp
  4057dd:	jmp    FWORD PTR [ebx-0x7d]
  4057e0:	ja     0x4057f0
  4057e2:	add    bh,bh
  4057e4:	cld    
  4057e5:	int3   
  4057e6:	mov    DWORD PTR [ecx-0x2effc500],edi
  4057ec:	add    BYTE PTR fs:[edi+edi*8],bl
  4057f0:	dec    edi
  4057f1:	pop    ebx
  4057f2:	inc    DWORD PTR [eax]
  4057f4:	pop    ebx
  4057f5:	cmp    edi,0xffffffab
  4057f8:	dec    ebx
  4057fa:	mov    DWORD PTR [ecx-0x5500ea],esp
  405800:	xchg   esi,eax
  405801:	jne    0x405803
  405803:	mov    DWORD PTR [ecx-0x510001],ebx
  405809:	add    BYTE PTR cs:[ebp+0x6d],dl
  40580d:	int3   
  40580e:	or     DWORD PTR [eax],eax
  405810:	and    al,0x99
  405812:	inc    DWORD PTR [eax]
  405814:	and    eax,0xcc638389
  405819:	iret   
  40581a:	(bad)  
  40581b:	std    
  40581c:	imul   eax,DWORD PTR [ebx+0x187aff36],0xffffffff
  405823:	cmp    esi,0xffffff83
  405826:	(bad)  
  405827:	std    
  405828:	jmp    FWORD PTR [ebx-0x1]
  40582b:	enter  0x27,0x16
  40582f:	push   DWORD PTR [esi-0x51]
  405832:	add    DWORD PTR [eax],0x7b
  405835:	add    BYTE PTR [ebx+0xf6ff02],al
  40583b:	push   0xd3ff7d
  405840:	xlat   BYTE PTR ds:[ebx]
  405841:	mov    ah,0x83
  405843:	mov    DWORD PTR [esi],edi
  405845:	cmp    edi,0xfffffff9
  405848:	dec    DWORD PTR [edx]
  40584a:	add    BYTE PTR [ebx+0x7],dl
  40584d:	xor    DWORD PTR [ecx-0x1],0x2f
  405851:	fs int3 
  405853:	(bad)  
  405854:	(bad)  
  405856:	add    cl,ch
  405858:	add    BYTE PTR [eax],ah
  40585a:	add    BYTE PTR [esi+0x1],ch
  40585d:	add    ah,al
  40585f:	add    ebp,0xffffffde
  405862:	add    bh,bh
  405864:	sar    bh,0x0
  405867:	xchg   edi,edi
  405869:	cmc    
  40586a:	add    BYTE PTR [eax-0x8c0052],dl
  405870:	ret    
  405871:	adc    al,BYTE PTR [eax]
  405873:	add    BYTE PTR [edi+edi*8],dl
  405876:	push   DWORD PTR [edi+edi*8+0x7d]
  40587a:	add    bh,dh
  40587c:	cwde   
  40587d:	add    BYTE PTR [edi+0x0],al
  405880:	fcompp 
  405882:	int3   
  405883:	mov    DWORD PTR [edi-0x7caf7634],edi
  405889:	mov    dh,0x0
  40588b:	xchg   esi,eax
  40588c:	stos   BYTE PTR es:[edi],al
  40588d:	add    dh,ch
  40588f:	add    BYTE PTR [esi-0x52],dl
  405892:	add    BYTE PTR [eax],al
  405894:	pusha  
  405895:	cmp    edi,0x65
  405898:	jmp    DWORD PTR [ecx]
  40589a:	add    bl,bh
  40589c:	in     eax,dx
  40589d:	add    BYTE PTR [edi-0x77],dh
  4058a0:	inc    eax
  4058a1:	loop   0x4058a2
  4058a3:	dec    DWORD PTR [edx]
  4058a5:	dec    DWORD PTR [ecx-0x33513331]
  4058ab:	scas   al,BYTE PTR es:[edi]
  4058ac:	fild   DWORD PTR [eax]
  4058ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058af:	dec    ebp
  4058b1:	imul   edi,edi,0xffffff89
  4058b4:	mov    WORD PTR [ebx+0x370012ff],es
  4058ba:	add    BYTE PTR [ebp-0x70],bl
  4058bd:	push   DWORD PTR [ecx]
  4058bf:	jmp    DWORD PTR [esi-0x50]
  4058c2:	cmp    edi,0x5b
  4058c5:	(bad)  
  4058c6:	inc    DWORD PTR [ebx]
  4058c8:	dec    DWORD PTR [edi-0x332fac01]
  4058ce:	in     eax,0x0
  4058d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d1:	clc    
  4058d2:	add    bh,bh
  4058d4:	xchg   esi,eax
  4058d5:	add    BYTE PTR [eax],al
  4058d7:	test   DWORD PTR [ebx+0xdccff77],0xb783c483
  4058e1:	jbe    0x4058e2
  4058e3:	and    DWORD PTR [esi+0x0],0xffffff89
  4058e7:	dec    eax
  4058e8:	(bad)  
  4058e9:	inc    DWORD PTR [eax]
  4058eb:	mov    edx,DWORD PTR [eax-0x1]
  4058ee:	test   eax,0x6e800
  4058f3:	add    BYTE PTR [esi+0x0],ah
  4058f6:	(bad)  
  4058f7:	cmp    eax,DWORD PTR [ebx+0x6eaa002d]
  4058fd:	add    BYTE PTR [ebx+eax*4+0x59],ah
  405901:	icebp  
  405902:	add    bh,bh
  405904:	arpl   WORD PTR [ecx+0x1583d2ff],cx
  40590a:	int3   
  40590b:	es out 0x0,al
  40590e:	mov    esp,0xff8fdb89
  405913:	add    ah,cl
  405915:	(bad)  
  405916:	inc    ecx
  405918:	call   DWORD PTR [edi+0x6fb8ff]
  40591e:	ror    BYTE PTR [ecx-0x7cfacc],cl
  405924:	mov    edi,0x6700ff
  405929:	fwait
  40592a:	add    al,ch
  40592c:	cmp    al,0xff
  40592e:	jmp    0xa2ff:0x8307e600
  405935:	inc    DWORD PTR [ebx-0xfbffce]
  40593b:	push   esi
  40593c:	je     0x40593e
  40593e:	sar    bh,1
  405940:	in     al,dx
  405941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405942:	inc    DWORD PTR [ebx+0x7a00ccf2]
  405948:	xor    DWORD PTR [edi+edi*8+0x4c000dde],0xffffffff
  405950:	inc    eax
  405951:	lahf   
  405952:	inc    DWORD PTR [eax]
  405954:	xor    bh,bh
  405956:	call   DWORD PTR [eax]
  405958:	(bad)  
  405959:	mov    edi,0xf2ebff
  40595e:	sub    al,0xff
  405960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405961:	std    
  405962:	add    bh,bh
  405964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405965:	(bad)  
  405966:	(bad)  
  405967:	jg     0x405969
  405969:	leave  
  40596a:	add    BYTE PTR ds:0xff27ffa5,ch
  405970:	inc    eax
  405971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405972:	cmp    edi,0x20
  405975:	add    BYTE PTR [eax],al
  405977:	popa   
  405978:	jmp    FWORD PTR [ebx-0x1b9400]
  40597e:	fcos   
  405980:	aaa    
  405981:	imul   eax,DWORD PTR [eax],0x0
  405984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405985:	inc    DWORD PTR [ebx+0xab00c1]
  40598b:	dec    BYTE PTR ds:0x8aff67ff
  405991:	mov    DWORD PTR [ebx-0x3300d001],eax
  405997:	test   esp,0xcf10ff30
  40599d:	add    BYTE PTR [ecx],dh
  40599f:	int3   
  4059a0:	das    
  4059a1:	mov    ch,0xff
  4059a3:	and    DWORD PTR ds:0x8328ffff,0xffffffa6
  4059aa:	jmp    DWORD PTR [edi+0xe983b6]
  4059b0:	mov    edx,edx
  4059b2:	inc    DWORD PTR [ebx-0x5f7c00e2]
  4059b8:	add    dh,cl
  4059ba:	(bad)  
  4059bb:	cld    
  4059bc:	fdivp  st(7),st
  4059be:	retf   0x500
  4059c1:	out    0xff,al
  4059c3:	(bad)  
  4059c4:	mov    edx,0xffd48383
  4059c9:	jecxz  0x405997
  4059cb:	xchg   DWORD PTR [edx+0x0],edx
  4059ce:	inc    ecx
  4059cf:	inc    DWORD PTR [ebp+0x55ffff8d]
  4059d5:	inc    DWORD PTR [eax]
  4059d7:	jmp    0x40595c
  4059d9:	pop    DWORD PTR [eax]
  4059db:	or     bh,bl
  4059dd:	add    BYTE PTR [esi-0x77],ch
  4059e0:	loop   0x4059f4
  4059e2:	int3   
  4059e3:	add    bl,dh
  4059e5:	add    BYTE PTR [eax],al
  4059e7:	jg     0x4059b5
  4059e9:	pop    ebp
  4059ea:	call   DWORD PTR [ebp+0xbfffd4]
  4059f0:	into   
  4059f1:	test   edi,edi
  4059f3:	add    ch,dl
  4059f5:	inc    DWORD PTR [eax]
  4059f7:	mov    bh,0xff
  4059f9:	jo     0x4059fa
  4059fb:	and    ah,BYTE PTR [ecx]
  4059fd:	sub    DWORD PTR [eax+eax*1-0x33ffd6e5],0x5
  405a05:	(bad)  
  405a06:	(bad)  
  405a07:	mov    ebx,0x990034ff
  405a0c:	sbb    al,0xcc
  405a0e:	loop   0x405a0f
  405a10:	xchg   ebp,eax
  405a11:	(bad)  
  405a13:	call   DWORD PTR ds:0xff8e0089
  405a19:	or     bh,bh
  405a1b:	or     eax,0xffd8ff8d
  405a20:	popa   
  405a21:	outs   dx,BYTE PTR ds:[esi]
  405a22:	add    BYTE PTR [eax],al
  405a24:	pop    ss
  405a25:	add    bh,bh
  405a27:	cmp    bh,bh
  405a29:	out    dx,eax
  405a2a:	dec    DWORD PTR [edx-0x76ffbb]
  405a30:	and    BYTE PTR [edi-0x761e0000],ah
  405a36:	call   ebx
  405a38:	add    dl,cl
  405a3a:	add    BYTE PTR [edx-0x20],al
  405a3d:	call   DWORD PTR [edx]
  405a3f:	add    al,al
  405a41:	inc    WORD PTR [eax]
  405a44:	mov    BYTE PTR [ebx+0x7100efff],al
  405a4a:	adc    edx,0xffffff85
  405a4d:	adc    DWORD PTR [ecx],0xffffff89
  405a50:	jge    0x405a7b
  405a52:	add    BYTE PTR [eax],al
  405a54:	push   ecx
  405a55:	inc    DWORD PTR [eax]
  405a57:	xchg   ebp,eax
  405a58:	(bad)  
  405a59:	in     al,dx
  405a5a:	add    BYTE PTR [ecx+0x1c],ah
  405a5d:	dec    DWORD PTR [ebx-0x1f6401]
  405a63:	jmp    FWORD PTR [ebx-0x7cd80100]
  405a69:	xchg   bh,bh
  405a6b:	or     eax,0xe7ff87
  405a70:	pushf  
  405a71:	cmp    bh,bh
  405a73:	add    BYTE PTR [esi],cl
  405a75:	add    DWORD PTR [ebx-0x907cdd],0xffffffdf
  405a7c:	icebp  
  405a7d:	call   DWORD PTR ds:0xffa26bff
  405a83:	add    BYTE PTR [ecx+0xdb83ff],ah
  405a89:	adc    al,0x0
  405a8b:	sub    ch,dl
  405a8d:	or     esp,0xffffffff
  405a90:	xor    al,0xe6
  405a92:	or     esp,0x6a
  405a95:	(bad)  
  405a96:	call   edx
  405a98:	add    DWORD PTR [esi],0xffffff83
  405a9b:	sub    eax,0xff59ff33
  405aa0:	inc    ebx
  405aa1:	push   ebx
  405aa2:	add    ah,cl
  405aa4:	(bad)  
  405aa5:	inc    DWORD PTR [eax]
  405aa7:	(bad)  
  405aa9:	sbb    bh,bh
  405aab:	addr16 sar edi,1
  405aae:	lea    eax,[eax]
  405ab0:	enter  0xb6,0xff
  405ab4:	rol    DWORD PTR [ebx-0x5f7ce634],cl
  405aba:	call   edi
  405abc:	dec    esp
  405abd:	add    bl,bh
  405abf:	int3   
  405ac0:	or     bl,BYTE PTR [ebp+0xa60000]
  405ac6:	add    BYTE PTR [edi+0x2bff2bcc],ch
  405acc:	and    bh,bh
  405ace:	aas    
  405acf:	push   DWORD PTR [ecx]
  405ad1:	pop    esi
  405ad2:	mov    DWORD PTR [eax],eax
  405ad4:	ret    
  405ad5:	add    bh,bh
  405ad7:	cli    
  405ad8:	inc    ecx
  405ada:	call   FWORD PTR [ebp-0x35]
  405add:	(bad)  
  405ade:	mov    esi,0xffe99a83
  405ae3:	adc    esi,0xffffff83
  405ae6:	mov    DWORD PTR [eax+0x0],ebx
  405ae9:	lods   eax,DWORD PTR ds:[esi]
  405aea:	add    dl,al
  405aec:	cmp    bh,bh
  405aee:	sbb    DWORD PTR [eax],eax
  405af0:	cmp    BYTE PTR ds:0x56ffff,0xff
  405af7:	je     0x405a82
  405af9:	repnz jmp FWORD PTR ds:0x8385ffa0
  405b00:	popf   
  405b01:	sbb    bh,bh
  405b03:	add    DWORD PTR [ebp-0x6c0000],0x7b
  405b0a:	jmp    FWORD PTR ds:0x83d8ffaa
  405b10:	mov    eax,ds:0x1e838312
  405b15:	inc    DWORD PTR [eax]
  405b17:	mov    DWORD PTR fs:0x89521e83,edi
  405b1e:	mov    dl,0x0
  405b20:	adc    BYTE PTR ds:0xffdcff89,0x0
  405b27:	test   BYTE PTR [eax],al
  405b29:	mov    cl,0x0
  405b2b:	pop    esi
  405b2c:	xchg   ebp,eax
  405b2d:	add    bh,bl
  405b2f:	add    BYTE PTR [ebp-0x9007c20],bh
  405b35:	dec    esp
  405b37:	std    
  405b38:	add    bl,ah
  405b3a:	adc    DWORD PTR [ecx-0x4d],0x0
  405b3e:	inc    eax
  405b3f:	inc    DWORD PTR [esi+0x6d00007a]
  405b45:	add    bh,bh
  405b47:	pusha  
  405b48:	jmp    FWORD PTR [ecx]
  405b4a:	mov    DWORD PTR [edx],esp
  405b4c:	inc    ebx
  405b4d:	push   DWORD PTR [eax]
  405b4f:	sbb    DWORD PTR [esi-0x9],0xffffffff
  405b53:	add    BYTE PTR [eax-0x1],al
  405b56:	add    ah,bh
  405b58:	push   DWORD PTR [ecx]
  405b5a:	int3   
  405b5b:	pushf  
  405b5c:	fdiv   st(7),st
  405b5e:	jmp    0xc4ff:0x1555ff
  405b65:	add    BYTE PTR [eax],al
  405b67:	xchg   edi,eax
  405b68:	call   DWORD PTR [ebp-0xc43e01]
  405b6e:	xchg   edi,eax
  405b6f:	add    BYTE PTR [esi],cl
  405b71:	mov    dl,0x83
  405b73:	adc    DWORD PTR [ebx+0x9f00ff],0xffffffbc
  405b7a:	dec    DWORD PTR [edx]
  405b7c:	cmp    al,0xff
  405b7e:	rol    DWORD PTR [eax],cl
  405b80:	jmp    0xff00:0x3aff00ea
  405b87:	mov    ds:0x340054ff,al
  405b8c:	cmp    edi,edi
  405b8e:	push   esp
  405b8f:	(bad)  
  405b90:	cli    
  405b91:	xchg   edi,edi
  405b93:	mov    DWORD PTR [eax],esp
  405b95:	cmp    edi,0x46
  405b98:	(bad)  
  405b99:	add    BYTE PTR ds:[ebx+edx*1-0x1],ch
  405b9e:	adc    DWORD PTR [ecx+0x5c1a],ecx
  405ba4:	pushf  
  405ba5:	(bad)  
  405ba6:	jmp    edx
  405ba8:	int3   
  405ba9:	(bad)  
  405baa:	call   DWORD PTR [esi]
  405bac:	cmp    bh,bh
  405bae:	sbb    ah,cl
  405bb0:	mov    ah,BYTE PTR [eax+0x0]
  405bb3:	sub    DWORD PTR [esi+0x0],0xffffffcc
  405bb7:	lahf   
  405bb8:	call   FWORD PTR [ebx]
  405bba:	inc    DWORD PTR [esi+0xa]
  405bbd:	mov    DWORD PTR [esi-0x7c09c900],esp
  405bc3:	inc    DWORD PTR [ebx-0x330100]
  405bc9:	cli    
  405bca:	int3   
  405bcb:	imul   eax,ebp,0x0
  405bce:	aad    0xff
  405bd0:	clc    
  405bd1:	arpl   di,di
  405bd3:	add    ch,ah
  405bd5:	(bad)  
  405bd6:	dec    DWORD PTR [edi+0x75cc28ff]
  405bdc:	ret    
  405bdd:	int3   
  405bde:	jl     0x405bac
  405be0:	shl    esi,1
  405be2:	cmp    edi,0xffffff97
  405be5:	cmp    edi,0xffffffdb
  405be8:	add    BYTE PTR [eax+eax*1+0x23ffb02e],bh
  405bef:	call   FWORD PTR [ecx-0x6eff7cf4]
  405bf5:	add    BYTE PTR [ebx-0x7c5f33f0],al
  405bfb:	test   al,0xa3
  405bfd:	or     DWORD PTR [esp+ecx*8+0x52],0x60
  405c02:	add    DWORD PTR [eax],0xffffff87
  405c05:	(bad)  
  405c06:	push   DWORD PTR [esi-0x1]
  405c09:	mov    ecx,0xff6fccff
  405c0e:	(bad)  
  405c0f:	(bad)  
  405c10:	out    dx,eax
  405c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c12:	dec    DWORD PTR [ecx+0x3b89006a]
  405c18:	add    BYTE PTR ds:0xffbc58ff,dl
  405c1e:	mov    DWORD PTR [eax],0xff00080f
  405c24:	pop    edi
  405c25:	add    BYTE PTR [eax],al
  405c27:	ror    esp,cl
  405c29:	jmp    0x405c2a
  405c2b:	jno    0x405c7f
  405c2d:	and    DWORD PTR ds:0xe66183,0xffffffff
  405c34:	add    edi,edi
  405c36:	dec    DWORD PTR [ebx]
  405c38:	jmp    DWORD PTR [esi]
  405c3a:	add    BYTE PTR [eax],dh
  405c3c:	pop    edi
  405c3d:	add    BYTE PTR [edi+edi*8],dh
  405c40:	push   es
  405c41:	jmp    0x8a205c45
  405c46:	call   FWORD PTR [esi-0x7d]
  405c49:	(bad)  
  405c4a:	jmp    DWORD PTR [edx+ebp*2+0x1eff00ff]
  405c51:	sbb    al,0x0
  405c53:	inc    DWORD PTR [esi+0x0]
  405c56:	dec    edx
  405c58:	push   DWORD PTR [edi]
  405c5a:	add    BYTE PTR [ebx],al
  405c5c:	mov    eax,ds:0xecff1aff
  405c61:	stc    
  405c62:	add    BYTE PTR [eax],al
  405c64:	repz dec esp
  405c67:	ret    
  405c68:	and    edx,0x0
  405c6b:	xor    edi,DWORD PTR [ebx+eax*4+0x1e]
  405c6f:	inc    DWORD PTR [esi-0xd00ffd3]
  405c75:	add    BYTE PTR [eax],al
  405c77:	pop    ds
  405c78:	dec    eax
  405c7a:	dec    DWORD PTR [esi]
  405c7c:	test   eax,0x600c0ff
  405c81:	retf   
  405c82:	mov    edi,edi
  405c84:	push   ds
  405c85:	add    bh,bh
  405c87:	mov    al,0x83
  405c89:	(bad)  
  405c8b:	mov    al,0xeb
  405c8d:	inc    esi
  405c8f:	or     DWORD PTR [ecx+0x5b00838f],0x0
  405c96:	dec    eax
  405c98:	add    BYTE PTR [edx-0x1daf7d],ah
  405c9e:	xchg   ebp,eax
  405c9f:	(bad)  
  405ca0:	ds dec eax
  405ca2:	add    ah,cl
  405ca4:	inc    ecx
  405ca5:	dec    DWORD PTR [ecx-0x4c0084]
  405cab:	test   BYTE PTR [eax-0x6a006801],bh
  405cb1:	push   ds
  405cb2:	add    BYTE PTR [eax],al
  405cb4:	mov    DWORD PTR [eax],0x96ff3a00
  405cba:	inc    DWORD PTR [edi-0x7cc2ff09]
  405cc0:	int3   
  405cc1:	mov    al,ds:0xa60000
  405cc6:	(bad)  
  405cc7:	sti    
  405cc8:	push   DWORD PTR [ecx]
  405cca:	(bad)  
  405ccb:	aas    
  405ccc:	mov    al,0x0
  405cce:	in     al,dx
  405ccf:	add    dl,bh
  405cd1:	adc    eax,DWORD PTR [eax]
  405cd3:	jmp    FWORD PTR [edx-0x1b0100]
  405cd9:	sahf   
  405cda:	call   FWORD PTR [edx]
  405cdc:	ins    DWORD PTR es:[edi],dx
  405cdd:	add    BYTE PTR [esi],dh
  405cdf:	jmp    ecx
  405ce1:	push   ss
  405ce2:	(bad)  
  405ce3:	jmp    FWORD PTR [ecx]
  405ce5:	add    BYTE PTR [eax],al
  405ce7:	sbb    al,0xff
  405ce9:	in     eax,dx
  405cea:	add    BYTE PTR ds:0x9dffcd,ah
  405cf0:	lea    edi,ds:0x420089
  405cf6:	add    BYTE PTR [edi+0x5d0008ff],al
  405cfc:	cmp    al,BYTE PTR [eax]
  405cfe:	and    bh,bh
  405d00:	aam    0x8d
  405d02:	add    ah,cl
  405d04:	ja     0x405d05
  405d06:	add    dh,bl
  405d08:	call   DWORD PTR [edx]
  405d0a:	dec    DWORD PTR [eax]
  405d0c:	push   ss
  405d0d:	add    BYTE PTR [esi-0x77],cl
  405d10:	ins    BYTE PTR es:[edi],dx
  405d11:	icebp  
  405d12:	add    bh,bh
  405d14:	jecxz  0x405c99
  405d16:	inc    DWORD PTR [edi-0x12000f01]
  405d1c:	retf   
  405d1d:	add    BYTE PTR [eax-0x63e700],ah
  405d23:	add    BYTE PTR [eax+0xd189ff],ch
  405d29:	adc    eax,0xff664dff
  405d2e:	ja     0x405d2f
  405d30:	xlat   BYTE PTR ds:[ebx]
  405d31:	hlt    
  405d32:	add    bh,bh
  405d34:	lods   eax,DWORD PTR ds:[esi]
  405d35:	add    bh,bh
  405d37:	ss call ebx
  405d3a:	add    BYTE PTR [edx+0x5d],bl
  405d3d:	jmp    DWORD PTR [esi-0x1]
  405d40:	cmp    eax,0xfeff00c4
  405d45:	add    BYTE PTR [eax],al
  405d47:	pop    eax
  405d48:	add    BYTE PTR [eax],cl
  405d4a:	push   DWORD PTR ds:0x89a7ff5d
  405d50:	test   BYTE PTR [ebx+0x4f83ff],0xcc
  405d57:	(bad)  
  405d58:	(bad)  
  405d59:	stc    
  405d5a:	call   DWORD PTR [ebx+0x5c000d]
  405d60:	pop    edi
  405d61:	add    BYTE PTR [eax],al
  405d63:	dec    edi
  405d65:	mov    DWORD PTR [ebx-0xdff52],eax
  405d6b:	ins    BYTE PTR es:[edi],dx
  405d6c:	mov    esp,0xa1ff9383
  405d71:	pop    esi
  405d72:	(bad)  
  405d73:	(bad)  
  405d74:	fld    DWORD PTR [eax]
  405d76:	push   DWORD PTR [edx-0x1]
  405d79:	xchg   ecx,eax
  405d7a:	add    BYTE PTR [edi+0x45],al
  405d7d:	or     ecx,0xffffff83
  405d80:	add    BYTE PTR [edi],bl
  405d82:	(bad)  
  405d83:	jmp    DWORD PTR [ebp+0x0]
  405d86:	adc    DWORD PTR [edi+0x0],0x1f
  405d8a:	add    BYTE PTR [edx],ch
  405d8c:	les    eax,FWORD PTR [ebx-0x18810022]
  405d92:	add    BYTE PTR [eax],al
  405d94:	fiadd  WORD PTR [eax]
  405d96:	call   DWORD PTR [ecx-0x32000a01]
  405d9c:	adc    bh,bh
  405d9e:	xchg   edx,eax
  405d9f:	(bad)  
  405da0:	fild   DWORD PTR [ebx+0x818983]
  405da6:	dec    DWORD PTR [ecx]
  405da8:	and    DWORD PTR [ebx-0xed8e01],0xffffffd6
  405daf:	inc    DWORD PTR [ebp+0x6e8300dc]
  405db5:	inc    DWORD PTR [eax]
  405db7:	and    al,0x83
  405db9:	push   ebp
  405dba:	add    BYTE PTR [eax],bl
  405dbc:	dec    edx
  405dbd:	int3   
  405dbe:	jmp    0x405d8c
  405dc0:	add    al,0x3f
  405dc2:	add    DWORD PTR [eax],0xffffff8f
  405dc5:	mov    edi,edi
  405dc7:	push   edx
  405dc8:	(bad)  
  405dc9:	cmp    eax,0x89cf5bff
  405dce:	xchg   edi,eax
  405dcf:	jmp    DWORD PTR ds:0xf1ff0017
  405dd5:	add    ah,cl
  405dd7:	add    BYTE PTR gs:[edx],cl
  405dda:	add    BYTE PTR [ebp+0x2a],ch
  405ddd:	push   DWORD PTR [ebx]
  405ddf:	int3   
  405de0:	jge    0x405dac
  405de2:	add    bh,bh
  405de4:	(bad)  
  405de5:	inc    DWORD PTR [ebx-0x7cca7633]
  405deb:	fwait
  405dec:	jle    0x405ded
  405dee:	lods   al,BYTE PTR ds:[esi]
  405def:	add    al,ch
  405df1:	sar    bh,cl
  405df3:	add    BYTE PTR [ebp-0x2cff01],dh
  405df9:	push   WORD PTR [ebp-0x2f]
  405dfd:	inc    DWORD PTR [ecx]
  405dff:	sub    DWORD PTR [ebx+0x4b00cc4f],0x0
  405e06:	add    BYTE PTR [eax+eax*1],dh
  405e09:	inc    esp
  405e0a:	(bad)  
  405e0b:	jge    0x405e22
  405e0d:	call   FWORD PTR [edi+0x0]
  405e10:	or     al,BYTE PTR [eax+eax*1-0x7d]
  405e14:	stos   DWORD PTR es:[edi],eax
  405e15:	int3   
  405e16:	(bad)  
  405e17:	mov    esp,0xd0000dff
  405e1c:	in     al,dx
  405e1d:	add    BYTE PTR [edi-0x6cc734],cl
  405e23:	(bad)  
  405e24:	out    dx,eax
  405e25:	add    BYTE PTR [ecx+0x62007a],cl
  405e2b:	loop   0x405e49
  405e2d:	mov    esp,esi
  405e2f:	adc    DWORD PTR [edi],0xffffffba
  405e32:	(bad)  
  405e33:	dec    DWORD PTR [edi-0x1]
  405e36:	add    BYTE PTR [ebx-0x1],al
  405e39:	inc    eax
  405e3a:	adc    edx,0xffffffd7
  405e3d:	add    BYTE PTR [esi-0x33870901],dh
  405e43:	add    BYTE PTR [edi+edi*8],al
  405e46:	inc    DWORD PTR [esi]
  405e48:	inc    DWORD PTR [edi+edi*8+0x2883ef4f]
  405e4f:	add    BYTE PTR [esi-0x39],ch
  405e52:	add    BYTE PTR [ebx+0x55ff00c4],al
  405e58:	push   ecx
  405e5a:	add    BYTE PTR [ebp+0x70],dh
  405e5d:	sub    DWORD PTR [edx-0xe75701],0xffffffff
  405e64:	push   eax
  405e65:	add    DWORD PTR [ebx-0x7c207c21],0xffffffcc
  405e6c:	jbe    0x405e6d
  405e6e:	mov    bh,0xff
  405e70:	mov    esi,0xdff00a4
  405e75:	add    BYTE PTR [eax],al
  405e77:	in     al,0x83
  405e79:	pushf  
  405e7a:	add    BYTE PTR [esi+0x19ff6d],bh
  405e80:	stos   DWORD PTR es:[edi],eax
  405e81:	or     edi,edi
  405e83:	dec    DWORD PTR [edi]
  405e85:	inc    DWORD PTR [eax]
  405e87:	sti    
  405e88:	add    BYTE PTR [edi+0x0],dh
  405e8b:	cmp    esi,esi
  405e8d:	add    cl,ah
  405e8f:	call   FWORD PTR [esi+ebx*1]
  405e92:	inc    DWORD PTR [eax]
  405e94:	jp     0x405e62
  405e96:	dec    edi
  405e98:	int3   
  405e99:	and    esp,ecx
  405e9b:	mov    ecx,0xff88fffe
  405ea0:	sub    BYTE PTR [ebx+eax*4-0x1],0x8b
  405ea5:	(bad)  
  405ea6:	push   DWORD PTR [edx+0x5bffb3ff]
  405eac:	xor    al,BYTE PTR [eax]
  405eae:	xchg   DWORD PTR [eax],eax
  405eb0:	sub    al,0xe2
  405eb2:	inc    DWORD PTR [ebx+0x4d00cc38]
  405eb8:	add    BYTE PTR [ebp-0x73c500],bh
  405ebe:	pop    ecx
  405ebf:	push   DWORD PTR [eax]
  405ec1:	mov    al,0xcc
  405ec3:	cmp    DWORD PTR [esi+0xaf8300],0xffffffed
  405eca:	add    al,dh
  405ecc:	cwde   
  405ecd:	add    BYTE PTR ds:0xff8a6b00,dl
  405ed3:	push   DWORD PTR [ecx-0xa10077]
  405ed9:	mov    WORD PTR [eax],es
  405edb:	dec    edi
  405edc:	in     al,dx
  405edd:	(bad)  
  405ede:	cli    
  405edf:	push   esi
  405ee1:	test   edi,edi
  405ee3:	add    bl,ah
  405ee5:	inc    DWORD PTR [eax]
  405ee7:	mov    bl,0xff
  405ee9:	jbe    0x405eb7
  405eeb:	inc    edx
  405eec:	adc    al,BYTE PTR [ebx-0x442eff92]
  405ef2:	add    BYTE PTR [ebx-0x8ffffc8],al
  405ef8:	add    ah,bl
  405efa:	add    ch,ah
  405efc:	and    al,0x83
  405efe:	ja     0x405eff
  405f00:	out    0x19,eax
  405f02:	add    ah,cl
  405f04:	pop    ecx
  405f05:	add    bh,bh
  405f07:	sbb    eax,0xc3005dcc
  405f0c:	sbb    eax,0x73835c83
  405f11:	jge    0x405f12
  405f13:	add    BYTE PTR [ebx-0xdf007d],dh
  405f19:	jge    0x405f1b
  405f1b:	aaa    
  405f1c:	xor    ecx,esp
  405f1e:	jl     0x405f20
  405f20:	add    BYTE PTR [eax],al
  405f22:	scas   eax,DWORD PTR es:[edi]
  405f23:	call   FWORD PTR [eax-0x3330a001]
  405f29:	int3   
  405f2a:	dec    ebp
  405f2b:	add    dl,dh
  405f2d:	add    dl,dl
  405f2f:	adc    eax,0xfffacc00
  405f34:	pop    ebp
  405f35:	add    DWORD PTR [eax+0xc],0xffffff83
  405f39:	(bad)  
  405f3a:	std    
  405f3b:	call   FWORD PTR [esi]
  405f3d:	mov    ebx,ebx
  405f3f:	in     al,dx
  405f40:	add    BYTE PTR [eax],al
  405f42:	jp     0x405f43
  405f44:	pop    esi
  405f45:	push   DWORD PTR [edx+0xf]
  405f48:	add    DWORD PTR [ebx-0x9200a4],0x14
  405f4f:	adc    DWORD PTR [eax],eax
  405f51:	inc    DWORD PTR [esi+0x0]
  405f54:	idiv   edi
  405f56:	xor    al,0x1c
  405f58:	add    BYTE PTR [eax],al
  405f5a:	cld    
  405f5b:	add    BYTE PTR [eax-0x1],cl
  405f5e:	shl    BYTE PTR [eax-0x850001],0x28
  405f65:	add    BYTE PTR [edi+0x77cc00be],ah
  405f6b:	call   ebx
  405f6d:	int3   
  405f6e:	in     al,0x9b
  405f70:	add    bh,bh
  405f72:	add    BYTE PTR [bp+di+0x0],ah
  405f76:	leave  
  405f77:	pop    esp
  405f78:	add    bh,bh
  405f7a:	stos   BYTE PTR es:[edi],al
  405f7b:	call   DWORD PTR [edi-0x33f31500]
  405f81:	inc    DWORD PTR [ebp-0x1]
  405f84:	into   
  405f85:	inc    ecx
  405f87:	dec    ecx
  405f88:	inc    DWORD PTR [eax]
  405f8a:	loope  0x405f8b
  405f8c:	test   eax,0xf210ff
  405f91:	(bad)  
  405f92:	inc    BYTE PTR [ebx-0x4c7c7c70]
  405f98:	dec    DWORD PTR [ecx+0x9000c9]
  405f9e:	cdq    
  405f9f:	add    al,BYTE PTR [ebx+0x61ff6100]
  405fa5:	int3   
  405fa6:	jg     0x405fda
  405fa8:	add    BYTE PTR [eax],al
  405faa:	xchg   ebx,eax
  405fab:	add    BYTE PTR [esi],bl
  405fad:	jmp    FWORD PTR [ecx+0x2f]
  405fb0:	(bad)  
  405fb1:	inc    DWORD PTR [ebx]
  405fb3:	add    bl,bl
  405fb5:	mov    DWORD PTR [ebx],eax
  405fb7:	lods   eax,DWORD PTR ds:[esi]
  405fb8:	add    DWORD PTR [eax],0xa
  405fbb:	(bad)  
  405fbc:	mov    ebp,0xff57d5ff
  405fc1:	jmp    DWORD PTR [ecx+0x0]
  405fc4:	jno    0x405fc5
  405fc6:	inc    ecx
  405fc7:	mov    al,0x83
  405fc9:	mov    DWORD PTR [esi],ebx
  405fcb:	or     edi,0x0
  405fce:	ja     0x405fa3
  405fd0:	(bad)  
  405fd1:	inc    DWORD PTR ds:0x8200be00
  405fd7:	and    al,BYTE PTR [ebx-0x1100be00]
  405fdd:	mov    DWORD PTR [edx],edi
  405fdf:	fild   WORD PTR [eax]
  405fe1:	jmp    FWORD PTR [esi]
  405fe3:	call   DWORD PTR [ebx-0x1]
  405fe6:	dec    edx
  405fe7:	jg     0x405fb5
  405fe9:	inc    eax
  405feb:	xor    DWORD PTR [ecx+0x0],0x6d
  405fef:	out    0xff,eax
  405ff1:	inc    DWORD PTR [eax+eax*1+0x42]
  405ff5:	or     edi,0xffffffe1
  405ff8:	add    bh,bh
  405ffa:	push   ss
  405ffb:	dec    eax
  405ffd:	add    BYTE PTR [ebx+0x4600ffe9],al
  406003:	(bad)  
  406004:	js     0x406005
  406006:	out    0x91,eax
  406008:	inc    DWORD PTR [eax]
  40600a:	dec    edx
  40600b:	(bad)  
  40600c:	fadd   DWORD PTR [eax]
  40600e:	or     BYTE PTR [ebx+0x0],ah
  406011:	(bad)  
  406012:	mov    edi,0xaa894f00
  406017:	js     0x406019
  406019:	inc    DWORD PTR [edx]
  40601b:	add    BYTE PTR [eax],ah
  40601d:	call   DWORD PTR [esi+0x12]
  406020:	add    BYTE PTR [eax],al
  406022:	push   ecx
  406023:	sub    DWORD PTR [edx-0x1],0x44
  406027:	repnz int3 
  406029:	add    BYTE PTR [ebp-0x377c2c7d],bh
  40602f:	jecxz  0x406031
  406031:	add    BYTE PTR [eax+eax*1-0x3db6003b],ah
  406038:	inc    DWORD PTR [eax]
  40603a:	in     al,0xff
  40603c:	xor    eax,DWORD PTR [eax]
  40603e:	stc    
  40603f:	mov    esp,0xff6aff00
  406044:	aas    
  406045:	add    BYTE PTR [esp+eiz*8],al
  406048:	(bad)  
  406049:	(bad)  
  40604a:	mov    eax,0x17cc2100
  40604f:	inc    ebp
  406050:	inc    DWORD PTR [ebx-0x653394]
  406056:	mov    ebp,0x2c00ffd3
  40605b:	inc    esi
  40605d:	int3   
  40605e:	and    BYTE PTR [eax],bl
  406060:	inc    DWORD PTR [eax]
  406062:	in     al,dx
  406063:	push   DWORD PTR [ebx-0x1]
  406066:	mov    ds:0x1dffff9c,al
  40606b:	jmp    DWORD PTR [ebp+0x0]
  40606e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40606f:	outs   dx,BYTE PTR ds:[esi]
  406070:	int3   
  406071:	call   FWORD PTR [ebx+0x26ccfb89]
  406077:	je     0x406078
  406079:	add    BYTE PTR [eax+eax*1],ch
  40607c:	aas    
  40607d:	mov    DWORD PTR [eax-0x9ff002e],ebp
  406083:	inc    ecx
  406085:	int3   
  406086:	mov    ebp,0xccccccd1
  40608b:	int3   
  40608c:	int3   
  40608d:	int3   
  40608e:	int3   
  40608f:	int3   
  406090:	(bad)  
  406091:	inc    DWORD PTR [eax]
  406093:	imul   esp,DWORD PTR [eax],0x60
  406096:	rol    DWORD PTR [eax],cl
  406098:	(bad)  
  406099:	(bad)  
  40609a:	(bad)  
  40609b:	inc    BYTE PTR [eax]
  40609d:	add    BYTE PTR [ecx-0x1a],dh
  4060a0:	(bad)  
  4060a1:	inc    DWORD PTR [ebx-0x4d6674be]
  4060a7:	xor    DWORD PTR [edi-0x33d10001],0x0
  4060ae:	mov    bh,0xc0
  4060b0:	dec    DWORD PTR [ecx-0x53e6da01]
  4060b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060b7:	and    DWORD PTR [eax+0x0],0xffffffff
  4060bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060bc:	add    bh,bh
  4060be:	mov    bl,0x95
  4060c0:	add    bh,bh
  4060c2:	add    BYTE PTR [ecx+esi*1+0x5b],cl
  4060c6:	sub    cl,ah
  4060c8:	test   al,0xff
  4060ca:	call   FWORD PTR [eax+eax*1+0x0]
  4060ce:	(bad)  
  4060cf:	fcos   
  4060d1:	add    bh,bh
  4060d3:	sbb    eax,0x84162
  4060d8:	mov    WORD PTR [ebx-0x767c7d7d],es
  4060de:	enter  0x30,0xff
  4060e2:	(bad)  
  4060e3:	jg     0x406148
  4060e5:	js     0x406143
  4060e7:	call   DWORD PTR [edx]
  4060e9:	cmp    edi,0xffffffd9
  4060ec:	(bad)  
  4060ed:	inc    DWORD PTR [esp+ebx*4-0x6f000001]
  4060f4:	mov    al,ds:0x22ff3891
  4060f9:	inc    DWORD PTR [ebx-0x800ff64]
  4060ff:	cmp    ecx,DWORD PTR [ecx-0x6c1eff01]
  406105:	inc    ecx
  406106:	add    eax,DWORD PTR [eax]
  406108:	mov    ecx,0x83c00089
  40610d:	jmp    FWORD PTR [eax-0x34]
  406110:	int3   
  406111:	add    bh,bh
  406113:	ret    0x677
  406116:	call   0x8a3ff51b
  40611b:	icebp  
  40611c:	add    bh,bh
  40611e:	gs cmp edi,0xffffff83
  406122:	add    BYTE PTR [ecx+ebx*1+0x2a],dl
  406126:	adc    eax,0xffff27ff
  40612b:	xchg   esi,eax
  40612c:	int3   
  40612d:	add    cl,al
  40612f:	inc    esi
  406130:	int3   
  406131:	add    bh,bh
  406133:	out    0x3f,eax
  406135:	mov    ah,0x6d
  406137:	add    BYTE PTR [eax-0xa50100],bl
  40613d:	(bad)  
  40613e:	mov    edi,0xffff4b
  406143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406144:	adc    DWORD PTR ds:0x830b897a,ebx
  40614a:	add    BYTE PTR [ebx],dl
  40614c:	mov    DWORD PTR [eax],eax
  40614e:	add    DWORD PTR [eax],ecx
  406150:	add    BYTE PTR [eax],al
  406152:	add    BYTE PTR [ebx-0x981cd8],bl
  406158:	lods   al,BYTE PTR ds:[esi]
  406159:	inc    DWORD PTR [eax]
  40615b:	daa    
  40615c:	inc    DWORD PTR [eax]
  40615e:	and    cl,bh
  406160:	dec    DWORD PTR [ecx+0x1c8cfd89]
  406166:	xchg   esp,eax
  406167:	add    BYTE PTR [esp+ecx*8+0x0],bl
  40616b:	cmp    eax,0x750fffff
  406170:	mov    DWORD PTR [eax],eax
  406172:	call   DWORD PTR [ecx-0x5d2599]
  406178:	inc    esi
  406179:	(bad)  
  40617a:	jmp    FWORD PTR [ebx-0x77]
  40617d:	call   FWORD PTR [ecx]
  40617f:	pop    edx
  406180:	inc    DWORD PTR [eax]
  406182:	push   DWORD PTR [esi-0xc4afcb]
  406188:	mov    al,BYTE PTR [eax]
  40618a:	inc    DWORD PTR [ebx+eax*4-0x3ae601]
  406191:	inc    DWORD PTR [eax]
  406193:	in     al,dx
  406194:	mov    bh,0x19
  406196:	call   DWORD PTR cs:0x24ffcc
  40619d:	call   DWORD PTR [edx-0x7b]
  4061a0:	add    DWORD PTR [eax],0xffffff89
  4061a3:	xor    eax,0xff3d6724
  4061a8:	mov    eax,0xff450083
  4061ad:	add    ah,cl
  4061af:	mov    esp,0xc289ffff
  4061b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b6:	rol    DWORD PTR [eax],cl
  4061b8:	test   BYTE PTR [eax],al
  4061ba:	add    BYTE PTR [esi],dl
  4061bc:	(bad)  
  4061bd:	(bad)  
  4061be:	std    
  4061bf:	xor    DWORD PTR [eax],eax
  4061c1:	add    bh,bh
  4061c3:	mov    dh,BYTE PTR [eax-0x3633dbbd]
  4061c9:	add    BYTE PTR [eax],al
  4061cb:	aas    
  4061cc:	int3   
  4061cd:	call   ebx
  4061cf:	arpl   WORD PTR [eax],ax
  4061d1:	inc    DWORD PTR [eax]
  4061d3:	std    
  4061d4:	mov    al,ds:0x7dff5831
  4061d9:	add    BYTE PTR [eax],al
  4061db:	xor    edi,edi
  4061dd:	adc    DWORD PTR [ecx+0x19],0xffffffff
  4061e1:	inc    DWORD PTR [eax]
  4061e3:	jl     0x40620b
  4061e5:	cdq    
  4061e6:	outs   dx,DWORD PTR ds:[esi]
  4061e7:	int3   
  4061e8:	daa    
  4061e9:	or     DWORD PTR [ecx+0x2ff8920],0x39
  4061f0:	add    bh,bh
  4061f2:	jmp    DWORD PTR [ecx+0x9]
  4061f5:	mov    dh,0x58
  4061f7:	add    ah,dh
  4061f9:	mov    DWORD PTR [eax],eax
  4061fb:	loope  0x4061fc
  4061fd:	sbb    DWORD PTR [ebp-0x2a],0x0
  406201:	(bad)  
  406202:	call   DWORD PTR [ecx]
  406204:	ret    0x46f7
  406207:	add    BYTE PTR [eax+eax*1+0x5589],cl
  40620e:	ins    BYTE PTR es:[edi],dx
  40620f:	mov    dl,0x0
  406211:	(bad)  
  406212:	jmp    DWORD PTR [edx+0x7f]
  406215:	pop    ss
  406216:	sbb    al,0x89
  406218:	fadd   QWORD PTR [eax]
  40621a:	mov    DWORD PTR [eax+eax*1-0x33d06500],eax
  406221:	inc    DWORD PTR [eax]
  406223:	int    0x8e
  406225:	push   ecx
  406226:	mov    dh,0xff
  406228:	(bad)  
  40622a:	call   DWORD PTR [ebx]
  40622c:	(bad)  
  40622d:	dec    DWORD PTR [esi+ebp*8+0x0]
  406231:	int3   
  406232:	inc    DWORD PTR [esi-0x7f]
  406235:	into   
  406236:	iret   
  406237:	add    BYTE PTR [edi-0x1],bl
  40623a:	inc    DWORD PTR [eax]
  40623c:	add    bh,bh
  40623e:	dec    ebp
  40623f:	stc    
  406240:	add    bh,bh
  406242:	int3   
  406243:	shr    DWORD PTR [ebx-0x22ffe3bb],cl
  406249:	add    BYTE PTR [ebx-0x3a000022],al
  40624f:	(bad)  
  406251:	(bad)  
  406252:	dec    DWORD PTR [edx+0x1]
  406255:	cdq    
  406256:	mov    al,BYTE PTR [ebx-0x61ff3400]
  40625c:	dec    esp
  40625e:	aas    
  40625f:	pushf  
  406260:	inc    DWORD PTR [ebx-0x554dae01]
  406266:	sbb    al,0xff
  406268:	mov    DWORD PTR [eax],0xff838e00
  40626e:	ss cdq 
  406270:	(bad)  
  406271:	inc    DWORD PTR [eax]
  406273:	ret    
  406274:	(bad)  [ecx-0x7cb70061]
  40627a:	push   ebp
  40627c:	int3   
  40627d:	and    edi,0xffffff89
  406280:	mov    edi,edi
  406282:	call   DWORD PTR [edi-0x62]
  406285:	fdivr  DWORD PTR [esp+ecx*8]
  406288:	dec    ebp
  406289:	(bad)  
  40628a:	jmp    DWORD PTR [edx-0x1]
  40628d:	add    BYTE PTR [edx-0x46],ch
  406290:	mov    edi,edi
  406292:	add    BYTE PTR [edi-0x76de52ce],cl
  406298:	cwde   
  406299:	add    bh,bh
  40629b:	jmp    0x139e639f
  4062a0:	add    BYTE PTR [eax],al
  4062a2:	call   ebx
  4062a4:	adc    dl,ah
  4062a6:	inc    esi
  4062a7:	add    BYTE PTR [edi+edi*8],ah
  4062aa:	push   DWORD PTR [ecx-0x1]
  4062ad:	(bad)  
  4062ae:	stc    
  4062af:	or     esp,ecx
  4062b1:	add    BYTE PTR [ebx+0x2c288ae2],al
  4062b7:	(bad)  
  4062b8:	cli    
  4062b9:	(bad)  
  4062ba:	call   FWORD PTR [edi-0x1]
  4062bd:	add    BYTE PTR [edx],ah
  4062bf:	cmp    al,BYTE PTR [eax]
  4062c1:	inc    DWORD PTR [eax]
  4062c3:	call   0xffb81bb3
  4062c8:	imul   ecx,esp,0xffffff83
  4062cb:	xor    eax,DWORD PTR [eax]
  4062cd:	add    BYTE PTR [eax],ah
  4062cf:	sar    bh,1
  4062d1:	int3   
  4062d2:	add    BYTE PTR [edx+0x40],cl
  4062d5:	sub    al,0xa1
  4062d7:	int3   
  4062d8:	dec    esp
  4062d9:	add    bh,bh
  4062db:	cmp    bh,0xff
  4062de:	shr    DWORD PTR [edx],0xff
  4062e1:	inc    DWORD PTR [ebx-0x631efed9]
  4062e7:	jmp    FWORD PTR [esp+ecx*8]
  4062ea:	call   DWORD PTR [edi]
  4062ec:	int3   
  4062ed:	add    bh,dh
  4062ef:	std    
  4062f0:	inc    DWORD PTR [eax]
  4062f2:	add    BYTE PTR [edx+0x59],dl
  4062f5:	xchg   esi,eax
  4062f6:	lods   al,BYTE PTR ds:[esi]
  4062f7:	inc    DWORD PTR [esi-0x7d]
  4062fa:	add    BYTE PTR [esi+0x0],al
  4062fd:	int3   
  4062fe:	pusha  
  4062ff:	sar    edi,cl
  406301:	add    bh,bh
  406303:	inc    edx
  406304:	mov    ds:0xaaff9176,eax
  406309:	add    DWORD PTR [eax],0x40
  40630c:	mov    edi,edi
  40630e:	mov    ebp,0xff0000a3
  406313:	jnp    0x40631e
  406315:	scas   al,BYTE PTR es:[edi]
  406316:	sub    edi,edi
  406318:	das    
  406319:	add    BYTE PTR [ebx+0x7b83ffcd],al
  40631f:	(bad)  
  406320:	dec    esp
  406322:	dec    DWORD PTR [ebp-0xfbde19]
  406328:	mov    bh,0x0
  40632a:	cmp    DWORD PTR [eax+0x0],0xffffffff
  40632e:	add    al,BYTE PTR [ecx-0x1]
  406331:	add    bh,bh
  406333:	je     0x4062e7
  406335:	imul   eax,DWORD PTR [edx],0xff7c89
  40633b:	(bad)  
  40633c:	dec    DWORD PTR [ecx-0x76009a36]
  406342:	push   DWORD PTR [eax]
  406344:	shr    BYTE PTR [edx+0x4f],cl
  406347:	int3   
  406348:	jb     0x406349
  40634a:	or     edi,0xffffffff
  40634d:	mov    DWORD PTR [ebp+0x29],edx
  406350:	int3   
  406351:	dec    esp
  406353:	fst    DWORD PTR [edi-0x5]
  406356:	pop    ds
  406357:	and    edx,0xffffffff
  40635a:	add    ch,ah
  40635c:	cmp    edi,0xffffffed
  40635f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406360:	mov    DWORD PTR [ecx+0x3e6475ff],ecx
  406366:	pop    edx
  406367:	call   DWORD PTR [eax-0x1]
  40636a:	jmp    esp
  40636c:	cmp    edi,0xffffffc1
  40636f:	jp     0x406371
  406371:	add    BYTE PTR [eax],al
  406373:	jg     0x4063b2
  406375:	scas   eax,DWORD PTR es:[edi]
  406376:	in     al,0xcc
  406378:	js     0x406379
  40637a:	add    dh,cl
  40637c:	mov    esp,ecx
  40637e:	in     al,0xc5
  406380:	add    bh,bh
  406382:	push   DWORD PTR [edi+0xb9c377]
  406388:	imul   ecx,DWORD PTR [ecx-0x7c1201],0xffffffa2
  40638f:	in     al,0x0
  406391:	add    DWORD PTR [ebx-0x75a754ef],0xffffffcc
  406398:	retf   0xff00
  40639b:	les    eax,FWORD PTR [eax]
  40639d:	and    DWORD PTR [eax],0xffffff83
  4063a0:	add    BYTE PTR [eax],al
  4063a2:	call   FWORD PTR [esi-0x76d116a6]
  4063a8:	or     DWORD PTR [ecx-0x2401],ecx
  4063ae:	mov    edi,?
  4063b0:	inc    DWORD PTR [eax]
  4063b2:	sub    DWORD PTR [edx-0xab0a59],0x18
  4063b9:	add    BYTE PTR [eax],al
  4063bb:	idiv   bh
  4063bd:	add    BYTE PTR [ebx],bl
  4063bf:	(bad)  
  4063c0:	(bad)  
  4063c1:	(bad)  
  4063c2:	inc    DWORD PTR [eax+0xe2bae2]
  4063c8:	cmp    edi,edi
  4063ca:	jmp    FWORD PTR [ecx+0x0]
  4063cd:	jmp    DWORD PTR [esi]
  4063cf:	and    al,BYTE PTR [ebx-0x6d690077]
  4063d5:	inc    ebp
  4063d6:	sbb    eax,0xffffdbff
  4063db:	xchg   edi,edi
  4063dd:	call   FWORD PTR [ebx+eax*1-0x7d]
  4063e1:	(bad)  
  4063e2:	call   FWORD PTR [edi-0x1]
  4063e5:	jmp    0x9300:0x893a00ca
  4063ec:	add    BYTE PTR [eax],al
  4063ee:	arpl   WORD PTR [edi+0x6cffffff],dx
  4063f4:	mov    BYTE PTR [edi],dl
  4063f6:	sub    cl,ah
  4063f8:	inc    esi
  4063f9:	add    bh,bh
  4063fb:	in     al,0x83
  4063fd:	dec    edx
  4063ff:	cmp    al,0xff
  406401:	add    BYTE PTR [eax],al
  406403:	adc    ch,BYTE PTR [ecx-0x15]
  406406:	or     al,BYTE PTR [eax]
  406408:	inc    edx
  406409:	inc    DWORD PTR [eax]
  40640b:	das    
  40640c:	cmp    edi,0x10
  40640f:	mov    edi,0x49ff83ff
  406414:	add    esi,eax
  406416:	fdiv   st(7),st
  406418:	pop    ebp
  406419:	inc    DWORD PTR [eax]
  40641b:	in     eax,dx
  40641c:	add    BYTE PTR [ecx-0x33002db5],cl
  406422:	adc    DWORD PTR [esi+0x11],0xffffff83
  406426:	cmp    edi,0x4dcc897a
  40642c:	(bad)  
  40642d:	(bad)  
  40642e:	jmp    0x89406505
  406433:	jmp    0xae:0xffe8d659
  40643a:	call   esp
  40643c:	int3   
  40643d:	int3   
  40643e:	loopne 0x40648c
  406440:	cmp    edi,0xffffffff
  406443:	adc    eax,0x8370fe88
  406448:	scas   al,BYTE PTR es:[edi]
  406449:	add    BYTE PTR [eax],al
  40644b:	aaa    
  40644c:	int3   
  40644d:	cmp    DWORD PTR [eax*1-0x3e00ff01],0xfffffff5
  406455:	pop    edx
  406456:	jbe    0x406457
  406458:	pop    ebx
  406459:	(bad)  
  40645a:	(bad)  
  40645b:	cmp    al,0xff
  40645d:	add    dl,cl
  40645f:	fimul  DWORD PTR [ecx+0x666bffcc]
  406465:	mov    esi,0x8ccc76
  40646a:	add    BYTE PTR [eax-0x7d],bl
  40646d:	int3   
  40646e:	cmp    al,0x3f
  406470:	add    bh,bh
  406472:	add    BYTE PTR [edi+0x16],al
  406475:	pop    edi
  406476:	js     0x406477
  406478:	test   al,0x83
  40647a:	push   DWORD PTR [edi-0x67aff34]
  406480:	add    BYTE PTR [eax],al
  406482:	push   DWORD PTR [ebp-0x8d5fd6]
  406488:	cmc    
  406489:	(bad)  
  40648a:	call   FWORD PTR [ebx]
  40648c:	add    BYTE PTR [eax],al
  40648e:	dec    edx
  40648f:	add    eax,DWORD PTR [eax]
  406491:	add    bh,bh
  406493:	or     DWORD PTR [esi],edi
  406495:	je     0x406513
  406497:	(bad)  
  406498:	cmp    eax,0x833383ff
  40649d:	(bad)  
  40649e:	cmp    DWORD PTR [eax+0x6c83cc00],edi
  4064a4:	push   0x2d
  4064a6:	(bad)  
  4064a7:	inc    DWORD PTR [edi+edi*8+0xe9cc]
  4064ae:	xlat   BYTE PTR ds:[ebx]
  4064af:	and    al,0x83
  4064b1:	cmp    edi,0xffffffac
  4064b4:	add    al,0x8e
  4064b6:	dec    edi
  4064b7:	(bad)  
  4064b8:	mov    edx,0x83a7ffff
  4064bd:	inc    DWORD PTR [esi]
  4064bf:	fxch   st(4)
  4064c1:	cmp    edi,0xffffff96
  4064c4:	cwde   
  4064c5:	stos   DWORD PTR es:[edi],eax
  4064c6:	mov    bh,bh
  4064c8:	jbe    0x406496
  4064ca:	push   ecx
  4064cc:	dec    DWORD PTR [ecx+0x3ac1]
  4064d2:	int3   
  4064d3:	dec    esi
  4064d4:	std    
  4064d5:	push   ebx
  4064d6:	in     al,dx
  4064d7:	(bad)  
  4064d8:	jmp    0xffe665dc
  4064dd:	add    BYTE PTR [eax],dl
  4064df:	fwait
  4064e0:	inc    DWORD PTR [eax]
  4064e2:	(bad)  
  4064e3:	fisubr DWORD PTR [ecx]
  4064e5:	lock aas 
  4064e7:	add    BYTE PTR [ebx],ch
  4064e9:	or     esp,0x35
  4064ec:	(bad)  
  4064ed:	dec    DWORD PTR [ebp+0xff00ec]
  4064f3:	or     DWORD PTR [ebp+eiz*2+0xaecce0],ebx
  4064fa:	(bad)  
  4064fb:	cld    
  4064fc:	(bad)  
  4064fd:	dec    DWORD PTR [ebx]
  4064ff:	add    BYTE PTR [ebx+0x17ceff00],0x6
  406506:	xor    edi,edi
  406508:	sbb    al,0xff
  40650a:	(bad)  
  40650b:	fld    DWORD PTR [eax]
  40650d:	sub    DWORD PTR [esi-0x2c],0xffffffff
  406511:	inc    DWORD PTR [ebx+0x2707bd16]
  406517:	mov    DWORD PTR [edi+0xa5ffff],esi
  40651d:	add    BYTE PTR [eax],bl
  40651f:	cdq    
  406520:	add    BYTE PTR [ebx+0x5704e889],al
  406526:	sbb    cl,ah
  406528:	addr16 cmp edi,0xffffffb9
  40652c:	add    DWORD PTR [eax],0xffffffd1
  40652f:	or     eax,0xa48300ff
  406534:	jecxz  0x40652c
  406536:	fadd   QWORD PTR [eax]
  406538:	fadd   DWORD PTR [eax]
  40653a:	inc    esp
  40653c:	mov    DWORD PTR [ebx-0x47fa],eax
  406542:	call   DWORD PTR [ebp-0xef03e9]
  406548:	sti    
  406549:	int3   
  40654a:	mov    DWORD PTR [edi+0x0],edx
  40654d:	(bad)  
  40654e:	mov    esi,0xccffffed
  406553:	js     0x406519
  406555:	jno    0x406568
  406557:	add    BYTE PTR [edi],cl
  406559:	inc    DWORD PTR [eax]
  40655b:	mov    ds:0x5c55cc83,eax
  406560:	cmp    edi,0x0
  406563:	(bad)  
  406565:	xchg   BYTE PTR [edi+0xff89ff],ah
  40656b:	cmp    al,0x0
  40656d:	(bad)  
  40656e:	mov    eax,0xffcc0045
  406573:	clc    
  406574:	(bad)  
  406575:	cmova  eax,DWORD PTR [eax]
  406578:	stos   BYTE PTR es:[edi],al
  406579:	mov    DWORD PTR [eax],eax
  40657b:	pop    esi
  40657c:	add    BYTE PTR [eax],al
  40657e:	loope  0x406522
  406580:	inc    DWORD PTR [ebx-0x13489e7d]
  406586:	ret    0xb00
  406589:	inc    DWORD PTR [eax]
  40658b:	repnz cmp edi,0xffffff96
  40658f:	test   edi,edi
  406591:	add    BYTE PTR [ecx+0x201d52ec],cl
  406597:	add    BYTE PTR [edi+edi*8+0x0],al
  40659b:	repnz int3 
  40659d:	dec    edx
  40659f:	pop    ecx
  4065a0:	add    BYTE PTR [eax],al
  4065a2:	dec    DWORD PTR [edx-0x32]
  4065a5:	leave  
  4065a6:	out    0x89,al
  4065a8:	je     0x4065aa
  4065aa:	push   DWORD PTR ds:0xab0500cc
  4065b0:	cmp    edi,0xffffff89
  4065b3:	ja     0x406634
  4065b5:	xor    eax,0xff4b8396
  4065ba:	(bad)  
  4065bb:	inc    BYTE PTR [eax]
  4065bd:	add    BYTE PTR [edi],dl
  4065bf:	outs   dx,DWORD PTR ds:[esi]
  4065c0:	add    bh,bh
  4065c2:	int3   
  4065c3:	and    bl,al
  4065c5:	push   edx
  4065c6:	add    eax,0xccff53ff
  4065cb:	(bad)  
  4065cd:	add    ah,bh
  4065cf:	mov    ecx,0xb000cc83
  4065d4:	xchg   DWORD PTR [edi+0x5800e4],ecx
  4065da:	add    BYTE PTR [ebx],ah
  4065dc:	mov    DWORD PTR [eax],eax
  4065de:	rcr    DWORD PTR [esi],cl
  4065e0:	inc    DWORD PTR [eax]
  4065e2:	xor    DWORD PTR [esi+0x3c95ce],0xffffffb1
  4065e9:	add    BYTE PTR [ecx+0x1c00ff2e],cl
  4065ef:	lods   eax,DWORD PTR ds:[esi]
  4065f0:	mov    edi,edi
  4065f2:	inc    DWORD PTR [esi+0x45]
  4065f5:	fmul   DWORD PTR [edx+0x0]
  4065f8:	add    BYTE PTR [eax],al
  4065fa:	jmp    FWORD PTR [esi]
  4065fc:	add    BYTE PTR [eax],al
  4065fe:	mov    ch,0x91
  406600:	int3   
  406601:	dec    esp
  406603:	inc    esi
  406604:	loope  0x40666c
  406606:	cdq    
  406607:	add    bh,dh
  406609:	(bad)  
  40660a:	push   DWORD PTR [edx-0x61500001]
  406610:	mov    edi,edi
  406612:	add    BYTE PTR ds:0x9d1a89,ah
  406618:	jae    0x40661a
  40661a:	add    BYTE PTR [ebx],ch
  40661c:	(bad)  
  40661d:	push   DWORD PTR [edi-0x72]
  406620:	(bad)  
  406621:	(bad)  
  406622:	call   ebx
  406624:	sbb    dl,BYTE PTR [esi+0x4d]
  406627:	jmp    FWORD PTR [ecx-0x1]
  40662a:	jmp    FWORD PTR [ecx]
  40662c:	add    BYTE PTR [ecx-0x7cffb2d5],cl
  406632:	cmp    DWORD PTR [ebx],0x2d
  406635:	pop    ebx
  406636:	and    DWORD PTR [ecx-0x2f007cb3],ecx
  40663c:	add    bh,bh
  40663e:	ror    DWORD PTR ds:0x57830000,1
  406644:	mov    BYTE PTR [edi],cl
  406646:	dec    esi
  406647:	mov    DWORD PTR [edx],esp
  406649:	int3   
  40664a:	jmp    FWORD PTR [ebp+0x25ce8383]
  406650:	inc    DWORD PTR [eax]
  406652:	(bad)  
  406653:	mov    esp,0xcc8ae200
  406658:	loop   0x406659
  40665a:	add    BYTE PTR [esi+0x70d3ff83],al
  406660:	(bad)  
  406661:	(bad)  
  406662:	dec    DWORD PTR [ebp+0x34]
  406665:	xchg   ebp,eax
  406666:	xlat   BYTE PTR ds:[ebx]
  406667:	inc    DWORD PTR [ebp-0x7d]
  40666a:	add    BYTE PTR [eax],dl
  40666c:	add    bh,bh
  40666e:	loop   0x406657
  406670:	mov    DWORD PTR [eax],eax
  406672:	sub    ecx,0x12
  406675:	and    DWORD PTR [edx-0x1334],esp
  40667b:	or     ah,0xff
  40667e:	sbb    DWORD PTR [eax-0x63ff0001],edx
  406684:	or     BYTE PTR [esi+0x1a],dl
  406687:	call   eax
  406689:	(bad)  
  40668a:	(bad)  
  40668b:	cmp    al,0xff
  40668d:	(bad)  
  40668e:	jg     0x406619
  406690:	add    BYTE PTR [eax],al
  406692:	add    BYTE PTR [edx-0x4c],ah
  406695:	lea    ecx,[edi-0x33cf01]
  40669b:	adc    eax,DWORD PTR [eax]
  40669d:	call   FWORD PTR [ecx+ecx*4-0x1]
  4066a1:	add    bh,bh
  4066a3:	push   esp
  4066a4:	jle    0x4066e9
  4066a6:	or     ecx,esp
  4066a8:	jecxz  0x4066aa
  4066aa:	call   FWORD PTR [edx-0x77]
  4066ad:	xor    DWORD PTR [edi+0x37],0xffffffff
  4066b1:	int3   
  4066b2:	int3   
  4066b3:	lods   al,BYTE PTR ds:[esi]
  4066b4:	les    esi,FWORD PTR ds:[esi-0xee7d]
  4066bb:	loop   0x4066bd
  4066bd:	(bad)  
  4066be:	mov    eax,0xffffcc82
  4066c3:	mov    edx,0x89d31701
  4066c8:	xchg   edx,eax
  4066c9:	int3   
  4066ca:	dec    esi
  4066cc:	add    BYTE PTR [ecx-0x7c334d72],cl
  4066d2:	jmp    DWORD PTR [edi+esi*4]
  4066d5:	inc    BYTE PTR [esi-0x337c6b01]
  4066db:	mov    dh,0x0
  4066dd:	add    al,al
  4066df:	pop    ebx
  4066e0:	add    ah,cl
  4066e2:	add    bh,bh
  4066e4:	sar    DWORD PTR [edx],0x2b
  4066e7:	add    BYTE PTR [esi-0x660001],bh
  4066ed:	(bad)  
  4066ee:	in     al,dx
  4066ef:	inc    BYTE PTR [eax]
  4066f1:	or     DWORD PTR [ecx+0x49defbd1],0xffffffff
  4066f8:	mov    eax,0x89b5ffff
  4066fd:	inc    DWORD PTR [eax-0x96]
  406703:	in     al,0x4e
  406705:	inc    eax
  406706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406707:	dec    DWORD PTR [ebp-0x7ce70001]
  40670d:	sbb    DWORD PTR ds:0xcc00ff54,0x2e
  406714:	cmp    dh,BYTE PTR [ebp+0xe]
  406717:	adc    ebp,0x0
  40671a:	mov    ebp,eax
  40671c:	inc    DWORD PTR [ebx+0xcc7cc5]
  406722:	add    BYTE PTR [ebx+edx*1-0x17],ch
  406726:	bswap  esp
  406728:	inc    edx
  406729:	int3   
  40672a:	or     DWORD PTR [edi],0xffffffff
  40672d:	xor    DWORD PTR [esi],0xffffff9d
  406730:	inc    DWORD PTR [ebx+0xd2ab500]
  406736:	clc    
  406737:	call   FWORD PTR [edi+0x0]
  40673a:	add    BYTE PTR [esi],al
  40673c:	inc    DWORD PTR [eax]
  40673e:	adc    DWORD PTR [ecx-0x1],edi
  406741:	or     DWORD PTR [ecx+0x2a74ff5c],0x0
  406748:	add    al,0x83
  40674a:	jmp    DWORD PTR [edi+0x6abecc00]
  406750:	add    bh,bh
  406752:	mov    DWORD PTR [edx],esi
  406754:	jno    0x40677a
  406756:	stos   BYTE PTR es:[edi],al
  406757:	jmp    ebx
  406759:	inc    DWORD PTR [ebx+0x43008374]
  40675f:	retf   0x89
  406762:	push   DWORD PTR [ebx-0x3]
  406765:	out    dx,al
  406766:	sub    DWORD PTR [ebx-0x2200000b],eax
  40676c:	add    BYTE PTR [ecx-0x7600aaec],cl
  406772:	jmp    FWORD PTR [esi-0x79c905]
  406778:	jmp    0x406746
  40677a:	add    BYTE PTR [eax+eax*1],bl
  40677d:	add    BYTE PTR [esi+0x19],bh
  406780:	dec    esp
  406782:	int3   
  406783:	pop    ebp
  406784:	dec    ebp
  406785:	ins    BYTE PTR es:[edi],dx
  406786:	adc    ecx,esp
  406788:	pop    esp
  406789:	add    BYTE PTR [eax],al
  40678b:	call   0x62ca6690
  406790:	cmp    edi,0xffffffff
  406793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406794:	rcr    DWORD PTR [esi],1
  406796:	leave  
  406797:	push   esi
  406799:	inc    DWORD PTR [eax]
  40679b:	cwde   
  40679c:	inc    DWORD PTR [eax]
  40679e:	ret    0xff09
  4067a1:	mov    DWORD PTR [ebx-0x644415ac],eax
  4067a7:	inc    DWORD PTR [ebx-0x1]
  4067aa:	dec    eax
  4067ac:	cmp    edi,0x4c
  4067af:	dec    ebp
  4067b0:	add    BYTE PTR [eax],al
  4067b2:	call   FWORD PTR [edi-0x7cd6188f]
  4067b8:	push   ecx
  4067b9:	inc    DWORD PTR [eax]
  4067bb:	jns    0x4067bc
  4067bd:	int3   
  4067be:	mov    WORD PTR [ebx],cs
  4067c0:	inc    DWORD PTR [ebx+0x17369089]
  4067c6:	test   bh,bh
  4067c8:	cmc    
  4067c9:	add    DWORD PTR [eax],0xffffffeb
  4067cc:	add    BYTE PTR [eax],al
  4067ce:	rcl    DWORD PTR [edi+edi*8-0x1],0xcc
  4067d3:	or     cl,ah
  4067d5:	cmp    eax,0x2fccd2
  4067da:	add    BYTE PTR [ebx+0x3722cc00],ah
  4067e0:	inc    DWORD PTR [ebx-0x506ee37d]
  4067e6:	mov    bl,0xff
  4067e8:	out    dx,eax
  4067e9:	dec    DWORD PTR [ecx+0x1e0000ea]
  4067ef:	int    0xff
  4067f1:	inc    DWORD PTR [ebx-0x463102a8]
  4067f7:	adc    DWORD PTR [eax+0x6fffff],0xffffffff
  4067fe:	add    dh,BYTE PTR ds:0x5900ff00
  406804:	lock fst DWORD PTR [eax]
  406807:	add    BYTE PTR [ebx+0x0],ah
  40680a:	(bad)  
  40680b:	clc    
  40680c:	(bad)  
  40680d:	jmp    FWORD PTR [esi+0xfff3]
  406813:	adc    ebp,edi
  406815:	fistp  DWORD PTR [ebx-0x3300f334]
  40681b:	sbb    eax,DWORD PTR [eax]
  40681d:	call   eax
  40681f:	cmp    DWORD PTR [eax],eax
  406821:	add    BYTE PTR [eax],al
  406823:	popf   
  406824:	mov    bh,0xf3
  406826:	jno    0x406827
  406828:	fdivr  st,st(7)
  40682a:	add    BYTE PTR [edi],ah
  40682c:	int3   
  40682d:	jmp    DWORD PTR [esi-0x4d]
  406833:	push   ds
  406834:	cli    
  406835:	(bad)  [edi]
  406837:	add    BYTE PTR [ecx+0x62ffff],ch
  40683d:	jmp    DWORD PTR [ebx]
  40683f:	mov    edx,0x64ff8383
  406844:	and    BYTE PTR [ecx],dl
  406846:	and    DWORD PTR [ecx+0x74000010],ecx
  40684c:	add    DWORD PTR [eax],0x42
  40684f:	mov    ds:0x5c00ccff,al
  406854:	cmp    al,0x58
  406856:	test   BYTE PTR [eax],0xa
  406859:	add    bh,bh
  40685b:	cmp    bh,0xff
  40685e:	dec    esp
  40685f:	in     eax,dx
  406860:	add    BYTE PTR [ecx+0x6e6e5283],cl
  406866:	dec    ecx
  406867:	add    BYTE PTR [ebp-0x9b0001],dl
  40686d:	call   esi
  40686f:	inc    ecx
  406870:	add    bh,bh
  406872:	add    DWORD PTR [edi+0x6e],0x4f
  406876:	add    eax,0x836c89
  40687b:	jmp    0x700d687f
  406880:	add    BYTE PTR [eax],al
  406882:	sbb    DWORD PTR [esi+0xce438e],0x47
  406889:	dec    DWORD PTR [ecx+0x3fff0043]
  40688f:	call   0xe60d6893
  406894:	push   es
  406895:	inc    ebp
  406896:	or     edi,edi
  406898:	push   esi
  406899:	add    DWORD PTR [eax],0x0
  40689c:	(bad)  
  40689d:	dec    DWORD PTR [edx-0x63]
  4068a0:	add    BYTE PTR [ebx+0x27d2b500],al
  4068a6:	stos   BYTE PTR es:[edi],al
  4068a7:	call   DWORD PTR [edi]
  4068a9:	inc    DWORD PTR [eax]
  4068ab:	jp     0x4068ac
  4068ad:	add    BYTE PTR [edx+0x4e],bh
  4068b0:	(bad)  
  4068b1:	(bad)  
  4068b2:	call   ebp
  4068b4:	push   edx
  4068b5:	test   al,dh
  4068b7:	add    BYTE PTR [ecx+0x700ff],dl
  4068bd:	inc    esi
  4068bf:	cmp    BYTE PTR [eax],al
  4068c1:	mov    DWORD PTR [eax],eax
  4068c3:	pop    ebp
  4068c4:	push   esp
  4068c5:	or     DWORD PTR [ecx-0xff8001],ebx
  4068cb:	jae    0x4068cd
  4068cd:	add    al,ah
  4068cf:	jae    0x833235d4
  4068d5:	jmp    0x83826982
  4068da:	adc    DWORD PTR [eax+0x0],0x0
  4068de:	aam    0x7c
  4068e0:	add    bh,bh
  4068e2:	(bad)  
  4068e3:	out    dx,eax
  4068e4:	pop    ebp
  4068e5:	mov    bh,0x6f
  4068e7:	add    BYTE PTR ds:0xc400ff,bh
  4068ed:	push   DWORD PTR [ebp+eax*2-0x6a00ff01]
  4068f4:	xchg   edi,eax
  4068f5:	into   
  4068f6:	or     edi,edi
  4068f8:	es add ah,cl
  4068fb:	sar    edi,1
  4068fd:	xor    DWORD PTR [esi+0x70],0xffffffcc
  406901:	(bad)  
  406902:	jmp    ebp
  406904:	push   eax
  406905:	xchg   BYTE PTR [edx-0x33002100],al
  40690b:	adc    al,0xff
  40690d:	add    BYTE PTR [ebp-0xb0],ch
  406913:	mov    esp,0xff7aec01
  406918:	fwait
  406919:	inc    DWORD PTR [eax]
  40691b:	mov    eax,ds:0xbcaaffcc
  406920:	mov    esp,ecx
  406922:	jmp    FWORD PTR [esi]
  406924:	mov    ah,0xd2
  406926:	add    eax,DWORD PTR [eax]
  406928:	dec    ebp
  406929:	add    BYTE PTR [ecx-0x4bff00e5],cl
  40692f:	jo     0x406930
  406931:	int3   
  406932:	mov    DWORD PTR [eax],edx
  406934:	jmp    0x1a4006a7
  406939:	dec    DWORD PTR [ecx-0x1d00ffb3]
  40693f:	mov    esi,0x378900ff
  406944:	and    al,0x67
  406946:	xchg   edi,eax
  406947:	add    dh,bh
  406949:	add    DWORD PTR [eax],0x24
  40694c:	(bad)  
  40694d:	inc    eax
  40694f:	xchg   ebp,eax
  406950:	dec    esp
  406952:	add    BYTE PTR ds:0x87fd83,bh
  406958:	test   al,0xff
  40695a:	jmp    FWORD PTR ds:0xadd3ffff
  406960:	(bad)  
  406961:	(bad)  
  406962:	call   FWORD PTR [edx-0x36]
  406965:	popa   
  406966:	ins    DWORD PTR es:[edi],dx
  406967:	call   FWORD PTR [esi]
  406969:	cmp    edi,0xfffffff9
  40696c:	(bad)  
  40696d:	inc    esi
  40696f:	in     eax,dx
  406970:	(bad)  
  406971:	(bad)  
  406972:	dec    DWORD PTR [ecx]
  406974:	xchg   edx,eax
  406975:	sub    ebp,ecx
  406977:	and    esi,0xffffffff
  40697a:	call   DWORD PTR [eax+eax*1]
  40697d:	adc    ebp,0xffffff80
  406980:	dec    DWORD PTR [ecx+0x3c505cff]
  406986:	pop    esp
  406987:	dec    DWORD PTR ds:0xb18900
  40698d:	push   DWORD PTR [edx-0x3e]
  406990:	mov    edi,edi
  406992:	int3   
  406993:	mov    DWORD PTR [esi-0x7d],ecx
  406996:	(bad)  
  406997:	call   ebp
  406999:	add    DWORD PTR [ebx+0x18ff00ba],0xffffffee
  4069a0:	add    BYTE PTR [eax],al
  4069a2:	add    ch,bh
  4069a4:	inc    BYTE PTR [ecx]
  4069a6:	mov    edx,0xccff9bff
  4069ab:	push   edx
  4069ac:	(bad)  
  4069ad:	call   esp
  4069af:	cmp    ecx,esp
  4069b1:	(bad)  
  4069b2:	dec    DWORD PTR [esi+0x29]
  4069b5:	sti    
  4069b6:	cmp    edi,0xa600cc4a
  4069bc:	add    BYTE PTR [ebx-0x7c53ba],al
  4069c2:	cmp    DWORD PTR [esi],0x2d
  4069c5:	jmp    0xcc78ece6
  4069ca:	and    edx,0xffffffff
  4069cd:	call   ebp
  4069cf:	dec    edi
  4069d0:	add    bh,bh
  4069d2:	cmp    DWORD PTR [esi-0x7e],0xffffffd3
  4069d6:	jne    0x4069d7
  4069d8:	lahf   
  4069d9:	dec    DWORD PTR [ecx+0x5483ffc4]
  4069df:	rol    BYTE PTR [eax],1
  4069e1:	inc    DWORD PTR [eax]
  4069e3:	jo     0x406a5b
  4069e5:	push   eax
  4069e6:	jle    0x40696b
  4069e8:	lahf   
  4069e9:	(bad)  
  4069ea:	push   DWORD PTR [edx+0x0]
  4069ed:	int3   
  4069ee:	outs   dx,BYTE PTR ds:[esi]
  4069ef:	popf   
  4069f0:	inc    DWORD PTR [eax]
  4069f2:	jmp    edx
  4069f4:	int3   
  4069f5:	scas   eax,DWORD PTR es:[edi]
  4069f6:	ins    BYTE PTR es:[edi],dx
  4069f7:	add    BYTE PTR [edx-0x1],ch
  4069fa:	add    BYTE PTR [eax-0x6b880000],bh
  406a00:	dec    DWORD PTR [ecx+0x2a079289]
  406a06:	leave  
  406a07:	add    cl,cl
  406a09:	add    DWORD PTR [eax],0xd
  406a0c:	dec    DWORD PTR [ecx-0x7c9fcc]
  406a12:	mov    ecx,ecx
  406a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a15:	stc    
  406a16:	enter  0x1acc,0x0
  406a1a:	int3   
  406a1b:	call   0x6eec6aec
  406a20:	int3   
  406a21:	(bad)  
  406a22:	inc    DWORD PTR [esi+eiz*2-0x77007f9d]
  406a29:	add    DWORD PTR [ebx-0x510000d7],0x25
  406a30:	add    ah,cl
  406a32:	add    BYTE PTR [edi-0x5861ed],bh
  406a38:	test   bh,bh
  406a3a:	add    BYTE PTR [ecx],dh
  406a3c:	dec    DWORD PTR [ecx-0xff5e79]
  406a42:	call   DWORD PTR [esp+eiz*4+0x30]
  406a46:	popa   
  406a47:	cmp    DWORD PTR [eax],0x0
  406a4a:	jmp    DWORD PTR ds:0xf09fcc00
  406a50:	add    DWORD PTR [eax],0xffffff83
  406a53:	out    0x76,eax
  406a55:	ds js  0x406a57
  406a58:	sbb    edi,edi
  406a5a:	call   FWORD PTR [edx-0x70ea0077]
  406a60:	add    bh,bh
  406a62:	(bad)  
  406a63:	mov    eax,0x2b20a3
  406a68:	or     DWORD PTR [eax],eax
  406a6a:	add    BYTE PTR [edi+edi*8-0xdab901],bl
  406a71:	add    BYTE PTR [ecx+0x6eaf71ce],cl
  406a77:	call   FWORD PTR [edi]
  406a79:	add    ah,cl
  406a7b:	push   cs
  406a7c:	int3   
  406a7d:	int3   
  406a7e:	outs   dx,DWORD PTR ds:[esi]
  406a7f:	sub    bh,bh
  406a81:	inc    DWORD PTR [eax]
  406a83:	lds    esi,FWORD PTR [ebx-0x48002b6d]
  406a89:	add    DWORD PTR [eax],0x79
  406a8c:	inc    DWORD PTR [ebx-0x3333f648]
  406a92:	mov    DWORD PTR [ebp+0x2],edi
  406a95:	aas    
  406a96:	(bad)
  406a99:	(bad)  
  406a9a:	jmp    DWORD PTR [ecx+0x4af5ff00]
  406aa0:	inc    DWORD PTR [ebx+0x4b375c00]
  406aa6:	mov    ?,edi
  406aa8:	in     al,dx
  406aa9:	inc    DWORD PTR [ebx+0x71ff00d0]
  406aaf:	pop    esp
  406ab0:	add    bh,bh
  406ab2:	mov    esi,esi
  406ab4:	or     eax,0xe4ff4876
  406ab9:	dec    DWORD PTR [ecx+0x5d00830d]
  406abf:	mov    esp,0xc900ff00
  406ac4:	push   ecx
  406ac5:	test   DWORD PTR [edi-0x1],ebx
  406ac8:	dec    ecx
  406ac9:	add    BYTE PTR [eax],al
  406acb:	mov    dl,0xcc
  406acd:	xor    DWORD PTR [esi+edx*1],0xffffffff
  406ad1:	add    bh,bh
  406ad3:	and    eax,0xb15aa2
  406ad8:	in     eax,dx
  406ad9:	inc    DWORD PTR [eax]
  406adb:	add    bh,bh
  406add:	int3   
  406ade:	adc    al,0xc6
  406ae0:	int3   
  406ae1:	inc    DWORD PTR [eax]
  406ae3:	aaa    
  406ae4:	sbb    esi,DWORD PTR [esi-0x2b]
  406ae7:	mov    DWORD PTR [esi-0x1],edx
  406aea:	inc    DWORD PTR [edi-0x77]
  406aed:	add    BYTE PTR [ecx+ebx*1-0x527c7d00],al
  406af4:	addr16 cmp ecx,ebx
  406af7:	add    ah,bh
  406af9:	int3   
  406afa:	add    BYTE PTR [edx+0x582b0000],cl
  406b00:	(bad)  
  406b01:	inc    DWORD PTR [eax]
  406b03:	test   DWORD PTR [edx+0x7009fcc],0xff5f83ff
  406b0d:	mov    DWORD PTR [ecx],edx
  406b0f:	mov    edi,edi
  406b11:	(bad)  
  406b12:	jmp    FWORD PTR [edi-0x5297ab]
  406b18:	sar    bh,0x0
  406b1b:	mov    ah,0x83
  406b1d:	add    BYTE PTR [ebp+0x2a],ah
  406b20:	inc    DWORD PTR [eax]
  406b22:	jmp    edx
  406b24:	sbb    bh,BYTE PTR [ebp-0x6f]
  406b27:	inc    DWORD PTR [ebp-0xc1007d]
  406b2d:	(bad)  
  406b2e:	cmp    al,0xff
  406b30:	add    ah,cl
  406b32:	add    BYTE PTR [edi+ecx*1-0x53],al
  406b36:	cmc    
  406b37:	adc    eax,0x0
  406b3a:	add    BYTE PTR [edx-0x7d],bl
  406b3d:	add    BYTE PTR [edx],cl
  406b3f:	push   ecx
  406b40:	add    BYTE PTR [eax],al
  406b42:	mov    DWORD PTR [eax+0xadba9f],esi
  406b48:	(bad)  
  406b4a:	dec    ecx
  406b4c:	inc    DWORD PTR [eax]
  406b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b4f:	in     al,0xff
  406b51:	add    DWORD PTR [eax],0x5d
  406b54:	cmp    DWORD PTR [esi],ecx
  406b56:	sub    edi,edi
  406b58:	add    BYTE PTR ss:[eax],al
  406b5b:	(bad)  
  406b5c:	or     esp,0xffffff94
  406b5f:	xor    al,0x0
  406b61:	add    BYTE PTR [ecx-0xe65e635],cl
  406b67:	add    BYTE PTR [esi-0x1],bl
  406b6a:	cmp    DWORD PTR [edi+0x11c100cc],0xffffffff
  406b71:	int3   
  406b72:	adc    DWORD PTR [ecx+0xc445ea],0xffffffc6
  406b79:	add    ah,cl
  406b7b:	out    dx,eax
  406b7c:	add    bh,bh
  406b7e:	cmp    BYTE PTR [ecx],al
  406b80:	add    BYTE PTR [eax],al
  406b82:	int3   
  406b83:	xchg   edx,eax
  406b84:	mov    esi,0x9f837527
  406b89:	(bad)  
  406b8a:	jmp    FWORD PTR [eax-0x1]
  406b8d:	int3   
  406b8e:	mov    ds:0x83894d,al
  406b93:	repz mov bl,0x2
  406b96:	test   edi,edi
  406b98:	outs   dx,BYTE PTR ds:[esi]
  406b99:	(bad)  
  406b9a:	inc    DWORD PTR [esi]
  406b9c:	cmp    edi,0x5c
  406b9f:	int3   
  406ba0:	inc    DWORD PTR [eax]
  406ba2:	add    BYTE PTR [ecx-0x34],ch
  406ba5:	jmp    0x2eff:0xff6aff47
  406bac:	(bad)  
  406bad:	(bad)  
  406bae:	mov    ebp,0xff00ff75
  406bb3:	(bad)  
  406bb5:	sub    ebp,esp
  406bb7:	mov    DWORD PTR [edi-0x710000],ebp
  406bbd:	xor    DWORD PTR [eax-0x3355],0x7a
  406bc4:	fs enter 0xff41,0xdf
  406bc9:	inc    DWORD PTR [eax]
  406bcb:	repz add BYTE PTR [eax],al
  406bce:	jmp    0xfdd4:0xffffcce1
  406bd5:	or     al,0xf8
  406bd7:	mov    ebx,esp
  406bd9:	(bad)  
  406bda:	jmp    DWORD PTR [edi-0x3f470100]
  406be0:	add    bh,bh
  406be2:	call   FWORD PTR [ebx]
  406be4:	jg     0x406c38
  406be6:	fcmove st,st(4)
  406be8:	xchg   esi,eax
  406be9:	add    BYTE PTR [eax],al
  406beb:	sbb    al,0xff
  406bed:	add    BYTE PTR [ebx-0x7c5b],dl
  406bf3:	ss adc edx,ecx
  406bf6:	(bad)  
  406bf7:	mov    DWORD PTR [ebx],edi
  406bf9:	(bad)  
  406bfa:	call   DWORD PTR [esi-0x1]
  406bfd:	dec    DWORD PTR [esi]
  406bff:	sbb    edi,edi
  406c01:	dec    DWORD PTR [ecx-0x14e107c5]
  406c07:	cmp    DWORD PTR [esi],0x0
  406c0a:	dec    DWORD PTR [edi+edi*8]
  406c0d:	add    BYTE PTR [edi],dh
  406c0f:	mov    bl,0x0
  406c11:	(bad)  
  406c12:	dec    esi
  406c14:	call   0xc540b171
  406c19:	(bad)  
  406c1a:	(bad)  
  406c1b:	cmp    edi,edi
  406c1d:	add    BYTE PTR [ebx+0xcce4],al
  406c23:	push   edi
  406c24:	pop    edi
  406c25:	mov    al,ds:0xff9aff7d
  406c2a:	int3   
  406c2b:	sub    bh,bh
  406c2d:	add    BYTE PTR [ecx-0xff0e],bh
  406c33:	int3   
  406c34:	shl    DWORD PTR ds:0xf900eb,0x83
  406c3b:	pop    edi
  406c3c:	add    BYTE PTR [ecx+0x4f9b],cl
  406c42:	add    BYTE PTR [ebp-0xd873e3],ch
  406c48:	ror    DWORD PTR [ecx-0xb601],cl
  406c4e:	fwait
  406c4f:	cmp    eax,0x8389ff
  406c54:	stos   DWORD PTR es:[edi],eax
  406c55:	jecxz  0x406bea
  406c57:	jmp    DWORD PTR [esi]
  406c59:	cmp    edi,0xffffffdd
  406c5c:	(bad)  
  406c5d:	(bad)  
  406c5e:	mov    esi,0xff2f
  406c63:	xchg   ebp,eax
  406c64:	mov    esi,0x44ff412d
  406c69:	or     DWORD PTR [ecx-0x397cff6f],0xffffffbb
  406c70:	int3   
  406c71:	add    DWORD PTR [eax],0xffffffc3
  406c74:	fadd   DWORD PTR ds:0x891383a8
  406c7a:	(bad)  
  406c7b:	sti    
  406c7c:	(bad)  
  406c7d:	dec    DWORD PTR [ecx+0x83ffcd]
  406c83:	jge    0x406c7b
  406c85:	mov    edi,0xff45ff7a
  406c8a:	add    BYTE PTR [esi],dh
  406c8c:	cmp    edi,0xfffffff5
  406c8f:	or     eax,0x483ffff
  406c94:	xor    BYTE PTR [edx],bh
  406c96:	push   ebx
  406c97:	add    BYTE PTR [ebp-0x987c01],dh
  406c9d:	int3   
  406c9e:	xchg   edx,eax
  406c9f:	xor    al,BYTE PTR [eax]
  406ca1:	add    bh,bh
  406ca3:	cs mov ebx,?
  406ca6:	lahf   
  406ca7:	add    BYTE PTR [esi],ah
  406ca9:	add    BYTE PTR [eax],al
  406cab:	pop    edi
  406cac:	int3   
  406cad:	cmp    edi,0x66
  406cb0:	mov    DWORD PTR [ebx+0x6aeb2aff],eax
  406cb6:	ss add ch,bh
  406cb9:	dec    esp
  406cbb:	jne    0x406cbd
  406cbd:	jmp    FWORD PTR [edx]
  406cbf:	mov    esi,0x3fffff89
  406cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cc5:	adc    eax,0x83f7009e
  406cca:	or     DWORD PTR [edx],0xffffffff
  406ccd:	add    BYTE PTR [edx+0x83ffb5],dh
  406cd3:	push   0x66
  406cd5:	add    DWORD PTR [ebp+0x0],0x2a8300f9
  406cdc:	add    bh,bh
  406cde:	js     0x406c87
  406ce0:	mov    DWORD PTR [ecx+0x11ecd683],ecx
  406ce6:	fild   DWORD PTR [ebx-0x15000066]
  406cec:	(bad)  
  406ced:	(bad)  
  406cee:	fistp  DWORD PTR [edx+0x10ccff83]
  406cf4:	xor    BYTE PTR [ebx],0x1f
  406cf7:	add    BYTE PTR [ecx],bl
  406cf9:	(bad)  
  406cfa:	call   DWORD PTR [ecx-0x7d]
  406cfd:	int3   
  406cfe:	xchg   ecx,eax
  406cff:	outs   dx,DWORD PTR ds:[esi]
  406d00:	inc    DWORD PTR [ebx+0x1246c800]
  406d06:	push   ss
  406d07:	call   DWORD PTR [ecx-0x1]
  406d0a:	jmp    DWORD PTR [ecx]
  406d0c:	inc    DWORD PTR [eax]
  406d0e:	das    
  406d0f:	jg     0x406d11
  406d11:	mov    edi,edi
  406d13:	adc    DWORD PTR [ebp-0x57004f01],ebx
  406d19:	cmp    edi,0xffffffcd
  406d1c:	add    bh,bh
  406d1e:	cwde   
  406d1f:	pushf  
  406d20:	(bad)  
  406d21:	(bad)  
  406d22:	dec    edi
  406d24:	lds    esp,FWORD PTR [ecx+edi*1-0x76da77]
  406d2b:	hlt    
  406d2c:	mov    edi,edi
  406d2e:	aas    
  406d2f:	xor    eax,DWORD PTR [ebx-0x7b120000]
  406d35:	sub    dl,BYTE PTR [edx-0x2301]
  406d3b:	adc    ah,cl
  406d3d:	inc    DWORD PTR [ebx+eiz*2-0x4a00ff01]
  406d44:	xlat   BYTE PTR ds:[ebx]
  406d45:	popf   
  406d46:	sti    
  406d47:	dec    DWORD PTR [ebp+0x0]
  406d4a:	add    BYTE PTR [ebx+0x71600083],al
  406d50:	add    bh,bh
  406d52:	add    BYTE PTR [ecx],dl
  406d54:	je     0x406d20
  406d56:	stos   BYTE PTR es:[edi],al
  406d57:	add    BYTE PTR [ecx-0x34007d],cl
  406d5d:	add    BYTE PTR [ecx+0x42],bl
  406d60:	int3   
  406d61:	add    BYTE PTR [eax],al
  406d63:	clc    
  406d64:	jg     0x406d78
  406d66:	push   esi
  406d67:	add    BYTE PTR [edi-0x77],ah
  406d6a:	add    BYTE PTR [ecx-0x1],ch
  406d6d:	add    BYTE PTR [edi],ah
  406d6f:	mov    ch,0x0
  406d71:	(bad)  
  406d72:	push   ebp
  406d74:	dec    esi
  406d75:	add    eax,0xffa483f9
  406d7a:	(bad)  
  406d7b:	jl     0x406d7c
  406d7d:	adc    esi,0x58
  406d80:	add    bh,bh
  406d82:	mov    DWORD PTR [esi+edx*4-0x7000246b],ebx
  406d89:	dec    DWORD PTR [ecx-0x687c7c65]
  406d8f:	sbb    eax,0xd4ff89ff
  406d94:	xor    DWORD PTR [edi+0x7f],ecx
  406d97:	add    BYTE PTR [edx],dh
  406d99:	dec    esp
  406d9b:	mov    bl,0xff
  406d9d:	add    BYTE PTR [esi-0xff00d4],cl
  406da3:	sub    ebx,DWORD PTR [eax]
  406da5:	ja     0x406d89
  406da7:	int3   
  406da8:	mov    al,ds:0xffc700ff
  406dad:	call   DWORD PTR [esi]
  406daf:	xchg   esp,eax
  406db0:	(bad)  
  406db1:	inc    DWORD PTR [eax]
  406db3:	cs sub al,0x47
  406db6:	mov    WORD PTR [eax],es
  406db8:	or     bh,bh
  406dba:	push   esp
  406dbc:	(bad)  
  406dbd:	inc    DWORD PTR [ecx-0x75]
  406dc0:	inc    DWORD PTR [eax]
  406dc2:	add    BYTE PTR [ecx+ebp*8+0x41],bh
  406dc6:	out    0x83,al
  406dc8:	or     ah,0xff
  406dcb:	int    0x0
  406dcd:	add    DWORD PTR [edx+0x4c],0xffffffff
  406dd1:	inc    DWORD PTR [eax]
  406dd3:	lods   eax,DWORD PTR ds:[esi]
  406dd4:	jge    0x406d94
  406dd6:	sbb    eax,0x830047cc
  406ddb:	mov    eax,0x96ddffff
  406de0:	add    bh,bh
  406de2:	call   FWORD PTR [eax]
  406de4:	frstor [ecx-0x7c8c00fb]
  406dea:	(bad)  
  406deb:	cld    
  406dec:	dec    DWORD PTR [ecx-0x2ca6]
  406df2:	push   DWORD PTR [ecx+0x77]
  406df5:	loopne 0x406df3
  406df7:	add    ah,dh
  406df9:	(bad)  
  406dfa:	push   DWORD PTR [edx-0x1]
  406dfd:	jmp    FWORD PTR [edi+0x48]
  406e03:	push   ss
  406e04:	inc    ecx
  406e05:	into   
  406e06:	call   0xff40c50a
  406e0b:	push   ecx
  406e0c:	cmp    edi,0xffffffcb
  406e0f:	jne    0x406ddd
  406e11:	(bad)  
  406e12:	push   DWORD PTR [edi]
  406e14:	cwde   
  406e15:	jle    0x406e59
  406e17:	add    BYTE PTR [edx],ah
  406e19:	add    DWORD PTR [ebx-0x46003315],0xffffffcf
  406e20:	add    ah,cl
  406e22:	add    BYTE PTR [edi],ah
  406e24:	mov    ebx,0x76835b29
  406e29:	inc    DWORD PTR [eax]
  406e2b:	cmp    DWORD PTR [ecx+0x55e5cc],ecx
  406e31:	(bad)  
  406e32:	(bad)  
  406e33:	call   0xffacb924
  406e38:	inc    ebx
  406e39:	add    BYTE PTR [eax],al
  406e3b:	pop    esi
  406e3c:	mov    edi,edi
  406e3e:	jbe    0x406dc3
  406e40:	add    bh,bh
  406e42:	dec    DWORD PTR [esi+0x34]
  406e45:	fstp   TBYTE PTR [edx-0x1]
  406e48:	lock int3 
  406e4a:	add    BYTE PTR [ebx-0x142e3301],cl
  406e50:	inc    DWORD PTR [eax]
  406e52:	int3   
  406e53:	sub    BYTE PTR [esi+0x42],0x96
  406e57:	add    ch,dh
  406e59:	int3   
  406e5a:	or     DWORD PTR [esi+0x7c25cccc],0xffffffff
  406e61:	add    bh,bh
  406e63:	mov    dh,0xff
  406e65:	mov    dh,0x93
  406e67:	jmp    DWORD PTR [edi+edi*8]
  406e6a:	jmp    DWORD PTR [esp+ecx*8-0x1]
  406e6e:	xlat   BYTE PTR ds:[ebx]
  406e6f:	or     al,0xff
  406e71:	inc    DWORD PTR [eax]
  406e73:	push   0xffffffa2
  406e75:	mov    ch,0x5d
  406e77:	and    ecx,0x0
  406e7a:	add    BYTE PTR [eax],al
  406e7c:	(bad)  
  406e7d:	inc    DWORD PTR [edi+eiz*1-0x1]
  406e81:	(bad)  
  406e82:	jmp    FWORD PTR [edx]
  406e84:	push   ebp
  406e85:	cmp    ah,BYTE PTR [ebx+0x834800]
  406e8b:	push   ss
  406e8c:	add    DWORD PTR [eax],0xb
  406e8f:	sbb    eax,0x5483ffcc
  406e94:	adc    DWORD PTR [eax],esp
  406e96:	aad    0xff
  406e98:	cmp    eax,DWORD PTR [eax]
  406e9a:	call   FWORD PTR [ecx-0x1]
  406e9d:	add    BYTE PTR [eax],ch
  406e9f:	sar    bh,1
  406ea1:	dec    esp
  406ea3:	pop    eax
  406ea4:	adc    DWORD PTR [edi+0x4c],ecx
  406ea7:	int3   
  406ea8:	push   ds
  406ea9:	cmp    edi,0x28
  406eac:	(bad)  
  406ead:	call   FWORD PTR [edx-0x2a]
  406eb3:	jae    0x406e9a
  406eb5:	imul   esp,DWORD PTR [edi-0x33332101],0x3c83ffdb
  406ebf:	cld    
  406ec0:	or     esp,0xffffffff
  406ec3:	mov    edi,0xda73e0
  406ec8:	popf   
  406ec9:	inc    DWORD PTR [eax]
  406ecb:	pop    ds
  406ecc:	dec    esp
  406ece:	enter  0xccf6,0xff
  406ed2:	inc    DWORD PTR [edi]
  406ed4:	int3   
  406ed5:	pop    ecx
  406ed6:	add    edi,edi
  406ed8:	sub    al,0xff
  406eda:	add    bh,cl
  406edc:	int3   
  406edd:	xor    DWORD PTR [ebx-0x71],0xffffff89
  406ee1:	add    BYTE PTR [ebx+0x6610689b],al
  406ee7:	add    BYTE PTR [ebp+0x238300],dh
  406eed:	add    BYTE PTR [eax+0x5a],bh
  406ef0:	dec    esp
  406ef2:	mov    ecx,edx
  406ef4:	pop    ecx
  406ef5:	cs jge 0x406e7b
  406ef8:	sub    al,0xff
  406efa:	(bad)  
  406efb:	mov    edi,0xfebf0083
  406f00:	add    bh,bh
  406f02:	(bad)  
  406f03:	fisttp WORD PTR [eax-0xf]
  406f06:	sub    edi,edi
  406f08:	rol    DWORD PTR [eax],0x0
  406f0b:	inc    esp
  406f0c:	(bad)  
  406f0d:	call   FWORD PTR [ecx+esi*8-0x34]
  406f11:	dec    DWORD PTR [ecx+0x70d6183]
  406f17:	add    BYTE PTR [edx+0x0],bl
  406f1a:	jmp    FWORD PTR [ecx-0x1]
  406f1d:	int3   
  406f1e:	test   BYTE PTR [esi-0x6200337d],dh
  406f24:	aaa    
  406f25:	mov    bh,0x79
  406f27:	add    BYTE PTR [edi+0x0],bl
  406f2a:	or     DWORD PTR [edx-0x10640100],0xffffffcc
  406f31:	inc    DWORD PTR [ebx+0x1319ffa9]
  406f37:	jmp    ebp
  406f39:	add    bh,bh
  406f3b:	aaa    
  406f3c:	(bad)  
  406f3d:	(bad)  
  406f3e:	jmp    0xcd0c6fe2
  406f43:	pop    esi
  406f44:	push   0x67
  406f46:	cwde   
  406f47:	call   FWORD PTR [eax+0x0]
  406f4a:	(bad)  
  406f4b:	mov    ecx,0x6793ffff
  406f50:	inc    DWORD PTR [eax]
  406f52:	call   edx
  406f54:	mov    eax,fs
  406f56:	je     0x406f57
  406f58:	in     eax,dx
  406f59:	inc    DWORD PTR [eax]
  406f5b:	lahf   
  406f5c:	(bad)  
  406f5d:	push   DWORD PTR [ebx]
  406f5f:	lods   al,BYTE PTR ds:[esi]
  406f60:	(bad)  
  406f61:	inc    DWORD PTR [eax]
  406f63:	sub    DWORD PTR [ebx+ebp*8+0x7c],0x8300c289
  406f6b:	repz add DWORD PTR [ebx+0x8379d6],0xffffffff
  406f73:	inc    esi
  406f74:	pushf  
  406f75:	mov    eax,DWORD PTR [ecx-0x1]
  406f78:	pop    ebp
  406f79:	dec    DWORD PTR [ecx+0x10830034]
  406f7f:	retf   
  406f80:	(bad)  
  406f81:	(bad)  
  406f82:	dec    DWORD PTR [esp+edi*4+0x7600d0b0]
  406f89:	add    BYTE PTR [ebx+0x8cc00d2],al
  406f8f:	sub    edi,edi
  406f91:	(bad)  
  406f92:	jmp    FWORD PTR [ecx+0x44e80b]
  406f98:	sub    ah,cl
  406f9a:	add    BYTE PTR [ebx],dh
  406f9c:	inc    DWORD PTR [eax]
  406f9e:	sbb    ch,BYTE PTR [ebp-0x47c0100]
  406fa4:	mov    ebp,0x40cce7de
  406fa9:	dec    DWORD PTR [ecx+0x408300c4]
  406faf:	sub    DWORD PTR [eax],eax
  406fb1:	(bad)  
  406fb2:	inc    esi
  406fb4:	btr    DWORD PTR [edx],edi
  406fb7:	add    BYTE PTR [eax],bh
  406fb9:	add    bh,bh
  406fbb:	adc    al,0xff
  406fbd:	add    BYTE PTR ds:0xffffff16,bh
  406fc3:	cmp    eax,0x83636e2c
  406fc8:	sbb    bh,bh
  406fca:	int3   
  406fcb:	inc    edi
  406fcc:	int3   
  406fcd:	(bad)  
  406fce:	jmp    0xad6f:0x8383837c
  406fd5:	and    al,0xb6
  406fd7:	int3   
  406fd8:	out    dx,al
  406fd9:	mov    DWORD PTR [ecx+0x42ff002f],ecx
  406fdf:	(bad)  
  406fe0:	(bad)  
  406fe1:	inc    DWORD PTR [eax]
  406fe3:	ja     0x40700c
  406fe5:	or     eax,0xff018349
  406fea:	call   DWORD PTR [ecx-0x77]
  406fed:	call   DWORD PTR [edx+eax*1+0x0]
  406ff1:	add    BYTE PTR [eax],al
  406ff3:	enter  0xba25,0x9a
  406ff7:	call   esp
  406ff9:	add    DWORD PTR [eax],0x75
  406ffc:	inc    DWORD PTR [eax]
  406ffe:	jo     0x406ff9
  407000:	add    DWORD PTR [eax],0x0
  407003:	cs mov esp,0x7ff60db
  407009:	mov    DWORD PTR [eax],eax
  40700b:	fdivp  st(7),st
  40700d:	jmp    DWORD PTR [edx-0x7c1b]
  407013:	scas   eax,DWORD PTR es:[edi]
  407014:	in     al,0xcb
  407016:	mov    ch,0xff
  407018:	int    0xff
  40701a:	add    BYTE PTR [edi],al
  40701c:	inc    DWORD PTR [eax]
  40701e:	fistp  QWORD PTR [edx+0x0]
  407021:	add    ah,cl
  407023:	mov    al,ds:0xff1f3b34
  407028:	mov    es,WORD PTR [eax]
  40702a:	add    BYTE PTR [edx-0x1],bh
  40702d:	add    BYTE PTR [edx+ebp*2-0x1],cl
  407031:	mov    edi,edi
  407033:	push   ds
  407034:	ins    DWORD PTR es:[edi],dx
  407035:	pusha  
  407036:	les    eax,FWORD PTR [eax]
  407038:	outs   dx,DWORD PTR ds:[esi]
  407039:	dec    DWORD PTR [ecx-0x58007ca6]
  40703f:	sbb    al,BYTE PTR [eax]
  407041:	add    bh,bh
  407043:	mov    bh,0x93
  407045:	arpl   WORD PTR [esi],si
  407047:	(bad)  
  407048:	(bad)  
  40704a:	add    dh,cl
  40704c:	(bad)  
  40704d:	dec    ebx
  40704f:	mov    edi,0x93ff0000
  407054:	test   ebp,0xff04ffb4
  40705a:	(bad)  
  40705b:	out    dx,al
  40705c:	mov    DWORD PTR [ecx-0x336a9f],ecx
  407062:	add    BYTE PTR [edi],ah
  407064:	xor    eax,0x89ff1cec
  407069:	inc    DWORD PTR [eax]
  40706b:	ins    BYTE PTR es:[edi],dx
  40706c:	inc    DWORD PTR [ebx+0x835eab]
  407072:	sbb    DWORD PTR [ebx],0x10
  407075:	bnd ret 0x9b00
  407079:	add    bh,bh
  40707b:	jmp    0x3d18717f
  407080:	mov    DWORD PTR [eax],eax
  407082:	add    DWORD PTR [eax-0x72],0xffffffba
  407086:	arpl   di,di
  407088:	dec    eax
  407089:	inc    DWORD PTR [eax]
  40708b:	mov    dl,0xff
  40708d:	(bad)  
  40708e:	jle    0x4070cb
  407090:	add    BYTE PTR [eax],al
  407092:	add    BYTE PTR [eax],cl
  407094:	rcl    BYTE PTR [eax+ebx*2],1
  407097:	call   DWORD PTR [esi]
  407099:	inc    DWORD PTR [eax]
  40709b:	stos   BYTE PTR es:[edi],al
  40709c:	(bad)  
  40709d:	call   FWORD PTR [eax+0x838390]
  4070a3:	mov    ebx,esi
  4070a5:	add    edi,DWORD PTR [ebx]
  4070a7:	(bad)  
  4070a8:	jmp    0xff71ac
  4070ad:	mov    DWORD PTR [esi],edx
  4070af:	in     eax,0xff
  4070b1:	mov    edi,edi
  4070b3:	leave  
  4070b4:	cmp    bh,BYTE PTR [edi-0x33b6ffcc]
  4070ba:	add    BYTE PTR [esi-0x525e7c01],ch
  4070c0:	(bad)  
  4070c1:	inc    DWORD PTR [eax]
  4070c3:	cwde   
  4070c4:	sbb    al,0x74
  4070c6:	dec    esp
  4070c7:	jmp    ebx
  4070c9:	add    ah,cl
  4070cb:	daa    
  4070cc:	cmp    edi,0xffffffae
  4070cf:	inc    esp
  4070d0:	dec    esp
  4070d2:	sbb    DWORD PTR [ebx],0xffffffb5
  4070d5:	mov    cl,0x68
  4070d7:	(bad)  
  4070d8:	jl     0x4070da
  4070da:	jmp    FWORD PTR [ebp+0x2c90ffff]
  4070e0:	add    BYTE PTR [eax],al
  4070e2:	int3   
  4070e3:	fld    DWORD PTR [esi-0x7e]
  4070e6:	test   eax,0xffcc3eff
  4070eb:	inc    DWORD PTR [bp+di+0x1d20]
  4070f0:	add    bh,bh
  4070f2:	inc    DWORD PTR [edx+esi*8]
  4070f5:	xchg   BYTE PTR [edx-0x77],ah
  4070f8:	aam    0xff
  4070fa:	(bad)  
  4070fb:	cld    
  4070fc:	add    bh,bh
  4070fe:	and    eax,0xffccffc1
  407103:	sbb    al,0xc3
  407105:	inc    eax
  407106:	sub    eax,0xffff6500
  40710b:	xchg   esi,eax
  40710c:	(bad)  
  40710d:	inc    edx
  40710f:	mov    bh,0x0
  407111:	add    DWORD PTR [eax],0xffffffcd
  407114:	test   eax,0xc2ff3d67
  407119:	inc    DWORD PTR [eax]
  40711b:	das    
  40711c:	add    BYTE PTR [eax],al
  40711e:	xchg   ecx,eax
  40711f:	ss cmp edi,0xffffffcc
  407123:	clc    
  407124:	outs   dx,BYTE PTR ds:[esi]
  407125:	xor    al,0xff
  407128:	fiadd  DWORD PTR [ebx-0x737d]
  40712e:	adc    BYTE PTR [ebp-0x7d],0xff
  407132:	mov    DWORD PTR [edx-0x80],edi
  407135:	mov    ds:0x9b89f3,al
  40713a:	(bad)  
  40713b:	cmp    al,0x83
  40713d:	call   eax
  40713f:	ror    BYTE PTR [ecx-0x34d60034],1
  407145:	std    
  407146:	fadd   QWORD PTR [ebx+0x4c0000dc]
  40714c:	mov    edi,edi
  40714e:	jmp    0x363f:0xff89ff98
  407155:	push   0xff74ccfa
  40715a:	dec    DWORD PTR [edi]
  40715c:	inc    DWORD PTR [ebx+0xffd84a]
  407162:	call   DWORD PTR ds:0xffa9b892
  407168:	lahf   
  407169:	add    DWORD PTR [eax],0x18
  40716c:	(bad)  
  40716d:	dec    DWORD PTR [eax-0x7cffff9c]
  407173:	push   edi
  407174:	cmp    DWORD PTR [edi-0x3c],esp
  407177:	and    DWORD PTR [edi+edi*8-0x34],0x7e
  40717c:	int3   
  40717d:	call   DWORD PTR [edi-0xff007a]
  407183:	add    DWORD PTR ds:0xa2ffe59a,ecx
  407189:	add    BYTE PTR [ebx+0x83ff31],al
  40718f:	bswap  esp
  407191:	inc    DWORD PTR [eax]
  407193:	or     ebx,edx
  407195:	add    ebx,DWORD PTR [ebx]
  407197:	adc    DWORD PTR [ebx-0x7d],0xffffffff
  40719b:	mov    bh,bh
  40719d:	add    ch,dh
  40719f:	(bad)  
  4071a0:	inc    DWORD PTR [eax]
  4071a2:	add    ah,ah
  4071a4:	mov    bl,0x7a
  4071a6:	test   eax,0xff00ab00
  4071ab:	pop    es
  4071ac:	inc    DWORD PTR [ebx-0x33338383]
  4071b2:	mov    esp,edx
  4071b4:	cmp    esp,DWORD PTR [ecx+edx*1]
  4071b7:	push   DWORD PTR [ecx+0x0]
  4071ba:	call   FWORD PTR [ebx+0x27a78300]
  4071c0:	inc    DWORD PTR [eax]
  4071c2:	add    BYTE PTR [edx-0x76addf3b],al
  4071c8:	add    eax,0x17ccff
  4071cd:	sbb    DWORD PTR [eax-0xff00d3],0x71
  4071d4:	cmp    eax,0x2700cdfb
  4071d9:	add    BYTE PTR [eax],al
  4071db:	mov    bl,0x83
  4071dd:	add    BYTE PTR [edi+ebp*8-0x1],dl
  4071e1:	inc    DWORD PTR [eax]
  4071e3:	or     eax,0xffa9c87a
  4071e8:	mov    ebx,0xff870000
  4071ed:	call   DWORD PTR [esi]
  4071ef:	or     eax,0xa6ff00ff
  4071f4:	js     0x40717a
  4071f6:	(bad)  
  4071f7:	push   DWORD PTR ds:0x3e00ff
  4071fd:	add    al,dl
  4071ff:	fcos   
  407201:	(bad)  
  407202:	jmp    FWORD PTR [edx-0x24]
  407205:	enter  0x83a1,0x54
  407209:	int3   
  40720a:	jmp    DWORD PTR [eax-0x1]
  40720d:	call   FWORD PTR [ecx]
  40720f:	(bad)  
  407211:	add    BYTE PTR [eax],al
  407213:	leave  
  407214:	dec    DWORD PTR [eax+0x2eccfa]
  40721a:	inc    esi
  40721c:	dec    esp
  40721e:	xor    DWORD PTR [ebx-0x4e000001],esp
  407224:	jecxz  0x4071fe
  407226:	loop   0x407227
  407228:	aas    
  407229:	mov    DWORD PTR [eax],eax
  40722b:	retf   
  40722c:	inc    DWORD PTR [ebx+0x831d2c]
  407232:	(bad)  
  407233:	mov    esi,0xffd2374e
  407238:	loope  0x4071c3
  40723a:	(bad)  
  40723b:	cmp    bh,bh
  40723d:	add    BYTE PTR [edi-0xff00e7],bl
  407243:	mov    ds:0xff9032e8,al
  407248:	fiadd  WORD PTR [ebx+0x8938cc]
  40724e:	xor    cl,BYTE PTR [eax+0x0]
  407251:	inc    DWORD PTR [eax]
  407253:	iret   
  407254:	das    
  407255:	adc    bl,BYTE PTR [edi-0x76fff000]
  40725b:	xor    edi,edi
  40725d:	add    dh,cl
  40725f:	jbe    0x4071ea
  407261:	(bad)  
  407262:	dec    DWORD PTR [esi-0x33fb812e]
  407268:	scas   eax,DWORD PTR es:[edi]
  407269:	add    DWORD PTR [eax],0x4b
  40726c:	cmp    edi,0x14
  40726f:	push   0xffffffff
  407271:	add    ah,cl
  407273:	push   ds
  407274:	mov    al,BYTE PTR [ebp+0x44]
  407277:	(bad)  
  407278:	cmp    bh,bh
  40727a:	add    ch,cl
  40727c:	(bad)  
  40727d:	push   eax
  40727f:	mov    dl,0x0
  407281:	add    DWORD PTR [eax],0x63
  407284:	xchg   DWORD PTR gs:[ebp+0x0],edi
  407288:	ret    0xffcc
  40728b:	inc    ecx
  40728c:	add    bh,bh
  40728e:	cmp    BYTE PTR [ebx+eax*4-0xdfa3400],dl
  407295:	fadd   DWORD PTR [ebx-0x7d]
  407298:	test   BYTE PTR [eax],al
  40729a:	call   FWORD PTR [esi]
  40729c:	dec    DWORD PTR [ecx-0x7c00b774]
  4072a2:	inc    DWORD PTR [edx]
  4072a4:	and    eax,0xc0ff6f27
  4072a9:	(bad)  
  4072aa:	(bad)  
  4072ab:	mov    ebp,0x724e0089
  4072b0:	mov    DWORD PTR [eax],eax
  4072b2:	inc    esp
  4072b4:	jno    0x4072c5
  4072b6:	sub    eax,0x838336ff
  4072bb:	mov    bh,0xff
  4072bd:	push   DWORD PTR [edx+0x24]
  4072c0:	dec    esp
  4072c2:	dec    esp
  4072c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c5:	into   
  4072c6:	inc    ecx
  4072c7:	int3   
  4072c8:	or     ecx,esp
  4072ca:	add    BYTE PTR [edx],dl
  4072cc:	dec    esp
  4072ce:	addr16 sbb eax,0x99ccff83
  4072d4:	stc    
  4072d5:	push   0xffd8fffa
  4072da:	call   FWORD PTR [ecx-0x7fbe0001]
  4072e0:	(bad)  
  4072e1:	(bad)  
  4072e2:	call   DWORD PTR [edx]
  4072e4:	cmp    eax,0xc8ff4723
  4072e9:	add    bh,bh
  4072eb:	sub    eax,DWORD PTR [eax]
  4072ed:	jmp    FWORD PTR [eax]
  4072ef:	call   0xa94d:0xddff83cc
  4072f6:	cmp    eax,DWORD PTR [eax]
  4072f8:	hlt    
  4072f9:	inc    DWORD PTR [eax]
  4072fb:	sub    eax,0x148100ff
  407300:	inc    DWORD PTR [eax]
  407302:	int3   
  407303:	cwde   
  407304:	sub    eax,0x1a00aec1
  407309:	mov    edi,edi
  40730b:	push   ecx
  40730c:	add    BYTE PTR [ecx+0xffe488],cl
  407312:	mov    DWORD PTR [esi+esi*4-0x123342e3],esi
  407319:	add    bh,bh
  40731b:	test   eax,0x2d290000
  407320:	int3   
  407321:	int3   
  407322:	call   DWORD PTR [esi]
  407324:	cmp    al,0x90
  407326:	loop   0x407327
  407328:	dec    esi
  407329:	add    BYTE PTR [ebx+0x5ff008e],al
  40732f:	jecxz  0x407330
  407331:	add    DWORD PTR [eax],0xfffffff4
  407334:	jg     0x4072f0
  407336:	les    eax,FWORD PTR [eax]
  407338:	aad    0xff
  40733a:	jmp    FWORD PTR [edx-0x754e0001]
  407340:	add    BYTE PTR [eax],al
  407342:	int3   
  407343:	popa   
  407344:	imul   edx,DWORD PTR [ebp+0x4a],0x0
  407348:	dec    ecx
  407349:	(bad)  
  40734a:	(bad)  
  40734b:	cmp    BYTE PTR [eax],al
  40734d:	jmp    FWORD PTR [ecx-0xffff21]
  407353:	lods   eax,DWORD PTR ds:[esi]
  407354:	lds    esi,FWORD PTR [eax+eax*4]
  407357:	call   DWORD PTR [ecx-0x9b7c01]
  40735d:	add    dh,dl
  40735f:	fs add bh,bh
  407362:	add    BYTE PTR [eax-0xf64595],ch
  407368:	sub    DWORD PTR [ecx-0x8201],ecx
  40736e:	xor    ecx,ebp
  407370:	int3   
  407371:	int3   
  407372:	jmp    FWORD PTR [esi+0x2]
  407375:	mov    eax,ds:0x83b9ffae
  40737a:	jmp    FWORD PTR [edi-0x7d]
  40737d:	adc    DWORD PTR [edx+0xffff6b],0x5a
  407384:	inc    esp
  407385:	ja     0x4073b5
  407387:	add    BYTE PTR [edi-0x7c470100],cl
  40738d:	(bad)  
  40738e:	call   0x140408b
  407393:	scas   al,BYTE PTR es:[edi]
  407394:	popf   
  407395:	outs   dx,BYTE PTR ds:[esi]
  407396:	pushf  
  407397:	dec    DWORD PTR [eax]
  407399:	add    BYTE PTR [eax],al
  40739b:	cmp    al,0xff
  40739d:	add    dh,bh
  40739f:	std    
  4073a0:	cmp    edi,0xffffff83
  4073a3:	xchg   ecx,eax
  4073a4:	test   eax,0x5ffe98d
  4073a9:	inc    DWORD PTR [eax]
  4073ab:	clc    
  4073ac:	mov    DWORD PTR [eax],eax
  4073ae:	and    ebx,DWORD PTR [ebx+0x0]
  4073b1:	dec    esp
  4073b3:	shl    DWORD PTR [ecx-0x7633854e],1
  4073b9:	mov    DWORD PTR [ebx-0x63000046],eax
  4073bf:	jno    0x4073c1
  4073c1:	(bad)  
  4073c2:	push   DWORD PTR [eax-0x37b6df]
  4073c8:	inc    DWORD PTR ss:[eax]
  4073cb:	pop    edx
  4073cc:	dec    esp
  4073ce:	mov    ?,WORD PTR [ecx-0x1]
  4073d1:	cmp    edi,0x40
  4073d4:	rcl    BYTE PTR [edx-0xf],0xcc
  4073d8:	nop
  4073d9:	inc    DWORD PTR [ebx+0x1100ffa4]
  4073df:	pop    ds
  4073e0:	inc    DWORD PTR [eax]
  4073e2:	and    DWORD PTR [ecx],0x79
  4073e5:	cmp    eax,0x73833a
  4073ea:	jmp    FWORD PTR [ebp-0x13373400]
  4073f0:	inc    DWORD PTR [eax]
  4073f2:	inc    DWORD PTR ds:0x8993b5
  4073f8:	push   0xffc4ffff
  4073fd:	(bad)  
  4073fe:	out    dx,al
  4073ff:	test   edi,edi
  407401:	dec    esp
  407403:	jecxz  0x4073a5
  407405:	or     al,0xc6
  407407:	add    dh,dl
  407409:	add    BYTE PTR [eax],al
  40740b:	and    al,0xff
  40740d:	sub    DWORD PTR [edi],0xffffffc7
  407410:	add    bh,bh
  407412:	add    bl,al
  407414:	jbe    0x407457
  407416:	inc    esi
  407417:	add    BYTE PTR [eax+eax*1],bh
  40741a:	add    al,dl
  40741c:	add    BYTE PTR [ebx+0xfff827],al
  407422:	mov    DWORD PTR [esi-0xbfdd9b],eax
  407428:	cmp    al,0x0
  40742a:	mov    DWORD PTR [eax],eax
  40742c:	add    BYTE PTR [eax],al
  40742e:	mov    ebp,DWORD PTR [ebx-0x1]
  407431:	cmp    edi,0x51
  407434:	repz push ss
  407436:	mov    al,0x0
  407438:	pop    es
  407439:	inc    DWORD PTR [eax]
  40743b:	push   ds
  40743c:	add    ah,cl
  40743e:	scas   eax,DWORD PTR es:[edi]
  40743f:	lods   al,BYTE PTR ds:[esi]
  407440:	or     DWORD PTR [ecx+0x26418a00],0x31
  407447:	inc    DWORD PTR [edx]
  407449:	add    bh,bh
  40744b:	int3   
  40744c:	dec    esp
  40744e:	pop    edx
  40744f:	mov    cl,0x0
  407451:	(bad)  
  407452:	dec    DWORD PTR [edx]
  407454:	xchg   edi,eax
  407455:	stos   BYTE PTR es:[edi],al
  407456:	clc    
  407457:	(bad)  
  407458:	mov    ebp,0x83590000
  40745d:	jmp    FWORD PTR [ecx-0x19]
  407460:	add    bh,bh
  407462:	call   FWORD PTR [edi-0x79e676]
  407468:	push   edx
  407469:	add    BYTE PTR [eax],al
  40746b:	sub    bh,bh
  40746d:	(bad)  
  40746e:	fadd   DWORD PTR [eax-0x1]
  407471:	(bad)  
  407472:	inc    edx
  407474:	data16 loop 0x40748f
  407477:	add    bh,al
  407479:	mov    DWORD PTR [ecx-0x76000059],ecx
  40747f:	jns    0x407480
  407481:	add    ah,cl
  407483:	mov    edx,DWORD PTR [edx-0xb]
  407486:	js     0x407487
  407488:	je     0x40748a
  40748a:	inc    esi
  40748c:	inc    DWORD PTR [ebx-0x69b2]
  407492:	add    BYTE PTR [ebx-0x32],ch
  407495:	pusha  
  407496:	push   ebp
  407497:	int3   
  407498:	out    0xff,eax
  40749a:	push   DWORD PTR [ebx]
  40749c:	add    BYTE PTR [eax],al
  40749e:	sahf   
  40749f:	ins    DWORD PTR es:[edi],dx
  4074a0:	mov    edi,edi
  4074a2:	add    BYTE PTR [ebp-0x44],al
  4074a5:	outs   dx,DWORD PTR gs:[esi]
  4074a7:	mov    ebp,eax
  4074a9:	(bad)  
  4074aa:	push   DWORD PTR [esi]
  4074ac:	int3   
  4074ad:	(bad)  
  4074ae:	mov    esp,0xff83ffe0
  4074b3:	push   0xff89c160
  4074b8:	(bad)  
  4074b9:	inc    DWORD PTR [eax]
  4074bb:	jg     0x4074bc
  4074bd:	jmp    DWORD PTR [eax]
  4074bf:	cdq    
  4074c0:	(bad)  
  4074c1:	(bad)  
  4074c2:	inc    DWORD PTR [eax-0x23]
  4074c5:	lahf   
  4074c6:	mov    BYTE PTR [ebx+0x58fffff2],0x89
  4074cd:	call   DWORD PTR [esi-0x7c16]
  4074d3:	add    BYTE PTR [ecx],bl
  4074d5:	rcl    BYTE PTR [esi],cl
  4074d7:	add    bh,ah
  4074d9:	add    bh,bh
  4074db:	sbb    edi,edi
  4074dd:	int3   
  4074de:	adc    ebx,esp
  4074e0:	inc    DWORD PTR [eax]
  4074e2:	adc    esp,0x66
  4074e5:	xor    ch,al
  4074e7:	add    dh,al
  4074e9:	int3   
  4074ea:	(bad)  
  4074eb:	cld    
  4074ec:	(bad)  
  4074ed:	jmp    DWORD PTR [edi-0xa]
  4074f0:	int3   
  4074f1:	(bad)  
  4074f2:	(bad)  
  4074f3:	cmp    eax,edi
  4074f5:	xor    al,0x9c
  4074f7:	jmp    DWORD PTR [eax+0x6f83ff]
  4074fd:	add    bh,dh
  4074ff:	mov    cs,WORD PTR [ecx-0x2486ff01]
  407505:	push   es
  407506:	jmp    0x407507
  407508:	cld    
  407509:	or     esp,0xffffffd2
  40750c:	add    BYTE PTR [ebx-0x7c9871],al
  407512:	push   DWORD PTR [eax+ecx*8]
  407515:	mov    ebp,DWORD PTR [eax+eax*1]
  407518:	xlat   BYTE PTR ds:[ebx]
  407519:	inc    DWORD PTR [eax]
  40751b:	hlt    
  40751c:	dec    esp
  40751e:	bound  ebp,QWORD PTR [eax]
  407520:	add    bh,bh
  407522:	add    BYTE PTR [ebp-0x12],dh
  407525:	or     BYTE PTR [ebp-0x1],bh
  407528:	jmp    0x4074ad
  40752a:	int3   
  40752b:	dec    esi
  40752c:	(bad)  
  40752d:	jmp    eax
  40752f:	mov    bh,bh
  407531:	add    bh,bh
  407533:	ficomp WORD PTR [ebx]
  407536:	mov    ecx,DWORD PTR [ecx+0x4489ff23]
  40753c:	int3   
  40753d:	add    BYTE PTR [ebx-0xff27],ch
  407543:	push   edi
  407544:	mov    al,ds:0x98894569
  407549:	add    BYTE PTR [ebx+0x1100ff84],al
  40754f:	jmp    0xfd3fff53
  407554:	or     edi,DWORD PTR [ebp+eax*2-0x33917d]
  40755b:	cmc    
  40755c:	(bad)  
  40755d:	call   FWORD PTR [edx+0x83ff42]
  407563:	(bad)  
  407564:	pop    eax
  407565:	cmc    
  407566:	scas   eax,DWORD PTR es:[edi]
  407567:	jmp    FWORD PTR [esi-0x7d]
  40756a:	add    BYTE PTR [edx-0x1],bh
  40756d:	(bad)  
  40756e:	jl     0x4075cc
  407570:	(bad)  
  407571:	(bad)  
  407572:	(bad)  
  407573:	js     0x40751e
  407575:	clc    
  407576:	repz call eax
  407579:	(bad)  
  40757a:	(bad)  
  40757b:	jp     0x40757c
  40757d:	(bad)  
  40757e:	cmp    DWORD PTR [ecx-0x7c1374ab],esi
  407584:	in     al,0xf8
  407586:	sub    esp,0x30
  407589:	push   ebx
  40758a:	push   ebp
  40758b:	push   esi
  40758c:	mov    esi,DWORD PTR ds:0x44502c
  407592:	push   edi
  407593:	push   0xd6
  407598:	push   0x42
  40759a:	call   esi
  40759c:	push   0x0
  40759e:	push   0x0
  4075a0:	push   0x0
  4075a2:	mov    DWORD PTR [esp+0x20],eax
  4075a6:	call   DWORD PTR ds:0x44500c
  4075ac:	push   0x73
  4075ae:	push   0x42
  4075b0:	call   esi
  4075b2:	mov    DWORD PTR [esp+0x18],eax
  4075b6:	call   DWORD PTR ds:0x445054
  4075bc:	push   0xfd
  4075c1:	push   0x42
  4075c3:	mov    ebp,eax
  4075c5:	call   esi
  4075c7:	mov    edx,DWORD PTR ds:0x448d04
  4075cd:	mov    ecx,DWORD PTR ds:0x44802c
  4075d3:	mov    DWORD PTR [esp+0x1c],eax
  4075d7:	add    edx,0x8d70
  4075dd:	mov    esi,0x10f
  4075e2:	movzx  eax,BYTE PTR [ecx+0x7]
  4075e6:	movzx  edi,WORD PTR [ecx+0x5]
  4075ea:	movzx  ecx,BYTE PTR [ecx+0x1]
  4075ee:	shl    eax,0x10
  4075f1:	add    eax,edi
  4075f3:	shl    eax,0x8
  4075f6:	add    eax,ecx
  4075f8:	mov    ecx,0x8a91ef4c
  4075fd:	sub    ecx,DWORD PTR ds:0x448d00
  407603:	mov    ds:0x448cf0,eax
  407608:	xor    ecx,eax
  40760a:	mov    DWORD PTR [edx],ecx
  40760c:	mov    ecx,DWORD PTR ds:0x44802c
  407612:	add    ecx,0x8
  407615:	add    edx,0x4
  407618:	dec    esi
  407619:	mov    DWORD PTR ds:0x44802c,ecx
  40761f:	jne    0x4075e2
  407621:	mov    esi,DWORD PTR ds:0x448d04
  407627:	mov    edi,DWORD PTR ds:0x445050
  40762d:	mov    eax,ds:0x448030
  407632:	add    esi,0x91ac
  407638:	mov    ebx,0x2e4
  40763d:	lea    ecx,[ecx+0x0]
  407640:	movzx  edx,BYTE PTR [eax+0x7]
  407644:	movzx  ecx,BYTE PTR [eax+0x2]
  407648:	movzx  eax,WORD PTR [eax]
  40764b:	push   0x0
  40764d:	push   0xc0
  407652:	push   0xc1
  407657:	shl    edx,0x8
  40765a:	push   0x9
  40765c:	add    edx,ecx
  40765e:	push   0xbf
  407663:	shl    edx,0x10
  407666:	push   0x0
  407668:	add    edx,eax
  40766a:	push   ebp
  40766b:	mov    DWORD PTR ds:0x448cf0,edx
  407671:	call   edi
  407673:	mov    ecx,0x65530ff5
  407678:	sub    ecx,DWORD PTR ds:0x448d00
  40767e:	add    esi,0x4
  407681:	xor    ecx,DWORD PTR ds:0x448cf0
  407687:	mov    DWORD PTR [esi-0x4],ecx
  40768a:	mov    eax,ds:0x448030
  40768f:	add    eax,0x8
  407692:	dec    ebx
  407693:	mov    ds:0x448030,eax
  407698:	jne    0x407640
  40769a:	mov    eax,ds:0x448d04
  40769f:	add    eax,0x9d3c
  4076a4:	mov    edx,0x171
  4076a9:	lea    esp,[esp+0x0]
  4076b0:	mov    ecx,DWORD PTR ds:0x448034
  4076b6:	mov    ecx,DWORD PTR [ecx+0x4]
  4076b9:	mov    esi,DWORD PTR ds:0x448d00
  4076bf:	xor    esi,ecx
  4076c1:	xor    esi,0xeac9059a
  4076c7:	mov    DWORD PTR ds:0x448cf0,ecx
  4076cd:	mov    DWORD PTR [eax],esi
  4076cf:	add    DWORD PTR ds:0x448034,0x8
  4076d6:	add    eax,0x4
  4076d9:	dec    edx
  4076da:	jne    0x4076b0
  4076dc:	mov    esi,DWORD PTR ds:0x448d04
  4076e2:	mov    ebx,DWORD PTR ds:0x445028
  4076e8:	mov    ecx,DWORD PTR ds:0x448038
  4076ee:	add    esi,0xa300
  4076f4:	mov    edi,0x8c
  4076f9:	lea    esp,[esp+0x0]
  407700:	movzx  eax,BYTE PTR [ecx+0x6]
  407704:	movzx  edx,BYTE PTR [ecx+0x3]
  407708:	movzx  ecx,WORD PTR [ecx+0x1]
  40770c:	shl    eax,0x8
  40770f:	add    eax,edx
  407711:	shl    eax,0x10
  407714:	add    eax,ecx
  407716:	mov    edx,0xb884829f
  40771b:	sub    edx,DWORD PTR ds:0x448d00
  407721:	mov    ds:0x448cf0,eax
  407726:	xor    edx,eax
  407728:	lea    eax,[esp+0x20]
  40772c:	push   eax
  40772d:	lea    ecx,[esp+0x2c]
  407731:	push   ecx
  407732:	mov    DWORD PTR [esi],edx
  407734:	lea    edx,[esp+0x38]
  407738:	push   edx
  407739:	lea    eax,[esp+0x44]
  40773d:	push   eax
  40773e:	push   0xcfb2b779
  407743:	call   ebx
  407745:	mov    ecx,DWORD PTR ds:0x448038
  40774b:	movzx  eax,WORD PTR [ecx+0xe]
  40774f:	movzx  ecx,WORD PTR [ecx+0xb]
  407753:	mov    edx,DWORD PTR ds:0x448d00
  407759:	shl    eax,0x10
  40775c:	add    eax,ecx
  40775e:	add    edx,0xb87c7ed3
  407764:	xor    edx,eax
  407766:	mov    ds:0x448cf0,eax
  40776b:	mov    DWORD PTR [esi+0x4],edx
  40776e:	mov    ecx,DWORD PTR ds:0x448038
  407774:	add    ecx,0x10
  407777:	add    esi,0x8
  40777a:	dec    edi
  40777b:	mov    DWORD PTR ds:0x448038,ecx
  407781:	jne    0x407700
  407787:	mov    eax,ds:0x448d04
  40778c:	mov    edx,DWORD PTR ds:0x44803c
  407792:	add    eax,0xa760
  407797:	lea    esi,[edi+0x36]
  40779a:	lea    ebx,[ebx+0x0]
  4077a0:	movzx  ecx,BYTE PTR [edx+0x4]
  4077a4:	movzx  edi,BYTE PTR [edx+0x2]
  4077a8:	movzx  edx,WORD PTR [edx]
  4077ab:	shl    ecx,0x8
  4077ae:	add    ecx,edi
  4077b0:	shl    ecx,0x10
  4077b3:	add    ecx,edx
  4077b5:	mov    edx,DWORD PTR ds:0x448d00
  4077bb:	xor    edx,ecx
  4077bd:	mov    DWORD PTR ds:0x448cf0,ecx
  4077c3:	xor    edx,0x44a975ff
  4077c9:	mov    DWORD PTR [eax],edx
  4077cb:	mov    edx,DWORD PTR ds:0x44803c
  4077d1:	add    edx,0x8
  4077d4:	mov    DWORD PTR ds:0x44803c,edx
  4077da:	movzx  ecx,BYTE PTR [edx+0x4]
  4077de:	movzx  edi,BYTE PTR [edx+0x2]
  4077e2:	movzx  edx,WORD PTR [edx]
  4077e5:	shl    ecx,0x8
  4077e8:	add    ecx,edi
  4077ea:	shl    ecx,0x10
  4077ed:	add    ecx,edx
  4077ef:	mov    edx,DWORD PTR ds:0x448d00
  4077f5:	xor    edx,ecx
  4077f7:	mov    DWORD PTR ds:0x448cf0,ecx
  4077fd:	xor    edx,0x44a975ff
  407803:	mov    DWORD PTR [eax+0x4],edx
  407806:	mov    edx,DWORD PTR ds:0x44803c
  40780c:	add    edx,0x8
  40780f:	mov    DWORD PTR ds:0x44803c,edx
  407815:	movzx  ecx,BYTE PTR [edx+0x4]
  407819:	movzx  edi,BYTE PTR [edx+0x2]
  40781d:	movzx  edx,WORD PTR [edx]
  407820:	shl    ecx,0x8
  407823:	add    ecx,edi
  407825:	shl    ecx,0x10
  407828:	add    ecx,edx
  40782a:	mov    edx,DWORD PTR ds:0x448d00
  407830:	xor    edx,ecx
  407832:	mov    DWORD PTR ds:0x448cf0,ecx
  407838:	xor    edx,0x44a975ff
  40783e:	mov    DWORD PTR [eax+0x8],edx
  407841:	mov    edx,DWORD PTR ds:0x44803c
  407847:	add    edx,0x8
  40784a:	mov    DWORD PTR ds:0x44803c,edx
  407850:	movzx  ecx,BYTE PTR [edx+0x4]
  407854:	movzx  edi,BYTE PTR [edx+0x2]
  407858:	movzx  edx,WORD PTR [edx]
  40785b:	shl    ecx,0x8
  40785e:	add    ecx,edi
  407860:	shl    ecx,0x10
  407863:	add    ecx,edx
  407865:	mov    edx,DWORD PTR ds:0x448d00
  40786b:	xor    edx,ecx
  40786d:	mov    DWORD PTR ds:0x448cf0,ecx
  407873:	xor    edx,0x44a975ff
  407879:	mov    DWORD PTR [eax+0xc],edx
  40787c:	mov    edx,DWORD PTR ds:0x44803c
  407882:	add    edx,0x8
  407885:	mov    DWORD PTR ds:0x44803c,edx
  40788b:	movzx  ecx,BYTE PTR [edx+0x4]
  40788f:	movzx  edi,BYTE PTR [edx+0x2]
  407893:	movzx  edx,WORD PTR [edx]
  407896:	shl    ecx,0x8
  407899:	add    ecx,edi
  40789b:	shl    ecx,0x10
  40789e:	add    ecx,edx
  4078a0:	mov    edx,DWORD PTR ds:0x448d00
  4078a6:	xor    edx,ecx
  4078a8:	mov    DWORD PTR ds:0x448cf0,ecx
  4078ae:	xor    edx,0x44a975ff
  4078b4:	mov    DWORD PTR [eax+0x10],edx
  4078b7:	mov    edx,DWORD PTR ds:0x44803c
  4078bd:	add    edx,0x8
  4078c0:	mov    DWORD PTR ds:0x44803c,edx
  4078c6:	movzx  ecx,BYTE PTR [edx+0x4]
  4078ca:	movzx  edi,BYTE PTR [edx+0x2]
  4078ce:	movzx  edx,WORD PTR [edx]
  4078d1:	shl    ecx,0x8
  4078d4:	add    ecx,edi
  4078d6:	shl    ecx,0x10
  4078d9:	add    ecx,edx
  4078db:	mov    edx,DWORD PTR ds:0x448d00
  4078e1:	xor    edx,ecx
  4078e3:	xor    edx,0x44a975ff
  4078e9:	mov    DWORD PTR ds:0x448cf0,ecx
  4078ef:	mov    DWORD PTR [eax+0x14],edx
  4078f2:	mov    edx,DWORD PTR ds:0x44803c
  4078f8:	add    edx,0x8
  4078fb:	add    eax,0x18
  4078fe:	dec    esi
  4078ff:	mov    DWORD PTR ds:0x44803c,edx
  407905:	jne    0x4077a0
  40790b:	mov    esi,DWORD PTR ds:0x448d04
  407911:	add    esi,0xac70
  407917:	call   DWORD PTR ds:0x445018
  40791d:	mov    ecx,DWORD PTR ds:0x448040
  407923:	mov    edx,0x79
  407928:	jmp    0x407930
  40792a:	lea    ebx,[ebx+0x0]
  407930:	movzx  eax,BYTE PTR [ecx+0x7]
  407934:	movzx  edi,BYTE PTR [ecx+0x5]
  407938:	movzx  ecx,WORD PTR [ecx]
  40793b:	shl    eax,0x8
  40793e:	add    eax,edi
  407940:	shl    eax,0x10
  407943:	add    eax,ecx
  407945:	mov    ds:0x448cf0,eax
  40794a:	mov    ecx,0x4b729d84
  40794f:	sub    ecx,DWORD PTR ds:0x448d00
  407955:	add    esi,0x10
  407958:	xor    ecx,eax
  40795a:	mov    DWORD PTR [esi-0x10],ecx
  40795d:	mov    ecx,DWORD PTR ds:0x448040
  407963:	movzx  eax,WORD PTR [ecx+0xe]
  407967:	movzx  edi,BYTE PTR [ecx+0xc]
  40796b:	movzx  ecx,BYTE PTR [ecx+0x9]
  40796f:	shl    eax,0x8
  407972:	add    eax,edi
  407974:	shl    eax,0x8
  407977:	add    eax,ecx
  407979:	mov    ecx,DWORD PTR ds:0x448d00
  40797f:	mov    ds:0x448cf0,eax
  407984:	add    ecx,0x4b6a99b8
  40798a:	xor    ecx,eax
  40798c:	mov    DWORD PTR [esi-0xc],ecx
  40798f:	mov    ecx,DWORD PTR ds:0x448040
  407995:	add    ecx,0x10
  407998:	mov    DWORD PTR ds:0x448040,ecx
  40799e:	movzx  eax,BYTE PTR [ecx+0x7]
  4079a2:	movzx  edi,BYTE PTR [ecx+0x5]
  4079a6:	movzx  ecx,WORD PTR [ecx]
  4079a9:	shl    eax,0x8
  4079ac:	add    eax,edi
  4079ae:	shl    eax,0x10
  4079b1:	add    eax,ecx
  4079b3:	mov    ds:0x448cf0,eax
  4079b8:	mov    ecx,0x4b729d84
  4079bd:	sub    ecx,DWORD PTR ds:0x448d00
  4079c3:	xor    ecx,eax
  4079c5:	mov    DWORD PTR [esi-0x8],ecx
  4079c8:	mov    ecx,DWORD PTR ds:0x448040
  4079ce:	movzx  eax,WORD PTR [ecx+0xe]
  4079d2:	movzx  edi,BYTE PTR [ecx+0xc]
  4079d6:	movzx  ecx,BYTE PTR [ecx+0x9]
  4079da:	shl    eax,0x8
  4079dd:	add    eax,edi
  4079df:	shl    eax,0x8
  4079e2:	add    eax,ecx
  4079e4:	mov    ecx,DWORD PTR ds:0x448d00
  4079ea:	add    ecx,0x4b6a99b8
  4079f0:	xor    ecx,eax
  4079f2:	mov    ds:0x448cf0,eax
  4079f7:	mov    DWORD PTR [esi-0x4],ecx
  4079fa:	mov    ecx,DWORD PTR ds:0x448040
  407a00:	add    ecx,0x10
  407a03:	dec    edx
  407a04:	mov    DWORD PTR ds:0x448040,ecx
  407a0a:	jne    0x407930
  407a10:	mov    esi,DWORD PTR ds:0x448d04
  407a16:	mov    ecx,DWORD PTR ds:0x448044
  407a1c:	add    esi,0xb400
  407a22:	mov    edi,0x135
  407a27:	jmp    0x407a30
  407a29:	lea    esp,[esp+0x0]
  407a30:	movzx  eax,BYTE PTR [ecx+0x7]
  407a34:	movzx  edx,WORD PTR [ecx+0x3]
  407a38:	movzx  ecx,BYTE PTR [ecx]
  407a3b:	shl    eax,0x10
  407a3e:	add    eax,edx
  407a40:	mov    edx,DWORD PTR ds:0x448d00
  407a46:	shl    eax,0x8
  407a49:	add    eax,ecx
  407a4b:	add    edx,0xa96e6c85
  407a51:	xor    edx,eax
  407a53:	mov    ds:0x448cf0,eax
  407a58:	mov    DWORD PTR [esi],edx
  407a5a:	mov    eax,ds:0x448044
  407a5f:	mov    ecx,DWORD PTR [eax+0x8]
  407a62:	lea    edx,[esp+0x20]
  407a66:	push   edx
  407a67:	lea    eax,[esp+0x2c]
  407a6b:	push   eax
  407a6c:	mov    DWORD PTR ds:0x448cf0,ecx
  407a72:	lea    ecx,[esp+0x38]
  407a76:	push   ecx
  407a77:	lea    edx,[esp+0x44]
  407a7b:	push   edx
  407a7c:	push   0xcfb2b779
  407a81:	call   ebx
  407a83:	mov    eax,0xa9767051
  407a88:	sub    eax,DWORD PTR ds:0x448d00
  407a8e:	add    esi,0x8
  407a91:	xor    eax,DWORD PTR ds:0x448cf0
  407a97:	mov    DWORD PTR [esi-0x4],eax
  407a9a:	mov    ecx,DWORD PTR ds:0x448044
  407aa0:	add    ecx,0x10
  407aa3:	dec    edi
  407aa4:	mov    DWORD PTR ds:0x448044,ecx
  407aaa:	jne    0x407a30
  407aac:	mov    eax,DWORD PTR [esp+0x14]
  407ab0:	mov    esi,DWORD PTR ds:0x445030
  407ab6:	test   eax,eax
  407ab8:	je     0x407abd
  407aba:	push   eax
  407abb:	call   esi
  407abd:	mov    eax,DWORD PTR [esp+0x18]
  407ac1:	test   eax,eax
  407ac3:	je     0x407ac8
  407ac5:	push   eax
  407ac6:	call   esi
  407ac8:	mov    eax,DWORD PTR [esp+0x1c]
  407acc:	test   eax,eax
  407ace:	je     0x407ad3
  407ad0:	push   eax
  407ad1:	call   esi
  407ad3:	pop    edi
  407ad4:	pop    esi
  407ad5:	pop    ebp
  407ad6:	pop    ebx
  407ad7:	mov    esp,ebp
  407ad9:	pop    ebp
  407ada:	ret    
  407adb:	int3   
  407adc:	int3   
  407add:	int3   
  407ade:	int3   
  407adf:	int3   
  407ae0:	fdivp  st(7),st
  407ae2:	int3   
  407ae3:	inc    DWORD PTR [eax]
  407ae5:	add    bh,bh
  407ae7:	out    dx,eax
  407ae8:	sub    BYTE PTR ds:0x84d126bf,cl
  407aee:	dec    esp
  407af0:	sar    bh,cl
  407af2:	inc    DWORD PTR [eax]
  407af4:	inc    DWORD PTR [eax]
  407af6:	add    BYTE PTR [ecx+0x2546aa97],bl
  407afc:	iret   
  407afd:	sar    bh,cl
  407aff:	sbb    DWORD PTR [edx],0xffffffff
  407b02:	(bad)  
  407b03:	(bad)  
  407b04:	inc    DWORD PTR [eax]
  407b06:	add    BYTE PTR [ecx],cl
  407b08:	jne    0x407b15
  407b0a:	push   cs
  407b0b:	adc    DWORD PTR ds:0x64ffff11,ecx
  407b11:	add    bh,bh
  407b13:	inc    DWORD PTR [ebx-0xa340001]
  407b19:	push   0x8
  407b1b:	inc    ebx
  407b1c:	ret    
  407b1d:	stos   BYTE PTR es:[edi],al
  407b1e:	cmp    edi,0x71
  407b21:	cmp    edi,0xffffffff
  407b24:	(bad)  
  407b25:	(bad)  
  407b26:	dec    DWORD PTR [eax]
  407b28:	push   ecx
  407b29:	out    0x79,eax
  407b2b:	mov    ecx,0x37f6
  407b30:	cmc    
  407b31:	dec    esp
  407b33:	mov    edi,edi
  407b35:	cmp    edi,0xfffffffc
  407b38:	dec    ecx
  407b39:	sbb    DWORD PTR [eax+0x56faf9],0xffffffff
  407b40:	mov    ebx,0xffff0083
  407b45:	cmp    edi,0x7e
  407b48:	fucomp st(5)
  407b4a:	add    ch,BYTE PTR [esi]
  407b4c:	not    DWORD PTR [eax+0x9bffff]
  407b52:	mov    edi,edi
  407b54:	add    bh,bh
  407b56:	(bad)  
  407b57:	fmul   QWORD PTR [esi+0x73]
  407b5a:	in     al,dx
  407b5b:	mov    ah,0x1e
  407b5d:	xchg   DWORD PTR [ecx+0xf0cc],ecx
  407b63:	int3   
  407b64:	add    DWORD PTR [eax],0xffffffff
  407b67:	es cmc 
  407b69:	jbe    0x407b67
  407b6b:	mov    edx,0xcc008c03
  407b70:	xor    al,0xff
  407b72:	cmp    edi,0xffffffff
  407b75:	add    BYTE PTR [eax],al
  407b77:	jae    0x407bcc
  407b79:	jae    0x407b52
  407b7b:	retf   0xc925
  407b7e:	add    BYTE PTR [ecx-0xffff3e],cl
  407b84:	int3   
  407b85:	(bad)  
  407b86:	call   DWORD PTR [edi-0x1a]
  407b89:	sbb    esi,ebp
  407b8b:	rcl    DWORD PTR ds:0xbfcc83cc,cl
  407b91:	add    BYTE PTR [eax],al
  407b93:	dec    esp
  407b95:	int3   
  407b96:	add    BYTE PTR [esi-0xa],dh
  407b99:	lea    edx,[eax-0xd4b2ec]
  407b9f:	mov    DWORD PTR [ebp+0xff0000],ecx
  407ba5:	int3   
  407ba6:	call   DWORD PTR [ecx]
  407ba8:	ins    DWORD PTR es:[edi],dx
  407ba9:	test   al,0xd1
  407bab:	mov    al,ds:0xff00b126
  407bb0:	fwait
  407bb1:	(bad)  
  407bb2:	inc    DWORD PTR [eax]
  407bb4:	inc    DWORD PTR [ebx+0x2c1e5100]
  407bba:	les    esp,FWORD PTR [ecx]
  407bbc:	cmp    eax,0x71ff00bd
  407bc1:	(bad)  
  407bc2:	dec    esp
  407bc4:	int3   
  407bc5:	(bad)  
  407bc6:	push   DWORD PTR [edi+0x4e36f015]
  407bcc:	mov    cl,0x46
  407bce:	mov    edi,edi
  407bd0:	mov    ebx,0xccffffff
  407bd5:	add    bh,bh
  407bd7:	sbb    DWORD PTR [ebx-0x15],0x1295a5e3
  407bde:	add    DWORD PTR [eax],0x73
  407be1:	inc    DWORD PTR [ebx-0xff7601]
  407be7:	and    BYTE PTR [edx+0x2b1542e0],bh
  407bed:	fs (bad) 
  407bef:	inc    DWORD PTR [ebx+eax*4-0x7cff77]
  407bf6:	dec    DWORD PTR ds:0xf509f86
  407bfc:	mov    ebx,0x268900de
  407c01:	add    bh,bh
  407c03:	mov    edi,edi
  407c05:	dec    DWORD PTR [ecx-0x5dd5fb6f]
  407c0b:	dec    edx
  407c0c:	sub    al,0xf6
  407c0e:	dec    DWORD PTR [ecx-0x330060]
  407c14:	add    BYTE PTR [eax],al
  407c16:	(bad)  
  407c17:	call   0x96bc6a20
  407c1c:	pop    ds
  407c1d:	and    edi,edi
  407c1f:	push   esi
  407c21:	add    bh,bh
  407c23:	int3   
  407c24:	add    bh,bh
  407c26:	adc    edx,0xffffffc3
  407c29:	ss cmp eax,0x763c39
  407c2f:	inc    DWORD PTR [edi+edi*8+0x0]
  407c33:	add    DWORD PTR [eax],0xffffffcc
  407c36:	adc    DWORD PTR [ecx+0x3b],0xffffff95
  407c3a:	out    dx,eax
  407c3b:	(bad)  
  407c3c:	out    dx,al
  407c3d:	adc    eax,DWORD PTR [ebx-0x7c8a00]
  407c43:	inc    DWORD PTR [ebx-0x46e80100]
  407c49:	and    al,0xa8
  407c4b:	cmp    DWORD PTR [esi],esi
  407c4d:	cmp    bh,bh
  407c4f:	add    BYTE PTR [eax-0x1],bl
  407c52:	inc    DWORD PTR [ebx-0x4c000034]
  407c58:	fsub   QWORD PTR [edi-0x55]
  407c5b:	pushf  
  407c5c:	pusha  
  407c5d:	std    
  407c5e:	inc    DWORD PTR [eax]
  407c60:	cli    
  407c61:	add    bh,bh
  407c63:	(bad)  
  407c64:	dec    esp
  407c66:	add    BYTE PTR [ebx-0xe],cl
  407c69:	rcl    BYTE PTR ds:[edx+0x47],1
  407c6d:	mov    edi,edi
  407c6f:	jmp    DWORD PTR [eax-0x1]
  407c72:	cmp    edi,0x0
  407c75:	inc    DWORD PTR [eax]
  407c77:	adc    DWORD PTR [edx+0x15d6f8ba],eax
  407c7d:	(bad)  
  407c7e:	(bad)  
  407c7f:	push   DWORD PTR ds:0xff00ff
  407c85:	cmp    edi,0xffffffaa
  407c88:	std    
  407c89:	inc    ecx
  407c8a:	(bad)  
  407c8b:	into   
  407c8c:	ins    BYTE PTR es:[edi],dx
  407c8d:	inc    edi
  407c8e:	mov    DWORD PTR [ebx-0x337c3347],eax
  407c94:	add    BYTE PTR [eax],al
  407c96:	mov    DWORD PTR [esi],edx
  407c98:	stos   BYTE PTR es:[edi],al
  407c99:	shl    BYTE PTR [esi+ebp*8],0xef
  407c9d:	out    0x83,eax
  407c9f:	(bad)  
  407ca0:	cli    
  407ca1:	dec    esp
  407ca3:	inc    DWORD PTR [ebx-0x31ebff7d]
  407ca9:	addr16 push cs
  407cab:	in     eax,dx
  407cac:	cmp    eax,0xbfccffa7
  407cb1:	add    BYTE PTR [ebx+0xff0000],al
  407cb7:	push   ss
  407cb8:	add    BYTE PTR [edx-0x65],0x4b
  407cbc:	inc    ebx
  407cbd:	and    ecx,esp
  407cbf:	add    BYTE PTR [ebx+eax*4],al
  407cc2:	cmp    edi,0xffffffff
  407cc5:	mov    edi,edi
  407cc7:	loopne 0x407cf0
  407cc9:	lahf   
  407cca:	(bad)  {k2}{z}
  407ccf:	int3   
  407cd0:	and    al,0xff
  407cd2:	int3   
  407cd3:	add    bh,bh
  407cd5:	cmp    edi,0xa
  407cd8:	cmp    bh,BYTE PTR [esi+0x144dd07f]
  407cde:	inc    DWORD PTR [eax]
  407ce0:	xor    eax,0xff000000
  407ce5:	inc    DWORD PTR [eax]
  407ce7:	ins    DWORD PTR es:[edi],dx
  407ce8:	inc    ebx
  407ce9:	rcr    BYTE PTR [ebx+0x8ebfe6],0xff
  407cf0:	or     eax,0xff89ffff
  407cf5:	int3   
  407cf6:	and    DWORD PTR [edi+edi*4-0x11f2cf40],0xffffff9c
  407cfe:	dec    esp
  407d00:	test   al,0xff
  407d02:	add    BYTE PTR [ecx+0x7e00ff00],cl
  407d08:	adc    BYTE PTR [edi],cl
  407d0a:	popa   
  407d0b:	mov    al,0x61
  407d0d:	(bad)  
  407d10:	pop    esp
  407d11:	inc    DWORD PTR [eax]
  407d13:	mov    edi,edi
  407d15:	cmp    edi,0x4
  407d18:	(bad)  
  407d19:	mov    ecx,0x36986da8
  407d1e:	add    bh,bh
  407d20:	ja     0x407d21
  407d22:	add    BYTE PTR [eax],al
  407d24:	add    BYTE PTR [eax],al
  407d26:	add    BYTE PTR [ebp+esi*2-0x5e],bh
  407d2a:	pusha  
  407d2b:	inc    edi
  407d2c:	cld    
  407d2d:	js     0x407d2e
  407d2f:	mov    DWORD PTR [ebx],ebx
  407d31:	or     DWORD PTR [ecx-0x7c01],0x5
  407d38:	pop    edi
  407d39:	mov    al,0xfa
  407d3b:	lock cmc 
  407d3d:	inc    DWORD PTR [bx+si]
  407d40:	xchg   ebx,eax
  407d41:	inc    DWORD PTR [ebx-0x7c7c0077]
  407d47:	jle    0x407d6c
  407d49:	mov    al,ds:0xa891bd75
  407d4e:	add    DWORD PTR [eax],0x64
  407d51:	cmp    edi,0x0
  407d54:	mov    edi,edi
  407d56:	call   DWORD PTR [edi]
  407d58:	add    dh,BYTE PTR [esi+0x24]
  407d5b:	dec    eax
  407d5c:	sbb    esp,DWORD PTR [esi+0xfdffff]
  407d62:	add    bh,bh
  407d64:	int3   
  407d65:	int3   
  407d66:	add    DWORD PTR [edx+esi*8],0xffffffb9
  407d6a:	adc    ah,BYTE PTR [ebx-0xa]
  407d6d:	stos   BYTE PTR es:[edi],al
  407d6e:	mov    edi,edi
  407d70:	cmp    edi,0xcc83ffff
  407d76:	inc    DWORD PTR [esi+edx*4]
  407d79:	mov    eax,ds:0x2a97b2a4
  407d7e:	add    bh,bh
  407d80:	pop    ss
  407d81:	add    bh,bh
  407d83:	add    bh,bh
  407d85:	add    BYTE PTR [eax],al
  407d87:	adc    al,0x6c
  407d89:	jmp    0xffff:0x28967d4b
  407d90:	call   0x83410794
  407d95:	add    ah,cl
  407d97:	pop    esp
  407d98:	fdiv   QWORD PTR [ecx-0x2d]
  407d9b:	mov    edx,DWORD PTR [esi+0xa]
  407d9e:	add    bh,bh
  407da0:	sar    edi,1
  407da2:	(bad)  
  407da3:	inc    DWORD PTR [ebx-0x3e533301]
  407da9:	jl     0x407e02
  407dab:	(bad)  
  407dac:	pop    ss
  407dad:	es dec esp
  407db0:	xchg   esp,eax
  407db1:	add    BYTE PTR [eax],al
  407db3:	add    BYTE PTR [eax],al
  407db5:	mov    DWORD PTR [ecx-0x1f0a5512],ecx
  407dbb:	enter  0xba56,0x0
  407dbf:	mov    DWORD PTR [eax-0xff7c01],ecx
  407dc5:	add    BYTE PTR [eax],al
  407dc7:	inc    ebp
  407dc8:	int    0xbc
  407dca:	out    dx,eax
  407dcb:	sti    
  407dcc:	mov    ebx,0xaaffff98
  407dd1:	(bad)  
  407dd2:	(bad)  
  407dd3:	inc    DWORD PTR [eax]
  407dd5:	(bad)  
  407dd6:	inc    DWORD PTR [ecx-0x7d6c14d4]
  407ddc:	bound  ebp,QWORD PTR [edx+0x5a00ff]
  407de2:	(bad)  
  407de3:	(bad)  
  407de4:	dec    DWORD PTR [ecx-0x5758a501]
  407dea:	mov    edi,0xcc996488
  407def:	add    BYTE PTR [edx],bh
  407df1:	int3   
  407df2:	add    bh,bh
  407df4:	(bad)  
  407df5:	inc    DWORD PTR [eax]
  407df7:	das    
  407df8:	lock or ah,BYTE PTR [eax+edi*2+0x3c]
  407dfd:	fdivr  st,st(7)
  407dff:	add    BYTE PTR [ebp-0x33333334],bl
  407e05:	inc    DWORD PTR [eax]
  407e07:	jge    0x407d9d
  407e09:	cmp    bl,BYTE PTR [esi]
  407e0b:	xor    bh,BYTE PTR [esi]
  407e0d:	dec    ebp
  407e0e:	(bad)  
  407e0f:	(bad)  
  407e10:	cmp    DWORD PTR [eax],eax
  407e12:	add    bh,bh
  407e14:	(bad)  
  407e15:	(bad)  
  407e16:	jmp    DWORD PTR [edx-0x7166b0a8]
  407e1c:	pop    ecx
  407e1d:	popf   
  407e1e:	cmp    edi,0xffffffeb
  407e21:	(bad)  
  407e22:	inc    DWORD PTR [ebx-0x5800ff77]
  407e28:	imul   eax,DWORD PTR [ebx-0x1e235c2],0xffa489ff
  407e32:	cmp    edi,0xffffffff
  407e35:	add    BYTE PTR [ecx-0x422a923],cl
  407e3b:	push   esi
  407e3c:	and    ch,bl
  407e3e:	cmp    edi,0xffffffca
  407e41:	inc    DWORD PTR [ebx-0x7c0077]
  407e47:	sar    DWORD PTR [eax+0x2d613b25],cl
  407e4d:	mov    al,ds:0x83de89ff
  407e52:	add    ah,cl
  407e54:	add    DWORD PTR [ebx+0x19e06a89],0x72
  407e5b:	mov    BYTE PTR [eax+0x3cffff97],al
  407e61:	(bad)  
  407e62:	inc    DWORD PTR [eax]
  407e64:	(bad)  
  407e65:	inc    DWORD PTR [eax]
  407e67:	push   eax
  407e68:	pushf  
  407e69:	mov    cl,0x38
  407e6b:	xchg   esi,eax
  407e6c:	stos   DWORD PTR es:[edi],eax
  407e6d:	or     edi,edi
  407e6f:	add    BYTE PTR [ebx],dh
  407e71:	inc    DWORD PTR [eax]
  407e73:	add    bh,bh
  407e75:	mov    edi,edi
  407e77:	repz and al,0xee
  407e7a:	xchg   esp,eax
  407e7b:	sbb    BYTE PTR [esi],0xfd
  407e7e:	add    BYTE PTR [ecx-0xff000f],cl
  407e84:	add    BYTE PTR [eax],al
  407e86:	int3   
  407e87:	rol    DWORD PTR [edx],0x85
  407e8a:	push   ss
  407e8b:	std    
  407e8c:	xchg   ecx,eax
  407e8d:	ja     0x407e8f
  407e8f:	jmp    FWORD PTR [ebp-0x34]
  407e92:	add    DWORD PTR [ebx+0x52ff89ff],0x33
  407e99:	dec    eax
  407e9a:	fsub   QWORD PTR [edx-0x760028bf]
  407ea0:	int    0x0
  407ea2:	mov    DWORD PTR [ebx-0x1cff0100],eax
  407ea8:	sub    DWORD PTR [edx+0x12706273],eax
  407eae:	add    bh,bh
  407eb0:	dec    esi
  407eb1:	add    bh,bh
  407eb3:	add    BYTE PTR [eax],al
  407eb5:	add    BYTE PTR [ecx-0x2ae31f1],cl
  407ebb:	out    0x1d,al
  407ebd:	arpl   WORD PTR [eax],ax
  407ebf:	adc    DWORD PTR [edi-0x77],0xffffffff
  407ec3:	inc    DWORD PTR [eax]
  407ec5:	add    DWORD PTR [eax],0x9
  407ec8:	cmp    al,BYTE PTR [ebp+0x3a07036]
  407ece:	add    bh,bh
  407ed0:	aaa    
  407ed1:	add    DWORD PTR [ebx-0x7c003400],0xffffffba
  407ed8:	cdq    
  407ed9:	lds    ebx,FWORD PTR [ebx-0x5]
  407edc:	mov    ch,0xe2
  407ede:	int3   
  407edf:	add    BYTE PTR [esi-0x33010000],ch
  407ee5:	add    bh,bh
  407ee7:	xor    BYTE PTR [ebx-0xa],al
  407eea:	xor    ebx,DWORD PTR [esi-0xff01f8]
  407ef0:	sbb    bh,bh
  407ef2:	or     DWORD PTR [ecx+0x408300cc],0xffffff8a
  407ef9:	imul   BYTE PTR [edi+eiz*4-0xa1ef]
  407f00:	xchg   ebx,eax
  407f01:	(bad)  
  407f02:	(bad)  
  407f03:	(bad)  
  407f04:	dec    esp
  407f06:	mov    DWORD PTR [ecx+0x6f],ecx
  407f09:	test   al,0xaa
  407f0b:	xlat   BYTE PTR ds:[ebx]
  407f0c:	mov    ds:0x9d83fff1,eax
  407f11:	inc    DWORD PTR [eax]
  407f13:	add    bh,bh
  407f15:	(bad)  
  407f16:	(bad)  
  407f17:	mov    edi,0x2d9e7992
  407f1c:	fwait
  407f1d:	sar    bh,0xcc
  407f20:	ins    DWORD PTR es:[edi],dx
  407f21:	inc    DWORD PTR [ebx-0x330001]
  407f27:	test   DWORD PTR [esi],0x42b4d062
  407f2d:	jb     0x407f2e
  407f2f:	add    BYTE PTR [eax-0x1],bl
  407f32:	inc    DWORD PTR [eax]
  407f34:	inc    DWORD PTR [eax]
  407f36:	(bad)  
  407f37:	js     0x407f79
  407f39:	and    ebp,ebp
  407f3b:	jecxz  0x407f34
  407f3d:	xor    eax,0xcc89cc89
  407f42:	add    DWORD PTR [eax],0xffffffff
  407f45:	add    BYTE PTR [eax],al
  407f47:	push   ebx
  407f48:	es das 
  407f4a:	mov    ah,0x47
  407f4c:	or     ebp,0xff34ffff
  407f52:	add    DWORD PTR [eax],0x0
  407f55:	mov    esp,ecx
  407f57:	std    
  407f58:	in     al,0xa4
  407f5a:	mov    DWORD PTR [ecx],edi
  407f5c:	xchg   DWORD PTR [edi],esi
  407f5e:	add    bh,bh
  407f60:	mov    WORD PTR [eax],es
  407f62:	dec    esp
  407f64:	(bad)  
  407f65:	(bad)  
  407f66:	(bad)  
  407f67:	ds mov esp,0xa869d363
  407f6d:	ret    0xff83
  407f70:	push   ebx
  407f71:	(bad)  
  407f72:	inc    DWORD PTR [eax]
  407f74:	add    DWORD PTR [eax],0x0
  407f77:	sub    DWORD PTR [ebp-0x6a663db],esp
  407f7d:	jnp    0x407f7e
  407f7f:	int3   
  407f80:	dec    sp
  407f83:	add    BYTE PTR [eax],al
  407f85:	inc    DWORD PTR [eax]
  407f87:	jg     0x407f30
  407f89:	dec    ecx
  407f8a:	and    edx,DWORD PTR ds:0xff00cabb
  407f90:	mov    esi,0xcc0089ff
  407f95:	add    BYTE PTR [eax],al
  407f97:	popf   
  407f98:	(bad)  
  407f99:	xchg   esp,eax
  407f9a:	jl     0x407f22
  407f9c:	mov    edx,0xd08300dd
  407fa1:	mov    edi,edi
  407fa3:	inc    DWORD PTR [eax]
  407fa5:	add    bh,bh
  407fa7:	push   es
  407fa8:	aaa    
  407fa9:	lahf   
  407faa:	push   0xffffff80
  407fac:	dec    ecx
  407fad:	or     BYTE PTR [eax],al
  407faf:	add    BYTE PTR [eax+eax*1],dh
  407fb2:	(bad)  
  407fb3:	(bad)  
  407fb4:	inc    DWORD PTR [eax]
  407fb6:	dec    DWORD PTR [edx]
  407fb8:	test   eax,0x67f1413a
  407fbd:	and    edi,edi
  407fbf:	and    DWORD PTR [eax+0x0],0xffffff89
  407fc3:	(bad)  
  407fc4:	inc    DWORD PTR [eax]
  407fc6:	add    ch,dh
  407fc8:	lods   eax,DWORD PTR ds:[esi]
  407fc9:	lds    ecx,FWORD PTR [edi+edx*4-0x49]
  407fcd:	push   edi
  407fce:	add    ah,cl
  407fd0:	or     al,BYTE PTR [ebx+0x0]
  407fd6:	inc    DWORD PTR [ebx-0x1aed1a33]
  407fdc:	or     DWORD PTR [edx-0x620100],edx
  407fe2:	inc    DWORD PTR [eax]
  407fe4:	inc    DWORD PTR [eax]
  407fe6:	mov    DWORD PTR [ebp+0x74],edi
  407fe9:	aaa    
  407fea:	push   edx
  407feb:	fisttp WORD PTR [edi-0x7f]
  407fee:	mov    edi,edi
  407ff0:	mov    ch,0xff
  407ff2:	mov    DWORD PTR [eax],eax
  407ff4:	(bad)  
  407ff5:	inc    DWORD PTR [eax]
  407ff7:	dec    edx
  407ff8:	mov    cs,ebp
  407ffa:	jno    0x40800b
  407ffc:	jge    0x407fde
  407ffe:	add    DWORD PTR [eax],0xffffff93
  408001:	(bad)  
  408002:	(bad)  
  408003:	dec    esp
  408005:	int3   
  408006:	or     DWORD PTR [edx+ebx*1+0xf],0xffffffdd
  40800b:	and    dh,dh
  40800d:	mov    edx,0xa2ffff
  408012:	cmp    edi,0x0
  408015:	mov    DWORD PTR [eax],eax
  408017:	call   0x56dc:0x8e57d2e3
  40801e:	add    DWORD PTR [ebx+0xff57],0xffffffff
  408025:	dec    esp
  408027:	ins    BYTE PTR es:[edi],dx
  408028:	xchg   ecx,eax
  408029:	xor    al,0xfe
  40802b:	or     DWORD PTR [ebx+edx*8-0x877677],ebp
  408032:	(bad)  
  408033:	(bad)  
  408034:	inc    DWORD PTR [eax]
  408036:	add    BYTE PTR [edx+0x580a492],al
  40803c:	add    al,0x55
  40803e:	inc    DWORD PTR [ebx-0x33ffff5b]
  408044:	add    BYTE PTR [ebx-0xb09db7d],al
  40804a:	dec    esp
  40804b:	push   edi
  40804c:	je     0x408021
  40804e:	(bad)  
  40804f:	call   DWORD PTR [eax+eax*1]
  408052:	add    BYTE PTR [ebx-0x1c000001],al
  408058:	xchg   esi,eax
  408059:	pop    ds
  40805a:	mov    ds:0xffa95e11,al
  40805f:	push   DWORD PTR [edi+edi*8]
  408062:	add    DWORD PTR [eax],0x0
  408065:	add    DWORD PTR [eax],0x4
  408068:	mov    dh,BYTE PTR [esi]
  40806a:	imul   edi,esp,0xbf35
  408070:	add    DWORD PTR [eax],eax
  408072:	(bad)  
  408073:	(bad)  
  408074:	(bad)  
  408075:	(bad)  
  408076:	(bad)  
  408077:	cli    
  408078:	jle    0x40805c
  40807a:	push   0xff544bcf
  40807f:	add    bh,bl
  408081:	(bad)  
  408082:	(bad)  
  408083:	(bad)  
  408084:	(bad)  
  408085:	dec    DWORD PTR [ecx-0x51fc9d3c]
  40808b:	stc    
  40808c:	push   ebp
  40808d:	mov    bl,0x0
  40808f:	add    DWORD PTR [edx-0xff0001],0x0
  408096:	add    BYTE PTR [esi-0x53c89a4f],dl
  40809c:	fld    st(4)
  40809e:	inc    DWORD PTR [eax]
  4080a0:	mov    dh,0xff
  4080a2:	int3   
  4080a3:	mov    DWORD PTR [ecx+0x28b40000],ecx
  4080a9:	dec    edx
  4080aa:	ret    
  4080ab:	outs   dx,BYTE PTR ds:[esi]
  4080ac:	addr16 mov esp,0xd5ffff
  4080b2:	(bad)  
  4080b3:	(bad)  
  4080b4:	inc    DWORD PTR [eax]
  4080b6:	call   DWORD PTR [ebp-0x65ff9e7d]
  4080bc:	lods   eax,DWORD PTR ds:[esi]
  4080bd:	fxch   st(4)
  4080bf:	dec    DWORD PTR [ebp+0x0]
  4080c2:	dec    DWORD PTR [ecx+0x4b0083ff]
  4080c8:	jg     0x408094
  4080ca:	mov    ch,0xd7
  4080cc:	mov    ebp,0x40ccffad
  4080d1:	inc    DWORD PTR [eax]
  4080d3:	(bad)  
  4080d4:	(bad)  
  4080d5:	dec    DWORD PTR [ecx-0x42609fa8]
  4080db:	popf   
  4080dc:	inc    edi
  4080dd:	mov    edi,edi
  4080df:	add    edx,0xffffffff
  4080e2:	(bad)  
  4080e3:	(bad)  
  4080e4:	(bad)  
  4080e5:	(bad)  
  4080e6:	dec    DWORD PTR [esi-0x1b]
  4080e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ea:	adc    eax,0x830c9d2d
  4080ef:	jmp    FWORD PTR [edi-0x7c7c7c01]
  4080f5:	inc    DWORD PTR [eax]
  4080f7:	and    eax,0x763a109c
  4080fc:	setno  BYTE PTR [eax]
  4080ff:	call   DWORD PTR [edi+0x0]
  408102:	inc    DWORD PTR [eax]
  408104:	inc    DWORD PTR [eax]
  408106:	mov    DWORD PTR [edi+0x579e5ffe],edx
  40810c:	adc    al,dh
  40810e:	inc    DWORD PTR [eax]
  408110:	cld    
  408111:	(bad)  
  408112:	(bad)  
  408113:	inc    DWORD PTR [eax]
  408115:	add    bh,bh
  408117:	outs   dx,BYTE PTR ds:[esi]
  408118:	gs push ds
  40811a:	jecxz  0x408174
  40811c:	in     al,0x59
  40811e:	inc    DWORD PTR [ebx+0xff000c]
  408124:	inc    DWORD PTR [eax]
  408126:	int3   
  408127:	out    dx,eax
  408128:	and    BYTE PTR [eax+0x479750b9],bh
  40812e:	mov    DWORD PTR [eax],eax
  408130:	jle    0x408132
  408132:	(bad)  
  408133:	(bad)  
  408134:	(bad)  
  408135:	(bad)  
  408136:	(bad)  
  408137:	mov    edi,0x1744419
  40813c:	cmp    bl,ch
  40813e:	(bad)  
  40813f:	jmp    DWORD PTR [edx-0x1]
  408142:	dec    DWORD PTR [ecx-0x14000100]
  408148:	xor    DWORD PTR [ecx-0x360fffcf],esp
  40814e:	add    BYTE PTR [ecx-0x7c007e],cl
  408154:	add    DWORD PTR [eax],0xffffffff
  408157:	mov    ch,0xe2
  408159:	cs ins BYTE PTR es:[edi],dx
  40815b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40815c:	lea    ebp,[ecx-0x34]
  40815f:	and    DWORD PTR [eax+eax*1-0xff7d],0xffffffcc
  408167:	sti    
  408168:	loopne 0x408171
  40816a:	mov    ebp,0xff9af324
  40816f:	adc    DWORD PTR [edx],0xffffff83
  408172:	or     esp,0xffffffcc
  408175:	cmp    edi,0xffffffb5
  408178:	jb     0x4081cb
  40817a:	mov    WORD PTR [esi],gs
  40817c:	adc    ebp,eax
  40817e:	add    DWORD PTR [eax],0xffffff89
  408181:	inc    DWORD PTR [eax]
  408183:	(bad)  
  408184:	dec    DWORD PTR [ecx+0x6bb12800]
  40818a:	fdivr  QWORD PTR [edx]
  40818c:	sbb    bh,cl
  40818e:	dec    DWORD PTR [ecx-0x7cff0035]
  408194:	add    BYTE PTR [ecx+0x2eb71aff],cl
  40819a:	(bad)  
  40819b:	ja     0x408204
  40819d:	cmc    
  40819e:	mov    DWORD PTR [eax],eax
  4081a0:	sahf   
  4081a1:	inc    DWORD PTR [eax]
  4081a3:	add    BYTE PTR [eax],al
  4081a5:	or     DWORD PTR [ecx-0x536b2da0],0x6a
  4081ac:	xchg   ecx,eax
  4081ad:	fs (bad) 
  4081af:	push   DWORD PTR [ecx+ecx*4]
  4081b2:	add    BYTE PTR [eax],al
  4081b4:	inc    DWORD PTR [eax]
  4081b6:	mov    esp,ebp
  4081b8:	outs   dx,BYTE PTR ds:[esi]
  4081ba:	jne    0x40815f
  4081bc:	loopne 0x40818f
  4081be:	add    bh,bh
  4081c0:	push   ebp
  4081c1:	add    BYTE PTR [eax],al
  4081c3:	add    ah,cl
  4081c5:	(bad)  
  4081c6:	jmp    DWORD PTR [ecx+0x2dda8439]
  4081cc:	cmp    al,dl
  4081ce:	mov    DWORD PTR [ebx-0x7cc5],eax
  4081d4:	add    bh,bh
  4081d6:	sub    DWORD PTR [esi+0x15],0xffffffd0
  4081da:	sar    DWORD PTR [esp+eiz*8+0x75],1
  4081de:	add    bh,bh
  4081e0:	jmp    0xff00:0xff000000
  4081e7:	mov    al,ds:0x76ac6db9
  4081ec:	imul   ebp,ebp,0x83490083
  4081f2:	dec    DWORD PTR [ecx+0x47ffffff]
  4081f8:	addr16 jp 0x408198
  4081fb:	enter  0x901a,0x83
  4081ff:	sub    DWORD PTR [ebx+eax*4+0x0],0xffffff89
  408204:	inc    DWORD PTR [ebx+0x7844a6ff]
  40820a:	shl    DWORD PTR [ebp-0x2c],0xb3
  40820e:	add    bh,bh
  408210:	loope  0x408212
  408212:	dec    esp
  408214:	add    BYTE PTR [eax],al
  408216:	call   FWORD PTR [ebx-0x7e477e52]
  40821c:	jae    0x408211
  40821e:	add    bh,bh
  408220:	(bad)  
  408222:	inc    DWORD PTR [eax]
  408224:	add    BYTE PTR [eax],al
  408226:	jmp    ebx
  408228:	test   DWORD PTR [edi-0x47c6b385],0xff2200ff
  408232:	int3   
  408233:	inc    DWORD PTR [eax]
  408235:	(bad)  
  408236:	(bad)  
  408237:	call   DWORD PTR [ecx+0x489fee7d]
  40823d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823e:	add    DWORD PTR [eax],0x70
  408241:	add    BYTE PTR [ebx-0xff34],al
  408247:	clc    
  408248:	jo     0x408298
  40824a:	cmp    al,0xfd
  40824c:	mov    esp,0x9700ff77
  408251:	or     DWORD PTR [ecx-0x7c7c01],0x13
  408258:	adc    al,0xaf
  40825a:	dec    ecx
  40825b:	adc    DWORD PTR [ebx+0x17],ebx
  40825e:	add    ah,cl
  408260:	dec    eax
  408261:	(bad)  
  408262:	inc    DWORD PTR [eax]
  408264:	(bad)  
  408265:	(bad)  
  408266:	jmp    FWORD PTR [ebx]
  408268:	fld    TBYTE PTR [ebx]
  40826a:	stos   BYTE PTR es:[edi],al
  40826b:	popf   
  40826c:	shl    DWORD PTR [ebp+0x0],cl
  40826f:	call   FWORD PTR [eax-0x7c010000]
  408275:	add    BYTE PTR [eax],al
  408277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408278:	push   esp
  408279:	push   edi
  40827a:	push   edx
  40827b:	and    DWORD PTR [edx+ebp*2-0x1],0xa889
  408283:	add    BYTE PTR [eax],al
  408285:	add    BYTE PTR [eax],al
  408287:	loopne 0x4082e0
  408289:	outs   dx,DWORD PTR ds:[esi]
  40828a:	sar    DWORD PTR [edi-0x76bb],cl
  408290:	push   es
  408291:	mov    edi,edi
  408293:	inc    DWORD PTR [ebx-0x2d6b0001]
  408299:	div    BYTE PTR [ebx]
  40829b:	pop    ds
  40829c:	out    dx,al
  40829d:	jp     0x40829e
  40829f:	add    DWORD PTR [ecx-0x7c7c0001],0xffffffff
  4082a6:	mov    DWORD PTR [ebp+0x2a],esp
  4082a9:	push   ecx
  4082aa:	or     dh,dh
  4082ac:	push   ecx
  4082ad:	mov    eax,0xff178383
  4082b2:	or     DWORD PTR [ecx+0x63ff83ff],0xffffffcc
  4082b9:	out    dx,eax
  4082ba:	sub    esi,0x1e
  4082bd:	dec    ebp
  4082be:	inc    DWORD PTR [ebx-0x33ff00c2]
  4082c4:	inc    DWORD PTR [eax]
  4082c6:	add    DWORD PTR [eax],0xd
  4082c9:	jmp    0x8300:0x1c39f239
  4082d0:	fmul   st(4),st
  4082d2:	add    BYTE PTR [ecx-0xa007d00],cl
  4082d8:	and    bh,BYTE PTR [esi+0x475a01ef]
  4082de:	add    BYTE PTR [eax],al
  4082e0:	sti    
  4082e1:	add    DWORD PTR [eax],0x0
  4082e4:	(bad)  
  4082e5:	dec    esp
  4082e7:	sbb    al,0x9d
  4082e9:	pop    edi
  4082ea:	xchg   ebp,eax
  4082eb:	and    DWORD PTR [eax+edx*2-0x1],esi
  4082ef:	add    BYTE PTR [esi-0x76007601],al
  4082f5:	int3   
  4082f6:	jmp    FWORD PTR [ecx]
  4082f8:	sahf   
  4082f9:	mov    ebx,0x1eebcf96
  4082fe:	(bad)  
  4082ff:	inc    DWORD PTR [ebp-0x7c007700]
  408305:	cmp    edi,0xf
  408308:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40830a:	or     DWORD PTR [ebp+0x7f],0xccff52
  408311:	cmp    edi,0x0
  408314:	(bad)  
  408315:	inc    DWORD PTR [eax]
  408317:	and    DWORD PTR [edx-0x207920b7],edi
  40831d:	cmp    cl,ah
  40831f:	inc    DWORD PTR [ecx]
  408321:	add    bh,bh
  408323:	(bad)  
  408324:	dec    DWORD PTR [ecx-0x6e90d200]
  40832a:	push   ebx
  40832b:	aas    
  40832c:	or     edi,esp
  40832e:	int3   
  40832f:	push   DWORD PTR [edi-0x1]
  408332:	cmp    edi,0xffffffff
  408335:	(bad)  
  408336:	jmp    DWORD PTR [edi+ebp*8-0x1785e110]
  40833d:	icebp  
  40833e:	add    BYTE PTR [ecx+0xcc6e],cl
  408344:	inc    DWORD PTR [eax]
  408346:	dec    DWORD PTR [edx]
  408348:	mov    bh,BYTE PTR [esi+ebx*8-0x767575f6]
  40834f:	jmp    FWORD PTR [edi-0x7c0001]
  408355:	cmp    edi,0x1f
  408358:	push   esi
  408359:	lock rcl ebp,0x78
  40835d:	je     0x40832b
  40835f:	jmp    FWORD PTR [ebx-0x1]
  408362:	int3   
  408363:	dec    DWORD PTR [ecx-0x7abf7d00]
  408369:	mov    bh,0xb0
  40836b:	stos   BYTE PTR es:[edi],al
  40836c:	ds sahf 
  40836e:	add    bh,bh
  408370:	add    edi,edi
  408372:	inc    DWORD PTR [eax]
  408374:	cmp    edi,0xffffffff
  408377:	jl     0x408394
  408379:	call   0xfee20504
  40837e:	(bad)  
  40837f:	call   FWORD PTR [ecx]
  408381:	or     esp,0xffffff83
  408384:	int3   
  408385:	add    BYTE PTR [eax],al
  408387:	inc    esi
  408388:	mov    edx,0x3e34320
  40838d:	or     eax,0xff03cccc
  408392:	add    BYTE PTR [ecx+0xdff89ff],cl
  408398:	imul   BYTE PTR [esp+ebp*2+0x4]
  40839c:	push   edx
  40839d:	pop    DWORD PTR [eax]
  40839f:	(bad)  
  4083a0:	jmp    0x8a0d07a4
  4083a5:	cmp    edi,0xffffffbe
  4083a8:	iret   
  4083a9:	sar    dl,cl
  4083ab:	pop    ebp
  4083ac:	and    ebp,ecx
  4083ae:	inc    DWORD PTR [ebx-0xff28]
  4083b4:	add    bh,bh
  4083b6:	inc    DWORD PTR [ebx+0x54]
  4083b9:	sub    ebp,eax
  4083bb:	pop    ebp
  4083bc:	add    DWORD PTR [eax-0x77],edi
  4083bf:	or     DWORD PTR [eax+eax*1-0x7677],0xffffffff
  4083c7:	inc    ecx
  4083c8:	or     BYTE PTR [esi-0x1097d92e],dl
  4083ce:	add    BYTE PTR [ebx-0x7c00ff14],al
  4083d4:	add    ah,cl
  4083d6:	(bad)  
  4083d7:	(bad)  
  4083d8:	ds inc eax
  4083da:	shr    BYTE PTR [edx],cl
  4083dc:	rol    dl,0x83
  4083df:	add    esi,0xffffff83
  4083e2:	inc    DWORD PTR [eax]
  4083e4:	add    BYTE PTR [eax],al
  4083e6:	mov    ebx,esi
  4083e8:	hlt    
  4083e9:	mov    bh,0xf8
  4083eb:	in     eax,dx
  4083ec:	jecxz  0x408388
  4083ee:	(bad)  
  4083ef:	dec    DWORD PTR [edi-0x7d]
  4083f2:	dec    esp
  4083f4:	int3   
  4083f5:	int3   
  4083f6:	(bad)  
  4083f7:	fdiv   st,st(0)
  4083f9:	adc    edx,DWORD PTR [ebp-0x17]
  4083fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083fd:	cmc    
  4083fe:	cmp    edi,0xffffff9e
  408401:	cmp    edi,0x0
  408404:	mov    DWORD PTR [ebx+0x290428ff],eax
  40840a:	push   ebx
  40840b:	test   DWORD PTR [eax],eax
  40840d:	(bad)  
  40840e:	(bad)  
  40840f:	dec    DWORD PTR [ebx-0xff0100]
  408415:	(bad)  
  408416:	dec    DWORD PTR [ebx+0x25fd448c]
  40841c:	adc    BYTE PTR [ebx+eax*4],bl
  40841f:	add    BYTE PTR ds:0xffffff,ah
  408425:	int3   
  408426:	push   DWORD PTR [edx+0x1b]
  408429:	popa   
  40842a:	fsincos 
  40842c:	cli    
  40842d:	add    al,0x0
  40842f:	int3   
  408430:	into   
  408431:	int3   
  408432:	mov    edi,edi
  408434:	(bad)  
  408435:	(bad)  
  408436:	push   DWORD PTR [edi+0xb4f4aa1]
  40843c:	in     al,0xa9
  40843e:	inc    DWORD PTR [ebx-0xff008d]
  408444:	int3   
  408445:	add    BYTE PTR [eax],al
  408447:	loop   0x4084b4
  408449:	pop    esp
  40844a:	jecxz  0x408401
  40844c:	stos   DWORD PTR es:[edi],eax
  40844d:	lods   al,BYTE PTR ds:[esi]
  40844e:	inc    DWORD PTR [eax]
  408450:	mov    bl,0x83
  408452:	add    BYTE PTR [ebx-0x38007c01],al
  408458:	push   edi
  408459:	adc    DWORD PTR [eax-0x647fbb],ebp
  40845f:	adc    DWORD PTR [esi-0x1],0xffffff89
  408463:	inc    DWORD PTR [eax]
  408465:	add    BYTE PTR [ebx-0x3ccc3e52],al
  40846b:	ds jo  0x4084ca
  40846e:	inc    DWORD PTR [ebx-0x767cfff5]
  408474:	(bad)  
  408475:	dec    esp
  408477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408478:	sub    BYTE PTR [edx],bl
  40847a:	unpcklps xmm2,XMMWORD PTR [edi+esi*8-0x1]
  40847f:	add    esp,0x0
  408482:	add    DWORD PTR [eax],0xffffffff
  408485:	add    BYTE PTR [eax],al
  408487:	mov    edi,gs
  408489:	(bad)  
  40848a:	pop    ss
  40848b:	mov    esi,0x83ff5112
  408490:	aad    0x0
  408492:	inc    DWORD PTR [eax]
  408494:	add    bh,bh
  408496:	add    BYTE PTR [edx+0x6],cl
  408499:	outs   dx,DWORD PTR ds:[esi]
  40849a:	pop    eax
  40849b:	push   ebx
  40849c:	dec    eax
  40849d:	idiv   bh
  40849f:	add    BYTE PTR [ebp-0x100],ch
  4084a5:	add    bh,bh
  4084a7:	add    BYTE PTR [esi],ch
  4084a9:	jmp    0xffff:0x237a4923
  4084b0:	or     bh,bh
  4084b2:	inc    DWORD PTR [ebx-0x7c330001]
  4084b8:	dec    edi
  4084b9:	inc    edx
  4084ba:	pop    ecx
  4084bb:	pop    ebp
  4084bc:	dec    edi
  4084bd:	cmp    edi,0x890000
  4084c3:	(bad)  
  4084c4:	(bad)  
  4084c5:	(bad)  
  4084c6:	call   FWORD PTR [eax+0x972a2ad]
  4084cc:	jmp    0x72408425
  4084d1:	int3   
  4084d2:	(bad)  
  4084d3:	dec    esp
  4084d5:	add    bh,bh
  4084d7:	jb     0x4084c3
  4084d9:	xor    ebp,DWORD PTR [ecx]
  4084db:	xchg   ecx,eax
  4084dc:	pop    ebx
  4084dd:	das    
  4084de:	add    bh,bh
  4084e0:	daa    
  4084e1:	add    ah,cl
  4084e3:	mov    DWORD PTR [ebx+0x3c7383ff],eax
  4084e9:	dec    ebx
  4084ea:	pusha  
  4084eb:	pop    eax
  4084ec:	and    al,0xdd
  4084ee:	add    DWORD PTR [eax],0xffffffaf
  4084f1:	inc    DWORD PTR [ebx-0x7d]
  4084f7:	mov    ?,ebp
  4084f9:	aam    0xf0
  4084fb:	push   0xff00e7dd
  408500:	jp     0x408485
  408502:	add    BYTE PTR [eax],al
  408504:	add    bh,bh
  408506:	inc    ecx
  408508:	shr    BYTE PTR [eax],1
  40850a:	and    DWORD PTR [ebp+0x56],eax
  40850d:	outs   dx,BYTE PTR ds:[esi]
  40850e:	add    ah,cl
  408510:	or     BYTE PTR [eax],al
  408512:	add    bh,bh
  408514:	add    DWORD PTR [eax],0xffffffff
  408517:	or     eax,0x364bcea8
  40851c:	sbb    DWORD PTR [eax],esi
  40851e:	add    bh,bh
  408520:	and    edi,edi
  408522:	inc    DWORD PTR [eax]
  408524:	add    BYTE PTR [eax],al
  408526:	add    BYTE PTR [esp+ebp*8+0x58],bh
  40852a:	test   DWORD PTR [edx+edx*8],0xe8cc000b
  408531:	inc    DWORD PTR [ebx+0xcc00]
  408537:	add    ebp,DWORD PTR [eax-0x55f88d6d]
  40853d:	iret   
  40853e:	dec    esp
  408540:	ret    0xcc83
  408543:	inc    DWORD PTR [eax]
  408545:	inc    DWORD PTR [eax]
  408547:	adc    bh,BYTE PTR [edi+0x1197ea4]
  40854d:	dec    BYTE PTR [ecx-0x307d]
  408553:	dec    DWORD PTR [ecx-0x6c130001]
  408559:	or     BYTE PTR [eax+ebx*1-0xff10d6],0x5
  408561:	int3   
  408562:	(bad)  
  408563:	inc    DWORD PTR [ebx-0x3e310001]
  408569:	cmp    BYTE PTR [edx-0x13],bh
  40856c:	sub    al,0x29
  40856e:	inc    DWORD PTR [eax]
  408570:	(bad)  
  408572:	int3   
  408573:	cmp    edi,0xffffff89
  408576:	mov    DWORD PTR [esi-0x34],edx
  408579:	mov    ?,WORD PTR [esi]
  40857b:	pushf  
  40857c:	pop    edi
  40857d:	cdq    
  40857e:	(bad)  
  40857f:	inc    DWORD PTR [ebp-0x77]
  408582:	add    bh,bh
  408584:	cmp    edi,0xffffffff
  408587:	inc    ebp
  408588:	mov    esp,0xe0cc266b
  40858d:	cmp    al,0xff
  40858f:	call   FWORD PTR [ebp+0x0]
  408592:	(bad)  
  408593:	inc    DWORD PTR [eax]
  408595:	mov    edi,edi
  408597:	jns    0x408548
  408599:	retf   
  40859a:	push   0xcc907700
  40859f:	call   FWORD PTR [ecx+ecx*4]
  4085a2:	add    DWORD PTR [ebx+0x69ffccff],0x77
  4085a9:	sbb    dh,BYTE PTR [edi-0x76cb8c14]
  4085af:	mov    DWORD PTR [ecx+0xffff89],esi
  4085b5:	(bad)  
  4085b6:	jmp    DWORD PTR [eax+edx*4]
  4085b9:	lods   al,BYTE PTR ds:[esi]
  4085ba:	leave  
  4085bb:	and    eax,0x89ccb542
  4085c0:	xor    al,BYTE PTR [ebx+0xffff]
  4085c6:	jmp    FWORD PTR [ebx]
  4085c8:	jmp    0xc8b65a0e
  4085cd:	stc    
  4085ce:	mov    DWORD PTR [ebx+0xffff4c],eax
  4085d4:	cmp    edi,0xffffffff
  4085d7:	pop    ecx
  4085d8:	push   eax
  4085d9:	xor    bl,BYTE PTR [ebp+0x2]
  4085dc:	mov    dl,0xf8
  4085de:	dec    esp
  4085e0:	in     al,0x0
  4085e2:	(bad)  
  4085e3:	inc    DWORD PTR [eax]
  4085e5:	(bad)  
  4085e6:	dec    DWORD PTR [ecx]
  4085e8:	rcr    BYTE PTR cs:[ecx+0x5b],cl
  4085ec:	ins    DWORD PTR es:[edi],dx
  4085ed:	adc    al,BYTE PTR [eax]
  4085ef:	add    BYTE PTR [ebp-0x7d],ch
  4085f2:	inc    DWORD PTR [ebx+0x1fffff00]
  4085f8:	dec    ebx
  4085f9:	(bad)  
  4085fa:	imul   esi,DWORD PTR [eax+0x1a],0x5e0089a0
  408601:	cmp    edi,0xffffffff
  408604:	cmp    edi,0xffffffff
  408607:	outs   dx,BYTE PTR ds:[esi]
  408608:	push   esp
  408609:	xchg   edx,eax
  40860a:	lods   eax,DWORD PTR ds:[esi]
  40860b:	and    al,0xe0
  40860d:	retf   
  40860e:	inc    DWORD PTR [eax]
  408610:	mov    bl,0xff
  408612:	inc    DWORD PTR [eax]
  408614:	or     esp,0xffffffff
  408617:	cmc    
  408618:	and    ch,BYTE PTR [ebx+ebx*1]
  40861b:	int    0x6a
  40861d:	lds    eax,FWORD PTR [eax]
  40861f:	jmp    DWORD PTR [ebp+0x83cc00]
  408625:	add    bh,bh
  408627:	xlat   BYTE PTR ds:[ebx]
  408628:	bound  ebp,QWORD PTR [esi-0x74]
  40862b:	push   ss
  40862c:	dec    edx
  40862d:	int3   
  40862e:	add    DWORD PTR [ebx-0xff0014],0xffffffff
  408635:	add    BYTE PTR [eax],al
  408637:	add    DWORD PTR [esi+edi*8],edx
  40863a:	inc    esp
  40863b:	inc    esi
  40863c:	pop    eax
  40863d:	xchg   BYTE PTR [ecx+0xffed00],cl
  408643:	inc    DWORD PTR [ebx+0x7acfff00]
  408649:	cli    
  40864a:	fwait
  40864b:	push   ebp
  40864c:	clc    
  40864d:	push   0x0
  40864f:	jmp    FWORD PTR [edi-0x7c000001]
  408655:	inc    DWORD PTR [eax]
  408657:	xchg   esi,eax
  408658:	or     ah,BYTE PTR [esi-0x5a9301ee]
  40865e:	dec    DWORD PTR [ecx-0x8f]
  408664:	(bad)  
  408665:	dec    DWORD PTR [ecx+0x269e3ed8]
  40866b:	mov    ebp,0x83ff1ae8
  408670:	mov    esp,0x83ffffff
  408675:	inc    DWORD PTR [ebx+0x41210385]
  40867b:	push   ss
  40867c:	sub    DWORD PTR [edi+edi*8+0x0],edi
  408680:	(bad)  
  408681:	inc    DWORD PTR [ebx+0xffff00]
  408687:	dec    eax
  408688:	js     0x408699
  40868a:	jb     0x4086d8
  40868c:	cmp    ebx,DWORD PTR [ebx-0xa33400]
  408692:	add    BYTE PTR [eax],al
  408694:	inc    DWORD PTR [eax]
  408696:	(bad)  
  408697:	std    
  408698:	imul   ecx,edi,0xab30433e
  40869e:	inc    DWORD PTR [eax]
  4086a0:	ja     0x408625
  4086a2:	add    bh,bh
  4086a4:	int3   
  4086a5:	mov    edi,edi
  4086a7:	mov    esi,0xe69b40eb
  4086ac:	ficomp WORD PTR [edi+edi*8]
  4086af:	sbb    DWORD PTR [edx+0xff8300],0xffffffff
  4086b6:	inc    DWORD PTR [ecx+ecx*8]
  4086b9:	push   0xffffffbc
  4086bb:	mov    eax,ds:0xffff410a
  4086c0:	inc    esi
  4086c1:	dec    esp
  4086c3:	int3   
  4086c4:	(bad)  
  4086c5:	inc    DWORD PTR [ebx+0x5b7ac6be]
  4086cb:	popf   
  4086cc:	es out dx,al
  4086ce:	add    bh,bh
  4086d0:	push   ecx
  4086d1:	(bad)  
  4086d2:	inc    DWORD PTR [eax]
  4086d4:	mov    edi,edi
  4086d6:	cmp    ebx,0x8
  4086d9:	out    dx,eax
  4086da:	add    ebp,0xff0066dd
  4086e0:	push   ebp
  4086e1:	inc    DWORD PTR [eax]
  4086e3:	add    BYTE PTR [eax],al
  4086e5:	(bad)  
  4086e6:	(bad)  
  4086e7:	jl     0x408698
  4086e9:	sbb    ah,BYTE PTR [eax]
  4086eb:	or     DWORD PTR [ebp-0x1d],ecx
  4086ee:	add    bh,bh
  4086f0:	sub    DWORD PTR [eax],eax
  4086f2:	add    BYTE PTR [eax],al
  4086f4:	add    BYTE PTR [ebx+0xd81e1ff],al
  4086fa:	cmp    BYTE PTR [ebp+0x89324d],ch
  408700:	aaa    
  408701:	(bad)  
  408702:	(bad)  
  408703:	(bad)  
  408704:	inc    DWORD PTR [ebx-0x1d0a0c00]
  40870a:	xor    ecx,DWORD PTR [edi+0x53]
  40870d:	mov    edi,0xdccc00
  408712:	(bad)  
  408713:	(bad)  
  408714:	inc    DWORD PTR [eax]
  408716:	call   FWORD PTR [ebx+0x32f32636]
  40871c:	xchg   BYTE PTR [edi],ah
  40871e:	dec    DWORD PTR [ecx+0xffff11]
  408724:	add    bh,bh
  408726:	call   DWORD PTR [ebx-0x253c5622]
  40872c:	(bad)  
  40872d:	iret   
  40872e:	add    bh,bh
  408730:	adc    eax,0x8300ff
  408735:	int3   
  408736:	sub    DWORD PTR [ecx+0x58d2a7c1],0x38
  40873d:	lock int3 
  40873f:	and    DWORD PTR [ebx],0xffffffff
  408742:	mov    edi,edi
  408744:	add    BYTE PTR [eax],al
  408746:	add    BYTE PTR [ecx],ch
  408748:	add    DWORD PTR [ecx+0x3c],0xffffff94
  40874c:	pop    ecx
  40874d:	lock add BYTE PTR [eax],al
  408750:	dec    ebx
  408751:	pop    edx
  408752:	dec    DWORD PTR [ecx-0x365a00]
  408758:	hlt    
  408759:	and    al,0xff
  40875b:	inc    DWORD PTR [ebx+0x618994c8]
  408761:	ret    0x8300
  408764:	inc    DWORD PTR [esi+0x3bbffe4]
  40876a:	add    BYTE PTR [ecx-0xa4b800],cl
  408770:	mov    cl,0x8f
  408772:	mov    edi,edi
  408774:	dec    DWORD PTR [edi+0x2b608928]
  40877a:	dec    DWORD PTR [ecx-0x33056e01]
  408780:	xlat   BYTE PTR ds:[ebx]
  408781:	sub    edi,edi
  408783:	add    BYTE PTR [eax],al
  408785:	out    dx,al
  408786:	inc    ebx
  408787:	jmp    eax
  408789:	fs (bad) 
  40878b:	inc    DWORD PTR [eax]
  40878d:	imul   ebp,DWORD PTR [edx],0xcc5778ff
  408793:	add    bh,bh
  408795:	je     0x408741
  408797:	xor    DWORD PTR [edi-0xff90],0xffffffe9
  40879e:	mov    al,ds:0x83fdfb00
  4087a3:	add    ah,cl
  4087a5:	xchg   edi,eax
  4087a6:	dec    edx
  4087a7:	add    DWORD PTR [edi-0x7cff7c58],0x2
  4087ae:	aaa    
  4087af:	call   DWORD PTR [eax+0x58]
  4087b2:	inc    DWORD PTR [ebx-0xd73100]
  4087b8:	pop    esp
  4087b9:	dec    ebx
  4087ba:	inc    DWORD PTR [eax]
  4087bc:	call   DWORD PTR [ebp+eiz*8-0x1]
  4087c0:	fnstsw WORD PTR [ebx+eax*4-0x34]
  4087c4:	jmp    DWORD PTR [ecx]
  4087c6:	adc    al,0xff
  4087c8:	cmp    BYTE PTR ds:0x700000ff,bl
  4087ce:	push   ds
  4087cf:	push   DWORD PTR [edx]
  4087d1:	dec    esi
  4087d2:	(bad)  
  4087d3:	dec    esp
  4087d5:	(bad)  
  4087d7:	add    al,ch
  4087d9:	(bad)  
  4087da:	(bad)  
  4087db:	(bad)  
  4087dc:	inc    DWORD PTR [edx-0x673b7c2d]
  4087e2:	inc    DWORD PTR [eax]
  4087e4:	(bad)  
  4087e5:	cld    
  4087e6:	add    BYTE PTR fs:[edi],ah
  4087e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ea:	(bad)  
  4087eb:	(bad)  
  4087ec:	jmp    FWORD PTR [edi+ebx*4]
  4087ef:	add    BYTE PTR [edi-0x4],al
  4087f2:	inc    DWORD PTR [eax]
  4087f4:	sbb    DWORD PTR [edi],0xffffff9f
  4087f7:	inc    DWORD PTR [ebx]
  4087f9:	cmc    
  4087fa:	mov    DWORD PTR [ebx-0x7c73a034],eax
  408800:	and    BYTE PTR [edi-0x34],al
  408803:	add    BYTE PTR [eax],al
  408805:	rol    BYTE PTR [eax],cl
  408807:	mov    DWORD PTR [ebp+0x26],ebp
  40880a:	cmp    edi,0xffffffff
  40880d:	dec    esi
  40880e:	test   ah,cl
  408810:	adc    eax,DWORD PTR [edi+edi*8+0x1a8b8383]
  408817:	add    BYTE PTR [ecx+0xccff29],bl
  40881d:	add    BYTE PTR [ebp+0x3f683],cl
  408823:	add    bh,bh
  408825:	sub    BYTE PTR [edi],ah
  408827:	add    BYTE PTR [edx-0x7cff3330],al
  40882d:	test   eax,0x47d883f8
  408832:	(bad)  
  408833:	dec    DWORD PTR [ecx+0x19ff7320]
  408839:	ss dec esp
  40883c:	call   FWORD PTR [edi+0x71e9cc67]
  408842:	add    bh,bh
  408844:	xor    DWORD PTR [ecx-0x6cdf00ac],0xffffffff
  40884b:	add    BYTE PTR [eax],al
  40884d:	aad    0x4a
  40884f:	add    BYTE PTR [eax],bl
  408851:	rol    BYTE PTR [eax],1
  408853:	(bad)  
  408854:	dec    DWORD PTR [edx-0x29]
  408857:	add    BYTE PTR [ebp-0xff4c],bl
  40885d:	retf   0xffd2
  408860:	ss (bad) 
  408862:	mov    edi,edi
  408864:	int3   
  408865:	jns    0x40886e
  408867:	add    ebx,0x5d
  40886a:	dec    esp
  40886c:	call   FWORD PTR [ebx-0x7d]
  40886f:	add    dl,bh
  408871:	ror    DWORD PTR [ecx+0x75b2ff00],cl
  408877:	add    BYTE PTR [eax-0xff0001],ch
  40887d:	fimul  WORD PTR [edx+0x0]
  408880:	in     al,0x91
  408882:	mov    edi,edi
  408884:	and    DWORD PTR [esi+0x6],0xffffffff
  408888:	scas   al,BYTE PTR es:[edi]
  408889:	jle    0x40888b
  40888b:	(bad)  
  40888c:	dec    DWORD PTR [esi-0x57]
  40888f:	add    BYTE PTR [eax],bl
  408891:	repz add BYTE PTR [eax],al
  408894:	add    BYTE PTR [esp+ebx*4-0x2c8100],cl
  40889b:	mov    DWORD PTR [ebx+0x8891cff],eax
  4088a1:	pop    ds
  4088a2:	inc    DWORD PTR [ebx-0xdaaf01]
  4088a8:	stos   BYTE PTR es:[edi],al
  4088a9:	dec    eax
  4088aa:	inc    DWORD PTR [eax]
  4088ac:	call   FWORD PTR [ecx-0x2e4d7cca]
  4088b2:	mov    edi,edi
  4088b4:	or     DWORD PTR [ebx-0x7c],0xffffff83
  4088b8:	pop    ebx
  4088b9:	hlt    
  4088ba:	add    DWORD PTR [eax],0xffffff83
  4088bd:	js     0x4088e2
  4088bf:	dec    ebx
  4088c1:	popf   
  4088c2:	add    BYTE PTR [ecx-0xde2e01],cl
  4088c8:	pushf  
  4088c9:	xchg   ebx,eax
  4088ca:	(bad)  
  4088cb:	inc    DWORD PTR [eax]
  4088cd:	jmp    0x4088e2
  4088cf:	add    BYTE PTR [edi],dh
  4088d1:	popa   
  4088d2:	dec    esp
  4088d4:	int3   
  4088d5:	jl     0x408911
  4088d7:	add    DWORD PTR [ebp+edx*2+0x63ffff89],0x5f
  4088df:	dec    DWORD PTR [edx-0x3c]
  4088e2:	inc    DWORD PTR [ebx-0xc9d434]
  4088e8:	repnz mov WORD PTR [eax],es
  4088eb:	inc    DWORD PTR [eax]
  4088ed:	mov    ebx,0x8045ff11
  4088f2:	add    bh,bh
  4088f4:	add    BYTE PTR [ebp-0x1c],cl
  4088f7:	add    BYTE PTR [ebx+esi*1],dl
  4088fa:	(bad)  
  4088fb:	(bad)  
  4088fc:	(bad)  
  4088fd:	inc    eax
  4088ff:	mov    edx,ebp
  408901:	push   cs
  408902:	add    BYTE PTR [ebx-0x33bd7300],al
  408908:	rol    BYTE PTR [ecx-0x40000100],1
  40890e:	pop    esi
  40890f:	(bad)  
  408910:	mov    ebp,0xff83ffc7
  408915:	fst    QWORD PTR [ebp-0x3b3734]
  40891b:	int3   
  40891c:	add    BYTE PTR [eax],bh
  40891e:	sbb    DWORD PTR [eax],eax
  408920:	ffreep st(1)
  408922:	add    BYTE PTR [eax],al
  408924:	mov    ebx,edx
  408926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408927:	mov    DWORD PTR [edx+eiz*2],eax
  40892a:	add    BYTE PTR [ecx-0x7c273b01],cl
  408930:	mov    BYTE PTR [esi+0x0],dh
  408933:	inc    DWORD PTR [eax]
  408935:	call   0xffff:0x3b9d002a
  40893c:	(bad)  
  40893d:	fsubr  DWORD PTR [esi-0x1]
  408940:	cmc    
  408941:	in     al,dx
  408942:	inc    DWORD PTR [eax]
  408944:	(bad)  
  408945:	jl     0x4088d1
  408947:	call   FWORD PTR [eax]
  408949:	ja     0x40894a
  40894b:	add    BYTE PTR [eax],al
  40894d:	cmp    al,dh
  40894f:	inc    DWORD PTR [eax+0x1e]
  408952:	(bad)  
  408953:	dec    DWORD PTR [ecx+0x58ffeb42]
  408959:	jge    0x408927
  40895b:	add    ah,cl
  40895d:	loope  0x408996
  40895f:	add    BYTE PTR [ecx-0xa0],ah
  408965:	xchg   edx,eax
  408966:	loope  0x408968
  408968:	in     eax,dx
  408969:	mov    dh,0xff
  40896b:	add    ah,cl
  40896d:	add    esp,DWORD PTR [ecx]
  40896f:	int3   
  408970:	imul   ecx,DWORD PTR [ebx-0x3b003334],0xffffff84
  408977:	add    al,ah
  408979:	cmp    bh,bh
  40897b:	inc    DWORD PTR [eax]
  40897d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40897e:	push   esp
  40897f:	add    bl,al
  408981:	dec    edx
  408982:	(bad)  
  408983:	(bad)  
  408984:	jmp    FWORD PTR [ecx]
  408986:	popf   
  408987:	jmp    eax
  408989:	pop    DWORD PTR [ebx+0x1f23ffff]
  40898f:	call   ebx
  408991:	push   es
  408992:	or     DWORD PTR [ecx-0x946e00],0xffffff97
  408999:	or     eax,0x3fff89ff
  40899e:	jb     0x408923
  4089a0:	les    esi,FWORD PTR [edi]
  4089a2:	(bad)  
  4089a3:	inc    DWORD PTR [eax]
  4089a5:	lods   eax,DWORD PTR ds:[esi]
  4089a6:	mov    esp,0x836aa689
  4089ab:	(bad)  
  4089ac:	jmp    FWORD PTR [ebx-0x19fe7c30]
  4089b2:	mov    edi,edi
  4089b4:	add    DWORD PTR [ecx],0x61
  4089b7:	jmp    DWORD PTR [esi+ebp*2+0x668389ff]
  4089be:	pushf  
  4089bf:	add    BYTE PTR [ecx-0x7c7c3366],bh
  4089c5:	or     esp,DWORD PTR [edi-0x77]
  4089c8:	ds mov esi,0x84ffffff
  4089ce:	mov    edi,edi
  4089d0:	repz add eax,0x6bffff00
  4089d6:	mov    ds:0xff501d00,al
  4089db:	add    bh,bh
  4089dd:	jo     0x40896a
  4089df:	add    BYTE PTR [ecx-0x7600ff2a],ch
  4089e5:	add    DWORD PTR [eax-0x1],edx
  4089e8:	mov    edi,0xff890001
  4089ed:	loope  0x408a2b
  4089ef:	add    BYTE PTR [ebx],bl
  4089f1:	inc    DWORD PTR [bx+si]
  4089f4:	add    BYTE PTR [ebx],bl
  4089f6:	mov    esp,0xc2a9cc
  4089fb:	dec    esp
  4089fd:	nop
  4089fe:	xchg   BYTE PTR [ebx-0x7c05b4],al
  408a04:	mov    DWORD PTR ds:0x24f6ff17,ebp
  408a0a:	dec    DWORD PTR [ecx-0x76e12a00]
  408a10:	cs jns 0x408996
  408a13:	add    bh,bh
  408a15:	mov    ebp,0xd549008f
  408a1a:	add    bh,bh
  408a1c:	add    bl,al
  408a1e:	scas   eax,DWORD PTR es:[edi]
  408a1f:	jmp    DWORD PTR [ebp+0x56]
  408a22:	add    BYTE PTR [eax],al
  408a24:	add    bl,dl
  408a26:	cmc    
  408a27:	mov    DWORD PTR [esi],ebx
  408a29:	adc    eax,0xcd898300
  408a2e:	nop
  408a2f:	push   DWORD PTR [ecx-0x7cff00e7]
  408a35:	ret    0xae
  408a38:	pop    edi
  408a39:	stc    
  408a3a:	add    bh,bh
  408a3c:	adc    esi,0x2c
  408a3f:	and    DWORD PTR [ecx-0x5a],0x0
  408a43:	int3   
  408a44:	jmp    DWORD PTR [edi+ebp*1-0x7d]
  408a48:	xlat   BYTE PTR ds:[ebx]
  408a49:	in     al,0xcc
  408a4b:	add    BYTE PTR [eax],al
  408a4d:	dec    edx
  408a4e:	mov    ebp,0xff78e000
  408a53:	int3   
  408a54:	add    BYTE PTR [ebx],al
  408a56:	and    bh,bh
  408a58:	push   eax
  408a59:	lds    eax,FWORD PTR [eax]
  408a5b:	(bad)  
  408a5c:	jmp    DWORD PTR [edx]
  408a5e:	sti    
  408a5f:	xor    DWORD PTR [edi+0x7d],0xffffff89
  408a63:	int3   
  408a64:	add    BYTE PTR [ecx],ch
  408a66:	xchg   ecx,eax
  408a67:	sub    DWORD PTR [ebp+0x3f],0xffffffff
  408a6b:	(bad)  
  408a6c:	(bad)  
  408a6d:	cmp    eax,0x166fffdf
  408a72:	(bad)  
  408a73:	dec    esp
  408a75:	jbe    0x408a33
  408a77:	mov    edx,ebx
  408a79:	inc    DWORD PTR ds:[ebx+0x6b9cff]
  408a80:	and    BYTE PTR [ebp+0x0],bh
  408a83:	(bad)  
  408a84:	inc    DWORD PTR [edx-0x9]
  408a87:	(bad)  
  408a88:	mov    esp,0xffccff7c
  408a8d:	ins    DWORD PTR es:[edi],dx
  408a8e:	mov    esi,0xff139483
  408a93:	dec    esp
  408a95:	dec    ecx
  408a96:	in     al,dx
  408a97:	call   FWORD PTR [esi]
  408a99:	cld    
  408a9a:	inc    DWORD PTR [eax]
  408a9c:	call   FWORD PTR [eax]
  408a9e:	and    eax,0xd82fff
  408aa3:	inc    DWORD PTR [eax]
  408aa5:	cs sbb al,0xff
  408aa8:	test   DWORD PTR [eax+0x71cccc89],0x5255839b
  408ab2:	add    bh,bh
  408ab4:	add    BYTE PTR [edi],al
  408ab6:	sbb    al,BYTE PTR [eax]
  408ab8:	cmp    edi,DWORD PTR [eax-0x1]
  408abb:	(bad)  
  408abc:	jmp    DWORD PTR [edi+ebp*8+0x3bbc83]
  408ac3:	add    BYTE PTR [ecx-0x76333b2d],cl
  408ac9:	jl     0x408acb
  408acb:	inc    DWORD PTR [eax]
  408acd:	or     DWORD PTR [ebp-0x335e6e01],edi
  408ad3:	(bad)  
  408ad4:	call   DWORD PTR [eax-0xe]
  408ad7:	jmp    FWORD PTR [ebx+ecx*8-0x7d]
  408adb:	(bad)  
  408adc:	jmp    FWORD PTR [eax+0x33b4ff8c]
  408ae2:	add    BYTE PTR [ebx+0x593100],al
  408ae8:	xchg   BYTE PTR [edi+0x77ffccff],dl
  408aee:	call   0xff00:0x88adcc
  408af5:	aam    0xca
  408af7:	add    BYTE PTR [eax-0xff8f],al
  408afd:	lds    esp,FWORD PTR [eax+0x665789]
  408b03:	int3   
  408b04:	add    ch,dl
  408b06:	sti    
  408b07:	add    BYTE PTR [eax],bh
  408b09:	and    DWORD PTR [eax],eax
  408b0b:	or     DWORD PTR [ecx-0xb006ab8],0x5
  408b12:	inc    DWORD PTR [eax]
  408b14:	add    bl,cl
  408b16:	jmp    0x408b17
  408b18:	mov    al,0x54
  408b1a:	add    BYTE PTR [eax],al
  408b1c:	add    BYTE PTR [ecx-0x2f5f0093],dh
  408b22:	(bad)  
  408b23:	inc    DWORD PTR [eax]
  408b25:	inc    ebp
  408b26:	mov    al,ds:0xff4b56ff
  408b2b:	add    DWORD PTR [eax],0xffffff98
  408b2e:	inc    esi
  408b2f:	mov    DWORD PTR [esi-0x66],esp
  408b32:	(bad)  
  408b33:	inc    DWORD PTR [eax]
  408b35:	xor    bh,dl
  408b37:	add    BYTE PTR [ecx-0x14],ah
  408b3a:	add    ah,cl
  408b3c:	add    edi,0xffffffb1
  408b3f:	add    BYTE PTR [eax],dl
  408b41:	cmc    
  408b42:	add    BYTE PTR [eax],al
  408b44:	add    BYTE PTR [eax+0x671eff2d],al
  408b4a:	add    bh,bh
  408b4c:	call   DWORD PTR [ebx+0x60]
  408b4f:	dec    DWORD PTR [esi+esi*4]
  408b52:	add    bh,bh
  408b54:	add    ah,dh
  408b56:	jnp    0x408ae1
  408b58:	hlt    
  408b59:	out    0x89,eax
  408b5b:	(bad)  
  408b5c:	inc    DWORD PTR [esi-0x1e]
  408b5f:	mov    DWORD PTR [edi-0x4b],eax
  408b62:	add    bh,bh
  408b64:	jmp    FWORD PTR [esi-0x5b6fffc3]
  408b6a:	add    DWORD PTR [eax],0xffffffff
  408b6d:	out    0xbb,al
  408b6f:	call   ebx
  408b71:	jmp    0x83f8:0x65ccccff
  408b78:	push   ds
  408b79:	and    bh,bh
  408b7b:	inc    DWORD PTR [eax]
  408b7d:	mov    esi,0xb48d832c
  408b82:	inc    DWORD PTR [eax]
  408b84:	mov    ebp,edi
  408b86:	pop    ebp
  408b87:	add    BYTE PTR [edx-0x7c7cda],cl
  408b8d:	clc    
  408b8e:	std    
  408b8f:	add    BYTE PTR [ebp-0xffe6],ah
  408b95:	pmaxsw mm1,mm4
  408b98:	cmp    DWORD PTR [ecx+ecx*4],0xffffff89
  408b9c:	jmp    FWORD PTR [esi+0x343affa4]
  408ba2:	(bad)  
  408ba3:	inc    DWORD PTR [eax]
  408ba5:	add    al,0x83
  408ba7:	add    ch,bl
  408ba9:	pop    edi
  408baa:	inc    DWORD PTR [ebx+0xbc6400]
  408bb0:	xchg   ecx,eax
  408bb1:	cmp    eax,0xab8300cc
  408bb6:	xlat   BYTE PTR ds:[ebx]
  408bb7:	sbb    DWORD PTR [eax+0x55],0xffffffff
  408bbb:	inc    DWORD PTR [eax]
  408bbd:	pop    ss
  408bbe:	push   esi
  408bbf:	add    ch,cl
  408bc1:	push   cs
  408bc2:	cmp    edi,0xffffffff
  408bc5:	(bad)  
  408bc6:	icebp  
  408bc7:	(bad)  
  408bc8:	cmp    ch,ch
  408bca:	(bad)  
  408bcb:	(bad)  
  408bcc:	inc    esp
  408bce:	xchg   esi,eax
  408bcf:	adc    DWORD PTR [ebp-0xf],0x0
  408bd3:	add    BYTE PTR [ebx-0xeff3be7],al
  408bd9:	xchg   ebx,eax
  408bda:	add    BYTE PTR [eax],al
  408bdc:	add    ah,dh
  408bde:	dec    esp
  408bdf:	push   DWORD PTR [eax+0x2e]
  408be2:	(bad)  
  408be3:	(bad)  
  408be4:	(bad)  
  408be5:	cmp    esi,DWORD PTR [edi+edi*8]
  408be8:	xor    ah,BYTE PTR [esi]
  408bea:	inc    DWORD PTR [eax]
  408bec:	jmp    DWORD PTR [ebx]
  408bee:	in     eax,0xff
  408bf0:	push   es
  408bf1:	popa   
  408bf2:	(bad)  
  408bf3:	(bad)  
  408bf4:	dec    DWORD PTR [esi]
  408bf6:	add    eax,0xb83f89
  408bfb:	cmp    edi,0xfffffff7
  408bfe:	out    0xff,eax
  408c00:	mov    ah,0x69
  408c02:	add    bh,bh
  408c04:	add    bh,dl
  408c06:	jbe    0x408c08
  408c08:	mov    eax,ds:0xff00ff6d
  408c0d:	int    0x91
  408c0f:	int3   
  408c10:	mov    eax,0x8989f4
  408c15:	test   al,0x22
  408c17:	add    dh,ch
  408c19:	mov    ch,0xff
  408c1b:	inc    DWORD PTR [eax]
  408c1d:	add    BYTE PTR [edx-0xada601],ch
  408c23:	inc    DWORD PTR [eax]
  408c25:	xchg   edi,eax
  408c26:	sub    al,0xff
  408c28:	sub    bh,ah
  408c2a:	int3   
  408c2b:	inc    DWORD PTR [eax]
  408c2d:	or     al,0x20
  408c2f:	(bad)  
  408c30:	mov    edi,0x83ff8971
  408c35:	ret    
  408c36:	aam    0x0
  408c38:	cmc    
  408c39:	dec    ecx
  408c3a:	dec    esp
  408c3c:	call   FWORD PTR [ebx]
  408c3e:	dec    esp
  408c3f:	add    BYTE PTR [ebp+0xd],ch
  408c42:	(bad)  
  408c43:	(bad)  
  408c44:	dec    DWORD PTR [ebx-0xb427668]
  408c4a:	inc    DWORD PTR [ebx-0x87701]
  408c50:	add    dh,cl
  408c52:	(bad)  
  408c53:	(bad)  
  408c54:	(bad)  
  408c55:	jnp    0x408cb8
  408c57:	call   esi
  408c59:	mov    al,0x83
  408c5b:	(bad)  
  408c5c:	inc    DWORD PTR [esi-0x28]
  408c5f:	xor    DWORD PTR [edi],0x27
  408c62:	add    DWORD PTR [ebx+0xac47ff],0x41
  408c69:	in     eax,0x0
  408c6b:	inc    DWORD PTR [eax]
  408c6d:	xor    eax,0x98d8ff88
  408c72:	add    bh,bh
  408c74:	add    bh,dh
  408c76:	mov    bh,0x89
  408c78:	sbb    BYTE PTR ds:0x3eff00ff,0x42
  408c7f:	(bad)  
  408c80:	out    dx,al
  408c81:	push   es
  408c82:	inc    DWORD PTR [eax]
  408c84:	add    bl,ch
  408c86:	cld    
  408c87:	inc    DWORD PTR ds:0x83fff1
  408c8d:	add    dh,cl
  408c8f:	dec    DWORD PTR [edx+0x2b]
  408c92:	add    bh,bh
  408c94:	add    dl,dh
  408c96:	(bad)  
  408c97:	int3   
  408c98:	pop    ebx
  408c99:	loop   0x408c24
  408c9b:	add    BYTE PTR [eax],al
  408c9d:	or     esp,ebp
  408c9f:	dec    DWORD PTR [ebx]
  408ca1:	add    bh,bh
  408ca3:	(bad)  
  408ca4:	(bad)  
  408ca5:	mov    esi,0x19c0ff7a
  408caa:	(bad)  
  408cab:	(bad)  
  408cac:	call   DWORD PTR ds:0x845ffb4
  408cb2:	mov    DWORD PTR [eax],eax
  408cb4:	jmp    DWORD PTR ds:0xf791fff8
  408cba:	add    BYTE PTR [ecx-0x7c622801],cl
  408cc0:	pusha  
  408cc1:	mov    eax,ds:0xc70083ff
  408cc6:	ins    BYTE PTR es:[edi],dx
  408cc7:	call   DWORD PTR [esi+0x83cc23]
  408ccd:	stos   BYTE PTR es:[edi],al
  408cce:	repz sbb DWORD PTR [ebx-0x6f],0x0
  408cd3:	(bad)  
  408cd4:	(bad)  
  408cd5:	jg     0x408d24
  408cd7:	int3   
  408cd8:	xchg   edx,eax
  408cd9:	cmp    edi,edi
  408cdb:	add    DWORD PTR [ebx+0x2b83fa17],0x5
  408ce2:	int3   
  408ce3:	int3   
  408ce4:	xor    DWORD PTR [edi],0x1f
  408ce7:	jmp    FWORD PTR [edx]
  408ce9:	add    BYTE PTR [ebx+0x4afeff00],al
  408cef:	add    BYTE PTR [eax],ch
  408cf1:	arpl   di,di
  408cf3:	dec    DWORD PTR [ecx+0x68006022]
  408cf9:	int3   
  408cfa:	dec    DWORD PTR [ecx+0x7f80ff]
  408d00:	outs   dx,DWORD PTR ds:[esi]
  408d01:	jp     0x408c86
  408d03:	add    BYTE PTR [ecx-0x4c005148],cl
  408d09:	les    ecx,FWORD PTR [ecx+0x208ff00]
  408d0f:	add    dh,dl
  408d11:	scas   eax,DWORD PTR es:[edi]
  408d12:	add    BYTE PTR [eax],al
  408d14:	and    ebx,0x4f
  408d17:	mov    DWORD PTR [eax],ebx
  408d19:	jne    0x408d1a
  408d1b:	dec    DWORD PTR [ecx+0x19008f14]
  408d21:	add    BYTE PTR [eax],0xff
  408d24:	add    dl,cl
  408d26:	add    DWORD PTR [ecx-0xff1c34],ecx
  408d2c:	add    BYTE PTR [ebx],ah
  408d2e:	pop    edx
  408d2f:	add    BYTE PTR ds:0xffcc00f1,dl
  408d35:	in     eax,dx
  408d36:	fdivp  st(7),st
  408d38:	adc    al,0x90
  408d3a:	mov    DWORD PTR [ebx-0x8d397d],eax
  408d40:	adc    BYTE PTR [esi-0x1],ch
  408d43:	add    bh,bh
  408d45:	xchg   esp,eax
  408d46:	mov    DWORD PTR [ebx-0xff42ca],eax
  408d4c:	add    BYTE PTR ds:0xd1030001,bh
  408d52:	add    bh,bh
  408d54:	add    BYTE PTR ds:0xcffbff4a,bh
  408d5a:	add    DWORD PTR [eax],0xffffff83
  408d5d:	(bad)  
  408d5e:	push   ebx
  408d5f:	inc    DWORD PTR [edi-0x76e6]
  408d65:	or     ebp,DWORD PTR [edx-0x7c19d901]
  408d6b:	add    DWORD PTR [ebx+0x54002d06],0x43
  408d72:	mov    edi,edi
  408d74:	cmp    DWORD PTR [eax+0x7a],0xffffffff
  408d78:	fiadd  WORD PTR fs:[eax]
  408d7b:	inc    DWORD PTR [eax]
  408d7d:	ja     0x408d42
  408d7f:	inc    DWORD PTR [eax+0xcc43]
  408d85:	in     eax,dx
  408d86:	xor    edi,edi
  408d88:	je     0x408dfb
  408d8a:	add    bh,bh
  408d8c:	(bad)  
  408d8d:	aas    
  408d8e:	sbb    edi,edi
  408d90:	daa    
  408d91:	push   edx
  408d92:	add    BYTE PTR [eax],al
  408d94:	add    BYTE PTR [eax-0x318f0059],ah
  408d9a:	inc    DWORD PTR [eax]
  408d9c:	(bad)  
  408d9d:	in     eax,dx
  408d9e:	dec    edi
  408d9f:	int3   
  408da0:	jne    0x408d47
  408da2:	inc    DWORD PTR [eax]
  408da4:	jmp    DWORD PTR [edx-0x3e7c00b8]
  408daa:	add    DWORD PTR [eax],0x0
  408dad:	fidivr WORD PTR [esi-0x7d]
  408db0:	ror    BYTE PTR [esp+ecx*8+0x0],0xff
  408db5:	xor    ecx,DWORD PTR [ecx]
  408db7:	jmp    FWORD PTR ds:0x8300ffab
  408dbd:	ins    BYTE PTR es:[edi],dx
  408dbe:	mov    DWORD PTR [ecx-0x7c009415],ecx
  408dc4:	sbb    DWORD PTR [edx],0x6f
  408dc7:	inc    esi
  408dc9:	add    al,BYTE PTR [eax]
  408dcb:	int3   
  408dcc:	(bad)  
  408dcd:	jns    0x408e13
  408dcf:	push   ecx
  408dd1:	retf   0xff00
  408dd4:	dec    ebp
  408dd6:	nop
  408dd7:	jmp    FWORD PTR [edx]
  408dd9:	add    DWORD PTR [eax],0xffffffff
  408ddc:	add    BYTE PTR [eax],bh
  408dde:	mov    DWORD PTR [eax],0x83ff3ee2
  408de4:	add    BYTE PTR [ebp+esi*8-0xb26300],ch
  408deb:	mov    DWORD PTR [eax],eax
  408ded:	shl    DWORD PTR [ebp+0x71b600],cl
  408df3:	add    BYTE PTR [eax],al
  408df5:	jb     0x408e0e
  408df7:	add    BYTE PTR [edx],dl
  408df9:	ins    DWORD PTR es:[edi],dx
  408dfa:	(bad)  
  408dfb:	dec    DWORD PTR [ecx+0xaff5cb5]
  408e01:	das    
  408e02:	inc    DWORD PTR [ebx-0x7bc101]
  408e08:	daa    
  408e09:	imul   edi,edi,0xffffff83
  408e0c:	push   ebp
  408e0e:	mov    dl,0xff
  408e10:	lods   eax,DWORD PTR ds:[esi]
  408e11:	outs   dx,DWORD PTR ds:[esi]
  408e12:	add    DWORD PTR [ebx-0x76f1ef01],0xffffffee
  408e19:	jno    0x408d9e
  408e1b:	cmp    edi,0xffffffb9
  408e1e:	iret   
  408e1f:	sbb    DWORD PTR [edx-0x18],0xffffff89
  408e23:	inc    DWORD PTR [ebx-0x7a0093a8]
  408e29:	pop    ds
  408e2a:	inc    DWORD PTR [ebx+0xa741ff]
  408e30:	xor    al,0x38
  408e32:	int3   
  408e33:	inc    DWORD PTR [eax]
  408e35:	jge    0x408db8
  408e37:	cmp    DWORD PTR [edx-0x1b],0x0
  408e3b:	or     esp,0x54
  408e3e:	dec    esp
  408e3f:	add    BYTE PTR [edx],ch
  408e41:	xchg   esi,eax
  408e42:	mov    DWORD PTR [eax],eax
  408e44:	cmp    DWORD PTR [edi-0x2f],0xffffffff
  408e48:	(bad)
  408e4c:	sbb    esi,0x22
  408e4f:	add    BYTE PTR [esi],dh
  408e51:	loop   0x408e53
  408e53:	(bad)  
  408e54:	jmp    FWORD PTR [edi]
  408e56:	(bad)  
  408e57:	int3   
  408e58:	das    
  408e59:	loopne 0x408e5a
  408e5b:	add    bh,bh
  408e5d:	repz xchg ebx,eax
  408e5f:	mov    esp,eax
  408e61:	ud0    ecx,DWORD PTR [ecx-0xbfc134]
  408e68:	iret   
  408e69:	or     bh,bh
  408e6b:	inc    DWORD PTR [eax]
  408e6d:	ins    DWORD PTR es:[edi],dx
  408e6e:	mov    dh,0x89
  408e70:	cmc    
  408e71:	inc    DWORD PTR gs:[ebx-0x70887d]
  408e78:	xor    edi,ebx
  408e7a:	dec    esp
  408e7c:	sub    ebp,0xffffffc7
  408e7f:	call   FWORD PTR ds:0xffff0030
  408e85:	sbb    esi,edx
  408e87:	add    BYTE PTR [eax+ebp*4-0x34],dh
  408e8b:	inc    DWORD PTR [eax]
  408e8d:	ins    DWORD PTR es:[edi],dx
  408e8e:	in     eax,0xff
  408e90:	dec    edx
  408e91:	fs (bad) 
  408e93:	dec    DWORD PTR [ecx+0x4f00f421]
  408e99:	mov    ds:0x56ffffcc,al
  408e9e:	mov    bl,0x83
  408ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ea1:	sub    bh,bh
  408ea3:	(bad)  
  408ea4:	push   DWORD PTR [ecx+0x6c]
  408ea7:	jmp    DWORD PTR [ebx-0x22]
  408eaa:	add    BYTE PTR [ecx+0x2233cc],cl
  408eb0:	xlat   BYTE PTR ds:[ebx]
  408eb1:	cmp    eax,DWORD PTR [eax]
  408eb3:	inc    DWORD PTR [eax]
  408eb5:	jmp    0xd2aa8e69
  408eba:	mov    edi,edi
  408ebc:	call   FWORD PTR [esi-0x1b]
  408ebf:	(bad)  
  408ec0:	sti    
  408ec1:	or     eax,0xd883ff83
  408ec6:	iret   
  408ec7:	jmp    FWORD PTR [edx-0x3397]
  408ecd:	in     al,0xf9
  408ecf:	int3   
  408ed0:	and    eax,0x89ff6d
  408ed5:	sub    bl,bh
  408ed7:	xor    DWORD PTR ds:0xffff0052,0xfffffffd
  408ede:	mov    cl,0xff
  408ee0:	cmp    BYTE PTR [eax+0x6fff8300],ah
  408ee6:	loopne 0x408ee7
  408ee8:	in     eax,dx
  408ee9:	into   
  408eea:	(bad)  
  408eeb:	inc    DWORD PTR [ebx+0x3dcc3825]
  408ef1:	pop    ebx
  408ef2:	or     esp,0x0
  408ef5:	ret    
  408ef6:	loop   0x408ef8
  408ef8:	inc    ebx
  408ef9:	xor    esp,ecx
  408efb:	int3   
  408efc:	jmp    FWORD PTR [ebp-0x7ad3ff95]
  408f02:	mov    edi,edi
  408f04:	mov    DWORD PTR [edi],ebp
  408f06:	jl     0x408f07
  408f08:	test   DWORD PTR [ebx+0x0],0x6805ffff
  408f0f:	sub    DWORD PTR [eax-0x57],0xffffffcc
  408f13:	mov    DWORD PTR [ebx-0x1e004fed],eax
  408f19:	je     0x408f1a
  408f1b:	add    DWORD PTR [eax],0xffffffd9
  408f1e:	cs dec edx
  408f21:	stos   BYTE PTR es:[edi],al
  408f22:	inc    DWORD PTR [eax]
  408f24:	inc    eax
  408f26:	pop    eax
  408f27:	jmp    FWORD PTR [edx+ecx*1-0x77]
  408f2b:	add    DWORD PTR [eax],0xffffffdc
  408f2e:	pop    edi
  408f2f:	mov    edx,ecx
  408f31:	push   eax
  408f32:	mov    edi,edi
  408f34:	call   DWORD PTR [ebp-0x6d14005c]
  408f3a:	add    BYTE PTR [ebx-0x82c900],al
  408f40:	xlat   BYTE PTR ds:[ebx]
  408f41:	adc    eax,0xeccc0083
  408f46:	mov    edx,0x832d31ff
  408f4b:	add    DWORD PTR [ebx+0x3aff525e],0x5e
  408f52:	add    BYTE PTR [eax],al
  408f54:	add    BYTE PTR [edi],ch
  408f56:	fisttp WORD PTR [ecx-0xd522]
  408f5c:	or     ecx,0xffffff91
  408f5f:	call   DWORD PTR [esi-0x333333df]
  408f65:	(bad)  
  408f67:	inc    DWORD PTR [eax+0x6c]
  408f6a:	cmp    edi,0xffffff83
  408f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f6e:	js     0x408f6f
  408f70:	lock fadd DWORD PTR [eax]
  408f73:	mov    DWORD PTR [ebx-0x3b001d76],eax
  408f79:	mov    ebx,0xd000ffff
  408f7e:	inc    ecx
  408f7f:	jmp    FWORD PTR [ebp+0x75]
  408f82:	add    bh,bh
  408f84:	inc    edi
  408f86:	pop    ecx
  408f87:	call   FWORD PTR [ebp-0xff7cbe]
  408f8d:	pop    ss
  408f8e:	mov    edx,0xffec7eff
  408f93:	add    ah,cl
  408f95:	xor    esp,DWORD PTR [ebp-0x1]
  408f98:	cmp    eax,DWORD PTR [ecx]
  408f9a:	add    ah,cl
  408f9c:	int3   
  408f9d:	push   edi
  408f9e:	mov    ch,0x89
  408fa0:	pop    edi
  408fa1:	lods   al,BYTE PTR ds:[esi]
  408fa2:	(bad)  
  408fa3:	(bad)  
  408fa4:	jmp    FWORD PTR [ecx-0x4e]
  408fa7:	call   DWORD PTR [esi]
  408fa9:	in     eax,0xff
  408fab:	cmp    edi,0x78
  408fae:	and    DWORD PTR [eax],eax
  408fb0:	mov    cl,0xb
  408fb2:	dec    esp
  408fb4:	add    BYTE PTR [ecx+0x711000be],dh
  408fba:	inc    DWORD PTR [eax]
  408fbc:	xor    edi,0xffffffce
  408fbf:	add    BYTE PTR [ebp+0x67],ah
  408fc2:	cmp    edi,0xffffff83
  408fc5:	bound  eax,QWORD PTR [esi]
  408fc7:	call   DWORD PTR [edi-0x7c0005]
  408fcd:	jge    0x409041
  408fcf:	mov    DWORD PTR [esp+esi*8-0x5dffff01],esp
  408fd6:	inc    esp
  408fd7:	cmp    DWORD PTR [edx-0x61],0xffffffff
  408fdb:	add    DWORD PTR [eax],0x41
  408fde:	inc    ebx
  408fdf:	adc    ebx,0x29
  408fe2:	mov    edi,edi
  408fe4:	inc    DWORD PTR [eax+0x62]
  408fe7:	int3   
  408fe8:	jge    0x408f7b
  408fea:	inc    DWORD PTR [ebx-0x7cfec500]
  408ff0:	repnz xchg esp,eax
  408ff2:	add    bh,bh
  408ff4:	add    BYTE PTR [ebp-0x7a73ffe6],dh
  408ffa:	inc    DWORD PTR [ebx-0xd54300]
  409000:	cmp    DWORD PTR [eax+eax*1+0x0],ebx
  409004:	jmp    FWORD PTR [ebp+0x54]
  409007:	add    dh,al
  409009:	push   ss
  40900a:	inc    DWORD PTR [eax]
  40900c:	add    BYTE PTR [ebx+0x19],bl
  40900f:	push   DWORD PTR [esi+0x1c]
  409012:	(bad)  
  409013:	inc    DWORD PTR [eax]
  409015:	inc    edi
  409016:	push   0xffffffff
  409018:	xor    eax,0xffffff5c
  40901d:	push   0x3d
  40901f:	(bad)  
  409020:	jmp    0x409029
  409022:	cmp    edi,0xffffffff
  409025:	test   al,0x38
  409027:	int3   
  409028:	pushf  
  409029:	sbb    edi,edi
  40902b:	add    BYTE PTR [ecx-0x12ff1bd1],cl
  409031:	ss (bad) 
  409033:	(bad)  
  409034:	push   edi
  409036:	sbb    bh,bh
  409038:	sub    al,0x89
  40903a:	(bad)  
  40903b:	dec    esp
  40903d:	aam    0x60
  40903f:	push   DWORD PTR [ecx]
  409041:	repnz dec esp
  409044:	add    ch,dh
  409046:	or     al,0xff
  409048:	jle    0x408ff0
  40904a:	add    bh,bh
  40904c:	add    BYTE PTR [eax+0x32],ah
  40904f:	int3   
  409050:	mov    edi,0xff838913
  409055:	std    
  409056:	mov    ebx,0x833bcf83
  40905b:	add    bh,bh
  40905d:	aam    0x19
  40905f:	and    DWORD PTR [eax+0x4e],0xffffff83
  409063:	(bad)  
  409064:	inc    DWORD PTR [ebx+0x5e]
  409067:	push   esi
  409069:	adc    DWORD PTR [eax],eax
  40906b:	inc    DWORD PTR [ebx+0x1200fae4]
  409071:	sub    al,0x0
  409073:	add    bh,bh
  409075:	push   ecx
  409076:	jle    0x409077
  409078:	cmp    al,0x48
  40907a:	add    ah,cl
  40907c:	add    cl,cl
  40907e:	add    DWORD PTR [eax],eax
  409080:	mov    edx,ebx
  409082:	inc    DWORD PTR [ebx-0x6cb600]
  409088:	mov    al,ds:0xffff0000
  40908d:	sub    BYTE PTR [edi+edi*8+0xdfcf],ch
  409094:	add    BYTE PTR [edx+0xdd3004c],ah
  40909a:	add    ah,cl
  40909c:	jmp    FWORD PTR [edi-0x28ab7c07]
  4090a2:	add    ah,cl
  4090a4:	add    al,cl
  4090a6:	ins    DWORD PTR es:[edi],dx
  4090a7:	add    BYTE PTR [ecx-0x4b],ah
  4090aa:	dec    esp
  4090ac:	adc    DWORD PTR [esi+0x1fc8cc30],0xffffffff
  4090b3:	add    bh,bh
  4090b5:	aam    0xd1
  4090b7:	add    BYTE PTR [edx+ecx*2+0x8ff8389],dh
  4090be:	aam    0xff
  4090c0:	in     al,dx
  4090c1:	or     bh,bh
  4090c3:	mov    edi,edi
  4090c5:	scas   al,BYTE PTR es:[edi]
  4090c6:	cmp    bh,bh
  4090c8:	push   cs
  4090c9:	pop    es
  4090ca:	add    bh,bh
  4090cc:	int3   
  4090cd:	loope  0x4090fb
  4090cf:	push   ecx
  4090d1:	call   0xffee:0x7dff83ff
  4090d8:	pushf  
  4090d9:	adc    al,0xff
  4090db:	add    bh,bh
  4090dd:	mov    edx,0x8bb2cc2d
  4090e2:	cmp    edi,0xffffff89
  4090e5:	(bad)  
  4090e6:	inc    edi
  4090e7:	mov    DWORD PTR [edi-0x760000cd],ebx
  4090ed:	xchg   edx,eax
  4090ee:	xor    al,0x0
  4090f0:	sub    dl,BYTE PTR [edi+0x35ff83ff]
  4090f6:	jl     0x4090f7
  4090f8:	adc    esp,DWORD PTR [eax-0x1]
  4090fb:	inc    DWORD PTR [eax]
  4090fd:	push   ebp
  4090fe:	adc    edi,edi
  409100:	shr    bh,0xff
  409103:	add    BYTE PTR [ecx-0x78006ddb],cl
  409109:	iret   
  40910a:	int3   
  40910b:	dec    DWORD PTR [ecx-0x637c65a5]
  409111:	add    al,0x83
  409113:	dec    esp
  409115:	(bad)  
  409116:	sar    bh,cl
  409118:	pop    ebx
  409119:	xchg   esi,eax
  40911a:	mov    DWORD PTR [ecx-0xbfd777],ecx
  409120:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  409122:	inc    DWORD PTR [eax]
  409124:	call   DWORD PTR [eax-0x19830055]
  40912a:	int3   
  40912b:	mov    DWORD PTR [ebx+0x27ffc00c],eax
  409131:	xchg   edx,eax
  409132:	inc    DWORD PTR [eax]
  409134:	add    cl,ah
  409136:	xlat   BYTE PTR ds:[ebx]
  409137:	(bad)  
  409138:	clc    
  409139:	jle    0x4090c4
  40913b:	cmp    edi,0x51
  40913e:	(bad)  
  409140:	sub    ecx,0x0
  409143:	cmp    edi,0xffffffd6
  409146:	mov    edi,0xffb9e7ff
  40914b:	int3   
  40914c:	add    BYTE PTR [edi-0x88500f2],dh
  409152:	inc    DWORD PTR [eax]
  409154:	(bad)  
  409155:	cmp    eax,0x84edffa2
  40915a:	add    BYTE PTR [eax],al
  40915c:	or     DWORD PTR [esp+eax*1],0xffffffff
  409160:	scas   eax,DWORD PTR es:[edi]
  409161:	mov    dl,0x83
  409163:	add    bh,bh
  409165:	pop    ss
  409166:	and    bh,bh
  409168:	sub    eax,0x8300899f
  40916d:	stc    
  40916e:	dec    ebp
  40916f:	call   DWORD PTR [eax-0x7c0015]
  409175:	pushf  
  409176:	mov    eax,0xff5c9eff
  40917b:	add    bh,bh
  40917d:	pop    ds
  40917e:	add    al,0xff
  409180:	push   edi
  409181:	add    eax,DWORD PTR [eax]
  409183:	or     esp,0xffffffc0
  409186:	es (bad) 
  409188:	call   0x13f9233
  40918d:	pop    edx
  40918e:	xchg   esi,eax
  40918f:	int3   
  409190:	cdq    
  409191:	pop    ss
  409192:	add    DWORD PTR [eax],0x0
  409195:	fisubr WORD PTR [esi-0x7c829b01]
  40919b:	cmp    edi,0x11
  40919e:	jb     0x4091a0
  4091a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091a1:	das    
  4091a2:	(bad)  
  4091a3:	inc    DWORD PTR [eax]
  4091a5:	sub    al,0x7e
  4091a7:	add    ch,dh
  4091a9:	outs   dx,DWORD PTR ds:[esi]
  4091aa:	mov    DWORD PTR [eax],eax
  4091ac:	jmp    DWORD PTR [edx+eax*4-0xe1bf00]
  4091b3:	add    DWORD PTR [eax],0xffffffd8
  4091b6:	sbb    bh,bh
  4091b8:	mov    eax,ds:0xffff002a
  4091bd:	sub    ah,BYTE PTR [ebp-0x8b1301]
  4091c3:	cmp    edi,0x43
  4091c6:	popa   
  4091c7:	add    BYTE PTR ds:0xff89ffde,dh
  4091cd:	push   esi
  4091ce:	(bad)  
  4091d0:	aaa    
  4091d1:	pop    ds
  4091d2:	(bad)  
  4091d3:	(bad)  
  4091d4:	call   esp
  4091d6:	mov    ebx,0xff7bcc89
  4091db:	cmp    edi,0xffffff8c
  4091de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091df:	(bad)  
  4091e0:	call   0xffc49144
  4091e5:	and    ebp,DWORD PTR [ebx-0x7d]
  4091e8:	inc    esi
  4091e9:	mov    bh,bh
  4091eb:	add    bh,bh
  4091ed:	mov    ds:0x6ca88343,al
  4091f2:	add    bh,bh
  4091f4:	(bad)  
  4091f5:	cmp    BYTE PTR [eax+0x0],ch
  4091f8:	daa    
  4091f9:	nop
  4091fa:	add    ah,cl
  4091fc:	(bad)  
  4091fd:	cmp    ecx,DWORD PTR [esi+0x656000]
  409203:	inc    DWORD PTR [eax]
  409205:	adc    esp,DWORD PTR [ebp-0x1]
  409208:	inc    ebp
  409209:	mov    esi,0x348300ff
  40920e:	jbe    0x409210
  409210:	sbb    DWORD PTR [edi+edi*8-0x34],eax
  409214:	mov    DWORD PTR [ebp-0x5e450076],ebx
  40921a:	inc    DWORD PTR [ebx-0x7cf17f00]
  409220:	and    DWORD PTR [eax-0x1],ecx
  409223:	add    bh,bh
  409225:	pop    ebp
  409226:	mov    dl,0xff
  409228:	jno    0x4091c1
  40922a:	(bad)  
  40922b:	(bad)  
  40922c:	jmp    DWORD PTR [edx+0x60]
  40922f:	int3   
  409230:	sbb    DWORD PTR [edi-0x30000034],0x8558336
  40923a:	add    bh,bh
  40923c:	dec    DWORD PTR [edx]
  40923e:	pop    ebp
  40923f:	jmp    DWORD PTR ds:0xff8900d2
  409245:	gs dec ebp
  409247:	or     esp,0x5b
  40924a:	add    bh,bh
  40924c:	jmp    DWORD PTR [esi]
  40924e:	inc    eax
  40924f:	add    cl,cl
  409251:	inc    ebx
  409252:	add    BYTE PTR [eax],al
  409254:	call   FWORD PTR [edx+0x45]
  409257:	inc    DWORD PTR [eax]
  409259:	mov    BYTE PTR [eax],al
  40925b:	inc    DWORD PTR [eax]
  40925d:	nop
  40925e:	or     al,0x0
  409260:	add    eax,0x83000052
  409265:	in     eax,0xdf
  409267:	dec    edx
  409269:	sahf   
  40926a:	mov    DWORD PTR [eax],eax
  40926c:	call   DWORD PTR [ebp+0x3b]
  40926f:	push   esp
  409271:	sar    edi,0xff
  409274:	cmp    DWORD PTR [ecx],0xffffffa8
  409277:	add    BYTE PTR [esp+ecx*1],ah
  40927a:	add    ah,cl
  40927c:	add    BYTE PTR [ebp+0x278fffe9],al
  409282:	(bad)  
  409283:	inc    DWORD PTR [eax]
  409285:	fistp  DWORD PTR [edi-0x5e7c01]
  40928b:	mov    edi,edi
  40928d:	jmp    0x4092f0
  40928f:	call   DWORD PTR [ecx-0xffff7f]
  409295:	mov    ds:0x9033ff14,al
  40929a:	add    bh,bh
  40929c:	dec    DWORD PTR [ebx]
  40929e:	pusha  
  40929f:	add    BYTE PTR [ecx-0x33ff7c5f],al
  4092a5:	out    dx,al
  4092a6:	dec    ebp
  4092a7:	sbb    DWORD PTR [ebp-0x6],0xffffffcc
  4092ab:	cmp    edi,0xffffffc9
  4092ae:	mov    dl,0x89
  4092b0:	pop    ds
  4092b1:	dec    ecx
  4092b2:	inc    DWORD PTR [eax]
  4092b4:	add    BYTE PTR [eax+0x72e0005a],al
  4092ba:	add    BYTE PTR [eax],al
  4092bc:	add    BYTE PTR [esi-0xd],ah
  4092bf:	sbb    edi,0x59
  4092c2:	add    ah,cl
  4092c4:	inc    edx
  4092c6:	loop   0x409294
  4092c8:	sub    al,0xad
  4092ca:	(bad)  
  4092cb:	inc    DWORD PTR [ebx+0x4a00c8bf]
  4092d1:	inc    esp
  4092d2:	(bad)  
  4092d3:	(bad)  
  4092d4:	call   FWORD PTR [eax-0x46]
  4092d7:	int3   
  4092d8:	es leave 
  4092da:	(bad)  
  4092db:	inc    DWORD PTR [ebx+0x417]
  4092e1:	and    eax,0xfcff00ff
  4092e6:	iret   
  4092e7:	mov    DWORD PTR [eax],ebp
  4092e9:	aad    0x0
  4092eb:	(bad)  
  4092ec:	push   DWORD PTR [edx-0x68]
  4092ef:	add    BYTE PTR [edx+edi*4-0x3e33007d],cl
  4092f6:	repz dec esp
  4092f9:	int3   
  4092fa:	int3   
  4092fb:	int3   
  4092fc:	int3   
  4092fd:	int3   
  4092fe:	int3   
  4092ff:	int3   
  409300:	ret    
  409301:	jp     0x4092e7
  409303:	call   DWORD PTR [ecx-0x15330001]
  409309:	jmp    0xff4892b7
  40930e:	add    bh,bh
  409310:	cmp    esi,ebp
  409312:	mov    eax,0xffffc2cc
  409317:	add    BYTE PTR [edx],bl
  409319:	cdq    
  40931a:	jecxz  0x40929f
  40931c:	(bad)  
  40931f:	mov    DWORD PTR [ebx-0x3d],edi
  409322:	les    eax,FWORD PTR [eax]
  409324:	lock inc DWORD PTR [eax]
  409327:	int3   
  409328:	(bad)  
  409329:	pop    eax
  40932a:	clc    
  40932b:	add    BYTE PTR [edx-0x5c00007d],bl
  409331:	addr16 icebp 
  409333:	(bad)  
  409334:	out    dx,eax
  409335:	dec    DWORD PTR [ecx-0x399ce401]
  40933b:	add    BYTE PTR [ebp-0x7d],bh
  40933e:	cmp    edi,0xffffffcc
  409341:	out    dx,al
  409342:	mov    edx,0xff8371ff
  409347:	call   DWORD PTR [ebx-0x7e]
  40934a:	sbb    al,0xcc
  40934c:	mov    bl,0x0
  40934e:	or     esp,0x47
  409351:	fsubr  QWORD PTR [ecx]
  409353:	jmp    DWORD PTR [esi-0x11330100]
  409359:	jae    0x40933a
  40935b:	add    BYTE PTR [ecx-0x7d],ch
  40935e:	inc    DWORD PTR [eax]
  409360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409361:	outs   dx,BYTE PTR ds:[esi]
  409362:	mov    bl,0xff
  409364:	loopne 0x4092e9
  409366:	(bad)  
  409367:	call   FWORD PTR [ebp+0x41]
  40936a:	pop    eax
  40936b:	push   DWORD PTR [ecx+0x4cff00ff]
  409371:	push   eax
  409372:	int    0x0
  409374:	ja     0x409375
  409376:	inc    DWORD PTR [ebx+0xfb4a72]
  40937c:	push   eax
  40937d:	add    BYTE PTR [eax],al
  40937f:	add    BYTE PTR [ebp+ebx*8-0xe0ff99],bl
  409386:	add    BYTE PTR [ebx-0xdb2bf5],al
  40938c:	in     al,0x0
  40938e:	inc    DWORD PTR [eax]
  409390:	pop    ecx
  409391:	test   dl,cl
  409393:	add    BYTE PTR [ebx],ah
  409395:	inc    DWORD PTR [ebx+0x131e1aff]
  40939b:	int3   
  40939c:	cmp    al,0xff
  40939e:	int3   
  40939f:	mov    DWORD PTR [edi-0x790056ae],esi
  4093a5:	add    BYTE PTR [eax],al
  4093a7:	cmp    DWORD PTR [ebx-0x72],0xffffffa2
  4093ab:	add    BYTE PTR [ebp-0x72000000],ah
  4093b1:	sub    dh,BYTE PTR [edi+edi*8]
  4093b4:	dec    edx
  4093b5:	add    bh,bh
  4093b7:	add    dh,ah
  4093b9:	mov    ch,BYTE PTR [eax]
  4093bb:	push   DWORD PTR [ecx+0x2a00ffff]
  4093c1:	and    dl,BYTE PTR [edi]
  4093c3:	inc    DWORD PTR [ebx]
  4093c5:	inc    DWORD PTR [eax]
  4093c7:	add    DWORD PTR [esi],0x2a
  4093ca:	push   0xffffa700
  4093cf:	push   DWORD PTR [edi+0x33002895]
  4093d5:	(bad)  
  4093d6:	(bad)  
  4093d7:	dec    DWORD PTR [ecx-0x5a]
  4093da:	and    eax,0xff94ff
  4093df:	add    ch,dl
  4093e1:	(bad)  
  4093e2:	pop    ebx
  4093e3:	or     DWORD PTR [edi+edi*8],0x0
  4093e7:	call   FWORD PTR [ebx-0x3b]
  4093ea:	sbb    eax,0xffcc6a83
  4093ef:	push   edi
  4093f1:	(bad)  
  4093f2:	das    
  4093f3:	add    DWORD PTR [esi+0x31ffff00],0xffffff9a
  4093fa:	adc    eax,DWORD PTR [eax]
  4093fc:	cmp    eax,0xdd83ff83
  409401:	mov    dh,0x2b
  409403:	add    DWORD PTR [eax-0x1],0xffffff89
  409407:	add    BYTE PTR [edi+0x11897142],ch
  40940d:	(bad)  
  40940e:	(bad)  
  40940f:	jmp    FWORD PTR [ecx+ecx*1-0x5b]
  409413:	xor    DWORD PTR ds:0xb8008300,0xffffffdf
  40941a:	push   edx
  40941b:	(bad)  
  40941c:	jns    0x40941d
  40941e:	add    DWORD PTR [ebx-0x34e37b],0xf
  409425:	dec    esp
  409427:	(bad)  
  409428:	clc    
  409429:	jne    0x409447
  40942b:	cmp    DWORD PTR [edi+edi*8-0x39947c01],0x59
  409433:	mov    DWORD PTR [ecx+ecx*4-0x1],edx
  409437:	push   DWORD PTR [eax-0x700523e]
  40943d:	int3   
  40943e:	(bad)  
  40943f:	jmp    FWORD PTR [edx+0x27]
  409442:	(bad)  
  409443:	add    BYTE PTR [eax+0x0],ch
  409446:	(bad)  
  409447:	(bad)  
  409448:	cli    
  409449:	ins    DWORD PTR es:[edi],dx
  40944a:	pop    ss
  40944b:	jmp    DWORD PTR [edi]
  40944d:	add    bh,bh
  40944f:	add    BYTE PTR [ecx+eiz*8-0x76c87c22],bh
  409456:	add    bh,bh
  409458:	enter  0xa301,0xff
  40945c:	sbb    eax,DWORD PTR [eax]
  40945e:	int3   
  40945f:	cmp    DWORD PTR [ebx],0xffffff95
  409462:	xchg   ebp,eax
  409463:	adc    DWORD PTR [esi+0x5affcc89],0x56
  40946a:	sbb    esp,ecx
  40946c:	jl     0x40946d
  40946e:	inc    DWORD PTR [eax]
  409470:	cmp    dl,BYTE PTR [eax]
  409472:	add    DWORD PTR [eax],0x27
  409475:	mov    DWORD PTR [eax],eax
  409477:	xor    DWORD PTR [ebx-0x2],0xffffffe6
  40947b:	(bad)  
  40947c:	sti    
  40947d:	add    BYTE PTR [ebx+0x428faff],al
  409483:	int3   
  409484:	aas    
  409485:	cmp    edi,0xffffff83
  409488:	xchg   ebp,eax
  409489:	test   DWORD PTR [edx],0xff0035cc
  40948f:	add    BYTE PTR ds:0x8783fae5,ah
  409495:	or     DWORD PTR [ecx+0x3b2861ff],0xffffffff
  40949c:	(bad)  
  40949d:	cmp    edi,0x0
  4094a0:	sub    DWORD PTR [ebp+edi*4-0x761800],esp
  4094a7:	add    BYTE PTR [esi],al
  4094a9:	jo     0x4094bf
  4094ab:	(bad)  
  4094ac:	(bad)  
  4094ad:	inc    DWORD PTR [ebx+0x59b0eff]
  4094b3:	dec    DWORD PTR ds:0x5200ccff
  4094b9:	out    dx,al
  4094ba:	mov    eax,0xffa5cc
  4094bf:	add    BYTE PTR [ebp+0x3],bh
  4094c2:	or     DWORD PTR [ebx-0x3300cf],eax
  4094c8:	(bad)  
  4094ca:	jp     0x4094cc
  4094cc:	inc    esp
  4094cd:	inc    DWORD PTR [ebx-0x70ff6701]
  4094d3:	int3   
  4094d4:	in     al,0xff
  4094d6:	(bad)  
  4094d7:	jmp    DWORD PTR [edx]
  4094d9:	ja     0x409464
  4094db:	push   DWORD PTR [edi+0x11ffffff]
  4094e1:	cwde   
  4094e2:	push   ecx
  4094e3:	add    BYTE PTR [ebx+eax*4],cl
  4094e6:	add    bh,bh
  4094e8:	(bad)  
  4094e9:	stos   DWORD PTR es:[edi],eax
  4094ea:	and    edi,edi
  4094ec:	(bad)  
  4094ed:	int3   
  4094ee:	mov    DWORD PTR [ebx-0xa357cf],eax
  4094f4:	cli    
  4094f5:	add    bh,bh
  4094f7:	xor    DWORD PTR [edx+ebx*1+0x1a],0x0
  4094fc:	adc    eax,0xddccff00
  409501:	sub    eax,0xe89a1
  409506:	dec    esp
  409508:	inc    ecx
  409509:	inc    ebp
  40950a:	loop   0x40950c
  40950c:	jmp    0x9d7a:0x67ff00cc
  409513:	mov    DWORD PTR [esi-0x7d],eax
  409516:	or     DWORD PTR [ecx+0x681b1],0xffffffc6
  40951d:	add    bh,bh
  40951f:	(bad)  
  409520:	mov    ecx,0x9c00b9f7
  409525:	inc    DWORD PTR [eax]
  409527:	push   ebp
  409529:	mov    ah,0x34
  40952b:	(bad)  
  40952c:	in     eax,dx
  40952d:	add    BYTE PTR [eax],al
  40952f:	(bad)  
  409530:	fisttp QWORD PTR [ebx-0x3876d4]
  409536:	int3   
  409537:	add    BYTE PTR [edi+0x638981df],al
  40953d:	inc    DWORD PTR [eax]
  40953f:	jmp    DWORD PTR [edx-0x1]
  409542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409543:	call   FWORD PTR [eax]
  409545:	add    bh,bh
  409547:	inc    DWORD PTR [ebp-0x56ff7ad5]
  40954d:	inc    DWORD PTR [ebx+0x6c4188ff]
  409553:	jmp    FWORD PTR [ebp-0x67767c7d]
  409559:	fdiv   DWORD PTR [ebp-0x4f01]
  40955f:	or     DWORD PTR [edx],0xffffff99
  409562:	pop    esp
  409563:	inc    DWORD PTR [eax+eax*1]
  409566:	add    bh,bh
  409568:	into   
  409569:	push   ebp
  40956a:	dec    esp
  40956b:	push   eax
  40956d:	inc    DWORD PTR [eax]
  40956f:	inc    ecx
  409571:	xor    al,BYTE PTR [eax+eax*1+0x13]
  409575:	add    ah,cl
  409577:	call   DWORD PTR [ebp+0x7f]
  40957a:	addr16 (bad) 
  40957c:	ds (bad) 
  40957e:	inc    DWORD PTR [eax]
  409580:	scas   al,BYTE PTR es:[edi]
  409581:	pop    ebp
  409582:	ds mov ebx,ebp
  409585:	add    BYTE PTR [ebx+0x5fa64600],al
  40958b:	add    bl,cl
  40958d:	add    bh,bh
  40958f:	mov    edx,ecx
  409591:	dec    edi
  409592:	inc    DWORD PTR es:[edi+edi*8]
  409596:	inc    DWORD PTR [ebx+0xabef82]
  40959c:	test   bh,bh
  40959e:	mov    DWORD PTR [eax],eax
  4095a0:	imul   esi,DWORD PTR [esi],0xffffffee
  4095a3:	mov    DWORD PTR [ebx+eax*4-0x1],esi
  4095a7:	add    BYTE PTR [edx+0x1c83cb02],dl
  4095ad:	add    ah,cl
  4095af:	add    cl,bh
  4095b1:	add    dh,0xff
  4095b4:	add    DWORD PTR [eax],0x5244ff83
  4095ba:	jecxz  0x4095bc
  4095bc:	jle    0x4095be
  4095be:	add    BYTE PTR [ebx-0x7c3bbb8c],al
  4095c4:	cmp    edi,0x0
  4095c7:	add    BYTE PTR [ebx-0x5f],dl
  4095ca:	cmp    eax,DWORD PTR [eax]
  4095cc:	loop   0x4095cd
  4095ce:	mov    DWORD PTR [eax],eax
  4095d0:	sti    
  4095d1:	ja     0x409563
  4095d3:	add    ebp,0x0
  4095d6:	add    bh,bh
  4095d8:	in     al,dx
  4095d9:	and    eax,0xd8ff7e
  4095de:	inc    DWORD PTR [eax]
  4095e0:	pop    edi
  4095e1:	dec    eax
  4095e2:	pop    edi
  4095e3:	int3   
  4095e4:	pop    ss
  4095e5:	inc    DWORD PTR [ebx+0x777fd8ff]
  4095eb:	jmp    FWORD PTR ds:0xaf890000
  4095f1:	adc    DWORD PTR [esi-0x2501],eax
  4095f7:	cmp    DWORD PTR [edx-0x3633dd83],0xffffffff
  4095fe:	add    BYTE PTR [ebx+0xae8037],al
  409604:	adc    eax,0xd3ffff83
  409609:	inc    edx
  40960a:	jbe    0x40960c
  40960c:	pusha  
  40960d:	(bad)  
  40960e:	(bad)  
  40960f:	call   FWORD PTR [esi+0x7d00bf89]
  409615:	add    DWORD PTR [eax],0xffffffff
  409618:	imul   esi,DWORD PTR [edi-0xfe0015],0xffffff89
  40961f:	push   esp
  409621:	lds    ecx,FWORD PTR [ebx+0xffd5ff]
  409627:	add    dl,dl
  409629:	and    DWORD PTR [edx-0x1],ecx
  40962c:	xchg   ebx,eax
  40962d:	cmp    edi,0xffffffff
  409630:	ins    BYTE PTR es:[edi],dx
  409631:	and    DWORD PTR [edi+edi*8],eax
  409634:	ins    DWORD PTR es:[edi],dx
  409635:	inc    DWORD PTR [eax]
  409637:	mov    DWORD PTR [eax],edi
  409639:	sbb    al,0xb8
  40963b:	add    BYTE PTR [edi+edi*8],cl
  40963e:	add    DWORD PTR [eax],0xffffffd9
  409641:	or     ebx,DWORD PTR [esi-0x7c7d7d]
  409647:	dec    DWORD PTR [ebx-0x4b]
  40964a:	enter  0xdc00,0x0
  40964e:	inc    DWORD PTR [ebx-0x912ebf]
  409654:	pusha  
  409655:	int3   
  409656:	mov    edi,edi
  409658:	cmp    BYTE PTR [ebx],ch
  40965a:	cmp    bh,bh
  40965c:	in     eax,dx
  40965d:	add    BYTE PTR [eax],al
  40965f:	(bad)  
  409660:	ficomp WORD PTR [esi+0x14ffba]
  409666:	or     DWORD PTR [ecx+0x122b32],0xffffff9c
  40966d:	add    DWORD PTR [eax],0xffffffff
  409670:	mov    WORD PTR [esi+edi*1-0x7d],cs
  409674:	cmc    
  409675:	add    bh,bh
  409677:	call   DWORD PTR [edi+ebp*8-0x71]
  40967b:	add    BYTE PTR [eax+0x6e8300ff],ah
  409681:	fnstsw WORD PTR [ecx-0x1]
  409684:	add    DWORD PTR [eax],0x5143ffff
  40968a:	iret   
  40968b:	add    BYTE PTR [eax],cl
  40968d:	inc    DWORD PTR [eax]
  40968f:	(bad)  
  409690:	fld    DWORD PTR [eax-0xd833bc]
  409696:	inc    DWORD PTR [eax]
  409698:	rcl    edx,1
  40969a:	push   ecx
  40969b:	add    BYTE PTR [edx],ch
  40969d:	add    bh,bh
  40969f:	add    BYTE PTR [eax+0x4eff392f],bh
  4096a5:	add    bh,bh
  4096a7:	mov    DWORD PTR [ebp+0x42],edx
  4096aa:	retf   
  4096ab:	(bad)  
  4096ac:	in     eax,dx
  4096ad:	int3   
  4096ae:	add    DWORD PTR [eax],0xffffffa7
  4096b1:	mov    ds:0x290082,eax
  4096b6:	(bad)  
  4096b7:	dec    DWORD PTR [ecx-0x690019ef]
  4096bd:	dec    esp
  4096bf:	int3   
  4096c0:	adc    BYTE PTR [ebp-0x29],dh
  4096c3:	call   FWORD PTR [eax-0x3000ff01]
  4096c9:	imul   ebp,DWORD PTR ds:0x8300f0ff,0xd8cfbaff
  4096d3:	adc    ecx,0x0
  4096d6:	(bad)  
  4096d7:	call   esp
  4096d9:	sti    
  4096da:	ins    BYTE PTR es:[edi],dx
  4096db:	inc    DWORD PTR [ebx-0x77]
  4096de:	add    bh,bh
  4096e0:	jo     0x40974c
  4096e2:	sbb    al,BYTE PTR [eax]
  4096e4:	jge    0x409669
  4096e6:	int3   
  4096e7:	mov    DWORD PTR [ecx+0x7dffc5fe],esi
  4096ed:	add    bh,bh
  4096ef:	add    dh,al
  4096f1:	push   0xfff0cc2b
  4096f6:	(bad)  
  4096f7:	(bad)  
  4096f8:	fiadd  WORD PTR [esi-0x335800cb]
  4096fe:	cmp    edi,0xffffffe2
  409701:	data16 ror BYTE PTR [ecx-0xf],0xd2
  409709:	pop    ds
  40970a:	pusha  
  40970b:	dec    DWORD PTR [ecx]
  40970d:	inc    DWORD PTR [ebx-0x5de1db01]
  409713:	adc    DWORD PTR [edi+0x0],0xffffff83
  409717:	inc    DWORD PTR [esi+0x34cc8810]
  40971d:	inc    DWORD PTR [eax]
  40971f:	push   DWORD PTR [edx+0x3b]
  409722:	int3   
  409723:	add    bl,cl
  409725:	inc    DWORD PTR [ebx-0x7e6d0877]
  40972b:	sbb    DWORD PTR [esi+0x0],0xffffffcc
  40972f:	add    BYTE PTR [ebx+0x38],ch
  409732:	mov    dh,0x83
  409734:	xchg   bh,bh
  409736:	add    BYTE PTR [eax],al
  409738:	shl    BYTE PTR [edi-0x16],cl
  40973b:	add    bh,ah
  40973d:	inc    DWORD PTR [eax]
  40973f:	add    BYTE PTR [ecx+0x5b],ch
  409742:	clc    
  409743:	cmp    ebp,0xffffff83
  409746:	add    bh,bh
  409748:	std    
  409749:	push   eax
  40974a:	arpl   di,di
  40974c:	test   ah,0xff
  40974f:	mov    DWORD PTR [esi*8+0x660012],edi
  409756:	dec    esp
  409758:	or     ch,cl
  40975a:	dec    eax
  40975b:	jmp    DWORD PTR [ebx]
  40975d:	inc    DWORD PTR [eax]
  40975f:	int3   
  409760:	outs   dx,DWORD PTR ds:[esi]
  409761:	cmp    al,0x11
  409763:	add    DWORD PTR [edi-0x7d],0xffffff83
  409767:	add    BYTE PTR [ebp-0x4800b7ec],bl
  40976d:	inc    DWORD PTR [eax]
  40976f:	push   DWORD PTR [eax+esi*1]
  409772:	jl     0x409773
  409774:	and    ecx,DWORD PTR [ecx+0x655affff]
  40977a:	(bad)  
  40977b:	inc    DWORD PTR [eax]
  40977d:	(bad)  
  40977e:	inc    DWORD PTR [eax]
  409780:	sbb    BYTE PTR [ecx-0xb1ff4c],dl
  409786:	inc    DWORD PTR [eax]
  409788:	mov    dl,BYTE PTR [ebp-0x1]
  40978b:	jmp    DWORD PTR [ebp-0x78ff0034]
  409791:	cwde   
  409792:	call   0xdd00:0xff00b500
  409799:	xchg   ecx,eax
  40979a:	jmp    0x409768
  40979c:	mov    esp,0xec83ff00
  4097a1:	outs   dx,DWORD PTR ds:[esi]
  4097a2:	mov    bh,bh
  4097a4:	xchg   esi,eax
  4097a5:	add    bh,bh
  4097a7:	mov    eax,esp
  4097a9:	jnp    0x40977a
  4097ab:	(bad)  
  4097ac:	stc    
  4097ad:	(bad)  
  4097ae:	dec    esp
  4097b0:	(bad)  
  4097b1:	into   
  4097b2:	idiv   bh
  4097b4:	mov    ch,0x0
  4097b6:	int3   
  4097b7:	int3   
  4097b8:	adc    DWORD PTR [eax-0xc],0xffffffff
  4097bc:	or     al,BYTE PTR [eax]
  4097be:	add    DWORD PTR [eax],0x56
  4097c1:	stc    
  4097c2:	in     eax,dx
  4097c3:	adc    DWORD PTR [ecx],0xffffffcc
  4097c6:	add    bh,bh
  4097c8:	xchg   edi,eax
  4097c9:	es icebp 
  4097cb:	add    cl,dl
  4097cd:	(bad)  
  4097ce:	inc    DWORD PTR [eax]
  4097d0:	lea    edx,[ebp-0x33ab76f5]
  4097d6:	add    BYTE PTR [ecx-0x4c11d2],cl
  4097dc:	int3   
  4097dd:	(bad)  
  4097de:	(bad)  
  4097df:	push   DWORD PTR [edx-0xd00d2e4]
  4097e5:	cmp    edi,0x0
  4097e8:	push   ebx
  4097e9:	shl    BYTE PTR [edx],1
  4097eb:	add    BYTE PTR [ebp+0x5583ffff],bl
  4097f1:	out    0x3f,eax
  4097f3:	add    ch,ah
  4097f5:	inc    DWORD PTR [eax]
  4097f7:	push   DWORD PTR [ebp-0x2f]
  4097fa:	sbb    edi,edi
  4097fc:	data16 add BYTE PTR [ecx-0x59d64601],cl
  409803:	mov    ebx,edi
  409805:	mov    DWORD PTR [eax],eax
  409807:	sub    DWORD PTR [eax+0x4c],0xffffffc2
  40980b:	call   FWORD PTR [ebp+0x0]
  40980e:	inc    DWORD PTR [eax]
  409810:	sbb    eax,DWORD PTR [esi-0xb37c3f]
  409816:	or     esp,0xffffffbd
  409819:	aad    0xd2
  40981b:	add    BYTE PTR [ebx],cl
  40981d:	add    bh,bh
  40981f:	jmp    esi
  409821:	out    0x9b,eax
  409823:	add    BYTE PTR [edx],ch
  409825:	(bad)  
  409826:	inc    DWORD PTR [ebx+0x1c2e24]
  40982c:	aaa    
  40982d:	inc    DWORD PTR [ebx-0x1fb92701]
  409833:	add    BYTE PTR [edx],dl
  409835:	(bad)  
  409836:	inc    DWORD PTR [eax]
  409838:	sub    eax,0x90ffa733
  40983d:	inc    DWORD PTR [eax]
  40983f:	add    BYTE PTR ds:0x1c005bc1,dl
  409845:	(bad)  
  409846:	(bad)  
  409847:	call   DWORD PTR [ebx]
  409849:	leave  
  40984a:	add    eax,DWORD PTR [ebx+0xff006d]
  409850:	enter  0x7163,0x89
  409854:	mov    al,ds:0xec0000ff
  409859:	mov    dl,0xc6
  40985b:	add    ch,dh
  40985d:	int3   
  40985e:	(bad)  
  40985f:	jmp    ebx
  409861:	inc    esi
  409862:	arpl   WORD PTR [eax],ax
  409864:	push   ss
  409865:	cmp    edi,0x0
  409868:	(bad)  
  409869:	mov    esp,0xff4c896f
  40986e:	cmp    edi,0x39
  409871:	inc    ebx
  409872:	cwde   
  409873:	add    BYTE PTR [edx-0x1],al
  409876:	mov    edi,edi
  409878:	push   esi
  409879:	mov    bh,0x80
  40987b:	inc    DWORD PTR [eax]
  40987d:	(bad)  
  40987e:	inc    DWORD PTR [eax]
  409880:	fnstsw WORD PTR [ebp-0xf07c9e]
  409886:	inc    DWORD PTR [eax]
  409888:	or     BYTE PTR [edx-0x7c1b0026],bl
  40988e:	or     DWORD PTR [ecx-0x7666b1af],0x4e
  409895:	add    bh,bh
  409897:	call   DWORD PTR [ebx+0x67]
  40989a:	push   es
  40989b:	sub    ecx,0xffffffff
  40989e:	or     esp,0xffffffa8
  4098a1:	mov    dl,0x75
  4098a3:	add    BYTE PTR [edx-0x1],ch
  4098a6:	int3   
  4098a7:	jmp    DWORD PTR [ebx-0x7900a485]
  4098ad:	(bad)  
  4098ae:	inc    DWORD PTR [eax]
  4098b0:	lea    esi,[edi-0x3ff56]
  4098b6:	dec    DWORD PTR [ecx-0x40d2ae]
  4098bc:	(bad)  
  4098be:	dec    esp
  4098c0:	mov    WORD PTR [edi-0x62],cs
  4098c3:	add    BYTE PTR [edi-0x60ff0100],al
  4098c9:	iret   
  4098ca:	fadd   DWORD PTR [eax]
  4098cc:	sbb    eax,DWORD PTR [eax]
  4098ce:	(bad)  
  4098cf:	push   DWORD PTR [edx]
  4098d1:	cmp    esi,DWORD PTR [eax+0x0]
  4098d4:	push   es
  4098d5:	add    BYTE PTR [eax],al
  4098d7:	jmp    DWORD PTR [edx+0x6dcc07a0]
  4098dd:	inc    DWORD PTR [eax]
  4098df:	int3   
  4098e0:	lock cmp eax,ecx
  4098e3:	add    BYTE PTR [ebp-0x6300ff34],dl
  4098e9:	(bad)  
  4098eb:	add    BYTE PTR [eax+0x0],dh
  4098ee:	int3   
  4098ef:	add    BYTE PTR [edi],bh
  4098f1:	mov    ?,WORD PTR [ecx-0xff5b01]
  4098f7:	int3   
  4098f8:	add    DWORD PTR [edx],edi
  4098fa:	rol    DWORD PTR [eax],0x22
  4098fd:	inc    DWORD PTR [ebx-0x4b7e9400]
  409903:	xor    DWORD PTR [edx],0xffffffff
  409906:	int3   
  409907:	add    BYTE PTR [ebx],ch
  409909:	sub    BYTE PTR [eax+eax*1-0x2d],ah
  40990d:	(bad)  
  40990e:	(bad)  
  40990f:	dec    DWORD PTR [esp+ebp*8]
  409912:	inc    edi
  409913:	call   FWORD PTR [ecx+ecx*4-0x1]
  409917:	xor    DWORD PTR [edx-0x32],0x77
  40991b:	push   DWORD PTR [ebx-0x77]
  40991e:	or     esp,0xffffffec
  409921:	dec    esp
  409922:	aam    0x83
  409924:	outs   dx,BYTE PTR ds:[esi]
  409925:	inc    DWORD PTR [eax]
  409927:	add    BYTE PTR ds:0xa2836756,dl
  40992d:	(bad)  
  40992e:	inc    DWORD PTR [eax]
  409930:	mov    bl,0xf8
  409932:	xor    bh,bh
  409934:	adc    ecx,esp
  409936:	dec    DWORD PTR [ecx-0xa3a822]
  40993c:	cmp    eax,DWORD PTR [ebx+0x53f800ff]
  409942:	jmp    0x8340e246
  409947:	dec    DWORD PTR [ebx+0x2a]
  40994a:	xor    eax,0xffb1cc
  40994f:	add    BYTE PTR [edx+0x2dff2687],ah
  409955:	add    BYTE PTR [ecx+0x49c8e3ff],cl
  40995b:	dec    DWORD PTR [edx+0x62ffffff]
  409961:	addr16 call 0x71ff:0x83ff6ccc
  409969:	loop   0x409952
  40996b:	add    BYTE PTR [ecx],dl
  40996d:	dec    esp
  40996f:	add    cl,al
  409971:	and    DWORD PTR [ebx-0x1],edx
  409974:	mov    al,BYTE PTR [eax]
  409976:	inc    DWORD PTR [ebx-0xeb3f41]
  40997c:	test   BYTE PTR [ebx-0x3ad3ff01],al
  409982:	xchg   ecx,eax
  409983:	(bad)  
  409984:	ds cmp edi,0xffffffff
  409988:	jns    0x4099d3
  40998a:	adc    DWORD PTR [ebx-0x33007672],eax
  409990:	xor    eax,0xd6009953
  409995:	int3   
  409996:	inc    DWORD PTR [eax]
  409998:	out    dx,eax
  409999:	rol    DWORD PTR [edx-0xb87d],cl
  40999f:	inc    DWORD PTR [ecx]
  4099a1:	push   ds
  4099a2:	enter  0x93ff,0x0
  4099a6:	add    BYTE PTR [ecx+0x179238],cl
  4099ac:	push   ebx
  4099ad:	inc    DWORD PTR [eax]
  4099af:	cmp    DWORD PTR [ebp-0x3a7c986e],0xffffffff
  4099b6:	add    DWORD PTR [eax],0xffffff82
  4099b9:	mov    ebx,0xff64fff5
  4099be:	add    DWORD PTR [eax],0x7f
  4099c1:	cmp    bh,BYTE PTR [ebx]
  4099c3:	call   FWORD PTR ds:0x5890000
  4099c9:	imul   esi,DWORD PTR [edx],0xffffffff
  4099cc:	stos   BYTE PTR es:[edi],al
  4099cd:	add    DWORD PTR [ebx+0x6ca840ff],0xffffffff
  4099d4:	hlt    
  4099d5:	(bad)  
  4099d6:	inc    DWORD PTR [eax]
  4099d8:	and    DWORD PTR [ecx-0x3b],0x830024ff
  4099df:	add    BYTE PTR [edi-0x67],dh
  4099e2:	rol    BYTE PTR [eax],cl
  4099e4:	xchg   esp,eax
  4099e5:	dec    esp
  4099e7:	add    BYTE PTR [edx+0x0],ah
  4099ea:	lods   al,BYTE PTR ds:[esi]
  4099eb:	dec    DWORD PTR [ebp+0x0]
  4099ee:	(bad)  
  4099ef:	push   ecx
  4099f1:	mov    al,0x9
  4099f3:	dec    DWORD PTR [edi-0x1]
  4099f6:	(bad)  
  4099f7:	dec    esi
  4099f9:	lock stos DWORD PTR es:[edi],eax
  4099fb:	add    BYTE PTR [edi+0x0],bh
  4099fe:	inc    DWORD PTR [eax]
  409a00:	test   BYTE PTR [edi],al
  409a02:	(bad)  
  409a03:	jmp    FWORD PTR [eax]
  409a05:	add    BYTE PTR [ebx+0x116ebcff],al
  409a0b:	add    ah,dl
  409a0d:	cmp    edi,0xffffffff
  409a10:	mov    dh,0xf7
  409a12:	jmp    DWORD PTR cs:[ecx]
  409a15:	add    BYTE PTR [eax],al
  409a17:	inc    DWORD PTR [ebp+ecx*1-0x3e3338]
  409a1e:	mov    esp,ecx
  409a20:	cmp    bl,ch
  409a22:	pusha  
  409a23:	jmp    esp
  409a25:	add    BYTE PTR [eax],al
  409a27:	add    DWORD PTR [ecx+esi*1],0x5f
  409a2b:	int3   
  409a2c:	cld    
  409a2d:	add    bh,bh
  409a2f:	add    ah,cl
  409a31:	dec    edi
  409a32:	sbb    al,BYTE PTR [eax]
  409a34:	jbe    0x409a36
  409a36:	inc    DWORD PTR [eax]
  409a38:	xor    ah,cl
  409a3a:	or     ah,cl
  409a3c:	sbb    al,0xff
  409a3e:	inc    DWORD PTR [eax]
  409a40:	push   cs
  409a41:	xchg   BYTE PTR [ebp-0x34],cl
  409a44:	pop    ebp
  409a45:	add    BYTE PTR [eax],al
  409a47:	add    BYTE PTR [edx],ah
  409a49:	int3   
  409a4a:	in     al,0x0
  409a4c:	or     DWORD PTR [ecx+0x66dc8383],0xbdff5b
  409a56:	(bad)  
  409a57:	inc    DWORD PTR [esi]
  409a59:	cmp    bl,0x89
  409a5c:	cmp    BYTE PTR [eax],al
  409a5e:	mov    edi,edi
  409a60:	in     al,dx
  409a61:	and    ebx,DWORD PTR [ebp-0xff4000]
  409a67:	call   DWORD PTR [ebx-0x65]
  409a6a:	test   eax,0x89ff7fff
  409a6f:	add    BYTE PTR [ebp+0x6],bh
  409a72:	nop
  409a73:	(bad)  
  409a74:	cld    
  409a75:	add    bh,bh
  409a77:	push   DWORD PTR [edi]
  409a79:	not    BYTE PTR [edx-0x1]
  409a7c:	int3   
  409a7d:	inc    DWORD PTR [ebx+0x3db45c89]
  409a83:	int3   
  409a84:	dec    edx
  409a85:	(bad)  
  409a86:	(bad)  
  409a87:	(bad)  
  409a88:	jmp    0xccff:0x4689cef2
  409a8f:	dec    DWORD PTR [ebx]
  409a91:	dec    edi
  409a92:	mov    bl,0xff
  409a94:	icebp  
  409a95:	add    DWORD PTR [eax],0xffffffff
  409a98:	jmp    0xc5c9b4c7
  409a9d:	add    BYTE PTR [ebx-0x239a9400],al
  409aa3:	add    BYTE PTR [esi+0x1f89ffff],bh
  409aa9:	stos   DWORD PTR es:[edi],eax
  409aaa:	pop    ecx
  409aab:	and    DWORD PTR [esi-0x43000000],0x15
  409ab2:	sbb    al,BYTE PTR [eax]
  409ab4:	push   ecx
  409ab5:	inc    DWORD PTR [eax]
  409ab7:	sbb    DWORD PTR [edx+0x3e83ce3b],0xffffff83
  409abe:	int3   
  409abf:	and    DWORD PTR [edx-0xe],0xffffffb3
  409ac3:	add    BYTE PTR [eax],cl
  409ac5:	add    bh,bh
  409ac7:	add    BYTE PTR [ebx-0x46],dl
  409aca:	mov    WORD PTR [eax],es
  409acc:	(bad)  
  409acd:	dec    esp
  409acf:	jmp    DWORD PTR [ebx]
  409ad1:	mov    ah,0xbf
  409ad3:	add    ch,dh
  409ad5:	add    BYTE PTR [ebx-0x7685eb00],al
  409adb:	add    BYTE PTR [ebx+0x55ffff83],cl
  409ae1:	xchg   edx,eax
  409ae2:	xchg   esp,eax
  409ae3:	adc    DWORD PTR [eax],0xffffff89
  409ae6:	add    DWORD PTR [eax],0x65
  409ae9:	leave  
  409aea:	cs (bad) 
  409aec:	(bad)  
  409aee:	int3   
  409aef:	call   DWORD PTR [esi-0x6c]
  409af2:	aam    0xcc
  409af4:	lods   eax,DWORD PTR ds:[esi]
  409af5:	mov    edi,edi
  409af7:	mov    DWORD PTR ds:0xd600c87b,ecx
  409afd:	inc    DWORD PTR [eax]
  409aff:	(bad)  
  409b00:	stc    
  409b01:	sbb    BYTE PTR [edi-0x1],bl
  409b04:	xchg   BYTE PTR [ebx-0x17270000],al
  409b0a:	fdivr  st,st(7)
  409b0c:	sar    edi,0xff
  409b0f:	mov    edi,edi
  409b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b12:	ret    0xe00
  409b15:	cmp    edi,0x0
  409b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b19:	mov    al,0x92
  409b1b:	add    BYTE PTR [edi-0x2c000001],ch
  409b21:	ror    DWORD PTR [ebx],0x83
  409b24:	inc    BYTE PTR [ebx+0x7f70000]
  409b2a:	out    0xff,eax
  409b2c:	leave  
  409b2d:	mov    edi,edi
  409b2f:	add    dh,ch
  409b31:	push   edi
  409b32:	pop    ecx
  409b33:	int3   
  409b34:	test   bh,bh
  409b36:	or     DWORD PTR [ecx+0x9dc45d],0xffffffbb
  409b3d:	inc    DWORD PTR [eax]
  409b3f:	sub    edx,0xffffffea
  409b42:	fld    QWORD PTR [ebx-0x7caa]
  409b48:	xchg   edi,eax
  409b49:	jmp    0x409afc
  409b4b:	(bad)  
  409b4c:	jg     0x409b4e
  409b4e:	add    bh,bh
  409b50:	leave  
  409b51:	mov    edx,0xff5b8309
  409b56:	(bad)  
  409b57:	push   ebp
  409b59:	out    dx,al
  409b5a:	or     al,0x0
  409b5c:	sub    eax,DWORD PTR [eax]
  409b5e:	add    BYTE PTR [ebx-0x43695],al
  409b64:	add    eax,0x3500ccff
  409b69:	repz sbb ah,cl
  409b6c:	xor    al,0xff
  409b6e:	inc    DWORD PTR [ebx+0xf0b12]
  409b74:	mov    esi,0x6ff0000
  409b79:	sti    
  409b7a:	loop   0x409aff
  409b7c:	pop    ebx
  409b7d:	(bad)  
  409b7e:	(bad)  
  409b7f:	push   DWORD PTR [ebx]
  409b81:	aaa    
  409b82:	pop    es
  409b83:	inc    DWORD PTR [eax-0x1d7c3400]
  409b89:	dec    eax
  409b8a:	(bad)
  409b8e:	inc    DWORD PTR [eax]
  409b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b91:	call   0x84379b4d
  409b96:	int3   
  409b97:	call   DWORD PTR [esi-0x2c]
  409b9a:	leave  
  409b9b:	add    BYTE PTR [eax],ch
  409b9d:	add    BYTE PTR [eax],al
  409b9f:	mov    DWORD PTR [edx+edi*4+0x2f],eax
  409ba3:	mov    DWORD PTR [edi+edi*8],esp
  409ba6:	add    BYTE PTR [ecx+0xc64603],cl
  409bac:	inc    edx
  409bad:	or     esp,0x0
  409bb0:	mov    bh,0xfa
  409bb2:	pop    ds
  409bb3:	jmp    DWORD PTR [esi+0x38ffffff]
  409bb9:	lds    eax,FWORD PTR [ebx+0x0]
  409bbc:	retf   0x83cc
  409bbf:	mov    DWORD PTR [edi+0xcff9cf7],edx
  409bc5:	or     DWORD PTR [ecx-0x11a98401],0x0
  409bcc:	test   BYTE PTR [ebx-0x6159ff7d],0xc8
  409bd3:	push   edx
  409bd5:	(bad)  
  409bd6:	(bad)  
  409bd7:	call   DWORD PTR [eax-0x5e00505e]
  409bdd:	add    bh,bh
  409bdf:	(bad)  
  409be0:	jmp    0x83400ef6
  409be5:	cmp    edi,0xffffffff
  409be8:	pop    esi
  409be9:	mov    WORD PTR fs:[eax],es
  409bec:	stc    
  409bed:	add    BYTE PTR [eax],al
  409bef:	mov    DWORD PTR [ecx+edi*2],ecx
  409bf2:	xor    al,0xff
  409bf4:	mov    edx,0x92000000
  409bf9:	fisttp WORD PTR [ecx-0x766b00]
  409bff:	add    bh,bl
  409c01:	sub    eax,0xccd6fff6
  409c06:	(bad)  
  409c07:	inc    DWORD PTR [ebp-0x5200f169]
  409c0d:	dec    esp
  409c0f:	add    BYTE PTR [ecx],ch
  409c11:	arpl   sp,bp
  409c13:	mov    DWORD PTR ds:0x15ffff83,esp
  409c19:	sbb    eax,0xffe0ff83
  409c1e:	(bad)  
  409c1f:	jmp    edx
  409c21:	xor    ch,bl
  409c23:	add    bh,ah
  409c25:	add    BYTE PTR [ecx+0x140d5dcc],cl
  409c2b:	add    BYTE PTR [ebx-0x1],bh
  409c2e:	add    bh,bh
  409c30:	imul   ebp,DWORD PTR [eax-0x29],0xff00aeff
  409c37:	xor    DWORD PTR [ebx],0xfffffff7
  409c3a:	sub    bh,bh
  409c3c:	push   0x37890000
  409c41:	cmp    ah,dl
  409c43:	add    BYTE PTR [edx+0x0],dh
  409c46:	add    BYTE PTR [eax],al
  409c48:	xor    ah,BYTE PTR [esi]
  409c4a:	ins    BYTE PTR es:[edi],dx
  409c4b:	int3   
  409c4c:	in     al,0x89
  409c4e:	(bad)  
  409c4f:	push   DWORD PTR [eax+0x728995a6]
  409c55:	inc    DWORD PTR [eax]
  409c57:	mov    DWORD PTR [ecx-0x49],eax
  409c5a:	into   
  409c5b:	add    BYTE PTR [edi-0x51000001],dl
  409c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c62:	jb     0x409c63
  409c64:	outs   dx,BYTE PTR ds:[esi]
  409c65:	add    BYTE PTR [eax],al
  409c67:	(bad)  
  409c68:	cmp    al,0xaf
  409c6a:	jns    0x409c6c
  409c6c:	repz dec esp
  409c6f:	inc    ebx
  409c71:	scas   al,BYTE PTR es:[edi]
  409c72:	mov    al,0xff
  409c74:	adc    al,BYTE PTR [ebx+0x2b37ff89]
  409c7a:	pop    eax
  409c7b:	dec    esi
  409c7d:	(bad)  
  409c7e:	(bad)  
  409c7f:	jmp    edx
  409c81:	mov    fs,eax
  409c83:	add    dh,al
  409c85:	int3   
  409c86:	(bad)  
  409c87:	(bad)  
  409c88:	mov    edi,0xe8fffd7a
  409c8d:	cmp    edi,0xffffff83
  409c90:	retf   
  409c91:	jg     0x409c17
  409c93:	push   DWORD PTR [ecx+ecx*4+0x6042ff00]
  409c9a:	jle    0x409c1f
  409c9c:	aam    0xff
  409c9e:	cmp    edi,0x7c
  409ca1:	aaa    
  409ca2:	imul   edi,edi,0xffffff8a
  409ca5:	int3   
  409ca6:	cmp    edi,0xffffffbf
  409ca9:	pop    ds
  409caa:	push   edx
  409cab:	jmp    DWORD PTR [ebx-0x1]
  409cae:	add    DWORD PTR [eax],0x11
  409cb1:	aaa    
  409cb2:	enter  0x489,0xcc
  409cb6:	int3   
  409cb7:	jmp    DWORD PTR [eax]
  409cb9:	push   ecx
  409cba:	popa   
  409cbb:	int3   
  409cbc:	outs   dx,DWORD PTR ds:[esi]
  409cbd:	(bad)  
  409cbe:	inc    DWORD PTR [ebx-0x30ab6d]
  409cc4:	mov    bl,0x0
  409cc6:	inc    DWORD PTR [ebx-0x4ba862]
  409ccc:	mov    ds:0x78ffffcc,eax
  409cd1:	popa   
  409cd2:	cli    
  409cd3:	jmp    edi
  409cd5:	add    BYTE PTR [eax],al
  409cd7:	add    al,bh
  409cd9:	inc    ebp
  409cda:	cmp    bh,bh
  409cdc:	jne    0x409cdd
  409cde:	add    bh,bh
  409ce0:	mov    bl,0xa2
  409ce2:	or     al,BYTE PTR [eax]
  409ce4:	sbb    al,0xcc
  409ce6:	inc    DWORD PTR [ebx-0x339859de]
  409cec:	add    BYTE PTR [eax],al
  409cee:	inc    DWORD PTR [ebx+0x9dffae]
  409cf4:	(bad)  
  409cf5:	inc    DWORD PTR [eax]
  409cf7:	add    BYTE PTR ds:0x30090fe,bh
  409cfd:	inc    DWORD PTR [ebx-0x314ff001]
  409d03:	add    ch,dl
  409d05:	(bad)  
  409d06:	inc    DWORD PTR [eax]
  409d08:	jecxz  0x409d51
  409d0a:	push   ebp
  409d0b:	jmp    FWORD PTR [edi]
  409d0d:	mov    edi,edi
  409d0f:	inc    DWORD PTR [ecx-0x50]
  409d12:	mov    dh,0x89
  409d14:	retf   
  409d15:	add    BYTE PTR [ebx-0x1ad94d00],al
  409d1b:	mov    ebp,ecx
  409d1d:	dec    esp
  409d1f:	inc    DWORD PTR [ecx+0x220ec]
  409d25:	add    BYTE PTR [ebx+0x55],dl
  409d28:	push   esi
  409d29:	push   edi
  409d2a:	call   DWORD PTR ds:0x445054
  409d30:	push   0x0
  409d32:	mov    ebp,eax
  409d34:	call   DWORD PTR ds:0x445014
  409d3a:	mov    esi,DWORD PTR ds:0x448d04
  409d40:	mov    ebx,DWORD PTR ds:0x445018
  409d46:	add    esi,0x53c8
  409d4c:	mov    edi,0x14f
  409d51:	mov    eax,ds:0x448004
  409d56:	mov    eax,DWORD PTR [eax+0x3]
  409d59:	mov    ds:0x448cf0,eax
  409d5e:	mov    ecx,0x58dd776a
  409d63:	sub    ecx,DWORD PTR ds:0x448d00
  409d69:	add    esi,0x8
  409d6c:	xor    ecx,eax
  409d6e:	mov    DWORD PTR [esi-0x8],ecx
  409d71:	mov    ecx,DWORD PTR ds:0x448004
  409d77:	movzx  eax,WORD PTR [ecx+0xe]
  409d7b:	movzx  edx,BYTE PTR [ecx+0xb]
  409d7f:	movzx  ecx,BYTE PTR [ecx+0x8]
  409d83:	shl    eax,0x8
  409d86:	add    eax,edx
  409d88:	mov    edx,DWORD PTR ds:0x448d00
  409d8e:	shl    eax,0x8
  409d91:	add    eax,ecx
  409d93:	add    edx,0x58d5739e
  409d99:	xor    edx,eax
  409d9b:	mov    ds:0x448cf0,eax
  409da0:	mov    DWORD PTR [esi-0x4],edx
  409da3:	call   ebx
  409da5:	add    DWORD PTR ds:0x448004,0x10
  409dac:	dec    edi
  409dad:	jne    0x409d51
  409daf:	mov    eax,ds:0x448d04
  409db4:	mov    edx,DWORD PTR ds:0x448008
  409dba:	add    eax,0x5e40
  409dbf:	lea    esi,[edi+0x4d]
  409dc2:	movzx  ecx,BYTE PTR [edx+0x8]
  409dc6:	movzx  edi,BYTE PTR [edx+0x6]
  409dca:	movzx  edx,WORD PTR [edx+0x2]
  409dce:	shl    ecx,0x8
  409dd1:	add    ecx,edi
  409dd3:	shl    ecx,0x10
  409dd6:	add    ecx,edx
  409dd8:	mov    DWORD PTR ds:0x448cf0,ecx
  409dde:	mov    edx,0xb5d7340c
  409de3:	sub    edx,DWORD PTR ds:0x448d00
  409de9:	add    eax,0x10
  409dec:	xor    edx,ecx
  409dee:	mov    DWORD PTR [eax-0x10],edx
  409df1:	mov    ecx,DWORD PTR ds:0x448008
  409df7:	mov    ecx,DWORD PTR [ecx+0xc]
  409dfa:	mov    DWORD PTR ds:0x448cf0,ecx
  409e00:	mov    edx,0xb5d7340c
  409e05:	sub    edx,DWORD PTR ds:0x448d00
  409e0b:	xor    edx,ecx
  409e0d:	mov    DWORD PTR [eax-0xc],edx
  409e10:	mov    edx,DWORD PTR ds:0x448008
  409e16:	add    edx,0x10
  409e19:	mov    DWORD PTR ds:0x448008,edx
  409e1f:	movzx  ecx,BYTE PTR [edx+0x8]
  409e23:	movzx  edi,BYTE PTR [edx+0x6]
  409e27:	movzx  edx,WORD PTR [edx+0x2]
  409e2b:	shl    ecx,0x8
  409e2e:	add    ecx,edi
  409e30:	shl    ecx,0x10
  409e33:	add    ecx,edx
  409e35:	mov    edx,0xb5d7340c
  409e3a:	sub    edx,DWORD PTR ds:0x448d00
  409e40:	mov    DWORD PTR ds:0x448cf0,ecx
  409e46:	xor    edx,ecx
  409e48:	mov    DWORD PTR [eax-0x8],edx
  409e4b:	mov    ecx,DWORD PTR ds:0x448008
  409e51:	mov    ecx,DWORD PTR [ecx+0xc]
  409e54:	mov    edx,0xb5d7340c
  409e59:	sub    edx,DWORD PTR ds:0x448d00
  409e5f:	mov    DWORD PTR ds:0x448cf0,ecx
  409e65:	xor    edx,ecx
  409e67:	mov    DWORD PTR [eax-0x4],edx
  409e6a:	mov    edx,DWORD PTR ds:0x448008
  409e70:	add    edx,0x10
  409e73:	dec    esi
  409e74:	mov    DWORD PTR ds:0x448008,edx
  409e7a:	jne    0x409dc2
  409e80:	push   0x100
  409e85:	lea    eax,[esp+0x34]
  409e89:	push   eax
  409e8a:	push   0x447a6c
  409e8f:	call   DWORD PTR ds:0x445068
  409e95:	mov    esi,DWORD PTR ds:0x448d04
  409e9b:	push   0x0
  409e9d:	push   0x7d
  409e9f:	push   0x154
  409ea4:	push   0xee
  409ea9:	push   0x63
  409eab:	push   0x0
  409ead:	push   ebp
  409eae:	add    esi,0x6310
  409eb4:	call   DWORD PTR ds:0x445050
  409eba:	mov    ecx,DWORD PTR ds:0x44800c
  409ec0:	mov    edx,0x6d
  409ec5:	movzx  eax,BYTE PTR [ecx+0x4]
  409ec9:	movzx  edi,BYTE PTR [ecx+0x2]
  409ecd:	movzx  ecx,WORD PTR [ecx]
  409ed0:	shl    eax,0x8
  409ed3:	add    eax,edi
  409ed5:	shl    eax,0x10
  409ed8:	add    eax,ecx
  409eda:	mov    ds:0x448cf0,eax
  409edf:	mov    ecx,0x42bb83d0
  409ee4:	sub    ecx,DWORD PTR ds:0x448d00
  409eea:	xor    ecx,eax
  409eec:	mov    DWORD PTR [esi],ecx
  409eee:	mov    ecx,DWORD PTR ds:0x44800c
  409ef4:	movzx  eax,BYTE PTR [ecx+0xc]
  409ef8:	movzx  edi,WORD PTR [ecx+0xa]
  409efc:	movzx  ecx,BYTE PTR [ecx+0x5]
  409f00:	shl    eax,0x10
  409f03:	add    eax,edi
  409f05:	shl    eax,0x8
  409f08:	add    eax,ecx
  409f0a:	mov    ds:0x448cf0,eax
  409f0f:	mov    ecx,0x42bb83d0
  409f14:	sub    ecx,DWORD PTR ds:0x448d00
  409f1a:	xor    ecx,eax
  409f1c:	mov    DWORD PTR [esi+0x4],ecx
  409f1f:	mov    ecx,DWORD PTR ds:0x44800c
  409f25:	add    ecx,0x10
  409f28:	mov    DWORD PTR ds:0x44800c,ecx
  409f2e:	movzx  eax,BYTE PTR [ecx+0x4]
  409f32:	movzx  edi,BYTE PTR [ecx+0x2]
  409f36:	movzx  ecx,WORD PTR [ecx]
  409f39:	shl    eax,0x8
  409f3c:	add    eax,edi
  409f3e:	shl    eax,0x10
  409f41:	add    eax,ecx
  409f43:	mov    ds:0x448cf0,eax
  409f48:	mov    ecx,0x42bb83d0
  409f4d:	sub    ecx,DWORD PTR ds:0x448d00
  409f53:	xor    ecx,eax
  409f55:	mov    DWORD PTR [esi+0x8],ecx
  409f58:	mov    ecx,DWORD PTR ds:0x44800c
  409f5e:	movzx  eax,BYTE PTR [ecx+0xc]
  409f62:	movzx  edi,WORD PTR [ecx+0xa]
  409f66:	movzx  ecx,BYTE PTR [ecx+0x5]
  409f6a:	shl    eax,0x10
  409f6d:	add    eax,edi
  409f6f:	shl    eax,0x8
  409f72:	add    eax,ecx
  409f74:	mov    ds:0x448cf0,eax
  409f79:	mov    ecx,0x42bb83d0
  409f7e:	sub    ecx,DWORD PTR ds:0x448d00
  409f84:	xor    ecx,eax
  409f86:	mov    DWORD PTR [esi+0xc],ecx
  409f89:	mov    ecx,DWORD PTR ds:0x44800c
  409f8f:	add    ecx,0x10
  409f92:	mov    DWORD PTR ds:0x44800c,ecx
  409f98:	movzx  eax,BYTE PTR [ecx+0x4]
  409f9c:	movzx  edi,BYTE PTR [ecx+0x2]
  409fa0:	movzx  ecx,WORD PTR [ecx]
  409fa3:	shl    eax,0x8
  409fa6:	add    eax,edi
  409fa8:	shl    eax,0x10
  409fab:	add    eax,ecx
  409fad:	mov    ds:0x448cf0,eax
  409fb2:	mov    ecx,0x42bb83d0
  409fb7:	sub    ecx,DWORD PTR ds:0x448d00
  409fbd:	xor    ecx,eax
  409fbf:	mov    DWORD PTR [esi+0x10],ecx
  409fc2:	mov    ecx,DWORD PTR ds:0x44800c
  409fc8:	movzx  eax,BYTE PTR [ecx+0xc]
  409fcc:	movzx  edi,WORD PTR [ecx+0xa]
  409fd0:	movzx  ecx,BYTE PTR [ecx+0x5]
  409fd4:	shl    eax,0x10
  409fd7:	add    eax,edi
  409fd9:	shl    eax,0x8
  409fdc:	add    eax,ecx
  409fde:	mov    ecx,0x42bb83d0
  409fe3:	sub    ecx,DWORD PTR ds:0x448d00
  409fe9:	mov    ds:0x448cf0,eax
  409fee:	xor    ecx,eax
  409ff0:	mov    DWORD PTR [esi+0x14],ecx
  409ff3:	mov    ecx,DWORD PTR ds:0x44800c
  409ff9:	add    ecx,0x10
  409ffc:	add    esi,0x18
  409fff:	dec    edx
  40a000:	mov    DWORD PTR ds:0x44800c,ecx
  40a006:	jne    0x409ec5
  40a00c:	movzx  edx,BYTE PTR [ecx+0x4]
  40a010:	movzx  eax,BYTE PTR [ecx+0x2]
  40a014:	movzx  ecx,WORD PTR [ecx]
  40a017:	shl    edx,0x8
  40a01a:	add    edx,eax
  40a01c:	shl    edx,0x10
  40a01f:	add    edx,ecx
  40a021:	mov    DWORD PTR ds:0x448cf0,edx
  40a027:	lea    edx,[esp+0x18]
  40a02b:	push   edx
  40a02c:	lea    eax,[esp+0x2c]
  40a030:	push   eax
  40a031:	lea    ecx,[esp+0x18]
  40a035:	push   ecx
  40a036:	lea    edx,[esp+0x2c]
  40a03a:	push   edx
  40a03b:	push   0x61e1fddc
  40a040:	call   DWORD PTR ds:0x445028
  40a046:	mov    eax,ds:0x448d00
  40a04b:	add    eax,0x42b38004
  40a050:	xor    eax,DWORD PTR ds:0x448cf0
  40a056:	mov    DWORD PTR [esi],eax
  40a058:	mov    esi,DWORD PTR ds:0x448d04
  40a05e:	add    esi,0x6d4c
  40a064:	call   ebx
  40a066:	mov    ecx,DWORD PTR ds:0x448010
  40a06c:	mov    edx,0x13f
  40a071:	movzx  eax,BYTE PTR [ecx+0x8]
  40a075:	movzx  edi,BYTE PTR [ecx+0x6]
  40a079:	shl    eax,0x8
  40a07c:	add    eax,edi
  40a07e:	movzx  edi,BYTE PTR [ecx+0x3]
  40a082:	movzx  ecx,BYTE PTR [ecx+0x1]
  40a086:	shl    eax,0x8
  40a089:	add    eax,edi
  40a08b:	shl    eax,0x8
  40a08e:	add    eax,ecx
  40a090:	mov    ecx,DWORD PTR ds:0x448d00
  40a096:	add    ecx,0xbb995591
  40a09c:	xor    ecx,eax
  40a09e:	mov    ds:0x448cf0,eax
  40a0a3:	mov    DWORD PTR [esi],ecx
  40a0a5:	mov    ecx,DWORD PTR ds:0x448010
  40a0ab:	movzx  eax,WORD PTR [ecx+0xe]
  40a0af:	movzx  edi,BYTE PTR [ecx+0xb]
  40a0b3:	movzx  ecx,BYTE PTR [ecx+0x9]
  40a0b7:	shl    eax,0x8
  40a0ba:	add    eax,edi
  40a0bc:	shl    eax,0x8
  40a0bf:	add    eax,ecx
  40a0c1:	mov    ecx,DWORD PTR ds:0x448d00
  40a0c7:	add    ecx,0xbb995591
  40a0cd:	xor    ecx,eax
  40a0cf:	mov    ds:0x448cf0,eax
  40a0d4:	mov    DWORD PTR [esi+0x4],ecx
  40a0d7:	mov    ecx,DWORD PTR ds:0x448010
  40a0dd:	add    ecx,0x10
  40a0e0:	add    esi,0x8
  40a0e3:	dec    edx
  40a0e4:	mov    DWORD PTR ds:0x448010,ecx
  40a0ea:	jne    0x40a071
  40a0ec:	call   ebx
  40a0ee:	mov    edx,DWORD PTR ds:0x448d04
  40a0f4:	mov    eax,DWORD PTR [esp+0x234]
  40a0fb:	add    edx,0x7744
  40a101:	add    eax,0x5
  40a104:	mov    esi,0xf3
  40a109:	lea    esp,[esp+0x0]
  40a110:	movzx  ecx,BYTE PTR [eax+0x2]
  40a114:	movzx  edi,WORD PTR [eax]
  40a117:	shl    ecx,0x10
  40a11a:	add    ecx,edi
  40a11c:	movzx  edi,BYTE PTR [eax-0x2]
  40a120:	shl    ecx,0x8
  40a123:	add    ecx,edi
  40a125:	mov    edi,DWORD PTR ds:0x448d00
  40a12b:	mov    DWORD PTR ds:0x448cf0,ecx
  40a131:	add    edi,0x190a8e0e
  40a137:	xor    edi,ecx
  40a139:	mov    DWORD PTR [edx],edi
  40a13b:	movzx  ecx,BYTE PTR [eax+0xa]
  40a13f:	movzx  edi,WORD PTR [eax+0x8]
  40a143:	shl    ecx,0x10
  40a146:	add    ecx,edi
  40a148:	movzx  edi,BYTE PTR [eax+0x6]
  40a14c:	shl    ecx,0x8
  40a14f:	add    ecx,edi
  40a151:	mov    edi,DWORD PTR ds:0x448d00
  40a157:	mov    DWORD PTR ds:0x448cf0,ecx
  40a15d:	add    edi,0x190a8e0e
  40a163:	xor    edi,ecx
  40a165:	mov    DWORD PTR [edx+0x4],edi
  40a168:	movzx  ecx,BYTE PTR [eax+0x12]
  40a16c:	movzx  edi,WORD PTR [eax+0x10]
  40a170:	shl    ecx,0x10
  40a173:	add    ecx,edi
  40a175:	movzx  edi,BYTE PTR [eax+0xe]
  40a179:	shl    ecx,0x8
  40a17c:	add    ecx,edi
  40a17e:	mov    edi,DWORD PTR ds:0x448d00
  40a184:	add    edi,0x190a8e0e
  40a18a:	xor    edi,ecx
  40a18c:	mov    DWORD PTR ds:0x448cf0,ecx
  40a192:	mov    DWORD PTR [edx+0x8],edi
  40a195:	add    eax,0x18
  40a198:	add    edx,0xc
  40a19b:	dec    esi
  40a19c:	jne    0x40a110
  40a1a2:	mov    eax,ds:0x448d04
  40a1a7:	mov    edx,DWORD PTR ds:0x448014
  40a1ad:	add    eax,0x82a8
  40a1b2:	mov    esi,0x45
  40a1b7:	jmp    0x40a1c0
  40a1b9:	lea    esp,[esp+0x0]
  40a1c0:	movzx  ecx,BYTE PTR [edx+0x7]
  40a1c4:	movzx  edi,BYTE PTR [edx+0x4]
  40a1c8:	movzx  edx,WORD PTR [edx]
  40a1cb:	shl    ecx,0x8
  40a1ce:	add    ecx,edi
  40a1d0:	shl    ecx,0x10
  40a1d3:	add    ecx,edx
  40a1d5:	mov    edx,DWORD PTR ds:0x448d00
  40a1db:	mov    DWORD PTR ds:0x448cf0,ecx
  40a1e1:	add    edx,0x47a4f270
  40a1e7:	xor    edx,ecx
  40a1e9:	mov    DWORD PTR [eax],edx
  40a1eb:	mov    edx,DWORD PTR ds:0x448014
  40a1f1:	movzx  ecx,BYTE PTR [edx+0xe]
  40a1f5:	movzx  edi,WORD PTR [edx+0xb]
  40a1f9:	movzx  edx,BYTE PTR [edx+0x9]
  40a1fd:	shl    ecx,0x10
  40a200:	add    ecx,edi
  40a202:	shl    ecx,0x8
  40a205:	add    ecx,edx
  40a207:	mov    edx,DWORD PTR ds:0x448d00
  40a20d:	xor    edx,ecx
  40a20f:	mov    DWORD PTR ds:0x448cf0,ecx
  40a215:	xor    edx,0x47acf5b0
  40a21b:	mov    DWORD PTR [eax+0x4],edx
  40a21e:	mov    edx,DWORD PTR ds:0x448014
  40a224:	add    edx,0x10
  40a227:	mov    DWORD PTR ds:0x448014,edx
  40a22d:	movzx  ecx,BYTE PTR [edx+0x7]
  40a231:	movzx  edi,BYTE PTR [edx+0x4]
  40a235:	movzx  edx,WORD PTR [edx]
  40a238:	shl    ecx,0x8
  40a23b:	add    ecx,edi
  40a23d:	shl    ecx,0x10
  40a240:	add    ecx,edx
  40a242:	mov    edx,DWORD PTR ds:0x448d00
  40a248:	mov    DWORD PTR ds:0x448cf0,ecx
  40a24e:	add    edx,0x47a4f270
  40a254:	xor    edx,ecx
  40a256:	mov    DWORD PTR [eax+0x8],edx
  40a259:	mov    edx,DWORD PTR ds:0x448014
  40a25f:	movzx  ecx,BYTE PTR [edx+0xe]
  40a263:	movzx  edi,WORD PTR [edx+0xb]
  40a267:	movzx  edx,BYTE PTR [edx+0x9]
  40a26b:	shl    ecx,0x10
  40a26e:	add    ecx,edi
  40a270:	shl    ecx,0x8
  40a273:	add    ecx,edx
  40a275:	mov    edx,DWORD PTR ds:0x448d00
  40a27b:	xor    edx,ecx
  40a27d:	mov    DWORD PTR ds:0x448cf0,ecx
  40a283:	xor    edx,0x47acf5b0
  40a289:	mov    DWORD PTR [eax+0xc],edx
  40a28c:	mov    edx,DWORD PTR ds:0x448014
  40a292:	add    edx,0x10
  40a295:	mov    DWORD PTR ds:0x448014,edx
  40a29b:	movzx  ecx,BYTE PTR [edx+0x7]
  40a29f:	movzx  edi,BYTE PTR [edx+0x4]
  40a2a3:	movzx  edx,WORD PTR [edx]
  40a2a6:	shl    ecx,0x8
  40a2a9:	add    ecx,edi
  40a2ab:	shl    ecx,0x10
  40a2ae:	add    ecx,edx
  40a2b0:	mov    edx,DWORD PTR ds:0x448d00
  40a2b6:	mov    DWORD PTR ds:0x448cf0,ecx
  40a2bc:	add    edx,0x47a4f270
  40a2c2:	xor    edx,ecx
  40a2c4:	mov    DWORD PTR [eax+0x10],edx
  40a2c7:	mov    edx,DWORD PTR ds:0x448014
  40a2cd:	movzx  ecx,BYTE PTR [edx+0xe]
  40a2d1:	movzx  edi,WORD PTR [edx+0xb]
  40a2d5:	movzx  edx,BYTE PTR [edx+0x9]
  40a2d9:	shl    ecx,0x10
  40a2dc:	add    ecx,edi
  40a2de:	shl    ecx,0x8
  40a2e1:	add    ecx,edx
  40a2e3:	mov    edx,DWORD PTR ds:0x448d00
  40a2e9:	xor    edx,ecx
  40a2eb:	xor    edx,0x47acf5b0
  40a2f1:	mov    DWORD PTR ds:0x448cf0,ecx
  40a2f7:	mov    DWORD PTR [eax+0x14],edx
  40a2fa:	mov    edx,DWORD PTR ds:0x448014
  40a300:	add    edx,0x10
  40a303:	mov    DWORD PTR ds:0x448014,edx
  40a309:	movzx  ecx,BYTE PTR [edx+0x7]
  40a30d:	movzx  edi,BYTE PTR [edx+0x4]
  40a311:	movzx  edx,WORD PTR [edx]
  40a314:	shl    ecx,0x8
  40a317:	add    ecx,edi
  40a319:	shl    ecx,0x10
  40a31c:	add    ecx,edx
  40a31e:	mov    edx,DWORD PTR ds:0x448d00
  40a324:	mov    DWORD PTR ds:0x448cf0,ecx
  40a32a:	add    edx,0x47a4f270
  40a330:	xor    edx,ecx
  40a332:	mov    DWORD PTR [eax+0x18],edx
  40a335:	mov    edx,DWORD PTR ds:0x448014
  40a33b:	movzx  ecx,BYTE PTR [edx+0xe]
  40a33f:	movzx  edi,WORD PTR [edx+0xb]
  40a343:	movzx  edx,BYTE PTR [edx+0x9]
  40a347:	shl    ecx,0x10
  40a34a:	add    ecx,edi
  40a34c:	shl    ecx,0x8
  40a34f:	add    ecx,edx
  40a351:	mov    edx,DWORD PTR ds:0x448d00
  40a357:	xor    edx,ecx
  40a359:	mov    DWORD PTR ds:0x448cf0,ecx
  40a35f:	xor    edx,0x47acf5b0
  40a365:	mov    DWORD PTR [eax+0x1c],edx
  40a368:	mov    edx,DWORD PTR ds:0x448014
  40a36e:	add    edx,0x10
  40a371:	mov    DWORD PTR ds:0x448014,edx
  40a377:	movzx  ecx,BYTE PTR [edx+0x7]
  40a37b:	movzx  edi,BYTE PTR [edx+0x4]
  40a37f:	movzx  edx,WORD PTR [edx]
  40a382:	shl    ecx,0x8
  40a385:	add    ecx,edi
  40a387:	shl    ecx,0x10
  40a38a:	add    ecx,edx
  40a38c:	mov    edx,DWORD PTR ds:0x448d00
  40a392:	add    edx,0x47a4f270
  40a398:	xor    edx,ecx
  40a39a:	mov    DWORD PTR ds:0x448cf0,ecx
  40a3a0:	mov    DWORD PTR [eax+0x20],edx
  40a3a3:	mov    edx,DWORD PTR ds:0x448014
  40a3a9:	movzx  ecx,BYTE PTR [edx+0xe]
  40a3ad:	movzx  edi,WORD PTR [edx+0xb]
  40a3b1:	movzx  edx,BYTE PTR [edx+0x9]
  40a3b5:	shl    ecx,0x10
  40a3b8:	add    ecx,edi
  40a3ba:	shl    ecx,0x8
  40a3bd:	add    ecx,edx
  40a3bf:	mov    edx,DWORD PTR ds:0x448d00
  40a3c5:	xor    edx,ecx
  40a3c7:	xor    edx,0x47acf5b0
  40a3cd:	mov    DWORD PTR ds:0x448cf0,ecx
  40a3d3:	mov    DWORD PTR [eax+0x24],edx
  40a3d6:	mov    edx,DWORD PTR ds:0x448014
  40a3dc:	add    edx,0x10
  40a3df:	add    eax,0x28
  40a3e2:	dec    esi
  40a3e3:	mov    DWORD PTR ds:0x448014,edx
  40a3e9:	jne    0x40a1c0
  40a3ef:	pop    edi
  40a3f0:	pop    esi
  40a3f1:	pop    ebp
  40a3f2:	pop    ebx
  40a3f3:	add    esp,0x220
  40a3f9:	ret    
  40a3fa:	int3   
  40a3fb:	int3   
  40a3fc:	int3   
  40a3fd:	int3   
  40a3fe:	int3   
  40a3ff:	int3   
  40a400:	cmp    edi,0x0
  40a403:	add    bh,bh
  40a405:	fstp   DWORD PTR [edi]
  40a407:	(bad)  
  40a408:	dec    DWORD PTR [edx-0x687c1b00]
  40a40e:	xor    eax,0xffff4fcf
  40a413:	mov    edi,edi
  40a415:	sub    DWORD PTR [edx-0x7cff0077],eax
  40a41b:	retf   
  40a41c:	add    BYTE PTR [esi],ah
  40a41e:	rcl    DWORD PTR [ebx-0x7c3d],0xff
  40a425:	add    dl,al
  40a427:	inc    DWORD PTR [eax]
  40a429:	popa   
  40a42a:	or     eax,0x0
  40a42d:	push   eax
  40a42e:	dec    ebx
  40a42f:	xchg   ecx,eax
  40a430:	jb     0x40a432
  40a432:	mov    DWORD PTR [eax],eax
  40a434:	adc    DWORD PTR [esi+0x7b],0x0
  40a438:	jmp    FWORD PTR [ebx+0x9008dcc]
  40a43e:	dec    eax
  40a43f:	xlat   BYTE PTR ds:[ebx]
  40a440:	or     al,0xff
  40a442:	(bad)  
  40a443:	(bad)  
  40a444:	(bad)  
  40a445:	ficomp WORD PTR [edx-0x7fff7d]
  40a44b:	test   edi,edi
  40a44d:	push   ss
  40a44e:	je     0x40a43d
  40a450:	inc    edx
  40a451:	add    bh,bh
  40a453:	int3   
  40a454:	dec    esp
  40a456:	pop    esi
  40a457:	add    bh,bh
  40a459:	imul   edi,edi,0xa90589f8
  40a45f:	enter  0xff25,0xff
  40a463:	add    DWORD PTR [eax],0x5d
  40a466:	dec    ebp
  40a467:	(bad)  
  40a468:	call   FWORD PTR [eax]
  40a46a:	jmp    DWORD PTR [edi+edi*8-0x3d42ec3f]
  40a471:	add    BYTE PTR [ebx-0x52fa0100],al
  40a477:	inc    DWORD PTR [ebx-0x7ca1ff7e]
  40a47d:	and    bh,BYTE PTR [edx-0x4b]
  40a480:	adc    bh,bh
  40a482:	mov    DWORD PTR [eax],eax
  40a484:	dec    DWORD PTR [edi]
  40a486:	xchg   esi,eax
  40a487:	inc    DWORD PTR [ebx-0x76d1ff87]
  40a48d:	lea    edx,[edi-0x33002f0a]
  40a493:	inc    DWORD PTR [eax]
  40a495:	pop    ss
  40a496:	adc    BYTE PTR [ebx-0x5affb57d],al
  40a49c:	add    BYTE PTR [ecx],cl
  40a49e:	fiadd  DWORD PTR [eax+0x66]
  40a4a1:	add    bh,bh
  40a4a3:	dec    esp
  40a4a5:	or     eax,0xa5890092
  40a4aa:	inc    edx
  40a4ac:	mov    esi,edi
  40a4ae:	aas    
  40a4af:	repz push ss
  40a4b1:	inc    DWORD PTR [eax]
  40a4b3:	add    BYTE PTR [ebx-0xffc54b],al
  40a4b9:	scas   eax,DWORD PTR es:[edi]
  40a4ba:	jmp    DWORD PTR [edi]
  40a4bc:	call   FWORD PTR [edi-0x72]
  40a4bf:	fmul   DWORD PTR [edx]
  40a4c1:	cmp    edi,0x0
  40a4c4:	push   DWORD PTR [ebp-0x5a0000c3]
  40a4ca:	dec    edi
  40a4cc:	(bad)  
  40a4cd:	call   0x1258a6a
  40a4d2:	mov    edi,edi
  40a4d4:	inc    DWORD PTR [edi-0x5fffff62]
  40a4da:	push   DWORD PTR [esi-0x7d]
  40a4dd:	js     0x40a469
  40a4df:	(bad)  
  40a4e0:	pushf  
  40a4e1:	(bad)  
  40a4e2:	inc    DWORD PTR [eax]
  40a4e4:	add    BYTE PTR [edi-0x76],bl
  40a4e7:	inc    DWORD PTR [eax]
  40a4e9:	adc    bh,bh
  40a4eb:	jnp    0x40a470
  40a4ed:	ins    BYTE PTR es:[edi],dx
  40a4ee:	add    ch,ah
  40a4f0:	out    dx,eax
  40a4f1:	add    BYTE PTR [eax],al
  40a4f3:	(bad)  
  40a4f4:	(bad)  
  40a4f5:	adc    DWORD PTR ds:[ebx-0x27334a00],eax
  40a4fc:	adc    DWORD PTR [edx-0x188b64],0x0
  40a503:	add    BYTE PTR [ebx-0x3335e7],al
  40a509:	jp     0x40a50b
  40a50b:	xor    bh,bh
  40a50d:	sbb    DWORD PTR [ecx],0xffff6f77
  40a513:	add    bh,bh
  40a515:	(bad)  
  40a516:	pop    ss
  40a517:	add    bh,bh
  40a519:	pop    ebx
  40a51a:	cmp    DWORD PTR [ecx-0x71102400],0x0
  40a521:	add    bh,bh
  40a523:	add    bh,bh
  40a525:	iret   
  40a526:	(bad)  
  40a527:	add    BYTE PTR [eax],al
  40a529:	mov    es,WORD PTR [eax]
  40a52b:	pop    esp
  40a52c:	call   FWORD PTR [edi-0x22]
  40a52f:	cli    
  40a530:	xlat   BYTE PTR ds:[ebx]
  40a531:	(bad)  
  40a532:	(bad)  
  40a533:	inc    DWORD PTR [eax]
  40a535:	adc    DWORD PTR [eax-0x1],0x0
  40a539:	push   esi
  40a53a:	add    BYTE PTR [ecx],bl
  40a53c:	sub    DWORD PTR [ecx+esi*4+0x98a2],0xffffffff
  40a544:	call   DWORD PTR [ecx+0x2c]
  40a547:	(bad)  
  40a548:	jmp    DWORD PTR [ecx-0x607c4601]
  40a54e:	mov    BYTE PTR [eax],al
  40a550:	add    al,0x83
  40a552:	int3   
  40a553:	mov    edi,edi
  40a555:	fadd   DWORD PTR [ecx]
  40a557:	add    bh,bh
  40a559:	or     BYTE PTR [eax],al
  40a55b:	aad    0x0
  40a55d:	bound  esp,QWORD PTR [esi+0x12]
  40a560:	push   0x83ffffff
  40a565:	out    0x74,al
  40a567:	add    bh,bh
  40a569:	ins    DWORD PTR es:[edi],dx
  40a56a:	add    BYTE PTR [ecx],al
  40a56c:	adc    ecx,0xffffff97
  40a56f:	pop    DWORD PTR [ecx]
  40a571:	(bad)  
  40a572:	dec    DWORD PTR [ecx+0x22e9ff]
  40a578:	mov    DWORD PTR [ebp+0x48ff9bff],esi
  40a57e:	dec    esi
  40a57f:	xor    dl,BYTE PTR [ebx]
  40a581:	dec    DWORD PTR [ecx+0x6f708300]
  40a587:	dec    esp
  40a589:	or     DWORD PTR [eax],eax
  40a58b:	fdivr  st,st(7)
  40a58d:	jmp    0x40a5bf
  40a58f:	dec    ebx
  40a590:	add    eax,DWORD PTR [eax]
  40a592:	add    BYTE PTR [eax],al
  40a594:	add    BYTE PTR [esi+edx*1-0x7d],ah
  40a598:	push   ecx
  40a59a:	jmp    DWORD PTR [ecx]
  40a59c:	add    DWORD PTR [ebp+0x78],0xffffffa5
  40a5a0:	dec    edx
  40a5a1:	add    bh,bh
  40a5a3:	inc    DWORD PTR [ebx+0xff5077]
  40a5a9:	(bad)  
  40a5aa:	inc    esp
  40a5ac:	int3   
  40a5ad:	(bad)  [edx-0x7c0069e8]
  40a5b3:	add    bh,bh
  40a5b5:	(bad)  
  40a5b6:	sbb    eax,0xf089ff
  40a5bb:	xchg   ebx,eax
  40a5bc:	int3   
  40a5bd:	aad    0x43
  40a5bf:	jge    0x40a60f
  40a5c1:	cmp    edi,0xffffffff
  40a5c4:	push   DWORD PTR [esi]
  40a5c6:	push   es
  40a5c7:	cmp    edi,0x4c
  40a5ca:	cmp    eax,0x0
  40a5cd:	pop    ebx
  40a5ce:	mov    ch,0xa1
  40a5d0:	jp     0x40a5d1
  40a5d2:	cmp    edi,0xffffffff
  40a5d5:	ins    BYTE PTR es:[edi],dx
  40a5d6:	ret    
  40a5d7:	(bad)  
  40a5d8:	jmp    DWORD PTR [ecx]
  40a5da:	dec    esi
  40a5dc:	dec    DWORD PTR [esi-0x7673181f]
  40a5e2:	or     esp,0x0
  40a5e5:	lds    eax,FWORD PTR [ebx]
  40a5e7:	add    BYTE PTR [ebx-0x4cffc1],al
  40a5ed:	adc    ah,ah
  40a5ef:	mov    ss,WORD PTR [eax]
  40a5f1:	mov    edi,edi
  40a5f3:	add    bh,bh
  40a5f5:	sbb    dl,bh
  40a5f7:	(bad)  
  40a5f8:	push   DWORD PTR [edx-0x1]
  40a5fb:	int    0x0
  40a5fd:	call   0x89ff:0xffd6acb8
  40a604:	inc    DWORD PTR [edi]
  40a606:	retf   0x89ff
  40a609:	pop    edi
  40a60a:	jmp    DWORD PTR [ebp-0x4e668800]
  40a610:	sub    bh,bh
  40a612:	add    BYTE PTR [ecx-0xa1d501],cl
  40a618:	add    BYTE PTR ds:0x45ffe3ff,al
  40a61e:	push   edx
  40a61f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a620:	add    BYTE PTR [ebx-0x4f000001],al
  40a626:	and    BYTE PTR [eax],al
  40a628:	add    BYTE PTR [edi-0x7c333d01],dh
  40a62e:	outs   dx,BYTE PTR ds:[esi]
  40a62f:	mov    cl,0x3d
  40a631:	inc    DWORD PTR [eax]
  40a633:	add    DWORD PTR [eax],0x6f
  40a636:	jne    0x40a638
  40a638:	sbb    DWORD PTR [eax],0x0
  40a63b:	mov    al,ds:0xce37afff
  40a640:	jns    0x40a641
  40a642:	add    DWORD PTR [eax],0xffffffff
  40a645:	add    esi,DWORD PTR [edi+0x6cffff]
  40a64b:	ror    esp,cl
  40a64d:	mov    ebp,0x83b09e1c
  40a652:	cmp    edi,0xffffffff
  40a655:	es pushf 
  40a657:	add    BYTE PTR [ebx+0xc9cca1],al
  40a65d:	jno    0x40a6c9
  40a65f:	cmp    al,0x40
  40a661:	inc    DWORD PTR [eax]
  40a663:	inc    DWORD PTR [eax]
  40a665:	push   0x30ccccb3
  40a66a:	add    BYTE PTR [edx-0x7757a600],ah
  40a670:	das    
  40a671:	inc    DWORD PTR [eax]
  40a673:	mov    edi,edi
  40a675:	retf   
  40a676:	in     al,0x89
  40a678:	(bad)  
  40a679:	jmp    0xff41357d
  40a67e:	pop    esi
  40a67f:	rcl    BYTE PTR [ebx+0x0],0xff
  40a683:	add    bh,bh
  40a685:	mov    bl,0xff
  40a687:	add    DWORD PTR [ebx+0x8300a9],0x1e
  40a68e:	pop    ecx
  40a68f:	les    ebx,FWORD PTR [esi-0x1]
  40a695:	rol    edx,0xcc
  40a698:	dec    esi
  40a69a:	add    BYTE PTR [edi],ah
  40a69c:	add    dh,ch
  40a69e:	pushf  
  40a69f:	sbb    DWORD PTR [ebx+0xff],esi
  40a6a5:	lahf   
  40a6a6:	sub    eax,0xffac89ff
  40a6ab:	call   0xde814633
  40a6b0:	dec    edi
  40a6b1:	(bad)  
  40a6b2:	dec    DWORD PTR [ecx+0xd052cc]
  40a6b8:	(bad)  
  40a6b9:	js     0x40a6bb
  40a6bb:	cmp    DWORD PTR [eax],eax
  40a6bd:	add    BYTE PTR [ebx-0x3333b320],dh
  40a6c3:	(bad)  
  40a6c4:	jmp    DWORD PTR [ebx-0x32]
  40a6c7:	add    DWORD PTR [eax],0xffffffc2
  40a6ca:	inc    DWORD PTR [esi+0x0]
  40a6cd:	aam    0x62
  40a6cf:	pop    edi
  40a6d0:	dec    edi
  40a6d1:	add    bh,bh
  40a6d3:	add    bh,bh
  40a6d5:	dec    edx
  40a6d6:	scas   al,BYTE PTR es:[edi]
  40a6d7:	inc    DWORD PTR [eax]
  40a6d9:	push   0xa3cc0883
  40a6de:	xor    bh,BYTE PTR [esi+0x8326]
  40a6e4:	call   DWORD PTR [esi-0x7aff7cc2]
  40a6ea:	call   DWORD PTR [ebx-0x1]
  40a6ed:	in     al,0x42
  40a6ef:	push   edi
  40a6f0:	mov    esi,0xff89ff
  40a6f5:	mov    edx,0xbeff00e0
  40a6fa:	mov    DWORD PTR [esi-0x7d],ebp
  40a6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6fe:	(bad)  
  40a6ff:	loope  0x40a744
  40a701:	dec    esp
  40a703:	add    DWORD PTR [eax],0xfffffffe
  40a706:	dec    ecx
  40a707:	mov    esp,ecx
  40a709:	push   eax
  40a70a:	int3   
  40a70b:	add    bh,bh
  40a70d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a70e:	xor    eax,0x3527
  40a713:	add    ah,cl
  40a715:	pop    ds
  40a716:	imul   edi,edi,0xffffff83
  40a719:	xchg   ecx,eax
  40a71a:	and    DWORD PTR [esi],0xffffffff
  40a71d:	push   edx
  40a71e:	dec    eax
  40a71f:	test   al,0x5a
  40a721:	inc    DWORD PTR [ebx-0x62b57d00]
  40a727:	(bad)  
  40a728:	call   DWORD PTR [edx-0x5800ae01]
  40a72e:	fs inc ebp
  40a730:	push   edx
  40a731:	add    BYTE PTR [ecx-0x285c0001],cl
  40a737:	(bad)  
  40a738:	call   FWORD PTR [edi]
  40a73a:	add    BYTE PTR [ebx+eax*4+0x4cb7da79],al
  40a741:	(bad)  
  40a742:	(bad)  
  40a743:	dec    DWORD PTR [ecx+0x5fb6]
  40a749:	(bad)  
  40a74a:	inc    DWORD PTR [ecx+0x78a6a0ff]
  40a750:	mov    edi,edi
  40a752:	add    bh,bh
  40a754:	push   DWORD PTR [eax-0x6376fffd]
  40a75a:	add    BYTE PTR [edi-0x7d],ah
  40a75d:	and    bh,BYTE PTR [esi]
  40a75f:	mov    ch,0x34
  40a761:	add    bh,bh
  40a763:	add    BYTE PTR [eax],al
  40a765:	out    0x60,eax
  40a767:	add    BYTE PTR [ebx-0x7c00c3],al
  40a76d:	xor    ebp,DWORD PTR [ecx]
  40a76f:	mov    ecx,0x83ffff18
  40a774:	add    BYTE PTR [ebx+0x7effff3c],ah
  40a77a:	add    BYTE PTR [eax+eax*1],ah
  40a77d:	out    dx,eax
  40a77e:	dec    edi
  40a77f:	outs   dx,BYTE PTR ds:[esi]
  40a780:	cmp    DWORD PTR [ebx+0x758983ff],eax
  40a786:	out    dx,eax
  40a787:	add    BYTE PTR [eax],al
  40a789:	lods   al,BYTE PTR ds:[esi]
  40a78a:	and    DWORD PTR [eax-0x6a4a4901],0xffffffb9
  40a791:	(bad)  
  40a792:	(bad)  
  40a793:	(bad)  
  40a794:	call   DWORD PTR [edi+edx*8]
  40a797:	add    bh,bh
  40a799:	xchg   bh,bh
  40a79b:	jmp    0xffa0:0xe32421ff
  40a7a2:	or     esp,0xffffffff
  40a7a5:	fxch   st(7)
  40a7a7:	cmp    edi,0xffffffaf
  40a7aa:	(bad)  
  40a7ab:	jl     0x40a7ac
  40a7ad:	inc    edi
  40a7ae:	xor    eax,0xffff4e96
  40a7b3:	(bad)  
  40a7b4:	jmp    DWORD PTR [ecx+0x72]
  40a7b7:	(bad)  
  40a7b8:	inc    DWORD PTR [ebp+0x7b007700]
  40a7be:	push   ss
  40a7bf:	add    BYTE PTR ds:[eax],al
  40a7c2:	add    bh,bh
  40a7c4:	cmp    DWORD PTR [ecx+0x5a83ffd8],0xffffffff
  40a7cb:	mov    ebx,0x63b1bb00
  40a7d0:	mov    es,WORD PTR [eax]
  40a7d2:	int3   
  40a7d3:	add    DWORD PTR [eax],0x39
  40a7d6:	xchg   esp,eax
  40a7d7:	(bad)  
  40a7d8:	(bad)  
  40a7d9:	out    dx,al
  40a7da:	jmp    eax
  40a7dc:	add    BYTE PTR [ebp+0x20],dh
  40a7df:	ror    BYTE PTR [ebx-0x1],0xff
  40a7e3:	add    bh,bh
  40a7e5:	fisub  WORD PTR [edx]
  40a7e7:	add    BYTE PTR [eax],al
  40a7e9:	xor    eax,0x37cc35ff
  40a7ee:	ins    DWORD PTR es:[edi],dx
  40a7ef:	push   ebp
  40a7f0:	fadd   DWORD PTR [eax]
  40a7f2:	add    bh,bh
  40a7f4:	dec    DWORD PTR [edi-0x2b]
  40a7f7:	int3   
  40a7f8:	jmp    FWORD PTR [ebp-0x7d]
  40a7fb:	lods   eax,DWORD PTR ds:[esi]
  40a7fc:	add    BYTE PTR [esi+ebp*8-0x33ff25b4],bl
  40a803:	add    BYTE PTR [ecx-0x1fab],cl
  40a809:	cwde   
  40a80a:	add    BYTE PTR [ebp-0x1],bh
  40a80d:	mov    ds:0x89eb9746,eax
  40a812:	(bad)  
  40a813:	dec    esp
  40a815:	pop    ds
  40a816:	int3   
  40a817:	or     DWORD PTR [ecx-0x762900e9],0xe
  40a81e:	sub    al,bh
  40a820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a821:	mov    edi,edi
  40a823:	(bad)  
  40a824:	call   DWORD PTR [esi+0x76]
  40a827:	inc    DWORD PTR [eax]
  40a829:	or     al,BYTE PTR [eax]
  40a82b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82c:	inc    DWORD PTR [ebx+0x7d]
  40a82f:	push   edx
  40a830:	addr16 add bh,bh
  40a833:	cmp    edi,0x9
  40a836:	(bad)  
  40a837:	int3   
  40a838:	add    BYTE PTR [ebp-0x73001177],dh
  40a83e:	pop    ss
  40a83f:	push   edx
  40a840:	(bad)  
  40a841:	mov    edi,edi
  40a843:	(bad)  
  40a844:	(bad)  
  40a845:	fist   DWORD PTR [ebp+0xd80000]
  40a84b:	pusha  
  40a84c:	jmp    DWORD PTR [ebx+0x71]
  40a84f:	pusha  
  40a850:	(bad)  
  40a852:	add    BYTE PTR [eax],al
  40a854:	dec    edx
  40a856:	loope  0x40a858
  40a858:	call   FWORD PTR [ecx]
  40a85a:	inc    ebx
  40a85c:	int3   
  40a85d:	cmp    BYTE PTR [eax-0x4e],0x98
  40a861:	(bad)  
  40a862:	inc    DWORD PTR [eax]
  40a864:	and    edi,0xffffffc4
  40a867:	mov    DWORD PTR [eax],eax
  40a869:	cmp    ah,cl
  40a86b:	push   eax
  40a86c:	add    BYTE PTR [ebp+ecx*8-0x7cff3b50],cl
  40a873:	inc    DWORD PTR [eax]
  40a875:	push   ebx
  40a876:	pop    ss
  40a877:	add    ah,cl
  40a879:	mov    edi,edi
  40a87b:	sub    eax,DWORD PTR [eax]
  40a87d:	repz test edx,edi
  40a880:	mov    DWORD PTR [eax],eax
  40a882:	int3   
  40a883:	add    BYTE PTR [eax],al
  40a885:	pop    es
  40a886:	mov    ebp,0xff3983ff
  40a88b:	jbe    0x40a859
  40a88d:	out    0x8a,al
  40a88f:	mov    WORD PTR [esi],ss
  40a891:	add    BYTE PTR [eax],al
  40a893:	or     esp,0xffffff9d
  40a896:	inc    esi
  40a897:	dec    DWORD PTR [ecx+0x9dccd2]
  40a89d:	push   ss
  40a89e:	(bad)  
  40a89f:	clc    
  40a8a0:	push   ebx
  40a8a1:	inc    DWORD PTR [eax]
  40a8a3:	inc    DWORD PTR [ebx-0x4102]
  40a8a9:	(bad)  
  40a8ab:	adc    edi,edi
  40a8ad:	or     cl,ah
  40a8af:	les    ebx,FWORD PTR [edi]
  40a8b1:	add    BYTE PTR [ebx-0x5d960001],al
  40a8b7:	add    bh,bh
  40a8b9:	outs   dx,BYTE PTR ds:[esi]
  40a8ba:	add    BYTE PTR ds:0xf9544fff,dh
  40a8c0:	arpl   di,di
  40a8c2:	cmp    edi,0xffffff89
  40a8c5:	les    esi,FWORD PTR [ecx+0xa78300]
  40a8cb:	and    eax,0xd402fb00
  40a8d0:	mov    DWORD PTR [eax],0x69ccffcc
  40a8d6:	push   ebp
  40a8d7:	int3   
  40a8d8:	cmp    DWORD PTR [eax+eax*1-0x45],0xffffff83
  40a8dd:	push   edx
  40a8de:	mov    cl,0x66
  40a8e0:	dec    ah
  40a8e2:	inc    DWORD PTR [eax]
  40a8e4:	dec    edi
  40a8e6:	add    BYTE PTR [eax],al
  40a8e8:	add    BYTE PTR [eax+0x0],al
  40a8eb:	push   ds
  40a8ec:	call   FWORD PTR [esi+0xa7d896]
  40a8f2:	cmp    edi,0x0
  40a8f5:	clc    
  40a8f6:	stos   BYTE PTR es:[edi],al
  40a8f7:	add    BYTE PTR [eax],al
  40a8f9:	call   0xc37f:0x200b0ff
  40a900:	dec    ah
  40a902:	(bad)  
  40a903:	dec    esp
  40a905:	inc    ebp
  40a906:	and    al,0xcc
  40a908:	(bad)  
  40a909:	mov    ebp,0xd4ff6dff
  40a90e:	push   edx
  40a90f:	(bad)  
  40a910:	(bad)  
  40a911:	inc    DWORD PTR [eax]
  40a913:	add    BYTE PTR [ebx-0xffc650],al
  40a919:	pop    ds
  40a91a:	add    BYTE PTR [edx-0x7f31a100],dl
  40a920:	rol    DWORD PTR [eax],cl
  40a922:	add    BYTE PTR [eax],al
  40a924:	jmp    FWORD PTR [eax-0x2d]
  40a927:	add    BYTE PTR [eax],al
  40a929:	loope  0x40a92b
  40a92b:	lds    ecx,FWORD PTR [ecx-0x296c07e9]
  40a931:	(bad)  
  40a932:	(bad)  
  40a933:	(bad)  
  40a934:	jmp    esi
  40a936:	xor    BYTE PTR [ebx+0x8ccdb00],al
  40a93c:	cmp    DWORD PTR [esi-0x7c8574e2],0x0
  40a943:	inc    DWORD PTR [eax]
  40a945:	push   eax
  40a946:	mov    bh,bh
  40a948:	add    BYTE PTR [ecx+0x0],al
  40a94b:	stos   DWORD PTR es:[edi],eax
  40a94c:	inc    DWORD PTR [esi]
  40a94e:	retf   0xd433
  40a951:	add    BYTE PTR [eax],al
  40a953:	mov    DWORD PTR [eax],eax
  40a955:	std    
  40a956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a957:	(bad)  
  40a958:	push   ecx
  40a95a:	int3   
  40a95b:	add    edi,edi
  40a95d:	repz mov ebp,0x83ffa2a6
  40a963:	int3   
  40a964:	(bad)  
  40a965:	mov    esi,0x5dffff4a
  40a96a:	or     edi,0x0
  40a96d:	mov    ch,0xde
  40a96f:	inc    ebx
  40a970:	sub    eax,DWORD PTR [ebx-0x300337d]
  40a976:	xchg   esp,eax
  40a977:	cmp    edi,0xffffffee
  40a97a:	int3   
  40a97b:	je     0x40a900
  40a97d:	fnstcw WORD PTR es:0xff008951
  40a984:	add    ah,cl
  40a986:	xchg   ebx,eax
  40a987:	(bad)  
  40a988:	inc    DWORD PTR [ebx-0x417cf101]
  40a98e:	push   esp
  40a98f:	daa    
  40a990:	cmp    edi,0x0
  40a993:	add    DWORD PTR [eax],0xffffffba
  40a996:	push   eax
  40a997:	add    bh,bh
  40a999:	dec    ecx
  40a99a:	add    BYTE PTR [eax-0x1],dh
  40a99d:	sub    esi,ebx
  40a99f:	rol    ecx,1
  40a9a1:	(bad)  
  40a9a2:	inc    DWORD PTR [eax]
  40a9a4:	jmp    FWORD PTR [esi-0x2d]
  40a9a7:	inc    DWORD PTR [eax]
  40a9a9:	call   0xf6408631
  40a9ae:	push   ds
  40a9af:	frstor [edi+0x8389ff]
  40a9b5:	and    BYTE PTR [edi+0x0],cl
  40a9b8:	push   ecx
  40a9ba:	add    dh,bh
  40a9bc:	int3   
  40a9bd:	pop    ds
  40a9be:	inc    ebp
  40a9bf:	mov    ds:0xff14,al
  40a9c4:	or     ecx,0xffffffae
  40a9c7:	(bad)  
  40a9c8:	(bad)  
  40a9c9:	fadd   DWORD PTR [eax]
  40a9cb:	mov    ch,0x89
  40a9cd:	xchg   edi,eax
  40a9ce:	enter  0xed0d,0x0
  40a9d2:	add    BYTE PTR [eax],al
  40a9d4:	add    BYTE PTR [edi-0x59ff007a],ah
  40a9da:	mov    edx,edi
  40a9dc:	add    BYTE PTR [esi-0x7c5686f6],dh
  40a9e2:	inc    DWORD PTR [eax]
  40a9e4:	(bad)  
  40a9e5:	clc    
  40a9e6:	inc    DWORD PTR gs:[ebx-0x7c597cfe]
  40a9ed:	dec    edx
  40a9ee:	mov    DWORD PTR [edx+0xffffbb],eax
  40a9f4:	cmp    DWORD PTR [edi-0x67c0027],0xffffffff
  40a9fb:	nop
  40a9fc:	jmp    FWORD PTR [ecx-0x5a]
  40a9ff:	pop    eax
  40aa00:	cmp    al,BYTE PTR [eax]
  40aa02:	dec    DWORD PTR [ecx-0x33cc7501]
  40aa08:	sbb    DWORD PTR [edx-0x1],0xfffffffe
  40aa0c:	call   FWORD PTR [ebp-0xd0164d]
  40aa12:	inc    DWORD PTR [eax]
  40aa14:	push   DWORD PTR [ebp-0x4]
  40aa17:	(bad)  
  40aa18:	dec    DWORD PTR [ebx-0x7d]
  40aa1b:	retf   0x6483
  40aa1e:	push   edx
  40aa1f:	xor    DWORD PTR es:[eax],eax
  40aa22:	int3   
  40aa23:	inc    DWORD PTR [eax]
  40aa25:	sahf   
  40aa26:	pop    edi
  40aa27:	add    BYTE PTR [ecx-0x7cad00cd],cl
  40aa2d:	lahf   
  40aa2e:	dec    ebx
  40aa2f:	jmp    0x40aaa2
  40aa31:	(bad)  
  40aa32:	(bad)  
  40aa33:	inc    DWORD PTR [eax]
  40aa35:	inc    BYTE PTR [ebp-0xed0000]
  40aa3b:	imul   eax,DWORD PTR [ebx-0x50bb1fe7],0xffcc00ff
  40aa45:	lea    eax,[ebx-0x1]
  40aa48:	(bad)  
  40aa49:	(bad)  
  40aa4b:	loopne 0x40aa4c
  40aa4d:	or     BYTE PTR [edi-0x764954],bh
  40aa53:	inc    DWORD PTR [eax]
  40aa55:	or     eax,0xfb83ffb7
  40aa5a:	(bad)  
  40aa5b:	jp     0x40aa5c
  40aa5d:	rol    DWORD PTR [ebx-0x7c6cff],0x0
  40aa64:	int3   
  40aa65:	lds    edx,FWORD PTR [eax+0x0]
  40aa68:	(bad)  
  40aa69:	jle    0x40a9f4
  40aa6b:	mov    ds:0x1c5126ff,al
  40aa70:	adc    DWORD PTR [eax],eax
  40aa72:	(bad)  
  40aa73:	(bad)  
  40aa74:	push   DWORD PTR [eax+0x2dff0087]
  40aa7a:	dec    DWORD PTR ds:0xac86d5ff
  40aa80:	inc    eax
  40aa81:	inc    DWORD PTR [ebx+0x37ee0089]
  40aa87:	inc    DWORD PTR [eax]
  40aa89:	pop    esp
  40aa8a:	int3   
  40aa8b:	push   edx
  40aa8c:	sbb    ebp,0x26
  40aa8f:	pushf  
  40aa90:	cmp    bh,0xff
  40aa93:	add    BYTE PTR [eax],al
  40aa95:	push   ds
  40aa96:	push   es
  40aa97:	(bad)  
  40aa98:	push   DWORD PTR [ebx+0x78839dff]
  40aa9e:	cdq    
  40aa9f:	mov    bh,0x43
  40aaa1:	add    bh,bh
  40aaa3:	or     DWORD PTR [ecx-0x33004573],0xffffffad
  40aaaa:	call   FWORD PTR [ecx-0x49339e77]
  40aab0:	push   esp
  40aab1:	add    ah,cl
  40aab3:	inc    DWORD PTR [ebx+0xff4b52]
  40aab9:	lods   al,BYTE PTR ds:[esi]
  40aaba:	add    ch,bl
  40aabc:	xor    ecx,0xffffff87
  40aabf:	jg     0x40aa80
  40aac1:	(bad)  
  40aac2:	inc    DWORD PTR [eax]
  40aac4:	jmp    FWORD PTR [edi+0x4affcceb]
  40aaca:	and    DWORD PTR [ecx-0x7d],0xffffff93
  40aace:	sub    cl,BYTE PTR [esi]
  40aad0:	ins    BYTE PTR es:[edi],dx
  40aad1:	add    BYTE PTR [eax],al
  40aad3:	add    BYTE PTR [ecx-0xffe2fa],cl
  40aad9:	sub    BYTE PTR [eax],al
  40aadb:	cmp    eax,0xafdea00
  40aae0:	je     0x40aa65
  40aae2:	add    bh,bh
  40aae4:	add    ch,dh
  40aae6:	enter  0xff,0x88
  40aaea:	int3   
  40aaeb:	pushf  
  40aaec:	add    BYTE PTR [edi-0x56],cl
  40aaef:	push   edi
  40aaf0:	xor    eax,0x83ffffcc
  40aaf5:	es mov ch,0xff
  40aaf8:	inc    DWORD PTR [edx+0x70ffb500]
  40aafe:	daa    
  40aaff:	gs test eax,0xffffff
  40ab05:	push   cs
  40ab06:	jecxz  0x40ab07
  40ab08:	push   DWORD PTR [edi+0x0]
  40ab0b:	jo     0x40ab0d
  40ab0d:	jecxz  0x40aabf
  40ab0f:	pop    es
  40ab10:	add    edi,edi
  40ab12:	cmp    edi,0x0
  40ab15:	sbb    al,0x34
  40ab17:	(bad)  
  40ab18:	call   FWORD PTR [ebx-0x8760d01]
  40ab1e:	xchg   BYTE PTR [eax-0x760000f6],dh
  40ab24:	add    BYTE PTR [ecx-0x6f],bh
  40ab27:	mov    esp,ecx
  40ab29:	and    al,0x83
  40ab2b:	jb     0x40ab2d
  40ab2d:	popf   
  40ab2e:	lds    edi,FWORD PTR [ebx]
  40ab30:	pop    es
  40ab31:	add    bh,bh
  40ab33:	add    DWORD PTR [eax],0x6e
  40ab36:	push   ds
  40ab37:	add    ah,cl
  40ab39:	cmp    bh,bh
  40ab3b:	pop    ds
  40ab3c:	add    BYTE PTR [esi+0x17],cl
  40ab3f:	push   es
  40ab40:	and    eax,0x838300ff
  40ab45:	jl     0x40ab21
  40ab47:	add    DWORD PTR [eax],0x6c
  40ab4a:	push   edx
  40ab4c:	add    BYTE PTR [edx+0x16],cl
  40ab4f:	fdivr  st,st(4)
  40ab51:	cmp    edi,0xffffffff
  40ab54:	add    BYTE PTR [ebp-0x3900007b],dh
  40ab5a:	int3   
  40ab5b:	ret    
  40ab5c:	add    BYTE PTR [ebx-0x619b03],al
  40ab62:	mov    DWORD PTR [eax],eax
  40ab64:	add    dl,dl
  40ab66:	jecxz  0x40ab67
  40ab68:	add    DWORD PTR [ebx-0x77],0xffffff96
  40ab6c:	add    BYTE PTR [eax+0x20],bl
  40ab6f:	jmp    0x1402ef3
  40ab74:	add    BYTE PTR [ecx+0x3700fff6],dl
  40ab7a:	add    BYTE PTR [esp+ecx*8+0x7446f444],dh
  40ab81:	or     esp,0x0
  40ab84:	mov    DWORD PTR [ecx+eax*4],edi
  40ab87:	add    DWORD PTR [eax],0x0
  40ab8a:	dec    ebp
  40ab8c:	call   FWORD PTR [esi]
  40ab8e:	fist   WORD PTR [ebp+0x7f]
  40ab91:	inc    DWORD PTR [eax]
  40ab93:	mov    edi,edi
  40ab95:	mov    ds:0xa3ffcc62,eax
  40ab9a:	and    DWORD PTR [ebx+0x0],0xfffffffd
  40ab9e:	rol    BYTE PTR [ebx+0xff009b],0x89
  40aba5:	jge    0x40ab42
  40aba7:	inc    DWORD PTR [eax]
  40aba9:	int3   
  40abaa:	push   eax
  40abac:	and    esi,0xffffff81
  40abaf:	mov    eax,ds:0x8300ffab
  40abb4:	add    BYTE PTR [eax],bl
  40abb6:	(bad)  
  40abb7:	(bad)  
  40abb8:	push   DWORD PTR [ebx-0x1]
  40abbb:	std    
  40abbc:	call   DWORD PTR [ebx+ebx*1-0x767cd733]
  40abc3:	cmp    edi,0xfffffff5
  40abc6:	or     al,0xff
  40abc8:	call   ebx
  40abca:	xor    DWORD PTR [eax],0xffffffff
  40abcd:	scas   eax,DWORD PTR es:[edi]
  40abce:	and    BYTE PTR [ebx-0x7cff7c36],0x0
  40abd5:	and    eax,0xbb00cc82
  40abda:	mov    DWORD PTR [edi-0x34],esp
  40abdd:	leave  
  40abde:	push   esi
  40abdf:	sub    DWORD PTR [edi],esi
  40abe1:	cmp    edi,0xffffffff
  40abe4:	inc    DWORD PTR [eax]
  40abe6:	sub    bh,bh
  40abe8:	call   FWORD PTR [esp+ecx*8]
  40abeb:	mov    ah,cl
  40abed:	cmp    DWORD PTR [ecx],ecx
  40abef:	add    esi,DWORD PTR [eax]
  40abf1:	inc    DWORD PTR [eax]
  40abf3:	add    ah,cl
  40abf5:	xor    al,0xb8
  40abf7:	(bad)  
  40abf8:	dec    DWORD PTR [ebx-0x2600bd01]
  40abfe:	dec    edi
  40abff:	mov    dh,0xeb
  40ac01:	or     DWORD PTR [ecx-0x78df0100],0xffffffff
  40ac08:	int3   
  40ac09:	aas    
  40ac0a:	mov    edx,ecx
  40ac0c:	add    bh,cl
  40ac0e:	mov    ch,0x83
  40ac10:	xchg   DWORD PTR [eax],eax
  40ac12:	inc    DWORD PTR [eax]
  40ac14:	add    BYTE PTR [esi],dh
  40ac16:	pop    ss
  40ac17:	add    bh,bh
  40ac19:	jge    0x40ac1b
  40ac1b:	mov    DWORD PTR [ecx+0x525b7bf8],ecx
  40ac21:	cmp    edi,0xffffff89
  40ac24:	(bad)  
  40ac25:	jmp    0xdfff:0x1cffff7f
  40ac2c:	int3   
  40ac2d:	mov    ecx,0xff9365fd
  40ac32:	add    BYTE PTR [ebx+0x380683],al
  40ac38:	(bad)  
  40ac39:	cmp    al,0x83
  40ac3b:	adc    DWORD PTR [eax],eax
  40ac3d:	mov    eax,0xff6fa42b
  40ac42:	inc    DWORD PTR [eax]
  40ac44:	or     ecx,0xffffffd5
  40ac47:	(bad)  
  40ac48:	dec    DWORD PTR [esi-0x1]
  40ac4b:	ja     0x40abd0
  40ac4d:	popa   
  40ac4e:	add    al,0x82
  40ac50:	cwde   
  40ac51:	add    BYTE PTR [ecx-0x75eb0100],cl
  40ac57:	or     esp,0x74
  40ac5a:	call   DWORD PTR [edi]
  40ac5c:	mov    DWORD PTR [edi],esp
  40ac5e:	test   eax,0x83ffa2e2
  40ac63:	(bad)  
  40ac64:	jmp    FWORD PTR [edi+eax*4-0x7ce10001]
  40ac6b:	or     bh,bh
  40ac6d:	pop    es
  40ac6e:	outs   dx,DWORD PTR ds:[esi]
  40ac6f:	loope  0x40ac74
  40ac71:	add    BYTE PTR [ecx-0x27c50001],cl
  40ac77:	cmp    edi,0xffffffd8
  40ac7a:	(bad)  
  40ac7b:	in     eax,dx
  40ac7c:	and    DWORD PTR [ecx+0x31],0x3e
  40ac80:	mov    edi,edi
  40ac82:	(bad)  
  40ac83:	dec    esp
  40ac85:	sub    al,BYTE PTR [esi]
  40ac87:	add    ah,cl
  40ac89:	push   esp
  40ac8a:	add    BYTE PTR [eax-0x1],ah
  40ac8d:	stos   BYTE PTR es:[edi],al
  40ac8e:	int    0x7e
  40ac90:	loope  0x40ac92
  40ac92:	add    DWORD PTR [eax],0xffffff89
  40ac95:	test   DWORD PTR [eax-0x1],esp
  40ac98:	add    BYTE PTR [eax+eax*1+0x320989a3],bh
  40ac9f:	xchg   esp,eax
  40aca0:	adc    al,0x83
  40aca2:	(bad)  
  40aca3:	inc    DWORD PTR [ebx-0xe988]
  40aca9:	sahf   
  40acaa:	add    al,cl
  40acac:	adc    DWORD PTR [edx+0x764ba8],0xffffffff
  40acb3:	add    BYTE PTR [ecx-0x33002e1c],cl
  40acb9:	bound  eax,QWORD PTR [eax]
  40acbb:	leave  
  40acbc:	jmp    FWORD PTR [ecx-0x7cdac271]
  40acc2:	(bad)  
  40acc3:	(bad)  
  40acc4:	jmp    FWORD PTR [edx]
  40acc6:	pop    esi
  40acc7:	inc    DWORD PTR [eax]
  40acc9:	aaa    
  40acca:	(bad)  
  40accb:	in     eax,dx
  40accc:	dec    DWORD PTR [ebx+edx*8]
  40accf:	and    ch,BYTE PTR [ecx]
  40acd1:	add    bh,bh
  40acd3:	(bad)  
  40acd4:	dec    DWORD PTR [eax+0x740000d5]
  40acda:	add    BYTE PTR [ecx],ah
  40acdc:	jmp    FWORD PTR [ebx]
  40acde:	and    DWORD PTR [eax],esp
  40ace0:	in     al,dx
  40ace1:	inc    DWORD PTR [eax]
  40ace3:	or     esp,0x2
  40ace6:	inc    ebp
  40ace7:	(bad)  
  40ace8:	jmp    DWORD PTR [esi+0x39ffedcc]
  40acee:	mov    BYTE PTR [edi+0x12],bl
  40acf1:	inc    DWORD PTR [eax]
  40acf3:	(bad)  
  40acf4:	inc    DWORD PTR [esp+esi*2]
  40acf7:	add    BYTE PTR [ecx-0x7c4100a5],cl
  40acfd:	je     0x40ac95
  40acff:	gs sbb edi,edi
  40ad02:	int3   
  40ad03:	mov    edi,edi
  40ad05:	imul   ebp,DWORD PTR [ebp-0x34],0xcbfffe00
  40ad0c:	push   DWORD PTR [edx]
  40ad0e:	fsub   DWORD PTR [ebp+0xffff00]
  40ad14:	add    BYTE PTR [edx+0x19],dl
  40ad17:	add    DWORD PTR [eax],0xfffffff9
  40ad1a:	sub    DWORD PTR [ebp-0x6dfc2877],0xffffffa5
  40ad21:	dec    esp
  40ad23:	(bad)  
  40ad24:	(bad)  
  40ad25:	mov    esp,0xf8ff001d
  40ad2a:	inc    DWORD PTR [eax+eax*1]
  40ad2d:	push   ds
  40ad2e:	or     eax,0x83895396
  40ad33:	mov    DWORD PTR [eax],eax
  40ad35:	into   
  40ad36:	sbb    cl,BYTE PTR [ecx-0x7600317d]
  40ad3c:	dec    DWORD PTR [edi]
  40ad3e:	cmp    bh,BYTE PTR [ebp-0x7cffff2b]
  40ad44:	inc    DWORD PTR [esi-0x52ff3366]
  40ad4a:	mov    edx,esp
  40ad4c:	or     DWORD PTR [edi+ecx*2+0x1f],0x39
  40ad51:	add    DWORD PTR [ebx-0x6cd27d00],0x0
  40ad58:	jmp    FWORD PTR [ebp+0x2bff7a00]
  40ad5e:	inc    ecx
  40ad5f:	and    cl,BYTE PTR [eax]
  40ad61:	mov    DWORD PTR [eax],eax
  40ad63:	inc    DWORD PTR [eax]
  40ad65:	arpl   ax,dx
  40ad67:	add    bh,bh
  40ad69:	jl     0x40acf4
  40ad6b:	stc    
  40ad6c:	add    bh,cl
  40ad6e:	jmp    0xff00:0x8383a6d2
  40ad75:	out    0xa,al
  40ad77:	int3   
  40ad78:	sub    DWORD PTR [ebx+eax*4],0x74
  40ad7c:	inc    DWORD PTR [edx]
  40ad7e:	mov    ds:0x1670,eax
  40ad83:	add    bh,bh
  40ad85:	ss ins BYTE PTR es:[edi],dx
  40ad87:	(bad)  
  40ad88:	call   DWORD PTR [edx-0x77]
  40ad8b:	aaa    
  40ad8c:	mov    DWORD PTR ds:0xff389a98,esp
  40ad92:	add    BYTE PTR [eax],al
  40ad94:	(bad)  
  40ad95:	mov    edi,0x12ccffc8
  40ad9a:	adc    DWORD PTR [esi],0xffffffcc
  40ad9d:	xor    DWORD PTR [esi+0x76],0x898900ce
  40ada4:	int3   
  40ada5:	inc    edx
  40ada6:	and    eax,0xff0aff00
  40adab:	add    ecx,esp
  40adad:	xor    esi,edx
  40adaf:	div    BYTE PTR [edi+edi*8]
  40adb2:	add    BYTE PTR [eax],al
  40adb4:	add    BYTE PTR [ecx],dl
  40adb6:	mov    ds:0xff8aff89,al
  40adbb:	ja     0x40ad40
  40adbd:	mov    bh,0xb
  40adbf:	sub    edi,ecx
  40adc1:	int3   
  40adc2:	cmp    edi,0xffffffff
  40adc5:	ds out 0xff,al
  40adc8:	inc    DWORD PTR [esi-0x14ff7701]
  40adce:	mov    al,ds:0xff003b0f
  40add3:	add    BYTE PTR [ebx+0xff7a2d],al
  40add9:	stos   DWORD PTR es:[edi],eax
  40adda:	mov    DWORD PTR [ebp-0x34],ebx
  40addd:	inc    edx
  40adde:	fwait
  40addf:	ret    
  40ade0:	jno    0x40ade1
  40ade2:	cmp    edi,0xffffffff
  40ade5:	mov    ah,0xd0
  40ade7:	inc    DWORD PTR [ebx-0x33580038]
  40aded:	fmul   QWORD PTR [edx+0xff9b46]
  40adf3:	(bad)  
  40adf4:	dec    ebp
  40adf6:	inc    ebx
  40adf7:	cmp    edi,0xffffff9b
  40adfa:	add    BYTE PTR [ebx],cl
  40adfc:	adc    edi,0xffffffe7
  40adff:	dec    ecx
  40ae00:	lea    eax,[ebx+0x73830000]
  40ae06:	push   ebp
  40ae07:	add    bh,bh
  40ae09:	and    al,BYTE PTR [ebx-0x2b260055]
  40ae0f:	mov    edx,0xffff00ef
  40ae14:	mov    DWORD PTR [edi],ebp
  40ae16:	loopne 0x40ae18
  40ae18:	(bad)  
  40ae19:	(bad)  
  40ae1a:	jmp    FWORD PTR [eax-0x1]
  40ae1d:	sahf   
  40ae1e:	icebp  
  40ae1f:	jne    0x40ae50
  40ae21:	add    bh,bh
  40ae23:	inc    DWORD PTR [eax]
  40ae25:	leave  
  40ae26:	xchg   edi,eax
  40ae27:	add    bh,bh
  40ae29:	ja     0x40adae
  40ae2b:	cmp    eax,0xfbd7b983
  40ae30:	ja     0x40adb5
  40ae32:	inc    DWORD PTR [ebx-0x7c2be901]
  40ae38:	mov    DWORD PTR [ebp-0x1],esi
  40ae3b:	js     0x40ae3d
  40ae3d:	and    ah,ch
  40ae3f:	call   0xff41ae15
  40ae44:	call   FWORD PTR [eax-0x397cff05]
  40ae4a:	call   DWORD PTR [ebp+0x0]
  40ae4d:	push   ebx
  40ae4e:	sub    sp,dx
  40ae51:	(bad)  
  40ae52:	inc    DWORD PTR [eax]
  40ae54:	add    BYTE PTR [edi],dl
  40ae56:	fadd   DWORD PTR [eax]
  40ae58:	jmp    DWORD PTR [eax-0x1]
  40ae5b:	ret    0x4dff
  40ae5e:	add    ch,dh
  40ae60:	dec    esi
  40ae61:	add    bh,bh
  40ae63:	cmp    edi,0xfffffffa
  40ae66:	cmp    eax,0xff48ff00
  40ae6b:	mov    ds:0xfa709100,al
  40ae70:	loopne 0x40ae71
  40ae72:	int3   
  40ae73:	(bad)  
  40ae74:	(bad)  
  40ae75:	jmp    0xbcff:0xb1838375
  40ae7c:	dec    DWORD PTR [edi]
  40ae7e:	xchg   esp,eax
  40ae7f:	push   es
  40ae80:	adc    eax,0xffcc8383
  40ae85:	dec    esp
  40ae86:	or     esp,0xffffffcc
  40ae89:	(bad)  
  40ae8b:	and    eax,0x31645400
  40ae90:	xor    eax,0xff89ffcc
  40ae95:	cli    
  40ae96:	fdiv   st(7),st
  40ae98:	add    bl,al
  40ae9a:	int3   
  40ae9b:	stc    
  40ae9c:	(bad)  
  40ae9d:	fst    QWORD PTR [eax-0x4d]
  40aea0:	or     eax,0x83ffcccc
  40aea5:	dec    eax
  40aea6:	jge    0x40aea8
  40aea8:	add    bh,dh
  40aeaa:	push   DWORD PTR [edx-0x34]
  40aead:	xchg   DWORD PTR [edx+ebx*2-0x7c0043],edx
  40aeb4:	call   FWORD PTR [edi-0x70]
  40aeb7:	add    BYTE PTR [ecx-0xf37cc8],cl
  40aebd:	std    
  40aebe:	mov    esi,0xffffb952
  40aec3:	add    BYTE PTR [eax],al
  40aec5:	jecxz  0x40aea2
  40aec7:	add    bh,bh
  40aec9:	popa   
  40aeca:	(bad)  
  40aecb:	mov    ebp,0x7d1a0589
  40aed0:	sub    BYTE PTR [eax],al
  40aed2:	inc    DWORD PTR [eax]
  40aed4:	cmp    DWORD PTR [ecx-0x2],0x0
  40aed8:	cmp    DWORD PTR [edx+0x0],0xffffff86
  40aedc:	add    ch,dh
  40aede:	cmp    al,0x83
  40aee0:	cwde   
  40aee1:	int3   
  40aee2:	dec    DWORD PTR [ecx+0x1b26ff]
  40aee8:	inc    DWORD PTR [edx-0x800a701]
  40aeee:	bswap  ebp
  40aef0:	adc    esp,ecx
  40aef2:	inc    DWORD PTR [eax]
  40aef4:	inc    ecx
  40aef6:	jne    0x40ae81
  40aef8:	and    DWORD PTR [ebx],0xffffffcc
  40aefb:	sub    BYTE PTR [eax],al
  40aefd:	aam    0x1e
  40aeff:	rol    BYTE PTR [edi+edi*8],1
  40af02:	(bad)  
  40af03:	inc    DWORD PTR [ebx+0xff80d6]
  40af09:	ret    
  40af0a:	(bad)  
  40af0b:	stc    
  40af0c:	dec    DWORD PTR [ebp-0x6d]
  40af0f:	test   BYTE PTR [ecx],bl
  40af11:	add    DWORD PTR [ebx-0x45820001],0xffffffff
  40af18:	add    BYTE PTR [eax+0x59ff2d89],al
  40af1e:	adc    al,0x6a
  40af20:	jns    0x40aeab
  40af22:	inc    DWORD PTR [eax]
  40af24:	add    BYTE PTR [edx+0xbff005c],dh
  40af2a:	int3   
  40af2b:	sar    bh,cl
  40af2d:	call   0x851a55
  40af32:	cmp    edi,0x0
  40af35:	jo     0x40af1f
  40af37:	(bad)  
  40af38:	call   FWORD PTR [edx+0x6d83becc]
  40af3e:	stos   BYTE PTR es:[edi],al
  40af3f:	fist   DWORD PTR [ecx-0x34]
  40af42:	int3   
  40af43:	dec    DWORD PTR [ecx+0xffdec3]
  40af49:	jmp    0x7756:0xd0835700
  40af50:	and    eax,DWORD PTR [ebx+0x5c0000ff]
  40af56:	sbb    bh,bh
  40af58:	jmp    eax
  40af5a:	dec    DWORD PTR [ebx]
  40af5c:	add    BYTE PTR [eax+0x65],bl
  40af5f:	push   ebp
  40af60:	push   edx
  40af61:	dec    esp
  40af63:	mov    DWORD PTR [eax],eax
  40af65:	pop    esp
  40af66:	mov    bl,0xcc
  40af68:	push   eax
  40af6a:	jmp    FWORD PTR [ebp+0x791354ff]
  40af70:	mov    ds:0xffff0089,eax
  40af75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af76:	icebp  
  40af77:	inc    DWORD PTR [eax]
  40af79:	xchg   edi,eax
  40af7a:	int3   
  40af7b:	pop    esp
  40af7c:	add    BYTE PTR [edx+0x2c],dh
  40af7f:	ret    
  40af80:	(bad)  
  40af83:	cmp    edi,0xffffffd6
  40af86:	pop    ebp
  40af87:	add    BYTE PTR [eax],al
  40af89:	mov    dh,0x0
  40af8b:	fld    DWORD PTR [ebx+0x17a7a3]
  40af91:	int3   
  40af92:	add    BYTE PTR [ecx+0xf58d00],cl
  40af98:	(bad)  
  40af99:	mov    edi,0xe9ff8183
  40af9e:	and    DWORD PTR [ebp+0x6d],esp
  40afa1:	dec    DWORD PTR [ecx-0x5f7e0000]
  40afa7:	add    bh,bh
  40afa9:	pop    esi
  40afaa:	push   DWORD PTR [ecx-0x54442100]
  40afb0:	ret    
  40afb1:	inc    DWORD PTR [ebx-0xbe00001]
  40afb7:	add    bh,bh
  40afb9:	pop    edi
  40afba:	add    BYTE PTR [esi-0x1],dh
  40afbd:	test   bh,dl
  40afbf:	aaa    
  40afc0:	mov    esp,0xff00ffff
  40afc5:	fiadd  WORD PTR [edi]
  40afc7:	int3   
  40afc8:	int3   
  40afc9:	jnp    0x40af54
  40afcb:	dec    esi
  40afcc:	cmp    DWORD PTR [ebx],0x65
  40afcf:	fist   DWORD PTR [edi+edi*8+0x0]
  40afd3:	mov    esp,ecx
  40afd5:	or     BYTE PTR [ebx],cl
  40afd7:	dec    DWORD PTR [ecx-0x1fff6c]
  40afdd:	add    ebp,DWORD PTR [edx]
  40afdf:	pop    ecx
  40afe0:	inc    ebp
  40afe1:	inc    DWORD PTR [eax]
  40afe3:	add    BYTE PTR [eax],al
  40afe5:	pop    edi
  40afe6:	cs add bh,bh
  40afe9:	data16 add BYTE PTR [esi],ch
  40afec:	mov    edx,ebp
  40afee:	test   BYTE PTR [eax],ch
  40aff0:	cmp    cl,BYTE PTR [ecx+0x5e8389ff]
  40aff6:	inc    edx
  40aff7:	add    DWORD PTR [eax],0xffffff9d
  40affa:	sub    DWORD PTR [edi+0x0],0x44
  40affe:	xor    al,0xcb
  40b000:	inc    DWORD PTR ds:[eax]
  40b003:	add    BYTE PTR [ebx-0x7c00dc61],al
  40b009:	cmp    al,0xff
  40b00b:	inc    edi
  40b00c:	add    dl,ah
  40b00e:	dec    eax
  40b00f:	lock std 
  40b011:	(bad)  
  40b012:	(bad)  
  40b013:	(bad)  
  40b014:	jmp    DWORD PTR [edx]
  40b016:	outs   dx,BYTE PTR ds:[esi]
  40b017:	dec    esp
  40b019:	outs   dx,DWORD PTR ds:[esi]
  40b01a:	sbb    DWORD PTR [esi+0x0],0x67
  40b01e:	fistp  DWORD PTR [ebp-0x3300ffe0]
  40b024:	int3   
  40b025:	and    dl,BYTE PTR [edi-0x1]
  40b028:	add    BYTE PTR [edx],dh
  40b02a:	and    esp,0x0
  40b02d:	push   ebx
  40b02e:	inc    esi
  40b02f:	in     eax,0x8e
  40b031:	cmp    edi,0x0
  40b034:	inc    DWORD PTR [edi]
  40b036:	sbb    bh,bh
  40b038:	add    BYTE PTR [esi-0x3c33c301],bh
  40b03e:	dec    esi
  40b03f:	stc    
  40b040:	out    dx,al
  40b041:	(bad)  
  40b042:	dec    DWORD PTR [ecx-0xddf001]
  40b048:	mov    edi,edi
  40b04a:	mov    ecx,ebx
  40b04c:	jmp    FWORD PTR [esi]
  40b04e:	push   ebx
  40b04f:	nop
  40b050:	cmc    
  40b051:	add    bh,bh
  40b053:	(bad)  
  40b054:	jmp    FWORD PTR [ebx]
  40b056:	adc    bh,bh
  40b058:	jmp    DWORD PTR [eax+eax*1-0x1b83002d]
  40b05f:	xchg   BYTE PTR [ecx-0x77],bh
  40b062:	or     esp,0xffffffff
  40b065:	aad    0xda
  40b067:	add    BYTE PTR [eax],al
  40b069:	retf   0xe00
  40b06c:	add    bh,dl
  40b06e:	gs je  0x40b09e
  40b071:	or     DWORD PTR [ecx-0x2aa20100],0x0
  40b078:	add    BYTE PTR [esi],dl
  40b07a:	add    BYTE PTR [ebx-0x1],dl
  40b07d:	cwde   
  40b07e:	ins    BYTE PTR es:[edi],dx
  40b07f:	enter  0xf,0xff
  40b083:	add    bh,bh
  40b085:	test   eax,0xfcff0093
  40b08a:	add    BYTE PTR [edi-0x13b67f00],al
  40b090:	and    DWORD PTR [eax],eax
  40b092:	(bad)  
  40b093:	inc    DWORD PTR [eax]
  40b095:	pop    ds
  40b096:	mov    ecx,0x894989ff
  40b09b:	test   BYTE PTR [ecx-0x78ff692c],0xff
  40b0a2:	(bad)  
  40b0a3:	(bad)  
  40b0a4:	(bad)  
  40b0a5:	cmp    ah,dl
  40b0a7:	inc    DWORD PTR [eax]
  40b0a9:	scas   eax,DWORD PTR es:[edi]
  40b0aa:	int3   
  40b0ab:	pop    es
  40b0ac:	jmp    FWORD PTR [esi-0xc6024f]
  40b0b2:	int3   
  40b0b3:	cmp    edi,0xffffff96
  40b0b6:	ror    BYTE PTR [ecx-0x527ccb00],1
  40b0bc:	jmp    FWORD PTR [edi-0x33a0fb82]
  40b0c2:	or     DWORD PTR [ecx+0x335689],0xffffffff
  40b0c9:	outs   dx,DWORD PTR ds:[esi]
  40b0ca:	inc    DWORD PTR [edx+0x0]
  40b0cd:	loopne 0x40b089
  40b0cf:	call   0xceff:0x83ff36
  40b0d6:	out    0xff,al
  40b0d8:	(bad)  
  40b0d9:	(bad)  
  40b0db:	dec    edx
  40b0dc:	dec    DWORD PTR [ecx-0xa8289e]
  40b0e2:	inc    DWORD PTR [ebx-0xc69601]
  40b0e8:	jmp    DWORD PTR [esi-0x3a006801]
  40b0ee:	loopne 0x40b075
  40b0f0:	clc    
  40b0f1:	add    BYTE PTR [ebx-0x6c710000],al
  40b0f7:	int3   
  40b0f8:	dec    DWORD PTR [esi-0x34]
  40b0fb:	inc    ebx
  40b0fc:	int3   
  40b0fd:	jl     0x40b0ef
  40b0ff:	and    BYTE PTR [edi+edi*8-0x1],ch
  40b103:	(bad)  
  40b104:	(bad)  
  40b105:	fld    st(7)
  40b107:	(bad)  
  40b108:	dec    DWORD PTR [esi-0x600f577]
  40b10e:	sub    BYTE PTR [esi-0x33a8],dh
  40b114:	int3   
  40b115:	js     0x40b154
  40b117:	add    BYTE PTR [ebx-0xc40006],al
  40b11d:	or     DWORD PTR [edx-0x60],eax
  40b120:	xchg   ebx,eax
  40b121:	or     esp,0x0
  40b124:	dec    DWORD PTR [edx]
  40b126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b127:	(bad)  
  40b128:	push   DWORD PTR [edx]
  40b12a:	add    BYTE PTR [eax+eax*1+0x572dd037],bl
  40b131:	cmp    edi,0xffffffff
  40b134:	add    BYTE PTR [ecx-0x79],ch
  40b137:	add    DWORD PTR [eax],0x1a
  40b13a:	push   edx
  40b13c:	cmp    esp,0xffffffd1
  40b13f:	push   esp
  40b140:	dec    edi
  40b141:	add    BYTE PTR [ebx+0x76fdffff],al
  40b147:	mov    DWORD PTR [eax],eax
  40b149:	into   
  40b14a:	add    dl,ch
  40b14c:	int3   
  40b14d:	and    eax,0xff7b5a96
  40b152:	add    bh,bh
  40b154:	call   DWORD PTR [esi]
  40b156:	mov    bl,0x83
  40b158:	add    BYTE PTR [esi-0x4a7c3201],ch
  40b15e:	gs int3 
  40b160:	pusha  
  40b161:	add    bh,bh
  40b163:	inc    DWORD PTR [eax]
  40b165:	popa   
  40b166:	push   0x0
  40b168:	mov    DWORD PTR [edi+0x0],ebp
  40b16b:	cmp    BYTE PTR [eax],al
  40b16d:	jne    0x40b109
  40b16f:	cmp    BYTE PTR [esp+ecx*8-0x1],0x0
  40b174:	add    BYTE PTR [esp+edx*2-0x1f7c7d],cl
  40b17b:	jge    0x40b17d
  40b17d:	cwde   
  40b17e:	and    BYTE PTR [edx+0x1a],bh
  40b181:	inc    DWORD PTR [eax]
  40b183:	(bad)  
  40b184:	call   FWORD PTR [edi-0x29]
  40b187:	(bad)  
  40b188:	jmp    FWORD PTR [eax+0x63ffe800]
  40b18e:	and    BYTE PTR [eax+ecx*4-0x7cffff01],dl
  40b195:	mov    esi,0xdccc0065
  40b19a:	int3   
  40b19b:	adc    al,0x83
  40b19d:	ins    BYTE PTR es:[edi],dx
  40b19e:	xor    BYTE PTR [eax],ch
  40b1a0:	push   ds
  40b1a1:	add    BYTE PTR [ecx+0x5fe2cc00],cl
  40b1a7:	add    bh,bh
  40b1a9:	aad    0x89
  40b1ab:	xor    bh,bh
  40b1ad:	aam    0x4
  40b1af:	cmp    al,0xe3
  40b1b1:	int3   
  40b1b2:	inc    DWORD PTR [eax]
  40b1b4:	mov    DWORD PTR [eax-0x647cff79],edx
  40b1ba:	add    edx,0xffffffff
  40b1bd:	daa    
  40b1be:	sub    al,0x90
  40b1c0:	fwait
  40b1c1:	add    bh,bh
  40b1c3:	inc    DWORD PTR [eax]
  40b1c5:	aad    0x34
  40b1c7:	add    ah,cl
  40b1c9:	popf   
  40b1ca:	dec    DWORD PTR [ecx-0x1]
  40b1cd:	jp     0x40b1b7
  40b1cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1d0:	pusha  
  40b1d1:	inc    DWORD PTR [ebx+0x4638989]
  40b1d7:	cmp    edi,0x5a
  40b1da:	and    DWORD PTR [ecx],0xffffff83
  40b1dd:	dec    ebx
  40b1de:	jl     0x40b256
  40b1e0:	test   DWORD PTR [ecx-0x3f007601],ecx
  40b1e6:	inc    ebx
  40b1e7:	add    BYTE PTR [eax],al
  40b1e9:	add    BYTE PTR ds:[ebp+0x0],ch
  40b1ed:	mov    ebp,esp
  40b1ef:	push   eax
  40b1f0:	cld    
  40b1f1:	mov    edi,edi
  40b1f3:	(bad)  
  40b1f4:	call   FWORD PTR [edi]
  40b1f6:	mov    DWORD PTR [eax],eax
  40b1f8:	(bad)  
  40b1f9:	mov    ebp,0x6dff3783
  40b1fe:	mov    ds:0x83ff566b,eax
  40b203:	inc    DWORD PTR [eax]
  40b205:	jp     0x40b1fe
  40b207:	cmp    edi,0xffffff9f
  40b20a:	add    BYTE PTR [esi],al
  40b20c:	jmp    eax
  40b20e:	arpl   WORD PTR [ebp+0x79],bp
  40b211:	inc    DWORD PTR [eax]
  40b213:	add    BYTE PTR [ecx+0x89bcc0],cl
  40b219:	push   ecx
  40b21a:	(bad)  
  40b21b:	sti    
  40b21c:	add    cl,dl
  40b21e:	mov    es,WORD PTR [ebp-0x7c7cff99]
  40b224:	int3   
  40b225:	retf   0x77
  40b228:	call   eax
  40b22a:	mov    ebp,ebx
  40b22c:	mov    ebx,eax
  40b22e:	call   DWORD PTR [edi]
  40b230:	and    BYTE PTR [eax],al
  40b232:	add    bh,bh
  40b234:	(bad)  
  40b235:	std    
  40b236:	ins    BYTE PTR es:[edi],dx
  40b237:	add    BYTE PTR [ecx-0x769dff3c],cl
  40b23d:	dec    eax
  40b23e:	test   eax,0x834a70
  40b243:	add    BYTE PTR [eax],al
  40b245:	cmc    
  40b246:	js     0x40b248
  40b248:	(bad)  
  40b249:	mov    esp,0xcb0081ff
  40b24e:	dec    edi
  40b24f:	popf   
  40b250:	push   ebx
  40b251:	inc    DWORD PTR [eax]
  40b253:	inc    DWORD PTR [eax]
  40b255:	int    0xf7
  40b257:	int3   
  40b258:	jmp    DWORD PTR [ebx]
  40b25a:	add    BYTE PTR [eax],al
  40b25c:	and    DWORD PTR [ecx-0xfb6b02],0xffffffff
  40b263:	(bad)  
  40b264:	jmp    FWORD PTR [esi]
  40b266:	adc    al,0xff
  40b268:	add    BYTE PTR [edi],bl
  40b26a:	mov    esp,eax
  40b26c:	int3   
  40b26d:	out    0xeb,eax
  40b26f:	test   esp,edi
  40b271:	add    bh,bh
  40b273:	add    ah,cl
  40b275:	dec    esi
  40b276:	in     al,0xff
  40b278:	jmp    FWORD PTR [ebx+0x0]
  40b27b:	jbe    0x40b27c
  40b27d:	jbe    0x40b26c
  40b27f:	xor    BYTE PTR [esi],ch
  40b281:	add    ah,cl
  40b283:	inc    DWORD PTR [eax]
  40b285:	out    dx,eax
  40b286:	je     0x40b287
  40b288:	jmp    DWORD PTR [ebx-0x2233d100]
  40b28e:	arpl   sp,ax
  40b290:	stos   BYTE PTR es:[edi],al
  40b291:	(bad)  
  40b292:	(bad)  
  40b293:	inc    DWORD PTR [eax]
  40b295:	icebp  
  40b296:	push   edi
  40b297:	(bad)  
  40b298:	call   DWORD PTR [esi+0x0]
  40b29b:	jg     0x40b29d
  40b29d:	push   esi
  40b29e:	aad    0x32
  40b2a0:	fdivr  st,st(7)
  40b2a2:	inc    DWORD PTR [eax]
  40b2a4:	call   DWORD PTR [esi+0x4500ff12]
  40b2aa:	(bad)  
  40b2ab:	fld    QWORD PTR [eax]
  40b2ad:	mov    ah,0x6f
  40b2af:	sub    al,0x47
  40b2b1:	cmp    edi,0xffffff83
  40b2b4:	add    BYTE PTR [edx+ebx*2-0x336b0100],cl
  40b2bb:	leave  
  40b2bc:	and    ebx,0xffffffdf
  40b2bf:	sahf   
  40b2c0:	and    eax,DWORD PTR [eax]
  40b2c2:	(bad)  
  40b2c3:	inc    DWORD PTR [eax]
  40b2c5:	iret   
  40b2c6:	adc    DWORD PTR [eax],eax
  40b2c8:	add    BYTE PTR [edx],bh
  40b2ca:	(bad)  
  40b2cb:	mov    edx,0x5450f783
  40b2d0:	cdq    
  40b2d1:	add    BYTE PTR [eax],al
  40b2d3:	int3   
  40b2d4:	add    cl,bl
  40b2d6:	clc    
  40b2d7:	add    bh,bh
  40b2d9:	jle    0x40b2da
  40b2db:	in     eax,0xff
  40b2dd:	inc    ecx
  40b2de:	xchg   BYTE PTR [esi],al
  40b2e0:	dec    ebx
  40b2e1:	mov    DWORD PTR [eax],eax
  40b2e3:	inc    DWORD PTR [eax]
  40b2e5:	hlt    
  40b2e6:	and    eax,0x89adffff
  40b2eb:	stos   DWORD PTR es:[edi],eax
  40b2ec:	mov    DWORD PTR [esi],esi
  40b2ee:	sbb    cl,BYTE PTR [ebx-0x766f]
  40b2f4:	jmp    DWORD PTR [ebx]
  40b2f6:	inc    eax
  40b2f7:	add    BYTE PTR [eax],al
  40b2f9:	sub    bh,bh
  40b2fb:	pop    ds
  40b2fc:	add    BYTE PTR [ebx+0x3d],cl
  40b2ff:	stos   BYTE PTR es:[edi],al
  40b300:	sbb    eax,DWORD PTR [eax]
  40b302:	inc    DWORD PTR [eax]
  40b304:	add    BYTE PTR [ecx+0xe],bl
  40b307:	add    BYTE PTR [eax],al
  40b309:	lock (bad) 
  40b30b:	in     al,dx
  40b30c:	(bad)  
  40b30d:	in     al,dx
  40b30e:	shr    BYTE PTR [eax+0xffff69],cl
  40b314:	cmp    DWORD PTR [esp+0x0],0x0
  40b319:	inc    ebp
  40b31a:	sbb    DWORD PTR [ecx+0x0],0xfffffff9
  40b31e:	fimul  WORD PTR [ecx]
  40b320:	in     al,0xff
  40b322:	(bad)  
  40b323:	inc    DWORD PTR [ebx-0x337c5e44]
  40b329:	jno    0x40b32b
  40b32b:	mov    dh,0x0
  40b32d:	jl     0x40b31a
  40b32f:	push   esi
  40b330:	pop    ss
  40b331:	(bad)  
  40b332:	dec    esp
  40b334:	call   DWORD PTR [edi+0x33ff00ec]
  40b33a:	add    DWORD PTR [esi+0x0],0x3d
  40b33e:	cmp    dl,BYTE PTR [eax]
  40b340:	loopne 0x40b2c5
  40b342:	add    bh,bh
  40b344:	int3   
  40b345:	lock sbb eax,DWORD PTR [eax]
  40b348:	add    al,bl
  40b34a:	(bad)  
  40b34b:	clc    
  40b34c:	mov    DWORD PTR [ebp-0x33f77245],esp
  40b352:	add    DWORD PTR [ebx+0xb984ff],0xffffffff
  40b359:	mov    ebp,0x5d00f400
  40b35e:	xabort 0x6b
  40b361:	add    bh,bh
  40b363:	(bad)  
  40b364:	(bad)  
  40b365:	mov    edi,0xe9ff004f
  40b36a:	int3   
  40b36b:	mov    ecx,esp
  40b36d:	cli    
  40b36e:	stc    
  40b36f:	aam    0x7f
  40b371:	cmp    edi,0x0
  40b374:	int3   
  40b375:	rcl    DWORD PTR [esi],cl
  40b377:	or     esp,0xffffff9e
  40b37a:	add    BYTE PTR [eax-0x1],dl
  40b37d:	hlt    
  40b37e:	xchg   DWORD PTR [edx+0x9],esp
  40b381:	cmp    edi,0x0
  40b384:	int3   
  40b385:	xor    al,BYTE PTR [esi-0x7d]
  40b388:	mov    DWORD PTR [esi-0x20ff8177],edx
  40b38e:	test   BYTE PTR [edx-0x6b],bh
  40b391:	inc    DWORD PTR [eax]
  40b393:	(bad)  
  40b394:	(bad)  
  40b395:	cmp    dh,bl
  40b397:	add    bh,bh
  40b399:	fild   DWORD PTR [eax]
  40b39b:	push   edx
  40b39c:	add    BYTE PTR [edx+0x52],bh
  40b39f:	sub    eax,0xffff0063
  40b3a4:	sub    DWORD PTR [ebx+0x4883ccd9],0xffffffff
  40b3ab:	mov    bh,0xff
  40b3ad:	jecxz  0x40b3dd
  40b3af:	fst    QWORD PTR [edx-0x33003334]
  40b3b5:	add    DWORD PTR [edx-0x1],0x0
  40b3b9:	aaa    
  40b3ba:	add    cl,ch
  40b3bc:	call   FWORD PTR [edx]
  40b3be:	add    al,0xb7
  40b3c0:	xchg   edx,eax
  40b3c1:	add    BYTE PTR [ebx+0x4b9ff00],al
  40b3c7:	add    BYTE PTR [ebx+0x1bffc3],al
  40b3cd:	sbb    al,0xbc
  40b3cf:	lds    esi,FWORD PTR [edi+edi*8-0x1]
  40b3d3:	inc    DWORD PTR [eax]
  40b3d5:	push   edi
  40b3d6:	clc    
  40b3d7:	add    bh,bh
  40b3d9:	jb     0x40b3db
  40b3db:	int    0xff
  40b3dd:	out    0x59,al
  40b3df:	test   dh,bl
  40b3e1:	(bad)  
  40b3e2:	inc    DWORD PTR [eax]
  40b3e4:	add    BYTE PTR [edi-0x1],dl
  40b3e7:	inc    DWORD PTR [eax]
  40b3e9:	push   eax
  40b3ea:	inc    DWORD PTR [ebx]
  40b3ec:	call   DWORD PTR [edx+0x69]
  40b3ef:	mov    dh,0x46
  40b3f1:	inc    DWORD PTR [eax]
  40b3f3:	inc    DWORD PTR [eax]
  40b3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3f6:	pushf  
  40b3f7:	inc    DWORD PTR [ebx+0x4bff87]
  40b3fd:	cmp    eax,DWORD PTR [ebx]
  40b3ff:	not    DWORD PTR [edx]
  40b401:	add    bh,bh
  40b403:	add    bh,bh
  40b405:	add    eax,DWORD PTR [edx+0x2affff]
  40b40b:	stos   BYTE PTR es:[edi],al
  40b40c:	int3   
  40b40d:	add    al,0x67
  40b40f:	sub    eax,0x89ff83d4
  40b414:	int3   
  40b415:	fdivr  st,st(4)
  40b417:	(bad)  
  40b418:	jmp    FWORD PTR [edx]
  40b41a:	add    BYTE PTR [ebp-0x1],ch
  40b41d:	(bad)  [esi+0xa]
  40b420:	sahf   
  40b421:	dec    DWORD PTR [ecx-0x78660001]
  40b427:	dec    DWORD PTR [ecx-0x8300d9]
  40b42d:	mov    dh,BYTE PTR [edi-0xac34]
  40b433:	inc    DWORD PTR [ebx+0xff0c09]
  40b439:	mov    dh,0xcc
  40b43b:	imul   edi,edi,0xffffffde
  40b43e:	cmc    
  40b43f:	push   ebx
  40b440:	mov    ah,0xff
  40b442:	add    DWORD PTR [eax],0x0
  40b445:	hlt    
  40b446:	enter  0x0,0x6c
  40b44a:	call   DWORD PTR [ebx+eax*4]
  40b44d:	or     esi,esi
  40b44f:	inc    edi
  40b450:	add    bh,bh
  40b452:	add    BYTE PTR [eax],al
  40b454:	add    dh,bl
  40b456:	(bad)  
  40b457:	inc    DWORD PTR [eax]
  40b459:	mov    al,BYTE PTR [eax]
  40b45b:	xchg   esi,eax
  40b45c:	add    BYTE PTR [eax+0x40],bl
  40b45f:	xchg   DWORD PTR [eax],ebx
  40b461:	add    bh,bh
  40b463:	inc    DWORD PTR [eax]
  40b465:	add    eax,0x889838c
  40b46a:	call   ebp
  40b46c:	add    ch,ah
  40b46e:	and    BYTE PTR [eax+0x4a],ch
  40b471:	inc    DWORD PTR [eax]
  40b473:	int3   
  40b474:	add    bl,bl
  40b476:	cmp    eax,DWORD PTR [ebx-0x3200537d]
  40b47c:	add    al,dh
  40b47e:	mov    dh,0xe5
  40b480:	ror    DWORD PTR [ecx+0x628983ff],1
  40b486:	lods   al,BYTE PTR ds:[esi]
  40b487:	inc    DWORD PTR [eax]
  40b489:	pop    ecx
  40b48a:	add    BYTE PTR [eax+eax*1+0x30],bl
  40b48e:	aad    0x5a
  40b490:	xchg   ebp,eax
  40b491:	dec    DWORD PTR [ecx-0x294d0100]
  40b497:	inc    DWORD PTR [eax]
  40b499:	popf   
  40b49a:	add    cl,al
  40b49c:	call   DWORD PTR [ecx]
  40b49e:	adc    eax,0xff00d4c4
  40b4a3:	int3   
  40b4a4:	add    BYTE PTR [edi-0x37],cl
  40b4a7:	inc    DWORD PTR [eax]
  40b4a9:	inc    edi
  40b4aa:	call   FWORD PTR [ecx+0x0]
  40b4ad:	pop    esp
  40b4ae:	pop    ecx
  40b4af:	and    ah,bl
  40b4b1:	add    BYTE PTR [eax],al
  40b4b3:	inc    DWORD PTR [eax]
  40b4b5:	repz or bh,bh
  40b4b8:	dec    ebx
  40b4ba:	mov    DWORD PTR [edi],ecx
  40b4bc:	add    cl,dl
  40b4be:	bound  esi,QWORD PTR [eax]
  40b4c0:	or     DWORD PTR [ecx+0x5300ff00],0xdfffcce6
  40b4ca:	add    DWORD PTR [eax+eax*1],0xffffff86
  40b4ce:	scas   al,BYTE PTR es:[edi]
  40b4cf:	ins    DWORD PTR es:[edi],dx
  40b4d0:	mov    dl,0xff
  40b4d2:	mov    DWORD PTR [eax],eax
  40b4d4:	jmp    DWORD PTR [esi]
  40b4d6:	mov    dh,0x89
  40b4d8:	dec    DWORD PTR [ebp-0xd7c9801]
  40b4de:	hlt    
  40b4df:	neg    DWORD PTR [edi-0xff0034]
  40b4e5:	push   es
  40b4e6:	pop    esp
  40b4e7:	dec    esp
  40b4e9:	inc    esi
  40b4ea:	jmp    DWORD PTR [ebx-0x1]
  40b4ed:	and    dl,BYTE PTR [ecx]
  40b4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f0:	push   ecx
  40b4f1:	add    bh,bh
  40b4f3:	(bad)  
  40b4f4:	call   FWORD PTR [ebp+0x64]
  40b4f7:	or     esp,0x19
  40b4fa:	add    BYTE PTR ds:0xce71d900,bl
  40b500:	(bad)  
  40b503:	dec    DWORD PTR [ecx+0xff6081]
  40b509:	cmp    bh,0x79
  40b50c:	add    BYTE PTR [ebp-0x33],ah
  40b50f:	and    ch,BYTE PTR [eax-0x1]
  40b515:	fcomp  DWORD PTR [esi]
  40b517:	add    BYTE PTR [ecx-0x5cff8d],cl
  40b51d:	or     al,BYTE PTR [eax]
  40b51f:	mov    ch,0x52
  40b521:	add    bh,bh
  40b523:	add    DWORD PTR [eax],0xffffffdc
  40b526:	mov    al,ds:0xff798383
  40b52b:	or     edi,edi
  40b52d:	retf   
  40b52e:	pusha  
  40b52f:	jecxz  0x40b522
  40b531:	(bad)  
  40b532:	inc    DWORD PTR [eax]
  40b534:	jmp    FWORD PTR [ebx+0x7600ff3d]
  40b53a:	jmp    FWORD PTR [ecx-0x1]
  40b53d:	loope  0x40b593
  40b53f:	ror    DWORD PTR [edx-0x34],0xcc
  40b543:	add    bh,bh
  40b545:	mov    eax,ds:0x3cff002c
  40b54a:	mov    eax,esi
  40b54c:	jmp    FWORD PTR [ecx-0xbb50af]
  40b552:	inc    DWORD PTR [ebx+0xb70000]
  40b558:	jmp    DWORD PTR [eax-0x5700dd01]
  40b55e:	sti    
  40b55f:	and    dh,bh
  40b561:	mov    edi,edi
  40b563:	add    bh,bh
  40b565:	dec    eax
  40b566:	sbb    al,BYTE PTR [eax]
  40b568:	push   ebx
  40b56a:	add    BYTE PTR [edi-0x1],dl
  40b56d:	mov    ah,0xc2
  40b56f:	gs stos BYTE PTR es:[edi],al
  40b571:	add    bh,bh
  40b573:	cmp    edi,0x34
  40b576:	xor    edi,edi
  40b578:	push   DWORD PTR [esi+0x6bfff2ff]
  40b57e:	sbb    eax,0xffffccdd
  40b583:	(bad)  
  40b584:	call   FWORD PTR [ebx+eiz*2]
  40b587:	(bad)  
  40b588:	inc    edx
  40b58a:	dec    DWORD PTR [eax-0x1]
  40b58d:	ret    0x60bc
  40b590:	inc    ebp
  40b591:	add    bh,bh
  40b593:	mov    edi,edi
  40b595:	mov    dh,0x96
  40b597:	int3   
  40b598:	add    BYTE PTR [esi-0x1],bh
  40b59b:	mov    ecx,0x12dcd2ff
  40b5a0:	(bad)  
  40b5a2:	add    BYTE PTR [eax],al
  40b5a4:	add    bl,al
  40b5a6:	jae    0x40b5a8
  40b5a8:	jmp    FWORD PTR [eax]
  40b5aa:	inc    DWORD PTR ds:0x3dae1bff
  40b5b0:	cwde   
  40b5b1:	int3   
  40b5b2:	(bad)  
  40b5b3:	(bad)  
  40b5b4:	call   FWORD PTR [ecx-0x71]
  40b5b7:	mov    edi,edi
  40b5b9:	(bad)  
  40b5ba:	dec    DWORD PTR [ecx-0x2fbf8b01]
  40b5c0:	dec    esi
  40b5c1:	add    bh,bh
  40b5c3:	cmp    edi,0x7
  40b5c6:	fimul  WORD PTR [ecx+0xcffcf83]
  40b5cc:	push   ebx
  40b5ce:	rcl    BYTE PTR [edi-0x337c3342],cl
  40b5d4:	inc    DWORD PTR [ebp+0x38cc0096]
  40b5da:	add    cl,ch
  40b5dc:	add    BYTE PTR [ecx+0x4],bl
  40b5df:	mov    ebp,0x8919
  40b5e4:	mov    esp,ecx
  40b5e6:	mov    eax,0x510083
  40b5eb:	mov    DWORD PTR [eax],eax
  40b5ed:	inc    edi
  40b5ee:	xchg   edx,eax
  40b5ef:	pop    ds
  40b5f0:	imul   eax,DWORD PTR [ebx+0x6d830000],0x9883ff5c
  40b5fa:	jmp    DWORD PTR [ebp-0x49cf0801]
  40b600:	mov    DWORD PTR ss:[eax],eax
  40b603:	add    BYTE PTR [ebx+0xff544b],al
  40b609:	fisttp QWORD PTR [ecx-0x482ffbc]
  40b60f:	fsub   st,st(4)
  40b611:	mov    DWORD PTR [eax],eax
  40b613:	add    bh,bh
  40b615:	stos   DWORD PTR es:[edi],eax
  40b616:	pop    ecx
  40b617:	(bad)  
  40b618:	push   DWORD PTR [eax+0x1889df89]
  40b61e:	cwde   
  40b61f:	addr16 (bad) 
  40b621:	inc    DWORD PTR [ebx-0x7ae2ff77]
  40b627:	dec    DWORD PTR [ecx-0x769e0080]
  40b62d:	lods   al,BYTE PTR ds:[esi]
  40b62e:	shr    BYTE PTR [esi],1
  40b630:	inc    ebp
  40b631:	mov    edi,edi
  40b633:	inc    DWORD PTR [eax]
  40b635:	or     ebx,DWORD PTR [ebp-0xbc0100]
  40b63b:	push   ss
  40b63c:	int3   
  40b63d:	pop    ds
  40b63e:	xchg   edx,eax
  40b63f:	inc    DWORD PTR [bx+si]
  40b642:	(bad)  
  40b643:	(bad)  
  40b644:	inc    DWORD PTR [ebp+0x6f]
  40b647:	add    bh,bh
  40b649:	bound  eax,QWORD PTR [ebx+0x2d168332]
  40b64f:	out    dx,eax
  40b650:	cmc    
  40b651:	inc    DWORD PTR [eax]
  40b653:	add    bh,bh
  40b655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b656:	push   eax
  40b657:	inc    DWORD PTR [eax]
  40b659:	mov    edi,0x698361ff
  40b65e:	cld    
  40b65f:	inc    ebp
  40b660:	mov    eax,0x830000ff
  40b665:	fs (bad) 
  40b669:	mov    cl,0x0
  40b66b:	inc    esi
  40b66c:	add    BYTE PTR [esi+ecx*2],al
  40b66f:	stos   BYTE PTR es:[edi],al
  40b670:	ins    DWORD PTR es:[edi],dx
  40b671:	add    bh,bh
  40b673:	inc    DWORD PTR [ebx-0xff35bb]
  40b679:	and    eax,0x32ff4983
  40b67e:	loope  0x40b6d6
  40b680:	push   ds
  40b681:	add    bh,bh
  40b683:	dec    DWORD PTR [ecx-0xd7ee]
  40b689:	jb     0x40b68b
  40b68b:	mov    cl,0xff
  40b68d:	das    
  40b68e:	push   esp
  40b68f:	mov    ah,0x83
  40b691:	inc    DWORD PTR [eax]
  40b693:	add    ah,cl
  40b695:	cmp    BYTE PTR [ecx-0xbf0000],0x56
  40b69c:	or     ebp,0x21
  40b69f:	scas   eax,DWORD PTR es:[edi]
  40b6a0:	pop    esp
  40b6a1:	add    bh,bh
  40b6a3:	add    ah,cl
  40b6a5:	sub    al,0xdb
  40b6a7:	inc    DWORD PTR [eax]
  40b6a9:	pop    ecx
  40b6aa:	(bad)  
  40b6ab:	aas    
  40b6ac:	call   DWORD PTR [eax+eax*2+0x34]
  40b6b0:	imul   eax,DWORD PTR [eax],0x8cff8983
  40b6b6:	fmul   st,st(4)
  40b6b8:	int3   
  40b6b9:	ins    DWORD PTR es:[edi],dx
  40b6ba:	add    BYTE PTR [esi],bh
  40b6bc:	and    DWORD PTR [edi],0xffffffad
  40b6bf:	mov    ecx,0xff003a
  40b6c4:	(bad)  
  40b6c5:	cmp    al,0xc5
  40b6c7:	inc    DWORD PTR [eax]
  40b6c9:	cmp    bh,0x57
  40b6cc:	push   DWORD PTR [edi+0x824d54]
  40b6d2:	inc    DWORD PTR [eax]
  40b6d4:	jmp    FWORD PTR ds:0x46ff89e9
  40b6da:	jmp    eax
  40b6dc:	jmp    DWORD PTR ds:0xffdba223
  40b6e2:	add    BYTE PTR [eax],al
  40b6e4:	add    esp,0xffffff97
  40b6e7:	(bad)  
  40b6e8:	push   DWORD PTR [edi+edi*8]
  40b6eb:	xor    al,BYTE PTR [ebx-0x286c7755]
  40b6f1:	(bad)  
  40b6f2:	(bad)  
  40b6f3:	dec    DWORD PTR [ecx+0xff0664]
  40b6f9:	inc    ecx
  40b6fa:	add    BYTE PTR [ecx+0x389f3e00],bh
  40b700:	ss cmp edi,0x0
  40b704:	mov    DWORD PTR [eax+0x62],esi
  40b707:	add    BYTE PTR [eax],al
  40b709:	sbb    eax,DWORD PTR [ebx-0x535400c1]
  40b70f:	adc    al,0x3a
  40b711:	add    BYTE PTR [ecx-0x1cb20077],cl
  40b717:	add    ah,cl
  40b719:	push   edx
  40b71a:	call   FWORD PTR [ebx-0x1]
  40b71d:	xchg   BYTE PTR [ebx],bh
  40b71f:	lods   al,BYTE PTR ds:[esi]
  40b720:	(bad)  
  40b721:	dec    esp
  40b723:	inc    DWORD PTR [eax]
  40b725:	fcmovnbe st,st(0)
  40b727:	add    bh,bh
  40b729:	retf   
  40b72a:	add    BYTE PTR [edi+edi*8],bl
  40b72d:	out    dx,eax
  40b72e:	and    DWORD PTR [eax],esi
  40b730:	sub    eax,0xff8983ff
  40b735:	ror    BYTE PTR [edx],cl
  40b737:	int3   
  40b738:	add    BYTE PTR [ecx-0x5300e701],cl
  40b73e:	call   DWORD PTR [esi+0x74]
  40b741:	mov    DWORD PTR [eax],eax
  40b743:	add    bh,bh
  40b745:	cmovp  eax,DWORD PTR [eax]
  40b748:	add    dh,al
  40b74a:	dec    eax
  40b74c:	xor    DWORD PTR [ebx+ecx*8],0xffffffa5
  40b750:	(bad)  
  40b751:	(bad)  
  40b752:	inc    DWORD PTR [eax]
  40b754:	int3   
  40b755:	dec    esp
  40b756:	out    dx,al
  40b757:	add    bh,bh
  40b759:	ds sub esp,0xffffffff
  40b75d:	xor    ebx,DWORD PTR [edx+0x13]
  40b760:	and    bh,bh
  40b762:	mov    edi,edi
  40b764:	jmp    DWORD PTR [ecx]
  40b766:	inc    esp
  40b767:	add    BYTE PTR [ebx+0x8aff09],al
  40b76d:	xor    eax,0xffc350ba
  40b772:	or     DWORD PTR [ecx-0x79e600],0x0
  40b779:	sahf   
  40b77a:	dec    edx
  40b77c:	call   FWORD PTR [ecx+edi*1]
  40b77f:	into   
  40b780:	sti    
  40b781:	add    BYTE PTR [ebx+0x53d783cc],al
  40b787:	dec    esp
  40b789:	jg     0x40b78a
  40b78b:	aad    0xff
  40b78d:	mov    edi,0x9ba3a8
  40b792:	inc    DWORD PTR [eax]
  40b794:	jmp    ecx
  40b796:	push   ebp
  40b797:	(bad)  
  40b798:	(bad)  
  40b799:	mov    ebx,0x61cca6ff
  40b79e:	push   0xffffffab
  40b7a0:	mov    ebx,0xffffff00
  40b7a5:	dec    ecx
  40b7a6:	out    0x0,al
  40b7a8:	jmp    DWORD PTR [esi+0x79ff1aff]
  40b7ae:	jge    0x40b822
  40b7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7b1:	mov    edi,edi
  40b7b3:	dec    DWORD PTR [ecx+0x83ebbe]
  40b7b9:	ror    BYTE PTR [ecx+0x6c0e836e],cl
  40b7bf:	test   eax,0xffff8394
  40b7c4:	jmp    DWORD PTR [esi+0x72fffff3]
  40b7ca:	inc    DWORD PTR [edx+0x3d450300]
  40b7d0:	pop    ecx
  40b7d1:	add    DWORD PTR [eax],0xffffff89
  40b7d4:	int3   
  40b7d5:	retf   0xff32
  40b7d8:	int3   
  40b7d9:	xchg   ebp,eax
  40b7da:	add    BYTE PTR [eax+eax*1-0x6d],cl
  40b7de:	loope  0x40b7b8
  40b7e0:	pop    esp
  40b7e1:	cmp    edi,0xffffffff
  40b7e4:	call   DWORD PTR [edi]
  40b7e6:	and    bh,bh
  40b7e8:	call   FWORD PTR [edx]
  40b7ea:	add    dl,dl
  40b7ec:	dec    DWORD PTR [edx]
  40b7ee:	and    DWORD PTR [eax-0xffff1c],ebp
  40b7f4:	jmp    FWORD PTR [edx+0x41]
  40b7f7:	add    bh,bh
  40b7f9:	xor    ecx,DWORD PTR [ecx+0x32280002]
  40b7ff:	sub    BYTE PTR [edi],dl
  40b801:	add    DWORD PTR [eax],0xffffffff
  40b804:	add    BYTE PTR [esi],cl
  40b806:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b807:	add    DWORD PTR [eax],0xffffffa3
  40b80a:	add    BYTE PTR [ebx+eax*4],cl
  40b80d:	(bad)  
  40b80e:	jmp    0x89:0x83fffc2c
  40b815:	jmp    0x40b7a4
  40b817:	inc    DWORD PTR [eax]
  40b819:	in     al,dx
  40b81a:	push   DWORD PTR [ebx+0x0]
  40b81d:	or     ebp,DWORD PTR ds:0x2cec8339
  40b823:	push   esi
  40b824:	mov    esi,DWORD PTR ds:0x44502c
  40b82a:	push   0xf3
  40b82f:	push   0x42
  40b831:	call   esi
  40b833:	push   0x55
  40b835:	push   0x42
  40b837:	mov    DWORD PTR [esp+0xc],eax
  40b83b:	call   esi
  40b83d:	mov    ecx,DWORD PTR ds:0x448d04
  40b843:	mov    edx,DWORD PTR ds:0x448018
  40b849:	push   ebx
  40b84a:	push   ebp
  40b84b:	mov    DWORD PTR [esp+0x10],eax
  40b84f:	add    ecx,0xdbb0
  40b855:	mov    esi,0xc9
  40b85a:	push   edi
  40b85b:	jmp    0x40b860
  40b85d:	lea    ecx,[ecx+0x0]
  40b860:	movzx  eax,BYTE PTR [edx+0x7]
  40b864:	movzx  edi,WORD PTR [edx+0x4]
  40b868:	movzx  edx,BYTE PTR [edx]
  40b86b:	shl    eax,0x10
  40b86e:	add    eax,edi
  40b870:	shl    eax,0x8
  40b873:	add    eax,edx
  40b875:	mov    edx,DWORD PTR ds:0x448d00
  40b87b:	xor    edx,eax
  40b87d:	mov    ds:0x448cf0,eax
  40b882:	xor    edx,0x52928dcf
  40b888:	mov    DWORD PTR [ecx],edx
  40b88a:	mov    edx,DWORD PTR ds:0x448018
  40b890:	add    edx,0x8
  40b893:	mov    DWORD PTR ds:0x448018,edx
  40b899:	movzx  eax,BYTE PTR [edx+0x7]
  40b89d:	movzx  edi,WORD PTR [edx+0x4]
  40b8a1:	movzx  edx,BYTE PTR [edx]
  40b8a4:	shl    eax,0x10
  40b8a7:	add    eax,edi
  40b8a9:	shl    eax,0x8
  40b8ac:	add    eax,edx
  40b8ae:	mov    edx,DWORD PTR ds:0x448d00
  40b8b4:	xor    edx,eax
  40b8b6:	xor    edx,0x52928dcf
  40b8bc:	mov    ds:0x448cf0,eax
  40b8c1:	mov    DWORD PTR [ecx+0x4],edx
  40b8c4:	mov    edx,DWORD PTR ds:0x448018
  40b8ca:	add    edx,0x8
  40b8cd:	mov    DWORD PTR ds:0x448018,edx
  40b8d3:	movzx  eax,BYTE PTR [edx+0x7]
  40b8d7:	movzx  edi,WORD PTR [edx+0x4]
  40b8db:	movzx  edx,BYTE PTR [edx]
  40b8de:	shl    eax,0x10
  40b8e1:	add    eax,edi
  40b8e3:	shl    eax,0x8
  40b8e6:	add    eax,edx
  40b8e8:	mov    edx,DWORD PTR ds:0x448d00
  40b8ee:	xor    edx,eax
  40b8f0:	xor    edx,0x52928dcf
  40b8f6:	mov    ds:0x448cf0,eax
  40b8fb:	mov    DWORD PTR [ecx+0x8],edx
  40b8fe:	mov    edx,DWORD PTR ds:0x448018
  40b904:	add    edx,0x8
  40b907:	add    ecx,0xc
  40b90a:	dec    esi
  40b90b:	mov    DWORD PTR ds:0x448018,edx
  40b911:	jne    0x40b860
  40b917:	mov    esi,DWORD PTR ds:0x448d04
  40b91d:	mov    ebp,DWORD PTR ds:0x445020
  40b923:	mov    eax,ds:0x44801c
  40b928:	add    esi,0xe51c
  40b92e:	mov    edi,0x142
  40b933:	movzx  ecx,BYTE PTR [eax+0x6]
  40b937:	movzx  edx,BYTE PTR [eax+0x4]
  40b93b:	movzx  eax,WORD PTR [eax+0x1]
  40b93f:	shl    ecx,0x8
  40b942:	add    ecx,edx
  40b944:	shl    ecx,0x10
  40b947:	add    ecx,eax
  40b949:	mov    DWORD PTR ds:0x448cf0,ecx
  40b94f:	lea    ecx,[esp+0x18]
  40b953:	push   ecx
  40b954:	call   ebp
  40b956:	mov    edx,0x6949ef3a
  40b95b:	sub    edx,DWORD PTR ds:0x448d00
  40b961:	add    esi,0x4
  40b964:	xor    edx,DWORD PTR ds:0x448cf0
  40b96a:	mov    DWORD PTR [esi-0x4],edx
  40b96d:	mov    eax,ds:0x44801c
  40b972:	add    eax,0x8
  40b975:	dec    edi
  40b976:	mov    ds:0x44801c,eax
  40b97b:	jne    0x40b933
  40b97d:	mov    edx,DWORD PTR ds:0x448d04
  40b983:	mov    ecx,DWORD PTR ds:0x448020
  40b989:	add    edx,0xea24
  40b98f:	mov    esi,0x149
  40b994:	movzx  eax,WORD PTR [ecx+0x5]
  40b998:	movzx  ecx,WORD PTR [ecx+0x2]
  40b99c:	shl    eax,0x10
  40b99f:	add    eax,ecx
  40b9a1:	mov    ecx,0x9b01ca3d
  40b9a6:	sub    ecx,DWORD PTR ds:0x448d00
  40b9ac:	mov    ds:0x448cf0,eax
  40b9b1:	xor    ecx,eax
  40b9b3:	mov    DWORD PTR [edx],ecx
  40b9b5:	mov    ecx,DWORD PTR ds:0x448020
  40b9bb:	add    ecx,0x8
  40b9be:	add    edx,0x4
  40b9c1:	dec    esi
  40b9c2:	mov    DWORD PTR ds:0x448020,ecx
  40b9c8:	jne    0x40b994
  40b9ca:	mov    eax,ds:0x448d04
  40b9cf:	mov    edx,DWORD PTR ds:0x448024
  40b9d5:	add    eax,0xef48
  40b9da:	mov    esi,0x33
  40b9df:	nop
  40b9e0:	movzx  ecx,BYTE PTR [edx+0x7]
  40b9e4:	movzx  edi,WORD PTR [edx+0x5]
  40b9e8:	movzx  edx,BYTE PTR [edx]
  40b9eb:	shl    ecx,0x10
  40b9ee:	add    ecx,edi
  40b9f0:	shl    ecx,0x8
  40b9f3:	add    ecx,edx
  40b9f5:	mov    DWORD PTR ds:0x448cf0,ecx
  40b9fb:	mov    edx,0xd23481c6
  40ba00:	sub    edx,DWORD PTR ds:0x448d00
  40ba06:	xor    edx,ecx
  40ba08:	mov    DWORD PTR [eax],edx
  40ba0a:	mov    edx,DWORD PTR ds:0x448024
  40ba10:	add    edx,0x8
  40ba13:	mov    DWORD PTR ds:0x448024,edx
  40ba19:	movzx  ecx,BYTE PTR [edx+0x7]
  40ba1d:	movzx  edi,WORD PTR [edx+0x5]
  40ba21:	movzx  edx,BYTE PTR [edx]
  40ba24:	shl    ecx,0x10
  40ba27:	add    ecx,edi
  40ba29:	shl    ecx,0x8
  40ba2c:	add    ecx,edx
  40ba2e:	mov    DWORD PTR ds:0x448cf0,ecx
  40ba34:	mov    edx,0xd23481c6
  40ba39:	sub    edx,DWORD PTR ds:0x448d00
  40ba3f:	xor    edx,ecx
  40ba41:	mov    DWORD PTR [eax+0x4],edx
  40ba44:	mov    edx,DWORD PTR ds:0x448024
  40ba4a:	add    edx,0x8
  40ba4d:	mov    DWORD PTR ds:0x448024,edx
  40ba53:	movzx  ecx,BYTE PTR [edx+0x7]
  40ba57:	movzx  edi,WORD PTR [edx+0x5]
  40ba5b:	movzx  edx,BYTE PTR [edx]
  40ba5e:	shl    ecx,0x10
  40ba61:	add    ecx,edi
  40ba63:	shl    ecx,0x8
  40ba66:	add    ecx,edx
  40ba68:	mov    DWORD PTR ds:0x448cf0,ecx
  40ba6e:	mov    edx,0xd23481c6
  40ba73:	sub    edx,DWORD PTR ds:0x448d00
  40ba79:	xor    edx,ecx
  40ba7b:	mov    DWORD PTR [eax+0x8],edx
  40ba7e:	mov    edx,DWORD PTR ds:0x448024
  40ba84:	add    edx,0x8
  40ba87:	mov    DWORD PTR ds:0x448024,edx
  40ba8d:	movzx  ecx,BYTE PTR [edx+0x7]
  40ba91:	movzx  edi,WORD PTR [edx+0x5]
  40ba95:	movzx  edx,BYTE PTR [edx]
  40ba98:	shl    ecx,0x10
  40ba9b:	add    ecx,edi
  40ba9d:	shl    ecx,0x8
  40baa0:	add    ecx,edx
  40baa2:	mov    DWORD PTR ds:0x448cf0,ecx
  40baa8:	mov    edx,0xd23481c6
  40baad:	sub    edx,DWORD PTR ds:0x448d00
  40bab3:	xor    edx,ecx
  40bab5:	mov    DWORD PTR [eax+0xc],edx
  40bab8:	mov    edx,DWORD PTR ds:0x448024
  40babe:	add    edx,0x8
  40bac1:	mov    DWORD PTR ds:0x448024,edx
  40bac7:	movzx  ecx,BYTE PTR [edx+0x7]
  40bacb:	movzx  edi,WORD PTR [edx+0x5]
  40bacf:	movzx  edx,BYTE PTR [edx]
  40bad2:	shl    ecx,0x10
  40bad5:	add    ecx,edi
  40bad7:	shl    ecx,0x8
  40bada:	add    ecx,edx
  40badc:	mov    DWORD PTR ds:0x448cf0,ecx
  40bae2:	mov    edx,0xd23481c6
  40bae7:	sub    edx,DWORD PTR ds:0x448d00
  40baed:	xor    edx,ecx
  40baef:	mov    DWORD PTR [eax+0x10],edx
  40baf2:	mov    edx,DWORD PTR ds:0x448024
  40baf8:	add    edx,0x8
  40bafb:	mov    DWORD PTR ds:0x448024,edx
  40bb01:	movzx  ecx,BYTE PTR [edx+0x7]
  40bb05:	movzx  edi,WORD PTR [edx+0x5]
  40bb09:	movzx  edx,BYTE PTR [edx]
  40bb0c:	shl    ecx,0x10
  40bb0f:	add    ecx,edi
  40bb11:	shl    ecx,0x8
  40bb14:	add    ecx,edx
  40bb16:	mov    edx,0xd23481c6
  40bb1b:	sub    edx,DWORD PTR ds:0x448d00
  40bb21:	mov    DWORD PTR ds:0x448cf0,ecx
  40bb27:	xor    edx,ecx
  40bb29:	mov    DWORD PTR [eax+0x14],edx
  40bb2c:	mov    edx,DWORD PTR ds:0x448024
  40bb32:	add    edx,0x8
  40bb35:	add    eax,0x18
  40bb38:	dec    esi
  40bb39:	mov    DWORD PTR ds:0x448024,edx
  40bb3f:	jne    0x40b9e0
  40bb45:	mov    ecx,DWORD PTR ds:0x448d04
  40bb4b:	mov    edx,DWORD PTR ds:0x448028
  40bb51:	add    ecx,0xf410
  40bb57:	mov    esi,0x6a
  40bb5c:	lea    esp,[esp+0x0]
  40bb60:	movzx  eax,BYTE PTR [edx+0x7]
  40bb64:	movzx  edi,WORD PTR [edx+0x5]
  40bb68:	movzx  edx,BYTE PTR [edx+0x3]
  40bb6c:	shl    eax,0x10
  40bb6f:	add    eax,edi
  40bb71:	shl    eax,0x8
  40bb74:	add    eax,edx
  40bb76:	mov    ds:0x448cf0,eax
  40bb7b:	mov    edx,0xbdb1342c
  40bb80:	sub    edx,DWORD PTR ds:0x448d00
  40bb86:	add    ecx,0x14
  40bb89:	xor    edx,eax
  40bb8b:	mov    DWORD PTR [ecx-0x14],edx
  40bb8e:	mov    edx,DWORD PTR ds:0x448028
  40bb94:	add    edx,0x8
  40bb97:	mov    DWORD PTR ds:0x448028,edx
  40bb9d:	movzx  eax,BYTE PTR [edx+0x7]
  40bba1:	movzx  edi,WORD PTR [edx+0x5]
  40bba5:	movzx  edx,BYTE PTR [edx+0x3]
  40bba9:	shl    eax,0x10
  40bbac:	add    eax,edi
  40bbae:	shl    eax,0x8
  40bbb1:	add    eax,edx
  40bbb3:	mov    ds:0x448cf0,eax
  40bbb8:	mov    edx,0xbdb1342c
  40bbbd:	sub    edx,DWORD PTR ds:0x448d00
  40bbc3:	xor    edx,eax
  40bbc5:	mov    DWORD PTR [ecx-0x10],edx
  40bbc8:	mov    edx,DWORD PTR ds:0x448028
  40bbce:	add    edx,0x8
  40bbd1:	mov    DWORD PTR ds:0x448028,edx
  40bbd7:	movzx  eax,BYTE PTR [edx+0x7]
  40bbdb:	movzx  edi,WORD PTR [edx+0x5]
  40bbdf:	movzx  edx,BYTE PTR [edx+0x3]
  40bbe3:	shl    eax,0x10
  40bbe6:	add    eax,edi
  40bbe8:	shl    eax,0x8
  40bbeb:	add    eax,edx
  40bbed:	mov    ds:0x448cf0,eax
  40bbf2:	mov    edx,0xbdb1342c
  40bbf7:	sub    edx,DWORD PTR ds:0x448d00
  40bbfd:	xor    edx,eax
  40bbff:	mov    DWORD PTR [ecx-0xc],edx
  40bc02:	mov    edx,DWORD PTR ds:0x448028
  40bc08:	add    edx,0x8
  40bc0b:	mov    DWORD PTR ds:0x448028,edx
  40bc11:	movzx  eax,BYTE PTR [edx+0x7]
  40bc15:	movzx  edi,WORD PTR [edx+0x5]
  40bc19:	movzx  edx,BYTE PTR [edx+0x3]
  40bc1d:	shl    eax,0x10
  40bc20:	add    eax,edi
  40bc22:	shl    eax,0x8
  40bc25:	add    eax,edx
  40bc27:	mov    ds:0x448cf0,eax
  40bc2c:	mov    edx,0xbdb1342c
  40bc31:	sub    edx,DWORD PTR ds:0x448d00
  40bc37:	xor    edx,eax
  40bc39:	mov    DWORD PTR [ecx-0x8],edx
  40bc3c:	mov    edx,DWORD PTR ds:0x448028
  40bc42:	add    edx,0x8
  40bc45:	mov    DWORD PTR ds:0x448028,edx
  40bc4b:	movzx  eax,BYTE PTR [edx+0x7]
  40bc4f:	movzx  edi,WORD PTR [edx+0x5]
  40bc53:	movzx  edx,BYTE PTR [edx+0x3]
  40bc57:	shl    eax,0x10
  40bc5a:	add    eax,edi
  40bc5c:	shl    eax,0x8
  40bc5f:	add    eax,edx
  40bc61:	mov    edx,0xbdb1342c
  40bc66:	sub    edx,DWORD PTR ds:0x448d00
  40bc6c:	mov    ds:0x448cf0,eax
  40bc71:	xor    edx,eax
  40bc73:	mov    DWORD PTR [ecx-0x4],edx
  40bc76:	mov    edx,DWORD PTR ds:0x448028
  40bc7c:	add    edx,0x8
  40bc7f:	dec    esi
  40bc80:	mov    DWORD PTR ds:0x448028,edx
  40bc86:	jne    0x40bb60
  40bc8c:	mov    edi,DWORD PTR ds:0x448d04
  40bc92:	mov    esi,DWORD PTR [esp+0x40]
  40bc96:	add    edi,0xfc58
  40bc9c:	add    esi,0x2
  40bc9f:	mov    ebx,0x109
  40bca4:	movzx  eax,BYTE PTR [esi+0x3]
  40bca8:	movzx  ecx,WORD PTR [esi]
  40bcab:	movzx  edx,BYTE PTR [esi-0x2]
  40bcaf:	shl    eax,0x10
  40bcb2:	add    eax,ecx
  40bcb4:	shl    eax,0x8
  40bcb7:	add    eax,edx
  40bcb9:	mov    ds:0x448cf0,eax
  40bcbe:	lea    eax,[esp+0x18]
  40bcc2:	push   eax
  40bcc3:	call   ebp
  40bcc5:	mov    ecx,DWORD PTR ds:0x448d00
  40bccb:	add    ecx,0xb04932d5
  40bcd1:	xor    ecx,DWORD PTR ds:0x448cf0
  40bcd7:	add    edi,0x8
  40bcda:	mov    DWORD PTR [edi-0x8],ecx
  40bcdd:	movzx  eax,WORD PTR [esi+0xc]
  40bce1:	movzx  edx,WORD PTR [esi+0x6]
  40bce5:	shl    eax,0x10
  40bce8:	mov    ecx,0xb05136a1
  40bced:	sub    ecx,DWORD PTR ds:0x448d00
  40bcf3:	add    eax,edx
  40bcf5:	xor    ecx,eax
  40bcf7:	mov    ds:0x448cf0,eax
  40bcfc:	mov    DWORD PTR [edi-0x4],ecx
  40bcff:	add    esi,0x10
  40bd02:	dec    ebx
  40bd03:	jne    0x40bca4
  40bd05:	mov    eax,DWORD PTR [esp+0x10]
  40bd09:	mov    esi,DWORD PTR ds:0x445030
  40bd0f:	pop    edi
  40bd10:	pop    ebp
  40bd11:	pop    ebx
  40bd12:	test   eax,eax
  40bd14:	je     0x40bd19
  40bd16:	push   eax
  40bd17:	call   esi
  40bd19:	mov    eax,DWORD PTR [esp+0x8]
  40bd1d:	test   eax,eax
  40bd1f:	je     0x40bd24
  40bd21:	push   eax
  40bd22:	call   esi
  40bd24:	pop    esi
  40bd25:	add    esp,0x2c
  40bd28:	ret    
  40bd29:	int3   
  40bd2a:	int3   
  40bd2b:	int3   
  40bd2c:	int3   
  40bd2d:	int3   
  40bd2e:	int3   
  40bd2f:	int3   
  40bd30:	add    bh,bh
  40bd32:	icebp  
  40bd33:	das    
  40bd34:	gs call FWORD PTR fs:[esi]
  40bd38:	(bad)  
  40bd39:	inc    DWORD PTR [ebx-0x1f7c0052]
  40bd3f:	pop    ebp
  40bd40:	(bad)  
  40bd41:	push   DWORD PTR [eax]
  40bd43:	and    bh,BYTE PTR [ebx]
  40bd45:	inc    ecx
  40bd46:	(bad)  
  40bd47:	mov    DWORD PTR ds:[ebx+0xcc0900],eax
  40bd4e:	(bad)  
  40bd4f:	dec    ecx
  40bd50:	add    DWORD PTR [eax],0x1f
  40bd53:	inc    eax
  40bd54:	outs   dx,BYTE PTR ds:[esi]
  40bd55:	cmp    bh,bh
  40bd57:	xlat   BYTE PTR ds:[ebx]
  40bd58:	(bad)  
  40bd59:	inc    DWORD PTR [eax]
  40bd5b:	jmp    0x83cc:0x5684ff00
  40bd62:	pop    ebx
  40bd63:	mov    eax,ds:0x1eff1802
  40bd68:	(bad)  
  40bd69:	(bad)  
  40bd6a:	call   FWORD PTR [edi-0x50727c01]
  40bd70:	inc    DWORD PTR [eax]
  40bd72:	out    0xb1,al
  40bd74:	mov    esp,ebp
  40bd76:	add    ah,ch
  40bd78:	add    bh,bh
  40bd7a:	add    ch,dl
  40bd7c:	add    bh,bh
  40bd7e:	std    
  40bd7f:	jno    0x40bd81
  40bd81:	add    BYTE PTR [esi],al
  40bd83:	ret    0x6208
  40bd86:	mov    DWORD PTR [eax+eax*1],edi
  40bd89:	or     DWORD PTR [ecx-0x7c00003a],0xffffffe7
  40bd90:	add    bh,bh
  40bd92:	mov    eax,ds:0xcc40868d
  40bd97:	outs   dx,DWORD PTR ds:[esi]
  40bd98:	(bad)  
  40bd99:	dec    DWORD PTR [ecx-0x2d00ff18]
  40bd9f:	out    0x0,eax
  40bda1:	jmp    FWORD PTR [ebx-0xbec922]
  40bda7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bda8:	add    DWORD PTR [eax],0xffffffff
  40bdab:	rol    DWORD PTR [eax],cl
  40bdad:	add    BYTE PTR [eax-0x66],al
  40bdb0:	(bad)  
  40bdb1:	call   DWORD PTR [edi+ebp*1+0x69ffc393]
  40bdb8:	(bad)  
  40bdb9:	(bad)  
  40bdba:	jmp    DWORD PTR ds:0xf0d9ff00
  40bdc0:	inc    DWORD PTR [eax]
  40bdc2:	jne    0x40be0a
  40bdc4:	mov    al,ds:0xffabffd5
  40bdc9:	cmp    edi,0xffffffc1
  40bdcc:	add    DWORD PTR [ebx-0x7c7cb328],0x43
  40bdd3:	hlt    
  40bdd4:	fs inc esi
  40bdd6:	add    bh,bh
  40bdd8:	add    BYTE PTR [ebx+0xfff989],al
  40bdde:	fwait
  40bddf:	mov    ah,0xff
  40bde1:	jmp    esi
  40bde3:	add    edi,edx
  40bde5:	das    
  40bde6:	int3   
  40bde7:	pop    es
  40bde8:	int3   
  40bde9:	(bad)  
  40bdea:	call   ebp
  40bdec:	inc    DWORD PTR [eax]
  40bdee:	cmovne ecx,DWORD PTR [ecx-0x3b8f4401]
  40bdf5:	loop   0x40bd7a
  40bdf7:	sub    BYTE PTR [ecx-0x33bb0100],cl
  40bdfd:	call   DWORD PTR [ebp+ebx*1-0x1d457c7d]
  40be04:	inc    edx
  40be05:	pop    ebp
  40be06:	inc    ebp
  40be08:	inc    DWORD PTR [eax]
  40be0a:	add    BYTE PTR [ebx+0x1d890000],al
  40be10:	mov    edi,edi
  40be12:	into   
  40be13:	or     eax,0xeb0048c9
  40be18:	add    bh,bh
  40be1a:	add    BYTE PTR [ebp-0x34],bl
  40be1d:	jmp    edi
  40be1f:	fadd   DWORD PTR [ebx-0x498c6800]
  40be25:	mov    ecx,0xccffde89
  40be2a:	mov    ebx,edx
  40be2c:	inc    DWORD PTR [eax]
  40be2e:	jg     0x40bea5
  40be30:	add    ah,cl
  40be32:	(bad)  
  40be34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be35:	fisttp DWORD PTR [ecx-0x7c0053]
  40be3b:	xchg   DWORD PTR [eax],eax
  40be3d:	adc    DWORD PTR [edi+0x33ff00c6],0x61
  40be44:	mov    bh,0xd1
  40be46:	call   FWORD PTR [ebx]
  40be48:	add    BYTE PTR [ebx-0x7c00f434],al
  40be4e:	clc    
  40be4f:	cwde   
  40be50:	add    BYTE PTR [ebx+0x1dcbb16f],al
  40be56:	push   DWORD PTR [edi-0x1]
  40be59:	add    BYTE PTR [eax],al
  40be5b:	loopne 0x40bde0
  40be5d:	add    BYTE PTR [edx-0x1e],dh
  40be60:	add    DWORD PTR [eax],0xb
  40be63:	dec    edi
  40be64:	enter  0x83c3,0x64
  40be68:	add    BYTE PTR [eax],al
  40be6a:	jmp    esp
  40be6c:	int3   
  40be6d:	call   FWORD PTR [eax]
  40be6f:	popf   
  40be70:	(bad)  
  40be71:	jmp    FWORD PTR [edx-0x211720]
  40be77:	stos   BYTE PTR es:[edi],al
  40be78:	add    DWORD PTR [ebx-0x7c002801],0x6b
  40be7f:	jne    0x40be4d
  40be81:	add    BYTE PTR [eax],ah
  40be83:	xchg   edi,eax
  40be84:	mov    esi,0xff180028
  40be89:	add    DWORD PTR [eax],0xfffffff4
  40be8c:	inc    DWORD PTR [ebx+0xff0796]
  40be92:	int    0x5d
  40be94:	xor    DWORD PTR [edx+0xffccff],ecx
  40be9a:	dec    DWORD PTR [ebx]
  40be9c:	add    bh,bh
  40be9e:	inc    esi
  40be9f:	xlat   BYTE PTR ds:[ebx]
  40bea0:	mov    DWORD PTR [ecx+0x61b0db7c],ecx
  40bea6:	push   DWORD PTR [ebx-0x77]
  40bea9:	cmp    edi,0x62
  40beac:	cmp    edi,0xffffffe1
  40beaf:	pop    ecx
  40beb0:	inc    DWORD PTR [eax]
  40beb2:	ret    
  40beb3:	retf   
  40beb4:	jb     0x40be7d
  40beb6:	add    BYTE PTR [edx-0x7d],dh
  40beb9:	add    ah,cl
  40bebb:	jbe    0x40bebd
  40bebd:	add    BYTE PTR [ebx],dl
  40bebf:	test   BYTE PTR [ebx+0x5b7ffff],al
  40bec5:	(bad)  
  40bec6:	inc    esi
  40bec8:	inc    DWORD PTR [ebx-0xe100]
  40bece:	and    eax,0x6300839b
  40bed3:	xor    DWORD PTR [edi-0x43],ebp
  40bed6:	or     DWORD PTR [ebp-0x1],0xffffffff
  40beda:	add    BYTE PTR [edi+edi*8-0x1],cl
  40bede:	jle    0x40befb
  40bee0:	int3   
  40bee1:	(bad)  
  40bee2:	cmp    eax,0xc7cf0
  40bee7:	aaa    
  40bee8:	add    bh,bh
  40beea:	adc    DWORD PTR [eax],0xffffffff
  40beed:	push   DWORD PTR [ecx+0x4affff9b]
  40bef3:	xchg   esp,eax
  40bef4:	ins    DWORD PTR es:[edi],dx
  40bef5:	push   ecx
  40bef6:	sbb    DWORD PTR [eax-0x6007c01],0x0
  40befd:	add    BYTE PTR [edx],al
  40beff:	repnz inc DWORD PTR [eax]
  40bf02:	shl    DWORD PTR [ebx-0x17],0x14
  40bf06:	inc    DWORD PTR [esi+0x0]
  40bf09:	(bad)  
  40bf0a:	call   FWORD PTR [ebx-0x1]
  40bf0d:	add    DWORD PTR [ecx-0x1e00ffaf],0x32
  40bf14:	push   esp
  40bf15:	xor    ecx,esp
  40bf17:	iret   
  40bf18:	mov    DWORD PTR [eax],eax
  40bf1a:	add    BYTE PTR [edi+0x3f0ff00],al
  40bf20:	inc    DWORD PTR [eax]
  40bf22:	xchg   ebp,eax
  40bf23:	mov    ds:0xdd83fa61,al
  40bf28:	(bad)  
  40bf29:	dec    DWORD PTR [ecx-0x74000088]
  40bf2f:	das    
  40bf30:	add    BYTE PTR [ecx-0x6677de8e],cl
  40bf36:	(bad)  
  40bf37:	(bad)  
  40bf39:	inc    DWORD PTR [eax]
  40bf3b:	inc    edi
  40bf3c:	int3   
  40bf3d:	add    BYTE PTR [edi],bh
  40bf3f:	push   esi
  40bf40:	inc    DWORD PTR [eax]
  40bf42:	pop    edi
  40bf43:	outs   dx,BYTE PTR ds:[esi]
  40bf44:	sbb    al,0xcf
  40bf46:	mov    DWORD PTR [esi-0x7d],edx
  40bf49:	int3   
  40bf4a:	(bad)  
  40bf4b:	inc    DWORD PTR [ebx-0x6f9a01]
  40bf51:	and    DWORD PTR [ecx-0x4f],0x6
  40bf55:	xor    cx,0xffff
  40bf59:	(bad)  
  40bf5a:	(bad)  
  40bf5b:	out    dx,al
  40bf5c:	add    bh,bh
  40bf5e:	fiadd  DWORD PTR fs:[ebx-0x7b542e00]
  40bf65:	retf   
  40bf66:	add    BYTE PTR [ecx],bl
  40bf68:	cmp    edi,0x0
  40bf6b:	push   cs
  40bf6c:	inc    DWORD PTR [eax]
  40bf6e:	push   edi
  40bf6f:	push   edx
  40bf70:	or     DWORD PTR [ecx-0x48a43cb8],0xffffff83
  40bf77:	push   ebx
  40bf78:	(bad)  
  40bf79:	inc    DWORD PTR [eax]
  40bf7b:	fiadd  WORD PTR [ebx-0x33b2bc01]
  40bf81:	push   DWORD PTR [eax-0x37]
  40bf84:	stos   BYTE PTR es:[edi],al
  40bf85:	js     0x40bf86
  40bf87:	hlt    
  40bf88:	add    BYTE PTR [eax],al
  40bf8a:	add    BYTE PTR [ebx-0x787d00],ah
  40bf90:	add    bh,bh
  40bf92:	push   esp
  40bf93:	and    DWORD PTR [edi],ebx
  40bf95:	mov    esi,0xff007cff
  40bf9a:	add    BYTE PTR [esi],dl
  40bf9c:	(bad)  
  40bf9d:	dec    DWORD PTR [edx+edx*4]
  40bfa0:	add    BYTE PTR [eax],al
  40bfa2:	push   esi
  40bfa3:	int3   
  40bfa4:	jmp    0xff:0xfff3ff1a
  40bfab:	jmp    0x89cc:0xf3cc0000
  40bfb2:	add    BYTE PTR [ebx+0x5d],dl
  40bfb5:	mov    al,ds:0x838924cc
  40bfba:	add    BYTE PTR [edx+0x0],al
  40bfbd:	add    BYTE PTR [ecx+edx*8+0x0],dh
  40bfc1:	add    BYTE PTR [edx+0x52],ch
  40bfc4:	shr    esp,0x83
  40bfc7:	scas   al,BYTE PTR es:[edi]
  40bfc8:	(bad)  
  40bfc9:	inc    DWORD PTR [eax]
  40bfcb:	xchg   DWORD PTR [eax],eax
  40bfcd:	mov    eax,eax
  40bfcf:	push   0x95c9ffff
  40bfd4:	sar    BYTE PTR [eax],0xff
  40bfd7:	pop    ecx
  40bfd8:	mov    esp,ecx
  40bfda:	int3   
  40bfdb:	push   ds
  40bfdc:	add    bh,bh
  40bfde:	fdivr  DWORD PTR [ecx-0x1]
  40bfe1:	mov    DWORD PTR [eax],ebp
  40bfe3:	and    al,0x7c
  40bfe5:	retf   0x3583
  40bfe8:	inc    DWORD PTR [eax]
  40bfea:	add    BYTE PTR [ebp+0x724bffff],ch
  40bff0:	cmp    edi,0x56
  40bff3:	ret    
  40bff4:	mov    eax,0xff75ff15
  40bff9:	(bad)  
  40bffa:	call   FWORD PTR [eax]
  40bffc:	int3   
  40bffd:	add    BYTE PTR [edx-0x5900fff7],bl
  40c003:	mov    ds:0xf300bb2c,al
  40c008:	add    BYTE PTR [ebx-0x7c7c8701],al
  40c00e:	jle    0x40bf9a
  40c010:	inc    DWORD PTR [ebx-0x235376f8]
  40c016:	add    BYTE PTR ds:0x1000ff89,bl
  40c01c:	inc    DWORD PTR [eax]
  40c01e:	retf   0x1f
  40c021:	add    BYTE PTR [ebp+0x74421d],bl
  40c027:	push   esi
  40c028:	inc    DWORD PTR [ebx-0x7cffd200]
  40c02e:	aad    0x52
  40c030:	add    bh,bh
  40c032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c033:	dec    eax
  40c034:	loop   0x40c087
  40c036:	mov    DWORD PTR [edx-0x12337c01],edx
  40c03c:	add    BYTE PTR [ecx+0xffee07],cl
  40c042:	lods   eax,DWORD PTR ss:[esi]
  40c044:	pop    esp
  40c045:	test   bh,bh
  40c047:	fwait
  40c048:	(bad)  
  40c049:	(bad)  
  40c04a:	call   ebp
  40c04c:	add    BYTE PTR [ecx-0x7c8bfe],cl
  40c052:	int3   
  40c053:	push   ebp
  40c054:	lds    ecx,FWORD PTR [edi+0x70ff]
  40c05a:	add    BYTE PTR [ebp-0x1],al
  40c05d:	add    BYTE PTR [esi],ch
  40c05f:	cmp    BYTE PTR [ebx+0x7f97faff],al
  40c065:	fdiv   st(7),st
  40c067:	clc    
  40c068:	add    DWORD PTR [eax],0xffffffff
  40c06b:	jg     0x40c06d
  40c06d:	push   DWORD PTR [ecx-0xb]
  40c070:	inc    DWORD PTR [ebx+0x74acf1e8]
  40c076:	int3   
  40c077:	rol    BYTE PTR [eax],cl
  40c079:	cmp    edi,0xffffff9a
  40c07c:	add    bh,bh
  40c07e:	jne    0x40c079
  40c080:	inc    DWORD PTR [eax]
  40c082:	(bad)  
  40c083:	hlt    
  40c084:	outs   dx,BYTE PTR ds:[esi]
  40c085:	xor    bh,bh
  40c087:	inc    esi
  40c088:	(bad)  
  40c089:	(bad)  
  40c08a:	(bad)  
  40c08b:	std    
  40c08c:	add    bh,bh
  40c08e:	(bad)  
  40c091:	inc    DWORD PTR [esi-0x7f]
  40c094:	mov    dl,0xff
  40c097:	xor    bh,bh
  40c099:	add    BYTE PTR [eax],al
  40c09b:	cdq    
  40c09c:	(bad)  
  40c09d:	inc    DWORD PTR ds:0xb7ff8383
  40c0a3:	mov    ebx,0x86002d2f
  40c0a8:	add    bh,bh
  40c0aa:	add    BYTE PTR [eax+0x3dbaffff],dh
  40c0b0:	add    BYTE PTR [eax],al
  40c0b2:	sbb    al,BYTE PTR [esi]
  40c0b4:	ja     0x40c0fa
  40c0b6:	jmp    FWORD PTR [ebp+0x5f000083]
  40c0bc:	(bad)  
  40c0bd:	call   DWORD PTR [ecx-0x46007c78]
  40c0c3:	lods   al,BYTE PTR ds:[esi]
  40c0c4:	add    BYTE PTR [eax-0x3333d801],0xff
  40c0cb:	cmp    al,BYTE PTR [eax]
  40c0cd:	int3   
  40c0ce:	and    DWORD PTR [ebx-0x1],edi
  40c0d1:	adc    esp,0xffffffad
  40c0d4:	ret    
  40c0d5:	push   0x83ffc7ff
  40c0da:	inc    DWORD PTR [ebx-0x7d]
  40c0dd:	add    BYTE PTR [edi-0x22],ah
  40c0e0:	inc    DWORD PTR [ebx+0x7a9b4917]
  40c0e6:	call   DWORD PTR [edi-0x7d]
  40c0e9:	add    bh,bh
  40c0eb:	cmp    bh,bh
  40c0ed:	add    BYTE PTR [ecx],dh
  40c0ef:	dec    ecx
  40c0f0:	(bad)  
  40c0f1:	push   DWORD PTR ds:0x839891c7
  40c0f7:	xchg   ecx,eax
  40c0f8:	cmp    edi,0xffffffcc
  40c0fb:	and    BYTE PTR [eax],al
  40c0fd:	call   edi
  40c0ff:	dec    ebp
  40c100:	(bad)  
  40c101:	jmp    FWORD PTR ds:0xffcf8035
  40c107:	dec    edx
  40c108:	add    BYTE PTR [ebx-0x76ffd900],al
  40c10e:	mov    eax,ds:0x1c00cc6c
  40c113:	add    BYTE PTR [ebx+0xde009f],ah
  40c119:	int3   
  40c11a:	push   DWORD PTR [ecx-0x1]
  40c11d:	add    BYTE PTR [ebx+0x3f],cl
  40c120:	inc    DWORD PTR [eax]
  40c122:	in     al,dx
  40c123:	aam    0x34
  40c125:	jo     0x40c126
  40c127:	mov    edx,0xbffff00
  40c12c:	add    DWORD PTR [eax],0xffffffa8
  40c12f:	int    0x0
  40c131:	int3   
  40c132:	sub    al,0x50
  40c134:	mov    ?,WORD PTR [edi+edi*8+0xffff71]
  40c13b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c13c:	int3   
  40c13d:	dec    DWORD PTR [esi*8-0x60020001]
  40c144:	dec    ecx
  40c145:	jl     0x40c0d0
  40c147:	cs add bh,bh
  40c14a:	call   FWORD PTR [edi]
  40c14c:	(bad)  
  40c14d:	(bad)  
  40c14e:	std    
  40c14f:	add    BYTE PTR gs:[eax],al
  40c152:	fadd   QWORD PTR [ecx-0x28]
  40c155:	jnp    0x40c157
  40c157:	sub    edi,edi
  40c159:	(bad)  
  40c15a:	call   DWORD PTR [esi+0x3392ff00]
  40c160:	add    BYTE PTR [eax],al
  40c162:	sbb    BYTE PTR [eax+esi*2-0xd676ab],0x0
  40c16a:	add    bl,dh
  40c16c:	inc    DWORD PTR [eax]
  40c16e:	ds cmp edi,0x0
  40c172:	jecxz  0x40c1bf
  40c174:	gs dec edx
  40c176:	or     DWORD PTR [edi+edi*8+0x0],0xffffff83
  40c17b:	add    BYTE PTR [ebx+0x1c8b89],0x0
  40c182:	fld    QWORD PTR [ecx]
  40c184:	test   eax,0xdfff4c
  40c189:	inc    DWORD PTR [eax]
  40c18b:	push   cs
  40c18c:	(bad)  
  40c18d:	call   DWORD PTR [ecx+0x56]
  40c190:	(bad)  
  40c191:	(bad)  
  40c192:	cmp    cl,BYTE PTR [eax+0x1100171a]
  40c198:	inc    DWORD PTR [ebx+0xff80ff]
  40c19e:	aaa    
  40c19f:	xchg   ebp,eax
  40c1a0:	inc    DWORD PTR [eax]
  40c1a2:	not    dl
  40c1a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1a5:	push   cs
  40c1a6:	xor    DWORD PTR ds:0x4eff8383,0xffffffff
  40c1ad:	jmp    DWORD PTR [ebx-0xd]
  40c1b0:	inc    DWORD PTR [eax]
  40c1b2:	add    esi,DWORD PTR [edi+0x2c]
  40c1b5:	arpl   di,di
  40c1b7:	jmp    0x40c13c
  40c1b9:	add    BYTE PTR [eax],al
  40c1bb:	mov    esp,0x5d5aff83
  40c1c0:	or     esp,0x4a
  40c1c3:	mov    ds:0xbeff23c5,al
  40c1c8:	inc    DWORD PTR [ebx-0x9b7d]
  40c1ce:	add    DWORD PTR [edi+0x0],ecx
  40c1d1:	int3   
  40c1d2:	in     al,dx
  40c1d3:	(bad)  
  40c1d4:	ss pusha 
  40c1d6:	(bad)  
  40c1d7:	cmp    eax,DWORD PTR [eax]
  40c1d9:	int3   
  40c1da:	jmp    eax
  40c1dc:	inc    DWORD PTR [eax]
  40c1de:	iret   
  40c1df:	push   0xba3ff00
  40c1e4:	ja     0x40c16f
  40c1e6:	sbb    DWORD PTR [edx],0xffffffcc
  40c1e9:	cmp    edi,0xffffffde
  40c1ec:	add    ah,cl
  40c1ee:	add    eax,0x63000046
  40c1f3:	mov    bh,0x45
  40c1f5:	cmp    BYTE PTR [eax],al
  40c1f7:	gs add ah,cl
  40c1fa:	call   ecx
  40c1fc:	(bad)  
  40c1fd:	dec    ebx
  40c1ff:	ror    DWORD PTR [ecx-0x6a684f00],cl
  40c205:	mov    bl,0x0
  40c207:	ds (bad) 
  40c209:	(bad)  
  40c20a:	inc    DWORD PTR ds:0x2b9983ff
  40c210:	inc    DWORD PTR [ebx+0x62cba19b]
  40c216:	sbb    DWORD PTR [edx],0xffffff89
  40c219:	add    BYTE PTR [eax],al
  40c21b:	jns    0x40c21c
  40c21d:	add    BYTE PTR [esi+0x6bffff08],dh
  40c223:	popf   
  40c224:	dec    ecx
  40c225:	mov    bh,0x0
  40c227:	(bad)  
  40c228:	dec    DWORD PTR [ecx-0x7c001001]
  40c22e:	xor    edx,DWORD PTR [ebx+0x18bd83ff]
  40c234:	pop    edx
  40c235:	jmp    0xff40f03a
  40c23a:	push   DWORD PTR [edi+edi*8-0x7c069a7d]
  40c241:	adc    DWORD PTR [ebx-0x8c538d],0xffffffa3
  40c248:	add    BYTE PTR [ecx+0x89a183],cl
  40c24e:	arpl   WORD PTR [ebx],di
  40c250:	mov    edi,edi
  40c252:	dec    ebx
  40c253:	cmp    BYTE PTR [esi],cl
  40c255:	sub    bh,bh
  40c257:	std    
  40c258:	add    BYTE PTR [eax],al
  40c25a:	add    BYTE PTR [ebp-0x217a0000],bl
  40c260:	cmp    edi,0x32
  40c263:	sar    dl,cl
  40c265:	popf   
  40c266:	push   DWORD PTR [esi-0x34]
  40c269:	add    BYTE PTR [ebx-0x2800ff5a],al
  40c26f:	adc    eax,DWORD PTR [eax]
  40c271:	add    BYTE PTR [eax-0x6e],cl
  40c274:	int3   
  40c275:	jno    0x40c277
  40c277:	sahf   
  40c278:	(bad)  
  40c279:	dec    DWORD PTR [ecx-0x6c7c00d3]
  40c27f:	inc    DWORD PTR ss:[eax]
  40c282:	mov    bh,0x68
  40c284:	scas   eax,DWORD PTR es:[edi]
  40c285:	mov    eax,0xff00daff
  40c28a:	int3   
  40c28b:	cmp    edi,0x6ce6ff
  40c291:	jmp    FWORD PTR [esi-0x6]
  40c294:	and    DWORD PTR [edx],edi
  40c296:	add    BYTE PTR [ebx+0x19ffff00],bh
  40c29c:	inc    DWORD PTR [eax]
  40c29e:	js     0x20f04627
  40c2a4:	bound  edx,QWORD PTR [edi]
  40c2a6:	push   DWORD PTR [eax+0x0]
  40c2a9:	add    bh,bh
  40c2ab:	popa   
  40c2ac:	inc    DWORD PTR [eax]
  40c2ae:	dec    edi
  40c2af:	mov    es,WORD PTR [eax]
  40c2b1:	call   FWORD PTR [edx+0xd23191]
  40c2b7:	in     al,0xff
  40c2b9:	inc    DWORD PTR [eax]
  40c2bb:	stos   DWORD PTR es:[edi],eax
  40c2bc:	(bad)  
  40c2bd:	inc    DWORD PTR [ecx-0x3a]
  40c2c0:	dec    DWORD PTR [ecx-0x792d4360]
  40c2c6:	adc    DWORD PTR [ebx],0xffffffff
  40c2c9:	inc    DWORD PTR [eax]
  40c2cb:	aad    0xff
  40c2cd:	mov    DWORD PTR [edi+0xb],esi
  40c2d0:	add    BYTE PTR [eax],al
  40c2d2:	push   0xffb47cb8
  40c2d7:	sar    bh,cl
  40c2d9:	int3   
  40c2da:	inc    edi
  40c2dc:	dec    esp
  40c2de:	xor    eax,0x848300f4
  40c2e3:	(bad)  
  40c2e4:	cmc    
  40c2e5:	add    BYTE PTR ss:0xa7ffffcc,dh
  40c2ec:	mov    DWORD PTR [eax],eax
  40c2ee:	je     0x40c33b
  40c2f0:	cmp    edi,0x46
  40c2f3:	mov    dl,dl
  40c2f5:	(bad)  
  40c2f7:	mov    ch,0xff
  40c2f9:	dec    esp
  40c2fb:	dec    esp
  40c2fc:	add    bh,bh
  40c2fe:	and    dl,al
  40c300:	inc    DWORD PTR [eax]
  40c302:	cs mov dh,0xcb
  40c305:	cmp    edi,0xffffff9a
  40c308:	(bad)  
  40c309:	dec    esp
  40c30b:	and    esp,ecx
  40c30d:	int3   
  40c30e:	test   eax,0xb4ff8352
  40c313:	cld    
  40c314:	loopne 0x40c2af
  40c316:	or     DWORD PTR [edi+edi*8+0x0],0x0
  40c31b:	outs   dx,DWORD PTR ds:[esi]
  40c31c:	(bad)  
  40c31d:	jmp    ebx
  40c31f:	pop    ecx
  40c320:	add    DWORD PTR [eax],0xffffffb1
  40c323:	mov    dh,BYTE PTR [edx]
  40c325:	out    dx,al
  40c326:	add    BYTE PTR [eax-0x457c337d],ah
  40c32c:	or     esp,0xffffff8a
  40c32f:	mov    cl,0x83
  40c331:	add    BYTE PTR [edx-0x67],bh
  40c334:	int3   
  40c335:	adc    eax,0xffff44ff
  40c33a:	dec    DWORD PTR [esi]
  40c33c:	(bad)  
  40c33d:	push   ebp
  40c33f:	(bad)  
  40c340:	dec    DWORD PTR [ecx+0x6cb68c15]
  40c346:	add    BYTE PTR [ebx],dl
  40c348:	mov    DWORD PTR [eax],eax
  40c34a:	call   FWORD PTR [edi-0x1]
  40c34d:	add    BYTE PTR [ebx],dl
  40c34f:	push   edi
  40c350:	add    bh,bh
  40c352:	mov    eax,0xdd711d
  40c357:	test   DWORD PTR [eax],0x834bffcc
  40c35d:	add    ebp,0xffffffe1
  40c360:	add    bh,bh
  40c362:	xor    eax,0xff5570a2
  40c367:	(bad)  
  40c369:	inc    DWORD PTR [eax]
  40c36b:	daa    
  40c36c:	add    bh,bh
  40c36e:	jmp    0x509c:0xb6ffff6b
  40c375:	dec    esi
  40c376:	mov    edx,edx
  40c378:	inc    DWORD PTR [ebx-0x5b01]
  40c37e:	jp     0x40c34a
  40c380:	add    bh,bh
  40c382:	xchg   edi,eax
  40c383:	sbb    ah,bl
  40c385:	iret   
  40c386:	add    BYTE PTR [esi-0x1],dl
  40c389:	inc    DWORD PTR [eax]
  40c38b:	mov    edi,0x7d2ffff
  40c390:	add    BYTE PTR [eax],al
  40c392:	mov    ebx,0xff66e605
  40c397:	ror    ah,0x83
  40c39a:	add    BYTE PTR [ebp+0x563ff83],ah
  40c3a0:	add    bh,bh
  40c3a2:	popf   
  40c3a3:	pop    esi
  40c3a4:	mov    BYTE PTR ds:0xff005400,bl
  40c3aa:	call   DWORD PTR [ebp+0x567100ff]
  40c3b0:	mov    edi,edi
  40c3b2:	jp     0x40c40e
  40c3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3b5:	into   
  40c3b6:	add    BYTE PTR [ebp-0x1],cl
  40c3b9:	add    DWORD PTR [eax],0x15
  40c3bc:	inc    DWORD PTR [ebx+0x83a43c]
  40c3c2:	loope  0x40c422
  40c3c4:	out    0xb0,al
  40c3c6:	add    bl,ch
  40c3c8:	inc    DWORD PTR [eax]
  40c3ca:	cmp    DWORD PTR [ebx],0xffffffff
  40c3cd:	dec    DWORD PTR [ebp+0x70]
  40c3d0:	add    ah,cl
  40c3d2:	(bad)  
  40c3d3:	sti    
  40c3d4:	popa   
  40c3d5:	sti    
  40c3d6:	jmp    DWORD PTR [edx]
  40c3d8:	mov    edi,edi
  40c3da:	(bad)  
  40c3db:	mov    ebp,0x2457ffff
  40c3e0:	add    BYTE PTR [eax],al
  40c3e2:	les    esi,FWORD PTR [esi]
  40c3e4:	cmp    edx,DWORD PTR [eax]
  40c3e6:	add    BYTE PTR [eax+0x3affff00],al
  40c3ec:	add    BYTE PTR [ebx+0x6c4f],al
  40c3f2:	sbb    bh,bl
  40c3f4:	iret   
  40c3f5:	popa   
  40c3f6:	add    BYTE PTR [eax-0x1],cl
  40c3f9:	(bad)  
  40c3fa:	dec    DWORD PTR [esi]
  40c3fc:	add    BYTE PTR [eax],al
  40c3fe:	test   DWORD PTR [ebx-0x41a60100],eax
  40c404:	mov    bl,0x22
  40c406:	add    BYTE PTR [ecx+0x4effffff],dl
  40c40c:	add    bh,bh
  40c40e:	jae    0x40c408
  40c410:	(bad)  
  40c411:	inc    DWORD PTR [ecx]
  40c413:	mov    ebx,0xee001ce0
  40c418:	add    bh,bh
  40c41a:	add    BYTE PTR [edi+edi*8],cl
  40c41d:	add    BYTE PTR [edx-0x5ff7641],dl
  40c423:	stos   BYTE PTR es:[edi],al
  40c424:	cs jmp 0xff40fa2a
  40c42a:	add    ch,ah
  40c42c:	add    bh,bh
  40c42e:	ins    DWORD PTR es:[edi],dx
  40c42f:	ins    DWORD PTR es:[edi],dx
  40c430:	add    ah,cl
  40c432:	mov    cl,0xfb
  40c434:	inc    eax
  40c435:	or     edi,edi
  40c437:	xor    eax,0xe4ffff00
  40c43c:	add    BYTE PTR [ecx-0xff4da2],cl
  40c442:	shl    bl,0xe9
  40c445:	arpl   WORD PTR [ebx-0xac],ax
  40c44b:	dec    edi
  40c44c:	add    BYTE PTR [eax],al
  40c44e:	sub    al,bl
  40c450:	inc    DWORD PTR [eax]
  40c452:	xchg   esp,eax
  40c453:	inc    eax
  40c454:	pop    esp
  40c455:	inc    esp
  40c456:	jmp    DWORD PTR [ebx]
  40c458:	mov    DWORD PTR [eax],eax
  40c45a:	(bad)  
  40c45b:	clc    
  40c45c:	(bad)  
  40c45d:	call   FWORD PTR [ebp+0x37ff0012]
  40c463:	inc    esp
  40c464:	stos   BYTE PTR es:[edi],al
  40c465:	das    
  40c466:	add    BYTE PTR [ecx-0x1],ah
  40c469:	inc    DWORD PTR [eax]
  40c46b:	push   cs
  40c46c:	(bad)  
  40c46d:	(bad)  
  40c46e:	fxch   st(0)
  40c470:	add    bh,bh
  40c472:	xor    eax,0x79bdd4
  40c477:	xchg   DWORD PTR [eax],eax
  40c479:	add    bh,bh
  40c47b:	mov    ds:0x4d1c89ff,al
  40c480:	inc    DWORD PTR [ebx+0x61f6eaa5]
  40c486:	add    ch,dh
  40c488:	int3   
  40c489:	(bad)  
  40c48a:	(bad)  
  40c48b:	cmp    DWORD PTR [eax],eax
  40c48d:	add    BYTE PTR [esi-0x1900ffeb],bl
  40c493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c494:	sub    ch,BYTE PTR [esi]
  40c496:	mov    DWORD PTR [ebx+0xfff0083],edx
  40c49c:	cmp    edi,0xffffff9d
  40c49f:	lods   eax,DWORD PTR ds:[esi]
  40c4a0:	(bad)  
  40c4a1:	call   FWORD PTR ds:0xbefffe
  40c4a7:	ja     0x40c4a8
  40c4a9:	inc    DWORD PTR [eax]
  40c4ab:	adc    al,BYTE PTR [ebx-0x31e67d]
  40c4b1:	jmp    FWORD PTR [esi]
  40c4b3:	dec    edx
  40c4b4:	into   
  40c4b5:	mov    DWORD PTR [eax],eax
  40c4b7:	or     eax,0x17000083
  40c4bc:	cmp    edi,0x4c
  40c4bf:	pop    ebx
  40c4c0:	add    BYTE PTR [eax],al
  40c4c2:	jecxz  0x40c47b
  40c4c4:	aad    0x3c
  40c4c6:	add    BYTE PTR [edi+edi*8],ch
  40c4c9:	(bad)  
  40c4ca:	jmp    FWORD PTR [eax-0x65640001]
  40c4d0:	or     DWORD PTR [ecx-0x5ff9388d],0x0
  40c4d7:	jp     0x40c4d8
  40c4d9:	cmp    edi,0xffffff83
  40c4dc:	(bad)  
  40c4dd:	inc    DWORD PTR [ebp+eax*2-0x5c307d00]
  40c4e4:	ja     0x40c546
  40c4e6:	call   FWORD PTR [edx+0x0]
  40c4e9:	add    DWORD PTR [eax],0xffffffa0
  40c4ec:	int3   
  40c4ed:	int3   
  40c4ee:	out    dx,eax
  40c4ef:	mov    bl,0x83
  40c4f1:	add    BYTE PTR [ebp-0x76dea525],cl
  40c4f7:	je     0x40c4f8
  40c4f9:	(bad)  
  40c4fa:	dec    DWORD PTR [ebx+0x6d13ff89]
  40c500:	add    bh,bh
  40c502:	call   0xcc47:0xba95cb
  40c509:	add    BYTE PTR [eax],al
  40c50b:	sar    edi,1
  40c50d:	int3   
  40c50e:	mov    dl,0x1c
  40c510:	add    bh,bh
  40c512:	jo     0x40c4cc
  40c514:	add    edx,DWORD PTR [eax]
  40c516:	(bad)  
  40c517:	jp     0x40c49c
  40c519:	mov    DWORD PTR [ebx-0x62ff00b8],eax
  40c51f:	xor    edi,edi
  40c521:	add    BYTE PTR [edx+0x74],cl
  40c524:	popf   
  40c525:	jo     0x40c526
  40c527:	inc    ebp
  40c528:	add    bh,bh
  40c52a:	call   FWORD PTR [ebp-0x1]
  40c52d:	or     DWORD PTR [edi],0xfffffff5
  40c530:	int3   
  40c531:	add    BYTE PTR [ecx-0x49],bl
  40c534:	sbb    al,0xd2
  40c536:	add    dl,cl
  40c538:	add    BYTE PTR [eax],al
  40c53a:	jmp    DWORD PTR [ebx-0x1]
  40c53d:	add    BYTE PTR [edx-0x70],ah
  40c540:	add    BYTE PTR [ebx+0x64b92730],al
  40c546:	int3   
  40c547:	fdivr  st,st(7)
  40c549:	inc    DWORD PTR [eax]
  40c54b:	retf   
  40c54c:	add    ah,cl
  40c54e:	mov    ah,dl
  40c550:	(bad)  
  40c551:	dec    DWORD PTR [edx+0x466507]
  40c557:	pop    eax
  40c558:	mov    DWORD PTR [eax],eax
  40c55a:	add    BYTE PTR [ebp-0x71af7c77],ah
  40c560:	(bad)  
  40c561:	inc    DWORD PTR [ebp-0x49]
  40c564:	inc    ecx
  40c565:	ret    0x26ff
  40c568:	add    bh,bh
  40c56a:	sub    DWORD PTR [esi],0x0
  40c56d:	jmp    FWORD PTR [ecx]
  40c56f:	push   0xffffffcc
  40c571:	add    BYTE PTR [edi-0x41bf23],cl
  40c577:	into   
  40c578:	(bad)  
  40c579:	(bad)  
  40c57a:	dec    ecx
  40c57c:	add    DWORD PTR [eax],0x7f
  40c57f:	and    al,BYTE PTR [eax]
  40c581:	sub    edx,0xfffffff3
  40c584:	pusha  
  40c585:	xchg   DWORD PTR [eax],eax
  40c587:	mov    dh,0xff
  40c589:	inc    DWORD PTR [eax]
  40c58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c58c:	cmp    edi,0x2
  40c58f:	pop    esi
  40c590:	(bad)  
  40c591:	inc    DWORD PTR [edx-0x7c4dfd14]
  40c597:	cld    
  40c598:	add    DWORD PTR [ebx-0x3f7d],0x59
  40c59f:	iret   
  40c5a0:	add    bh,bh
  40c5a2:	(bad)  
  40c5a4:	fs popa 
  40c5a6:	add    cl,dh
  40c5a8:	add    BYTE PTR [ebx+0xff3700],al
  40c5ae:	push   sp
  40c5b0:	(bad)  
  40c5b1:	(bad)  
  40c5b2:	clc    
  40c5b3:	fdiv   st(4),st
  40c5b5:	lahf   
  40c5b6:	(bad)  
  40c5b7:	jle    0x40c5b9
  40c5b9:	add    BYTE PTR [eax],al
  40c5bb:	scas   eax,DWORD PTR es:[edi]
  40c5bc:	add    bh,bh
  40c5be:	cmp    ebx,DWORD PTR [ebx+0x24d200ff]
  40c5c4:	rcl    DWORD PTR [ebp-0x34],0x2d
  40c5c8:	dec    esp
  40c5ca:	int3   
  40c5cb:	ss (bad) 
  40c5cd:	(bad)  
  40c5ce:	add    BYTE PTR ds:[ebx-0x6bca7001],0x5b
  40c5d6:	jmp    DWORD PTR [esi+0x46ffffff]
  40c5dc:	add    BYTE PTR [eax],al
  40c5de:	test   dh,0xff
  40c5e1:	cmp    DWORD PTR [edi-0x33fed872],0x54
  40c5e8:	add    BYTE PTR [eax],al
  40c5ea:	add    BYTE PTR [eax],ch
  40c5ec:	(bad)  
  40c5ed:	jmp    FWORD PTR [ebx]
  40c5ef:	mov    ch,0xcc
  40c5f1:	add    DWORD PTR ds:0x8cf1e2,0x50
  40c5f8:	add    DWORD PTR [eax],0x0
  40c5fb:	and    eax,0x39a10000
  40c600:	(bad)  
  40c601:	(bad)  
  40c602:	fild   WORD PTR [esi-0x52767448]
  40c608:	(bad)  
  40c609:	inc    DWORD PTR [eax]
  40c60b:	ss (bad) 
  40c60d:	dec    DWORD PTR [ebp+0x2700ffa3]
  40c613:	mov    ebx,0x29ff3641
  40c618:	add    bh,bh
  40c61a:	int3   
  40c61b:	cmp    BYTE PTR [ebx+0xb30100],al
  40c621:	cmp    DWORD PTR [ebx+0x77],0xffffff9e
  40c625:	sti    
  40c626:	add    BYTE PTR ds:0x4c000000,al
  40c62c:	cmp    edi,0x46
  40c62f:	inc    edi
  40c630:	add    ah,cl
  40c632:	jnp    0x40c66c
  40c634:	jne    0x40c5ff
  40c636:	add    BYTE PTR [edi+edi*8-0x7cd2ff34],cl
  40c63d:	sbb    DWORD PTR [eax+0x3b],0xffffffff
  40c641:	add    bh,bh
  40c643:	xchg   edi,eax
  40c644:	out    0xa2,eax
  40c646:	sub    DWORD PTR ds:0xf100ffff,0xffffffcc
  40c64d:	add    BYTE PTR [ebx-0x4c],al
  40c650:	(bad)  
  40c651:	inc    DWORD PTR [ebx+0xff2f07]
  40c657:	add    eax,DWORD PTR [eax]
  40c659:	or     DWORD PTR [ecx+0xe89ffdf],0xffffffc4
  40c660:	inc    DWORD PTR [eax]
  40c662:	mov    eax,ds:0xc9e5b5
  40c667:	and    al,BYTE PTR [eax]
  40c669:	add    bh,bh
  40c66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66c:	int3   
  40c66d:	sbb    DWORD PTR [esi],0xfffffffc
  40c670:	cmp    edi,0x71
  40c673:	retf   0x5896
  40c676:	call   FWORD PTR [ebx+0x32830083]
  40c67c:	add    DWORD PTR [eax],0xffffffcc
  40c67f:	mov    DWORD PTR [eax],0x76aa58ff
  40c685:	sub    bh,bh
  40c687:	cmc    
  40c688:	int3   
  40c689:	cmp    edi,0x0
  40c68c:	inc    DWORD PTR [ebx+0x837830]
  40c692:	imul   ebp,eax,0xa100fc69
  40c698:	int3   
  40c699:	add    bh,bh
  40c69b:	add    edi,edi
  40c69d:	int3   
  40c69e:	push   0x9f00ffef
  40c6a3:	push   es
  40c6a4:	push   ebp
  40c6a5:	xrelease mov DWORD PTR [eax-0xeff0001],esp
  40c6ac:	inc    DWORD PTR [eax]
  40c6ae:	sbb    BYTE PTR [esi-0x1],dl
  40c6b1:	add    BYTE PTR [edx],al
  40c6b3:	lea    esp,[ebp+0x230046]
  40c6b9:	int3   
  40c6ba:	dec    DWORD PTR [esi+0x69b100ff]
  40c6c0:	inc    DWORD PTR [eax]
  40c6c2:	das    
  40c6c3:	cdq    
  40c6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6c5:	push   esp
  40c6c6:	add    BYTE PTR [edi-0x1],bl
  40c6c9:	mov    DWORD PTR [eax],eax
  40c6cb:	pusha  
  40c6cc:	add    bh,bh
  40c6ce:	sbb    BYTE PTR [esi+0x4523ff00],bl
  40c6d4:	dec    eax
  40c6d5:	(bad)  
  40c6d6:	dec    ebp
  40c6d8:	inc    DWORD PTR [eax]
  40c6da:	add    DWORD PTR [ebp-0x1],0x0
  40c6de:	add    BYTE PTR [eax+eax*1],dh
  40c6e1:	call   DWORD PTR [ebp-0x7631280f]
  40c6e7:	push   ss
  40c6e8:	int3   
  40c6e9:	or     esp,0xffffffef
  40c6ec:	inc    DWORD PTR [ebx-0x3336b4]
  40c6f2:	mov    WORD PTR [ebp+0xfff4d9e],?
  40c6f8:	add    BYTE PTR [ebx-0x7c7c4e00],al
  40c6fe:	mov    edi,0xfffffa3
  40c703:	pop    DWORD PTR es:[edi-0xda7d]
  40c70a:	inc    esp
  40c70c:	add    ah,cl
  40c70e:	mov    ds:0x47ffffff,eax
  40c713:	ret    0x7f4f
  40c716:	sbb    edi,0xffffffcc
  40c719:	inc    DWORD PTR [ebx-0x7cff76cd]
  40c71f:	mov    bh,bh
  40c721:	(bad)  
  40c722:	mov    ebp,0xff0f51f3
  40c727:	out    dx,eax
  40c728:	inc    DWORD PTR [eax]
  40c72a:	or     DWORD PTR [ebx-0x1],0x0
  40c72e:	sbb    eax,0xe9ffff07
  40c733:	int3   
  40c734:	dec    ecx
  40c735:	push   esi
  40c736:	add    BYTE PTR [edx-0x1],ah
  40c739:	inc    DWORD PTR [eax]
  40c73b:	sti    
  40c73c:	int3   
  40c73d:	mov    DWORD PTR [edx],ebp
  40c73f:	pop    ecx
  40c740:	inc    DWORD PTR [eax]
  40c742:	int3   
  40c743:	xchg   edx,eax
  40c744:	inc    edx
  40c745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c746:	add    BYTE PTR [esi-0x1],ah
  40c749:	add    DWORD PTR [eax],0x75
  40c74c:	inc    DWORD PTR [eax]
  40c74e:	call   0x4b40c6e4
  40c753:	add    al,0x97
  40c755:	mov    al,BYTE PTR [ebx-0xcf]
  40c75b:	call   0x45afc660
  40c760:	(bad)  
  40c761:	(bad)  
  40c762:	jmp    0x8905:0xff990982
  40c769:	mov    DWORD PTR [eax],eax
  40c76b:	adc    eax,0xb4b20083
  40c770:	inc    DWORD PTR [eax]
  40c772:	je     0x40c724
  40c774:	std    
  40c775:	adc    eax,0x83ff35cc
  40c77a:	int3   
  40c77b:	ret    0xffff
  40c77e:	(bad)  
  40c77f:	inc    DWORD PTR ds:[eax]
  40c782:	adc    eax,0xcc063539
  40c787:	mov    ebx,0x53ff8300
  40c78c:	add    BYTE PTR [eax],al
  40c78e:	popa   
  40c78f:	inc    ebx
  40c790:	(bad)  
  40c791:	call   FWORD PTR [edx]
  40c793:	push   esi
  40c794:	ror    DWORD PTR [edi-0x34],cl
  40c797:	test   eax,0x82ccffff
  40c79c:	add    BYTE PTR [ebx+0x83e3de],al
  40c7a2:	mov    bh,0xf3
  40c7a4:	pop    ebx
  40c7a5:	xor    DWORD PTR [eax],eax
  40c7a7:	pop    edi
  40c7a8:	int3   
  40c7a9:	int3   
  40c7aa:	mov    ebx,edi
  40c7ac:	(bad)  
  40c7ad:	dec    DWORD PTR [ebp-0x2b]
  40c7b0:	int3   
  40c7b1:	int3   
  40c7b2:	stc    
  40c7b3:	adc    esp,DWORD PTR [edx+0x71]
  40c7b6:	and    DWORD PTR [esi-0x66ff0001],0xffffffff
  40c7bd:	jmp    DWORD PTR [ecx]
  40c7bf:	mov    dl,0x0
  40c7c1:	int3   
  40c7c2:	out    dx,eax
  40c7c3:	out    0x61,al
  40c7c5:	jecxz  0x40c7c6
  40c7c7:	dec    ecx
  40c7c8:	inc    DWORD PTR [eax]
  40c7ca:	call   DWORD PTR [ebx-0x285dff7d]
  40c7d0:	inc    DWORD PTR [eax]
  40c7d2:	shl    esi,0xba
  40c7d5:	aam    0xcc
  40c7d7:	cmp    bh,0x0
  40c7da:	add    BYTE PTR [edi-0x719bff01],cl
  40c7e0:	(bad)  
  40c7e1:	dec    DWORD PTR ds:0xffcf574b
  40c7e7:	add    BYTE PTR [ebx+0x57ff00],0xff
  40c7ee:	pop    di
  40c7f0:	(bad)  
  40c7f1:	jmp    FWORD PTR [ebx+edi*2-0x48]
  40c7f5:	sub    eax,0x890023ff
  40c7fa:	add    BYTE PTR [edi+edi*8+0x0],dh
  40c7fe:	lock imul edi,edi,0x0
  40c802:	jae    0x40c7aa
  40c804:	ja     0x40c844
  40c806:	jmp    DWORD PTR [ebp-0x1]
  40c809:	add    bh,bh
  40c80b:	(bad)  
  40c80c:	inc    DWORD PTR [ebx+0x89c67a]
  40c812:	dec    edi
  40c813:	test   DWORD PTR [edx],esp
  40c815:	dec    esp
  40c816:	(bad)  
  40c817:	cmp    DWORD PTR [eax],eax
  40c819:	add    bh,bh
  40c81b:	and    eax,0x8935ff83
  40c820:	(bad)  
  40c821:	call   FWORD PTR [esi-0xc3ec05]
  40c827:	jp     0x40c7ac
  40c829:	dec    DWORD PTR [ecx+0x7900cc3d]
  40c82f:	jnp    0x40c7ba
  40c831:	and    DWORD PTR [eax-0x3357cec2],0x2a
  40c838:	mov    DWORD PTR [eax],eax
  40c83a:	jmp    FWORD PTR [edi+edi*8+0x0]
  40c83e:	jle    0x40c8a5
  40c840:	add    ah,cl
  40c842:	sub    al,0x53
  40c844:	in     eax,0xb5
  40c846:	jmp    ebx
  40c848:	add    bh,bh
  40c84a:	mov    edx,esp
  40c84c:	inc    DWORD PTR [ebx-0x337c192c]
  40c852:	or     bl,BYTE PTR [esi]
  40c854:	sti    
  40c855:	idiv   bh
  40c857:	loopne 0x40c858
  40c859:	dec    DWORD PTR [ecx-0x107cff51]
  40c85f:	fdivr  st,st(7)
  40c861:	jmp    DWORD PTR [esi+0x43]
  40c864:	mov    bl,0x2e
  40c866:	add    BYTE PTR [edi],bl
  40c868:	add    BYTE PTR [eax],al
  40c86a:	(bad)  
  40c86b:	jmp    0xd7e04c3c
  40c870:	add    BYTE PTR [ebx-0x4ce12306],al
  40c876:	inc    esi
  40c878:	add    BYTE PTR [ebx-0xff7d00],al
  40c87e:	jbe    0x40c818
  40c880:	add    bh,bh
  40c882:	mov    esi,0x106a1
  40c887:	push   cs
  40c888:	add    BYTE PTR [eax],al
  40c88a:	add    cl,cl
  40c88c:	add    bh,bh
  40c88e:	repz cmp edi,0x0
  40c892:	pop    es
  40c893:	inc    edi
  40c894:	sahf   
  40c895:	xor    eax,0xff83c2ff
  40c89a:	jmp    FWORD PTR [ecx-0x7d]
  40c89d:	(bad)  
  40c89e:	cmp    esi,DWORD PTR [ecx-0x77]
  40c8a1:	int3   
  40c8a2:	int3   
  40c8a3:	push   cs
  40c8a4:	adc    BYTE PTR [ebx+eax*4],ah
  40c8a7:	xchg   ebx,eax
  40c8a8:	add    DWORD PTR [ebx+0xdc00],0x5d
  40c8af:	pop    edi
  40c8b0:	(bad)  
  40c8b1:	(bad)  
  40c8b2:	cli    
  40c8b3:	in     eax,0x0
  40c8b5:	lods   eax,DWORD PTR ds:[esi]
  40c8b6:	call   DWORD PTR [ebp-0x1]
  40c8b9:	dec    esp
  40c8bb:	or     bh,bh
  40c8bd:	add    BYTE PTR [ebp+0x58830099],bh
  40c8c3:	inc    ecx
  40c8c4:	inc    edi
  40c8c5:	jb     0x40c8c6
  40c8c7:	pop    eax
  40c8c8:	add    BYTE PTR [eax],al
  40c8ca:	mov    ebx,esi
  40c8cc:	add    BYTE PTR [eax],al
  40c8ce:	sahf   
  40c8cf:	mov    WORD PTR [eax],es
  40c8d1:	mov    DWORD PTR [ecx-0x1f],esp
  40c8d4:	mov    esi,0x34003c
  40c8d9:	inc    DWORD PTR [ebx+0x4ffff71]
  40c8df:	loopne 0x40c86a
  40c8e1:	mov    DWORD PTR [ebp-0x7cb95d0a],eax
  40c8e7:	test   BYTE PTR [ecx-0x2c007d],0x0
  40c8ee:	sub    ah,ch
  40c8f0:	add    bh,bh
  40c8f2:	out    dx,eax
  40c8f3:	jbe    0x40c8c7
  40c8f5:	aam    0x0
  40c8f7:	pop    edi
  40c8f8:	int3   
  40c8f9:	add    DWORD PTR [eax],0xffffff8e
  40c8fc:	add    bh,bh
  40c8fe:	enter  0xff29,0xff
  40c902:	pop    edx
  40c903:	sbb    dl,bl
  40c905:	cmp    bh,0x39
  40c908:	inc    DWORD PTR [ebx-0x33ff9e01]
  40c90e:	dec    edx
  40c90f:	arpl   WORD PTR [eax],ax
  40c911:	add    BYTE PTR [edx-0xf68551],ch
  40c917:	sub    eax,0xe200ff00
  40c91c:	(bad)  
  40c91d:	(bad)  
  40c91e:	fld    TBYTE PTR [edi+0x24b7ffff]
  40c924:	shl    DWORD PTR [ebp+0x836a00],1
  40c92a:	(bad)  
  40c92b:	jmp    0x9a87c830
  40c930:	add    BYTE PTR [ecx+0x5824e412],cl
  40c936:	add    BYTE PTR [eax-0x1],al
  40c939:	inc    DWORD PTR [eax]
  40c93b:	ror    ah,cl
  40c93d:	push   ebp
  40c93f:	mov    ds:0x1a42ffff,eax
  40c944:	dec    esp
  40c945:	xchg   BYTE PTR [eax],al
  40c947:	repnz mov edi,edi
  40c94a:	call   FWORD PTR [eax]
  40c94c:	dec    DWORD PTR [ecx+0x8d9f]
  40c952:	cmp    edx,DWORD PTR [esi]
  40c954:	push   ecx
  40c955:	push   esp
  40c956:	mov    esp,edi
  40c958:	inc    DWORD PTR [eax]
  40c95a:	sbb    DWORD PTR [ebx-0x1],0x0
  40c95e:	or     BYTE PTR [edx-0x651b0034],ch
  40c964:	out    dx,eax
  40c965:	jle    0x40c8f0
  40c967:	cmp    eax,0x3800ffff
  40c96c:	(bad)  
  40c96d:	dec    DWORD PTR [edx]
  40c96f:	mov    al,ds:0x41fff00
  40c974:	(bad)  
  40c975:	jae    0x40c977
  40c977:	stc    
  40c978:	int3   
  40c979:	add    bh,bh
  40c97b:	jle    0x40c900
  40c97d:	add    ch,dl
  40c97f:	pop    esi
  40c980:	inc    DWORD PTR [eax]
  40c982:	mov    ds:0x83fdbfdd,al
  40c987:	push   esi
  40c988:	(bad)  
  40c989:	dec    esp
  40c98b:	loop   0x40c98c
  40c98d:	sub    DWORD PTR [esi+edx*2-0x4ea23400],0x51
  40c995:	je     0x40c996
  40c997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c998:	add    BYTE PTR [ebx+0x37ff],al
  40c99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c99f:	push   0x52c100ff
  40c9a4:	fisttp QWORD PTR [eax+eax*1-0x7c17]
  40c9ab:	mov    cl,0x0
  40c9ad:	(bad)  
  40c9ae:	cmp    al,0x29
  40c9b0:	(bad)  
  40c9b1:	(bad)  
  40c9b2:	cmp    eax,0x837200b0
  40c9b7:	sbb    DWORD PTR [ecx+0xa0ff89],ecx
  40c9bd:	add    BYTE PTR [ebx],ah
  40c9bf:	jl     0x40c94a
  40c9c1:	dec    DWORD PTR [eax+0x2]
  40c9c4:	mov    bh,0x2c
  40c9c6:	adc    edx,0xffffffcc
  40c9c9:	(bad)  
  40c9ca:	dec    DWORD PTR [ebx]
  40c9cc:	(bad)  
  40c9cd:	call   eax
  40c9cf:	sub    eax,0x89d2ff00
  40c9d4:	fist   WORD PTR [esp+ecx*8]
  40c9d7:	add    BYTE PTR [eax],al
  40c9d9:	int3   
  40c9da:	add    BYTE PTR [ebx+0x7e17ff00],bh
  40c9e0:	inc    DWORD PTR [eax]
  40c9e2:	rcr    BYTE PTR [esi+esi*1+0x62],1
  40c9e6:	jmp    FWORD PTR [ebx-0x54ff7c01]
  40c9ec:	dec    esp
  40c9ee:	sar    DWORD PTR [edi+edi*8+0x40a916ff],1
  40c9f5:	lods   eax,DWORD PTR ds:[esi]
  40c9f6:	add    BYTE PTR [esi-0x197c7d00],al
  40c9fc:	mov    edi,edi
  40c9fe:	das    
  40c9ff:	pop    esi
  40ca00:	(bad)  
  40ca01:	call   edx
  40ca03:	lods   al,BYTE PTR ds:[esi]
  40ca04:	jmp    0x8300:0xd0012
  40ca0b:	stos   BYTE PTR es:[edi],al
  40ca0c:	add    BYTE PTR [ebx-0xdf11],al
  40ca12:	or     edi,esi
  40ca14:	mov    eax,0xffde00cb
  40ca19:	int3   
  40ca1a:	(bad)  
  40ca1b:	inc    BYTE PTR [ebx-0x149134]
  40ca21:	add    BYTE PTR [esi],dl
  40ca23:	pushf  
  40ca24:	adc    ch,cl
  40ca26:	xor    DWORD PTR ds:0x36ffffff,0x0
  40ca2d:	add    DWORD PTR [edx-0x53],0xffffffff
  40ca31:	jmp    DWORD PTR [edi]
  40ca33:	xor    al,0x4c
  40ca35:	xor    bh,bh
  40ca37:	adc    eax,0x1900ffff
  40ca3c:	add    ah,cl
  40ca3e:	pop    ecx
  40ca3f:	loope  0x40ca40
  40ca41:	call   FWORD PTR [eax+0x3b]
  40ca44:	dec    esp
  40ca45:	inc    esi
  40ca46:	add    ah,bl
  40ca48:	add    BYTE PTR [eax],al
  40ca4a:	(bad)  
  40ca4b:	jmp    0xffff:0x64dc0000
  40ca52:	and    edi,ecx
  40ca54:	and    cl,BYTE PTR [edi+edi*8-0x7c7c0023]
  40ca5b:	or     bh,bh
  40ca5d:	add    DWORD PTR [eax],0xffffff8a
  40ca60:	add    DWORD PTR [ebx+0x37de3cf4],0x0
  40ca67:	jne    0x40ca69
  40ca69:	(bad)  
  40ca6a:	dec    DWORD PTR [edx-0x9393301]
  40ca70:	add    DWORD PTR [eax],0x24
  40ca73:	dec    esi
  40ca74:	pop    ds
  40ca75:	test   DWORD PTR [eax],eax
  40ca77:	xor    cl,ah
  40ca79:	(bad)  
  40ca7a:	inc    DWORD PTR [eax-0x7a50ff77]
  40ca80:	(bad)  
  40ca81:	dec    DWORD PTR [ebp+edx*2-0x2aff7c14]
  40ca88:	cmp    edi,0x0
  40ca8b:	mov    eax,ds:0xbd99ff83
  40ca90:	(bad)  
  40ca91:	(bad)  
  40ca92:	call   0x1392a7b
  40ca97:	ins    DWORD PTR es:[edi],dx
  40ca98:	mov    edi,edi
  40ca9a:	int3   
  40ca9b:	enter  0xff00,0xc9
  40ca9f:	adc    al,BYTE PTR [eax]
  40caa1:	call   DWORD PTR [edi-0xa5407f]
  40caa7:	mov    bh,0x83
  40caa9:	inc    DWORD PTR [eax]
  40caab:	pop    es
  40caac:	int3   
  40caad:	jmp    FWORD PTR ds:0x48ff89a3
  40cab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cab4:	popf   
  40cab5:	push   esp
  40cab6:	add    DWORD PTR [eax+0x0],0x0
  40caba:	add    DWORD PTR ds:0xcbfaff00,0xffffffff
  40cac1:	jmp    FWORD PTR [eax+edi*2+0x4983cbcf]
  40cac8:	inc    DWORD PTR [eax]
  40caca:	add    dh,bh
  40cacc:	add    BYTE PTR [eax],al
  40cace:	pop    ecx
  40cacf:	mov    eax,0x3dceff00
  40cad4:	inc    ebp
  40cad5:	cmp    al,0xcc
  40cad7:	mov    ds:0xd9ffffff,al
  40cadc:	add    BYTE PTR [eax],al
  40cade:	jo     0x40ca88
  40cae0:	add    BYTE PTR [ebx-0xea0c107],al
  40cae6:	add    BYTE PTR [edi+edi*8],ch
  40cae9:	(bad)  
  40caea:	call   edi
  40caec:	(bad)  
  40caed:	jmp    FWORD PTR ds:0x988389ce
  40caf3:	(bad)  
  40caf4:	sbb    BYTE PTR [ecx+0xff08cc],bh
  40cafa:	add    BYTE PTR [edi+0x0],cl
  40cafd:	(bad)  
  40cafe:	fidivr DWORD PTR [eax+0x0]
  40cb01:	add    ebp,0xfffffff5
  40cb04:	xchg   ecx,eax
  40cb05:	imul   eax,DWORD PTR [eax],0x1f
  40cb08:	cmp    edi,0xffffffff
  40cb0b:	sti    
  40cb0c:	(bad)  
  40cb0d:	dec    edi
  40cb0f:	or     al,0xff
  40cb11:	add    al,cl
  40cb13:	adc    DWORD PTR [edx-0x41],edx
  40cb16:	call   FWORD PTR [eax]
  40cb18:	add    BYTE PTR [eax],al
  40cb1a:	push   DWORD PTR [edx+0x0]
  40cb1d:	jmp    FWORD PTR [esi]
  40cb1f:	pop    ebx
  40cb20:	inc    DWORD PTR [eax]
  40cb22:	mov    BYTE PTR ds:[esi],dl
  40cb25:	(bad)  
  40cb26:	call   DWORD PTR [esi]
  40cb28:	inc    DWORD PTR [eax]
  40cb2a:	dec    ebx
  40cb2c:	int3   
  40cb2d:	push   DWORD PTR [ecx]
  40cb2f:	xchg   esi,eax
  40cb30:	inc    DWORD PTR [ebx-0x4938a127]
  40cb36:	inc    DWORD PTR [edi-0x13007c7d]
  40cb3c:	dec    DWORD PTR [ecx+0x8931b9]
  40cb42:	ins    BYTE PTR es:[edi],dx
  40cb43:	and    BYTE PTR [ebx-0x4a],ch
  40cb46:	(bad)  
  40cb47:	mov    esi,0x5e83ff83
  40cb4c:	add    BYTE PTR [eax],al
  40cb4e:	adc    ebp,DWORD PTR [eax-0x1]
  40cb51:	jmp    DWORD PTR [ebx-0xd918cf]
  40cb57:	jmp    0x8300:0x810083ff
  40cb5e:	mov    esp,0xf3ffffa5
  40cb63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb64:	pop    esp
  40cb65:	das    
  40cb66:	dec    DWORD PTR [ecx-0x7d]
  40cb69:	mov    DWORD PTR [ebx-0x2600ff08],eax
  40cb6f:	mov    eax,ds:0x44bf00ff
  40cb74:	aad    0x9c
  40cb76:	add    BYTE PTR [eax-0x7d],al
  40cb79:	add    BYTE PTR [eax],al
  40cb7b:	mov    esi,0x14e8ff83
  40cb80:	inc    DWORD PTR [eax]
  40cb82:	dec    ecx
  40cb83:	xlat   BYTE PTR ds:[ebx]
  40cb84:	mov    ebx,DWORD PTR [edx-0x3300e101]
  40cb8a:	inc    DWORD PTR [ebx]
  40cb8c:	(bad)  
  40cb8d:	(bad)  
  40cb8e:	mov    ecx,0x7f0083ed
  40cb93:	pop    eax
  40cb94:	pop    eax
  40cb95:	jmp    FWORD PTR ds:[eax+0x0]
  40cb99:	mov    edi,edi
  40cb9b:	push   ecx
  40cb9c:	(bad)  
  40cb9d:	(bad)  
  40cb9e:	js     0x40cbd0
  40cba0:	inc    DWORD PTR [ebx+0x295a90e3]
  40cba6:	sub    DWORD PTR [eax],0xffffffcc
  40cba9:	inc    DWORD PTR [ebx-0x1d7c009e]
  40cbaf:	cmp    bh,0x89
  40cbb2:	sub    dh,BYTE PTR [edx-0x7f002248]
  40cbb8:	mov    edi,edi
  40cbba:	(bad)  
  40cbbb:	out    dx,al
  40cbbc:	inc    DWORD PTR [ebx+0x83b329]
  40cbc2:	cs scas al,BYTE PTR es:[edi]
  40cbc4:	jne    0x40cbba
  40cbc6:	xor    esi,0x0
  40cbc9:	add    DWORD PTR [eax],0xfffffff1
  40cbcc:	inc    DWORD PTR [eax]
  40cbce:	sub    esi,DWORD PTR [ebp-0x40c40001]
  40cbd4:	cmp    BYTE PTR [edi-0xc200],al
  40cbda:	dec    DWORD PTR [edx+0x28e9ff00]
  40cbe0:	inc    DWORD PTR [ebx-0x7ee62d0b]
  40cbe6:	sbb    DWORD PTR [esi-0x1],0xffffffff
  40cbea:	inc    DWORD PTR [edx-0x1]
  40cbed:	add    bl,bh
  40cbef:	mov    eax,ds:0x73ec83ff
  40cbf4:	test   al,0xf7
  40cbf6:	inc    DWORD PTR [ebp-0x1]
  40cbf9:	add    BYTE PTR [eax],al
  40cbfb:	inc    edx
  40cbfc:	inc    DWORD PTR [eax]
  40cbfe:	scas   eax,DWORD PTR es:[edi]
  40cbff:	mov    WORD PTR [eax],es
  40cc01:	add    BYTE PTR [eax+0x30],ch
  40cc04:	push   0xfffffffc
  40cc06:	add    dh,cl
  40cc08:	add    DWORD PTR [eax],0xffffffff
  40cc0b:	xchg   esp,eax
  40cc0c:	(bad)  
  40cc0d:	inc    DWORD PTR [edx]
  40cc0f:	pop    esp
  40cc10:	int3   
  40cc11:	int3   
  40cc12:	lods   eax,DWORD PTR ds:[esi]
  40cc13:	loopne 0x40cbb2
  40cc15:	ret    
  40cc16:	add    BYTE PTR [ecx-0xe007634],cl
  40cc1c:	(bad)  
  40cc1d:	call   DWORD PTR [ebp-0x5a]
  40cc20:	dec    esp
  40cc22:	(bad)  
  40cc23:	sbb    eax,0x94ffa116
  40cc28:	add    ah,cl
  40cc2a:	call   FWORD PTR [ecx+0x708dffff]
  40cc30:	add    BYTE PTR [eax],al
  40cc32:	mov    ecx,0xff1eaa7d
  40cc37:	test   bh,bh
  40cc39:	add    bh,bh
  40cc3b:	es (bad) 
  40cc3d:	inc    DWORD PTR [ebx]
  40cc3f:	xchg   ecx,eax
  40cc40:	inc    DWORD PTR [eax]
  40cc42:	jp     0x40cca5
  40cc44:	es xchg ebx,eax
  40cc46:	or     DWORD PTR [edi],0xffffffff
  40cc49:	int3   
  40cc4a:	sbb    DWORD PTR ds:0x5a9cffcc,0xffffffff
  40cc51:	(bad)  
  40cc52:	std    
  40cc53:	lea    esp,[ebx+0x50ff02]
  40cc59:	add    BYTE PTR [eax],al
  40cc5b:	jmp    0x40cc5c
  40cc5d:	call   FWORD PTR [ebp-0x50]
  40cc60:	add    BYTE PTR [ebx-0x2c7ab89e],al
  40cc66:	add    ah,al
  40cc68:	inc    DWORD PTR [eax]
  40cc6a:	push   DWORD PTR [eax-0xb330034]
  40cc70:	(bad)  
  40cc71:	call   ebp
  40cc73:	inc    eax
  40cc74:	int3   
  40cc75:	cmp    eax,0xff003083
  40cc7a:	sbb    DWORD PTR [edx+0xdebffcc],0xffffff89
  40cc81:	int3   
  40cc82:	(bad)  
  40cc83:	shr    BYTE PTR [edx],0x4b
  40cc86:	int3   
  40cc87:	test   DWORD PTR [ecx-0x76ce7d00],ecx
  40cc8d:	add    BYTE PTR [edx+0x47ff00d2],bl
  40cc93:	push   ds
  40cc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc95:	xor    al,0xff
  40cc97:	cmp    bh,0xff
  40cc9a:	adc    DWORD PTR [eax+0x2d3900ff],0x0
  40cca1:	add    BYTE PTR [eax-0x189ebe],bl
  40cca7:	cmc    
  40cca8:	add    BYTE PTR [eax],al
  40ccaa:	add    BYTE PTR [edx],dh
  40ccac:	(bad)  
  40ccad:	inc    DWORD PTR [ebp-0x63]
  40ccb0:	inc    DWORD PTR [eax]
  40ccb2:	mov    ebx,0x9a108c
  40ccb7:	cmp    BYTE PTR [eax],al
  40ccb9:	inc    DWORD PTR [eax]
  40ccbb:	mov    DWORD PTR [ebx-0x193100],eax
  40ccc1:	add    bl,dh
  40ccc3:	inc    ecx
  40ccc4:	add    eax,0xe4fff8
  40ccc9:	inc    DWORD PTR [eax]
  40cccb:	pop    es
  40cccc:	add    bh,bh
  40ccce:	xchg   DWORD PTR [esi+0x69fa00cc],esi
  40ccd4:	out    0x43,al
  40ccd6:	call   FWORD PTR [ebx+eax*4]
  40ccd9:	add    DWORD PTR [ebx-0x2b00002f],0x72
  40cce0:	add    BYTE PTR [eax],al
  40cce2:	xchg   edx,eax
  40cce3:	jecxz  0x40cc94
  40cce5:	and    eax,DWORD PTR [eax]
  40cce7:	mov    cl,0xcc
  40cce9:	add    DWORD PTR [eax],0xffffffb6
  40ccec:	cmp    edi,0xffffff86
  40ccef:	in     al,0x0
  40ccf1:	jmp    FWORD PTR [ecx-0xf35360]
  40ccf7:	push   cs
  40ccf8:	inc    DWORD PTR [eax]
  40ccfa:	and    DWORD PTR [ebx-0x34],0xffffffff
  40ccfe:	scas   eax,DWORD PTR es:[edi]
  40ccff:	mov    DWORD PTR [eax],0xeb4020ff
  40cd05:	sar    edi,0xf4
  40cd08:	(bad)  
  40cd09:	inc    DWORD PTR [eax]
  40cd0b:	pop    ebx
  40cd0c:	add    bh,bh
  40cd0e:	daa    
  40cd0f:	repz add BYTE PTR [ebx-0x51e7a364],al
  40cd16:	add    bh,bh
  40cd18:	add    bh,bh
  40cd1a:	push   edi
  40cd1c:	(bad)  
  40cd1d:	(bad)  
  40cd1e:	ffree  st(1)
  40cd20:	add    ah,cl
  40cd22:	test   eax,0xff1b5d96
  40cd27:	fadd   QWORD PTR [eax]
  40cd29:	add    BYTE PTR [eax],al
  40cd2b:	cli    
  40cd2c:	cmp    edi,0x0
  40cd2f:	scas   eax,DWORD PTR es:[edi]
  40cd30:	or     esp,0x1
  40cd33:	or     edi,DWORD PTR [ebx+eiz*1]
  40cd36:	add    BYTE PTR [ebx-0x6fffff01],cl
  40cd3c:	add    bh,bh
  40cd3e:	inc    esp
  40cd3f:	mov    ebx,0x34348300
  40cd44:	call   0xff:0xff3583e1
  40cd4b:	sub    eax,DWORD PTR [ebx-0x408c00]
  40cd51:	(bad)  
  40cd52:	fistp  WORD PTR [esp+ecx*8+0x2]
  40cd56:	add    DWORD PTR [ebx-0x7d],0xffffffcc
  40cd5a:	xor    DWORD PTR [ebx-0x741f0000],0x0
  40cd61:	add    ch,dl
  40cd63:	retf   0xa2c7
  40cd66:	call   FWORD PTR [eax]
  40cd68:	add    BYTE PTR [eax],al
  40cd6a:	inc    ebx
  40cd6c:	(bad)  
  40cd6d:	push   DWORD PTR [esp+esi*8-0x1]
  40cd71:	add    dl,bl
  40cd73:	xchg   ebx,eax
  40cd74:	adc    BYTE PTR [edi],0x83
  40cd77:	cmp    eax,DWORD PTR [eax]
  40cd79:	inc    DWORD PTR [ebx-0x3776ffbd]
  40cd7f:	nop
  40cd80:	add    BYTE PTR [ecx+0x6205501d],cl
  40cd86:	mov    DWORD PTR [edi-0x77],ebp
  40cd89:	inc    DWORD PTR [eax]
  40cd8b:	xor    al,0xff
  40cd8d:	add    DWORD PTR [ebx+0x9ff00f0],0xffffffcf
  40cd94:	test   DWORD PTR [esi-0x1],0xffffbb
  40cd9b:	sbb    eax,0x3506ff00
  40cda0:	inc    DWORD PTR [eax]
  40cda2:	xor    dh,BYTE PTR [edx+0x10]
  40cda5:	jae    0x40cda7
  40cda7:	icebp  
  40cda8:	add    BYTE PTR [ebx-0x3b00],al
  40cdae:	xlat   BYTE PTR ds:[ebx]
  40cdaf:	pusha  
  40cdb0:	(bad)  
  40cdb1:	inc    DWORD PTR [eax]
  40cdb3:	mov    eax,0xa70040a6
  40cdb8:	inc    DWORD PTR [eax]
  40cdba:	sub    eax,0xffffff83
  40cdbd:	dec    ebp
  40cdbf:	add    al,0x89
  40cdc1:	mov    DWORD PTR [edx+edi*8],ebp
  40cdc4:	imul   ebx,DWORD PTR [ebp-0xff7101],0xffff7fff
  40cdce:	pusha  
  40cdcf:	add    eax,0x3eb0ff83
  40cdd4:	les    edx,FWORD PTR [ecx-0x1]
  40cdd7:	jbe    0x40cdd8
  40cdd9:	inc    DWORD PTR [eax]
  40cddb:	jnp    0x40cddc
  40cddd:	add    dl,dh
  40cddf:	or     edi,edi
  40cde1:	int3   
  40cde2:	xchg   ebp,eax
  40cde3:	xchg   DWORD PTR [edi],edx
  40cde5:	int3   
  40cde6:	call   DWORD PTR [edi-0x51ff0001]
  40cdec:	add    BYTE PTR [ecx+0x89ec95],cl
  40cdf2:	adc    eax,0xad887d
  40cdf7:	jb     0x40cdf9
  40cdf9:	add    bh,bh
  40cdfb:	out    dx,al
  40cdfc:	add    BYTE PTR [ecx+0xccf9ea],cl
  40ce02:	fidivr DWORD PTR [ebx]
  40ce04:	jp     0x40ce2a
  40ce06:	jmp    DWORD PTR [esi+0x64ff00ff]
  40ce0c:	add    DWORD PTR [eax],0xffffff93
  40ce0f:	push   ds
  40ce10:	(bad)  
  40ce11:	(bad)  
  40ce12:	mov    eax,0xff395c99
  40ce17:	lock add BYTE PTR [ebx-0x33197d],al
  40ce1e:	(bad)  
  40ce1f:	lahf   
  40ce20:	(bad)  
  40ce21:	inc    esi
  40ce23:	sub    esp,esi
  40ce25:	daa    
  40ce26:	add    BYTE PTR [edx-0x43000077],bh
  40ce2c:	inc    DWORD PTR [eax]
  40ce2e:	inc    ebx
  40ce2f:	jmp    0x903d5233
  40ce34:	xchg   ebx,eax
  40ce35:	pop    ecx
  40ce36:	push   ebx
  40ce38:	int3   
  40ce39:	inc    DWORD PTR [eax]
  40ce3b:	xchg   ebp,eax
  40ce3c:	(bad)  
  40ce3d:	jmp    FWORD PTR [ebx]
  40ce3f:	ror    ah,cl
  40ce41:	add    BYTE PTR [ecx-0x1cc649],bl
  40ce47:	(bad)  
  40ce49:	inc    DWORD PTR [eax]
  40ce4b:	sbb    DWORD PTR [eax],eax
  40ce4d:	xor    DWORD PTR [eax+0x56],0x0
  40ce51:	add    BYTE PTR [ebp+0x23],ch
  40ce54:	xchg   BYTE PTR [edi],bh
  40ce56:	add    BYTE PTR [edi],cl
  40ce58:	add    DWORD PTR [eax],0x0
  40ce5b:	mov    esp,0x660ffff
  40ce60:	inc    DWORD PTR [eax]
  40ce62:	jecxz  0x40ceb9
  40ce64:	ret    
  40ce65:	pop    esi
  40ce66:	int3   
  40ce67:	adc    bh,bh
  40ce69:	add    bh,bh
  40ce6b:	pop    esi
  40ce6c:	add    BYTE PTR [eax],al
  40ce6e:	sub    al,0x5a
  40ce70:	(bad)  
  40ce71:	inc    DWORD PTR [eax-0x61]
  40ce74:	or     ecx,DWORD PTR [ebx+0xffc183]
  40ce7a:	add    al,bh
  40ce7c:	add    BYTE PTR [eax],al
  40ce7e:	mov    dh,0x85
  40ce80:	add    BYTE PTR [eax],al
  40ce82:	sahf   
  40ce83:	and    al,0x54
  40ce85:	aam    0xff
  40ce87:	xor    edi,edi
  40ce89:	(bad)  
  40ce8a:	inc    DWORD PTR [eax-0x1]
  40ce8d:	int3   
  40ce8e:	repz std 
  40ce90:	mov    edi,edi
  40ce92:	jg     0x40cef4
  40ce94:	cmc    
  40ce95:	mov    al,0xff
  40ce97:	or     al,0xcc
  40ce99:	add    DWORD PTR [eax],0xffffffab
  40ce9c:	mov    edi,edi
  40ce9e:	mov    dh,0xd8
  40cea0:	(bad)  
  40cea1:	call   DWORD PTR [eax+0x7aa02b]
  40cea7:	stos   DWORD PTR es:[edi],eax
  40cea8:	add    BYTE PTR [ebx-0x33fc01],al
  40ceae:	push   ebx
  40ceaf:	pop    ebp
  40ceb0:	add    BYTE PTR [eax],al
  40ceb2:	xor    BYTE PTR ds:0x3aff2933,bh
  40ceb8:	inc    DWORD PTR [eax]
  40ceba:	add    BYTE PTR [edi+0x67fb0089],bh
  40cec0:	(bad)  
  40cec1:	(bad)  
  40cec2:	jmp    0xff10:0x5a93dc
  40cec9:	add    BYTE PTR [eax],al
  40cecb:	popf   
  40cecc:	(bad)  
  40cecd:	jmp    DWORD PTR [edi]
  40cecf:	cmp    al,0xff
  40ced1:	add    BYTE PTR [edx+ecx*1],al
  40ced4:	fcomp  QWORD PTR [edx-0x77]
  40ced7:	inc    ebx
  40ced8:	(bad)  
  40ced9:	inc    DWORD PTR [eax]
  40cedb:	test   BYTE PTR [eax],al
  40cedd:	(bad)  
  40cede:	clc    
  40cedf:	fiadd  WORD PTR [eax]
  40cee1:	int3   
  40cee2:	jnp    0x40ceaf
  40cee4:	mov    al,0xa4
  40cee6:	(bad)  
  40cee7:	mov    ebp,0x6aff0000
  40ceec:	int3   
  40ceed:	jmp    ecx
  40ceef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cef0:	inc    DWORD PTR [ebx+0x5bfb2f57]
  40cef6:	mov    edx,eax
  40cef8:	inc    DWORD PTR [eax]
  40cefa:	push   DWORD PTR [edi+edi*8]
  40cefd:	add    BYTE PTR [edx+edx*8],ah
  40cf00:	(bad)  
  40cf01:	dec    DWORD PTR [edx+0x2d93df]
  40cf07:	sub    eax,DWORD PTR [eax]
  40cf09:	mov    DWORD PTR [ebx-0xff4e],eax
  40cf0f:	mov    edi,0xd9890083
  40cf14:	add    cl,ah
  40cf16:	int3   
  40cf17:	cmp    ecx,esp
  40cf19:	cmp    edi,0xffffffc4
  40cf1c:	add    BYTE PTR [ebx+0xdfb],al
  40cf22:	in     eax,0xe1
  40cf24:	jb     0x40cf11
  40cf26:	(bad)  
  40cf27:	jns    0x40ceac
  40cf29:	add    bh,bh
  40cf2b:	(bad)  
  40cf2d:	inc    ebp
  40cf2f:	ror    DWORD PTR [ecx+0x5b1f46cc],cl
  40cf35:	jbe    0x40cf37
  40cf37:	jmp    0x5440593b
  40cf3c:	add    bh,bh
  40cf3e:	test   eax,0xcc51
  40cf43:	push   esi
  40cf44:	mov    al,0xb1
  40cf46:	add    BYTE PTR [edi+edi*8+0xd80089],dh
  40cf4d:	add    BYTE PTR ds:0x2eff899b,dh
  40cf53:	aad    0x82
  40cf55:	lahf   
  40cf56:	add    BYTE PTR [edi-0x58007601],ch
  40cf5c:	int3   
  40cf5d:	dec    DWORD PTR [esi+0x16ff0087]
  40cf63:	jmp    0xff00:0xb1ff15af
  40cf6a:	push   ebp
  40cf6c:	int3   
  40cf6d:	sbb    ebp,0xfffffff1
  40cf70:	(bad)  
  40cf71:	push   DWORD PTR [edi]
  40cf73:	jno    0x40cf91
  40cf75:	mov    ebx,0x8983ed00
  40cf7a:	adc    ebp,0xffffffcc
  40cf7d:	call   DWORD PTR [edx-0x6a007cdf]
  40cf83:	pop    edi
  40cf84:	and    dl,BYTE PTR [edi+edi*8+0x0]
  40cf88:	(bad)  
  40cf89:	(bad)  
  40cf8a:	dec    DWORD PTR [ebx+0x0]
  40cf8d:	add    bh,al
  40cf8f:	jge    0x40cf90
  40cf91:	dec    DWORD PTR [ebp+0x52]
  40cf94:	js     0x40cf3f
  40cf96:	jmp    FWORD PTR [edi+0x0]
  40cf99:	add    BYTE PTR [eax],al
  40cf9b:	inc    DWORD PTR ss:[eax]
  40cf9e:	pop    ecx
  40cf9f:	arpl   di,di
  40cfa1:	add    bh,dh
  40cfa3:	shl    BYTE PTR [edi],cl
  40cfa5:	xchg   esi,eax
  40cfa6:	add    BYTE PTR [eax],al
  40cfa8:	add    BYTE PTR [eax],al
  40cfaa:	(bad)  
  40cfab:	ds add bh,bh
  40cfae:	adc    BYTE PTR [ecx+0x31eeffcc],ch
  40cfb4:	dec    ebx
  40cfb5:	pop    edx
  40cfb6:	int3   
  40cfb7:	scas   al,BYTE PTR es:[edi]
  40cfb8:	add    BYTE PTR [eax],al
  40cfba:	jmp    DWORD PTR [ebx]
  40cfbc:	or     esp,0x1a
  40cfbf:	fdivp  st(7),st
  40cfc1:	jmp    DWORD PTR [ecx-0x3c79b3]
  40cfc7:	mov    edi,edi
  40cfc9:	add    bh,bh
  40cfcb:	out    dx,eax
  40cfcc:	(bad)  
  40cfcd:	call   esp
  40cfcf:	sahf   
  40cfd0:	add    DWORD PTR [eax],0x2a
  40cfd3:	jl     0x40cf72
  40cfd5:	test   BYTE PTR [ebx-0x7cff18],al
  40cfdb:	rol    BYTE PTR [ebx-0xbdb001],cl
  40cfe1:	add    BYTE PTR [ecx-0x75],cl
  40cfe4:	xor    esi,eax
  40cfe6:	or     DWORD PTR [edx-0x6cff7d00],0xffffff89
  40cfed:	add    BYTE PTR [eax],bh
  40cfef:	push   ss
  40cff0:	add    ah,cl
  40cff2:	pop    es
  40cff3:	mov    edi,0x8ff6286
  40cff8:	cmp    edi,0xffffff83
  40cffb:	test   esp,ecx
  40cffd:	call   DWORD PTR [edi-0x13]
  40d000:	cmp    edi,0x56
  40d003:	shl    al,cl
  40d005:	fild   DWORD PTR [eax]
  40d007:	mov    DWORD PTR [eax],eax
  40d009:	int3   
  40d00a:	inc    DWORD PTR [eax]
  40d00c:	(bad)  
  40d00d:	inc    DWORD PTR [ebx+0xec8100]
  40d013:	add    al,BYTE PTR [eax]
  40d015:	add    BYTE PTR [ebx+0x56],dl
  40d018:	mov    esi,DWORD PTR ds:0x44502c
  40d01e:	push   edi
  40d01f:	push   0x6f
  40d021:	push   0x42
  40d023:	call   esi
  40d025:	push   0xee
  40d02a:	push   0x42
  40d02c:	mov    edi,eax
  40d02e:	call   esi
  40d030:	mov    ebx,eax
  40d032:	push   0x100
  40d037:	lea    eax,[esp+0x10]
  40d03b:	push   eax
  40d03c:	push   0x447a64
  40d041:	call   DWORD PTR ds:0x445068
  40d047:	mov    eax,ds:0x448d04
  40d04c:	add    eax,0x1edc4
  40d051:	mov    esi,0x43
  40d056:	push   ebp
  40d057:	jmp    0x40d060
  40d059:	lea    esp,[esp+0x0]
  40d060:	mov    ecx,DWORD PTR ds:0x448000
  40d066:	mov    ecx,DWORD PTR [ecx+0x1]
  40d069:	mov    edx,DWORD PTR ds:0x448d00
  40d06f:	mov    DWORD PTR ds:0x448cf0,ecx
  40d075:	add    edx,0x347e1576
  40d07b:	xor    edx,ecx
  40d07d:	mov    DWORD PTR [eax],edx
  40d07f:	mov    edx,DWORD PTR ds:0x448000
  40d085:	movzx  ecx,WORD PTR [edx+0xe]
  40d089:	movzx  ebp,BYTE PTR [edx+0xb]
  40d08d:	movzx  edx,BYTE PTR [edx+0x7]
  40d091:	shl    ecx,0x8
  40d094:	add    ecx,ebp
  40d096:	shl    ecx,0x8
  40d099:	add    ecx,edx
  40d09b:	mov    edx,DWORD PTR ds:0x448d00
  40d0a1:	mov    DWORD PTR ds:0x448cf0,ecx
  40d0a7:	add    edx,0x347e1576
  40d0ad:	xor    edx,ecx
  40d0af:	mov    DWORD PTR [eax+0x4],edx
  40d0b2:	mov    ecx,DWORD PTR ds:0x448000
  40d0b8:	mov    edx,DWORD PTR ds:0x448d00
  40d0be:	add    ecx,0x10
  40d0c1:	mov    DWORD PTR ds:0x448000,ecx
  40d0c7:	mov    ecx,DWORD PTR [ecx+0x1]
  40d0ca:	mov    DWORD PTR ds:0x448cf0,ecx
  40d0d0:	add    edx,0x347e1576
  40d0d6:	xor    edx,ecx
  40d0d8:	mov    DWORD PTR [eax+0x8],edx
  40d0db:	mov    edx,DWORD PTR ds:0x448000
  40d0e1:	movzx  ecx,WORD PTR [edx+0xe]
  40d0e5:	movzx  ebp,BYTE PTR [edx+0xb]
  40d0e9:	movzx  edx,BYTE PTR [edx+0x7]
  40d0ed:	shl    ecx,0x8
  40d0f0:	add    ecx,ebp
  40d0f2:	shl    ecx,0x8
  40d0f5:	add    ecx,edx
  40d0f7:	mov    edx,DWORD PTR ds:0x448d00
  40d0fd:	add    edx,0x347e1576
  40d103:	xor    edx,ecx
  40d105:	mov    DWORD PTR ds:0x448cf0,ecx
  40d10b:	mov    DWORD PTR [eax+0xc],edx
  40d10e:	add    DWORD PTR ds:0x448000,0x10
  40d115:	add    eax,0x10
  40d118:	dec    esi
  40d119:	jne    0x40d060
  40d11f:	mov    edx,DWORD PTR ds:0x448d04
  40d125:	mov    eax,DWORD PTR [esp+0x214]
  40d12c:	add    edx,0x1f1f4
  40d132:	add    eax,0x4
  40d135:	mov    esi,0x9
  40d13a:	lea    ebx,[ebx+0x0]
  40d140:	movzx  ecx,WORD PTR [eax+0x2]
  40d144:	movzx  ebp,BYTE PTR [eax]
  40d147:	shl    ecx,0x8
  40d14a:	add    ecx,ebp
  40d14c:	movzx  ebp,BYTE PTR [eax-0x2]
  40d150:	shl    ecx,0x8
  40d153:	add    ecx,ebp
  40d155:	mov    DWORD PTR ds:0x448cf0,ecx
  40d15b:	mov    ebp,0xcaede6b
  40d160:	sub    ebp,DWORD PTR ds:0x448d00
  40d166:	add    eax,0x28
  40d169:	xor    ebp,ecx
  40d16b:	mov    DWORD PTR [edx],ebp
  40d16d:	movzx  ecx,WORD PTR [eax-0x1e]
  40d171:	movzx  ebp,BYTE PTR [eax-0x20]
  40d175:	shl    ecx,0x8
  40d178:	add    ecx,ebp
  40d17a:	movzx  ebp,BYTE PTR [eax-0x22]
  40d17e:	shl    ecx,0x8
  40d181:	add    ecx,ebp
  40d183:	mov    DWORD PTR ds:0x448cf0,ecx
  40d189:	mov    ebp,0xcaede6b
  40d18e:	sub    ebp,DWORD PTR ds:0x448d00
  40d194:	add    edx,0x14
  40d197:	xor    ebp,ecx
  40d199:	mov    DWORD PTR [edx-0x10],ebp
  40d19c:	movzx  ecx,WORD PTR [eax-0x16]
  40d1a0:	movzx  ebp,BYTE PTR [eax-0x18]
  40d1a4:	shl    ecx,0x8
  40d1a7:	add    ecx,ebp
  40d1a9:	movzx  ebp,BYTE PTR [eax-0x1a]
  40d1ad:	shl    ecx,0x8
  40d1b0:	add    ecx,ebp
  40d1b2:	mov    DWORD PTR ds:0x448cf0,ecx
  40d1b8:	mov    ebp,0xcaede6b
  40d1bd:	sub    ebp,DWORD PTR ds:0x448d00
  40d1c3:	xor    ebp,ecx
  40d1c5:	mov    DWORD PTR [edx-0xc],ebp
  40d1c8:	movzx  ecx,WORD PTR [eax-0xe]
  40d1cc:	movzx  ebp,BYTE PTR [eax-0x10]
  40d1d0:	shl    ecx,0x8
  40d1d3:	add    ecx,ebp
  40d1d5:	movzx  ebp,BYTE PTR [eax-0x12]
  40d1d9:	shl    ecx,0x8
  40d1dc:	add    ecx,ebp
  40d1de:	mov    DWORD PTR ds:0x448cf0,ecx
  40d1e4:	mov    ebp,0xcaede6b
  40d1e9:	sub    ebp,DWORD PTR ds:0x448d00
  40d1ef:	xor    ebp,ecx
  40d1f1:	mov    DWORD PTR [edx-0x8],ebp
  40d1f4:	movzx  ecx,WORD PTR [eax-0x6]
  40d1f8:	movzx  ebp,BYTE PTR [eax-0x8]
  40d1fc:	shl    ecx,0x8
  40d1ff:	add    ecx,ebp
  40d201:	movzx  ebp,BYTE PTR [eax-0xa]
  40d205:	shl    ecx,0x8
  40d208:	add    ecx,ebp
  40d20a:	mov    ebp,0xcaede6b
  40d20f:	sub    ebp,DWORD PTR ds:0x448d00
  40d215:	mov    DWORD PTR ds:0x448cf0,ecx
  40d21b:	xor    ebp,ecx
  40d21d:	dec    esi
  40d21e:	mov    DWORD PTR [edx-0x4],ebp
  40d221:	jne    0x40d140
  40d227:	mov    esi,DWORD PTR ds:0x445030
  40d22d:	pop    ebp
  40d22e:	test   edi,edi
  40d230:	je     0x40d235
  40d232:	push   edi
  40d233:	call   esi
  40d235:	test   ebx,ebx
  40d237:	je     0x40d23c
  40d239:	push   ebx
  40d23a:	call   esi
  40d23c:	pop    edi
  40d23d:	pop    esi
  40d23e:	pop    ebx
  40d23f:	add    esp,0x200
  40d245:	ret    
  40d246:	int3   
  40d247:	int3   
  40d248:	int3   
  40d249:	int3   
  40d24a:	int3   
  40d24b:	int3   
  40d24c:	int3   
  40d24d:	int3   
  40d24e:	int3   
  40d24f:	int3   
  40d250:	xchg   ebx,eax
  40d251:	add    bh,bh
  40d253:	add    bh,bh
  40d255:	mov    dl,BYTE PTR [ecx+edi*4]
  40d258:	aaa    
  40d259:	(bad)  
  40d25a:	(bad)  
  40d25b:	inc    DWORD PTR [ebx-0x3c031d02]
  40d261:	dec    esp
  40d263:	inc    DWORD PTR [ebx+0xcb92ac1]
  40d269:	(bad)  
  40d26a:	(bad)  
  40d26b:	inc    DWORD PTR [ebx+0x784ccc95]
  40d271:	add    BYTE PTR [eax],al
  40d273:	add    ah,cl
  40d275:	sahf   
  40d276:	ins    BYTE PTR es:[edi],dx
  40d277:	jmp    0x40d2e0
  40d279:	(bad)  
  40d27a:	(bad)  
  40d27b:	(bad)  
  40d27c:	call   DWORD PTR [edx+edi*1+0x2997]
  40d283:	add    bh,bh
  40d285:	push   0xff529e6f
  40d28a:	int3   
  40d28b:	(bad)  
  40d28c:	push   DWORD PTR [edx]
  40d28e:	cmp    esp,DWORD PTR [edx+0x20]
  40d291:	add    bh,bh
  40d293:	(bad)  
  40d294:	inc    DWORD PTR [esi+0x6d]
  40d297:	arpl   WORD PTR [esp+ecx*8],dx
  40d29a:	dec    DWORD PTR [ecx-0x77322101]
  40d2a0:	ret    
  40d2a1:	add    BYTE PTR [eax],al
  40d2a3:	int3   
  40d2a4:	push   ecx
  40d2a6:	add    cl,dl
  40d2a8:	cmc    
  40d2a9:	inc    DWORD PTR [eax]
  40d2ab:	add    bh,bh
  40d2ad:	cmp    al,0xb3
  40d2af:	jb     0x40d251
  40d2b1:	add    ah,cl
  40d2b3:	(bad)  
  40d2b4:	jmp    DWORD PTR [edi-0xf62667]
  40d2ba:	(bad)  
  40d2bb:	inc    DWORD PTR [eax]
  40d2bd:	push   cs
  40d2be:	mov    esp,0x83ffc1a0
  40d2c3:	add    BYTE PTR [eax],al
  40d2c5:	xor    ah,BYTE PTR [ebp+0xb]
  40d2c8:	and    eax,0x8983ff
  40d2cd:	popa   
  40d2ce:	stos   BYTE PTR es:[edi],al
  40d2cf:	jg     0x40d2e4
  40d2d1:	inc    DWORD PTR [ebx-0x7c6f7c01]
  40d2d7:	push   edx
  40d2d8:	push   ds
  40d2d9:	inc    DWORD PTR [eax]
  40d2db:	(bad)  
  40d2dc:	(bad)  
  40d2dd:	mov    ebp,0x83cd62f5
  40d2e2:	mov    DWORD PTR [eax],eax
  40d2e4:	add    BYTE PTR [edi],al
  40d2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e7:	in     al,dx
  40d2e8:	lea    eax,[ebx-0x7eff0100]
  40d2ee:	pusha  
  40d2ef:	jne    0x40d357
  40d2f1:	add    BYTE PTR [eax],al
  40d2f3:	add    BYTE PTR [eax],al
  40d2f5:	sub    bl,BYTE PTR [edx+esi*8-0x3c]
  40d2f9:	add    BYTE PTR [eax],al
  40d2fb:	add    bh,bh
  40d2fd:	mov    bl,0x4e
  40d2ff:	dec    ebx
  40d300:	(bad)  
  40d301:	int3   
  40d302:	dec    DWORD PTR [ecx+0xea74389]
  40d308:	in     eax,0x0
  40d30a:	(bad)  
  40d30b:	(bad)  
  40d30c:	inc    DWORD PTR [edi-0x3d]
  40d30f:	into   
  40d310:	cmc    
  40d311:	dec    esp
  40d313:	or     esp,0xffffffe9
  40d316:	outs   dx,BYTE PTR ds:[esi]
  40d317:	sbb    al,0xf8
  40d319:	inc    DWORD PTR [ebx+0x7936ff00]
  40d31f:	fs pop es
  40d321:	(bad)  
  40d322:	inc    DWORD PTR [eax]
  40d324:	jmp    DWORD PTR [edi-0x7d]
  40d327:	jb     0x40d2ab
  40d329:	(bad)  
  40d32a:	(bad)  
  40d32b:	inc    DWORD PTR [eax]
  40d32d:	jb     0x40d341
  40d32f:	or     eax,0xff82
  40d334:	dec    DWORD PTR [eax-0x658ffc]
  40d33a:	cmp    edi,0xffffff83
  40d33d:	jecxz  0x40d345
  40d33f:	mov    edi,0xff83833a
  40d344:	inc    ebp
  40d346:	daa    
  40d347:	ret    0xffa8
  40d34a:	add    BYTE PTR [eax],al
  40d34c:	call   edi
  40d34e:	cs pop ds
  40d350:	fxch   st(4)
  40d352:	(bad)  
  40d353:	(bad)  
  40d354:	dec    DWORD PTR [esi-0x41a41a]
  40d35a:	cmp    edi,0xffffffff
  40d35d:	jle    0x40d358
  40d35f:	inc    eax
  40d360:	gs (bad) 
  40d362:	(bad)  
  40d363:	dec    esp
  40d365:	or     eax,DWORD PTR [eax+edx*8-0x7c00d6]
  40d36c:	sbb    DWORD PTR [ebx-0x691534],0xffffffff
  40d373:	(bad)  
  40d374:	dec    DWORD PTR [ecx+0xffcc7b]
  40d37a:	dec    DWORD PTR [ecx+0x796004ff]
  40d380:	je     0x40d305
  40d382:	add    DWORD PTR [ebx+0x1f5a2800],0x35
  40d389:	inc    DWORD PTR [eax]
  40d38b:	add    bh,bh
  40d38d:	mov    edi,0xccf02df0
  40d392:	int3   
  40d393:	(bad)  
  40d394:	jmp    FWORD PTR [esi]
  40d396:	shl    edx,1
  40d398:	mov    esi,0xffcc00
  40d39d:	jno    0x40d363
  40d39f:	aas    
  40d3a0:	lods   eax,DWORD PTR ds:[esi]
  40d3a1:	add    BYTE PTR [eax],al
  40d3a3:	int3   
  40d3a4:	jmp    DWORD PTR [eax-0x7cecd0a0]
  40d3aa:	int3   
  40d3ab:	add    BYTE PTR [eax],al
  40d3ad:	sbb    ah,bh
  40d3af:	aas    
  40d3b0:	mov    eax,0xffffff
  40d3b5:	dec    eax
  40d3b6:	lods   al,BYTE PTR ds:[esi]
  40d3b7:	sub    al,0xd
  40d3b9:	dec    esp
  40d3bb:	inc    DWORD PTR [ebx+0x5f05a664]
  40d3c1:	inc    DWORD PTR [eax]
  40d3c3:	(bad)  
  40d3c4:	dec    DWORD PTR [esi+0x39]
  40d3c7:	mov    ebp,DWORD PTR [esi-0x1]
  40d3ca:	inc    DWORD PTR [ebx-0x2e1fca00]
  40d3d0:	inc    esi
  40d3d1:	add    bh,bh
  40d3d3:	inc    DWORD PTR [eax]
  40d3d5:	adc    DWORD PTR [si+0x43],0xccff00ff
  40d3dd:	jg     0x40d402
  40d3df:	push   esi
  40d3e0:	jae    0x40d3e1
  40d3e2:	add    BYTE PTR [eax],al
  40d3e4:	and    esp,0xffffffe8
  40d3e7:	and    al,0x78
  40d3e9:	add    bh,bh
  40d3eb:	add    bh,bh
  40d3ed:	stos   DWORD PTR es:[edi],eax
  40d3ee:	push   ebp
  40d3ef:	aas    
  40d3f0:	push   cs
  40d3f1:	int3   
  40d3f2:	inc    DWORD PTR [eax]
  40d3f4:	add    BYTE PTR [edx+edi*1],bl
  40d3f7:	addr16 (bad) 
  40d3fa:	inc    DWORD PTR [ebx-0x7c751a7d]
  40d400:	in     eax,0x83
  40d402:	add    bh,bh
  40d404:	jmp    FWORD PTR [edi+0xea8e8c]
  40d40a:	(bad)  
  40d40b:	inc    DWORD PTR [eax]
  40d40d:	mov    esp,0xffd86d14
  40d412:	int3   
  40d413:	add    ah,cl
  40d415:	or     al,0xf5
  40d417:	shl    ah,cl
  40d419:	inc    DWORD PTR [ebx-0x1950001]
  40d41f:	pop    ebx
  40d420:	rol    DWORD PTR [eax],0x83
  40d423:	add    BYTE PTR [eax],al
  40d425:	test   BYTE PTR [edx],0x62
  40d428:	pop    eax
  40d429:	(bad)  
  40d42a:	(bad)  
  40d42b:	inc    DWORD PTR [eax]
  40d42d:	std    
  40d42e:	xlat   BYTE PTR ds:[ebx]
  40d42f:	cs mov ah,0xff
  40d432:	inc    DWORD PTR [eax]
  40d434:	jmp    FWORD PTR [ebx]
  40d436:	daa    
  40d437:	in     eax,dx
  40d438:	test   eax,0xffffff
  40d43d:	sbb    al,0x81
  40d43f:	pop    es
  40d440:	sbb    ah,cl
  40d442:	mov    DWORD PTR [ecx-0x1f9ad101],ecx
  40d448:	xor    eax,0xff008983
  40d44d:	mov    ebx,DWORD PTR [edi-0x8]
  40d450:	xor    BYTE PTR [eax],al
  40d452:	mov    edi,edi
  40d454:	add    BYTE PTR [ecx],bl
  40d456:	fadd   QWORD PTR [ebp+0xff009d]
  40d45c:	jmp    DWORD PTR [ecx+0x27]
  40d45f:	fbld   TBYTE PTR [ecx]
  40d461:	inc    DWORD PTR [eax]
  40d463:	add    BYTE PTR [ecx+0x1a680a47],cl
  40d469:	(bad)  
  40d46a:	dec    esp
  40d46c:	(bad)  
  40d46d:	jge    0x40d472
  40d46f:	jbe    0x40d4d4
  40d471:	(bad)  
  40d472:	(bad)  
  40d473:	inc    DWORD PTR [ebx+0x7dc4623c]
  40d479:	(bad)  
  40d47a:	inc    DWORD PTR [eax]
  40d47c:	call   FWORD PTR [eax-0x7c5d3221]
  40d482:	inc    DWORD PTR [eax]
  40d484:	call   FWORD PTR [ebp+ebp*8-0x57]
  40d488:	je     0x40d489
  40d48a:	inc    DWORD PTR [eax]
  40d48c:	jmp    FWORD PTR [edi-0x768e5562]
  40d492:	dec    esp
  40d494:	dec    DWORD PTR [eax-0x2b]
  40d497:	out    dx,eax
  40d498:	int    0xff
  40d49a:	dec    esp
  40d49c:	jmp    FWORD PTR [ebx]
  40d49e:	in     eax,0x9b
  40d4a0:	mov    edx,0xff89ff89
  40d4a5:	fadd   QWORD PTR [eax]
  40d4a7:	(bad)  [ecx+0x0]
  40d4aa:	inc    DWORD PTR [eax]
  40d4ac:	add    DWORD PTR [edx],0xffffffe5
  40d4af:	push   edi
  40d4b0:	xchg   bh,bh
  40d4b2:	inc    DWORD PTR [eax]
  40d4b4:	call   DWORD PTR [ecx]
  40d4b6:	xor    al,0xa8
  40d4b8:	sub    al,BYTE PTR [ebx+0x530000ff]
  40d4be:	or     BYTE PTR [edi],cl
  40d4c0:	ds add bh,bh
  40d4c3:	int3   
  40d4c4:	cmp    DWORD PTR [edi],0x40
  40d4c7:	out    dx,al
  40d4c8:	pop    esp
  40d4c9:	(bad)  
  40d4ca:	dec    esp
  40d4cc:	jmp    DWORD PTR [esi]
  40d4ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4cf:	gs cmp bh,bh
  40d4d2:	add    ah,cl
  40d4d4:	sub    ebx,0x10
  40d4d7:	inc    eax
  40d4d8:	or     bh,bh
  40d4da:	add    bh,bh
  40d4dc:	add    bl,al
  40d4de:	mov    ebp,0xffffd5a0
  40d4e3:	add    DWORD PTR [eax],0xffffff84
  40d4e6:	cmp    cl,dl
  40d4e8:	cld    
  40d4e9:	add    DWORD PTR [ebx-0x5753ff01],0x24
  40d4f0:	(bad)  
  40d4f1:	dec    DWORD PTR [ecx-0x32d70000]
  40d4f7:	ret    
  40d4f8:	aas    
  40d4f9:	inc    DWORD PTR [eax]
  40d4fb:	or     esp,0xffffffda
  40d4fe:	pop    ss
  40d4ff:	dec    edi
  40d500:	(bad)  
  40d501:	int3   
  40d502:	or     esp,0xffffffff
  40d505:	fistp  DWORD PTR [ecx+0x5d]
  40d508:	dec    edx
  40d509:	inc    DWORD PTR [ebx-0x5d010000]
  40d50f:	jg     0x40d584
  40d511:	add    BYTE PTR [eax],al
  40d513:	dec    esp
  40d515:	push   esp
  40d516:	int    0x57
  40d518:	cmp    al,0xcc
  40d51a:	(bad)  
  40d51b:	inc    DWORD PTR [ebx-0x19e4a890]
  40d521:	(bad)  
  40d522:	(bad)  
  40d523:	(bad)  
  40d524:	call   ecx
  40d526:	imul   edx,DWORD PTR [edx],0xffff8326
  40d52c:	add    BYTE PTR [esi+0x4916f9],ah
  40d532:	(bad)  
  40d533:	dec    esp
  40d535:	int3   
  40d536:	jmp    0x140bcd3
  40d53b:	inc    DWORD PTR [ebx-0x3f537765]
  40d541:	add    BYTE PTR [ebx-0x753c7c01],al
  40d547:	data16 add BYTE PTR [eax],al
  40d54a:	int3   
  40d54b:	or     esp,0xffffffa7
  40d54e:	sub    ecx,ebx
  40d550:	mov    DWORD PTR [eax],0x9300ffff
  40d556:	ds lock in al,0xff
  40d55a:	dec    DWORD PTR [ecx+0x6196b8ff]
  40d560:	stos   DWORD PTR es:[edi],eax
  40d561:	add    BYTE PTR [eax],al
  40d563:	or     DWORD PTR [ecx+0xad2fe68],0x0
  40d56a:	inc    DWORD PTR [eax]
  40d56c:	jmp    FWORD PTR [edx-0xb9e845]
  40d572:	(bad)  
  40d573:	(bad)  
  40d574:	inc    DWORD PTR [edi+0x31]
  40d577:	adc    eax,0xff830050
  40d57c:	inc    ebp
  40d57e:	pop    esp
  40d57f:	dec    ebx
  40d580:	fdiv   st(7),st
  40d582:	inc    DWORD PTR [eax]
  40d584:	int3   
  40d585:	pop    ds
  40d586:	imul   edx,DWORD PTR [edx],0xffff00dc
  40d58c:	mov    DWORD PTR [ecx-0x6010d4],ecx
  40d592:	inc    DWORD PTR [ebx-0x14f4ad01]
  40d598:	cmc    
  40d599:	cmp    edi,0xffffffff
  40d59c:	push   DWORD PTR [esi+0x5e]
  40d59f:	xchg   DWORD PTR [eax-0x7d00],ecx
  40d5a5:	sub    esp,DWORD PTR [edx-0x33f6af]
  40d5ab:	dec    esp
  40d5ad:	xchg   edi,eax
  40d5ae:	fsub   QWORD PTR [eax+0x8300f2]
  40d5b4:	jmp    DWORD PTR [esi+0x63]
  40d5b7:	or     cl,BYTE PTR [edx-0xff01]
  40d5bd:	sahf   
  40d5be:	mov    ?,WORD PTR [ebx+edi*4+0x0]
  40d5c2:	add    ah,cl
  40d5c4:	jmp    FWORD PTR [ecx-0x3393c82e]
  40d5ca:	add    DWORD PTR [eax],0x0
  40d5cd:	adc    ebp,DWORD PTR [edx-0x5c]
  40d5d0:	jle    0x40d5d2
  40d5d2:	mov    DWORD PTR [eax],eax
  40d5d4:	call   FWORD PTR [eax-0x7cf9aeda]
  40d5da:	(bad)  
  40d5db:	(bad)  
  40d5dc:	call   FWORD PTR [ecx+ebx*2-0x7c4a4f]
  40d5e3:	add    DWORD PTR [ebx-0x16f10fbe],0xffffffff
  40d5ea:	mov    edi,edi
  40d5ec:	dec    DWORD PTR [ebp+0x657c08]
  40d5f2:	(bad)  
  40d5f3:	(bad)  
  40d5f4:	inc    DWORD PTR [ebx+edx*4-0x43]
  40d5f8:	pusha  
  40d5f9:	int3   
  40d5fa:	add    BYTE PTR [eax],al
  40d5fc:	int3   
  40d5fd:	repnz repnz int3 
  40d600:	inc    eax
  40d601:	inc    DWORD PTR [eax]
  40d603:	cmp    edi,0xffffffe4
  40d606:	cmp    esi,DWORD PTR [edi+0x33]
  40d609:	add    BYTE PTR [eax],al
  40d60b:	add    DWORD PTR [eax],0x6f
  40d60e:	xchg   bh,al
  40d610:	retf   
  40d611:	(bad)  
  40d612:	(bad)  
  40d613:	inc    DWORD PTR [eax]
  40d615:	ja     0x40d5d9
  40d617:	fcom   DWORD PTR [eax-0x7d]
  40d61a:	inc    DWORD PTR [eax]
  40d61c:	call   FWORD PTR [edi]
  40d61e:	pop    esi
  40d620:	and    al,0x83
  40d622:	add    ah,cl
  40d624:	call   FWORD PTR [eax+0x7b]
  40d627:	stc    
  40d628:	mov    esp,0xff00ffcc
  40d62d:	cmp    DWORD PTR [ecx-0x70],0xff83ccee
  40d634:	add    DWORD PTR [eax],0x29
  40d637:	inc    eax
  40d638:	jns    0x5340d63d
  40d63e:	clc    
  40d63f:	hlt    
  40d640:	inc    eax
  40d641:	(bad)  
  40d642:	(bad)  
  40d643:	dec    DWORD PTR [ecx-0x3399bad5]
  40d649:	int3   
  40d64a:	add    bh,bh
  40d64c:	push   ebx
  40d64e:	xor    esi,DWORD PTR [ebx]
  40d650:	or     DWORD PTR [eax],eax
  40d652:	cmp    edi,0xffffff83
  40d655:	sbb    eax,0x363bd8
  40d65a:	int3   
  40d65b:	dec    DWORD PTR [ecx+0x4a0c3dd5]
  40d661:	int3   
  40d662:	add    bh,bh
  40d664:	sub    DWORD PTR [ebp+0x6],0xfffffff6
  40d668:	adc    ecx,esp
  40d66a:	mov    DWORD PTR [eax],eax
  40d66c:	cmp    DWORD PTR [esi],0x9
  40d66f:	jns    0x40d64c
  40d671:	(bad)  
  40d672:	(bad)  
  40d673:	inc    DWORD PTR [eax]
  40d675:	retf   
  40d676:	stos   BYTE PTR es:[edi],al
  40d677:	cmp    edx,DWORD PTR [eax+eax*1+0x6bffff00]
  40d67e:	ds cmp ebp,esi
  40d681:	int3   
  40d682:	cmp    edi,0xffffffff
  40d685:	popa   
  40d686:	adc    ch,al
  40d688:	sub    eax,DWORD PTR [ebx-0x66007601]
  40d68e:	les    ebp,FWORD PTR [edx-0xff0058]
  40d694:	call   DWORD PTR [eax]
  40d696:	bound  ebp,QWORD PTR [si+0xff]
  40d69b:	(bad)  
  40d69c:	(bad)  
  40d69d:	sti    
  40d69e:	repz xchg ecx,eax
  40d6a0:	cwde   
  40d6a1:	inc    DWORD PTR [ebx+0x6e77ffff]
  40d6a7:	xor    DWORD PTR [ecx-0x1],eax
  40d6aa:	cmp    edi,0xffffffff
  40d6ad:	sub    DWORD PTR [edi+0xff4cf5],edi
  40d6b3:	inc    DWORD PTR [ebx+0x5fb547b9]
  40d6b9:	add    bh,bh
  40d6bb:	inc    DWORD PTR [eax]
  40d6bd:	add    BYTE PTR [ecx],bl
  40d6bf:	cmp    al,0x72
  40d6c1:	(bad)  
  40d6c2:	dec    DWORD PTR [ecx+0x74b1f9ff]
  40d6c8:	xor    edi,edi
  40d6ca:	add    BYTE PTR [ebx+0x6b4653ff],al
  40d6d0:	push   edi
  40d6d1:	dec    DWORD PTR [ecx+0x3c4500ff]
  40d6d7:	mov    eax,0x838300b6
  40d6dc:	int3   
  40d6dd:	inc    ebx
  40d6de:	lods   al,BYTE PTR ds:[esi]
  40d6df:	push   ebp
  40d6e0:	jl     0x40d6e1
  40d6e2:	inc    DWORD PTR [eax]
  40d6e4:	int3   
  40d6e5:	jmp    0xffff:0xff6d1996
  40d6ec:	add    BYTE PTR ds:0x89643af0,ah
  40d6f2:	inc    DWORD PTR [eax]
  40d6f4:	call   esi
  40d6f6:	dec    ebx
  40d6f7:	sub    eax,eax
  40d6f9:	int3   
  40d6fa:	add    bh,bh
  40d6fc:	call   FWORD PTR [edx-0x8586ce]
  40d702:	(bad)  
  40d703:	(bad)  
  40d704:	dec    DWORD PTR [edi-0x5e]
  40d707:	(bad)  
  40d708:	inc    BYTE PTR [ebx+0x10ffff00]
  40d70e:	dec    esi
  40d70f:	data16 lods al,BYTE PTR ds:[esi]
  40d711:	add    BYTE PTR [ebx-0x7ac60001],al
  40d717:	xchg   edx,eax
  40d718:	or     bh,bh
  40d71a:	add    BYTE PTR [eax],al
  40d71c:	mov    esp,edi
  40d71e:	adc    eax,DWORD PTR [ebx-0xb]
  40d724:	(bad)  
  40d725:	cld    
  40d726:	fs jns 0x40d77e
  40d729:	dec    DWORD PTR [ecx+0x27eeffff]
  40d72f:	sbb    BYTE PTR [edi],0x89
  40d732:	int3   
  40d733:	int3   
  40d734:	adc    DWORD PTR [ebx+0x59],0xffffff98
  40d738:	stos   BYTE PTR es:[edi],al
  40d739:	mov    DWORD PTR [ebx-0x16dd0100],eax
  40d73f:	bound  eax,QWORD PTR [ebp-0x7c7d]
  40d745:	aam    0xf1
  40d747:	push   esi
  40d748:	jbe    0x40d6cd
  40d74a:	(bad)  
  40d74b:	inc    DWORD PTR [eax]
  40d74d:	inc    ecx
  40d74e:	mov    esi,0x890002c8
  40d753:	inc    DWORD PTR [eax]
  40d755:	push   eax
  40d756:	(bad)  
  40d758:	dec    ebp
  40d759:	add    BYTE PTR [ebx-0x17e70000],al
  40d75f:	push   ebp
  40d760:	mov    ebp,0xffff
  40d765:	jecxz  0x40d760
  40d767:	mov    esi,0x8389ff89
  40d76c:	add    BYTE PTR [edi+0x4a],dh
  40d76f:	adc    ebp,0xffffffff
  40d772:	inc    DWORD PTR [eax]
  40d774:	add    bh,al
  40d776:	clc    
  40d777:	outs   dx,BYTE PTR ds:[esi]
  40d778:	sub    bh,bh
  40d77a:	(bad)  
  40d77b:	inc    DWORD PTR [eax]
  40d77d:	adc    eax,0xff0d7372
  40d782:	(bad)  
  40d783:	inc    DWORD PTR [eax]
  40d785:	out    0x72,al
  40d787:	outs   dx,BYTE PTR ds:[esi]
  40d788:	push   ds
  40d789:	inc    DWORD PTR [eax]
  40d78b:	(bad)  
  40d78c:	inc    DWORD PTR [ebp-0x7c8e8405]
  40d792:	dec    esp
  40d794:	add    BYTE PTR [esi+0x286f2b],al
  40d79a:	(bad)  
  40d79b:	dec    esp
  40d79d:	jae    0x40d78c
  40d79f:	popa   
  40d7a0:	cmc    
  40d7a1:	dec    esp
  40d7a3:	mov    edi,edi
  40d7a5:	add    DWORD PTR [eax+eiz*2-0x77],edx
  40d7a9:	int3   
  40d7aa:	inc    DWORD PTR [eax]
  40d7ac:	dec    DWORD PTR [edi]
  40d7ae:	cs xor al,0xb7
  40d7b1:	add    bh,bh
  40d7b3:	add    BYTE PTR [ecx+0x1db9910f],cl
  40d7b9:	add    bh,bh
  40d7bb:	dec    esp
  40d7bd:	xlat   BYTE PTR ds:[ebx]
  40d7be:	xchg   ecx,eax
  40d7bf:	push   ss
  40d7c0:	cmp    edi,0xffffffff
  40d7c3:	(bad)  
  40d7c4:	dec    DWORD PTR [edx-0x7c405945]
  40d7ca:	inc    DWORD PTR [ebx-0x3d04db00]
  40d7d0:	arpl   di,di
  40d7d2:	dec    esp
  40d7d4:	int3   
  40d7d5:	jl     0x40d7b3
  40d7d7:	add    DWORD PTR [ecx-0x7d],ecx
  40d7da:	add    bh,bh
  40d7dc:	jmp    DWORD PTR [ecx-0x50]
  40d7df:	test   BYTE PTR [esi],dl
  40d7e1:	inc    DWORD PTR [eax]
  40d7e3:	mov    DWORD PTR [ebx-0x6a250707],eax
  40d7e9:	(bad)  
  40d7ea:	(bad)  
  40d7eb:	(bad)  
  40d7ec:	(bad)  
  40d7ed:	out    dx,eax
  40d7ee:	sahf   
  40d7ef:	push   esp
  40d7f0:	adc    al,BYTE PTR [eax]
  40d7f2:	mov    DWORD PTR [eax],eax
  40d7f4:	mov    DWORD PTR [ebx+edi*1-0xe3b1],esp
  40d7fb:	(bad)  
  40d7fc:	inc    DWORD PTR [ecx-0x3161c1]
  40d802:	inc    DWORD PTR [ebx-0x35ebe977]
  40d808:	stos   DWORD PTR es:[edi],eax
  40d809:	inc    DWORD PTR [eax]
  40d80b:	(bad)  
  40d80c:	call   edi
  40d80e:	mov    dl,BYTE PTR [edi]
  40d810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d811:	dec    DWORD PTR [ecx+0x5495ffff]
  40d817:	cdq    
  40d818:	mov    DWORD PTR [eax],0x6c89ccff
  40d81e:	(bad)  
  40d81f:	cli    
  40d820:	fwait
  40d821:	(bad)  
  40d822:	dec    esp
  40d824:	or     DWORD PTR [ecx],0x6d
  40d827:	ficom  WORD PTR [esi-0x7d]
  40d82a:	inc    DWORD PTR [ebx+0x7ad2e00]
  40d830:	adc    DWORD PTR [ebx+0x5600cccc],eax
  40d836:	fwait
  40d837:	sbb    eax,0xffff8986
  40d83c:	xor    esp,0x2e
  40d83f:	dec    esp
  40d840:	xchg   esi,eax
  40d841:	dec    DWORD PTR [ecx-0x7ed27c01]
  40d847:	sub    BYTE PTR [ebx+0xffff83],bh
  40d84d:	sbb    eax,0xff6765d4
  40d852:	add    BYTE PTR [eax],al
  40d854:	(bad)  
  40d855:	ds (bad) 
  40d857:	xor    eax,0xffffff15
  40d85c:	dec    DWORD PTR [eax]
  40d85e:	lock dec BYTE PTR [ecx]
  40d861:	(bad)  
  40d862:	inc    DWORD PTR [ebx+0xcef1b83]
  40d868:	or     bh,bh
  40d86a:	add    bh,bh
  40d86c:	add    BYTE PTR [ebx+0xdfc4d3],cl
  40d872:	cmp    edi,0xffffff89
  40d875:	mov    BYTE PTR [eax-0x58],dh
  40d878:	call   0x8a3fd97c
  40d87d:	stos   DWORD PTR es:[edi],eax
  40d87e:	neg    DWORD PTR [eax]
  40d880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d881:	cmp    edi,0xffffffff
  40d884:	adc    DWORD PTR [ecx-0x336b6e25],0xffffffff
  40d88b:	or     DWORD PTR [ecx+0x57458fe4],0x0
  40d892:	inc    DWORD PTR [ebx-0x137a8334]
  40d898:	cdq    
  40d899:	(bad)  
  40d89a:	(bad)  
  40d89b:	dec    DWORD PTR [ecx+0x629d5a4c]
  40d8a1:	inc    DWORD PTR [eax]
  40d8a3:	add    bh,bh
  40d8a5:	sbb    edx,ebx
  40d8a7:	sar    dh,0xff
  40d8aa:	add    BYTE PTR [ebx+0x503976ff],al
  40d8b0:	ins    BYTE PTR es:[edi],dx
  40d8b1:	int3   
  40d8b2:	add    DWORD PTR [eax],0x0
  40d8b5:	pop    ebp
  40d8b6:	lods   eax,DWORD PTR ds:[esi]
  40d8b7:	ins    DWORD PTR es:[edi],dx
  40d8b8:	cmp    bh,bh
  40d8ba:	inc    DWORD PTR [eax]
  40d8bc:	inc    DWORD PTR [ebp-0x2d]
  40d8bf:	repz enter 0xff00,0xff
  40d8c4:	add    BYTE PTR [ebp+0xd6bdd5],ah
  40d8ca:	(bad)  
  40d8cb:	inc    DWORD PTR [eax]
  40d8cd:	inc    ebp
  40d8ce:	cmc    
  40d8cf:	ds push edi
  40d8d1:	add    ah,cl
  40d8d3:	inc    DWORD PTR [eax]
  40d8d5:	xchg   eax,edx
  40d8d7:	mov    ds:0xffff008f,eax
  40d8dc:	add    BYTE PTR [eax-0x9e17d9],dh
  40d8e2:	add    bh,bh
  40d8e4:	add    BYTE PTR [ecx],al
  40d8e6:	xchg   DWORD PTR [ebp+0x35],eax
  40d8e9:	(bad)  
  40d8ea:	dec    DWORD PTR [ecx-0x336f0e7d]
  40d8f0:	dec    esi
  40d8f1:	(bad)  
  40d8f2:	(bad)  
  40d8f3:	inc    DWORD PTR [eax]
  40d8f5:	and    DWORD PTR [ebx],ebp
  40d8f7:	fld    TBYTE PTR [eax-0xffff34]
  40d8fd:	test   al,0xbe
  40d8ff:	xor    al,0x6d
  40d901:	add    BYTE PTR [eax],al
  40d903:	add    bh,bh
  40d905:	cmp    dl,BYTE PTR [esi+ebx*8-0x7d]
  40d909:	(bad)  
  40d90a:	inc    DWORD PTR [ebx+0xdfdf3ff]
  40d910:	out    0x89,al
  40d912:	dec    esp
  40d914:	and    DWORD PTR [esi-0x7c0c5342],0xffffffff
  40d91b:	add    bh,bh
  40d91d:	pop    esi
  40d91e:	pop    edi
  40d91f:	dec    ebp
  40d920:	jge    0x40d8ab
  40d922:	(bad)  
  40d923:	inc    DWORD PTR [eax]
  40d925:	mov    ebx,0x83cda5bb
  40d92a:	inc    DWORD PTR [eax]
  40d92c:	jmp    FWORD PTR [eax+0xf9c37a]
  40d932:	(bad)  
  40d933:	inc    DWORD PTR [eax]
  40d935:	xchg   ebx,eax
  40d936:	or     eax,DWORD PTR [edx]
  40d938:	inc    ebp
  40d939:	add    bh,bh
  40d93b:	add    BYTE PTR [eax],al
  40d93d:	(bad)  
  40d93e:	xchg   ecx,eax
  40d93f:	sub    al,0xa6
  40d941:	add    BYTE PTR [ebx-0x2cb0000],al
  40d947:	push   cs
  40d948:	or     bh,bh
  40d94a:	(bad)  
  40d94b:	inc    DWORD PTR [eax]
  40d94d:	mov    esi,0xdf1170
  40d952:	mov    DWORD PTR [eax],eax
  40d954:	int3   
  40d955:	pop    ecx
  40d956:	lods   eax,DWORD PTR ds:[esi]
  40d957:	mov    dl,BYTE PTR [eax-0x33000100]
  40d95d:	cmp    ch,ah
  40d95f:	call   0x1089:0xff89ff40
  40d966:	cwde   
  40d967:	fs dec sp
  40d96b:	add    bh,bh
  40d96d:	jge    0x40d972
  40d96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d970:	jecxz  0x40d972
  40d972:	add    BYTE PTR [ecx+0x4f5bacff],cl
  40d978:	or     DWORD PTR [ecx-0x2d007c01],0xff78be8f
  40d982:	add    bh,bh
  40d984:	add    BYTE PTR [edx-0xfb3d92],al
  40d98a:	(bad)  
  40d98b:	inc    DWORD PTR [eax]
  40d98d:	test   al,0x9f
  40d98f:	call   0xadff:0xff0083f7
  40d996:	lods   eax,DWORD PTR ds:[esi]
  40d997:	dec    esp
  40d998:	cmp    edi,edi
  40d99a:	add    bh,bh
  40d99c:	int3   
  40d99d:	lods   eax,DWORD PTR ds:[esi]
  40d99e:	lods   eax,DWORD PTR ds:[esi]
  40d99f:	pop    edx
  40d9a0:	out    0xcc,al
  40d9a2:	mov    DWORD PTR [ebx+0x1fe8a800],eax
  40d9a8:	xor    cl,ah
  40d9aa:	inc    DWORD PTR [eax]
  40d9ac:	inc    DWORD PTR [ebx-0xbcfb75]
  40d9b2:	int3   
  40d9b3:	(bad)  
  40d9b4:	(bad)  
  40d9b5:	cmp    bl,BYTE PTR [ecx-0x76ff110f]
  40d9bb:	add    BYTE PTR [eax],al
  40d9bd:	sbb    BYTE PTR ss:[ebx+edi*2-0x7c76ff34],0xae
  40d9c6:	mov    al,ds:0xffffc261
  40d9cb:	add    bh,bh
  40d9cd:	lods   al,BYTE PTR ds:[esi]
  40d9ce:	mov    bh,0x97
  40d9d0:	in     al,0x83
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	int3   
  40d9d5:	les    ebx,FWORD PTR [eax]
  40d9d7:	push   ebp
  40d9d8:	and    al,0x0
  40d9da:	(bad)  
  40d9db:	inc    DWORD PTR [eax]
  40d9dd:	(bad)  
  40d9de:	repz aaa 
  40d9e0:	out    dx,al
  40d9e1:	inc    DWORD PTR [eax]
  40d9e3:	add    BYTE PTR [ebx+0x34b8ac7c],al
  40d9e9:	(bad)  
  40d9ea:	inc    DWORD PTR [eax]
  40d9ec:	add    BYTE PTR [ebx-0x40],dl
  40d9ef:	mov    edi,0xff83890e
  40d9f4:	(bad)  
  40d9f5:	clc    
  40d9f6:	and    DWORD PTR [ebp-0x62],edi
  40d9f9:	int3   
  40d9fa:	cmp    edi,0x0
  40d9fd:	data16 fisub WORD PTR [esi+0xff8d]
  40da04:	(bad)  
  40da05:	cmp    eax,0xffa52a0e
  40da0a:	add    bh,bh
  40da0c:	(bad)  
  40da0d:	out    dx,eax
  40da0e:	push   edi
  40da0f:	xchg   ecx,eax
  40da10:	and    al,BYTE PTR [ebx+0x2100ffff]
  40da16:	adc    BYTE PTR [ebp-0xff0030],bh
  40da1c:	jmp    FWORD PTR [esi]
  40da1e:	mov    dh,0x53
  40da20:	mov    al,0x0
  40da22:	inc    DWORD PTR [eax]
  40da24:	(bad)  
  40da25:	in     al,dx
  40da26:	aad    0xb1
  40da28:	push   ecx
  40da29:	(bad)  
  40da2a:	inc    DWORD PTR [eax]
  40da2c:	add    BYTE PTR [edi-0x762afe25],ah
  40da32:	add    BYTE PTR [eax],al
  40da34:	add    BYTE PTR [esi-0x6091f0],ah
  40da3a:	inc    DWORD PTR [ebx+0x176f3700]
  40da40:	cdq    
  40da41:	int3   
  40da42:	(bad)  
  40da43:	inc    DWORD PTR [eax]
  40da45:	fist   DWORD PTR [edx+0x48]
  40da48:	push   eax
  40da49:	add    DWORD PTR [eax],0xffffffcc
  40da4c:	jmp    esp
  40da4e:	outs   dx,BYTE PTR ds:[esi]
  40da4f:	fistp  QWORD PTR [ecx-0xffff77]
  40da55:	xor    DWORD PTR [esp+eax*2],esp
  40da58:	or     al,0xff
  40da5a:	(bad)  
  40da5b:	inc    DWORD PTR [eax]
  40da5d:	inc    eax
  40da5e:	sub    DWORD PTR [eax+0x77],0xffffff83
  40da62:	mov    esp,ecx
  40da64:	jmp    FWORD PTR [ecx+ecx*1]
  40da67:	adc    bl,cl
  40da69:	cmp    edi,0xffffffcc
  40da6c:	add    BYTE PTR [eax],dl
  40da6e:	adc    ebx,DWORD PTR [edi]
  40da70:	add    edi,edi
  40da72:	(bad)  
  40da73:	inc    DWORD PTR [eax]
  40da75:	sbb    eax,0xff0908ba
  40da7a:	dec    esp
  40da7c:	call   DWORD PTR [ebx+0x58]
  40da7f:	fcmovu st,st(4)
  40da81:	mov    edi,edi
  40da83:	inc    DWORD PTR [ebx-0x2adedb1c]
  40da89:	add    bh,bh
  40da8b:	add    ah,cl
  40da8d:	and    DWORD PTR [esp+esi*1-0xff00f8],0xffffffff
  40da95:	retf   
  40da96:	test   BYTE PTR [eax+0xff00fa],0xff
  40da9d:	xchg   DWORD PTR [esi+edx*2+0x89ffad],esi
  40daa4:	add    BYTE PTR [edi+ebp*8-0x58],dl
  40daa8:	cmp    edi,edi
  40daaa:	int3   
  40daab:	add    bh,bh
  40daad:	fst    QWORD PTR [ecx]
  40daaf:	cmp    DWORD PTR [eax+eax*1+0x5e00ff00],edi
  40dab6:	mov    ds:0xffdfea,eax
  40dabb:	mov    DWORD PTR [eax],eax
  40dabd:	outs   dx,BYTE PTR ds:[esi]
  40dabe:	pop    ss
  40dabf:	mov    bl,0xe7
  40dac1:	(bad)  
  40dac2:	inc    DWORD PTR [ebx+0x1fc17800]
  40dac8:	adc    eax,0xccff00ff
  40dacd:	or     dh,BYTE PTR [esi]
  40dacf:	mov    al,0xe8
  40dad1:	cmp    edi,0x0
  40dad4:	add    BYTE PTR [ecx],ah
  40dad6:	(bad)  
  40dad7:	outs   dx,DWORD PTR ds:[esi]
  40dad8:	pop    edx
  40dad9:	add    BYTE PTR [eax],al
  40dadb:	add    BYTE PTR [eax],al
  40dadd:	test   bh,bh
  40dadf:	stos   BYTE PTR es:[edi],al
  40dae0:	outs   dx,BYTE PTR ds:[esi]
  40dae1:	add    bh,bh
  40dae3:	inc    DWORD PTR [ebx+0x442458c5]
  40dae9:	inc    DWORD PTR [eax]
  40daeb:	mov    edi,edi
  40daed:	int3   
  40daee:	aas    
  40daef:	jmp    0xcc40dbe9
  40daf4:	(bad)  
  40daf5:	mov    esp,0x895ca119
  40dafa:	(bad)  
  40dafb:	inc    DWORD PTR [ebx-0x48b0cbe6]
  40db01:	add    bh,bh
  40db03:	(bad)  
  40db04:	jmp    DWORD PTR [ebp+esi*1+0x21]
  40db08:	xchg   edx,eax
  40db09:	inc    DWORD PTR [eax]
  40db0b:	add    BYTE PTR [ecx+0x3b894d1f],cl
  40db11:	dec    esp
  40db13:	add    bh,bh
  40db15:	bound  ebx,QWORD PTR cs:[edi-0x25]
  40db19:	(bad)  
  40db1a:	dec    esp
  40db1c:	xor    esi,0xffffff93
  40db1f:	xor    eax,DWORD PTR [edi-0x1]
  40db22:	add    DWORD PTR [ebx+0x2b67a83],0xffffffe2
  40db29:	(bad)  
  40db2a:	(bad)  
  40db2b:	inc    DWORD PTR [ebx+0x200a4656]
  40db31:	inc    DWORD PTR [ebx-0x5c7e0000]
  40db37:	sbb    eax,0xffffcc24
  40db3c:	inc    DWORD PTR [edx-0xc72797]
  40db42:	add    bh,bh
  40db44:	add    DWORD PTR [ecx+0x38216d],0xffffffff
  40db4b:	mov    DWORD PTR [eax],eax
  40db4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4e:	stos   BYTE PTR es:[edi],al
  40db4f:	daa    
  40db50:	in     al,0xff
  40db52:	add    BYTE PTR [ebx-0x55c92034],al
  40db58:	bound  eax,QWORD PTR [ebx+0x18ff8983]
  40db5e:	adc    DWORD PTR [ebp+0x41],esp
  40db61:	add    BYTE PTR [ebx+0x8c9ffff],al
  40db67:	mov    dh,0xe0
  40db69:	int3   
  40db6a:	inc    DWORD PTR [ebx+0x76c921ff]
  40db70:	push   edi
  40db71:	int3   
  40db72:	(bad)  
  40db73:	(bad)  
  40db74:	push   DWORD PTR [edx-0xfaf7f7]
  40db7a:	mov    edi,edi
  40db7c:	add    al,ah
  40db7e:	out    dx,al
  40db7f:	push   0x7c
  40db81:	add    BYTE PTR [ecx-0x3f010001],cl
  40db87:	out    0xb6,al
  40db89:	(bad)  
  40db8a:	dec    esp
  40db8c:	int3   
  40db8d:	push   ecx
  40db8e:	push   0xffffff8f
  40db90:	sbb    edi,edi
  40db92:	(bad)  
  40db93:	inc    DWORD PTR [eax]
  40db95:	fwait
  40db96:	or     DWORD PTR [eax-0x7c003a],ecx
  40db9c:	(bad)  
  40db9d:	jnp    0x40dc0b
  40db9f:	mov    eax,?
  40dba1:	add    BYTE PTR [ebx-0x68c30001],al
  40dba7:	push   0xff83da
  40dbac:	add    BYTE PTR [edx],bl
  40dbae:	dec    ecx
  40dbaf:	lds    esi,FWORD PTR [edi]
  40dbb1:	add    BYTE PTR [eax],al
  40dbb3:	add    BYTE PTR [ebx+0x2bec1582],al
  40dbb9:	int3   
  40dbba:	add    BYTE PTR [ebx-0x256ca400],al
  40dbc0:	das    
  40dbc1:	int3   
  40dbc2:	(bad)  
  40dbc3:	(bad)  
  40dbc4:	inc    DWORD PTR [ecx+0xf364f8]
  40dbca:	add    bh,bh
  40dbcc:	int3   
  40dbcd:	lds    esp,FWORD PTR ds:0x308a
  40dbd3:	add    BYTE PTR [ebx-0xfb01b2f],al
  40dbd9:	int3   
  40dbda:	(bad)  
  40dbdb:	inc    DWORD PTR [ebx+0x3260e084]
  40dbe1:	int3   
  40dbe2:	add    bh,bh
  40dbe4:	sub    DWORD PTR [edi+0x0],0x66
  40dbe8:	js     0x40dbea
  40dbea:	add    bh,bh
  40dbec:	int3   
  40dbed:	mov    cl,al
  40dbef:	add    eax,DWORD PTR [ecx]
  40dbf1:	inc    DWORD PTR [eax]
  40dbf3:	inc    DWORD PTR [ebx+0x2f382ebc]
  40dbf9:	add    DWORD PTR [ebx+0x7708ff00],0xffffff96
  40dc00:	adc    eax,0xff00ff
  40dc05:	sbb    al,0x2a
  40dc07:	add    BYTE PTR [ebx],bh
  40dc09:	add    DWORD PTR [eax],0xffffff89
  40dc0c:	jmp    DWORD PTR [ecx-0x4bf414]
  40dc12:	inc    DWORD PTR [eax]
  40dc14:	dec    DWORD PTR [eax-0x761336c6]
  40dc1a:	add    bh,bh
  40dc1c:	(bad)  
  40dc1d:	cmp    cl,ah
  40dc1f:	sub    ah,BYTE PTR [eax-0x1]
  40dc22:	int3   
  40dc23:	dec    esp
  40dc25:	mov    ch,dh
  40dc27:	add    dl,bl
  40dc29:	inc    DWORD PTR [ebx-0x23f3ff01]
  40dc2f:	mov    BYTE PTR [ebx-0x100],0xe3
  40dc36:	test   DWORD PTR [esi],edx
  40dc38:	jl     0x40dc39
  40dc3a:	add    bh,bh
  40dc3c:	add    ebp,0xffffff8a
  40dc3f:	xchg   esi,eax
  40dc40:	test   DWORD PTR [ebx+0x5cff00ff],0x33f5f
  40dc4a:	dec    DWORD PTR [ecx-0x1b9f2d01]
  40dc50:	stc    
  40dc51:	add    DWORD PTR [eax],0xffffff83
  40dc54:	mov    DWORD PTR [esi],ebx
  40dc56:	add    bl,BYTE PTR [edx]
  40dc58:	(bad)  
  40dc5b:	dec    esp
  40dc5d:	pop    ecx
  40dc5e:	push   ebp
  40dc5f:	jmp    0x40dcac
  40dc61:	inc    DWORD PTR [eax]
  40dc63:	add    bh,bh
  40dc65:	inc    esi
  40dc66:	cmp    ch,BYTE PTR [ebx+0x4c]
  40dc69:	cmp    edi,0xffffffff
  40dc6c:	(bad)  
  40dc6d:	cmp    edi,edi
  40dc6f:	sbb    eax,0xffff00ec
  40dc74:	add    BYTE PTR [esi],al
  40dc76:	inc    ecx
  40dc77:	jmp    0x40dc39
  40dc79:	(bad)  
  40dc7a:	(bad)  
  40dc7b:	(bad)  
  40dc7c:	jmp    FWORD PTR [eax+0x61]
  40dc7f:	mov    dl,0x3c
  40dc81:	add    bh,bh
  40dc83:	inc    DWORD PTR [eax]
  40dc85:	mov    esp,0xff3678a2
  40dc8a:	add    bh,bh
  40dc8c:	inc    DWORD PTR [edi+0x13]
  40dc8f:	add    eax,0xff83ff83
  40dc94:	jmp    FWORD PTR [esi-0x76e584cb]
  40dc9a:	int3   
  40dc9b:	add    bh,bh
  40dc9d:	iret   
  40dc9e:	call   0x13fe8ab
  40dca3:	(bad)  
  40dca4:	call   FWORD PTR [ebp-0x1e69be]
  40dcaa:	add    BYTE PTR [eax],al
  40dcac:	call   DWORD PTR [edi+0x65]
  40dcaf:	push   cs
  40dcb0:	cmp    bh,0xff
  40dcb3:	add    bh,bh
  40dcb5:	xchg   esi,eax
  40dcb6:	xor    ebp,DWORD PTR [ebp-0xbb]
  40dcbc:	call   FWORD PTR ds:0xcccd0a02
  40dcc2:	add    bh,bh
  40dcc4:	jmp    ebp
  40dcc6:	aaa    
  40dcc7:	push   cs
  40dcc8:	mov    edx,0xffff89ff
  40dccd:	in     al,dx
  40dcce:	ins    DWORD PTR es:[edi],dx
  40dccf:	jecxz  0x40dc87
  40dcd1:	(bad)  
  40dcd2:	dec    DWORD PTR [ecx+0x4553af00]
  40dcd8:	in     eax,dx
  40dcd9:	int3   
  40dcda:	add    BYTE PTR [ebx-0x6a331001],al
  40dce0:	sub    DWORD PTR [eax],eax
  40dce2:	int3   
  40dce3:	(bad)  
  40dce4:	dec    DWORD PTR [edi-0x545c2c]
  40dcea:	inc    DWORD PTR [eax]
  40dcec:	int3   
  40dced:	xchg   DWORD PTR [ebx-0x13],edx
  40dcf0:	aam    0x83
  40dcf2:	add    BYTE PTR [eax],al
  40dcf4:	int3   
  40dcf5:	imul   ebx,DWORD PTR [esp+ecx*2],0x11
  40dcf9:	inc    DWORD PTR [eax]
  40dcfb:	add    DWORD PTR [ebx-0x7e034bee],0x0
  40dd02:	add    bh,bh
  40dd04:	add    ch,dl
  40dd06:	repnz cmp eax,0xff00ff78
  40dd0c:	jmp    DWORD PTR [edx]
  40dd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd0f:	addr16 adc edi,edi
  40dd12:	int3   
  40dd13:	add    bh,bh
  40dd15:	sbb    al,0x6b
  40dd17:	pusha  
  40dd18:	popf   
  40dd19:	(bad)  
  40dd1a:	dec    DWORD PTR [ecx+0x5e7bd383]
  40dd20:	pop    ebp
  40dd21:	add    bh,bh
  40dd23:	add    BYTE PTR [ebx+0x1e7214f6],al
  40dd29:	int3   
  40dd2a:	int3   
  40dd2b:	dec    DWORD PTR [ecx-0x6498aab1]
  40dd31:	add    ah,cl
  40dd33:	inc    DWORD PTR [ebx+0x2d6a8e35]
  40dd39:	dec    esp
  40dd3b:	add    BYTE PTR [ebx-0x784398f3],al
  40dd41:	cmp    edi,0xffffffff
  40dd44:	int3   
  40dd45:	jb     0x40dd44
  40dd47:	addr16 fmulp st(4),st
  40dd4a:	add    bh,bh
  40dd4c:	call   FWORD PTR [esi-0x1f]
  40dd4f:	in     eax,dx
  40dd50:	or     bh,bh
  40dd52:	add    bh,bh
  40dd54:	int3   
  40dd55:	dec    edi
  40dd56:	in     al,dx
  40dd57:	frstor [ebx]
  40dd59:	dec    esp
  40dd5b:	cmp    edi,0xffffffc2
  40dd5e:	(bad)  
  40dd5f:	sbb    edi,DWORD PTR [ecx-0x1]
  40dd62:	add    BYTE PTR [eax],al
  40dd64:	add    BYTE PTR [ebx],dh
  40dd66:	shl    DWORD PTR [ecx+0x37],0xff
  40dd6a:	inc    DWORD PTR [ebx-0x7c935e00]
  40dd70:	repz (bad) 
  40dd72:	(bad)  
  40dd73:	dec    DWORD PTR [ecx+0x32ee2623]
  40dd79:	inc    DWORD PTR [ebx+0x4c6d00ff]
  40dd7f:	loope  0x40dd2f
  40dd81:	add    DWORD PTR [ebx+0x1c32ffff],0xa
  40dd88:	dec    eax
  40dd89:	add    BYTE PTR [eax],al
  40dd8b:	add    bh,bh
  40dd8d:	inc    esp
  40dd8e:	pop    edx
  40dd8f:	jns    0x40dd4f
  40dd91:	add    bh,bh
  40dd93:	inc    DWORD PTR [eax]
  40dd95:	sbb    DWORD PTR ds:0x83ff79bb,0x0
  40dd9c:	push   DWORD PTR [ecx-0x7cff4834]
  40dda2:	std    
  40dda3:	inc    DWORD PTR [ebx-0x679c22]
  40dda9:	push   ds
  40ddaa:	call   DWORD PTR [esp+ecx*2+0xb689]
  40ddb1:	adc    edx,0xffffffff
  40ddb4:	add    BYTE PTR [edx+0x2489b0ad],ch
  40ddba:	add    BYTE PTR [eax-0x1c],dh
  40ddbd:	mov    DWORD PTR [ebp+0x0],eax
  40ddc0:	add    bh,bh
  40ddc2:	retf   
  40ddc3:	(bad)  
  40ddc4:	(bad)  
  40ddc5:	fild   DWORD PTR [eax-0x760c7641]
  40ddcb:	jne    0x40ddc7
  40ddcd:	inc    DWORD PTR [ebx-0x7d]
  40ddd0:	mov    DWORD PTR [eax],eax
  40ddd2:	mov    ?,edi
  40ddd4:	mov    ebx,esi
  40ddd6:	iret   
  40ddd7:	(bad)  
  40ddd8:	inc    DWORD PTR [ebx-0x77]
  40dddb:	je     0x40de51
  40dddd:	mov    DWORD PTR [edi-0x1],eax
  40dde0:	inc    DWORD PTR [eax]
  40dde2:	out    dx,eax
  40dde3:	add    bh,bh
  40dde5:	cmp    dh,BYTE PTR [esi]
  40dde7:	ins    BYTE PTR es:[edi],dx
  40dde8:	jmp    DWORD PTR [ecx-0x34]
  40ddeb:	mov    ?,WORD PTR [eax+0x0]
  40ddee:	cmp    al,0xff
  40ddf0:	(bad)  
  40ddf1:	push   DWORD PTR [eax+eax*1-0x1]
  40ddf5:	jecxz  0x40dd91
  40ddf7:	sbb    al,BYTE PTR [ebx+0x44088355]
  40ddfd:	inc    DWORD PTR [eax+0x7aff0000]
  40de03:	inc    DWORD PTR [eax]
  40de05:	jmp    0xf783:0x62ff7885
  40de0c:	dec    edx
  40de0d:	call   FWORD PTR [edx]
  40de0f:	add    BYTE PTR [eax],al
  40de11:	cmp    DWORD PTR [ebx-0x1],0xffffff83
  40de15:	xchg   ecx,eax
  40de16:	out    dx,eax
  40de17:	ret    0x8e00
  40de1a:	add    BYTE PTR [ecx-0xbeff90],bh
  40de20:	inc    DWORD PTR [ebx-0x7900ffdc]
  40de26:	inc    ebp
  40de27:	xchg   edi,eax
  40de28:	cmp    DWORD PTR [eax+0x297eff],0x28
  40de2f:	(bad)  
  40de30:	dec    DWORD PTR [ecx+0x4bffff1a]
  40de36:	add    BYTE PTR es:[eax],0x97
  40de3a:	(bad)  
  40de3b:	jg     0x40deaa
  40de3d:	jmp    FWORD PTR [edx]
  40de3f:	add    BYTE PTR [eax],al
  40de41:	int3   
  40de42:	mov    dl,0x0
  40de44:	add    BYTE PTR [ebx+0x1c],al
  40de47:	and    al,0xff
  40de49:	pop    ss
  40de4a:	cmp    DWORD PTR [eax],0x4e
  40de4d:	add    BYTE PTR [edi+edi*8-0x8a3400],cl
  40de54:	add    BYTE PTR [esi],dh
  40de56:	loopne 0x40ddda
  40de58:	(bad)  
  40de59:	cmp    al,0xff
  40de5b:	adc    edx,DWORD PTR [eax+0x0]
  40de5e:	and    al,BYTE PTR [ebx-0x33e70077]
  40de64:	int3   
  40de65:	lods   al,BYTE PTR ds:[esi]
  40de66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de67:	add    DWORD PTR [eax],eax
  40de69:	lods   al,BYTE PTR ds:[esi]
  40de6a:	sbb    DWORD PTR [edx+ebx*4],0x0
  40de6e:	ret    0xff
  40de71:	call   DWORD PTR [ebp-0x1]
  40de74:	add    BYTE PTR [esp+edi*8],dh
  40de77:	ja     0x40de78
  40de79:	add    edi,edi
  40de7b:	enter  0x11,0x21
  40de7f:	inc    DWORD PTR [eax]
  40de81:	push   DWORD PTR [ebp-0x18cf0077]
  40de87:	(bad)  
  40de88:	push   DWORD PTR [ecx-0x1]
  40de8b:	repz mov edx,0xb1ff
  40de91:	adc    ecx,0xffffffff
  40de94:	call   FWORD PTR [esi]
  40de96:	loop   0x40de27
  40de98:	call   DWORD PTR [esi-0x2dd47d]
  40de9e:	mov    esi,0x8b89ffff
  40dea3:	inc    DWORD PTR [eax]
  40dea5:	outs   dx,BYTE PTR ds:[esi]
  40dea6:	scas   eax,DWORD PTR es:[edi]
  40dea7:	add    DWORD PTR [eax],0x60e70081
  40dead:	sub    eax,0xffffffff
  40deb0:	add    BYTE PTR [ecx+0x7c00002f],cl
  40deb6:	std    
  40deb7:	jecxz  0x40de3c
  40deb9:	push   DWORD PTR cs:[ebx]
  40debc:	fwait
  40debd:	add    al,ch
  40debf:	mov    DWORD PTR [ecx-0x33ff1f01],ecx
  40dec5:	xchg   ebp,eax
  40dec6:	adc    bl,BYTE PTR [esi]
  40dec8:	push   esi
  40deca:	call   ebx
  40decc:	mov    ?,edi
  40dece:	pop    ds
  40decf:	int3   
  40ded0:	inc    DWORD PTR [eax]
  40ded2:	push   cs
  40ded3:	add    bh,bh
  40ded5:	test   DWORD PTR [eax-0xeff38],ecx
  40dedb:	in     eax,0xdd
  40dedd:	push   DWORD PTR [ebx]
  40dedf:	or     DWORD PTR [ecx+0xcc1cff],0x3a
  40dee6:	xor    esi,edi
  40dee8:	inc    DWORD PTR [edi]
  40deea:	call   DWORD PTR [eax+0x2a]
  40deed:	mov    DWORD PTR [edx],esp
  40deef:	add    BYTE PTR [eax],al
  40def1:	jmp    DWORD PTR [ebx+0x0]
  40def4:	add    BYTE PTR [esi-0x4500b58b],dh
  40defa:	or     esp,0x54
  40defd:	inc    esi
  40deff:	inc    DWORD PTR [eax]
  40df01:	int3   
  40df02:	mov    ds:0x19eeff00,al
  40df07:	pop    edx
  40df08:	or     DWORD PTR [ecx],0xffffffff
  40df0b:	sub    bl,BYTE PTR [ecx-0x1]
  40df0e:	add    al,0x89
  40df10:	(bad)  
  40df11:	jmp    DWORD PTR [edx+0x2a968300]
  40df17:	into   
  40df18:	(bad)  
  40df19:	mov    edi,0xff60c700
  40df1e:	lock or DWORD PTR [ecx+0xff4b00],0x4a
  40df26:	push   cs
  40df27:	mov    ?,edi
  40df29:	xor    bh,bh
  40df2b:	xor    bh,cl
  40df2d:	add    BYTE PTR [esi-0x7d],cl
  40df30:	int3   
  40df31:	sub    DWORD PTR [ecx-0x1],0xffffffcc
  40df35:	pop    ebp
  40df36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df37:	(bad)  
  40df38:	call   DWORD PTR [eax-0x1]
  40df3b:	popf   
  40df3c:	or     eax,0xffe500
  40df41:	call   DWORD PTR [ebp-0xfba0001]
  40df47:	cwde   
  40df48:	inc    DWORD PTR [edx]
  40df4a:	int3   
  40df4b:	out    dx,eax
  40df4c:	sti    
  40df4d:	add    BYTE PTR [eax-0x1],ah
  40df50:	(bad)  
  40df51:	push   DWORD PTR [ebx+0x0]
  40df54:	inc    DWORD PTR [edi]
  40df56:	xchg   ecx,eax
  40df57:	mov    eax,ds:0x2dff3cff
  40df5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5d:	mov    DWORD PTR [edx-0x77760001],ecx
  40df63:	add    DWORD PTR [eax],0x29
  40df66:	sbb    BYTE PTR [esi],al
  40df68:	mov    DWORD PTR [ecx-0x7c8a177d],esp
  40df6e:	xchg   esp,eax
  40df6f:	(bad)  
  40df70:	(bad)  
  40df71:	push   DWORD PTR [ebx]
  40df73:	(bad)  
  40df74:	(bad)  
  40df75:	fld    TBYTE PTR [edx+0x87ffe1]
  40df7b:	cld    
  40df7c:	jge    0x40df01
  40df7e:	fiadd  WORD PTR [eax]
  40df80:	mov    esp,ecx
  40df82:	adc    eax,0x2ec2ccff
  40df87:	enter  0x2000,0x0
  40df8b:	or     dh,BYTE PTR [esi-0x1f7d]
  40df91:	push   DWORD PTR [eax+0x6dffffff]
  40df97:	lds    eax,FWORD PTR [eax]
  40df99:	add    al,0xff
  40df9b:	(bad)
  40df9e:	mov    ecx,0xe5ffff00
  40dfa3:	add    bh,bh
  40dfa5:	lds    esp,FWORD PTR [ecx+0x9e89bd]
  40dfab:	and    eax,0xff83c5
  40dfb0:	inc    DWORD PTR [eax]
  40dfb2:	jbe    0x40df37
  40dfb4:	add    dl,bh
  40dfb6:	ret    
  40dfb7:	sub    al,BYTE PTR [eax]
  40dfb9:	retf   
  40dfba:	add    ebx,0xffffffd5
  40dfbd:	inc    esi
  40dfbf:	or     DWORD PTR [ecx+0xfff400],0x65
  40dfc6:	aam    0xa
  40dfc8:	dec    DWORD PTR [ebx-0x84d400]
  40dfce:	sub    edi,edi
  40dfd0:	(bad)  
  40dfd1:	call   FWORD PTR [ebp+0x0]
  40dfd4:	and    DWORD PTR [esi],0xffffff87
  40dfd7:	dec    esp
  40dfd8:	jmp    FWORD PTR ds:0x83667683
  40dfde:	inc    esp
  40dfdf:	add    bh,bh
  40dfe1:	sub    esp,0xffffff83
  40dfe4:	jmp    eax
  40dfe6:	test   bh,bh
  40dfe8:	call   FWORD PTR [esi-0x1]
  40dfeb:	scas   al,BYTE PTR es:[edi]
  40dfec:	push   cs
  40dfed:	mov    DWORD PTR [eax-0x77],esi
  40dff0:	int3   
  40dff1:	call   DWORD PTR [ecx]
  40dff3:	mov    edi,edi
  40dff5:	mov    DWORD PTR [esi],ebx
  40dff7:	xor    al,0xff
  40dff9:	fwait
  40dffa:	add    al,dh
  40dffc:	call   0x400600
  40e001:	sub    DWORD PTR [ecx+0x0],0x0
  40e005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e006:	fwait
  40e007:	adc    al,0xff
  40e009:	in     al,0x0
  40e00b:	(bad)  
  40e00c:	ins    DWORD PTR es:[edi],dx
  40e00d:	push   DWORD PTR [esi]
  40e00f:	add    bh,bh
  40e011:	add    BYTE PTR [edx-0x1a220001],ah
  40e017:	sbb    BYTE PTR [eax],al
  40e019:	stos   BYTE PTR es:[edi],al
  40e01a:	add    ah,bl
  40e01c:	out    0xff,eax
  40e01e:	mov    BYTE PTR [eax],al
  40e020:	inc    DWORD PTR [ebx-0x5a00335c]
  40e026:	inc    edi
  40e027:	lods   al,BYTE PTR ds:[esi]
  40e028:	add    BYTE PTR [ebp+0x40b000],dh
  40e02e:	jp     0x40e030
  40e030:	cmp    edi,0x65
  40e033:	add    bh,bh
  40e035:	lds    eax,FWORD PTR [ebx]
  40e037:	ja     0x40e039
  40e039:	sar    edi,0x13
  40e03c:	dec    DWORD PTR cs:[ecx-0x28007601]
  40e043:	add    BYTE PTR [ecx-0xc49e5c],cl
  40e049:	inc    eax
  40e04a:	add    DWORD PTR [ebx],0xfffffff0
  40e04d:	inc    DWORD PTR [eax]
  40e04f:	inc    DWORD PTR [eax]
  40e051:	int3   
  40e052:	inc    BYTE PTR [eax]
  40e054:	push   DWORD PTR [edi-0x6d]
  40e057:	vmovaps ymm7,ymm7
  40e05b:	sbb    BYTE PTR [esp+ecx*8-0x7c00ff24],dh
  40e062:	cwde   
  40e063:	(bad)  
  40e064:	(bad)  
  40e065:	push   DWORD PTR [esi-0x3f]
  40e068:	add    BYTE PTR [ebp+0xf01ff],dh
  40e06e:	sub    edi,edi
  40e070:	add    BYTE PTR [eax],al
  40e072:	adc    al,0x83
  40e074:	add    ecx,0x4c
  40e077:	enter  0x3900,0xff
  40e07b:	cmp    BYTE PTR [esi],ch
  40e07d:	push   DWORD PTR [ecx-0x1]
  40e080:	inc    DWORD PTR [eax]
  40e082:	das    
  40e083:	inc    DWORD PTR [eax]
  40e085:	cs jle 0x40e0f4
  40e088:	sbb    DWORD PTR [eax],0xffffffff
  40e08b:	ror    bh,1
  40e08d:	jmp    FWORD PTR [ebp-0x1]
  40e090:	add    BYTE PTR [eax],al
  40e092:	outs   dx,DWORD PTR ds:[esi]
  40e093:	(bad)  
  40e094:	jmp    FWORD PTR [eax-0x450055dd]
  40e09a:	dec    DWORD PTR [eax-0x12]
  40e09d:	mov    DWORD PTR [edx-0x62ffff77],ebp
  40e0a3:	inc    DWORD PTR [eax]
  40e0a5:	jl     0x40e079
  40e0a7:	repnz add BYTE PTR [ebx+eax*4-0x20],al
  40e0ac:	and    al,0x0
  40e0ae:	iret   
  40e0af:	inc    DWORD PTR [eax]
  40e0b1:	add    BYTE PTR [eax-0x40893301],ch
  40e0b7:	and    cl,ah
  40e0b9:	xlat   BYTE PTR ds:[ebx]
  40e0ba:	add    BYTE PTR ds:0x3d8377,ch
  40e0c0:	(bad)  
  40e0c1:	call   FWORD PTR [eax]
  40e0c3:	(bad)  
  40e0c4:	call   DWORD PTR [eax]
  40e0c6:	adc    ax,WORD PTR [ebx-0x41eff3a]
  40e0cd:	int3   
  40e0ce:	imul   eax,DWORD PTR [eax],0x9800ff
  40e0d4:	adc    DWORD PTR [esi-0x27],0x3a
  40e0d8:	jmp    DWORD PTR [ebx-0x77]
  40e0db:	xchg   ebp,eax
  40e0dc:	pop    edi
  40e0dd:	mov    DWORD PTR [eax-0x1],edi
  40e0e0:	inc    DWORD PTR [ebx+0x1cffff72]
  40e0e6:	adc    cl,BYTE PTR [eax+eax*1+0x36ccff24]
  40e0ed:	jmp    FWORD PTR [ebx]
  40e0ef:	(bad)  
  40e0f0:	dec    DWORD PTR [ecx+0x40ff00af]
  40e0f6:	mov    WORD PTR [eax-0x1],?
  40e0f9:	jns    0x40e0fa
  40e0fb:	cmc    
  40e0fc:	mov    cl,0xff
  40e0fe:	mov    bh,bh
  40e100:	inc    DWORD PTR [eax]
  40e102:	jg     0x40e103
  40e104:	inc    DWORD PTR [eax-0x16002778]
  40e10a:	mov    DWORD PTR [edx],esi
  40e10c:	jg     0x40e10d
  40e10e:	add    bh,bh
  40e110:	cmp    edi,0xffffffc1
  40e113:	cmp    edi,0xffffffd1
  40e116:	pop    ecx
  40e117:	cmp    bh,bh
  40e119:	push   ss
  40e11a:	call   FWORD PTR [edi+ebx*4-0x76006400]
  40e121:	int3   
  40e122:	daa    
  40e123:	add    DWORD PTR [eax],0xffffffd3
  40e126:	or     eax,0xff4fffa4
  40e12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e12d:	dec    DWORD PTR [ebp-0x2a00ff01]
  40e133:	add    bh,bh
  40e135:	inc    ebx
  40e136:	loope  0x40e1a6
  40e138:	inc    DWORD PTR [eax-0x7ccbfc34]
  40e13e:	sub    edi,edi
  40e140:	int3   
  40e141:	int3   
  40e142:	cmp    eax,0x6959ff00
  40e147:	mov    eax,0x5ffd1ff
  40e14c:	jge    0x40e0d7
  40e14e:	scas   al,BYTE PTR es:[edi]
  40e14f:	or     esp,0x0
  40e152:	and    BYTE PTR [eax],al
  40e154:	add    BYTE PTR [edx+ebx*8-0x300096],al
  40e15b:	pop    edi
  40e15c:	lea    ecx,[ecx-0x767c00a8]
  40e162:	pop    ds
  40e163:	(bad)  
  40e164:	jmp    FWORD PTR [edi]
  40e166:	ds mov ch,0x0
  40e169:	(bad)  
  40e16a:	dec    DWORD PTR [edx+0x7e]
  40e16d:	mov    DWORD PTR [ecx-0xb00ff01],edi
  40e173:	add    BYTE PTR [ecx-0xfa1cd6],cl
  40e179:	jl     0x40e17a
  40e17b:	leave  
  40e17c:	call   0xccc43a80
  40e181:	dec    DWORD PTR [edi+edi*8+0x0]
  40e185:	push   edx
  40e186:	fcom   DWORD PTR [ebx+0x0]
  40e189:	sub    eax,0xcc8973ff
  40e18e:	lock (bad) 
  40e190:	dec    DWORD PTR [ecx+0x2f838327]
  40e196:	xchg   ebp,ecx
  40e198:	add    BYTE PTR [ebp-0x1],dl
  40e19b:	shl    DWORD PTR [edx-0x6a01],0xff
  40e1a2:	pop    edi
  40e1a3:	inc    DWORD PTR [eax]
  40e1a5:	int    0x2c
  40e1a7:	addr16 or eax,0xffffffff
  40e1ab:	cmp    BYTE PTR [ecx+0x0],ah
  40e1ae:	jmp    0xc041aeb2
  40e1b3:	cmp    edi,0x4
  40e1b6:	jne    0x40e189
  40e1b8:	mov    DWORD PTR [edx+0x432900],ecx
  40e1be:	xchg   esp,eax
  40e1bf:	cmp    edi,0xffffffff
  40e1c2:	ret    0x83
  40e1c5:	mov    ah,0xb9
  40e1c7:	push   edx
  40e1c8:	xor    DWORD PTR [edi+0xdb3100],0xffffffbc
  40e1cf:	add    ah,cl
  40e1d1:	(bad)  
  40e1d2:	cmp    al,0xff
  40e1d4:	add    cl,ch
  40e1d6:	xchg   esi,eax
  40e1d7:	push   edi
  40e1d8:	call   ebx
  40e1da:	add    BYTE PTR [esi+0x16],cl
  40e1dd:	dec    DWORD PTR [esi-0x1]
  40e1e0:	add    bh,bh
  40e1e2:	adc    edi,edi
  40e1e4:	inc    DWORD PTR [esi-0x6f00d93f]
  40e1ea:	call   DWORD PTR [ebx+ecx*4-0x4f01]
  40e1f1:	call   DWORD PTR [edi-0x7d]
  40e1f4:	mov    DWORD PTR [eax],esp
  40e1f6:	fxch   st(4)
  40e1f8:	add    BYTE PTR [edx],cl
  40e1fa:	mov    edx,esp
  40e1fc:	add    BYTE PTR [ebx-0x333a],0x56
  40e203:	add    DWORD PTR [eax],0xffffffc8
  40e206:	push   esi
  40e207:	sub    al,0xff
  40e209:	cmp    BYTE PTR [ecx-0x460048f1],cl
  40e20f:	dec    DWORD PTR [ecx-0x7c8f01]
  40e215:	loope  0x40e28b
  40e217:	xchg   bh,bh
  40e219:	adc    al,0xcc
  40e21b:	stos   BYTE PTR es:[edi],al
  40e21c:	aam    0x83
  40e21e:	nop
  40e21f:	add    bh,bh
  40e221:	jmp    esi
  40e223:	add    bh,bh
  40e225:	pop    edi
  40e226:	(bad)  
  40e227:	cmp    eax,0x8bff8fcc
  40e22c:	sbb    eax,0xffccb089
  40e231:	jmp    FWORD PTR [eax+0xd43ff83]
  40e237:	jo     0x40e238
  40e239:	(bad)  
  40e23a:	push   DWORD PTR [edx]
  40e23c:	dec    edx
  40e23d:	add    BYTE PTR [edi-0x1],dh
  40e240:	add    DWORD PTR [ebx+0x29ffff3b],0xffffff90
  40e247:	rol    DWORD PTR [eax],cl
  40e249:	dec    eax
  40e24a:	add    BYTE PTR ds:0xff23ffe9,al
  40e250:	add    bh,bh
  40e252:	adc    eax,DWORD PTR [eax]
  40e254:	add    BYTE PTR [eax+0x4f],ch
  40e257:	mov    cl,0xff
  40e259:	sbb    DWORD PTR [eax],eax
  40e25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e25c:	or     bh,bh
  40e25e:	fiadd  WORD PTR [eax]
  40e260:	(bad)  
  40e261:	(bad)  
  40e262:	fld    DWORD PTR [eax]
  40e264:	add    cl,al
  40e266:	(bad)  
  40e267:	int    0xff
  40e269:	pop    eax
  40e26a:	add    BYTE PTR [edi-0x1c7c56],al
  40e270:	mov    edi,edi
  40e272:	xchg   DWORD PTR [ecx+0x5c1e4aff],ecx
  40e278:	inc    DWORD PTR [edx-0x1]
  40e27b:	add    cl,BYTE PTR [esi]
  40e27d:	sbb    DWORD PTR [esi],0xffffffff
  40e280:	int3   
  40e281:	add    bh,bl
  40e283:	inc    DWORD PTR [eax]
  40e285:	inc    esi
  40e286:	inc    esi
  40e287:	popa   
  40e288:	int3   
  40e289:	and    al,0xff
  40e28b:	mov    esp,0x990047
  40e290:	inc    DWORD PTR [eax]
  40e292:	jg     0x40e294
  40e294:	jmp    DWORD PTR [ebx+0xdffc5cb]
  40e29a:	xor    DWORD PTR [edi],0xffffffe4
  40e29d:	mov    DWORD PTR [eax+eax*1-0x76510000],esi
  40e2a4:	inc    DWORD PTR [edi+0x1c0032ec]
  40e2aa:	call   eax
  40e2ac:	mov    ds:0xff835e83,eax
  40e2b1:	push   DWORD PTR [edi+edi*8-0x1]
  40e2b5:	adc    BYTE PTR es:[ebx],bh
  40e2b8:	push   DWORD PTR [edi+edi*8-0x16]
  40e2bc:	push   ebx
  40e2bd:	(bad)  
  40e2be:	ds (bad) 
  40e2c0:	inc    DWORD PTR [ebx+0x72ff00c6]
  40e2c6:	sub    cl,BYTE PTR ds:0x1dcc5f83
  40e2cc:	mov    dh,0x83
  40e2ce:	imul   edi,edi,0xffffffff
  40e2d1:	add    BYTE PTR [edx+0x0],dl
  40e2d4:	jmp    FWORD PTR [esi+0x22]
  40e2d7:	adc    edi,edi
  40e2d9:	test   bh,bh
  40e2db:	jle    0x40e303
  40e2dd:	inc    DWORD PTR [edi+edi*8-0x7ceb0001]
  40e2e4:	add    BYTE PTR [edi+0x1c890be7],ah
  40e2ea:	int3   
  40e2eb:	cdq    
  40e2ec:	xor    DWORD PTR [eax],eax
  40e2ee:	retf   
  40e2ef:	(bad)  
  40e2f0:	inc    DWORD PTR [eax]
  40e2f2:	xchg   ecx,eax
  40e2f3:	mov    edi,edi
  40e2f5:	xor    bh,ah
  40e2f7:	les    ecx,FWORD PTR [ecx+0x5d3ccc2d]
  40e2fd:	add    DWORD PTR [ebx-0x52ffff01],0xffffffff
  40e304:	add    BYTE PTR [edx],bh
  40e306:	les    esp,FWORD PTR [edi]
  40e308:	jmp    DWORD PTR ds:0xfff974ff
  40e30e:	add    edi,edi
  40e310:	add    BYTE PTR [ecx+0x68ffff58],cl
  40e316:	lahf   
  40e317:	out    0xff,al
  40e319:	arpl   sp,cx
  40e31b:	in     eax,dx
  40e31c:	mov    es,WORD PTR [eax]
  40e31e:	retf   0xffff
  40e321:	add    BYTE PTR [edx],ch
  40e323:	inc    DWORD PTR [eax]
  40e325:	icebp  
  40e326:	out    dx,al
  40e327:	dec    esp
  40e328:	jmp    DWORD PTR [edx-0x7d]
  40e32b:	pop    ebp
  40e32c:	js     0x40e32d
  40e32e:	and    al,BYTE PTR [ebx-0x7ce30001]
  40e334:	cmp    DWORD PTR [ebx+ebp*1],0x1f
  40e338:	(bad)  
  40e339:	fdivp  st(7),st
  40e33b:	ins    DWORD PTR es:[edi],dx
  40e33c:	mov    eax,0xff00be00
  40e341:	call   FWORD PTR [ebx+eax*4-0x12400d00]
  40e348:	int3   
  40e349:	cli    
  40e34a:	add    BYTE PTR [ebx+0xb6ff89],al
  40e350:	add    DWORD PTR [ebx-0x1bff0059],0xffffff94
  40e357:	mov    eax,ds:0xc8005183
  40e35c:	jne    0x40e35e
  40e35e:	pushf  
  40e35f:	add    bh,bh
  40e361:	add    BYTE PTR [ecx-0x1],bh
  40e364:	add    BYTE PTR [edx],dl
  40e366:	out    0xb8,al
  40e368:	add    BYTE PTR [edi-0x1],al
  40e36b:	sub    cl,cl
  40e36d:	add    BYTE PTR [edi],al
  40e36f:	(bad)  
  40e370:	inc    DWORD PTR [ebx-0x3200ff62]
  40e376:	in     al,0x70
  40e378:	dec    ebx
  40e37a:	adc    esp,0xb
  40e37d:	xor    DWORD PTR [ecx-0x297c3400],0xffffffff
  40e384:	(bad)  
  40e385:	fisub  DWORD PTR [edx+0xc]
  40e388:	push   eax
  40e38a:	call   DWORD PTR [ebp+0x6e]
  40e38d:	add    BYTE PTR [eax+0x0],al
  40e390:	add    bh,bh
  40e392:	xlat   BYTE PTR ds:[ebx]
  40e393:	(bad)  
  40e394:	dec    DWORD PTR [ecx-0x1a007a30]
  40e39a:	add    BYTE PTR [edx],bh
  40e39c:	pop    edi
  40e39d:	call   DWORD PTR [ecx-0x7d]
  40e3a0:	inc    DWORD PTR [eax]
  40e3a2:	mov    edi,?
  40e3a4:	push   DWORD PTR [ebx+0x2f]
  40e3a7:	mov    bh,0xff
  40e3a9:	jecxz  0x40e3aa
  40e3ab:	pop    eax
  40e3ac:	mov    BYTE PTR [eax],al
  40e3ae:	test   DWORD PTR [eax],0x4d83ff
  40e3b4:	add    DWORD PTR [esp+ebp*2-0x16],0xffffffcc
  40e3b9:	mov    edi,0x83cd6600
  40e3be:	and    edi,edi
  40e3c0:	add    bh,bh
  40e3c2:	mov    edi,0xf55dff00
  40e3c7:	inc    esi
  40e3c8:	add    BYTE PTR [esi-0x1],bh
  40e3cb:	dec    ebp
  40e3cc:	push   DWORD PTR ss:[ebp+0x11ffff00]
  40e3d3:	dec    esp
  40e3d5:	rcl    ebx,cl
  40e3d7:	mov    al,ds:0x50ff1e00
  40e3dc:	push   0xffffb300
  40e3e1:	and    DWORD PTR [eax+eax*1-0x1],0xffffffb3
  40e3e6:	add    eax,0xa7ff13
  40e3eb:	add    eax,0x55ff49
  40e3f0:	add    bh,bh
  40e3f2:	mov    eax,0x28eecc00
  40e3f7:	mov    edi,edi
  40e3f9:	xor    al,0xff
  40e3fb:	xchg   esp,eax
  40e3fc:	je     0x40e381
  40e3fe:	xor    eax,DWORD PTR [eax]
  40e400:	add    bh,bh
  40e402:	push   ds
  40e403:	(bad)  
  40e404:	(bad)  
  40e405:	jl     0x40e3ac
  40e407:	ud0    eax,ecx
  40e40a:	mov    DWORD PTR [edi+0x3b001e],edx
  40e410:	inc    DWORD PTR [eax]
  40e412:	jge    0x40e413
  40e414:	add    BYTE PTR [esi-0x34],bh
  40e417:	fadd   DWORD PTR [eax]
  40e419:	and    edi,edi
  40e41b:	aas    
  40e41c:	adc    eax,DWORD PTR [eax]
  40e41e:	and    eax,0x1b0083ff
  40e423:	cmp    edi,0xfffffff3
  40e426:	mov    edx,0xff8aff0b
  40e42b:	aaa    
  40e42c:	sbb    edi,edi
  40e42e:	aas    
  40e42f:	cmp    edi,0x0
  40e432:	xor    al,0x0
  40e434:	jmp    FWORD PTR [esi]
  40e436:	sub    eax,0xff77006e
  40e43b:	aas    
  40e43c:	jmp    0xff:0x7dcc
  40e443:	(bad)  
  40e444:	call   edi
  40e446:	js     0x40e3e5
  40e448:	jmp    DWORD PTR [esi-0x76afdc01]
  40e44e:	sub    eax,0x210000ff
  40e453:	(bad)  
  40e454:	jmp    DWORD PTR [ecx*2+0x1dcc21]
  40e45b:	cmp    ebx,DWORD PTR [edx]
  40e45d:	mov    ebp,esp
  40e45f:	add    BYTE PTR [ebx+0x85ff],al
  40e465:	adc    al,0x18
  40e467:	jl     0x40e469
  40e469:	rol    BYTE PTR [ebx-0x1dff7358],1
  40e46f:	dec    esp
  40e471:	add    BYTE PTR [edi-0x1],ah
  40e474:	add    ah,cl
  40e476:	ja     0x40e401
  40e478:	call   DWORD PTR [eax-0x7677f001]
  40e47e:	and    al,0x0
  40e480:	mov    esp,ecx
  40e482:	xchg   ecx,eax
  40e483:	inc    DWORD PTR [eax]
  40e485:	fdivr  st,st(0)
  40e487:	sar    bh,cl
  40e489:	fwait
  40e48a:	(bad)  
  40e48b:	fistp  WORD PTR [ebx-0x77]
  40e48e:	push   ecx
  40e48f:	(bad)  
  40e490:	dec    esp
  40e492:	or     al,0x89
  40e494:	mov    esp,ecx
  40e496:	fidiv  DWORD PTR [edx-0x7d]
  40e499:	push   ds
  40e49a:	(bad)  
  40e49b:	fldcw  WORD PTR [eax+eax*1-0x330000cb]
  40e4a2:	cli    
  40e4a3:	add    bh,bh
  40e4a5:	lods   eax,DWORD PTR ds:[esi]
  40e4a6:	ret    
  40e4a7:	daa    
  40e4a8:	jmp    esi
  40e4aa:	dec    DWORD PTR [edi-0xb9332f]
  40e4b0:	inc    DWORD PTR [ebx-0x76ff3364]
  40e4b6:	xor    al,0xef
  40e4b8:	add    BYTE PTR [edi+edi*8+0x3c890a93],cl
  40e4bf:	add    BYTE PTR [eax],al
  40e4c1:	call   ebx
  40e4c3:	cmp    edi,0x7
  40e4c6:	adc    esi,edx
  40e4c8:	add    DWORD PTR [esi-0x1],0xffffffdc
  40e4cc:	adc    edi,edi
  40e4ce:	or     edi,edi
  40e4d0:	mov    DWORD PTR [eax],eax
  40e4d2:	jge    0x40e4d3
  40e4d4:	add    BYTE PTR [ebp+0x47ff77a8],al
  40e4da:	cmp    DWORD PTR [edi-0x3d00bc],0xffffffff
  40e4e1:	add    BYTE PTR [eax],bh
  40e4e3:	(bad)  
  40e4e4:	jmp    FWORD PTR [edx-0x6533adb9]
  40e4ea:	jmp    DWORD PTR [eax+0x9fccae]
  40e4f0:	(bad)  
  40e4f1:	jmp    FWORD PTR [eax]
  40e4f3:	add    BYTE PTR [eax],al
  40e4f5:	loope  0x40e48d
  40e4f7:	je     0x40e4f8
  40e4f9:	dec    edi
  40e4fa:	jmp    DWORD PTR [ebp-0x6c007b]
  40e500:	inc    DWORD PTR [eax]
  40e502:	jecxz  0x40e503
  40e504:	push   esp
  40e506:	fiadd  WORD PTR [esi-0x1]
  40e509:	dec    esp
  40e50a:	add    bh,al
  40e50c:	out    dx,eax
  40e50d:	or     DWORD PTR [ebx],0x0
  40e510:	inc    DWORD PTR [ebx+0x7aff897c]
  40e516:	sub    ebx,DWORD PTR [edx]
  40e518:	add    BYTE PTR [ecx-0x339ed200],bl
  40e51e:	sar    edi,cl
  40e520:	(bad)  
  40e521:	dec    DWORD PTR [edi-0x1]
  40e524:	(bad)  
  40e525:	mov    edx,0x2000d0a3
  40e52a:	mov    DWORD PTR [ebx],ecx
  40e52c:	jae    0x40e52e
  40e52e:	(bad)  
  40e52f:	inc    DWORD PTR [ebx-0xff2401]
  40e535:	ins    BYTE PTR es:[edi],dx
  40e536:	ror    DWORD PTR [ebp-0x77],cl
  40e539:	mov    ebp,0xcce45d00
  40e53e:	inc    ebx
  40e53f:	(bad)  
  40e540:	inc    DWORD PTR [eax]
  40e542:	mov    esi,0x4703ffff
  40e547:	retf   
  40e548:	inc    ebp
  40e54a:	inc    ebx
  40e54c:	jmp    0x40b451
  40e551:	add    bh,cl
  40e553:	mov    edi,edi
  40e555:	(bad)  
  40e556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e557:	push   es
  40e558:	(bad)  
  40e559:	jns    0x40e4e4
  40e55b:	push   ss
  40e55c:	lds    eax,FWORD PTR [eax]
  40e55e:	outs   dx,DWORD PTR ds:[esi]
  40e55f:	dec    esp
  40e561:	mov    DWORD PTR [esi],ecx
  40e563:	inc    DWORD PTR [eax]
  40e565:	push   ebp
  40e566:	ror    BYTE PTR [esi+0xa004800],cl
  40e56c:	mov    dh,0x83
  40e56e:	pop    ds
  40e56f:	(bad)  
  40e570:	(bad)  
  40e571:	inc    DWORD PTR [ecx-0x1]
  40e574:	add    dh,cl
  40e576:	jae    0x40e57d
  40e578:	call   FWORD PTR [ecx-0x7cda2a77]
  40e57e:	outs   dx,DWORD PTR ds:[esi]
  40e57f:	dec    DWORD PTR [ecx+0xffa800]
  40e585:	pop    ebp
  40e586:	inc    esp
  40e587:	inc    ebp
  40e588:	add    BYTE PTR [ebx+0x2b9dff],dh
  40e58e:	(bad)  
  40e58f:	inc    DWORD PTR [ebx-0x8f01]
  40e595:	pop    esi
  40e596:	ffree  st(0)
  40e598:	int3   
  40e599:	mov    al,ds:0x42f9ff
  40e59e:	cmp    eax,DWORD PTR [eax]
  40e5a0:	add    DWORD PTR [ebx-0x207c0036],0xffffffc6
  40e5a7:	in     eax,dx
  40e5a8:	add    bl,dh
  40e5aa:	mov    DWORD PTR [ecx-0x94005f],esi
  40e5b0:	cmp    edi,0xffffffa0
  40e5b3:	add    bh,bh
  40e5b5:	loope  0x40e5b4
  40e5b7:	rol    BYTE PTR [eax],0x1e
  40e5ba:	add    BYTE PTR [eax-0x73ff1e],ah
  40e5c0:	add    bh,bh
  40e5c2:	and    edi,edi
  40e5c4:	add    DWORD PTR [eax-0x15],0xffffffa4
  40e5c8:	sbb    DWORD PTR [edi+0x0],0x6f
  40e5cc:	daa    
  40e5cd:	jmp    FWORD PTR ds:0x3a83ffff
  40e5d3:	inc    DWORD PTR [ebx-0x7646f045]
  40e5d9:	scas   al,BYTE PTR es:[edi]
  40e5da:	dec    DWORD PTR [ebx-0x8]
  40e5dd:	add    BYTE PTR [edi-0x1],bl
  40e5e0:	add    DWORD PTR [eax],0x3f
  40e5e3:	int3   
  40e5e4:	inc    DWORD PTR [esp+eiz*8]
  40e5e7:	loope  0x40e5b5
  40e5e9:	mov    bl,0x0
  40e5eb:	rcl    al,0xff
  40e5ee:	mov    ecx,0x31ffffff
  40e5f3:	add    bh,bh
  40e5f5:	push   ebx
  40e5f6:	out    0x7c,al
  40e5f8:	push   edx
  40e5fa:	call   DWORD PTR [esi+ebp*8-0x1]
  40e5fe:	mov    dl,0xff
  40e600:	add    BYTE PTR [ecx-0x7b003400],cl
  40e606:	push   ecx
  40e607:	ins    DWORD PTR es:[edi],dx
  40e608:	jmp    FWORD PTR [edi]
  40e60a:	call   FWORD PTR [edi-0x7b]
  40e60d:	add    BYTE PTR [eax],ch
  40e60f:	mov    DWORD PTR [ebx-0xfff27d],eax
  40e615:	jp     0x40e5cc
  40e617:	iret   
  40e618:	add    BYTE PTR [ecx-0x76d71a01],ch
  40e61e:	xchg   ebx,eax
  40e61f:	add    BYTE PTR [eax],al
  40e621:	mov    DWORD PTR [esi],eax
  40e623:	inc    DWORD PTR [eax]
  40e625:	mov    ecx,edi
  40e627:	cmp    al,BYTE PTR [eax]
  40e629:	jge    0x40e5ae
  40e62b:	push   edi
  40e62c:	scas   eax,DWORD PTR es:[edi]
  40e62d:	jmp    FWORD PTR [ebx-0x34]
  40e630:	(bad)  
  40e631:	jmp    FWORD PTR [ecx+0x4aae83ff]
  40e637:	dec    ecx
  40e638:	add    BYTE PTR [ebp-0xa6ae00],cl
  40e63e:	pop    esp
  40e63f:	mov    edi,edi
  40e641:	inc    DWORD PTR [edx]
  40e643:	(bad)  
  40e644:	inc    DWORD PTR [edx+0x32]
  40e647:	lods   eax,DWORD PTR ds:[esi]
  40e648:	dec    DWORD PTR [edi]
  40e64a:	mov    DWORD PTR [edx+ebx*8-0x2501],edi
  40e651:	(bad)  
  40e652:	mov    edx,0xb9838383
  40e657:	and    eax,0x40ff82ff
  40e65c:	ja     0x40e65d
  40e65e:	sahf   
  40e65f:	dec    esp
  40e661:	adc    esp,0xffffffff
  40e664:	add    BYTE PTR [ebp-0x22],cl
  40e667:	lods   eax,DWORD PTR ds:[esi]
  40e668:	call   FWORD PTR ds:0xff79caff
  40e66e:	mov    DWORD PTR [ecx-0x3a0077],ecx
  40e674:	add    BYTE PTR [ebp-0x71],bl
  40e677:	das    
  40e678:	int3   
  40e679:	in     al,0xcc
  40e67b:	cmc    
  40e67c:	aad    0x89
  40e67e:	mov    bh,bh
  40e680:	(bad)  
  40e681:	jmp    DWORD PTR [esi-0x1]
  40e684:	add    bl,dh
  40e686:	(bad)  
  40e687:	repnz add al,ch
  40e68a:	jmp    DWORD PTR [edx]
  40e68c:	std    
  40e68d:	add    BYTE PTR [eax+0x0],cl
  40e690:	(bad)  
  40e691:	dec    DWORD PTR [eax]
  40e693:	inc    DWORD PTR [eax]
  40e695:	adc    DWORD PTR [edx],ebp
  40e697:	xor    al,0x0
  40e699:	popf   
  40e69a:	call   ebp
  40e69c:	test   BYTE PTR [ecx-0x1],0xce
  40e6a3:	inc    DWORD PTR [eax]
  40e6a5:	xor    al,0x1f
  40e6a7:	inc    eax
  40e6a8:	jmp    DWORD PTR [edi-0x76b8497d]
  40e6ae:	dec    ebx
  40e6af:	inc    DWORD PTR [eax]
  40e6b1:	mov    ecx,ebp
  40e6b3:	add    bh,bh
  40e6b5:	push   esp
  40e6b6:	pop    ecx
  40e6b7:	jne    0x40e6b9
  40e6b9:	push   ds
  40e6ba:	and    edi,0xffffffa5
  40e6bd:	call   FWORD PTR [edi-0x1]
  40e6c0:	cmp    edi,0xffffffa7
  40e6c3:	cmp    edi,0xffffffae
  40e6c6:	and    ch,0x89
  40e6c9:	pop    edi
  40e6ca:	add    DWORD PTR [edx+edi*2+0xff26ff],0xffffffff
  40e6d2:	pushf  
  40e6d3:	add    BYTE PTR [ecx-0x76842e7d],cl
  40e6d9:	popa   
  40e6da:	call   eax
  40e6dc:	mov    al,BYTE PTR [eax]
  40e6de:	(bad)  
  40e6e0:	dec    DWORD PTR [ecx-0x38ff7ca4]
  40e6e6:	iret   
  40e6e7:	stos   BYTE PTR es:[edi],al
  40e6e8:	call   DWORD PTR [ecx-0x1]
  40e6eb:	aas    
  40e6ec:	int    0xff
  40e6ee:	loopne 0x40e6ef
  40e6f0:	dec    DWORD PTR [ecx-0x5b7cff30]
  40e6f6:	mov    ebp,0x89e1ff9c
  40e6fb:	jnp    0x40e74a
  40e6fd:	call   FWORD PTR [eax+eax*1-0x1]
  40e701:	add    BYTE PTR [edx-0x1],bl
  40e704:	add    BYTE PTR [eax+0x2900c31c],cl
  40e70a:	add    BYTE PTR [ecx-0xdb00fd],ch
  40e710:	add    bh,bh
  40e712:	ror    ah,cl
  40e714:	(bad)  
  40e715:	jl     0x40e747
  40e717:	cmc    
  40e718:	inc    DWORD PTR [eax+eax*1-0x5100b400]
  40e71f:	mov    esp,ecx
  40e721:	sbb    DWORD PTR [eax-0x42917d00],0x32
  40e728:	mov    DWORD PTR [eax],edx
  40e72a:	add    ah,dl
  40e72c:	jb     0x40e6b1
  40e72e:	enter  0xff00,0xff
  40e732:	leave  
  40e733:	int3   
  40e734:	mov    DWORD PTR [ebp-0x51ffcdfb],eax
  40e73a:	add    cl,ch
  40e73c:	idiv   bh
  40e73e:	jle    0x40e70c
  40e740:	inc    DWORD PTR [eax]
  40e742:	pusha  
  40e743:	dec    esp
  40e745:	push   ebp
  40e746:	sbb    DWORD PTR [ecx-0x57ff8a01],edi
  40e74c:	dec    edx
  40e74d:	int3   
  40e74e:	mov    esi,0x13ffff00
  40e753:	add    BYTE PTR [eax],al
  40e755:	ret    
  40e756:	es cmp bh,bh
  40e759:	rol    BYTE PTR [ebx+0x2c009cad],cl
  40e75f:	(bad)  
  40e760:	(bad)  
  40e761:	(bad)  
  40e762:	cli    
  40e763:	add    BYTE PTR [ebx-0x4686b7],al
  40e769:	pop    edi
  40e76a:	dec    DWORD PTR [ecx+ebx*2+0xffbb89]
  40e771:	adc    DWORD PTR [ebx-0x79b3400],0xffffffa2
  40e778:	(bad)  
  40e779:	mov    eax,0xffc6daff
  40e77e:	fild   DWORD PTR [eax]
  40e780:	(bad)  
  40e781:	push   DWORD PTR [edi+edi*8+0x0]
  40e785:	shl    BYTE PTR [edx-0x42],0x83
  40e789:	mov    ebp,0x890c63ff
  40e78e:	daa    
  40e78f:	int3   
  40e790:	dec    esp
  40e792:	and    al,0xff
  40e794:	xor    DWORD PTR [edi+0x3b00c3aa],0x0
  40e79b:	adc    cl,0xcc
  40e79e:	push   ebx
  40e79f:	add    DWORD PTR [eax],0xffffffff
  40e7a2:	mov    esp,0xcb95ffff
  40e7a7:	sbb    eax,0xbcff9000
  40e7ac:	or     al,0x0
  40e7ae:	dec    edx
  40e7af:	add    DWORD PTR [eax],0xffffffcc
  40e7b2:	mov    edi,0x5fbb8989
  40e7b7:	or     bh,bh
  40e7b9:	inc    ebx
  40e7ba:	add    dh,ah
  40e7bc:	imul   edi,edi,0xffffffc4
  40e7bf:	cmp    edi,0xffffffff
  40e7c2:	sub    bh,bh
  40e7c4:	(bad)  
  40e7c5:	fist   WORD PTR [eax+0x10]
  40e7c8:	(bad)  
  40e7c9:	cmp    edi,edi
  40e7cb:	sti    
  40e7cc:	add    bh,bh
  40e7ce:	and    eax,0x26ff00cc
  40e7d3:	(bad)  
  40e7d4:	call   FWORD PTR [esi+eiz*2]
  40e7d7:	xchg   ebp,eax
  40e7d8:	jmp    FWORD PTR [edi+0x0]
  40e7db:	fistp  DWORD PTR [eax-0x3333d900]
  40e7e1:	int3   
  40e7e2:	dec    ebp
  40e7e3:	add    BYTE PTR [eax],al
  40e7e5:	mov    ss,WORD PTR [eax]
  40e7e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e8:	mov    esi,ebp
  40e7ea:	dec    DWORD PTR [esp+eax*4]
  40e7ed:	push   DWORD PTR [ebx-0x7d]
  40e7f0:	add    bh,bh
  40e7f2:	stos   DWORD PTR es:[edi],eax
  40e7f3:	add    BYTE PTR [ebx+0x15f33],al
  40e7f9:	and    edi,edi
  40e7fb:	inc    edx
  40e7fc:	iret   
  40e7fd:	inc    DWORD PTR [esi+0x0]
  40e800:	mov    DWORD PTR [eax],eax
  40e802:	xor    al,BYTE PTR [eax]
  40e804:	int3   
  40e805:	mov    ebx,0xddff12d3
  40e80a:	add    BYTE PTR [edx+eax*8-0x7cff477d],dh
  40e811:	inc    DWORD PTR [edx+0x0]
  40e814:	dec    DWORD PTR [ecx]
  40e816:	xor    eax,0xfffd00c1
  40e81b:	scas   eax,DWORD PTR es:[edi]
  40e81c:	jl     0x40e81d
  40e81e:	mov    dl,0xff
  40e820:	add    BYTE PTR [eax],al
  40e822:	rol    DWORD PTR [eax],cl
  40e824:	add    BYTE PTR [ecx+0x57003cd9],dl
  40e82a:	mov    DWORD PTR [edi-0xc500f6],ebx
  40e830:	inc    DWORD PTR [eax]
  40e832:	dec    ebx
  40e833:	inc    DWORD PTR [ebx+0x101864]
  40e839:	(bad)  
  40e83a:	push   esp
  40e83c:	dec    edi
  40e83d:	add    BYTE PTR [ebp+0x0],ah
  40e840:	inc    DWORD PTR [eax]
  40e842:	call   0x33a6bca
  40e847:	inc    edx
  40e848:	call   DWORD PTR [edx]
  40e84a:	add    BYTE PTR [esi-0x7c310056],dl
  40e850:	add    BYTE PTR [eax],al
  40e852:	cmp    al,BYTE PTR [eax]
  40e854:	xor    DWORD PTR [ebx+0x73ffd1c4],0xffffffff
  40e85b:	lahf   
  40e85c:	cmp    bh,bh
  40e85e:	cmp    bh,0x83
  40e861:	int3   
  40e862:	sub    al,BYTE PTR [ebx+0x2d2ba8ff]
  40e868:	add    BYTE PTR [ebx+eax*4-0x76],al
  40e86c:	pop    ecx
  40e86d:	push   DWORD PTR [eax+eax*1+0xc0ff89]
  40e874:	call   edi
  40e876:	add    BYTE PTR [ecx],al
  40e878:	int3   
  40e879:	sbb    eax,DWORD PTR [eax]
  40e87b:	addr16 add eax,0x8300f7ff
  40e881:	call   FWORD PTR [ebx]
  40e883:	mov    DWORD PTR [ecx-0x114155],ecx
  40e889:	icebp  
  40e88a:	mov    DWORD PTR [edi+edi*2],ecx
  40e88d:	mov    DWORD PTR [edi-0x1],ebx
  40e890:	add    BYTE PTR [eax],al
  40e892:	retf   0xff
  40e895:	xchg   esp,eax
  40e896:	or     bl,BYTE PTR [edx+0x0]
  40e899:	(bad)  
  40e89a:	inc    DWORD PTR [esi+0x21]
  40e89d:	jmp    FWORD PTR [eax]
  40e89f:	dec    esp
  40e8a1:	push   DWORD PTR [eax]
  40e8a3:	inc    DWORD PTR [eax]
  40e8a5:	add    DWORD PTR [esi+ebp*8-0x34],0x9fe6ff27
  40e8ad:	mov    DWORD PTR [eax-0x32ffff01],ecx
  40e8b3:	(bad)  
  40e8b4:	call   FWORD PTR [esi-0x3e00c71e]
  40e8ba:	inc    DWORD PTR [edx]
  40e8bc:	mov    eax,ds:0xff83be89
  40e8c1:	int3   
  40e8c2:	ins    BYTE PTR es:[edi],dx
  40e8c3:	(bad)  
  40e8c4:	inc    eax
  40e8c6:	add    esi,DWORD PTR [edx-0x1]
  40e8c9:	push   edi
  40e8ca:	call   DWORD PTR [ebp-0x3a005c]
  40e8d0:	add    bh,bh
  40e8d2:	ss add bh,bh
  40e8d5:	mov    esi,0x99ff8961
  40e8da:	int3   
  40e8db:	pop    ss
  40e8dc:	add    al,0xcc
  40e8de:	fmul   st(4),st
  40e8e0:	(bad)  
  40e8e1:	jmp    DWORD PTR [ebx-0x16fd0100]
  40e8e7:	scas   al,BYTE PTR es:[edi]
  40e8e8:	inc    ebp
  40e8ea:	add    dl,al
  40e8ec:	int3   
  40e8ed:	sub    DWORD PTR [edx-0x22000100],0xffffff89
  40e8f4:	push   DWORD PTR [edx+0x6b]
  40e8f7:	push   ecx
  40e8f8:	push   DWORD PTR [eax+eax*1-0x5e]
  40e8fc:	call   0xe6ff:0xff007bff
  40e903:	mov    DWORD PTR [eax],eax
  40e905:	add    BYTE PTR ds:0xff3300e0,cl
  40e90b:	sbb    BYTE PTR [ebp-0x7d],cl
  40e90e:	and    al,0x0
  40e910:	add    bh,bh
  40e912:	pop    ds
  40e913:	add    BYTE PTR [ecx-0x1d4e0e],cl
  40e919:	jmp    0x5b:0xff2090ff
  40e920:	(bad)  
  40e921:	call   DWORD PTR [ebx+0x0]
  40e924:	mov    ebp,edi
  40e926:	div    DWORD PTR [edi-0x7d]
  40e929:	in     eax,0x0
  40e92b:	push   ds
  40e92c:	sub    bh,bh
  40e92e:	sar    bh,cl
  40e930:	int3   
  40e931:	add    al,bh
  40e933:	int3   
  40e934:	add    BYTE PTR [eax],bl
  40e936:	or     al,0x21
  40e938:	cmp    DWORD PTR [edi-0x7d],0xffffffb3
  40e93c:	inc    ecx
  40e93d:	(bad)  
  40e93e:	mov    esi,0xd2830000
  40e943:	add    BYTE PTR [eax],al
  40e945:	dec    esp
  40e946:	push   edi
  40e947:	aad    0xff
  40e949:	inc    DWORD PTR gs:[ecx+0x31]
  40e94d:	inc    DWORD PTR [ecx-0x5ff0001]
  40e953:	int3   
  40e954:	add    al,cl
  40e956:	pop    edx
  40e957:	lods   al,BYTE PTR ds:[esi]
  40e958:	or     ecx,0x0
  40e95b:	inc    esp
  40e95c:	(bad)  
  40e95d:	call   FWORD PTR [esi+0x6aff00cc]
  40e963:	inc    DWORD PTR [eax]
  40e965:	loopne 0x40e90e
  40e967:	sbb    eax,0x7c896383
  40e96c:	mov    ds:0xff834d83,al
  40e971:	sbb    DWORD PTR [edi-0x7d],0xffffffff
  40e975:	dec    ebp
  40e976:	jmp    0x40e9b3
  40e978:	(bad)  
  40e979:	aas    
  40e97a:	add    BYTE PTR [edi],cl
  40e97c:	daa    
  40e97d:	add    DWORD PTR [ebx-0x500ff34],0xffffffcc
  40e984:	int3   
  40e985:	push   edi
  40e986:	inc    ecx
  40e987:	test   edi,edi
  40e989:	stos   DWORD PTR es:[edi],eax
  40e98a:	dec    DWORD PTR [edi-0x70]
  40e98d:	mov    DWORD PTR [eax+0x0],ebx
  40e990:	dec    esp
  40e992:	lods   al,BYTE PTR ds:[esi]
  40e993:	add    ah,cl
  40e995:	pop    eax
  40e996:	mov    ebp,DWORD PTR [edi]
  40e998:	call   FWORD PTR [edi]
  40e99a:	add    BYTE PTR [edx],bh
  40e99c:	xchg   ebp,eax
  40e99d:	add    BYTE PTR [esi-0x3d330100],ah
  40e9a3:	(bad)  
  40e9a4:	jmp    DWORD PTR [edx]
  40e9a6:	or     eax,0xa0cccf
  40e9ab:	fucomip st,st(3)
  40e9ad:	add    BYTE PTR [ecx-0x7c760001],ch
  40e9b3:	inc    DWORD PTR [ebx+0x5427f3]
  40e9b9:	retf   0xcf00
  40e9bc:	sub    BYTE PTR [ebx-0x767c79],al
  40e9c2:	inc    eax
  40e9c3:	mov    DWORD PTR [ecx-0x5479ff],ecx
  40e9c9:	sub    ecx,DWORD PTR [ecx-0x7764018]
  40e9cf:	(bad)  
  40e9d0:	inc    DWORD PTR [ebx-0x2a33ffac]
  40e9d6:	sbb    BYTE PTR [edx-0x1],bl
  40e9d9:	jo     0x40e9a7
  40e9db:	mov    dh,dh
  40e9dd:	mov    DWORD PTR [ebx+0x4200ff00],eax
  40e9e3:	inc    DWORD PTR [eax]
  40e9e5:	(bad)  
  40e9e6:	push   ss
  40e9e7:	push   esi
  40e9e8:	call   DWORD PTR [edi]
  40e9ea:	jmp    ebx
  40e9ec:	mov    WORD PTR [eax],es
  40e9ee:	mov    ecx,0x8b8300ff
  40e9f3:	inc    DWORD PTR [eax]
  40e9f5:	cmp    al,0x4b
  40e9f7:	and    eax,DWORD PTR [eax]
  40e9f9:	or     DWORD PTR [ecx-0x420047b3],0x3700ff00
  40ea03:	(bad)  
  40ea04:	inc    DWORD PTR [edi-0x2a]
  40ea07:	push   es
  40ea08:	inc    DWORD PTR [edi]
  40ea0a:	jmp    DWORD PTR [edi+0x5d]
  40ea0d:	mov    edx,edx
  40ea0f:	dec    esp
  40ea11:	call   DWORD PTR [eax-0x7d]
  40ea14:	add    BYTE PTR [eax+edx*4+0x56],bl
  40ea18:	dec    DWORD PTR [eax+eax*1-0xaff764c]
  40ea1f:	add    bh,bh
  40ea21:	add    BYTE PTR [esp+ecx*8-0x49ab501],bl
  40ea28:	mov    eax,esi
  40ea2a:	add    bh,dh
  40ea2c:	jno    0x40ea2e
  40ea2e:	in     al,0x0
  40ea30:	add    bh,bh
  40ea32:	sub    bh,bh
  40ea34:	int3   
  40ea35:	les    eax,FWORD PTR [ebx]
  40ea37:	pop    edx
  40ea38:	sbb    DWORD PTR [eax+eax*1],0x58
  40ea3c:	add    edi,edi
  40ea3e:	xchg   ecx,eax
  40ea3f:	inc    DWORD PTR [eax]
  40ea41:	(bad)  
  40ea42:	aas    
  40ea43:	mov    edi,edi
  40ea45:	and    DWORD PTR [eax+0x45ff15],ebx
  40ea4b:	dec    ecx
  40ea4c:	pushf  
  40ea4d:	dec    ecx
  40ea4f:	dec    esp
  40ea51:	add    BYTE PTR [ebx],ch
  40ea53:	(bad)  
  40ea54:	jmp    esp
  40ea56:	mov    ecx,0x4c0046
  40ea5b:	mov    esp,0x831b001a
  40ea60:	add    BYTE PTR [eax],al
  40ea62:	idiv   bh
  40ea64:	dec    DWORD PTR ds:0x3bff9f60
  40ea6a:	add    ah,ch
  40ea6c:	ss or  ecx,0x0
  40ea70:	add    BYTE PTR [eax],al
  40ea72:	enter  0xff,0x6e
  40ea76:	xor    al,0x4d
  40ea78:	jmp    esi
  40ea7a:	call   DWORD PTR [ebp+0x7]
  40ea7d:	add    BYTE PTR [edx-0x7d],dl
  40ea80:	add    bh,bh
  40ea82:	idiv   edi
  40ea84:	mov    ebx,ebx
  40ea86:	pop    eax
  40ea87:	mov    edi,0x900c600
  40ea8c:	add    eax,0x83831f00
  40ea91:	push   ebp
  40ea93:	add    BYTE PTR [eax],al
  40ea95:	adc    DWORD PTR [ebx+eiz*2],esi
  40ea98:	inc    DWORD PTR [edi+edi*8]
  40ea9b:	push   edx
  40ea9c:	cs int3 
  40ea9e:	loop   0x40ea23
  40eaa0:	add    BYTE PTR [eax],al
  40eaa2:	and    bh,bh
  40eaa4:	cmp    DWORD PTR [ebp-0x1700e27b],0x0
  40eaab:	ror    BYTE PTR [eax-0x1],1
  40eaae:	add    edi,edi
  40eab0:	add    DWORD PTR [eax],0x6d
  40eab3:	(bad)  
  40eab4:	jmp    DWORD PTR [edx-0x43ffe815]
  40eaba:	add    BYTE PTR [ebx-0x35],ch
  40eabd:	push   DWORD PTR [ecx-0x1]
  40eac0:	add    BYTE PTR [eax],al
  40eac2:	das    
  40eac3:	inc    DWORD PTR [eax]
  40eac5:	dec    ecx
  40eac6:	jno    0x40eb2c
  40eac8:	mov    eax,edx
  40eaca:	call   FWORD PTR [edx-0xf80077]
  40ead0:	(bad)  
  40ead1:	(bad)  
  40ead2:	fcos   
  40ead4:	mov    DWORD PTR [esi-0x6b],ebx
  40ead7:	add    bh,bh
  40ead9:	jl     0x40eaa7
  40eadb:	adc    BYTE PTR [edi+edi*8],ah
  40eade:	hlt    
  40eadf:	add    ah,cl
  40eae1:	add    BYTE PTR [esi-0x1],ch
  40eae4:	(bad)  
  40eae5:	in     eax,dx
  40eae6:	inc    ebx
  40eae7:	and    bh,bh
  40eae9:	xchg   esp,eax
  40eaea:	call   DWORD PTR [eax]
  40eaec:	mov    edi,0xcc00ddff
  40eaf1:	inc    ebp
  40eaf3:	(bad)  
  40eaf4:	(bad)  
  40eaf5:	fistp  DWORD PTR [edi]
  40eaf7:	cmp    DWORD PTR [eax],eax
  40eaf9:	dec    edx
  40eafa:	add    BYTE PTR [edi+0x88ff0f],dh
  40eb00:	add    BYTE PTR [ebx+0x6a00ffd3],al
  40eb06:	fadd   DWORD PTR [ecx+0x6cce800]
  40eb0c:	int    0x89
  40eb0e:	jle    0x40eb10
  40eb10:	inc    DWORD PTR [eax]
  40eb12:	push   ss
  40eb13:	add    bh,bh
  40eb15:	pop    ds
  40eb16:	mov    dl,0x62
  40eb18:	add    BYTE PTR [esi],ah
  40eb1a:	inc    DWORD PTR [ecx+0x40]
  40eb1d:	int3   
  40eb1e:	add    al,BYTE PTR [eax]
  40eb20:	inc    DWORD PTR [eax]
  40eb22:	pop    ebx
  40eb23:	add    bh,bh
  40eb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb26:	dec    esp
  40eb27:	pop    es
  40eb28:	push   DWORD PTR [esp+ecx*8+0x33]
  40eb2c:	and    eax,0xffcc98ff
  40eb31:	int3   
  40eb32:	ins    DWORD PTR es:[edi],dx
  40eb33:	add    bh,bh
  40eb35:	sbb    al,0xb9
  40eb37:	mov    ch,0x0
  40eb39:	add    cl,ah
  40eb3b:	pop    ebx
  40eb3c:	ret    0x50cc
  40eb3f:	inc    DWORD PTR [eax]
  40eb41:	add    BYTE PTR [ebx-0x1],dh
  40eb44:	or     DWORD PTR [edx+0x6a8983b4],0xffffff83
  40eb4b:	imul   eax,edi,0x89cc58ff
  40eb51:	dec    DWORD PTR [esi]
  40eb53:	add    ah,cl
  40eb55:	push   esp
  40eb56:	enter  0xffe9,0x65
  40eb5a:	add    BYTE PTR [ebx+0x8effb0],al
  40eb60:	inc    DWORD PTR [eax]
  40eb62:	xchg   ecx,eax
  40eb63:	add    DWORD PTR [ebx+0xe67f2e],0xffffffc2
  40eb6a:	int3   
  40eb6b:	cmp    BYTE PTR [edx+0x837bff],ch
  40eb71:	dec    DWORD PTR [ebp+0x7140ffff]
  40eb77:	inc    edi
  40eb78:	(bad)  
  40eb79:	cld    
  40eb7a:	call   edi
  40eb7c:	out    dx,eax
  40eb7d:	add    BYTE PTR ds:0x36ff00ff,dh
  40eb83:	inc    DWORD PTR [ebx-0xdd01f9]
  40eb89:	icebp  
  40eb8a:	jmp    FWORD PTR [edi]
  40eb8c:	into   
  40eb8d:	cmp    DWORD PTR [eax+eax*1+0x3100ff],0x0
  40eb95:	adc    esi,DWORD PTR [eax+0x52]
  40eb98:	add    DWORD PTR [edi+edi*8-0x27],0x26
  40eb9d:	dec    DWORD PTR [esi+0x0]
  40eba0:	int3   
  40eba1:	int3   
  40eba2:	mov    esp,0xd910ffff
  40eba7:	es add bh,dl
  40ebaa:	dec    DWORD PTR [ebx+0x37]
  40ebad:	(bad)  
  40ebae:	(bad)  
  40ebaf:	(bad)  
  40ebb0:	inc    DWORD PTR [eax]
  40ebb2:	cmp    al,0xcc
  40ebb4:	dec    DWORD PTR [ebp*4+0xfa0092]
  40ebbb:	test   al,0x30
  40ebbd:	dec    DWORD PTR [eax+eax*1-0x7d]
  40ebc1:	jmp    DWORD PTR [eax+0x32a10083]
  40ebc7:	xor    DWORD PTR [eax],eax
  40ebc9:	adc    edi,edi
  40ebcb:	repnz adc BYTE PTR [ebx-0x337c91],al
  40ebd2:	aaa    
  40ebd3:	inc    DWORD PTR [eax]
  40ebd5:	or     ah,dl
  40ebd7:	cmp    edi,edi
  40ebd9:	add    bh,bh
  40ebdb:	sub    dl,BYTE PTR [ecx-0x335d00]
  40ebe1:	mov    esp,esi
  40ebe3:	(bad)  
  40ebe4:	call   FWORD PTR [ebx]
  40ebe6:	into   
  40ebe7:	xchg   bh,bh
  40ebe9:	sub    eax,0xff0c1500
  40ebee:	sbb    al,0xcc
  40ebf0:	add    BYTE PTR [eax],al
  40ebf2:	pop    ds
  40ebf3:	add    bh,bh
  40ebf5:	ror    BYTE PTR [esi-0x59],0xff
  40ebf9:	call   FWORD PTR es:0x958300
  40ec00:	(bad)  
  40ec01:	(bad)  
  40ec02:	mov    esp,0xf7018383
  40ec07:	pop    edx
  40ec08:	mov    DWORD PTR [eax+eax*1-0x4c],ecx
  40ec0c:	cld    
  40ec0d:	add    al,dl
  40ec0f:	add    BYTE PTR [ecx+0xffd283],cl
  40ec15:	mov    BYTE PTR [ecx-0xac00a5],dh
  40ec1b:	jge    0x40ec4e
  40ec1d:	int3   
  40ec1e:	fwait
  40ec1f:	inc    DWORD PTR [eax]
  40ec21:	jmp    FWORD PTR [eax]
  40ec23:	mov    edi,edi
  40ec25:	nop
  40ec26:	aam    0x37
  40ec28:	(bad)  
  40ec29:	cmp    edi,edi
  40ec2b:	dec    ebx
  40ec2c:	and    bh,bh
  40ec2e:	push   esi
  40ec2f:	int3   
  40ec30:	mov    DWORD PTR [eax],eax
  40ec32:	iret   
  40ec33:	add    bh,bh
  40ec35:	add    bh,cl
  40ec37:	aaa    
  40ec38:	add    al,ah
  40ec3a:	push   DWORD PTR [ecx+0x77]
  40ec3d:	sbb    edi,0xffffffff
  40ec40:	cmp    edi,0xffffffb9
  40ec43:	add    bh,bh
  40ec45:	or     eax,0x5dffc8a5
  40ec4a:	(bad)  
  40ec4b:	out    dx,al
  40ec4c:	popf   
  40ec4d:	add    bl,dl
  40ec4f:	mov    edi,edi
  40ec51:	inc    DWORD PTR [edi+edi*8]
  40ec54:	push   DWORD PTR ds:0x1eff3109
  40ec5a:	add    BYTE PTR [edx+ecx*2-0xffd77d],bl
  40ec61:	call   DWORD PTR [eax+0x1bf789ff]
  40ec67:	cld    
  40ec68:	xor    DWORD PTR [ebx],0xffffffff
  40ec6b:	lods   al,BYTE PTR ds:[esi]
  40ec6c:	idiv   bh
  40ec6e:	hlt    
  40ec6f:	add    ah,cl
  40ec71:	int3   
  40ec72:	add    DWORD PTR [ecx-0xb4bcf34],ecx
  40ec78:	mov    ebx,ebp
  40ec7a:	(bad)  
  40ec7b:	cld    
  40ec7c:	ins    DWORD PTR es:[edi],dx
  40ec7d:	add    BYTE PTR [esi-0x77],bh
  40ec80:	add    bh,bh
  40ec82:	cdq    
  40ec83:	add    bh,bh
  40ec85:	adc    bh,ch
  40ec87:	or     cl,ah
  40ec89:	fld    DWORD PTR [eax]
  40ec8b:	jae    0x40ec55
  40ec8d:	int3   
  40ec8e:	in     al,0x0
  40ec90:	inc    DWORD PTR [ebx-0x4000ff3a]
  40ec96:	mov    ecx,0x45ff68
  40ec9b:	push   0x5
  40ec9d:	push   esi
  40ec9f:	dec    esp
  40eca1:	add    BYTE PTR [edi],dl
  40eca3:	add    DWORD PTR [eax],0xfffffff8
  40eca6:	adc    edx,ebp
  40eca8:	mov    DWORD PTR [esi-0x402601],ebp
  40ecae:	idiv   bh
  40ecb0:	inc    DWORD PTR [eax]
  40ecb2:	stc    
  40ecb3:	(bad)  
  40ecb4:	(bad)  
  40ecb5:	js     0x40ec82
  40ecb7:	fcos   
  40ecb9:	cmp    DWORD PTR [ebx-0x17336155],eax
  40ecbf:	add    BYTE PTR [ebx-0xffbc01],al
  40ecc5:	test   al,0x9b
  40ecc7:	repnz (bad) 
  40ecc9:	ds add dl,ah
  40eccc:	or     al,0x83
  40ecce:	xor    cl,BYTE PTR [ecx+0xdcffcc]
  40ecd4:	dec    esi
  40ecd6:	aaa    
  40ecd7:	fdivr  st,st(7)
  40ecd9:	xchg   ebp,eax
  40ecda:	add    ch,dl
  40ecdc:	push   esi
  40ecdd:	mov    eax,ecx
  40ecdf:	(bad)  
  40ece0:	dec    esp
  40ece2:	lods   eax,DWORD PTR ds:[esi]
  40ece3:	inc    DWORD PTR [eax]
  40ece5:	jmp    0x62415825
  40ecea:	jmp    FWORD PTR [eax-0xd8ff6c]
  40ecf0:	dec    esp
  40ecf2:	inc    edx
  40ecf3:	(bad)  
  40ecf4:	(bad)  
  40ecf5:	mov    esi,0xdc0087d1
  40ecfa:	inc    DWORD PTR [edx-0x6e7608]
  40ed00:	dec    DWORD PTR [ecx+0xeffff6a]
  40ed06:	sti    
  40ed07:	clc    
  40ed08:	jmp    DWORD PTR [edx-0x810601]
  40ed0e:	rol    BYTE PTR [ebx+0x350089],cl
  40ed14:	inc    DWORD PTR [edi-0x3]
  40ed17:	daa    
  40ed18:	mov    ecx,edx
  40ed1a:	add    dh,bh
  40ed1c:	icebp  
  40ed1d:	add    BYTE PTR [esi],bl
  40ed1f:	add    ah,cl
  40ed21:	add    BYTE PTR [eax],dl
  40ed23:	add    DWORD PTR [eax],0x7a
  40ed26:	mov    ebx,0x8effd8
  40ed2b:	repz cmp DWORD PTR [ecx-0x3300008a],ecx
  40ed32:	lock (bad) 
  40ed34:	jmp    DWORD PTR [esi+0x38]
  40ed37:	jns    0x40ed38
  40ed39:	mov    ah,0xff
  40ed3b:	(bad)  
  40ed3c:	outs   dx,BYTE PTR ds:[esi]
  40ed3d:	add    BYTE PTR [eax+0x4d000000],bh
  40ed43:	(bad)  
  40ed44:	jmp    FWORD PTR [esi+0x72cc5c8e]
  40ed4a:	adc    esi,0xffffff9f
  40ed4d:	add    bh,dh
  40ed4f:	add    BYTE PTR [ebx-0xffaa01],al
  40ed55:	repz call 0xda5f:0x218338
  40ed5d:	call   FWORD PTR [ebp+0x0]
  40ed60:	add    BYTE PTR [ecx-0x7d007c3e],cl
  40ed66:	cld    
  40ed67:	xor    bh,bh
  40ed69:	mov    bl,0xff
  40ed6b:	sub    DWORD PTR [ecx+0x0],edx
  40ed6e:	cmc    
  40ed6f:	inc    DWORD PTR [eax]
  40ed71:	add    BYTE PTR [edi+edi*8],bl
  40ed74:	add    BYTE PTR ds:0x4e002e4d,dl
  40ed7a:	call   FWORD PTR [ebx]
  40ed7c:	pop    eax
  40ed7d:	push   DWORD PTR [ebp-0x1]
  40ed80:	inc    DWORD PTR [eax]
  40ed82:	icebp  
  40ed83:	(bad)  
  40ed84:	dec    DWORD PTR [ebp+0xb]
  40ed87:	inc    ebp
  40ed88:	add    BYTE PTR [edi+0x671c00],bl
  40ed8e:	jnp    0x40ed13
  40ed90:	inc    DWORD PTR [eax]
  40ed92:	pop    ss
  40ed93:	dec    DWORD PTR [ecx-0x66f30a]
  40ed99:	out    dx,al
  40ed9a:	mov    DWORD PTR [edi-0x339f0017],ecx
  40eda0:	dec    DWORD PTR [ecx-0x7fff0091]
  40eda6:	in     eax,0x98
  40eda8:	(bad)  
  40eda9:	clc    
  40edaa:	dec    DWORD PTR [eax+0x66]
  40edad:	mov    DWORD PTR [esi],esi
  40edaf:	mov    edi,edi
  40edb1:	add    BYTE PTR [eax-0x7bc67c7d],al
  40edb7:	xor    al,0xff
  40edb9:	(bad)  
  40edba:	int3   
  40edbb:	xchg   edx,eax
  40edbc:	jne    0x40edbd
  40edbe:	std    
  40edbf:	add    bh,bh
  40edc1:	add    bh,cl
  40edc3:	inc    DWORD PTR [ebx-0x7cd9740a]
  40edc9:	mov    bh,0x0
  40edcb:	and    cl,BYTE PTR [edx]
  40edcd:	call   DWORD PTR [edi+edi*8]
  40edd0:	add    BYTE PTR [eax],al
  40edd2:	pop    edx
  40edd3:	mov    DWORD PTR [eax],eax
  40edd5:	les    ebx,FWORD PTR [ebp+0x48ff5a]
  40eddb:	cmc    
  40eddc:	xchg   esi,eax
  40eddd:	jmp    FWORD PTR [esi-0x39767c01]
  40ede3:	(bad)  
  40ede4:	call   DWORD PTR [ebx+0x51]
  40ede7:	jg     0x40ede8
  40ede9:	or     eax,0xe472ff
  40edee:	mov    bl,0xff
  40edf0:	int3   
  40edf1:	int3   
  40edf2:	mov    ch,0x0
  40edf4:	inc    DWORD PTR ds:0x6fff0964
  40edfa:	add    BYTE PTR [ebp-0x9500be],cl
  40ee00:	mov    edi,edi
  40ee02:	hlt    
  40ee03:	(bad)  
  40ee04:	push   DWORD PTR [esp+edx*4]
  40ee07:	daa    
  40ee08:	mov    DWORD PTR [ebp-0x34],edx
  40ee0b:	sub    BYTE PTR [ebp-0x1],bh
  40ee0e:	sar    bh,cl
  40ee10:	inc    DWORD PTR [eax]
  40ee12:	pop    esi
  40ee13:	(bad)  
  40ee14:	push   DWORD PTR [ecx]
  40ee16:	idiv   DWORD PTR [esi]
  40ee18:	mov    DWORD PTR [edx],esi
  40ee1a:	push   ecx
  40ee1c:	push   cs
  40ee1d:	(bad)  
  40ee1e:	jmp    0xccff:0x54ff0083
  40ee25:	push   ss
  40ee26:	fndisi(8087 only) 
  40ee28:	(bad)  
  40ee29:	cmp    edi,edi
  40ee2b:	in     al,dx
  40ee2c:	dec    ecx
  40ee2d:	(bad)  
  40ee2e:	mov    ecx,0x59ff0000
  40ee33:	mov    esp,ecx
  40ee35:	mov    esp,0xd1005c88
  40ee3a:	add    BYTE PTR [ebx],dh
  40ee3c:	pop    ebx
  40ee3d:	add    BYTE PTR [eax+0x2effffff],bl
  40ee43:	inc    DWORD PTR [ebx-0xe31104]
  40ee49:	ja     0x40ee4a
  40ee4b:	les    esi,FWORD PTR [edx+0xffe8cc]
  40ee51:	add    BYTE PTR [ebp-0x1],al
  40ee54:	call   DWORD PTR [ebx-0x6800af6e]
  40ee5a:	add    cl,ch
  40ee5c:	mov    ecx,0xcc00b0ff
  40ee61:	dec    esi
  40ee63:	mov    edi,edi
  40ee65:	(bad)  
  40ee66:	dec    ecx
  40ee67:	leave  
  40ee68:	add    BYTE PTR [edx],bl
  40ee6a:	sbb    DWORD PTR [ebp+0x3f],0xffffffff
  40ee6e:	and    eax,0xb0008300
  40ee73:	cmp    edi,0xffffff8e
  40ee76:	jb     0x40eeaa
  40ee78:	cmp    ecx,0xffffffcc
  40ee7b:	mov    al,BYTE PTR [edi-0x1]
  40ee7e:	push   ebx
  40ee7f:	add    DWORD PTR [eax],0xffffffff
  40ee82:	(bad)  
  40ee84:	dec    esi
  40ee86:	and    esi,edi
  40ee88:	mov    DWORD PTR [ebx-0xf8ed01],edx
  40ee8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee8f:	(bad)  
  40ee90:	(bad)  
  40ee91:	inc    DWORD PTR [eax+eax*1]
  40ee94:	(bad)  
  40ee95:	mov    edi,0x2003f00
  40ee9a:	adc    DWORD PTR [edi-0x76db000f],0x0
  40eea1:	call   DWORD PTR [esi-0x6f200001]
  40eea7:	xchg   ecx,eax
  40eea8:	push   DWORD PTR [ecx-0x1]
  40eeab:	ds aad 0xcc
  40eeae:	fdiv   st(7),st
  40eeb0:	(bad)  
  40eeb1:	call   DWORD PTR [eax]
  40eeb3:	inc    DWORD PTR [eax]
  40eeb5:	mov    al,ds:0x8400bb4d
  40eeba:	cmp    DWORD PTR [edx+0x79],0xffffff83
  40eebe:	test   eax,0x32cc83ff
  40eec3:	add    BYTE PTR [eax],al
  40eec5:	bound  edi,QWORD PTR [edx]
  40eec7:	dec    DWORD PTR fs:[edx-0x1]
  40eecb:	inc    ebp
  40eecc:	or     bh,bh
  40eece:	mov    ah,0x0
  40eed0:	inc    DWORD PTR [eax]
  40eed2:	cli    
  40eed3:	add    bh,bh
  40eed5:	shl    edx,1
  40eed7:	rol    BYTE PTR [eax],1
  40eed9:	(bad)  
  40eeda:	push   eax
  40eedc:	pop    ebx
  40eedd:	dec    DWORD PTR ds:0xd7890000
  40eee3:	inc    DWORD PTR [eax]
  40eee5:	repnz mov dl,0x33
  40eee8:	adc    DWORD PTR [eax+0x613989],0xfffffffd
  40eeef:	(bad)  
  40eef0:	(bad)  
  40eef1:	call   FWORD PTR [edi+edi*8-0x71597734]
  40eef8:	dec    DWORD PTR [esi-0x1]
  40eefb:	mov    ds:0xffe3ffdf,eax
  40ef00:	mov    edi,edi
  40ef02:	std    
  40ef03:	add    BYTE PTR [eax],al
  40ef05:	jne    0x40eea0
  40ef07:	je     0x40ef08
  40ef09:	mov    al,0x0
  40ef0b:	ins    BYTE PTR es:[edi],dx
  40ef0c:	aas    
  40ef0d:	add    DWORD PTR ds:0xeeff00ff,0x0
  40ef14:	add    BYTE PTR [eax+0x6a],bl
  40ef17:	sub    al,0xff
  40ef19:	or     BYTE PTR [eax],al
  40ef1b:	mov    dh,0xf
  40ef1d:	add    BYTE PTR [edi],bh
  40ef1f:	(bad)  
  40ef20:	inc    DWORD PTR [eax]
  40ef22:	push   esp
  40ef23:	inc    DWORD PTR [eax]
  40ef25:	jno    0x40ef11
  40ef27:	pop    es
  40ef28:	mov    DWORD PTR [ebp-0x7c9f7c7d],edx
  40ef2e:	out    0xff,eax
  40ef30:	or     DWORD PTR [ecx+0x40ff0055],0x76
  40ef37:	xchg   edx,eax
  40ef38:	add    BYTE PTR [ebx-0x7d],cl
  40ef3b:	fadd   QWORD PTR [ebx]
  40ef3d:	call   esi
  40ef3f:	inc    DWORD PTR [ebx-0x7cce7d]
  40ef45:	cmc    
  40ef46:	mov    al,ds:0x9cff1b
  40ef4b:	sahf   
  40ef4c:	cmp    edi,0xffffffcb
  40ef4f:	inc    DWORD PTR [eax]
  40ef51:	mov    DWORD PTR [eax],ebx
  40ef53:	add    bh,bh
  40ef55:	adc    DWORD PTR [ebx+0x6fffd],eax
  40ef5b:	std    
  40ef5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5d:	call   edx
  40ef5f:	add    BYTE PTR [eax],al
  40ef61:	add    dh,bl
  40ef63:	add    DWORD PTR [eax],0x79
  40ef66:	inc    edx
  40ef67:	sub    ah,cl
  40ef69:	xchg   esp,eax
  40ef6a:	add    cl,bh
  40ef6c:	jne    0x40ef6d
  40ef6e:	pop    edx
  40ef6f:	inc    DWORD PTR [eax]
  40ef71:	(bad)  
  40ef72:	mov    eax,0x4d0a0000
  40ef77:	push   ss
  40ef78:	add    dl,al
  40ef7a:	jmp    FWORD PTR [ebx-0x46]
  40ef7d:	add    BYTE PTR [esi+0x0],cl
  40ef80:	add    DWORD PTR [ebx+0x12cc00e4],0xffffffc6
  40ef87:	push   ebp
  40ef88:	jmp    DWORD PTR [eax]
  40ef8a:	jmp    DWORD PTR [ebp-0xe4ffad]
  40ef90:	(bad)  
  40ef91:	(bad)  
  40ef92:	std    
  40ef93:	(bad)  
  40ef94:	inc    DWORD PTR [edx]
  40ef96:	or     al,bh
  40ef98:	add    BYTE PTR [eax+eax*1+0x6a83c09b],bl
  40ef9f:	cmp    edi,0x0
  40efa2:	mov    edx,0x1c8b00ff
  40efa7:	enter  0x81ff,0xcc
  40efab:	pop    ebx
  40efac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efad:	add    BYTE PTR [ebp-0x1],ch
  40efb0:	cmp    edi,0x10
  40efb3:	add    bh,bh
  40efb5:	pop    esi
  40efb6:	sbb    al,0x35
  40efb8:	inc    DWORD PTR [esi]
  40efba:	add    bl,dh
  40efbc:	test   bh,bh
  40efbe:	xor    bh,bh
  40efc0:	(bad)  
  40efc1:	(bad)  
  40efc2:	clc    
  40efc3:	add    BYTE PTR [eax],al
  40efc5:	(bad)  
  40efc6:	(bad)  
  40efc7:	(bad)  
  40efc8:	push   DWORD PTR [edx-0x520c00]
  40efce:	aad    0xcc
  40efd0:	cmp    edi,0x26
  40efd3:	dec    esp
  40efd5:	fwait
  40efd6:	gs retf 
  40efd8:	add    BYTE PTR [edx-0x3aea77],bl
  40efde:	cmp    al,0x83
  40efe0:	add    bh,bh
  40efe2:	pop    esp
  40efe3:	inc    DWORD PTR [eax]
  40efe5:	pop    es
  40efe6:	shl    DWORD PTR [ebx],1
  40efe8:	dec    DWORD PTR [ebx]
  40efea:	add    BYTE PTR [eax-0x7c7a00b2],ah
  40eff0:	add    bh,bh
  40eff2:	ins    BYTE PTR es:[edi],dx
  40eff3:	int3   
  40eff4:	int3   
  40eff5:	add    eax,0x9f0002ab
  40effa:	adc    DWORD PTR [ebx],0xffffffe8
  40effd:	add    cl,ch
  40efff:	int3   
  40f000:	add    BYTE PTR [eax],al
  40f002:	or     bh,bh
  40f004:	dec    DWORD PTR [ebx-0x61]
  40f007:	inc    ebp
  40f008:	inc    ebp
  40f00a:	push   DWORD PTR [edi+ebp*4+0xfff083]
  40f011:	dec    ebx
  40f013:	(bad)  
  40f014:	call   DWORD PTR [ebp-0x38002982]
  40f01a:	call   DWORD PTR [edi-0x2ff19]
  40f020:	inc    DWORD PTR [ebx-0x1700002d]
  40f026:	sub    ah,BYTE PTR [ebx+eax*4+0x11]
  40f02a:	dec    DWORD PTR [ecx+0x6d]
  40f02d:	(bad)  
  40f02e:	js     0x40f030
  40f030:	add    DWORD PTR [ebx-0x22007ce8],0x22
  40f037:	adc    ah,cl
  40f039:	or     ah,0x4d
  40f03c:	clc    
  40f03d:	call   DWORD PTR [ebp-0x1]
  40f040:	add    ah,cl
  40f042:	pop    edx
  40f043:	(bad)  
  40f044:	(bad)  
  40f045:	out    dx,al
  40f046:	out    dx,al
  40f047:	and    edi,edi
  40f049:	inc    ecx
  40f04a:	inc    DWORD PTR [esi+0x60]
  40f04d:	inc    DWORD PTR [eax-0x1]
  40f050:	add    bh,bh
  40f052:	sbb    bh,bh
  40f054:	add    dh,bl
  40f056:	sbb    ecx,esp
  40f058:	call   FWORD PTR [edx+0x6e4eff]
  40f05e:	aad    0xff
  40f060:	(bad)  
  40f061:	jmp    FWORD PTR [edx]
  40f063:	int3   
  40f064:	push   DWORD PTR [ebx+0x2d]
  40f067:	sub    eax,0xdb0087cc
  40f06c:	call   DWORD PTR es:[eax]
  40f06f:	mov    edi,edi
  40f071:	add    ah,cl
  40f073:	(bad)  
  40f074:	jmp    FWORD PTR ds:0x1b006e71
  40f07a:	int3   
  40f07b:	xchg   esp,eax
  40f07c:	stos   DWORD PTR es:[edi],eax
  40f07d:	call   DWORD PTR [esi]
  40f07f:	(bad)  
  40f080:	inc    DWORD PTR [eax]
  40f082:	sti    
  40f083:	add    BYTE PTR [ebx-0x65270e],al
  40f089:	or     cl,ah
  40f08b:	sti    
  40f08c:	push   cs
  40f08d:	int3   
  40f08e:	mov    ch,0xcc
  40f090:	mov    edi,edi
  40f092:	ss cmp edi,0xffffffb6
  40f096:	or     al,0x3f
  40f098:	(bad)  
  40f099:	mov    esi,0xcc1033ff
  40f09e:	(bad)  
  40f09f:	inc    DWORD PTR [ebx-0xf601]
  40f0a5:	(bad)  
  40f0a7:	out    0x0,al
  40f0a9:	xchg   esi,eax
  40f0aa:	dec    DWORD PTR [esi+0xd]
  40f0ad:	and    DWORD PTR [edi+0x56ffff00],0xffffff89
  40f0b4:	jmp    esi
  40f0b6:	das    
  40f0b7:	inc    edx
  40f0b8:	call   esi
  40f0ba:	(bad)  
  40f0bb:	out    dx,eax
  40f0bc:	out    dx,eax
  40f0bd:	add    edx,0xffffff89
  40f0c0:	int3   
  40f0c1:	sub    DWORD PTR [edi+edi*8-0x7d],0xffffffb3
  40f0c6:	xor    eax,0xff9983c3
  40f0cb:	inc    eax
  40f0cc:	pop    esp
  40f0cd:	sub    edi,0xffffffcc
  40f0d0:	add    bh,bh
  40f0d2:	sbb    al,0xff
  40f0d4:	add    BYTE PTR [ecx+0x26ff7459],dh
  40f0da:	jmp    DWORD PTR [esi+ebx*1-0x7d]
  40f0de:	or     BYTE PTR [ebx-0xff7cbe],al
  40f0e4:	adc    DWORD PTR [edi+0x67],0x71
  40f0e8:	sbb    eax,0xff83ffff
  40f0ed:	push   ebx
  40f0ee:	push   0xfffffffc
  40f0f0:	hlt    
  40f0f1:	add    BYTE PTR [eax],al
  40f0f3:	inc    DWORD PTR [eax]
  40f0f5:	and    al,BYTE PTR [esi]
  40f0f7:	jns    0x40f0a6
  40f0f9:	add    BYTE PTR [eax],al
  40f0fb:	inc    DWORD PTR [ebx+0x7e3c41f4]
  40f101:	or     DWORD PTR [ecx+0x493dffff],0x67
  40f108:	daa    
  40f109:	int3   
  40f10a:	add    bh,bh
  40f10c:	int3   
  40f10d:	dec    edx
  40f10e:	(bad)  
  40f10f:	lock call 0x8341f015
  40f115:	push   ss
  40f116:	adc    bl,dh
  40f118:	test   eax,0x83
  40f11d:	(bad)  
  40f11e:	jg     0x40f0df
  40f120:	inc    eax
  40f121:	inc    DWORD PTR [ebx+0x3814ff00]
  40f127:	push   ebx
  40f128:	(bad)  
  40f129:	int3   
  40f12a:	(bad)  
  40f12b:	inc    DWORD PTR [eax]
  40f12d:	xor    BYTE PTR [ebx-0x1bf7],cl
  40f133:	inc    DWORD PTR [eax]
  40f135:	outs   dx,DWORD PTR ds:[esi]
  40f136:	xchg   edx,eax
  40f137:	data16 or cl,BYTE PTR [ecx-0x2007c01]
  40f13e:	repz xchg ecx,eax
  40f140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f141:	int3   
  40f142:	add    bh,bh
  40f144:	jmp    FWORD PTR ds:0x89a57249
  40f14a:	add    BYTE PTR [ebx-0x642d717d],al
  40f150:	stc    
  40f151:	add    BYTE PTR [eax],al
  40f153:	dec    DWORD PTR [ecx+0x5ff60852]
  40f159:	add    bh,bh
  40f15b:	inc    DWORD PTR [eax]
  40f15d:	xor    dl,BYTE PTR [eax+0x48]
  40f160:	mov    edi,edi
  40f162:	add    BYTE PTR [eax],al
  40f164:	(bad)  
  40f165:	mov    esi,0xccbb7467
  40f16a:	int3   
  40f16b:	dec    esp
  40f16d:	dec    edx
  40f16e:	dec    ecx
  40f16f:	mov    WORD PTR [ebp-0x7c7634],ss
  40f175:	dec    edi
  40f176:	es inc ebx
  40f178:	inc    edx
  40f179:	(bad)  
  40f17a:	inc    DWORD PTR [eax]
  40f17c:	(bad)  
  40f17d:	mov    edx,0xff5c1323
  40f182:	(bad)  
  40f183:	inc    DWORD PTR [eax]
  40f185:	mov    eax,0xff9a6305
  40f18a:	int3   
  40f18b:	add    bh,bh
  40f18d:	and    al,0x47
  40f18f:	imul   DWORD PTR [ebx]
  40f191:	add    bh,bh
  40f193:	inc    DWORD PTR [ebx-0x11a1a6df]
  40f199:	add    BYTE PTR [eax],al
  40f19b:	int3   
  40f19c:	(bad)  
  40f19d:	mov    edx,0xea204d
  40f1a2:	mov    edi,edi
  40f1a4:	jmp    FWORD PTR [ecx]
  40f1a6:	push   ebp
  40f1a7:	dec    ebx
  40f1a8:	mov    WORD PTR [eax],es
  40f1aa:	inc    DWORD PTR [eax]
  40f1ac:	(bad)  
  40f1ad:	fbstp  TBYTE PTR [edi-0x55]
  40f1b0:	jmp    0x40f181
  40f1b5:	popf   
  40f1b6:	push   ecx
  40f1b7:	jb     0x40f13b
  40f1b9:	(bad)  
  40f1ba:	(bad)  
  40f1bb:	inc    DWORD PTR [eax]
  40f1bd:	lds    eax,FWORD PTR ds:[edi+0xffff13]
  40f1c4:	add    BYTE PTR [esp+esi*4-0xe9c6],ch
  40f1cb:	int3   
  40f1cc:	dec    ebp
  40f1ce:	pop    ss
  40f1cf:	sub    eax,0xff00ff42
  40f1d4:	push   ebp
  40f1d6:	jb     0x40f192
  40f1d8:	lods   al,BYTE PTR ds:[esi]
  40f1d9:	dec    esp
  40f1db:	inc    DWORD PTR [ebx+0x760a5227]
  40f1e1:	cmp    edi,0xffffffff
  40f1e4:	xor    DWORD PTR [ebp+0x4],0xfffffff6
  40f1e8:	mov    ah,cl
  40f1ea:	add    bh,bh
  40f1ec:	push   DWORD PTR [esp]
  40f1ef:	fidivr WORD PTR [esi-0x100]
  40f1f5:	mov    ebp,0x83978db3
  40f1fa:	inc    DWORD PTR [eax]
  40f1fc:	inc    DWORD PTR [edx+0x51]
  40f1ff:	add    BYTE PTR [esi],0x83
  40f202:	add    BYTE PTR [eax],al
  40f204:	dec    DWORD PTR [ebp+0x14]
  40f207:	xlat   BYTE PTR ds:[ebx]
  40f208:	mov    edi,edi
  40f20a:	inc    DWORD PTR [eax]
  40f20c:	inc    DWORD PTR [esi]
  40f20e:	pushf  
  40f20f:	or     eax,0xffff15
  40f214:	call   eax
  40f216:	pushf  
  40f217:	loop   0x40f26d
  40f219:	(bad)  
  40f21a:	inc    DWORD PTR [eax]
  40f21c:	add    BYTE PTR [eax+0x5b],al
  40f21f:	popf   
  40f220:	gs int3 
  40f222:	(bad)  
  40f223:	inc    DWORD PTR [ebx-0xd120287]
  40f229:	dec    esp
  40f22b:	inc    DWORD PTR [eax]
  40f22d:	lods   eax,DWORD PTR ds:[esi]
  40f22e:	sbb    ebp,edi
  40f230:	out    0x0,al
  40f232:	inc    DWORD PTR [eax]
  40f234:	dec    DWORD PTR [edx]
  40f236:	stc    
  40f237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f238:	scas   eax,DWORD PTR es:[edi]
  40f239:	add    bh,bh
  40f23b:	add    BYTE PTR [eax],al
  40f23d:	retf   0x6efa
  40f240:	js     0x40f1cb
  40f242:	inc    DWORD PTR [ebx+0x7d0decff]
  40f248:	mov    ds:0xffff0083,eax
  40f24d:	test   BYTE PTR [eax-0x7c003423],al
  40f253:	mov    DWORD PTR [eax],eax
  40f255:	cli    
  40f256:	cli    
  40f257:	jle    0x40f267
  40f259:	int3   
  40f25a:	mov    edi,edi
  40f25c:	int3   
  40f25d:	sbb    esi,DWORD PTR [ebp-0xfff16a]
  40f263:	add    bh,bh
  40f265:	leave  
  40f266:	add    eax,0xff7785
  40f26b:	inc    DWORD PTR [ebx-0x4983efc9]
  40f271:	or     esp,0x0
  40f274:	add    DWORD PTR [ecx],0xfffffffb
  40f277:	out    dx,al
  40f278:	fdivp  st(7),st
  40f27a:	add    BYTE PTR [ecx+0xc3eb083],cl
  40f280:	sti    
  40f281:	add    bh,bh
  40f283:	(bad)  
  40f284:	call   FWORD PTR [ecx+0x4d]
  40f287:	add    cl,BYTE PTR [ebx-0x1]
  40f28d:	dec    ebx
  40f28e:	clc    
  40f28f:	sub    ecx,DWORD PTR [ebp-0xffff7d]
  40f295:	cmp    al,0x99
  40f297:	call   0xffc47c20
  40f29c:	call   FWORD PTR [esi-0x33792c41]
  40f2a2:	or     DWORD PTR [ecx+0x2f2ebf83],0x11
  40f2a9:	mov    edi,edi
  40f2ab:	add    DWORD PTR [eax],0x3d
  40f2ae:	fcom   st(2)
  40f2b0:	cmc    
  40f2b1:	int3   
  40f2b2:	add    bh,bh
  40f2b4:	inc    DWORD PTR [esi]
  40f2b6:	nop
  40f2b7:	stos   BYTE PTR es:[edi],al
  40f2b8:	aas    
  40f2b9:	add    DWORD PTR [eax],0xffffffff
  40f2bc:	push   DWORD PTR [esi-0xb2b6b5]
  40f2c2:	(bad)  
  40f2c3:	inc    DWORD PTR [eax]
  40f2c5:	push   edi
  40f2c6:	pop    ss
  40f2c7:	fwait
  40f2c8:	add    bh,bh
  40f2ca:	add    bh,bh
  40f2cc:	inc    edi
  40f2ce:	mov    bl,0x7c
  40f2d0:	mov    edx,0x8383ffff
  40f2d5:	loopne 0x40f288
  40f2d7:	fsubrp st(4),st
  40f2d9:	mov    esp,ecx
  40f2db:	cmp    edi,0x4a
  40f2de:	jns    0x40f353
  40f2e0:	push   eax
  40f2e1:	add    BYTE PTR [eax],al
  40f2e3:	(bad)  
  40f2e4:	push   DWORD PTR [esi-0x9340c0]
  40f2ea:	add    DWORD PTR [ebx-0x3bdc177d],0xfffffffe
  40f2f1:	(bad)  
  40f2f2:	(bad)  
  40f2f3:	dec    esp
  40f2f5:	js     0x40f2e4
  40f2f7:	inc    ebx
  40f2f8:	ror    DWORD PTR [ecx-0x6f000001],0x1d
  40f2ff:	push   edi
  40f300:	pop    edx
  40f301:	inc    DWORD PTR [eax]
  40f303:	dec    esp
  40f305:	push   ss
  40f306:	out    0x37,al
  40f308:	add    eax,0xcc898300
  40f30d:	into   
  40f30e:	mov    eax,0xff768a
  40f313:	inc    DWORD PTR [eax]
  40f315:	pop    eax
  40f316:	cmc    
  40f317:	or     BYTE PTR [esi],dl
  40f319:	int3   
  40f31a:	add    BYTE PTR [ebx+0x2ba1bcc],al
  40f320:	imul   ecx,DWORD PTR [ecx+0xf008389],0xf57b02
  40f32a:	(bad)  
  40f32b:	(bad)  
  40f32c:	push   DWORD PTR [edx-0x72]
  40f32f:	(bad)  
  40f331:	add    BYTE PTR [eax],al
  40f333:	inc    DWORD PTR [eax]
  40f335:	dec    ebp
  40f336:	adc    BYTE PTR [edi-0xff0040],0x89
  40f33d:	nop
  40f33e:	aam    0x12
  40f340:	int    0xff
  40f342:	inc    DWORD PTR [eax]
  40f344:	add    BYTE PTR [ebp-0xd],bl
  40f347:	ret    0xcc72
  40f34a:	add    BYTE PTR [eax],al
  40f34c:	jmp    DWORD PTR [ebp-0x333778bd]
  40f352:	(bad)  
  40f353:	(bad)  
  40f354:	dec    DWORD PTR [edi-0x9b79a7]
  40f35a:	int3   
  40f35b:	(bad)  
  40f35c:	jmp    FWORD PTR [eax]
  40f35e:	scas   eax,DWORD PTR es:[edi]
  40f35f:	sub    BYTE PTR [edi-0x1],al
  40f362:	int3   
  40f363:	(bad)  
  40f364:	dec    ebx
  40f366:	(bad)  
  40f367:	in     al,dx
  40f368:	ins    DWORD PTR es:[edi],dx
  40f369:	dec    esp
  40f36b:	(bad)  
  40f36c:	(bad)  
  40f36d:	(bad)  
  40f36f:	push   es
  40f370:	mov    eax,DWORD PTR [eax]
  40f372:	add    DWORD PTR [eax],0xffffffff
  40f375:	outs   dx,BYTE PTR ds:[esi]
  40f376:	pop    es
  40f377:	jle    0x40f35e
  40f379:	(bad)  
  40f37a:	inc    DWORD PTR [eax]
  40f37c:	(bad)  
  40f37d:	mov    dh,BYTE PTR ds:[esi+0xff001a]
  40f384:	add    bl,dl
  40f386:	lea    ebp,[ecx+eax*1]
  40f389:	int3   
  40f38a:	add    bh,bh
  40f38c:	sbb    DWORD PTR [eax],0xffffffb4
  40f38f:	add    DWORD PTR [edi+edi*8+0x59ff00ff],ebp
  40f396:	pop    ecx
  40f397:	mov    esi,0xff00f9
  40f39c:	add    BYTE PTR [ebx],dh
  40f39e:	arpl   WORD PTR ds:0xff0000c7,sp
  40f3a4:	add    BYTE PTR [esi],dh
  40f3a6:	inc    edx
  40f3a7:	xchg   esi,eax
  40f3a8:	outs   dx,DWORD PTR ds:[esi]
  40f3a9:	int3   
  40f3aa:	add    bh,bh
  40f3ac:	call   DWORD PTR [edi]
  40f3ae:	nop
  40f3af:	fimul  WORD PTR [edx-0x7c7c0001]
  40f3b5:	mov    dl,0x74
  40f3b7:	xchg   esp,eax
  40f3b8:	mov    edi,0x83ffffff
  40f3bd:	inc    ebp
  40f3be:	call   0x400ade
  40f3c3:	inc    DWORD PTR [eax]
  40f3c5:	sbb    al,0xee
  40f3c7:	(bad)  
  40f3c8:	int    0xff
  40f3ca:	inc    DWORD PTR [ebx+0xbe99983]
  40f3d0:	cwde   
  40f3d1:	cmp    edi,0xffffffff
  40f3d4:	add    DWORD PTR [esi-0x4ad67a],0x0
  40f3db:	add    bh,bh
  40f3dd:	inc    esp
  40f3de:	cmp    DWORD PTR [ecx-0x39],edi
  40f3e1:	add    BYTE PTR [ebx+0x17b1ff00],al
  40f3e7:	clc    
  40f3e8:	popa   
  40f3e9:	mov    DWORD PTR [eax],eax
  40f3eb:	(bad)  
  40f3ec:	call   DWORD PTR [edi+esi*1-0xa526]
  40f3f3:	(bad)  
  40f3f4:	(bad)  
  40f3f5:	out    dx,al
  40f3f6:	ficom  DWORD PTR [edi-0xffe4]
  40f3fc:	add    bl,al
  40f3fe:	jb     0x40f3ce
  40f400:	sub    bh,bh
  40f402:	(bad)  
  40f403:	inc    DWORD PTR [ebx+0x67efd46]
  40f409:	add    bh,bh
  40f40b:	int3   
  40f40c:	add    DWORD PTR [ebp+0x22],0x3
  40f410:	cdq    
  40f411:	mov    esp,ecx
  40f413:	mov    DWORD PTR [ebx+0x1ee35ae7],eax
  40f419:	(bad)  
  40f41a:	inc    DWORD PTR [eax]
  40f41c:	adc    eax,0xffffffdf
  40f41f:	ss in  al,0x83
  40f422:	(bad)  
  40f423:	inc    DWORD PTR [ebx+0x4f8382c8]
  40f429:	inc    DWORD PTR [ebx+0x77d4ff83]
  40f42f:	add    eax,0xff99
  40f434:	add    BYTE PTR [ebx+ebx*1+0x15],bh
  40f438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f439:	inc    DWORD PTR [ebx-0x4e2cff01]
  40f43f:	xor    DWORD PTR [eax+eax*1],edi
  40f442:	add    bh,bh
  40f444:	jmp    FWORD PTR [ebp-0x8c918e]
  40f44a:	add    BYTE PTR [ecx-0x1110e37d],cl
  40f450:	pusha  
  40f451:	(bad)  
  40f452:	inc    DWORD PTR [eax]
  40f454:	inc    DWORD PTR [esi-0x64]
  40f457:	(bad)  
  40f458:	in     eax,0x0
  40f45a:	add    bh,bh
  40f45c:	int3   
  40f45d:	pop    esi
  40f45e:	dec    eax
  40f45f:	push   edi
  40f460:	sbb    edi,edi
  40f462:	add    ah,cl
  40f464:	call   esp
  40f466:	fs dec edi
  40f468:	sbb    al,0x0
  40f46a:	add    bh,bh
  40f46c:	cmp    DWORD PTR [eax-0xcbd161],0x0
  40f473:	add    bh,bh
  40f475:	or     al,0x36
  40f477:	int3   
  40f478:	mov    ecx,0x8300ff00
  40f47d:	and    ecx,DWORD PTR [edi]
  40f47f:	enter  0x8342,0x0
  40f483:	add    bh,bh
  40f485:	mov    esp,0xff71e937
  40f48a:	add    bh,bh
  40f48c:	add    BYTE PTR [edx],dl
  40f48e:	mov    ebx,0xcc00abd1
  40f493:	add    DWORD PTR [ebx-0x32b02d61],0xffffff83
  40f49a:	add    bh,bh
  40f49c:	xor    DWORD PTR [ebx],0xffffffd2
  40f49f:	jmp    0x417878
  40f4a4:	int3   
  40f4a5:	cwde   
  40f4a6:	je     0x40f4bd
  40f4a8:	xchg   ebp,eax
  40f4a9:	add    BYTE PTR [ebx+0x3998ccff],al
  40f4af:	pop    ecx
  40f4b0:	je     0x40f4b1
  40f4b2:	dec    esp
  40f4b4:	add    BYTE PTR [edi],dl
  40f4b6:	jnp    0x40f4c0
  40f4b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4b9:	inc    DWORD PTR [ebx+0x16fb83ff]
  40f4bf:	outs   dx,BYTE PTR ds:[esi]
  40f4c0:	inc    BYTE PTR [ebx-0x18ffff01]
  40f4c6:	jno    0x40f4cd
  40f4c8:	xchg   ebx,eax
  40f4c9:	inc    DWORD PTR [eax]
  40f4cb:	add    BYTE PTR [ebx-0x54bfac],al
  40f4d1:	inc    DWORD PTR [ebx-0x76a50001]
  40f4d7:	sbb    al,0x64
  40f4d9:	int3   
  40f4da:	(bad)  
  40f4db:	inc    DWORD PTR [eax]
  40f4dd:	fmul   DWORD PTR [edx+edx*2-0x1f]
  40f4e1:	(bad)  
  40f4e2:	(bad)  
  40f4e3:	inc    DWORD PTR [eax]
  40f4e5:	iret   
  40f4e6:	cmp    DWORD PTR [eax-0x7c007c78],ebp
  40f4ec:	xor    ebx,0xffffffa2
  40f4ef:	or     eax,0xffccff47
  40f4f4:	jmp    DWORD PTR [eax-0xe165e3]
  40f4fa:	add    BYTE PTR [eax],al
  40f4fc:	call   DWORD PTR [edx-0x879a7]
  40f502:	cmp    edi,0x0
  40f505:	out    dx,al
  40f506:	out    dx,eax
  40f507:	fcmovne st,st(3)
  40f509:	add    BYTE PTR [eax],al
  40f50b:	int3   
  40f50c:	add    BYTE PTR [ebx-0x7353a7],ch
  40f512:	add    DWORD PTR [ebx+0x227ca3ff],0x4a
  40f519:	inc    DWORD PTR [ebx+0x4a038300]
  40f51f:	fiadd  DWORD PTR [edi+edi*8]
  40f522:	inc    DWORD PTR [eax]
  40f524:	and    DWORD PTR [esi+ebx*2-0x16ac],0x0
  40f52c:	add    BYTE PTR [ebp-0x33ccb021],bl
  40f532:	add    bh,bh
  40f534:	push   DWORD PTR [edx-0x7c01d7a4]
  40f53a:	add    DWORD PTR [ebx+0x1293b100],0x5e
  40f541:	(bad)  
  40f542:	(bad)  
  40f543:	(bad)  
  40f544:	dec    edi
  40f546:	xor    cl,dh
  40f548:	sar    edi,0xff
  40f54b:	add    bh,bh
  40f54d:	fdiv   QWORD PTR [eax]
  40f54f:	jne    0x40f5cc
  40f551:	add    DWORD PTR [eax],0xffffff83
  40f554:	inc    DWORD PTR [ebx+0x1e557c]
  40f55a:	mov    edi,edi
  40f55c:	jmp    ecx
  40f55e:	jo     0x40f5d5
  40f560:	mov    ch,0xff
  40f562:	add    BYTE PTR [eax],al
  40f564:	add    BYTE PTR [edx],al
  40f566:	pop    ss
  40f567:	inc    BYTE PTR [ebp-0x7600ff01]
  40f56d:	ins    DWORD PTR es:[edi],dx
  40f56e:	ins    BYTE PTR es:[edi],dx
  40f56f:	and    al,0xcd
  40f571:	add    bh,bh
  40f573:	(bad)  
  40f574:	push   DWORD PTR [edi-0xe243b0]
  40f57a:	int3   
  40f57b:	inc    DWORD PTR [eax]
  40f57d:	pop    DWORD PTR [ebx]
  40f57f:	bound  eax,QWORD PTR [ebx+0x0]
  40f582:	int3   
  40f583:	add    bh,bh
  40f585:	and    BYTE PTR [ecx-0x87fa],ch
  40f58b:	inc    DWORD PTR [ebx-0xa640f10]
  40f591:	dec    esp
  40f593:	add    ah,cl
  40f595:	outs   dx,DWORD PTR ds:[esi]
  40f596:	cmp    BYTE PTR [esi],ch
  40f598:	push   0xff0083ff
  40f59d:	mov    DWORD PTR [ebx],0xfffff232
  40f5a3:	inc    DWORD PTR [eax]
  40f5a5:	outs   dx,DWORD PTR ds:[esi]
  40f5a6:	cmp    eax,0xfffff9cc
  40f5ab:	add    DWORD PTR [eax],0x27
  40f5ae:	sub    BYTE PTR [edi+eiz*2],dl
  40f5b1:	inc    DWORD PTR [eax]
  40f5b3:	add    bh,bh
  40f5b5:	arpl   cx,ax
  40f5b7:	rcl    DWORD PTR [ecx-0x7c7d00],0xf3
  40f5be:	idiv   ah
  40f5c0:	lods   al,BYTE PTR ds:[esi]
  40f5c1:	(bad)  
  40f5c2:	(bad)  
  40f5c3:	inc    DWORD PTR [ebx+0x10c10c84]
  40f5c9:	dec    DWORD PTR [ecx+0x4b983ff]
  40f5cf:	fisttp QWORD PTR [ecx-0x1]
  40f5d2:	inc    DWORD PTR [ebx-0x423bfa01]
  40f5d8:	out    dx,al
  40f5d9:	add    BYTE PTR [eax],al
  40f5db:	(bad)  
  40f5dc:	call   DWORD PTR [esi+0x8]
  40f5df:	inc    esi
  40f5e0:	and    BYTE PTR [eax],al
  40f5e2:	or     DWORD PTR [ecx+0x4f461100],0x1e
  40f5e9:	(bad)  
  40f5ea:	inc    DWORD PTR [ebx+0x6de0dff]
  40f5f0:	inc    BYTE PTR [eax]
  40f5f2:	add    bh,bh
  40f5f4:	mov    ecx,ebp
  40f5f6:	xchg   ebp,eax
  40f5f7:	(bad)  
  40f5f8:	loopne 0x40f57d
  40f5fa:	inc    DWORD PTR [eax]
  40f5fc:	and    DWORD PTR [ecx+0x69],0xffffffbf
  40f600:	mov    BYTE PTR [ecx+0x2900ff00],cl
  40f606:	dec    edi
  40f607:	gs std 
  40f609:	(bad)  
  40f60a:	(bad)  
  40f60b:	(bad)  
  40f60c:	call   eax
  40f60e:	or     esi,DWORD PTR [esi]
  40f610:	mov    esi,0xffff89ff
  40f615:	test   eax,0xff553078
  40f61a:	add    DWORD PTR [ebx+0x2f02d083],0xffffffe7
  40f621:	add    DWORD PTR [eax],0xffffffff
  40f624:	inc    edi
  40f626:	sbb    ch,BYTE PTR [ebp+0x83837b]
  40f62c:	add    BYTE PTR [ebx-0xd7bc9a],dl
  40f632:	add    BYTE PTR [ebx-0x25464500],al
  40f638:	mov    bh,bh
  40f63a:	add    bh,bh
  40f63c:	jmp    FWORD PTR [esi-0x80]
  40f63f:	pusha  
  40f640:	dec    esp
  40f641:	add    BYTE PTR [eax],al
  40f643:	add    DWORD PTR [eax],0x74
  40f646:	frstor [edi+0xff43]
  40f64c:	(bad)  
  40f64d:	cmp    al,0xda
  40f64f:	mov    esp,0xffffff5a
  40f654:	call   FWORD PTR [ecx+0x642504]
  40f65a:	inc    DWORD PTR [eax]
  40f65c:	add    BYTE PTR [ebp+0x4f],ch
  40f65f:	and    cl,BYTE PTR [ebp-0x76ff767d]
  40f665:	jle    0x40f647
  40f667:	cld    
  40f668:	jno    0x40f66a
  40f66a:	inc    DWORD PTR [eax]
  40f66c:	add    cl,bl
  40f66e:	mov    ecx,ebp
  40f670:	and    al,0x83
  40f672:	add    BYTE PTR [ebx+0x5e6ea200],al
  40f678:	mov    edi,edi
  40f67a:	add    bh,bh
  40f67c:	dec    DWORD PTR [ecx-0x80]
  40f67f:	dec    eax
  40f680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f681:	add    bh,bh
  40f683:	inc    DWORD PTR [ebx+0x6f9ebf3d]
  40f689:	dec    esp
  40f68b:	inc    DWORD PTR [ebx+0x6b4d9d5]
  40f691:	(bad)  
  40f692:	(bad)  
  40f693:	inc    DWORD PTR [eax]
  40f695:	loope  0x40f70d
  40f697:	sbb    al,0xf7
  40f699:	inc    DWORD PTR [eax]
  40f69b:	(bad)  
  40f69c:	(bad)  
  40f69d:	cld    
  40f69e:	push   ecx
  40f69f:	pop    ebp
  40f6a0:	cmp    bh,bh
  40f6a2:	add    bh,bh
  40f6a4:	add    BYTE PTR [edx],dl
  40f6a6:	inc    ebp
  40f6a7:	lea    esi,[ebp-0x330100]
  40f6ad:	mov    ds:0xff87458f,al
  40f6b2:	(bad)  
  40f6b3:	inc    DWORD PTR [eax]
  40f6b5:	inc    ebp
  40f6b6:	(bad)  [ebp-0x7cff7cf3]
  40f6bc:	add    BYTE PTR [esi-0x938999],cl
  40f6c2:	inc    DWORD PTR [eax]
  40f6c4:	add    bh,dl
  40f6c6:	inc    esi
  40f6c7:	loope  0x40f735
  40f6c9:	(bad)  
  40f6ca:	inc    DWORD PTR [eax]
  40f6cc:	int3   
  40f6cd:	aas    
  40f6ce:	mov    ecx,0x5d91
  40f6d3:	add    BYTE PTR [eax],al
  40f6d5:	test   edx,ecx
  40f6d7:	out    0xe0,eax
  40f6d9:	inc    DWORD PTR [eax]
  40f6db:	add    BYTE PTR [eax],al
  40f6dd:	in     al,0xcb
  40f6df:	xchg   ebx,eax
  40f6e0:	mov    esi,0xffff0083
  40f6e5:	call   0x83ff:0xffb6d372
  40f6ec:	sub    DWORD PTR [ebp-0x1cc096],0xffffff83
  40f6f3:	add    DWORD PTR [ebx+0x571eaec0],0x0
  40f6fa:	add    bh,bh
  40f6fc:	call   DWORD PTR [edx-0x61881a]
  40f702:	(bad)  
  40f703:	inc    DWORD PTR [ebx+0x745359e]
  40f709:	add    BYTE PTR [ebx-0x4ac4ff01],al
  40f70f:	inc    edi
  40f710:	sahf   
  40f711:	add    bh,bh
  40f713:	int3   
  40f714:	add    BYTE PTR ds:0xff6f7981,al
  40f71a:	add    bh,bh
  40f71c:	call   FWORD PTR [edi]
  40f71e:	clc    
  40f71f:	inc    esi
  40f720:	cwde   
  40f721:	cmp    edi,0x0
  40f724:	inc    DWORD PTR [edx-0x7c6fe0aa]
  40f72a:	add    DWORD PTR [eax],0xffffffff
  40f72d:	cdq    
  40f72e:	mov    ebp,0xff00985a
  40f733:	add    bh,bh
  40f735:	rol    DWORD PTR [ebp+0xff53f9],0x0
  40f73c:	add    bl,bl
  40f73e:	fild   WORD PTR [ebp-0x7d]
  40f741:	add    DWORD PTR [eax],0x0
  40f744:	(bad)  
  40f745:	mov    ecx,0xff1d3be9
  40f74a:	add    bh,bh
  40f74c:	inc    DWORD PTR [esi]
  40f74e:	xchg   edi,eax
  40f74f:	mov    al,0x85
  40f751:	inc    DWORD PTR [eax]
  40f753:	(bad)  
  40f754:	jmp    DWORD PTR [ecx]
  40f756:	daa    
  40f757:	pop    edi
  40f758:	test   DWORD PTR [eax],0xaacc00ff
  40f75e:	stc    
  40f75f:	sbb    al,0x35
  40f761:	add    bh,bh
  40f763:	add    bh,bh
  40f765:	ret    0x1d2d
  40f768:	sbb    al,0x0
  40f76a:	(bad)  
  40f76b:	(bad)  
  40f76c:	call   FWORD PTR [ebp+0x21]
  40f76f:	fadd   DWORD PTR [ecx-0x3301]
  40f775:	pop    es
  40f776:	jmp    0x40f73d
  40f778:	(bad)  
  40f779:	add    DWORD PTR [eax],0xffffffff
  40f77c:	int3   
  40f77d:	iret   
  40f77e:	push   es
  40f77f:	dec    eax
  40f780:	jne    0x40f74e
  40f782:	inc    DWORD PTR [eax]
  40f784:	inc    DWORD PTR [ecx-0x8ffbf]
  40f78a:	cmp    edi,0xffffffff
  40f78d:	dec    edi
  40f78e:	push   edx
  40f78f:	inc    ebp
  40f790:	mov    al,ds:0xff8300ff
  40f795:	push   0xcccbf373
  40f79a:	inc    DWORD PTR [eax]
  40f79c:	call   DWORD PTR [ecx+0x7d]
  40f79f:	sbb    esi,edi
  40f7a1:	(bad)  
  40f7a2:	inc    DWORD PTR [ebx+0xf898cff]
  40f7a8:	mov    ds:0xff00ff00,al
  40f7ad:	or     BYTE PTR [esi],ah
  40f7af:	ds iret 
  40f7b1:	add    bh,bh
  40f7b3:	add    ah,cl
  40f7b5:	sbb    eax,0x838fa8bf
  40f7ba:	add    bh,bh
  40f7bc:	add    BYTE PTR [ebp+0xa3da22],bh
  40f7c2:	dec    esp
  40f7c4:	add    cl,al
  40f7c6:	or     BYTE PTR [eax+0x2f],bl
  40f7c9:	inc    DWORD PTR [eax]
  40f7cb:	add    BYTE PTR [eax],al
  40f7cd:	lock retf 0xbbf0
  40f7d1:	(bad)  
  40f7d2:	(bad)  
  40f7d3:	inc    DWORD PTR [ebx-0x19e962f1]
  40f7d9:	int3   
  40f7da:	add    bh,bh
  40f7dc:	jmp    FWORD PTR [edx-0x52]
  40f7df:	and    eax,0xcc000001
  40f7e4:	dec    edi
  40f7e6:	mov    esi,0x83a4f2
  40f7eb:	add    BYTE PTR [eax],al
  40f7ed:	mov    esp,0xfffc263c
  40f7f2:	inc    DWORD PTR [eax]
  40f7f4:	jmp    DWORD PTR [ebp+0x8192f8]
  40f7fa:	int3   
  40f7fb:	add    BYTE PTR [eax],al
  40f7fd:	push   0x7b
  40f7ff:	push   es
  40f800:	mov    BYTE PTR [eax],0xff
  40f803:	add    BYTE PTR [eax],al
  40f805:	lock dec eax
  40f807:	mov    ds:0xff00ff07,al
  40f80c:	push   DWORD PTR [edx]
  40f80e:	mov    dh,BYTE PTR [eax+0xff43]
  40f814:	adc    ebp,0x76
  40f817:	cli    
  40f818:	loope  0x40f819
  40f81a:	(bad)  
  40f81b:	inc    DWORD PTR [ebx+0x438f0833]
  40f821:	add    bh,bh
  40f823:	add    bh,bh
  40f825:	sbb    cl,BYTE PTR [ebp-0x4d]
  40f828:	inc    esp
  40f829:	add    DWORD PTR [eax],0xffffffff
  40f82c:	adc    DWORD PTR [eax-0x12dc49],0x0
  40f833:	inc    DWORD PTR [eax]
  40f835:	push   es
  40f836:	in     eax,0xbd
  40f838:	cmp    eax,0xff8300cc
  40f83d:	pop    eax
  40f83e:	xchg   DWORD PTR ds:0x89ff0c,edx
  40f844:	jmp    DWORD PTR [edx-0x7c9406c5]
  40f84a:	mov    edi,edi
  40f84c:	add    BYTE PTR [eax],bl
  40f84e:	sbb    eax,0xffffdea2
  40f853:	mov    DWORD PTR [eax],eax
  40f855:	pop    edi
  40f856:	push   ebp
  40f857:	test   al,0xee
  40f859:	cmp    edi,0xffffff83
  40f85c:	add    DWORD PTR [eax-0x333eddca],0xffffffcc
  40f863:	add    BYTE PTR [ebx+0x6bb1df36],al
  40f869:	add    bh,bh
  40f86b:	add    DWORD PTR [ebx+0x7e2ea0e0],0x0
  40f872:	inc    DWORD PTR [eax]
  40f874:	add    al,ah
  40f876:	push   eax
  40f877:	mov    ax,ds:0xff008383
  40f87d:	rol    BYTE PTR [ebx+eiz*8-0x46],cl
  40f881:	mov    DWORD PTR [eax],eax
  40f883:	int3   
  40f884:	add    BYTE PTR [ebx-0x874b4b],cl
  40f88a:	dec    esp
  40f88c:	add    BYTE PTR [eax-0x4],dh
  40f88f:	sti    
  40f890:	adc    bh,bh
  40f892:	add    BYTE PTR [eax],al
  40f894:	(bad)  
  40f895:	mov    ecx,0xffbdab9e
  40f89a:	add    bh,bh
  40f89c:	(bad)  
  40f89d:	mov    esi,0x83619696
  40f8a2:	(bad)  
  40f8a3:	dec    DWORD PTR [ecx+0x35e9465e]
  40f8a9:	add    BYTE PTR [eax],al
  40f8ab:	inc    DWORD PTR [eax]
  40f8ad:	xchg   ebp,eax
  40f8ae:	retf   0xd268
  40f8b1:	add    bh,bh
  40f8b3:	(bad)  
  40f8b4:	jmp    DWORD PTR [esi-0x764b6e30]
  40f8ba:	inc    DWORD PTR [eax]
  40f8bc:	inc    DWORD PTR [eax+0xa12dc4]
  40f8c2:	add    BYTE PTR [eax],al
  40f8c4:	jmp    DWORD PTR [edx-0x8c5a0b]
  40f8ca:	dec    esp
  40f8cc:	or     DWORD PTR [esp+esi*1-0x330088ba],0xffffffff
  40f8d4:	int3   
  40f8d5:	xor    al,0x2f
  40f8d7:	fidivr DWORD PTR [ebx]
  40f8d9:	inc    DWORD PTR [ebx+0x13f5ffff]
  40f8df:	aaa    
  40f8e0:	and    edi,edi
  40f8e2:	add    DWORD PTR [ebx-0x5255b100],0x76
  40f8e9:	add    BYTE PTR [ebx-0x3ecb3301],al
  40f8ef:	pop    eax
  40f8f0:	cmp    eax,0x83
  40f8f5:	pop    ds
  40f8f6:	lahf   
  40f8f7:	or     eax,0x8389006a
  40f8fc:	dec    DWORD PTR [eax]
  40f8fe:	xchg   BYTE PTR [edi],ah
  40f900:	in     eax,dx
  40f901:	int3   
  40f902:	add    ah,cl
  40f904:	call   FWORD PTR [esi+0x7b]
  40f907:	mov    ah,al
  40f909:	inc    DWORD PTR [ebx-0x5c483301]
  40f90f:	push   es
  40f910:	mov    ebx,0xcc00ff
  40f915:	stos   DWORD PTR es:[edi],eax
  40f916:	aad    0x26
  40f918:	pop    edi
  40f919:	(bad)  
  40f91a:	dec    DWORD PTR [ecx-0x10f8f400]
  40f920:	sti    
  40f921:	add    DWORD PTR [eax],0xffffffff
  40f924:	add    dh,cl
  40f926:	mov    ch,0x1
  40f928:	jmp    0x41f8b6
  40f92d:	clc    
  40f92e:	(bad)  
  40f92f:	fdivr  DWORD PTR [esi-0x1]
  40f932:	add    bh,bh
  40f934:	add    BYTE PTR [ebx+esi*4+0xff6c0d],bl
  40f93b:	cmp    edi,0xffffffd4
  40f93e:	loopne 0x40f948
  40f940:	sar    edi,1
  40f942:	(bad)  
  40f943:	(bad)  
  40f944:	(bad)  
  40f945:	cmp    eax,DWORD PTR [ebx-0xff325d]
  40f94b:	(bad)  
  40f94c:	jmp    DWORD PTR [edi+eax*8]
  40f94f:	shl    BYTE PTR [ecx-0x3301],0xff
  40f956:	addr16 stc 
  40f958:	arpl   WORD PTR [ecx-0x1e7cff01],cx
  40f95e:	pushf  
  40f95f:	lahf   
  40f960:	sar    edi,cl
  40f962:	(bad)  
  40f963:	(bad)  
  40f964:	dec    DWORD PTR [eax+0x68]
  40f967:	sbb    al,0x89
  40f969:	(bad)  
  40f96a:	(bad)  
  40f96b:	dec    esp
  40f96d:	mov    ah,dh
  40f96f:	mov    DWORD PTR [esi],ecx
  40f971:	add    BYTE PTR [eax],al
  40f973:	(bad)  
  40f974:	inc    DWORD PTR [edx]
  40f976:	loopne 0x40f974
  40f978:	out    0xff,eax
  40f97a:	add    bh,bh
  40f97c:	mov    DWORD PTR [ecx+0x732b0a],ecx
  40f982:	add    ah,cl
  40f984:	inc    DWORD PTR [eax+0x1a]
  40f987:	mov    al,ds:0xffff91
  40f98c:	add    BYTE PTR [ecx],al
  40f98e:	or     DWORD PTR [esi+edi*8-0xff007d],0x46
  40f996:	jae    0x40f9b2
  40f998:	fdivr  st,st(7)
  40f99a:	add    BYTE PTR [eax],al
  40f99c:	add    BYTE PTR [ebx+0x64],ch
  40f99f:	fisttp QWORD PTR [edi-0x77]
  40f9a2:	cmp    edi,0xffffffff
  40f9a5:	add    eax,0x833d81a0
  40f9aa:	add    BYTE PTR [ebx-0x65c12c01],al
  40f9b0:	retf   
  40f9b1:	add    bh,bh
  40f9b3:	add    BYTE PTR [ebx+0x780743de],al
  40f9b9:	int3   
  40f9ba:	cmp    edi,0xffffffff
  40f9bd:	push   ecx
  40f9be:	es aad 0x3f
  40f9c1:	add    bh,bh
  40f9c3:	add    bh,bh
  40f9c5:	(bad)  
  40f9c6:	sbb    bh,BYTE PTR ds:0xff00bb
  40f9cc:	jmp    DWORD PTR [esi]
  40f9ce:	dec    esi
  40f9cf:	(bad)  
  40f9d0:	push   ecx
  40f9d1:	(bad)  
  40f9d2:	(bad)  
  40f9d3:	inc    DWORD PTR [ebx+0x7e44f9f1]
  40f9d9:	add    BYTE PTR [ecx+0x3e2e0000],cl
  40f9df:	lods   eax,DWORD PTR ds:[esi]
  40f9e0:	out    0xff,eax
  40f9e2:	(bad)  
  40f9e3:	inc    DWORD PTR [ebx+0x3b3f5a80]
  40f9e9:	add    BYTE PTR [eax],al
  40f9eb:	inc    DWORD PTR [eax]
  40f9ed:	arpl   WORD PTR [eax+ecx*1+0x12],sp
  40f9f1:	inc    DWORD PTR [eax]
  40f9f3:	int3   
  40f9f4:	inc    DWORD PTR [edx+ebx*4]
  40f9f7:	jne    0x40fa02
  40f9f9:	cmp    edi,0xffffffff
  40f9fc:	call   esp
  40f9fe:	fisub  WORD PTR [eax-0x767676ea]
  40fa04:	(bad)  
  40fa05:	fsubr  QWORD PTR [ebx]
  40fa07:	jl     0x40fa83
  40fa09:	add    bh,bh
  40fa0b:	add    BYTE PTR [ebx-0x184804c],al
  40fa11:	(bad)  
  40fa12:	(bad)  
  40fa13:	(bad)  
  40fa14:	dec    ebp
  40fa16:	lock add bh,BYTE PTR [edx]
  40fa19:	add    bh,bh
  40fa1b:	inc    DWORD PTR [eax]
  40fa1d:	clc    
  40fa1e:	pop    ecx
  40fa1f:	dec    esp
  40fa20:	add    BYTE PTR ss:[eax],al
  40fa23:	inc    DWORD PTR [eax]
  40fa25:	mov    ch,0x18
  40fa27:	adc    al,0x21
  40fa29:	inc    DWORD PTR [eax]
  40fa2b:	add    ah,cl
  40fa2d:	mov    dl,0x7f
  40fa2f:	push   ds
  40fa30:	push   esi
  40fa31:	(bad)  
  40fa32:	(bad)  
  40fa33:	inc    DWORD PTR [ebx+0x730f4215]
  40fa39:	(bad)  
  40fa3a:	inc    DWORD PTR [eax]
  40fa3c:	jmp    FWORD PTR [ecx-0x1a]
  40fa3f:	pop    ebp
  40fa40:	sub    edi,edi
  40fa42:	(bad)  
  40fa43:	inc    DWORD PTR [ebx+0x89f011a]
  40fa49:	cmp    edi,0x0
  40fa4c:	add    BYTE PTR [ecx+0x234d45],ah
  40fa52:	add    bh,bh
  40fa54:	jmp    FWORD PTR [ebp+0x18]
  40fa57:	popf   
  40fa58:	test   ah,0xff
  40fa5b:	(bad)  
  40fa5c:	inc    ebp
  40fa5e:	bound  edi,QWORD PTR [ecx]
  40fa60:	data16 (bad) 
  40fa62:	(bad)  
  40fa63:	inc    DWORD PTR [ebx-0x543480ff]
  40fa69:	(bad)  
  40fa6a:	(bad)  
  40fa6b:	(bad)  
  40fa6c:	jmp    esi
  40fa6e:	stos   BYTE PTR es:[edi],al
  40fa6f:	jae    0x40f9f2
  40fa71:	in     al,dx
  40fa72:	dec    eax
  40fa73:	add    DWORD PTR [eax],eax
  40fa75:	add    BYTE PTR [esi+0x57],dl
  40fa78:	push   0x2d
  40fa7a:	push   0x42
  40fa7c:	call   DWORD PTR ds:0x44502c
  40fa82:	mov    DWORD PTR [esp+0x8],eax
  40fa86:	call   DWORD PTR ds:0x445054
  40fa8c:	mov    edx,DWORD PTR ds:0x448d04
  40fa92:	mov    esi,DWORD PTR [esp+0x158]
  40fa99:	add    edx,0x104a0
  40fa9f:	mov    DWORD PTR [esp+0xc],eax
  40faa3:	mov    eax,DWORD PTR [esp+0x154]
  40faaa:	test   esi,esi
  40faac:	je     0x40fb40
  40fab2:	movzx  ecx,BYTE PTR [eax+0x8]
  40fab6:	movzx  edi,BYTE PTR [eax+0x4]
  40faba:	shl    ecx,0x8
  40fabd:	add    ecx,edi
  40fabf:	movzx  edi,BYTE PTR [eax+0x2]
  40fac3:	shl    ecx,0x8
  40fac6:	add    ecx,edi
  40fac8:	movzx  edi,BYTE PTR [eax]
  40facb:	shl    ecx,0x8
  40face:	add    ecx,edi
  40fad0:	mov    edi,DWORD PTR ds:0x448d00
  40fad6:	sub    edi,0x401e6
  40fadc:	neg    edi
  40fade:	sbb    edi,edi
  40fae0:	and    edi,0x65e3f4b3
  40fae6:	add    edi,0x9a1cdee9
  40faec:	xor    edi,ecx
  40faee:	mov    DWORD PTR ds:0x448cf0,ecx
  40faf4:	mov    DWORD PTR [edx],edi
  40faf6:	movzx  ecx,BYTE PTR [eax+0xf]
  40fafa:	movzx  edi,BYTE PTR [eax+0xd]
  40fafe:	shl    ecx,0x8
  40fb01:	add    ecx,edi
  40fb03:	movzx  edi,WORD PTR [eax+0xa]
  40fb07:	shl    ecx,0x10
  40fb0a:	add    ecx,edi
  40fb0c:	mov    edi,DWORD PTR ds:0x448d00
  40fb12:	sub    edi,0x401e6
  40fb18:	neg    edi
  40fb1a:	sbb    edi,edi
  40fb1c:	and    edi,0x65e37b34
  40fb22:	add    edi,0x9a1cdee9
  40fb28:	xor    edi,ecx
  40fb2a:	mov    DWORD PTR ds:0x448cf0,ecx
  40fb30:	mov    DWORD PTR [edx+0x4],edi
  40fb33:	add    edx,0x8
  40fb36:	add    eax,0x10
  40fb39:	dec    esi
  40fb3a:	jne    0x40fab2
  40fb40:	movzx  ecx,BYTE PTR [eax+0x8]
  40fb44:	movzx  esi,BYTE PTR [eax+0x4]
  40fb48:	shl    ecx,0x8
  40fb4b:	add    ecx,esi
  40fb4d:	movzx  esi,BYTE PTR [eax+0x2]
  40fb51:	movzx  eax,BYTE PTR [eax]
  40fb54:	shl    ecx,0x8
  40fb57:	add    ecx,esi
  40fb59:	shl    ecx,0x8
  40fb5c:	add    ecx,eax
  40fb5e:	mov    eax,ds:0x448d00
  40fb63:	push   ebx
  40fb64:	push   ebp
  40fb65:	mov    ebp,DWORD PTR ds:0x445024
  40fb6b:	add    eax,0x9a18dd03
  40fb70:	mov    DWORD PTR ds:0x448cf0,ecx
  40fb76:	xor    eax,ecx
  40fb78:	lea    ecx,[esp+0x3c]
  40fb7c:	push   ecx
  40fb7d:	push   0x0
  40fb7f:	push   0x3
  40fb81:	mov    DWORD PTR [edx],eax
  40fb83:	call   ebp
  40fb85:	mov    ecx,DWORD PTR ds:0x448d04
  40fb8b:	mov    edx,DWORD PTR ds:0x4480b0
  40fb91:	add    ecx,0x109fc
  40fb97:	mov    esi,0x89
  40fb9c:	lea    esp,[esp+0x0]
  40fba0:	movzx  eax,BYTE PTR [edx+0x7]
  40fba4:	movzx  edi,BYTE PTR [edx+0x5]
  40fba8:	movzx  edx,WORD PTR [edx]
  40fbab:	shl    eax,0x8
  40fbae:	add    eax,edi
  40fbb0:	shl    eax,0x10
  40fbb3:	add    eax,edx
  40fbb5:	mov    ds:0x448cf0,eax
  40fbba:	mov    edx,0x3e47b04b
  40fbbf:	sub    edx,DWORD PTR ds:0x448d00
  40fbc5:	add    ecx,0x10
  40fbc8:	xor    edx,eax
  40fbca:	mov    DWORD PTR [ecx-0x10],edx
  40fbcd:	mov    edx,DWORD PTR ds:0x4480b0
  40fbd3:	add    edx,0x8
  40fbd6:	mov    DWORD PTR ds:0x4480b0,edx
  40fbdc:	movzx  eax,BYTE PTR [edx+0x7]
  40fbe0:	movzx  edi,BYTE PTR [edx+0x5]
  40fbe4:	movzx  edx,WORD PTR [edx]
  40fbe7:	shl    eax,0x8
  40fbea:	add    eax,edi
  40fbec:	shl    eax,0x10
  40fbef:	add    eax,edx
  40fbf1:	mov    ds:0x448cf0,eax
  40fbf6:	mov    edx,0x3e47b04b
  40fbfb:	sub    edx,DWORD PTR ds:0x448d00
  40fc01:	xor    edx,eax
  40fc03:	mov    DWORD PTR [ecx-0xc],edx
  40fc06:	mov    edx,DWORD PTR ds:0x4480b0
  40fc0c:	add    edx,0x8
  40fc0f:	mov    DWORD PTR ds:0x4480b0,edx
  40fc15:	movzx  eax,BYTE PTR [edx+0x7]
  40fc19:	movzx  edi,BYTE PTR [edx+0x5]
  40fc1d:	movzx  edx,WORD PTR [edx]
  40fc20:	shl    eax,0x8
  40fc23:	add    eax,edi
  40fc25:	shl    eax,0x10
  40fc28:	add    eax,edx
  40fc2a:	mov    ds:0x448cf0,eax
  40fc2f:	mov    edx,0x3e47b04b
  40fc34:	sub    edx,DWORD PTR ds:0x448d00
  40fc3a:	xor    edx,eax
  40fc3c:	mov    DWORD PTR [ecx-0x8],edx
  40fc3f:	mov    edx,DWORD PTR ds:0x4480b0
  40fc45:	add    edx,0x8
  40fc48:	mov    DWORD PTR ds:0x4480b0,edx
  40fc4e:	movzx  eax,BYTE PTR [edx+0x7]
  40fc52:	movzx  edi,BYTE PTR [edx+0x5]
  40fc56:	movzx  edx,WORD PTR [edx]
  40fc59:	shl    eax,0x8
  40fc5c:	add    eax,edi
  40fc5e:	shl    eax,0x10
  40fc61:	add    eax,edx
  40fc63:	mov    edx,0x3e47b04b
  40fc68:	sub    edx,DWORD PTR ds:0x448d00
  40fc6e:	mov    ds:0x448cf0,eax
  40fc73:	xor    edx,eax
  40fc75:	mov    DWORD PTR [ecx-0x4],edx
  40fc78:	mov    edx,DWORD PTR ds:0x4480b0
  40fc7e:	add    edx,0x8
  40fc81:	dec    esi
  40fc82:	mov    DWORD PTR ds:0x4480b0,edx
  40fc88:	jne    0x40fba0
  40fc8e:	lea    eax,[esp+0x18]
  40fc92:	push   eax
  40fc93:	call   DWORD PTR ds:0x445020
  40fc99:	mov    eax,ds:0x448d04
  40fc9e:	mov    edx,DWORD PTR ds:0x4480b4
  40fca4:	add    eax,0x1128c
  40fca9:	mov    esi,0x59
  40fcae:	mov    edi,edi
  40fcb0:	movzx  ecx,BYTE PTR [edx+0x7]
  40fcb4:	movzx  edi,BYTE PTR [edx+0x5]
  40fcb8:	movzx  edx,WORD PTR [edx+0x3]
  40fcbc:	shl    ecx,0x8
  40fcbf:	add    ecx,edi
  40fcc1:	shl    ecx,0x10
  40fcc4:	add    ecx,edx
  40fcc6:	mov    DWORD PTR ds:0x448cf0,ecx
  40fccc:	mov    edx,0xb3851d17
  40fcd1:	sub    edx,DWORD PTR ds:0x448d00
  40fcd7:	xor    edx,ecx
  40fcd9:	mov    DWORD PTR [eax],edx
  40fcdb:	mov    edx,DWORD PTR ds:0x4480b4
  40fce1:	movzx  ecx,BYTE PTR [edx+0xe]
  40fce5:	movzx  edi,WORD PTR [edx+0xc]
  40fce9:	movzx  edx,BYTE PTR [edx+0x9]
  40fced:	shl    ecx,0x10
  40fcf0:	add    ecx,edi
  40fcf2:	shl    ecx,0x8
  40fcf5:	add    ecx,edx
  40fcf7:	mov    DWORD PTR ds:0x448cf0,ecx
  40fcfd:	mov    edx,0xb3851d17
  40fd02:	sub    edx,DWORD PTR ds:0x448d00
  40fd08:	xor    edx,ecx
  40fd0a:	mov    DWORD PTR [eax+0x4],edx
  40fd0d:	mov    edx,DWORD PTR ds:0x4480b4
  40fd13:	add    edx,0x10
  40fd16:	mov    DWORD PTR ds:0x4480b4,edx
  40fd1c:	movzx  ecx,BYTE PTR [edx+0x7]
  40fd20:	movzx  edi,BYTE PTR [edx+0x5]
  40fd24:	movzx  edx,WORD PTR [edx+0x3]
  40fd28:	shl    ecx,0x8
  40fd2b:	add    ecx,edi
  40fd2d:	shl    ecx,0x10
  40fd30:	add    ecx,edx
  40fd32:	mov    DWORD PTR ds:0x448cf0,ecx
  40fd38:	mov    edx,0xb3851d17
  40fd3d:	sub    edx,DWORD PTR ds:0x448d00
  40fd43:	xor    edx,ecx
  40fd45:	mov    DWORD PTR [eax+0x8],edx
  40fd48:	mov    edx,DWORD PTR ds:0x4480b4
  40fd4e:	movzx  ecx,BYTE PTR [edx+0xe]
  40fd52:	movzx  edi,WORD PTR [edx+0xc]
  40fd56:	movzx  edx,BYTE PTR [edx+0x9]
  40fd5a:	shl    ecx,0x10
  40fd5d:	add    ecx,edi
  40fd5f:	shl    ecx,0x8
  40fd62:	add    ecx,edx
  40fd64:	mov    DWORD PTR ds:0x448cf0,ecx
  40fd6a:	mov    edx,0xb3851d17
  40fd6f:	sub    edx,DWORD PTR ds:0x448d00
  40fd75:	xor    edx,ecx
  40fd77:	mov    DWORD PTR [eax+0xc],edx
  40fd7a:	mov    edx,DWORD PTR ds:0x4480b4
  40fd80:	add    edx,0x10
  40fd83:	mov    DWORD PTR ds:0x4480b4,edx
  40fd89:	movzx  ecx,BYTE PTR [edx+0x7]
  40fd8d:	movzx  edi,BYTE PTR [edx+0x5]
  40fd91:	movzx  edx,WORD PTR [edx+0x3]
  40fd95:	shl    ecx,0x8
  40fd98:	add    ecx,edi
  40fd9a:	shl    ecx,0x10
  40fd9d:	add    ecx,edx
  40fd9f:	mov    DWORD PTR ds:0x448cf0,ecx
  40fda5:	mov    edx,0xb3851d17
  40fdaa:	sub    edx,DWORD PTR ds:0x448d00
  40fdb0:	xor    edx,ecx
  40fdb2:	mov    DWORD PTR [eax+0x10],edx
  40fdb5:	mov    edx,DWORD PTR ds:0x4480b4
  40fdbb:	movzx  ecx,BYTE PTR [edx+0xe]
  40fdbf:	movzx  edi,WORD PTR [edx+0xc]
  40fdc3:	movzx  edx,BYTE PTR [edx+0x9]
  40fdc7:	shl    ecx,0x10
  40fdca:	add    ecx,edi
  40fdcc:	shl    ecx,0x8
  40fdcf:	add    ecx,edx
  40fdd1:	mov    edx,0xb3851d17
  40fdd6:	sub    edx,DWORD PTR ds:0x448d00
  40fddc:	mov    DWORD PTR ds:0x448cf0,ecx
  40fde2:	xor    edx,ecx
  40fde4:	mov    DWORD PTR [eax+0x14],edx
  40fde7:	mov    edx,DWORD PTR ds:0x4480b4
  40fded:	add    edx,0x10
  40fdf0:	add    eax,0x18
  40fdf3:	dec    esi
  40fdf4:	mov    DWORD PTR ds:0x4480b4,edx
  40fdfa:	jne    0x40fcb0
  40fe00:	movzx  ecx,BYTE PTR [edx+0x7]
  40fe04:	movzx  esi,BYTE PTR [edx+0x5]
  40fe08:	movzx  edx,WORD PTR [edx+0x3]
  40fe0c:	mov    ebx,DWORD PTR ds:0x445050
  40fe12:	shl    ecx,0x8
  40fe15:	add    ecx,esi
  40fe17:	shl    ecx,0x10
  40fe1a:	add    ecx,edx
  40fe1c:	mov    edx,DWORD PTR ds:0x448d00
  40fe22:	add    edx,0xb37d194b
  40fe28:	xor    edx,ecx
  40fe2a:	mov    DWORD PTR ds:0x448cf0,ecx
  40fe30:	mov    DWORD PTR [eax],edx
  40fe32:	mov    esi,DWORD PTR ds:0x448d04
  40fe38:	mov    ecx,DWORD PTR ds:0x4480b8
  40fe3e:	add    esi,0x11ae8
  40fe44:	mov    edi,0x258
  40fe49:	lea    esp,[esp+0x0]
  40fe50:	movzx  eax,BYTE PTR [ecx+0x6]
  40fe54:	movzx  edx,BYTE PTR [ecx+0x3]
  40fe58:	movzx  ecx,WORD PTR [ecx]
  40fe5b:	push   0x0
  40fe5d:	shl    eax,0x8
  40fe60:	add    eax,edx
  40fe62:	mov    edx,DWORD PTR ds:0x448d00
  40fe68:	push   0x88
  40fe6d:	push   0x95
  40fe72:	shl    eax,0x10
  40fe75:	add    eax,ecx
  40fe77:	push   0x5b
  40fe79:	xor    edx,eax
  40fe7b:	push   0x4b
  40fe7d:	mov    ds:0x448cf0,eax
  40fe82:	mov    eax,DWORD PTR [esp+0x28]
  40fe86:	xor    edx,0xe22030e8
  40fe8c:	push   0x0
  40fe8e:	mov    DWORD PTR [esi],edx
  40fe90:	push   eax
  40fe91:	add    esi,0x4
  40fe94:	call   ebx
  40fe96:	mov    ecx,DWORD PTR ds:0x4480b8
  40fe9c:	add    ecx,0x8
  40fe9f:	dec    edi
  40fea0:	mov    DWORD PTR ds:0x4480b8,ecx
  40fea6:	jne    0x40fe50
  40fea8:	mov    edi,DWORD PTR ds:0x448d04
  40feae:	mov    esi,DWORD PTR [esp+0x164]
  40feb5:	add    edi,0x12448
  40febb:	add    esi,0x4
  40febe:	mov    ebx,0x17d
  40fec3:	movzx  eax,BYTE PTR [esi+0x5]
  40fec7:	movzx  ecx,BYTE PTR [esi]
  40feca:	movzx  edx,WORD PTR [esi-0x4]
  40fece:	shl    eax,0x8
  40fed1:	add    eax,ecx
  40fed3:	mov    ecx,DWORD PTR ds:0x448d00
  40fed9:	shl    eax,0x10
  40fedc:	add    eax,edx
  40fede:	lea    edx,[esp+0x3c]
  40fee2:	push   edx
  40fee3:	add    ecx,0x254bffa7
  40fee9:	push   0x0
  40feeb:	xor    ecx,eax
  40feed:	mov    ds:0x448cf0,eax
  40fef2:	push   0x3
  40fef4:	mov    DWORD PTR [edi],ecx
  40fef6:	call   ebp
  40fef8:	movzx  eax,BYTE PTR [esi+0xb]
  40fefc:	movzx  ecx,WORD PTR [esi+0x9]
  40ff00:	movzx  edx,BYTE PTR [esi+0x6]
  40ff04:	shl    eax,0x10
  40ff07:	add    eax,ecx
  40ff09:	mov    ecx,DWORD PTR ds:0x448d00
  40ff0f:	shl    eax,0x8
  40ff12:	add    eax,edx
  40ff14:	add    ecx,0x254bffa7
  40ff1a:	xor    ecx,eax
  40ff1c:	mov    ds:0x448cf0,eax
  40ff21:	mov    DWORD PTR [edi+0x4],ecx
  40ff24:	add    edi,0x8
  40ff27:	add    esi,0x10
  40ff2a:	dec    ebx
  40ff2b:	jne    0x40fec3
  40ff2d:	mov    esi,DWORD PTR ds:0x448d04
  40ff33:	mov    ebx,DWORD PTR ds:0x445064
  40ff39:	add    esi,0x13030
  40ff3f:	mov    edi,0x80
  40ff44:	lea    edx,[esp+0x3c]
  40ff48:	push   edx
  40ff49:	push   0x0
  40ff4b:	push   0x3
  40ff4d:	call   ebp
  40ff4f:	mov    eax,ds:0x4480bc
  40ff54:	movzx  ecx,WORD PTR [eax+0x4]
  40ff58:	movzx  edx,WORD PTR [eax]
  40ff5b:	shl    ecx,0x10
  40ff5e:	add    ecx,edx
  40ff60:	push   0x29
  40ff62:	mov    DWORD PTR ds:0x448cf0,ecx
  40ff68:	call   ebx
  40ff6a:	mov    eax,ds:0x448d00
  40ff6f:	sub    eax,0x401e6
  40ff74:	neg    eax
  40ff76:	sbb    eax,eax
  40ff78:	and    eax,0x64747c83
  40ff7d:	add    eax,0x9b8bed78
  40ff82:	xor    eax,DWORD PTR ds:0x448cf0
  40ff88:	mov    DWORD PTR [esi],eax
  40ff8a:	mov    eax,ds:0x4480bc
  40ff8f:	movzx  ecx,BYTE PTR [eax+0xe]
  40ff93:	movzx  edx,BYTE PTR [eax+0xc]
  40ff97:	shl    ecx,0x8
  40ff9a:	add    ecx,edx
  40ff9c:	movzx  edx,BYTE PTR [eax+0xa]
  40ffa0:	movzx  eax,BYTE PTR [eax+0x8]
  40ffa4:	shl    ecx,0x8
  40ffa7:	add    ecx,edx
  40ffa9:	shl    ecx,0x8
  40ffac:	add    ecx,eax
  40ffae:	mov    DWORD PTR ds:0x448cf0,ecx
  40ffb4:	lea    ecx,[esp+0x18]
  40ffb8:	push   ecx
  40ffb9:	call   DWORD PTR ds:0x445020
  40ffbf:	mov    edx,DWORD PTR ds:0x448d00
  40ffc5:	sub    edx,0x401e6
  40ffcb:	neg    edx
  40ffcd:	sbb    edx,edx
  40ffcf:	and    edx,0x6474295c
  40ffd5:	add    edx,0x9b8bed78
  40ffdb:	xor    edx,DWORD PTR ds:0x448cf0
  40ffe1:	add    esi,0x8
  40ffe4:	mov    DWORD PTR [esi-0x4],edx
  40ffe7:	add    DWORD PTR ds:0x4480bc,0x10
  40ffee:	dec    edi
  40ffef:	jne    0x40ff44
  40fff5:	mov    ecx,DWORD PTR ds:0x448d04
  40fffb:	mov    edx,DWORD PTR ds:0x4480c0
  410001:	pop    ebp
  410002:	add    ecx,0x13430
  410008:	mov    esi,0xc5
  41000d:	pop    ebx
  41000e:	mov    edi,edi
  410010:	movzx  eax,WORD PTR [edx+0x6]
  410014:	movzx  edx,WORD PTR [edx+0x2]
  410018:	shl    eax,0x10
  41001b:	add    eax,edx
  41001d:	mov    edx,DWORD PTR ds:0x448d00
  410023:	sub    edx,0x401e6
  410029:	neg    edx
  41002b:	sbb    edx,edx
  41002d:	and    edx,0xc1f17c6d
  410033:	add    edx,0x3e0eb57b
  410039:	xor    edx,eax
  41003b:	mov    ds:0x448cf0,eax
  410040:	mov    DWORD PTR [ecx],edx
  410042:	mov    edx,DWORD PTR ds:0x4480c0
  410048:	add    edx,0x8
  41004b:	mov    DWORD PTR ds:0x4480c0,edx
  410051:	movzx  eax,WORD PTR [edx+0x6]
  410055:	movzx  edx,WORD PTR [edx+0x2]
  410059:	shl    eax,0x10
  41005c:	add    eax,edx
  41005e:	mov    edx,DWORD PTR ds:0x448d00
  410064:	sub    edx,0x401e6
  41006a:	neg    edx
  41006c:	sbb    edx,edx
  41006e:	and    edx,0xc1f17c6d
  410074:	add    edx,0x3e0eb57b
  41007a:	xor    edx,eax
  41007c:	mov    ds:0x448cf0,eax
  410081:	mov    DWORD PTR [ecx+0x4],edx
  410084:	mov    edx,DWORD PTR ds:0x4480c0
  41008a:	add    edx,0x8
  41008d:	add    ecx,0x8
  410090:	dec    esi
  410091:	mov    DWORD PTR ds:0x4480c0,edx
  410097:	jne    0x410010
  41009d:	mov    eax,DWORD PTR [esp+0x8]
  4100a1:	pop    edi
  4100a2:	pop    esi
  4100a3:	test   eax,eax
  4100a5:	je     0x4100ae
  4100a7:	push   eax
  4100a8:	call   DWORD PTR ds:0x445030
  4100ae:	add    esp,0x148
  4100b4:	ret    
  4100b5:	int3   
  4100b6:	int3   
  4100b7:	int3   
  4100b8:	int3   
  4100b9:	int3   
  4100ba:	int3   
  4100bb:	int3   
  4100bc:	int3   
  4100bd:	int3   
  4100be:	int3   
  4100bf:	int3   
  4100c0:	push   0x948389ff
  4100c5:	sbb    ebp,DWORD PTR [ebx]
  4100c7:	in     al,0x45
  4100c9:	add    ah,cl
  4100cb:	in     eax,0x0
  4100cd:	or     DWORD PTR [ecx+0x0],0xffffffd4
  4100d1:	(bad)  
  4100d2:	(bad)  
  4100d3:	dec    DWORD PTR [ecx-0x50]
  4100d6:	sub    ebp,eax
  4100d8:	fadd   QWORD PTR [eax]
  4100da:	add    BYTE PTR [esi-0x1],bh
  4100dd:	int3   
  4100de:	or     eax,DWORD PTR [ebx-0x300ff01]
  4100e4:	and    BYTE PTR [edx-0x33ff00b6],dl
  4100ea:	push   DWORD PTR [eax*8-0x227d]
  4100f1:	add    bh,bh
  4100f3:	data16 arpl WORD PTR [edx],di
  4100f6:	inc    DWORD PTR ss:[eax]
  4100f9:	add    bh,bh
  4100fb:	mov    al,ds:0xffaf43be
  410100:	add    bh,bh
  410102:	push   esi
  410104:	mov    cl,0x1e
  410106:	es add bh,bh
  410109:	add    BYTE PTR [ebx+0x6badbb9d],al
  41010f:	inc    DWORD PTR [ebx+0x67690000]
  410115:	xor    dh,BYTE PTR [edx+0x83ccff]
  41011b:	push   esi
  41011c:	dec    eax
  41011d:	inc    ebp
  41011e:	(bad)  
  410120:	inc    DWORD PTR [eax]
  410122:	add    ch,bl
  410124:	clc    
  410125:	add    BYTE PTR [eax+eax*1-0x1],dl
  410129:	add    DWORD PTR [eax],0x38
  41012c:	mov    bh,ch
  41012e:	aad    0x0
  410130:	int3   
  410131:	add    BYTE PTR [eax],al
  410133:	pop    edx
  410134:	in     eax,0xf8
  410136:	pop    esi
  410137:	(bad)  
  410138:	(bad)  
  410139:	dec    DWORD PTR [ecx-0x3c810701]
  41013f:	add    bh,bh
  410141:	add    bh,bh
  410143:	(bad)
  410147:	dec    DWORD PTR [ecx+0x43908989]
  41014d:	das    
  41014e:	sti    
  41014f:	(bad)  
  410150:	(bad)  
  410151:	inc    DWORD PTR [eax]
  410153:	push   ebx
  410154:	jge    0x41014a
  410156:	or     eax,0xff00
  41015b:	jne    0x4100fb
  41015d:	push   ss
  41015e:	sbb    al,0xff
  410160:	add    BYTE PTR [eax],al
  410162:	add    al,dl
  410164:	mov    ch,0x31
  410166:	inc    DWORD PTR [eax]
  410168:	(bad)  
  410169:	(bad)  
  41016a:	dec    DWORD PTR [ebx]
  41016c:	cdq    
  41016d:	ja     0x410160
  41016f:	inc    DWORD PTR [eax]
  410171:	add    DWORD PTR [eax],0xffffff9d
  410174:	mov    DWORD PTR [edi+ebx*2+0x0],edx
  410178:	add    DWORD PTR [eax],0xffffffff
  41017b:	ja     0x410154
  41017d:	inc    esi
  41017e:	pop    ebp
  41017f:	(bad)  
  410180:	inc    DWORD PTR [ebx-0x574aed7d]
  410186:	push   eax
  410187:	int3   
  410188:	add    BYTE PTR [eax],al
  41018a:	jmp    DWORD PTR [ecx+ebx*8]
  41018d:	cmp    eax,0xffccff4d
  410192:	add    BYTE PTR [edx],ch
  410194:	int    0xc3
  410196:	pop    esp
  410197:	inc    DWORD PTR [ebx+0x38f48300]
  41019d:	push   ebp
  41019e:	jnp    0x4101a0
  4101a0:	dec    esp
  4101a2:	add    BYTE PTR [esi+0x15],cl
  4101a5:	js     0x410179
  4101a7:	add    bh,bh
  4101a9:	mov    esp,ecx
  4101ab:	ins    DWORD PTR es:[edi],dx
  4101ac:	jmp    0xff:0x838366f5
  4101b3:	sub    DWORD PTR [eax-0x76],edi
  4101b6:	xor    bh,bh
  4101b8:	add    BYTE PTR [eax],al
  4101ba:	add    BYTE PTR [eax-0x77],bh
  4101bd:	cld    
  4101be:	leave  
  4101bf:	(bad)  
  4101c0:	(bad)  
  4101c1:	inc    DWORD PTR [eax]
  4101c3:	retf   0x2b8a
  4101c6:	mov    ch,0xff
  4101c8:	int3   
  4101c9:	int3   
  4101ca:	cmp    DWORD PTR [eax],0xffffffd1
  4101cd:	inc    ecx
  4101ce:	hlt    
  4101cf:	inc    DWORD PTR [eax]
  4101d1:	int3   
  4101d2:	xor    DWORD PTR [edi+0x66],0x4
  4101d6:	(bad)  
  4101d7:	int3   
  4101d8:	add    bh,bh
  4101da:	cmp    DWORD PTR ds:0xff89c42f,0x0
  4101e1:	int3   
  4101e2:	and    DWORD PTR [edi-0x76b1c20a],0xffffff89
  4101e9:	add    bh,bh
  4101eb:	jg     0x4101d4
  4101ed:	ins    BYTE PTR es:[edi],dx
  4101ee:	lods   al,BYTE PTR ds:[esi]
  4101ef:	add    bh,bh
  4101f1:	inc    DWORD PTR [eax]
  4101f3:	ins    BYTE PTR es:[edi],dx
  4101f4:	xchg   ebx,eax
  4101f5:	push   0xff2f
  4101fa:	add    BYTE PTR ds:0xffbe0b76,ah
  410200:	inc    DWORD PTR [ebx-0x4ca10234]
  410206:	lods   eax,DWORD PTR ds:[esi]
  410207:	cmp    edi,0xffffffff
  41020a:	int3   
  41020b:	xor    ecx,DWORD PTR ds:0xffcc8211
  410211:	int3   
  410212:	dec    DWORD PTR [ecx]
  410214:	add    eax,0x9a8e
  410219:	inc    DWORD PTR [eax]
  41021b:	and    al,0xbe
  41021d:	neg    DWORD PTR [ebp-0x7d]
  410220:	add    bh,bh
  410222:	add    BYTE PTR [ecx-0x7c5e98f0],bh
  410228:	inc    DWORD PTR [eax]
  41022a:	jmp    FWORD PTR [edx+ebx*8+0x15]
  41022e:	in     eax,dx
  41022f:	(bad)  
  410230:	inc    DWORD PTR [eax]
  410232:	add    BYTE PTR [edi+ebp*4],cl
  410235:	jle    0x4101c9
  410237:	inc    DWORD PTR [eax]
  410239:	(bad)  
  41023a:	inc    DWORD PTR [edx]
  41023c:	mov    cl,0x81
  41023e:	out    0xff,eax
  410240:	add    BYTE PTR [eax],al
  410242:	dec    DWORD PTR [eax+0x67c19]
  410248:	(bad)  
  410249:	(bad)  
  41024a:	jmp    DWORD PTR [ecx+0x63]
  41024d:	aad    0x8
  41024f:	add    bh,bh
  410251:	add    bh,bh
  410253:	popa   
  410254:	cmp    ebx,DWORD PTR [edx+0x3]
  410257:	cmp    edi,0x0
  41025a:	add    BYTE PTR [edi],al
  41025c:	clc    
  41025d:	pop    es
  41025e:	out    0xff,al
  410260:	add    bh,bh
  410262:	(bad)  
  410263:	fdiv   QWORD PTR [ebx-0x64]
  410266:	dec    ebx
  410267:	inc    DWORD PTR [eax]
  410269:	int3   
  41026a:	adc    edi,0xffffffdf
  41026d:	push   cs
  41026e:	pop    esi
  41026f:	dec    DWORD PTR [ecx+0x1613ffcc]
  410275:	hlt    
  410276:	cmp    al,0xff
  410278:	add    bh,bh
  41027a:	call   DWORD PTR [esi-0x65]
  41027d:	loop   0x41029a
  41027f:	mov    edi,edi
  410281:	(bad)  
  410282:	call   esi
  410284:	or     DWORD PTR [esi+0x2],ebp
  410287:	mov    edi,edi
  410289:	(bad)  
  41028a:	push   esp
  41028c:	add    dl,bh
  41028e:	lahf   
  41028f:	(bad)  
  410290:	inc    DWORD PTR [ebx+0x39920cff]
  410296:	sbb    al,0x0
  410298:	int3   
  410299:	(bad)  
  41029a:	jmp    ecx
  41029c:	xchg   ebx,eax
  41029d:	stos   BYTE PTR es:[edi],al
  41029e:	xchg   esp,eax
  41029f:	add    DWORD PTR [eax],0x0
  4102a2:	add    BYTE PTR [ebx],cl
  4102a4:	cli    
  4102a5:	ins    BYTE PTR es:[edi],dx
  4102a6:	das    
  4102a7:	add    bh,bh
  4102a9:	cmp    edi,0x66
  4102ac:	in     al,0x35
  4102ae:	xchg   DWORD PTR [eax],eax
  4102b0:	add    BYTE PTR [eax],al
  4102b2:	call   FWORD PTR [edx-0x20]
  4102b5:	xchg   BYTE PTR [ebx+0x0],ch
  4102bb:	mov    ch,0xf1
  4102bd:	daa    
  4102be:	gs (bad) 
  4102c0:	inc    DWORD PTR [eax]
  4102c2:	sbb    ebp,0x4f
  4102c5:	mov    esi,0xff8985
  4102ca:	(bad)  
  4102cb:	in     al,dx
  4102cc:	call   0xcc414ea2
  4102d1:	add    BYTE PTR [ebx+0x12586505],al
  4102d7:	cmp    edi,0x0
  4102da:	mov    edx,ebx
  4102dc:	pushf  
  4102dd:	mov    ds:0x8983fff3,eax
  4102e2:	inc    ecx
  4102e4:	cwde   
  4102e5:	fisttp DWORD PTR [ebx+0x0]
  4102e8:	add    BYTE PTR [eax],al
  4102ea:	push   esi
  4102ec:	xchg   ebp,eax
  4102ed:	dec    ebx
  4102ee:	mov    ds:0xffff0089,eax
  4102f3:	es jmp 0x410321
  4102f6:	mov    ds:0xff0000,al
  4102fb:	mov    al,ds:0xff99ad50
  410300:	int3   
  410301:	add    bh,bh
  410303:	test   al,0xb5
  410305:	outs   dx,BYTE PTR ds:[esi]
  410306:	push   esi
  410307:	add    bh,bh
  410309:	add    BYTE PTR [eax],al
  41030b:	retf   
  41030c:	fucomp st(3)
  41030e:	mov    dh,0x0
  410310:	inc    DWORD PTR [eax]
  410312:	dec    DWORD PTR [esi-0x9377a1]
  410318:	mov    DWORD PTR [eax],eax
  41031a:	mov    DWORD PTR [esp+edi*1],esi
  41031d:	mov    dl,0xb5
  41031f:	add    bh,bh
  410321:	add    ah,cl
  410323:	adc    bh,dh
  410325:	into   
  410326:	inc    esp
  410327:	inc    DWORD PTR [ebx+0x719dff00]
  41032d:	popf   
  41032e:	cmp    BYTE PTR [ecx+0x1689ff00],cl
  410334:	(bad)  
  410335:	mov    ds:0x83ffff88,eax
  41033a:	int3   
  41033b:	push   eax
  41033c:	stc    
  41033d:	fcom   QWORD PTR [edi]
  41033f:	inc    DWORD PTR [eax]
  410341:	(bad)  
  410342:	jmp    DWORD PTR [edi+0x3b]
  410345:	sub    BYTE PTR [ebx-0x34],bl
  410348:	(bad)  
  410349:	inc    DWORD PTR [eax]
  41034b:	cld    
  41034c:	sub    eax,0xffff3d11
  410351:	inc    DWORD PTR [ebx-0x3c873a09]
  410357:	int3   
  410358:	add    BYTE PTR [eax],al
  41035a:	inc    DWORD PTR [ebp+0xf96150]
  410360:	dec    DWORD PTR [ecx+0x3c96b0ff]
  410366:	nop
  410367:	add    bh,bh
  410369:	add    bh,bh
  41036b:	pushf  
  41036c:	xchg   esp,eax
  41036d:	sti    
  41036e:	push   ss
  41036f:	(bad)  
  410370:	(bad)  
  410371:	inc    DWORD PTR [eax]
  410373:	mov    bl,BYTE PTR [ebx]
  410375:	mov    bl,0xc6
  410377:	mov    DWORD PTR [eax],eax
  410379:	inc    DWORD PTR [eax]
  41037b:	add    ah,BYTE PTR [ebp-0x7c004263]
  410381:	add    BYTE PTR [ebx+0x14f98fbf],al
  410387:	cmp    edi,0xffffffff
  41038a:	jmp    ebx
  41038c:	xchg   ebx,eax
  41038d:	mov    edx,edi
  41038f:	inc    DWORD PTR [eax]
  410391:	(bad)  
  410392:	jmp    FWORD PTR [eax]
  410394:	ret    0x7519
  410397:	add    bh,bh
  410399:	dec    esp
  41039b:	inc    esi
  41039c:	int3   
  41039d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41039e:	loop   0x41036c
  4103a0:	add    bh,bh
  4103a2:	add    BYTE PTR [edx],ch
  4103a4:	mov    esi,0x89ffa5b1
  4103a9:	(bad)  
  4103aa:	call   DWORD PTR [ebx+esi*8-0x7c00b3ac]
  4103b1:	add    BYTE PTR [eax],al
  4103b3:	mov    edx,0xffd2a248
  4103b8:	(bad)  
  4103b9:	dec    DWORD PTR [ecx-0x58aa0dbc]
  4103bf:	inc    DWORD PTR [eax]
  4103c1:	inc    DWORD PTR [eax]
  4103c3:	(bad)  
  4103c4:	fcmove st,st(7)
  4103c6:	out    dx,al
  4103c7:	inc    DWORD PTR [eax]
  4103c9:	inc    DWORD PTR [eax]
  4103cb:	cs mov fs,edi
  4103ce:	adc    edi,edi
  4103d0:	cmp    edi,0xffffffff
  4103d3:	pop    edi
  4103d4:	(bad)  
  4103d5:	jmp    0x4102ee
  4103da:	(bad)  
  4103db:	fsub   QWORD PTR [ebp-0xcf97]
  4103e1:	(bad)  
  4103e2:	(bad)  
  4103e3:	mov    esp,0xff8b9c0e
  4103e8:	(bad)  
  4103e9:	inc    DWORD PTR [eax]
  4103eb:	inc    eax
  4103ec:	and    al,0x2f
  4103ee:	cmp    eax,0xccff89ff
  4103f3:	mov    dh,0x4c
  4103f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f6:	mov    ebx,0xffffff00
  4103fb:	cwde   
  4103fc:	mov    dh,0xc
  4103fe:	inc    edi
  4103ff:	add    BYTE PTR [eax],al
  410401:	add    BYTE PTR [eax],al
  410403:	dec    edx
  410404:	or     eax,0xffffc98b
  410409:	dec    esp
  41040b:	loope  0x41040c
  41040d:	inc    eax
  41040e:	clc    
  41040f:	(bad)  
  410410:	(bad)  
  410411:	dec    DWORD PTR [ecx+0xc34d839]
  410417:	(bad)  
  410418:	(bad)  
  410419:	inc    DWORD PTR [eax]
  41041b:	adc    esp,edx
  41041d:	(bad)  
  41041e:	out    dx,eax
  41041f:	inc    DWORD PTR [ebx-0x5b8f7601]
  410425:	xchg   ebp,eax
  410426:	ret    0xff83
  410429:	dec    esp
  41042b:	dec    edx
  41042c:	push   ebp
  41042d:	adc    ch,BYTE PTR [esi]
  41042f:	or     esp,0xffffffff
  410432:	add    BYTE PTR [ebx-0x18],bh
  410435:	fisubr WORD PTR [eax]
  410437:	int3   
  410438:	add    BYTE PTR [eax],al
  41043a:	mov    DWORD PTR [ebx+0x85e5ad],ecx
  410440:	add    BYTE PTR [ecx+0x4dd50283],cl
  410446:	and    eax,DWORD PTR [eax]
  410448:	add    BYTE PTR [eax],al
  41044a:	sub    DWORD PTR [edx],0x2a
  41044d:	mov    esp,0x8300007c
  410452:	jmp    FWORD PTR [edx-0x7ca5c562]
  410458:	(bad)  
  410459:	dec    DWORD PTR [ecx+0x420b3e58]
  41045f:	add    BYTE PTR [eax],al
  410461:	cmp    edi,0xffffffaa
  410464:	push   ecx
  410465:	aas    
  410466:	enter  0x8900,0x0
  41046a:	mov    eax,edi
  41046c:	xchg   BYTE PTR [esp+eiz*2-0x10000],al
  410473:	jmp    0x8989:0xff0142a7
  41047a:	call   eax
  41047c:	fdiv   DWORD PTR [esi]
  41047e:	inc    DWORD PTR [ebx+0x5bff0089]
  410484:	cdq    
  410485:	retf   
  410486:	out    dx,al
  410487:	mov    edi,edi
  410489:	mov    DWORD PTR [ecx+0x3b00cb87],ecx
  41048f:	(bad)  
  410490:	inc    DWORD PTR [eax]
  410492:	add    BYTE PTR [edi-0x28],dl
  410495:	ins    BYTE PTR es:[edi],dx
  410496:	sbb    bh,bh
  410498:	dec    esp
  41049a:	add    BYTE PTR [edx-0x6c764c],ah
  4104a0:	(bad)  
  4104a1:	inc    DWORD PTR [eax]
  4104a3:	jmp    0x8383:0xfff4d3b3
  4104aa:	push   edx
  4104ac:	sbb    al,0xd7
  4104ae:	push   esi
  4104af:	add    BYTE PTR [eax],al
  4104b1:	(bad)  
  4104b2:	call   DWORD PTR [ecx+esi*1-0xff321b]
  4104b9:	cmp    edi,0x60
  4104bc:	pop    esi
  4104bd:	adc    BYTE PTR ds:0xff830000,cl
  4104c3:	test   esp,edx
  4104c5:	loopne 0x410465
  4104c7:	add    DWORD PTR [eax],0x0
  4104ca:	add    BYTE PTR [edi+0x74],ah
  4104cd:	push   edi
  4104ce:	mov    ch,0xff
  4104d0:	inc    DWORD PTR [ebx+0x3df76e00]
  4104d6:	arpl   di,di
  4104d8:	cmp    edi,0x0
  4104db:	(bad)
  4104de:	enter  0xffff,0x89
  4104e2:	dec    DWORD PTR [esi+0x32]
  4104e5:	dec    esi
  4104e6:	or     bh,bh
  4104e8:	add    bh,bh
  4104ea:	(bad)  
  4104eb:	cmp    DWORD PTR [edx+0x8287],ecx
  4104f1:	int3   
  4104f2:	add    BYTE PTR [edi-0x74],bl
  4104f5:	fmul   st,st(6)
  4104f7:	add    bh,bh
  4104f9:	add    DWORD PTR [eax],0x31
  4104fc:	jno    0x4104d2
  4104fe:	and    bh,bh
  410500:	add    ah,cl
  410502:	call   DWORD PTR [eax-0x5]
  410505:	leave  
  410506:	ret    0xff00
  410509:	inc    DWORD PTR [eax]
  41050b:	test   eax,0x832b10ca
  410510:	mov    edi,edi
  410512:	int3   
  410513:	pop    ebx
  410514:	call   0x8300:0xcc0b
  41051a:	add    BYTE PTR [edi+ecx*1+0xff7b92],bl
  410521:	(bad)  
  410522:	(bad)  
  410523:	js     0x4104d3
  410525:	scas   eax,DWORD PTR es:[edi]
  410526:	pop    eax
  410527:	add    bh,bh
  410529:	inc    DWORD PTR [eax]
  41052b:	sbb    BYTE PTR [edx+0xfffdb2],ch
  410531:	dec    DWORD PTR [ecx+0x2dd6fd77]
  410537:	(bad)  
  410538:	(bad)  
  410539:	(bad)  
  41053a:	inc    DWORD PTR [ebp+0x28]
  41053d:	aam    0x80
  41053f:	add    BYTE PTR [eax],al
  410541:	cmp    edi,0x48
  410544:	mov    edx,0xffffc6a9
  410549:	cmp    edi,0x32
  41054c:	popw   ss
  41054e:	test   eax,0xff89ffff
  410553:	jmp    0xbe1a87
  410558:	add    BYTE PTR [eax],al
  41055a:	cmp    DWORD PTR [edx-0x36],0xffffffbd
  41055e:	or     eax,0x8900ff
  410563:	fldenv [edx-0x7cff35c4]
  410569:	inc    DWORD PTR [eax]
  41056b:	int    0x16
  41056d:	ret    
  41056e:	sub    cl,BYTE PTR [ecx-0x22ff0077]
  410574:	out    0xf,eax
  410576:	repnz int3 
  410578:	(bad)  
  410579:	(bad)  
  41057a:	inc    DWORD PTR [ecx+0x1f]
  41057d:	xor    al,0xd3
  41057f:	int3   
  410580:	inc    DWORD PTR [eax]
  410582:	add    BYTE PTR [ebx],dl
  410584:	rol    DWORD PTR [esi],cl
  410586:	sar    edi,0x0
  410589:	(bad)  
  41058a:	(bad)  
  41058b:	mov    ebx,0x833addea
  410590:	mov    edi,edi
  410592:	int3   
  410593:	mov    eax,ds:0xa54eed
  410598:	(bad)  
  410599:	dec    DWORD PTR [ecx+0x1bce25a8]
  41059f:	add    BYTE PTR [eax],al
  4105a1:	inc    DWORD PTR [eax]
  4105a3:	hlt    
  4105a4:	std    
  4105a5:	mov    ah,0x1c
  4105a7:	add    bh,bh
  4105a9:	cmp    edi,0xfffffff3
  4105ac:	dec    eax
  4105ad:	push   ebp
  4105ae:	test   bh,bh
  4105b0:	add    ah,cl
  4105b2:	add    BYTE PTR [edi],cl
  4105b4:	data16 jns 0x4105ca
  4105b7:	inc    DWORD PTR [ebx+0x2262ffff]
  4105bd:	cdq    
  4105be:	ds mov edi,edi
  4105c1:	inc    DWORD PTR [eax]
  4105c3:	jg     0x41054d
  4105c5:	cli    
  4105c6:	xchg   esp,eax
  4105c7:	cmp    edi,0x0
  4105ca:	inc    esp
  4105cc:	aam    0xe
  4105ce:	mov    ebx,0xff008983
  4105d3:	int    0x18
  4105d5:	jo     0x41062c
  4105d7:	add    bh,bh
  4105d9:	inc    DWORD PTR [eax]
  4105db:	mov    edi,0x83bd3277
  4105e0:	int3   
  4105e1:	cmp    edi,0xffffffb6
  4105e4:	add    BYTE PTR [esi-0x33ae],0x0
  4105eb:	jno    0x410605
  4105ed:	pop    esp
  4105ee:	jp     0x4105ef
  4105f0:	add    bh,bh
  4105f2:	inc    eax
  4105f4:	into   
  4105f5:	ja     0x41062e
  4105f7:	(bad)  
  4105f8:	dec    esp
  4105fa:	add    BYTE PTR [ebp-0xf4a799],dl
  410600:	(bad)  
  410601:	inc    DWORD PTR [eax]
  410603:	xor    eax,DWORD PTR [ecx+ecx*1]
  410606:	ud0    edi,edi
  410609:	dec    DWORD PTR [ecx+0x71ca83d9]
  41060f:	(bad)  
  410610:	dec    DWORD PTR [ecx+0x190bd783]
  410616:	or     al,0x0
  410618:	mov    DWORD PTR [ebx+0x5a994983],eax
  41061e:	es (bad) 
  410620:	(bad)  
  410621:	(bad)  
  410622:	inc    DWORD PTR [edx-0x7740d8]
  410628:	inc    DWORD PTR [eax]
  41062a:	add    DWORD PTR ds:0x2c2ec8,0xffffff89
  410631:	int3   
  410632:	jmp    DWORD PTR [eax+edi*4-0x38]
  410636:	arpl   sp,cx
  410638:	add    BYTE PTR [eax],al
  41063a:	or     DWORD PTR [esi],0xffffffed
  41063d:	enter  0xff37,0xff
  410641:	(bad)  
  410642:	push   edi
  410644:	and    eax,0xff5826
  410649:	inc    DWORD PTR [eax]
  41064b:	cmc    
  41064c:	mov    eax,ds:0xff004e82
  410651:	inc    DWORD PTR [eax]
  410653:	sub    eax,0xff0f160c
  410658:	mov    DWORD PTR [eax],eax
  41065a:	adc    eax,0xffffffb0
  41065d:	or     ecx,DWORD PTR [eax+eax*1]
  410660:	inc    DWORD PTR [eax]
  410662:	sbb    DWORD PTR [edi],0xffffffb5
  410665:	inc    edx
  410666:	rol    BYTE PTR [eax],cl
  410668:	add    BYTE PTR [ebx-0x5a7d8701],al
  41066e:	mov    ds:0xff008983,al
  410673:	test   al,0x32
  410675:	mov    esi,0xff00ec
  41067a:	inc    DWORD PTR [esi+0x7]
  41067d:	aas    
  41067e:	inc    edx
  41067f:	(bad)  
  410680:	(bad)  
  410681:	inc    DWORD PTR [eax]
  410683:	add    eax,0x831307be
  410688:	inc    DWORD PTR [ebx-0x5b23ec7d]
  41068e:	scas   al,BYTE PTR es:[edi]
  41068f:	add    bh,bh
  410691:	add    DWORD PTR [ebx+0x2038e82a],0xffffffff
  410698:	(bad)  
  410699:	dec    DWORD PTR [ecx-0x166519b0]
  41069f:	mov    esp,ecx
  4106a1:	dec    DWORD PTR [ecx+0x125a3774]
  4106a7:	(bad)  
  4106a8:	inc    DWORD PTR [eax]
  4106aa:	jmp    FWORD PTR [esi-0x4d]
  4106ad:	ror    BYTE PTR [edx],cl
  4106af:	(bad)  
  4106b0:	inc    DWORD PTR [ebx+0x2d7000]
  4106b6:	mov    ah,0x0
  4106b8:	inc    DWORD PTR [eax]
  4106ba:	call   DWORD PTR [ebx+edx*8-0xf]
  4106be:	call   0x3f9f:0xff00ff00
  4106c5:	aam    0x70
  4106c7:	inc    DWORD PTR [eax]
  4106c9:	add    bh,bh
  4106cb:	mov    eax,ds:0x131a43
  4106d0:	inc    DWORD PTR [ebx+0x317ff7cc]
  4106d6:	call   0x4107da
  4106db:	test   al,0xbb
  4106dd:	sahf   
  4106de:	std    
  4106df:	add    BYTE PTR [ebx+0x35f300ff],al
  4106e5:	je     0x410676
  4106e7:	inc    DWORD PTR [eax]
  4106e9:	(bad)  
  4106ea:	inc    ecx
  4106ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ed:	fwait
  4106ee:	imul   edi,edi,0x2700ff89
  4106f4:	(bad)  
  4106f5:	stc    
  4106f6:	add    DWORD PTR [ecx-0x2a007c01],ecx
  4106fc:	loope  0x4106d4
  4106fe:	mov    dl,0xff
  410700:	add    ah,cl
  410702:	add    dl,bh
  410704:	ds lods al,BYTE PTR es:[esi]
  410707:	(bad)  
  410708:	(bad)  
  410709:	dec    esp
  41070b:	fadd   st,st(3)
  41070d:	std    
  41070e:	imul   eax,DWORD PTR [eax],0xffffffff
  410711:	cmp    edi,0xffffffb9
  410714:	sbb    BYTE PTR [edi-0xff002c],cl
  41071a:	add    BYTE PTR ds:0xffa5d374,ah
  410720:	add    BYTE PTR [eax],al
  410722:	or     ebx,0xffffffe1
  410725:	xchg   ecx,eax
  410726:	fiadd  DWORD PTR [ebx+0x46ffff00]
  41072c:	scas   eax,DWORD PTR es:[edi]
  41072d:	xchg   BYTE PTR [ecx-0x1],dl
  410730:	inc    DWORD PTR [eax]
  410732:	call   FWORD PTR [ebp-0x78]
  410735:	je     0x41076e
  410737:	add    BYTE PTR [ebx+0x1093ffff],al
  41073d:	lds    esi,FWORD PTR [edx]
  41073f:	inc    DWORD PTR [eax]
  410741:	add    bh,bh
  410743:	test   DWORD PTR [eax-0xe2e8],edx
  410749:	dec    DWORD PTR [ecx+0x78f91971]
  41074f:	mov    DWORD PTR [eax],eax
  410751:	add    bh,bh
  410753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410754:	out    0x21,eax
  410756:	sub    BYTE PTR [eax],al
  410758:	add    BYTE PTR [ebx+0x6e164c00],al
  41075e:	(bad)  
  41075f:	inc    DWORD PTR [eax]
  410761:	add    bh,bh
  410763:	das    
  410764:	mov    ecx,0xcccc7e7c
  410769:	add    BYTE PTR [ebx-0x19273015],al
  41076f:	add    bh,bh
  410771:	(bad)  
  410772:	dec    DWORD PTR [ecx]
  410774:	dec    esp
  410775:	xor    al,0xa2
  410777:	inc    DWORD PTR [ebx-0x60af3400]
  41077d:	cdq    
  41077e:	sub    eax,DWORD PTR [eax]
  410780:	inc    DWORD PTR [eax]
  410782:	add    BYTE PTR [eax+0x5a],bh
  410785:	adc    BYTE PTR [ecx-0x7d],0xff
  410789:	mov    DWORD PTR [ecx+0x2af554d8],ecx
  41078f:	(bad)  
  410790:	inc    DWORD PTR [ebx+0x10157cff]
  410796:	inc    DWORD PTR ss:[eax]
  410799:	(bad)  
  41079a:	jmp    DWORD PTR [esi+0x3f]
  41079d:	or     BYTE PTR [esi+0x89ffff],al
  4107a3:	dec    ebp
  4107a4:	cmp    al,0x9c
  4107a6:	sti    
  4107a7:	(bad)  
  4107a8:	(bad)  
  4107a9:	(bad)  
  4107aa:	(bad)  
  4107ab:	jmp    0xff:0xffd3fe3c
  4107b2:	call   esp
  4107b4:	jns    0x4107bc
  4107b6:	aad    0xff
  4107b8:	dec    DWORD PTR [ecx-0x3f1b4601]
  4107be:	cmp    edi,0xffffff83
  4107c1:	inc    DWORD PTR [ebx+0x4a26ab10]
  4107c7:	(bad)  
  4107c8:	(bad)  
  4107c9:	inc    DWORD PTR [eax]
  4107cb:	pop    es
  4107cc:	sbb    eax,0x89ff73d4
  4107d1:	int3   
  4107d2:	adc    DWORD PTR [edi],0xffffffcf
  4107d5:	ud1    eax,DWORD PTR [eax]
  4107d8:	(bad)  
  4107d9:	(bad)  
  4107da:	(bad)  
  4107db:	cmp    al,0x38
  4107dd:	(bad)  
  4107de:	out    0xff,eax
  4107e0:	add    bh,bh
  4107e2:	add    BYTE PTR [edi-0x3acd47],al
  4107e8:	dec    esp
  4107ea:	sbb    DWORD PTR [eax],0x2c
  4107ed:	mov    esi,0xccccff2f
  4107f2:	add    ah,cl
  4107f4:	adc    esi,DWORD PTR [eax+ebp*8]
  4107f7:	(bad)  
  4107f8:	(bad)  
  4107f9:	dec    DWORD PTR [ecx-0x7ec6533c]
  4107ff:	or     esp,0x0
  410802:	add    BYTE PTR [ebp+0x17d118],al
  410808:	(bad)  
  410809:	dec    DWORD PTR [ecx-0x757d77d7]
  41080f:	inc    DWORD PTR [ebx-0x71b40077]
  410815:	mov    ebx,0xff00ffd0
  41081a:	mov    DWORD PTR [esi-0x33],esi
  41081d:	arpl   WORD PTR [eax+0xff00ff],di
  410823:	ins    DWORD PTR es:[edi],dx
  410824:	push   ecx
  410825:	ins    BYTE PTR es:[edi],dx
  410826:	mov    esp,0xffffff89
  41082b:	sahf   
  41082c:	mov    bl,0x7c
  41082e:	cmp    eax,0xffffcc83
  410833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410834:	dec    esi
  410835:	inc    ebp
  410836:	pop    ebx
  410837:	add    BYTE PTR [eax],al
  410839:	dec    esp
  41083b:	aas    
  41083c:	sub    DWORD PTR [ebx-0x760000ba],esi
  410842:	add    DWORD PTR [ebp+0x2d],0x24
  410846:	pop    esp
  410847:	add    DWORD PTR [eax],0xffffffff
  41084a:	inc    DWORD PTR ds:0xff1ebe1b
  410850:	(bad)  
  410851:	(bad)  
  410852:	push   ebx
  410854:	pop    ebx
  410855:	push   ebp
  410856:	jg     0x410858
  410858:	cmp    edi,0x0
  41085b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41085c:	push   esi
  41085d:	jno    0x410875
  41085f:	dec    esp
  410861:	add    BYTE PTR [ebx-0x3ad65e9d],al
  410867:	dec    DWORD PTR [ecx-0x33350000]
  41086d:	jmp    0x4a83:0xffff8326
  410874:	les    eax,FWORD PTR [edi-0x59]
  410877:	add    BYTE PTR [ebx+0x77840000],al
  41087d:	test   DWORD PTR [ebp+0x0],esp
  410880:	int3   
  410881:	(bad)  
  410882:	call   FWORD PTR [edx+ebp*1-0xff8a9e]
  410889:	add    bh,bh
  41088b:	lea    ecx,[eax+0xff5127]
  410891:	(bad)  
  410892:	(bad)  
  410893:	aas    
  410894:	push   ds
  410895:	add    DWORD PTR [eax-0x1],edx
  41089b:	sbb    DWORD PTR [ebx],edi
  41089d:	ss dec ebx
  41089f:	(bad)  
  4108a0:	(bad)  
  4108a1:	inc    DWORD PTR [ebx+0x6aee6a09]
  4108a7:	mov    DWORD PTR [eax],eax
  4108a9:	mov    DWORD PTR [ebx-0x65737305],eax
  4108af:	int3   
  4108b0:	(bad)  
  4108b1:	inc    DWORD PTR [ebx-0x56fe6397]
  4108b7:	add    bh,bh
  4108b9:	mov    edi,edi
  4108bb:	imul   esi,ebp,0x89ff1461
  4108c1:	inc    DWORD PTR [ebx+0x3a1252c5]
  4108c7:	(bad)  
  4108c8:	dec    esp
  4108ca:	cmp    DWORD PTR [edi],0xffffffab
  4108cd:	loop   0x41085a
  4108cf:	add    bh,bh
  4108d1:	inc    DWORD PTR [eax]
  4108d3:	pop    eax
  4108d4:	retf   
  4108d5:	jmp    0xaf89:0xffccff04
  4108dc:	push   es
  4108dd:	mov    bl,0x92
  4108df:	int3   
  4108e0:	(bad)  
  4108e1:	inc    DWORD PTR [ebx-0x514acf95]
  4108e7:	(bad)  
  4108e8:	(bad)  
  4108e9:	inc    DWORD PTR [eax]
  4108eb:	sar    BYTE PTR [ecx-0x7c00f756],0x83
  4108f2:	dec    DWORD PTR [edi-0x10]
  4108f5:	cmp    ebx,ebp
  4108f7:	inc    DWORD PTR [eax]
  4108f9:	add    bh,bh
  4108fb:	or     BYTE PTR [esi],0x49
  4108fe:	(bad)  
  410900:	add    bh,bh
  410902:	add    BYTE PTR [ebx+0x2a],ch
  410905:	retf   
  410906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410907:	add    bh,bh
  410909:	add    bh,bh
  41090b:	add    eax,0x543c7f
  410910:	(bad)  
  410911:	inc    DWORD PTR [eax]
  410913:	in     eax,0x47
  410915:	sahf   
  410916:	push   edx
  410917:	add    bh,bh
  410919:	add    BYTE PTR [ebx-0x723cae7],al
  41091f:	dec    DWORD PTR [ecx+0x3bc589ff]
  410925:	rep outs dx,DWORD PTR ds:[esi]
  410927:	(bad)  
  410928:	(bad)  
  410929:	inc    DWORD PTR [ebx+0x15a97e13]
  41092f:	dec    esp
  410931:	add    bh,bh
  410933:	shl    BYTE PTR [eax],cl
  410935:	jae    0x410938
  410937:	add    ah,cl
  410939:	inc    DWORD PTR [eax]
  41093b:	daa    
  41093c:	jmp    0x410908
  41093e:	and    al,0x0
  410940:	inc    DWORD PTR [eax]
  410942:	add    BYTE PTR [edx-0x4d27a3],ch
  410948:	inc    DWORD PTR [ebx-0x52644b77]
  41094e:	mov    ah,0x0
  410950:	add    BYTE PTR [eax],al
  410952:	mov    DWORD PTR [edi-0x3c36a],ebp
  410958:	add    bh,bh
  41095a:	sbb    DWORD PTR [ebx],0x26
  41095d:	das    
  41095e:	pop    ss
  41095f:	cmp    edi,0xffffffff
  410962:	jmp    FWORD PTR [ebp-0xb8168]
  410968:	(bad)  
  410969:	(bad)  
  41096a:	call   DWORD PTR [esi-0x6c]
  41096d:	test   DWORD PTR [edx],eax
  41096f:	(bad)  
  410970:	inc    DWORD PTR [ebx-0xa81ca00]
  410976:	imul   edi,edi,0xffffff83
  410979:	int3   
  41097a:	add    DWORD PTR [eax+0x52],0x6c
  41097e:	ins    DWORD PTR es:[edi],dx
  41097f:	(bad)  
  410980:	inc    DWORD PTR [eax]
  410982:	add    BYTE PTR [ebp-0x9b145d],dh
  410988:	(bad)  
  410989:	(bad)  
  41098a:	(bad)  
  41098b:	mov    edx,0xfffc7d69
  410990:	(bad)  
  410991:	inc    DWORD PTR [ebx+0x4ad3df35]
  410997:	add    BYTE PTR [ecx+0x4b6000cc],cl
  41099d:	and    DWORD PTR [esi],esi
  41099f:	(bad)  
  4109a0:	inc    DWORD PTR [eax]
  4109a2:	mov    DWORD PTR [edi],esp
  4109a4:	out    0x3f,eax
  4109a6:	add    eax,0x83cc89ff
  4109ab:	fimul  DWORD PTR [edx]
  4109ad:	(bad)  
  4109ae:	push   0xff0000ff
  4109b3:	or     eax,eax
  4109b5:	ins    BYTE PTR es:[edi],dx
  4109b6:	sub    DWORD PTR [eax],eax
  4109b8:	(bad)  
  4109b9:	(bad)  
  4109ba:	dec    DWORD PTR [ebx-0x6d6b16]
  4109c0:	add    BYTE PTR [ecx-0x7c7b4301],cl
  4109c6:	xchg   esp,eax
  4109c7:	(bad)  
  4109c8:	dec    esp
  4109ca:	add    BYTE PTR [ebx],dh
  4109cc:	(bad)  
  4109cd:	in     eax,0xcb
  4109cf:	(bad)  
  4109d0:	inc    DWORD PTR [eax]
  4109d2:	jmp    FWORD PTR [ebp+0x50]
  4109d5:	xchg   esi,eax
  4109d6:	or     eax,DWORD PTR [eax]
  4109d8:	int3   
  4109d9:	int3   
  4109da:	int3   
  4109db:	int3   
  4109dc:	int3   
  4109dd:	int3   
  4109de:	int3   
  4109df:	int3   
  4109e0:	mov    al,BYTE PTR [eax]
  4109e2:	add    DWORD PTR [ebp-0x80],0xffffffff
  4109e6:	cmp    al,BYTE PTR [eax]
  4109e8:	icebp  
  4109e9:	(bad)  
  4109ea:	call   FWORD PTR [eax-0x1cffcb]
  4109f0:	pop    ss
  4109f1:	add    bh,bh
  4109f3:	ret    
  4109f4:	(bad)  
  4109f5:	int3   
  4109f6:	dec    ebx
  4109f7:	call   FWORD PTR [ebp-0x1]
  4109fa:	add    BYTE PTR [eax+0x4],dl
  4109fd:	add    BYTE PTR [esi+0xffc300],dl
  410a03:	and    eax,DWORD PTR [edi+edi*8-0x4e]
  410a07:	add    ch,ah
  410a09:	dec    DWORD PTR [ecx+0x4ff03e3]
  410a0f:	int3   
  410a10:	out    dx,eax
  410a11:	add    DWORD PTR [eax],0xfffffff9
  410a14:	add    BYTE PTR cs:[ebp+0x0],ch
  410a18:	push   ecx
  410a19:	(bad)  
  410a1a:	(bad)  
  410a1b:	mov    ebp,0xff44ffba
  410a20:	lods   al,BYTE PTR ds:[esi]
  410a21:	int3   
  410a22:	int3   
  410a23:	jecxz  0x410a21
  410a25:	inc    DWORD PTR [eax-0x1]
  410a28:	sbb    al,BYTE PTR [eax]
  410a2a:	inc    edx
  410a2c:	pop    ecx
  410a2d:	call   FWORD PTR [eax+eax*1]
  410a30:	fadd   QWORD PTR [ebx-0x7c4cad01]
  410a36:	test   al,0x0
  410a38:	mov    ds:0xd0aaffff,al
  410a3d:	dec    DWORD PTR [ecx]
  410a3f:	mov    DWORD PTR [eax+eax*1],eax
  410a42:	push   DWORD PTR [eax+0x25]
  410a45:	add    ah,bl
  410a47:	sub    DWORD PTR [eax-0x34],0xffffff89
  410a4b:	xchg   ecx,eax
  410a4c:	ja     0x410a4d
  410a4e:	cli    
  410a4f:	add    BYTE PTR [eax],bh
  410a51:	inc    DWORD PTR [eax]
  410a53:	fmulp  st(6),st
  410a55:	int3   
  410a56:	cmp    al,0xff
  410a58:	pop    ss
  410a59:	(bad)  
  410a5a:	inc    DWORD PTR ds:0xcc6dff2a
  410a60:	xor    eax,0x2d53ff83
  410a65:	mov    DWORD PTR [esi],esi
  410a67:	dec    DWORD PTR [esi]
  410a69:	(bad)  
  410a6a:	dec    DWORD PTR [esi]
  410a6c:	dec    eax
  410a6d:	call   FWORD PTR [ecx-0x7c4201]
  410a73:	jb     0x410a6c
  410a75:	sbb    ebp,0x0
  410a78:	xor    eax,DWORD PTR [ebx-0x3344bd01]
  410a7e:	inc    esi
  410a7f:	(bad)  
  410a80:	js     0x410a82
  410a82:	call   FWORD PTR [edi+0x4c]
  410a85:	add    BYTE PTR [edi-0x1],dh
  410a88:	xlat   BYTE PTR ds:[ebx]
  410a89:	or     DWORD PTR [ecx+0xe832c2a],0x0
  410a90:	or     esp,0x838e4f00
  410a96:	dec    ecx
  410a97:	push   eax
  410a99:	add    BYTE PTR [eax],al
  410a9b:	add    bh,BYTE PTR [ebx]
  410a9d:	add    bh,bh
  410a9f:	jmp    FWORD PTR [ebp-0x29f0000]
  410aa5:	cmp    DWORD PTR [ebx+eax*4-0x2c],0x0
  410aaa:	push   ebx
  410aac:	pop    ss
  410aad:	(bad)  
  410aae:	mov    esi,0x89ffedcc
  410ab3:	push   ds
  410ab4:	pop    esp
  410ab5:	add    al,ch
  410ab7:	add    BYTE PTR [edi+edi*8-0x901f34],dl
  410abe:	loop   0x410abf
  410ac0:	push   edi
  410ac1:	add    ah,cl
  410ac3:	inc    eax
  410ac4:	push   ds
  410ac5:	adc    DWORD PTR [esi],0xffffff83
  410ac8:	mov    al,0x83
  410aca:	add    BYTE PTR [edx-0x9e0054],dh
  410ad0:	jle    0x410ad2
  410ad2:	push   DWORD PTR [edx+0x38]
  410ad5:	call   FWORD PTR [ebx-0x77]
  410ad8:	retf   
  410ad9:	(bad)  
  410ada:	inc    DWORD PTR [edi+eiz*2-0x1]
  410ade:	xchg   esp,eax
  410adf:	dec    edi
  410ae1:	inc    DWORD PTR [eax]
  410ae3:	push   ds
  410ae4:	rol    DWORD PTR [eax],1
  410ae6:	jne    0x410ae7
  410ae8:	or     edi,edi
  410aea:	add    BYTE PTR [eax],cl
  410aec:	pop    edx
  410aed:	call   FWORD PTR [esp+ecx*8-0x5f]
  410af1:	inc    DWORD PTR [eax]
  410af3:	push   ds
  410af4:	adc    eax,DWORD PTR [eax]
  410af6:	inc    eax
  410af7:	add    cl,dh
  410af9:	inc    DWORD PTR [eax]
  410afb:	imul   edi,eax,0xffffffcc
  410afe:	clc    
  410aff:	add    BYTE PTR ds:0xbcf683ff,dl
  410b05:	call   FWORD PTR [ebx]
  410b07:	add    BYTE PTR ds:0xd84789ff,al
  410b0d:	jmp    DWORD PTR [edi]
  410b0f:	(bad)  
  410b10:	aas    
  410b11:	dec    esp
  410b13:	jecxz  0x410abf
  410b15:	dec    DWORD PTR [ebx-0x33338800]
  410b1b:	or     bh,dl
  410b1d:	push   DWORD PTR [esi]
  410b1f:	add    BYTE PTR [edx-0x5d01ff7d],dh
  410b25:	or     DWORD PTR [ebp-0xff4d34],0x19
  410b2c:	push   eax
  410b2d:	add    BYTE PTR [ecx+0xff3bff],bl
  410b33:	jns    0x410b8f
  410b35:	mov    DWORD PTR [edx],edi
  410b37:	int3   
  410b38:	fld    QWORD PTR [eax]
  410b3a:	mov    DWORD PTR [edi-0x9f00d9],edi
  410b40:	xchg   ebx,eax
  410b41:	(bad)  
  410b42:	dec    DWORD PTR [ecx-0x3b]
  410b45:	dec    DWORD PTR [eax-0x7d]
  410b48:	jno    0x410b49
  410b4a:	add    BYTE PTR [ebx],cl
  410b4c:	inc    ecx
  410b4d:	add    BYTE PTR [edx],ch
  410b4f:	push   DWORD PTR [ebp-0x1]
  410b52:	sbb    ebx,0x4b
  410b55:	add    BYTE PTR ds:0xff0020ff,cl
  410b5b:	xor    bh,bh
  410b5d:	inc    DWORD PTR [eax+0x0]
  410b60:	push   cs
  410b61:	mov    edi,edi
  410b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b64:	call   0xc3cacef2
  410b69:	add    BYTE PTR [ebx+0x56ffb330],al
  410b6f:	add    BYTE PTR [esi-0x1],bl
  410b72:	add    BYTE PTR [ebp-0x537c51],dh
  410b78:	and    al,0x83
  410b7a:	int3   
  410b7b:	and    esp,DWORD PTR [esi]
  410b7d:	add    BYTE PTR [ebp+0x0],cl
  410b80:	iret   
  410b81:	(bad)  
  410b82:	call   FWORD PTR [esi+edx*1]
  410b85:	add    BYTE PTR [ebx-0x1],ch
  410b88:	arpl   di,di
  410b8a:	adc    DWORD PTR [esi-0x2cffa5],0x24
  410b91:	cmp    edi,0xfffffff4
  410b94:	out    0x0,eax
  410b96:	sub    al,0xff
  410b98:	and    bh,bh
  410b9a:	add    BYTE PTR [ebx-0x7a],dh
  410b9d:	(bad)  
  410b9e:	jmp    0xca32:0xc9ff
  410ba5:	add    BYTE PTR ds:0xffffd4ff,al
  410bab:	mov    DWORD PTR [eax-0x7d],esp
  410bae:	loopne 0x410bb0
  410bb0:	or     edi,edi
  410bb2:	add    dh,ch
  410bb4:	adc    eax,0xabffff89
  410bb9:	add    BYTE PTR [eax],al
  410bbb:	push   esi
  410bbc:	inc    BYTE PTR [eax]
  410bbe:	jno    0x410b8c
  410bc0:	mov    bh,0xff
  410bc2:	dec    DWORD PTR [eax-0x7cdeff92]
  410bc8:	loop   0x410bc9
  410bca:	add    BYTE PTR [eax-0x52],bh
  410bcd:	mov    DWORD PTR [ecx-0x7c1701],esp
  410bd3:	inc    ecx
  410bd4:	push   esi
  410bd5:	add    BYTE PTR [ecx-0x1],cl
  410bd8:	ror    DWORD PTR [ecx-0x99f501],1
  410bde:	pop    ss
  410bdf:	jmp    FWORD PTR [eax]
  410be1:	inc    DWORD PTR [eax]
  410be3:	lock xchg edi,eax
  410be5:	or     eax,0xffffffff
  410be8:	add    edi,edi
  410bea:	add    BYTE PTR [eax-0x7c760096],ah
  410bf0:	retf   
  410bf1:	or     DWORD PTR [ecx-0x27665ee],0x0
  410bf8:	jle    0x410bf9
  410bfa:	jmp    DWORD PTR [ebp-0xcf7c28]
  410c00:	cdq    
  410c01:	or     esp,0x73
  410c04:	fild   DWORD PTR [eax]
  410c06:	outs   dx,BYTE PTR ds:[esi]
  410c07:	call   DWORD PTR [edx-0x34]
  410c0a:	jmp    DWORD PTR [esi-0x59005c]
  410c10:	inc    DWORD PTR ss:[eax]
  410c13:	popf   
  410c14:	fiadd  WORD PTR [eax]
  410c16:	(bad)  
  410c17:	push   DWORD PTR [esi-0x1]
  410c1a:	mov    DWORD PTR [ecx-0x5c0059],ebx
  410c20:	mov    bl,0xff
  410c22:	int3   
  410c23:	or     eax,0x2f009d
  410c28:	cwde   
  410c29:	inc    DWORD PTR [eax]
  410c2b:	push   edi
  410c2c:	cli    
  410c2d:	add    cl,dl
  410c2f:	add    BYTE PTR [esi+0x2c78ffff],ah
  410c35:	add    BYTE PTR [ebp-0xff2800],cl
  410c3b:	and    edi,esp
  410c3d:	int3   
  410c3e:	add    edi,edi
  410c40:	and    eax,0x6f77cc00
  410c45:	add    BYTE PTR ds:0xff0039cc,ah
  410c4b:	cmp    DWORD PTR [eax+eax*1-0x7f],0xcc9600
  410c53:	cmp    dh,BYTE PTR [ecx]
  410c55:	dec    DWORD PTR [eax+eax*1]
  410c58:	dec    ebx
  410c59:	dec    esp
  410c5b:	loope  0x410c16
  410c5d:	add    ah,bh
  410c5f:	call   DWORD PTR [ecx]
  410c61:	add    DWORD PTR [eax],0xffffffd2
  410c64:	ret    0xe283
  410c67:	jmp    FWORD PTR [esi]
  410c69:	int3   
  410c6a:	add    BYTE PTR [edi-0xb9ffd2],bh
  410c70:	mov    bh,bh
  410c72:	call   esp
  410c74:	jmp    0x83ff:0xab899aff
  410c7b:	(bad)  
  410c7c:	popa   
  410c7d:	inc    ecx
  410c7f:	mov    DWORD PTR [edi+0x4665cc83],ecx
  410c85:	sbb    DWORD PTR [eax],0xffffffff
  410c88:	jle    0x410c8a
  410c8a:	add    ah,al
  410c8c:	push   ecx
  410c8d:	or     DWORD PTR [ebx-0x1],0x35
  410c91:	inc    DWORD PTR [eax]
  410c93:	ss push cs
  410c95:	(bad)  
  410c96:	jmp    0xfb7a:0x89ff9ecc
  410c9d:	jmp    FWORD PTR [ebx-0x7d]
  410ca0:	xchg   bh,bh
  410ca2:	add    cl,cl
  410ca4:	in     eax,dx
  410ca5:	jmp    edx
  410ca7:	add    BYTE PTR [ebx-0x7d],ch
  410caa:	(bad)  
  410cab:	out    dx,eax
  410cac:	dec    ah
  410cae:	(bad)  
  410caf:	dec    ebp
  410cb1:	add    BYTE PTR [eax],al
  410cb3:	dec    esi
  410cb4:	cmp    bh,0xfb
  410cb7:	add    cl,ah
  410cb9:	mov    edi,edi
  410cbb:	xor    cl,BYTE PTR [ebp+0x5dff5aff]
  410cc1:	(bad)  
  410cc2:	(bad)  
  410cc3:	out    dx,al
  410cc4:	sub    cl,ah
  410cc6:	enter  0xe3ff,0x83
  410cca:	inc    eax
  410ccc:	inc    esp
  410ccd:	add    BYTE PTR [edi],dh
  410ccf:	inc    DWORD PTR [ebp-0x2803ff34]
  410cd5:	push   ebx
  410cd7:	add    BYTE PTR [edi+0x76b783ff],cl
  410cdd:	call   FWORD PTR [ebx+0xff7c83]
  410ce3:	and    al,0x5d
  410ce5:	dec    DWORD PTR [edi]
  410ce7:	sbb    DWORD PTR [edi-0x1],0xffffffff
  410ceb:	repnz xor al,BYTE PTR [ebx-0x9676cf]
  410cf2:	int3   
  410cf3:	sbb    al,dh
  410cf5:	add    al,ch
  410cf7:	int3   
  410cf8:	mov    ebp,0xcf3d00ff
  410cfd:	or     edi,0xffffffff
  410d00:	mov    al,0xff
  410d02:	inc    DWORD PTR [ebx+0x7dff5d]
  410d08:	jl     0x410d0a
  410d0a:	mov    DWORD PTR [ebp-0x1aff20],esi
  410d10:	adc    eax,DWORD PTR [eax]
  410d12:	or     DWORD PTR [ebp-0xbe7c3e],0x35
  410d19:	add    DWORD PTR [eax],0xffffffc2
  410d1c:	lods   al,BYTE PTR ds:[esi]
  410d1d:	inc    DWORD PTR [edx+0x830fff]
  410d23:	xchg   esp,eax
  410d24:	or     eax,0xf70052ff
  410d29:	add    BYTE PTR [ecx+0x13ff09f2],cl
  410d2f:	cmp    DWORD PTR [ebp-0x7d],0xffffffff
  410d33:	cdq    
  410d34:	cmp    edi,0xffffff88
  410d37:	call   DWORD PTR [ebp-0x1]
  410d3a:	add    BYTE PTR [esi-0x7b],bl
  410d3d:	jmp    DWORD PTR [ebx+0x0]
  410d40:	or     BYTE PTR [ebx+0xa46c00],al
  410d46:	sar    bh,0xe2
  410d49:	int3   
  410d4a:	add    BYTE PTR [edi+ecx*1-0x1],ch
  410d4e:	inc    ebp
  410d4f:	add    BYTE PTR [edi],cl
  410d51:	(bad)  
  410d52:	dec    esp
  410d54:	stc    
  410d55:	push   ecx
  410d57:	jmp    FWORD PTR [ecx]
  410d59:	(bad)  
  410d5a:	push   DWORD PTR [esi-0x25]
  410d5d:	add    al,dl
  410d5f:	add    BYTE PTR [ebx-0x1],bl
  410d62:	add    BYTE PTR [ecx+0xe1ff7b],al
  410d68:	lods   eax,DWORD PTR ds:[esi]
  410d69:	cmp    edi,0x5
  410d6c:	mov    ebx,0xce838900
  410d71:	(bad)  
  410d72:	dec    DWORD PTR [ebx]
  410d74:	(bad)  
  410d75:	jmp    edi
  410d77:	add    BYTE PTR [eax-0x575e0100],al
  410d7d:	int3   
  410d7e:	(bad)  
  410d80:	cmp    BYTE PTR [ecx-0x520034],cl
  410d86:	xchg   ebp,eax
  410d87:	add    BYTE PTR [esi+0x0],cl
  410d8a:	sub    ebx,0xffffff94
  410d8d:	int3   
  410d8e:	dec    esi
  410d8f:	add    dh,bl
  410d91:	inc    DWORD PTR [eax]
  410d93:	shl    DWORD PTR [edx+0x0],0x4d
  410d97:	add    BYTE PTR [edx],dh
  410d99:	inc    DWORD PTR [eax]
  410d9b:	add    edx,0xffffffcc
  410d9e:	ss inc eax
  410da1:	inc    DWORD PTR [eax]
  410da3:	jb     0x410da9
  410da5:	int3   
  410da6:	call   0x4200ab
  410dab:	rol    BYTE PTR [edi],1
  410dad:	add    cl,ah
  410daf:	mov    DWORD PTR [edi-0x7d],edx
  410db2:	and    DWORD PTR [ebp+0x2cff71],0x6d
  410db9:	(bad)  
  410dba:	jmp    FWORD PTR [edi+0x4a]
  410dbd:	mov    eax,edi
  410dbf:	add    BYTE PTR [esi+0xed0ff89],cl
  410dc5:	add    BYTE PTR [edx-0x5700],al
  410dcb:	jmp    0x89f5:0xff9eff6b
  410dd2:	add    BYTE PTR [esi+0x37],cl
  410dd5:	dec    ebx
  410dd7:	add    BYTE PTR [ecx-0x1],bl
  410dda:	dec    eax
  410ddc:	idiv   bh
  410dde:	jo     0x410ddf
  410de0:	popf   
  410de1:	or     DWORD PTR [ecx+0x1fcc1508],0xffffffff
  410de8:	cmp    bh,0xff
  410deb:	add    eax,DWORD PTR [eax+0x9ff9689]
  410df1:	int3   
  410df2:	(bad)  
  410df3:	mov    esp,0x83b1ffa3
  410df8:	mov    BYTE PTR [eax],al
  410dfa:	jmp    DWORD PTR [ebx]
  410dfc:	mov    eax,0x4a002c89
  410e01:	add    DWORD PTR [eax],0x41
  410e04:	iret   
  410e05:	add    BYTE PTR [edx-0x7600aa01],bh
  410e0b:	push   es
  410e0c:	or     eax,0xbe006883
  410e11:	add    BYTE PTR [eax],al
  410e13:	inc    ecx
  410e14:	dec    ecx
  410e15:	add    BYTE PTR [edx-0x1],al
  410e18:	stos   BYTE PTR es:[edi],al
  410e19:	add    BYTE PTR [ebx+0xb83b7f4],al
  410e1f:	adc    eax,0xffffffcc
  410e22:	cmp    DWORD PTR [ecx-0x30],0x0
  410e26:	fadd   QWORD PTR [eax]
  410e28:	jmp    0x5e00:0x6f7900ff
  410e2f:	inc    DWORD PTR [edx-0x7ef50034]
  410e35:	add    BYTE PTR [ebx+0x0],al
  410e38:	arpl   WORD PTR [ebx+0xb6be00],ax
  410e3e:	test   al,0x83
  410e40:	mov    ds:0x9644ffff,al
  410e45:	cmp    DWORD PTR [ecx+0x83cb89],0x13
  410e4c:	inc    edi
  410e4d:	call   eax
  410e4f:	(bad)  
  410e50:	(bad)  
  410e52:	push   esi
  410e54:	ds int3 
  410e56:	sbb    cl,BYTE PTR [ecx-0x6e7600cf]
  410e5c:	ins    BYTE PTR es:[edi],dx
  410e5d:	add    BYTE PTR [edi+edi*8+0x34],al
  410e61:	add    bh,bh
  410e63:	mov    WORD PTR [eax-0x1],?
  410e66:	and    eax,DWORD PTR [ebx-0x6affff2f]
  410e6c:	sar    bh,cl
  410e6e:	jg     0x410e6f
  410e70:	cmc    
  410e71:	dec    DWORD PTR [ecx-0x15ffe709]
  410e77:	sub    DWORD PTR [ebp-0x1],0x0
  410e7b:	xlat   BYTE PTR ds:[ebx]
  410e7c:	and    al,0x0
  410e7e:	xor    eax,0xffff21ff
  410e83:	or     BYTE PTR [esi+0x5883aa83],al
  410e89:	add    BYTE PTR [eax],al
  410e8b:	or     al,0x92
  410e8d:	call   edx
  410e8f:	mov    esi,ebx
  410e91:	inc    DWORD PTR [eax]
  410e93:	mov    eax,0xff92ccc4
  410e98:	pusha  
  410e99:	or     DWORD PTR [ecx+0x430006ac],0xffffffff
  410ea0:	add    BYTE PTR fs:[ebx-0x7b7c2eac],al
  410ea7:	adc    DWORD PTR [edi-0x1],0xffffffff
  410eab:	(bad)  
  410eac:	jle    0x410ead
  410eae:	jp     0x410eb0
  410eb0:	lea    eax,[eax]
  410eb2:	dec    DWORD PTR [ebp-0x567c8b]
  410eb8:	jle    0x410eb9
  410eba:	push   DWORD PTR [eax+0x2500d7]
  410ec0:	dec    esp
  410ec1:	add    BYTE PTR [ebx+0x7bff406a],al
  410ec7:	(bad)  
  410ec8:	std    
  410ec9:	int3   
  410eca:	add    BYTE PTR [ecx-0x47],bl
  410ecd:	int3   
  410ece:	sar    bh,0xa5
  410ed1:	inc    DWORD PTR [ebx+0x4800550c]
  410ed7:	add    BYTE PTR [edi+0x0],dl
  410eda:	dec    DWORD PTR [edx-0x63]
  410edd:	sub    esp,0xffffffff
  410ee0:	sar    edi,1
  410ee2:	inc    DWORD PTR [eax+esi*4-0x62ffc301]
  410ee9:	int3   
  410eea:	xor    DWORD PTR [eax],0xffffffad
  410eed:	mov    DWORD PTR [esi-0x34],ebx
  410ef0:	in     al,0xff
  410ef2:	add    BYTE PTR ds:0x83d2ffd3,ah
  410ef8:	push   ss
  410ef9:	int3   
  410efa:	(bad)  
  410efb:	fiadd  DWORD PTR [eax+eax*1-0x13]
  410eff:	add    BYTE PTR [ecx+0x0],bh
  410f02:	mov    DWORD PTR [ebx+ebx*8+0x2bffdd89],esi
  410f09:	add    BYTE PTR [ecx-0x16ff31ba],cl
  410f0f:	adc    esp,0xffffffcc
  410f12:	add    BYTE PTR [edi-0x20],dl
  410f15:	jmp    ebx
  410f17:	jmp    FWORD PTR [ebp-0x5e4e0001]
  410f1d:	add    cl,cl
  410f1f:	int3   
  410f20:	mov    dh,0x83
  410f22:	mov    DWORD PTR [esi],ecx
  410f24:	call   0xff89:0x808315ff
  410f2b:	hlt    
  410f2c:	in     al,0x0
  410f2e:	out    0x83,eax
  410f30:	fiadd  DWORD PTR [ebx-0xb3b400]
  410f36:	jge    0x410f37
  410f38:	pushf  
  410f39:	(bad)  
  410f3a:	call   FWORD PTR [esi]
  410f3c:	or     bh,bh
  410f3e:	retf   
  410f3f:	add    ch,bl
  410f41:	(bad)  
  410f42:	push   DWORD PTR [edx+edx*2]
  410f45:	call   DWORD PTR [edi-0x7d]
  410f48:	fdiv   st(7),st
  410f4a:	push   DWORD PTR [eax-0x2e]
  410f4d:	add    BYTE PTR [eax-0x76ffb800],al
  410f53:	outs   dx,DWORD PTR ds:[esi]
  410f54:	(bad)  
  410f55:	inc    esp
  410f57:	add    BYTE PTR [eax+eax*1],bl
  410f5a:	add    bl,bh
  410f5c:	pop    DWORD PTR [eax]
  410f5e:	(bad)  
  410f5f:	mov    DWORD PTR [esi-0x1],esp
  410f62:	add    BYTE PTR [ebx],ch
  410f64:	pop    ds
  410f65:	jmp    FWORD PTR [eax]
  410f67:	int3   
  410f68:	inc    eax
  410f69:	(bad)  
  410f6a:	push   DWORD PTR [ebx-0x3e00ad]
  410f70:	ret    
  410f71:	int3   
  410f72:	add    BYTE PTR [eax],dh
  410f74:	push   ebp
  410f75:	mov    DWORD PTR [edi],edx
  410f77:	cmp    esp,0xffffffff
  410f7a:	dec    DWORD PTR ds:0xff8fff4b
  410f80:	int    0xff
  410f82:	(bad)  
  410f83:	jmp    0x410f24
  410f85:	add    BYTE PTR [ecx],ch
  410f87:	add    BYTE PTR [eax-0x7ef53377],dh
  410f8d:	add    BYTE PTR [edi-0xffd901],bh
  410f93:	les    edx,FWORD PTR [ebx]
  410f95:	push   DWORD PTR [ebp+0x0]
  410f98:	jae    0x410f99
  410f9a:	cmp    edx,0x54
  410f9d:	call   ecx
  410f9f:	add    BYTE PTR [edx],ch
  410fa1:	add    BYTE PTR [ecx+0x2a00bc55],cl
  410fa7:	add    BYTE PTR [ebx+0x0],ch
  410faa:	add    bl,dl
  410fac:	and    ecx,esp
  410fae:	fisttp QWORD PTR [ecx+0x1bffff61]
  410fb4:	test   BYTE PTR [ecx+0x52ff74],cl
  410fba:	mov    DWORD PTR [edi+esi*4],eax
  410fbd:	add    BYTE PTR [edi+edi*8-0x3d],al
  410fc1:	(bad)  
  410fc2:	call   DWORD PTR [eax+0x28]
  410fc5:	jmp    ebx
  410fc7:	add    BYTE PTR [eax],bh
  410fc9:	add    bh,bh
  410fcb:	mov    dh,0x86
  410fcd:	add    bh,bh
  410fcf:	push   DWORD PTR [ebx]
  410fd1:	int3   
  410fd2:	jmp    DWORD PTR [eax-0x7c8d007a]
  410fd8:	push   ecx
  410fd9:	mov    edi,edi
  410fdb:	mov    dh,0xc4
  410fdd:	(bad)  
  410fde:	jp     0x410fdf
  410fe0:	push   eax
  410fe1:	(bad)  
  410fe2:	(bad)  
  410fe3:	jl     0x41104c
  410fe5:	add    BYTE PTR [ebp-0x3834],ah
  410feb:	nop
  410fec:	std    
  410fed:	dec    DWORD PTR [eax-0x7d]
  410ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ff1:	inc    DWORD PTR [ebx-0x3e0010e6]
  410ff7:	mov    eax,edi
  410ff9:	add    bh,bh
  410ffb:	jl     0x411039
  410ffd:	cmp    DWORD PTR [ebx-0x1],0x33
  411001:	cmp    edi,0x3b
  411004:	jecxz  0x411005
  411006:	jle    0x410fd4
  411008:	pusha  
  411009:	cmp    edi,0xffffffbd
  41100c:	jmp    DWORD PTR [si-0x1]
  411010:	add    DWORD PTR cs:[eax],0xffffffa9
  411014:	out    dx,eax
  411015:	mov    DWORD PTR [edi-0x335534],ebx
  41101b:	out    0xd8,al
  41101d:	int3   
  41101e:	bnd call DWORD PTR [edi]
  411021:	inc    DWORD PTR [ebx+0x29ff8c44]
  411027:	add    BYTE PTR [edi],dl
  411029:	inc    DWORD PTR [ebx+0x10ff2e2e]
  41102f:	int3   
  411030:	sti    
  411031:	(bad)  
  411032:	push   DWORD PTR [edi]
  411034:	adc    edi,edi
  411036:	dec    edi
  411037:	add    BYTE PTR [ecx+0x0],ah
  41103a:	add    ah,dl
  41103c:	(bad)  
  41103d:	call   DWORD PTR [esi]
  41103f:	jmp    DWORD PTR [eax+eax*1+0x4ed4ff]
  411046:	mov    eax,0x83ff7ccc
  41104b:	je     0x410fda
  41104d:	int3   
  41104e:	lds    eax,FWORD PTR [eax]
  411050:	in     al,0xff
  411052:	or     DWORD PTR [ebx-0x48ffe9],0xffffff86
  411059:	add    BYTE PTR [eax],al
  41105b:	leave  
  41105c:	dec    edx
  41105d:	add    cl,al
  41105f:	inc    DWORD PTR [esi-0x7d]
  411062:	call   DWORD PTR [edx]
  411064:	iret   
  411065:	add    BYTE PTR ds:0xff08ff,ah
  41106b:	pushf  
  41106c:	mov    eax,0xcf8979ff
  411071:	(bad)  
  411072:	jmp    FWORD PTR [edx+ecx*8-0x30ffda77]
  411079:	add    DWORD PTR [eax],0xfffffff6
  41107c:	sub    ecx,DWORD PTR [ecx-0x33ad00e6]
  411082:	jmp    FWORD PTR [edx-0x50]
  411085:	adc    DWORD PTR [ebp-0x1],0x6b
  411089:	(bad)  
  41108a:	inc    ebx
  41108c:	jno    0x41108e
  41108e:	jnp    0x41108f
  411090:	mov    dh,0xff
  411092:	(bad)  
  411093:	(bad)  
  411094:	mov    ebp,0x6007800
  411099:	inc    DWORD PTR [eax]
  41109b:	xlat   BYTE PTR fs:[ebx]
  41109d:	jmp    FWORD PTR [edi+edi*8]
  4110a0:	xor    eax,0x3001ffff
  4110a5:	inc    DWORD PTR [eax+eax*1]
  4110a8:	in     al,dx
  4110a9:	inc    DWORD PTR [eax]
  4110ab:	fisubr DWORD PTR [ecx]
  4110ad:	add    BYTE PTR [edi+0x0],ch
  4110b0:	mov    bl,0xff
  4110b2:	int3   
  4110b3:	jo     0x411124
  4110b5:	add    ch,cl
  4110b7:	sbb    esi,0xffffffff
  4110ba:	int3   
  4110bb:	fnstenv [edi+edi*8-0xfa00a5]
  4110c2:	add    BYTE PTR [edx],ah
  4110c4:	sub    eax,DWORD PTR [eax]
  4110c6:	out    dx,eax
  4110c7:	call   FWORD PTR [edx]
  4110c9:	inc    DWORD PTR [eax]
  4110cb:	adc    ecx,DWORD PTR [eax-0x46ffa201]
  4110d1:	add    bh,bh
  4110d3:	push   cs
  4110d4:	pop    edx
  4110d5:	call   FWORD PTR [edi-0x1]
  4110d8:	test   eax,0xce1ffff
  4110dd:	dec    DWORD PTR [edx]
  4110df:	inc    DWORD PTR [edi+edi*8]
  4110e2:	dec    DWORD PTR [edx+0x7dff6f]
  4110e8:	pop    ebp
  4110e9:	dec    DWORD PTR [ecx+0x6200cb0f]
  4110ef:	add    BYTE PTR [edi],dl
  4110f1:	inc    DWORD PTR [eax]
  4110f3:	retf   0x896b
  4110f6:	mov    DWORD PTR [ebx+0x7a00ff8b],0xd5ff0d
  411100:	iret   
  411101:	inc    DWORD PTR [eax]
  411103:	xchg   ebp,eax
  411104:	mov    cl,0xff
  411106:	daa    
  411107:	sub    ebx,0x0
  41110a:	add    BYTE PTR [eax],bh
  41110c:	cdq    
  41110d:	inc    DWORD PTR [eax-0x1]
  411110:	jmp    0x411112
  411112:	inc    DWORD PTR [ecx+edi*2]
  411115:	inc    DWORD PTR [ebx]
  411117:	dec    DWORD PTR [ecx-0x34]
  41111a:	jmp    FWORD PTR [ebx-0xd90009]
  411120:	outs   dx,DWORD PTR ds:[esi]
  411121:	inc    DWORD PTR [eax]
  411123:	cli    
  411124:	(bad)  
  411125:	push   DWORD PTR [edx]
  411127:	add    dh,dh
  411129:	inc    DWORD PTR [eax]
  41112b:	and    al,dl
  41112d:	sub    DWORD PTR [ebp-0x33ff0101],0x14
  411134:	pusha  
  411135:	jmp    FWORD PTR [ebp-0x1]
  411138:	pop    edx
  411139:	mov    DWORD PTR [ecx+0x47ffd470],ecx
  41113f:	mov    DWORD PTR [esi],ecx
  411141:	inc    DWORD PTR [ebx-0x3ff81c4]
  411147:	add    BYTE PTR [eax-0x10010100],ah
  41114d:	sbb    DWORD PTR ds:0xdc83,0x35
  411154:	push   ebp
  411155:	jmp    FWORD PTR [edx-0x1]
  411158:	xchg   esp,eax
  411159:	inc    DWORD PTR [ebx+0x4eff104c]
  41115f:	xor    eax,0xffffffff
  411162:	int3   
  411163:	and    ecx,DWORD PTR [eax-0x6a00a001]
  411169:	inc    DWORD PTR [eax]
  41116b:	fwait
  41116c:	(bad)  
  41116d:	dec    DWORD PTR [esi+0x0]
  411170:	jp     0x411171
  411172:	call   FWORD PTR [eax-0x37]
  411175:	dec    DWORD PTR [ecx-0x7cff8700]
  41117b:	dec    edx
  41117c:	push   ecx
  41117d:	add    BYTE PTR [edx-0x7c7c4400],cl
  411183:	adc    al,0x77
  411185:	push   DWORD PTR [ecx]
  411187:	push   ebx
  411189:	inc    DWORD PTR [eax]
  41118b:	mov    ds:0xff5d008f,al
  411190:	cli    
  411191:	inc    DWORD PTR [ebx-0x1e00bff5]
  411197:	adc    DWORD PTR [eax-0x3c900100],0xffffffff
  41119e:	cld    
  41119f:	xor    DWORD PTR [eax],0xffffff89
  4111a2:	(bad)  
  4111a3:	mov    edi,0xff15ff04
  4111a8:	int    0xff
  4111aa:	int3   
  4111ab:	(bad)  
  4111ac:	pop    eax
  4111ad:	push   DWORD PTR [edx-0xb377]
  4111b3:	xor    DWORD PTR cs:[ecx+0x4bffcb],ecx
  4111ba:	add    dl,al
  4111bc:	pop    ss
  4111bd:	inc    DWORD PTR [eax-0x77]
  4111c0:	in     eax,0xcc
  4111c2:	(bad)  
  4111c3:	jp     0x4111d9
  4111c5:	add    ah,ch
  4111c7:	add    BYTE PTR [edx+0x0],bh
  4111ca:	push   DWORD PTR ds:0xe90073
  4111d0:	je     0x4111d1
  4111d2:	add    BYTE PTR [ecx-0x33947c59],bl
  4111d8:	(bad)  
  4111d9:	inc    DWORD PTR [ebx+0x44ff1bc8]
  4111df:	dec    DWORD PTR [esi-0x5f00ff7d]
  4111e5:	(bad)  
  4111e6:	out    dx,al
  4111e7:	add    BYTE PTR [ebp-0x1],ch
  4111ea:	xor    DWORD PTR [ecx],0x70
  4111ed:	add    al,cl
  4111ef:	add    BYTE PTR [ebp-0x27b60100],al
  4111f5:	(bad)  
  4111f6:	cmp    al,BYTE PTR [eax]
  4111f8:	xchg   esi,eax
  4111f9:	mov    DWORD PTR [ecx-0x4fff4cdb],ecx
  4111ff:	sbb    DWORD PTR [edi-0x1],0xffffffff
  411203:	and    BYTE PTR [ebx-0x1],ch
  411206:	into   
  411207:	add    BYTE PTR [ebp-0x11550000],ah
  41120d:	xor    eax,0xffffffff
  411210:	mov    ds:0x8a7f00ff,eax
  411215:	jmp    FWORD PTR [ebp-0x7c009600]
  41121b:	(bad)  
  41121c:	outs   dx,BYTE PTR ds:[esi]
  41121d:	add    BYTE PTR [ebp+0x5100],dh
  411223:	or     edi,DWORD PTR [edi-0x1]
  411226:	adc    al,0xff
  411228:	add    BYTE PTR fs:[eax],al
  41122b:	daa    
  41122c:	je     0x41122d
  41122e:	sub    al,0x0
  411230:	mov    eax,0x5e2f89ff
  411235:	add    BYTE PTR [edi-0x1],dl
  411238:	test   al,0x83
  41123a:	add    al,cl
  41123c:	mov    ds:0xc9ffd3ff,eax
  411241:	inc    DWORD PTR [ebx+0xbff3b29]
  411247:	call   DWORD PTR [edx-0x31aa7601]
  41124d:	dec    DWORD PTR [edi+edi*8]
  411250:	xor    bh,bh
  411252:	mov    DWORD PTR [esp+edi*4],ecx
  411255:	(bad)  
  411256:	clc    
  411257:	inc    DWORD PTR [ebp-0x40c00034]
  41125d:	jmp    DWORD PTR [ebp-0x1]
  411260:	ret    
  411261:	inc    DWORD PTR [eax]
  411263:	popa   
  411264:	mov    ebp,0xa0ff8600
  411269:	add    BYTE PTR [ecx-0x576a25e],cl
  41126f:	int3   
  411270:	sti    
  411271:	add    bh,bh
  411273:	cmp    esp,0x7883cecc
  411279:	mov    esp,ecx
  41127b:	xor    ebx,ebx
  41127d:	int3   
  41127e:	call   0x304a:0xccccf383
  411285:	add    bl,dh
  411287:	int3   
  411288:	fmul   QWORD PTR [ecx-0x3cd34]
  41128e:	push   esi
  41128f:	int3   
  411290:	out    0xff,eax
  411292:	jmp    DWORD PTR [edx-0x317674]
  411298:	(bad)  
  41129a:	int3   
  41129b:	jge    0x4112ff
  41129d:	push   esp
  41129f:	adc    DWORD PTR [edi],0xffffffff
  4112a2:	inc    ebp
  4112a4:	cmp    edi,edi
  4112a6:	pop    edi
  4112a7:	add    BYTE PTR ds:0x9f498389,dl
  4112ad:	add    dh,cl
  4112af:	add    BYTE PTR [edi+0x64fb89ff],dh
  4112b5:	add    BYTE PTR [edi+edi*8-0x46],dl
  4112b9:	add    BYTE PTR [eax],al
  4112bb:	add    al,0x90
  4112bd:	or     ebp,0xffffffcc
  4112c0:	dec    ecx
  4112c1:	inc    DWORD PTR [eax]
  4112c3:	pop    eax
  4112c4:	cmp    BYTE PTR [ebx-0x76ba005f],al
  4112ca:	add    bh,bl
  4112cc:	sub    BYTE PTR [ebx+0x3bffed],al
  4112d2:	call   FWORD PTR [ecx+0x4c0069]
  4112d8:	aam    0xff
  4112da:	add    BYTE PTR [edx+eiz*4-0x1],ch
  4112de:	rol    BYTE PTR [eax],0x8f
  4112e1:	inc    DWORD PTR [eax]
  4112e3:	or     al,dl
  4112e5:	push   DWORD PTR [edi]
  4112e7:	jmp    FWORD PTR [ebp-0x34]
  4112ea:	(bad)  
  4112eb:	jp     0x4112f9
  4112ed:	cmp    eax,0xffffffff
  4112f0:	mov    bl,0x83
  4112f2:	add    BYTE PTR [edi+0x32ff0f],al
  4112f8:	cmp    al,0xff
  4112fa:	jmp    FWORD PTR [eax-0x44]
  4112fd:	add    ah,ah
  4112ff:	jmp    DWORD PTR [ebp-0x8ab0100]
  411305:	call   ecx
  411307:	add    bl,bh
  411309:	or     esp,0x4
  41130c:	pop    ds
  41130d:	add    BYTE PTR [edx-0x7600ca01],dh
  411313:	fdiv   QWORD PTR ds:0x89ff7bff
  411319:	inc    DWORD PTR [eax]
  41131b:	pop    ss
  41131c:	lods   al,BYTE PTR ds:[esi]
  41131d:	int3   
  41131e:	nop
  41131f:	(bad)  
  411320:	(bad)  [ecx-0xa53b01]
  411326:	sub    al,0x0
  411328:	xchg   ebx,eax
  411329:	inc    DWORD PTR [ebx+0x3dff37d6]
  41132f:	add    BYTE PTR [ecx],dl
  411331:	mov    DWORD PTR [ebx-0x49ff6464],eax
  411337:	or     DWORD PTR [eax+eax*1+0x723b00],0xffffff9b
  41133f:	dec    DWORD PTR [ebx]
  411341:	add    BYTE PTR [eax],al
  411343:	add    DWORD PTR [esi+0x0],ebx
  411346:	loope  0x411314
  411348:	lahf   
  411349:	add    BYTE PTR [ebx+0x4dffb435],al
  41134f:	inc    DWORD PTR [esi]
  411351:	add    BYTE PTR [eax],al
  411353:	sub    dl,0xff
  411356:	cmp    edi,0x38
  411359:	add    BYTE PTR [eax],al
  41135b:	popf   
  41135c:	je     0x41135d
  41135e:	cmp    edi,edi
  411360:	mov    cl,0xff
  411362:	jmp    FWORD PTR [edx+eax*8-0x7200b07d]
  411369:	inc    DWORD PTR [eax]
  41136b:	pop    ebx
  41136c:	cmp    al,0x83
  41136e:	and    al,BYTE PTR [ebx-0x53ffffe2]
  411374:	inc    eax
  411375:	add    BYTE PTR [esi+0xff89ff],bh
  41137b:	retf   
  41137c:	push   ecx
  41137d:	add    BYTE PTR [ebx+0x0],cl
  411380:	and    al,BYTE PTR [ebx-0x3322447d]
  411386:	(bad)  
  411387:	call   FWORD PTR [esi]
  411389:	add    BYTE PTR [eax],al
  41138b:	xchg   edx,eax
  41138c:	rol    BYTE PTR [ebx-0x7c7fff68],0x0
  411393:	loopne 0x4113dd
  411395:	call   ecx
  411397:	jmp    FWORD PTR [ebx-0x2bc27d00]
  41139d:	call   FWORD PTR [eax]
  41139f:	cmp    DWORD PTR [edx],0xffffffff
  4113a2:	sub    DWORD PTR [ebp+0x4b],0xffffffff
  4113a6:	push   es
  4113a7:	add    BYTE PTR [eax+0x7215ff83],bl
  4113ad:	call   DWORD PTR [eax-0x1]
  4113b0:	mov    eax,0xac98300
  4113b5:	jmp    DWORD PTR [ecx]
  4113b7:	add    DWORD PTR [eax+0x0],0x0
  4113bb:	mov    cl,0xba
  4113bd:	add    BYTE PTR [ecx-0x1],ah
  4113c0:	xor    al,0x89
  4113c2:	add    BYTE PTR [edi+0x5f],dl
  4113c5:	add    bl,dl
  4113c7:	add    BYTE PTR [ebx+0x0],ah
  4113ca:	add    BYTE PTR [esi+0x2a],bl
  4113cd:	(bad)  
  4113ce:	fdivp  st(7),st
  4113d0:	pop    ds
  4113d1:	mov    DWORD PTR [eax],eax
  4113d3:	ror    ebp,0x83
  4113d6:	pop    ds
  4113d7:	int3   
  4113d8:	(bad)  
  4113da:	add    dh,dh
  4113dc:	cmp    ecx,esp
  4113de:	xchg   ecx,eax
  4113df:	add    BYTE PTR [edi+edi*8-0x1],bl
  4113e3:	mov    BYTE PTR [ebx-0x34fff901],ch
  4113e9:	inc    DWORD PTR [ebx-0x720024c3]
  4113ef:	jmp    DWORD PTR [edx-0x2d25ff34]
  4113f5:	(bad)  
  4113f6:	jg     0x41137b
  4113f8:	mov    ecx,0x49d400ff
  4113fd:	or     DWORD PTR [ecx-0xf634],0xffffffd3
  411404:	jmp    DWORD PTR gs:[edi]
  411407:	adc    DWORD PTR [esi-0x41c4ff7d],0x0
  41140e:	stos   BYTE PTR es:[edi],al
  41140f:	(bad)  
  411410:	mov    ebp,0x9ddc00ff
  411415:	jmp    DWORD PTR [esi+0x0]
  411418:	xor    al,BYTE PTR [eax]
  41141a:	push   DWORD PTR [ecx]
  41141c:	in     al,0xcc
  41141e:	and    bh,bh
  411420:	arpl   WORD PTR [ecx-0x31b000],cx
  411426:	aaa    
  411427:	inc    DWORD PTR ds:0x18b989ff
  41142d:	inc    DWORD PTR [ecx+ecx*4-0x19]
  411431:	inc    DWORD PTR [ebx-0x4900a8f5]
  411437:	call   FWORD PTR [eax+0x5efcff00]
  41143d:	add    bh,bh
  41143f:	jmp    DWORD PTR [ecx-0x7d]
  411442:	cmp    DWORD PTR [eax],0xffffffb1
  411445:	sub    DWORD PTR [ebx],0x0
  411448:	add    DWORD PTR [eax],0xff1200ff
  41144e:	jo     0x4113d3
  411450:	add    BYTE PTR [eax],0xff
  411453:	ins    BYTE PTR es:[edi],dx
  411454:	mov    ah,cl
  411456:	ins    DWORD PTR es:[edi],dx
  411457:	int3   
  411458:	imul   edi,edi,0xffffffff
  41145b:	sbb    esi,ebx
  41145d:	dec    DWORD PTR [edi+0x883]
  411463:	mov    ?,eax
  411465:	add    ch,dh
  411467:	add    BYTE PTR [edi+0x56d1ffff],dh
  41146d:	add    BYTE PTR [eax],dl
  41146f:	jmp    FWORD PTR [esi]
  411471:	int3   
  411472:	dec    esi
  411474:	fdiv   st(7),st
  411476:	ret    
  411477:	(bad)  
  411478:	js     0x411479
  41147a:	push   DWORD PTR [ebp-0x33f6004b]
  411480:	xchg   ebx,eax
  411481:	add    bh,bh
  411483:	push   ebx
  411484:	stc    
  411485:	mov    DWORD PTR [eax+0x0],esi
  411488:	or     eax,DWORD PTR [ebx-0x7c32d734]
  41148e:	jnp    0x41145c
  411490:	adc    eax,DWORD PTR [ebx-0x76a1c001]
  411496:	pop    ebp
  411497:	inc    DWORD PTR [eax]
  411499:	inc    DWORD PTR [eax]
  41149b:	sti    
  41149c:	pop    eax
  41149d:	push   DWORD PTR [ecx-0x1]
  4114a0:	pop    edx
  4114a1:	add    bh,bh
  4114a3:	jecxz  0x411467
  4114a5:	jmp    FWORD PTR [edi+0xff2dff]
  4114ab:	std    
  4114ac:	test   bh,bh
  4114ae:	mov    dh,0x0
  4114b0:	inc    esp
  4114b1:	add    BYTE PTR [eax],al
  4114b3:	mov    bh,0xd9
  4114b5:	call   FWORD PTR [ecx+0x0]
  4114b8:	or     esp,0x0
  4114bb:	stos   BYTE PTR es:[edi],al
  4114bc:	sbb    cl,BYTE PTR [ecx-0x4bff3b]
  4114c2:	jmp    FWORD PTR [eax]
  4114c4:	add    BYTE PTR [eax],0x38
  4114c7:	jmp    ebx
  4114c9:	add    bh,bh
  4114cb:	add    al,0x41
  4114cd:	jmp    FWORD PTR [ebx-0x7cff1e01]
  4114d3:	bound  esi,QWORD PTR [eax+eax*1+0x53]
  4114d7:	int3   
  4114d8:	mov    edi,?
  4114da:	int3   
  4114db:	add    al,0xaf
  4114dd:	inc    DWORD PTR [ebp+0x85ff]
  4114e3:	mov    ebx,0x4ff4b
  4114e8:	inc    ebp
  4114e9:	add    bh,bh
  4114eb:	push   0x32ff42
  4114f0:	lahf   
  4114f1:	(bad)  
  4114f2:	call   DWORD PTR [edi]
  4114f4:	jl     0x4114f5
  4114f6:	bound  eax,QWORD PTR [eax]
  4114f8:	imul   eax,DWORD PTR [eax],0xff16c283
  4114fe:	lods   eax,DWORD PTR ds:[esi]
  4114ff:	(bad)  
  411500:	std    
  411501:	add    bh,bh
  411503:	leave  
  411504:	xchg   ah,cl
  411506:	retf   0x57ff
  411509:	mov    DWORD PTR [eax],eax
  41150b:	dec    edi
  41150c:	xchg   edi,eax
  41150d:	add    BYTE PTR [eax+0xff33ff],al
  411513:	mov    cl,0xf9
  411515:	inc    DWORD PTR [eax+eax*1-0x7e7c0075]
  41151c:	xlat   BYTE PTR ds:[ebx]
  41151d:	add    BYTE PTR [ebx+eax*4-0x577cff3a],ch
  411524:	inc    esp
  411525:	int3   
  411526:	inc    ebp
  411527:	add    BYTE PTR [ecx+0x6e210000],bh
  41152d:	add    dh,al
  41152f:	add    BYTE PTR [ecx+0x7f42ff00],ah
  411535:	add    BYTE PTR [edi+0x0],bl
  411538:	and    edi,edi
  41153a:	or     DWORD PTR [esi-0x54],0xffffff83
  41153e:	test   edi,edi
  411540:	sahf   
  411541:	add    BYTE PTR [eax],al
  411543:	sub    ebp,esp
  411545:	jmp    DWORD PTR [esi]
  411547:	int3   
  411548:	jns    0x41154a
  41154a:	int3   
  41154b:	in     al,0xa0
  41154d:	jmp    FWORD PTR [ecx-0xff1f00]
  411553:	adc    esi,DWORD PTR [esi-0x7d]
  411556:	int3   
  411557:	jmp    FWORD PTR [edi+edi*8-0x77]
  41155b:	(bad)  
  41155c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41155d:	add    BYTE PTR [edx+0xcc00ff],cl
  411563:	shl    esp,0x0
  411566:	out    0x0,al
  411568:	pop    esi
  411569:	int3   
  41156a:	mov    DWORD PTR [edi],ebx
  41156c:	jb     0x41156d
  41156e:	mov    es,WORD PTR [eax]
  411570:	push   es
  411571:	add    BYTE PTR [ebx-0x5b7ca94b],al
  411577:	jmp    edi
  411579:	cmp    edi,0xffffffdd
  41157c:	sbb    DWORD PTR [eax],eax
  41157e:	sub    eax,0xffffae00
  411583:	mov    ecx,0xcc70ff7f
  411588:	ins    BYTE PTR es:[edi],dx
  411589:	cmp    edi,0xf
  41158c:	and    bh,bh
  41158e:	sub    al,0x0
  411590:	pop    esp
  411591:	mov    edi,edi
  411593:	arpl   WORD PTR [eax],bp
  411595:	inc    DWORD PTR [esi-0x1]
  411598:	dec    eax
  411599:	inc    DWORD PTR [eax]
  41159b:	stos   BYTE PTR es:[edi],al
  41159c:	js     0x41159d
  41159e:	jl     0x4115a0
  4115a0:	sub    eax,DWORD PTR [eax]
  4115a2:	jmp    FWORD PTR [ebx-0x77]
  4115a5:	add    BYTE PTR [ebx],cl
  4115a7:	add    BYTE PTR [edi-0x7d],dl
  4115aa:	add    BYTE PTR [edi-0x3a],ah
  4115ad:	add    BYTE PTR [edi-0x7c887d],bl
  4115b3:	fdiv   QWORD PTR ds:0xffff3800
  4115b9:	(bad)  
  4115ba:	jmp    ebx
  4115bc:	or     DWORD PTR [eax],eax
  4115be:	in     eax,dx
  4115bf:	add    BYTE PTR [edx-0x11120100],ch
  4115c5:	call   FWORD PTR [edx-0xd200]
  4115cb:	retf   
  4115cc:	in     eax,0x83
  4115ce:	aas    
  4115cf:	inc    DWORD PTR [eax+0x1d830000]
  4115d5:	add    bl,ah
  4115d7:	int3   
  4115d8:	test   bh,bh
  4115da:	jmp    DWORD PTR [ebp-0x4e]
  4115dd:	int3   
  4115de:	imul   eax,DWORD PTR [ebx-0x54ff0076],0xff87ff04
  4115e8:	je     0x4115ea
  4115ea:	push   DWORD PTR [eax+0x81ff54]
  4115f0:	adc    edi,edi
  4115f2:	jmp    DWORD PTR [ebp-0x1d7cca]
  4115f8:	mov    bh,0x83
  4115fa:	add    ch,bl
  4115fc:	lahf   
  4115fd:	add    ah,cl
  4115ff:	int3   
  411600:	mov    esp,0xc48fffff
  411605:	mov    DWORD PTR [edx],edx
  411607:	int3   
  411608:	add    edi,edi
  41160a:	dec    DWORD PTR [esi+0x1f]
  41160d:	(bad)  
  41160e:	jnp    0x411610
  411610:	mov    dh,0xff
  411612:	int3   
  411613:	in     al,0xce
  411615:	(bad)  
  411616:	clc    
  411617:	sbb    ecx,0xffffffcc
  41161a:	push   DWORD PTR [esi+0xa4fff0]
  411620:	je     0x411622
  411622:	dec    ecx
  411624:	fild   WORD PTR [ebx-0x9c7c7e]
  41162a:	add    ch,dl
  41162c:	(bad)  
  41162d:	inc    DWORD PTR [eax-0x77]
  411630:	pushf  
  411631:	or     esp,0x74
  411634:	or     al,0xff
  411636:	leave  
  411637:	(bad)  
  411638:	(bad)  
  41163a:	add    BYTE PTR [esi+edi*1+0x0],bl
  41163e:	gs int3 
  411640:	dec    esp
  411641:	cmp    edi,0xffffffd0
  411644:	sub    al,0xcc
  411646:	nop
  411647:	jmp    FWORD PTR [edi+edi*8]
  41164a:	add    BYTE PTR [ebx-0x7c040034],dh
  411650:	mov    edi,edi
  411652:	mov    DWORD PTR [eax],edx
  411654:	push   ebx
  411655:	add    BYTE PTR [ebp-0x1],dl
  411658:	adc    al,0xff
  41165a:	inc    DWORD PTR [edi-0x417c1c]
  411660:	mov    ch,0x83
  411662:	call   DWORD PTR [ecx-0xff007b]
  411668:	daa    
  411669:	dec    DWORD PTR [ecx-0x727cf2f4]
  41166f:	jmp    esi
  411671:	cmp    edi,0xe
  411674:	add    BYTE PTR gs:[ebp+0x0],bl
  411678:	dec    ecx
  411679:	inc    DWORD PTR [eax]
  41167b:	out    0xe3,al
  41167d:	inc    esp
  41167f:	add    BYTE PTR [esp+ecx*8],dl
  411682:	cmp    eax,0x10
  411685:	(bad)  
  411686:	mov    ebx,0x83ffb700
  41168b:	sar    DWORD PTR [eax+0xbfffd00],cl
  411691:	add    BYTE PTR [eax],al
  411693:	(bad)  
  411695:	add    BYTE PTR [edx-0x77],dl
  411698:	inc    edx
  411699:	cmp    edi,0x1c
  41169c:	xor    al,0xff
  41169e:	adc    DWORD PTR [eax],eax
  4116a0:	inc    esp
  4116a1:	add    BYTE PTR [ecx-0x6e00eadd],cl
  4116a7:	(bad)  
  4116a8:	mov    edi,0x47aff83
  4116ad:	call   DWORD PTR [edi+edi*8]
  4116b0:	dec    edx
  4116b1:	cmp    edi,0x69
  4116b4:	jecxz  0x411682
  4116b6:	add    DWORD PTR [ebx+0x1f830005],eax
  4116bc:	add    BYTE PTR [eax],0xda
  4116bf:	jmp    DWORD PTR [ecx+ecx*4]
  4116c2:	call   DWORD PTR [edi]
  4116c4:	test   eax,0xffffb83
  4116c9:	(bad)  
  4116ca:	jmp    FWORD PTR [esi-0x7bff80]
  4116d0:	popf   
  4116d1:	dec    DWORD PTR [ecx-0x3ff121f]
  4116d7:	add    BYTE PTR [edi-0x79a70000],ah
  4116dd:	add    BYTE PTR [ecx-0x1],bl
  4116e0:	out    0xff,al
  4116e2:	and    ecx,0xfffffffd
  4116e5:	add    dh,ch
  4116e7:	dec    DWORD PTR [ebp-0x65187d00]
  4116ed:	add    BYTE PTR [ecx-0xd100],bh
  4116f3:	jg     0x411728
  4116f5:	push   DWORD PTR [edi-0xffb401]
  4116fb:	sub    edx,esp
  4116fd:	dec    ebx
  4116ff:	inc    eax
  411701:	add    bh,bh
  411703:	pop    ebx
  411704:	sar    bh,1
  411706:	xor    edi,edi
  411708:	sub    ah,cl
  41170a:	call   edi
  41170c:	dec    ecx
  41170d:	add    BYTE PTR [edx-0xfff701],cl
  411713:	jo     0x411787
  411715:	call   DWORD PTR [ecx]
  411717:	call   edi
  411719:	(bad)  
  41171a:	(bad)  
  41171b:	mov    ecx,0x1200b4
  411720:	int    0xff
  411722:	add    BYTE PTR [ecx+0x92ffbc],ch
  411728:	int3   
  411729:	dec    esp
  41172b:	rcl    BYTE PTR [eax+eax*1+0x77],0xff
  411730:	mov    al,ds:0xe49a0000
  411735:	call   DWORD PTR [eax]
  411737:	call   DWORD PTR ds:0xf38e00ff
  41173d:	jmp    FWORD PTR [ebx-0x7cff197d]
  411743:	mov    edi,0xf8cc19
  411748:	dec    ah
  41174a:	add    BYTE PTR [ebx-0x247c2b],dh
  411750:	hlt    
  411751:	int3   
  411752:	int3   
  411753:	add    BYTE PTR [edi],bh
  411755:	sbb    DWORD PTR [edi+0xf400],0x7c
  41175c:	cmp    bh,0xc7
  41175f:	add    cl,ah
  411761:	add    DWORD PTR [ebx+0x5d003e98],0x0
  411768:	test   edi,edi
  41176a:	sub    DWORD PTR [ecx+esi*8-0xb7ccf01],0xffffffff
  411772:	jmp    FWORD PTR [edx+0x1f]
  411775:	and    DWORD PTR [edx-0x1],0xffffff93
  411779:	int3   
  41177a:	(bad)  
  41177b:	fcmove st,st(2)
  41177d:	push   DWORD PTR [edx]
  41177f:	add    ah,cl
  411781:	(bad)  
  411782:	call   DWORD PTR [ecx]
  411784:	mov    bh,bh
  411786:	jmp    0x41170b
  411788:	sub    bh,bh
  41178a:	int3   
  41178b:	aaa    
  41178c:	(bad)  
  41178e:	lahf   
  41178f:	int3   
  411790:	rol    BYTE PTR [eax],cl
  411792:	add    BYTE PTR [edi+esi*4-0x1e00fb7d],al
  411799:	int3   
  41179a:	(bad)  
  41179b:	jle    0x4117db
  41179d:	int3   
  41179e:	and    al,0xcc
  4117a0:	push   ecx
  4117a1:	dec    esp
  4117a3:	jl     0x4117f3
  4117a5:	mov    DWORD PTR [eax],ecx
  4117a7:	add    BYTE PTR [esi-0x1],bh
  4117aa:	call   DWORD PTR [esi]
  4117ac:	sbb    ah,cl
  4117ae:	mov    ds:0x83ff8a00,al
  4117b3:	push   ebp
  4117b4:	add    DWORD PTR [ebx-0x7c07ff9e],0xffe7e0ff
  4117be:	test   al,0xff
  4117c0:	cmp    DWORD PTR [eax],eax
  4117c2:	add    BYTE PTR [edx+0x5700c3],al
  4117c8:	mov    bl,0xff
  4117ca:	call   DWORD PTR [ebx]
  4117cc:	and    ah,cl
  4117ce:	xchg   ebp,eax
  4117cf:	(bad)  
  4117d0:	mov    ecx,0x7965ff83
  4117d5:	mov    DWORD PTR [ecx-0xb000],edi
  4117db:	sub    al,0x22
  4117dd:	call   edi
  4117df:	mov    ebx,esi
  4117e1:	dec    DWORD PTR [ecx+0x500a075]
  4117e7:	jmp    DWORD PTR [edx-0x72df7c01]
  4117ed:	inc    DWORD PTR [edx]
  4117ef:	add    BYTE PTR [ecx],al
  4117f1:	(bad)  
  4117f2:	(bad)  
  4117f3:	cmp    al,0x80
  4117f5:	add    bl,dl
  4117f7:	int3   
  4117f8:	in     eax,dx
  4117f9:	add    bh,bh
  4117fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117fc:	test   eax,0x4500f600
  411801:	inc    DWORD PTR [eax]
  411803:	jecxz  0x411865
  411805:	adc    DWORD PTR [eax],0xffffffff
  411808:	add    edi,edi
  41180a:	dec    eax
  41180c:	cmp    bh,bh
  41180e:	sub    BYTE PTR [ebx+0x1389ff31],al
  411814:	adc    bh,bh
  411816:	dec    esi
  411817:	inc    DWORD PTR ds:0x4473ffff
  41181d:	(bad)  
  41181e:	fiadd  WORD PTR [eax]
  411820:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411821:	int3   
  411822:	call   FWORD PTR [edx-0x15]
  411825:	xor    DWORD PTR [edi+edi*8-0x31000052],0x1c
  41182d:	add    BYTE PTR ds:0x830030ff,bh
  411833:	cmp    DWORD PTR [ebp-0x3000d000],ebp
  411839:	add    BYTE PTR [ebx-0x397696ee],al
  41183f:	mov    DWORD PTR [ebx-0x6ea2ff01],eax
  411845:	add    BYTE PTR [eax-0x34],dl
  411848:	dec    edx
  411849:	mov    edi,edi
  41184b:	idiv   esp
  41184d:	add    ah,bl
  41184f:	(bad)  
  411850:	mov    edi,0xedffffff
  411855:	add    al,ch
  411857:	add    DWORD PTR [ebp+0x458e0089],0x0
  41185e:	jmp    DWORD PTR ss:[ebx]
  411861:	cmp    edi,0xffffff97
  411864:	sahf   
  411865:	inc    esi
  411867:	int3   
  411868:	xor    bh,bh
  41186a:	inc    DWORD PTR [edx+esi*4-0x1]
  41186e:	pop    esi
  41186f:	(bad)  
  411870:	jp     0x411871
  411872:	add    BYTE PTR [edi],cl
  411874:	cmp    eax,0xce838c00
  411879:	(bad)  
  41187a:	(bad)  
  41187b:	jns    0x41186a
  41187d:	(bad)  
  41187e:	jns    0x411809
  411880:	cmp    eax,DWORD PTR [ebx-0xc1d001]
  411886:	test   DWORD PTR [eax],0x400ff59
  41188c:	loopne 0x41188e
  41188e:	and    BYTE PTR [eax],al
  411890:	cmp    al,BYTE PTR [eax]
  411892:	push   DWORD PTR [edx]
  411894:	push   ebp
  411895:	add    bh,bh
  411897:	(bad)  
  411898:	(bad)  
  41189a:	call   DWORD PTR [eax]
  41189c:	sub    al,0xff
  41189e:	push   eax
  41189f:	add    BYTE PTR [eax],cl
  4118a1:	(bad)  
  4118a2:	(bad)  
  4118a3:	ficom  WORD PTR [edi]
  4118a5:	add    BYTE PTR [eax+eax*1-0x72],cl
  4118a9:	(bad)  
  4118aa:	jmp    DWORD PTR [edx+edx*2+0x6c0033ff]
  4118b1:	add    BYTE PTR [eax],al
  4118b3:	call   0xcc5317fa
  4118b8:	sbb    eax,0x62de83ff
  4118bd:	int3   
  4118be:	mov    bl,0x0
  4118c0:	xchg   edi,eax
  4118c1:	(bad)  
  4118c2:	dec    DWORD PTR [edi-0xeb002a]
  4118c8:	str    WORD PTR [ecx+0x5d006d39]
  4118cf:	jmp    FWORD PTR [ecx-0x34]
  4118d2:	(bad)  
  4118d3:	jge    0x41190e
  4118d5:	call   FWORD PTR [ecx]
  4118d7:	inc    ebp
  4118d9:	inc    DWORD PTR [eax]
  4118db:	sub    ecx,DWORD PTR [ecx-0x34]
  4118de:	cmp    eax,0xff0072ff
  4118e3:	mov    esp,0x8337fffc
  4118e8:	mov    ah,cl
  4118ea:	cmp    DWORD PTR [esi-0xf0095],0x2c
  4118f1:	add    bh,bh
  4118f3:	push   esi
  4118f4:	add    eax,0x25ff28ff
  4118f9:	add    BYTE PTR [eax],al
  4118fb:	inc    esp
  4118fc:	loop   0x4118fd
  4118fe:	push   ss
  4118ff:	mov    esi,eax
  411901:	(bad)  
  411902:	jmp    FWORD PTR ds:0xff8900e9
  411908:	sar    edi,1
  41190a:	xor    DWORD PTR [edi+ecx*2],0xffffffff
  41190e:	fadd   DWORD PTR [ebx-0xaff7c68]
  411914:	lods   al,BYTE PTR ds:[esi]
  411915:	call   DWORD PTR [eax+eax*1+0x17]
  411919:	add    bh,bh
  41191b:	xchg   esp,esi
  41191d:	call   DWORD PTR ds:0x89ff7c00
  411923:	rep outs dx,DWORD PTR ds:[esi]
  411925:	add    BYTE PTR [edx-0x77],ch
  411928:	loopne 0x411929
  41192a:	jmp    DWORD PTR [ebx-0xff7cd7]
  411930:	stos   DWORD PTR es:[edi],eax
  411931:	(bad)  
  411932:	jmp    FWORD PTR [edi]
  411934:	inc    ebx
  411935:	dec    DWORD PTR [edi-0x1]
  411938:	jg     0x41193a
  41193a:	or     DWORD PTR [edi],0xffffffe4
  41193d:	mov    DWORD PTR [ecx-0x68ffdd01],eax
  411943:	outs   dx,BYTE PTR ds:[esi]
  411944:	cmp    edi,0x35
  411947:	add    BYTE PTR [esi],al
  411949:	add    BYTE PTR [esi-0x2c],bl
  41194c:	add    BYTE PTR [eax],al
  41194e:	add    BYTE PTR [ebx+0x245b000a],0xcc
  411955:	add    BYTE PTR [ebx-0x20004e7d],al
  41195b:	jae    0x4118e0
  41195d:	inc    esp
  41195f:	call   ecx
  411961:	jmp    FWORD PTR [ecx+0x2ccffbb]
  411967:	add    BYTE PTR [edx],dl
  411969:	add    BYTE PTR ds:0xd6000095,ch
  41196f:	inc    DWORD PTR [esi-0x77]
  411972:	sar    eax,0xff
  411975:	adc    ebp,0x0
  411978:	and    DWORD PTR [ebx-0x765187],eax
  41197e:	pop    edx
  41197f:	call   esp
  411981:	jmp    DWORD PTR [ebx-0xc00ffa5]
  411987:	add    BYTE PTR [esi-0x7d9600],ah
  41198d:	sub    DWORD PTR [ebp+0x76895dff],0xd
  411994:	inc    DWORD PTR [eax]
  411996:	mov    ds:0xc6830800,eax
  41199b:	push   edx
  41199c:	add    BYTE PTR [eax],al
  41199e:	cwde   
  41199f:	(bad)  
  4119a0:	cli    
  4119a1:	jmp    DWORD PTR [edi-0x2f000024]
  4119a7:	add    BYTE PTR [esi+0x0],ch
  4119aa:	sub    ah,BYTE PTR [ebx+eax*4+0x0]
  4119ae:	push   0x1eff21ff
  4119b3:	and    BYTE PTR [eax],al
  4119b5:	int3   
  4119b6:	sbb    bh,bh
  4119b8:	adc    esp,ecx
  4119ba:	out    dx,al
  4119bb:	cli    
  4119bc:	(bad)  
  4119bd:	inc    DWORD PTR [esi-0x7d]
  4119c0:	dec    esi
  4119c1:	add    BYTE PTR [edi+0x44],ah
  4119c4:	inc    DWORD PTR [eax]
  4119c6:	sti    
  4119c7:	add    BYTE PTR [edi-0xeeb7d],ch
  4119cd:	(bad)  
  4119ce:	in     eax,dx
  4119cf:	add    BYTE PTR [ebx],ch
  4119d1:	dec    DWORD PTR ds:0x530000e6
  4119d7:	call   FWORD PTR [edx]
  4119d9:	jmp    ecx
  4119db:	xor    edi,edi
  4119dd:	call   FWORD PTR [ebx+eax*4-0x57]
  4119e1:	and    DWORD PTR [edx-0x2a],0xffffff83
  4119e5:	dec    DWORD PTR [ebx+0x23ffaa83]
  4119eb:	jecxz  0x4119ec
  4119ed:	mov    DWORD PTR [ecx+0x2f002783],eax
  4119f3:	outs   dx,BYTE PTR ds:[esi]
  4119f4:	int3   
  4119f5:	push   DWORD PTR [esp+ecx*8-0x326a00d6]
  4119fc:	mov    DWORD PTR [ebx-0x8100e3],eax
  411a02:	inc    DWORD PTR [eax-0x337a0077]
  411a08:	mov    ch,0x83
  411a0a:	sbb    esp,0xfff08389
  411a10:	xor    BYTE PTR [ecx-0x76007912],cl
  411a16:	repnz add ebp,0xffffffff
  411a1a:	fistp  DWORD PTR [esi-0x907700]
  411a20:	sar    edi,0xc5
  411a23:	inc    esp
  411a24:	add    BYTE PTR [ebx+0x2effda],al
  411a2a:	xchg   BYTE PTR [eax+0x0],ah
  411a2d:	(bad)  
  411a2e:	mov    esp,0x3e830100
  411a33:	idiv   bh
  411a35:	inc    DWORD PTR [ecx-0x77]
  411a38:	stos   DWORD PTR es:[edi],eax
  411a39:	int3   
  411a3a:	push   ebp
  411a3b:	mov    ah,0xff
  411a3d:	add    ch,dh
  411a3f:	xor    DWORD PTR [edi-0x1],0xffffffb4
  411a43:	loop   0x411a44
  411a45:	add    BYTE PTR [esi],ch
  411a47:	jmp    ebp
  411a49:	int3   
  411a4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a4b:	dec    edi
  411a4c:	add    bh,bh
  411a4e:	retf   
  411a4f:	sbb    DWORD PTR [edi+edi*8+0x64],0xffffffcb
  411a54:	add    DWORD PTR [ebx+0x84ff06],0xffffffca
  411a5b:	lds    eax,FWORD PTR [ebx-0x78ff677d]
  411a61:	inc    DWORD PTR [eax]
  411a63:	mov    eax,0xcc7500cc
  411a68:	retf   0xfbff
  411a6b:	pop    edx
  411a6c:	(bad)  
  411a6d:	dec    esi
  411a6f:	mov    DWORD PTR [edx-0x1],edi
  411a72:	mov    bl,0xae
  411a74:	cmp    edi,0xffffffa7
  411a77:	int3   
  411a78:	push   cs
  411a79:	xor    DWORD PTR [ecx-0x73],0x0
  411a7d:	jmp    DWORD PTR [edi+edi*8]
  411a80:	inc    ecx
  411a81:	jmp    FWORD PTR [eax-0x170033ed]
  411a87:	dec    DWORD PTR [edi-0x77]
  411a8a:	test   BYTE PTR [edi+edi*8+0x5d009300],dl
  411a91:	int3   
  411a92:	je     0x411a5c
  411a94:	inc    DWORD PTR [eax]
  411a96:	push   ds
  411a97:	(bad)  
  411a98:	(bad)  
  411a99:	(bad)  
  411a9a:	jge    0x411a1e
  411a9c:	int3   
  411a9d:	add    BYTE PTR [eax+0x2600cc00],bl
  411aa3:	push   ds
  411aa4:	add    BYTE PTR [eax],al
  411aa6:	pusha  
  411aa7:	mov    DWORD PTR [ebx],edi
  411aa9:	inc    DWORD PTR [ebp+0x50890046]
  411aaf:	inc    DWORD PTR [esi-0x33580c01]
  411ab5:	(bad)  
  411ab6:	std    
  411ab7:	(bad)  
  411ab8:	in     al,dx
  411ab9:	sub    edi,0x18
  411abc:	dec    esp
  411abe:	xchg   bh,bh
  411ac0:	mov    dh,0x0
  411ac2:	adc    DWORD PTR [ebx-0x1],ebx
  411ac5:	(bad)  
  411ac6:	cli    
  411ac7:	jmp    DWORD PTR [eax-0x7d]
  411aca:	adc    BYTE PTR [edx-0x3c0100],dh
  411ad0:	add    DWORD PTR [ebx-0xffdc9f],eax
  411ad6:	test   BYTE PTR [ebx+0x58528335],0xff
  411add:	add    BYTE PTR [edi],bl
  411adf:	add    BYTE PTR [eax+0xe084ff],ch
  411ae5:	mov    esp,ebx
  411ae7:	add    eax,0x0
  411aea:	and    dh,BYTE PTR [ecx]
  411aec:	inc    DWORD PTR [ebx+0xf60001]
  411af2:	stos   BYTE PTR es:[edi],al
  411af3:	add    eax,DWORD PTR [eax]
  411af5:	or     DWORD PTR [edi-0x11ff5700],0xffffff94
  411afc:	add    bh,bh
  411afe:	sub    eax,0xdcff1dff
  411b03:	mov    edx,0x83bdcc00
  411b08:	imul   eax,DWORD PTR [eax],0xffffffe7
  411b0b:	fdiv   st(7),st
  411b0d:	jmp    DWORD PTR [eax]
  411b0f:	inc    DWORD PTR [ebx-0x77]
  411b12:	fadd   QWORD PTR ss:[eax]
  411b15:	inc    eax
  411b17:	dec    edi
  411b19:	dec    edx
  411b1b:	icebp  
  411b1c:	add    BYTE PTR [eax],al
  411b1e:	dec    ebx
  411b1f:	int3   
  411b20:	mov    ?,edi
  411b22:	lods   eax,DWORD PTR ds:[esi]
  411b23:	xchg   ebx,eax
  411b24:	(bad)  
  411b25:	inc    DWORD PTR [eax-0x1]
  411b28:	or     bh,bh
  411b2a:	inc    ecx
  411b2b:	test   bh,bh
  411b2d:	(bad)  
  411b2e:	cmp    edi,edi
  411b30:	push   ebx
  411b31:	push   DWORD PTR ds:0x1affff45
  411b37:	jmp    DWORD PTR [ebp-0x1]
  411b3a:	jb     0x411aea
  411b3c:	int3   
  411b3d:	add    bh,al
  411b3f:	xor    DWORD PTR [edi+0x0],0xffffffc4
  411b43:	(bad)  
  411b46:	dec    esp
  411b47:	mov    DWORD PTR [eax+eax*1],ebp
  411b4a:	cmp    bl,BYTE PTR [edi-0x7c320000]
  411b50:	bswap  esp
  411b52:	sub    al,0x1d
  411b54:	(bad)  
  411b55:	dec    DWORD PTR [edx-0x576f377]
  411b5b:	cwde   
  411b5c:	(bad)  
  411b5d:	push   DWORD PTR [edi+edi*8]
  411b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b61:	and    esp,0xfffffff3
  411b64:	(bad)  
  411b65:	dec    DWORD PTR [esi-0x7d]
  411b68:	xchg   edx,eax
  411b69:	call   edx
  411b6b:	cmp    eax,0xffb283ff
  411b70:	sbb    DWORD PTR [eax],eax
  411b72:	fs stc 
  411b74:	dec    DWORD PTR [ecx+0x83ff41]
  411b7a:	add    esp,esp
  411b7c:	cmp    edi,0x23
  411b7f:	jmp    FWORD PTR [edi-0x52f701]
  411b85:	inc    DWORD PTR [ebx-0x3eff7801]
  411b8b:	sbb    al,BYTE PTR [eax]
  411b8d:	jmp    ecx
  411b8f:	(bad)  
  411b90:	jle    0x411b15
  411b92:	jg     0x411b4a
  411b94:	inc    DWORD PTR [eax]
  411b96:	pop    ebx
  411b97:	add    BYTE PTR [eax-0x1],dh
  411b9a:	inc    eax
  411b9b:	pop    edi
  411b9c:	cmp    edi,0x6c
  411b9f:	int3   
  411ba0:	adc    BYTE PTR [eax],al
  411ba2:	add    BYTE PTR [eax+eax*1],0xff
  411ba6:	push   cs
  411ba7:	int3   
  411ba8:	and    esp,ecx
  411baa:	call   0x2aff:0xfa83ffa9
  411bb1:	(bad)  
  411bb2:	cmp    al,0x86
  411bb4:	add    bh,bh
  411bb6:	inc    esi
  411bb7:	add    BYTE PTR [esp+ecx*8],dh
  411bba:	xor    BYTE PTR [edx],0x0
  411bbd:	add    BYTE PTR [edx],dh
  411bbf:	xor    DWORD PTR [ebx],0xffffff83
  411bc2:	stc    
  411bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc4:	inc    DWORD PTR [eax]
  411bc6:	sahf   
  411bc7:	or     DWORD PTR [ebp-0x1],0xffffffb6
  411bcb:	ror    DWORD PTR [ecx+0x740099ff],cl
  411bd1:	add    bh,dl
  411bd3:	ins    DWORD PTR es:[edi],dx
  411bd4:	add    bh,bh
  411bd6:	sar    edi,0xa6
  411bd9:	call   DWORD PTR [edx-0x47]
  411bdc:	add    BYTE PTR [eax],al
  411bde:	or     eax,DWORD PTR [ebx-0x49c37cd8]
  411be4:	mov    DWORD PTR [eax],eax
  411be6:	fdiv   st(7),st
  411be8:	ins    BYTE PTR es:[edi],dx
  411be9:	push   DWORD PTR ds:0xfb83894e
  411bef:	push   DWORD PTR [edx]
  411bf1:	add    ch,bl
  411bf3:	dec    ecx
  411bf4:	add    BYTE PTR [eax],al
  411bf6:	pop    edx
  411bf7:	add    ch,ch
  411bf9:	int3   
  411bfa:	jmp    0x2421b4e
  411bff:	int3   
  411c00:	sub    edi,edi
  411c02:	mov    al,0xa3
  411c04:	dec    DWORD PTR [ecx-0x10ffd8]
  411c0a:	cmp    BYTE PTR [ebx],0x0
  411c0d:	add    BYTE PTR [esi-0x77],bl
  411c10:	adc    edi,edi
  411c12:	scas   al,BYTE PTR es:[edi]
  411c13:	in     eax,dx
  411c14:	add    bh,bh
  411c16:	or     ecx,esp
  411c18:	add    eax,0xe0de00
  411c1d:	int3   
  411c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c1f:	inc    DWORD PTR [esi-0x7c95ea00]
  411c25:	(bad)  
  411c26:	out    dx,al
  411c27:	mov    DWORD PTR ds:0xff51b1ff,esp
  411c2d:	sbb    DWORD PTR [edx-0x77],0xfffffffc
  411c31:	(bad)  
  411c32:	jle    0x411c27
  411c34:	(bad)  
  411c35:	call   FWORD PTR ds:0x3009d00
  411c3b:	inc    DWORD PTR gs:[ebx-0x44002d]
  411c42:	sar    DWORD PTR [eax-0x7d],cl
  411c45:	dec    edx
  411c47:	mov    DWORD PTR [edi+edi*8],esp
  411c4a:	lods   eax,DWORD PTR ds:[esi]
  411c4b:	xchg   edx,eax
  411c4c:	or     DWORD PTR [ecx-0x7c4a7cd7],0xffffff9e
  411c53:	jmp    0xfa:0xffcbff89
  411c5a:	scas   al,BYTE PTR es:[edi]
  411c5b:	mov    cl,0x83
  411c5d:	add    BYTE PTR [ebp+0x3fffa300],dh
  411c63:	test   al,0x0
  411c65:	adc    DWORD PTR [edi-0x27002000],0xffffff8d
  411c6c:	dec    esp
  411c6e:	fwait
  411c6f:	int3   
  411c70:	loopne 0x411c71
  411c72:	mov    edx,0x39ff89cf
  411c77:	inc    ebp
  411c79:	int3   
  411c7a:	dec    edx
  411c7b:	xor    al,0x0
  411c7d:	or     edx,0xffffff89
  411c80:	pop    ss
  411c81:	call   DWORD PTR [eax-0x33007630]
  411c87:	mov    ecx,ebp
  411c89:	call   DWORD PTR [edx+esi*1+0x0]
  411c8d:	int3   
  411c8e:	in     eax,0xff
  411c90:	in     eax,dx
  411c91:	adc    DWORD PTR [esi-0x1f],0xffffffcc
  411c95:	add    cl,bh
  411c97:	inc    ebp
  411c99:	add    BYTE PTR [edi-0x3f],dh
  411c9c:	add    bh,bh
  411c9e:	jne    0x411ca0
  411ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca1:	push   DWORD PTR [esi+ebx*2-0x7ce67c01]
  411ca8:	sbb    eax,0x135f00
  411cad:	call   DWORD PTR [ebx+0x6300b0ff]
  411cb3:	scas   al,BYTE PTR es:[edi]
  411cb4:	inc    DWORD PTR [eax]
  411cb6:	cdq    
  411cb7:	(bad)  
  411cb8:	cmp    eax,0x83750383
  411cbd:	int3   
  411cbe:	pusha  
  411cbf:	jmp    DWORD PTR [ebp+0xd6ad00]
  411cc5:	add    BYTE PTR [ebp-0x1],al
  411cc8:	enter  0x69ff,0xe0
  411ccc:	(bad)  
  411ccd:	call   FWORD PTR [ebx-0x1]
  411cd0:	(bad)  
  411cd1:	inc    edi
  411cd3:	push   ebx
  411cd4:	mov    edi,edi
  411cd6:	iret   
  411cd7:	add    BYTE PTR [ecx+ecx*4-0x850c],bl
  411cde:	xchg   ecx,eax
  411cdf:	xor    DWORD PTR [ebp-0x1],0xffffffc2
  411ce3:	pop    eax
  411ce4:	add    ah,cl
  411ce6:	push   ecx
  411ce7:	push   esi
  411ce9:	int3   
  411cea:	mov    cl,0xa6
  411cec:	mov    edi,edi
  411cee:	inc    edi
  411cef:	add    DWORD PTR [ecx-0x760a2500],0xffffff89
  411cf6:	fild   WORD PTR [eax]
  411cf8:	idiv   edi
  411cfa:	ficom  WORD PTR [ecx]
  411cfc:	inc    DWORD PTR [ebx-0xdc338f]
  411d02:	mov    ebp,ecx
  411d04:	(bad)  
  411d05:	jmp    DWORD PTR [eax+0x0]
  411d08:	xchg   DWORD PTR [ebx-0x7cffc897],eax
  411d0e:	mov    ebp,0x56ffb1ff
  411d13:	outs   dx,DWORD PTR ds:[esi]
  411d14:	(bad)  
  411d15:	(bad)  
  411d16:	cmp    ecx,DWORD PTR [ecx-0x243bff87]
  411d1c:	add    DWORD PTR [eax],0xffffff98
  411d1f:	or     eax,0x0
  411d22:	xor    al,0xd7
  411d24:	(bad)  
  411d25:	(bad)  
  411d26:	jl     0x411cab
  411d28:	jp     0x411d29
  411d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d2b:	(bad)  
  411d2c:	inc    DWORD PTR [ebx-0x7cd0332e]
  411d32:	mov    cs,WORD PTR [edx-0x1]
  411d35:	dec    DWORD PTR [ecx-0x7d]
  411d38:	jae    0x411d39
  411d3a:	and    DWORD PTR [eax-0xda7c01],esi
  411d40:	mov    ebp,0xccffc600
  411d45:	inc    DWORD PTR [edi-0x1]
  411d48:	ds (bad) 
  411d4a:	fstp   st(2)
  411d4c:	int3   
  411d4d:	(bad)  
  411d4e:	cld    
  411d4f:	int3   
  411d50:	ror    BYTE PTR [ecx-0x7c004894],1
  411d56:	mov    esi,0xfa006b83
  411d5b:	(bad)  
  411d5c:	add    DWORD PTR [ebx+0xbd833f],0x73
  411d63:	inc    ecx
  411d64:	add    BYTE PTR [eax],al
  411d66:	(bad)  
  411d67:	int3   
  411d68:	xchg   BYTE PTR [eax],al
  411d6a:	sub    ebp,DWORD PTR [eax-0x1]
  411d6d:	jmp    FWORD PTR [edi+edi*8-0x19457ca5]
  411d74:	(bad)  
  411d75:	jmp    FWORD PTR [eax-0x77002b7d]
  411d7b:	imul   edi,edi,0xc900e083
  411d81:	add    BYTE PTR [edx+0x22],ch
  411d84:	inc    DWORD PTR [eax]
  411d86:	inc    BYTE PTR [eax]
  411d88:	(bad)  
  411d89:	(bad)  
  411d8a:	mov    eax,0xac00ff49
  411d8f:	add    BYTE PTR [eax],dh
  411d91:	call   DWORD PTR [ebp-0x69]
  411d94:	(bad)  
  411d95:	inc    DWORD PTR [ebp-0x1]
  411d98:	pop    edi
  411d99:	cmp    DWORD PTR ds:0x4dcc836c,0xffffffff
  411da0:	sar    edi,0x6
  411da3:	aaa    
  411da4:	dec    DWORD PTR [ecx-0xf6ff90]
  411daa:	mov    eax,0x42008336
  411daf:	add    BYTE PTR [eax-0x77],al
  411db2:	cmp    cl,BYTE PTR [ecx+0x0]
  411db5:	jmp    FWORD PTR [ebx-0x5cff4f01]
  411dbb:	ja     0x411dbd
  411dbd:	jmp    DWORD PTR [edi]
  411dbf:	add    eax,0x0
  411dc2:	xchg   eax,esi
  411dc4:	add    BYTE PTR [eax],al
  411dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dc7:	jmp    FWORD PTR [ecx-0x34]
  411dca:	or     ecx,esp
  411dcc:	add    bh,bh
  411dce:	push   esp
  411dcf:	add    BYTE PTR [eax],ch
  411dd1:	inc    DWORD PTR [edi-0x4076ff96]
  411dd7:	call   DWORD PTR [ebp-0x1]
  411dda:	lods   al,BYTE PTR ds:[esi]
  411ddb:	or     al,0xff
  411ddd:	and    ebx,0xffffffcc
  411de0:	lds    eax,FWORD PTR [ebx+0xff16f1]
  411de6:	mov    ch,0x0
  411de8:	cwde   
  411de9:	add    BYTE PTR [ebx],dh
  411deb:	xchg   edx,eax
  411dec:	add    BYTE PTR [ebx+0x400073],al
  411df2:	push   ebx
  411df3:	lea    eax,[eax]
  411df5:	int3   
  411df6:	jg     0x411df7
  411df8:	pusha  
  411df9:	inc    DWORD PTR [ecx+0x2700cca8]
  411dff:	jmp    FWORD PTR [edx-0x7d]
  411e02:	ins    BYTE PTR es:[edi],dx
  411e03:	mov    edx,0xff5589ff
  411e08:	pop    es
  411e09:	(bad)  
  411e0a:	cmp    ch,ch
  411e0c:	add    bh,bh
  411e0e:	pop    ebx
  411e0f:	add    BYTE PTR [ecx],al
  411e11:	(bad)  
  411e12:	out    dx,al
  411e13:	lock mov DWORD PTR [eax],eax
  411e16:	out    0x0,eax
  411e18:	sbb    eax,0xff6ef400
  411e1d:	mov    eax,esi
  411e1f:	push   edx
  411e21:	inc    DWORD PTR [ebx]
  411e23:	push   ss
  411e24:	add    BYTE PTR [ebx+0xa1ff6b],al
  411e2a:	mov    ecx,0xedffff1e
  411e2f:	inc    DWORD PTR [ebx-0x7d]
  411e32:	lea    esi,[ebp+0x0]
  411e35:	add    BYTE PTR [eax+0x4900d7ff],dl
  411e3b:	inc    DWORD PTR fs:[ebx+0x8cff68]
  411e42:	fnsave [edx]
  411e44:	add    BYTE PTR [eax],al
  411e46:	xchg   esi,eax
  411e47:	dec    DWORD PTR [eax-0x33210000]
  411e4d:	add    BYTE PTR [ebp+0x5eff6f00],cl
  411e53:	add    eax,0x8fff00
  411e58:	lock dec DWORD PTR [esi+0x4a00fffe]
  411e5f:	mov    eax,edi
  411e61:	add    BYTE PTR [ecx],dl
  411e63:	pop    ebp
  411e64:	(bad)  
  411e65:	(bad)  
  411e66:	fld    DWORD PTR [eax]
  411e68:	push   edi
  411e69:	(bad)  
  411e6a:	jmp    0x411e28
  411e6c:	(bad)  
  411e6d:	(bad)  
  411e6e:	fadd   DWORD PTR [eax]
  411e70:	pop    esp
  411e71:	add    BYTE PTR [edi-0x59],bl
  411e74:	add    ah,cl
  411e76:	into   
  411e77:	add    bl,ch
  411e79:	int3   
  411e7a:	mov    WORD PTR ds:0xf68300,cs
  411e80:	xor    eax,DWORD PTR [eax]
  411e82:	dec    edi
  411e83:	mov    bh,0x0
  411e85:	(bad)  
  411e86:	jle    0x411e88
  411e88:	add    eax,DWORD PTR [eax]
  411e8a:	mov    esi,0x7cff00f1
  411e8f:	(bad)  
  411e90:	fild   WORD PTR [ebx-0xff8cc6]
  411e96:	sub    bh,bh
  411e98:	lock (bad) 
  411e9a:	cli    
  411e9b:	dec    esi
  411e9c:	dec    esp
  411e9e:	outs   dx,DWORD PTR ds:[esi]
  411e9f:	add    esi,0xffffffff
  411ea2:	scas   eax,DWORD PTR es:[edi]
  411ea3:	(bad)  
  411ea5:	push   DWORD PTR [edi]
  411ea7:	inc    esi
  411ea9:	call   DWORD PTR [ebx]
  411eab:	or     bh,bh
  411ead:	add    BYTE PTR [esi-0x61330d34],al
  411eb3:	repz add BYTE PTR [eax],al
  411eb6:	add    BYTE PTR [ebx-0x2681ff4a],al
  411ebc:	int3   
  411ebd:	jmp    DWORD PTR [edx+0x32ff84cc]
  411ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ec4:	add    bh,bh
  411ec6:	inc    ecx
  411ec7:	jmp    DWORD PTR [eax+0xd428cc]
  411ecd:	add    BYTE PTR [eax+0x27006300],al
  411ed3:	fild   DWORD PTR [ebx+0x5c00d600]
  411ed9:	mov    DWORD PTR [edi],ebp
  411edb:	pop    eax
  411edc:	add    ah,cl
  411ede:	cmp    eax,0x6cc7c00
  411ee3:	repnz inc DWORD PTR [eax]
  411ee6:	push   ebp
  411ee7:	int3   
  411ee8:	xchg   edi,eax
  411ee9:	(bad)  
  411eea:	mov    esp,0xbdff00d9
  411eef:	dec    DWORD PTR [edi-0x1]
  411ef2:	sbb    ebx,ebp
  411ef4:	dec    DWORD PTR [ecx+0xfd8377]
  411efa:	out    0xf5,al
  411efc:	inc    DWORD PTR [eax]
  411efe:	mov    ebp,0xda006e83
  411f03:	daa    
  411f04:	inc    DWORD PTR [ebx-0x33010036]
  411f0a:	cmp    eax,0x3200ff46
  411f0f:	jmp    DWORD PTR [ebx-0x1]
  411f12:	mov    cl,0x2a
  411f14:	dec    DWORD PTR [ecx-0xd87cf5]
  411f1a:	xchg   DWORD PTR [esi],esi
  411f1c:	(bad)  
  411f1d:	jmp    DWORD PTR [eax-0x1]
  411f20:	mov    ecx,0xd5a800
  411f25:	dec    DWORD PTR [ebx+eax*4-0xbb7677]
  411f2c:	(bad)  
  411f2d:	(bad)  
  411f2e:	fdivr  st,st(7)
  411f30:	or     BYTE PTR [ecx-0x7633fc60],cl
  411f36:	xchg   ebp,eax
  411f37:	call   FWORD PTR [ebp+0x94d8ff]
  411f3d:	call   esp
  411f3f:	add    BYTE PTR [edi],dl
  411f41:	call   FWORD PTR [ebp-0xb]
  411f44:	inc    DWORD PTR [eax]
  411f46:	push   edi
  411f47:	call   FWORD PTR [eax+0x0]
  411f4a:	into   
  411f4b:	lods   al,BYTE PTR ds:[esi]
  411f4c:	add    BYTE PTR [eax],al
  411f4e:	xlat   BYTE PTR ds:[ebx]
  411f4f:	add    BYTE PTR [esi],dh
  411f51:	int3   
  411f52:	(bad)  
  411f53:	repz add bh,bh
  411f56:	loop   0x411f57
  411f58:	stos   BYTE PTR es:[edi],al
  411f59:	push   esi
  411f5b:	or     DWORD PTR [eax],eax
  411f5d:	add    BYTE PTR [esi-0x1],al
  411f60:	(bad)  
  411f62:	xchg   edi,eax
  411f63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f64:	(bad)  
  411f65:	push   DWORD PTR [ecx+0x64ffb389]
  411f6b:	sub    edi,edi
  411f6d:	and    DWORD PTR [ecx-0x2b003401],0xffffff88
  411f74:	inc    DWORD PTR [eax]
  411f76:	adc    bh,bh
  411f78:	add    eax,0x9fc9ff
  411f7d:	(bad)  
  411f7e:	mov    ebp,0x4800fe00
  411f83:	dec    esi
  411f84:	cmp    edi,0xffffffbf
  411f87:	inc    DWORD PTR [edi+0x0]
  411f8a:	mov    cl,0xaf
  411f8c:	(bad)  
  411f8d:	push   DWORD PTR [ecx-0x7d]
  411f90:	mov    edi,0x8934a600
  411f95:	(bad)  
  411f96:	mov    ecx,0x1ff0e00
  411f9b:	xchg   ebx,eax
  411f9c:	mov    DWORD PTR [ebx+0xb4ff2f],eax
  411fa2:	call   0xaa411f82
  411fa7:	push   DWORD PTR [ebx]
  411fa9:	add    BYTE PTR [esi+0x6c],bh
  411fac:	(bad)  
  411fad:	(bad)  
  411fae:	cmp    eax,0x832500
  411fb3:	into   
  411fb4:	add    bh,bh
  411fb6:	pop    es
  411fb7:	adc    ecx,0xffffffff
  411fba:	sbb    dh,BYTE PTR [edx-0x1]
  411fbd:	mov    DWORD PTR [ecx+0x0],esp
  411fc0:	mov    dl,0x89
  411fc2:	jmp    0xf421f08
  411fc7:	call   DWORD PTR [edi]
  411fc9:	add    BYTE PTR [ecx],dl
  411fcb:	test   ah,cl
  411fcd:	xor    DWORD PTR [edx],0xffffffff
  411fd0:	xchg   edi,edi
  411fd2:	xchg   BYTE PTR [ebp-0x61ff01],ah
  411fd8:	xor    edi,edi
  411fda:	or     bh,BYTE PTR [edi+edi*8-0x3ff1901]
  411fe1:	(bad)  
  411fe2:	jmp    0x774120b6
  411fe7:	mov    eax,edx
  411fe9:	add    BYTE PTR [edx+eiz*2-0x7d],al
  411fed:	dec    eax
  411fef:	push   DWORD PTR [ebx+0x608acc]
  411ff5:	add    bl,cl
  411ff7:	dec    DWORD PTR [ebp-0x4f9200]
  411ffd:	int3   
  411ffe:	pusha  
  411fff:	call   FWORD PTR [edi]
  412001:	jmp    FWORD PTR [esi+0x6a00ff35]
  412007:	add    ah,ch
  412009:	add    BYTE PTR [esi+0x7ecc000a],dl
  41200f:	inc    esi
  412011:	add    BYTE PTR ds:0x95ffff3f,dl
  412017:	call   DWORD PTR [edx-0x1]
  41201a:	inc    esi
  41201b:	data16 add bh,bh
  41201e:	inc    edx
  41201f:	add    BYTE PTR [ebx],dh
  412021:	dec    DWORD PTR [eax]
  412023:	jle    0x412024
  412025:	call   DWORD PTR ds:0xf4ff8a83
  41202b:	dec    esi
  41202c:	add    BYTE PTR [eax],al
  41202e:	std    
  41202f:	cmp    DWORD PTR [esi-0x228401],0xffffffff
  412036:	xor    eax,0xf80048ff
  41203b:	push   esi
  41203c:	add    BYTE PTR [eax],al
  41203e:	sahf   
  41203f:	add    DWORD PTR [edi],0xffffffff
  412042:	pop    edi
  412043:	sar    bh,1
  412045:	call   FWORD PTR [eax]
  412047:	int3   
  412048:	(bad)  
  412049:	call   FWORD PTR [ebx]
  41204b:	nop
  41204c:	inc    DWORD PTR [ebx-0x7c90ffe8]
  412052:	test   BYTE PTR [esi-0x1],bl
  412055:	add    cl,al
  412057:	inc    DWORD PTR [edi]
  412059:	int3   
  41205a:	int3   
  41205b:	and    DWORD PTR [eax],eax
  41205d:	(bad)  
  41205e:	call   0x4411a62
  412063:	daa    
  412064:	cmp    edi,0x44
  412067:	sbb    DWORD PTR [ebp-0x5d3d34],0xffffffff
  41206e:	cs sub ebx,0xffffff89
  412072:	je     0x4120e8
  412074:	(bad)  
  412075:	call   FWORD PTR [edx-0x3d00be01]
  41207b:	add    DWORD PTR [eax],eax
  41207d:	jmp    DWORD PTR [ebx-0x34]
  412080:	jp     0x412081
  412082:	out    dx,al
  412083:	aam    0x83
  412085:	add    BYTE PTR [edi],cl
  412087:	inc    ebp
  412089:	sbb    DWORD PTR [eax],0x42
  41208c:	int3   
  41208d:	add    BYTE PTR [esi],dl
  41208f:	call   FWORD PTR ds:0x6ab5ff
  412095:	add    BYTE PTR [eax-0x34],ah
  412098:	or     cl,BYTE PTR [ecx-0x7600fb56]
  41209e:	test   BYTE PTR [eax],al
  4120a0:	cld    
  4120a1:	adc    DWORD PTR [ecx+0x4089cc41],0x0
  4120a8:	sar    bh,cl
  4120aa:	cmovs  eax,DWORD PTR [ebx+0x60005d00]
  4120b1:	call   DWORD PTR [edi-0x2dff00aa]
  4120b7:	call   DWORD PTR [ebx-0x1]
  4120ba:	pop    edi
  4120bb:	push   ecx
  4120bc:	add    bh,bh
  4120be:	or     edi,edi
  4120c0:	adc    eax,DWORD PTR [ebx-0x7c33c579]
  4120c6:	fdivr  st,st(7)
  4120c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c9:	xor    DWORD PTR [edi-0x513376b0],0xffffff83
  4120d0:	fmul   st,st(4)
  4120d2:	and    al,0x49
  4120d4:	(bad)  
  4120d5:	call   FWORD PTR [ebx]
  4120d7:	adc    esi,0x0
  4120da:	in     eax,0x1d
  4120dc:	(bad)  
  4120dd:	call   edi
  4120df:	or     DWORD PTR [ebx+0x0],0x5c
  4120e3:	cdq    
  4120e4:	dec    DWORD PTR [ecx-0x59ff2c]
  4120ea:	cmp    BYTE PTR [eax],cl
  4120ec:	add    BYTE PTR [ebx+0xc3003f],al
  4120f2:	add    DWORD PTR [ecx-0x1],0x12006683
  4120f9:	inc    esi
  4120fb:	fs (bad) 
  4120fd:	inc    DWORD PTR [edi+0x6835cff]
  412103:	sbb    cl,ah
  412105:	inc    DWORD PTR [esi-0x7d]
  412108:	mov    ch,0xcc
  41210a:	xor    dl,BYTE PTR [ecx]
  41210c:	add    BYTE PTR [ebx-0xf0006e],al
  412112:	pushf  
  412113:	jae    0x412114
  412115:	mov    DWORD PTR [eax+0x2c006289],ecx
  41211b:	into   
  41211c:	add    ah,cl
  41211e:	in     al,0xff
  412120:	pushf  
  412121:	cmp    eax,0x63
  412124:	(bad)  
  412125:	push   DWORD PTR [esi]
  412127:	int3   
  412128:	sub    BYTE PTR [ebx+0xfff698],al
  41212e:	mov    edi,0x4ffd600
  412133:	das    
  412134:	inc    DWORD PTR [eax]
  412136:	hlt    
  412137:	(bad)  
  412138:	jg     0x41213a
  41213a:	xor    dh,BYTE PTR [edi+0xfaffff]
  412140:	bound  ecx,QWORD PTR [ecx-0x7cff67be]
  412146:	jmp    0xffe2:0x66cca200
  41214d:	(bad)  
  41214e:	(bad)  
  412150:	xor    esp,ecx
  412152:	pop    ebx
  412153:	popf   
  412154:	(bad)  
  412155:	dec    DWORD PTR [ebx]
  412157:	mov    DWORD PTR [edx-0xec0800],esi
  41215d:	cmp    DWORD PTR [edi+edi*8+0x73],0x0
  412162:	jecxz  0x41214c
  412164:	add    DWORD PTR [ebx-0x17ffad],0x3
  41216b:	cmp    bh,bh
  41216d:	adc    DWORD PTR [edx],0xffffffff
  412170:	pop    es
  412171:	add    DWORD PTR [edi+0x238389e6],0xffffffff
  412178:	mov    bl,0x83
  41217a:	loopne 0x41217e
  41217c:	inc    DWORD PTR [eax]
  41217e:	xchg   esp,eax
  41217f:	int3   
  412180:	xor    al,0x83
  412182:	loope  0x41210d
  412184:	add    BYTE PTR [ecx-0xf20100],cl
  41218a:	xchg   ebx,eax
  41218b:	in     al,0x0
  41218d:	(bad)  
  41218e:	(bad)  
  412190:	and    esp,ecx
  412192:	cmp    bh,BYTE PTR [ebx]
  412194:	cmp    edi,0xffffffe6
  412197:	int3   
  412198:	mov    bl,0xff
  41219a:	jno    0x412176
  41219c:	(bad)  
  41219d:	inc    DWORD PTR [esi-0x1]
  4121a0:	xor    edi,edi
  4121a2:	(bad)  
  4121a3:	pushf  
  4121a4:	add    bh,bh
  4121a6:	add    eax,0x80ffe600
  4121ab:	cmp    eax,0x8315ffff
  4121b0:	sbb    bh,bh
  4121b2:	jmp    0xbff:0x53ffffcb
  4121b9:	add    BYTE PTR [edx],bl
  4121bb:	mov    ah,0x89
  4121bd:	push   DWORD PTR [edi-0x34]
  4121c0:	adc    bh,bh
  4121c2:	pop    esi
  4121c3:	xor    edi,edi
  4121c5:	add    BYTE PTR ds:0x2b838c00,bh
  4121cb:	xchg   esi,eax
  4121cc:	inc    DWORD PTR [eax]
  4121ce:	pop    ebp
  4121cf:	jmp    FWORD PTR [ebp-0x765c0700]
  4121d5:	call   FWORD PTR [edi+edi*8-0x15497cc9]
  4121dc:	(bad)  
  4121dd:	call   DWORD PTR [ebx-0x7d]
  4121e0:	inc    esp
  4121e1:	inc    eax
  4121e3:	sub    ecx,DWORD PTR [ecx-0x7876c17d]
  4121e9:	add    BYTE PTR [edi],ah
  4121eb:	test   eax,0xcc72cccc
  4121f0:	pop    DWORD PTR [eax]
  4121f2:	xor    BYTE PTR [esi],ch
  4121f4:	inc    DWORD PTR [ebx-0x6d7cfd]
  4121fa:	dec    edi
  4121fb:	call   0xa62100
  412200:	ds int3 
  412202:	adc    bl,ch
  412204:	cmp    edi,0x69
  412207:	add    bl,cl
  412209:	add    BYTE PTR [ebx-0x54],dl
  41220c:	inc    DWORD PTR [ebx+0x7eff22]
  412212:	ret    0xffcc
  412215:	and    DWORD PTR [eax+0x1f89f883],0x77
  41221c:	int3   
  41221d:	int3   
  41221e:	ja     0x4121a3
  412220:	retf   0x1ff
  412223:	scas   eax,DWORD PTR es:[edi]
  412224:	inc    DWORD PTR [eax]
  412226:	cmp    edi,edi
  412228:	pop    eax
  412229:	int3   
  41222a:	inc    esi
  41222b:	jns    0x41222d
  41222d:	(bad)  
  41222e:	jl     0x412230
  412230:	or     al,0xff
  412232:	pop    es
  412233:	lahf   
  412234:	add    BYTE PTR [eax],al
  412236:	(bad)  
  412238:	and    eax,DWORD PTR [eax]
  41223a:	mov    ebp,0xa30089df
  41223f:	mov    DWORD PTR [eax-0xff1001],edx
  412245:	add    BYTE PTR [edx-0x1],al
  412248:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412249:	jmp    esi
  41224b:	jmp    0x41224c
  41224d:	add    DWORD PTR [ecx-0x20ff0401],0x6a
  412254:	inc    DWORD PTR [eax]
  412256:	cmp    al,0xff
  412258:	cdq    
  412259:	call   DWORD PTR [edi]
  41225b:	je     0x41225d
  41225d:	jmp    DWORD PTR ds:0xf7ff30ff
  412263:	cmc    
  412264:	dec    DWORD PTR [ecx-0x4eff4f]
  41226a:	pop    esp
  41226b:	test   eax,0x4affff
  412270:	jae    0x4121fb
  412272:	pop    ebp
  412273:	xchg   ebp,eax
  412274:	inc    DWORD PTR [eax]
  412276:	push   cs
  412277:	inc    DWORD PTR [eax+0x0]
  41227a:	clc    
  41227b:	ror    DWORD PTR [ecx-0x33ff4901],cl
  412281:	mov    ecx,esp
  412283:	clc    
  412284:	inc    DWORD PTR [ebx+0x2b00a5]
  41228a:	fsubrp st(5),st
  41228c:	add    bh,bh
  41228e:	and    eax,0xe1006dff
  412293:	mov    al,0xff
  412295:	call   FWORD PTR ds:0xf6ff7183
  41229b:	cmc    
  41229c:	add    BYTE PTR [ecx+0x80ff7e],cl
  4122a2:	inc    ecx
  4122a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122a4:	(bad)  
  4122a5:	inc    eax
  4122a7:	push   DWORD PTR [ecx]
  4122a9:	dec    DWORD PTR [ecx+0x5e]
  4122ac:	inc    DWORD PTR [eax]
  4122ae:	cmp    al,0xff
  4122b0:	or     al,0x0
  4122b2:	frstor [edx]
  4122b4:	(bad)  
  4122b5:	push   DWORD PTR [ecx+0x55ff8600]
  4122bb:	sub    bh,bh
  4122bd:	add    BYTE PTR [edi+edi*8-0x592f0053],bl
  4122c4:	(bad)  
  4122c5:	jmp    DWORD PTR [edx]
  4122c7:	jmp    DWORD PTR [ecx-0xc7c401]
  4122cd:	call   DWORD PTR [eax-0x1]
  4122d0:	xor    BYTE PTR [ebx+0xff09ae],al
  4122d6:	jmp    DWORD PTR ss:[eax-0xe63701]
  4122dd:	add    BYTE PTR [edi+0x0],dh
  4122e0:	stos   DWORD PTR es:[edi],eax
  4122e1:	dec    DWORD PTR [esi]
  4122e3:	mov    ecx,0x4483cc
  4122e8:	lahf   
  4122e9:	add    BYTE PTR [ecx-0x4d00ff63],dh
  4122ef:	int3   
  4122f0:	push   cs
  4122f1:	add    BYTE PTR [ecx-0x7007cdd],dh
  4122f7:	cmp    DWORD PTR ds:0x37c00,0x0
  4122fe:	inc    edi
  4122ff:	push   DWORD PTR [eax-0x917500]
  412305:	jmp    FWORD PTR [esi]
  412307:	add    BYTE PTR [edi],bl
  412309:	(bad)  
  41230a:	mov    ebx,0xe4ff0074
  41230f:	cmp    eax,0xffffffff
  412312:	xchg   ecx,eax
  412313:	add    al,0x0
  412315:	cmp    DWORD PTR [eax-0x3d7c3501],0x6e
  41231c:	inc    DWORD PTR [ebx-0x2dffb2]
  412322:	int    0x42
  412324:	(bad)  
  412325:	push   DWORD PTR ds:0x4fffc500
  41232b:	imul   eax,DWORD PTR [ebx-0x557c4500],0xad29ff
  412335:	xor    DWORD PTR [edi+0x0],0x6c
  412339:	call   DWORD PTR [ecx-0x43]
  41233c:	(bad)  
  41233d:	jmp    eax
  41233f:	call   DWORD PTR [ebp-0x240a01]
  412345:	jmp    DWORD PTR [eax+eax*1-0x1603004f]
  41234c:	inc    DWORD PTR [eax]
  41234e:	jle    0x41234f
  412350:	and    eax,DWORD PTR [ebx-0xeda8]
  412356:	cdq    
  412357:	add    BYTE PTR [edx+0xc21000],bl
  41235d:	call   esp
  41235f:	add    BYTE PTR [edi+edi*8-0x7c003b6f],al
  412366:	ret    0x44ff
  412369:	call   FWORD PTR [ecx+0x7000007c]
  41236f:	mov    DWORD PTR [ebp-0xa38701],edi
  412375:	inc    eax
  412377:	mov    DWORD PTR [esi-0x965d34],ecx
  41237d:	dec    ebp
  41237f:	cmp    DWORD PTR [esi-0xbe9877],0xffffffff
  412386:	(bad)  
  412388:	mov    edx,0xfff4dbff
  41238d:	(bad)  
  41238e:	fxch   st(4)
  412390:	out    dx,al
  412391:	jmp    DWORD PTR [esi]
  412393:	test   esp,0x36ffccff
  412399:	add    BYTE PTR [edi-0x7b],cl
  41239c:	(bad)  
  41239d:	dec    DWORD PTR [edi-0x1]
  4123a0:	test   BYTE PTR [ecx+0x8917f8],0xd4
  4123a7:	and    DWORD PTR [ecx-0x33f6307d],0xffffffff
  4123ae:	sbb    bh,bh
  4123b0:	mov    ah,0xff
  4123b2:	je     0x41242e
  4123b4:	int3   
  4123b5:	add    BYTE PTR [edi-0x2276ca00],dh
  4123bb:	inc    esp
  4123bc:	int3   
  4123bd:	push   DWORD PTR ds:0xa6001189
  4123c3:	bswap  esp
  4123c5:	call   edx
  4123c7:	push   ebx
  4123c9:	(bad)  
  4123ca:	jmp    0x1283:0x9900ffb7
  4123d1:	add    BYTE PTR [esi+0x40ffcc35],bh
  4123d7:	inc    DWORD PTR [ebx+eax*4-0xffb619]
  4123de:	push   eax
  4123df:	add    bl,al
  4123e1:	add    dh,dh
  4123e3:	aad    0x89
  4123e5:	jmp    FWORD PTR [ebp+0x59ffa0ff]
  4123eb:	mov    edi,edi
  4123ed:	sub    DWORD PTR [edx-0x1],0x6d
  4123f1:	(bad)  
  4123f2:	fidiv  WORD PTR [ecx-0x77]
  4123f5:	add    BYTE PTR [ecx+ecx*4-0x734b00c4],cl
  4123fc:	inc    DWORD PTR [eax]
  4123fe:	sar    edi,0xa3
  412401:	inc    DWORD PTR [ebp-0x41ff008a]
  412407:	add    BYTE PTR [edi+edi*8-0xc],ch
  41240b:	xor    edi,edi
  41240d:	push   DWORD PTR [edi+edi*8+0x23b3ff21]
  412414:	add    BYTE PTR [ebx-0x76640037],al
  41241a:	add    al,bh
  41241c:	inc    DWORD PTR [ebx-0x7c8bff24]
  412422:	sar    BYTE PTR [edi+edi*8],cl
  412425:	call   DWORD PTR [edi+edi*8+0x75aa00da]
  41242c:	inc    DWORD PTR [ebx-0x9cfffe]
  412432:	jne    0x412415
  412434:	add    BYTE PTR [ebx-0x5f7cd3],al
  41243a:	iret   
  41243b:	and    al,BYTE PTR [eax]
  41243d:	add    BYTE PTR [eax-0x1],bh
  412440:	xchg   bh,bh
  412442:	mov    edi,0xa6ff89e0
  412447:	call   DWORD PTR [edi-0x7d]
  41244a:	adc    eax,0xc5ff8347
  41244f:	dec    DWORD PTR [edi+edi*8-0x79]
  412453:	sbb    bh,bh
  412455:	jmp    FWORD PTR [edi+0x54ff36ff]
  41245b:	das    
  41245c:	inc    DWORD PTR [eax]
  41245e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41245f:	add    BYTE PTR [eax-0x7d],dh
  412462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412463:	pop    DWORD PTR [ebx-0x3f00c000]
  412469:	cmp    edx,0x76
  41246c:	add    ah,cl
  41246e:	adc    eax,DWORD PTR [ebx+0x6968892a]
  412474:	add    BYTE PTR [eax],al
  412476:	fild   WORD PTR [eax]
  412478:	rol    BYTE PTR [eax],1
  41247a:	call   0x5cff:0x2000074
  412481:	add    BYTE PTR [ebx],bh
  412483:	imul   eax,DWORD PTR [eax],0xffffffff
  412486:	adc    al,0x89
  412488:	add    al,BYTE PTR [eax]
  41248a:	clc    
  41248b:	mov    bh,0x83
  41248d:	add    bh,cl
  41248f:	jmp    FWORD PTR [edx-0xcef200]
  412495:	sub    ecx,0x0
  412498:	adc    BYTE PTR [eax],al
  41249a:	jae    0x41244a
  41249c:	inc    DWORD PTR [eax]
  41249e:	mov    edx,0xc800a5ff
  4124a3:	call   0x894d:0xc9ffff
  4124aa:	sbb    DWORD PTR [ebp+0x0],0xffffff83
  4124ae:	popf   
  4124af:	cmp    DWORD PTR [eax],0x0
  4124b2:	and    ch,BYTE PTR [edx-0x657c77]
  4124b8:	pop    edx
  4124b9:	inc    esp
  4124bb:	inc    DWORD PTR gs:[eax]
  4124be:	ret    0x4a00
  4124c1:	or     DWORD PTR [ecx+0x2400ffcb],0xffffffff
  4124c8:	lock int3 
  4124ca:	rol    DWORD PTR [eax+0xc8ff00],cl
  4124d0:	mov    bh,bh
  4124d2:	xor    cl,BYTE PTR [edi-0x34]
  4124d5:	add    BYTE PTR [esi-0x2c763200],ch
  4124db:	cs int3 
  4124dd:	or     DWORD PTR ds:0x3b0087ff,0xffffff9f
  4124e4:	add    BYTE PTR [ecx-0x768d00b7],cl
  4124ea:	adc    BYTE PTR [ebx+0x0],cl
  4124ed:	mov    ecx,ebx
  4124ef:	inc    DWORD PTR [ecx-0x33a43400]
  4124f5:	inc    ebp
  4124f7:	add    bh,al
  4124f9:	inc    DWORD PTR [ebp+0x5983ff64]
  4124ff:	call   FWORD PTR [edi+edi*8-0x76ff2a3b]
  412506:	je     0x412507
  412508:	pop    edi
  412509:	add    BYTE PTR [eax],bh
  41250b:	pop    edx
  41250c:	inc    DWORD PTR [eax]
  41250e:	stos   DWORD PTR es:[edi],eax
  41250f:	int3   
  412510:	xchg   ebx,eax
  412511:	int3   
  412512:	mov    al,ds:0xb8ffff62
  412517:	push   DWORD PTR [edi-0x2f6e01]
  41251d:	int3   
  41251e:	and    al,BYTE PTR [eax]
  412520:	sti    
  412521:	push   DWORD PTR [edx+0x30]
  412524:	inc    DWORD PTR [ebx-0xa400b8]
  41252a:	lea    ebp,[edi+edi*8+0x71ff17cc]
  412531:	call   FWORD PTR [ecx+0x76]
  412534:	inc    DWORD PTR [eax]
  412536:	aad    0xff
  412538:	mov    eax,0xff625c83
  41253d:	add    BYTE PTR [edi+0x45ff4a83],dh
  412543:	add    al,BYTE PTR [eax]
  412545:	mov    edi,esp
  412547:	add    BYTE PTR [eax+0xab1d00],dh
  41254d:	sub    DWORD PTR [eax],0x0
  412550:	cld    
  412551:	int3   
  412552:	(bad)  
  412553:	fs (bad) 
  412555:	call   DWORD PTR [edi+edi*8]
  412558:	scas   eax,DWORD PTR es:[edi]
  412559:	add    BYTE PTR [ebx+ebp*1-0x7c7cff01],cl
  412560:	bound  eax,QWORD PTR [ebx+0x68eb]
  412566:	test   DWORD PTR [ebx-0x40fa7c91],0xffacff00
  412570:	inc    ebp
  412571:	jmp    DWORD PTR [edi]
  412573:	xchg   DWORD PTR [eax],eax
  412575:	add    BYTE PTR [eax-0x7d],cl
  412578:	xor    eax,0xd52700
  41257d:	add    BYTE PTR [eax+eax*1+0x17],ah
  412581:	add    BYTE PTR ds:0x6883ffa5,ah
  412587:	int3   
  412588:	add    eax,0xffba0383
  41258d:	sbb    ecx,0xffffffff
  412590:	ja     0x412592
  412592:	jns    0x4125c8
  412594:	inc    DWORD PTR [ebx-0x20068]
  41259a:	bnd jo 0x41259c
  41259d:	add    BYTE PTR [esi],bh
  41259f:	sub    DWORD PTR [eax+0x0],0x6d
  4125a3:	sub    eax,0x83cb83ff
  4125a8:	(bad)  
  4125a9:	call   DWORD PTR [edx+0x19]
  4125ac:	(bad)  
  4125ad:	call   DWORD PTR [eax+eax*1-0x3f]
  4125b1:	(bad)  
  4125b2:	cmp    al,0x74
  4125b4:	add    DWORD PTR [eax],0x6a
  4125b7:	add    BYTE PTR [esi-0xcf5900],dh
  4125bd:	int3   
  4125be:	pop    ds
  4125bf:	add    bl,ah
  4125c1:	int3   
  4125c2:	mov    bh,0x1d
  4125c4:	add    bh,bh
  4125c6:	dec    esi
  4125c7:	sbb    DWORD PTR [edi+0x724500],0xffffffcc
  4125ce:	jmp    0x2941c4d2
  4125d3:	ins    BYTE PTR es:[edi],dx
  4125d4:	dec    DWORD PTR [ecx-0x4d008f]
  4125da:	in     al,dx
  4125db:	mov    ah,cl
  4125dd:	call   FWORD PTR [ecx]
  4125df:	add    BYTE PTR [edx+0xf02a89],cl
  4125e5:	jmp    DWORD PTR [eax]
  4125e7:	push   DWORD PTR [eax-0x732734]
  4125ed:	add    BYTE PTR [edx],ch
  4125ef:	mov    DWORD PTR [esi-0x7d],edi
  4125f2:	(bad)  
  4125f3:	mov    ds:0xff90ffcc,eax
  4125f8:	pop    ss
  4125f9:	(bad)  
  4125fa:	mov    ecx,0xc2ff83b1
  4125ff:	(bad)  
  412600:	out    dx,eax
  412601:	inc    esp
  412603:	lods   eax,DWORD PTR ds:[esi]
  412604:	inc    DWORD PTR [ebx-0xdc00a6]
  41260a:	lods   al,BYTE PTR ds:[esi]
  41260b:	inc    ebp
  41260c:	inc    DWORD PTR [eax]
  41260e:	sub    al,0xff
  412610:	push   edx
  412611:	int3   
  412612:	pop    ecx
  412613:	push   esp
  412614:	(bad)  
  412615:	call   DWORD PTR [ebx+0x0]
  412618:	jp     0x412619
  41261a:	dec    ebp
  41261b:	mov    ds:0x83a00000,al
  412620:	push   es
  412621:	cmp    DWORD PTR [eax-0x4676006f],0xffffffff
  412628:	xor    eax,0x529e89
  41262d:	add    BYTE PTR [esi-0x1],ch
  412630:	(bad)  
  412631:	int3   
  412632:	xchg   esp,eax
  412633:	sbb    al,0x83
  412635:	add    BYTE PTR [ebx+0x74000500],bh
  41263b:	jae    0x41263c
  41263d:	cmp    DWORD PTR [edx+0x100063ff],0xffffffd8
  412644:	dec    DWORD PTR [ecx+0x7c00b9]
  41264a:	mov    ebx,0xb9ff001d
  41264f:	add    BYTE PTR [edx],dl
  412651:	(bad)  
  412652:	inc    BYTE PTR [ecx+0x0]
  412655:	(bad)  
  412656:	mov    ecx,0x7b00f3ff
  41265b:	dec    edx
  41265c:	int3   
  41265d:	add    cl,bh
  41265f:	add    ch,al
  412661:	jmp    FWORD PTR [ebx]
  412663:	out    0xff,al
  412665:	and    edx,0xffffffcc
  412668:	mov    al,BYTE PTR [eax]
  41266a:	cmp    ebx,DWORD PTR [edx+0x0]
  41266d:	add    BYTE PTR [eax+eax*1-0x5f],dh
  412671:	add    BYTE PTR ds:0x9dff89a4,ch
  412677:	(bad)  
  412678:	fcos   
  41267a:	xchg   esi,eax
  41267b:	sar    edi,1
  41267d:	add    BYTE PTR [eax+eax*1-0x34],ah
  412681:	jmp    FWORD PTR [esi+0x5300895c]
  412687:	add    BYTE PTR [ebx-0x82a901],ah
  41268d:	add    ebx,0xffffff83
  412690:	sub    esp,0x128
  412696:	push   esi
  412697:	mov    esi,DWORD PTR ds:0x44502c
  41269d:	push   0x9
  41269f:	push   0x42
  4126a1:	call   esi
  4126a3:	mov    DWORD PTR [esp+0x4],eax
  4126a7:	call   DWORD PTR ds:0x445054
  4126ad:	push   0x7c
  4126af:	push   0x42
  4126b1:	mov    DWORD PTR [esp+0x14],eax
  4126b5:	call   esi
  4126b7:	mov    ecx,DWORD PTR ds:0x448d04
  4126bd:	mov    edx,DWORD PTR ds:0x448048
  4126c3:	mov    DWORD PTR [esp+0x8],eax
  4126c7:	add    ecx,0x16ab4
  4126cd:	mov    esi,0xcf
  4126d2:	push   edi
  4126d3:	movzx  eax,BYTE PTR [edx+0x4]
  4126d7:	movzx  edi,WORD PTR [edx+0x2]
  4126db:	movzx  edx,BYTE PTR [edx]
  4126de:	shl    eax,0x10
  4126e1:	add    eax,edi
  4126e3:	shl    eax,0x8
  4126e6:	add    eax,edx
  4126e8:	mov    ds:0x448cf0,eax
  4126ed:	mov    edx,0xe50336ec
  4126f2:	sub    edx,DWORD PTR ds:0x448d00
  4126f8:	add    ecx,0xc
  4126fb:	xor    edx,eax
  4126fd:	mov    DWORD PTR [ecx-0xc],edx
  412700:	mov    edx,DWORD PTR ds:0x448048
  412706:	add    edx,0x8
  412709:	mov    DWORD PTR ds:0x448048,edx
  41270f:	movzx  eax,BYTE PTR [edx+0x4]
  412713:	movzx  edi,WORD PTR [edx+0x2]
  412717:	movzx  edx,BYTE PTR [edx]
  41271a:	shl    eax,0x10
  41271d:	add    eax,edi
  41271f:	shl    eax,0x8
  412722:	add    eax,edx
  412724:	mov    ds:0x448cf0,eax
  412729:	mov    edx,0xe50336ec
  41272e:	sub    edx,DWORD PTR ds:0x448d00
  412734:	xor    edx,eax
  412736:	mov    DWORD PTR [ecx-0x8],edx
  412739:	mov    edx,DWORD PTR ds:0x448048
  41273f:	add    edx,0x8
  412742:	mov    DWORD PTR ds:0x448048,edx
  412748:	movzx  eax,BYTE PTR [edx+0x4]
  41274c:	movzx  edi,WORD PTR [edx+0x2]
  412750:	movzx  edx,BYTE PTR [edx]
  412753:	shl    eax,0x10
  412756:	add    eax,edi
  412758:	shl    eax,0x8
  41275b:	add    eax,edx
  41275d:	mov    edx,0xe50336ec
  412762:	sub    edx,DWORD PTR ds:0x448d00
  412768:	mov    ds:0x448cf0,eax
  41276d:	xor    edx,eax
  41276f:	mov    DWORD PTR [ecx-0x4],edx
  412772:	mov    edx,DWORD PTR ds:0x448048
  412778:	add    edx,0x8
  41277b:	dec    esi
  41277c:	mov    DWORD PTR ds:0x448048,edx
  412782:	jne    0x4126d3
  412788:	push   0x433c60
  41278d:	call   0x40b820
  412792:	mov    eax,ds:0x448d04
  412797:	mov    edx,DWORD PTR ds:0x44804c
  41279d:	add    esp,0x4
  4127a0:	add    eax,0x15d28
  4127a5:	mov    esi,0x23
  4127aa:	lea    ebx,[ebx+0x0]
  4127b0:	movzx  ecx,BYTE PTR [edx+0x7]
  4127b4:	movzx  edi,BYTE PTR [edx+0x5]
  4127b8:	movzx  edx,WORD PTR [edx+0x1]
  4127bc:	shl    ecx,0x8
  4127bf:	add    ecx,edi
  4127c1:	shl    ecx,0x10
  4127c4:	add    ecx,edx
  4127c6:	mov    edx,DWORD PTR ds:0x448d00
  4127cc:	sub    edx,0x401e6
  4127d2:	neg    edx
  4127d4:	sbb    edx,edx
  4127d6:	and    edx,0xee02d9c5
  4127dc:	add    edx,0x11fe043e
  4127e2:	xor    edx,ecx
  4127e4:	mov    DWORD PTR ds:0x448cf0,ecx
  4127ea:	mov    DWORD PTR [eax],edx
  4127ec:	mov    edx,DWORD PTR ds:0x44804c
  4127f2:	movzx  ecx,WORD PTR [edx+0xe]
  4127f6:	movzx  edx,WORD PTR [edx+0x8]
  4127fa:	shl    ecx,0x10
  4127fd:	add    ecx,edx
  4127ff:	mov    edx,DWORD PTR ds:0x448d00
  412805:	xor    edx,ecx
  412807:	xor    edx,0x11fa05d8
  41280d:	mov    DWORD PTR ds:0x448cf0,ecx
  412813:	mov    DWORD PTR [eax+0x4],edx
  412816:	mov    edx,DWORD PTR ds:0x44804c
  41281c:	add    edx,0x10
  41281f:	mov    DWORD PTR ds:0x44804c,edx
  412825:	movzx  ecx,BYTE PTR [edx+0x7]
  412829:	movzx  edi,BYTE PTR [edx+0x5]
  41282d:	movzx  edx,WORD PTR [edx+0x1]
  412831:	shl    ecx,0x8
  412834:	add    ecx,edi
  412836:	shl    ecx,0x10
  412839:	add    ecx,edx
  41283b:	mov    edx,DWORD PTR ds:0x448d00
  412841:	sub    edx,0x401e6
  412847:	neg    edx
  412849:	sbb    edx,edx
  41284b:	and    edx,0xee02d9c5
  412851:	add    edx,0x11fe043e
  412857:	xor    edx,ecx
  412859:	mov    DWORD PTR ds:0x448cf0,ecx
  41285f:	mov    DWORD PTR [eax+0x8],edx
  412862:	mov    edx,DWORD PTR ds:0x44804c
  412868:	movzx  ecx,WORD PTR [edx+0xe]
  41286c:	movzx  edx,WORD PTR [edx+0x8]
  412870:	shl    ecx,0x10
  412873:	add    ecx,edx
  412875:	mov    edx,DWORD PTR ds:0x448d00
  41287b:	xor    edx,ecx
  41287d:	xor    edx,0x11fa05d8
  412883:	mov    DWORD PTR ds:0x448cf0,ecx
  412889:	mov    DWORD PTR [eax+0xc],edx
  41288c:	mov    edx,DWORD PTR ds:0x44804c
  412892:	add    edx,0x10
  412895:	mov    DWORD PTR ds:0x44804c,edx
  41289b:	movzx  ecx,BYTE PTR [edx+0x7]
  41289f:	movzx  edi,BYTE PTR [edx+0x5]
  4128a3:	movzx  edx,WORD PTR [edx+0x1]
  4128a7:	shl    ecx,0x8
  4128aa:	add    ecx,edi
  4128ac:	shl    ecx,0x10
  4128af:	add    ecx,edx
  4128b1:	mov    edx,DWORD PTR ds:0x448d00
  4128b7:	sub    edx,0x401e6
  4128bd:	neg    edx
  4128bf:	sbb    edx,edx
  4128c1:	and    edx,0xee02d9c5
  4128c7:	add    edx,0x11fe043e
  4128cd:	xor    edx,ecx
  4128cf:	mov    DWORD PTR ds:0x448cf0,ecx
  4128d5:	mov    DWORD PTR [eax+0x10],edx
  4128d8:	mov    edx,DWORD PTR ds:0x44804c
  4128de:	movzx  ecx,WORD PTR [edx+0xe]
  4128e2:	movzx  edx,WORD PTR [edx+0x8]
  4128e6:	shl    ecx,0x10
  4128e9:	add    ecx,edx
  4128eb:	mov    edx,DWORD PTR ds:0x448d00
  4128f1:	mov    DWORD PTR ds:0x448cf0,ecx
  4128f7:	xor    edx,ecx
  4128f9:	xor    edx,0x11fa05d8
  4128ff:	mov    DWORD PTR [eax+0x14],edx
  412902:	mov    edx,DWORD PTR ds:0x44804c
  412908:	add    edx,0x10
  41290b:	mov    DWORD PTR ds:0x44804c,edx
  412911:	movzx  ecx,BYTE PTR [edx+0x7]
  412915:	movzx  edi,BYTE PTR [edx+0x5]
  412919:	movzx  edx,WORD PTR [edx+0x1]
  41291d:	shl    ecx,0x8
  412920:	add    ecx,edi
  412922:	shl    ecx,0x10
  412925:	add    ecx,edx
  412927:	mov    edx,DWORD PTR ds:0x448d00
  41292d:	sub    edx,0x401e6
  412933:	neg    edx
  412935:	sbb    edx,edx
  412937:	and    edx,0xee02d9c5
  41293d:	add    edx,0x11fe043e
  412943:	xor    edx,ecx
  412945:	mov    DWORD PTR ds:0x448cf0,ecx
  41294b:	mov    DWORD PTR [eax+0x18],edx
  41294e:	mov    edx,DWORD PTR ds:0x44804c
  412954:	movzx  ecx,WORD PTR [edx+0xe]
  412958:	movzx  edx,WORD PTR [edx+0x8]
  41295c:	shl    ecx,0x10
  41295f:	add    ecx,edx
  412961:	mov    edx,DWORD PTR ds:0x448d00
  412967:	xor    edx,ecx
  412969:	xor    edx,0x11fa05d8
  41296f:	mov    DWORD PTR ds:0x448cf0,ecx
  412975:	mov    DWORD PTR [eax+0x1c],edx
  412978:	mov    edx,DWORD PTR ds:0x44804c
  41297e:	add    edx,0x10
  412981:	mov    DWORD PTR ds:0x44804c,edx
  412987:	movzx  ecx,BYTE PTR [edx+0x7]
  41298b:	movzx  edi,BYTE PTR [edx+0x5]
  41298f:	movzx  edx,WORD PTR [edx+0x1]
  412993:	shl    ecx,0x8
  412996:	add    ecx,edi
  412998:	shl    ecx,0x10
  41299b:	add    ecx,edx
  41299d:	mov    edx,DWORD PTR ds:0x448d00
  4129a3:	sub    edx,0x401e6
  4129a9:	neg    edx
  4129ab:	sbb    edx,edx
  4129ad:	and    edx,0xee02d9c5
  4129b3:	add    edx,0x11fe043e
  4129b9:	xor    edx,ecx
  4129bb:	mov    DWORD PTR ds:0x448cf0,ecx
  4129c1:	mov    DWORD PTR [eax+0x20],edx
  4129c4:	mov    edx,DWORD PTR ds:0x44804c
  4129ca:	movzx  ecx,WORD PTR [edx+0xe]
  4129ce:	movzx  edx,WORD PTR [edx+0x8]
  4129d2:	shl    ecx,0x10
  4129d5:	add    ecx,edx
  4129d7:	mov    edx,DWORD PTR ds:0x448d00
  4129dd:	xor    edx,ecx
  4129df:	xor    edx,0x11fa05d8
  4129e5:	mov    DWORD PTR ds:0x448cf0,ecx
  4129eb:	mov    DWORD PTR [eax+0x24],edx
  4129ee:	mov    edx,DWORD PTR ds:0x44804c
  4129f4:	add    edx,0x10
  4129f7:	add    eax,0x28
  4129fa:	dec    esi
  4129fb:	mov    DWORD PTR ds:0x44804c,edx
  412a01:	jne    0x4127b0
  412a07:	call   0x407580
  412a0c:	mov    edx,DWORD PTR ds:0x448d04
  412a12:	mov    ecx,DWORD PTR ds:0x448050
  412a18:	add    edx,0x162a0
  412a1e:	mov    esi,0x205
  412a23:	movzx  eax,BYTE PTR [ecx+0x7]
  412a27:	movzx  edi,WORD PTR [ecx+0x5]
  412a2b:	movzx  ecx,BYTE PTR [ecx]
  412a2e:	shl    eax,0x10
  412a31:	add    eax,edi
  412a33:	shl    eax,0x8
  412a36:	add    eax,ecx
  412a38:	mov    ecx,DWORD PTR ds:0x448d00
  412a3e:	add    ecx,0x95fd3126
  412a44:	xor    ecx,eax
  412a46:	mov    ds:0x448cf0,eax
  412a4b:	mov    DWORD PTR [edx],ecx
  412a4d:	mov    ecx,DWORD PTR ds:0x448050
  412a53:	add    ecx,0x8
  412a56:	add    edx,0x4
  412a59:	dec    esi
  412a5a:	mov    DWORD PTR ds:0x448050,ecx
  412a60:	jne    0x412a23
  412a62:	mov    edi,DWORD PTR ds:0x448d04
  412a68:	mov    esi,DWORD PTR [esp+0x134]
  412a6f:	push   ebx
  412a70:	push   ebp
  412a71:	mov    ebp,DWORD PTR ds:0x445024
  412a77:	add    edi,0x13a58
  412a7d:	add    esi,0x5
  412a80:	mov    ebx,0x16a
  412a85:	movzx  eax,BYTE PTR [esi+0x2]
  412a89:	movzx  edx,WORD PTR [esi]
  412a8c:	movzx  ecx,BYTE PTR [esi-0x5]
  412a90:	shl    eax,0x10
  412a93:	add    eax,edx
  412a95:	mov    edx,DWORD PTR ds:0x448d00
  412a9b:	shl    eax,0x8
  412a9e:	add    eax,ecx
  412aa0:	add    edx,0x82eb9768
  412aa6:	mov    ds:0x448cf0,eax
  412aab:	xor    edx,eax
  412aad:	lea    eax,[esp+0x1c]
  412ab1:	push   eax
  412ab2:	push   0x0
  412ab4:	push   0x3
  412ab6:	mov    DWORD PTR [edi],edx
  412ab8:	call   ebp
  412aba:	add    edi,0x4
  412abd:	add    esi,0x8
  412ac0:	dec    ebx
  412ac1:	jne    0x412a85
  412ac3:	mov    ecx,DWORD PTR [esp+0x18]
  412ac7:	push   ebx
  412ac8:	push   0x10e
  412acd:	push   0xe5
  412ad2:	push   0x48
  412ad4:	push   0xaf
  412ad9:	push   ebx
  412ada:	push   ecx
  412adb:	call   DWORD PTR ds:0x445050
  412ae1:	mov    eax,ds:0x448d04
  412ae6:	mov    edx,DWORD PTR ds:0x448054
  412aec:	pop    ebp
  412aed:	lea    esi,[ebx+0x54]
  412af0:	add    eax,0x14000
  412af5:	pop    ebx
  412af6:	jmp    0x412b00
  412af8:	lea    esp,[esp+0x0]
  412aff:	nop
  412b00:	movzx  ecx,BYTE PTR [edx+0x4]
  412b04:	movzx  edi,BYTE PTR [edx+0x2]
  412b08:	movzx  edx,WORD PTR [edx]
  412b0b:	shl    ecx,0x8
  412b0e:	add    ecx,edi
  412b10:	shl    ecx,0x10
  412b13:	add    ecx,edx
  412b15:	mov    DWORD PTR ds:0x448cf0,ecx
  412b1b:	mov    edx,0xee52a8b1
  412b20:	sub    edx,DWORD PTR ds:0x448d00
  412b26:	xor    edx,ecx
  412b28:	mov    DWORD PTR [eax],edx
  412b2a:	mov    edx,DWORD PTR ds:0x448054
  412b30:	add    edx,0x8
  412b33:	mov    DWORD PTR ds:0x448054,edx
  412b39:	movzx  ecx,BYTE PTR [edx+0x4]
  412b3d:	movzx  edi,BYTE PTR [edx+0x2]
  412b41:	movzx  edx,WORD PTR [edx]
  412b44:	shl    ecx,0x8
  412b47:	add    ecx,edi
  412b49:	shl    ecx,0x10
  412b4c:	add    ecx,edx
  412b4e:	mov    DWORD PTR ds:0x448cf0,ecx
  412b54:	mov    edx,0xee52a8b1
  412b59:	sub    edx,DWORD PTR ds:0x448d00
  412b5f:	xor    edx,ecx
  412b61:	mov    DWORD PTR [eax+0x4],edx
  412b64:	mov    edx,DWORD PTR ds:0x448054
  412b6a:	add    edx,0x8
  412b6d:	mov    DWORD PTR ds:0x448054,edx
  412b73:	movzx  ecx,BYTE PTR [edx+0x4]
  412b77:	movzx  edi,BYTE PTR [edx+0x2]
  412b7b:	movzx  edx,WORD PTR [edx]
  412b7e:	shl    ecx,0x8
  412b81:	add    ecx,edi
  412b83:	shl    ecx,0x10
  412b86:	add    ecx,edx
  412b88:	mov    DWORD PTR ds:0x448cf0,ecx
  412b8e:	mov    edx,0xee52a8b1
  412b93:	sub    edx,DWORD PTR ds:0x448d00
  412b99:	xor    edx,ecx
  412b9b:	mov    DWORD PTR [eax+0x8],edx
  412b9e:	mov    edx,DWORD PTR ds:0x448054
  412ba4:	add    edx,0x8
  412ba7:	mov    DWORD PTR ds:0x448054,edx
  412bad:	movzx  ecx,BYTE PTR [edx+0x4]
  412bb1:	movzx  edi,BYTE PTR [edx+0x2]
  412bb5:	movzx  edx,WORD PTR [edx]
  412bb8:	shl    ecx,0x8
  412bbb:	add    ecx,edi
  412bbd:	shl    ecx,0x10
  412bc0:	add    ecx,edx
  412bc2:	mov    DWORD PTR ds:0x448cf0,ecx
  412bc8:	mov    edx,0xee52a8b1
  412bcd:	sub    edx,DWORD PTR ds:0x448d00
  412bd3:	xor    edx,ecx
  412bd5:	mov    DWORD PTR [eax+0xc],edx
  412bd8:	mov    edx,DWORD PTR ds:0x448054
  412bde:	add    edx,0x8
  412be1:	mov    DWORD PTR ds:0x448054,edx
  412be7:	movzx  ecx,BYTE PTR [edx+0x4]
  412beb:	movzx  edi,BYTE PTR [edx+0x2]
  412bef:	movzx  edx,WORD PTR [edx]
  412bf2:	shl    ecx,0x8
  412bf5:	add    ecx,edi
  412bf7:	shl    ecx,0x10
  412bfa:	add    ecx,edx
  412bfc:	mov    DWORD PTR ds:0x448cf0,ecx
  412c02:	mov    edx,0xee52a8b1
  412c07:	sub    edx,DWORD PTR ds:0x448d00
  412c0d:	xor    edx,ecx
  412c0f:	mov    DWORD PTR [eax+0x10],edx
  412c12:	mov    edx,DWORD PTR ds:0x448054
  412c18:	add    edx,0x8
  412c1b:	mov    DWORD PTR ds:0x448054,edx
  412c21:	movzx  ecx,BYTE PTR [edx+0x4]
  412c25:	movzx  edi,BYTE PTR [edx+0x2]
  412c29:	movzx  edx,WORD PTR [edx]
  412c2c:	shl    ecx,0x8
  412c2f:	add    ecx,edi
  412c31:	shl    ecx,0x10
  412c34:	add    ecx,edx
  412c36:	mov    edx,0xee52a8b1
  412c3b:	sub    edx,DWORD PTR ds:0x448d00
  412c41:	mov    DWORD PTR ds:0x448cf0,ecx
  412c47:	xor    edx,ecx
  412c49:	mov    DWORD PTR [eax+0x14],edx
  412c4c:	mov    edx,DWORD PTR ds:0x448054
  412c52:	add    edx,0x8
  412c55:	add    eax,0x18
  412c58:	dec    esi
  412c59:	mov    DWORD PTR ds:0x448054,edx
  412c5f:	jne    0x412b00
  412c65:	mov    edx,DWORD PTR ds:0x448d04
  412c6b:	mov    ecx,DWORD PTR [esp+0x138]
  412c72:	add    edx,0x147e0
  412c78:	inc    ecx
  412c79:	mov    esi,0x175
  412c7e:	mov    edi,edi
  412c80:	movzx  eax,WORD PTR [ecx+0x3]
  412c84:	movzx  edi,WORD PTR [ecx]
  412c87:	shl    eax,0x10
  412c8a:	add    eax,edi
  412c8c:	mov    ds:0x448cf0,eax
  412c91:	mov    edi,0xca80a4a
  412c96:	sub    edi,DWORD PTR ds:0x448d00
  412c9c:	add    edx,0x8
  412c9f:	xor    edi,eax
  412ca1:	mov    DWORD PTR [edx-0x8],edi
  412ca4:	movzx  eax,BYTE PTR [ecx+0xc]
  412ca8:	movzx  edi,WORD PTR [ecx+0x8]
  412cac:	shl    eax,0x10
  412caf:	add    eax,edi
  412cb1:	movzx  edi,BYTE PTR [ecx+0x5]
  412cb5:	shl    eax,0x8
  412cb8:	add    eax,edi
  412cba:	mov    edi,0xca80a4a
  412cbf:	sub    edi,DWORD PTR ds:0x448d00
  412cc5:	mov    ds:0x448cf0,eax
  412cca:	xor    edi,eax
  412ccc:	mov    DWORD PTR [edx-0x4],edi
  412ccf:	add    ecx,0x10
  412cd2:	dec    esi
  412cd3:	jne    0x412c80
  412cd5:	mov    eax,ds:0x448d04
  412cda:	mov    edx,DWORD PTR ds:0x448058
  412ce0:	add    eax,0x15388
  412ce5:	mov    esi,0x4d
  412cea:	lea    ebx,[ebx+0x0]
  412cf0:	movzx  ecx,BYTE PTR [edx+0x7]
  412cf4:	movzx  edi,WORD PTR [edx+0x5]
  412cf8:	movzx  edx,BYTE PTR [edx+0x2]
  412cfc:	shl    ecx,0x10
  412cff:	add    ecx,edi
  412d01:	shl    ecx,0x8
  412d04:	add    ecx,edx
  412d06:	mov    edx,DWORD PTR ds:0x448d00
  412d0c:	sub    edx,0x401e6
  412d12:	neg    edx
  412d14:	sbb    edx,edx
  412d16:	and    edx,0xce6da20a
  412d1c:	add    edx,0x3192dbd0
  412d22:	xor    edx,ecx
  412d24:	mov    DWORD PTR ds:0x448cf0,ecx
  412d2a:	mov    DWORD PTR [eax],edx
  412d2c:	mov    edx,DWORD PTR ds:0x448058
  412d32:	movzx  ecx,BYTE PTR [edx+0xe]
  412d36:	movzx  edi,WORD PTR [edx+0xb]
  412d3a:	movzx  edx,BYTE PTR [edx+0x9]
  412d3e:	shl    ecx,0x10
  412d41:	add    ecx,edi
  412d43:	shl    ecx,0x8
  412d46:	add    ecx,edx
  412d48:	mov    DWORD PTR ds:0x448cf0,ecx
  412d4e:	mov    edx,0x3196ddb6
  412d53:	sub    edx,DWORD PTR ds:0x448d00
  412d59:	xor    edx,ecx
  412d5b:	mov    DWORD PTR [eax+0x4],edx
  412d5e:	mov    edx,DWORD PTR ds:0x448058
  412d64:	add    edx,0x10
  412d67:	mov    DWORD PTR ds:0x448058,edx
  412d6d:	movzx  ecx,BYTE PTR [edx+0x7]
  412d71:	movzx  edi,WORD PTR [edx+0x5]
  412d75:	movzx  edx,BYTE PTR [edx+0x2]
  412d79:	shl    ecx,0x10
  412d7c:	add    ecx,edi
  412d7e:	shl    ecx,0x8
  412d81:	add    ecx,edx
  412d83:	mov    edx,DWORD PTR ds:0x448d00
  412d89:	sub    edx,0x401e6
  412d8f:	neg    edx
  412d91:	sbb    edx,edx
  412d93:	and    edx,0xce6da20a
  412d99:	add    edx,0x3192dbd0
  412d9f:	xor    edx,ecx
  412da1:	mov    DWORD PTR ds:0x448cf0,ecx
  412da7:	mov    DWORD PTR [eax+0x8],edx
  412daa:	mov    edx,DWORD PTR ds:0x448058
  412db0:	movzx  ecx,BYTE PTR [edx+0xe]
  412db4:	movzx  edi,WORD PTR [edx+0xb]
  412db8:	movzx  edx,BYTE PTR [edx+0x9]
  412dbc:	shl    ecx,0x10
  412dbf:	add    ecx,edi
  412dc1:	shl    ecx,0x8
  412dc4:	add    ecx,edx
  412dc6:	mov    DWORD PTR ds:0x448cf0,ecx
  412dcc:	mov    edx,0x3196ddb6
  412dd1:	sub    edx,DWORD PTR ds:0x448d00
  412dd7:	xor    edx,ecx
  412dd9:	mov    DWORD PTR [eax+0xc],edx
  412ddc:	mov    edx,DWORD PTR ds:0x448058
  412de2:	add    edx,0x10
  412de5:	mov    DWORD PTR ds:0x448058,edx
  412deb:	movzx  ecx,BYTE PTR [edx+0x7]
  412def:	movzx  edi,WORD PTR [edx+0x5]
  412df3:	movzx  edx,BYTE PTR [edx+0x2]
  412df7:	shl    ecx,0x10
  412dfa:	add    ecx,edi
  412dfc:	shl    ecx,0x8
  412dff:	add    ecx,edx
  412e01:	mov    edx,DWORD PTR ds:0x448d00
  412e07:	sub    edx,0x401e6
  412e0d:	neg    edx
  412e0f:	sbb    edx,edx
  412e11:	and    edx,0xce6da20a
  412e17:	add    edx,0x3192dbd0
  412e1d:	xor    edx,ecx
  412e1f:	mov    DWORD PTR ds:0x448cf0,ecx
  412e25:	mov    DWORD PTR [eax+0x10],edx
  412e28:	mov    edx,DWORD PTR ds:0x448058
  412e2e:	movzx  ecx,BYTE PTR [edx+0xe]
  412e32:	movzx  edi,WORD PTR [edx+0xb]
  412e36:	movzx  edx,BYTE PTR [edx+0x9]
  412e3a:	shl    ecx,0x10
  412e3d:	add    ecx,edi
  412e3f:	shl    ecx,0x8
  412e42:	add    ecx,edx
  412e44:	mov    DWORD PTR ds:0x448cf0,ecx
  412e4a:	mov    edx,0x3196ddb6
  412e4f:	sub    edx,DWORD PTR ds:0x448d00
  412e55:	xor    edx,ecx
  412e57:	mov    DWORD PTR [eax+0x14],edx
  412e5a:	mov    edx,DWORD PTR ds:0x448058
  412e60:	add    edx,0x10
  412e63:	mov    DWORD PTR ds:0x448058,edx
  412e69:	movzx  ecx,BYTE PTR [edx+0x7]
  412e6d:	movzx  edi,WORD PTR [edx+0x5]
  412e71:	movzx  edx,BYTE PTR [edx+0x2]
  412e75:	shl    ecx,0x10
  412e78:	add    ecx,edi
  412e7a:	shl    ecx,0x8
  412e7d:	add    ecx,edx
  412e7f:	mov    edx,DWORD PTR ds:0x448d00
  412e85:	sub    edx,0x401e6
  412e8b:	neg    edx
  412e8d:	sbb    edx,edx
  412e8f:	and    edx,0xce6da20a
  412e95:	add    edx,0x3192dbd0
  412e9b:	xor    edx,ecx
  412e9d:	mov    DWORD PTR ds:0x448cf0,ecx
  412ea3:	mov    DWORD PTR [eax+0x18],edx
  412ea6:	mov    edx,DWORD PTR ds:0x448058
  412eac:	movzx  ecx,BYTE PTR [edx+0xe]
  412eb0:	movzx  edi,WORD PTR [edx+0xb]
  412eb4:	movzx  edx,BYTE PTR [edx+0x9]
  412eb8:	shl    ecx,0x10
  412ebb:	add    ecx,edi
  412ebd:	shl    ecx,0x8
  412ec0:	add    ecx,edx
  412ec2:	mov    edx,0x3196ddb6
  412ec7:	sub    edx,DWORD PTR ds:0x448d00
  412ecd:	mov    DWORD PTR ds:0x448cf0,ecx
  412ed3:	xor    edx,ecx
  412ed5:	mov    DWORD PTR [eax+0x1c],edx
  412ed8:	mov    edx,DWORD PTR ds:0x448058
  412ede:	add    edx,0x10
  412ee1:	add    eax,0x20
  412ee4:	dec    esi
  412ee5:	mov    DWORD PTR ds:0x448058,edx
  412eeb:	jne    0x412cf0
  412ef1:	mov    eax,DWORD PTR [esp+0x8]
  412ef5:	mov    esi,DWORD PTR ds:0x445030
  412efb:	pop    edi
  412efc:	test   eax,eax
  412efe:	je     0x412f03
  412f00:	push   eax
  412f01:	call   esi
  412f03:	mov    eax,DWORD PTR [esp+0x8]
  412f07:	test   eax,eax
  412f09:	je     0x412f0e
  412f0b:	push   eax
  412f0c:	call   esi
  412f0e:	pop    esi
  412f0f:	add    esp,0x128
  412f15:	ret    
  412f16:	int3   
  412f17:	int3   
  412f18:	int3   
  412f19:	int3   
  412f1a:	int3   
  412f1b:	int3   
  412f1c:	int3   
  412f1d:	int3   
  412f1e:	int3   
  412f1f:	int3   
  412f20:	(bad)  
  412f21:	(bad)  
  412f22:	jmp    DWORD PTR ds:0xf80cddff
  412f28:	add    BYTE PTR [ebx+0xb8355ff],al
  412f2e:	jge    0x412ed1
  412f30:	add    DWORD PTR [eax],0xffffffff
  412f33:	or     eax,0x6dfe2583
  412f38:	cmp    edi,0xffffffff
  412f3b:	aas    
  412f3c:	jmp    FWORD PTR [edx-0x7676769c]
  412f42:	int3   
  412f43:	popf   
  412f44:	dec    DWORD PTR [ebp-0x762b75]
  412f4a:	call   FWORD PTR [eax+0x0]
  412f4d:	dec    edx
  412f4e:	lock push ecx
  412f50:	(bad)  
  412f51:	(bad)  
  412f52:	jmp    DWORD PTR [edi-0x7d]
  412f55:	mov    ebp,0x32f2
  412f5a:	(bad)  
  412f5b:	fadd   DWORD PTR [eax]
  412f5d:	ins    DWORD PTR es:[edi],dx
  412f5e:	retf   0xff2b
  412f61:	add    bh,bh
  412f63:	xor    eax,DWORD PTR [eax]
  412f65:	inc    ecx
  412f66:	sti    
  412f67:	pop    eax
  412f68:	(bad)  
  412f69:	inc    DWORD PTR [eax]
  412f6b:	repz add bh,bh
  412f6e:	je     0x412fc2
  412f70:	inc    DWORD PTR [eax]
  412f72:	(bad)  
  412f73:	out    dx,eax
  412f74:	and    DWORD PTR [edx],0x72
  412f77:	cmc    
  412f78:	int3   
  412f79:	inc    DWORD PTR [eax]
  412f7b:	lds    eax,FWORD PTR [eax]
  412f7d:	loopne 0x412fa3
  412f7f:	test   DWORD PTR [eax],eax
  412f81:	add    BYTE PTR [ebx+0x2bdfff4a],al
  412f87:	inc    ebp
  412f88:	add    bh,bh
  412f8a:	add    al,ah
  412f8c:	inc    DWORD PTR [edx+0x6]
  412f8f:	fcos   
  412f91:	dec    DWORD PTR [ecx-0x231000c6]
  412f97:	aas    
  412f98:	add    BYTE PTR [ecx+0x28341ff],cl
  412f9e:	jmp    0xcc8e:0xffffb5
  412fa5:	or     eax,0xff003c54
  412faa:	push   DWORD PTR [edi+edi*8-0x337cc1c1]
  412fb1:	add    bh,bh
  412fb3:	sbb    BYTE PTR [ebx-0xc6688b],al
  412fb9:	inc    DWORD PTR [eax]
  412fbb:	dec    esp
  412fbc:	inc    DWORD PTR [ebx]
  412fbe:	pop    ss
  412fbf:	jb     0x412fc1
  412fc1:	inc    DWORD PTR [eax]
  412fc3:	retf   0x5d00
  412fc6:	mov    al,0xa8
  412fc8:	add    DWORD PTR [ebx+0x1affe200],0x17
  412fcf:	inc    edi
  412fd0:	(bad)  
  412fd1:	(bad)  
  412fd2:	dec    eax
  412fd4:	add    BYTE PTR [eax+0xff2bd2],dh
  412fda:	or     ebp,0xffffffff
  412fdd:	mov    eax,?
  412fdf:	adc    al,0xff
  412fe1:	inc    DWORD PTR [eax]
  412fe3:	mov    ah,0x0
  412fe5:	jp     0x412fe0
  412fe7:	sahf   
  412fe8:	(bad)  
  412fe9:	(bad)  
  412fea:	(bad)  
  412feb:	mov    edx,0x1d0fefff
  412ff0:	mov    DWORD PTR [ecx+0x2500c000],ecx
  412ff6:	pop    eax
  412ff7:	mov    dh,0xff
  412ff9:	add    BYTE PTR [eax],al
  412ffb:	sbb    DWORD PTR gs:[edi],0xffffffb2
  412fff:	cmp    eax,DWORD PTR [eax]
  413001:	inc    DWORD PTR [eax]
  413003:	ins    DWORD PTR es:[edi],dx
  413004:	add    BYTE PTR [esi+0x55],dh
  413007:	pop    ds
  413008:	dec    esp
  41300a:	int3   
  41300b:	jg     0x41300d
  41300d:	adc    esp,ebp
  41300f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413010:	add    DWORD PTR [eax],0xffffffff
  413013:	add    bh,bh
  413015:	or     al,0xc1
  413017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413018:	(bad)  
  413019:	inc    DWORD PTR [ebx-0x5a62ff32]
  41301f:	and    al,0xcc
  413021:	add    bh,bh
  413023:	xchg   esi,eax
  413024:	add    BYTE PTR [ebx+0x10],ch
  413027:	retf   
  413028:	add    BYTE PTR [ebx+0x5f8957ff],al
  41302e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413030:	mov    edi,edi
  413032:	push   ebx
  413034:	cmp    DWORD PTR [eax-0x45f0],0x0
  41303b:	cli    
  41303c:	(bad)  
  41303d:	jmp    0x413089
  41303f:	mov    dl,0xff
  413041:	(bad)  
  413042:	dec    DWORD PTR [eax-0x77]
  413045:	sar    DWORD PTR [eax+ebx*1+0x0],0xff
  41304a:	(bad)  
  41304b:	fdivr  st,st(7)
  41304d:	ret    0x74a5
  413050:	(bad)  
  413051:	(bad)  
  413052:	push   DWORD PTR [esi]
  413054:	add    BYTE PTR [esi],dh
  413056:	ds xor bh,bh
  413059:	(bad)  
  41305a:	jmp    FWORD PTR ds:0x9855689
  413060:	(bad)  
  413061:	inc    DWORD PTR [ebx-0x441e00a0]
  413067:	enter  0xff83,0xff
  41306b:	xchg   edx,eax
  41306c:	dec    DWORD PTR [edx]
  41306e:	inc    ebx
  41306f:	mov    cl,0x0
  413071:	dec    DWORD PTR [ecx-0x2d123336]
  413077:	in     eax,0x83
  413079:	add    bh,bh
  41307b:	pop    ebp
  41307c:	push   DWORD PTR [eax-0x17]
  41307f:	add    eax,0xef00ffff
  413084:	push   edi
  413086:	fld    TBYTE PTR [ebp+0x0]
  413089:	(bad)  
  41308a:	inc    DWORD PTR [esp+ecx*8-0x7cc55685]
  413091:	dec    esp
  413093:	popf   
  413094:	int3   
  413095:	sub    BYTE PTR [ebx-0xff50],0x54
  41309c:	jmp    FWORD PTR ds:0x8389f485
  4130a2:	int3   
  4130a3:	cmp    DWORD PTR [eax],eax
  4130a5:	sahf   
  4130a6:	sub    ah,0x0
  4130a9:	add    bh,bh
  4130ab:	xchg   bh,bh
  4130ad:	xchg   DWORD PTR [ebp-0x7c00763d],ecx
  4130b3:	dec    esi
  4130b4:	mov    DWORD PTR ds:0xffff61df,ecx
  4130ba:	add    BYTE PTR [edx-0x33db9d01],bl
  4130c0:	mov    edi,edi
  4130c2:	add    al,ch
  4130c4:	jmp    FWORD PTR [edi*2-0x76ff72]
  4130cb:	mov    edx,0x462bd8ff
  4130d0:	inc    DWORD PTR [ebx+0x19ff4ecc]
  4130d6:	clc    
  4130d7:	inc    DWORD PTR cs:[eax]
  4130da:	add    BYTE PTR [ebx-0x1],dl
  4130dd:	repz arpl WORD PTR [edi-0x34],bx
  4130e1:	(bad)  
  4130e2:	jmp    DWORD PTR [edi-0x9d67777]
  4130e8:	add    DWORD PTR [ebx+0x7cffee00],0xffffffa3
  4130ef:	sar    bh,0xff
  4130f2:	inc    DWORD PTR [ebx-0x1]
  4130f5:	pop    es
  4130f6:	sbb    cl,BYTE PTR [esi]
  4130f8:	inc    DWORD PTR [eax]
  4130fa:	xor    DWORD PTR [edi+edi*8+0x4c5fa9],0xffffffff
  413102:	int3   
  413103:	test   al,0x0
  413105:	add    dh,dh
  413107:	repnz cmp edi,0xffffff89
  41310b:	hlt    
  41310c:	add    BYTE PTR [ebp-0x7cffb584],cl
  413112:	jmp    FWORD PTR [ebp-0x1]
  413115:	and    eax,0x83e5d5
  41311a:	add    DWORD PTR [edx-0x3e92000],0x0
  413121:	add    ah,cl
  413123:	cmp    edi,edi
  413125:	mov    al,0x92
  413127:	inc    ebp
  413128:	inc    DWORD PTR [eax]
  41312a:	inc    DWORD PTR [edi+0x49c65400]
  413130:	(bad)  
  413131:	inc    DWORD PTR [eax]
  413133:	(bad)  
  413134:	call   FWORD PTR [edx-0xdab1]
  41313a:	inc    DWORD PTR [edi]
  41313c:	dec    DWORD PTR [esi+ebx*4+0x58]
  413140:	(bad)  
  413141:	(bad)  
  413142:	dec    DWORD PTR [edi+edi*8-0x7c99c4de]
  413149:	mov    DWORD PTR [eax],eax
  41314b:	push   cs
  41314c:	mov    DWORD PTR [edi-0x60],esi
  41314f:	hlt    
  413150:	or     esp,0xffffffff
  413153:	in     al,0xff
  413155:	add    al,BYTE PTR ds:0xff00834e
  41315b:	mov    ds:0x5126a389,eax
  413160:	(bad)  
  413161:	dec    DWORD PTR [ecx+0x4ef8ffba]
  413167:	mov    ch,0x83
  413169:	(bad)  
  41316a:	push   DWORD PTR [eax+0x67ba0fcc]
  413170:	add    DWORD PTR [eax],0xffffffff
  413173:	cld    
  413174:	inc    DWORD PTR [ebp-0x18]
  413177:	mov    DWORD PTR [eax],eax
  413179:	dec    esp
  41317b:	fdivp  st(7),st
  41317d:	xchg   esp,eax
  41317e:	push   es
  41317f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413180:	mov    esp,ecx
  413182:	call   DWORD PTR [edi+edi*8-0x19]
  413186:	jl     0x4131ce
  413188:	cmp    edi,0xffffffff
  41318b:	mov    al,0xff
  41318d:	push   ebp
  41318e:	retf   
  41318f:	js     0x413191
  413191:	inc    DWORD PTR [ebx+0x42548323]
  413197:	(bad)  
  413198:	(bad)  
  413199:	inc    DWORD PTR [eax]
  41319b:	test   DWORD PTR [eax],0xfff8deb7
  4131a1:	inc    DWORD PTR [eax]
  4131a3:	scas   eax,DWORD PTR es:[edi]
  4131a4:	push   DWORD PTR [ebp-0x58]
  4131a7:	and    al,BYTE PTR [eax]
  4131a9:	add    bh,bh
  4131ab:	les    eax,FWORD PTR [eax]
  4131ad:	or     BYTE PTR [edi-0xff007e],ch
  4131b3:	cmp    eax,0x3001e6ff
  4131b8:	add    BYTE PTR [eax],al
  4131ba:	inc    ecx
  4131bc:	add    dh,cl
  4131be:	mov    al,ds:0x89ff83b8
  4131c3:	sar    edi,1
  4131c5:	inc    esi
  4131c6:	sub    BYTE PTR [ebp+0x78ffff89],0xff
  4131cd:	and    DWORD PTR [eax],eax
  4131cf:	les    eax,FWORD PTR [ebx+0xc0ccff]
  4131d5:	scas   al,BYTE PTR es:[edi]
  4131d6:	jmp    FWORD PTR [eax-0x2633ff01]
  4131dc:	call   DWORD PTR [ecx+0xa20d]
  4131e2:	jmp    FWORD PTR [edi]
  4131e4:	add    ah,al
  4131e6:	adc    BYTE PTR [ebp-0x4f000100],dh
  4131ec:	and    DWORD PTR [ecx+0x89a84d],0x0
  4131f3:	add    BYTE PTR fs:[esi-0x761794],dh
  4131fa:	add    BYTE PTR [edx-0x1],bl
  4131fd:	jno    0x413228
  4131ff:	test   BYTE PTR [ebx-0xf8007d],0x75
  413206:	push   ecx
  413207:	push   ss
  413208:	(bad)  
  413209:	(bad)  
  41320a:	call   FWORD PTR [ebp-0xef79d01]
  413210:	(bad)  
  413211:	(bad)  
  413212:	push   edi
  413214:	add    DWORD PTR [edi+0x49],0xffffffb5
  413218:	add    bh,bh
  41321a:	add    DWORD PTR [esp+ecx*8],0x76
  41321e:	js     0x41324f
  413220:	cmp    edi,0xffffffff
  413223:	add    eax,0x46cb4e00
  413228:	add    bh,bh
  41322a:	push   DWORD PTR [ebx-0x1]
  41322d:	push   cs
  41322e:	inc    edx
  41322f:	(bad)  
  413231:	(bad)  
  413232:	call   edi
  413234:	jmp    FWORD PTR [ebx+esi*8-0x5a]
  413238:	add    DWORD PTR [eax],0xffffff89
  41323b:	ret    
  41323c:	int3   
  41323d:	cwde   
  41323e:	push   ds
  41323f:	aad    0x0
  413241:	(bad)  
  413242:	(bad)  
  413243:	sti    
  413244:	add    BYTE PTR [ebx-0x768b47],bl
  41324a:	mov    DWORD PTR [ecx],ebx
  41324c:	int3   
  41324d:	or     al,0xb3
  41324f:	mov    edx,0xef00ff83
  413254:	add    BYTE PTR [esi-0x33],dl
  413257:	pusha  
  413258:	inc    DWORD PTR [eax]
  41325a:	call   ebp
  41325c:	jmp    FWORD PTR [edx-0x30]
  41325f:	cmp    al,0xff
  413261:	inc    DWORD PTR [eax]
  413263:	scas   eax,DWORD PTR es:[edi]
  413264:	mov    edx,esp
  413266:	hlt    
  413267:	cs (bad) 
  413269:	(bad)  
  41326a:	call   DWORD PTR [edi-0x34]
  41326d:	sar    DWORD PTR [ecx],0x8d
  413270:	add    bh,bh
  413272:	(bad)  
  413273:	mov    esi,0x1256d000
  413278:	inc    DWORD PTR [eax]
  41327a:	jmp    FWORD PTR [eax-0x7d]
  41327d:	pop    esp
  41327e:	jnp    0x4132db
  413280:	inc    DWORD PTR [ebx-0x5005e01]
  413286:	mov    DWORD PTR fs:[ebx-0x16007d],eax
  41328d:	(bad)  
  41328e:	cmp    ch,BYTE PTR [esi+0x0]
  413291:	add    bh,bh
  413293:	stc    
  413294:	jmp    DWORD PTR [edx]
  413296:	mov    edx,0xcc008355
  41329b:	cmp    al,BYTE PTR [eax]
  41329d:	pop    ss
  41329e:	jns    0x4132fa
  4132a0:	inc    DWORD PTR [eax]
  4132a2:	cmp    DWORD PTR [ebp-0x7d],0xffffff94
  4132a6:	outs   dx,BYTE PTR ds:[esi]
  4132a7:	std    
  4132a8:	inc    DWORD PTR [eax]
  4132aa:	and    DWORD PTR [eax+eax*1+0x3ec331],0x0
  4132b2:	(bad)  
  4132b3:	fiadd  WORD PTR [eax]
  4132b5:	cmp    eax,0xff93a6
  4132ba:	add    dh,ah
  4132bc:	push   DWORD PTR [esi-0x7]
  4132bf:	cs add bh,bh
  4132c2:	dec    ecx
  4132c4:	add    DWORD PTR [ebp-0xff3411],0xffffffff
  4132cb:	adc    BYTE PTR [ebx-0x7cb9a239],al
  4132d1:	add    ah,cl
  4132d3:	add    al,0x83
  4132d5:	cmp    al,0xe2
  4132d7:	xor    bh,bh
  4132d9:	(bad)  
  4132da:	call   FWORD PTR [ecx]
  4132dc:	(bad)  
  4132dd:	jnp    0x413341
  4132df:	ins    BYTE PTR es:[edi],dx
  4132e0:	add    BYTE PTR [eax],al
  4132e2:	add    BYTE PTR [ebx-0x1],dh
  4132e5:	adc    eax,0xffffb414
  4132ea:	jmp    DWORD PTR [ecx+0x0]
  4132ed:	paddusb mm6,QWORD PTR [edi+edi*8+0x3fff83]
  4132f5:	in     eax,dx
  4132f6:	adc    DWORD PTR [ebp-0x1],eax
  4132f9:	(bad)  
  4132fa:	(bad)  
  4132fb:	sti    
  4132fc:	(bad)  
  4132fd:	jmp    0x41cf81
  413302:	jmp    DWORD PTR [ebx+eax*4+0x3bd67]
  413309:	or     esp,0xffffffdc
  41330c:	add    BYTE PTR ds:0xff83359a,al
  413312:	add    BYTE PTR [edi+edi*8],dh
  413315:	outs   dx,BYTE PTR ds:[esi]
  413316:	lea    edi,[eax+eax*1-0x2cff01]
  41331d:	jo     0x413342
  41331f:	(bad)  
  413320:	inc    DWORD PTR [eax]
  413322:	jmp    FWORD PTR [eax-0x1]
  413325:	adc    eax,DWORD PTR [ecx+ebx*1]
  413328:	dec    esp
  41332a:	add    BYTE PTR [ebx-0x1],ah
  41332d:	test   DWORD PTR [esi],esi
  41332f:	sbb    eax,DWORD PTR [eax]
  413331:	(bad)  
  413332:	push   DWORD PTR [ebp+0x69374683]
  413338:	add    bh,bh
  41333a:	(bad)  
  41333b:	mov    edx,0x36418b00
  413340:	inc    DWORD PTR [eax]
  413342:	add    BYTE PTR [ebp-0x1],dl
  413345:	mov    ch,0xfd
  413347:	mov    WORD PTR [eax],es
  413349:	int3   
  41334a:	jmp    FWORD PTR [edi-0x1]
  41334d:	fidiv  DWORD PTR [eax]
  41334f:	pop    es
  413350:	add    DWORD PTR [eax],0x0
  413353:	cmp    eax,0x6edfc0ff
  413358:	(bad)  
  413359:	(bad)  
  41335a:	call   DWORD PTR [ecx+ecx*4]
  41335d:	cmp    al,0x70
  41335f:	xor    eax,DWORD PTR [eax]
  413361:	add    bh,bh
  413363:	xor    BYTE PTR [eax],al
  413365:	gs hlt 
  413367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413368:	inc    DWORD PTR [eax]
  41336a:	add    ah,bh
  41336c:	inc    DWORD PTR [edi]
  41336e:	and    DWORD PTR [eax+eax*1],0x7183ff
  413375:	lods   al,BYTE PTR ds:[esi]
  413376:	jmp    DWORD PTR [esi-0x7d]
  413379:	(bad)  
  41337a:	dec    DWORD PTR [esi-0x1]
  41337d:	mov    esp,0x83ffc215
  413382:	inc    DWORD PTR [ebx]
  413384:	add    ah,cl
  413386:	jae    0x4133b2
  413388:	add    bh,bh
  41338a:	add    BYTE PTR [ecx-0x5d6ebc01],bl
  413390:	int3   
  413391:	add    BYTE PTR [eax],al
  413393:	cmp    bh,bh
  413395:	push   edi
  413396:	lea    ecx,[eax-0x1]
  413399:	(bad)  
  41339a:	(bad)  
  41339b:	mov    ecx,0xe30a48ff
  4133a0:	mov    edi,edi
  4133a2:	add    BYTE PTR [edx+0x0],dl
  4133a5:	push   esp
  4133a6:	mov    eax,ds:0xccffff47
  4133ab:	add    BYTE PTR ds:[edi],ah
  4133ae:	or     al,0x15
  4133b0:	mov    DWORD PTR [eax],eax
  4133b2:	cmp    DWORD PTR [ebx+0x12410ff],0x0
  4133b9:	add    BYTE PTR [eax],al
  4133bb:	mov    BYTE PTR [ebx+0xcc1396],al
  4133c1:	dec    esp
  4133c3:	aaa    
  4133c4:	add    BYTE PTR [ebp+0xffc1d2],ch
  4133ca:	inc    DWORD PTR [ebp+0x2d5da1ff]
  4133d0:	mov    DWORD PTR [eax],eax
  4133d2:	mov    edi,ebx
  4133d4:	int3   
  4133d5:	test   al,0x26
  4133d7:	sar    bh,cl
  4133d9:	add    bh,bh
  4133db:	sbb    edi,edi
  4133dd:	ret    0xd1f9
  4133e0:	mov    edi,edi
  4133e2:	jmp    FWORD PTR [ebx+0x387f18cc]
  4133e8:	mov    DWORD PTR [ecx+0x17ff2b83],ecx
  4133ee:	sbb    DWORD PTR [eax+eax*1-0x1],edi
  4133f2:	dec    DWORD PTR [ebx-0x34]
  4133f5:	mov    eax,0xff0036da
  4133fa:	jmp    edi
  4133fc:	jmp    FWORD PTR ds:0xffccb101
  413402:	push   DWORD PTR [ebx+eax*4]
  413405:	pop    es
  413406:	cdq    
  413407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413408:	int3   
  413409:	add    BYTE PTR [eax],al
  41340b:	xchg   ecx,eax
  41340c:	call   ebp
  41340e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41340f:	or     al,0x89
  413411:	add    BYTE PTR [eax],al
  413413:	and    edi,edi
  413415:	and    dh,al
  413417:	out    dx,eax
  413418:	cmp    edi,0xffffff83
  41341b:	dec    ecx
  41341c:	jmp    FWORD PTR [ebp+0x37]
  41341f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413420:	(bad)  
  413421:	dec    DWORD PTR [ecx+0x2d020061]
  413427:	inc    ecx
  413428:	inc    DWORD PTR [eax]
  41342a:	jmp    esp
  41342c:	sbb    DWORD PTR [edi+0x74],0xffffffe0
  413430:	(bad)  
  413431:	(bad)  
  413432:	(bad)  
  413433:	js     0x413435
  413435:	aas    
  413436:	aad    0x24
  413438:	(bad)  
  413439:	dec    esp
  41343b:	sbb    eax,0xddab61ff
  413440:	int3   
  413441:	add    bh,bh
  413443:	jl     0x413444
  413445:	retf   
  413446:	scas   eax,DWORD PTR es:[edi]
  413447:	test   al,0x0
  413449:	add    bh,bh
  41344b:	and    bh,bh
  41344d:	not    DWORD PTR [esi-0xf7]
  413453:	je     0x413455
  413455:	fnstcw WORD PTR [ebp+0x9]
  413458:	(bad)  
  413459:	(bad)  
  41345a:	(bad)  
  41345b:	jg     0x41345d
  41345d:	outs   dx,BYTE PTR ds:[esi]
  41345e:	inc    esi
  41345f:	out    0x83,al
  413461:	add    bh,bh
  413463:	fiadd  DWORD PTR [ebx-0x764292fc]
  413469:	inc    DWORD PTR [eax]
  41346b:	and    DWORD PTR [eax],eax
  41346d:	cmp    DWORD PTR [esi+edi*1-0x34],ebx
  413471:	(bad)  
  413472:	jmp    FWORD PTR [edx+0x27cbcdff]
  413478:	(bad)  
  413479:	inc    DWORD PTR [eax]
  41347b:	ror    DWORD PTR [ecx+0x57b198],cl
  413481:	inc    DWORD PTR [ebx+0x71c4ff16]
  413487:	mov    BYTE PTR [eax],al
  413489:	dec    DWORD PTR [ecx+0x5d5c0077]
  41348f:	mov    eax,ds:0x27ffffcc
  413494:	add    BYTE PTR [ecx-0x66],dh
  413497:	sbb    al,0xff
  413499:	(bad)  
  41349a:	dec    esp
  41349c:	jmp    FWORD PTR [edi]
  41349e:	bound  ebx,QWORD PTR [esi-0x3000100]
  4134a4:	add    BYTE PTR [edi-0x76d710],cl
  4134aa:	(bad)  
  4134ab:	cmp    al,0x89
  4134ad:	push   ecx
  4134ae:	daa    
  4134af:	aas    
  4134b0:	add    bh,bh
  4134b2:	int3   
  4134b3:	stos   DWORD PTR es:[edi],eax
  4134b4:	mov    DWORD PTR [eax+0xff7bc7],edx
  4134ba:	add    BYTE PTR [ebx+0x0],dl
  4134bd:	pop    eax
  4134be:	(bad)  
  4134c0:	cmp    edi,0xffffffff
  4134c3:	mov    eax,0xd572feff
  4134c8:	inc    DWORD PTR [eax]
  4134ca:	call   FWORD PTR [eax]
  4134cc:	mov    DWORD PTR [ebx],ecx
  4134ce:	pop    esp
  4134cf:	xchg   edx,eax
  4134d0:	cmp    edi,0xffffff89
  4134d3:	test   BYTE PTR [eax],al
  4134d5:	int    0xab
  4134d7:	loop   0x4134d8
  4134d9:	add    BYTE PTR [eax],al
  4134db:	idiv   edi
  4134dd:	push   eax
  4134de:	pop    ebp
  4134df:	xchg   edx,eax
  4134e0:	add    bh,bh
  4134e2:	adc    DWORD PTR [edi+edi*8],0xffffffe7
  4134e6:	inc    edx
  4134e7:	fdiv   st(7),st
  4134e9:	dec    esp
  4134eb:	stos   BYTE PTR es:[edi],al
  4134ec:	call   DWORD PTR [ecx+0xc495]
  4134f2:	xor    DWORD PTR [esi-0x38f2197d],0xffffffff
  4134f9:	add    DWORD PTR [eax],0x18
  4134fc:	mov    esp,esp
  4134fe:	and    DWORD PTR [edi+edi*8],esi
  413501:	inc    DWORD PTR [ebx+0x256bff4c]
  413507:	test   DWORD PTR [eax],eax
  413509:	inc    DWORD PTR [eax]
  41350b:	lods   eax,DWORD PTR ds:[esi]
  41350c:	add    BYTE PTR [ecx+0x48],dl
  41350f:	out    0x0,eax
  413511:	inc    DWORD PTR [eax]
  413513:	sar    edi,1
  413515:	or     esp,ebx
  413517:	jo     0x413518
  413519:	add    DWORD PTR [ebx+0x50e30094],0xffffffc6
  413520:	(bad)  
  413521:	(bad)  
  413522:	(bad)  
  413523:	mov    esp,0x7ad49583
  413528:	inc    DWORD PTR [ebx+0x3aff4e89]
  41352e:	pmaxsw mm0,QWORD PTR [eax]
  413531:	inc    DWORD PTR [ebx+0x1ae4006a]
  413537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413538:	int3   
  413539:	dec    esp
  41353b:	mov    ds:0xa3400600,eax
  413540:	(bad)  
  413541:	(bad)  
  413542:	inc    DWORD PTR [eax-0x5831a901]
  413548:	add    bh,bh
  41354a:	(bad)  
  41354b:	jmp    0x41354c
  41354d:	retf   0xb85
  413550:	(bad)  
  413551:	inc    DWORD PTR [eax]
  413553:	mov    dh,0x89
  413555:	sti    
  413556:	imul   esi,DWORD PTR [ebx],0xffffffcc
  413559:	(bad)  
  41355a:	jmp    FWORD PTR [edi-0x6c39ab01]
  413560:	add    BYTE PTR [ecx+0x61837f83],cl
  413566:	pop    ebp
  413567:	xchg   ebx,eax
  413568:	add    bh,bh
  41356a:	add    BYTE PTR [edi+edi*8],ah
  41356d:	inc    ecx
  41356e:	and    edx,DWORD PTR [ecx]
  413570:	mov    DWORD PTR [eax],eax
  413572:	add    BYTE PTR [ecx+ecx*4],bh
  413575:	mov    dl,0x7f
  413577:	and    bh,bh
  413579:	add    BYTE PTR [eax],al
  41357b:	xchg   ebp,eax
  41357c:	add    DWORD PTR [edi+ebx*4-0x7d],0xffffffff
  413581:	int3   
  413582:	call   FWORD PTR ds:0x294ff5ff
  413588:	inc    DWORD PTR [ebx-0x50ffba00]
  41358e:	push   ss
  41358f:	(bad)  
  413590:	dec    DWORD PTR [ecx+0x47ff53ff]
  413596:	es dec ebx
  413598:	(bad)  
  413599:	(bad)  
  41359a:	dec    DWORD PTR [ecx+ecx*4]
  41359d:	jae    0x413600
  41359f:	out    0xff,eax
  4135a1:	(bad)  
  4135a2:	dec    DWORD PTR [edx]
  4135a4:	jmp    DWORD PTR [edi+0x5c]
  4135a7:	add    al,BYTE PTR [ebx-0xca007d]
  4135ad:	paddusw mm6,QWORD PTR [ecx]
  4135b0:	(bad)  
  4135b1:	dec    esp
  4135b3:	in     al,0x83
  4135b5:	call   0x1410b42
  4135ba:	jmp    FWORD PTR [esi]
  4135bc:	(bad)  
  4135bd:	fsubrp st(5),st
  4135bf:	add    bh,bh
  4135c1:	mov    DWORD PTR [ecx-0x2a1a0024],ecx
  4135c7:	push   esp
  4135c8:	inc    DWORD PTR [eax]
  4135ca:	int3   
  4135cb:	outs   dx,BYTE PTR ds:[esi]
  4135cc:	int3   
  4135cd:	leave  
  4135ce:	stos   DWORD PTR es:[edi],eax
  4135cf:	int    0x89
  4135d1:	(bad)  
  4135d2:	push   DWORD PTR [ecx]
  4135d4:	jmp    FWORD PTR [ebx]
  4135d6:	call   0xff5c:0xffb8
  4135dd:	popf   
  4135de:	cmc    
  4135df:	fiadd  WORD PTR [eax]
  4135e1:	add    bh,bh
  4135e3:	push   ds
  4135e4:	(bad)  
  4135e5:	mov    ebp,0xff240c
  4135ea:	add    BYTE PTR [ecx-0x1],bh
  4135ed:	dec    ecx
  4135ee:	lods   eax,DWORD PTR ds:[esi]
  4135ef:	mov    di,di
  4135f2:	dec    eax
  4135f4:	jmp    DWORD PTR [eax+0x2b]
  4135f7:	cmp    edi,0x0
  4135fa:	inc    DWORD PTR [ecx]
  4135fc:	sub    DWORD PTR [edi+0x6b],0xffffff91
  413600:	mov    edi,edi
  413602:	add    dh,ah
  413604:	mov    DWORD PTR [ebx],eax
  413606:	add    ah,ch
  413608:	add    bh,bh
  41360a:	add    BYTE PTR [ecx-0x3b2d257d],dh
  413610:	(bad)  
  413611:	inc    DWORD PTR [ebx-0x169a007f]
  413617:	mov    DWORD PTR [ebx-0x7cdb7601],0xff2eba52
  413621:	inc    DWORD PTR [eax]
  413623:	inc    edx
  413624:	jmp    DWORD PTR [eax]
  413626:	clc    
  413627:	outs   dx,BYTE PTR ds:[esi]
  413628:	add    BYTE PTR [ecx-0x6b002f77],cl
  41362e:	mov    BYTE PTR [edx+0x2affff00],bh
  413634:	mov    DWORD PTR [edx-0x6f],ebp
  413637:	iret   
  413638:	add    DWORD PTR [eax],0xffffffff
  41363b:	aas    
  41363c:	dec    DWORD PTR ds:0xffff373f
  413642:	inc    DWORD PTR ds:0xca50d889
  413648:	add    BYTE PTR [ebx-0x4b767e01],al
  41364e:	test   cl,bh
  413650:	inc    DWORD PTR [eax]
  413652:	jmp    DWORD PTR [eax]
  413654:	add    al,cl
  413656:	ins    BYTE PTR es:[edi],dx
  413657:	mov    ds:0x860000ff,al
  41365c:	add    dl,al
  41365e:	cli    
  41365f:	push   ss
  413660:	(bad)  
  413661:	inc    DWORD PTR [eax]
  413663:	pop    edx
  413664:	(bad)  
  413665:	jns    0x4136c5
  413667:	(bad)  
  413669:	(bad)  
  41366a:	jmp    FWORD PTR [esi+0x0]
  41366d:	mov    bh,0xc0
  41366f:	xchg   bh,bh
  413671:	mov    esp,ecx
  413673:	cld    
  413674:	add    DWORD PTR [edi-0x7cff2a49],0xffffff89
  41367b:	sub    DWORD PTR [eax],eax
  41367d:	int    0xaa
  41367f:	jno    0x413604
  413681:	add    bh,bh
  413683:	jmp    0x413684
  413685:	inc    edx
  413686:	scas   al,BYTE PTR es:[edi]
  413687:	ins    BYTE PTR es:[edi],dx
  413688:	int3   
  413689:	mov    DWORD PTR [eax],eax
  41368b:	addr16 add cl,ch
  41368e:	xchg   edx,eax
  41368f:	push   es
  413690:	dec    esp
  413692:	call   FWORD PTR [esi+0x6ba86d00]
  413698:	dec    esp
  41369a:	push   DWORD PTR [eax]
  41369c:	add    BYTE PTR ds:0xcc0e7e,cl
  4136a2:	jmp    DWORD PTR [eax]
  4136a4:	push   DWORD PTR [ecx+0xd]
  4136a7:	and    DWORD PTR [eax],eax
  4136a9:	add    bh,bh
  4136ab:	sub    eax,DWORD PTR [ebx+0x5d69e]
  4136b1:	(bad)  
  4136b2:	call   FWORD PTR [ebx+0x6adfc1ff]
  4136b8:	add    BYTE PTR [ebx-0x6c005d01],al
  4136be:	push   cs
  4136bf:	or     DWORD PTR [ecx-0x7ccfff01],0xfffffff6
  4136c6:	fisttp DWORD PTR [edi+0x0]
  4136c9:	int3   
  4136ca:	jmp    DWORD PTR [edx]
  4136cc:	(bad)  
  4136cd:	cmp    DWORD PTR ds:0xff00fffb,ebx
  4136d3:	add    eax,0xc38bdbff
  4136d8:	inc    DWORD PTR [eax]
  4136da:	xor    DWORD PTR [edi+0x26c952ff],0xffffff89
  4136e1:	int3   
  4136e2:	(bad)  
  4136e3:	mov    ebp,0xf587decc
  4136e8:	inc    DWORD PTR [ebx+0x6500f000]
  4136ee:	sbb    edx,0xffffffcc
  4136f1:	add    DWORD PTR [eax],0x0
  4136f4:	(bad)  
  4136f5:	sti    
  4136f6:	xchg   esp,eax
  4136f7:	lods   al,BYTE PTR ds:[esi]
  4136f8:	(bad)  
  4136f9:	inc    DWORD PTR [eax]
  4136fb:	es push ebp
  4136fe:	retf   
  4136ff:	mov    ecx,0x81008300
  413704:	int3   
  413705:	sti    
  413706:	scas   al,BYTE PTR es:[edi]
  413707:	adc    eax,0xd2ff8989
  41370c:	add    BYTE PTR [edx],dl
  41370e:	fnstsw WORD PTR [edx-0x34007c01]
  413714:	call   edi
  413716:	xchg   ebx,eax
  413717:	aad    0xff
  413719:	(bad)  
  41371a:	call   FWORD PTR [ebp-0x1]
  41371d:	jo     0x4136d9
  41371f:	or     eax,0x1e00ccff
  413724:	jmp    ebp
  413726:	dec    esp
  413727:	cli    
  413728:	(bad)  
  413729:	(bad)  
  41372a:	call   DWORD PTR [ecx]
  41372c:	add    BYTE PTR [edi],bl
  41372e:	in     al,0xee
  413730:	add    ah,cl
  413732:	int3   
  413733:	cmp    eax,0x82033fcc
  413738:	add    BYTE PTR [eax],al
  41373a:	mov    DWORD PTR ds:0xa43d80ff,esp
  413740:	inc    DWORD PTR [ebx+0x7bff1700]
  413746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413747:	arpl   WORD PTR [eax],ax
  413749:	add    DWORD PTR [eax],0x60
  41374c:	push   DWORD PTR [ecx+0xffa83e]
  413752:	mov    eax,edi
  413754:	add    BYTE PTR [eax],ch
  413756:	mov    cs,WORD PTR [edx+0x0]
  413759:	int3   
  41375a:	jmp    DWORD PTR [eax+0x1562000]
  413760:	add    DWORD PTR [eax],0xffffff83
  413763:	stc    
  413764:	inc    edx
  413766:	ror    BYTE PTR [eax+eax*1-0xeaff01],1
  41376d:	xor    BYTE PTR [ebx+0xffff1c],ah
  413773:	push   0x0
  413775:	jb     0x41379c
  413777:	xchg   ebp,eax
  413778:	add    BYTE PTR [eax],al
  41377a:	add    BYTE PTR ds:0x6f337789,dl
  413780:	(bad)  
  413781:	(bad)  
  413782:	inc    DWORD PTR [eax-0x39c45400]
  413788:	inc    DWORD PTR [ebx+0x37ff6d00]
  41378e:	mov    BYTE PTR [edx],cl
  413790:	add    BYTE PTR [eax],al
  413792:	inc    ebx
  413794:	add    BYTE PTR [edx],al
  413796:	ins    BYTE PTR es:[edi],dx
  413797:	pop    ss
  413798:	add    DWORD PTR [ebx+0x740047ff],0xffffffac
  41379f:	repz inc DWORD PTR [ebx-0x2bff8a00]
  4137a6:	pusha  
  4137a7:	mov    DWORD PTR [eax],0xff90ff83
  4137ad:	gs rcr dl,1
  4137b0:	(bad)  
  4137b1:	inc    DWORD PTR [ebx+0x5471cc3c]
  4137b7:	cmc    
  4137b8:	cmp    edi,0x0
  4137bb:	test   DWORD PTR [ebx-0x4b920e],0xffd88900
  4137c5:	jno    0x41382f
  4137c7:	jns    0x4137c9
  4137c9:	dec    esp
  4137cb:	imul   eax,DWORD PTR [eax],0x38
  4137ce:	lea    ecx,[esi]
  4137d0:	inc    DWORD PTR [eax]
  4137d2:	or     ebx,0xffffffff
  4137d5:	daa    
  4137d6:	adc    ch,BYTE PTR [edi-0x77]
  4137d9:	mov    edi,edi
  4137db:	push   ds
  4137dc:	mov    DWORD PTR [edi+0x6e],ecx
  4137df:	iret   
  4137e0:	mov    edi,edi
  4137e2:	add    BYTE PTR [ecx+0x0],cl
  4137e5:	repz aaa 
  4137e7:	jns    0x4137e8
  4137e9:	add    BYTE PTR [eax],al
  4137eb:	daa    
  4137ec:	(bad)  
  4137ed:	jmp    0x413783
  4137ef:	and    al,0xff
  4137f1:	dec    esp
  4137f3:	icebp  
  4137f4:	call   DWORD PTR [edi+0xff70ae]
  4137fa:	int3   
  4137fb:	add    eax,0xe55cccff
  413800:	mov    edi,edi
  413802:	add    BYTE PTR [edx+0x0],ch
  413805:	cld    
  413806:	xor    dl,BYTE PTR [eax+0x12ffffff]
  41380c:	jmp    FWORD PTR [edx-0x7c76e15c]
  413812:	(bad)  
  413813:	js     0x4137e1
  413815:	ins    BYTE PTR es:[edi],dx
  413816:	call   0x41377c
  41381b:	fdivp  st(7),st
  41381d:	and    al,0x59
  41381f:	cmp    bh,0xff
  413822:	add    BYTE PTR [ebx],ah
  413824:	call   FWORD PTR [edx]
  413826:	daa    
  413827:	sub    al,0x0
  413829:	(bad)  
  41382a:	(bad)  
  41382b:	call   0xd64807fc
  413830:	int3   
  413831:	int3   
  413832:	inc    DWORD PTR [ebx+0x543a18ff]
  413838:	add    bh,bh
  41383a:	push   DWORD PTR [edi]
  41383c:	add    BYTE PTR [ebx+0x838559],bh
  413842:	call   DWORD PTR [edi+edi*8]
  413845:	lods   eax,DWORD PTR ds:[esi]
  413846:	sub    al,0xe3
  413848:	mov    edi,edi
  41384a:	dec    DWORD PTR [eax+eax*1-0x342cff]
  413851:	add    bh,bh
  413853:	mov    eax,ds:0x8c9392ff
  413858:	mov    DWORD PTR [eax],eax
  41385a:	add    BYTE PTR [ebx],ah
  41385c:	(bad)  
  41385d:	(bad)  
  41385e:	sbb    BYTE PTR [ebx+eax*4],ch
  413861:	add    BYTE PTR [eax],al
  413863:	inc    edx
  413864:	inc    ebx
  413866:	pushf  
  413867:	xchg   DWORD PTR [eax],eax
  413869:	mov    edi,edi
  41386b:	mov    bl,0xff
  41386d:	(bad)  
  41386e:	adc    DWORD PTR [ebp-0x4100ff01],esp
  413874:	(bad)  
  413875:	jle    0x4138ed
  413877:	or     DWORD PTR [eax],eax
  413879:	mov    DWORD PTR [ebx-0x115dffc4],eax
  41387f:	sahf   
  413880:	(bad)  
  413881:	dec    esp
  413883:	loope  0x413885
  413885:	mov    ah,0x26
  413887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413888:	int3   
  413889:	add    BYTE PTR [ebx-0x63767cca],al
  41388f:	test   bh,bh
  413891:	add    BYTE PTR [eax],al
  413893:	sub    DWORD PTR gs:[esi+0x32c5],0xffffffff
  41389b:	ss (bad) 
  41389d:	call   0x40bf7d
  4138a2:	call   DWORD PTR [eax+eax*1]
  4138a5:	scas   al,BYTE PTR es:[edi]
  4138a6:	dec    esp
  4138a7:	in     al,0xcc
  4138a9:	add    BYTE PTR [ebx-0x7eaeffbd],al
  4138af:	dec    esp
  4138b0:	dec    esp
  4138b2:	add    BYTE PTR [ecx-0x2531b501],cl
  4138b8:	inc    DWORD PTR [eax]
  4138ba:	adc    DWORD PTR [edi],0xffffff89
  4138bd:	mov    ss,WORD PTR [esi-0x26]
  4138c0:	add    DWORD PTR [ebx+0xe8302ff],0x5d
  4138c7:	jae    0x41384c
  4138c9:	(bad)  
  4138ca:	jmp    edi
  4138cc:	add    ch,bh
  4138ce:	mov    ?,WORD PTR [eax]
  4138d0:	or     esp,0x0
  4138d3:	sbb    bh,bh
  4138d5:	mov    eax,0xcccc7f5d
  4138da:	dec    DWORD PTR [ebx-0x1]
  4138dd:	inc    esi
  4138de:	test   eax,0xff00899e
  4138e3:	dec    edx
  4138e4:	int3   
  4138e5:	and    al,0xc1
  4138e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138e8:	add    ah,cl
  4138ea:	push   DWORD PTR [ecx+0xb5dbf00]
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	(bad)  
  4138f3:	mov    esi,0x929cfacc
  4138f8:	(bad)  
  4138f9:	dec    esp
  4138fb:	and    al,BYTE PTR [eax]
  4138fd:	mov    al,ds:0xff00549d
  413902:	dec    DWORD PTR [ecx-0x77]
  413905:	das    
  413906:	ds cmp eax,0xbe0083ff
  41390c:	add    BYTE PTR [edi+ebp*8+0x3a],bh
  413910:	add    DWORD PTR [ebx-0x67000a77],0xffffffa7
  413917:	int    0x89
  413919:	mov    edi,edi
  41391b:	pop    ecx
  41391c:	mov    DWORD PTR [edx-0x42],esp
  41391f:	ja     0x4138aa
  413921:	(bad)  
  413922:	(bad)  
  413923:	jle    0x4138a8
  413925:	cdq    
  413926:	call   0xcc75:0xffcc0065
  41392d:	nop
  41392e:	fldcw  WORD PTR [esi-0x77]
  413931:	add    bh,bh
  413933:	dec    ebp
  413934:	add    BYTE PTR [ebx+0xffb5c5],cl
  41393a:	push   DWORD PTR [edi+edi*8+0x5a2d8b]
  413941:	inc    DWORD PTR [eax]
  413943:	outs   dx,BYTE PTR ds:[esi]
  413944:	sbb    eax,0x56
  413947:	test   eax,0xdc0000ff
  41394c:	mov    DWORD PTR [edi-0x30],eax
  41394f:	icebp  
  413950:	inc    DWORD PTR [eax]
  413952:	dec    eax
  413954:	add    BYTE PTR [ecx+0x24],ch
  413957:	fdiv   st(7),st
  413959:	(bad)  
  41395a:	call   DWORD PTR [ebp-0x4a960901]
  413960:	mov    edi,edi
  413962:	int3   
  413963:	dec    ecx
  413964:	(bad)  
  413965:	in     al,dx
  413966:	imul   ah
  413968:	add    DWORD PTR [eax],0xffffffff
  41396b:	cli    
  41396c:	add    dl,bh
  41396e:	stos   BYTE PTR es:[edi],al
  41396f:	mov    bh,0x0
  413971:	add    bh,bh
  413973:	push   edi
  413974:	add    BYTE PTR [ecx-0x331ff9],cl
  41397a:	mov    DWORD PTR [edx],edx
  41397c:	add    BYTE PTR [edx+0xb],bh
  41397f:	sbb    BYTE PTR [eax],al
  413981:	add    BYTE PTR [eax],al
  413983:	(bad)  
  413984:	(bad)  
  413985:	clc    
  413986:	ss ds dec esp
  41398a:	cmp    eax,0x0
  41398d:	dec    ebp
  41398e:	adc    eax,0xffff60
  413993:	jb     0x413994
  413995:	ret    0x2877
  413998:	mov    edi,edi
  41399a:	jmp    DWORD PTR [esi+0x0]
  41399d:	sar    DWORD PTR [esi-0x33000096],1
  4139a3:	inc    ebp
  4139a4:	add    dl,ah
  4139a6:	lds    esp,FWORD PTR ds:0x9900ffff
  4139ac:	add    BYTE PTR [ebp-0x29],dh
  4139af:	icebp  
  4139b0:	add    BYTE PTR [ebx+0x1500d200],al
  4139b6:	xchg   ebp,eax
  4139b7:	mov    bh,bh
  4139b9:	(bad)  
  4139ba:	push   DWORD PTR ds:0xd2f37b00
  4139c0:	add    DWORD PTR [eax],0x0
  4139c3:	pop    esp
  4139c4:	add    bh,ah
  4139c6:	xor    eax,0xff00ff0b
  4139cb:	idiv   bh
  4139cd:	out    dx,eax
  4139ce:	test   al,0x2f
  4139d0:	add    BYTE PTR [ebx-0x4007c00],al
  4139d6:	popa   
  4139d7:	pop    edi
  4139d8:	dec    DWORD PTR [ecx-0x38ffeb00]
  4139de:	mov    esi,0x8383005a
  4139e3:	push   ebp
  4139e4:	inc    esi
  4139e6:	in     eax,dx
  4139e7:	pop    ss
  4139e8:	add    BYTE PTR [eax],al
  4139ea:	dec    DWORD PTR [edi+edi*8]
  4139ed:	ja     0x413a2d
  4139ef:	dec    ebx
  4139f0:	int3   
  4139f1:	add    DWORD PTR [eax],0xffffffd1
  4139f4:	add    dh,bl
  4139f6:	ss das 
  4139f8:	inc    DWORD PTR [ebx-0x1bff6601]
  4139fe:	mov    al,0x20
  413a00:	(bad)  
  413a01:	inc    DWORD PTR [ebx-0x7a5affe0]
  413a07:	mov    cl,0xff
  413a09:	inc    DWORD PTR [eax]
  413a0b:	loop   0x413a0d
  413a0d:	(bad)  
  413a0e:	fmul   QWORD PTR ds:0xa400ffff
  413a14:	add    BYTE PTR [ecx],dh
  413a16:	int    0x57
  413a18:	inc    DWORD PTR [eax]
  413a1a:	mov    DWORD PTR [ebp-0x1],eax
  413a1d:	jp     0x413a2e
  413a1f:	call   0x78ff:0x74ffffff
  413a26:	mov    ebp,0xff89ff07
  413a2b:	dec    edi
  413a2c:	int3   
  413a2d:	stc    
  413a2e:	pop    edx
  413a2f:	sbb    al,0xff
  413a31:	add    ah,cl
  413a33:	xlat   BYTE PTR ds:[ebx]
  413a34:	add    BYTE PTR [edi+ebx*8-0x1e],bh
  413a38:	(bad)  
  413a39:	(bad)  
  413a3a:	jmp    DWORD PTR [eax-0x1]
  413a3d:	jnp    0x413a81
  413a3f:	inc    ecx
  413a40:	inc    DWORD PTR [eax]
  413a42:	int3   
  413a43:	aaa    
  413a44:	call   FWORD PTR [esi-0x5c]
  413a47:	sar    bh,cl
  413a49:	inc    DWORD PTR [eax]
  413a4b:	add    BYTE PTR [di+0x60c1],ch
  413a50:	inc    DWORD PTR [eax]
  413a52:	add    BYTE PTR [edx],ch
  413a54:	cmp    DWORD PTR [edx-0x3b],0xffffff85
  413a58:	inc    DWORD PTR [eax]
  413a5a:	add    BYTE PTR [ebx-0x33804834],ch
  413a60:	mov    DWORD PTR [eax],eax
  413a62:	call   FWORD PTR ds:0x4a454200
  413a68:	add    bh,bh
  413a6a:	add    dl,dl
  413a6c:	(bad)  
  413a6d:	(bad)  
  413a6e:	mov    ah,0x7c
  413a70:	int3   
  413a71:	add    bh,bh
  413a73:	add    DWORD PTR [eax],0xffffffcb
  413a76:	push   esp
  413a77:	lock add bh,bh
  413a7a:	push   edi
  413a7c:	int3   
  413a7d:	jmp    0x5cff:0xccff58bc
  413a84:	int3   
  413a85:	in     eax,dx
  413a86:	sbb    eax,0xff00c5
  413a8b:	loope  0x413a59
  413a8d:	dec    edi
  413a8e:	pop    edx
  413a8f:	adc    ecx,esp
  413a91:	inc    DWORD PTR [eax]
  413a93:	es add dl,bl
  413a96:	test   DWORD PTR [ebx-0x1],esp
  413a99:	or     DWORD PTR [ecx+0x3fb183f8],0x50
  413aa0:	dec    esp
  413aa2:	mov    DWORD PTR [ecx-0x1],eax
  413aa5:	es fs jecxz 0x413aa9
  413aa9:	int3   
  413aaa:	dec    DWORD PTR [eax+eax*1+0x3f]
  413aae:	cmp    BYTE PTR [edi+edi*8],cl
  413ab1:	add    bh,bh
  413ab3:	xchg   esi,eax
  413ab4:	add    al,dh
  413ab6:	add    esi,ecx
  413ab8:	add    DWORD PTR [ebx+0x2cccb500],0x79
  413abf:	mov    al,0xff
  413ac1:	add    DWORD PTR [eax],0x0
  413ac4:	push   DWORD PTR [edx-0x3e00]
  413aca:	call   FWORD PTR [edi-0x1]
  413acd:	rol    DWORD PTR [ebx+0xff001c],1
  413ad3:	(bad)  
  413ad5:	inc    esp
  413ad6:	dec    esp
  413ad7:	fcos   
  413ad9:	cmp    edi,0x53
  413adc:	(bad)  
  413add:	fsubr  QWORD PTR [edx+esi*4-0x7d]
  413ae1:	add    bh,bh
  413ae3:	pop    es
  413ae4:	add    dl,bl
  413ae6:	shl    BYTE PTR [edx-0x247d0000],cl
  413aec:	dec    DWORD PTR [ecx+0x72]
  413aef:	mov    dl,0xff
  413af1:	add    ah,cl
  413af3:	mov    esp,0x14c614cc
  413af8:	(bad)  
  413af9:	inc    DWORD PTR [eax]
  413afb:	sub    edi,edi
  413afd:	dec    edi
  413afe:	mov    dl,0x83
  413b00:	(bad)  
  413b01:	(bad)  
  413b02:	call   DWORD PTR [eax+eax*1+0x7e]
  413b06:	mov    ch,0xc
  413b08:	int3   
  413b09:	inc    DWORD PTR [eax]
  413b0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b0c:	add    BYTE PTR [eax+0xff52c2],dl
  413b12:	or     DWORD PTR [ecx+0x34b5a3ff],0xffffff83
  413b19:	add    BYTE PTR [eax],al
  413b1b:	ud0    esp,DWORD PTR [ebp-0x7c7ca357]
  413b22:	int3   
  413b23:	mov    al,ds:0x2bcb6bff
  413b28:	inc    DWORD PTR [eax]
  413b2a:	call   DWORD PTR [ebp-0x57afab01]
  413b30:	add    ah,cl
  413b32:	jmp    DWORD PTR [esi]
  413b34:	mov    DWORD PTR [edx],edi
  413b36:	cmc    
  413b37:	dec    ecx
  413b38:	(bad)  
  413b39:	(bad)  
  413b3a:	push   DWORD PTR [edx]
  413b3c:	add    BYTE PTR [ebx],dl
  413b3e:	push   es
  413b3f:	cmp    eax,0x7900ccff
  413b44:	add    BYTE PTR [ecx-0xff4c3d],cl
  413b4a:	call   DWORD PTR [eax-0x1]
  413b4d:	pop    esi
  413b4e:	gs dec eax
  413b50:	add    DWORD PTR [eax],0xffffffff
  413b53:	enter  0xf1ff,0xd1
  413b57:	into   
  413b58:	add    DWORD PTR [ebx+0x3b006989],0xffffffeb
  413b5f:	loopne 0x413b61
  413b61:	add    BYTE PTR [ecx+0x30ef8386],cl
  413b67:	xchg   bh,bh
  413b69:	add    bh,bh
  413b6b:	dec    eax
  413b6c:	inc    DWORD PTR [ebx-0x338fd3]
  413b72:	add    BYTE PTR [ebp-0x346f1201],ah
  413b78:	mov    edi,edi
  413b7a:	(bad)  
  413b7b:	jg     0x413b7c
  413b7d:	push   eax
  413b7e:	cmp    eax,0x89ccff12
  413b83:	je     0x413b85
  413b85:	leave  
  413b86:	inc    eax
  413b87:	pop    es
  413b88:	add    bh,bh
  413b8a:	add    BYTE PTR [edi],dh
  413b8c:	jmp    DWORD PTR [esi-0x7cd467]
  413b92:	or     DWORD PTR ds:0x852559ff,0x0
  413b99:	(bad)  
  413b9a:	inc    DWORD PTR ds:0x6ca67eff
  413ba0:	add    BYTE PTR [ecx+0x41ff9aff],cl
  413ba6:	mov    ebp,0xffffff2a
  413bab:	dec    eax
  413bac:	add    BYTE PTR [edi+ecx*2+0x6],ch
  413bb0:	add    DWORD PTR [eax],0xffffffff
  413bb3:	inc    edx
  413bb4:	(bad)  
  413bb5:	cmp    edi,ebp
  413bb7:	cmp    bh,0x89
  413bba:	xor    esp,0xffffffff
  413bbd:	ins    BYTE PTR es:[edi],dx
  413bbe:	int3   
  413bbf:	push   edi
  413bc0:	inc    DWORD PTR [eax]
  413bc2:	int3   
  413bc3:	fmul   st,st(4)
  413bc5:	(bad)  
  413bc6:	cmp    eax,0x89cc89d2
  413bcb:	imul   edi,edi,0xcc04f9
  413bd1:	mov    DWORD PTR [eax],eax
  413bd3:	pusha  
  413bd4:	dec    DWORD PTR [ebp+0x38]
  413bd7:	add    BYTE PTR [eax],al
  413bd9:	dec    esp
  413bdb:	pop    ebp
  413bdc:	add    BYTE PTR [edx+0x66],bl
  413bdf:	xchg   esp,ecx
  413be1:	add    bh,bh
  413be3:	or     al,BYTE PTR [ebx+0xe389d4]
  413be9:	(bad)  
  413bea:	jmp    ebx
  413bec:	add    BYTE PTR [edx+eiz*4-0x33000082],ah
  413bf3:	adc    DWORD PTR [eax],eax
  413bf5:	sub    eax,0x83a246
  413bfa:	mov    DWORD PTR [ecx],ecx
  413bfc:	(bad)  
  413bfd:	(bad)  
  413bfe:	cmp    BYTE PTR [edi+edi*8-0x1],bh
  413c02:	jmp    FWORD PTR [edi+0x0]
  413c05:	jge    0x413be3
  413c07:	int    0xff
  413c09:	(bad)  
  413c0a:	(bad)  
  413c0b:	std    
  413c0c:	sbb    DWORD PTR [edx+ecx*1-0x7cff3356],0x21
  413c14:	call   FWORD PTR [edi-0xff8e0f]
  413c1a:	(bad)  
  413c1b:	sti    
  413c1c:	add    BYTE PTR [edi+ebx*1-0x39],ah
  413c20:	or     DWORD PTR [ecx-0x8002c34],0xffffffe5
  413c27:	or     al,BYTE PTR [eax]
  413c29:	(bad)  
  413c2a:	push   DWORD PTR [edx+0x31ab8800]
  413c30:	mov    edi,edi
  413c32:	call   FWORD PTR [edi+0x59aa85cc]
  413c38:	inc    DWORD PTR [eax]
  413c3a:	add    BYTE PTR [edi-0x1],dh
  413c3d:	inc    esi
  413c3e:	pop    edi
  413c3f:	cs add bh,bh
  413c42:	inc    DWORD PTR [ebx]
  413c44:	int3   
  413c45:	xchg   DWORD PTR [esi],esp
  413c47:	aas    
  413c48:	(bad)  
  413c49:	inc    DWORD PTR [eax]
  413c4b:	cmp    edi,edi
  413c4d:	nop
  413c4e:	ins    BYTE PTR es:[edi],dx
  413c4f:	add    DWORD PTR [ecx-0x76c80001],ecx
  413c55:	jbe    0x413bea
  413c57:	xor    edi,edi
  413c59:	(bad)  
  413c5a:	call   esp
  413c5c:	push   esi
  413c5e:	xchg   ebx,eax
  413c5f:	push   0xe48983ff
  413c64:	add    BYTE PTR [ecx-0x55],cl
  413c67:	inc    ebx
  413c68:	add    bh,bh
  413c6a:	mov    DWORD PTR [esi+0x0],ebx
  413c6d:	loopne 0x413c67
  413c6f:	mov    eax,ds:0xfcc0000
  413c74:	add    BYTE PTR [eax],al
  413c76:	std    
  413c77:	daa    
  413c78:	add    DWORD PTR [eax],0xffffffff
  413c7b:	mov    al,0x0
  413c7d:	add    esi,DWORD PTR [edx-0x76f8]
  413c83:	(bad)  
  413c84:	int3   
  413c85:	out    dx,al
  413c86:	mov    al,0x9a
  413c88:	(bad)  
  413c89:	(bad)  
  413c8a:	call   DWORD PTR [ecx]
  413c8c:	dec    DWORD PTR [edx+0x2a]
  413c8f:	repz add BYTE PTR [eax],al
  413c92:	add    dl,al
  413c94:	add    BYTE PTR [ecx],dl
  413c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c97:	jp     0x413c98
  413c99:	dec    esp
  413c9b:	or     DWORD PTR es:0x8cc7,0xffffff83
  413ca3:	or     edi,edi
  413ca5:	mov    esp,esp
  413ca7:	adc    DWORD PTR [eax],eax
  413ca9:	inc    DWORD PTR [ebx+0x58c0006c]
  413caf:	aas    
  413cb0:	inc    DWORD PTR [eax]
  413cb2:	add    BYTE PTR [edx-0x77],ch
  413cb5:	push   ecx
  413cb6:	add    DWORD PTR [eax+0x2fffff83],esi
  413cbc:	(bad)  
  413cbd:	fdivr  DWORD PTR [ebx+eax*2+0x0]
  413cc1:	inc    DWORD PTR [eax]
  413cc3:	sbb    DWORD PTR [eax],eax
  413cc5:	adc    ebp,DWORD PTR [edx-0x1d]
  413cc8:	inc    DWORD PTR [eax]
  413cca:	add    BYTE PTR [ebx-0x1],bl
  413ccd:	jmp    0x18ff:0xffffef35
  413cd4:	add    BYTE PTR [esi],dl
  413cd6:	fimul  WORD PTR [esi]
  413cd8:	(bad)  
  413cd9:	inc    DWORD PTR [eax]
  413cdb:	retf   0x3700
  413cde:	mov    bh,0x2e
  413ce0:	add    BYTE PTR [ebx-0x3bff9501],al
  413ce6:	das    
  413ce7:	sub    edi,edi
  413ce9:	mov    edi,edi
  413ceb:	ins    DWORD PTR es:[edi],dx
  413cec:	mov    DWORD PTR [ecx],ecx
  413cee:	hlt    
  413cef:	pop    es
  413cf0:	dec    esp
  413cf2:	dec    edi
  413cf4:	mov    ebx,esi
  413cf6:	bound  ebp,QWORD PTR [ebp-0x1]
  413cf9:	add    bh,bh
  413cfb:	jmp    0x8989:0x9d4e4dff
  413d02:	call   DWORD PTR [edi-0x2a07ea00]
  413d08:	add    DWORD PTR [ebx-0x4c33b001],0xfffffff8
  413d0f:	dec    esi
  413d10:	inc    DWORD PTR [eax]
  413d12:	(bad)  
  413d13:	mov    ebp,0xcf889600
  413d18:	inc    DWORD PTR [ebx-0x10ff297d]
  413d1e:	jne    0x413d72
  413d20:	(bad)  
  413d21:	inc    DWORD PTR [eax]
  413d23:	repnz add BYTE PTR [ecx+0x8947d1],dl
  413d2a:	jmp    FWORD PTR [esi]
  413d2c:	add    BYTE PTR [ebx+edx*2-0x7c000095],ah
  413d33:	mov    edi,0x5979f889
  413d38:	(bad)  
  413d39:	(bad)  
  413d3a:	inc    DWORD PTR [edx+0x435c0fff]
  413d40:	add    bh,bh
  413d42:	int3   
  413d43:	int3   
  413d44:	int3   
  413d45:	xchg   ebx,eax
  413d46:	pushf  
  413d47:	add    eax,DWORD PTR [eax]
  413d49:	(bad)  
  413d4a:	inc    DWORD PTR [eax+eax*1-0x3e]
  413d4e:	ss into 
  413d50:	(bad)  
  413d51:	dec    DWORD PTR [ecx-0x11f10005]
  413d57:	out    0xff,eax
  413d59:	dec    DWORD PTR [ecx+0x2fc1cc43]
  413d5f:	pushf  
  413d60:	(bad)  
  413d61:	(bad)  
  413d62:	jmp    DWORD PTR [eax]
  413d64:	add    BYTE PTR [ebx+0x76],ah
  413d67:	push   0xf289ffff
  413d6c:	jmp    DWORD PTR [esi+0x7c]
  413d6f:	je     0x413d70
  413d71:	add    DWORD PTR [eax],0xffffffd0
  413d74:	dec    DWORD PTR [edi-0x33007dbb]
  413d7a:	push   esi
  413d7c:	jmp    FWORD PTR [edx+0x52]
  413d7f:	inc    esp
  413d80:	inc    DWORD PTR [eax]
  413d82:	add    BYTE PTR [esi-0x2bc47501],dh
  413d88:	mov    esp,ecx
  413d8a:	add    BYTE PTR [edi],al
  413d8c:	add    cl,al
  413d8e:	cdq    
  413d8f:	xchg   esp,eax
  413d90:	add    bh,bh
  413d92:	call   ecx
  413d94:	jmp    FWORD PTR [ebx]
  413d96:	adc    DWORD PTR [edi+edi*8-0x7d],0xd2ffe1ff
  413d9e:	mov    WORD PTR [eax],es
  413da0:	int3   
  413da1:	inc    DWORD PTR [eax]
  413da3:	test   BYTE PTR [eax],al
  413da5:	ret    0xea85
  413da8:	(bad)  
  413da9:	(bad)  
  413daa:	inc    edi
  413dac:	add    BYTE PTR [edi+edi*4],bh
  413daf:	aad    0xff
  413db1:	add    ah,cl
  413db3:	push   edx
  413db4:	call   DWORD PTR [edi]
  413db6:	and    eax,0xff8927
  413dbb:	cmp    eax,0x37cd7283
  413dc0:	inc    DWORD PTR [eax]
  413dc2:	cmp    DWORD PTR [eax+eax*1-0x3e],0x68
  413dc7:	cmp    al,0x83
  413dc9:	inc    DWORD PTR [ebx+0x4426cc15]
  413dcf:	dec    ecx
  413dd0:	inc    DWORD PTR [ebx+0x1cff9100]
  413dd6:	and    DWORD PTR [edx+0x1989ffff],edi
  413ddc:	dec    DWORD PTR [ebp-0xd60e]
  413de2:	call   FWORD PTR [ebx]
  413de4:	jmp    FWORD PTR [eax-0xff6cf5]
  413dea:	add    BYTE PTR [ecx+0xfec1c83],al
  413df0:	dec    DWORD PTR [ecx+0x31ffe100]
  413df6:	add    eax,0xffffff52
  413dfb:	sar    edi,cl
  413dfd:	mov    ebx,0xffcc44f2
  413e02:	call   DWORD PTR [ecx]
  413e04:	jmp    DWORD PTR [edx]
  413e06:	aas    
  413e07:	stos   BYTE PTR es:[edi],al
  413e08:	inc    DWORD PTR [eax]
  413e0a:	add    BYTE PTR ds:0xa2cb3f83,dh
  413e10:	cmp    edi,0xffffff83
  413e13:	aam    0xcc
  413e15:	cli    
  413e16:	and    DWORD PTR [ecx],ecx
  413e18:	add    BYTE PTR [eax],al
  413e1a:	(bad)  
  413e1b:	stc    
  413e1c:	inc    eax
  413e1e:	add    al,0xd6
  413e20:	inc    DWORD PTR [eax]
  413e22:	jmp    FWORD PTR [ecx+0x17030a00]
  413e28:	add    bh,bh
  413e2a:	add    al,bh
  413e2c:	dec    esp
  413e2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e2f:	(bad)  
  413e30:	inc    DWORD PTR [eax]
  413e32:	add    BYTE PTR [ecx+ecx*4],dl
  413e35:	js     0x413dba
  413e37:	pop    ebp
  413e38:	inc    DWORD PTR [eax]
  413e3a:	xor    ecx,0xffffff89
  413e3d:	jl     0x413e76
  413e3f:	pop    edx
  413e40:	add    bh,bh
  413e42:	call   DWORD PTR [ebp+0x25e623ff]
  413e48:	dec    esp
  413e4a:	dec    DWORD PTR [esi]
  413e4c:	(bad)  
  413e4d:	mov    ebx,0xffff145b
  413e52:	mov    DWORD PTR [edx+0x614f11ff],eax
  413e58:	add    BYTE PTR [eax],al
  413e5a:	jmp    DWORD PTR [eax+eax*1]
  413e5d:	inc    ebx
  413e5e:	xchg   DWORD PTR [edx],eax
  413e60:	cmp    edi,0x0
  413e63:	stos   BYTE PTR es:[edi],al
  413e64:	call   FWORD PTR [ebp+eiz*4-0xfffffe]
  413e6b:	xchg   esp,eax
  413e6c:	add    BYTE PTR [ecx+0x42],dh
  413e6f:	cmp    BYTE PTR [eax],al
  413e71:	(bad)  
  413e72:	(bad)  
  413e73:	fild   WORD PTR [eax]
  413e75:	and    al,BYTE PTR [esp+esi*2]
  413e78:	inc    DWORD PTR [eax]
  413e7a:	mov    DWORD PTR [ecx-0x7d],edx
  413e7d:	jo     0x413eaf
  413e7f:	inc    eax
  413e80:	cmp    edi,0xffffff83
  413e83:	pop    ss
  413e84:	mov    DWORD PTR [edx-0xffccba],ebx
  413e8a:	add    bh,dh
  413e8c:	sbb    DWORD PTR [ebp+0x6a],0xffffff96
  413e90:	(bad)  
  413e91:	inc    DWORD PTR [ebx-0x5e0f7cc2]
  413e97:	int3   
  413e98:	cmp    edi,0xffffffff
  413e9b:	add    BYTE PTR fs:[edi+0x6b],cl
  413e9f:	mov    bh,bh
  413ea1:	inc    DWORD PTR [eax]
  413ea3:	outs   dx,DWORD PTR ds:[esi]
  413ea4:	mov    esp,ecx
  413ea6:	push   cs
  413ea7:	gs add bh,bh
  413eaa:	(bad)  
  413eab:	out    dx,eax
  413eac:	add    BYTE PTR [ebp+0x2c],dl
  413eaf:	adc    edi,edi
  413eb1:	add    BYTE PTR [eax],al
  413eb3:	stos   BYTE PTR es:[edi],al
  413eb4:	add    BYTE PTR [ecx-0x7d],bh
  413eb7:	push   0xffffff83
  413eb9:	add    ah,cl
  413ebb:	and    DWORD PTR [eax],eax
  413ebd:	fisubr DWORD PTR [ebx]
  413ebf:	stos   BYTE PTR es:[edi],al
  413ec0:	(bad)  
  413ec1:	inc    DWORD PTR [eax]
  413ec3:	(bad)  
  413ec4:	jmp    DWORD PTR ds:0x177c
  413eca:	add    BYTE PTR [edx],cl
  413ecc:	jmp    DWORD PTR [ecx+0x4a08]
  413ed2:	add    DWORD PTR [esi-0x7d],0x1e
  413ed6:	nop
  413ed7:	aaa    
  413ed8:	add    ah,cl
  413eda:	call   FWORD PTR [ebp-0x537a1501]
  413ee0:	add    bh,bh
  413ee2:	(bad)  
  413ee3:	std    
  413ee4:	dec    DWORD PTR [esi-0x6b]
  413ee7:	xor    edi,edi
  413ee9:	inc    DWORD PTR [eax]
  413eeb:	dec    edi
  413eec:	add    BYTE PTR [ebx],dl
  413eee:	pop    ecx
  413eef:	mov    edi,0x9ff8383
  413ef4:	add    bh,dl
  413ef6:	retf   
  413ef7:	hlt    
  413ef8:	inc    DWORD PTR [eax]
  413efa:	call   edx
  413efc:	int3   
  413efd:	clc    
  413efe:	mov    edx,0x83ff00a1
  413f03:	sub    bh,bh
  413f05:	mov    ah,0x74
  413f07:	into   
  413f08:	add    bh,bh
  413f0a:	dec    DWORD PTR ds:0x46172100
  413f10:	(bad)  
  413f11:	(bad)  
  413f12:	(bad)  
  413f13:	fdivp  st(7),st
  413f15:	dec    ebp
  413f16:	push   ecx
  413f17:	xchg   ebx,eax
  413f18:	add    BYTE PTR [eax],al
  413f1a:	jmp    DWORD PTR [eax+eax*1-0xfb5d84]
  413f21:	int3   
  413f22:	or     esp,0xffffffff
  413f25:	or     al,0xc2
  413f27:	add    edi,edi
  413f29:	int3   
  413f2a:	add    BYTE PTR [ecx-0x77],bh
  413f2d:	push   esp
  413f2e:	mov    bh,al
  413f30:	inc    DWORD PTR [ebx+0x6bff0500]
  413f36:	xor    BYTE PTR [ecx-0x1],0x0
  413f3a:	push   DWORD PTR [ecx-0x7f7e0300]
  413f40:	inc    DWORD PTR [ebx-0x20009100]
  413f46:	daa    
  413f47:	ror    ah,0xcc
  413f4a:	add    bl,ah
  413f4c:	sub    DWORD PTR [edi],0xffffff91
  413f4f:	inc    eax
  413f50:	add    ah,cl
  413f52:	add    cl,dl
  413f54:	add    ch,dl
  413f56:	xor    ah,dh
  413f58:	(bad)  
  413f59:	(bad)  
  413f5a:	jmp    DWORD PTR [ebx-0x1]
  413f5d:	cwde   
  413f5e:	sub    BYTE PTR [ebx+eax*4-0xe3ff01],al
  413f65:	add    BYTE PTR [edi],dh
  413f67:	addr16 (bad) 
  413f69:	(bad)  
  413f6a:	push   DWORD PTR [ecx+0x1dc8d3ff]
  413f70:	add    bh,bh
  413f72:	push   DWORD PTR [ecx-0x7d]
  413f75:	xchg   ebx,eax
  413f76:	stos   BYTE PTR es:[edi],al
  413f77:	sar    bh,0xff
  413f7a:	add    DWORD PTR [edi+edi*8-0xd0b5f1],0x0
  413f82:	xor    DWORD PTR [edi],0xffffff83
  413f85:	sub    DWORD PTR [esi-0x33007cc6],0x13
  413f8c:	int3   
  413f8d:	xor    cl,BYTE PTR [esi*8-0x66ff0001]
  413f94:	int3   
  413f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f96:	xor    BYTE PTR [ecx+0xffffff],dl
  413f9c:	call   FWORD PTR [ecx+eiz*1+0x61]
  413fa0:	(bad)  
  413fa1:	inc    DWORD PTR [eax]
  413fa3:	mov    ch,0xff
  413fa5:	bound  ecx,QWORD PTR [ebx+ebp*2+0x7ff00ff]
  413fac:	call   DWORD PTR [eax]
  413fae:	push   ebx
  413faf:	hlt    
  413fb0:	add    bh,bh
  413fb2:	dec    edx
  413fb4:	push   DWORD PTR [esi]
  413fb6:	pusha  
  413fb7:	jmp    0x413f85
  413fb9:	dec    esp
  413fbb:	retf   0xdc00
  413fbe:	inc    DWORD PTR [ecx+0x5bff89ff]
  413fc4:	add    BYTE PTR [ebx],bl
  413fc6:	(bad)  
  413fc7:	clc    
  413fc8:	(bad)  
  413fc9:	inc    DWORD PTR [eax]
  413fcb:	dec    ah
  413fcd:	je     0x413f64
  413fcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fd0:	(bad)  
  413fd1:	(bad)  
  413fd2:	(bad)  
  413fd3:	cmp    eax,0x5a47f000
  413fd8:	add    BYTE PTR [ebx-0x27336001],al
  413fde:	mov    ss,edi
  413fe0:	int3   
  413fe1:	int3   
  413fe2:	mov    ecx,ebp
  413fe4:	call   esi
  413fe6:	stos   DWORD PTR es:[edi],eax
  413fe7:	cmp    eax,0x9ffff83
  413fec:	push   DWORD PTR [esi-0x3368d3]
  413ff2:	adc    DWORD PTR [ecx+0x452505ff],0xffffffff
  413ff9:	inc    DWORD PTR [eax]
  413ffb:	nop
  413ffc:	call   DWORD PTR [ecx+eax*1-0xff7c9d]
  414003:	dec    esp
  414004:	jmp    FWORD PTR [ebx-0x5c]
  414007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414008:	mov    edi,edi
  41400a:	dec    DWORD PTR [eax-0x6c667e01]
  414010:	or     DWORD PTR [ecx-0x747ce934],0x55
  414017:	xlat   BYTE PTR ds:[ebx]
  414018:	inc    DWORD PTR [ebx-0x1500a37d]
  41401e:	dec    edx
  41401f:	jl     0x413fa4
  414021:	int3   
  414022:	add    al,ch
  414024:	call   DWORD PTR [eax+0xff2482]
  41402a:	call   FWORD PTR [edi+edi*8]
  41402d:	and    DWORD PTR [ecx+0x70],esp
  414030:	add    DWORD PTR [ebx+0x22ff5700],0xffffffb0
  414037:	lea    eax,[ebx-0x850001]
  41403d:	and    BYTE PTR [esi],bh
  41403f:	cmp    bh,bh
  414041:	(bad)  
  414042:	call   ecx
  414044:	push   edi
  414046:	xchg   edx,eax
  414047:	add    BYTE PTR es:[ebx-0x39ff7b00],al
  41404e:	mov    ?,esi
  414050:	(bad)  
  414051:	dec    esp
  414053:	xchg   ecx,eax
  414054:	call   FWORD PTR [edx-0x45]
  414057:	in     al,0xff
  414059:	int3   
  41405a:	int3   
  41405b:	mov    ds:0x6e3c4bff,eax
  414060:	(bad)  
  414061:	(bad)  
  414062:	jmp    DWORD PTR [eax-0x77]
  414065:	data16 (bad) 
  414067:	jl     0x414069
  414069:	add    BYTE PTR [ebx-0x6c1fff75],al
  41406f:	int3   
  414070:	add    bh,bh
  414072:	add    BYTE PTR [edi],bl
  414074:	inc    DWORD PTR [ebx]
  414076:	mov    bl,0x78
  414078:	dec    DWORD PTR [ecx-0x5c765001]
  41407e:	mov    DWORD PTR [esi],eax
  414080:	add    bh,bh
  414082:	jmp    DWORD PTR [esi+0x0]
  414085:	mov    ebp,0xffffeb6a
  41408a:	dec    edx
  41408c:	add    BYTE PTR [edx-0x7c7b01],ah
  414092:	mov    DWORD PTR [ebp-0x34],edi
  414095:	or     eax,0xcc0d67
  41409a:	and    DWORD PTR [ebx-0x46949901],0xffffffcc
  4140a1:	inc    DWORD PTR [ebx+0x5c6aff67]
  4140a7:	inc    eax
  4140a8:	add    BYTE PTR [ebx-0x933467d],al
  4140ae:	inc    eax
  4140af:	scas   al,BYTE PTR es:[edi]
  4140b0:	add    BYTE PTR [ebx-0x5f001e01],al
  4140b6:	pop    ds
  4140b7:	outs   dx,BYTE PTR ds:[esi]
  4140b8:	add    BYTE PTR [ebx+0x408327ff],al
  4140be:	fisttp QWORD PTR [edi-0x600ff01]
  4140c4:	add    bh,ch
  4140c6:	clc    
  4140c7:	nop
  4140c8:	add    BYTE PTR [ebx-0x3b003c00],al
  4140ce:	mov    ebx,0xff830087
  4140d3:	lock mov DWORD PTR [ebx-0x1a],ebp
  4140d7:	rol    DWORD PTR [eax],0x0
  4140da:	dec    DWORD PTR ds:0xc55d7a83
  4140e0:	(bad)  
  4140e1:	inc    DWORD PTR [eax]
  4140e3:	test   esp,ecx
  4140e5:	enter  0x77a7,0xff
  4140e9:	inc    DWORD PTR [ebx+0x6888002d]
  4140ef:	mov    edi,edi
  4140f1:	add    DWORD PTR [eax],0x31
  4140f4:	call   FWORD PTR ds:0xff83d697
  4140fa:	inc    DWORD PTR [ebp-0x1]
  4140fd:	xchg   edx,eax
  4140fe:	inc    edi
  4140ff:	je     0x414100
  414101:	add    bh,bh
  414103:	hlt    
  414104:	call   FWORD PTR [edx-0x3]
  414107:	ror    esp,cl
  414109:	inc    DWORD PTR [eax]
  41410b:	jae    0x4140d9
  41410d:	adc    BYTE PTR [edi-0x7c0033b9],0xc0
  414114:	add    ah,bl
  414116:	pop    edx
  414117:	pusha  
  414118:	add    bh,bh
  41411a:	mov    DWORD PTR [ecx],eax
  41411c:	mov    ecx,esp
  41411e:	xor    al,0x7a
  414120:	add    bh,bh
  414122:	dec    DWORD PTR [ecx+0x6acdaaff]
  414128:	(bad)  
  414129:	(bad)  
  41412a:	push   DWORD PTR [edi+0x0]
  41412d:	call   FWORD PTR [eax-0x7c7cffc2]
  414133:	inc    ebx
  414134:	dec    DWORD PTR [edx+eax*1]
  414137:	cmp    eax,0xf00ff00
  41413c:	add    ah,dh
  41413e:	adc    eax,0xff00ff6b
  414143:	or     ah,0x7c
  414146:	aam    0x23
  414148:	dec    DWORD PTR [ecx+0x18893d00]
  41414e:	fidiv  WORD PTR [ebp-0x7900ff7d]
  414154:	or     DWORD PTR [ebp+0x2f],0x18
  414158:	add    BYTE PTR [ebx-0x4fff3801],al
  41415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415f:	fcos   
  414161:	add    DWORD PTR [ebx-0x279b0002],0xffffff9e
  414168:	add    DWORD PTR [eax],0xffffffff
  41416b:	test   edi,edi
  41416d:	add    BYTE PTR [ecx],al
  41416f:	jae    0x414170
  414171:	add    bh,bh
  414173:	dec    eax
  414174:	mov    DWORD PTR [eax],esp
  414176:	jmp    0xffdd:0xffffe2
  41417d:	icebp  
  41417e:	inc    eax
  41417f:	cmp    DWORD PTR [ebx+0x37ff00],eax
  414185:	dec    eax
  414186:	pop    edx
  414187:	pop    edi
  414188:	mov    edi,edi
  41418a:	add    BYTE PTR [eax+eax*1-0x7ebd80],cl
  414191:	or     DWORD PTR [ecx-0x70a500d5],0xffffffbf
  414198:	inc    DWORD PTR [eax]
  41419a:	sbb    DWORD PTR [edx+0x0],0x63
  41419e:	and    ch,BYTE PTR [edi+0x2d00cc89]
  4141a4:	add    BYTE PTR [ebx-0x7e],cl
  4141a7:	xor    al,0x0
  4141a9:	add    bh,bh
  4141ab:	push   edi
  4141ac:	add    BYTE PTR [ebp-0x6a],dh
  4141af:	enter  0xffff,0x0
  4141b3:	sub    DWORD PTR [ebx-0xa4951b],eax
  4141b9:	(bad)  
  4141ba:	jmp    FWORD PTR [eax]
  4141bc:	int3   
  4141bd:	jns    0x414167
  4141bf:	jp     0x4141c0
  4141c1:	cmp    edi,0xffffff89
  4141c4:	(bad)  
  4141c5:	call   0xcb08fb
  4141ca:	and    ecx,0xffffff89
  4141cd:	shl    BYTE PTR [esi],0x8
  4141d0:	add    bh,bh
  4141d2:	jmp    DWORD PTR [edx+0x0]
  4141d5:	push   0xffffffee
  4141d7:	scas   eax,DWORD PTR es:[edi]
  4141d8:	add    DWORD PTR [eax],0xffffff83
  4141db:	leave  
  4141dc:	(bad)  
  4141dd:	cmp    al,0xcf
  4141df:	lods   eax,DWORD PTR ds:[esi]
  4141e0:	(bad)  
  4141e1:	(bad)  
  4141e2:	dec    ebx
  4141e4:	int3   
  4141e5:	rcl    ah,1
  4141e7:	mov    esi,0x888900ff
  4141ec:	(bad)  
  4141ed:	js     0x41425c
  4141ef:	xlat   BYTE PTR ds:[ebx]
  4141f0:	cmp    edi,0x0
  4141f3:	arpl   di,di
  4141f5:	jle    0x414232
  4141f7:	inc    ebp
  4141f8:	mov    DWORD PTR [eax],eax
  4141fa:	mov    ecx,esi
  4141fc:	add    BYTE PTR [edx+0x57],ah
  4141ff:	add    al,0x0
  414201:	add    bh,bh
  414203:	push   0x0
  414205:	fiadd  DWORD PTR [ebx-0x7c00a5]
  41420b:	popf   
  41420c:	jmp    FWORD PTR [ebx+ecx*2-0x50]
  414210:	add    bh,bh
  414212:	add    BYTE PTR [ebx],bh
  414214:	xor    DWORD PTR [ebp-0x3e],0xffffff95
  414218:	add    DWORD PTR [ebx-0x637cb901],0x5
  41421f:	daa    
  414220:	add    BYTE PTR [ebx+0x21cc0089],al
  414226:	in     al,dx
  414227:	pop    esp
  414228:	(bad)  
  414229:	dec    DWORD PTR [ecx+0x3471ffb2]
  41422f:	call   0xe24141bd
  414234:	dec    DWORD PTR [edx-0x5a]
  414237:	pop    ss
  414238:	add    BYTE PTR [ecx-0x6d00fa00],cl
  41423e:	mov    eax,ds:0xffffffa6
  414243:	(bad)  
  414244:	add    cl,ch
  414246:	jno    0x414242
  414248:	mov    DWORD PTR [eax],eax
  41424a:	mov    DWORD PTR [ecx+0x0],edi
  41424d:	cmp    eax,0xff00b365
  414252:	sub    DWORD PTR [edx-0x7d],0x14
  414256:	add    DWORD PTR [edx-0x6500ff7d],ebx
  41425c:	add    BYTE PTR [eax],cl
  41425e:	iret   
  41425f:	inc    ecx
  414260:	add    bh,bh
  414262:	add    BYTE PTR [edi],dl
  414264:	push   DWORD PTR [edx+0xb793]
  41426a:	add    ah,al
  41426c:	call   DWORD PTR [ebx+0xe83b]
  414272:	call   FWORD PTR [esi]
  414274:	jmp    FWORD PTR [esi]
  414276:	lods   eax,DWORD PTR ds:[esi]
  414277:	add    BYTE PTR [eax],0x83
  41427a:	call   DWORD PTR [esi+0x0]
  41427d:	outs   dx,DWORD PTR ds:[esi]
  41427e:	aad    0x3e
  414280:	add    BYTE PTR [eax],al
  414282:	add    BYTE PTR [eax-0x878097d],dh
  414288:	add    ah,cl
  41428a:	add    BYTE PTR [ebp-0x452ead7d],ch
  414290:	inc    DWORD PTR [ebx+0x69ff32ff]
  414296:	repnz and esp,ecx
  414299:	int3   
  41429a:	int3   
  41429b:	int3   
  41429c:	int3   
  41429d:	int3   
  41429e:	int3   
  41429f:	int3   
  4142a0:	cmp    eax,DWORD PTR [ebx-0x846c]
  4142a6:	jo     0x4142a8
  4142a8:	adc    edx,esi
  4142aa:	jne    0x414278
  4142ac:	out    dx,al
  4142ad:	add    bh,bh
  4142af:	jmp    DWORD PTR [ebx]
  4142b1:	add    ah,cl
  4142b3:	pop    ebx
  4142b4:	add    BYTE PTR [ebx-0x2edc760b],al
  4142ba:	push   ds
  4142bb:	push   DWORD PTR [edx-0x7fff0077]
  4142c1:	add    BYTE PTR [ecx-0xbffff38],bh
  4142c7:	inc    DWORD PTR [edx]
  4142c9:	(bad)  
  4142ca:	fs int3 
  4142cc:	sub    eax,DWORD PTR [ebx-0xbc007d]
  4142d2:	adc    DWORD PTR [ebp-0x7cdaff7d],ebx
  4142d8:	ds stos DWORD PTR es:[edi],eax
  4142da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142db:	xor    DWORD PTR [eax+0x5eff0000],0xffffffff
  4142e2:	add    esi,DWORD PTR [esi-0x34]
  4142e5:	sub    DWORD PTR [ebx-0x51314e01],0xffffffff
  4142ec:	jbe    0x414271
  4142ee:	add    DWORD PTR [eax],0x44
  4142f1:	add    BYTE PTR [edi+0x9],bl
  4142f4:	int3   
  4142f5:	add    BYTE PTR [edi+edi*8-0xa1bc94],dl
  4142fc:	fmul   st(4),st
  4142fe:	inc    DWORD PTR [eax]
  414300:	mov    DWORD PTR ss:[esi],edi
  414303:	cwde   
  414304:	(bad)  
  414305:	jmp    FWORD PTR [edi-0x5bcb6000]
  41430b:	(bad)  
  41430c:	cmp    BYTE PTR [eax],al
  41430e:	inc    DWORD PTR [eax]
  414310:	out    dx,al
  414311:	add    bl,ah
  414313:	or     al,0x0
  414315:	int3   
  414316:	dec    DWORD PTR gs:[edi]
  414319:	fwait
  41431a:	arpl   di,di
  41431c:	test   DWORD PTR [eax],0xc600ff
  414322:	pop    ss
  414323:	sub    bh,bh
  414325:	mov    esi,ebp
  414327:	add    BYTE PTR [edi-0x62],bh
  41432a:	call   0xfbff:0xff5600
  414331:	call   FWORD PTR [esi-0x65ff0052]
  414337:	cmp    DWORD PTR [edx-0x1a00eaac],0x0
  41433e:	add    bh,bh
  414340:	cmp    DWORD PTR [ecx-0x7c33e5e6],ecx
  414346:	sahf   
  414347:	int3   
  414348:	fdiv   QWORD PTR [ebx]
  41434a:	es inc edx
  41434d:	or     esp,0xffffffff
  414350:	add    edi,edi
  414352:	jns    0x414333
  414354:	add    BYTE PTR [ebx+0x66bc00e2],al
  41435a:	or     al,0x83
  41435c:	jns    0x4142e1
  41435e:	(bad)  
  41435f:	jmp    FWORD PTR [ebx-0xc10c7d]
  414365:	jmp    FWORD PTR [edx]
  414367:	inc    edi
  414369:	repnz iret 
  41436b:	add    BYTE PTR [edi-0x34],ch
  41436e:	(bad)  
  41436f:	call   esp
  414371:	or     DWORD PTR [ecx-0x4d00332a],0xffffff83
  414378:	inc    esi
  414379:	outs   dx,DWORD PTR ds:[esi]
  41437a:	sbb    BYTE PTR [ecx-0xff79],cl
  414380:	call   0x5000:0xff5ae2ff
  414387:	cmp    DWORD PTR [esi+eiz*4+0x50ff34],0xffffffff
  41438f:	jmp    DWORD PTR [edx]
  414391:	add    BYTE PTR [ebx-0x71],dh
  414394:	(bad)  
  414395:	call   DWORD PTR [edx]
  414397:	add    BYTE PTR [ebx-0x2d],bh
  41439a:	fmul   st,st(4)
  41439c:	stos   DWORD PTR es:[edi],eax
  41439d:	mov    edi,edi
  41439f:	add    BYTE PTR [edi],bl
  4143a1:	add    BYTE PTR [ecx+esi*2+0xa183ff],dl
  4143a8:	mov    dh,0x1b
  4143aa:	or     bh,bh
  4143ac:	pop    ss
  4143ad:	add    bh,bh
  4143af:	jmp    FWORD PTR [ebx+eax*4-0xd]
  4143b3:	(bad)  
  4143b4:	(bad)  
  4143b5:	dec    DWORD PTR [ecx]
  4143b7:	call   FWORD PTR [edi+0x5500281d]
  4143bd:	(bad)  
  4143be:	(bad)  
  4143bf:	(bad)  
  4143c0:	cli    
  4143c1:	call   DWORD PTR [ebx-0x2276766c]
  4143c7:	add    BYTE PTR [esi-0x8],al
  4143ca:	sbb    eax,0xff00db83
  4143cf:	add    BYTE PTR [eax-0x34],cl
  4143d2:	jo     0x41437e
  4143d4:	inc    DWORD PTR [ebx-0x34ba3302]
  4143da:	outs   dx,BYTE PTR ds:[esi]
  4143db:	dec    DWORD PTR [esi]
  4143dd:	(bad)  
  4143de:	inc    DWORD PTR [eax]
  4143e0:	and    esp,ecx
  4143e2:	sub    eax,0xcd8300a2
  4143e7:	jmp    FWORD PTR [esi-0x5dff262d]
  4143ed:	add    bh,bh
  4143ef:	call   DWORD PTR [ecx-0x5fcd34]
  4143f5:	(bad)  
  4143f6:	fmul   st(4),st
  4143f8:	pop    edx
  4143f9:	and    BYTE PTR [eax+0x0],bh
  4143fc:	jle    0x414381
  4143fe:	add    DWORD PTR [eax],0x44
  414401:	add    BYTE PTR [ebx+0x36cccc63],bh
  414407:	mov    DWORD PTR [ebp-0x1c],esp
  41440a:	mov    eax,0xccffedff
  41440f:	int3   
  414410:	mov    DWORD PTR [ebx-0xed46],eax
  414416:	mov    BYTE PTR [eax],al
  414418:	les    edi,FWORD PTR [edx]
  41441a:	test   eax,0xff17ff
  41441f:	int3   
  414420:	xor    eax,0xff4bdbff
  414425:	add    dl,dh
  414427:	jmp    DWORD PTR [esi-0x39]
  41442a:	les    eax,FWORD PTR [ebx+0xff00ce]
  414430:	add    eax,0xff7ab0cc
  414435:	add    BYTE PTR [esi],ah
  414437:	add    BYTE PTR [esi-0x14],ch
  41443a:	(bad)  
  41443c:	repnz add bh,bh
  41443f:	jmp    DWORD PTR [edi+edi*8]
  414442:	jmp    0xa641c808
  414447:	jmp    DWORD PTR [ecx-0x27ff812d]
  41444d:	(bad)  
  41444e:	(bad)  
  41444f:	inc    esi
  414451:	(bad)  
  414452:	fbld   TBYTE PTR [eax+eax*1+0x5700a089]
  414459:	and    dh,BYTE PTR [esi-0xff8501]
  41445f:	add    BYTE PTR [edx-0xdd0301],cl
  414465:	add    BYTE PTR [edi-0x413f6601],cl
  41446b:	dec    DWORD PTR [ebx+eax*4]
  41446e:	mov    DWORD PTR [eax],eax
  414470:	daa    
  414471:	jmp    FWORD PTR [eax]
  414473:	fadd   DWORD PTR [eax]
  414475:	add    BYTE PTR [ecx-0x1],al
  414478:	icebp  
  414479:	mov    bh,BYTE PTR [ebp-0x7d]
  41447c:	fdiv   st(7),st
  41447e:	(bad)  
  41447f:	jmp    DWORD PTR [eax-0x1]
  414482:	dec    esp
  414483:	mov    ch,0x83
  414485:	(bad)  
  414486:	cmp    ecx,DWORD PTR [ecx-0x33f85d2b]
  41448c:	mov    ds:0x51838900,al
  414491:	int3   
  414492:	cmp    al,0x2e
  414494:	mov    DWORD PTR [eax],eax
  414496:	call   0x1aff:0x711ce3ff
  41449d:	add    BYTE PTR [eax],al
  41449f:	int3   
  4144a0:	inc    edx
  4144a1:	push   ebx
  4144a3:	mov    DWORD PTR [eax],0xdc8913ff
  4144a9:	jo     0x4144c3
  4144ab:	jmp    DWORD PTR [esi-0x7e337c7d]
  4144b1:	call   DWORD PTR [ebp+0x63]
  4144b4:	(bad)  
  4144b5:	dec    DWORD PTR [edx]
  4144b7:	mov    DWORD PTR [edx+eiz*1-0x7c69ff71],edi
  4144be:	(bad)  
  4144bf:	call   FWORD PTR [ebp+0x0]
  4144c2:	xchg   esi,eax
  4144c3:	or     eax,0xff860000
  4144c8:	shl    BYTE PTR [eax+ebx*1+0x8328cc],cl
  4144cf:	sub    DWORD PTR [ebx+0x9cc7ff],0xffffff83
  4144d6:	stos   DWORD PTR es:[edi],eax
  4144d7:	add    BYTE PTR [ecx+ecx*2-0x7a],ah
  4144db:	add    BYTE PTR [edx+0x57ff00ff],ch
  4144e1:	add    al,dl
  4144e3:	adc    eax,0x2b0000
  4144e8:	xor    BYTE PTR [esi],al
  4144ea:	dec    edi
  4144eb:	add    BYTE PTR [ebx],al
  4144ed:	(bad)  
  4144ee:	inc    DWORD PTR [eax]
  4144f0:	(bad)  
  4144f1:	push   DWORD PTR [esi-0x58007c5e]
  4144f7:	dec    DWORD PTR [edx]
  4144f9:	std    
  4144fa:	das    
  4144fb:	sbb    DWORD PTR [ecx-0x1],0xffffff89
  4144ff:	int3   
  414500:	adc    eax,0x83be9c83
  414505:	cmp    DWORD PTR [eax+eax*1-0x44],0xd
  41450a:	std    
  41450b:	add    BYTE PTR [ebx],al
  41450d:	add    bh,bh
  41450f:	push   edx
  414511:	call   FWORD PTR [ebx+ebp*1]
  414514:	(bad)  
  414515:	jmp    FWORD PTR [edi-0x32ec1634]
  41451b:	inc    edi
  41451d:	add    BYTE PTR [eax],al
  41451f:	xor    DWORD PTR [edx],0xffffffff
  414522:	maxps  xmm0,XMMWORD PTR [eax]
  414525:	add    dl,ch
  414527:	mov    DWORD PTR [edx+0x6b],ebx
  41452a:	stos   BYTE PTR es:[edi],al
  41452b:	add    BYTE PTR [eax],bh
  41452d:	add    BYTE PTR [eax],al
  41452f:	mov    edx,edx
  414531:	add    dl,dl
  414533:	mov    ebp,0x838eff00
  414538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414539:	call   0x8989:0xff48ff5a
  414540:	retf   
  414541:	cmp    DWORD PTR [eax-0x77],0xffffff89
  414545:	add    ebp,0xffffffff
  414548:	loope  0x4144e7
  41454a:	dec    ebx
  41454b:	inc    DWORD PTR [edi+0x0]
  41454e:	add    bh,bh
  414550:	fiadd  WORD PTR [eax]
  414552:	jg     0x41452e
  414554:	int3   
  414555:	adc    esp,0x0
  414558:	ins    BYTE PTR es:[edi],dx
  414559:	out    dx,eax
  41455a:	mov    DWORD PTR [eax],eax
  41455c:	mov    eax,0x77ffffff
  414561:	inc    DWORD PTR [edx+0xd]
  414564:	inc    DWORD PTR [ebx-0x5ec60094]
  41456a:	sahf   
  41456b:	add    BYTE PTR [ebx],al
  41456d:	int3   
  41456e:	add    BYTE PTR [eax],al
  414570:	add    bh,bh
  414572:	mov    esp,0xbfff0075
  414577:	add    al,ch
  414579:	fistp  DWORD PTR [edi+edi*8]
  41457c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41457d:	(bad)  
  41457e:	(bad)  
  41457f:	call   DWORD PTR [edi+0x0]
  414582:	push   ss
  414583:	add    eax,DWORD PTR [ebx+0x30ff5200]
  414589:	mov    esp,0xff9b005c
  41458e:	add    BYTE PTR [ecx-0x332fff23],cl
  414594:	(bad)  
  414595:	(bad)  
  414596:	fadd   DWORD PTR [eax]
  414598:	and    BYTE PTR [edx-0x7e],al
  41459b:	int3   
  41459c:	sub    eax,0xdffffff
  4145a1:	add    BYTE PTR [edi],ah
  4145a3:	add    BYTE PTR [ecx-0x53000c01],cl
  4145a9:	dec    eax
  4145aa:	inc    DWORD PTR fs:[ebx-0x77]
  4145ae:	add    BYTE PTR [eax],al
  4145b0:	adc    eax,0xff444689
  4145b5:	add    BYTE PTR [esi-0x41e9a17d],bl
  4145bb:	dec    DWORD PTR [edx+0x0]
  4145be:	int3   
  4145bf:	push   DWORD PTR [edi]
  4145c1:	mov    DWORD PTR [eax],esi
  4145c3:	sub    bh,bh
  4145c5:	inc    DWORD PTR [ebp+0x0]
  4145c8:	outs   dx,DWORD PTR ds:[esi]
  4145c9:	inc    esi
  4145ca:	sub    edi,edi
  4145cc:	cmp    bh,0x0
  4145cf:	dec    DWORD PTR [esi]
  4145d1:	add    al,dl
  4145d3:	xor    al,0xcc
  4145d5:	add    BYTE PTR [edx-0x1],ch
  4145d8:	push   ebp
  4145d9:	sbb    eax,0xcf838b
  4145de:	inc    DWORD PTR [eax]
  4145e0:	jne    0x414565
  4145e2:	push   ss
  4145e3:	mov    cl,0xff
  4145e5:	push   DWORD PTR [edi]
  4145e7:	int3   
  4145e8:	into   
  4145e9:	ja     0x414630
  4145eb:	inc    DWORD PTR [ebx]
  4145ed:	add    DWORD PTR [eax],0xffffffcc
  4145f0:	fdiv   st(7),st
  4145f2:	mov    esi,0xfb830011
  4145f7:	inc    esi
  4145f9:	test   DWORD PTR [eax],edx
  4145fb:	add    dh,bl
  4145fd:	add    bh,bh
  4145ff:	add    BYTE PTR [edi],ah
  414601:	add    BYTE PTR [edx-0x73007c7e],dl
  414607:	inc    eax
  414609:	mov    ah,bh
  41460b:	add    bh,bl
  41460d:	(bad)  
  41460e:	(bad)  
  41460f:	jmp    DWORD PTR [edi]
  414611:	or     DWORD PTR [edi+0x4f898912],0xffffffff
  414618:	and    edx,DWORD PTR [edi+0xb800e3]
  41461e:	mov    edi,edi
  414620:	pop    ds
  414621:	cmp    DWORD PTR [ebx-0x55],0xffffffcc
  414625:	call   DWORD PTR [edi+edi*8+0x6b]
  414629:	add    eax,0xff28ff61
  41462e:	add    bh,bh
  414630:	inc    ecx
  414631:	int3   
  414632:	pushf  
  414633:	es add ah,cl
  414636:	mov    esp,0x28bb5900
  41463b:	add    BYTE PTR [esi],cl
  41463d:	(bad)  
  41463e:	inc    DWORD PTR [eax]
  414640:	add    bh,bh
  414642:	mov    ecx,0xf783ff84
  414647:	add    BYTE PTR [edi+esi*4],cl
  41464a:	cmp    edi,edi
  41464c:	jg     0x41461a
  41464e:	(bad)  
  41464f:	jmp    DWORD PTR [ebp+0xef3d00]
  414655:	sub    edx,0xffffff83
  414658:	into   
  414659:	test   eax,0xff1c895f
  41465e:	(bad)  
  41465f:	push   ecx
  414661:	add    BYTE PTR [ebx-0x11ffff2f],bh
  414667:	sub    DWORD PTR ds:0x5a00d0b3,0xffffff83
  41466e:	(bad)  
  41466f:	push   DWORD PTR [eax+0x0]
  414672:	repz pop esp
  414674:	dec    esp
  414676:	sbb    eax,0xde3f77ff
  41467b:	xor    eax,0xffffffcc
  41467e:	inc    DWORD PTR [eax]
  414680:	fadd   QWORD PTR [ebx-0xfe63]
  414686:	scas   eax,DWORD PTR es:[edi]
  414687:	jmp    DWORD PTR [ebp-0x78ff3dc9]
  41468d:	cmp    edi,0xffffffff
  414690:	(bad)  
  414691:	(bad)  
  414692:	fadd   QWORD PTR ds:0xdffff
  414698:	cmp    BYTE PTR [edi+eiz*8],dl
  41469b:	add    BYTE PTR [esi-0x34],dl
  41469e:	(bad)  
  41469f:	(bad)  
  4146a0:	jl     0x4146a2
  4146a2:	jmp    0x4146ff
  4146a4:	add    BYTE PTR [eax],al
  4146a6:	dec    DWORD PTR es:[edx-0x7b]
  4146aa:	jae    0x4146ac
  4146ac:	mov    bl,0x0
  4146ae:	(bad)  
  4146af:	dec    DWORD PTR [edx-0xea8e01]
  4146b5:	xor    DWORD PTR [ebx+eax*4-0x69d5e5],0xffffffec
  4146bd:	add    DWORD PTR [ebx+0x29000483],0xffffffbb
  4146c4:	add    bh,bh
  4146c6:	dec    eax
  4146c7:	call   FWORD PTR [edi]
  4146c9:	cmp    DWORD PTR [edi-0x1],ecx
  4146cc:	push   ss
  4146cd:	int3   
  4146ce:	add    DWORD PTR [eax],0x79
  4146d1:	add    BYTE PTR [edx+0x35ffccd0],al
  4146d7:	dec    ecx
  4146d9:	adc    al,0x48
  4146db:	mov    DWORD PTR [esi+0x0],esp
  4146de:	(bad)  
  4146df:	(bad)  
  4146e0:	fadd   DWORD PTR [eax]
  4146e2:	(bad)  
  4146e3:	jge    0x414668
  4146e5:	call   ebx
  4146e7:	add    BYTE PTR [eax],ah
  4146e9:	sub    BYTE PTR [edx-0x7d],bh
  4146ec:	loop   0x4146ed
  4146ee:	(bad)  
  4146ef:	jmp    DWORD PTR [ebx+0x0]
  4146f2:	push   ecx
  4146f3:	pop    ds
  4146f4:	mov    edi,edi
  4146f6:	test   esp,ecx
  4146f8:	das    
  4146f9:	jl     0x41477a
  4146fb:	add    BYTE PTR [edx],ch
  4146fd:	inc    DWORD PTR [eax]
  4146ff:	inc    DWORD PTR [eax-0x1]
  414702:	out    dx,al
  414703:	xor    al,BYTE PTR [ebx-0x65ffaf01]
  414709:	in     eax,dx
  41470a:	fs int3 
  41470c:	inc    ebx
  41470d:	dec    DWORD PTR [ecx-0x147caa01]
  414713:	or     DWORD PTR [eax],eax
  414715:	add    BYTE PTR [ecx-0x7d],bl
  414718:	push   es
  414719:	loope  0x41478a
  41471b:	add    dh,ah
  41471d:	(bad)  
  41471e:	(bad)  
  41471f:	call   DWORD PTR [edi]
  414721:	sub    DWORD PTR [ecx],0xffffff82
  414724:	inc    DWORD PTR [eax]
  414726:	mov    edi,0x54b3f700
  41472b:	add    ah,bh
  41472d:	add    BYTE PTR [eax],al
  41472f:	jmp    DWORD PTR [ecx-0x34]
  414732:	mov    dl,0xc9
  414734:	(bad)  
  414735:	call   DWORD PTR [ecx-0x1]
  414738:	icebp  
  414739:	xrelease lock add BYTE PTR [edi],ch
  41473d:	add    BYTE PTR [eax],al
  41473f:	xor    DWORD PTR ds:0xffde2700,0xffffffff
  414746:	loopne 0x414747
  414748:	inc    esi
  414749:	xchg   ecx,eax
  41474a:	(bad)  
  41474c:	xor    bh,bh
  41474e:	mov    DWORD PTR [ebx-0x20ff33aa],eax
  414754:	inc    DWORD PTR [eax]
  414756:	adc    eax,0xa4aac700
  41475b:	add    BYTE PTR [edi+edi*8+0x0],cl
  41475f:	adc    DWORD PTR [eax+eax*1],0xffffffa3
  414763:	cmp    eax,DWORD PTR [ebx+0x55ff9aff]
  414769:	xor    bl,BYTE PTR [edi-0x1]
  41476c:	pop    ebp
  41476d:	(bad)  
  41476e:	inc    DWORD PTR [eax]
  414770:	pop    es
  414771:	inc    DWORD PTR ds:0xc70000fc
  414777:	(bad)  
  414778:	(bad)  
  414779:	xchg   edi,eax
  41477a:	icebp  
  41477b:	add    BYTE PTR [ecx],al
  41477d:	(bad)  
  41477e:	inc    DWORD PTR [eax]
  414780:	cmp    bh,bh
  414782:	bound  eax,QWORD PTR [edi-0x1]
  414785:	add    ch,dl
  414787:	dec    DWORD PTR [esi-0x17330c17]
  41478d:	(bad)  
  41478e:	inc    DWORD PTR [ebx-0x31c900ab]
  414794:	add    DWORD PTR [ebx+0x3eb9fffb],0xffffff8b
  41479b:	call   DWORD PTR [edi-0x55ff7677]
  4147a1:	call   DWORD PTR [eax-0x58007c92]
  4147a7:	add    DWORD PTR [ecx-0x28ff8ef8],0x0
  4147ae:	(bad)  
  4147af:	(bad)  
  4147b0:	cld    
  4147b1:	call   FWORD PTR [ecx]
  4147b3:	pop    ebx
  4147b4:	inc    DWORD PTR [ebx+0x73f100f3]
  4147ba:	iret   
  4147bb:	add    BYTE PTR [edx],ch
  4147bd:	cmp    edi,0xffffffff
  4147c0:	(bad)  
  4147c1:	jmp    FWORD PTR [ebx-0x57]
  4147c4:	or     DWORD PTR [ecx+0x26d4831d],0xfffffff3
  4147cb:	add    al,ah
  4147cd:	(bad)  
  4147ce:	inc    DWORD PTR [eax]
  4147d0:	ret    
  4147d1:	add    BYTE PTR [ebx-0x31ff7cb1],bh
  4147d7:	add    BYTE PTR [ebx+0x39],cl
  4147da:	jmp    0x412e62
  4147df:	add    ah,cl
  4147e1:	call   ebp
  4147e3:	mov    edi,edi
  4147e5:	int3   
  4147e6:	mov    eax,ds:0xcd902dff
  4147eb:	push   DWORD PTR [ecx-0x4ff7c01]
  4147f1:	(bad)  
  4147f2:	jl     0x41478c
  4147f4:	add    BYTE PTR [ecx-0x2a480068],cl
  4147fa:	daa    
  4147fb:	call   FWORD PTR [edx-0x1]
  4147fe:	inc    DWORD PTR [ebx+0x5fd78395]
  414804:	int3   
  414805:	inc    DWORD PTR [edi]
  414807:	or     DWORD PTR [edi-0x3a],0xffffffb9
  41480b:	call   FWORD PTR [ecx-0x7d]
  41480e:	dec    DWORD PTR [ecx+0x29eaffcd]
  414814:	mov    edi,edi
  414816:	push   esi
  414817:	(bad)  
  414818:	fild   DWORD PTR [eax-0x7c410029]
  41481e:	add    DWORD PTR [eax],0x76
  414821:	and    DWORD PTR [eax+0x70],0x0
  414825:	sub    edx,0x0
  414828:	jno    0x41482c
  41482a:	sub    edi,edi
  41482c:	fwait
  41482d:	add    bh,bh
  41482f:	call   DWORD PTR [esi-0xdee300]
  414835:	dec    DWORD PTR [ecx-0x70d71801]
  41483b:	add    BYTE PTR [ecx-0x4e7c0001],bl
  414841:	add    edx,0xffffff87
  414844:	(bad)  
  414845:	call   DWORD PTR [eax+0x6d0713ff]
  41484b:	call   FWORD PTR [ecx]
  41484d:	add    bh,bh
  41484f:	adc    ebp,0xffffffff
  414852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414853:	out    dx,eax
  414854:	inc    DWORD PTR [eax]
  414856:	inc    ebp
  414857:	add    BYTE PTR [edi*4+0x3dff4e],al
  41485e:	add    BYTE PTR [eax],al
  414860:	sbb    al,BYTE PTR [eax]
  414862:	cli    
  414863:	pop    ds
  414864:	add    DWORD PTR [eax],0x5
  414867:	jmp    DWORD PTR [edi-0x20]
  41486a:	pop    edi
  41486b:	jmp    FWORD PTR [esi-0x1]
  41486e:	int3   
  41486f:	int3   
  414870:	push   cs
  414871:	add    BYTE PTR [eax-0x5276338e],cl
  414877:	dec    DWORD PTR [eax-0x7a]
  41487a:	repz (bad) 
  41487c:	fdiv   st(7),st
  41487e:	dec    esp
  414880:	sahf   
  414881:	call   FWORD PTR [ebx+0x2a]
  414884:	add    ah,cl
  414886:	cmp    eax,0x4c8e19ff
  41488b:	inc    DWORD PTR [esi-0x1]
  41488e:	add    BYTE PTR [eax],al
  414890:	mov    edi,edi
  414892:	sub    BYTE PTR [ebx],ch
  414894:	inc    DWORD PTR [eax]
  414896:	sar    edi,0x71
  414899:	pop    esp
  41489a:	xchg   edi,edi
  41489c:	jg     0x41489d
  41489e:	inc    DWORD PTR [eax]
  4148a0:	pop    edx
  4148a1:	cmp    eax,0xffffffe3
  4148a4:	dec    esp
  4148a6:	(bad)  
  4148a7:	and    DWORD PTR [esi+0x60],0xffffffe6
  4148ab:	int3   
  4148ac:	ud0    edi,edi
  4148af:	call   DWORD PTR [edi]
  4148b1:	(bad)  
  4148b2:	mov    edx,0x8e00003f
  4148b7:	add    bl,ah
  4148b9:	ins    BYTE PTR es:[edi],dx
  4148ba:	mov    bl,0xff
  4148bc:	std    
  4148bd:	inc    DWORD PTR [eax]
  4148bf:	add    DWORD PTR [edx-0xd98600],0x0
  4148c6:	inc    ebp
  4148c7:	(bad)  
  4148c8:	mov    ebx,0xf2cc0723
  4148cd:	(bad)  
  4148ce:	(bad)  
  4148cf:	push   ebx
  4148d1:	or     DWORD PTR [ebx-0x5b],0x0
  4148d5:	(bad)  
  4148d6:	inc    DWORD PTR [ebx-0x33991009]
  4148dc:	in     al,dx
  4148dd:	dec    DWORD PTR [ecx+0x7ecc70cc]
  4148e3:	dec    ebp
  4148e4:	mov    DWORD PTR [eax],eax
  4148e6:	add    DWORD PTR [ebx-0x76e5c3ac],0x42
  4148ed:	add    BYTE PTR [eax],al
  4148ef:	jmp    DWORD PTR [ecx]
  4148f1:	(bad)  
  4148f2:	js     0x4148ce
  4148f4:	(bad)  
  4148f5:	inc    esp
  4148f7:	adc    esi,0xffffffd3
  4148fa:	imul   edi,edi,0xc7
  414900:	aas    
  414901:	(bad)  
  414902:	jge    0x4148f7
  414904:	add    BYTE PTR [eax],al
  414906:	mov    DWORD PTR [eax],eax
  414908:	leave  
  414909:	xor    ch,ch
  41490b:	push   DWORD PTR [ebp-0x1]
  41490e:	inc    DWORD PTR [eax]
  414910:	mov    al,ds:0xf9b600
  414915:	dec    DWORD PTR [ecx]
  414917:	add    BYTE PTR [ebp+0x2b],dl
  41491a:	jmp    0xff418fa2
  41491f:	add    bl,dh
  414921:	call   DWORD PTR [edi+0x1]
  414924:	add    bh,bh
  414926:	sbb    BYTE PTR [eax],al
  414928:	cli    
  414929:	xlat   BYTE PTR ds:[ebx]
  41492a:	xlat   BYTE PTR ds:[ebx]
  41492b:	add    BYTE PTR [edx],dh
  41492d:	dec    esp
  41492f:	add    BYTE PTR [ebp-0x1],ch
  414932:	pop    ss
  414933:	inc    ecx
  414934:	add    DWORD PTR [ebx+0x55a6833d],0x73
  41493b:	jmp    FWORD PTR [ebp+0x5f0000ff]
  414941:	add    BYTE PTR [esi-0x1b],dh
  414944:	int3   
  414945:	xor    esi,0x0
  414948:	popf   
  414949:	jp     0x414939
  41494b:	sub    DWORD PTR [edx-0x5300ff01],0xffffffff
  414952:	jge    0x414925
  414954:	inc    DWORD PTR [eax]
  414956:	and    DWORD PTR ds:[esi],0xffffffec
  41495a:	sbb    ecx,esp
  41495c:	dec    ebx
  41495d:	inc    DWORD PTR [eax]
  41495f:	jmp    FWORD PTR [ecx]
  414961:	push   DWORD PTR [ebx-0x42]
  414964:	(bad)  
  414965:	push   DWORD PTR [ecx]
  414967:	add    dh,bh
  414969:	xor    ah,BYTE PTR [esi+0x0]
  41496c:	pop    ss
  41496d:	inc    DWORD PTR [eax]
  41496f:	and    DWORD PTR [edi+0x9e5800],0xffffffff
  414976:	jecxz  0x414977
  414978:	ss test eax,0xffb8ffdb
  41497e:	add    ah,cl
  414980:	sbb    edi,edi
  414982:	adc    DWORD PTR [esi+0x0],ebp
  414985:	add    BYTE PTR [ecx-0x7dcc7900],bl
  41498b:	sbb    DWORD PTR [edi-0x1],0xffffff83
  41498f:	int3   
  414990:	js     0x414992
  414992:	ds pusha 
  414994:	inc    DWORD PTR [eax]
  414996:	adc    eax,DWORD PTR [eax]
  414998:	push   ebx
  414999:	ins    DWORD PTR es:[edi],dx
  41499a:	test   eax,0xffd700
  41499f:	xor    DWORD PTR [ebx-0x7d],0xffffffa2
  4149a3:	loop   0x4149a4
  4149a5:	push   DWORD PTR [esi+0x0]
  4149a8:	pop    ebx
  4149a9:	(bad)  
  4149aa:	jno    0x41492f
  4149ac:	ss add bh,bh
  4149af:	jmp    DWORD PTR [edi-0x7d]
  4149b2:	cmp    al,0x23
  4149b4:	or     esp,0xa
  4149b7:	or     DWORD PTR [esi],0x67
  4149ba:	pop    ebx
  4149bb:	add    BYTE PTR [esi],ah
  4149bd:	add    BYTE PTR [eax],al
  4149bf:	add    BYTE PTR [ebx-0x1],bh
  4149c2:	leave  
  4149c3:	push   edi
  4149c4:	add    BYTE PTR [eax],al
  4149c6:	(bad)  
  4149c7:	dec    DWORD PTR [edx]
  4149c9:	xlat   BYTE PTR ds:[ebx]
  4149ca:	xchg   edx,eax
  4149cb:	dec    DWORD PTR [edx+0x1200ffff]
  4149d1:	sub    DWORD PTR [esi-0x19],0x0
  4149d5:	jmp    DWORD PTR [esi-0x7d]
  4149d8:	add    ch,cl
  4149da:	test   DWORD PTR [eax],eax
  4149dc:	hlt    
  4149dd:	mov    DWORD PTR [eax],eax
  4149df:	mov    DWORD PTR [eax],esp
  4149e1:	mov    DWORD PTR [edx-0x43],esp
  4149e4:	mov    edi,edi
  4149e6:	jl     0x4149e8
  4149e8:	int    0x31
  4149ea:	and    bh,bh
  4149ec:	mov    dh,0x83
  4149ee:	add    bh,bh
  4149f0:	cmp    al,0xff
  4149f2:	adc    al,0x99
  4149f4:	(bad)  
  4149f5:	jmp    FWORD PTR [ecx+0x0]
  4149f8:	adc    edi,DWORD PTR [ebx+0x14]
  4149fb:	add    ch,cl
  4149fd:	(bad)  
  4149fe:	inc    DWORD PTR [eax]
  414a00:	test   eax,0x322900
  414a05:	adc    ebx,0x0
  414a08:	xchg   ebp,eax
  414a09:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a0b:	jmp    FWORD PTR [ecx-0x1]
  414a0e:	(bad)  
  414a0f:	push   DWORD PTR ds:0xffe5b700
  414a15:	add    BYTE PTR [edx],ah
  414a17:	or     DWORD PTR [ebp+0x7b],0xffffffb7
  414a1b:	sbb    DWORD PTR [edx],0xffffffff
  414a1e:	mov    DWORD PTR [ecx+0x3349ffb7],ecx
  414a24:	add    bh,bh
  414a26:	sbb    bh,bh
  414a28:	or     eax,0xa6fffc28
  414a2d:	inc    DWORD PTR [ebx-0x5c00fc01]
  414a33:	(bad)  
  414a34:	(bad)  
  414a35:	(bad)  
  414a36:	in     al,dx
  414a37:	add    BYTE PTR [ecx+0x8ffab5e],dl
  414a3d:	add    bh,bh
  414a3f:	int3   
  414a40:	loop   0x414a41
  414a42:	push   edx
  414a43:	and    edi,edi
  414a45:	dec    DWORD PTR [edx+0x42d70b00]
  414a4b:	add    BYTE PTR [ecx],al
  414a4d:	mov    DWORD PTR [ecx-0x5fff7100],ecx
  414a53:	inc    DWORD PTR [eax]
  414a55:	add    cl,ch
  414a57:	push   DWORD PTR [esi+0x12]
  414a5a:	mov    ah,0x0
  414a5c:	pop    eax
  414a5d:	mov    esp,ecx
  414a5f:	add    BYTE PTR [edx-0x1],dh
  414a62:	xor    DWORD PTR [edi+edi*8+0x4bffc200],eax
  414a69:	xlat   BYTE PTR ds:[ebx]
  414a6a:	aam    0x83
  414a6c:	cmc    
  414a6d:	add    bh,bh
  414a6f:	push   ebx
  414a71:	dec    DWORD PTR [edx+0x1d8300c9]
  414a77:	sub    DWORD PTR ds:0x43ccd21d,0xffffffff
  414a7e:	(bad)  
  414a7f:	push   DWORD PTR [ebp+0x0]
  414a82:	fcmovnb st,st(6)
  414a84:	mov    edi,edi
  414a86:	or     bh,bh
  414a88:	or     DWORD PTR [esp+eax*4-0x1],esp
  414a8c:	mov    cl,0x0
  414a8e:	inc    DWORD PTR [ebx-0x3b870015]
  414a94:	int3   
  414a95:	(bad)  
  414a96:	fiadd  WORD PTR [eax]
  414a98:	push   edx
  414a99:	psrlw  mm7,mm7
  414a9c:	arpl   di,di
  414a9e:	int3   
  414a9f:	add    BYTE PTR [ebx-0x1],al
  414aa2:	stc    
  414aa3:	data16 (bad) 
  414aa5:	dec    DWORD PTR [edx-0x2639bb00]
  414aab:	add    BYTE PTR [ebx+eax*4],bh
  414aae:	add    BYTE PTR [eax],al
  414ab0:	sbb    DWORD PTR [eax],eax
  414ab2:	lods   al,BYTE PTR ds:[esi]
  414ab3:	fadd   QWORD PTR [ebx+0x49002300]
  414ab9:	xor    al,0x67
  414abb:	call   FWORD PTR [ecx-0x51ff0001]
  414ac1:	int3   
  414ac2:	in     eax,0x83
  414ac4:	inc    DWORD PTR [eax]
  414ac6:	aam    0xff
  414ac8:	or     eax,0x58003f7e
  414acd:	add    bh,bh
  414acf:	(bad)  
  414ad0:	jns    0x414a55
  414ad2:	fisttp WORD PTR [esi]
  414ad4:	inc    DWORD PTR [eax]
  414ad6:	test   eax,0xd1737200
  414adb:	add    BYTE PTR [edx+0x0],dh
  414ade:	add    BYTE PTR [eax],al
  414ae0:	pop    eax
  414ae1:	call   DWORD PTR [ebp-0x55]
  414ae4:	(bad)  
  414ae5:	push   DWORD PTR [edi]
  414ae7:	(bad)  
  414ae8:	call   0x5a412792
  414aed:	int3   
  414aee:	mov    edi,edi
  414af0:	add    bh,bh
  414af2:	mov    eax,0x1483cc4c
  414af7:	add    BYTE PTR [ebx],ah
  414af9:	jmp    0xffaed497
  414afe:	(bad)  
  414aff:	dec    esi
  414b01:	add    BYTE PTR [ecx],ch
  414b03:	add    eax,DWORD PTR [eax]
  414b05:	or     DWORD PTR [ecx-0x1],0xe
  414b09:	sub    bh,cl
  414b0b:	int3   
  414b0c:	lods   al,BYTE PTR ds:[esi]
  414b0d:	inc    DWORD PTR [eax]
  414b0f:	add    BYTE PTR [esi-0x1],cl
  414b12:	and    ebp,DWORD PTR [ebp+0xad00ff]
  414b18:	pop    es
  414b19:	imul   ecx,DWORD PTR [ebx],0xffffff89
  414b1c:	pop    esi
  414b1d:	add    bh,bh
  414b1f:	call   FWORD PTR [edi]
  414b21:	add    BYTE PTR [ebp+0x73],al
  414b24:	inc    DWORD PTR [eax]
  414b26:	mov    eax,0x51d6ee00
  414b2b:	jmp    FWORD PTR [edi+edi*8]
  414b2e:	inc    DWORD PTR [eax]
  414b30:	fisttp QWORD PTR [ecx-0x7a45]
  414b36:	push   0x0
  414b38:	jge    0x414b5d
  414b3a:	pop    ebx
  414b3b:	add    dl,al
  414b3d:	inc    DWORD PTR [eax]
  414b3f:	int3   
  414b40:	mov    edi,?
  414b42:	xchg   esp,eax
  414b43:	xor    DWORD PTR [eax],eax
  414b45:	add    BYTE PTR [ebx],bl
  414b47:	call   FWORD PTR [ebx+0x44]
  414b4a:	adc    ecx,esp
  414b4c:	xor    al,0xff
  414b4e:	inc    DWORD PTR [ebx-0x70d376ce]
  414b54:	inc    DWORD PTR [eax]
  414b56:	sar    bh,cl
  414b58:	je     0x414b7a
  414b5a:	pusha  
  414b5b:	(bad)  
  414b5c:	std    
  414b5d:	add    bh,bh
  414b5f:	call   FWORD PTR [edx]
  414b61:	add    BYTE PTR [esi-0x1476ff6f],dl
  414b67:	adc    esp,0x79
  414b6a:	push   edi
  414b6b:	add    BYTE PTR [edx-0x1],ah
  414b6e:	add    DWORD PTR [eax],0x14
  414b71:	int3   
  414b72:	mov    al,0x2d
  414b74:	int3   
  414b75:	adc    DWORD PTR [ebx+0x1740b5ff],0x0
  414b7c:	pop    ebx
  414b7d:	add    DWORD PTR [eax],0x0
  414b80:	pop    esp
  414b81:	jmp    DWORD PTR [ebx+ecx*8-0xa0ff7d]
  414b88:	gs sbb al,0x33
  414b8b:	add    BYTE PTR [ecx],bh
  414b8d:	dec    DWORD PTR [ecx-0x2aff2134]
  414b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b94:	dec    DWORD PTR [ecx-0x447200a7]
  414b9a:	jmp    0x414b9c
  414b9c:	dec    esp
  414b9d:	dec    esp
  414b9f:	add    dh,ah
  414ba1:	add    BYTE PTR ds:0x1289ffeb,bl
  414ba7:	add    BYTE PTR [esi],dh
  414ba9:	xchg   edx,eax
  414baa:	inc    ecx
  414bab:	add    BYTE PTR [eax+0x0],ch
  414bae:	mov    edi,edi
  414bb0:	add    BYTE PTR [eax],0x1e
  414bb3:	test   bh,bh
  414bb5:	mov    DWORD PTR [edx],ecx
  414bb7:	dec    DWORD PTR [ecx+0xccf0d6]
  414bbd:	inc    DWORD PTR [eax]
  414bbf:	jmp    FWORD PTR [ebx]
  414bc1:	jmp    DWORD PTR [ebp+0x4ff00ee]
  414bc7:	inc    DWORD PTR [eax+0x5ecc07a6]
  414bcd:	cmp    edi,0xffffffff
  414bd0:	sub    eax,0x8300b700
  414bd5:	mov    DWORD PTR [ebx-0x7d],esp
  414bd8:	add    cl,BYTE PTR [edx-0xc43377]
  414bde:	cmp    edi,0xffffff9a
  414be1:	dec    esi
  414be3:	inc    esp
  414be4:	(bad)  
  414be5:	call   FWORD PTR [edi+edi*8+0xd9f1e1]
  414bec:	in     al,0x0
  414bee:	(bad)  
  414bef:	(bad)  
  414bf0:	(bad)  
  414bf2:	xor    DWORD PTR [esi],ebp
  414bf4:	add    BYTE PTR [eax],al
  414bf6:	inc    DWORD PTR [eax]
  414bf8:	or     eax,0xd5ff0edd
  414bfd:	add    bh,bh
  414bff:	add    BYTE PTR [esi],ch
  414c01:	add    BYTE PTR [ebx-0x45],ah
  414c04:	add    BYTE PTR [eax],al
  414c06:	cli    
  414c07:	jmp    FWORD PTR [ebp-0x69]
  414c0a:	pop    esi
  414c0b:	add    BYTE PTR [edi+edi*8-0x337b0034],dh
  414c12:	xchg   edx,eax
  414c13:	into   
  414c14:	add    BYTE PTR [eax],al
  414c16:	(bad)  
  414c17:	call   esi
  414c19:	popa   
  414c1a:	mov    ds:0xffccd483,al
  414c1f:	inc    DWORD PTR [ebp-0x78dd01]
  414c25:	add    ah,ah
  414c27:	call   DWORD PTR [ebp-0x7a]
  414c2a:	stos   DWORD PTR es:[edi],eax
  414c2b:	push   DWORD PTR [ecx]
  414c2d:	inc    DWORD PTR [ebx-0x687ccb00]
  414c33:	mov    ch,0x0
  414c35:	cmp    DWORD PTR [edi+edi*8],0xffffffca
  414c39:	or     BYTE PTR [ebx-0x7d],ch
  414c3c:	sbb    eax,0x5300ffff
  414c41:	cmp    DWORD PTR [edi],0xffffffd3
  414c44:	add    BYTE PTR [ebx+0x256e006c],al
  414c4a:	jno    0x414bd5
  414c4c:	out    0x0,al
  414c4e:	add    ah,cl
  414c50:	ret    0x22ff
  414c53:	jbe    0x414bd8
  414c55:	jmp    DWORD PTR [edi+0x1e3f4383]
  414c5b:	int3   
  414c5c:	(bad)  
  414c5e:	cmp    edi,0xffffffde
  414c61:	add    BYTE PTR [edx],dl
  414c63:	add    ecx,DWORD PTR [ecx-0x1e335e00]
  414c69:	ja     0x414c4e
  414c6b:	dec    DWORD PTR [eax]
  414c6d:	add    bh,bh
  414c6f:	(bad)  
  414c70:	fild   DWORD PTR [ebx-0xff54e8]
  414c76:	xchg   ebx,eax
  414c77:	int3   
  414c78:	mov    ecx,0x5fff17b1
  414c7d:	add    BYTE PTR [eax],al
  414c7f:	call   FWORD PTR [edx]
  414c81:	inc    ebx
  414c83:	cmp    ecx,esp
  414c85:	jmp    FWORD PTR [ecx-0x1]
  414c88:	pop    edx
  414c89:	mov    BYTE PTR [eax+0x0],al
  414c8c:	add    eax,0x10000ff
  414c91:	inc    DWORD PTR [ebx]
  414c93:	mov    BYTE PTR [ebx+0x34fff8ff],0xb4
  414c9a:	jecxz  0x414c9b
  414c9c:	or     edi,edi
  414c9e:	add    BYTE PTR [eax],al
  414ca0:	idiv   bh
  414ca2:	xor    esp,DWORD PTR [edi+edi*8]
  414ca5:	add    bl,bh
  414ca7:	dec    DWORD PTR [edx]
  414ca9:	lds    ecx,FWORD PTR [edi-0x1]
  414cac:	mov    cl,0x83
  414cae:	(bad)  
  414caf:	inc    esp
  414cb1:	sub    DWORD PTR [esi+0x683ff9c],0xffffffff
  414cb8:	das    
  414cb9:	call   0xd4c92
  414cbe:	(bad)  
  414cbf:	(bad)  
  414cc0:	jmp    0x51ff:0x17ec00
  414cc7:	int3   
  414cc8:	cmp    bl,BYTE PTR [ebx+0x76]
  414ccb:	mov    DWORD PTR [edi],ebp
  414ccd:	inc    DWORD PTR [ebx-0x42ff9201]
  414cd3:	sub    eax,0x7a83ff
  414cd8:	ins    DWORD PTR es:[edi],dx
  414cd9:	bound  ecx,QWORD PTR [edi-0x1]
  414cdc:	inc    DWORD PTR gs:[ebx-0x37007101]
  414ce3:	mov    ebp,0x890e00ff
  414ce8:	mov    dl,0x6b
  414cea:	aad    0xff
  414cec:	adc    eax,DWORD PTR [eax]
  414cee:	(bad)  
  414cef:	inc    DWORD PTR [ecx+ecx*4+0x19]
  414cf3:	xchg   ah,cl
  414cf5:	add    al,ah
  414cf7:	add    BYTE PTR [ecx+0x42cc100e],ch
  414cfd:	add    DWORD PTR [eax],0xffffffff
  414d00:	rol    BYTE PTR [eax],0xe3
  414d03:	mov    ah,cl
  414d05:	jmp    DWORD PTR [ebp-0x7d]
  414d08:	daa    
  414d09:	test   eax,0xff1bff74
  414d0e:	add    BYTE PTR [eax],al
  414d10:	xchg   BYTE PTR [eax],al
  414d12:	inc    esp
  414d13:	cmp    BYTE PTR [ecx-0x11ff3200],cl
  414d19:	ficom  DWORD PTR [edi+edi*8-0x33f1]
  414d20:	and    DWORD PTR fs:[edx-0x3a],0xffffffcc
  414d25:	add    BYTE PTR [eax],cl
  414d27:	add    BYTE PTR [ebp-0x7e],cl
  414d2a:	xchg   edx,eax
  414d2b:	inc    DWORD PTR [esp+ecx*8]
  414d2e:	int3   
  414d2f:	add    BYTE PTR [edi+edi*8],al
  414d32:	dec    ebp
  414d33:	jmp    0x1b84:0x8c0089
  414d3a:	cmp    bh,0x82
  414d3d:	add    ah,cl
  414d3f:	jmp    esp
  414d41:	add    BYTE PTR ds:0x55ffffd2,ah
  414d47:	call   ebx
  414d49:	or     esi,DWORD PTR [eax+0x0]
  414d4c:	aam    0xff
  414d4e:	add    DWORD PTR [eax],0xffffffc8
  414d51:	add    BYTE PTR [esi+0x54ffff90],ah
  414d57:	jmp    FWORD PTR [ecx+0x27cc7042]
  414d5d:	int3   
  414d5e:	(bad)  
  414d5f:	dec    DWORD PTR [ecx-0xfbf77]
  414d65:	call   DWORD PTR [edi+edi*8-0xff3301]
  414d6c:	add    DWORD PTR [eax],0xffffffff
  414d6f:	add    DWORD PTR [ebx+0x575610ec],0x6a
  414d76:	add    bh,bh
  414d78:	adc    eax,0x44501c
  414d7d:	mov    ecx,DWORD PTR ds:0x448d04
  414d83:	mov    eax,DWORD PTR [esp+0x1c]
  414d87:	mov    DWORD PTR [esp+0x8],0x14
  414d8f:	mov    DWORD PTR [esp+0xc],0xa4
  414d97:	mov    DWORD PTR [esp+0x10],0x23
  414d9f:	mov    DWORD PTR [esp+0x14],0x6c
  414da7:	add    ecx,0x1aa40
  414dad:	mov    esi,0xbf
  414db2:	movzx  edx,BYTE PTR [eax+0x7]
  414db6:	movzx  edi,WORD PTR [eax+0x4]
  414dba:	shl    edx,0x10
  414dbd:	add    edx,edi
  414dbf:	movzx  edi,BYTE PTR [eax+0x2]
  414dc3:	shl    edx,0x8
  414dc6:	add    edx,edi
  414dc8:	mov    DWORD PTR ds:0x448cf0,edx
  414dce:	mov    edi,0xcecae216
  414dd3:	sub    edi,DWORD PTR ds:0x448d00
  414dd9:	add    ecx,0x10
  414ddc:	xor    edi,edx
  414dde:	mov    DWORD PTR [ecx-0x10],edi
  414de1:	movzx  edx,WORD PTR [eax+0xc]
  414de5:	movzx  edi,WORD PTR [eax+0x8]
  414de9:	shl    edx,0x10
  414dec:	add    edx,edi
  414dee:	mov    DWORD PTR ds:0x448cf0,edx
  414df4:	mov    edi,0xcecae216
  414df9:	sub    edi,DWORD PTR ds:0x448d00
  414dff:	add    eax,0x20
  414e02:	xor    edi,edx
  414e04:	mov    DWORD PTR [ecx-0xc],edi
  414e07:	movzx  edx,BYTE PTR [eax-0x9]
  414e0b:	movzx  edi,WORD PTR [eax-0xc]
  414e0f:	shl    edx,0x10
  414e12:	add    edx,edi
  414e14:	movzx  edi,BYTE PTR [eax-0xe]
  414e18:	shl    edx,0x8
  414e1b:	add    edx,edi
  414e1d:	mov    DWORD PTR ds:0x448cf0,edx
  414e23:	mov    edi,0xcecae216
  414e28:	sub    edi,DWORD PTR ds:0x448d00
  414e2e:	xor    edi,edx
  414e30:	mov    DWORD PTR [ecx-0x8],edi
  414e33:	movzx  edx,WORD PTR [eax-0x4]
  414e37:	movzx  edi,WORD PTR [eax-0x8]
  414e3b:	shl    edx,0x10
  414e3e:	add    edx,edi
  414e40:	mov    edi,0xcecae216
  414e45:	sub    edi,DWORD PTR ds:0x448d00
  414e4b:	mov    DWORD PTR ds:0x448cf0,edx
  414e51:	xor    edi,edx
  414e53:	dec    esi
  414e54:	mov    DWORD PTR [ecx-0x4],edi
  414e57:	jne    0x414db2
  414e5d:	movzx  edx,BYTE PTR [eax+0x7]
  414e61:	movzx  esi,WORD PTR [eax+0x4]
  414e65:	movzx  eax,BYTE PTR [eax+0x2]
  414e69:	shl    edx,0x10
  414e6c:	add    edx,esi
  414e6e:	mov    esi,DWORD PTR [esp+0x20]
  414e72:	shl    edx,0x8
  414e75:	add    edx,eax
  414e77:	mov    eax,ds:0x448d00
  414e7c:	add    eax,0xcec2de4a
  414e81:	xor    eax,edx
  414e83:	mov    DWORD PTR ds:0x448cf0,edx
  414e89:	push   ebx
  414e8a:	mov    DWORD PTR [ecx],eax
  414e8c:	mov    edi,DWORD PTR ds:0x448d04
  414e92:	push   ebp
  414e93:	mov    ebp,DWORD PTR ds:0x445064
  414e99:	add    edi,0x1b634
  414e9f:	add    esi,0x4
  414ea2:	mov    ebx,0x2c7
  414ea7:	jmp    0x414eb0
  414ea9:	lea    esp,[esp+0x0]
  414eb0:	movzx  eax,BYTE PTR [esi+0x2]
  414eb4:	movzx  ecx,BYTE PTR [esi]
  414eb7:	movzx  edx,WORD PTR [esi-0x2]
  414ebb:	shl    eax,0x8
  414ebe:	add    eax,ecx
  414ec0:	mov    ecx,DWORD PTR ds:0x448d00
  414ec6:	shl    eax,0x10
  414ec9:	add    eax,edx
  414ecb:	xor    ecx,eax
  414ecd:	xor    ecx,0xe841ae15
  414ed3:	mov    ds:0x448cf0,eax
  414ed8:	push   0x9
  414eda:	mov    DWORD PTR [edi],ecx
  414edc:	call   ebp
  414ede:	add    edi,0x4
  414ee1:	add    esi,0x8
  414ee4:	dec    ebx
  414ee5:	jne    0x414eb0
  414ee7:	mov    eax,ds:0x448d04
  414eec:	mov    edx,DWORD PTR ds:0x4480c4
  414ef2:	add    eax,0x1c150
  414ef7:	lea    esi,[ebx+0x33]
  414efa:	lea    ebx,[ebx+0x0]
  414f00:	movzx  ecx,BYTE PTR [edx+0x9]
  414f04:	movzx  edi,BYTE PTR [edx+0x6]
  414f08:	movzx  edx,WORD PTR [edx+0x3]
  414f0c:	shl    ecx,0x8
  414f0f:	add    ecx,edi
  414f11:	shl    ecx,0x10
  414f14:	add    ecx,edx
  414f16:	mov    edx,DWORD PTR ds:0x448d00
  414f1c:	sub    edx,0x401e6
  414f22:	neg    edx
  414f24:	sbb    edx,edx
  414f26:	and    edx,0x7e6f1e28
  414f2c:	add    edx,0x81912eaf
  414f32:	xor    edx,ecx
  414f34:	mov    DWORD PTR ds:0x448cf0,ecx
  414f3a:	mov    DWORD PTR [eax],edx
  414f3c:	mov    edx,DWORD PTR ds:0x4480c4
  414f42:	movzx  ecx,WORD PTR [edx+0xd]
  414f46:	movzx  edx,WORD PTR [edx+0xa]
  414f4a:	shl    ecx,0x10
  414f4d:	add    ecx,edx
  414f4f:	mov    edx,DWORD PTR ds:0x448d00
  414f55:	add    edx,0x818d2cc9
  414f5b:	xor    edx,ecx
  414f5d:	mov    DWORD PTR ds:0x448cf0,ecx
  414f63:	mov    DWORD PTR [eax+0x4],edx
  414f66:	mov    edx,DWORD PTR ds:0x4480c4
  414f6c:	add    edx,0x10
  414f6f:	mov    DWORD PTR ds:0x4480c4,edx
  414f75:	movzx  ecx,BYTE PTR [edx+0x9]
  414f79:	movzx  edi,BYTE PTR [edx+0x6]
  414f7d:	movzx  edx,WORD PTR [edx+0x3]
  414f81:	shl    ecx,0x8
  414f84:	add    ecx,edi
  414f86:	shl    ecx,0x10
  414f89:	add    ecx,edx
  414f8b:	mov    edx,DWORD PTR ds:0x448d00
  414f91:	sub    edx,0x401e6
  414f97:	neg    edx
  414f99:	sbb    edx,edx
  414f9b:	and    edx,0x7e6f1e28
  414fa1:	add    edx,0x81912eaf
  414fa7:	xor    edx,ecx
  414fa9:	mov    DWORD PTR ds:0x448cf0,ecx
  414faf:	mov    DWORD PTR [eax+0x8],edx
  414fb2:	mov    edx,DWORD PTR ds:0x4480c4
  414fb8:	movzx  ecx,WORD PTR [edx+0xd]
  414fbc:	movzx  edx,WORD PTR [edx+0xa]
  414fc0:	shl    ecx,0x10
  414fc3:	add    ecx,edx
  414fc5:	mov    edx,DWORD PTR ds:0x448d00
  414fcb:	add    edx,0x818d2cc9
  414fd1:	xor    edx,ecx
  414fd3:	mov    DWORD PTR ds:0x448cf0,ecx
  414fd9:	mov    DWORD PTR [eax+0xc],edx
  414fdc:	mov    edx,DWORD PTR ds:0x4480c4
  414fe2:	add    edx,0x10
  414fe5:	mov    DWORD PTR ds:0x4480c4,edx
  414feb:	movzx  ecx,BYTE PTR [edx+0x9]
  414fef:	movzx  edi,BYTE PTR [edx+0x6]
  414ff3:	movzx  edx,WORD PTR [edx+0x3]
  414ff7:	shl    ecx,0x8
  414ffa:	add    ecx,edi
  414ffc:	shl    ecx,0x10
  414fff:	add    ecx,edx
  415001:	mov    edx,DWORD PTR ds:0x448d00
  415007:	sub    edx,0x401e6
  41500d:	neg    edx
  41500f:	sbb    edx,edx
  415011:	and    edx,0x7e6f1e28
  415017:	add    edx,0x81912eaf
  41501d:	xor    edx,ecx
  41501f:	mov    DWORD PTR ds:0x448cf0,ecx
  415025:	mov    DWORD PTR [eax+0x10],edx
  415028:	mov    edx,DWORD PTR ds:0x4480c4
  41502e:	movzx  ecx,WORD PTR [edx+0xd]
  415032:	movzx  edx,WORD PTR [edx+0xa]
  415036:	shl    ecx,0x10
  415039:	add    ecx,edx
  41503b:	mov    edx,DWORD PTR ds:0x448d00
  415041:	mov    DWORD PTR ds:0x448cf0,ecx
  415047:	add    edx,0x818d2cc9
  41504d:	xor    edx,ecx
  41504f:	mov    DWORD PTR [eax+0x14],edx
  415052:	mov    edx,DWORD PTR ds:0x4480c4
  415058:	add    edx,0x10
  41505b:	mov    DWORD PTR ds:0x4480c4,edx
  415061:	movzx  ecx,BYTE PTR [edx+0x9]
  415065:	movzx  edi,BYTE PTR [edx+0x6]
  415069:	movzx  edx,WORD PTR [edx+0x3]
  41506d:	shl    ecx,0x8
  415070:	add    ecx,edi
  415072:	shl    ecx,0x10
  415075:	add    ecx,edx
  415077:	mov    edx,DWORD PTR ds:0x448d00
  41507d:	sub    edx,0x401e6
  415083:	neg    edx
  415085:	sbb    edx,edx
  415087:	and    edx,0x7e6f1e28
  41508d:	add    edx,0x81912eaf
  415093:	xor    edx,ecx
  415095:	mov    DWORD PTR ds:0x448cf0,ecx
  41509b:	mov    DWORD PTR [eax+0x18],edx
  41509e:	mov    edx,DWORD PTR ds:0x4480c4
  4150a4:	movzx  ecx,WORD PTR [edx+0xd]
  4150a8:	movzx  edx,WORD PTR [edx+0xa]
  4150ac:	shl    ecx,0x10
  4150af:	add    ecx,edx
  4150b1:	mov    edx,DWORD PTR ds:0x448d00
  4150b7:	add    edx,0x818d2cc9
  4150bd:	xor    edx,ecx
  4150bf:	mov    DWORD PTR ds:0x448cf0,ecx
  4150c5:	mov    DWORD PTR [eax+0x1c],edx
  4150c8:	mov    edx,DWORD PTR ds:0x4480c4
  4150ce:	add    edx,0x10
  4150d1:	mov    DWORD PTR ds:0x4480c4,edx
  4150d7:	movzx  ecx,BYTE PTR [edx+0x9]
  4150db:	movzx  edi,BYTE PTR [edx+0x6]
  4150df:	movzx  edx,WORD PTR [edx+0x3]
  4150e3:	shl    ecx,0x8
  4150e6:	add    ecx,edi
  4150e8:	shl    ecx,0x10
  4150eb:	add    ecx,edx
  4150ed:	mov    edx,DWORD PTR ds:0x448d00
  4150f3:	sub    edx,0x401e6
  4150f9:	neg    edx
  4150fb:	sbb    edx,edx
  4150fd:	and    edx,0x7e6f1e28
  415103:	add    edx,0x81912eaf
  415109:	xor    edx,ecx
  41510b:	mov    DWORD PTR ds:0x448cf0,ecx
  415111:	mov    DWORD PTR [eax+0x20],edx
  415114:	mov    edx,DWORD PTR ds:0x4480c4
  41511a:	movzx  ecx,WORD PTR [edx+0xd]
  41511e:	movzx  edx,WORD PTR [edx+0xa]
  415122:	shl    ecx,0x10
  415125:	add    ecx,edx
  415127:	mov    edx,DWORD PTR ds:0x448d00
  41512d:	add    edx,0x818d2cc9
  415133:	xor    edx,ecx
  415135:	mov    DWORD PTR ds:0x448cf0,ecx
  41513b:	mov    DWORD PTR [eax+0x24],edx
  41513e:	mov    edx,DWORD PTR ds:0x4480c4
  415144:	add    edx,0x10
  415147:	add    eax,0x28
  41514a:	dec    esi
  41514b:	mov    DWORD PTR ds:0x4480c4,edx
  415151:	jne    0x414f00
  415157:	mov    eax,ds:0x448d04
  41515c:	mov    edx,DWORD PTR ds:0x4480c8
  415162:	add    eax,0x1c948
  415167:	mov    esi,0x55
  41516c:	lea    esp,[esp+0x0]
  415170:	movzx  ecx,WORD PTR [edx+0x6]
  415174:	movzx  edx,WORD PTR [edx+0x3]
  415178:	shl    ecx,0x10
  41517b:	add    ecx,edx
  41517d:	mov    DWORD PTR ds:0x448cf0,ecx
  415183:	mov    edx,0x15ef3a0c
  415188:	sub    edx,DWORD PTR ds:0x448d00
  41518e:	add    eax,0x18
  415191:	xor    edx,ecx
  415193:	mov    DWORD PTR [eax-0x18],edx
  415196:	mov    edx,DWORD PTR ds:0x4480c8
  41519c:	add    edx,0x8
  41519f:	mov    DWORD PTR ds:0x4480c8,edx
  4151a5:	movzx  ecx,WORD PTR [edx+0x6]
  4151a9:	movzx  edx,WORD PTR [edx+0x3]
  4151ad:	shl    ecx,0x10
  4151b0:	add    ecx,edx
  4151b2:	mov    DWORD PTR ds:0x448cf0,ecx
  4151b8:	mov    edx,0x15ef3a0c
  4151bd:	sub    edx,DWORD PTR ds:0x448d00
  4151c3:	xor    edx,ecx
  4151c5:	mov    DWORD PTR [eax-0x14],edx
  4151c8:	mov    edx,DWORD PTR ds:0x4480c8
  4151ce:	add    edx,0x8
  4151d1:	mov    DWORD PTR ds:0x4480c8,edx
  4151d7:	movzx  ecx,WORD PTR [edx+0x6]
  4151db:	movzx  edx,WORD PTR [edx+0x3]
  4151df:	shl    ecx,0x10
  4151e2:	add    ecx,edx
  4151e4:	mov    DWORD PTR ds:0x448cf0,ecx
  4151ea:	mov    edx,0x15ef3a0c
  4151ef:	sub    edx,DWORD PTR ds:0x448d00
  4151f5:	xor    edx,ecx
  4151f7:	mov    DWORD PTR [eax-0x10],edx
  4151fa:	mov    edx,DWORD PTR ds:0x4480c8
  415200:	add    edx,0x8
  415203:	mov    DWORD PTR ds:0x4480c8,edx
  415209:	movzx  ecx,WORD PTR [edx+0x6]
  41520d:	movzx  edx,WORD PTR [edx+0x3]
  415211:	shl    ecx,0x10
  415214:	add    ecx,edx
  415216:	mov    DWORD PTR ds:0x448cf0,ecx
  41521c:	mov    edx,0x15ef3a0c
  415221:	sub    edx,DWORD PTR ds:0x448d00
  415227:	xor    edx,ecx
  415229:	mov    DWORD PTR [eax-0xc],edx
  41522c:	mov    edx,DWORD PTR ds:0x4480c8
  415232:	add    edx,0x8
  415235:	mov    DWORD PTR ds:0x4480c8,edx
  41523b:	movzx  ecx,WORD PTR [edx+0x6]
  41523f:	movzx  edx,WORD PTR [edx+0x3]
  415243:	shl    ecx,0x10
  415246:	add    ecx,edx
  415248:	mov    DWORD PTR ds:0x448cf0,ecx
  41524e:	mov    edx,0x15ef3a0c
  415253:	sub    edx,DWORD PTR ds:0x448d00
  415259:	xor    edx,ecx
  41525b:	mov    DWORD PTR [eax-0x8],edx
  41525e:	mov    edx,DWORD PTR ds:0x4480c8
  415264:	add    edx,0x8
  415267:	mov    DWORD PTR ds:0x4480c8,edx
  41526d:	movzx  ecx,WORD PTR [edx+0x6]
  415271:	movzx  edx,WORD PTR [edx+0x3]
  415275:	shl    ecx,0x10
  415278:	add    ecx,edx
  41527a:	mov    edx,0x15ef3a0c
  41527f:	sub    edx,DWORD PTR ds:0x448d00
  415285:	mov    DWORD PTR ds:0x448cf0,ecx
  41528b:	xor    edx,ecx
  41528d:	mov    DWORD PTR [eax-0x4],edx
  415290:	mov    edx,DWORD PTR ds:0x4480c8
  415296:	add    edx,0x8
  415299:	dec    esi
  41529a:	mov    DWORD PTR ds:0x4480c8,edx
  4152a0:	jne    0x415170
  4152a6:	mov    esi,DWORD PTR ds:0x448d04
  4152ac:	mov    ebx,DWORD PTR ds:0x44505c
  4152b2:	add    esi,0x1d140
  4152b8:	mov    edi,0x2d1
  4152bd:	lea    ecx,[ecx+0x0]
  4152c0:	call   ebx
  4152c2:	mov    ecx,DWORD PTR ds:0x4480cc
  4152c8:	movzx  eax,WORD PTR [ecx+0x5]
  4152cc:	movzx  ecx,WORD PTR [ecx+0x1]
  4152d0:	shl    eax,0x10
  4152d3:	mov    edx,0x199fc656
  4152d8:	sub    edx,DWORD PTR ds:0x448d00
  4152de:	add    eax,ecx
  4152e0:	xor    edx,eax
  4152e2:	mov    ds:0x448cf0,eax
  4152e7:	mov    DWORD PTR [esi],edx
  4152e9:	add    DWORD PTR ds:0x4480cc,0x8
  4152f0:	add    esi,0x4
  4152f3:	dec    edi
  4152f4:	jne    0x4152c0
  4152f6:	mov    esi,DWORD PTR ds:0x448d04
  4152fc:	mov    ebx,DWORD PTR ds:0x445060
  415302:	mov    ecx,DWORD PTR ds:0x4480d0
  415308:	add    esi,0x1dc84
  41530e:	mov    edi,0x153
  415313:	movzx  eax,BYTE PTR [ecx+0x8]
  415317:	movzx  edx,BYTE PTR [ecx+0x4]
  41531b:	movzx  ecx,WORD PTR [ecx]
  41531e:	shl    eax,0x8
  415321:	add    eax,edx
  415323:	shl    eax,0x10
  415326:	add    eax,ecx
  415328:	mov    ds:0x448cf0,eax
  41532d:	mov    edx,0x24ebae98
  415332:	sub    edx,DWORD PTR ds:0x448d00
  415338:	add    esi,0x8
  41533b:	xor    edx,eax
  41533d:	mov    DWORD PTR [esi-0x8],edx
  415340:	mov    ecx,DWORD PTR ds:0x4480d0
  415346:	movzx  eax,WORD PTR [ecx+0xe]
  41534a:	movzx  ecx,WORD PTR [ecx+0xa]
  41534e:	shl    eax,0x10
  415351:	add    eax,ecx
  415353:	mov    edx,0x24ebae98
  415358:	sub    edx,DWORD PTR ds:0x448d00
  41535e:	mov    ds:0x448cf0,eax
  415363:	xor    edx,eax
  415365:	lea    eax,[esp+0x10]
  415369:	push   eax
  41536a:	mov    DWORD PTR [esi-0x4],edx
  41536d:	push   0x0
  41536f:	call   ebx
  415371:	mov    ecx,DWORD PTR ds:0x4480d0
  415377:	add    ecx,0x10
  41537a:	dec    edi
  41537b:	mov    DWORD PTR ds:0x4480d0,ecx
  415381:	jne    0x415313
  415383:	mov    eax,ds:0x448d04
  415388:	mov    edx,DWORD PTR ds:0x4480d4
  41538e:	pop    ebp
  41538f:	add    eax,0x1e71c
  415394:	lea    esi,[edi+0x47]
  415397:	pop    ebx
  415398:	jmp    0x4153a0
  41539a:	lea    ebx,[ebx+0x0]
  4153a0:	movzx  ecx,BYTE PTR [edx+0x6]
  4153a4:	movzx  edi,WORD PTR [edx+0x2]
  4153a8:	movzx  edx,BYTE PTR [edx]
  4153ab:	shl    ecx,0x10
  4153ae:	add    ecx,edi
  4153b0:	shl    ecx,0x8
  4153b3:	add    ecx,edx
  4153b5:	mov    DWORD PTR ds:0x448cf0,ecx
  4153bb:	mov    edx,0x49e4dd08
  4153c0:	sub    edx,DWORD PTR ds:0x448d00
  4153c6:	xor    edx,ecx
  4153c8:	mov    DWORD PTR [eax],edx
  4153ca:	mov    edx,DWORD PTR ds:0x4480d4
  4153d0:	add    edx,0x8
  4153d3:	mov    DWORD PTR ds:0x4480d4,edx
  4153d9:	movzx  ecx,BYTE PTR [edx+0x6]
  4153dd:	movzx  edi,WORD PTR [edx+0x2]
  4153e1:	movzx  edx,BYTE PTR [edx]
  4153e4:	shl    ecx,0x10
  4153e7:	add    ecx,edi
  4153e9:	shl    ecx,0x8
  4153ec:	add    ecx,edx
  4153ee:	mov    DWORD PTR ds:0x448cf0,ecx
  4153f4:	mov    edx,0x49e4dd08
  4153f9:	sub    edx,DWORD PTR ds:0x448d00
  4153ff:	xor    edx,ecx
  415401:	mov    DWORD PTR [eax+0x4],edx
  415404:	mov    edx,DWORD PTR ds:0x4480d4
  41540a:	add    edx,0x8
  41540d:	mov    DWORD PTR ds:0x4480d4,edx
  415413:	movzx  ecx,BYTE PTR [edx+0x6]
  415417:	movzx  edi,WORD PTR [edx+0x2]
  41541b:	movzx  edx,BYTE PTR [edx]
  41541e:	shl    ecx,0x10
  415421:	add    ecx,edi
  415423:	shl    ecx,0x8
  415426:	add    ecx,edx
  415428:	mov    DWORD PTR ds:0x448cf0,ecx
  41542e:	mov    edx,0x49e4dd08
  415433:	sub    edx,DWORD PTR ds:0x448d00
  415439:	xor    edx,ecx
  41543b:	mov    DWORD PTR [eax+0x8],edx
  41543e:	mov    edx,DWORD PTR ds:0x4480d4
  415444:	add    edx,0x8
  415447:	mov    DWORD PTR ds:0x4480d4,edx
  41544d:	movzx  ecx,BYTE PTR [edx+0x6]
  415451:	movzx  edi,WORD PTR [edx+0x2]
  415455:	movzx  edx,BYTE PTR [edx]
  415458:	shl    ecx,0x10
  41545b:	add    ecx,edi
  41545d:	shl    ecx,0x8
  415460:	add    ecx,edx
  415462:	mov    DWORD PTR ds:0x448cf0,ecx
  415468:	mov    edx,0x49e4dd08
  41546d:	sub    edx,DWORD PTR ds:0x448d00
  415473:	xor    edx,ecx
  415475:	mov    DWORD PTR [eax+0xc],edx
  415478:	mov    edx,DWORD PTR ds:0x4480d4
  41547e:	add    edx,0x8
  415481:	mov    DWORD PTR ds:0x4480d4,edx
  415487:	movzx  ecx,BYTE PTR [edx+0x6]
  41548b:	movzx  edi,WORD PTR [edx+0x2]
  41548f:	movzx  edx,BYTE PTR [edx]
  415492:	shl    ecx,0x10
  415495:	add    ecx,edi
  415497:	shl    ecx,0x8
  41549a:	add    ecx,edx
  41549c:	mov    DWORD PTR ds:0x448cf0,ecx
  4154a2:	mov    edx,0x49e4dd08
  4154a7:	sub    edx,DWORD PTR ds:0x448d00
  4154ad:	xor    edx,ecx
  4154af:	mov    DWORD PTR [eax+0x10],edx
  4154b2:	mov    edx,DWORD PTR ds:0x4480d4
  4154b8:	add    edx,0x8
  4154bb:	mov    DWORD PTR ds:0x4480d4,edx
  4154c1:	movzx  ecx,BYTE PTR [edx+0x6]
  4154c5:	movzx  edi,WORD PTR [edx+0x2]
  4154c9:	movzx  edx,BYTE PTR [edx]
  4154cc:	shl    ecx,0x10
  4154cf:	add    ecx,edi
  4154d1:	shl    ecx,0x8
  4154d4:	add    ecx,edx
  4154d6:	mov    edx,0x49e4dd08
  4154db:	sub    edx,DWORD PTR ds:0x448d00
  4154e1:	mov    DWORD PTR ds:0x448cf0,ecx
  4154e7:	xor    edx,ecx
  4154e9:	mov    DWORD PTR [eax+0x14],edx
  4154ec:	mov    edx,DWORD PTR ds:0x4480d4
  4154f2:	add    edx,0x8
  4154f5:	add    eax,0x18
  4154f8:	dec    esi
  4154f9:	mov    DWORD PTR ds:0x4480d4,edx
  4154ff:	jne    0x4153a0
  415505:	pop    edi
  415506:	pop    esi
  415507:	add    esp,0x10
  41550a:	ret    
  41550b:	int3   
  41550c:	int3   
  41550d:	int3   
  41550e:	int3   
  41550f:	int3   
  415510:	add    BYTE PTR [edx+0x3b83ff01],bl
  415516:	call   DWORD PTR [edx+0x20]
  415519:	ins    BYTE PTR es:[edi],dx
  41551a:	(bad)  
  41551b:	(bad)  
  41551c:	(bad)  
  41551d:	jmp    FWORD PTR [eax+edx*4-0xd55701]
  415524:	add    BYTE PTR [ebx-0x7d],ch
  415527:	xor    eax,0xe744
  41552c:	(bad)  
  41552d:	push   DWORD PTR [eax-0x55]
  415530:	int3   
  415531:	cmp    edx,DWORD PTR [eax-0x33860001]
  415537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415538:	mov    eax,ds:0xffffcc7b
  41553d:	jmp    DWORD PTR [ebx-0x30]
  415540:	inc    DWORD PTR [esi-0x5c]
  415543:	mov    DWORD PTR [eax],eax
  415545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415546:	add    dl,bl
  415548:	scas   eax,DWORD PTR es:[edi]
  415549:	pusha  
  41554a:	add    DWORD PTR [eax],0x0
  41554d:	dec    DWORD PTR [ecx]
  41554f:	and    DWORD PTR [eax],eax
  415551:	sbb    DWORD PTR [ebp-0x76fc0001],esi
  415557:	nop
  415558:	test   al,0x68
  41555a:	dec    DWORD PTR [ecx+0x7a78ff00]
  415560:	(bad)  
  415561:	cmp    bh,BYTE PTR [ebx+0x0]
  415564:	dec    eax
  415566:	jmp    DWORD PTR [esi]
  415568:	fadd   st(5),st
  41556a:	inc    DWORD PTR [eax]
  41556c:	cmp    edi,0xfffffff4
  41556f:	inc    ebp
  415570:	mov    DWORD PTR ds:0x60cccc1c,edx
  415576:	add    BYTE PTR [ebx-0x6c],bh
  415579:	mov    eax,DWORD PTR [ebx+0x12ffccff]
  41557f:	cmp    al,BYTE PTR [ebx+0xffe2b7]
  415585:	test   DWORD PTR [ebx-0x7c49205e],eax
  41558b:	int3   
  41558c:	add    BYTE PTR [ebx+0x3cffd220],al
  415592:	repz inc DWORD PTR [eax]
  415595:	test   al,0x83
  415597:	mov    ds,ebx
  415599:	pop    ecx
  41559a:	inc    DWORD PTR [ebx-0x5d38ff01]
  4155a0:	(bad)  
  4155a1:	fcmove st,st(1)
  4155a3:	add    BYTE PTR [eax],al
  4155a5:	aaa    
  4155a6:	or     DWORD PTR [ebx-0x6c],0x26
  4155aa:	add    bh,bh
  4155ac:	add    BYTE PTR [ebx+0x57ff16b0],al
  4155b2:	adc    BYTE PTR [ecx-0x29ff1900],cl
  4155b8:	test   BYTE PTR [ecx-0x1],al
  4155bb:	cmp    edi,0xffffffff
  4155be:	jnp    0x4155a6
  4155c0:	add    BYTE PTR [ebx+0x6a],al
  4155c3:	int3   
  4155c4:	push   DWORD PTR ds:0xaf36deff
  4155ca:	add    DWORD PTR [eax],0xffffffff
  4155cd:	or     DWORD PTR [ebp-0x3a],0x0
  4155d1:	jge    0x415640
  4155d3:	inc    DWORD PTR [ebx-0x325b0039]
  4155d9:	and    eax,0xffffff
  4155de:	mov    dh,0x37
  4155e0:	(bad)  
  4155e1:	cmp    esi,DWORD PTR [edx-0xe53301]
  4155e7:	and    bh,BYTE PTR [edx-0x3333ff32]
  4155ed:	jmp    FWORD PTR [eax]
  4155ef:	pop    ecx
  4155f0:	sub    DWORD PTR [edi-0x71ffffcd],0xffffffff
  4155f7:	aad    0x64
  4155f9:	test   DWORD PTR [ecx+0x4fff0089],ecx
  4155ff:	dec    ebx
  415600:	jmp    DWORD PTR [ebp+edi*2-0x1]
  415604:	call   FWORD PTR [ecx-0x1]
  415607:	js     0x415613
  415609:	mov    bh,bh
  41560b:	add    BYTE PTR [eax],al
  41560d:	sbb    DWORD PTR [edx-0x75477cd7],0xffffffff
  415614:	add    BYTE PTR [ebp-0x1],ah
  415617:	mov    cl,0xf7
  415619:	scas   al,BYTE PTR es:[edi]
  41561a:	add    BYTE PTR [eax],al
  41561c:	inc    DWORD PTR [eax]
  41561e:	repnz cmp edi,edi
  415621:	xor    al,0xc4
  415623:	int3   
  415624:	dec    ebx
  415626:	mov    DWORD PTR [ecx],esi
  415628:	sbb    al,0x3e
  41562a:	add    BYTE PTR [ecx-0x3ff8ff7d],cl
  415630:	(bad)  
  415631:	fidiv  WORD PTR [esi]
  415633:	add    DWORD PTR [eax],0xd
  415636:	sub    DWORD PTR [ecx+0xff858b],0xffffffff
  41563d:	sbb    DWORD PTR [ecx],0xffffffba
  415640:	cmp    edx,0xe
  415643:	inc    DWORD PTR [ebx-0x55a9ff38]
  415649:	addr16 (bad) 
  41564b:	(bad)  
  41564c:	inc    DWORD PTR [eax]
  41564e:	in     al,dx
  41564f:	cwde   
  415650:	inc    DWORD PTR [esi]
  415652:	cmp    cl,BYTE PTR [ecx+0x70ff7dff]
  415658:	fild   DWORD PTR [ecx]
  41565a:	add    bh,bh
  41565c:	add    DWORD PTR [eax],0x71
  41565f:	mov    ch,0xff
  415661:	push   cs
  415662:	xchg   esp,eax
  415663:	add    BYTE PTR [ecx+0x3c3cffaf],cl
  415669:	mov    bl,0x0
  41566b:	add    bh,bh
  41566d:	and    DWORD PTR [ebp-0x46],0xffffff89
  415671:	lods   al,BYTE PTR ds:[esi]
  415672:	mov    edi,?
  415674:	push   eax
  415676:	add    BYTE PTR ds:0x8346cb,ch
  41567c:	mov    esp,ecx
  41567e:	scas   eax,DWORD PTR es:[edi]
  41567f:	dec    esp
  415680:	add    BYTE PTR [ecx-0x3d],dh
  415683:	add    BYTE PTR [eax],al
  415685:	fild   WORD PTR [eax]
  415687:	jle    0x415666
  415689:	stos   BYTE PTR es:[edi],al
  41568a:	inc    DWORD PTR [eax]
  41568c:	(bad)  
  41568d:	push   DWORD PTR [ecx+esi*1-0x7c7bfe00]
  415694:	inc    DWORD PTR [edi+0x4ed7a1ff]
  41569a:	dec    esp
  41569c:	inc    DWORD PTR [ebx-0x2f00d91f]
  4156a2:	leave  
  4156a3:	dec    DWORD PTR [ecx-0x62bcff73]
  4156a9:	add    BYTE PTR [ebx+0x16ff0089],0x18
  4156b0:	jmp    FWORD PTR [edx-0xe7cff4f]
  4156b6:	add    ch,bl
  4156b8:	test   al,0x3
  4156ba:	cmp    edi,0xffffffff
  4156bd:	(bad)  
  4156be:	mov    eax,0x9d69ffa3
  4156c3:	int3   
  4156c4:	jmp    FWORD PTR ds:0x6cea7b00
  4156ca:	mov    edi,edi
  4156cc:	cmp    edi,0x47
  4156cf:	add    al,0x0
  4156d1:	cld    
  4156d2:	outs   dx,BYTE PTR ds:[esi]
  4156d3:	dec    DWORD PTR [ecx-0x5697ff04]
  4156d9:	push   0x89
  4156de:	inc    ecx
  4156df:	(bad)  
  4156e0:	jmp    FWORD PTR [ecx+edx*8-0x7cca0100]
  4156e7:	aas    
  4156e8:	pop    esp
  4156e9:	test   edi,edi
  4156eb:	inc    DWORD PTR [eax]
  4156ed:	(bad)  
  4156ee:	jp     0x4156b6
  4156f0:	add    BYTE PTR [ebx-0x17c7cc6],ch
  4156f6:	adc    DWORD PTR [edx+edx*1-0x35],0xffffffff
  4156fb:	add    DWORD PTR [eax],0xffffff83
  4156fe:	cwde   
  4156ff:	add    eax,0xcc38a189
  415704:	inc    edx
  415706:	call   DWORD PTR [eax+eax*8]
  415709:	xor    cl,BYTE PTR [ecx-0x6a007601]
  41570f:	ret    0x56ff
  415712:	cmp    edi,0xb689a400
  415718:	or     ebp,DWORD PTR [eax-0x100]
  41571e:	adc    bl,bl
  415720:	jmp    FWORD PTR [edx]
  415722:	into   
  415723:	add    BYTE PTR [ecx-0x20a0ffe6],cl
  415729:	dec    ebx
  41572a:	mov    DWORD PTR [eax],eax
  41572c:	add    bh,bh
  41572e:	enter  0x830a,0xe4
  415732:	lahf   
  415733:	add    DWORD PTR [ebx+0x28a6000c],0xffffffc5
  41573a:	inc    DWORD PTR [eax]
  41573c:	add    bh,bh
  41573e:	and    eax,DWORD PTR ds:0xff35ec00
  415744:	add    dl,bh
  415746:	add    BYTE PTR [ebx],dh
  415748:	(bad)
  41574b:	inc    DWORD PTR [eax]
  41574d:	add    BYTE PTR [ecx-0xa9600a7],dh
  415753:	inc    DWORD PTR [eax]
  415755:	inc    DWORD PTR [ebx-0xee111]
  41575b:	add    BYTE PTR [eax],al
  41575d:	add    BYTE PTR [edi+eiz*8-0x7c3c0d00],dh
  415764:	add    BYTE PTR [esi+0x59a5efcc],dh
  41576a:	add    BYTE PTR [ebx-0x75b7c01],al
  415770:	call   FWORD PTR [eax+0x63]
  415773:	(bad)  
  415774:	inc    DWORD PTR [edi+edi*8-0x2f]
  415778:	outs   dx,DWORD PTR ds:[esi]
  415779:	sub    esp,ecx
  41577b:	add    BYTE PTR [eax],al
  41577d:	add    dh,bh
  41577f:	mov    eax,ds:0xff1f8900
  415784:	mov    DWORD PTR [edx+0x6cdf50ff],esi
  41578a:	add    DWORD PTR [eax],0xffffff83
  41578d:	mov    DWORD PTR [ecx],esp
  41578f:	mov    edi,?
  415791:	in     al,0xda
  415793:	(bad)  
  415794:	push   DWORD PTR [esi+0x4fba7000]
  41579a:	inc    DWORD PTR [eax]
  41579c:	add    bh,bh
  41579e:	into   
  41579f:	dec    ebx
  4157a0:	add    DWORD PTR [ecx-0x2e],0xffffffff
  4157a4:	mov    DWORD PTR [edx],esp
  4157a6:	(bad)  
  4157a7:	call   0x41dbe1
  4157ac:	add    DWORD PTR [eax],0xffffffff
  4157af:	test   BYTE PTR [eax],0xea
  4157b2:	ja     0x4157b3
  4157b4:	push   DWORD PTR [edx-0x314fde01]
  4157ba:	inc    DWORD PTR [eax]
  4157bc:	add    BYTE PTR [ebx+0x4e00371d],al
  4157c2:	and    edi,edi
  4157c4:	jmp    FWORD PTR [eax+eax*1-0x338b0b3e]
  4157cb:	dec    esp
  4157cd:	push   DWORD PTR [ebx+0x73]
  4157d0:	inc    ecx
  4157d2:	adc    DWORD PTR [ebx+0x71ffd200],eax
  4157d8:	xchg   ebx,eax
  4157d9:	add    BYTE PTR [eax],0x0
  4157dc:	cmp    edi,0x29
  4157df:	in     al,0xff
  4157e1:	enter  0xe9,0xff
  4157e5:	rol    DWORD PTR [eax],0x41
  4157e8:	repnz nop
  4157ea:	add    bh,bh
  4157ec:	(bad)  
  4157ed:	inc    DWORD PTR [esi]
  4157ef:	or     al,0xff
  4157f1:	xchg   ebp,edx
  4157f3:	add    DWORD PTR [ebx+0x5dfe83b6],0x7
  4157fa:	inc    DWORD PTR [ebx+0x48d6ffff]
  415800:	mov    esi,ebx
  415802:	dec    ecx
  415803:	add    DWORD PTR [eax],0x3b
  415806:	int3   
  415807:	and    esi,DWORD PTR [edx]
  415809:	cmp    edi,0xffffffcc
  41580c:	dec    DWORD PTR [ecx-0x257c0343]
  415812:	call   0x72c8:0x894affff
  415819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41581a:	dec    esp
  41581c:	or     DWORD PTR [ecx+0xb8329ae],0x49
  415823:	dec    DWORD PTR [ecx+0x659aff30]
  415829:	add    BYTE PTR [ecx+0x5800ff83],cl
  41582f:	ror    DWORD PTR [ecx-0xfce5],cl
  415835:	and    DWORD PTR [eax],eax
  415837:	xor    DWORD PTR [esp+ecx*8-0x7d],0x790000ff
  41583f:	retf   0xfff
  415842:	aas    
  415843:	add    BYTE PTR [ebx+0x720cff60],al
  415849:	mov    esi,0xffcc89ff
  41584e:	xor    ch,BYTE PTR [edx-0x7c161200]
  415854:	call   FWORD PTR [edi-0x1]
  415857:	ins    DWORD PTR es:[edi],dx
  415858:	cmp    BYTE PTR [ecx+0x0],0xff
  41585c:	int3   
  41585d:	add    BYTE PTR [edx-0x2],bl
  415860:	dec    DWORD PTR [edx-0x4007cef]
  415866:	sbb    DWORD PTR [ebx],0xffffffa2
  415869:	xchg   esi,eax
  41586a:	cmp    edi,0x0
  41586d:	sub    DWORD PTR [eax+0x5f],0xffffff83
  415871:	dec    edi
  415872:	mov    BYTE PTR [eax],al
  415874:	call   FWORD PTR [ecx]
  415876:	int3   
  415877:	cmc    
  415878:	ss mov ecx,0xffffcc00
  41587e:	mov    ds:0x6134ff76,eax
  415883:	mov    edi,edi
  415885:	xor    eax,0xcda79b83
  41588a:	dec    esp
  41588c:	add    DWORD PTR [eax],0xffffff88
  41588f:	test   eax,0xfff368ff
  415894:	inc    DWORD PTR [ecx+0xe1977cc]
  41589a:	(bad)  
  41589b:	dec    DWORD PTR [ecx+0x282eff]
  4158a1:	pop    esi
  4158a2:	push   edi
  4158a3:	add    ah,cl
  4158a5:	fdivp  st(7),st
  4158a7:	mov    WORD PTR [edx-0xff6f],fs
  4158ad:	int3   
  4158ae:	das    
  4158af:	je     0x4158b1
  4158b1:	repnz aam 0x0
  4158b4:	add    ch,ch
  4158b6:	add    cl,al
  4158b8:	mov    edi,0xff890085
  4158bd:	add    BYTE PTR [edi-0x1f],bh
  4158c0:	mov    esi,ebp
  4158c2:	add    bh,bh
  4158c4:	inc    esp
  4158c6:	int3   
  4158c7:	nop
  4158c8:	sub    DWORD PTR [esi-0x7c0001],esp
  4158ce:	es push 0xffffffcc
  4158d1:	mul    edi
  4158d3:	inc    DWORD PTR [eax]
  4158d5:	cld    
  4158d6:	dec    DWORD PTR [eax+0x62]
  4158d9:	add    bh,bh
  4158db:	inc    DWORD PTR [ebx-0x8f7800]
  4158e1:	rcl    DWORD PTR [esi+0xca83ff],0x67
  4158e8:	stc    
  4158e9:	add    eax,0xff8383ff
  4158ee:	and    eax,DWORD PTR [eax+eax*1-0xff06b9]
  4158f5:	xor    BYTE PTR [eax],al
  4158f7:	shl    BYTE PTR [esi],cl
  4158f9:	aas    
  4158fa:	mov    DWORD PTR [ebx+0x6a95ff00],eax
  415900:	cmp    esp,0x41
  415903:	add    BYTE PTR [eax],al
  415905:	sbb    BYTE PTR [eax],al
  415907:	pusha  
  415908:	mov    ds:0x83a6,eax
  41590d:	add    BYTE PTR [ebx-0x31],bl
  415910:	push   DWORD PTR [edi-0x61]
  415913:	(bad)  
  415914:	inc    ebp
  415916:	add    dl,bl
  415918:	cmp    esp,DWORD PTR [ecx]
  41591a:	int3   
  41591b:	add    DWORD PTR [eax],0xffffffff
  41591e:	mov    dl,0x11
  415920:	(bad)  
  415921:	cld    
  415922:	ins    DWORD PTR es:[edi],dx
  415923:	dec    DWORD PTR [ecx-0x73f0fff2]
  415929:	pop    ecx
  41592a:	(bad)  
  41592b:	(bad)  
  41592c:	inc    DWORD PTR [eax]
  41592e:	push   esi
  41592f:	cdq    
  415930:	add    BYTE PTR [edi],ch
  415932:	loop   0x415900
  415934:	jmp    FWORD PTR [esi-0x1]
  415937:	mov    esi,?
  415939:	adc    eax,0xffffffff
  41593e:	inc    eax
  41593f:	push   ecx
  415940:	jmp    ecx
  415942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415943:	(bad)  
  415944:	push   DWORD PTR [edi+edi*8-0x8026d0]
  41594b:	(bad)  
  41594c:	dec    esp
  41594e:	push   ds
  41594f:	ds add bl,dl
  415952:	fwait
  415953:	add    DWORD PTR [eax],0xfffffff1
  415956:	(bad)  
  415957:	jmp    0x415939
  415959:	inc    ebp
  41595a:	or     DWORD PTR [ecx-0x1fd80000],0x0
  415961:	sahf   
  415962:	cmp    BYTE PTR [ebx+0x7eff77cc],al
  415968:	xchg   ebx,eax
  415969:	adc    eax,0xff8989ff
  41596e:	ret    0xff66
  415971:	jge    0x415945
  415973:	inc    DWORD PTR [ebx-0x1fdc0020]
  415979:	je     0x41597a
  41597b:	cmp    edi,0xffffffff
  41597e:	loope  0x4159ee
  415980:	sub    ecx,0x7e
  415983:	inc    DWORD PTR [eax]
  415985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415986:	dec    ecx
  415988:	fdivp  st(6),st
  41598a:	mov    edi,edi
  41598c:	add    BYTE PTR [ebx+0x20ff33c5],al
  415992:	add    edi,edi
  415994:	jmp    DWORD PTR [edx-0x1]
  415997:	nop
  415998:	mov    eax,0xffffde
  41599d:	add    BYTE PTR [esi-0x2d4e00ce],al
  4159a3:	inc    DWORD PTR [ebx-0x11c20068]
  4159a9:	mov    eax,ds:0x83ff0000
  4159ae:	push   ss
  4159af:	or     al,0xff
  4159b1:	aas    
  4159b2:	int3   
  4159b3:	int3   
  4159b4:	add    BYTE PTR [ebx+0x0],dh
  4159b7:	jecxz  0x415943
  4159b9:	push   0xffccccff
  4159be:	test   ebx,ebp
  4159c0:	add    DWORD PTR [ebp-0x28000039],0x0
  4159c7:	inc    esi
  4159c8:	dec    edi
  4159c9:	mov    edx,0xcc00ff
  4159ce:	sub    eax,0x7fe30010
  4159d3:	add    DWORD PTR [ebx+0x6f51ffc6],0x6
  4159da:	add    BYTE PTR [ebx-0x64077601],al
  4159e0:	inc    DWORD PTR [ecx]
  4159e2:	cmp    al,BYTE PTR [eax]
  4159e4:	add    cl,ch
  4159e6:	add    dl,dh
  4159e8:	in     al,0x97
  4159ea:	(bad)  
  4159eb:	(bad)  
  4159ec:	inc    DWORD PTR [eax]
  4159ee:	or     BYTE PTR [edx-0x7c97b700],0x83
  4159f5:	jbe    0x415980
  4159f7:	pop    edx
  4159f8:	aad    0x42
  4159fa:	add    bh,bh
  4159fc:	dec    DWORD PTR [ecx-0x4d7cb716]
  415a02:	adc    bh,bh
  415a04:	add    BYTE PTR [ebp-0x23e58e00],al
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	int3   
  415a0d:	call   edi
  415a0f:	pop    ecx
  415a10:	add    dh,bl
  415a12:	cmc    
  415a13:	int3   
  415a14:	jmp    FWORD PTR [eax]
  415a16:	inc    DWORD PTR [ebx+0x2]
  415a19:	mov    bl,0x89
  415a1b:	add    bh,bh
  415a1d:	add    BYTE PTR [eax-0x6c29ff91],bh
  415a23:	mov    edi,edi
  415a25:	pop    ebx
  415a26:	add    BYTE PTR [edi-0x3300a7d2],bh
  415a2c:	add    BYTE PTR [eax],al
  415a2e:	bnd jl 0x4159fd
  415a31:	pop    edx
  415a32:	retf   
  415a33:	inc    DWORD PTR [eax]
  415a35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a36:	sbb    edi,0x19
  415a39:	lock dec DWORD PTR [ecx-0x697f0001]
  415a40:	cmp    DWORD PTR [eax+0x61],0xffffff89
  415a44:	(bad)  
  415a45:	(bad)  
  415a46:	dec    DWORD PTR [ebp+0xffe21f]
  415a4c:	add    bh,bh
  415a4e:	sub    BYTE PTR [edx-0x7d],al
  415a51:	push   ecx
  415a52:	(bad)  
  415a55:	sub    BYTE PTR [ebx-0x66e04b],al
  415a5b:	mov    edi,edi
  415a5d:	sbb    DWORD PTR [eax+0x4716899e],0xffffff83
  415a64:	sbb    DWORD PTR [edi-0x77],0x24
  415a68:	sub    DWORD PTR [ecx-0x1],edx
  415a6b:	inc    DWORD PTR [eax]
  415a6d:	or     esp,0x3f
  415a70:	add    BYTE PTR [ebp+0x4a],bl
  415a73:	add    bh,bh
  415a75:	outs   dx,BYTE PTR ds:[esi]
  415a76:	add    BYTE PTR [edi],cl
  415a78:	in     eax,dx
  415a79:	push   ss
  415a7a:	add    DWORD PTR [eax],0xffffffff
  415a7d:	push   ebx
  415a7f:	mov    eax,ds:0xcc4413cc
  415a84:	call   FWORD PTR [esi+0x34170889]
  415a8a:	(bad)  
  415a8b:	dec    esp
  415a8d:	add    BYTE PTR [ebp-0x63887cf8],al
  415a93:	mov    edi,edi
  415a95:	outs   dx,BYTE PTR ds:[esi]
  415a96:	mov    DWORD PTR [edi+esi*8+0x33],ebp
  415a9a:	dec    DWORD PTR [ecx+0x38800ff]
  415aa0:	int3   
  415aa1:	es cmp bh,0x83
  415aa5:	das    
  415aa6:	int3   
  415aa7:	popf   
  415aa8:	cmp    al,0x3c
  415aaa:	add    bh,bh
  415aac:	add    BYTE PTR [eax],al
  415aae:	lods   eax,DWORD PTR ds:[esi]
  415aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab0:	inc    DWORD PTR [edi-0xc00ff79]
  415ab6:	(bad)  
  415ab7:	jg     0x415ab7
  415ab9:	outs   dx,DWORD PTR ds:[esi]
  415aba:	add    DWORD PTR [ebx+0x42500000],0xffffffff
  415ac1:	repz dec esi
  415ac3:	inc    DWORD PTR [eax]
  415ac5:	xchg   ecx,eax
  415ac6:	call   edi
  415ac8:	xor    eax,DWORD PTR [esi-0x7c7c0100]
  415ace:	shl    BYTE PTR [ebp-0x34],cl
  415ad1:	push   ebp
  415ad2:	and    eax,0x2a00ff
  415ad7:	inc    ebp
  415ad8:	mov    BYTE PTR [edi],ch
  415ada:	add    bh,bh
  415adc:	(bad)  
  415add:	inc    DWORD PTR [esi+0x393aff96]
  415ae3:	(bad)  
  415ae4:	call   FWORD PTR [esi]
  415ae6:	mov    DWORD PTR [edx+0xffc334],ebp
  415aec:	mov    edi,edi
  415aee:	(bad)  
  415aef:	sbb    bh,bh
  415af1:	sub    al,0x7a
  415af3:	cmp    edi,0x64
  415af6:	add    BYTE PTR [ebx-0x330f79],ah
  415afc:	int3   
  415afd:	mov    DWORD PTR [ecx-0x35],esi
  415b00:	jmp    DWORD PTR [edx+0x3a]
  415b03:	add    DWORD PTR [eax],0xffffffa4
  415b06:	mov    eax,ebx
  415b08:	xchg   ebx,eax
  415b09:	mov    esp,0xffff0089
  415b0e:	jno    0x415b85
  415b10:	sub    DWORD PTR [eax+0x48ffccfc],0xffffffff
  415b17:	iret   
  415b18:	hlt    
  415b19:	sub    bh,bh
  415b1b:	add    BYTE PTR [ebx-0x7c4f8700],al
  415b21:	cmp    edi,ebx
  415b23:	(bad)  
  415b24:	inc    DWORD PTR [edx-0x4bf26b01]
  415b2a:	dec    DWORD PTR [ecx-0x68737d00]
  415b30:	add    dl,ah
  415b32:	rol    DWORD PTR [ebx+0x2eff9100],0x68
  415b39:	pop    ds
  415b3a:	inc    DWORD PTR [ebx+0x2e2dffff]
  415b40:	adc    eax,0xfffffff9
  415b43:	int3   
  415b44:	xor    DWORD PTR [ecx-0x1],0x7b
  415b48:	fdivr  DWORD PTR [eax-0x7c01]
  415b4e:	push   ss
  415b4f:	or     al,0x83
  415b51:	fstp   TBYTE PTR [ecx-0x1]
  415b54:	add    bl,cl
  415b56:	int3   
  415b57:	xchg   ebx,eax
  415b58:	push   es
  415b59:	xor    al,0xff
  415b5b:	(bad)  
  415b5c:	dec    esp
  415b5e:	and    DWORD PTR [eax-0x1],edi
  415b61:	inc    edx
  415b62:	stos   BYTE PTR es:[edi],al
  415b63:	int3   
  415b64:	mov    DWORD PTR [edi+edi*8-0x7c7896ef],ebp
  415b6b:	add    DWORD PTR [eax],0xffffff83
  415b6e:	cwde   
  415b6f:	stos   BYTE PTR es:[edi],al
  415b70:	and    DWORD PTR [ecx],0xffffffb4
  415b73:	add    DWORD PTR [eax],0x31
  415b76:	add    BYTE PTR [edx],ah
  415b78:	adc    DWORD PTR [esi],ecx
  415b7a:	add    ah,cl
  415b7c:	add    bh,bh
  415b7e:	push   eax
  415b7f:	popf   
  415b80:	(bad)  
  415b81:	cmp    BYTE PTR [eax-0x8a7c01],ch
  415b87:	dec    esi
  415b88:	out    0x73,eax
  415b8a:	inc    DWORD PTR [ebx-0x47000001]
  415b90:	xor    DWORD PTR [esi],0xffffff96
  415b93:	add    BYTE PTR [eax],al
  415b95:	je     0x415b96
  415b97:	inc    edx
  415b98:	push   esi
  415b99:	add    BYTE PTR es:[eax],al
  415b9c:	(bad)  
  415b9d:	jmp    DWORD PTR [esp+ebx*1]
  415ba0:	add    BYTE PTR [ecx-0x71],bh
  415ba3:	add    bh,bh
  415ba5:	mov    ah,0xff
  415ba7:	psubw  mm0,QWORD PTR [edi-0x1]
  415bab:	inc    DWORD PTR [ebx-0x3361d37d]
  415bb1:	xchg   BYTE PTR [esi-0x40001],bl
  415bb7:	xor    cl,BYTE PTR [ebp-0xff76ab]
  415bbd:	add    DWORD PTR [ebp-0x6ddff39],0x0
  415bc4:	mov    ebp,edi
  415bc6:	add    bl,bh
  415bc8:	(bad)  
  415bc9:	jmp    0xce6b:0xffff
  415bd0:	dec    DWORD PTR [edx]
  415bd2:	dec    esp
  415bd3:	add    DWORD PTR [eax],0x77
  415bd6:	add    BYTE PTR [edx-0xe],cl
  415bd9:	les    eax,FWORD PTR [eax]
  415bdb:	dec    esp
  415bdd:	add    BYTE PTR [eax+0x6b],dl
  415be0:	inc    DWORD PTR [ebx-0x4b]
  415be3:	add    bh,bh
  415be5:	rol    DWORD PTR [eax],0x8c
  415be8:	iret   
  415be9:	mov    dh,0x89
  415beb:	(bad)  
  415bec:	(bad)  
  415bed:	push   DWORD PTR [esi-0xe837cc6]
  415bf3:	int3   
  415bf4:	sbb    DWORD PTR [edi-0x1],0xffffffb9
  415bf8:	sub    cl,BYTE PTR [edx+0x0]
  415bfe:	cmp    eax,0x20c383bf
  415c03:	add    BYTE PTR [eax],al
  415c05:	xchg   edx,eax
  415c06:	add    BYTE PTR [ecx+ebx*1],dh
  415c09:	fcmove st,st(4)
  415c0b:	(bad)  
  415c0c:	dec    esp
  415c0e:	data16 and al,0x0
  415c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c12:	ja     0x415c13
  415c14:	xor    eax,0xffffffff
  415c17:	pop    ebx
  415c18:	int3   
  415c19:	sub    DWORD PTR [ecx-0x6fff0001],ecx
  415c1f:	cmp    bh,0x35
  415c22:	add    eax,DWORD PTR [eax]
  415c24:	(bad)  
  415c25:	fisttp DWORD PTR [ecx+0xd725a3]
  415c2b:	add    BYTE PTR [eax],al
  415c2d:	call   DWORD PTR ds:0xbac889f6
  415c33:	(bad)  
  415c34:	jmp    ecx
  415c36:	add    BYTE PTR [esi],al
  415c38:	mov    eax,0xff836a
  415c3d:	(bad)  
  415c3e:	mov    edx,0x49fbff92
  415c43:	inc    DWORD PTR [ebx+0x3fe1007c]
  415c49:	repz add bh,bh
  415c4c:	add    bh,bh
  415c4e:	xor    edx,DWORD PTR [esi-0x7d]
  415c51:	or     al,0xe6
  415c53:	inc    DWORD PTR [eax]
  415c55:	adc    eax,0x2b7fee00
  415c5a:	add    bh,bh
  415c5c:	add    ah,cl
  415c5e:	adc    DWORD PTR [eax+eax*1+0x52],ecx
  415c62:	sti    
  415c63:	add    bh,bh
  415c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c66:	add    dl,al
  415c68:	pop    ebx
  415c69:	test   bh,bh
  415c6b:	add    bh,bh
  415c6d:	call   FWORD PTR [eax+esi*8+0x0]
  415c71:	xchg   ebx,eax
  415c72:	mov    esi,0xff4e0089
  415c77:	jcxz   0x415cb3
  415c7a:	inc    DWORD PTR [eax]
  415c7c:	(bad)  
  415c7d:	inc    DWORD PTR [eax+edx*2]
  415c80:	dec    DWORD PTR [esi+0x4c]
  415c83:	add    BYTE PTR [eax],al
  415c85:	cdq    
  415c86:	add    BYTE PTR [eax],dl
  415c88:	ja     0x415c31
  415c8a:	int3   
  415c8b:	add    ah,cl
  415c8d:	add    BYTE PTR [edx],cl
  415c8f:	mov    bh,0x83
  415c91:	js     0x415c60
  415c93:	add    BYTE PTR [eax],al
  415c95:	pop    eax
  415c96:	add    ch,al
  415c98:	cmp    DWORD PTR [eax-0x1],ebx
  415c9b:	add    BYTE PTR [eax],al
  415c9d:	add    ch,al
  415c9f:	iret   
  415ca0:	jmp    esp
  415ca2:	sar    bh,0x83
  415ca5:	aas    
  415ca6:	add    ch,dh
  415ca8:	gs out 0xff,eax
  415cab:	(bad)  
  415cac:	(bad)  
  415cad:	dec    edi
  415caf:	mov    ecx,0x839825cc
  415cb4:	dec    DWORD PTR [edi+edi*8-0x5b660e]
  415cbb:	(bad)  
  415cbc:	(bad)  
  415cbd:	jmp    DWORD PTR [edi+0x5be800a7]
  415cc3:	int3   
  415cc4:	int3   
  415cc5:	aam    0x0
  415cc7:	in     eax,0xa8
  415cc9:	jbe    0x415ccb
  415ccb:	add    DWORD PTR [eax],0xffffffcc
  415cce:	bound  esi,QWORD PTR [edi+edi*8-0x33e915]
  415cd5:	inc    BYTE PTR [eax]
  415cd7:	in     al,0xdc
  415cd9:	test   bh,bh
  415cdb:	dec    esp
  415cdd:	add    BYTE PTR [ebp+0x35],ah
  415ce0:	add    BYTE PTR [ecx-0x4ffffd6],al
  415ce6:	sub    esp,0xffffffda
  415ce9:	ja     0x415ceb
  415ceb:	add    BYTE PTR [ecx-0x33901800],cl
  415cf1:	popa   
  415cf2:	adc    eax,0xff7bcc00
  415cf7:	add    al,0x21
  415cf9:	adc    DWORD PTR [eax],eax
  415cfb:	int3   
  415cfc:	inc    DWORD PTR [eax]
  415cfe:	mov    al,0xae
  415d00:	call   DWORD PTR [eax]
  415d02:	test   edi,edi
  415d04:	jmp    DWORD PTR [edi+edi*8-0x76f13b15]
  415d0b:	add    DWORD PTR [eax],0xffffffff
  415d0e:	sbb    al,0x8d
  415d10:	add    BYTE PTR [ecx+0x4b],ah
  415d13:	add    DWORD PTR [eax],0x34
  415d16:	jmp    DWORD PTR [esi-0x28]
  415d19:	or     eax,0xffccff83
  415d1e:	sar    BYTE PTR [ecx-0x2e4400],1
  415d24:	inc    DWORD PTR [esi-0xbb42801]
  415d2a:	mov    DWORD PTR [ebx-0x18fb0001],eax
  415d30:	call   ecx
  415d32:	repz inc DWORD PTR [eax]
  415d35:	xchg   esp,eax
  415d36:	add    BYTE PTR [edx-0x7c001931],ch
  415d3c:	mov    edi,edi
  415d3e:	jmp    0x39315d15
  415d43:	dec    DWORD PTR [ecx-0x63f33327]
  415d49:	out    0x89,eax
  415d4b:	(bad)  
  415d4c:	inc    DWORD PTR [eax]
  415d4e:	and    cl,BYTE PTR [ebx-0x1]
  415d51:	mov    esp,DWORD PTR [ecx+0x0]
  415d54:	(bad)  
  415d55:	mov    edx,0x5d6e75ff
  415d5a:	add    bh,bh
  415d5c:	add    BYTE PTR [eax],al
  415d5e:	(bad)  
  415d5f:	aaa    
  415d60:	add    BYTE PTR [esi+0x5e],cl
  415d63:	add    ah,cl
  415d65:	rol    BYTE PTR [eax],0x83
  415d68:	ja     0x415ced
  415d6a:	(bad)  
  415d6b:	(bad)  
  415d6c:	inc    DWORD PTR [eax]
  415d6e:	ins    DWORD PTR es:[edi],dx
  415d6f:	and    eax,0xff5a4500
  415d74:	(bad)  
  415d75:	std    
  415d76:	inc    ecx
  415d78:	mov    ds:0xff89ffb4,al
  415d7d:	push   DWORD PTR [ebp+0x3]
  415d80:	add    DWORD PTR [edi-0x6a],0xffffffff
  415d84:	call   FWORD PTR [eax+0x16d7eeff]
  415d8a:	add    bh,bh
  415d8c:	inc    DWORD PTR [eax]
  415d8e:	fldcw  WORD PTR [ecx-0x1]
  415d91:	mov    ecx,0x9d00006f
  415d96:	sbb    DWORD PTR [ebp+eiz*1+0xffff93],0xffffffff
  415d9e:	push   esi
  415d9f:	dec    ecx
  415da0:	push   ecx
  415da2:	call   0x89755e2a
  415da7:	sub    esp,ebp
  415da9:	mov    ebx,0x89ff00ff
  415dae:	xchg   BYTE PTR [ebp-0xf1327d],dl
  415db4:	add    BYTE PTR [eax+0x1aef9cff],cl
  415dba:	(bad)  
  415dbb:	inc    DWORD PTR [eax]
  415dbd:	(bad)  
  415dbe:	aas    
  415dbf:	mov    al,ds:0x3855ff
  415dc4:	or     DWORD PTR [eax+eax*1+0x58],0x1d
  415dc9:	in     al,0xff
  415dcb:	cmp    edi,0xffffffff
  415dce:	cld    
  415dcf:	xor    al,0x89
  415dd1:	xor    dh,al
  415dd3:	add    BYTE PTR [ecx-0x586d00a0],cl
  415dd9:	fld    QWORD PTR [eax]
  415ddb:	inc    DWORD PTR [eax]
  415ddd:	int3   
  415dde:	inc    ebp
  415ddf:	xchg   ebx,eax
  415de0:	add    DWORD PTR [edx-0x64000002],0xffffffff
  415de7:	aaa    
  415de8:	retf   
  415de9:	lea    eax,[eax]
  415deb:	(bad)  
  415dec:	(bad)  
  415ded:	call   FWORD PTR [edx+eax*2-0x1]
  415df1:	aaa    
  415df2:	add    eax,DWORD PTR [eax]
  415df4:	inc    DWORD PTR [ebx]
  415df6:	add    BYTE PTR [edx],dh
  415df8:	push   edx
  415df9:	jae    0x415dfb
  415dfb:	mov    DWORD PTR [eax],eax
  415dfd:	cmp    edi,0x6
  415e00:	(bad)  
  415e01:	jmp    edx
  415e03:	dec    esp
  415e05:	pop    ss
  415e06:	add    BYTE PTR [ecx],bh
  415e08:	pop    ds
  415e09:	sub    al,BYTE PTR [eax]
  415e0b:	inc    DWORD PTR [eax]
  415e0d:	push   edx
  415e0f:	stc    
  415e10:	int3   
  415e11:	jle    0x415e40
  415e13:	(bad)  
  415e14:	push   ebp
  415e16:	jmp    DWORD PTR [ebx]
  415e18:	sbb    BYTE PTR [eax+0x0],ch
  415e1b:	add    BYTE PTR [eax],al
  415e1d:	add    BYTE PTR [edi+esi*2],al
  415e20:	int3   
  415e21:	aaa    
  415e22:	push   ebp
  415e23:	inc    DWORD PTR [eax]
  415e25:	sti    
  415e26:	jmp    FWORD PTR [esi-0x3f]
  415e29:	add    edi,edi
  415e2b:	(bad)  
  415e2c:	inc    DWORD PTR [eax]
  415e2e:	sbb    BYTE PTR [edi+edi*8],bl
  415e31:	nop
  415e32:	retf   0xff00
  415e35:	in     eax,0xff
  415e37:	test   dh,0x73
  415e3a:	inc    DWORD PTR [ebx+0x475000ff]
  415e40:	add    BYTE PTR [edi-0x2c],ah
  415e43:	cmp    edi,0x7a
  415e46:	call   DWORD PTR [ecx-0x46]
  415e49:	mov    bl,0xff
  415e4b:	inc    DWORD PTR [eax]
  415e4d:	add    BYTE PTR [ebp-0x399f0000],al
  415e53:	cmp    edi,0x14
  415e56:	inc    DWORD PTR [eax]
  415e58:	loopne 0x415e09
  415e5a:	dec    esp
  415e5c:	(bad)  
  415e5d:	push   DWORD PTR [esi-0x1e]
  415e60:	and    DWORD PTR [esi-0x4c],0x0
  415e64:	sbb    ebp,0xffffffff
  415e67:	add    DWORD PTR [ebx-0x5a],esi
  415e6a:	add    bh,bh
  415e6c:	int3   
  415e6d:	add    BYTE PTR [eax-0x27800067],dh
  415e73:	(bad)  
  415e74:	call   FWORD PTR [esi]
  415e76:	and    DWORD PTR [edx+esi*4-0x58],0xffffffff
  415e7b:	or     esp,0xffffffff
  415e7e:	adc    bh,BYTE PTR [eax]
  415e80:	(bad)  
  415e81:	out    dx,eax
  415e82:	inc    esi
  415e83:	or     DWORD PTR [ecx+0x7874ffb7],0x12
  415e8a:	(bad)  
  415e8b:	(bad)  
  415e8c:	inc    DWORD PTR [eax]
  415e8e:	cmp    al,0x2e
  415e90:	push   esp
  415e92:	stc    
  415e93:	int3   
  415e94:	call   DWORD PTR ds:0x94685c83
  415e9a:	add    bh,bh
  415e9c:	or     esp,0xffffff8b
  415e9f:	add    BYTE PTR [eax],al
  415ea1:	pop    ebx
  415ea2:	mov    al,0xff
  415ea4:	push   DWORD PTR [ebx+0x0]
  415ea7:	push   ecx
  415ea8:	inc    ecx
  415ea9:	push   edx
  415eaa:	add    ah,cl
  415eac:	mov    edi,edi
  415eae:	mov    eax,ds:0xc136896b
  415eb3:	add    BYTE PTR [ebx+0x43b1cc3b],al
  415eb9:	push   ds
  415eba:	mov    DWORD PTR [eax],eax
  415ebc:	inc    DWORD PTR [ebx+0x6800c3c8]
  415ec2:	add    eax,0xff7bff00
  415ec7:	bound  ebp,QWORD PTR [esi]
  415ec9:	inc    ecx
  415eca:	add    bh,bh
  415ecc:	inc    DWORD PTR [eax]
  415ece:	xor    al,0xb2
  415ed0:	inc    eax
  415ed2:	out    dx,al
  415ed3:	inc    DWORD PTR [ebx+0x6aa9ccff]
  415ed9:	sub    DWORD PTR [ebx-0xd767c01],eax
  415edf:	xchg   ah,cl
  415ee1:	sar    BYTE PTR [ebp-0x34337d],cl
  415ee7:	sbb    al,0x6e
  415ee9:	sub    edi,edi
  415eeb:	add    DWORD PTR [eax],0xffffffff
  415eee:	scas   eax,DWORD PTR es:[edi]
  415eef:	jo     0x415ef0
  415ef1:	jp     0x415f29
  415ef3:	add    DWORD PTR [eax],0xffffffb3
  415ef6:	jmp    DWORD PTR ds:0x892366
  415efc:	inc    DWORD PTR [eax]
  415efe:	pop    eax
  415eff:	mov    esi,0x816283
  415f04:	add    BYTE PTR [ebx],dh
  415f06:	inc    ecx
  415f08:	inc    ecx
  415f09:	or     BYTE PTR [ebx+0x66ffff00],al
  415f0f:	enter  0x16ff,0x90
  415f13:	inc    DWORD PTR [ebx+0x648fcce8]
  415f19:	jmp    0xc157:0xcc83ff
  415f20:	cmp    DWORD PTR [edi],0x1d
  415f23:	(bad)  
  415f24:	push   DWORD PTR [ecx+0x31bcd6ff]
  415f2a:	mov    DWORD PTR [ecx+0x7d2b0000],ecx
  415f30:	int3   
  415f31:	pusha  
  415f32:	inc    DWORD PTR ds:[ebx-0x52e60069]
  415f39:	xchg   esp,eax
  415f3a:	dec    esp
  415f3c:	cmp    edi,0xffffffbe
  415f3f:	rol    DWORD PTR [eax],1
  415f41:	out    0x12,al
  415f43:	add    bh,bh
  415f45:	lahf   
  415f46:	inc    DWORD PTR [edi+eiz*8+0x56]
  415f4a:	add    bh,bh
  415f4c:	add    bh,bh
  415f4e:	push   ebp
  415f4f:	icebp  
  415f50:	jmp    DWORD PTR [ebx-0x15]
  415f53:	add    BYTE PTR [ecx-0x72e5ffc5],cl
  415f59:	push   es
  415f5a:	add    DWORD PTR [eax],0xffffffcc
  415f5d:	call   DWORD PTR [edi-0x46]
  415f60:	dec    DWORD PTR [ebx+0x70]
  415f63:	dec    esp
  415f65:	ja     0x415f66
  415f67:	icebp  
  415f68:	enter  0xfffd,0x89
  415f6c:	add    bh,bh
  415f6e:	push   edx
  415f6f:	daa    
  415f70:	xor    edx,0x69
  415f73:	inc    DWORD PTR [eax]
  415f75:	enter  0x7f83,0x95
  415f79:	mov    WORD PTR [ebx-0x2b000100],es
  415f7f:	sahf   
  415f80:	adc    DWORD PTR [ecx+0x61],0xffffffff
  415f84:	sub    DWORD PTR [edx-0x77],0x43
  415f88:	mov    eax,ds:0x83ff8318
  415f8d:	(bad)  
  415f8e:	stc    
  415f8f:	daa    
  415f90:	add    BYTE PTR [esi+esi*1-0x34],cl
  415f94:	and    DWORD PTR [edi+0x35aa3000],0xffffff89
  415f9b:	(bad)  
  415f9c:	inc    DWORD PTR [eax]
  415f9e:	or     BYTE PTR [edi+edi*8],dh
  415fa1:	in     al,dx
  415fa2:	call   0x8edb:0x83a7ccff
  415fa9:	leave  
  415faa:	dec    esp
  415fac:	(bad)  
  415fad:	inc    ecx
  415faf:	mov    esi,0xff61abff
  415fb4:	(bad)  
  415fb5:	mov    edi,0xb3b56800
  415fba:	inc    DWORD PTR [eax]
  415fbc:	(bad)  
  415fbd:	(bad)  
  415fbe:	(bad)  [edi-0x7ccd2f01]
  415fc4:	jmp    DWORD PTR [ebx]
  415fc6:	(bad)  
  415fc7:	sti    
  415fc8:	add    esi,DWORD PTR [edx]
  415fca:	(bad)  
  415fcb:	inc    DWORD PTR [eax]
  415fcd:	mov    DWORD PTR [edi+esi*4-0x339eaf01],edx
  415fd4:	jmp    DWORD PTR [esi-0x3765b01]
  415fda:	add    BYTE PTR [eax],al
  415fdc:	cmp    edi,0xffffffa5
  415fdf:	int3   
  415fe0:	add    BYTE PTR [esi],bh
  415fe2:	(bad)  
  415fe3:	inc    DWORD PTR [eax]
  415fe5:	mov    ds:0xed196d89,eax
  415fea:	(bad)  
  415feb:	inc    DWORD PTR [ebx-0x529a01]
  415ff1:	arpl   WORD PTR [ebp-0x7d],di
  415ff4:	call   DWORD PTR [eax]
  415ff6:	mov    DWORD PTR [edi+0x48],ecx
  415ff9:	jmp    0x415f7e
  415ffb:	mov    DWORD PTR [eax],eax
  415ffd:	int3   
  415ffe:	mov    edi,0x992eb7
  416003:	call   FWORD PTR [ebx]
  416005:	mov    DWORD PTR [ebx-0x330cbade],eax
  41600b:	add    BYTE PTR [esi-0x1],al
  41600e:	add    BYTE PTR [ecx-0x39],ch
  416011:	rol    BYTE PTR [eax],1
  416013:	cmp    DWORD PTR [eax-0x1952ff7d],0x5d
  41601a:	add    BYTE PTR [eax],al
  41601c:	dec    esp
  41601d:	mov    edi,edi
  41601f:	fldcw  WORD PTR [ebp+edx*2+0x0]
  416023:	dec    DWORD PTR [esi-0xdd2ff01]
  416029:	mov    eax,0xff20ccff
  41602e:	call   FWORD PTR [esi+0x64]
  416031:	cld    
  416032:	(bad)  
  416033:	call   FWORD PTR [edi]
  416035:	add    bh,bh
  416037:	sub    edi,DWORD PTR [ebp-0x63000011]
  41603d:	add    bh,bh
  41603f:	or     al,BYTE PTR [eax]
  416041:	fld    DWORD PTR [ebx-0x7cffe401]
  416047:	fcomp  DWORD PTR [edx-0x6]
  41604a:	inc    DWORD PTR [ebx+0x5accff80]
  416050:	adc    eax,DWORD PTR [edx]
  416052:	add    BYTE PTR [eax],al
  416054:	loop   0x416055
  416056:	add    BYTE PTR [ecx],dl
  416058:	or     DWORD PTR [eax-0x7ccd0034],ebp
  41605e:	add    DWORD PTR [eax+0x2a],0xffffffff
  416062:	(bad)  
  416063:	(bad)  
  416064:	aas    
  416065:	dec    esp
  416067:	push   ss
  416068:	iret   
  416069:	(bad)  
  41606b:	and    DWORD PTR [edx-0x668fff01],0x40
  416072:	add    bh,bh
  416074:	imul   eax,DWORD PTR [eax],0x70aa9ccc
  41607a:	(bad)  
  41607b:	call   FWORD PTR [eax-0x27c20001]
  416081:	jl     0x416082
  416083:	call   FWORD PTR [edi]
  416085:	(bad)  
  416086:	(bad)  
  416087:	mov    ecx,0xffff92c7
  41608c:	xor    eax,0x4f50ff89
  416091:	inc    ebx
  416092:	inc    DWORD PTR [eax]
  416094:	pop    edx
  416095:	add    bh,bh
  416097:	cdq    
  416098:	sar    BYTE PTR [ecx],0xff
  41609b:	int3   
  41609c:	add    BYTE PTR fs:[eax],al
  41609f:	push   edi
  4160a0:	gs out dx,al
  4160a2:	(bad)  
  4160a3:	push   DWORD PTR [edx+0x19840000]
  4160a9:	mov    ch,0x89
  4160ab:	add    BYTE PTR [eax],ch
  4160ad:	(bad)  
  4160ae:	jmp    DWORD PTR [edi-0x33db06]
  4160b4:	out    dx,eax
  4160b5:	mov    edi,edi
  4160b7:	sbb    eax,0xffffe29e
  4160bc:	repnz inc DWORD PTR [ebx+0x7f8559]
  4160c3:	mov    DWORD PTR [edi+0x7cec0000],ebp
  4160c9:	add    al,0xcc
  4160cb:	int3   
  4160cc:	push   esi
  4160cd:	int3   
  4160ce:	(bad)  
  4160cf:	mov    edx,0x83ff72a7
  4160d4:	cli    
  4160d5:	add    bh,bh
  4160d7:	outs   dx,BYTE PTR ds:[esi]
  4160d8:	jb     0x4160b5
  4160da:	(bad)  
  4160db:	push   DWORD PTR [esi-0x1]
  4160de:	cmp    DWORD PTR [esi-0xff2426],0xffffffa2
  4160e5:	add    BYTE PTR [eax],al
  4160e7:	jg     0x41606b
  4160e9:	das    
  4160ea:	(bad)  
  4160eb:	call   DWORD PTR [ebp-0x1]
  4160ee:	add    dh,cl
  4160f0:	mov    al,0x12
  4160f2:	add    BYTE PTR [eax],al
  4160f4:	stos   BYTE PTR es:[edi],al
  4160f5:	inc    DWORD PTR [eax]
  4160f7:	cmp    eax,0x8900d12d
  4160fc:	hlt    
  4160fd:	mov    DWORD PTR [eax],eax
  4160ff:	ret    
  416100:	stos   DWORD PTR es:[edi],eax
  416101:	push   esi
  416102:	add    DWORD PTR [eax],0xa
  416105:	(bad)  
  416106:	(bad)  
  416107:	fdivr  DWORD PTR [eax+0x4acc839b]
  41610d:	add    BYTE PTR [eax],al
  41610f:	int    0xe0
  416111:	(bad)  
  416112:	(bad)  
  416113:	(bad)  
  416114:	fdivp  st(7),st
  416116:	mov    DWORD PTR [ecx+0xffeaf0],edx
  41611c:	mov    esp,0x741c0000
  416121:	adc    al,0xff
  416123:	add    BYTE PTR [ecx-0x27ce0100],ch
  416129:	repz add bh,bh
  41612c:	mov    ds:0x4d5783ff,eax
  416131:	pop    esi
  416132:	mov    edi,edi
  416134:	sar    bh,0x83
  416137:	sub    al,0xea
  416139:	pop    es
  41613a:	dec    esp
  41613c:	ins    BYTE PTR es:[edi],dx
  41613d:	(bad)  
  41613e:	push   DWORD PTR [ebx+edi*1+0x1bff00ef]
  416145:	(bad)  
  416146:	inc    DWORD PTR [edx-0xff98f7]
  41614c:	xor    BYTE PTR [ebx+0x44ecf3ff],al
  416152:	inc    DWORD PTR [ebx+0x6ff837c]
  416158:	sub    eax,0x5eff83b8
  41615d:	int3   
  41615e:	push   DWORD PTR [ecx]
  416160:	push   ebp
  416161:	into   
  416162:	inc    DWORD PTR [eax]
  416164:	jae    0x416165
  416166:	jmp    FWORD PTR [eax]
  416168:	xor    eax,0xf700fff1
  41616d:	(bad)  
  41616e:	dec    DWORD PTR [ebx+0x46]
  416171:	std    
  416172:	int3   
  416173:	call   DWORD PTR [edi-0x6d6a767d]
  416179:	add    BYTE PTR [eax],0x0
  41617c:	jl     0x41614a
  41617e:	cmp    DWORD PTR [ecx+eax*1+0x21],0x0
  416183:	sub    DWORD PTR [eax+0x7903ff00],0xffffffab
  41618a:	(bad)  
  41618b:	dec    ecx
  41618d:	or     esp,0xffffffcb
  416190:	xor    ecx,DWORD PTR [edi+edi*8-0x34]
  416194:	mov    esi,0xbf1dff00
  416199:	sub    edi,edi
  41619b:	adc    DWORD PTR [eax],0xffffffff
  41619e:	int3   
  41619f:	sbb    al,0x43
  4161a1:	fwait
  4161a2:	add    bh,bh
  4161a4:	xlat   BYTE PTR ds:[ebx]
  4161a5:	add    bh,bh
  4161a7:	call   0x140cff0
  4161ac:	cwde   
  4161ad:	(bad)  
  4161ae:	inc    DWORD PTR [esi+ecx*8-0x51]
  4161b2:	cmp    edi,0xffffffaf
  4161b5:	dec    esp
  4161b7:	data16 hlt 
  4161b9:	es (bad) 
  4161bb:	inc    DWORD PTR [ecx-0x1]
  4161be:	add    bl,ch
  4161c0:	pushf  
  4161c1:	aas    
  4161c2:	mov    esp,ecx
  4161c4:	fwait
  4161c5:	inc    DWORD PTR [eax]
  4161c7:	xor    al,0x7f
  4161c9:	stos   BYTE PTR es:[edi],al
  4161ca:	add    bh,bh
  4161cc:	and    eax,0x3995ffff
  4161d1:	int    0x0
  4161d3:	add    BYTE PTR [edx-0x1],bh
  4161d6:	add    DWORD PTR [esi-0x58b],0xfffffffa
  4161dd:	add    BYTE PTR [eax],al
  4161df:	mov    ch,0x12
  4161e1:	and    al,0x0
  4161e3:	inc    DWORD PTR [esi]
  4161e5:	inc    DWORD PTR [ebx-0x7c3cab33]
  4161eb:	mov    DWORD PTR [esi+0x68e78300],ebp
  4161f1:	xchg   esp,eax
  4161f2:	cmp    edi,0xffffff9b
  4161f5:	add    bh,bh
  4161f7:	ret    0xcb15
  4161fa:	add    bh,bh
  4161fc:	add    cl,ah
  4161fe:	jmp    esi
  416200:	mov    al,0xb6
  416202:	add    bh,bh
  416204:	std    
  416205:	add    BYTE PTR [ebx-0x33c35f54],al
  41620b:	jmp    ebp
  41620d:	int3   
  41620e:	jmp    FWORD PTR [edx-0x3333adab]
  416214:	xor    BYTE PTR [ebx+0x63dda800],al
  41621a:	inc    DWORD PTR [eax]
  41621c:	(bad)  
  41621e:	cmp    DWORD PTR [ebp-0x7c43d5],0xffffffb8
  416225:	inc    DWORD PTR [eax]
  416227:	xlat   BYTE PTR ds:[ebx]
  416228:	dec    edi
  416229:	inc    edi
  41622a:	int3   
  41622b:	mov    DWORD PTR [ebx],ebp
  41622d:	add    bh,bh
  41622f:	out    dx,al
  416230:	xor    eax,0xca838368
  416235:	inc    DWORD PTR [eax]
  416237:	das    
  416238:	fs mov esi,0x89efffff
  41623e:	push   DWORD PTR [ecx]
  416240:	mov    bh,0x79
  416242:	add    BYTE PTR [eax],al
  416244:	jle    0x416212
  416246:	call   eax
  416248:	mov    eax,ds:0x9983002d
  41624d:	(bad)  
  41624e:	jmp    FWORD PTR [edi]
  416250:	inc    eax
  416251:	rol    DWORD PTR [ebx-0x3c00],0xdc
  416258:	mov    ebx,ecx
  41625a:	int3   
  41625b:	inc    DWORD PTR [edx]
  41625d:	add    bh,bh
  41625f:	lahf   
  416260:	out    0x6b,al
  416262:	add    bh,bh
  416264:	mov    esp,0x4b4883ff
  416269:	and    BYTE PTR [ebx+0xff2fff],al
  41626f:	es jg  0x416218
  416272:	(bad)  
  416273:	jmp    DWORD PTR [ebx+eax*4-0x1d0a3801]
  41627a:	inc    DWORD PTR [eax]
  41627c:	fs (bad) 
  41627e:	inc    edx
  416280:	dec    ecx
  416281:	dec    eax
  416282:	(bad)  
  416283:	jmp    DWORD PTR [ecx]
  416285:	(bad)  
  416286:	call   FWORD PTR [ebx-0x3376c0a7]
  41628c:	aam    0x0
  41628e:	add    BYTE PTR [edi+eiz*1],dh
  416291:	xor    al,0xff
  416293:	jmp    FWORD PTR [edx+0x0]
  416296:	add    BYTE PTR [ecx+0x18],ch
  416299:	sbb    al,0x0
  41629b:	and    DWORD PTR [ebp-0x1],0x0
  41629f:	cmp    DWORD PTR [edi+0x5ccc0054],0x594c8300
  4162a9:	daa    
  4162aa:	or     DWORD PTR [ecx-0x3d000043],0x59
  4162b1:	xor    bh,bh
  4162b3:	mov    DWORD PTR [edi-0x5bac0000],edi
  4162b9:	add    eax,DWORD PTR [eax]
  4162bb:	jmp    FWORD PTR [ecx-0x77]
  4162be:	call   FWORD PTR [esi-0x74]
  4162c1:	mov    ebp,0x5289cc
  4162c6:	add    BYTE PTR [ebx],dh
  4162c8:	mov    ah,bh
  4162ca:	add    bh,bh
  4162cc:	outs   dx,BYTE PTR ds:[esi]
  4162cd:	add    BYTE PTR [eax],al
  4162cf:	dec    ebx
  4162d0:	loop   0x4162a8
  4162d2:	(bad)  
  4162d3:	dec    DWORD PTR [eax-0x34]
  4162d6:	jmp    ebx
  4162d8:	daa    
  4162d9:	dec    ebx
  4162da:	cmp    edi,0x43
  4162dd:	inc    DWORD PTR [eax]
  4162df:	jp     0x416287
  4162e1:	mov    ds:0xff9dff00,eax
  4162e6:	mov    DWORD PTR [edx+0xff21eb],edi
  4162ec:	mov    cs,WORD PTR [ecx+0x47964200]
  4162f2:	mov    DWORD PTR [eax],eax
  4162f4:	iret   
  4162f5:	inc    DWORD PTR [eax]
  4162f7:	std    
  4162f8:	cli    
  4162f9:	pop    esi
  4162fa:	inc    DWORD PTR [eax]
  4162fc:	push   0xffffff89
  4162fe:	add    BYTE PTR [ebx],al
  416300:	cmp    al,0x24
  416302:	(bad)  
  416303:	dec    DWORD PTR ds:0x9ac783cc
  416309:	loop   0x41630a
  41630b:	(bad)  
  41630c:	out    dx,eax
  41630d:	cmp    edi,0x78
  416310:	xchg   BYTE PTR [esi+0x0],bl
  416313:	add    BYTE PTR [ebx-0x6f07c01],dl
  416319:	mov    ebx,0xcca000ff
  41631e:	mov    DWORD PTR [eax],esp
  416320:	mov    eax,0x2a8389a4
  416325:	add    DWORD PTR [eax],0xffffffc1
  416328:	sti    
  416329:	hlt    
  41632a:	add    BYTE PTR [ecx+0x48ff00e2],cl
  416330:	(bad)  
  416331:	jp     0x416332
  416333:	push   DWORD PTR [edx-0x1]
  416336:	add    BYTE PTR [ecx-0x7c002aba],dl
  41633c:	jne    0x4162c1
  41633e:	add    BYTE PTR [ebp-0x7c0065a8],cl
  416344:	aaa    
  416345:	add    ah,cl
  416347:	jmp    0x40de54
  41634c:	xor    al,0xff
  41634e:	call   eax
  416350:	xchg   edx,eax
  416351:	sbb    bh,bh
  416353:	add    BYTE PTR [edx],bl
  416355:	inc    DWORD PTR [eax]
  416357:	and    dl,ch
  416359:	gs add ah,cl
  41635c:	add    BYTE PTR fs:[eax],al
  41635f:	jns    0x416349
  416361:	(bad)
  416364:	aam    0xff
  416366:	jmp    DWORD PTR [edx+eax*2]
  416369:	(bad)  
  41636a:	(bad)  
  41636b:	dec    DWORD PTR [edx]
  41636d:	add    BYTE PTR [eax],al
  41636f:	mov    ds:0xffffb0b0,eax
  416374:	lods   eax,DWORD PTR ds:[esi]
  416375:	add    bh,bh
  416377:	repz push ds
  416379:	jg     0x41637a
  41637b:	add    BYTE PTR [eax+eax*1-0x34],al
  41637f:	test   al,0x3e
  416381:	pop    edi
  416382:	cmp    edi,0x3
  416385:	(bad)  
  416386:	jmp    DWORD PTR [ecx-0x3300621e]
  41638c:	arpl   di,di
  41638e:	inc    DWORD PTR [ecx+0x2f]
  416391:	idiv   edi
  416393:	inc    DWORD PTR [eax+eax*1]
  416396:	add    BYTE PTR [ebx-0x7cbdb0],dh
  41639c:	jle    0x41639e
  41639e:	add    dh,bh
  4163a0:	adc    al,dh
  4163a2:	(bad)  
  4163a3:	call   FWORD PTR [edi-0x6c997601]
  4163a9:	sub    al,BYTE PTR [eax]
  4163ab:	add    BYTE PTR [ebp-0x34],cl
  4163ae:	dec    ebp
  4163b0:	xor    bl,cl
  4163b2:	add    BYTE PTR [eax],al
  4163b4:	pop    eax
  4163b5:	inc    DWORD PTR [ebx-0x9b5520]
  4163bb:	inc    DWORD PTR [ecx-0x1]
  4163be:	add    dl,dl
  4163c0:	pusha  
  4163c1:	sub    edi,edi
  4163c3:	(bad)  
  4163c4:	clc    
  4163c5:	add    bh,bh
  4163c7:	pop    es
  4163c8:	push   es
  4163c9:	cmp    bh,bh
  4163cb:	mov    DWORD PTR [ecx+0x3a7bff83],ebx
  4163d1:	xchg   esp,eax
  4163d2:	inc    DWORD PTR [ebx-0x2cff339b]
  4163d8:	ins    BYTE PTR es:[edi],dx
  4163d9:	and    al,BYTE PTR [eax]
  4163db:	push   DWORD PTR [edi]
  4163dd:	add    BYTE PTR [eax],al
  4163df:	cmp    eax,0xf389
  4163e4:	sub    eax,0x9ef5ccff
  4163e9:	or     al,0x0
  4163eb:	call   FWORD PTR [ebx-0x3e920000]
  4163f1:	fwait
  4163f2:	inc    DWORD PTR [eax]
  4163f4:	cmp    bh,0xcc
  4163f7:	pop    esi
  4163f8:	in     al,0x72
  4163fa:	inc    DWORD PTR [eax]
  4163fc:	xchg   BYTE PTR [ebx-0x1ac6bb01],al
  416402:	add    DWORD PTR [eax],0xffffffdd
  416405:	dec    esp
  416407:	int3   
  416408:	xchg   BYTE PTR [ebp+0x0],al
  41640b:	add    ah,bh
  41640d:	mov    DWORD PTR [eax],eax
  41640f:	dec    esi
  416410:	outs   dx,BYTE PTR ds:[esi]
  416411:	mov    eax,0xffcf0000
  416416:	jmp    DWORD PTR [eax-0xfc55]
  41641c:	stos   DWORD PTR es:[edi],eax
  41641d:	(bad)  
  41641e:	jmp    ebx
  416420:	into   
  416421:	pop    ss
  416422:	dec    DWORD PTR [ecx-0x63333399]
  416428:	fld    QWORD PTR [ebx-0x8134]
  41642f:	stc    
  416430:	or     edx,edx
  416432:	inc    DWORD PTR [eax]
  416434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416435:	inc    DWORD PTR [ebx-0x760ec649]
  41643b:	int3   
  41643c:	adc    al,BYTE PTR [ebx-0x36f1f700]
  416442:	cmp    edi,0xffffffca
  416445:	inc    DWORD PTR [eax]
  416447:	(bad)  
  416448:	cmp    ebx,DWORD PTR [ebp-0x1]
  41644b:	call   DWORD PTR [eax-0x77]
  41644e:	add    BYTE PTR [ecx*2-0x4000007b],ch
  416455:	inc    DWORD PTR [eax]
  416457:	push   ecx
  416458:	ds in  al,dx
  41645a:	(bad)  
  41645b:	call   FWORD PTR [ebp-0x78cc7700]
  416461:	jmp    0x3dff:0xcc5c8300
  416468:	mov    DWORD PTR [edi],esi
  41646a:	dec    esp
  41646c:	mov    ?,edi
  41646e:	dec    DWORD PTR [ecx+0x899b17]
  416474:	add    DWORD PTR [eax],0x54fec9ff
  41647a:	(bad)  
  41647b:	(bad)  
  41647c:	jmp    0x416407
  41647e:	mov    DWORD PTR [edi],ebp
  416480:	ret    
  416481:	push   ss
  416482:	inc    DWORD PTR [eax]
  416484:	std    
  416485:	(bad)  
  416486:	dec    DWORD PTR [ebx+0x54]
  416489:	add    al,0x83
  41648b:	add    BYTE PTR [edx-0x50d0ff01],al
  416491:	aad    0xcc
  416493:	push   ecx
  416495:	(bad)  
  416496:	push   DWORD PTR [ebp-0xff47e3]
  41649c:	xchg   DWORD PTR [ebx+0x31c4db83],eax
  4164a2:	inc    DWORD PTR [eax]
  4164a4:	cld    
  4164a5:	add    BYTE PTR [eax],al
  4164a7:	jmp    0x83421c81
  4164ac:	and    al,0x0
  4164ae:	call   FWORD PTR [edi+edi*1-0x58]
  4164b2:	add    DWORD PTR [eax],0xffffff87
  4164b5:	add    BYTE PTR [eax],al
  4164b7:	xor    eax,0xff90cd
  4164bc:	mov    WORD PTR [eax],es
  4164be:	call   DWORD PTR [edx]
  4164c0:	loopne 0x4164ad
  4164c2:	inc    DWORD PTR [ebx-0x2b33009d]
  4164c8:	ins    BYTE PTR es:[edi],dx
  4164c9:	sar    edi,0x0
  4164cc:	sub    al,BYTE PTR [eax]
  4164ce:	add    BYTE PTR [ebp+0x9bbb],dl
  4164d4:	(bad)  
  4164d5:	inc    DWORD PTR [eax]
  4164d7:	mov    bh,BYTE PTR [edx+ebp*2]
  4164da:	(bad)  
  4164db:	jmp    DWORD PTR [edx-0x1]
  4164de:	call   ebp
  4164e0:	pushf  
  4164e1:	in     al,0xff
  4164e3:	(bad)  
  4164e4:	clc    
  4164e5:	int3   
  4164e6:	dec    DWORD PTR [eax]
  4164e8:	imul   DWORD PTR [ebx-0x8e0100]
  4164ee:	call   DWORD PTR [ecx+0x1]
  4164f1:	(bad)  
  4164f2:	(bad)  
  4164f3:	call   FWORD PTR [eax+0x0]
  4164f6:	add    cl,ah
  4164f8:	pop    ebp
  4164f9:	add    DWORD PTR [eax],0x83002100
  4164ff:	repz fwait
  416501:	pop    ss
  416502:	int3   
  416503:	jmp    DWORD PTR [esp+ecx*8]
  416506:	add    cl,dh
  416508:	mov    eax,ds:0xd9ffffdc
  41650d:	cmp    edi,0xffffff8d
  416510:	cwde   
  416511:	adc    ah,cl
  416513:	add    BYTE PTR [eax],bh
  416515:	int3   
  416516:	push   DWORD PTR [edi+ecx*4+0x76]
  41651a:	inc    DWORD PTR [eax]
  41651c:	jne    0x41651d
  41651e:	int3   
  41651f:	mov    esp,0xff00597a
  416524:	and    ecx,DWORD PTR [ecx+0xfba7900]
  41652a:	mov    edi,edi
  41652c:	enter  0x8983,0xc3
  416530:	sub    dl,BYTE PTR [ecx-0x2e0100]
  416536:	adc    DWORD PTR [edx+0x46],0xffffffff
  41653a:	(bad)  
  41653b:	(bad)  
  41653c:	jg     0x4164c1
  41653e:	adc    DWORD PTR [edx-0x52],0xffffffda
  416542:	add    bh,bh
  416544:	repz mov edi,edi
  416547:	test   eax,0xff896591
  41654c:	ret    0xffff
  41654f:	int3   
  416550:	mov    esp,0xf2000060
  416555:	cmp    edi,0x2a
  416558:	hlt    
  416559:	xor    ecx,esp
  41655b:	call   DWORD PTR [edi-0x1]
  41655e:	inc    DWORD PTR [ecx]
  416560:	mov    esi,DWORD PTR [eax]
  416562:	inc    DWORD PTR [eax]
  416564:	int    0x0
  416566:	push   DWORD PTR ds:0xff8393fc
  41656c:	ret    
  41656d:	add    BYTE PTR [ebx-0x7c7ffc3a],al
  416573:	int3   
  416574:	add    edi,edi
  416576:	add    BYTE PTR [eax+ecx*2+0x4cccff44],bl
  41657d:	add    bh,bh
  41657f:	fs jo  0x4165df
  416582:	add    DWORD PTR [ebx-0x45ff002f],0xffffffe0
  416589:	cmc    
  41658a:	mov    DWORD PTR [eax],eax
  41658c:	pushf  
  41658d:	add    BYTE PTR [eax],al
  41658f:	xor    ecx,DWORD PTR [eax+0x6cffffbf]
  416595:	mov    edi,edi
  416597:	loop   0x4165dd
  416599:	pop    DWORD PTR [eax]
  41659b:	adc    ebp,0xffffffff
  41659e:	(bad)  
  41659f:	cmp    DWORD PTR [esi+0x51],ecx
  4165a2:	dec    esp
  4165a4:	out    0x0,eax
  4165a6:	add    dl,al
  4165a8:	jmp    0x416550
  4165aa:	(bad)  
  4165ab:	jmp    DWORD PTR [eax-0x34]
  4165ae:	mov    edi,edi
  4165b0:	and    eax,0xbb00ff99
  4165b5:	add    bh,bh
  4165b7:	mov    al,0x8b
  4165b9:	in     eax,0x89
  4165bb:	or     DWORD PTR [edi-0x1],0x0
  4165bf:	loopne 0x4165c8
  4165c1:	das    
  4165c2:	add    BYTE PTR [eax],al
  4165c4:	scas   eax,DWORD PTR es:[edi]
  4165c5:	add    BYTE PTR [ebx-0x68bc4d],al
  4165cb:	int3   
  4165cc:	add    DWORD PTR [ebx-0x12442834],0xffffffff
  4165d3:	(bad)  
  4165d4:	(bad)  
  4165d5:	inc    DWORD PTR [ebx-0x5337c]
  4165db:	add    DWORD PTR [eax+0x911ff89],0xffffff91
  4165e2:	cmp    edi,0x79
  4165e5:	(bad)  
  4165e6:	call   DWORD PTR [ebx]
  4165e8:	mov    ch,0x5c
  4165ea:	inc    DWORD PTR [ebx-0x1d7c0092]
  4165f0:	mov    dh,0xae
  4165f2:	int3   
  4165f3:	jmp    DWORD PTR [edx]
  4165f5:	inc    DWORD PTR [eax]
  4165f7:	pop    eax
  4165f8:	push   ebx
  4165f9:	aas    
  4165fa:	dec    esp
  4165fc:	call   0x8e:0x7e5c00ff
  416603:	dec    eax
  416605:	(bad)  
  416606:	jmp    DWORD PTR [edx]
  416608:	push   edi
  416609:	push   ss
  41660a:	inc    DWORD PTR [eax]
  41660c:	or     eax,0xa583ffff
  416611:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416612:	cmp    edi,0xfffffff0
  416615:	dec    esp
  416617:	add    BYTE PTR [edi-0x36],bl
  41661a:	add    bh,bh
  41661c:	pop    es
  41661d:	add    BYTE PTR [eax],al
  41661f:	push   eax
  416620:	rcr    DWORD PTR [edx-0x7d],1
  416623:	sub    ebx,0xffffff89
  416626:	jmp    DWORD PTR [edi]
  416628:	shl    eax,1
  41662a:	or     DWORD PTR [ecx+0x7300ff95],0xfffffff0
  416631:	test   eax,0x839800ff
  416636:	add    BYTE PTR [esi-0x3300b14e],ch
  41663c:	fdivp  st(7),st
  41663e:	dec    DWORD PTR [ecx]
  416640:	loope  0x41668b
  416642:	int3   
  416643:	add    BYTE PTR [ebp-0x20b20001],dl
  416649:	add    BYTE PTR ds:[ecx-0x1c007cc9],cl
  416650:	ss push 0xffd6ff89
  416656:	add    BYTE PTR [eax-0x60],dh
  416659:	ret    
  41665a:	(bad)  
  41665b:	dec    esp
  41665d:	add    DWORD PTR [eax],0xffffffa1
  416660:	mov    ah,0x22
  416662:	add    bh,bh
  416664:	fmulp  st(4),st
  416666:	add    BYTE PTR [ecx+0x83905f],cl
  41666c:	sar    edi,0x0
  41666f:	into   
  416670:	or     ebx,esi
  416672:	inc    DWORD PTR [eax]
  416674:	scas   eax,DWORD PTR es:[edi]
  416675:	inc    DWORD PTR [eax]
  416677:	adc    eax,0x89ff8699
  41667c:	push   ebp
  41667d:	dec    DWORD PTR [ecx+0xb81aba]
  416683:	dec    eax
  416685:	inc    DWORD PTR [ebx-0x986a0c]
  41668b:	add    BYTE PTR [ebp+0x51f3ff00],bl
  416691:	pop    es
  416692:	inc    DWORD PTR [eax]
  416694:	cmp    al,0xff
  416696:	(bad)  
  416697:	push   DWORD PTR [ecx]
  416699:	ds or  esp,0xffffff98
  41669d:	inc    DWORD PTR [eax]
  41669f:	inc    bh
  4166a1:	mov    BYTE PTR [ebx-0xff0f34],al
  4166a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a8:	ins    DWORD PTR es:[edi],dx
  4166a9:	add    BYTE PTR fs:[eax],al
  4166ac:	rol    BYTE PTR [eax],1
  4166ae:	jmp    edi
  4166b0:	inc    ebp
  4166b1:	mov    ds:0xfffc0000,eax
  4166b6:	add    BYTE PTR [ecx-0x7c00d4f9],dh
  4166bc:	push   0x32d4ffff
  4166c1:	fmul   st(4),st
  4166c3:	add    bh,ch
  4166c5:	add    ah,cl
  4166c7:	fcomip st,st(2)
  4166c9:	adc    eax,0xff
  4166ce:	add    bh,bh
  4166d0:	imul   edi,DWORD PTR [ebp-0x76c60000],0xffffffff
  4166d7:	mov    ch,0x4d
  4166d9:	or     eax,0x67ff00
  4166de:	add    bh,ah
  4166e0:	ror    DWORD PTR [ebx+eax*4-0x5501],0xac
  4166e8:	in     eax,dx
  4166e9:	call   0x1296677
  4166ee:	mov    DWORD PTR [ebx],esi
  4166f0:	jb     0x41669d
  4166f2:	add    BYTE PTR [eax],al
  4166f4:	hlt    
  4166f5:	mov    DWORD PTR [eax],eax
  4166f7:	sahf   
  4166f8:	int    0x6c
  4166fa:	add    bh,bh
  4166fc:	mov    ds:0xdc86ffff,eax
  416701:	fdiv   st(7),st
  416703:	push   DWORD PTR [edi+edi*8-0x36907d01]
  41670a:	add    BYTE PTR [eax],al
  41670c:	dec    esi
  41670d:	inc    DWORD PTR [eax]
  41670f:	in     eax,0x9a
  416711:	sti    
  416712:	(bad)  
  416713:	(bad)  
  416714:	stc    
  416715:	or     DWORD PTR [ecx-0x1a2739],0xffffffff
  41671c:	xchg   esi,eax
  41671d:	(bad)  
  41671e:	jmp    ebp
  416720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416721:	mov    WORD PTR [eax],es
  416723:	add    BYTE PTR [esi-0x77],ch
  416726:	jmp    esp
  416728:	ret    
  416729:	push   0xff538300
  41672e:	jmp    edx
  416730:	in     eax,0x95
  416732:	(bad)  
  416733:	push   DWORD PTR [esi-0x1]
  416736:	int3   
  416737:	add    BYTE PTR [esi+ecx*4-0x1],bh
  41673b:	add    cl,bh
  41673d:	add    BYTE PTR [eax],al
  41673f:	js     0x41679d
  416741:	cwde   
  416742:	inc    DWORD PTR [eax]
  416744:	xor    cl,ah
  416746:	(bad)  
  416747:	fcmovnu st,st(0)
  416749:	pop    ds
  41674a:	(bad)  
  41674b:	push   DWORD PTR [ecx]
  41674d:	add    DWORD PTR [ebx-0x7c95561e],0x0
  416754:	or     al,0x83
  416756:	add    BYTE PTR [ebp-0xff9c69],bl
  41675c:	lods   eax,DWORD PTR ds:[esi]
  41675d:	add    BYTE PTR [ecx-0x1e5443],cl
  416763:	call   FWORD PTR [edi+0x0]
  416766:	call   edi
  416768:	(bad)
  41676c:	stc    
  41676d:	add    bh,bh
  41676f:	adc    eax,0xff00101f
  416774:	sub    BYTE PTR [ebx-0x26d9107d],al
  41677a:	add    bh,bh
  41677c:	cmc    
  41677d:	(bad)  
  41677e:	dec    DWORD PTR [esp+edi*8-0x3f]
  416782:	add    ah,cl
  416784:	mov    bh,0xcc
  416786:	mov    DWORD PTR [esp+eiz*8+0x44ff8307],edi
  41678d:	inc    DWORD PTR [ebx-0x5aefe]
  416793:	int3   
  416794:	imul   eax,DWORD PTR [ebx-0x4351f501],0xffffffff
  41679b:	int3   
  41679c:	add    edi,edi
  41679e:	inc    edx
  4167a0:	xor    bh,BYTE PTR [esi+0x0]
  4167a3:	mov    DWORD PTR [esi-0x1],ebp
  4167a6:	call   DWORD PTR [ebx]
  4167a8:	call   0xef4068a2
  4167ad:	add    bh,bh
  4167af:	or     edx,ebx
  4167b1:	mov    al,0xff
  4167b3:	push   DWORD PTR [ecx+0xae100ff]
  4167b9:	xchg   edx,eax
  4167ba:	dec    esp
  4167bc:	outs   dx,BYTE PTR ds:[esi]
  4167bd:	inc    DWORD PTR [ebx-0xa1decb]
  4167c3:	inc    edi
  4167c5:	add    DWORD PTR [eax],0xfffffff7
  4167c8:	jmp    0x4167da
  4167ca:	add    DWORD PTR [ebx+0x4cff83d0],0xa
  4167d1:	inc    DWORD PTR gs:[eax]
  4167d4:	popf   
  4167d5:	mov    DWORD PTR [eax],eax
  4167d7:	push   edi
  4167d8:	push   edx
  4167d9:	pop    ebx
  4167da:	(bad)  
  4167db:	call   FWORD PTR [eax+0x5fe300cc]
  4167e1:	stc    
  4167e2:	inc    DWORD PTR [eax]
  4167e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e5:	(bad)  
  4167e6:	push   DWORD PTR [eax+edx*2-0x1]
  4167ea:	add    DWORD PTR [eax],0x9
  4167ed:	cmp    edi,0xffffffc0
  4167f0:	or     cl,ch
  4167f2:	add    bh,bh
  4167f4:	fld    QWORD PTR [eax]
  4167f6:	or     DWORD PTR [edi-0x3300c081],0xffffffad
  4167fd:	(bad)  
  4167fe:	dec    DWORD PTR [edx]
  416800:	out    0xcf,al
  416802:	inc    DWORD PTR [ebx+0x12ffffc1]
  416808:	aam    0x90
  41680a:	add    BYTE PTR [ebx+0x3800ffad],al
  416810:	ret    
  416811:	sbb    bh,bh
  416813:	add    BYTE PTR [esi-0x494e7d00],cl
  416819:	cmp    al,BYTE PTR [eax]
  41681b:	or     DWORD PTR [ecx],0xffffffcc
  41681e:	add    BYTE PTR [edx],al
  416820:	adc    BYTE PTR [edi-0x6b7634],dh
  416826:	push   DWORD PTR [ebx-0x7c62d6]
  41682c:	inc    esp
  41682d:	(bad)  
  41682e:	dec    DWORD PTR [eax-0x74]
  416831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416832:	dec    DWORD PTR [ecx-0x6d007ca1]
  416838:	push   esp
  416839:	mov    ebx,0x837dff00
  41683e:	call   DWORD PTR [edi-0x33ffe214]
  416844:	push   ebx
  416845:	(bad)  
  416846:	(bad)  
  416847:	jle    0x4168b5
  416849:	and    eax,0xff73ffff
  41684e:	add    bl,dl
  416850:	pushf  
  416851:	(bad)  
  416852:	(bad)  
  416853:	inc    DWORD PTR [eax+eax*1]
  416856:	sbb    DWORD PTR [edi-0xffeaea],0x25
  41685d:	(bad)  
  41685e:	call   DWORD PTR [edx-0x33ff589e]
  416864:	add    ah,cl
  416866:	add    BYTE PTR [edi],cl
  416868:	lock inc ebx
  41686a:	cmp    edi,0x64
  41686d:	inc    DWORD PTR [eax]
  41686f:	jno    0x416896
  416871:	inc    DWORD PTR [eax]
  416873:	and    edi,0xffffffff
  416876:	mov    DWORD PTR [ebx-0x5bc5],ecx
  41687c:	add    BYTE PTR [eax],0xff
  41687f:	nop
  416880:	or     esi,DWORD PTR [ebp-0x95ff34]
  416886:	int3   
  416887:	xchg   ebx,eax
  416888:	or     ebp,DWORD PTR [eax]
  41688a:	(bad)  
  41688b:	(bad)  
  41688c:	cmp    al,BYTE PTR [eax]
  41688e:	jmp    FWORD PTR [eax]
  416890:	lock loopne 0x416892
  416893:	add    ch,dl
  416895:	inc    DWORD PTR [eax]
  416897:	mov    edi,0xff1d2c
  41689c:	std    
  41689d:	add    BYTE PTR [eax],al
  41689f:	sbb    ebp,DWORD PTR [ecx-0x29]
  4168a2:	inc    DWORD PTR [eax]
  4168a4:	add    al,BYTE PTR [ebx+0x414b1e83]
  4168aa:	add    DWORD PTR [ebx-0x220033a5],0xffffffd8
  4168b1:	fcos   
  4168b3:	jmp    eax
  4168b5:	dec    DWORD PTR [ecx-0xe4cdd2]
  4168bb:	add    BYTE PTR [eax+0x59cd00ff],dh
  4168c1:	xchg   edi,edi
  4168c3:	(bad)  
  4168c4:	cmp    DWORD PTR [ecx+0x8b1a000],ecx
  4168ca:	add    DWORD PTR [eax],0x15
  4168cd:	add    bh,bh
  4168cf:	(bad)  
  4168d0:	jl     0x41687c
  4168d2:	add    BYTE PTR [ebx-0x5833ff7c],al
  4168d8:	imul   edx,DWORD PTR [ecx],0x2b0089
  4168de:	jmp    FWORD PTR [ebx-0xfffda3]
  4168e4:	outs   dx,DWORD PTR ds:[esi]
  4168e5:	(bad)  
  4168e6:	push   DWORD PTR [esi]
  4168e8:	mov    edi,0xab8300b5
  4168ed:	cmp    edi,0xffffffed
  4168f0:	shl    BYTE PTR ds:0x8398ff83,0xff
  4168f7:	xchg   ebx,eax
  4168f8:	iret   
  4168f9:	or     DWORD PTR [eax],eax
  4168fb:	add    BYTE PTR [ebx+eax*4+0x2b1645ff],bl
  416902:	add    BYTE PTR [ebx-0x627c00ba],al
  416908:	push   ds
  416909:	icebp  
  41690a:	add    DWORD PTR [eax],0x20
  41690d:	mov    DWORD PTR [eax],eax
  41690f:	inc    esp
  416910:	push   ss
  416911:	sub    cl,ah
  416913:	push   DWORD PTR [ebp-0x45130100]
  416919:	push   cs
  41691a:	add    DWORD PTR [ebx+0x1a00cca7],0xffffff8e
  416921:	push   ebp
  416922:	dec    esp
  416924:	or     ah,cl
  416926:	add    BYTE PTR [esi],dh
  416928:	mov    ds:0x668300c9,al
  41692d:	int3   
  41692e:	(bad)  
  41692f:	sti    
  416930:	push   0xd2ffff0d
  416935:	(bad)  
  416936:	(bad)  
  416937:	js     0x416964
  416939:	mov    esp,0x834cffff
  41693e:	int3   
  41693f:	fdivp  st(4),st
  416941:	loopne 0x416943
  416943:	call   ebx
  416945:	add    BYTE PTR [ebx+0x167b8c],al
  41694b:	add    ah,dl
  41694d:	add    DWORD PTR [ebx-0x7c863202],0xffffffff
  416954:	mov    al,BYTE PTR [eax]
  416956:	sbb    DWORD PTR [ebx],0x6a
  416959:	mov    eax,ds:0xff358300
  41695e:	add    BYTE PTR [ebp-0xff1f7f],bh
  416964:	pop    edi
  416965:	add    BYTE PTR [eax],al
  416967:	loope  0x41694d
  416969:	inc    esi
  41696a:	add    BYTE PTR [eax],al
  41696c:	pop    ebx
  41696d:	int3   
  41696e:	int3   
  41696f:	retf   0x333b
  416972:	add    bh,bh
  416974:	mov    ecx,0xbcc3ff00
  416979:	dec    eax
  41697a:	inc    DWORD PTR [eax]
  41697c:	cmp    al,0x0
  41697e:	adc    DWORD PTR [ebx-0xffd51c],0xffffffab
  416985:	int3   
  416986:	call   edx
  416988:	retf   
  416989:	jb     0x416957
  41698b:	add    BYTE PTR [ecx],dl
  41698d:	add    DWORD PTR [eax],0xffffffef
  416990:	mov    bl,0xf6
  416992:	inc    DWORD PTR [ebx-0x26ffff44]
  416998:	inc    ebp
  416999:	mov    al,ds:0x458900
  41699e:	push   DWORD PTR [edi+ebx*4]
  4169a1:	cld    
  4169a2:	add    bh,bh
  4169a4:	push   eax
  4169a5:	inc    DWORD PTR [ebx-0x7cd0e808]
  4169ab:	int3   
  4169ac:	into   
  4169ad:	add    bh,bh
  4169af:	fsub   DWORD PTR [edx-0x37ff33b1]
  4169b5:	int3   
  4169b6:	and    DWORD PTR [eax+0x121c],0xffffff9c
  4169bd:	(bad)  
  4169be:	(bad)  
  4169bf:	sti    
  4169c0:	scas   eax,DWORD PTR es:[edi]
  4169c1:	inc    ecx
  4169c2:	add    bh,bh
  4169c4:	pop    ebp
  4169c5:	add    bh,bh
  4169c7:	(bad)  
  4169c8:	sti    
  4169c9:	jb     0x4169ca
  4169cb:	call   DWORD PTR ds:0x8686ffff
  4169d1:	cmc    
  4169d2:	int3   
  4169d3:	add    ch,al
  4169d5:	add    BYTE PTR [eax],al
  4169d7:	dec    edi
  4169d8:	sbb    ebp,eax
  4169da:	dec    DWORD PTR [ecx-0x633300aa]
  4169e0:	pop    ebx
  4169e1:	test   BYTE PTR [ebx+0x835700],0x54
  4169e8:	scas   al,BYTE PTR es:[edi]
  4169e9:	jns    0x41696e
  4169eb:	dec    esi
  4169ed:	inc    DWORD PTR [eax]
  4169ef:	adc    al,BYTE PTR [eax-0xdff0057]
  4169f5:	add    bh,bh
  4169f7:	xchg   esi,eax
  4169f8:	or     ebp,DWORD PTR [ebp-0x7c137c01]
  4169fe:	jmp    FWORD PTR [ecx]
  416a00:	mov    ebx,eax
  416a02:	add    bh,bh
  416a04:	dec    ebx
  416a05:	int3   
  416a06:	add    BYTE PTR [esi-0xff0c52],dh
  416a0c:	repz (bad) 
  416a0e:	push   DWORD PTR [ebx+ecx*8-0x5a]
  416a12:	mov    edi,edi
  416a14:	in     al,0xff
  416a16:	inc    esp
  416a18:	jnp    0x416a10
  416a1a:	cmp    edi,0xffffff83
  416a1d:	add    DWORD PTR [eax],0x22
  416a20:	cmp    BYTE PTR [edx-0x1],dh
  416a23:	jmp    FWORD PTR ds:0x10ca89cc
  416a29:	mov    ah,0x83
  416a2b:	add    BYTE PTR [ebx+eax*4],dh
  416a2e:	call   FWORD PTR [eax-0xf]
  416a31:	ror    ah,cl
  416a33:	call   FWORD PTR [esi-0x2e0001]
  416a39:	inc    edi
  416a3a:	(bad)  
  416a3b:	call   FWORD PTR [esi]
  416a3d:	cmp    edi,0x41
  416a40:	retf   
  416a41:	scas   eax,DWORD PTR es:[edi]
  416a42:	add    bh,bh
  416a44:	mov    bh,bh
  416a46:	add    BYTE PTR [edx+0x50],bh
  416a49:	mov    ?,edi
  416a4b:	add    BYTE PTR [esi-0x2e310000],ah
  416a51:	adc    eax,DWORD PTR [ebx-0x76fe34]
  416a57:	jg     0x416a50
  416a59:	sub    bh,bh
  416a5b:	mov    DWORD PTR [esi-0x1],edi
  416a5e:	add    al,al
  416a60:	mov    DWORD PTR [eax+eax*1],edi
  416a63:	inc    DWORD PTR [eax+eax*1]
  416a66:	sub    DWORD PTR [esi+0x7f],0xffffffd8
  416a6a:	add    bh,bh
  416a6c:	sub    al,0x0
  416a6e:	add    BYTE PTR [edi+0xff28a5],bh
  416a74:	das    
  416a75:	int3   
  416a76:	or     DWORD PTR [eax],0x18
  416a79:	mov    BYTE PTR [ecx-0x33767334],cl
  416a7f:	ins    BYTE PTR es:[edi],dx
  416a80:	push   ss
  416a81:	jl     0x416a83
  416a83:	inc    DWORD PTR [ebp-0x4e9c0100]
  416a89:	mov    esi,0x8370cc00
  416a8e:	add    BYTE PTR [esi+ebx*8],bh
  416a91:	jmp    0x55ff:0x7100ff
  416a98:	jb     0x416a33
  416a9a:	inc    DWORD PTR [eax]
  416a9c:	int3   
  416a9d:	(bad)  
  416a9e:	(bad)  
  416a9f:	stc    
  416aa0:	aaa    
  416aa1:	scas   al,BYTE PTR es:[edi]
  416aa2:	or     esp,0x4f
  416aa5:	add    bh,bh
  416aa7:	mov    cl,0x91
  416aa9:	retf   0x89ff
  416aac:	test   bh,bh
  416aae:	jmp    FWORD PTR [ecx+0xffe229]
  416ab4:	(bad)  
  416ab5:	inc    DWORD PTR [eax]
  416ab7:	cmp    BYTE PTR [esi+eiz*2-0x77],cl
  416abb:	jmp    DWORD PTR [edx]
  416abd:	add    bh,bh
  416abf:	mov    al,0xc6
  416ac1:	retf   
  416ac2:	mov    edi,edi
  416ac4:	and    BYTE PTR [eax],al
  416ac6:	dec    DWORD PTR [edx]
  416ac8:	push   edi
  416ac9:	cmp    al,BYTE PTR [eax]
  416acb:	jmp    DWORD PTR ds:0x8efb0000
  416ad1:	lods   eax,DWORD PTR ds:[esi]
  416ad2:	inc    DWORD PTR [ebx+0x8000049]
  416ad8:	mov    edx,0xddff0042
  416add:	(bad)  
  416ade:	jmp    DWORD PTR [eax+eax*2-0x5bff0082]
  416ae5:	(bad)  
  416ae6:	(bad)  
  416ae7:	cmp    DWORD PTR [edx],ecx
  416ae9:	aam    0xff
  416aeb:	call   ebp
  416aed:	inc    DWORD PTR [ebx-0x2f5798]
  416af3:	jmp    edx
  416af5:	add    bh,bh
  416af7:	rcl    BYTE PTR [ebx],cl
  416af9:	inc    ebp
  416afa:	mov    edi,edi
  416afc:	cmp    cl,BYTE PTR [ecx+0x60ad389]
  416b02:	add    BYTE PTR [ebx-0x7a003329],al
  416b08:	mov    ecx,0x7700ff2d
  416b0d:	dec    DWORD PTR [ecx+0x2251ab]
  416b13:	add    BYTE PTR [ebp+0x163583cc],ah
  416b19:	sldt   WORD PTR [eax]
  416b1c:	jle    0x416b1d
  416b1e:	add    BYTE PTR [eax-0x29],dl
  416b21:	xchg   edx,eax
  416b22:	add    bh,bh
  416b24:	pop    edi
  416b25:	add    bh,bh
  416b27:	out    dx,eax
  416b28:	add    ah,bh
  416b2a:	(bad)  
  416b2b:	jmp    FWORD PTR [esi+0x0]
  416b2e:	add    bh,al
  416b30:	std    
  416b31:	lock int3 
  416b33:	sub    DWORD PTR [ecx],0xffffff83
  416b36:	mov    DWORD PTR [esi-0x60],ecx
  416b39:	and    BYTE PTR [eax],al
  416b3b:	jmp    edx
  416b3d:	add    DWORD PTR [eax],0x11
  416b40:	adc    eax,0xc7ffffb9
  416b45:	add    BYTE PTR [ebx-0x7cc92dc0],al
  416b4b:	adc    DWORD PTR [ebp-0x34],0xffffffff
  416b4f:	aaa    
  416b50:	in     al,dx
  416b51:	rol    DWORD PTR [eax],cl
  416b53:	jmp    DWORD PTR [edx-0x382d0100]
  416b59:	icebp  
  416b5a:	(bad)  
  416b5b:	push   DWORD PTR [ebx-0x1]
  416b5e:	add    dl,bl
  416b60:	ficomp WORD PTR [eax+eax*1-0xff5000]
  416b67:	xchg   esi,eax
  416b68:	mov    bl,0x34
  416b6a:	(bad)  
  416b6b:	call   DWORD PTR [esi+0x3ec300ff]
  416b71:	pop    esp
  416b72:	inc    DWORD PTR [eax]
  416b74:	inc    DWORD PTR es:[eax]
  416b77:	mov    bh,0x21
  416b79:	hlt    
  416b7a:	add    bh,bh
  416b7c:	cdq    
  416b7d:	add    BYTE PTR [ebx-0x33263aaa],al
  416b83:	mov    DWORD PTR [esi],ecx
  416b85:	add    DWORD PTR [eax],0x46
  416b88:	and    BYTE PTR [eax],al
  416b8a:	mov    DWORD PTR [ebx-0x7933ff46],eax
  416b90:	push   0xffffffe6
  416b92:	inc    DWORD PTR [eax]
  416b94:	add    eax,0x6cd489ff
  416b99:	mov    ?,edi
  416b9b:	call   FWORD PTR [ebp-0x7d]
  416b9e:	add    bl,bl
  416ba0:	jno    0x416ba7
  416ba2:	add    BYTE PTR [eax],al
  416ba4:	fild   WORD PTR [eax]
  416ba6:	call   DWORD PTR [ecx+0x3f]
  416ba9:	mov    bh,0xff
  416bab:	add    BYTE PTR [eax],ah
  416bad:	add    bh,bh
  416baf:	gs aam 0x80
  416bb2:	dec    esp
  416bb4:	add    DWORD PTR [ebx-0x2e829e00],eax
  416bba:	(bad)  
  416bbb:	call   DWORD PTR [ebx-0x1]
  416bbe:	adc    DWORD PTR [ebx+0xb],0x37
  416bc2:	add    BYTE PTR [eax],al
  416bc4:	mov    esp,0x9cdf0000
  416bc9:	sub    al,0xff
  416bcb:	push   DWORD PTR [edi+edi*8]
  416bce:	call   esi
  416bd0:	(bad)  
  416bd1:	sbb    BYTE PTR [eax],al
  416bd3:	dec    DWORD PTR [edi]
  416bd5:	inc    DWORD PTR [ebx-0xd23ebd]
  416bdb:	(bad)  
  416bdc:	jmp    0xff4f:0x87aa00cc
  416be3:	call   FWORD PTR [esi-0x2cf0ff01]
  416be9:	mov    ds:0xfff3ffcc,al
  416bee:	inc    DWORD PTR [edx-0x3300f798]
  416bf4:	push   0xb2920000
  416bf9:	mov    ds:0x91ffff,al
  416bfe:	cmp    DWORD PTR [esi],0x16
  416c01:	ret    
  416c02:	inc    DWORD PTR [ebx-0x18ff0040]
  416c08:	xor    eax,0x34ffffb6
  416c0d:	mov    DWORD PTR [ebx-0xfca3ac],eax
  416c13:	jmp    FWORD PTR [eax+eax*1]
  416c16:	add    BYTE PTR [edx-0xb223],dl
  416c1c:	pop    edx
  416c1d:	(bad)  
  416c1e:	call   FWORD PTR [edx-0x737a]
  416c24:	mov    ebx,0xbd8b8900
  416c29:	ror    DWORD PTR [ecx-0x8f01],1
  416c2f:	int    0x33
  416c31:	imul   edi,edi,0x0
  416c34:	and    bh,bh
  416c36:	add    BYTE PTR [ecx+0x17],cl
  416c39:	repnz add BYTE PTR [eax],al
  416c3c:	xchg   esi,eax
  416c3d:	add    BYTE PTR [eax],al
  416c3f:	mov    bl,0xb6
  416c41:	jecxz  0x416c42
  416c43:	add    BYTE PTR [edi+0x50f3ffff],cl
  416c49:	mov    al,ds:0xff39ff83
  416c4e:	add    al,cl
  416c50:	std    
  416c51:	(bad)  
  416c52:	dec    esp
  416c54:	into   
  416c55:	inc    DWORD PTR [ebx-0xc84c7d]
  416c5b:	adc    DWORD PTR [edx-0x38397677],0x25
  416c62:	int3   
  416c63:	int3   
  416c64:	xchg   edx,eax
  416c65:	int3   
  416c66:	add    BYTE PTR [ebp-0xffafe6],ch
  416c6c:	pop    ss
  416c6d:	int3   
  416c6e:	add    dh,bl
  416c70:	lods   eax,DWORD PTR ds:[esi]
  416c71:	xchg   ecx,eax
  416c72:	add    BYTE PTR [eax],al
  416c74:	xlat   BYTE PTR ds:[ebx]
  416c75:	add    BYTE PTR [eax],al
  416c77:	push   ebp
  416c78:	xor    al,0x61
  416c7a:	mov    DWORD PTR [eax],eax
  416c7c:	sub    eax,0xa64cccff
  416c81:	(bad)  
  416c83:	add    edi,0xffffffff
  416c86:	(bad)  
  416c87:	cmp    esp,DWORD PTR [edi]
  416c89:	stos   BYTE PTR es:[edi],al
  416c8a:	mov    DWORD PTR [ebx+0x27cc8396],eax
  416c90:	js     0x416d0c
  416c92:	inc    DWORD PTR [ebx+0xd00ffdd]
  416c98:	mov    dh,0x2d
  416c9a:	add    BYTE PTR [eax],al
  416c9c:	test   BYTE PTR [eax],al
  416c9e:	(bad)  
  416c9f:	std    
  416ca0:	enter  0xcc50,0x0
  416ca4:	sti    
  416ca5:	add    BYTE PTR [ebx-0xa1a968],al
  416cab:	and    ecx,0xffffffff
  416cae:	add    BYTE PTR [ebp+0x3b],al
  416cb1:	or     edi,edi
  416cb3:	(bad)  
  416cb4:	sti    
  416cb5:	inc    DWORD PTR [eax]
  416cb7:	or     eax,0xffff2801
  416cbc:	sbb    al,BYTE PTR [ebx+0x4f955683]
  416cc2:	int3   
  416cc3:	add    BYTE PTR [edi+edi*8-0x1],bh
  416cc7:	push   es
  416cc8:	inc    esi
  416cc9:	mov    ch,0xff
  416ccb:	dec    ebp
  416ccd:	add    BYTE PTR [ebx+0x15dcdb],al
  416cd3:	push   DWORD PTR [edx-0x1]
  416cd6:	mov    DWORD PTR [edi-0x72],esp
  416cd9:	and    eax,0xccf5ffff
  416cde:	add    BYTE PTR [esi+0x3e],bh
  416ce1:	pop    esp
  416ce2:	(bad)  
  416ce3:	dec    DWORD PTR [eax-0x1]
  416ce6:	add    BYTE PTR [esp+ebx*1],dh
  416ce9:	stos   BYTE PTR es:[edi],al
  416cea:	add    bh,bh
  416cec:	xchg   ebp,eax
  416ced:	add    BYTE PTR [eax],al
  416cef:	jmp    0x416cf5
  416cf1:	out    0x0,al
  416cf3:	add    BYTE PTR [edi+edi*8],dh
  416cf6:	jmp    FWORD PTR [ebp-0x33]
  416cf9:	push   cs
  416cfa:	add    BYTE PTR [ecx+0x7eff89a9],cl
  416d00:	ret    
  416d01:	rol    DWORD PTR [eax],cl
  416d03:	add    dh,al
  416d05:	inc    DWORD PTR [eax]
  416d07:	add    BYTE PTR [edi],0x9
  416d0a:	(bad)  
  416d0b:	(bad)  
  416d0c:	jnp    0x416d0d
  416d0e:	dec    DWORD PTR [edx]
  416d10:	jbe    0x416d29
  416d12:	(bad)  
  416d13:	push   DWORD PTR [ebp-0x1]
  416d16:	add    BYTE PTR [ecx+0x76],cl
  416d19:	mov    ebp,0xff840083
  416d1e:	(bad)  
  416d1f:	mov    edi,0x83007d3c
  416d24:	aam    0xff
  416d26:	add    BYTE PTR [ebx+0x57],bh
  416d29:	mov    WORD PTR [ebx+0x8384cc],es
  416d2f:	push   edi
  416d30:	and    DWORD PTR ds:0x6000ff,esp
  416d36:	jmp    ecx
  416d38:	fdivr  st(7),st
  416d3a:	add    bh,bh
  416d3c:	add    DWORD PTR fs:[ebx-0x2c9eb3],0x0
  416d44:	cmp    al,0xff
  416d46:	mov    ebx,ebx
  416d48:	cmp    DWORD PTR [esi+0x5a0083],esi
  416d4e:	add    BYTE PTR [ecx-0x7c7c95dc],bl
  416d54:	pop    esp
  416d55:	add    DWORD PTR [eax],0x64
  416d58:	jge    0x416d10
  416d5a:	add    DWORD PTR [eax],0x0
  416d5d:	add    bh,bh
  416d5f:	cmc    
  416d60:	and    cl,BYTE PTR [edi-0x7d]
  416d63:	call   FWORD PTR [ebx-0x1fbeff01]
  416d69:	cmp    al,0xff
  416d6b:	inc    DWORD PTR [ecx]
  416d6d:	add    ah,cl
  416d6f:	aas    
  416d70:	mov    edx,0xaa00ff88
  416d75:	add    BYTE PTR [ebx+0xa87b02],al
  416d7b:	add    BYTE PTR [edi+edi*8+0x0],bl
  416d7f:	(bad)  
  416d81:	add    BYTE PTR fs:[eax],al
  416d84:	pop    ebp
  416d85:	inc    DWORD PTR [ebx+0xfaf67e]
  416d8b:	add    BYTE PTR [esi+0x2c25cc00],al
  416d91:	fld    DWORD PTR [ebx-0xffb501]
  416d97:	push   cs
  416d98:	lods   eax,DWORD PTR ds:[esi]
  416d99:	push   ecx
  416d9a:	add    ah,cl
  416d9c:	inc    ecx
  416d9d:	add    bh,bh
  416d9f:	sar    BYTE PTR [ebx-0xe33003d],1
  416da5:	inc    DWORD PTR [eax]
  416da7:	cmc    
  416da8:	leave  
  416da9:	pushf  
  416daa:	dec    DWORD PTR [ecx+0x23ffff3b]
  416db0:	push   ss
  416db1:	into   
  416db2:	add    BYTE PTR [eax],al
  416db4:	bound  ecx,QWORD PTR [ecx+0x12d44400]
  416dba:	(bad)  
  416dbb:	jmp    DWORD PTR [ecx]
  416dbd:	add    bh,bh
  416dbf:	sub    al,ch
  416dc1:	push   cs
  416dc2:	inc    DWORD PTR [eax]
  416dc4:	jl     0x416dc6
  416dc6:	call   FWORD PTR [ecx-0x63]
  416dc9:	fld    DWORD PTR [eax]
  416dcb:	add    edx,0x0
  416dce:	add    bh,ah
  416dd0:	push   edx
  416dd1:	xchg   ecx,eax
  416dd2:	(bad)  
  416dd3:	call   DWORD PTR [edx]
  416dd5:	add    BYTE PTR [eax],al
  416dd7:	scas   al,BYTE PTR es:[edi]
  416dd8:	icebp  
  416dd9:	mov    ecx,0xff8b0000
  416dde:	adc    edi,0x39
  416de1:	xchg   edi,eax
  416de2:	add    BYTE PTR [ebx-0x3376ff89],al
  416de8:	int3   
  416de9:	xor    BYTE PTR [ecx+0xfff8ff],cl
  416def:	or     esi,DWORD PTR [edi+0x38]
  416df2:	mov    esp,ecx
  416df4:	retf   
  416df5:	cmp    edi,0xffffff98
  416df8:	sbb    esp,DWORD PTR [ecx]
  416dfa:	(bad)  
  416dfb:	jmp    FWORD PTR [ecx]
  416dfd:	add    BYTE PTR [ebx-0x7ca22a2b],al
  416e03:	call   FWORD PTR [edi+edi*8+0x2f8b85ff]
  416e0a:	inc    DWORD PTR [eax]
  416e0c:	add    eax,0x1baeff00
  416e11:	sar    edi,1
  416e13:	sbb    DWORD PTR [eax],0xffffff83
  416e16:	call   ecx
  416e18:	dec    esp
  416e19:	sub    ah,cl
  416e1b:	sub    ebp,0x0
  416e1e:	add    BYTE PTR [ecx-0x7c9c79],cl
  416e24:	xchg   edi,eax
  416e25:	inc    DWORD PTR [eax]
  416e27:	dec    ebp
  416e28:	shl    DWORD PTR [eax],1
  416e2a:	inc    DWORD PTR [eax]
  416e2c:	pop    eax
  416e2d:	add    bh,bh
  416e2f:	shl    BYTE PTR [eax+0x36],cl
  416e32:	inc    DWORD PTR [eax]
  416e34:	dec    edi
  416e35:	(bad)  
  416e36:	push   DWORD PTR [edx+0x49]
  416e39:	mov    BYTE PTR [eax],0xff
  416e3c:	icebp  
  416e3d:	cmp    edi,0xffffff85
  416e40:	pop    ebp
  416e41:	mov    cl,0x0
  416e43:	int3   
  416e44:	adc    BYTE PTR [eax],al
  416e46:	mov    DWORD PTR [edi],edi
  416e48:	in     eax,dx
  416e49:	(bad)  
  416e4a:	inc    DWORD PTR [ebx-0x31ff0058]
  416e50:	mov    bh,0xbb
  416e52:	mov    edi,edi
  416e54:	dec    esp
  416e56:	mov    DWORD PTR [ecx+0x1a],ecx
  416e59:	dec    esp
  416e5a:	cmp    edi,0xffffffe1
  416e5d:	(bad)  
  416e5e:	dec    DWORD PTR [edx]
  416e60:	inc    ebp
  416e61:	pop    ss
  416e62:	(bad)  
  416e63:	jmp    DWORD PTR [edx-0x5eeb7601]
  416e69:	jb     0x416e6a
  416e6b:	push   DWORD PTR [edx]
  416e6d:	add    BYTE PTR [eax],al
  416e6f:	cmp    dh,ch
  416e71:	jle    0x416e72
  416e73:	sbb    edx,0xffffffff
  416e76:	dec    DWORD PTR [ebx-0x6a73]
  416e7c:	jb     0x416e7d
  416e7e:	jmp    FWORD PTR [ebx+0xff0534]
  416e84:	xor    eax,0x37f40000
  416e89:	mov    bl,0x83
  416e8b:	add    BYTE PTR [ebx+eax*4-0x1],ch
  416e8f:	shl    DWORD PTR [edx+0x1f],0x83
  416e93:	mov    ecx,ecx
  416e95:	add    bh,bh
  416e97:	lock inc esp
  416e99:	pop    edi
  416e9a:	add    bh,bh
  416e9c:	in     al,dx
  416e9d:	inc    DWORD PTR [ebx-0x8a6ecf]
  416ea3:	mov    DWORD PTR [ebx-0x1],esi
  416ea6:	call   FWORD PTR [ecx+0x7c]
  416ea9:	leave  
  416eaa:	dec    DWORD PTR [ecx-0x387c7cc2]
  416eb0:	out    0x6f,al
  416eb2:	add    DWORD PTR [ebx+0x9ffff53],0xffffffd8
  416eb9:	mov    eax,DWORD PTR [eax]
  416ebb:	call   DWORD PTR [edi+edi*8-0x1]
  416ebf:	cmp    BYTE PTR fs:[ebx],bh
  416ec2:	dec    esp
  416ec4:	mov    dl,0x0
  416ec6:	call   DWORD PTR [ebp+0x17]
  416ec9:	sbb    bh,bh
  416ecb:	jmp    DWORD PTR [ecx+0x0]
  416ece:	sbb    DWORD PTR [esi-0x66],0x4f
  416ed2:	add    DWORD PTR [eax],0xffffff93
  416ed5:	add    bh,bh
  416ed7:	mov    esi,0xffffaec3
  416edc:	outs   dx,DWORD PTR ds:[esi]
  416edd:	(bad)  
  416ede:	call   FWORD PTR [edx-0x4d]
  416ee1:	cld    
  416ee2:	add    bh,bh
  416ee4:	ds add bh,bh
  416ee7:	imul   eax,esp,0xffffffe1
  416eea:	(bad)  
  416eeb:	call   FWORD PTR [ecx]
  416eed:	inc    DWORD PTR [eax]
  416eef:	sub    bl,BYTE PTR [esi+eiz*4+0xf8cc00]
  416ef6:	add    BYTE PTR [edx+esi*8-0x27],cl
  416efa:	inc    DWORD PTR [eax]
  416efc:	push   esi
  416efd:	inc    DWORD PTR [eax]
  416eff:	inc    esi
  416f00:	add    DWORD PTR [edx-0x77],esp
  416f03:	add    bh,bh
  416f05:	(bad)  
  416f06:	(bad)  
  416f07:	cmp    BYTE PTR [edi],bl
  416f09:	cmp    eax,0x300ff
  416f0e:	inc    DWORD PTR [ebp-0x1cb6]
  416f14:	das    
  416f15:	dec    DWORD PTR [ecx+0x2c97a8]
  416f1b:	add    dl,bh
  416f1d:	add    DWORD PTR [eax],0x2d
  416f20:	jmp    0xda406fa4
  416f25:	add    BYTE PTR [ebx+0x4b504a],al
  416f2b:	mov    DWORD PTR [ebp+0x502b8900],esp
  416f31:	mov    al,0xff
  416f33:	int3   
  416f34:	mov    bl,0xff
  416f36:	dec    DWORD PTR [edx-0xff4026]
  416f3c:	cmp    ecx,esp
  416f3e:	add    dl,bh
  416f40:	repz or eax,DWORD PTR [eax]
  416f43:	add    BYTE PTR [edi+0x0],al
  416f46:	sbb    DWORD PTR [edx],0x3f
  416f49:	ds int3 
  416f4b:	add    BYTE PTR [edx+0x1f7c83ff],al
  416f51:	mov    ebx,0x8100ff
  416f56:	dec    DWORD PTR [ebx-0x44]
  416f59:	mov    al,ds:0xf20000
  416f5e:	add    al,cl
  416f60:	fadd   QWORD PTR [edx]
  416f62:	(bad)  
  416f63:	call   FWORD PTR [edx]
  416f65:	add    DWORD PTR [ebx-0x7c5185bc],0x0
  416f6c:	aaa    
  416f6d:	add    BYTE PTR [eax],al
  416f6f:	jno    0x416efa
  416f71:	call   0x9900:0xff3800ff
  416f78:	fcmovnu st,st(6)
  416f7a:	add    bh,bh
  416f7c:	pop    ecx
  416f7d:	inc    DWORD PTR [eax]
  416f7f:	xchg   esp,eax
  416f80:	pop    ebp
  416f81:	and    bh,bh
  416f83:	(bad)  
  416f84:	mov    esp,0xc95289ff
  416f89:	scas   eax,DWORD PTR es:[edi]
  416f8a:	int3   
  416f8b:	jmp    DWORD PTR [ebp-0x596f007d]
  416f91:	inc    esi
  416f92:	(bad)  
  416f93:	jmp    FWORD PTR [ecx]
  416f95:	dec    esp
  416f97:	or     eax,0x89ffa286
  416f9c:	dec    ebx
  416f9d:	(bad)  
  416f9e:	dec    esp
  416fa0:	sub    edx,ebx
  416fa2:	add    bh,bh
  416fa4:	das    
  416fa5:	(bad)  
  416fa6:	push   ecx
  416fa8:	push   ebp
  416fa9:	fld    DWORD PTR [ebx+0xcc2dff]
  416faf:	push   ebx
  416fb0:	stc    
  416fb1:	pop    ebx
  416fb2:	int3   
  416fb3:	push   DWORD PTR [ebp+0x3a63ffff]
  416fb9:	(bad)  
  416fba:	(bad)  
  416fbb:	call   DWORD PTR [ebx]
  416fbd:	dec    esp
  416fbf:	imul   edi,edx,0x4b
  416fc2:	int3   
  416fc3:	or     DWORD PTR [edx-0x1],0xffffffff
  416fc7:	(bad)  
  416fc8:	inc    ebp
  416fc9:	mov    bl,0x0
  416fcb:	jmp    FWORD PTR [eax-0x1]
  416fce:	add    BYTE PTR [ecx+0x19],bl
  416fd1:	xchg   ecx,eax
  416fd2:	add    BYTE PTR [eax],al
  416fd4:	call   0xff16:0x5194cc00
  416fdb:	add    BYTE PTR [eax+0x0],dl
  416fde:	add    ch,al
  416fe0:	hlt    
  416fe1:	and    edi,edi
  416fe3:	jmp    FWORD PTR [ecx-0x42f10000]
  416fe9:	daa    
  416fea:	int3   
  416feb:	(bad)  
  416fec:	mov    ebp,0xab6bffff
  416ff1:	mov    ecx,DWORD PTR [ecx+0x8355ff]
  416ff7:	mov    eax,ds:0xffff186d
  416ffc:	rol    DWORD PTR [eax],1
  416ffe:	push   DWORD PTR [eax-0x76de28]
  417004:	nop
  417005:	add    BYTE PTR [ecx-0x7c4775e3],cl
  41700b:	call   FWORD PTR [edi]
  41700d:	add    BYTE PTR [eax],al
  41700f:	mov    BYTE PTR [eax+0x16],ch
  417012:	dec    esp
  417014:	adc    edi,edi
  417016:	call   FWORD PTR [eax-0x4a]
  417019:	or     al,0x0
  41701b:	int3   
  41701c:	cld    
  41701d:	add    bh,bh
  41701f:	sbb    eax,0xff8907dd
  417024:	fadd   QWORD PTR [eax]
  417026:	dec    DWORD PTR [edi]
  417028:	lods   eax,DWORD PTR ds:[esi]
  417029:	ror    ah,0xff
  41702c:	(bad)  
  41702d:	inc    DWORD PTR [eax]
  41702f:	and    DWORD PTR [ebp-0x617c000b],0x0
  417036:	add    BYTE PTR [eax],dl
  417038:	inc    edi
  417039:	jb     0x416fbe
  41703b:	add    dl,dh
  41703d:	int3   
  41703e:	add    al,ch
  417040:	clc    
  417041:	ret    0xff00
  417044:	(bad)  
  417045:	dec    DWORD PTR [ecx+0x6e3a37]
  41704b:	add    dl,bl
  41704d:	int3   
  41704e:	mov    ebp,ecx
  417050:	ror    DWORD PTR [esi+0x0],cl
  417053:	jmp    DWORD PTR [edi-0x1]
  417056:	add    BYTE PTR [ebp-0xff7118],al
  41705c:	push   ebx
  41705d:	mov    edi,edi
  41705f:	mov    dl,0x7
  417061:	inc    ecx
  417062:	add    bh,bh
  417064:	sbb    bh,bh
  417066:	call   DWORD PTR [edi+ebx*2+0x60]
  41706a:	add    bh,bh
  41706c:	ror    ah,cl
  41706e:	(bad)  
  41706f:	mov    ebp,0x25e
  417074:	leave  
  417075:	add    bh,bh
  417077:	dec    ebx
  417078:	fidiv  DWORD PTR [edx+0xe9ff00]
  41707e:	add    al,ch
  417080:	mov    ds:0xaf00ffb7,eax
  417085:	inc    DWORD PTR [eax]
  417087:	arpl   WORD PTR [edi-0x79],ax
  41708a:	(bad)  
  41708b:	call   DWORD PTR [esp+ecx*8+0x0]
  41708f:	call   0xccd5:0x83cc849b
  417096:	add    al,dh
  417098:	push   esp
  417099:	pop    es
  41709a:	inc    DWORD PTR [ebx+0x5ffff58]
  4170a0:	and    edi,DWORD PTR [edi+edi*8]
  4170a3:	call   DWORD PTR [ebx]
  4170a5:	(bad)  
  4170a6:	dec    DWORD PTR [eax+0x45]
  4170a9:	mov    ebp,0xff210000
  4170ae:	or     DWORD PTR [edi-0x3e],0xfffffff3
  4170b2:	inc    DWORD PTR [eax]
  4170b4:	adc    al,0xff
  4170b6:	mov    DWORD PTR ds:0xffff1d5d,ebp
  4170bc:	nop
  4170bd:	add    BYTE PTR [ebx-0x76777509],al
  4170c3:	xor    DWORD PTR [esp+ecx*8-0x1],0xffffff84
  4170c8:	mov    esi,0x32ff006c
  4170cd:	(bad)  
  4170ce:	jmp    esp
  4170d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d1:	(bad)  
  4170d3:	mov    DWORD PTR [eax+eax*1-0x1],esp
  4170d7:	add    eax,0xffffcfd8
  4170dc:	pop    es
  4170dd:	add    bh,bh
  4170df:	cli    
  4170e0:	test   DWORD PTR [eax-0x95ff77],esp
  4170e6:	adc    DWORD PTR [edx-0x766547],0xffffffc5
  4170ed:	inc    DWORD PTR [eax]
  4170ef:	test   eax,0xff004594
  4170f4:	ds cmp edi,0x24
  4170f8:	cmp    eax,DWORD PTR [edi+edi*8-0x33000d00]
  4170ff:	jnp    0x4170d7
  417101:	dec    ebx
  417102:	(bad)  
  417103:	call   ebp
  417105:	(bad)  
  417106:	(bad)  
  417107:	out    dx,al
  417108:	add    BYTE PTR [ebp-0x500000],bh
  41710e:	add    BYTE PTR [edx+0x40],al
  417111:	retf   
  417112:	add    bh,bh
  417114:	mov    ch,0x0
  417116:	call   ebp
  417118:	test   DWORD PTR [ecx+0xb783cc],0xc2076cff
  417122:	add    DWORD PTR [ebx+0x56ff00f9],0x70
  417129:	push   ecx
  41712a:	add    BYTE PTR [ebx+0x3cffff2a],al
  417130:	(bad)  
  417131:	and    eax,0x83aeff00
  417136:	int3   
  417137:	mov    eax,0xcc924f
  41713c:	xchg   ebx,eax
  41713d:	inc    DWORD PTR [eax]
  41713f:	jae    0x4170e7
  417141:	and    esp,ecx
  417143:	call   DWORD PTR [eax]
  417145:	dec    DWORD PTR [ecx-0xbda4e4]
  41714b:	mov    esp,ebx
  41714d:	(bad)  
  41714e:	call   FWORD PTR [edx]
  417150:	(bad)  
  417151:	ret    0xffff
  417154:	push   esi
  417155:	(bad)  
  417156:	call   FWORD PTR [esi+0x3503]
  41715c:	inc    esp
  41715d:	add    ah,cl
  41715f:	dec    ecx
  417160:	int3   
  417161:	xor    eax,0xcc6900ff
  417166:	add    BYTE PTR [edx+0x7dd8],dl
  41716c:	pop    ebp
  41716d:	dec    DWORD PTR [ecx+0xe68538]
  417173:	dec    DWORD PTR [ebx+eax*4+0x0]
  417177:	retf   
  417178:	and    al,0x19
  41717a:	add    DWORD PTR [eax],0xffffff94
  41717d:	add    BYTE PTR [eax],al
  41717f:	ins    BYTE PTR es:[edi],dx
  417180:	bound  esi,QWORD PTR [eax]
  417182:	(bad)  
  417183:	dec    DWORD PTR [ebp+0x0]
  417186:	int3   
  417187:	sub    ebp,eax
  417189:	sbb    eax,0xff63ffff
  41718e:	jmp    DWORD PTR [edx-0x68]
  417191:	xor    eax,0xff98ff83
  417196:	mov    edi,ebp
  417198:	(bad)  
  417199:	test   eax,0xffc7ffff
  41719e:	add    BYTE PTR [ebp-0x7c004f25],ah
  4171a4:	(bad)  
  4171a5:	inc    DWORD PTR [eax]
  4171a7:	out    dx,al
  4171a8:	stos   DWORD PTR es:[edi],eax
  4171a9:	inc    edi
  4171aa:	(bad)  
  4171ab:	jmp    FWORD PTR [eax+0x0]
  4171ae:	push   esi
  4171b0:	pop    edx
  4171b1:	xor    DWORD PTR [ebx-0x7cff1200],eax
  4171b7:	add    eax,0x8300ce18
  4171bc:	push   ds
  4171bd:	dec    esp
  4171bf:	push   edx
  4171c0:	cmp    ah,0xff
  4171c3:	(bad)  
  4171c4:	fimul  DWORD PTR [ecx-0x1ff4b27d]
  4171ca:	add    ah,cl
  4171cc:	add    BYTE PTR [eax],al
  4171ce:	add    BYTE PTR [esi+0xe578],ch
  4171d4:	add    DWORD PTR [eax],0x670bacff
  4171da:	dec    DWORD PTR [ecx+0x55ff00e4]
  4171e0:	dec    ebx
  4171e1:	jl     0x4171af
  4171e3:	jmp    ebp
  4171e5:	inc    DWORD PTR [ebx+0x8761b7]
  4171eb:	push   DWORD PTR [edi+edi*8+0x0]
  4171ef:	loop   0x4171ea
  4171f1:	test   al,0xff
  4171f3:	jmp    ebx
  4171f5:	(bad)  
  4171f6:	(bad)  
  4171f7:	js     0x41726d
  4171f9:	fdivr  st,st(7)
  4171fb:	add    BYTE PTR ds:0xc468ffff,bh
  417201:	in     al,0xff
  417203:	(bad)  
  417204:	cmp    edi,edi
  417206:	add    ah,ch
  417208:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417209:	xchg   esp,eax
  41720a:	add    bh,bh
  41720c:	add    DWORD PTR [ebx-0x52cf7b00],eax
  417212:	add    bh,bh
  417214:	mov    ah,0xff
  417216:	add    BYTE PTR [eax-0x37],bl
  417219:	stc    
  41721a:	inc    DWORD PTR [ebx-0x79ff766c]
  417220:	test   esp,ecx
  417222:	(bad)  
  417223:	(bad)  
  417224:	call   0x49f27129
  417229:	fwait
  41722a:	add    BYTE PTR [eax],al
  41722c:	fild   WORD PTR [eax]
  41722e:	add    BYTE PTR [eax-0x33761ab6],al
  417234:	aaa    
  417235:	inc    DWORD PTR [eax]
  417237:	mov    edx,0xb109
  41723c:	call   0x66:0xac560089
  417243:	(bad)  
  417244:	sti    
  417245:	(bad)  
  417246:	call   FWORD PTR [ebx-0x7c12cb]
  41724c:	inc    ecx
  41724d:	add    BYTE PTR [eax],al
  41724f:	dec    eax
  417250:	dec    ecx
  417251:	test   al,0x83
  417253:	add    BYTE PTR [ecx-0x7d],ch
  417256:	add    bh,bl
  417258:	mov    ebp,0x708300d1
  41725d:	inc    DWORD PTR [eax]
  41725f:	pusha  
  417260:	pop    edx
  417261:	push   eax
  417262:	(bad)  
  417263:	call   DWORD PTR [edi+edi*8+0x8fa7ff]
  41726a:	(bad)  
  41726b:	jmp    esi
  41726d:	inc    DWORD PTR [ebx-0xf91187]
  417273:	cmp    DWORD PTR [eax+eax*1],0xffffffff
  417277:	pop    ebp
  417278:	sub    ch,BYTE PTR [eax]
  41727a:	inc    DWORD PTR [eax]
  41727c:	loope  0x41724a
  41727e:	add    BYTE PTR [esi+0xc93e],al
  417284:	sar    edi,cl
  417286:	add    BYTE PTR [ecx+0xffc1de],dl
  41728c:	outs   dx,DWORD PTR ds:[esi]
  41728d:	add    bh,bh
  41728f:	test   al,0xba
  417291:	add    BYTE PTR [eax],al
  417293:	(bad)  
  417294:	mov    ecx,0xea680083
  417299:	cmp    edi,0xff00a300
  41729f:	out    dx,eax
  4172a0:	out    dx,al
  4172a1:	push   cs
  4172a2:	add    bh,bh
  4172a4:	out    dx,al
  4172a5:	add    bh,bh
  4172a7:	sub    esp,esi
  4172a9:	in     eax,0x89
  4172ab:	add    BYTE PTR [ecx+0x0],bh
  4172ae:	mov    DWORD PTR [edi+0x61],esp
  4172b1:	xchg   edx,eax
  4172b2:	int3   
  4172b3:	push   DWORD PTR [ebx+eax*4]
  4172b6:	dec    DWORD PTR [eax]
  4172b8:	jmp    0x83ff:0xf5000001
  4172bf:	nop
  4172c0:	mov    ds:0x79ffcce8,eax
  4172c5:	add    DWORD PTR [eax],0x6f
  4172c8:	mov    dl,0xdf
  4172ca:	inc    DWORD PTR [eax]
  4172cc:	(bad)  
  4172cd:	int3   
  4172ce:	mov    ebp,ebp
  4172d0:	fisub  WORD PTR [ecx]
  4172d2:	add    bh,bh
  4172d4:	xor    cl,BYTE PTR [ecx-0x46491c01]
  4172da:	inc    DWORD PTR [ebx-0x467c0028]
  4172e0:	jbe    0x417278
  4172e2:	add    bh,bh
  4172e4:	rol    DWORD PTR [eax],1
  4172e6:	call   FWORD PTR [esi+0x7deb]
  4172ec:	pop    esi
  4172ed:	add    BYTE PTR [ecx-0x76db5cbc],cl
  4172f3:	(bad)  
  4172f4:	cld    
  4172f5:	mov    edi,edi
  4172f7:	push   ds
  4172f8:	mov    ah,0x7d
  4172fa:	add    BYTE PTR [eax],al
  4172fc:	pusha  
  4172fd:	(bad)  
  4172fe:	dec    edi
  417300:	cmp    al,0xb4
  417302:	(bad)  
  417303:	jmp    FWORD PTR [edx-0x75f4007d]
  417309:	jl     0x41730a
  41730b:	add    BYTE PTR [edi-0x14ad007d],bh
  417311:	mov    eax,0xccfc83ff
  417316:	add    BYTE PTR [eax],ch
  417318:	leave  
  417319:	(bad)  
  41731b:	(bad)  
  41731c:	jns    0x41731e
  41731e:	call   DWORD PTR [edx+0x3c]
  417321:	enter  0x83cc,0x52
  417325:	mov    DWORD PTR [eax],eax
  417327:	stc    
  417328:	popf   
  417329:	mov    eax,0x893effcc
  41732e:	add    BYTE PTR [ebp-0x7cffc69d],bh
  417334:	cwde   
  417335:	cmp    edi,0x12
  417338:	neg    BYTE PTR [edi]
  41733a:	add    DWORD PTR [eax],0x57
  41733d:	mov    edi,edi
  41733f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417340:	and    BYTE PTR [edi+edi*8-0x7cff0b34],0xc9
  417348:	inc    eax
  417349:	and    eax,DWORD PTR [eax]
  41734b:	int3   
  41734c:	sbb    al,0x89
  41734e:	push   DWORD PTR [ecx]
  417350:	fs fcos 
  417353:	add    BYTE PTR [edi+0x5ecfffff],al
  417359:	ret    0xffff
  41735c:	sub    al,BYTE PTR [eax]
  41735e:	and    DWORD PTR [edx],0x7
  417361:	mov    es,WORD PTR [eax]
  417363:	jmp    FWORD PTR [edi+edi*8]
  417366:	add    BYTE PTR [edx],ch
  417368:	xor    eax,DWORD PTR gs:[ebx-0x76ff7377]
  41736f:	and    al,0xb
  417371:	jge    0x4172fc
  417373:	and    esi,0xffffffff
  417376:	inc    ebx
  417378:	nop
  417379:	jbe    0x41737a
  41737b:	jmp    FWORD PTR [ecx+0x1c6affcc]
  417381:	or     esp,0xffffffff
  417384:	lods   al,BYTE PTR ds:[esi]
  417385:	add    bh,bh
  417387:	jmp    0xffb0:0x83ff2175
  41738e:	add    BYTE PTR [edx-0x337c658c],bh
  417394:	pop    edx
  417395:	inc    DWORD PTR [eax]
  417397:	mov    ds:0xffff12c1,eax
  41739c:	leave  
  41739d:	add    ah,cl
  41739f:	push   esi
  4173a0:	sbb    esp,DWORD PTR [edx]
  4173a2:	(bad)  
  4173a3:	dec    esi
  4173a5:	add    ah,cl
  4173a7:	cmp    eax,0xff02f1
  4173ac:	mov    ah,0xff
  4173ae:	adc    edi,0xfffffff7
  4173b1:	pop    eax
  4173b2:	(bad)  
  4173b3:	call   FWORD PTR [ebx+0x7c53ff83]
  4173b9:	cwde   
  4173ba:	dec    DWORD PTR [ecx+0x50ff8392]
  4173c0:	sar    esp,cl
  4173c2:	(bad)  
  4173c3:	push   DWORD PTR [ecx]
  4173c5:	(bad)  
  4173c6:	push   eax
  4173c8:	or     BYTE PTR [edi],ah
  4173ca:	cmp    edi,0xffffff9e
  4173cd:	inc    DWORD PTR [eax]
  4173cf:	xor    BYTE PTR [ebx-0x23333bb],bl
  4173d5:	int3   
  4173d6:	or     DWORD PTR [edi-0xfff6d9],0xffffffec
  4173dd:	inc    DWORD PTR [eax]
  4173df:	xchg   esi,eax
  4173e0:	or     ebp,ecx
  4173e2:	inc    DWORD PTR [eax]
  4173e4:	dec    esi
  4173e5:	(bad)  
  4173e6:	push   DWORD PTR [ecx+0x18]
  4173e9:	(bad)  [ecx-0xa001]
  4173ef:	jae    0x41742e
  4173f1:	das    
  4173f2:	inc    DWORD PTR [ebx-0x267c7c55]
  4173f8:	cmp    dl,bh
  4173fa:	(bad)  
  4173fb:	jmp    DWORD PTR [eax-0x8bdff01]
  417401:	and    eax,0x75ffff
  417406:	add    DWORD PTR [edi-0x23],0xffffff90
  41740a:	(bad)  
  41740b:	jmp    FWORD PTR [ecx-0x20bf7d00]
  417411:	pop    edi
  417412:	inc    DWORD PTR [eax]
  417414:	stos   BYTE PTR es:[edi],al
  417415:	add    bh,bh
  417417:	xor    al,0xc4
  417419:	dec    esp
  41741a:	add    BYTE PTR [eax],al
  41741c:	mov    edi,edi
  41741e:	int3   
  41741f:	inc    ebp
  417420:	sub    cl,BYTE PTR ss:[ecx-0x339a00]
  417427:	cmp    BYTE PTR [ecx+edi*1+0x8600ff],0xff
  41742f:	sub    al,0x9e
  417431:	addr16 dec esp
  417434:	int    0xff
  417436:	add    BYTE PTR ds:0xffffcb31,bh
  41743c:	sbb    BYTE PTR [eax],al
  41743e:	add    ch,bl
  417440:	xor    eax,0x9bffffe1
  417445:	add    bh,bh
  417447:	in     al,0xaf
  417449:	loop   0x417417
  41744b:	add    BYTE PTR [esi+0xa418900],ch
  417451:	cwde   
  417452:	cmp    edi,0xffffffaa
  417455:	add    BYTE PTR [ebx+0xdf09c6],al
  41745b:	add    BYTE PTR [ecx-0x86f0100],bl
  417461:	in     eax,dx
  417462:	dec    esp
  417464:	adc    eax,0x29b20000
  417469:	stos   DWORD PTR es:[edi],eax
  41746a:	add    bh,bh
  41746c:	in     al,dx
  41746d:	inc    DWORD PTR [eax]
  41746f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417470:	sub    eax,0xdffccf4
  417475:	dec    esp
  417477:	stos   BYTE PTR es:[edi],al
  417478:	pop    ss
  417479:	sbb    eax,0x895affff
  41747e:	add    BYTE PTR [ecx+0x28],cl
  417481:	in     eax,0xcc
  417483:	call   DWORD PTR [eax-0x567c0000]
  417489:	jecxz  0x41748a
  41748b:	add    BYTE PTR [eax+eax*1-0x7e272300],bl
  417492:	dec    esp
  417494:	sbb    edi,edi
  417496:	add    cl,bh
  417498:	int    0x33
  41749a:	(bad)  
  41749b:	(bad)  
  41749c:	js     0x41749d
  41749e:	add    al,cl
  4174a0:	fs jo  0x4174a2
  4174a3:	add    al,dh
  4174a5:	(bad)  
  4174a6:	dec    DWORD PTR [ebx]
  4174a8:	jecxz  0x4174cd
  4174aa:	add    bh,bh
  4174ac:	ja     0x4174ad
  4174ae:	jmp    DWORD PTR [ecx-0x7b]
  4174b1:	xchg   esi,eax
  4174b2:	(bad)  
  4174b3:	inc    DWORD PTR [ebx]
  4174b5:	cmp    edi,0xffffffad
  4174b8:	or     dl,BYTE PTR ds:0xcc37ff00
  4174be:	add    BYTE PTR [edx-0x9bbc],al
  4174c4:	sub    DWORD PTR [ebx-0xcef4900],eax
  4174ca:	add    DWORD PTR [eax],0xffffffb2
  4174cd:	add    BYTE PTR [eax],al
  4174cf:	sahf   
  4174d0:	mov    al,ds:0xa900004b
  4174d5:	inc    DWORD PTR [eax]
  4174d7:	ret    0xacb5
  4174da:	int3   
  4174db:	inc    DWORD PTR [edx+0x455089cc]
  4174e1:	bswap  esp
  4174e3:	add    bh,al
  4174e5:	(bad)  
  4174e6:	push   DWORD PTR [ebx-0x41]
  4174e9:	mov    ch,0xff
  4174eb:	call   DWORD PTR [edi-0x1]
  4174ee:	call   DWORD PTR ds:0xffff2a5f
  4174f4:	popf   
  4174f5:	add    bh,bh
  4174f7:	(bad)  
  4174f8:	mov    esp,0x7a00ff2c
  4174fd:	add    bh,bh
  4174ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417500:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417501:	inc    ecx
  417502:	add    BYTE PTR [ebx-0x7d33009c],al
  417508:	ja     0x4174b3
  41750a:	add    DWORD PTR [eax],0xffffff8d
  41750d:	add    bh,bh
  41750f:	arpl   WORD PTR [eax-0x50],cx
  417512:	dec    DWORD PTR [ecx+0x4accffb5]
  417518:	and    edx,DWORD PTR [ebx-0x1]
  41751b:	xor    edi,0xffffffff
  41751e:	jmp    FWORD PTR [edx]
  417520:	push   cs
  417521:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417522:	add    bh,bh
  417524:	dec    ebx
  417525:	mov    edi,edi
  417527:	jbe    0x4174e3
  417529:	xchg   esi,eax
  41752a:	cmp    edi,0xfffffff7
  41752d:	(bad)  
  41752e:	(bad)  
  41752f:	(bad)  
  417530:	repz in eax,dx
  417532:	cmp    edi,0xffffffde
  417535:	inc    DWORD PTR [eax]
  417537:	adc    ebp,DWORD PTR [ebx-0x80]
  41753a:	add    BYTE PTR [ebx-0x4eff7c0d],al
  417540:	repnz mov edx,0xfff500ff
  417546:	inc    DWORD PTR [edi-0x33333334]
  41754c:	int3   
  41754d:	int3   
  41754e:	int3   
  41754f:	int3   
  417550:	int3   
  417551:	add    BYTE PTR [eax],al
  417553:	or     DWORD PTR [ebp-0x33f6a2f0],0xffffffff
  41755a:	(bad)  
  41755b:	(bad)  
  41755c:	call   edi
  41755e:	sub    al,0xd8
  417560:	(bad)  
  417561:	(bad)  
  417562:	(bad)  
  417563:	call   DWORD PTR [ecx]
  417565:	ds mov cl,0x9e
  417568:	or     esp,0x0
  41756b:	jmp    FWORD PTR [ebx+0xe34bf0]
  417571:	add    DWORD PTR [eax],0x0
  417574:	jns    0x4175ad
  417576:	dec    DWORD PTR [eax-0x7d]
  417579:	add    DWORD PTR [ebx-0x2bc5bb01],0xffffff8c
  417580:	add    BYTE PTR [ebx-0x6ba17d00],al
  417586:	dec    esi
  417587:	push   eax
  417588:	inc    DWORD PTR [eax]
  41758a:	add    bh,bh
  41758c:	shr    BYTE PTR [esi+0x55],0xbe
  417590:	add    BYTE PTR [eax],al
  417592:	add    BYTE PTR [eax],al
  417594:	daa    
  417595:	pop    ebx
  417596:	(bad)
  417599:	int3   
  41759a:	add    bh,bh
  41759c:	push   cs
  41759d:	shl    cl,1
  41759f:	in     eax,0x0
  4175a1:	(bad)  
  4175a2:	inc    DWORD PTR [eax]
  4175a4:	loopne 0x4175e4
  4175a6:	dec    eax
  4175a7:	daa    
  4175a8:	add    BYTE PTR [ebx-0x757a0100],al
  4175ae:	int3   
  4175af:	sub    esp,ecx
  4175b1:	dec    esp
  4175b3:	add    BYTE PTR [edi-0x68],ch
  4175b6:	xchg   esi,eax
  4175b7:	push   esi
  4175b8:	add    DWORD PTR [eax],0xffffffff
  4175bb:	cmp    DWORD PTR [ecx+0x3a],0xffffffe8
  4175bf:	inc    ecx
  4175c0:	add    BYTE PTR [eax],al
  4175c2:	add    BYTE PTR [ecx-0x7d363e49],cl
  4175c8:	add    bh,bh
  4175ca:	add    bh,bh
  4175cc:	cmp    bl,BYTE PTR ss:[eax-0x7c7c0093]
  4175d3:	int3   
  4175d4:	std    
  4175d5:	sar    BYTE PTR [ebp+0x69],0x0
  4175d9:	dec    esp
  4175db:	add    BYTE PTR ds:0xccdb64cd,dh
  4175e1:	add    DWORD PTR [eax],0x0
  4175e4:	sub    DWORD PTR [eax-0x7d73],edx
  4175ea:	add    bh,bh
  4175ec:	out    0x7e,al
  4175ee:	es es add bh,bh
  4175f2:	(bad)  
  4175f3:	inc    DWORD PTR [ecx-0xe75643]
  4175f9:	dec    esp
  4175fb:	add    BYTE PTR [ecx+0x2bc661],dl
  417601:	add    bh,bh
  417603:	mov    DWORD PTR [ecx+0x2],esi
  417606:	rcr    DWORD PTR [edi],0xff
  417609:	int3   
  41760a:	add    DWORD PTR [eax],0x3f
  41760d:	aas    
  41760e:	xchg   ebp,eax
  41760f:	inc    esi
  417610:	add    DWORD PTR [eax],0xffffff83
  417613:	dec    DWORD PTR [ebp-0xd0acd]
  417619:	add    bh,bh
  41761b:	add    al,al
  41761d:	mov    ds,esp
  41761f:	ins    BYTE PTR es:[edi],dx
  417620:	add    bh,bh
  417622:	inc    DWORD PTR [ebx+0x77f3e008]
  417628:	cmp    edi,0x0
  41762b:	(bad)  
  41762c:	jge    0x4175ea
  41762e:	retf   0xcc50
  417631:	add    BYTE PTR [eax],al
  417633:	jmp    FWORD PTR [ebp+ecx*4-0x75e1]
  41763a:	mov    edi,edi
  41763c:	xor    al,0xe1
  41763e:	pop    ecx
  41763f:	adc    edi,edi
  417641:	inc    DWORD PTR [ebx-0x512b3801]
  417647:	mov    al,0x83
  417649:	add    bh,bh
  41764b:	call   esi
  41764d:	(bad)  
  41764e:	popa   
  41764f:	popf   
  417650:	int3   
  417651:	mov    DWORD PTR [ebx-0xf184900],eax
  417657:	sbb    BYTE PTR [ebx-0x4b003301],al
  41765d:	out    0xa4,eax
  41765f:	cmp    edi,0x3bffffff
  417665:	xchg   edi,eax
  417666:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417668:	cmp    edi,0x0
  41766b:	push   esp
  41766d:	repz sti 
  41766f:	mov    ds:0xff00ff,eax
  417674:	sub    ah,bl
  417676:	jne    0x4176f0
  417678:	add    BYTE PTR [eax],al
  41767a:	or     esp,0x6
  41767d:	xchg   DWORD PTR [ebx-0x46],edx
  417680:	mov    edi,edi
  417682:	dec    DWORD PTR [ecx-0x506573db]
  417688:	inc    DWORD PTR [eax]
  41768a:	add    bh,bh
  41768c:	jmp    0x417677
  41768e:	push   ebx
  41768f:	rol    DWORD PTR [eax],cl
  417691:	add    DWORD PTR [eax],0xffffffff
  417694:	push   ebp
  417695:	push   es
  417696:	(bad)  
  417697:	bound  eax,QWORD PTR [eax]
  417699:	add    bh,bh
  41769b:	add    al,cl
  41769d:	(bad)  ds:0x8983cc07
  4176a3:	int3   
  4176a4:	jl     0x41770a
  4176a6:	pop    edx
  4176a7:	mov    WORD PTR [ecx+0x7ff00cc],cs
  4176ad:	in     al,0x20
  4176af:	pop    DWORD PTR [eax]
  4176b1:	inc    DWORD PTR [eax]
  4176b3:	int3   
  4176b4:	out    0x65,al
  4176b6:	mov    edi,esp
  4176b8:	add    DWORD PTR [eax],0xffffffff
  4176bb:	add    BYTE PTR [edi-0x24],al
  4176be:	sbb    DWORD PTR [ebx+0x0],edx
  4176c1:	(bad)  
  4176c2:	inc    DWORD PTR [eax]
  4176c4:	and    BYTE PTR [eax+0x6d],ch
  4176c7:	cmp    edi,edi
  4176c9:	inc    DWORD PTR [ebx+0x5983f6cc]
  4176cf:	cmp    BYTE PTR [eax],al
  4176d1:	(bad)  
  4176d2:	dec    DWORD PTR [ecx+0x59b2ae5b]
  4176d8:	(bad)  
  4176d9:	(bad)  
  4176da:	inc    DWORD PTR [eax]
  4176dc:	nop
  4176dd:	and    BYTE PTR [ecx*8-0x76ff01],0x60
  4176e5:	adc    edi,DWORD PTR [eax+0x5d]
  4176e8:	add    bh,bh
  4176ea:	mov    edi,edi
  4176ec:	add    ch,ch
  4176ee:	mov    esp,DWORD PTR [eax-0xff0100]
  4176f4:	shl    DWORD PTR [edi],1
  4176f6:	xchg   edx,eax
  4176f7:	loop   0x4176f9
  4176f9:	add    bh,bh
  4176fb:	xor    edi,0x3c
  4176fe:	push   ebx
  4176ff:	xor    BYTE PTR [eax],al
  417701:	add    BYTE PTR [eax],al
  417703:	call   DWORD PTR [ecx+edx*4-0x628a]
  41770a:	inc    DWORD PTR [eax]
  41770c:	jge    0x4176ce
  41770e:	(bad)  
  41770f:	dec    ebp
  417710:	(bad)  
  417711:	(bad)  
  417712:	(bad)  
  417713:	call   DWORD PTR [edi]
  417715:	sbb    BYTE PTR [edi-0x7c004c],ch
  41771b:	inc    esp
  41771d:	mov    eax,0xff00502a
  417722:	mov    edi,edi
  417724:	cdq    
  417725:	xchg   edi,eax
  417726:	sub    ah,cl
  417728:	mov    DWORD PTR [ecx+0x24168300],ecx
  41772e:	mov    dl,cl
  417730:	int3   
  417731:	(bad)  
  417732:	inc    DWORD PTR [eax]
  417734:	jg     0x4176e9
  417736:	pop    ds
  417737:	test   al,0xff
  417739:	mov    DWORD PTR [eax],eax
  41773b:	add    al,ah
  41773d:	mov    al,ds:0x83cc056f
  417742:	add    BYTE PTR [eax],al
  417744:	mov    dh,0x7
  417746:	dec    esi
  417747:	mov    edi,edi
  417749:	add    BYTE PTR [eax],al
  41774b:	jmp    FWORD PTR [edi+0xfc8f98]
  417751:	(bad)  
  417752:	(bad)  
  417753:	jmp    DWORD PTR [edi+0xfb2e15]
  417759:	add    ah,cl
  41775b:	adc    DWORD PTR [edi],0xffffffc6
  41775e:	cld    
  41775f:	or     al,0x83
  417761:	mov    DWORD PTR [eax],eax
  417763:	call   FWORD PTR [esi-0x7cd31777]
  417769:	add    bh,bh
  41776b:	call   ecx
  41776d:	mov    cl,0xbd
  41776f:	int    0x0
  417771:	add    DWORD PTR [ebx+0x2ab4e583],0x37
  417778:	int3   
  417779:	inc    DWORD PTR [eax]
  41777b:	call   FWORD PTR [ecx-0x25]
  41777e:	xor    al,0xb3
  417780:	add    bh,bh
  417782:	(bad)  
  417783:	(bad)  
  417784:	in     al,dx
  417785:	inc    edx
  417786:	xchg   esi,eax
  417787:	or     al,0xff
  417789:	add    BYTE PTR [eax],al
  41778b:	add    BYTE PTR [ecx+0xad5f79],dh
  417791:	(bad)  
  417792:	(bad)  
  417793:	inc    DWORD PTR [ebx-0x8b10d3]
  417799:	add    bh,bh
  41779b:	add    ch,cl
  41779d:	xor    BYTE PTR [ecx+edi*1],0xff
  4177a1:	add    BYTE PTR [eax],al
  4177a3:	push   DWORD PTR [ecx+0x63827]
  4177a9:	or     esp,0xffffff89
  4177ac:	pop    es
  4177ad:	call   0x8389:0x836fdf
  4177b4:	scas   al,BYTE PTR es:[edi]
  4177b5:	pop    ds
  4177b6:	adc    al,0xb2
  4177b8:	add    ah,cl
  4177ba:	inc    DWORD PTR [eax]
  4177bc:	outs   dx,DWORD PTR ds:[esi]
  4177bd:	ret    
  4177be:	xor    eax,0xff89ff4f
  4177c3:	inc    edi
  4177c5:	mov    dh,BYTE PTR [ebp+0x83b2]
  4177cb:	add    BYTE PTR [edx],dh
  4177cd:	jb     0x4177e6
  4177cf:	rol    DWORD PTR [eax],0xff
  4177d2:	inc    DWORD PTR [eax]
  4177d4:	add    cl,BYTE PTR [esi+0x34]
  4177d7:	mov    bl,0x0
  4177d9:	(bad)  
  4177da:	dec    esp
  4177dc:	and    BYTE PTR [ebp+0x83055f],ch
  4177e2:	(bad)  
  4177e3:	(bad)  
  4177e4:	mov    ebx,0xff4d1ce0
  4177e9:	add    DWORD PTR [eax],0x0
  4177ec:	sbb    edx,DWORD PTR [edi+eiz*1]
  4177ef:	add    BYTE PTR ss:[eax],al
  4177f2:	(bad)  
  4177f3:	dec    DWORD PTR ds:0xff1836df
  4177f9:	inc    DWORD PTR [eax]
  4177fb:	(bad)  
  4177fc:	fsub   QWORD PTR [edi-0x7c0003ea]
  417802:	(bad)  
  417803:	(bad)  
  417804:	mov    esp,0xccfdbabf
  417809:	add    bh,bh
  41780b:	dec    DWORD PTR [edi+0x22]
  41780e:	fadd   st,st(0)
  417810:	inc    DWORD PTR [eax]
  417812:	int3   
  417813:	(bad)  
  417814:	jl     0x4177d2
  417816:	aad    0x90
  417818:	(bad)  
  417819:	(bad)  
  41781a:	dec    esp
  41781c:	pop    ebp
  41781d:	ds sub eax,0xff00002e
  417823:	(bad)  
  417824:	(bad)  
  417825:	sti    
  417826:	pop    ds
  417827:	pop    ebp
  417828:	add    BYTE PTR [ebx-0xad7c01],al
  41782e:	jb     0x417807
  417830:	inc    DWORD PTR [eax]
  417832:	(bad)  
  417833:	jmp    FWORD PTR [ebx-0x761a9bd3]
  417839:	cmp    edi,0xffffffff
  41783c:	fwait
  41783d:	mov    ds:0xd9e4,eax
  417842:	(bad)  
  417843:	inc    DWORD PTR [edi]
  417845:	mov    ecx,0xffff3bcd
  41784a:	(bad)  
  41784b:	push   DWORD PTR [ecx+0x2]
  41784e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784f:	leave  
  417850:	add    BYTE PTR [ecx-0x4c0e0077],cl
  417856:	xor    esp,DWORD PTR [edi+edi*8-0x1]
  41785a:	inc    DWORD PTR [eax]
  41785c:	lfs    esi,FWORD PTR [esi+0xff9a]
  417863:	add    BYTE PTR [eax],cl
  417865:	ret    0xb82c
  417868:	add    BYTE PTR [eax],al
  41786a:	inc    DWORD PTR [eax]
  41786c:	loope  0x4177f3
  41786e:	xchg   BYTE PTR [edx],cl
  417870:	(bad)  
  417871:	inc    DWORD PTR [ebx-0x189def01]
  417877:	inc    DWORD PTR ds:[eax]
  41787a:	dec    esp
  41787c:	shr    BYTE PTR [ecx+0x78],cl
  41787f:	push   0x83ff83ff
  417884:	lock xor ah,bh
  417887:	pop    edi
  417888:	mov    DWORD PTR [ecx+0x70d7cccc],ecx
  41788e:	fistp  QWORD PTR [ecx]
  417890:	int3   
  417891:	add    BYTE PTR [eax],al
  417893:	call   edx
  417895:	jl     0x4178a4
  417897:	popa   
  417898:	int3   
  417899:	add    BYTE PTR [eax],al
  41789b:	add    BYTE PTR [esi+0xb4ed43],cl
  4178a1:	add    BYTE PTR [ecx+0x4e01de00],cl
  4178a7:	hlt    
  4178a8:	dec    esp
  4178aa:	inc    DWORD PTR [ebx-0x22bf73b4]
  4178b0:	(bad)  
  4178b1:	dec    DWORD PTR [ecx+0xfee6683]
  4178b7:	mov    BYTE PTR [ebx-0x3d7c0034],0x24
  4178be:	mov    ds:0xff69,al
  4178c3:	add    al,bh
  4178c5:	test   al,0x3c
  4178c7:	push   eax
  4178c8:	add    bh,bh
  4178ca:	int3   
  4178cb:	add    BYTE PTR [ecx+0x2ab37d],bl
  4178d1:	cmp    edi,0xffffff83
  4178d4:	in     al,0x41
  4178d6:	add    BYTE PTR [edi+edi*8],0x0
  4178da:	(bad)  
  4178db:	push   DWORD PTR [edx+ecx*4]
  4178de:	paddusw mm7,mm7
  4178e1:	add    bh,bh
  4178e3:	(bad)  
  4178e4:	cmp    eax,0x836a64a9
  4178e9:	or     esp,0x0
  4178ec:	jmp    0xffff:0xffb3ccd4
  4178f3:	dec    DWORD PTR [ecx]
  4178f5:	aas    
  4178f6:	inc    ebp
  4178f7:	das    
  4178f8:	add    BYTE PTR [ebx+0x16a7ff00],al
  4178fe:	es inc esp
  417900:	dec    DWORD PTR [ecx-0x33e40001]
  417906:	mov    dh,0x62
  417908:	int3   
  417909:	add    bh,bh
  41790b:	jmp    DWORD PTR [ebp+0x18]
  41790e:	gs add bh,bh
  417911:	add    BYTE PTR [eax],al
  417913:	call   DWORD PTR [ebx]
  417915:	lahf   
  417916:	sbb    al,0xc3
  417918:	add    BYTE PTR [eax],al
  41791a:	add    BYTE PTR [eax],al
  41791c:	test   BYTE PTR [edx+0x20],cl
  41791f:	(bad)  
  417921:	inc    DWORD PTR [eax]
  417923:	mov    DWORD PTR [eax-0x76bb84de],esi
  417929:	inc    DWORD PTR [eax]
  41792b:	add    BYTE PTR [ecx+edi*8],bh
  41792e:	inc    ecx
  41792f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417930:	inc    DWORD PTR [eax]
  417932:	(bad)  
  417933:	(bad)  
  417934:	aas    
  417935:	icebp  
  417936:	jle    0x41794e
  417938:	(bad)  
  417939:	(bad)  
  41793a:	(bad)  
  41793b:	push   DWORD PTR [edx]
  41793d:	push   edx
  41793e:	(bad)  
  41793f:	fcos   
  417941:	add    BYTE PTR [ebx-0x7af48400],al
  417947:	jae    0x417948
  417949:	inc    DWORD PTR [eax]
  41794b:	sbb    esi,0xffffffad
  41794e:	int3   
  41794f:	xor    al,0xff
  417951:	add    BYTE PTR [ebx-0x25b32634],al
  417957:	stc    
  417958:	add    DWORD PTR [eax],0xffffffff
  41795b:	add    BYTE PTR [ecx+0x19ed3c],cl
  417961:	inc    DWORD PTR [eax]
  417963:	jmp    FWORD PTR [edi-0x7c539abb]
  417969:	cmp    edi,0x0
  41796c:	outs   dx,BYTE PTR ds:[esi]
  41796d:	mov    ds:0x89ffb332,eax
  417972:	add    DWORD PTR [eax],0xffffffe9
  417975:	cmp    al,0x83
  417977:	les    eax,FWORD PTR [eax]
  417979:	add    BYTE PTR [ebx+0x6379c483],al
  41797f:	mov    eax,ds:0x830083
  417984:	retf   
  417985:	not    BYTE PTR [edx-0x7c00fff9]
  41798b:	inc    DWORD PTR [esi-0x256c4b]
  417991:	add    bh,bh
  417993:	inc    esp
  417995:	bound  esi,QWORD PTR [ecx-0x33ffec]
  41799b:	add    BYTE PTR [ebx+0x7f],dh
  41799e:	xchg   BYTE PTR [ebx],dh
  4179a0:	add    BYTE PTR [ebx+0xfc30000],al
  4179a6:	sbb    cl,ah
  4179a8:	inc    DWORD PTR [eax]
  4179aa:	add    BYTE PTR [eax],al
  4179ac:	sbb    ecx,esp
  4179ae:	in     al,dx
  4179af:	xor    bh,bh
  4179b1:	add    DWORD PTR [eax],0x0
  4179b4:	jge    0x417947
  4179b6:	or     ah,BYTE PTR [edi+0x0]
  4179b9:	int3   
  4179ba:	cmp    edi,0xffffffd9
  4179bd:	push   0xff0006d4
  4179c2:	add    ah,cl
  4179c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179c5:	jmp    0xccff:0xff009cc0
  4179cc:	int    0xd9
  4179ce:	inc    esi
  4179cf:	je     0x4179d0
  4179d1:	add    bh,bh
  4179d3:	mov    esp,eax
  4179d5:	xchg   edx,eax
  4179d6:	push   cs
  4179d7:	mov    ebp,0xffff
  4179dc:	mov    edi,0x89854d42
  4179e1:	add    bh,bh
  4179e3:	inc    DWORD PTR [eax]
  4179e5:	cmc    
  4179e6:	popa   
  4179e7:	xlat   BYTE PTR ds:[ebx]
  4179e8:	add    bh,bh
  4179ea:	inc    DWORD PTR [eax]
  4179ec:	cmp    al,0x85
  4179ee:	and    DWORD PTR [ecx+0x0],ebp
  4179f1:	inc    DWORD PTR [eax]
  4179f3:	and    DWORD PTR [ebx+ebx*2],0x34
  4179f7:	mov    esp,0xffff0000
  4179fc:	jl     0x4179e6
  4179fe:	mov    esp,0x77
  417a03:	add    dh,bh
  417a05:	ret    
  417a06:	enter  0xff88,0x83
  417a0a:	add    BYTE PTR [ebx-0x42df1f29],al
  417a10:	add    BYTE PTR [ecx+0x3f69ff89],cl
  417a16:	and    DWORD PTR [edi+edi*8+0x51cc8900],0x7f
  417a1e:	cmp    BYTE PTR [esi-0x7d],ch
  417a24:	retf   0x6ef8
  417a27:	push   ebp
  417a28:	add    BYTE PTR [ebx+0x5d27ff83],al
  417a2e:	sub    al,0xd9
  417a30:	(bad)  
  417a31:	(bad)  
  417a32:	inc    DWORD PTR [eax]
  417a34:	mov    BYTE PTR [eax],bl
  417a36:	fisttp WORD PTR [ecx]
  417a38:	add    bh,bh
  417a3a:	inc    DWORD PTR [ebx+0x6d1afb71]
  417a40:	cmp    edi,0xffffffcc
  417a43:	sbb    DWORD PTR [edx+0x9e29c],0x0
  417a4a:	cmp    edi,0xffffffa4
  417a4d:	adc    eax,0xff59f5
  417a52:	inc    DWORD PTR [eax]
  417a54:	mov    ch,0xbb
  417a56:	and    BYTE PTR [eax],0x0
  417a59:	(bad)  
  417a5a:	inc    DWORD PTR [eax]
  417a5c:	fld    TBYTE PTR [ebx-0x2d]
  417a5f:	and    eax,0xff00ffff
  417a64:	call   0xff:0x831f1e76
  417a6b:	int3   
  417a6c:	jl     0x417a43
  417a6e:	sub    bl,BYTE PTR [edi]
  417a70:	add    BYTE PTR [ecx-0x2a417c01],cl
  417a76:	xor    bh,BYTE PTR [eax-0x1]
  417a79:	add    BYTE PTR [ecx+0x35b70bff],cl
  417a7f:	mov    esp,ecx
  417a81:	mov    DWORD PTR [ebx+0x2137f6ff],eax
  417a87:	mov    al,ds:0xffffffff
  417a8c:	sub    DWORD PTR [edi+0x28],edi
  417a8f:	in     al,0xff
  417a91:	mov    edi,edi
  417a93:	(bad)  
  417a94:	cmp    eax,0xc32ed3
  417a99:	add    bh,bh
  417a9b:	adc    DWORD PTR [edi],0x68
  417a9e:	xchg   esi,eax
  417a9f:	cli    
  417aa0:	(bad)  
  417aa1:	(bad)  
  417aa2:	(bad)  
  417aa3:	inc    DWORD PTR [edx+ebx*2+0x6f]
  417aa7:	stc    
  417aa8:	(bad)  
  417aa9:	(bad)  
  417aaa:	inc    DWORD PTR [eax]
  417aac:	xchg   ebp,eax
  417aad:	call   0x41e19c
  417ab2:	add    DWORD PTR [eax],0xffffffe6
  417ab5:	xor    ah,bh
  417ab7:	int3   
  417ab8:	cmp    edi,0xffffff83
  417abb:	mov    DWORD PTR [eiz*1-0xff7d91],esi
  417ac2:	add    bh,bh
  417ac4:	cmp    al,0x9
  417ac6:	cwde   
  417ac7:	push   ds
  417ac8:	inc    DWORD PTR [ebx+0x64a689ff]
  417ace:	adc    DWORD PTR [esi-0x76000001],ebp
  417ad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ad5:	dec    ebx
  417ad6:	cmp    BYTE PTR [ebx+eax*4-0x7d],bh
  417ada:	add    DWORD PTR [ebx-0x7487c898],0xffffffff
  417ae1:	inc    DWORD PTR [eax]
  417ae3:	inc    DWORD PTR [ebp-0x4b]
  417ae6:	repz jno 0x417ae8
  417ae9:	(bad)  
  417aea:	dec    esp
  417aec:	in     al,0xf5
  417aee:	pop    ebx
  417aef:	repz add bh,bh
  417af2:	(bad)  
  417af3:	jmp    DWORD PTR [edx+0x67347f]
  417af9:	add    DWORD PTR [ebx+0x58b91300],0x1c
  417b00:	add    bh,bh
  417b02:	(bad)  
  417b03:	push   esi
  417b05:	push   edx
  417b06:	mov    BYTE PTR [ecx-0xff0001],dh
  417b0c:	idiv   DWORD PTR ds:0xff00f8a1
  417b12:	(bad)  
  417b13:	jmp    DWORD PTR [edx-0x96a5e4]
  417b19:	add    BYTE PTR [eax],al
  417b1b:	int3   
  417b1c:	pop    ecx
  417b1d:	mov    esi,0xb968
  417b22:	inc    DWORD PTR [eax]
  417b24:	scas   eax,DWORD PTR es:[edi]
  417b25:	jmp    0x89:0xff6ead
  417b2c:	repnz cdq 
  417b2e:	xlat   BYTE PTR ds:[ebx]
  417b2f:	repz (bad) 
  417b31:	(bad)  
  417b32:	inc    DWORD PTR [eax]
  417b34:	cmp    al,0x5d
  417b36:	inc    edi
  417b37:	inc    ebx
  417b38:	add    bh,bh
  417b3a:	(bad)  
  417b3b:	inc    DWORD PTR [ecx+0x67]
  417b3e:	enter  0xff8f,0x89
  417b42:	add    BYTE PTR [eax],al
  417b44:	jecxz  0x417ba3
  417b46:	in     eax,dx
  417b47:	dec    ebx
  417b48:	add    DWORD PTR [eax],0x0
  417b4b:	call   FWORD PTR [esp+ecx*2+0x4]
  417b4f:	rol    BYTE PTR [eax],1
  417b51:	add    DWORD PTR [eax],0xffffff89
  417b54:	aaa    
  417b55:	dec    esi
  417b56:	(bad)  
  417b57:	pop    esi
  417b58:	add    BYTE PTR [ecx-0x1f2c3301],cl
  417b5e:	fsub   QWORD PTR [eax-0x1]
  417b61:	inc    DWORD PTR [eax]
  417b63:	push   DWORD PTR [ebp-0x18]
  417b66:	ins    DWORD PTR es:[edi],dx
  417b67:	add    cl,ah
  417b69:	add    BYTE PTR [eax],al
  417b6b:	add    BYTE PTR [ebx+0x981217],cl
  417b71:	or     esp,0x0
  417b74:	pop    ebx
  417b75:	ss dec ebp
  417b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b78:	inc    DWORD PTR [ebx+0x1e3600ff]
  417b7e:	mov    BYTE PTR [edi],dh
  417b80:	add    bh,bh
  417b82:	add    BYTE PTR [eax],al
  417b84:	sbb    al,0x87
  417b86:	loopne 0x417b7a
  417b88:	add    BYTE PTR [eax],al
  417b8a:	(bad)  
  417b8b:	inc    DWORD PTR [eax-0x7c7aa610]
  417b91:	add    DWORD PTR [ebx-0x2f83c400],0x47
  417b98:	add    BYTE PTR [eax],al
  417b9a:	inc    DWORD PTR [eax]
  417b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b9d:	jp     0x417b66
  417b9f:	imul   edi,edi,0x2cff0000
  417ba5:	shl    BYTE PTR [ebx],cl
  417ba7:	mov    ebp,0xffff00ff
  417bac:	aad    0x71
  417bae:	jp     0x417b5f
  417bb0:	dec    DWORD PTR [ecx-0x61980034]
  417bb6:	mov    bl,0x7f
  417bb8:	cmp    edi,0xffffffff
  417bbb:	call   FWORD PTR [eax-0x1cef54]
  417bc1:	int3   
  417bc2:	dec    DWORD PTR [ecx-0x3c8907b1]
  417bc8:	(bad)  
  417bc9:	inc    DWORD PTR [eax]
  417bcb:	call   DWORD PTR [eax-0x1f]
  417bce:	adc    dl,dl
  417bd0:	(bad)  
  417bd1:	inc    DWORD PTR [ebx+0x5873f9ff]
  417bd7:	imul   ecx,esp,0x0
  417bda:	int3   
  417bdb:	(bad)  
  417bdc:	cmp    eax,0xffab8308
  417be1:	(bad)  
  417be2:	(bad)  
  417be3:	push   DWORD PTR [ecx]
  417be5:	mov    ch,BYTE PTR [edx]
  417be7:	dec    ecx
  417be8:	dec    esp
  417bea:	int3   
  417beb:	xor    DWORD PTR [ebx+0x3d],0x3b
  417bef:	xchg   ebp,eax
  417bf0:	(bad)  
  417bf1:	inc    DWORD PTR [eax]
  417bf3:	inc    esp
  417bf5:	mov    bl,0x39
  417bf7:	cmp    edi,0xf3000000
  417bfd:	aas    
  417bfe:	fs cdq 
  417c00:	add    ah,cl
  417c02:	inc    DWORD PTR [eax]
  417c04:	cld    
  417c05:	dec    ebp
  417c06:	sbb    ch,dl
  417c08:	add    BYTE PTR [eax],al
  417c0a:	(bad)  
  417c0b:	dec    DWORD PTR [ebx]
  417c0d:	sbb    BYTE PTR [eax-0x33ffff97],dh
  417c13:	call   edx
  417c15:	xchg   edx,eax
  417c16:	xchg   esp,eax
  417c17:	fwait
  417c18:	(bad)  
  417c19:	dec    DWORD PTR [ecx+0x2b4f4eff]
  417c1f:	pop    es
  417c20:	add    DWORD PTR [eax],0xffffffff
  417c23:	call   DWORD PTR [eax]
  417c25:	pop    es
  417c26:	(bad)  
  417c27:	xor    eax,0xff89ff00
  417c2c:	out    dx,al
  417c2d:	outs   dx,DWORD PTR ds:[esi]
  417c2e:	or     DWORD PTR [eax+eax*1],edi
  417c31:	mov    DWORD PTR [ebx+0x38704dff],eax
  417c37:	push   ecx
  417c38:	add    BYTE PTR [eax],al
  417c3a:	dec    esp
  417c3c:	fidivr WORD PTR [ecx-0x19]
  417c3f:	lock (bad) 
  417c41:	inc    DWORD PTR [eax]
  417c43:	int3   
  417c44:	outs   dx,BYTE PTR ds:[esi]
  417c45:	add    BYTE PTR [ebp-0x5a],bh
  417c48:	add    bh,bh
  417c4a:	mov    edi,edi
  417c4c:	jne    0x417c43
  417c4e:	jl     0x417c4f
  417c50:	add    bh,bh
  417c52:	int3   
  417c53:	inc    ecx
  417c55:	or     edi,DWORD PTR [edi]
  417c57:	jbe    0x417c58
  417c59:	add    bh,bh
  417c5b:	or     DWORD PTR [ebx],0x3c
  417c5e:	and    BYTE PTR [esi+0x0],bh
  417c61:	add    BYTE PTR [ebx+0xb47a500],al
  417c67:	data16 int3 
  417c69:	add    BYTE PTR [eax],al
  417c6b:	inc    DWORD PTR [eax+edx*2-0x1]
  417c6f:	idiv   bh
  417c71:	mov    DWORD PTR [eax],eax
  417c73:	add    bl,al
  417c75:	sub    al,dl
  417c77:	cdq    
  417c78:	int3   
  417c79:	mov    DWORD PTR [eax],eax
  417c7b:	dec    DWORD PTR [esi]
  417c7d:	mov    cl,dl
  417c7f:	inc    ecx
  417c80:	inc    DWORD PTR [eax]
  417c82:	add    bh,bh
  417c84:	jge    0x417c13
  417c86:	fidiv  WORD PTR [ebx-0x77]
  417c89:	inc    DWORD PTR [eax]
  417c8b:	push   DWORD PTR [ecx]
  417c8d:	sbb    ebx,DWORD PTR [esp+edx*2-0x1]
  417c91:	inc    DWORD PTR [eax]
  417c93:	(bad)  
  417c94:	cmp    edi,DWORD PTR [ecx-0x5f]
  417c97:	push   esp
  417c98:	int3   
  417c99:	inc    DWORD PTR [eax]
  417c9b:	add    BYTE PTR [ebx+0x1e],bl
  417c9e:	mov    WORD PTR [eax+eax*1-0x1],gs
  417ca2:	add    bh,bh
  417ca4:	dec    esi
  417ca5:	xchg   ebx,eax
  417ca6:	adc    al,0x70
  417ca8:	add    BYTE PTR [eax],al
  417caa:	inc    DWORD PTR [eax]
  417cac:	js     0x417cd7
  417cae:	pop    ebp
  417caf:	loope  0x417cb0
  417cb1:	add    bh,bh
  417cb3:	inc    DWORD PTR [ebp-0x3357a00e]
  417cb9:	add    ah,cl
  417cbb:	xor    DWORD PTR [esi+edx*2+0xcc4623],0xffffffff
  417cc3:	add    DWORD PTR [edx+edi*2],0x47
  417cc7:	popf   
  417cc8:	(bad)  
  417cc9:	(bad)  
  417cca:	(bad)  
  417ccb:	push   DWORD PTR [edi-0xec87f3]
  417cd1:	inc    DWORD PTR [eax]
  417cd3:	add    BYTE PTR [edx+eiz*2-0x7c0029fb],dl
  417cda:	inc    DWORD PTR [eax]
  417cdc:	cwde   
  417cdd:	loope  0x417d39
  417cdf:	push   ss
  417ce0:	dec    DWORD PTR [ecx+0x2496ffff]
  417ce6:	jmp    0xbf83:0x898300f5
  417ced:	(bad)  
  417cee:	rol    eax,1
  417cf0:	int3   
  417cf1:	inc    DWORD PTR [eax]
  417cf3:	inc    DWORD PTR [ecx+eax*4-0xe7a2]
  417cfa:	int3   
  417cfb:	mov    DWORD PTR [edi],ecx
  417cfd:	loop   0x417c9d
  417cff:	xor    eax,0xffffff00
  417d04:	sbb    DWORD PTR [ecx+0x51],ecx
  417d07:	sbb    al,0x0
  417d09:	dec    DWORD PTR [ecx-0x784d0200]
  417d0f:	mov    dl,0xff
  417d11:	or     DWORD PTR [ecx-0x31168601],0x4c
  417d18:	inc    DWORD PTR [eax]
  417d1a:	add    bh,bh
  417d1c:	xor    al,0x20
  417d1e:	out    dx,eax
  417d1f:	fwait
  417d20:	cmp    edi,0xffffffff
  417d23:	add    dh,bh
  417d25:	mov    eax,ds:0xccff9d2b
  417d2a:	(bad)  
  417d2b:	call   DWORD PTR [edx+0x49]
  417d2e:	sub    DWORD PTR [ecx+0xffff],edi
  417d34:	dec    eax
  417d35:	(bad)  
  417d36:	xchg   ecx,eax
  417d37:	add    al,0xff
  417d39:	add    BYTE PTR [eax],al
  417d3b:	inc    esi
  417d3d:	adc    eax,0xff0072ce
  417d42:	int3   
  417d43:	or     DWORD PTR [ecx],0x5a
  417d46:	or     DWORD PTR [edi],esp
  417d48:	add    bh,bh
  417d4a:	add    DWORD PTR [ebx-0x5a9682a1],0x0
  417d51:	inc    DWORD PTR [eax]
  417d53:	xor    DWORD PTR [ebx-0x96d10e],0xffffffff
  417d5a:	add    bh,bh
  417d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d5d:	mov    ch,0xe4
  417d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d60:	or     esp,0xffffffcc
  417d63:	add    BYTE PTR [edi-0x45],bh
  417d66:	fwait
  417d67:	lahf   
  417d68:	inc    DWORD PTR [eax]
  417d6a:	int3   
  417d6b:	call   FWORD PTR [esi-0x7f2326]
  417d71:	mov    edi,edi
  417d73:	mov    DWORD PTR [ecx-0x4d],esi
  417d76:	and    BYTE PTR [esi-0x1],cl
  417d79:	(bad)  
  417d7a:	(bad)  
  417d7b:	dec    DWORD PTR [ebx]
  417d7d:	(bad)  
  417d7e:	mov    ecx,0xffffd6
  417d83:	add    BYTE PTR [ebx+0x5e],dl
  417d86:	mov    esp,0xffcc00b6
  417d8b:	add    BYTE PTR [ebp-0x33422ba7],bl
  417d91:	add    BYTE PTR [eax],al
  417d93:	add    dl,ch
  417d95:	loope  0x417e0a
  417d97:	and    al,0xff
  417d99:	mov    DWORD PTR [eax],eax
  417d9b:	(bad)  
  417d9c:	out    dx,eax
  417d9d:	or     DWORD PTR es:[esi],ebp
  417da0:	add    DWORD PTR [eax],0xffffff83
  417da3:	add    BYTE PTR [ebx],dl
  417da5:	cmc    
  417da6:	fst    QWORD PTR [eax+0x0]
  417da9:	add    bh,bh
  417dab:	jmp    FWORD PTR [esi+0x36]
  417dae:	fsub   QWORD PTR [eax+eax*1]
  417db1:	int3   
  417db2:	(bad)  
  417db3:	(bad)  
  417db4:	jle    0x417e02
  417db6:	push   ebx
  417db7:	fcos   
  417db9:	inc    DWORD PTR [ebx+0x4ef7d3ff]
  417dbf:	or     bh,bh
  417dc1:	mov    edi,edi
  417dc3:	jmp    DWORD PTR [esi-0xc1c329]
  417dc9:	add    bh,bh
  417dcb:	cmp    eax,0xffffffda
  417dce:	ins    DWORD PTR es:[edi],dx
  417dcf:	add    edi,edi
  417dd1:	add    bh,bh
  417dd3:	push   DWORD PTR [edx+0x649803]
  417dd9:	inc    DWORD PTR [ebx+0xbbea000]
  417ddf:	clc    
  417de0:	add    BYTE PTR [ebx+0x7b4c8300],al
  417de6:	loope  0x417de6
  417de8:	dec    esp
  417dea:	(bad)  
  417deb:	push   DWORD PTR [ecx+edi*8]
  417dee:	dec    ebp
  417def:	ins    DWORD PTR es:[edi],dx
  417df0:	mov    DWORD PTR [ebx+0x6d87cc00],eax
  417df6:	pop    es
  417df7:	push   ds
  417df8:	add    BYTE PTR [eax],al
  417dfa:	add    BYTE PTR [eax],al
  417dfc:	retf   
  417dfd:	sbb    ebx,DWORD PTR [edi]
  417dff:	outs   dx,DWORD PTR ds:[esi]
  417e00:	add    bh,bh
  417e02:	dec    DWORD PTR [ecx+0x69476afb]
  417e08:	add    bh,bh
  417e0a:	int3   
  417e0b:	(bad)  
  417e0c:	sti    
  417e0d:	sub    al,0x6f
  417e0f:	and    bh,bh
  417e11:	add    DWORD PTR [eax],0xffffffff
  417e14:	gs cdq 
  417e16:	aas    
  417e17:	push   ebp
  417e18:	inc    DWORD PTR [eax]
  417e1a:	(bad)  
  417e1b:	jmp    DWORD PTR ds:0xff637503
  417e21:	(bad)  
  417e22:	inc    DWORD PTR [eax]
  417e24:	clc    
  417e25:	sbb    DWORD PTR ds:0xffffff5b,edx
  417e2b:	jmp    FWORD PTR [ebx+edi*4-0x5d]
  417e2f:	inc    WORD PTR [eax]
  417e32:	add    bh,bh
  417e34:	push   esp
  417e35:	push   0x838b97
  417e3a:	add    bh,bh
  417e3c:	jns    0x417dd2
  417e3e:	mov    ah,0xd8
  417e40:	inc    DWORD PTR [eax]
  417e42:	inc    DWORD PTR [ebx+0x22502642]
  417e48:	mov    DWORD PTR [eax],eax
  417e4a:	(bad)  
  417e4b:	push   DWORD PTR [edi]
  417e4d:	mov    dh,BYTE PTR [ebx+0xff008c]
  417e53:	add    BYTE PTR [edi],al
  417e55:	lods   eax,DWORD PTR ds:[esi]
  417e56:	jmp    0x89417f03
  417e5b:	int3   
  417e5c:	inc    edx
  417e5d:	xor    ecx,DWORD PTR ds:0xffee
  417e63:	add    BYTE PTR [esp+edx*2],bl
  417e66:	fbld   TBYTE PTR [ecx-0x77]
  417e69:	add    BYTE PTR [eax],al
  417e6b:	(bad)  
  417e6c:	fsubr  DWORD PTR [edx]
  417e6e:	and    al,0xd1
  417e70:	(bad)  
  417e71:	inc    DWORD PTR [ebx+0x2815e7ff]
  417e77:	jle    0x417e79
  417e79:	add    BYTE PTR [ebx+0xa262b00],al
  417e7f:	dec    edx
  417e80:	add    DWORD PTR [eax],0x0
  417e83:	or     DWORD PTR [edi-0x43],0x1b
  417e87:	pop    edx
  417e88:	inc    DWORD PTR [eax]
  417e8a:	(bad)  
  417e8b:	call   FWORD PTR [edi-0x1d]
  417e8e:	sti    
  417e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e90:	(bad)  
  417e91:	(bad)  
  417e92:	(bad)  
  417e93:	inc    DWORD PTR [esp+ebp*8-0x7c00d3f7]
  417e9a:	inc    DWORD PTR [ebx+0xb8bce4e]
  417ea0:	add    bh,bh
  417ea2:	inc    DWORD PTR [eax]
  417ea4:	push   edi
  417ea5:	mov    cl,0x38
  417ea7:	ret    0xcc
  417eaa:	add    BYTE PTR [eax],al
  417eac:	out    0x9,eax
  417eae:	mov    bh,0x9a
  417eb0:	inc    DWORD PTR [eax]
  417eb2:	inc    DWORD PTR [eax]
  417eb4:	adc    al,0xb8
  417eb6:	retf   0x3e
  417eb9:	inc    DWORD PTR [eax]
  417ebb:	jmp    DWORD PTR [esi]
  417ebd:	sub    BYTE PTR [edi+0x59],0x83
  417ec1:	add    bh,bh
  417ec3:	add    BYTE PTR [ebx+0xab20fe],dh
  417ec9:	inc    DWORD PTR [eax]
  417ecb:	(bad)  
  417ecc:	fcmovu st,st(1)
  417ece:	aas    
  417ecf:	or     al,0x0
  417ed1:	dec    DWORD PTR [ecx-0x182a2400]
  417ed7:	cmp    eax,0xffcc8900
  417edc:	retf   0x63fa
  417edf:	lahf   
  417ee0:	cmp    edi,0x0
  417ee3:	add    BYTE PTR [ebp-0xa9466e],ah
  417ee9:	or     esp,0xffffffff
  417eec:	cmp    eax,0x834a4efa
  417ef1:	add    bh,bh
  417ef3:	add    BYTE PTR [ebp-0x21],bl
  417ef6:	fdiv   st,st(7)
  417ef8:	int3   
  417ef9:	mov    DWORD PTR [eax],eax
  417efb:	call   FWORD PTR ds:0x89d93d6d
  417f01:	(bad)  
  417f02:	inc    DWORD PTR [ebx+0x22cb9931]
  417f08:	inc    DWORD PTR [ebx-0x31440100]
  417f0e:	mov    ?,WORD PTR [esi+0xff00]
  417f14:	cmp    DWORD PTR [ecx-0x76ffa834],ebx
  417f1a:	mov    edi,edi
  417f1c:	inc    ebp
  417f1d:	mov    dl,0x2a
  417f1f:	sub    cl,BYTE PTR [ecx-0x40ffff01]
  417f25:	and    bh,BYTE PTR [edi-0x18]
  417f28:	(bad)  
  417f29:	(bad)  
  417f2a:	(bad)  
  417f2b:	(bad)  
  417f2c:	cli    
  417f2d:	ror    DWORD PTR [ebp-0x3d],0x83
  417f31:	(bad)  
  417f32:	inc    DWORD PTR [eax]
  417f34:	add    bl,BYTE PTR [ebx]
  417f36:	xlat   BYTE PTR ds:[ebx]
  417f37:	push   ebp
  417f38:	cmp    edi,0xffffffff
  417f3b:	add    DWORD PTR [eax],0x50
  417f3e:	test   eax,0xcc00cc71
  417f43:	push   eax
  417f45:	dec    ebp
  417f46:	test   BYTE PTR [ebp+0x0],0xff
  417f4a:	int3   
  417f4b:	adc    DWORD PTR [ebp+ebp*4+0x8975e4],0xffffffcc
  417f53:	call   DWORD PTR [ebx-0x763870e7]
  417f59:	add    BYTE PTR [eax],al
  417f5b:	sbb    eax,0x4b
  417f5e:	or     edi,esi
  417f60:	cmp    edi,0xffffff83
  417f63:	add    BYTE PTR [ebx-0x76bb111c],bh
  417f69:	(bad)  
  417f6a:	dec    esp
  417f6c:	idiv   BYTE PTR [ecx]
  417f6e:	jo     0x417f90
  417f70:	add    BYTE PTR [ebx-0x2c853400],al
  417f76:	inc    ebp
  417f77:	in     eax,dx
  417f78:	mov    edi,edi
  417f7a:	inc    DWORD PTR [eax]
  417f7c:	popa   
  417f7d:	mov    ebp,0xffff93e3
  417f82:	(bad)  
  417f83:	dec    DWORD PTR [ecx+eax*4-0x7cffb3d0]
  417f8a:	add    bh,bh
  417f8c:	ret    
  417f8d:	addr16 pop esi
  417f8f:	sbb    edi,edi
  417f91:	add    BYTE PTR [ebx-0x2c4fe877],al
  417f97:	int3   
  417f98:	add    BYTE PTR [ecx-0x17ae7c77],cl
  417f9e:	out    0x47,eax
  417fa0:	(bad)  
  417fa1:	(bad)  
  417fa2:	(bad)  
  417fa3:	jmp    DWORD PTR [ebp-0x33ad2a04]
  417fa9:	dec    esp
  417fab:	push   DWORD PTR [ebx+0x6f]
  417fae:	mov    esp,0xffff003a
  417fb3:	xor    edx,0x77
  417fb6:	mov    bh,0xa5
  417fb8:	inc    DWORD PTR [eax]
  417fba:	or     esp,0xffffffda
  417fbd:	mov    DWORD PTR [eax],0xff00fffd
  417fc3:	(bad)  
  417fc4:	sti    
  417fc5:	add    DWORD PTR [esi+eax*2-0x3400],esp
  417fcc:	xchg   esp,eax
  417fcd:	jnp    0x417f62
  417fcf:	lods   al,BYTE PTR ds:[esi]
  417fd0:	add    ah,cl
  417fd2:	inc    DWORD PTR [eax]
  417fd4:	adc    BYTE PTR [eax+eiz*8],0xb9
  417fd8:	inc    DWORD PTR [ebx+0x74affff]
  417fde:	mov    al,ds:0xffff8383
  417fe3:	mov    DWORD PTR [edi-0x7c127ad7],eax
  417fe9:	(bad)  
  417fea:	(bad)  
  417feb:	call   esp
  417fed:	test   eax,0xffffe584
  417ff2:	cmp    edi,0xffffffca
  417ff5:	stos   DWORD PTR es:[edi],eax
  417ff6:	pop    es
  417ff7:	sub    bh,bh
  417ff9:	add    ah,cl
  417ffb:	int3   
  417ffc:	loope  0x41802f
  417ffe:	dec    ecx
  417fff:	lods   al,BYTE PTR ds:[esi]
  418000:	int3   
  418001:	add    DWORD PTR [eax],0xffffffff
  418004:	das    
  418005:	sbb    ah,BYTE PTR [esi-0xff0012]
  41800b:	add    BYTE PTR [ecx-0xe2595e],cl
  418011:	dec    DWORD PTR [ecx+0x18cfc4ff]
  418017:	mov    edi,?
  418019:	(bad)  
  41801a:	inc    DWORD PTR [ebx+0x5b833cd1]
  418020:	add    DWORD PTR [ebx+0x797bffff],0x69
  418027:	or     bh,bh
  418029:	add    bh,bh
  41802b:	inc    DWORD PTR [edi+0x10]
  41802e:	jne    0x418071
  418030:	add    BYTE PTR [ebx-0x10910001],al
  418036:	sar    dl,cl
  418038:	add    BYTE PTR [ebx+0x558700ff],al
  41803e:	adc    al,BYTE PTR [ecx]
  418040:	add    bh,bh
  418042:	add    BYTE PTR [eax],al
  418044:	and    al,ah
  418046:	ror    BYTE PTR [esi],1
  418048:	dec    esp
  41804a:	mov    DWORD PTR [eax],eax
  41804c:	add    al,0x8e
  41804e:	stos   BYTE PTR es:[edi],al
  41804f:	or     esp,0x2600ffff
  418055:	loope  0x41800c
  418057:	mov    dl,0x0
  418059:	(bad)  
  41805a:	dec    esp
  41805c:	and    al,0x98
  41805e:	ficomp WORD PTR ds:0xffff00ff
  418064:	and    DWORD PTR [ebx+0xad8e],0xffffffff
  41806b:	call   DWORD PTR [ebp-0x22]
  41806e:	fsub   QWORD PTR [ebx+0xccff00]
  418074:	mov    ebx,0xa476a6
  418079:	mov    DWORD PTR [ebx-0x44a48201],eax
  41807f:	add    DWORD PTR [eax],0xffffff83
  418082:	add    BYTE PTR [eax],al
  418084:	sahf   
  418085:	push   eax
  418086:	and    dl,ah
  418088:	add    bh,bh
  41808a:	dec    esp
  41808c:	ret    
  41808d:	xchg   esi,eax
  41808e:	call   0x418192
  418093:	jmp    DWORD PTR [ecx-0x127017]
  418099:	add    ah,cl
  41809b:	inc    DWORD PTR [edi+ebp*2]
  41809e:	(bad)  
  41809f:	repnz dec esp
  4180a2:	(bad)  
  4180a3:	jmp    FWORD PTR [ebp-0x7638da2d]
  4180a9:	add    ah,cl
  4180ab:	jmp    esp
  4180ad:	pop    ds
  4180ae:	call   0xff4180f0
  4180b3:	add    BYTE PTR [ebx],bh
  4180b5:	int3   
  4180b6:	xchg   edx,eax
  4180b7:	rol    BYTE PTR [eax],cl
  4180b9:	add    bh,bh
  4180bb:	int3   
  4180bc:	adc    BYTE PTR ds:0xff0c3d,bh
  4180c2:	(bad)  
  4180c3:	jmp    FWORD PTR [edi]
  4180c5:	scas   eax,DWORD PTR es:[edi]
  4180c6:	or     DWORD PTR [eax-0x1],ebp
  4180c9:	add    bh,bh
  4180cb:	add    BYTE PTR [ebx+ebp*8-0xa31d],cl
  4180d2:	add    bh,bh
  4180d4:	push   cs
  4180d5:	ret    0x1b31
  4180d8:	int3   
  4180d9:	int3   
  4180da:	int3   
  4180db:	int3   
  4180dc:	int3   
  4180dd:	int3   
  4180de:	int3   
  4180df:	int3   
  4180e0:	call   FWORD PTR [edi]
  4180e2:	nop
  4180e3:	and    DWORD PTR [esi-0x2bab0100],0x0
  4180ea:	add    cl,ah
  4180ec:	jno    0x4180cc
  4180ee:	(bad)  
  4180ef:	(bad)  
  4180f0:	inc    DWORD PTR ds:0xff34ff9c
  4180f6:	inc    DWORD PTR [ebx-0x28]
  4180f9:	add    bh,bh
  4180fb:	fidiv  WORD PTR [ebp-0xff0028]
  418101:	inc    DWORD PTR [ebx+0x3ed586]
  418107:	mov    ebx,0x83ff0cff
  41810c:	jae    0x418158
  41810e:	mov    cl,0x0
  418110:	cmp    edi,0xffffffff
  418113:	mov    ecx,0xce002c87
  418118:	inc    ecx
  41811a:	dec    esp
  41811c:	(bad)  
  41811d:	sub    al,0x9b
  41811f:	inc    DWORD PTR [eax]
  418121:	add    bh,bh
  418123:	mov    ds:0xde839a2e,eax
  418128:	dec    esp
  41812a:	(bad)  
  41812b:	push   DWORD PTR [esi-0x7a]
  41812e:	sub    bh,bh
  418130:	cmp    edi,0xffffff83
  418133:	(bad)  
  418134:	xchg   ebx,eax
  418135:	scas   al,BYTE PTR es:[edi]
  418136:	jmp    FWORD PTR [ebx]
  418138:	add    BYTE PTR [eax+eax*1+0x1523e8ff],bl
  41813f:	add    bh,bh
  418141:	add    bh,bh
  418143:	and    DWORD PTR [eax],ebx
  418145:	in     al,dx
  418146:	jmp    FWORD PTR [ecx-0x1]
  418149:	jmp    0xff4a:0xae830083
  418150:	int3   
  418151:	mov    DWORD PTR [eax],eax
  418153:	dec    esp
  418154:	xor    BYTE PTR [ebx],dl
  418156:	add    al,cl
  418158:	add    BYTE PTR [edi+edi*8],bl
  41815b:	call   FWORD PTR [edx-0x28]
  41815e:	and    al,BYTE PTR [eax]
  418160:	cmp    edi,0xffffffff
  418163:	or     eax,0x46894d58
  418168:	push   DWORD PTR [esi]
  41816a:	inc    DWORD PTR [eax]
  41816c:	loop   0x418183
  41816e:	xchg   edx,eax
  41816f:	mov    edi,edi
  418171:	(bad)  
  418172:	jmp    FWORD PTR [edi*1-0x3368ff47]
  418179:	mov    ebp,0xf2cdff00
  41817e:	mov    ecx,0xcc838900
  418183:	mov    cl,0x18
  418185:	sbb    eax,0x9483bdff
  41818a:	(bad)  
  41818b:	(bad)  
  41818c:	mov    eax,0x83836f59
  418191:	(bad)  
  418192:	jmp    edi
  418194:	mov    eax,0xa9ffc5
  418199:	pusha  
  41819a:	inc    DWORD PTR [ebx+0xd976b6]
  4181a0:	add    BYTE PTR [ebx+0x22d04dff],al
  4181a6:	add    BYTE PTR [eax],dh
  4181a8:	push   edi
  4181aa:	add    BYTE PTR [ebx-0x76cd437f],al
  4181b0:	cmp    edi,0xffffffff
  4181b3:	call   0xd783:0xb200f7b3
  4181ba:	dec    esp
  4181bc:	and    BYTE PTR [esi-0x14],0xff
  4181c0:	inc    DWORD PTR [eax]
  4181c2:	add    bl,dl
  4181c4:	adc    BYTE PTR [eax+eax*1-0x7c2eff9e],al
  4181cb:	add    BYTE PTR [ecx-0x58],dh
  4181ce:	retf   0xffff
  4181d1:	add    bh,bh
  4181d3:	xor    DWORD PTR [edi-0x15ffe2],esi
  4181d9:	dec    edi
  4181da:	inc    DWORD PTR [eax]
  4181dc:	or     ch,BYTE PTR [ebx+0x18]
  4181df:	add    bh,bh
  4181e1:	(bad)  
  4181e2:	call   DWORD PTR ds:0x7d00bcd8
  4181e8:	add    BYTE PTR [edx],bl
  4181ea:	add    ah,cl
  4181ec:	xchg   ebx,eax
  4181ed:	popa   
  4181ee:	mov    ecx,DWORD PTR [ecx+0x128389cc]
  4181f4:	push   ebx
  4181f5:	test   DWORD PTR [eax],0x2c0009
  4181fb:	add    BYTE PTR [edi],bl
  4181fd:	(bad)  
  4181fe:	push   ds
  4181ff:	add    BYTE PTR [ebx-0x4c500001],al
  418205:	push   ebx
  418206:	add    BYTE PTR [ebx-0x76dc00],cl
  41820c:	data16 cmc 
  41820e:	mov    esp,0xcc89ffff
  418213:	jg     0x418228
  418215:	push   ebp
  418216:	int3   
  418217:	dec    edx
  418218:	add    bh,dh
  41821a:	(bad)  
  41821b:	push   eax
  41821d:	fcmovbe st,st(4)
  41821f:	mov    DWORD PTR [ebx-0x3feff01],eax
  418225:	test   eax,0x11ffac00
  41822a:	inc    DWORD PTR [ebx-0x9d0757]
  418230:	(bad)  
  418231:	(bad)  
  418232:	(bad)  
  418233:	out    dx,al
  418234:	sub    eax,0xcc60ff63
  418239:	pop    es
  41823a:	add    BYTE PTR [eax],al
  41823c:	adc    eax,0xff724a
  418241:	add    BYTE PTR [ebx-0xdb24e5],al
  418247:	dec    esp
  418248:	and    DWORD PTR [eax-0x7d],0xffffffff
  41824c:	pop    esp
  41824d:	xlat   BYTE PTR ds:[ebx]
  41824e:	dec    esi
  41824f:	add    DWORD PTR [eax],0xffffff89
  418252:	push   DWORD PTR [edx]
  418254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418255:	rol    DWORD PTR [eax],cl
  418257:	sub    edi,edi
  418259:	lea    eax,[eax]
  41825b:	add    BYTE PTR [esi+0xf34f],bh
  418261:	inc    DWORD PTR [ebx+0x6b69aa]
  418267:	repz add BYTE PTR [ebx+eax*4],bh
  41826b:	add    BYTE PTR [esi-0x54],ch
  41826e:	inc    edi
  41826f:	dec    DWORD PTR [ecx+0x45c883ff]
  418275:	pop    esi
  418276:	int3   
  418277:	pop    esp
  418278:	add    bh,ch
  41827a:	mov    edi,edi
  41827c:	lods   eax,DWORD PTR ds:[esi]
  41827d:	cld    
  41827e:	mov    DWORD PTR [eax],eax
  418280:	(bad)  
  418281:	(bad)  
  418282:	jmp    FWORD PTR [ebx]
  418284:	fcom   QWORD PTR [ecx+0x7800c0ff]
  41828a:	mov    DWORD PTR [ebx-0x1b75f7],eax
  418290:	inc    DWORD PTR [eax]
  418292:	add    cl,al
  418294:	xchg   ebx,eax
  418295:	test   eax,0x3fffc800
  41829a:	add    BYTE PTR [ebx-0xda198e],al
  4182a0:	inc    DWORD PTR [ebx+0x4f2a4100]
  4182a6:	call   DWORD PTR [ebx-0xc700]
  4182ac:	push   edx
  4182ad:	jle    0x41827c
  4182af:	or     esp,0x0
  4182b2:	add    DWORD PTR [eax+0x37],0xffffffc2
  4182b6:	jmp    FWORD PTR [ebx+0x0]
  4182b9:	sub    al,0xff
  4182bb:	(bad)  
  4182bc:	jg     0x4182e0
  4182be:	push   cs
  4182bf:	add    bh,bh
  4182c1:	(bad)  
  4182c2:	jmp    ecx
  4182c4:	int    0x6e
  4182c6:	call   ecx
  4182c8:	add    BYTE PTR [edi+0x238b00ff],dh
  4182ce:	nop
  4182cf:	(bad)  
  4182d0:	(bad)  
  4182d1:	inc    DWORD PTR [eax]
  4182d3:	sbb    al,al
  4182d5:	int3   
  4182d6:	add    BYTE PTR [ecx-0x7c001f01],ch
  4182dc:	mov    esp,0xff0c2a
  4182e1:	add    bh,bh
  4182e3:	(bad)  
  4182e4:	mov    ds:0xff77000e,al
  4182e9:	(bad)  
  4182ea:	inc    DWORD PTR [eax]
  4182ec:	rcl    DWORD PTR [eax-0x7c00ff79],0x0
  4182f3:	and    dh,BYTE PTR [esi+eiz*4+0x0]
  4182f7:	loopne 0x4182f8
  4182f9:	out    dx,eax
  4182fa:	inc    DWORD PTR [ebx-0x30a4fd]
  418300:	dec    esp
  418302:	int3   
  418303:	xlat   BYTE PTR ds:[ebx]
  418304:	mov    ds:0xc6ff73,eax
  418309:	cmc    
  41830a:	int3   
  41830b:	inc    DWORD PTR ds:0xff836bf9
  418311:	inc    DWORD PTR [ebx-0xb6aea1]
  418317:	sbb    DWORD PTR ds:[ebx+0x0],0xffffffff
  41831c:	dec    ecx
  41831d:	aad    0x51
  41831f:	cmp    edi,0xffffff83
  418322:	add    dh,dh
  418324:	imul   ebp,DWORD PTR [ebx],0xffffffff
  418327:	out    0xff,al
  418329:	jnp    0x41832b
  41832b:	dec    DWORD PTR [ebp-0x2a]
  41832e:	cld    
  41832f:	inc    DWORD PTR [ebx+0x78a7ff83]
  418335:	out    dx,al
  418336:	int3   
  418337:	add    BYTE PTR gs:[esi-0x7ec80001],bl
  41833e:	arpl   di,di
  418340:	inc    DWORD PTR [eax]
  418342:	add    esi,0x6e
  418345:	int3   
  418346:	add    ah,cl
  418348:	add    BYTE PTR [esi-0x77],al
  41834b:	int3   
  41834c:	xor    dh,BYTE PTR [esi-0x4a]
  41834f:	add    BYTE PTR [eax],al
  418351:	add    ah,cl
  418353:	cld    
  418354:	scas   al,BYTE PTR es:[edi]
  418355:	dec    esp
  418356:	call   DWORD PTR [eax]
  418358:	push   esi
  41835a:	add    bh,bh
  41835c:	aas    
  41835d:	xchg   esp,eax
  41835e:	sub    BYTE PTR [eax],al
  418360:	inc    DWORD PTR [eax]
  418362:	(bad)  
  418363:	std    
  418364:	cmp    ebp,ebp
  418366:	(bad)  
  418367:	jle    0x4182ec
  418369:	mov    es,WORD PTR [eax]
  41836b:	add    BYTE PTR [edi-0x332ef4],cl
  418371:	(bad)  
  418372:	(bad)  
  418373:	fcmove st,st(4)
  418375:	xlat   BYTE PTR ds:[ebx]
  418376:	add    BYTE PTR [edx-0x34],bh
  418379:	stc    
  41837a:	(bad)  
  41837b:	jmp    DWORD PTR [esi]
  41837d:	push   es
  41837e:	ja     0x41837f
  418380:	mov    DWORD PTR [eax],eax
  418382:	jmp    DWORD PTR [esi]
  418384:	scas   al,BYTE PTR es:[edi]
  418385:	cld    
  418386:	jmp    FWORD PTR [ebx]
  418388:	(bad)  
  418389:	out    dx,al
  41838a:	inc    DWORD PTR [eax]
  41838c:	xchg   ecx,eax
  41838d:	and    al,0x85
  41838f:	add    BYTE PTR [eax],al
  418391:	(bad)  
  418392:	dec    DWORD PTR [esi-0x450005a6]
  418398:	add    BYTE PTR [edx],dh
  41839a:	inc    DWORD PTR [eax]
  41839c:	push   esp
  41839d:	jg     0x4183f7
  41839f:	add    BYTE PTR [ecx+0x7ef400ff],cl
  4183a5:	je     0x4183a7
  4183a7:	cmp    bh,bh
  4183a9:	mov    edi,0x8a91ff00
  4183ae:	cli    
  4183af:	add    BYTE PTR [ebx+0x23e200ff],al
  4183b5:	scas   al,BYTE PTR es:[edi]
  4183b6:	sub    edx,0xffffff83
  4183b9:	lahf   
  4183ba:	mov    DWORD PTR [eax],eax
  4183bc:	test   BYTE PTR [edi+0xff009d],dh
  4183c2:	(bad)  
  4183c3:	jns    0x41841a
  4183c5:	rol    BYTE PTR [eax],cl
  4183c7:	jp     0x4183c8
  4183c9:	ins    DWORD PTR es:[edi],dx
  4183ca:	(bad)  
  4183cb:	(bad)  
  4183cc:	jge    0x418357
  4183ce:	jge    0x4183cf
  4183d0:	add    bh,bh
  4183d2:	add    DWORD PTR [ecx],0x33
  4183d5:	pop    edx
  4183d6:	jmp    DWORD PTR [edi+edi*8-0x7c]
  4183da:	add    bh,bh
  4183dc:	mov    ch,0xb
  4183de:	dec    ebp
  4183df:	add    BYTE PTR [ebx-0x4b2a7c7d],al
  4183e5:	(bad)  
  4183e6:	jmp    FWORD PTR [eax-0x1]
  4183e9:	stos   DWORD PTR es:[edi],eax
  4183ea:	(bad)  
  4183eb:	dec    eax
  4183ed:	xchg   esi,eax
  4183ee:	or     al,BYTE PTR [eax]
  4183f0:	inc    DWORD PTR [ebx-0x59f2d400]
  4183f6:	add    ah,cl
  4183f8:	and    DWORD PTR [ebp-0x1],0xffffff83
  4183fc:	lods   al,BYTE PTR ds:[esi]
  4183fd:	push   edx
  4183fe:	jle    0x4183cc
  418400:	(bad)  
  418401:	inc    DWORD PTR [ebx-0x7ca7b94b]
  418407:	jg     0x418408
  418409:	cmp    bh,bh
  41840b:	add    ah,bl
  41840d:	ins    BYTE PTR es:[edi],dx
  41840e:	push   esp
  41840f:	int3   
  418410:	inc    DWORD PTR [eax]
  418412:	int3   
  418413:	std    
  418414:	mov    eax,ds:0xff9fffd8
  418419:	hlt    
  41841a:	add    BYTE PTR [eax],al
  41841c:	ins    DWORD PTR es:[edi],dx
  41841d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41841e:	jmp    0x495f:0x83cc83ff
  418425:	(bad)  
  418426:	(bad)  
  418427:	stc    
  418428:	add    BYTE PTR [ebx+0x1cd00cc],bh
  41842e:	add    DWORD PTR [eax],0x0
  418431:	add    ah,cl
  418433:	or     al,0x1e
  418435:	in     al,0xff
  418437:	sar    bh,1
  418439:	cwde   
  41843a:	dec    DWORD PTR [ecx+0x2fec61]
  418440:	add    bh,bh
  418442:	call   DWORD PTR ds:0xa7ffdca9
  418448:	(bad)  
  418449:	inc    BYTE PTR [ebx+0xd9ea6ff]
  41844f:	add    DWORD PTR [ebx-0xabeff77],0xffffff80
  418456:	add    BYTE PTR [eax-0xff8a01],ch
  41845c:	scas   al,BYTE PTR es:[edi]
  41845d:	sbb    DWORD PTR ds:0x89ff00ff,esp
  418463:	cdq    
  418464:	fwait
  418465:	arpl   di,di
  418467:	sar    edi,1
  418469:	mov    eax,ds:0x7b61ff83
  41846e:	pop    ebp
  41846f:	add    DWORD PTR [eax],0x0
  418472:	jmp    FWORD PTR [esp+edi*1-0x9c00db]
  418479:	sub    BYTE PTR [ebx-0x6f344a7d],al
  41847f:	cmp    edi,0x0
  418482:	mov    DWORD PTR [esi-0x4b7c5820],edi
  418488:	mov    DWORD PTR [esi+0x0],ebp
  41848b:	mov    DWORD PTR [ebp-0x38b],ecx
  418491:	add    BYTE PTR [eax],al
  418493:	popa   
  418494:	inc    esp
  418495:	mov    al,ds:0xd008000
  41849a:	add    BYTE PTR [ebx-0xec4f58],al
  4184a0:	dec    esp
  4184a2:	add    BYTE PTR [ecx+eiz*4],dh
  4184a5:	loopne 0x41842a
  4184a7:	sbb    al,0x0
  4184a9:	xlat   BYTE PTR ds:[ebx]
  4184aa:	inc    DWORD PTR [eax]
  4184ac:	pushf  
  4184ad:	mov    eax,ds:0xff00005f
  4184b2:	jmp    FWORD PTR [edi+ebx*2-0x4a766a]
  4184b9:	scas   eax,DWORD PTR es:[edi]
  4184ba:	cmp    edi,0xffffffc2
  4184bd:	nop
  4184be:	int3   
  4184bf:	add    bh,bh
  4184c1:	add    bh,bh
  4184c3:	push   ecx
  4184c4:	cmp    dh,bl
  4184c6:	int3   
  4184c7:	(bad)  
  4184c8:	jmp    FWORD PTR ds:0x851d00ff
  4184ce:	in     eax,0xff
  4184d0:	add    BYTE PTR [eax],al
  4184d2:	jmp    DWORD PTR [ebx+0x3ff5757]
  4184d8:	dec    DWORD PTR [ebx]
  4184da:	add    BYTE PTR [ebx-0x7c1e65e3],al
  4184e0:	inc    DWORD PTR [eax]
  4184e2:	add    BYTE PTR [edi],ch
  4184e4:	lock add edi,edi
  4184e7:	adc    eax,0x33ff
  4184ec:	pop    eax
  4184ed:	daa    
  4184ee:	jg     0x4184ef
  4184f0:	add    bh,bh
  4184f2:	dec    DWORD PTR [edi+0x28]
  4184f5:	rol    BYTE PTR [eax],0xf2
  4184f8:	call   FWORD PTR [ecx-0x1]
  4184fb:	jmp    DWORD PTR [edx+0x5e]
  4184fe:	sub    DWORD PTR [ecx-0x7b00007d],ecx
  418504:	mov    ch,0xa2
  418506:	add    BYTE PTR [eax+0x89eeff],ch
  41850c:	hlt    
  41850d:	mov    ds:0xffff00ec,eax
  418512:	int3   
  418513:	add    edx,ecx
  418515:	mov    ds:0xe5ffb7ff,al
  41851a:	int3   
  41851b:	add    al,ah
  41851d:	sub    al,bl
  41851f:	add    DWORD PTR [eax],0xffffffcc
  418522:	inc    DWORD PTR [edi+0x73ff9875]
  418528:	mov    edx,esi
  41852a:	add    BYTE PTR [ebx-0xba0a7c],al
  418530:	add    bh,bh
  418532:	dec    DWORD PTR [esi]
  418534:	inc    bl
  418536:	int3   
  418537:	sbb    al,0x0
  418539:	xor    al,0xff
  41853b:	inc    DWORD PTR [ecx-0xff42be]
  418541:	(bad)  
  418542:	call   esp
  418544:	cmp    al,0x21
  418546:	int3   
  418547:	adc    eax,0x83ccafcc
  41854c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41854d:	ins    BYTE PTR es:[edi],dx
  41854e:	nop
  41854f:	inc    DWORD PTR [ebx-0x106aff01]
  418555:	jbe    0x418557
  418557:	(bad)  
  41855a:	inc    DWORD PTR [ebx+0xd19db9]
  418560:	add    BYTE PTR [ebx-0x60dbfa34],al
  418566:	sub    esi,0xffffff83
  418569:	xor    esp,ecx
  41856b:	and    DWORD PTR [esp+ebp*1-0xff91],0xffffffff
  418573:	ror    BYTE PTR gs:[ebp-0x6400f101],0xff
  41857b:	(bad)  
  41857c:	cmp    ch,al
  41857e:	dec    esp
  41857f:	mov    DWORD PTR [eax],eax
  418581:	mov    DWORD PTR [eax],eax
  418583:	sbb    eax,0xe7ff73d7
  418588:	jmp    DWORD PTR [edx-0x7d990000]
  41858e:	pop    ebx
  41858f:	inc    DWORD PTR [eax]
  418591:	add    ah,cl
  418593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418594:	sub    BYTE PTR [edi+edi*8-0xd],dh
  418598:	add    DWORD PTR [eax],0xffffff83
  41859b:	add    al,al
  41859d:	aas    
  41859e:	cli    
  41859f:	(bad)  
  4185a0:	(bad)  
  4185a1:	(bad)  
  4185a2:	dec    DWORD PTR [edx+0x1a]
  4185a5:	xchg   edx,eax
  4185a6:	add    bh,cl
  4185a8:	add    BYTE PTR [ebx],ch
  4185aa:	(bad)  
  4185ab:	call   DWORD PTR [edi-0x6]
  4185ae:	test   eax,0x83ff89ff
  4185b3:	cmp    BYTE PTR [ecx-0x880053],ch
  4185b9:	push   cs
  4185ba:	inc    DWORD PTR [eax]
  4185bc:	push   es
  4185bd:	pop    ds
  4185be:	cwde   
  4185bf:	inc    DWORD PTR [eax]
  4185c1:	(bad)  
  4185c2:	inc    DWORD PTR [eax+eiz*1+0x19]
  4185c6:	add    BYTE PTR [edi],bl
  4185c8:	call   edi
  4185ca:	inc    DWORD PTR [eax]
  4185cc:	lock dec ebp
  4185ce:	retf   0xff00
  4185d1:	int3   
  4185d2:	sbb    DWORD PTR [eax+0x51004f3c],0xffffff83
  4185d9:	xor    edi,edi
  4185db:	add    BYTE PTR [eax+0xff3262],bh
  4185e1:	add    bh,bh
  4185e3:	sub    eax,0x44ff210a
  4185e8:	push   DWORD PTR [edx+0x0]
  4185eb:	mov    DWORD PTR [edi+ecx*4-0xff0053],esp
  4185f2:	add    DWORD PTR [edx+0x4a],0xffffff87
  4185f6:	add    BYTE PTR [ecx-0x7c7c4501],bh
  4185fc:	mov    DWORD PTR [edx-0xffff4b],edx
  418602:	add    BYTE PTR [ecx+0x53],ah
  418605:	mov    eax,ds:0xfcff2b83
  41860a:	inc    DWORD PTR [eax]
  41860c:	les    edx,FWORD PTR [esi]
  41860e:	mov    bl,0xcc
  418610:	dec    DWORD PTR [ecx+0x454081ff]
  418616:	(bad)  
  418617:	cmp    bh,bh
  418619:	icebp  
  41861a:	inc    DWORD PTR [eax]
  41861c:	popa   
  41861d:	loop   0x4185a0
  41861f:	add    BYTE PTR [eax],al
  418621:	add    bh,bh
  418623:	out    dx,al
  418624:	stos   DWORD PTR es:[edi],eax
  418625:	stos   BYTE PTR es:[edi],al
  418626:	jmp    ebx
  418628:	add    BYTE PTR [ebx+eax*4+0x0],dl
  41862c:	jmp    DWORD PTR [ebx+0x6b]
  41862f:	add    BYTE PTR [eax],al
  418631:	(bad)  
  418632:	call   DWORD PTR [esi-0x56]
  418635:	push   0x31007fff
  41863a:	add    BYTE PTR [eax],al
  41863c:	shr    BYTE PTR [edx-0x5f],1
  41863f:	inc    DWORD PTR [eax]
  418641:	(bad)  
  418642:	jmp    esp
  418644:	aad    0x86
  418646:	dec    DWORD PTR [ecx]
  418648:	add    BYTE PTR [ecx],al
  41864a:	(bad)  
  41864b:	dec    DWORD PTR [esi]
  41864d:	push   ss
  41864e:	call   0xd5bf:0xff0000ff
  418655:	test   BYTE PTR [eax],0xa3
  418658:	push   DWORD PTR [esi-0x7a367700]
  41865e:	or     eax,DWORD PTR [eax]
  418660:	add    BYTE PTR [eax],al
  418662:	inc    DWORD PTR [ecx-0x43ffed37]
  418668:	add    bl,ah
  41866a:	inc    DWORD PTR [eax]
  41866c:	test   esp,ecx
  41866e:	sub    eax,0xff00ffcc
  418673:	mov    al,ds:0x9cff798e
  418678:	add    bh,bh
  41867a:	mov    DWORD PTR [eax],eax
  41867c:	sub    BYTE PTR [ebp-0x7c0006],cl
  418682:	(bad)  
  418683:	mov    ebx,0x71ff7c12
  418688:	add    BYTE PTR [edx+0x0],bl
  41868b:	call   FWORD PTR [esi-0x2a]
  41868e:	xchg   ebx,eax
  41868f:	add    bh,bh
  418691:	mov    DWORD PTR [eax],eax
  418693:	mov    dl,0xd4
  418695:	xor    bh,bh
  418697:	add    bh,bh
  418699:	mov    dl,0xff
  41869b:	add    BYTE PTR [edi-0x22],al
  41869e:	inc    edi
  41869f:	inc    DWORD PTR [eax]
  4186a1:	(bad)  
  4186a2:	inc    DWORD PTR [ebx-0x75fff450]
  4186a8:	call   DWORD PTR [edx-0x1]
  4186ab:	add    BYTE PTR [edi],dl
  4186ad:	push   ecx
  4186ae:	inc    DWORD PTR fs:[eax]
  4186b1:	add    BYTE PTR [eax],al
  4186b3:	lods   al,BYTE PTR ds:[esi]
  4186b4:	je     0x4186b2
  4186b6:	push   DWORD PTR [edi-0x1]
  4186b9:	jns    0x1e9b2ebe
  4186bf:	add    DWORD PTR [eax],0xffffffcc
  4186c2:	call   FWORD PTR [ecx]
  4186c4:	pop    es
  4186c5:	add    bh,bh
  4186c7:	dec    edi
  4186c8:	add    BYTE PTR [ecx-0x37480000],ah
  4186ce:	inc    edx
  4186cf:	dec    DWORD PTR [ecx+0x764e0083]
  4186d5:	stos   BYTE PTR es:[edi],al
  4186d6:	jmp    FWORD PTR [eax]
  4186d8:	add    DWORD PTR [edi-0x1],0xffffffff
  4186dc:	js     0x41869f
  4186de:	test   bh,bh
  4186e0:	add    bh,bh
  4186e2:	call   FWORD PTR ds:0x4a005aaa
  4186e8:	adc    DWORD PTR [ebp+0x2409ff83],0x49
  4186ef:	inc    DWORD PTR [eax]
  4186f1:	add    DWORD PTR [eax],0xfffffff5
  4186f4:	je     0x418744
  4186f6:	add    ch,dl
  4186f8:	cmp    DWORD PTR [edx],0xffffffff
  4186fb:	add    BYTE PTR [edx],dh
  4186fd:	xlat   BYTE PTR ds:[ebx]
  4186fe:	mov    al,ds:0xffff0000
  418703:	push   ss
  418704:	lds    ecx,FWORD PTR [edi+edi*8+0x55]
  418708:	inc    DWORD PTR [eax-0x287a7c01]
  41870e:	mov    eax,ds:0x83ff0089
  418713:	addr16 cdq 
  418715:	sar    edi,cl
  418717:	mov    edi,0xff5dff
  41871c:	fist   WORD PTR [edi-0x55]
  41871f:	cmp    edi,0x0
  418722:	and    DWORD PTR [eax],0xfffffff8
  418725:	inc    eax
  418726:	add    BYTE PTR [esp+ecx*8+0x71],bl
  41872a:	int3   
  41872b:	and    DWORD PTR [ebx-0x76ffc112],0xffffffff
  418732:	jmp    FWORD PTR [ebx]
  418734:	xor    bh,ah
  418736:	jmp    DWORD PTR [ecx+ecx*4]
  418739:	in     eax,0xff
  41873b:	add    BYTE PTR [ecx],ch
  41873d:	leave  
  41873e:	inc    esp
  41873f:	inc    DWORD PTR [eax]
  418741:	int3   
  418742:	add    BYTE PTR [edx-0xbff030b],bh
  418748:	call   DWORD PTR [ebp-0x34]
  41874b:	add    BYTE PTR [esi-0x2fb1],ah
  418751:	or     DWORD PTR [ecx-0x7cd1d09b],0x1
  418758:	call   DWORD PTR [eax+0x4ebbff00]
  41875e:	jae    0x418760
  418760:	inc    DWORD PTR [eax]
  418762:	(bad)  
  418763:	jle    0x418795
  418765:	push   ss
  418766:	call   ebx
  418768:	call   FWORD PTR [ecx]
  41876a:	or     esp,0xffffffdf
  41876d:	in     eax,0x8b
  41876f:	add    BYTE PTR [eax],al
  418771:	add    BYTE PTR [eax],al
  418773:	hlt    
  418774:	cld    
  418775:	fcos   
  418777:	fcos   
  418779:	clc    
  41877a:	add    BYTE PTR [eax],al
  41877c:	pop    esi
  41877d:	add    ecx,DWORD PTR [eax]
  41877f:	or     esp,0xffffffff
  418782:	inc    DWORD PTR [esi]
  418784:	and    DWORD PTR [esi],edx
  418786:	add    BYTE PTR [esi-0x331d00],bl
  41878c:	pop    ss
  41878d:	mov    al,0xf1
  41878f:	inc    DWORD PTR [eax]
  418791:	mov    DWORD PTR [eax],eax
  418793:	mov    BYTE PTR [edi-0x35],cl
  418796:	add    BYTE PTR [ecx],bh
  418798:	mov    DWORD PTR [ecx],eax
  41879a:	cmp    edi,0x6a
  41879d:	or     DWORD PTR [edi+edi*8-0x3500ff01],esi
  4187a4:	mov    esi,0xb383d2
  4187a9:	stc    
  4187aa:	dec    esp
  4187ac:	pop    ebx
  4187ad:	lods   eax,DWORD PTR ds:[esi]
  4187ae:	jl     0x4187b0
  4187b0:	(bad)  
  4187b1:	(bad)  
  4187b2:	jmp    FWORD PTR [esi+0xff1fcd]
  4187b8:	cmp    DWORD PTR [eax+eax*1+0x33080f00],0xffffff83
  4187c0:	add    bh,bh
  4187c2:	jmp    DWORD PTR [ecx-0x23]
  4187c5:	stos   BYTE PTR es:[edi],al
  4187c6:	add    BYTE PTR [edx-0x7d],ch
  4187c9:	mov    ds:0xc778ffff,eax
  4187ce:	dec    eax
  4187cf:	inc    DWORD PTR [ebx+0x60c48383]
  4187d5:	or     eax,0x77ffcb83
  4187da:	inc    DWORD PTR [eax]
  4187dc:	dec    edi
  4187dd:	push   esp
  4187de:	mov    ?,edi
  4187e0:	add    BYTE PTR [eax],al
  4187e2:	sub    edx,0x67
  4187e5:	mov    ecx,0x8bff1200
  4187ea:	add    bh,bh
  4187ec:	pop    ss
  4187ed:	repnz mov bh,bh
  4187f0:	inc    DWORD PTR [eax]
  4187f2:	add    BYTE PTR ds:0xeb004985,cl
  4187f8:	add    BYTE PTR [edi],ah
  4187fa:	(bad)  
  4187fb:	inc    esi
  4187fd:	mov    al,ds:0xffcc00de
  418802:	int3   
  418803:	sbb    edi,DWORD PTR [edi]
  418805:	repz int3 
  418807:	push   ebp
  418808:	push   DWORD PTR [edi-0x1]
  41880b:	adc    DWORD PTR [ebx-0xe6de],0xffffffff
  418812:	(bad)  
  418813:	cli    
  418814:	test   eax,0x6bff9c
  418819:	lahf   
  41881a:	add    bh,bh
  41881c:	and    cl,BYTE PTR [esp+esi*4-0x7d]
  418820:	int3   
  418821:	add    BYTE PTR [eax],al
  418823:	push   ebp
  418824:	sbb    ebx,0x0
  418827:	push   ss
  418828:	dec    edx
  41882a:	dec    esp
  41882c:	sub    al,0x42
  41882e:	mov    BYTE PTR [ebx-0x2bff7d00],0xd
  418835:	cmp    eax,DWORD PTR [eax]
  418837:	aam    0x0
  418839:	mov    bl,0x0
  41883b:	jmp    FWORD PTR [edi-0x7600683e]
  418841:	(bad)  
  418842:	dec    DWORD PTR [ecx+0x52000c41]
  418848:	jmp    FWORD PTR [edx+0x579effff]
  41884e:	mov    dl,0x0
  418850:	inc    DWORD PTR [eax]
  418852:	(bad)  
  418853:	fst    DWORD PTR [ecx+0x7a]
  418856:	int3   
  418857:	mov    DWORD PTR [ebx-0x20ffffc7],0x8337b5
  418861:	add    BYTE PTR [eax],al
  418863:	add    bl,dl
  418865:	adc    al,0x0
  418867:	rol    DWORD PTR [ebx+0x6000ffaa],cl
  41886d:	loop   0x418875
  41886f:	int3   
  418870:	add    bh,bh
  418872:	int3   
  418873:	push   esp
  418874:	inc    eax
  418875:	sbb    eax,DWORD PTR [eax]
  418877:	mov    es,WORD PTR [ebx-0x67007ccb]
  41887d:	aam    0xde
  41887f:	add    BYTE PTR [ebx-0x7c8d0001],al
  418885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418886:	add    BYTE PTR [ebp-0xffb134],ch
  41888c:	into   
  41888d:	loopne 0x41884a
  41888f:	inc    DWORD PTR [eax]
  418891:	add    BYTE PTR [ebx-0x76eca79e],al
  418897:	mov    dl,0xff
  418899:	xor    cl,BYTE PTR [ecx+0x60ebcdff]
  41889f:	add    BYTE PTR [eax],al
  4188a1:	add    BYTE PTR [eax],al
  4188a3:	dec    ebp
  4188a4:	pop    edi
  4188a5:	jg     0x4188a6
  4188a7:	jle    0x418875
  4188a9:	xlat   BYTE PTR ds:[ebx]
  4188aa:	add    DWORD PTR [ebx-0x79d1c6],0xffffffff
  4188b1:	add    DWORD PTR [eax],0x36
  4188b4:	mov    ebx,0x83ce83c6
  4188b9:	lea    eax,[eax]
  4188bb:	add    bh,bl
  4188bd:	enter  0xff89,0xff
  4188c1:	int3   
  4188c2:	sbb    DWORD PTR [ebx+0x7cff2fb0],0xffffffff
  4188c9:	cmp    eax,0x49a38383
  4188ce:	sub    eax,0xcc0000
  4188d3:	mov    ebp,DWORD PTR [ecx-0x6d00ac]
  4188d9:	push   eax
  4188da:	int3   
  4188db:	jmp    DWORD PTR [eax+ebp*1-0x76ffd5]
  4188e2:	jmp    edi
  4188e4:	rol    DWORD PTR [ebp+0x48ff1500],cl
  4188ea:	add    bh,bh
  4188ec:	mov    dh,0xf0
  4188ee:	xchg   ebp,eax
  4188ef:	add    BYTE PTR [eax],al
  4188f1:	add    ah,cl
  4188f3:	ret    
  4188f4:	inc    esp
  4188f5:	int    0xff
  4188f7:	pop    edi
  4188f8:	(bad)  
  4188f9:	cmp    BYTE PTR [eax],al
  4188fb:	inc    DWORD PTR [eax+0x28]
  4188fe:	fild   WORD PTR [eax]
  418900:	add    bh,bh
  418902:	mov    esi,esp
  418904:	pop    edx
  418905:	icebp  
  418906:	add    BYTE PTR [eax+eax*1-0x15ff0067],dl
  41890d:	push   cs
  41890e:	or     al,0xff
  418910:	(bad)  
  418911:	inc    DWORD PTR [eax]
  418913:	sahf   
  418914:	shr    ah,0x83
  418917:	inc    eax
  418918:	dec    esi
  41891a:	add    BYTE PTR [eax],al
  41891c:	inc    edi
  41891d:	gs add bh,bh
  418920:	mov    esp,ecx
  418922:	sbb    DWORD PTR [ebp+edi*8-0x403301],0x14
  41892a:	or     esp,0xffffffb4
  41892d:	mov    ds:0xffff4a,al
  418932:	add    DWORD PTR [ebp-0x3f],0xffffffc5
  418936:	add    ch,bl
  418938:	sub    DWORD PTR [ebp-0xa6a007d],0xffffffd7
  41893f:	inc    DWORD PTR [ebx-0x6b540001]
  418945:	xchg   ebp,eax
  418946:	push   ebp
  418948:	add    bh,cl
  41894a:	int3   
  41894b:	push   DWORD PTR [esi+edi*2]
  41894e:	je     0x41894f
  418950:	or     esp,0xffffffff
  418953:	or     BYTE PTR [esi-0x766a7c95],dl
  418959:	and    al,BYTE PTR [eax]
  41895b:	inc    DWORD PTR [esi-0x48]
  41895e:	pop    eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    DWORD PTR [eax]
  418963:	cmc    
  418964:	jp     0x4188e8
  418966:	sbb    DWORD PTR [edi-0xffef01],0xffffff9d
  41896d:	js     0x41893e
  41896f:	inc    DWORD PTR [eax]
  418971:	(bad)  
  418972:	jmp    DWORD PTR [eax-0x71ffb4e1]
  418978:	int3   
  418979:	and    DWORD PTR [ecx+0x4669c1ff],ecx
  41897f:	add    BYTE PTR [eax],al
  418981:	inc    DWORD PTR [ebx+0x8244a9]
  418987:	xchg   ebx,eax
  418988:	(bad)  
  418989:	cmp    eax,DWORD PTR [eax]
  41898b:	inc    DWORD PTR [esi]
  41898d:	inc    ebp
  41898e:	inc    esp
  41898f:	inc    DWORD PTR [ebx-0x25d60001]
  418995:	xchg   ebp,eax
  418996:	(bad)  
  418997:	jns    0x418999
  418999:	sbb    edi,edi
  41899b:	push   ebx
  41899d:	int3   
  41899e:	stos   BYTE PTR es:[edi],al
  41899f:	(bad)  
  4189a0:	dec    DWORD PTR [ecx+0x44465989]
  4189a6:	add    cl,ah
  4189a8:	sub    DWORD PTR [ecx],0x0
  4189ab:	jmp    FWORD PTR [ecx]
  4189ad:	stos   BYTE PTR es:[edi],al
  4189ae:	push   edi
  4189af:	add    ah,cl
  4189b1:	inc    DWORD PTR [ebx-0x33d28bf0]
  4189b7:	sti    
  4189b8:	jmp    DWORD PTR [esi-0x1]
  4189bb:	call   DWORD PTR [esi+eax*2+0xcc00d7]
  4189c2:	add    DWORD PTR [edi],0xffffff93
  4189c5:	ins    DWORD PTR es:[edi],dx
  4189c6:	call   FWORD PTR [edx+0x0]
  4189c9:	pop    ecx
  4189ca:	add    bh,bh
  4189cc:	clc    
  4189cd:	pusha  
  4189ce:	jmp    0x6710:0xffffccff
  4189d5:	sbb    ecx,esp
  4189d7:	jns    0x4189d9
  4189d9:	or     al,BYTE PTR [ebx-0x79e0367d]
  4189df:	add    BYTE PTR [eax],al
  4189e1:	int3   
  4189e2:	int3   
  4189e3:	mov    ebp,0xf0891d28
  4189e8:	push   DWORD PTR [eax-0x1]
  4189eb:	int3   
  4189ec:	xchg   ebp,eax
  4189ed:	cs or  ah,cl
  4189f0:	cmp    edi,0xffffffff
  4189f3:	lods   eax,DWORD PTR ds:[esi]
  4189f4:	aam    0x31
  4189f6:	add    cl,bh
  4189f8:	call   eax
  4189fa:	inc    DWORD PTR [eax]
  4189fc:	push   es
  4189fd:	sub    BYTE PTR [ecx],bl
  4189ff:	int3   
  418a00:	(bad)  
  418a01:	inc    DWORD PTR [eax]
  418a03:	cwde   
  418a04:	ror    DWORD PTR [edi+edi*8-0x37],cl
  418a08:	cmp    DWORD PTR [esi],0x0
  418a0b:	push   DWORD PTR [ebx+0x24]
  418a0e:	repnz add ah,cl
  418a11:	inc    DWORD PTR [eax]
  418a13:	stc    
  418a14:	inc    esp
  418a15:	or     al,BYTE PTR [eax]
  418a17:	xchg   ebp,eax
  418a18:	(bad)  
  418a19:	cmp    al,BYTE PTR [eax]
  418a1b:	call   esi
  418a1d:	xchg   esp,eax
  418a1e:	jbe    0x418a1f
  418a20:	inc    DWORD PTR [ebx-0x58a28300]
  418a26:	(bad)  
  418a27:	jmp    0x418a29
  418a29:	(bad)  
  418a2a:	(bad)  
  418a2b:	dec    edi
  418a2d:	repnz cmp edi,0xffffffff
  418a31:	add    BYTE PTR [ecx+0xbd9e00],cl
  418a37:	stos   BYTE PTR es:[edi],al
  418a38:	call   FWORD PTR [eax+0x5e5aff00]
  418a3e:	jmp    0xf0b3:0xffff00
  418a45:	(bad)  
  418a46:	call   ecx
  418a48:	inc    DWORD PTR [ecx-0x7d]
  418a4b:	mov    DWORD PTR [ecx+esi*2+0x30],ebx
  418a4f:	add    bh,bh
  418a51:	add    BYTE PTR [eax],al
  418a53:	mov    cl,0x52
  418a55:	(bad)  
  418a57:	inc    esi
  418a58:	xor    DWORD PTR ds:0xc465ffff,0x5c
  418a5f:	(bad)  
  418a60:	inc    DWORD PTR [ebx+0x11e751ff]
  418a66:	mov    DWORD PTR [edx-0x34],ebx
  418a69:	and    DWORD PTR [eax],eax
  418a6b:	mov    DWORD PTR [eax],esp
  418a6d:	and    eax,0x89cc835e
  418a72:	add    BYTE PTR [ebx+0x18],dh
  418a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a76:	jmp    FWORD PTR [ecx]
  418a78:	dec    ecx
  418a7a:	add    BYTE PTR [eax],al
  418a7c:	pop    ebp
  418a7d:	test   al,0x6a
  418a7f:	int3   
  418a80:	inc    DWORD PTR [eax]
  418a82:	jmp    FWORD PTR [ebp-0x69]
  418a85:	adc    eax,0x4fffb289
  418a8a:	add    DWORD PTR [ebx-0x336b2826],0xffffffff
  418a91:	(bad)  
  418a92:	inc    DWORD PTR [esp+0x9a89f5]
  418a99:	repnz cmp edi,0x31
  418a9d:	xor    DWORD PTR [eax-0x1],ebx
  418aa0:	add    BYTE PTR [eax],al
  418aa2:	add    BYTE PTR [edx],cl
  418aa4:	pop    ebp
  418aa5:	js     0x418aa6
  418aa7:	adc    eax,0x83adcc
  418aac:	mov    esp,DWORD PTR [edx-0x6f]
  418aaf:	cmp    edi,0x0
  418ab2:	sub    DWORD PTR [ecx+0x5b007608],0x0
  418ab9:	cdq    
  418aba:	inc    DWORD PTR [eax]
  418abc:	cdq    
  418abd:	jge    0x418af6
  418abf:	inc    DWORD PTR [eax]
  418ac1:	add    BYTE PTR [eax],al
  418ac3:	and    al,0x30
  418ac5:	ret    
  418ac6:	add    BYTE PTR [edx],al
  418ac8:	add    BYTE PTR [ebp+0x1669ffff],dh
  418ace:	lods   al,BYTE PTR ds:[esi]
  418acf:	add    bh,bh
  418ad1:	cmp    edi,0xffffff86
  418ad4:	scas   eax,DWORD PTR es:[edi]
  418ad5:	ins    BYTE PTR es:[edi],dx
  418ad6:	(bad)  
  418ad7:	mov    ebp,0x89ff0783
  418adc:	adc    BYTE PTR ds:0x8383cc17,0x83
  418ae3:	out    dx,al
  418ae4:	popa   
  418ae5:	mov    al,0x0
  418ae7:	push   edx
  418ae8:	add    al,dh
  418aea:	add    bh,bh
  418aec:	pop    edx
  418aed:	xor    ebp,ecx
  418aef:	(bad)  
  418af0:	(bad)  
  418af1:	(bad)  
  418af2:	push   DWORD PTR [edi-0x11]
  418af5:	cs int3 
  418af7:	js     0x418af8
  418af9:	outs   dx,BYTE PTR ds:[esi]
  418afa:	add    BYTE PTR [eax],al
  418afc:	int3   
  418afd:	sub    ebx,edx
  418aff:	cmp    edi,0x0
  418b02:	add    BYTE PTR [ecx-0x2a767100],bl
  418b08:	add    BYTE PTR [ebx+0x0],al
  418b0b:	add    BYTE PTR [edi+0x895a00],bl
  418b11:	add    bh,bh
  418b13:	push   0x1f83098e
  418b18:	call   DWORD PTR [eax-0x1]
  418b1b:	mov    DWORD PTR [edx],esp
  418b1d:	sbb    al,0xac
  418b1f:	mov    DWORD PTR [ebx-0x48707c77],eax
  418b25:	push   edi
  418b26:	inc    DWORD PTR [ecx-0x1]
  418b29:	and    al,BYTE PTR [eax]
  418b2b:	add    BYTE PTR ds:0xff154c,bl
  418b31:	int3   
  418b32:	or     ebx,0xffffffb4
  418b35:	in     al,dx
  418b36:	add    BYTE PTR [esi+0x0],bh
  418b39:	call   0xff62:0x7192ffff
  418b40:	(bad)  
  418b41:	inc    DWORD PTR [ebx-0x10fb9c]
  418b47:	loope  0x418b49
  418b49:	pop    es
  418b4a:	int3   
  418b4b:	add    ah,bl
  418b4d:	fisub  DWORD PTR [edx-0xff0100]
  418b53:	retf   
  418b54:	arpl   WORD PTR [edx+0x0],cx
  418b57:	sub    edi,edi
  418b59:	jp     0x418b5a
  418b5b:	push   DWORD PTR [ebp+0x45]
  418b5e:	add    edi,edi
  418b60:	add    BYTE PTR [ebx+0x64c03900],al
  418b66:	(bad)  
  418b67:	mov    esp,0xff1200
  418b6c:	loop   0x418bb7
  418b6e:	jge    0x418af9
  418b70:	add    bh,bh
  418b72:	push   DWORD PTR [esi+eiz*1-0x77]
  418b76:	add    BYTE PTR [esi-0x34],dh
  418b79:	inc    ebx
  418b7a:	(bad)  
  418b7b:	inc    ebx
  418b7d:	icebp  
  418b7e:	xor    bh,bh
  418b80:	add    BYTE PTR [ecx+0x4fb20ff],cl
  418b86:	(bad)  
  418b87:	(bad)  
  418b89:	dec    edi
  418b8a:	mov    DWORD PTR [eax],eax
  418b8c:	leave  
  418b8d:	push   ecx
  418b8e:	pop    esi
  418b8f:	add    BYTE PTR [ecx-0x353fff01],cl
  418b95:	fadd   DWORD PTR [ebx+0x8cfff0]
  418b9b:	int3   
  418b9c:	xchg   BYTE PTR [esi-0x74],al
  418b9f:	dec    DWORD PTR [ecx+0x36c7ffff]
  418ba5:	fld    QWORD PTR [eax]
  418ba7:	test   al,0xff
  418ba9:	clc    
  418baa:	inc    DWORD PTR [eax]
  418bac:	cmp    dl,cl
  418bae:	xchg   bh,bh
  418bb0:	add    ah,cl
  418bb2:	add    bl,al
  418bb4:	or     ecx,eax
  418bb6:	push   edx
  418bb8:	add    ebp,0x0
  418bbb:	(bad)  
  418bbc:	jmp    0x418bfc
  418bbe:	or     BYTE PTR [eax],al
  418bc0:	cmp    edi,0xffffffff
  418bc3:	out    0x5f,al
  418bc5:	cmp    cl,ah
  418bc7:	das    
  418bc8:	jmp    edi
  418bca:	add    DWORD PTR [eax],0xfffffff4
  418bcd:	xor    ebx,ecx
  418bcf:	int3   
  418bd0:	inc    DWORD PTR [eax]
  418bd2:	sbb    DWORD PTR [ebx-0x3e0060f4],0x0
  418bd9:	mov    eax,DWORD PTR [eax]
  418bdb:	call   DWORD PTR [ecx-0x59]
  418bde:	lahf   
  418bdf:	add    BYTE PTR [eax],al
  418be1:	cmp    edi,0x4b
  418be4:	data16 out dx,al
  418be6:	(bad)  
  418be7:	jge    0x418be9
  418be9:	stc    
  418bea:	(bad)  
  418beb:	jmp    FWORD PTR [ebx-0x7c0093d6]
  418bf1:	mov    DWORD PTR [ecx-0x8d95b5],ecx
  418bf7:	jne    0x418bf9
  418bf9:	inc    DWORD PTR [eax]
  418bfb:	mov    DWORD PTR [ecx-0x7c005a65],eax
  418c01:	int3   
  418c02:	jmp    DWORD PTR [eax]
  418c04:	pop    edx
  418c05:	and    edi,edi
  418c07:	ins    DWORD PTR es:[edi],dx
  418c08:	jmp    DWORD PTR [eax]
  418c0a:	inc    DWORD PTR [eax]
  418c0c:	mov    ebx,0xccff25a2
  418c11:	add    ah,cl
  418c13:	scas   al,BYTE PTR es:[edi]
  418c14:	in     eax,dx
  418c15:	test   eax,0xb2000b00
  418c1a:	(bad)  
  418c1b:	dec    DWORD PTR [ecx-0xffbdbc]
  418c21:	inc    DWORD PTR [ebx+0xbc5282]
  418c27:	sbb    bh,bh
  418c29:	(bad)  
  418c2a:	int3   
  418c2b:	call   FWORD PTR [eax+0xff446a]
  418c31:	add    BYTE PTR [ebx-0x7cb3adb3],al
  418c37:	jmp    0x40c2c5
  418c3c:	in     eax,0xc9
  418c3e:	lods   eax,DWORD PTR ds:[esi]
  418c3f:	inc    DWORD PTR [eax]
  418c41:	add    BYTE PTR [eax],al
  418c43:	and    ebp,DWORD PTR [edi+0x5983db]
  418c49:	mov    bl,0x83
  418c4b:	push   DWORD PTR [edx]
  418c4d:	xor    bh,BYTE PTR [ecx-0x3300ff01]
  418c53:	jnp    0x418c81
  418c55:	loop   0x418c56
  418c57:	call   0x8a44:0xffcc6f83
  418c5e:	fld    DWORD PTR [eax]
  418c60:	cmp    edi,0xffffffff
  418c63:	nop
  418c64:	pop    esi
  418c65:	push   ebx
  418c66:	inc    DWORD PTR [eax+0x0]
  418c69:	inc    ebp
  418c6a:	cmp    edi,0x6a
  418c6d:	imul   DWORD PTR [eax-0x1]
  418c73:	inc    esi
  418c74:	cli    
  418c75:	push   esi
  418c76:	add    BYTE PTR [eax+eax*1],bl
  418c79:	ret    0xffcc
  418c7c:	jo     0x418cda
  418c7e:	or     bh,bh
  418c80:	add    BYTE PTR [eax],al
  418c82:	add    BYTE PTR [ecx-0x13005a53],dh
  418c88:	add    BYTE PTR [esi+0x0],dl
  418c8b:	jmp    DWORD PTR [ebp+ecx*4-0x3c]
  418c92:	sub    edi,0x6b
  418c95:	les    eax,FWORD PTR [ebx-0x7c7400b5]
  418c9b:	sbb    DWORD PTR [ebp+0x83aa96],0x0
  418ca2:	push   ebx
  418ca4:	ret    
  418ca5:	inc    edx
  418ca6:	inc    esi
  418ca8:	call   FWORD PTR [eax]
  418caa:	int3   
  418cab:	cmp    DWORD PTR [edi+ecx*2-0x65],0x0
  418cb0:	add    ah,cl
  418cb2:	call   DWORD PTR [eax-0x7b]
  418cb5:	mov    ?,edi
  418cb7:	pop    ebp
  418cb8:	mov    DWORD PTR [eax+eax*1],edi
  418cbb:	(bad)  
  418cbc:	clc    
  418cbd:	aad    0x62
  418cbf:	inc    DWORD PTR [eax]
  418cc1:	cmp    edi,0x35
  418cc4:	scas   al,BYTE PTR es:[edi]
  418cc5:	jmp    0xffff:0x45834f00
  418ccc:	push   0xff7d7d
  418cd1:	mov    edi,edi
  418cd3:	inc    eax
  418cd4:	lea    esp,[eax-0x34]
  418cd7:	enter  0xd900,0xff
  418cdb:	add    BYTE PTR [esi+ebp*4],dl
  418cde:	pop    ecx
  418cdf:	(bad)  
  418ce0:	inc    DWORD PTR [ebx+0x622d8dff]
  418ce6:	add    BYTE PTR [esp+ecx*8+0x3d],bl
  418cea:	dec    DWORD PTR [ecx-0xd618af]
  418cf0:	add    DWORD PTR [eax],0x0
  418cf3:	rcr    BYTE PTR [edx],1
  418cf5:	mov    DWORD PTR [ebx-0x19ffd2],eax
  418cfb:	jmp    DWORD PTR [edi-0x7c00918a]
  418d01:	inc    DWORD PTR [eax]
  418d03:	cs sbb al,0x7c
  418d06:	add    BYTE PTR [ebx+0x0],ah
  418d09:	cmp    DWORD PTR [eax],eax
  418d0b:	add    BYTE PTR [eax],ch
  418d0d:	or     DWORD PTR [ebp-0x3301],ebp
  418d13:	gs push ss
  418d15:	out    0xff,eax
  418d17:	dec    ecx
  418d18:	add    BYTE PTR [ebx+0x0],dh
  418d1b:	add    bh,ch
  418d1d:	jmp    0x418d90
  418d1f:	add    DWORD PTR [eax],0xffffffff
  418d22:	dec    DWORD PTR [edx]
  418d24:	add    edi,esp
  418d26:	push   DWORD PTR [edx]
  418d28:	call   edi
  418d2a:	dec    DWORD PTR [ecx-0x7c6a4700]
  418d30:	int3   
  418d31:	inc    DWORD PTR [eax]
  418d33:	loop   0x418d3c
  418d35:	lods   eax,DWORD PTR ds:[esi]
  418d36:	add    BYTE PTR [ebx+0x0],al
  418d39:	or     edi,edi
  418d3b:	add    dl,dl
  418d3d:	sub    al,al
  418d3f:	add    DWORD PTR [eax],0xffffff83
  418d42:	inc    ecx
  418d44:	rcl    BYTE PTR [ebx-0x58007f01],cl
  418d4a:	(bad)  
  418d4b:	(bad)  
  418d4c:	mov    eax,0xff00a582
  418d51:	add    BYTE PTR [eax],al
  418d53:	mov    ah,bh
  418d55:	jmp    0xffff:0x820046ff
  418d5c:	inc    edx
  418d5d:	mov    eax,0xffff0097
  418d62:	add    BYTE PTR [ebx+0x2ff0314],dh
  418d68:	int3   
  418d69:	ss (bad) 
  418d6b:	call   FWORD PTR [ebx]
  418d6d:	push   ebx
  418d6e:	retf   
  418d6f:	cmp    edi,0xffffff83
  418d72:	adc    DWORD PTR [edi+ebx*4],0x37
  418d76:	inc    ecx
  418d78:	jmp    edi
  418d7a:	mov    DWORD PTR [ecx+0x95c888],ecx
  418d80:	inc    DWORD PTR [ebx-0x2a3cb401]
  418d86:	cmp    eax,0x0
  418d89:	adc    al,BYTE PTR [eax]
  418d8b:	jmp    DWORD PTR [eax]
  418d8d:	jmp    edx
  418d8f:	(bad)  
  418d90:	(bad)  
  418d91:	inc    DWORD PTR [ebx+0xdb9efb]
  418d97:	pusha  
  418d98:	add    bh,al
  418d9a:	cmp    edi,0xb
  418d9d:	int    0x89
  418d9f:	(bad)  
  418da0:	inc    DWORD PTR [ebx-0x3c5b5c77]
  418da6:	or     DWORD PTR [edx],0x0
  418da9:	idiv   bh
  418dab:	jmp    DWORD PTR [ebp+0xbb9c]
  418db1:	add    DWORD PTR [eax],0xffffff9c
  418db4:	mov    edx,0x83f900d8
  418db9:	xor    bh,bh
  418dbb:	inc    DWORD PTR [ecx-0x57]
  418dbe:	out    dx,al
  418dbf:	add    bh,bh
  418dc1:	dec    esp
  418dc3:	mov    al,0x9c
  418dc5:	jg     0x418dc6
  418dc7:	aaa    
  418dc8:	(bad)  
  418dc9:	jle    0x418dca
  418dcb:	and    DWORD PTR [edi-0xffaa28],0x0
  418dd2:	mov    DWORD PTR [ebp-0x240071fa],ecx
  418dd8:	call   ebx
  418dda:	(bad)  
  418ddb:	inc    esp
  418ddd:	dec    esi
  418dde:	pop    es
  418ddf:	add    DWORD PTR [ebx-0x35150034],0xffffff8b
  418de6:	or     ebx,0xffffffff
  418de9:	and    BYTE PTR [ebx-0x32111b01],al
  418def:	mov    edi,edi
  418df1:	mov    edi,edi
  418df3:	dec    edx
  418df4:	ror    BYTE PTR [esi+0x2cffbaff],0x83
  418dfb:	xor    DWORD PTR [ecx],0xffffffc8
  418dfe:	mov    eax,ds:0x83008300
  418e03:	xchg   edi,eax
  418e04:	dec    edi
  418e05:	add    BYTE PTR [eax],al
  418e07:	dec    eax
  418e08:	jmp    DWORD PTR [eax+0x5860ff00]
  418e0e:	js     0x418e0f
  418e10:	add    bh,bh
  418e12:	push   DWORD PTR [ebp+0x2]
  418e15:	cmp    edi,edi
  418e17:	push   cs
  418e18:	add    BYTE PTR ds:0x2db0ffff,ch
  418e1e:	hlt    
  418e1f:	add    DWORD PTR [ebx+0x7ae2ffff],0xffffff88
  418e26:	call   DWORD PTR [edi]
  418e28:	(bad)  
  418e29:	jg     0x418e2b
  418e2b:	call   edi
  418e2d:	push   edi
  418e2e:	in     al,dx
  418e2f:	cmp    edi,0xffffffff
  418e32:	add    BYTE PTR [edi],dl
  418e34:	cld    
  418e35:	add    eax,0xe5ff4400
  418e3a:	add    BYTE PTR [eax],al
  418e3c:	ins    BYTE PTR es:[edi],dx
  418e3d:	xchg   DWORD PTR [eax+eax*1],eax
  418e40:	add    BYTE PTR [ebx-0x4edbfe00],al
  418e46:	jmp    DWORD PTR [edi]
  418e48:	(bad)  
  418e49:	cmp    edi,edi
  418e4b:	int3   
  418e4c:	mov    ah,0x21
  418e4e:	or     ah,0x0
  418e51:	int3   
  418e52:	mov    DWORD PTR [ebx],esi
  418e54:	mov    eax,ds:0xffdfff4f
  418e59:	push   0xffffffff
  418e5b:	dec    DWORD PTR [ecx-0x48]
  418e5e:	dec    esp
  418e60:	inc    DWORD PTR [eax]
  418e62:	int3   
  418e63:	pop    eax
  418e64:	sbb    DWORD PTR [edi+0x47ff5cff],edi
  418e6a:	inc    DWORD PTR [eax]
  418e6c:	mov    al,0xc9
  418e6e:	cmp    BYTE PTR [eax],al
  418e70:	(bad)  
  418e71:	inc    DWORD PTR [eax]
  418e73:	(bad)  
  418e74:	jnp    0x418eef
  418e76:	call   ecx
  418e78:	call   DWORD PTR [eax+0x5301ffff]
  418e7e:	inc    esi
  418e7f:	add    BYTE PTR [ebx-0x5ffa3301],al
  418e85:	stos   BYTE PTR es:[edi],al
  418e86:	sub    DWORD PTR [edx-0x34],0xffffffe0
  418e8a:	(bad)  
  418e8b:	call   FWORD PTR [ebx+ebp*2+0x0]
  418e8f:	(bad)  
  418e90:	inc    DWORD PTR [eax]
  418e92:	add    BYTE PTR [ebx+0x4900fc18],al
  418e98:	push   edi
  418e9a:	inc    DWORD PTR [eax]
  418e9c:	test   BYTE PTR [eax],bh
  418e9e:	mov    es,WORD PTR [ebx-0xaff0100]
  418ea4:	test   BYTE PTR [ecx-0x1],bh
  418ea7:	mov    ds:0xffff38cc,eax
  418eac:	sbb    eax,0x83ff37b9
  418eb1:	add    bh,bh
  418eb3:	push   esp
  418eb4:	(bad)  
  418eb5:	in     al,0x83
  418eb7:	loope  0x418e85
  418eb9:	inc    ecx
  418eba:	dec    DWORD PTR [ecx-0x33dceb6f]
  418ec0:	int3   
  418ec1:	mov    DWORD PTR [eax],eax
  418ec3:	out    0x4d,eax
  418ec5:	xchg   esp,eax
  418ec6:	and    DWORD PTR [edi],0xffffff89
  418ec9:	stos   BYTE PTR es:[edi],al
  418eca:	add    BYTE PTR [eax],al
  418ecc:	xor    al,BYTE PTR [esi+esi*4]
  418ecf:	(bad)  
  418ed0:	(bad)  
  418ed1:	(bad)  
  418ed2:	dec    DWORD PTR [ebp+0x6a83030b]
  418ed8:	inc    DWORD PTR [ecx+0x0]
  418edb:	add    BYTE PTR [edi],cl
  418edd:	data16 das 
  418edf:	add    bh,bh
  418ee1:	add    BYTE PTR [eax],al
  418ee3:	out    dx,al
  418ee4:	fbstp  TBYTE PTR [ebx]
  418ee6:	add    al,ch
  418ee8:	push   ebx
  418eea:	(bad)  
  418eeb:	inc    DWORD PTR [ecx+0x79]
  418eee:	adc    eax,DWORD PTR [eax]
  418ef0:	add    BYTE PTR [eax],al
  418ef2:	jmp    FWORD PTR [edx+0x36005686]
  418ef8:	and    DWORD PTR [eax+0x0],0xffffffff
  418efc:	in     al,dx
  418efd:	push   esi
  418efe:	mov    eax,0xff00ff00
  418f03:	icebp  
  418f04:	pop    ecx
  418f05:	sbb    eax,DWORD PTR [eax]
  418f07:	add    eax,0xccff5900
  418f0c:	sbb    BYTE PTR [ebx-0x7c00ffc2],dl
  418f12:	add    DWORD PTR [edi+0x5c],0x66
  418f16:	or     DWORD PTR ds:0xfff3ff,0xffffffba
  418f1d:	or     ah,ah
  418f1f:	add    BYTE PTR [eax],al
  418f21:	int3   
  418f22:	sbb    DWORD PTR [edi-0x6e],0xffffffb8
  418f26:	add    dh,bh
  418f28:	sub    DWORD PTR [edi-0x1],0x0
  418f2c:	sbb    bl,BYTE PTR [ebx-0x5d]
  418f2f:	(bad)  
  418f30:	(bad)  
  418f31:	inc    DWORD PTR [eax]
  418f33:	dec    ecx
  418f34:	scas   al,BYTE PTR es:[edi]
  418f35:	sub    BYTE PTR [ebx-0x63337d],al
  418f3b:	add    BYTE PTR [edi-0x79],ch
  418f3e:	sar    bh,cl
  418f40:	(bad)  
  418f41:	(bad)  
  418f42:	inc    DWORD PTR [ebx-0x27]
  418f45:	adc    DWORD PTR [eax],eax
  418f47:	inc    edx
  418f48:	add    BYTE PTR [ebx],al
  418f4a:	inc    DWORD PTR [eax]
  418f4c:	ins    DWORD PTR es:[edi],dx
  418f4d:	enter  0x83f3,0x0
  418f51:	add    bh,bh
  418f53:	cld    
  418f54:	out    0x4e,eax
  418f56:	(bad)  
  418f57:	cmp    bh,bh
  418f59:	pop    es
  418f5a:	inc    DWORD PTR [eax]
  418f5c:	xchg   DWORD PTR ds:[edx],esp
  418f5f:	int3   
  418f60:	inc    DWORD PTR [eax]
  418f62:	add    dl,bl
  418f64:	retf   0x17
  418f67:	ss add esi,0xffffffff
  418f6b:	sbb    DWORD PTR [ecx+esi*1],0xffffffad
  418f6f:	int3   
  418f70:	add    bh,bh
  418f72:	add    BYTE PTR [esi+eiz*2-0x3],ch
  418f76:	add    BYTE PTR [edx+0x0],al
  418f79:	cmp    edi,0x0
  418f7c:	test   al,0xb3
  418f7e:	push   ss
  418f7f:	add    DWORD PTR [ebx-0x67d40001],0xffffffa3
  418f86:	add    BYTE PTR [edx-0x7d],ch
  418f89:	ret    0xff00
  418f8c:	das    
  418f8d:	dec    ebx
  418f8e:	(bad)  
  418f90:	add    DWORD PTR [ebx+0x5fbce7cc],0xffffff83
  418f97:	jbe    0x418f99
  418f99:	stc    
  418f9a:	add    BYTE PTR [eax],al
  418f9c:	daa    
  418f9d:	in     eax,dx
  418f9e:	ds add bh,bh
  418fa1:	add    BYTE PTR [eax],al
  418fa3:	(bad)  
  418fa4:	cwde   
  418fa5:	lahf   
  418fa6:	(bad)  
  418fa7:	(bad)  
  418fa9:	ret    
  418faa:	(bad)  
  418fab:	call   FWORD PTR [ebp-0x7cff0f77]
  418fb1:	add    bh,bh
  418fb3:	xchg   ecx,eax
  418fb4:	fs xchg esp,eax
  418fb6:	or     DWORD PTR [eax+eax*1+0x33],0xffffff89
  418fbb:	add    BYTE PTR [esi-0x7676b048],dh
  418fc1:	mov    edi,edi
  418fc3:	jne    0x419031
  418fc5:	cdq    
  418fc6:	add    BYTE PTR [eax-0x1],dh
  418fc9:	sbb    BYTE PTR [ebx-0x7238a200],al
  418fcf:	(bad)  
  418fd0:	(bad)  
  418fd1:	(bad)  
  418fd2:	(bad)  
  418fd3:	stc    
  418fd4:	lods   eax,DWORD PTR ds:[esi]
  418fd5:	adc    eax,0xbe00eb00
  418fda:	(bad)  
  418fdb:	jmp    FWORD PTR [edi]
  418fdd:	dec    eax
  418fde:	inc    esi
  418fdf:	add    BYTE PTR [eax],al
  418fe1:	add    BYTE PTR [ebx+0x1b7650],al
  418fe7:	cld    
  418fe8:	inc    eax
  418fea:	(bad)  
  418feb:	(bad)  
  418fec:	(bad)  
  418fed:	mov    al,ds:0xff00ffd5
  418ff2:	add    BYTE PTR [eax-0x47],al
  418ff5:	lods   al,BYTE PTR ds:[esi]
  418ff6:	or     DWORD PTR [ebp-0x7d],0xffffffd8
  418ffa:	dec    DWORD PTR [ecx-0x76870427]
  419000:	inc    DWORD PTR [eax]
  419002:	call   DWORD PTR [ebx-0x300f760]
  419008:	(bad)  
  419009:	jg     0x41900a
  41900b:	xor    DWORD PTR [edx+0x5d],0xfffffffd
  41900f:	(bad)  
  419010:	(bad)  
  419011:	(bad)  
  419012:	call   FWORD PTR [ebp+0x75]
  419015:	pushf  
  419016:	add    al,cl
  419018:	dec    DWORD PTR [esi-0x29370100]
  41901e:	imul   ecx,esp,0x9cffffff
  419024:	xor    esi,DWORD PTR [edi+0x0]
  419027:	pop    esp
  419028:	add    dh,bl
  41902a:	mov    DWORD PTR [ecx+0x95c7ad],ecx
  419030:	add    BYTE PTR [eax],al
  419032:	add    BYTE PTR [edi],ch
  419034:	sbb    esp,edx
  419036:	inc    DWORD PTR [edx+0x0]
  419039:	out    0x89,eax
  41903b:	int3   
  41903c:	jno    0x418fec
  41903e:	scas   eax,DWORD PTR es:[edi]
  41903f:	add    bh,bh
  419041:	inc    DWORD PTR [eax]
  419043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419044:	cmp    DWORD PTR [eax-0x1],eax
  419047:	cmp    eax,0xff007c83
  41904c:	adc    al,0x37
  41904e:	inc    esi
  41904f:	(bad)  
  419050:	inc    DWORD PTR [eax]
  419052:	add    DWORD PTR [ebp-0x7f],0x12
  419056:	sbb    DWORD PTR [ebx],0xffffffcc
  419059:	jle    0x41905a
  41905b:	dec    DWORD PTR [ecx+ebx*1-0x76ff009b]
  419062:	jmp    ebx
  419064:	js     0x419072
  419066:	dec    DWORD PTR [edi+edi*8+0x4f]
  41906a:	add    bh,bh
  41906c:	(bad)  
  41906d:	retf   
  41906e:	in     eax,dx
  41906f:	cmp    edi,0xffffffcc
  419072:	jmp    FWORD PTR [edx+ebx*4]
  419075:	mov    eax,0x6ffc800
  41907a:	dec    esp
  41907c:	cld    
  41907d:	inc    esi
  41907e:	arpl   WORD PTR [eax],ax
  419080:	(bad)  
  419081:	(bad)  
  419082:	call   DWORD PTR [ecx*4+0x5d00ec]
  419089:	pop    edi
  41908a:	add    DWORD PTR [eax],0xfffffff4
  41908d:	or     al,0xcc
  41908f:	add    BYTE PTR [eax],al
  419091:	add    DWORD PTR [eax],0x18
  419094:	push   ebp
  419095:	push   cs
  419096:	add    BYTE PTR [ebp-0xb101],dh
  41909c:	sar    DWORD PTR [eax],0x57
  41909f:	add    ah,cl
  4190a1:	inc    DWORD PTR [eax]
  4190a3:	imul   edx,DWORD PTR [eax+0x0],0xffffffff
  4190a7:	inc    ebp
  4190a8:	add    BYTE PTR [edi-0x58ef0100],ah
  4190ae:	sub    bh,bh
  4190b0:	cmp    edi,0x0
  4190b3:	jns    0x419116
  4190b5:	mov    ch,0x0
  4190b7:	dec    ebx
  4190b8:	add    BYTE PTR [ecx+0x0],dl
  4190bb:	add    BYTE PTR [ebx-0xff8013],ah
  4190c1:	(bad)  
  4190c2:	jmp    DWORD PTR [edx]
  4190c4:	mov    gs,WORD PTR [esi+0x1cff88ff]
  4190ca:	int3   
  4190cb:	mov    DWORD PTR [ecx-0xf081],edx
  4190d1:	int3   
  4190d2:	cmp    DWORD PTR [esi+0x7c],0x30
  4190d6:	add    BYTE PTR [edx-0x3c77],dh
  4190dc:	mov    ah,0xf9
  4190de:	test   bh,bh
  4190e0:	add    BYTE PTR [eax],al
  4190e2:	or     edx,0x48
  4190e5:	(bad)  
  4190e6:	inc    DWORD PTR [esp+ecx*8]
  4190e9:	xchg   bh,bh
  4190eb:	add    BYTE PTR [eax+ebx*2-0xffea],cl
  4190f2:	add    dl,bl
  4190f4:	jo     0x41914e
  4190f6:	add    BYTE PTR [ecx+ecx*4-0x3200ff2f],bl
  4190fd:	enter  0xff92,0x0
  419101:	inc    DWORD PTR [eax]
  419103:	adc    BYTE PTR [edx],bh
  419105:	jbe    0x419107
  419107:	mov    edi,?
  419109:	ja     0x41910a
  41910b:	push   DWORD PTR [edi]
  41910d:	(bad)  
  41910e:	and    al,BYTE PTR [eax]
  419110:	mov    edi,edi
  419112:	push   DWORD PTR ds:0x1400ed6d
  419118:	add    BYTE PTR [edx+0x33f900ff],ah
  41911e:	jbe    0x4190ec
  419120:	inc    DWORD PTR [eax]
  419122:	add    BYTE PTR [ecx+0x72],cl
  419125:	(bad)  
  419126:	(bad)  
  419127:	jg     0x4190f5
  419129:	or     bh,bh
  41912b:	jmp    DWORD PTR [edx-0x767c3791]
  419131:	inc    DWORD PTR [eax]
  419133:	push   ebx
  419134:	push   esi
  419135:	jp     0x419136
  419137:	jg     0x419138
  419139:	xor    eax,DWORD PTR [eax]
  41913b:	dec    DWORD PTR [ecx-0x19]
  41913e:	xor    al,0xff
  419140:	add    BYTE PTR [eax],al
  419142:	mov    DWORD PTR [ecx-0xf],edi
  419145:	lods   eax,DWORD PTR ds:[esi]
  419146:	or     DWORD PTR [edx+0x0],0x5d
  41914a:	inc    DWORD PTR [ebx+0x69c107]
  419150:	int3   
  419151:	int3   
  419152:	sub    DWORD PTR [edi+0x21ff3ea7],0x0
  419159:	dec    esp
  41915a:	add    DWORD PTR [eax],0x21
  41915d:	dec    edx
  41915e:	inc    DWORD PTR [eax]
  419160:	inc    DWORD PTR [ebx+0x6fa4f900]
  419166:	(bad)  
  419167:	fld    QWORD PTR [eax]
  419169:	mov    al,ds:0x392d89ff
  41916e:	inc    ebx
  41916f:	int3   
  419170:	add    bh,bh
  419172:	mov    eax,edx
  419174:	xchg   ebx,eax
  419175:	mov    edx,0x2d003aff
  41917a:	dec    esp
  41917c:	outs   dx,DWORD PTR gs:[esi]
  41917e:	mov    ds:0x89ff0000,al
  419183:	(bad)  
  419185:	cli    
  419186:	add    BYTE PTR [ecx],bl
  419188:	add    BYTE PTR [ebx],cl
  41918a:	add    BYTE PTR [ecx-0xf02913],cl
  419190:	add    bh,bh
  419192:	mov    ebp,ebp
  419194:	jle    0x419116
  419196:	push   DWORD PTR ds:0xfffdcc
  41919c:	fmul   DWORD PTR [esi+0x23]
  41919f:	(bad)  
  4191a0:	inc    DWORD PTR [eax]
  4191a2:	call   FWORD PTR [edx]
  4191a4:	sub    cl,BYTE PTR [ebx-0x12336401]
  4191aa:	cmp    edi,0xffffffd1
  4191ad:	cmc    
  4191ae:	add    eax,0x898300ff
  4191b3:	add    eax,0xbb83e3aa
  4191b8:	int3   
  4191b9:	inc    DWORD PTR [ebx-0x1]
  4191bf:	inc    DWORD PTR [ebx+0x3983816e]
  4191c5:	(bad)  
  4191c6:	js     0x419194
  4191c8:	int3   
  4191c9:	test   DWORD PTR [edi],esi
  4191cb:	jmp    FWORD PTR [edx-0xff3301]
  4191d1:	or     DWORD PTR [edi+edi*8],esp
  4191d4:	addr16 add dl,ch
  4191d7:	cmp    edi,0x5b
  4191da:	pop    es
  4191db:	xor    ebx,0xffffffcc
  4191de:	sar    edi,0x0
  4191e1:	xchg   ebx,eax
  4191e2:	add    eax,0x1f834083
  4191e7:	(bad)  
  4191e8:	(bad)  
  4191e9:	jl     0x419219
  4191eb:	add    BYTE PTR [eax],al
  4191ed:	(bad)  
  4191ee:	fild   WORD PTR [eax]
  4191f0:	add    BYTE PTR [eax],cl
  4191f2:	jmp    0x674278f7
  4191f7:	(bad)  
  4191f8:	inc    DWORD PTR [edi-0x33507cdc]
  4191fe:	dec    esi
  4191ff:	int3   
  419200:	mov    DWORD PTR [edx-0x71],esp
  419203:	push   DWORD PTR ds:0xff8e00
  419209:	scas   al,BYTE PTR es:[edi]
  41920a:	mov    ecx,0xc3ff7b83
  41920f:	add    BYTE PTR [eax],al
  419211:	nop
  419212:	sub    eax,0xb6ff2289
  419217:	int3   
  419218:	add    BYTE PTR [ebx+esi*2+0x30ff7b83],cl
  41921f:	add    bh,bh
  419221:	div    BYTE PTR [eax+eax*1+0xba0082]
  419228:	sbb    ecx,0x7d
  41922b:	add    BYTE PTR [eax+0xffdeff],dl
  419231:	or     eax,0xddff08
  419236:	jge    0x419238
  419238:	jmp    FWORD PTR [edx+eiz*2-0x23001601]
  41923f:	add    bh,bh
  419241:	jecxz  0x419267
  419243:	inc    ebx
  419245:	push   DWORD PTR [esi-0x19110000]
  41924b:	add    BYTE PTR [esi-0xb01],ch
  419251:	mov    edx,0xcc6a830e
  419256:	stc    
  419257:	(bad)  
  419258:	push   ebx
  41925a:	leave  
  41925b:	jmp    DWORD PTR [ebp-0x1]
  41925e:	mov    dl,0x0
  419260:	add    BYTE PTR [edi],dh
  419262:	scas   al,BYTE PTR es:[edi]
  419263:	int3   
  419264:	add    eax,0xffff7a00
  419269:	jle    0x4192c9
  41926b:	int3   
  41926c:	leave  
  41926d:	(bad)  
  41926e:	mov    ebp,0xfd1bffff
  419273:	(bad)  
  419274:	cli    
  419275:	mov    DWORD PTR [esi+0x0],ebx
  419278:	jmp    DWORD PTR [edx]
  41927a:	arpl   WORD PTR [ebx+0x3983ab],ax
  419280:	call   DWORD PTR [edx+0x23]
  419283:	(bad)  
  419284:	cli    
  419285:	mov    DWORD PTR [ecx],esi
  419287:	(bad)  
  419288:	call   FWORD PTR [edi-0x66]
  41928b:	add    BYTE PTR [eax],ah
  41928d:	push   DWORD PTR [ebp+0x0]
  419290:	(bad)  
  419291:	jmp    FWORD PTR [esi]
  419293:	(bad)  
  419294:	in     al,dx
  419295:	add    DWORD PTR [edx+0x80389cc],0x0
  41929c:	or     eax,0xff6600
  4192a1:	pop    edx
  4192a2:	and    DWORD PTR [eax],eax
  4192a4:	push   ss
  4192a5:	add    BYTE PTR [edi-0x77],dl
  4192a8:	jmp    DWORD PTR [esi]
  4192aa:	scas   eax,DWORD PTR es:[edi]
  4192ab:	add    BYTE PTR [eax-0x2e77],bh
  4192b1:	sub    DWORD PTR [edi+0x12836dcc],esi
  4192b7:	add    BYTE PTR [ebx-0x700b249],al
  4192bd:	call   DWORD PTR [eax+eax*1-0xceda34]
  4192c4:	mov    edi,edi
  4192c6:	ret    
  4192c7:	add    bh,bh
  4192c9:	repnz or bh,bh
  4192cc:	xchg   DWORD PTR [eax],eax
  4192ce:	test   eax,0xbaed0083
  4192d3:	add    BYTE PTR [esi+0xffe9cc],cl
  4192d9:	and    DWORD PTR [ebx],edi
  4192db:	inc    esp
  4192dd:	cmp    DWORD PTR [ecx+0x243ecc00],0xffffff83
  4192e4:	mov    al,BYTE PTR [eax]
  4192e6:	test   edi,edi
  4192e8:	inc    DWORD PTR [ecx-0xe17653]
  4192ee:	int3   
  4192ef:	cmp    edi,0x7b
  4192f2:	lahf   
  4192f3:	push   DWORD PTR ds:0x89ff88ff
  4192f9:	aas    
  4192fa:	loopne 0x4192fc
  4192fc:	(bad)  
  4192fd:	mov    edi,esi
  4192ff:	add    bh,bh
  419301:	lods   eax,DWORD PTR ds:[esi]
  419302:	lahf   
  419303:	jmp    FWORD PTR [ecx-0x7c717d]
  419309:	jno    0x4192a8
  41930b:	push   eax
  41930d:	jmp    DWORD PTR [edi-0x34]
  419310:	push   DWORD PTR [ecx+eax*1-0x34]
  419314:	aam    0xcc
  419316:	push   0x31f5ff00
  41931b:	int3   
  41931c:	add    al,0x83
  41931e:	xchg   ebp,eax
  41931f:	dec    esp
  419321:	fiadd  WORD PTR [eax-0x1]
  419324:	adc    eax,0xffff61ff
  419329:	fisub  DWORD PTR [edx-0x1]
  41932c:	pop    ss
  41932d:	inc    DWORD PTR [ebx-0x1]
  419330:	push   DWORD PTR [edx]
  419332:	ret    
  419333:	jmp    FWORD PTR [eax+eax*1]
  419336:	lock inc DWORD PTR [eax]
  419339:	inc    edx
  41933a:	mov    edx,0x87cca2ff
  41933f:	cmp    edi,0x47
  419342:	sbb    eax,0x9cff8200
  419347:	add    bh,bh
  419349:	(bad)  
  41934a:	mov    ds:0xe2ff9c00,al
  41934f:	add    ah,cl
  419351:	dec    eax
  419352:	pop    ebp
  419353:	add    al,cl
  419355:	mov    DWORD PTR [esi+0x136700ff],eax
  41935b:	mov    DWORD PTR [ecx-0x76ffc201],esp
  419361:	pop    esi
  419362:	retf   0xe6cc
  419365:	add    BYTE PTR [esi+0x36da00ff],dh
  41936b:	add    BYTE PTR [esp+ecx*8],ah
  41936e:	mov    al,ds:0x4bd2ffcc
  419373:	(bad)  
  419374:	cld    
  419375:	add    BYTE PTR [ebx-0x75bfff7d],bl
  41937b:	inc    DWORD PTR [esi-0x1]
  41937e:	scas   eax,DWORD PTR es:[edi]
  41937f:	add    DWORD PTR [eax],0x4e
  419382:	adc    al,BYTE PTR [eax]
  419384:	xchg   ebx,eax
  419385:	jmp    FWORD PTR [edi]
  419387:	(bad)  
  419388:	dec    DWORD PTR [ebp+esi*4-0x1]
  41938c:	pop    ss
  41938d:	add    BYTE PTR [ebp+0x0],dh
  419390:	int3   
  419391:	scas   eax,DWORD PTR es:[edi]
  419392:	push   edi
  419393:	add    BYTE PTR [ecx-0x1],al
  419396:	popa   
  419397:	inc    DWORD PTR [eax]
  419399:	loope  0x41938e
  41939b:	(bad)  
  41939c:	jmp    0xebad:0xff006700
  4193a3:	push   edi
  4193a5:	dec    eax
  4193a7:	cmp    edi,0xffffffc1
  4193aa:	add    BYTE PTR [eax],0x9e
  4193ad:	add    BYTE PTR [eax+0x742300ff],cl
  4193b3:	push   edi
  4193b5:	mov    DWORD PTR [ecx+0x3d20ffff],ebx
  4193bb:	dec    DWORD PTR [esp+ecx*8]
  4193be:	ss int3 
  4193c0:	call   DWORD PTR [esi+0x67]
  4193c3:	call   DWORD PTR [esi-0x7c00a77d]
  4193c9:	lods   eax,DWORD PTR ds:[esi]
  4193ca:	xor    eax,DWORD PTR [ebx-0xda008f]
  4193d0:	add    BYTE PTR [esi+0x150036],dl
  4193d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193d7:	inc    DWORD PTR [ebx-0x6300c968]
  4193dd:	int3   
  4193de:	cmp    al,0xff
  4193e0:	add    BYTE PTR [esi+0x7fffa4],bl
  4193e6:	xor    eax,DWORD PTR [eax]
  4193e8:	dec    edx
  4193ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193eb:	add    bh,cl
  4193ed:	adc    DWORD PTR [edi-0x1],0xffffff83
  4193f1:	mov    al,0x4c
  4193f3:	dec    DWORD PTR ds:0x89001cff
  4193f9:	loop   0x4193ae
  4193fb:	add    BYTE PTR [ecx],al
  4193fd:	add    bl,cl
  4193ff:	dec    esp
  419401:	das    
  419402:	scas   al,BYTE PTR es:[edi]
  419403:	int3   
  419404:	ror    BYTE PTR [ecx+0x3dff8374],cl
  41940a:	mov    dh,0xff
  41940c:	ds add al,dh
  41940f:	(bad)  
  419410:	dec    DWORD PTR [ecx-0x31]
  419413:	push   DWORD PTR [edx]
  419415:	jmp    FWORD PTR [eax]
  419417:	add    bh,bh
  419419:	sub    dl,BYTE PTR [esi]
  41941b:	int3   
  41941c:	or     edi,edi
  41941e:	stos   BYTE PTR es:[edi],al
  41941f:	cmp    edi,0xffffff8c
  419422:	add    esp,ecx
  419424:	dec    edx
  419425:	jmp    FWORD PTR [esi-0x7d]
  419428:	jmp    FWORD PTR [esi]
  41942a:	add    BYTE PTR gs:[ecx],cl
  41942d:	call   FWORD PTR [edx]
  41942f:	add    BYTE PTR [ebx-0x737c470b],al
  419435:	add    bl,bh
  419437:	inc    DWORD PTR [eax]
  419439:	sub    esi,0xffffffcc
  41943c:	hlt    
  41943d:	(bad)  
  41943e:	jl     0x419440
  419440:	jmp    DWORD PTR [esi-0x20]
  419443:	add    BYTE PTR [ebx-0x8e01],ah
  419449:	lods   al,BYTE PTR ds:[esi]
  41944a:	cli    
  41944b:	jmp    FWORD PTR [ecx]
  41944d:	(bad)  
  41944e:	jge    0x41944f
  419450:	int3   
  419451:	sbb    al,0x15
  419453:	add    BYTE PTR [ebx-0xff9800],cl
  419459:	test   al,0xe5
  41945b:	cmp    DWORD PTR [edx+0xfff200],0xffffffe8
  419462:	cli    
  419463:	add    BYTE PTR [ebp+0xde00],bh
  419469:	scas   al,BYTE PTR es:[edi]
  41946a:	jns    0x4193ef
  41946c:	dec    edi
  41946d:	(bad)  
  41946e:	out    dx,eax
  41946f:	add    BYTE PTR [ecx+0x29ff4720],cl
  419475:	add    ah,ah
  419477:	mov    DWORD PTR [eax],eax
  419479:	scas   al,BYTE PTR es:[edi]
  41947a:	ja     0x41947c
  41947c:	loope  0x41947d
  41947e:	jno    0x419403
  419480:	call   DWORD PTR [edx]
  419482:	aaa    
  419483:	add    BYTE PTR [edx-0x1],al
  419486:	mov    ds:0x4ce40000,eax
  41948b:	int3   
  41948c:	in     eax,dx
  41948d:	cmp    DWORD PTR [ebx],0xffffff89
  419490:	add    dh,cl
  419492:	lods   eax,DWORD PTR ds:[esi]
  419493:	jmp    DWORD PTR [edi+0x0]
  419496:	xchg   edx,eax
  419497:	(bad)  
  419498:	call   FWORD PTR [ebx+0xc1cc1a]
  41949e:	scas   al,BYTE PTR es:[edi]
  41949f:	(bad)  
  4194a0:	dec    DWORD PTR [edi+0xa0fff9]
  4194a6:	cmp    DWORD PTR [eax],eax
  4194a8:	sub    ebp,0xffffffd7
  4194ab:	call   FWORD PTR [edx-0xf200]
  4194b1:	fimul  WORD PTR [ebp+0x4a009fff]
  4194b7:	add    bh,bh
  4194b9:	in     al,dx
  4194ba:	out    0xff,al
  4194bc:	jne    0x4194bd
  4194be:	mov    esp,0x4757ffff
  4194c3:	add    BYTE PTR [eax-0x77],bl
  4194c6:	aam    0x89
  4194c8:	dec    DWORD PTR [edx-0xe30042]
  4194ce:	adc    DWORD PTR [eax],eax
  4194d0:	int3   
  4194d1:	and    BYTE PTR [ebx],bl
  4194d3:	jmp    FWORD PTR [edx]
  4194d5:	add    BYTE PTR [ecx+0x7302ffff],cl
  4194db:	xor    DWORD PTR [edi+edi*8+0x1f],0xffffffff
  4194e0:	add    BYTE PTR [ebp-0x78],bh
  4194e3:	int3   
  4194e4:	scas   al,BYTE PTR es:[edi]
  4194e5:	(bad)  
  4194e6:	mov    ebp,0x562800ff
  4194eb:	add    BYTE PTR [edi+0xffea89],cl
  4194f1:	cmp    bl,ch
  4194f3:	mov    ebx,edx
  4194f5:	(bad)  
  4194f6:	jp     0x4194f7
  4194f8:	int3   
  4194f9:	mov    DWORD PTR [ebp+0x73ff3eff],esp
  4194ff:	cmp    edi,0xffffffaa
  419502:	xchg   esi,eax
  419503:	jmp    DWORD PTR [esi-0x1]
  419506:	mov    ah,0x0
  419508:	call   DWORD PTR ds:0xff95ffe7
  41950e:	sar    bh,0xff
  419511:	sub    DWORD PTR [esi-0x7d],edi
  419514:	and    edi,edi
  419516:	sub    bh,bh
  419518:	mov    DWORD PTR [ebp*1+0xf8304ff],edx
  41951f:	(bad)  
  419520:	jmp    FWORD PTR [ecx+edx*2+0x0]
  419524:	mov    ebp,0xfffff200
  419529:	cmp    BYTE PTR ds:0xa8ff05cc,0x0
  419530:	sub    DWORD PTR [edi],0x69
  419533:	add    BYTE PTR [esi],dl
  419535:	int3   
  419536:	ja     0x419537
  419538:	jmp    esp
  41953a:	dec    esp
  41953b:	dec    DWORD PTR [edx-0x34]
  41953e:	jno    0x41953f
  419540:	push   DWORD PTR [ebp-0x1f00e6]
  419546:	pushf  
  419547:	add    DWORD PTR [eax],0x3d
  41954a:	mov    al,ds:0xc7897f00
  41954f:	inc    DWORD PTR [eax]
  419551:	mov    bl,BYTE PTR [edx]
  419553:	push   DWORD PTR ds:0xccd283
  419559:	mov    esi,0x836d83bf
  41955e:	cmp    bh,0xff
  419561:	adc    DWORD PTR [eax+eax*1+0x15ffcd],ebp
  419568:	(bad)  
  419569:	jmp    0xb86221
  41956e:	xor    bh,bh
  419570:	add    BYTE PTR [edi-0x7c9100ac],ch
  419576:	cmp    esp,ecx
  419578:	call   FWORD PTR [edx]
  41957a:	mov    bh,bh
  41957c:	adc    bh,bh
  41957e:	mov    dh,0x0
  419580:	jmp    ecx
  419582:	fisttp WORD PTR [ecx-0x768900a6]
  419588:	int3   
  419589:	mov    bh,0xac
  41958b:	add    BYTE PTR [ebp-0xb500],dl
  419591:	or     bh,BYTE PTR [edx]
  419593:	mov    DWORD PTR [eax-0x7cdd00],ebp
  419599:	and    eax,0xffce0058
  41959e:	mov    DWORD PTR [ecx-0x7c286401],ecx
  4195a4:	sub    ah,cl
  4195a6:	test   al,0xff
  4195a8:	inc    ecx
  4195aa:	pop    edx
  4195ab:	dec    DWORD PTR [edi+edi*8]
  4195ae:	push   0xffffff83
  4195b0:	add    cl,dh
  4195b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b3:	inc    DWORD PTR [ebx+eax*4+0x3]
  4195b7:	add    bh,bh
  4195b9:	je     0x419541
  4195bb:	jmp    ebp
  4195bd:	dec    DWORD PTR [ebp-0x1]
  4195c0:	push   ebp
  4195c2:	popf   
  4195c3:	call   FWORD PTR [edi]
  4195c5:	(bad)  
  4195c6:	jmp    0x67ff:0xd5a0ffff
  4195cd:	int3   
  4195ce:	cmp    al,0xff
  4195d0:	call   DWORD PTR [ebx+ecx*1+0x50833600]
  4195d7:	(bad)  
  4195d8:	(bad)  
  4195d9:	jge    0x4195f8
  4195db:	mov    eax,esp
  4195dd:	add    BYTE PTR [eax],cl
  4195df:	int3   
  4195e0:	add    BYTE PTR [edx],bh
  4195e2:	dec    edi
  4195e3:	add    BYTE PTR [ebx-0x1],bl
  4195e6:	xchg   ebx,eax
  4195e7:	inc    DWORD PTR [ebx-0x5a331b91]
  4195ed:	int3   
  4195ee:	pop    ecx
  4195ef:	(bad)  
  4195f0:	jmp    FWORD PTR [ebx+0x5f]
  4195f3:	(bad)  
  4195f4:	jg     0x4195f6
  4195f6:	test   esp,0x5a6dff
  4195fc:	sub    eax,DWORD PTR [eax]
  4195fe:	iret   
  4195ff:	dec    esp
  419601:	fnstsw WORD PTR [ecx-0x68002b01]
  419607:	int3   
  419608:	dec    DWORD PTR [esi-0xe]
  41960b:	call   DWORD PTR [ebx+0xff0483]
  419611:	xchg   esi,eax
  419612:	add    edi,edi
  419614:	cdq    
  419615:	int3   
  419616:	ror    DWORD PTR [ecx-0x56bb01],0xbf
  41961d:	(bad)  
  41961e:	jle    0x41961f
  419620:	mov    ebp,edx
  419622:	(bad)  
  419623:	dec    ebx
  419625:	call   FWORD PTR [eax+0x462cffff]
  41962b:	or     DWORD PTR [esi-0x1],0x47
  41962f:	int3   
  419630:	mov    DWORD PTR [edi],esi
  419632:	add    eax,DWORD PTR [eax]
  419634:	arpl   di,di
  419636:	inc    DWORD PTR fs:[eax]
  419639:	add    ah,BYTE PTR [ebx]
  41963b:	add    BYTE PTR [ecx-0x7c3c7d],bh
  419641:	cmp    DWORD PTR [edi+0x31ff3200],edi
  419647:	(bad)  
  419648:	jmp    DWORD PTR [ebp-0x7f]
  41964b:	call   DWORD PTR [ecx+ecx*4-0xb]
  41964f:	add    BYTE PTR [ecx-0x33ffe74f],cl
  419655:	inc    DWORD PTR [ecx]
  419657:	or     esp,0xffffff8a
  41965a:	das    
  41965b:	call   FWORD PTR [ecx-0xff4400]
  419661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419662:	xlat   BYTE PTR ds:[ebx]
  419663:	sbb    ebx,0xffffffff
  419666:	fs (bad) 
  419668:	push   DWORD PTR [eax+eiz*4-0x1]
  41966c:	and    bh,bh
  41966e:	push   cs
  41966f:	cmp    edi,0xffffffca
  419672:	enter  0x1e83,0xff
  419676:	loope  0x4195fb
  419678:	and    DWORD PTR ds:0x8384ff2b,0x76
  41967f:	(bad)  
  419680:	call   FWORD PTR [eax+ebx*4]
  419683:	jmp    DWORD PTR [ebp-0x7cf900]
  419689:	push   edx
  41968a:	jb     0x41960f
  41968c:	or     BYTE PTR [ebx+0x5700ffd3],al
  419692:	push   esi
  419693:	push   DWORD PTR ds:0xffff98ff
  419699:	jge    0x41971a
  41969b:	or     DWORD PTR [edi+edi*8],0x5a
  41969f:	add    BYTE PTR [eax],al
  4196a1:	sub    edx,ebx
  4196a3:	inc    edi
  4196a5:	(bad)  
  4196a6:	sti    
  4196a7:	mov    edi,edi
  4196a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196aa:	adc    bh,bh
  4196ac:	stc    
  4196ad:	mov    DWORD PTR [edx-0x15950000],ebp
  4196b3:	int3   
  4196b4:	add    bh,bh
  4196b6:	xchg   edx,eax
  4196b7:	int3   
  4196b8:	add    BYTE PTR [esi+0x3e],ch
  4196bb:	mov    DWORD PTR [eax+eax*1],eax
  4196be:	push   ecx
  4196bf:	mov    edi,edi
  4196c1:	addr16 adc al,0x0
  4196c4:	scas   al,BYTE PTR es:[edi]
  4196c5:	(bad)  
  4196c6:	in     eax,dx
  4196c7:	add    BYTE PTR [ebx-0x57ff0282],al
  4196cd:	adc    DWORD PTR [esi],0xffffff83
  4196d0:	call   DWORD PTR [edi+esi*1-0x66ff2301]
  4196d7:	inc    DWORD PTR [eax]
  4196d9:	dec    ecx
  4196da:	bswap  esp
  4196dc:	jmp    0x4196dd
  4196de:	adc    BYTE PTR [eax],al
  4196e0:	(bad)  
  4196e1:	jl     0x419743
  4196e3:	add    BYTE PTR [edx],al
  4196e5:	int3   
  4196e6:	or     edi,edi
  4196e8:	push   DWORD PTR [edx]
  4196ea:	and    BYTE PTR [ebx-0x4fffd5],al
  4196f0:	call   FWORD PTR [ebp-0xeb0047]
  4196f6:	add    BYTE PTR ss:[eax],al
  4196f9:	retf   0x89ba
  4196fc:	adc    al,BYTE PTR [eax]
  4196fe:	cs add bh,bh
  419701:	xor    ebp,DWORD PTR [ecx]
  419703:	(bad)  
  419704:	mov    ebx,0x8395ff
  419709:	jmp    0x419700
  41970b:	add    BYTE PTR [esi],bh
  41970d:	or     DWORD PTR [ebp-0x3c37c01],0x0
  419714:	push   edx
  419715:	call   FWORD PTR [edi]
  419717:	(bad)  
  419718:	call   DWORD PTR [edx+eiz*1]
  41971b:	push   DWORD PTR [ecx+ecx*4+0x43]
  41971f:	add    BYTE PTR [ebx-0x1b00e3b4],al
  419725:	add    BYTE PTR [eax-0x1],al
  419728:	add    BYTE PTR [edi],bl
  41972a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41972b:	inc    DWORD PTR [esi-0x7d]
  41972e:	lods   eax,DWORD PTR ds:[esi]
  41972f:	(bad)  
  419730:	push   eax
  419732:	adc    DWORD PTR gs:[ebx-0xfffc01],0xffffffe5
  41973a:	repnz int3 
  41973c:	pop    DWORD PTR [eax]
  41973e:	scas   al,BYTE PTR es:[edi]
  41973f:	add    bh,bh
  419741:	cmp    dh,BYTE PTR [edx-0x1]
  419744:	and    eax,0xff00fd89
  419749:	fisttp QWORD PTR [ebx-0x34]
  41974c:	aam    0xff
  41974e:	mov    edx,0x4724ff00
  419753:	add    BYTE PTR [ebp-0x6e7d],cl
  419759:	and    DWORD PTR [esp+ecx*8],edi
  41975c:	arpl   di,di
  41975e:	push   ebp
  41975f:	dec    esp
  419761:	sub    DWORD PTR [edx-0x72ffc37d],ebx
  419767:	add    BYTE PTR [eax],al
  419769:	movlps xmm0,QWORD PTR [ebx-0x560081]
  419770:	push   DWORD PTR [edx-0x760500f4]
  419776:	dec    eax
  419777:	inc    DWORD PTR [eax]
  419779:	jmp    0xff4c20b7
  41977e:	add    al,0xff
  419780:	add    esi,0xffffffd1
  419783:	jmp    DWORD PTR [esi-0xff0377]
  419789:	lds    eax,FWORD PTR [edi+0x0]
  41978c:	sahf   
  41978d:	push   DWORD PTR [ebp-0x761dff77]
  419793:	dec    eax
  419795:	add    DWORD PTR [eax+0x0],0xffffffff
  419799:	inc    eax
  41979a:	jg     0x41979b
  41979c:	leave  
  41979d:	add    BYTE PTR [edi+edi*8],bh
  4197a0:	(bad)  
  4197a1:	mov    eax,0x8946ff96
  4197a6:	cmc    
  4197a7:	add    DWORD PTR [ebx-0x7100a70a],0xffffff89
  4197ae:	fild   DWORD PTR [ebx-0x33148a01]
  4197b4:	mov    edi,edi
  4197b6:	popf   
  4197b7:	(bad)  
  4197b8:	call   DWORD PTR [ecx+ebp*1]
  4197bb:	add    BYTE PTR [esi-0x1],bl
  4197be:	mov    ebp,0x28ffffcc
  4197c3:	mov    DWORD PTR [ebx-0x7c6234],esi
  4197c9:	outs   dx,DWORD PTR ds:[esi]
  4197ca:	call   0xd80e1dce
  4197cf:	(bad)  
  4197d0:	call   FWORD PTR [eax+edi*4-0xd00a001]
  4197d7:	inc    DWORD PTR [eax]
  4197d9:	xor    eax,0x833600e9
  4197de:	jns    0x4197ac
  4197e0:	add    BYTE PTR [eax+0xcfff28],cl
  4197e6:	jle    0x4197e8
  4197e8:	mov    DWORD PTR [eax-0xc37cc7],ebp
  4197ee:	out    dx,al
  4197ef:	inc    DWORD PTR [eax]
  4197f1:	arpl   ax,si
  4197f3:	int3   
  4197f4:	mov    ds:0xffff5bff,al
  4197f9:	add    ecx,DWORD PTR [eax+eax*1-0xf50093]
  419800:	dec    ecx
  419802:	cmp    edi,edi
  419804:	into   
  419805:	push   DWORD PTR [esi+0x0]
  419808:	dec    esp
  41980a:	test   BYTE PTR [ecx+0xbbff1f],cl
  419810:	add    BYTE PTR [esp+eiz*4-0x1],al
  419814:	xchg   edx,eax
  419815:	jmp    edx
  419817:	add    bh,bh
  419819:	outs   dx,BYTE PTR ds:[esi]
  41981a:	test   BYTE PTR [eax],al
  41981c:	fld    DWORD PTR [eax]
  41981e:	int3   
  41981f:	add    bh,bh
  419821:	es out 0xff,eax
  419824:	outs   dx,DWORD PTR ds:[esi]
  419825:	mov    DWORD PTR [esi],esi
  419827:	(bad)  
  419828:	(bad)  
  419829:	stc    
  41982a:	inc    ecx
  41982b:	dec    DWORD PTR [ecx-0x7d]
  41982e:	(bad)  
  41982f:	int3   
  419830:	cmp    ebp,0xffffff99
  419833:	mov    DWORD PTR ds:0xffff7583,edx
  419839:	stc    
  41983a:	js     0x41983b
  41983c:	mov    ebx,0xcc891700
  419841:	addr16 aad 0xff
  419844:	out    0xcc,eax
  419846:	adc    bh,bh
  419848:	call   FWORD PTR [edx+esi*2+0x5ff5eff]
  41984f:	add    DWORD PTR [eax],0x61
  419852:	xchg   esp,eax
  419853:	add    BYTE PTR [esi+0x0],dh
  419856:	jge    0x419857
  419858:	inc    DWORD PTR [esi]
  41985a:	pop    es
  41985b:	push   DWORD PTR [ecx]
  41985d:	call   DWORD PTR [edi+edi*8]
  419860:	jmp    DWORD PTR [ebx-0x10]
  419863:	int3   
  419864:	or     ecx,esp
  419866:	aad    0xff
  419868:	mov    ebp,edx
  41986a:	fld    DWORD PTR [ebx+0x70ff45]
  419870:	sbb    DWORD PTR [ebp-0x7c4eff1e],0x17
  419877:	add    BYTE PTR [eax],al
  419879:	and    eax,0xff7efffb
  41987e:	cmp    eax,0x9675ff89
  419883:	add    BYTE PTR [edi+edi*8-0x5a],al
  419887:	(bad)  
  419888:	dec    DWORD PTR [esi-0x51]
  41988b:	inc    DWORD PTR [ebx-0x761500]
  419891:	sbb    DWORD PTR [ecx],0xa6ff4a00
  419897:	add    bh,bh
  419899:	cmp    al,0x4
  41989b:	mov    DWORD PTR [ebx],ebp
  41989d:	jmp    DWORD PTR [ebx-0x7d]
  4198a0:	jmp    eax
  4198a2:	dec    esi
  4198a3:	inc    DWORD PTR [eax-0x7cfb00]
  4198a9:	inc    edx
  4198aa:	test   DWORD PTR [eax],eax
  4198ac:	dec    ecx
  4198ad:	add    BYTE PTR [eax+eax*1-0x1],dh
  4198b1:	fidiv  DWORD PTR ds:0xa483c283
  4198b7:	add    bh,bh
  4198b9:	sbb    al,0xe8
  4198bb:	(bad)  
  4198bc:	jle    0x419847
  4198be:	cmp    eax,0xa0e78300
  4198c3:	jmp    edi
  4198c5:	call   FWORD PTR [ebx+eax*4-0x7cdec200]
  4198cc:	cmp    ecx,DWORD PTR [ecx+0x6dffff95]
  4198d2:	in     eax,dx
  4198d3:	call   DWORD PTR [ecx-0x7cff1a00]
  4198d9:	dec    esp
  4198da:	aaa    
  4198db:	call   DWORD PTR [edi+edi*8+0x59ffff80]
  4198e2:	mov    dh,0xff
  4198e4:	scas   al,BYTE PTR es:[edi]
  4198e5:	(bad)  
  4198e6:	jnp    0x4198e8
  4198e8:	dec    esp
  4198ea:	pop    esi
  4198eb:	call   FWORD PTR [ebx]
  4198ed:	call   DWORD PTR [esi-0x1]
  4198f0:	inc    DWORD PTR [edx-0x6a]
  4198f3:	mov    edi,edi
  4198f5:	add    BYTE PTR [eax-0x1],ah
  4198f8:	add    BYTE PTR [edi+0x87007b],dh
  4198fe:	stos   DWORD PTR es:[edi],eax
  4198ff:	add    BYTE PTR [eax],al
  419901:	sbb    al,0x53
  419903:	jmp    FWORD PTR ds:0xffffb7ff
  419909:	(bad)  
  41990a:	cmp    edi,edi
  41990c:	cmp    bh,0x8d
  41990f:	inc    DWORD PTR [ebx-0x7a0087c3]
  419915:	call   FWORD PTR [ebp-0x7d]
  419918:	call   FWORD PTR [eax-0x39]
  41991b:	add    BYTE PTR [ebx],cl
  41991d:	jmp    FWORD PTR [ecx+0x22f70000]
  419923:	add    BYTE PTR [eax-0x3300db01],ah
  419929:	fstp   TBYTE PTR [ebx-0x34]
  41992c:	pushf  
  41992d:	mov    ecx,esp
  41992f:	int3   
  419930:	inc    esp
  419932:	jne    0x419933
  419934:	sbb    edi,edi
  419936:	and    al,0x83
  419938:	int3   
  419939:	test   DWORD PTR [eax-0x331577],ebp
  41993f:	(bad)  
  419940:	push   DWORD PTR [esi-0x336affa9]
  419946:	mov    eax,0xe4dffff
  41994b:	jmp    DWORD PTR [ebx+eax*4+0x6]
  41994f:	dec    DWORD PTR [ecx-0x27ff2bc5]
  419955:	jmp    esp
  419957:	inc    DWORD PTR [eax]
  419959:	pusha  
  41995a:	sahf   
  41995b:	int3   
  41995c:	iret   
  41995d:	add    BYTE PTR [eax-0x7d],dh
  419960:	jmp    FWORD PTR [ebx]
  419962:	fcos   
  419964:	sti    
  419965:	cmp    DWORD PTR [edi+edi*8],0xffffffcc
  419969:	mov    ah,0xb9
  41996b:	call   DWORD PTR [edx]
  41996d:	add    BYTE PTR [ecx],bh
  41996f:	int3   
  419970:	(bad)  
  419971:	cmp    al,0x62
  419973:	push   DWORD PTR [ecx-0x2401]
  419979:	and    DWORD PTR [ecx-0x34],0x4b
  41997d:	add    bl,ah
  41997f:	(bad)  
  419980:	jmp    esp
  419982:	icebp  
  419983:	add    BYTE PTR [esi],ah
  419985:	add    BYTE PTR [edi],ch
  419987:	dec    esp
  419989:	inc    esp
  41998a:	icebp  
  41998b:	(bad)  
  41998c:	call   0x426e91
  419991:	in     eax,dx
  419992:	dec    esp
  419993:	mov    DWORD PTR [ebx+0x0],ecx
  419996:	call   0x9f4c9a67
  41999b:	cmp    DWORD PTR [ecx+0xffb0ff],0x48
  4199a2:	(bad)  
  4199a3:	jmp    ebx
  4199a5:	int3   
  4199a6:	push   ecx
  4199a7:	add    bh,bh
  4199a9:	aad    0xcf
  4199ab:	add    BYTE PTR [edx-0x7d],ah
  4199ae:	jl     0x419939
  4199b0:	(bad)  
  4199b1:	jns    0x419a0b
  4199b3:	sbb    esi,0x0
  4199b6:	aas    
  4199b7:	add    bh,bh
  4199b9:	jg     0x419968
  4199bb:	dec    DWORD PTR [edx-0x1]
  4199be:	test   DWORD PTR [eax],0xff52ad00
  4199c4:	jnp    0x4199c5
  4199c6:	and    ah,cl
  4199c8:	add    BYTE PTR [edi+0x95cce8],cl
  4199ce:	ins    BYTE PTR es:[edi],dx
  4199cf:	cmp    edi,0xffffffef
  4199d2:	and    edi,edi
  4199d4:	xchg   edi,eax
  4199d5:	call   edx
  4199d7:	(bad)  
  4199d8:	(bad)  
  4199d9:	out    dx,eax
  4199da:	jmp    0x41995f
  4199dc:	xlat   BYTE PTR ds:[ebx]
  4199dd:	int3   
  4199de:	loope  0x4199df
  4199e0:	push   DWORD PTR [ecx-0x761c008f]
  4199e6:	pop    esi
  4199e7:	(bad)  
  4199e8:	dec    DWORD PTR [ecx]
  4199ea:	leave  
  4199eb:	add    BYTE PTR [ecx-0x7ca901],al
  4199f1:	pop    es
  4199f2:	popf   
  4199f3:	call   FWORD PTR [ebx]
  4199f5:	mov    ebx,ecx
  4199f7:	add    DWORD PTR [eax],0xffffffcb
  4199fa:	(bad)  
  4199fc:	cs add dh,dl
  4199ff:	dec    DWORD PTR [ecx+0x83b47f]
  419a05:	(bad)  
  419a06:	out    dx,eax
  419a07:	inc    DWORD PTR [ebx+0x2effd9c2]
  419a0d:	sub    DWORD PTR [ebx],0xffffff83
  419a10:	call   FWORD PTR [ecx-0x7c990066]
  419a16:	lods   eax,DWORD PTR ds:[esi]
  419a17:	add    bh,bh
  419a19:	fcomp  QWORD PTR [edi]
  419a1b:	add    BYTE PTR [eax-0x7d],ch
  419a1e:	mov    ch,0xff
  419a20:	add    BYTE PTR [edi-0xd9ff9c],bh
  419a26:	and    ah,cl
  419a28:	mov    edi,ebx
  419a2a:	jg     0x4199b5
  419a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a2d:	(bad)  
  419a2e:	cmp    eax,0xfcbd0000
  419a33:	(bad)  
  419a34:	stc    
  419a35:	mov    DWORD PTR [edi+0x7aa3ff00],esp
  419a3b:	int3   
  419a3c:	fcos   
  419a3e:	mov    al,ds:0x1e2ffff
  419a43:	(bad)  
  419a44:	jmp    0x40c248
  419a49:	mov    eax,ds:0x7aff1e
  419a4e:	sub    eax,0x39dacc00
  419a53:	jmp    FWORD PTR [edi+0x89bdcc]
  419a59:	loope  0x419aa9
  419a5b:	call   FWORD PTR [edx+0x8314ff]
  419a61:	outs   dx,DWORD PTR ds:[esi]
  419a62:	arpl   di,di
  419a64:	lock call ebx
  419a67:	or     DWORD PTR [ecx-0x9008076],0x0
  419a6e:	pop    ecx
  419a6f:	int3   
  419a70:	add    BYTE PTR ds:0xff060095,dh
  419a76:	sbb    BYTE PTR [eax],al
  419a78:	add    BYTE PTR [edx],dh
  419a7a:	cdq    
  419a7b:	mov    DWORD PTR [esi+0xff9f89],esi
  419a81:	(bad)  
  419a82:	sar    bh,cl
  419a84:	or     ah,0xae
  419a87:	int3   
  419a88:	add    DWORD PTR [eax+0x73ffa4],0xfffffff9
  419a8f:	inc    DWORD PTR [eax]
  419a91:	je     0x419ad0
  419a93:	dec    esi
  419a95:	add    BYTE PTR [eax-0x732b0001],dh
  419a9b:	mov    DWORD PTR ds:0x83000300,esp
  419aa1:	xor    al,0xb3
  419aa3:	add    BYTE PTR [ebp+0x0],al
  419aa6:	inc    ebx
  419aa7:	inc    DWORD PTR [eax]
  419aa9:	ins    BYTE PTR es:[edi],dx
  419aaa:	sbb    eax,DWORD PTR [eax]
  419aac:	or     edi,edi
  419aae:	bound  eax,QWORD PTR [eax]
  419ab0:	mov    DWORD PTR [edx+0x3aff9d],ebp
  419ab6:	in     al,0xff
  419ab8:	call   DWORD PTR [eax]
  419aba:	sbb    al,0x0
  419abc:	adc    eax,0x83ff2ccc
  419ac1:	mov    eax,ds:0xffc6ff96
  419ac6:	imul   eax,DWORD PTR [eax],0x8970b200
  419acc:	dec    esi
  419acd:	add    BYTE PTR [ecx],al
  419acf:	(bad)  
  419ad0:	call   FWORD PTR [edx+0xb8ff2d]
  419ad6:	xchg   esp,ecx
  419ad8:	add    BYTE PTR [eax],dl
  419ada:	push   ds
  419adb:	call   ecx
  419add:	call   FWORD PTR [ecx]
  419adf:	add    bh,bh
  419ae1:	bswap  edi
  419ae3:	push   DWORD PTR [esi]
  419ae5:	inc    esp
  419ae7:	int3   
  419ae8:	add    BYTE PTR [edi-0xa1004b],cl
  419aee:	jnp    0x419af0
  419af0:	add    ah,al
  419af2:	inc    ecx
  419af3:	inc    DWORD PTR [eax-0x33f601]
  419af9:	dec    ebp
  419afa:	lods   al,BYTE PTR ds:[esi]
  419afb:	call   DWORD PTR [edi]
  419afd:	add    BYTE PTR [edx-0x1],dl
  419b00:	add    BYTE PTR [edi+0x2f003d],ch
  419b06:	dec    esi
  419b07:	(bad)  
  419b08:	jmp    DWORD PTR [ebx+0x2effaa]
  419b0e:	cmp    DWORD PTR [eax],eax
  419b10:	jmp    ebx
  419b12:	sbb    bh,bh
  419b14:	dec    edx
  419b15:	add    BYTE PTR [eax-0x1],bh
  419b18:	jmp    DWORD PTR [esi-0x30]
  419b1b:	jmp    DWORD PTR [ebp-0x1]
  419b1e:	loop   0x419aa3
  419b20:	add    bh,dl
  419b22:	push   esp
  419b23:	xor    ecx,0xffffffff
  419b26:	test   edi,edi
  419b28:	cmp    eax,0x42
  419b2b:	dec    ecx
  419b2d:	dec    ebx
  419b2f:	add    DWORD PTR [eax],0xffffffac
  419b32:	outs   dx,DWORD PTR ds:[esi]
  419b33:	sbb    DWORD PTR [eax-0x34],0x7b
  419b37:	inc    DWORD PTR [eax]
  419b39:	sbb    BYTE PTR [eax+eax*1],ch
  419b3c:	call   0x140f240
  419b41:	mov    ebx,0x7bff7f
  419b46:	mov    bl,0xff
  419b48:	adc    DWORD PTR [eax-0x46],0x0
  419b4c:	push   ebp
  419b4d:	jmp    DWORD PTR [esi-0x1]
  419b50:	call   FWORD PTR [edx]
  419b52:	add    BYTE PTR ds:[ecx-0x1],bl
  419b56:	ins    BYTE PTR es:[edi],dx
  419b57:	int3   
  419b58:	add    ch,dh
  419b5a:	lods   eax,DWORD PTR ds:[esi]
  419b5b:	add    BYTE PTR [ecx],ah
  419b5d:	add    bl,ch
  419b5f:	int3   
  419b60:	call   FWORD PTR [ebx+0x1d]
  419b63:	int3   
  419b64:	int    0xff
  419b66:	sub    eax,0x7a80ffff
  419b6b:	inc    DWORD PTR [ecx-0x3300a101]
  419b71:	loope  0x419b9e
  419b73:	add    dh,dl
  419b75:	push   DWORD PTR [edi+edi*8+0x0]
  419b79:	mov    edi,0xcc8e00f2
  419b7e:	inc    esp
  419b7f:	inc    DWORD PTR [ebx+0xbffa96f]
  419b85:	call   DWORD PTR [ebx-0x1]
  419b88:	dec    ebx
  419b8a:	push   esi
  419b8b:	jmp    FWORD PTR [ebx-0x7d]
  419b8e:	repz add BYTE PTR [eax],al
  419b91:	out    0x4b,al
  419b93:	dec    DWORD PTR ds:0xffccc500
  419b99:	and    al,0xbe
  419b9b:	inc    DWORD PTR [ebx]
  419b9d:	jmp    DWORD PTR [ecx]
  419b9f:	add    bh,bh
  419ba1:	out    0xbf,eax
  419ba3:	cmp    DWORD PTR [eax],0xffffffff
  419ba6:	jp     0x419ba7
  419ba8:	jmp    FWORD PTR [ebx-0x27]
  419bab:	add    BYTE PTR [esi+0x0],dl
  419bae:	aas    
  419baf:	(bad)  
  419bb0:	push   DWORD PTR [edi]
  419bb2:	push   eax
  419bb3:	(bad)  
  419bb4:	dec    BYTE PTR [ecx-0x340076f0]
  419bba:	inc    ebx
  419bbb:	add    BYTE PTR [esi],ch
  419bbd:	sbb    DWORD PTR [ebp-0x26c7634],0x0
  419bc4:	arpl   di,di
  419bc6:	stos   DWORD PTR es:[edi],eax
  419bc7:	inc    DWORD PTR [ebx-0x557cc9b2]
  419bcd:	add    cl,cl
  419bcf:	add    bh,bh
  419bd1:	add    BYTE PTR [ebx],dh
  419bd3:	ds adc al,0xff
  419bd6:	cli    
  419bd7:	inc    DWORD PTR [eax]
  419bd9:	(bad)  
  419bda:	cmp    dl,BYTE PTR [edi+0x73]
  419bdd:	dec    ebp
  419bdf:	add    bh,bh
  419be1:	add    dh,bh
  419be3:	dec    ecx
  419be4:	and    al,BYTE PTR [eax]
  419be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be7:	add    BYTE PTR [ecx+0x6ddd4dff],cl
  419bed:	add    BYTE PTR ds:0xda0000ff,dl
  419bf3:	pop    edi
  419bf4:	or     eax,0xe500
  419bf9:	add    BYTE PTR [edi-0x2ff9bc8],ch
  419bff:	add    bh,bh
  419c01:	call   DWORD PTR [edi+0x9129]
  419c07:	inc    DWORD PTR [eax]
  419c09:	or     DWORD PTR [edx-0x4c00efbe],0x0
  419c10:	add    BYTE PTR [ebx+0xad9af7],al
  419c16:	mov    edx,0x3100ff00
  419c1b:	xlat   BYTE PTR ds:[ebx]
  419c1c:	repz (bad) 
  419c1e:	clc    
  419c1f:	(bad)  
  419c20:	inc    DWORD PTR [eax]
  419c22:	aaa    
  419c23:	scas   eax,DWORD PTR es:[edi]
  419c24:	adc    BYTE PTR [eax],al
  419c26:	out    0x0,al
  419c28:	(bad)  
  419c29:	(bad)  
  419c2a:	fldcw  WORD PTR [ecx+0x17]
  419c2d:	add    BYTE PTR [eax-0x1],al
  419c30:	add    bh,bh
  419c32:	mov    bh,0xb3
  419c34:	xchg   edx,eax
  419c35:	call   FWORD PTR [edi-0x4200ff01]
  419c3b:	mov    ebx,0xfff9fffb
  419c40:	(bad)  
  419c41:	call   DWORD PTR [eax]
  419c43:	lods   eax,DWORD PTR ds:[esi]
  419c44:	in     eax,dx
  419c45:	and    DWORD PTR [edi+edi*8],0xffffffff
  419c49:	push   DWORD PTR [ebx+0xc007a76]
  419c4f:	add    BYTE PTR [eax],al
  419c51:	inc    DWORD PTR [ecx]
  419c53:	xor    esp,DWORD PTR [ecx]
  419c55:	dec    DWORD PTR [ebx+0x9ff00ff]
  419c5b:	fldenv [edi-0x1]
  419c5e:	les    eax,FWORD PTR [eax]
  419c60:	add    BYTE PTR [eax],al
  419c62:	jp     0x419c80
  419c64:	cmp    eax,0xffffdaff
  419c69:	cmp    eax,0xffffff87
  419c6c:	sar    edi,cl
  419c6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c6f:	add    BYTE PTR [ebx+0x705d7f83],al
  419c75:	jmp    DWORD PTR [esi-0x51767601]
  419c7b:	push   edi
  419c7c:	mov    ds:0xccffb9ff,eax
  419c81:	jmp    DWORD PTR [edi]
  419c83:	adc    esp,edx
  419c85:	jmp    FWORD PTR [ebx+0x0]
  419c88:	add    bh,bh
  419c8a:	adc    ah,BYTE PTR [ebx+0x2]
  419c8d:	cmp    DWORD PTR [ebx-0x1],0x0
  419c91:	int3   
  419c92:	sub    al,0x2a
  419c94:	rol    BYTE PTR [eax],0x2f
  419c97:	add    bh,bh
  419c99:	add    BYTE PTR [ecx+0x66],dh
  419c9c:	cmp    DWORD PTR [eax],eax
  419c9e:	out    dx,eax
  419c9f:	inc    DWORD PTR [ebx+0x55dd5fff]
  419ca5:	call   DWORD PTR [ecx]
  419ca7:	add    bh,bh
  419ca9:	add    BYTE PTR [ebx+0x3e],dh
  419cac:	lahf   
  419cad:	inc    DWORD PTR [edi+0x0]
  419cb0:	inc    DWORD PTR [eax]
  419cb2:	sbb    DWORD PTR [ecx],edx
  419cb4:	leave  
  419cb5:	(bad)  
  419cb6:	mov    ecx,0xb9ff00ff
  419cbb:	sbb    BYTE PTR [eax-0x76335f00],ch
  419cc1:	add    dh,ch
  419cc3:	jo     0x419caf
  419cc5:	dec    DWORD PTR [esi+0xcffff00]
  419ccb:	into   
  419ccc:	bound  eax,QWORD PTR [ebx-0x33ffbc]
  419cd2:	pushf  
  419cd3:	mov    ch,0xa2
  419cd5:	(bad)  
  419cd6:	jmp    0xf1d8:0xe5ffffff
  419cdd:	int3   
  419cde:	ror    esp,0x89
  419ce1:	add    BYTE PTR [eax],bl
  419ce3:	xchg   ebx,eax
  419ce4:	sub    eax,0xff00fc00
  419ce9:	add    BYTE PTR [eax+0x68ff214e],dh
  419cef:	(bad)  
  419cf0:	dec    esp
  419cf2:	xor    eax,eax
  419cf4:	jo     0x419cf5
  419cf6:	xlat   BYTE PTR ds:[ebx]
  419cf7:	add    bh,bh
  419cf9:	add    BYTE PTR [edi+0x18ffd70f],cl
  419cff:	(bad)  
  419d00:	inc    DWORD PTR [eax]
  419d02:	outs   dx,DWORD PTR ds:[esi]
  419d03:	pop    DWORD PTR [ebx+eax*4-0x12]
  419d07:	add    bh,bh
  419d09:	jmp    FWORD PTR ds:0x5ffda15
  419d0f:	add    bh,bh
  419d11:	add    BYTE PTR [esp+edx*8+0xd68363],bl
  419d18:	inc    DWORD PTR [eax]
  419d1a:	ds data16 into 
  419d1d:	dec    DWORD PTR [ebx-0x77]
  419d20:	inc    DWORD PTR [ebx-0xb3d4d2]
  419d26:	inc    DWORD PTR [eax]
  419d28:	add    bh,bh
  419d2a:	in     al,0x53
  419d2c:	and    eax,DWORD PTR [eax]
  419d2e:	cmp    BYTE PTR [eax],al
  419d30:	add    BYTE PTR [eax],al
  419d32:	repnz sbb DWORD PTR [ebx],0x0
  419d36:	bound  eax,QWORD PTR [eax]
  419d38:	inc    DWORD PTR [ebx-0x7cc4fcd7]
  419d3e:	push   ebp
  419d3f:	cmp    edi,0xffffffcc
  419d42:	adc    DWORD PTR [esi+0x9a8351],ebx
  419d48:	(bad)  
  419d49:	call   DWORD PTR [edx-0x6b7cc7a7]
  419d4f:	(bad)  
  419d50:	(bad)  
  419d51:	call   DWORD PTR [esi+0x6cff58b0]
  419d57:	add    BYTE PTR [eax],al
  419d59:	push   DWORD PTR [ecx-0x2d001e0b]
  419d5f:	int3   
  419d60:	add    BYTE PTR [eax],al
  419d62:	inc    ebx
  419d63:	fidiv  WORD PTR [ebp-0x1]
  419d66:	push   ds
  419d67:	(bad)  
  419d68:	inc    DWORD PTR [ebx-0xebf7a8]
  419d6e:	mov    ds:0x1183ffff,al
  419d73:	inc    esi
  419d74:	add    BYTE PTR [bp-0x7d],bh
  419d79:	call   FWORD PTR [eax]
  419d7b:	mov    BYTE PTR [edx+0x0],dl
  419d7e:	inc    ebx
  419d7f:	inc    DWORD PTR [ebx+0x35e300]
  419d85:	add    bl,dh
  419d87:	dec    esp
  419d89:	add    BYTE PTR [edi-0x1],al
  419d8c:	and    al,0xcc
  419d8e:	xor    eax,0xa7ffccff
  419d93:	sub    DWORD PTR [eax-0x1],esp
  419d96:	scas   al,BYTE PTR es:[edi]
  419d97:	mov    edi,edi
  419d99:	jmp    DWORD PTR [ecx]
  419d9b:	mov    bh,BYTE PTR [eax]
  419d9d:	add    al,bh
  419d9f:	add    bh,bh
  419da1:	add    eax,0xffffff92
  419da4:	gs jmp esi
  419da7:	int3   
  419da8:	(bad)  
  419da9:	inc    ebx
  419dab:	dec    ecx
  419dac:	add    bh,bh
  419dae:	call   0xf20:0x97ccff83
  419db5:	int3   
  419db6:	xchg   ebx,eax
  419db7:	inc    DWORD PTR [eax]
  419db9:	add    ch,cl
  419dbb:	lea    ecx,[ebx-0x1]
  419dbe:	sbb    edi,edi
  419dc0:	inc    DWORD PTR [eax]
  419dc2:	jae    0x419dd8
  419dc4:	sub    al,0xff
  419dc6:	std    
  419dc7:	add    BYTE PTR [eax],al
  419dc9:	inc    ecx
  419dcb:	fisubr DWORD PTR [edi-0xff6600]
  419dd1:	add    BYTE PTR [ecx+0x79],ah
  419dd4:	fdivr  st,st(7)
  419dd6:	ja     0x419dd7
  419dd8:	add    BYTE PTR [eax],al
  419dda:	push   esi
  419ddb:	stos   DWORD PTR es:[edi],eax
  419ddc:	adc    eax,0xff00d100
  419de1:	add    BYTE PTR ds:0x9bff0d4c,al
  419de7:	inc    DWORD PTR [eax]
  419de9:	(bad)  
  419dea:	call   0xff414ae1
  419def:	int3   
  419df0:	int3   
  419df1:	push   DWORD PTR [ecx+0x28]
  419df4:	mov    edi,?
  419df6:	and    eax,0x8affff00
  419dfb:	ret    0x8923
  419dfe:	dec    edi
  419dff:	add    BYTE PTR [ebx-0x51e77001],al
  419e05:	push   DWORD PTR [ebx+eax*4]
  419e08:	int3   
  419e09:	add    dh,ch
  419e0b:	(bad)  
  419e0c:	fiadd  WORD PTR [eax]
  419e0e:	cli    
  419e0f:	mov    edi,edi
  419e11:	int3   
  419e12:	dec    edi
  419e13:	mov    ebx,0x83078392
  419e18:	inc    DWORD PTR [ebx-0x7c3c3704]
  419e1e:	or     al,BYTE PTR [eax]
  419e20:	inc    DWORD PTR [ebx+0x1a7115]
  419e26:	cmp    edi,0xc0e3ffff
  419e2c:	dec    ebx
  419e2d:	add    BYTE PTR [ebp-0x68ff0001],ah
  419e33:	push   eax
  419e34:	mov    ecx,0xff001ecc
  419e39:	sub    DWORD PTR [ebx],0x26
  419e3c:	jmp    FWORD PTR es:[ebx-0x7d]
  419e40:	mov    DWORD PTR [eax],eax
  419e42:	popa   
  419e43:	sbb    BYTE PTR [eax-0xff0900],cl
  419e49:	add    BYTE PTR [edi+0x4dccbc96],dh
  419e4f:	add    BYTE PTR [ecx-0x7d600701],cl
  419e55:	add    bl,cl
  419e57:	dec    esp
  419e59:	(bad)  
  419e5a:	mov    esi,0x7ff1d9d
  419e5f:	int3   
  419e60:	cmp    edi,0xffffffbe
  419e63:	je     0x419e44
  419e65:	call   FWORD PTR [esi-0x23ff7c01]
  419e6b:	cmp    al,0x87
  419e6d:	call   FWORD PTR [ebp-0x1]
  419e70:	add    DWORD PTR [ebx-0x76905a17],0xfffffffa
  419e77:	inc    DWORD PTR [eax]
  419e79:	sbb    DWORD PTR [edi-0x7f003b1c],0x0
  419e80:	mov    DWORD PTR [eax],eax
  419e82:	shl    eax,0xa2
  419e85:	push   DWORD PTR [eax+eax*1-0x4443007d]
  419e8c:	dec    eax
  419e8d:	call   DWORD PTR [edi-0x1f007c01]
  419e93:	cs (bad) 
  419e95:	int3   
  419e96:	in     al,dx
  419e97:	cmp    edi,0xffffffff
  419e9a:	xlat   BYTE PTR ds:[ebx]
  419e9b:	retf   0xff23
  419e9e:	dec    esi
  419e9f:	mov    DWORD PTR [eax],eax
  419ea1:	jmp    DWORD PTR [ebx+0x2e]
  419ea4:	mov    bh,0x89
  419ea6:	push   cs
  419ea7:	(bad)  
  419ea8:	(bad)  
  419ea9:	(bad)  
  419eaa:	cmp    eax,0xf7ff7023
  419eaf:	(bad)  
  419eb0:	dec    esp
  419eb2:	cli    
  419eb3:	imul   esp,DWORD PTR [ebx-0xff2d00],0x470e5e89
  419ebd:	int3   
  419ebe:	ret    0xff83
  419ec1:	add    BYTE PTR [ebp+0x49ff14c6],dl
  419ec7:	add    BYTE PTR [eax],al
  419ec9:	call   esi
  419ecb:	mov    ?,WORD PTR [edx-0x34]
  419ece:	adc    eax,0xd883ffff
  419ed3:	(bad)
  419ed6:	push   ebp
  419ed7:	add    BYTE PTR [ecx-0x2227e100],cl
  419edd:	dec    ecx
  419edf:	add    bh,bh
  419ee1:	and    DWORD PTR [edx],0x29
  419ee4:	push   ebp
  419ee5:	call   DWORD PTR [ebp-0x7d]
  419ee8:	add    BYTE PTR [ecx+0xc8cd7d],cl
  419eee:	in     eax,dx
  419eef:	add    bh,bh
  419ef1:	int3   
  419ef2:	bound  ebx,QWORD PTR [edx+0xc1ff6d]
  419ef8:	(bad)  
  419ef9:	inc    DWORD PTR [esi]
  419efb:	sbb    DWORD PTR [ecx],0xff83abff
  419f01:	xor    DWORD PTR [edi-0x4dff828f],0xffffffff
  419f08:	add    bh,bh
  419f0a:	or     BYTE PTR [ecx-0x6e],cl
  419f0d:	cmp    DWORD PTR [edi+edi*8+0x0],0xffffffff
  419f12:	sub    BYTE PTR ds:0x89e7ff01,0xff
  419f19:	call   DWORD PTR [edx]
  419f1b:	cwde   
  419f1c:	fld    DWORD PTR [eax]
  419f1e:	(bad)  
  419f20:	add    bh,bh
  419f22:	ret    0x52cb
  419f25:	add    dl,dh
  419f27:	add    bh,bh
  419f29:	push   DWORD PTR [esp+ecx*1+0x17]
  419f2d:	mov    DWORD PTR [ebx+eax*4],esi
  419f30:	(bad)  
  419f31:	dec    DWORD PTR [eax+0x75]
  419f34:	adc    al,0xff
  419f36:	inc    DWORD PTR ds:[eax]
  419f39:	dec    DWORD PTR [ebx]
  419f3b:	fdivr  DWORD PTR [ebp-0x1]
  419f3e:	cmc    
  419f3f:	inc    DWORD PTR [eax]
  419f41:	jmp    DWORD PTR [esi+0x7a]
  419f44:	sub    BYTE PTR [ebx-0xff7692],al
  419f4a:	xchg   ebx,eax
  419f4b:	fisttp QWORD PTR [ebp-0x3101]
  419f51:	(bad)  
  419f52:	jns    0x419efa
  419f54:	pop    ss
  419f55:	add    ch,bl
  419f57:	(bad)  
  419f58:	(bad)  
  419f59:	(bad)  
  419f5a:	mov    esp,0xd7835394
  419f5f:	(bad)  
  419f60:	(bad)  
  419f61:	inc    ebp
  419f63:	dec    eax
  419f64:	and    edi,edi
  419f66:	mov    BYTE PTR [eax],0x83
  419f69:	int3   
  419f6a:	sbb    BYTE PTR [eax-0xaa0064],cl
  419f70:	inc    DWORD PTR [eax]
  419f72:	retf   
  419f73:	inc    ebx
  419f74:	ret    
  419f75:	call   FWORD PTR [edi+0x0]
  419f78:	(bad)  
  419f79:	jmp    FWORD PTR [ecx]
  419f7b:	(bad)  
  419f7d:	add    BYTE PTR [ebp-0x1],ch
  419f80:	inc    DWORD PTR [ebx-0x60df1d]
  419f86:	mov    edi,edi
  419f88:	add    bh,bh
  419f8a:	jg     0x419f5b
  419f8c:	jle    0x419f8d
  419f8e:	dec    edi
  419f8f:	cmp    edi,0xffffffff
  419f92:	dec    eax
  419f93:	push   ebx
  419f94:	cmp    esp,ecx
  419f96:	cmp    ecx,esp
  419f98:	inc    DWORD PTR [ebx-0xdc5802]
  419f9e:	cmp    edi,edi
  419fa0:	inc    DWORD PTR [eax]
  419fa2:	enter  0x9b90,0xff
  419fa6:	pop    eax
  419fa7:	(bad)  
  419fa8:	dec    esp
  419faa:	xor    al,0x92
  419fac:	arpl   WORD PTR [eax],ax
  419fae:	adc    al,0xff
  419fb0:	(bad)  
  419fb1:	dec    DWORD PTR [eax]
  419fb3:	jmp    0xccff:0x95ffa9
  419fba:	inc    edi
  419fbb:	adc    eax,0x833aff95
  419fc0:	add    DWORD PTR [ebx-0x36cd54],0xffffff8b
  419fc7:	inc    DWORD PTR [ebx-0x754f2d7d]
  419fcd:	add    BYTE PTR [esi],bl
  419fcf:	inc    DWORD PTR [ebx-0x68f71300]
  419fd5:	jmp    ecx
  419fd7:	(bad)  
  419fd8:	dec    DWORD PTR [ecx-0xfc8058]
  419fde:	out    dx,al
  419fdf:	mov    DWORD PTR [ecx+0x755cae00],ecx
  419fe5:	mov    DWORD PTR [eax-0x1],esi
  419fe8:	inc    DWORD PTR [eax]
  419fea:	or     eax,DWORD PTR [edx]
  419fec:	inc    ecx
  419fed:	call   FWORD PTR [ebx+eax*4+0x80e8300]
  419ff4:	push   ss
  419ff5:	add    BYTE PTR [eax],bh
  419ff7:	(bad)  
  419ff8:	(bad)  
  419ff9:	(bad)  
  419ffa:	jns    0x41a022
  419ffc:	test   al,0x0
  419ffe:	sub    bh,bh
  41a000:	add    ah,cl
  41a002:	inc    edi
  41a003:	xor    al,0xfe
  41a005:	mov    DWORD PTR [esi+0x7f00ffff],edx
  41a00b:	sar    BYTE PTR [ecx],1
  41a00d:	int3   
  41a00e:	(bad)  
  41a00f:	(bad)  
  41a010:	inc    DWORD PTR [ebx-0xf45ad6]
  41a016:	jmp    0x3341a01a
  41a01b:	aad    0x8b
  41a01d:	(bad)  
  41a01e:	sti    
  41a01f:	mov    DWORD PTR [eax],eax
  41a021:	add    BYTE PTR [eax+edx*8],al
  41a024:	cmp    eax,DWORD PTR [eax]
  41a026:	sar    edi,cl
  41a028:	(bad)  
  41a029:	jmp    FWORD PTR [ebx+0x3e]
  41a02c:	jle    0x41a02d
  41a02e:	mov    al,ds:0x26ffffff
  41a033:	xchg   cl,dh
  41a035:	add    DWORD PTR [edi-0x1],0xffffffff
  41a039:	call   FWORD PTR [ecx+esi*8-0x3f]
  41a03d:	add    ah,ah
  41a03f:	cmp    edi,0xffffffff
  41a042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a043:	or     al,0xf9
  41a045:	dec    DWORD PTR [ebp-0x1]
  41a048:	add    bh,bh
  41a04a:	cmp    edi,edx
  41a04c:	mov    cl,0x0
  41a04e:	xor    bh,bh
  41a050:	mov    DWORD PTR [eax],eax
  41a052:	(bad)  
  41a053:	sbb    ebp,eax
  41a055:	or     DWORD PTR [ebp-0x12ff3301],0xffffffb1
  41a05c:	cwde   
  41a05d:	jmp    ecx
  41a05f:	add    DWORD PTR [eax],0xffffff89
  41a062:	mov    ss,WORD PTR [edx+ecx*1+0xff5a00]
  41a069:	add    BYTE PTR [esi-0x1700ef33],bl
  41a06f:	inc    DWORD PTR [ebx+0x34ea01ff]
  41a075:	add    BYTE PTR [edi+edi*8],cl
  41a078:	add    BYTE PTR [ebx-0xcd367],al
  41a07e:	inc    ebp
  41a07f:	add    DWORD PTR [ebx-0x4762f201],0xffffffff
  41a086:	lods   al,BYTE PTR ds:[esi]
  41a087:	(bad)  
  41a088:	dec    DWORD PTR [ecx-0x15d457]
  41a08e:	ja     0x41a08f
  41a090:	add    bh,bh
  41a092:	xchg   DWORD PTR [eax],esp
  41a094:	push   edi
  41a095:	add    dl,dh
  41a097:	(bad)  
  41a098:	inc    DWORD PTR [ebx-0x7698ba28]
  41a09e:	jno    0x41a06c
  41a0a0:	add    BYTE PTR [ecx-0x766652e5],cl
  41a0a6:	(bad)  
  41a0a7:	(bad)  
  41a0a8:	inc    DWORD PTR [eax]
  41a0aa:	mov    WORD PTR [eax+0x5f],ds
  41a0ad:	mov    DWORD PTR [edx],ebp
  41a0af:	(bad)  
  41a0b0:	dec    esp
  41a0b2:	mov    BYTE PTR [esi-0x76],bl
  41a0b5:	push   DWORD PTR [ebx+eax*4-0x77]
  41a0b9:	add    BYTE PTR [esi],ah
  41a0bb:	(bad)  
  41a0bc:	out    0x89,eax
  41a0be:	ret    
  41a0bf:	(bad)  
  41a0c0:	inc    DWORD PTR [eax]
  41a0c2:	push   ecx
  41a0c3:	adc    DWORD PTR [eax],edi
  41a0c5:	int3   
  41a0c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c7:	(bad)  
  41a0c8:	inc    DWORD PTR [eax]
  41a0ca:	sub    eax,0x6300c4e8
  41a0cf:	(bad)  
  41a0d0:	(bad)  
  41a0d1:	push   DWORD PTR [ecx+0x55]
  41a0d4:	jge    0x41a0d6
  41a0d6:	add    eax,0xaa83ff83
  41a0db:	iret   
  41a0dc:	inc    esi
  41a0dd:	add    BYTE PTR [ecx+0x0],cl
  41a0e0:	add    bh,bh
  41a0e2:	xchg   ebp,eax
  41a0e3:	sub    edi,edi
  41a0e5:	add    BYTE PTR [ecx+0x3cff00ff],dl
  41a0eb:	(bad)  
  41a0ec:	(bad)  
  41a0ed:	call   eax
  41a0ef:	inc    DWORD PTR [eax]
  41a0f1:	jmp    DWORD PTR [edx-0x6e]
  41a0f4:	pop    esp
  41a0f5:	add    BYTE PTR [esi-0x10ff7c01],cl
  41a0fb:	cdq    
  41a0fc:	cs and eax,0xffffff83
  41a100:	inc    DWORD PTR [ebx-0x33a7333b]
  41a106:	sub    eax,0xf4ff0083
  41a10b:	std    
  41a10c:	repz int3 
  41a10e:	(bad)  
  41a10f:	inc    DWORD PTR [ebx+0xd77c483]
  41a115:	add    BYTE PTR [esi-0x13ffff01],dh
  41a11b:	arpl   WORD PTR [ebx],si
  41a11d:	sub    DWORD PTR [edi],0xffffffff
  41a120:	add    BYTE PTR [eax],al
  41a122:	push   cs
  41a123:	adc    dh,dl
  41a125:	adc    DWORD PTR [ebx],0xffffffff
  41a128:	add    DWORD PTR [eax],0x1d
  41a12b:	in     eax,0xe4
  41a12d:	add    BYTE PTR [ebx-0x3a007c7d],bl
  41a133:	or     al,0x13
  41a135:	add    BYTE PTR [eax+eax*1],al
  41a138:	(bad)  
  41a139:	jmp    DWORD PTR [ebx]
  41a13b:	or     al,0xc2
  41a13d:	add    BYTE PTR [ecx+0x0],dl
  41a140:	add    bh,bh
  41a142:	mov    BYTE PTR [ebx-0x7],al
  41a145:	mov    DWORD PTR [edi+0x450083ff],ecx
  41a14b:	jbe    0x41a174
  41a14d:	call   FWORD PTR [eax]
  41a14f:	inc    DWORD PTR [ebx+0x5d276ff]
  41a155:	call   ebp
  41a157:	inc    DWORD PTR [eax]
  41a159:	(bad)  
  41a15a:	jnp    0x41a141
  41a15c:	jmp    0x92ff:0xff837089
  41a163:	jbe    0x41a0f7
  41a165:	dec    esp
  41a167:	add    ah,cl
  41a169:	call   esp
  41a16b:	jecxz  0x41a1a7
  41a16d:	dec    DWORD PTR [eax-0x1]
  41a170:	inc    DWORD PTR [eax]
  41a172:	call   0xff00:0xcb89c8a1
  41a179:	int3   
  41a17a:	pusha  
  41a17b:	push   0x834500fc
  41a180:	(bad)  
  41a181:	dec    ecx
  41a183:	lds    edi,FWORD PTR [edi+edi*8-0x3396]
  41a18a:	jo     0x41a15a
  41a18c:	add    BYTE PTR fs:[esi+0x1cffccff],dh
  41a193:	inc    esi
  41a194:	pushf  
  41a195:	inc    DWORD PTR [esi]
  41a197:	add    BYTE PTR [ebx+0x546570ff],al
  41a19d:	add    BYTE PTR [edi-0x2100ff77],ah
  41a1a3:	xchg   edi,eax
  41a1a4:	icebp  
  41a1a5:	add    BYTE PTR [edx-0x34],dh
  41a1a8:	add    BYTE PTR [ebx-0xb0de02],al
  41a1ae:	mov    ebp,0xa0ffffff
  41a1b3:	lds    esi,FWORD PTR [ecx+0xff2089]
  41a1b9:	add    DWORD PTR [ebx],0x6c
  41a1bc:	je     0x41a141
  41a1be:	jae    0x41a1bf
  41a1c0:	inc    DWORD PTR [ebx-0xcdb1b]
  41a1c6:	mov    esp,0xd100ccff
  41a1cb:	cmp    eax,0xccaf8316
  41a1d0:	inc    DWORD PTR [eax]
  41a1d2:	jmp    0xcc:0xb1ff7a76
  41a1d9:	adc    DWORD PTR [edx],0xfffffff1
  41a1dc:	sub    bh,bh
  41a1de:	mov    eax,0xc483ff00
  41a1e3:	dec    eax
  41a1e4:	add    bh,bh
  41a1e6:	cmp    eax,0xeeffffff
  41a1eb:	xchg   ecx,eax
  41a1ec:	push   ebx
  41a1ed:	add    al,dl
  41a1ef:	inc    DWORD PTR [eax]
  41a1f1:	jmp    DWORD PTR [edi]
  41a1f3:	xchg   cx,ax
  41a1f5:	inc    eax
  41a1f7:	add    DWORD PTR [eax],0x0
  41a1fa:	out    0xd5,eax
  41a1fc:	inc    esp
  41a1fd:	add    bh,ch
  41a1ff:	add    BYTE PTR [eax],al
  41a201:	inc    DWORD PTR [edx+0x100744c]
  41a207:	cmp    edi,0x0
  41a20a:	mov    ah,bl
  41a20c:	xchg   edi,edi
  41a20e:	cmp    al,0x0
  41a210:	add    bh,bh
  41a212:	jmp    0xccff:0x8c835847
  41a219:	push   DWORD PTR [esi-0x6633bb50]
  41a21f:	mov    edi,edi
  41a221:	add    BYTE PTR [ecx+0x65],ah
  41a224:	xchg   edi,eax
  41a225:	add    dh,bh
  41a227:	add    DWORD PTR [eax],0x0
  41a22a:	in     eax,dx
  41a22b:	dec    ecx
  41a22c:	jo     0x41a22e
  41a22e:	mov    al,ds:0x700ff00
  41a233:	xchg   esp,eax
  41a234:	jnp    0x41a235
  41a236:	std    
  41a237:	add    bh,bh
  41a239:	(bad)  
  41a23a:	mov    ebp,0x90ff3f11
  41a23f:	add    bh,bh
  41a241:	inc    DWORD PTR [esi+0x47001979]
  41a247:	add    DWORD PTR [eax],0xffffffff
  41a24a:	add    eax,0x69ff24a0
  41a24f:	inc    DWORD PTR [eax]
  41a251:	(bad)  
  41a252:	cmp    BYTE PTR [edi-0x55],bl
  41a255:	dec    DWORD PTR [edi-0x57000001]
  41a25b:	and    ebx,edx
  41a25d:	add    BYTE PTR [ecx+0x0],ch
  41a260:	cmp    edi,0xffffff89
  41a263:	cdq    
  41a264:	sub    BYTE PTR [eax],al
  41a266:	retf   
  41a267:	inc    DWORD PTR [ebx-0x35356134]
  41a26d:	call   edx
  41a26f:	inc    DWORD PTR [ebx+0x26231300]
  41a275:	dec    edi
  41a277:	inc    DWORD PTR [eax]
  41a279:	sub    DWORD PTR [edx+0x76ffdccf],0xffffff83
  41a280:	cmp    edi,0x4f
  41a283:	aaa    
  41a284:	std    
  41a285:	mov    ebx,ebp
  41a287:	add    BYTE PTR [ecx-0x6e113601],cl
  41a28d:	(bad)  
  41a28e:	cld    
  41a28f:	inc    DWORD PTR [ebx-0x364fe300]
  41a295:	add    DWORD PTR [ebp+0x0],0xffffffff
  41a299:	call   ebp
  41a29b:	ss scas al,BYTE PTR es:[edi]
  41a29d:	sub    DWORD PTR [edi],0xffffff83
  41a2a0:	(bad)  
  41a2a1:	inc    DWORD PTR [esi+ecx*8-0xc433c7]
  41a2a8:	cmp    edi,0xffffffee
  41a2ab:	jg     0x41a28c
  41a2ad:	call   DWORD PTR [esi+0x1898983]
  41a2b3:	imul   DWORD PTR [ebx]
  41a2b5:	jmp    FWORD PTR [edi-0x1]
  41a2b8:	dec    esp
  41a2ba:	lods   eax,DWORD PTR ds:[esi]
  41a2bb:	jmp    0x0:0xff5cff98
  41a2c2:	xchg   DWORD PTR [edx-0x2400c5],edx
  41a2c8:	inc    DWORD PTR [eax]
  41a2ca:	jmp    0x8300:0x12ff7e82
  41a2d1:	mov    edx,ecx
  41a2d3:	ds push esi
  41a2d5:	add    BYTE PTR [edx+0x6100ffff],ch
  41a2db:	sbb    edi,DWORD PTR [ebx-0x34]
  41a2de:	sahf   
  41a2df:	add    DWORD PTR [ebx+0x4423bd89],0xffffffcc
  41a2e6:	sar    bh,1
  41a2e8:	int3   
  41a2e9:	call   FWORD PTR [esi+0x45ffbee4]
  41a2ef:	add    BYTE PTR [eax],al
  41a2f1:	mov    DWORD PTR [edx],ecx
  41a2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f4:	sub    eax,DWORD PTR [eax]
  41a2f6:	dec    esi
  41a2f7:	cmp    edi,0x0
  41a2fa:	repz lds ebp,FWORD PTR [ebx-0x7d]
  41a2fe:	cmp    edi,edi
  41a300:	int3   
  41a301:	sbb    DWORD PTR [ecx+0x43],0xffffff8e
  41a305:	inc    DWORD PTR [ecx-0x7d]
  41a308:	int3   
  41a309:	add    BYTE PTR [eax-0x3300e347],dl
  41a30f:	add    BYTE PTR [ebx+0x358d3783],al
  41a315:	mov    DWORD PTR [esi-0x3d7c0001],ebp
  41a31b:	int    0xbd
  41a31d:	inc    ebp
  41a31f:	add    BYTE PTR [eax],al
  41a321:	mov    DWORD PTR [edi+0x72],ebx
  41a324:	into   
  41a325:	jmp    FWORD PTR [esi+0x0]
  41a328:	(bad)  
  41a329:	dec    DWORD PTR [ebp-0x7c]
  41a32c:	das    
  41a32d:	sub    DWORD PTR [edi-0x5a000001],0x38
  41a334:	pusha  
  41a335:	int3   
  41a336:	call   0x87416f3b
  41a33b:	mov    ebx,?
  41a33d:	add    BYTE PTR [esi],al
  41a33f:	add    BYTE PTR [ebx-0x176fc101],al
  41a345:	int3   
  41a346:	add    edi,edi
  41a348:	add    bh,bh
  41a34a:	push   esi
  41a34b:	sti    
  41a34c:	dec    ecx
  41a34d:	and    DWORD PTR [ecx-0x1],0xffffffcc
  41a351:	call   DWORD PTR [esi]
  41a353:	pop    esp
  41a354:	je     0x41a355
  41a356:	pop    ss
  41a357:	(bad)  
  41a358:	(bad)  
  41a359:	dec    DWORD PTR [edi-0x6000eeef]
  41a35f:	inc    DWORD PTR [eax]
  41a361:	sub    DWORD PTR [eax-0x80],0xffffff9a
  41a365:	add    BYTE PTR [edi],dl
  41a367:	(bad)  
  41a368:	dec    esp
  41a36a:	mov    ds:0xdd898361,al
  41a36f:	cmp    edi,0x0
  41a372:	jl     0x41a3bd
  41a374:	mov    edi,0x8349ff
  41a379:	add    bl,ch
  41a37b:	mov    al,0x4a
  41a37d:	(bad)  
  41a37e:	jmp    0x4e16:0x390089cc
  41a385:	(bad)  
  41a386:	clc    
  41a387:	int3   
  41a388:	add    ah,cl
  41a38a:	and    BYTE PTR [ecx-0x60ff67],ch
  41a390:	mov    DWORD PTR [ebx-0x7c3f6f88],eax
  41a396:	sbb    eax,0xee000089
  41a39b:	sahf   
  41a39c:	inc    DWORD PTR es:[edi-0x4400ff01]
  41a3a3:	mov    ebx,0xff6c008f
  41a3a8:	inc    DWORD PTR [eax]
  41a3aa:	push   ebp
  41a3ab:	sbb    BYTE PTR [eax-0x76009300],bl
  41a3b1:	jmp    DWORD PTR [eax-0xa]
  41a3b4:	and    ecx,esp
  41a3b6:	push   0x0
  41a3b8:	mov    edi,edi
  41a3ba:	sahf   
  41a3bb:	aas    
  41a3bc:	aad    0x0
  41a3be:	push   ebp
  41a3bf:	(bad)  
  41a3c0:	inc    DWORD PTR [eax]
  41a3c2:	pusha  
  41a3c3:	add    eax,0xff41ff93
  41a3c8:	add    bh,bh
  41a3ca:	cmp    al,0x69
  41a3cc:	mov    edx,0xffff6c83
  41a3d1:	sub    eax,0x22
  41a3d4:	or     eax,DWORD PTR [ebx-0x76ee]
  41a3da:	mov    esi,0x78ffb0ce
  41a3df:	cmp    edi,0x0
  41a3e2:	dec    ebp
  41a3e3:	ror    esp,cl
  41a3e5:	add    BYTE PTR [eax-0x1],ch
  41a3e8:	(bad)  
  41a3e9:	(bad)  
  41a3ea:	mov    ecx,0xdc00ccd0
  41a3ef:	inc    DWORD PTR [eax]
  41a3f1:	add    BYTE PTR [esi+0x30ccb20a],dh
  41a3f7:	(bad)  
  41a3f8:	(bad)  
  41a3f9:	inc    DWORD PTR [ebx+0x59ff6b6e]
  41a3ff:	add    BYTE PTR [ecx-0x38481900],cl
  41a405:	or     DWORD PTR [ecx-0x31000000],0x21
  41a40c:	imul   edi,edi,0xffff89cb
  41a412:	cdq    
  41a413:	lds    eax,FWORD PTR [ebp-0x1]
  41a416:	loop   0x41a39b
  41a418:	add    bh,bh
  41a41a:	in     eax,dx
  41a41b:	bswap  ebx
  41a41d:	mov    ebx,edi
  41a41f:	add    BYTE PTR [ecx+0x39da0383],cl
  41a425:	push   DWORD PTR [eax+0x0]
  41a428:	add    DWORD PTR [eax],0xffffff86
  41a42b:	sbb    eax,0x7ccfd
  41a430:	inc    DWORD PTR [eax]
  41a432:	rcr    DWORD PTR [edi],cl
  41a434:	js     0x41a3b9
  41a436:	sub    edi,edi
  41a438:	add    BYTE PTR [eax],al
  41a43a:	pop    eax
  41a43b:	add    ebp,DWORD PTR [edx]
  41a43d:	add    BYTE PTR [esi-0x14007c7d],dl
  41a443:	mov    esi,DWORD PTR ds:0x6700
  41a449:	dec    DWORD PTR [ecx]
  41a44b:	sub    BYTE PTR [esi],0x89
  41a44e:	pop    es
  41a44f:	add    BYTE PTR [ebx-0x271dc00],al
  41a455:	add    BYTE PTR [eax],al
  41a457:	(bad)  
  41a458:	inc    DWORD PTR [eax]
  41a45a:	lahf   
  41a45b:	mov    fs,WORD PTR [eax-0x1]
  41a45e:	jnp    0x41a460
  41a460:	int3   
  41a461:	push   ebp
  41a463:	mov    dl,0x31
  41a465:	xor    esi,0xffffffff
  41a468:	inc    DWORD PTR [eax]
  41a46a:	xor    al,0x6e
  41a46c:	adc    BYTE PTR [eax],al
  41a46e:	jecxz  0x41a3f9
  41a470:	(bad)  
  41a471:	call   DWORD PTR [edx]
  41a473:	mov    BYTE PTR [ebp-0x1],bh
  41a476:	cmc    
  41a477:	or     esp,0xffffffff
  41a47a:	adc    edi,ecx
  41a47c:	out    0x0,eax
  41a47e:	icebp  
  41a47f:	add    DWORD PTR [eax],0xffffff83
  41a482:	mov    ah,0x59
  41a484:	cmp    edi,edi
  41a486:	cmc    
  41a487:	inc    DWORD PTR [eax]
  41a489:	dec    DWORD PTR [ecx-0x160094f4]
  41a48f:	inc    DWORD PTR [eax]
  41a491:	sub    DWORD PTR [eax+0x49001aa7],0xffffffff
  41a498:	(bad)  
  41a499:	jmp    DWORD PTR [edx]
  41a49b:	repnz add ecx,DWORD PTR [ecx-0x39]
  41a4a2:	rcr    DWORD PTR [ebx+ebp*8],0x0
  41a4a6:	add    BYTE PTR [eax],al
  41a4a8:	inc    DWORD PTR [ebx-0xfe6ac]
  41a4ae:	push   ecx
  41a4af:	(bad)  
  41a4b0:	(bad)  
  41a4b1:	jmp    DWORD PTR [edx+0x11006377]
  41a4b7:	mov    DWORD PTR [eax],eax
  41a4b9:	push   DWORD PTR [ecx-0x127cc7f5]
  41a4bf:	add    BYTE PTR [ebx-0x1802167d],al
  41a4c5:	call   FWORD PTR [ecx-0x1]
  41a4c8:	add    BYTE PTR [eax],al
  41a4ca:	jle    0x41a4bc
  41a4cc:	(bad)  
  41a4ce:	and    eax,DWORD PTR [ebx-0x2f473301]
  41a4d4:	loop   0x41a45f
  41a4d6:	mov    bh,bh
  41a4d8:	inc    DWORD PTR [eax]
  41a4da:	cmp    edx,DWORD PTR [edi]
  41a4dc:	popa   
  41a4dd:	add    BYTE PTR [edi+edi*8+0x525700ff],ah
  41a4e4:	ret    0xb783
  41a4e7:	mov    DWORD PTR [eax],eax
  41a4e9:	cmp    DWORD PTR [edi],0x69
  41a4ec:	sub    eax,0x83ff8d00
  41a4f1:	add    BYTE PTR [ecx],cl
  41a4f3:	repz test edi,edi
  41a4f6:	lock inc DWORD PTR [eax]
  41a4f9:	(bad)  
  41a4fa:	fimul  WORD PTR [eax-0x7c45ff31]
  41a500:	inc    DWORD PTR [eax]
  41a502:	sahf   
  41a503:	sub    eax,esp
  41a505:	call   DWORD PTR [edi-0x1]
  41a508:	add    bh,bh
  41a50a:	push   esp
  41a50b:	pop    esi
  41a50c:	pop    edx
  41a50d:	add    BYTE PTR [eax],ch
  41a50f:	dec    esp
  41a511:	dec    DWORD PTR [eax+0x7c]
  41a514:	ret    
  41a515:	jmp    FWORD PTR [eax]
  41a517:	add    BYTE PTR [eax],al
  41a519:	add    dh,bl
  41a51b:	mov    eax,0x97ff50
  41a520:	inc    DWORD PTR [eax]
  41a522:	jnp    0x41a55a
  41a524:	mov    bh,bh
  41a526:	cmp    DWORD PTR [ecx+0x371cccff],ecx
  41a52c:	inc    edx
  41a52d:	or     DWORD PTR [eax],0x0
  41a530:	add    BYTE PTR [eax],al
  41a532:	push   edi
  41a533:	sti    
  41a534:	cmp    bh,bh
  41a536:	mov    cl,0xff
  41a538:	(bad)  
  41a539:	push   edi
  41a53b:	je     0x41a57a
  41a53d:	int3   
  41a53e:	or     esp,0xad71ffff
  41a544:	out    dx,al
  41a545:	add    BYTE PTR [ebx],ch
  41a547:	(bad)  
  41a548:	inc    DWORD PTR [eax]
  41a54a:	pop    edx
  41a54b:	and    bh,bh
  41a54d:	or     DWORD PTR [edx-0x1],0xffffff83
  41a551:	add    BYTE PTR [ecx-0x210024b2],ah
  41a557:	(bad)  
  41a558:	dec    DWORD PTR [ecx+0x24e96e]
  41a55e:	(bad)  
  41a560:	add    BYTE PTR [ebx-0x3332ade9],al
  41a566:	pop    ecx
  41a567:	mov    edi,edi
  41a569:	add    BYTE PTR [esi],bh
  41a56b:	outs   dx,DWORD PTR ds:[esi]
  41a56c:	sub    bh,bh
  41a56e:	pop    edx
  41a56f:	add    ah,cl
  41a571:	call   DWORD PTR [ecx-0x7c007b0d]
  41a577:	(bad)  
  41a578:	dec    esp
  41a57a:	(bad)  
  41a57c:	and    eax,DWORD PTR [ebx-0x760092]
  41a582:	popf   
  41a583:	xchg   esi,eax
  41a584:	adc    edi,edi
  41a586:	sub    bh,bh
  41a588:	(bad)  
  41a589:	jmp    DWORD PTR [eax]
  41a58b:	sub    al,0xa4
  41a58d:	or     DWORD PTR [esi],0xffffffff
  41a590:	add    DWORD PTR [eax],0x50
  41a593:	neg    DWORD PTR [esi]
  41a595:	and    DWORD PTR [ebx],0xffffffff
  41a598:	int3   
  41a599:	(bad)  
  41a59a:	jg     0x41a52b
  41a59c:	mov    DWORD PTR [eax],eax
  41a59e:	pop    esp
  41a59f:	inc    DWORD PTR [eax]
  41a5a1:	jmp    DWORD PTR ds:0xde831f4e
  41a5a7:	mov    DWORD PTR [ebx-0x16360800],eax
  41a5ad:	int3   
  41a5ae:	sbb    DWORD PTR [eax],eax
  41a5b0:	cmp    edi,0x3f
  41a5b3:	sbb    BYTE PTR [ebx],al
  41a5b5:	add    BYTE PTR ds:0x3bff0000,bl
  41a5bb:	xchg   ebp,eax
  41a5bc:	sbb    eax,0x83002200
  41a5c1:	xor    DWORD PTR [edx+0x2006f55],0xffffffff
  41a5c8:	dec    esp
  41a5ca:	clc    
  41a5cb:	sub    ebp,DWORD PTR [edx+0x89d7ff]
  41a5d1:	add    dh,dh
  41a5d3:	or     DWORD PTR [edi+edi*8+0x55],ecx
  41a5d7:	int3   
  41a5d8:	(bad)  
  41a5d9:	jmp    FWORD PTR [eax-0x60]
  41a5dc:	mov    ds:0x83ccab00,al
  41a5e1:	cmp    DWORD PTR [ebp+0x4683efdc],0x0
  41a5e8:	(bad)  
  41a5e9:	push   DWORD PTR [ebx-0x67]
  41a5ec:	jno    0x41a5ee
  41a5ee:	lods   eax,DWORD PTR ds:[esi]
  41a5ef:	(bad)  
  41a5f0:	dec    DWORD PTR [ecx-0xe2f81c]
  41a5f6:	aad    0xff
  41a5f8:	(bad)  
  41a5f9:	inc    DWORD PTR [edx+eax*1-0x10]
  41a5fd:	inc    DWORD PTR [eax+eax*1]
  41a600:	add    bh,bh
  41a602:	mov    al,0x31
  41a604:	sub    al,0xff
  41a606:	dec    edi
  41a607:	add    bh,bh
  41a609:	int3   
  41a60a:	(bad)  
  41a60b:	mov    esi,0xc8ff84
  41a610:	add    BYTE PTR [eax],al
  41a612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a613:	shl    BYTE PTR [edx-0x1],0x7a
  41a617:	add    ah,cl
  41a619:	add    BYTE PTR [eax+0x35],dh
  41a61c:	cdq    
  41a61d:	dec    eax
  41a61f:	cmp    edi,0x0
  41a622:	outs   dx,BYTE PTR ds:[esi]
  41a623:	aam    0xe3
  41a625:	jmp    DWORD PTR [ecx+ecx*4-0x11f40001]
  41a62c:	mov    bh,bh
  41a62e:	in     al,dx
  41a62f:	int3   
  41a630:	inc    DWORD PTR [eax]
  41a632:	xor    ch,dh
  41a634:	adc    cl,ah
  41a636:	adc    al,0xcc
  41a638:	inc    DWORD PTR [eax]
  41a63a:	mov    ecx,0x12832706
  41a63f:	add    BYTE PTR [ebx+0x77b3afcc],al
  41a645:	add    BYTE PTR [esi-0x1],cl
  41a648:	add    bh,bh
  41a64a:	mov    al,ds:0x87ff7388
  41a64f:	add    BYTE PTR [ecx+0x28d036cc],cl
  41a655:	add    BYTE PTR [ecx],bl
  41a657:	mov    edi,edi
  41a659:	push   DWORD PTR [ebx+ebp*1-0xdc003d]
  41a660:	inc    DWORD PTR [ebx-0x6052e1]
  41a666:	sub    eax,DWORD PTR [eax]
  41a668:	add    bh,bh
  41a66a:	es inc eax
  41a66c:	fcos   
  41a66e:	mov    esi,0x56ff0083
  41a673:	pop    ss
  41a674:	fadd   DWORD PTR [eax]
  41a676:	xor    eax,0xb000ffff
  41a67b:	aam    0xcc
  41a67d:	mov    DWORD PTR [ecx+0x498989ff],ebx
  41a683:	int    0x21
  41a685:	add    BYTE PTR [ebx-0x7d],bl
  41a688:	inc    DWORD PTR [eax]
  41a68a:	fs push 0x4
  41a68d:	inc    DWORD PTR [ebx]
  41a68f:	add    BYTE PTR [ebx+0x6b5b4bff],al
  41a695:	and    DWORD PTR [edi-0x1ffff34],0x71
  41a69c:	sub    edi,edi
  41a69e:	xchg   ebp,eax
  41a69f:	inc    DWORD PTR [eax]
  41a6a1:	jmp    DWORD PTR [edx]
  41a6a3:	push   ebp
  41a6a4:	test   bh,bh
  41a6a6:	fadd   DWORD PTR [ebx+0x3871ff00]
  41a6ac:	inc    ecx
  41a6ad:	add    DWORD PTR [ebx],0xffffffff
  41a6b0:	add    bh,bh
  41a6b2:	pop    ds
  41a6b3:	pop    eax
  41a6b4:	dec    eax
  41a6b5:	call   FWORD PTR [ebp+0x0]
  41a6b8:	(bad)  
  41a6b9:	(bad)  
  41a6ba:	cli    
  41a6bb:	dec    eax
  41a6bc:	aam    0x0
  41a6be:	add    DWORD PTR [eax],0x48d9ff00
  41a6c4:	call   FWORD PTR es:[ecx]
  41a6c7:	inc    DWORD PTR [ebx-0x555e5400]
  41a6cd:	(bad)  
  41a6ce:	fild   WORD PTR [eax]
  41a6d0:	mov    edi,edi
  41a6d2:	rol    DWORD PTR [esi+0x71],cl
  41a6d5:	add    BYTE PTR [esi+0x0],dl
  41a6d8:	add    ah,cl
  41a6da:	ins    BYTE PTR es:[edi],dx
  41a6db:	xor    al,0x22
  41a6dd:	(bad)  
  41a6de:	in     al,dx
  41a6df:	inc    DWORD PTR [eax]
  41a6e1:	add    DWORD PTR [edi+0x1ff9c31],0x0
  41a6e8:	mov    edi,edi
  41a6ea:	test   al,0x8
  41a6ec:	add    DWORD PTR [ebx-0xff0016],0x5d
  41a6f3:	loopne 0x41a766
  41a6f5:	mov    DWORD PTR [edi+edi*8],ebx
  41a6f8:	(bad)  
  41a6f9:	push   DWORD PTR [ebp+esi*2+0x3a]
  41a6fd:	(bad)  
  41a6fe:	inc    BYTE PTR [eax]
  41a700:	cmp    edi,0x7c
  41a703:	pop    ecx
  41a704:	(bad)  
  41a705:	jmp    DWORD PTR [edx]
  41a707:	add    bh,bh
  41a709:	or     DWORD PTR [ecx],0xffffffc8
  41a70c:	cld    
  41a70d:	sbb    DWORD PTR [edi-0x77],0xffffff89
  41a711:	add    BYTE PTR [edx+0x52ffa32a],bl
  41a717:	inc    DWORD PTR [ebx-0x26635701]
  41a71d:	adc    edx,0xffffffcc
  41a720:	add    bh,bh
  41a722:	or     BYTE PTR [edi],bl
  41a724:	bswap  esp
  41a726:	scas   al,BYTE PTR es:[edi]
  41a727:	(bad)  
  41a728:	(bad)  
  41a729:	dec    DWORD PTR [eax]
  41a72b:	jbe    0x41a6b4
  41a72d:	(bad)  
  41a72e:	jmp    0x940a733
  41a733:	mov    al,ds:0x89fdffbe
  41a738:	(bad)  
  41a739:	(bad)  
  41a73a:	mov    ecx,0xfcff1563
  41a73f:	int3   
  41a740:	add    BYTE PTR [eax],al
  41a742:	fs movsx edi,bh
  41a746:	or     DWORD PTR [eax],eax
  41a748:	add    BYTE PTR [eax],al
  41a74a:	add    al,0xd9
  41a74c:	dec    esi
  41a74d:	jmp    FWORD PTR [ecx-0x1]
  41a750:	add    BYTE PTR [eax],al
  41a752:	sahf   
  41a753:	sti    
  41a754:	out    dx,al
  41a755:	add    BYTE PTR [edx-0x58003301],cl
  41a75b:	outs   dx,DWORD PTR ds:[esi]
  41a75c:	in     eax,0x0
  41a75e:	stos   DWORD PTR es:[edi],eax
  41a75f:	int3   
  41a760:	add    ah,cl
  41a762:	call   0x16425130
  41a767:	inc    DWORD PTR [eax]
  41a769:	add    al,al
  41a76b:	outs   dx,BYTE PTR ds:[esi]
  41a76c:	fs int3 
  41a76e:	push   es
  41a76f:	add    bh,bh
  41a771:	add    cl,dh
  41a773:	jne    0x41a701
  41a775:	call   DWORD PTR [esp+ecx*8+0x0]
  41a779:	push   DWORD PTR [edx]
  41a77b:	lahf   
  41a77c:	test   BYTE PTR [ebx-0x7cff40],0xf4
  41a783:	push   ebp
  41a784:	clc    
  41a785:	int3   
  41a786:	sub    al,0x0
  41a788:	add    bh,bh
  41a78a:	jl     0x41a7d0
  41a78c:	call   0x419890
  41a791:	mov    DWORD PTR [ebp-0x59],ebp
  41a794:	loope  0x41a795
  41a796:	loope  0x41a71b
  41a798:	dec    DWORD PTR [ecx-0x7ce6a94f]
  41a79e:	inc    edi
  41a79f:	int3   
  41a7a0:	cmp    edi,0xffffffbc
  41a7a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7a4:	stos   BYTE PTR es:[edi],al
  41a7a5:	add    al,ch
  41a7a7:	add    BYTE PTR [ebx-0x5c0d1101],al
  41a7ad:	dec    DWORD PTR [esi-0x31330100]
  41a7b3:	mov    eax,ds:0x896bffb8
  41a7b8:	inc    DWORD PTR [ebx-0x6c5626]
  41a7be:	and    BYTE PTR [eax],al
  41a7c0:	inc    DWORD PTR [eax]
  41a7c2:	or     BYTE PTR [ebx-0x5],cl
  41a7c5:	xor    DWORD PTR [ecx-0x1],0xffffffcc
  41a7c9:	(bad)  
  41a7ca:	mov    esi,0xa8008dee
  41a7cf:	add    bh,bh
  41a7d1:	add    ah,bh
  41a7d3:	ficomp WORD PTR [edi-0xd777]
  41a7d9:	jmp    DWORD PTR [edi+edi*4-0x41000a]
  41a7e0:	int3   
  41a7e1:	call   eax
  41a7e3:	loop   0x41a812
  41a7e5:	or     DWORD PTR [eax-0x1],0x0
  41a7e9:	call   FWORD PTR [edi-0x1133c7d6]
  41a7ef:	add    bh,bh
  41a7f1:	add    BYTE PTR [ecx],dh
  41a7f3:	pushf  
  41a7f4:	adc    edi,edi
  41a7f6:	fadd   DWORD PTR [ebx-0x43487c01]
  41a7fc:	int    0xff
  41a7fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ff:	add    bh,bh
  41a801:	add    DWORD PTR [edi+0x3e],0x29
  41a805:	(bad)  
  41a806:	cmp    al,0xff
  41a808:	or     DWORD PTR [ecx-0x2c86c9],0xffffffca
  41a80f:	int3   
  41a810:	add    ah,cl
  41a812:	dec    edx
  41a813:	cmp    al,0x85
  41a815:	(bad)  
  41a816:	jl     0x41a818
  41a818:	cmp    edi,0xffffffe9
  41a81b:	jb     0x41a825
  41a81d:	call   FWORD PTR [ebp+0x200ffff]
  41a823:	and    ebx,edi
  41a825:	add    BYTE PTR [edi-0x77],al
  41a828:	add    bh,bh
  41a82a:	and    DWORD PTR [edx-0x7c3fffe0],0x9d1dff83
  41a834:	adc    DWORD PTR [ebx-0xff5b],eax
  41a83a:	shl    DWORD PTR [edx-0x4],0x83
  41a83e:	inc    ecx
  41a83f:	add    bh,bh
  41a841:	add    BYTE PTR [esi-0x50],cl
  41a844:	bound  eax,QWORD PTR [eax]
  41a846:	or     DWORD PTR [ecx+0x7bdf83ff],0xff0183e4
  41a850:	(bad)  
  41a851:	jmp    FWORD PTR [edi-0x5a]
  41a854:	arpl   di,di
  41a856:	cwde   
  41a857:	add    bh,bh
  41a859:	add    BYTE PTR [ecx],bh
  41a85b:	jl     0x41a84f
  41a85d:	xor    esi,0x0
  41a860:	add    bh,bh
  41a862:	rcr    bl,cl
  41a864:	or     cl,ah
  41a866:	les    eax,FWORD PTR [eax]
  41a868:	inc    DWORD PTR [eax]
  41a86a:	pop    ds
  41a86b:	mov    ebp,0xfff4ff96
  41a870:	(bad)  
  41a871:	jmp    edi
  41a873:	jae    0x41a8e4
  41a875:	call   FWORD PTR [ecx-0x5effff01]
  41a87b:	ja     0x41a8fa
  41a87d:	jmp    DWORD PTR [ecx]
  41a87f:	add    bh,bh
  41a881:	add    BYTE PTR [edx],ah
  41a883:	add    BYTE PTR [edi],cl
  41a885:	cmp    DWORD PTR [ecx+0x18300ff],0x3e
  41a88c:	hlt    
  41a88d:	jmp    FWORD PTR [esi-0x1]
  41a890:	inc    DWORD PTR [eax]
  41a892:	fcom   DWORD PTR [edx-0x97ffea]
  41a898:	int3   
  41a899:	push   DWORD PTR [edi]
  41a89b:	into   
  41a89c:	cld    
  41a89d:	mov    DWORD PTR [ecx-0x15ff0034],ebx
  41a8a3:	test   DWORD PTR [edx],0xcc838000
  41a8a9:	add    BYTE PTR [eax],ah
  41a8ab:	mov    ebp,0xaaff3f
  41a8b0:	add    BYTE PTR [eax],al
  41a8b2:	cmp    eax,0x86ff89af
  41a8b7:	add    ah,cl
  41a8b9:	push   DWORD PTR ds:0x21ffc684
  41a8bf:	add    ah,cl
  41a8c1:	add    BYTE PTR [edx+0x6d003398],bl
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    DWORD PTR [esi+ecx*1-0x7cc57c28],ebx
  41a8d0:	inc    DWORD PTR [eax]
  41a8d2:	mov    ch,0xf4
  41a8d4:	sbb    bh,bh
  41a8d6:	(bad)  
  41a8d8:	mov    DWORD PTR [eax],eax
  41a8da:	in     eax,0xb7
  41a8dc:	iret   
  41a8dd:	mov    ecx,esi
  41a8df:	inc    DWORD PTR [eax]
  41a8e1:	add    BYTE PTR [eax-0x4600b4b2],al
  41a8e7:	(bad)  
  41a8e8:	(bad)  
  41a8e9:	dec    edx
  41a8eb:	js     0x41a923
  41a8ed:	mov    DWORD PTR [edx+0x0],edx
  41a8f0:	inc    DWORD PTR [eax]
  41a8f2:	xchg   ebx,eax
  41a8f3:	jae    0x41a926
  41a8f5:	push   DWORD PTR [ebp-0x67000001]
  41a8fb:	pop    esp
  41a8fc:	and    eax,DWORD PTR [ebx-0x33761a]
  41a902:	nop
  41a903:	inc    ebx
  41a904:	push   0x89ffc9ff
  41a909:	inc    DWORD PTR [edi-0x6b33a91a]
  41a90f:	(bad)  
  41a910:	inc    DWORD PTR [ebx+0x408779]
  41a916:	push   esi
  41a917:	dec    DWORD PTR [ecx+0x6b785000]
  41a91d:	sbb    DWORD PTR [ebp+0x2ff0000],0xffffffb3
  41a924:	(bad)  
  41a927:	mov    DWORD PTR [ebx+0x6af7a900],eax
  41a92d:	add    BYTE PTR [ebx],ah
  41a92f:	add    BYTE PTR [eax],al
  41a931:	call   FWORD PTR [ecx]
  41a933:	neg    DWORD PTR [esi-0x7c7c3300]
  41a939:	adc    DWORD PTR [ecx-0x59334327],0xffffff83
  41a940:	add    BYTE PTR [eax],al
  41a942:	mov    es,edx
  41a944:	jmp    0x427948
  41a949:	(bad)  
  41a94a:	mov    esi,0x9ecce6db
  41a94f:	inc    DWORD PTR [eax]
  41a951:	add    BYTE PTR [eax],dh
  41a953:	pop    esp
  41a954:	repnz sbb esi,0x0
  41a958:	add    BYTE PTR [ebx-0xcdf8b1],al
  41a95e:	pop    edi
  41a95f:	inc    DWORD PTR [ebx+0x23698089]
  41a965:	or     DWORD PTR [ecx+0x0],0xffffffff
  41a969:	call   edi
  41a96b:	pop    edi
  41a96c:	dec    edi
  41a96d:	int3   
  41a96e:	mov    ds:0xe689ccff,eax
  41a973:	mov    ds:0x8942fffd,eax
  41a978:	add    bh,bh
  41a97a:	je     0x41a970
  41a97c:	push   es
  41a97d:	add    BYTE PTR [edx-0x1],ah
  41a980:	inc    DWORD PTR [ebx+0x30f923]
  41a986:	fild   WORD PTR [eax]
  41a988:	(bad)  
  41a989:	push   DWORD PTR [ecx-0x1b002045]
  41a98f:	mov    DWORD PTR [eax],eax
  41a991:	add    DWORD PTR [ebp+0x2e],0xffffffea
  41a995:	push   DWORD PTR [ecx+0x73ff0000]
  41a99b:	jmp    0x8383:0xffafff2e
  41a9a2:	lds    eax,FWORD PTR [edi]
  41a9a4:	ins    BYTE PTR es:[edi],dx
  41a9a5:	add    dh,bl
  41a9a7:	add    bh,bh
  41a9a9:	mov    DWORD PTR [eax],edi
  41a9ab:	inc    esi
  41a9ac:	xor    eax,0xcc0009ff
  41a9b1:	jmp    FWORD PTR [ebp-0x707cc36e]
  41a9b7:	mov    DWORD PTR [eax],eax
  41a9b9:	call   FWORD PTR [ebp-0x1ff9114]
  41a9bf:	add    DWORD PTR [ebx-0x76a5ed7d],0xffffffff
  41a9c6:	mov    dl,0xff
  41a9c8:	inc    DWORD PTR [eax]
  41a9ca:	(bad)  [ebp+0x2c]
  41a9cd:	add    BYTE PTR [esi],al
  41a9cf:	inc    DWORD PTR [ebx-0x2be8c801]
  41a9d5:	inc    ecx
  41a9d7:	inc    DWORD PTR [eax]
  41a9d9:	add    BYTE PTR [ebx+ecx*4-0x7ca8ffcc],al
  41a9e0:	(bad)  
  41a9e1:	(bad)  
  41a9e2:	jnp    0x41aa2a
  41a9e4:	test   eax,0xcc004bcc
  41a9e9:	push   esi
  41a9eb:	mov    ebx,0x83c9ff14
  41a9f0:	add    BYTE PTR [eax],al
  41a9f2:	or     eax,DWORD PTR [ebx-0x52ffe6]
  41a9f8:	cmp    edi,0x2b
  41a9fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9fc:	dec    esi
  41a9fd:	inc    ebx
  41a9ff:	(bad)  
  41aa00:	inc    DWORD PTR [eax]
  41aa02:	sub    al,0xe2
  41aa04:	add    cl,ah
  41aa06:	int    0x83
  41aa08:	mov    esp,ecx
  41aa0a:	popf   
  41aa0b:	ret    
  41aa0c:	pushf  
  41aa0d:	(bad)  
  41aa0e:	cmp    al,BYTE PTR [eax]
  41aa10:	inc    DWORD PTR [ebx-0x33eab780]
  41aa16:	lock inc DWORD PTR [eax]
  41aa19:	add    BYTE PTR [edx-0x21ff8042],dl
  41aa1f:	mov    DWORD PTR [ecx+0x409468ff],ecx
  41aa25:	add    BYTE PTR [ecx+ecx*4],ah
  41aa28:	add    BYTE PTR [ebx-0x337934bb],al
  41aa2e:	int3   
  41aa2f:	add    bh,bh
  41aa31:	jmp    DWORD PTR [esi+0x72]
  41aa34:	or     eax,0xff4aff
  41aa39:	int3   
  41aa3a:	sub    ebp,DWORD PTR [eax+ecx*4]
  41aa3d:	cmp    ecx,0xffffff89
  41aa40:	inc    DWORD PTR [ebx-0x7617c141]
  41aa46:	push   cs
  41aa47:	inc    DWORD PTR [eax]
  41aa49:	cmp    DWORD PTR [esi-0x25],0xffffffbc
  41aa4d:	xor    DWORD PTR [eax+eax*1],0xffffffff
  41aa51:	dec    DWORD PTR [edi+0x7cffd1f2]
  41aa57:	(bad)  
  41aa58:	inc    DWORD PTR [eax]
  41aa5a:	fwait
  41aa5b:	rol    DWORD PTR [eax],cl
  41aa5d:	push   DWORD PTR [edi+edi*8]
  41aa60:	inc    DWORD PTR [ebx-0x7e729f]
  41aa66:	fcos   
  41aa68:	add    BYTE PTR [eax],al
  41aa6a:	dec    ebp
  41aa6b:	sbb    al,0x48
  41aa6d:	add    BYTE PTR [ecx+ecx*4-0x1],bh
  41aa71:	add    al,bl
  41aa73:	cmp    al,0x6c
  41aa75:	add    BYTE PTR [esi],al
  41aa77:	add    BYTE PTR [eax],al
  41aa79:	mov    DWORD PTR [edx],ebp
  41aa7b:	clc    
  41aa7c:	test   edi,edi
  41aa7e:	mov    DWORD PTR [eax],0xe799ccff
  41aa84:	and    bh,bh
  41aa86:	mov    ds:0x72ffffff,al
  41aa8b:	jmp    0x887779
  41aa90:	mov    DWORD PTR [ebx-0x3452a],eax
  41aa96:	adc    edi,edi
  41aa98:	(bad)  
  41aa99:	jmp    DWORD PTR [eax]
  41aa9b:	add    DWORD PTR [edx+0xff37ff],eax
  41aaa1:	add    BYTE PTR [ecx-0x7766b0c],al
  41aaa7:	int3   
  41aaa8:	add    bh,bh
  41aaaa:	es push cs
  41aaac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaad:	add    BYTE PTR [eax-0x1],bh
  41aab0:	inc    DWORD PTR [eax]
  41aab2:	xchg   ebx,eax
  41aab3:	mov    cl,BYTE PTR [esi]
  41aab5:	dec    DWORD PTR [edi-0x7dff007d]
  41aabb:	xor    al,0xe8
  41aabd:	add    BYTE PTR [edi-0x2fffff77],dl
  41aac3:	les    esi,FWORD PTR [edx+0x0]
  41aac6:	push   ecx
  41aac7:	add    ah,cl
  41aac9:	mov    eax,esp
  41aacb:	ret    0xffa5
  41aace:	jno    0x41aacf
  41aad0:	mov    edi,edi
  41aad2:	icebp  
  41aad3:	mov    esi,0x894700fe
  41aad8:	add    bh,bh
  41aada:	fadd   DWORD PTR [ecx]
  41aadc:	jns    0x41aadd
  41aade:	push   esp
  41aadf:	(bad)  
  41aae0:	inc    DWORD PTR [eax]
  41aae2:	cmc    
  41aae3:	xchg   edi,eax
  41aae4:	loope  0x41aae6
  41aae6:	mov    al,0xff
  41aae8:	add    bh,bh
  41aaea:	sub    al,0x4d
  41aaec:	out    dx,al
  41aaed:	int3   
  41aaee:	mov    bh,bh
  41aaf0:	inc    DWORD PTR [ebx-0x763b297a]
  41aaf6:	imul   edi,edi,0xf2d1ffff
  41aafc:	imul   edi,edi,0xcc00ff25
  41ab02:	dec    esi
  41ab03:	pop    ebp
  41ab04:	jns    0x41ab05
  41ab06:	pop    ebp
  41ab07:	(bad)  
  41ab08:	inc    DWORD PTR [ebx-0xf4e3ff]
  41ab0e:	loope  0x41aa93
  41ab10:	dec    DWORD PTR [ecx+0x642e1d]
  41ab16:	cmp    edi,0x1103ff83
  41ab1c:	loope  0x41aaa1
  41ab1e:	jmp    0x673b:0x3ccffff
  41ab25:	add    DWORD PTR [ecx-0x1],0xffffffff
  41ab29:	call   FWORD PTR [edi]
  41ab2b:	test   DWORD PTR [edx-0x76ffbd7d],edx
  41ab31:	int3   
  41ab32:	mov    bl,BYTE PTR [ecx-0xef3302]
  41ab38:	int3   
  41ab39:	inc    DWORD PTR [edi-0x66]
  41ab3c:	cmp    al,0xff
  41ab3e:	sti    
  41ab3f:	cmp    edi,0x0
  41ab42:	push   edi
  41ab43:	stos   DWORD PTR es:[edi],eax
  41ab44:	repz (bad) 
  41ab46:	cli    
  41ab47:	cmp    edi,0xffffffcc
  41ab4a:	cs pushf 
  41ab4c:	xchg   esi,eax
  41ab4d:	jmp    DWORD PTR [ebx]
  41ab4f:	(bad)  
  41ab50:	inc    DWORD PTR [eax]
  41ab52:	push   0xffffffa2
  41ab54:	test   DWORD PTR [eax],0xffff00ad
  41ab5a:	pop    ds
  41ab5b:	retfw  
  41ab5d:	add    BYTE PTR [edx+0xccc00ff],cl
  41ab63:	pop    es
  41ab64:	inc    esi
  41ab65:	inc    DWORD PTR [edi]
  41ab67:	or     esp,0x0
  41ab6a:	shl    al,1
  41ab6c:	fcos   
  41ab6e:	outs   dx,BYTE PTR ds:[esi]
  41ab6f:	add    DWORD PTR [eax],0xffffffff
  41ab72:	dec    ecx
  41ab73:	clc    
  41ab74:	call   0x4bff:0xf000
  41ab7b:	aaa    
  41ab7c:	int3   
  41ab7d:	sbb    ecx,0xffffffff
  41ab80:	add    bh,bh
  41ab82:	gs push 0x62
  41ab85:	(bad)  
  41ab86:	stc    
  41ab87:	add    bh,bh
  41ab89:	mov    edi,ecx
  41ab8b:	and    BYTE PTR [edi],ah
  41ab8d:	dec    DWORD PTR [edx]
  41ab8f:	dec    DWORD PTR [ecx+0x3fab800]
  41ab95:	xor    DWORD PTR [edi],0x0
  41ab98:	mov    edi,edi
  41ab9a:	push   eax
  41ab9b:	cmp    al,BYTE PTR [edx-0x34]
  41ab9e:	pop    es
  41ab9f:	inc    DWORD PTR [ebx+0x2fef2aff]
  41aba5:	jmp    DWORD PTR [ecx-0x1]
  41aba8:	add    bh,bh
  41abaa:	mov    ebp,0x85ffa7fb
  41abaf:	inc    DWORD PTR [eax]
  41abb1:	add    ch,al
  41abb3:	fs in  eax,dx
  41abb5:	jmp    DWORD PTR [edi]
  41abb7:	add    bh,bh
  41abb9:	inc    DWORD PTR [ebx+0x4f]
  41abbc:	xchg   esi,eax
  41abbd:	jmp    DWORD PTR ds:0xe300ffff
  41abc3:	sbb    DWORD PTR [edi+0xefff],edx
  41abc9:	add    BYTE PTR [edx+0x4dffb99d],bl
  41abcf:	int3   
  41abd0:	add    BYTE PTR [ebx-0x93777d],al
  41abd6:	fmul   st(4),st
  41abd8:	(bad)  
  41abd9:	jmp    DWORD PTR [esi]
  41abdb:	push   ebp
  41abdc:	add    bh,bh
  41abde:	sbb    DWORD PTR [eax],eax
  41abe0:	add    bh,bh
  41abe2:	jmp    0xe2417d44
  41abe7:	add    bh,bh
  41abe9:	add    BYTE PTR [ebp-0x2cff85e6],cl
  41abef:	(bad)  
  41abf0:	(bad)  
  41abf1:	inc    DWORD PTR [eax+0x5dff40cc]
  41abf7:	(bad)  
  41abf8:	(bad)  
  41abf9:	jmp    FWORD PTR [ebx-0x2800df12]
  41abff:	(bad)  
  41ac00:	inc    DWORD PTR [eax]
  41ac02:	jp     0x41ac03
  41ac04:	stc    
  41ac05:	push   DWORD PTR [ecx]
  41ac07:	mov    DWORD PTR [eax],eax
  41ac09:	add    BYTE PTR [esi],dl
  41ac0b:	xor    eax,0xdeff98
  41ac10:	mov    DWORD PTR [ebx-0x4d5f04],eax
  41ac16:	inc    esi
  41ac17:	add    bh,bh
  41ac19:	add    BYTE PTR [eax-0x4a001158],dl
  41ac1f:	add    bh,bh
  41ac21:	and    DWORD PTR [edx+0x6a00631e],0x0
  41ac28:	(bad)  
  41ac29:	dec    DWORD PTR [ecx]
  41ac2b:	lea    ebp,[eax+eax*1-0xed]
  41ac32:	test   DWORD PTR [ebp-0xe1331d],eax
  41ac38:	(bad)  
  41ac39:	call   FWORD PTR [ebp+0x72ff0da1]
  41ac3f:	add    bh,bh
  41ac41:	add    BYTE PTR [edi+eax*8],ah
  41ac44:	jb     0x41ac45
  41ac46:	xchg   ebp,eax
  41ac47:	add    BYTE PTR [ebx+0x75969cff],al
  41ac4d:	add    BYTE PTR [edi-0x34],cl
  41ac50:	(bad)  
  41ac51:	jmp    FWORD PTR [ebx-0x56765b92]
  41ac57:	mov    edi,edi
  41ac59:	mov    DWORD PTR [edi+eiz*1-0x62],ecx
  41ac5d:	dec    DWORD PTR [esi-0x7d]
  41ac60:	add    BYTE PTR [eax],al
  41ac62:	lods   eax,DWORD PTR ds:[esi]
  41ac63:	pop    DWORD PTR [edx-0x7c00d700]
  41ac69:	or     DWORD PTR [eax-0x45],0x64
  41ac6d:	add    BYTE PTR [ebx-0x7a000100],cl
  41ac73:	leave  
  41ac74:	(bad)  
  41ac75:	dec    edi
  41ac77:	cmp    edi,0xffffff83
  41ac7a:	and    eax,ebp
  41ac7c:	leave  
  41ac7d:	jmp    ebx
  41ac7f:	int3   
  41ac80:	(bad)  
  41ac81:	(bad)  
  41ac82:	out    dx,al
  41ac83:	inc    eax
  41ac84:	pop    eax
  41ac85:	(bad)  
  41ac86:	call   0x2042ab8b
  41ac8b:	xchg   edi,eax
  41ac8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac8d:	inc    ecx
  41ac8f:	(bad)  
  41ac90:	inc    DWORD PTR [eax]
  41ac92:	in     eax,0x8c
  41ac94:	xchg   ebx,eax
  41ac95:	add    BYTE PTR [eax],dl
  41ac97:	add    DWORD PTR [eax],0x0
  41ac9a:	mov    eax,0x1483fe53
  41ac9f:	cmp    edi,0xffffffff
  41aca2:	fmul   DWORD PTR [edi+0x28]
  41aca5:	call   FWORD PTR [ecx+0x0]
  41aca8:	add    bh,bh
  41acaa:	or     ebx,DWORD PTR [edi+0x26]
  41acad:	jmp    FWORD PTR [ebx-0x7d]
  41acb0:	inc    DWORD PTR [ebx+0xd2818e]
  41acb6:	fdivp  st(7),st
  41acb8:	inc    DWORD PTR [ebx-0x76ffc055]
  41acbe:	mov    ?,edi
  41acc0:	(bad)  
  41acc1:	call   DWORD PTR [edi+0x34ff6317]
  41acc7:	int3   
  41acc8:	dec    DWORD PTR [ecx-0x587af9]
  41acce:	mov    ecx,0x5fff89ff
  41acd3:	sar    BYTE PTR [esi-0xff7500],1
  41acd9:	mov    DWORD PTR [esi+0x14cccaa0],edx
  41acdf:	inc    DWORD PTR [eax]
  41ace1:	add    BYTE PTR [edx+0x11],ah
  41ace4:	mov    DWORD PTR [eax],0xff3e
  41acea:	or     ebx,DWORD PTR [ebp+0x83ff4b]
  41acf0:	or     esp,0xffffffd0
  41acf3:	(bad)  
  41acf4:	jmp    0xffc4fcf8
  41acf9:	dec    edx
  41acfb:	jbe    0x41ace8
  41acfd:	sbb    DWORD PTR [ecx],0x0
  41ad00:	inc    DWORD PTR [eax]
  41ad02:	mov    esi,0x34ff14c6
  41ad07:	add    DWORD PTR [eax],0x0
  41ad0a:	out    dx,eax
  41ad0b:	xchg   edx,eax
  41ad0c:	push   esi
  41ad0d:	add    BYTE PTR ds:0xb000ffff,bh
  41ad13:	cs jns 0x8342364f
  41ad1a:	and    eax,0xa2ff1c1d
  41ad1f:	(bad)  
  41ad20:	inc    DWORD PTR [eax]
  41ad22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad23:	xchg   DWORD PTR [edx+0x0],esp
  41ad26:	in     al,0x0
  41ad28:	cmp    edi,0xffffff91
  41ad2b:	addr16 xor bh,bh
  41ad2e:	xchg   BYTE PTR [eax],al
  41ad30:	inc    DWORD PTR [eax]
  41ad32:	pop    eax
  41ad33:	mov    bh,al
  41ad35:	jmp    eax
  41ad37:	add    DWORD PTR [eax],0x0
  41ad3a:	int    0x97
  41ad3c:	dec    ecx
  41ad3d:	add    BYTE PTR [eax+0x0],bl
  41ad40:	(bad)  
  41ad41:	call   FWORD PTR [eax]
  41ad43:	mov    dh,0xe1
  41ad45:	add    BYTE PTR [ebx-0xdff0100],ah
  41ad4b:	cs mov edx,0x89ebff
  41ad51:	jmp    FWORD PTR [ebx-0x7a7c9622]
  41ad57:	add    bh,bh
  41ad59:	dec    DWORD PTR [eax+0x42]
  41ad5c:	push   edx
  41ad5d:	push   ebp
  41ad5f:	cmp    edi,0xffffffff
  41ad62:	or     BYTE PTR ds:0x89e3ff3f,dh
  41ad68:	(bad)  
  41ad69:	inc    DWORD PTR [ebp-0x70]
  41ad6c:	cwde   
  41ad6d:	call   DWORD PTR [ecx+ecx*4+0x7fbdffff]
  41ad74:	mov    ecx,esp
  41ad76:	sbb    edi,edi
  41ad78:	(bad)  
  41ad79:	jmp    DWORD PTR [ecx+eiz*4-0xf]
  41ad7d:	call   FWORD PTR [edi+0x0]
  41ad80:	add    bh,bh
  41ad82:	rcl    BYTE PTR [edi],cl
  41ad84:	push   ebp
  41ad85:	add    BYTE PTR [ecx+ecx*4-0x77],ch
  41ad89:	int3   
  41ad8a:	ds xchg edi,eax
  41ad8c:	mov    dh,0x0
  41ad8e:	pop    eax
  41ad8f:	dec    esp
  41ad91:	cmp    eax,0x78
  41ad94:	mov    DWORD PTR ds:[edx-0x34],edi
  41ad98:	int3   
  41ad99:	cmp    DWORD PTR [ebx+0x68],0xffffffb8
  41ad9d:	int3   
  41ad9e:	ror    esp,1
  41ada0:	add    ah,cl
  41ada2:	mov    ds:0xf489d13d,eax
  41ada7:	int3   
  41ada8:	dec    esp
  41adaa:	loopne 0x41adb6
  41adac:	push   DWORD PTR fs:[ecx+0x1fff89ff]
  41adb3:	dec    esi
  41adb4:	jmp    0xe8db8
  41adb9:	sbb    DWORD PTR [edi],0xffffffce
  41adbc:	(bad)  
  41adbf:	(bad)  
  41adc0:	inc    DWORD PTR [eax]
  41adc2:	push   ebx
  41adc3:	ss sahf 
  41adc5:	mov    edi,esi
  41adc7:	add    DWORD PTR [eax],0x0
  41adca:	hlt    
  41adcb:	dec    ecx
  41adcc:	cmp    edi,edi
  41adce:	jmp    0x5e40ae5c
  41add3:	pop    ds
  41add4:	adc    eax,DWORD PTR [eax]
  41add6:	mov    DWORD PTR [eax],eax
  41add8:	or     esp,0x16
  41addb:	das    
  41addc:	stc    
  41addd:	call   DWORD PTR [esi]
  41addf:	add    BYTE PTR [ebx+0x50d2c5ff],al
  41ade5:	mov    DWORD PTR [edx+0x0],ebp
  41ade8:	cmp    edi,0xffffffbc
  41adeb:	sar    bh,0x0
  41adee:	test   eax,0xe60000ff
  41adf3:	xchg   si,ax
  41adf5:	(bad)  
  41adf6:	fld    DWORD PTR [eax]
  41adf8:	inc    DWORD PTR [eax]
  41adfa:	xchg   DWORD PTR [edx+eax*4-0xff5201],esp
  41ae01:	call   esi
  41ae03:	icebp  
  41ae04:	jnp    0x41add2
  41ae06:	xor    bh,bh
  41ae08:	cmp    edi,0x50
  41ae0b:	sar    edi,0x83
  41ae0e:	fild   WORD PTR [eax]
  41ae10:	inc    DWORD PTR [eax]
  41ae12:	in     eax,0x22
  41ae14:	cmp    bh,0x5e
  41ae17:	inc    DWORD PTR [eax]
  41ae19:	jmp    FWORD PTR [edi+0x57]
  41ae1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae1d:	add    dl,al
  41ae1f:	(bad)  
  41ae20:	inc    DWORD PTR [eax]
  41ae22:	pop    edi
  41ae23:	dec    esp
  41ae24:	add    eax,DWORD PTR [ebx-0xff3332]
  41ae2a:	repz inc eax
  41ae2c:	nop
  41ae2d:	inc    ecx
  41ae2f:	mov    edi,edi
  41ae31:	push   DWORD PTR [ebx+edx*4-0x78]
  41ae35:	(bad)  
  41ae36:	call   0x85417a3b
  41ae3b:	mov    BYTE PTR [edx],ch
  41ae3d:	mov    DWORD PTR [ecx-0x1],edi
  41ae40:	inc    DWORD PTR [eax]
  41ae42:	inc    ecx
  41ae43:	mov    al,0x4d
  41ae45:	(bad)  
  41ae46:	fld    QWORD PTR [ebx+0x1cd900ff]
  41ae4c:	or     BYTE PTR [ecx-0x7cff7c7f],0x6
  41ae53:	and    al,0xef
  41ae55:	add    BYTE PTR [ecx],al
  41ae57:	add    BYTE PTR [eax],al
  41ae59:	push   DWORD PTR [ecx-0x33]
  41ae5c:	imul   eax,DWORD PTR [eax],0xcc000039
  41ae62:	add    DWORD PTR [esi-0x7cf0ff2e],ebx
  41ae68:	(bad)  
  41ae69:	(bad)  
  41ae6a:	jnp    0x41ae0b
  41ae6c:	and    al,0x0
  41ae6e:	lock add bh,bh
  41ae71:	call   edx
  41ae73:	sub    DWORD PTR [ecx],0x0
  41ae76:	fwait
  41ae77:	add    bh,bh
  41ae79:	inc    DWORD PTR [edx]
  41ae7b:	xchg   edx,eax
  41ae7c:	int    0xff
  41ae7e:	lock inc DWORD PTR [ebx-0x62290e01]
  41ae85:	call   FWORD PTR [eax+eax*1-0x7d]
  41ae89:	sbb    DWORD PTR [edi],0xffffffda
  41ae8c:	fadd   DWORD PTR [eax]
  41ae8e:	test   eax,0x45ff0000
  41ae93:	loopne 0x41af11
  41ae95:	inc    esp
  41ae97:	add    BYTE PTR [eax],al
  41ae99:	add    BYTE PTR [edi-0x6b],cl
  41ae9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae9d:	cmp    ebp,0xffffff83
  41aea0:	int3   
  41aea1:	jmp    FWORD PTR [esi+0x15001ce7]
  41aea7:	add    BYTE PTR [ebx-0x15e3bc00],al
  41aead:	adc    DWORD PTR [ebx-0x32000100],0x3b
  41aeb4:	push   esi
  41aeb5:	add    BYTE PTR [edi],dh
  41aeb7:	cmp    edi,0xffffff83
  41aeba:	test   BYTE PTR [eax-0x7c9d001e],cl
  41aec0:	inc    DWORD PTR [eax]
  41aec2:	adc    DWORD PTR [eax+eax*4-0x7d],edx
  41aec6:	(bad)  
  41aec7:	(bad)  
  41aec8:	(bad)  
  41aec9:	inc    ecx
  41aecb:	fidivr WORD PTR [eax-0x7c7000]
  41aed1:	and    DWORD PTR [ebp-0x6dffcd4f],0x0
  41aed8:	add    bh,bh
  41aeda:	pop    ss
  41aedb:	in     al,0x9b
  41aedd:	mov    DWORD PTR [esi+0x0],ecx
  41aee0:	add    BYTE PTR [eax],al
  41aee2:	jbe    0x41aebb
  41aee4:	iret   
  41aee5:	add    BYTE PTR [eax+eax*1],bl
  41aee8:	(bad)  
  41aee9:	jmp    edx
  41aeeb:	icebp  
  41aeec:	(bad)  
  41aeed:	mov    DWORD PTR [eax+eax*1-0xf60337d],ebx
  41aef4:	arpl   di,di
  41aef6:	cdq    
  41aef7:	add    ah,cl
  41aef9:	add    BYTE PTR [esi],ch
  41aefb:	cld    
  41aefc:	adc    edi,edi
  41aefe:	call   0x9b92:0x6b00ffff
  41af05:	inc    DWORD PTR [ebp+0x33ffff83]
  41af0b:	in     al,0x11
  41af0d:	int3   
  41af0e:	repnz add bh,bh
  41af11:	sub    DWORD PTR [ecx+eiz*2],0x36
  41af15:	call   DWORD PTR [ebx+0x0]
  41af18:	or     esp,0xffffff92
  41af1b:	xchg   edi,eax
  41af1c:	fdivr  st,st(7)
  41af1e:	cmp    bh,bh
  41af20:	inc    DWORD PTR [ebx-0x7c2d5f19]
  41af26:	rol    DWORD PTR [eax],1
  41af28:	add    bh,bh
  41af2a:	scas   al,BYTE PTR es:[edi]
  41af2b:	push   DWORD PTR [eax-0xff3a01]
  41af31:	add    dl,ah
  41af33:	push   edx
  41af34:	push   esp
  41af35:	add    BYTE PTR [esi-0x1],cl
  41af38:	int3   
  41af39:	jmp    esi
  41af3b:	(bad)  
  41af3c:	mov    esp,0xff007089
  41af41:	call   FWORD PTR [ebp+ebp*4-0x7e]
  41af45:	call   DWORD PTR [ecx]
  41af47:	mov    edi,edi
  41af49:	mov    DWORD PTR [ecx-0x27],ecx
  41af4c:	stos   BYTE PTR es:[edi],al
  41af4d:	jmp    FWORD PTR [ebx]
  41af4f:	cmp    edi,0xffffffff
  41af52:	xor    dh,BYTE PTR [eax+eax*1+0xffc200]
  41af59:	call   FWORD PTR [edi]
  41af5b:	adc    ecx,DWORD PTR [ebp-0x7c7ce17d]
  41af61:	add    BYTE PTR [eax+0x36],cl
  41af64:	inc    esp
  41af65:	add    BYTE PTR [edx-0xf7c0001],bh
  41af6b:	mov    esp,DWORD PTR [ebx-0x33003100]
  41af71:	int3   
  41af72:	push   esp
  41af73:	mov    al,0x63
  41af75:	push   DWORD PTR [esi]
  41af77:	(bad)  
  41af78:	inc    DWORD PTR [ebx+0x53610a]
  41af7e:	inc    eax
  41af7f:	add    BYTE PTR [eax],al
  41af81:	add    BYTE PTR [eax-0x60],dl
  41af84:	inc    edi
  41af85:	dec    DWORD PTR [ebp-0x4800ff01]
  41af8b:	sahf   
  41af8c:	jp     0x41af5a
  41af8e:	mov    ah,0xff
  41af90:	(bad)  
  41af91:	jmp    FWORD PTR ds:0x9ff8492
  41af97:	(bad)  
  41af98:	dec    esp
  41af9a:	addr16 inc esi
  41af9c:	aam    0x0
  41af9e:	cld    
  41af9f:	dec    DWORD PTR [ecx-0x5161300]
  41afa5:	or     edx,0xffffffcc
  41afa8:	or     esp,0x4
  41afab:	das    
  41afac:	sbb    al,BYTE PTR [ebx-0x7600dd]
  41afb2:	sar    BYTE PTR [ebx],cl
  41afb4:	gs (bad) 
  41afb6:	jnp    0x41afb8
  41afb8:	(bad)  
  41afb9:	(bad)  
  41afba:	in     al,dx
  41afbb:	mov    esp,0xff03009f
  41afc0:	(bad)  
  41afc1:	(bad)  
  41afc2:	cld    
  41afc3:	mov    esi,0x64ff88
  41afc8:	inc    DWORD PTR [eax]
  41afca:	inc    ebx
  41afcb:	inc    edx
  41afcc:	and    eax,DWORD PTR [eax]
  41afce:	cmp    DWORD PTR [eax],eax
  41afd0:	inc    DWORD PTR [eax]
  41afd2:	aas    
  41afd3:	std    
  41afd4:	mov    bl,0xcc
  41afd6:	inc    BYTE PTR [eax]
  41afd8:	mov    DWORD PTR [eax],eax
  41afda:	or     DWORD PTR [esi-0xe400e1],0x0
  41afe1:	(bad)  
  41afe2:	in     al,dx
  41afe3:	rcr    BYTE PTR [edx-0xc100],1
  41afe9:	inc    DWORD PTR [eax]
  41afeb:	xor    DWORD PTR [ebp+0x839a00],ecx
  41aff1:	int3   
  41aff2:	mov    cl,0x27
  41aff4:	dec    DWORD PTR ss:0x1dffffcc
  41affb:	or     BYTE PTR ds:[eax],al
  41affe:	sahf   
  41afff:	add    bh,bh
  41b001:	add    BYTE PTR [eax-0x4d],bl
  41b004:	xchg   edi,eax
  41b005:	add    BYTE PTR [ebx-0x1],ch
  41b008:	inc    DWORD PTR [eax]
  41b00a:	not    BYTE PTR [edi-0xaf00fa]
  41b010:	inc    DWORD PTR [eax]
  41b012:	(bad)  
  41b013:	mov    esi,0x837000a5
  41b018:	(bad)  
  41b019:	call   DWORD PTR [esi]
  41b01b:	cmp    BYTE PTR [eax+eax*1-0x330022],bl
  41b022:	cdq    
  41b023:	push   eax
  41b024:	jge    0x41afaf
  41b026:	rol    DWORD PTR [eax],1
  41b028:	add    bh,bh
  41b02a:	mov    dl,0xf6
  41b02c:	sbb    bh,bh
  41b02e:	mov    eax,DWORD PTR [eax]
  41b030:	inc    DWORD PTR [eax]
  41b032:	popf   
  41b033:	cmp    al,0x6d
  41b035:	call   FWORD PTR ds:0x68830083
  41b03b:	mov    dl,0x72
  41b03d:	add    BYTE PTR [esi],dl
  41b03f:	or     esp,0x0
  41b042:	test   eax,0x83009826
  41b047:	add    BYTE PTR [eax],al
  41b049:	add    BYTE PTR [ecx+0x5e],cl
  41b04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b04d:	add    BYTE PTR [ecx],bh
  41b04f:	inc    DWORD PTR [eax]
  41b051:	add    BYTE PTR [edi-0x4600c08e],cl
  41b057:	add    DWORD PTR [ebx+0x5e8124ff],0x0
  41b05e:	or     eax,DWORD PTR [eax]
  41b060:	dec    esp
  41b062:	sub    eax,0xdb007894
  41b067:	int3   
  41b068:	inc    DWORD PTR [eax]
  41b06a:	cmp    edi,DWORD PTR [edi-0x47ffa9]
  41b070:	cmp    edi,0xd
  41b073:	bound  edx,QWORD PTR [eax+0x89cfff]
  41b079:	call   FWORD PTR [edi+eiz*8-0x2a]
  41b07d:	int3   
  41b07e:	mov    DWORD PTR [eax],eax
  41b080:	add    BYTE PTR [eax],al
  41b082:	push   es
  41b083:	(bad)
  41b086:	or     DWORD PTR [ecx+0x267d00ff],0x831700cb
  41b090:	cmp    edi,0x9
  41b093:	fiadd  WORD PTR es:[ebx+0xff98]
  41b09a:	jmp    0x64111a4
  41b09f:	(bad)  
  41b0a0:	dec    esp
  41b0a2:	jmp    0x41b0a9
  41b0a4:	fild   WORD PTR [ebx+0xffffd4]
  41b0aa:	xchg   esp,eax
  41b0ab:	(bad)  
  41b0ac:	loop   0x41b037
  41b0ae:	hlt    
  41b0af:	(bad)  
  41b0b0:	(bad)  
  41b0b1:	call   ecx
  41b0b3:	sub    BYTE PTR [edx-0xffc001],ah
  41b0b9:	add    BYTE PTR [edi+esi*8+0x69],al
  41b0bd:	add    BYTE PTR [edi-0x1],bl
  41b0c0:	add    BYTE PTR [eax],al
  41b0c2:	jo     0x41b086
  41b0c4:	test   DWORD PTR [ebx-0x7cffff97],eax
  41b0ca:	ds add eax,0xffda830f
  41b0d0:	add    bh,bh
  41b0d2:	cmp    DWORD PTR [ebp-0x47],edx
  41b0d5:	dec    DWORD PTR [esi-0x48ffff01]
  41b0db:	ja     0x41b155
  41b0dd:	add    BYTE PTR [eax-0x1],dl
  41b0e0:	inc    DWORD PTR [eax]
  41b0e2:	push   esp
  41b0e3:	into   
  41b0e4:	or     eax,0x83ff50ff
  41b0e9:	push   DWORD PTR [ebp-0x2cff6361]
  41b0ef:	add    BYTE PTR [eax],al
  41b0f1:	int3   
  41b0f2:	mov    edx,0x3eff23af
  41b0f7:	dec    esp
  41b0f9:	sub    DWORD PTR [ecx],0xffffffaa
  41b0fc:	(bad)  
  41b0fd:	jmp    edx
  41b0ff:	add    bh,bh
  41b101:	inc    DWORD PTR [esi-0x26]
  41b104:	into   
  41b105:	add    ch,bl
  41b107:	(bad)  
  41b108:	inc    DWORD PTR [eax]
  41b10a:	push   0xffffffe9
  41b10c:	sub    edi,edi
  41b10e:	iret   
  41b10f:	inc    DWORD PTR [ebx+0x555430ff]
  41b115:	or     DWORD PTR [ebp+0x61cc0000],0x5e
  41b11c:	xor    al,0xff
  41b11e:	cmp    bh,bh
  41b120:	mov    esp,ecx
  41b122:	push   0x37
  41b124:	xchg   esi,eax
  41b125:	push   DWORD PTR [eax-0x1]
  41b128:	inc    DWORD PTR [eax]
  41b12a:	rcr    BYTE PTR [eax],cl
  41b12c:	mov    ?,edi
  41b12e:	lock int3 
  41b130:	inc    DWORD PTR [ebx-0x3312699a]
  41b136:	pop    ds
  41b137:	(bad)  
  41b138:	inc    DWORD PTR [eax]
  41b13a:	sbb    DWORD PTR [esi],esi
  41b13c:	inc    edi
  41b13d:	add    dh,bh
  41b13f:	inc    DWORD PTR [ebx-0x3a790f7d]
  41b145:	jmp    FWORD PTR [edi+0x2589ff00]
  41b14b:	mov    al,0xac
  41b14d:	adc    DWORD PTR ds:0x63ffffcc,0x7f
  41b154:	mov    bh,bh
  41b156:	and    eax,0xe4cc0000
  41b15b:	stos   DWORD PTR es:[edi],eax
  41b15c:	je     0x41b0e1
  41b15e:	xor    edi,edi
  41b160:	int3   
  41b161:	(bad)  
  41b162:	jge    0x41b0f2
  41b164:	call   0x7d83:0xff0082ff
  41b16b:	daa    
  41b16c:	fdivr  st,st(7)
  41b16e:	push   esp
  41b16f:	mov    DWORD PTR [eax],eax
  41b171:	(bad)  
  41b172:	jmp    0x4640e580
  41b177:	inc    DWORD PTR [ebx+0x62e266ff]
  41b17d:	sub    DWORD PTR [edi+0x5cffffff],0x46
  41b184:	pop    ebp
  41b185:	inc    DWORD PTR [ebx-0x4b007c77]
  41b18b:	push   eax
  41b18c:	fadd   QWORD PTR [ebx+0xff65]
  41b192:	cmp    eax,0xe1ff004b
  41b197:	add    bh,bh
  41b199:	add    BYTE PTR [ebx],dl
  41b19b:	test   eax,0x830bcc03
  41b1a0:	inc    DWORD PTR [eax]
  41b1a2:	mov    dh,0x6d
  41b1a4:	jns    0x41b1a5
  41b1a6:	mov    esi,0xbaff0083
  41b1ab:	push   ds
  41b1ac:	sahf   
  41b1ad:	add    BYTE PTR [ebx+0xd890000],bl
  41b1b3:	and    bh,al
  41b1b5:	and    DWORD PTR [edx+0x2100ffff],0xffffffaa
  41b1bc:	dec    ebx
  41b1bd:	add    BYTE PTR [ebx-0x77],dh
  41b1c0:	(bad)  
  41b1c1:	call   FWORD PTR [edi-0x187c5968]
  41b1c7:	(bad)  
  41b1c8:	(bad)  
  41b1c9:	(bad)  
  41b1ca:	mov    ecx,0x518399a5
  41b1cf:	dec    esp
  41b1d1:	cmp    DWORD PTR [edx+edx*4-0x7c2dff41],0x0
  41b1d9:	call   FWORD PTR [edi+0xe]
  41b1dc:	jl     0x41b167
  41b1de:	xor    edi,edi
  41b1e0:	cmp    edi,0x40
  41b1e3:	retf   0xff72
  41b1e6:	push   edx
  41b1e7:	inc    DWORD PTR [eax]
  41b1e9:	jmp    DWORD PTR [edx+0x1aff4369]
  41b1ef:	mov    DWORD PTR [eax],eax
  41b1f1:	add    bl,bl
  41b1f3:	mov    cl,0x6f
  41b1f5:	add    BYTE PTR [eax],dl
  41b1f7:	add    BYTE PTR [eax],al
  41b1f9:	jmp    FWORD PTR ds:0xf8fff1e9
  41b1ff:	add    DWORD PTR [eax],0xffffffff
  41b202:	sahf   
  41b203:	xor    ch,al
  41b205:	add    BYTE PTR [esi-0x7d],dl
  41b208:	int3   
  41b209:	int3   
  41b20a:	int3   
  41b20b:	int3   
  41b20c:	int3   
  41b20d:	int3   
  41b20e:	int3   
  41b20f:	int3   
  41b210:	int3   
  41b211:	(bad)  
  41b212:	out    dx,eax
  41b213:	mov    ah,0xff
  41b215:	add    BYTE PTR [edi],ch
  41b217:	or     DWORD PTR ds:0x3889ffff,0xffffffb5
  41b21e:	loop   0x41b28d
  41b220:	add    ah,cl
  41b222:	shr    BYTE PTR [esi+0x0],1
  41b225:	add    dl,ch
  41b227:	(bad)  
  41b228:	(bad)  
  41b229:	inc    DWORD PTR [ebx-0x46ba0034]
  41b22f:	push   edx
  41b230:	int3   
  41b231:	inc    edi
  41b233:	cs (bad) 
  41b235:	jmp    esi
  41b237:	add    BYTE PTR [ebx-0x33ff0034],cl
  41b23d:	aas    
  41b23e:	mov    al,BYTE PTR [esi+0x0]
  41b241:	(bad)  
  41b242:	fnstenv [esp+ecx*8]
  41b245:	dec    DWORD PTR [esi-0x1]
  41b248:	jne    0x41b216
  41b24a:	(bad)  
  41b24b:	jmp    FWORD PTR [edx]
  41b24d:	out    dx,al
  41b24e:	les    ebp,FWORD PTR [edi]
  41b250:	cmp    edi,0xffffffba
  41b253:	in     al,0x0
  41b255:	jmp    FWORD PTR [edi-0x76a134]
  41b25b:	inc    ebx
  41b25d:	repz dec esp
  41b25f:	mov    bh,bh
  41b261:	jmp    DWORD PTR [eax-0x12]
  41b264:	mov    edi,edi
  41b266:	inc    eax
  41b267:	inc    DWORD PTR ds:0x5283ffff
  41b26d:	push   0x6c
  41b26f:	mov    al,0xff
  41b271:	int3   
  41b272:	pop    ebp
  41b273:	ret    0x89
  41b276:	mov    ebx,0xffcaff
  41b27b:	add    BYTE PTR [ebx-0x7c8e2281],ah
  41b281:	add    edx,0x60
  41b284:	inc    DWORD PTR [eax]
  41b286:	loope  0x41b287
  41b288:	icebp  
  41b289:	(bad)  
  41b28a:	(bad)  
  41b28b:	(bad)  
  41b28c:	fiadd  WORD PTR [edx+0x89da55]
  41b292:	sub    DWORD PTR [esi-0x8ff77],0xffcc8363
  41b29c:	lock int3 
  41b29e:	mov    ah,0xd0
  41b2a0:	add    BYTE PTR [eax],al
  41b2a2:	dec    esi
  41b2a4:	inc    DWORD PTR [ebx-0x810061]
  41b2aa:	(bad)  
  41b2ab:	call   DWORD PTR [esi-0xd4f76f]
  41b2b1:	xor    DWORD PTR [ebx-0x4],0xffffffff
  41b2b5:	adc    DWORD PTR [edi+edi*8+0x5],0xffffff83
  41b2ba:	cmp    edi,0xffffffba
  41b2bd:	sub    bl,dh
  41b2bf:	cmp    BYTE PTR [ebx-0x72b201],al
  41b2c5:	(bad)  
  41b2c6:	cmp    DWORD PTR [eax],eax
  41b2c8:	mov    BYTE PTR [ebx+0x6e6683ff],0xe4
  41b2cf:	sbb    DWORD PTR [ebx+0x3543ff],eax
  41b2d5:	dec    DWORD PTR [edx-0xd301]
  41b2db:	cmp    DWORD PTR [esi],0x4f
  41b2de:	std    
  41b2df:	mov    eax,0x7c5c00ff
  41b2e4:	add    bh,bh
  41b2e6:	mov    edx,0xff89adff
  41b2eb:	(bad)  
  41b2ec:	mov    ebx,0x898df94e
  41b2f1:	add    BYTE PTR [ebx],al
  41b2f3:	fadd   DWORD PTR [eax]
  41b2f5:	int3   
  41b2f6:	mov    bl,0xff
  41b2f8:	pop    ebp
  41b2f9:	int3   
  41b2fa:	add    BYTE PTR [ecx+0x73fe2508],cl
  41b300:	add    BYTE PTR [ecx+0xff6635],cl
  41b306:	or     bh,bh
  41b308:	nop
  41b309:	add    BYTE PTR [ebx-0x168e1a00],al
  41b30f:	fld    DWORD PTR [ebx-0x198c7d]
  41b315:	jmp    FWORD PTR [eax+0xff7d00]
  41b31b:	int3   
  41b31c:	cmp    bh,bl
  41b31e:	xchg   ecx,eax
  41b31f:	or     bh,bh
  41b321:	add    dh,cl
  41b323:	add    edi,edi
  41b325:	add    BYTE PTR [esp+ecx*8-0x7c00002c],dh
  41b32c:	fstp   QWORD PTR [ecx]
  41b32e:	ja     0x41b2b3
  41b330:	add    bh,bh
  41b332:	cwde   
  41b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b334:	(bad)  
  41b335:	(bad)  
  41b336:	stc    
  41b337:	(bad)  
  41b338:	sti    
  41b339:	add    BYTE PTR [eax],al
  41b33b:	mov    DWORD PTR [eax],edx
  41b33d:	push   es
  41b33e:	test   al,0xe1
  41b340:	add    BYTE PTR [eax],al
  41b342:	mov    bl,0x77
  41b344:	(bad)  
  41b345:	dec    edx
  41b347:	(bad)  
  41b348:	jnp    0x41b2cd
  41b34a:	add    BYTE PTR [eax],al
  41b34c:	xchg   ebp,eax
  41b34d:	bound  esp,QWORD PTR [ebx-0x32]
  41b350:	cmp    edi,0x6
  41b353:	fadd   DWORD PTR [ebx-0x68008a00]
  41b359:	(bad)  
  41b35a:	(bad)  
  41b35b:	(bad)  
  41b35c:	jl     0x41b317
  41b35e:	dec    esp
  41b35f:	cli    
  41b360:	mov    DWORD PTR [eax],eax
  41b362:	test   edx,0xcfff83
  41b368:	aaa    
  41b369:	inc    DWORD PTR [eax]
  41b36b:	dec    DWORD PTR [edx+0x70]
  41b36e:	mov    ecx,0xb3ff831a
  41b373:	or     bh,bh
  41b375:	sub    DWORD PTR [eax-0x1],0xffffffe7
  41b379:	add    bh,bh
  41b37b:	int3   
  41b37c:	and    eax,0xdb2459
  41b381:	add    BYTE PTR ds:0x88ffff84,cl
  41b387:	mov    DWORD PTR [ebx+0x0],ebx
  41b38a:	dec    esp
  41b38c:	jecxz  0x41b376
  41b38e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b38f:	adc    eax,0x805100ff
  41b394:	inc    DWORD PTR [eax]
  41b396:	pop    esi
  41b397:	and    esp,0xffffffff
  41b39a:	dec    esp
  41b39c:	repnz pop edx
  41b39e:	pop    ds
  41b39f:	cmp    edi,0xffffffff
  41b3a2:	inc    ebp
  41b3a3:	xchg   ecx,eax
  41b3a4:	int3   
  41b3a5:	sub    ebx,0x0
  41b3a8:	dec    esi
  41b3a9:	add    BYTE PTR [eax],al
  41b3ab:	sub    DWORD PTR [esi],0xffffff82
  41b3ae:	mov    al,0xde
  41b3b0:	(bad)  
  41b3b1:	call   FWORD PTR [edi-0x5d]
  41b3b4:	(bad)  
  41b3b5:	push   ebp
  41b3b7:	mov    DWORD PTR [edi+edi*8+0x0],edi
  41b3bb:	mov    esi,ebp
  41b3bd:	push   edi
  41b3be:	pop    ss
  41b3bf:	enter  0xffff,0xdf
  41b3c3:	dec    edx
  41b3c4:	cmp    edi,0x56
  41b3c7:	mov    DWORD PTR [eax+0x4400ff00],esi
  41b3cd:	xor    eax,0x89ff305c
  41b3d2:	int3   
  41b3d3:	cs add bh,bh
  41b3d6:	dec    esi
  41b3d7:	sub    DWORD PTR [ebp-0x64000100],0x8
  41b3de:	icebp  
  41b3df:	rol    DWORD PTR [eax],cl
  41b3e1:	jmp    ebp
  41b3e3:	cmp    eax,0x89ebffff
  41b3e8:	jnp    0x41b36d
  41b3ea:	cmp    edi,0xffffffd7
  41b3ed:	xchg   esp,eax
  41b3ee:	push   ds
  41b3ef:	sbb    al,0x89
  41b3f1:	sbb    DWORD PTR [ecx-0x5a330052],0xffffffff
  41b3f8:	out    0xff,al
  41b3fa:	inc    DWORD PTR [eax]
  41b3fc:	cmp    dh,BYTE PTR [ebx+eax*2]
  41b3ff:	pop    esp
  41b400:	dec    esp
  41b402:	test   eax,0xc89ff22
  41b407:	int3   
  41b408:	iret   
  41b409:	cmp    edi,0xffffffff
  41b40c:	mov    ah,0x8
  41b40e:	push   ss
  41b40f:	add    esp,ecx
  41b411:	call   DWORD PTR [esi+edx*8-0x740001]
  41b418:	jg     0x41b419
  41b41a:	add    BYTE PTR [eax],al
  41b41c:	xor    edi,esi
  41b41e:	cmp    al,0xee
  41b420:	or     esp,0x18
  41b423:	cmp    eax,DWORD PTR [eax]
  41b425:	jmp    DWORD PTR [ebx-0x76ff3a00]
  41b42b:	sbb    DWORD PTR [eax-0x30],0x61
  41b42f:	pop    ebx
  41b430:	(bad)  
  41b431:	push   DWORD PTR [eax-0x66]
  41b434:	add    ah,cl
  41b436:	push   esi
  41b437:	dec    DWORD PTR [ecx]
  41b439:	(bad)  
  41b43a:	inc    DWORD PTR [eax]
  41b43c:	shr    DWORD PTR [edi-0x7a3c],0xdc
  41b443:	and    edi,edi
  41b445:	dec    DWORD PTR [edi-0x1]
  41b448:	mov    cl,0x0
  41b44a:	dec    DWORD PTR [ecx+0x2971b2cd]
  41b450:	inc    DWORD PTR [eax]
  41b452:	stc    
  41b453:	push   ds
  41b454:	add    bh,bh
  41b456:	cld    
  41b457:	(bad)  
  41b458:	fadd   DWORD PTR [eax]
  41b45a:	inc    DWORD PTR [eax]
  41b45c:	cmp    DWORD PTR gs:[ecx-0x34ffff3e],ebx
  41b463:	popf   
  41b464:	(bad)  
  41b465:	jmp    FWORD PTR [ebx-0x8877]
  41b46b:	jmp    DWORD PTR [esi-0x74]
  41b46e:	pop    edx
  41b46f:	aad    0x83
  41b471:	int3   
  41b472:	je     0x41b443
  41b474:	or     DWORD PTR [ecx-0xb67cb4],0xffffffff
  41b47b:	jmp    ebp
  41b47d:	mov    ah,0x6b
  41b47f:	fld    DWORD PTR [eax]
  41b481:	mov    DWORD PTR [ecx-0x30],esi
  41b484:	int3   
  41b485:	push   DWORD PTR [esi-0xd434]
  41b48b:	(bad)  
  41b48c:	fadd   QWORD PTR [eax]
  41b48e:	mov    ds:0x7883ffa3,eax
  41b493:	dec    edi
  41b494:	add    BYTE PTR [eax],al
  41b496:	repnz add BYTE PTR [ecx-0x1],cl
  41b49a:	(bad)  
  41b49b:	(bad)  
  41b49c:	js     0x41b518
  41b49e:	clc    
  41b49f:	cmp    al,0xff
  41b4a1:	dec    DWORD PTR [esi]
  41b4a3:	cld    
  41b4a4:	dec    esp
  41b4a6:	dec    esp
  41b4a8:	iret   
  41b4a9:	dec    DWORD PTR [ecx-0x77829a7d]
  41b4af:	mov    al,0xff
  41b4b1:	add    bh,ah
  41b4b3:	add    eax,0x83d90083
  41b4b8:	nop
  41b4b9:	add    BYTE PTR [eax],al
  41b4bb:	call   DWORD PTR [edx+esi*1-0x47]
  41b4bf:	mov    ecx,0x636889ff
  41b4c4:	inc    DWORD PTR [eax]
  41b4c6:	ins    DWORD PTR es:[edi],dx
  41b4c7:	call   DWORD PTR [eax]
  41b4c9:	(bad)  
  41b4ca:	(bad)  
  41b4cb:	(bad)  
  41b4cc:	jmp    0x41b4e2
  41b4ce:	cmp    edx,esi
  41b4d0:	add    BYTE PTR [ecx+0xfff796],cl
  41b4d6:	push   esp
  41b4d7:	inc    DWORD PTR [eax+eax*1-0x1]
  41b4db:	mov    ecx,edi
  41b4dd:	test   BYTE PTR [ebx],dh
  41b4df:	xor    edi,edi
  41b4e1:	or     eax,0xfffffff5
  41b4e4:	(bad)  
  41b4e5:	inc    DWORD PTR [eax+eax*1+0x2d]
  41b4e9:	cmp    edi,0x0
  41b4ec:	test   DWORD PTR [ebx+0x56a9],esp
  41b4f2:	xor    esi,DWORD PTR [esi-0x1]
  41b4f5:	cmp    DWORD PTR [esi-0xffec7d],0xffffffff
  41b4fc:	add    dh,BYTE PTR [edx+0x899a13]
  41b502:	stc    
  41b503:	scas   eax,DWORD PTR es:[edi]
  41b504:	cmp    edi,0x70
  41b507:	call   FWORD PTR [ebx]
  41b509:	add    DWORD PTR [eax],0xffffff83
  41b50c:	xor    DWORD PTR [edx+0x2],ecx
  41b50f:	dec    ebx
  41b510:	mov    edi,edi
  41b512:	test   BYTE PTR [edx+0x88ffff],0x89
  41b519:	add    BYTE PTR [ebx+0x5d3ddbff],al
  41b51f:	adc    eax,0xb0f3ffff
  41b524:	(bad)  
  41b525:	inc    esi
  41b527:	(bad)  
  41b528:	sti    
  41b529:	add    bh,bh
  41b52b:	call   DWORD PTR [eax-0xd7a26e]
  41b531:	jmp    FWORD PTR [ecx-0x6a]
  41b534:	dec    DWORD PTR [ecx-0x5cff14]
  41b53a:	add    BYTE PTR [eax],al
  41b53c:	pop    edi
  41b53d:	sbb    BYTE PTR [ebp-0x59],dh
  41b540:	add    BYTE PTR [eax],al
  41b542:	pop    es
  41b543:	push   ds
  41b544:	add    bh,bh
  41b546:	aas    
  41b547:	jmp    edx
  41b549:	(bad)  
  41b54a:	(bad)  
  41b54b:	jmp    FWORD PTR [edx]
  41b54d:	retf   
  41b54e:	pushf  
  41b54f:	fwait
  41b550:	(bad)  
  41b551:	dec    ebx
  41b553:	mov    cl,0x83
  41b555:	call   DWORD PTR [ecx-0x1]
  41b558:	imul   eax,DWORD PTR [ebx-0x58a4ff01],0xff9c34
  41b562:	add    eax,DWORD PTR [esi-0x2b0000]
  41b568:	push   ebx
  41b569:	dec    esp
  41b56b:	int3   
  41b56c:	push   cs
  41b56d:	stc    
  41b56e:	sahf   
  41b56f:	and    al,0x89
  41b571:	int3   
  41b572:	fs sar bh,0xff
  41b576:	call   0x9d89:0xcc83c4ff
  41b57d:	mov    es,WORD PTR [ebp+0x76ffcca5]
  41b583:	(bad)  
  41b584:	inc    DWORD PTR [eax]
  41b586:	mov    edi,0xffff58cc
  41b58b:	call   esp
  41b58d:	mov    ebx,0xff830336
  41b592:	(bad)  
  41b593:	mov    edx,0xff2a0089
  41b598:	push   ecx
  41b599:	inc    DWORD PTR [eax]
  41b59b:	int3   
  41b59c:	jg     0x41b5a4
  41b59e:	out    0xba,eax
  41b5a0:	add    BYTE PTR [ebx-0x61e4],al
  41b5a6:	push   ds
  41b5a7:	or     DWORD PTR [edi+edi*8],0xffffffcc
  41b5ab:	call   DWORD PTR [edx]
  41b5ad:	repz or dl,ah
  41b5b0:	add    ah,cl
  41b5b2:	jmp    0x3a41b56a
  41b5b7:	dec    DWORD PTR ds:0x24ccffff
  41b5bd:	daa    
  41b5be:	out    dx,al
  41b5bf:	loopne 0x41b5c1
  41b5c1:	dec    ecx
  41b5c3:	(bad)  
  41b5c4:	inc    DWORD PTR [eax]
  41b5c6:	adc    al,BYTE PTR [eax]
  41b5c8:	cmp    edi,0xffffffcc
  41b5cb:	call   FWORD PTR [ebx+esi*2]
  41b5ce:	dec    edi
  41b5cf:	sbb    BYTE PTR [eax],al
  41b5d1:	add    BYTE PTR [edi],ah
  41b5d3:	fild   WORD PTR [eax]
  41b5d5:	mov    DWORD PTR [eax+eax*1-0x7cff3385],edx
  41b5dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5dd:	sub    BYTE PTR [esi+0x65ffff6c],0xd4
  41b5e4:	add    bh,bh
  41b5e6:	jle    0x41b5b4
  41b5e8:	or     BYTE PTR [eax],al
  41b5ea:	inc    DWORD PTR [eax]
  41b5ec:	push   0xffffffef
  41b5ee:	iret   
  41b5ef:	dec    esi
  41b5f0:	or     DWORD PTR [ecx-0x7c00e400],0xffffffd1
  41b5f7:	add    BYTE PTR [edi+0x0],ah
  41b5fa:	(bad)  
  41b5fb:	dec    DWORD PTR [eax+0x5f]
  41b5fe:	mov    ds:0x1300ffa1,eax
  41b603:	or     eax,DWORD PTR [eax]
  41b605:	inc    ebp
  41b607:	(bad)  
  41b608:	(bad)  
  41b60a:	add    ah,cl
  41b60c:	or     eax,0x5757ff
  41b611:	cmp    DWORD PTR [ebx-0x1a0000e3],0xffffffff
  41b618:	and    edi,edi
  41b61a:	inc    DWORD PTR [ebx+0x3046f1fc]
  41b620:	int3   
  41b621:	(bad)  
  41b622:	jmp    FWORD PTR [edi+edi*8-0xb76da01]
  41b629:	(bad)  
  41b62a:	inc    DWORD PTR [eax]
  41b62c:	leave  
  41b62d:	fcmove st,st(2)
  41b62f:	sar    edi,1
  41b631:	or     DWORD PTR [esi-0x19],0xffffffff
  41b635:	jmp    FWORD PTR [ecx]
  41b637:	mov    DWORD PTR [ecx],eax
  41b639:	add    DWORD PTR [eax],0xffffffff
  41b63c:	out    dx,eax
  41b63d:	pop    ss
  41b63e:	mov    ch,0x98
  41b640:	add    bh,bh
  41b642:	pop    DWORD PTR [edx-0x957c77]
  41b648:	mov    edx,0xa6ff83ff
  41b64d:	adc    DWORD PTR [edi+0x4a],ebx
  41b650:	add    DWORD PTR [ebx-0xc1d6],0x63
  41b657:	and    ebx,0x0
  41b65a:	inc    DWORD PTR [eax]
  41b65c:	mov    edi,0x83ab110d
  41b661:	jmp    FWORD PTR [eax-0x20]
  41b664:	add    BYTE PTR [eax],al
  41b666:	mov    ecx,0x89cc95ff
  41b66b:	mov    DWORD PTR [esi],eax
  41b66d:	adc    DWORD PTR [edi],ebx
  41b66f:	pusha  
  41b670:	inc    DWORD PTR [eax]
  41b672:	inc    ebx
  41b673:	xchg   ecx,eax
  41b674:	add    bh,bh
  41b676:	pop    edx
  41b677:	mov    DWORD PTR [ebx+0x0],ebp
  41b67a:	dec    esp
  41b67c:	pop    ss
  41b67d:	dec    edx
  41b67e:	add    eax,0x9cffffd3
  41b683:	inc    esp
  41b684:	(bad)  
  41b685:	jmp    DWORD PTR [edi+edi*8-0xa9]
  41b68c:	in     eax,0x33
  41b68e:	outs   dx,BYTE PTR ds:[esi]
  41b68f:	sti    
  41b690:	add    BYTE PTR [eax],al
  41b692:	ss adc eax,0xcc21ffcc
  41b698:	test   DWORD PTR [ecx-0x680b0100],ecx
  41b69e:	ins    BYTE PTR es:[edi],dx
  41b69f:	push   edi
  41b6a0:	inc    DWORD PTR [ebx-0xffcf23]
  41b6a6:	mov    ch,0xff
  41b6a8:	bound  eax,QWORD PTR [ebx-0x51290077]
  41b6ae:	push   0x46
  41b6b0:	add    ah,cl
  41b6b2:	stc    
  41b6b3:	lock add BYTE PTR [eax],al
  41b6b6:	loopne 0x41b6b7
  41b6b8:	add    DWORD PTR [eax],0x0
  41b6bb:	mov    DWORD PTR [edi-0x7610a972],esp
  41b6c1:	dec    ecx
  41b6c3:	or     BYTE PTR [eax],al
  41b6c5:	call   ebp
  41b6c7:	int3   
  41b6c8:	jns    0x41b696
  41b6ca:	cmp    edi,0xffffffc2
  41b6cd:	xchg   esi,eax
  41b6ce:	rcr    esp,0x0
  41b6d1:	jmp    FWORD PTR [edx+0x1f]
  41b6d4:	add    bh,bh
  41b6d6:	test   DWORD PTR [eax],0x89ffff06
  41b6dc:	pushf  
  41b6dd:	aam    0x85
  41b6df:	add    BYTE PTR cs:[eax],al
  41b6e2:	mov    edx,0x12008346
  41b6e7:	add    BYTE PTR ds:0x850000ff,dl
  41b6ed:	inc    eax
  41b6ee:	push   edi
  41b6ef:	mov    ds:0x705600ff,al
  41b6f4:	mov    edi,edi
  41b6f6:	push   esi
  41b6f7:	add    BYTE PTR [eax],dl
  41b6f9:	(bad)  
  41b6fa:	inc    DWORD PTR [eax]
  41b6fc:	push   ecx
  41b6fd:	mov    edi,DWORD PTR [edx-0x4f0033b2]
  41b703:	inc    ecx
  41b704:	cmp    edi,0x60
  41b707:	jmp    FWORD PTR [edx-0x31770000]
  41b70d:	jb     0x41b6f7
  41b70f:	xchg   BYTE PTR [eax],al
  41b711:	jmp    FWORD PTR [ebx]
  41b713:	(bad)  
  41b714:	(bad)  
  41b715:	dec    DWORD PTR [eax]
  41b717:	add    BYTE PTR [ecx-0x34],cl
  41b71a:	add    bh,bh
  41b71c:	addr16 pop ds
  41b71e:	sti    
  41b71f:	sbb    edi,edi
  41b721:	add    BYTE PTR [ebx],ah
  41b723:	dec    ebx
  41b724:	(bad)  
  41b725:	inc    DWORD PTR [edi]
  41b727:	inc    DWORD PTR [esp+ecx*8]
  41b72a:	add    bh,bh
  41b72c:	ds stc 
  41b72e:	sub    DWORD PTR [esi-0x3617ff01],edx
  41b734:	add    bh,bh
  41b736:	pushf  
  41b737:	dec    DWORD PTR [edx+0x21ffffcc]
  41b73d:	mov    esi,0xff00515f
  41b742:	mov    dh,0x20
  41b744:	add    BYTE PTR [eax],al
  41b746:	scas   al,BYTE PTR es:[edi]
  41b747:	add    BYTE PTR [edi-0x1],dh
  41b74a:	(bad)  
  41b74b:	jmp    FWORD PTR [esi+0xae6cdc]
  41b751:	add    BYTE PTR [esi+0x60],dh
  41b754:	(bad)  
  41b755:	jmp    DWORD PTR [esi]
  41b757:	add    ch,al
  41b759:	(bad)  
  41b75a:	(bad)  
  41b75b:	(bad)  
  41b75c:	jnp    0x41b770
  41b75e:	sbb    DWORD PTR [esi-0x1],esi
  41b761:	xor    esi,0x60
  41b764:	add    BYTE PTR [ebx-0x4400b1],al
  41b76a:	cmp    edi,0x4c
  41b76d:	push   ds
  41b76e:	xchg   esi,eax
  41b76f:	push   ecx
  41b770:	inc    DWORD PTR [ebx-0x7cffeb58]
  41b776:	cli    
  41b777:	int3   
  41b778:	lods   eax,DWORD PTR ds:[esi]
  41b779:	inc    DWORD PTR [eax]
  41b77b:	add    BYTE PTR [edi-0xcb05d4],al
  41b781:	(bad)  
  41b782:	cmp    DWORD PTR [edi],ecx
  41b784:	add    bh,bh
  41b786:	push   0x83ff1900
  41b78b:	add    ah,cl
  41b78d:	sbb    esp,esp
  41b78f:	sub    bh,bh
  41b791:	(bad)  
  41b792:	cmp    DWORD PTR [ecx],eax
  41b794:	inc    DWORD PTR [eax]
  41b796:	pop    esi
  41b797:	inc    DWORD PTR [edi-0x70ffff34]
  41b79d:	push   ecx
  41b79e:	in     al,dx
  41b79f:	daa    
  41b7a0:	add    ah,cl
  41b7a2:	in     eax,dx
  41b7a3:	mov    bh,bh
  41b7a5:	int3   
  41b7a6:	sbb    bh,bh
  41b7a8:	inc    ebp
  41b7a9:	(bad)  
  41b7aa:	(bad)  
  41b7ab:	inc    esp
  41b7ad:	push   ecx
  41b7ae:	jp     0x41b7c6
  41b7b0:	(bad)  
  41b7b1:	call   FWORD PTR [ecx-0x11ff332a]
  41b7b7:	push   DWORD PTR ds:0x4d0000ff
  41b7bd:	add    eax,0xffcc7852
  41b7c2:	mov    ecx,0xb8ff831f
  41b7c7:	call   FWORD PTR [edx-0x2000001]
  41b7cd:	push   0xffffffae
  41b7cf:	xor    DWORD PTR [ebx+0x8db000],eax
  41b7d5:	inc    ebx
  41b7d7:	add    dh,dl
  41b7d9:	int3   
  41b7da:	(bad)  
  41b7db:	dec    DWORD PTR [ebx+0x67]
  41b7de:	sahf   
  41b7df:	ja     0x41b7e0
  41b7e1:	add    BYTE PTR [eax],bl
  41b7e3:	jnp    0x41b7e4
  41b7e5:	add    DWORD PTR [edi],0xffffffff
  41b7e8:	into   
  41b7e9:	(bad)  
  41b7ea:	inc    DWORD PTR [eax]
  41b7ec:	fbstp  TBYTE PTR [esp+eax*4]
  41b7ef:	push   ebx
  41b7f0:	add    bh,bh
  41b7f2:	iret   
  41b7f3:	(bad)  
  41b7f5:	jmp    DWORD PTR [edx-0x77]
  41b7f8:	xor    BYTE PTR [ecx-0x7948ff01],cl
  41b7fe:	xor    eax,0x59cc8323
  41b803:	cli    
  41b804:	mov    DWORD PTR [eax],eax
  41b806:	add    eax,0x83ff41ff
  41b80b:	adc    DWORD PTR [esi],0x8
  41b80e:	sub    DWORD PTR [edx+0x2aa60000],0x838b00ff
  41b818:	lods   eax,DWORD PTR ds:[esi]
  41b819:	add    BYTE PTR [ebx+0x29e8fdcc],al
  41b81f:	dec    ebp
  41b820:	mov    edi,edi
  41b822:	or     eax,DWORD PTR [edi+edi*8]
  41b825:	inc    DWORD PTR [ecx+0x0]
  41b828:	push   esi
  41b829:	add    BYTE PTR [eax],al
  41b82b:	sub    edi,0x31
  41b82e:	aaa    
  41b82f:	jno    0x41b831
  41b831:	int3   
  41b832:	mov    eax,ds:0x1183005d
  41b837:	jmp    FWORD PTR [ebx]
  41b839:	add    BYTE PTR [ebx-0x2d8c4200],al
  41b83f:	and    BYTE PTR [ebx-0x939234],al
  41b845:	(bad)  
  41b846:	js     0x41b7cb
  41b848:	pop    eax
  41b849:	cmp    edi,0x0
  41b84c:	jae    0x41b7d0
  41b84e:	repz xchg ebx,eax
  41b850:	add    BYTE PTR [eax],al
  41b852:	and    BYTE PTR [ebx+eax*4],bl
  41b855:	(bad)  
  41b856:	mov    ecx,0x8d89
  41b85b:	add    BYTE PTR [edi-0x7c4c6e76],al
  41b861:	call   ecx
  41b863:	pushf  
  41b864:	add    bh,bh
  41b866:	sub    eax,0xff4589
  41b86b:	call   DWORD PTR [eax-0x4dcd6d]
  41b871:	jmp    esp
  41b873:	jo     0x41b874
  41b875:	jmp    FWORD PTR [ecx-0x7c00a201]
  41b87b:	add    BYTE PTR [edi],bl
  41b87d:	js     0x41b822
  41b87f:	arpl   di,di
  41b881:	(bad)  
  41b882:	aas    
  41b883:	cmp    bh,bh
  41b885:	mov    DWORD PTR [eax-0x7cff4401],ebx
  41b88b:	push   DWORD PTR [ebp-0xb76cc3]
  41b891:	int3   
  41b892:	es fcos 
  41b895:	add    BYTE PTR [edi],dl
  41b897:	mov    ecx,esi
  41b899:	add    BYTE PTR [eax],al
  41b89b:	add    BYTE PTR [edx],cl
  41b89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b89e:	in     eax,dx
  41b89f:	dec    eax
  41b8a0:	add    BYTE PTR [eax],al
  41b8a2:	(bad)  
  41b8a3:	cmc    
  41b8a4:	add    BYTE PTR [ebx+0x3c0027],al
  41b8aa:	int3   
  41b8ab:	int3   
  41b8ac:	popa   
  41b8ad:	mov    edi,0xccb9
  41b8b2:	jo     0x41b931
  41b8b4:	(bad)  
  41b8b5:	(bad)  
  41b8b6:	inc    DWORD PTR [eax]
  41b8b8:	mov    ds:0x4effff89,al
  41b8bd:	or     BYTE PTR [edi],0x6b
  41b8c0:	(bad)  
  41b8c1:	call   DWORD PTR [esi]
  41b8c3:	imul   ecx,DWORD PTR [ecx-0x1f008001],0xffffffff
  41b8ca:	add    bh,bh
  41b8cc:	cs (bad) 
  41b8ce:	jno    0x41b873
  41b8d0:	add    bh,bh
  41b8d2:	aad    0xe5
  41b8d4:	(bad)  
  41b8d5:	call   DWORD PTR [edx+0xffaeff]
  41b8db:	jmp    DWORD PTR [ecx-0x7601bf7f]
  41b8e1:	int3   
  41b8e2:	rcl    edx,cl
  41b8e4:	inc    DWORD PTR [eax]
  41b8e6:	and    edi,edi
  41b8e8:	loopne 0x41b8ea
  41b8ea:	(bad)  
  41b8eb:	(bad)  
  41b8ec:	call   0xffefa311
  41b8f1:	add    BYTE PTR ds:0x7100ff9a,cl
  41b8f7:	add    DWORD PTR [ecx],0x0
  41b8fa:	add    bh,bh
  41b8fc:	ret    0xafda
  41b8ff:	test   BYTE PTR [ecx-0x7c5dc27d],0xcc
  41b906:	and    bh,bh
  41b908:	iret   
  41b909:	dec    esp
  41b90b:	add    BYTE PTR [edi],bh
  41b90d:	ret    0x9018
  41b910:	add    BYTE PTR [eax],al
  41b912:	push   ds
  41b913:	inc    eax
  41b914:	inc    DWORD PTR [eax]
  41b916:	sbb    edi,edi
  41b918:	jnp    0x41b91a
  41b91a:	dec    esp
  41b91c:	in     eax,0x94
  41b91e:	add    BYTE PTR [ebx-0x450a7700],ch
  41b924:	(bad)  
  41b925:	jmp    FWORD PTR [edx]
  41b927:	add    BYTE PTR [esp+ecx*8-0x78580001],al
  41b92e:	or     eax,0xe5ff0021
  41b933:	mov    bh,0xff
  41b935:	call   DWORD PTR [eax-0x1]
  41b938:	xlat   BYTE PTR ds:[ebx]
  41b939:	inc    DWORD PTR [eax]
  41b93b:	mov    DWORD PTR [eax],esp
  41b93d:	fsubr  st(1),st
  41b93f:	cwde   
  41b940:	(bad)  
  41b941:	call   edx
  41b943:	mov    bl,0x0
  41b945:	dec    edx
  41b947:	dec    DWORD PTR [edi+0x0]
  41b94a:	mov    edi,edi
  41b94c:	aad    0x18
  41b94e:	adc    eax,DWORD PTR ds:0x7872cc00
  41b954:	add    ah,cl
  41b956:	sar    edi,0x62
  41b959:	inc    DWORD PTR [eax]
  41b95b:	jmp    DWORD PTR [ecx-0x98822e]
  41b961:	add    BYTE PTR [esi-0x6d00ff98],bl
  41b967:	add    BYTE PTR [edx-0x1],bh
  41b96a:	inc    DWORD PTR [ebx-0x5a52b1c8]
  41b970:	add    BYTE PTR [ebx-0x1e67],al
  41b976:	xor    al,BYTE PTR [eax]
  41b978:	and    edi,edi
  41b97a:	(bad)  
  41b97b:	dec    DWORD PTR [edx]
  41b97d:	inc    ebp
  41b97e:	xor    eax,0x7883ff46
  41b983:	and    edi,edi
  41b985:	push   DWORD PTR [ebx-0x7d]
  41b988:	push   ebx
  41b989:	int3   
  41b98a:	inc    DWORD PTR [eax]
  41b98c:	or     ebx,ebp
  41b98e:	aad    0xc7
  41b990:	add    bh,bh
  41b992:	loop   0x41b9a3
  41b994:	dec    DWORD PTR [ecx+0x908309]
  41b99a:	(bad)  
  41b99b:	(bad)  
  41b99c:	out    dx,eax
  41b99d:	inc    eax
  41b99e:	sahf   
  41b99f:	mov    ds:0x353dff00,eax
  41b9a4:	add    ah,cl
  41b9a6:	or     al,0xcc
  41b9a8:	xor    bh,bh
  41b9aa:	add    BYTE PTR [eax],al
  41b9ac:	stc    
  41b9ad:	cmc    
  41b9ae:	test   esp,edi
  41b9b0:	(bad)  
  41b9b1:	inc    eax
  41b9b3:	call   0xffe3b9b7
  41b9b8:	stos   DWORD PTR es:[edi],eax
  41b9b9:	inc    DWORD PTR [ebx+0x21817700]
  41b9bf:	mov    ebx,0xe2e700ff
  41b9c4:	inc    DWORD PTR [eax]
  41b9c6:	xchg   edx,eax
  41b9c7:	inc    DWORD PTR [eax-0x7d]
  41b9ca:	mov    edi,edi
  41b9cc:	mov    ds:0x83970a19,al
  41b9d1:	inc    edi
  41b9d3:	daa    
  41b9d4:	add    bh,bh
  41b9d6:	sub    BYTE PTR [eax],al
  41b9d8:	cwde   
  41b9d9:	inc    DWORD PTR [ebx+0x9f894ff]
  41b9df:	fadd   DWORD PTR [ebx+0x8aff]
  41b9e5:	add    BYTE PTR [ecx],ch
  41b9e7:	add    BYTE PTR [eax+eax*1],ah
  41b9ea:	add    bh,bh
  41b9ec:	pop    ss
  41b9ed:	stos   BYTE PTR es:[edi],al
  41b9ee:	inc    ebp
  41b9ef:	sbb    bh,bh
  41b9f1:	push   DWORD PTR [ecx]
  41b9f3:	jl     0x41b97e
  41b9f5:	int3   
  41b9f6:	stos   DWORD PTR es:[edi],eax
  41b9f7:	int3   
  41b9f8:	jnp    0x41b9f9
  41b9fa:	inc    DWORD PTR [ebx-0x27e71944]
  41ba00:	mov    esp,ecx
  41ba02:	(bad)  
  41ba03:	inc    DWORD PTR es:[eax]
  41ba06:	adc    cl,BYTE PTR [ecx+0xfff8]
  41ba0c:	in     eax,0x78
  41ba0e:	mov    DWORD PTR [ecx+0x0],0xcc9dccff
  41ba15:	and    esi,0xffffffff
  41ba18:	ss (bad) 
  41ba1a:	(bad)  
  41ba1b:	inc    DWORD PTR [ebp+0x15]
  41ba1e:	aad    0x4f
  41ba20:	(bad)  
  41ba21:	(bad)  
  41ba22:	mov    eax,0x9f83fffa
  41ba27:	add    BYTE PTR [edi+0x5d0000ff],ch
  41ba2d:	aas    
  41ba2e:	sub    BYTE PTR [esi-0x34],bl
  41ba31:	add    BYTE PTR [edx],ah
  41ba33:	(bad)  
  41ba34:	(bad)  
  41ba35:	(bad)  
  41ba36:	std    
  41ba37:	(bad)  
  41ba38:	ds int3 
  41ba3a:	or     DWORD PTR [ecx-0x313b8100],0xffffffff
  41ba41:	add    BYTE PTR [ebx],ah
  41ba43:	repnz add BYTE PTR [eax],al
  41ba46:	mov    eax,0xff003600
  41ba4b:	jmp    FWORD PTR [ecx-0xc7a146]
  41ba51:	xor    DWORD PTR [ebp-0x727c00bc],0xffffff83
  41ba58:	push   eax
  41ba59:	inc    DWORD PTR [eax]
  41ba5b:	add    BYTE PTR [ebx+0x78],cl
  41ba5e:	outs   dx,BYTE PTR ds:[esi]
  41ba5f:	jae    0x636065
  41ba65:	push   DWORD PTR [ecx]
  41ba67:	dec    DWORD PTR [edi+0x0]
  41ba6a:	add    BYTE PTR [eax],al
  41ba6c:	popa   
  41ba6d:	(bad)  
  41ba6e:	stos   BYTE PTR es:[edi],al
  41ba6f:	cmc    
  41ba70:	int3   
  41ba71:	xor    DWORD PTR [esi+0x5b830003],0xffffffff
  41ba78:	in     eax,0xff
  41ba7a:	cmp    edi,0xffffffe0
  41ba7d:	push   cs
  41ba7e:	out    0x5c,al
  41ba80:	cmp    edi,0x6
  41ba83:	(bad)  
  41ba84:	(bad)  
  41ba85:	call   DWORD PTR [ebp-0xbc00]
  41ba8b:	push   esp
  41ba8d:	je     0x41baf6
  41ba8f:	ds (bad) 
  41ba91:	(bad)  
  41ba92:	mov    esp,0x67fffff9
  41ba97:	mov    DWORD PTR [edi+edi*8+0x0],ebp
  41ba9b:	(bad)  
  41ba9c:	cmp    al,0xc2
  41ba9e:	cdq    
  41ba9f:	push   edi
  41baa0:	add    BYTE PTR [eax],al
  41baa2:	or     eax,0x1e89fffb
  41baa7:	int3   
  41baa8:	sar    bh,cl
  41baaa:	(bad)  
  41baab:	push   DWORD PTR [edi+0x542004]
  41bab1:	(bad)  
  41bab2:	js     0x41bae5
  41bab4:	add    bh,bh
  41bab6:	mov    al,0x0
  41bab8:	in     al,0x0
  41baba:	(bad)  
  41babb:	jmp    FWORD PTR [esi+ebp*4]
  41babe:	xchg   edi,eax
  41babf:	pop    edx
  41bac0:	(bad)  
  41bac1:	call   DWORD PTR [ecx]
  41bac3:	(bad)  
  41bac5:	add    DWORD PTR [esi],0xffffffcc
  41bac8:	arpl   di,di
  41baca:	int3   
  41bacb:	int3   
  41bacc:	inc    ebx
  41bacd:	fdivr  DWORD PTR [ebx-0x59]
  41bad0:	inc    DWORD PTR [eax]
  41bad2:	jmp    0x41bb44
  41bad4:	inc    DWORD PTR [eax]
  41bad6:	push   es
  41bad7:	add    BYTE PTR [edi],ch
  41bad9:	cmp    edi,0xffffffcc
  41badc:	fidiv  DWORD PTR [ebx]
  41bade:	sbb    edx,DWORD PTR ds:0xe8ef0083
  41bae4:	int3   
  41bae5:	add    BYTE PTR ds:0xff89a483,dh
  41baeb:	jmp    esp
  41baed:	add    ebx,DWORD PTR [ecx-0x3d]
  41baf0:	inc    DWORD PTR [ebx-0x76ffa3e0]
  41baf6:	aas    
  41baf7:	int3   
  41baf8:	enter  0x83,0x0
  41bafc:	inc    ecx
  41bafd:	push   ebp
  41bafe:	cli    
  41baff:	dec    DWORD PTR cs:[ecx-0x7600180e]
  41bb06:	leave  
  41bb07:	jmp    DWORD PTR [edi+edi*8-0x1]
  41bb0b:	(bad)  
  41bb0c:	jmp    0x41bb3e
  41bb0e:	imul   ebp,edx,0xe3f0000
  41bb14:	inc    DWORD PTR [ebx-0xb1ffba]
  41bb1a:	int3   
  41bb1b:	add    dh,bh
  41bb1d:	cmp    al,0x9d
  41bb1f:	cmp    al,0xff
  41bb21:	call   FWORD PTR [eax+0x6dffffd1]
  41bb27:	sbb    DWORD PTR [eax+eax*1-0x1],0xffffffff
  41bb2c:	imul   ebx,DWORD PTR [esi],0xff384b
  41bb32:	lahf   
  41bb33:	std    
  41bb34:	mov    DWORD PTR [ebx-0x7cce0051],eax
  41bb3a:	dec    esp
  41bb3c:	mov    esp,0x89e058b6
  41bb41:	(bad)  
  41bb42:	jg     0x41bb7e
  41bb44:	inc    DWORD PTR [eax]
  41bb46:	int    0xff
  41bb48:	scas   al,BYTE PTR es:[edi]
  41bb49:	add    BYTE PTR [eax],al
  41bb4b:	xor    DWORD PTR [ebp+0x6a],0xffffffac
  41bb4f:	sar    bh,1
  41bb51:	add    BYTE PTR [ecx-0x9],dh
  41bb54:	add    BYTE PTR [eax],al
  41bb56:	xor    eax,DWORD PTR [ebx+0xccff0a]
  41bb5c:	inc    esi
  41bb5d:	mov    esp,0xff00623a
  41bb62:	push   edx
  41bb63:	das    
  41bb64:	add    BYTE PTR [eax],al
  41bb66:	adc    eax,DWORD PTR [ebx+0xffff29]
  41bb6c:	ss in  eax,0xef
  41bb6f:	cmc    
  41bb70:	inc    DWORD PTR [eax]
  41bb72:	or     ebx,edi
  41bb74:	mov    edi,edi
  41bb76:	add    BYTE PTR [eax],al
  41bb78:	jmp    0x4dc5bb49
  41bb7d:	dec    esp
  41bb7e:	add    al,0xe
  41bb80:	(bad)  
  41bb81:	jmp    FWORD PTR [edx+0x2683ff73]
  41bb87:	add    bh,cl
  41bb89:	inc    DWORD PTR [eax]
  41bb8b:	adc    DWORD PTR [eax+eax*4],0xfffffffd
  41bb8f:	inc    DWORD PTR [eax]
  41bb91:	add    BYTE PTR [ecx],dh
  41bb93:	mov    ecx,esp
  41bb95:	push   DWORD PTR [edi-0x1]
  41bb98:	into   
  41bb99:	dec    DWORD PTR [ecx-0x7db8d01]
  41bb9f:	std    
  41bba0:	add    DWORD PTR [eax],0xffffffd1
  41bba3:	das    
  41bba4:	(bad)  
  41bba5:	call   DWORD PTR [ebx-0xff8000]
  41bbab:	call   esi
  41bbad:	mov    ah,0xae
  41bbaf:	sub    BYTE PTR [ebx+0x4480840d],cl
  41bbb5:	add    BYTE PTR [ecx+0x340ec],al
  41bbbb:	add    BYTE PTR [ebx-0x75],dl
  41bbbe:	sbb    eax,0x445020
  41bbc3:	push   esi
  41bbc4:	mov    esi,DWORD PTR ds:0x448d04
  41bbca:	push   edi
  41bbcb:	mov    edi,0x4
  41bbd0:	movzx  eax,WORD PTR [ecx+0x6]
  41bbd4:	movzx  edx,BYTE PTR [ecx+0x4]
  41bbd8:	movzx  ecx,BYTE PTR [ecx+0x1]
  41bbdc:	shl    eax,0x8
  41bbdf:	add    eax,edx
  41bbe1:	mov    edx,DWORD PTR ds:0x448d00
  41bbe7:	shl    eax,0x8
  41bbea:	add    eax,ecx
  41bbec:	mov    ds:0x448cf0,eax
  41bbf1:	xor    edx,eax
  41bbf3:	lea    eax,[esp+0xc]
  41bbf7:	xor    edx,0x522979f1
  41bbfd:	push   eax
  41bbfe:	mov    DWORD PTR [esi],edx
  41bc00:	call   ebx
  41bc02:	mov    ecx,DWORD PTR ds:0x448084
  41bc08:	add    ecx,0x8
  41bc0b:	add    esi,0x4
  41bc0e:	dec    edi
  41bc0f:	mov    DWORD PTR ds:0x448084,ecx
  41bc15:	jne    0x41bbd0
  41bc17:	mov    esi,DWORD PTR ds:0x448d04
  41bc1d:	push   0x100
  41bc22:	lea    ecx,[esp+0x150]
  41bc29:	push   ecx
  41bc2a:	push   0x447a78
  41bc2f:	call   DWORD PTR ds:0x445068
  41bc35:	mov    edx,DWORD PTR ds:0x448088
  41bc3b:	mov    eax,DWORD PTR [edx+0x1]
  41bc3e:	mov    ds:0x448cf0,eax
  41bc43:	mov    ecx,0x75a8014c
  41bc48:	sub    ecx,DWORD PTR ds:0x448d00
  41bc4e:	xor    ecx,eax
  41bc50:	mov    DWORD PTR [esi+0x10],ecx
  41bc53:	mov    ecx,DWORD PTR ds:0x448088
  41bc59:	movzx  eax,BYTE PTR [ecx+0xd]
  41bc5d:	movzx  edx,WORD PTR [ecx+0xb]
  41bc61:	movzx  ecx,BYTE PTR [ecx+0x7]
  41bc65:	shl    eax,0x10
  41bc68:	add    eax,edx
  41bc6a:	mov    edx,DWORD PTR ds:0x448d00
  41bc70:	shl    eax,0x8
  41bc73:	add    eax,ecx
  41bc75:	mov    ds:0x448cf0,eax
  41bc7a:	add    edx,0x759ffd80
  41bc80:	xor    edx,eax
  41bc82:	mov    DWORD PTR [esi+0x14],edx
  41bc85:	mov    eax,ds:0x448088
  41bc8a:	add    eax,0x10
  41bc8d:	mov    ds:0x448088,eax
  41bc92:	mov    eax,DWORD PTR [eax+0x1]
  41bc95:	mov    ds:0x448cf0,eax
  41bc9a:	mov    ecx,0x75a8014c
  41bc9f:	sub    ecx,DWORD PTR ds:0x448d00
  41bca5:	xor    ecx,eax
  41bca7:	mov    DWORD PTR [esi+0x18],ecx
  41bcaa:	mov    ecx,DWORD PTR ds:0x448088
  41bcb0:	movzx  eax,BYTE PTR [ecx+0xd]
  41bcb4:	movzx  edx,WORD PTR [ecx+0xb]
  41bcb8:	movzx  ecx,BYTE PTR [ecx+0x7]
  41bcbc:	shl    eax,0x10
  41bcbf:	add    eax,edx
  41bcc1:	mov    edx,DWORD PTR ds:0x448d00
  41bcc7:	shl    eax,0x8
  41bcca:	add    eax,ecx
  41bccc:	add    edx,0x759ffd80
  41bcd2:	mov    ds:0x448cf0,eax
  41bcd7:	xor    edx,eax
  41bcd9:	lea    eax,[esp+0x30]
  41bcdd:	push   eax
  41bcde:	push   edi
  41bcdf:	mov    DWORD PTR [esi+0x1c],edx
  41bce2:	add    DWORD PTR ds:0x448088,0x10
  41bce9:	mov    esi,DWORD PTR ds:0x448d04
  41bcef:	push   0x3
  41bcf1:	call   DWORD PTR ds:0x445024
  41bcf7:	mov    eax,DWORD PTR [esp+0x350]
  41bcfe:	movzx  ecx,BYTE PTR [eax+0x6]
  41bd02:	movzx  edx,WORD PTR [eax+0x4]
  41bd06:	shl    ecx,0x10
  41bd09:	add    ecx,edx
  41bd0b:	movzx  edx,BYTE PTR [eax]
  41bd0e:	shl    ecx,0x8
  41bd11:	add    ecx,edx
  41bd13:	mov    DWORD PTR ds:0x448cf0,ecx
  41bd19:	mov    edx,0xf97e6870
  41bd1e:	sub    edx,DWORD PTR ds:0x448d00
  41bd24:	xor    edx,ecx
  41bd26:	mov    DWORD PTR [esi+0x20],edx
  41bd29:	movzx  ecx,BYTE PTR [eax+0xe]
  41bd2d:	movzx  edx,BYTE PTR [eax+0xb]
  41bd31:	shl    ecx,0x8
  41bd34:	add    ecx,edx
  41bd36:	movzx  edx,WORD PTR [eax+0x7]
  41bd3a:	shl    ecx,0x10
  41bd3d:	add    ecx,edx
  41bd3f:	mov    edx,DWORD PTR ds:0x448d00
  41bd45:	add    edx,0xf97664a4
  41bd4b:	xor    edx,ecx
  41bd4d:	mov    DWORD PTR ds:0x448cf0,ecx
  41bd53:	mov    DWORD PTR [esi+0x24],edx
  41bd56:	movzx  ecx,BYTE PTR [eax+0x16]
  41bd5a:	movzx  edx,WORD PTR [eax+0x14]
  41bd5e:	shl    ecx,0x10
  41bd61:	add    ecx,edx
  41bd63:	movzx  edx,BYTE PTR [eax+0x10]
  41bd67:	shl    ecx,0x8
  41bd6a:	add    ecx,edx
  41bd6c:	mov    DWORD PTR ds:0x448cf0,ecx
  41bd72:	mov    edx,0xf97e6870
  41bd77:	sub    edx,DWORD PTR ds:0x448d00
  41bd7d:	xor    edx,ecx
  41bd7f:	mov    DWORD PTR [esi+0x28],edx
  41bd82:	movzx  ecx,BYTE PTR [eax+0x1e]
  41bd86:	movzx  edx,BYTE PTR [eax+0x1b]
  41bd8a:	movzx  eax,WORD PTR [eax+0x17]
  41bd8e:	shl    ecx,0x8
  41bd91:	add    ecx,edx
  41bd93:	mov    edx,DWORD PTR ds:0x448d00
  41bd99:	shl    ecx,0x10
  41bd9c:	add    ecx,eax
  41bd9e:	add    edx,0xf97664a4
  41bda4:	xor    edx,ecx
  41bda6:	mov    DWORD PTR ds:0x448cf0,ecx
  41bdac:	mov    DWORD PTR [esi+0x2c],edx
  41bdaf:	mov    eax,ds:0x448d04
  41bdb4:	xor    edx,edx
  41bdb6:	add    eax,0x30
  41bdb9:	cmp    DWORD PTR ds:0x448cf4,edx
  41bdbf:	jbe    0x41be48
  41bdc5:	mov    esi,DWORD PTR ds:0x44808c
  41bdcb:	jmp    0x41bdd0
  41bdcd:	lea    ecx,[ecx+0x0]
  41bdd0:	movzx  ecx,WORD PTR [esi+0x6]
  41bdd4:	movzx  esi,WORD PTR [esi+0x3]
  41bdd8:	shl    ecx,0x10
  41bddb:	add    ecx,esi
  41bddd:	mov    esi,DWORD PTR ds:0x448d00
  41bde3:	add    esi,0x8bff473e
  41bde9:	xor    esi,ecx
  41bdeb:	mov    DWORD PTR ds:0x448cf0,ecx
  41bdf1:	mov    DWORD PTR [eax],esi
  41bdf3:	mov    esi,DWORD PTR ds:0x44808c
  41bdf9:	movzx  ecx,WORD PTR [esi+0xd]
  41bdfd:	movzx  esi,WORD PTR [esi+0xa]
  41be01:	shl    ecx,0x10
  41be04:	add    ecx,esi
  41be06:	mov    esi,DWORD PTR ds:0x448d00
  41be0c:	sub    esi,0x401e6
  41be12:	neg    esi
  41be14:	sbb    esi,esi
  41be16:	and    esi,0x73fd5434
  41be1c:	add    esi,0x8c034924
  41be22:	xor    esi,ecx
  41be24:	mov    DWORD PTR ds:0x448cf0,ecx
  41be2a:	mov    DWORD PTR [eax+0x4],esi
  41be2d:	mov    esi,DWORD PTR ds:0x44808c
  41be33:	add    esi,0x10
  41be36:	inc    edx
  41be37:	add    eax,0x8
  41be3a:	mov    DWORD PTR ds:0x44808c,esi
  41be40:	cmp    edx,DWORD PTR ds:0x448cf4
  41be46:	jb     0x41bdd0
  41be48:	mov    edx,DWORD PTR ds:0x448090
  41be4e:	movzx  eax,BYTE PTR [edx+0x7]
  41be52:	movzx  esi,BYTE PTR [edx+0x4]
  41be56:	shl    eax,0x8
  41be59:	add    eax,esi
  41be5b:	movzx  esi,BYTE PTR [edx+0x2]
  41be5f:	movzx  edx,BYTE PTR [edx]
  41be62:	shl    eax,0x8
  41be65:	add    eax,esi
  41be67:	mov    ecx,DWORD PTR ds:0x448d04
  41be6d:	shl    eax,0x8
  41be70:	add    eax,edx
  41be72:	mov    ds:0x448cf0,eax
  41be77:	mov    edx,0x14e50279
  41be7c:	sub    edx,DWORD PTR ds:0x448d00
  41be82:	pop    edi
  41be83:	xor    edx,eax
  41be85:	mov    DWORD PTR [ecx+0x40],edx
  41be88:	mov    edx,DWORD PTR ds:0x448090
  41be8e:	add    edx,0x8
  41be91:	mov    DWORD PTR ds:0x448090,edx
  41be97:	movzx  eax,BYTE PTR [edx+0x7]
  41be9b:	movzx  esi,BYTE PTR [edx+0x4]
  41be9f:	shl    eax,0x8
  41bea2:	add    eax,esi
  41bea4:	movzx  esi,BYTE PTR [edx+0x2]
  41bea8:	movzx  edx,BYTE PTR [edx]
  41beab:	shl    eax,0x8
  41beae:	add    eax,esi
  41beb0:	shl    eax,0x8
  41beb3:	add    eax,edx
  41beb5:	mov    ds:0x448cf0,eax
  41beba:	mov    edx,0x14e50279
  41bebf:	sub    edx,DWORD PTR ds:0x448d00
  41bec5:	xor    edx,eax
  41bec7:	mov    DWORD PTR [ecx+0x44],edx
  41beca:	mov    edx,DWORD PTR ds:0x448090
  41bed0:	add    edx,0x8
  41bed3:	mov    DWORD PTR ds:0x448090,edx
  41bed9:	movzx  eax,BYTE PTR [edx+0x7]
  41bedd:	movzx  esi,BYTE PTR [edx+0x4]
  41bee1:	shl    eax,0x8
  41bee4:	add    eax,esi
  41bee6:	movzx  esi,BYTE PTR [edx+0x2]
  41beea:	movzx  edx,BYTE PTR [edx]
  41beed:	shl    eax,0x8
  41bef0:	add    eax,esi
  41bef2:	shl    eax,0x8
  41bef5:	add    eax,edx
  41bef7:	mov    ds:0x448cf0,eax
  41befc:	mov    edx,0x14e50279
  41bf01:	sub    edx,DWORD PTR ds:0x448d00
  41bf07:	xor    edx,eax
  41bf09:	mov    DWORD PTR [ecx+0x48],edx
  41bf0c:	mov    edx,DWORD PTR ds:0x448090
  41bf12:	add    edx,0x8
  41bf15:	mov    DWORD PTR ds:0x448090,edx
  41bf1b:	movzx  eax,BYTE PTR [edx+0x7]
  41bf1f:	movzx  esi,BYTE PTR [edx+0x4]
  41bf23:	shl    eax,0x8
  41bf26:	add    eax,esi
  41bf28:	movzx  esi,BYTE PTR [edx+0x2]
  41bf2c:	movzx  edx,BYTE PTR [edx]
  41bf2f:	shl    eax,0x8
  41bf32:	add    eax,esi
  41bf34:	shl    eax,0x8
  41bf37:	add    eax,edx
  41bf39:	mov    edx,0x14e50279
  41bf3e:	sub    edx,DWORD PTR ds:0x448d00
  41bf44:	mov    ds:0x448cf0,eax
  41bf49:	xor    edx,eax
  41bf4b:	pop    esi
  41bf4c:	mov    DWORD PTR [ecx+0x4c],edx
  41bf4f:	add    DWORD PTR ds:0x448090,0x8
  41bf56:	pop    ebx
  41bf57:	add    esp,0x340
  41bf5d:	ret    
  41bf5e:	int3   
  41bf5f:	int3   
  41bf60:	rcl    BYTE PTR [ebp-0xc190001],0xff
  41bf67:	add    ch,ch
  41bf69:	mov    DWORD PTR [ebp+0x0],eax
  41bf6c:	xor    bh,bh
  41bf6e:	repz int3 
  41bf70:	shl    ah,0x0
  41bf73:	or     DWORD PTR [eax],0x13
  41bf76:	(bad)  
  41bf77:	call   DWORD PTR [edi-0x1]
  41bf7a:	ror    esp,0x6
  41bf7d:	jmp    FWORD PTR [ebp-0x1]
  41bf80:	pop    edx
  41bf81:	stc    
  41bf82:	add    bh,bh
  41bf84:	xchg   ecx,eax
  41bf85:	pop    ds
  41bf86:	int3   
  41bf87:	push   DWORD PTR [ebp-0x1]
  41bf8a:	add    DWORD PTR [eax],0xff378398
  41bf90:	div    esi
  41bf92:	add    BYTE PTR [ecx-0xffba43],cl
  41bf98:	pop    ds
  41bf99:	add    bh,dl
  41bf9b:	int3   
  41bf9c:	xchg   ebx,eax
  41bf9d:	add    BYTE PTR [ecx],ah
  41bf9f:	and    DWORD PTR [ebx+0x37],0xffffffff
  41bfa3:	jmp    FWORD PTR [edx]
  41bfa5:	(bad)  
  41bfa7:	call   DWORD PTR [ebx-0x77]
  41bfaa:	jmp    0xe383:0x8400caff
  41bfb1:	stc    
  41bfb2:	cmp    edi,0x40
  41bfb5:	cmp    edi,0x64ff3c83
  41bfbb:	call   DWORD PTR [esp+ecx*8]
  41bfbe:	dec    ecx
  41bfbf:	add    BYTE PTR [ebx],al
  41bfc1:	rol    DWORD PTR [ebx-0x88634],1
  41bfc7:	add    BYTE PTR [ecx],al
  41bfc9:	jmp    FWORD PTR [esi]
  41bfcb:	int3   
  41bfcc:	push   edi
  41bfcd:	add    BYTE PTR [ebp-0x7d],dl
  41bfd0:	test   DWORD PTR [edi-0x1],edx
  41bfd3:	add    BYTE PTR [edi-0x69],bh
  41bfd6:	inc    DWORD PTR [ebx-0xf30024]
  41bfdc:	sar    edi,0x3e
  41bfdf:	push   DWORD PTR [eax]
  41bfe1:	jo     0x41bfe3
  41bfe3:	call   esi
  41bfe5:	pop    es
  41bfe6:	add    bh,bh
  41bfe8:	(bad)  
  41bfe9:	jmp    DWORD PTR [ebp-0x7d]
  41bfec:	aam    0x0
  41bfee:	addr16 add al,ch
  41bff1:	add    BYTE PTR [eax],0x0
  41bff4:	gs push esi
  41bff6:	add    bh,bh
  41bff8:	ret    0xc500
  41bffb:	xor    edx,0xffffffff
  41bffe:	push   ss
  41bfff:	add    dl,dh
  41c001:	xchg   esp,eax
  41c002:	inc    DWORD PTR [eax]
  41c004:	cmp    eax,0x3aff00cf
  41c009:	cmp    DWORD PTR [ecx-0x1],0x50
  41c00d:	int3   
  41c00e:	xchg   bh,bh
  41c010:	and    eax,0xea89ccf4
  41c015:	xlat   BYTE PTR ds:[ebx]
  41c016:	inc    DWORD PTR [eax]
  41c018:	push   es
  41c019:	add    BYTE PTR ds:0x1009283,ch
  41c01f:	add    BYTE PTR [eax],dh
  41c021:	mov    edx,0x383f0000
  41c026:	inc    DWORD PTR [eax]
  41c028:	mov    ds:0x520048ff,al
  41c02d:	(bad)  
  41c02e:	in     eax,dx
  41c02f:	jmp    FWORD PTR [edi+0xc00ffeb]
  41c035:	jg     0x41c036
  41c037:	jmp    esi
  41c039:	add    BYTE PTR [ecx],bh
  41c03b:	adc    DWORD PTR [eax],0x0
  41c03e:	cmp    edi,0x2a
  41c041:	mov    ds:0x4f7bffff,al
  41c046:	add    bh,bh
  41c048:	sahf   
  41c049:	dec    DWORD PTR [edi+edi*8-0xa000dc]
  41c050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c051:	mov    ds:0xfe580000,al
  41c056:	cmp    edi,0xffffffa0
  41c059:	add    BYTE PTR [edi+edi*8-0x33697c4d],dl
  41c060:	pop    ss
  41c061:	jo     0x41c062
  41c063:	dec    DWORD PTR ds:0xf900836d
  41c069:	push   DWORD PTR [eax+0x6700beff]
  41c06f:	add    DWORD PTR [ecx],0xfffffff4
  41c072:	inc    DWORD PTR [ebx-0x7ca8f3]
  41c078:	sub    DWORD PTR [ecx-0x765fffb4],ecx
  41c07e:	jbe    0x41c07f
  41c080:	jge    0x41c08a
  41c082:	(bad)  
  41c083:	inc    DWORD PTR [ebx]
  41c085:	lahf   
  41c086:	add    DWORD PTR [eax],0x4b
  41c089:	add    DWORD PTR [ebx+0x0],0xffffff96
  41c08d:	jmp    DWORD PTR [ecx]
  41c08f:	(bad)  
  41c090:	aas    
  41c091:	add    DWORD PTR fs:[ebx-0x15c6],0x73
  41c099:	int3   
  41c09a:	into   
  41c09b:	call   FWORD PTR [edx+0x38ff1883]
  41c0a1:	push   ds
  41c0a2:	inc    DWORD PTR [ebx-0x7676530c]
  41c0a8:	and    bh,bh
  41c0aa:	mov    dl,0xff
  41c0ac:	mov    bl,0xff
  41c0ae:	xor    ah,cl
  41c0b0:	and    ch,BYTE PTR [edi+edi*8-0x1]
  41c0b4:	sbb    edi,DWORD PTR [ecx]
  41c0b6:	add    BYTE PTR [eax],al
  41c0b8:	xor    edi,edi
  41c0ba:	fwait
  41c0bb:	call   DWORD PTR [eax]
  41c0bd:	inc    ebp
  41c0bf:	add    BYTE PTR [edi+0x5000ff20],ah
  41c0c5:	and    BYTE PTR [ebx+0x6b001b89],al
  41c0cb:	call   FWORD PTR [ecx-0x1]
  41c0ce:	push   edx
  41c0cf:	add    BYTE PTR [esi],bh
  41c0d1:	ror    esp,cl
  41c0d3:	and    DWORD PTR [esi],0x47
  41c0d6:	or     DWORD PTR [ecx-0xde3320],0xffffffdd
  41c0dd:	int3   
  41c0de:	clc    
  41c0df:	jmp    FWORD PTR [edx]
  41c0e1:	mov    bh,bh
  41c0e3:	add    dh,dh
  41c0e5:	xlat   BYTE PTR ds:[ebx]
  41c0e6:	add    BYTE PTR [ecx-0x7c64ffe1],cl
  41c0ec:	pop    esi
  41c0ed:	jmp    FWORD PTR [edx-0x7c54fd00]
  41c0f3:	jmp    DWORD PTR [ebx]
  41c0f5:	sub    cl,ah
  41c0f7:	add    DWORD PTR ds:0x5c836eff,0xffffffcc
  41c0fe:	push   0x0
  41c100:	shl    DWORD PTR [esi-0x1],cl
  41c103:	add    cl,cl
  41c105:	adc    eax,0x89dd8383
  41c10a:	cwde   
  41c10b:	jmp    DWORD PTR [ecx]
  41c10d:	dec    DWORD PTR [ebp-0xb1797d]
  41c113:	add    BYTE PTR [ecx-0x4176ff8a],bh
  41c119:	dec    DWORD PTR [eax+0x6affc900]
  41c11f:	(bad)  
  41c120:	in     eax,dx
  41c121:	stos   DWORD PTR es:[edi],eax
  41c122:	cmp    edi,0xffffffd0
  41c125:	iret   
  41c126:	(bad)  
  41c127:	call   DWORD PTR ds:0xa000f4cc
  41c12d:	int3   
  41c12e:	adc    edi,edi
  41c130:	dec    ecx
  41c131:	add    BYTE PTR [eax],0x0
  41c134:	fs jns 0x41c0ba
  41c137:	dec    edx
  41c139:	int3   
  41c13a:	push   0x270095ff
  41c13f:	call   DWORD PTR [ebp-0x21]
  41c142:	cmp    edi,0x27
  41c145:	sub    eax,0xff6effcc
  41c14a:	or     bh,bh
  41c14c:	pop    eax
  41c14d:	call   FWORD PTR [ecx]
  41c14f:	jmp    ebp
  41c151:	je     0x41c152
  41c153:	jmp    DWORD PTR [esi+0x3a83006e]
  41c159:	add    bl,al
  41c15b:	(bad)  
  41c15c:	mov    eax,0xfacc8fff
  41c161:	inc    esp
  41c162:	mov    DWORD PTR [ebx+0xff8bc1],eax
  41c168:	out    0xff,eax
  41c16a:	stos   BYTE PTR es:[edi],al
  41c16b:	and    DWORD PTR [ebx+0x0],0xffffffe3
  41c16f:	add    ch,ch
  41c171:	cld    
  41c172:	dec    esp
  41c174:	popa   
  41c175:	cli    
  41c176:	mov    DWORD PTR [eax],eax
  41c178:	aam    0xff
  41c17a:	push   edx
  41c17b:	int3   
  41c17c:	add    BYTE PTR [eax],0x6d
  41c17f:	int3   
  41c180:	test   BYTE PTR [esi+0x0],al
  41c183:	(bad)  
  41c184:	jp     0x41c1c0
  41c186:	mov    DWORD PTR [ebx-0x76057c99],eax
  41c18c:	retf   
  41c18d:	add    BYTE PTR [eax+0x0],al
  41c190:	loopne 0x41c15f
  41c192:	(bad)  
  41c193:	call   FWORD PTR [esi-0x5a]
  41c196:	add    bh,bh
  41c198:	add    BYTE PTR [eax],0xe6
  41c19b:	jmp    FWORD PTR ds:0x7800f5ff
  41c1a1:	add    al,0x0
  41c1a3:	jmp    DWORD PTR [esi+ecx*1-0x33a10077]
  41c1aa:	mov    eax,DWORD PTR [eax]
  41c1ac:	mov    ebx,0x3bffd589
  41c1b1:	mov    eax,DWORD PTR [eax]
  41c1b3:	push   ecx
  41c1b5:	adc    al,0xff
  41c1b7:	add    BYTE PTR [esi],dh
  41c1b9:	jmp    FWORD PTR [edi+edi*8-0x19]
  41c1bd:	add    cl,cl
  41c1bf:	(bad)  
  41c1c0:	mov    edi,0x1cff83d0
  41c1c5:	hlt    
  41c1c6:	inc    DWORD PTR [ebx-0x76107ceb]
  41c1cc:	aam    0xff
  41c1ce:	jle    0x41c1cf
  41c1d0:	mov    ebx,0xf183ffec
  41c1d5:	ret    0xff
  41c1d8:	repnz add BYTE PTR [esi],ch
  41c1db:	call   FWORD PTR [esi+0x37ff4fff]
  41c1e1:	mov    BYTE PTR [eax],al
  41c1e3:	call   DWORD PTR [ecx+0x48]
  41c1e6:	add    BYTE PTR [eax],al
  41c1e8:	sbb    ah,cl
  41c1ea:	cmp    bh,0x85
  41c1ed:	inc    DWORD PTR [ecx-0x1]
  41c1f0:	cmp    esi,DWORD PTR [eax+0x5bd300ff]
  41c1f6:	mov    DWORD PTR [eax],eax
  41c1f8:	test   DWORD PTR [ebx+0x820064],eax
  41c1fe:	nop
  41c1ff:	add    BYTE PTR [esp+ebp*4],al
  41c202:	dec    DWORD PTR [ecx-0x170c]
  41c208:	xor    al,0xff
  41c20a:	lods   al,BYTE PTR ds:[esi]
  41c20b:	or     DWORD PTR [edi-0xb008900],0x10
  41c212:	mov    DWORD PTR [eax],eax
  41c214:	adc    al,0xf0
  41c216:	mov    DWORD PTR [ebx+0x5cff58],eax
  41c21c:	sbb    DWORD PTR es:[eax],0x0
  41c220:	push   ebx
  41c221:	dec    edx
  41c222:	int3   
  41c223:	add    BYTE PTR [ecx+eiz*8],dl
  41c226:	inc    DWORD PTR [eax]
  41c228:	adc    DWORD PTR [ebx+0x61ff3c],eax
  41c22e:	push   ecx
  41c22f:	add    BYTE PTR [ebp-0x2d7cffcb],bh
  41c235:	lods   al,BYTE PTR ds:[esi]
  41c236:	cmp    edi,0x68
  41c239:	add    BYTE PTR [edx],ah
  41c23b:	add    BYTE PTR ds:0x98ff2500,al
  41c241:	mov    dh,0x89
  41c243:	add    BYTE PTR [ebp+0x65008398],al
  41c249:	add    BYTE PTR [eax-0x68002001],bl
  41c24f:	add    BYTE PTR [edx+0x800ff74],dl
  41c255:	pop    eax
  41c256:	int3   
  41c257:	call   DWORD PTR [edi]
  41c259:	sbb    DWORD PTR [ebx+0x4ffffeff],0x0
  41c260:	push   ebp
  41c261:	mov    edx,0xc0798900
  41c266:	(bad)  
  41c267:	(bad)  
  41c268:	aas    
  41c269:	inc    esp
  41c26b:	sub    DWORD PTR [esi+0x2fff1cc],0x3a
  41c272:	add    BYTE PTR [ebx-0x7cffb963],al
  41c278:	xchg   ecx,eax
  41c279:	call   DWORD PTR [eax-0x1]
  41c27c:	loope  0x41c27e
  41c27e:	call   0xfffac682
  41c283:	(bad)  
  41c284:	cmp    dh,ch
  41c286:	add    BYTE PTR [ebx-0x36ffb3],al
  41c28c:	jecxz  0x41c28d
  41c28e:	call   DWORD PTR gs:[eax-0x420076de]
  41c295:	ins    BYTE PTR es:[edi],dx
  41c296:	(bad)  
  41c297:	dec    DWORD PTR [esi-0x55ff1e00]
  41c29d:	push   esi
  41c29f:	adc    DWORD PTR ds:0x7bffff33,0x1e
  41c2a6:	(bad)  
  41c2a7:	jmp    DWORD PTR [edi]
  41c2a9:	add    BYTE PTR [eax-0x57ff6477],al
  41c2af:	push   DWORD PTR [edi]
  41c2b1:	jns    0x41c236
  41c2b3:	add    BYTE PTR [edx-0x257c7c48],ah
  41c2b9:	jmp    DWORD PTR [esi]
  41c2bb:	push   esp
  41c2bd:	add    BYTE PTR [edx],bh
  41c2bf:	add    ch,al
  41c2c1:	retf   0x83ff
  41c2c4:	mov    esi,0x43ccff31
  41c2c9:	mov    DWORD PTR [edi+edi*8-0x5d],ebp
  41c2cd:	call   FWORD PTR [eax]
  41c2cf:	add    BYTE PTR [ecx-0x400ff6f],cl
  41c2d5:	cdq    
  41c2d6:	inc    DWORD PTR [eax]
  41c2d8:	sub    eax,DWORD PTR [ebx+0xdd8918]
  41c2de:	push   ds
  41c2df:	add    edx,0x32
  41c2e2:	add    bh,bh
  41c2e4:	jp     0x41c27a
  41c2e6:	add    DWORD PTR [eax],0xffffffe7
  41c2e9:	jmp    DWORD PTR [edi-0x1]
  41c2ec:	mov    WORD PTR [eax],es
  41c2ee:	repz (bad) 
  41c2f0:	jle    0x41c310
  41c2f2:	add    BYTE PTR [ebx+0xff9643],al
  41c2f8:	(bad)  
  41c2f9:	jmp    FWORD PTR [esi]
  41c2fb:	call   FWORD PTR [edi+0x0]
  41c2fe:	xor    eax,0xad65ff
  41c303:	jmp    DWORD PTR [ebx]
  41c305:	pop    es
  41c306:	int3   
  41c307:	jmp    FWORD PTR [ebp+0x4f00ddff]
  41c30d:	add    BYTE PTR [ebp+0x0],dh
  41c310:	inc    edx
  41c311:	(bad)  
  41c312:	inc    DWORD PTR [eax]
  41c314:	icebp  
  41c315:	xchg   edi,eax
  41c316:	inc    DWORD PTR [eax]
  41c318:	xor    al,0xff
  41c31a:	adc    DWORD PTR [ecx-0x33c4003e],ecx
  41c320:	fs out dx,eax
  41c322:	add    DWORD PTR [eax],0x5f
  41c325:	sub    DWORD PTR [eax],eax
  41c327:	add    BYTE PTR [ebp+0x54ff7aff],dl
  41c32d:	(bad)  
  41c32e:	jl     0x41c32f
  41c330:	scas   eax,DWORD PTR es:[edi]
  41c331:	inc    ecx
  41c332:	int3   
  41c333:	int3   
  41c334:	xor    eax,DWORD PTR [edi+0xa5ffff]
  41c33a:	ret    
  41c33b:	(bad)  
  41c33c:	jl     0x41c33d
  41c33e:	jno    0x41c340
  41c340:	and    DWORD PTR [eax-0x7d],ebx
  41c343:	dec    DWORD PTR [esi+0x2b]
  41c346:	add    DWORD PTR [eax],0xffffffde
  41c349:	jmp    FWORD PTR [esi-0x1]
  41c34c:	(bad)  
  41c34f:	mov    DWORD PTR [edx-0x6b],esp
  41c352:	add    bh,bh
  41c354:	jno    0x41c3a6
  41c356:	add    BYTE PTR [ebx-0x760a3329],al
  41c35c:	and    edi,edi
  41c35e:	xor    al,BYTE PTR [eax]
  41c360:	pop    edi
  41c361:	in     al,0xff
  41c363:	add    bl,cl
  41c365:	add    cl,ah
  41c367:	inc    DWORD PTR [ebx-0x1]
  41c36a:	xchg   edx,eax
  41c36b:	inc    eax
  41c36d:	jmp    DWORD PTR [edi-0x34]
  41c370:	adc    al,0x47
  41c372:	cmp    edi,0x1f
  41c375:	mov    BYTE PTR [ecx+0x4bff3aff],cl
  41c37b:	jmp    esi
  41c37d:	call   DWORD PTR [eax]
  41c37f:	(bad)  
  41c380:	cmp    BYTE PTR [edx-0x7d],dl
  41c383:	call   esp
  41c385:	push   ds
  41c386:	add    DWORD PTR [eax],0x4e
  41c389:	sub    DWORD PTR [edi],0xffffffff
  41c38c:	(bad)  
  41c38d:	int3   
  41c38e:	push   ss
  41c38f:	jmp    FWORD PTR [esp+eax*4]
  41c392:	add    bh,bh
  41c394:	inc    ebx
  41c395:	dec    esp
  41c396:	add    bh,bh
  41c398:	into   
  41c399:	xor    DWORD PTR [ecx-0x77],0x5
  41c39d:	sbb    eax,0x0
  41c3a0:	(bad)  
  41c3a1:	retf   0xcc
  41c3a4:	and    BYTE PTR [ebx+0xcbff83],bl
  41c3aa:	mov    ds:0x59005a00,eax
  41c3af:	call   FWORD PTR [edi]
  41c3b1:	test   al,0x0
  41c3b3:	add    BYTE PTR [edi+edi*4+0x148383],al
  41c3ba:	dec    ebp
  41c3bb:	(bad)  
  41c3bc:	cmp    edi,edi
  41c3be:	jge    0x41c38c
  41c3c0:	mov    al,ds:0x7189ff58
  41c3c5:	fld    QWORD PTR [eax]
  41c3c7:	add    BYTE PTR [esi+0x9cce0ff],ch
  41c3cd:	call   esi
  41c3cf:	inc    DWORD PTR [edi-0x30]
  41c3d2:	add    ah,cl
  41c3d4:	jp     0x41c447
  41c3d6:	add    DWORD PTR [ebx+0xf8395],0xfffffff3
  41c3dd:	jmp    ecx
  41c3df:	call   ecx
  41c3e1:	mov    eax,0x7961ff00
  41c3e6:	dec    DWORD PTR [ecx-0xba00aa]
  41c3ec:	add    edi,edi
  41c3ee:	daa    
  41c3ef:	call   esp
  41c3f1:	xchg   edx,eax
  41c3f2:	inc    DWORD PTR [eax]
  41c3f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3f5:	gs add bh,bh
  41c3f8:	inc    eax
  41c3f9:	dec    DWORD PTR [ebx+0x0]
  41c3fc:	add    edi,edi
  41c3fe:	dec    esp
  41c3ff:	int3   
  41c400:	and    edi,DWORD PTR [esi-0x5f4aff01]
  41c406:	add    BYTE PTR [eax],al
  41c408:	xor    bh,bh
  41c40a:	cld    
  41c40b:	add    BYTE PTR [ebx-0x34],cl
  41c40e:	or     eax,DWORD PTR [eax]
  41c410:	adc    eax,0x9683ffe0
  41c415:	(bad)  
  41c416:	inc    DWORD PTR [eax]
  41c418:	pop    edi
  41c419:	inc    eax
  41c41b:	mov    DWORD PTR [eax-0x1],edi
  41c41e:	mov    edi,?
  41c420:	and    edi,DWORD PTR [esi-0x48af3301]
  41c426:	inc    DWORD PTR [eax]
  41c428:	add    eax,0x6dcc75cc
  41c42d:	call   FWORD PTR [esi+0x0]
  41c430:	or     al,0xdf
  41c432:	add    DWORD PTR [eax],0xffffffc6
  41c435:	xchg   BYTE PTR [ebx+0x1b0054cc],al
  41c43b:	call   DWORD PTR [esi+0x0]
  41c43e:	test   edi,edi
  41c440:	xor    edi,esi
  41c442:	inc    DWORD PTR [eax]
  41c444:	jecxz  0x41c4be
  41c446:	mov    esp,ecx
  41c448:	mov    ds:0xc4893a00,al
  41c44d:	dec    DWORD PTR [ebp-0x1]
  41c450:	gs ret 0xffff
  41c454:	adc    esp,DWORD PTR [ecx-0xff7c01]
  41c45a:	jmp    0x41c45c
  41c45c:	imul   eax,DWORD PTR [eax],0xc573ff4c
  41c462:	inc    DWORD PTR [ebx-0xff3f07]
  41c468:	xchg   ebp,eax
  41c469:	add    BYTE PTR [esi-0x4300f001],al
  41c46f:	add    BYTE PTR [ecx],ah
  41c471:	icebp  
  41c472:	mov    edi,edi
  41c474:	jmp    0x1b00:0x98989d7
  41c47b:	and    DWORD PTR [edx-0x1],0xffffffb6
  41c47f:	add    BYTE PTR [eax-0x16ff0052],ch
  41c485:	xchg   esp,eax
  41c486:	cmp    edi,0x1f
  41c489:	add    ecx,0xffffffcc
  41c48c:	rol    BYTE PTR [eax],cl
  41c48e:	adc    DWORD PTR [eax],eax
  41c490:	int3   
  41c491:	push   0xda45ffff
  41c496:	add    bh,bh
  41c498:	jne    0x41c499
  41c49a:	jp     0x41c41f
  41c49c:	push   eax
  41c49d:	add    al,dl
  41c49f:	inc    DWORD PTR [ebp+0x3cff8322]
  41c4a5:	jo     0x41c4a7
  41c4a7:	inc    DWORD PTR [ebx]
  41c4a9:	inc    DWORD PTR ds:0xa2ff3600
  41c4af:	push   ebx
  41c4b1:	clc    
  41c4b2:	add    BYTE PTR [eax],al
  41c4b4:	test   al,0x20
  41c4b6:	add    bh,bh
  41c4b8:	or     eax,0xe7ff69ff
  41c4bd:	xor    DWORD PTR [esi],0x0
  41c4c0:	ins    DWORD PTR es:[edi],dx
  41c4c1:	mov    ecx,0x696b00ff
  41c4c6:	mov    edi,edi
  41c4c8:	xor    DWORD PTR [eax],eax
  41c4ca:	xchg   edi,eax
  41c4cb:	add    BYTE PTR [ebx],bh
  41c4cd:	add    dh,ch
  41c4cf:	int3   
  41c4d0:	and    al,0xab
  41c4d2:	(bad)  
  41c4d3:	call   DWORD PTR [ecx-0x717cff4c]
  41c4d9:	dec    DWORD PTR [edx]
  41c4db:	add    BYTE PTR [edi+0x26ff9f89],al
  41c4e1:	or     eax,DWORD PTR [ebx+0x70d7ff]
  41c4e7:	jmp    DWORD PTR [esi-0x77]
  41c4ea:	mov    bh,bh
  41c4ec:	xchg   esp,eax
  41c4ed:	jmp    DWORD PTR [ebp-0x1]
  41c4f0:	mov    ah,BYTE PTR [ecx]
  41c4f2:	inc    DWORD PTR [eax]
  41c4f4:	sub    bh,bh
  41c4f6:	cmp    edi,0x2
  41c4f9:	(bad)  
  41c4fa:	std    
  41c4fb:	add    BYTE PTR [ebx-0x1],bl
  41c4fe:	mov    dh,0x83
  41c500:	push   ebp
  41c501:	call   0x77a54e89
  41c506:	mov    DWORD PTR [eax],eax
  41c508:	sar    bh,0x95
  41c50b:	inc    DWORD PTR [edx-0x7d]
  41c50e:	mov    esp,0x83d627ff
  41c513:	int3   
  41c514:	fcomp  QWORD PTR [edx-0x33e80100]
  41c51a:	adc    bh,bh
  41c51c:	push   cs
  41c51d:	call   FWORD PTR [esi-0xefb701]
  41c523:	add    BYTE PTR [eax-0x8],ch
  41c526:	add    bh,bh
  41c528:	pop    esp
  41c529:	call   DWORD PTR [ecx+ecx*4-0x2000c5]
  41c530:	xor    BYTE PTR [ecx-0x58b3301],bh
  41c536:	add    BYTE PTR [eax],al
  41c538:	mov    ds:0x460001ff,al
  41c53d:	add    BYTE PTR [ecx-0xd87b00],ch
  41c543:	push   DWORD PTR [esi+0x1d000026]
  41c549:	add    BYTE PTR [esi-0x1],bh
  41c54c:	(bad)  
  41c54d:	int3   
  41c54e:	outs   dx,BYTE PTR ds:[esi]
  41c54f:	jmp    FWORD PTR [ebp+0x20]
  41c552:	add    ah,cl
  41c554:	repnz adc al,BYTE PTR [eax]
  41c557:	int3   
  41c558:	or     DWORD PTR [eax],eax
  41c55a:	or     eax,0x4400eaff
  41c55f:	add    BYTE PTR [esi+0x60],ch
  41c562:	int3   
  41c563:	add    BYTE PTR [edx-0x13ff00fd],dl
  41c569:	dec    DWORD PTR [esi]
  41c56b:	int3   
  41c56c:	add    BYTE PTR cs:[eax-0x7cfa8601],cl
  41c573:	add    al,al
  41c575:	test   eax,0xcc49ff83
  41c57a:	add    al,0x0
  41c57c:	push   ebx
  41c57d:	add    BYTE PTR [esi-0x382301],bl
  41c583:	push   DWORD PTR [eax-0x3a]
  41c586:	dec    DWORD PTR [ecx-0x7cea0013]
  41c58c:	cmp    edi,edi
  41c58e:	mov    dl,0x89
  41c590:	sub    DWORD PTR [esi-0x5eba337d],ebp
  41c596:	cmp    edi,0x18
  41c599:	add    BYTE PTR [edi-0x647c0a00],bl
  41c59f:	(bad)  
  41c5a0:	cmp    BYTE PTR [ebp-0x75d8ff01],cl
  41c5a6:	dec    esp
  41c5a8:	add    bh,bh
  41c5aa:	jle    0x41c535
  41c5ac:	cld    
  41c5ad:	call   DWORD PTR [ecx-0x85c47d]
  41c5b3:	add    BYTE PTR [ecx+ecx*8-0x7c7bff01],al
  41c5ba:	add    edi,edi
  41c5bc:	mov    eax,ds:0x9aff17cc
  41c5c1:	jmp    0x41c5c3
  41c5c3:	add    BYTE PTR [ecx*4-0x767aff01],ah
  41c5ca:	pop    ss
  41c5cb:	jmp    DWORD PTR [edi+edi*8-0x47]
  41c5cf:	(bad)  
  41c5d0:	(bad)  
  41c5d1:	out    dx,al
  41c5d2:	(bad)  
  41c5d3:	(bad)  
  41c5d4:	aas    
  41c5d5:	daa    
  41c5d6:	int3   
  41c5d7:	(bad)  
  41c5d8:	mov    eax,0xd1fff183
  41c5dd:	add    BYTE PTR [eax-0x33d9df01],ch
  41c5e3:	add    BYTE PTR [esi],bh
  41c5e5:	leave  
  41c5e6:	inc    DWORD PTR [eax]
  41c5e8:	xchg   edi,eax
  41c5e9:	(bad)  
  41c5ea:	jp     0x41c56f
  41c5ec:	repz call eax
  41c5ef:	or     DWORD PTR [esi-0x31],0xffffffff
  41c5f3:	add    BYTE PTR [edx-0x527c0019],ah
  41c5f9:	push   DWORD PTR [eax-0x1]
  41c5fc:	jge    0x41c581
  41c5fe:	push   0xffffff89
  41c600:	mov    ds:0x69ccff7c,eax
  41c605:	repz add ah,cl
  41c608:	inc    ebp
  41c609:	dec    DWORD PTR [eax+eax*1-0x8a7cda]
  41c610:	sub    edi,DWORD PTR [edi-0x7c640001]
  41c616:	inc    DWORD PTR [eax]
  41c618:	aaa    
  41c619:	add    BYTE PTR [ecx],cl
  41c61b:	mov    DWORD PTR [eax+eax*1],ebp
  41c61e:	imul   edi,edi,0xffffffee
  41c621:	retf   
  41c622:	add    BYTE PTR [ebx-0x7c6bf5],al
  41c628:	xor    DWORD PTR [ebx-0x44ff5d],eax
  41c62e:	push   ecx
  41c62f:	call   FWORD PTR [ebx+0x56008331]
  41c635:	inc    esi
  41c636:	inc    DWORD PTR [eax]
  41c638:	pusha  
  41c639:	add    BYTE PTR [ecx+ecx*4],al
  41c63c:	sbb    edi,edi
  41c63e:	add    BYTE PTR [ebx-0x7c2325],0x89
  41c645:	pushf  
  41c646:	(bad)  
  41c647:	dec    eax
  41c649:	jmp    FWORD PTR [edi+0x43ff5700]
  41c64f:	add    BYTE PTR [ebx],ch
  41c651:	xchg   ebp,eax
  41c652:	add    DWORD PTR [eax],0xfffffffa
  41c655:	pop    esi
  41c656:	add    bh,bh
  41c658:	sbb    cl,ah
  41c65a:	jae    0x41c65c
  41c65c:	inc    esp
  41c65d:	dec    DWORD PTR ds:0xff1bf300
  41c663:	dec    DWORD PTR [ebx-0x78]
  41c666:	(bad)  
  41c667:	jmp    ebp
  41c669:	jmp    FWORD PTR [eax]
  41c66b:	(bad)  
  41c66c:	stc    
  41c66d:	add    BYTE PTR [eax-0x35db00],dh
  41c673:	add    BYTE PTR [eax],dl
  41c675:	call   0xffff:0x83ef00ff
  41c67c:	xchg   edi,eax
  41c67d:	add    bl,al
  41c67f:	add    ebp,0xffffffd1
  41c682:	(bad)  
  41c683:	call   FWORD PTR [esp+edx*4-0x1]
  41c687:	add    BYTE PTR ds:0xd4ff6f00,cl
  41c68d:	int3   
  41c68e:	mov    edi,edi
  41c690:	call   0xff77:0x8ccc895e
  41c697:	add    BYTE PTR [ecx+0x0],cl
  41c69a:	push   edx
  41c69b:	xor    DWORD PTR [esp+ecx*8-0x2a],0x0
  41c6a0:	stos   BYTE PTR es:[edi],al
  41c6a1:	in     eax,0xff
  41c6a3:	add    BYTE PTR [edi-0x33],dh
  41c6a6:	add    BYTE PTR [eax],al
  41c6a8:	mov    bh,0xff
  41c6aa:	xchg   esi,eax
  41c6ab:	add    BYTE PTR [ebp-0x6d00a334],dh
  41c6b1:	(bad)  
  41c6b2:	inc    DWORD PTR [eax]
  41c6b4:	jmp    0xdf00:0x2b00cccc
  41c6bb:	add    BYTE PTR [eax+eax*1],bh
  41c6be:	icebp  
  41c6bf:	mov    ebp,ebp
  41c6c1:	js     0x41c646
  41c6c3:	add    DWORD PTR [ecx+0x30],0xffffffff
  41c6c7:	add    dh,bh
  41c6c9:	(bad)  
  41c6ca:	jl     0x41c6cb
  41c6cc:	bound  ecx,QWORD PTR [ecx+0x254e0065]
  41c6d2:	mov    edi,edi
  41c6d4:	dec    ecx
  41c6d5:	dec    ebx
  41c6d6:	add    BYTE PTR [eax],al
  41c6d8:	xchg   esp,eax
  41c6d9:	jmp    edi
  41c6db:	jmp    FWORD PTR [ebx-0x68005801]
  41c6e1:	mov    DWORD PTR es:[eax],eax
  41c6e4:	call   0x62ff:0x2700ff8e
  41c6eb:	jmp    FWORD PTR [edi-0x7800e601]
  41c6f1:	xor    DWORD PTR [ebx-0x33bd5377],eax
  41c6f7:	inc    DWORD PTR [ebp-0x1]
  41c6fa:	adc    bh,bh
  41c6fc:	hlt    
  41c6fd:	mov    DWORD PTR [edi-0x1],eax
  41c700:	mov    ds:0xd4ffccd6,al
  41c705:	stos   BYTE PTR es:[edi],al
  41c706:	inc    DWORD PTR [ebx-0x1aff2b]
  41c70c:	and    eax,0x8c002b89
  41c711:	cwde   
  41c712:	add    DWORD PTR [eax],0xffffffa3
  41c715:	call   0x897c:0xff19ff00
  41c71c:	cmp    al,BYTE PTR [ebx-0x329cffa7]
  41c722:	add    BYTE PTR [eax],al
  41c724:	mov    DWORD PTR [ebx],esp
  41c726:	add    bh,bh
  41c728:	test   BYTE PTR [eax],0xb6
  41c72b:	or     DWORD PTR [eax],0xffffff83
  41c72e:	fiadd  DWORD PTR [ebx-0x7c33a773]
  41c734:	test   DWORD PTR [edi],0xffc60000
  41c73a:	sbb    al,BYTE PTR [eax]
  41c73c:	out    dx,al
  41c73d:	add    BYTE PTR [ecx-0x1],ah
  41c740:	adc    dh,bl
  41c742:	int3   
  41c743:	call   FWORD PTR [ecx+0x50]
  41c746:	add    BYTE PTR [eax],al
  41c748:	jl     0x41c6cd
  41c74a:	mov    ch,0x0
  41c74c:	test   al,0x0
  41c74e:	xchg   ebx,eax
  41c74f:	xor    ebp,0x1f
  41c752:	(bad)  
  41c753:	call   FWORD PTR [ecx-0xb767c7f]
  41c759:	adc    esp,0x0
  41c75c:	mov    bl,0xff
  41c75e:	adc    al,0xff
  41c760:	add    ah,cl
  41c762:	adc    al,0xff
  41c764:	sbb    eax,0x1a14bbff
  41c769:	int3   
  41c76a:	cmp    DWORD PTR [edi+0x0],0xffffff89
  41c76e:	mov    bl,0x67
  41c770:	dec    esp
  41c772:	jle    0x41c740
  41c774:	fild   WORD PTR [eax]
  41c776:	mov    dh,0x5f
  41c778:	ins    DWORD PTR es:[edi],dx
  41c779:	inc    DWORD PTR [eax]
  41c77b:	loope  0x41c77c
  41c77d:	(bad)  
  41c77e:	mov    ecx,0xe7ffff58
  41c783:	int3   
  41c784:	popa   
  41c785:	xor    DWORD PTR [ebp-0x8],0x4
  41c789:	add    BYTE PTR [ebx-0x5f007cb7],al
  41c78f:	mov    esi,0xcc23ff00
  41c794:	pop    edx
  41c795:	call   edi
  41c797:	mov    ds:0x53ff835e,eax
  41c79c:	dec    esp
  41c79e:	mov    ax,0x89cc
  41c7a2:	icebp  
  41c7a3:	add    BYTE PTR [esi-0x7d],bh
  41c7a6:	cli    
  41c7a7:	xor    BYTE PTR [esp+ecx*8],bl
  41c7aa:	mov    DWORD PTR [ebx+0x0],edi
  41c7ad:	inc    DWORD PTR [ecx-0x6b337c65]
  41c7b3:	sub    DWORD PTR [ecx-0x29d7b800],0xffffff83
  41c7ba:	call   FWORD PTR [eax+eax*1+0x0]
  41c7be:	add    al,0xc8
  41c7c0:	add    bh,bh
  41c7c2:	js     0x41c7c4
  41c7c4:	(bad)
  41c7c7:	iret   
  41c7c8:	nop
  41c7c9:	int3   
  41c7ca:	sbb    DWORD PTR [edx-0x79da7c77],0xffffffff
  41c7d1:	or     DWORD PTR [ebx],0xffffffff
  41c7d4:	cdq    
  41c7d5:	add    BYTE PTR [edx+eiz*2-0x70ff7cd2],ch
  41c7dc:	inc    DWORD PTR [eax]
  41c7de:	push   esp
  41c7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7e0:	add    bh,bh
  41c7e2:	fadd   QWORD PTR [ebx-0x238a0017]
  41c7e8:	jae    0x1416bed
  41c7ee:	pusha  
  41c7ef:	add    DWORD PTR [eax],eax
  41c7f1:	add    BYTE PTR [edi-0x3700a501],bl
  41c7f7:	jp     0x41c7bc
  41c7f9:	add    bh,bh
  41c7fb:	fisttp WORD PTR [ecx-0xd2ac01]
  41c801:	add    BYTE PTR [ecx+0x318998ff],bl
  41c807:	jmp    0xcc00:0xd28300cf
  41c80e:	(bad)  
  41c80f:	mov    ebx,0x860000
  41c814:	mov    al,0xff
  41c816:	adc    DWORD PTR [ebp-0x15007cb3],esp
  41c81c:	add    DWORD PTR [eax],0x1a
  41c81f:	mov    esp,0x3bccff
  41c824:	jae    0x41c825
  41c826:	pushf  
  41c827:	push   edi
  41c828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c829:	int3   
  41c82a:	push   DWORD PTR [eax-0x1]
  41c82d:	dec    DWORD PTR [eax]
  41c82f:	sar    bh,0x0
  41c832:	jno    0x41c834
  41c834:	pop    esp
  41c835:	jmp    FWORD PTR [ebx]
  41c837:	add    esi,DWORD PTR [eax+eax*1-0xff8c7d]
  41c83e:	mov    gs,WORD PTR [esi-0x768d0100]
  41c844:	cmp    edi,0x43
  41c847:	sar    BYTE PTR [eax-0x7d],1
  41c84a:	push   DWORD PTR [edi-0x1]
  41c84d:	inc    DWORD PTR [edx-0x78000079]
  41c853:	(bad)  
  41c854:	aas    
  41c855:	(bad)  
  41c856:	mov    ecx,0xffff55e1
  41c85b:	ror    ah,1
  41c85d:	add    al,dl
  41c85f:	or     edi,edi
  41c861:	(bad)  
  41c862:	std    
  41c863:	(bad)  
  41c864:	js     0x41c866
  41c866:	or     bl,BYTE PTR [eax+0x6fcc00ca]
  41c86c:	int3   
  41c86d:	add    BYTE PTR [eax+0x4bff0017],al
  41c873:	push   DWORD PTR [eax+0x0]
  41c876:	sbb    esp,ebp
  41c878:	push   0xff928389
  41c87d:	push   DWORD PTR [edx]
  41c87f:	jmp    0x41c881
  41c881:	int3   
  41c882:	mov    eax,DWORD PTR [eax]
  41c884:	jl     0x41c80f
  41c886:	adc    DWORD PTR [edi+eax*8-0xee7700],esi
  41c88d:	add    BYTE PTR ds:0x5a83ff32,ch
  41c893:	add    bh,cl
  41c895:	add    BYTE PTR [eax-0x68],bh
  41c898:	xchg   ebp,eax
  41c899:	cmp    edi,0x3f
  41c89c:	add    BYTE PTR [eax],al
  41c89e:	pop    esp
  41c89f:	cmc    
  41c8a0:	(bad)  
  41c8a1:	dec    esi
  41c8a3:	jmp    DWORD PTR [edi]
  41c8a5:	push   DWORD PTR [esi+ebp*8]
  41c8a8:	popf   
  41c8a9:	add    BYTE PTR [ebx+0x20ffff59],al
  41c8af:	dec    ebp
  41c8b0:	add    BYTE PTR [ebx-0x7cb6ffac],al
  41c8b6:	imul   eax,DWORD PTR [ebx+0x35ff8320],0x9e8fffff
  41c8c0:	add    DWORD PTR [eax],0xffffffce
  41c8c3:	dec    DWORD PTR [eax-0x1]
  41c8c6:	lods   eax,DWORD PTR ds:[esi]
  41c8c7:	or     al,0xb6
  41c8c9:	inc    DWORD PTR [eax]
  41c8cb:	jecxz  0x41c850
  41c8cd:	xor    DWORD PTR [ebx+ebp*1],0x0
  41c8d1:	push   DWORD PTR [esi]
  41c8d3:	dec    eax
  41c8d5:	sub    edx,0x63
  41c8d8:	or     bh,bh
  41c8da:	add    BYTE PTR [ebp-0x75000001],dl
  41c8e0:	add    bh,bh
  41c8e2:	mov    cl,0xff
  41c8e4:	test   eax,0x2b364600
  41c8e9:	mov    edi,edi
  41c8eb:	mov    al,BYTE PTR [ebx+0xa45bff]
  41c8f1:	push   edx
  41c8f3:	int3   
  41c8f4:	fld    QWORD PTR [eax]
  41c8f6:	jne    0x41c878
  41c8f8:	inc    edx
  41c8f9:	(bad)  
  41c8fa:	call   DWORD PTR [esi]
  41c8fc:	(bad)  
  41c8fd:	dec    DWORD PTR [ecx]
  41c8ff:	pusha  
  41c900:	int3   
  41c901:	add    BYTE PTR [eax+0x0],ah
  41c904:	iret   
  41c905:	push   DWORD PTR [eax]
  41c907:	xchg   esp,eax
  41c908:	jno    0x41c909
  41c90a:	inc    esp
  41c90c:	cmp    edi,0x23
  41c90f:	enter  0xffff,0xe6
  41c913:	add    BYTE PTR [eax],bh
  41c915:	call   FWORD PTR [esi]
  41c917:	push   ss
  41c918:	push   0xffffff83
  41c91a:	add    BYTE PTR [ebx-0x21d17700],bl
  41c920:	cmp    edi,0xffffffcf
  41c923:	call   DWORD PTR [edx-0x72e2f700]
  41c929:	(bad)  
  41c92a:	(bad)  
  41c92b:	stc    
  41c92c:	add    bh,bh
  41c92e:	setge  BYTE PTR [ebx-0x5d002201]
  41c935:	push   DWORD PTR [esp+edi*2-0x2f763350]
  41c93c:	int3   
  41c93d:	(bad)  
  41c93e:	faddp  st(2),st
  41c940:	int3   
  41c941:	dec    DWORD PTR [edx]
  41c943:	or     DWORD PTR [ebx-0x77],0x7f
  41c947:	ficom  WORD PTR [eax-0x1]
  41c94a:	call   FWORD PTR [edx-0x2a170001]
  41c950:	add    BYTE PTR [ebx-0x7cef0030],al
  41c956:	rcr    eax,0x4b
  41c959:	add    BYTE PTR [eax],al
  41c95b:	xor    bh,bh
  41c95d:	call   DWORD PTR [edx]
  41c95f:	clc    
  41c960:	(bad)  
  41c961:	inc    DWORD PTR [ebx]
  41c963:	add    BYTE PTR [edi+edi*8],cl
  41c966:	sbb    DWORD PTR [ebx],0xffffff8f
  41c969:	mov    edi,edi
  41c96b:	jg     0x41c96c
  41c96d:	add    ch,bh
  41c96f:	jb     0x41c970
  41c971:	call   FWORD PTR [ebx+0x29ff45ff]
  41c977:	imul   ebx,ebx,0xccacffff
  41c97d:	add    cl,cl
  41c97f:	stc    
  41c980:	add    BYTE PTR [ebx+0x28ff93],al
  41c986:	je     0x41c969
  41c988:	sar    edi,0xff
  41c98b:	push   ss
  41c98c:	(bad)  
  41c98d:	(bad)  
  41c98e:	out    dx,al
  41c98f:	add    cl,ah
  41c991:	dec    DWORD PTR [edi]
  41c993:	or     DWORD PTR [edx-0x1],0x70
  41c997:	fdivr  QWORD PTR [ecx]
  41c999:	cmp    edi,0x3f
  41c99c:	(bad)  
  41c99d:	jmp    DWORD PTR [edi+0x7b]
  41c9a0:	mov    DWORD PTR [eax],eax
  41c9a2:	lahf   
  41c9a3:	(bad)  
  41c9a4:	jmp    0x41c9a5
  41c9a6:	popf   
  41c9a7:	hlt    
  41c9a8:	mov    BYTE PTR [ebx-0x7cffa701],0xe1
  41c9af:	and    eax,0x81ff83
  41c9b4:	leave  
  41c9b5:	call   DWORD PTR [ecx+0xffecb9]
  41c9bb:	dec    ecx
  41c9bc:	mov    DWORD PTR [eax],eax
  41c9be:	out    dx,al
  41c9bf:	gs (bad) 
  41c9c1:	dec    DWORD PTR [eax]
  41c9c3:	jmp    DWORD PTR [eax-0x1]
  41c9c6:	pop    edx
  41c9c7:	mov    bh,0x98
  41c9c9:	mov    edi,edi
  41c9cb:	je     0x41c9cd
  41c9cd:	inc    DWORD PTR [ecx+eax*4-0x33a00001]
  41c9d4:	push   ecx
  41c9d5:	dec    edx
  41c9d7:	fild   DWORD PTR [esi]
  41c9d9:	cmp    edi,0x44
  41c9dc:	(bad)  
  41c9dd:	call   esi
  41c9df:	sar    bh,cl
  41c9e1:	jmp    FWORD PTR [ebx+0x1c8308ff]
  41c9e7:	mov    bh,BYTE PTR [ebp-0x1]
  41c9ea:	call   edi
  41c9ec:	(bad)  
  41c9ed:	call   FWORD PTR [edx]
  41c9ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f0:	add    DWORD PTR [eax],0x27
  41c9f3:	(bad)  
  41c9f4:	std    
  41c9f5:	add    cl,bh
  41c9f7:	push   esi
  41c9f8:	push   ebp
  41c9f9:	add    BYTE PTR [eax],al
  41c9fb:	mov    bh,0x89
  41c9fd:	add    BYTE PTR [ecx-0x2a00ff81],bh
  41ca03:	add    ah,dh
  41ca05:	add    BYTE PTR [ebx+0xffc9a6],bh
  41ca0b:	(bad)  
  41ca0d:	add    BYTE PTR [ebp-0x55],bh
  41ca10:	(bad)  
  41ca11:	dec    DWORD PTR [ebp-0x1]
  41ca14:	xchg   edx,eax
  41ca15:	int3   
  41ca16:	inc    ebp
  41ca17:	(bad)  
  41ca18:	dec    edx
  41ca19:	add    bh,bh
  41ca1b:	add    al,0x0
  41ca1d:	add    BYTE PTR [ebp+0x4e],bl
  41ca20:	(bad)  
  41ca21:	dec    DWORD PTR [edx-0x34]
  41ca24:	dec    eax
  41ca25:	int3   
  41ca26:	lods   al,BYTE PTR ds:[esi]
  41ca27:	adc    DWORD PTR [ecx],esi
  41ca29:	dec    DWORD PTR [ecx-0x2ff00a8]
  41ca2f:	inc    ebp
  41ca30:	inc    DWORD PTR [eax]
  41ca32:	mov    bh,bh
  41ca34:	popa   
  41ca35:	dec    DWORD PTR [edi]
  41ca37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca38:	lds    eax,FWORD PTR [eax]
  41ca3a:	dec    DWORD PTR [edi+0x5d210000]
  41ca40:	add    BYTE PTR [eax],al
  41ca42:	imul   ecx,esp,0x1a
  41ca45:	jmp    FWORD PTR [ebx-0xff819e]
  41ca4b:	push   cs
  41ca4c:	add    BYTE PTR [ebx+0x3ab],al
  41ca52:	outs   dx,DWORD PTR ds:[esi]
  41ca53:	sbb    edi,0xffffffff
  41ca56:	imul   edx,DWORD PTR [ebp+0x43cc83cd],0xffffffff
  41ca5d:	add    BYTE PTR ds:0xff00ff25,dl
  41ca63:	jmp    FWORD PTR [ecx]
  41ca65:	mov    eax,ebx
  41ca67:	add    bl,dh
  41ca69:	add    DWORD PTR [eax],0x40
  41ca6c:	inc    DWORD PTR [eax]
  41ca6e:	out    0x7c,al
  41ca70:	add    bh,bh
  41ca72:	mov    bh,0xff
  41ca74:	or     ah,cl
  41ca76:	data16 das 
  41ca78:	(bad)  
  41ca7a:	push   DWORD PTR [eax]
  41ca7c:	inc    DWORD PTR [eax]
  41ca7e:	fs cdq 
  41ca80:	add    bh,bh
  41ca82:	call   FWORD PTR es:[edi+0x0]
  41ca86:	pusha  
  41ca87:	lahf   
  41ca88:	clc    
  41ca89:	add    BYTE PTR [ebx+0x5dff83c9],al
  41ca8f:	xchg   ecx,eax
  41ca90:	inc    DWORD PTR [ebx+0x30ff68]
  41ca96:	mov    al,BYTE PTR [esi+0x6b]
  41ca99:	inc    DWORD PTR [ebx+0x5883ff84]
  41ca9f:	rol    DWORD PTR [eax],0x0
  41caa2:	xchg   ecx,eax
  41caa3:	xor    DWORD PTR [eax],0xffffffff
  41caa6:	mov    ?,ebp
  41caa8:	push   ds
  41caa9:	(bad)  
  41caaa:	jmp    esp
  41caac:	inc    DWORD PTR [ebx-0xff88cd]
  41cab2:	pop    ebp
  41cab3:	sub    DWORD PTR [edx-0x1ae3d400],0xffffffff
  41caba:	inc    ebx
  41cabc:	add    BYTE PTR [eax],al
  41cabe:	push   esi
  41cabf:	addr16 (bad) 
  41cac1:	push   DWORD PTR [ecx-0x1]
  41cac4:	and    esp,ecx
  41cac6:	retf   
  41cac7:	xchg   esi,eax
  41cac8:	xchg   ecx,eax
  41cac9:	inc    DWORD PTR [ebx+0x3ccffe9]
  41cacf:	arpl   di,di
  41cad1:	call   DWORD PTR [edi]
  41cad3:	inc    DWORD PTR [edi+edi*8+0x1a]
  41cad7:	les    esp,FWORD PTR [ebx]
  41cad9:	add    ah,cl
  41cadb:	sar    edi,cl
  41cadd:	call   FWORD PTR [edi+edx*1+0x0]
  41cae1:	int3   
  41cae2:	sub    eax,0x2aff24ff
  41cae7:	sbb    BYTE PTR [bx+di+0x3b89],cl
  41caec:	(bad)  
  41caed:	call   FWORD PTR [edi+0x7fffff9e]
  41caf3:	int3   
  41caf4:	mov    dh,0x0
  41caf6:	mul    DWORD PTR [eax+eax*2-0x1]
  41cafa:	or     DWORD PTR [esi-0x1],0xffffffff
  41cafe:	test   DWORD PTR [edx],ebx
  41cb00:	add    BYTE PTR [eax],al
  41cb02:	les    eax,FWORD PTR [eax]
  41cb04:	outs   dx,DWORD PTR ds:[esi]
  41cb05:	add    BYTE PTR ds:0xff83f2d0,cl
  41cb0b:	retf   0x0
  41cb0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb0f:	mov    bh,0x0
  41cb11:	inc    DWORD PTR [ecx+0x338973cc]
  41cb17:	movaps xmm7,xmm7
  41cb1a:	call   DWORD PTR [ebx]
  41cb1c:	add    bh,bh
  41cb1e:	shl    edx,0xff
  41cb21:	(bad)  
  41cb22:	fcos   
  41cb24:	adc    al,0x0
  41cb26:	lds    ecx,FWORD PTR [ebp+0x100cc01]
  41cb2c:	inc    DWORD PTR [eax]
  41cb2e:	adc    ah,ah
  41cb30:	inc    DWORD PTR [eax]
  41cb32:	mov    cl,0xff
  41cb34:	mov    BYTE PTR [eax],0xee
  41cb37:	xchg   ecx,eax
  41cb38:	and    bh,bh
  41cb3a:	inc    eax
  41cb3c:	add    ah,cl
  41cb3e:	sub    al,0xb7
  41cb40:	inc    DWORD PTR [eax]
  41cb42:	(bad)  
  41cb43:	push   DWORD PTR [edi]
  41cb45:	dec    DWORD PTR [edx+0x2b]
  41cb48:	pusha  
  41cb49:	add    BYTE PTR [eax],al
  41cb4b:	inc    edx
  41cb4c:	add    BYTE PTR [eax],al
  41cb4e:	mov    WORD PTR [edi],cs
  41cb50:	or     esp,0x72
  41cb53:	call   DWORD PTR [eax-0x7d]
  41cb56:	cmp    DWORD PTR [ecx+ebp*4],eax
  41cb59:	add    DWORD PTR [eax],0x20
  41cb5c:	inc    DWORD PTR [eax]
  41cb5e:	lea    edx,[edi-0x7cb60001]
  41cb64:	jbe    0x41cb65
  41cb66:	into   
  41cb67:	sbb    dl,al
  41cb69:	dec    esp
  41cb6b:	xchg   ebx,eax
  41cb6c:	add    BYTE PTR [eax],al
  41cb6e:	xchg   edx,eax
  41cb6f:	in     al,0x0
  41cb71:	dec    edx
  41cb73:	jmp    DWORD PTR [ebx+0x27fc3bff]
  41cb79:	inc    DWORD PTR [ebx+0x50ffff0b]
  41cb7f:	cmp    BYTE PTR [eax],al
  41cb81:	add    BYTE PTR [ebx-0x1],dl
  41cb84:	mov    edi,0xcb2f7a83
  41cb89:	add    bh,bh
  41cb8b:	enter  0xff,0x3b
  41cb8f:	stc    
  41cb90:	inc    DWORD PTR [eax]
  41cb92:	add    BYTE PTR [eax],al
  41cb94:	fild   DWORD PTR [eax]
  41cb96:	nop
  41cb97:	scas   al,BYTE PTR es:[edi]
  41cb98:	push   esp
  41cb99:	add    BYTE PTR [eax],al
  41cb9b:	adc    ecx,esp
  41cb9d:	int3   
  41cb9e:	jmp    0x41cb71
  41cba0:	cmp    edi,0x42
  41cba3:	inc    esi
  41cba5:	jmp    FWORD PTR [ebp-0x2]
  41cba8:	xchg   ecx,eax
  41cba9:	int3   
  41cbaa:	inc    edx
  41cbac:	add    BYTE PTR [eax],al
  41cbae:	or     DWORD PTR [edx+0x0],esp
  41cbb1:	call   esp
  41cbb3:	add    BYTE PTR [edi+edi*8],al
  41cbb6:	inc    esp
  41cbb7:	sbb    DWORD PTR [esi+0x0],esi
  41cbba:	add    ah,bl
  41cbbc:	inc    DWORD PTR [eax]
  41cbbe:	mov    edi,0xb7ffff86
  41cbc3:	add    BYTE PTR [eax],dl
  41cbc5:	int3   
  41cbc6:	stos   BYTE PTR es:[edi],al
  41cbc7:	dec    edx
  41cbc8:	loopne 0x41cbc9
  41cbca:	push   DWORD PTR [edx]
  41cbcc:	(bad)  
  41cbcd:	(bad)  
  41cbce:	dec    BYTE PTR [esi]
  41cbd0:	add    bh,bh
  41cbd2:	mov    ch,0xff
  41cbd4:	fild   WORD PTR [eax]
  41cbd6:	dec    eax
  41cbd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd8:	rol    BYTE PTR [eax],1
  41cbda:	sbb    DWORD PTR [esi],0xffffff83
  41cbdd:	inc    ebx
  41cbdf:	fld    QWORD PTR [eax]
  41cbe1:	call   FWORD PTR [edi+edi*8]
  41cbe4:	pop    esi
  41cbe5:	add    BYTE PTR [ebx+0x26],bh
  41cbe8:	mov    DWORD PTR [ebx+0xcc9fff],eax
  41cbee:	push   edx
  41cbef:	inc    BYTE PTR [ebx+0x27ff9483]
  41cbf5:	add    BYTE PTR [esi],dh
  41cbf7:	outs   dx,DWORD PTR gs:[esi]
  41cbf9:	dec    esp
  41cbfb:	nop
  41cbfc:	inc    DWORD PTR [ebx-0x69ee]
  41cc02:	(bad)  
  41cc03:	(bad)  
  41cc04:	(bad)  
  41cc05:	jmp    DWORD PTR [esi+0x16]
  41cc08:	add    DWORD PTR [ebx+0x89fc89],0x83fffec7
  41cc12:	sar    bh,0xb0
  41cc15:	(bad)  
  41cc16:	call   0x41db01
  41cc1b:	rol    DWORD PTR [eax],cl
  41cc1d:	int3   
  41cc1e:	test   BYTE PTR [eax+0x0],bh
  41cc21:	push   DWORD PTR [ebp-0x1]
  41cc24:	pop    es
  41cc25:	int3   
  41cc26:	and    ch,al
  41cc28:	ret    
  41cc29:	add    DWORD PTR [eax],0xffffff80
  41cc2c:	inc    DWORD PTR [eax]
  41cc2e:	cmp    BYTE PTR [ecx-0x1],0xcc
  41cc32:	cmp    bh,bh
  41cc34:	mov    DWORD PTR [ecx+0x47ad67],ecx
  41cc3a:	push   DWORD PTR [ecx-0x394a0100]
  41cc40:	(bad)  
  41cc41:	inc    DWORD PTR [edx]
  41cc43:	add    BYTE PTR [ebx+eax*4],dl
  41cc46:	mov    edi,0xff89acb0
  41cc4b:	xchg   ebp,eax
  41cc4c:	add    BYTE PTR [ecx+0xff0d8d],cl
  41cc52:	adc    eax,0x82cca700
  41cc57:	mov    eax,ds:0xa0ff002a
  41cc5c:	inc    DWORD PTR [ebx+0x69a7]
  41cc62:	inc    edi
  41cc63:	inc    ecx
  41cc65:	xor    edi,0xffffffd2
  41cc68:	hlt    
  41cc69:	add    BYTE PTR [eax],al
  41cc6b:	rol    DWORD PTR [ebx+0x904b89],1
  41cc71:	jmp    FWORD PTR [ebx-0x3d009d00]
  41cc77:	push   0x2400ff4f
  41cc7c:	add    DWORD PTR [eax],0x5c
  41cc7f:	cld    
  41cc80:	int3   
  41cc81:	add    BYTE PTR [esi+0x29fff8ff],ah
  41cc87:	cld    
  41cc88:	sub    DWORD PTR [ecx+0xcc7500],ecx
  41cc8e:	and    BYTE PTR [eax+eax*1],ch
  41cc91:	int3   
  41cc92:	push   ecx
  41cc93:	sbb    DWORD PTR [eax-0x1],0x58
  41cc97:	lock cs cmp edi,0xffffffd2
  41cc9c:	mov    edi,edi
  41cc9e:	mov    edi,0xccff3f
  41cca3:	add    BYTE PTR [ebp-0x1],bl
  41cca6:	jge    0x41cc30
  41cca8:	sbb    edi,edi
  41ccaa:	add    BYTE PTR [ecx+0x57a0ccff],bl
  41ccb0:	add    BYTE PTR [ebx-0x7ce07cba],al
  41ccb6:	gs inc eax
  41ccb8:	jmp    0x41ccba
  41ccba:	call   edx
  41ccbc:	add    bh,bh
  41ccbe:	bound  esp,QWORD PTR [ebp-0x3ff01]
  41ccc4:	popf   
  41ccc5:	sub    DWORD PTR [ebp+0xff2517],0x3a
  41cccc:	inc    DWORD PTR [eax]
  41ccce:	addr16 (bad) 
  41ccd0:	inc    DWORD PTR [eax]
  41ccd2:	adc    eax,DWORD PTR [eax]
  41ccd4:	mov    dh,0xcc
  41ccd6:	int    0xa0
  41ccd8:	lds    eax,FWORD PTR [eax]
  41ccda:	push   DWORD PTR [ebx-0x2ceff7d]
  41cce0:	(bad)  
  41cce1:	(bad)  
  41cce2:	js     0x41ccb0
  41cce4:	fdivp  st(7),st
  41cce6:	and    al,0x95
  41cce8:	ins    BYTE PTR es:[edi],dx
  41cce9:	(bad)  
  41ccea:	push   edx
  41ccec:	(bad)  
  41cced:	jmp    DWORD PTR [ebx+0x74]
  41ccf0:	(bad)  
  41ccf1:	(bad)  
  41ccf2:	out    dx,eax
  41ccf3:	add    bh,bl
  41ccf5:	inc    DWORD PTR [edi]
  41ccf7:	imul   ebx,ecx,0x0
  41ccfa:	add    BYTE PTR [esi],dh
  41ccfc:	dec    esp
  41ccfe:	jnp    0x41cd5e
  41cd00:	int3   
  41cd01:	add    BYTE PTR [ecx+0x48830200],al
  41cd07:	jle    0x41cd86
  41cd09:	int3   
  41cd0a:	add    BYTE PTR [esi-0x19c10001],bl
  41cd10:	add    DWORD PTR [ebx-0x9761e],0xffffff8e
  41cd17:	popa   
  41cd18:	mov    edx,0xfff900ff
  41cd1d:	call   FWORD PTR [edi+esi*4-0xb9007d]
  41cd24:	xor    eax,DWORD PTR [eax]
  41cd26:	push   es
  41cd27:	in     eax,0xa3
  41cd29:	mov    DWORD PTR [eax],eax
  41cd2b:	or     esp,0xffffffff
  41cd2e:	rcr    DWORD PTR [ebx-0x7d],1
  41cd31:	(bad)  
  41cd32:	mov    ecx,0x86ffc0ff
  41cd37:	leave  
  41cd38:	sti    
  41cd39:	inc    DWORD PTR [eax]
  41cd3b:	lods   eax,DWORD PTR ds:[esi]
  41cd3c:	cmp    edi,0xffffffd6
  41cd3f:	jmp    0xff69:0xffbe00cc
  41cd46:	add    al,0x90
  41cd48:	mov    ebp,0xff01cc83
  41cd4d:	inc    DWORD PTR [ebx+0x69]
  41cd50:	int3   
  41cd51:	int3   
  41cd52:	fiadd  WORD PTR [eax]
  41cd54:	mov    bl,0xff
  41cd56:	inc    eax
  41cd57:	jb     0x41cd13
  41cd59:	dec    DWORD PTR [ecx+0x300cccd]
  41cd5f:	retf   0xff
  41cd62:	mov    dh,0x83
  41cd64:	dec    eax
  41cd65:	push   DWORD PTR [ebp-0x1512]
  41cd6b:	mov    esi,0xb46cffff
  41cd70:	add    bh,bh
  41cd72:	cmp    eax,0x2489abff
  41cd77:	dec    edi
  41cd78:	pushf  
  41cd79:	add    BYTE PTR [eax],al
  41cd7b:	int3   
  41cd7c:	(bad)  
  41cd7d:	dec    DWORD PTR [edi]
  41cd7f:	xor    BYTE PTR [eax],al
  41cd81:	push   DWORD PTR ds:0x2500d9ff
  41cd87:	sbb    al,0xd5
  41cd89:	dec    esp
  41cd8b:	sbb    eax,0xd5f100ff
  41cd90:	add    bh,bh
  41cd92:	fcos   
  41cd94:	jp     0x41cd95
  41cd96:	addr16 jmp 0xffff:0x6c83002e
  41cd9e:	inc    ecx
  41cd9f:	arpl   WORD PTR [ecx+0x30898eff],cx
  41cda5:	call   FWORD PTR [ebp+0x36]
  41cda8:	iret   
  41cda9:	add    DWORD PTR [eax],0xffffff94
  41cdac:	cmp    edi,0x6b
  41cdaf:	adc    eax,0xffc9ffff
  41cdb4:	lods   al,BYTE PTR ds:[esi]
  41cdb5:	add    BYTE PTR [edx],dh
  41cdb7:	dec    esi
  41cdb8:	pusha  
  41cdb9:	add    DWORD PTR [eax],0x3f
  41cdbc:	add    BYTE PTR [ecx-0x7cff29a4],cl
  41cdc2:	pusha  
  41cdc3:	add    BYTE PTR [eax-0x5de7ff01],cl
  41cdc9:	int3   
  41cdca:	add    BYTE PTR [edi+edi*8],ah
  41cdcd:	jmp    FWORD PTR [edx+0x11ffff24]
  41cdd3:	xor    DWORD PTR [ecx],0x0
  41cdd6:	mov    al,ds:0xffffe345
  41cddb:	push   edi
  41cddc:	add    bh,bh
  41cdde:	pop    eax
  41cddf:	jmp    0x6fcdb0
  41cde4:	imul   edi,edi,0xff0eed34
  41cdea:	mov    DWORD PTR [esi],edx
  41cdec:	(bad)  
  41cded:	call   FWORD PTR [edi-0x5c]
  41cdf0:	add    DWORD PTR [eax],0xffffffdb
  41cdf3:	jmp    FWORD PTR [edi+edi*8]
  41cdf6:	dec    ecx
  41cdf7:	shr    ch,0xff
  41cdfa:	call   DWORD PTR [edx+0x3add8300]
  41ce00:	add    bh,bh
  41ce02:	mov    edi,?
  41ce04:	sbb    eax,0x10d54683
  41ce09:	add    BYTE PTR [ebx-0xf76008d],al
  41ce0f:	xor    eax,DWORD PTR [eax]
  41ce11:	inc    DWORD PTR [edx]
  41ce13:	jmp    FWORD PTR [ebx+0x1ff19783]
  41ce19:	add    BYTE PTR [ecx+0x2fccff3c],cl
  41ce1f:	dec    edi
  41ce20:	inc    DWORD PTR [eax]
  41ce22:	mov    BYTE PTR [ebx+0x4c0832a],0xfd
  41ce29:	add    BYTE PTR [eax],al
  41ce2b:	pop    esi
  41ce2c:	add    bh,bh
  41ce2e:	jecxz  0x41ce47
  41ce30:	dec    esp
  41ce32:	stos   BYTE PTR es:[edi],al
  41ce33:	add    BYTE PTR [esi-0x4a283e77],cl
  41ce39:	dec    DWORD PTR [ecx-0xcff00bf]
  41ce3f:	scas   eax,DWORD PTR es:[edi]
  41ce40:	add    BYTE PTR [ebx-0x99ff70],al
  41ce46:	sbb    eax,DWORD PTR [eax+ebx*2-0x7cc80001]
  41ce4d:	jmp    DWORD PTR [eax+0x28ff00df]
  41ce53:	dec    DWORD PTR [edi+edi*8-0x50]
  41ce57:	adc    ah,bh
  41ce59:	(bad)  
  41ce5a:	jmp    FWORD PTR [edi+0x0]
  41ce5d:	mov    DWORD PTR ds:0x4bffff6c,edi
  41ce63:	add    BYTE PTR [edi],cl
  41ce65:	add    BYTE PTR [eax],bl
  41ce67:	mov    ebp,0x1e83ff2f
  41ce6c:	(bad)  
  41ce6d:	(bad)  
  41ce6e:	fcomip st,st(3)
  41ce70:	add    BYTE PTR [eax],al
  41ce72:	sar    edi,1
  41ce74:	mov    WORD PTR [eax],es
  41ce76:	retf   0x1fd6
  41ce79:	inc    DWORD PTR [ebx+0x230000e4]
  41ce7f:	push   eax
  41ce80:	(bad)  
  41ce81:	jmp    FWORD PTR [ecx]
  41ce83:	add    eax,0x0
  41ce86:	and    edi,DWORD PTR ds:0x2c83cc14
  41ce8c:	inc    DWORD PTR [eax]
  41ce8e:	outs   dx,BYTE PTR ds:[esi]
  41ce8f:	cdq    
  41ce90:	add    BYTE PTR [ebx-0xb233c7],al
  41ce96:	pop    es
  41ce97:	mov    ecx,0xbdff0044
  41ce9c:	(bad)  
  41ce9d:	push   DWORD PTR [ebx+0x72]
  41cea0:	add    bh,bh
  41cea2:	inc    edi
  41cea3:	add    dl,al
  41cea5:	push   DWORD PTR [edx]
  41cea7:	mov    eax,DWORD PTR [edi]
  41cea9:	add    DWORD PTR [eax],0xffffffba
  41ceac:	add    bh,bh
  41ceae:	mov    al,ds:0xbcff00d1
  41ceb3:	add    BYTE PTR [ebx+0x0],ah
  41ceb6:	fnstcw WORD PTR [edi+0x5d]
  41ceb9:	add    bh,bh
  41cebb:	jbe    0x41cebc
  41cebd:	jmp    DWORD PTR [ebx-0x6f]
  41cec0:	inc    DWORD PTR [eax]
  41cec2:	add    al,0xff
  41cec4:	inc    esi
  41cec5:	add    ch,cl
  41cec7:	popf   
  41cec8:	data16 add BYTE PTR [ebx-0x30ffff4c],al
  41cecf:	push   ecx
  41ced0:	(bad)  
  41ced1:	dec    DWORD PTR [edx]
  41ced3:	inc    DWORD PTR [esi-0x1]
  41ced6:	jb     0x41ce93
  41ced8:	adc    bh,bh
  41ceda:	sbb    DWORD PTR [eax],0xffffff83
  41cedd:	int3   
  41cede:	inc    esp
  41cedf:	and    al,0x89
  41cee1:	dec    DWORD PTR [ecx-0x1a00fc00]
  41cee7:	daa    
  41cee8:	iret   
  41cee9:	add    BYTE PTR [eax],al
  41ceeb:	loop   0x41ceec
  41ceed:	jmp    DWORD PTR [edx+0x52]
  41cef0:	inc    DWORD PTR [ebx-0x78ffdc]
  41cef6:	sub    esp,DWORD PTR ds:0x6f830027
  41cefc:	(bad)  
  41cefd:	jmp    FWORD PTR [edx]
  41ceff:	inc    ebx
  41cf00:	mov    edi,edi
  41cf02:	data16 add BYTE PTR [esi],dh
  41cf05:	mov    DWORD PTR [esi-0x7b8f],edi
  41cf0b:	pop    esi
  41cf0c:	dec    DWORD PTR [ecx-0x7cff48ae]
  41cf12:	sbb    edi,edi
  41cf14:	test   esp,ecx
  41cf16:	cs dec esi
  41cf18:	push   ds
  41cf19:	add    bh,bh
  41cf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf1c:	add    BYTE PTR [eax],al
  41cf1e:	add    DWORD PTR [ebp-0x7c3b0000],0xc989ffe1
  41cf28:	fwait
  41cf29:	inc    DWORD PTR [ebx+0x54ff0025]
  41cf2f:	sar    bh,1
  41cf31:	cmp    ecx,0xffffffff
  41cf34:	push   esp
  41cf35:	add    BYTE PTR [ecx-0x33000bdc],bl
  41cf3b:	adc    bh,bh
  41cf3d:	cmp    DWORD PTR [esp+ecx*2],0x0
  41cf41:	push   DWORD PTR [eax]
  41cf43:	jmp    FWORD PTR [edi-0x77]
  41cf46:	add    BYTE PTR [eax],bh
  41cf48:	iret   
  41cf49:	add    ah,cl
  41cf4b:	sahf   
  41cf4c:	cmp    edi,0x53
  41cf4f:	(bad)  
  41cf51:	jmp    DWORD PTR [esi]
  41cf53:	adc    DWORD PTR [edi-0x1],0x6b
  41cf57:	sti    
  41cf58:	inc    esp
  41cf59:	add    DWORD PTR [eax],0x4c
  41cf5c:	inc    DWORD PTR [ebx-0xb61f]
  41cf62:	mov    al,0xff
  41cf64:	ss push esi
  41cf67:	mov    BYTE PTR [eax-0x1],dh
  41cf6a:	jmp    FWORD PTR [ecx+0x5f48389]
  41cf70:	int3   
  41cf71:	add    bl,al
  41cf73:	add    dl,dl
  41cf75:	add    DWORD PTR [ebp-0xffd123],0xffffffb4
  41cf7c:	mov    edi,edi
  41cf7e:	adc    eax,0x3fff0047
  41cf83:	push   DWORD PTR [eax-0x1]
  41cf86:	add    BYTE PTR [ecx+0x7000ff70],bl
  41cf8c:	(bad)  
  41cf8d:	call   DWORD PTR [eax-0x53]
  41cf90:	mov    edi,edi
  41cf92:	push   ebx
  41cf93:	jmp    esp
  41cf95:	mov    DWORD PTR [ebp+ecx*4+0x4a],edx
  41cf99:	inc    DWORD PTR [eax]
  41cf9b:	ud0    eax,DWORD PTR [eax]
  41cf9e:	add    eax,0x2ff892f
  41cfa3:	push   DWORD PTR [eax]
  41cfa5:	add    dh,bh
  41cfa7:	jb     0x41cf63
  41cfa9:	(bad)  
  41cfaa:	push   edi
  41cfac:	cmp    edi,0x2b
  41cfaf:	cmp    eax,0x1fffff
  41cfb4:	pop    es
  41cfb5:	add    BYTE PTR [ebx-0x33006f1d],ch
  41cfbb:	sar    edi,cl
  41cfbd:	add    ch,bl
  41cfbf:	fld    DWORD PTR [ebx-0x56ffae00]
  41cfc5:	add    DWORD PTR ds:0xff000b44,0x29
  41cfcc:	inc    DWORD PTR [ebx-0xff7a54]
  41cfd2:	inc    ecx
  41cfd3:	(bad)  
  41cfd4:	mov    eax,0x16e7f9ff
  41cfd9:	add    ah,cl
  41cfdb:	rol    BYTE PTR [ebx-0x94807d],1
  41cfe1:	(bad)  
  41cfe2:	mov    edx,0xc183f700
  41cfe7:	mov    ah,0xb3
  41cfe9:	int3   
  41cfea:	add    dh,bh
  41cfec:	inc    DWORD PTR [eax]
  41cfee:	cmp    eax,0x9300ff26
  41cff3:	int3   
  41cff4:	loope  0x41cfc2
  41cff6:	dec    esi
  41cff7:	sub    ecx,DWORD PTR [ebx]
  41cff9:	add    BYTE PTR [eax],al
  41cffb:	outs   dx,BYTE PTR ds:[esi]
  41cffc:	inc    DWORD PTR [eax]
  41cffe:	add    eax,0xd3ff898f
  41d003:	mov    DWORD PTR [esi-0x1],eax
  41d006:	fwait
  41d007:	(bad)  
  41d008:	das    
  41d009:	inc    DWORD PTR [eax]
  41d00b:	xchg   esp,eax
  41d00c:	add    bh,bh
  41d00e:	mov    bl,0xfc
  41d010:	add    bh,bh
  41d012:	sbb    eax,0x7583d983
  41d017:	out    0x60,eax
  41d019:	add    BYTE PTR [eax],al
  41d01b:	leave  
  41d01c:	(bad)  
  41d01d:	inc    DWORD PTR [edx-0x24]
  41d020:	(bad)  
  41d021:	push   DWORD PTR [ecx-0x34]
  41d024:	(bad)  
  41d027:	daa    
  41d028:	lods   eax,DWORD PTR ds:[esi]
  41d029:	add    BYTE PTR [eax],al
  41d02b:	test   bh,bh
  41d02d:	add    BYTE PTR [edi-0x37ffffbf],bl
  41d033:	(bad)  
  41d034:	(bad)  [ecx-0x7c93d2]
  41d03a:	cmp    DWORD PTR [eax+0x31ffff],0xffffff89
  41d041:	int3   
  41d042:	call   0x4411a47
  41d047:	add    eax,0x650000c1
  41d04c:	int3   
  41d04d:	int3   
  41d04e:	mov    BYTE PTR [edi-0x1],dl
  41d051:	call   DWORD PTR [ebx+eax*4]
  41d054:	inc    esi
  41d055:	add    BYTE PTR [ecx+0xff62a3],ch
  41d05b:	aas    
  41d05c:	add    bh,bh
  41d05e:	rol    DWORD PTR [eax+eax*1-0x7800bf01],cl
  41d065:	add    al,dl
  41d067:	and    esi,DWORD PTR [ecx]
  41d069:	or     esp,0xffffffc3
  41d06c:	add    DWORD PTR [eax],0xffffff87
  41d06f:	inc    esp
  41d070:	add    bh,bh
  41d072:	fld    DWORD PTR [ebx+0x6d0000bb]
  41d078:	dec    ebx
  41d079:	(bad)  
  41d07a:	inc    DWORD PTR [ebx+0xbd289ff]
  41d080:	inc    DWORD PTR [eax]
  41d082:	popf   
  41d083:	add    BYTE PTR [esi-0x1],dh
  41d086:	mov    fs,WORD PTR [ebp-0x437c7656]
  41d08c:	dec    esp
  41d08e:	cmp    DWORD PTR [ebx-0x7d],edi
  41d091:	add    BYTE PTR [ebx],ch
  41d093:	mov    ebx,edx
  41d095:	int3   
  41d096:	adc    ebp,ecx
  41d098:	or     eax,0xcfffcc
  41d09d:	add    dl,bh
  41d09f:	xor    al,BYTE PTR [eax]
  41d0a1:	int3   
  41d0a2:	cmp    edi,0x35
  41d0a5:	sbb    ebx,0x48
  41d0a8:	pop    es
  41d0a9:	cmp    edi,0x37
  41d0ac:	inc    DWORD PTR [ebx-0x7cff1064]
  41d0b2:	(bad)  
  41d0b5:	call   DWORD PTR [eax-0x74]
  41d0b8:	call   0x5489:0x6ffff
  41d0bf:	aas    
  41d0c0:	(bad)  
  41d0c1:	(bad)  
  41d0c2:	(bad)  
  41d0c3:	jmp    FWORD PTR [ebx-0x1]
  41d0c6:	bound  edx,QWORD PTR [ebp-0x3e]
  41d0c9:	add    BYTE PTR [ebx-0x3a00003d],al
  41d0cf:	jg     0x41d0d0
  41d0d1:	mov    DWORD PTR [eax+eax*1-0x4e68ff15],edx
  41d0d8:	pop    ss
  41d0d9:	(bad)  
  41d0da:	jmp    DWORD PTR [ebp-0x1]
  41d0dd:	add    BYTE PTR [ecx-0x64],dl
  41d0e0:	(bad)  
  41d0e1:	dec    DWORD PTR [ebx]
  41d0e3:	add    BYTE PTR [esi],ah
  41d0e5:	mov    edi,esi
  41d0e7:	out    0x3c,eax
  41d0e9:	add    BYTE PTR [ebx-0x1200ff21],al
  41d0ef:	arpl   WORD PTR [eax],ax
  41d0f1:	add    BYTE PTR [ecx+0x0],dh
  41d0f4:	and    al,BYTE PTR [ebx-0xf52572]
  41d0fa:	jmp    edi
  41d0fc:	(bad)  
  41d0fd:	inc    edx
  41d0ff:	cmc    
  41d100:	add    DWORD PTR [eax],0x5a
  41d103:	call   DWORD PTR [esi]
  41d105:	call   FWORD PTR [ebp+0x137c]
  41d10b:	out    0x83,eax
  41d10d:	inc    DWORD PTR [eax+eiz*1]
  41d110:	or     DWORD PTR [ecx+0x4c006e],0xffffffaa
  41d117:	jl     0x41d0d7
  41d119:	cmp    edi,0x2b
  41d11c:	(bad)  
  41d11d:	(bad)  
  41d11e:	mov    eax,0xe3ffff9e
  41d123:	add    bh,dh
  41d125:	jmp    FWORD PTR [esi-0x3988]
  41d12b:	nop
  41d12c:	inc    DWORD PTR [ebx-0x33c82c]
  41d132:	sbb    BYTE PTR [ebx-0x7f2e0074],al
  41d138:	(bad)  
  41d139:	(bad)  
  41d13a:	push   DWORD PTR [edx-0x1]
  41d13d:	jmp    DWORD PTR [ecx+0x49ffff30]
  41d143:	inc    DWORD PTR [edx]
  41d145:	jmp    DWORD PTR [esp+ebp*4]
  41d148:	sti    
  41d149:	add    BYTE PTR [eax],al
  41d14b:	call   0xd536d150
  41d150:	inc    DWORD PTR [ebx-0x7c170069]
  41d156:	jp     0x41d1b4
  41d158:	call   0xf3cc:0xa000ff
  41d15f:	sbb    eax,0xfff60083
  41d164:	jns    0x41d165
  41d166:	call   0xffcf:0xffb013
  41d16d:	jmp    FWORD PTR [ecx+0x2dff001a]
  41d173:	add    BYTE PTR [eax+eax*1],bl
  41d176:	mov    dl,0x3e
  41d178:	pop    edx
  41d179:	dec    esp
  41d17b:	scas   al,BYTE PTR es:[edi]
  41d17c:	add    BYTE PTR [eax],al
  41d17e:	(bad)  
  41d17f:	xor    edi,edi
  41d181:	jmp    FWORD PTR [eax]
  41d183:	int3   
  41d184:	mov    ebx,0x7547a4ff
  41d189:	add    DWORD PTR [eax],0xffffffdb
  41d18c:	add    ah,cl
  41d18e:	add    BYTE PTR [ecx],dl
  41d190:	add    BYTE PTR [ecx-0x360001],cl
  41d196:	mov    bl,0x1e
  41d198:	jbe    0x41d19a
  41d19a:	(bad)  
  41d19b:	dec    DWORD PTR [ecx-0x541801]
  41d1a1:	int3   
  41d1a2:	cmp    DWORD PTR ds:[edx-0x77],0x3f
  41d1a7:	fistp  DWORD PTR [ecx-0x1]
  41d1aa:	mov    esp,edi
  41d1ac:	mov    edi,edi
  41d1ae:	arpl   WORD PTR [edi+edi*8-0x1],bp
  41d1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1b3:	jmp    DWORD PTR [edi+0x0]
  41d1b6:	sar    DWORD PTR [edi+0x14],1
  41d1b9:	add    bh,bh
  41d1bb:	push   esi
  41d1bc:	add    bh,bh
  41d1be:	iret   
  41d1bf:	mov    bl,0x83
  41d1c1:	call   FWORD PTR [eax]
  41d1c3:	int3   
  41d1c4:	add    al,BYTE PTR [eax]
  41d1c6:	les    esi,FWORD PTR [edx]
  41d1c8:	mov    esi,0x8916ff89
  41d1cd:	(bad)  
  41d1ce:	cmp    ebx,DWORD PTR [edi+0x88ffff]
  41d1d4:	nop
  41d1d5:	add    BYTE PTR [esi+ebx*8-0x5d],bh
  41d1d9:	add    bh,bh
  41d1db:	in     eax,dx
  41d1dc:	inc    DWORD PTR [eax]
  41d1de:	push   esp
  41d1df:	scas   al,BYTE PTR es:[edi]
  41d1e0:	add    bh,bh
  41d1e2:	mov    ah,0x0
  41d1e4:	jp     0x41d1e5
  41d1e6:	(bad)  
  41d1e7:	pop    esp
  41d1e8:	fdivr  st,st(7)
  41d1ea:	int3   
  41d1eb:	(bad)  
  41d1ec:	(bad)  
  41d1ed:	call   ecx
  41d1ef:	pop    ds
  41d1f0:	add    BYTE PTR [ebx+0xda89b0],al
  41d1f6:	push   ebx
  41d1f7:	pop    ecx
  41d1f8:	mov    esp,cs
  41d1fa:	add    BYTE PTR [edx+0x0],ah
  41d1fd:	xor    DWORD PTR [edi],0xffffffac
  41d200:	inc    DWORD PTR [eax]
  41d202:	cmp    al,0x0
  41d204:	xor    al,0xcc
  41d206:	ficomp WORD PTR cs:[edi+edi*8-0x33ffbb00]
  41d20e:	inc    edi
  41d20f:	inc    edx
  41d210:	add    BYTE PTR [eax],al
  41d212:	jg     0x41d213
  41d214:	inc    BYTE PTR [ebx-0x9992e7]
  41d21a:	int3   
  41d21b:	sahf   
  41d21c:	add    BYTE PTR [eax],al
  41d21e:	xchg   edi,eax
  41d21f:	jbe    0x41d1a4
  41d221:	int3   
  41d222:	inc    edi
  41d223:	call   FWORD PTR [ebp-0x6aba877]
  41d229:	int3   
  41d22a:	add    ch,ah
  41d22c:	inc    DWORD PTR [eax]
  41d22e:	pop    ds
  41d22f:	inc    DWORD PTR ds:[ebx-0x3f004c]
  41d236:	enter  0xe410,0xcc
  41d23a:	jmp    DWORD PTR [ebx+0x0]
  41d23d:	and    DWORD PTR [ebp-0x6d],0xffffffff
  41d241:	call   esp
  41d243:	add    BYTE PTR [edi+edi*8+0x61],dl
  41d247:	int    0xb2
  41d249:	add    bh,bh
  41d24b:	xchg   edi,eax
  41d24c:	inc    DWORD PTR [ebx-0x7600fc78]
  41d252:	inc    edi
  41d253:	add    BYTE PTR [ecx-0x6fbccc7d],cl
  41d259:	add    BYTE PTR [eax],al
  41d25b:	mov    edi,0xc1b3cc00
  41d260:	dec    esp
  41d262:	xor    cl,ah
  41d264:	inc    esp
  41d265:	or     DWORD PTR [ebp-0x7cff16bd],0xffffff9b
  41d26c:	int3   
  41d26d:	call   FWORD PTR [eax+0x3fff00b8]
  41d273:	add    BYTE PTR [ebp+0x39095b00],dh
  41d279:	add    bh,bh
  41d27b:	repnz add BYTE PTR [ebx+0xff179a],al
  41d282:	push   cs
  41d283:	add    BYTE PTR [eax+0x0],al
  41d286:	or     al,0xb1
  41d288:	(bad)  
  41d289:	inc    DWORD PTR [eax]
  41d28b:	push   ebx
  41d28c:	int3   
  41d28d:	call   edi
  41d28f:	jo     0x41d290
  41d291:	int3   
  41d292:	ret    0x64cc
  41d295:	jmp    edx
  41d297:	cmp    DWORD PTR [edi+edi*8],edi
  41d29a:	call   FWORD PTR [ebx+0x68d400ff]
  41d2a0:	add    BYTE PTR [ebx-0x9cff9b],al
  41d2a6:	aad    0xb
  41d2a8:	mov    eax,DWORD PTR [eax]
  41d2aa:	add    al,bh
  41d2ac:	add    BYTE PTR [eax],al
  41d2ae:	add    DWORD PTR [eax+eax*1-0x1],edx
  41d2b2:	and    eax,0xf2005e00
  41d2b7:	js     0x41d241
  41d2b9:	add    BYTE PTR [ecx+0x28ffffa6],cl
  41d2bf:	icebp  
  41d2c0:	(bad)  
  41d2c1:	dec    DWORD PTR [ebx+eax*4+0x5835004f]
  41d2c8:	dec    edi
  41d2c9:	int3   
  41d2ca:	adc    edx,0xffffff83
  41d2cd:	add    al,dh
  41d2cf:	retf   
  41d2d0:	inc    DWORD PTR [eax]
  41d2d2:	(bad)  
  41d2d4:	jecxz  0x41d2d6
  41d2d6:	mov    ds:0xff00da7d,al
  41d2db:	pop    ss
  41d2dc:	add    BYTE PTR [eax],al
  41d2de:	sbb    ecx,DWORD PTR fs:[ecx+0x5bff2800]
  41d2e5:	jmp    FWORD PTR [ebx+0x5]
  41d2e8:	inc    edx
  41d2e9:	int3   
  41d2ea:	call   FWORD PTR [esi-0x1]
  41d2ed:	add    DWORD PTR [edi-0x79],0xffffffcc
  41d2f1:	call   FWORD PTR [edi+edi*8-0x573900b8]
  41d2f8:	adc    BYTE PTR [ebx-0x7c7cb400],al
  41d2fe:	(bad)  
  41d2ff:	xor    cl,ah
  41d301:	push   DWORD PTR [ebx-0x7d]
  41d304:	arpl   di,di
  41d306:	hlt    
  41d307:	dec    ebp
  41d308:	push   eax
  41d309:	int3   
  41d30a:	or     esp,0xffffff89
  41d30d:	add    bh,ah
  41d30f:	pop    ecx
  41d310:	inc    DWORD PTR [eax]
  41d312:	aas    
  41d313:	dec    DWORD PTR [eax-0x1]
  41d316:	xchg   edx,eax
  41d317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d318:	pushf  
  41d319:	inc    DWORD PTR [ebx-0x78ff0054]
  41d31f:	add    DWORD PTR [ebx-0x7d000000],0xffffffff
  41d326:	out    dx,al
  41d327:	dec    ebp
  41d328:	test   eax,0xff6cff00
  41d32d:	jmp    DWORD PTR [ecx-0x5d]
  41d330:	add    bh,bh
  41d332:	ret    0x1cff
  41d335:	add    BYTE PTR [esi],ch
  41d337:	sbb    eax,0xdfff8369
  41d33c:	dec    DWORD PTR [ecx+0x834383]
  41d342:	dec    esp
  41d343:	add    BYTE PTR [ecx+0x7b3e3dff],bl
  41d349:	add    ah,cl
  41d34b:	out    dx,eax
  41d34c:	inc    DWORD PTR [eax]
  41d34e:	int3   
  41d34f:	cwde   
  41d350:	add    BYTE PTR [ebx-0x540064],al
  41d356:	push   0x55
  41d358:	add    BYTE PTR ds:[ecx-0x57ffff7c],cl
  41d35f:	cmp    eax,0xffce0000
  41d364:	loope  0x41d366
  41d366:	push   esi
  41d367:	loope  0x41d354
  41d369:	mov    DWORD PTR [eax],eax
  41d36b:	retf   
  41d36c:	cmp    edi,0x4a
  41d36f:	iret   
  41d370:	add    bh,bh
  41d372:	sar    bh,0xdf
  41d375:	xor    eax,0x63
  41d378:	mov    al,BYTE PTR [ebx-0xdc7d]
  41d37e:	and    dh,dh
  41d380:	add    BYTE PTR [ebx-0x7c740042],al
  41d386:	rcl    BYTE PTR [ebx+ecx*8],0xff
  41d38a:	(bad)  
  41d38b:	mov    eax,0x6353ff00
  41d390:	mov    edi,edi
  41d392:	and    ecx,esp
  41d394:	add    al,BYTE PTR [ebx-0x54ff1d]
  41d39a:	dec    DWORD PTR [ebx+0x28ebffff]
  41d3a0:	add    bh,bh
  41d3a2:	mov    dh,0xff
  41d3a4:	sbb    al,0xff
  41d3a6:	in     eax,dx
  41d3a7:	je     0x41d3ab
  41d3a9:	add    DWORD PTR [ebx-0x7933ff9a],0x38
  41d3b0:	inc    DWORD PTR [eax]
  41d3b2:	cld    
  41d3b3:	add    BYTE PTR [esi-0x12fcdc77],ch
  41d3b9:	inc    DWORD PTR [ebx+0x60ffff39]
  41d3bf:	sti    
  41d3c0:	inc    DWORD PTR [eax]
  41d3c2:	add    DWORD PTR [eax],eax
  41d3c4:	rol    BYTE PTR [eax],0xc5
  41d3c7:	sub    esi,DWORD PTR [ebp-0x1]
  41d3ca:	adc    edi,0xffffffff
  41d3cd:	add    BYTE PTR [ebp-0x370033cf],dh
  41d3d3:	jmp    FWORD PTR [eax+0x35bd2aff]
  41d3d9:	(bad)  
  41d3da:	(bad)  
  41d3db:	jmp    0xf8f6d369
  41d3e0:	inc    DWORD PTR [eax]
  41d3e2:	pop    eax
  41d3e3:	push   DWORD PTR [ecx-0x2a8a4d7d]
  41d3e9:	(bad)  
  41d3ea:	push   esi
  41d3ec:	cmp    edi,0xffffffb9
  41d3ef:	test   DWORD PTR [eax],eax
  41d3f1:	int3   
  41d3f2:	ss add ah,dh
  41d3f5:	jmp    FWORD PTR [esi-0x76aaa0]
  41d3fb:	pusha  
  41d3fc:	add    bh,bh
  41d3fe:	sbb    al,0x7a
  41d400:	(bad)  
  41d401:	dec    DWORD PTR [edx+0x0]
  41d404:	cmp    edi,edi
  41d406:	cmp    ebp,ecx
  41d408:	mov    bh,bh
  41d40a:	jmp    DWORD PTR [ecx]
  41d40c:	inc    DWORD PTR [ebx+0x89895e]
  41d412:	out    0xff,eax
  41d414:	mov    ch,0x0
  41d416:	test   BYTE PTR [ebp+0x3983cc2d],ch
  41d41c:	(bad)  
  41d41d:	dec    DWORD PTR [eax+0x69]
  41d420:	add    BYTE PTR [eax],al
  41d422:	in     eax,0xff
  41d424:	mov    al,ds:0x1f5905ff
  41d429:	inc    DWORD PTR [ebx-0x2000ff52]
  41d42f:	popf   
  41d430:	or     DWORD PTR [ecx-0x330a00b9],0x44
  41d437:	mov    WORD PTR [ecx],ss
  41d439:	dec    DWORD PTR [ecx+0x29cc0073]
  41d43f:	inc    DWORD PTR fs:[ebx+0x88ff1e]
  41d446:	ror    DWORD PTR [eax+0x4],cl
  41d449:	add    BYTE PTR [ebx+0x20ffffbf],al
  41d44f:	xchg   BYTE PTR [eax],al
  41d451:	dec    DWORD PTR [eax-0x34]
  41d454:	sar    edi,1
  41d456:	ins    DWORD PTR es:[edi],dx
  41d457:	lods   eax,DWORD PTR ds:[esi]
  41d458:	add    DWORD PTR [ebx+0xc183],0x8900a8ff
  41d462:	aaa    
  41d463:	add    BYTE PTR [edi],ah
  41d465:	call   FWORD PTR [edi]
  41d467:	adc    eax,0x460000ac
  41d46c:	add    DWORD PTR [eax],0xffffffc4
  41d46f:	push   edi
  41d470:	inc    DWORD PTR [eax]
  41d472:	pop    ecx
  41d473:	call   DWORD PTR [ebx]
  41d475:	add    BYTE PTR [ebp+ebp*2-0x1],bl
  41d479:	int3   
  41d47a:	add    BYTE PTR [esi],ah
  41d47c:	int3   
  41d47d:	call   ebx
  41d47f:	cli    
  41d480:	inc    DWORD PTR [ebx-0xc2000e]
  41d486:	dec    edi
  41d487:	adc    BYTE PTR [esi],dl
  41d489:	add    bh,bh
  41d48b:	pop    esp
  41d48c:	(bad)  
  41d48d:	call   DWORD PTR [ecx+0x7100ff0c]
  41d493:	(bad)  
  41d494:	cmp    al,0xff
  41d496:	dec    ecx
  41d497:	add    dl,0x0
  41d49a:	add    BYTE PTR [edx],al
  41d49c:	inc    DWORD PTR [ebx+0xffa081]
  41d4a2:	xor    edi,edi
  41d4a4:	dec    eax
  41d4a5:	call   ebp
  41d4a7:	inc    eax
  41d4a8:	xchg   bh,bh
  41d4aa:	mov    edx,ebx
  41d4ac:	(bad)  
  41d4ad:	jmp    FWORD PTR [eax-0x49ff7675]
  41d4b3:	mov    DWORD PTR [ebx],esp
  41d4b5:	int3   
  41d4b6:	xchg   esi,eax
  41d4b7:	mov    cl,0x19
  41d4b9:	add    DWORD PTR [eax],0xffffffab
  41d4bc:	add    bh,bh
  41d4be:	daa    
  41d4bf:	push   esp
  41d4c0:	add    DWORD PTR [eax],0x34
  41d4c3:	add    BYTE PTR [edx-0x13d3c434],bh
  41d4c9:	inc    DWORD PTR [eax]
  41d4cb:	pop    edx
  41d4cc:	inc    DWORD PTR [eax]
  41d4ce:	adc    edi,edi
  41d4d0:	add    DWORD PTR [ebx+0x438394],0xfffffff6
  41d4d7:	add    ah,al
  41d4d9:	inc    DWORD PTR [eax]
  41d4db:	call   0x3d36d463
  41d4e0:	inc    DWORD PTR [eax]
  41d4e2:	push   esp
  41d4e3:	inc    DWORD PTR [eax]
  41d4e5:	inc    DWORD PTR [eax]
  41d4e7:	dec    edx
  41d4e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4e9:	int3   
  41d4ea:	add    BYTE PTR [edi+edi*8],bl
  41d4ed:	mov    DWORD PTR [edx+edx*1],edi
  41d4f0:	add    BYTE PTR [eax],al
  41d4f2:	(bad)  
  41d4f4:	inc    esp
  41d4f5:	xor    DWORD PTR [edx+0x89811a],0xffffffda
  41d4fc:	cmp    edi,0x1f
  41d4ff:	mov    cl,0x0
  41d501:	add    BYTE PTR [ecx+0x8fff],dh
  41d507:	lock popa 
  41d509:	add    ah,cl
  41d50b:	pop    eax
  41d50c:	or     esp,0xffffff84
  41d50f:	call   0x78:0x83818900
  41d516:	in     al,0x53
  41d518:	pop    ecx
  41d519:	(bad)  
  41d51a:	(bad)  
  41d51b:	cmp    al,0xff
  41d51d:	add    BYTE PTR [ecx],ch
  41d51f:	mov    ebp,0xcc18ff89
  41d524:	push   ds
  41d525:	jmp    DWORD PTR [ebx+0x8386c3]
  41d52b:	adc    DWORD PTR [eax],eax
  41d52d:	(bad)  
  41d52e:	fdiv   QWORD PTR [eax+0x0]
  41d531:	mov    DWORD PTR [ecx-0x1],edi
  41d534:	adc    BYTE PTR [eax],al
  41d536:	mov    bl,0x4d
  41d538:	inc    ebx
  41d539:	inc    DWORD PTR [ebx+0x1400ff88]
  41d53f:	xchg   ecx,eax
  41d540:	add    DWORD PTR [eax],0xffffff8a
  41d543:	inc    esi
  41d545:	call   DWORD PTR [eax]
  41d547:	adc    eax,0xa3ffff14
  41d54c:	or     DWORD PTR [ecx-0x7c295b],0xffffffb7
  41d553:	call   DWORD PTR [edx-0x1]
  41d556:	mov    cl,0x6
  41d558:	stos   BYTE PTR es:[edi],al
  41d559:	cmp    edi,0xfffffff7
  41d55c:	add    DWORD PTR [eax],0x72
  41d55f:	rol    DWORD PTR [ebx+0x5fccf500],1
  41d565:	add    bl,dl
  41d567:	je     0x41d5ae
  41d569:	mov    esp,ecx
  41d56b:	js     0x41d4f0
  41d56d:	push   esi
  41d56f:	mov    eax,ds:0xffe0ffff
  41d574:	push   es
  41d575:	jmp    DWORD PTR [ebp+0x67]
  41d578:	cs int3 
  41d57a:	int3   
  41d57b:	outs   dx,BYTE PTR ds:[esi]
  41d57c:	inc    DWORD PTR [eax]
  41d57e:	dec    BYTE PTR [esi-0x5c3400]
  41d584:	imul   edi,edi,0x10
  41d587:	ret    
  41d588:	fs (bad) 
  41d58a:	dec    DWORD PTR [ecx-0x7d]
  41d58d:	mov    DWORD PTR [edx-0x71],ecx
  41d590:	add    bh,bh
  41d592:	ins    BYTE PTR es:[edi],dx
  41d593:	(bad)  
  41d594:	in     al,dx
  41d595:	int3   
  41d596:	outs   dx,BYTE PTR ds:[esi]
  41d597:	sbb    al,0x47
  41d599:	mov    DWORD PTR [eax],eax
  41d59b:	fiadd  DWORD PTR [eax]
  41d59d:	dec    esi
  41d59f:	pop    ecx
  41d5a0:	add    BYTE PTR [eax],al
  41d5a2:	adc    al,0x0
  41d5a4:	jecxz  0x41d5a5
  41d5a6:	pop    ss
  41d5a7:	fst    QWORD PTR [eax+eax*1-0x77]
  41d5ab:	sbb    BYTE PTR [ebx-0x76c74901],al
  41d5b1:	inc    DWORD PTR [edi-0x4b00c001]
  41d5b7:	scas   eax,DWORD PTR es:[edi]
  41d5b8:	out    0xff,eax
  41d5ba:	int3   
  41d5bb:	inc    DWORD PTR ds:[eax]
  41d5be:	sti    
  41d5bf:	lock add DWORD PTR [ebx-0x82ff73],0xffffffac
  41d5c7:	jecxz  0x41d639
  41d5c9:	add    DWORD PTR [eax],0xfffffffe
  41d5cc:	(bad)  
  41d5cd:	push   DWORD PTR [ebx-0x3c7cff44]
  41d5d3:	jmp    DWORD PTR [esi+0x4458aeff]
  41d5d9:	inc    DWORD PTR [ebx+0xf89009a]
  41d5df:	sbb    al,BYTE PTR [eax]
  41d5e1:	push   DWORD PTR [edi-0x6e33667d]
  41d5e7:	adc    edi,DWORD PTR [ebx-0x1]
  41d5ea:	mov    DWORD PTR [ecx+0x305b83ff],edi
  41d5f0:	(bad)  
  41d5f1:	jmp    FWORD PTR [edi+0x1effccff]
  41d5f7:	inc    ecx
  41d5f8:	pop    esi
  41d5f9:	cmp    edi,0xffffffe9
  41d5fc:	add    BYTE PTR [ecx-0x85a0],cl
  41d602:	int3   
  41d603:	and    DWORD PTR ds:0xa579a9ff,0xffffffff
  41d60a:	and    DWORD PTR [edi],0xffffffff
  41d60d:	jmp    DWORD PTR ds:0xd1ccff6c
  41d613:	add    BYTE PTR [edi-0x2eee9234],ch
  41d619:	add    bh,bh
  41d61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d61c:	add    BYTE PTR [ebx-0x76ff89a7],al
  41d622:	mov    eax,0x7e0014ff
  41d627:	iret   
  41d628:	fadd   QWORD PTR [eax]
  41d62a:	mov    eax,ebp
  41d62c:	cmp    edi,0x37
  41d62f:	mov    bh,bh
  41d631:	sub    eax,0xffffffff
  41d634:	mov    eax,ds:0xec6fabff
  41d639:	add    BYTE PTR [ebx+0x5cff0077],al
  41d63f:	mov    BYTE PTR [eax],0x89
  41d642:	cmp    edi,0xf96fcc2d
  41d648:	cmp    eax,0x8392ff00
  41d64d:	push   edx
  41d64f:	dec    edi
  41d650:	(bad)  
  41d651:	jmp    FWORD PTR [ebx+0x160060ff]
  41d657:	sub    eax,0xa7ffff65
  41d65c:	add    bh,bh
  41d65e:	push   ebx
  41d65f:	inc    edi
  41d660:	(bad)  
  41d661:	(bad)  
  41d662:	cmp    al,0x0
  41d664:	lock add ah,bh
  41d667:	jb     0x41d685
  41d669:	add    bh,bh
  41d66b:	out    0xff,al
  41d66d:	add    dl,dl
  41d66f:	or     BYTE PTR [ebx-0x54000534],al
  41d675:	(bad)  
  41d676:	out    dx,al
  41d677:	loop   0x41d65d
  41d679:	int3   
  41d67a:	call   FWORD PTR [edi+edi*8]
  41d67d:	add    BYTE PTR [ecx+0x44],ch
  41d680:	(bad)  
  41d681:	inc    DWORD PTR [edi+0x0]
  41d684:	xlat   BYTE PTR ds:[ebx]
  41d685:	mov    DWORD PTR [ebp-0x7c008699],esp
  41d68b:	mov    esp,0x6e6accff
  41d690:	mov    edi,edi
  41d692:	jbe    0x41d660
  41d694:	je     0x41d696
  41d696:	outs   dx,DWORD PTR ds:[esi]
  41d697:	adc    ebx,DWORD PTR [ebp-0x1]
  41d69a:	push   DWORD PTR [edi]
  41d69c:	(bad)  
  41d69d:	jmp    FWORD PTR [ebx+0x45]
  41d6a0:	add    BYTE PTR [eax],al
  41d6a2:	or     DWORD PTR [ebx-0x6b9effe1],eax
  41d6a8:	pop    ecx
  41d6a9:	or     DWORD PTR [ecx-0x70330096],0xffffff91
  41d6b0:	(bad)  
  41d6b1:	(bad)  
  41d6b2:	add    BYTE PTR ds:[ebp-0x71e87601],ah
  41d6b9:	inc    DWORD PTR [eax]
  41d6bb:	enter  0x8389,0x94
  41d6bf:	or     DWORD PTR [ecx-0xe766500],0xffffff83
  41d6c6:	xor    ah,bh
  41d6c8:	out    0xff,al
  41d6ca:	push   DWORD PTR [esi]
  41d6cc:	add    BYTE PTR [eax],al
  41d6ce:	xlat   BYTE PTR ds:[ebx]
  41d6cf:	lds    eax,FWORD PTR [ebx+0xccc81ff]
  41d6d5:	add    BYTE PTR [ebx],dh
  41d6d7:	jmp    0x8383:0xc8838918
  41d6de:	retf   
  41d6df:	xchg   edi,eax
  41d6e0:	add    BYTE PTR [ebx-0x38ff75],al
  41d6e6:	dec    esi
  41d6e7:	popa   
  41d6e8:	mov    WORD PTR [eax],es
  41d6ea:	call   DWORD PTR [ebp-0x77]
  41d6ed:	add    dh,bh
  41d6ef:	sub    edi,edi
  41d6f1:	add    BYTE PTR [edx+0x40ff4d00],dh
  41d6f7:	adc    DWORD PTR [eax-0x77],edi
  41d6fa:	add    BYTE PTR [esi-0x7d],dl
  41d6fd:	xor    DWORD PTR [esi],0xffffff93
  41d700:	add    bh,bh
  41d702:	fmul   st,st(4)
  41d704:	and    eax,DWORD PTR [ebx-0x7ce9ea71]
  41d70a:	push   esi
  41d70c:	add    BYTE PTR [eax],al
  41d70e:	mov    eax,ds:0xabff0089
  41d713:	inc    DWORD PTR [ebx-0x29b24c01]
  41d719:	mov    DWORD PTR [ecx-0x30ff006b],ecx
  41d71f:	enter  0xff00,0x7a
  41d723:	call   ecx
  41d725:	int3   
  41d726:	push   eax
  41d727:	add    eax,0xecc83cd
  41d72c:	add    BYTE PTR [ecx-0x33765f6c],cl
  41d732:	push   esi
  41d733:	add    BYTE PTR ds:0xffdaecff,cl
  41d739:	dec    esp
  41d73b:	cmp    edi,edi
  41d73d:	add    BYTE PTR [eax-0x77ffff44],dh
  41d743:	mov    DWORD PTR [edi],ebp
  41d745:	jmp    DWORD PTR [ebp-0x6f]
  41d748:	retf   
  41d749:	inc    DWORD PTR [ebx+0x2d83ccf9]
  41d74f:	arpl   di,di
  41d751:	call   FWORD PTR [ebx-0x79004701]
  41d757:	out    dx,eax
  41d758:	(bad)  
  41d759:	inc    DWORD PTR [eax]
  41d75b:	and    eax,0x7e0eff00
  41d760:	add    BYTE PTR [ebx+0xf7ff61],al
  41d766:	adc    al,0x6b
  41d768:	add    BYTE PTR [ecx-0x7c005e34],cl
  41d76e:	iret   
  41d76f:	sbb    bh,bh
  41d771:	dec    DWORD PTR [ecx+0x628316ff]
  41d777:	push   cs
  41d778:	jnp    0x41d779
  41d77a:	int3   
  41d77b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d77c:	inc    DWORD PTR [eax]
  41d77e:	das    
  41d77f:	pop    ss
  41d780:	(bad)  
  41d781:	inc    DWORD PTR [ebx+eax*4]
  41d784:	pop    eax
  41d785:	dec    DWORD PTR [eax]
  41d787:	push   esi
  41d788:	push   ecx
  41d789:	add    BYTE PTR [ebx+0x12008353],al
  41d78f:	jnp    0x41d791
  41d791:	xor    DWORD PTR [eax-0x4400ae00],0xffffffff
  41d798:	pop    eax
  41d799:	cmp    edi,0xffffff89
  41d79c:	add    bh,bh
  41d79e:	loopne 0x41d7fb
  41d7a0:	dec    DWORD PTR [ecx-0xc8ff13]
  41d7a6:	xchg   ecx,eax
  41d7a7:	(bad)  
  41d7a8:	pop    esi
  41d7a9:	(bad)  
  41d7aa:	call   FWORD PTR [ebx+0x0]
  41d7ad:	inc    DWORD PTR [edx-0x6ff004a]
  41d7b3:	add    cl,dh
  41d7b5:	call   ebx
  41d7b7:	xor    eax,0xf383833a
  41d7bc:	cmp    edi,0x74
  41d7bf:	xor    al,0x83
  41d7c1:	call   FWORD PTR [eax-0x7d]
  41d7c4:	ror    BYTE PTR [ecx-0xc5b7d8],1
  41d7ca:	add    bl,al
  41d7cc:	inc    DWORD PTR [eax]
  41d7ce:	ins    DWORD PTR es:[edi],dx
  41d7cf:	out    0xff,al
  41d7d1:	(bad)  
  41d7d2:	fadd   DWORD PTR [eax]
  41d7d4:	inc    esi
  41d7d5:	adc    esp,0xffffff94
  41d7d8:	jp     0x41d7d9
  41d7da:	add    BYTE PTR ds:0xf78bffff,bl
  41d7e0:	add    BYTE PTR [eax],al
  41d7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7e3:	add    ah,ch
  41d7e5:	call   FWORD PTR [esi-0x17]
  41d7e8:	mov    ds:0x92ffff,al
  41d7ed:	call   DWORD PTR [ebp+0x7f]
  41d7f0:	cmp    edi,0xffffffbf
  41d7f3:	add    dl,cl
  41d7f5:	(bad)  
  41d7f6:	cmp    DWORD PTR [eax],ecx
  41d7f8:	test   bh,bh
  41d7fa:	add    BYTE PTR [ecx+0x5d68ccff],bh
  41d800:	(bad)  
  41d801:	call   DWORD PTR [edx-0x7d]
  41d804:	or     eax,0x16344383
  41d809:	(bad)  
  41d80a:	inc    DWORD PTR [ecx-0x7d]
  41d80d:	and    DWORD PTR [ecx-0x7a],0xffffffcc
  41d811:	dec    DWORD PTR [edx-0x34]
  41d814:	dec    eax
  41d815:	int3   
  41d816:	ja     0x41d810
  41d818:	out    0xff,al
  41d81a:	add    BYTE PTR [esp+ecx*8-0x76f6de01],cl
  41d821:	(bad)  
  41d822:	fdivp  st(7),st
  41d824:	pop    DWORD PTR [eax]
  41d826:	lock (bad) 
  41d828:	fcmove st,st(4)
  41d82a:	push   DWORD PTR [ebx-0x34]
  41d82d:	int3   
  41d82e:	jnp    0x41d8a1
  41d830:	inc    DWORD PTR [ebx+0xfc00fd]
  41d836:	mov    ebx,0xccffc4c8
  41d83b:	mov    al,0xff
  41d83d:	cmp    DWORD PTR [esi+0x71],0xffffffff
  41d841:	(bad)  
  41d842:	mov    esi,0x69896200
  41d847:	bound  edi,QWORD PTR [ecx]
  41d849:	cmp    edi,0xffffffda
  41d84c:	(bad)  
  41d84d:	jmp    DWORD PTR ds:0x61000075
  41d853:	add    BYTE PTR [ebp-0x30a5c801],dl
  41d859:	dec    DWORD PTR [ecx-0x4500ff61]
  41d85f:	mov    ebx,0x468300
  41d864:	fadd   QWORD PTR [ebx+0xda839e]
  41d86a:	add    al,ch
  41d86c:	int3   
  41d86d:	inc    DWORD PTR [esi+0x59ff8927]
  41d873:	add    BYTE PTR [esi-0x1],cl
  41d876:	and    bh,BYTE PTR [edx-0x2d000059]
  41d87c:	int3   
  41d87d:	call   FWORD PTR [edx]
  41d87f:	and    eax,DWORD PTR [eax]
  41d881:	(bad)  
  41d882:	in     eax,dx
  41d883:	mov    ebx,esi
  41d885:	adc    DWORD PTR [ecx+0x13],0x64
  41d889:	int3   
  41d88a:	add    BYTE PTR [eax-0x1],dh
  41d88d:	jmp    FWORD PTR [edx+0x1d]
  41d890:	inc    DWORD PTR [ebx+0xccff1e]
  41d896:	in     eax,0x27
  41d898:	jmp    0x842cd89c
  41d89d:	sub    DWORD PTR [edx+0x2d],0xffffffff
  41d8a1:	call   FWORD PTR [ecx-0x1]
  41d8a4:	mov    ds:0x259fb600,eax
  41d8a9:	mov    edi,edi
  41d8ab:	aas    
  41d8ac:	mov    edi,edi
  41d8ae:	push   edi
  41d8af:	sub    eax,0x910000
  41d8b4:	sbb    bh,bh
  41d8b6:	call   0xeca3b
  41d8bb:	mov    eax,DWORD PTR [eax]
  41d8bd:	add    DWORD PTR [eax-0x44],0xffffffff
  41d8c1:	add    BYTE PTR [edi+edi*8-0x67ea00c8],dl
  41d8c8:	pusha  
  41d8c9:	int3   
  41d8ca:	xor    DWORD PTR [eax-0x4b943334],0xffffffff
  41d8d1:	mov    DWORD PTR [ecx-0x1],ebp
  41d8d4:	in     al,dx
  41d8d5:	add    dh,bl
  41d8d7:	dec    ecx
  41d8d8:	rol    DWORD PTR [eax],0x83
  41d8db:	mov    eax,0xfc9bff83
  41d8e0:	add    BYTE PTR [eax],al
  41d8e2:	adc    edi,edi
  41d8e4:	jnp    0x41d8e5
  41d8e6:	or     al,0x5
  41d8e8:	dec    eax
  41d8e9:	inc    DWORD PTR [eax]
  41d8eb:	dec    sp
  41d8ee:	cli    
  41d8ef:	dec    edi
  41d8f0:	mov    DWORD PTR [eax],eax
  41d8f2:	push   0xffffffcc
  41d8f4:	jmp    FWORD PTR [bx+0x1295]
  41d8f9:	(bad)  
  41d8fa:	inc    ebp
  41d8fc:	mov    DWORD PTR [eax],eax
  41d8fe:	pop    ecx
  41d8ff:	adc    eax,0xff3cffff
  41d904:	mov    ds:0x5f1f7400,eax
  41d909:	int3   
  41d90a:	add    BYTE PTR [edi],dl
  41d90c:	inc    DWORD PTR [eax]
  41d90e:	mov    WORD PTR [ecx-0x7d],ss
  41d911:	dec    DWORD PTR [edx-0x3affaa00]
  41d917:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d918:	test   DWORD PTR [eax],eax
  41d91a:	or     DWORD PTR [eax],0xffffffcc
  41d91d:	add    BYTE PTR [edi+0x24008990],cl
  41d923:	add    BYTE PTR ds:0x6b65c9ff,dh
  41d929:	cmp    edi,0x26
  41d92c:	dec    DWORD PTR [ecx+0x8007]
  41d932:	cmp    eax,DWORD PTR [eax]
  41d934:	(bad)  
  41d935:	(bad)  
  41d936:	fisttp WORD PTR [edi-0x30]
  41d939:	inc    DWORD PTR [eax]
  41d93b:	call   0xffff:0xbf6483ff
  41d942:	pop    edx
  41d943:	add    dl,dh
  41d945:	push   DWORD PTR ds:0xff00e9e2
  41d94b:	scas   eax,DWORD PTR es:[edi]
  41d94c:	(bad)  
  41d94d:	(bad)  
  41d94e:	in     al,dx
  41d94f:	jb     0x41d951
  41d951:	inc    DWORD PTR [ebx-0x34]
  41d954:	dec    ah
  41d956:	or     eax,0x83896898
  41d95b:	imul   edi,edi,0x89eee700
  41d961:	int3   
  41d962:	out    dx,al
  41d963:	jmp    DWORD PTR [ecx+ecx*4+0x5bc175]
  41d96a:	dec    DWORD PTR [edi-0x1]
  41d96d:	add    BYTE PTR [ecx-0xa],dh
  41d970:	add    BYTE PTR [eax],al
  41d972:	lock add BYTE PTR [ecx-0x75419201],dl
  41d979:	add    BYTE PTR [ecx-0x5000760d],cl
  41d97f:	jb     0x41d90a
  41d981:	adc    DWORD PTR [ebx+eax*4],0xffffffaa
  41d985:	add    BYTE PTR [ecx],bh
  41d987:	mov    esp,0xac008385
  41d98c:	inc    DWORD PTR [eax]
  41d98e:	add    BYTE PTR [ecx-0x617d00],dh
  41d994:	stos   DWORD PTR es:[edi],eax
  41d995:	adc    DWORD PTR [ebx+0xff6421],0xffffff88
  41d99c:	(bad)  
  41d99d:	dec    esp
  41d99f:	mov    cl,0xff
  41d9a1:	jmp    DWORD PTR [ecx]
  41d9a3:	jmp    FWORD PTR [eax-0x34]
  41d9a6:	retf   
  41d9a7:	pusha  
  41d9a8:	adc    BYTE PTR [ebx-0xff5000],al
  41d9ae:	and    ebx,DWORD PTR ds:0xff13cccc
  41d9b4:	inc    esp
  41d9b5:	add    bh,ch
  41d9b7:	mov    eax,ds:0xcd008352
  41d9bc:	cmp    edi,0x46
  41d9bf:	jle    0x41d9c1
  41d9c1:	call   DWORD PTR [esi-0x4dffb101]
  41d9c7:	inc    ebp
  41d9c8:	xchg   ebx,eax
  41d9c9:	dec    esp
  41d9cb:	idiv   edi
  41d9cd:	jmp    FWORD PTR [eax+ecx*2-0x9c0077]
  41d9d4:	jns    0x41d95f
  41d9d6:	push   ecx
  41d9d7:	arpl   WORD PTR [ebx+0x53ff89],sp
  41d9dd:	dec    DWORD PTR [ecx]
  41d9df:	pop    eax
  41d9e0:	(bad)  
  41d9e1:	(bad)  
  41d9e2:	jmp    0x51b3:0x81ff2cff
  41d9e9:	add    bh,bh
  41d9eb:	arpl   WORD PTR [ecx-0x33b0f37d],cx
  41d9f1:	push   DWORD PTR [eax+eax*1]
  41d9f4:	cmp    al,BYTE PTR [eax]
  41d9f6:	xor    BYTE PTR [ebp+ebp*1-0x7c910000],ch
  41d9fd:	mov    DWORD PTR [edx+0x5cff00bb],esp
  41da03:	add    BYTE PTR [esi+0x20fb3400],ch
  41da09:	add    bh,bh
  41da0b:	sbb    DWORD PTR [eax],eax
  41da0d:	(bad)  
  41da0e:	aas    
  41da0f:	in     al,dx
  41da10:	add    bh,bh
  41da12:	mov    BYTE PTR [eax],0x8e
  41da15:	jmp    DWORD PTR [esp+ebx*8+0x19000048]
  41da1c:	add    bh,bh
  41da1e:	mov    ecx,0x8700ffdb
  41da23:	call   eax
  41da25:	mov    DWORD PTR [edi-0x76767761],edi
  41da2b:	out    0xff,al
  41da2d:	inc    DWORD PTR [ebx]
  41da2f:	dec    ecx
  41da30:	(bad)  
  41da31:	jmp    FWORD PTR [edi+edi*8]
  41da34:	jae    0x41da36
  41da36:	into   
  41da37:	or     al,0x64
  41da39:	int3   
  41da3a:	(bad)  
  41da3b:	jmp    0xc714a73f
  41da40:	cmp    edi,0xffffff9f
  41da43:	mov    DWORD PTR [ebx+0x0],esi
  41da46:	lods   al,BYTE PTR ds:[esi]
  41da47:	fidiv  DWORD PTR [ecx-0x33b0007d]
  41da4d:	or     DWORD PTR [ecx],0xfffffff5
  41da50:	mov    DWORD PTR [ecx-0x2affe2],ecx
  41da56:	push   ds
  41da57:	mov    ecx,0xe000ff64
  41da5c:	inc    DWORD PTR [ebx-0xfff7fd]
  41da62:	dec    ebp
  41da63:	push   DWORD PTR [eax-0x1]
  41da66:	mov    al,ch
  41da68:	daa    
  41da69:	(bad)  
  41da6a:	inc    DWORD PTR [eax]
  41da6c:	(bad)  
  41da6d:	call   FWORD PTR [esi]
  41da6f:	mov    WORD PTR [ebx+0x56fff4ff],es
  41da75:	call   FWORD PTR [edx-0x96dc]
  41da7b:	inc    eax
  41da7c:	add    BYTE PTR [ebx+0xdce],al
  41da82:	ror    ah,cl
  41da84:	in     eax,0xff
  41da86:	add    eax,0xccccc36b
  41da8b:	in     al,dx
  41da8c:	(bad)  
  41da8d:	inc    DWORD PTR [eax+0x2b]
  41da90:	(bad)  
  41da91:	jmp    FWORD PTR [ebx+0x1fff0cff]
  41da97:	out    0x8c,al
  41da99:	mov    edi,edi
  41da9b:	and    esp,ecx
  41da9d:	dec    DWORD PTR [esi+edx*8-0x1]
  41daa1:	int3   
  41daa2:	fiadd  WORD PTR [eax]
  41daa4:	jo     0x41da29
  41daa6:	fisub  WORD PTR [ebp+0x72]
  41daa9:	(bad)  
  41daaa:	call   FWORD PTR [ebx]
  41daac:	or     esp,0xffffff8a
  41daaf:	pop    eax
  41dab0:	add    bh,bh
  41dab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dab3:	call   DWORD PTR [esi-0x19e6e301]
  41dab9:	add    BYTE PTR [eax],al
  41dabb:	sahf   
  41dabc:	cmp    edi,0x77
  41dabf:	add    edi,edi
  41dac1:	add    dl,ah
  41dac3:	xor    DWORD PTR [ebx],0x0
  41dac6:	xchg   edi,edx
  41dac8:	mov    bl,0xff
  41daca:	sbb    DWORD PTR [edi+0x0],0xffffff83
  41dace:	sbb    BYTE PTR [eax-0x1],dh
  41dad1:	(bad)  
  41dad2:	cmp    BYTE PTR [ecx+0x6e07005f],cl
  41dad8:	out    dx,eax
  41dad9:	add    ah,cl
  41dadb:	(bad)  
  41dade:	jns    0x41db14
  41dae0:	(bad)  
  41dae1:	(bad)  
  41dae2:	fiadd  WORD PTR [ebx-0x6024ff6e]
  41dae8:	mov    esp,0x8083ff
  41daed:	inc    DWORD PTR [edx]
  41daef:	(bad)  
  41daf1:	add    cl,dh
  41daf3:	add    ah,al
  41daf5:	mov    DWORD PTR [esi+0x27],ebx
  41daf8:	push   es
  41daf9:	add    BYTE PTR [eax],al
  41dafb:	fs int3 
  41dafd:	jmp    DWORD PTR [ebx]
  41daff:	adc    eax,0x832d0000
  41db04:	fiadd  WORD PTR [ebx-0xf0d3e8]
  41db0a:	add    dl,ch
  41db0c:	inc    DWORD PTR [eax]
  41db0e:	or     ebp,DWORD PTR [edi-0xe90001]
  41db14:	push   0xffffffff
  41db16:	(bad)  
  41db17:	(bad)  
  41db18:	rol    BYTE PTR [eax],1
  41db1a:	(bad)  
  41db1b:	sti    
  41db1c:	inc    DWORD PTR [eax]
  41db1e:	test   BYTE PTR [ebx+0x388300],0xb8
  41db25:	int3   
  41db26:	jne    0x41db31
  41db28:	lods   al,BYTE PTR ds:[esi]
  41db29:	int3   
  41db2a:	cmp    DWORD PTR ds:0xbf1c8900,0x0
  41db31:	int3   
  41db32:	xchg   ebp,eax
  41db33:	add    BYTE PTR [ebp-0x274fa001],bh
  41db39:	mov    edi,edi
  41db3b:	jbe    0x41db09
  41db3d:	jmp    DWORD PTR [ecx-0x6776ffc4]
  41db43:	add    cl,cl
  41db45:	xor    ebp,0x18
  41db48:	repz cmp edi,0x75
  41db4c:	add    bh,bh
  41db4e:	mov    esp,DWORD PTR [eax]
  41db50:	inc    DWORD PTR [eax]
  41db52:	mov    eax,ds:0xc1cc9a00
  41db57:	dec    esi
  41db58:	int3   
  41db59:	(bad)  
  41db5a:	jmp    FWORD PTR [ebx-0x51a67c01]
  41db60:	mov    DWORD PTR [ecx-0x377cf3],ecx
  41db66:	inc    ecx
  41db67:	pop    eax
  41db68:	mov    ds:0x894b8383,eax
  41db6d:	inc    DWORD PTR [edi]
  41db6f:	mov    bl,0x89
  41db71:	jmp    DWORD PTR [esi+0x8009c00]
  41db77:	loopne 0x41db96
  41db79:	add    BYTE PTR [eax],al
  41db7b:	sub    BYTE PTR [ecx-0xd1a601],cl
  41db81:	inc    DWORD PTR [ecx+0x0]
  41db84:	xor    bh,bh
  41db86:	pop    edx
  41db87:	push   edi
  41db88:	dec    esp
  41db89:	cmp    edi,0x61
  41db8c:	inc    DWORD PTR [ebx+0xff0879]
  41db92:	int    0x83
  41db94:	add    bh,bh
  41db96:	dec    ebp
  41db97:	sbb    eax,eax
  41db99:	add    bh,bh
  41db9b:	imul   edi,edi,0x0
  41db9e:	sahf   
  41db9f:	jle    0x41dba1
  41dba1:	mov    eax,esp
  41dba3:	mov    DWORD PTR [ebx+0x0],ecx
  41dba6:	push   es
  41dba7:	mov    al,0xc2
  41dba9:	inc    DWORD PTR [eax]
  41dbab:	mov    BYTE PTR [eax],al
  41dbad:	sbb    esp,0x6f
  41dbb0:	or     esp,0x1b
  41dbb3:	add    BYTE PTR [ebx+0x48cffff],dl
  41dbb9:	mov    DWORD PTR [ecx-0x75ffff3a],ecx
  41dbbf:	mov    bl,0xff
  41dbc1:	dec    eax
  41dbc3:	add    bh,ch
  41dbc5:	mov    edi,esi
  41dbc7:	inc    ecx
  41dbc8:	cld    
  41dbc9:	add    BYTE PTR [ecx-0x1dff7cae],cl
  41dbcf:	aas    
  41dbd0:	add    BYTE PTR [eax],al
  41dbd2:	sub    DWORD PTR [eax],eax
  41dbd4:	retf   0xacff
  41dbd7:	dec    ebx
  41dbd8:	aas    
  41dbd9:	inc    DWORD PTR [eax]
  41dbdb:	inc    DWORD PTR ss:[eax]
  41dbde:	iret   
  41dbdf:	push   ds
  41dbe0:	inc    DWORD PTR [eax]
  41dbe2:	mov    cs,esp
  41dbe4:	mov    edi,edi
  41dbe6:	xchg   DWORD PTR [edi+0x7b830087],ebp
  41dbec:	(bad)  
  41dbed:	push   DWORD PTR [eax-0x48]
  41dbf0:	(bad)  
  41dbf1:	dec    esp
  41dbf3:	(bad)  
  41dbf4:	cmp    al,0x0
  41dbf6:	ret    
  41dbf7:	lea    esi,[ebp-0x77]
  41dbfa:	int3   
  41dbfb:	test   DWORD PTR [eax],0x2440ff
  41dc01:	int3   
  41dc02:	mov    ch,0xff
  41dc04:	cli    
  41dc05:	call   ebp
  41dc07:	shl    BYTE PTR [edi+0xfaff00],1
  41dc0d:	int3   
  41dc0e:	les    ecx,FWORD PTR es:[eax]
  41dc11:	push   eax
  41dc12:	(bad)  
  41dc13:	inc    DWORD PTR [ebx+0x1f73ff75]
  41dc19:	inc    edx
  41dc1a:	add    DWORD PTR [ebx-0x737c3b7d],0xffffff8e
  41dc21:	nop
  41dc22:	add    BYTE PTR [eax],al
  41dc24:	cmp    DWORD PTR [ecx],0xffffff89
  41dc27:	repnz dec eax
  41dc29:	jl     0x41dc2a
  41dc2b:	add    bh,bh
  41dc2d:	mov    dl,0xff
  41dc2f:	loop   0x41dc7c
  41dc31:	mov    esi,0xc7ffcccc
  41dc36:	inc    DWORD PTR [ebp-0x28]
  41dc39:	dec    ebp
  41dc3a:	inc    DWORD PTR [eax]
  41dc3c:	mov    DWORD PTR [edi-0x1682b701],ecx
  41dc42:	or     DWORD PTR [ecx+0x53ffc000],0xfffffff8
  41dc49:	lock int3 
  41dc4b:	inc    DWORD PTR [ebx+0x7ac583e5]
  41dc51:	mov    esi,0x3500ffff
  41dc56:	add    BYTE PTR [eax+0x73af],ah
  41dc5c:	mov    DWORD PTR [esi+0x289c12ff],esp
  41dc62:	add    BYTE PTR [eax],al
  41dc64:	jmp    FWORD PTR [esi+0x0]
  41dc67:	push   ss
  41dc68:	sbb    edi,esp
  41dc6a:	int3   
  41dc6b:	inc    DWORD PTR [ebx-0x34f9ff87]
  41dc71:	inc    esp
  41dc72:	mov    edi,edi
  41dc74:	int3   
  41dc75:	mov    cl,0x89
  41dc77:	aam    0x6f
  41dc79:	push   esi
  41dc7a:	inc    DWORD PTR [eax]
  41dc7c:	add    BYTE PTR [edx-0x1dfcf734],dh
  41dc82:	mov    edi,edi
  41dc84:	and    DWORD PTR [edi],0xffffffff
  41dc87:	(bad)  
  41dc88:	xchg   ebx,eax
  41dc89:	adc    eax,DWORD PTR [eax]
  41dc8b:	add    DWORD PTR [eax],0x38
  41dc8e:	inc    ebx
  41dc90:	xor    esp,ebx
  41dc92:	inc    DWORD PTR [eax]
  41dc94:	sub    DWORD PTR [ebx],0xffffffcc
  41dc97:	cmp    esp,esp
  41dc99:	cmp    bh,0x83
  41dc9c:	add    BYTE PTR [ebp-0x255177d],dh
  41dca2:	(bad)  
  41dca3:	inc    DWORD PTR [eax]
  41dca5:	push   esi
  41dca6:	add    BYTE PTR [edx+0x836d0b],cl
  41dcac:	add    esi,0x0
  41dcaf:	addr16 xchg esp,eax
  41dcb1:	pop    esp
  41dcb2:	add    DWORD PTR [eax],0x0
  41dcb5:	js     0x41dcb6
  41dcb7:	add    cl,BYTE PTR [edi-0x33f3]
  41dcbd:	aam    0xff
  41dcbf:	ret    
  41dcc0:	mov    eax,ds:0x8383fff3
  41dcc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcc6:	(bad)  
  41dcc7:	cmp    eax,0x83ff6126
  41dccc:	int3   
  41dccd:	fiadd  WORD PTR [eax]
  41dccf:	pushf  
  41dcd0:	jno    0x41dc92
  41dcd2:	add    bh,bh
  41dcd4:	cmp    esp,0x0
  41dcd7:	push   eax
  41dcd8:	ret    
  41dcd9:	xor    eax,0x7fff83ff
  41dcde:	add    BYTE PTR [esi-0x7d],bl
  41dce1:	or     bh,bh
  41dce3:	inc    DWORD PTR [eax]
  41dce5:	enter  0xdcff,0x64
  41dce9:	ds add bh,bh
  41dcec:	mov    DWORD PTR [eax-0x376a377],ecx
  41dcf2:	dec    DWORD PTR [ecx-0x5400767d]
  41dcf8:	pop    ebx
  41dcf9:	in     al,dx
  41dcfa:	cmp    edi,0xffffffff
  41dcfd:	mov    ecx,0xad919c00
  41dd02:	add    BYTE PTR [ebx-0x19339d00],al
  41dd08:	fisttp QWORD PTR [ebp+0x2a830000]
  41dd0e:	(bad)  
  41dd0f:	fsub   DWORD PTR [edx]
  41dd11:	jmp    0x41dd12
  41dd13:	inc    DWORD PTR [ebx-0x6d22ff98]
  41dd19:	push   eax
  41dd1a:	(bad)  
  41dd1b:	inc    DWORD PTR [ebx+0x7da400b4]
  41dd21:	clc    
  41dd22:	cmp    edi,0xffffffff
  41dd25:	aad    0x0
  41dd27:	sub    al,0x1
  41dd29:	sbb    edi,edi
  41dd2b:	dec    esp
  41dd2d:	sar    edi,0x5f
  41dd30:	mov    ecx,0xff000089
  41dd35:	xor    al,0x83
  41dd37:	jp     0x41dce5
  41dd39:	dec    ebp
  41dd3a:	(bad)  
  41dd3b:	(bad)  
  41dd3c:	(bad)  
  41dd3d:	in     al,dx
  41dd3e:	jmp    eax
  41dd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd41:	ds cmp edi,0xffffff83
  41dd45:	iret   
  41dd46:	inc    DWORD PTR [edx-0x7a]
  41dd49:	mov    DWORD PTR [eax],eax
  41dd4b:	add    bh,bh
  41dd4d:	or     eax,0x87148300
  41dd52:	inc    DWORD PTR [eax]
  41dd54:	jmp    FWORD PTR [edi+0x6051b0ff]
  41dd5a:	inc    DWORD PTR [ebx+0x64ffae00]
  41dd60:	push   esp
  41dd61:	sub    ecx,esp
  41dd63:	mov    DWORD PTR [eax],eax
  41dd65:	pop    ds
  41dd66:	add    BYTE PTR [ecx+edx*2-0x67],ah
  41dd6a:	add    bh,bh
  41dd6c:	call   ecx
  41dd6e:	add    BYTE PTR [esi+0x63],cl
  41dd71:	mov    ah,0x83
  41dd73:	(bad)  
  41dd74:	dec    DWORD PTR [ecx-0x77]
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	jmp    0x141dc99
  41dd7d:	mov    ds:0x287f9689,al
  41dd82:	(bad)  
  41dd83:	(bad)  
  41dd84:	(bad)  
  41dd85:	cmp    eax,0xdafa5700
  41dd8a:	int3   
  41dd8b:	add    bh,bh
  41dd8d:	mov    ecx,0x7bd4a800
  41dd92:	mov    DWORD PTR [ebx-0x1e00b034],eax
  41dd98:	pop    edi
  41dd99:	jno    0x41dd1e
  41dd9b:	(bad)  
  41dd9c:	call   DWORD PTR [edx-0x7d]
  41dd9f:	jl     0x41dd43
  41dda1:	dec    edi
  41dda2:	cmp    edi,0xffffffff
  41dda5:	sbb    edi,edi
  41dda7:	mov    ds:0xff009b2d,al
  41ddac:	and    DWORD PTR [esi],0x0
  41ddaf:	aam    0x81
  41ddb1:	mov    cl,0x0
  41ddb3:	cmp    edi,0x51
  41ddb6:	add    BYTE PTR [ebp+0xffc66f],bh
  41ddbc:	sbb    DWORD PTR [ecx-0x77],0xffffffa3
  41ddc0:	mov    esi,?
  41ddc2:	cmp    edi,0xffffffff
  41ddc5:	cld    
  41ddc6:	add    BYTE PTR [ebp+0x7e],cl
  41ddc9:	push   ebx
  41ddca:	cmp    edi,0xffffffcc
  41ddcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddce:	inc    DWORD PTR [ecx+eiz*2]
  41ddd1:	sar    bh,1
  41ddd3:	add    BYTE PTR [eax],al
  41ddd5:	xor    eax,DWORD PTR [eax]
  41ddd7:	test   DWORD PTR [ebx-0x58],edi
  41ddda:	add    BYTE PTR [ebx+0x76ff3800],al
  41dde0:	or     dl,BYTE PTR [ebx-0x5000ff01]
  41dde6:	add    BYTE PTR [esi+eiz*4-0x31],dl
  41ddea:	(bad)  
  41ddeb:	inc    DWORD PTR [eax]
  41dded:	fild   DWORD PTR [eax]
  41ddef:	cmp    al,0x7e
  41ddf1:	jg     0x41ddf2
  41ddf3:	(bad)  
  41ddf4:	dec    ebp
  41ddf6:	add    bh,dl
  41ddf8:	pop    esi
  41ddf9:	add    eax,DWORD PTR [eax]
  41ddfb:	add    ah,cl
  41ddfd:	cli    
  41ddfe:	mov    ecx,ebp
  41de00:	mov    ebx,0x8389cc85
  41de05:	or     al,0x0
  41de07:	xchg   ecx,eax
  41de08:	sub    eax,0x54
  41de0d:	inc    eax
  41de0e:	add    BYTE PTR [ebx],ch
  41de10:	in     eax,0x77
  41de12:	cmp    edi,0xffffffff
  41de15:	add    al,0x0
  41de17:	nop
  41de18:	add    dh,BYTE PTR [esi]
  41de1a:	add    BYTE PTR [ecx-0x5500ba01],cl
  41de20:	push   ds
  41de21:	stc    
  41de22:	dec    DWORD PTR [ecx+0x48ccc1cc]
  41de28:	icebp  
  41de29:	xor    al,BYTE PTR [eax]
  41de2b:	(bad)  
  41de2c:	inc    ebp
  41de2e:	mov    DWORD PTR [eax+edi*8+0xff83db],eax
  41de35:	pop    ecx
  41de36:	add    BYTE PTR [edx-0x6f],ah
  41de39:	and    al,0xff
  41de3b:	inc    DWORD PTR [ebx+0x2c5effb1]
  41de41:	or     edi,edi
  41de43:	(bad)  
  41de44:	jmp    esp
  41de46:	(bad)  
  41de47:	jl     0x41de2c
  41de49:	mov    ah,cl
  41de4b:	add    BYTE PTR [eax],al
  41de4d:	mov    edi,edi
  41de4f:	mov    bl,0x86
  41de51:	dec    ebx
  41de52:	add    BYTE PTR [eax],al
  41de54:	and    esi,0xffffffff
  41de57:	mov    eax,0x8383f690
  41de5c:	call   ebp
  41de5e:	and    DWORD PTR [edi+0xc],0xffffffb5
  41de62:	add    BYTE PTR [ecx-0x74ffbd01],cl
  41de68:	popf   
  41de69:	out    0xff,al
  41de6b:	add    BYTE PTR [eax],al
  41de6d:	add    BYTE PTR [bx+di-0xa],ch
  41de71:	mov    BYTE PTR [eax],0xff
  41de74:	sbb    DWORD PTR [esi+0x0],0xffffffec
  41de78:	js     0x41de12
  41de7a:	add    BYTE PTR [ebx+0x5dffaa00],al
  41de80:	out    dx,al
  41de81:	mov    ecx,DWORD PTR [ecx-0x33d27c01]
  41de87:	push   ebp
  41de88:	(bad)  
  41de89:	call   0xde41678e
  41de8e:	add    cl,bl
  41de90:	push   edx
  41de91:	scas   eax,DWORD PTR es:[edi]
  41de92:	(bad)  
  41de93:	(bad)  
  41de94:	call   FWORD PTR [ebx]
  41de96:	call   DWORD PTR [ebp+0x1c]
  41de99:	fild   WORD PTR [eax]
  41de9b:	mov    DWORD PTR [ebx+0x3989ffcd],eax
  41dea1:	stos   BYTE PTR es:[edi],al
  41dea2:	inc    DWORD PTR [eax]
  41dea4:	add    BYTE PTR [eax+eax*1],cl
  41dea7:	mov    dl,0xc9
  41dea9:	(bad)  
  41deab:	add    BYTE PTR [ebx+0x6e37ff1c],al
  41deb1:	adc    bh,bh
  41deb3:	add    DWORD PTR [eax],0xffffffe7
  41deb6:	inc    DWORD PTR [esi-0x3]
  41deb9:	push   ecx
  41deba:	add    bh,bh
  41debc:	jmp    ebx
  41debe:	sbb    DWORD PTR [eax+0xccbefc],0xffffff83
  41dec5:	inc    edi
  41dec6:	jmp    DWORD PTR [eax]
  41dec8:	call   0xe3:0xffff0096
  41decf:	dec    ecx
  41ded0:	out    dx,eax
  41ded1:	iret   
  41ded2:	(bad)  
  41ded3:	(bad)  
  41ded4:	call   DWORD PTR [esi-0x1]
  41ded7:	mov    bh,0xed
  41ded9:	repz add bh,bh
  41dedc:	add    BYTE PTR [esi],cl
  41dede:	dec    edi
  41dee0:	dec    ebp
  41dee1:	cli    
  41dee2:	(bad)  
  41dee3:	inc    DWORD PTR [eax]
  41dee5:	mov    al,ds:0x8255e500
  41deea:	(bad)  
  41deeb:	inc    DWORD PTR [ebx+0xe52ff7f]
  41def1:	lea    eax,[eax]
  41def3:	add    bh,bh
  41def5:	xlat   BYTE PTR ds:[ebx]
  41def6:	add    dl,ah
  41def8:	mov    ds:0xffff0a,al
  41defd:	lahf   
  41defe:	add    BYTE PTR [edx+0x5],ah
  41df01:	push   ebx
  41df02:	inc    DWORD PTR [ebx+0xd006300]
  41df08:	push   cs
  41df09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0a:	(bad)  
  41df0b:	inc    DWORD PTR [ebx-0x4993003c]
  41df11:	mov    bl,0xff
  41df13:	int3   
  41df14:	int3   
  41df15:	(bad)  
  41df17:	sub    ecx,ebp
  41df19:	xchg   DWORD PTR [eax],eax
  41df1b:	int3   
  41df1c:	jmp    FWORD PTR [ebx]
  41df1e:	cmp    DWORD PTR [edi-0xa290],0xffffff83
  41df25:	js     0x41df26
  41df27:	fidivr WORD PTR [esi-0x60]
  41df2a:	add    DWORD PTR [eax],0xffffffff
  41df2d:	ja     0x41deb2
  41df2f:	loope  0x41df85
  41df31:	pop    ebp
  41df32:	inc    DWORD PTR [ebx-0x71006200]
  41df38:	lods   al,BYTE PTR ds:[esi]
  41df39:	(bad)  
  41df3a:	inc    DWORD PTR [eax]
  41df3c:	inc    DWORD PTR [edx-0x6401b501]
  41df42:	add    DWORD PTR [ebx+0x2dcccaff],0x1a
  41df49:	jl     0x41df4b
  41df4b:	(bad)  
  41df4c:	dec    DWORD PTR [ebp-0x167bed01]
  41df52:	inc    DWORD PTR [eax]
  41df54:	or     DWORD PTR [edi+0x0],0xffffffff
  41df58:	clc    
  41df59:	dec    ecx
  41df5a:	add    BYTE PTR [ecx+0xf7cc],cl
  41df60:	and    al,0x7c
  41df62:	add    BYTE PTR [eax],al
  41df64:	int3   
  41df65:	icebp  
  41df66:	jmp    DWORD PTR [esi+ebx*4+0x7]
  41df6a:	inc    DWORD PTR [eax]
  41df6c:	call   DWORD PTR [edx+0x0]
  41df6f:	xor    al,0xe9
  41df71:	dec    edi
  41df72:	inc    DWORD PTR [eax]
  41df74:	(bad)  
  41df75:	jg     0x41df76
  41df77:	push   edx
  41df78:	aas    
  41df79:	retf   0x83
  41df7c:	add    ch,bl
  41df7e:	int3   
  41df7f:	cs inc edi
  41df81:	add    al,0xff
  41df83:	(bad)  
  41df84:	inc    DWORD PTR ds:0x8b01d000
  41df8a:	int3   
  41df8b:	(bad)  
  41df8c:	(bad)  
  41df8d:	jnp    0x41df8e
  41df8f:	dec    esi
  41df90:	inc    DWORD PTR [esi-0xc00ff77]
  41df96:	dec    eax
  41df98:	cmc    
  41df99:	push   edi
  41df9a:	(bad)  
  41df9b:	inc    DWORD PTR [eax]
  41df9d:	pop    ss
  41df9e:	add    BYTE PTR [edx-0xff1c9d],dl
  41dfa4:	dec    DWORD PTR [ecx-0x63058401]
  41dfaa:	add    bh,bh
  41dfac:	add    BYTE PTR ds:0xec03cf00,ah
  41dfb2:	mov    edi,edi
  41dfb4:	add    BYTE PTR [esi+0x0],ch
  41dfb7:	out    0xf5,eax
  41dfb9:	xchg   ebx,eax
  41dfba:	inc    DWORD PTR [eax]
  41dfbc:	(bad)  
  41dfbd:	jp     0x41dfbf
  41dfbf:	cld    
  41dfc0:	retf   
  41dfc1:	fadd   QWORD PTR [ebx-0x7c41ff01]
  41dfc7:	inc    DWORD PTR [esi+ebp*8]
  41dfca:	or     DWORD PTR [ecx+0x3007c00],0xffffffaf
  41dfd1:	or     al,0xff
  41dfd3:	add    bh,bh
  41dfd5:	cmp    eax,DWORD PTR [eax]
  41dfd7:	lea    esp,[esp+eax*4-0x27000001]
  41dfde:	dec    edi
  41dfe0:	jg     0x41dffd
  41dfe2:	add    bh,bh
  41dfe4:	add    DWORD PTR [ebx-0x1],0xffffffdb
  41dfe8:	pop    ebx
  41dfe9:	mov    al,ds:0xfeff00ff
  41dfee:	add    BYTE PTR [ebp-0x4f],ch
  41dff1:	push   ebx
  41dff2:	add    DWORD PTR [ebx-0x1700687d],0x1e
  41dff9:	sub    bh,bh
  41dffb:	(bad)  
  41dffc:	dec    DWORD PTR [ebx-0x64958000]
  41e002:	inc    DWORD PTR [ebx+0x51007d00]
  41e008:	adc    eax,0x83ff83ae
  41e00d:	ror    esp,cl
  41e00f:	fs data16 idiv bh
  41e013:	inc    DWORD PTR [ebx+0x6865831e]
  41e019:	pop    ebx
  41e01a:	(bad)  
  41e01b:	inc    DWORD PTR [eax]
  41e01d:	inc    esi
  41e01e:	int3   
  41e01f:	loop   0x41e019
  41e021:	and    al,0xff
  41e023:	add    ah,cl
  41e025:	mov    ah,0xff
  41e027:	sub    al,0xbb
  41e029:	sar    edi,0x0
  41e02c:	add    BYTE PTR [eax],cl
  41e02e:	(bad)  
  41e02f:	clc    
  41e030:	xchg   edx,eax
  41e031:	rol    BYTE PTR [ebx-0x797c34],0x55
  41e038:	aaa    
  41e039:	rol    BYTE PTR [eax],0xcc
  41e03c:	add    BYTE PTR [ebx],dh
  41e03e:	add    cl,cl
  41e040:	arpl   WORD PTR [eax+eax*1],bx
  41e043:	add    ah,cl
  41e045:	lock (bad) 
  41e047:	cmp    al,0xf2
  41e049:	cli    
  41e04a:	(bad)  
  41e04b:	dec    DWORD PTR [ecx+0x6ba60033]
  41e051:	fadd   DWORD PTR [eax]
  41e053:	(bad)  
  41e054:	inc    DWORD PTR [eax-0x1]
  41e057:	jae    0x41e06a
  41e059:	cwde   
  41e05a:	inc    DWORD PTR [ebx+0x6a836eff]
  41e060:	and    al,0xcc
  41e062:	or     DWORD PTR [ecx-0x6fffdc00],0x7a
  41e069:	inc    esp
  41e06a:	inc    DWORD PTR [eax]
  41e06c:	dec    DWORD PTR [ebx]
  41e06e:	(bad)  
  41e06f:	mov    ebp,0xff00b59a
  41e074:	mov    ebp,edi
  41e076:	jmp    FWORD PTR [ebx+0x1a]
  41e079:	mov    edi,0xb5ff83ff
  41e07e:	sub    DWORD PTR [eax+0x1],0xffffffff
  41e082:	add    BYTE PTR [eax],al
  41e084:	call   FWORD PTR [esi]
  41e086:	call   DWORD PTR [ecx+0x7e]
  41e089:	mov    ch,0xff
  41e08b:	add    DWORD PTR [ebx+0x38c6832b],0x3c
  41e092:	inc    DWORD PTR [eax]
  41e094:	mov    DWORD PTR [ebx],eax
  41e096:	and    eax,0x6b
  41e099:	ins    BYTE PTR es:[edi],dx
  41e09a:	mov    DWORD PTR [eax],eax
  41e09c:	mov    DWORD PTR [esi],eax
  41e09e:	jmp    FWORD PTR [ebx+0x3f]
  41e0a1:	mov    eax,0x830000ff
  41e0a6:	add    bl,bh
  41e0a8:	inc    esi
  41e0a9:	xchg   DWORD PTR [eax],eax
  41e0ab:	add    BYTE PTR [ebx+0x3d62ff17],al
  41e0b1:	xchg   ebx,eax
  41e0b2:	dec    esp
  41e0b4:	add    BYTE PTR [ebx+eax*4+0x7c],ch
  41e0b8:	es pop ebp
  41e0ba:	add    bh,bh
  41e0bc:	add    BYTE PTR [ecx],ah
  41e0be:	add    BYTE PTR [ecx-0x25],dl
  41e0c1:	xor    al,BYTE PTR [eax]
  41e0c3:	(bad)  
  41e0c4:	jmp    DWORD PTR [edi+0x47ad2789]
  41e0ca:	inc    DWORD PTR [ebx+0x120032ff]
  41e0d0:	push   ebp
  41e0d1:	fwait
  41e0d2:	inc    DWORD PTR [eax]
  41e0d4:	push   DWORD PTR [edi]
  41e0d6:	int3   
  41e0d7:	into   
  41e0d8:	out    dx,al
  41e0d9:	inc    edx
  41e0da:	(bad)  
  41e0db:	inc    DWORD PTR [eax]
  41e0dd:	(bad)  
  41e0de:	dec    DWORD PTR [ebp+0x3ed1]
  41e0e4:	dec    DWORD PTR [esi-0x1]
  41e0e7:	std    
  41e0e8:	test   eax,0x8300ff59
  41e0ed:	retf   0xf283
  41e0f0:	fwait
  41e0f1:	out    0xff,eax
  41e0f3:	add    BYTE PTR [eax],al
  41e0f5:	or     edi,edi
  41e0f7:	std    
  41e0f8:	rcl    ecx,cl
  41e0fa:	inc    DWORD PTR [eax]
  41e0fc:	add    BYTE PTR [edx-0x1],ch
  41e0ff:	cmp    al,0x2d
  41e101:	and    al,BYTE PTR [eax]
  41e103:	(bad)  
  41e104:	jmp    FWORD PTR [eax+0x0]
  41e107:	out    0x1c,eax
  41e109:	adc    eax,0x48ffffff
  41e10e:	mov    DWORD PTR [eax-0x7cbc63],esi
  41e114:	inc    DWORD PTR [ecx+0x0]
  41e117:	mov    edi,0x89ff94b7
  41e11c:	add    BYTE PTR [edi],al
  41e11e:	add    BYTE PTR [eax],bl
  41e120:	push   eax
  41e121:	mov    ch,0xff
  41e123:	dec    esp
  41e125:	jno    0x41e126
  41e127:	push   esi
  41e128:	pop    es
  41e129:	fs dec esp
  41e12c:	add    BYTE PTR ds:0x8f358283,bl
  41e132:	add    ah,cl
  41e134:	jmp    edx
  41e136:	(bad)  
  41e137:	ds xor ch,dl
  41e13a:	mov    DWORD PTR [eax],eax
  41e13c:	and    eax,0xffffffff
  41e13f:	iret   
  41e140:	in     al,dx
  41e141:	or     BYTE PTR [eax],al
  41e143:	(bad)  
  41e144:	push   edi
  41e146:	int3   
  41e147:	xchg   ebp,eax
  41e148:	jge    0x41e121
  41e14a:	add    bh,bh
  41e14c:	(bad)  
  41e14d:	jp     0x41e14f
  41e14f:	push   ebp
  41e150:	std    
  41e151:	loopne 0x41e152
  41e153:	(bad)  
  41e154:	call   ecx
  41e156:	int3   
  41e157:	sub    cx,dx
  41e15a:	int3   
  41e15b:	int3   
  41e15c:	sub    DWORD PTR [ebx],0xffffffff
  41e15f:	mov    esp,eax
  41e161:	pop    edx
  41e162:	cmp    edi,0x0
  41e165:	pop    esp
  41e166:	add    BYTE PTR [edi+0x34],ch
  41e169:	(bad)  
  41e16b:	inc    DWORD PTR [ebx+0x2b5a005f]
  41e171:	les    eax,FWORD PTR [eax]
  41e173:	or     esp,0x49
  41e176:	add    edx,0xffffffff
  41e179:	ss or  esp,0xffffff83
  41e17d:	and    BYTE PTR [eax],al
  41e17f:	iret   
  41e180:	ss pop ebx
  41e182:	(bad)  
  41e183:	(bad)  
  41e184:	(bad)  
  41e185:	jge    0x41e186
  41e187:	stos   DWORD PTR es:[edi],eax
  41e188:	mov    ecx,0xffffff8c
  41e18d:	cwde   
  41e18e:	mov    DWORD PTR [eax-0x58],esi
  41e191:	xor    eax,DWORD PTR [eax]
  41e193:	mov    DWORD PTR [eax],eax
  41e195:	imul   edi,edi,0xfff30061
  41e19b:	add    BYTE PTR [eax],al
  41e19d:	push   edi
  41e19e:	call   DWORD PTR [ecx]
  41e1a0:	xchg   edi,eax
  41e1a1:	inc    edx
  41e1a2:	add    BYTE PTR [eax],al
  41e1a4:	int3   
  41e1a5:	jmp    0x41e1a6
  41e1a7:	or     DWORD PTR [ecx],ecx
  41e1a9:	or     eax,0x78008383
  41e1ae:	dec    DWORD PTR [esi]
  41e1b0:	xchg   edi,eax
  41e1b1:	nop
  41e1b2:	(bad)  
  41e1b3:	(bad)  
  41e1b4:	inc    ecx
  41e1b6:	add    BYTE PTR [eax],ah
  41e1b8:	mov    DWORD PTR [ecx],edx
  41e1ba:	add    bh,bh
  41e1bc:	(bad)  
  41e1bd:	jmp    0xfd5689c1
  41e1c2:	mov    edi,edi
  41e1c4:	xor    ebx,0xffffffff
  41e1c7:	or     al,0x2f
  41e1c9:	jecxz  0x41e1ca
  41e1cb:	inc    DWORD PTR [eax]
  41e1cd:	lods   al,BYTE PTR ds:[esi]
  41e1ce:	(bad)  
  41e1cf:	jle    0x41e245
  41e1d1:	jl     0x41e1d3
  41e1d3:	(bad)  
  41e1d4:	jmp    FWORD PTR [edi]
  41e1d6:	add    dl,bh
  41e1d8:	and    al,0x79
  41e1da:	(bad)  
  41e1db:	inc    DWORD PTR [eax]
  41e1dd:	sbb    eax,0x8d41d600
  41e1e2:	dec    esp
  41e1e4:	xor    DWORD PTR [esi],0x0
  41e1e7:	dec    ebx
  41e1e8:	(bad)  
  41e1e9:	sbb    DWORD PTR [ebx-0xbdff01],eax
  41e1ef:	xchg   DWORD PTR [eax],esi
  41e1f1:	iret   
  41e1f2:	add    BYTE PTR [eax],al
  41e1f4:	dec    DWORD PTR [edi+edi*8-0x156642]
  41e1fb:	add    BYTE PTR [ecx+0x11a9ff4f],cl
  41e201:	fiadd  DWORD PTR [eax]
  41e203:	inc    DWORD PTR [ebx-0x4a0dff48]
  41e209:	sbb    eax,0x968383ff
  41e20e:	add    BYTE PTR [esi+0x30],ch
  41e211:	mov    dh,0x0
  41e213:	inc    DWORD PTR [eax]
  41e215:	jg     0x41e19a
  41e217:	cmp    BYTE PTR [edi+0xfffff2],bl
  41e21d:	clc    
  41e21e:	int3   
  41e21f:	cld    
  41e220:	mov    al,0x9d
  41e222:	dec    DWORD PTR [ecx+0x23ffe9ff]
  41e228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e229:	and    bh,bh
  41e22b:	inc    DWORD PTR [eax]
  41e22d:	fiadd  WORD PTR [eax]
  41e22f:	push   es
  41e230:	mov    eax,0xff0000d7
  41e235:	icebp  
  41e236:	inc    ecx
  41e238:	push   0x83007a
  41e23d:	mov    ebx,0xb3cc4d00
  41e242:	add    bh,bh
  41e244:	dec    DWORD PTR [edx-0x1]
  41e247:	add    ah,BYTE PTR [ecx+0x2a]
  41e24d:	dec    edx
  41e24e:	(bad)  
  41e24f:	fstp   st(0)
  41e251:	add    eax,DWORD PTR [eax]
  41e253:	(bad)  
  41e254:	(bad)  
  41e255:	cmp    bh,bh
  41e257:	pop    ebp
  41e258:	sbb    al,0x5a
  41e25a:	add    bh,bh
  41e25c:	jmp    DWORD PTR [edi-0x1]
  41e25f:	pop    ebx
  41e260:	xchg   ebp,eax
  41e261:	loopne 0x41e263
  41e263:	add    bh,bh
  41e265:	push   edi
  41e266:	add    bl,ch
  41e268:	and    bl,BYTE PTR [edi+edi*8]
  41e26b:	add    BYTE PTR [ecx+0x2db90017],cl
  41e271:	retf   
  41e272:	add    BYTE PTR [eax],al
  41e274:	call   DWORD PTR [eax+eax*1-0x80]
  41e278:	cmp    al,0xe0
  41e27a:	add    bh,bh
  41e27c:	add    BYTE PTR [esp+ecx*8],dh
  41e27f:	enter  0x332f,0xff
  41e283:	add    bh,bh
  41e285:	sbb    bh,bh
  41e287:	jl     0x41e2df
  41e289:	mov    dl,0x0
  41e28b:	mov    DWORD PTR [eax],eax
  41e28d:	xor    edi,edi
  41e28f:	clc    
  41e290:	inc    DWORD PTR fs:[ebx-0x620001]
  41e297:	cmp    al,0xdb
  41e299:	outs   dx,BYTE PTR ds:[esi]
  41e29a:	add    BYTE PTR [eax],al
  41e29c:	(bad)  
  41e29d:	fld    DWORD PTR [eax]
  41e29f:	jp     0x41e2f9
  41e2a1:	pop    edx
  41e2a2:	dec    DWORD PTR [ecx-0x4200ab00]
  41e2a8:	test   al,0x72
  41e2aa:	(bad)  
  41e2ab:	inc    DWORD PTR [eax]
  41e2ad:	jb     0x41e2ae
  41e2af:	loop   0x41e2a1
  41e2b1:	stos   BYTE PTR es:[edi],al
  41e2b2:	add    bh,bh
  41e2b4:	jmp    DWORD PTR [eax+eax*1-0x29e560]
  41e2bb:	inc    DWORD PTR [eax]
  41e2bd:	mov    ds:0x83514aff,al
  41e2c2:	add    BYTE PTR [eax],al
  41e2c4:	add    BYTE PTR [ebp-0x1],bh
  41e2c7:	mov    edx,0x89ff2ff9
  41e2cc:	call   DWORD PTR [ebx+eax*4+0x34]
  41e2d0:	loop   0x41e348
  41e2d2:	add    ah,cl
  41e2d4:	jmp    FWORD PTR [esi]
  41e2d6:	jmp    DWORD PTR [edx+0x5d]
  41e2d9:	loop   0x41e2db
  41e2db:	add    BYTE PTR [eax],al
  41e2dd:	loop   0x41e2de
  41e2df:	out    0x12,eax
  41e2e1:	sub    ecx,DWORD PTR [ecx-0xeeff7d]
  41e2e7:	push   edx
  41e2e8:	(bad)  
  41e2e9:	pop    DWORD PTR [ebx-0xaf0001]
  41e2ef:	jbe    0x41e2ab
  41e2f1:	adc    DWORD PTR [eax],eax
  41e2f3:	(bad)  
  41e2f4:	jmp    FWORD PTR [ecx+0x0]
  41e2f7:	push   ecx
  41e2f8:	sub    BYTE PTR [esi],ch
  41e2fa:	add    DWORD PTR [ebx-0x41002101],0xffffffa0
  41e301:	clc    
  41e302:	add    BYTE PTR [ebx+0x7c00fd00],al
  41e308:	adc    eax,0xff8376
  41e30d:	and    al,0x0
  41e30f:	scas   al,BYTE PTR es:[edi]
  41e310:	jmp    0x40e32f
  41e315:	lock inc DWORD PTR [edi-0xe]
  41e319:	cdq    
  41e31a:	(bad)  
  41e31b:	inc    DWORD PTR [ebx+0x1c1892b]
  41e321:	or     eax,DWORD PTR [eax]
  41e323:	inc    DWORD PTR [ebx+0x509fff3f]
  41e329:	push   eax
  41e32a:	(bad)  
  41e32b:	inc    DWORD PTR [eax]
  41e32d:	and    al,0x83
  41e32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e330:	retf   
  41e331:	(bad)  
  41e332:	inc    DWORD PTR [eax]
  41e334:	and    DWORD PTR ds:0xe82aa600,0xffffffcc
  41e33b:	int3   
  41e33c:	or     ebx,0x0
  41e33f:	int    0xb1
  41e341:	inc    eax
  41e342:	mov    edi,edi
  41e344:	call   DWORD PTR [edx-0x1]
  41e347:	xchg   ebp,eax
  41e348:	out    dx,al
  41e349:	mov    cs,WORD PTR [ecx-0x7eff01]
  41e34f:	loopne 0x41e2ee
  41e351:	mov    ah,0x0
  41e353:	int3   
  41e354:	add    BYTE PTR [ecx],ah
  41e356:	add    BYTE PTR [ebx],cl
  41e358:	stc    
  41e359:	dec    ecx
  41e35a:	dec    esp
  41e35c:	add    BYTE PTR [edi-0x69fd1901],ah
  41e362:	inc    DWORD PTR [ebx-0x347c9377]
  41e368:	mov    al,0x9a
  41e36a:	inc    DWORD PTR [eax]
  41e36c:	jmp    edx
  41e36e:	add    BYTE PTR [eax+0xff3d83],dh
  41e374:	call   DWORD PTR [edi-0x1c710801]
  41e37a:	inc    DWORD PTR [ebx+0x69009ccc]
  41e380:	out    0x6a,eax
  41e382:	add    BYTE PTR [eax],al
  41e384:	add    BYTE PTR [edi],ch
  41e386:	jmp    DWORD PTR [ecx*1+0xfff2]
  41e38d:	in     al,dx
  41e38e:	adc    DWORD PTR [ebx+0x46],0x31
  41e392:	int3   
  41e393:	(bad)  
  41e394:	push   DWORD PTR [eax+eax*1+0x7f]
  41e398:	xchg   ebp,eax
  41e399:	push   edi
  41e39a:	add    ah,cl
  41e39c:	call   DWORD PTR [ecx]
  41e39e:	(bad)  
  41e39f:	sti    
  41e3a0:	pop    eax
  41e3a1:	xchg   ecx,eax
  41e3a2:	add    BYTE PTR [ecx+0x38007a00],cl
  41e3a8:	mov    al,ds:0xff83894d
  41e3ad:	pop    eax
  41e3ae:	inc    DWORD PTR [edx-0x63]
  41e3b1:	loopne 0x41e3b2
  41e3b3:	add    bh,bh
  41e3b5:	test   BYTE PTR [ebx+0x73e4ce],0xff
  41e3bc:	int3   
  41e3bd:	mov    WORD PTR [eax],es
  41e3bf:	xor    al,ah
  41e3c1:	or     edi,edi
  41e3c3:	(bad)  
  41e3c4:	(bad)  
  41e3c5:	mov    ecx,0xe481a6ff
  41e3ca:	add    DWORD PTR [eax],0x0
  41e3cd:	aaa    
  41e3ce:	adc    DWORD PTR [edx-0xff73fd],0xffffffff
  41e3d5:	or     al,0x0
  41e3d7:	or     BYTE PTR [esi],dh
  41e3d9:	mov    bl,0x83
  41e3db:	(bad)  
  41e3dc:	call   DWORD PTR [edx]
  41e3de:	inc    DWORD PTR [edi]
  41e3e0:	mov    al,0x5b
  41e3e2:	add    DWORD PTR [ebx+0x7183d683],0x6e
  41e3e9:	jno    0x41e3ea
  41e3eb:	inc    DWORD PTR [eax]
  41e3ed:	jmp    0x2bf04f1
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	sbb    DWORD PTR ds:0xaa9e9400,0xffffffff
  41e3fb:	add    bh,bh
  41e3fd:	daa    
  41e3fe:	call   FWORD PTR [edi]
  41e400:	pop    ss
  41e401:	leave  
  41e402:	inc    DWORD PTR [eax]
  41e404:	add    BYTE PTR [eax],ah
  41e406:	add    BYTE PTR [ecx-0xfffb07],dl
  41e40c:	(bad)  
  41e40d:	in     al,dx
  41e40e:	add    BYTE PTR [ecx-0x33db4b],dl
  41e414:	int3   
  41e415:	xchg   ebp,eax
  41e416:	int3   
  41e417:	loope  0x41e48e
  41e419:	xor    eax,0x5183ffff
  41e41e:	dec    ecx
  41e420:	loope  0x41e400
  41e422:	(bad)  
  41e423:	(bad)  
  41e424:	(bad)  
  41e425:	cmp    al,0xff
  41e427:	jns    0x41e49f
  41e429:	push   es
  41e42a:	add    BYTE PTR [eax],al
  41e42c:	dec    DWORD PTR [esi]
  41e42e:	sbb    ebp,0xffffffcf
  41e431:	(bad)  
  41e433:	add    BYTE PTR [eax],al
  41e435:	rol    DWORD PTR [eax],0xfe
  41e438:	dec    ecx
  41e439:	sub    edi,edi
  41e43b:	dec    esp
  41e43d:	jl     0x41e3c2
  41e43f:	xchg   esi,eax
  41e440:	push   edx
  41e441:	jne    0x41e443
  41e443:	add    DWORD PTR [eax],0xffffffac
  41e446:	add    BYTE PTR [eax],dh
  41e448:	xor    cl,BYTE PTR [eax+eax*1+0x0]
  41e44c:	inc    DWORD PTR [edi+0x634dd4ff]
  41e452:	mov    edi,edi
  41e454:	push   DWORD PTR [ebx+0x0]
  41e457:	ss clc 
  41e459:	(bad)  
  41e45a:	(bad)  
  41e45b:	(bad)  
  41e45c:	call   eax
  41e45e:	add    bl,bh
  41e460:	xor    eax,DWORD PTR [edi]
  41e462:	inc    DWORD PTR [eax]
  41e464:	inc    esp
  41e466:	int3   
  41e467:	rol    esi,0x89
  41e46a:	add    DWORD PTR [eax],0x0
  41e46d:	push   ds
  41e46e:	or     DWORD PTR [ebx],0x6b
  41e471:	jmp    0x9000:0xb000000
  41e478:	or     esp,DWORD PTR [ebx+eax*4-0x3306ff01]
  41e47f:	outs   dx,BYTE PTR ds:[esi]
  41e480:	mov    edx,0xccff00ca
  41e485:	inc    ebp
  41e486:	add    bh,cl
  41e488:	adc    eax,0xff8383db
  41e48d:	push   cs
  41e48e:	add    BYTE PTR [edx+0xaa2be8],al
  41e494:	add    BYTE PTR [ecx+0x445034],ah
  41e49a:	push   0x1
  41e49c:	push   0x444090
  41e4a1:	mov    ds:0x449004,eax
  41e4a6:	call   eax
  41e4a8:	call   0x4221e0
  41e4ad:	push   0x436170
  41e4b2:	call   0x42c020
  41e4b7:	add    esp,0x4
  41e4ba:	xor    eax,eax
  41e4bc:	ret    
  41e4bd:	int3   
  41e4be:	int3   
  41e4bf:	int3   
  41e4c0:	add    eax,0x83ff75
  41e4c5:	(bad)  
  41e4c6:	jnp    0x41e50c
  41e4c8:	dec    ebx
  41e4c9:	jno    0x41e4ca
  41e4cb:	(bad)  
  41e4cc:	(bad)  
  41e4cd:	call   FWORD PTR [edi-0x1c]
  41e4d0:	pop    esi
  41e4d1:	or     bh,bh
  41e4d3:	dec    esp
  41e4d5:	int3   
  41e4d6:	and    eax,0xff98e8fa
  41e4db:	add    BYTE PTR [ebx+0x6955e600],al
  41e4e1:	je     0x41e4e2
  41e4e3:	(bad)  
  41e4e4:	dec    esp
  41e4e6:	ins    BYTE PTR es:[edi],dx
  41e4e7:	xor    eax,0xff003299
  41e4ec:	mov    edi,edi
  41e4ee:	push   ss
  41e4ef:	lods   eax,DWORD PTR ds:[esi]
  41e4f0:	push   esp
  41e4f1:	sbb    al,0x0
  41e4f3:	(bad)  
  41e4f4:	inc    DWORD PTR [eax]
  41e4f6:	mulps  xmm6,XMMWORD PTR [esi+0x11]
  41e4fa:	add    bh,bh
  41e4fc:	add    DWORD PTR [eax],0xffffffb0
  41e4ff:	(bad)  
  41e500:	popf   
  41e501:	rol    BYTE PTR [eax],cl
  41e503:	(bad)  
  41e504:	inc    DWORD PTR [eax]
  41e506:	inc    eax
  41e507:	jp     0x41e4fe
  41e509:	imul   edi,edi,0xffffffff
  41e50c:	int3   
  41e50d:	push   DWORD PTR [ebx]
  41e50f:	and    ebx,eax
  41e511:	int3   
  41e512:	add    bh,bh
  41e514:	(bad)  
  41e515:	call   FWORD PTR [eax+0x4f]
  41e518:	jmp    0x41e510
  41e51d:	int3   
  41e51e:	cmc    
  41e51f:	dec    esi
  41e520:	jmp    0x41e44e
  41e525:	(bad)  
  41e526:	out    dx,eax
  41e527:	xchg   edi,eax
  41e528:	aad    0xc4
  41e52a:	(bad)  
  41e52b:	dec    esp
  41e52d:	add    ah,dh
  41e52f:	sti    
  41e530:	pop    edi
  41e531:	xchg   esp,eax
  41e532:	(bad)  
  41e533:	inc    DWORD PTR [ebx-0x2c888a00]
  41e539:	pop    ecx
  41e53a:	dec    esp
  41e53c:	add    bh,bh
  41e53e:	mov    ecx,0xf9611
  41e543:	add    BYTE PTR [ebx-0x6ba5b901],al
  41e549:	leave  
  41e54a:	inc    DWORD PTR [eax]
  41e54c:	dec    esp
  41e54e:	or     al,0xf
  41e550:	cmp    al,0xf5
  41e552:	inc    DWORD PTR [eax]
  41e554:	(bad)  
  41e555:	jmp    FWORD PTR [ecx-0xf9cc59]
  41e55b:	(bad)  
  41e55c:	(bad)  
  41e55d:	call   DWORD PTR [eax+0x4b]
  41e560:	mov    ebp,0x8900001a
  41e565:	add    BYTE PTR [edi-0x1],bl
  41e568:	adc    al,BYTE PTR [edx-0x77]
  41e56b:	int3   
  41e56c:	int3   
  41e56d:	(bad)  
  41e56e:	sti    
  41e56f:	sar    BYTE PTR [ecx],cl
  41e571:	or     al,0xff
  41e573:	int3   
  41e574:	(bad)  
  41e575:	(bad)  
  41e576:	jmp    0xffb6beb6
  41e57b:	(bad)  
  41e57c:	inc    DWORD PTR [ebx-0x361d752b]
  41e582:	add    BYTE PTR [ebx+0x68cbff83],al
  41e588:	xor    al,0x5e
  41e58a:	mov    DWORD PTR [ecx+0x5dbc8300],ecx
  41e590:	pop    ebp
  41e591:	xchg   edx,eax
  41e592:	(bad)  
  41e593:	inc    DWORD PTR [ebx-0x15b8137d]
  41e599:	iret   
  41e59a:	add    ah,cl
  41e59c:	inc    DWORD PTR [eax]
  41e59e:	loopne 0x41e5d8
  41e5a0:	call   0x8342e4fb
  41e5a5:	sbb    esp,0xffffff98
  41e5a8:	fadd   QWORD PTR [ebx-0xff0034]
  41e5ae:	mov    eax,0xffd3df15
  41e5b3:	inc    DWORD PTR [eax]
  41e5b5:	inc    DWORD PTR [ebp-0x69]
  41e5b8:	pcmpgtd mm7,mm7
  41e5bb:	mov    DWORD PTR [eax],eax
  41e5bd:	mov    DWORD PTR [esi],ebx
  41e5bf:	(bad)  
  41e5c0:	pushf  
  41e5c1:	sub    al,0xff
  41e5c3:	inc    DWORD PTR [eax]
  41e5c5:	push   DWORD PTR [edx+eax*1]
  41e5c8:	or     BYTE PTR [eax],ah
  41e5ca:	(bad)  
  41e5cb:	(bad)  
  41e5cc:	dec    DWORD PTR [ecx+0x7dbae45e]
  41e5d2:	(bad)  
  41e5d3:	(bad)  
  41e5d4:	(bad)  
  41e5d5:	call   DWORD PTR [ebx]
  41e5d7:	into   
  41e5d8:	and    al,BYTE PTR [eax+eax*1-0x28337c7d]
  41e5df:	retf   
  41e5e0:	dec    edi
  41e5e1:	jecxz  0x41e5e3
  41e5e3:	add    ah,cl
  41e5e5:	call   FWORD PTR [ebx+edx*4+0x33]
  41e5e9:	mov    DWORD PTR [eax],0xd8ffffff
  41e5ef:	and    esi,esp
  41e5f1:	or     DWORD PTR [ecx+0x63ffccff],0x7b73a6
  41e5fb:	mov    edi,edi
  41e5fd:	add    al,bl
  41e5ff:	in     eax,0xd8
  41e601:	outs   dx,BYTE PTR ds:[esi]
  41e602:	inc    DWORD PTR [eax]
  41e604:	inc    DWORD PTR [eax]
  41e606:	add    al,0x85
  41e608:	pushf  
  41e609:	adc    eax,0xff89ff00
  41e60e:	(bad)  
  41e60f:	xor    DWORD PTR [eax],ebx
  41e611:	cmp    edi,edi
  41e613:	add    bh,bh
  41e615:	add    BYTE PTR [ebp-0xc33e14],dh
  41e61b:	inc    DWORD PTR [eax]
  41e61d:	add    BYTE PTR [ebx-0x33b74233],al
  41e623:	add    bh,bh
  41e625:	sbb    ecx,0x48
  41e628:	sahf   
  41e629:	mov    ebx,0xffcc00cc
  41e62e:	jge    0x41e63b
  41e630:	mov    al,0x0
  41e633:	inc    DWORD PTR [eax]
  41e635:	add    BYTE PTR [eax],bh
  41e637:	dec    esp
  41e638:	sahf   
  41e639:	dec    DWORD PTR gs:[ecx-0x5dcf0001]
  41e640:	mov    dh,0xdf
  41e642:	(bad)  
  41e643:	(bad)  
  41e644:	(bad)  
  41e645:	call   FWORD PTR [edi]
  41e647:	fdivr  QWORD PTR [ebp+0x65]
  41e64a:	add    ah,cl
  41e64c:	add    bh,bh
  41e64e:	fiadd  WORD PTR [ebp-0x3300db26]
  41e654:	add    DWORD PTR [eax],0xe
  41e657:	out    dx,eax
  41e658:	cmp    al,0xcf
  41e65a:	inc    DWORD PTR [eax]
  41e65c:	add    BYTE PTR [eax],al
  41e65e:	sbb    ebp,DWORD PTR [edx]
  41e660:	fisttp DWORD PTR [eax]
  41e662:	(bad)  
  41e663:	dec    DWORD PTR [ecx+0x6b019800]
  41e669:	and    BYTE PTR [eax],al
  41e66b:	(bad)  
  41e66c:	dec    esp
  41e66e:	sub    eax,DWORD PTR [ebx-0x7cd00c]
  41e674:	add    BYTE PTR [eax],al
  41e676:	ret    
  41e677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e678:	cld    
  41e679:	enter  0xff00,0x0
  41e67d:	add    BYTE PTR [esi+0x12e06c],bl
  41e683:	cmp    edi,0xffffffff
  41e686:	hlt    
  41e687:	cmp    al,BYTE PTR [eax]
  41e689:	add    BYTE PTR [eax],al
  41e68b:	inc    DWORD PTR [ebx+0x2f44a9ff]
  41e691:	xor    eax,DWORD PTR [eax]
  41e693:	int3   
  41e694:	int3   
  41e695:	and    edx,0x5c
  41e698:	xchg   ecx,eax
  41e699:	pushf  
  41e69a:	(bad)  
  41e69b:	inc    DWORD PTR [eax]
  41e69d:	int3   
  41e69e:	adc    DWORD PTR [esi],edi
  41e6a0:	xchg   esp,eax
  41e6a1:	adc    BYTE PTR [eax],al
  41e6a3:	(bad)  
  41e6a4:	dec    esp
  41e6a6:	stos   DWORD PTR es:[edi],eax
  41e6a7:	mov    DWORD PTR [edi+0xcd],edi
  41e6ad:	mov    ebx,ecx
  41e6af:	pop    eax
  41e6b0:	ret    0xff95
  41e6b3:	(bad)  
  41e6b4:	inc    DWORD PTR [eax]
  41e6b6:	and    BYTE PTR [ecx],dh
  41e6b8:	fimul  WORD PTR [eax-0x34]
  41e6bb:	cmp    edi,0x0
  41e6be:	mov    bl,0xfd
  41e6c0:	(bad)  
  41e6c1:	sub    al,0xff
  41e6c3:	add    BYTE PTR [eax],al
  41e6c5:	add    dl,bh
  41e6c7:	and    ah,BYTE PTR [ebp+0x72]
  41e6ca:	int3   
  41e6cb:	add    BYTE PTR [eax],al
  41e6cd:	(bad)  
  41e6ce:	in     eax,dx
  41e6cf:	div    BYTE PTR ss:[ecx]
  41e6d2:	inc    DWORD PTR [ebx+0x7813ff89]
  41e6d8:	enter  0xff68,0xff
  41e6dc:	cmp    edi,0xffffff87
  41e6df:	push   esi
  41e6e0:	in     al,dx
  41e6e1:	xchg   ebx,eax
  41e6e2:	inc    DWORD PTR [ebx+0x148effff]
  41e6e8:	aas    
  41e6e9:	or     bh,bh
  41e6eb:	inc    DWORD PTR [eax]
  41e6ed:	add    BYTE PTR [edx+0x4e],ah
  41e6f0:	fs mov edi,0xcc00ff
  41e6f6:	sar    edx,cl
  41e6f8:	dec    eax
  41e6f9:	add    eax,0xffff
  41e6fe:	test   al,0xcd
  41e700:	inc    ebp
  41e701:	add    BYTE PTR ds:[ebx-0x4485007d],al
  41e708:	add    al,dh
  41e70a:	(bad)  
  41e70b:	dec    DWORD PTR [ecx+0x5b0dd83]
  41e711:	out    dx,eax
  41e712:	add    bh,bh
  41e714:	inc    DWORD PTR [eax]
  41e716:	push   cs
  41e717:	fdivr  DWORD PTR [ebx-0x25]
  41e71a:	add    BYTE PTR [eax],al
  41e71c:	inc    DWORD PTR [ebx-0x101d1d3c]
  41e722:	cmp    edi,0xffffffff
  41e725:	call   FWORD PTR [eax]
  41e727:	out    0x93,eax
  41e729:	test   DWORD PTR [eax],eax
  41e72b:	add    BYTE PTR [eax],al
  41e72d:	dec    DWORD PTR [edx]
  41e72f:	aad    0x6f
  41e731:	retf   0xff
  41e734:	mov    DWORD PTR [eax],eax
  41e736:	cmp    eax,0xf33e38
  41e73b:	mov    DWORD PTR [ecx+0x10c8b1ff],ecx
  41e741:	or     DWORD PTR [eax],eax
  41e743:	add    DWORD PTR [eax],0xffffffff
  41e746:	retf   0x9022
  41e749:	cs dec esp
  41e74c:	(bad)  
  41e74d:	jmp    DWORD PTR ds:0xffc37667
  41e753:	add    BYTE PTR [eax],al
  41e755:	push   DWORD PTR [ecx-0x6c]
  41e758:	xchg   ebx,eax
  41e759:	jae    0x41e75b
  41e75b:	inc    DWORD PTR [eax]
  41e75d:	sbb    DWORD PTR [eax-0x56],0xfffffff8
  41e761:	and    BYTE PTR [eax],al
  41e763:	inc    DWORD PTR [ebx+0x3beae200]
  41e769:	nop
  41e76a:	add    bh,bh
  41e76c:	cmp    edi,0xfffffffe
  41e76f:	ins    DWORD PTR es:[edi],dx
  41e770:	sbb    dl,dl
  41e772:	cmp    edi,0x0
  41e775:	call   FWORD PTR [ebp-0x3e]
  41e778:	pop    esi
  41e779:	sub    eax,0x83ffcc00
  41e77e:	pop    esi
  41e77f:	std    
  41e780:	scas   eax,DWORD PTR es:[edi]
  41e781:	sbb    eax,DWORD PTR [eax]
  41e783:	add    bh,bh
  41e785:	push   DWORD PTR [edx]
  41e787:	leave  
  41e788:	sbb    cl,BYTE PTR [edi]
  41e78a:	cmp    edi,0x0
  41e78d:	jmp    FWORD PTR [edi]
  41e78f:	in     eax,dx
  41e790:	iret   
  41e791:	push   ds
  41e792:	cmp    edi,0xffffffff
  41e795:	add    BYTE PTR [edi+0x4a6aa0],ah
  41e79b:	int3   
  41e79c:	add    bh,bh
  41e79e:	sub    BYTE PTR [esi],dh
  41e7a0:	imul   edx,DWORD PTR [eax],0xffffffff
  41e7a3:	mov    DWORD PTR [eax],eax
  41e7a5:	mov    DWORD PTR [edi+0x4],ebp
  41e7a8:	pop    edi
  41e7a9:	int    0xcc
  41e7ab:	(bad)  
  41e7ac:	(bad)  
  41e7ad:	dec    edi
  41e7af:	cmp    BYTE PTR [eax],ch
  41e7b1:	fadd   QWORD PTR [eax]
  41e7b3:	add    BYTE PTR [ebx-0x2da4e734],al
  41e7b9:	int    0x0
  41e7bb:	inc    DWORD PTR [eax]
  41e7bd:	add    cl,cl
  41e7bf:	into   
  41e7c0:	pop    ds
  41e7c1:	idiv   edi
  41e7c3:	(bad)  
  41e7c4:	inc    DWORD PTR [eax]
  41e7c6:	xchg   esi,eax
  41e7c7:	inc    ebp
  41e7c8:	pop    ds
  41e7c9:	jl     0x41e74e
  41e7cb:	(bad)  
  41e7cc:	inc    DWORD PTR [eax]
  41e7ce:	(bad)  
  41e7cf:	bound  ax,DWORD PTR [ebp-0x7d]
  41e7d3:	(bad)  
  41e7d4:	inc    DWORD PTR [eax]
  41e7d6:	or     al,0x5d
  41e7d8:	jmp    DWORD PTR [esi]
  41e7da:	add    BYTE PTR [ebx-0x47d97d00],al
  41e7e0:	push   edx
  41e7e1:	mov    cl,0xff
  41e7e3:	add    ah,cl
  41e7e5:	(bad)  
  41e7e6:	jns    0x41e7fb
  41e7e8:	mov    dl,0xd0
  41e7ea:	mov    DWORD PTR [eax],eax
  41e7ec:	dec    DWORD PTR [ecx-0x744f7e19]
  41e7f2:	add    BYTE PTR [ebx-0x2b110100],al
  41e7f8:	sub    DWORD PTR ds:0xff83ff00,0xffffff9b
  41e7ff:	mov    ds:0xffff5212,eax
  41e804:	add    BYTE PTR [ecx-0x6bee2256],cl
  41e80a:	add    BYTE PTR [ecx+0x37180089],cl
  41e810:	inc    ebp
  41e811:	retf   
  41e812:	inc    DWORD PTR [eax]
  41e814:	inc    DWORD PTR [eax]
  41e816:	aam    0x56
  41e818:	retf   0x99
  41e81b:	add    BYTE PTR [ecx-0x5c880b77],cl
  41e821:	retf   
  41e822:	int3   
  41e823:	(bad)  
  41e824:	(bad)  
  41e825:	jmp    edi
  41e827:	xor    DWORD PTR [esi+0x74],ebp
  41e82a:	inc    DWORD PTR [ebx+0x4d51ffff]
  41e830:	add    eax,0x89ff7a
  41e835:	add    dh,ch
  41e837:	push   cs
  41e838:	xchg   BYTE PTR [edx+0x89],bh
  41e83e:	mov    bl,0x37
  41e840:	pop    edx
  41e841:	mov    ebp,0xff0000ff
  41e846:	fs pop ss
  41e848:	pushf  
  41e849:	adc    al,0xff
  41e84b:	add    ah,cl
  41e84d:	call   DWORD PTR [ecx+0x1b]
  41e850:	loopne 0x41e809
  41e852:	add    bh,bh
  41e854:	(bad)  
  41e855:	jmp    ecx
  41e857:	or     al,0xea
  41e859:	(bad)  
  41e85a:	add    bh,bh
  41e85c:	inc    DWORD PTR [ebx+0x55e0db37]
  41e862:	add    DWORD PTR [eax],0xffffffff
  41e865:	jmp    DWORD PTR [ebp+0x68]
  41e868:	sub    BYTE PTR [edi],0x89
  41e86b:	add    bh,bh
  41e86d:	dec    DWORD PTR [eax+0x6c9fc2]
  41e873:	add    bh,bh
  41e875:	xor    DWORD PTR [esi],0x7c
  41e878:	imul   esp,DWORD PTR [ebp-0x1],0xffffff83
  41e87c:	(bad)  
  41e87d:	call   DWORD PTR [ebx]
  41e87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e880:	das    
  41e881:	pushf  
  41e882:	inc    DWORD PTR [eax]
  41e884:	inc    DWORD PTR [ebx+0x76f6b731]
  41e88a:	add    BYTE PTR [ebx+0x6e70ff00],al
  41e890:	cdq    
  41e891:	enter  0xffcc,0xff
  41e895:	mov    edi,esi
  41e897:	pop    esi
  41e898:	xchg   esi,eax
  41e899:	icebp  
  41e89a:	inc    DWORD PTR [eax]
  41e89c:	add    bh,bh
  41e89e:	rcl    DWORD PTR [ebx-0x76002975],cl
  41e8a4:	add    DWORD PTR [eax],0x7f
  41e8a7:	je     0x41e8d9
  41e8a9:	sub    bh,bh
  41e8ab:	dec    esp
  41e8ad:	or     DWORD PTR [eax+ecx*4],0xffffffcd
  41e8b1:	ja     0x41e8b3
  41e8b3:	int3   
  41e8b4:	inc    DWORD PTR [eax]
  41e8b6:	jnp    0x41e8d4
  41e8b8:	mov    dh,0x51
  41e8ba:	(bad)  
  41e8bb:	dec    esp
  41e8bd:	dec    esp
  41e8bf:	(bad)
  41e8c3:	add    bh,bh
  41e8c5:	add    BYTE PTR [ebx-0x45],al
  41e8c8:	jbe    0x41e8ac
  41e8ca:	add    BYTE PTR [eax],al
  41e8cc:	(bad)  
  41e8cd:	(bad)  
  41e8ce:	cld    
  41e8cf:	int    0xb9
  41e8d1:	pop    ss
  41e8d2:	dec    esp
  41e8d4:	add    bh,bh
  41e8d6:	inc    edx
  41e8d7:	js     0x41e862
  41e8d9:	mov    esp,0xff8383
  41e8de:	xchg   edi,eax
  41e8df:	icebp  
  41e8e0:	in     eax,dx
  41e8e1:	loop   0x41e8e2
  41e8e3:	(bad)  
  41e8e4:	inc    DWORD PTR [ebx+0x4ea59b10]
  41e8ea:	add    ah,cl
  41e8ec:	mov    DWORD PTR [ebx+0x3370d1f1],eax
  41e8f2:	add    BYTE PTR [eax],al
  41e8f4:	dec    DWORD PTR [ecx+0x4998b985]
  41e8fa:	add    BYTE PTR [eax],al
  41e8fc:	mov    DWORD PTR [ecx+0x82e96d9],ecx
  41e902:	cmp    edi,0xffffffff
  41e905:	add    BYTE PTR [edi-0xcedd62],bl
  41e90b:	dec    DWORD PTR [ecx-0x579cde00]
  41e911:	sbb    bh,bh
  41e913:	mov    edi,edi
  41e915:	(bad)  
  41e916:	cld    
  41e917:	add    ecx,0x83ccffce
  41e91d:	(bad)  
  41e91e:	cmp    DWORD PTR [ebx-0xff1dbb],edx
  41e924:	add    DWORD PTR [eax],0x16
  41e927:	jne    0x41e8ec
  41e929:	in     al,dx
  41e92a:	add    DWORD PTR [eax],0xffffffcc
  41e92d:	add    BYTE PTR [ebp-0x4a],ah
  41e930:	cdq    
  41e931:	sbb    al,0x89
  41e933:	add    BYTE PTR [eax],al
  41e935:	dec    DWORD PTR [edx-0x7c5dedd3]
  41e93b:	(bad)  
  41e93c:	(bad)  
  41e93d:	call   FWORD PTR [eax+0x11]
  41e940:	push   ebx
  41e941:	dec    esp
  41e942:	(bad)  
  41e943:	(bad)  
  41e944:	dec    esp
  41e946:	xor    bh,BYTE PTR [ebx+0x7c]
  41e949:	sbb    al,0x0
  41e94b:	add    BYTE PTR [eax],al
  41e94d:	int3   
  41e94e:	test   al,0x2b
  41e950:	fcomi  st,st(3)
  41e952:	int3   
  41e953:	add    bh,bh
  41e955:	add    BYTE PTR [eax+0x52],bh
  41e958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e959:	xor    al,0xcc
  41e95b:	dec    esp
  41e95d:	add    ch,dl
  41e95f:	xlat   BYTE PTR ds:[ebx]
  41e960:	enter  0x8331,0xff
  41e964:	(bad)  
  41e965:	jmp    FWORD PTR [ecx-0x1c]
  41e968:	ja     0x41e9dd
  41e96a:	(bad)  
  41e96b:	(bad)  
  41e96c:	inc    DWORD PTR [eax]
  41e96e:	sub    al,BYTE PTR [edi-0x6f]
  41e971:	inc    edi
  41e972:	inc    DWORD PTR [eax]
  41e974:	cmp    edi,0x3a
  41e977:	stc    
  41e978:	rcr    BYTE PTR ds:0xff0083,cl
  41e97e:	or     BYTE PTR [ebp-0x48],cl
  41e981:	test   edi,edi
  41e983:	add    DWORD PTR [ebx+0x41b2a7ff],0xfffffff8
  41e98a:	add    bh,bh
  41e98c:	cmp    edi,0x31
  41e98f:	cmp    bl,ah
  41e991:	mov    dl,0xff
  41e993:	int3   
  41e994:	add    DWORD PTR [eax],0x7a
  41e997:	inc    eax
  41e998:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e99a:	add    bh,bh
  41e99c:	(bad)  
  41e99d:	inc    DWORD PTR [edx+0xdd8157]
  41e9a3:	inc    DWORD PTR [ebx-0x34b45b00]
  41e9a9:	lods   al,BYTE PTR ds:[esi]
  41e9aa:	inc    DWORD PTR [eax]
  41e9ac:	(bad)  
  41e9ad:	jmp    DWORD PTR [ecx-0xd]
  41e9b0:	aas    
  41e9b1:	pop    esi
  41e9b2:	(bad)  
  41e9b3:	(bad)  
  41e9b4:	(bad)  
  41e9b5:	call   FWORD PTR [ecx-0x332efaf4]
  41e9bb:	inc    DWORD PTR [ebx-0x3db0fd01]
  41e9c1:	leave  
  41e9c2:	int3   
  41e9c3:	add    DWORD PTR [eax],0xffffff89
  41e9c6:	imul   ebx,ebp,0xffffff9d
  41e9c9:	mov    BYTE PTR [ebx+0x2ff0000],0x9e
  41e9d0:	and    DWORD PTR [ebx-0x100],ebp
  41e9d6:	mov    esi,0xff02c200
  41e9db:	or     DWORD PTR [ecx+0x1a083500],0xffffff8d
  41e9e2:	add    BYTE PTR [ebx-0x34500100],al
  41e9e8:	jbe    0x41e9e6
  41e9ea:	inc    DWORD PTR [eax]
  41e9ec:	int3   
  41e9ed:	dec    DWORD PTR [ebp-0x4e]
  41e9f0:	or     al,0x11
  41e9f2:	cmp    edi,0xffffffff
  41e9f5:	add    BYTE PTR [ebx+0x735906],bl
  41e9fb:	add    ah,cl
  41e9fd:	call   edx
  41e9ff:	outs   dx,DWORD PTR ds:[esi]
  41ea00:	cmp    DWORD PTR [ebx],edx
  41ea02:	inc    DWORD PTR [eax]
  41ea04:	add    DWORD PTR [ebx+0x68bdeed6],0x0
  41ea0b:	(bad)  
  41ea0c:	(bad)  
  41ea0d:	push   DWORD PTR [ebx]
  41ea0f:	or     BYTE PTR [esi],ch
  41ea11:	xchg   DWORD PTR [eax],eax
  41ea13:	add    BYTE PTR [ecx-0xe86b301],cl
  41ea19:	ud0    edi,edi
  41ea1c:	add    bh,bh
  41ea1e:	xchg   DWORD PTR [esi-0x7c33e97e],esi
  41ea24:	add    bh,bh
  41ea26:	stos   BYTE PTR es:[edi],al
  41ea27:	arpl   WORD PTR [eax+0x56],dx
  41ea2a:	inc    DWORD PTR [eax]
  41ea2c:	int3   
  41ea2d:	jmp    ebx
  41ea2f:	test   al,0x13
  41ea31:	(bad)  
  41ea33:	add    BYTE PTR [eax],al
  41ea35:	push   DWORD PTR [edi-0x3a]
  41ea38:	cmp    eax,0xcc00ff5b
  41ea3d:	call   FWORD PTR [eax]
  41ea3f:	test   DWORD PTR [ebp-0xff91],ecx
  41ea45:	add    BYTE PTR [edx+0x4289c0],bh
  41ea4b:	(bad)  
  41ea4c:	inc    DWORD PTR [eax]
  41ea4e:	inc    eax
  41ea4f:	pop    es
  41ea50:	jecxz  0x41ea23
  41ea52:	inc    DWORD PTR [ebx-0x18500001]
  41ea58:	cmp    eax,0xffffcc44
  41ea5d:	dec    DWORD PTR [eax+0xfb297]
  41ea63:	inc    DWORD PTR [eax]
  41ea65:	add    BYTE PTR [esi+0x1f],bh
  41ea68:	and    dl,BYTE PTR [ebx]
  41ea6a:	int3   
  41ea6b:	dec    DWORD PTR [ecx+0x344cbb00]
  41ea71:	out    dx,al
  41ea72:	(bad)  
  41ea73:	inc    DWORD PTR [eax]
  41ea75:	add    BYTE PTR [eax],dl
  41ea77:	stos   DWORD PTR es:[edi],eax
  41ea78:	push   esp
  41ea79:	adc    edi,edi
  41ea7b:	add    BYTE PTR [ebx+0xb0e24ff],al
  41ea81:	retf   0xff
  41ea84:	(bad)  
  41ea85:	inc    DWORD PTR [ebx+ebp*2]
  41ea88:	push   ss
  41ea89:	pop    eax
  41ea8a:	(bad)  
  41ea8b:	inc    DWORD PTR [eax]
  41ea8d:	inc    DWORD PTR [ebx]
  41ea8f:	int3   
  41ea90:	mov    ecx,DWORD PTR [edi-0x1]
  41ea93:	dec    esp
  41ea95:	add    BYTE PTR [esi+0x23],bl
  41ea98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea99:	xchg   esi,eax
  41ea9a:	inc    DWORD PTR [eax]
  41ea9c:	(bad)  
  41ea9d:	inc    DWORD PTR [ebx]
  41ea9f:	or     al,0x46
  41eaa1:	pop    esi
  41eaa2:	inc    DWORD PTR [eax]
  41eaa4:	(bad)  
  41eaa5:	push   ecx
  41eaa7:	dec    edx
  41eaa8:	jmp    0xedff:0xff83b5
  41eaaf:	(bad)  
  41eab0:	sub    cl,al
  41eab2:	(bad)  
  41eab3:	inc    DWORD PTR [eax]
  41eab5:	int3   
  41eab6:	jbe    0x41eb1e
  41eab8:	xchg   ecx,eax
  41eab9:	nop
  41eaba:	int3   
  41eabb:	add    BYTE PTR [eax],al
  41eabd:	add    BYTE PTR [edi-0xf02cb9],bh
  41eac3:	add    DWORD PTR [ebx-0x7208b001],0x10
  41eaca:	add    ah,cl
  41eacc:	add    DWORD PTR [ebx+0x47d6e4c9],0x0
  41ead3:	add    BYTE PTR [eax],al
  41ead5:	call   DWORD PTR [ebx-0x493f84]
  41eadb:	mov    DWORD PTR [eax],eax
  41eadd:	add    BYTE PTR ds:0x83e8ae25,al
  41eae3:	(bad)  
  41eae4:	dec    esp
  41eae6:	sub    BYTE PTR [edi],dl
  41eae8:	dec    esp
  41eae9:	imul   edi,edi,0x71cc00ff
  41eaef:	addr16 mov es,edx
  41eaf2:	dec    esp
  41eaf4:	inc    DWORD PTR [eax]
  41eaf6:	inc    esi
  41eaf7:	mov    ecx,0xff16e2
  41eafc:	int3   
  41eafd:	push   DWORD PTR [esi]
  41eaff:	mov    eax,DWORD PTR [eax+ebx*1-0x7c000001]
  41eb06:	and    al,0x62
  41eb08:	push   0xcc000025
  41eb0d:	(bad)  
  41eb0e:	jmp    0xff4bdfc3
  41eb13:	inc    DWORD PTR [eax]
  41eb15:	int3   
  41eb16:	sub    dl,dh
  41eb18:	jno    0x41eb4a
  41eb1a:	add    BYTE PTR [eax],al
  41eb1c:	(bad)  
  41eb1d:	(bad)  
  41eb1e:	jnp    0x41eb15
  41eb20:	mov    esi,0xffffccf2
  41eb25:	jmp    FWORD PTR [eax+0x18]
  41eb28:	xchg   edi,eax
  41eb29:	in     al,dx
  41eb2a:	cmp    edi,0x0
  41eb2d:	int3   
  41eb2e:	push   0xff4f6375
  41eb33:	inc    DWORD PTR [eax]
  41eb35:	add    BYTE PTR [edx+0x39],bl
  41eb38:	or     DWORD PTR [edi+edi*8+0x180000ff],esi
  41eb3f:	cmp    eax,0xffffb056
  41eb44:	cmp    edi,0xf
  41eb47:	pop    ds
  41eb48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb49:	or     bh,bh
  41eb4b:	inc    DWORD PTR [eax]
  41eb4d:	call   ebx
  41eb4f:	xor    al,0x4d
  41eb51:	push   ds
  41eb52:	inc    DWORD PTR [eax]
  41eb54:	add    BYTE PTR [ebx+0x5c8102cb],al
  41eb5a:	or     DWORD PTR [ecx-0xfeb0100],0x6a
  41eb61:	mov    cl,0xff
  41eb63:	dec    DWORD PTR [ecx-0x27b75901]
  41eb69:	and    al,BYTE PTR [eax]
  41eb6b:	add    BYTE PTR [ebx-0x16947200],al
  41eb71:	inc    ebp
  41eb72:	inc    DWORD PTR [eax]
  41eb74:	add    DWORD PTR [ebx+0x47f4c121],0xffffffff
  41eb7b:	add    DWORD PTR [eax],0xffffffff
  41eb7e:	jmp    0x1bef70
  41eb83:	(bad)  
  41eb84:	dec    DWORD PTR [ecx+0xa69412b]
  41eb8a:	add    bh,bh
  41eb8c:	add    BYTE PTR [eax],al
  41eb8e:	(bad)  
  41eb8f:	xchg   ebp,eax
  41eb90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb91:	mov    ch,0xff
  41eb93:	(bad)  
  41eb94:	dec    DWORD PTR [ecx+0x7988f44e]
  41eb9a:	int3   
  41eb9b:	add    BYTE PTR [eax],al
  41eb9d:	add    BYTE PTR [edi],bh
  41eb9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba0:	jb     0x41eba9
  41eba2:	dec    DWORD PTR [ecx-0x56a8ff01]
  41eba8:	call   0xbaff:0xffccf8
  41ebaf:	inc    eax
  41ebb0:	addr16 out 0x0,al
  41ebb3:	(bad)  
  41ebb4:	dec    esp
  41ebb6:	xchg   edi,eax
  41ebb7:	xor    ebx,DWORD PTR [edi-0x6a]
  41ebba:	add    bh,bh
  41ebbc:	add    DWORD PTR [eax],0x44
  41ebbf:	loopne 0x41ebee
  41ebc1:	inc    DWORD PTR fs:[eax]
  41ebc4:	mov    esp,ecx
  41ebc6:	sbb    eax,DWORD PTR [edi]
  41ebc8:	fild   WORD PTR [ebx-0x7c00ff01]
  41ebce:	test   al,0x72
  41ebd0:	sbb    cl,cl
  41ebd2:	add    bh,bh
  41ebd4:	int3   
  41ebd5:	adc    DWORD PTR [eax+ecx*2],0xffffff9a
  41ebd9:	rol    DWORD PTR [eax],1
  41ebdb:	dec    DWORD PTR [ecx-0x4a5de301]
  41ebe1:	pop    ecx
  41ebe2:	add    DWORD PTR [eax],0x0
  41ebe5:	(bad)  
  41ebe6:	fcmovnbe st,st(0)
  41ebe8:	icebp  
  41ebe9:	sub    al,BYTE PTR [ebx-0x317cff7d]
  41ebef:	test   eax,0xffff0329
  41ebf4:	inc    DWORD PTR [eax]
  41ebf6:	sub    al,0xc1
  41ebf8:	adc    ah,bh
  41ebfa:	(bad)  
  41ebfb:	inc    DWORD PTR [eax]
  41ebfd:	dec    DWORD PTR [edx]
  41ebff:	cs ins BYTE PTR es:[edi],dx
  41ec01:	(bad)  
  41ec02:	dec    DWORD PTR [ecx+0x674dffff]
  41ec08:	dec    esp
  41ec09:	sub    al,0x0
  41ec0b:	add    BYTE PTR [ebx-0x340fd900],al
  41ec11:	popa   
  41ec12:	or     esp,0xffffff83
  41ec15:	add    BYTE PTR [edi-0x57443c],bl
  41ec1b:	add    DWORD PTR [eax],0x0
  41ec1e:	cmp    ecx,DWORD PTR [edi]
  41ec20:	getsec 
  41ec22:	inc    DWORD PTR [eax]
  41ec24:	add    BYTE PTR [ebx+0x2c1c3a1a],al
  41ec2a:	inc    DWORD PTR [eax]
  41ec2c:	inc    DWORD PTR [eax]
  41ec2e:	xchg   ebp,eax
  41ec2f:	dec    ebx
  41ec30:	mov    edx,0xccffcce5
  41ec35:	sbb    DWORD PTR [edi+0x56a925],0xffffffff
  41ec3c:	inc    DWORD PTR [eax]
  41ec3e:	sub    DWORD PTR [edi],ebx
  41ec40:	lods   eax,DWORD PTR ds:[esi]
  41ec41:	xchg   ecx,eax
  41ec42:	inc    DWORD PTR [eax]
  41ec44:	add    bh,bh
  41ec46:	xchg   ebp,edx
  41ec48:	or     eax,0xff00898e
  41ec4d:	dec    ecx
  41ec4f:	je     0x41ebff
  41ec51:	(bad)  
  41ec52:	dec    DWORD PTR [ecx-0x3e760000]
  41ec58:	and    ch,cl
  41ec5a:	(bad)  
  41ec5b:	inc    DWORD PTR [eax]
  41ec5d:	add    dh,cl
  41ec5f:	sub    BYTE PTR [ecx],0xd
  41ec62:	(bad)  
  41ec63:	inc    DWORD PTR [eax]
  41ec65:	push   eax
  41ec67:	sub    eax,DWORD PTR [eax]
  41ec69:	jns    0x41ec6a
  41ec6b:	dec    DWORD PTR [ecx-0xd997801]
  41ec71:	jnp    0x41ec72
  41ec73:	inc    DWORD PTR [eax]
  41ec75:	push   DWORD PTR [ecx+0x22]
  41ec78:	or     eax,DWORD PTR [eax+eax*1]
  41ec7b:	add    bh,bh
  41ec7d:	push   DWORD PTR [edx+0x5b3c07]
  41ec83:	add    ah,cl
  41ec85:	add    BYTE PTR [ebp+0x70],bl
  41ec88:	idiv   ebx
  41ec8a:	add    bh,bh
  41ec8c:	(bad)  
  41ec8d:	jmp    DWORD PTR [ebx-0x3a]
  41ec90:	jecxz  0x41eccc
  41ec92:	add    BYTE PTR [eax],al
  41ec94:	mov    DWORD PTR [eax],eax
  41ec96:	or     DWORD PTR [edi-0x3309a2],ebp
  41ec9c:	add    bh,bh
  41ec9e:	fmul   st,st(5)
  41eca0:	cs lahf 
  41eca2:	(bad)  
  41eca3:	inc    DWORD PTR [eax]
  41eca5:	(bad)  
  41eca6:	sti    
  41eca7:	cmp    eax,0xff009c74
  41ecac:	mov    edi,edi
  41ecae:	repnz in al,0xd9
  41ecb1:	and    al,0xcc
  41ecb3:	inc    DWORD PTR [eax]
  41ecb5:	mov    DWORD PTR [edi-0x33690ee5],ecx
  41ecbb:	(bad)  
  41ecbc:	(bad)  
  41ecbd:	jmp    FWORD PTR [edx+eiz*4-0x7cff9a50]
  41ecc4:	inc    DWORD PTR [eax]
  41ecc6:	sub    eax,eax
  41ecc8:	lods   eax,DWORD PTR ds:[esi]
  41ecc9:	jle    0x41eccb
  41eccb:	add    BYTE PTR [eax],al
  41eccd:	(bad)  
  41ecce:	jge    0x41ed06
  41ecd0:	mov    ds:0xcc89ffcf,al
  41ecd5:	add    al,dl
  41ecd7:	out    0x33,al
  41ecd9:	push   ds
  41ecda:	add    BYTE PTR [eax],al
  41ecdc:	cmp    edi,0x18
  41ecdf:	emms   
  41ece1:	xor    al,0xff
  41ece3:	add    DWORD PTR [ebx+0x345400cc],0xfffffffd
  41ecea:	inc    DWORD PTR [eax]
  41ecec:	add    bh,bh
  41ecee:	pushf  
  41ecef:	ds aas 
  41ecf1:	jmp    0xd867:0xffff83ff
  41ecf8:	dec    esi
  41ecf9:	add    edi,edi
  41ecfb:	add    bh,bh
  41ecfd:	add    BYTE PTR [edi-0x7ccd83cb],bl
  41ed03:	add    BYTE PTR [eax],al
  41ed05:	and    DWORD PTR ds:0xc3f179,0xffffffff
  41ed0c:	(bad)  
  41ed0d:	jmp    DWORD PTR [eax+0x5d]
  41ed10:	push   edi
  41ed11:	into   
  41ed12:	inc    DWORD PTR [eax]
  41ed14:	add    bh,bh
  41ed16:	ret    
  41ed17:	jmp    0x41ed32
  41ed19:	cmp    DWORD PTR [eax],eax
  41ed1b:	(bad)  
  41ed1c:	(bad)  
  41ed1d:	(bad)  
  41ed1e:	ficom  WORD PTR [eax-0x3e3d]
  41ed24:	add    bh,bh
  41ed26:	shl    DWORD PTR [esi],0x9b
  41ed29:	sbb    al,0xff
  41ed2b:	int3   
  41ed2c:	(bad)  
  41ed2d:	inc    DWORD PTR ds:0xffd221a2
  41ed33:	int3   
  41ed34:	inc    DWORD PTR [ebx-0x686153bf]
  41ed3a:	cmp    edi,0xffffffff
  41ed3d:	dec    DWORD PTR [esi+edi*8-0x44]
  41ed41:	or     eax,0xffffff00
  41ed46:	adc    BYTE PTR [eax+eiz*2+0x53],0x0
  41ed4b:	add    DWORD PTR [ebx-0x58af1901],0x2e
  41ed52:	add    bh,bh
  41ed54:	add    BYTE PTR [ebx-0x77621396],al
  41ed5a:	dec    DWORD PTR [ecx-0xf2a007d]
  41ed60:	(bad)  
  41ed61:	call   0xff42ec66
  41ed66:	lds    esp,FWORD PTR [eax-0x62]
  41ed69:	addr16 (bad) 
  41ed6b:	inc    DWORD PTR [ebx-0x3498e401]
  41ed71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed72:	(bad)  
  41ed73:	(bad)  
  41ed74:	inc    DWORD PTR [eax]
  41ed76:	cmp    DWORD PTR [ebp-0xff8f90],ebx
  41ed7c:	add    DWORD PTR [eax],0x4c
  41ed7f:	enter  0x6795,0xff
  41ed83:	add    bh,bh
  41ed85:	(bad)  
  41ed86:	cmp    ebx,ebx
  41ed88:	sbb    al,0x75
  41ed8a:	(bad)  
  41ed8b:	(bad)  
  41ed8c:	(bad)  
  41ed8d:	jmp    DWORD PTR [edx-0x4d]
  41ed90:	aam    0x46
  41ed92:	add    DWORD PTR [ebx-0x6c140001],0xb
  41ed99:	das    
  41ed9a:	int3   
  41ed9b:	mov    edi,edi
  41ed9d:	int3   
  41ed9e:	mov    bh,0x9d
  41eda0:	fcom   QWORD PTR [esi-0x34]
  41eda3:	int3   
  41eda4:	inc    DWORD PTR [eax]
  41eda6:	jl     0x41ee03
  41eda8:	adc    DWORD PTR [esi],eax
  41edaa:	(bad)  
  41edab:	inc    DWORD PTR [eax]
  41edad:	add    BYTE PTR [esi],bl
  41edaf:	mov    ds:0xff00e330,al
  41edb4:	inc    DWORD PTR [eax]
  41edb6:	pop    ebx
  41edb7:	data16 rcl BYTE PTR [eax],1
  41edba:	(bad)  
  41edbb:	(bad)  
  41edbc:	dec    DWORD PTR [ecx-0x4265f415]
  41edc2:	inc    DWORD PTR [eax]
  41edc4:	(bad)  
  41edc5:	jmp    DWORD PTR [eax]
  41edc7:	mov    eax,ds:0xcccc0577
  41edcc:	add    BYTE PTR [eax],al
  41edce:	fstp   QWORD PTR [edx+0x2]
  41edd1:	sub    edi,edi
  41edd3:	dec    esp
  41edd5:	cmp    DWORD PTR [ebp+0x28],0xffffffb1
  41edd9:	adc    eax,0xffffff00
  41edde:	loope  0x41ed85
  41ede0:	pop    ecx
  41ede1:	or     al,0x0
  41ede3:	inc    DWORD PTR [eax]
  41ede5:	add    cl,cl
  41ede7:	test   eax,0x8300eb5a
  41edec:	inc    DWORD PTR [ebx+0x52d48c48]
  41edf2:	dec    DWORD PTR [ecx+0x62d7ff83]
  41edf8:	sbb    DWORD PTR [edx],0xffffffff
  41edfb:	cmp    edi,0xffffffff
  41edfe:	dec    edi
  41edff:	stos   BYTE PTR es:[edi],al
  41ee00:	add    al,BYTE PTR [ecx-0x7cffff01]
  41ee06:	mov    ds:0xff2b6286,eax
  41ee0b:	(bad)  
  41ee0c:	(bad)  
  41ee0d:	push   DWORD PTR [edi+edi*4-0x51]
  41ee11:	jo     0x41ee13
  41ee13:	int3   
  41ee14:	add    bh,bh
  41ee16:	sbb    ch,BYTE PTR [ebx+0x7b]
  41ee19:	idiv   bh
  41ee1b:	or     esp,0xffffff83
  41ee1e:	(bad)  
  41ee1f:	cmp    DWORD PTR [esi+edx*2+0xcc83],eax
  41ee26:	jnp    0x41ee71
  41ee28:	in     eax,0x4c
  41ee2a:	(bad)  
  41ee2b:	(bad)  
  41ee2c:	(bad)  
  41ee2d:	jmp    DWORD PTR [ebx-0x3308eaf3]
  41ee33:	inc    DWORD PTR [eax]
  41ee35:	add    DWORD PTR [edi+0x4d],0x41
  41ee39:	std    
  41ee3a:	add    bh,bh
  41ee3c:	add    bh,bh
  41ee3e:	lahf   
  41ee3f:	je     0x41ee1c
  41ee41:	pop    esi
  41ee42:	add    DWORD PTR [eax],0xffffffff
  41ee45:	add    dh,bl
  41ee47:	mov    cs,WORD PTR [ecx+edx*8-0x1]
  41ee4b:	cmp    edi,0x0
  41ee4e:	bound  ecx,QWORD PTR [ebp-0x31]
  41ee51:	retf   0x8900
  41ee54:	add    BYTE PTR [ebx-0x5c5179e6],al
  41ee5a:	mov    edi,edi
  41ee5c:	mov    edi,edi
  41ee5e:	(bad)  
  41ee60:	in     eax,0x73
  41ee62:	inc    DWORD PTR [eax]
  41ee64:	cmp    edi,0xffffffc2
  41ee67:	adc    DWORD PTR [ebx-0x50],ecx
  41ee6a:	add    bh,bh
  41ee6c:	add    DWORD PTR [eax],0x0
  41ee6f:	push   edx
  41ee70:	inc    ecx
  41ee71:	and    DWORD PTR [eax],eax
  41ee73:	add    bh,bh
  41ee75:	call   DWORD PTR [edx-0x23]
  41ee78:	inc    ecx
  41ee79:	mov    DWORD PTR [eax],eax
  41ee7b:	inc    DWORD PTR [eax]
  41ee7d:	(bad)  
  41ee7e:	cmp    DWORD PTR ds:0x89006f53,esi
  41ee84:	mov    DWORD PTR [eax],eax
  41ee86:	pop    esp
  41ee87:	push   ebx
  41ee88:	add    eax,0xff830091
  41ee8d:	dec    DWORD PTR [esi-0x136c5a]
  41ee93:	dec    esp
  41ee95:	cmp    eax,0x1c
  41ee98:	shl    BYTE PTR [ebx+0x0],0x89
  41ee9c:	inc    DWORD PTR [eax]
  41ee9e:	ret    0xaa94
  41eea1:	xlat   BYTE PTR ds:[ebx]
  41eea2:	add    BYTE PTR [eax],al
  41eea4:	int3   
  41eea5:	sub    ebx,0x7d
  41eea8:	loope  0x41ee78
  41eeaa:	mov    edi,edi
  41eeac:	inc    DWORD PTR [ebx-0x3abb430b]
  41eeb2:	add    ah,cl
  41eeb4:	inc    DWORD PTR [eax]
  41eeb6:	xor    al,0xd7
  41eeb8:	(bad)  
  41eeb9:	out    0x83,al
  41eebb:	(bad)  
  41eebc:	dec    esp
  41eebe:	sbb    al,0xe5
  41eec0:	mov    al,ds:0x89ccff55
  41eec5:	mov    DWORD PTR [edi+0x8],edi
  41eec8:	pop    ds
  41eec9:	stos   DWORD PTR es:[edi],eax
  41eeca:	int3   
  41eecb:	add    bh,bh
  41eecd:	push   DWORD PTR [edx+0x63a438]
  41eed3:	cmp    edi,0x0
  41eed6:	push   0x89be12c5
  41eedb:	mov    DWORD PTR [eax],eax
  41eedd:	push   DWORD PTR [ebx+edi*4+0xccb57c]
  41eee4:	add    BYTE PTR [eax],al
  41eee6:	xor    eax,0xff25a028
  41eeeb:	add    bh,bh
  41eeed:	mov    DWORD PTR [esi+ebp*2+0x49],ebp
  41eef1:	jae    0x41eef2
  41eef3:	inc    DWORD PTR [ebx+0x2f20aff]
  41eef9:	lea    eax,[eax]
  41eefb:	(bad)  
  41eefc:	(bad)  
  41eefd:	call   FWORD PTR [esi]
  41eeff:	cmp    DWORD PTR [edx],edi
  41ef01:	sar    bh,1
  41ef03:	inc    DWORD PTR [eax]
  41ef05:	jmp    esi
  41ef07:	mov    edx,0x89ff6f98
  41ef0c:	int3   
  41ef0d:	mov    esp,edx
  41ef0f:	xchg   ecx,eax
  41ef10:	sub    BYTE PTR [eax+0x89ff00],0x50
  41ef17:	test   bl,al
  41ef19:	mov    bh,0xff
  41ef1b:	inc    DWORD PTR [ebx+0x7bc4de00]
  41ef21:	sbb    esp,ecx
  41ef23:	add    BYTE PTR [eax],al
  41ef25:	call   DWORD PTR [eax]
  41ef27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef28:	pop    eax
  41ef29:	stos   DWORD PTR es:[edi],eax
  41ef2a:	add    BYTE PTR [eax],al
  41ef2c:	inc    DWORD PTR [eax]
  41ef2e:	arpl   WORD PTR [ebx-0xffb4d2],sp
  41ef34:	dec    DWORD PTR [ecx-0x6d648d4e]
  41ef3a:	inc    DWORD PTR [ebx+0x245fff83]
  41ef40:	aas    
  41ef41:	scas   al,BYTE PTR es:[edi]
  41ef42:	mov    DWORD PTR [eax],eax
  41ef44:	(bad)  
  41ef45:	push   DWORD PTR [eax]
  41ef47:	mov    ds:0xff00b11f,al
  41ef4c:	inc    DWORD PTR [eax]
  41ef4e:	ins    BYTE PTR es:[edi],dx
  41ef4f:	loope  0x41ef95
  41ef51:	inc    DWORD PTR es:[ebx+0x7d8d8300]
  41ef58:	cs add eax,0xff00ffcc
  41ef5e:	stc    
  41ef5f:	push   esi
  41ef60:	pop    eax
  41ef61:	cmp    edi,edi
  41ef63:	(bad)  
  41ef64:	inc    DWORD PTR [ebx-0x1fce1049]
  41ef6a:	add    BYTE PTR [eax],al
  41ef6c:	add    DWORD PTR [eax],0x15
  41ef6f:	in     eax,dx
  41ef70:	lods   al,BYTE PTR ds:[esi]
  41ef71:	mov    ecx,0xcc00
  41ef76:	scas   al,BYTE PTR es:[edi]
  41ef77:	(bad)  
  41ef78:	or     al,0xf0
  41ef7a:	(bad)  
  41ef7b:	(bad)  
  41ef7c:	(bad)  
  41ef7d:	jmp    DWORD PTR [ecx-0x8249c]
  41ef83:	int3   
  41ef84:	inc    DWORD PTR [eax]
  41ef86:	push   es
  41ef87:	lods   al,BYTE PTR ds:[esi]
  41ef88:	xchg   ebp,eax
  41ef89:	mov    DWORD PTR [eax],eax
  41ef8b:	dec    esp
  41ef8d:	add    BYTE PTR [esi],bl
  41ef8f:	aam    0x39
  41ef91:	(bad)  
  41ef92:	int3   
  41ef93:	add    BYTE PTR [eax],al
  41ef95:	call   DWORD PTR [ebx+0x17]
  41ef98:	jne    0x41ef7a
  41ef9a:	cmp    edi,0xffffffff
  41ef9d:	jmp    FWORD PTR [edx]
  41ef9f:	push   esp
  41efa0:	inc    eax
  41efa1:	loop   0x41efa3
  41efa3:	int3   
  41efa4:	add    BYTE PTR [eax],al
  41efa6:	push   esp
  41efa7:	mov    dl,0x92
  41efa9:	add    eax,DWORD PTR [eax]
  41efab:	(bad)  
  41efac:	(bad)  
  41efad:	push   DWORD PTR [esi]
  41efaf:	mov    esp,0x83839d2f
  41efb4:	add    DWORD PTR [ebx-0x20068606],0xffffffff
  41efbb:	int3   
  41efbc:	add    bh,bh
  41efbe:	mov    dh,cl
  41efc0:	pop    ss
  41efc1:	cmp    al,BYTE PTR [eax]
  41efc3:	(bad)  
  41efc4:	(bad)  
  41efc5:	(bad)  
  41efc6:	std    
  41efc7:	add    dh,BYTE PTR [eax-0x7c0076c6]
  41efcd:	push   DWORD PTR [eiz*4+0x2017]
  41efd4:	mov    edi,edi
  41efd6:	retf   0x51cf
  41efd9:	cmp    edi,0xe7ff83ff
  41efdf:	mov    al,ds:0xffff66c8
  41efe4:	(bad)  
  41efe5:	jmp    edx
  41efe7:	or     ebx,DWORD PTR ds:0xff0089fd
  41efed:	jmp    edi
  41efef:	dec    edx
  41eff0:	test   DWORD PTR [edi-0x1],0xa201239c
  41effa:	add    BYTE PTR [eax],al
  41effc:	(bad)  
  41effd:	(bad)  
  41effe:	cmp    eax,0x83e0dc55
  41f003:	mov    edi,edi
  41f005:	add    BYTE PTR [ecx+0x60],bl
  41f008:	retf   0xff48
  41f00b:	add    BYTE PTR [eax],al
  41f00d:	add    BYTE PTR [esi-0x39],bl
  41f010:	pop    ebp
  41f011:	push   ebp
  41f012:	add    BYTE PTR [ebx-0x21f30100],al
  41f018:	jle    0x41efb0
  41f01a:	add    BYTE PTR [eax],al
  41f01c:	(bad)  
  41f01d:	jmp    DWORD PTR [esi-0x2c7dd]
  41f023:	inc    DWORD PTR [ebx-0x34253101]
  41f029:	fiadd  DWORD PTR [eax]
  41f02b:	inc    DWORD PTR [eax]
  41f02d:	inc    DWORD PTR [esp+edx*1-0x76006856]
  41f034:	(bad)  
  41f035:	dec    DWORD PTR [ecx+esi*4+0x5]
  41f039:	inc    ebx
  41f03a:	int3   
  41f03b:	int3   
  41f03c:	add    bh,bh
  41f03e:	out    0x42,al
  41f040:	mov    al,0x3d
  41f042:	inc    DWORD PTR [eax]
  41f044:	add    bh,bh
  41f046:	mov    ds:0xb62cb3,al
  41f04b:	inc    DWORD PTR [eax]
  41f04d:	add    BYTE PTR [esi-0x7c89fa2f],ch
  41f053:	mov    edi,edi
  41f055:	jmp    ebx
  41f057:	mov    al,0x9b
  41f059:	xchg   edx,eax
  41f05a:	add    BYTE PTR [eax],al
  41f05c:	(bad)  
  41f05d:	call   DWORD PTR [ecx-0xaf4740]
  41f063:	(bad)  
  41f064:	dec    esp
  41f066:	shl    ebp,cl
  41f068:	dec    eax
  41f069:	fdivp  st(7),st
  41f06b:	add    DWORD PTR [eax],0xffffffff
  41f06e:	mov    edi,0xffaf5f5f
  41f073:	int3   
  41f074:	inc    DWORD PTR [eax]
  41f076:	xchg   BYTE PTR [ecx-0x11],bh
  41f079:	test   eax,0xffccff83
  41f07e:	cmp    eax,0x814f6d
  41f083:	add    DWORD PTR [eax],0xffffffcc
  41f086:	cmp    al,0x13
  41f088:	dec    al
  41f08a:	mov    edi,edi
  41f08c:	add    BYTE PTR [ecx+0x2adc28cd],cl
  41f092:	inc    DWORD PTR [eax]
  41f094:	(bad)  
  41f095:	jmp    DWORD PTR [ecx+0x26]
  41f098:	fistp  WORD PTR [esi]
  41f09a:	(bad)  
  41f09b:	(bad)  
  41f09c:	(bad)  
  41f09d:	(bad)  
  41f09e:	fiadd  DWORD PTR [ebp+ebp*1+0x43]
  41f0a2:	or     esp,0x0
  41f0a5:	add    BYTE PTR [ebx-0xf3e5c0],ah
  41f0ab:	add    bh,bh
  41f0ad:	push   DWORD PTR [esi]
  41f0af:	mov    ebp,0xccb0fc
  41f0b4:	(bad)  
  41f0b5:	push   edi
  41f0b7:	jns    0x41f0ec
  41f0b9:	imul   eax,DWORD PTR [eax],0xbf00ff00
  41f0bf:	cli    
  41f0c0:	js     0x41f131
  41f0c2:	add    bh,bh
  41f0c4:	add    bh,bh
  41f0c6:	push   esi
  41f0c7:	pop    ds
  41f0c8:	push   0xff00ff05
  41f0cd:	(bad)  
  41f0ce:	jmp    0xff8372fe
  41f0d3:	(bad)  
  41f0d4:	inc    DWORD PTR [eax]
  41f0d6:	inc    ebx
  41f0d7:	or     bl,ch
  41f0d9:	xor    edi,edi
  41f0db:	add    DWORD PTR [eax],0x0
  41f0de:	cwde   
  41f0df:	mov    esp,0xffccfaaa
  41f0e4:	dec    esp
  41f0e6:	mov    BYTE PTR [edx+esi*1],dh
  41f0e9:	jno    0x41f0ea
  41f0eb:	dec    esp
  41f0ed:	dec    DWORD PTR [ecx]
  41f0ef:	push   cs
  41f0f0:	inc    ebx
  41f0f1:	cmp    edi,0x0
  41f0f4:	add    bh,bh
  41f0f6:	(bad)  
  41f0f7:	mov    eax,0xffcc2cee
  41f0fc:	inc    DWORD PTR [ebx+0x17cc235a]
  41f102:	inc    DWORD PTR [ebx+0x589883cc]
  41f108:	pop    esp
  41f109:	fild   WORD PTR [eax]
  41f10b:	inc    DWORD PTR [ebx-0x2f9a2a01]
  41f111:	popf   
  41f112:	inc    DWORD PTR [ebx-0x649e0001]
  41f118:	in     al,dx
  41f119:	loope  0x41f09e
  41f11b:	inc    DWORD PTR [eax]
  41f11d:	add    BYTE PTR [edx],bh
  41f11f:	inc    eax
  41f120:	test   eax,0xffff899e
  41f125:	add    BYTE PTR [esi+0x79],dh
  41f128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f129:	mov    ah,0x89
  41f12b:	add    DWORD PTR [eax],0xffffff83
  41f12e:	ins    DWORD PTR es:[edi],dx
  41f12f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f130:	push   0x83ff0076
  41f135:	add    BYTE PTR [esi+0x266cd9],dh
  41f13b:	inc    DWORD PTR [eax]
  41f13d:	push   DWORD PTR [ebx+0x3a]
  41f140:	sti    
  41f141:	ret    0x8389
  41f144:	add    BYTE PTR [ecx-0x7d1b079],cl
  41f14a:	mov    DWORD PTR [ebx-0x303e007d],eax
  41f150:	(bad)  
  41f151:	fdivp  st(7),st
  41f153:	inc    DWORD PTR [eax]
  41f155:	dec    DWORD PTR [ecx-0xca67f4]
  41f15b:	add    bh,bh
  41f15d:	call   FWORD PTR [edx-0x6f]
  41f160:	jns    0x41f13d
  41f162:	(bad)  
  41f163:	(bad)  
  41f164:	inc    DWORD PTR [ebx+0xd050a71]
  41f16a:	inc    DWORD PTR [eax]
  41f16c:	add    DWORD PTR [ebx+0x5190430d],0xffffffff
  41f173:	(bad)  
  41f174:	inc    DWORD PTR [eax]
  41f176:	pusha  
  41f177:	and    bl,ah
  41f179:	fmul   QWORD PTR [ecx-0x767c0100]
  41f17f:	rcr    cl,1
  41f181:	mov    edi,0xffffff00
  41f186:	xor    ch,BYTE PTR [edx-0x30]
  41f189:	mov    bh,bh
  41f18b:	mov    DWORD PTR [ebx-0x472ad200],eax
  41f191:	or     BYTE PTR [ebx-0x43010000],al
  41f197:	xchg   edx,eax
  41f198:	xor    ebx,DWORD PTR [ecx-0x1]
  41f19b:	inc    DWORD PTR [ebx+0x179d52cc]
  41f1a1:	mov    eax,0x89ffff
  41f1a6:	fsubr  DWORD PTR [ecx+0x39]
  41f1a9:	jmp    0x41f1ab
  41f1ab:	(bad)  
  41f1ac:	(bad)  
  41f1ad:	push   DWORD PTR [esi]
  41f1af:	jg     0x41f21e
  41f1b1:	sar    edi,cl
  41f1b3:	(bad)  
  41f1b4:	inc    DWORD PTR [ebx-0x201d9281]
  41f1ba:	(bad)  
  41f1bb:	dec    esp
  41f1bd:	add    dh,cl
  41f1bf:	sbb    BYTE PTR [edi],ch
  41f1c1:	ret    
  41f1c2:	int3   
  41f1c3:	(bad)  
  41f1c4:	inc    DWORD PTR [eax]
  41f1c6:	xor    eax,0x315b15
  41f1cb:	cmp    edi,0xffffffff
  41f1ce:	dec    esp
  41f1cf:	fwait
  41f1d0:	push   edx
  41f1d1:	gs int3 
  41f1d3:	cmp    edi,0xffffff83
  41f1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1d7:	xchg   ch,cl
  41f1d9:	xchg   edi,eax
  41f1da:	(bad)  
  41f1db:	inc    DWORD PTR [ebx-0x30533601]
  41f1e1:	rol    BYTE PTR [eax],0x0
  41f1e4:	int3   
  41f1e5:	(bad)  
  41f1e6:	jmp    0xcc00:0xff20148f
  41f1ed:	push   DWORD PTR [eax-0x6c]
  41f1f0:	xor    eax,0x89ff0006
  41f1f5:	add    ch,ch
  41f1f7:	and    BYTE PTR [eax-0x69],dh
  41f1fa:	add    bh,bh
  41f1fc:	int3   
  41f1fd:	add    ah,bh
  41f1ff:	xchg   DWORD PTR [ebp-0x11],edx
  41f202:	(bad)  
  41f203:	inc    DWORD PTR [eax]
  41f205:	(bad)  
  41f206:	jmp    0x6e2c54
  41f20b:	cmp    edi,0xffffffff
  41f20e:	jle    0x41f1dc
  41f210:	add    ah,BYTE PTR [ebp+0x0]
  41f213:	inc    DWORD PTR [ebx+0x1e3cd400]
  41f219:	lock inc DWORD PTR [ebx-0x438c3400]
  41f220:	in     al,0xeb
  41f222:	(bad)  
  41f223:	inc    DWORD PTR [ebx-0x5b9d0a01]
  41f229:	sbb    al,BYTE PTR [ebx-0x7600007d]
  41f22f:	fs xchg esp,eax
  41f231:	lahf   
  41f232:	inc    DWORD PTR [ebx-0xddaff34]
  41f238:	push   cs
  41f239:	add    DWORD PTR [ebx-0xd003301],eax
  41f23f:	jge    0x41f283
  41f241:	cld    
  41f242:	inc    DWORD PTR [eax]
  41f244:	inc    DWORD PTR [eax]
  41f246:	push   0x8ba2af
  41f24b:	(bad)  
  41f24c:	(bad)  
  41f24d:	call   FWORD PTR [edi-0xb42075]
  41f253:	(bad)  
  41f254:	dec    esp
  41f256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f257:	or     DWORD PTR [edi+0xe],esi
  41f25a:	inc    DWORD PTR [eax]
  41f25c:	int3   
  41f25d:	int3   
  41f25e:	dec    ebp
  41f25f:	inc    ebx
  41f260:	stos   DWORD PTR es:[edi],eax
  41f261:	push   eax
  41f262:	cmp    edi,0xffffffff
  41f265:	dec    esp
  41f267:	pop    eax
  41f268:	stc    
  41f269:	gs add bh,bh
  41f26c:	(bad)  
  41f26d:	(bad)  
  41f26e:	out    dx,eax
  41f26f:	pop    es
  41f270:	in     eax,0xb4
  41f272:	inc    DWORD PTR [ebx-0x3e5b3400]
  41f278:	add    DWORD PTR [ebp-0x7d],ecx
  41f27b:	(bad)  
  41f27c:	dec    DWORD PTR [ecx+0x4507e198]
  41f282:	(bad)  
  41f283:	inc    DWORD PTR [eax]
  41f285:	int3   
  41f286:	push   ebx
  41f287:	pushf  
  41f288:	aaa    
  41f289:	fwait
  41f28a:	add    bh,bh
  41f28c:	(bad)  
  41f28d:	dec    DWORD PTR [eax]
  41f28f:	outs   dx,DWORD PTR ds:[esi]
  41f290:	push   cs
  41f291:	push   eax
  41f292:	inc    DWORD PTR [eax]
  41f294:	inc    DWORD PTR [eax]
  41f296:	les    edx,FWORD PTR [ebx-0x76ffa0b4]
  41f29c:	inc    DWORD PTR [eax]
  41f29e:	xchg   ecx,eax
  41f29f:	retf   
  41f2a0:	sbb    DWORD PTR [edi-0x7c01],eax
  41f2a6:	xchg   edi,eax
  41f2a7:	jae    0x41f256
  41f2a9:	out    dx,al
  41f2aa:	add    BYTE PTR [eax],al
  41f2ac:	add    bh,bh
  41f2ae:	xchg   ecx,eax
  41f2af:	fbstp  TBYTE PTR [edx]
  41f2b1:	jmp    0x41f2b3
  41f2b3:	(bad)  
  41f2b4:	(bad)  
  41f2b5:	jmp    FWORD PTR [ebp+0x4b]
  41f2b8:	jno    0x41f314
  41f2ba:	add    bh,bh
  41f2bc:	(bad)  
  41f2bd:	inc    DWORD PTR [edi-0x1]
  41f2c0:	es pop esi
  41f2c2:	inc    DWORD PTR [eax]
  41f2c4:	mov    DWORD PTR [eax],eax
  41f2c6:	das    
  41f2c7:	sub    al,0xf6
  41f2c9:	in     eax,0x0
  41f2cb:	add    BYTE PTR [eax],al
  41f2cd:	(bad)  
  41f2ce:	jns    0x41f32b
  41f2d0:	and    BYTE PTR [edi],bh
  41f2d2:	int3   
  41f2d3:	(bad)  
  41f2d4:	inc    DWORD PTR [eax]
  41f2d6:	xchg   ebp,eax
  41f2d7:	jecxz  0x41f263
  41f2d9:	dec    esi
  41f2da:	(bad)  
  41f2db:	(bad)  
  41f2dc:	inc    DWORD PTR [eax]
  41f2de:	sti    
  41f2df:	mov    ds:0xcccceb66,eax
  41f2e4:	inc    DWORD PTR [eax]
  41f2e6:	inc    esp
  41f2e7:	inc    edx
  41f2e8:	pop    ecx
  41f2e9:	sti    
  41f2ea:	int3   
  41f2eb:	(bad)  
  41f2ec:	(bad)  
  41f2ed:	push   DWORD PTR [ecx-0x7ce11ccf]
  41f2f3:	add    DWORD PTR [eax],0xffffffcc
  41f2f6:	jb     0x41f2b4
  41f2f8:	jg     0x41f2ba
  41f2fa:	inc    DWORD PTR [ebx+0x26f183ff]
  41f300:	dec    ebp
  41f301:	cmc    
  41f302:	inc    DWORD PTR [eax]
  41f304:	dec    DWORD PTR [ecx+0x5c921eb8]
  41f30a:	add    BYTE PTR [eax],al
  41f30c:	inc    DWORD PTR [ebx-0x576d5f00]
  41f312:	add    bh,bh
  41f314:	(bad)  
  41f315:	dec    edx
  41f317:	and    eax,ecx
  41f319:	std    
  41f31a:	cmp    edi,0xffffffff
  41f31d:	mov    DWORD PTR [ebx],eax
  41f31f:	and    bl,ah
  41f321:	call   0xd7d2:0xffffff
  41f328:	lods   eax,DWORD PTR ds:[esi]
  41f329:	fdivp  st(7),st
  41f32b:	(bad)  
  41f32c:	(bad)  
  41f32d:	inc    DWORD PTR [edx-0xae571f]
  41f333:	int3   
  41f334:	add    BYTE PTR [ecx+0x28f523bb],cl
  41f33a:	cmp    edi,0x0
  41f33d:	add    BYTE PTR [ebx+ebp*2+0xffa448],cl
  41f344:	inc    DWORD PTR [eax]
  41f346:	pop    ds
  41f347:	mov    esi,0xffff5e30
  41f34c:	int3   
  41f34d:	call   esp
  41f34f:	clc    
  41f350:	jae    0x41f2f8
  41f352:	add    BYTE PTR [eax],al
  41f354:	(bad)  
  41f355:	(bad)  
  41f356:	out    dx,al
  41f357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f358:	xor    BYTE PTR [ebp-0xff34],ah
  41f35e:	mov    al,al
  41f360:	lods   al,BYTE PTR ds:[esi]
  41f361:	adc    edi,edi
  41f363:	mov    edi,edi
  41f365:	call   ebx
  41f367:	repz pushf 
  41f369:	cmp    edi,edi
  41f36b:	int3   
  41f36c:	or     esp,0x6d
  41f36f:	jbe    0x41f323
  41f371:	xor    bh,bh
  41f373:	int3   
  41f374:	inc    DWORD PTR [eax]
  41f376:	mov    ah,0x20
  41f378:	sbb    BYTE PTR [ebp+0x0],bl
  41f37b:	(bad)  
  41f37c:	(bad)  
  41f37d:	call   FWORD PTR [esp+ebp*4-0xf031]
  41f384:	cmp    edi,0x2e
  41f387:	shr    DWORD PTR [edi+edx*8+0xcc],0x54
  41f38f:	out    dx,eax
  41f390:	mov    eax,ds:0xcc00ffab
  41f395:	int3   
  41f396:	xchg   ebx,eax
  41f397:	lock jecxz 0x41f322
  41f39a:	(bad)  
  41f39b:	(bad)  
  41f39c:	inc    DWORD PTR [ebx+0xd4f2cd]
  41f3a2:	inc    DWORD PTR [ebx+0x5eb60000]
  41f3a8:	xor    cl,dl
  41f3aa:	mov    DWORD PTR [ebx+0x386bff83],eax
  41f3b0:	or     DWORD PTR [esi-0x1],ebx
  41f3b3:	inc    DWORD PTR [eax]
  41f3b5:	(bad)  
  41f3b6:	jmp    0x41f34a
  41f3b8:	scas   al,BYTE PTR es:[edi]
  41f3b9:	xor    bh,bh
  41f3bb:	inc    DWORD PTR [ebx-0x36a1800]
  41f3c1:	ja     0x41f3c3
  41f3c3:	add    bh,bh
  41f3c5:	add    ah,dl
  41f3c7:	fcmovnu st,st(3)
  41f3c9:	push   ecx
  41f3ca:	mov    DWORD PTR [eax],eax
  41f3cc:	inc    DWORD PTR [eax]
  41f3ce:	mov    eax,0xab1fdd
  41f3d3:	mov    DWORD PTR [ecx-0x5afd5b01],ecx
  41f3d9:	in     al,0x0
  41f3db:	add    ah,cl
  41f3dd:	add    BYTE PTR [ecx-0xb0bdb7],dl
  41f3e3:	(bad)  
  41f3e4:	(bad)  
  41f3e5:	jmp    DWORD PTR [edi+0xc]
  41f3e8:	jl     0x41f3ec
  41f3ea:	int3   
  41f3eb:	add    BYTE PTR [eax],al
  41f3ed:	push   ecx
  41f3ef:	pushf  
  41f3f0:	add    edi,DWORD PTR [edi-0x33ffff01]
  41f3f6:	test   DWORD PTR [ecx],eax
  41f3f8:	(bad)  [edi-0x1]
  41f3fb:	or     DWORD PTR [ecx-0x3bfcc101],0x61
  41f402:	(bad)  
  41f403:	inc    DWORD PTR [eax]
  41f405:	adc    ebx,0x57
  41f408:	and    dh,al
  41f40a:	mov    DWORD PTR [ebx+0x6599ff00],eax
  41f410:	dec    esi
  41f411:	inc    DWORD PTR cs:[eax]
  41f414:	(bad)  
  41f415:	dec    DWORD PTR [esi-0x828890]
  41f41b:	mov    DWORD PTR [ecx+0x6549c283],ecx
  41f421:	inc    ebp
  41f422:	add    BYTE PTR [ebx+0x572fff00],al
  41f428:	inc    ebx
  41f429:	in     al,0xff
  41f42b:	add    DWORD PTR [eax],0xffffff83
  41f42e:	xor    al,0x85
  41f430:	imul   eax,DWORD PTR [ebp-0x33ffff7d],0x2f3fab29
  41f43a:	or     esp,0xffffffff
  41f43d:	xor    DWORD PTR [edx-0xcaf347],0x0
  41f444:	inc    DWORD PTR [eax]
  41f446:	sahf   
  41f447:	and    ah,ch
  41f449:	jmp    0x141f44d
  41f44e:	test   BYTE PTR [esi],dh
  41f450:	xchg   edi,eax
  41f451:	sub    edi,edi
  41f453:	add    BYTE PTR [eax],al
  41f455:	mov    DWORD PTR [edi],eax
  41f457:	inc    ebp
  41f458:	jmp    0x41f4d9
  41f45a:	add    BYTE PTR [eax],al
  41f45c:	inc    DWORD PTR [ebx+0x3edcded7]
  41f462:	(bad)  
  41f463:	(bad)  
  41f464:	dec    esp
  41f466:	les    esp,FWORD PTR [esi+edx*4-0x7c7c7ce0]
  41f46d:	add    DWORD PTR [eax+0x4980ea],0xffffffff
  41f474:	add    DWORD PTR [eax],0x1a
  41f477:	std    
  41f478:	jno    0x41f48d
  41f47a:	add    bh,bh
  41f47c:	(bad)  
  41f47d:	jmp    FWORD PTR [ecx]
  41f47f:	(bad)  
  41f480:	sbb    DWORD PTR ds:0x89ffffff,esp
  41f486:	repz mov ?,WORD PTR [eax+eax*1]
  41f48a:	(bad)  
  41f48b:	(bad)  
  41f48c:	(bad)  
  41f48d:	call   DWORD PTR [ebx-0x1f]
  41f490:	pop    ds
  41f491:	pushf  
  41f492:	add    DWORD PTR [ebx+0x79c900ff],0xfffffff4
  41f499:	aam    0xff
  41f49b:	add    bh,bh
  41f49d:	jmp    esp
  41f49f:	lahf   
  41f4a0:	push   0xffff8369
  41f4a5:	(bad)  
  41f4a6:	cmp    eax,0xffb08d86
  41f4ab:	mov    edi,edi
  41f4ad:	mov    DWORD PTR [ecx],ebx
  41f4af:	xchg   esi,eax
  41f4b0:	lods   eax,DWORD PTR ds:[esi]
  41f4b1:	mov    ds:0xffffffff,eax
  41f4b6:	xchg   ebp,eax
  41f4b7:	xchg   esi,eax
  41f4b8:	or     al,0xed
  41f4ba:	add    BYTE PTR [ebx-0x5d720001],al
  41f4c0:	inc    esp
  41f4c1:	test   edi,edi
  41f4c3:	(bad)  
  41f4c4:	(bad)  
  41f4c5:	call   FWORD PTR [esi+0x62]
  41f4c8:	out    0x2a,al
  41f4ca:	inc    DWORD PTR [ebx-0x16090034]
  41f4d0:	jbe    0x41f45b
  41f4d2:	mov    edi,edi
  41f4d4:	cmp    edi,0x38
  41f4d7:	repz (bad) [ecx-0x1]
  41f4db:	inc    DWORD PTR [eax]
  41f4dd:	mov    ebx,ecx
  41f4df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e0:	stos   BYTE PTR es:[edi],al
  41f4e1:	cwde   
  41f4e2:	inc    DWORD PTR [eax]
  41f4e4:	(bad)  
  41f4e5:	(bad)  
  41f4e6:	cli    
  41f4e7:	mov    al,ds:0x8300ef5a
  41f4ec:	inc    DWORD PTR [eax]
  41f4ee:	xchg   esp,eax
  41f4ef:	fild   WORD PTR [ebx-0x7c00335f]
  41f4f5:	adc    esp,0xffffff94
  41f4f8:	jnp    0x41f4be
  41f4fa:	dec    esp
  41f4fc:	mov    esp,ecx
  41f4fe:	ret    0xf80b
  41f501:	jge    0x41f503
  41f503:	cmp    edi,0xffffffff
  41f506:	or     BYTE PTR ds:0xff00e2dd,ch
  41f50c:	add    bh,bh
  41f50e:	jno    0x41f50c
  41f510:	stos   BYTE PTR es:[edi],al
  41f511:	ins    BYTE PTR es:[edi],dx
  41f512:	int3   
  41f513:	dec    esp
  41f515:	jmp    DWORD PTR [edx-0x4d]
  41f518:	add    edx,DWORD PTR [edx+0xff83]
  41f51e:	retf   
  41f51f:	push   0x8900f167
  41f524:	inc    DWORD PTR [eax]
  41f526:	(bad)  
  41f527:	xchg   edx,eax
  41f528:	cmp    BYTE PTR [edi+edi*8-0x1],0xff
  41f52d:	add    ah,ah
  41f52f:	add    al,0x4e
  41f531:	mov    bh,bh
  41f533:	inc    DWORD PTR [eax]
  41f535:	sbb    DWORD PTR [ecx-0xe],0xffffffc0
  41f539:	or     edi,edi
  41f53b:	int3   
  41f53c:	add    BYTE PTR [ecx+0x4a7d3911],cl
  41f542:	inc    DWORD PTR [eax]
  41f544:	add    bh,bh
  41f546:	leave  
  41f547:	mov    bl,0xc9
  41f549:	stos   DWORD PTR es:[edi],eax
  41f54a:	(bad)  
  41f54b:	inc    DWORD PTR [eax]
  41f54d:	or     DWORD PTR ds:0x14613a,0xffffff83
  41f554:	add    BYTE PTR [eax],al
  41f556:	xor    ebp,edx
  41f558:	in     eax,dx
  41f559:	sbb    eax,0xff00cc83
  41f55e:	into   
  41f55f:	inc    esp
  41f560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f561:	mov    ecx,0xff89ff00
  41f566:	mov    ecx,DWORD PTR [eax]
  41f568:	jp     0x41f5e3
  41f56a:	(bad)  
  41f56b:	inc    DWORD PTR [ebx+0x13523700]
  41f571:	pop    ebx
  41f572:	mov    edi,edi
  41f574:	(bad)  
  41f575:	call   DWORD PTR [ebx-0x3f]
  41f578:	mov    al,0xad
  41f57a:	(bad)  
  41f57b:	dec    DWORD PTR [ecx+0x3e8f8dff]
  41f581:	cmp    eax,DWORD PTR [ebx+0x5cc0000]
  41f587:	fisubr DWORD PTR [ebp+eiz*2-0xff01]
  41f58e:	aas    
  41f58f:	pop    ds
  41f590:	shl    DWORD PTR [esi-0x34],0x0
  41f594:	add    BYTE PTR [eax],al
  41f596:	(bad)  
  41f597:	and    bh,BYTE PTR [esi+eax*8]
  41f59a:	(bad)  
  41f59b:	dec    DWORD PTR [ecx-0x59b3601]
  41f5a1:	sbb    al,0x89
  41f5a3:	inc    DWORD PTR [eax]
  41f5a5:	add    BYTE PTR [ebp-0x61],dl
  41f5a8:	fild   WORD PTR [ebx]
  41f5aa:	add    bh,bh
  41f5ac:	mov    DWORD PTR [ebx+0xc83ecd8],eax
  41f5b2:	cmp    edi,0xffffff83
  41f5b5:	add    BYTE PTR [ebp-0x7cae06eb],ah
  41f5bb:	add    DWORD PTR [eax],0xffffffff
  41f5be:	adc    DWORD PTR [edx-0x7cff2712],edi
  41f5c4:	inc    DWORD PTR [ebx-0x52adca1b]
  41f5ca:	add    DWORD PTR [eax],0xffffffff
  41f5cd:	dec    DWORD PTR [edx-0x7cbe0245]
  41f5d3:	(bad)  
  41f5d4:	inc    DWORD PTR [ebx+0x76ab072e]
  41f5da:	add    ah,cl
  41f5dc:	add    bh,bh
  41f5de:	mov    bl,0x47
  41f5e0:	fbld   TBYTE PTR [esi-0x34]
  41f5e6:	mov    esp,0xffdd025e
  41f5eb:	dec    DWORD PTR [ecx-0x3324bd00]
  41f5f1:	or     DWORD PTR [eax],eax
  41f5f3:	add    ah,cl
  41f5f5:	add    dh,ch
  41f5f7:	sar    BYTE PTR [esi+0x6d],1
  41f5fa:	add    bh,bh
  41f5fc:	(bad)  
  41f5fd:	(bad)  
  41f5fe:	cmp    edi,DWORD PTR [edx]
  41f600:	cdq    
  41f601:	inc    WORD PTR [eax]
  41f604:	add    bh,bh
  41f606:	mov    esp,DWORD PTR [ebp+ebx*4-0x1d]
  41f60a:	(bad)  
  41f60b:	inc    DWORD PTR [ebx-0x427a4e01]
  41f611:	loopne 0x41f612
  41f613:	add    DWORD PTR [ebx+0x68e197ff],0x72
  41f61a:	inc    DWORD PTR [eax]
  41f61c:	inc    DWORD PTR [eax]
  41f61e:	test   DWORD PTR [ebp+edi*2+0x53],edi
  41f622:	add    DWORD PTR [ebx-0x170c0001],0x3c
  41f629:	push   ebp
  41f62a:	mov    edi,edi
  41f62c:	inc    DWORD PTR [ebx-0x57bce629]
  41f632:	add    BYTE PTR [eax],al
  41f634:	(bad)  
  41f635:	call   DWORD PTR [edx-0x3c]
  41f638:	jg     0x41f672
  41f63a:	inc    DWORD PTR [eax]
  41f63c:	add    DWORD PTR [eax],0x28
  41f63f:	mov    eax,0xff00e5f2
  41f644:	(bad)  
  41f645:	push   DWORD PTR [ecx-0x51]
  41f648:	or     eax,0xffffff13
  41f64d:	call   DWORD PTR [edi-0x7c645516]
  41f653:	add    DWORD PTR [ebx+0x5497d0ff],0xffffff94
  41f65a:	add    bh,bh
  41f65c:	(bad)  
  41f65d:	push   ebp
  41f65f:	add    BYTE PTR [bx+si],al
  41f662:	jmp    DWORD PTR [esi]
  41f664:	xor    bh,bh
  41f666:	cmp    edi,edi
  41f668:	jmp    ebp
  41f66a:	pop    ds
  41f66b:	push   edi
  41f66c:	add    bh,dh
  41f66e:	in     eax,dx
  41f66f:	(bad)  
  41f670:	(bad)  
  41f671:	inc    DWORD PTR [eax]
  41f673:	inc    DWORD PTR [ebp-0x1]
  41f676:	fs (bad) 
  41f678:	push   DWORD PTR ds:0xe3cc0eec
  41f67e:	push   ecx
  41f67f:	inc    DWORD PTR [eax]
  41f681:	inc    DWORD PTR [eax]
  41f683:	mov    al,cs:0xffff7eff
  41f689:	pop    ebx
  41f68a:	into   
  41f68b:	es (bad) 
  41f68d:	fscale 
  41f68f:	inc    DWORD PTR [eax]
  41f691:	add    bh,bh
  41f693:	ficom  WORD PTR [eax+eax*1]
  41f696:	sbb    edi,edi
  41f698:	add    BYTE PTR [ecx-0x1100d601],dl
  41f69e:	bswap  esp
  41f6a0:	add    bh,bh
  41f6a2:	add    dl,bl
  41f6a4:	pushf  
  41f6a5:	add    BYTE PTR [ebp+0x1ae5ffff],bl
  41f6ab:	cdq    
  41f6ac:	inc    DWORD PTR [edi-0x7c00ff38]
  41f6b2:	add    BYTE PTR [ecx],bh
  41f6b4:	mov    ebx,0xcc4783
  41f6b9:	inc    eax
  41f6ba:	mov    esp,0x204ccc74
  41f6bf:	add    BYTE PTR [ebx-0x1c063301],al
  41f6c5:	int3   
  41f6c6:	add    al,0x83
  41f6c8:	add    BYTE PTR [esi],ch
  41f6ca:	fidiv  DWORD PTR [ebp+0xd60400]
  41f6d0:	inc    DWORD PTR [eax]
  41f6d2:	and    DWORD PTR [ecx+0x6a],0xffffff83
  41f6d6:	and    eax,0xb5690000
  41f6db:	inc    ebx
  41f6dc:	dec    DWORD PTR [ebp-0x7c007c40]
  41f6e2:	jmp    DWORD PTR [esp+ebp*1-0x1]
  41f6e6:	mov    ah,0x83
  41f6e8:	inc    DWORD PTR [ecx-0x133adb4]
  41f6ee:	dec    edx
  41f6ef:	(bad)  
  41f6f0:	inc    DWORD PTR [eax]
  41f6f2:	call   FWORD PTR [edi-0x6c]
  41f6f5:	call   DWORD PTR [edi+edi*8]
  41f6f8:	and    DWORD PTR [ecx],0xffffffe6
  41f6fb:	and    eax,0xccd4b8ff
  41f700:	dec    esp
  41f702:	add    bh,cl
  41f704:	cmp    al,0x0
  41f706:	loopne 0x41f68b
  41f708:	call   FWORD PTR ds:0x99cc4f43
  41f70e:	cmp    bh,0xcc
  41f711:	int3   
  41f712:	call   DWORD PTR [eax]
  41f714:	ror    ah,0x1e
  41f717:	mov    DWORD PTR [eax],eax
  41f719:	mov    esi,0x39ff8dba
  41f71e:	pop    ecx
  41f71f:	dec    esp
  41f721:	add    bh,bh
  41f723:	(bad)  
  41f724:	fiadd  DWORD PTR [ebx+0x3e008390]
  41f72a:	dec    ebx
  41f72b:	inc    edi
  41f72c:	and    DWORD PTR [eax],0xffffffbb
  41f72f:	(bad)  
  41f730:	(bad)  
  41f731:	inc    DWORD PTR [eax]
  41f733:	xlat   BYTE PTR ds:[ebx]
  41f734:	and    eax,0xce00
  41f739:	pop    esi
  41f73a:	mov    dh,0xbc
  41f73c:	call   DWORD PTR ds:0xffccff8d
  41f742:	and    DWORD PTR [ecx-0x76990033],0x0
  41f749:	fistp  DWORD PTR [ebp-0x7ed300ba]
  41f74f:	(bad)  
  41f750:	dec    DWORD PTR [ecx-0x76e88301]
  41f756:	xchg   ebx,eax
  41f757:	add    bh,bh
  41f759:	cs retf 0xff38
  41f75d:	dec    esi
  41f75e:	dec    eax
  41f75f:	cmp    edi,0x0
  41f762:	dec    DWORD PTR [ebp+eiz*1-0x33ffaa01]
  41f769:	or     DWORD PTR [edi-0x52],ebx
  41f76c:	add    BYTE PTR [ebp+eiz*1-0xffff01],dh
  41f773:	pushf  
  41f774:	lahf   
  41f775:	add    ah,bl
  41f777:	cmp    edi,0xffffffcf
  41f77a:	mov    WORD PTR [eax],ds
  41f77c:	inc    eax
  41f77e:	cmp    bh,bh
  41f780:	inc    DWORD PTR [ebx-0x7657e601]
  41f786:	outs   dx,BYTE PTR ds:[esi]
  41f787:	(bad)  
  41f788:	dec    DWORD PTR [ecx-0x44]
  41f78b:	cmp    edi,edi
  41f78d:	xor    al,cl
  41f78f:	(bad)  
  41f790:	inc    DWORD PTR [eax]
  41f792:	int3   
  41f793:	(bad)  
  41f794:	or     al,0xff
  41f796:	fs cmp edi,0xffffffa2
  41f79a:	fild   WORD PTR [edi+edi*8]
  41f79d:	push   eax
  41f79e:	(bad)  
  41f79f:	inc    DWORD PTR [eax]
  41f7a1:	inc    DWORD PTR [eax]
  41f7a3:	mov    eax,0x1383ac
  41f7a8:	push   DWORD PTR [ecx+ecx*8-0x30]
  41f7ac:	add    BYTE PTR [esi],ah
  41f7ae:	lea    eax,[ebx-0x3a007677]
  41f7b4:	push   eax
  41f7b5:	add    bh,al
  41f7b7:	add    ah,cl
  41f7b9:	leave  
  41f7ba:	add    cl,BYTE PTR [edx-0x77]
  41f7bd:	sub    bh,BYTE PTR [ecx-0xff01]
  41f7c3:	cli    
  41f7c4:	sar    edi,cl
  41f7c6:	leave  
  41f7c7:	add    BYTE PTR [ebx-0x7668c299],al
  41f7cd:	mov    cl,0x63
  41f7cf:	add    BYTE PTR [eax],al
  41f7d1:	inc    DWORD PTR [ebx-0x1002027]
  41f7d7:	dec    esp
  41f7d9:	sbb    DWORD PTR [ebx],ebp
  41f7db:	jecxz  0x41f7dc
  41f7dd:	sub    ch,BYTE PTR [eax-0x1]
  41f7e3:	pop    eax
  41f7e4:	mov    edi,0x8300fc00
  41f7e9:	out    0x9e,eax
  41f7eb:	mov    al,0xff
  41f7ed:	mov    ah,0x85
  41f7ef:	(bad)  
  41f7f0:	dec    DWORD PTR [ecx-0x145b7d]
  41f7f6:	inc    ebp
  41f7f7:	inc    DWORD PTR [eax]
  41f7f9:	inc    edi
  41f7fa:	or     eax,0xc85bff1c
  41f7ff:	add    BYTE PTR [eax],al
  41f801:	add    BYTE PTR [eax],al
  41f803:	out    dx,eax
  41f804:	push   eax
  41f805:	dec    DWORD PTR [ebp+0x0]
  41f808:	(bad)  
  41f809:	cmp    edi,DWORD PTR [ebp+0x2]
  41f80c:	jmp    DWORD PTR [ebp+eax*4-0x1]
  41f810:	inc    DWORD PTR [eax]
  41f812:	call   DWORD PTR [ecx-0xb]
  41f815:	dec    DWORD PTR [ebx]
  41f817:	add    BYTE PTR [eax],al
  41f819:	dec    ebx
  41f81a:	or     BYTE PTR [esi],bh
  41f81c:	call   DWORD PTR [esi+ebx*8-0x1]
  41f820:	inc    DWORD PTR [eax]
  41f822:	add    BYTE PTR [ecx-0x3b],dl
  41f825:	add    BYTE PTR [ebx],ch
  41f827:	dec    esp
  41f829:	pop    es
  41f82a:	push   DWORD PTR [ecx]
  41f82c:	push   edx
  41f82e:	inc    esp
  41f82f:	or     esp,0x0
  41f832:	call   FWORD PTR [ebp-0x5b]
  41f835:	push   DWORD PTR [edx]
  41f837:	(bad)  
  41f838:	push   esi
  41f83a:	jb     0x41f7f1
  41f83c:	add    dh,dh
  41f83e:	cdq    
  41f83f:	mov    DWORD PTR [eax],eax
  41f841:	dec    esp
  41f843:	jo     0x41f87b
  41f845:	(bad)  
  41f846:	jns    0x41f847
  41f848:	call   FWORD PTR [ecx-0x71]
  41f84b:	test   edi,edi
  41f84d:	cwde   
  41f84e:	hlt    
  41f84f:	add    ah,cl
  41f851:	inc    DWORD PTR [eax]
  41f853:	(bad)  
  41f854:	jle    0x41f855
  41f856:	cmp    bh,0x83
  41f859:	scas   eax,DWORD PTR es:[edi]
  41f85a:	out    dx,al
  41f85b:	leave  
  41f85c:	int3   
  41f85d:	jnp    0x41f849
  41f85f:	cmp    edi,0xffffffff
  41f862:	add    BYTE PTR [edx-0x44],cl
  41f865:	call   FWORD PTR [ecx]
  41f867:	(bad)  
  41f868:	call   FWORD PTR [ecx+eax*8+0x42]
  41f86c:	add    BYTE PTR [ebx+0x20],cl
  41f86f:	add    bh,bh
  41f871:	mov    edi,edi
  41f873:	test   eax,0xe1ff15
  41f878:	inc    DWORD PTR [edi-0x36]
  41f87b:	cmp    eax,0x834528ff
  41f880:	inc    DWORD PTR [ebx+0x830683]
  41f886:	test   al,0xff
  41f888:	add    BYTE PTR [esi+0x4300d1f0],al
  41f88e:	adc    eax,0xff00ffff
  41f893:	leave  
  41f894:	push   ecx
  41f895:	mov    DWORD PTR [ebp+0x62928900],ebp
  41f89b:	(bad)  
  41f89c:	push   DWORD PTR [esi]
  41f89e:	pop    ecx
  41f89f:	inc    DWORD PTR [ebx-0x47870001]
  41f8a5:	dec    DWORD PTR [ebx]
  41f8a7:	(bad)  
  41f8a8:	jmp    DWORD PTR [edi-0x64]
  41f8ab:	int3   
  41f8ac:	add    BYTE PTR [edi-0x767ccf],al
  41f8b2:	(bad)  
  41f8b3:	mov    ebx,0xba897d
  41f8b8:	jmp    FWORD PTR [ecx+0x2d837679]
  41f8be:	sar    edi,1
  41f8c0:	add    bh,bh
  41f8c2:	or     esi,0xffffffd8
  41f8c5:	(bad)  
  41f8c6:	(bad)  
  41f8c8:	add    BYTE PTR [edi+edi*4],dl
  41f8cb:	jo     0x41f8cd
  41f8cd:	les    edx,FWORD PTR [edi-0x1]
  41f8d0:	cmp    edi,0xffffffff
  41f8d3:	mov    ah,0x29
  41f8d5:	add    al,dh
  41f8d7:	mov    DWORD PTR [eax],eax
  41f8d9:	adc    eax,0xf500effc
  41f8de:	loop   0x41f8df
  41f8e0:	dec    esp
  41f8e2:	mov    DWORD PTR [ebx+0x49],esi
  41f8e5:	(bad)  
  41f8e6:	clc    
  41f8e7:	mov    DWORD PTR [eax],eax
  41f8e9:	fs jle 0x41f94a
  41f8ec:	dec    ecx
  41f8ee:	jl     0x41f8f0
  41f8f0:	int3   
  41f8f1:	add    bh,bh
  41f8f3:	aam    0xb6
  41f8f5:	dec    ebx
  41f8f7:	(bad)  
  41f8f8:	call   DWORD PTR [edi+0x24839d60]
  41f8fe:	nop
  41f8ff:	(bad)  
  41f900:	inc    DWORD PTR [ebx+0x6738ff]
  41f906:	hlt    
  41f907:	(bad)  
  41f908:	push   DWORD PTR [ebp+0x19]
  41f90b:	adc    bh,bh
  41f90d:	test   al,0xea
  41f90f:	add    BYTE PTR [ebx-0x2819ff34],al
  41f915:	inc    DWORD PTR [edi+edi*8]
  41f918:	mov    DWORD PTR [edx-0x79339e92],ebx
  41f91e:	jne    0x41f91f
  41f920:	add    DWORD PTR [eax],0xffffffff
  41f923:	nop
  41f924:	push   0xff00dbff
  41f929:	push   edx
  41f92a:	inc    ebp
  41f92b:	jmp    0xfffd9130
  41f930:	add    BYTE PTR [eax],al
  41f932:	jmp    FWORD PTR [esi-0x43]
  41f935:	xor    DWORD PTR [esi-0x1],0xffffffff
  41f939:	mov    ds:0x55ff293d,al
  41f93e:	scas   al,BYTE PTR es:[edi]
  41f93f:	cmp    edi,0xffffffff
  41f942:	add    ebx,0x31
  41f945:	add    BYTE PTR [ecx-0x7b23007d],cl
  41f94b:	retf   
  41f94c:	add    BYTE PTR [eax-0x62],dl
  41f94f:	mov    edi,edi
  41f951:	(bad)  
  41f952:	call   DWORD PTR [edi-0x56ff26]
  41f958:	dec    edi
  41f95a:	into   
  41f95b:	loopne 0x41f95c
  41f95d:	test   ah,bl
  41f95f:	dec    DWORD PTR [ecx-0x7e027c34]
  41f965:	call   FWORD PTR [edx-0x6d040077]
  41f96b:	rol    DWORD PTR [ebx-0xa82c],1
  41f971:	mov    edi,edi
  41f973:	push   0x2fffba
  41f978:	inc    esi
  41f97a:	mov    ecx,0x218b002c
  41f97f:	add    bh,bh
  41f981:	add    BYTE PTR [eax],al
  41f983:	pop    eax
  41f984:	in     al,dx
  41f985:	(bad)  
  41f986:	jmp    0x41f954
  41f988:	call   DWORD PTR [ecx-0x45]
  41f98b:	pop    es
  41f98c:	int3   
  41f98d:	out    0x4e,eax
  41f98f:	or     esp,0x0
  41f992:	(bad)  
  41f993:	mov    ecx,0x83db00c8
  41f998:	cmp    DWORD PTR [esi],0x27
  41f99b:	clc    
  41f99c:	mov    DWORD PTR [eax-0x28],edi
  41f99f:	add    bh,bh
  41f9a1:	inc    DWORD PTR [eax]
  41f9a3:	ficom  WORD PTR [edi+0xff8eff]
  41f9a9:	adc    ch,BYTE PTR [eax-0x1d]
  41f9ac:	jmp    DWORD PTR [eax-0x2d]
  41f9af:	add    BYTE PTR [ebx+0x61b0ffff],al
  41f9b5:	and    DWORD PTR [eax],0xffffff89
  41f9b8:	add    BYTE PTR [esi+0x14],bl
  41f9bb:	sbb    edi,edi
  41f9bd:	pop    ebp
  41f9be:	inc    edx
  41f9bf:	(bad)  
  41f9c0:	inc    DWORD PTR [ebx-0xeaba01]
  41f9c6:	jge    0x41f9c7
  41f9c8:	add    BYTE PTR [edi+0x6c],dl
  41f9cb:	into   
  41f9cc:	add    BYTE PTR [edi+0x7],ah
  41f9cf:	inc    DWORD PTR [eax]
  41f9d1:	inc    DWORD PTR [eax]
  41f9d3:	lahf   
  41f9d4:	and    eax,0xffff54ff
  41f9d9:	imul   eax,DWORD PTR [ecx+0xd6700b0],0xff8989ff
  41f9e3:	dec    edx
  41f9e4:	lahf   
  41f9e5:	call   DWORD PTR [esi+0x4dc000cc]
  41f9eb:	sahf   
  41f9ec:	add    BYTE PTR [edx],ch
  41f9ee:	aas    
  41f9ef:	int3   
  41f9f0:	inc    DWORD PTR [ebx-0xb4401]
  41f9f6:	in     al,dx
  41f9f7:	mov    DWORD PTR [ebx-0x7ced8907],eax
  41f9fd:	mov    cl,al
  41f9ff:	inc    DWORD PTR [eax]
  41fa01:	add    bh,bh
  41fa03:	xor    al,0xab
  41fa05:	dec    DWORD PTR [edi-0x7d]
  41fa08:	call   esp
  41fa0a:	mov    ah,bl
  41fa0c:	int3   
  41fa0d:	dec    esp
  41fa0e:	or     al,0xff
  41fa10:	(bad)  
  41fa11:	inc    DWORD PTR [eax]
  41fa13:	jmp    0xff:0xbbff42
  41fa1a:	mov    al,0x84
  41fa1c:	(bad)  
  41fa1d:	jp     0x41fa99
  41fa1f:	(bad)  
  41fa20:	inc    DWORD PTR [ebx-0x3309b601]
  41fa26:	jp     0x41fa27
  41fa28:	and    esp,0x16
  41fa2b:	(bad)  
  41fa2d:	loope  0x41fa3b
  41fa2f:	(bad)  
  41fa30:	inc    DWORD PTR [ebx+0xd82d00]
  41fa36:	cmp    BYTE PTR [eax],al
  41fa38:	int3   
  41fa39:	xchg   esp,eax
  41fa3a:	dec    edi
  41fa3b:	sbb    eax,0xff3ac1ff
  41fa40:	(bad)  
  41fa41:	inc    DWORD PTR [eax]
  41fa43:	or     cl,BYTE PTR ds:0xff00b000
  41fa49:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41fa4b:	repnz call FWORD PTR [edi+0x7e]
  41fa4f:	int3   
  41fa50:	(bad)  
  41fa51:	inc    DWORD PTR [eax]
  41fa53:	arpl   WORD PTR [ecx],ax
  41fa55:	call   DWORD PTR ds:0xdf0ffff
  41fa5b:	fs int3 
  41fa5d:	inc    ecx
  41fa5e:	and    al,0xff
  41fa60:	mov    edi,edi
  41fa62:	add    BYTE PTR [eax],dl
  41fa64:	retf   0x2800
  41fa67:	int3   
  41fa68:	(bad)  
  41fa69:	js     0x41fa0b
  41fa6b:	jmp    DWORD PTR ss:[eax-0x50]
  41fa6f:	add    BYTE PTR [eax],al
  41fa71:	inc    DWORD PTR [eax]
  41fa73:	aad    0x6c
  41fa75:	int3   
  41fa76:	xor    bh,bh
  41fa78:	(bad)  
  41fa79:	mov    ebp,0xcdffa1a4
  41fa7e:	push   esp
  41fa7f:	(bad)  
  41fa80:	inc    DWORD PTR [eax]
  41fa82:	call   DWORD PTR [esi+0x6783d5]
  41fa88:	add    BYTE PTR [ebx+0x77],dl
  41fa8b:	imul   edi,edi,0x89834e0d
  41fa91:	add    bh,bh
  41fa93:	mov    ecx,esp
  41fa95:	or     DWORD PTR [edi+edi*8],0xffffff83
  41fa99:	nop
  41fa9a:	dec    edx
  41fa9b:	daa    
  41fa9c:	push   DWORD PTR [ecx-0xff37]
  41faa2:	and    DWORD PTR [edx+0xf58922],0x0
  41faa9:	mov    ch,0x4f
  41faab:	adc    eax,0xc39983
  41fab0:	inc    DWORD PTR [eax]
  41fab2:	add    BYTE PTR [edx],dh
  41fab4:	lds    eax,FWORD PTR [eax]
  41fab6:	outs   dx,DWORD PTR ds:[esi]
  41fab7:	add    BYTE PTR [eax],al
  41fab9:	(bad)  
  41faba:	jns    0x41fab5
  41fabc:	add    BYTE PTR [edx-0x25],dl
  41fabf:	add    BYTE PTR [eax],al
  41fac1:	dec    esp
  41fac3:	and    al,0x36
  41fac5:	call   ebp
  41fac7:	mov    DWORD PTR [ecx+0x1668ca],ecx
  41facd:	cdq    
  41face:	mov    ah,0xff
  41fad0:	(bad)  
  41fad1:	(bad)  
  41fad2:	call   esp
  41fad4:	pop    ebx
  41fad5:	int3   
  41fad6:	pop    ebx
  41fad7:	or     esp,0x30
  41fada:	inc    ebx
  41fadb:	mov    esp,0x837056ff
  41fae0:	add    bh,bh
  41fae2:	call   FWORD PTR [esi+0x82ffc4]
  41fae8:	jmp    FWORD PTR [ebp+0x6fff8e92]
  41faee:	clc    
  41faef:	(bad)  
  41faf0:	inc    DWORD PTR [eax]
  41faf2:	push   DWORD PTR [edx+0x7c008a]
  41faf8:	call   FWORD PTR [eax]
  41fafa:	aas    
  41fafb:	inc    ebp
  41fafc:	jmp    DWORD PTR [esi]
  41fafe:	lock cmp edi,0xffffff83
  41fb02:	xor    DWORD PTR [ebx-0x11],0xffffff83
  41fb06:	and    edi,edi
  41fb08:	(bad)  
  41fb09:	jg     0x41fb86
  41fb0b:	push   ds
  41fb0c:	call   FWORD PTR [eax-0x77]
  41fb0f:	add    BYTE PTR [eax],al
  41fb11:	dec    esp
  41fb13:	sub    DWORD PTR [ebx-0xd001],0xffe05c2c
  41fb1d:	jle    0x41fb60
  41fb1f:	cmp    edi,0xffffffff
  41fb22:	call   FWORD PTR [edx+0x3c]
  41fb25:	push   DWORD PTR [eax]
  41fb27:	dec    esp
  41fb29:	retf   0x7c76
  41fb2c:	call   FWORD PTR ds:0x83ff830c
  41fb32:	(bad)  
  41fb33:	cld    
  41fb34:	iret   
  41fb35:	dec    DWORD PTR [edx]
  41fb37:	(bad)  
  41fb38:	call   ebx
  41fb3a:	fidiv  WORD PTR [edx]
  41fb3c:	add    BYTE PTR [ebx-0x760016],cl
  41fb42:	and    DWORD PTR [ecx-0x7b],0xffffff83
  41fb46:	pop    esp
  41fb47:	add    DWORD PTR [eax],0x61
  41fb4a:	inc    edx
  41fb4b:	mov    dl,0xff
  41fb4d:	add    eax,0xff0000dc
  41fb52:	int3   
  41fb53:	popf   
  41fb54:	dec    esp
  41fb56:	inc    eax
  41fb57:	(bad)  
  41fb58:	push   DWORD PTR ds:0xff000505
  41fb5e:	es int3 
  41fb60:	inc    DWORD PTR [eax]
  41fb62:	add    BYTE PTR [edi-0x33f2ffda],bl
  41fb68:	call   DWORD PTR [esi]
  41fb6a:	dec    ecx
  41fb6b:	add    BYTE PTR [ebx+0xcc676d],0x0
  41fb72:	(bad)  
  41fb73:	(bad)  [esi-0x1]
  41fb76:	dec    edi
  41fb77:	inc    DWORD PTR [eax]
  41fb79:	or     al,0x85
  41fb7b:	lods   eax,DWORD PTR ds:[esi]
  41fb7c:	dec    DWORD PTR [eax]
  41fb7e:	mov    esp,ecx
  41fb80:	inc    DWORD PTR [ebx+0x34dfff]
  41fb86:	mov    edx,0x1febffff
  41fb8b:	test   bh,bh
  41fb8d:	not    ch
  41fb8f:	inc    DWORD PTR [ebx+0x6dd20000]
  41fb95:	call   FWORD PTR [esi+0x3b7800ff]
  41fb9b:	je     0x41fb9c
  41fb9d:	inc    ebp
  41fb9e:	iret   
  41fb9f:	add    bh,bh
  41fba1:	int3   
  41fba2:	jmp    edi
  41fba4:	add    eax,0x8300af00
  41fba9:	repnz std 
  41fbab:	lock add BYTE PTR [edi-0xff00e2],bh
  41fbb2:	int3   
  41fbb3:	inc    edx
  41fbb4:	(bad)  
  41fbb6:	sbb    al,0x0
  41fbb8:	add    BYTE PTR [esi+0x75],bl
  41fbbb:	cld    
  41fbbc:	inc    DWORD PTR [ecx]
  41fbbe:	jo     0x41fbbf
  41fbc0:	add    DWORD PTR [ebx+0x3e6d83],0xffffffa8
  41fbc7:	(bad)  
  41fbc8:	dec    DWORD PTR [edx]
  41fbca:	ins    BYTE PTR es:[edi],dx
  41fbcb:	cmp    BYTE PTR [eax],al
  41fbcd:	fcmovb st,st(5)
  41fbcf:	(bad)  
  41fbd0:	inc    DWORD PTR [eax]
  41fbd2:	(bad)  
  41fbd3:	mov    ebx,0xf6ccd8
  41fbd8:	int3   
  41fbd9:	test   ebx,ecx
  41fbdb:	ud0    ebx,DWORD PTR [esi-0x7c71]
  41fbe2:	add    BYTE PTR [edi+0x2b83fc],dh
  41fbe8:	add    BYTE PTR [edi],bl
  41fbea:	neg    BYTE PTR ds:0xff4bd1ff
  41fbf0:	inc    DWORD PTR [eax]
  41fbf2:	inc    DWORD PTR [edx]
  41fbf4:	iret   
  41fbf5:	jmp    DWORD PTR [esi]
  41fbf7:	add    bh,bh
  41fbf9:	xor    eax,0x1efff2d0
  41fbfe:	xchg   ebp,eax
  41fbff:	(bad)  
  41fc00:	inc    DWORD PTR [eax]
  41fc02:	int3   
  41fc03:	(bad)  
  41fc04:	repz mov eax,ebp
  41fc07:	mov    edi,edi
  41fc09:	cwde   
  41fc0a:	mov    dh,0xe4
  41fc0c:	xor    DWORD PTR [edx+0x0],0xffffff89
  41fc10:	add    bh,bh
  41fc12:	add    BYTE PTR [esi-0xa076bb],bl
  41fc18:	add    BYTE PTR [ecx],ch
  41fc1a:	and    BYTE PTR [eax+eax*1+0xffdfba],0xff
  41fc22:	jmp    esi
  41fc24:	push   ebp
  41fc25:	add    BYTE PTR [esi],al
  41fc27:	add    BYTE PTR [ecx-0x79ef7e],cl
  41fc2d:	(bad)  [ebx-0x3301]
  41fc33:	sar    BYTE PTR [edx-0x7c002b01],0x6d
  41fc3a:	sar    DWORD PTR [ecx],cl
  41fc3c:	inc    ebx
  41fc3e:	or     al,0xff
  41fc40:	add    bh,bh
  41fc42:	sub    DWORD PTR [esi+0x60ffa7],0xffffffff
  41fc49:	addr16 iret 
  41fc4b:	fs (bad) 
  41fc4d:	mov    edx,0xff00ff93
  41fc52:	mov    eax,esp
  41fc54:	iret   
  41fc55:	(bad)  
  41fc56:	fxch   st(4)
  41fc58:	dec    DWORD PTR [ecx]
  41fc5a:	(bad)  
  41fc5b:	fwait
  41fc5c:	dec    DWORD PTR [ebp+ebx*1-0x1]
  41fc60:	int3   
  41fc61:	dec    DWORD PTR [ecx+0x68ffb748]
  41fc67:	mov    edi,edi
  41fc69:	ret    
  41fc6a:	push   ds
  41fc6b:	sbb    al,0x0
  41fc6d:	mov    al,0x79
  41fc6f:	inc    DWORD PTR [eax]
  41fc71:	cmp    edi,0xffffffd1
  41fc74:	sahf   
  41fc75:	call   DWORD PTR [eax-0x1edc0100]
  41fc7b:	popf   
  41fc7c:	add    DWORD PTR [ebx+0xff4c],0x0
  41fc83:	es je  0x41fc85
  41fc86:	cmc    
  41fc87:	int3   
  41fc88:	sub    DWORD PTR [ecx],0xffffffbb
  41fc8b:	mov    ds:0xffea3bff,al
  41fc90:	int3   
  41fc91:	(bad)  
  41fc92:	dec    DWORD PTR [esi+0x44]
  41fc95:	add    BYTE PTR [ecx-0x34],bl
  41fc98:	and    DWORD PTR [eax],0xffffff94
  41fc9b:	nop
  41fc9c:	call   DWORD PTR [esi+edx*2]
  41fc9f:	add    bh,bh
  41fca1:	add    bh,bh
  41fca3:	push   ecx
  41fca4:	popa   
  41fca5:	push   ebp
  41fca7:	add    DWORD PTR [eax],0x4
  41fcaa:	into   
  41fcab:	xchg   ebp,eax
  41fcac:	and    esi,0x66
  41fcaf:	cmp    edi,0x0
  41fcb2:	dec    DWORD PTR [ecx+0x67]
  41fcb5:	mov    DWORD PTR [eax+eax*1-0x11256200],esp
  41fcbc:	(bad)  
  41fcbd:	mov    edx,0xcc8300e0
  41fcc2:	int3   
  41fcc3:	sub    BYTE PTR [ebx],bh
  41fcc5:	sub    esi,0xffffffcc
  41fcc8:	push   DWORD PTR [edi]
  41fcca:	and    BYTE PTR [ebx-0x7c6e8401],ch
  41fcd0:	add    BYTE PTR [eax],al
  41fcd2:	add    BYTE PTR [esi+0x25],ah
  41fcd5:	add    BYTE PTR [esi+0x70caccff],dh
  41fcdb:	sub    al,0xcc
  41fcdd:	test   eax,0x83ffff95
  41fce2:	jmp    DWORD PTR [edi]
  41fce4:	stc    
  41fce5:	jmp    DWORD PTR [esi-0x6db50001]
  41fceb:	jbe    0x41fc70
  41fced:	mov    bl,0xfd
  41fcef:	(bad)  
  41fcf0:	inc    DWORD PTR [eax]
  41fcf2:	add    BYTE PTR [edx],bh
  41fcf4:	jae    0x41fcf5
  41fcf6:	or     bh,bh
  41fcf8:	int3   
  41fcf9:	xor    ah,BYTE PTR [edx]
  41fcfb:	call   0x7e8bff
  41fd00:	inc    DWORD PTR [ebx-0x7c8afe00]
  41fd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd07:	inc    DWORD PTR [ebx+0xb313f2]
  41fd0d:	jecxz  0x41fca9
  41fd0f:	int3   
  41fd10:	or     esp,0x0
  41fd13:	jb     0x41fcce
  41fd15:	push   DWORD PTR [edi+0x114a00ff]
  41fd1b:	or     al,0xff
  41fd1d:	mov    al,0x1e
  41fd1f:	dec    DWORD PTR [ecx+0x4fe600ff]
  41fd25:	add    BYTE PTR [edx-0x7d],ch
  41fd28:	mov    ebx,ebx
  41fd2a:	xchg   DWORD PTR [edx],edx
  41fd2c:	add    al,ch
  41fd2e:	int3   
  41fd2f:	inc    DWORD PTR [eax]
  41fd31:	(bad)  
  41fd32:	(bad)  
  41fd33:	mov    esp,0xff88ff6e
  41fd38:	call   edi
  41fd3a:	imul   edx,ebp,0x83c72300
  41fd40:	(bad)  
  41fd41:	(bad)  
  41fd42:	dec    eax
  41fd44:	pop    ss
  41fd45:	(bad)  
  41fd46:	clc    
  41fd47:	add    ah,cl
  41fd49:	repnz nop
  41fd4b:	adc    al,0x0
  41fd4d:	cmp    esp,ebp
  41fd4f:	(bad)  
  41fd50:	dec    DWORD PTR [ecx-0xa28e01]
  41fd56:	xchg   edi,eax
  41fd57:	cmp    edi,0x50
  41fd5a:	dec    eax
  41fd5b:	inc    ebx
  41fd5c:	cmp    DWORD PTR [edi],0xfffffffa
  41fd5f:	(bad)  
  41fd60:	(bad)  
  41fd61:	inc    DWORD PTR [eax]
  41fd63:	cld    
  41fd64:	mov    eax,0xffffcc83
  41fd69:	mov    dh,0x5f
  41fd6b:	es int3 
  41fd6d:	add    eax,0xccffff4b
  41fd72:	add    BYTE PTR [esi-0x34],cl
  41fd75:	sub    edi,0x0
  41fd78:	call   FWORD PTR [eax+0x17ff0c81]
  41fd7e:	data16 add bh,bh
  41fd81:	inc    DWORD PTR [eax]
  41fd83:	and    edi,DWORD PTR [ebx+0x0]
  41fd86:	cmp    ecx,esp
  41fd88:	call   FWORD PTR [eax-0x27]
  41fd8b:	jmp    0x41fd59
  41fd8d:	mov    al,ds:0x836f
  41fd92:	add    dh,bl
  41fd94:	jecxz  0x41fd1f
  41fd96:	lods   eax,DWORD PTR ds:[esi]
  41fd97:	add    bh,bh
  41fd99:	pushf  
  41fd9a:	adc    cl,bl
  41fd9c:	sub    DWORD PTR [ebx-0x39],0xffffffff
  41fda0:	(bad)  
  41fda1:	inc    DWORD PTR [ebx-0x5e00ef30]
  41fda7:	add    DWORD PTR [ebx-0x12d4a9],0xffffff81
  41fdae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdaf:	mov    edi,edi
  41fdb1:	inc    DWORD PTR [eax]
  41fdb3:	xor    dl,dl
  41fdb5:	call   FWORD PTR [ecx]
  41fdb7:	(bad)  
  41fdb8:	call   DWORD PTR [eax+edi*1]
  41fdbb:	popf   
  41fdbc:	int3   
  41fdbd:	sahf   
  41fdbe:	loop   0x41fdc0
  41fdc0:	add    ah,cl
  41fdc2:	(bad)  
  41fdc3:	jmp    0x2ff:0x83fd00f0
  41fdca:	imul   eax,edx,0x111900
  41fdd0:	add    DWORD PTR [eax],0xffffffff
  41fdd3:	sub    BYTE PTR [ecx],bh
  41fdd5:	jmp    eax
  41fdd7:	inc    DWORD PTR [eax]
  41fdd9:	pop    ds
  41fdda:	add    DWORD PTR [eax],esp
  41fddc:	sbb    DWORD PTR [ebx-0xff0050],0xffffff83
  41fde3:	mov    dl,0x14
  41fde5:	add    cl,bl
  41fde7:	int3   
  41fde8:	jmp    FWORD PTR [edi+0x7d]
  41fdeb:	xchg   edi,eax
  41fdec:	int3   
  41fded:	mov    esp,0xff00ff14
  41fdf2:	int3   
  41fdf3:	shl    cl,1
  41fdf5:	or     DWORD PTR [edx+0x201f83ff],0x5f
  41fdfc:	mov    DWORD PTR [esi+edi*8],esp
  41fdff:	(bad)  
  41fe00:	(bad)  
  41fe01:	(bad)  
  41fe02:	call   FWORD PTR [eax]
  41fe04:	(bad)  
  41fe05:	call   FWORD PTR [esi-0x1]
  41fe08:	mov    DWORD PTR [ecx-0x6c338026],ecx
  41fe0e:	(bad)  
  41fe10:	(bad)  
  41fe11:	inc    DWORD PTR [eax]
  41fe13:	cmp    ch,BYTE PTR [eax]
  41fe15:	cmp    DWORD PTR [edi+edi*8-0x7d],0xffffff86
  41fe1a:	mov    edx,0xb8800e3
  41fe1f:	int3   
  41fe20:	dec    DWORD PTR [ecx+0x68a3cc]
  41fe26:	lahf   
  41fe27:	inc    DWORD PTR [ebx-0x33ebeac9]
  41fe2d:	push   ss
  41fe2e:	adc    DWORD PTR [ecx+0x49ff8300],ecx
  41fe34:	sbb    bh,bh
  41fe36:	pop    esi
  41fe37:	inc    DWORD PTR [eax]
  41fe39:	jbe    0x41fdd4
  41fe3b:	fild   DWORD PTR [eax]
  41fe3d:	cmp    DWORD PTR [edx],ebp
  41fe3f:	add    bh,bh
  41fe41:	dec    esp
  41fe43:	xlat   BYTE PTR ds:[ebx]
  41fe44:	add    BYTE PTR [ebx-0x11000086],0x34
  41fe4b:	test   DWORD PTR [ebx-0x7600cb8f],eax
  41fe51:	(bad)  
  41fe52:	jmp    DWORD PTR [ecx]
  41fe54:	xchg   ebx,eax
  41fe55:	add    dh,ah
  41fe57:	(bad)  
  41fe58:	(bad)  
  41fe59:	jle    0x41fde4
  41fe5b:	add    eax,0x82f2ff
  41fe60:	(bad)  
  41fe61:	(bad)  
  41fe62:	inc    ebp
  41fe64:	call   0xfe61:0xffff4f83
  41fe6b:	sub    al,0xff
  41fe6d:	add    DWORD PTR [edi-0x7d],ecx
  41fe70:	(bad)  
  41fe71:	(bad)  
  41fe72:	dec    DWORD PTR [ebx-0x33]
  41fe75:	add    BYTE PTR [edx],dh
  41fe77:	inc    DWORD PTR [ebx+0xbfe87c]
  41fe7d:	xor    dl,BYTE PTR [ebp-0x1]
  41fe80:	inc    DWORD PTR [eax]
  41fe82:	(bad)  
  41fe83:	fisttp DWORD PTR [eax]
  41fe85:	jmp    DWORD PTR [ecx]
  41fe87:	mov    edi,edi
  41fe89:	popa   
  41fe8a:	jnp    0x41fe42
  41fe8c:	inc    DWORD PTR [edx]
  41fe8e:	push   edi
  41fe8f:	add    BYTE PTR [ebx+0x6cb3ffff],al
  41fe95:	mov    DWORD PTR [edi-0x1],esp
  41fe98:	add    BYTE PTR [ecx],bl
  41fe9a:	xor    BYTE PTR [ebx-0x7c90b300],dh
  41fea0:	or     esp,0xffffffff
  41fea3:	js     0x41feb5
  41fea5:	jmp    esi
  41fea7:	add    ah,cl
  41fea9:	jmp    0xff1f:0x1fff9461
  41feb0:	inc    DWORD PTR [eax]
  41feb2:	mov    esi,esp
  41feb4:	or     bh,bh
  41feb6:	or     al,BYTE PTR [eax]
  41feb8:	inc    DWORD PTR [ebp-0x1e]
  41febb:	or     cl,ah
  41febd:	xchg   edi,eax
  41febe:	push   ebp
  41febf:	add    bh,bh
  41fec1:	(bad)  
  41fec2:	call   FWORD PTR [ecx+0x7f]
  41fec5:	call   DWORD PTR [edx]
  41fec7:	(bad)  
  41fec8:	push   DWORD PTR [ecx-0x3d]
  41fecb:	les    eax,FWORD PTR [ebx-0xff5cf1]
  41fed1:	inc    DWORD PTR [eax]
  41fed3:	jo     0x41fecf
  41fed5:	sub    DWORD PTR [ecx-0x1],0xffffffff
  41fed9:	jmp    0x1d:0xe8fff81d
  41fee0:	add    BYTE PTR [ecx-0x44d501],cl
  41fee6:	imul   edi,edi,0xffffffff
  41fee9:	das    
  41feea:	aas    
  41feeb:	ret    
  41feec:	(bad)  
  41feed:	fld    QWORD PTR [edx-0x77]
  41fef0:	(bad)  
  41fef1:	dec    DWORD PTR [ecx-0x1c33de2f]
  41fef7:	int3   
  41fef8:	sbb    DWORD PTR [ecx-0x43764065],0x27
  41feff:	add    DWORD PTR [eax],0xffffffff
  41ff02:	adc    esi,0xf
  41ff05:	or     DWORD PTR [ebp-0x4e4e0001],0xffffff89
  41ff0c:	sbb    DWORD PTR [ebx+0xffff17],0x0
  41ff13:	addr16 jmp 0x141daa2
  41ff19:	(bad)  
  41ff1a:	cdq    
  41ff1b:	mov    DWORD PTR [eax],eax
  41ff1d:	cli    
  41ff1e:	jae    0x9640ff24
  41ff24:	jne    0x41ff25
  41ff26:	mov    ds:0xd0560000,al
  41ff2b:	jo     0x41ff2c
  41ff2d:	sub    BYTE PTR es:[ecx-0x3100ff7d],cl
  41ff34:	jns    0x41ff35
  41ff36:	add    al,0x0
  41ff38:	add    BYTE PTR [esi+0x36],bl
  41ff3b:	mov    dh,0xff
  41ff3d:	dec    esp
  41ff3e:	jne    0x41ff3f
  41ff40:	inc    DWORD PTR [eax]
  41ff42:	call   FWORD PTR [edx]
  41ff44:	sbb    bh,bh
  41ff46:	mov    dl,0xff
  41ff48:	add    BYTE PTR [ecx],ch
  41ff4a:	mov    ebx,0x5150ffed
  41ff4f:	add    bh,bh
  41ff51:	inc    DWORD PTR [ebx-0x420035ca]
  41ff57:	int3   
  41ff58:	add    ch,cl
  41ff5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff5b:	inc    ecx
  41ff5c:	add    BYTE PTR [edi],bl
  41ff5e:	cmc    
  41ff5f:	(bad)  
  41ff60:	dec    esp
  41ff62:	(bad)  
  41ff63:	jg     0x41ff0e
  41ff65:	int3   
  41ff66:	push   eax
  41ff67:	mov    edi,edi
  41ff69:	cmp    DWORD PTR [ecx+0x67a2cc6f],esp
  41ff6f:	inc    DWORD PTR [eax]
  41ff71:	inc    DWORD PTR [eax]
  41ff73:	in     eax,dx
  41ff74:	ret    
  41ff75:	(bad)  
  41ff76:	jmp    0x785c887b
  41ff7b:	les    eax,FWORD PTR [eax]
  41ff7d:	sti    
  41ff7e:	adc    bh,bh
  41ff80:	dec    esp
  41ff82:	jmp    DWORD PTR [edi-0x6d0096]
  41ff88:	dec    DWORD PTR [ebx+0x4983569d]
  41ff8e:	pop    edx
  41ff8f:	inc    DWORD PTR [ebx+0x308cff00]
  41ff95:	inc    DWORD PTR [esi+0x3bfdcccc]
  41ff9b:	adc    eax,0x118c83
  41ffa0:	(bad)  
  41ffa1:	(bad)  
  41ffa2:	jmp    FWORD PTR [ebx+0x6e]
  41ffa5:	add    BYTE PTR [ecx+ecx*4],ah
  41ffa8:	adc    DWORD PTR [edi-0x1e005cb0],0xffffff85
  41ffaf:	(bad)  
  41ffb0:	(bad)  
  41ffb1:	inc    DWORD PTR [eax]
  41ffb3:	xchg   edi,eax
  41ffb4:	mov    bl,0x89
  41ffb6:	adc    DWORD PTR [eax],eax
  41ffb8:	mov    DWORD PTR ds:0x61ff6e39,edx
  41ffbe:	in     eax,0xff
  41ffc0:	(bad)  
  41ffc1:	(bad)  
  41ffc2:	inc    DWORD PTR [esi]
  41ffc4:	nop
  41ffc5:	inc    DWORD PTR [esi+0x45088983]
  41ffcb:	inc    edx
  41ffcc:	inc    DWORD PTR [eax]
  41ffce:	xor    eax,DWORD PTR [eax]
  41ffd0:	(bad)  
  41ffd1:	(bad)  
  41ffd2:	inc    esp
  41ffd4:	mov    cs,WORD PTR [ecx+0x4fffffbb]
  41ffda:	sahf   
  41ffdb:	inc    eax
  41ffdc:	add    dh,dl
  41ffde:	(bad)  
  41ffdf:	dec    esp
  41ffe1:	mov    edi,edi
  41ffe3:	cmp    bh,0xff
  41ffe6:	hlt    
  41ffe7:	int3   
  41ffe8:	cmp    DWORD PTR [eax+0x5083afeb],0xffffffcb
  41ffef:	inc    DWORD PTR [ebx-0x2b6d7d00]
  41fff5:	int3   
  41fff6:	gs int3 
  41fff8:	add    BYTE PTR [edx-0x20],al
  41fffb:	jo     0x41ff86
  41fffd:	pop    ss
  41fffe:	xchg   edx,eax
  41ffff:	(bad)  
  420000:	inc    DWORD PTR [ebx-0x762ce901]
  420006:	sbb    al,0xff
  420008:	add    edx,0xffffff91
  42000b:	pop    esp
  42000c:	add    DWORD PTR [edx-0x55],0xffffffff
  420010:	inc    DWORD PTR [eax]
  420012:	call   FWORD PTR [ecx+0x62008b]
  420018:	call   FWORD PTR [ecx+0xb]
  42001b:	and    edi,edi
  42001d:	dec    edi
  42001e:	push   esi
  42001f:	(bad)  
  420020:	(bad)  
  420021:	(bad)  
  420022:	jmp    FWORD PTR [edi]
  420024:	mov    dh,0xff
  420026:	pop    esp
  420027:	add    DWORD PTR [ebx-0x702a4e],0x6e
  42002e:	xor    al,BYTE PTR [eax]
  420030:	inc    DWORD PTR [eax]
  420032:	add    ch,bl
  420034:	fiadd  DWORD PTR [ebx-0x2076007f]
  42003a:	jb     0x42002a
  42003c:	inc    DWORD PTR [ebx-0x1f]
  42003f:	add    bh,bh
  420041:	mov    DWORD PTR [ebx-0x630074d7],eax
  420047:	inc    DWORD PTR [ebx-0x33c26ef2]
  42004d:	int3   
  42004e:	retf   0x83ff
  420051:	mov    DWORD PTR [eax],eax
  420053:	mov    bl,0xa3
  420055:	push   DWORD PTR [ebx+eax*4-0x34]
  420059:	jl     0x4200cb
  42005b:	in     eax,dx
  42005c:	jmp    FWORD PTR [ecx-0x76000026]
  420062:	jmp    DWORD PTR [esi]
  420064:	or     eax,DWORD PTR [eax]
  420066:	dec    ebx
  420067:	add    bh,bh
  420069:	jmp    0xba:0xe0ff4c05
  420070:	cmp    edi,0xffffffcc
  420073:	add    ebx,esp
  420075:	sbb    DWORD PTR [eax+eax*1],0x0
  420079:	popa   
  42007a:	mov    ah,0x55
  42007c:	call   FWORD PTR ds:0xff00ffdd
  420082:	add    BYTE PTR [edi],al
  420084:	js     0x420085
  420086:	adc    eax,0xf04c00ff
  42008b:	ret    
  42008c:	add    BYTE PTR [ecx+0xfffff2],bh
  420092:	add    BYTE PTR [ebx],ah
  420094:	xchg   edx,eax
  420095:	int3   
  420096:	stos   BYTE PTR es:[edi],al
  420097:	inc    DWORD PTR [eax]
  420099:	dec    eax
  42009a:	dec    ecx
  42009b:	mov    eax,DWORD PTR [eax]
  42009d:	push   edx
  42009e:	pop    ecx
  42009f:	(bad)  
  4200a0:	inc    DWORD PTR [eax]
  4200a2:	(bad)  
  4200a3:	jnp    0x4200a9
  4200a5:	add    cl,dl
  4200a7:	inc    DWORD PTR [eax]
  4200a9:	out    0x6c,al
  4200ab:	cmp    edi,0x89ffcb1c
  4200b1:	cmp    edi,0xffffff8e
  4200b4:	dec    WORD PTR ds:0x661f00ff
  4200bb:	mov    al,0xcc
  4200bd:	sub    BYTE PTR [ebp+0xff0000],dl
  4200c3:	mov    edx,DWORD PTR [edx+0x0]
  4200c6:	retf   0xff00
  4200c9:	shl    BYTE PTR [ecx+ebx*8],0xff
  4200cd:	xor    eax,0xff83ff24
  4200d2:	mov    DWORD PTR [edi-0x12],ebx
  4200d5:	dec    ebx
  4200d7:	int3   
  4200d8:	adc    DWORD PTR [ebp+0xc833cdd],0xffffff97
  4200df:	inc    DWORD PTR [eax]
  4200e1:	dec    DWORD PTR [ecx+0x7bff132d]
  4200e7:	inc    DWORD PTR [eax]
  4200e9:	cld    
  4200ea:	xor    bh,BYTE PTR [eax-0xe6c7d]
  4200f0:	add    bh,bh
  4200f2:	add    ch,bl
  4200f4:	pop    ebx
  4200f5:	inc    esp
  4200f7:	inc    DWORD PTR [eax]
  4200f9:	aam    0xb2
  4200fb:	mov    cl,0x0
  4200fd:	(bad)  
  4200fe:	inc    DWORD PTR es:[eax]
  420101:	add    BYTE PTR [eax],al
  420103:	xchg   DWORD PTR [edi+0x4d83],ebx
  420109:	nop
  42010a:	dec    edi
  42010b:	clc    
  42010c:	(bad)  
  42010d:	jnp    0x4200f3
  42010f:	(bad)  
  420110:	inc    DWORD PTR [eax]
  420112:	add    ch,bl
  420114:	dec    DWORD PTR [ecx-0x5133ff85]
  42011a:	xchg   esp,eax
  42011b:	xchg   ebx,eax
  42011c:	add    BYTE PTR ds:0xccffff80,al
  420122:	push   DWORD PTR [ecx]
  420124:	fimul  DWORD PTR [ecx+0x389ffdc]
  42012a:	pushf  
  42012b:	push   ds
  42012c:	jmp    FWORD PTR [esi]
  42012e:	leave  
  42012f:	int3   
  420130:	add    bh,bh
  420132:	add    BYTE PTR [ebx+0x5b],ah
  420135:	add    BYTE PTR [edx-0x43740077],dh
  42013b:	iret   
  42013c:	mov    ecx,edx
  42013e:	(bad)  
  420140:	cmp    edi,0xffffffff
  420143:	(bad)  
  420144:	mov    es,WORD PTR [eax]
  420146:	pusha  
  420147:	inc    DWORD PTR [eax]
  420149:	aaa    
  42014a:	mov    ebp,0x43f4ffb8
  42014f:	(bad)  
  420150:	inc    DWORD PTR [eax]
  420152:	cmp    DWORD PTR [edx+eax*1],0x0
  420156:	pop    es
  420157:	(bad)  
  420158:	dec    eax
  42015a:	cmp    eax,DWORD PTR [edx+0xbca5ff]
  420160:	dec    esp
  420162:	int3   
  420163:	pushf  
  420164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420165:	mov    esp,edx
  420167:	add    DWORD PTR [eax],0xffffff8b
  42016a:	mov    esi,0x143acc1b
  42016f:	inc    DWORD PTR [eax]
  420171:	(bad)  
  420172:	(bad)  
  420173:	sti    
  420174:	ror    ah,cl
  420176:	mov    ds:0x269fffff,eax
  42017b:	mov    ebx,0x89e78100
  420180:	add    BYTE PTR [eax],al
  420182:	int3   
  420183:	int    0x17
  420185:	add    BYTE PTR [ebp-0x678f7c77],al
  42018b:	sub    al,0xff
  42018d:	add    al,0x24
  42018f:	inc    DWORD PTR [eax]
  420191:	inc    DWORD PTR [ebx-0x24ffcfdd]
  420197:	add    ah,cl
  420199:	jne    0x420190
  42019b:	leave  
  42019c:	add    al,cl
  42019e:	test   edi,edi
  4201a0:	inc    DWORD PTR [eax]
  4201a2:	push   DWORD PTR [esi]
  4201a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201a5:	add    BYTE PTR ds:0x81438300,bl
  4201ab:	aaa    
  4201ac:	call   DWORD PTR [esi]
  4201ae:	mov    eax,0x890000ff
  4201b3:	mov    WORD PTR [ebx+eax*4+0x75],ss
  4201b7:	(bad)  
  4201b8:	(bad)  
  4201b9:	jmp    0xbf0ed73c
  4201be:	popf   
  4201bf:	cmp    edi,0x0
  4201c2:	jmp    DWORD PTR [ebp+0x3d006e]
  4201c8:	push   ecx
  4201ca:	mov    ?,WORD PTR [ebx]
  4201cc:	(bad)  
  4201cd:	in     eax,dx
  4201ce:	fild   WORD PTR [eax]
  4201d0:	(bad)  
  4201d1:	inc    DWORD PTR [ebx-0x5600af49]
  4201d7:	inc    DWORD PTR [eax]
  4201d9:	in     eax,0x81
  4201db:	mov    al,0xff
  4201dd:	test   DWORD PTR [edx+0x0],esp
  4201e0:	(bad)  
  4201e1:	inc    DWORD PTR [eax]
  4201e3:	arpl   bx,cx
  4201e5:	(bad)  
  4201e6:	ds add bh,bh
  4201e9:	push   edi
  4201ea:	or     DWORD PTR [edi+edi*8],edi
  4201ed:	and    BYTE PTR [ecx],bl
  4201ef:	inc    DWORD PTR [eax]
  4201f1:	add    BYTE PTR [ecx-0x7ff5a24],cl
  4201f7:	add    BYTE PTR [eax],al
  4201f9:	jmp    0x4201d9
  4201fb:	outs   dx,DWORD PTR ds:[esi]
  4201fc:	call   FWORD PTR [edi]
  4201fe:	adc    bh,bh
  420200:	add    DWORD PTR [eax],0xffffffcc
  420203:	(bad)  
  420204:	jmp    0x420205
  420206:	xchg   esi,eax
  420207:	inc    DWORD PTR [eax]
  420209:	sub    cl,BYTE PTR [eax+0x6dd3834b]
  42020f:	add    ah,cl
  420211:	dec    DWORD PTR [ecx-0x18ff5171]
  420217:	add    bh,bh
  420219:	fnsave ds:[eax-0x1]
  42021d:	iret   
  42021e:	xor    bh,bh
  420220:	inc    DWORD PTR [eax]
  420222:	or     DWORD PTR ds:0xcc53898c,0xffffffff
  420229:	dec    edi
  42022a:	dec    ecx
  42022b:	adc    eax,0xff39b683
  420230:	int3   
  420231:	add    bh,bh
  420233:	add    BYTE PTR ds:0xffd8ff,al
  420239:	push   edx
  42023a:	aad    0x70
  42023c:	call   DWORD PTR [esi-0x54]
  42023f:	dec    esp
  420241:	dec    DWORD PTR [ecx+0x7ff25dd]
  420247:	inc    DWORD PTR [ebx+0xe3e63b]
  42024d:	in     al,0x7d
  42024f:	inc    DWORD PTR [eax]
  420251:	int3   
  420252:	inc    DWORD PTR [ecx+0x2e]
  420255:	add    ah,dh
  420257:	(bad)  
  420258:	dec    DWORD PTR [eax]
  42025a:	pop    di
  42025c:	add    dl,ch
  42025e:	push   0xffffffff
  420260:	add    bh,bh
  420262:	inc    DWORD PTR [ecx]
  420264:	stos   DWORD PTR es:[edi],eax
  420265:	mov    ebp,edx
  420267:	add    BYTE PTR [eax],al
  420269:	rol    DWORD PTR [edi+edi*1-0x3343aa01],cl
  420270:	add    bh,bh
  420272:	add    BYTE PTR [ebx],dl
  420274:	push   edx
  420275:	add    BYTE PTR [ebp-0x1],ah
  420278:	add    cl,bl
  42027a:	dec    esi
  42027b:	mov    dl,0xff
  42027d:	xchg   DWORD PTR ds:[eax],eax
  420280:	mov    DWORD PTR [eax],eax
  420282:	inc    DWORD PTR [ebp+edx*4-0x1]
  420286:	mov    esp,0x8810083
  42028b:	into   
  42028c:	call   DWORD PTR [edx+ebx*2+0x0]
  420290:	dec    esp
  420292:	adc    esp,0xffffffca
  420295:	push   DWORD PTR [esi]
  420297:	add    BYTE PTR [eax],al
  420299:	pushf  
  42029a:	cwde   
  42029b:	adc    DWORD PTR [eax],eax
  42029d:	xor    bh,BYTE PTR [ebx+0x0]
  4202a0:	add    BYTE PTR [eax],al
  4202a2:	add    al,bl
  4202a4:	and    edi,edi
  4202a6:	(bad)  
  4202a7:	inc    DWORD PTR [ebx-0x9354d2]
  4202ad:	jmp    FWORD PTR [ebx+0xff8900]
  4202b3:	mov    al,0xaf
  4202b5:	add    BYTE PTR [ecx-0x435f0034],ah
  4202bb:	ror    DWORD PTR [ecx-0x56d8],cl
  4202c1:	add    DWORD PTR [eax],0x9
  4202c4:	popa   
  4202c5:	push   DWORD PTR [esi]
  4202c7:	(bad)  
  4202c8:	call   FWORD PTR ds:0x6fff03d1
  4202ce:	add    al,0x0
  4202d0:	add    BYTE PTR [ecx-0x3385dd01],cl
  4202d6:	call   0xffd3:0xe6f7ff00
  4202dd:	jae    0x420310
  4202df:	dec    esp
  4202e1:	cmp    edi,0xffffff96
  4202e4:	aad    0x83
  4202e6:	aad    0x83
  4202e8:	or     DWORD PTR [ebx],0x1f
  4202eb:	sbb    al,0xff
  4202ed:	xchg   bl,bl
  4202ef:	(bad)  
  4202f0:	inc    DWORD PTR [ebx-0x7c8b7301]
  4202f6:	sub    al,0x0
  4202f8:	add    BYTE PTR [edi],dh
  4202fa:	mov    BYTE PTR [esp+ecx*8+0x36],0x7c
  4202ff:	(bad)  
  420300:	(bad)  
  420301:	(bad)  
  420302:	jmp    DWORD PTR ds:0xff6700c3
  420308:	or     DWORD PTR [esi+0x1200051f],0x77
  42030f:	dec    DWORD PTR [ecx-0x4ae40100]
  420315:	add    BYTE PTR [edi-0x7d],ah
  420318:	int3   
  420319:	mov    ah,0x94
  42031b:	fild   WORD PTR [ebx-0x767c7dd4]
  420321:	inc    DWORD PTR [eax]
  420323:	inc    edi
  420324:	dec    ecx
  420325:	or     esi,0xffffffff
  420328:	(bad)  
  420329:	fcmove st,st(6)
  42032b:	dec    esp
  42032d:	aad    0x4d
  42032f:	inc    DWORD PTR [ebx+0x1a7bccff]
  420335:	push   DWORD PTR [esi-0x1]
  420338:	(bad)  
  420339:	jmp    0x89ae:0x57ff9077
  420340:	inc    DWORD PTR [eax]
  420342:	add    BYTE PTR [edx+eiz*8-0x7977],ah
  420349:	xchg   edi,eax
  42034a:	repnz outs dx,BYTE PTR ds:[esi]
  42034c:	inc    DWORD PTR [ecx-0xf]
  42034f:	dec    esp
  420351:	int3   
  420352:	(bad)  
  420353:	fstp   QWORD PTR [ecx-0x1]
  420356:	mov    eax,ds:0xe45a00ff
  42035b:	int    0xff
  42035d:	les    ebp,FWORD PTR [edi+0xffff83]
  420363:	mov    bh,0x57
  420365:	add    DWORD PTR [edi+0x629effff],0xfffffffc
  42036c:	sub    DWORD PTR [eax],0x8
  42036f:	inc    DWORD PTR [eax]
  420371:	add    BYTE PTR [eax],al
  420373:	icebp  
  420374:	pop    ecx
  420375:	add    BYTE PTR [esi+0x0],ah
  420378:	and    DWORD PTR [edx+0x31],0x7b
  42037c:	int3   
  42037d:	out    dx,al
  42037e:	inc    ebp
  42037f:	add    BYTE PTR [ebx+0x55c4cc00],al
  420385:	(bad)  
  420386:	jmp    0x420387
  420388:	push   DWORD PTR [esi-0x56ff3070]
  42038e:	stos   BYTE PTR es:[edi],al
  42038f:	add    bh,bh
  420391:	int3   
  420392:	add    ah,cl
  420394:	pop    ebp
  420395:	add    BYTE PTR [ecx],al
  420397:	add    BYTE PTR [ebx-0x333216bd],al
  42039d:	push   cs
  42039e:	(bad)  
  42039f:	(bad)  
  4203a0:	inc    DWORD PTR [ebx+0x2adecc]
  4203a6:	(bad)  
  4203a7:	inc    DWORD PTR [ebx+0x92a4ae]
  4203ad:	sub    DWORD PTR [edx-0x330100],0xffffffc9
  4203b4:	out    0x0,al
  4203b6:	inc    DWORD PTR ss:[ebx-0x7cd03c47]
  4203bd:	or     BYTE PTR [ebp-0xff7d],ch
  4203c3:	test   al,0x49
  4203c5:	add    cl,ah
  4203c7:	inc    DWORD PTR [eax]
  4203c9:	sbb    ecx,DWORD PTR ds:0x1cb0836c
  4203cf:	add    BYTE PTR [ecx-0xb800001],cl
  4203d5:	inc    esi
  4203d7:	add    bh,bh
  4203d9:	inc    esp
  4203da:	test   DWORD PTR [ebx],0x5cd89
  4203e0:	(bad)  
  4203e1:	(bad)  
  4203e2:	call   DWORD PTR [ebx-0x64]
  4203e5:	int3   
  4203e6:	outs   dx,DWORD PTR ds:[esi]
  4203e7:	dec    esp
  4203e9:	dec    ebp
  4203ea:	sub    edi,DWORD PTR [ebp-0x7c54e001]
  4203f0:	inc    DWORD PTR [eax]
  4203f2:	add    BYTE PTR [ecx-0x8900bb],al
  4203f8:	call   DWORD PTR ds:0x91ff10fa
  4203fe:	sub    al,BYTE PTR [eax]
  420400:	inc    DWORD PTR [ebx-0xf8097d]
  420406:	hlt    
  420407:	add    bh,bh
  420409:	dec    esp
  42040a:	pop    edi
  42040b:	push   ebx
  42040c:	add    BYTE PTR [ebx-0x28],ah
  42040f:	dec    DWORD PTR [ecx-0x1bc7c01]
  420415:	add    bh,al
  420417:	or     DWORD PTR [ecx-0x76d1c7],0xffffffdf
  42041e:	imul   eax,DWORD PTR [eax],0xb9ffccff
  420424:	std    
  420425:	add    BYTE PTR [edx-0x38020100],dl
  42042b:	mov    cl,0x83
  42042d:	inc    edx
  42042e:	mov    bh,0xff
  420430:	(bad)  
  420431:	inc    DWORD PTR [eax]
  420433:	retf   0xfffb
  420436:	int3   
  420437:	inc    DWORD PTR [eax]
  420439:	sub    eax,0x9bff0bb5
  42043e:	xor    eax,0xffffff
  420443:	adc    DWORD PTR [edx-0x1],ebp
  420446:	cmp    eax,0x903000ff
  42044b:	stc    
  42044c:	call   FWORD PTR [ebp-0xffc3]
  420452:	(bad)  
  420453:	out    dx,al
  420454:	mov    eax,DWORD PTR [ebx+0x79ffff06]
  42045a:	call   0xcc:0x8fbb8986
  420461:	(bad)  
  420462:	call   DWORD PTR [eax]
  420464:	out    0x0,eax
  420466:	into   
  420467:	(bad)  
  420468:	inc    DWORD PTR [eax+0xffc628]
  42046e:	xchg   edi,eax
  42046f:	add    BYTE PTR [eax],al
  420471:	(bad)  
  420472:	dec    DWORD PTR [edx+0x13]
  420475:	dec    esp
  420477:	add    bh,bh
  420479:	jo     0x420460
  42047b:	xchg   ecx,eax
  42047c:	dec    edx
  42047e:	enter  0xffff,0xff
  420482:	int3   
  420483:	ins    DWORD PTR es:[edi],dx
  420484:	out    0x0,al
  420486:	in     eax,0xff
  420488:	dec    DWORD PTR [ecx]
  42048a:	outs   dx,BYTE PTR ds:[esi]
  42048b:	pop    ecx
  42048c:	call   DWORD PTR [ebx-0x7d]
  42048f:	mov    edi,edi
  420491:	(bad)  
  420492:	call   FWORD PTR [edx+edx*4+0x897fff]
  420499:	mov    ds:0xeacc36d3,eax
  42049e:	and    DWORD PTR [eax],eax
  4204a0:	cmp    edi,0x0
  4204a3:	lods   eax,DWORD PTR ds:[esi]
  4204a4:	jge    0x420472
  4204a6:	ds (bad) 
  4204a8:	jmp    FWORD PTR [edx]
  4204aa:	mov    WORD PTR [edi+edi*8],?
  4204ad:	mov    ch,dh
  4204af:	inc    DWORD PTR [eax]
  4204b1:	int3   
  4204b2:	cmp    DWORD PTR [edi+0xe4009a],0xffffffcc
  4204b9:	add    al,BYTE PTR [eax+edi*2-0x1]
  4204bd:	int3   
  4204be:	les    eax,FWORD PTR [eax]
  4204c0:	add    DWORD PTR [ebx+0x4c4600],0xffffffbd
  4204c7:	inc    DWORD PTR [eax]
  4204c9:	in     eax,0xc2
  4204cb:	(bad)  
  4204cd:	(bad)  
  4204ce:	and    al,BYTE PTR [eax]
  4204d0:	(bad)  
  4204d1:	(bad)  
  4204d2:	(bad)  
  4204d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204d5:	int3   
  4204d6:	bound  eax,QWORD PTR [eax]
  4204d8:	inc    DWORD PTR [esi+0x71ff1456]
  4204de:	loope  0x4204df
  4204e0:	mov    DWORD PTR [ebx-0x2e0000],eax
  4204e6:	mov    es,WORD PTR [eax]
  4204e8:	adc    DWORD PTR [ecx+edi*2-0x132f33f0],0xffffffcc
  4204f0:	dec    DWORD PTR [ecx-0x332f9200]
  4204f6:	lock inc DWORD PTR [ebx-0xdc6f26]
  4204fd:	xchg   esi,eax
  4204fe:	je     0x4204cc
  420500:	add    BYTE PTR [ebx-0xaab37d],al
  420506:	and    edi,edi
  420508:	int3   
  420509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42050a:	in     eax,dx
  42050b:	jle    0x4204d9
  42050d:	pop    es
  42050e:	in     al,dx
  42050f:	add    bh,bh
  420511:	(bad)  
  420512:	jmp    FWORD PTR [eax]
  420514:	das    
  420515:	add    cl,cl
  420517:	dec    esp
  420519:	inc    eax
  42051a:	inc    ebp
  42051b:	(bad)  
  42051d:	jmp    0xffc5d176
  420522:	dec    DWORD PTR [ebp+0x47]
  420525:	add    BYTE PTR [esi],cl
  420527:	add    BYTE PTR [eax],al
  420529:	int    0xa7
  42052b:	and    bh,bh
  42052d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42052e:	pop    es
  42052f:	inc    DWORD PTR [ebx+0x7519ff00]
  420535:	jmp    FWORD PTR [eax]
  420537:	dec    DWORD PTR [ecx-0x97a188]
  42053d:	and    DWORD PTR [ebx-0x7d],ebp
  420540:	inc    DWORD PTR [eax]
  420542:	sub    DWORD PTR [ebp+0x18],0xffffff83
  420546:	inc    edx
  420547:	(bad)  
  420548:	inc    esi
  42054a:	xlat   BYTE PTR ds:[ebx]
  42054b:	jmp    0x946050
  420550:	add    bh,bh
  420552:	add    BYTE PTR [ecx+eiz*8+0xff2eff],dl
  420559:	pop    esp
  42055a:	test   edi,eax
  42055c:	jmp    DWORD PTR [eax]
  42055e:	xchg   esi,eax
  42055f:	add    DWORD PTR [eax],0xffffffff
  420562:	inc    DWORD PTR [eax]
  420564:	mov    edx,0xff23ff
  420569:	out    0x3d,al
  42056b:	push   ebp
  42056c:	add    BYTE PTR [ebp-0x74],dl
  42056f:	add    BYTE PTR [eax],al
  420571:	add    bh,bh
  420573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420574:	push   ecx
  420575:	add    BYTE PTR [edi-0x47097c01],dh
  42057b:	pop    esi
  42057c:	int3   
  42057d:	aad    0xf8
  42057f:	(bad)  
  420580:	(bad)  
  420581:	(bad)  
  420582:	call   ecx
  420584:	or     eax,DWORD PTR [eax]
  420586:	dec    ebp
  420587:	add    bh,bh
  420589:	inc    edx
  42058a:	and    edx,DWORD PTR [ecx]
  42058c:	add    dh,dh
  42058e:	lods   al,BYTE PTR ds:[esi]
  42058f:	inc    DWORD PTR [eax]
  420591:	inc    DWORD PTR [eax]
  420593:	mov    ecx,0xff400081
  420598:	dec    DWORD PTR [esi+edx*2+0x4185ff3e]
  42059f:	inc    DWORD PTR [eax]
  4205a1:	inc    DWORD PTR [eax]
  4205a3:	push   es
  4205a4:	ja     0x4205a5
  4205a6:	or     BYTE PTR [ecx+0xc618189],cl
  4205ac:	push   DWORD PTR [ecx-0xffff60]
  4205b2:	jmp    DWORD PTR [esi]
  4205b4:	jmp    0xad00:0x8d00
  4205bb:	call   FWORD PTR fs:[esi-0x80]
  4205bf:	mov    DWORD PTR [eax],eax
  4205c1:	mov    DWORD PTR [eax],eax
  4205c3:	pop    ebx
  4205c4:	mov    bh,0x0
  4205c6:	and    edi,edi
  4205c8:	jmp    ebx
  4205ca:	addr16 dec esi
  4205cc:	(bad)  
  4205cd:	fidivr WORD PTR [ebx-0x10000]
  4205d3:	xchg   ecx,eax
  4205d4:	or     edi,edi
  4205d6:	sbb    eax,0x4f2d00ff
  4205db:	pop    ds
  4205dc:	add    BYTE PTR [eax],bh
  4205de:	xor    edi,edi
  4205e0:	add    bh,bh
  4205e2:	(bad)  
  4205e3:	jmp    0x86ff:0xcc080083
  4205ea:	aad    0x2d
  4205ec:	int3   
  4205ed:	push   edi
  4205ee:	aas    
  4205ef:	add    BYTE PTR [eax],al
  4205f1:	add    BYTE PTR [ebx+0x6c890df5],al
  4205f7:	int3   
  4205f8:	(bad)  
  4205f9:	ds aas 
  4205fb:	ss add ch,ah
  4205fe:	mov    ds:0x838900ff,al
  420603:	inc    esi
  420604:	mov    DWORD PTR [eax],eax
  420606:	repz inc DWORD PTR [eax]
  420609:	push   edx
  42060a:	pop    ds
  42060b:	scas   al,BYTE PTR es:[edi]
  42060c:	mov    DWORD PTR [edi],edx
  42060e:	mov    BYTE PTR [eax],0x83
  420611:	add    bh,bh
  420613:	dec    eax
  420614:	adc    eax,0x7ecc
  420619:	sbb    DWORD PTR [edx+0x231e834b],0xffff00
  420623:	push   esi
  420624:	test   al,0xff
  420626:	mov    esi,0x1250ffff
  42062b:	push   ds
  42062c:	add    BYTE PTR [eax+esi*2-0x7c007601],al
  420633:	pop    ss
  420634:	or     al,0x89
  420636:	pushf  
  420637:	dec    DWORD PTR [ecx-0x634d75]
  42063d:	dec    BYTE PTR [ecx]
  42063f:	dec    DWORD PTR [ecx-0x1a537634]
  420645:	add    bh,ah
  420647:	add    BYTE PTR [eax],al
  420649:	pop    ecx
  42064a:	jns    0x4205f2
  42064c:	push   DWORD PTR [ecx-0x19]
  42064f:	add    cl,dh
  420651:	add    BYTE PTR [ebx],al
  420653:	or     dl,BYTE PTR [ecx-0x7d]
  420656:	add    DWORD PTR [eax],0xffffffca
  420659:	int3   
  42065a:	lods   eax,DWORD PTR ds:[esi]
  42065b:	scas   eax,DWORD PTR es:[edi]
  42065c:	sub    eax,DWORD PTR [eax]
  42065e:	add    BYTE PTR [eax],al
  420660:	test   eax,0xecebf8ff
  420665:	inc    DWORD PTR [eax]
  420667:	add    BYTE PTR [edi+edi*8-0x7c011b3f],ch
  42066e:	dec    DWORD PTR [ecx+0x6ee6ffa9]
  420674:	mov    dh,0xff
  420676:	(bad)  
  420677:	(bad)  
  420678:	cmp    bh,bh
  42067a:	stos   DWORD PTR es:[edi],eax
  42067b:	pusha  
  42067c:	xchg   esi,eax
  42067d:	add    BYTE PTR [ebx-0x8004b00],al
  420683:	in     eax,dx
  420684:	jmp    0x9583:0x98ffff00
  42068b:	mov    edx,DWORD PTR [edi]
  42068d:	(bad)  
  42068e:	(bad)  
  42068f:	(bad)  
  420690:	jp     0x420692
  420692:	xchg   eax,ecx
  420694:	push   esp
  420695:	int3   
  420696:	add    BYTE PTR [ebx-0x111ff6f],al
  42069c:	inc    ebx
  42069d:	add    BYTE PTR [ebx+0x21003d00],al
  4206a3:	loopne 0x420677
  4206a5:	add    BYTE PTR [ecx-0x9007e00],cl
  4206ab:	pop    edi
  4206ac:	dec    edi
  4206ad:	(bad)  
  4206ae:	inc    DWORD PTR [eax]
  4206b0:	xchg   edi,eax
  4206b1:	inc    ebx
  4206b3:	and    eax,0xff00834e
  4206b8:	inc    esp
  4206b9:	add    cl,dl
  4206bb:	test   BYTE PTR [edi+0x45cc8300],ch
  4206c1:	add    BYTE PTR [eax],bl
  4206c3:	and    dh,BYTE PTR [ebp-0x79ff7700]
  4206c9:	jmp    DWORD PTR [ebx-0x57]
  4206cc:	sbb    eax,0x2e00cc83
  4206d1:	inc    DWORD PTR [edi-0x6f]
  4206d4:	arpl   sp,cx
  4206d6:	add    DWORD PTR [eax],0xffffffaf
  4206d9:	add    BYTE PTR ds:0xccb88c,ch
  4206df:	push   DWORD PTR [eax+eax*1+0x72fe22]
  4206e6:	int3   
  4206e7:	xor    DWORD PTR ds:0x38893dff,0xffffffff
  4206ee:	dec    esp
  4206f0:	sbb    DWORD PTR [ecx-0x7cff282f],ecx
  4206f6:	add    bh,bh
  4206f8:	mov    edi,edi
  4206fa:	xlat   BYTE PTR ds:[ebx]
  4206fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206fc:	pop    edx
  4206fd:	inc    DWORD PTR [ebx+0x9ff01ff]
  420703:	mov    ah,BYTE PTR [edx]
  420705:	add    BYTE PTR [eax],al
  420707:	push   DWORD PTR [esi-0x1caeb201]
  42070d:	(bad)  
  42070e:	(bad)  
  42070f:	push   esp
  420711:	jmp    FWORD PTR [edi]
  420713:	adc    DWORD PTR [eax+eax*1],edi
  420716:	dec    DWORD PTR [ecx-0x2956ff6d]
  42071c:	inc    ebx
  42071d:	add    bh,bh
  42071f:	and    DWORD PTR [edi-0x34],0x13
  420723:	adc    al,0xc5
  420725:	(bad)  
  420726:	(bad)  
  420727:	push   DWORD PTR [edi+0x58c963ff]
  42072d:	add    BYTE PTR [eax],al
  42072f:	add    BYTE PTR [esi+0x6e16b8cc],cl
  420735:	(bad)  
  420736:	dec    DWORD PTR [ecx+0x11b3ffef]
  42073c:	mov    bh,bh
  42073e:	add    bh,bh
  420740:	je     0x420742
  420742:	adc    BYTE PTR [esi+0x47],dl
  420745:	(bad)  
  420746:	dec    esp
  420748:	add    BYTE PTR [eax],0x2f
  42074b:	retf   0x1b
  42074e:	inc    DWORD PTR [eax]
  420750:	pop    esi
  420751:	or     DWORD PTR [edi],0x6d
  420754:	xor    bh,bh
  420756:	dec    DWORD PTR [ecx+0x7a51ff94]
  42075c:	or     eax,0xdaffffff
  420761:	dec    DWORD PTR [edi]
  420763:	adc    al,0xc2
  420765:	dec    DWORD PTR [ecx-0x19ff877d]
  42076b:	sub    eax,0xffffff
  420770:	mov    bl,0x0
  420772:	sub    esi,ebx
  420774:	and    edi,edi
  420776:	inc    DWORD PTR [eax]
  420778:	push   ds
  420779:	(bad)  
  42077a:	stc    
  42077b:	mov    edi,0xffff8a
  420780:	jno    0x42074e
  420782:	jecxz  0x420769
  420784:	out    0x0,al
  420786:	add    bh,bh
  420788:	iret   
  420789:	(bad)  
  42078a:	stc    
  42078b:	jge    0x420774
  42078d:	int3   
  42078e:	inc    DWORD PTR [eax]
  420790:	add    DWORD PTR [eax],eax
  420792:	xchg   ecx,eax
  420793:	stc    
  420794:	(bad)  
  420795:	(bad)  
  420796:	inc    DWORD PTR [eax]
  420798:	enter  0xc400,0x26
  42079c:	lods   eax,DWORD PTR ds:[esi]
  42079d:	add    DWORD PTR [eax],0xffffff89
  4207a0:	je     0x4207a2
  4207a2:	jmp    0x4207e3
  4207a4:	xchg   ecx,eax
  4207a5:	add    BYTE PTR [eax],al
  4207a7:	jmp    DWORD PTR [ebp-0x4cb53177]
  4207ad:	(bad)  
  4207ae:	(bad)  
  4207af:	dec    DWORD PTR ds:0xd822acff
  4207b5:	mov    DWORD PTR [ebx-0x567c5701],eax
  4207bb:	call   0x42070a
  4207c0:	xchg   esi,eax
  4207c1:	push   ecx
  4207c3:	cmp    cl,BYTE PTR [edi-0x4a010000]
  4207c9:	sbb    DWORD PTR [edx+0x67],0xffffffcb
  4207cd:	mov    DWORD PTR [eax],eax
  4207cf:	sub    DWORD PTR [ebp-0x34],0x2b
  4207d3:	clc    
  4207d4:	dec    ebx
  4207d5:	add    DWORD PTR [eax],0xffffff83
  4207d8:	and    DWORD PTR [ecx-0x319ffe],ecx
  4207de:	(bad)  
  4207df:	(bad)  
  4207e0:	sti    
  4207e1:	jmp    FWORD PTR [ebx]
  4207e3:	push   ds
  4207e4:	in     eax,dx
  4207e5:	add    DWORD PTR [eax],0xffffffff
  4207e8:	pop    edi
  4207e9:	jmp    edx
  4207eb:	std    
  4207ec:	and    eax,0xb7ff8300
  4207f1:	dec    DWORD PTR [eax-0x7c002f35]
  4207f7:	add    BYTE PTR [ebp-0x1],cl
  4207fa:	mov    esp,0xff8378c8
  4207ff:	int3   
  420800:	test   BYTE PTR [eax],0xf6
  420803:	push   ecx
  420804:	imul   eax,DWORD PTR [eax],0xffffffff
  420807:	add    cl,cl
  420809:	add    BYTE PTR [eax-0x33fff6d2],cl
  42080f:	xor    DWORD PTR [ebp-0x53abe77],0xffffff83
  420816:	inc    DWORD PTR [eax]
  420818:	cmp    bh,bh
  42081a:	jge    0x4207d2
  42081c:	dec    edi
  42081d:	int3   
  42081e:	add    bh,bh
  420820:	ror    BYTE PTR [ecx-0x393f2a],cl
  420826:	inc    DWORD PTR [eax]
  420828:	xor    BYTE PTR [ebx-0x7c2c78f9],al
  42082e:	inc    DWORD PTR [eax]
  420830:	outs   dx,DWORD PTR ds:[esi]
  420831:	dec    DWORD PTR [ebx+0x83d070]
  420837:	add    BYTE PTR [eax+eax*1],dh
  42083a:	dec    ecx
  42083b:	mov    eax,0xff008366
  420840:	sub    DWORD PTR [ecx-0x76f2d926],ecx
  420846:	add    DWORD PTR [ebx-0x585b00da],0x44
  42084d:	(bad)  
  42084e:	(bad)  
  42084f:	(bad)  
  420850:	mov    edx,0x7f301d83
  420855:	dec    esp
  420857:	add    BYTE PTR [eax-0x3f75f701],al
  42085d:	inc    DWORD PTR [ebx-0x56000a34]
  420863:	outs   dx,BYTE PTR ds:[esi]
  420864:	push   esi
  420865:	add    DWORD PTR [eax],0xffffffff
  420868:	ret    
  420869:	inc    DWORD PTR [eax+0x2c]
  42086c:	cmp    al,0xff
  42086e:	inc    DWORD PTR [eax]
  420870:	call   0xff89:0x1a58b400
  420877:	(bad)  
  420878:	cmp    eax,DWORD PTR [ebx-0x4a87d3]
  42087e:	add    bh,bh
  420880:	cmp    edi,0xff66429a
  420886:	dec    DWORD PTR [ecx+0x56308972]
  42088c:	pop    eax
  42088d:	dec    DWORD PTR [ecx-0x617c7001]
  420893:	mov    WORD PTR [ecx],?
  420895:	add    BYTE PTR [eax],al
  420897:	jmp    FWORD PTR [esi-0x1]
  42089a:	jp     0x4208d1
  42089c:	xor    bh,bh
  42089e:	int3   
  42089f:	call   FWORD PTR [edi+0x863afff]
  4208a5:	add    bh,bh
  4208a7:	call   DWORD PTR [eax+0x0]
  4208aa:	sub    al,BYTE PTR [eax+0x830065]
  4208b0:	fild   DWORD PTR [eax]
  4208b2:	in     al,dx
  4208b3:	pop    ebp
  4208b4:	out    dx,eax
  4208b5:	inc    DWORD PTR [eax]
  4208b7:	add    dh,al
  4208b9:	cmp    DWORD PTR [esi],0xffffffae
  4208bc:	sar    bh,1
  4208be:	inc    DWORD PTR [eax]
  4208c0:	in     al,dx
  4208c1:	int3   
  4208c2:	push   esi
  4208c3:	inc    ecx
  4208c4:	push   edi
  4208c5:	add    BYTE PTR [eax],al
  4208c7:	add    BYTE PTR [eax],al
  4208c9:	mov    edi,edi
  4208cb:	js     0x4208c1
  4208cd:	add    bh,bh
  4208cf:	add    BYTE PTR [esi+0x0],bh
  4208d2:	mov    al,0x46
  4208d4:	or     edi,edi
  4208d6:	inc    DWORD PTR [ebx-0x29b20090]
  4208dc:	in     al,0xff
  4208de:	inc    DWORD PTR [ebx-0x420bffd1]
  4208e4:	sub    edi,edi
  4208e6:	mov    edi,edi
  4208e8:	xor    eax,0x259109ff
  4208ed:	mov    DWORD PTR [ebx+0xdffe983],eax
  4208f3:	fisttp DWORD PTR [ebx-0x77]
  4208f6:	inc    DWORD PTR [eax]
  4208f8:	call   DWORD PTR ss:[esi-0x334599]
  4208ff:	add    BYTE PTR [eax-0x1],al
  420902:	data16 mov bl,0x8b
  420905:	add    bh,bh
  420907:	int3   
  420908:	mov    bh,bh
  42090a:	pop    edx
  42090b:	(bad)  
  42090c:	retf   0xff00
  42090f:	push   DWORD PTR [ecx+0x3fc4c5ff]
  420915:	inc    DWORD PTR [eax]
  420917:	add    dl,bl
  420919:	(bad)  
  42091a:	jmp    FWORD PTR [esi]
  42091c:	adc    bh,bh
  42091e:	(bad)  
  42091f:	dec    DWORD PTR [edi+edi*8+0x77]
  420923:	leave  
  420924:	cdq    
  420925:	add    BYTE PTR [eax],al
  420927:	or     ebx,0xffffffcc
  42092a:	icebp  
  42092b:	mov    ebx,0x8300ffca
  420930:	fcos   
  420932:	sbb    al,0x64
  420934:	out    0xff,al
  420936:	add    ah,cl
  420938:	pop    edx
  420939:	add    BYTE PTR [edi-0x7c4a4a],ah
  42093f:	jmp    ebp
  420941:	add    BYTE PTR [edi+0x18],dl
  420944:	fwait
  420945:	(bad)  
  420946:	(bad)  
  420947:	jmp    DWORD PTR [ebp-0x7d]
  42094a:	test   al,0x6f
  42094c:	(bad)  
  42094f:	mov    DWORD PTR [ecx-0x1],ecx
  420952:	or     ch,BYTE PTR [ebp+0xc]
  420955:	(bad)  
  420956:	inc    DWORD PTR [eax]
  420958:	cmp    eax,0x3fb22bff
  42095d:	(bad)  
  42095e:	(bad)  
  42095f:	dec    DWORD PTR [eax-0x2ceed800]
  420965:	add    BYTE PTR [eax],al
  420967:	call   FWORD PTR [eax-0x6c076c00]
  42096d:	inc    DWORD PTR [ebx-0x6733e101]
  420973:	add    al,dl
  420975:	(bad)  
  420976:	inc    DWORD PTR [eax]
  420978:	int    0x83
  42097a:	iret   
  42097b:	(bad)  
  42097c:	fiadd  DWORD PTR [ebx+0xbffcc]
  420982:	inc    ebx
  420983:	sbb    al,0x1c
  420985:	int3   
  420986:	add    BYTE PTR [ebx-0x5baf009a],al
  42098c:	cmc    
  42098d:	add    BYTE PTR [ecx-0x62fffe34],cl
  420993:	sti    
  420994:	outs   dx,DWORD PTR ds:[esi]
  420995:	(bad)  
  420996:	(bad)  
  420997:	inc    ebp
  420999:	add    BYTE PTR [edx-0x76fff3e2],dl
  42099f:	call   DWORD PTR [ebx-0x48f23a00]
  4209a5:	(bad)  
  4209a6:	(bad)  
  4209a7:	push   DWORD PTR [esi]
  4209a9:	int3   
  4209aa:	sub    al,bl
  4209ac:	jge    0x4209ae
  4209ae:	dec    esp
  4209b0:	dec    edx
  4209b1:	dec    DWORD PTR [esi]
  4209b3:	mov    BYTE PTR [ebx+0x0],bl
  4209b6:	int3   
  4209b7:	add    BYTE PTR [edx-0x50469e34],al
  4209bd:	or     esp,0xffffffcc
  4209c0:	fcos   
  4209c2:	mov    ds:0xff00e7bf,al
  4209c7:	jmp    FWORD PTR [ecx+0x16763fff]
  4209cd:	dec    esp
  4209cf:	(bad)  
  4209d0:	jnp    0x4209d1
  4209d2:	call   0xca83:0xff5f84
  4209d9:	add    BYTE PTR [esi],ch
  4209db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209dc:	sbb    al,0x0
  4209de:	(bad)  
  4209df:	jmp    DWORD PTR [eax-0x6e5fcf01]
  4209e5:	(bad)  
  4209e6:	inc    DWORD PTR [eax]
  4209e8:	retf   
  4209e9:	xor    DWORD PTR [ebp+0x6a],0x6f
  4209ed:	add    BYTE PTR [ebx+0x43cc7f00],al
  4209f3:	mov    ebp,cs
  4209f5:	inc    DWORD PTR [ebx+0x5a00efff]
  4209fb:	shr    BYTE PTR [ebx+0x4700ffff],cl
  420a01:	call   DWORD PTR [esp+edx*8+0x11]
  420a05:	dec    esp
  420a07:	int3   
  420a08:	int3   
  420a09:	sub    DWORD PTR [eax],0xffffff95
  420a0c:	or     bh,bh
  420a0e:	(bad)  
  420a0f:	(bad)  
  420a10:	cli    
  420a11:	jmp    FWORD PTR [eax-0x45c3]
  420a17:	call   DWORD PTR [eax]
  420a19:	int3   
  420a1a:	cs nop
  420a1c:	mov    eax,0xbc83ffcc
  420a21:	sub    DWORD PTR [eax-0x33b9a2],0x0
  420a28:	jmp    0xff00:0x345159ff
  420a2f:	int3   
  420a30:	outs   dx,BYTE PTR ds:[esi]
  420a31:	int3   
  420a32:	out    dx,al
  420a33:	sub    edx,ecx
  420a35:	(bad)  
  420a36:	(bad)  
  420a37:	jmp    FWORD PTR [ebp-0x52d26001]
  420a3d:	add    ah,cl
  420a3f:	sub    ebp,0xffffff89
  420a42:	mov    ecx,0x8300ce48
  420a47:	add    BYTE PTR [ebp-0x653cd900],ch
  420a4d:	add    DWORD PTR [eax],0x0
  420a50:	xor    edi,edi
  420a52:	sbb    BYTE PTR [ebx+0x3e],bl
  420a55:	int3   
  420a56:	mov    DWORD PTR [ebx+0x295eff56],eax
  420a5c:	pusha  
  420a5d:	inc    DWORD PTR [ebx-0x57ffd800]
  420a63:	or     eax,0xfffffff5
  420a68:	ja     0x420a6a
  420a6a:	call   0x65ff:0xff00d930
  420a71:	int3   
  420a72:	outs   dx,BYTE PTR ds:[esi]
  420a73:	add    eax,0x89fff2
  420a78:	fld    DWORD PTR [eax]
  420a7a:	das    
  420a7b:	(bad)  
  420a7c:	ss (bad) 
  420a7e:	dec    esp
  420a80:	or     BYTE PTR [ebx-0x33c9da4e],al
  420a86:	inc    DWORD PTR [eax]
  420a88:	ret    
  420a89:	add    BYTE PTR [edx],ch
  420a8b:	push   esp
  420a8c:	test   DWORD PTR [ebx-0x33bc0100],eax
  420a92:	call   0x8441348a
  420a97:	push   ebx
  420a99:	add    BYTE PTR [eax-0x3358],bh
  420a9f:	(bad)  
  420aa0:	cmp    DWORD PTR [eax],eax
  420aa2:	cmc    
  420aa3:	push   edx
  420aa4:	add    ah,cl
  420aa6:	int3   
  420aa7:	(bad)  
  420aa8:	cmp    DWORD PTR [eax],eax
  420aaa:	(bad)  
  420aab:	push   ecx
  420aac:	inc    ebp
  420aad:	(bad)  
  420aae:	(bad)  
  420aaf:	push   DWORD PTR [edx+0x571dd1ff]
  420ab5:	add    bh,bh
  420ab7:	dec    edx
  420ab9:	(bad)  
  420aba:	jle    0x420b13
  420abc:	and    eax,0x4cffff00
  420ac1:	jmp    DWORD PTR [ebp+0x63]
  420ac4:	ret    
  420ac5:	inc    DWORD PTR [eax]
  420ac7:	mov    DWORD PTR [edx+0x0],esp
  420aca:	push   cs
  420acb:	in     al,0xae
  420acd:	add    DWORD PTR [ebx+0x4783b783],0x24
  420ad4:	adc    eax,DWORD PTR [eax]
  420ad6:	(bad)  
  420ad7:	call   DWORD PTR [edi+edi*8-0x50]
  420adb:	xor    al,0xd6
  420add:	mov    DWORD PTR [eax],eax
  420adf:	adc    DWORD PTR [edx],0xffffffff
  420ae2:	mov    eax,0xffff7560
  420ae7:	add    BYTE PTR [ecx-0x381e4a00],ah
  420aed:	add    DWORD PTR [eax],0xffffffcc
  420af0:	fwait
  420af1:	(bad)  
  420af2:	jp     0x420af4
  420af4:	cmp    al,0xff
  420af6:	inc    DWORD PTR [eax]
  420af8:	call   0xff00:0xb1f378cc
  420aff:	add    BYTE PTR [ebp-0x61a4ac00],cl
  420b05:	inc    DWORD PTR [ebx-0x68009834]
  420b0b:	repnz sbb eax,0xa1830089
  420b11:	add    BYTE PTR [edi+0x44],dl
  420b14:	add    bh,bh
  420b16:	inc    DWORD PTR [eax]
  420b18:	rol    DWORD PTR [eax],1
  420b1a:	lds    ebx,FWORD PTR [edi+0x6f]
  420b1d:	(bad)  
  420b1e:	inc    DWORD PTR [eax]
  420b20:	sub    edi,edi
  420b22:	xlat   BYTE PTR ds:[ebx]
  420b23:	ret    0xffb3
  420b26:	inc    DWORD PTR [ebx+0x3692ff29]
  420b2c:	repnz int3 
  420b2e:	int3   
  420b2f:	push   edi
  420b31:	xor    DWORD PTR [esi],0x49
  420b34:	add    DWORD PTR ds:[ebx-0xf762634],0xffffffc4
  420b3c:	sbb    cl,BYTE PTR [ecx-0xb0100]
  420b42:	cmp    eax,0xffa7d3
  420b47:	add    edx,0xffffffff
  420b4a:	push   ebp
  420b4b:	add    DWORD PTR [ebp-0x1],ebp
  420b4e:	mov    edi,edi
  420b50:	aas    
  420b51:	add    dh,dh
  420b53:	(bad)  
  420b54:	aam    0x0
  420b56:	add    bh,bh
  420b58:	dec    esi
  420b59:	sbb    DWORD PTR [ecx-0x1c],0x2c
  420b5d:	add    bh,bh
  420b5f:	add    BYTE PTR [eax-0x7d],ah
  420b62:	lea    ecx,[edx+0x35]
  420b65:	add    BYTE PTR [eax],al
  420b67:	(bad)  
  420b68:	mov    edi,0x967a0589
  420b6d:	add    bh,bh
  420b6f:	jmp    DWORD PTR [ebx+eax*4-0x432b14]
  420b76:	(bad)  
  420b77:	call   FWORD PTR [eax-0x1]
  420b7a:	or     eax,DWORD PTR [eax+ebx*1]
  420b7d:	add    bh,bh
  420b7f:	add    BYTE PTR [edi],al
  420b81:	add    BYTE PTR [edx],dl
  420b83:	sbb    BYTE PTR [ecx],al
  420b85:	add    ah,cl
  420b87:	call   FWORD PTR [ebx+0x0]
  420b8a:	pushf  
  420b8b:	ins    DWORD PTR es:[edi],dx
  420b8c:	test   BYTE PTR [eax],al
  420b8e:	inc    DWORD PTR [eax]
  420b90:	jo     0x420b91
  420b92:	xchg   edi,eax
  420b93:	stos   DWORD PTR es:[edi],eax
  420b94:	push   eax
  420b95:	mov    edi,edi
  420b97:	add    BYTE PTR [edx-0x1],al
  420b9a:	cmp    ebp,esp
  420b9c:	enter  0x8389,0xff
  420ba0:	test   al,0x0
  420ba2:	repz mov cs,WORD PTR [eax]
  420ba5:	add    bh,bh
  420ba7:	push   DWORD PTR [ebx]
  420ba9:	jmp    FWORD PTR [ecx]
  420bab:	mov    ds:0xffff00ab,eax
  420bb0:	bound  eax,QWORD PTR [eax]
  420bb2:	popf   
  420bb3:	sbb    eax,0xffff0051
  420bb8:	mov    dl,0xff
  420bba:	push   ss
  420bbb:	pop    ss
  420bbc:	jp     0x420bbd
  420bbe:	mov    DWORD PTR [ecx+0x1a77cc0e],ecx
  420bc4:	inc    DWORD PTR es:[eax]
  420bc7:	call   DWORD PTR ds:0x670f59ff
  420bcd:	add    bh,bh
  420bcf:	add    DWORD PTR [ebx+eax*4+0x7b04e],0xffffff83
  420bd7:	add    BYTE PTR [ebp+0x0],al
  420bda:	in     al,dx
  420bdb:	lock dec edi
  420bdd:	(bad)  
  420bde:	inc    DWORD PTR [eax]
  420be0:	fimul  DWORD PTR [ecx+0xf905e0]
  420be6:	cmp    edi,0x40
  420be9:	(bad)  
  420bea:	jmp    0xdcff:0xff00b2fa
  420bf1:	add    BYTE PTR [eax+0xfdaf],dl
  420bf7:	call   FWORD PTR [esi-0x1]
  420bfa:	hlt    
  420bfb:	(bad)  
  420bfc:	cmp    eax,DWORD PTR [eax]
  420bfe:	(bad)  
  420bff:	dec    DWORD PTR [ebx+eax*4+0x4d]
  420c03:	dec    esi
  420c05:	add    DWORD PTR [eax],0xffffffff
  420c08:	mov    eax,ds:0x2809ddff
  420c0d:	add    BYTE PTR [eax],al
  420c0f:	mov    DWORD PTR [edx+0x60e39bff],edi
  420c15:	mov    edi,edi
  420c17:	add    BYTE PTR [edi],ah
  420c19:	int3   
  420c1a:	dec    esp
  420c1b:	xchg   ebp,eax
  420c1c:	retf   0xff00
  420c1f:	adc    DWORD PTR [eax-0x1],0xffffff84
  420c23:	sahf   
  420c24:	mov    eax,0x69ff00ff
  420c29:	add    BYTE PTR [edx],bl
  420c2b:	xchg   BYTE PTR [ebx],ch
  420c2d:	int3   
  420c2e:	cmp    edi,0x39
  420c31:	push   edi
  420c33:	add    BYTE PTR [eax-0x54007c34],dh
  420c39:	add    BYTE PTR [esi-0x1b],bh
  420c3c:	cmp    bh,0xff
  420c3f:	dec    DWORD PTR [eax+eax*1+0xe6b447]
  420c46:	int3   
  420c47:	(bad)  
  420c48:	cmp    esp,ecx
  420c4a:	(bad)  
  420c4b:	dec    esi
  420c4c:	cmp    edi,edi
  420c4e:	inc    DWORD PTR [ebx+0x5d8f008f]
  420c54:	popf   
  420c55:	(bad)  
  420c56:	dec    DWORD PTR [ecx-0x82f004b]
  420c5c:	sub    edi,edi
  420c5e:	add    bh,bh
  420c60:	jmp    FWORD PTR ss:[ecx]
  420c63:	cmc    
  420c64:	mov    edi,0x8400ffcc
  420c69:	inc    ebx
  420c6b:	es push eax
  420c6d:	(bad)  
  420c6e:	(bad)  
  420c6f:	jmp    DWORD PTR [edx]
  420c71:	add    BYTE PTR [esi],ah
  420c73:	popa   
  420c74:	xor    eax,0x69ff0083
  420c79:	(bad)  
  420c7a:	cmp    ecx,eax
  420c7c:	add    BYTE PTR es:[eax],al
  420c7f:	add    BYTE PTR [ebx],ah
  420c81:	adc    DWORD PTR [ebx+0x3d],0xffffffac
  420c85:	dec    esp
  420c87:	push   DWORD PTR [ecx-0x7d]
  420c8a:	test   al,0x51
  420c8c:	pop    edx
  420c8d:	cmp    edi,0xffffffff
  420c90:	dec    edi
  420c91:	add    DWORD PTR [edi-0x76000f4c],0xffffff89
  420c98:	or     BYTE PTR [eax],al
  420c9a:	lods   al,BYTE PTR ds:[esi]
  420c9b:	or     BYTE PTR [ecx-0x1],ah
  420c9e:	cmp    edi,0xfffffff3
  420ca1:	mov    DWORD PTR [esi+0x2f],edx
  420ca4:	gs int3 
  420ca6:	inc    DWORD PTR [ebx+0x64970016]
  420cac:	mov    eax,ds:0xfff8900
  420cb1:	inc    DWORD PTR [esi]
  420cb3:	int3   
  420cb4:	call   0x1eff:0x23ccff89
  420cbb:	inc    esp
  420cbc:	outs   dx,DWORD PTR ds:[esi]
  420cbd:	(bad)  
  420cbe:	inc    DWORD PTR [ebx+0x72a1ff89]
  420cc4:	xchg   esi,eax
  420cc5:	add    bh,bh
  420cc7:	call   DWORD PTR [esi]
  420cc9:	sub    DWORD PTR [ebx-0xff6160],0xffffffff
  420cd0:	in     eax,dx
  420cd1:	add    BYTE PTR [esi-0x7cfff469],ch
  420cd7:	and    DWORD PTR [edx],0xffffffff
  420cda:	rol    DWORD PTR ds:0x85ffcccc,1
  420ce1:	inc    esi
  420ce3:	inc    edi
  420ce4:	cld    
  420ce5:	add    bh,bh
  420ce7:	(bad)  
  420ce8:	fild   WORD PTR [eax]
  420cea:	dec    esp
  420ceb:	xchg   DWORD PTR [eax-0x7d],ecx
  420cee:	inc    DWORD PTR [ebx+0x3e7fccef]
  420cf4:	repz inc DWORD PTR [eax]
  420cf7:	cmp    ebx,0xffffff83
  420cfa:	jp     0x420d5b
  420cfc:	inc    ecx
  420cfd:	(bad)  
  420cfe:	inc    DWORD PTR [eax]
  420d00:	arpl   di,di
  420d02:	or     bl,BYTE PTR [ebp+0x65]
  420d05:	add    BYTE PTR [eax],al
  420d07:	add    BYTE PTR [ecx],al
  420d09:	add    BYTE PTR [ecx+ecx*2-0x7c00000c],bh
  420d10:	add    eax,0xbdb459cc
  420d15:	int3   
  420d16:	mov    edi,edi
  420d18:	test   BYTE PTR [eax],0xe6
  420d1b:	arpl   WORD PTR [esi-0x1],di
  420d1e:	add    BYTE PTR [ebx+0x18b7ff06],al
  420d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d25:	add    BYTE PTR [eax],al
  420d27:	mov    esi,esi
  420d29:	push   ebx
  420d2b:	mov    esp,gs
  420d2d:	int3   
  420d2e:	add    BYTE PTR [ebx-0x2ee2001b],al
  420d34:	pop    DWORD PTR [eax]
  420d36:	inc    DWORD PTR [eax]
  420d38:	cmp    BYTE PTR [eax],al
  420d3a:	dec    edi
  420d3b:	cdq    
  420d3c:	add    BYTE PTR [bp+di+0x1900],al
  420d41:	push   DWORD PTR [esi-0x1a]
  420d44:	push   esp
  420d45:	inc    DWORD PTR [eax]
  420d47:	call   DWORD PTR ds:0x4e88cb00
  420d4d:	add    bh,bh
  420d4f:	jmp    FWORD PTR [esi-0x1]
  420d52:	or     esi,DWORD PTR [edi]
  420d54:	dec    esi
  420d55:	add    bh,bh
  420d57:	jmp    FWORD PTR [ecx-0x2dfa0701]
  420d5d:	add    BYTE PTR [eax],al
  420d5f:	add    BYTE PTR [ebp-0x1],bl
  420d62:	shl    BYTE PTR [ebx+0x57],cl
  420d65:	(bad)  
  420d66:	inc    DWORD PTR [ebx-0x3d71336c]
  420d6c:	xor    edi,edi
  420d6e:	(bad)  
  420d6f:	jmp    DWORD PTR ds:0xd71dd5ff
  420d75:	add    BYTE PTR [eax],al
  420d77:	int3   
  420d78:	call   0x8d5d207d
  420d7d:	(bad)  
  420d7e:	dec    esp
  420d80:	adc    bh,bh
  420d82:	and    dh,BYTE PTR [edx-0xa0]
  420d88:	dec    edx
  420d89:	mov    DWORD PTR [ebp-0x32],eax
  420d8c:	mov    ebx,0xaa83ff00
  420d91:	adc    DWORD PTR [eax-0xffd702],0xffffffff
  420d98:	fwait
  420d99:	mov    ecx,esi
  420d9b:	xor    eax,0xffff00
  420da0:	call   0x971e69a4
  420da5:	add    bh,bh
  420da7:	jmp    DWORD PTR [ebx+eax*4+0x1c]
  420dab:	dec    ebp
  420dac:	dec    ecx
  420dad:	int3   
  420dae:	mov    DWORD PTR [eax],eax
  420db0:	aam    0x0
  420db2:	adc    eax,0xff7a8a
  420db7:	add    BYTE PTR [ecx+0x0],dl
  420dba:	call   0xb600:0xff89c31e
  420dc1:	mov    DWORD PTR [edi-0x6b],esp
  420dc4:	pop    eax
  420dc5:	(bad)  
  420dc6:	dec    esp
  420dc8:	mov    DWORD PTR [ebx+0x939a8a],eax
  420dce:	cmp    edi,0x42
  420dd1:	dec    DWORD PTR [edx+edx*1-0x33]
  420dd5:	add    ah,cl
  420dd7:	dec    DWORD PTR [eax+0x285e87ff]
  420ddd:	add    bh,bh
  420ddf:	jmp    DWORD PTR [eax+eax*1-0x7c5c43cf]
  420de6:	add    BYTE PTR [eax],al
  420de8:	mov    cs,esp
  420dea:	out    0xfb,eax
  420dec:	stc    
  420ded:	inc    DWORD PTR [eax]
  420def:	inc    ebx
  420df1:	and    esp,0xffffffb8
  420df4:	sti    
  420df5:	add    ah,cl
  420df7:	xor    DWORD PTR [esi+0x19a8c300],0xffffffff
  420dfe:	dec    DWORD PTR [ecx+0x61ddff42]
  420e04:	aaa    
  420e05:	cmp    edi,0xffffffff
  420e08:	mov    dh,0xff
  420e0a:	in     al,dx
  420e0b:	sbb    BYTE PTR ds:0x520089ff,0x89
  420e12:	pop    es
  420e13:	mov    cs,WORD PTR [edi]
  420e15:	add    bh,bh
  420e17:	push   DWORD PTR [ebx]
  420e19:	add    eax,0xffffffd9
  420e1c:	rol    BYTE PTR [ebx-0x3b0001],1
  420e22:	xchg   edi,eax
  420e23:	ins    DWORD PTR es:[edi],dx
  420e24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e25:	int3   
  420e26:	dec    esp
  420e28:	and    ecx,esp
  420e2a:	js     0x420e79
  420e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e2d:	add    bh,bh
  420e2f:	int3   
  420e30:	sbb    BYTE PTR [ebx-0x98d414],al
  420e36:	int3   
  420e37:	call   FWORD PTR [edx+0x12ecd4ff]
  420e3d:	(bad)  
  420e3e:	(bad)  
  420e3f:	jmp    FWORD PTR [edx-0x1]
  420e42:	mov    cs,esp
  420e44:	aad    0xff
  420e46:	(bad)  
  420e47:	(bad)  
  420e48:	jmp    0x420e4a
  420e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e4c:	fwait
  420e4d:	inc    DWORD PTR [eax]
  420e4f:	(bad)  
  420e50:	fmulp  st(4),st
  420e52:	or     BYTE PTR [ebp+0xff83a9],cl
  420e58:	scas   al,BYTE PTR es:[edi]
  420e59:	jmp    FWORD PTR [ebp-0x77]
  420e5c:	jae    0x420e5e
  420e5e:	inc    DWORD PTR [eax]
  420e60:	js     0x420e61
  420e62:	(bad)  
  420e63:	ss jbe 0x420e66
  420e66:	int3   
  420e67:	add    BYTE PTR [ebp+0x6afed689],bh
  420e6d:	inc    DWORD PTR [eax]
  420e6f:	mov    DWORD PTR ds:0x20f3c6ff,edx
  420e75:	add    BYTE PTR [ecx+0x4b00d2cc],cl
  420e7b:	mov    ds:0xff43,al
  420e80:	int    0xcc
  420e82:	add    bl,ah
  420e84:	and    cl,ah
  420e86:	(bad)  
  420e87:	jmp    DWORD PTR [eax+0x5c7ae700]
  420e8d:	add    DWORD PTR [eax],0xffffffff
  420e90:	loop   0x420e91
  420e92:	sbb    eax,DWORD PTR [edx+0x83b3]
  420e98:	cmp    edi,0x23
  420e9b:	xchg   DWORD PTR [edx-0x20000001],eax
  420ea1:	add    al,dl
  420ea3:	arpl   WORD PTR [ebp+0x0],si
  420ea6:	int3   
  420ea7:	add    BYTE PTR [ebp-0x1],al
  420eaa:	fisttp DWORD PTR [edi-0xff0010]
  420eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb1:	add    BYTE PTR [edi-0x29],ah
  420eb4:	mov    dh,0x0
  420eb6:	(bad)  
  420eb7:	call   FWORD PTR [edx-0x1]
  420eba:	inc    ebx
  420ebb:	nop
  420ebc:	jb     0x420e41
  420ebe:	inc    DWORD PTR [eax]
  420ec0:	mov    BYTE PTR [eax],al
  420ec2:	hlt    
  420ec3:	push   es
  420ec4:	xor    edi,edi
  420ec6:	add    bh,bh
  420ec8:	mov    edx,0xc46a6b89
  420ecd:	(bad)  
  420ece:	(bad)  
  420ecf:	inc    DWORD PTR [ecx-0x34]
  420ed2:	push   esp
  420ed3:	xor    al,0xbd
  420ed5:	int3   
  420ed6:	(bad)  
  420ed7:	call   DWORD PTR [ebx-0x7d]
  420eda:	xor    edi,DWORD PTR ds:0x8383ff8b
  420ee0:	cmp    edi,edi
  420ee2:	enter  0xa3b4,0xff
  420ee6:	add    BYTE PTR [eax],al
  420ee8:	sub    eax,0x9f757a00
  420eed:	inc    DWORD PTR [ebx-0x39333701]
  420ef3:	sub    ah,al
  420ef5:	inc    DWORD PTR [eax]
  420ef7:	push   DWORD PTR [ecx]
  420ef9:	add    BYTE PTR [eax-0xff2648],cl
  420eff:	add    BYTE PTR ds:0xafef1383,ch
  420f05:	inc    DWORD PTR [ebx-0xb00f701]
  420f0b:	ret    
  420f0c:	or     eax,DWORD PTR [eax]
  420f0e:	mov    DWORD PTR [eax],eax
  420f10:	inc    ebp
  420f11:	add    BYTE PTR [edi-0x7a],dh
  420f14:	cmp    bh,0xcc
  420f17:	int3   
  420f18:	gs mov esp,eax
  420f1b:	aad    0xc5
  420f1d:	cmp    edi,0xffffffff
  420f20:	pop    edx
  420f21:	add    ah,ah
  420f23:	push   ecx
  420f24:	loop   0x420f25
  420f26:	(bad)  
  420f27:	(bad)  
  420f28:	mov    eax,0x12086cff
  420f2d:	add    bh,bh
  420f2f:	int3   
  420f30:	ret    0xbfff
  420f33:	dec    esi
  420f34:	add    eax,0xbdccff83
  420f39:	call   FWORD PTR [edx]
  420f3b:	add    al,0x87
  420f3d:	cmp    edi,0x0
  420f40:	fdivr  st,st(7)
  420f42:	jp     0x420efa
  420f44:	iret   
  420f45:	add    BYTE PTR [ebx-0x28ff2c7d],al
  420f4b:	or     ecx,DWORD PTR [ebx-0x5033ff01]
  420f51:	jmp    edx
  420f53:	cmp    DWORD PTR [edx-0x6cff0100],ecx
  420f59:	jmp    DWORD PTR [ecx-0xcd71]
  420f5f:	inc    DWORD PTR [ebp-0x1]
  420f62:	push   eax
  420f63:	and    al,BYTE PTR [ecx+0x2b00ccff]
  420f69:	add    BYTE PTR [ecx],al
  420f6b:	(bad)  
  420f6c:	push   esi
  420f6d:	add    bh,bh
  420f6f:	sub    DWORD PTR [edi+0x0],0xffffffa0
  420f73:	xor    esp,DWORD PTR [ecx]
  420f75:	inc    DWORD PTR [eax]
  420f77:	add    BYTE PTR [esi],dl
  420f79:	add    BYTE PTR [edi+0x9],ch
  420f7c:	sub    eax,DWORD PTR [eax]
  420f7e:	add    BYTE PTR [ebx-0x12fb00df],al
  420f84:	in     al,0x0
  420f86:	mov    edi,edi
  420f88:	jne    0x420f8a
  420f8a:	test   BYTE PTR [edi+0x8900],al
  420f90:	(bad)  
  420f93:	add    BYTE PTR [ebx],0x83
  420f96:	inc    DWORD PTR [eax]
  420f98:	into   
  420f99:	jmp    esp
  420f9b:	xor    eax,0xcc0000a0
  420fa0:	mov    WORD PTR [ebx-0x7622ed4c],es
  420fa6:	add    bh,bh
  420fa8:	xor    eax,DWORD PTR [eax]
  420faa:	or     dl,bl
  420fac:	cmp    bh,0xff
  420faf:	int3   
  420fb0:	push   esp
  420fb1:	add    BYTE PTR [ecx-0xbeeb],al
  420fb7:	(bad)  
  420fb8:	in     al,dx
  420fb9:	add    BYTE PTR [edx-0x7cff7e53],dl
  420fbf:	(bad)  
  420fc0:	sti    
  420fc1:	add    cl,bl
  420fc3:	in     al,dx
  420fc4:	or     al,0xff
  420fc6:	(bad)  
  420fc7:	push   DWORD PTR [eax+eax*1+0x51598d]
  420fce:	(bad)  
  420fcf:	jmp    FWORD PTR [eax-0x391f5101]
  420fd5:	(bad)  
  420fd6:	inc    DWORD PTR [eax]
  420fd8:	lahf   
  420fd9:	mov    DWORD PTR [ebx],ebp
  420fdb:	pop    esi
  420fdc:	dec    edx
  420fdd:	mov    edi,edi
  420fdf:	dec    DWORD PTR [ecx-0x1]
  420fe2:	mov    dl,0xd
  420fe4:	scas   al,BYTE PTR es:[edi]
  420fe5:	add    ah,cl
  420fe7:	call   ebx
  420fe9:	add    BYTE PTR [ebp-0xcc8c],bl
  420fef:	add    DWORD PTR [ecx-0x1],0xffffffd6
  420ff3:	sbb    al,BYTE PTR [ebx-0x2633ff01]
  420ff9:	inc    DWORD PTR [ecx+esi*4+0xffdd]
  421000:	push   esi
  421001:	mov    DWORD PTR [ecx+0xff10e3],ebx
  421007:	mov    DWORD PTR [edx-0x653c8001],ebx
  42100d:	dec    esp
  42100f:	jmp    FWORD PTR [edx]
  421011:	jmp    DWORD PTR [eax-0x3f]
  421014:	jne    0x420f99
  421016:	(bad)  
  421017:	jmp    DWORD PTR [edi+0x31626bff]
  42101d:	add    bh,bh
  42101f:	inc    DWORD PTR [edi+edi*8]
  421022:	inc    edi
  421023:	bound  ebp,QWORD PTR [eax]
  421025:	(bad)  
  421026:	inc    DWORD PTR [ebx-0x46cd00b6]
  42102c:	mov    cl,0xff
  42102e:	mov    edi,edi
  421030:	cmp    DWORD PTR [ebx-0x62f400],eax
  421036:	inc    DWORD PTR [eax]
  421038:	add    DWORD PTR [eax],0xff6b86fb
  42103e:	dec    esp
  421040:	mov    cl,0xff
  421042:	dec    ecx
  421043:	addr16 daa 
  421045:	add    BYTE PTR [ebx+0x5bcc6400],al
  42104b:	shl    BYTE PTR [edi],0xff
  42104e:	(bad)  
  42104f:	dec    DWORD PTR ds:0x7fc090cc
  421055:	(bad)  
  421056:	(bad)  
  421057:	(bad)  
  421058:	sti    
  421059:	(bad)  
  42105a:	mov    edi,0x83f43e
  42105f:	add    BYTE PTR [eax-0x8fb9977],dl
  421065:	inc    DWORD PTR [eax]
  421067:	(bad)  
  421068:	out    dx,eax
  421069:	and    DWORD PTR [edx+0xcc576c],0xffffff83
  421070:	scas   al,BYTE PTR es:[edi]
  421071:	xor    DWORD PTR ds:0xffff9597,0x0
  421078:	xor    al,0xff
  42107a:	adc    DWORD PTR [ebx-0x3300ff0e],esp
  421080:	test   DWORD PTR [eax],eax
  421082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421083:	mov    ds:0xff00ff13,eax
  421088:	test   eax,0x98da0e83
  42108d:	int3   
  42108e:	(bad)  
  42108f:	call   FWORD PTR [edx-0x7902ff01]
  421095:	add    bh,bh
  421097:	mov    DWORD PTR [edx+0x5a8f35ff],ebp
  42109d:	mov    esp,ecx
  42109f:	add    BYTE PTR [esi+0x0],dh
  4210a2:	dec    esp
  4210a3:	ja     0x4210a8
  4210a5:	(bad)  
  4210a6:	dec    DWORD PTR [ecx-0x6253ff33]
  4210ac:	jge    0x421031
  4210ae:	inc    DWORD PTR [eax]
  4210b0:	ud0    ebp,DWORD PTR [edx+ebx*2-0x7c0076c4]
  4210b8:	ds int3 
  4210ba:	lahf   
  4210bb:	mov    eax,ds:0xffffffe0
  4210c0:	push   DWORD PTR es:[edi+edx*8-0xff7ce5]
  4210c8:	outs   dx,BYTE PTR ds:[esi]
  4210c9:	add    DWORD PTR [eax-0xff8f21],0xffffffff
  4210d0:	cmp    bh,bh
  4210d2:	jb     0x42107e
  4210d4:	ins    BYTE PTR es:[edi],dx
  4210d5:	(bad)  
  4210d6:	(bad)  
  4210d7:	dec    edx
  4210d9:	dec    DWORD PTR [ecx-0x4e]
  4210dc:	ret    
  4210dd:	(bad)  
  4210de:	(bad)  
  4210df:	inc    DWORD PTR [ebx]
  4210e1:	int3   
  4210e2:	jae    0x421067
  4210e4:	and    bh,bh
  4210e6:	inc    DWORD PTR [eax]
  4210e8:	iret   
  4210e9:	and    DWORD PTR [edi-0xc48a],0xffffff89
  4210f0:	add    DWORD PTR [eax],eax
  4210f2:	ficomp WORD PTR [edx+0xcc4c]
  4210f8:	xchg   edi,eax
  4210f9:	jmp    DWORD PTR [esi]
  4210fb:	or     BYTE PTR ds:0xd7cc83ff,0xcc
  421102:	ins    BYTE PTR es:[edi],dx
  421103:	mov    ah,0xe3
  421105:	(bad)  
  421106:	(bad)  
  421107:	(bad)  
  421108:	mov    ecx,0x7a896d00
  42110d:	int3   
  42110e:	inc    DWORD PTR [eax]
  421110:	popf   
  421111:	add    BYTE PTR [eax+edx*8],bl
  421114:	push   eax
  421115:	dec    esp
  421117:	inc    DWORD PTR [eax-0x1]
  42111a:	out    dx,al
  42111b:	call   FWORD PTR [edi-0x1d000034]
  421121:	cmp    edi,0x38
  421124:	jno    0x421125
  421126:	add    bh,bh
  421128:	fmulp  st(4),st
  42112a:	lea    eax,[ebx-0x7647]
  421130:	daa    
  421131:	inc    DWORD PTR [eax-0x7600f77d]
  421137:	dec    DWORD PTR [edx-0x1]
  42113a:	jp     0x421109
  42113c:	es (bad) 
  42113e:	inc    DWORD PTR [ebx+0x3024ff42]
  421144:	ret    
  421145:	int3   
  421146:	mov    DWORD PTR [eax],eax
  421148:	mov    edi,edi
  42114a:	pop    ss
  42114b:	popf   
  42114c:	(bad)  
  42114e:	add    BYTE PTR [eax],al
  421150:	mov    dl,0x83
  421152:	lods   eax,DWORD PTR fs:[esi]
  421154:	jne    0x4210d9
  421156:	inc    DWORD PTR [eax]
  421158:	dec    ecx
  421159:	jmp    FWORD PTR [ebp-0x73]
  42115c:	jle    0x42115d
  42115e:	(bad)  
  42115f:	call   FWORD PTR [ebx-0x38bf2677]
  421165:	add    BYTE PTR [ecx-0x3e008a00],cl
  42116b:	aad    0xaf
  42116d:	or     esp,0xffffffff
  421170:	or     BYTE PTR [eax],al
  421172:	pop    edx
  421173:	and    DWORD PTR [ebp+0x3c83ff00],esp
  421179:	inc    DWORD PTR [edx-0xb2c0]
  42117f:	dec    edi
  421181:	inc    DWORD PTR [esi]
  421183:	mov    ebp,0x83ff8363
  421188:	(bad)  
  42118a:	add    DWORD PTR [esi],ecx
  42118c:	add    al,BYTE PTR [ebx-0x7ca1007d]
  421192:	test   DWORD PTR [edi],edi
  421194:	icebp  
  421195:	(bad)  
  421196:	(bad)  
  421197:	inc    DWORD PTR [ebx+0x0]
  42119a:	std    
  42119b:	add    BYTE PTR [esi],bh
  42119d:	cmp    edi,0xffffff83
  4211a0:	rol    BYTE PTR [ebx-0x6ffc0f],1
  4211a6:	add    bh,bh
  4211a8:	pushf  
  4211a9:	jmp    DWORD PTR [ebp+0x3a]
  4211ac:	add    edi,edi
  4211ae:	inc    DWORD PTR [ebx-0x40ba00af]
  4211b4:	ret    
  4211b5:	add    BYTE PTR [eax],al
  4211b7:	call   ecx
  4211b9:	dec    DWORD PTR [ebx-0x760e79]
  4211bf:	(bad)  
  4211c0:	cmp    al,0x89
  4211c2:	mov    ebx,0x1e4
  4211c7:	int3   
  4211c8:	sbb    edi,edi
  4211ca:	pop    edi
  4211cb:	mov    gs,WORD PTR [eax]
  4211cd:	int3   
  4211ce:	add    BYTE PTR [ecx+0x3b930000],cl
  4211d4:	lds    ecx,FWORD PTR [ecx-0x7ff01]
  4211da:	inc    eax
  4211db:	dec    ecx
  4211dc:	dec    ebx
  4211dd:	add    BYTE PTR [ebx+0x3083f500],al
  4211e3:	lods   eax,DWORD PTR ds:[esi]
  4211e4:	xchg   ecx,eax
  4211e5:	cmp    edi,0xffffffff
  4211e8:	mov    eax,ds:0xc813e800
  4211ed:	inc    DWORD PTR [eax]
  4211ef:	int3   
  4211f0:	jp     0x4211f1
  4211f2:	add    eax,0xff00f5f3
  4211f7:	add    BYTE PTR [edx-0x34],dl
  4211fa:	sar    esi,cl
  4211fc:	pop    eax
  4211fd:	(bad)  
  4211fe:	inc    DWORD PTR [ebx+0x7242004a]
  421204:	add    edi,edi
  421206:	(bad)  
  421207:	jmp    FWORD PTR [ecx]
  421209:	call   DWORD PTR [edi]
  42120b:	dec    ecx
  42120c:	mov    BYTE PTR [eax],0x0
  42120f:	mov    DWORD PTR [esi],edx
  421211:	add    ah,dl
  421213:	dec    ebx
  421214:	adc    eax,0xe9ffff00
  421219:	jmp    DWORD PTR [esi]
  42121b:	fisttp DWORD PTR [eax+0x43000083]
  421221:	and    esp,0xffffffaa
  421224:	scas   eax,DWORD PTR es:[edi]
  421225:	inc    DWORD PTR [ebx-0x68008000]
  42122b:	call   0x89d4:0xffffff4c
  421232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421233:	popa   
  421234:	and    eax,DWORD PTR [eax]
  421236:	cmp    edi,0x25
  421239:	add    BYTE PTR [edx+0xff9791],dh
  42123f:	jmp    FWORD PTR [edi]
  421241:	cmp    DWORD PTR [ebp-0x30],0xffffffac
  421245:	(bad)  
  421246:	inc    DWORD PTR [ebx-0x207500b6]
  42124c:	inc    edi
  42124d:	add    bh,bh
  42124f:	int3   
  421250:	add    BYTE PTR [eax],al
  421252:	push   esp
  421253:	aam    0xb
  421255:	add    bh,bh
  421257:	(bad)  
  421258:	std    
  421259:	mov    eax,eax
  42125b:	ficom  WORD PTR [eax+0x0]
  42125e:	dec    esp
  421260:	cmc    
  421261:	call   FWORD PTR [edx]
  421263:	sbb    edx,DWORD PTR [edi+0x4400ff00]
  421269:	or     DWORD PTR [edx],0xffffffcf
  42126c:	lahf   
  42126d:	(bad)  
  42126e:	dec    esp
  421270:	aas    
  421271:	dec    DWORD PTR [ebx]
  421273:	add    ch,BYTE PTR [esi+0x1b83ccff]
  421279:	add    cl,cl
  42127b:	sbb    al,0xc
  42127d:	add    BYTE PTR [eax],al
  42127f:	adc    DWORD PTR [ebp-0x1],0x77
  421283:	hlt    
  421284:	or     eax,0xdfffffff
  421289:	mov    DWORD PTR [esi],ecx
  42128b:	push   es
  42128c:	or     edi,edi
  42128e:	add    BYTE PTR [ecx+0xaa7ffc9],cl
  421294:	mov    eax,ds:0x78ff83ff
  421299:	mov    DWORD PTR [ecx-0xff241d],esp
  42129f:	add    BYTE PTR [edi-0x1],cl
  4212a2:	lock test al,0x2f
  4212a5:	mov    DWORD PTR [eax],eax
  4212a7:	call   FWORD PTR [edx-0x7d]
  4212aa:	stc    
  4212ab:	sahf   
  4212ac:	and    eax,DWORD PTR [eax]
  4212ae:	(bad)  
  4212af:	jmp    FWORD PTR [edx+0x0]
  4212b2:	(bad)  
  4212b3:	pop    ss
  4212b4:	dec    ebx
  4212b5:	(bad)  
  4212b6:	(bad)  
  4212b7:	jmp    FWORD PTR [edi]
  4212b9:	mov    DWORD PTR [esi+0x47],eax
  4212bc:	push   0xffffff83
  4212be:	cmp    edi,0x45
  4212c1:	mov    DWORD PTR [edx],eax
  4212c3:	(bad)
  4212c6:	dec    esp
  4212c8:	and    bh,bh
  4212ca:	dec    ebp
  4212cb:	arpl   sp,bx
  4212cd:	(bad)  
  4212ce:	inc    DWORD PTR [eax]
  4212d0:	lods   al,BYTE PTR ds:[esi]
  4212d1:	jmp    FWORD PTR [edi]
  4212d3:	add    DWORD PTR ds:0x1089ffcc,0xffffffcc
  4212da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212db:	or     eax,0xffff8315
  4212e0:	retf   0x85cc
  4212e3:	imul   bl
  4212e5:	(bad)  
  4212e6:	(bad)  
  4212e7:	call   FWORD PTR [ebx-0x60f97e01]
  4212ed:	inc    DWORD PTR [eax]
  4212ef:	add    dh,bl
  4212f1:	xor    DWORD PTR [ebx-0x56],0x7
  4212f5:	int3   
  4212f6:	add    bh,bh
  4212f8:	imul   eax,DWORD PTR [eax],0x35
  4212fb:	inc    edx
  4212fc:	clc    
  4212fd:	add    BYTE PTR [ecx+0x56ff5883],cl
  421303:	adc    al,0x8a
  421305:	inc    DWORD PTR [eax]
  421307:	int3   
  421308:	xchg   ebp,eax
  421309:	jmp    esi
  42130b:	push   ebx
  42130c:	and    bh,bh
  42130e:	inc    DWORD PTR [eax]
  421310:	or     edi,edi
  421312:	out    dx,eax
  421313:	mov    cs,WORD PTR [edi+edi*8-0x1]
  421317:	jmp    DWORD PTR [esi-0x1]
  42131a:	int3   
  42131b:	ja     0x421333
  42131d:	add    bh,bh
  42131f:	mov    DWORD PTR [ebp-0x1],eax
  421322:	sub    BYTE PTR [ebx+ebx*8+0x0],bh
  421326:	add    bh,bh
  421328:	mov    eax,ds:0x2e1aaff
  42132d:	add    bh,bh
  42132f:	add    BYTE PTR [eax-0x192bf400],bh
  421335:	add    bh,bh
  421337:	inc    DWORD PTR [eax-0x602f0977]
  42133d:	(bad)  
  42133e:	(bad)  
  42133f:	inc    DWORD PTR [ebx-0x5246b67d]
  421345:	int3   
  421346:	or     DWORD PTR [ecx+0x382b8353],0x2c
  42134d:	(bad)  
  42134e:	(bad)  
  42134f:	inc    DWORD PTR [edi-0x3a2fab00]
  421355:	mov    esp,ecx
  421357:	dec    DWORD PTR [esp+ecx*8]
  42135a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135b:	xchg   edx,eax
  42135c:	pop    esi
  42135d:	(bad)  
  42135e:	(bad)  
  42135f:	jmp    FWORD PTR [ebx+0x60af64ff]
  421365:	add    DWORD PTR [eax],0x0
  421368:	xlat   BYTE PTR ds:[ebx]
  421369:	add    cl,ch
  42136b:	push   edi
  42136c:	mov    cl,0xff
  42136e:	(bad)  
  42136f:	call   FWORD PTR [ecx-0x1]
  421372:	(bad)  
  421373:	jmp    0x4213bc
  421375:	(bad)  
  421376:	dec    esp
  421378:	and    ah,cl
  42137a:	into   
  42137b:	push   edi
  42137c:	inc    eax
  42137d:	dec    DWORD PTR [ecx+0x76ff4983]
  421383:	jbe    0x421392
  421385:	add    BYTE PTR [ebx+0x48839200],al
  42138b:	xchg   BYTE PTR [edi],dh
  42138d:	add    BYTE PTR [eax],al
  42138f:	inc    DWORD PTR [ebx]
  421391:	(bad)  
  421392:	jmp    0x421325
  421394:	popf   
  421395:	mov    edi,edi
  421397:	add    BYTE PTR [ebx-0xd2c1801],ah
  42139d:	(bad)  
  42139e:	(bad)  
  42139f:	inc    DWORD PTR [eax+eax*1+0x26]
  4213a3:	(bad)  
  4213a4:	out    dx,eax
  4213a5:	mov    edi,edi
  4213a7:	add    BYTE PTR [edi+edi*8],cl
  4213aa:	pop    esi
  4213ab:	mov    ebx,0x89ff002a
  4213b0:	cdq    
  4213b1:	jmp    FWORD PTR [ebx+ebx*1]
  4213b4:	outs   dx,BYTE PTR ds:[esi]
  4213b5:	cmp    edi,0xffffffff
  4213b8:	jns    0x4213ba
  4213ba:	fdivr  QWORD PTR [ebx]
  4213bc:	bound  eax,QWORD PTR [ebx+0x8800ff]
  4213c2:	retf   
  4213c3:	pop    ds
  4213c4:	cmp    eax,DWORD PTR [eax]
  4213c6:	inc    DWORD PTR [ebx-0x62de7c20]
  4213cc:	into   
  4213cd:	add    bh,bh
  4213cf:	dec    ebx
  4213d1:	mov    esi,ebx
  4213d3:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4213d5:	add    BYTE PTR [ebx+0x21ff15ff],al
  4213db:	mov    al,0xdc
  4213dd:	add    DWORD PTR [eax],0xffffff83
  4213e0:	jg     0x42136b
  4213e2:	cli    
  4213e3:	mov    ah,0x5f
  4213e5:	(bad)  
  4213e6:	(bad)  
  4213e7:	jmp    DWORD PTR [edx]
  4213e9:	add    BYTE PTR [edx-0x68],bh
  4213ec:	adc    DWORD PTR [eax],eax
  4213ee:	cmp    edi,0x74
  4213f1:	inc    DWORD PTR [edi]
  4213f3:	adc    ch,cl
  4213f5:	(bad)  
  4213f6:	(bad)  
  4213f7:	jmp    DWORD PTR [edx+0xa99d9ff]
  4213fd:	add    bh,bh
  4213ff:	(bad)  
  421400:	cmp    bh,bh
  421402:	push   esp
  421403:	outs   dx,BYTE PTR ds:[esi]
  421404:	mov    dl,0xff
  421406:	dec    DWORD PTR [ecx+0x36ac0085]
  42140c:	ins    BYTE PTR es:[edi],dx
  42140d:	inc    DWORD PTR [eax]
  42140f:	add    BYTE PTR [ecx+0xeb4bf00],ch
  421415:	add    BYTE PTR [eax],al
  421417:	call   FWORD PTR [edi+0x1cbebfff]
  42141d:	(bad)  
  42141e:	(bad)  
  42141f:	push   DWORD PTR [edx-0x1]
  421422:	mov    ebp,DWORD PTR [edx-0x7c003a]
  421428:	(bad)  
  421429:	inc    DWORD PTR [edi]
  42142b:	ins    DWORD PTR es:[edi],dx
  42142c:	dec    eax
  42142d:	cmp    edi,0x0
  421430:	jg     0x421431
  421432:	(bad)  [ecx+ecx*8-0x5000000]
  421439:	jmp    ebp
  42143b:	cli    
  42143c:	jl     0x42143d
  42143e:	int3   
  42143f:	int3   
  421440:	or     DWORD PTR [ecx-0x33db5296],0xff95ffff
  42144a:	or     eax,0xcc83a1df
  42144f:	mov    edi,edx
  421451:	int3   
  421452:	out    0x8d,al
  421454:	mov    edx,0x7200ffff
  421459:	int3   
  42145a:	repz retf 
  42145c:	sbb    al,0xff
  42145e:	(bad)  
  42145f:	call   DWORD PTR [edi-0x7ff89d7d]
  421465:	dec    DWORD PTR [ecx+0x4bff4e00]
  42146b:	inc    edi
  42146c:	xor    bh,bh
  42146e:	add    ah,cl
  421470:	retf   
  421471:	add    BYTE PTR [esi-0x7c0de8],bl
  421477:	(bad)  
  421478:	jl     0x4213fd
  42147a:	cmc    
  42147b:	push   eax
  42147c:	idiv   bh
  42147e:	int3   
  42147f:	call   esi
  421481:	add    BYTE PTR [edi+0x54],bl
  421484:	sub    al,0xcc
  421486:	(bad)  
  421487:	jmp    DWORD PTR [edi]
  421489:	call   FWORD PTR [edx]
  42148b:	xor    al,dl
  42148d:	(bad)  
  42148e:	dec    esp
  421490:	int3   
  421491:	add    BYTE PTR [ebx-0xf],al
  421494:	cmp    bh,bh
  421496:	inc    DWORD PTR [eax]
  421498:	clc    
  421499:	add    BYTE PTR [ecx-0x2a],dh
  42149c:	aas    
  42149d:	dec    esp
  42149f:	jmp    eax
  4214a1:	add    BYTE PTR [eax+0xa4f2],bh
  4214a7:	mov    DWORD PTR [edx],esi
  4214a9:	add    BYTE PTR [ebx],dl
  4214ab:	mov    al,0x31
  4214ad:	int3   
  4214ae:	add    BYTE PTR [ebx+0x58f1ff0a],al
  4214b4:	into   
  4214b5:	inc    DWORD PTR [eax]
  4214b7:	jmp    edi
  4214b9:	int3   
  4214ba:	dec    edi
  4214bb:	repnz outs dx,BYTE PTR ds:[esi]
  4214bd:	add    bh,bh
  4214bf:	add    BYTE PTR [edx-0x2818797d],dl
  4214c5:	mov    edi,edi
  4214c7:	xor    DWORD PTR [eax+eax*1],0x38
  4214cb:	iret   
  4214cc:	or     DWORD PTR [eax],eax
  4214ce:	(bad)  
  4214cf:	inc    ebp
  4214d1:	call   FWORD PTR [ebx]
  4214d3:	jl     0x4214c3
  4214d5:	add    BYTE PTR [eax],al
  4214d7:	dec    DWORD PTR [ebx-0x1]
  4214da:	xchg   esp,eax
  4214dc:	out    0xcc,eax
  4214de:	add    ah,cl
  4214e0:	cmp    al,0x0
  4214e2:	lea    ebx,[ecx-0x7cc2]
  4214e8:	add    al,0xff
  4214ea:	int    0xf5
  4214ec:	push   es
  4214ed:	(bad)  
  4214ee:	inc    DWORD PTR [ebx-0x3bab3359]
  4214f4:	or     al,0xff
  4214f6:	(bad)  
  4214f7:	jmp    DWORD PTR [ecx+ecx*4]
  4214fa:	test   DWORD PTR [edx],ebx
  4214fc:	icebp  
  4214fd:	(bad)  
  4214fe:	inc    DWORD PTR [eax]
  421500:	xor    bh,bh
  421502:	arpl   si,bx
  421504:	out    0x83,al
  421506:	(bad)  
  421507:	inc    DWORD PTR [edx+0x32ebba89]
  42150d:	add    DWORD PTR [eax],0xffffffff
  421510:	xchg   esi,eax
  421511:	add    al,cl
  421513:	out    dx,al
  421514:	dec    esp
  421515:	dec    DWORD PTR [ecx+0x51ffd383]
  42151b:	cmc    
  42151c:	mov    bh,bh
  42151e:	cmp    edi,0xffffff94
  421521:	sbb    ebp,0xffffffb9
  421524:	je     0x4214a9
  421526:	(bad)  
  421527:	call   FWORD PTR [esi-0x7d]
  42152a:	jo     0x42151e
  42152c:	add    eax,DWORD PTR [eax]
  42152e:	inc    DWORD PTR [eax]
  421530:	pop    es
  421531:	and    DWORD PTR [edi-0x41],0x7b
  421535:	inc    DWORD PTR [eax]
  421537:	add    BYTE PTR [ecx],cl
  421539:	push   DWORD PTR [eax]
  42153b:	push   0xf
  42153d:	int3   
  42153e:	mov    DWORD PTR [ecx-0x172300bd],ecx
  421544:	hlt    
  421545:	add    BYTE PTR [eax],al
  421547:	(bad)  
  421548:	jp     0x4214d3
  42154a:	js     0x4214f4
  42154c:	cs add bh,bh
  42154f:	int3   
  421550:	mov    ds:0x48d97aff,eax
  421555:	(bad)  
  421556:	(bad)  
  421557:	push   DWORD PTR [esi]
  421559:	call   FWORD PTR [ebx+0x19]
  42155c:	sbb    edi,edi
  42155e:	(bad)  
  42155f:	call   DWORD PTR [ebx-0x4f7fbd00]
  421565:	add    ah,cl
  421567:	dec    edi
  421569:	int3   
  42156a:	sub    cl,bl
  42156c:	sbb    al,0x89
  42156e:	add    bh,bh
  421570:	out    dx,al
  421571:	dec    DWORD PTR [ebp+0x833018]
  421577:	dec    DWORD PTR [ebx-0x1]
  42157a:	test   BYTE PTR [edx],dh
  42157c:	aad    0x83
  42157e:	mov    edi,edi
  421580:	ret    0xa900
  421583:	xchg   BYTE PTR [esp+ecx*8-0x380000],ah
  42158a:	daa    
  42158b:	pop    ds
  42158c:	xchg   esp,eax
  42158d:	add    BYTE PTR [eax],al
  42158f:	mov    DWORD PTR [ecx+ecx*4],esi
  421592:	mov    al,0x37
  421594:	lock inc DWORD PTR [eax]
  421597:	jmp    DWORD PTR [esi+0xb4d6ccc]
  42159d:	int3   
  42159e:	cmp    edi,0xffffffc3
  4215a1:	add    BYTE PTR [ebp+0x7b],dh
  4215a4:	dec    ecx
  4215a5:	inc    DWORD PTR [eax]
  4215a7:	(bad)  
  4215a8:	jp     0x4215aa
  4215aa:	cli    
  4215ab:	div    BYTE PTR [edx]
  4215ad:	(bad)  
  4215ae:	dec    DWORD PTR [ecx-0xc83ff32]
  4215b4:	adc    DWORD PTR [eax],eax
  4215b6:	add    DWORD PTR [eax],0x49
  4215b9:	add    BYTE PTR [edx+0x30],dh
  4215bc:	jnp    0x4215bd
  4215be:	add    BYTE PTR [eax],al
  4215c0:	loop   0x4215c1
  4215c2:	mov    edx,0x89006954
  4215c7:	jmp    FWORD PTR [ebx-0x5f829b00]
  4215cd:	(bad)  
  4215ce:	inc    DWORD PTR [eax]
  4215d0:	adc    al,0xcc
  4215d2:	in     al,dx
  4215d3:	sbb    ch,bh
  4215d5:	inc    DWORD PTR [ebx+0x5fff1aff]
  4215db:	adc    eax,ecx
  4215dd:	add    BYTE PTR [eax],al
  4215df:	mov    DWORD PTR [ecx+0x0],ebx
  4215e2:	mov    dl,0x76
  4215e4:	ss (bad) 
  4215e6:	(bad)  
  4215e7:	(bad)  
  4215e8:	jge    0x4215ea
  4215ea:	jbe    0x42160d
  4215ec:	push   ss
  4215ed:	int3   
  4215ee:	add    bh,bh
  4215f0:	inc    esp
  4215f1:	jmp    FWORD PTR [edx-0xffba41]
  4215f7:	(bad)  
  4215f8:	mov    esp,0xf91988ff
  4215fd:	int3   
  4215fe:	add    bh,bh
  421600:	lahf   
  421601:	jmp    FWORD PTR ds:0xa5c1
  421607:	push   edx
  421609:	inc    DWORD PTR [edi]
  42160b:	pusha  
  42160c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42160d:	int3   
  42160e:	(bad)  
  42160f:	(bad)  
  421610:	cmp    al,BYTE PTR [eax]
  421612:	retf   
  421613:	imul   bl
  421615:	inc    DWORD PTR [eax]
  421617:	add    BYTE PTR [ecx+0x5e1aa300],ah
  42161d:	(bad)  
  42161e:	(bad)  
  42161f:	inc    DWORD PTR [eax+eax*1+0x406db9]
  421626:	(bad)  
  421627:	push   DWORD PTR [eax+0x0]
  42162a:	daa    
  42162b:	rol    BYTE PTR [eax-0x1],cl
  42162e:	(bad)  
  42162f:	call   FWORD PTR [eax]
  421631:	call   FWORD PTR [esi+0x839d1e]
  421637:	and    DWORD PTR [ecx],0xffffffff
  42163a:	cmp    bh,BYTE PTR [eax]
  42163c:	aas    
  42163d:	inc    DWORD PTR [ebx+0x54ffdbff]
  421643:	cmp    DWORD PTR [edx-0x3e7cff7d],edx
  421649:	int3   
  42164a:	cmp    al,0xec
  42164c:	loope  0x42164d
  42164e:	add    BYTE PTR [eax],al
  421650:	(bad)  
  421651:	(bad)  
  421652:	call   0x141a955
  421657:	(bad)  
  421658:	stc    
  421659:	add    cl,ah
  42165b:	arpl   WORD PTR [ebx-0x1],si
  42165e:	add    DWORD PTR [eax],0x3f
  421661:	dec    DWORD PTR [edi-0xb21c]
  421667:	add    BYTE PTR [ebp+0x441d69ff],dh
  42166d:	int3   
  42166e:	add    BYTE PTR [eax],al
  421670:	mov    dl,0x0
  421672:	ret    
  421673:	jbe    0x4216f2
  421675:	int3   
  421676:	dec    esp
  421678:	cmp    al,0xff
  42167a:	loop   0x421668
  42167c:	mov    esp,0xc6ffffff
  421681:	call   FWORD PTR [ecx]
  421683:	into   
  421684:	iret   
  421685:	dec    esp
  421687:	add    dl,ah
  421689:	call   DWORD PTR [esi]
  42168b:	mov    edi,DWORD PTR [ebx+0x50000ff]
  421691:	int3   
  421692:	push   0xffffffa0
  421694:	daa    
  421695:	inc    DWORD PTR [ebx+0x67ff97ff]
  42169b:	and    BYTE PTR [ecx-0x1],dh
  42169e:	(bad)  
  42169f:	(bad)  
  4216a0:	stc    
  4216a1:	and    ecx,0xffffffc3
  4216a4:	test   BYTE PTR [eax],0x0
  4216a7:	jmp    FWORD PTR [eax+eax*1-0x20]
  4216ab:	and    DWORD PTR [edx],ecx
  4216ad:	int3   
  4216ae:	(bad)  
  4216af:	call   FWORD PTR [edi-0x1]
  4216b2:	and    eax,0xff003b68
  4216b7:	adc    DWORD PTR [ecx-0x1],0x61
  4216bb:	pop    eax
  4216bc:	sar    bh,cl
  4216be:	inc    DWORD PTR [eax]
  4216c0:	add    al,0x0
  4216c2:	add    edx,ebp
  4216c4:	add    eax,0xe6ffffff
  4216c9:	mov    edi,edx
  4216cb:	dec    esi
  4216cc:	or     al,0x89
  4216ce:	inc    DWORD PTR [eax]
  4216d0:	inc    BYTE PTR [ebx-0x330081b5]
  4216d6:	mov    DWORD PTR [eax],eax
  4216d8:	sar    edi,1
  4216da:	adc    BYTE PTR [edi],bh
  4216dc:	inc    edx
  4216dd:	inc    DWORD PTR [ebx+0xf000e83]
  4216e3:	xlat   BYTE PTR ds:[ebx]
  4216e4:	or     BYTE PTR [eax],al
  4216e6:	inc    DWORD PTR [eax]
  4216e8:	stc    
  4216e9:	adc    DWORD PTR [eax+edi*1],0xffffffae
  4216ed:	add    BYTE PTR [ebx+0x2d89f7cc],al
  4216f3:	nop
  4216f4:	cdq    
  4216f5:	(bad)  
  4216f6:	(bad)  
  4216f7:	dec    DWORD PTR [ebx+0x0]
  4216fa:	push   ecx
  4216fb:	mov    BYTE PTR [esi+0x0],ah
  4216fe:	add    BYTE PTR [ebx+0x3e2900b8],al
  421704:	cwde   
  421705:	int3   
  421706:	add    BYTE PTR [ebx+0x53faff90],al
  42170c:	push   ss
  42170d:	add    BYTE PTR [ebx-0x6b7caf00],al
  421713:	cmp    ebp,DWORD PTR [edx-0x34]
  421716:	(bad)  
  421717:	call   FWORD PTR [ebx+eax*4-0x7c25a212]
  42171e:	inc    DWORD PTR [eax]
  421720:	out    0x0,al
  421722:	dec    ebp
  421723:	jp     0x4216e8
  421725:	add    BYTE PTR [ebx-0x3c763d01],al
  42172b:	xchg   edx,eax
  42172c:	jne    0x42172e
  42172e:	add    BYTE PTR [eax],al
  421730:	and    WORD PTR [edx+0xff28e1],0xffff
  421738:	mov    DWORD PTR fs:[edi+0xff0f32],ebx
  42173f:	inc    DWORD PTR [eax-0x1]
  421742:	mov    WORD PTR [edx+0x0],es
  421745:	(bad)  
  421746:	(bad)  
  421747:	(bad)  
  421748:	aas    
  421749:	dec    DWORD PTR [edi-0x7c001eb8]
  42174f:	add    BYTE PTR [edi],dh
  421751:	jmp    DWORD PTR [eax]
  421753:	fstp   st(4)
  421755:	(bad)  
  421756:	dec    DWORD PTR [ecx-0xdfb00d2]
  42175c:	sub    eax,0x35ff8300
  421761:	(bad)  
  421762:	cmp    al,BYTE PTR [esi+ebx*2+0x4a00ffcc]
  421769:	mov    DWORD PTR [ebx-0x54],eax
  42176c:	pop    ebx
  42176d:	add    BYTE PTR [eax],al
  42176f:	add    al,dh
  421771:	add    dl,cl
  421773:	adc    BYTE PTR [ebp+0x0],ah
  421776:	add    BYTE PTR [ebx-0x38e3fff3],al
  42177c:	rol    BYTE PTR [eax],cl
  42177e:	int3   
  42177f:	int3   
  421780:	add    BYTE PTR es:[edx+0x31],dh
  421784:	sbb    al,BYTE PTR [eax]
  421786:	(bad)  
  421787:	dec    esp
  421789:	add    al,al
  42178b:	xor    BYTE PTR ds:0xc0ffff89,bl
  421791:	jmp    FWORD PTR [ecx]
  421793:	arpl   WORD PTR [ecx],dx
  421795:	dec    DWORD PTR [ecx+0x31ff89ff]
  42179b:	test   BYTE PTR [ebx],al
  42179d:	inc    DWORD PTR [eax]
  42179f:	(bad)  
  4217a0:	cmp    eax,0xa6ba3900
  4217a5:	(bad)  
  4217a6:	(bad)  
  4217a7:	call   DWORD PTR [ecx-0x1]
  4217aa:	jb     0x4217b9
  4217ac:	cwde   
  4217ad:	inc    DWORD PTR [eax]
  4217af:	call   DWORD PTR [ecx-0x554d1e77]
  4217b5:	int3   
  4217b6:	inc    DWORD PTR [eax]
  4217b8:	xchg   ebp,eax
  4217b9:	inc    DWORD PTR [ebp+0x53]
  4217bc:	je     0x4217be
  4217be:	(bad)  
  4217bf:	call   FWORD PTR [esi+0x54fd73ff]
  4217c5:	add    bh,bh
  4217c7:	add    BYTE PTR [edx],cl
  4217c9:	add    esi,0x3f
  4217cc:	xchg   ecx,eax
  4217cd:	add    BYTE PTR [eax],al
  4217cf:	dec    ebp
  4217d1:	mov    DWORD PTR [ecx],ebp
  4217d3:	out    dx,eax
  4217d4:	int3   
  4217d5:	add    DWORD PTR [ebx-0x5c00e134],0x4b
  4217dc:	iret   
  4217dd:	dec    esp
  4217df:	add    BYTE PTR [edi],ah
  4217e1:	add    BYTE PTR ds:0xff00fd4d,bh
  4217e7:	add    BYTE PTR [edx],dh
  4217e9:	call   FWORD PTR [edi]
  4217eb:	adc    BYTE PTR [edi],al
  4217ed:	add    bh,bh
  4217ef:	int3   
  4217f0:	mov    cl,0x0
  4217f2:	call   0x61ff:0xff896817
  4217f9:	add    BYTE PTR [esi-0x6],dh
  4217fc:	dec    eax
  4217fd:	int3   
  4217fe:	(bad)  
  4217ff:	(bad)  
  421800:	fld    DWORD PTR [eax]
  421802:	pop    esi
  421803:	xchg   esp,eax
  421804:	das    
  421805:	(bad)  
  421806:	(bad)  
  421807:	push   DWORD PTR [edi-0x1]
  42180a:	sub    BYTE PTR [edi-0x76ff00e4],0x2
  421811:	call   DWORD PTR [eax+0x67]
  421814:	retf   
  421815:	inc    DWORD PTR [eax]
  421817:	dec    DWORD PTR [ecx-0x1]
  42181a:	dec    eax
  42181b:	cmp    BYTE PTR ds:[eax],al
  42181e:	mov    edi,edi
  421820:	rol    BYTE PTR [eax],0xa2
  421823:	dec    eax
  421824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421825:	int3   
  421826:	add    ah,cl
  421828:	imul   edi,edi,0x38
  42182b:	xlat   BYTE PTR ds:[ebx]
  42182c:	inc    edi
  42182d:	inc    DWORD PTR [eax]
  42182f:	jmp    DWORD PTR [eax]
  421831:	dec    ecx
  421833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421834:	mov    esi,0x65ff0000
  421839:	add    BYTE PTR [edx+esi*1],bh
  42183c:	call   0x3f00:0x4d83ffff
  421843:	and    eax,0xffff8316
  421848:	imul   eax,DWORD PTR [eax],0x2d
  42184b:	and    al,0x7c
  42184d:	(bad)  
  42184e:	(bad)  
  42184f:	jmp    DWORD PTR [ecx-0x79acff01]
  421855:	cmp    edi,0xffffffff
  421858:	sub    al,0x83
  42185a:	(bad)  
  42185b:	or     al,0x54
  42185d:	int3   
  42185e:	inc    DWORD PTR [eax]
  421860:	out    dx,al
  421861:	add    BYTE PTR [edx+0x65],dl
  421864:	or     edi,edi
  421866:	dec    DWORD PTR [ecx+0x4dd383f4]
  42186c:	pop    es
  42186d:	add    bh,bh
  42186f:	(bad)  
  421870:	mov    ebp,0xd65e6f00
  421875:	inc    DWORD PTR [eax]
  421877:	int3   
  421878:	(bad)  
  421879:	int3   
  42187a:	mov    ebx,0xff0021
  42187f:	add    BYTE PTR [eax+0x1ec932ff],dl
  421885:	(bad)  
  421886:	(bad)  
  421887:	jmp    DWORD PTR [esi]
  421889:	inc    DWORD PTR [esi-0x3d]
  42188c:	loop   0x42188d
  42188e:	add    DWORD PTR [eax],0xffffffc3
  421891:	(bad)  
  421892:	clc    
  421893:	inc    edx
  421894:	rol    BYTE PTR [eax],1
  421896:	inc    DWORD PTR [eax]
  421898:	push   edx
  421899:	(bad)  
  42189a:	cmp    al,0x95
  42189c:	pop    ebx
  42189d:	or     DWORD PTR [ecx-0x237c0a01],0xffffffe4
  4218a4:	xor    eax,0x30ff00ff
  4218a9:	add    ah,cl
  4218ab:	mov    dh,0x61
  4218ad:	inc    DWORD PTR [ebx-0x447c2801]
  4218b3:	mov    ecx,0xff74
  4218b8:	mov    eax,0xd2854100
  4218bd:	add    BYTE PTR [eax],al
  4218bf:	(bad)  
  4218c0:	aas    
  4218c1:	inc    edx
  4218c3:	pop    ss
  4218c4:	das    
  4218c5:	dec    DWORD PTR [ecx+0x3fcc83cc]
  4218cb:	mov    DWORD PTR [ebx-0x1],esi
  4218ce:	inc    DWORD PTR [ebx-0xd1276c5]
  4218d4:	pop    ss
  4218d5:	int3   
  4218d6:	inc    DWORD PTR [eax]
  4218d8:	fmul   QWORD PTR [ecx-0x557ef5]
  4218de:	add    BYTE PTR [eax],al
  4218e0:	rol    DWORD PTR [eax],cl
  4218e2:	add    esi,DWORD PTR [eax+0x5a]
  4218e5:	dec    esp
  4218e7:	adc    DWORD PTR [ecx-0x1],0xffffffbd
  4218eb:	xchg   BYTE PTR [eax],bh
  4218ed:	(bad)  
  4218ee:	(bad)  
  4218ef:	inc    DWORD PTR [edx]
  4218f1:	push   DWORD PTR [ebp+edx*8-0x7c000054]
  4218f8:	or     BYTE PTR [eax],al
  4218fa:	mov    edi,0xff7acb
  4218ff:	add    BYTE PTR [ecx+0x4f82e7cc],dh
  421905:	add    bh,bh
  421907:	dec    DWORD PTR [eax-0x1]
  42190a:	(bad)  
  42190b:	xchg   edi,eax
  42190c:	jecxz  0x4218da
  42190e:	or     DWORD PTR [ecx-0x377f0078],0x1e
  421915:	add    BYTE PTR [eax],al
  421917:	add    BYTE PTR [ebx+0x0],dh
  42191a:	jl     0x421905
  42191c:	sub    eax,0x94ffff00
  421921:	jmp    DWORD PTR ds:0xff83ed11
  421927:	and    DWORD PTR [ebx-0x39fbfe7d],0xffffffff
  42192e:	add    BYTE PTR [eax],al
  421930:	imul   eax,DWORD PTR [ebx+0xf6fe35],0xff73ff00
  42193a:	sbb    al,0x18
  42193c:	dec    ecx
  42193d:	add    BYTE PTR [eax],al
  42193f:	add    BYTE PTR [ebx],cl
  421941:	int3   
  421942:	jbe    0x421965
  421944:	inc    edx
  421945:	add    DWORD PTR [eax],0xffffff83
  421948:	jnp    0x421949
  42194a:	cmp    al,0x26
  42194c:	adc    al,0xff
  42194e:	cmp    edi,0x4d
  421951:	or     edi,0xffffffbc
  421954:	fdiv   st(7),st
  421956:	(bad)  
  421957:	jmp    FWORD PTR [edx+0x0]
  42195a:	xor    BYTE PTR [esi-0x33],ch
  42195d:	(bad)  
  42195e:	(bad)  
  42195f:	call   FWORD PTR [esi]
  421961:	dec    DWORD PTR [edi-0x8ee3]
  421967:	jmp    FWORD PTR [ecx+ecx*4]
  42196a:	push   ecx
  42196b:	mov    DWORD PTR [eax-0x7100ff01],eax
  421971:	add    BYTE PTR [edi+eax*2+0x13],cl
  421975:	add    bh,bh
  421977:	mov    DWORD PTR [eax],edi
  421979:	int3   
  42197a:	dec    edi
  42197b:	or     ebp,0x9dffffff
  421981:	add    BYTE PTR [edx-0x1c],bh
  421984:	push   ds
  421985:	inc    DWORD PTR [eax]
  421987:	dec    ebx
  421989:	add    cl,ah
  42198b:	mov    ecx,0xffff00aa
  421990:	sti    
  421991:	inc    DWORD PTR [esi+0x40]
  421994:	sar    bh,cl
  421996:	inc    DWORD PTR [ebx-0x47f73348]
  42199c:	inc    ebx
  42199d:	dec    esp
  42199f:	int3   
  4219a0:	ret    
  4219a1:	push   DWORD PTR [esi-0xff11c0]
  4219a7:	add    dh,al
  4219a9:	add    BYTE PTR [edx],cl
  4219ab:	sbb    BYTE PTR [ebx+eax*4],ah
  4219ae:	dec    esp
  4219b0:	or     al,0x83
  4219b2:	mov    eax,0xcc000bab
  4219b7:	add    ah,cl
  4219b9:	int3   
  4219ba:	int3   
  4219bb:	int3   
  4219bc:	int3   
  4219bd:	int3   
  4219be:	int3   
  4219bf:	int3   
  4219c0:	loop   0x4219c2
  4219c2:	inc    DWORD PTR [eax]
  4219c4:	add    BYTE PTR [ebx+0x6],al
  4219c7:	retf   0x899d
  4219ca:	add    DWORD PTR [eax],0xffffffff
  4219cd:	popf   
  4219ce:	shr    BYTE PTR [ebp-0x52],1
  4219d1:	dec    esp
  4219d3:	inc    DWORD PTR [eax]
  4219d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4219d6:	cmc    
  4219d7:	push   cs
  4219d8:	fcos   
  4219da:	add    bh,bh
  4219dc:	add    BYTE PTR [esi-0x7cf12e92],al
  4219e2:	inc    DWORD PTR [eax]
  4219e4:	dec    DWORD PTR [esi]
  4219e6:	mov    eax,0xff89641e
  4219eb:	(bad)  
  4219ec:	call   ebp
  4219ee:	and    dl,BYTE PTR [ecx-0x4f]
  4219f1:	cmp    edi,0xffffffff
  4219f4:	call   DWORD PTR [ecx-0x18891e]
  4219fa:	add    bh,bh
  4219fc:	sbb    DWORD PTR [ecx+ecx*1],0x36
  421a00:	test   DWORD PTR [eax],eax
  421a02:	(bad)  
  421a03:	dec    DWORD PTR [ecx+0x199c2376]
  421a09:	inc    DWORD PTR [ebx-0x41017c34]
  421a0f:	hlt    
  421a10:	mov    ah,0xff
  421a12:	(bad)  
  421a13:	(bad)  
  421a14:	(bad)  
  421a15:	jmp    0x421a60
  421a17:	out    0x54,al
  421a19:	inc    DWORD PTR [eax]
  421a1b:	(bad)  
  421a1c:	call   ebp
  421a1e:	push   edx
  421a1f:	out    0xdf,al
  421a21:	inc    DWORD PTR [eax]
  421a23:	int3   
  421a24:	(bad)  
  421a25:	mov    ebp,0xff77d534
  421a2a:	(bad)  
  421a2b:	(bad)  
  421a2c:	jmp    DWORD PTR [ecx-0x7cf47445]
  421a32:	mov    DWORD PTR [ebx-0x5ddd757d],eax
  421a38:	rol    BYTE PTR [ebx-0x4c760100],cl
  421a3e:	pop    edi
  421a3f:	fld    DWORD PTR [edx]
  421a41:	inc    DWORD PTR [eax]
  421a43:	mov    DWORD PTR [ebx-0x3162da20],eax
  421a49:	int3   
  421a4a:	add    BYTE PTR [ebx-0x3d8de401],al
  421a50:	xchg   ebx,eax
  421a51:	(bad)  
  421a52:	(bad)  
  421a53:	dec    DWORD PTR [ecx-0x62ee7796]
  421a59:	add    BYTE PTR [ecx-0x4c230034],cl
  421a5f:	test   BYTE PTR [esi+0xff83],bl
  421a65:	mov    cl,0x6d
  421a67:	inc    esp
  421a68:	gs add bh,bh
  421a6b:	add    bh,bh
  421a6d:	ror    BYTE PTR [esi-0x330008bb],1
  421a73:	add    BYTE PTR [eax],al
  421a75:	popf   
  421a76:	lods   eax,DWORD PTR ds:[esi]
  421a77:	mov    dl,0xf5
  421a79:	add    bh,bh
  421a7b:	add    bh,bh
  421a7d:	(bad)  [ecx+edx*1+0x55]
  421a81:	add    BYTE PTR [ebx-0x1658337d],al
  421a87:	out    dx,eax
  421a88:	pop    DWORD PTR [ebx+0x1e0083cc]
  421a8e:	add    bl,BYTE PTR [esi+0x79]
  421a91:	int3   
  421a92:	add    DWORD PTR [eax],0xffffffff
  421a95:	dec    esi
  421a96:	cmc    
  421a97:	jmp    0x4319e7
  421a9c:	dec    DWORD PTR [edi-0x7c1bf5c9]
  421aa2:	cmp    edi,0x0
  421aa5:	add    al,0x8b
  421aa7:	stos   DWORD PTR es:[edi],eax
  421aa8:	cmc    
  421aa9:	(bad)  
  421aaa:	(bad)  
  421aab:	inc    DWORD PTR [eax]
  421aad:	mov    eax,0x2a5014
  421ab2:	(bad)  
  421ab3:	dec    DWORD PTR [ecx-0x74e328ec]
  421ab9:	add    DWORD PTR [ebx-0x150a0001],0x2d
  421ac0:	mov    al,0xff
  421ac2:	(bad)  
  421ac3:	inc    DWORD PTR [eax]
  421ac5:	cs jp  0x421aee
  421ac8:	sub    eax,0xff890000
  421acd:	jb     0x421aed
  421acf:	out    0x7b,al
  421ad1:	(bad)  
  421ad2:	inc    DWORD PTR [eax]
  421ad4:	add    DWORD PTR [eax],0xffffffe4
  421ad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ad8:	mov    BYTE PTR [ebx+0x43ff0000],al
  421ade:	enter  0x25d4,0xff
  421ae2:	add    BYTE PTR [ecx-0x63b3f01],cl
  421ae8:	clc    
  421ae9:	(bad)  
  421aea:	(bad)  
  421aeb:	(bad)  
  421aec:	call   ecx
  421aee:	mov    ecx,0x83cc01e8
  421af3:	int3   
  421af4:	(bad)  
  421af5:	mov    ebp,0x833d5149
  421afa:	inc    DWORD PTR [eax]
  421afc:	call   DWORD PTR [edi+eiz*8-0x33ff248b]
  421b03:	add    BYTE PTR [eax],al
  421b05:	mov    BYTE PTR [ecx-0x13],ah
  421b08:	or     eax,0x83ccccff
  421b0d:	add    esp,DWORD PTR [ebx+0x38]
  421b10:	sub    al,BYTE PTR [eax]
  421b12:	(bad)  
  421b13:	dec    esp
  421b15:	fadd   st,st(4)
  421b17:	test   eax,0xffff0063
  421b1c:	call   FWORD PTR [ecx-0x2f]
  421b1f:	fidivr DWORD PTR [eax-0x7d]
  421b22:	add    bh,bh
  421b24:	dec    DWORD PTR [edi+0x38ac87]
  421b2a:	add    bh,bh
  421b2c:	(bad)  
  421b2d:	clc    
  421b2e:	adc    DWORD PTR [edi],ebx
  421b30:	push   es
  421b31:	add    BYTE PTR [ebx-0x32a00001],al
  421b37:	popa   
  421b38:	jmp    0x9dc0:0xcc
  421b3f:	xor    edx,ebx
  421b41:	int3   
  421b42:	(bad)  
  421b43:	inc    DWORD PTR [ebx-0x5a75b282]
  421b49:	add    bh,bh
  421b4b:	inc    DWORD PTR [ebx+0xf4737be]
  421b51:	(bad)  
  421b52:	inc    DWORD PTR [eax]
  421b54:	dec    ecx
  421b56:	shld   DWORD PTR [esi+0x83ff],ecx,cl
  421b5d:	dec    eax
  421b5e:	jne    0x421b46
  421b60:	out    0xff,al
  421b62:	inc    DWORD PTR [eax]
  421b64:	mov    DWORD PTR [edx],ecx
  421b66:	sbb    DWORD PTR [eax+esi*2],ebp
  421b69:	mov    DWORD PTR [ebx+0x35d88300],eax
  421b6f:	jb     0x421b3b
  421b71:	add    DWORD PTR [ebx-0x6ba10001],0x64
  421b78:	mov    WORD PTR [eax],es
  421b7a:	inc    DWORD PTR [ebx+0x504a4b83]
  421b80:	add    BYTE PTR fs:[ebx-0x7dbd7c01],al
  421b87:	pop    edi
  421b88:	mov    ebp,0xffff00ff
  421b8d:	xor    DWORD PTR [edi-0x7c00788c],ebx
  421b93:	add    BYTE PTR [eax],al
  421b95:	and    DWORD PTR [edx-0x4d],0xff83ffb1
  421b9c:	add    bh,cl
  421b9e:	jl     0x421b7c
  421ba0:	mov    bl,0xff
  421ba2:	inc    DWORD PTR [eax]
  421ba4:	jmp    ebx
  421ba6:	jno    0x421b2a
  421ba8:	ins    DWORD PTR es:[edi],dx
  421ba9:	(bad)  
  421baa:	inc    DWORD PTR [eax]
  421bac:	int3   
  421bad:	pop    ss
  421bae:	jg     0x421bcc
  421bb0:	cmp    bh,bh
  421bb2:	dec    esp
  421bb4:	cmp    ebp,0x46
  421bb7:	and    al,0xb4
  421bb9:	add    BYTE PTR [ecx-0x79f43301],cl
  421bbf:	mov    cl,0x91
  421bc1:	int3   
  421bc2:	add    bh,bh
  421bc4:	add    BYTE PTR [esi+0x15],bh
  421bc7:	sub    ch,bh
  421bc9:	(bad)  
  421bca:	(bad)  
  421bcb:	(bad)  
  421bcc:	inc    DWORD PTR [ecx]
  421bce:	jg     0x421bb2
  421bd0:	and    al,0xcc
  421bd2:	add    DWORD PTR [eax],0xffffff83
  421bd5:	lea    edi,[ebp-0x7cd17f]
  421bdb:	add    bh,bh
  421bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bde:	test   DWORD PTR ds:0x83ffcc21,ecx
  421be4:	push   DWORD PTR [edi-0x29]
  421be7:	retf   0xffe6
  421bea:	int3   
  421beb:	int3   
  421bec:	mov    DWORD PTR [esi-0x7e],ecx
  421bef:	mov    ah,cl
  421bf1:	add    BYTE PTR [ebx+0x2e7b89cc],al
  421bf7:	adc    DWORD PTR es:[eax],eax
  421bfa:	inc    DWORD PTR [ebx-0x448a8c34]
  421c00:	aam    0x83
  421c02:	add    BYTE PTR [ebx+0x7c5cc9ff],al
  421c08:	clc    
  421c09:	add    BYTE PTR [eax],al
  421c0b:	add    bh,bh
  421c0d:	(bad)  
  421c0e:	aam    0x35
  421c10:	or     DWORD PTR [eax],eax
  421c12:	int3   
  421c13:	int3   
  421c14:	add    edx,0x19
  421c17:	pop    ebx
  421c18:	aam    0x89
  421c1a:	cmp    edi,0xffffff83
  421c1d:	sub    BYTE PTR [ecx+0xff3cf3],ah
  421c23:	add    DWORD PTR [eax],0xffffff8c
  421c26:	lods   al,BYTE PTR ds:[esi]
  421c27:	daa    
  421c28:	arpl   di,di
  421c2a:	add    BYTE PTR [eax],al
  421c2c:	call   FWORD PTR [ebp+ebx*8-0x23]
  421c30:	pop    edx
  421c31:	cmp    edi,0xffffff83
  421c34:	jmp    FWORD PTR [edi]
  421c36:	daa    
  421c37:	out    dx,al
  421c38:	jmp    0x6332:0xff
  421c3f:	leave  
  421c40:	adc    bh,bh
  421c42:	inc    DWORD PTR [eax]
  421c44:	jmp    DWORD PTR [eiz*2-0x76f7fd]
  421c4b:	inc    DWORD PTR [eax]
  421c4d:	jnp    0x421c40
  421c4f:	jo     0x421bec
  421c51:	dec    DWORD PTR [ecx-0x35fa7d00]
  421c57:	pop    eax
  421c58:	or     eax,DWORD PTR [eax]
  421c5a:	int3   
  421c5b:	add    BYTE PTR [eax],al
  421c5d:	mov    esp,0x739034
  421c62:	inc    DWORD PTR [ebx-0x2b476801]
  421c68:	or     al,BYTE PTR [ebx+0x4cccff00]
  421c6e:	adc    eax,0xff00cf0b
  421c73:	int3   
  421c74:	call   FWORD PTR [esi-0x35]
  421c77:	mov    edx,0xffffff2c
  421c7c:	add    BYTE PTR [edx],al
  421c7e:	sub    edi,eax
  421c80:	jbe    0x421c82
  421c82:	inc    DWORD PTR [eax]
  421c84:	add    DWORD PTR [ecx-0x2f],0x70
  421c88:	add    DWORD PTR [eax],0x51ff00ff
  421c8e:	lods   al,BYTE PTR ds:[esi]
  421c8f:	(bad)  
  421c90:	adc    DWORD PTR [ecx-0xb007c01],ecx
  421c96:	adc    al,BYTE PTR [esi-0x2f]
  421c9c:	(bad)  
  421c9d:	fbstp  TBYTE PTR [ecx+0x69]
  421ca0:	sub    bh,bh
  421ca2:	(bad)  
  421ca3:	(bad)  
  421ca4:	jmp    DWORD PTR [ebp-0x33b88ccf]
  421caa:	add    bh,bh
  421cac:	dec    ebp
  421cae:	sbb    ah,ah
  421cb0:	(bad)  
  421cb1:	inc    DWORD PTR [eax]
  421cb3:	add    ah,cl
  421cb5:	cmp    bl,al
  421cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421cb8:	xchg   ah,cl
  421cba:	add    BYTE PTR [eax],al
  421cbc:	call   FWORD PTR [esi-0x73a98f]
  421cc2:	add    BYTE PTR [ecx+0x69a02083],cl
  421cc8:	int3   
  421cc9:	(bad)  
  421cca:	inc    DWORD PTR [eax]
  421ccc:	int3   
  421ccd:	jne    0x421c6c
  421ccf:	xchg   edx,eax
  421cd0:	mov    dh,0x0
  421cd2:	mov    DWORD PTR [eax],eax
  421cd4:	mov    eax,ebx
  421cd6:	div    eax
  421cd8:	call   0x198:0x83ff00ff
  421cdf:	in     eax,dx
  421ce0:	or     BYTE PTR [eax],al
  421ce2:	add    BYTE PTR [ebx+0x77e794ff],al
  421ce8:	pusha  
  421ce9:	add    BYTE PTR [eax],al
  421ceb:	(bad)  
  421cec:	(bad)  
  421ced:	std    
  421cee:	xchg   eax,ecx
  421cf0:	idiv   bh
  421cf2:	inc    DWORD PTR [eax]
  421cf4:	adc    DWORD PTR [esi+0x2c],0x62
  421cf8:	jmp    0x9902:0x8300ffff
  421cff:	mov    dl,0x6c
  421d01:	add    BYTE PTR [ebx-0x5d66007d],al
  421d07:	mov    dh,BYTE PTR [edi-0x1]
  421d0a:	inc    DWORD PTR [ebx+0x1d6f9400]
  421d10:	dec    ebx
  421d11:	(bad)  
  421d12:	(bad)  
  421d13:	inc    DWORD PTR [eax]
  421d15:	jne    0x421cb0
  421d17:	xor    BYTE PTR [ebx+eax*4-0x7d],dl
  421d1b:	add    bh,bh
  421d1d:	mov    ch,0xe7
  421d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d20:	push   cs
  421d21:	inc    DWORD PTR [ebx-0x11bcff01]
  421d27:	jno    0x421cdf
  421d29:	(bad)  
  421d2a:	inc    DWORD PTR [eax]
  421d2c:	call   FWORD PTR [edi+eiz*1]
  421d2f:	add    al,dh
  421d31:	inc    DWORD PTR [eax]
  421d33:	mov    edi,edi
  421d35:	pop    ecx
  421d36:	push   edi
  421d37:	fidivr DWORD PTR [ebx+eax*4]
  421d3a:	inc    DWORD PTR [eax]
  421d3c:	inc    ebx
  421d3e:	add    ch,BYTE PTR [edx-0xff3365]
  421d44:	dec    DWORD PTR [ebx+eiz*2-0x15]
  421d48:	mov    dh,0xff
  421d4a:	dec    esp
  421d4c:	add    al,bh
  421d4e:	pop    es
  421d4f:	call   0x411e1e
  421d54:	dec    DWORD PTR [edi-0x7c3728e6]
  421d5a:	(bad)  
  421d5b:	(bad)  
  421d5c:	jmp    DWORD PTR [esi]
  421d5e:	dec    esp
  421d5f:	mov    bl,0x72
  421d61:	add    bh,bh
  421d63:	add    DWORD PTR [eax],0xffffffbf
  421d66:	pushf  
  421d67:	imul   esp,esi,0x0
  421d6a:	mov    DWORD PTR [ebx-0x178b2301],eax
  421d70:	adc    edi,edi
  421d72:	add    bh,bh
  421d74:	push   DWORD PTR [eax]
  421d76:	mov    eax,ds:0xff00fc93
  421d7b:	cmp    edi,0x5c
  421d7e:	dec    esp
  421d7f:	pop    esp
  421d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d81:	(bad)  
  421d82:	dec    esp
  421d84:	mov    DWORD PTR [ecx-0x63],ebx
  421d87:	push   0xccffcca0
  421d8c:	call   DWORD PTR [eax-0x7c72531a]
  421d92:	mov    edi,edi
  421d94:	dec    DWORD PTR [esi+0x2a]
  421d97:	push   ds
  421d98:	cmp    bh,bh
  421d9a:	inc    DWORD PTR [eax]
  421d9c:	adc    DWORD PTR [ebx-0x8ed675],0xffffff83
  421da3:	add    BYTE PTR [eax],al
  421da5:	jg     0x421ddd
  421da7:	or     edx,DWORD PTR [ebx-0x1]
  421dad:	fidivr WORD PTR [eax+0x68]
  421db0:	or     al,BYTE PTR [eax]
  421db2:	dec    DWORD PTR [ecx-0x688db201]
  421db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db9:	inc    DWORD PTR [eax]
  421dbb:	(bad)  
  421dbc:	jmp    DWORD PTR [ecx-0x22]
  421dbf:	mov    ds:0xffffff14,eax
  421dc4:	jmp    DWORD PTR [ebx]
  421dc6:	mov    al,0x9c
  421dc8:	jnp    0x421d96
  421dca:	add    BYTE PTR [eax],al
  421dcc:	xor    DWORD PTR [edi-0x9e77a7],0x0
  421dd3:	(bad)  
  421dd4:	push   esi
  421dd6:	cdq    
  421dd7:	and    BYTE PTR [edi-0x330001],cl
  421ddd:	popa   
  421dde:	retf   
  421ddf:	repz rol DWORD PTR [ebx-0x4a007c01],1
  421de6:	shl    BYTE PTR [ecx-0x76000043],0x0
  421ded:	int    0x8e
  421def:	addr16 pushf 
  421df1:	(bad)  
  421df2:	inc    DWORD PTR [ebx+0x6e7b50ff]
  421df8:	imul   eax,DWORD PTR [eax],0xa5ff8383
  421dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dff:	sahf   
  421e00:	addr16 add bh,bh
  421e03:	inc    DWORD PTR [eax]
  421e05:	add    esp,esi
  421e07:	shl    dl,1
  421e09:	mov    DWORD PTR [eax],eax
  421e0b:	(bad)  
  421e0c:	dec    esi
  421e0e:	call   0x41ba0d
  421e13:	mov    edi,edi
  421e15:	push   cs
  421e16:	jbe    0x421e3d
  421e18:	jecxz  0x421e1a
  421e1a:	(bad)  
  421e1b:	(bad)  
  421e1c:	push   DWORD PTR [ebx+eiz*8+0x5e]
  421e20:	adc    ecx,esp
  421e22:	inc    DWORD PTR [ebx+0x10ebdbff]
  421e28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e29:	(bad)  
  421e2a:	(bad)  
  421e2b:	(bad)  
  421e2c:	call   DWORD PTR [esi+edx*1-0x2d]
  421e30:	xchg   edi,edi
  421e32:	cmp    edi,0xffffffff
  421e35:	jne    0x421e5a
  421e37:	xor    al,0x1c
  421e39:	(bad)  
  421e3a:	inc    DWORD PTR [ebx-0x65f87d00]
  421e40:	sbb    edi,edi
  421e42:	add    BYTE PTR [eax],al
  421e44:	add    BYTE PTR [ebp-0x76113e4c],ah
  421e4a:	add    BYTE PTR [eax],al
  421e4c:	push   esp
  421e4e:	cmc    
  421e4f:	int3   
  421e50:	sbb    BYTE PTR [eax],al
  421e52:	add    bh,bh
  421e54:	add    BYTE PTR [edi],ch
  421e56:	fnsave [ebx+0x32]
  421e59:	inc    DWORD PTR [eax]
  421e5b:	(bad)  
  421e5c:	call   DWORD PTR [edx-0x54524]
  421e62:	int3   
  421e63:	add    bh,bh
  421e65:	je     0x421eaf
  421e67:	push   esp
  421e68:	and    DWORD PTR [eax],eax
  421e6a:	add    bh,bh
  421e6c:	(bad)  
  421e6d:	ds aaa 
  421e6f:	(bad)  
  421e70:	test   ah,0xcc
  421e73:	dec    DWORD PTR [ecx+0x5b2a949d]
  421e79:	inc    DWORD PTR [eax]
  421e7b:	inc    DWORD PTR [eax]
  421e7d:	xchg   ecx,eax
  421e7e:	inc    edi
  421e7f:	mov    bl,0x3a
  421e81:	(bad)  
  421e82:	inc    DWORD PTR [eax]
  421e84:	push   ebp
  421e86:	push   ds
  421e87:	(bad)  
  421e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e89:	add    BYTE PTR [eax],al
  421e8b:	add    BYTE PTR [eax],al
  421e8d:	jge    0x421e63
  421e8f:	inc    ebx
  421e90:	sbb    al,0xcc
  421e92:	inc    DWORD PTR [eax]
  421e94:	dec    ebp
  421e96:	pop    ecx
  421e97:	pop    ds
  421e98:	sbb    DWORD PTR [eax],eax
  421e9a:	add    DWORD PTR [eax],0x0
  421e9d:	sub    BYTE PTR [esi],cl
  421e9f:	(bad)  [ecx]
  421ea1:	cmp    edi,0xffffff83
  421ea4:	int3   
  421ea5:	xlat   BYTE PTR ds:[ebx]
  421ea6:	test   BYTE PTR [edi+0x5a],0xff
  421eaa:	add    bh,bh
  421eac:	add    bh,dh
  421eae:	daa    
  421eaf:	add    ah,0xff
  421eb2:	mov    DWORD PTR [ebx+0xc088000],eax
  421eb8:	pop    ecx
  421eb9:	inc    DWORD PTR [eax]
  421ebb:	add    bh,bh
  421ebd:	jg     0x421f23
  421ebf:	ss push es
  421ec1:	dec    esp
  421ec3:	(bad)  
  421ec4:	inc    DWORD PTR [edx+0x41]
  421ec7:	iret   
  421ec8:	xchg   esp,eax
  421ec9:	inc    DWORD PTR [eax]
  421ecb:	add    bh,bh
  421ecd:	mov    WORD PTR [edi+0xff51f6],cs
  421ed3:	add    BYTE PTR [ebx-0x39b77d81],al
  421ed9:	cmp    edi,0xffffffff
  421edc:	add    DWORD PTR [edx],0x5a
  421edf:	retf   
  421ee0:	imul   edi,edi,0x2183ff00
  421ee6:	popa   
  421ee7:	or     ah,BYTE PTR [edx-0x1]
  421eea:	add    DWORD PTR [eax],0x0
  421eed:	test   DWORD PTR [esi],esp
  421eef:	inc    BYTE PTR [ebx+eax*4-0x1]
  421ef3:	(bad)  
  421ef4:	call   FWORD PTR [ecx-0xa4d810]
  421efa:	add    DWORD PTR [eax],0xffffffff
  421efd:	lahf   
  421efe:	pop    esi
  421eff:	jbe    0x421ecf
  421f01:	add    DWORD PTR [eax],0xffffffff
  421f04:	inc    ebp
  421f06:	imul   edi,DWORD PTR [ebx-0xffffa1],0xffffffff
  421f0d:	(bad)  [edi+0x71]
  421f10:	(bad)  
  421f11:	dec    esp
  421f13:	inc    DWORD PTR [ebx+0x7ddf734e]
  421f19:	dec    esp
  421f1b:	(bad)  
  421f1c:	jmp    DWORD PTR [esi-0x5d]
  421f1f:	movzx  edi,bh
  421f22:	inc    DWORD PTR [eax]
  421f24:	int3   
  421f25:	jno    0x421f57
  421f27:	sbb    al,0xb8
  421f29:	(bad)  
  421f2a:	inc    DWORD PTR [eax]
  421f2c:	int3   
  421f2d:	adc    al,BYTE PTR [edx+ebp*8+0xd]
  421f31:	(bad)  
  421f32:	dec    DWORD PTR [ecx+0x72b2ff89]
  421f38:	outs   dx,BYTE PTR ds:[esi]
  421f39:	(bad)  
  421f3a:	(bad)  
  421f3b:	(bad)  
  421f3c:	inc    DWORD PTR [ebx+edx*2+0xccf2af]
  421f43:	inc    DWORD PTR [ebx-0x4ca2a5aa]
  421f49:	(bad)  
  421f4a:	inc    DWORD PTR [eax]
  421f4c:	add    bh,ch
  421f4e:	and    esi,edx
  421f50:	jnp    0x421f52
  421f52:	add    BYTE PTR [ebx-0x50a75501],al
  421f58:	pop    ebp
  421f59:	add    BYTE PTR [eax],al
  421f5b:	add    bh,bh
  421f5d:	xor    BYTE PTR [ebx-0x763377d7],al
  421f63:	(bad)  
  421f64:	call   FWORD PTR [edi-0x3f]
  421f67:	push   ss
  421f68:	fwait
  421f69:	add    bh,bh
  421f6b:	(bad)  
  421f6c:	push   ebp
  421f6e:	js     0x421f8c
  421f70:	(bad)  
  421f71:	inc    DWORD PTR [eax]
  421f73:	int3   
  421f74:	add    ah,al
  421f76:	xor    al,0x17
  421f78:	fdivp  st(7),st
  421f7a:	add    bh,bh
  421f7c:	add    BYTE PTR [ecx],bl
  421f7e:	pop    edi
  421f7f:	jne    0x421f2b
  421f81:	inc    DWORD PTR [eax]
  421f83:	(bad)  
  421f84:	inc    esi
  421f86:	sub    ecx,0xffffffa2
  421f89:	add    ah,cl
  421f8b:	inc    DWORD PTR [eax]
  421f8d:	sub    ah,BYTE PTR [esi]
  421f8f:	or     bl,bl
  421f91:	(bad)  
  421f92:	inc    DWORD PTR [eax]
  421f94:	add    al,bh
  421f96:	xchg   ebx,eax
  421f97:	mov    ebp,DWORD PTR [edx-0x337d0000]
  421f9d:	aaa    
  421f9e:	repnz xor DWORD PTR [edi+edi*8-0x7d],edx
  421fa3:	add    DWORD PTR [eax],0x5d
  421fa6:	cmp    al,0xdf
  421fa8:	jecxz  0x421fa9
  421faa:	add    bh,bh
  421fac:	call   FWORD PTR [ecx+0x35]
  421faf:	ins    BYTE PTR es:[edi],dx
  421fb0:	lods   eax,DWORD PTR ds:[esi]
  421fb1:	cmp    edi,0xffffffff
  421fb4:	int3   
  421fb5:	lods   al,BYTE PTR ds:[esi]
  421fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb7:	inc    esp
  421fb8:	lahf   
  421fb9:	add    BYTE PTR [eax],al
  421fbb:	add    bh,bh
  421fbd:	retf   0xc96b
  421fc0:	int    0xff
  421fc2:	(bad)  
  421fc3:	inc    DWORD PTR [ebx+0x414aaca6]
  421fc9:	(bad)  
  421fca:	inc    DWORD PTR [eax]
  421fcc:	add    BYTE PTR [eax-0x3c],ch
  421fcf:	cmp    dl,BYTE PTR [ecx]
  421fd1:	inc    DWORD PTR [ebx-0x36950100]
  421fd7:	xor    BYTE PTR [edx+0xff00ff],0x34
  421fde:	rcl    BYTE PTR [ebp-0x4e],1
  421fe1:	add    BYTE PTR [eax],al
  421fe3:	add    BYTE PTR [eax],al
  421fe5:	pop    edx
  421fe6:	or     dh,BYTE PTR [esi+ebp*8-0x7c3334]
  421fed:	lock pop ebx
  421fef:	scas   al,BYTE PTR es:[edi]
  421ff0:	das    
  421ff1:	(bad)  
  421ff2:	dec    esp
  421ff4:	jmp    DWORD PTR [ecx+0x0]
  421ff7:	add    eax,0xa3
  421ffc:	dec    esp
  421ffe:	je     0x422075
  422000:	mov    ebx,0xff00
  422005:	xor    eax,ecx
  422007:	test   BYTE PTR [esi-0xff01],0xec
  42200e:	(bad)  
  42200f:	std    
  422010:	add    eax,DWORD PTR [eax]
  422012:	int3   
  422013:	(bad)  
  422014:	dec    DWORD PTR [ebx+0x62]
  422017:	loopne 0x422074
  422019:	(bad)  
  42201a:	inc    DWORD PTR [eax]
  42201c:	push   edx
  42201e:	or     BYTE PTR [ebp+ebx*8-0x7cffff01],bl
  422025:	das    
  422026:	push   esi
  422027:	inc    ebx
  422028:	pop    ss
  422029:	cmp    edi,0x0
  42202c:	push   DWORD PTR [edi-0x64]
  42202f:	cmp    bl,BYTE PTR ds:0xff8300ff
  422035:	aaa    
  422036:	jae    0x422009
  422038:	lock int3 
  42203a:	add    BYTE PTR [ebx+0x66891a83],al
  422040:	sbb    edi,edi
  422042:	add    bh,bh
  422044:	int3   
  422045:	dec    esp
  422046:	push   esi
  422047:	adc    edi,edi
  422049:	inc    DWORD PTR [ebx+0x18cffff]
  42204f:	enter  0xffed,0xff
  422053:	or     DWORD PTR [ecx-0x4a6e031e],0xffffff89
  42205a:	add    bh,bh
  42205c:	sbb    DWORD PTR [edi-0xa860c2],0xffffffff
  422063:	add    BYTE PTR [eax],al
  422065:	je     0x422034
  422067:	adc    BYTE PTR [esi],0x0
  42206a:	int3   
  42206b:	add    bh,bh
  42206d:	mov    ebx,0xff417d30
  422072:	int3   
  422073:	add    DWORD PTR [eax],0xffffffc6
  422076:	jnp    0x422090
  422078:	mov    eax,ds:0xccff00ff
  42207d:	sub    edi,ebx
  42207f:	push   es
  422080:	and    al,0xff
  422082:	mov    DWORD PTR [eax],eax
  422084:	jmp    FWORD PTR [ebx+0x77289a]
  42208a:	(bad)  
  42208b:	(bad)  
  42208c:	jmp    eax
  42208e:	pop    ebx
  42208f:	inc    esi
  422090:	add    BYTE PTR cs:[ebx+0x6c2fff89],al
  422097:	push   ss
  422098:	arpl   WORD PTR [eax],ax
  42209a:	mov    edi,edi
  42209c:	add    dl,dh
  42209e:	pop    ecx
  42209f:	add    esp,edx
  4220a1:	add    ah,cl
  4220a3:	add    bh,bh
  4220a5:	push   ss
  4220a6:	pop    ss
  4220a7:	inc    esi
  4220a8:	out    dx,eax
  4220a9:	inc    DWORD PTR [ebx+0x39bd0000]
  4220af:	sub    DWORD PTR [eax],0xffffffff
  4220b2:	add    DWORD PTR [eax],0x0
  4220b5:	lods   eax,DWORD PTR ds:[esi]
  4220b6:	je     0x4220c0
  4220b8:	sub    eax,0xff008983
  4220bd:	pop    edi
  4220be:	stos   BYTE PTR es:[edi],al
  4220bf:	mov    WORD PTR [edi+0x0],gs
  4220c2:	(bad)  
  4220c3:	inc    DWORD PTR [eax]
  4220c5:	outs   dx,BYTE PTR ds:[esi]
  4220c6:	mov    bh,0xff
  4220c8:	cmp    al,0x83
  4220ca:	add    ah,cl
  4220cc:	add    BYTE PTR [edx-0x54fa4e],ch
  4220d2:	dec    DWORD PTR [ecx+0x6d3cc700]
  4220d8:	stc    
  4220d9:	int3   
  4220da:	add    BYTE PTR [eax],al
  4220dc:	int3   
  4220dd:	loope  0x4220cd
  4220df:	mov    ah,0x9b
  4220e1:	cmp    edi,0xffffff83
  4220e4:	push   ebx
  4220e6:	xchg   esp,eax
  4220e7:	and    al,0x1b
  4220e9:	mov    edi,edi
  4220eb:	dec    esp
  4220ed:	push   edx
  4220ee:	add    cl,BYTE PTR [edx]
  4220f0:	xor    eax,0xffff00
  4220f5:	or     ch,BYTE PTR [edi-0x330031f3]
  4220fb:	add    BYTE PTR [ebx-0x36233544],al
  422101:	add    DWORD PTR [ebx+0x1b8cff00],0x12
  422108:	xchg   BYTE PTR [eax],al
  42210a:	(bad)  
  42210b:	inc    DWORD PTR [eax]
  42210d:	addr16 push ecx
  42210f:	inc    edi
  422110:	dec    edx
  422111:	inc    DWORD PTR [ebx-0x3244ff01]
  422117:	push   esi
  422118:	xchg   ecx,eax
  422119:	inc    DWORD PTR [eax]
  42211b:	inc    DWORD PTR [eax]
  42211d:	in     al,dx
  42211e:	jne    0x42216b
  422120:	rol    DWORD PTR [eax],1
  422122:	int3   
  422123:	add    bh,bh
  422125:	add    al,0xbb
  422127:	mov    BYTE PTR [esi-0xff7d],cl
  42212d:	ret    
  42212e:	push   ecx
  42212f:	xchg   edx,eax
  422130:	sbb    cl,ah
  422132:	(bad)  
  422133:	(bad)  
  422134:	(bad)  
  422135:	std    
  422136:	mov    BYTE PTR [edi-0xd9],0xff
  42213d:	and    al,BYTE PTR [ebx+0x8]
  422140:	aad    0x0
  422142:	inc    DWORD PTR [eax]
  422144:	add    BYTE PTR [ebp-0x235c63],ah
  42214a:	int3   
  42214b:	int3   
  42214c:	add    BYTE PTR [ecx-0x7f],ch
  42214f:	dec    edi
  422150:	push   ecx
  422151:	add    BYTE PTR [ebx-0x5175ff34],al
  422157:	aad    0xca
  422159:	(bad)  
  42215a:	inc    DWORD PTR [ebx+0x117f3583]
  422160:	aad    0x89
  422162:	(bad)  
  422163:	inc    DWORD PTR [eax]
  422165:	call   0xff5f1875
  42216a:	inc    DWORD PTR [ebx-0x2db8bc01]
  422170:	nop
  422171:	inc    DWORD PTR [eax]
  422173:	mov    DWORD PTR [eax],eax
  422175:	dec    esp
  422176:	sbb    edi,DWORD PTR [esi-0x7c0033b3]
  42217c:	jmp    FWORD PTR [esi-0x55e650]
  422182:	(bad)  
  422183:	inc    DWORD PTR [eax]
  422185:	sti    
  422186:	push   0xff835df9
  42218b:	int3   
  42218c:	add    BYTE PTR [ebx+esi*2],bl
  42218f:	mov    ebx,0x83ffffed
  422194:	int3   
  422195:	dec    esi
  422196:	cmp    al,0xa
  422198:	xchg   ebx,eax
  422199:	(bad)  
  42219a:	dec    esp
  42219c:	int3   
  42219d:	pop    ebp
  42219e:	pushf  
  42219f:	and    DWORD PTR [edx-0x76000100],edx
  4221a5:	rcr    BYTE PTR [edx],0xd5
  4221a8:	inc    esi
  4221a9:	int3   
  4221aa:	add    bh,bh
  4221ac:	add    BYTE PTR [esi+0x13],ah
  4221af:	add    edi,DWORD PTR [ebx+eax*4]
  4221b2:	(bad)  
  4221b3:	(bad)  
  4221b4:	call   esp
  4221b6:	add    al,BYTE PTR [edi+0xffffe5]
  4221bc:	dec    ebx
  4221be:	pop    esp
  4221bf:	enter  0xff69,0x89
  4221c3:	add    BYTE PTR [eax],al
  4221c5:	mov    ch,dl
  4221c7:	xlat   BYTE PTR ds:[ebx]
  4221c8:	fwait
  4221c9:	(bad)  
  4221ca:	inc    DWORD PTR [eax]
  4221cc:	jmp    DWORD PTR [esi+edx*4-0x44]
  4221d0:	stc    
  4221d1:	inc    DWORD PTR [eax]
  4221d3:	dec    esp
  4221d5:	mov    dl,0x67
  4221d7:	lock int3 
  4221d9:	int3   
  4221da:	int3   
  4221db:	int3   
  4221dc:	int3   
  4221dd:	int3   
  4221de:	int3   
  4221df:	int3   
  4221e0:	push   ebx
  4221e1:	push   ebp
  4221e2:	mov    ebp,DWORD PTR ds:0x445014
  4221e8:	push   esi
  4221e9:	push   edi
  4221ea:	push   0x0
  4221ec:	call   ebp
  4221ee:	call   0x443ae0
  4221f3:	mov    esi,DWORD PTR ds:0x448d04
  4221f9:	mov    ebx,DWORD PTR ds:0x445010
  4221ff:	mov    ecx,DWORD PTR ds:0x448074
  422205:	add    esi,0xbda8
  42220b:	mov    edi,0x103
  422210:	movzx  eax,BYTE PTR [ecx+0x7]
  422214:	movzx  edx,WORD PTR [ecx+0x5]
  422218:	movzx  ecx,BYTE PTR [ecx]
  42221b:	shl    eax,0x10
  42221e:	add    eax,edx
  422220:	shl    eax,0x8
  422223:	mov    edx,0xdba5cfb6
  422228:	sub    edx,DWORD PTR ds:0x448d00
  42222e:	add    eax,ecx
  422230:	xor    edx,eax
  422232:	mov    ds:0x448cf0,eax
  422237:	push   0x2c3
  42223c:	mov    DWORD PTR [esi],edx
  42223e:	call   ebx
  422240:	mov    ecx,DWORD PTR ds:0x448074
  422246:	add    ecx,0x8
  422249:	add    esi,0x4
  42224c:	dec    edi
  42224d:	mov    DWORD PTR ds:0x448074,ecx
  422253:	jne    0x422210
  422255:	mov    eax,ds:0x448d04
  42225a:	mov    edx,DWORD PTR ds:0x448078
  422260:	add    eax,0xc1b4
  422265:	mov    esi,0xa1
  42226a:	lea    ebx,[ebx+0x0]
  422270:	movzx  ecx,BYTE PTR [edx+0x9]
  422274:	movzx  edi,WORD PTR [edx+0x5]
  422278:	movzx  edx,BYTE PTR [edx]
  42227b:	shl    ecx,0x10
  42227e:	add    ecx,edi
  422280:	shl    ecx,0x8
  422283:	add    ecx,edx
  422285:	mov    edx,DWORD PTR ds:0x448d00
  42228b:	mov    DWORD PTR ds:0x448cf0,ecx
  422291:	add    edx,0xe1ae3b7d
  422297:	xor    edx,ecx
  422299:	mov    DWORD PTR [eax],edx
  42229b:	mov    edx,DWORD PTR ds:0x448078
  4222a1:	movzx  ecx,BYTE PTR [edx+0xf]
  4222a5:	movzx  edi,WORD PTR [edx+0xd]
  4222a9:	movzx  edx,BYTE PTR [edx+0xb]
  4222ad:	shl    ecx,0x10
  4222b0:	add    ecx,edi
  4222b2:	shl    ecx,0x8
  4222b5:	add    ecx,edx
  4222b7:	mov    edx,DWORD PTR ds:0x448d00
  4222bd:	mov    DWORD PTR ds:0x448cf0,ecx
  4222c3:	add    edx,0xe1ae3b7d
  4222c9:	xor    edx,ecx
  4222cb:	mov    DWORD PTR [eax+0x4],edx
  4222ce:	mov    edx,DWORD PTR ds:0x448078
  4222d4:	add    edx,0x10
  4222d7:	mov    DWORD PTR ds:0x448078,edx
  4222dd:	movzx  ecx,BYTE PTR [edx+0x9]
  4222e1:	movzx  edi,WORD PTR [edx+0x5]
  4222e5:	movzx  edx,BYTE PTR [edx]
  4222e8:	shl    ecx,0x10
  4222eb:	add    ecx,edi
  4222ed:	shl    ecx,0x8
  4222f0:	add    ecx,edx
  4222f2:	mov    edx,DWORD PTR ds:0x448d00
  4222f8:	add    edx,0xe1ae3b7d
  4222fe:	xor    edx,ecx
  422300:	mov    DWORD PTR ds:0x448cf0,ecx
  422306:	mov    DWORD PTR [eax+0x8],edx
  422309:	mov    edx,DWORD PTR ds:0x448078
  42230f:	movzx  ecx,BYTE PTR [edx+0xf]
  422313:	movzx  edi,WORD PTR [edx+0xd]
  422317:	movzx  edx,BYTE PTR [edx+0xb]
  42231b:	shl    ecx,0x10
  42231e:	add    ecx,edi
  422320:	shl    ecx,0x8
  422323:	add    ecx,edx
  422325:	mov    edx,DWORD PTR ds:0x448d00
  42232b:	add    edx,0xe1ae3b7d
  422331:	xor    edx,ecx
  422333:	mov    DWORD PTR ds:0x448cf0,ecx
  422339:	mov    DWORD PTR [eax+0xc],edx
  42233c:	mov    edx,DWORD PTR ds:0x448078
  422342:	add    edx,0x10
  422345:	add    eax,0x10
  422348:	dec    esi
  422349:	mov    DWORD PTR ds:0x448078,edx
  42234f:	jne    0x422270
  422355:	mov    esi,DWORD PTR ds:0x448d04
  42235b:	mov    ecx,DWORD PTR ds:0x44807c
  422361:	add    esi,0xcbc4
  422367:	mov    edi,0x26f
  42236c:	lea    esp,[esp+0x0]
  422370:	movzx  eax,BYTE PTR [ecx+0x7]
  422374:	movzx  edx,WORD PTR [ecx+0x5]
  422378:	movzx  ecx,BYTE PTR [ecx+0x3]
  42237c:	shl    eax,0x10
  42237f:	add    eax,edx
  422381:	mov    edx,DWORD PTR ds:0x448d00
  422387:	shl    eax,0x8
  42238a:	add    eax,ecx
  42238c:	add    edx,0xb041cce5
  422392:	xor    edx,eax
  422394:	mov    ds:0x448cf0,eax
  422399:	mov    DWORD PTR [esi],edx
  42239b:	push   0x0
  42239d:	add    esi,0x4
  4223a0:	call   ebp
  4223a2:	mov    ecx,DWORD PTR ds:0x44807c
  4223a8:	add    ecx,0x8
  4223ab:	dec    edi
  4223ac:	mov    DWORD PTR ds:0x44807c,ecx
  4223b2:	jne    0x422370
  4223b4:	mov    eax,ds:0x448d04
  4223b9:	mov    edx,DWORD PTR ds:0x448080
  4223bf:	add    eax,0xd580
  4223c4:	lea    esi,[edi+0x21]
  4223c7:	jmp    0x4223d0
  4223c9:	lea    esp,[esp+0x0]
  4223d0:	movzx  ecx,BYTE PTR [edx+0x6]
  4223d4:	movzx  edi,WORD PTR [edx+0x2]
  4223d8:	movzx  edx,BYTE PTR [edx]
  4223db:	shl    ecx,0x10
  4223de:	add    ecx,edi
  4223e0:	shl    ecx,0x8
  4223e3:	add    ecx,edx
  4223e5:	mov    DWORD PTR ds:0x448cf0,ecx
  4223eb:	mov    edx,0x5400ccbf
  4223f0:	sub    edx,DWORD PTR ds:0x448d00
  4223f6:	xor    edx,ecx
  4223f8:	mov    DWORD PTR [eax],edx
  4223fa:	mov    ecx,DWORD PTR ds:0x448080
  422400:	mov    ecx,DWORD PTR [ecx+0x8]
  422403:	mov    DWORD PTR ds:0x448cf0,ecx
  422409:	mov    edx,0x5400ccbf
  42240e:	sub    edx,DWORD PTR ds:0x448d00
  422414:	xor    edx,ecx
  422416:	mov    DWORD PTR [eax+0x4],edx
  422419:	mov    edx,DWORD PTR ds:0x448080
  42241f:	add    edx,0x10
  422422:	mov    DWORD PTR ds:0x448080,edx
  422428:	movzx  ecx,BYTE PTR [edx+0x6]
  42242c:	movzx  edi,WORD PTR [edx+0x2]
  422430:	movzx  edx,BYTE PTR [edx]
  422433:	shl    ecx,0x10
  422436:	add    ecx,edi
  422438:	shl    ecx,0x8
  42243b:	add    ecx,edx
  42243d:	mov    DWORD PTR ds:0x448cf0,ecx
  422443:	mov    edx,0x5400ccbf
  422448:	sub    edx,DWORD PTR ds:0x448d00
  42244e:	xor    edx,ecx
  422450:	mov    DWORD PTR [eax+0x8],edx
  422453:	mov    ecx,DWORD PTR ds:0x448080
  422459:	mov    ecx,DWORD PTR [ecx+0x8]
  42245c:	mov    DWORD PTR ds:0x448cf0,ecx
  422462:	mov    edx,0x5400ccbf
  422467:	sub    edx,DWORD PTR ds:0x448d00
  42246d:	xor    edx,ecx
  42246f:	mov    DWORD PTR [eax+0xc],edx
  422472:	mov    edx,DWORD PTR ds:0x448080
  422478:	add    edx,0x10
  42247b:	mov    DWORD PTR ds:0x448080,edx
  422481:	movzx  ecx,BYTE PTR [edx+0x6]
  422485:	movzx  edi,WORD PTR [edx+0x2]
  422489:	movzx  edx,BYTE PTR [edx]
  42248c:	shl    ecx,0x10
  42248f:	add    ecx,edi
  422491:	shl    ecx,0x8
  422494:	add    ecx,edx
  422496:	mov    DWORD PTR ds:0x448cf0,ecx
  42249c:	mov    edx,0x5400ccbf
  4224a1:	sub    edx,DWORD PTR ds:0x448d00
  4224a7:	xor    edx,ecx
  4224a9:	mov    DWORD PTR [eax+0x10],edx
  4224ac:	mov    ecx,DWORD PTR ds:0x448080
  4224b2:	mov    ecx,DWORD PTR [ecx+0x8]
  4224b5:	mov    DWORD PTR ds:0x448cf0,ecx
  4224bb:	mov    edx,0x5400ccbf
  4224c0:	sub    edx,DWORD PTR ds:0x448d00
  4224c6:	xor    edx,ecx
  4224c8:	mov    DWORD PTR [eax+0x14],edx
  4224cb:	mov    edx,DWORD PTR ds:0x448080
  4224d1:	add    edx,0x10
  4224d4:	mov    DWORD PTR ds:0x448080,edx
  4224da:	movzx  ecx,BYTE PTR [edx+0x6]
  4224de:	movzx  edi,WORD PTR [edx+0x2]
  4224e2:	movzx  edx,BYTE PTR [edx]
  4224e5:	shl    ecx,0x10
  4224e8:	add    ecx,edi
  4224ea:	shl    ecx,0x8
  4224ed:	add    ecx,edx
  4224ef:	mov    edx,0x5400ccbf
  4224f4:	sub    edx,DWORD PTR ds:0x448d00
  4224fa:	mov    DWORD PTR ds:0x448cf0,ecx
  422500:	xor    edx,ecx
  422502:	mov    DWORD PTR [eax+0x18],edx
  422505:	mov    ecx,DWORD PTR ds:0x448080
  42250b:	mov    ecx,DWORD PTR [ecx+0x8]
  42250e:	mov    DWORD PTR ds:0x448cf0,ecx
  422514:	mov    edx,0x5400ccbf
  422519:	sub    edx,DWORD PTR ds:0x448d00
  42251f:	add    eax,0x30
  422522:	xor    edx,ecx
  422524:	mov    DWORD PTR [eax-0x14],edx
  422527:	mov    edx,DWORD PTR ds:0x448080
  42252d:	add    edx,0x10
  422530:	mov    DWORD PTR ds:0x448080,edx
  422536:	movzx  ecx,BYTE PTR [edx+0x6]
  42253a:	movzx  edi,WORD PTR [edx+0x2]
  42253e:	movzx  edx,BYTE PTR [edx]
  422541:	shl    ecx,0x10
  422544:	add    ecx,edi
  422546:	shl    ecx,0x8
  422549:	add    ecx,edx
  42254b:	mov    DWORD PTR ds:0x448cf0,ecx
  422551:	mov    edx,0x5400ccbf
  422556:	sub    edx,DWORD PTR ds:0x448d00
  42255c:	xor    edx,ecx
  42255e:	mov    DWORD PTR [eax-0x10],edx
  422561:	mov    ecx,DWORD PTR ds:0x448080
  422567:	mov    ecx,DWORD PTR [ecx+0x8]
  42256a:	mov    DWORD PTR ds:0x448cf0,ecx
  422570:	mov    edx,0x5400ccbf
  422575:	sub    edx,DWORD PTR ds:0x448d00
  42257b:	xor    edx,ecx
  42257d:	mov    DWORD PTR [eax-0xc],edx
  422580:	mov    edx,DWORD PTR ds:0x448080
  422586:	add    edx,0x10
  422589:	mov    DWORD PTR ds:0x448080,edx
  42258f:	movzx  ecx,BYTE PTR [edx+0x6]
  422593:	movzx  edi,WORD PTR [edx+0x2]
  422597:	movzx  edx,BYTE PTR [edx]
  42259a:	shl    ecx,0x10
  42259d:	add    ecx,edi
  42259f:	shl    ecx,0x8
  4225a2:	add    ecx,edx
  4225a4:	mov    edx,0x5400ccbf
  4225a9:	sub    edx,DWORD PTR ds:0x448d00
  4225af:	mov    DWORD PTR ds:0x448cf0,ecx
  4225b5:	xor    edx,ecx
  4225b7:	mov    DWORD PTR [eax-0x8],edx
  4225ba:	mov    ecx,DWORD PTR ds:0x448080
  4225c0:	mov    ecx,DWORD PTR [ecx+0x8]
  4225c3:	mov    edx,0x5400ccbf
  4225c8:	sub    edx,DWORD PTR ds:0x448d00
  4225ce:	mov    DWORD PTR ds:0x448cf0,ecx
  4225d4:	xor    edx,ecx
  4225d6:	mov    DWORD PTR [eax-0x4],edx
  4225d9:	mov    edx,DWORD PTR ds:0x448080
  4225df:	add    edx,0x10
  4225e2:	dec    esi
  4225e3:	mov    DWORD PTR ds:0x448080,edx
  4225e9:	jne    0x4223d0
  4225ef:	pop    edi
  4225f0:	pop    esi
  4225f1:	pop    ebp
  4225f2:	pop    ebx
  4225f3:	ret    
  4225f4:	int3   
  4225f5:	int3   
  4225f6:	int3   
  4225f7:	int3   
  4225f8:	int3   
  4225f9:	int3   
  4225fa:	int3   
  4225fb:	int3   
  4225fc:	int3   
  4225fd:	int3   
  4225fe:	int3   
  4225ff:	int3   
  422600:	mov    DWORD PTR [ebx],edi
  422602:	aaa    
  422603:	mov    al,ds:0xbbff003e
  422608:	add    bl,dh
  42260a:	add    BYTE PTR [edi+0xff3889],bh
  422610:	jmp    FWORD PTR [eax-0x3346427a]
  422616:	add    BYTE PTR [edi-0x4e338c00],dl
  42261c:	jmp    DWORD PTR [eax+eax*1+0x1b01ff83]
  422623:	push   0xfffffffa
  422625:	mov    edi,edi
  422627:	cwde   
  422628:	(bad)  
  422629:	in     al,dx
  42262a:	sub    DWORD PTR [esi-0xe977],0xffffffff
  422631:	mov    edi,0xff1b38
  422636:	add    BYTE PTR [ecx+0x168385ff],dl
  42263c:	inc    DWORD PTR [ecx+0x15ff83ff]
  422642:	pop    ebp
  422643:	xchg   edx,eax
  422644:	leave  
  422645:	mov    edi,edi
  422647:	and    al,0x83
  422649:	inc    esp
  42264a:	mov    esi,esi
  42264c:	sub    ebp,0xffffff83
  42264f:	mov    edi,edi
  422651:	not    dh
  422653:	add    eax,edx
  422655:	inc    DWORD PTR [eax]
  422657:	retf   
  422658:	and    DWORD PTR [ebx],0x0
  42265b:	dec    ecx
  42265c:	add    BYTE PTR [esi+0xc8300ff],bl
  422662:	push   0xff00be3c
  422667:	mov    bh,0xff
  422669:	cwde   
  42266a:	int3   
  42266b:	leave  
  42266c:	int3   
  42266d:	mov    dh,0xff
  42266f:	mov    edi,edi
  422671:	das    
  422672:	or     al,BYTE PTR [esi]
  422674:	test   eax,0xe8ccff
  422679:	mov    ah,0x83
  42267b:	(bad)  
  42267c:	mov    DWORD PTR [edi+edi*8+0x6a94ff89],eax
  422683:	imul   ecx,DWORD PTR cs:[ecx+0x6200b3ff],0x94ff57cc
  42268e:	or     esp,0x0
  422691:	or     dh,BYTE PTR ds:0xff555b
  422697:	in     al,dx
  422698:	add    BYTE PTR [eax],dl
  42269a:	push   DWORD PTR [esi]
  42269c:	add    BYTE PTR [eax],ch
  42269e:	(bad)  
  42269f:	inc    DWORD PTR [ebx-0x171a6e00]
  4226a5:	add    DWORD PTR [eax],0xffffffaf
  4226a8:	add    BYTE PTR [edi+edi*8-0x66],dh
  4226ac:	push   DWORD PTR [edi+0x0]
  4226af:	inc    DWORD PTR [eax]
  4226b1:	in     al,0xbd
  4226b3:	jp     0x42264a
  4226b5:	inc    DWORD PTR [ebx-0x33e57cce]
  4226bb:	and    edi,edi
  4226bd:	jl     0x4226bf
  4226bf:	add    BYTE PTR [eax],al
  4226c1:	pop    DWORD PTR [edx-0x8224]
  4226c7:	lock dec DWORD PTR [ebp+0x7effdfff]
  4226ce:	dec    DWORD PTR [ecx-0x62650201]
  4226d4:	mov    bh,0x0
  4226d6:	mov    DWORD PTR [edi-0x1],esi
  4226d9:	mov    dh,0xff
  4226db:	aam    0x83
  4226dd:	push   edi
  4226de:	inc    DWORD PTR [eax]
  4226e0:	int3   
  4226e1:	inc    eax
  4226e2:	sbb    eax,0xccff3861
  4226e7:	inc    edx
  4226e8:	mov    DWORD PTR ds:0xe183c2ff,eax
  4226ee:	add    BYTE PTR [ecx+0xca22989],cl
  4226f4:	retf   
  4226f5:	add    bh,bh
  4226f7:	jbe    0x4226f8
  4226f9:	xchg   BYTE PTR [ebx-0x1133c4],al
  4226ff:	(bad)  
  422700:	call   FWORD PTR [edx-0x39]
  422703:	ja     0x4226a1
  422705:	add    BYTE PTR [ebx-0x7c4eff05],al
  42270b:	nop
  42270c:	(bad)  
  42270d:	fcos   
  42270f:	(bad)  
  422710:	jmp    FWORD PTR [ecx+0x13]
  422713:	shl    BYTE PTR [ecx-0x77],1
  422716:	add    BYTE PTR [edi-0x7d],bl
  422719:	fld    QWORD PTR [eax]
  42271b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42271c:	add    DWORD PTR [eax],0x0
  42271f:	(bad)  
  422720:	push   DWORD PTR [ecx-0x3c]
  422723:	and    dh,BYTE PTR [ebx-0xbc007d]
  422729:	or     eax,DWORD PTR [ebx-0x7c5f332e]
  42272f:	(bad)  
  422730:	jmp    FWORD PTR [edx+eiz*8+0x1c]
  422734:	push   ecx
  422735:	cmp    edi,0x17
  422738:	dec    eax
  42273a:	adc    DWORD PTR [edi+edi*8],0x44
  42273e:	add    ah,cl
  422740:	(bad)  
  422741:	js     0x4226f4
  422743:	jmp    0x6942271f
  422748:	int3   
  422749:	sar    bh,1
  42274b:	push   eax
  42274c:	int3   
  42274d:	ss mov edi,edi
  422750:	or     DWORD PTR [edi+0x40],0xffffffef
  422754:	nop
  422755:	add    DWORD PTR [eax],0xffffffb8
  422758:	cmp    ebp,0xffffff83
  42275b:	clc    
  42275c:	add    DWORD PTR [ecx],0x0
  42275f:	add    BYTE PTR [eax],al
  422761:	and    eax,0xcc2c0d5f
  422766:	add    ch,bh
  422768:	jmp    edx
  42276a:	call   DWORD PTR [eax-0x7c5401]
  422770:	jmp    DWORD PTR [eax+edi*2]
  422773:	mov    dx,0xff83
  422777:	or     eax,0x8d8342ff
  42277c:	add    BYTE PTR [ebx],al
  42277e:	add    bh,bh
  422780:	add    BYTE PTR [ebx+0x2b],dl
  422783:	push   edx
  422784:	cmc    
  422785:	add    bh,bh
  422787:	adc    bh,bh
  422789:	mov    ds:0x8200c500,eax
  42278e:	(bad)  
  42278f:	(bad)  
  422790:	dec    eax
  422792:	sub    DWORD PTR [ebp+0x43],ebp
  422795:	inc    DWORD PTR [ebx-0x33a37c79]
  42279b:	cmp    bh,0xe4
  42279e:	(bad)  
  42279f:	dec    DWORD PTR [ecx+0x4545e26f]
  4227a5:	add    bh,bh
  4227a7:	xor    al,BYTE PTR [ebx+0x8300ac]
  4227ad:	xchg   esp,eax
  4227ae:	mov    DWORD PTR [eax],eax
  4227b0:	call   edi
  4227b2:	jo     0x42276c
  4227b4:	cmp    eax,0x4400ff
  4227b9:	ja     0x4227ba
  4227bb:	sbb    DWORD PTR [ebx+0x98],eax
  4227c1:	(bad)  
  4227c2:	js     0x42278a
  4227c4:	imul   edi,edi,0xffffffcc
  4227c7:	ja     0x4227c9
  4227c9:	loopne 0x4227ca
  4227cb:	mov    bh,0x0
  4227cd:	idiv   edi
  4227cf:	add    BYTE PTR [ecx+0x3f319c9c],cl
  4227d5:	(bad)  
  4227d6:	call   DWORD PTR ds:0x288310ff
  4227dc:	int3   
  4227dd:	add    al,0x83
  4227df:	inc    DWORD PTR [eax]
  4227e1:	repnz xor DWORD PTR [ebx-0x1affff4c],eax
  4227e8:	add    BYTE PTR ds:0x44002c83,al
  4227ee:	add    BYTE PTR [eax],al
  4227f0:	int3   
  4227f1:	mov    ds:0xff4d1658,eax
  4227f6:	jmp    DWORD PTR [edi-0x34]
  4227f9:	rol    DWORD PTR [eax],0x2a
  4227fc:	call   DWORD PTR [eax-0x7d]
  4227ff:	dec    DWORD PTR [ecx-0x459d46eb]
  422805:	(bad)  
  422806:	dec    DWORD PTR [ebx+0x0]
  422809:	(bad)  
  42280a:	inc    edi
  42280c:	add    dh,bh
  42280e:	dec    DWORD PTR [ecx+0x469bca00]
  422814:	fadd   DWORD PTR [eax]
  422816:	add    BYTE PTR [edi-0x1],bh
  422819:	or     BYTE PTR [ecx-0xb60079],cl
  42281f:	add    BYTE PTR [ebx+0xf9cb914],al
  422825:	inc    DWORD PTR [eax]
  422827:	out    0xff,eax
  422829:	dec    esi
  42282a:	push   DWORD PTR ds:0x83d4ff
  422830:	add    dl,bl
  422832:	mov    bl,0x6a
  422834:	lahf   
  422835:	inc    DWORD PTR [eax]
  422837:	in     al,0xff
  422839:	mov    edx,0x31fff983
  42283e:	add    BYTE PTR [eax],al
  422840:	add    BYTE PTR [ebp+eiz*1+0xff5ad8],ch
  422847:	add    ecx,esp
  422849:	dec    edx
  42284a:	add    BYTE PTR [ebx+0x0],dl
  42284d:	mov    ?,edi
  42284f:	add    bh,bh
  422851:	fs retf 0x2bb6
  422855:	add    bh,bh
  422857:	ins    DWORD PTR es:[edi],dx
  422858:	call   FWORD PTR [eax+eax*1-0x49]
  42285c:	mov    DWORD PTR [ebp+0x0],eax
  42285f:	(bad)  
  422860:	dec    DWORD PTR [ecx+0x1a]
  422863:	js     0x422854
  422865:	add    bh,bh
  422867:	int    0xff
  422869:	pop    eax
  42286a:	(bad)  
  42286b:	aas    
  42286c:	add    BYTE PTR [eax+eax*1],dl
  42286f:	add    ah,cl
  422871:	mov    dh,0xaf
  422873:	mov    BYTE PTR [ebp+0xa5cc00],0xdc
  42287a:	or     ebp,0x0
  42287d:	mov    ebp,0x7dff0000
  422882:	aaa    
  422883:	popa   
  422884:	pop    ebp
  422885:	add    BYTE PTR [eax],al
  422887:	inc    ecx
  422888:	add    BYTE PTR [ebp-0x5500f801],dl
  42288e:	add    DWORD PTR [eax],0xffffffff
  422891:	fist   DWORD PTR [ebp+0x6]
  422894:	popf   
  422895:	(bad)  
  422896:	(bad)  
  422897:	(bad)  
  422899:	and    ah,cl
  42289b:	inc    edi
  42289c:	adc    DWORD PTR [edi+edi*8-0x1],0xffffffff
  4228a1:	stc    
  4228a2:	dec    edx
  4228a3:	inc    eax
  4228a4:	and    al,0xff
  4228a6:	jmp    DWORD PTR [ebp-0x1]
  4228a9:	inc    eax
  4228aa:	add    BYTE PTR [eax-0x34],cl
  4228ad:	mov    cl,0xcc
  4228af:	add    BYTE PTR [eax],al
  4228b1:	leave  
  4228b2:	jns    0x422854
  4228b4:	pop    edi
  4228b5:	add    DWORD PTR [eax],0xffffffb9
  4228b8:	int3   
  4228b9:	mov    dl,0xff
  4228bb:	(bad)  
  4228bc:	int3   
  4228bd:	in     eax,0xff
  4228bf:	add    bh,bh
  4228c1:	loop   0x422892
  4228c3:	mov    WORD PTR [edi],ss
  4228c5:	dec    esp
  4228c7:	mov    eax,DWORD PTR [eax]
  4228c9:	inc    esi
  4228ca:	add    BYTE PTR [edx+0x0],bh
  4228cd:	popf   
  4228ce:	add    BYTE PTR [ebx-0x37e81000],al
  4228d4:	sub    eax,DWORD PTR [eax]
  4228d6:	mov    DWORD PTR [ebp+0x51cc7700],ecx
  4228dc:	add    BYTE PTR [ebx-0x34],ch
  4228df:	inc    DWORD PTR [eax]
  4228e1:	inc    eax
  4228e2:	not    BYTE PTR [ebx+0x3dffcc4b]
  4228e8:	add    BYTE PTR [eax-0x1],ah
  4228eb:	dec    esi
  4228ec:	jmp    FWORD PTR [eax]
  4228ee:	(bad)  
  4228ef:	dec    DWORD PTR [ecx+0x242e9406]
  4228f5:	add    DWORD PTR [eax],0x70
  4228f8:	jmp    DWORD PTR [edi]
  4228fa:	add    BYTE PTR [eax],dh
  4228fc:	sub    DWORD PTR [ebx+0x0],0xffffffff
  422900:	or     DWORD PTR [esi+0x66],0xffffffb3
  422904:	mov    edi,?
  422906:	int3   
  422907:	popa   
  422908:	inc    ecx
  42290a:	add    BYTE PTR [edi-0x1],dh
  42290d:	or     edi,edi
  42290f:	dec    DWORD PTR [ecx-0x7e2d5f0f]
  422915:	cmp    edi,0xffffff82
  422918:	(bad)  
  422919:	mov    ebx,0x69ff0aff
  42291e:	add    BYTE PTR [eax],al
  422920:	dec    DWORD PTR [edx-0x20]
  422923:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422924:	sub    al,0x83
  422926:	mov    DWORD PTR [edi],ebp
  422928:	(bad)  
  422929:	fdivr  st,st(7)
  42292b:	and    edi,edi
  42292d:	push   ss
  42292e:	mov    esp,ecx
  422930:	mov    DWORD PTR [edx],edi
  422932:	popa   
  422933:	popf   
  422934:	sub    eax,0x10ffff
  422939:	jno    0x42293a
  42293b:	lods   al,BYTE PTR ds:[esi]
  42293c:	add    BYTE PTR [ebp-0x1],cl
  42293f:	inc    DWORD PTR [eax]
  422941:	ins    DWORD PTR es:[edi],dx
  422942:	out    dx,eax
  422943:	xchg   esi,eax
  422944:	sub    edi,edi
  422946:	add    BYTE PTR [ebp+0x0],dh
  422949:	push   0x0
  42294b:	in     eax,dx
  42294c:	add    bl,al
  42294e:	int3   
  42294f:	add    bh,bh
  422951:	pushf  
  422952:	sbb    cl,BYTE PTR [esi+0x61ffff10]
  422958:	add    BYTE PTR [ecx+0x41ff6d00],dl
  42295e:	(bad)  
  42295f:	(bad)  
  422960:	push   DWORD PTR [edi+edi*1]
  422963:	pop    ebp
  422964:	ror    BYTE PTR [ecx+0x54ff50ff],0x83
  42296b:	pop    eax
  42296c:	(bad)  
  42296d:	(bad)  
  42296e:	(bad)  
  42296f:	inc    DWORD PTR [eax]
  422971:	adc    DWORD PTR [esi],0x31
  422974:	inc    esi
  422975:	(bad)  
  422976:	call   DWORD PTR [eax+eax*1+0xfbff85]
  42297d:	add    BYTE PTR es:[ebx-0x23187b01],al
  422984:	and    bh,bh
  422986:	add    BYTE PTR [edi-0x1],al
  422989:	(bad)  
  42298a:	dec    DWORD PTR [ebx+eax*4+0x58]
  42298e:	add    BYTE PTR [ecx+0x410b56ff],cl
  422994:	fld    QWORD PTR [eax]
  422996:	(bad)  
  422997:	fisttp QWORD PTR [ecx-0x8e7c17]
  42299d:	sub    eax,0x13ffff00
  4229a2:	cmc    
  4229a3:	or     eax,0xc800ffe0
  4229a8:	jmp    DWORD PTR [esi-0x1]
  4229ab:	add    BYTE PTR ds:[ecx-0x7d],dh
  4229af:	add    bh,bh
  4229b1:	adc    edx,ebx
  4229b3:	fist   DWORD PTR [edx]
  4229b5:	cmp    edi,0xffffffb0
  4229b8:	inc    edi
  4229ba:	mov    DWORD PTR [edx+0x0],edi
  4229bd:	push   cs
  4229be:	mov    edi,edi
  4229c0:	add    BYTE PTR [esi-0x72fd2c],ch
  4229c6:	add    BYTE PTR [ecx],ch
  4229c8:	int3   
  4229c9:	clc    
  4229ca:	xor    DWORD PTR [esi],0xffffffff
  4229cd:	push   ss
  4229ce:	(bad)  
  4229cf:	inc    DWORD PTR [eax]
  4229d1:	or     ah,BYTE PTR [edi-0x39c5]
  4229d7:	sar    bh,cl
  4229d9:	jbe    0x4229da
  4229db:	dec    esi
  4229dc:	add    cl,al
  4229de:	inc    DWORD PTR [eax]
  4229e0:	add    BYTE PTR [ecx-0x767ef846],cl
  4229e6:	add    BYTE PTR [ebx+0x74ff7383],dh
  4229ec:	call   DWORD PTR [esi+0x300000cc]
  4229f2:	(bad)  
  4229f3:	lock (bad) 
  4229f5:	inc    DWORD PTR [eax]
  4229f7:	(bad)  
  4229f8:	jmp    FWORD PTR [esp+ecx*8]
  4229fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229fc:	jmp    FWORD PTR [ebx]
  4229fe:	(bad)  
  4229ff:	inc    DWORD PTR [eax]
  422a01:	(bad)  
  422a03:	and    al,0x8f
  422a05:	add    BYTE PTR [eax],al
  422a07:	rol    DWORD PTR [eax],cl
  422a09:	and    eax,0x3dffdacc
  422a0e:	add    bh,bh
  422a10:	call   DWORD PTR [eax+0x14]
  422a13:	and    DWORD PTR [esi+0xd7ffff],0x19ffad
  422a1d:	lods   eax,DWORD PTR ds:[esi]
  422a1e:	(bad)  
  422a1f:	(bad)  
  422a20:	call   FWORD PTR [eax]
  422a22:	mov    ch,0x29
  422a24:	and    al,BYTE PTR [ebx-0x56ffc901]
  422a2a:	add    dh,dh
  422a2c:	add    DWORD PTR ds:0x9fffffff,0x24
  422a33:	out    0xc1,al
  422a35:	inc    DWORD PTR [eax]
  422a37:	inc    edx
  422a38:	add    BYTE PTR [eax],bl
  422a3a:	add    ah,dh
  422a3c:	adc    eax,0xffffffff
  422a3f:	(bad)  
  422a40:	jmp    FWORD PTR [ebx-0x1b]
  422a43:	fsub   DWORD PTR [edi-0xb60034]
  422a49:	stc    
  422a4a:	cmp    DWORD PTR [esi-0x7cc600],0x0
  422a51:	add    eax,DWORD PTR [edi+0x71]
  422a54:	push   ecx
  422a55:	dec    esp
  422a57:	cmp    al,BYTE PTR [eax]
  422a59:	fwait
  422a5a:	dec    DWORD PTR [ecx-0x7c00fc01]
  422a60:	inc    DWORD PTR [edx]
  422a62:	push   edx
  422a63:	leave  
  422a64:	(bad)  
  422a65:	or     esp,0xffffffe7
  422a68:	dec    DWORD PTR [ebx+0x7c831aff]
  422a6e:	mov    edi,edi
  422a70:	jmp    DWORD PTR [ecx]
  422a72:	pushf  
  422a73:	mov    al,0x4b
  422a75:	(bad)  
  422a76:	push   ebp
  422a78:	add    BYTE PTR [ebp+0x60cc70ff],bh
  422a7e:	inc    DWORD PTR [ebx-0x7de1a500]
  422a84:	jae    0x422a85
  422a86:	or     esp,0xffffffcc
  422a89:	xchg   edi,eax
  422a8a:	add    BYTE PTR [esi+0xff04ff],ch
  422a90:	add    ch,dl
  422a92:	in     eax,dx
  422a93:	pop    ss
  422a94:	adc    ah,cl
  422a96:	mov    DWORD PTR [edx-0x7f76f801],edx
  422a9c:	add    ah,dl
  422a9e:	or     esp,0xffffff89
  422aa1:	data16 icebp 
  422aa3:	sub    DWORD PTR [edx-0x7c300100],0x9900f5
  422aad:	sar    bh,0xff
  422ab0:	add    BYTE PTR [edi],ch
  422ab2:	sub    DWORD PTR [edi-0x340000ea],esi
  422ab8:	add    BYTE PTR [eax-0x56002201],bh
  422abe:	or     esp,0xffffff83
  422ac1:	iret   
  422ac2:	xchg   BYTE PTR [eax-0x1c],ch
  422ac5:	inc    DWORD PTR [ebx-0x33f47637]
  422acb:	scas   al,BYTE PTR es:[edi]
  422acc:	or     DWORD PTR [ebx-0x9000034],0x12
  422ad3:	ins    BYTE PTR es:[edi],dx
  422ad4:	add    BYTE PTR [ebx+0xbff4e00],al
  422ada:	push   DWORD PTR [ecx]
  422adc:	xor    ebp,0x0
  422adf:	dec    DWORD PTR [ecx+0x1e2d40e9]
  422ae5:	add    bh,bh
  422ae7:	leave  
  422ae8:	add    BYTE PTR [edx-0x7d],bl
  422aeb:	lods   eax,DWORD PTR ds:[esi]
  422aec:	add    BYTE PTR [eax],bl
  422aee:	add    bh,bh
  422af0:	and    DWORD PTR [ebp-0x2e],0xffffffc8
  422af4:	jae    0x422af6
  422af6:	(bad)  
  422af7:	fdivp  st(7),st
  422af9:	push   ss
  422afa:	jmp    FWORD PTR [ebp-0x337cde01]
  422b00:	inc    ebp
  422b02:	or     eax,0xcc832134
  422b07:	xchg   ebx,eax
  422b08:	add    BYTE PTR [ecx],bh
  422b0a:	sbb    DWORD PTR [edx],0xffffffff
  422b0d:	mov    al,ds:0x3e89ffff
  422b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b13:	call   0x4200:0x46008919
  422b1a:	int3   
  422b1b:	pop    esi
  422b1c:	jmp    FWORD PTR [ebx+0x18ffff83]
  422b22:	adc    BYTE PTR [edx],dl
  422b24:	push   esi
  422b25:	int3   
  422b26:	and    DWORD PTR ds:0x5e009aff,0x0
  422b2d:	add    edi,edi
  422b2f:	inc    DWORD PTR [eax]
  422b31:	sbb    ebx,DWORD PTR [edx]
  422b33:	sub    eax,0xeb00ff96
  422b38:	inc    DWORD PTR [edx]
  422b3a:	(bad)  
  422b3b:	fiadd  WORD PTR [eax]
  422b3d:	ins    BYTE PTR es:[edi],dx
  422b3e:	mov    DWORD PTR [eax],eax
  422b40:	adc    DWORD PTR [eax],0xffffff93
  422b43:	in     eax,dx
  422b44:	lock add ah,cl
  422b47:	pop    edi
  422b48:	call   DWORD PTR [edx+0x65ff7dff]
  422b4e:	int3   
  422b4f:	(bad)  
  422b50:	jmp    esi
  422b52:	cmp    BYTE PTR ds:0x4a008962,ah
  422b58:	dec    DWORD PTR [edx-0x7d]
  422b5b:	pusha  
  422b5c:	jmp    ebp
  422b5e:	add    BYTE PTR [ebx+0x3ca30f83],al
  422b64:	sub    eax,0xff66ff00
  422b69:	inc    BYTE PTR [ebx-0x7cfc0099]
  422b6f:	mov    DWORD PTR [ebx+0x27be7fa],eax
  422b75:	inc    DWORD PTR [ebx+0x8bffd4]
  422b7b:	out    dx,al
  422b7c:	int3   
  422b7d:	loope  0x422b02
  422b7f:	add    BYTE PTR [ecx-0x51c2440],cl
  422b85:	(bad)  
  422b86:	jmp    FWORD PTR [ebp-0x5700fb00]
  422b8c:	dec    ebx
  422b8e:	int3   
  422b8f:	cmp    edi,0x23
  422b92:	gs mov ah,0x8
  422b95:	int3   
  422b96:	push   DWORD PTR [ecx-0x1]
  422b99:	lahf   
  422b9a:	call   FWORD PTR [eax]
  422b9c:	push   DWORD PTR [esi]
  422b9e:	inc    DWORD PTR [eax]
  422ba0:	(bad)  
  422ba1:	out    dx,al
  422ba2:	das    
  422ba3:	xlat   BYTE PTR ds:[ebx]
  422ba4:	stos   BYTE PTR es:[edi],al
  422ba5:	add    bh,bh
  422ba7:	enter  0xe5ff,0xff
  422bab:	mov    es,WORD PTR [ebx-0x9b]
  422bb1:	js     0x422bec
  422bb3:	pop    edi
  422bb4:	pop    es
  422bb5:	inc    DWORD PTR [eax]
  422bb7:	in     al,dx
  422bb8:	mov    eax,ecx
  422bba:	push   ecx
  422bbc:	int3   
  422bbd:	ret    
  422bbe:	(bad)  
  422bbf:	inc    DWORD PTR [eax]
  422bc1:	popf   
  422bc2:	repnz out dx,eax
  422bc4:	test   DWORD PTR [eax],0x8eff7583
  422bca:	add    BYTE PTR [esi-0x1],bh
  422bcd:	retf   
  422bce:	add    BYTE PTR [ecx-0x4f8b7101],cl
  422bd4:	pushf  
  422bd5:	inc    DWORD PTR [ebx-0x1e00c1]
  422bdb:	test   DWORD PTR [ebx-0x7c760001],0xb7a661e1
  422be5:	mov    DWORD PTR [eax],eax
  422be7:	sub    esp,ecx
  422be9:	push   ecx
  422bea:	int3   
  422beb:	push   0xff0077cc
  422bf0:	cmp    DWORD PTR [ecx],0x4f
  422bf3:	jmp    0x422be4
  422bf5:	cmp    edi,0x67
  422bf8:	add    BYTE PTR [edi-0x3effbe01],cl
  422bfe:	int3   
  422bff:	cmp    edi,0xffffff94
  422c02:	imul   BYTE PTR [ecx-0x10ffff83]
  422c08:	(bad)  
  422c09:	inc    DWORD PTR [ebx+0x9aff35]
  422c0f:	inc    DWORD PTR [ebx+0x3748bab2]
  422c15:	or     DWORD PTR [ecx-0x33ff3371],0xffffffe4
  422c1c:	and    DWORD PTR [ecx-0x1],0xffffffff
  422c20:	add    BYTE PTR [esi],bl
  422c22:	out    0xf9,al
  422c24:	pop    esi
  422c25:	dec    esp
  422c27:	pop    eax
  422c28:	add    BYTE PTR [edi],dl
  422c2a:	jmp    DWORD PTR [ebx]
  422c2c:	add    bh,dl
  422c2e:	inc    DWORD PTR [eax]
  422c30:	add    BYTE PTR [ecx+edi*1+0x2a],ah
  422c34:	fwait
  422c35:	inc    DWORD PTR [eax]
  422c37:	xor    DWORD PTR [ecx-0x7645ff4a],ecx
  422c3d:	jo     0x422c3e
  422c3f:	inc    DWORD PTR [eax]
  422c41:	xchg   edx,eax
  422c42:	les    ecx,FWORD PTR [esi-0x19]
  422c45:	(bad)  
  422c46:	push   ebp
  422c48:	inc    edx
  422c4a:	xor    ebp,0xffffffff
  422c4d:	jnp    0x422c4f
  422c4f:	inc    DWORD PTR [eax]
  422c51:	nop
  422c52:	mov    WORD PTR [ecx+0xd],?
  422c55:	(bad)  
  422c56:	inc    DWORD PTR [edx+0x0]
  422c59:	and    edi,edi
  422c5b:	mov    bh,bh
  422c5d:	sbb    al,0xff
  422c5f:	dec    DWORD PTR [ecx+0x71c0603c]
  422c65:	add    bh,bh
  422c67:	jmp    0xb600:0xd4ff88ff
  422c6e:	mov    edi,edi
  422c70:	add    BYTE PTR [edi+edi*8+0x3e],bl
  422c74:	mov    bh,bh
  422c76:	add    al,bh
  422c78:	mov    ebx,esi
  422c7a:	inc    DWORD PTR [eax+eax*1-0x46]
  422c7e:	mov    edi,edi
  422c80:	adc    DWORD PTR [ecx+0x9],0xffffff8b
  422c84:	rol    BYTE PTR [eax],cl
  422c86:	add    BYTE PTR [ebx+0x0],dl
  422c89:	ins    BYTE PTR es:[edi],dx
  422c8a:	dec    DWORD PTR [edx]
  422c8c:	call   DWORD PTR [ecx]
  422c8e:	add    bh,bh
  422c90:	dec    DWORD PTR [edx]
  422c92:	xor    BYTE PTR [edi-0x51],al
  422c95:	cmp    edi,0x44
  422c98:	add    BYTE PTR [edi],ch
  422c9a:	mov    DWORD PTR [edi+edi*8-0xffee],esp
  422ca1:	pop    eax
  422ca2:	arpl   WORD PTR [edx+ecx*2-0x1],si
  422ca6:	jmp    FWORD PTR [edi+edi*8+0x4a]
  422caa:	add    BYTE PTR [eax-0xff8601],dl
  422cb0:	push   DWORD PTR [eax]
  422cb2:	fnstcw WORD PTR [edx-0x300ff63]
  422cb8:	dec    DWORD PTR ds:0xfff2d00
  422cbe:	(bad)  
  422cbf:	(bad)  
  422cc0:	(bad)  
  422cc1:	jg     0x422c62
  422cc3:	and    edx,ebp
  422cc5:	(bad)  
  422cc6:	(bad)  
  422cc7:	cld    
  422cc8:	inc    DWORD PTR [edi-0x76005e01]
  422cce:	cmp    edi,0x0
  422cd1:	mov    ?,WORD PTR [esp+ebx*1]
  422cd4:	jle    0x422cd5
  422cd6:	inc    DWORD PTR [esi]
  422cd8:	inc    ecx
  422cda:	add    BYTE PTR [ebx],ah
  422cdc:	add    BYTE PTR [ebp-0x1],cl
  422cdf:	int3   
  422ce0:	add    DWORD PTR [ebp+eax*8+0x7d],0x48
  422ce5:	add    BYTE PTR [eax],al
  422ce7:	add    BYTE PTR [eax],0x18
  422cea:	inc    DWORD PTR [esp+ecx*8]
  422ced:	and    DWORD PTR [eax],eax
  422cef:	cmp    edi,0xffffffb2
  422cf2:	ins    DWORD PTR es:[edi],dx
  422cf3:	inc    eax
  422cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cf5:	add    DWORD PTR [eax],0x20
  422cf8:	add    bh,dh
  422cfa:	add    BYTE PTR [edi-0xff0101],dl
  422d00:	inc    ecx
  422d02:	repnz in al,0x74
  422d05:	add    bh,bh
  422d07:	sub    al,0x0
  422d09:	fdivr  st,st(7)
  422d0b:	xchg   esp,eax
  422d0c:	sub    DWORD PTR [esi-0x1],0x0
  422d10:	sub    DWORD PTR [ebx+ebx*1],0xffffffc5
  422d14:	pop    esp
  422d15:	inc    DWORD PTR [ebx-0x7cb70040]
  422d1b:	out    0x0,eax
  422d1d:	xchg   ebp,eax
  422d1e:	(bad)  
  422d1f:	(bad)  
  422d20:	(bad)  
  422d21:	fcom   DWORD PTR [edx]
  422d23:	pop    ds
  422d24:	test   DWORD PTR [eax],eax
  422d26:	jmp    FWORD PTR [ebx+eax*4]
  422d29:	pop    ebx
  422d2a:	add    BYTE PTR [eax],ch
  422d2c:	sbb    DWORD PTR [esi+0x618300ff],0x34
  422d33:	mov    cl,dl
  422d35:	add    bh,bh
  422d37:	cdq    
  422d38:	call   DWORD PTR [edx-0x1]
  422d3b:	daa    
  422d3c:	dec    DWORD PTR [esi]
  422d3e:	(bad)  
  422d3f:	(bad)  
  422d40:	call   DWORD PTR [ebx+esi*4]
  422d43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d44:	jb     0x422d46
  422d46:	call   DWORD PTR [edi]
  422d48:	dec    DWORD PTR [ebx+0x0]
  422d4b:	(bad)  
  422d4c:	push   DWORD PTR [eax-0x2c00007d]
  422d52:	loope  0x422d6a
  422d54:	mov    eax,ds:0x470000
  422d59:	add    edi,edi
  422d5b:	add    BYTE PTR fs:[ebx],bh
  422d5e:	(bad)  
  422d5f:	inc    DWORD PTR [ebx-0x6c7420d9]
  422d65:	(bad)  
  422d66:	call   DWORD PTR [esi+0x4100d100]
  422d6c:	mov    ecx,edx
  422d6e:	(bad)  
  422d6f:	(bad)  
  422d70:	dec    DWORD PTR [edx+0x46]
  422d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d74:	mov    ds:0xff4acc89,al
  422d79:	mov    ecx,0xab8316ff
  422d7e:	mov    edi,edi
  422d80:	call   FWORD PTR [ecx]
  422d82:	cld    
  422d83:	ja     0x422dcf
  422d85:	(bad)  
  422d86:	jmp    DWORD PTR [eax]
  422d88:	(bad)  
  422d89:	cmp    edi,edi
  422d8b:	add    al,0xcc
  422d8d:	lods   eax,DWORD PTR ds:[esi]
  422d8e:	dec    esp
  422d90:	call   ecx
  422d92:	dec    ecx
  422d93:	retf   0xff2c
  422d96:	add    BYTE PTR [ebx-0x1],bl
  422d99:	leave  
  422d9a:	call   DWORD PTR [edi-0x76763b01]
  422da0:	add    BYTE PTR [edx-0x7cb0c115],bl
  422da6:	sub    DWORD PTR [edx],0xffffffcc
  422da9:	retf   
  422daa:	(bad)  
  422dab:	in     al,dx
  422dac:	call   DWORD PTR [ecx-0x1]
  422daf:	int3   
  422db0:	add    BYTE PTR [esi+0x41c66f],cl
  422db6:	mov    DWORD PTR [edi-0x2b002234],ebp
  422dbc:	mov    ebx,ecx
  422dbe:	add    ah,cl
  422dc0:	(bad)  
  422dc1:	cmp    dh,dh
  422dc3:	adc    DWORD PTR [ecx-0x1],ebp
  422dc6:	inc    DWORD PTR [eax]
  422dc8:	dec    DWORD PTR [edi+0x0]
  422dcb:	adc    DWORD PTR [ebx-0x33ff0a],eax
  422dd1:	repnz bound ebp,QWORD PTR [ebx+0x2783ff95]
  422dd8:	add    BYTE PTR [esi-0x24ff4c01],al
  422dde:	add    BYTE PTR [ecx-0x18655f01],cl
  422de4:	cmp    al,0xff
  422de6:	inc    edi
  422de8:	push   DWORD PTR [edx-0x1700db7d]
  422dee:	dec    DWORD PTR [ecx+0x34b9c300]
  422df4:	aam    0x89
  422df6:	dec    DWORD PTR [edi+edi*8+0x6c]
  422dfa:	add    bl,cl
  422dfc:	dec    DWORD PTR [ecx-0x1]
  422dff:	inc    DWORD PTR [eax]
  422e01:	scas   al,BYTE PTR es:[edi]
  422e02:	jmp    0x422e79
  422e04:	repnz add bh,bh
  422e07:	jge    0x422e08
  422e09:	mov    edi,0x56ff5cff
  422e0e:	inc    DWORD PTR [eax]
  422e10:	cmp    DWORD PTR [ebx+ecx*4-0x7600ba14],0x66
  422e18:	jmp    DWORD PTR [eax-0x7d]
  422e1b:	sub    eax,DWORD PTR [eax]
  422e1d:	test   eax,0x18ffff83
  422e22:	shl    BYTE PTR [eax],0x5f
  422e25:	inc    DWORD PTR [eax]
  422e27:	push   edi
  422e28:	call   edx
  422e2a:	sbb    DWORD PTR [ecx],0x0
  422e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e2e:	inc    DWORD PTR [eax]
  422e30:	sub    DWORD PTR [esi],0x64
  422e33:	mov    ebx,0x4dff8386
  422e38:	add    ah,dl
  422e3a:	add    BYTE PTR [esi],dl
  422e3c:	dec    DWORD PTR [esi-0x50007601]
  422e42:	mov    bh,0x3d
  422e44:	test   bh,bh
  422e46:	adc    eax,0xffffff83
  422e49:	loope  0x422e4a
  422e4b:	test   bh,bh
  422e4d:	imul   edi,edi,0xffffffff
  422e50:	jmp    eax
  422e52:	enter  0x5efb,0xff
  422e56:	dec    DWORD PTR [edx]
  422e58:	(bad)  
  422e59:	out    dx,eax
  422e5a:	add    BYTE PTR [esi-0x7c7c7100],dh
  422e60:	add    BYTE PTR [ecx],dh
  422e62:	xor    DWORD PTR [ebx+0x2e83ff80],edx
  422e68:	add    BYTE PTR [ebx],al
  422e6a:	int3   
  422e6b:	loopne 0x422df0
  422e6d:	adc    DWORD PTR [ecx+0x29930000],ecx
  422e73:	mov    esp,DWORD PTR [ecx+0x1d0000]
  422e79:	xor    al,BYTE PTR [eax]
  422e7b:	cwde   
  422e7c:	dec    DWORD PTR [ebx-0x40010000]
  422e82:	into   
  422e83:	jecxz  0x422e0c
  422e85:	mov    DWORD PTR [eax],eax
  422e87:	and    BYTE PTR [ebx-0xfaffb5],al
  422e8d:	push   ebx
  422e8e:	add    bh,bh
  422e90:	add    DWORD PTR [ebx+0xd8cfeb],0x0
  422e97:	sbb    al,0xff
  422e99:	dec    ebx
  422e9a:	add    BYTE PTR [ebx-0x1],dh
  422e9d:	dec    edx
  422e9e:	add    bh,bh
  422ea0:	jmp    DWORD PTR [ebx]
  422ea2:	push   0x32
  422ea4:	icebp  
  422ea5:	add    BYTE PTR [ecx-0x7c82ff85],cl
  422eab:	xor    al,BYTE PTR [ebx-0x7c76ff1f]
  422eb1:	dec    ebx
  422eb2:	das    
  422eb3:	fwait
  422eb4:	or     bh,bh
  422eb6:	jmp    DWORD PTR [edx-0x31ff1601]
  422ebc:	add    BYTE PTR [esi-0x7d],dh
  422ebf:	inc    DWORD PTR [eax]
  422ec1:	js     0x422f15
  422ec3:	lods   al,BYTE PTR ds:[esi]
  422ec4:	hlt    
  422ec5:	dec    esp
  422ec7:	add    BYTE PTR [eax],0xaf
  422eca:	push   DWORD PTR [ebx+0x0]
  422ecd:	call   0x6442fbd1
  422ed2:	add    edi,eax
  422ed4:	inc    ebx
  422ed5:	add    BYTE PTR [ecx-0x7c5833ee],cl
  422edb:	push   ss
  422edc:	dec    edx
  422ede:	add    BYTE PTR [eax],al
  422ee0:	mov    esi,eax
  422ee2:	mov    esi,0x89ff86b9
  422ee7:	leave  
  422ee8:	add    BYTE PTR [eax],ah
  422eea:	mov    DWORD PTR [edi+edi*8-0x45],ecx
  422eee:	add    ah,cl
  422ef0:	push   edx
  422ef2:	je     0x422eb0
  422ef4:	pop    ebx
  422ef5:	add    bh,bh
  422ef7:	xor    bh,bh
  422ef9:	xchg   DWORD PTR [ebx-0x93004a],eax
  422eff:	add    BYTE PTR [ecx+0x481c69a8],cl
  422f05:	inc    DWORD PTR [eax]
  422f07:	pusha  
  422f08:	(bad)  
  422f09:	jnp    0x422f0b
  422f0b:	dec    eax
  422f0c:	int3   
  422f0d:	lods   eax,DWORD PTR ds:[esi]
  422f0e:	int3   
  422f0f:	(bad)  
  422f10:	dec    DWORD PTR [esi+0x6c]
  422f13:	xchg   edx,eax
  422f14:	cmp    edi,edi
  422f16:	jmp    FWORD PTR [ecx-0x1]
  422f19:	ret    
  422f1a:	int3   
  422f1b:	jmp    0x41da20
  422f20:	sbb    DWORD PTR [eax+0x24],0x4b
  422f24:	xchg   edx,eax
  422f25:	(bad)  
  422f26:	inc    DWORD PTR [ebp-0x1]
  422f29:	ror    esp,1
  422f2b:	pop    ebx
  422f2c:	dec    DWORD PTR [edi+edi*8]
  422f2f:	inc    DWORD PTR [eax]
  422f31:	ja     0x422f72
  422f33:	out    dx,al
  422f34:	cld    
  422f35:	inc    DWORD PTR [ebx+0xeaff11]
  422f3b:	xchg   ebx,eax
  422f3c:	adc    edx,0xffffffff
  422f3f:	add    BYTE PTR [ecx-0x1c9194b3],cl
  422f45:	add    BYTE PTR [eax],al
  422f47:	add    BYTE PTR [eax],0xa2
  422f4a:	sbb    DWORD PTR [eax-0x33d500],0xffffffff
  422f51:	xchg   ebp,eax
  422f52:	push   ebx
  422f53:	mov    ebx,0x3d00ffa4
  422f58:	call   FWORD PTR [ebp+0x0]
  422f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5c:	or     DWORD PTR [ebp-0x7d],0x0
  422f60:	add    BYTE PTR [ebp-0x7ca80442],bl
  422f66:	add    DWORD PTR [esi],0x0
  422f69:	xlat   BYTE PTR ds:[ebx]
  422f6a:	jmp    FWORD PTR [ebp-0x1]
  422f6d:	mov    edi,0x8b0000ff
  422f72:	mov    eax,0x83ba38
  422f77:	popa   
  422f78:	add    BYTE PTR [eax+eax*1+0x8],ch
  422f7c:	add    BYTE PTR [ecx+0x0],cl
  422f7f:	inc    DWORD PTR [ebx-0x26bddec]
  422f85:	int3   
  422f86:	add    DWORD PTR [edi+edi*8-0x2a7cc7],0xfffffff9
  422f8e:	add    bh,bh
  422f90:	add    esp,0x59
  422f93:	ja     0x422fcd
  422f95:	(bad)  
  422f96:	(bad)  
  422f97:	cmp    eax,0xe9001aff
  422f9c:	and    DWORD PTR [eax+eax*1+0x767283ff],0xffffffbf
  422fa4:	or     al,BYTE PTR [ebx-0x5600c101]
  422faa:	jmp    FWORD PTR [ecx+0x0]
  422fad:	push   edi
  422fae:	inc    DWORD PTR [ebx-0x6ee36500]
  422fb4:	pop    edi
  422fb5:	add    BYTE PTR [eax],al
  422fb7:	adc    eax,0xe9ccc4ff
  422fbc:	add    BYTE PTR [esi+0x48ff00cc],dh
  422fc2:	test   ebp,ebx
  422fc4:	pushf  
  422fc5:	add    DWORD PTR [eax],0xffffffae
  422fc8:	add    BYTE PTR [ebx],ah
  422fca:	int3   
  422fcb:	sub    eax,0xff00e1ff
  422fd0:	mov    DWORD PTR [ecx-0x58],esi
  422fd3:	push   esp
  422fd4:	ret    0xffff
  422fd7:	sahf   
  422fd8:	int3   
  422fd9:	jecxz  0x422fda
  422fdb:	lds    eax,FWORD PTR [eax]
  422fdd:	(bad)  
  422fde:	mov    DWORD PTR [eax],eax
  422fe0:	jmp    FWORD PTR [edi-0xfea6fe]
  422fe6:	int3   
  422fe7:	adc    eax,0xb100cdff
  422fec:	mov    DWORD PTR [eax-0x7d],ebx
  422fef:	int3   
  422ff0:	dec    DWORD PTR [ecx+0x16]
  422ff3:	mov    edx,?
  422ff5:	(bad)  
  422ff6:	call   DWORD PTR [esi-0x67004f7d]
  422ffc:	jmp    FWORD PTR [ebx]
  422ffe:	(bad)  
  422fff:	inc    DWORD PTR [ebx-0x40b9204b]
  423005:	(bad)  
  423006:	jmp    DWORD PTR [ecx-0x1]
  423009:	loopne 0x42300b
  42300b:	xchg   edx,eax
  42300c:	(bad)  
  42300d:	fmulp  st(4),st
  42300f:	(bad)  
  423010:	dec    DWORD PTR [edi+0x75]
  423013:	loop   0x423046
  423015:	add    bh,bh
  423017:	mov    ebx,0xf0004a00
  42301c:	and    DWORD PTR ds:0x5589ff83,0xffffffef
  423023:	xchg   ebx,eax
  423024:	lahf   
  423025:	dec    DWORD PTR [ecx+0x2900a8]
  42302b:	ret    
  42302c:	dec    DWORD PTR [eax-0x34]
  42302f:	add    DWORD PTR [eax],0x40
  423032:	(bad)  
  423033:	stc    
  423034:	add    BYTE PTR [eax],0x0
  423037:	pop    ds
  423038:	call   DWORD PTR [ebx-0x6d00797d]
  42303e:	add    bh,bh
  423040:	mov    DWORD PTR [eax+0xfe38ce],ecx
  423046:	add    BYTE PTR [eax+eax*1],ch
  423049:	dec    esi
  42304a:	dec    ebx
  42304c:	add    BYTE PTR [eax-0x4e00ff01],ah
  423052:	fwait
  423053:	repz inc ebp
  423055:	inc    DWORD PTR [eax]
  423057:	mov    ds:0x38006ccc,al
  42305c:	add    BYTE PTR [ecx],al
  42305e:	(bad)  
  42305f:	inc    DWORD PTR [ebx+0x56a781d0]
  423065:	int3   
  423066:	add    BYTE PTR [eax+eax*1+0xa4009a],ah
  42306d:	inc    esp
  42306e:	add    BYTE PTR [ecx-0x64aa4301],cl
  423074:	or     eax,0xffc6ffff
  423079:	sub    DWORD PTR [eax],eax
  42307b:	(bad)  
  42307c:	add    BYTE PTR [edi+edi*8-0x5d80ff77],ah
  423083:	lahf   
  423084:	mov    ebp,0xffc7ff00
  423089:	loope  0x42300e
  42308b:	mov    ebx,0xffff0483
  423090:	int3   
  423091:	xor    al,0x93
  423093:	jp     0x42307e
  423095:	(bad)  
  423096:	jmp    edi
  423098:	adc    DWORD PTR [ebx-0x1],0xffffffa1
  42309c:	int3   
  42309d:	mov    ch,0x0
  42309f:	(bad)  
  4230a0:	jmp    FWORD PTR [ecx]
  4230a2:	inc    eax
  4230a3:	lds    ebp,FWORD PTR [ecx+0xdb0083]
  4230a9:	add    eax,0x9dffedff
  4230ae:	add    BYTE PTR [ecx-0x43c7a301],cl
  4230b4:	add    eax,0xfff0cc83
  4230b9:	push   ecx
  4230ba:	jmp    esp
  4230bc:	add    BYTE PTR [eax-0x1],cl
  4230bf:	add    DWORD PTR [eax],0x42
  4230c2:	clc    
  4230c3:	nop
  4230c4:	sub    ecx,esp
  4230c6:	call   DWORD PTR [eax-0x3dffdf77]
  4230cc:	call   DWORD PTR [esi-0x1]
  4230cf:	add    DWORD PTR [eax],0xfffffff8
  4230d2:	xchg   edi,eax
  4230d3:	(bad)
  4230d6:	(bad)  
  4230d7:	cmp    edi,edi
  4230d9:	mov    edi,?
  4230db:	cmp    edi,edi
  4230dd:	ret    
  4230de:	add    bh,bh
  4230e0:	call   DWORD PTR [edi]
  4230e2:	cmp    bh,BYTE PTR [edx-0x26330070]
  4230e8:	add    al,cl
  4230ea:	push   DWORD PTR [edx]
  4230ec:	jmp    DWORD PTR [edi+edi*8+0x0]
  4230f0:	call   FWORD PTR [edi-0xf97b62]
  4230f6:	call   esi
  4230f8:	sbb    DWORD PTR [esi+0x0],0xffffffd9
  4230fc:	sub    DWORD PTR [edi+edi*8+0x5dc28383],0xffffff9c
  423104:	cmp    bh,0xff
  423107:	popf   
  423108:	jmp    ebp
  42310a:	add    al,al
  42310c:	add    BYTE PTR [edi],dl
  42310e:	(bad)  
  42310f:	inc    DWORD PTR [eax]
  423111:	push   ebx
  423112:	push   cs
  423113:	ja     0x4230c4
  423115:	mov    edi,edi
  423117:	lods   al,BYTE PTR ds:[esi]
  423118:	add    BYTE PTR [eax-0x7d],ch
  42311b:	mov    bl,0xff
  42311d:	ror    ah,cl
  42311f:	dec    esp
  423121:	add    eax,0xb37512
  423126:	dec    edi
  423128:	int3   
  423129:	les    eax,FWORD PTR [eax]
  42312b:	mov    ebp,0xff8342ff
  423130:	adc    ebx,0xffffff98
  423133:	stos   DWORD PTR es:[edi],eax
  423134:	mov    bh,bh
  423136:	add    BYTE PTR [edx],cl
  423138:	call   DWORD PTR [edi-0x10007a01]
  42313e:	add    bh,bh
  423140:	add    BYTE PTR [eax],ah
  423142:	and    esi,DWORD PTR [ecx-0x6e]
  423145:	or     DWORD PTR [ecx-0x33adff8f],0xffffffbb
  42314c:	inc    edi
  42314e:	inc    DWORD PTR [ebx-0x47904c01]
  423154:	lock cmp edi,0xffffffde
  423158:	add    al,bh
  42315a:	int3   
  42315b:	mov    bh,bh
  42315d:	rol    DWORD PTR [ebx+0x6f03cc00],cl
  423163:	jbe    0x4231c2
  423165:	int3   
  423166:	(bad)  
  423167:	inc    BYTE PTR [ebx+0xe600fc]
  42316d:	nop
  42316e:	cmp    edi,0x0
  423171:	call   0xffa73196
  423176:	(bad)  
  423177:	out    dx,eax
  423178:	jmp    DWORD PTR [edi-0x1]
  42317b:	loopne 0x42317c
  42317d:	xor    cl,BYTE PTR [ecx+0x7cdff00]
  423183:	in     al,dx
  423184:	scas   eax,DWORD PTR es:[edi]
  423185:	add    BYTE PTR [eax],al
  423187:	inc    edi
  423188:	(bad)  
  423189:	mov    esp,0xcaffdc00
  42318e:	add    bh,bh
  423190:	sbb    DWORD PTR [esi-0x12],0x2c
  423194:	out    0x0,al
  423196:	call   DWORD PTR [edx-0x2d007401]
  42319c:	int3   
  42319d:	pop    eax
  42319e:	dec    DWORD PTR [ecx+0x7be463ff]
  4231a4:	xchg   ebp,eax
  4231a5:	add    bh,bh
  4231a7:	pop    edi
  4231a8:	add    BYTE PTR [edx-0x77],bl
  4231ab:	cmp    al,0xcc
  4231ad:	out    dx,eax
  4231ae:	inc    DWORD PTR [eax]
  4231b0:	sub    esp,0x330
  4231b6:	push   esi
  4231b7:	mov    esi,DWORD PTR ds:0x44502c
  4231bd:	push   0xf8
  4231c2:	push   0x42
  4231c4:	call   esi
  4231c6:	push   0xbc
  4231cb:	push   0x42
  4231cd:	mov    DWORD PTR [esp+0x10],eax
  4231d1:	call   esi
  4231d3:	push   0xf4
  4231d8:	push   0x42
  4231da:	mov    DWORD PTR [esp+0x1c],eax
  4231de:	call   esi
  4231e0:	push   0xf6
  4231e5:	push   0x42
  4231e7:	mov    DWORD PTR [esp+0x18],eax
  4231eb:	call   esi
  4231ed:	push   0x76
  4231ef:	push   0x42
  4231f1:	mov    DWORD PTR [esp+0xc],eax
  4231f5:	call   esi
  4231f7:	mov    edx,DWORD PTR ds:0x448094
  4231fd:	push   ebx
  4231fe:	mov    DWORD PTR [esp+0x10],eax
  423202:	mov    eax,ds:0x448d04
  423207:	push   ebp
  423208:	add    eax,0x204c
  42320d:	mov    esi,0x52
  423212:	push   edi
  423213:	movzx  ecx,BYTE PTR [edx+0x6]
  423217:	movzx  edi,WORD PTR [edx+0x3]
  42321b:	movzx  edx,BYTE PTR [edx]
  42321e:	shl    ecx,0x10
  423221:	add    ecx,edi
  423223:	shl    ecx,0x8
  423226:	add    ecx,edx
  423228:	mov    DWORD PTR ds:0x448cf0,ecx
  42322e:	mov    edx,0xc4fe0077
  423233:	sub    edx,DWORD PTR ds:0x448d00
  423239:	xor    edx,ecx
  42323b:	mov    DWORD PTR [eax],edx
  42323d:	mov    edx,DWORD PTR ds:0x448094
  423243:	add    edx,0x8
  423246:	mov    DWORD PTR ds:0x448094,edx
  42324c:	movzx  ecx,BYTE PTR [edx+0x6]
  423250:	movzx  edi,WORD PTR [edx+0x3]
  423254:	movzx  edx,BYTE PTR [edx]
  423257:	shl    ecx,0x10
  42325a:	add    ecx,edi
  42325c:	shl    ecx,0x8
  42325f:	add    ecx,edx
  423261:	mov    DWORD PTR ds:0x448cf0,ecx
  423267:	mov    edx,0xc4fe0077
  42326c:	sub    edx,DWORD PTR ds:0x448d00
  423272:	xor    edx,ecx
  423274:	mov    DWORD PTR [eax+0x4],edx
  423277:	mov    edx,DWORD PTR ds:0x448094
  42327d:	add    edx,0x8
  423280:	mov    DWORD PTR ds:0x448094,edx
  423286:	movzx  ecx,BYTE PTR [edx+0x6]
  42328a:	movzx  edi,WORD PTR [edx+0x3]
  42328e:	movzx  edx,BYTE PTR [edx]
  423291:	shl    ecx,0x10
  423294:	add    ecx,edi
  423296:	shl    ecx,0x8
  423299:	add    ecx,edx
  42329b:	mov    DWORD PTR ds:0x448cf0,ecx
  4232a1:	mov    edx,0xc4fe0077
  4232a6:	sub    edx,DWORD PTR ds:0x448d00
  4232ac:	xor    edx,ecx
  4232ae:	mov    DWORD PTR [eax+0x8],edx
  4232b1:	mov    edx,DWORD PTR ds:0x448094
  4232b7:	add    edx,0x8
  4232ba:	mov    DWORD PTR ds:0x448094,edx
  4232c0:	movzx  ecx,BYTE PTR [edx+0x6]
  4232c4:	movzx  edi,WORD PTR [edx+0x3]
  4232c8:	movzx  edx,BYTE PTR [edx]
  4232cb:	shl    ecx,0x10
  4232ce:	add    ecx,edi
  4232d0:	shl    ecx,0x8
  4232d3:	add    ecx,edx
  4232d5:	mov    DWORD PTR ds:0x448cf0,ecx
  4232db:	mov    edx,0xc4fe0077
  4232e0:	sub    edx,DWORD PTR ds:0x448d00
  4232e6:	xor    edx,ecx
  4232e8:	mov    DWORD PTR [eax+0xc],edx
  4232eb:	mov    edx,DWORD PTR ds:0x448094
  4232f1:	add    edx,0x8
  4232f4:	mov    DWORD PTR ds:0x448094,edx
  4232fa:	movzx  ecx,BYTE PTR [edx+0x6]
  4232fe:	movzx  edi,WORD PTR [edx+0x3]
  423302:	movzx  edx,BYTE PTR [edx]
  423305:	shl    ecx,0x10
  423308:	add    ecx,edi
  42330a:	shl    ecx,0x8
  42330d:	add    ecx,edx
  42330f:	mov    DWORD PTR ds:0x448cf0,ecx
  423315:	mov    edx,0xc4fe0077
  42331a:	sub    edx,DWORD PTR ds:0x448d00
  423320:	xor    edx,ecx
  423322:	mov    DWORD PTR [eax+0x10],edx
  423325:	mov    edx,DWORD PTR ds:0x448094
  42332b:	add    edx,0x8
  42332e:	mov    DWORD PTR ds:0x448094,edx
  423334:	movzx  ecx,BYTE PTR [edx+0x6]
  423338:	movzx  edi,WORD PTR [edx+0x3]
  42333c:	movzx  edx,BYTE PTR [edx]
  42333f:	shl    ecx,0x10
  423342:	add    ecx,edi
  423344:	shl    ecx,0x8
  423347:	add    ecx,edx
  423349:	mov    edx,0xc4fe0077
  42334e:	sub    edx,DWORD PTR ds:0x448d00
  423354:	mov    DWORD PTR ds:0x448cf0,ecx
  42335a:	xor    edx,ecx
  42335c:	mov    DWORD PTR [eax+0x14],edx
  42335f:	mov    edx,DWORD PTR ds:0x448094
  423365:	add    edx,0x8
  423368:	add    eax,0x18
  42336b:	dec    esi
  42336c:	mov    DWORD PTR ds:0x448094,edx
  423372:	jne    0x423213
  423378:	mov    eax,ds:0x448d04
  42337d:	mov    edx,DWORD PTR ds:0x448098
  423383:	add    eax,0x27fc
  423388:	mov    esi,0x32
  42338d:	lea    ecx,[ecx+0x0]
  423390:	movzx  ecx,BYTE PTR [edx+0x5]
  423394:	movzx  edi,BYTE PTR [edx+0x3]
  423398:	movzx  edx,WORD PTR [edx]
  42339b:	shl    ecx,0x8
  42339e:	add    ecx,edi
  4233a0:	shl    ecx,0x10
  4233a3:	add    ecx,edx
  4233a5:	mov    edx,DWORD PTR ds:0x448d00
  4233ab:	mov    DWORD PTR ds:0x448cf0,ecx
  4233b1:	add    edx,0x9bdce601
  4233b7:	xor    edx,ecx
  4233b9:	mov    DWORD PTR [eax],edx
  4233bb:	mov    edx,DWORD PTR ds:0x448098
  4233c1:	movzx  ecx,WORD PTR [edx+0xc]
  4233c5:	movzx  edx,WORD PTR [edx+0x8]
  4233c9:	shl    ecx,0x10
  4233cc:	add    ecx,edx
  4233ce:	mov    DWORD PTR ds:0x448cf0,ecx
  4233d4:	mov    edx,0x9be4e9cd
  4233d9:	sub    edx,DWORD PTR ds:0x448d00
  4233df:	xor    edx,ecx
  4233e1:	mov    DWORD PTR [eax+0x4],edx
  4233e4:	mov    edx,DWORD PTR ds:0x448098
  4233ea:	add    edx,0x10
  4233ed:	mov    DWORD PTR ds:0x448098,edx
  4233f3:	movzx  ecx,BYTE PTR [edx+0x5]
  4233f7:	movzx  edi,BYTE PTR [edx+0x3]
  4233fb:	movzx  edx,WORD PTR [edx]
  4233fe:	shl    ecx,0x8
  423401:	add    ecx,edi
  423403:	shl    ecx,0x10
  423406:	add    ecx,edx
  423408:	mov    edx,DWORD PTR ds:0x448d00
  42340e:	mov    DWORD PTR ds:0x448cf0,ecx
  423414:	add    edx,0x9bdce601
  42341a:	xor    edx,ecx
  42341c:	mov    DWORD PTR [eax+0x8],edx
  42341f:	mov    edx,DWORD PTR ds:0x448098
  423425:	movzx  ecx,WORD PTR [edx+0xc]
  423429:	movzx  edx,WORD PTR [edx+0x8]
  42342d:	shl    ecx,0x10
  423430:	add    ecx,edx
  423432:	mov    DWORD PTR ds:0x448cf0,ecx
  423438:	mov    edx,0x9be4e9cd
  42343d:	sub    edx,DWORD PTR ds:0x448d00
  423443:	xor    edx,ecx
  423445:	mov    DWORD PTR [eax+0xc],edx
  423448:	mov    edx,DWORD PTR ds:0x448098
  42344e:	add    edx,0x10
  423451:	mov    DWORD PTR ds:0x448098,edx
  423457:	movzx  ecx,BYTE PTR [edx+0x5]
  42345b:	movzx  edi,BYTE PTR [edx+0x3]
  42345f:	movzx  edx,WORD PTR [edx]
  423462:	shl    ecx,0x8
  423465:	add    ecx,edi
  423467:	shl    ecx,0x10
  42346a:	add    ecx,edx
  42346c:	mov    edx,DWORD PTR ds:0x448d00
  423472:	mov    DWORD PTR ds:0x448cf0,ecx
  423478:	add    edx,0x9bdce601
  42347e:	xor    edx,ecx
  423480:	mov    DWORD PTR [eax+0x10],edx
  423483:	mov    edx,DWORD PTR ds:0x448098
  423489:	movzx  ecx,WORD PTR [edx+0xc]
  42348d:	movzx  edx,WORD PTR [edx+0x8]
  423491:	shl    ecx,0x10
  423494:	add    ecx,edx
  423496:	mov    DWORD PTR ds:0x448cf0,ecx
  42349c:	mov    edx,0x9be4e9cd
  4234a1:	sub    edx,DWORD PTR ds:0x448d00
  4234a7:	xor    edx,ecx
  4234a9:	mov    DWORD PTR [eax+0x14],edx
  4234ac:	mov    edx,DWORD PTR ds:0x448098
  4234b2:	add    edx,0x10
  4234b5:	mov    DWORD PTR ds:0x448098,edx
  4234bb:	movzx  ecx,BYTE PTR [edx+0x5]
  4234bf:	movzx  edi,BYTE PTR [edx+0x3]
  4234c3:	movzx  edx,WORD PTR [edx]
  4234c6:	shl    ecx,0x8
  4234c9:	add    ecx,edi
  4234cb:	shl    ecx,0x10
  4234ce:	add    ecx,edx
  4234d0:	mov    edx,DWORD PTR ds:0x448d00
  4234d6:	add    edx,0x9bdce601
  4234dc:	xor    edx,ecx
  4234de:	mov    DWORD PTR ds:0x448cf0,ecx
  4234e4:	mov    DWORD PTR [eax+0x18],edx
  4234e7:	mov    edx,DWORD PTR ds:0x448098
  4234ed:	movzx  ecx,WORD PTR [edx+0xc]
  4234f1:	movzx  edx,WORD PTR [edx+0x8]
  4234f5:	shl    ecx,0x10
  4234f8:	add    ecx,edx
  4234fa:	mov    DWORD PTR ds:0x448cf0,ecx
  423500:	mov    edx,0x9be4e9cd
  423505:	sub    edx,DWORD PTR ds:0x448d00
  42350b:	add    eax,0x30
  42350e:	xor    edx,ecx
  423510:	mov    DWORD PTR [eax-0x14],edx
  423513:	mov    edx,DWORD PTR ds:0x448098
  423519:	add    edx,0x10
  42351c:	mov    DWORD PTR ds:0x448098,edx
  423522:	movzx  ecx,BYTE PTR [edx+0x5]
  423526:	movzx  edi,BYTE PTR [edx+0x3]
  42352a:	movzx  edx,WORD PTR [edx]
  42352d:	shl    ecx,0x8
  423530:	add    ecx,edi
  423532:	shl    ecx,0x10
  423535:	add    ecx,edx
  423537:	mov    edx,DWORD PTR ds:0x448d00
  42353d:	add    edx,0x9bdce601
  423543:	xor    edx,ecx
  423545:	mov    DWORD PTR ds:0x448cf0,ecx
  42354b:	mov    DWORD PTR [eax-0x10],edx
  42354e:	mov    edx,DWORD PTR ds:0x448098
  423554:	movzx  ecx,WORD PTR [edx+0xc]
  423558:	movzx  edx,WORD PTR [edx+0x8]
  42355c:	shl    ecx,0x10
  42355f:	add    ecx,edx
  423561:	mov    DWORD PTR ds:0x448cf0,ecx
  423567:	mov    edx,0x9be4e9cd
  42356c:	sub    edx,DWORD PTR ds:0x448d00
  423572:	xor    edx,ecx
  423574:	mov    DWORD PTR [eax-0xc],edx
  423577:	mov    edx,DWORD PTR ds:0x448098
  42357d:	add    edx,0x10
  423580:	mov    DWORD PTR ds:0x448098,edx
  423586:	movzx  ecx,BYTE PTR [edx+0x5]
  42358a:	movzx  edi,BYTE PTR [edx+0x3]
  42358e:	movzx  edx,WORD PTR [edx]
  423591:	shl    ecx,0x8
  423594:	add    ecx,edi
  423596:	shl    ecx,0x10
  423599:	add    ecx,edx
  42359b:	mov    edx,DWORD PTR ds:0x448d00
  4235a1:	add    edx,0x9bdce601
  4235a7:	xor    edx,ecx
  4235a9:	mov    DWORD PTR ds:0x448cf0,ecx
  4235af:	mov    DWORD PTR [eax-0x8],edx
  4235b2:	mov    edx,DWORD PTR ds:0x448098
  4235b8:	movzx  ecx,WORD PTR [edx+0xc]
  4235bc:	movzx  edx,WORD PTR [edx+0x8]
  4235c0:	shl    ecx,0x10
  4235c3:	add    ecx,edx
  4235c5:	mov    edx,0x9be4e9cd
  4235ca:	sub    edx,DWORD PTR ds:0x448d00
  4235d0:	mov    DWORD PTR ds:0x448cf0,ecx
  4235d6:	xor    edx,ecx
  4235d8:	mov    DWORD PTR [eax-0x4],edx
  4235db:	mov    edx,DWORD PTR ds:0x448098
  4235e1:	add    edx,0x10
  4235e4:	dec    esi
  4235e5:	mov    DWORD PTR ds:0x448098,edx
  4235eb:	jne    0x423390
  4235f1:	movzx  ecx,BYTE PTR [edx+0x5]
  4235f5:	movzx  esi,BYTE PTR [edx+0x3]
  4235f9:	movzx  edx,WORD PTR [edx]
  4235fc:	shl    ecx,0x8
  4235ff:	add    ecx,esi
  423601:	shl    ecx,0x10
  423604:	add    ecx,edx
  423606:	mov    edx,0x9be4e9cd
  42360b:	sub    edx,DWORD PTR ds:0x448d00
  423611:	mov    DWORD PTR ds:0x448cf0,ecx
  423617:	xor    edx,ecx
  423619:	mov    DWORD PTR [eax],edx
  42361b:	mov    edx,DWORD PTR ds:0x448d04
  423621:	mov    ecx,DWORD PTR ds:0x44809c
  423627:	add    edx,0x3160
  42362d:	mov    esi,0x8b
  423632:	movzx  eax,BYTE PTR [ecx+0x9]
  423636:	movzx  edi,WORD PTR [ecx+0x7]
  42363a:	movzx  ecx,BYTE PTR [ecx+0x2]
  42363e:	shl    eax,0x10
  423641:	add    eax,edi
  423643:	shl    eax,0x8
  423646:	add    eax,ecx
  423648:	mov    ds:0x448cf0,eax
  42364d:	mov    ecx,0x97fbe0a8
  423652:	sub    ecx,DWORD PTR ds:0x448d00
  423658:	add    edx,0x8
  42365b:	xor    ecx,eax
  42365d:	mov    DWORD PTR [edx-0x8],ecx
  423660:	mov    ecx,DWORD PTR ds:0x44809c
  423666:	movzx  eax,BYTE PTR [ecx+0xf]
  42366a:	movzx  edi,BYTE PTR [ecx+0xd]
  42366e:	movzx  ecx,WORD PTR [ecx+0xa]
  423672:	shl    eax,0x8
  423675:	add    eax,edi
  423677:	shl    eax,0x10
  42367a:	add    eax,ecx
  42367c:	mov    ecx,DWORD PTR ds:0x448d00
  423682:	add    ecx,0x97f3dcdc
  423688:	xor    ecx,eax
  42368a:	mov    ds:0x448cf0,eax
  42368f:	mov    DWORD PTR [edx-0x4],ecx
  423692:	mov    ecx,DWORD PTR ds:0x44809c
  423698:	add    ecx,0x10
  42369b:	dec    esi
  42369c:	mov    DWORD PTR ds:0x44809c,ecx
  4236a2:	jne    0x423632
  4236a4:	movzx  eax,BYTE PTR [ecx+0x9]
  4236a8:	movzx  esi,WORD PTR [ecx+0x7]
  4236ac:	movzx  ecx,BYTE PTR [ecx+0x2]
  4236b0:	shl    eax,0x10
  4236b3:	add    eax,esi
  4236b5:	shl    eax,0x8
  4236b8:	add    eax,ecx
  4236ba:	mov    ecx,DWORD PTR ds:0x448d00
  4236c0:	add    ecx,0x97f3dcdc
  4236c6:	xor    ecx,eax
  4236c8:	mov    ds:0x448cf0,eax
  4236cd:	mov    DWORD PTR [edx],ecx
  4236cf:	mov    ecx,DWORD PTR ds:0x448d04
  4236d5:	mov    edx,DWORD PTR ds:0x4480a0
  4236db:	add    ecx,0x35bc
  4236e1:	mov    esi,0x14b
  4236e6:	jmp    0x4236f0
  4236e8:	lea    esp,[esp+0x0]
  4236ef:	nop
  4236f0:	movzx  eax,WORD PTR [edx+0x6]
  4236f4:	movzx  edi,BYTE PTR [edx+0x4]
  4236f8:	movzx  edx,BYTE PTR [edx+0x2]
  4236fc:	shl    eax,0x8
  4236ff:	add    eax,edi
  423701:	shl    eax,0x8
  423704:	add    eax,edx
  423706:	mov    ds:0x448cf0,eax
  42370b:	mov    edx,0x18691e25
  423710:	sub    edx,DWORD PTR ds:0x448d00
  423716:	add    ecx,0x8
  423719:	xor    edx,eax
  42371b:	mov    DWORD PTR [ecx-0x8],edx
  42371e:	mov    edx,DWORD PTR ds:0x4480a0
  423724:	movzx  eax,WORD PTR [edx+0xe]
  423728:	movzx  edi,BYTE PTR [edx+0xb]
  42372c:	movzx  edx,BYTE PTR [edx+0x8]
  423730:	shl    eax,0x8
  423733:	add    eax,edi
  423735:	shl    eax,0x8
  423738:	add    eax,edx
  42373a:	mov    edx,0x18691e25
  42373f:	sub    edx,DWORD PTR ds:0x448d00
  423745:	mov    ds:0x448cf0,eax
  42374a:	xor    edx,eax
  42374c:	mov    DWORD PTR [ecx-0x4],edx
  42374f:	mov    edx,DWORD PTR ds:0x4480a0
  423755:	add    edx,0x10
  423758:	dec    esi
  423759:	mov    DWORD PTR ds:0x4480a0,edx
  42375f:	jne    0x4236f0
  423761:	mov    esi,DWORD PTR ds:0x448d04
  423767:	mov    ebp,DWORD PTR ds:0x445014
  42376d:	push   0x0
  42376f:	add    esi,0x4014
  423775:	call   ebp
  423777:	mov    ebx,DWORD PTR ds:0x445068
  42377d:	mov    edi,0x11f
  423782:	push   0x100
  423787:	lea    eax,[esp+0x144]
  42378e:	push   eax
  42378f:	push   0x447a8c
  423794:	call   ebx
  423796:	mov    ecx,DWORD PTR ds:0x4480a4
  42379c:	mov    eax,DWORD PTR [ecx+0x3]
  42379f:	mov    edx,0x201cfdb2
  4237a4:	sub    edx,DWORD PTR ds:0x448d00
  4237aa:	mov    ds:0x448cf0,eax
  4237af:	xor    edx,eax
  4237b1:	mov    DWORD PTR [esi],edx
  4237b3:	add    DWORD PTR ds:0x4480a4,0x8
  4237ba:	add    esi,0x4
  4237bd:	dec    edi
  4237be:	jne    0x423782
  4237c0:	mov    eax,ds:0x448d04
  4237c5:	mov    edx,DWORD PTR ds:0x4480a8
  4237cb:	add    eax,0x4490
  4237d0:	lea    esi,[edi+0x3c]
  4237d3:	movzx  ecx,BYTE PTR [edx+0x4]
  4237d7:	movzx  edi,WORD PTR [edx+0x2]
  4237db:	movzx  edx,BYTE PTR [edx]
  4237de:	shl    ecx,0x10
  4237e1:	add    ecx,edi
  4237e3:	shl    ecx,0x8
  4237e6:	add    ecx,edx
  4237e8:	mov    DWORD PTR ds:0x448cf0,ecx
  4237ee:	mov    edx,0xa45edd04
  4237f3:	sub    edx,DWORD PTR ds:0x448d00
  4237f9:	xor    edx,ecx
  4237fb:	mov    DWORD PTR [eax],edx
  4237fd:	mov    edx,DWORD PTR ds:0x4480a8
  423803:	movzx  ecx,BYTE PTR [edx+0xe]
  423807:	movzx  edi,BYTE PTR [edx+0xc]
  42380b:	shl    ecx,0x8
  42380e:	add    ecx,edi
  423810:	movzx  edi,BYTE PTR [edx+0x9]
  423814:	movzx  edx,BYTE PTR [edx+0x5]
  423818:	shl    ecx,0x8
  42381b:	add    ecx,edi
  42381d:	shl    ecx,0x8
  423820:	add    ecx,edx
  423822:	mov    edx,DWORD PTR ds:0x448d00
  423828:	mov    DWORD PTR ds:0x448cf0,ecx
  42382e:	add    edx,0xa456d938
  423834:	xor    edx,ecx
  423836:	mov    DWORD PTR [eax+0x4],edx
  423839:	mov    edx,DWORD PTR ds:0x4480a8
  42383f:	add    edx,0x10
  423842:	mov    DWORD PTR ds:0x4480a8,edx
  423848:	movzx  ecx,BYTE PTR [edx+0x4]
  42384c:	movzx  edi,WORD PTR [edx+0x2]
  423850:	movzx  edx,BYTE PTR [edx]
  423853:	shl    ecx,0x10
  423856:	add    ecx,edi
  423858:	shl    ecx,0x8
  42385b:	add    ecx,edx
  42385d:	mov    DWORD PTR ds:0x448cf0,ecx
  423863:	mov    edx,0xa45edd04
  423868:	sub    edx,DWORD PTR ds:0x448d00
  42386e:	xor    edx,ecx
  423870:	mov    DWORD PTR [eax+0x8],edx
  423873:	mov    edx,DWORD PTR ds:0x4480a8
  423879:	movzx  ecx,BYTE PTR [edx+0xe]
  42387d:	movzx  edi,BYTE PTR [edx+0xc]
  423881:	shl    ecx,0x8
  423884:	add    ecx,edi
  423886:	movzx  edi,BYTE PTR [edx+0x9]
  42388a:	movzx  edx,BYTE PTR [edx+0x5]
  42388e:	shl    ecx,0x8
  423891:	add    ecx,edi
  423893:	shl    ecx,0x8
  423896:	add    ecx,edx
  423898:	mov    edx,DWORD PTR ds:0x448d00
  42389e:	mov    DWORD PTR ds:0x448cf0,ecx
  4238a4:	add    edx,0xa456d938
  4238aa:	xor    edx,ecx
  4238ac:	mov    DWORD PTR [eax+0xc],edx
  4238af:	mov    edx,DWORD PTR ds:0x4480a8
  4238b5:	add    edx,0x10
  4238b8:	mov    DWORD PTR ds:0x4480a8,edx
  4238be:	movzx  ecx,BYTE PTR [edx+0x4]
  4238c2:	movzx  edi,WORD PTR [edx+0x2]
  4238c6:	movzx  edx,BYTE PTR [edx]
  4238c9:	shl    ecx,0x10
  4238cc:	add    ecx,edi
  4238ce:	shl    ecx,0x8
  4238d1:	add    ecx,edx
  4238d3:	mov    DWORD PTR ds:0x448cf0,ecx
  4238d9:	mov    edx,0xa45edd04
  4238de:	sub    edx,DWORD PTR ds:0x448d00
  4238e4:	xor    edx,ecx
  4238e6:	mov    DWORD PTR [eax+0x10],edx
  4238e9:	mov    edx,DWORD PTR ds:0x4480a8
  4238ef:	movzx  ecx,BYTE PTR [edx+0xe]
  4238f3:	movzx  edi,BYTE PTR [edx+0xc]
  4238f7:	shl    ecx,0x8
  4238fa:	add    ecx,edi
  4238fc:	movzx  edi,BYTE PTR [edx+0x9]
  423900:	shl    ecx,0x8
  423903:	movzx  edx,BYTE PTR [edx+0x5]
  423907:	add    ecx,edi
  423909:	shl    ecx,0x8
  42390c:	add    ecx,edx
  42390e:	mov    edx,DWORD PTR ds:0x448d00
  423914:	mov    DWORD PTR ds:0x448cf0,ecx
  42391a:	add    edx,0xa456d938
  423920:	xor    edx,ecx
  423922:	mov    DWORD PTR [eax+0x14],edx
  423925:	mov    edx,DWORD PTR ds:0x4480a8
  42392b:	add    edx,0x10
  42392e:	mov    DWORD PTR ds:0x4480a8,edx
  423934:	movzx  ecx,BYTE PTR [edx+0x4]
  423938:	movzx  edi,WORD PTR [edx+0x2]
  42393c:	movzx  edx,BYTE PTR [edx]
  42393f:	shl    ecx,0x10
  423942:	add    ecx,edi
  423944:	shl    ecx,0x8
  423947:	add    ecx,edx
  423949:	mov    DWORD PTR ds:0x448cf0,ecx
  42394f:	mov    edx,0xa45edd04
  423954:	sub    edx,DWORD PTR ds:0x448d00
  42395a:	add    eax,0x28
  42395d:	xor    edx,ecx
  42395f:	mov    DWORD PTR [eax-0x10],edx
  423962:	mov    edx,DWORD PTR ds:0x4480a8
  423968:	movzx  ecx,BYTE PTR [edx+0xe]
  42396c:	movzx  edi,BYTE PTR [edx+0xc]
  423970:	shl    ecx,0x8
  423973:	add    ecx,edi
  423975:	movzx  edi,BYTE PTR [edx+0x9]
  423979:	movzx  edx,BYTE PTR [edx+0x5]
  42397d:	shl    ecx,0x8
  423980:	add    ecx,edi
  423982:	shl    ecx,0x8
  423985:	add    ecx,edx
  423987:	mov    edx,DWORD PTR ds:0x448d00
  42398d:	mov    DWORD PTR ds:0x448cf0,ecx
  423993:	add    edx,0xa456d938
  423999:	xor    edx,ecx
  42399b:	mov    DWORD PTR [eax-0xc],edx
  42399e:	mov    edx,DWORD PTR ds:0x4480a8
  4239a4:	add    edx,0x10
  4239a7:	mov    DWORD PTR ds:0x4480a8,edx
  4239ad:	movzx  ecx,BYTE PTR [edx+0x4]
  4239b1:	movzx  edi,WORD PTR [edx+0x2]
  4239b5:	movzx  edx,BYTE PTR [edx]
  4239b8:	shl    ecx,0x10
  4239bb:	add    ecx,edi
  4239bd:	shl    ecx,0x8
  4239c0:	add    ecx,edx
  4239c2:	mov    DWORD PTR ds:0x448cf0,ecx
  4239c8:	mov    edx,0xa45edd04
  4239cd:	sub    edx,DWORD PTR ds:0x448d00
  4239d3:	xor    edx,ecx
  4239d5:	mov    DWORD PTR [eax-0x8],edx
  4239d8:	mov    edx,DWORD PTR ds:0x4480a8
  4239de:	movzx  ecx,BYTE PTR [edx+0xe]
  4239e2:	movzx  edi,BYTE PTR [edx+0xc]
  4239e6:	shl    ecx,0x8
  4239e9:	add    ecx,edi
  4239eb:	movzx  edi,BYTE PTR [edx+0x9]
  4239ef:	movzx  edx,BYTE PTR [edx+0x5]
  4239f3:	shl    ecx,0x8
  4239f6:	add    ecx,edi
  4239f8:	shl    ecx,0x8
  4239fb:	add    ecx,edx
  4239fd:	mov    edx,DWORD PTR ds:0x448d00
  423a03:	add    edx,0xa456d938
  423a09:	xor    edx,ecx
  423a0b:	mov    DWORD PTR ds:0x448cf0,ecx
  423a11:	mov    DWORD PTR [eax-0x4],edx
  423a14:	mov    edx,DWORD PTR ds:0x4480a8
  423a1a:	add    edx,0x10
  423a1d:	dec    esi
  423a1e:	mov    DWORD PTR ds:0x4480a8,edx
  423a24:	jne    0x4237d3
  423a2a:	push   esi
  423a2b:	call   ebp
  423a2d:	mov    esi,DWORD PTR ds:0x448d04
  423a33:	mov    ebx,DWORD PTR ds:0x445024
  423a39:	add    esi,0x4df0
  423a3f:	mov    edi,0xbb
  423a44:	mov    eax,ds:0x4480ac
  423a49:	mov    eax,DWORD PTR [eax+0x1]
  423a4c:	lea    edx,[esp+0x24]
  423a50:	mov    ecx,0xcb700f8e
  423a55:	sub    ecx,DWORD PTR ds:0x448d00
  423a5b:	push   edx
  423a5c:	push   0x0
  423a5e:	xor    ecx,eax
  423a60:	mov    ds:0x448cf0,eax
  423a65:	push   0x3
  423a67:	mov    DWORD PTR [esi],ecx
  423a69:	call   ebx
  423a6b:	mov    eax,ds:0x4480ac
  423a70:	movzx  ecx,BYTE PTR [eax+0xd]
  423a74:	movzx  edx,BYTE PTR [eax+0xb]
  423a78:	shl    ecx,0x8
  423a7b:	add    ecx,edx
  423a7d:	movzx  edx,BYTE PTR [eax+0x9]
  423a81:	movzx  eax,BYTE PTR [eax+0x7]
  423a85:	shl    ecx,0x8
  423a88:	add    ecx,edx
  423a8a:	shl    ecx,0x8
  423a8d:	add    ecx,eax
  423a8f:	push   0x0
  423a91:	mov    DWORD PTR ds:0x448cf0,ecx
  423a97:	call   ebp
  423a99:	mov    ecx,DWORD PTR ds:0x448d00
  423a9f:	add    ecx,0xcb680bc2
  423aa5:	xor    ecx,DWORD PTR ds:0x448cf0
  423aab:	add    esi,0x8
  423aae:	mov    DWORD PTR [esi-0x4],ecx
  423ab1:	add    DWORD PTR ds:0x4480ac,0x10
  423ab8:	dec    edi
  423ab9:	jne    0x423a44
  423abb:	mov    eax,DWORD PTR [esp+0x14]
  423abf:	mov    esi,DWORD PTR ds:0x445030
  423ac5:	pop    edi
  423ac6:	pop    ebp
  423ac7:	pop    ebx
  423ac8:	test   eax,eax
  423aca:	je     0x423acf
  423acc:	push   eax
  423acd:	call   esi
  423acf:	mov    eax,DWORD PTR [esp+0x14]
  423ad3:	test   eax,eax
  423ad5:	je     0x423ada
  423ad7:	push   eax
  423ad8:	call   esi
  423ada:	mov    eax,DWORD PTR [esp+0x10]
  423ade:	test   eax,eax
  423ae0:	je     0x423ae5
  423ae2:	push   eax
  423ae3:	call   esi
  423ae5:	mov    eax,DWORD PTR [esp+0x4]
  423ae9:	test   eax,eax
  423aeb:	je     0x423af0
  423aed:	push   eax
  423aee:	call   esi
  423af0:	mov    eax,DWORD PTR [esp+0xc]
  423af4:	test   eax,eax
  423af6:	je     0x423afb
  423af8:	push   eax
  423af9:	call   esi
  423afb:	pop    esi
  423afc:	add    esp,0x330
  423b02:	ret    
  423b03:	int3   
  423b04:	int3   
  423b05:	int3   
  423b06:	int3   
  423b07:	int3   
  423b08:	int3   
  423b09:	int3   
  423b0a:	int3   
  423b0b:	int3   
  423b0c:	int3   
  423b0d:	int3   
  423b0e:	int3   
  423b0f:	int3   
  423b10:	sub    DWORD PTR [ecx-0x7c17ff31],ecx
  423b16:	mov    DWORD PTR [esi-0x8d000e],eax
  423b1c:	xchg   esi,eax
  423b1d:	add    bh,bh
  423b1f:	or     eax,0xff0ccc6c
  423b24:	xchg   esi,eax
  423b25:	dec    DWORD PTR [ecx-0x7dff210c]
  423b2b:	call   FWORD PTR [ebx+0x0]
  423b2e:	dec    DWORD PTR [edi]
  423b30:	add    BYTE PTR [ebx+0xcfb001a],al
  423b36:	int3   
  423b37:	in     eax,dx
  423b38:	cs xor al,0xff
  423b3b:	int3   
  423b3c:	retf   
  423b3d:	pusha  
  423b3e:	(bad)  
  423b3f:	inc    DWORD PTR [ebx+0x2affb600]
  423b45:	in     eax,0xff
  423b47:	mul    DWORD PTR [esp+ebp*4-0x1]
  423b4b:	int3   
  423b4c:	mov    eax,ds:0x83ffff16
  423b51:	add    BYTE PTR [edi],dh
  423b53:	(bad)  
  423b54:	jle    0x423b1d
  423b56:	add    bl,dl
  423b58:	rcl    BYTE PTR [edx+0xcb189ff],0x0
  423b5f:	(bad)  
  423b60:	inc    DWORD PTR [eax]
  423b62:	stos   BYTE PTR es:[edi],al
  423b63:	sub    DWORD PTR [eax-0x70],0xffffffff
  423b67:	fwait
  423b68:	int3   
  423b69:	in     eax,0xcc
  423b6b:	push   DWORD PTR [esi]
  423b6d:	mov    ch,0x0
  423b6f:	dec    DWORD PTR [ecx-0xa33b67d]
  423b75:	sub    DWORD PTR [eax],eax
  423b77:	rcpps  xmm2,XMMWORD PTR [eax-0x1]
  423b7b:	add    BYTE PTR [ecx],dh
  423b7d:	mov    DWORD PTR [eax],0x52008383
  423b83:	add    BYTE PTR [eax+0x3b],al
  423b86:	add    BYTE PTR [eax],ch
  423b88:	push   ecx
  423b89:	ror    BYTE PTR [ecx+0xbbc2ff],1
  423b8f:	(bad)  
  423b90:	inc    DWORD PTR [eax]
  423b92:	jne    0x423b93
  423b94:	call   0xfb3f0800
  423b99:	ret    
  423b9a:	(bad)  
  423b9b:	jmp    FWORD PTR [eax]
  423b9d:	sbb    edi,edi
  423b9f:	inc    DWORD PTR [eax]
  423ba1:	dec    DWORD PTR [edx]
  423ba3:	dec    ebp
  423ba5:	push   ebp
  423ba6:	(bad)  
  423ba7:	aas    
  423ba8:	ret    0x61
  423bab:	jmp    DWORD PTR [edx+0xff8349]
  423bb1:	or     esi,0xffffffff
  423bb4:	jae    0x423bff
  423bb6:	sub    DWORD PTR [eax-0x330075ca],0x5f
  423bbd:	xchg   esp,eax
  423bbe:	add    BYTE PTR [eax],al
  423bc0:	inc    DWORD PTR [eax]
  423bc2:	popa   
  423bc3:	int3   
  423bc4:	lea    edx,[esi]
  423bc6:	dec    DWORD PTR [ecx-0x7c7c1dd4]
  423bcc:	mov    esi,DWORD PTR [ebp-0x33000001]
  423bd2:	js     0x423bd3
  423bd4:	sbb    ecx,DWORD PTR [ebx-0x7d]
  423bd7:	or     DWORD PTR [ebx],esp
  423bd9:	push   esp
  423bda:	inc    DWORD PTR [eax]
  423bdc:	push   esi
  423bdd:	ret    
  423bde:	add    bh,bh
  423be0:	add    ah,cl
  423be2:	stc    
  423be3:	dec    DWORD PTR ds:0x3836ff21
  423be9:	add    edi,edi
  423beb:	call   ebp
  423bed:	ss (bad) 
  423bef:	(bad)  
  423bf0:	(bad)  
  423bf1:	jmp    DWORD PTR [ebp-0xd4c301]
  423bf7:	test   BYTE PTR [edx+0x31ff89a1],bh
  423bfd:	fdivr  st,st(7)
  423bff:	add    BYTE PTR [eax],al
  423c01:	call   DWORD PTR [edi-0x332af201]
  423c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c08:	xchg   esp,eax
  423c09:	mov    eax,0xd5e50000
  423c0e:	(bad)  
  423c0f:	inc    DWORD PTR [eax]
  423c11:	add    dh,dh
  423c13:	mov    DWORD PTR [ebp+0x13],ebx
  423c16:	add    dl,al
  423c18:	sar    DWORD PTR [ecx],1
  423c1a:	(bad)  
  423c1b:	jmp    FWORD PTR [ecx-0x76003313]
  423c21:	call   DWORD PTR [ebp-0x213f01]
  423c27:	mov    ds:0x83ff032f,eax
  423c2c:	sbb    eax,0x89004b
  423c31:	add    BYTE PTR [edx-0x33ab4534],ch
  423c37:	test   DWORD PTR [edx],ecx
  423c39:	push   ss
  423c3a:	int3   
  423c3b:	dec    ebp
  423c3d:	ins    BYTE PTR es:[edi],dx
  423c3e:	inc    DWORD PTR [ebx-0x60100]
  423c44:	cld    
  423c45:	out    0xff,al
  423c47:	aaa    
  423c48:	pop    eax
  423c49:	xchg   ebx,eax
  423c4a:	inc    DWORD PTR [ebx-0xffb33d]
  423c50:	add    BYTE PTR [eax],al
  423c52:	ja     0x423c53
  423c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c55:	pusha  
  423c56:	inc    DWORD PTR [ebp-0x3c]
  423c59:	(bad)  
  423c5a:	inc    DWORD PTR [eax]
  423c5c:	pusha  
  423c5d:	xor    eax,0xff0000
  423c62:	cwde   
  423c63:	add    dh,ah
  423c65:	scas   al,BYTE PTR es:[edi]
  423c66:	mov    DWORD PTR [eax+ecx*4+0x45],ebx
  423c6a:	mov    DWORD PTR [eax],eax
  423c6c:	xchg   edi,eax
  423c6d:	push   cs
  423c6e:	add    DWORD PTR [eax],0xffffffff
  423c71:	dec    DWORD PTR [ebx+eax*4-0x17]
  423c75:	out    0xcc,eax
  423c77:	ror    DWORD PTR [eax-0x3affffe3],1
  423c7d:	cmp    edi,0xffffffff
  423c80:	dec    DWORD PTR [ecx+0x506fffb8]
  423c86:	add    BYTE PTR [ebp+0xf7b],ch
  423c8c:	mov    esp,0xff85
  423c91:	jmp    DWORD PTR [edx]
  423c93:	add    cl,dh
  423c95:	adc    bh,bh
  423c97:	aaa    
  423c98:	mov    ds:0xe883ff81,al
  423c9d:	cdq    
  423c9e:	mov    edi,edi
  423ca0:	inc    DWORD PTR [ebx-0x7a71006c]
  423ca6:	int3   
  423ca7:	mov    al,ds:0xffff9468
  423cac:	lock xchg ecx,eax
  423cae:	add    bh,bh
  423cb0:	(bad)  
  423cb1:	dec    DWORD PTR [edx]
  423cb3:	add    BYTE PTR [eax],dl
  423cb5:	idiv   bh
  423cb7:	push   ecx
  423cb8:	mov    ss,WORD PTR [eax-0x7d]
  423cbb:	inc    DWORD PTR [ebx-0x13]
  423cbe:	inc    DWORD PTR [ebx-0x7c04007d]
  423cc4:	add    DWORD PTR [edi+edi*8-0x33e62601],esp
  423ccb:	call   FWORD PTR [esp+edx*1]
  423cce:	inc    DWORD PTR [eax]
  423cd0:	(bad)  
  423cd1:	(bad)  
  423cd2:	jg     0x423cd3
  423cd4:	add    DWORD PTR [edi],esp
  423cd6:	add    BYTE PTR [esi+edi*1],bl
  423cd9:	enter  0xffff,0x6b
  423cdd:	fwait
  423cde:	int3   
  423cdf:	inc    DWORD PTR [ebx-0x46ffaa77]
  423ce5:	adc    al,0x0
  423ce7:	(bad)  
  423ce8:	and    eax,0xf83ccec
  423ced:	les    eax,FWORD PTR [eax]
  423cef:	add    DWORD PTR [eax],0xffffffff
  423cf2:	cmp    al,0xff
  423cf4:	pop    edx
  423cf5:	push   ebx
  423cf6:	dec    ebx
  423cf8:	xchg   BYTE PTR [edi],dl
  423cfa:	or     esp,0x1f
  423cfd:	sti    
  423cfe:	dec    esp
  423d00:	add    bh,bh
  423d02:	cmc    
  423d03:	(bad)  
  423d04:	jg     0x423d2b
  423d06:	add    DWORD PTR [ecx-0x3300899a],0x72
  423d0d:	call   0xff433c12
  423d12:	int3   
  423d13:	inc    DWORD PTR [ebp-0x31]
  423d16:	add    BYTE PTR [ebp-0xa545],bl
  423d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d1d:	cmp    eax,DWORD PTR [ebx+0xaccffff]
  423d23:	jmp    DWORD PTR [edx-0x38]
  423d26:	inc    DWORD PTR [eax+eiz*8-0x2c]
  423d2a:	inc    DWORD PTR [eax]
  423d2c:	pop    es
  423d2d:	cmp    BYTE PTR [ecx+0x6c00ffcc],cl
  423d33:	add    BYTE PTR [edi+0x7051ff9e],bl
  423d39:	push   ds
  423d3a:	(bad)  
  423d3b:	call   ebp
  423d3d:	cmp    eax,DWORD PTR [eax]
  423d3f:	add    bh,bh
  423d41:	or     DWORD PTR [esi],0xffffffff
  423d44:	in     eax,0x9f
  423d46:	inc    DWORD PTR [edx+esi*4]
  423d49:	xchg   esp,eax
  423d4a:	add    BYTE PTR [eax],al
  423d4c:	scas   al,BYTE PTR es:[edi]
  423d4d:	call   0x84423c52
  423d52:	stos   BYTE PTR es:[edi],al
  423d53:	and    DWORD PTR [ecx+ebp*4+0x18ca9189],0x0
  423d5b:	xor    DWORD PTR [eax+0xff83d4],0xffffffff
  423d62:	xor    al,0x0
  423d64:	xchg   esi,eax
  423d65:	mov    dl,0xff
  423d67:	push   ebx
  423d68:	cmp    bl,BYTE PTR [esi-0x34]
  423d6b:	inc    DWORD PTR [ebp+0xff005e]
  423d71:	xor    DWORD PTR [ebx-0x34],0x53
  423d75:	inc    edi
  423d76:	inc    DWORD PTR [edi-0x3362aa]
  423d7c:	outs   dx,DWORD PTR ds:[esi]
  423d7d:	ret    
  423d7e:	int3   
  423d7f:	int3   
  423d80:	add    DWORD PTR [eax],0xffffff8e
  423d83:	jmp    ebx
  423d85:	sub    DWORD PTR [eax],eax
  423d87:	mov    eax,edx
  423d89:	sbb    bh,bh
  423d8b:	sub    DWORD PTR [edi-0x50],0xffffff83
  423d8f:	(bad)  
  423d90:	inc    DWORD PTR [eax]
  423d92:	leave  
  423d93:	int3   
  423d94:	mov    esp,0xf90b89d1
  423d99:	ret    
  423d9a:	add    bh,bh
  423d9c:	xchg   ebp,eax
  423d9d:	push   cs
  423d9e:	add    DWORD PTR [ebx-0x96ff01],0x68
  423da5:	outs   dx,BYTE PTR ds:[esi]
  423da6:	call   ecx
  423da8:	imul   DWORD PTR [edx]
  423daa:	mov    edi,edi
  423dac:	mov    ah,0xde
  423dae:	add    BYTE PTR [eax],al
  423db0:	int3   
  423db1:	inc    DWORD PTR [ecx+0x0]
  423db4:	xchg   edx,eax
  423db5:	rol    BYTE PTR [ebx-0xa4a8e],1
  423dbb:	jmp    DWORD PTR [eax-0xff7cdb]
  423dc1:	dec    eax
  423dc3:	int3   
  423dc4:	loopne 0x423de6
  423dc6:	call   DWORD PTR [edx]
  423dc8:	je     0x423e46
  423dca:	add    bh,bh
  423dcc:	jp     0x423d67
  423dce:	add    bh,bh
  423dd0:	inc    DWORD PTR [ebx-0x39f17c37]
  423dd6:	call   FWORD PTR [eax+0x38]
  423dd9:	dec    ebp
  423dda:	inc    DWORD PTR [eax]
  423ddc:	aad    0xcc
  423dde:	(bad)  
  423ddf:	inc    DWORD PTR [ebx-0x16007801]
  423de5:	push   ebp
  423de6:	add    BYTE PTR [ebx-0x77fe],ah
  423dec:	int    0xeb
  423dee:	(bad)  
  423def:	(bad)  
  423df0:	(bad)  
  423df1:	jmp    FWORD PTR [esi-0x33db3377]
  423df7:	push   cs
  423df8:	push   ebp
  423df9:	or     eax,DWORD PTR [eax]
  423dfb:	add    BYTE PTR [ecx+edi*4],ah
  423dfe:	(bad)  
  423dff:	inc    DWORD PTR [eax]
  423e01:	add    BYTE PTR [edx],bl
  423e03:	add    BYTE PTR [edi+0x28],cl
  423e06:	xor    DWORD PTR [esi+0xff5de4],0x64
  423e0d:	xchg   BYTE PTR [eax],al
  423e0f:	int3   
  423e10:	add    BYTE PTR [ebx+0x23cb836a],al
  423e16:	mov    DWORD PTR [edx+0x17],edx
  423e19:	idiv   bh
  423e1b:	jmp    FWORD PTR [ecx]
  423e1d:	xchg   edi,eax
  423e1e:	dec    DWORD PTR [ecx+0x1a0000]
  423e24:	xchg   ebp,eax
  423e25:	cli    
  423e26:	call   edi
  423e28:	or     al,0xe1
  423e2a:	mov    edi,edi
  423e2c:	add    eax,DWORD PTR [esp+ecx*8-0x6affff77]
  423e33:	add    BYTE PTR [eax],ch
  423e35:	pushf  
  423e36:	(bad)  
  423e37:	jle    0x423e4a
  423e39:	inc    ecx
  423e3a:	add    BYTE PTR [eax],al
  423e3c:	aam    0x63
  423e3e:	(bad)  
  423e3f:	dec    esp
  423e41:	call   FWORD PTR [edi-0x7d]
  423e44:	and    al,cl
  423e46:	call   DWORD PTR [eax+ecx*4-0x7f]
  423e4a:	inc    DWORD PTR [eax]
  423e4c:	jnp    0x423e37
  423e4e:	add    bh,bh
  423e50:	dec    DWORD PTR [ecx-0x40d10030]
  423e56:	add    BYTE PTR [ebp+ebp*2-0x1bff76c5],bl
  423e5d:	ror    BYTE PTR [ecx+0x2a00ff00],1
  423e63:	(bad)  
  423e64:	in     al,dx
  423e65:	jl     0x423e67
  423e67:	fmul   st(1),st
  423e69:	cwde   
  423e6a:	mov    DWORD PTR [eax],eax
  423e6c:	cdq    
  423e6d:	xchg   esp,eax
  423e6e:	(bad)  
  423e6f:	dec    esp
  423e71:	or     DWORD PTR [edi+edi*8],0x59
  423e75:	xor    bh,bh
  423e77:	jnp    0x423e97
  423e79:	xor    al,BYTE PTR [ebx+0x34edff]
  423e7f:	add    bh,bh
  423e81:	adc    DWORD PTR [ebp-0x1],0x3f
  423e85:	imul   eax,DWORD PTR [eax],0xcc2f25eb
  423e8b:	mov    DWORD PTR [ebx],ecx
  423e8d:	popf   
  423e8e:	mov    DWORD PTR [ebx+0x5e0083],eax
  423e94:	(bad)  
  423e95:	pop    ebp
  423e96:	mov    DWORD PTR [ecx],ebx
  423e98:	test   DWORD PTR [eax],ecx
  423e9a:	add    bh,bh
  423e9c:	inc    ebp
  423e9d:	popf   
  423e9e:	(bad)  
  423e9f:	(bad)  
  423ea0:	inc    DWORD PTR [eax]
  423ea2:	xchg   edi,eax
  423ea3:	(bad)  
  423ea4:	in     al,dx
  423ea5:	lahf   
  423ea6:	cmp    DWORD PTR [ebp+0x836ea8],0x56
  423ead:	dec    eax
  423eae:	inc    DWORD PTR [ebx-0xb13400]
  423eb4:	ds ja  0x423eb6
  423eb7:	popa   
  423eb8:	adc    eax,0x1affff01
  423ebd:	outs   dx,DWORD PTR ds:[esi]
  423ebe:	inc    DWORD PTR [eax]
  423ec0:	inc    DWORD PTR [eax]
  423ec2:	inc    BYTE PTR [eax]
  423ec4:	xchg   ah,bh
  423ec6:	int3   
  423ec7:	push   edx
  423ec8:	add    ch,BYTE PTR [eax+0x0]
  423ecb:	add    BYTE PTR [ebp-0x7c33df],ah
  423ed1:	inc    DWORD PTR [edi+edi*8]
  423ed4:	mov    bh,0x2b
  423ed6:	push   DWORD PTR [edi+0x40]
  423ed9:	add    DWORD PTR [eax],0xff2ad500
  423edf:	inc    DWORD PTR [eax]
  423ee1:	inc    eax
  423ee3:	dec    ebx
  423ee5:	pop    ecx
  423ee6:	add    BYTE PTR [esi+0x2b],ah
  423ee9:	in     eax,dx
  423eea:	add    ah,cl
  423eec:	adc    al,0xf
  423eee:	cmp    edi,0xffffffff
  423ef1:	dec    ebx
  423ef3:	jmp    FWORD PTR [edi+ebp*8-0x34]
  423ef7:	imul   ebp,DWORD PTR [eax+0x1b],0xffffffff
  423efb:	(bad)  
  423efc:	jmp    0x1423e65
  423f01:	add    BYTE PTR [ebp-0x84607d],bl
  423f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f08:	xchg   esp,eax
  423f09:	inc    BYTE PTR [eax]
  423f0b:	add    BYTE PTR [esp+ecx*4],dh
  423f0e:	(bad)  
  423f0f:	(bad)  
  423f10:	dec    DWORD PTR [ecx+0x286d00ba]
  423f16:	add    BYTE PTR [ebp-0x3337b8],cl
  423f1c:	mov    ebp,0xff0000e7
  423f21:	adc    DWORD PTR [esi],0xffffffff
  423f24:	or     DWORD PTR [edi-0xb203d01],ebp
  423f2a:	inc    DWORD PTR [eax]
  423f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f2d:	dec    ebp
  423f2e:	(bad)  
  423f2f:	inc    DWORD PTR [eax]
  423f31:	(bad)  
  423f32:	js     0x423f33
  423f34:	shl    BYTE PTR [ebx-0x77],1
  423f37:	sbb    eax,0xff834517
  423f3c:	ds imul edi,edi,0xe600cc83
  423f43:	add    BYTE PTR [edx],dh
  423f45:	sbb    edi,edi
  423f47:	imul   ebx,DWORD PTR [ebx-0x3ffffec],0xff000077
  423f51:	int3   
  423f52:	pop    esi
  423f53:	add    bh,ch
  423f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f56:	dec    ecx
  423f58:	fild   WORD PTR [edx]
  423f5a:	add    BYTE PTR [eax],al
  423f5c:	mov    bl,0xbb
  423f5e:	inc    DWORD PTR [eax]
  423f60:	dec    esp
  423f62:	push   ss
  423f63:	inc    ebx
  423f65:	xor    BYTE PTR [eax],al
  423f67:	sub    bh,BYTE PTR [ebx]
  423f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f6a:	cmp    edi,0xffffffb2
  423f6d:	in     eax,dx
  423f6e:	add    DWORD PTR [eax],0xffffffff
  423f71:	int3   
  423f72:	or     al,0x0
  423f74:	fidivr WORD PTR [eax+eax*1-0x76ffe97d]
  423f7b:	add    BYTE PTR [ecx+ecx*2-0x10000],ah
  423f82:	push   ds
  423f83:	dec    DWORD PTR [ecx+0x75]
  423f86:	(bad)  
  423f87:	cmp    al,0x11
  423f89:	sub    edi,edi
  423f8b:	jmp    DWORD PTR [ebx-0x33760047]
  423f91:	int3   
  423f92:	sti    
  423f93:	xor    DWORD PTR [ebx-0x19bc3373],0x3f
  423f9a:	(bad)  
  423f9b:	push   DWORD PTR [esi-0x71]
  423f9e:	inc    DWORD PTR [eax]
  423fa0:	inc    DWORD PTR [ebx+0x313899b]
  423fa6:	int3   
  423fa7:	xor    BYTE PTR [ecx+0x6e008332],0xa
  423fae:	cmp    edi,0xffffffff
  423fb1:	add    BYTE PTR [eax],cl
  423fb3:	jmp    FWORD PTR [ecx+0x5704ffc5]
  423fb9:	mov    ds:0x121c0089,eax
  423fbe:	(bad)  
  423fbf:	(bad)  
  423fc0:	inc    DWORD PTR [eax]
  423fc2:	in     al,dx
  423fc3:	call   DWORD PTR [ebx+0x39]
  423fc6:	jmp    DWORD PTR [ebx]
  423fc8:	nop
  423fc9:	pop    ss
  423fca:	add    BYTE PTR [ecx-0x7cff8948],cl
  423fd0:	int3   
  423fd1:	dec    edi
  423fd3:	call   FWORD PTR [esi+0x13]
  423fd6:	int3   
  423fd7:	xor    eax,0xffff7f3b
  423fdc:	mov    dl,0x58
  423fde:	mov    DWORD PTR [eax],eax
  423fe0:	add    bh,bh
  423fe2:	and    bh,bh
  423fe4:	cmp    ebx,esi
  423fe6:	jmp    DWORD PTR [edi-0x7676f21e]
  423fec:	mov    bl,0x55
  423fee:	inc    DWORD PTR [eax]
  423ff0:	(bad)  
  423ff1:	push   ecx
  423ff3:	sbb    DWORD PTR [esi+eiz*1],0x0
  423ff7:	ret    0x6bb8
  423ffa:	inc    DWORD PTR [eax]
  423ffc:	pop    eax
  423ffd:	jg     0x423fcb
  423fff:	(bad)  
  424000:	(bad)  
  424001:	(bad)  
  424002:	cmp    BYTE PTR [eax],al
  424004:	aad    0x36
  424006:	inc    DWORD PTR [ecx]
  424008:	or     ebx,DWORD PTR [edx-0x7d]
  42400b:	or     DWORD PTR [ebp+0x7a],0xffffffff
  42400f:	add    BYTE PTR [eax],al
  424011:	add    BYTE PTR ds:0x83b10100,dh
  424017:	mov    al,0xf0
  424019:	arpl   WORD PTR [eax],ax
  42401b:	dec    DWORD PTR [eax+0x8315]
  424021:	add    BYTE PTR [edi+edi*8+0x6d007c00],ah
  424028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424029:	jae    0x42402b
  42402b:	dec    DWORD PTR [esi-0x7c006a]
  424031:	int3   
  424032:	repz inc DWORD PTR ds:0x4bd30065
  424039:	or     DWORD PTR [eax],eax
  42403b:	add    ah,dl
  42403d:	or     al,BYTE PTR [eax]
  42403f:	add    bh,bh
  424041:	add    BYTE PTR [ebx-0x6a7301],ch
  424047:	out    dx,al
  424048:	in     al,dx
  424049:	lahf   
  42404a:	(bad)  
  42404b:	jmp    FWORD PTR ds:0xccffff10
  424051:	(bad)  
  424052:	fld    DWORD PTR [eax]
  424054:	addr16 out dx,eax
  424056:	inc    DWORD PTR [esi]
  424058:	mov    ds:0x6ffff0f,eax
  42405d:	(bad)  
  42405e:	(bad)  
  42405f:	inc    DWORD PTR [eax]
  424061:	add    BYTE PTR [ebp+0x0],ah
  424064:	retf   
  424065:	push   ds
  424066:	add    BYTE PTR [ebx],bl
  424068:	and    eax,0xde830050
  42406d:	sbb    cl,ah
  42406f:	dec    esp
  424071:	add    BYTE PTR [eax],cl
  424073:	call   FWORD PTR [esi+ebp*4]
  424076:	call   FWORD PTR [edx-0x7c55aa]
  42407c:	xlat   BYTE PTR ds:[ebx]
  42407d:	pop    eax
  42407e:	int3   
  42407f:	add    ah,cl
  424081:	dec    edx
  424083:	jmp    DWORD PTR [esp+edi*4+0x0]
  424087:	pop    edi
  424088:	out    0x51,eax
  42408a:	dec    esp
  42408c:	sub    eax,0x89ff005a
  424091:	add    al,dh
  424093:	mov    DWORD PTR [ecx],ecx
  424095:	mov    cl,0xff
  424097:	add    eax,edx
  424099:	pop    DWORD PTR [ebx+0xb5ba89]
  42409f:	(bad)  
  4240a0:	inc    DWORD PTR [ebx-0x22070060]
  4240a6:	jmp    DWORD PTR [eax-0x58]
  4240a9:	call   0xff00:0x2efd8383
  4240b0:	mov    edi,edi
  4240b2:	push   ecx
  4240b3:	mov    edi,ebx
  4240b5:	push   cs
  4240b6:	(bad)  
  4240b7:	ds loopne 0x4240d3
  4240ba:	(bad)  
  4240bb:	push   DWORD PTR [ecx]
  4240bd:	sbb    BYTE PTR [eax],al
  4240bf:	add    BYTE PTR [ebx+0x75cca5ff],al
  4240c5:	jns    0x4240c6
  4240c7:	repz dec edx
  4240c9:	sar    bh,0xff
  4240cc:	inc    esi
  4240cd:	sbb    eax,0xff0000ff
  4240d2:	and    DWORD PTR ss:[ecx-0x322100e6],0xffffffd5
  4240da:	add    BYTE PTR [ebx-0x337c9172],al
  4240e0:	inc    DWORD PTR [eax]
  4240e2:	and    bh,bh
  4240e4:	hlt    
  4240e5:	mov    ch,0xcc
  4240e7:	fwait
  4240e8:	xor    ah,BYTE PTR [ebx+0x0]
  4240eb:	push   DWORD PTR [ebx-0x1b]
  4240ee:	add    DWORD PTR [ebx-0x761eff01],0x7c
  4240f5:	mov    DWORD PTR [eax],eax
  4240f7:	or     ebp,ecx
  4240f9:	xor    al,0x0
  4240fb:	add    BYTE PTR [edx+edx*8],bh
  4240fe:	(bad)  
  4240ff:	dec    DWORD PTR [ecx-0x2dffe401]
  424105:	push   ecx
  424106:	add    DWORD PTR [edi+0x7f],0x3c
  42410a:	(bad)  
  42410b:	jmp    FWORD PTR [edx]
  42410d:	cli    
  42410e:	dec    esp
  424110:	add    BYTE PTR [eax],al
  424112:	ins    DWORD PTR es:[edi],dx
  424113:	call   FWORD PTR [edi]
  424115:	aaa    
  424116:	jmp    FWORD PTR [ebx]
  424118:	enter  0xcc65,0x89
  42411c:	lahf   
  42411d:	mov    ah,0xff
  42411f:	add    BYTE PTR [eax],al
  424121:	push   esi
  424123:	mov    DWORD PTR [ecx+edx*4-0x7d],edx
  424127:	cmp    DWORD PTR [edi],0x4d00ff67
  42412d:	mov    ecx,0x83000000
  424132:	ins    DWORD PTR es:[edi],dx
  424133:	jmp    FWORD PTR [eax]
  424135:	sub    al,0xcc
  424137:	mov    ah,0xbc
  424139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42413a:	or     esp,0xffffffc5
  42413d:	adc    edi,edi
  42413f:	(bad)  
  424140:	inc    DWORD PTR [ebx+0x130dff67]
  424146:	xor    DWORD PTR [ebp-0x7626c7],0xffffffcb
  42414d:	sbb    DWORD PTR [ebx-0x1b000001],eax
  424153:	call   FWORD PTR [ecx+0x60]
  424156:	sub    DWORD PTR [edi],0xffffffd2
  424159:	fdiv   st(7),st
  42415b:	adc    DWORD PTR [edi+eiz*8+0xffffcc],0xffffffba
  424163:	dec    edi
  424165:	push   eax
  424166:	int3   
  424167:	ds push ss
  424169:	push   edx
  42416a:	inc    DWORD PTR [eax]
  42416c:	fwait
  42416d:	ins    BYTE PTR es:[edi],dx
  42416e:	add    bh,bh
  424170:	(bad)  
  424171:	dec    ebx
  424173:	push   ebp
  424175:	add    BYTE PTR cs:[esi-0x85e],dl
  42417c:	adc    ah,al
  42417e:	cmp    edi,0xffffffff
  424181:	int3   
  424182:	inc    edx
  424183:	add    BYTE PTR [eax+edx*8],al
  424186:	jmp    FWORD PTR [edx+ecx*4+0x230000a1]
  42418d:	test   al,0x83
  42418f:	or     DWORD PTR [ecx-0x647c5301],0x4f
  424196:	mov    DWORD PTR [eax-0x49],eax
  424199:	arpl   di,di
  42419b:	add    BYTE PTR [eax+0xc],dl
  42419e:	inc    DWORD PTR [eax]
  4241a0:	add    DWORD PTR [eax],0xffffff88
  4241a3:	call   FWORD PTR [edx+eax*1]
  4241a6:	int3   
  4241a7:	(bad)  
  4241a8:	push   ds
  4241a9:	iret   
  4241aa:	(bad)  
  4241ab:	dec    DWORD PTR [ecx+ebp*8]
  4241ae:	int3   
  4241af:	add    bh,bh
  4241b1:	inc    DWORD PTR [esi-0x76df8100]
  4241b7:	(bad)  
  4241b8:	shl    BYTE PTR [edx+0x3c70ff83],cl
  4241be:	mov    edi,edi
  4241c0:	inc    DWORD PTR [eax]
  4241c2:	sahf   
  4241c3:	push   DWORD PTR [ebx+ecx*1-0x27855101]
  4241ca:	add    DWORD PTR [eax],0x32
  4241cd:	test   DWORD PTR [eax],eax
  4241cf:	dec    esp
  4241d1:	add    BYTE PTR [esi],cl
  4241d3:	sbb    ecx,0x58
  4241d6:	add    BYTE PTR [ecx+0xa],cl
  4241d9:	mov    al,ds:0x945700ff
  4241de:	inc    DWORD PTR [eax]
  4241e0:	inc    DWORD PTR [eax]
  4241e2:	cdq    
  4241e3:	dec    ebp
  4241e5:	daa    
  4241e6:	mov    esi,ebx
  4241e8:	shr    bl,1
  4241ea:	dec    DWORD PTR [ecx-0xfffb33]
  4241f0:	inc    DWORD PTR [ebx+0x50e4ff63]
  4241f6:	add    BYTE PTR [ecx-0xff8301],ah
  4241fc:	push   eax
  4241fe:	inc    DWORD PTR [eax]
  424200:	(bad)  
  424201:	push   esp
  424203:	or     edi,0xffffff8c
  424206:	int3   
  424207:	jns    0x424278
  424209:	loopne 0x42420a
  42420b:	add    BYTE PTR [edx],ah
  42420d:	jae    0x424192
  42420f:	int3   
  424210:	add    bh,bh
  424212:	retf   
  424213:	add    BYTE PTR [esi+edi*2],dl
  424216:	add    BYTE PTR [ebx-0x27],bl
  424219:	xlat   BYTE PTR ds:[ebx]
  42421a:	add    bh,bh
  42421c:	mov    ebp,0xff000057
  424221:	add    al,dl
  424223:	(bad)  
  424224:	mov    ebx,0xe384837c
  424229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42422a:	(bad)  
  42422b:	jmp    FWORD PTR [edi+ebx*8-0x33ffff34]
  424232:	hlt    
  424233:	inc    DWORD PTR [ecx+0x2c0300a0]
  424239:	sbb    al,0x0
  42423b:	add    BYTE PTR [edi-0x80],al
  42423e:	add    BYTE PTR [eax],al
  424240:	mov    edi,edi
  424242:	sbb    eax,DWORD PTR [eax]
  424244:	pop    edx
  424245:	xchg   edi,eax
  424246:	inc    DWORD PTR [edi]
  424248:	imul   esp,DWORD PTR [edx],0x0
  42424b:	add    bh,dh
  42424d:	sbb    eax,0xffffff83
  424252:	mov    dl,0x89
  424254:	loope  0x4242d3
  424256:	dec    DWORD PTR [ebx+0x63]
  424259:	call   0x6d3ecb5e
  42425e:	add    BYTE PTR [eax],al
  424260:	mov    DWORD PTR [eax],eax
  424262:	push   0x0
  424264:	(bad)  
  424265:	(bad)  
  424267:	ret    
  424268:	and    BYTE PTR [edx],al
  42426a:	(bad)  
  42426b:	call   FWORD PTR [eax]
  42426d:	mov    edx,0xffffffff
  424272:	pushf  
  424273:	add    BYTE PTR [edi+0x0],bl
  424276:	add    BYTE PTR [ebx+0xff712d],dh
  42427c:	lea    edx,[edx-0x1]
  42427f:	inc    DWORD PTR [ebx-0x6a002a77]
  424285:	out    dx,al
  424286:	jmp    FWORD PTR [ecx]
  424288:	outs   dx,DWORD PTR ds:[esi]
  424289:	sbb    bh,bh
  42428b:	call   FWORD PTR [ebp-0x2c]
  42428e:	add    BYTE PTR [eax],al
  424290:	mov    edi,edi
  424292:	ja     0x424294
  424294:	or     bl,0x83
  424297:	sub    dh,dl
  424299:	in     eax,dx
  42429a:	(bad)  
  42429b:	jmp    FWORD PTR [edx-0x2b]
  42429e:	(bad)  
  42429f:	(bad)  
  4242a0:	dec    esp
  4242a2:	or     bh,bh
  4242a4:	mov    bh,0xda
  4242a6:	add    BYTE PTR [ebx+0xadfd],cl
  4242ac:	fbstp  TBYTE PTR [esi-0x1]
  4242af:	add    ah,cl
  4242b1:	(bad)  
  4242b2:	fcos   
  4242b4:	or     edx,esp
  4242b6:	inc    DWORD PTR [eax-0x52]
  4242b9:	retf   
  4242ba:	add    DWORD PTR [ebx+0x8302f2],0xffffff83
  4242c1:	add    BYTE PTR [ecx-0x73dd00],cl
  4242c7:	xchg   edi,ebx
  4242c9:	add    al,BYTE PTR [eax]
  4242cb:	mov    esp,edx
  4242cd:	mov    edi,edi
  4242cf:	inc    DWORD PTR [eax]
  4242d1:	dec    eax
  4242d3:	add    BYTE PTR [eax-0x670900cd],cl
  4242d9:	in     al,0x0
  4242db:	inc    DWORD PTR [edi]
  4242dd:	lock add bh,bh
  4242e0:	add    DWORD PTR [ebx+0x61fd0058],0xffffffff
  4242e7:	in     eax,0x62
  4242e9:	imul   edi,edi,0xd7a8ff
  4242ef:	int3   
  4242f0:	int3   
  4242f1:	mov    esp,ecx
  4242f3:	cmp    DWORD PTR [esi-0x63],0xffffffff
  4242f7:	xchg   edi,eax
  4242f8:	cmp    DWORD PTR [edi],ebx
  4242fa:	inc    DWORD PTR [ebx-0x33007b14]
  424300:	cmp    edi,0x8
  424303:	(bad)  
  424304:	jmp    0xa2180fa1
  424309:	sub    edi,edi
  42430b:	dec    ebx
  42430d:	cld    
  42430e:	add    BYTE PTR [ecx+0x42ffff],cl
  424314:	js     0x424366
  424316:	jmp    FWORD PTR [edx-0xff7310]
  42431c:	jl     0x4242c3
  42431e:	(bad)  
  42431f:	(bad)  
  424320:	inc    DWORD PTR [eax]
  424322:	push   ss
  424323:	inc    DWORD PTR ds:0x2ef8cc99
  424329:	inc    esi
  42432a:	inc    DWORD PTR [ebx-0x9693]
  424330:	add    DWORD PTR [eax],0xffffffcc
  424333:	adc    DWORD PTR [ecx-0xab57c35],0xffffff8d
  42433a:	cmp    edi,0x11
  42433d:	jae    0x42433e
  42433f:	add    BYTE PTR [ecx+0x4cff1b00],cl
  424345:	xchg   ecx,eax
  424346:	jmp    DWORD PTR [esi+0x36]
  424349:	sbb    ecx,esp
  42434b:	add    BYTE PTR [esp+ecx*1-0xff01],cl
  424352:	imul   eax,DWORD PTR [ebx-0x40ffd755],0x7f
  424359:	push   ss
  42435a:	cmp    edi,0x47
  42435d:	and    DWORD PTR [eax],eax
  42435f:	inc    DWORD PTR [eax]
  424361:	sbb    esp,0xffffffff
  424364:	xor    edi,DWORD PTR ds:0xa7f855cc
  42436a:	(bad)  
  42436b:	inc    DWORD PTR [esi-0x7c0003]
  424371:	push   DWORD PTR [eax]
  424373:	add    BYTE PTR [edi-0x6d6d7ccb],ch
  424379:	inc    esi
  42437a:	inc    DWORD PTR [eax]
  42437c:	fs jb  0x42437e
  42437f:	add    BYTE PTR [eax],al
  424381:	xor    DWORD PTR [ebp+0x0],0xffffffb5
  424385:	jno    0x42430a
  424387:	mov    edx,ebp
  424389:	cdq    
  42438a:	int3   
  42438b:	add    BYTE PTR [edi-0x7633be],ah
  424391:	call   DWORD PTR [esi-0x7d]
  424394:	pop    ecx
  424395:	cmp    eax,0xf6da6eff
  42439a:	(bad)  
  42439b:	inc    edx
  42439d:	fwait
  42439e:	dec    DWORD PTR [ecx+0x4cff83]
  4243a4:	push   ecx
  4243a5:	idiv   bh
  4243a7:	out    0x9d,al
  4243a9:	inc    ebx
  4243aa:	cmp    edi,0xffffff9f
  4243ad:	outs   dx,BYTE PTR ds:[esi]
  4243ae:	add    ah,cl
  4243b0:	(bad)  
  4243b1:	push   esi
  4243b3:	push   ecx
  4243b5:	jmp    0xff:0xd6d5aaff
  4243bc:	add    BYTE PTR [edx],al
  4243be:	(bad)  
  4243bf:	inc    DWORD PTR [eax]
  4243c1:	add    edi,0x0
  4243c4:	sbb    ah,BYTE PTR [eax-0x1]
  4243c7:	pusha  
  4243c8:	scas   al,BYTE PTR es:[edi]
  4243c9:	pusha  
  4243ca:	(bad)  
  4243cb:	(bad)  
  4243cc:	ds mov edi,0xcccc00
  4243d2:	icebp  
  4243d3:	and    DWORD PTR [ecx],0x15
  4243d6:	(bad)  
  4243d7:	cmp    DWORD PTR [ebp-0x48ff00a9],eax
  4243dd:	pop    esi
  4243de:	add    BYTE PTR [ebx-0x307601],al
  4243e4:	jle    0x424438
  4243e6:	push   DWORD PTR [ecx]
  4243e8:	jne    0x4243d1
  4243ea:	add    bh,bh
  4243ec:	cmp    al,0x4e
  4243ee:	int3   
  4243ef:	add    bh,bh
  4243f1:	int3   
  4243f2:	imul   edi,edi,0xffffffa8
  4243f5:	lahf   
  4243f6:	call   DWORD PTR [ecx-0xff21b8]
  4243fc:	outs   dx,DWORD PTR ds:[esi]
  4243fd:	jmp    0x1414501
  424402:	dec    ebx
  424403:	jmp    FWORD PTR [edx+0x605a00bf]
  424409:	pop    eax
  42440a:	add    BYTE PTR [eax],al
  42440c:	inc    eax
  42440d:	sahf   
  42440e:	inc    DWORD PTR [eax]
  424410:	add    DWORD PTR [ebx-0x9e47cfe],0xffffff83
  424417:	stos   BYTE PTR es:[edi],al
  424418:	xchg   ebp,eax
  424419:	or     eax,0x5bffffcc
  42441e:	(bad)  
  42441f:	(bad)  
  424420:	dec    DWORD PTR [ecx+0x7c2cff24]
  424426:	add    BYTE PTR [ecx+0xff4436],dl
  42442c:	mov    ebx,0x89ffff9d
  424431:	add    BYTE PTR [ebx+eax*4],bl
  424434:	(bad)  
  424435:	lock add BYTE PTR [edx],cl
  424438:	pop    eax
  424439:	out    dx,eax
  42443a:	add    bh,bh
  42443c:	add    edi,edx
  42443e:	add    BYTE PTR [ebx-0x768f3400],al
  424444:	adc    al,0x8
  424446:	add    BYTE PTR [eax-0xff04ac],bl
  42444c:	inc    ecx
  42444d:	pop    ds
  42444e:	add    bh,bh
  424450:	(bad)  
  424451:	push   DWORD PTR [esi]
  424453:	add    BYTE PTR [eax],cl
  424455:	push   esp
  424456:	adc    edi,0x46
  424459:	pop    esi
  42445a:	cmp    edi,0xffffff86
  42445d:	mov    ebp,0xff83ff83
  424462:	scas   al,BYTE PTR es:[edi]
  424463:	add    BYTE PTR [ebx],cl
  424465:	loopne 0x424467
  424467:	mov    ecx,0xff83baf8
  42446c:	sbb    al,0x40
  42446e:	add    BYTE PTR [ebx-0x7c4d7c01],al
  424474:	fadd   QWORD PTR [ecx]
  424476:	add    ah,dl
  424478:	push   es
  424479:	popa   
  42447a:	mov    DWORD PTR [eax],eax
  42447c:	(bad)  
  42447d:	ss int3 
  42447f:	inc    DWORD PTR [eax]
  424481:	call   FWORD PTR [ebx-0x7c16f97d]
  424487:	mov    eax,ds:0xcc045e
  42448c:	rcr    DWORD PTR [edx],1
  42448e:	dec    esp
  424490:	int3   
  424491:	add    BYTE PTR [edi+0x0],bl
  424494:	jmp    0x5052c872
  424499:	xchg   ebp,eax
  42449a:	int3   
  42449b:	push   esp
  42449d:	clc    
  42449e:	(bad)  
  42449f:	(bad)  
  4244a0:	(bad)  
  4244a1:	(bad)  
  4244a2:	cmp    bh,bh
  4244a4:	sti    
  4244a5:	or     edi,edi
  4244a7:	xor    al,0xc2
  4244a9:	adc    al,BYTE PTR [ebx+0xcfa7cc]
  4244af:	inc    DWORD PTR [eax]
  4244b1:	cmp    DWORD PTR [esi+0x1de000],0x74
  4244b8:	pop    es
  4244b9:	cli    
  4244ba:	add    DWORD PTR [ebx-0x7c756a],0x0
  4244c1:	sbb    DWORD PTR [esi+0x0],0xffffffee
  4244c5:	mov    ch,0x83
  4244c7:	sub    al,0xa5
  4244c9:	mov    bh,bh
  4244cb:	add    BYTE PTR [ecx+ebp*1+0x0],dl
  4244cf:	inc    DWORD PTR [eax]
  4244d1:	add    BYTE PTR [ebx],dl
  4244d3:	add    BYTE PTR [eax+0x52],ch
  4244d6:	add    bl,bl
  4244d8:	in     eax,0x90
  4244da:	int3   
  4244db:	int3   
  4244dc:	mov    ebx,0xff00df
  4244e1:	inc    DWORD PTR [eax-0x1]
  4244e4:	(bad)  
  4244e5:	and    DWORD PTR [eax],eax
  4244e7:	test   al,0xbd
  4244e9:	dec    eax
  4244ea:	add    BYTE PTR [ebx-0xffe982],al
  4244f0:	int3   
  4244f1:	jmp    FWORD PTR [edx-0x34]
  4244f4:	jb     0x42456d
  4244f6:	add    BYTE PTR [edx+0x83a425],bh
  4244fc:	jp     0x424538
  4244fe:	inc    DWORD PTR [ebx+0x5d0000]
  424504:	sub    ecx,DWORD PTR es:[ecx+0xc4f9c]
  42450b:	call   DWORD PTR ds:0xffff0068
  424511:	add    DWORD PTR [ebx-0x7d],0xfffffffd
  424515:	aad    0xcc
  424517:	mov    bl,0x1b
  424519:	sbb    eax,DWORD PTR [eax]
  42451b:	jmp    FWORD PTR [esi-0x35]
  42451e:	int3   
  42451f:	add    ah,cl
  424521:	sub    edx,0x0
  424524:	aaa    
  424525:	cmp    al,0x0
  424527:	repz retf 0xffd0
  42452b:	call   DWORD PTR [esi-0x7]
  42452e:	add    bh,bh
  424530:	add    bh,bh
  424532:	cmp    eax,0xffa02bff
  424537:	cld    
  424538:	push   ebp
  424539:	jb     0x42453a
  42453b:	push   ebx
  42453d:	mov    ch,0xcc
  42453f:	add    BYTE PTR [eax],al
  424541:	add    BYTE PTR [edx-0x1],dl
  424544:	lods   eax,DWORD PTR ds:[esi]
  424545:	retf   0xaf89
  424548:	xchg   ecx,eax
  424549:	pop    ss
  42454a:	dec    esp
  42454c:	addr16 sti 
  42454e:	add    DWORD PTR [eax],0xffffff83
  424551:	add    BYTE PTR [edx-0x53e7d],bh
  424557:	jbe    0x4244f5
  424559:	popf   
  42455a:	inc    DWORD PTR [eax]
  42455c:	add    bl,0xff
  42455f:	add    BYTE PTR [eax],al
  424561:	(bad)  
  424562:	(bad)  
  424563:	(bad)  
  424564:	fstp   st(7)
  424566:	add    DWORD PTR [ebx-0x7c9200],0x46
  42456d:	pop    ebx
  42456e:	add    bh,bh
  424570:	int3   
  424571:	add    BYTE PTR [eax+eax*1+0x32ff16be],cl
  424578:	out    dx,al
  424579:	xchg   edi,eax
  42457a:	(bad)  
  42457b:	call   DWORD PTR [ecx+0x2a]
  42457e:	mov    edi,edi
  424580:	(bad)  
  424581:	(bad)  
  424582:	mov    ebx,0xff648983
  424587:	push   ebx
  424588:	dec    eax
  424589:	and    DWORD PTR [ebx-0xf05500],eax
  42458f:	dec    esp
  424591:	mov    DWORD PTR [ebx+eax*4],esp
  424594:	(bad)  
  424596:	add    BYTE PTR [edx+ebx*8-0x1b],ah
  42459a:	cmp    edi,0x14
  42459d:	sbb    esp,ecx
  42459f:	(bad)  
  4245a0:	(bad)  
  4245a1:	inc    esp
  4245a3:	push   ecx
  4245a5:	outs   dx,DWORD PTR ds:[esi]
  4245a6:	jmp    DWORD PTR [ecx+0x64]
  4245a9:	pop    edx
  4245aa:	cmp    edi,0xffffffb9
  4245ad:	scas   eax,DWORD PTR es:[edi]
  4245ae:	add    bh,bh
  4245b0:	inc    DWORD PTR [eax]
  4245b2:	sbb    eax,0x17f2ff
  4245b7:	test   BYTE PTR [ecx],ch
  4245b9:	or     al,BYTE PTR [eax]
  4245bb:	add    BYTE PTR [edi],ch
  4245bd:	jge    0x424542
  4245bf:	int3   
  4245c0:	mov    edi,edi
  4245c2:	(bad)  
  4245c3:	(bad)  
  4245c4:	cmp    eax,0x57fa8933
  4245c9:	cmp    edi,edi
  4245cb:	add    cl,bl
  4245cd:	pop    esi
  4245ce:	add    bh,bh
  4245d0:	add    BYTE PTR [ebx-0x63dfff45],al
  4245d6:	jmp    FWORD PTR [ebx]
  4245d8:	into   
  4245d9:	adc    al,BYTE PTR [eax]
  4245db:	add    BYTE PTR [edx-0x9],dh
  4245de:	inc    DWORD PTR [eax]
  4245e0:	int3   
  4245e1:	sbb    DWORD PTR [ecx-0x334ac077],0xfffffffe
  4245e8:	dec    eax
  4245e9:	aam    0x89
  4245eb:	int3   
  4245ec:	or     al,0xea
  4245ee:	add    bh,bh
  4245f0:	add    bh,bh
  4245f2:	adc    al,BYTE PTR [eax]
  4245f4:	sbb    ch,BYTE PTR [edx-0x7a9ff34]
  4245fa:	add    DWORD PTR [eax],0x5
  4245fd:	mov    ecx,0xff0000ff
  424602:	iret   
  424603:	jmp    DWORD PTR [edx-0x72]
  424606:	add    BYTE PTR [ebx+ecx*2-0x3d],bl
  42460a:	(bad)  
  42460b:	dec    eax
  42460d:	add    eax,0xff00cc83
  424612:	adc    eax,0x89ba93ff
  424617:	test   BYTE PTR [eax-0x3a00009d],ch
  42461d:	mov    esi,0xff00ff
  424622:	xor    al,0x89
  424624:	cs mov edx,0xfdaf0ff
  42462a:	add    bh,bh
  42462c:	inc    ebx
  42462d:	imul   ecx,DWORD PTR [ecx+0x5dff00ff],0xff173b00
  424637:	xchg   ebx,eax
  424638:	out    dx,al
  424639:	pop    es
  42463a:	add    BYTE PTR [eax],al
  42463c:	jbe    0x424655
  42463e:	inc    DWORD PTR [ebx+0x8e0000]
  424644:	adc    eax,ebx
  424646:	inc    DWORD PTR [esi-0xf8f6]
  42464c:	add    al,0x5c
  42464e:	inc    DWORD PTR [eax]
  424650:	(bad)  
  424651:	call   eax
  424653:	jmp    FWORD PTR [ebx+0x6e]
  424656:	call   FWORD PTR [eiz*8+0x983ffe2]
  42465d:	sar    bh,1
  42465f:	inc    DWORD PTR [eax]
  424661:	call   FWORD PTR [esi-0x77]
  424664:	cs and edi,edi
  424667:	std    
  424668:	stos   DWORD PTR es:[edi],eax
  424669:	mov    esp,0xac568989
  42466e:	add    BYTE PTR [ebx-0x500034],al
  424674:	out    0xb1,eax
  424676:	add    BYTE PTR ds:0x89ff3c51,cl
  42467c:	jl     0x4246d4
  42467e:	add    BYTE PTR [eax],al
  424680:	int3   
  424681:	adc    esp,0x0
  424684:	xchg   esp,eax
  424685:	cli    
  424686:	add    BYTE PTR [edi],bl
  424688:	jne    0x424671
  42468a:	inc    DWORD PTR [eax]
  42468c:	sub    BYTE PTR [eax+0x0],ah
  42468f:	inc    DWORD PTR [eax]
  424691:	(bad)  
  424692:	jmp    0x2537:0xffd426ff
  424699:	call   0x83cc:0x254c0000
  4246a0:	or     DWORD PTR [ecx-0x5999ff69],0xffffffff
  4246a7:	enter  0xe8b3,0x83
  4246ab:	add    BYTE PTR [eax+0xffffe7],bh
  4246b1:	cmp    edi,0xffffff83
  4246b4:	leave  
  4246b5:	test   BYTE PTR [ebx-0x33dda372],0xff
  4246bc:	pop    esi
  4246bd:	(bad)  
  4246bf:	inc    DWORD PTR [eax]
  4246c1:	push   edi
  4246c3:	call   DWORD PTR [ecx+0x2c]
  4246c6:	call   DWORD PTR [esp+eiz*4]
  4246c9:	retf   
  4246ca:	inc    DWORD PTR [eax]
  4246cc:	dec    esp
  4246cd:	or     eax,DWORD PTR [eax]
  4246cf:	add    BYTE PTR [eax],al
  4246d1:	push   esi
  4246d3:	call   FWORD PTR [esi]
  4246d5:	fdivp  st(7),st
  4246d7:	rcr    BYTE PTR [ebp+0x4300ff03],1
  4246dd:	mov    ebx,0xff00ff
  4246e2:	push   0xff272c00
  4246e7:	adc    DWORD PTR ds:0xc88300ce,esp
  4246ed:	nop
  4246ee:	int3   
  4246ef:	mov    DWORD PTR [ebx-0x5176bf00],eax
  4246f5:	pusha  
  4246f6:	and    DWORD PTR [edx-0x33ffa8dd],0x52
  4246fd:	(bad)  
  4246fe:	inc    DWORD PTR [eax]
  424700:	dec    DWORD PTR [ecx+0x1ec7ff5f]
  424706:	(bad)  
  424707:	mov    ebx,0x833bf4
  42470c:	pop    ss
  42470d:	lahf   
  42470e:	add    BYTE PTR [eax],al
  424710:	add    bh,bh
  424712:	test   bh,bh
  424714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424715:	aad    0x0
  424717:	cli    
  424718:	cs mov ah,0x0
  42471b:	call   DWORD PTR [edx+0x63]
  42471e:	dec    esp
  424720:	add    DWORD PTR [eax],0x23
  424723:	inc    edx
  424725:	fdivr  st,st(7)
  424727:	pop    edx
  424728:	ret    0xff60
  42472b:	sbb    DWORD PTR [ecx-0x48],0x0
  42472f:	add    BYTE PTR [eax],al
  424731:	add    BYTE PTR [esi-0x1],bh
  424734:	popa   
  424735:	or     edi,edi
  424737:	mov    esp,0xffff1319
  42473c:	xchg   ecx,eax
  42473d:	xor    al,BYTE PTR [eax]
  42473f:	(bad)  
  424740:	inc    DWORD PTR [ebx+0x5e6aff6e]
  424746:	push   DWORD PTR [eax+0xcc6ea7]
  42474c:	sbb    ah,BYTE PTR [eax+0xffffff]
  424752:	mov    ch,0xcc
  424754:	sbb    bh,dl
  424756:	push   DWORD PTR [eax-0x45]
  424759:	inc    ecx
  42475a:	(bad)  
  42475b:	jmp    FWORD PTR [eax-0x60]
  42475e:	dec    esp
  424760:	add    BYTE PTR [eax],al
  424762:	pop    esi
  424763:	(bad)  
  424764:	mov    edx,0x5d4eff5c
  424769:	les    eax,FWORD PTR [eax]
  42476b:	or     DWORD PTR [edx],0x3
  42476e:	inc    DWORD PTR [ebx-0x77ff01]
  424774:	sub    al,0xb9
  424776:	call   FWORD PTR [ebx+0x68]
  424779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42477a:	mov    DWORD PTR [ebx-0x2fc],eax
  424780:	add    BYTE PTR [eax],al
  424782:	mov    bh,bh
  424784:	(bad)  
  424785:	mov    ds:0x1d6579ff,al
  42478a:	(bad)  
  42478b:	jmp    edx
  42478d:	cmp    al,0xff
  42478f:	inc    DWORD PTR [eax]
  424791:	mov    esi,ecx
  424793:	mov    DWORD PTR [ecx+0x5b4eff29],edx
  424799:	aaa    
  42479a:	(bad)  
  42479b:	dec    DWORD PTR [eax+eax*2+0xff00ff]
  4247a2:	fadd   QWORD PTR [eax]
  4247a4:	adc    DWORD PTR [bx+si],eax
  4247a7:	test   BYTE PTR [ebp+0x44],al
  4247aa:	add    BYTE PTR [eax],al
  4247ac:	sbb    bh,BYTE PTR [edi+edi*8]
  4247af:	add    bh,bh
  4247b1:	push   edi
  4247b3:	sbb    DWORD PTR [esp+edx*2],0xffffffff
  4247b7:	jbe    0x4247ec
  4247b9:	retf   0xff
  4247bc:	jp     0x4247cf
  4247be:	dec    esp
  4247c0:	inc    DWORD PTR [ebx-0x375300d2]
  4247c6:	or     DWORD PTR [ecx-0x72],0xffffffee
  4247ca:	mov    DWORD PTR [ecx-0x3333fb23],ecx
  4247d0:	int3   
  4247d1:	add    al,al
  4247d3:	add    BYTE PTR [edx],al
  4247d5:	and    eax,0xf4f5c0ff
  4247da:	int3   
  4247db:	add    BYTE PTR [eax-0x3d],cl
  4247de:	add    BYTE PTR [eax],al
  4247e0:	add    BYTE PTR [eax],al
  4247e2:	mov    BYTE PTR [ecx-0x12ff4f67],cl
  4247e8:	sub    ebp,DWORD PTR [edi-0x58963301]
  4247ee:	inc    DWORD PTR [ebx-0x76b50001]
  4247f4:	pusha  
  4247f5:	rol    BYTE PTR [ebx-0x7c4c52e3],0xcc
  4247fc:	mov    ds:0xff83ffc6,al
  424801:	add    BYTE PTR [ebx],bl
  424803:	add    BYTE PTR [esi+eax*1],ch
  424806:	add    BYTE PTR [eax],bl
  424808:	inc    eax
  424809:	fld    QWORD PTR [eax]
  42480b:	jmp    ebx
  42480d:	pop    es
  42480e:	int3   
  42480f:	add    BYTE PTR [eax],al
  424811:	or     DWORD PTR [edi+edi*8-0x7a],0xffffffcf
  424816:	add    DWORD PTR [esi+0xffe838],0x5e
  42481d:	dec    ecx
  42481e:	(bad)  
  42481f:	(bad)  
  424820:	inc    DWORD PTR [eax]
  424822:	fcos   
  424824:	sbb    esp,0xffffffff
  424827:	jmp    0x42487b
  424829:	mov    BYTE PTR [ebx-0x33d2347d],al
  42482f:	add    bh,bh
  424831:	push   DWORD PTR [edi]
  424833:	(bad)  
  424834:	cmp    DWORD PTR [eax+0x1cb07ff],edi
  42483a:	add    BYTE PTR [ebx-0xfff403],al
  424840:	dec    DWORD PTR [ecx-0x37b90068]
  424846:	push   DWORD PTR [edx+0xcce35c]
  42484c:	xor    eax,0xffffff2b
  424851:	add    BYTE PTR [edi],bh
  424853:	add    BYTE PTR [ebp-0x4b],dh
  424856:	call   DWORD PTR [ebx+0x4c37]
  42485c:	repnz test BYTE PTR [eax],0x0
  424860:	(bad)  
  424861:	dec    edx
  424863:	add    BYTE PTR [edx],ch
  424865:	out    dx,al
  424866:	mov    DWORD PTR [ecx],ebp
  424868:	mov    eax,0x9eff897b
  42486d:	xor    BYTE PTR [eax],al
  42486f:	add    bh,bh
  424871:	add    BYTE PTR [edx],bh
  424873:	jmp    DWORD PTR [edi+0x65]
  424876:	(bad)  
  424877:	jp     0x424848
  424879:	sbb    edi,edi
  42487b:	call   FWORD PTR [esp+esi*4+0xffffff]
  424882:	push   esp
  424883:	xor    DWORD PTR [ecx],0xffffffe0
  424886:	add    al,bl
  424888:	mov    WORD PTR [ebx],es
  42488a:	(bad)  
  42488b:	push   DWORD PTR [ecx+eax*2+0x0]
  42488f:	cmp    edi,0x0
  424892:	jg     0x424817
  424894:	les    eax,FWORD PTR [edx-0x1a7cf234]
  42489a:	add    DWORD PTR [eax],0x22
  42489d:	push   0xffffffff
  42489f:	add    BYTE PTR [eax],al
  4248a1:	push   DWORD PTR ds:0xff992900
  4248a7:	push   es
  4248a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a9:	pop    ecx
  4248aa:	add    DWORD PTR [ebx+0xff86a5],0xffffffff
  4248b1:	mov    DWORD PTR [ebx+0x102083],edi
  4248b7:	rcr    BYTE PTR [ecx-0x14ffff50],0x11
  4248be:	add    DWORD PTR [ebx-0x7ccdff7d],0x73
  4248c5:	pop    ebx
  4248c6:	add    BYTE PTR [ebx+0x13],cl
  4248c9:	inc    DWORD PTR [eax]
  4248cb:	jmp    esi
  4248cd:	aad    0x83
  4248cf:	(bad)  
  4248d0:	inc    DWORD PTR [eax]
  4248d2:	lahf   
  4248d3:	push   esp
  4248d5:	mov    ah,0xff
  4248d7:	fidiv  DWORD PTR [ecx+0x59cc001d]
  4248dd:	push   esi
  4248de:	inc    DWORD PTR [eax]
  4248e0:	add    BYTE PTR [ebx-0x28d8ff83],al
  4248e6:	add    BYTE PTR [ebp+0xff60a7],cl
  4248ec:	push   0xffffff99
  4248ee:	add    BYTE PTR [eax],al
  4248f0:	inc    DWORD PTR [ebx-0x745fff7f]
  4248f6:	add    ch,bh
  4248f8:	mov    eax,0xc3cc00dc
  4248fd:	push   edi
  4248fe:	cmp    edi,0x0
  424901:	(bad)  
  424902:	jmp    0x424904
  424904:	in     al,dx
  424905:	mov    bh,0xcc
  424907:	inc    ebx
  424908:	cdq    
  424909:	out    dx,al
  42490a:	add    bh,bh
  42490c:	mov    ds:0xffccff93,al
  424911:	add    BYTE PTR [eax-0x1],bl
  424914:	repz mov ecx,DWORD PTR [ecx-0x295437]
  42491b:	jmp    DWORD PTR [edx]
  42491d:	mov    ds:0x890000,al
  424922:	push   cs
  424923:	inc    DWORD PTR [ebp+ebx*4-0x1]
  424927:	int    0xe8
  424929:	xor    BYTE PTR [eax],al
  42492b:	push   ebx
  42492d:	add    bh,bh
  42492f:	add    BYTE PTR [eax],al
  424931:	jmp    FWORD PTR [edi]
  424933:	add    BYTE PTR [esi],cl
  424935:	jne    0x4248ba
  424937:	xor    eax,0xd2c3
  42493c:	retf   
  42493d:	inc    esi
  42493e:	(bad)  
  42493f:	inc    DWORD PTR [eax]
  424941:	add    ah,al
  424943:	add    ch,dh
  424945:	add    BYTE PTR [eax],0x6c
  424948:	loope  0x4249a3
  42494a:	inc    DWORD PTR [ebx-0x7cff1c11]
  424950:	add    BYTE PTR [ecx+0x61d58925],cl
  424956:	push   DWORD PTR [ebp-0x4a]
  424959:	mov    edi,edi
  42495b:	add    BYTE PTR [esi-0x7c3376fe],dl
  424961:	push   DWORD PTR [eax-0x1]
  424964:	pop    ss
  424965:	je     0x424966
  424967:	ins    BYTE PTR es:[edi],dx
  424968:	mov    ecx,0x498300af
  42496d:	clc    
  42496e:	cmp    edi,0xffffffff
  424971:	jmp    DWORD PTR [ecx-0x1]
  424974:	int3   
  424975:	stos   DWORD PTR es:[edi],eax
  424976:	add    BYTE PTR [esp+esi*2],al
  424979:	inc    DWORD PTR [eax]
  42497b:	(bad)  
  42497c:	mov    ecx,0x8383ff2c
  424981:	jmp    DWORD PTR [esi-0x34]
  424984:	mov    bl,0x42
  424986:	or     DWORD PTR ds:0x16aa,0x5e
  42498d:	pop    esp
  42498e:	cmp    edi,0xffffffff
  424991:	add    BYTE PTR ds:0xa4c8ff,dh
  424997:	ret    
  424998:	in     al,0xcc
  42499a:	add    bh,bh
  42499c:	stos   BYTE PTR es:[edi],al
  42499d:	jecxz  0x42499e
  42499f:	add    bh,bh
  4249a1:	call   DWORD PTR [ebx]
  4249a3:	add    BYTE PTR [ebx+ebx*2-0x40e8a001],ah
  4249aa:	cmp    edi,0xffffffb8
  4249ad:	outs   dx,DWORD PTR ds:[esi]
  4249ae:	add    ah,cl
  4249b0:	add    BYTE PTR [ecx-0x44006e],cl
  4249b6:	cmp    DWORD PTR [ebp+0xff0492],0x57
  4249bd:	icebp  
  4249be:	mov    edi,edi
  4249c0:	int3   
  4249c1:	mov    DWORD PTR [ecx-0x176d7d],ecx
  4249c7:	hlt    
  4249c8:	fisttp WORD PTR [ebx-0x1]
  4249cb:	dec    eax
  4249cd:	pushf  
  4249ce:	(bad)  
  4249cf:	(bad)  
  4249d0:	dec    DWORD PTR [ecx+0xa06ff38]
  4249d6:	jmp    FWORD PTR [eax+0x7836]
  4249dc:	shr    BYTE PTR ds:0xffff83ff,0xb3
  4249e3:	push   DWORD PTR [edi-0x2f]
  4249e6:	push   DWORD PTR [edi+0x67]
  4249e9:	and    edi,edi
  4249eb:	(bad)  
  4249ec:	mov    ecx,0xff23
  4249f1:	add    BYTE PTR [ecx],al
  4249f3:	cmp    DWORD PTR [esi+0x3e6a0021],0x11
  4249fa:	cmp    edi,0xffffffe5
  4249fd:	int3   
  4249fe:	or     DWORD PTR [ecx+0xdeff00],0xfffffff2
  424a05:	into   
  424a06:	call   DWORD PTR [ebx-0x2a]
  424a09:	pop    ebx
  424a0a:	inc    DWORD PTR [ebx-0x76003c97]
  424a10:	(bad)  
  424a11:	push   DWORD PTR [edi-0x1]
  424a14:	jne    0xe68ce1a3
  424a1a:	add    DWORD PTR [ebx-0x7c7ce299],0xffffffff
  424a21:	jmp    DWORD PTR [eax]
  424a23:	add    BYTE PTR [edx+0x30],bh
  424a26:	jmp    DWORD PTR [ebp-0xa9f6]
  424a2c:	sub    bl,bh
  424a2e:	dec    esp
  424a30:	add    bh,bh
  424a32:	add    eax,0xff3da0ff
  424a37:	out    dx,al
  424a38:	lods   eax,DWORD PTR ds:[esi]
  424a39:	repnz add BYTE PTR [ebx+0x830a2d],al
  424a40:	add    bh,bh
  424a42:	cwde   
  424a43:	dec    esp
  424a45:	xchg   ecx,eax
  424a46:	jmp    DWORD PTR [ebx+ecx*8+0x1dfffffe]
  424a4d:	mov    ecx,0xff00ff00
  424a52:	std    
  424a53:	jmp    DWORD PTR [esi+0x39]
  424a56:	call   FWORD PTR [ebx]
  424a58:	sub    eax,0xac00ff77
  424a5d:	retf   
  424a5e:	add    ah,cl
  424a60:	add    BYTE PTR [eax],al
  424a62:	xlat   BYTE PTR ds:[ebx]
  424a63:	call   edx
  424a65:	clc    
  424a66:	add    BYTE PTR [edx+0x7e],dl
  424a69:	in     eax,dx
  424a6a:	inc    DWORD PTR [eax]
  424a6c:	ror    BYTE PTR [edi-0x77],0x0
  424a70:	(bad)  
  424a71:	call   FWORD PTR [eax]
  424a73:	(bad)  
  424a74:	cli    
  424a75:	or     al,0x0
  424a77:	push   ebx
  424a78:	push   cs
  424a79:	mov    es,WORD PTR [eax]
  424a7b:	(bad)  
  424a7c:	cmp    eax,0xffffff77
  424a81:	mov    DWORD PTR [ebx+0x74ed00],esi
  424a87:	lock loop 0x424aa4
  424a8a:	add    DWORD PTR [eax],0xfffffffc
  424a8d:	sbb    BYTE PTR [eax],al
  424a8f:	inc    DWORD PTR [eax]
  424a91:	sub    DWORD PTR [eax-0x760f3900],0x6f
  424a98:	jecxz  0x424a66
  424a9a:	add    BYTE PTR [ecx-0x3300f9f8],cl
  424aa0:	(bad)  
  424aa1:	push   DWORD PTR [ebx+0x0]
  424aa4:	mov    ch,0x9f
  424aa6:	jmp    ebx
  424aa8:	adc    BYTE PTR [ebx-0x62a7ff34],0x0
  424aaf:	add    BYTE PTR [eax],al
  424ab1:	sub    DWORD PTR [edi-0x34],0xfffffffd
  424ab5:	add    eax,0xb71cd400
  424aba:	inc    DWORD PTR [ebx+0xff06f8]
  424ac0:	add    bh,bh
  424ac2:	xor    DWORD PTR [eax],eax
  424ac4:	mov    BYTE PTR ds:[eax],0x19
  424ac8:	or     bh,BYTE PTR ds:0x996e0000
  424ace:	(bad)  
  424acf:	inc    DWORD PTR [ebx+0x47834583]
  424ad5:	dec    esp
  424ad6:	add    BYTE PTR [edx+0x61f2],ah
  424adc:	fist   WORD PTR [ecx]
  424ade:	inc    DWORD PTR [eax]
  424ae0:	inc    DWORD PTR [eax]
  424ae2:	jnp    0x424ae4
  424ae4:	push   esp
  424ae5:	adc    bh,bh
  424ae7:	and    cl,0x38
  424aea:	inc    DWORD PTR [eax]
  424aec:	inc    ecx
  424aed:	sbb    edi,edi
  424aef:	(bad)  
  424af0:	dec    DWORD PTR [ecx+0x6214cc86]
  424af6:	(bad)  
  424af7:	mov    ebp,0xff8375e2
  424afc:	out    0xc9,eax
  424afe:	(bad)  
  424aff:	(bad)  
  424b00:	dec    esp
  424b02:	pop    ecx
  424b03:	inc    DWORD PTR [edi]
  424b05:	xor    DWORD PTR [ecx-0x101346],ecx
  424b0b:	dec    DWORD PTR [edx-0x60]
  424b0e:	add    bh,bh
  424b10:	(bad)  
  424b11:	call   DWORD PTR [ebx-0x7d]
  424b14:	pop    edi
  424b15:	fcos   
  424b17:	outs   dx,DWORD PTR ds:[esi]
  424b18:	dec    edx
  424b19:	ror    esp,cl
  424b1b:	add    BYTE PTR [ebp-0x3333],dh
  424b21:	push   DWORD PTR [edi+edi*8]
  424b24:	fimul  DWORD PTR [ebp-0x1]
  424b27:	fucomi st,st(4)
  424b29:	dec    ecx
  424b2a:	dec    esp
  424b2c:	push   esp
  424b2d:	add    ah,cl
  424b2f:	cmp    edi,0xffffffff
  424b32:	push   0xffe60500
  424b37:	stos   BYTE PTR es:[edi],al
  424b38:	fisubr WORD PTR [edi]
  424b3a:	inc    DWORD PTR [eax]
  424b3c:	push   ds
  424b3d:	int3   
  424b3e:	add    BYTE PTR [eax],al
  424b40:	add    ah,cl
  424b42:	mov    edi,edi
  424b44:	ja     0x424b9a
  424b46:	add    ch,dl
  424b48:	rol    DWORD PTR ds:[eax],0x0
  424b4c:	xchg   ecx,eax
  424b4d:	inc    ebx
  424b4e:	(bad)  
  424b4f:	inc    DWORD PTR [eax]
  424b51:	add    bh,cl
  424b53:	int3   
  424b54:	and    eax,DWORD PTR [eax]
  424b56:	inc    DWORD PTR [edi+0x4c]
  424b59:	cmc    
  424b5a:	(bad)  
  424b5b:	jmp    FWORD PTR [ebx]
  424b5d:	jbe    0x424ae8
  424b5f:	inc    DWORD PTR [ebx-0x4a006a00]
  424b65:	push   ds
  424b66:	push   DWORD PTR [ebp-0xffec9b]
  424b6c:	leave  
  424b6d:	or     DWORD PTR [ecx+0x338900ff],0xffffff83
  424b74:	test   DWORD PTR [edi+0x5f4be7ff],0x2ec10000
  424b7e:	dec    esp
  424b80:	(bad)  
  424b81:	inc    DWORD PTR [ecx+0x0]
  424b84:	daa    
  424b85:	and    ecx,esp
  424b87:	jns    0x424b85
  424b89:	dec    eax
  424b8a:	add    bh,bh
  424b8c:	imul   esi,DWORD PTR [eax-0xff0077],0x552acc8d
  424b96:	jmp    FWORD PTR [esi+edx*2]
  424b99:	inc    DWORD PTR es:[eax]
  424b9c:	leave  
  424b9d:	and    edi,edi
  424b9f:	add    DWORD PTR [eax],0x0
  424ba2:	dec    edx
  424ba3:	and    DWORD PTR [eax+0x31],0x0
  424ba7:	mov    ebx,0xcca8b1
  424bac:	push   edi
  424bad:	mov    esp,0x89ffff00
  424bb2:	adc    al,BYTE PTR [eax]
  424bb4:	jp     0x424bcf
  424bb6:	add    BYTE PTR [esp+edx*1],ah
  424bb9:	or     ah,cl
  424bbb:	mov    ebx,esp
  424bbd:	xchg   edx,eax
  424bbe:	add    bh,bh
  424bc0:	inc    DWORD PTR [eax]
  424bc2:	xlat   BYTE PTR ds:[ebx]
  424bc3:	add    dh,cl
  424bc5:	lahf   
  424bc6:	dec    ebx
  424bc8:	rol    DWORD PTR [ecx+ecx*4],1
  424bcb:	dec    DWORD PTR [edi+eax*8]
  424bce:	add    bh,bh
  424bd0:	(bad)  
  424bd1:	(bad)  
  424bd2:	mov    esi,0xffded100
  424bd7:	sbb    BYTE PTR [ebx+0x78ffcc60],al
  424bdd:	fild   DWORD PTR [eax]
  424bdf:	add    BYTE PTR [eax],al
  424be1:	push   DWORD PTR ds:0xff94b900
  424be7:	push   esi
  424be8:	add    BYTE PTR [ecx],ch
  424bea:	add    BYTE PTR [eax],al
  424bec:	mov    ds:0xff00ffeb,eax
  424bf1:	add    BYTE PTR [edi-0x1],cl
  424bf4:	sub    dl,ch
  424bf6:	call   ecx
  424bf8:	xlat   BYTE PTR ds:[ebx]
  424bf9:	and    al,0xcc
  424bfb:	add    BYTE PTR [ebx],cl
  424bfd:	adc    ah,cl
  424bff:	or     esp,0x0
  424c02:	or     edi,edi
  424c04:	lahf   
  424c05:	jmp    0x94bcb68d
  424c0a:	(bad)  
  424c0b:	jmp    FWORD PTR [ebx+esi*8-0x1]
  424c0f:	(bad)  
  424c10:	(bad)  
  424c11:	dec    DWORD PTR [ecx+0x0]
  424c14:	inc    edx
  424c15:	int    0x0
  424c17:	(bad)  
  424c18:	dec    eax
  424c19:	jns    0x424c1a
  424c1b:	or     DWORD PTR [eax-0x61],0xffffffff
  424c1f:	add    bh,bh
  424c21:	mov    ebp,eax
  424c23:	dec    DWORD PTR [ebx]
  424c25:	sar    edi,0x51
  424c28:	icebp  
  424c29:	add    BYTE PTR es:[ebx-0x7c767387],al
  424c30:	int3   
  424c31:	call   edi
  424c33:	add    ah,cl
  424c35:	dec    esi
  424c36:	(bad)  
  424c37:	out    dx,eax
  424c38:	push   0xffffff96
  424c3a:	(bad)  
  424c3b:	dec    DWORD PTR [esi+0x89cc9d]
  424c41:	(bad)  
  424c42:	jnp    0x424c43
  424c44:	int    0xda
  424c46:	jmp    eax
  424c48:	outs   dx,DWORD PTR ds:[esi]
  424c49:	push   edi
  424c4a:	add    bh,bh
  424c4c:	outs   dx,DWORD PTR ds:[esi]
  424c4d:	add    BYTE PTR [ecx+0x2c83ff00],cl
  424c53:	mov    ebx,edx
  424c55:	ud0    ecx,DWORD PTR [edi+0xff5dbf]
  424c5c:	mov    cl,BYTE PTR [edi-0x7c0100]
  424c62:	jb     0x424c63
  424c64:	lds    eax,FWORD PTR ds:0xd178ef00
  424c6a:	dec    esp
  424c6c:	and    ecx,DWORD PTR [edi-0x1]
  424c72:	mov    eax,ds:0x699200
  424c77:	imul   edx,eax,0xa300ffde
  424c7d:	dec    ecx
  424c7e:	add    bh,bh
  424c80:	add    bh,bh
  424c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c83:	int3   
  424c84:	(bad)  
  424c85:	cld    
  424c86:	xor    edx,0xffffffa1
  424c89:	mov    es,WORD PTR [eax]
  424c8b:	inc    DWORD PTR [ecx]
  424c8d:	cld    
  424c8e:	add    DWORD PTR [ebx+0x8cff00],0xffffff93
  424c95:	add    BYTE PTR [ebx-0xc7714f],0xff
  424c9c:	stc    
  424c9d:	cmp    al,0x0
  424c9f:	inc    DWORD PTR [ebx-0x1b331a34]
  424ca5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca6:	add    BYTE PTR [edx-0x19],cl
  424ca9:	cmc    
  424caa:	inc    DWORD PTR [eax]
  424cac:	inc    esi
  424cad:	mov    ds:0x89ffffcc,al
  424cb2:	jb     0x424cb3
  424cb4:	sub    eax,DWORD PTR [edi]
  424cb6:	mov    DWORD PTR [ebp+0x2c],esp
  424cb9:	mov    ds:0x4bc1ffff,al
  424cbe:	(bad)  
  424cbf:	(bad)  
  424cc0:	(bad)  
  424cc1:	call   DWORD PTR [ebp+0x774900]
  424cc7:	mov    ds:0xcc00c0cc,eax
  424ccc:	adc    BYTE PTR [edx-0x1],0x0
  424cd0:	int3   
  424cd1:	add    BYTE PTR [eax+0x0],bh
  424cd4:	data16 loopne 0x424cd7
  424cd7:	push   0x70
  424cd9:	stos   DWORD PTR es:[edi],eax
  424cda:	dec    DWORD PTR [ecx-0xfff5de]
  424ce0:	add    DWORD PTR [eax],0xffffff84
  424ce3:	adc    DWORD PTR [ebp+0x5a82002b],0x45
  424cea:	add    BYTE PTR [eax],al
  424cec:	dec    esp
  424ced:	mov    edi,edi
  424cef:	inc    DWORD PTR [eax]
  424cf1:	int3   
  424cf2:	xchg   bh,bh
  424cf4:	add    ah,BYTE PTR [edi+edi*8-0x3121ea]
  424cfb:	inc    DWORD PTR [ebx-0x3e]
  424cfe:	cmp    edi,0xffffffff
  424d01:	mov    DWORD PTR [edi-0xd32601],esi
  424d07:	adc    edi,DWORD PTR [ebp*2+0x61be00ff]
  424d0e:	inc    DWORD PTR [ebx-0xecff01]
  424d14:	inc    esi
  424d15:	push   ebx
  424d16:	call   ebx
  424d18:	pusha  
  424d19:	add    DWORD PTR [eax],eax
  424d1b:	call   DWORD PTR [ecx+esi*8-0x7d]
  424d1f:	add    BYTE PTR [eax],al
  424d21:	and    DWORD PTR [esi],0x0
  424d24:	fwait
  424d25:	inc    ebp
  424d26:	add    DWORD PTR [ebx],0xffffffe7
  424d29:	jbe    0x424d2a
  424d2b:	int3   
  424d2c:	xchg   ecx,eax
  424d2d:	(bad)  
  424d2e:	(bad)  
  424d2f:	dec    DWORD PTR [ecx-0x2ffc27d]
  424d35:	ja     0x424d03
  424d37:	stos   BYTE PTR es:[edi],al
  424d38:	into   
  424d39:	adc    al,0x0
  424d3b:	add    BYTE PTR [esi+0xc0],ch
  424d41:	dec    DWORD PTR [ebx-0x760e9d01]
  424d47:	rcr    DWORD PTR [eax-0x7d],0x0
  424d4b:	jmp    DWORD PTR [edx+0x3]
  424d4e:	int3   
  424d4f:	(bad)  
  424d50:	inc    DWORD PTR [ebx-0x5ac6ff74]
  424d56:	(bad)  
  424d57:	std    
  424d58:	jle    0x424d54
  424d5a:	inc    DWORD PTR [eax]
  424d5c:	mov    WORD PTR [edi-0x1],?
  424d62:	inc    ecx
  424d63:	call   DWORD PTR [ecx+edx*8]
  424d66:	add    bl,al
  424d68:	cmc    
  424d69:	fdiv   st(7),st
  424d6b:	push   DWORD PTR [ebp+0x53]
  424d6e:	(bad)  
  424d6f:	(bad)  
  424d70:	inc    DWORD PTR [eax]
  424d72:	jl     0x424d74
  424d74:	mov    ecx,0x115cfff3
  424d79:	popf   
  424d7a:	add    DWORD PTR [eax],0x17
  424d7d:	inc    ecx
  424d7e:	add    bh,bh
  424d80:	inc    DWORD PTR [eax]
  424d82:	xchg   ebx,eax
  424d83:	jmp    DWORD PTR ds:0xf1ee83af
  424d89:	ror    BYTE PTR [ecx-0xdb0a00],1
  424d8f:	inc    DWORD PTR [eax]
  424d91:	call   FWORD PTR [eax+0x0]
  424d94:	sti    
  424d95:	adc    eax,DWORD PTR [eax]
  424d97:	dec    edi
  424d98:	cmp    eax,0x71000075
  424d9d:	pushf  
  424d9e:	mov    esp,ecx
  424da0:	inc    DWORD PTR [eax]
  424da2:	cwde   
  424da3:	add    cl,dh
  424da5:	lods   al,BYTE PTR ds:[esi]
  424da6:	add    BYTE PTR [ebx],dh
  424da8:	jg     0x424d66
  424daa:	mov    DWORD PTR [eax],eax
  424dac:	sub    edi,DWORD PTR [edi]
  424dae:	add    bh,bh
  424db0:	(bad)  
  424db1:	dec    DWORD PTR [esi-0x7d]
  424db4:	inc    ebx
  424db5:	sbb    bh,bh
  424db7:	inc    edi
  424db8:	mov    dl,0xfa
  424dba:	add    BYTE PTR [eax],al
  424dbc:	or     DWORD PTR [edi+0x830083],ecx
  424dc2:	add    BYTE PTR [eax],0xc1
  424dc5:	js     0x424d4a
  424dc7:	lahf   
  424dc8:	stos   BYTE PTR es:[edi],al
  424dc9:	fdivr  st,st(7)
  424dcb:	add    BYTE PTR [ecx-0x69],ah
  424dce:	(bad)  
  424dcf:	(bad)  
  424dd0:	(bad)  
  424dd1:	call   FWORD PTR [edi]
  424dd3:	jmp    edi
  424dd5:	imul   edi,edi,0xff77810b
  424ddb:	xor    ebx,0x42
  424dde:	inc    DWORD PTR [ebx-0x770100]
  424de4:	out    0x46,eax
  424de6:	add    BYTE PTR [ebx],ch
  424de8:	inc    eax
  424de9:	xchg   esp,ecx
  424deb:	add    BYTE PTR [edx],ah
  424ded:	ins    BYTE PTR es:[edi],dx
  424dee:	add    BYTE PTR [eax],al
  424df0:	inc    DWORD PTR [eax]
  424df2:	dec    ebx
  424df3:	call   DWORD PTR [edx+0x41]
  424df6:	add    BYTE PTR [ecx-0xffcf87],dh
  424dfc:	cmp    eax,0x83ff00ee
  424e01:	add    al,ch
  424e03:	(bad)  
  424e04:	mov    ebp,0x7c6c00b4
  424e09:	inc    ebx
  424e0a:	add    bh,bh
  424e0c:	xchg   edi,eax
  424e0d:	mov    edx,0xff00ff00
  424e12:	ror    BYTE PTR [ecx-0x47ff58e9],0x1e
  424e19:	pop    eax
  424e1a:	add    BYTE PTR [ecx-0x334d12],cl
  424e20:	cmp    edi,0xffffff9c
  424e23:	add    bh,bl
  424e25:	enter  0xb00,0x3f
  424e29:	inc    ebx
  424e2a:	inc    DWORD PTR [ebx-0x33b055]
  424e30:	add    DWORD PTR [eax],0x63
  424e33:	jmp    FWORD PTR [ecx+0xfb6003d]
  424e39:	or     ah,0x89
  424e3c:	call   0x8a414f05
  424e41:	call   FWORD PTR [edi]
  424e43:	dec    DWORD PTR [edi+0x52a283c4]
  424e49:	lods   al,BYTE PTR ds:[esi]
  424e4a:	inc    DWORD PTR [ebx-0xffcb4e]
  424e50:	add    bh,bh
  424e52:	sub    DWORD PTR [eax],eax
  424e54:	pop    edi
  424e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e56:	add    ch,ch
  424e58:	outs   dx,BYTE PTR ds:[esi]
  424e59:	add    BYTE PTR [eax],0x89
  424e5c:	outs   dx,BYTE PTR ds:[esi]
  424e5d:	ds mov edi,edi
  424e60:	mov    edi,edi
  424e62:	or     eax,DWORD PTR [eax]
  424e64:	or     BYTE PTR [ebx],dl
  424e66:	add    BYTE PTR [ebp-0xe675],dh
  424e6c:	add    BYTE PTR [ecx],dl
  424e6e:	(bad)  
  424e6f:	inc    DWORD PTR [ebx-0x6900c001]
  424e75:	inc    DWORD PTR [eax]
  424e77:	dec    ebx
  424e78:	or     bh,BYTE PTR [edi+0x212aff83]
  424e7e:	inc    DWORD PTR [ebx-0x3382ff34]
  424e84:	push   0x52
  424e86:	push   DWORD PTR [esp+eax*8-0x7900ffbd]
  424e8d:	push   edi
  424e8e:	int3   
  424e8f:	or     DWORD PTR [ecx-0x3c33d200],0x29
  424e96:	(bad)  
  424e97:	fnstenv [esi+ecx*8-0x7c1ff77]
  424e9e:	add    BYTE PTR [ebx-0x7c19007d],al
  424ea4:	daa    
  424ea5:	mov    cl,0x0
  424ea7:	push   es
  424ea8:	(bad)  
  424ea9:	int    0x89
  424eab:	call   DWORD PTR [ecx+0xccff78]
  424eb1:	sub    DWORD PTR [ebp-0x33350f00],0xffffff8a
  424eb8:	jae    0x424f33
  424eba:	mov    edi,edi
  424ebc:	jnp    0x424f24
  424ebe:	inc    DWORD PTR [eax]
  424ec0:	(bad)  
  424ec1:	inc    DWORD PTR [edx]
  424ec3:	(bad)  
  424ec4:	cli    
  424ec5:	mov    dh,0xff
  424ec7:	loop   0x424e4d
  424ec9:	mov    ch,0x0
  424ecb:	cmp    ebx,0x50
  424ece:	add    bh,bh
  424ed0:	inc    DWORD PTR [eax]
  424ed2:	xchg   DWORD PTR [ebx-0x4a765a73],eax
  424ed8:	imul   ebp,DWORD PTR [ebx-0x27197700],0xffff8389
  424ee2:	out    0xff,eax
  424ee4:	pop    eax
  424ee5:	nop
  424ee6:	jmp    FWORD PTR [ebx-0x338470]
  424eec:	into   
  424eed:	jnp    0x424ebb
  424eef:	inc    DWORD PTR [eax]
  424ef1:	(bad)  
  424ef2:	jge    0x424ef3
  424ef4:	gs popa 
  424ef6:	xor    edx,0xffffffc6
  424ef9:	ret    
  424efa:	inc    DWORD PTR [eax]
  424efc:	popa   
  424efd:	sbb    eax,0xffcc83
  424f02:	sub    al,0xff
  424f04:	mov    ds:0x6c8bff7c,al
  424f09:	retf   
  424f0a:	add    ah,cl
  424f0c:	jmp    0x1424e53
  424f11:	int3   
  424f12:	outs   dx,BYTE PTR ds:[esi]
  424f13:	(bad)  
  424f14:	fisubr WORD PTR [edi]
  424f16:	add    BYTE PTR [esi-0x7c0001e2],bl
  424f1c:	adc    al,0x3
  424f1e:	(bad)  
  424f1f:	inc    DWORD PTR [ebx+0x3aff5cff]
  424f25:	jbe    0x424eb0
  424f27:	mov    esp,DWORD PTR [edi]
  424f29:	rol    DWORD PTR [ebx-0x93b201],cl
  424f2f:	(bad)  
  424f30:	(bad)  
  424f31:	jmp    FWORD PTR [ebx+eax*4+0x36]
  424f35:	xchg   ebx,eax
  424f36:	push   DWORD PTR [esi+0x3b]
  424f39:	sub    al,0xff
  424f3b:	add    BYTE PTR ds:0xcccccc38,ah
  424f41:	sbb    DWORD PTR [eax+0x0],0x1e
  424f45:	popf   
  424f46:	call   eax
  424f48:	call   0xe7434e54
  424f4d:	jbe    0x424f4e
  424f4f:	add    bh,bh
  424f51:	jmp    FWORD PTR ds:0xff4d1389
  424f57:	mov    dh,0x4
  424f59:	jnp    0x424f5a
  424f5b:	(bad)  
  424f5c:	cmp    esi,DWORD PTR [eax]
  424f5e:	inc    DWORD PTR [ebx-0xc97c7d]
  424f64:	popa   
  424f65:	int    0xff
  424f67:	xor    DWORD PTR [ecx],0x3500ff62
  424f6d:	dec    edx
  424f6e:	(bad)  
  424f6f:	inc    DWORD PTR [eax]
  424f71:	adc    DWORD PTR ds:0xffece7ff,0x44
  424f78:	jbe    0x424f9d
  424f7a:	add    BYTE PTR [ebx+0xff9098],al
  424f80:	add    bh,bh
  424f82:	popa   
  424f83:	add    al,dh
  424f85:	pop    ss
  424f86:	add    BYTE PTR [ebp-0x33007e4b],ch
  424f8c:	sbb    ebx,ebp
  424f8e:	mov    DWORD PTR [eax],eax
  424f90:	int3   
  424f91:	jmp    FWORD PTR [ebx-0x1]
  424f94:	loop   0x424fac
  424f96:	add    BYTE PTR [edx+0x57],dl
  424f99:	loopne 0x424f9b
  424f9b:	call   ecx
  424f9d:	mov    edi,?
  424f9f:	int3   
  424fa0:	inc    DWORD PTR [eax]
  424fa2:	and    bh,bh
  424fa4:	aas    
  424fa5:	out    dx,eax
  424fa6:	call   FWORD PTR [edi+eiz*4+0x5e]
  424faa:	add    BYTE PTR [eax],al
  424fac:	call   FWORD PTR [esi]
  424fae:	(bad)  
  424faf:	inc    DWORD PTR [eax]
  424fb1:	inc    edi
  424fb3:	int3   
  424fb4:	or     eax,0x9a5600a4
  424fb9:	cmc    
  424fba:	add    BYTE PTR [ecx-0x7c73a5],cl
  424fc0:	add    BYTE PTR [ebx-0x7d73fff3],al
  424fc6:	add    BYTE PTR [edx+edi*8+0x8],ah
  424fca:	add    bh,bh
  424fcc:	sub    al,0x33
  424fce:	dec    esp
  424fd0:	add    BYTE PTR [eax],al
  424fd2:	push   esp
  424fd3:	add    BYTE PTR [edi-0x59690056],dh
  424fd9:	cmp    edi,edi
  424fdb:	add    BYTE PTR [edx+0x78],al
  424fde:	int3   
  424fdf:	(bad)  
  424fe0:	dec    esp
  424fe2:	js     0x424fe3
  424fe4:	or     al,0x13
  424fe6:	push   DWORD PTR [esi+0x898285]
  424fec:	mov    cl,0x54
  424fee:	int3   
  424fef:	inc    DWORD PTR [eax]
  424ff1:	add    BYTE PTR [eax],ah
  424ff3:	dec    DWORD PTR [ecx]
  424ff5:	mov    ecx,0x5b82f100
  424ffa:	add    BYTE PTR [eax],al
  424ffc:	add    ebx,DWORD PTR [edi+edi*8-0xfff0034]
  425003:	push   eax
  425005:	jmp    0x90e76b09
  42500a:	inc    DWORD PTR [eax]
  42500c:	js     0x424ffa
  42500e:	inc    DWORD PTR [eax]
  425010:	(bad)  
  425011:	push   DWORD PTR [eax+eax*1-0x260045ba]
  425018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425019:	sub    edi,edi
  42501b:	jmp    edx
  42501d:	imul   edi,edi,0xb3ff83ff
  425023:	add    BYTE PTR [esi],al
  425025:	cmc    
  425026:	(bad)  
  425027:	js     0x42509c
  425029:	icebp  
  42502a:	int3   
  42502b:	add    BYTE PTR [eax-0x7c0000c2],ah
  425031:	add    BYTE PTR [ebx+0x12ed83],dl
  425037:	and    bl,BYTE PTR [ebx-0x6]
  42503a:	add    BYTE PTR [eax],al
  42503c:	scas   al,BYTE PTR es:[edi]
  42503d:	add    al,0x0
  42503f:	add    bh,bh
  425041:	add    bl,dl
  425043:	int3   
  425044:	lahf   
  425045:	cli    
  425046:	inc    DWORD PTR [eax-0x7633519b]
  42504c:	cli    
  42504d:	stos   BYTE PTR es:[edi],al
  42504e:	int3   
  42504f:	add    bh,bh
  425051:	call   FWORD PTR [ebx-0x1]
  425054:	aam    0xd
  425056:	push   DWORD PTR [edi-0x37cf]
  42505c:	(bad)  
  42505d:	imul   edi,edi,0xffffffff
  425060:	add    bh,bh
  425062:	nop
  425063:	jmp    FWORD PTR [ecx-0x65]
  425066:	add    BYTE PTR ds:0xff008fa2,al
  42506c:	ret    0x4a
  42506f:	cmp    edi,0xffffffcc
  425072:	stc    
  425073:	sbb    DWORD PTR ds:0x5f1e0094,0x4d
  42507a:	add    bh,bh
  42507c:	cmp    DWORD PTR [edx-0x1],ebx
  42507f:	mov    edi,edi
  425081:	int3   
  425082:	cmp    edi,0xfffffffd
  425085:	mov    al,ds:0xe004d283
  42508a:	(bad)  
  42508b:	jmp    edx
  42508d:	icebp  
  42508e:	add    bh,bh
  425090:	mov    edi,edi
  425092:	mov    DWORD PTR [ebx-0x5a007e92],eax
  425098:	out    0xe9,eax
  42509a:	(bad)  
  42509b:	(bad)  
  42509c:	jg     0x425103
  42509e:	cmp    edi,0xffffffff
  4250a1:	add    BYTE PTR [edx],cl
  4250a3:	add    ah,cl
  4250a5:	sbb    eax,0x23964f83
  4250aa:	add    DWORD PTR [eax],0x17
  4250ad:	stc    
  4250ae:	inc    DWORD PTR [eax]
  4250b0:	(bad)  
  4250b1:	dec    esi
  4250b3:	add    cl,cl
  4250b5:	dec    ebx
  4250b6:	jmp    DWORD PTR [eax]
  4250b8:	pop    ecx
  4250b9:	push   ss
  4250ba:	dec    DWORD PTR [ecx-0x7c008cf4]
  4250c0:	inc    DWORD PTR [eax]
  4250c2:	aam    0x89
  4250c4:	stos   DWORD PTR es:[edi],eax
  4250c5:	stos   DWORD PTR es:[edi],eax
  4250c6:	add    BYTE PTR [edi+0x79],dh
  4250c9:	jno    0x4250ca
  4250cb:	(bad)  
  4250cc:	in     al,dx
  4250cd:	mov    al,0x0
  4250cf:	inc    DWORD PTR [eax]
  4250d1:	inc    DWORD PTR [ecx-0x83c57d]
  4250d7:	dec    esi
  4250d8:	xchg   edi,eax
  4250d9:	pop    esi
  4250da:	mov    edi,edi
  4250dc:	jb     0x425120
  4250de:	add    bh,bh
  4250e0:	int3   
  4250e1:	(bad)  
  4250e2:	out    dx,al
  4250e3:	inc    DWORD PTR [eax]
  4250e5:	dec    edx
  4250e6:	(bad)  
  4250e7:	jmp    0x8bd3:0xff01dd
  4250ee:	inc    DWORD PTR [ebx-0xca0000]
  4250f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4250f5:	(bad)  
  4250f7:	sbb    bl,BYTE PTR [ecx-0x3f0000c8]
  4250fd:	mov    ds:0xffccff83,eax
  425102:	fadd   QWORD PTR [ebx-0x4c7c6395]
  425108:	add    eax,0x53ff897a
  42510d:	lods   al,BYTE PTR ds:[esi]
  42510e:	(bad)  
  42510f:	(bad)  
  425110:	inc    DWORD PTR [ebx-0x7c0ffff1]
  425116:	int3   
  425117:	stos   DWORD PTR es:[edi],eax
  425118:	push   ebx
  425119:	xlat   BYTE PTR ds:[ebx]
  42511a:	add    BYTE PTR [eax],al
  42511c:	fistp  QWORD PTR [edi-0x34]
  42511f:	(bad)  
  425120:	(bad)  
  425121:	push   DWORD PTR [ecx+ecx*4]
  425124:	pop    ds
  425125:	add    al,0xff
  425127:	repz test al,0x5d
  42512a:	inc    DWORD PTR [eax]
  42512c:	and    dh,BYTE PTR [edi-0x1]
  42512f:	inc    DWORD PTR [ebx+0x7883a989]
  425135:	mov    ecx,esp
  425137:	sub    DWORD PTR [edi],esp
  425139:	push   eax
  42513a:	add    BYTE PTR [ecx-0x78c8],cl
  425140:	(bad)  
  425141:	inc    DWORD PTR [edi+0x0]
  425144:	in     eax,0x5e
  425146:	add    BYTE PTR [eax-0xff25bd],ch
  42514c:	jg     0x425145
  42514e:	(bad)  
  42514f:	(bad)  
  425150:	inc    DWORD PTR [eax]
  425152:	sahf   
  425153:	add    BYTE PTR [eax-0xd37ffe4],bh
  425159:	aad    0x89
  42515b:	jmp    FWORD PTR [eax]
  42515d:	imul   eax,DWORD PTR [eax],0xffffffff
  425160:	mov    DWORD PTR [ebx+0x2669ff06],eax
  425166:	jmp    DWORD PTR [ecx+ebx*4-0x6cffff9e]
  42516d:	or     BYTE PTR [eax],al
  42516f:	add    bh,bh
  425171:	adc    DWORD PTR [ecx+0x230183],0xffffff88
  425178:	mov    esi,0x8ffff45
  42517d:	ds cmp edi,0xffffffff
  425181:	(bad)  
  425182:	cmp    eax,DWORD PTR [ebx-0x61ffe91c]
  425188:	pop    ebp
  425189:	mov    ah,0xff
  42518b:	call   FWORD PTR [esi+0xff4a]
  425191:	(bad)  
  425192:	jmp    0x425117
  425194:	dec    ecx
  425195:	pop    es
  425196:	(bad)  
  425197:	cld    
  425198:	jecxz  0x42519b
  42519a:	int3   
  42519b:	add    BYTE PTR [esi+eax*2],cl
  42519e:	add    bh,bh
  4251a0:	(bad)  
  4251a1:	(bad)  
  4251a2:	mov    esp,0x830482cc
  4251a7:	add    DWORD PTR [esi],edx
  4251a9:	stos   DWORD PTR es:[edi],eax
  4251aa:	add    BYTE PTR [eax],al
  4251ac:	dec    ecx
  4251ad:	mov    al,0xff
  4251af:	cmp    edi,0xffffff83
  4251b2:	in     al,dx
  4251b3:	call   FWORD PTR [eax]
  4251b5:	in     al,dx
  4251b6:	int3   
  4251b7:	int    0x97
  4251b9:	mov    edx,0x9d54ff00
  4251be:	dec    esp
  4251c0:	inc    DWORD PTR [ebx+0x6fccff30]
  4251c6:	add    al,cl
  4251c8:	sbb    BYTE PTR [ecx-0xfe0000],al
  4251ce:	cmp    edi,0xffffff89
  4251d1:	add    DWORD PTR [ebx],0x0
  4251d4:	adc    ebp,edx
  4251d6:	call   DWORD PTR [esi+ebx*8-0x42]
  4251da:	inc    DWORD PTR [eax]
  4251dc:	push   ds
  4251dd:	dec    ebp
  4251de:	int3   
  4251df:	(bad)  
  4251e0:	inc    DWORD PTR [ebx+0x3b4ff6b]
  4251e6:	call   DWORD PTR [esi]
  4251e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251e9:	or     edi,edi
  4251eb:	jmp    FWORD PTR [esi]
  4251ed:	or     edi,edi
  4251ef:	int3   
  4251f0:	dec    esp
  4251f2:	loopne 0x4251f3
  4251f4:	mov    edi,DWORD PTR [esi]
  4251f6:	add    BYTE PTR [esi+edi*4],ch
  4251f9:	xor    cl,ah
  4251fb:	jmp    DWORD PTR [ecx-0x33007c58]
  425201:	xor    DWORD PTR [ebx-0x34],0x1c
  425205:	lds    eax,FWORD PTR [eax]
  425207:	jne    0x425227
  425209:	cs (bad) 
  42520b:	push   DWORD PTR [edx-0xff3398]
  425211:	add    ah,dh
  425213:	jmp    DWORD PTR [ecx+esi*1]
  425216:	call   FWORD PTR [ecx]
  425218:	loop   0x425299
  42521a:	add    bh,bh
  42521c:	inc    edx
  42521d:	aad    0x0
  42521f:	or     esp,0xffffff83
  425222:	rol    BYTE PTR [eax],1
  425224:	push   esp
  425225:	into   
  425226:	call   DWORD PTR [edi]
  425228:	cmp    eax,0xd7000071
  42522d:	jne    0x42522f
  42522f:	(bad)  
  425230:	inc    DWORD PTR [ebx-0x414aff0a]
  425236:	call   DWORD PTR [ebx-0x682f]
  42523c:	xchg   edi,eax
  42523d:	cmp    eax,DWORD PTR [ebx-0x4a770000]
  425243:	sub    DWORD PTR [esi],0xffffffe3
  425246:	add    ah,ah
  425248:	dec    esi
  425249:	pop    ecx
  42524a:	add    bh,bh
  42524c:	mov    eax,cs:0x8300ff00
  425252:	ror    ah,0xcb
  425255:	xlat   BYTE PTR ds:[ebx]
  425256:	sbb    DWORD PTR [ebp-0x7cffe9ad],0xf
  42525d:	dec    edx
  42525e:	inc    DWORD PTR [eax]
  425260:	add    bh,bh
  425262:	fisttp DWORD PTR [ecx+0x589958d]
  425268:	or     DWORD PTR [eax+0x19c9ffcc],ebx
  42526e:	(bad)  
  42526f:	(bad)  
  425270:	(bad)  
  425271:	jmp    DWORD PTR [eax+0x0]
  425274:	std    
  425275:	sar    edi,cl
  425277:	xchg   edx,eax
  425278:	mov    ecx,DWORD PTR [edi]
  42527a:	add    bh,bh
  42527c:	(bad)  
  42527e:	dec    esp
  425280:	or     DWORD PTR [ecx+0x40f1ff9a],0x0
  425287:	xor    eax,0xffff765e
  42528c:	sbb    bl,0x83
  42528f:	int3   
  425290:	inc    DWORD PTR [eax]
  425292:	and    al,0x0
  425294:	mov    al,ds:0x61c500ad
  425299:	push   edi
  42529a:	inc    DWORD PTR [eax]
  42529c:	sub    BYTE PTR [edi+0x83ff00],0xe4
  4252a3:	add    DWORD PTR [ecx-0x4bcc7ced],0x4
  4252aa:	(bad)  
  4252ab:	call   FWORD PTR [esi-0x56]
  4252ae:	(bad)  
  4252af:	inc    DWORD PTR [eax]
  4252b1:	push   DWORD PTR [edi+edi*8-0x5e]
  4252b5:	jg     0x4252b6
  4252b7:	or     al,0x51
  4252b9:	pop    ebp
  4252ba:	cmp    edi,0x1a
  4252bd:	or     DWORD PTR cs:[ecx-0x17337d],0x76
  4252c5:	mov    ds:0xb24625cc,eax
  4252ca:	add    BYTE PTR [eax],al
  4252cc:	push   ss
  4252cd:	mov    esp,0x83ffff
  4252d2:	(bad)  
  4252d3:	call   FWORD PTR [esi+0x55440057]
  4252d9:	or     cl,BYTE PTR [ecx-0x381e34]
  4252df:	add    BYTE PTR [eax],al
  4252e1:	add    bh,cl
  4252e3:	jmp    DWORD PTR [edx-0x3f]
  4252e6:	(bad)  
  4252e7:	jp     0x4252c5
  4252e9:	dec    ecx
  4252ea:	add    BYTE PTR [ebx-0x33ffee2e],al
  4252f0:	add    DWORD PTR [ebx+0x5ee800eb],0xffffff83
  4252f7:	mov    eax,0xffffd482
  4252fc:	adc    DWORD PTR [ebp-0x7d00],esi
  425302:	cwde   
  425303:	inc    ebp
  425305:	fiadd  WORD PTR [ebx-0x7c19656e]
  42530b:	int3   
  42530c:	pop    eax
  42530d:	lahf   
  42530e:	int3   
  42530f:	add    bh,bh
  425311:	int3   
  425312:	aas    
  425313:	(bad)  
  425314:	jg     0x425369
  425316:	add    BYTE PTR ds:0xff,bl
  42531c:	(bad)  
  42531d:	(bad)  
  42531e:	(bad)  
  42531f:	(bad)  
  425320:	push   DWORD PTR [edi+0x0]
  425323:	add    cl,al
  425325:	jmp    FWORD PTR [eax+0x16ffa0]
  42532b:	(bad)  
  42532c:	js     0x42532e
  42532e:	xchg   edi,eax
  42532f:	mov    eax,0xff8352cc
  425334:	(bad)  
  425336:	icebp  
  425337:	mov    edx,0x1700
  42533c:	js     0x42533d
  42533e:	sub    eax,0x7c3eff52
  425343:	arpl   WORD PTR [esi+0x0],sp
  425346:	dec    DWORD PTR [esi-0x1]
  425349:	(bad)  
  42534a:	(bad)  
  42534b:	out    dx,eax
  42534c:	bound  esi,QWORD PTR [edi+0x61ffff00]
  425352:	xchg   esi,eax
  425353:	jno    0x4253c9
  425355:	(bad)  
  425356:	jmp    DWORD PTR [esi-0x7d]
  425359:	inc    DWORD PTR [ebx-0xca5c02]
  42535f:	(bad)  
  425360:	inc    ebx
  425362:	scas   al,BYTE PTR es:[edi]
  425363:	add    BYTE PTR [esi-0xff12d0],bh
  425369:	in     eax,0x17
  42536b:	add    BYTE PTR [ebx+0xff00b6],al
  425371:	sub    edi,eax
  425373:	push   ecx
  425375:	in     al,0x18
  425377:	mov    edi,edi
  425379:	pop    ecx
  42537a:	adc    BYTE PTR [ebx-0x1b01],al
  425380:	(bad)  
  425381:	jns    0x42537d
  425383:	(bad)  
  425384:	cmp    al,0x1c
  425386:	sub    al,0xff
  425388:	(bad)  
  425389:	jge    0x4253dc
  42538b:	(bad)  
  42538c:	dec    ebp
  42538e:	int3   
  42538f:	add    bh,bh
  425391:	(bad)  
  425392:	das    
  425393:	jmp    DWORD PTR [ecx+0xffc219]
  425399:	mov    dh,0x44
  42539b:	add    ah,cl
  42539d:	stos   DWORD PTR es:[edi],eax
  42539e:	int3   
  42539f:	add    BYTE PTR [eax],al
  4253a1:	lock mov esp,0x2028e2ff
  4253a7:	inc    DWORD PTR [eax]
  4253a9:	inc    edx
  4253aa:	sbb    ecx,DWORD PTR [ecx-0x3b7d]
  4253b0:	add    BYTE PTR [esi-0x1333348],cl
  4253b6:	adc    eax,DWORD PTR [eax]
  4253b8:	mov    eax,ebx
  4253ba:	jmp    0x22dcbf
  4253bf:	add    bh,bh
  4253c1:	jnp    0x425359
  4253c3:	sbb    DWORD PTR [ebx+ecx*8+0x39],0x0
  4253c8:	add    BYTE PTR [eax-0xd007cf7],dh
  4253ce:	add    BYTE PTR [eax],al
  4253d0:	jmp    DWORD PTR [edx+0x38ceff2e]
  4253d6:	ss (bad) 
  4253d8:	call   DWORD PTR [ebp-0x7c]
  4253db:	add    BYTE PTR [ebx+0xffff26],al
  4253e1:	fcom   QWORD PTR [eax+0x369ed983]
  4253e7:	add    BYTE PTR [ebx-0x7c1b01],al
  4253ed:	(bad)  
  4253ef:	inc    DWORD PTR [ebx+0x75005eaa]
  4253f5:	pop    esi
  4253f6:	adc    eax,0x3325ffff
  4253fb:	inc    DWORD PTR [eax]
  4253fd:	sub    eax,0x15008383
  425402:	jo     0x425403
  425404:	xchg   ecx,eax
  425405:	js     0x42544f
  425407:	inc    DWORD PTR [ebx+0xffe47b]
  42540d:	mov    edi,edi
  42540f:	inc    DWORD PTR [eax]
  425411:	(bad)  
  425413:	dec    DWORD PTR [ecx+0xfff3b1]
  425419:	pop    ecx
  42541a:	mov    DWORD PTR [ecx-0x7c6c01],ecx
  425420:	add    BYTE PTR [ebp-0x4b3700a3],bh
  425426:	xchg   ah,cl
  425428:	add    ch,ah
  42542a:	add    edi,edi
  42542c:	inc    DWORD PTR [ecx-0x24330001]
  425432:	adc    eax,DWORD PTR [eax]
  425434:	fdivr  DWORD PTR [eax-0x15]
  425437:	add    bh,bh
  425439:	inc    edi
  42543a:	repnz (bad) 
  42543c:	(bad)  
  42543d:	cmp    eax,DWORD PTR [ebx+0x18e7ffff]
  425443:	dec    edi
  425445:	dec    esi
  425447:	add    bh,bh
  425449:	adc    BYTE PTR [ecx],cl
  42544b:	add    DWORD PTR [eax],0xffffffdd
  42544e:	add    BYTE PTR [ecx-0xfb2f7d],cl
  425454:	mov    ds:0xfff4f6,eax
  425459:	add    bl,BYTE PTR [ebx+0xefffff]
  42545f:	inc    DWORD PTR [ebx+0x2cff9c48]
  425465:	or     eax,0x9dffffdd
  42546a:	enter  0x89cc,0x47
  42546e:	int3   
  42546f:	dec    esp
  425471:	mov    eax,?
  425473:	push   DWORD PTR [edi-0x767c9c0a]
  425479:	mov    bh,BYTE PTR [eax]
  42547b:	(bad)  
  42547c:	push   DWORD PTR [edi+edi*8]
  42547f:	inc    DWORD PTR [eax]
  425481:	mov    esi,ecx
  425483:	cmp    DWORD PTR [esi],0x4b
  425486:	pop    esi
  425487:	inc    DWORD PTR [ebx+0xd2c4]
  42548d:	mov    ecx,0xb4ffffff
  425492:	ret    
  425493:	inc    ecx
  425495:	mov    ds:0x84ff0002,al
  42549a:	iret   
  42549b:	mov    edi,edi
  42549d:	add    al,0xff
  42549f:	add    bh,bh
  4254a1:	les    edi,FWORD PTR [ebp-0x5bf44501]
  4254a7:	(bad)  
  4254a8:	inc    ebp
  4254aa:	xchg   edi,eax
  4254ab:	(bad)  
  4254ac:	jmp    DWORD PTR [edx+0x270000cc]
  4254b2:	push   ss
  4254b3:	or     ebp,0x2e
  4254b6:	push   esp
  4254b7:	inc    DWORD PTR [eax]
  4254b9:	sahf   
  4254ba:	out    dx,eax
  4254bb:	(bad)  
  4254bc:	inc    DWORD PTR [edi-0x1]
  4254bf:	dec    esp
  4254c1:	and    ah,BYTE PTR [ecx]
  4254c3:	(bad)  
  4254c4:	out    dx,eax
  4254c5:	jl     0x425506
  4254c7:	cmp    edi,0x6a
  4254ca:	push   esp
  4254cb:	cmp    edi,0x78
  4254ce:	(bad)  
  4254cf:	dec    DWORD PTR [ecx+0x72001b69]
  4254d5:	adc    bl,dl
  4254d7:	(bad)  
  4254d8:	push   DWORD PTR [esi]
  4254da:	or     al,BYTE PTR [ebx-0x7cff9f01]
  4254e0:	or     DWORD PTR [esi+0x20],0xffffffff
  4254e4:	jae    0x425491
  4254e6:	imul   eax,DWORD PTR [eax],0xffffffff
  4254e9:	push   0xffffffef
  4254eb:	inc    DWORD PTR [eax]
  4254ed:	or     ecx,DWORD PTR [ecx-0x3fb40100]
  4254f3:	jmp    DWORD PTR [edx-0x49]
  4254f6:	push   ss
  4254f7:	(bad)  
  4254f8:	jmp    DWORD PTR [esi+0x12ff89d3]
  4254fe:	add    bh,bh
  425500:	inc    ebp
  425502:	mov    edx,0x57a084ff
  425507:	int3   
  425508:	dec    DWORD PTR [ebx+0x31ff83ea]
  42550e:	(bad)  
  42550f:	(bad)  
  425510:	push   DWORD PTR [eax]
  425512:	jg     0x425513
  425514:	cs push edi
  425516:	sub    bh,bh
  425518:	adc    eax,0xffffffda
  42551b:	(bad)  
  42551c:	(bad)  
  42551d:	cmp    al,0xff
  42551f:	inc    DWORD PTR [ebx+0x240062e3]
  425525:	mov    ebx,0xa800ff28
  42552a:	pusha  
  42552b:	add    BYTE PTR [eax],al
  42552d:	push   cs
  42552e:	mov    DWORD PTR [eax],eax
  425530:	add    BYTE PTR [ebp+0x3e31fffd],ch
  425536:	add    eax,DWORD PTR [eax]
  425538:	add    BYTE PTR [ecx],ah
  42553a:	inc    esi
  42553b:	inc    DWORD PTR [eax]
  42553d:	clc    
  42553e:	inc    DWORD PTR [eax]
  425540:	inc    DWORD PTR [edi+0x18]
  425543:	push   esp
  425545:	jmp    0x230f5496
  42554a:	jnp    0x42554c
  42554c:	jmp    ebx
  42554e:	add    BYTE PTR [eax],al
  425550:	call   DWORD PTR ds:0x2b40ff43
  425556:	push   ebp
  425557:	int3   
  425558:	int3   
  425559:	clc    
  42555a:	cmp    bh,0x89
  42555d:	(bad)  
  42555f:	add    bh,bh
  425561:	lea    edi,[ebx+0x0]
  425564:	cmp    al,0xb1
  425566:	dec    edx
  425567:	(bad)  
  425568:	call   DWORD PTR [edi+ecx*4+0x0]
  42556c:	call   DWORD PTR [edx]
  42556e:	add    BYTE PTR [eax],al
  425570:	add    BYTE PTR [edi+0x6d],cl
  425573:	add    BYTE PTR [ecx+edx*1-0x1a],dl
  425577:	int3   
  425578:	dec    edi
  42557a:	pushf  
  42557b:	add    bh,bh
  42557d:	add    BYTE PTR ds:[ebx+0x9fbe00],al
  425584:	jmp    0xffc56e21
  425589:	mov    dl,0x12
  42558b:	or     esp,0xffffff90
  42558e:	inc    DWORD PTR [eax]
  425590:	dec    DWORD PTR [eax+esi*8-0x30826b00]
  425597:	dec    DWORD PTR [ecx+0x83bf37]
  42559d:	add    eax,0xca0000ff
  4255a2:	fdiv   st(7),st
  4255a4:	push   edx
  4255a5:	jmp    0xc70f54e4
  4255aa:	jl     0x4255ab
  4255ac:	(bad)  
  4255ad:	std    
  4255ae:	inc    DWORD PTR [eax]
  4255b0:	add    BYTE PTR [edi+0x7b],ch
  4255b3:	dec    ebx
  4255b5:	xchg   ebp,eax
  4255b6:	pop    edi
  4255b7:	inc    DWORD PTR [eax]
  4255b9:	sub    DWORD PTR [edx],ebp
  4255bb:	add    BYTE PTR [ebx-0x7c23],al
  4255c1:	cmp    BYTE PTR [esi+0x6b6bc83],al
  4255c7:	inc    DWORD PTR [eax]
  4255c9:	xchg   edx,eax
  4255ca:	aas    
  4255cb:	inc    DWORD PTR [ebx+0x83ff77]
  4255d1:	mov    al,0x97
  4255d3:	add    BYTE PTR [ebx+ebx*2-0x3f],ch
  4255d7:	cmp    edi,0xffffffc8
  4255da:	scas   eax,DWORD PTR es:[edi]
  4255db:	(bad)  
  4255dc:	(bad)  
  4255dd:	fdiv   st(7),st
  4255df:	add    DWORD PTR [eax],0xffffffad
  4255e2:	out    0xff,al
  4255e4:	mov    bh,0xd2
  4255e6:	aas    
  4255e7:	add    DWORD PTR [eax],0xfffffff5
  4255ea:	sar    bh,cl
  4255ec:	jmp    DWORD PTR [esi+0x2cff0000]
  4255f2:	sbb    eax,0xdfc4acff
  4255f7:	dec    esp
  4255f9:	xchg   esi,eax
  4255fa:	mov    bh,bh
  4255fc:	sub    DWORD PTR [edi+edi*8-0x5ceb0034],0xffffffff
  425604:	lods   eax,DWORD PTR ds:[esi]
  425605:	jno    0x42565d
  425607:	(bad)  
  425608:	call   FWORD PTR [eax+0x77cc00a4]
  42560e:	(bad)  
  42560f:	inc    DWORD PTR [eax]
  425611:	ja     0x4255a7
  425613:	int3   
  425614:	enter  0x7fbb,0xff
  425618:	inc    edi
  42561a:	sub    DWORD PTR [ecx-0x9077],ecx
  425620:	call   FWORD PTR [esi]
  425622:	mov    dl,0xff
  425624:	cmp    eax,ecx
  425626:	mov    edx,0x283e00cc
  42562b:	inc    DWORD PTR [ebx+0xffff09]
  425631:	cmp    esp,DWORD PTR [esi+0x0]
  425634:	shl    DWORD PTR [ebp+0x240000b9],0x2f
  42563b:	cmp    edi,0xffffffd4
  42563e:	add    BYTE PTR [eax],al
  425640:	add    BYTE PTR [edi-0x17],dl
  425643:	inc    DWORD PTR [eax]
  425645:	shr    DWORD PTR [edx-0x16af7634],1
  42564b:	(bad)  
  42564c:	push   DWORD PTR ds:0xdeffff00
  425652:	popf   
  425653:	jmp    edx
  425655:	mov    ebp,0xf300ff4d
  42565a:	inc    esp
  42565b:	int3   
  42565c:	add    BYTE PTR [edx],bh
  42565e:	inc    DWORD PTR [eax]
  425660:	jmp    FWORD PTR [ebx-0x30]
  425663:	add    BYTE PTR [eax+0xffc732],ch
  425669:	icebp  
  42566a:	test   eax,0x9affff
  42566f:	int3   
  425670:	jmp    DWORD PTR [esi+0x2a3a0041]
  425676:	loop   0x425677
  425678:	push   DWORD PTR [ebp+ebx*1+0xa50000]
  42567f:	add    BYTE PTR [ebx-0x3d33b715],al
  425685:	pusha  
  425686:	sub    edi,edi
  425688:	adc    DWORD PTR [ebp+edi*4-0x7d],0x0
  42568d:	ret    
  42568e:	inc    DWORD PTR [eax]
  425690:	jmp    DWORD PTR [esi-0x734b0080]
  425696:	ins    BYTE PTR es:[edi],dx
  425697:	cmp    edi,0x29
  42569a:	(bad)  
  42569c:	int3   
  42569d:	mov    dl,0x0
  42569f:	add    BYTE PTR [eax],al
  4256a1:	not    DWORD PTR [ecx]
  4256a3:	inc    DWORD PTR [ebp-0x4826]
  4256a9:	retf   
  4256aa:	push   edx
  4256ab:	inc    DWORD PTR [ebx+0xffff06]
  4256b1:	daa    
  4256b2:	fild   DWORD PTR [eax]
  4256b4:	dec    edx
  4256b5:	outs   dx,DWORD PTR ds:[esi]
  4256b6:	mov    al,ds:0xcb8083ff
  4256bb:	add    bh,bh
  4256bd:	cmp    eax,0xcbff00ff
  4256c2:	sub    eax,DWORD PTR [eax]
  4256c4:	cli    
  4256c5:	pop    edi
  4256c6:	or     al,BYTE PTR [eax]
  4256c8:	add    ch,ah
  4256ca:	adc    al,0x0
  4256cc:	add    BYTE PTR [esp+ecx*8],cl
  4256cf:	int3   
  4256d0:	adc    ebx,0xb
  4256d3:	(bad)  
  4256d4:	jg     0x42572c
  4256d6:	je     0x4256d7
  4256d8:	(bad)  
  4256d9:	cmp    ch,bh
  4256db:	int3   
  4256dc:	push   DWORD PTR [ebp+0x0]
  4256df:	add    BYTE PTR [eax],al
  4256e1:	inc    esp
  4256e2:	sub    edi,edi
  4256e4:	das    
  4256e5:	ds mov al,0x0
  4256e8:	(bad)  
  4256e9:	clc    
  4256ea:	cmc    
  4256eb:	add    BYTE PTR [eax],al
  4256ed:	sbb    al,0xff
  4256ef:	add    bh,bh
  4256f1:	ror    BYTE PTR [edx],0xff
  4256f4:	je     0x4256c3
  4256f6:	cmp    eax,DWORD PTR [eax]
  4256f8:	int3   
  4256f9:	inc    edx
  4256fa:	and    edi,edi
  4256fc:	call   FWORD PTR [edx]
  4256fe:	(bad)  
  4256ff:	inc    DWORD PTR [eax]
  425701:	cmp    al,0x37
  425703:	jmp    DWORD PTR [edx-0x6d]
  425706:	ins    DWORD PTR es:[edi],dx
  425707:	inc    DWORD PTR [eax]
  425709:	scas   al,BYTE PTR es:[edi]
  42570a:	add    DWORD PTR [eax],eax
  42570c:	sub    DWORD PTR [ecx-0x7d],0xffffffff
  425710:	add    BYTE PTR [esi+0xc53ff83],dl
  425716:	sar    bh,1
  425718:	add    BYTE PTR [esi+0x4b],ah
  42571b:	cmp    edi,0xd
  42571e:	int3   
  42571f:	add    BYTE PTR [ebx+0x6e83539b],al
  425725:	test   al,0xe0
  425727:	inc    DWORD PTR [eax]
  425729:	adc    BYTE PTR [edx-0x1],0xcc
  42572d:	cmp    bh,0x83
  425730:	(bad)  
  425731:	jnp    0x425740
  425733:	inc    DWORD PTR [esi-0x4622]
  425739:	arpl   bx,sp
  42573b:	or     DWORD PTR [ecx-0xff76dd],0xffffffc6
  425742:	push   0x68d40f83
  425747:	(bad)  
  425748:	push   DWORD PTR [edx]
  42574a:	ret    0x0
  42574d:	inc    esi
  42574e:	add    ah,cl
  425750:	add    cl,ch
  425752:	out    dx,eax
  425753:	(bad)  
  425754:	cmp    edi,esp
  425756:	dec    ecx
  425757:	dec    esp
  425759:	jecxz  0x42574b
  42575b:	add    DWORD PTR [eax],0x7a
  42575e:	inc    DWORD PTR [eax]
  425760:	(bad)  
  425761:	fcomp  QWORD PTR [esp+ecx*8-0x2d]
  425765:	mov    al,ds:0xfa89ffc3
  42576a:	mov    DWORD PTR [eax],eax
  42576c:	call   FWORD PTR [eax]
  42576e:	add    bh,bh
  425770:	call   FWORD PTR [ebp*1-0x10033701]
  425777:	add    BYTE PTR [ebx-0x768845],al
  42577d:	into   
  42577e:	add    BYTE PTR [ecx+0x5d2ff],cl
  425784:	or     al,0xba
  425786:	jge    0x425788
  425788:	int3   
  425789:	push   es
  42578a:	fs add bh,bh
  42578d:	inc    WORD PTR [ebx+0x1ae300]
  425794:	mov    edx,0x83ffbd57
  425799:	pop    eax
  42579a:	add    al,0x0
  42579c:	add    ch,dl
  42579e:	or     DWORD PTR [ecx-0xb37600],0x43
  4257a5:	pop    esi
  4257a6:	dec    ebp
  4257a7:	add    bh,bh
  4257a9:	out    dx,al
  4257aa:	retf   0xff
  4257ad:	xlat   BYTE PTR ds:[ebx]
  4257ae:	add    DWORD PTR [eax],0xffffffcc
  4257b1:	lea    eax,[edi]
  4257b3:	add    BYTE PTR [ecx-0xffb5],al
  4257b9:	sbb    al,0x5f
  4257bb:	mov    DWORD PTR [eax],eax
  4257bd:	and    ah,cl
  4257bf:	add    BYTE PTR [eax],al
  4257c1:	aad    0xea
  4257c3:	int3   
  4257c4:	nop
  4257c5:	mov    esp,0x9dff83fe
  4257ca:	out    dx,al
  4257cb:	cmp    edi,0x7a
  4257ce:	mov    edi,edi
  4257d0:	call   FWORD PTR [ebx-0x4d]
  4257d3:	int3   
  4257d4:	jecxz  0x425782
  4257d6:	dec    ebx
  4257d7:	add    bh,bh
  4257d9:	push   0xffffffa5
  4257db:	inc    DWORD PTR [eax]
  4257dd:	in     al,dx
  4257de:	dec    esp
  4257e0:	add    BYTE PTR [esi+esi*1-0x5598957d],dh
  4257e7:	add    DWORD PTR [ebx-0xff1b00],0x12
  4257ee:	add    bh,bh
  4257f0:	jmp    FWORD PTR [edi+0x3812002c]
  4257f6:	pushf  
  4257f7:	inc    DWORD PTR [ebx+0xffb848]
  4257fd:	add    edi,edi
  4257ff:	add    bh,bh
  425801:	inc    edx
  425802:	sub    DWORD PTR [eax],eax
  425804:	inc    eax
  425805:	les    esp,FWORD PTR [eax+0x5c67cc00]
  42580b:	add    bh,bh
  42580d:	out    dx,eax
  42580e:	add    DWORD PTR [eax],0xffffffff
  425811:	repnz mov ds:0x327ae8ff,eax
  425817:	int3   
  425818:	dec    DWORD PTR [edi+0x77]
  42581b:	(bad)  
  42581c:	dec    DWORD PTR [ebx-0x1]
  42581f:	(bad)  
  425820:	jmp    esi
  425822:	(bad)  
  425824:	sahf   
  425825:	mov    eax,0x77ff0077
  42582a:	inc    DWORD PTR [eax]
  42582c:	add    al,bh
  42582e:	dec    esp
  425830:	int3   
  425831:	dec    edx
  425832:	pop    es
  425833:	add    BYTE PTR [ebx+0x25],bh
  425836:	mov    ecx,0x8e0f8300
  42583b:	int3   
  42583c:	add    BYTE PTR [edx+0x6e83ffff],bh
  425842:	jnp    0x4257c7
  425844:	add    eax,0xff8914e3
  425849:	jb     0x425849
  42584b:	inc    DWORD PTR [eax]
  42584d:	pop    ecx
  42584e:	(bad)  
  42584f:	inc    DWORD PTR [ebx+0x4affd9f6]
  425855:	sbb    DWORD PTR [eax],edi
  425857:	inc    DWORD PTR [eax]
  425859:	leave  
  42585a:	xor    cl,BYTE PTR [ecx-0x334700]
  425860:	and    DWORD PTR [eax+0x1c],0xffffffff
  425864:	mov    eax,0xffff61f7
  425869:	retf   0xff98
  42586c:	add    BYTE PTR [ebp-0x7d],bh
  42586f:	dec    esp
  425871:	js     0x4258b5
  425873:	add    ah,bh
  425875:	leave  
  425876:	sub    edi,edi
  425878:	jmp    DWORD PTR [ecx+0x59]
  42587b:	or     esp,0xffffffa1
  42587e:	(bad)  
  42587f:	dec    esp
  425881:	in     al,dx
  425882:	data16 int3 
  425884:	ds inc eax
  425886:	stos   DWORD PTR es:[edi],eax
  425887:	add    bh,bh
  425889:	cdq    
  42588a:	pop    edx
  42588b:	dec    DWORD PTR [ecx-0xff33af]
  425891:	xchg   ebp,eax
  425892:	lds    eax,FWORD PTR [eax]
  425894:	leave  
  425895:	xchg   BYTE PTR [ebp-0x7d],ah
  425898:	push   ecx
  42589a:	sti    
  42589b:	(bad)  
  42589c:	inc    ecx
  42589e:	(bad)  
  42589f:	inc    DWORD PTR [eax]
  4258a1:	cmp    edx,DWORD PTR [edx]
  4258a3:	inc    DWORD PTR [edx+ebp*1]
  4258a6:	push   edx
  4258a7:	dec    DWORD PTR [ecx+0x7d12]
  4258ad:	es (bad) 
  4258af:	inc    DWORD PTR [eax]
  4258b1:	fadd   st(3),st
  4258b3:	jmp    DWORD PTR [ecx]
  4258b5:	push   cs
  4258b6:	dec    edx
  4258b7:	inc    DWORD PTR [eax]
  4258b9:	std    
  4258ba:	xchg   esp,eax
  4258bb:	dec    esp
  4258bd:	mov    cl,0xff
  4258bf:	add    BYTE PTR [eax],al
  4258c1:	fimul  WORD PTR [ebp-0x1]
  4258c4:	test   al,0x87
  4258c6:	retf   0xffff
  4258c9:	int    0xb4
  4258cb:	add    BYTE PTR [ebx-0x760000ac],al
  4258d1:	mov    ds:0xca73ff7a,al
  4258d6:	fisttp WORD PTR [ecx-0x7c049f01]
  4258dc:	add    BYTE PTR [eax-0xb00007d],ah
  4258e2:	jbe    0x4258e3
  4258e4:	mov    bl,0xa9
  4258e6:	xlat   BYTE PTR ds:[ebx]
  4258e7:	inc    DWORD PTR [eax]
  4258e9:	mov    dl,0xfc
  4258eb:	add    DWORD PTR [eax],0x1d
  4258ee:	add    BYTE PTR [ecx-0x7cf46300],cl
  4258f4:	xor    DWORD PTR [edx],ecx
  4258f6:	add    BYTE PTR [eax],0xff
  4258f9:	pop    ecx
  4258fa:	jmp    0xffe359cb
  4258ff:	(bad)  
  425900:	call   DWORD PTR [eax+0x38]
  425903:	(bad)  
  425904:	clc    
  425905:	outs   dx,DWORD PTR ds:[esi]
  425906:	ret    
  425907:	add    DWORD PTR [eax],0x44
  42590a:	stc    
  42590b:	(bad)  
  42590c:	dec    DWORD PTR [eax+0x0]
  42590f:	dec    esp
  425911:	rcl    BYTE PTR [edx],1
  425913:	dec    edx
  425915:	mov    al,ds:0xc4ff00be
  42591a:	loopne 0x42591b
  42591c:	mov    ebp,ecx
  42591e:	(bad)  
  42591f:	inc    DWORD PTR [ebx-0x20ffdcdc]
  425925:	sbb    al,0x62
  425927:	(bad)  
  425928:	inc    edx
  42592a:	mov    al,0xff
  42592c:	jmp    FWORD PTR [eax+eax*1-0x7d]
  425930:	add    BYTE PTR [ebp-0x32],dh
  425933:	push   DWORD PTR [edi-0x5c]
  425936:	mov    edi,edi
  425938:	or     DWORD PTR [ebp-0x1e],0x0
  42593c:	or     edi,0xffffffff
  42593f:	mov    DWORD PTR [eax],eax
  425941:	push   esp
  425942:	cmp    bh,bh
  425944:	(bad)  
  425945:	and    edx,DWORD PTR [eax]
  425947:	inc    DWORD PTR [ebx-0x76ff0c44]
  42594d:	iret   
  42594e:	dec    esp
  425950:	call   FWORD PTR [ecx]
  425952:	and    eax,0xa8481d00
  425957:	add    DWORD PTR [ebx+0x8c0b],0x37
  42595e:	add    bh,bh
  425960:	dec    DWORD PTR [ecx-0x7bb733b6]
  425966:	mov    ebx,0xa8cc8900
  42596b:	dec    DWORD PTR [ecx+0xff50]
  425971:	push   cs
  425972:	mov    DWORD PTR [ebx+0x8c41e1],0xfff203ff
  42597c:	push   ecx
  42597e:	cmp    edi,0x0
  425981:	cmc    
  425982:	jno    0x425983
  425984:	test   DWORD PTR [edx-0x1000020],eax
  42598a:	clc    
  42598b:	(bad)  
  42598c:	jmp    FWORD PTR ds:0x7dff8900
  425992:	jmp    0xe1591196
  425997:	add    BYTE PTR [eax],al
  425999:	outs   dx,DWORD PTR ds:[esi]
  42599a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42599b:	inc    DWORD PTR [ebx+0xffff52]
  4259a1:	js     0x4259ad
  4259a3:	add    BYTE PTR [edx+0x7b],cl
  4259a6:	imul   edi,edi,0xff07c400
  4259ac:	sub    DWORD PTR [eax],0x0
  4259af:	add    bh,bh
  4259b1:	hlt    
  4259b2:	push   eax
  4259b3:	call   FWORD PTR [esi+edx*8+0x77]
  4259b7:	add    DWORD PTR [eax],0x46
  4259ba:	dec    edi
  4259bb:	int3   
  4259bc:	and    eax,0xffffffff
  4259bf:	add    BYTE PTR [eax],al
  4259c1:	leave  
  4259c2:	cmp    eax,DWORD PTR [ebx-0x3308235f]
  4259c8:	call   FWORD PTR [edx]
  4259ca:	mov    DWORD PTR [eax],0xffff08ff
  4259d0:	add    cl,ah
  4259d2:	in     al,0xff
  4259d4:	jns    0x425a39
  4259d6:	imul   eax,DWORD PTR [eax],0x832a73ff
  4259dc:	add    BYTE PTR ds:0x8f00ff00,cl
  4259e2:	cmp    edi,0x5b2e76
  4259e8:	add    BYTE PTR [edx],bl
  4259ea:	and    DWORD PTR [eax],eax
  4259ec:	call   DWORD PTR [edi]
  4259ee:	(bad)  
  4259ef:	(bad)  
  4259f0:	call   DWORD PTR [esi+eax*8+0x3749f600]
  4259f7:	inc    DWORD PTR [eax]
  4259f9:	in     al,0xec
  4259fb:	add    BYTE PTR [ebx-0xffff97],al
  425a01:	neg    DWORD PTR [edi+edi*8]
  425a04:	lahf   
  425a05:	ss stos BYTE PTR es:[edi],al
  425a07:	(bad)  
  425a08:	(bad)  
  425a09:	stc    
  425a0a:	aad    0xff
  425a0c:	add    DWORD PTR [eax],0xffffff83
  425a0f:	int3   
  425a10:	mov    esi,esp
  425a12:	lahf   
  425a13:	call   FWORD PTR [edi]
  425a15:	jno    0x425a92
  425a17:	add    bh,bh
  425a19:	sbb    al,0x87
  425a1b:	add    BYTE PTR [eax],al
  425a1d:	int    0xff
  425a1f:	(bad)  
  425a20:	call   FWORD PTR [ebp+eiz*1-0x7d]
  425a24:	add    al,0x9
  425a26:	inc    edi
  425a27:	add    bh,bh
  425a29:	cdq    
  425a2a:	ins    BYTE PTR es:[edi],dx
  425a2b:	add    BYTE PTR [ebx-0x760000e1],al
  425a31:	jb     0x425a3e
  425a33:	(bad)  
  425a34:	fcmovu st,st(6)
  425a36:	add    BYTE PTR [eax],0x89
  425a39:	icebp  
  425a3a:	outs   dx,BYTE PTR ds:[esi]
  425a3b:	(bad)  
  425a3c:	jmp    FWORD PTR [esi-0x1]
  425a3f:	mov    DWORD PTR [eax],eax
  425a41:	xchg   BYTE PTR [edi+0x6f9b7083],bh
  425a47:	dec    esp
  425a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a4a:	cmp    al,0x0
  425a4c:	inc    DWORD PTR [ebx+0x0]
  425a4f:	add    BYTE PTR [eax],al
  425a51:	retf   
  425a52:	xor    al,0x0
  425a54:	dec    ebp
  425a55:	sbb    cl,BYTE PTR [ebx+eax*4-0xe9be01]
  425a5c:	sub    eax,0x0
  425a5f:	(bad)  
  425a60:	call   FWORD PTR [ecx+0xaca83b2]
  425a66:	pushf  
  425a67:	inc    DWORD PTR [eax]
  425a69:	push   es
  425a6a:	aaa    
  425a6b:	dec    esp
  425a6d:	pop    edi
  425a6e:	inc    DWORD PTR [ebx-0xc82000]
  425a74:	mov    al,ds:0x89ffeb6f
  425a79:	pop    edi
  425a7a:	mov    BYTE PTR [eax],0xcc
  425a7d:	pusha  
  425a7e:	cmp    edi,0xffffffff
  425a81:	cs fdiv st(7),st
  425a84:	xchg   ebp,eax
  425a85:	into   
  425a86:	sahf   
  425a87:	cmp    edi,0x6
  425a8a:	add    DWORD PTR [ebx-0x7c002100],0xffe209ff
  425a94:	mov    WORD PTR [edi-0x1d00003c],es
  425a9a:	cmp    edi,edi
  425a9c:	call   FWORD PTR [edi-0x77]
  425a9f:	or     esp,0xffffff82
  425aa2:	push   ebx
  425aa3:	add    BYTE PTR [eax+edx*2-0x6f7cff6a],bh
  425aaa:	leave  
  425aab:	add    bh,bh
  425aad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aae:	mov    edi,edi
  425ab0:	add    BYTE PTR [edi],ah
  425ab2:	cli    
  425ab3:	jmp    ecx
  425ab5:	(bad)  
  425ab6:	fdiv   st(7),st
  425ab8:	inc    DWORD PTR [ebx+0x7b]
  425abb:	inc    DWORD PTR [eax]
  425abd:	jns    0x425abe
  425abf:	dec    DWORD PTR [ecx-0x60057ba]
  425ac5:	mov    ch,0x35
  425ac7:	dec    DWORD PTR [ecx+0xffed35]
  425acd:	cmp    bh,bh
  425acf:	add    BYTE PTR [ecx+0x30ff9592],cl
  425ad5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ad6:	dec    eax
  425ad7:	inc    DWORD PTR [eax]
  425ad9:	stc    
  425ada:	cmp    edi,edi
  425adc:	call   DWORD PTR [ebx-0x7d]
  425adf:	(bad)  
  425ae0:	inc    DWORD PTR [ecx-0x2c3000de]
  425ae6:	in     al,0x0
  425ae8:	add    BYTE PTR [edi-0x15],dh
  425aeb:	dec    esp
  425aed:	inc    ebx
  425aee:	inc    DWORD PTR [eax]
  425af0:	xor    eax,0x73
  425af3:	add    BYTE PTR [esi],dl
  425af5:	inc    esi
  425af6:	lock add BYTE PTR [ebx-0xff6425],al
  425afd:	mov    dh,0xff
  425aff:	add    DWORD PTR [eax],0x2a
  425b02:	lods   al,BYTE PTR ds:[esi]
  425b03:	inc    DWORD PTR ds:0xffff6cd3
  425b09:	xchg   edx,eax
  425b0a:	in     al,0x0
  425b0c:	int3   
  425b0d:	rol    BYTE PTR [ebx+0x175aff83],1
  425b13:	dec    DWORD PTR [edx-0x7cff28ea]
  425b19:	adc    DWORD PTR [eax],esi
  425b1b:	int3   
  425b1c:	add    BYTE PTR [ebp-0x6e00ff01],al
  425b22:	ins    DWORD PTR es:[edi],dx
  425b23:	add    BYTE PTR [edi-0x33334667],ch
  425b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b2a:	loope  0x425b2c
  425b2c:	add    BYTE PTR [eax],bh
  425b2e:	inc    DWORD PTR [eax]
  425b30:	mov    DWORD PTR [eax+0x62],edx
  425b33:	(bad)  
  425b34:	(bad)  
  425b36:	sub    DWORD PTR [ecx-0xef0f01],ecx
  425b3c:	add    BYTE PTR [edi],dl
  425b3e:	add    bh,bh
  425b40:	add    BYTE PTR [ecx],dl
  425b42:	push   ecx
  425b43:	call   DWORD PTR [ecx+0x36]
  425b46:	arpl   WORD PTR [ebx+0x6b5283],ax
  425b4c:	add    BYTE PTR [ecx],dl
  425b4e:	(bad)  
  425b4f:	(bad)  
  425b50:	call   DWORD PTR [ebx]
  425b52:	clc    
  425b53:	call   FWORD PTR [ebx]
  425b55:	loope  0x425adf
  425b57:	int3   
  425b58:	inc    DWORD PTR [ebx]
  425b5a:	cdq    
  425b5b:	add    BYTE PTR [eax],al
  425b5d:	mov    edx,0x6e0000ff
  425b62:	or     eax,DWORD PTR [eax]
  425b64:	out    0x75,al
  425b66:	mov    ebx,0x528b89ff
  425b6b:	inc    DWORD PTR [ebx-0x760000ab]
  425b71:	in     al,dx
  425b72:	mov    al,0xcc
  425b74:	neg    DWORD PTR [ecx-0x4a00ff42]
  425b7a:	dec    edi
  425b7b:	add    BYTE PTR [eax],al
  425b7d:	pop    esi
  425b7e:	int3   
  425b7f:	int3   
  425b80:	jmp    DWORD PTR [edi+0x6900ffe1]
  425b86:	jge    0x425b0b
  425b88:	add    BYTE PTR [ebx+0x1400ff20],dl
  425b8e:	add    bh,bh
  425b90:	add    BYTE PTR [esi],dh
  425b92:	xchg   bh,bh
  425b94:	jmp    0x141798d
  425b99:	xchg   ebp,eax
  425b9a:	xor    BYTE PTR [ebx+0x8366cc],al
  425ba0:	add    BYTE PTR [esp+ecx*2],dl
  425ba3:	jmp    DWORD PTR [esi]
  425ba5:	inc    esi
  425ba6:	stos   BYTE PTR es:[edi],al
  425ba7:	add    DWORD PTR [eax],0xffffffcc
  425baa:	sbb    bh,bh
  425bac:	dec    DWORD PTR [ebx-0x1]
  425baf:	mov    edi,edi
  425bb1:	xor    al,0x8c
  425bb3:	add    dl,bh
  425bb5:	or     cl,dl
  425bb7:	add    bh,bh
  425bb9:	cs out 0x89,eax
  425bbc:	and    DWORD PTR [edi-0x1],0xffffffcc
  425bc0:	cmp    DWORD PTR [ecx*1+0x32e21500],0xffffff89
  425bc8:	int3   
  425bc9:	sbb    DWORD PTR [esp+ecx*8-0x1],esi
  425bcd:	int    0x0
  425bcf:	add    BYTE PTR [eax],al
  425bd1:	pop    esp
  425bd2:	ja     0x425ba0
  425bd4:	outs   dx,DWORD PTR ds:[esi]
  425bd5:	test   BYTE PTR [edi],dh
  425bd7:	inc    DWORD PTR [ebx-0x7c7b2c]
  425bdd:	outs   dx,DWORD PTR ds:[esi]
  425bde:	inc    DWORD PTR [ebx-0x7c39d700]
  425be4:	aaa    
  425be5:	jbe    0x425c1d
  425be7:	(bad)  
  425be8:	jmp    DWORD PTR [ebx-0x6b]
  425beb:	(bad)  
  425bec:	call   DWORD PTR [ebx]
  425bee:	add    BYTE PTR [ecx-0x9c9601],cl
  425bf4:	test   al,0x6b
  425bf6:	jno    0x425bf7
  425bf8:	jmp    FWORD PTR ds:0xac830001
  425bfe:	(bad)  
  425bff:	(bad)  
  425c00:	inc    DWORD PTR [esp+eiz*8]
  425c03:	mov    DWORD PTR [edx],eax
  425c05:	and    cl,BYTE PTR [ebp+0x47f80000]
  425c0b:	(bad)  
  425c0c:	call   DWORD PTR [eax]
  425c0e:	inc    DWORD PTR [eax]
  425c10:	jmp    edi
  425c12:	xchg   ecx,eax
  425c13:	jmp    DWORD PTR [edx]
  425c15:	mov    esi,DWORD PTR [eax]
  425c17:	add    BYTE PTR [ecx-0x7cff5dae],cl
  425c1d:	rol    DWORD PTR [eax],0xff
  425c20:	add    ah,ah
  425c22:	dec    eax
  425c23:	add    BYTE PTR [ecx+ebx*4-0x1a7cff27],al
  425c2a:	add    bh,bh
  425c2c:	inc    DWORD PTR [eax+0x183ffff]
  425c32:	mov    ds:0xcb7aff00,eax
  425c37:	(bad)  
  425c38:	inc    esp
  425c3a:	das    
  425c3b:	add    BYTE PTR [eax],al
  425c3d:	mov    edi,0x3483ff83
  425c42:	(bad)  
  425c43:	mov    DWORD PTR [edx],edx
  425c45:	mov    fs,WORD PTR [eax+eax*1-0x7c691100]
  425c4c:	call   DWORD PTR [eax]
  425c4e:	(bad)  
  425c4f:	(bad)  
  425c50:	jmp    FWORD PTR [edx-0x297500d5]
  425c56:	jnp    0x425c58
  425c58:	inc    DWORD PTR [ebp-0x2c000012]
  425c5e:	inc    DWORD PTR [ebx-0x96be34]
  425c64:	inc    esp
  425c65:	add    eax,0xb1ff8387
  425c6a:	icebp  
  425c6b:	(bad)  
  425c6c:	dec    DWORD PTR [ecx-0x1]
  425c6f:	(bad)  
  425c70:	inc    DWORD PTR [edi+0x2dfaffa3]
  425c76:	sub    edi,edi
  425c78:	call   DWORD PTR [edx+0x31000091]
  425c7e:	add    BYTE PTR [eax],al
  425c80:	inc    DWORD PTR [edx]
  425c82:	inc    ebp
  425c83:	xor    DWORD PTR [esp+edi*1],0x50
  425c87:	inc    DWORD PTR [ebx+0xffd567]
  425c8d:	mov    eax,0x4483cc00
  425c92:	(bad)  
  425c93:	add    BYTE PTR [ebx],bl
  425c95:	popa   
  425c96:	(bad)  
  425c99:	js     0x425cf7
  425c9b:	inc    DWORD PTR [eax]
  425c9d:	jae    0x425c9e
  425c9f:	inc    DWORD PTR [eax]
  425ca1:	in     eax,dx
  425ca2:	xchg   edi,edi
  425ca4:	sbb    ah,BYTE PTR [esi-0x41ffff3f]
  425caa:	xor    edi,edi
  425cac:	int3   
  425cad:	push   ds
  425cae:	add    BYTE PTR [eax],al
  425cb0:	(bad)  
  425cb1:	ds (bad) 
  425cb3:	(bad)  
  425cb4:	jle    0x425d00
  425cb6:	adc    al,0xcc
  425cb8:	call   DWORD PTR [eax+0x6]
  425cbb:	add    DWORD PTR [eax],0xffffffb0
  425cbe:	add    ah,cl
  425cc0:	add    BYTE PTR [ecx+0x6acc899d],ch
  425cc6:	or     edi,edi
  425cc8:	push   DWORD PTR [eax]
  425cca:	push   edi
  425ccb:	add    bh,bh
  425ccd:	jle    0x425c58
  425ccf:	(bad)  
  425cd0:	inc    DWORD PTR [ebx]
  425cd2:	clc    
  425cd3:	int3   
  425cd4:	push   ebx
  425cd5:	jmp    0xff26:0x9389838e
  425cdc:	mov    DWORD PTR [ecx],eax
  425cde:	mov    edi,edi
  425ce0:	push   DWORD PTR [ebx+0x37]
  425ce3:	call   edi
  425ce5:	shl    BYTE PTR [eax+0x53500ff],cl
  425ceb:	add    bh,bh
  425ced:	out    dx,eax
  425cee:	add    bh,bh
  425cf0:	and    DWORD PTR [eax-0x7777004b],0x2c
  425cf7:	int3   
  425cf8:	add    BYTE PTR [ebx+0x65],bh
  425cfb:	mov    edi,edi
  425cfd:	les    ecx,FWORD PTR [ecx-0x7cae0001]
  425d03:	push   DWORD PTR [edx]
  425d05:	in     al,dx
  425d06:	iret   
  425d07:	add    BYTE PTR [eax],al
  425d09:	fcomp  DWORD PTR [ebx]
  425d0b:	add    bh,bh
  425d0d:	call   0xff5a:0x450000ff
  425d14:	retf   0x9677
  425d17:	add    bh,bh
  425d19:	mov    ch,0x9d
  425d1b:	dec    esp
  425d1d:	(bad)  
  425d1e:	(bad)  
  425d1f:	inc    DWORD PTR [eax]
  425d21:	inc    ebp
  425d22:	inc    esp
  425d23:	add    ebp,0xffffff99
  425d26:	mov    DWORD PTR [ecx-0x3305c300],ecx
  425d2c:	add    dh,al
  425d2e:	add    BYTE PTR [ebx+0x91aff],al
  425d34:	test   BYTE PTR [edi],0xcc
  425d37:	add    ah,cl
  425d39:	xlat   BYTE PTR ds:[ebx]
  425d3a:	xchg   esi,eax
  425d3b:	inc    DWORD PTR [eax]
  425d3d:	daa    
  425d3e:	add    ah,cl
  425d40:	add    BYTE PTR [ebx+ebp*4+0x7d9c1b00],ah
  425d47:	inc    DWORD PTR [ebx-0x3300dd1b]
  425d4d:	data16 add BYTE PTR [eax],al
  425d50:	adc    DWORD PTR [edx-0x64],0xffffffcc
  425d54:	adc    BYTE PTR ds:0xc889ff65,dl
  425d5a:	jae    0x425d28
  425d5c:	add    BYTE PTR [ecx],dh
  425d5e:	inc    DWORD PTR [eax]
  425d60:	(bad)  
  425d61:	fstp   TBYTE PTR [ebx]
  425d63:	sub    DWORD PTR [edx],0x5d
  425d66:	das    
  425d67:	(bad)  
  425d68:	inc    DWORD PTR [ebp+0x6b]
  425d6b:	int3   
  425d6c:	inc    DWORD PTR [ebx-0x6b007d00]
  425d72:	mov    edi,0x958902ff
  425d77:	add    bh,bh
  425d79:	jge    0x425da7
  425d7b:	add    bh,bh
  425d7d:	outs   dx,DWORD PTR ds:[esi]
  425d7e:	inc    DWORD PTR [ebx-0x7674ce01]
  425d84:	not    DWORD PTR [esi+eiz*8-0x466e7d00]
  425d8b:	add    BYTE PTR [eax],al
  425d8d:	rol    DWORD PTR [eax],1
  425d8f:	int3   
  425d90:	(bad)  
  425d91:	cmp    ecx,DWORD PTR [ebp-0x34]
  425d94:	xchg   edx,eax
  425d95:	inc    esp
  425d96:	loopne 0x425d64
  425d98:	or     DWORD PTR [esi+0x1483000c],0xffffffcc
  425d9f:	inc    DWORD PTR [eax]
  425da1:	lods   eax,DWORD PTR ds:[esi]
  425da2:	repz call DWORD PTR [edi+0x45df]
  425da9:	in     al,dx
  425daa:	push   edi
  425dab:	add    bh,bh
  425dad:	add    DWORD PTR [eax],0xffffff83
  425db0:	dec    edi
  425db2:	xlat   BYTE PTR ds:[ebx]
  425db3:	add    BYTE PTR [edx+0xd1c0],dl
  425db9:	sbb    DWORD PTR [ecx-0x1],ebx
  425dbc:	add    BYTE PTR [edx],bl
  425dbe:	int3   
  425dbf:	(bad)  
  425dc0:	inc    DWORD PTR [ebx]
  425dc2:	dec    esp
  425dc4:	and    eax,0xffccf75c
  425dc9:	stc    
  425dca:	pop    ebx
  425dcb:	(bad)  
  425dcc:	push   DWORD PTR [edi-0x1]
  425dcf:	add    BYTE PTR [eax],al
  425dd1:	jns    0x425d91
  425dd3:	add    DWORD PTR [edi+edx*2+0x40],0x0
  425dd8:	jmp    FWORD PTR [eax+0x14]
  425ddb:	add    BYTE PTR [eax],al
  425ddd:	inc    edi
  425dde:	add    BYTE PTR [eax],al
  425de0:	add    al,ah
  425de2:	enter  0x54ff,0xb7
  425de6:	in     al,dx
  425de7:	add    BYTE PTR [eax],al
  425de9:	mov    ebp,0xf0890003
  425dee:	(bad)  
  425def:	(bad)  
  425df0:	dec    DWORD PTR [eax]
  425df2:	in     al,dx
  425df3:	(bad)  
  425df4:	stc    
  425df5:	adc    cl,bl
  425df7:	add    DWORD PTR [eax],0x42
  425dfa:	jmp    0x425dc8
  425dfc:	sub    DWORD PTR [ebp-0x7d],0x0
  425e00:	inc    DWORD PTR [ebx]
  425e02:	into   
  425e03:	add    BYTE PTR [edi-0x61],ch
  425e06:	xchg   bh,bh
  425e08:	add    BYTE PTR [ecx+0x11ff002e],cl
  425e0e:	add    BYTE PTR [eax],al
  425e10:	mov    DWORD PTR [edx+0x2f0e0067],esi
  425e16:	mov    al,ds:0xd654ffff
  425e1b:	int3   
  425e1c:	jmp    FWORD PTR [ebp-0x1]
  425e1f:	or     esp,0xfffffffc
  425e22:	inc    eax
  425e23:	(bad)  
  425e24:	fnstenv [edx+0x5a]
  425e27:	(bad)  
  425e28:	jmp    DWORD PTR [ecx+0x1d00835d]
  425e2e:	add    DWORD PTR [ebx-0x7d7734],0xffffff94
  425e35:	rol    DWORD PTR [edi+0x3befff83],cl
  425e3b:	int3   
  425e3c:	xor    DWORD PTR [ebx+0x5ff0089],0xffffffaf
  425e43:	add    BYTE PTR [edi],dh
  425e45:	aas    
  425e46:	ins    BYTE PTR es:[edi],dx
  425e47:	(bad)  
  425e48:	dec    DWORD PTR [eax]
  425e4a:	mov    ch,0xff
  425e4c:	xor    DWORD PTR [ecx+0x7e8300ff],0x5b
  425e53:	add    BYTE PTR [esi],al
  425e55:	js     0x425dda
  425e57:	add    bh,bh
  425e59:	fwait
  425e5a:	je     0x425e5c
  425e5c:	call   FWORD PTR [edx-0x1]
  425e5f:	inc    DWORD PTR [eax]
  425e61:	xlat   BYTE PTR gs:[ebx]
  425e63:	jmp    FWORD PTR [edi+0x67]
  425e66:	inc    WORD PTR [eax]
  425e69:	mov    al,ds:0x80ff837c
  425e6e:	dec    DWORD PTR [ecx+0xcf6683]
  425e74:	ins    BYTE PTR es:[edi],dx
  425e75:	(bad)  
  425e76:	rol    BYTE PTR [eax],cl
  425e78:	call   DWORD PTR [ecx-0x4433fff9]
  425e7e:	inc    DWORD PTR [eax]
  425e80:	add    BYTE PTR ds:0x87e48378,dh
  425e86:	cmp    bh,0xff
  425e89:	adc    BYTE PTR [eax+0xc28900],ch
  425e8f:	add    BYTE PTR [eax],al
  425e91:	and    al,0x24
  425e93:	add    BYTE PTR [ebp+0xffb647],bh
  425e99:	inc    esi
  425e9a:	xchg   esp,eax
  425e9b:	mov    DWORD PTR [eax],eax
  425e9d:	pop    ebx
  425e9e:	cmp    edi,0x0
  425ea1:	inc    ebp
  425ea2:	(bad)  
  425ea3:	(bad)  
  425ea4:	sti    
  425ea5:	repz je 0x425ea7
  425ea8:	sbb    DWORD PTR [ebx-0x2f],0xffffff83
  425eac:	or     DWORD PTR [ebp-0x1],0xffffffff
  425eb0:	add    al,bh
  425eb2:	cmp    eax,DWORD PTR [ebx-0xc1fdab]
  425eb8:	adc    esp,0xffffffdf
  425ebb:	(bad)  
  425ebc:	push   DWORD PTR [eax+eax*1-0x6ae67601]
  425ec3:	(bad)  
  425ec4:	jle    0x425e6c
  425ec6:	or     ah,0x83
  425ec9:	test   ch,0xff
  425ecc:	(bad)  
  425ecd:	cmp    bh,bh
  425ecf:	inc    DWORD PTR [eax]
  425ed1:	aam    0xc7
  425ed3:	jmp    ebp
  425ed5:	mov    ds:0xd3ffff21,al
  425eda:	mov    esp,0x2b8383
  425edf:	int3   
  425ee0:	jmp    DWORD PTR [esi-0x3b02ff6c]
  425ee6:	add    BYTE PTR [eax],al
  425ee8:	mov    DWORD PTR [ebp-0x267c0063],ebp
  425eee:	(bad)  
  425eef:	(bad)  
  425ef0:	jmp    edx
  425ef2:	add    BYTE PTR fs:[edi-0x3e],ch
  425ef6:	mov    eax,DWORD PTR [eax]
  425ef8:	add    BYTE PTR [eax],dh
  425efa:	pop    edx
  425efb:	inc    DWORD PTR [ebx-0x33ff0076]
  425f01:	aaa    
  425f02:	(bad)  
  425f03:	call   DWORD PTR [edi]
  425f05:	push   0x5c
  425f07:	(bad)  
  425f08:	push   esi
  425f0a:	out    0xff,al
  425f0c:	call   DWORD PTR [eax]
  425f0e:	mov    edi,edi
  425f10:	dec    DWORD PTR [esi+esi*4+0x563a100]
  425f17:	inc    DWORD PTR [ebx-0xc917]
  425f1d:	cld    
  425f1e:	cmp    edi,0x0
  425f21:	mov    ecx,0xf66dcc8f
  425f26:	sbb    BYTE PTR [eax],al
  425f28:	dec    DWORD PTR ds:0xeeff8966
  425f2e:	add    bh,bh
  425f30:	call   DWORD PTR [ebx+0x21]
  425f33:	call   FWORD PTR [ecx-0xffbce5]
  425f39:	jge    0x425f45
  425f3b:	(bad)  
  425f3c:	(bad)  
  425f3d:	in     al,dx
  425f3e:	inc    DWORD PTR [ebx+0x7acd89]
  425f44:	lock out dx,eax
  425f46:	inc    WORD PTR [eax]
  425f49:	rcl    DWORD PTR [esi-0x6f7c34],cl
  425f4f:	inc    DWORD PTR [eax]
  425f51:	rol    DWORD PTR [esi],0x0
  425f54:	js     0x425f4c
  425f56:	add    bh,bh
  425f58:	call   DWORD PTR [esi+0x4683ff67]
  425f5e:	add    bh,bh
  425f60:	or     DWORD PTR [esp+edx*4],0xffffff89
  425f64:	iret   
  425f65:	fwait
  425f66:	dec    ebx
  425f67:	dec    esp
  425f69:	push   0x9689ff65
  425f6e:	add    ah,cl
  425f70:	jmp    DWORD PTR [ecx]
  425f72:	sbb    DWORD PTR fs:[ecx+0x3e],0xffffffd3
  425f77:	inc    DWORD PTR [eax]
  425f79:	mov    ds:0xf183002c,eax
  425f7e:	(bad)  
  425f7f:	inc    DWORD PTR [eax]
  425f81:	pop    ebx
  425f82:	adc    eax,0x4efa2eff
  425f87:	int3   
  425f88:	(bad)  
  425f89:	in     eax,dx
  425f8a:	add    BYTE PTR [ebx+0xfa83],0x0
  425f91:	jg     0x425f5f
  425f93:	mov    DWORD PTR [esi-0xff205f],esi
  425f99:	sbb    ch,bh
  425f9b:	add    BYTE PTR [eax],al
  425f9d:	sub    BYTE PTR [ebx+0x128cff00],al
  425fa3:	add    BYTE PTR [esi+0xffbe68],bl
  425fa9:	test   DWORD PTR [esi],ebp
  425fab:	int3   
  425fac:	add    BYTE PTR [edi],dl
  425fae:	int3   
  425faf:	(bad)  
  425fb0:	call   DWORD PTR [ecx+0x11]
  425fb3:	adc    DWORD PTR [edx-0xfc77],0xffffffb1
  425fba:	cmc    
  425fbb:	add    bh,bh
  425fbd:	das    
  425fbe:	(bad)  
  425fbf:	(bad)  
  425fc0:	dec    DWORD PTR [edi+ebx*8]
  425fc3:	add    BYTE PTR ds:0xffffa9a9,al
  425fc9:	int3   
  425fca:	mov    esi,0xfffa0000
  425fcf:	cmp    edi,0x33
  425fd2:	adc    BYTE PTR [eax],al
  425fd4:	clc    
  425fd5:	inc    esi
  425fd6:	leave  
  425fd7:	(bad)  
  425fd8:	call   DWORD PTR [edx+0x5a]
  425fdb:	dec    DWORD PTR [ecx-0x760000d1]
  425fe1:	push   es
  425fe2:	loope  0x425fe4
  425fe4:	fld    TBYTE PTR [esi+0x40]
  425fe7:	mov    esp,ecx
  425fe9:	sbb    DWORD PTR [ebp+0xd20083],esp
  425fef:	inc    DWORD PTR [ebx+0x5a00436d]
  425ff5:	pop    esi
  425ff6:	xchg   ebp,eax
  425ff7:	add    ah,cl
  425ff9:	cmp    esi,DWORD PTR [esi]
  425ffb:	inc    DWORD PTR [eax]
  425ffd:	pop    ebx
  425ffe:	inc    DWORD PTR [eax]
  426000:	xor    DWORD PTR [esi],0xffffff9c
  426003:	cmp    DWORD PTR [ecx+0x836aba],0x12
  42600a:	adc    eax,0x832f00ff
  42600f:	(bad)  
  426010:	jmp    DWORD PTR [ecx*4-0x5beb8b00]
  426017:	(bad)  
  426018:	(bad)  
  426019:	mov    edx,0xf700cc88
  42601e:	dec    DWORD PTR [ecx+0x61f700]
  426024:	gs mov esp,0x7e83ff56
  42602a:	push   eax
  42602b:	mov    DWORD PTR [eax],eax
  42602d:	or     eax,0xbd00ff83
  426032:	adc    DWORD PTR [eax],eax
  426034:	(bad)  
  426035:	cmp    al,0x24
  426037:	inc    DWORD PTR [eax]
  426039:	mov    eax,ds:0x1acc0020
  42603e:	or     esp,0x0
  426041:	out    dx,al
  426042:	(bad)  [ecx-0x7c55befd]
  426048:	add    BYTE PTR [eax+0x30],dh
  42604b:	(bad)  
  42604c:	dec    ebx
  42604e:	inc    DWORD PTR [eax]
  426050:	mov    DWORD PTR [edi+0x3656ffe9],ebx
  426056:	and    ah,cl
  426058:	inc    DWORD PTR [esi+esi*8+0xf00083]
  42605f:	inc    DWORD PTR [eax]
  426061:	out    dx,al
  426062:	loopne 0x425fed
  426064:	xor    BYTE PTR [ebx-0x5d],0xff
  426068:	add    BYTE PTR [ebp+0x1583ff70],dh
  42606e:	inc    DWORD PTR [eax]
  426070:	add    DWORD PTR [edi-0x18],0x0
  426074:	push   edi
  426075:	retf   
  426076:	pop    ss
  426077:	(bad)  
  426078:	call   DWORD PTR [edx-0x8]
  42607b:	(bad)  
  42607c:	dec    DWORD PTR [ebx+eax*4]
  42607f:	mov    DWORD PTR [ebx+0x28ffd9fa],eax
  426085:	inc    ebp
  426086:	pop    eax
  426087:	(bad)  
  426088:	inc    DWORD PTR [ebx]
  42608a:	int    0x83
  42608c:	jmp    FWORD PTR [eax-0x7d]
  42608f:	add    BYTE PTR [ebx-0x51ffed3a],al
  426095:	add    ebx,DWORD PTR [esi+0x2d8a00cc]
  42609b:	mov    esp,ecx
  42609d:	adc    eax,0x65ffff83
  4260a2:	jle    0x4260a3
  4260a4:	sbb    DWORD PTR [ecx],esi
  4260a6:	xor    edi,edi
  4260a8:	push   DWORD PTR [edi]
  4260aa:	in     al,0xcc
  4260ac:	int3   
  4260ad:	cmp    edi,edi
  4260af:	add    BYTE PTR [eax],al
  4260b1:	dec    esp
  4260b2:	push   ebp
  4260b3:	int3   
  4260b4:	cmp    dl,al
  4260b6:	xchg   ebx,eax
  4260b7:	(bad)  
  4260b8:	inc    DWORD PTR [ebx+0x5dffff43]
  4260be:	or     DWORD PTR [ecx-0xee6200],0x59
  4260c5:	in     eax,0xc6
  4260c7:	dec    esp
  4260c9:	fcomp  st(4)
  4260cb:	mov    DWORD PTR [eax],eax
  4260cd:	push   ebx
  4260ce:	add    bh,bh
  4260d0:	add    BYTE PTR [esi+ebx*2],bl
  4260d3:	add    cl,dh
  4260d5:	das    
  4260d6:	jmp    0x8900:0xfc83ff00
  4260dd:	cdq    
  4260de:	cmp    edi,0xffffff89
  4260e1:	loop   0x426080
  4260e3:	jmp    DWORD PTR [esi-0x8a73]
  4260e9:	(bad)  
  4260ea:	pusha  
  4260eb:	dec    esp
  4260ed:	pop    eax
  4260ee:	inc    DWORD PTR [eax]
  4260f0:	or     DWORD PTR [ebp-0x3d],0xffffff83
  4260f4:	sub    eax,0xff0038b0
  4260f9:	xor    edi,DWORD PTR [ecx]
  4260fb:	add    DWORD PTR [eax],0x17
  4260fe:	(bad)  
  4260ff:	inc    DWORD PTR [eax]
  426101:	xor    ecx,DWORD PTR [edi-0x7d]
  426104:	mov    ds:0xffffc04a,eax
  426109:	ss inc eax
  42610b:	inc    DWORD PTR [ebx+0x8900e6]
  426111:	fwait
  426112:	mov    cl,0xff
  426114:	mov    ds:0xcc835056,eax
  426119:	push   0xc689ff03
  42611e:	inc    DWORD PTR [ebx-0x9d6101]
  426124:	adc    al,0x11
  426126:	add    bh,bh
  426128:	(bad)  
  426129:	jg     0x426106
  42612b:	cmp    edi,0xffffffbe
  42612e:	add    BYTE PTR [ecx-0xadb301],cl
  426134:	inc    ebp
  426135:	sbb    DWORD PTR [esi],eax
  426137:	cmp    edi,0xffffff87
  42613a:	inc    DWORD PTR [bp+di-0x31]
  42613f:	(bad)  
  426140:	call   DWORD PTR [ecx+edi*1-0x34]
  426144:	fbstp  TBYTE PTR [eax]
  426146:	dec    edi
  426147:	add    ah,cl
  426149:	mov    eax,ds:0xdff009a
  42614e:	add    BYTE PTR [ebx-0x7656ec00],al
  426154:	xchg   ebp,eax
  426155:	jb     0x4261b0
  426157:	inc    DWORD PTR [eax]
  426159:	push   0xdb890073
  42615e:	cmp    edi,0xffffffff
  426161:	or     edx,DWORD PTR [ecx]
  426163:	sbb    DWORD PTR [edi-0xde8b],0x1d
  42616a:	pop    ebp
  42616b:	add    BYTE PTR [ebx+0xff002c],al
  426171:	dec    ecx
  426172:	pop    ss
  426173:	mov    DWORD PTR [esi],edi
  426175:	pop    es
  426176:	adc    edi,edi
  426178:	int3   
  426179:	fimul  WORD PTR [esi+0x0]
  42617c:	call   FWORD PTR [esi-0x7d]
  42617f:	(bad)  
  426180:	dec    esi
  426182:	das    
  426183:	call   FWORD PTR ds:0xffaed4
  426189:	out    dx,eax
  42618a:	test   al,0xff
  42618c:	jmp    DWORD PTR [eax+0x0]
  42618f:	(bad)  
  426190:	jmp    FWORD PTR [eax-0x7b]
  426193:	inc    DWORD PTR [esi]
  426195:	jl     0x426203
  426197:	add    BYTE PTR [eax],al
  426199:	mov    al,0x8c
  42619b:	add    bh,bh
  42619d:	or     edi,edi
  42619f:	add    BYTE PTR [ebx-0x5b333813],al
  4261a5:	enter  0xff24,0xff
  4261a9:	jae    0x426207
  4261ab:	int3   
  4261ac:	inc    edx
  4261ae:	inc    DWORD PTR [eax]
  4261b0:	jmp    FWORD PTR [ebx+ebp*8-0x1]
  4261b4:	inc    esi
  4261b5:	test   BYTE PTR [ebp+0x679f8900],dh
  4261bb:	inc    DWORD PTR [ebx-0x763300a5]
  4261c1:	shl    ch,cl
  4261c3:	inc    DWORD PTR [esi-0x4e]
  4261c6:	clc    
  4261c7:	int3   
  4261c8:	add    al,bh
  4261ca:	clc    
  4261cb:	(bad)  
  4261cc:	call   FWORD PTR [ecx+0x6000ffff]
  4261d2:	mov    esp,0xcd418200
  4261d7:	add    DWORD PTR [eax],0x4a
  4261da:	add    eax,DWORD PTR [ebx-0x33007877]
  4261e0:	jmp    FWORD PTR [ecx+0x2689ffaf]
  4261e6:	retf   0xff00
  4261e9:	cdq    
  4261ea:	loope  0x4261eb
  4261ec:	add    dl,cl
  4261ee:	mov    DWORD PTR [ebx+0xe0589],eax
  4261f4:	xor    eax,0x8389653d
  4261f9:	data16 (bad) 
  4261fc:	jmp    DWORD PTR [eax]
  4261fe:	add    BYTE PTR [eax],al
  426200:	sbb    DWORD PTR [eax],0x5c
  426203:	jmp    esp
  426205:	lods   eax,DWORD PTR ds:[esi]
  426206:	fmul   st(4),st
  426208:	add    dl,ch
  42620a:	mov    ecx,DWORD PTR [ecx-0x7c7c3a7d]
  426210:	add    BYTE PTR [edi-0x45],bl
  426213:	sbb    DWORD PTR [edx-0xff72e0],0x6f
  42621a:	or     DWORD PTR [eax],eax
  42621c:	call   FWORD PTR [edx-0x6300ff77]
  426222:	jnp    0x426224
  426224:	mov    al,ds:0xff00cfc9
  426229:	and    ch,BYTE PTR [esi]
  42622b:	mov    DWORD PTR [eax],eax
  42622d:	add    DWORD PTR ds:[ebx-0x6d0400],0xffffff9d
  426235:	js     0x426201
  426237:	int3   
  426238:	add    DWORD PTR [ebx+esi*8-0x7d],0xffffffff
  42623d:	cdq    
  42623e:	add    BYTE PTR [eax],al
  426240:	add    BYTE PTR [edx+0xebaffa5],ah
  426246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426247:	(bad)  
  426248:	(bad)  
  426249:	jg     0x4261ee
  42624b:	mov    DWORD PTR [ecx+0xff07],ecx
  426251:	or     edi,DWORD PTR [esi-0x1]
  426254:	inc    edi
  426255:	mov    ah,0x7e
  426257:	dec    esp
  426259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42625a:	jne    0x4261df
  42625c:	int3   
  42625d:	mov    bh,0x0
  42625f:	mov    DWORD PTR [ecx-0x53337cea],ecx
  426265:	mov    dl,0x91
  426267:	add    bh,bh
  426269:	je     0x42626a
  42626b:	dec    esp
  42626d:	leave  
  42626e:	inc    DWORD PTR [eax]
  426270:	add    BYTE PTR [ecx+0x9],dl
  426273:	add    BYTE PTR [ecx],ch
  426275:	arpl   WORD PTR [ebp+0x7d2ff89],bp
  42627b:	inc    DWORD PTR [ebx-0x7c3371]
  426281:	in     al,dx
  426282:	adc    edi,edi
  426284:	jo     0x426299
  426286:	(bad)  
  426288:	jmp    FWORD PTR [esi]
  42628a:	mov    eax,ds:0x7600ff
  42628f:	inc    DWORD PTR [eax]
  426291:	test   BYTE PTR [ebp-0x7d],al
  426294:	xchg   edi,eax
  426295:	je     0x426266
  426297:	inc    DWORD PTR [eax]
  426299:	mov    DWORD PTR [ebx-0x693377],edi
  42629f:	cmp    edi,0x55
  4262a2:	pop    esi
  4262a3:	dec    DWORD PTR [ebp-0x7c00d5fd]
  4262a9:	out    0x41,al
  4262ab:	dec    esp
  4262ad:	mov    edi,0x1aff00ff
  4262b2:	jl     0x4262b3
  4262b4:	mov    gs,edi
  4262b6:	in     eax,dx
  4262b7:	cmp    edi,0x58
  4262ba:	push   edi
  4262bb:	add    BYTE PTR [ebx+0x832b],al
  4262c1:	loopne 0x4262e4
  4262c3:	xor    esi,0xd
  4262c6:	jno    0x4262c8
  4262c8:	inc    ecx
  4262ca:	into   
  4262cb:	cmp    edi,0xffffffac
  4262ce:	add    bh,bh
  4262d0:	(bad)  
  4262d1:	cli    
  4262d2:	ror    BYTE PTR [ecx+0x7b1ec5],1
  4262d8:	push   DWORD PTR [ebx+ebp*1]
  4262db:	(bad)  
  4262dc:	jmp    eax
  4262de:	add    bh,bh
  4262e0:	dec    DWORD PTR [ebp-0x232bff09]
  4262e6:	ds add bh,bh
  4262e9:	pop    ss
  4262ea:	cmp    BYTE PTR [ebx-0x7c107d],al
  4262f0:	xor    DWORD PTR [ecx-0x5f],0xffffffff
  4262f4:	xor    ebp,edx
  4262f6:	or     DWORD PTR gs:[ecx+0xff0334],0xffffffd8
  4262fe:	inc    DWORD PTR [eax]
  426300:	jmp    FWORD PTR [esi-0x13]
  426303:	dec    DWORD PTR [ebp-0x7cff13fc]
  426309:	jo     0x4262e3
  42630b:	inc    DWORD PTR [eax]
  42630d:	nop
  42630e:	(bad)  
  42630f:	inc    DWORD PTR [eax]
  426311:	pop    esp
  426312:	mov    eax,ds:0x6aa0300
  426317:	add    bh,bh
  426319:	mov    dh,0x11
  42631b:	(bad)  
  42631c:	jmp    FWORD PTR [ebx+0x0]
  42631f:	inc    DWORD PTR [ebx-0x2007e2c]
  426325:	call   0x8f4163b3
  42632a:	cdq    
  42632b:	inc    DWORD PTR [eax]
  42632d:	jmp    0xffd6:0xdeffccff
  426334:	cmp    esi,edx
  426336:	lods   al,BYTE PTR ds:[esi]
  426337:	add    DWORD PTR [ebx-0x97c9],0x1f
  42633e:	add    DWORD PTR [ebx-0x269934],0xffffffdd
  426345:	gs sbb esp,ecx
  426348:	int3   
  426349:	int    0x56
  42634b:	inc    DWORD PTR [eax]
  42634d:	jmp    0xffef:0xb289ffcc
  426354:	cmp    bl,BYTE PTR [edi+0x4300ff3a]
  42635a:	push   ss
  42635b:	int3   
  42635c:	(bad)  
  42635d:	cmp    cl,ah
  42635f:	int3   
  426360:	(bad)  
  426361:	jmp    0xef:0x9e958345
  426368:	add    BYTE PTR [ecx+0x4d],bl
  42636b:	dec    esp
  42636d:	dec    esi
  42636e:	inc    DWORD PTR [ebx-0x510801]
  426374:	clc    
  426375:	in     al,dx
  426376:	add    BYTE PTR ss:[ecx-0x7c7dad],cl
  42637d:	and    al,0xff
  42637f:	inc    DWORD PTR [eax]
  426381:	inc    esp
  426382:	mov    al,ds:0xf53e8c00
  426387:	add    bh,bh
  426389:	in     al,dx
  42638a:	and    edi,edi
  42638c:	mov    DWORD PTR [edx+0x0],esi
  42638f:	inc    DWORD PTR [eax]
  426391:	inc    esp
  426392:	jb     0x426317
  426394:	inc    ecx
  426395:	and    DWORD PTR [edi-0x4bf7d00],ecx
  42639b:	add    BYTE PTR [eax],al
  42639d:	mov    ebp,0xbf89ffcc
  4263a2:	add    edi,edi
  4263a4:	mov    ds:0xff0089a8,eax
  4263a9:	and    dh,BYTE PTR [ebx]
  4263ab:	(bad)  
  4263ac:	jmp    FWORD PTR [esp+ecx*8-0x1]
  4263b0:	add    bh,dh
  4263b2:	(bad)  
  4263b4:	push   cs
  4263b5:	push   edx
  4263b6:	call   0xa84ee744
  4263bb:	int3   
  4263bc:	add    bl,ch
  4263be:	(bad)  
  4263bf:	(bad)  
  4263c0:	inc    ebx
  4263c2:	test   DWORD PTR [ebx-0x8a7230],0xff09d900
  4263cc:	jmp    DWORD PTR ds:0x5ff8383
  4263d2:	sar    bh,1
  4263d4:	mov    ds:0xff0e92,al
  4263d9:	bound  edi,QWORD PTR [eax-0x760a0077]
  4263df:	inc    DWORD PTR [eax]
  4263e1:	pop    esp
  4263e2:	pop    esi
  4263e3:	add    dh,bh
  4263e5:	inc    edx
  4263e6:	enter  0xff00,0x81
  4263ea:	adc    cl,ah
  4263ec:	dec    DWORD PTR [ebx+0x0]
  4263ef:	cmp    edi,0xffffffc6
  4263f2:	add    al,BYTE PTR [eax]
  4263f4:	push   ebx
  4263f5:	mov    ds:0xd5ffff97,eax
  4263fa:	xor    esp,ecx
  4263fc:	sub    DWORD PTR [ebx-0x34],0xffffffcc
  426400:	jmp    FWORD PTR [esi+0x68]
  426403:	mov    esp,edi
  426405:	in     al,dx
  426406:	js     0x426407
  426408:	add    BYTE PTR [edx-0x247cffbb],bh
  42640e:	cmp    edi,0x0
  426411:	jo     0x426454
  426413:	add    ah,ch
  426415:	inc    esi
  426416:	inc    ebp
  426417:	(bad)  
  426418:	call   DWORD PTR [ebx]
  42641a:	add    bh,bh
  42641c:	add    BYTE PTR [esi-0x46763301],bl
  426422:	std    
  426423:	add    BYTE PTR [ebp+0x76],dh
  426426:	ja     0x4263f4
  426428:	dec    DWORD PTR [esi+0x3bffff0d]
  42642e:	mov    DWORD PTR [eax],eax
  426430:	jmp    DWORD PTR [ebp+0x41a3ff5f]
  426436:	(bad)  
  426437:	inc    DWORD PTR [eax]
  426439:	fisubr DWORD PTR [eax-0x34]
  42643c:	add    BYTE PTR [esi],bh
  42643e:	inc    DWORD PTR [eax]
  426440:	sub    ebx,0xffffffd8
  426443:	dec    esi
  426445:	jo     0x426476
  426447:	add    BYTE PTR [eax],al
  426449:	mov    WORD PTR [ecx+0x0],cs
  42644c:	add    ebp,0xffffffcc
  42644f:	add    BYTE PTR [ecx+0xb008670],cl
  426455:	mov    ebp,0xfbff0087
  42645a:	sub    DWORD PTR [ebx-0x76007301],eax
  426460:	add    al,al
  426462:	xor    eax,0xe141aa00
  426467:	add    bh,bh
  426469:	call   0x83ff:0xf200ff52
  426470:	push   DWORD PTR [ecx+0x1d3cfffc]
  426476:	mov    ah,0x0
  426478:	call   FWORD PTR [ecx*8-0x4c0100]
  42647f:	inc    DWORD PTR [eax]
  426481:	inc    ecx
  426482:	adc    al,0xff
  426484:	sahf   
  426485:	inc    ecx
  426486:	loopne 0x426454
  426488:	int3   
  426489:	mov    WORD PTR [edx-0xbe7c77],fs
  42648f:	add    BYTE PTR [ecx-0x2333dd4e],cl
  426495:	pop    es
  426496:	add    edi,edi
  426498:	mov    edx,esp
  42649a:	mov    DWORD PTR [eax],0xfffcff
  4264a0:	add    BYTE PTR [edi-0x76aaff0a],bh
  4264a6:	xchg   DWORD PTR [eax],eax
  4264a8:	jmp    DWORD PTR [ecx-0x176ff79]
  4264ae:	mov    edi,edi
  4264b0:	mov    DWORD PTR ds:0x49c38349,ebx
  4264b6:	inc    edx
  4264b7:	add    DWORD PTR [eax],0xfffffff0
  4264ba:	add    eax,0xffcf0083
  4264bf:	add    BYTE PTR [eax],al
  4264c1:	add    esp,eax
  4264c3:	add    ebp,0xffffffce
  4264c6:	inc    eax
  4264c7:	inc    DWORD PTR [ebx+0xff67a0]
  4264cd:	inc    edx
  4264ce:	(bad)  
  4264cf:	(bad)  
  4264d0:	call   FWORD PTR [ebx+0x2660ff74]
  4264d6:	and    edi,edi
  4264d8:	int3   
  4264d9:	test   BYTE PTR [ebp+0xa30083],dh
  4264df:	dec    esp
  4264e1:	sbb    DWORD PTR [esp+ecx*8],esp
  4264e4:	es sub ebx,edx
  4264e7:	inc    DWORD PTR [eax]
  4264e9:	into   
  4264ea:	rol    DWORD PTR [ebx-0x7c8900],0x0
  4264f1:	mov    BYTE PTR [esi],ah
  4264f3:	(bad)  
  4264f4:	cmp    ebx,esp
  4264f6:	imul   edi,edi,0xff2eda00
  4264fc:	int3   
  4264fd:	aad    0xff
  4264ff:	dec    DWORD PTR [ecx-0x1a001ce1]
  426505:	in     al,dx
  426506:	push   ebx
  426507:	dec    DWORD PTR [ecx-0x76ffa6]
  42650d:	mov    al,0x0
  42650f:	(bad)  
  426510:	call   eax
  426512:	(bad)  
  426513:	push   DWORD PTR [edx+edx*2-0x35000070]
  42651a:	adc    eax,DWORD PTR [eax]
  42651c:	(bad)  
  42651d:	out    dx,eax
  42651e:	mov    DWORD PTR [ebx-0x233f34],eax
  426524:	fistp  DWORD PTR [edx-0x23]
  426527:	add    BYTE PTR [eax],al
  426529:	push   ebx
  42652a:	xchg   ebx,eax
  42652b:	add    BYTE PTR [eax],al
  42652d:	mov    ebx,0x40008983
  426532:	cmp    eax,0x1e0417ff
  426537:	add    BYTE PTR [eax],al
  426539:	loopne 0x42656e
  42653b:	add    bh,bh
  42653d:	sbb    DWORD PTR [eax],eax
  42653f:	inc    DWORD PTR [eax]
  426541:	jo     0x426566
  426543:	jmp    FWORD PTR [ebp-0xffc792]
  426549:	ja     0x426553
  42654b:	add    BYTE PTR [eax],al
  42654d:	test   DWORD PTR [eax],eax
  42654f:	(bad)  
  426550:	inc    esp
  426552:	popf   
  426553:	add    ah,dl
  426555:	sahf   
  426556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426557:	dec    DWORD PTR [ecx-0x76766dcc]
  42655d:	pop    ebx
  42655e:	(bad)  
  42655f:	(bad)  
  426560:	call   FWORD PTR [ecx]
  426562:	ret    0x53ff
  426565:	and    al,0x65
  426567:	inc    DWORD PTR [eax]
  426569:	mov    ecx,0x33ffccc5
  42656e:	dec    esp
  426570:	add    DWORD PTR [esi+0x71],0xffffffff
  426574:	(bad)  
  426575:	push   0x8f0089a5
  42657a:	or     eax,DWORD PTR [ebx-0x7c33fd01]
  426580:	mov    DWORD PTR [edx],ebx
  426582:	aas    
  426583:	mov    DWORD PTR [ebx-0xb],esp
  426586:	in     eax,0x0
  426588:	jmp    DWORD PTR [eax+0x56]
  42658b:	inc    DWORD PTR [eax]
  42658d:	sub    bh,bh
  42658f:	add    DWORD PTR [eax],0xffffffe9
  426592:	fcos   
  426594:	mov    ebx,0xffff2c20
  426599:	addr16 lock (bad) 
  42659c:	inc    edi
  42659e:	(bad)  
  42659f:	inc    DWORD PTR [ebx-0x33001a6b]
  4265a5:	lahf   
  4265a6:	gs (bad) 
  4265a8:	inc    edi
  4265aa:	ins    BYTE PTR es:[edi],dx
  4265ab:	(bad)  
  4265ac:	push   DWORD PTR [eax+eax*1-0x7d]
  4265b0:	add    BYTE PTR [eax],al
  4265b2:	inc    eax
  4265b3:	add    BYTE PTR [edx-0x33adda],cl
  4265b9:	jp     0x4265e4
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	arpl   di,di
  4265bf:	(bad)  
  4265c0:	jmp    ebp
  4265c2:	sar    bh,1
  4265c4:	push   cs
  4265c5:	push   ebx
  4265c6:	aam    0xff
  4265c8:	call   FWORD PTR [ebp-0x8]
  4265cb:	mov    edi,edi
  4265cd:	mov    cs,esp
  4265cf:	(bad)  
  4265d0:	(bad)  
  4265d1:	cmp    al,0x70
  4265d3:	int3   
  4265d4:	xchg   esp,eax
  4265d5:	mov    ebp,DWORD PTR [edx]
  4265d7:	add    BYTE PTR [ebx-0xd67d],al
  4265dd:	push   ss
  4265de:	or     esp,0x0
  4265e1:	dec    ecx
  4265e2:	sar    edi,cl
  4265e4:	aad    0xa6
  4265e6:	mov    eax,ds:0x4950ffff
  4265eb:	add    BYTE PTR [eax],al
  4265ed:	and    eax,0xffff83
  4265f2:	xor    eax,DWORD PTR [eax]
  4265f4:	mov    BYTE PTR [ebx+0x38],bh
  4265f7:	add    DWORD PTR [eax],0xffffffb4
  4265fa:	call   0xdde9fe
  4265ff:	cmp    edi,0x5b
  426602:	fwait
  426603:	call   esi
  426605:	or     BYTE PTR [edi-0x5a13ff77],cl
  42660b:	add    ah,cl
  42660d:	in     eax,dx
  42660e:	inc    DWORD PTR [eax]
  426610:	inc    DWORD PTR [edi]
  426612:	pop    esi
  426613:	jmp    DWORD PTR [esi]
  426615:	add    DWORD PTR fs:[bx+si],0x5b
  42661a:	stos   BYTE PTR es:[edi],al
  42661b:	inc    DWORD PTR [ebx-0xff6b]
  426621:	dec    BYTE PTR [eax+eax*1+0x25]
  426625:	loopne 0x426616
  426627:	add    BYTE PTR [ecx+0xb797],cl
  42662d:	mov    esp,0x4e00ffcc
  426632:	scas   al,BYTE PTR es:[edi]
  426633:	add    BYTE PTR [eax+0x32],al
  426636:	jbe    0x4265bb
  426638:	sub    DWORD PTR [eax+0x7400ff28],0xffffffff
  42663f:	add    bh,bh
  426641:	add    edx,DWORD PTR [eax-0x4b18d601]
  426647:	(bad)  
  426648:	inc    edx
  42664a:	cdq    
  42664b:	add    bh,bh
  42664d:	inc    esi
  42664e:	inc    DWORD PTR [eax]
  426650:	add    BYTE PTR [eax-0x62],al
  426653:	and    DWORD PTR ds:0xcc00c110,0x4
  42665a:	mov    ds:0x8983cc,al
  42665f:	mov    DWORD PTR [eax],eax
  426661:	push   es
  426662:	ror    esp,cl
  426664:	test   DWORD PTR ds:0x55ff0034,esp
  42666a:	jecxz  0x4265f5
  42666c:	(bad)  
  42666d:	cld    
  42666e:	int3   
  42666f:	inc    DWORD PTR [eax]
  426671:	adc    DWORD PTR [esi-0x77],esi
  426674:	inc    ecx
  426675:	dec    ebx
  426676:	retf   
  426677:	add    BYTE PTR [ebx-0x7cc9e8],al
  42667d:	push   0x0
  42667f:	(bad)  
  426680:	jmp    FWORD PTR [ecx+0x2aa005e]
  426686:	str    esp
  426689:	outs   dx,DWORD PTR ds:[esi]
  42668a:	gs (bad) 
  42668c:	dec    DWORD PTR [ebx+0x178983ff]
  426692:	imul   ecx,DWORD PTR [ecx-0x7c4bca38],0x8391a7ff
  42669c:	sbb    DWORD PTR [edx-0x77],0xffffffff
  4266a0:	mov    DWORD PTR [esp+eax*8-0x1],edi
  4266a4:	or     DWORD PTR [ebx-0x72],esp
  4266a7:	add    BYTE PTR [eax],al
  4266a9:	add    BYTE PTR gs:[bx+si],al
  4266ad:	aad    0x89
  4266af:	(bad)  
  4266b0:	jmp    eax
  4266b2:	pop    ds
  4266b3:	jmp    DWORD PTR [eax+0x21]
  4266b6:	add    BYTE PTR [eax],al
  4266b8:	call   DWORD PTR [eax+0x77]
  4266bb:	cmp    edi,0xffffffff
  4266be:	inc    DWORD PTR [ebx+0x9e98ff]
  4266c4:	hlt    
  4266c5:	mov    dh,0x52
  4266c7:	cmp    edi,0xffffffe2
  4266ca:	(bad)  
  4266cb:	add    bh,bh
  4266cd:	int    0xff
  4266cf:	add    BYTE PTR [eax],al
  4266d1:	add    BYTE PTR [edx+0x3d5b9289],al
  4266d7:	mov    DWORD PTR [eax],eax
  4266d9:	scas   eax,DWORD PTR es:[edi]
  4266da:	dec    ebp
  4266db:	inc    DWORD PTR [eax]
  4266dd:	ret    0x8300
  4266e0:	cmp    DWORD PTR [edi-0x1abc333d],0x69
  4266e7:	add    bh,bh
  4266e9:	out    0x1d,al
  4266eb:	mov    DWORD PTR [ecx-0xffff6f],ecx
  4266f1:	jbe    0x426722
  4266f3:	dec    DWORD PTR [ecx]
  4266f5:	push   ds
  4266f6:	xor    eax,DWORD PTR [eax]
  4266f8:	mov    DWORD PTR [esi-0x6c76ffe8],ebp
  4266fe:	add    DWORD PTR [eax],0x0
  426701:	mov    ebp,0x4b6000e6
  426706:	imul   eax,DWORD PTR [eax],0xff4c9fff
  42670c:	add    BYTE PTR [ecx-0x7700ff01],ch
  426712:	add    DWORD PTR [eax],0xcc4e76c1
  426718:	jmp    DWORD PTR [esi-0x4b7cffbf]
  42671e:	(bad)  
  42671f:	(bad)  
  426720:	inc    edx
  426722:	push   ss
  426723:	push   ebp
  426725:	and    ah,bl
  426727:	inc    DWORD PTR [eax]
  426729:	inc    ebx
  42672a:	mov    esp,0xd2cc89
  42672f:	inc    DWORD PTR [eax]
  426731:	popa   
  426732:	(bad)  
  426734:	sub    al,0x3a
  426736:	scas   al,BYTE PTR es:[edi]
  426737:	(bad)  
  426738:	jmp    DWORD PTR [esi+0x48]
  42673b:	add    bh,bh
  42673d:	cmp    eax,DWORD PTR [eax]
  42673f:	int3   
  426740:	push   DWORD PTR [ebp+0x74]
  426743:	add    BYTE PTR [edi-0x66],bl
  426746:	ret    0xffff
  426749:	pop    edx
  42674a:	push   edx
  42674b:	add    ah,cl
  42674d:	push   esp
  42674e:	(bad)  
  42674f:	(bad)  
  426750:	call   FWORD PTR [ebx]
  426752:	jmp    0x426754
  426754:	mov    bh,0xd1
  426756:	aam    0xff
  426758:	inc    DWORD PTR [edx]
  42675a:	scas   al,BYTE PTR es:[edi]
  42675b:	add    BYTE PTR [eax],al
  42675d:	push   0xed00ffff
  426762:	(bad)  
  426764:	pushf  
  426765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426766:	xchg   esp,eax
  426767:	inc    DWORD PTR [eax]
  426769:	or     eax,0xd900ff49
  42676e:	cmp    edi,0xffffff83
  426771:	fst    st(1)
  426773:	add    BYTE PTR [edx+0x69],al
  426776:	xor    BYTE PTR [eax],al
  426778:	call   DWORD PTR [eax+0x5e]
  42677b:	int3   
  42677c:	sub    esp,0x0
  42677f:	(bad)  
  426780:	jmp    FWORD PTR [ebx+0x59]
  426783:	add    al,bh
  426785:	dec    ecx
  426786:	cmp    BYTE PTR [eax],al
  426788:	add    ah,ah
  42678a:	pushf  
  42678b:	inc    DWORD PTR [ebx-0x33ffffe2]
  426791:	jmp    0x4267fc
  426793:	add    BYTE PTR [ecx+0x5e],cl
  426796:	inc    BYTE PTR [eax]
  426798:	call   FWORD PTR [ebx+ecx*2-0x76280001]
  42679f:	add    bh,bh
  4267a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267a2:	xor    eax,0x584c2c00
  4267a7:	(bad)  
  4267a8:	(bad)  
  4267a9:	mov    esi,0xc898966
  4267ae:	mov    edi,edi
  4267b0:	inc    DWORD PTR ds:0xaa3bff1b
  4267b6:	cmp    al,BYTE PTR [eax]
  4267b8:	add    BYTE PTR [ecx-0x30ff004d],bl
  4267be:	add    bh,bh
  4267c0:	add    al,ah
  4267c2:	jmp    0x4267c4
  4267c4:	push   0x198c
  4267c9:	loope  0x4267ad
  4267cb:	(bad)  
  4267cc:	jmp    FWORD PTR [ecx]
  4267ce:	(bad)  
  4267cf:	inc    DWORD PTR [eax]
  4267d1:	dec    esp
  4267d2:	bound  eax,QWORD PTR [ebx+0xde6ba9]
  4267d8:	add    BYTE PTR [eax+0xd],dh
  4267db:	add    DWORD PTR [eax],0x5a
  4267de:	(bad)  
  4267df:	(bad)  
  4267e0:	jmp    DWORD PTR [eax+0x28d4835d]
  4267e6:	add    DWORD PTR [ebx+0x458bcc],0xffff2200
  4267f0:	int3   
  4267f1:	lds    ebp,FWORD PTR [edi]
  4267f3:	inc    ebp
  4267f5:	push   0xb
  4267f7:	add    bh,bh
  4267f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267fa:	xchg   esi,eax
  4267fb:	add    DWORD PTR [eax],0xffffffe4
  4267fe:	add    DWORD PTR [eax],0xffffffff
  426801:	repnz xor esp,ecx
  426804:	imul   esi,edx,0xd00000d4
  42680a:	cmp    bh,bh
  42680c:	mov    DWORD PTR [ecx-0x34],edx
  42680f:	add    DWORD PTR [ebx+0x32ff57c3],0xffffffb4
  426816:	jbe    0x426818
  426818:	call   DWORD PTR [ecx]
  42681a:	push   esi
  42681b:	add    BYTE PTR [eax],al
  42681d:	fild   DWORD PTR [eax]
  42681f:	(bad)  
  426820:	jmp    DWORD PTR [ecx-0x3e54004d]
  426826:	cwde   
  426827:	add    bh,bh
  426829:	cmp    eax,0xaccccf0
  42682e:	cmp    edi,0x0
  426831:	pop    eax
  426832:	xchg   esi,eax
  426833:	int3   
  426834:	or     ebx,ebp
  426836:	mov    esp,0xfb6ccc83
  42683b:	add    bh,bh
  42683d:	rol    BYTE PTR [ebx+0x296c00ff],1
  426843:	int3   
  426844:	mov    bl,0x4c
  426846:	mov    al,0x83
  426848:	mov    DWORD PTR [edi+0x1a00890c],eax
  42684e:	inc    DWORD PTR [eax]
  426850:	jmp    FWORD PTR [ebp-0x2dca00b0]
  426856:	inc    ebp
  426857:	add    bh,bh
  426859:	mov    ah,ch
  42685b:	add    BYTE PTR [eax],al
  42685d:	inc    eax
  42685e:	add    bh,bh
  426860:	(bad)  
  426861:	call   0x276aec31
  426866:	jb     0x426834
  426868:	xor    ecx,0xffffffa0
  42686b:	(bad)  
  42686c:	call   DWORD PTR [esp+ecx*8-0x34]
  426870:	jmp    DWORD PTR [esi-0xac733c9]
  426876:	cmp    eax,0xe05a00ff
  42687b:	add    bh,bh
  42687d:	cdq    
  42687e:	add    BYTE PTR [ebx-0xadc300],al
  426884:	fstp   QWORD PTR [esi]
  426886:	arpl   WORD PTR [eax],ax
  426888:	sub    DWORD PTR [edi],0xffffffdf
  42688b:	inc    DWORD PTR [eax]
  42688d:	jecxz  0x42688e
  42688f:	(bad)  
  426890:	inc    edi
  426892:	fild   WORD PTR [eax]
  426894:	loopne 0x426875
  426896:	push   esp
  426897:	add    bh,bh
  426899:	dec    edi
  42689a:	fild   DWORD PTR [eax]
  42689c:	jmp    DWORD PTR [ecx-0xbff0001]
  4268a2:	js     0x4268a4
  4268a4:	mov    eax,ds:0xff093f
  4268a9:	int3   
  4268aa:	pop    edx
  4268ab:	(bad)  
  4268ac:	dec    eax
  4268ae:	inc    DWORD PTR [eax]
  4268b0:	call   DWORD PTR ds:0x50240021
  4268b6:	push   ebp
  4268b7:	inc    DWORD PTR [ebx+0xff552f]
  4268bd:	jno    0x4268bf
  4268bf:	inc    DWORD PTR [eax]
  4268c1:	popa   
  4268c2:	(bad)  
  4268c3:	(bad)  
  4268c4:	mov    eax,0xffffd053
  4268c9:	push   ebp
  4268ca:	sbb    BYTE PTR [eax],al
  4268cc:	int3   
  4268cd:	inc    ebx
  4268ce:	cmp    edi,0xffffff89
  4268d1:	and    dl,BYTE PTR [eax+0x575aaccc]
  4268d7:	(bad)  
  4268d8:	jmp    FWORD PTR [edx-0x6700ff82]
  4268de:	dec    DWORD PTR [ecx-0xf3ee01]
  4268e4:	or     DWORD PTR [esi+0x6c],0xffffffff
  4268e8:	mov    esp,edi
  4268ea:	mov    esp,0xffe0ffff
  4268ef:	(bad)  
  4268f0:	inc    DWORD PTR [ecx]
  4268f2:	and    al,0x83
  4268f4:	cli    
  4268f5:	daa    
  4268f6:	mov    ebp,0x34ca00ff
  4268fb:	int3   
  4268fc:	push   DWORD PTR [edi+0x330083ff]
  426902:	jecxz  0x426904
  426904:	cmp    edi,DWORD PTR [ecx+0x6f000033]
  42690a:	dec    ebp
  42690b:	inc    DWORD PTR [ebx+0xff5b]
  426911:	jo     0x426931
  426913:	add    BYTE PTR [edi+0x57],dh
  426916:	inc    esp
  426917:	inc    DWORD PTR [eax]
  426919:	in     eax,0x25
  42691b:	add    BYTE PTR [eax],al
  42691d:	jmp    0x29426822
  426922:	lods   eax,DWORD PTR ds:[esi]
  426923:	add    dh,ah
  426925:	and    DWORD PTR [ebx+eax*4-0x77],ecx
  426929:	add    ch,BYTE PTR [ecx]
  42692b:	inc    DWORD PTR [eax]
  42692d:	test   eax,0xf6cc00ff
  426932:	mov    ah,0x0
  426934:	sub    al,0xb2
  426936:	jge    0x4268bb
  426938:	and    ecx,0xffffffb4
  42693b:	inc    DWORD PTR [eax]
  42693d:	jns    0x4268c8
  42693f:	inc    DWORD PTR [ebx-0x13762765]
  426945:	add    bh,BYTE PTR [esi-0x3d22ff01]
  42694b:	add    BYTE PTR [eax],al
  42694d:	jne    0x42694e
  42694f:	mov    DWORD PTR [eax],eax
  426951:	sbb    dh,BYTE PTR [edx-0x1]
  426954:	cmc    
  426955:	sub    BYTE PTR [edi+edi*8+0x0],dh
  426959:	ss sub al,0x0
  42695c:	call   FWORD PTR [edi+0x0]
  42695f:	dec    esp
  426961:	scas   al,BYTE PTR es:[edi]
  426962:	mov    esi,0xb17c000
  426967:	inc    DWORD PTR [eax]
  426969:	sbb    cl,BYTE PTR ds:0xe00ff
  42696f:	add    bh,bh
  426971:	xchg   DWORD PTR [eax],ebp
  426973:	add    BYTE PTR [ecx+0x5e],bh
  426976:	(bad)  
  426977:	(bad)  
  426978:	call   DWORD PTR [esi-0xcff76ac]
  42697e:	mov    DWORD PTR [eax],eax
  426980:	inc    DWORD PTR [ecx]
  426982:	fld    QWORD PTR [eax]
  426984:	in     al,0x46
  426986:	xor    esp,ecx
  426988:	jmp    DWORD PTR [eax]
  42698a:	fiadd  DWORD PTR [ebx-0x76000600]
  426990:	add    BYTE PTR ds:0xbd18fff1,ch
  426996:	push   ds
  426997:	mov    edi,edi
  426999:	ins    DWORD PTR es:[edi],dx
  42699a:	mov    esp,0xcc9d83ff
  42699f:	inc    DWORD PTR [eax]
  4269a1:	js     0x42698b
  4269a3:	push   DWORD PTR [ebx-0x1f]
  4269a6:	dec    edx
  4269a7:	dec    esp
  4269a9:	(bad)  
  4269ab:	(bad)  
  4269ac:	(bad)  
  4269ad:	cli    
  4269ae:	add    bh,bh
  4269b0:	(bad)  
  4269b1:	js     0x4269cb
  4269b3:	call   DWORD PTR [edx]
  4269b5:	mul    al
  4269b7:	or     esp,0x56
  4269ba:	out    dx,eax
  4269bb:	add    BYTE PTR [eax],al
  4269bd:	pop    edi
  4269be:	inc    DWORD PTR [eax]
  4269c0:	jmp    DWORD PTR [edx+0x729d8936]
  4269c6:	jle    0x4269c7
  4269c8:	add    BYTE PTR [ecx+0x2b],ch
  4269cb:	inc    DWORD PTR [eax]
  4269cd:	(bad)  
  4269ce:	(bad)  
  4269cf:	(bad)  
  4269d0:	inc    DWORD PTR [ebp+0xb]
  4269d3:	inc    DWORD PTR [eax+edi*2+0x4e]
  4269d7:	add    BYTE PTR [ecx-0xffec3c],cl
  4269dd:	mov    al,ds:0xb183ff00
  4269e2:	stos   DWORD PTR es:[edi],eax
  4269e3:	add    BYTE PTR [edx-0xf],dh
  4269e6:	enter  0x8383,0x4b
  4269ea:	jle    0x4269eb
  4269ec:	(bad)  
  4269ed:	out    dx,eax
  4269ee:	(bad)  
  4269ef:	inc    DWORD PTR [eax]
  4269f1:	sub    al,0x84
  4269f3:	call   DWORD PTR [eax]
  4269f5:	pop    ebp
  4269f6:	aam    0xff
  4269f8:	add    BYTE PTR [edx],bl
  4269fa:	mov    ch,0xff
  4269fc:	(bad)  
  4269fd:	in     eax,dx
  4269fe:	int3   
  4269ff:	int3   
  426a00:	add    BYTE PTR [esi+eax*2],ch
  426a03:	push   DWORD PTR [ebx+0x3c]
  426a06:	arpl   WORD PTR [eax],ax
  426a08:	call   edi
  426a0a:	test   DWORD PTR [ecx-0x2401],0x68e483
  426a14:	aad    0x85
  426a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a17:	add    bh,bh
  426a19:	enter  0xff54,0xff
  426a1d:	in     al,0x89
  426a1f:	inc    DWORD PTR [eax]
  426a21:	leave  
  426a22:	jg     0x426a23
  426a24:	fisubr WORD PTR [edi+ebx*8+0x0]
  426a28:	call   DWORD PTR [eax+0x5a]
  426a2b:	add    bh,bh
  426a2d:	test   DWORD PTR [eax],eax
  426a2f:	inc    DWORD PTR [ebx+0x41ff98e3]
  426a35:	in     al,0x24
  426a37:	(bad)  
  426a38:	call   DWORD PTR [edi-0x7d0000b2]
  426a3e:	(bad)  
  426a3f:	(bad)  
  426a40:	push   DWORD PTR ds:0x6beaffee
  426a46:	outs   dx,DWORD PTR ds:[esi]
  426a47:	(bad)  
  426a48:	call   FWORD PTR [eax-0x5]
  426a4b:	(bad)  
  426a4c:	inc    esi
  426a4e:	add    bh,bh
  426a50:	mov    ebp,edi
  426a52:	inc    esi
  426a53:	(bad)  
  426a54:	cmp    esi,DWORD PTR [ecx+ebx*2-0x34]
  426a58:	add    dl,ah
  426a5a:	int3   
  426a5b:	(bad)  
  426a5c:	inc    eax
  426a5e:	inc    DWORD PTR [eax]
  426a60:	add    BYTE PTR [eax-0x4ae9ff80],ah
  426a66:	lahf   
  426a67:	add    bh,bh
  426a69:	rol    DWORD PTR [ecx-0x1],0xff
  426a6d:	(bad)  
  426a6e:	int3   
  426a6f:	(bad)  
  426a70:	(bad)  
  426a71:	fidiv  WORD PTR [ecx+0x6fed10ff]
  426a77:	mov    edi,edi
  426a79:	sets   bh
  426a7c:	jmp    FWORD PTR [eax+eax*1+0x3ba083ff]
  426a83:	jmp    FWORD PTR [ebx-0x51]
  426a86:	mov    bl,0x89
  426a88:	or     DWORD PTR [ebx+0x18],0xffffffff
  426a8c:	(bad)  
  426a8d:	aas    
  426a8e:	int3   
  426a8f:	or     esp,0x51
  426a92:	pop    ecx
  426a93:	dec    edx
  426a95:	sbb    esi,DWORD PTR [esi+0x0]
  426a98:	int3   
  426a99:	inc    esp
  426a9a:	in     al,dx
  426a9b:	add    BYTE PTR [eax],al
  426a9d:	test   BYTE PTR [ecx+0x56c80000],0x89
  426aa4:	sbb    ecx,DWORD PTR [eax]
  426aa6:	hlt    
  426aa7:	add    DWORD PTR [eax],0x34
  426aaa:	mov    ds:0x83230000,eax
  426aaf:	add    BYTE PTR [ebp+0x0],bh
  426ab2:	ltr    WORD PTR [edi]
  426ab5:	dec    DWORD PTR [ecx-0x4f008901]
  426abb:	fcos   
  426abd:	pop    ecx
  426abe:	call   ebp
  426ac0:	sahf   
  426ac1:	(bad)  
  426ac2:	jnp    0x426ac3
  426ac4:	and    BYTE PTR [eax],al
  426ac6:	int3   
  426ac7:	add    cl,ch
  426ac9:	push   DWORD PTR [esi]
  426acb:	and    al,0xff
  426acd:	push   esi
  426ace:	int3   
  426acf:	pop    ecx
  426ad0:	les    eax,FWORD PTR [ebx-0x7ff29]
  426ad6:	add    BYTE PTR [eax],al
  426ad8:	pop    ebp
  426ad9:	add    bl,dh
  426adb:	gs inc esi
  426ade:	dec    DWORD PTR [ebp+0x4d]
  426ae1:	mov    DWORD PTR [eax+eax*1-0xff70],esp
  426ae8:	pop    esi
  426ae9:	int3   
  426aea:	ret    0x83ee
  426aed:	popa   
  426aee:	inc    DWORD PTR [edx+0xd900dc]
  426af4:	push   es
  426af5:	add    bh,bh
  426af7:	add    BYTE PTR [eax+eax*1-0x35],dl
  426afb:	lods   al,BYTE PTR ds:[esi]
  426afc:	add    BYTE PTR [eax-0x7d],dh
  426aff:	jno    0x426ade
  426b01:	push   DWORD PTR [esi]
  426b03:	push   edi
  426b05:	add    bh,bh
  426b07:	cmp    DWORD PTR [ecx+0x781cff],0x35
  426b0e:	int3   
  426b0f:	inc    esp
  426b10:	sbb    eax,0x538312cc
  426b15:	(bad)  
  426b16:	inc    DWORD PTR [eax]
  426b18:	dec    esp
  426b19:	int3   
  426b1a:	xor    al,0xfb
  426b1c:	add    BYTE PTR [ebx-0x1],dh
  426b1f:	cs or  edi,edi
  426b22:	xchg   esp,eax
  426b23:	int3   
  426b24:	dec    edi
  426b25:	add    BYTE PTR [eax],al
  426b27:	add    BYTE PTR [eax-0x8ba277],dh
  426b2d:	mov    al,ds:0xff57b7ff
  426b32:	call   0xa1ff:0x83ccc500
  426b39:	add    BYTE PTR [edi+0xafffba],bh
  426b3f:	push   ds
  426b40:	or     BYTE PTR [eax],al
  426b42:	std    
  426b43:	add    al,bh
  426b45:	int3   
  426b46:	add    BYTE PTR [eax],al
  426b48:	sar    bh,1
  426b4a:	cli    
  426b4b:	add    bh,bh
  426b4d:	mov    BYTE PTR [ebx+0x69897e14],al
  426b53:	(bad)  
  426b54:	cli    
  426b55:	(bad)  
  426b56:	inc    DWORD PTR [ebx-0x31ac00db]
  426b5c:	jmp    FWORD PTR [ebx+eax*4+0x70ff83d8]
  426b63:	push   esp
  426b65:	(bad)  
  426b66:	inc    DWORD PTR [eax]
  426b68:	xor    al,BYTE PTR [eax]
  426b6a:	mov    al,ds:0xbbff74
  426b6f:	call   0xff5a:0x18ccd7
  426b76:	inc    DWORD PTR [eax]
  426b78:	mov    edx,0x311600
  426b7d:	or     eax,DWORD PTR [ebx-0x77c0af9]
  426b83:	call   FWORD PTR [eax-0x1]
  426b86:	dec    DWORD PTR [ecx+0x635283ee]
  426b8c:	add    BYTE PTR [esi-0x1],ah
  426b8f:	sbb    eax,0xacffe5
  426b94:	data16 add BYTE PTR [eax],al
  426b97:	dec    DWORD PTR ds:0x83b87483
  426b9d:	hlt    
  426b9e:	push   DWORD PTR [ecx+0x2e]
  426ba1:	dec    esp
  426ba3:	call   esp
  426ba5:	add    BYTE PTR [eax],al
  426ba7:	add    BYTE PTR [edi-0x92b901],dl
  426bad:	add    DWORD PTR [eax],eax
  426baf:	mov    ecx,0x90895b
  426bb4:	add    BYTE PTR gs:[ecx-0x5c00a177],cl
  426bbb:	add    eax,DWORD PTR [eax]
  426bbd:	rol    BYTE PTR [ebx-0x3bffdb08],1
  426bc3:	jmp    DWORD PTR [edi+edi*8-0x970034]
  426bca:	aas    
  426bcb:	(bad)  
  426bcc:	(bad)  
  426bcd:	fld    DWORD PTR [eax]
  426bcf:	or     edx,ebx
  426bd1:	add    BYTE PTR [edi],ch
  426bd3:	call   DWORD PTR [esi]
  426bd5:	add    bh,bh
  426bd7:	add    BYTE PTR [edx],dh
  426bd9:	cmp    DWORD PTR [ecx-0x1],0x0
  426bdd:	scas   eax,DWORD PTR es:[edi]
  426bde:	jmp    FWORD PTR [edi+0xbd8350]
  426be4:	jg     0x426be6
  426be6:	inc    DWORD PTR [ebx+0x75d4ff77]
  426bec:	adc    DWORD PTR [edi+edi*8-0x6a],0x78
  426bf1:	add    BYTE PTR [ebx-0x1],bl
  426bf4:	loope  0x426bf6
  426bf6:	int3   
  426bf7:	call   DWORD PTR [edi-0x7d]
  426bfa:	jne    0x426c5b
  426bfc:	add    dh,bl
  426bfe:	add    BYTE PTR [eax-0x52],dh
  426c01:	jmp    FWORD PTR [esi-0x7ced01]
  426c07:	add    dh,cl
  426c09:	(bad)  
  426c0a:	jmp    0x426bfc
  426c0c:	cmp    DWORD PTR [edx],0xffffffff
  426c0f:	sub    ch,BYTE PTR [esi]
  426c11:	(bad)  
  426c12:	ds add ch,ch
  426c15:	add    ah,cl
  426c17:	add    BYTE PTR [eax-0x1],ah
  426c1a:	jmp    0x8a0e6b3b
  426c1f:	adc    BYTE PTR [ecx-0x25767200],bl
  426c25:	int3   
  426c26:	(bad)  
  426c27:	(bad)  
  426c28:	jl     0x426c29
  426c2a:	jmp    0x426c96
  426c2c:	add    ah,cl
  426c2e:	add    BYTE PTR [ecx],ch
  426c30:	imul   eax,DWORD PTR [ebx+0x3cccbc],0x200ff
  426c3a:	fmul   QWORD PTR [esi-0x1]
  426c3d:	out    0xff,al
  426c3f:	sub    al,0x16
  426c41:	inc    DWORD PTR ds:0xff836700
  426c47:	dec    DWORD PTR ds:0x838bd300
  426c4d:	cmp    edi,0x48ffe4c4
  426c53:	add    BYTE PTR [eax-0x26ff7d00],dl
  426c59:	sbb    DWORD PTR [edi],0x7d
  426c5c:	(bad)  
  426c5d:	cmp    DWORD PTR [eax],eax
  426c5f:	ss nop
  426c61:	int3   
  426c62:	(bad)  
  426c64:	sbb    eax,0x8ff0089
  426c69:	mov    edx,esp
  426c6b:	push   es
  426c6c:	add    BYTE PTR [eax+0x806a83],al
  426c72:	xchg   edi,edi
  426c74:	mov    BYTE PTR [eax],al
  426c76:	inc    DWORD PTR [ebx-0x6e4f0095]
  426c7c:	push   DWORD PTR ds:0xf272ff
  426c82:	jbe    0x426c0d
  426c84:	xlat   BYTE PTR ds:[ebx]
  426c85:	add    BYTE PTR [ecx+0x1005889],cl
  426c8b:	cmp    edi,edi
  426c8d:	sahf   
  426c8e:	add    BYTE PTR [esi+0xdcffbb],dh
  426c94:	add    BYTE PTR fs:[eax],al
  426c97:	mov    DWORD PTR [ebx],ebp
  426c99:	mov    DWORD PTR [ecx],edx
  426c9b:	xchg   edx,eax
  426c9c:	int3   
  426c9d:	sbb    edi,edi
  426c9f:	dec    eax
  426ca0:	push   edx
  426ca1:	jmp    DWORD PTR [esi]
  426ca3:	call   DWORD PTR [ecx-0x2c007c01]
  426ca9:	push   DWORD PTR [esi-0x766100db]
  426caf:	pop    es
  426cb0:	jg     0x426cb2
  426cb2:	xchg   edi,eax
  426cb3:	add    BYTE PTR [edi],al
  426cb5:	mov    DWORD PTR [eax],eax
  426cb7:	add    BYTE PTR [eax+0x0],al
  426cba:	inc    esp
  426cbb:	loopne 0x426cbc
  426cbd:	and    eax,0xddb900
  426cc2:	loope  0x426cc3
  426cc4:	push   esp
  426cc5:	inc    DWORD PTR [eax]
  426cc7:	int3   
  426cc8:	jbe    0x426cc9
  426cca:	ja     0x426cec
  426ccc:	add    ah,ah
  426cce:	call   FWORD PTR [edi+0x57]
  426cd1:	push   DWORD PTR [ebx-0xff8f01]
  426cd7:	call   FWORD PTR [esi]
  426cd9:	xor    DWORD PTR [esi+0x6383d0],0xffffff92
  426ce0:	mov    bh,bh
  426ce2:	popa   
  426ce3:	dec    ebx
  426ce5:	mov    DWORD PTR [eax],eax
  426ce7:	dec    DWORD PTR [esi]
  426ce9:	jmp    FWORD PTR [ecx]
  426ceb:	mov    dh,0x0
  426ced:	icebp  
  426cee:	add    BYTE PTR [esp+edx*2-0x1],bh
  426cf2:	sahf   
  426cf3:	adc    DWORD PTR [eax],0xffffffff
  426cf6:	cmp    edi,0xffffffbf
  426cf9:	dec    DWORD PTR [eax-0x3d]
  426cfc:	inc    esp
  426cfe:	add    dh,al
  426d00:	inc    edx
  426d01:	call   DWORD PTR [eax-0x7d]
  426d04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426d05:	add    BYTE PTR [ebx-0x1f009400],al
  426d0b:	dec    esi
  426d0c:	int3   
  426d0d:	mov    edi,0xff875bff
  426d12:	mov    esi,0xff9889
  426d17:	add    BYTE PTR [eax],ch
  426d19:	(bad)  
  426d1a:	jns    0x426d19
  426d1c:	push   DWORD PTR [ecx-0x77]
  426d1f:	(bad)  
  426d20:	leave  
  426d21:	sbb    DWORD PTR [eax+eax*1],0xf
  426d25:	(bad)  
  426d26:	dec    esp
  426d28:	rol    DWORD PTR [ebx-0x51ff74e9],cl
  426d2e:	int3   
  426d2f:	loopne 0x426d32
  426d31:	dec    DWORD PTR [edx+0x0]
  426d34:	call   0xd9ff:0xd5ccffff
  426d3b:	and    al,0x0
  426d3d:	jae    0x426d3f
  426d3f:	loopne 0x426d9c
  426d41:	(bad)  
  426d42:	fiadd  WORD PTR [eax]
  426d44:	pop    edi
  426d45:	add    BYTE PTR [eax],al
  426d47:	push   DWORD PTR [ebp-0x208901]
  426d4d:	int3   
  426d4e:	int3   
  426d4f:	mov    al,ds:0xff2f00cc
  426d54:	push   ds
  426d55:	add    DWORD PTR [ebx-0x22ff0501],0xffffffee
  426d5c:	dec    DWORD PTR [ecx-0x6a8c01]
  426d62:	mov    ecx,0xcc003b83
  426d67:	mov    DWORD PTR [esi-0x7d],esp
  426d6a:	and    BYTE PTR [ecx+0x7008900],0x5b
  426d71:	inc    DWORD PTR [ebx]
  426d73:	mov    DWORD PTR [ecx],edi
  426d75:	add    BYTE PTR [eax],al
  426d77:	mov    DWORD PTR [ecx-0x77],edi
  426d7a:	pop    ss
  426d7b:	xor    DWORD PTR ss:[esi-0x4d4601],0x14
  426d83:	add    BYTE PTR [edi+edi*8-0x1],al
  426d87:	mov    DWORD PTR [edx],esp
  426d89:	add    BYTE PTR [ecx-0x766900fc],dl
  426d8f:	ja     0x426de4
  426d91:	push   DWORD PTR [edi+edi*8+0x4a]
  426d95:	dec    esp
  426d97:	add    ecx,0xffffffff
  426d9a:	dec    edi
  426d9b:	mov    dh,0x0
  426d9d:	lahf   
  426d9e:	push   DWORD PTR [esi+ebx*4]
  426da1:	cmp    ecx,0x0
  426da4:	xlat   BYTE PTR ds:[ebx]
  426da5:	add    DWORD PTR [eax],0xffffffcc
  426da8:	or     eax,DWORD PTR [eax]
  426daa:	inc    edi
  426dab:	mov    ah,0x89
  426dad:	push   esi
  426dae:	add    BYTE PTR [ebx+edx*2],al
  426db1:	add    dl,dl
  426db3:	call   FWORD PTR [esi]
  426db5:	cmp    edi,0xffffffff
  426db8:	cmp    bh,0xd1
  426dbb:	ja     0x426dbc
  426dbd:	cmp    eax,0xfff862ff
  426dc2:	push   0xe0cc
  426dc7:	add    BYTE PTR [ecx-0x34],ch
  426dca:	dec    edi
  426dcb:	pushf  
  426dcc:	int3   
  426dcd:	int    0x0
  426dcf:	repz cmp eax,0xb00061ff
  426dd5:	int3   
  426dd6:	dec    esp
  426dd8:	inc    esi
  426dd9:	add    BYTE PTR [ebx-0x1f7c4d],bh
  426ddf:	mov    ebp,0xffe7ff5f
  426de4:	leave  
  426de5:	(bad)  
  426de6:	(bad)  
  426de7:	jmp    DWORD PTR [ebp+0x0]
  426dea:	sub    bh,BYTE PTR [ecx+0x180054ff]
  426df0:	fld    DWORD PTR [ebx-0x7c6b007c]
  426df6:	add    bh,bh
  426df8:	or     al,0x0
  426dfa:	push   eax
  426dfb:	stos   BYTE PTR es:[edi],al
  426dfc:	jmp    DWORD PTR [edx]
  426dfe:	add    DWORD PTR [edi+0x3a],0xffffff83
  426e02:	jno    0x426e03
  426e04:	push   edi
  426e05:	add    bh,bh
  426e07:	sub    DWORD PTR [ebp-0x67de01],0x53
  426e0e:	int3   
  426e0f:	jb     0x426dd6
  426e11:	sub    edx,0x0
  426e14:	ds add bh,bh
  426e17:	jmp    DWORD PTR [edi]
  426e19:	push   DWORD PTR ds:0xffa5005d
  426e1f:	push   esi
  426e20:	arpl   WORD PTR [ebx-0xe4ffd3],ax
  426e26:	add    bh,bh
  426e28:	xor    bh,bh
  426e2a:	lea    ebx,[ebx-0x1]
  426e2d:	or     bh,bh
  426e2f:	(bad)  
  426e30:	lahf   
  426e31:	push   ebp
  426e33:	inc    DWORD PTR [ebx]
  426e35:	int3   
  426e36:	inc    DWORD PTR [ebx+0x6cddff50]
  426e3c:	int3   
  426e3d:	xchg   esp,eax
  426e3e:	cmp    edx,0xffffff93
  426e41:	add    BYTE PTR [ecx+ecx*4-0x4c],ch
  426e45:	add    DWORD PTR [eax],0x0
  426e48:	and    al,0xff
  426e4a:	sbb    eax,0xffa60001
  426e4f:	nop
  426e50:	cmp    bh,bh
  426e52:	addr16 call eax
  426e55:	inc    DWORD PTR [ebx-0x1fff5b77]
  426e5b:	or     DWORD PTR [eax],eax
  426e5d:	ss or  esi,0xffffffb6
  426e61:	add    ch,ah
  426e63:	(bad)  
  426e64:	(bad)  
  426e66:	add    ah,cl
  426e68:	sub    bh,bh
  426e6a:	das    
  426e6b:	in     eax,dx
  426e6c:	or     DWORD PTR [ecx-0x7eba01],0x68
  426e73:	add    BYTE PTR [ecx+0x37cc0000],ch
  426e79:	push   esp
  426e7b:	sar    bh,cl
  426e7d:	in     al,dx
  426e7e:	add    BYTE PTR [esi-0x7cb07cf6],bh
  426e84:	push   0x3effff00
  426e89:	(bad)  
  426e8a:	mov    ebp,0xe10024
  426e8f:	sahf   
  426e90:	mov    DWORD PTR fs:[eax-0x4201],ecx
  426e97:	add    BYTE PTR [edi+edi*8+0x5dcc77c9],al
  426e9e:	sub    DWORD PTR [edx-0xcfff69],0x12
  426ea5:	inc    DWORD PTR [eax]
  426ea7:	int3   
  426ea8:	cmp    edi,edi
  426eaa:	inc    esp
  426eab:	pop    eax
  426eac:	jmp    FWORD PTR [edx+0x0]
  426eaf:	enter  0xba,0x52
  426eb3:	inc    DWORD PTR [esi]
  426eb5:	inc    DWORD PTR [eax]
  426eb7:	int3   
  426eb8:	(bad)  
  426eb9:	call   DWORD PTR [edi]
  426ebb:	inc    DWORD PTR [eax]
  426ebd:	call   0xff5cd9c1
  426ec2:	mov    BYTE PTR [eax],al
  426ec4:	cmp    eax,DWORD PTR [eax]
  426ec6:	(bad)  
  426ec7:	call   FWORD PTR [eax+eax*1+0x5b]
  426ecb:	adc    eax,0x8b8397ff
  426ed0:	jmp    FWORD PTR es:[edx-0x334c01]
  426ed7:	dec    DWORD PTR [edi+0xb961ff]
  426edd:	adc    eax,0x86ff
  426ee2:	inc    eax
  426ee3:	add    BYTE PTR [ebx+0x2089ffcc],bh
  426ee9:	add    bl,bh
  426eeb:	cmc    
  426eec:	jmp    edx
  426eee:	push   DWORD PTR [ebp+0xde0008]
  426ef4:	imul   edi,edi,0xffb58300
  426efa:	mov    cl,0xea
  426efc:	push   edi
  426efe:	add    dh,dl
  426f00:	icebp  
  426f01:	jmp    FWORD PTR [edi+edi*8+0xffff68]
  426f08:	jg     0x426f09
  426f0a:	bound  esi,QWORD PTR [edx-0x66007b01]
  426f10:	pop    edx
  426f11:	int3   
  426f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426f13:	add    cl,al
  426f15:	inc    DWORD PTR [eax]
  426f17:	call   DWORD PTR [eax-0x239c01]
  426f1d:	adc    al,0x0
  426f1f:	dec    esp
  426f20:	out    dx,eax
  426f21:	(bad)  
  426f22:	jg     0x426f23
  426f24:	sbb    al,BYTE PTR [ebx-0x37ff01]
  426f2a:	gs jns 0x426f2c
  426f2d:	or     al,0xff
  426f2f:	scas   eax,DWORD PTR es:[edi]
  426f30:	xchg   DWORD PTR [eax],eax
  426f32:	mov    eax,ds:0xcc81cc
  426f37:	add    cl,ah
  426f39:	add    BYTE PTR [ebx],ah
  426f3b:	inc    eax
  426f3c:	(bad)  
  426f3d:	fiadd  WORD PTR [ebx-0x2f7c7983]
  426f43:	push   DWORD PTR [edx+0x5183cc00]
  426f49:	and    DWORD PTR [eax+eax*8+0x5f00c800],0xffffffa6
  426f51:	add    BYTE PTR [edx],ah
  426f53:	dec    DWORD PTR [ebx-0x1]
  426f56:	mov    DWORD PTR [eax],eax
  426f58:	fld    DWORD PTR [eax]
  426f5a:	jb     0x944234e3
  426f60:	fwait
  426f61:	jmp    FWORD PTR [edx]
  426f63:	int3   
  426f64:	push   eax
  426f65:	(bad)  
  426f66:	inc    DWORD PTR [eax]
  426f68:	mov    ah,cl
  426f6a:	and    DWORD PTR [ebp-0x3330a01],0x51ffb6
  426f74:	pop    esp
  426f75:	inc    DWORD PTR [eax]
  426f77:	int3   
  426f78:	ret    
  426f79:	(bad)  
  426f7a:	cld    
  426f7b:	adc    edi,edi
  426f7d:	sub    bh,bh
  426f7f:	cli    
  426f80:	sub    edi,edi
  426f82:	sub    al,BYTE PTR [ebx-0x33ffffa2]
  426f88:	xlat   BYTE PTR ds:[ebx]
  426f89:	jmp    edx
  426f8b:	iret   
  426f8c:	inc    DWORD PTR [eax]
  426f8e:	(bad)  
  426f8f:	(bad)  [edx+0x0]
  426f92:	test   esp,ecx
  426f94:	dec    ecx
  426f95:	add    BYTE PTR [eax],al
  426f97:	push   eax
  426f99:	push   edx
  426f9b:	xchg   esp,eax
  426f9c:	int3   
  426f9d:	in     eax,0xff
  426f9f:	stos   DWORD PTR es:[edi],eax
  426fa0:	sub    bh,bh
  426fa2:	sbb    bh,bh
  426fa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa5:	cmp    edi,0x0
  426fa8:	ss int3 
  426faa:	test   BYTE PTR [esi],ah
  426fac:	call   DWORD PTR [esi-0x1]
  426faf:	lock in eax,dx
  426fb1:	add    ch,dl
  426fb3:	add    BYTE PTR [ecx],cl
  426fb5:	(bad)  
  426fb6:	inc    DWORD PTR [eax]
  426fb8:	rol    DWORD PTR [eax],0x60
  426fbb:	pop    ecx
  426fbc:	inc    DWORD PTR [esi-0x1]
  426fbf:	jno    0x426f72
  426fc1:	cmp    DWORD PTR [ebx-0x501],0x0
  426fc8:	(bad)  
  426fca:	jmp    0x973b:0x32ff3c
  426fd1:	add    al,cl
  426fd3:	sub    DWORD PTR [eax-0x7d],0xffffff89
  426fd7:	add    BYTE PTR [ebp-0x1],ch
  426fda:	(bad)  
  426fdb:	call   0x8041b8df
  426fe0:	jecxz  0x426f6b
  426fe2:	push   ebp
  426fe3:	jmp    DWORD PTR [ebx]
  426fe5:	add    BYTE PTR [eax],al
  426fe7:	and    edi,0x0
  426fea:	xchg   esp,eax
  426feb:	into   
  426fec:	(bad)  
  426fed:	cmp    eax,DWORD PTR [eax]
  426fef:	jg     0x42703d
  426ff1:	adc    DWORD PTR [ecx],0xffffff83
  426ff4:	stos   DWORD PTR es:[edi],eax
  426ff5:	inc    DWORD PTR [ebx-0x13004b00]
  426ffb:	dec    DWORD PTR fs:[ebp-0xc06b01]
  427002:	push   0xff001b89
  427007:	add    BYTE PTR [eax+eax*1+0x51],al
  42700b:	jmp    DWORD PTR [ebx]
  42700e:	push   DWORD PTR ds:0x898bff09
  427014:	lahf   
  427015:	int3   
  427016:	add    BYTE PTR [eax],al
  427018:	clc    
  427019:	add    BYTE PTR [ebx+0x28],dh
  42701c:	call   FWORD PTR [esi]
  42701e:	mov    DWORD PTR [ecx+edi*8-0x1],esp
  427022:	add    BYTE PTR [eax],al
  427024:	sti    
  427025:	int3   
  427026:	inc    DWORD PTR [eax]
  427028:	out    dx,al
  427029:	push   DWORD PTR [eax-0xa2ff01]
  42702f:	jbe    0x42708a
  427031:	inc    DWORD PTR [ebp-0x34]
  427034:	inc    ecx
  427035:	add    bh,bh
  427037:	add    edx,0x0
  42703a:	scas   al,BYTE PTR es:[edi]
  42703b:	sar    bh,0x24
  42703e:	add    cl,ch
  427040:	inc    ebp
  427041:	mov    ecx,ecx
  427043:	int3   
  427044:	and    edi,edi
  427046:	add    bh,bh
  427048:	push   eax
  427049:	add    eax,0xffffffb7
  42704c:	add    BYTE PTR [ebx-0x1],ah
  42704f:	into   
  427050:	jp     0x42701e
  427052:	sub    DWORD PTR [ebx-0x7600ffe5],eax
  427058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427059:	jmp    FWORD PTR [edx+ebp*1]
  42705c:	sub    DWORD PTR [eax+eax*1+0x70],0x12
  427061:	add    BYTE PTR [edx-0x1],cl
  427064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427065:	add    DWORD PTR [ebx-0x597c9c00],0xffffffe8
  42706c:	jmp    FWORD PTR [edi]
  42706e:	push   DWORD PTR [edx]
  427070:	inc    ebx
  427071:	call   FWORD PTR [eax+0x0]
  427074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427075:	(bad)  
  427076:	inc    DWORD PTR [eax]
  427078:	jecxz  0x427079
  42707a:	push   esp
  42707b:	sar    edi,0xfc
  42707e:	mov    DWORD PTR [edi],esi
  427080:	sar    bh,cl
  427082:	mov    bl,0xff
  427084:	cmc    
  427085:	add    BYTE PTR [eax],al
  427087:	xor    DWORD PTR [edx-0x7cfbb300],0xc
  42708e:	int3   
  42708f:	repz push cs
  427091:	adc    DWORD PTR [edi+0x0],0x28
  427095:	inc    DWORD PTR [ebx+0x4007100]
  42709b:	in     al,0xff
  42709d:	xchg   ebx,eax
  42709e:	add    BYTE PTR [edi-0x7c6aff9e],ch
  4270a4:	call   0x9e4171a8
  4270a9:	add    BYTE PTR [edi],al
  4270ab:	or     esp,0xffffffd8
  4270ae:	push   edx
  4270b0:	jns    0x42707e
  4270b2:	fwait
  4270b3:	sbb    esp,0x0
  4270b6:	(bad)  
  4270b7:	jmp    DWORD PTR [eax-0xa01300]
  4270bd:	rol    DWORD PTR [eax],1
  4270bf:	sbb    eax,0xffe800e7
  4270c4:	imul   ecx,DWORD PTR [ecx-0x400100],0xf
  4270cb:	lods   eax,DWORD PTR ds:[esi]
  4270cc:	push   DWORD PTR [edx-0x77]
  4270cf:	cwde   
  4270d0:	sbb    eax,0x77002400
  4270d5:	(bad)  
  4270d6:	inc    DWORD PTR [eax]
  4270d8:	mov    eax,0xff19e500
  4270dd:	sbb    edi,edi
  4270df:	xlat   BYTE PTR ds:[ebx]
  4270e0:	out    dx,eax
  4270e1:	add    BYTE PTR [ebx-0x601],bh
  4270e7:	mov    DWORD PTR [edi+edi*8],edi
  4270ea:	push   esi
  4270eb:	retf   0x6eff
  4270ee:	call   DWORD PTR [ebx-0x8cff78]
  4270f4:	std    
  4270f5:	add    BYTE PTR [eax],al
  4270f7:	jmp    ebp
  4270f9:	inc    DWORD PTR [esi+edx*2+0x2600c800]
  427100:	loopne 0x4270ce
  427102:	sub    al,BYTE PTR [eax]
  427104:	ins    DWORD PTR es:[edi],dx
  427105:	add    bh,bh
  427107:	dec    DWORD PTR [edi]
  427109:	call   FWORD PTR ds:0x8b0048
  42710f:	or     DWORD PTR [edi],ecx
  427111:	mov    DWORD PTR [eax+eax*1+0xffcc88],ecx
  427118:	cmp    bh,0x17
  42711b:	xlat   BYTE PTR ds:[ebx]
  42711c:	inc    edi
  42711e:	(bad)  
  42711f:	fiadd  WORD PTR [eax+0x0]
  427122:	aad    0xff
  427124:	aas    
  427125:	add    bh,bh
  427127:	mov    ebx,ebx
  427129:	call   FWORD PTR [eax-0x3d3324]
  42712f:	inc    ecx
  427130:	and    DWORD PTR [eax],eax
  427132:	inc    ecx
  427133:	mov    esp,esp
  427135:	int3   
  427136:	(bad)  
  427137:	call   DWORD PTR [edx-0x1]
  42713a:	out    0x21,al
  42713c:	add    BYTE PTR [eax-0x7d],ah
  42713f:	fidivr DWORD PTR [edi+edi*8+0x44]
  427143:	add    BYTE PTR [eax+0x0],cl
  427146:	add    BYTE PTR [eax],al
  427148:	notrack call DWORD PTR [ebx]
  42714b:	aad    0xff
  42714d:	jg     0x4270d8
  42714f:	push   ecx
  427150:	(bad)  
  427151:	int3   
  427152:	jg     0x427154
  427154:	popf   
  427155:	add    BYTE PTR [eax],al
  427157:	sbb    ebp,0xffffffff
  42715a:	fld    DWORD PTR [edi+edi*8-0x29]
  42715e:	or     DWORD PTR [edi-0x33d17cfe],0x5f
  427165:	inc    DWORD PTR [eax]
  427167:	add    BYTE PTR [eax],bl
  427169:	dec    edx
  42716b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42716c:	dec    DWORD PTR [ebx-0x15c57d]
  427172:	test   bh,bh
  427174:	push   ebx
  427175:	inc    DWORD PTR [eax]
  427177:	call   FWORD PTR [eax+eax*1+0x8]
  42717b:	ret    0xf083
  42717e:	add    BYTE PTR [edx],bh
  427180:	lea    eax,[eax]
  427182:	cmp    eax,0xff000c83
  427187:	dec    DWORD PTR [ebx]
  427189:	jmp    FWORD PTR [ebp-0x27]
  42718c:	call   ebp
  42718e:	add    BYTE PTR [ecx],bh
  427190:	add    eax,DWORD PTR [eax]
  427192:	jp     0x427193
  427194:	adc    eax,0x38ffff00
  427199:	call   FWORD PTR [edi]
  42719b:	push   edi
  42719c:	jmp    DWORD PTR [edx]
  42719e:	push   DWORD PTR [ebx+0x6e]
  4271a1:	add    cl,al
  4271a3:	push   DWORD PTR [esi+0x7ffccff]
  4271a9:	inc    DWORD PTR [eax]
  4271ab:	add    eax,0x39cc38ff
  4271b0:	push   ss
  4271b1:	push   ecx
  4271b3:	sbb    DWORD PTR [ebx+0x78ffff83],0xffffffff
  4271ba:	icebp  
  4271bb:	rol    BYTE PTR [eax],1
  4271bd:	or     eax,0xff0337ff
  4271c2:	stc    
  4271c3:	jmp    FWORD PTR [esi]
  4271c5:	add    BYTE PTR [ebx-0x4d00287d],al
  4271cb:	mov    esp,0x20ff3700
  4271d0:	push   eax
  4271d1:	add    BYTE PTR [ecx-0x76007f7d],ch
  4271d7:	cmp    DWORD PTR [ebx-0x1],0x6b
  4271db:	xor    BYTE PTR [eax],al
  4271dd:	dec    ecx
  4271de:	(bad)  
  4271df:	cmp    eax,0xffd50071
  4271e4:	inc    ebx
  4271e5:	(bad)  
  4271e6:	inc    DWORD PTR [ebx+0x7c0aff45]
  4271ec:	(bad)  
  4271ed:	std    
  4271ee:	(bad)  
  4271ef:	js     0x427219
  4271f1:	dec    DWORD PTR [edi]
  4271f3:	add    BYTE PTR [eax+eax*1],dh
  4271f6:	inc    DWORD PTR [ebx+0xaa1005d]
  4271fc:	dec    DWORD PTR [esi-0xb97000]
  427202:	stos   DWORD PTR es:[edi],eax
  427203:	call   DWORD PTR [eax]
  427205:	(bad)  
  427206:	(bad)  
  427207:	(bad)  
  427208:	jns    0x427209
  42720a:	add    edx,ecx
  42720c:	or     DWORD PTR [esi],0xffffff83
  42720f:	mov    ebx,0xff86ffa0
  427214:	(bad)  
  427216:	mov    edi,edi
  427218:	sbb    ah,cl
  42721a:	adc    al,0x17
  42721c:	int3   
  42721d:	(bad)  
  42721f:	inc    ebx
  427220:	inc    esp
  427221:	call   FWORD PTR [esi+0x0]
  427224:	pop    esp
  427225:	(bad)  
  427226:	inc    DWORD PTR [eax]
  427228:	outs   dx,DWORD PTR ds:[esi]
  427229:	add    BYTE PTR [edi-0x5d],ch
  42722c:	add    BYTE PTR [eax],dh
  42722e:	jmp    DWORD PTR [esi]
  427230:	inc    edi
  427231:	(bad)  
  427232:	jns    0x427234
  427234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427235:	(bad)  
  427236:	(bad)  
  427237:	call   FWORD PTR [esi]
  427239:	mov    DWORD PTR [edx+ebx*8-0x1],ecx
  42723d:	rol    BYTE PTR [eax],1
  42723f:	or     al,0x74
  427241:	jmp    FWORD PTR [edx-0x3333c401]
  427247:	add    BYTE PTR [eax-0xc5ae00],bl
  42724d:	cmp    bh,bh
  42724f:	in     eax,0x65
  427251:	int3   
  427252:	pop    esi
  427253:	sub    edx,0x0
  427256:	(bad)  
  427257:	dec    DWORD PTR [edi-0x1]
  42725a:	sbb    al,0xbe
  42725c:	add    BYTE PTR [edi+edi*8+0xb],ch
  427260:	in     eax,dx
  427261:	add    BYTE PTR [edi+0x0],ah
  427264:	adc    BYTE PTR [eax],al
  427266:	cmp    edi,0xffffffc8
  427269:	cmp    DWORD PTR [ebx+edx*2-0x1],0x7d
  42726e:	mov    DWORD PTR [edx-0x13],edx
  427271:	or     esi,0xffffffff
  427274:	pop    edi
  427275:	inc    DWORD PTR [ebx+0x57ffc0ff]
  42727b:	outs   dx,DWORD PTR ds:[esi]
  42727c:	call   DWORD PTR [ecx]
  42727e:	add    BYTE PTR [esi+0x34],dh
  427281:	add    BYTE PTR [edx-0xd57d],ch
  427287:	dec    DWORD PTR [ebx-0x1]
  42728a:	and    cl,BYTE PTR [ebx-0x1c33dc00]
  427290:	fld    QWORD PTR [eax]
  427292:	retf   
  427293:	(bad)  
  427294:	mov    eax,0xeccc83ff
  427299:	and    ebx,0x31
  42729c:	cmp    DWORD PTR [edx+0x59a6cc],0xfffffff2
  4272a3:	add    cl,bh
  4272a5:	(bad)  
  4272a6:	(bad)  
  4272a7:	inc    DWORD PTR [edx]
  4272a9:	inc    DWORD PTR [ecx-0x333d2]
  4272af:	mov    ss,WORD PTR [eax]
  4272b1:	add    BYTE PTR [edi-0x7d],al
  4272b4:	dec    esp
  4272b5:	add    bh,bh
  4272b7:	add    BYTE PTR [edx-0x7cc46501],ah
  4272bd:	cld    
  4272be:	add    bl,bl
  4272c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4272c1:	jmp    FWORD PTR [edi-0x7c000500]
  4272c7:	(bad)  
  4272c8:	fld    DWORD PTR [eax]
  4272ca:	ret    0x3
  4272cd:	adc    DWORD PTR [ecx+0xc001a46],ecx
  4272d3:	and    DWORD PTR [eax-0x77],0xffffffff
  4272d7:	mov    edx,edi
  4272d9:	call   ebx
  4272db:	idiv   edi
  4272dd:	verw   WORD PTR [esi-0x7b]
  4272e1:	cmp    DWORD PTR [eax-0x1],0xfffffff8
  4272e5:	add    bh,bh
  4272e7:	xor    DWORD PTR [ebp+0x776400],0xffffffee
  4272ee:	add    al,dh
  4272f0:	dec    esi
  4272f1:	(bad)  
  4272f2:	sti    
  4272f3:	(bad)  
  4272f4:	aas    
  4272f5:	add    bh,bh
  4272f7:	add    BYTE PTR [ecx],ah
  4272f9:	jmp    ecx
  4272fb:	sbb    eax,0x6e892700
  427300:	pop    edx
  427301:	mov    esi,eax
  427303:	add    BYTE PTR [eax+eax*1-0xf1007d],dh
  42730a:	pusha  
  42730b:	pusha  
  42730c:	(bad)  
  42730d:	std    
  42730e:	push   ebx
  427310:	push   edx
  427311:	int3   
  427312:	js     0x427297
  427314:	jo     0x427316
  427316:	mov    edi,edi
  427318:	daa    
  427319:	add    ah,dh
  42731b:	in     al,0x0
  42731d:	mov    eax,0xcc68ab00
  427322:	in     al,dx
  427323:	sbb    DWORD PTR [esi],0xffffff89
  427326:	(bad)  
  427327:	(bad)  
  427328:	fadd   DWORD PTR [ebx+0x460026e2]
  42732e:	int3   
  42732f:	stc    
  427330:	dec    esi
  427331:	jmp    FWORD PTR [eax-0x7c0b00]
  427337:	jmp    DWORD PTR ds:0xff5264cc
  42733d:	jno    0x42730b
  42733f:	jl     0x4272e6
  427341:	mov    eax,edi
  427343:	mov    DWORD PTR [edi-0x3c00ff34],edi
  427349:	inc    DWORD PTR [edi-0x7cc3ff67]
  42734f:	ror    esp,1
  427351:	inc    DWORD PTR [ecx]
  427353:	add    BYTE PTR [edi-0x65ff7677],ah
  427359:	inc    eax
  42735b:	in     eax,0xcc
  42735d:	stos   DWORD PTR es:[edi],eax
  42735e:	add    BYTE PTR [edi],dh
  427360:	imul   eax,DWORD PTR [eax],0xffffff8c
  427363:	add    BYTE PTR [eax-0x1c00ff01],ch
  427369:	mov    DWORD PTR [ebp+0x2e],ebx
  42736c:	dec    DWORD PTR [ecx-0x7c4a0f01]
  427372:	cmp    bh,0x96
  427375:	add    bh,bh
  427377:	(bad)  
  427378:	jg     0x427379
  42737a:	inc    edx
  42737b:	jnp    0x42737c
  42737d:	jmp    0xff9d:0x9b94ff
  427384:	ret    
  427385:	dec    DWORD PTR [ecx-0xc768334]
  42738b:	adc    DWORD PTR [eax],eax
  42738d:	and    edi,edi
  42738f:	xor    DWORD PTR [ebx+0x40007c89],0xffffffff
  427396:	inc    DWORD PTR [ebx-0x4fa9ffab]
  42739c:	int3   
  42739d:	and    eax,0xd2a300
  4273a2:	repnz inc DWORD PTR [ecx+0x23ff0000]
  4273a9:	add    ch,bl
  4273ab:	outs   dx,DWORD PTR ds:[esi]
  4273ac:	add    BYTE PTR [ecx-0x1],bh
  4273af:	call   FWORD PTR [edi+edi*8-0xdb764b]
  4273b6:	add    DWORD PTR [ebx+0x2de2ff03],0xffffff89
  4273bd:	ins    BYTE PTR es:[edi],dx
  4273be:	add    BYTE PTR [ecx-0x900066],cl
  4273c4:	hlt    
  4273c5:	add    bh,bh
  4273c7:	dec    DWORD PTR [edi-0xb70b00]
  4273cd:	mov    WORD PTR [ebx+0x9006e51],es
  4273d3:	adc    DWORD PTR ds:0x1100ffcc,0xffffffff
  4273da:	popf   
  4273db:	iret   
  4273dc:	(bad)  
  4273dd:	cmp    bh,bh
  4273df:	push   ebp
  4273e0:	pop    ebp
  4273e1:	push   edi
  4273e3:	adc    DWORD PTR [eax+eax*1],0x0
  4273e7:	adc    DWORD PTR [ebx+0x0],0x6
  4273eb:	rol    DWORD PTR [eax],1
  4273ed:	and    esp,ecx
  4273ef:	shl    BYTE PTR [ecx],1
  4273f1:	add    bl,ah
  4273f3:	add    BYTE PTR [eax+0x6fffffff],dh
  4273f9:	(bad)  
  4273fa:	mov    esp,0xcc45fffe
  4273ff:	and    DWORD PTR [edx-0x47ff7701],ebx
  427405:	add    bh,bh
  427407:	int3   
  427408:	jns    0x42740a
  42740a:	rol    esi,cl
  42740c:	int3   
  42740d:	sbb    eax,DWORD PTR [eax]
  42740f:	cli    
  427410:	js     0x427412
  427412:	and    bh,bh
  427414:	jle    0x427399
  427416:	(bad)  
  427417:	dec    DWORD PTR [ebp-0x1]
  42741a:	popf   
  42741b:	mov    ebx,0x4dccdc00
  427420:	xor    eax,DWORD PTR [eax]
  427422:	jle    0x427424
  427424:	mov    es,WORD PTR [eax]
  427426:	(bad)  
  427427:	jmp    FWORD PTR [ecx-0x7cda5201]
  42742d:	popa   
  42742e:	and    DWORD PTR [edi+0x6b],0xffffff83
  427432:	mov    al,0x83
  427434:	(bad)  
  427436:	int3   
  427437:	add    BYTE PTR [esi+0xc8eeff],bl
  42743d:	hlt    
  42743e:	push   DWORD PTR [eax-0x8700db]
  427444:	clc    
  427445:	mov    edi,edi
  427447:	sbb    DWORD PTR [edx-0x1],0xffffffb8
  42744b:	mov    BYTE PTR [eax],al
  42744d:	bound  eax,QWORD PTR [eax]
  42744f:	outs   dx,DWORD PTR ds:[esi]
  427450:	mov    ax,sp
  427453:	push   edx
  427455:	(bad)  
  427456:	inc    DWORD PTR [ebx+0x46b4ffad]
  42745c:	jmp    DWORD PTR [edi+edi*8]
  42745f:	add    eax,esp
  427461:	inc    DWORD PTR [edx]
  427463:	dec    DWORD PTR [esi-0x500ff77]
  427469:	dec    ebx
  42746b:	jo     0x42746c
  42746d:	test   bh,bh
  42746f:	int    0x9c
  427471:	dec    DWORD PTR [ebx-0x1]
  427474:	ins    BYTE PTR es:[edi],dx
  427475:	add    BYTE PTR [eax],al
  427477:	dec    DWORD PTR [edx-0x7c114a01]
  42747d:	cmp    eax,0xff103689
  427482:	or     al,BYTE PTR [eax]
  427484:	jmp    0x35427588
  427489:	add    ah,bh
  42748b:	data16 add BYTE PTR [ebp-0x7d],dh
  42748f:	inc    edi
  427490:	or     BYTE PTR [eax],al
  427492:	outs   dx,DWORD PTR ds:[esi]
  427493:	call   FWORD PTR [ecx-0x6f010000]
  427499:	jmp    ebx
  42749b:	push   esi
  42749c:	call   DWORD PTR [edi-0x7c7bdf01]
  4274a2:	mov    edi,edi
  4274a4:	mov    ch,0x0
  4274a6:	inc    DWORD PTR [eax]
  4274a8:	(bad)  
  4274a9:	dec    DWORD PTR [edi-0x76c300d2]
  4274af:	fs fdivp st(7),st
  4274b2:	and    edi,edi
  4274b4:	icebp  
  4274b5:	int3   
  4274b6:	int3   
  4274b7:	add    BYTE PTR [ecx-0x1],bh
  4274ba:	outs   dx,BYTE PTR ds:[esi]
  4274bb:	sub    bh,bh
  4274bd:	xchg   ebx,eax
  4274be:	add    BYTE PTR [esi+0x7f],bh
  4274c1:	add    ch,bh
  4274c3:	call   edx
  4274c5:	add    bh,bh
  4274c7:	add    BYTE PTR [esi],al
  4274c9:	add    BYTE PTR [esi-0x763c7cc5],bh
  4274cf:	add    ch,bl
  4274d1:	push   ebp
  4274d3:	call   edx
  4274d5:	add    BYTE PTR [eax],al
  4274d7:	dec    DWORD PTR [ebx-0x1]
  4274da:	mov    esp,0xeaff88ff
  4274e0:	pop    esi
  4274e1:	call   DWORD PTR [edi-0x34]
  4274e4:	cmp    edi,0xffffff83
  4274e7:	add    BYTE PTR [eax],cl
  4274e9:	dec    DWORD PTR [ecx]
  4274eb:	jnp    0x4274ec
  4274ed:	cmc    
  4274ee:	int3   
  4274ef:	mov    dl,0xa7
  4274f1:	inc    eax
  4274f3:	add    BYTE PTR [edi-0x6e33007d],dh
  4274f9:	dec    edi
  4274fb:	jne    0x4274fd
  4274fd:	add    BYTE PTR [ebx+0x120066ba],0xcc
  427504:	ror    DWORD PTR [ecx-0x764bff01],0x89
  42750b:	in     eax,dx
  42750c:	dec    eax
  42750e:	add    BYTE PTR [ebx-0xb2003a],cl
  427514:	mov    bh,bh
  427516:	(bad)  
  427517:	(bad)  
  427518:	cmp    edi,edi
  42751a:	adc    al,BYTE PTR [edi-0x7d]
  42751d:	or     cl,ah
  42751f:	sub    eax,0x4d0014
  427524:	push   ecx
  427525:	inc    DWORD PTR [eax]
  427527:	dec    DWORD PTR [edi+edi*8+0x36]
  42752b:	loop   0x4274f9
  42752d:	mov    al,0x0
  42752f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427530:	and    edi,edi
  427532:	mov    edi,0x68ff
  427537:	jmp    DWORD PTR [ebx+0x0]
  42753a:	add    eax,0xff14005e
  42753f:	xor    BYTE PTR [esi-0x32008c00],dh
  427545:	inc    DWORD PTR [eax]
  427547:	dec    ecx
  427549:	(bad)  
  42754a:	cmp    eax,0xff2cff16
  42754f:	test   DWORD PTR [ecx-0xffbe01],ecx
  427555:	inc    DWORD PTR [ebx+0x7e00dd00]
  42755b:	leave  
  42755c:	int3   
  42755d:	(bad)  
  42755e:	(bad)  
  42755f:	cmp    esi,ebx
  427561:	jmp    DWORD PTR [eax-0xda34]
  427567:	int3   
  427568:	out    0xff,eax
  42756a:	inc    DWORD PTR [eax]
  42756c:	add    bh,bh
  42756e:	int3   
  42756f:	jmp    DWORD PTR [ebx]
  427571:	ss cmp edi,0xffffffff
  427575:	sbb    bh,bh
  427577:	mov    ecx,0xffff9000
  42757c:	test   eax,0x202288ff
  427581:	jecxz  0x427583
  427583:	add    bh,bh
  427585:	mov    BYTE PTR [eax],0xfa
  427588:	jmp    DWORD PTR [eax]
  42758a:	(bad)  
  42758b:	(bad)  
  42758c:	cld    
  42758d:	dec    eax
  42758f:	es sub ebx,esp
  427592:	inc    DWORD PTR [eax]
  427594:	inc    DWORD PTR [ebp-0x7cff6a00]
  42759a:	add    bh,bh
  42759c:	add    eax,0xeae3eecc
  4275a1:	jmp    0xf141f8a6
  4275a6:	int3   
  4275a7:	popf   
  4275a8:	dec    DWORD PTR [ebp+0xe7ffff]
  4275ae:	dec    esp
  4275af:	rcl    BYTE PTR [ebx-0x45],0x0
  4275b3:	(bad)  
  4275b4:	(bad)  
  4275b5:	in     eax,dx
  4275b6:	add    BYTE PTR [edx-0x1],cl
  4275b9:	sub    al,0x0
  4275bb:	add    BYTE PTR [esi-0x1],bh
  4275be:	adc    al,0xc2
  4275c0:	into   
  4275c1:	push   ebx
  4275c2:	(bad)  
  4275c3:	(bad)  
  4275c4:	(bad)  
  4275c5:	jmp    0x8f4235c9
  4275ca:	(bad)  
  4275cb:	(bad)  
  4275cc:	mov    edx,0x9a54b6ff
  4275d1:	push   ebx
  4275d2:	inc    DWORD PTR [eax]
  4275d4:	call   FWORD PTR [ebp-0x77]
  4275d7:	out    dx,eax
  4275d8:	add    BYTE PTR [edx+0x0],al
  4275db:	jmp    DWORD PTR [ebx+0x5da3fd00]
  4275e1:	cmp    al,0x89
  4275e3:	cmp    edi,0xffffff97
  4275e6:	add    BYTE PTR [eax-0x1],ch
  4275e9:	mov    ebx,0x11ff00
  4275ee:	push   ebx
  4275ef:	add    ebx,DWORD PTR [eax]
  4275f1:	cmp    edi,0xe20083
  4275f7:	lods   eax,DWORD PTR ds:[esi]
  4275f8:	inc    DWORD PTR [ecx-0x1]
  4275fb:	add    BYTE PTR [eax-0x1],al
  4275fe:	inc    esi
  4275ff:	cli    
  427600:	imul   edx,esi,0xffffffff
  427603:	dec    esp
  427605:	sbb    eax,0x16ffc9ff
  42760a:	(bad)  
  42760b:	push   DWORD PTR [edx+0x7a477c00]
  427611:	inc    WORD PTR [eax]
  427614:	call   DWORD PTR [ebx+0x0]
  427617:	scas   eax,DWORD PTR es:[edi]
  427618:	adc    ebp,0xffffffff
  42761b:	add    cl,al
  42761d:	int3   
  42761e:	cs loopne 0x427651
  427621:	ud0    edi,edi
  427624:	mov    eax,ecx
  427626:	mov    DWORD PTR [eax-0x76de01],ebp
  42762c:	pop    es
  42762d:	and    edi,0x3c
  427630:	or     eax,0x52
  427635:	xor    al,0xff
  427637:	mov    dh,0x83
  427639:	(bad)  
  42763a:	add    DWORD PTR [eax],0x2d
  42763d:	add    BYTE PTR [ecx-0x630a30],ah
  427643:	(bad)  
  427644:	inc    DWORD PTR [ecx]
  427646:	sub    DWORD PTR [edx-0x1],0x4a
  42764a:	cmp    edi,0x20
  42764d:	int3   
  42764e:	mov    ch,0x99
  427650:	jbe    0x42762d
  427652:	(bad)  
  427653:	(bad)  
  427654:	push   DWORD PTR [ebp+0x5effab00]
  42765a:	add    bh,bh
  42765c:	ins    DWORD PTR es:[edi],dx
  42765d:	jmp    eax
  42765f:	push   edx
  427660:	sub    esi,ecx
  427662:	inc    DWORD PTR [eax]
  427664:	add    BYTE PTR [edi],dh
  427666:	and    DWORD PTR ds:0x8300e000,0xfffffffd
  42766d:	and    DWORD PTR [edi*8-0xf407],0xffffffff
  427675:	aas    
  427676:	add    BYTE PTR [eax],bl
  427678:	add    BYTE PTR [ecx-0x7c780001],bh
  42767e:	and    cl,BYTE PTR [edi-0x7c002f57]
  427684:	add    cl,dh
  427686:	push   DWORD PTR [eax-0x767ccc01]
  42768c:	loop   0x42768d
  42768e:	(bad)  
  42768f:	pushf  
  427690:	and    edi,DWORD PTR [edi-0x33000001]
  427696:	int3   
  427697:	mov    ch,0xff
  427699:	lea    ecx,[ecx-0x4d007201]
  42769f:	sti    
  4276a0:	inc    ecx
  4276a1:	sbb    cl,BYTE PTR [ecx+0xe000ff]
  4276a7:	cld    
  4276a8:	inc    DWORD PTR [eax]
  4276aa:	mov    esp,ecx
  4276ac:	scas   eax,DWORD PTR es:[edi]
  4276ad:	push   DWORD PTR [ecx]
  4276af:	loop   0x427694
  4276b1:	mov    al,0x0
  4276b3:	add    BYTE PTR [eax],al
  4276b5:	push   edi
  4276b6:	call   FWORD PTR [edi+0x0]
  4276b9:	rol    BYTE PTR [eax],1
  4276bb:	inc    DWORD PTR [eax+eax*1-0x534d7ea0]
  4276c2:	or     esp,0xffffffff
  4276c5:	pop    esi
  4276c6:	or     DWORD PTR [esi],0xffffffff
  4276c9:	mov    dh,0xff
  4276cb:	adc    DWORD PTR [esi],0x0
  4276ce:	test   BYTE PTR [edx],bl
  4276d0:	or     al,0xab
  4276d2:	inc    DWORD PTR [eax]
  4276d4:	dec    DWORD PTR [edx-0x7d]
  4276d7:	dec    edx
  4276d8:	add    dh,bh
  4276da:	add    BYTE PTR [eax],al
  4276dc:	dec    edx
  4276dd:	(bad)  
  4276de:	std    
  4276df:	inc    esp
  4276e0:	sub    DWORD PTR [edi+edi*8],esi
  4276e3:	add    BYTE PTR [ecx+0xcd89b5],cl
  4276e9:	xor    BYTE PTR [ebx-0x1100d301],al
  4276ef:	mov    ebx,0xffbde1
  4276f4:	add    BYTE PTR [eax],bh
  4276f6:	add    BYTE PTR [ecx],ch
  4276f8:	adc    DWORD PTR [edi-0x1],0xffffffff
  4276fc:	sub    al,0x0
  4276fe:	dec    esi
  4276ff:	test   BYTE PTR [esp+eiz*2-0x1],cl
  427703:	add    bh,bh
  427705:	adc    eax,0xe500f283
  42770a:	add    BYTE PTR [eax],al
  42770c:	bound  eax,QWORD PTR [eax]
  42770e:	mov    bh,0x38
  427710:	mov    eax,esp
  427712:	(bad)  
  427713:	inc    DWORD PTR [eax]
  427715:	mov    DWORD PTR [eax],0x83ffb6
  42771b:	push   edi
  42771d:	mov    esi,edi
  42771f:	mov    eax,0xff00c4af
  427724:	and    DWORD PTR [edx+0x0],0x20
  427728:	jmp    DWORD PTR [ecx-0x1]
  42772b:	call   DWORD PTR [ebx+eax*4-0xe37f46f]
  427732:	(bad)  
  427733:	(bad)  
  427734:	push   edx
  427736:	mov    DWORD PTR ds:0xffffeeff,eax
  42773c:	jmp    0xd2d347ca
  427741:	and    edi,edi
  427743:	dec    esp
  427745:	test   al,0xff
  427747:	es jmp ebx
  42774a:	(bad)  
  42774b:	(bad)  
  42774c:	std    
  42774d:	add    BYTE PTR [esi+0x8a23f8],ch
  427753:	inc    DWORD PTR [eax]
  427755:	scas   al,BYTE PTR es:[edi]
  427756:	mov    DWORD PTR [ebx],edi
  427758:	mov    ecx,esi
  42775a:	int3   
  42775b:	add    ch,dh
  42775d:	(bad)  
  42775e:	out    dx,al
  42775f:	sbb    al,0x29
  427761:	add    cl,ah
  427763:	or     DWORD PTR [ecx-0x331f33de],0xffffff8c
  42776a:	or     esp,0x28
  42776d:	int3   
  42776e:	inc    ebx
  42776f:	inc    edx
  427770:	fsub   st(5),st
  427772:	add    ah,cl
  427774:	mov    DWORD PTR [esi-0x34],esp
  427777:	mov    ds:0xffcc3aff,eax
  42777c:	mov    cl,0xff
  42777e:	xor    BYTE PTR [edi-0x7642db],al
  427784:	inc    DWORD PTR [ebx-0x34]
  427787:	mov    cl,0xff
  427789:	fiadd  WORD PTR [ebx+0x26ff93ff]
  42778f:	fsub   QWORD PTR [ecx+0x3]
  427792:	inc    DWORD PTR [eax]
  427794:	mov    DWORD PTR [ecx-0x7d],edi
  427797:	adc    eax,0xff005e00
  42779c:	mov    WORD PTR [ecx-0x28d70188],cs
  4277a2:	add    bh,bh
  4277a4:	add    BYTE PTR [esi+0x0],bh
  4277a7:	pop    ebx
  4277a8:	and    DWORD PTR [eax-0x34],0xffffffff
  4277ac:	mov    DWORD PTR [eax],eax
  4277ae:	or     al,BYTE PTR [ebx-0x7c76f1]
  4277b4:	mov    DWORD PTR [ebx],esi
  4277b6:	add    bl,al
  4277b8:	adc    DWORD PTR ds:0xff5b00ff,0xffffffbc
  4277bf:	(bad)  
  4277c0:	pushf  
  4277c1:	xor    eax,DWORD PTR [eax]
  4277c3:	add    bh,bh
  4277c5:	jl     0x4277c7
  4277c7:	popf   
  4277c8:	push   esi
  4277ca:	add    bh,bh
  4277cc:	fld    DWORD PTR [eax]
  4277ce:	outs   dx,BYTE PTR ds:[esi]
  4277cf:	mov    bl,0x25
  4277d1:	sbb    edi,edi
  4277d3:	dec    esp
  4277d5:	fcos   
  4277d7:	sbb    al,0x83
  4277d9:	inc    edx
  4277da:	inc    DWORD PTR [ebx+0x13520042]
  4277e0:	lods   al,BYTE PTR ds:[esi]
  4277e1:	xlat   BYTE PTR ds:[ebx]
  4277e2:	inc    DWORD PTR [eax]
  4277e4:	jmp    FWORD PTR [edi+edi*8+0x7b]
  4277e8:	add    BYTE PTR [ecx-0xe2ff01],ch
  4277ee:	mov    dl,0x5d
  4277f0:	pop    esi
  4277f1:	das    
  4277f2:	inc    DWORD PTR [eax]
  4277f4:	xor    esi,0xffffffcc
  4277f7:	adc    eax,DWORD PTR [eax]
  4277f9:	cmp    edi,edi
  4277fb:	push   DWORD PTR [edx]
  4277fd:	mov    DWORD PTR [edx-0x2c3da0],ecx
  427803:	(bad)  
  427804:	jmp    FWORD PTR [ebx-0x1338b00]
  42780a:	dec    DWORD PTR [ecx-0xb4f0035]
  427810:	push   esi
  427811:	adc    bh,bh
  427813:	add    bh,bh
  427815:	mov    eax,DWORD PTR [ebx+0xe2ff79]
  42781b:	mov    ebx,ebp
  42781d:	add    esi,0xffffff85
  427820:	xor    dh,bl
  427822:	add    BYTE PTR [ebx+0x2000f600],al
  427828:	add    dl,cl
  42782a:	inc    DWORD PTR [eax]
  42782c:	fiadd  WORD PTR [eax]
  42782e:	cmp    al,0x40
  427830:	add    eax,0xcc0017
  427835:	out    dx,eax
  427836:	add    edx,0xffffffff
  427839:	outs   dx,BYTE PTR ds:[esi]
  42783a:	inc    DWORD PTR [eax]
  42783c:	sbb    al,0x0
  42783e:	xor    al,0x74
  427840:	add    al,0xd2
  427842:	(bad)  
  427843:	inc    DWORD PTR [eax]
  427845:	int    0x0
  427847:	loopne 0x427848
  427849:	(bad)  
  42784a:	(bad)  
  42784b:	call   DWORD PTR [edi]
  42784d:	dec    edx
  42784f:	ror    DWORD PTR [edx-0x3d],0x83
  427853:	(bad)  
  427854:	jmp    DWORD PTR [eax+eax*1-0x7cfd7cbe]
  42785b:	add    cl,dl
  42785d:	add    al,cl
  42785f:	fdivrp st(5),st
  427861:	xor    al,BYTE PTR [eax]
  427863:	(bad)  
  427864:	dec    ecx
  427866:	add    BYTE PTR [edx+0x0],bl
  427869:	out    0x0,al
  42786b:	or     DWORD PTR [eax-0x7011a07d],0x6d
  427872:	int3   
  427873:	inc    DWORD PTR [eax]
  427875:	jae    0x427877
  427877:	dec    edi
  427878:	cmp    esp,0x0
  42787b:	and    DWORD PTR [edi+0x0],0x7d
  42787f:	mov    edx,0xffff5c19
  427884:	add    BYTE PTR [ebx],ah
  427886:	sub    DWORD PTR [edi-0x1],0x4e
  42788a:	cmp    edi,0xffffffce
  42788d:	sbb    DWORD PTR [edi],0x12
  427890:	dec    esi
  427891:	(bad)  
  427893:	add    BYTE PTR [ebx-0x8e004c],al
  427899:	ins    DWORD PTR es:[edi],dx
  42789a:	inc    DWORD PTR [eax]
  42789c:	fadd   QWORD PTR [ebx+0x471b0314]
  4278a2:	inc    DWORD PTR [ebx+0x62008300]
  4278a8:	add    BYTE PTR [edi+edi*8-0x77],bl
  4278ac:	add    DWORD PTR [eax],eax
  4278ae:	mov    bl,0x95
  4278b0:	shl    BYTE PTR [ebp+0x0],0x0
  4278b4:	add    BYTE PTR [edx+0x0],cl
  4278b7:	xor    edi,edi
  4278b9:	leave  
  4278ba:	dec    DWORD PTR [ecx+0x41b9006c]
  4278c0:	gs cdq 
  4278c2:	or     esp,0xffffffff
  4278c5:	push   ss
  4278c6:	add    BYTE PTR [esi-0xffc034],ch
  4278cc:	inc    edi
  4278cd:	call   DWORD PTR ds:0xff32f619
  4278d3:	add    bh,bh
  4278d5:	pop    ss
  4278d6:	or     DWORD PTR [ebp-0x33008301],0xffffffaf
  4278dd:	add    bh,cl
  4278df:	mov    cl,0xf5
  4278e1:	push   ecx
  4278e2:	inc    DWORD PTR [ebx-0x7bffe301]
  4278e8:	sub    DWORD PTR [ebp-0x34],0xffffffff
  4278ec:	(bad)  
  4278ed:	jmp    DWORD PTR [edx]
  4278ef:	mov    ebp,0x83ff79c6
  4278f4:	and    DWORD PTR [eax+0x7600d800],0xffffffff
  4278fb:	jmp    DWORD PTR [ebx]
  4278fd:	add    BYTE PTR [edi],dh
  4278ff:	push   ecx
  427900:	xchg   ebp,eax
  427901:	push   edi
  427902:	inc    DWORD PTR [eax]
  427904:	add    ch,dl
  427906:	call   FWORD PTR [ecx-0x76008d34]
  42790c:	cmc    
  42790d:	add    BYTE PTR [edx],bh
  42790f:	gs into 
  427911:	mov    esp,0xbaffffff
  427916:	mov    DWORD PTR [eax-0x1],esi
  427919:	jns    0xefc5a91e
  42791f:	mov    ds:0xffffb93d,al
  427924:	add    BYTE PTR ds:0x2300d8ff,ch
  42792a:	inc    DWORD PTR [ebx+0x4e988349]
  427930:	or     eax,0x83d4
  427935:	jne    0x427936
  427937:	dec    edx
  427938:	(bad)  
  427939:	fiadd  DWORD PTR [ebx+0x5dffd000]
  42793f:	addr16 xchg esp,eax
  427941:	pusha  
  427942:	int3   
  427943:	int3   
  427944:	(bad)  
  427945:	ds dec edi
  427948:	(bad)  
  427949:	fld    QWORD PTR [ebx+0x13003900]
  42794f:	in     eax,0x53
  427951:	inc    esp
  427952:	add    BYTE PTR [eax],al
  427954:	push   DWORD PTR [ebx-0x1]
  427957:	test   DWORD PTR [eax],0x70ccff3f
  42795d:	dec    DWORD PTR [eax+esi*2+0x7]
  427961:	sbb    edi,edi
  427963:	(bad)  
  427964:	jmp    DWORD PTR [edi+edi*8-0x33f80078]
  42796b:	add    BYTE PTR [edi],ah
  42796d:	(bad)  
  42796e:	cmp    bh,cl
  427970:	mov    ah,0x6b
  427972:	mov    DWORD PTR [eax],eax
  427974:	or     DWORD PTR [esi-0x34],0xffffffe1
  427978:	adc    DWORD PTR [esp+ecx*8],0xffffff83
  42797c:	cmp    edi,0x12
  42797f:	push   ds
  427980:	imul   edi,DWORD PTR [ecx+ecx*4],0x5affff
  427987:	test   al,0xff
  427989:	adc    edi,edi
  42798b:	add    BYTE PTR [esi-0x412b2401],dl
  427991:	pop    edi
  427992:	(bad)  
  427993:	(bad)  
  427994:	jmp    FWORD PTR [ebp+0x0]
  427997:	sahf   
  427998:	push   eax
  42799a:	add    BYTE PTR [eax],al
  42799c:	inc    esi
  42799d:	add    bh,bl
  42799f:	(bad)  
  4279a0:	in     eax,dx
  4279a1:	inc    DWORD PTR fs:[eax]
  4279a4:	int3   
  4279a5:	popf   
  4279a6:	add    BYTE PTR [ecx-0x77],ch
  4279a9:	inc    ecx
  4279aa:	add    bh,bh
  4279ac:	sar    bh,1
  4279ae:	and    al,0xc9
  4279b0:	jl     0x427977
  4279b2:	add    bh,bh
  4279b4:	add    BYTE PTR ds:0x17ff22ff,ch
  4279ba:	inc    DWORD PTR [eax]
  4279bc:	jbe    0x427941
  4279be:	jbe    0x427987
  4279c0:	and    ch,BYTE PTR [esi+0x0]
  4279c3:	int3   
  4279c4:	dec    DWORD PTR [esi]
  4279c6:	int3   
  4279c7:	pop    ecx
  4279c8:	push   ecx
  4279ca:	inc    DWORD PTR [eax]
  4279cc:	imul   eax,DWORD PTR [eax],0xb2315deb
  4279d2:	inc    DWORD PTR [eax]
  4279d4:	add    bl,dh
  4279d6:	push   esi
  4279d8:	jmp    DWORD PTR [edi]
  4279da:	add    bh,bh
  4279dc:	lods   eax,DWORD PTR ds:[esi]
  4279dd:	push   esp
  4279df:	sub    DWORD PTR [eax],edi
  4279e1:	jmp    0xeb83:0x3a0000ff
  4279e8:	push   DWORD PTR [edi+edi*8]
  4279eb:	add    BYTE PTR ds:0x2a2d5bff,dh
  4279f1:	int    0xcc
  4279f3:	dec    DWORD PTR [ecx+0xb30050]
  4279f9:	push   esi
  4279fa:	(bad)  
  4279fb:	call   edi
  4279fd:	add    BYTE PTR [esi],al
  4279ff:	cld    
  427a00:	ss inc ecx
  427a02:	inc    DWORD PTR [eax]
  427a04:	call   FWORD PTR [ebx+eax*4]
  427a07:	clc    
  427a08:	add    BYTE PTR [ecx],al
  427a0a:	add    DWORD PTR [eax],0xffffffc4
  427a0d:	sub    DWORD PTR [ecx],0xffffffaa
  427a10:	push   ecx
  427a11:	mov    ah,0xcc
  427a13:	add    BYTE PTR [eax],al
  427a15:	xchg   ebx,eax
  427a16:	add    BYTE PTR [ecx],dh
  427a18:	add    BYTE PTR [eax+eax*1],cl
  427a1b:	add    BYTE PTR [ecx-0x2cb9c101],bh
  427a21:	loop   0x427a23
  427a23:	add    bh,bh
  427a25:	pop    esi
  427a26:	and    DWORD PTR [eax],0xffffff83
  427a29:	inc    ebx
  427a2a:	inc    DWORD PTR [eax]
  427a2c:	loopne 0x427a2e
  427a2e:	fidivr DWORD PTR [ecx]
  427a30:	cmc    
  427a31:	pop    edx
  427a32:	dec    esp
  427a34:	add    BYTE PTR [ecx+0x51ffc8cc],cl
  427a3a:	add    BYTE PTR [eax],al
  427a3c:	clc    
  427a3d:	(bad)  
  427a3e:	out    dx,eax
  427a3f:	std    
  427a40:	or     eax,0xffff83f5
  427a45:	mov    ecx,DWORD PTR [ecx-0xdbfff5]
  427a4b:	int3   
  427a4c:	loopne 0x427a4e
  427a4e:	xor    ch,BYTE PTR [ecx]
  427a50:	xchg   ebx,eax
  427a51:	std    
  427a52:	add    BYTE PTR [eax],al
  427a54:	int3   
  427a55:	mov    ebx,0xa7ff2689
  427a5a:	add    BYTE PTR [eax],al
  427a5c:	pushf  
  427a5d:	add    DWORD PTR [edi+ecx*2-0x7cc85a],0xffffff83
  427a65:	arpl   di,di
  427a67:	adc    al,0x0
  427a69:	jle    0x427a6b
  427a6b:	call   DWORD PTR [ecx+0x598e99ff]
  427a71:	add    eax,0xd983ccff
  427a76:	call   FWORD PTR [ecx-0x76ff5401]
  427a7c:	ret    0xabff
  427a7f:	xor    dl,BYTE PTR [ebp-0x5]
  427a82:	(bad)  
  427a83:	(bad)  
  427a84:	dec    ebx
  427a86:	add    BYTE PTR [edx+0x69ff],ch
  427a8c:	cli    
  427a8d:	call   FWORD PTR [edx]
  427a8f:	xor    al,0x93
  427a91:	mov    es,WORD PTR [eax]
  427a93:	add    BYTE PTR [ebx+0x74001b],al
  427a99:	add    eax,DWORD PTR [ebx+0x50ff5383]
  427a9f:	pop    edx
  427aa0:	ds mov ebx,0xecffff00
  427aa6:	dec    esi
  427aa8:	add    dl,dl
  427aaa:	add    BYTE PTR [eax],al
  427aac:	(bad)  
  427aae:	xor    BYTE PTR [eax+0xff3d3f],bl
  427ab4:	inc    DWORD PTR [edx-0x1]
  427ab7:	int    0x83
  427ab9:	dec    ebx
  427aba:	inc    DWORD PTR [eax]
  427abc:	xor    eax,DWORD PTR [eax]
  427abe:	mov    dl,0x21
  427ac0:	or     DWORD PTR [edi+0x0],ecx
  427ac3:	int3   
  427ac4:	call   DWORD PTR [edx]
  427ac6:	inc    DWORD PTR [eax]
  427ac8:	int3   
  427ac9:	repz cmp edi,0x64
  427acd:	add    BYTE PTR [ecx],ah
  427acf:	mov    esp,0xffffd8a0
  427ad4:	add    BYTE PTR [eax-0x1],bh
  427ad7:	ud0    esp,DWORD PTR [edi+0x0]
  427adb:	(bad)  
  427adc:	in     al,dx
  427add:	push   DWORD PTR [ebp-0x7c7fb502]
  427ae3:	inc    DWORD PTR [ebx+0x3e00ce]
  427ae9:	sub    ah,cl
  427aeb:	jmp    DWORD PTR [eax]
  427aed:	jmp    FWORD PTR [ebx-0x4b]
  427af0:	test   eax,0xffcc8932
  427af5:	jle    0x427af6
  427af7:	cmp    edi,edi
  427af9:	retf   0xff00
  427afc:	loope  0x427aca
  427afe:	les    ebp,FWORD PTR [ebp-0x7c00d45d]
  427b04:	int3   
  427b05:	mov    ah,0xff
  427b07:	out    dx,al
  427b08:	jmp    FWORD PTR [esi]
  427b0a:	add    BYTE PTR [eax],al
  427b0c:	iret   
  427b0d:	(bad)  
  427b0e:	cmp    DWORD PTR [esi-0x7c7c8daa],ebx
  427b14:	call   ebx
  427b16:	add    bl,bl
  427b18:	jmp    FWORD PTR [ecx]
  427b1a:	mov    DWORD PTR [ebx+0xb0fcc90],eax
  427b20:	pusha  
  427b21:	sar    edi,cl
  427b23:	(bad)  
  427b24:	dec    DWORD PTR [eax+0x0]
  427b27:	fadd   DWORD PTR [eax]
  427b29:	mov    esp,0xff4183cc
  427b2e:	cli    
  427b2f:	test   DWORD PTR [edx+ebx*8+0x56ffffcc],esp
  427b36:	add    BYTE PTR [esi-0x7cc001],dl
  427b3c:	(bad)  
  427b40:	or     BYTE PTR [eax+eax*1-0x1],ch
  427b44:	inc    DWORD PTR [edi+edi*8-0x1b7c3c]
  427b4b:	xor    edx,0xffffffff
  427b4e:	iret   
  427b4f:	stos   DWORD PTR es:[edi],eax
  427b50:	fmul   QWORD PTR [ecx-0x2f000001]
  427b56:	mov    DWORD PTR [ebx+eax*4],ecx
  427b59:	push   ss
  427b5a:	inc    DWORD PTR [ebx+0x4c12ffff]
  427b60:	or     ch,BYTE PTR [edi-0x57010000]
  427b66:	add    BYTE PTR [eax-0x33ffa801],dh
  427b6c:	cmp    DWORD PTR es:[edi+0x2e],0x3
  427b71:	adc    edi,edi
  427b73:	add    bh,bh
  427b75:	xchg   edi,eax
  427b76:	cmp    ebx,0x0
  427b79:	jmp    0x427b7a
  427b7b:	add    BYTE PTR [esi],bh
  427b7d:	add    BYTE PTR [ecx+edi*2+0x3a],bh
  427b81:	jl     0x427b83
  427b83:	mov    DWORD PTR [ebx-0x970065],eax
  427b89:	pop    ebp
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	out    0x89,eax
  427b8e:	jne    0x427be4
  427b90:	add    DWORD PTR [edx+0x2483ffff],edi
  427b96:	(bad)  
  427b97:	(bad)  
  427b98:	jmp    DWORD PTR [esi]
  427b9a:	inc    DWORD PTR [ebx+0x7c81ff68]
  427ba0:	jns    0x427c1b
  427ba2:	int3   
  427ba3:	add    DWORD PTR [eax],0xffffffb7
  427ba6:	adc    DWORD PTR [eax+eax*1+0x3589ff4f],0xffffffff
  427bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427baf:	in     eax,0x93
  427bb1:	test   al,0x83
  427bb3:	(bad)  
  427bb4:	call   esi
  427bb6:	push   DWORD PTR [edx+0x0]
  427bb9:	sbb    al,0xff
  427bbb:	jmp    esi
  427bbd:	mov    DWORD PTR [ecx-0x58],ebp
  427bc0:	or     bl,al
  427bc2:	add    BYTE PTR [eax],al
  427bc4:	add    BYTE PTR [esi+0x0],al
  427bc7:	mov    DWORD PTR [eax],eax
  427bc9:	or     eax,0x8328ffff
  427bce:	outs   dx,BYTE PTR ds:[esi]
  427bcf:	pop    edx
  427bd0:	and    eax,ebx
  427bd2:	add    bh,bh
  427bd4:	add    BYTE PTR [ebx+eax*4-0x78],ch
  427bd8:	add    BYTE PTR [edx+0x0],cl
  427bdb:	(bad)  
  427bdc:	(bad)  
  427bdd:	jmp    DWORD PTR [ebx-0xa2042b]
  427be3:	inc    DWORD PTR [eax]
  427be5:	ja     0x427be6
  427be7:	(bad)  
  427be9:	cwde   
  427bea:	inc    DWORD PTR [eax]
  427bec:	adc    edi,edi
  427bee:	dec    edx
  427bef:	lock outs dx,DWORD PTR ds:[esi]
  427bf1:	push   eax
  427bf2:	(bad)  
  427bf3:	dec    esp
  427bf5:	mov    ?,edi
  427bf7:	retf   
  427bf8:	add    BYTE PTR [ecx],ah
  427bfa:	inc    DWORD PTR [eax]
  427bfc:	push   esi
  427bfd:	(bad)  
  427bfe:	mov    ecx,0xff185f1c
  427c03:	(bad)  
  427c04:	call   DWORD PTR [edi+edi*8]
  427c07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c08:	add    BYTE PTR [eax+eax*1-0xfff7c01],bl
  427c0f:	arpl   WORD PTR [ebp+0xa],ax
  427c12:	inc    DWORD PTR [eax]
  427c14:	call   DWORD PTR [edi-0x34]
  427c17:	sub    eax,0xff1d00
  427c1c:	sub    eax,DWORD PTR [eax]
  427c1e:	repz jmp 0x427c9c
  427c21:	int3   
  427c22:	(bad)  
  427c23:	(bad)  
  427c24:	jmp    FWORD PTR [ecx+0x0]
  427c27:	int    0xff
  427c29:	test   al,0x83
  427c2b:	add    BYTE PTR [ebx+eax*4-0x2d],ah
  427c2f:	and    eax,0xcc97d0
  427c34:	int3   
  427c35:	in     eax,dx
  427c36:	add    BYTE PTR [edx-0x3300737d],dh
  427c3c:	outs   dx,BYTE PTR ds:[esi]
  427c3d:	int3   
  427c3e:	imul   edi,edi,0x13
  427c41:	pop    edi
  427c42:	add    DWORD PTR [eax],0x0
  427c45:	mov    WORD PTR [eax],es
  427c47:	sbb    edi,edi
  427c49:	mov    al,ds:0x83248300
  427c4e:	clc    
  427c4f:	sar    esi,cl
  427c51:	pusha  
  427c52:	add    BYTE PTR [eax],al
  427c54:	call   esi
  427c56:	sbb    DWORD PTR [edi+edi*8],0x0
  427c5a:	cmp    edi,0x3c
  427c5d:	(bad)  
  427c5e:	mov    esp,0x831317f3
  427c63:	dec    esp
  427c65:	int    0xff
  427c67:	push   ebp
  427c68:	jmp    DWORD PTR [ecx]
  427c6a:	add    bh,bh
  427c6c:	jbe    0x427c6d
  427c6e:	adc    eax,0xffefa6d1
  427c73:	cmp    edi,0xffffff87
  427c76:	int3   
  427c77:	mov    dl,0xff
  427c79:	in     eax,dx
  427c7a:	int3   
  427c7b:	add    ah,ah
  427c7d:	add    al,cl
  427c7f:	sti    
  427c80:	stos   BYTE PTR es:[edi],al
  427c81:	cmp    DWORD PTR [ebx-0x243301],eax
  427c87:	imul   ecx,esp,0x4b
  427c8a:	int3   
  427c8b:	jmp    DWORD PTR [esp+ecx*8]
  427c8e:	fstp   QWORD PTR [edi+0x8935f8]
  427c94:	dec    esi
  427c96:	dec    DWORD PTR [edx-0xfffd34]
  427c9c:	jo     0x427c21
  427c9e:	mov    cs,WORD PTR [esi+0x1b]
  427ca1:	or     al,BYTE PTR [ebx-0x1c7d00]
  427ca7:	cmp    bh,0xb7
  427caa:	inc    DWORD PTR [eax]
  427cac:	iret   
  427cad:	add    BYTE PTR [ebx-0x21],bh
  427cb0:	test   eax,0xff00007e
  427cb5:	data16 (bad) 
  427cb7:	ds int3 
  427cb9:	stc    
  427cba:	inc    DWORD PTR [ebx-0x506003b]
  427cc0:	xchg   edx,eax
  427cc1:	add    ecx,DWORD PTR [ecx-0xa50100]
  427cc7:	xor    al,0xff
  427cc9:	ins    BYTE PTR es:[edi],dx
  427cca:	mov    edi,edi
  427ccc:	(bad)  [ecx+0x7a33556]
  427cd2:	add    bh,bh
  427cd4:	call   FWORD PTR [ebx-0x7d]
  427cd7:	adc    edi,edi
  427cd9:	cli    
  427cda:	add    bh,bh
  427cdc:	nop
  427cdd:	call   DWORD PTR [ebx]
  427cdf:	xchg   ebp,eax
  427ce0:	aam    0xc3
  427ce2:	add    ah,cl
  427ce4:	add    BYTE PTR ds:0x97005cff,dh
  427cea:	add    bh,bh
  427cec:	jns    0x427cee
  427cee:	sbb    eax,0x83a37197
  427cf3:	(bad)  
  427cf4:	jmp    DWORD PTR [ebp-0x1]
  427cf7:	jnp    0x427cf8
  427cf9:	mov    esi,0x8948ff83
  427cfe:	cmp    ch,bh
  427d00:	push   ecx
  427d01:	push   ebx
  427d02:	(bad)  
  427d03:	(bad)  
  427d04:	jmp    FWORD PTR [edx+0x50ff70ff]
  427d0a:	add    ah,cl
  427d0c:	int    0xff
  427d0e:	xchg   esi,eax
  427d0f:	lock ds lock cmp edi,0xffffffff
  427d15:	(bad)  
  427d17:	inc    ebp
  427d18:	add    BYTE PTR [edi-0x7cb6ff01],cl
  427d1e:	adc    al,0x4c
  427d20:	enter  0x18,0xff
  427d24:	add    BYTE PTR [ebp-0x7d],bl
  427d27:	sub    cl,BYTE PTR [ecx+0x60ff89a1]
  427d2d:	add    bh,al
  427d2f:	jne    0x427d5d
  427d31:	sub    al,BYTE PTR [eax]
  427d33:	int3   
  427d34:	mov    DWORD PTR [eax-0x60ff9801],ebx
  427d3a:	(bad)  
  427d3b:	dec    DWORD PTR [ecx-0x68bed901]
  427d41:	mov    ds:0x83898300,al
  427d46:	add    cl,bl
  427d48:	add    BYTE PTR [ebx-0x1],al
  427d4b:	cmp    esi,0xffffffff
  427d4e:	mov    edi,DWORD PTR [ecx-0x3300c6f8]
  427d54:	dec    DWORD PTR [edx-0x1]
  427d57:	sar    edi,1
  427d59:	ins    DWORD PTR es:[edi],dx
  427d5a:	(bad)  
  427d5b:	jmp    DWORD PTR [eax+eax*1+0x1d]
  427d5f:	and    bh,al
  427d61:	pop    esi
  427d62:	add    BYTE PTR [ebx-0x4400c301],al
  427d68:	jmp    FWORD PTR [esi-0x77]
  427d6b:	or     DWORD PTR [eax],0xffffffff
  427d6e:	cld    
  427d6f:	les    ebx,FWORD PTR [ebx]
  427d71:	stos   DWORD PTR es:[edi],eax
  427d72:	inc    DWORD PTR [eax]
  427d74:	(bad)  
  427d75:	cmp    eax,DWORD PTR [eax]
  427d77:	(bad)  
  427d78:	add    cl,bl
  427d7a:	add    BYTE PTR [eax],al
  427d7c:	sar    edi,cl
  427d7e:	cmp    ebp,DWORD PTR [edx-0xffb9c4]
  427d84:	push   DWORD PTR [edi-0x1]
  427d87:	jle    0x427d88
  427d89:	pop    ebx
  427d8a:	add    bh,bh
  427d8c:	xor    bh,bh
  427d8e:	mov    ds:0xec4db1,eax
  427d93:	add    bh,bh
  427d95:	in     al,dx
  427d96:	dec    DWORD PTR [edi+0x2cff]
  427d9c:	add    BYTE PTR [eax],0x73
  427d9f:	dec    edi
  427da0:	daa    
  427da1:	pop    ss
  427da2:	dec    esp
  427da4:	call   FWORD PTR ds:0xa2cc4d83
  427daa:	add    bh,bh
  427dac:	icebp  
  427dad:	dec    DWORD PTR [ecx-0x62]
  427db0:	out    dx,eax
  427db1:	xor    al,0xff
  427db3:	inc    DWORD PTR [eax]
  427db5:	pop    esi
  427db6:	mov    DWORD PTR ds:0xccffcd00,edi
  427dbc:	retf   
  427dbd:	push   DWORD PTR [esi]
  427dbf:	xor    ah,BYTE PTR [edx-0x7d]
  427dc5:	mov    ebp,0x79ccfa00
  427dca:	inc    DWORD PTR [eax]
  427dcc:	ins    BYTE PTR es:[edi],dx
  427dcd:	call   DWORD PTR [esi-0x37]
  427dd0:	sub    dh,BYTE PTR [esi-0x4e337c01]
  427dd6:	and    DWORD PTR [edi-0x1],0xffffffd4
  427dda:	inc    DWORD PTR [eax]
  427ddc:	jmp    0xff5e:0x15adfcff
  427de3:	inc    DWORD PTR [eax]
  427de5:	add    DWORD PTR [eax],0x8946ffa5
  427deb:	call   ebx
  427ded:	(bad)  
  427dee:	aas    
  427def:	ja     0x427e0a
  427df1:	or     al,0x0
  427df3:	(bad)  
  427df4:	call   FWORD PTR [eax]
  427df6:	xor    ecx,0xffffffff
  427df9:	lea    eax,[ebx+0x61002583]
  427dff:	or     eax,0xffdb37
  427e04:	add    BYTE PTR [eax-0xd00d501],dl
  427e0a:	add    bh,bh
  427e0c:	arpl   WORD PTR [ecx+0x55cbbca9],cx
  427e12:	add    BYTE PTR [ecx-0x79002e01],cl
  427e18:	add    DWORD PTR [eax-0x380001],0xfffffffb
  427e1f:	sahf   
  427e20:	mov    bh,0xed
  427e22:	(bad)  
  427e23:	inc    DWORD PTR [eax]
  427e25:	inc    BYTE PTR [ebx-0x9c763d]
  427e2b:	inc    ebp
  427e2d:	mov    DWORD PTR [edi],eax
  427e2f:	test   eax,0xff006e47
  427e34:	sbb    DWORD PTR [eax-0x50ff3901],0xffffffff
  427e3b:	adc    esi,0xffffffff
  427e3e:	(bad)  
  427e3f:	arpl   WORD PTR [edi+ebp*4-0xfffff01],si
  427e46:	dec    DWORD PTR [edi-0xc7d]
  427e4c:	inc    eax
  427e4d:	add    al,dl
  427e4f:	pop    ss
  427e50:	jp     0x427e8d
  427e52:	mov    DWORD PTR [eax],eax
  427e54:	add    dl,bh
  427e56:	dec    DWORD PTR [ecx]
  427e58:	call   FWORD PTR [ebp-0x34]
  427e5b:	mov    DWORD PTR [ecx],edx
  427e5d:	inc    DWORD PTR [esi-0x76c7b444]
  427e63:	add    bh,bh
  427e65:	sbb    al,0x0
  427e67:	sbb    eax,0xff008ccc
  427e6c:	mov    edi,?
  427e6e:	pop    ecx
  427e6f:	and    bh,BYTE PTR [esi-0x7c000029]
  427e75:	das    
  427e76:	jmp    FWORD PTR [eax-0x7c5e01]
  427e7c:	int    0x0
  427e7e:	loop   0x427eb6
  427e80:	push   esp
  427e81:	lock (bad) 
  427e83:	(bad)  
  427e84:	inc    DWORD PTR [ebx-0x4d7c9600]
  427e8a:	int3   
  427e8b:	add    BYTE PTR [ecx],bl
  427e8d:	jmp    DWORD PTR [ebx-0x80]
  427e90:	out    dx,al
  427e91:	loope  0x427e92
  427e93:	mov    esp,ecx
  427e95:	jo     0x427e96
  427e97:	cmp    DWORD PTR gs:[eax+0x0],0xffffffff
  427e9c:	sahf   
  427e9d:	jmp    FWORD PTR [esi+0xd]
  427ea0:	push   cs
  427ea1:	xlat   BYTE PTR ds:[ebx]
  427ea2:	add    bh,bh
  427ea4:	add    bh,bh
  427ea6:	call   DWORD PTR [edx+0x0]
  427ea9:	pushf  
  427eaa:	add    bh,bh
  427eac:	jno    0x427e31
  427eae:	inc    edx
  427eaf:	mov    eax,ds:0xffffee8f
  427eb4:	(bad)  
  427eb5:	fiadd  WORD PTR [ebx-0x320018]
  427ebb:	sub    DWORD PTR [eax+0x0],0x49
  427ebf:	stos   DWORD PTR es:[edi],eax
  427ec0:	scas   eax,DWORD PTR es:[edi]
  427ec1:	rol    DWORD PTR [ebx-0x7609ff01],cl
  427ec7:	idiv   edi
  427ec9:	or     edi,edi
  427ecb:	call   DWORD PTR [ecx+0x0]
  427ece:	(bad)  
  427ecf:	popa   
  427ed0:	add    eax,0xffffffcb
  427ed5:	(bad)  
  427ed6:	call   DWORD PTR [eax]
  427ed8:	mov    DWORD PTR [edi],ebx
  427eda:	int3   
  427edb:	xor    DWORD PTR [edi],0xffffffff
  427ede:	sbb    al,0xe5
  427ee0:	sub    BYTE PTR [ecx+ecx*4-0x507c01],al
  427ee7:	jecxz  0x427ee8
  427ee9:	cld    
  427eea:	mov    edi,edi
  427eec:	cmp    bh,bh
  427eee:	sub    eax,0xfd494c
  427ef3:	inc    DWORD PTR [eax]
  427ef5:	xchg   edi,eax
  427ef6:	add    bl,ah
  427ef8:	dec    edx
  427efa:	add    BYTE PTR [eax],al
  427efc:	mov    ebx,0x2c6b22ff
  427f01:	aam    0xcc
  427f03:	dec    esp
  427f05:	rol    DWORD PTR [ebx+0x2fcc83],1
  427f0b:	jmp    DWORD PTR [eax+eax*1+0x6e09e6ca]
  427f12:	add    DWORD PTR [ebx-0x36ffcf77],0xffffffff
  427f19:	out    0xff,eax
  427f1b:	add    dl,ch
  427f1d:	(bad)  
  427f1e:	fst    QWORD PTR [ebx+0x27]
  427f21:	stos   BYTE PTR es:[edi],al
  427f22:	inc    DWORD PTR [eax]
  427f24:	inc    DWORD PTR [ebx+0x78835a00]
  427f2a:	(bad)  
  427f2b:	dec    DWORD PTR [ebp+0x5dc4a83]
  427f31:	push   eax
  427f32:	mov    DWORD PTR [eax],eax
  427f34:	(bad)  
  427f35:	jge    0x427f36
  427f37:	(bad)  
  427f38:	dec    DWORD PTR [eax-0x31007d]
  427f3e:	push   ebx
  427f3f:	sbb    al,0xf8
  427f41:	jne    0x427f42
  427f43:	add    BYTE PTR [eax],al
  427f45:	mov    ch,0xff
  427f47:	jbe    0x427f49
  427f49:	jle    0x427f4a
  427f4b:	add    BYTE PTR ds:0x4c5367ff,dl
  427f51:	mov    edi,edi
  427f53:	inc    DWORD PTR [eax]
  427f55:	cmp    bh,bh
  427f57:	push   es
  427f58:	mov    DWORD PTR [ebx],ecx
  427f5a:	mov    edi,edi
  427f5c:	leave  
  427f5d:	call   DWORD PTR [edi-0x334406ec]
  427f63:	add    BYTE PTR [eax],al
  427f65:	ja     0x427f33
  427f67:	loopne 0x427f68
  427f69:	dec    ebx
  427f6a:	cmp    edi,0x7c
  427f6d:	(bad)  
  427f6e:	cmp    ecx,DWORD PTR [ecx-0x48]
  427f71:	cmp    cl,BYTE PTR [ecx-0x5a7c7d]
  427f77:	inc    BYTE PTR [eax]
  427f79:	dec    edx
  427f7a:	add    bh,bh
  427f7c:	cld    
  427f7d:	push   DWORD PTR [eax+0x1f]
  427f80:	adc    eax,DWORD PTR [ebx-0x7d]
  427f83:	dec    esp
  427f85:	mov    ebp,0xbbff94ff
  427f8a:	inc    DWORD PTR [eax]
  427f8c:	lahf   
  427f8d:	dec    DWORD PTR [esi+0x2f]
  427f90:	in     al,dx
  427f91:	and    eax,0xd2ffff00
  427f96:	inc    DWORD PTR [ebp-0x1]
  427f99:	sbb    al,BYTE PTR [ebx-0x4f33c001]
  427f9f:	gs in  al,0x11
  427fa2:	inc    DWORD PTR [ebx-0x7000ee01]
  427fa8:	(bad)  
  427fa9:	inc    BYTE PTR [ebx-0x29ffdc00]
  427faf:	cmp    ebx,esi
  427fb1:	lahf   
  427fb2:	add    ah,cl
  427fb4:	push   DWORD PTR [eax-0x1]
  427fb7:	xor    eax,0xffa1ff
  427fbc:	mov    al,0x0
  427fbe:	dec    edi
  427fbf:	mov    ecx,0xff0023ed
  427fc4:	(bad)  
  427fc5:	mov    esi,0xebfff4cc
  427fca:	inc    DWORD PTR [eax]
  427fcc:	sub    bh,bh
  427fce:	retf   0x262d
  427fd1:	mov    bh,bh
  427fd3:	dec    esp
  427fd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fd6:	inc    esi
  427fd8:	mov    DWORD PTR [edx],esp
  427fda:	inc    DWORD PTR [eax]
  427fdc:	jge    0x427fde
  427fde:	add    al,0xf8
  427fe0:	mov    WORD PTR [edx-0x39000034],fs
  427fe6:	add    BYTE PTR ds:0xff9b00,ah
  427fec:	data16 int3 
  427fee:	add    eax,0xff4b7467
  427ff3:	(bad)  
  427ff4:	call   DWORD PTR [ebx]
  427ff6:	(bad)  
  427ff7:	in     al,dx
  427ff8:	jmp    FWORD PTR [eax-0x7c580100]
  427ffe:	inc    esi
  427fff:	mov    ebp,0x4aee
  428004:	call   DWORD PTR [ebx+eax*4+0xe289f1]
  42800b:	(bad)  
  42800c:	mov    eax,0x9ecb7083
  428011:	mov    edi,?
  428013:	cmp    edi,0xa
  428016:	add    BYTE PTR [ebp-0x7c003a01],al
  42801c:	xlat   BYTE PTR ds:[ebx]
  42801d:	mov    DWORD PTR [ecx+0xaada82],eax
  428023:	add    BYTE PTR [ebx-0xe4ff4e],al
  428029:	scas   eax,DWORD PTR es:[edi]
  42802a:	add    BYTE PTR [eax],al
  42802c:	dec    esi
  42802d:	add    BYTE PTR [ecx],dl
  42802f:	dec    edi
  428030:	shl    DWORD PTR [ebp-0x3a000000],1
  428036:	add    BYTE PTR [edi+0x0],dl
  428039:	xchg   esi,eax
  42803a:	dec    esp
  42803c:	jmp    0x42803d
  42803e:	inc    ecx
  42803f:	aas    
  428040:	sub    DWORD PTR [edx],ebp
  428042:	mov    DWORD PTR [ecx-0x1800ab00],ecx
  428048:	call   edx
  42804a:	(bad)  
  42804b:	inc    DWORD PTR [eax]
  42804d:	int3   
  42804e:	add    BYTE PTR [eax-0x337cb97b],al
  428054:	jmp    DWORD PTR [ebx+0x4002083]
  42805a:	(bad)  
  42805b:	(bad)  
  42805c:	cmp    eax,0x4273ebff
  428061:	jecxz  0x428063
  428063:	(bad)  
  428064:	jmp    FWORD PTR [edx-0x4600ac01]
  42806a:	add    bh,bh
  42806c:	sahf   
  42806d:	add    BYTE PTR [ebp+0x78f722],bl
  428073:	(bad)  
  428074:	call   FWORD PTR [edx-0x7d]
  428077:	test   bh,bh
  428079:	xor    eax,DWORD PTR [ebx-0x297cd57d]
  42807f:	mov    al,0x7f
  428081:	sub    al,0xff
  428083:	(bad)  
  428084:	push   edx
  428086:	add    BYTE PTR [ebx],dh
  428088:	add    BYTE PTR [ebx],al
  42808a:	dec    esp
  42808c:	iret   
  42808d:	dec    edx
  42808f:	shl    BYTE PTR [edi+0x6b],1
  428092:	(bad)  
  428093:	(bad)  
  428094:	call   FWORD PTR [eax+0x65ffd583]
  42809a:	(bad)  
  42809b:	jmp    DWORD PTR [edi+edi*8]
  42809e:	mov    bl,0x2d
  4280a0:	rol    DWORD PTR [esi-0x1],0xcc
  4280a4:	jmp    FWORD PTR [ebx-0x16003a7d]
  4280aa:	cmp    edi,0xffffff96
  4280ad:	(bad)  
  4280ae:	mov    edi,0xff38f4ba
  4280b3:	inc    DWORD PTR [eax]
  4280b5:	test   bh,bh
  4280b7:	jae    0x428042
  4280b9:	adc    edi,edi
  4280bb:	add    DWORD PTR [esi-0x2269997d],0xfffffff8
  4280c2:	add    DWORD PTR [eax],0xffffffff
  4280c5:	cwde   
  4280c6:	add    ch,ch
  4280c8:	add    BYTE PTR [edi+edi*8-0x4a33fc34],bl
  4280cf:	push   edx
  4280d0:	adc    BYTE PTR [ecx-0x1],ch
  4280d3:	inc    DWORD PTR [eax]
  4280d5:	bswap  esp
  4280d7:	lods   al,BYTE PTR ds:[esi]
  4280d8:	call   DWORD PTR [ebx+0xff0000]
  4280de:	xor    eax,0xcc2e872a
  4280e3:	inc    DWORD PTR [ebx+0x2dccb8]
  4280e9:	add    eax,0xff86ff00
  4280ee:	jae    0x428168
  4280f0:	adc    eax,0xff00fff9
  4280f5:	or     ecx,esp
  4280f7:	jg     0x4280f8
  4280f9:	test   DWORD PTR [ebx+0x550004ff],0xffbbe596
  428103:	(bad)  
  428104:	push   DWORD PTR [edx]
  428106:	call   FWORD PTR [eax-0x7d]
  428109:	arpl   WORD PTR [eax],ax
  42810b:	add    ch,dl
  42810d:	call   DWORD PTR [ecx+esi*1-0x74]
  428111:	add    edi,edi
  428113:	add    bh,bh
  428115:	fild   DWORD PTR [eax]
  428117:	pop    ds
  428118:	inc    DWORD PTR [eax+0x5affcc]
  42811e:	or     al,0xc9
  428120:	add    BYTE PTR [edx+0x0],dl
  428123:	add    DWORD PTR [eax],0xffffff97
  428126:	call   DWORD PTR [edx]
  428128:	add    BYTE PTR [ebp-0xdc3301],bh
  42812e:	xchg   ebx,eax
  42812f:	push   0xffffffa7
  428131:	sub    al,0x0
  428133:	add    bh,bh
  428135:	test   eax,0x94836eff
  42813a:	add    DWORD PTR [ebx+0x7642007b],0x70
  428141:	(bad)  
  428142:	(bad)  
  428143:	inc    DWORD PTR [eax]
  428145:	xor    bh,bh
  428147:	test   eax,0xff007cff
  42814c:	xchg   esp,ecx
  42814e:	pop    ebx
  42814f:	outs   dx,DWORD PTR ds:[esi]
  428150:	ins    DWORD PTR es:[edi],dx
  428151:	repz add ah,cl
  428154:	(bad)  
  428155:	jp     0x4280da
  428157:	xchg   edx,eax
  428158:	(bad)  
  428159:	fdiv   st(7),st
  42815b:	add    BYTE PTR [eax-0xb76d77d],al
  428161:	mov    BYTE PTR [eax],al
  428163:	add    bh,bh
  428165:	loope  0x428166
  428167:	aad    0xff
  428169:	aas    
  42816a:	add    bh,bh
  42816c:	ja     0x42816d
  42816e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42816f:	shl    edx,cl
  428171:	sbb    eax,0x62ffff00
  428176:	jmp    FWORD PTR [eax-0x33ffd501]
  42817c:	jnp    0x428107
  42817e:	dec    ebp
  42817f:	inc    edx
  428180:	stos   DWORD PTR es:[edi],eax
  428181:	int    0x89
  428183:	inc    DWORD PTR [ebx+0xfa8963]
  428189:	(bad)  
  42818b:	add    BYTE PTR [ebp+0x6c5fcf89],ch
  428191:	call   0x79ff:0x410000ff
  428198:	add    BYTE PTR [ebx],dl
  42819a:	(bad)  
  42819b:	jmp    ebp
  42819d:	add    dl,ch
  42819f:	mov    ebp,DWORD PTR [eax]
  4281a1:	jbe    0x4281a3
  4281a3:	mov    edi,edi
  4281a5:	idiv   edi
  4281a7:	clc    
  4281a8:	int3   
  4281a9:	int3   
  4281aa:	(bad)  
  4281ab:	inc    esp
  4281ad:	dec    ebx
  4281af:	cdq    
  4281b0:	jae    0x4281e0
  4281b2:	inc    DWORD PTR [ebx-0x4a00f101]
  4281b8:	add    BYTE PTR [eax-0x497c01],dl
  4281be:	jp     0x428238
  4281c0:	dec    edx
  4281c1:	push   edx
  4281c2:	add    bh,bh
  4281c4:	jmp    FWORD PTR [ebx-0x50ff3101]
  4281ca:	dec    DWORD PTR [ecx+0x7a30ffd4]
  4281d0:	fs pop ds
  4281d2:	int3   
  4281d3:	(bad)  
  4281d4:	call   FWORD PTR [ecx]
  4281d6:	jmp    FWORD PTR [edx-0x7600a734]
  4281dc:	and    edi,edi
  4281de:	cmp    al,0xdc
  4281e0:	loopne 0x4281b4
  4281e2:	mov    edi,edi
  4281e4:	add    BYTE PTR [edi-0x1],bl
  4281e7:	data16 add BYTE PTR [ebx+eax*4-0x1],cl
  4281ec:	jb     0x4281ed
  4281ee:	shr    DWORD PTR [ebx+0x55],cl
  4281f1:	mov    dh,0x0
  4281f3:	inc    DWORD PTR [ebx+0xafff87]
  4281f9:	lea    eax,[eax]
  4281fb:	add    BYTE PTR [ebx-0x1],al
  4281fe:	jno    0x4281fe
  428200:	mov    eax,ds:0xff83cc93
  428205:	xor    al,0xff
  428207:	ret    
  428208:	int3   
  428209:	or     al,0xff
  42820b:	call   FWORD PTR [esi]
  42820d:	add    BYTE PTR [esi],ch
  42820f:	add    DWORD PTR [edx-0x57],esi
  428212:	int3   
  428213:	cmp    edi,0xd
  428216:	add    BYTE PTR [esi-0x1],cl
  428219:	xchg   DWORD PTR [eax],eax
  42821b:	(bad)  
  42821c:	(bad)  
  42821d:	call   DWORD PTR [edx-0x7c305d46]
  428223:	add    BYTE PTR [ebx-0x17c05],al
  428229:	lock add bh,bh
  42822c:	jns    0x4281b7
  42822e:	pop    ds
  42822f:	add    al,0xaf
  428231:	mov    ds:0x49ff0000,eax
  428236:	add    BYTE PTR [edi],ch
  428238:	and    ecx,0xffffffcc
  42823b:	int3   
  42823c:	repnz sub DWORD PTR ds:0xcc0df39c,0xffffffff
  428244:	jmp    DWORD PTR [edx-0x7d]
  428247:	mov    edx,0x5f00
  42824c:	inc    esp
  42824d:	add    dl,dl
  42824f:	mov    al,0xc5
  428251:	dec    ecx
  428252:	dec    esp
  428254:	int3   
  428255:	xchg   ebp,eax
  428256:	call   FWORD PTR [esi-0x7cea01]
  42825c:	test   edi,edi
  42825e:	rcr    BYTE PTR [edi+0x11],0xd0
  428262:	(bad)  
  428263:	inc    DWORD PTR [ebx-0x680092]
  428269:	pop    eax
  42826a:	add    BYTE PTR [eax],al
  42826c:	fdiv   st(7),st
  42826e:	jecxz  0x4282d0
  428270:	mov    eax,ds:0xffccffab
  428275:	daa    
  428276:	add    BYTE PTR [ebp-0x1],bl
  428279:	jae    0x4281fe
  42827b:	add    BYTE PTR [eax-0x7d],bh
  42827e:	cmp    al,al
  428280:	cmp    DWORD PTR ds:0xe60083ff,esi
  428286:	int3   
  428287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428288:	and    DWORD PTR [eax-0x72ff34],0x12
  42828f:	into   
  428290:	imul   edx,DWORD PTR [ecx-0x1],0x0
  428294:	inc    DWORD PTR ds:0xa88959ff
  42829a:	inc    DWORD PTR [eax]
  42829c:	and    eax,DWORD PTR [eax]
  42829e:	pop    eax
  42829f:	or     ebx,DWORD PTR [ebx-0xb]
  4282a2:	or     DWORD PTR [ecx+0x40ff9f00],0x0
  4282a9:	sar    bh,0xff
  4282ac:	jmp    FWORD PTR fs:0xff89fcee
  4282b3:	inc    DWORD PTR [eax]
  4282b5:	leave  
  4282b6:	cmp    DWORD PTR [esi-0x2d01],0xfffffffe
  4282bd:	jmp    DWORD PTR [eax+0xfb1785]
  4282c3:	int3   
  4282c4:	add    BYTE PTR [eax],bl
  4282c6:	dec    DWORD PTR [ecx]
  4282c8:	call   DWORD PTR [esi-0xfd0077]
  4282ce:	stos   DWORD PTR es:[edi],eax
  4282cf:	mov    ah,0x30
  4282d1:	mov    eax,DWORD PTR [ebx-0xc97c01]
  4282d7:	arpl   di,di
  4282d9:	cmp    al,0xff
  4282db:	add    cl,dh
  4282dd:	adc    DWORD PTR [eax-0x6f9790],0xffffffff
  4282e4:	int3   
  4282e5:	cmp    al,0xff
  4282e7:	out    dx,eax
  4282e8:	call   FWORD PTR [eax-0x34]
  4282eb:	add    BYTE PTR [ebx],al
  4282ed:	sub    DWORD PTR [ecx+0xed8fb5],0xffffffff
  4282f4:	call   DWORD PTR [ebp-0x2500bd00]
  4282fa:	inc    DWORD PTR [eax]
  4282fc:	fild   DWORD PTR [eax]
  4282fe:	cld    
  4282ff:	xor    edi,ebp
  428301:	out    0xcc,eax
  428303:	dec    esp
  428305:	xor    al,0x83
  428307:	pop    es
  428308:	add    BYTE PTR [esi+0x0],dh
  42830b:	add    BYTE PTR [ecx-0x3438a777],dh
  428311:	inc    edi
  428312:	add    bh,bh
  428314:	add    DWORD PTR [edx-0x1],0xffffffff
  428318:	(bad)  
  428319:	fdivp  st(7),st
  42831b:	adc    ebp,0xffffffff
  42831e:	dec    esi
  42831f:	sub    BYTE PTR [ebx+0x3d],dl
  428322:	add    DWORD PTR [ebx+0x118956ff],0xffffffff
  428329:	(bad)  
  42832b:	add    BYTE PTR [ebx-0x5f57ba01],ch
  428331:	sahf   
  428332:	(bad)  
  428333:	dec    esp
  428335:	sahf   
  428336:	add    BYTE PTR [edi],bl
  428338:	add    bh,bh
  42833a:	int3   
  42833b:	dec    edi
  42833d:	add    BYTE PTR ds:0x83f56f76,dh
  428343:	inc    DWORD PTR [eax]
  428345:	push   esi
  428346:	add    BYTE PTR [ecx],ah
  428348:	and    edx,0x0
  42834b:	(bad)  
  42834c:	clc    
  42834d:	push   esi
  42834f:	add    esp,DWORD PTR [ebx-0x2e]
  428352:	inc    DWORD PTR [eax]
  428354:	add    DWORD PTR [esi-0x1],0xffffffe6
  428358:	add    BYTE PTR [edi+edi*8-0x7d],al
  42835c:	test   eax,0x53432600
  428361:	mov    ah,0xcc
  428363:	dec    esp
  428365:	mov    esi,0xff00a4ff
  42836a:	dec    esp
  42836c:	or     BYTE PTR [ebx+0x348c45ab],al
  428372:	inc    DWORD PTR [ebx-0x3a004977]
  428378:	inc    DWORD PTR [ebx-0x1]
  42837b:	push   DWORD PTR [edi+edi*8+0x18]
  42837f:	dec    eax
  428380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428381:	xchg   bh,bh
  428383:	mov    esp,ecx
  428385:	arpl   WORD PTR [eax],ax
  428387:	inc    edx
  428388:	inc    DWORD PTR ds:0x83ac00ff
  42838e:	mov    ecx,0xff54457b
  428393:	add    DWORD PTR [eax],0x5f
  428396:	int3   
  428397:	sar    bh,0x9e
  42839a:	mov    esp,ecx
  42839c:	jp     0x42839e
  42839e:	jecxz  0x42835c
  4283a0:	int    0xb6
  4283a2:	inc    DWORD PTR [ebx-0x3376fa34]
  4283a8:	add    cl,bh
  4283aa:	cmp    edi,0xffffffcc
  4283ad:	push   DWORD PTR [edi]
  4283af:	pop    edi
  4283b0:	inc    esp
  4283b1:	mov    cl,0xff
  4283b3:	add    BYTE PTR [eax],al
  4283b5:	xor    BYTE PTR [eax],al
  4283b7:	inc    eax
  4283b8:	inc    ebx
  4283ba:	dec    esp
  4283bc:	xor    BYTE PTR [ebx-0x231956f8],al
  4283c2:	(bad)  
  4283c3:	inc    DWORD PTR [ebx-0x7632008d]
  4283c9:	in     al,0xff
  4283cb:	inc    DWORD PTR [ebx+0x0]
  4283ce:	fdivr  st,st(5)
  4283d0:	push   cs
  4283d1:	or     bh,bh
  4283d3:	(bad)  
  4283d4:	(bad)  
  4283d5:	cmp    al,BYTE PTR [eax]
  4283d7:	push   esp
  4283d8:	call   FWORD PTR [eax-0x1]
  4283db:	dec    DWORD PTR [esi]
  4283dd:	add    DWORD PTR [esi-0x1cb423],0xffffffff
  4283e4:	dec    DWORD PTR [ebp-0x4400e77d]
  4283ea:	(bad)  
  4283eb:	jmp    DWORD PTR [ebp+0x0]
  4283ee:	sahf   
  4283ef:	pop    esp
  4283f0:	jno    0x4283e8
  4283f2:	inc    DWORD PTR [ebx-0x25006900]
  4283f8:	inc    DWORD PTR [eax+0x0]
  4283fb:	push   DWORD PTR [ebx-0x3fd64f01]
  428401:	ss mov edi,edi
  428404:	dec    ecx
  428406:	add    BYTE PTR [edi],dh
  428408:	xor    DWORD PTR [esi],0xffffffff
  42840b:	inc    DWORD PTR [eax-0x77]
  42840e:	test   eax,0xff9873d2
  428413:	add    BYTE PTR [eax],al
  428415:	test   DWORD PTR [ebx-0x33bf7c1d],0x26ffa5ff
  42841f:	retf   0x6e4f
  428422:	add    ah,cl
  428424:	inc    DWORD PTR [eax+0x3ffff2ff]
  42842a:	add    BYTE PTR [ecx+0x6692ffb0],cl
  428430:	lods   eax,DWORD PTR ds:[esi]
  428431:	out    0x0,eax
  428433:	dec    esp
  428435:	inc    esp
  428436:	add    BYTE PTR [ebx-0x1],ch
  428439:	ins    BYTE PTR es:[edi],dx
  42843a:	(bad)  
  42843b:	(bad)  
  42843c:	in     eax,dx
  42843d:	jmp    eax
  42843f:	lods   eax,DWORD PTR ds:[esi]
  428440:	xchg   eax,edx
  428442:	(bad)  
  428443:	inc    DWORD PTR [ebx-0x8affdb]
  428449:	dec    eax
  42844a:	inc    DWORD PTR [eax]
  42844c:	mov    BYTE PTR [ebx+0x1ebc3672],0xff
  428453:	(bad)  
  428454:	inc    DWORD PTR [eax+eax*1-0x7607ff58]
  42845b:	(bad)  
  42845c:	std    
  42845d:	call   DWORD PTR [eax]
  42845f:	mov    esp,0xffffcbbf
  428464:	(bad)  
  428465:	out    dx,al
  428466:	mov    DWORD PTR ds:0x89ffd3ff,edi
  42846c:	jne    0x42843a
  42846e:	aad    0x44
  428470:	add    BYTE PTR [esp+ecx*8-0x7c7f767d],bh
  428477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428478:	add    BYTE PTR [eax-0x7caa7c01],al
  42847e:	pop    es
  42847f:	(bad)  
  428480:	push   0x83ffff07
  428485:	scas   eax,DWORD PTR es:[edi]
  428486:	dec    DWORD PTR [ecx-0x1]
  428489:	pop    esi
  42848a:	add    BYTE PTR [eax],al
  42848c:	popa   
  42848d:	mov    DWORD PTR [eax],edi
  42848f:	call   DWORD PTR ss:[edx-0x4a0034]
  428496:	dec    eax
  428497:	les    eax,FWORD PTR [eax]
  428499:	loopne 0x42849b
  42849b:	add    bl,cl
  42849d:	add    BYTE PTR [edx],ch
  42849f:	mov    ds:0xffccdb00,eax
  4284a4:	lea    eax,[eax]
  4284a6:	sbb    ah,BYTE PTR ds:0xffff8fff
  4284ac:	fwait
  4284ad:	inc    ecx
  4284af:	mov    eax,0xccff4b00
  4284b4:	adc    al,0xff
  4284b6:	jl     0x428534
  4284b8:	int3   
  4284b9:	jl     0x4284ba
  4284bb:	add    BYTE PTR [ebp-0x77],ah
  4284be:	imul   ebx,DWORD PTR [eax],0x89ff2000
  4284c4:	stc    
  4284c5:	call   FWORD PTR [eax+eiz*2-0x1]
  4284c9:	fmul   st(4),st
  4284cb:	dec    DWORD PTR [edx]
  4284cd:	push   DWORD PTR [ebx]
  4284cf:	outs   dx,DWORD PTR ds:[esi]
  4284d0:	dec    DWORD PTR [ebx-0x1]
  4284d3:	int3   
  4284d4:	or     DWORD PTR fs:0xff8fcc1d,0xffffffff
  4284dc:	pop    eax
  4284dd:	jmp    FWORD PTR [eax]
  4284df:	out    dx,eax
  4284e0:	sbb    DWORD PTR [edi-0x77],0x0
  4284e4:	jbe    0x4284e5
  4284e6:	mov    edx,0x83b789ef
  4284eb:	inc    DWORD PTR [ecx+0x0]
  4284ee:	stos   BYTE PTR es:[edi],al
  4284ef:	jnp    0x4284f0
  4284f1:	dec    ebp
  4284f2:	int3   
  4284f3:	mov    DWORD PTR [ebp-0xdac01],ebp
  4284f9:	add    bh,bh
  4284fb:	push   esp
  4284fd:	add    BYTE PTR [esi-0x5c],cl
  428500:	add    BYTE PTR [edi+edi*8+0x46ff5883],ah
  428507:	js     0x428509
  428509:	ud0    edi,edi
  42850c:	imul   eax,DWORD PTR [ebx-0x28000a2f],0x0
  428513:	add    eax,0xffffff83
  428516:	dec    esi
  428517:	jle    0x4284a2
  428519:	sar    edi,1
  42851b:	add    BYTE PTR [ebp-0x33ba9101],dl
  428521:	pop    ebp
  428522:	inc    DWORD PTR [eax]
  428524:	cmc    
  428525:	add    al,dl
  428527:	xor    ecx,DWORD PTR [ecx-0x32007c2e]
  42852d:	dec    DWORD PTR [eax+ebx*2]
  428530:	jmp    eax
  428532:	(bad)  
  428533:	inc    DWORD PTR [edx+0x0]
  428536:	or     edi,DWORD PTR [ebx-0x7d]
  428539:	stc    
  42853a:	inc    DWORD PTR [eax]
  42853c:	mov    ecx,DWORD PTR [ecx-0x66007f92]
  428542:	int3   
  428543:	call   FWORD PTR [edx+0x0]
  428546:	push   edi
  428547:	inc    esp
  428548:	add    BYTE PTR [ebp-0x7d],bl
  42854b:	adc    ebp,0x0
  42854e:	cmp    eax,0xffbc0036
  428553:	jmp    DWORD PTR [esi-0x7d]
  428556:	adc    ebx,DWORD PTR [edi+edi*8-0x800ffa9]
  42855d:	add    BYTE PTR [ecx-0x7ca77cf1],dl
  428563:	push   ecx
  428565:	sub    eax,0xffffffb6
  428568:	dec    DWORD PTR [ecx+ecx*4]
  42856b:	xor    esp,0xffffff83
  42856e:	jge    0x428566
  428570:	int3   
  428571:	cld    
  428572:	inc    DWORD PTR [eax]
  428574:	add    DWORD PTR gs:[ebx+0x43ff6d],0xffffffff
  42857c:	inc    edx
  42857d:	push   DWORD PTR [edi]
  42857f:	stc    
  428580:	add    cl,dh
  428582:	(bad)  
  428583:	call   FWORD PTR [esp+ecx*8+0x1affafc7]
  42858a:	inc    DWORD PTR [eax]
  42858c:	ss int3 
  42858e:	scas   al,BYTE PTR es:[edi]
  42858f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428590:	dec    DWORD PTR [edi+edi*8]
  428593:	jmp    DWORD PTR [edi]
  428595:	inc    DWORD PTR [edx-0x7c7d33b4]
  42859b:	add    BYTE PTR [edi+edi*8],ah
  42859e:	mov    cl,0x40
  4285a0:	(bad)  
  4285a1:	out    dx,al
  4285a2:	dec    esp
  4285a4:	jnp    0x4285a5
  4285a6:	xor    eax,edx
  4285a8:	dec    DWORD PTR [eax]
  4285aa:	mov    edi,edi
  4285ac:	(bad)  
  4285ad:	jmp    DWORD PTR [edx-0x13]
  4285b0:	add    BYTE PTR [edi-0x1],cl
  4285b3:	inc    DWORD PTR [esi+0x0]
  4285b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285b7:	dec    esp
  4285b8:	inc    DWORD PTR [ebx+eax*4]
  4285bb:	call   DWORD PTR [ecx]
  4285bd:	push   DWORD PTR [ecx]
  4285bf:	les    eax,FWORD PTR [eax]
  4285c1:	js     0x4285c3
  4285c3:	(bad)  
  4285c4:	mov    edi,0x8959d000
  4285c9:	mov    cl,0x83
  4285cb:	jmp    FWORD PTR [eax+0xce4500]
  4285d1:	es dec esp
  4285d4:	jns    0x428559
  4285d6:	mov    cl,0xbc
  4285d8:	inc    DWORD PTR [edi]
  4285da:	add    bh,bh
  4285dc:	sar    bh,cl
  4285de:	inc    ebx
  4285df:	stos   BYTE PTR es:[edi],al
  4285e0:	add    bh,cl
  4285e2:	(bad)  
  4285e3:	call   FWORD PTR [eax+0x0]
  4285e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285e7:	inc    DWORD PTR [eax]
  4285e9:	jmp    0x1586ba
  4285ee:	aam    0x7a
  4285f0:	push   DWORD PTR [eax+0x810000]
  4285f6:	xchg   edi,eax
  4285f7:	(bad)  
  4285f8:	dec    edx
  4285fa:	add    DWORD PTR [eax],0x35
  4285fd:	int3   
  4285fe:	or     DWORD PTR [edi-0x77],esp
  428601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428602:	inc    DWORD PTR [eax]
  428604:	jp     0x428605
  428606:	pop    ds
  428607:	pop    ebp
  428608:	add    BYTE PTR [ebx+eax*4+0x50ff8400],bh
  42860f:	mov    ecx,0xff00d100
  428614:	inc    edx
  428615:	jmp    DWORD PTR [ebx-0x7cea330c]
  42861b:	call   DWORD PTR [ecx+0xce1083]
  428621:	lods   al,BYTE PTR ds:[esi]
  428622:	(bad)  
  428623:	push   DWORD PTR [eax-0x33df3001]
  428629:	jg     0x42862b
  42862b:	sub    DWORD PTR [edx-0xb11500],0x1c
  428632:	add    BYTE PTR [ebx-0x265effb1],al
  428638:	(bad)  
  428639:	(bad)  
  42863b:	dec    DWORD PTR [eax+eax*1+0x12]
  42863f:	sub    eax,0xff8383ff
  428644:	adc    eax,0xb4a00
  428649:	or     bh,bh
  42864b:	jmp    DWORD PTR [ebp-0x1]
  42864e:	mov    gs,eax
  428650:	add    BYTE PTR ds:0xffef00ff,ah
  428656:	lahf   
  428657:	test   eax,0x89ff60cc
  42865c:	bswap  esp
  42865e:	arpl   WORD PTR [edi-0x1],sp
  428661:	dec    edi
  428662:	add    ah,cl
  428664:	hlt    
  428665:	call   FWORD PTR [ebx-0x65]
  428668:	inc    DWORD PTR [edx]
  42866a:	inc    DWORD PTR [eax]
  42866c:	sub    DWORD PTR [eax],eax
  42866e:	or     esi,eax
  428670:	mov    DWORD PTR [ebx+eax*4],ecx
  428673:	call   FWORD PTR [edx-0xfd6900]
  428679:	ins    DWORD PTR es:[edi],dx
  42867a:	add    BYTE PTR [ebx-0x4b257cf8],al
  428680:	add    BYTE PTR [ebx],bh
  428682:	(bad)  
  428683:	call   ebx
  428685:	call   DWORD PTR [ebp+0x36]
  428688:	jmp    DWORD PTR [edi-0x8c7d00]
  42868e:	fstp   TBYTE PTR [eax+eax*1]
  428691:	in     eax,dx
  428692:	(bad)  
  428693:	inc    DWORD PTR [edx]
  428695:	add    dh,bh
  428697:	in     al,0xff
  428699:	jecxz  0x42869a
  42869b:	and    DWORD PTR [esi-0x1a5500],0x4
  4286a2:	(bad)  
  4286a3:	push   DWORD PTR [ecx+0x0]
  4286a6:	retf   
  4286a7:	in     eax,dx
  4286a8:	int3   
  4286a9:	mov    ah,0xff
  4286ab:	add    BYTE PTR [edi+edi*8-0x65ff47f1],bh
  4286b2:	int3   
  4286b3:	call   FWORD PTR [edi+edi*8-0x22ff57a6]
  4286ba:	(bad)  
  4286bb:	inc    DWORD PTR [ecx+0x0]
  4286be:	lds    esp,FWORD PTR [edi+edi*8+0x32]
  4286c2:	inc    DWORD PTR [ebx-0x5a50765e]
  4286c8:	mov    edi,edi
  4286ca:	(bad)  
  4286cb:	(bad)  
  4286cc:	inc    BYTE PTR [ebx-0x2b008f07]
  4286d2:	(bad)  
  4286d3:	dec    DWORD PTR [ebp+0xd7b9cc]
  4286d9:	mov    ?,edi
  4286db:	int3   
  4286dc:	xor    bh,bh
  4286de:	sub    eax,DWORD PTR [eax]
  4286e0:	int3   
  4286e1:	(bad)  
  4286e3:	add    BYTE PTR [eax-0x7c55e601],bh
  4286e9:	repnz (bad) 
  4286eb:	push   DWORD PTR [ecx-0xe8f601]
  4286f1:	mov    edx,0xcca200cc
  4286f6:	add    DWORD PTR [ebp-0xffe301],ebp
  4286fc:	jnp    0x4286fe
  4286fe:	pop    esp
  428700:	call   FWORD PTR [ecx]
  428702:	dec    esp
  428704:	mov    edx,0x831ca0ff
  428709:	mov    ds:0x835effff,al
  42870e:	add    DWORD PTR [ebx-0x1],0x6900006a
  428715:	xor    DWORD PTR [eax-0x8c33f2],0xffffff83
  42871c:	jbe    0x42871e
  42871e:	xchg   esp,eax
  42871f:	out    dx,eax
  428720:	add    BYTE PTR [ebx],cl
  428722:	add    bh,bh
  428724:	add    al,0xff
  428726:	xchg   esi,eax
  428727:	jne    0x428728
  428729:	mov    al,0xff
  42872b:	mov    DWORD PTR [ecx-0x1],edx
  42872e:	loope  0x4286f2
  428730:	push   DWORD PTR [ebx]
  428732:	add    BYTE PTR [ebx+0x21c38364],al
  428738:	jmp    DWORD PTR [ebp+0x0]
  42873b:	add    bl,ah
  42873d:	sbb    DWORD PTR [ebx-0x56],0xffffffff
  428741:	mov    es,WORD PTR [ebx-0x10337100]
  428747:	inc    edi
  428748:	call   FWORD PTR [edi]
  42874a:	int3   
  42874b:	inc    DWORD PTR [eax-0x7c089a77]
  428751:	dec    ebp
  428752:	or     esp,0xffffffb7
  428755:	int3   
  428756:	das    
  428757:	aad    0xff
  428759:	push   ebx
  42875a:	cmp    edi,0xffffffed
  42875d:	inc    DWORD PTR [ecx-0x2100ec]
  428763:	jmp    DWORD PTR [eax+0x0]
  428766:	pusha  
  428767:	sub    edi,edi
  428769:	sbb    eax,0xff93ffff
  42876e:	mov    edi,0xffa9004b
  428773:	add    BYTE PTR [edx-0x1],dh
  428776:	push   ds
  428777:	rol    DWORD PTR [eax],0x1e
  42877a:	inc    DWORD PTR [eax]
  42877c:	loopne 0x42877d
  42877e:	lahf   
  42877f:	dec    esi
  428780:	int3   
  428781:	test   eax,0x25ffff
  428786:	test   eax,0x9bff92
  42878b:	add    BYTE PTR [edi+edi*8+0x7689f885],dl
  428792:	add    BYTE PTR [eax],al
  428794:	xor    al,0xff
  428796:	dec    ecx
  428797:	push   0xffffffff
  428799:	out    dx,eax
  42879a:	int3   
  42879b:	mov    edx,esi
  42879d:	add    BYTE PTR [ebp+0x40],bl
  4287a0:	int3   
  4287a1:	inc    ecx
  4287a2:	dec    DWORD PTR [ecx-0x7b8e0073]
  4287a8:	add    BYTE PTR [ebp-0x1],al
  4287ab:	int3   
  4287ac:	push   ebx
  4287ad:	jmp    DWORD PTR [ebx-0xc7009b]
  4287b3:	int3   
  4287b4:	imul   ecx,esp,0x94cca7a5
  4287ba:	dec    esp
  4287bc:	sbb    al,BYTE PTR [eax]
  4287be:	dec    edx
  4287bf:	dec    esi
  4287c0:	add    cl,dh
  4287c2:	add    bh,bh
  4287c4:	cmc    
  4287c5:	push   DWORD PTR [ecx+ebx*1]
  4287c8:	and    DWORD PTR [ebx-0x9b007d],0x20
  4287cf:	mov    esp,0x83006100
  4287d4:	push   ebp
  4287d5:	add    BYTE PTR [esi-0xac7c40],ah
  4287db:	add    BYTE PTR [edi-0x77],dl
  4287de:	das    
  4287df:	sbb    eax,0xcc8dff
  4287e4:	fild   DWORD PTR [ebx+0x9002740]
  4287ea:	(bad)  
  4287eb:	call   FWORD PTR [ebx+0x0]
  4287ee:	mov    edx,0xdeff9f
  4287f3:	add    dh,dl
  4287f5:	dec    DWORD PTR [esp+ebx*8-0x76005e01]
  4287fc:	xlat   BYTE PTR ds:[ebx]
  4287fd:	sub    DWORD PTR [edi-0x27001e],0xffffff83
  428804:	push   ss
  428805:	inc    DWORD PTR [edi-0x64]
  428808:	xor    DWORD PTR [eax-0x77],0x0
  42880c:	pop    ds
  42880d:	add    BYTE PTR [eax-0x75],bh
  428810:	call   FWORD PTR [ecx]
  428812:	add    ah,cl
  428814:	pusha  
  428815:	mov    DWORD PTR [ebp+0x2f83aa],ecx
  42881b:	dec    DWORD PTR [esi-0x1]
  42881e:	js     0x428840
  428820:	int3   
  428821:	and    DWORD PTR [eax],eax
  428823:	int3   
  428824:	nop
  428825:	adc    DWORD PTR [ebp-0x767cff2c],0xffffffcc
  42882c:	outs   dx,DWORD PTR ds:[esi]
  42882d:	dec    DWORD PTR [esi]
  42882f:	mov    eax,0xffff8bcc
  428834:	sar    edi,0x73
  428837:	xchg   edx,eax
  428838:	dec    DWORD PTR [ebx+0x0]
  42883b:	mov    DWORD PTR [ebx+0x901acc],esp
  428841:	scas   al,BYTE PTR es:[edi]
  428842:	cmp    edi,0x58
  428845:	add    BYTE PTR [ecx+ebp*8+0x0],bl
  428849:	pop    edx
  42884a:	(bad)  
  42884b:	inc    DWORD PTR [ebp+0x7d6383]
  428851:	sti    
  428852:	(bad)  
  428853:	(bad)  
  428854:	jnp    0x428855
  428856:	stos   DWORD PTR es:[edi],eax
  428857:	loope  0x428825
  428859:	stos   DWORD PTR es:[edi],eax
  42885a:	inc    DWORD PTR [ebx-0x4ab60039]
  428860:	call   FWORD PTR [edx]
  428862:	(bad)  
  428863:	jmp    DWORD PTR [eax-0xe94801]
  428869:	fwait
  42886a:	dec    esp
  42886c:	ins    BYTE PTR es:[edi],dx
  42886d:	(bad)  
  42886e:	fcompp 
  428870:	add    dh,dl
  428872:	(bad)  
  428873:	inc    DWORD PTR [esp+ecx*8]
  428876:	ins    BYTE PTR es:[edi],dx
  428877:	xchg   ebx,eax
  428878:	int3   
  428879:	arpl   WORD PTR [eax],ax
  42887b:	add    BYTE PTR [edi-0x77],al
  42887e:	and    ecx,edx
  428880:	jmp    DWORD PTR [eax+eax*1]
  428883:	mov    DWORD PTR [eax-0x1],ebp
  428886:	lock jmp FWORD PTR gs:[eax]
  42888a:	(bad)  
  42888b:	inc    DWORD PTR [ebx]
  42888d:	call   FWORD PTR [ebx]
  42888f:	push   edx
  428890:	jmp    ebx
  428892:	add    BYTE PTR [ebx+0xdcaff66],al
  428898:	(bad)  
  428899:	cmp    eax,DWORD PTR [ebx-0x2effb901]
  42889f:	fild   WORD PTR [eax]
  4288a1:	xor    eax,0xcc1c8389
  4288a6:	nop
  4288a7:	out    0xff,al
  4288a9:	mov    ds:0x7100ff,eax
  4288ae:	mov    ecx,0x1700a3
  4288b3:	sbb    DWORD PTR [edi+edi*8+0x57],0xffffffb6
  4288b8:	add    BYTE PTR [eax-0x7c307c01],al
  4288be:	or     BYTE PTR [ebx-0xfff177],bl
  4288c4:	fmul   DWORD PTR [ecx+0x58ff15a4]
  4288ca:	(bad)  
  4288cb:	inc    DWORD PTR [ebx+0x9fc183]
  4288d1:	popf   
  4288d2:	mov    DWORD PTR [eax],eax
  4288d4:	cdq    
  4288d5:	jmp    DWORD PTR [ecx+0x21]
  4288d8:	add    bh,dl
  4288da:	mov    edi,edi
  4288dc:	aas    
  4288dd:	and    DWORD PTR [edi+0xb1ff2b],0x0
  4288e4:	sbb    al,0xff
  4288e6:	daa    
  4288e7:	out    dx,al
  4288e8:	inc    DWORD PTR [edx+0x40ff00]
  4288ee:	cmp    al,0x80
  4288f0:	sbb    DWORD PTR [edi+0xdfffff],0x49
  4288f7:	inc    DWORD PTR [eax]
  4288f9:	sub    DWORD PTR [ecx+0x5fffc9ff],ecx
  4288ff:	fadd   QWORD PTR [ebx-0x40ff0030]
  428905:	mov    DWORD PTR [eax-0x66008d],eax
  42890b:	add    BYTE PTR [ecx-0x1],ch
  42890e:	repnz sbb DWORD PTR [ecx-0x28ff0002],ecx
  428915:	add    dl,bh
  428917:	mov    ecx,esp
  428919:	or     bh,bh
  42891b:	sbb    DWORD PTR [ecx-0x1],0xffffffa3
  42891f:	sub    DWORD PTR [ebx+0x23ccfffd],eax
  428925:	jmp    FWORD PTR [esi+ebp*2]
  428928:	dec    DWORD PTR ds:0xff5b0000
  42892e:	aad    0x88
  428930:	(bad)  
  428931:	mov    eax,0x89d283ff
  428936:	iret   
  428937:	pop    ebx
  428938:	int3   
  428939:	mov    ds:0x8358ffff,al
  42893e:	fdivr  DWORD PTR [edi-0x1]
  428941:	jge    0x4288c6
  428943:	push   DWORD PTR [ecx-0xc70801]
  428949:	mov    ebx,0x8370ffff
  42894e:	sti    
  42894f:	into   
  428950:	(bad)  
  428951:	clc    
  428952:	inc    DWORD PTR [eax]
  428954:	fild   DWORD PTR [ebx+0x480025bc]
  42895a:	(bad)  
  42895b:	call   FWORD PTR [edx+0x0]
  42895e:	xor    BYTE PTR [eax+eax*1-0x7d337cc5],cl
  428965:	(bad)  
  428966:	stc    
  428967:	retf   0x7f00
  42896a:	add    bh,bh
  42896c:	sahf   
  42896d:	(bad)  
  42896e:	out    dx,al
  42896f:	clc    
  428970:	jmp    edx
  428972:	or     esp,0xfffffffd
  428975:	dec    DWORD PTR [esi+0x44005e]
  42897b:	int3   
  42897c:	inc    esp
  42897d:	add    BYTE PTR [esi-0x7cce7cfe],dl
  428983:	add    BYTE PTR [ebp-0x334cb100],ah
  428989:	inc    ecx
  42898a:	inc    DWORD PTR [eax]
  42898c:	fwait
  42898d:	(bad)  
  42898e:	fnstsw WORD PTR [ebx]
  428990:	sbb    DWORD PTR [esi],0xffffff89
  428993:	push   DWORD PTR [ecx+0x0]
  428996:	mov    ebx,0x42837d
  42899b:	inc    DWORD PTR [ecx-0x1]
  42899e:	xchg   edi,eax
  4289a0:	cmp    DWORD PTR [eax-0x3c7601],0x4a
  4289a7:	pusha  
  4289a8:	jmp    DWORD PTR [edi+edi*8]
  4289ab:	mov    esi,ecx
  4289ad:	dec    ecx
  4289af:	dec    edi
  4289b0:	add    BYTE PTR [ebx-0x762eff01],cl
  4289b6:	jnp    0x428a22
  4289b8:	(bad)  
  4289b9:	jge    0x4289ba
  4289bb:	int3   
  4289bc:	sbb    bh,bh
  4289be:	dec    ebx
  4289bf:	icebp  
  4289c0:	sbb    DWORD PTR [edi-0x1],0x0
  4289c4:	(bad)  
  4289c5:	dec    DWORD PTR [eax]
  4289c7:	sbb    eax,0x83895d00
  4289cc:	and    DWORD PTR [eax],eax
  4289ce:	stos   DWORD PTR es:[edi],eax
  4289cf:	xlat   BYTE PTR ds:[ebx]
  4289d0:	add    BYTE PTR [edx-0x7c873301],bl
  4289d6:	push   eax
  4289d7:	iret   
  4289d8:	xor    DWORD PTR [ebp-0x1],0xffffffff
  4289dc:	iret   
  4289dd:	jmp    DWORD PTR [ebp+ebp*4-0xd800]
  4289e4:	pushf  
  4289e5:	call   FWORD PTR [edi+ecx*4-0x7cff1d01]
  4289ec:	xchg   ecx,eax
  4289ed:	int3   
  4289ee:	fadd   QWORD PTR [edi+edi*8]
  4289f1:	adc    al,0x0
  4289f3:	mov    DWORD PTR [eax+0x2db6ff],ebx
  4289f9:	add    BYTE PTR [ebx+0x6cccb3ff],0x33
  428a00:	dec    DWORD PTR [ecx-0x7c5dff01]
  428a06:	cs in  al,dx
  428a08:	inc    DWORD PTR [eax-0x7c1c0077]
  428a0e:	into   
  428a0f:	push   ebx
  428a10:	add    BYTE PTR [esi-0x76040034],ah
  428a16:	adc    BYTE PTR [ebp-0x33ff7b01],0x17
  428a1d:	int3   
  428a1e:	sar    BYTE PTR [ebx+eax*4],cl
  428a21:	sar    edi,cl
  428a23:	add    BYTE PTR [edi+0xa71000],dh
  428a29:	add    BYTE PTR ds:[ebx-0x3dd300fd],al
  428a30:	jmp    DWORD PTR [edi]
  428a32:	mov    DWORD PTR [eax],eax
  428a34:	xchg   edi,eax
  428a35:	mov    ebp,edi
  428a37:	sbb    al,BYTE PTR [eax]
  428a39:	sub    DWORD PTR [ebx-0x2d331300],eax
  428a3f:	inc    edi
  428a40:	xor    DWORD PTR [ebp+0x0],0x0
  428a44:	jns    0x428a45
  428a46:	ficom  WORD PTR [esi+0xff9eff]
  428a4c:	dec    edi
  428a4d:	dec    esi
  428a4f:	and    edi,edi
  428a51:	(bad)  
  428a54:	push   ebx
  428a55:	add    BYTE PTR [edi],al
  428a57:	jp     0x428a58
  428a59:	sub    bh,bh
  428a5b:	mov    DWORD PTR [edi-0x8a8134],edx
  428a61:	lods   al,BYTE PTR ds:[esi]
  428a62:	int3   
  428a63:	int3   
  428a64:	or     eax,DWORD PTR [eax]
  428a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428a67:	jp     0x428a68
  428a69:	add    bh,bh
  428a6b:	jmp    DWORD PTR [eax+0x3479ff]
  428a71:	inc    edx
  428a72:	dec    DWORD PTR [ecx-0x239004e]
  428a78:	call   DWORD PTR [ecx-0x1]
  428a7b:	jmp    FWORD PTR [esi+0x0]
  428a7e:	int    0x9a
  428a80:	jmp    FWORD PTR [eax-0x1]
  428a83:	and    DWORD PTR ds:0xdc6489,0xffffffee
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	dec    esp
  428a8d:	add    ah,cl
  428a8f:	mov    dl,0xff
  428a91:	retf   0xff83
  428a94:	push   0xffffffff
  428a96:	xor    DWORD PTR [eax+eax*1-0x45],0x0
  428a9b:	call   DWORD PTR [esi-0x11d87d]
  428aa1:	dec    ebp
  428aa2:	add    BYTE PTR [eax],al
  428aa4:	inc    edx
  428aa5:	add    BYTE PTR [edi+0x2f],ah
  428aa8:	int3   
  428aa9:	gs add bh,bh
  428aac:	mov    cl,0xff
  428aae:	js     0x428a37
  428ab0:	(bad)  
  428ab1:	jle    0x428ab3
  428ab3:	add    BYTE PTR [esi-0x3bc700],dl
  428ab9:	adc    esp,ecx
  428abb:	mov    DWORD PTR [ebx+eax*4],ecx
  428abe:	(bad)  
  428abf:	add    BYTE PTR [si+0x83],bl
  428ac4:	dec    BYTE PTR [ecx-0x19ff9676]
  428aca:	cmp    edi,0xffffffc1
  428acd:	dec    ebx
  428acf:	daa    
  428ad0:	jmp    FWORD PTR [esi]
  428ad2:	(bad)  
  428ad3:	dec    DWORD PTR [ebx-0x33e42d01]
  428ad9:	out    0xff,al
  428adb:	add    BYTE PTR [edi-0x7d],ch
  428ade:	div    DWORD PTR [eax+eax*1+0x2f]
  428ae2:	add    bh,bh
  428ae4:	mov    bh,0xff
  428ae6:	aaa    
  428ae7:	fild   DWORD PTR [ebx-0xb00ff5d]
  428aed:	jmp    FWORD PTR [edi]
  428aef:	push   esi
  428af0:	(bad)  
  428af1:	cmp    BYTE PTR [eax],al
  428af3:	(bad)  
  428af4:	jl     0x428af6
  428af6:	out    0xbb,al
  428af8:	add    BYTE PTR [ebp+0x5400ff],cl
  428afe:	or     dh,BYTE PTR [edi+0xc2ff]
  428b04:	mov    ds:0x1e7bff,al
  428b09:	in     al,dx
  428b0a:	(bad)  
  428b0b:	dec    DWORD PTR [edx]
  428b0d:	add    BYTE PTR [edi-0x6],bl
  428b10:	add    BYTE PTR [ebx],al
  428b12:	(bad)  
  428b13:	dec    DWORD PTR [ebx]
  428b15:	inc    DWORD PTR [ecx]
  428b17:	jbe    0x428b19
  428b19:	mov    al,0xff
  428b1b:	add    BYTE PTR [eax-0x96e01],ah
  428b21:	sbb    eax,0xffcc0083
  428b26:	ins    BYTE PTR es:[edi],dx
  428b27:	mov    edx,0xffffa8ff
  428b2c:	in     eax,0x0
  428b2e:	mov    edx,0xcc8a8942
  428b33:	call   esp
  428b35:	add    BYTE PTR [edx-0x7c890082],cl
  428b3b:	jmp    DWORD PTR [ebx+0x0]
  428b3e:	and    al,0x93
  428b40:	or     DWORD PTR [ebp+0x0],0x0
  428b44:	sbb    eax,0xffeacacc
  428b49:	(bad)  
  428b4a:	dec    DWORD PTR [ecx+0x29d3cc73]
  428b50:	adc    DWORD PTR [esi-0x1],0xffffffff
  428b54:	jmp    0xfbdd58
  428b59:	mov    DWORD PTR [eax],eax
  428b5b:	adc    DWORD PTR [edx],0xffffff89
  428b5e:	enter  0xcc16,0xe1
  428b62:	(bad)  
  428b63:	call   DWORD PTR [ebp-0xd57a7d]
  428b69:	fdivr  st,st(7)
  428b6b:	add    BYTE PTR [edx],bl
  428b6d:	int3   
  428b6e:	push   es
  428b6f:	push   eax
  428b70:	add    DWORD PTR [eax-0x240001],0xffffff9b
  428b77:	test   DWORD PTR [eax],0xa200ff79
  428b7d:	dec    DWORD PTR [esi+eiz*2+0xffeacc]
  428b84:	mov    eax,0x83df0589
  428b89:	inc    edx
  428b8a:	inc    DWORD PTR [eax]
  428b8c:	into   
  428b8d:	add    BYTE PTR [ecx-0x37],bl
  428b90:	jmp    DWORD PTR [ebx+eax*4+0x7000000]
  428b97:	xchg   esi,eax
  428b98:	dec    DWORD PTR [esi+0xe7ff83]
  428b9e:	ins    DWORD PTR es:[edi],dx
  428b9f:	ud0    edx,DWORD PTR [esi]
  428ba2:	cmp    edi,0xffffffa9
  428ba5:	int3   
  428ba6:	xchg   esi,eax
  428ba7:	fcmovne st,st(4)
  428ba9:	push   ds
  428baa:	mov    DWORD PTR [eax],eax
  428bac:	out    dx,al
  428bad:	int3   
  428bae:	(bad)  
  428baf:	data16 add dl,ah
  428bb2:	add    DWORD PTR [ebx+0x3b8600e6],0xffffffff
  428bb9:	clc    
  428bba:	dec    DWORD PTR [ecx+0x63c6cce0]
  428bc0:	add    BYTE PTR [ebp-0x1],ch
  428bc3:	jmp    FWORD PTR [edi+0xb1ecc]
  428bc9:	xor    eax,DWORD PTR [ebx+0x62ffa2ff]
  428bcf:	xchg   bh,bh
  428bd1:	mov    edx,0xff72ffcc
  428bd6:	scas   al,BYTE PTR es:[edi]
  428bd7:	nop
  428bd8:	sbb    DWORD PTR [ecx],0xffffff83
  428bdb:	sub    edi,0x0
  428bde:	int3   
  428bdf:	push   edi
  428be0:	add    BYTE PTR [ecx+0xbcffff],dl
  428be6:	fwait
  428be7:	sti    
  428be8:	add    BYTE PTR [eax],cl
  428bea:	inc    DWORD PTR [eax]
  428bec:	and    eax,0x83e1e4ff
  428bf1:	int3   
  428bf2:	(bad)  
  428bf3:	call   DWORD PTR [esi]
  428bf5:	add    BYTE PTR [edi-0x7c18ffa0],dl
  428bfb:	or     DWORD PTR [esi-0x1],0x53
  428bff:	out    0x0,al
  428c01:	jmp    0xffc75905
  428c06:	mov    BYTE PTR [edx+0x89c000],dh
  428c0c:	ins    DWORD PTR es:[edi],dx
  428c0d:	dec    DWORD PTR [esi-0x7664ff24]
  428c13:	sub    ebp,0xffffffcc
  428c16:	xor    al,BYTE PTR [eax]
  428c18:	sbb    DWORD PTR [esi+0xa6cc00],0x2d
  428c1f:	(bad)  
  428c20:	dec    edi
  428c22:	add    bh,bh
  428c24:	idiv   edi
  428c26:	cld    
  428c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c28:	int3   
  428c29:	sahf   
  428c2a:	(bad)  
  428c2b:	call   eax
  428c2d:	inc    DWORD PTR [ebp+0x55]
  428c30:	mov    DWORD PTR ds:0xff5fff00,ebx
  428c36:	xor    eax,0xff4fff41
  428c3b:	add    BYTE PTR [edx-0x7d],ch
  428c3e:	cmp    edx,edx
  428c40:	push   DWORD PTR [eax-0x1]
  428c43:	push   DWORD PTR [ecx+0xc70eff]
  428c49:	(bad)  
  428c4a:	inc    DWORD PTR [eax]
  428c4c:	(bad)  
  428c4d:	int3   
  428c4e:	(bad)  
  428c4f:	aad    0xcc
  428c51:	push   edx
  428c52:	add    bh,bh
  428c54:	pop    esi
  428c55:	int3   
  428c56:	loopne 0x428c6f
  428c58:	add    edx,0xffffff83
  428c5b:	int3   
  428c5c:	(bad)
  428c5f:	mov    bh,bh
  428c61:	and    DWORD PTR [eax],eax
  428c63:	(bad)  
  428c64:	in     eax,dx
  428c65:	add    bh,ch
  428c67:	fdiv   st(7),st
  428c69:	or     DWORD PTR [ecx-0x4ff3f34],0xffffffd6
  428c70:	add    BYTE PTR [esp+ecx*8-0x1],dl
  428c74:	in     al,0x0
  428c76:	cmp    dl,dl
  428c78:	int3   
  428c79:	push   edi
  428c7a:	(bad)  
  428c7b:	jmp    FWORD PTR ds:0xffccf500
  428c81:	pop    eax
  428c82:	(bad)  
  428c83:	dec    ebp
  428c85:	call   eax
  428c87:	jno    0x428c0c
  428c89:	push   esi
  428c8a:	inc    DWORD PTR [eax]
  428c8c:	sbb    eax,0xff8125ff
  428c91:	stos   BYTE PTR es:[edi],al
  428c92:	add    BYTE PTR [ecx+0x41888322],cl
  428c98:	xor    DWORD PTR [ebx+eax*4-0x7d],0x31
  428c9d:	add    cl,ch
  428c9f:	mov    bl,0xff
  428ca1:	jmp    0x897310a5
  428ca6:	ja     0x428c89
  428ca8:	add    BYTE PTR [ebx-0x7c0100],dh
  428cae:	cmp    ebx,DWORD PTR [esi-0xfff001]
  428cb4:	hlt    
  428cb5:	(bad)  
  428cb6:	stc    
  428cb7:	adc    BYTE PTR [eax],al
  428cb9:	sar    bh,0xff
  428cbc:	push   0x941e00
  428cc1:	popf   
  428cc2:	(bad)  
  428cc3:	jmp    FWORD PTR [ebx-0x1]
  428cc6:	adc    ch,ch
  428cc8:	push   DWORD PTR [esi]
  428cca:	mov    DWORD PTR [eax],eax
  428ccc:	call   0x89a3:0xffed06ff
  428cd3:	add    bl,ah
  428cd5:	add    dh,cl
  428cd7:	mov    edi,edi
  428cd9:	mov    eax,ds:0x83d6ff00
  428cde:	ss retf 0x9400
  428ce2:	add    bh,bh
  428ce4:	dec    edx
  428ce5:	adc    esi,0xf
  428ce8:	dec    DWORD PTR [edi+edi*8]
  428ceb:	add    BYTE PTR [ebx+eax*4],dl
  428cee:	mov    ss,WORD PTR [ecx-0x1]
  428cf1:	out    dx,eax
  428cf2:	dec    esp
  428cf4:	int    0x0
  428cf6:	ss jno 0x428cf9
  428cf9:	lods   al,BYTE PTR ds:[esi]
  428cfa:	inc    DWORD PTR [ebx-0x43dfff7c]
  428d00:	jmp    FWORD PTR [edi+edi*8+0x0]
  428d04:	jns    0x428d05
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	add    eax,0xffff5800
  428d0c:	add    DWORD PTR [eax],eax
  428d0e:	fstp   DWORD PTR [edx+0x0]
  428d11:	out    dx,al
  428d12:	add    DWORD PTR [eax],0xffffffe5
  428d15:	add    BYTE PTR [ecx+0x57],ch
  428d18:	add    BYTE PTR [eax+eax*1+0x0],dh
  428d1c:	or     esp,0xbbff2084
  428d22:	dec    DWORD PTR [ecx-0x7836008a]
  428d28:	add    bl,dl
  428d2a:	add    DWORD PTR [eax],0xffffffe5
  428d2d:	inc    DWORD PTR [ecx+edi*4+0x0]
  428d31:	jae    0x428cb6
  428d33:	add    BYTE PTR [esi],bl
  428d35:	push   edx
  428d37:	sbb    DWORD PTR [eax],eax
  428d39:	retf   
  428d3a:	inc    DWORD PTR [eax]
  428d3c:	and    eax,DWORD PTR [ebx+0x66ff0dd4]
  428d42:	(bad)  
  428d43:	jmp    DWORD PTR [edx-0xeecb01]
  428d49:	and    eax,0xbeff00
  428d4e:	sbb    al,0xe4
  428d50:	sub    DWORD PTR [edi-0x1],0xffffffff
  428d54:	test   BYTE PTR [ebx-0x60000df1],al
  428d5a:	add    ah,cl
  428d5c:	inc    edi
  428d5d:	jmp    FWORD PTR [edi+edi*8-0x7d]
  428d61:	sbb    cl,ah
  428d63:	call   ecx
  428d65:	add    DWORD PTR [edx],0x55
  428d68:	call   esi
  428d6a:	inc    DWORD PTR [eax]
  428d6c:	mov    bh,bh
  428d6e:	je     0x428ddb
  428d70:	add    bl,ah
  428d72:	(bad)  
  428d73:	jmp    DWORD PTR ds:0x257100
  428d79:	cmp    BYTE PTR [ebx-0x1f004201],al
  428d7f:	cmp    bh,bh
  428d81:	xchg   bh,bh
  428d83:	int3   
  428d84:	cmp    DWORD PTR [ebx-0x5eff5d98],eax
  428d8a:	(bad)  
  428d8b:	push   eax
  428d8d:	add    BYTE PTR [eax],bl
  428d8f:	sti    
  428d90:	cmp    DWORD PTR [ebx-0x1],0x0
  428d94:	jno    0x428d95
  428d96:	ss test eax,0xcccc8100
  428d9c:	adc    edi,edi
  428d9e:	jne    0x428db6
  428da0:	push   ebp
  428da2:	(bad)  
  428da3:	jmp    esi
  428da5:	call   FWORD PTR [edx+0xca00e5]
  428dab:	jmp    DWORD PTR [eax+eax*1]
  428dae:	dec    esp
  428daf:	cmc    
  428db0:	push   DWORD PTR [edx+0x8300ff]
  428db6:	shr    BYTE PTR [eax+eax*1],1
  428db9:	and    bh,bh
  428dbb:	and    DWORD PTR [edi+edi*8],0x2d
  428dbf:	pop    ds
  428dc0:	add    BYTE PTR [ecx-0x7d],al
  428dc3:	add    ah,dh
  428dc5:	add    cl,ah
  428dc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428dc8:	add    BYTE PTR [ecx-0x7d],cl
  428dcb:	jmp    DWORD PTR [edx-0x338a0d01]
  428dd1:	test   al,0x83
  428dd3:	xor    DWORD PTR [eax-0x34],0xffffffe4
  428dd7:	adc    eax,0x89001a83
  428ddc:	push   cs
  428ddd:	(bad)  
  428dde:	clc    
  428ddf:	(bad)  
  428de0:	dec    DWORD PTR [edx]
  428de2:	(bad)  
  428de3:	inc    DWORD PTR [esi-0x33bbee00]
  428de9:	mov    ebx,0xfff5ff00
  428dee:	repnz add edi,edi
  428df1:	jne    0x428d76
  428df3:	dec    DWORD PTR [eax-0x1]
  428df6:	cmc    
  428df7:	dec    ecx
  428df8:	int3   
  428df9:	xchg   ebx,eax
  428dfa:	dec    DWORD PTR [ecx-0x2afff29]
  428e00:	add    BYTE PTR [edi+0x0],ah
  428e03:	jmp    DWORD PTR [edi+edi*8-0x26]
  428e07:	aas    
  428e08:	call   DWORD PTR [edi-0x7c430077]
  428e0e:	dec    esp
  428e0f:	imul   edi,edi,0x500ff2f
  428e15:	adc    DWORD PTR [eax],0xfffffff7
  428e18:	int3   
  428e19:	leave  
  428e1a:	(bad)  
  428e1b:	(bad)  
  428e1c:	jg     0x428dea
  428e1e:	and    eax,0x2fcc91
  428e23:	mov    DWORD PTR [esi-0x76b99834],esi
  428e29:	ins    BYTE PTR es:[edi],dx
  428e2a:	add    BYTE PTR [ecx+0x16f1ffa1],cl
  428e30:	(bad)  
  428e31:	inc    BYTE PTR [eax]
  428e33:	add    BYTE PTR [edi-0x77],dl
  428e36:	and    eax,0xb8ff7e
  428e3b:	add    BYTE PTR [edi+0x0],cl
  428e3e:	xchg   esi,eax
  428e3f:	inc    esp
  428e40:	add    BYTE PTR [ecx-0x4b0001],bl
  428e46:	test   eax,0xff9aff8a
  428e4b:	int3   
  428e4c:	ins    DWORD PTR es:[edi],dx
  428e4d:	add    BYTE PTR [edx-0x68],ah
  428e50:	(bad)  
  428e51:	mov    esp,0x89cdff89
  428e56:	adc    dh,BYTE PTR [edx+0xff6a89]
  428e5c:	mov    ch,0x0
  428e5e:	stos   DWORD PTR es:[edi],eax
  428e5f:	imul   edi,edi,0x32
  428e62:	add    BYTE PTR [eax],al
  428e64:	jge    0x428e66
  428e66:	dec    ebp
  428e67:	jnp    0x428e69
  428e69:	mov    bh,0x83
  428e6b:	push   ecx
  428e6d:	add    dl,bl
  428e6f:	cmp    bh,0x12
  428e72:	add    BYTE PTR [ebx+0x7b30ffe1],al
  428e78:	jmp    DWORD PTR [edx-0x7d]
  428e7b:	add    BYTE PTR [ecx+0xd0b700],dl
  428e81:	xchg   DWORD PTR [ebx+0x3789bcff],eax
  428e87:	inc    eax
  428e88:	(bad)  
  428e89:	cld    
  428e8a:	add    bh,bh
  428e8c:	mov    edx,0x88db00
  428e91:	dec    ebx
  428e92:	(bad)  
  428e93:	dec    DWORD PTR [esi-0x689b00]
  428e99:	enter  0xcc00,0xd7
  428e9d:	sub    DWORD PTR [edi],0xffffffa4
  428ea0:	(bad)  
  428ea1:	out    dx,al
  428ea2:	inc    DWORD PTR [eax]
  428ea4:	jb     0x428ea6
  428ea6:	xchg   ecx,eax
  428ea7:	scas   al,BYTE PTR es:[edi]
  428ea8:	add    BYTE PTR [esi-0x1],bh
  428eab:	jmp    DWORD PTR [ebx-0x3f8d00]
  428eb1:	retf   
  428eb2:	(bad)  
  428eb3:	(bad)  
  428eb4:	(bad)  
  428eb6:	pop    eax
  428eb7:	jb     0x428e85
  428eb9:	int3   
  428eba:	int3   
  428ebb:	int3   
  428ebc:	int3   
  428ebd:	int3   
  428ebe:	int3   
  428ebf:	int3   
  428ec0:	push   ebx
  428ec1:	mov    ebx,0x1
  428ec6:	push   esi
  428ec7:	test   BYTE PTR ds:0x448d34,bl
  428ecd:	jne    0x428edf
  428ecf:	mov    eax,ds:0x445038
  428ed4:	or     DWORD PTR ds:0x448d34,ebx
  428eda:	mov    ds:0x449000,eax
  428edf:	push   0x0
  428ee1:	push   0x54328
  428ee6:	push   0x40000
  428eeb:	call   DWORD PTR ds:0x449000
  428ef1:	push   0x0
  428ef3:	push   0x0
  428ef5:	mov    esi,eax
  428ef7:	call   DWORD PTR ds:0x445070
  428efd:	cmp    al,0x57
  428eff:	jne    0x428f36
  428f01:	test   BYTE PTR ds:0x448d28,bl
  428f07:	jne    0x428f1f
  428f09:	or     DWORD PTR ds:0x448d28,ebx
  428f0f:	push   0x447a48
  428f14:	call   DWORD PTR ds:0x445040
  428f1a:	mov    ds:0x448d24,eax
  428f1f:	mov    ecx,DWORD PTR ds:0x448d24
  428f25:	push   0x447a3c
  428f2a:	push   ecx
  428f2b:	call   DWORD PTR ds:0x44503c
  428f31:	mov    ds:0x448d30,eax
  428f36:	push   0x54328
  428f3b:	push   0x0
  428f3d:	push   esi
  428f3e:	call   DWORD PTR ds:0x448d30
  428f44:	pop    esi
  428f45:	mov    ds:0x448d04,eax
  428f4a:	pop    ebx
  428f4b:	ret    
  428f4c:	int3   
  428f4d:	int3   
  428f4e:	int3   
  428f4f:	int3   
  428f50:	iret   
  428f51:	pop    edi
  428f52:	inc    DWORD PTR [ebx+0x58834bff]
  428f58:	rcl    BYTE PTR [edx+0x6d0083cc],cl
  428f5e:	(bad)  
  428f5f:	ficom  WORD PTR [ecx-0x7c88]
  428f65:	xchg   ebp,eax
  428f66:	and    esp,0x66
  428f69:	sub    edi,edi
  428f6b:	inc    DWORD PTR [ebx+0x8acff60]
  428f71:	dec    ebx
  428f72:	add    BYTE PTR [eax],al
  428f74:	mov    DWORD PTR [edi-0x28690901],esi
  428f7a:	inc    DWORD PTR [eax]
  428f7c:	mov    DWORD PTR [ebx+eax*4+0x92f41b],edx
  428f83:	add    DWORD PTR [eax],0xffffffe9
  428f86:	dec    DWORD PTR ds:0x83e5b9
  428f8c:	add    BYTE PTR [ecx],ch
  428f8e:	jmp    DWORD PTR [edi+edi*1]
  428f91:	scas   eax,DWORD PTR es:[edi]
  428f92:	add    bh,bh
  428f94:	mov    DWORD PTR [edx+0x3565783],edx
  428f9a:	add    BYTE PTR [ecx-0x477cef77],cl
  428fa0:	stc    
  428fa1:	pop    ebp
  428fa2:	cmp    edi,0xffffffff
  428fa5:	jae    0x428fa6
  428fa7:	imul   ebp,DWORD PTR [ebx+0x5b],0xa9ffff00
  428fae:	add    BYTE PTR [edx-0x6a],bl
  428fb1:	sbb    eax,0x7dffffff
  428fb6:	inc    ecx
  428fb8:	pop    ss
  428fb9:	(bad)  
  428fba:	inc    DWORD PTR [ebx+0x7d00e3ff]
  428fc0:	inc    edi
  428fc1:	push   0xe1ff8383
  428fc6:	push   DWORD PTR [ebp+0xffcfe9]
  428fcc:	mov    DWORD PTR [ebx-0x1f5a0200],ebp
  428fd2:	inc    DWORD PTR [ebx+0x25ffe500]
  428fd8:	push   0xffffffec
  428fdd:	jge    0x428f68
  428fdf:	mov    eax,ds:0x83418a
  428fe4:	adc    DWORD PTR [esi],0x0
  428fe7:	cli    
  428fe8:	inc    ebx
  428fe9:	xor    al,BYTE PTR [eax]
  428feb:	(bad)  
  428fec:	push   DWORD PTR [edx]
  428fee:	call   FWORD PTR [ecx-0x337c17fc]
  428ff4:	jmp    FWORD PTR [ecx]
  428ff6:	call   FWORD PTR [ecx+ecx*2+0x892e]
  428ffd:	sar    edi,1
  428fff:	mov    ds:0xffff4466,eax
  429004:	dec    edx
  429006:	push   ebx
  429008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429009:	cwde   
  42900a:	inc    DWORD PTR [ebx+0x63ff6aff]
  429010:	or     ch,BYTE PTR [ebx-0x34]
  429013:	add    ah,cl
  429015:	outs   dx,DWORD PTR ds:[esi]
  429016:	dec    DWORD PTR [edx+0x7]
  429019:	(bad)  
  42901b:	add    BYTE PTR [eax],al
  42901d:	add    BYTE PTR [ebx-0x2cddd6],al
  429023:	dec    esp
  429025:	fild   WORD PTR [ebx-0x79bee4]
  42902b:	cmp    edi,0x64
  42902e:	jmp    DWORD PTR [ebp-0x2c]
  429031:	and    al,BYTE PTR [ebx+0x7700ff]
  429037:	push   eax
  429038:	enter  0xcca6,0xff
  42903c:	(bad)  
  42903d:	mov    esp,0x8674bd00
  429042:	int3   
  429043:	inc    DWORD PTR [eax]
  429045:	mov    cl,0xff
  429047:	sahf   
  429048:	sub    ebp,DWORD PTR [eax]
  42904a:	mov    DWORD PTR [eax],eax
  42904c:	add    BYTE PTR [ebp+0x43c628ff],dh
  429052:	int3   
  429053:	add    bh,bh
  429055:	mov    ?,edi
  429057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429058:	out    dx,eax
  429059:	dec    edi
  42905a:	add    bh,bh
  42905c:	add    ch,bh
  42905e:	xor    edx,0xffffffbc
  429061:	cli    
  429062:	(bad)  
  429063:	inc    DWORD PTR [eax]
  429065:	xor    edi,edi
  429067:	pop    esi
  429068:	pop    ss
  429069:	int    0x83
  42906b:	add    bh,bh
  42906d:	and    eax,0x49707883
  429072:	add    ah,cl
  429074:	jmp    FWORD PTR [ebx-0x1]
  429077:	loopne 0x429058
  429079:	inc    DWORD PTR [ebx-0x7c1f7c01]
  42907f:	or     DWORD PTR [edx-0xe4],ebp
  429085:	stos   DWORD PTR es:[edi],eax
  429086:	or     DWORD PTR [eax+eax*2],0x58
  42908a:	int3   
  42908b:	add    BYTE PTR [ebx-0x6a8400e0],al
  429091:	cld    
  429092:	int3   
  429093:	(bad)  
  429094:	push   DWORD PTR [eax+eax*1]
  429097:	adc    BYTE PTR [ecx+0xff27],cl
  42909d:	dec    esp
  42909e:	call   DWORD PTR [eax]
  4290a0:	push   ss
  4290a1:	cmc    
  4290a2:	(bad)  
  4290a3:	(bad)  
  4290a4:	call   DWORD PTR [edi+edi*8-0xf61125]
  4290ab:	int3   
  4290ac:	inc    DWORD PTR [esi+0x69d59a00]
  4290b2:	int3   
  4290b3:	int3   
  4290b4:	add    DWORD PTR [eax],0xffffffff
  4290b7:	call   eax
  4290b9:	ja     0x4290ba
  4290bb:	inc    DWORD PTR [eax]
  4290bd:	add    eax,0xc9b8e0ff
  4290c2:	(bad)  
  4290c3:	(bad)  
  4290c4:	(bad)  
  4290c5:	mov    eax,0xfdd43983
  4290ca:	add    ah,cl
  4290cc:	add    DWORD PTR [ebp-0x1],0xffffff81
  4290d0:	call   0xff6d:0xff89ff92
  4290d7:	dec    edx
  4290d8:	lods   al,BYTE PTR ds:[esi]
  4290d9:	int    0x0
  4290db:	int3   
  4290dc:	add    BYTE PTR [ebx-0x69cd101],al
  4290e2:	(bad)  
  4290e3:	(bad)  
  4290e4:	jmp    ebx
  4290e6:	add    dh,dh
  4290e8:	dec    esi
  4290e9:	xor    edi,edi
  4290eb:	add    BYTE PTR [eax],al
  4290ed:	mov    edx,0x4cd89089
  4290f2:	inc    DWORD PTR [eax]
  4290f4:	call   FWORD PTR [ebx-0x7d]
  4290f7:	cwde   
  4290f8:	adc    eax,0xffffec
  4290fd:	mov    esi,0x23c97e00
  429102:	add    bh,bh
  429104:	add    cl,dh
  429106:	push   DWORD PTR [ecx]
  429108:	sbb    al,0xc8
  42910a:	(bad)  
  42910b:	inc    DWORD PTR [eax]
  42910d:	adc    bh,bh
  42910f:	mov    bh,0xbf
  429111:	xchg   ebp,eax
  429112:	(bad)  
  429113:	(bad)  
  429114:	call   DWORD PTR [ebx]
  429116:	add    BYTE PTR [edi],dh
  429118:	clc    
  429119:	pop    ds
  42911a:	mov    DWORD PTR [eax],eax
  42911c:	add    BYTE PTR [esi],ah
  42911e:	add    BYTE PTR [esi],dh
  429120:	sub    esi,DWORD PTR [edx]
  429122:	add    bh,bh
  429124:	int3   
  429125:	sbb    bh,bh
  429127:	je     0x42916c
  429129:	xchg   edi,edi
  42912b:	add    bh,bh
  42912d:	mov    cl,0xff
  42912f:	dec    esp
  429130:	int3   
  429131:	add    edi,edi
  429133:	add    ah,cl
  429135:	call   0xff:0x6d7b85cc
  42913c:	int3   
  42913d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42913e:	jmp    FWORD PTR [esp+edx*4-0x7c0000f5]
  429145:	push   eax
  429146:	sbb    ecx,0x40
  429149:	push   cs
  42914a:	add    ah,cl
  42914c:	jmp    esp
  42914e:	adc    esp,0xffffff88
  429151:	test   eax,0x26ff83ff
  429156:	add    al,ch
  429158:	das    
  429159:	push   ecx
  42915a:	dec    DWORD PTR [ecx+0x5e00b300]
  429160:	push   0xffffffe8
  429162:	inc    DWORD PTR [ebx+0x16ff3200]
  429168:	push   ecx
  429169:	out    dx,eax
  42916a:	(bad)  
  42916b:	inc    DWORD PTR [ebx+0x7f80ff23]
  429171:	sub    edi,edi
  429173:	mov    edi,edi
  429175:	in     al,dx
  429176:	call   FWORD PTR [edx-0x40]
  429179:	nop
  42917a:	inc    DWORD PTR [eax]
  42917c:	inc    DWORD PTR [ebx-0x1]
  42917f:	popa   
  429180:	inc    esp
  429181:	push   ds
  429182:	(bad)  
  429183:	(bad)  
  429184:	(bad)  
  429185:	jns    0x429153
  429187:	xlat   BYTE PTR ds:[ebx]
  429188:	push   0x4f
  42918a:	add    BYTE PTR [ecx+0x4eff2083],cl
  429190:	mov    esp,gs
  429192:	add    BYTE PTR [eax],al
  429194:	dec    esp
  429196:	add    BYTE PTR [esi+0xff4a0a],dl
  42919c:	(bad)  
  42919d:	jg     0x42919e
  42919f:	adc    al,0xfd
  4291a1:	xchg   edx,eax
  4291a2:	int3   
  4291a3:	inc    DWORD PTR [eax]
  4291a5:	push   ebx
  4291a6:	add    BYTE PTR [edx],al
  4291a8:	fidiv  WORD PTR ds:0xdbccffff
  4291ae:	add    BYTE PTR [esi+0x13],ch
  4291b1:	cli    
  4291b2:	(bad)  
  4291b3:	(bad)  
  4291b4:	dec    DWORD PTR [eax-0x77]
  4291b7:	dec    edx
  4291b8:	add    BYTE PTR [edx-0x7e000001],cl
  4291be:	int3   
  4291bf:	mov    ds:0xcc83e1a0,al
  4291c4:	(bad)  
  4291c5:	fmul   st(4),st
  4291c7:	fiadd  DWORD PTR [ebp-0x12]
  4291ca:	inc    DWORD PTR [eax]
  4291cc:	add    BYTE PTR [ebp-0x1],bh
  4291cf:	xchg   BYTE PTR [edx+ebp*2],bl
  4291d2:	(bad)  
  4291d3:	(bad)  
  4291d4:	inc    DWORD PTR [esi]
  4291d6:	dec    DWORD PTR [ebx+ebp*2]
  4291d9:	and    BYTE PTR [ebx+0xf4ccff],al
  4291df:	lods   al,BYTE PTR ds:[esi]
  4291e0:	sub    al,0x78
  4291e2:	add    BYTE PTR [eax],al
  4291e4:	(bad)  
  4291e5:	mov    ecx,0x55ed7600
  4291ea:	int3   
  4291eb:	int3   
  4291ec:	inc    DWORD PTR [edi]
  4291ee:	push   DWORD PTR [esi]
  4291f0:	(bad)  
  4291f1:	iret   
  4291f2:	inc    DWORD PTR [ebx+0x268363ff]
  4291f8:	into   
  4291f9:	adc    al,0x0
  4291fb:	add    BYTE PTR [ecx+0x23458348],cl
  429201:	scas   al,BYTE PTR es:[edi]
  429202:	cmp    edi,0xffffffff
  429205:	or     al,0xff
  429207:	outs   dx,BYTE PTR ds:[esi]
  429208:	mov    ecx,0xffff00ea
  42920d:	and    al,0xff
  42920f:	fst    DWORD PTR [edi+ebp*4-0x7d]
  429213:	add    BYTE PTR [eax],al
  429215:	xchg   ebx,eax
  429216:	add    BYTE PTR [eax],cl
  429218:	in     al,0x17
  42921a:	inc    DWORD PTR [eax]
  42921c:	mov    ebx,esp
  42921e:	add    BYTE PTR [ebx-0x60],ah
  429221:	push   ecx
  429222:	inc    DWORD PTR [eax]
  429224:	add    BYTE PTR [ecx+ecx*4],cl
  429227:	mov    eax,ds:0xff89ade5
  42922c:	add    ch,dl
  42922e:	add    cl,dl
  429230:	out    dx,eax
  429231:	retf   0xcc
  429234:	(bad)  
  429235:	fdivp  st(7),st
  429237:	push   edi
  429238:	ror    edx,0xff
  42923b:	dec    esp
  42923d:	mov    es,WORD PTR [eax]
  42923f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429240:	inc    ebp
  429241:	rol    BYTE PTR [eax],cl
  429243:	(bad)  
  429244:	(bad)  
  429245:	jge    0x429247
  429247:	loop   0x429284
  429249:	mov    eax,ds:0xa0ffcc00
  42924e:	or     esp,0xffffff9b
  429251:	imul   ecx,DWORD PTR [ecx-0xc30001],0xdb4d92
  42925b:	or     DWORD PTR [ecx+0x5d2e83bc],0x76
  429262:	add    bh,bh
  429264:	dec    DWORD PTR [edi+0x0]
  429267:	xchg   esi,eax
  429268:	push   es
  429269:	jnp    0x42926a
  42926b:	(bad)  
  42926c:	jmp    DWORD PTR [eax-0x77]
  42926f:	out    0x7a,eax
  429271:	test   al,0x89
  429273:	add    DWORD PTR [eax],0x6e
  429276:	cmp    DWORD PTR [ebx+eax*1+0x78],0x0
  42927b:	(bad)  
  42927c:	dec    DWORD PTR [ebp-0x7d]
  42927f:	ins    DWORD PTR es:[edi],dx
  429280:	xchg   esi,edi
  429282:	add    BYTE PTR [ebx-0x5affab7d],al
  429288:	test   DWORD PTR [esi+0x0],0xccc383cc
  42928f:	sub    BYTE PTR [esi+0x57],al
  429292:	inc    DWORD PTR [ebx-0x46ffee01]
  429298:	(bad)  
  429299:	loope  0x42929a
  42929b:	add    bh,bh
  42929d:	cmp    edi,edi
  42929f:	mov    dl,0x1c
  4292a1:	inc    ecx
  4292a2:	inc    DWORD PTR [eax]
  4292a4:	(bad)  
  4292a5:	jl     0x4292a7
  4292a7:	mov    al,cl
  4292a9:	(bad)  
  4292aa:	add    BYTE PTR [ecx-0x4ff4b00],cl
  4292b0:	fucomi st,st(3)
  4292b2:	inc    DWORD PTR [ebx+0x2ffe7ff]
  4292b8:	retf   0xff9f
  4292bb:	int3   
  4292bc:	add    DWORD PTR [edi-0x7d],0xffffffc2
  4292c0:	out    dx,al
  4292c1:	dec    edi
  4292c2:	add    DWORD PTR [ebx+0x47ff4c00],0x5
  4292c9:	out    0x83,al
  4292cb:	add    BYTE PTR [eax],al
  4292cd:	mov    ?,edi
  4292cf:	push   ds
  4292d0:	sub    ah,BYTE PTR [ecx-0x1]
  4292d3:	(bad)  
  4292d4:	jmp    DWORD PTR [edi+0x5f1d0cff]
  4292da:	dec    DWORD PTR [ecx+0x1bff31ff]
  4292e0:	ins    BYTE PTR es:[edi],dx
  4292e1:	cdq    
  4292e2:	(bad)  
  4292e3:	inc    DWORD PTR [ebx+0x20688381]
  4292e9:	or     al,0xff
  4292eb:	add    bh,bh
  4292ed:	add    DWORD PTR [eax],0xff51862a
  4292f3:	inc    DWORD PTR [ebx-0x37430038]
  4292f9:	test   al,0xff
  4292fb:	(bad)  
  4292fc:	inc    DWORD PTR [ecx+ecx*4-0xbc3c8f]
  429303:	mov    edi,edi
  429305:	sar    bh,1
  429307:	cmp    al,0x8a
  429309:	leave  
  42930a:	(bad)  
  42930b:	inc    DWORD PTR [eax]
  42930d:	mov    dl,0x83
  42930f:	inc    edx
  429310:	push   edx
  429311:	adc    bh,bh
  429313:	(bad)  
  429314:	jmp    DWORD PTR [edx+0x264470ff]
  42931a:	(bad)  
  42931b:	(bad)  
  42931c:	push   DWORD PTR [ecx-0x7d]
  42931f:	retf   0x43
  429322:	int3   
  429323:	dec    DWORD PTR [ecx-0x234500ed]
  429329:	mov    ecx,0x91ffff83
  42932e:	call   FWORD PTR [esp+ecx*2+0x58]
  429332:	add    BYTE PTR [ecx+0x7c00a6ff],cl
  429338:	test   DWORD PTR [ebx-0x1ff0001],ebp
  42933e:	and    ecx,0x1b
  429341:	std    
  429342:	inc    DWORD PTR [eax]
  429344:	int3   
  429345:	sar    edi,cl
  429347:	jp     0x4293a0
  429349:	fild   WORD PTR [ebx-0x3370007d]
  42934f:	ret    
  429350:	popf   
  429351:	lahf   
  429352:	mov    esp,ecx
  429354:	add    BYTE PTR [eax],cl
  429356:	xor    esp,0xffffffda
  429359:	inc    edx
  42935a:	(bad)  
  42935b:	inc    DWORD PTR [eax]
  42935d:	loop   0x42935e
  42935f:	into   
  429360:	mov    bh,0xd8
  429362:	add    bh,bh
  429364:	int3   
  429365:	sar    bh,0x9b
  429368:	mov    ecx,0x83ffcc8d
  42936d:	cmp    edi,edi
  42936f:	ja     0x4293b0
  429371:	lahf   
  429372:	add    BYTE PTR [eax],al
  429374:	add    cl,al
  429376:	mov    ecx,ebp
  429378:	push   esi
  429379:	pop    ecx
  42937a:	inc    DWORD PTR [eax]
  42937c:	dec    edx
  42937e:	push   DWORD PTR [eax]
  429380:	fdivr  st(7),st
  429382:	inc    DWORD PTR [eax]
  429384:	(bad)  
  429385:	jg     0x429386
  429387:	iret   
  429388:	push   ecx
  42938a:	add    BYTE PTR [ebx+0x6ccc52ff],al
  429390:	lea    esi,[ebx+0x0]
  429393:	mov    edi,edi
  429395:	retf   
  429396:	add    BYTE PTR [ebx-0x66],dl
  429399:	adc    BYTE PTR [eax],al
  42939b:	(bad)  
  42939c:	call   FWORD PTR [eax+0x746eafff]
  4293a2:	add    BYTE PTR [ebx+0x3883ef00],al
  4293a8:	popf   
  4293a9:	add    eax,DWORD PTR [eax]
  4293ab:	add    BYTE PTR [ebx-0x42cd3383],al
  4293b1:	scas   al,BYTE PTR es:[edi]
  4293b2:	add    bh,bh
  4293b4:	add    BYTE PTR [ebx+0x375129ff],bl
  4293ba:	mov    edi,edi
  4293bc:	call   edi
  4293be:	(bad)  
  4293bf:	out    dx,eax
  4293c0:	popa   
  4293c1:	xchg   BYTE PTR [ebx-0x667700],al
  4293c7:	inc    BYTE PTR [ebp-0x1c]
  4293cd:	mov    ebx,0x4afd19ff
  4293d2:	mov    edi,edi
  4293d4:	or     DWORD PTR [ebx-0x43ed600],0x0
  4293db:	int3   
  4293dc:	inc    DWORD PTR [esi]
  4293de:	add    BYTE PTR [edi-0x2378],ch
  4293e4:	int3   
  4293e5:	daa    
  4293e6:	add    BYTE PTR [ebp-0x55],cl
  4293e9:	inc    edx
  4293ea:	add    BYTE PTR [eax],al
  4293ec:	call   DWORD PTR [ebp-0x1]
  4293ef:	push   cs
  4293f0:	push   ebx
  4293f1:	imul   ecx,DWORD PTR [ecx-0x227601],0xe7c679
  4293fb:	add    BYTE PTR [eax],al
  4293fd:	inc    esp
  4293fe:	call   DWORD PTR [ebx-0x7c764e70]
  429404:	cmp    DWORD PTR [ecx],0xffffffff
  429407:	jmp    FWORD PTR [eax]
  429409:	lock add DWORD PTR [eax],0xffffff83
  42940d:	rol    DWORD PTR [ebx+0xc917c5],1
  429413:	inc    DWORD PTR [eax]
  429415:	pop    es
  429416:	adc    DWORD PTR [ecx-0x3],0x7c
  42941a:	inc    DWORD PTR [ebx-0xfffc77d]
  429420:	sti    
  429421:	add    edi,edi
  429423:	inc    DWORD PTR [ebx-0x5b4d00a9]
  429429:	out    0xff,al
  42942b:	add    DWORD PTR [eax],0x64
  42942e:	int3   
  42942f:	sbb    bh,BYTE PTR [edx-0x3300ff82]
  429435:	mov    ch,0xff
  429437:	sub    DWORD PTR [edx-0x19],eax
  42943d:	pop    ebx
  42943e:	inc    edi
  429440:	aam    0xb4
  429442:	mov    DWORD PTR [eax],eax
  429444:	add    dl,bh
  429446:	add    BYTE PTR [eax+ebx*2],ah
  429449:	(bad)  
  42944a:	int3   
  42944b:	add    BYTE PTR [eax],al
  42944d:	inc    edi
  42944e:	(bad)  
  42944f:	fimul  WORD PTR [edx]
  429451:	sub    bh,bh
  429453:	(bad)  
  429454:	inc    DWORD PTR [edi]
  429456:	add    BYTE PTR [ebp+0x7b],cl
  429459:	inc    ecx
  42945a:	add    bh,bh
  42945c:	push   DWORD PTR [ebp-0x7e6c6401]
  429462:	cmp    edi,0xffffffff
  429465:	retf   0xd283
  429468:	sub    ah,BYTE PTR [edi-0x6600007d]
  42946e:	add    BYTE PTR [edx-0x24],bh
  429471:	idiv   bh
  429473:	add    BYTE PTR [ebx-0x7ba67c12],al
  429479:	adc    eax,0xc389ffff
  42947e:	(bad)  
  42947f:	fdiv   QWORD PTR [ecx-0x44]
  429482:	inc    DWORD PTR [ebx-0x2ff8800]
  429488:	mov    ebp,0xffffffa3
  42948d:	mov    ah,0x0
  42948f:	test   eax,0x837074
  429494:	add    BYTE PTR [eax],al
  429496:	push   eax
  429498:	arpl   WORD PTR [esi],di
  42949a:	(bad)  
  42949b:	(bad)  
  42949c:	push   DWORD PTR [ecx]
  42949e:	inc    DWORD PTR [esi+0x2b]
  4294a1:	iret   
  4294a2:	(bad)  
  4294a3:	inc    DWORD PTR [ebx+0x7fcd8311]
  4294a9:	cwde   
  4294aa:	cmp    edi,0x0
  4294ad:	mov    esp,0xc1810eff
  4294b2:	(bad)  
  4294b3:	(bad)  
  4294b4:	(bad)  
  4294b5:	out    dx,eax
  4294b6:	int3   
  4294b7:	(bad)  
  4294b8:	cwde   
  4294b9:	loopne 0x4294ba
  4294bb:	inc    DWORD PTR [eax]
  4294bd:	lods   al,BYTE PTR ds:[esi]
  4294be:	add    BYTE PTR [eax],cl
  4294c0:	or     dh,al
  4294c2:	add    BYTE PTR [eax],al
  4294c4:	add    BYTE PTR [esi-0x4787a034],dl
  4294ca:	inc    DWORD PTR [eax]
  4294cc:	jmp    DWORD PTR [edi+edi*8]
  4294cf:	ds daa 
  4294d1:	mov    bh,bh
  4294d3:	inc    DWORD PTR [eax]
  4294d5:	xor    edi,edi
  4294d7:	sar    DWORD PTR [ebx],cl
  4294d9:	cmc    
  4294da:	int3   
  4294db:	dec    esp
  4294dd:	xchg   ecx,eax
  4294de:	(bad)  
  4294df:	fidiv  WORD PTR [esi+0x89002f]
  4294e5:	outs   dx,DWORD PTR ds:[esi]
  4294e6:	call   DWORD PTR [ebp-0x7640ce]
  4294ec:	inc    ebp
  4294ee:	int3   
  4294ef:	pusha  
  4294f0:	mov    ebp,0xffffff97
  4294f5:	pop    ebx
  4294f6:	push   DWORD PTR [ecx+0x65]
  4294f9:	out    dx,eax
  4294fa:	int3   
  4294fb:	or     esp,0x6f
  4294fe:	inc    ebx
  429500:	fimul  WORD PTR [edi]
  429502:	(bad)  
  429503:	inc    DWORD PTR [ebx-0x76a87622]
  429509:	jno    0x42950b
  42950b:	dec    DWORD PTR [ecx+0x784783a1]
  429511:	out    0xff,al
  429513:	add    bh,bh
  429515:	jp     0x4294e3
  429517:	je     0x4294e9
  429519:	jecxz  0x4294a4
  42951b:	(bad)  
  42951c:	(bad)  
  42951d:	jmp    0x42951e
  42951f:	lea    ebx,[edx-0x75]
  429522:	inc    DWORD PTR [eax]
  429524:	add    BYTE PTR [ebx-0x1],ch
  429527:	fbstp  TBYTE PTR [ecx+0xff8307]
  42952d:	jmp    0x83ff:0x786edfff
  429534:	jmp    ecx
  429536:	add    BYTE PTR [eax],ch
  429538:	test   BYTE PTR [esi-0x7d],dh
  42953b:	or     DWORD PTR [ecx-0x339c0021],0xb
  429542:	add    bh,bh
  429544:	int3   
  429545:	in     al,dx
  429546:	(bad)  
  429547:	out    dx,eax
  429548:	pop    edi
  429549:	add    eax,0x20890000
  42954e:	cmp    ecx,0x61
  429551:	push   0xffffffff
  429553:	(bad)  
  429554:	call   DWORD PTR [edi+edi*8-0x9313a1]
  42955b:	add    BYTE PTR [ebx+0x1326ff9a],al
  429561:	stos   BYTE PTR es:[edi],al
  429562:	add    BYTE PTR [ecx+0x4bcc4fff],cl
  429568:	pop    ebx
  429569:	inc    esi
  42956a:	inc    DWORD PTR [eax]
  42956c:	add    BYTE PTR [eax],bh
  42956e:	add    DWORD PTR [eax+0x8370bc],0x0
  429575:	jmp    0x429576
  429577:	or     edi,DWORD PTR [edx-0x7c008f]
  42957d:	dec    esp
  42957e:	add    BYTE PTR [eax],dh
  429580:	cmp    eax,0x8300ff41
  429585:	iret   
  429586:	adc    DWORD PTR [ecx-0x1a],0x4c
  42958a:	inc    DWORD PTR [ebx-0x7c76e501]
  429590:	push   ss
  429591:	cmp    al,0x83
  429593:	or     esp,0xffffff9c
  429596:	jmp    eax
  429598:	(bad)  
  429599:	add    BYTE PTR ss:[ebx+0x1004cff],al
  4295a0:	bound  edi,QWORD PTR [ebp-0x1]
  4295a3:	inc    DWORD PTR [eax]
  4295a5:	pop    esp
  4295a6:	jmp    ebx
  4295a8:	or     ebp,DWORD PTR [edi-0x1]
  4295ab:	int3   
  4295ac:	(bad)  
  4295ad:	jmp    0x4295ae
  4295af:	ds lock cwde 
  4295b2:	add    ah,cl
  4295b4:	(bad)  
  4295b5:	(bad)  
  4295b6:	call   DWORD PTR [eax+esi*8-0x330000c5]
  4295bd:	mov    al,BYTE PTR [ebx+0x29564e]
  4295c3:	(bad)  
  4295c4:	push   ebx
  4295c6:	(bad)  
  4295c7:	fsub   DWORD PTR [edi]
  4295c9:	repnz int3 
  4295cb:	(bad)  
  4295cc:	inc    esp
  4295ce:	mov    eax,esi
  4295d0:	out    0x1d,al
  4295d2:	(bad)  
  4295d3:	inc    DWORD PTR [eax]
  4295d5:	mov    edi,edi
  4295d7:	call   0x8bff:0xff286b
  4295de:	sub    DWORD PTR [edx+0x3a],0xffffffe8
  4295e2:	(bad)  
  4295e3:	inc    DWORD PTR [eax]
  4295e5:	bound  eax,QWORD PTR [eax]
  4295e7:	int3   
  4295e8:	shl    DWORD PTR [eax],0xff
  4295eb:	add    BYTE PTR [ecx-0x44417cd0],cl
  4295f1:	idiv   edi
  4295f3:	add    BYTE PTR [eax],al
  4295f5:	pop    ebp
  4295f6:	push   DWORD PTR [eax]
  4295f8:	and    al,0x2e
  4295fa:	int3   
  4295fb:	cmp    edi,0xffffff99
  4295fe:	add    bl,cl
  429600:	inc    edi
  429601:	inc    edx
  429602:	(bad)  
  429603:	inc    DWORD PTR [eax]
  429605:	jmp    FWORD PTR es:[edi]
  429608:	sbb    dh,cl
  42960a:	inc    DWORD PTR [eax]
  42960c:	add    BYTE PTR [esp+ecx*8],bl
  42960f:	push   esi
  429610:	out    0x98,eax
  429612:	add    bh,bh
  429614:	(bad)  
  429615:	mov    eax,0xfe0c1000
  42961a:	add    BYTE PTR [eax],al
  42961c:	push   DWORD PTR [edx]
  42961e:	cmp    ebx,0x10
  429621:	or     al,0x0
  429623:	int3   
  429624:	mov    esp,edx
  429626:	jmp    esp
  429628:	data16 int 0x0
  42962b:	inc    DWORD PTR [eax]
  42962d:	fiadd  DWORD PTR [ebx+0x29d2ec]
  429633:	inc    DWORD PTR [eax]
  429635:	stos   DWORD PTR es:[edi],eax
  429636:	add    BYTE PTR [ebp-0x4a],bh
  429639:	pop    ebx
  42963a:	(bad)  
  42963b:	dec    esp
  42963d:	mov    ch,0x83
  42963f:	sub    esp,0x36
  429642:	inc    DWORD PTR [ebx+0x3eff4e00]
  429648:	fcom   QWORD PTR [eax-0x1]
  42964b:	dec    esp
  42964d:	and    al,BYTE PTR [eax]
  42964f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429650:	cmp    eax,ecx
  429652:	add    DWORD PTR [eax],0xffffffff
  429655:	adc    eax,0x546eac00
  42965a:	add    DWORD PTR [eax],0xffffffff
  42965d:	dec    ecx
  42965e:	dec    edx
  429660:	addr16 xor bh,bh
  429663:	add    bh,bh
  429665:	stos   BYTE PTR es:[edi],al
  429666:	xor    ebx,0xfffffff5
  429669:	retf   
  42966a:	inc    DWORD PTR [eax]
  42966c:	add    BYTE PTR [esi-0x1],ah
  42966f:	adc    BYTE PTR [ebx+ecx*8+0x7b00ffff],bl
  429676:	jmp    ebp
  429678:	mov    al,ah
  42967a:	add    bh,bh
  42967c:	int3   
  42967d:	mov    cl,0xff
  42967f:	shl    BYTE PTR [esi-0x3376eb],cl
  429685:	ja     0x429687
  429687:	daa    
  429688:	sub    al,0x80
  42968a:	int3   
  42968b:	(bad)  
  42968c:	jmp    FWORD PTR ds:0xcacb3bff
  429692:	add    BYTE PTR [eax],al
  429694:	mov    DWORD PTR [edx-0x542e2f7d],edx
  42969a:	inc    DWORD PTR [eax]
  42969c:	dec    DWORD PTR [ebp+0x0]
  42969f:	ins    BYTE PTR es:[edi],dx
  4296a0:	and    DWORD PTR [edx+0x76008383],0xffffffff
  4296a7:	mov    dl,BYTE PTR [esi-0x8a]
  4296ad:	fiadd  DWORD PTR [eax]
  4296af:	enter  0xd3ea,0x83
  4296b3:	inc    DWORD PTR [eax]
  4296b5:	or     al,0xff
  4296b7:	sbb    ebp,DWORD PTR [ebp-0xff0038]
  4296bd:	in     eax,0xff
  4296bf:	cs (bad) 
  4296c1:	in     al,dx
  4296c2:	add    DWORD PTR [eax],0xffffffff
  4296c5:	cmp    eax,0x8c16ffff
  4296ca:	inc    DWORD PTR [eax]
  4296cc:	int3   
  4296cd:	dec    eax
  4296ce:	dec    DWORD PTR [ebx]
  4296d0:	pop    ds
  4296d1:	ss add bh,bh
  4296d4:	add    BYTE PTR [esp+ecx*8],cl
  4296d7:	icebp  
  4296d8:	push   edx
  4296d9:	aam    0xff
  4296db:	inc    DWORD PTR [eax]
  4296dd:	cld    
  4296de:	push   DWORD PTR [eax]
  4296e0:	sbb    bl,BYTE PTR [edi+edi*8]
  4296e3:	add    bh,bh
  4296e5:	test   edi,edi
  4296e7:	lods   eax,DWORD PTR ds:[esi]
  4296e8:	test   eax,0x8989834b
  4296ed:	stc    
  4296ee:	dec    DWORD PTR [edx+0x20]
  4296f1:	clc    
  4296f2:	inc    DWORD PTR [ebx+0x12ffaeff]
  4296f8:	pop    ss
  4296f9:	hlt    
  4296fa:	dec    esp
  4296fc:	add    BYTE PTR [eax-0x1],bh
  4296ff:	cmove  ebp,eax
  429702:	int3   
  429703:	dec    esp
  429705:	pop    ebp
  429706:	dec    DWORD PTR [ecx+0x68]
  429709:	add    BYTE PTR [eax],0xff
  42970c:	add    DWORD PTR [edx-0x1],0xffffffb0
  429710:	(bad)  
  429712:	(bad)  
  429713:	(bad)  
  429714:	call   DWORD PTR [esp+ecx*8-0x25]
  429718:	inc    ebx
  429719:	pop    esp
  42971a:	add    ah,cl
  42971c:	call   DWORD PTR [eax+eax*1-0x42]
  429720:	inc    ecx
  429721:	dec    ebp
  429722:	inc    DWORD PTR [eax]
  429724:	call   DWORD PTR [edx-0x1]
  429727:	jo     0x429774
  429729:	pushf  
  42972a:	int3   
  42972b:	inc    DWORD PTR [ebx-0x14320008]
  429731:	nop
  429732:	inc    DWORD PTR [ebx+0x7100f3ff]
  429738:	ja     0x4296cf
  42973a:	add    BYTE PTR [ebx+0x2ffff1cc],al
  429740:	inc    edi
  429741:	cwde   
  429742:	add    DWORD PTR [eax],0x0
  429745:	jl     0x429747
  429747:	leave  
  429748:	out    dx,al
  429749:	push   edx
  42974a:	(bad)  
  42974b:	(bad)  
  42974c:	call   ebx
  42974e:	inc    ebp
  429750:	popa   
  429751:	and    BYTE PTR [ecx+0x61ffff],cl
  429757:	aas    
  429758:	iret   
  429759:	aaa    
  42975a:	add    DWORD PTR [ebx+0xa0086ff],0xffffff8f
  429761:	push   edx
  429762:	add    BYTE PTR [ebx+0x20834dff],al
  429768:	adc    DWORD PTR ds:0x10ffcc00,0xffffffcc
  42976f:	xor    eax,0x89ff7bd9
  429774:	and    DWORD PTR [esi-0x7d],0x64
  429778:	sub    eax,DWORD PTR [edx-0x34]
  42977b:	int3   
  42977c:	inc    DWORD PTR [ebp+0x6e24a283]
  429782:	(bad)  
  429783:	(bad)  
  429784:	(bad)  
  429785:	mov    eax,0x79b742ff
  42978a:	inc    DWORD PTR [eax]
  42978c:	jmp    DWORD PTR [esi-0x1]
  42978f:	dec    ecx
  429790:	ss jbe 0x429792
  429793:	inc    DWORD PTR [eax]
  429795:	sar    bh,1
  429797:	adc    ebp,DWORD PTR [eax+0xff00ea]
  42979d:	and    edi,edi
  42979f:	mov    al,0x81
  4297a1:	push   esi
  4297a2:	add    bh,bh
  4297a4:	int3   
  4297a5:	jae    0x4297a6
  4297a7:	into   
  4297a8:	mov    eax,ds:0xff00ffb5
  4297ad:	retf   
  4297ae:	add    BYTE PTR [edi-0x2d],dh
  4297b1:	(bad)  
  4297b3:	dec    DWORD PTR [ecx-0x608bfff7]
  4297b9:	pop    ebx
  4297ba:	add    bh,bh
  4297bc:	dec    DWORD PTR [eax-0x1d904734]
  4297c2:	mov    DWORD PTR [eax],eax
  4297c4:	int3   
  4297c5:	loop   0x4297c6
  4297c7:	ret    
  4297c8:	jno    0x429792
  4297ca:	mov    edi,edi
  4297cc:	add    BYTE PTR [edx-0x1],ah
  4297cf:	mov    ah,0x65
  4297d1:	outs   dx,DWORD PTR ds:[esi]
  4297d2:	int3   
  4297d3:	(bad)  
  4297d4:	dec    DWORD PTR [edx-0x30ea3d01]
  4297da:	int3   
  4297db:	int3   
  4297dc:	int3   
  4297dd:	mov    edi,0x82b95cff
  4297e2:	int3   
  4297e3:	add    BYTE PTR [eax],al
  4297e5:	inc    ecx
  4297e6:	add    BYTE PTR [ebx+esi*1],dl
  4297e9:	and    bh,bh
  4297eb:	inc    DWORD PTR [ebx-0x206b7cfe]
  4297f1:	repnz (bad) 
  4297f3:	inc    DWORD PTR [eax]
  4297f5:	or     eax,DWORD PTR [eax]
  4297f7:	xlat   BYTE PTR ds:[ebx]
  4297f8:	mov    esp,0x830083f8
  4297fd:	mov    edi,edi
  4297ff:	dec    bl
  429801:	sbb    al,BYTE PTR [eax]
  429803:	mov    edi,edi
  429805:	(bad)  
  429807:	jo     0x4297ed
  429809:	and    BYTE PTR [eax],al
  42980b:	add    DWORD PTR [eax],0x6e
  42980e:	(bad)  
  42980f:	jle    0x429869
  429811:	xchg   esp,eax
  429812:	inc    DWORD PTR [eax]
  429814:	jmp    eax
  429816:	add    al,ah
  429818:	mov    bh,0x4b
  42981a:	add    bh,bh
  42981c:	(bad)  
  42981d:	cld    
  42981e:	call   FWORD PTR [eax]
  429820:	loop   0x42985a
  429822:	mov    DWORD PTR [ebx+0x4cff7bff],eax
  429828:	push   es
  429829:	mov    edi,0x4083ff83
  42982e:	mov    DWORD PTR [ebx],ebx
  429830:	ins    BYTE PTR es:[edi],dx
  429831:	je     0x429833
  429833:	add    bh,bh
  429835:	xchg   BYTE PTR [eax],al
  429837:	and    DWORD PTR [esi],0xffffffee
  42983a:	int3   
  42983b:	mov    DWORD PTR [ebx+0x1e100e4],eax
  429841:	out    dx,eax
  429842:	(bad)  
  429843:	dec    esp
  429845:	ja     0x429847
  429847:	ss nop
  429849:	and    eax,0x660083cc
  42984e:	mov    DWORD PTR [edx],edx
  429850:	sti    
  429851:	fmulp  st(4),st
  429853:	dec    esp
  429855:	and    edi,edi
  429857:	mov    ebx,0xffff32e4
  42985c:	jmp    FWORD PTR [edx+0x0]
  42985f:	jmp    0x429854
  429861:	aaa    
  429862:	mov    esp,ecx
  429864:	add    BYTE PTR [ebx+eax*4],bl
  429867:	dec    eax
  429868:	in     al,dx
  429869:	inc    esi
  42986a:	inc    DWORD PTR [eax]
  42986c:	add    BYTE PTR [eax-0x1],al
  42986f:	sbb    edx,DWORD PTR [esi+0x83ffd1]
  429875:	pusha  
  429876:	jmp    FWORD PTR [edx]
  429878:	sbb    al,0x3a
  42987a:	(bad)  
  42987b:	dec    esp
  42987d:	push   edi
  42987e:	inc    ebx
  429880:	sbb    al,0x8e
  429882:	cmp    edi,0xffffffff
  429885:	cmp    edi,0xffffffb0
  429888:	jo     0x429887
  42988a:	(bad)  
  42988b:	(bad)  
  42988c:	push   DWORD PTR [edi+0x578007ff]
  429892:	int3   
  429893:	inc    DWORD PTR [eax]
  429895:	push   ebx
  429896:	push   DWORD PTR [ecx-0x330047c1]
  42989c:	int3   
  42989d:	bound  eax,QWORD PTR [eax]
  42989f:	hlt    
  4298a0:	ret    0xc7
  4298a3:	mov    edi,edi
  4298a5:	lods   al,BYTE PTR ds:[esi]
  4298a6:	add    BYTE PTR [esi-0x69],dh
  4298a9:	sbb    cl,BYTE PTR [ecx-0xd60001]
  4298af:	sbb    cl,al
  4298b1:	xchg   ebx,eax
  4298b2:	(bad)  
  4298b3:	(bad)  
  4298b4:	dec    DWORD PTR [ebp+0x0]
  4298b7:	pop    esi
  4298b8:	xor    al,0x5e
  4298ba:	cmp    edi,0xffffffff
  4298bd:	inc    edx
  4298be:	sbb    DWORD PTR [eax+esi*4+0xff7c],0xffffff81
  4298c6:	mov    DWORD PTR [eax-0x46],eax
  4298c9:	pop    edx
  4298ca:	or     esp,0xffffffff
  4298cd:	add    edi,edi
  4298cf:	pop    esi
  4298d0:	xchg   esp,eax
  4298d1:	add    BYTE PTR gs:[eax],al
  4298d4:	add    BYTE PTR [eax+0x0],al
  4298d7:	(bad)  
  4298d8:	leave  
  4298d9:	sbb    DWORD PTR [ebx-0x2cff01],eax
  4298df:	cdq    
  4298e0:	inc    edi
  4298e1:	jno    0x429866
  4298e3:	or     DWORD PTR [ecx+0x5ae800ef],0x7e
  4298ea:	dec    DWORD PTR [ecx+0x3ff42ff]
  4298f0:	sysexit 
  4298f2:	inc    DWORD PTR [ebx-0x42765500]
  4298f8:	ds jge 0x4298fb
  4298fb:	inc    DWORD PTR [eax]
  4298fd:	jmp    0x429888
  4298ff:	cmp    edx,DWORD PTR [ebx]
  429901:	dec    esp
  429902:	inc    DWORD PTR [ebx+0x230043ff]
  429908:	dec    eax
  429909:	aam    0x0
  42990b:	(bad)  
  42990c:	call   FWORD PTR [edi+0x0]
  42990f:	cs adc eax,0x8300ffaf
  429915:	mov    al,0xff
  429917:	adc    DWORD PTR [ecx],edx
  429919:	icebp  
  42991a:	inc    DWORD PTR [eax]
  42991c:	add    BYTE PTR [eax-0x77],bl
  42991f:	sub    esp,DWORD PTR [ecx+eiz*4-0x6d7c0001]
  429926:	call   ebp
  429928:	inc    ecx
  429929:	add    BYTE PTR fs:[ecx-0x7002f01],cl
  429930:	mov    WORD PTR [edi+0x0],?
  429933:	dec    DWORD PTR [ecx-0x5ea20077]
  429939:	arpl   WORD PTR [eax],ax
  42993b:	add    ah,cl
  42993d:	mov    edi,edi
  42993f:	sbb    ecx,ecx
  429941:	sbb    DWORD PTR [ebx-0x317c01],eax
  429947:	push   cs
  429948:	std    
  429949:	mov    edx,0xe3ffffcc
  42994e:	add    BYTE PTR [ecx+0x1b],dl
  429951:	inc    ebp
  429952:	add    bh,bh
  429954:	push   DWORD PTR [eax-0x1]
  429957:	adc    ebx,esp
  429959:	xchg   ecx,eax
  42995a:	or     DWORD PTR [ecx+0x14ffc1cc],0xffffffe9
  429961:	into   
  429962:	inc    DWORD PTR [ebx-0x697c0c01]
  429968:	std    
  429969:	in     eax,dx
  42996a:	(bad)  
  42996b:	(bad)  
  42996c:	jmp    edx
  42996e:	jmp    DWORD PTR [esi-0x7c00f1a9]
  429974:	(bad)  
  429975:	in     al,dx
  429976:	call   FWORD PTR [eax+0x66]
  429979:	dec    edi
  42997a:	add    BYTE PTR [ebx-0x50009b00],al
  429980:	jb     0x4299b1
  429982:	inc    DWORD PTR [eax]
  429984:	add    BYTE PTR [ebx+0x5da35f83],dh
  42998a:	int3   
  42998b:	inc    DWORD PTR [eax]
  42998d:	inc    eax
  42998e:	add    BYTE PTR [esi-0xf2b1],al
  429994:	jmp    DWORD PTR [ebx+eax*4+0x42]
  429998:	inc    ecx
  429999:	inc    esi
  42999a:	int3   
  42999b:	inc    DWORD PTR [eax]
  42999d:	jmp    0x8e9a47a2
  4299a2:	int3   
  4299a3:	add    BYTE PTR [ebx-0x3da27c1d],al
  4299a9:	stos   BYTE PTR es:[edi],al
  4299aa:	add    BYTE PTR [eax],al
  4299ac:	int3   
  4299ad:	(bad)  
  4299af:	or     cl,BYTE PTR [edi]
  4299b1:	addr16 add bh,bh
  4299b4:	sbb    DWORD PTR [eax+0x3aaccb89],0xffffffff
  4299bb:	add    BYTE PTR [ebx+0x629300b0],al
  4299c1:	or     bh,bh
  4299c3:	inc    DWORD PTR [ebx+0x4facffa1]
  4299c9:	nop
  4299ca:	mov    edi,edi
  4299cc:	call   ebx
  4299ce:	jmp    ebx
  4299d0:	inc    edx
  4299d1:	lea    ecx,[ecx-0xcdff01]
  4299d7:	mov    ds:0x89006e79,eax
  4299dc:	jmp    DWORD PTR [eax+0x58f35dff]
  4299e2:	int3   
  4299e3:	inc    DWORD PTR [ebx+0x6cb7ff2f]
  4299e9:	push   es
  4299ea:	add    bh,bh
  4299ec:	add    BYTE PTR [edi+0x74dbde89],al
  4299f2:	add    DWORD PTR [eax],0x0
  4299f5:	scas   al,BYTE PTR es:[edi]
  4299f6:	inc    DWORD PTR [edi-0x7c338c9b]
  4299fc:	xor    DWORD PTR [eax-0x1],0xffffffd3
  429a00:	fcomip st,st(1)
  429a02:	(bad)  
  429a03:	inc    DWORD PTR [eax]
  429a05:	aam    0xff
  429a07:	mov    ebx,0xffffb2e5
  429a0c:	push   DWORD PTR [ebx+0x3e1a0800]
  429a12:	or     esp,0xffffffff
  429a15:	pop    ebx
  429a16:	add    BYTE PTR [edi],ah
  429a18:	jmp    0x83ec:0xff89d2
  429a1f:	lock sub edx,esp
  429a22:	dec    esp
  429a24:	call   DWORD PTR [edi]
  429a26:	jmp    esp
  429a28:	dec    ecx
  429a29:	stos   DWORD PTR es:[edi],eax
  429a2a:	add    BYTE PTR [ebx-0x75761201],al
  429a30:	jns    0x429aaa
  429a32:	inc    DWORD PTR [ebx-0x1833bf00]
  429a38:	fs cmp bh,bh
  429a3b:	mov    edi,edi
  429a3d:	xchg   edi,eax
  429a3e:	add    ch,al
  429a40:	dec    esp
  429a41:	xor    eax,0xea83cccc
  429a46:	call   FWORD PTR ds:0xf6f1
  429a4c:	add    BYTE PTR [eax+0x6a43200],al
  429a52:	cmp    edi,0xffffffff
  429a55:	push   esp
  429a56:	mov    DWORD PTR [edx*1+0x890084],ecx
  429a5d:	mov    ds:0xe622a383,al
  429a62:	add    ah,cl
  429a64:	or     DWORD PTR ds:0x1d52c100,0x0
  429a6b:	(bad)  
  429a6c:	call   FWORD PTR [edi]
  429a6e:	call   FWORD PTR [edx+eax*4+0x57]
  429a72:	add    bh,bh
  429a74:	jmp    FWORD PTR ds:0xb78badff
  429a7a:	inc    DWORD PTR [eax]
  429a7c:	dec    DWORD PTR ds:0x65c07ff
  429a82:	mov    esp,ecx
  429a84:	call   ecx
  429a86:	int3   
  429a87:	mov    ah,0xd6
  429a8a:	int3   
  429a8b:	add    bh,bh
  429a8d:	mov    ebx,0x5407abff
  429a92:	(bad)  
  429a93:	inc    DWORD PTR [eax]
  429a95:	test   eax,0x8ead19ff
  429a9a:	mov    edi,edi
  429a9c:	call   DWORD PTR [ebp+0x6ad4e4ff]
  429aa2:	inc    DWORD PTR [eax]
  429aa4:	dec    DWORD PTR [edx-0x1]
  429aa7:	fs cmp ebp,ebx
  429aaa:	or     DWORD PTR [ecx+0x3c006b00],0xffffff9f
  429ab1:	or     al,BYTE PTR [eax]
  429ab3:	add    bh,bh
  429ab5:	mov    al,BYTE PTR [ebx-0x71256c]
  429abb:	inc    DWORD PTR [eax]
  429abd:	fild   WORD PTR [eax]
  429abf:	das    
  429ac0:	(bad)  
  429ac1:	lock inc DWORD PTR [ebx-0x62ff7c01]
  429ac8:	repz jmp 0x429acb
  429acb:	add    ah,cl
  429acd:	sbb    eax,0xeccdee00
  429ad2:	(bad)  
  429ad3:	(bad)  
  429ad4:	jmp    FWORD PTR [ebp+0x0]
  429ad7:	pop    edx
  429ad8:	or     eax,0xff0000e4
  429add:	or     ah,0xf6
  429ae0:	add    DWORD PTR [ebx],eax
  429ae2:	mov    DWORD PTR [ebx+0x4383db00],eax
  429ae8:	frstor [eax+eax*1]
  429aeb:	mov    DWORD PTR [eax],eax
  429aed:	mov    bl,0x83
  429aef:	rcl    cl,cl
  429af1:	mov    eax,ds:0x8cffffff
  429af6:	jmp    ebx
  429af8:	sbb    ah,BYTE PTR [edi+0x21ccffff]
  429afe:	call   FWORD PTR [ecx-0x7cffa69f]
  429b04:	add    BYTE PTR [ebp+0x1f58400],dh
  429b0a:	(bad)  
  429b0b:	inc    DWORD PTR [ebx+0x5dfa00a7]
  429b11:	mov    edi,edi
  429b13:	(bad)  
  429b14:	push   ebx
  429b16:	add    BYTE PTR [edi],cl
  429b18:	out    dx,al
  429b19:	mov    al,ds:0x980000ff
  429b1e:	dec    DWORD PTR [edx]
  429b20:	jo     0x429b93
  429b22:	add    BYTE PTR [eax],al
  429b24:	call   FWORD PTR [edi+0x0]
  429b27:	dec    esi
  429b28:	mov    ah,0xf2
  429b2a:	add    bh,bh
  429b2c:	add    BYTE PTR [ecx-0x5a4b6001],bh
  429b32:	inc    DWORD PTR [eax]
  429b34:	add    BYTE PTR [edi+edi*8],al
  429b37:	rcr    edi,1
  429b39:	xchg   esi,eax
  429b3a:	(bad)  
  429b3b:	inc    DWORD PTR [eax]
  429b3d:	(bad)  
  429b3e:	inc    DWORD PTR [esi]
  429b40:	ror    BYTE PTR ds:0x73ffff00,0x83
  429b47:	pop    ebx
  429b48:	cmp    dl,dh
  429b4a:	add    bh,bh
  429b4c:	call   esp
  429b4e:	dec    DWORD PTR [edi+0x4b]
  429b51:	cmp    al,0xff
  429b53:	add    BYTE PTR [ecx+0x2ca8ccc3],cl
  429b59:	mov    ch,0xff
  429b5b:	add    bh,bh
  429b5d:	xchg   ebx,eax
  429b5e:	sbb    ebx,0x5
  429b61:	mov    edi,?
  429b63:	add    BYTE PTR [ebx-0x660fffa4],al
  429b69:	adc    DWORD PTR [eax],eax
  429b6b:	int3   
  429b6c:	jmp    DWORD PTR [ebx]
  429b6e:	jmp    DWORD PTR [edx-0x33763d5e]
  429b74:	xor    edx,0xffffffff
  429b77:	push   ebp
  429b78:	cwde   
  429b79:	cmp    eax,0x4c00ffff
  429b7e:	add    dh,bl
  429b80:	out    dx,al
  429b81:	leave  
  429b82:	or     DWORD PTR [ecx-0x8000f34],0xffffffb8
  429b89:	xchg   edx,eax
  429b8a:	inc    DWORD PTR [ebx-0x23003201]
  429b90:	ss pop edx
  429b92:	add    ah,cl
  429b94:	sbb    DWORD PTR [esi+0x167566ff],0xffffffff
  429b9b:	inc    DWORD PTR [eax]
  429b9d:	pop    ecx
  429b9e:	(bad)  
  429b9f:	jge    0x429b9e
  429ba1:	jmp    0xfdff:0x4accff00
  429ba8:	lock xchg edx,eax
  429baa:	add    BYTE PTR [ecx-0x4100257d],cl
  429bb0:	ins    DWORD PTR es:[edi],dx
  429bb1:	js     0x429bb3
  429bb3:	add    bh,bh
  429bb5:	xor    al,0x83
  429bb7:	outs   dx,BYTE PTR ds:[esi]
  429bb8:	mov    ebx,0xff000026
  429bbd:	push   ebp
  429bbe:	sub    DWORD PTR [edi+0xfffbcf],0xffffffff
  429bc5:	into   
  429bc6:	and    edi,0xffffffc3
  429bc9:	iret   
  429bca:	dec    esp
  429bcc:	int3   
  429bcd:	(bad)  
  429bce:	mov    DWORD PTR [ebp-0x33ff3f08],edi
  429bd4:	add    BYTE PTR [ecx],bh
  429bd6:	or     DWORD PTR [ecx-0x5f],0x4f
  429bda:	add    DWORD PTR [eax],0xffffffff
  429bdd:	pop    ecx
  429bde:	(bad)  
  429bdf:	jnp    0x429b92
  429be1:	sbb    ecx,DWORD PTR [ecx-0x72ff34]
  429be7:	adc    eax,0xccffd001
  429bec:	add    BYTE PTR [edx+0x6937c983],ch
  429bf2:	(bad)  
  429bf3:	(bad)  
  429bf4:	jmp    DWORD PTR [esp+ecx*8-0xb4deb3]
  429bfb:	inc    DWORD PTR [ebx-0x7667ca5]
  429c01:	mov    eax,ds:0x98000083
  429c06:	jmp    FWORD PTR [ebp+0xfff684]
  429c0c:	add    dl,cl
  429c0e:	inc    ebx
  429c10:	jecxz  0x429c44
  429c12:	add    bh,bh
  429c14:	or     esi,0xffffffff
  429c17:	loop   0x429c6b
  429c19:	sar    edi,0x0
  429c1c:	add    BYTE PTR [eax-0x7d],al
  429c1f:	scas   eax,DWORD PTR es:[edi]
  429c20:	sahf   
  429c21:	jl     0x429ba6
  429c23:	inc    DWORD PTR [eax]
  429c25:	aam    0xff
  429c27:	pop    ss
  429c28:	adc    eax,0xffcc48
  429c2d:	lods   al,BYTE PTR ds:[esi]
  429c2e:	mov    DWORD PTR [ebx+ecx*2+0xff003b],ebp
  429c35:	xchg   BYTE PTR [ecx-0x7c04cd0a],cl
  429c3b:	int3   
  429c3c:	and    DWORD PTR [ebx+0x0],0x52
  429c40:	imul   ecx,DWORD PTR [esp+ecx*8],0x0
  429c44:	inc    DWORD PTR [ecx+0x0]
  429c47:	mov    WORD PTR [edi],es
  429c49:	sbb    eax,0x63ccffff
  429c4e:	dec    edx
  429c50:	fidivr DWORD PTR [edi-0x1]
  429c53:	dec    DWORD PTR [ecx-0x5fffff2]
  429c59:	mov    cl,0xff
  429c5b:	(bad)  
  429c5c:	(bad)  
  429c5d:	std    
  429c5e:	push   DWORD PTR [esi-0x7cff101a]
  429c64:	inc    DWORD PTR [edx]
  429c66:	jmp    FWORD PTR [esi-0x6d8d]
  429c6c:	add    BYTE PTR [eax-0x1],cl
  429c6f:	or     edi,DWORD PTR ds:0xcccc00e2
  429c75:	cmp    BYTE PTR [eax],al
  429c77:	mov    eax,ds:0x83ccffd6
  429c7d:	cmp    eax,DWORD PTR [ebx-0x33bd19e7]
  429c83:	int3   
  429c84:	(bad)  
  429c85:	call   0xe192cb8a
  429c8a:	inc    DWORD PTR [eax]
  429c8c:	(bad)  
  429c8d:	jmp    0x3bb2a21b
  429c92:	int3   
  429c93:	add    BYTE PTR [eax],al
  429c95:	pop    edi
  429c96:	int3   
  429c97:	sti    
  429c98:	cmc    
  429c99:	add    bh,bh
  429c9b:	add    ah,cl
  429c9d:	xchg   edx,eax
  429c9e:	inc    DWORD PTR [edi+0x4e]
  429ca1:	xchg   ecx,eax
  429ca2:	inc    DWORD PTR [eax]
  429ca4:	push   esp
  429ca6:	jmp    FWORD PTR [edx]
  429ca8:	push   0x69
  429caa:	(bad)  
  429cab:	inc    DWORD PTR [ebx-0x17420077]
  429cb1:	mov    al,ds:0x42ffff00
  429cb6:	add    BYTE PTR [ebx-0x7c76636f],dh
  429cbc:	cmp    DWORD PTR [ecx],0xffffff83
  429cbf:	sub    eax,0x838ac1
  429cc4:	jmp    FWORD PTR ds:0xe45fa2ff
  429cca:	or     DWORD PTR [ecx-0x54ff3b00],0x5d
  429cd1:	xor    eax,0x63ffffff
  429cd6:	add    BYTE PTR [eax+0x7e],bl
  429cd9:	retf   0xffff
  429cdc:	add    BYTE PTR [ecx-0x1],ah
  429cdf:	stos   BYTE PTR es:[edi],al
  429ce0:	inc    ebx
  429ce1:	xchg   bh,bh
  429ce3:	add    BYTE PTR [eax],al
  429ce5:	and    edi,edi
  429ce7:	hlt    
  429ce8:	es test edi,edi
  429ceb:	(bad)  
  429cec:	(bad)  
  429ced:	std    
  429cee:	mov    DWORD PTR [ecx+0x5e],ecx
  429cf1:	loope  0x429cf3
  429cf3:	(bad)  
  429cf4:	push   DWORD PTR [ebx]
  429cf6:	mov    DWORD PTR [esi],edi
  429cf8:	xchg   esp,eax
  429cf9:	add    al,0x0
  429cfb:	add    bh,bh
  429cfd:	outs   dx,DWORD PTR ds:[esi]
  429cfe:	add    al,ch
  429d00:	mov    edx,0x83ff71
  429d05:	jmp    0xa48fdb0a
  429d0a:	inc    DWORD PTR [ebx+0x6bff2eff]
  429d10:	or     esp,edi
  429d12:	add    BYTE PTR [ebx-0x8001b01],al
  429d18:	ss xchg esp,eax
  429d1a:	int3   
  429d1b:	add    BYTE PTR [eax],al
  429d1d:	(bad)  
  429d1f:	sub    BYTE PTR [ebx],dh
  429d21:	and    eax,0xe5ff0083
  429d26:	call   FWORD PTR [ebp-0x7e]
  429d29:	jnp    0x429d2b
  429d2b:	inc    DWORD PTR [eax]
  429d2d:	jmp    0x429d2e
  429d2f:	into   
  429d30:	inc    edx
  429d31:	sar    bh,1
  429d33:	add    BYTE PTR [eax],al
  429d35:	add    eax,0x41684983
  429d3a:	add    BYTE PTR [eax],al
  429d3c:	add    ah,al
  429d3e:	add    BYTE PTR [eax+0x62],bl
  429d41:	into   
  429d42:	add    ah,cl
  429d44:	jmp    DWORD PTR [ebp-0x1]
  429d47:	arpl   WORD PTR [edi+0x2a],bx
  429d4a:	mov    edi,edi
  429d4c:	add    BYTE PTR [ecx-0x4959e07d],bl
  429d52:	add    bh,bh
  429d54:	add    BYTE PTR [eax-0x7d],bh
  429d57:	sbb    eax,0xff003e04
  429d5c:	add    BYTE PTR [edi+edi*8],al
  429d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d60:	mov    al,ds:0xff830049
  429d65:	add    eax,0x3bc725ff
  429d6a:	(bad)  
  429d6b:	(bad)  
  429d6c:	inc    DWORD PTR [ebp+0x0]
  429d6f:	leave  
  429d70:	(bad)  
  429d71:	pushf  
  429d72:	inc    DWORD PTR [eax]
  429d74:	add    ecx,0xffffffff
  429d77:	nop
  429d78:	fwait
  429d79:	inc    DWORD PTR gs:[ebx+0x6c00dcff]
  429d80:	dec    ebp
  429d81:	out    0xcc,al
  429d83:	inc    DWORD PTR [ebx-0x25dd33fb]
  429d89:	mov    ds:0xa0ff83ff,eax
  429d8e:	push   esp
  429d90:	je     0x429d65
  429d92:	add    bh,bh
  429d94:	add    BYTE PTR [edi],dl
  429d96:	jmp    esp
  429d98:	and    eax,DWORD PTR [edx+0x6e0000ff]
  429d9e:	add    DWORD PTR [esi-0x48],0xffffffe3
  429da2:	(bad)  
  429da3:	(bad)  
  429da4:	(bad)  
  429da5:	jl     0x429da6
  429da7:	sbb    ah,ch
  429da9:	(bad)
  429dac:	add    BYTE PTR [ecx-0x1],bh
  429daf:	dec    ebx
  429db0:	ucomiss xmm7,xmm7
  429db3:	add    BYTE PTR [ebx+0x7e3eff11],al
  429db9:	call   0xee439cbe
  429dbe:	int3   
  429dbf:	xchg   ebx,eax
  429dc0:	jle    0x429d6d
  429dc2:	int3   
  429dc3:	(bad)  
  429dc4:	inc    DWORD PTR [ecx-0x1]
  429dc7:	ss popa 
  429dc9:	ret    
  429dca:	(bad)  
  429dcb:	inc    DWORD PTR [eax]
  429dcd:	push   esi
  429dce:	add    BYTE PTR [esi+0xfff50b],dl
  429dd4:	jmp    DWORD PTR [edi+edi*8]
  429dd7:	push   ebx
  429dd8:	fwait
  429dd9:	mov    al,BYTE PTR [eax]
  429ddb:	add    BYTE PTR [eax],al
  429ddd:	push   ebx
  429dde:	jmp    DWORD PTR [ecx+ecx*4]
  429de1:	nop
  429de2:	cmp    edi,0x0
  429de5:	jp     0x429d6a
  429de7:	outs   dx,BYTE PTR ds:[esi]
  429de8:	in     al,dx
  429de9:	mov    es,WORD PTR [eax]
  429deb:	add    BYTE PTR [eax],al
  429ded:	fild   DWORD PTR [ebx-0xdd0e17]
  429df3:	dec    esp
  429df5:	jge    0x429d7a
  429df7:	sbb    al,0x4
  429df9:	enter  0xcc83,0x83
  429dfd:	jno    0x429dff
  429dff:	clc    
  429e00:	dec    esp
  429e01:	adc    al,0x89
  429e03:	(bad)  
  429e04:	jmp    DWORD PTR [edx]
  429e06:	call   ecx
  429e08:	ja     0x429e81
  429e0a:	inc    DWORD PTR [eax]
  429e0c:	int3   
  429e0d:	ja     0x429e0f
  429e0f:	cmp    esi,esi
  429e11:	jl     0x429e12
  429e13:	(bad)  
  429e14:	dec    DWORD PTR [eax-0x7d]
  429e17:	sbb    ebx,DWORD PTR [eax-0x3300003f]
  429e1d:	mov    ds:0x36f93cff,al
  429e22:	mov    DWORD PTR [eax],eax
  429e24:	add    BYTE PTR [eax+0x0],bl
  429e27:	cli    
  429e28:	add    DWORD PTR [esi-0x1],edx
  429e2b:	(bad)  
  429e2c:	call   edi
  429e2e:	mov    DWORD PTR [ebp-0x1e],ecx
  429e31:	mov    edx,0xc6ff83ff
  429e36:	(bad)  
  429e37:	jp     0x429e9f
  429e39:	stos   BYTE PTR es:[edi],al
  429e3a:	add    BYTE PTR [ebx+0x2ff94cc],al
  429e40:	les    ebx,FWORD PTR [ecx]
  429e42:	dec    esp
  429e44:	int3   
  429e45:	mov    ds:0x8a624600,eax
  429e4a:	mov    esp,ecx
  429e4c:	mov    DWORD PTR [eax+0x0],ecx
  429e4f:	cmp    bl,BYTE PTR [ebx+0xd]
  429e52:	mov    edi,edi
  429e54:	dec    DWORD PTR [eax+0x0]
  429e57:	rcl    bl,0x75
  429e5a:	add    BYTE PTR [ecx-0x31ff9801],cl
  429e60:	call   0x429e83
  429e65:	and    edi,edi
  429e67:	stos   DWORD PTR es:[edi],eax
  429e68:	cdq    
  429e69:	and    eax,0xd4ffffff
  429e6e:	push   edi
  429e70:	add    cl,cl
  429e72:	int3   
  429e73:	add    bh,bh
  429e75:	sbb    eax,0xdc9ed089
  429e7a:	dec    DWORD PTR [ecx-0x1f002777]
  429e80:	mul    ah
  429e82:	add    BYTE PTR [eax],al
  429e84:	dec    DWORD PTR [eax+0x0]
  429e87:	xchg   ecx,eax
  429e88:	enter  0x6c,0x0
  429e8c:	add    BYTE PTR [ecx-0x7d],bh
  429e8f:	push   edi
  429e90:	mov    edi,ebp
  429e92:	inc    DWORD PTR [eax]
  429e94:	call   FWORD PTR [ebx]
  429e96:	add    BYTE PTR ds:0xff835fe3,bl
  429e9c:	call   DWORD PTR [esi]
  429e9e:	xor    DWORD PTR [ecx-0x5c],0xffffffd5
  429ea2:	add    BYTE PTR [eax],al
  429ea4:	add    BYTE PTR [esi-0x293efc7d],ch
  429eaa:	dec    DWORD PTR [ecx+0x1200c6ff]
  429eb0:	jns    0x429e7d
  429eb2:	inc    DWORD PTR [eax]
  429eb4:	add    bh,ch
  429eb6:	jmp    FWORD PTR [eax]
  429eb8:	jmp    0xff439e89
  429ebd:	lds    eax,FWORD PTR [eax]
  429ebf:	push   es
  429ec0:	jle    0x429eba
  429ec2:	int3   
  429ec3:	cmp    edi,0xffffff8c
  429ec6:	inc    DWORD PTR [ebx-0x25]
  429ec9:	fadd   QWORD PTR [eax]
  429ecb:	add    BYTE PTR [eax],al
  429ecd:	cli    
  429ece:	inc    DWORD PTR [eax]
  429ed0:	es xchg esp,eax
  429ed2:	inc    DWORD PTR [eax]
  429ed4:	jmp    DWORD PTR [ebp-0x1]
  429ed7:	lahf   
  429ed8:	inc    ebp
  429ed9:	daa    
  429eda:	(bad)  
  429edb:	inc    DWORD PTR [eax]
  429edd:	daa    
  429ede:	jmp    FWORD PTR [edx-0xc578]
  429ee4:	jmp    eax
  429ee6:	adc    DWORD PTR [ecx],0xffffff90
  429ee9:	xchg   bh,bh
  429eeb:	cmp    edi,0xffffffe9
  429eee:	(bad)  
  429eef:	out    dx,eax
  429ef0:	xchg   edi,eax
  429ef1:	xor    al,0xff
  429ef3:	mov    DWORD PTR [ebx+0x22ab0025],eax
  429ef9:	jmp    0x1dc59fca
  429efe:	add    BYTE PTR [esi-0x95b8],dh
  429f04:	push   DWORD PTR [ebx-0x3942fe00]
  429f0a:	add    bh,bh
  429f0c:	int3   
  429f0d:	aad    0x83
  429f0f:	inc    edi
  429f10:	mov    eax,0xffffff78
  429f15:	and    edi,edi
  429f17:	push   ebx
  429f18:	sub    DWORD PTR [edx-0x1],eax
  429f1b:	cmp    edi,0x1a
  429f1e:	add    ah,bl
  429f20:	rcr    DWORD PTR [eax+eax*1+0x0],0xff
  429f25:	inc    ecx
  429f26:	add    BYTE PTR [eax],ah
  429f28:	aam    0x6e
  429f2a:	add    bh,bh
  429f2c:	add    dh,ah
  429f2e:	add    BYTE PTR [ecx+0x896bb2],ah
  429f34:	sbb    DWORD PTR [ebx],0xffffff89
  429f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f38:	out    dx,eax
  429f39:	inc    ecx
  429f3a:	(bad)  
  429f3b:	inc    DWORD PTR [eax]
  429f3d:	(bad)  
  429f3e:	(bad)  
  429f3f:	ffree  st(6)
  429f41:	aas    
  429f42:	int3   
  429f43:	(bad)  
  429f44:	dec    DWORD PTR [ecx-0x3317ba77]
  429f4a:	add    bh,bh
  429f4c:	add    BYTE PTR [edi-0x2e4c8401],ch
  429f52:	inc    DWORD PTR [ebx-0x35006300]
  429f58:	xor    eax,0xff00001e
  429f5d:	and    edi,edi
  429f5f:	and    BYTE PTR [eax+0x66],ah
  429f62:	(bad)  
  429f63:	(bad)  
  429f64:	dec    ecx
  429f66:	jmp    DWORD PTR [edx-0x62]
  429f69:	jae    0x429f6b
  429f6b:	(bad)  
  429f6c:	jmp    ecx
  429f6e:	add    ah,dh
  429f70:	sbb    ebp,eax
  429f72:	(bad)  
  429f73:	inc    DWORD PTR [ebx-0x724a007e]
  429f79:	add    DWORD PTR [bp+di-0x697d],0xffffff83
  429f7f:	sub    DWORD PTR [ecx+0x62],esp
  429f82:	add    BYTE PTR [eax],al
  429f84:	or     DWORD PTR [eax-0x29b26977],0xffffffff
  429f8b:	add    bh,bh
  429f8d:	lock inc DWORD PTR [edx-0x28]
  429f91:	and    al,0xcc
  429f93:	int3   
  429f94:	call   DWORD PTR [esi+0x5a9fdaff]
  429f9a:	inc    DWORD PTR [eax]
  429f9c:	mov    DWORD PTR [eax],eax
  429f9e:	inc    DWORD PTR [edx]
  429fa0:	in     al,0xb4
  429fa2:	or     DWORD PTR [ecx-0x5f004e00],0x4e
  429fa9:	hlt    
  429faa:	int3   
  429fab:	inc    DWORD PTR [ebx-0x4957cad]
  429fb1:	dec    esi
  429fb2:	(bad)  
  429fb3:	inc    DWORD PTR [eax]
  429fb5:	ja     0x429fb7
  429fb7:	out    0x30,al
  429fb9:	xchg   esi,eax
  429fba:	add    BYTE PTR [eax],al
  429fbc:	mov    DWORD PTR [ebp-0x6a9f5701],esp
  429fc2:	add    BYTE PTR [eax],al
  429fc4:	jmp    FWORD PTR [edi+0x7b145300]
  429fca:	int3   
  429fcb:	inc    DWORD PTR [ebx-0x3d3fff44]
  429fd1:	lea    ecx,[ecx-0x76ac3301]
  429fd7:	mov    al,ds:0xff3b51
  429fdc:	add    BYTE PTR [edx],ch
  429fde:	int3   
  429fdf:	push   ecx
  429fe0:	mov    esi,0x83ff8963
  429fe5:	cmp    edi,edi
  429fe7:	inc    edi
  429fe8:	cli    
  429fe9:	mov    ds:0x8300,eax
  429fee:	(bad)  
  429fef:	cld    
  429ff0:	or     eax,0x8300fff1
  429ff5:	push   ss
  429ff6:	int3   
  429ff7:	and    BYTE PTR [esi+ecx*1-0x1],bl
  429ffb:	add    DWORD PTR [eax],0x45
  429ffe:	add    DWORD PTR [esi-0x4d91],0x0
  42a005:	inc    edi
  42a006:	add    BYTE PTR [edx+0x28],bh
  42a009:	add    al,BYTE PTR [ebx+0xc08300]
  42a00f:	xchg   ebp,eax
  42a010:	jae    0x42a05b
  42a012:	add    DWORD PTR [eax],0x0
  42a015:	mov    edi,?
  42a017:	retf   
  42a018:	lahf   
  42a019:	sbb    esp,ecx
  42a01b:	(bad)  
  42a01c:	jmp    FWORD PTR [ebx]
  42a01e:	push   DWORD PTR [eax+ecx*2+0x7d]
  42a022:	inc    DWORD PTR [ebx+0x34ff3b83]
  42a028:	pop    ebx
  42a029:	inc    DWORD PTR gs:[ebx-0x11ff9534]
  42a030:	mov    eax,ds:0x83ff0063
  42a035:	stc    
  42a036:	add    BYTE PTR [ecx],bh
  42a038:	out    dx,eax
  42a039:	cmc    
  42a03a:	inc    DWORD PTR [ebx+0x250086ff]
  42a040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a041:	cmp    eax,0xfd00ffff
  42a046:	inc    edi
  42a048:	(bad)  
  42a049:	stc    
  42a04a:	add    bh,bh
  42a04c:	mov    DWORD PTR [edi],ebp
  42a04e:	mov    DWORD PTR [esi-0x7600a696],ebp
  42a054:	or     DWORD PTR ds:0x10e4c4ff,0xffffff83
  42a05b:	(bad)  
  42a05c:	(bad)  
  42a05d:	mov    esi,0x1ee5ce00
  42a062:	add    BYTE PTR [ebx+0x27cc8800],al
  42a068:	and    eax,0x83000065
  42a06d:	sar    bh,cl
  42a06f:	lds    cx,DWORD PTR [esp+ebx*4]
  42a073:	call   FWORD PTR [edi-0x1]
  42a076:	inc    DWORD PTR [eax]
  42a078:	xchg   cl,bl
  42a07a:	cmc    
  42a07b:	add    BYTE PTR [esi],cl
  42a07d:	add    BYTE PTR [eax],al
  42a07f:	add    BYTE PTR [esi+0x63],bh
  42a082:	sub    bh,bh
  42a084:	fadd   DWORD PTR [eax]
  42a086:	inc    DWORD PTR [ebx-0x336eac73]
  42a08c:	cmp    edi,edi
  42a08e:	(bad)  
  42a08f:	dec    DWORD PTR [ebp-0x1800f7a3]
  42a095:	add    BYTE PTR [eax],al
  42a097:	call   DWORD PTR [esi]
  42a099:	xor    BYTE PTR [ecx],bl
  42a09b:	add    BYTE PTR [edi],dh
  42a09d:	inc    DWORD PTR [eax]
  42a09f:	call   DWORD PTR [ebx]
  42a0a1:	repnz xor DWORD PTR [eax],eax
  42a0a4:	jg     0x42a0a6
  42a0a6:	(bad)  
  42a0a7:	jmp    DWORD PTR [edi]
  42a0a9:	xchg   ebx,eax
  42a0aa:	jmp    0x1420eae
  42a0af:	call   edx
  42a0b1:	jecxz  0x42a099
  42a0b3:	add    BYTE PTR [edx],ch
  42a0b5:	dec    DWORD PTR [ecx-0x14dad477]
  42a0bb:	dec    DWORD PTR [esi-0x63010000]
  42a0c1:	pushf  
  42a0c2:	(bad)  
  42a0c4:	dec    edx
  42a0c5:	add    BYTE PTR [eax],al
  42a0c7:	add    BYTE PTR [edi+ecx*2],bl
  42a0ca:	arpl   di,di
  42a0cc:	test   eax,0x82890089
  42a0d1:	mov    eax,ds:0xdd00e4
  42a0d6:	(bad)  
  42a0d7:	inc    DWORD PTR [edx+eax*8+0x57ff47]
  42a0de:	add    bh,bh
  42a0e0:	jecxz  0x42a0b9
  42a0e2:	bnd call DWORD PTR [edi-0x30ff0001]
  42a0e9:	dec    BYTE PTR [ebx+0xff2600]
  42a0ef:	call   FWORD PTR [edx-0x2900f337]
  42a0f5:	add    ah,cl
  42a0f7:	inc    DWORD PTR [ebx]
  42a0f9:	fs mov cs,esp
  42a0fc:	jl     0x42a0fe
  42a0fe:	add    BYTE PTR [eax],al
  42a100:	or     al,BYTE PTR [eax-0x50]
  42a103:	sub    DWORD PTR [esi-0x1d003377],0x3e
  42a10a:	pop    edi
  42a10b:	add    BYTE PTR [edi-0x3376ff01],bl
  42a111:	sub    ah,BYTE PTR [edi-0xffa57d]
  42a117:	add    BYTE PTR [edx+edx*4+0x86890f],dl
  42a11e:	add    DWORD PTR [eax],0xffffffcc
  42a121:	(bad)  
  42a122:	dec    edi
  42a123:	(bad)  
  42a124:	fmulp  st(4),st
  42a126:	add    BYTE PTR [eax],al
  42a128:	mov    ds:0x198338e4,eax
  42a12d:	add    bh,bh
  42a12f:	push   DWORD PTR [ebx+edx*2+0x8]
  42a133:	add    BYTE PTR [edi-0x1d000001],cl
  42a139:	jne    0x42a19a
  42a13b:	add    BYTE PTR [edx-0x1],dl
  42a13e:	mov    edi,edi
  42a140:	xchg   bl,bh
  42a142:	lds    eax,FWORD PTR [ebx-0x7600760a]
  42a148:	scas   eax,DWORD PTR es:[edi]
  42a149:	aaa    
  42a14a:	cmp    bh,bh
  42a14c:	sub    edi,edi
  42a14e:	mov    esp,ecx
  42a150:	outs   dx,BYTE PTR ds:[esi]
  42a151:	ds loopne 0x42a0dd
  42a154:	cli    
  42a155:	add    BYTE PTR [eax],al
  42a157:	add    dh,dh
  42a159:	in     al,dx
  42a15a:	stos   DWORD PTR es:[edi],eax
  42a15b:	dec    DWORD PTR [eax+eax*1]
  42a15e:	cmp    edi,0xffffff81
  42a161:	enter  0xff3b,0x36
  42a165:	mov    DWORD PTR [ebx+0x6599cc00],eax
  42a16b:	call   FWORD PTR [eax]
  42a16d:	add    ah,cl
  42a16f:	mov    DWORD PTR [ecx],esp
  42a171:	push   ebx
  42a172:	popa   
  42a173:	call   eax
  42a175:	inc    DWORD PTR [eax]
  42a177:	add    dl,bl
  42a179:	iret   
  42a17a:	retf   
  42a17b:	add    ch,dl
  42a17d:	add    BYTE PTR [eax],al
  42a17f:	add    BYTE PTR [ebp-0x4276b32e],al
  42a185:	add    BYTE PTR [eax],al
  42a187:	(bad)  
  42a188:	mov    ecx,0x32837df4
  42a18d:	add    DWORD PTR [ebx-0x4ceb3600],0x0
  42a194:	push   cs
  42a195:	dec    DWORD PTR [ecx-0x192e801]
  42a19b:	call   DWORD PTR [edx-0x7d]
  42a19e:	(bad)  
  42a19f:	call   FWORD PTR [edx+0x6d002156]
  42a1a5:	add    bh,bh
  42a1a7:	mov    DWORD PTR [edx],ecx
  42a1a9:	dec    ebx
  42a1aa:	sub    al,0xff
  42a1ac:	sub    eax,0xd0ccffff
  42a1b1:	add    DWORD PTR [edx],edx
  42a1b3:	inc    DWORD PTR [ebx]
  42a1b5:	add    DWORD PTR [ebx-0x290b7f01],0xffffffff
  42a1bc:	int3   
  42a1bd:	add    BYTE PTR [ebx-0x4944701],al
  42a1c3:	jmp    FWORD PTR [ecx+0x45ffffcc]
  42a1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a1ca:	jno    0x42a1cb
  42a1cc:	mov    eax,DWORD PTR [eax]
  42a1ce:	add    bh,bh
  42a1d0:	mov    bh,0xf9
  42a1d2:	mov    edi,edi
  42a1d4:	jb     0x42a1d5
  42a1d6:	inc    DWORD PTR [eax]
  42a1d8:	ficomp DWORD PTR [edi+0x4f]
  42a1db:	jmp    DWORD PTR [ecx+0x0]
  42a1de:	(bad)  
  42a1df:	dec    ebp
  42a1e1:	xchg   eax,ebp
  42a1e3:	add    BYTE PTR [ebp-0x1],dh
  42a1e6:	dec    DWORD PTR [ecx-0x33600bb8]
  42a1ec:	nop
  42a1ed:	int3   
  42a1ee:	inc    DWORD PTR [ebx-0xdca643]
  42a1f4:	idiv   bh
  42a1f6:	inc    DWORD PTR [eax]
  42a1f8:	ret    
  42a1f9:	mov    al,0xb9
  42a1fb:	dec    DWORD PTR [edi-0x7d]
  42a1fe:	add    bh,bh
  42a200:	imul   edx,DWORD PTR [esp+ebx*4],0xffffffff
  42a204:	mov    bl,0x83
  42a206:	inc    DWORD PTR [eax]
  42a208:	cs jne 0x42a1ef
  42a20b:	add    BYTE PTR [eax-0x4fff7c77],ah
  42a211:	iret   
  42a212:	sti    
  42a213:	add    BYTE PTR [ebx-0x1],dl
  42a216:	inc    DWORD PTR [eax]
  42a218:	int3   
  42a219:	es pushf 
  42a21b:	inc    DWORD PTR [edi+edi*8-0x34]
  42a21f:	add    cl,ch
  42a221:	int3   
  42a222:	pop    esi
  42a223:	dec    DWORD PTR [eax-0x1]
  42a226:	or     esp,0x1f
  42a229:	push   edx
  42a22a:	add    edi,edi
  42a22c:	sbb    bh,bh
  42a22e:	add    BYTE PTR [eax],al
  42a230:	mov    cs,esp
  42a232:	aaa    
  42a233:	mov    DWORD PTR [edi-0x66000100],edi
  42a239:	je     0x42a240
  42a23b:	call   DWORD PTR [ecx+0x2d0089ff]
  42a241:	in     eax,0xd0
  42a243:	(bad)  
  42a244:	jmp    0x9d35:0x15ff00ff
  42a24b:	add    BYTE PTR [ebx-0x1],cl
  42a24e:	dec    esp
  42a250:	test   esi,esp
  42a252:	sar    bh,cl
  42a254:	iret   
  42a255:	add    BYTE PTR [eax],al
  42a257:	mov    DWORD PTR [edx-0x6f],ecx
  42a25a:	dec    esp
  42a25b:	mov    DWORD PTR [esi+0x4affff00],esi
  42a261:	mov    esp,0x2bff1c
  42a266:	add    bh,bh
  42a268:	call   0xff83:0x51ff0568
  42a26f:	add    BYTE PTR [eax+0x3b],cl
  42a272:	fimul  DWORD PTR [ecx-0x7c00ff6f]
  42a278:	push   ebx
  42a279:	popa   
  42a27a:	mov    ch,0x83
  42a27c:	dec    edx
  42a27d:	add    bh,bh
  42a27f:	inc    DWORD PTR [ebp-0x39ffe73b]
  42a285:	or     esp,0x0
  42a288:	dec    esi
  42a289:	and    BYTE PTR [eax-0x4200],ch
  42a28f:	or     DWORD PTR [ecx],0x65
  42a292:	cmc    
  42a293:	push   DWORD PTR [ecx+ecx*4]
  42a296:	inc    DWORD PTR [eax]
  42a298:	sub    BYTE PTR [ecx-0x5d7cd8],dh
  42a29e:	add    bh,bh
  42a2a0:	sbb    DWORD PTR [ecx+edi*8-0x33ffc434],ecx
  42a2a7:	add    BYTE PTR [edi-0x5c],ah
  42a2aa:	int    0xcc
  42a2ac:	lahf   
  42a2ad:	add    BYTE PTR [eax],al
  42a2af:	jmp    DWORD PTR [esi+0xe]
  42a2b2:	(bad)  
  42a2b3:	int3   
  42a2b4:	cmp    di,0xffff
  42a2b8:	jno    0x42a2f6
  42a2ba:	ret    0xccff
  42a2bd:	inc    DWORD PTR [eax]
  42a2bf:	add    BYTE PTR [ebx],ch
  42a2c1:	mov    cl,0x92
  42a2c3:	(bad)  
  42a2c4:	fild   DWORD PTR [ebx-0x7584ff77]
  42a2ca:	aas    
  42a2cb:	call   FWORD PTR [eax]
  42a2cd:	inc    DWORD PTR [eax]
  42a2cf:	int3   
  42a2d0:	xchg   ebp,eax
  42a2d1:	and    BYTE PTR [eax+eax*1-0x7cffff39],al
  42a2d8:	add    ch,BYTE PTR [esi]
  42a2da:	cmp    ah,cl
  42a2dc:	cli    
  42a2dd:	add    DWORD PTR [eax],0xffffff83
  42a2e0:	aam    0x9e
  42a2e2:	and    edi,edi
  42a2e4:	mov    bl,0xff
  42a2e6:	add    bh,bh
  42a2e8:	aas    
  42a2e9:	loope  0x42a2cd
  42a2eb:	add    bl,bh
  42a2ed:	(bad)  
  42a2ee:	dec    esp
  42a2f0:	inc    edx
  42a2f1:	adc    BYTE PTR [ebx-0x1],ch
  42a2f4:	rol    BYTE PTR [ebx-0x1f00001],1
  42a2fa:	jbe    0x42a2fb
  42a2fc:	jge    0x42a2ca
  42a2fe:	add    BYTE PTR [eax],al
  42a300:	inc    ebp
  42a301:	shr    DWORD PTR [ecx],1
  42a303:	call   FWORD PTR [ebx+eax*4-0x1]
  42a307:	add    BYTE PTR [ebp-0x9007a53],ah
  42a30d:	inc    DWORD PTR [eax]
  42a30f:	add    BYTE PTR [esi+0x47ff0bc7],dl
  42a315:	mov    edi,edi
  42a317:	cmp    DWORD PTR [ebp+eax*4-0x4f0094],0xffffffff
  42a31f:	inc    DWORD PTR [edi]
  42a321:	outs   dx,BYTE PTR ds:[esi]
  42a322:	add    eax,0x6ff
  42a327:	add    BYTE PTR [esi-0x5000e4cd],ch
  42a32d:	add    bh,bh
  42a32f:	jmp    DWORD PTR [eax+0x79]
  42a332:	out    0xff,al
  42a334:	xor    al,BYTE PTR [ebx-0x300a3301]
  42a33a:	inc    DWORD PTR [ebx-0x7cff33d6]
  42a340:	inc    esi
  42a341:	xor    ah,BYTE PTR [ebx-0x7d]
  42a344:	pop    edi
  42a345:	add    BYTE PTR [ebx+0x276cdfff],al
  42a34b:	int3   
  42a34c:	adc    al,0xff
  42a34e:	add    BYTE PTR [eax],al
  42a350:	jnp    0x42a2d2
  42a352:	test   eax,0xff00d0ff
  42a357:	sbb    DWORD PTR [edx],0xfffffffc
  42a35a:	sbb    edi,edi
  42a35c:	jle    0x42a35d
  42a35e:	mov    DWORD PTR [ecx-0x7cbdb1d5],ecx
  42a364:	xor    al,0x83
  42a366:	add    BYTE PTR [eax],al
  42a368:	sub    al,0x9d
  42a36a:	fdivr  st,st(7)
  42a36c:	fild   DWORD PTR [ebx+0x706bffff]
  42a372:	push   ss
  42a373:	add    bl,bl
  42a375:	inc    DWORD PTR [ebx+0x67dae100]
  42a37b:	cmp    DWORD PTR [eax+0x2f00ff00],0xffffffd0
  42a382:	cmp    eax,0xffff52ff
  42a387:	add    ah,ah
  42a389:	cdq    
  42a38a:	push   ebp
  42a38b:	add    BYTE PTR [eax],dl
  42a38d:	(bad)  
  42a38e:	(bad)  
  42a38f:	jmp    DWORD PTR [eax]
  42a391:	ret    
  42a392:	cwde   
  42a393:	(bad)  
  42a394:	fld    DWORD PTR [eax]
  42a396:	(bad)  
  42a397:	(bad)  
  42a398:	fsin   
  42a39a:	or     edi,edi
  42a39c:	inc    ebx
  42a39d:	add    BYTE PTR [eax],al
  42a39f:	add    BYTE PTR [edi+0x27],bh
  42a3a2:	out    0x0,al
  42a3a4:	push   ecx
  42a3a5:	mov    edi,edi
  42a3a7:	dec    esi
  42a3a9:	mov    BYTE PTR [edi],0x89
  42a3ac:	imul   edi,edi,0x82c0089
  42a3b2:	std    
  42a3b3:	jmp    FWORD PTR [eax]
  42a3b5:	or     DWORD PTR [ecx-0x498ef277],0xffffffff
  42a3bc:	popa   
  42a3bd:	int3   
  42a3be:	(bad)  
  42a3bf:	(bad)  
  42a3c0:	cmp    BYTE PTR [edi-0x7c7500ee],ah
  42a3c6:	add    DWORD PTR [eax],0xffffffd5
  42a3c9:	push   es
  42a3ca:	or     eax,0xff00c7cc
  42a3cf:	inc    DWORD PTR [eax-0x80]
  42a3d2:	mov    edi,?
  42a3d4:	and    bh,bh
  42a3d6:	(bad)  
  42a3d7:	(bad)  
  42a3d8:	jl     0x42a3b9
  42a3da:	in     eax,0x89
  42a3dc:	pop    edi
  42a3dd:	mov    edi,edi
  42a3df:	inc    esi
  42a3e1:	add    al,0xc2
  42a3e3:	add    BYTE PTR [ebx],al
  42a3e5:	inc    DWORD PTR [eax]
  42a3e7:	add    BYTE PTR [esi],dl
  42a3e9:	mov    cl,0x60
  42a3eb:	add    BYTE PTR [esi+0x0],cl
  42a3ee:	int3   
  42a3ef:	jmp    FWORD PTR [edx+ebp*1+0xe200dc]
  42a3f6:	cmp    edi,0xffffffb2
  42a3f9:	imul   edx,DWORD PTR [ebp+0xff95ff],0xffffffff
  42a400:	enter  0x81cd,0x0
  42a404:	add    al,0x83
  42a406:	(bad)  
  42a407:	inc    esp
  42a409:	or     eax,0xffa0ff1a
  42a40e:	add    BYTE PTR [ebx-0xf89e63],al
  42a414:	jns    0x42a416
  42a416:	cmp    edi,0xb
  42a419:	stos   BYTE PTR es:[edi],al
  42a41a:	popa   
  42a41b:	mov    DWORD PTR [edx],edi
  42a41d:	dec    esp
  42a41f:	adc    DWORD PTR [ecx-0x2233dfca],0x0
  42a426:	add    bh,bh
  42a428:	mov    dl,bh
  42a42a:	icebp  
  42a42b:	add    BYTE PTR [edx+0x6b00ffcc],ah
  42a431:	jne    0x42a3fc
  42a433:	call   FWORD PTR [edi]
  42a435:	add    DWORD PTR [eax],0x0
  42a438:	(bad)  
  42a439:	and    DWORD PTR [edi+edi*8],edx
  42a43c:	push   esp
  42a43d:	mov    DWORD PTR [ecx-0x5a824001],ecx
  42a443:	(bad)  
  42a444:	jmp    0xc80fa3cc
  42a449:	pop    esi
  42a44a:	mov    ebx,0xff6800
  42a44f:	add    BYTE PTR [ebx],al
  42a451:	outs   dx,BYTE PTR ds:[esi]
  42a452:	test   DWORD PTR [ebx-0xff00fd],eax
  42a458:	test   BYTE PTR [ecx],0x1
  42a45b:	dec    DWORD PTR [ebx-0x7d]
  42a45e:	add    bh,bh
  42a460:	jmp    FWORD PTR [eax]
  42a462:	xchg   esp,ecx
  42a464:	sbb    eax,DWORD PTR [eax]
  42a466:	inc    DWORD PTR [eax]
  42a468:	mov    ds:0x350044ac,eax
  42a46d:	add    bh,bh
  42a46f:	jmp    edx
  42a471:	or     BYTE PTR [esi],ah
  42a473:	add    BYTE PTR ds:0x76ffffcc,cl
  42a479:	or     eax,0xffe70005
  42a47e:	inc    DWORD PTR [eax]
  42a480:	sbb    BYTE PTR [edi+0x5e],ch
  42a483:	xor    DWORD PTR [ebp-0x7d],0xffffffff
  42a487:	push   DWORD PTR [eax+edi*2]
  42a48a:	ja     0x42a48b
  42a48c:	mov    bl,0xff
  42a48e:	(bad)  
  42a48f:	push   ebp
  42a491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a492:	jb     0x42a493
  42a494:	sar    edi,0x0
  42a497:	mov    ebx,eax
  42a499:	xor    al,0x9e
  42a49b:	adc    DWORD PTR [ebp+0x0],0xffffffcc
  42a49f:	(bad)  
  42a4a0:	(bad)  
  42a4a2:	lock mov DWORD PTR [esi],edx
  42a4a5:	int3   
  42a4a6:	add    DWORD PTR [ebx-0x9810ed],0xffffffbe
  42a4ad:	dec    DWORD PTR [ecx+0x26f857ff]
  42a4b3:	int3   
  42a4b4:	mov    ds:0xd900cc83,al
  42a4b9:	lods   eax,DWORD PTR ds:[esi]
  42a4ba:	sbb    DWORD PTR [ebx-0x767c7c04],eax
  42a4c0:	sahf   
  42a4c1:	cmp    edi,edx
  42a4c3:	call   FWORD PTR [edi]
  42a4c5:	dec    esp
  42a4c7:	call   ebp
  42a4c9:	lods   al,BYTE PTR ds:[esi]
  42a4ca:	push   edx
  42a4cb:	add    BYTE PTR [ebp+0x0],ch
  42a4ce:	add    bh,bh
  42a4d0:	sahf   
  42a4d1:	push   0x833b8915
  42a4d6:	add    bh,bh
  42a4d8:	leave  
  42a4d9:	push   edx
  42a4da:	lahf   
  42a4db:	add    BYTE PTR [edx],al
  42a4dd:	inc    DWORD PTR [eax]
  42a4df:	or     DWORD PTR [ebx],0x37
  42a4e2:	push   es
  42a4e3:	jmp    DWORD PTR [esi]
  42a4e5:	(bad)  
  42a4e6:	inc    DWORD PTR [eax]
  42a4e8:	xchg   BYTE PTR [ebp-0x37ff16],dh
  42a4ee:	inc    DWORD PTR [eax]
  42a4f0:	fwait
  42a4f1:	inc    ebp
  42a4f2:	inc    edi
  42a4f3:	int3   
  42a4f4:	mov    ecx,0xf683ffff
  42a4f9:	xor    bh,BYTE PTR [ecx+ecx*4]
  42a4fc:	ret    0x89cc
  42a4ff:	dec    DWORD PTR [edi]
  42a501:	and    BYTE PTR [ecx+0x0],dh
  42a504:	imul   edi,edi,0x0
  42a507:	add    BYTE PTR [ecx+0x36],dl
  42a50a:	pop    ecx
  42a50b:	add    BYTE PTR [esi-0x1],ah
  42a50e:	add    BYTE PTR [eax],al
  42a510:	mov    ds:0x65ffef45,eax
  42a515:	mov    DWORD PTR [ecx+0x616036ff],ecx
  42a51b:	add    BYTE PTR [ecx-0x1],ah
  42a51e:	mov    DWORD PTR [eax],eax
  42a520:	nop
  42a521:	pop    edx
  42a522:	jp     0x42a523
  42a524:	je     0x42a4af
  42a526:	add    BYTE PTR [eax],al
  42a528:	shr    ebx,0xaf
  42a52b:	inc    ecx
  42a52d:	add    BYTE PTR [ebx+0x1280e8ff],al
  42a533:	add    BYTE PTR [eax-0x7d],bh
  42a536:	inc    DWORD PTR [ebx-0x757a9e]
  42a53c:	inc    edi
  42a53d:	inc    DWORD PTR [eax]
  42a53f:	add    BYTE PTR [esi],bh
  42a541:	mov    ds,WORD PTR [eax-0x34]
  42a544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a545:	add    bh,bh
  42a547:	add    ch,bh
  42a549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a54a:	lods   al,BYTE PTR ds:[esi]
  42a54b:	add    BYTE PTR [edx+0x73cc00ff],al
  42a551:	lock mov ecx,0xffff9cff
  42a557:	mov    esp,edx
  42a559:	popa   
  42a55a:	mov    ebx,0xffffca00
  42a55f:	add    bh,bl
  42a561:	sti    
  42a562:	pushf  
  42a563:	dec    DWORD PTR [ebp-0xd007c7d]
  42a569:	jbe    0x42a580
  42a56b:	dec    DWORD PTR [edi+edi*8-0x77]
  42a56f:	add    BYTE PTR [esi+0x26ffe8a1],cl
  42a575:	or     esp,0xffffff89
  42a578:	sar    ch,cl
  42a57a:	jle    0x42a4ff
  42a57c:	nop
  42a57d:	cmp    edi,0xffffffff
  42a580:	jnp    0x42a566
  42a582:	or     eax,0xff9aff
  42a587:	add    BYTE PTR [edi+0x2283b7de],ch
  42a58d:	inc    DWORD PTR [eax]
  42a58f:	call   FWORD PTR [edi]
  42a591:	fisubr DWORD PTR [ecx]
  42a593:	inc    DWORD PTR [edx-0x22ff0100]
  42a599:	and    esi,DWORD PTR [edi]
  42a59b:	add    BYTE PTR ds:0x8683ff00,ch
  42a5a1:	sub    BYTE PTR [esi+0x0],bl
  42a5a4:	cmp    eax,DWORD PTR [eax]
  42a5a6:	inc    DWORD PTR [ebx-0x76eeeec1]
  42a5ac:	lahf   
  42a5ad:	inc    DWORD PTR [eax]
  42a5af:	or     DWORD PTR [eax-0x68],0x66
  42a5b3:	mov    edx,ebx
  42a5b5:	add    bh,bh
  42a5b7:	add    ch,cl
  42a5b9:	cmc    
  42a5ba:	cdq    
  42a5bb:	xor    DWORD PTR [eax-0x70000000],0xffffffcf
  42a5c2:	xchg   edi,eax
  42a5c3:	(bad)  
  42a5c4:	jmp    0x8a41a695
  42a5c9:	mov    esi,0xffde8928
  42a5ce:	int3   
  42a5cf:	dec    DWORD PTR [edx+0x38ffd359]
  42a5d5:	dec    esp
  42a5d7:	jmp    FWORD PTR [edi+0x15832292]
  42a5dd:	add    BYTE PTR [ecx-0x3df8d87d],cl
  42a5e3:	push   DWORD PTR [eax+eax*1]
  42a5e6:	dec    DWORD PTR [ecx-0x870baf]
  42a5ec:	sar    bh,0x89
  42a5ef:	int3   
  42a5f0:	pop    ss
  42a5f1:	leave  
  42a5f2:	fcos   
  42a5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5f5:	(bad)  
  42a5f6:	(bad)  
  42a5f7:	dec    eax
  42a5f9:	(bad)  
  42a5fb:	jmp    eax
  42a5fd:	(bad)  
  42a5fe:	inc    DWORD PTR [eax]
  42a600:	pop    edi
  42a601:	fldcw  WORD PTR [esi-0x1]
  42a604:	popf   
  42a605:	int3   
  42a606:	add    BYTE PTR [ebx+0x660e0],al
  42a60c:	fdiv   st(7),st
  42a60e:	(bad)  
  42a60f:	jmp    FWORD PTR [edi+0x44ff74d4]
  42a615:	(bad)  
  42a616:	dec    esp
  42a618:	dec    ecx
  42a619:	cld    
  42a61a:	in     eax,0x0
  42a61c:	enter  0x8983,0x0
  42a620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a621:	push   0x76
  42a623:	sbb    DWORD PTR [eax-0x23ffff01],0x29
  42a62a:	jp     0x42a62c
  42a62c:	in     eax,0x0
  42a62e:	int3   
  42a62f:	add    cl,ah
  42a631:	mov    ds:0xffd8ff3a,eax
  42a636:	add    bh,bh
  42a638:	ins    BYTE PTR es:[edi],dx
  42a639:	inc    esp
  42a63a:	call   0xcd42233f
  42a63f:	inc    DWORD PTR [eax-0x200639f]
  42a645:	(bad)  
  42a646:	(bad)  
  42a647:	dec    DWORD PTR [edi+esi*4]
  42a64a:	hlt    
  42a64b:	call   DWORD PTR [ebp+0x21ff8300]
  42a651:	ss in  al,dx
  42a653:	add    BYTE PTR [ebp-0x7b00337d],dl
  42a659:	pusha  
  42a65a:	mov    edi,?
  42a65c:	jne    0x42a62a
  42a65e:	mov    DWORD PTR [ecx-0x68e8c8],ecx
  42a664:	pop    es
  42a665:	inc    DWORD PTR [ebx+0xbe77cc]
  42a66b:	call   DWORD PTR [ebp-0x1cff3377]
  42a671:	and    DWORD PTR [eax],ebx
  42a673:	(bad)  
  42a674:	cmp    edi,edi
  42a676:	inc    DWORD PTR [ebx+0x3bec]
  42a67c:	sar    bh,cl
  42a67e:	(bad)  
  42a67f:	dec    DWORD PTR [edx]
  42a681:	push   esp
  42a682:	loope  0x42a683
  42a684:	scas   al,BYTE PTR es:[edi]
  42a685:	add    BYTE PTR [ebx+0x1050bbff],al
  42a68b:	(bad)  
  42a68c:	cmp    bh,bh
  42a68e:	dec    DWORD PTR [ecx-0x335149f4]
  42a694:	fld    QWORD PTR [ebx-0x1ee007d]
  42a69a:	repz add al,al
  42a69d:	add    bh,bh
  42a69f:	inc    DWORD PTR [esi-0x14]
  42a6a2:	ret    
  42a6a3:	mov    DWORD PTR [ebp+0x11ffcc00],ebp
  42a6a9:	push   edx
  42a6aa:	in     eax,dx
  42a6ab:	add    ch,al
  42a6ad:	add    bh,bh
  42a6af:	inc    DWORD PTR ds:0x5affa619
  42a6b5:	add    BYTE PTR [eax],al
  42a6b7:	add    BYTE PTR [edi-0x5b7c8002],ah
  42a6bd:	inc    DWORD PTR [ebx+0x310935ff]
  42a6c3:	dec    DWORD PTR [eax]
  42a6c5:	inc    DWORD PTR [eax]
  42a6c7:	adc    esp,0x8
  42a6ca:	stc    
  42a6cb:	int3   
  42a6cc:	in     eax,dx
  42a6cd:	inc    DWORD PTR [eax]
  42a6cf:	push   DWORD PTR [esi+ebx*2]
  42a6d2:	pusha  
  42a6d3:	add    BYTE PTR [ebx-0x1],bh
  42a6d6:	add    BYTE PTR [ecx-0xbe56c2],cl
  42a6dc:	retf   0x8389
  42a6df:	(bad)  
  42a6e0:	mov    ecx,0x91ff4254
  42a6e5:	add    bh,bh
  42a6e7:	inc    DWORD PTR [ecx+ecx*8-0x6c7c84]
  42a6ee:	mov    edi,edi
  42a6f0:	push   cs
  42a6f1:	aad    0x9
  42a6f3:	(bad)  
  42a6f4:	(bad)  
  42a6f5:	inc    DWORD PTR [eax]
  42a6f7:	add    BYTE PTR [edx-0x19ff7e50],ch
  42a6fd:	add    DWORD PTR [ebx-0x8abe701],0x0
  42a704:	mov    dh,0x0
  42a706:	add    bh,bh
  42a708:	jmp    0xff00:0x4bcca696
  42a70f:	call   ebx
  42a711:	xor    eax,0xa183bc
  42a716:	mov    DWORD PTR [eax],eax
  42a718:	mov    cs:0x834ecc21,eax
  42a71e:	dec    esp
  42a720:	mov    esi,0xbd89275e
  42a725:	dec    esp
  42a727:	call   FWORD PTR [esp+ebx*1+0x21]
  42a72b:	add    ch,cl
  42a72d:	cmp    edi,0xffffffff
  42a730:	add    al,0x54
  42a732:	ret    0x63ff
  42a735:	add    ah,cl
  42a737:	call   DWORD PTR [ebx]
  42a739:	test   ch,al
  42a73b:	add    BYTE PTR [edi],bl
  42a73d:	int3   
  42a73e:	inc    DWORD PTR [eax]
  42a740:	add    eax,0xbaffd3ac
  42a745:	int3   
  42a746:	int3   
  42a747:	call   DWORD PTR [ebx+0x72]
  42a74a:	jle    0x42a74b
  42a74c:	scas   al,BYTE PTR es:[edi]
  42a74d:	inc    DWORD PTR [ebx-0xebcc800]
  42a753:	add    BYTE PTR [eax-0x34],bl
  42a756:	inc    DWORD PTR [eax]
  42a758:	pop    ecx
  42a759:	mov    ebx,0xcca6ff9a
  42a75e:	(bad)  
  42a75f:	(bad)  
  42a760:	jmp    0xffff:0xa2ffb222
  42a767:	int3   
  42a768:	out    0xe2,al
  42a76a:	inc    esp
  42a76b:	jmp    DWORD PTR [edi+edi*8+0x0]
  42a76f:	add    BYTE PTR ds:0x2100b967,dh
  42a775:	add    bh,bh
  42a777:	push   DWORD PTR [edi+0x35838341]
  42a77d:	dec    esp
  42a77f:	add    BYTE PTR [ecx+0x3d],bh
  42a782:	lahf   
  42a783:	(bad)  
  42a784:	in     al,dx
  42a785:	add    ah,cl
  42a787:	jmp    FWORD PTR [edx+0x23]
  42a78a:	mov    ds:0x83ff4289,al
  42a78f:	push   edx
  42a791:	add    BYTE PTR [ebx-0x1],dh
  42a794:	std    
  42a795:	(bad)  
  42a796:	dec    DWORD PTR [ecx+0x1fe60b]
  42a79c:	and    bh,bh
  42a79e:	add    bh,bh
  42a7a0:	rcr    eax,1
  42a7a2:	push   0xffffffcc
  42a7a4:	cmp    bh,bh
  42a7a6:	add    bh,bh
  42a7a8:	aam    0x55
  42a7aa:	jno    0x42a7ab
  42a7ac:	mov    DWORD PTR [ecx+0xadb8300],ecx
  42a7b2:	(bad)  
  42a7b3:	push   DWORD PTR [eax]
  42a7b5:	(bad)  
  42a7b6:	inc    DWORD PTR [eax]
  42a7b8:	dec    edx
  42a7b9:	lahf   
  42a7ba:	adc    al,BYTE PTR [eax]
  42a7bc:	test   ah,cl
  42a7be:	int3   
  42a7bf:	call   FWORD PTR [edi-0x7e]
  42a7c2:	inc    ecx
  42a7c3:	call   FWORD PTR [edx]
  42a7c5:	inc    DWORD PTR [eax]
  42a7c7:	adc    DWORD PTR [edx],0x5f
  42a7ca:	cmp    al,0xff
  42a7cc:	je     0x42a7ce
  42a7ce:	add    bh,bh
  42a7d0:	lods   eax,DWORD PTR ds:[esi]
  42a7d1:	adc    al,0xce
  42a7d3:	add    BYTE PTR [eax-0x1d00ff01],dl
  42a7d9:	and    BYTE PTR [edi-0x1],dh
  42a7dc:	dec    ebp
  42a7dd:	add    DWORD PTR [ebx+0x2fc44eff],0xffffff83
  42a7e4:	aas    
  42a7e5:	add    bh,bh
  42a7e7:	dec    DWORD PTR ds:0x5bff885a
  42a7ed:	mov    DWORD PTR [ebx-0x5a0afa01],eax
  42a7f3:	add    bl,dh
  42a7f5:	add    ah,cl
  42a7f7:	call   DWORD PTR ds:0xe2ffe57d
  42a7fd:	inc    DWORD PTR [ebx-0x2a131600]
  42a803:	(bad)  
  42a804:	(bad)  
  42a806:	(bad)  
  42a807:	call   FWORD PTR [ebp+0x1300beb1]
  42a80d:	or     DWORD PTR [ecx+0x33281b83],0xffffffcc
  42a814:	inc    esi
  42a815:	int3   
  42a816:	add    ah,cl
  42a818:	xchg   DWORD PTR [esi],esi
  42a81a:	push   esi
  42a81b:	inc    DWORD PTR [edi-0x7d]
  42a81e:	int3   
  42a81f:	jmp    DWORD PTR [ecx+esi*2+0x36]
  42a823:	call   FWORD PTR [ebp-0x1]
  42a826:	add    BYTE PTR [eax],al
  42a828:	pop    edi
  42a829:	push   esi
  42a82a:	sbb    eax,DWORD PTR [eax]
  42a82c:	int3   
  42a82d:	dec    DWORD PTR [ecx+0x56fe85ff]
  42a833:	mov    DWORD PTR [edi+0x46ff00ff],edx
  42a839:	(bad)  
  42a83a:	out    dx,eax
  42a83b:	push   eax
  42a83d:	(bad)  
  42a83e:	(bad)  
  42a83f:	call   edx
  42a841:	pop    ebx
  42a842:	fs add edx,0xffffff83
  42a846:	(bad)  
  42a847:	(bad)  
  42a848:	cld    
  42a849:	gs dec ebx
  42a84b:	cmp    ebp,0x0
  42a84e:	(bad)  
  42a84f:	push   esi
  42a851:	icebp  
  42a852:	cwde   
  42a853:	push   DWORD PTR [edi+edi*8-0x6c7e0100]
  42a85a:	into   
  42a85b:	call   DWORD PTR [ebp-0x7d]
  42a85e:	mov    DWORD PTR [eax],eax
  42a860:	clc    
  42a861:	std    
  42a862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a863:	jmp    FWORD PTR [ebp+0x78ff00ff]
  42a869:	add    DWORD PTR [ebx-0x5e00],ebx
  42a86f:	jmp    FWORD PTR [edi]
  42a871:	ds pop ebx
  42a873:	add    BYTE PTR [ebx-0x7d],bl
  42a876:	(bad)  
  42a877:	jmp    DWORD PTR [edx+eax*2+0x3d]
  42a87b:	and    ecx,0xffffff83
  42a87e:	add    BYTE PTR [ecx-0x76bce69d],cl
  42a884:	xchg   ecx,eax
  42a885:	(bad)  
  42a886:	dec    DWORD PTR [ecx-0x64002]
  42a88c:	jae    0x42a88d
  42a88e:	add    BYTE PTR [ecx+0x99e2ab],cl
  42a894:	lods   eax,DWORD PTR ds:[esi]
  42a895:	int3   
  42a896:	(bad)  
  42a897:	jmp    FWORD PTR [ebx]
  42a899:	dec    ebp
  42a89a:	and    eax,0xff6a83
  42a89f:	call   FWORD PTR [eax]
  42a8a1:	sbb    eax,DWORD PTR [edx]
  42a8a3:	call   DWORD PTR [eax-0x34]
  42a8a6:	inc    DWORD PTR [eax]
  42a8a8:	fistp  WORD PTR [ebp-0x76163391]
  42a8ae:	(bad)  
  42a8af:	push   ebx
  42a8b1:	sbb    esi,DWORD PTR [edi]
  42a8b3:	add    bl,al
  42a8b5:	add    ah,cl
  42a8b7:	add    BYTE PTR [eax-0x19001fc4],dl
  42a8bd:	mov    edi,edi
  42a8bf:	add    BYTE PTR [ecx],al
  42a8c1:	jge    0x42a88d
  42a8c3:	int3   
  42a8c4:	sub    eax,DWORD PTR [eax]
  42a8c6:	int3   
  42a8c7:	add    dl,dl
  42a8c9:	sbb    al,0xf
  42a8cb:	mov    esi,edx
  42a8cd:	add    BYTE PTR [eax],al
  42a8cf:	add    BYTE PTR [eax+0x59],ah
  42a8d2:	stos   DWORD PTR es:[edi],eax
  42a8d3:	push   DWORD PTR [edx-0x50ff007d]
  42a8d9:	adc    eax,0x65001b
  42a8de:	dec    esp
  42a8e0:	push   ecx
  42a8e1:	(bad)  
  42a8e2:	sbb    bh,bh
  42a8e4:	in     al,0x0
  42a8e6:	add    DWORD PTR [ebx-0xe495ab],0xffffffd3
  42a8ed:	(bad)  
  42a8ee:	inc    DWORD PTR [ebx-0x7c209bff]
  42a8f4:	add    bh,bh
  42a8f6:	mov    edi,edi
  42a8f8:	inc    ecx
  42a8f9:	push   eax
  42a8fa:	cwde   
  42a8fb:	mov    DWORD PTR [edi+0x240000ff],ebp
  42a901:	jmp    0xf82c4f
  42a906:	add    BYTE PTR [ebx+0x6046be],al
  42a90c:	mov    ch,0x83
  42a90e:	inc    DWORD PTR [eax]
  42a910:	lods   eax,DWORD PTR ds:[esi]
  42a911:	add    al,0x69
  42a913:	inc    ecx
  42a915:	inc    DWORD PTR [eax]
  42a917:	int3   
  42a918:	dec    edx
  42a919:	test   BYTE PTR [eax-0x1],0x11
  42a91d:	(bad)  
  42a91e:	(bad)  
  42a91f:	(bad)  
  42a920:	fsub   st(5),st
  42a922:	push   0xff5200
  42a927:	jmp    DWORD PTR [ecx+edi*1]
  42a92a:	jmp    0x42a8f8
  42a92c:	(bad)  
  42a92d:	dec    esp
  42a92f:	add    ch,cl
  42a931:	pop    esi
  42a932:	mov    ecx,0xff0048ff
  42a937:	add    BYTE PTR [eax*8+0x49ff9f],dh
  42a93e:	(bad)  
  42a93f:	dec    ecx
  42a941:	div    DWORD PTR [esp+ecx*8+0x64]
  42a945:	add    ah,cl
  42a947:	mov    ebp,ecx
  42a949:	dec    ebp
  42a94a:	gs jmp ebx
  42a94d:	inc    DWORD PTR [eax]
  42a94f:	jmp    DWORD PTR [edx-0x25]
  42a952:	ins    BYTE PTR es:[edi],dx
  42a953:	inc    DWORD PTR [edi-0x1]
  42a956:	cmp    edi,0x3c
  42a959:	lock rol BYTE PTR [ebx-0x7cff00bc],1
  42a960:	shl    cl,0x1e
  42a963:	add    al,al
  42a965:	add    ah,cl
  42a967:	int3   
  42a968:	cmp    ebp,DWORD PTR [eax-0x7ce27cdf]
  42a96e:	mov    DWORD PTR [eax],eax
  42a970:	mov    DWORD PTR [ebp+0x39],esp
  42a973:	call   DWORD PTR [eax-0xb000100]
  42a979:	xchg   esp,eax
  42a97a:	(bad)  
  42a97b:	jmp    DWORD PTR [esi-0x34]
  42a97e:	add    bh,bh
  42a980:	jnp    0xffbaa8e9
  42a986:	(bad)  
  42a987:	push   edi
  42a989:	ds xchg esp,eax
  42a98b:	add    BYTE PTR [edi+edi*8-0x1],cl
  42a98f:	(bad)  
  42a990:	jp     0x42a954
  42a992:	call   0xff431796
  42a997:	dec    ebx
  42a999:	pop    ebx
  42a99a:	jl     0x42a99c
  42a99c:	(bad)  
  42a99d:	inc    DWORD PTR [ebx+0x52113fff]
  42a9a3:	int3   
  42a9a4:	stos   BYTE PTR es:[edi],al
  42a9a5:	add    bh,bh
  42a9a7:	push   DWORD PTR [esi-0x4900d7cc]
  42a9ad:	add    DWORD PTR [ebx+0x1e686d00],0xffffffff
  42a9b4:	outs   dx,DWORD PTR ds:[esi]
  42a9b5:	inc    DWORD PTR [eax]
  42a9b7:	(bad)  
  42a9b8:	clc    
  42a9b9:	xchg   ecx,eax
  42a9ba:	ret    
  42a9bb:	cmp    DWORD PTR [ebx-0x7d],0xffffffff
  42a9bf:	int3   
  42a9c0:	inc    ecx
  42a9c1:	push   0x60
  42a9c3:	int3   
  42a9c4:	lods   eax,DWORD PTR ds:[esi]
  42a9c5:	or     esp,0xffffffff
  42a9c8:	repz and DWORD PTR [edi-0x76002834],ebp
  42a9cf:	jmp    FWORD PTR [edi]
  42a9d1:	jo     0x42a9be
  42a9d3:	and    DWORD PTR ds:0xe0ff0083,0xfffffff5
  42a9da:	pop    edx
  42a9db:	inc    DWORD PTR [eax+0x7cffff00]
  42a9e1:	sbb    bl,al
  42a9e3:	int3   
  42a9e4:	sbb    eax,0xba830000
  42a9e9:	mov    ds:0xd30004,eax
  42a9ee:	mov    edi,edi
  42a9f0:	scas   eax,DWORD PTR es:[edi]
  42a9f1:	call   0xff:0xffc7893e
  42a9f8:	(bad)  
  42a9f9:	xor    edi,DWORD PTR [ecx]
  42a9fb:	call   FWORD PTR [edx]
  42a9fd:	cmp    edi,0x0
  42aa00:	pop    es
  42aa01:	push   ebx
  42aa02:	mov    edi,0xffb2ff
  42aa07:	push   DWORD PTR [eax-0xa]
  42aa0a:	leave  
  42aa0b:	call   FWORD PTR [esi+0x0]
  42aa0e:	add    bh,bh
  42aa10:	cmp    eax,0x1783698b
  42aa15:	(bad)  
  42aa16:	inc    DWORD PTR [eax]
  42aa18:	pop    eax
  42aa19:	js     0x42aa14
  42aa1b:	inc    DWORD PTR [ebx]
  42aa1d:	(bad)  
  42aa1e:	dec    DWORD PTR [ecx-0x7c977cec]
  42aa24:	adc    esp,ecx
  42aa26:	add    BYTE PTR [eax],al
  42aa28:	cmp    esp,edx
  42aa2a:	pop    es
  42aa2b:	jmp    FWORD PTR [ebx-0x1]
  42aa2e:	inc    DWORD PTR [eax]
  42aa30:	test   BYTE PTR [esi-0x7c3b76dd],dl
  42aa36:	mov    DWORD PTR [eax],eax
  42aa38:	rcr    DWORD PTR [edx+ebx*1-0x33ff4f01],0x83
  42aa40:	inc    edx
  42aa41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa42:	aam    0xff
  42aa44:	jnp    0x42aa12
  42aa46:	mov    DWORD PTR [eax],eax
  42aa48:	dec    edx
  42aa49:	(bad)  
  42aa4b:	inc    DWORD PTR [eax-0x4c000001]
  42aa51:	mov    bl,0x81
  42aa53:	call   ecx
  42aa55:	add    bh,bh
  42aa57:	or     DWORD PTR [edi],0xffffffa0
  42aa5a:	and    DWORD PTR [eax],eax
  42aa5c:	xchg   DWORD PTR [ebx+0x360800ff],eax
  42aa62:	outs   dx,BYTE PTR ds:[esi]
  42aa63:	add    BYTE PTR [edi-0x59000100],bh
  42aa69:	mov    edx,0x87008f
  42aa6e:	inc    DWORD PTR [ebx-0x33b3d644]
  42aa74:	inc    esp
  42aa75:	add    bh,bh
  42aa77:	dec    DWORD PTR [ecx+edx*8]
  42aa7a:	mov    ecx,esp
  42aa7c:	sub    eax,0x3bffff00
  42aa81:	icebp  
  42aa82:	xchg   ebx,eax
  42aa83:	add    cl,ah
  42aa85:	dec    esp
  42aa87:	xor    DWORD PTR [ebx+ebx*2],0x1
  42aa8b:	add    BYTE PTR [edx],cl
  42aa8d:	(bad)  
  42aa8e:	inc    DWORD PTR [ebx-0xbd6af9]
  42aa94:	dec    ebx
  42aa95:	(bad)  
  42aa96:	(bad)  
  42aa97:	jmp    FWORD PTR [ecx-0x6005d7d]
  42aa9d:	add    bh,bh
  42aa9f:	jmp    edx
  42aaa1:	retf   
  42aaa2:	jmp    0x41b92a
  42aaa7:	inc    DWORD PTR [edx-0x45ff0c5b]
  42aaad:	cmp    edi,0x0
  42aab0:	loopne 0x42aa4e
  42aab2:	add    BYTE PTR [eax],0x99
  42aab5:	inc    DWORD PTR [ebx-0x5782b800]
  42aabb:	add    BYTE PTR [edi],cl
  42aabd:	int3   
  42aabe:	mov    edi,edi
  42aac0:	cli    
  42aac1:	stos   BYTE PTR es:[edi],al
  42aac2:	cmc    
  42aac3:	int3   
  42aac4:	pop    esp
  42aac5:	add    BYTE PTR [ebx-0x153fa67d],al
  42aacb:	push   DWORD PTR [ebp-0x800ff34]
  42aad1:	mov    eax,0xacff7d
  42aad6:	int3   
  42aad7:	adc    DWORD PTR [ecx-0x300050d6],0xffffff83
  42aade:	dec    DWORD PTR [ecx+0x2e2ff]
  42aae4:	aam    0x0
  42aae6:	inc    DWORD PTR [eax]
  42aae8:	repz pop edx
  42aaea:	imul   ecx,DWORD PTR [ecx+0xffffce],0xc899e7
  42aaf4:	sbb    BYTE PTR [ebx+0x754b00ff],al
  42aafa:	ins    BYTE PTR es:[edi],dx
  42aafb:	add    BYTE PTR [ebp-0x1],dh
  42aafe:	add    BYTE PTR [eax],al
  42ab00:	mov    fs,WORD PTR [edx-0x7c1f00c5]
  42ab06:	inc    DWORD PTR [ebx+0xc7d79d]
  42ab0c:	mov    WORD PTR [eax],es
  42ab0e:	add    BYTE PTR [eax],al
  42ab10:	adc    DWORD PTR [esp+esi*8],ecx
  42ab13:	add    DWORD PTR [edi],0xffffffff
  42ab16:	int3   
  42ab17:	inc    edi
  42ab19:	lock js 0x42aa9f
  42ab1c:	push   0xffffff83
  42ab1e:	(bad)  
  42ab1f:	push   DWORD PTR [ebp-0x4fff63e1]
  42ab25:	add    BYTE PTR [eax],al
  42ab27:	call   FWORD PTR [esi-0x2d]
  42ab2a:	test   BYTE PTR [ebx+0xff0010],0xe2
  42ab31:	loop   0x42ab69
  42ab33:	add    BYTE PTR [edi-0x34],bh
  42ab36:	add    ah,cl
  42ab38:	dec    edi
  42ab39:	push   ebx
  42ab3a:	dec    esi
  42ab3b:	dec    DWORD PTR [ecx]
  42ab3d:	(bad)  
  42ab3e:	inc    DWORD PTR [eax]
  42ab40:	je     0x42ab8e
  42ab42:	mov    al,0xff
  42ab44:	out    0xff,al
  42ab46:	(bad)  
  42ab47:	inc    eax
  42ab49:	cmp    BYTE PTR [ebx-0x76ab01],bh
  42ab4f:	mov    DWORD PTR [edx-0x65],ebx
  42ab52:	stos   BYTE PTR es:[edi],al
  42ab53:	add    BYTE PTR [eax-0x1],dh
  42ab56:	add    BYTE PTR [eax],al
  42ab58:	cmp    eax,0x4300814b
  42ab5d:	inc    DWORD PTR [eax]
  42ab5f:	add    BYTE PTR [edx],bh
  42ab61:	cmc    
  42ab62:	(bad)  
  42ab63:	dec    esp
  42ab65:	add    BYTE PTR [ebx-0x6355b87d],al
  42ab6b:	(bad)  
  42ab6c:	js     0x42ab6d
  42ab6e:	dec    DWORD PTR [ecx+0x38ba2c]
  42ab74:	inc    DWORD PTR [eax]
  42ab76:	add    bh,bh
  42ab78:	or     BYTE PTR [ebx],al
  42ab7a:	or     eax,0xffff99ff
  42ab7f:	add    dh,al
  42ab81:	outs   dx,BYTE PTR ds:[esi]
  42ab82:	push   0xff007aff
  42ab87:	xor    DWORD PTR [eiz*2+0x64003d],0x0
  42ab8f:	dec    DWORD PTR [ebx+0x2d831c9e]
  42ab95:	add    ah,cl
  42ab97:	or     DWORD PTR [edi+0x73cc1006],0x0
  42ab9e:	int3   
  42ab9f:	add    BYTE PTR [esi-0x6f00dab2],al
  42aba5:	inc    DWORD PTR [eax]
  42aba7:	inc    DWORD PTR [edi]
  42aba9:	in     eax,dx
  42abaa:	fdivr  st,st(7)
  42abac:	add    DWORD PTR [eax],eax
  42abae:	inc    DWORD PTR [eax]
  42abb0:	sub    dl,dh
  42abb2:	inc    ebp
  42abb3:	push   DWORD PTR [esi]
  42abb5:	add    bh,bh
  42abb7:	add    ch,ah
  42abb9:	push   es
  42abba:	xor    bh,bh
  42abbc:	sub    edi,edi
  42abbe:	add    bh,bh
  42abc0:	and    eax,0xe28904fa
  42abc5:	(bad)  
  42abc6:	inc    DWORD PTR [eax]
  42abc8:	sub    edi,DWORD PTR [ecx]
  42abca:	bound  eax,QWORD PTR [eax]
  42abcc:	mov    ds:0x58ccffff,eax
  42abd1:	sub    edx,DWORD PTR [ebp-0x77]
  42abd4:	popa   
  42abd5:	(bad)  
  42abd6:	(bad)  
  42abd7:	jmp    FWORD PTR [edx+0x5affbf7f]
  42abdd:	add    DWORD PTR [ebx+0x68943989],0xffffffcc
  42abe4:	jmp    0x207f:0x60ffccff
  42abeb:	add    BYTE PTR [esi],bh
  42abed:	int3   
  42abee:	add    bh,bh
  42abf0:	les    ecx,FWORD PTR [eax-0x2c]
  42abf3:	add    BYTE PTR [edx-0x8ff7c01],ah
  42abf9:	inc    ebx
  42abfa:	and    BYTE PTR [ebx-0x7cff0099],al
  42ac00:	jb     0x42abb7
  42ac02:	popa   
  42ac03:	add    BYTE PTR [edi+edi*8-0x711e7c34],bl
  42ac0a:	ret    0x73ff
  42ac0d:	inc    DWORD PTR [ebx+0x74cc3fff]
  42ac13:	add    BYTE PTR [esi+0x2183ffff],ch
  42ac19:	fist   DWORD PTR [ecx]
  42ac1b:	add    BYTE PTR [edi-0x1],ah
  42ac1e:	inc    DWORD PTR [eax]
  42ac20:	adc    DWORD PTR [edx+0x87cc4c],0xc12200ff
  42ac2a:	sbb    eax,0xfff2ff
  42ac2f:	call   FWORD PTR [ebp+0x75]
  42ac32:	cmp    edi,0xfffff0
  42ac38:	pusha  
  42ac39:	ror    DWORD PTR [ecx+0x0],1
  42ac3c:	push   esi
  42ac3d:	inc    DWORD PTR [eax]
  42ac3f:	and    eax,0x30
  42ac42:	call   0xe800:0x89838b83
  42ac49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac4a:	mov    eax,0xff836389
  42ac4f:	int3   
  42ac50:	(bad)
  42ac54:	jmp    0x1311:0xb6ff0000
  42ac5b:	call   FWORD PTR [esp+ecx*8]
  42ac5e:	add    BYTE PTR [eax],al
  42ac60:	push   0xffffd6e6
  42ac65:	or     esp,0xffffff89
  42ac68:	mov    cl,0x80
  42ac6a:	gs add ch,bh
  42ac6d:	add    BYTE PTR [eax],al
  42ac6f:	xor    ecx,0x77
  42ac72:	xor    ecx,esp
  42ac74:	fs add bh,bh
  42ac77:	add    BYTE PTR [ecx-0x4100d53c],ch
  42ac7d:	inc    DWORD PTR [eax]
  42ac7f:	(bad)  
  42ac80:	call   0x8341bad2
  42ac85:	add    bh,bh
  42ac87:	jmp    FWORD PTR [ebx+eax*2+0x14]
  42ac8b:	(bad)  
  42ac8c:	mov    eax,0x1389ffff
  42ac91:	xchg   BYTE PTR [ebx-0x2701],dh
  42ac97:	add    ch,dl
  42ac99:	cmp    eax,0xff38cc61
  42ac9e:	int3   
  42ac9f:	call   FWORD PTR [ecx+0x51]
  42aca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aca3:	(bad)  
  42aca4:	out    dx,al
  42aca5:	add    BYTE PTR [eax],al
  42aca7:	dec    esp
  42aca9:	test   al,bl
  42acab:	sbb    DWORD PTR [edx-0x2e7cff7d],0xffffffb1
  42acb2:	mov    es,WORD PTR [eax]
  42acb4:	xchg   DWORD PTR [eax],eax
  42acb6:	(bad)  
  42acb7:	dec    DWORD PTR [esi+0xf]
  42acba:	outs   dx,DWORD PTR ds:[esi]
  42acbb:	(bad)  
  42acbc:	cmp    al,0x83
  42acbe:	add    BYTE PTR [eax],al
  42acc0:	les    edx,FWORD PTR [ebp-0x3314ff45]
  42acc6:	add    bh,bh
  42acc8:	sahf   
  42acc9:	ret    0xff06
  42accc:	pop    esi
  42accd:	mov    esp,ecx
  42accf:	cmp    ebx,0xffffff94
  42acd2:	js     0x42acd4
  42acd4:	ja     0x42acd5
  42acd6:	add    DWORD PTR [ebx+0x8b0a0f],0x39
  42acdd:	add    BYTE PTR [eax],al
  42acdf:	jmp    DWORD PTR [ecx-0x7c]
  42ace2:	mov    ecx,esp
  42ace4:	inc    ecx
  42ace5:	cmp    edi,0xffffffff
  42ace8:	addr16 jge 0x42ac76
  42aceb:	call   FWORD PTR [eax]
  42aced:	(bad)  
  42acee:	(bad)  
  42acef:	call   edx
  42acf1:	sub    dl,cl
  42acf3:	(bad)  
  42acf4:	(bad)  
  42acf5:	dec    DWORD PTR [ecx+0x455474ff]
  42acfb:	add    cl,bh
  42acfd:	(bad)  
  42acfe:	(bad)  
  42acff:	(bad)  
  42ad00:	fist   DWORD PTR [eax]
  42ad02:	daa    
  42ad03:	call   FWORD PTR [esi-0x7d]
  42ad06:	mov    DWORD PTR [ecx+0x250f67],ecx
  42ad0c:	out    0xff,eax
  42ad0e:	cmp    edi,0xffffffbc
  42ad11:	xor    edx,DWORD PTR [ebx+0x0]
  42ad14:	fimul  DWORD PTR [ecx-0x1a9c0100]
  42ad1a:	mov    bh,0xff
  42ad1c:	mov    edi,0x1f00ffff
  42ad21:	sbb    al,0x8e
  42ad23:	jmp    edi
  42ad25:	int3   
  42ad26:	inc    DWORD PTR [ebx+0x10ebc8]
  42ad2c:	(bad)  
  42ad2d:	inc    DWORD PTR [ebx+0x7d4b8383]
  42ad33:	adc    DWORD PTR [ebx-0x1],0xffffffff
  42ad37:	call   DWORD PTR [ebp+0x60]
  42ad3a:	xor    bh,bh
  42ad3c:	js     0x42ad3d
  42ad3e:	add    BYTE PTR [ecx-0x3341d6b1],cl
  42ad44:	sub    eax,0xe7ffffff
  42ad49:	lea    ecx,[ecx]
  42ad4b:	add    DWORD PTR [ecx-0x1c000000],0x25
  42ad52:	leave  
  42ad53:	add    bl,al
  42ad55:	add    DWORD PTR [ebx+0x4ff7ce00],0x0
  42ad5c:	ud0    edi,edi
  42ad5f:	dec    DWORD PTR [edx+0x7a]
  42ad62:	idiv   bh
  42ad64:	jne    0x42ad66
  42ad66:	inc    DWORD PTR [eax]
  42ad68:	sub    al,bl
  42ad6a:	lods   eax,DWORD PTR ds:[esi]
  42ad6b:	and    esi,0xffffffff
  42ad6e:	(bad)  
  42ad6f:	call   DWORD PTR [edx]
  42ad71:	cmp    eax,0xcc21ffc1
  42ad76:	add    bh,bh
  42ad78:	lods   eax,DWORD PTR ds:[esi]
  42ad79:	add    DWORD PTR [eax+0x0],edi
  42ad7c:	cmp    al,0x0
  42ad7e:	mov    DWORD PTR [ebx+0xaf64df],eax
  42ad84:	xchg   ebx,eax
  42ad85:	(bad)  
  42ad86:	dec    esp
  42ad88:	out    dx,eax
  42ad89:	ss retf 0xdfff
  42ad8d:	add    bh,bh
  42ad8f:	add    BYTE PTR [edi],dh
  42ad91:	mov    ecx,0x37ff8a
  42ad96:	cmp    edi,0x29
  42ad99:	(bad)  
  42ad9a:	in     eax,0x0
  42ad9c:	mov    edx,0xd8ff89ff
  42ada1:	jmp    0xff67aced
  42ada6:	cmp    edi,0xffffff8d
  42ada9:	mov    ds:0xffb7ff92,al
  42adae:	inc    DWORD PTR [eax]
  42adb0:	or     bl,bh
  42adb2:	xchg   ecx,eax
  42adb3:	call   DWORD PTR [ebp+0x5fff0083]
  42adb9:	lods   eax,DWORD PTR ds:[esi]
  42adba:	xchg   bh,bh
  42adbc:	ds mov edi,edi
  42adbf:	sbb    DWORD PTR [ecx],0xffffffd5
  42adc2:	cmp    eax,0xff83a5cc
  42adc7:	dec    eax
  42adc9:	das    
  42adca:	or     eax,0xffff27ff
  42adcf:	add    BYTE PTR [eax],dl
  42add1:	jmp    0x42ae03
  42add3:	jmp    DWORD PTR [edx-0x1]
  42add6:	inc    DWORD PTR [eax]
  42add8:	mov    ecx,0xe9ccdff2
  42addd:	(bad)  
  42adde:	(bad)  
  42addf:	dec    ebx
  42ade1:	inc    edi
  42ade2:	inc    esp
  42ade3:	call   ecx
  42ade5:	inc    DWORD PTR [ebx-0xe75c377]
  42adeb:	add    ebx,0xffffff83
  42adee:	add    DWORD PTR [eax],0xffffffb1
  42adf1:	popa   
  42adf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adf3:	jmp    edi
  42adf5:	mov    edi,edi
  42adf7:	add    BYTE PTR [ebx],dl
  42adf9:	mov    dl,0x90
  42adfb:	mov    ebx,ecx
  42adfd:	or     esp,0x0
  42ae00:	push   ebp
  42ae01:	push   esi
  42ae02:	lahf   
  42ae03:	sbb    DWORD PTR [esi-0x1],0xffffffff
  42ae07:	call   FWORD PTR [ebp+eax*1-0x76a600d8]
  42ae0e:	add    BYTE PTR [ecx-0x3384f35b],cl
  42ae14:	mov    esp,0xceff83ff
  42ae19:	xchg   ebx,eax
  42ae1a:	dec    ebp
  42ae1b:	add    BYTE PTR [esi],dl
  42ae1d:	add    BYTE PTR [eax],al
  42ae1f:	jmp    FWORD PTR [edx-0x5dff8f21]
  42ae25:	(bad)  
  42ae26:	dec    esp
  42ae28:	scas   al,BYTE PTR es:[edi]
  42ae29:	xchg   ebx,eax
  42ae2a:	jne    0x42ae2c
  42ae2c:	xchg   esp,eax
  42ae2d:	add    BYTE PTR [eax],al
  42ae2f:	(bad)  
  42ae30:	jmp    0x42ae59
  42ae32:	dec    eax
  42ae33:	add    dh,cl
  42ae35:	inc    DWORD PTR [eax]
  42ae37:	or     DWORD PTR [eax+edx*8],0xffffff82
  42ae3b:	and    edx,0xffffffcc
  42ae3e:	or     esp,0xffffff86
  42ae41:	fisttp WORD PTR [ebx-0x7d]
  42ae44:	dec    ebx
  42ae45:	add    ah,cl
  42ae47:	and    edx,0xffffff9f
  42ae4a:	push   0xffff8000
  42ae4f:	add    bl,ch
  42ae51:	dec    ebx
  42ae52:	repnz add BYTE PTR [edx-0x1],ch
  42ae56:	add    DWORD PTR [ebx-0x3d5ecc],0x30
  42ae5d:	add    bh,bh
  42ae5f:	call   FWORD PTR [eax-0x19]
  42ae62:	pop    ss
  42ae63:	jmp    FWORD PTR [ecx-0x15010000]
  42ae69:	mov    ch,0xf1
  42ae6b:	jmp    DWORD PTR [ecx]
  42ae6d:	mov    DWORD PTR [ebx-0x57ef9c7d],eax
  42ae73:	dec    DWORD PTR [edx]
  42ae75:	(bad)  
  42ae76:	(bad)  
  42ae77:	call   esi
  42ae79:	hlt    
  42ae7a:	xor    eax,0xdbff
  42ae7f:	add    BYTE PTR [eax+0x6489ce87],ah
  42ae85:	(bad)  
  42ae86:	(bad)  
  42ae87:	jmp    ecx
  42ae89:	dec    ecx
  42ae8a:	pop    ss
  42ae8b:	add    BYTE PTR [edi],bl
  42ae8d:	add    DWORD PTR [ebx+0x163c1c00],0x0
  42ae94:	outs   dx,BYTE PTR ds:[esi]
  42ae95:	(bad)  
  42ae96:	inc    DWORD PTR [eax]
  42ae98:	ret    
  42ae99:	mov    eax,ds:0xffd78922
  42ae9e:	(bad)  
  42ae9f:	jmp    FWORD PTR [ebp-0x35]
  42aea2:	mov    ?,edi
  42aea4:	mov    edi,0x6683ccff
  42aea9:	mov    edi,0xff4dccb2
  42aeae:	cmp    edi,0x7d
  42aeb1:	jg     0x42aec4
  42aeb3:	add    bl,dh
  42aeb5:	inc    DWORD PTR [eax]
  42aeb7:	int3   
  42aeb8:	ds pop edx
  42aeba:	rol    DWORD PTR [eax],1
  42aebc:	int    0x0
  42aebe:	dec    esp
  42aec0:	das    
  42aec1:	ss push eax
  42aec3:	int3   
  42aec4:	mov    edi,0xa6ff0083
  42aec9:	jo     0x42af3b
  42aecb:	call   FWORD PTR [edi]
  42aecd:	int3   
  42aece:	add    bh,bh
  42aed0:	enter  0x224e,0xff
  42aed4:	pushf  
  42aed5:	inc    DWORD PTR [ebx-0x61274900]
  42aedb:	inc    DWORD PTR [edi+edi*8]
  42aede:	add    BYTE PTR [eax],al
  42aee0:	jnp    0x42aeaf
  42aee2:	xlat   BYTE PTR ds:[ebx]
  42aee3:	call   DWORD PTR [eax]
  42aee5:	inc    DWORD PTR [eax]
  42aee7:	xor    DWORD PTR [esi-0x30],0xffffffff
  42aeeb:	(bad)  
  42aeec:	fdivr  st,st(7)
  42aeee:	int3   
  42aeef:	add    BYTE PTR [ecx-0x39ffe839],ch
  42aef5:	add    ah,cl
  42aef7:	push   eax
  42aef9:	xchg   esp,eax
  42aefa:	and    al,0xff
  42aefc:	sub    eax,0x2fff0083
  42af01:	jbe    0x42af54
  42af03:	inc    DWORD PTR [esi]
  42af05:	cmp    edi,0xffffffff
  42af08:	fs inc ecx
  42af0a:	mov    ds:0xfffffa00,eax
  42af0f:	and    DWORD PTR [edx+ebp*2+0x5000c0],0xffffffff
  42af17:	call   FWORD PTR [edx+0x27]
  42af1a:	ja     0x42af1c
  42af1c:	loopne 0x42aea7
  42af1e:	mov    DWORD PTR [ebx+0xd2c22c],eax
  42af24:	adc    al,0x83
  42af26:	add    DWORD PTR [ebx-0xc0aa6c],0xffffffc7
  42af2d:	inc    DWORD PTR [eax]
  42af2f:	call   FWORD PTR [ebx+0x1d83c831]
  42af35:	add    DWORD PTR [eax],0xffffff83
  42af38:	ins    BYTE PTR es:[edi],dx
  42af39:	sbb    eax,ebx
  42af3b:	(bad)  
  42af3c:	jmp    0xeb62:0x8200ff83
  42af43:	jmp    FWORD PTR [edi+0x7f83ffff]
  42af49:	call   0x83ff:0x9800b6
  42af50:	hlt    
  42af51:	repz std 
  42af53:	call   DWORD PTR [edi+0x0]
  42af56:	(bad)  
  42af57:	jmp    edx
  42af59:	popa   
  42af5a:	lods   al,BYTE PTR ds:[esi]
  42af5b:	add    cl,ah
  42af5d:	(bad)  
  42af5e:	(bad)  
  42af5f:	inc    ebx
  42af61:	cwde   
  42af62:	cmp    BYTE PTR [eax],al
  42af64:	retf   0xffcc
  42af67:	push   edx
  42af69:	pop    ecx
  42af6a:	dec    edx
  42af6b:	int3   
  42af6c:	and    al,0x83
  42af6e:	add    BYTE PTR [ecx-0xb7cf60],cl
  42af74:	or     esp,0xc0d700cc
  42af7a:	sti    
  42af7b:	(bad)  
  42af7c:	stc    
  42af7d:	add    bh,bh
  42af7f:	(bad)  
  42af80:	cmp    al,0xfb
  42af82:	adc    edi,edi
  42af84:	add    bh,bh
  42af86:	int3   
  42af87:	add    ebp,0x7c
  42af8a:	retf   0x5800
  42af8d:	add    DWORD PTR [ebx-0x8776901],0x0
  42af94:	jmp    0x3282:0xd7ffccff
  42af9b:	and    eax,0xffffffff
  42af9e:	dec    esp
  42afa0:	mov    ch,0xcf
  42afa2:	sbb    esp,ecx
  42afa4:	mov    ebp,0x75830089
  42afa9:	xor    BYTE PTR [ecx+0x8949cc],ch
  42afaf:	(bad)  
  42afb0:	push   DWORD PTR [ecx+0x5f]
  42afb3:	xor    ecx,0xffffffcc
  42afb6:	add    DWORD PTR [eax],0xffffffc8
  42afb9:	pushf  
  42afba:	or     eax,DWORD PTR [ebx+0xff0a]
  42afc0:	xor    dl,BYTE PTR [ebx-0x15]
  42afc3:	add    BYTE PTR ds:0x3cc00ff,dh
  42afc9:	dec    edi
  42afca:	outs   dx,BYTE PTR ds:[esi]
  42afcb:	int3   
  42afcc:	leave  
  42afcd:	or     DWORD PTR [ecx-0x7f5a907d],0xffffffff
  42afd4:	gs cmp edi,0x0
  42afd8:	in     al,dx
  42afd9:	or     BYTE PTR [ecx-0xffac7d],ah
  42afdf:	add    BYTE PTR [eax+0x23],ah
  42afe2:	or     eax,DWORD PTR [eax]
  42afe4:	adc    edi,edi
  42afe6:	cmp    edi,0xffffffd1
  42afe9:	int    0xb7
  42afeb:	adc    edx,0xffffffff
  42afee:	inc    DWORD PTR [eax]
  42aff0:	xlat   BYTE PTR ds:[ebx]
  42aff1:	xor    eax,0xb40076
  42aff6:	(bad)  
  42aff7:	inc    DWORD PTR ds:0x6b004537
  42affd:	dec    DWORD PTR [ecx+0x15202eff]
  42b003:	call   FWORD PTR [eax+0x0]
  42b006:	dec    DWORD PTR [ecx+0x380629]
  42b00c:	in     al,0x83
  42b00e:	add    ah,cl
  42b010:	lock xchg DWORD PTR ds:0x2f00,ebp
  42b017:	call   DWORD PTR [edi]
  42b019:	cmp    eax,0xff6983a2
  42b01e:	add    DWORD PTR [eax],0x32
  42b021:	arpl   WORD PTR [esi-0x1],di
  42b024:	add    ah,cl
  42b026:	add    bh,bh
  42b028:	or     al,0x2b
  42b02a:	mov    dl,0xcc
  42b02c:	jmp    0xffff:0x83ffffff
  42b033:	xchg   ebp,eax
  42b034:	sbb    al,0x89
  42b036:	popa   
  42b037:	fld    DWORD PTR [ebx-0x17bc0100]
  42b03d:	add    BYTE PTR [ebx+0x4b],cl
  42b040:	int3   
  42b041:	mov    edi,edi
  42b043:	fist   WORD PTR [ebx+0x511eff]
  42b049:	add    BYTE PTR [eax],al
  42b04b:	sbb    eax,0xd15e0067
  42b050:	add    BYTE PTR [eax],al
  42b052:	mov    DWORD PTR [esi],edi
  42b054:	add    BYTE PTR gs:[edi-0x7c00ff0a],al
  42b05b:	imul   ebx,DWORD PTR [ebx+eax*4+0x837a63],0x0
  42b063:	inc    di
  42b065:	(bad)  
  42b066:	jmp    0x423a2b
  42b06b:	(bad)  
  42b06c:	aad    0x83
  42b06e:	je     0x42b0e4
  42b070:	(bad)  
  42b071:	inc    DWORD PTR [eax]
  42b073:	adc    ecx,DWORD PTR [edx-0xa89000]
  42b079:	mov    edi,edi
  42b07b:	mov    edi,0xb589ff0e
  42b080:	dec    esp
  42b082:	call   FWORD PTR [eax]
  42b084:	pop    ss
  42b085:	xor    edi,0x5c
  42b088:	cmp    edi,0xffffffff
  42b08b:	shl    DWORD PTR [eax],0x0
  42b08e:	int    0x6a
  42b090:	cmp    edi,0xffffffff
  42b093:	dec    ecx
  42b094:	inc    ebx
  42b095:	int3   
  42b096:	hlt    
  42b097:	push   cs
  42b098:	(bad)  
  42b099:	(bad)  
  42b09a:	dec    DWORD PTR [ebp-0x4dcfffcc]
  42b0a0:	add    bh,bh
  42b0a2:	push   DWORD PTR [ebx]
  42b0a4:	mov    edi,?
  42b0a6:	xor    eax,0xff00ff4d
  42b0ab:	test   BYTE PTR ds:[eax],0x87
  42b0af:	aad    0xff
  42b0b1:	inc    DWORD PTR [eax]
  42b0b3:	mov    al,ds:0xadfafffe
  42b0b8:	dec    DWORD PTR [ecx-0x330f9334]
  42b0be:	add    BYTE PTR [edx-0x6c007c01],dl
  42b0c4:	lods   eax,DWORD PTR ds:[esi]
  42b0c5:	(bad)  
  42b0c6:	fsub   st,st(2)
  42b0c8:	inc    DWORD PTR [eax]
  42b0ca:	call   FWORD PTR [eax+0x3a2d837f]
  42b0d0:	add    bh,bh
  42b0d2:	(bad)  
  42b0d3:	jp     0x42b11f
  42b0d5:	adc    DWORD PTR [esi+0x4d],0xffffffff
  42b0d9:	add    BYTE PTR [eax],al
  42b0db:	or     DWORD PTR [bx+di+0x6bfd],0x4a000083
  42b0e4:	(bad)  
  42b0e5:	call   FWORD PTR [ecx+ecx*2]
  42b0e8:	inc    DWORD PTR [eax]
  42b0ea:	jmp    FWORD PTR [edi-0x4]
  42b0ed:	call   FWORD PTR [ecx]
  42b0ef:	mov    ds:0x7cff00cc,al
  42b0f4:	xor    eax,0x8312efff
  42b0f9:	int3   
  42b0fa:	(bad)  
  42b0fb:	jmp    0x0:0x6bb3ffb6
  42b102:	mov    esp,edi
  42b104:	and    eax,0xffb39900
  42b109:	(bad)  
  42b10a:	(bad)  
  42b10b:	jle    0x42b0e3
  42b10d:	inc    DWORD PTR [ebp-0xa]
  42b110:	mov    DWORD PTR [eax],eax
  42b112:	(bad)  
  42b113:	jmp    0xff00:0x114ffff3
  42b11a:	add    BYTE PTR [ecx+edx*1-0x1],bh
  42b11e:	and    cl,BYTE PTR [edi+edi*8-0x34]
  42b122:	(bad)  
  42b123:	dec    edi
  42b125:	add    BYTE PTR [edi],al
  42b127:	xchg   edx,eax
  42b128:	add    BYTE PTR [ecx+0xc07589],cl
  42b12e:	xor    al,0xe6
  42b130:	(bad)  
  42b131:	(bad)  
  42b132:	jmp    esp
  42b134:	pop    ds
  42b135:	add    BYTE PTR [eax],dl
  42b137:	lahf   
  42b138:	add    bh,bh
  42b13a:	jmp    DWORD PTR [ebp+0x5d3983fa]
  42b140:	inc    DWORD PTR [eax]
  42b142:	mov    DWORD PTR [eax],ebx
  42b144:	loop   0x42b146
  42b146:	int3   
  42b147:	inc    WORD PTR [ebx+0xe75d83]
  42b14e:	stos   BYTE PTR es:[edi],al
  42b14f:	mov    cl,0xff
  42b151:	inc    DWORD PTR [eax]
  42b153:	outs   dx,DWORD PTR ds:[esi]
  42b154:	and    al,BYTE PTR [ebx+0xcc77ba]
  42b15a:	add    bh,dh
  42b15c:	sbb    bh,bh
  42b15e:	inc    ebx
  42b15f:	test   eax,0xbeff83ff
  42b164:	aaa    
  42b165:	mov    edx,ecx
  42b167:	inc    edx
  42b168:	inc    DWORD PTR [eax]
  42b16a:	sub    DWORD PTR [ebx+ebx*2-0x1],0x48
  42b16f:	cmp    DWORD PTR [eax],eax
  42b171:	dec    esp
  42b173:	mov    cs,eax
  42b175:	add    BYTE PTR [ecx+0x60],cl
  42b178:	int3   
  42b179:	add    ah,cl
  42b17b:	xchg   BYTE PTR [edx+0x0],dh
  42b17e:	push   es
  42b17f:	sub    BYTE PTR [eax],al
  42b181:	dec    esp
  42b183:	add    eax,DWORD PTR ds:0xffafb283
  42b189:	(bad)  
  42b18a:	call   FWORD PTR [esi-0x5d]
  42b18d:	dec    DWORD PTR [esi-0xa]
  42b190:	add    BYTE PTR [eax],al
  42b192:	(bad)  
  42b193:	jns    0x42b1a4
  42b195:	adc    DWORD PTR [ebx+0x38],0xffffff89
  42b199:	add    bh,bh
  42b19b:	shl    BYTE PTR [edi+0x676bff],0xcc
  42b1a2:	add    ch,bl
  42b1a4:	lods   al,BYTE PTR ds:[esi]
  42b1a5:	add    BYTE PTR [esi-0x337cff01],ah
  42b1ab:	sbb    al,0xa6
  42b1ad:	adc    DWORD PTR [eax-0x7cff28],0xffffff8c
  42b1b4:	in     al,0xff
  42b1b6:	jb     0x42b165
  42b1b8:	add    bh,bh
  42b1ba:	add    BYTE PTR ds:0x13e6ff38,bh
  42b1c0:	dec    esp
  42b1c2:	inc    DWORD PTR [esi+0x56]
  42b1c5:	cmp    DWORD PTR [ebx],0x35
  42b1c8:	(bad)  
  42b1c9:	(bad)  
  42b1ca:	jmp    DWORD PTR [edx-0x460933b3]
  42b1d0:	add    BYTE PTR [eax],al
  42b1d2:	call   DWORD PTR [esi]
  42b1d4:	adc    al,0x83
  42b1d6:	call   DWORD PTR [edx-0x4f00ff01]
  42b1dc:	cmp    edi,edi
  42b1de:	pop    ebp
  42b1df:	mov    DWORD PTR [eax],0x8107ff00
  42b1e5:	mov    ebp,esp
  42b1e7:	mov    esp,0x7ff83ff
  42b1ec:	aam    0xff
  42b1ee:	pop    edi
  42b1ef:	popa   
  42b1f0:	(bad)  
  42b1f1:	(bad)  
  42b1f2:	jmp    FWORD PTR [eax+0x10490067]
  42b1f8:	add    BYTE PTR [eax],al
  42b1fa:	(bad)  
  42b1fb:	mov    edx,0xb0b70093
  42b200:	(bad)  
  42b201:	(bad)  
  42b202:	jmp    FWORD PTR [ebp*2-0xf417d]
  42b209:	int3   
  42b20a:	sub    ecx,0xffffffe4
  42b20d:	int3   
  42b20e:	jl     0x42b205
  42b210:	add    BYTE PTR [ebx+0x26f283],al
  42b216:	jbe    0x42b21a
  42b218:	cmp    edi,0xffffffcc
  42b21b:	sub    cl,ah
  42b21d:	call   DWORD PTR [eax]
  42b21f:	push   eax
  42b220:	add    BYTE PTR [eax],al
  42b222:	push   DWORD PTR [ebx-0x17]
  42b225:	add    dl,bh
  42b227:	or     bh,bh
  42b229:	cmp    edi,0x8
  42b22c:	out    dx,al
  42b22d:	call   ebx
  42b22f:	push   eax
  42b230:	mov    DWORD PTR [ecx-0x7c77c07d],ecx
  42b236:	pop    ds
  42b237:	call   0x839d:0x2ff0000
  42b23e:	and    bl,cl
  42b240:	(bad)  
  42b241:	inc    DWORD PTR [eax]
  42b243:	pop    esp
  42b244:	int    0xff
  42b246:	xor    edi,ecx
  42b248:	add    DWORD PTR [eax],0xffffff83
  42b24b:	lea    edi,[edi]
  42b24d:	add    BYTE PTR [ebp-0xff00fd],bl
  42b253:	lea    esp,[ecx]
  42b255:	jmp    FWORD PTR [edi]
  42b257:	and    eax,0xa30000ff
  42b25c:	jp     0x42b25d
  42b25e:	in     eax,dx
  42b25f:	sbb    eax,0xefffffff
  42b264:	mov    al,ds:0xffded700
  42b269:	(bad)  
  42b26a:	jmp    DWORD PTR [ebx+0x3e8800bd]
  42b270:	add    BYTE PTR [eax],al
  42b272:	add    BYTE PTR [ecx],al
  42b274:	jmp    0x89ff:0xff610189
  42b27b:	cmp    dh,ah
  42b27d:	dec    DWORD PTR [esi+0x7a]
  42b280:	mov    DWORD PTR [eax],eax
  42b282:	jmp    FWORD PTR [esi-0x4d]
  42b285:	or     DWORD PTR [ecx-0x2e],0xffffff89
  42b289:	mov    edi,edi
  42b28b:	mov    cl,0x80
  42b28d:	int3   
  42b28e:	adc    ebx,esi
  42b290:	(bad)  
  42b291:	(bad)  
  42b292:	dec    esi
  42b294:	and    BYTE PTR [ebx+0x83c3e6],al
  42b29a:	int3   
  42b29b:	mov    ah,0xd
  42b29d:	add    BYTE PTR [eax+eax*1],dh
  42b2a0:	(bad)  
  42b2a1:	(bad)  
  42b2a2:	jmp    DWORD PTR [ecx+0x5b4bffbe]
  42b2a8:	(bad)  
  42b2a9:	dec    DWORD PTR [ecx-0x2b764bff]
  42b2af:	push   edx
  42b2b0:	(bad)  
  42b2b1:	inc    DWORD PTR [eax]
  42b2b3:	cmc    
  42b2b4:	hlt    
  42b2b5:	dec    DWORD PTR [edx+0xe1]
  42b2bb:	into   
  42b2bc:	lods   eax,DWORD PTR ds:[esi]
  42b2bd:	add    BYTE PTR [esi+ebx*4],cl
  42b2c0:	int3   
  42b2c1:	inc    DWORD PTR [eax]
  42b2c3:	mov    al,0x62
  42b2c5:	add    BYTE PTR [eax-0x7c0d],al
  42b2cb:	(bad)  
  42b2cc:	lods   eax,DWORD PTR ds:[esi]
  42b2cd:	call   eax
  42b2cf:	push   esi
  42b2d0:	add    bh,bh
  42b2d2:	add    BYTE PTR [ebp-0x4e],bh
  42b2d5:	add    DWORD PTR [esi+0x72],0xffffffff
  42b2d9:	(bad)  
  42b2da:	dec    DWORD PTR [eax+0x37]
  42b2dd:	call   ecx
  42b2df:	inc    BYTE PTR [eax]
  42b2e1:	cmp    edi,0x77
  42b2e4:	iret   
  42b2e5:	add    dl,cl
  42b2e7:	repnz cmp edi,0xffffff89
  42b2eb:	and    edx,0xffffffff
  42b2ee:	in     eax,0xb6
  42b2f0:	int3   
  42b2f1:	or     esp,0x5b
  42b2f4:	dec    ebx
  42b2f5:	add    BYTE PTR [ebx-0x48],ch
  42b2f8:	add    bh,bh
  42b2fa:	add    BYTE PTR [ebx-0x1c],ch
  42b2fd:	int3   
  42b2fe:	jg     0x42b354
  42b300:	inc    DWORD PTR [eax]
  42b302:	(bad)  
  42b303:	sti    
  42b304:	pusha  
  42b305:	sub    DWORD PTR [edx+0x13],0x0
  42b309:	add    bh,bh
  42b30b:	in     eax,0x5d
  42b30d:	mov    esp,eax
  42b30f:	fwait
  42b310:	mov    edi,edi
  42b312:	inc    DWORD PTR [ebx+0x29db838d]
  42b318:	dec    esp
  42b31a:	add    ah,cl
  42b31c:	stos   DWORD PTR es:[edi],eax
  42b31d:	dec    DWORD PTR [edx-0x7cffff50]
  42b323:	add    eax,0x95eeff57
  42b328:	add    bh,bh
  42b32a:	(bad)  
  42b32b:	in     eax,dx
  42b32c:	aaa    
  42b32d:	adc    DWORD PTR [eax+0x33],0x0
  42b331:	dec    esp
  42b333:	cmp    DWORD PTR [edx],eax
  42b335:	add    BYTE PTR [eax+0xff4a],bh
  42b33b:	jmp    0x808cb35a
  42b340:	(bad)  
  42b341:	inc    DWORD PTR [eax]
  42b343:	out    0x33,eax
  42b345:	int3   
  42b346:	aam    0x54
  42b348:	(bad)  
  42b349:	inc    DWORD PTR [eax]
  42b34b:	add    ah,al
  42b34d:	inc    DWORD PTR [edx-0x7cff00d9]
  42b353:	mov    esi,0x734b83b4
  42b358:	(bad)  
  42b359:	(bad)  
  42b35a:	jmp    DWORD PTR [edx]
  42b35c:	popa   
  42b35d:	dec    DWORD PTR [ebp+0xe]
  42b360:	(bad)  
  42b361:	(bad)  
  42b362:	(bad)  
  42b363:	mov    esi,0x1677ffc0
  42b368:	add    BYTE PTR [ecx+0xe0e83],cl
  42b36e:	rol    DWORD PTR [esp+ecx*8],1
  42b371:	dec    DWORD PTR [ecx+0x27ccbc9f]
  42b377:	loope  0x42b2fc
  42b379:	cmp    edi,0xffffffd0
  42b37c:	dec    ecx
  42b37d:	inc    DWORD PTR [esi-0x3300760e]
  42b383:	test   al,0x1f
  42b385:	sub    DWORD PTR [ebp+0x77],0xffffffcc
  42b389:	add    BYTE PTR [ebx+0x5c833155],al
  42b38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b390:	or     DWORD PTR [ecx-0xf07301],0xffffff8b
  42b397:	out    dx,al
  42b398:	int3   
  42b399:	inc    DWORD PTR [eax]
  42b39b:	pop    ds
  42b39c:	inc    eax
  42b39d:	add    BYTE PTR [ecx-0x7600ffcf],cl
  42b3a3:	fst    QWORD PTR [eax-0x7d]
  42b3a6:	out    dx,al
  42b3a7:	rol    DWORD PTR [eax],1
  42b3a9:	inc    DWORD PTR [eax]
  42b3ab:	push   esp
  42b3ac:	jb     0x42b3ad
  42b3ae:	leave  
  42b3af:	cdq    
  42b3b0:	add    BYTE PTR [ebx-0x1ff201],al
  42b3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3b7:	mov    ecx,0x50000ff
  42b3bc:	call   0xcc00:0xffdc96ff
  42b3c3:	ficomp DWORD PTR [esi-0x1]
  42b3c6:	test   eax,0x8983ff86
  42b3cb:	dec    BYTE PTR [eax-0x34]
  42b3ce:	xchg   ecx,eax
  42b3cf:	pop    eax
  42b3d0:	mov    edi,edi
  42b3d2:	add    BYTE PTR [edi],bl
  42b3d4:	cmp    edi,0xffffffc6
  42b3d7:	mov    edi,0xa6000000
  42b3dc:	pop    edi
  42b3dd:	jmp    DWORD PTR [esp+eax*2]
  42b3e0:	add    BYTE PTR [eax],al
  42b3e2:	jmp    FWORD PTR [edx+0x37f589ed]
  42b3e8:	mov    edi,edi
  42b3ea:	add    BYTE PTR [esi],ch
  42b3ec:	mov    esp,0x89a62bff
  42b3f1:	add    bh,bh
  42b3f3:	js     0x42b3e2
  42b3f5:	mov    eax,ebx
  42b3f7:	rol    BYTE PTR [eax],0x0
  42b3fa:	jmp    DWORD PTR [ecx]
  42b3fc:	push   esi
  42b3fd:	add    dl,bl
  42b3ff:	push   ebp
  42b400:	cmp    edi,0x0
  42b403:	adc    dh,BYTE PTR [edx-0xaa987d]
  42b409:	cmp    edi,0x3
  42b40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b40d:	(bad)  
  42b40e:	jnp    0x42b447
  42b410:	add    BYTE PTR [eax],al
  42b412:	int3   
  42b413:	jge    0x42b434
  42b415:	add    BYTE PTR [esi],ah
  42b417:	ins    BYTE PTR es:[edi],dx
  42b418:	inc    DWORD PTR [eax]
  42b41a:	add    ch,al
  42b41c:	jns    0x42b41d
  42b41e:	pop    edx
  42b41f:	test   al,0x0
  42b421:	int3   
  42b422:	jmp    FWORD PTR [esi]
  42b424:	cmp    edi,0x6f
  42b427:	mov    ds:0xbb0089ff,eax
  42b42c:	daa    
  42b42d:	jmp    FWORD PTR [edx-0xff00e2]
  42b433:	jge    0x42b466
  42b435:	xor    DWORD PTR [ebx-0x7c8e],0xffffff86
  42b43c:	mov    ds:0x895a46ff,eax
  42b441:	add    bh,bh
  42b443:	mov    eax,0xa56a835f
  42b448:	int3   
  42b449:	mov    DWORD PTR [ebx-0xb7cc62b],eax
  42b44f:	dec    ebp
  42b450:	(bad)  
  42b451:	(bad)  
  42b452:	jmp    FWORD PTR [edx-0xc]
  42b455:	push   DWORD PTR [esi]
  42b457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b458:	add    BYTE PTR [eax],al
  42b45a:	xor    eax,0xffffffd6
  42b45d:	jmp    DWORD PTR [edi-0xffd9]
  42b463:	mov    dh,0x53
  42b465:	add    BYTE PTR [esi+0xff66],ch
  42b46b:	inc    eax
  42b46c:	test   BYTE PTR [eax],al
  42b46e:	dec    esi
  42b46f:	(bad)  
  42b470:	inc    DWORD PTR [ebx+0x6a5300]
  42b476:	push   ecx
  42b477:	inc    eax
  42b478:	inc    DWORD PTR [ebx-0xff1b77]
  42b47e:	push   eax
  42b47f:	add    BYTE PTR fs:[ebx+0x36f389],al
  42b486:	xchg   ebx,eax
  42b487:	ins    BYTE PTR es:[edi],dx
  42b488:	inc    DWORD PTR [eax]
  42b48a:	add    DWORD PTR [ecx],0x34
  42b48d:	add    BYTE PTR [eax+0x17],bh
  42b490:	add    BYTE PTR [eax],al
  42b492:	(bad)  
  42b493:	mov    esp,0xc338cc06
  42b498:	add    bh,bh
  42b49a:	mov    edx,eax
  42b49c:	(bad)  
  42b49e:	mov    dh,0xf3
  42b4a0:	int3   
  42b4a1:	(bad)  
  42b4a2:	jmp    FWORD PTR [eax-0x15]
  42b4a5:	call   DWORD PTR [ebx+0x5c]
  42b4a8:	int3   
  42b4a9:	inc    DWORD PTR [ebx-0x56ff106d]
  42b4af:	ror    DWORD PTR [ecx+0x3b06ff83],cl
  42b4b5:	add    BYTE PTR [edi],ch
  42b4b7:	dec    DWORD PTR gs:[ecx-0x4fee01]
  42b4be:	ror    BYTE PTR [ebp-0x52003377],0xab
  42b4c5:	push   DWORD PTR [edi+eax*2-0x14000001]
  42b4cc:	mov    dh,0xff
  42b4ce:	in     eax,dx
  42b4cf:	mov    ch,0xff
  42b4d1:	add    bh,bh
  42b4d3:	test   eax,0xe5c4cc4a
  42b4d8:	add    BYTE PTR [ebx-0x194800],al
  42b4de:	sbb    eax,0xffffff59
  42b4e3:	call   0xccff:0xecbaff51
  42b4ea:	add    BYTE PTR [edx],al
  42b4ec:	push   ecx
  42b4ed:	sub    eax,0xffffff9e
  42b4f0:	mov    DWORD PTR [eax],eax
  42b4f2:	xor    eax,0x63
  42b4f5:	jmp    DWORD PTR [esi+0x65]
  42b4fb:	mul    BYTE PTR [edx-0x333d1f00]
  42b501:	add    bh,bh
  42b503:	and    eax,0x91fff31
  42b508:	add    bh,bh
  42b50a:	add    BYTE PTR [ebx+ebx*8-0x33ad4701],dh
  42b511:	(bad)  
  42b512:	dec    DWORD PTR [edi-0x7b]
  42b515:	push   DWORD PTR [ebx]
  42b517:	sar    edi,1
  42b519:	(bad)  
  42b51a:	call   FWORD PTR [edx-0x58]
  42b51d:	add    BYTE PTR [ebx+0xff8383],ch
  42b523:	outs   dx,BYTE PTR ds:[esi]
  42b524:	adc    DWORD PTR [ebx-0x330add],eax
  42b52a:	push   DWORD PTR [edi+ecx*1-0x76dffc34]
  42b531:	mov    edi,edi
  42b533:	xchg   edx,eax
  42b534:	repz (bad) 
  42b536:	in     al,dx
  42b537:	jmp    0x464281bf
  42b53c:	inc    esi
  42b53d:	mov    DWORD PTR [ecx-0x39],edx
  42b540:	int3   
  42b541:	add    bh,bh
  42b543:	push   ebx
  42b544:	cmp    edi,edi
  42b546:	inc    eax
  42b547:	(bad)  
  42b548:	inc    DWORD PTR [ebx-0x751a00]
  42b54e:	lods   eax,DWORD PTR ds:[esi]
  42b54f:	out    dx,eax
  42b550:	(bad)  
  42b551:	(bad)  
  42b552:	push   DWORD PTR [ebx-0x5292ffb0]
  42b558:	cmp    edi,0xffffffff
  42b55b:	scas   al,BYTE PTR es:[edi]
  42b55c:	std    
  42b55d:	inc    DWORD PTR [edx-0x337600ba]
  42b563:	add    bl,dl
  42b565:	or     DWORD PTR ds:0xff832b,0x27
  42b56c:	ss add bl,ah
  42b56f:	inc    eax
  42b570:	(bad)  
  42b571:	dec    DWORD PTR [ecx-0x10ffdced]
  42b577:	mov    cl,0xcc
  42b579:	inc    DWORD PTR [eax]
  42b57b:	dec    ebp
  42b57c:	ja     0x42b57e
  42b57e:	cwde   
  42b57f:	mov    eax,ds:0xc7ffffff
  42b584:	push   eax
  42b585:	add    BYTE PTR [ebx+0x2f],bl
  42b588:	add    BYTE PTR [eax],al
  42b58a:	cmp    esp,0x1f
  42b58d:	jmp    FWORD PTR [esi-0x21]
  42b590:	cmp    edi,0xffffffff
  42b593:	pop    ds
  42b594:	pop    esp
  42b595:	(bad)  
  42b596:	sti    
  42b597:	imul   eax,DWORD PTR [eax],0xffffff83
  42b59a:	int3   
  42b59b:	rcr    al,1
  42b59d:	call   FWORD PTR [esi+0xff0037]
  42b5a3:	mov    ?,WORD PTR [ecx-0x1]
  42b5a6:	bound  ax,DWORD PTR [eax]
  42b5a9:	mov    edi,edi
  42b5ab:	mov    cl,BYTE PTR [edi-0x7cb98e77]
  42b5b1:	(bad)  
  42b5b2:	dec    DWORD PTR [ebp+0x54]
  42b5b5:	add    al,bl
  42b5b7:	sbb    edi,edi
  42b5b9:	inc    DWORD PTR [ebx+0x28ff5321]
  42b5bf:	cmp    ecx,DWORD PTR [ecx-0xdb10001]
  42b5c5:	jmp    FWORD PTR [ebx]
  42b5c7:	mov    al,0x0
  42b5c9:	add    BYTE PTR [eax],al
  42b5cb:	xchg   BYTE PTR [esi-0x7ceb327d],ah
  42b5d1:	inc    DWORD PTR [eax]
  42b5d3:	jbe    0x42b5a3
  42b5d5:	add    BYTE PTR [ecx+edi*1+0x0],cl
  42b5d9:	dec    esp
  42b5db:	fidiv  WORD PTR [ebp+0x0]
  42b5de:	imul   ecx,DWORD PTR [ecx-0x1],0x2b5483ff
  42b5e5:	add    BYTE PTR [edx-0x33ff7632],ah
  42b5eb:	in     eax,0xe
  42b5ed:	sub    ecx,0xffffffa9
  42b5f0:	dec    esp
  42b5f2:	mov    DWORD PTR [eax],ecx
  42b5f4:	je     0x42b5f5
  42b5f6:	push   ecx
  42b5f7:	sbb    eax,0x1c00ffcc
  42b5fc:	iret   
  42b5fd:	adc    DWORD PTR [ebx-0x64],0xffffffb6
  42b604:	retf   
  42b605:	add    BYTE PTR ds:0xffcc67,dl
  42b60b:	in     eax,0xd8
  42b60d:	int3   
  42b60e:	mov    WORD PTR [edx+0x18ff00ff],?
  42b614:	jnp    0x42b5e2
  42b616:	ficom  WORD PTR [ebx-0x34]
  42b619:	(bad)  
  42b61a:	call   DWORD PTR [edx-0x4a790009]
  42b620:	add    DWORD PTR [eax],0x0
  42b623:	push   eax
  42b624:	mov    esp,0xff8446cc
  42b629:	add    bh,bh
  42b62b:	(bad)
  42b62f:	arpl   di,di
  42b631:	(bad)  
  42b632:	jmp    DWORD PTR [edi+edx*8]
  42b635:	jmp    FWORD PTR [ecx]
  42b637:	repnz dec esp
  42b63a:	jmp    FWORD PTR [ebp+0x26ff38]
  42b640:	add    BYTE PTR [eax],al
  42b642:	add    BYTE PTR [edx+0x55],ah
  42b645:	add    BYTE PTR [edi],dl
  42b647:	push   edi
  42b648:	(bad)  
  42b649:	inc    DWORD PTR [ebx+0x29ff3e7c]
  42b64f:	aam    0xcc
  42b651:	add    bh,bh
  42b653:	or     DWORD PTR [eax-0x336ad700],ebp
  42b659:	dec    DWORD PTR [ecx+0x7bfffdc8]
  42b65f:	repz cmp edi,0xffffffff
  42b663:	bound  ebx,QWORD PTR ds:0xffa2cdff
  42b669:	mov    DWORD PTR [eax],eax
  42b66b:	repz sub edi,edi
  42b66e:	cld    
  42b66f:	mov    ah,0x0
  42b671:	dec    esp
  42b673:	mov    BYTE PTR [ebx],al
  42b675:	(bad)  
  42b676:	fsub   DWORD PTR [esi+0x44ffff00]
  42b67c:	in     al,0x89
  42b67e:	ja     0x42b6c8
  42b680:	add    BYTE PTR [ebx-0x182001],al
  42b686:	add    BYTE PTR [eax-0x56ffff01],0xb5
  42b68d:	int3   
  42b68e:	mov    ?,WORD PTR [esi-0x34]
  42b691:	(bad)  
  42b692:	dec    DWORD PTR [ecx]
  42b694:	out    dx,al
  42b695:	(bad)  
  42b696:	jg     0x42b67a
  42b698:	add    BYTE PTR [ebx+0x40ebff],al
  42b69e:	ds pusha 
  42b6a0:	add    bh,bh
  42b6a2:	add    ch,bh
  42b6a4:	(bad)  
  42b6a5:	jmp    FWORD PTR [eax]
  42b6a7:	outs   dx,DWORD PTR ds:[esi]
  42b6a8:	add    bh,bh
  42b6aa:	call   FWORD PTR [ebx+0xf]
  42b6ad:	and    DWORD PTR [ebx-0x7c007cbf],0xffffffa3
  42b6b4:	xor    DWORD PTR [eax],eax
  42b6b6:	ret    0xffab
  42b6b9:	(bad)  
  42b6ba:	push   edi
  42b6bc:	pusha  
  42b6bd:	mov    DWORD PTR [esi+0xff8383],eax
  42b6c3:	inc    ebx
  42b6c4:	lds    eax,FWORD PTR [eax]
  42b6c6:	mov    ds:0xffffcc57,al
  42b6cb:	aaa    
  42b6cc:	xchg   esi,eax
  42b6cd:	inc    edx
  42b6cf:	in     al,0x83
  42b6d1:	add    bh,bh
  42b6d3:	pop    eax
  42b6d4:	int3   
  42b6d5:	call   edx
  42b6d7:	mov    ebx,0x3500ffff
  42b6dc:	lahf   
  42b6dd:	xor    DWORD PTR [esp+eax*1+0xacc8389],0xe
  42b6e5:	int3   
  42b6e6:	jns    0x42b6db
  42b6e8:	add    ah,cl
  42b6ea:	jmp    DWORD PTR [ebp-0x3]
  42b6ed:	sbb    ebp,0xffffff94
  42b6f0:	int3   
  42b6f1:	(bad)  
  42b6f2:	jmp    FWORD PTR ds:0xd67ff84
  42b6f8:	add    BYTE PTR [eax],al
  42b6fa:	add    BYTE PTR [esi+0x68],bh
  42b6fd:	dec    edx
  42b6ff:	xchg   ebx,eax
  42b700:	mov    edi,edi
  42b702:	mov    DWORD PTR [esi+0x3d5aff17],esi
  42b708:	add    bh,bh
  42b70a:	jmp    DWORD PTR [edi-0x30]
  42b70d:	(bad)  
  42b70e:	jmp    0x8442b6c9
  42b713:	outs   dx,DWORD PTR ds:[esi]
  42b714:	stc    
  42b715:	or     DWORD PTR [ebx],0xffffffe6
  42b718:	(bad)  
  42b719:	inc    DWORD PTR [ebx-0x6fff0c5a]
  42b71f:	inc    esp
  42b720:	(bad)  
  42b721:	(bad)  
  42b722:	(bad)  
  42b723:	jns    0x42b767
  42b725:	(bad)  
  42b726:	sti    
  42b727:	adc    eax,DWORD PTR [eax]
  42b729:	(bad)  
  42b72a:	call   FWORD PTR [ecx]
  42b72c:	in     eax,0x83
  42b72e:	mov    dl,0x6a
  42b730:	mov    DWORD PTR [eax],eax
  42b732:	jmp    DWORD PTR [edi+eiz*1+0xa9fdff]
  42b739:	inc    DWORD PTR [eax]
  42b73b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b73c:	adc    al,0xff
  42b73e:	xchg   ecx,eax
  42b73f:	ret    
  42b740:	(bad)  
  42b741:	inc    DWORD PTR [eax]
  42b743:	test   DWORD PTR [ecx],eax
  42b745:	xor    DWORD PTR [eax-0xe],0xffffffff
  42b749:	inc    DWORD PTR [ebx-0x1d7c6c0e]
  42b74f:	add    BYTE PTR es:[ecx-0x9cdc77],cl
  42b756:	sbb    al,0x5e
  42b758:	dec    DWORD PTR [ecx-0xbed001]
  42b75e:	dec    edx
  42b75f:	pop    ds
  42b760:	add    BYTE PTR [ecx-0x3324c000],cl
  42b766:	jno    0x42b7b2
  42b768:	(bad)  
  42b769:	inc    DWORD PTR [ebx+0x46ff0313]
  42b76f:	into   
  42b770:	add    bh,bh
  42b772:	call   FWORD PTR [edx]
  42b774:	ret    
  42b775:	int3   
  42b776:	pavgb  mm7,mm7
  42b779:	add    ah,cl
  42b77b:	fdivr  DWORD PTR [ecx-0x9c0477]
  42b781:	inc    DWORD PTR [eax]
  42b783:	stos   DWORD PTR es:[edi],eax
  42b784:	cwde   
  42b785:	add    ah,dl
  42b787:	(bad)  
  42b788:	int3   
  42b789:	add    bh,bh
  42b78b:	test   DWORD PTR [ecx+ecx*4-0x73],0xcc00ffd1
  42b793:	mov    ebx,0xeec200e6
  42b798:	int3   
  42b799:	add    BYTE PTR [ecx+0x5b004724],cl
  42b79f:	xchg   edi,eax
  42b7a0:	add    BYTE PTR [eax],al
  42b7a2:	(bad)  
  42b7a3:	fiadd  WORD PTR [eax]
  42b7a5:	sub    DWORD PTR [ecx],0xffffff98
  42b7a8:	inc    DWORD PTR [eax]
  42b7aa:	add    bh,dl
  42b7ac:	push   0xffed0900
  42b7b1:	int3   
  42b7b2:	call   FWORD PTR [ecx-0x31010000]
  42b7b8:	add    DWORD PTR [ebx-0xebc901],0x2c
  42b7bf:	xor    al,0xff
  42b7c1:	add    DWORD PTR [ebx-0x3800c9da],0xffffff90
  42b7c8:	mov    edi,edi
  42b7ca:	mov    DWORD PTR [edx],ecx
  42b7cc:	loop   0x42b7cd
  42b7ce:	and    esi,DWORD PTR [eax+0x0]
  42b7d1:	add    BYTE PTR [ebx-0x2fff3c59],al
  42b7d7:	fld    DWORD PTR [eax]
  42b7d9:	add    DWORD PTR [eax],0x42
  42b7dc:	dec    edi
  42b7dd:	or     DWORD PTR [esi],0x1
  42b7e0:	inc    DWORD PTR [eax]
  42b7e2:	call   DWORD PTR [ebp-0x459d001d]
  42b7e8:	add    ah,cl
  42b7ea:	dec    DWORD PTR [esi-0x2c590080]
  42b7f0:	(bad)  
  42b7f1:	inc    DWORD PTR [eax]
  42b7f3:	outs   dx,BYTE PTR ds:[esi]
  42b7f4:	dec    eax
  42b7f5:	inc    DWORD PTR [ebx]
  42b7f7:	pop    esi
  42b7f8:	add    bh,bh
  42b7fa:	int3   
  42b7fb:	inc    ebp
  42b7fc:	add    al,0xff
  42b7fe:	xor    DWORD PTR [esi-0x34],edi
  42b801:	add    bh,bh
  42b803:	mov    esp,ecx
  42b805:	add    BYTE PTR ds:0xff00ff4e,dh
  42b80b:	shl    bl,1
  42b80d:	add    BYTE PTR ds:0xccffff2d,bh
  42b813:	addr16 push ds
  42b815:	add    BYTE PTR [edx+edi*1-0x4a007634],dh
  42b81c:	mov    esi,0xb96ff
  42b821:	(bad)  
  42b822:	dec    DWORD PTR [ebx]
  42b824:	add    al,0xff
  42b826:	punpckhwd mm0,QWORD PTR [ebx-0x3c6d7c01]
  42b82d:	(bad)  
  42b82e:	mov    eax,0x8300cc
  42b833:	xchg   ebx,eax
  42b834:	jno    0x42b836
  42b836:	(bad)  
  42b837:	jmp    0x48c68508
  42b83c:	adc    eax,0x89259583
  42b841:	add    bh,bh
  42b843:	adc    eax,DWORD PTR [eax+0x0]
  42b846:	aad    0x10
  42b848:	(bad)  
  42b849:	(bad)  
  42b84a:	call   FWORD PTR [esi-0x23543301]
  42b850:	add    bh,bh
  42b852:	inc    edx
  42b854:	lahf   
  42b855:	dec    DWORD PTR [eax]
  42b857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b858:	(bad)  
  42b859:	inc    DWORD PTR [eax]
  42b85b:	into   
  42b85c:	ret    
  42b85d:	inc    DWORD PTR [eax]
  42b85f:	lods   eax,DWORD PTR ds:[esi]
  42b860:	(bad)  
  42b861:	(bad)  
  42b862:	(bad)  
  42b863:	aas    
  42b864:	(bad)  
  42b865:	add    BYTE PTR [ebx],ch
  42b867:	dec    esi
  42b868:	(bad)  
  42b869:	inc    DWORD PTR [eax]
  42b86b:	jnp    0x42b88a
  42b86d:	call   FWORD PTR [ebx]
  42b86f:	test   al,0x83
  42b871:	dec    esp
  42b873:	pusha  
  42b874:	sub    DWORD PTR [eax],eax
  42b876:	call   0x42b851
  42b87b:	imul   edi,DWORD PTR [ebx-0x7d],0xffffff85
  42b87f:	in     al,0x83
  42b881:	add    bh,bh
  42b883:	cli    
  42b884:	in     al,0xff
  42b886:	adc    BYTE PTR [edx+0x5183ff00],0x48
  42b88d:	cmp    DWORD PTR [edi-0x34],0xffffffff
  42b891:	int3   
  42b892:	int3   
  42b893:	sub    eax,0x5e298399
  42b898:	int3   
  42b899:	dec    esp
  42b89b:	sbb    edi,DWORD PTR [eax-0x7677a601]
  42b8a1:	inc    DWORD PTR [ebx-0x727c922f]
  42b8a7:	mov    edi,0x44ffff00
  42b8ac:	inc    DWORD PTR [eax]
  42b8ae:	mov    es,edi
  42b8b0:	(bad)  
  42b8b1:	dec    esp
  42b8b3:	mov    ebp,0x5c4c0055
  42b8b8:	add    BYTE PTR [ebx+0xeb1700],al
  42b8be:	mov    ah,0xf
  42b8c0:	mov    edi,edi
  42b8c2:	mov    DWORD PTR [esi-0x7],ebp
  42b8c5:	jmp    DWORD PTR [eax]
  42b8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8c8:	inc    DWORD PTR [eax]
  42b8ca:	push   eax
  42b8cc:	stos   BYTE PTR es:[edi],al
  42b8cd:	sub    DWORD PTR [edx-0xff0038],0xffffffdf
  42b8d4:	jne    0x42b8d5
  42b8d6:	subps  xmm0,XMMWORD PTR [eax]
  42b8d9:	(bad)  
  42b8da:	jmp    FWORD PTR [edx+eax*4+0x960100]
  42b8e1:	inc    DWORD PTR [ebx+0x53ff42bd]
  42b8e7:	inc    DWORD PTR gs:[eax]
  42b8ea:	call   FWORD PTR [edx]
  42b8ec:	mov    dh,0xff
  42b8ee:	jae    0x42b91d
  42b8f0:	dec    DWORD PTR [ecx-0x33a0be7d]
  42b8f6:	mov    esp,0xff0000e3
  42b8fb:	jnp    0x42b89c
  42b8fd:	dec    ebp
  42b8ff:	push   ss
  42b900:	inc    DWORD PTR [eax]
  42b902:	mov    edi,ebx
  42b904:	mov    BYTE PTR [ebx+0x893ff2],0xff
  42b90b:	jo     0x42b95d
  42b90d:	add    BYTE PTR [eax-0x3a],cl
  42b910:	int3   
  42b911:	cmp    edi,0x6d
  42b914:	(bad)  
  42b915:	int3   
  42b916:	scas   al,BYTE PTR es:[edi]
  42b917:	pushf  
  42b918:	mov    DWORD PTR [eax],eax
  42b91a:	dec    DWORD PTR [edx+0x4965ff15]
  42b920:	(bad)  
  42b921:	(bad)  
  42b922:	call   FWORD PTR [edx+0x11]
  42b925:	add    dh,ah
  42b927:	mov    cl,0xff
  42b929:	add    DWORD PTR [eax],0x31
  42b92c:	in     eax,dx
  42b92d:	xor    DWORD PTR [ecx+0x71],0xffffffff
  42b931:	add    BYTE PTR [eax],al
  42b933:	test   al,dh
  42b935:	add    BYTE PTR [ebx+0xffffab],ch
  42b93b:	mov    edx,0x158e00ff
  42b940:	inc    DWORD PTR [ebx+0x60d3cc]
  42b946:	js     0x42b96c
  42b948:	(bad)  
  42b949:	dec    esp
  42b94b:	sub    DWORD PTR gs:[eax],eax
  42b94e:	sbb    DWORD PTR [edx-0x1],edi
  42b951:	inc    DWORD PTR [eax]
  42b953:	pop    ss
  42b954:	or     edi,edi
  42b956:	mov    ds:0x83ccce,eax
  42b95b:	pushf  
  42b95c:	xor    edi,edi
  42b95e:	js     0x42b9c2
  42b960:	inc    DWORD PTR [ebx-0xc99101]
  42b966:	dec    ebp
  42b967:	mov    ds:0x3ffffff,al
  42b96c:	or     al,BYTE PTR [eax]
  42b96e:	and    eax,0x83fffff5
  42b973:	mov    bl,0x76
  42b975:	dec    DWORD PTR [ebp+0xd]
  42b978:	(bad)  
  42b979:	inc    DWORD PTR [eax]
  42b97b:	test   BYTE PTR ds:0xffb30383,cl
  42b981:	add    BYTE PTR [eax],al
  42b983:	out    dx,eax
  42b984:	sbb    eax,0x8310f6ff
  42b989:	add    BYTE PTR [eax],al
  42b98b:	push   ecx
  42b98c:	(bad)  
  42b98e:	mov    DWORD PTR [esi+0x1dccff89],0xc5630031
  42b998:	add    DWORD PTR [ebx-0x33dd3201],0x67
  42b99f:	std    
  42b9a0:	add    bh,bh
  42b9a2:	push   DWORD PTR [ecx]
  42b9a4:	jmp    0xcc7773a9
  42b9a9:	cmp    edi,0x34
  42b9ac:	jb     0x42b931
  42b9ae:	sti    
  42b9af:	xor    edi,edi
  42b9b1:	mov    DWORD PTR [eax],eax
  42b9b3:	fbld   TBYTE PTR [ecx-0x444600]
  42b9b9:	add    BYTE PTR [ecx+0x5cff8f1b],cl
  42b9bf:	ins    DWORD PTR es:[edi],dx
  42b9c0:	inc    DWORD PTR [eax]
  42b9c2:	add    ch,dl
  42b9c4:	daa    
  42b9c5:	cmp    DWORD PTR [ebp+0x8],0xffffffff
  42b9c9:	add    BYTE PTR [eax],al
  42b9cb:	push   0x9
  42b9cd:	jmp    DWORD PTR [edx]
  42b9cf:	sbb    BYTE PTR [eax],al
  42b9d1:	add    bh,bh
  42b9d3:	les    eax,FWORD PTR ds:0xffd20a83
  42b9d9:	add    DWORD PTR [eax],0x28
  42b9dc:	fild   WORD PTR [eax]
  42b9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9df:	push   eax
  42b9e0:	add    BYTE PTR [eax],al
  42b9e2:	cmp    edi,0xffffffa3
  42b9e5:	(bad)  
  42b9e6:	jmp    0x42b9cb
  42b9e8:	int3   
  42b9e9:	inc    DWORD PTR [ebx+0x5083b893]
  42b9ef:	xchg   edi,eax
  42b9f0:	(bad)  
  42b9f1:	inc    DWORD PTR [eax]
  42b9f3:	mov    esp,0x74a0004a
  42b9f8:	add    bh,bh
  42b9fa:	sub    DWORD PTR [ebp+0x79b008e],0xffffffff
  42ba01:	add    BYTE PTR [eax],al
  42ba03:	jns    0x42ba7b
  42ba05:	int3   
  42ba06:	mov    ebp,0xffcc00a5
  42ba0b:	pop    es
  42ba0c:	loopne 0x42ba0d
  42ba0e:	les    eax,FWORD PTR ds:0x92ff00ff
  42ba14:	jns    0x42ba15
  42ba16:	addr16 popa 
  42ba18:	(bad)  
  42ba19:	(bad)  
  42ba1a:	dec    esp
  42ba1c:	inc    esi
  42ba1d:	mov    DWORD PTR [edi+0x89ffbb],edx
  42ba23:	aam    0x44
  42ba25:	(bad)  
  42ba26:	in     al,dx
  42ba27:	into   
  42ba28:	add    BYTE PTR [eax],al
  42ba2a:	add    BYTE PTR [ebx],ah
  42ba2c:	mov    bl,0xff
  42ba2e:	outs   dx,DWORD PTR ds:[si]
  42ba30:	add    BYTE PTR [eax],al
  42ba32:	(bad)  
  42ba33:	mov    ebx,0x61ac00a3
  42ba38:	add    DWORD PTR [ebx-0x425001],0x15
  42ba3f:	xchg   edi,edi
  42ba41:	mov    DWORD PTR [eax],eax
  42ba43:	push   esi
  42ba44:	jnp    0x42ba46
  42ba46:	outs   dx,BYTE PTR ds:[esi]
  42ba47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba48:	add    bh,bh
  42ba4a:	inc    DWORD PTR [esi+0x4118ff3d]
  42ba50:	inc    DWORD PTR [eax]
  42ba52:	push   DWORD PTR [edi-0x5070ff8a]
  42ba58:	inc    DWORD PTR [ebx+0x1df700]
  42ba5e:	inc    ecx
  42ba5f:	xlat   BYTE PTR ds:[ebx]
  42ba60:	add    bh,bh
  42ba62:	xor    DWORD PTR [esi*8-0x33be9b00],0xffffff83
  42ba6a:	int3   
  42ba6b:	lahf   
  42ba6c:	jecxz  0x42ba6e
  42ba6e:	aaa    
  42ba6f:	scas   al,BYTE PTR es:[edi]
  42ba70:	int3   
  42ba71:	add    bh,bh
  42ba73:	fstp   TBYTE PTR [edi]
  42ba75:	inc    edi
  42ba77:	push   0xaeffff00
  42ba7c:	sbb    DWORD PTR [eax],eax
  42ba7e:	xor    BYTE PTR [ebp-0x1d00ff01],ch
  42ba84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba85:	add    BYTE PTR [esi],ah
  42ba87:	pop    ecx
  42ba88:	inc    DWORD PTR [eax]
  42ba8a:	jmp    DWORD PTR [esi+0x4f]
  42ba8d:	dec    DWORD PTR ds:0x89ff0066
  42ba93:	jo     0x42badd
  42ba95:	push   ecx
  42ba97:	outs   dx,BYTE PTR ds:[esi]
  42ba98:	inc    DWORD PTR [eax]
  42ba9a:	add    BYTE PTR [esi+0x4b00ff3a],bl
  42baa0:	dec    esp
  42baa2:	mov    DWORD PTR [ebx-0x7cad0083],ecx
  42baa8:	(bad)  
  42baa9:	(bad)  
  42baaa:	call   edx
  42baac:	mov    ebp,0x83ae3e83
  42bab1:	mov    esp,ecx
  42bab3:	jge    0x42ba37
  42bab5:	inc    ecx
  42bab7:	push   0x1e00ffcc
  42babc:	mov    ebx,0x8453cc
  42bac1:	inc    DWORD PTR [eax]
  42bac3:	xor    ecx,DWORD PTR [edi+edi*8]
  42bac6:	sub    DWORD PTR [ebx+eax*4],ebp
  42bac9:	add    BYTE PTR [ebx+0x35ff56b0],al
  42bacf:	push   cs
  42bad0:	add    BYTE PTR [ebx-0x85c600],al
  42bad6:	nop
  42bad7:	push   ds
  42bad8:	int3   
  42bad9:	cmp    edi,0x48
  42badc:	aaa    
  42badd:	inc    esi
  42badf:	add    BYTE PTR [ebx+0x470b00ff],0xff
  42bae6:	test   ebp,edi
  42bae8:	inc    DWORD PTR [ebx-0xa18000]
  42baee:	cs fcos 
  42baf1:	add    ah,cl
  42baf3:	sub    DWORD PTR ds:0xffc7e300,esp
  42baf9:	add    bh,bh
  42bafb:	inc    esp
  42bafc:	mov    dh,0xff
  42bafe:	aaa    
  42baff:	and    eax,DWORD PTR [eax]
  42bb01:	(bad)  
  42bb02:	call   DWORD PTR [esi-0x5c]
  42bb05:	jmp    FWORD PTR [edi+0xfffa]
  42bb0b:	lds    ebp,FWORD PTR [edx+0xd991ff]
  42bb11:	add    DWORD PTR [ebx-0x417c1502],0x56
  42bb18:	mov    DWORD PTR [eax],eax
  42bb1a:	mov    DWORD PTR [esi-0x1d],ebp
  42bb1d:	or     DWORD PTR [ebp+0xccff90],0x36
  42bb24:	call   0xffff:0xd2f400
  42bb2b:	cs loop 0x42bafa
  42bb2e:	jne    0x42bab2
  42bb30:	add    BYTE PTR [eax],al
  42bb32:	dec    DWORD PTR [eax+0x167083c3]
  42bb38:	int3   
  42bb39:	mov    DWORD PTR [eax],eax
  42bb3b:	and    al,0x52
  42bb3d:	add    BYTE PTR [esi-0x337cff4a],bh
  42bb43:	lahf   
  42bb44:	adc    DWORD PTR [eax],eax
  42bb46:	push   ss
  42bb47:	loop   0x42bb48
  42bb49:	add    bh,bh
  42bb4b:	in     al,dx
  42bb4c:	stos   DWORD PTR es:[edi],eax
  42bb4d:	dec    DWORD PTR [ebx]
  42bb4f:	mov    bl,0x0
  42bb51:	(bad)  
  42bb52:	call   DWORD PTR [ecx-0x5]
  42bb55:	add    BYTE PTR [eax-0xb1],cl
  42bb5b:	inc    edi
  42bb5c:	add    edi,edi
  42bb5e:	adc    BYTE PTR [ebx+0x23ff89ff],cl
  42bb64:	adc    bh,bh
  42bb66:	xchg   ebp,eax
  42bb67:	mov    dl,0xff
  42bb69:	add    ah,cl
  42bb6b:	mov    dh,0xa
  42bb6d:	jmp    esp
  42bb6f:	sahf   
  42bb70:	int3   
  42bb71:	(bad)  
  42bb72:	call   FWORD PTR [edi+0x59]
  42bb75:	add    BYTE PTR [esi],dh
  42bb77:	gs add bh,bh
  42bb7a:	adc    DWORD PTR [edi],0xffffffbb
  42bb7d:	xor    DWORD PTR [esi+0x35],0x0
  42bb81:	add    DWORD PTR [eax],0xffffffd8
  42bb84:	stc    
  42bb85:	add    BYTE PTR [edi+edi*8+0x1fffffff],bh
  42bb8c:	ja     0x42bb11
  42bb8e:	loopne 0x42bbf5
  42bb90:	add    BYTE PTR [eax],al
  42bb92:	add    BYTE PTR [edx-0x2ab23333],dl
  42bb98:	add    bh,bh
  42bb9a:	jmp    esp
  42bb9c:	cmp    ecx,DWORD PTR [ecx-0x7c3320af]
  42bba2:	add    al,bl
  42bba4:	xchg   edi,eax
  42bba5:	inc    DWORD PTR [ebx+0x838301]
  42bbab:	mov    dh,0x7c
  42bbad:	add    BYTE PTR [ebx],bh
  42bbaf:	add    DWORD PTR [eax],0xaa96ccff
  42bbb5:	and    DWORD PTR [eax+0x6c],0xffffffff
  42bbb9:	(bad)  
  42bbba:	jmp    FWORD PTR ds:0xc7c1ff90
  42bbc0:	(bad)  
  42bbc1:	(bad)  
  42bbc2:	jmp    DWORD PTR [ecx-0x5f]
  42bbc5:	(bad)  
  42bbc6:	cmp    edi,ecx
  42bbc8:	mov    edi,edi
  42bbca:	add    BYTE PTR ds:0xb522fff6,ch
  42bbd0:	(bad)  
  42bbd1:	(bad)  
  42bbd2:	dec    ecx
  42bbd4:	hlt    
  42bbd5:	xor    edx,0x4a
  42bbd8:	mov    DWORD PTR [ecx-0xc34300],ecx
  42bbde:	xchg   esp,eax
  42bbdf:	hlt    
  42bbe0:	cmp    edi,0x0
  42bbe3:	and    eax,0xfb708989
  42bbe8:	add    bh,bh
  42bbea:	inc    ebx
  42bbec:	jbe    0x42bbed
  42bbee:	arpl   WORD PTR [eax-0x1],di
  42bbf1:	add    bh,bh
  42bbf3:	lods   eax,DWORD PTR ds:[esi]
  42bbf4:	pop    es
  42bbf5:	int3   
  42bbf6:	push   0x83ffee
  42bbfb:	add    esp,DWORD PTR [edx-0x1]
  42bbfe:	jmp    0xa2ff:0x838383b0
  42bc05:	(bad)  
  42bc06:	mov    ecx,0xffffff80
  42bc0b:	xchg   edi,edi
  42bc0d:	dec    DWORD PTR [esp+ebx*4]
  42bc10:	add    BYTE PTR [ecx-0xa07b34],cl
  42bc16:	aam    0x50
  42bc18:	(bad)  
  42bc19:	inc    DWORD PTR [ebx+0x7f001b9e]
  42bc1f:	aas    
  42bc20:	add    BYTE PTR [eax],al
  42bc22:	add    BYTE PTR [edi],bh
  42bc24:	leave  
  42bc25:	sub    DWORD PTR [ecx-0x36],0xffffff83
  42bc29:	add    BYTE PTR [eax],al
  42bc2b:	adc    ebx,eax
  42bc2d:	jmp    FWORD PTR [eax]
  42bc2f:	mov    esp,0xeffffff
  42bc34:	loope  0x42bc36
  42bc36:	jns    0x42bc78
  42bc38:	inc    DWORD PTR [eax]
  42bc3a:	sub    DWORD PTR [ecx+0x4f],0xffffffff
  42bc3e:	adc    eax,eax
  42bc40:	(bad)  
  42bc41:	(bad)  
  42bc42:	jmp    FWORD PTR [edx]
  42bc44:	cli    
  42bc45:	int3   
  42bc46:	and    DWORD PTR ds:0xb300ff00,esi
  42bc4c:	inc    DWORD PTR [eax]
  42bc4e:	icebp  
  42bc4f:	stc    
  42bc50:	mov    DWORD PTR [ebx-0xbe5600],eax
  42bc56:	mov    ss,WORD PTR ds:0xb3ffccff
  42bc5c:	push   ds
  42bc5d:	add    BYTE PTR ds:0xff00ff28,ah
  42bc63:	rol    BYTE PTR [eax+eax*1+0x7a],cl
  42bc67:	rol    DWORD PTR [ebx+0x367400ff],0xff
  42bc6e:	cmp    BYTE PTR [edx],bh
  42bc70:	mov    edi,edi
  42bc72:	jmp    DWORD PTR [edi-0x4a5200bd]
  42bc78:	cmp    edi,0xffffffff
  42bc7b:	aad    0x42
  42bc7d:	inc    ecx
  42bc7f:	sar    edi,1
  42bc81:	add    bh,bh
  42bc83:	sub    dh,0x83
  42bc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc87:	and    eax,DWORD PTR [eax]
  42bc89:	(bad)  
  42bc8a:	(bad)  
  42bc8b:	mov    edx,0x38ca899c
  42bc90:	inc    DWORD PTR [ebx-0x7c9c6b34]
  42bc96:	jmp    0x42bcb2
  42bc98:	(bad)  
  42bc99:	(bad)  
  42bc9a:	push   DWORD PTR ds:0xcd04fff1
  42bca0:	inc    DWORD PTR [eax]
  42bca2:	dec    DWORD PTR [ecx+0x58]
  42bca5:	inc    esp
  42bca7:	popa   
  42bca8:	inc    DWORD PTR [eax]
  42bcaa:	int3   
  42bcab:	jmp    0x45b9bc94
  42bcb0:	(bad)  
  42bcb1:	(bad)  
  42bcb2:	push   ebp
  42bcb4:	push   ecx
  42bcb5:	(bad)  
  42bcb6:	(bad)  
  42bcb8:	or     DWORD PTR [ecx-0x7c35077d],0x27
  42bcbf:	call   0x8945:0x4aff0083
  42bcc6:	jg     0x42bced
  42bcc8:	inc    DWORD PTR [eax]
  42bcca:	mov    DWORD PTR [ebp+0xc],esp
  42bccd:	or     esi,0x52
  42bcd0:	int3   
  42bcd1:	add    BYTE PTR [ebx-0x34001774],al
  42bcd7:	mov    edi,0xadffffff
  42bcdc:	lea    ecx,[ecx-0x76ff8bc8]
  42bce2:	int3   
  42bce3:	out    dx,eax
  42bce4:	dec    DWORD PTR fs:[esi+0xff830b]
  42bceb:	or     eax,0x1d22003f
  42bcf0:	add    bh,bh
  42bcf2:	add    ch,ah
  42bcf4:	(bad)  
  42bcf5:	push   DWORD PTR [edi]
  42bcf7:	xor    eax,0xf00ccff
  42bcfc:	push   edx
  42bcfd:	add    dh,dl
  42bcff:	int    0x0
  42bd01:	inc    DWORD PTR [eax]
  42bd03:	fld    QWORD PTR [ecx+0xae4ff]
  42bd09:	add    DWORD PTR [ebx+0x2fcc0acc],0xb
  42bd10:	or     esp,0xffffff83
  42bd13:	lods   al,BYTE PTR ds:[esi]
  42bd14:	jno    0x42bd16
  42bd16:	bound  ebx,QWORD PTR [edx]
  42bd18:	int3   
  42bd19:	add    DWORD PTR [eax],0xffffffa3
  42bd1c:	xor    eax,0xfff10aff
  42bd21:	add    BYTE PTR [eax],al
  42bd23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd24:	cmp    al,0xff
  42bd26:	cli    
  42bd27:	out    0x83,al
  42bd29:	cmp    edi,0xffffffd2
  42bd2c:	jno    0x42bd2e
  42bd2e:	lods   al,BYTE PTR ds:[esi]
  42bd2f:	pop    ebp
  42bd30:	(bad)  
  42bd31:	(bad)  
  42bd32:	jmp    FWORD PTR [edx+ecx*8+0xe97b00]
  42bd39:	(bad)  
  42bd3a:	jmp    FWORD PTR [edx]
  42bd3c:	push   ebx
  42bd3d:	mov    DWORD PTR [edx-0x7c7c0c],ebp
  42bd43:	fisttp WORD PTR [esi-0x1]
  42bd46:	pop    ecx
  42bd47:	stos   DWORD PTR es:[edi],eax
  42bd48:	(bad)  
  42bd49:	(bad)  
  42bd4a:	push   DWORD PTR [edi+0x98d00dc]
  42bd50:	add    BYTE PTR [eax],al
  42bd52:	mov    esi,esp
  42bd54:	bnd call DWORD PTR [ebp+0x1d]
  42bd58:	(bad)  
  42bd59:	inc    DWORD PTR [eax]
  42bd5b:	fsub   QWORD PTR [edi]
  42bd5d:	cmp    DWORD PTR [edx+0x836b],0x57
  42bd64:	inc    ebp
  42bd65:	dec    DWORD PTR [edi-0x76ff0030]
  42bd6b:	retf   0xff23
  42bd6e:	test   eax,0xffffff94
  42bd73:	loop   0x42bd79
  42bd75:	dec    DWORD PTR ds:0xcc83cca0
  42bd7b:	test   DWORD PTR [edi+edi*8-0x69],edi
  42bd7f:	mov    bh,0x83
  42bd81:	inc    DWORD PTR [eax]
  42bd83:	cdq    
  42bd84:	fdiv   st(7),st
  42bd86:	xchg   edx,eax
  42bd87:	mov    esp,0x9a00cc00
  42bd8c:	repz add BYTE PTR [edi],bl
  42bd8f:	std    
  42bd90:	dec    esp
  42bd92:	int3   
  42bd93:	mov    dl,0xd2
  42bd95:	add    DWORD PTR [ecx-0xff69],0xffffff9a
  42bd9c:	ss int3 
  42bd9e:	fiadd  WORD PTR [ecx]
  42bda0:	add    bh,bh
  42bda2:	(bad)  
  42bda3:	js     0x42bde8
  42bda5:	call   DWORD PTR [ecx-0xff7c54]
  42bdab:	add    DWORD PTR [edi+edi*8+0xd045],edi
  42bdb2:	call   FWORD PTR [ebp+edx*2-0x1]
  42bdb6:	xlat   BYTE PTR ds:[ebx]
  42bdb7:	sbb    eax,0xbaff8300
  42bdbc:	aam    0xff
  42bdbe:	add    ch,ch
  42bdc0:	int3   
  42bdc1:	add    BYTE PTR [eax],al
  42bdc3:	dec    eax
  42bdc4:	mov    ah,0x0
  42bdc6:	pop    es
  42bdc7:	ds int3 
  42bdc9:	(bad)  
  42bdca:	dec    DWORD PTR [eax]
  42bdcc:	fwait
  42bdcd:	xor    DWORD PTR [eax-0xff75],0x16
  42bdd4:	lahf   
  42bdd5:	or     DWORD PTR [edx+0xffff28],0x65
  42bddc:	idiv   edi
  42bdde:	xchg   ebp,eax
  42bddf:	in     eax,0xff
  42bde1:	add    DWORD PTR [eax],0x60
  42bde4:	mov    ecx,0xff626b00
  42bde9:	inc    DWORD PTR [eax]
  42bdeb:	mov    DWORD PTR ds:0x89e3f189,esp
  42bdf1:	add    DWORD PTR [eax],0x3f
  42bdf4:	mov    eax,DWORD PTR [ebx-0x7c7c8680]
  42bdfa:	call   DWORD PTR [ecx-0x51140027]
  42be00:	add    bh,bh
  42be02:	cmp    DWORD PTR [ecx],0xffffffdc
  42be05:	sbb    esi,0xffffffbe
  42be08:	add    BYTE PTR [ebx-0x7cfbc701],al
  42be0e:	scas   eax,DWORD PTR es:[edi]
  42be0f:	sub    bh,bh
  42be11:	add    bh,bh
  42be13:	pop    edx
  42be14:	and    edi,edi
  42be16:	dec    ebp
  42be17:	pop    ds
  42be18:	inc    DWORD PTR [ebx+0xfca300]
  42be1e:	ret    0xff1b
  42be21:	cmp    edi,0xffffffb5
  42be24:	rol    DWORD PTR [eax],cl
  42be26:	dec    edi
  42be27:	pop    ds
  42be28:	(bad)  
  42be29:	inc    DWORD PTR [eax]
  42be2b:	(bad)  
  42be2c:	push   ecx
  42be2d:	jmp    DWORD PTR [eax+0xffffb3]
  42be33:	fwait
  42be34:	mov    eax,ds:0xff18e6cc
  42be39:	dec    esp
  42be3b:	out    dx,al
  42be3c:	test   BYTE PTR [ebx-0x76ff20cf],al
  42be42:	(bad)  
  42be43:	mov    ebx,0xe36fccd2
  42be48:	int3   
  42be49:	add    bh,bh
  42be4b:	pop    es
  42be4c:	xor    BYTE PTR [eax],al
  42be4e:	cdq    
  42be4f:	add    eax,0xf2ffffff
  42be54:	(bad)  
  42be55:	call   DWORD PTR [edi]
  42be57:	cmp    al,0xcc
  42be59:	add    DWORD PTR [eax],0xffffffec
  42be5c:	or     DWORD PTR gs:[edi+0xff83f2],0xffffff8d
  42be64:	(bad)  
  42be65:	inc    ecx
  42be67:	sbb    ecx,esp
  42be69:	inc    DWORD PTR [ebx+0x57ff78ea]
  42be6f:	or     al,0xff
  42be71:	int3   
  42be72:	int3   
  42be73:	add    BYTE PTR [eax+0xd99f89],dl
  42be79:	or     esp,0x4f
  42be7c:	mov    bl,0x89
  42be7e:	add    bl,al
  42be80:	add    bh,bh
  42be82:	and    ebx,0x40
  42be85:	int3   
  42be86:	lods   al,BYTE PTR ds:[esi]
  42be87:	jbe    0x42be0c
  42be89:	add    BYTE PTR [ebx-0x5700e814],al
  42be8f:	cmp    eax,0x94000000
  42be94:	add    bh,bh
  42be96:	sbb    bh,BYTE PTR [edx-0x65333400]
  42be9c:	adc    al,0x83
  42be9e:	xlat   BYTE PTR ds:[ebx]
  42be9f:	call   0x8310:0xacff8389
  42bea6:	shl    BYTE PTR [ebp+0x4e8300ff],1
  42beac:	cmp    al,BYTE PTR [eax]
  42beae:	mov    edi,0xfff5
  42beb3:	or     al,0x95
  42beb5:	dec    DWORD PTR [edx]
  42beb7:	pusha  
  42beb8:	cmp    edi,0xffffff83
  42bebb:	imul   edi
  42bebd:	push   DWORD PTR [edx-0x35]
  42bec0:	inc    DWORD PTR [eax]
  42bec2:	add    BYTE PTR [ebp-0x4bfbffa7],bl
  42bec8:	(bad)  
  42bec9:	inc    DWORD PTR [eax]
  42becb:	call   0x8fc4becb
  42bed0:	mov    edi,edi
  42bed2:	jmp    FWORD PTR [eax]
  42bed4:	push   ss
  42bed5:	add    bh,ch
  42bed7:	push   es
  42bed8:	dec    DWORD PTR [ecx-0x7c1b4900]
  42bede:	xchg   ecx,eax
  42bedf:	in     eax,dx
  42bee0:	add    ah,cl
  42bee2:	add    cl,bh
  42bee4:	adc    al,0x0
  42bee6:	lods   eax,DWORD PTR ds:[esi]
  42bee7:	cmp    al,BYTE PTR [eax]
  42bee9:	inc    DWORD PTR [ebx+0x11ffaf4a]
  42beef:	ja     0x42be74
  42bef1:	add    bh,bh
  42bef3:	mov    esp,0x2f1bcc5c
  42bef8:	add    bh,bh
  42befa:	int3   
  42befb:	(bad)  
  42befd:	call   DWORD PTR [ebx+eiz*4-0x1]
  42bf01:	(bad)  
  42bf02:	inc    DWORD PTR [eax+0x594b0023]
  42bf08:	add    bh,bh
  42bf0a:	add    BYTE PTR [edx],al
  42bf0c:	cmp    BYTE PTR [ebx-0xffd5fc],al
  42bf12:	add    BYTE PTR [ecx-0x449e00be],bh
  42bf18:	mov    edi,edi
  42bf1a:	or     DWORD PTR [ebp-0x20e1009c],0xffffffff
  42bf21:	(bad)  
  42bf22:	call   FWORD PTR ds:0x5627ff47
  42bf28:	(bad)  
  42bf29:	(bad)  
  42bf2a:	inc    DWORD PTR [edi-0x24]
  42bf2d:	call   FWORD PTR [edx-0x6c]
  42bf30:	int3   
  42bf31:	add    bh,bh
  42bf33:	cmp    al,0x5b
  42bf35:	inc    DWORD PTR [edi+0xfffb]
  42bf3b:	pop    edi
  42bf3c:	scas   al,BYTE PTR es:[edi]
  42bf3d:	int3   
  42bf3e:	mov    esp,0xcc53
  42bf43:	data16 loop 0x42bf45
  42bf46:	mov    al,0xc8
  42bf48:	inc    DWORD PTR [eax]
  42bf4a:	mov    DWORD PTR ds:0x4ceb8376,esi
  42bf50:	(bad)  
  42bf51:	inc    DWORD PTR [eax]
  42bf53:	clc    
  42bf54:	out    0xcc,eax
  42bf56:	xchg   edx,eax
  42bf57:	aad    0x0
  42bf59:	mov    DWORD PTR [eax],eax
  42bf5b:	xor    eax,esp
  42bf5d:	mov    DWORD PTR [edx],edx
  42bf5f:	lods   al,BYTE PTR ds:[esi]
  42bf60:	inc    DWORD PTR [eax]
  42bf62:	call   DWORD PTR [eax+0x3a88397]
  42bf68:	add    BYTE PTR [eax],al
  42bf6a:	and    DWORD PTR ds:0xd9b7ffa8,0x0
  42bf71:	add    bh,bh
  42bf73:	jge    0x42bfaf
  42bf75:	inc    eax
  42bf77:	(bad)  
  42bf79:	inc    DWORD PTR [eax]
  42bf7b:	dec    ebp
  42bf7c:	in     eax,0x83
  42bf7e:	pushf  
  42bf7f:	cmp    eax,0xf400ffff
  42bf84:	rol    BYTE PTR [ebx-0x7cff1c41],1
  42bf8a:	xor    esp,0x71
  42bf8d:	(bad)  
  42bf8e:	call   0x8442bf06
  42bf93:	cmp    BYTE PTR [ebp+0x0],cl
  42bf96:	(bad)  
  42bf97:	sar    bh,cl
  42bf99:	(bad)  
  42bf9a:	(bad)  
  42bf9b:	std    
  42bf9c:	outs   dx,DWORD PTR ds:[esi]
  42bf9d:	add    BYTE PTR [ebp+0x8383c4],bl
  42bfa3:	xchg   ecx,eax
  42bfa4:	xchg   ebp,eax
  42bfa5:	inc    DWORD PTR [esi-0x7c0038]
  42bfab:	mov    esp,0xdf3009a
  42bfb0:	(bad)  
  42bfb1:	inc    DWORD PTR [eax]
  42bfb3:	push   ebx
  42bfb4:	pushf  
  42bfb5:	push   DWORD PTR [edx+0x37]
  42bfb8:	inc    DWORD PTR [eax]
  42bfba:	mov    DWORD PTR [edi],edi
  42bfbc:	sar    edi,1
  42bfbe:	punpckhdq mm0,QWORD PTR [ebx-0x6efeff01]
  42bfc5:	(bad)  
  42bfc6:	fstp   DWORD PTR [ecx]
  42bfc8:	int3   
  42bfc9:	add    bh,bh
  42bfcb:	cli    
  42bfcc:	adc    edi,edi
  42bfce:	add    al,bl
  42bfd0:	(bad)  
  42bfd1:	dec    esp
  42bfd3:	add    DWORD PTR [ebp+0x26400],ecx
  42bfd9:	(bad)  
  42bfda:	push   esp
  42bfdc:	pop    esi
  42bfdd:	jmp    DWORD PTR [edi+eax*1-0x7d]
  42bfe1:	(bad)  
  42bfe2:	dec    DWORD PTR [ebp+0x1ee4ffaa]
  42bfe8:	add    bh,bh
  42bfea:	xor    DWORD PTR [eax-0x5e75ff66],0x0
  42bff1:	mov    DWORD PTR [ebx+0x42ff8d02],eax
  42bff7:	cmp    eax,0x84ff00ff
  42bffc:	hlt    
  42bffd:	(bad)  
  42bffe:	sti    
  42bfff:	data16 add bh,bh
  42c002:	or     ebp,0xffffff8c
  42c005:	(bad)  
  42c006:	cmp    ch,BYTE PTR [ecx-0x1]
  42c009:	dec    esp
  42c00b:	or     DWORD PTR [edi],ebp
  42c00d:	mov    DWORD PTR ds:0xccffcc17,edx
  42c013:	jecxz  0x42bfdd
  42c015:	jmp    DWORD PTR [ecx-0x767cea]
  42c01b:	adc    eax,0x7a71fff4
  42c020:	sub    esp,0x11c
  42c026:	push   esi
  42c027:	push   edi
  42c028:	call   DWORD PTR ds:0x445054
  42c02e:	mov    edx,DWORD PTR ds:0x448d04
  42c034:	mov    edi,eax
  42c036:	mov    eax,DWORD PTR [esp+0x128]
  42c03d:	push   ebx
  42c03e:	add    edx,0x1816c
  42c044:	add    eax,0x4
  42c047:	mov    esi,0xf1
  42c04c:	push   ebp
  42c04d:	lea    ecx,[ecx+0x0]
  42c050:	movzx  ecx,BYTE PTR [eax+0x2]
  42c054:	movzx  ebx,WORD PTR [eax]
  42c057:	shl    ecx,0x10
  42c05a:	add    ecx,ebx
  42c05c:	movzx  ebx,BYTE PTR [eax-0x2]
  42c060:	shl    ecx,0x8
  42c063:	add    ecx,ebx
  42c065:	mov    ebx,DWORD PTR ds:0x448d00
  42c06b:	mov    DWORD PTR ds:0x448cf0,ecx
  42c071:	add    ebx,0xa266a15f
  42c077:	xor    ebx,ecx
  42c079:	mov    DWORD PTR [edx],ebx
  42c07b:	movzx  ecx,BYTE PTR [eax+0xa]
  42c07f:	movzx  ebx,WORD PTR [eax+0x8]
  42c083:	shl    ecx,0x10
  42c086:	add    ecx,ebx
  42c088:	movzx  ebx,BYTE PTR [eax+0x6]
  42c08c:	shl    ecx,0x8
  42c08f:	add    ecx,ebx
  42c091:	mov    ebx,DWORD PTR ds:0x448d00
  42c097:	mov    DWORD PTR ds:0x448cf0,ecx
  42c09d:	add    ebx,0xa266a15f
  42c0a3:	xor    ebx,ecx
  42c0a5:	mov    DWORD PTR [edx+0x4],ebx
  42c0a8:	movzx  ecx,BYTE PTR [eax+0x12]
  42c0ac:	movzx  ebx,WORD PTR [eax+0x10]
  42c0b0:	shl    ecx,0x10
  42c0b3:	add    ecx,ebx
  42c0b5:	movzx  ebx,BYTE PTR [eax+0xe]
  42c0b9:	shl    ecx,0x8
  42c0bc:	add    ecx,ebx
  42c0be:	mov    ebx,DWORD PTR ds:0x448d00
  42c0c4:	add    ebx,0xa266a15f
  42c0ca:	xor    ebx,ecx
  42c0cc:	mov    DWORD PTR ds:0x448cf0,ecx
  42c0d2:	mov    DWORD PTR [edx+0x8],ebx
  42c0d5:	add    eax,0x18
  42c0d8:	add    edx,0xc
  42c0db:	dec    esi
  42c0dc:	jne    0x42c050
  42c0e2:	push   0x4100c0
  42c0e7:	mov    DWORD PTR ds:0x448cf4,0x2
  42c0f1:	call   0x41bbb0
  42c0f6:	add    esp,0x4
  42c0f9:	call   0x4231b0
  42c0fe:	mov    ebp,DWORD PTR ds:0x445014
  42c104:	push   esi
  42c105:	call   ebp
  42c107:	mov    ecx,DWORD PTR ds:0x448d04
  42c10d:	mov    edx,DWORD PTR ds:0x4480d8
  42c113:	add    ecx,0x19588
  42c119:	mov    esi,0x41
  42c11e:	mov    edi,edi
  42c120:	movzx  eax,WORD PTR [edx+0x6]
  42c124:	movzx  ebx,BYTE PTR [edx+0x4]
  42c128:	movzx  edx,BYTE PTR [edx+0x1]
  42c12c:	shl    eax,0x8
  42c12f:	add    eax,ebx
  42c131:	shl    eax,0x8
  42c134:	add    eax,edx
  42c136:	mov    ds:0x448cf0,eax
  42c13b:	mov    edx,0x12e951a8
  42c140:	sub    edx,DWORD PTR ds:0x448d00
  42c146:	add    ecx,0x14
  42c149:	xor    edx,eax
  42c14b:	mov    DWORD PTR [ecx-0x14],edx
  42c14e:	mov    edx,DWORD PTR ds:0x4480d8
  42c154:	add    edx,0x8
  42c157:	mov    DWORD PTR ds:0x4480d8,edx
  42c15d:	movzx  eax,WORD PTR [edx+0x6]
  42c161:	movzx  ebx,BYTE PTR [edx+0x4]
  42c165:	movzx  edx,BYTE PTR [edx+0x1]
  42c169:	shl    eax,0x8
  42c16c:	add    eax,ebx
  42c16e:	shl    eax,0x8
  42c171:	add    eax,edx
  42c173:	mov    ds:0x448cf0,eax
  42c178:	mov    edx,0x12e951a8
  42c17d:	sub    edx,DWORD PTR ds:0x448d00
  42c183:	xor    edx,eax
  42c185:	mov    DWORD PTR [ecx-0x10],edx
  42c188:	mov    edx,DWORD PTR ds:0x4480d8
  42c18e:	add    edx,0x8
  42c191:	mov    DWORD PTR ds:0x4480d8,edx
  42c197:	movzx  eax,WORD PTR [edx+0x6]
  42c19b:	movzx  ebx,BYTE PTR [edx+0x4]
  42c19f:	movzx  edx,BYTE PTR [edx+0x1]
  42c1a3:	shl    eax,0x8
  42c1a6:	add    eax,ebx
  42c1a8:	shl    eax,0x8
  42c1ab:	add    eax,edx
  42c1ad:	mov    ds:0x448cf0,eax
  42c1b2:	mov    edx,0x12e951a8
  42c1b7:	sub    edx,DWORD PTR ds:0x448d00
  42c1bd:	xor    edx,eax
  42c1bf:	mov    DWORD PTR [ecx-0xc],edx
  42c1c2:	mov    edx,DWORD PTR ds:0x4480d8
  42c1c8:	add    edx,0x8
  42c1cb:	mov    DWORD PTR ds:0x4480d8,edx
  42c1d1:	movzx  eax,WORD PTR [edx+0x6]
  42c1d5:	movzx  ebx,BYTE PTR [edx+0x4]
  42c1d9:	movzx  edx,BYTE PTR [edx+0x1]
  42c1dd:	shl    eax,0x8
  42c1e0:	add    eax,ebx
  42c1e2:	shl    eax,0x8
  42c1e5:	add    eax,edx
  42c1e7:	mov    ds:0x448cf0,eax
  42c1ec:	mov    edx,0x12e951a8
  42c1f1:	sub    edx,DWORD PTR ds:0x448d00
  42c1f7:	xor    edx,eax
  42c1f9:	mov    DWORD PTR [ecx-0x8],edx
  42c1fc:	mov    edx,DWORD PTR ds:0x4480d8
  42c202:	add    edx,0x8
  42c205:	mov    DWORD PTR ds:0x4480d8,edx
  42c20b:	movzx  eax,WORD PTR [edx+0x6]
  42c20f:	movzx  ebx,BYTE PTR [edx+0x4]
  42c213:	movzx  edx,BYTE PTR [edx+0x1]
  42c217:	shl    eax,0x8
  42c21a:	add    eax,ebx
  42c21c:	shl    eax,0x8
  42c21f:	add    eax,edx
  42c221:	mov    edx,0x12e951a8
  42c226:	sub    edx,DWORD PTR ds:0x448d00
  42c22c:	mov    ds:0x448cf0,eax
  42c231:	xor    edx,eax
  42c233:	mov    DWORD PTR [ecx-0x4],edx
  42c236:	mov    edx,DWORD PTR ds:0x4480d8
  42c23c:	add    edx,0x8
  42c23f:	dec    esi
  42c240:	mov    DWORD PTR ds:0x4480d8,edx
  42c246:	jne    0x42c120
  42c24c:	push   esi
  42c24d:	push   0x76
  42c24f:	push   0x143
  42c254:	push   0x83
  42c259:	push   0x80
  42c25e:	push   esi
  42c25f:	push   edi
  42c260:	call   DWORD PTR ds:0x445050
  42c266:	mov    esi,DWORD PTR ds:0x448d04
  42c26c:	mov    edi,DWORD PTR ds:0x445064
  42c272:	add    esi,0x1a408
  42c278:	mov    ebx,0xc7
  42c27d:	lea    ecx,[ecx+0x0]
  42c280:	push   0x4d
  42c282:	call   edi
  42c284:	mov    ecx,DWORD PTR ds:0x4480dc
  42c28a:	movzx  eax,BYTE PTR [ecx+0x9]
  42c28e:	movzx  edx,WORD PTR [ecx+0x7]
  42c292:	movzx  ecx,BYTE PTR [ecx]
  42c295:	shl    eax,0x10
  42c298:	add    eax,edx
  42c29a:	shl    eax,0x8
  42c29d:	add    eax,ecx
  42c29f:	mov    edx,0x1a7175e6
  42c2a4:	sub    edx,DWORD PTR ds:0x448d00
  42c2aa:	mov    ds:0x448cf0,eax
  42c2af:	xor    edx,eax
  42c2b1:	mov    DWORD PTR [esi],edx
  42c2b3:	mov    ecx,DWORD PTR ds:0x448d00
  42c2b9:	mov    eax,ds:0x4480dc
  42c2be:	mov    eax,DWORD PTR [eax+0xa]
  42c2c1:	sub    ecx,0x401e6
  42c2c7:	neg    ecx
  42c2c9:	sbb    ecx,ecx
  42c2cb:	and    ecx,0xe5935b0e
  42c2d1:	add    ecx,0x1a6d7400
  42c2d7:	xor    ecx,eax
  42c2d9:	mov    ds:0x448cf0,eax
  42c2de:	push   0x38
  42c2e0:	mov    DWORD PTR [esi+0x4],ecx
  42c2e3:	call   edi
  42c2e5:	add    DWORD PTR ds:0x4480dc,0x10
  42c2ec:	add    esi,0x8
  42c2ef:	dec    ebx
  42c2f0:	jne    0x42c280
  42c2f2:	push   0x442310
  42c2f7:	push   0xab
  42c2fc:	push   0x426ab0
  42c301:	call   0x40fa70
  42c306:	mov    eax,ds:0x448d04
  42c30b:	mov    edx,DWORD PTR ds:0x4480e0
  42c311:	add    esp,0xc
  42c314:	add    eax,0x17468
  42c319:	lea    esi,[ebx+0x2c]
  42c31c:	lea    esp,[esp+0x0]
  42c320:	movzx  ecx,BYTE PTR [edx+0xa]
  42c324:	movzx  edi,BYTE PTR [edx+0x6]
  42c328:	movzx  edx,WORD PTR [edx]
  42c32b:	shl    ecx,0x8
  42c32e:	add    ecx,edi
  42c330:	shl    ecx,0x10
  42c333:	add    ecx,edx
  42c335:	mov    edx,DWORD PTR ds:0x448d00
  42c33b:	sub    edx,0x401e6
  42c341:	neg    edx
  42c343:	sbb    edx,edx
  42c345:	and    edx,0xe499c6dc
  42c34b:	add    edx,0x1b66fe02
  42c351:	xor    edx,ecx
  42c353:	mov    DWORD PTR ds:0x448cf0,ecx
  42c359:	mov    DWORD PTR [eax],edx
  42c35b:	mov    edx,DWORD PTR ds:0x4480e0
  42c361:	movzx  ecx,BYTE PTR [edx+0xf]
  42c365:	movzx  edi,WORD PTR [edx+0xd]
  42c369:	movzx  edx,BYTE PTR [edx+0xb]
  42c36d:	shl    ecx,0x10
  42c370:	add    ecx,edi
  42c372:	shl    ecx,0x8
  42c375:	add    ecx,edx
  42c377:	mov    DWORD PTR ds:0x448cf0,ecx
  42c37d:	mov    edx,0x1b6affe8
  42c382:	sub    edx,DWORD PTR ds:0x448d00
  42c388:	xor    edx,ecx
  42c38a:	mov    DWORD PTR [eax+0x4],edx
  42c38d:	mov    edx,DWORD PTR ds:0x4480e0
  42c393:	add    edx,0x10
  42c396:	mov    DWORD PTR ds:0x4480e0,edx
  42c39c:	movzx  ecx,BYTE PTR [edx+0xa]
  42c3a0:	movzx  edi,BYTE PTR [edx+0x6]
  42c3a4:	movzx  edx,WORD PTR [edx]
  42c3a7:	shl    ecx,0x8
  42c3aa:	add    ecx,edi
  42c3ac:	shl    ecx,0x10
  42c3af:	add    ecx,edx
  42c3b1:	mov    edx,DWORD PTR ds:0x448d00
  42c3b7:	sub    edx,0x401e6
  42c3bd:	neg    edx
  42c3bf:	sbb    edx,edx
  42c3c1:	and    edx,0xe499c6dc
  42c3c7:	add    edx,0x1b66fe02
  42c3cd:	xor    edx,ecx
  42c3cf:	mov    DWORD PTR ds:0x448cf0,ecx
  42c3d5:	mov    DWORD PTR [eax+0x8],edx
  42c3d8:	mov    edx,DWORD PTR ds:0x4480e0
  42c3de:	movzx  ecx,BYTE PTR [edx+0xf]
  42c3e2:	movzx  edi,WORD PTR [edx+0xd]
  42c3e6:	movzx  edx,BYTE PTR [edx+0xb]
  42c3ea:	shl    ecx,0x10
  42c3ed:	add    ecx,edi
  42c3ef:	shl    ecx,0x8
  42c3f2:	add    ecx,edx
  42c3f4:	mov    DWORD PTR ds:0x448cf0,ecx
  42c3fa:	mov    edx,0x1b6affe8
  42c3ff:	sub    edx,DWORD PTR ds:0x448d00
  42c405:	xor    edx,ecx
  42c407:	mov    DWORD PTR [eax+0xc],edx
  42c40a:	mov    edx,DWORD PTR ds:0x4480e0
  42c410:	add    edx,0x10
  42c413:	mov    DWORD PTR ds:0x4480e0,edx
  42c419:	movzx  ecx,BYTE PTR [edx+0xa]
  42c41d:	movzx  edi,BYTE PTR [edx+0x6]
  42c421:	movzx  edx,WORD PTR [edx]
  42c424:	shl    ecx,0x8
  42c427:	add    ecx,edi
  42c429:	shl    ecx,0x10
  42c42c:	add    ecx,edx
  42c42e:	mov    edx,DWORD PTR ds:0x448d00
  42c434:	sub    edx,0x401e6
  42c43a:	neg    edx
  42c43c:	sbb    edx,edx
  42c43e:	and    edx,0xe499c6dc
  42c444:	add    edx,0x1b66fe02
  42c44a:	xor    edx,ecx
  42c44c:	mov    DWORD PTR ds:0x448cf0,ecx
  42c452:	mov    DWORD PTR [eax+0x10],edx
  42c455:	mov    edx,DWORD PTR ds:0x4480e0
  42c45b:	movzx  ecx,BYTE PTR [edx+0xf]
  42c45f:	movzx  edi,WORD PTR [edx+0xd]
  42c463:	movzx  edx,BYTE PTR [edx+0xb]
  42c467:	shl    ecx,0x10
  42c46a:	add    ecx,edi
  42c46c:	shl    ecx,0x8
  42c46f:	add    ecx,edx
  42c471:	mov    DWORD PTR ds:0x448cf0,ecx
  42c477:	mov    edx,0x1b6affe8
  42c47c:	sub    edx,DWORD PTR ds:0x448d00
  42c482:	xor    edx,ecx
  42c484:	mov    DWORD PTR [eax+0x14],edx
  42c487:	mov    edx,DWORD PTR ds:0x4480e0
  42c48d:	add    edx,0x10
  42c490:	mov    DWORD PTR ds:0x4480e0,edx
  42c496:	movzx  ecx,BYTE PTR [edx+0xa]
  42c49a:	movzx  edi,BYTE PTR [edx+0x6]
  42c49e:	movzx  edx,WORD PTR [edx]
  42c4a1:	shl    ecx,0x8
  42c4a4:	add    ecx,edi
  42c4a6:	shl    ecx,0x10
  42c4a9:	add    ecx,edx
  42c4ab:	mov    edx,DWORD PTR ds:0x448d00
  42c4b1:	sub    edx,0x401e6
  42c4b7:	neg    edx
  42c4b9:	sbb    edx,edx
  42c4bb:	and    edx,0xe499c6dc
  42c4c1:	mov    DWORD PTR ds:0x448cf0,ecx
  42c4c7:	add    edx,0x1b66fe02
  42c4cd:	xor    edx,ecx
  42c4cf:	mov    DWORD PTR [eax+0x18],edx
  42c4d2:	mov    edx,DWORD PTR ds:0x4480e0
  42c4d8:	movzx  ecx,BYTE PTR [edx+0xf]
  42c4dc:	movzx  edi,WORD PTR [edx+0xd]
  42c4e0:	movzx  edx,BYTE PTR [edx+0xb]
  42c4e4:	shl    ecx,0x10
  42c4e7:	add    ecx,edi
  42c4e9:	shl    ecx,0x8
  42c4ec:	add    ecx,edx
  42c4ee:	mov    DWORD PTR ds:0x448cf0,ecx
  42c4f4:	mov    edx,0x1b6affe8
  42c4f9:	sub    edx,DWORD PTR ds:0x448d00
  42c4ff:	xor    edx,ecx
  42c501:	mov    DWORD PTR [eax+0x1c],edx
  42c504:	mov    edx,DWORD PTR ds:0x4480e0
  42c50a:	add    edx,0x10
  42c50d:	mov    DWORD PTR ds:0x4480e0,edx
  42c513:	movzx  ecx,BYTE PTR [edx+0xa]
  42c517:	movzx  edi,BYTE PTR [edx+0x6]
  42c51b:	movzx  edx,WORD PTR [edx]
  42c51e:	shl    ecx,0x8
  42c521:	add    ecx,edi
  42c523:	shl    ecx,0x10
  42c526:	add    ecx,edx
  42c528:	mov    edx,DWORD PTR ds:0x448d00
  42c52e:	sub    edx,0x401e6
  42c534:	neg    edx
  42c536:	sbb    edx,edx
  42c538:	and    edx,0xe499c6dc
  42c53e:	mov    DWORD PTR ds:0x448cf0,ecx
  42c544:	add    edx,0x1b66fe02
  42c54a:	xor    edx,ecx
  42c54c:	mov    DWORD PTR [eax+0x20],edx
  42c54f:	mov    edx,DWORD PTR ds:0x4480e0
  42c555:	movzx  ecx,BYTE PTR [edx+0xf]
  42c559:	movzx  edi,WORD PTR [edx+0xd]
  42c55d:	movzx  edx,BYTE PTR [edx+0xb]
  42c561:	shl    ecx,0x10
  42c564:	add    ecx,edi
  42c566:	shl    ecx,0x8
  42c569:	add    ecx,edx
  42c56b:	mov    edx,0x1b6affe8
  42c570:	sub    edx,DWORD PTR ds:0x448d00
  42c576:	mov    DWORD PTR ds:0x448cf0,ecx
  42c57c:	xor    edx,ecx
  42c57e:	mov    DWORD PTR [eax+0x24],edx
  42c581:	mov    edx,DWORD PTR ds:0x4480e0
  42c587:	add    edx,0x10
  42c58a:	mov    DWORD PTR ds:0x4480e0,edx
  42c590:	movzx  ecx,BYTE PTR [edx+0xa]
  42c594:	shl    ecx,0x8
  42c597:	movzx  edi,BYTE PTR [edx+0x6]
  42c59b:	movzx  edx,WORD PTR [edx]
  42c59e:	add    ecx,edi
  42c5a0:	shl    ecx,0x10
  42c5a3:	add    ecx,edx
  42c5a5:	mov    edx,DWORD PTR ds:0x448d00
  42c5ab:	sub    edx,0x401e6
  42c5b1:	neg    edx
  42c5b3:	sbb    edx,edx
  42c5b5:	and    edx,0xe499c6dc
  42c5bb:	add    edx,0x1b66fe02
  42c5c1:	xor    edx,ecx
  42c5c3:	mov    DWORD PTR ds:0x448cf0,ecx
  42c5c9:	mov    DWORD PTR [eax+0x28],edx
  42c5cc:	mov    edx,DWORD PTR ds:0x4480e0
  42c5d2:	movzx  ecx,BYTE PTR [edx+0xf]
  42c5d6:	movzx  edi,WORD PTR [edx+0xd]
  42c5da:	movzx  edx,BYTE PTR [edx+0xb]
  42c5de:	shl    ecx,0x10
  42c5e1:	add    ecx,edi
  42c5e3:	shl    ecx,0x8
  42c5e6:	add    ecx,edx
  42c5e8:	mov    edx,0x1b6affe8
  42c5ed:	sub    edx,DWORD PTR ds:0x448d00
  42c5f3:	mov    DWORD PTR ds:0x448cf0,ecx
  42c5f9:	xor    edx,ecx
  42c5fb:	mov    DWORD PTR [eax+0x2c],edx
  42c5fe:	mov    edx,DWORD PTR ds:0x4480e0
  42c604:	add    edx,0x10
  42c607:	add    eax,0x30
  42c60a:	dec    esi
  42c60b:	mov    DWORD PTR ds:0x4480e0,edx
  42c611:	jne    0x42c320
  42c617:	mov    esi,DWORD PTR ds:0x448d04
  42c61d:	mov    ebx,DWORD PTR ds:0x445024
  42c623:	add    esi,0x19a9c
  42c629:	mov    edi,0x12d
  42c62e:	mov    edi,edi
  42c630:	mov    eax,ds:0x4480e4
  42c635:	mov    eax,DWORD PTR [eax+0x2]
  42c638:	mov    ecx,0xd21d2375
  42c63d:	sub    ecx,DWORD PTR ds:0x448d00
  42c643:	mov    ds:0x448cf0,eax
  42c648:	xor    ecx,eax
  42c64a:	push   0x0
  42c64c:	mov    DWORD PTR [esi],ecx
  42c64e:	call   ebp
  42c650:	mov    eax,ds:0x4480e4
  42c655:	movzx  edx,WORD PTR [eax+0xe]
  42c659:	movzx  ecx,BYTE PTR [eax+0xb]
  42c65d:	movzx  eax,BYTE PTR [eax+0x7]
  42c661:	shl    edx,0x8
  42c664:	add    edx,ecx
  42c666:	lea    ecx,[esp+0x10]
  42c66a:	push   ecx
  42c66b:	shl    edx,0x8
  42c66e:	push   0x0
  42c670:	add    edx,eax
  42c672:	push   0x3
  42c674:	mov    DWORD PTR ds:0x448cf0,edx
  42c67a:	call   ebx
  42c67c:	mov    edx,0xd21d2375
  42c681:	sub    edx,DWORD PTR ds:0x448d00
  42c687:	add    esi,0x8
  42c68a:	xor    edx,DWORD PTR ds:0x448cf0
  42c690:	mov    DWORD PTR [esi-0x4],edx
  42c693:	add    DWORD PTR ds:0x4480e4,0x10
  42c69a:	dec    edi
  42c69b:	jne    0x42c630
  42c69d:	mov    eax,ds:0x4480e4
  42c6a2:	mov    eax,DWORD PTR [eax+0x2]
  42c6a5:	mov    ecx,0xd21d2375
  42c6aa:	sub    ecx,DWORD PTR ds:0x448d00
  42c6b0:	push   0x419bd0
  42c6b5:	xor    ecx,eax
  42c6b7:	mov    ds:0x448cf0,eax
  42c6bc:	push   0x423b30
  42c6c1:	mov    DWORD PTR [esi],ecx
  42c6c3:	call   0x414d70
  42c6c8:	mov    edi,DWORD PTR ds:0x448d04
  42c6ce:	add    esp,0x8
  42c6d1:	add    edi,0x17ca8
  42c6d7:	mov    esi,0x440260
  42c6dc:	mov    ebx,0x98
  42c6e1:	movzx  edx,BYTE PTR [esi+0x7]
  42c6e5:	movzx  eax,WORD PTR [esi+0x2]
  42c6e9:	movzx  ecx,BYTE PTR [esi]
  42c6ec:	shl    edx,0x10
  42c6ef:	add    edx,eax
  42c6f1:	shl    edx,0x8
  42c6f4:	add    edx,ecx
  42c6f6:	push   0x0
  42c6f8:	mov    DWORD PTR ds:0x448cf0,edx
  42c6fe:	call   ebp
  42c700:	mov    edx,DWORD PTR ds:0x448d00
  42c706:	add    edx,0xb0f1f86
  42c70c:	xor    edx,DWORD PTR ds:0x448cf0
  42c712:	add    edi,0x8
  42c715:	mov    DWORD PTR [edi-0x8],edx
  42c718:	movzx  eax,BYTE PTR [esi+0xe]
  42c71c:	movzx  ecx,BYTE PTR [esi+0xb]
  42c720:	movzx  edx,WORD PTR [esi+0x9]
  42c724:	shl    eax,0x8
  42c727:	add    eax,ecx
  42c729:	shl    eax,0x10
  42c72c:	mov    ecx,0xb172352
  42c731:	sub    ecx,DWORD PTR ds:0x448d00
  42c737:	add    eax,edx
  42c739:	xor    ecx,eax
  42c73b:	mov    ds:0x448cf0,eax
  42c740:	mov    DWORD PTR [edi-0x4],ecx
  42c743:	add    esi,0x10
  42c746:	dec    ebx
  42c747:	jne    0x42c6e1
  42c749:	movzx  eax,BYTE PTR [esi+0x7]
  42c74d:	movzx  edx,WORD PTR [esi+0x2]
  42c751:	movzx  ecx,BYTE PTR [esi]
  42c754:	shl    eax,0x10
  42c757:	add    eax,edx
  42c759:	shl    eax,0x8
  42c75c:	add    eax,ecx
  42c75e:	mov    edx,0xb172352
  42c763:	sub    edx,DWORD PTR ds:0x448d00
  42c769:	mov    ds:0x448cf0,eax
  42c76e:	xor    edx,eax
  42c770:	mov    DWORD PTR [edi],edx
  42c772:	mov    eax,ds:0x448d04
  42c777:	mov    edx,DWORD PTR ds:0x4480e8
  42c77d:	pop    ebp
  42c77e:	lea    esi,[ebx+0x5e]
  42c781:	add    eax,0x18cb8
  42c786:	pop    ebx
  42c787:	jmp    0x42c790
  42c789:	lea    esp,[esp+0x0]
  42c790:	movzx  ecx,WORD PTR [edx+0x6]
  42c794:	movzx  edx,WORD PTR [edx]
  42c797:	shl    ecx,0x10
  42c79a:	add    ecx,edx
  42c79c:	mov    DWORD PTR ds:0x448cf0,ecx
  42c7a2:	mov    edx,0xeded6622
  42c7a7:	sub    edx,DWORD PTR ds:0x448d00
  42c7ad:	add    eax,0x18
  42c7b0:	xor    edx,ecx
  42c7b2:	mov    DWORD PTR [eax-0x18],edx
  42c7b5:	mov    edx,DWORD PTR ds:0x4480e8
  42c7bb:	add    edx,0x8
  42c7be:	mov    DWORD PTR ds:0x4480e8,edx
  42c7c4:	movzx  ecx,WORD PTR [edx+0x6]
  42c7c8:	movzx  edx,WORD PTR [edx]
  42c7cb:	shl    ecx,0x10
  42c7ce:	add    ecx,edx
  42c7d0:	mov    DWORD PTR ds:0x448cf0,ecx
  42c7d6:	mov    edx,0xeded6622
  42c7db:	sub    edx,DWORD PTR ds:0x448d00
  42c7e1:	xor    edx,ecx
  42c7e3:	mov    DWORD PTR [eax-0x14],edx
  42c7e6:	mov    edx,DWORD PTR ds:0x4480e8
  42c7ec:	add    edx,0x8
  42c7ef:	mov    DWORD PTR ds:0x4480e8,edx
  42c7f5:	movzx  ecx,WORD PTR [edx+0x6]
  42c7f9:	movzx  edx,WORD PTR [edx]
  42c7fc:	shl    ecx,0x10
  42c7ff:	add    ecx,edx
  42c801:	mov    DWORD PTR ds:0x448cf0,ecx
  42c807:	mov    edx,0xeded6622
  42c80c:	sub    edx,DWORD PTR ds:0x448d00
  42c812:	xor    edx,ecx
  42c814:	mov    DWORD PTR [eax-0x10],edx
  42c817:	mov    edx,DWORD PTR ds:0x4480e8
  42c81d:	add    edx,0x8
  42c820:	mov    DWORD PTR ds:0x4480e8,edx
  42c826:	movzx  ecx,WORD PTR [edx+0x6]
  42c82a:	movzx  edx,WORD PTR [edx]
  42c82d:	shl    ecx,0x10
  42c830:	add    ecx,edx
  42c832:	mov    DWORD PTR ds:0x448cf0,ecx
  42c838:	mov    edx,0xeded6622
  42c83d:	sub    edx,DWORD PTR ds:0x448d00
  42c843:	xor    edx,ecx
  42c845:	mov    DWORD PTR [eax-0xc],edx
  42c848:	mov    edx,DWORD PTR ds:0x4480e8
  42c84e:	add    edx,0x8
  42c851:	mov    DWORD PTR ds:0x4480e8,edx
  42c857:	movzx  ecx,WORD PTR [edx+0x6]
  42c85b:	movzx  edx,WORD PTR [edx]
  42c85e:	shl    ecx,0x10
  42c861:	add    ecx,edx
  42c863:	mov    DWORD PTR ds:0x448cf0,ecx
  42c869:	mov    edx,0xeded6622
  42c86e:	sub    edx,DWORD PTR ds:0x448d00
  42c874:	xor    edx,ecx
  42c876:	mov    DWORD PTR [eax-0x8],edx
  42c879:	mov    edx,DWORD PTR ds:0x4480e8
  42c87f:	add    edx,0x8
  42c882:	mov    DWORD PTR ds:0x4480e8,edx
  42c888:	movzx  ecx,WORD PTR [edx+0x6]
  42c88c:	movzx  edx,WORD PTR [edx]
  42c88f:	shl    ecx,0x10
  42c892:	add    ecx,edx
  42c894:	mov    edx,0xeded6622
  42c899:	sub    edx,DWORD PTR ds:0x448d00
  42c89f:	mov    DWORD PTR ds:0x448cf0,ecx
  42c8a5:	xor    edx,ecx
  42c8a7:	mov    DWORD PTR [eax-0x4],edx
  42c8aa:	mov    edx,DWORD PTR ds:0x4480e8
  42c8b0:	add    edx,0x8
  42c8b3:	dec    esi
  42c8b4:	mov    DWORD PTR ds:0x4480e8,edx
  42c8ba:	jne    0x42c790
  42c8c0:	push   0x1c
  42c8c2:	call   DWORD PTR ds:0x448d04
  42c8c8:	add    esp,0x4
  42c8cb:	pop    edi
  42c8cc:	pop    esi
  42c8cd:	add    esp,0x11c
  42c8d3:	ret    
  42c8d4:	int3   
  42c8d5:	int3   
  42c8d6:	int3   
  42c8d7:	int3   
  42c8d8:	int3   
  42c8d9:	int3   
  42c8da:	int3   
  42c8db:	int3   
  42c8dc:	int3   
  42c8dd:	int3   
  42c8de:	int3   
  42c8df:	int3   
  42c8e0:	add    bh,bh
  42c8e2:	dec    DWORD PTR [ebx]
  42c8e4:	xor    DWORD PTR [ecx-0x7c334c08],0xffffffff
  42c8eb:	xor    eax,DWORD PTR [ebx+0xa76846]
  42c8f1:	add    DWORD PTR [eax],0xffffffe4
  42c8f4:	call   esp
  42c8f6:	out    0xa1,al
  42c8f8:	add    BYTE PTR [eax],al
  42c8fa:	push   ecx
  42c8fc:	jmp    ecx
  42c8fe:	sbb    al,0x66
  42c900:	add    ah,cl
  42c902:	int3   
  42c903:	fild   DWORD PTR [eax]
  42c905:	sti    
  42c906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c907:	(bad)  
  42c908:	add    bh,bh
  42c90a:	inc    DWORD PTR [eax+eax*1-0x7ddda6]
  42c911:	(bad)  
  42c912:	call   DWORD PTR [esi-0x2dee2b01]
  42c918:	cmp    edi,0xffffffff
  42c91b:	mov    DWORD PTR [eax],0xd0ec04
  42c921:	mov    DWORD PTR [ebx-0x559d0059],eax
  42c927:	lds    ecx,FWORD PTR [ecx-0x3399ff01]
  42c92d:	pop    eax
  42c92e:	mov    tr7,edi
  42c931:	inc    DWORD PTR [eax]
  42c933:	pop    ds
  42c934:	inc    DWORD PTR [esi]
  42c936:	(bad)  
  42c938:	add    bh,bh
  42c93a:	add    BYTE PTR [ebx+0x0],dl
  42c93d:	jno    0x42c996
  42c93f:	push   esi
  42c940:	add    BYTE PTR [eax],al
  42c942:	int3   
  42c943:	ret    0x9cff
  42c946:	cwde   
  42c947:	sbb    BYTE PTR [eax],al
  42c949:	inc    DWORD PTR [eax]
  42c94b:	stos   BYTE PTR es:[edi],al
  42c94c:	add    BYTE PTR [esi+0xff51e6],bh
  42c952:	add    dh,ah
  42c954:	mov    DWORD PTR [ecx+0x1a],esp
  42c957:	xchg   ecx,eax
  42c958:	(bad)  
  42c959:	dec    esp
  42c95b:	and    bh,bh
  42c95d:	xchg   esp,eax
  42c95e:	cdq    
  42c95f:	icebp  
  42c960:	inc    DWORD PTR [ebx+0x30ffddff]
  42c966:	scas   al,BYTE PTR es:[edi]
  42c967:	add    edi,edi
  42c969:	add    bh,bh
  42c96b:	inc    edx
  42c96c:	add    BYTE PTR [edi-0x75],dh
  42c96f:	add    eax,DWORD PTR [ebx-0x3325ff77]
  42c975:	in     eax,0xd4
  42c977:	sub    bh,bh
  42c979:	add    DWORD PTR [eax],0xffffffd8
  42c97c:	(bad)  
  42c97d:	(bad)  
  42c97e:	mov    ebp,0xff00899c
  42c983:	lods   al,BYTE PTR ds:[esi]
  42c984:	add    ah,al
  42c986:	and    al,0x37
  42c988:	(bad)  
  42c989:	(bad)  
  42c98a:	push   DWORD PTR [ebx-0x1cd24f77]
  42c990:	add    bh,bh
  42c992:	add    BYTE PTR [ebx+0x0],dh
  42c995:	out    0x8c,al
  42c997:	sar    bh,0x0
  42c99a:	(bad)  
  42c99b:	js     0x42c99d
  42c99d:	pop    edx
  42c99e:	int3   
  42c99f:	bound  eax,QWORD PTR [eax]
  42c9a1:	add    BYTE PTR [eax],al
  42c9a3:	fld    QWORD PTR [ebx-0x333984b0]
  42c9a9:	or     DWORD PTR [ecx+0x387ff57],0xffffff9b
  42c9b0:	add    bh,bh
  42c9b2:	add    al,cl
  42c9b4:	push   DWORD PTR [edi-0x75]
  42c9b7:	push   esi
  42c9b8:	add    bh,bh
  42c9ba:	call   esp
  42c9bc:	call   DWORD PTR [ebx]
  42c9be:	sti    
  42c9bf:	inc    edi
  42c9c0:	inc    DWORD PTR [eax]
  42c9c2:	mov    DWORD PTR ds:0xce319b83,esi
  42c9c8:	add    DWORD PTR [eax],0xffffffcc
  42c9cb:	idiv   edi
  42c9cd:	(bad)  
  42c9ce:	out    dx,al
  42c9cf:	fwait
  42c9d0:	add    bh,bh
  42c9d2:	push   ebx
  42c9d4:	call   DWORD PTR [ebx+0xff6814]
  42c9da:	jmp    DWORD PTR [esi]
  42c9dc:	call   FWORD PTR [edi]
  42c9de:	loop   0x42ca05
  42c9e0:	inc    DWORD PTR [eax]
  42c9e2:	jmp    FWORD PTR [ebx-0x1]
  42c9e5:	loop   0x42c9ad
  42c9e7:	lahf   
  42c9e8:	mov    edi,edi
  42c9ea:	int3   
  42c9eb:	mov    eax,ds:0x83aa32ff
  42c9f0:	add    bh,bh
  42c9f2:	int3   
  42c9f3:	add    eax,DWORD PTR [eax]
  42c9f5:	adc    al,bh
  42c9f7:	stos   BYTE PTR es:[edi],al
  42c9f8:	add    DWORD PTR [ebx+0x47ff41ff],0x33
  42c9ff:	push   ebx
  42ca00:	inc    DWORD PTR [ebx-0x4c7c6d7d]
  42ca06:	jp     0x42ca78
  42ca08:	(bad)  
  42ca09:	inc    DWORD PTR [eax]
  42ca0b:	fwait
  42ca0c:	int3   
  42ca0d:	adc    eax,0xffd1ee
  42ca12:	add    BYTE PTR [ebp-0x1],cl
  42ca15:	push   eax
  42ca16:	in     al,0x1e
  42ca18:	(bad)  
  42ca19:	inc    DWORD PTR [ebx-0x35dbffda]
  42ca1f:	add    BYTE PTR [ebx+0x2983ff],al
  42ca25:	and    al,dh
  42ca27:	lahf   
  42ca28:	add    bh,bh
  42ca2a:	int3   
  42ca2b:	cld    
  42ca2c:	jmp    FWORD PTR [ecx-0x4b]
  42ca2f:	sub    bh,bh
  42ca31:	inc    DWORD PTR [ebx+0x54ac83c7]
  42ca37:	cmp    cl,BYTE PTR [ecx-0x6c0100]
  42ca3d:	in     eax,dx
  42ca3e:	sti    
  42ca3f:	dec    DWORD PTR gs:[ecx+0x15ffeb00]
  42ca46:	lahf   
  42ca47:	push   esp
  42ca48:	add    BYTE PTR [eax],al
  42ca4a:	add    cl,al
  42ca4c:	xor    DWORD PTR [esi-0x334616],0xffffffff
  42ca53:	lldt   WORD PTR [edi]
  42ca56:	pop    edi
  42ca57:	addr16 add bh,bh
  42ca5a:	dec    edx
  42ca5c:	mov    DWORD PTR [ebp-0x7518],edi
  42ca62:	adc    DWORD PTR [ecx+0x7aca0dff],0xffffff89
  42ca69:	add    bh,bh
  42ca6b:	mov    BYTE PTR [eax],al
  42ca6d:	dec    edi
  42ca6e:	push   es
  42ca6f:	int    0x0
  42ca71:	inc    DWORD PTR [eax]
  42ca73:	pop    ds
  42ca74:	dec    DWORD PTR [edx-0x7cff0ec3]
  42ca7a:	int3   
  42ca7b:	imul   eax,DWORD PTR [ebx-0xaebae3],0x895bffcc
  42ca85:	gs xor al,0x25
  42ca88:	mov    esp,ecx
  42ca8a:	jmp    DWORD PTR [ecx]
  42ca8c:	dec    DWORD PTR [ebx+ecx*4+0xcc81]
  42ca93:	sub    esp,ecx
  42ca95:	jo     0x42ca1d
  42ca97:	in     al,dx
  42ca98:	inc    DWORD PTR [ebx+0x2389a8ff]
  42ca9e:	mov    al,0x8f
  42caa0:	add    DWORD PTR [eax],0xffffffff
  42caa3:	arpl   WORD PTR [eax],ax
  42caa5:	mov    esp,esp
  42caa7:	addr16 cmp edi,0x0
  42caab:	jno    0x42ca79
  42caad:	mov    esi,0xffff06a9
  42cab2:	add    BYTE PTR [esi+0x29cdbf83],ch
  42cab8:	add    BYTE PTR [ecx-0x6d00d101],cl
  42cabe:	pop    ecx
  42cabf:	out    0xff,eax
  42cac1:	inc    DWORD PTR [eax]
  42cac3:	add    BYTE PTR gs:[ecx+ebp*1+0x63],ah
  42cac8:	add    bh,bh
  42caca:	jmp    FWORD PTR [ecx-0x1d49d801]
  42cad0:	dec    DWORD PTR [ecx+0x4dffe300]
  42cad6:	or     DWORD PTR [eax+eax*1],esp
  42cad9:	inc    DWORD PTR [ebx-0x58000a0]
  42cadf:	pop    ecx
  42cae0:	add    bh,bh
  42cae2:	add    BYTE PTR [ebp-0x1],ah
  42cae5:	push   0xffffffcb
  42cae7:	test   eax,0xeeccffff
  42caec:	dec    DWORD PTR [ecx-0x2]
  42caef:	fdivr  st,st(7)
  42caf1:	add    bh,bh
  42caf3:	fcos   
  42caf5:	imul   edx,ebp,0xffffff81
  42caf8:	inc    DWORD PTR [eax]
  42cafa:	call   DWORD PTR [ebx]
  42cafc:	jmp    DWORD PTR [esi+0xe]
  42caff:	ret    0xff00
  42cb02:	mov    DWORD PTR [ebx],eax
  42cb04:	(bad)  
  42cb05:	jl     0x42cb2a
  42cb07:	ja     0x42cb08
  42cb09:	inc    DWORD PTR [eax]
  42cb0b:	pop    es
  42cb0c:	add    BYTE PTR [edi],bl
  42cb0e:	cdq    
  42cb0f:	inc    eax
  42cb10:	cmp    edi,0xffffffff
  42cb13:	cdq    
  42cb14:	add    BYTE PTR [ebx+0xff2425],ah
  42cb1a:	add    cl,bl
  42cb1c:	add    BYTE PTR [ebx+ebx*2-0x32],al
  42cb20:	add    bh,bh
  42cb22:	jmp    FWORD PTR [edi+0x0]
  42cb25:	push   ebp
  42cb26:	mov    edi,0x89ffac
  42cb2b:	sti    
  42cb2c:	call   DWORD PTR [eax-0x18]
  42cb2f:	arpl   WORD PTR [eax],ax
  42cb31:	(bad)  
  42cb32:	jmp    ebx
  42cb34:	add    BYTE PTR ds:0xb751,bh
  42cb3a:	add    BYTE PTR [ebx+0x7229e5ff],dh
  42cb40:	(bad)  
  42cb41:	(bad)  
  42cb42:	jmp    FWORD PTR [ecx+0x3cfdae00]
  42cb48:	inc    DWORD PTR [eax]
  42cb4a:	call   FWORD PTR [ecx-0x1]
  42cb4d:	imul   ebp,DWORD PTR [ebp+0x7d],0xffffffff
  42cb51:	(bad)  
  42cb52:	(bad)  
  42cb53:	in     al,dx
  42cb54:	add    BYTE PTR [ebx+0x4e],dl
  42cb57:	or     bh,bh
  42cb59:	add    bh,bh
  42cb5b:	sub    edi,edi
  42cb5d:	fmulp  st(4),st
  42cb5f:	add    bh,bh
  42cb61:	add    BYTE PTR [ebx-0x47033d4],al
  42cb67:	mov    bh,0xff
  42cb69:	cmp    edi,0xffffffbc
  42cb6c:	mov    DWORD PTR [eax-0x7cff2ba6],ebx
  42cb72:	add    BYTE PTR [eax-0x1],al
  42cb75:	loopne 0x42cb45
  42cb77:	inc    ebx
  42cb78:	dec    esp
  42cb7a:	int3   
  42cb7b:	push   esi
  42cb7c:	inc    esp
  42cb7e:	inc    esi
  42cb7f:	cmc    
  42cb80:	add    ah,cl
  42cb82:	int3   
  42cb83:	mov    eax,DWORD PTR [ebx-0x7c721a26]
  42cb89:	mov    edi,edi
  42cb8b:	std    
  42cb8c:	add    BYTE PTR [edi-0x13],al
  42cb8f:	clc    
  42cb90:	add    BYTE PTR [eax],al
  42cb92:	jmp    FWORD PTR [ebp-0x1]
  42cb95:	loopne 0x42cb83
  42cb97:	or     bh,bh
  42cb99:	add    BYTE PTR [ecx-0x74ec33f3],cl
  42cb9f:	adc    ecx,esp
  42cba1:	add    bh,bh
  42cba3:	sbb    BYTE PTR [eax],al
  42cba5:	sahf   
  42cba6:	rcl    DWORD PTR [edx-0x2b7c0077],1
  42cbac:	jmp    FWORD PTR [edx-0x33fc8c]
  42cbb2:	or     DWORD PTR [esi],0xffffffcc
  42cbb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cbb6:	call   0xff72:0xff0039
  42cbbd:	mov    ebx,0x89003b0e
  42cbc2:	inc    DWORD PTR [ebx-0x7d]
  42cbc5:	cmc    
  42cbc6:	fisub  WORD PTR [ebx]
  42cbc8:	add    BYTE PTR [ecx-0x41ffff34],cl
  42cbce:	(bad)  
  42cbcf:	jp     0x42cbd1
  42cbd1:	(bad)  
  42cbd2:	(bad)  
  42cbd3:	stc    
  42cbd4:	call   eax
  42cbd6:	xor    eax,0xccff0a
  42cbdb:	xor    DWORD PTR [ebx-0x7c511f4b],eax
  42cbe1:	add    BYTE PTR [ebx+0x4c689c1],al
  42cbe7:	dec    ecx
  42cbe8:	dec    esp
  42cbea:	add    dh,ah
  42cbec:	add    BYTE PTR [edx],dh
  42cbee:	inc    eax
  42cbef:	sbb    eax,DWORD PTR [ebx+0x19ccff]
  42cbf5:	cmp    al,0x7
  42cbf7:	mov    ds:0x7affffff,al
  42cbfc:	add    al,dl
  42cbfe:	addr16 (bad) 
  42cc00:	inc    DWORD PTR [eax]
  42cc02:	dec    DWORD PTR [ebx]
  42cc04:	mov    DWORD PTR [esi],esi
  42cc06:	jb     0x42cc87
  42cc08:	add    BYTE PTR [eax],al
  42cc0a:	add    BYTE PTR [edi-0x77],dh
  42cc0d:	ficomp DWORD PTR [eax-0x53]
  42cc13:	cmp    al,BYTE PTR [eax]
  42cc15:	fldenv [esi]
  42cc17:	test   BYTE PTR [eax],0xff
  42cc1a:	mov    DWORD PTR [ecx+0x0],ebp
  42cc1d:	or     edi,ecx
  42cc1f:	push   ds
  42cc20:	add    bh,bh
  42cc22:	int3   
  42cc23:	mov    DWORD PTR [eax],0xff4d6925
  42cc29:	mov    edi,edi
  42cc2b:	inc    edi
  42cc2c:	add    BYTE PTR [ebx-0x61],ah
  42cc2f:	push   ebx
  42cc30:	add    BYTE PTR [ecx+0x73ff6083],cl
  42cc36:	mov    al,ds:0xffffffac
  42cc3b:	call   0x92b7d3f
  42cc40:	(bad)  
  42cc41:	(bad)  
  42cc42:	dec    esi
  42cc44:	dec    DWORD PTR [eax]
  42cc46:	sahf   
  42cc47:	mov    ah,0x83
  42cc49:	add    DWORD PTR [eax],0xffffff85
  42cc4c:	add    BYTE PTR [edx],ah
  42cc4e:	lods   eax,DWORD PTR ds:[esi]
  42cc4f:	ret    0xff89
  42cc52:	push   DWORD PTR [esi-0x1]
  42cc55:	stos   BYTE PTR es:[edi],al
  42cc56:	dec    ebx
  42cc57:	scas   al,BYTE PTR es:[edi]
  42cc58:	cmp    edi,0x0
  42cc5b:	stc    
  42cc5c:	xor    DWORD PTR ds:0x83ccdfb2,0xffffffff
  42cc63:	dec    ecx
  42cc64:	add    bh,dl
  42cc66:	enter  0x66,0x83
  42cc6a:	add    BYTE PTR [edx],ch
  42cc6c:	inc    DWORD PTR [ebp-0x7c9854]
  42cc72:	call   DWORD PTR [edi]
  42cc74:	adc    ecx,0xffffff9d
  42cc77:	xchg   esi,eax
  42cc78:	add    bh,bh
  42cc7a:	dec    DWORD PTR [eax]
  42cc7c:	inc    ebp
  42cc7e:	cwde   
  42cc7f:	or     bh,bh
  42cc81:	inc    DWORD PTR [ebx+0x7d9983a2]
  42cc87:	cmp    edi,edi
  42cc89:	cmp    edi,0xc
  42cc8c:	and    ecx,0x6b
  42cc8f:	fdiv   st(7),st
  42cc91:	(bad)  
  42cc92:	(bad)  
  42cc93:	jle    0x42cc94
  42cc95:	mov    dh,0xd9
  42cc97:	push   ebx
  42cc98:	(bad)  
  42cc99:	(bad)  
  42cc9a:	push   DWORD PTR [eax-0x1]
  42cc9d:	shl    ecx,1
  42cc9f:	lods   al,BYTE PTR ds:[esi]
  42cca0:	dec    DWORD PTR [ecx-0x6b7c4a01]
  42cca6:	js     0x42ccb2
  42cca8:	add    bh,bh
  42ccaa:	call   DWORD PTR [edx-0x34]
  42ccad:	sbb    eax,0xcc00df0f
  42ccb2:	add    cl,al
  42ccb4:	add    BYTE PTR [edx+0x83c394],bh
  42ccba:	add    BYTE PTR [edi+edi*8+0xb154c8],al
  42ccc1:	add    bh,bh
  42ccc3:	cmp    edi,edi
  42ccc5:	cld    
  42ccc6:	aaa    
  42ccc7:	idiv   edi
  42ccc9:	(bad)  
  42ccca:	call   DWORD PTR [ebx]
  42cccc:	add    BYTE PTR [esp-0xd5],ah
  42ccd3:	push   es
  42ccd4:	jmp    FWORD PTR ds:0x83ffc984
  42ccda:	jmp    FWORD PTR ds:0x22674f89
  42cce0:	inc    DWORD PTR [eax]
  42cce2:	inc    DWORD PTR [ebp+0x0]
  42cce5:	xor    eax,0xff00d702
  42ccea:	dec    DWORD PTR [ebp+0x56f7ac00]
  42ccf0:	inc    DWORD PTR [eax]
  42ccf2:	int3   
  42ccf3:	hlt    
  42ccf4:	jmp    DWORD PTR [esi+0xff19ea]
  42ccfa:	jmp    FWORD PTR [ecx]
  42ccfc:	int3   
  42ccfd:	les    esi,FWORD PTR [eax+0x69]
  42cd00:	add    BYTE PTR [ebx-0x2e338a01],al
  42cd06:	mov    dl,0x6c
  42cd08:	inc    DWORD PTR [ebx-0x5b7c0a00]
  42cd0e:	es test al,0x83
  42cd11:	cmp    edi,0x3
  42cd14:	add    BYTE PTR [edi+0x830e3a],cl
  42cd1a:	(bad)  
  42cd1b:	cmp    bh,bh
  42cd1d:	lods   al,BYTE PTR ds:[esi]
  42cd1e:	cmp    BYTE PTR [eax],ch
  42cd20:	inc    DWORD PTR [ebx+0x5100fa00]
  42cd26:	and    eax,0xff838340
  42cd2b:	push   ecx
  42cd2c:	sbb    DWORD PTR [ebx],0x77
  42cd2f:	in     al,0xff
  42cd31:	(bad)  
  42cd32:	(bad)  
  42cd33:	mov    ebp,0x2f8105ff
  42cd38:	add    ah,cl
  42cd3a:	call   DWORD PTR [esi-0x1]
  42cd3d:	xor    edi,edx
  42cd3f:	jae    0x42cd41
  42cd41:	cmp    edi,0xffffff89
  42cd44:	int3   
  42cd45:	div    DWORD PTR [ebp+0x898382]
  42cd4b:	scas   eax,DWORD PTR es:[edi]
  42cd4c:	add    BYTE PTR ds:0xff001000,ch
  42cd52:	call   ebx
  42cd54:	jmp    FWORD PTR [edx-0xfffad9]
  42cd5a:	add    bl,ch
  42cd5c:	add    BYTE PTR [edi],ah
  42cd5e:	shl    BYTE PTR [eax+0x0],0x89
  42cd62:	call   DWORD PTR [ecx-0x1]
  42cd65:	jge    0x42cd38
  42cd67:	xor    al,BYTE PTR [ebx-0x33700034]
  42cd6d:	pop    ds
  42cd6e:	jg     0x42cdad
  42cd70:	add    BYTE PTR [ebx-0x3000dd34],al
  42cd76:	or     dl,bl
  42cd78:	inc    DWORD PTR [eax]
  42cd7a:	int3   
  42cd7b:	inc    ebp
  42cd7c:	call   ebx
  42cd7e:	jle    0x42cd09
  42cd80:	mov    edi,edi
  42cd82:	call   DWORD PTR [ecx+0x586bf6ff]
  42cd88:	(bad)  
  42cd89:	(bad)  
  42cd8a:	(bad)  
  42cd8b:	cmp    BYTE PTR [eax],al
  42cd8d:	nop
  42cd8e:	push   edx
  42cd8f:	xchg   ecx,eax
  42cd90:	inc    DWORD PTR [eax]
  42cd92:	jmp    FWORD PTR [esi-0x1]
  42cd95:	outs   dx,DWORD PTR ds:[esi]
  42cd96:	push   ebx
  42cd97:	lds    eax,FWORD PTR [ebx-0x490001]
  42cd9d:	int3   
  42cd9e:	stc    
  42cd9f:	ror    BYTE PTR [ecx-0x80100],cl
  42cda5:	neg    ecx
  42cda7:	xchg   esi,eax
  42cda8:	int3   
  42cda9:	inc    DWORD PTR [eax]
  42cdab:	mov    cs,esp
  42cdad:	mov    esp,0x8983144e
  42cdb2:	inc    DWORD PTR [eax+0x0]
  42cdb5:	loop   0x42cd6b
  42cdb7:	(bad)  
  42cdb8:	int3   
  42cdb9:	cmp    edi,0xffffffdd
  42cdbc:	jmp    FWORD PTR [edi-0xb961]
  42cdc2:	add    ch,cl
  42cdc4:	inc    DWORD PTR [esi-0x34]
  42cdc7:	leave  
  42cdc8:	inc    DWORD PTR [eax]
  42cdca:	adc    esp,0x0
  42cdcd:	add    edi,DWORD PTR [ebx+0x35]
  42cdd0:	mov    esp,ecx
  42cdd2:	jmp    ebx
  42cdd4:	add    cl,dh
  42cdd6:	mov    esp,0x83ff00f2
  42cddb:	inc    edi
  42cddc:	add    dh,bh
  42cdde:	jg     0x42ce14
  42cde0:	add    bh,bh
  42cde2:	push   edx
  42cde4:	add    BYTE PTR [ebx],dh
  42cde6:	outs   dx,DWORD PTR ds:[esi]
  42cde7:	xor    eax,0x8fffff83
  42cdec:	mov    DWORD PTR [ebx-0xff749a],ebp
  42cdf2:	call   DWORD PTR [esi-0x1]
  42cdf5:	gs mov ebp,0x89ff001f
  42cdfb:	test   eax,0x7d600700
  42ce00:	add    bh,bh
  42ce02:	call   DWORD PTR [ebp-0x1]
  42ce05:	xchg   edx,eax
  42ce06:	(bad)  
  42ce07:	repz (bad) 
  42ce09:	(bad)  
  42ce0a:	(bad)  
  42ce0b:	aas    
  42ce0c:	xor    DWORD PTR [edi],0xffffffc6
  42ce0f:	pop    ebp
  42ce10:	mov    DWORD PTR [eax],eax
  42ce12:	inc    DWORD PTR [ebx+0x344e1dcc]
  42ce18:	add    DWORD PTR [eax],0xffffffff
  42ce1b:	mov    WORD PTR [eax],es
  42ce1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce1e:	cmp    BYTE PTR [edi-0x7d],dl
  42ce21:	cmp    edi,0x56
  42ce24:	add    cl,dl
  42ce26:	push   cs
  42ce27:	idiv   edi
  42ce29:	dec    esp
  42ce2b:	cmp    eax,0x123684ff
  42ce30:	add    DWORD PTR [eax],0xffffffff
  42ce33:	fcmove st,st(4)
  42ce35:	test   eax,0xff00b74d
  42ce3a:	(bad)  
  42ce3b:	jge    0x42ce3d
  42ce3d:	or     ch,BYTE PTR [esi]
  42ce3f:	loopne 0x42ce41
  42ce41:	mov    DWORD PTR [eax],eax
  42ce43:	nop
  42ce44:	inc    DWORD PTR [edi]
  42ce46:	call   ebp
  42ce48:	int3   
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	fdiv   st(7),st
  42ce4d:	popf   
  42ce4e:	sahf   
  42ce4f:	ror    esp,1
  42ce51:	add    BYTE PTR [eax],al
  42ce53:	js     0x42ce54
  42ce55:	add    ah,al
  42ce57:	icebp  
  42ce58:	inc    DWORD PTR [eax]
  42ce5a:	add    BYTE PTR [esi+0x14784000],dh
  42ce60:	add    bh,bh
  42ce62:	inc    ecx
  42ce64:	add    eax,0x49
  42ce67:	push   edx
  42ce68:	(bad)  
  42ce69:	inc    DWORD PTR [eax]
  42ce6b:	add    BYTE PTR fs:[esi+0xff6c86],dl
  42ce72:	jmp    FWORD PTR [eax-0x3f11ad7d]
  42ce78:	(bad)  
  42ce79:	inc    DWORD PTR [eax]
  42ce7b:	pop    ebx
  42ce7c:	mov    DWORD PTR [eax-0x2c],ebx
  42ce7f:	sahf   
  42ce80:	(bad)  
  42ce81:	inc    DWORD PTR [eax]
  42ce83:	das    
  42ce84:	jmp    FWORD PTR [edi+0x831a25]
  42ce8a:	add    ah,cl
  42ce8c:	xor    DWORD PTR [esi],0xffffffcb
  42ce8f:	lods   eax,DWORD PTR ds:[esi]
  42ce90:	or     esp,0xffffff83
  42ce93:	call   0x43004b64
  42ce98:	(bad)  
  42ce99:	inc    DWORD PTR [eax]
  42ce9b:	aaa    
  42ce9c:	sub    DWORD PTR [ecx+0x47],0xffffffff
  42cea0:	inc    DWORD PTR [eax]
  42cea2:	jmp    DWORD PTR [eax]
  42cea4:	add    BYTE PTR ds:0xff00bc5e,cl
  42ceaa:	jmp    FWORD PTR [ecx]
  42ceac:	add    BYTE PTR [ecx],dl
  42ceae:	mov    ecx,0x830060
  42ceb3:	das    
  42ceb4:	mov    DWORD PTR [ecx+0x830048],eax
  42ceba:	adc    edx,0xffffffff
  42cebd:	xchg   esi,eax
  42cebe:	jp     0x42cf32
  42cec0:	add    ah,cl
  42cec2:	jmp    DWORD PTR [edi]
  42cec4:	mov    DWORD PTR [esi+eax*1+0x83cc15],edx
  42cecb:	mov    esp,0x5a1ddb83
  42ced0:	add    DWORD PTR [eax],0x0
  42ced3:	retf   0x3100
  42ced6:	sub    ch,BYTE PTR [eax-0x307c7d00]
  42cedc:	inc    DWORD PTR [edx]
  42cede:	xchg   ebx,eax
  42cedf:	adc    edi,edi
  42cee1:	dec    DWORD PTR [ecx+0x460ecc8e]
  42cee7:	mov    bh,bh
  42cee9:	inc    DWORD PTR [eax]
  42ceeb:	add    al,BYTE PTR [eax]
  42ceed:	cmp    DWORD PTR ds:0x89ff00d8,ebp
  42cef3:	fadd   QWORD PTR [eax]
  42cef5:	inc    eax
  42cef6:	xchg   BYTE PTR [ebp-0x1],bl
  42cef9:	inc    DWORD PTR [ebx-0x42ac00b8]
  42ceff:	mov    dl,0x0
  42cf01:	dec    esp
  42cf03:	sbb    al,0x0
  42cf05:	mov    esp,gs
  42cf07:	test   al,0xff
  42cf09:	or     esp,0x41
  42cf0c:	add    BYTE PTR [edx*1+0xab],dl
  42cf13:	call   FWORD PTR ss:[ebx+ebx*2-0x77]
  42cf18:	mov    DWORD PTR [ebx+0xf003fff],eax
  42cf1e:	icebp  
  42cf1f:	(bad)  
  42cf20:	(bad)  
  42cf21:	inc    DWORD PTR [eax]
  42cf23:	loope  0x42cf24
  42cf25:	jo     0x42cf22
  42cf27:	add    DWORD PTR [eax],0x835000ff
  42cf2d:	dec    ebx
  42cf2e:	out    dx,al
  42cf2f:	xor    eax,DWORD PTR [eax]
  42cf31:	inc    DWORD PTR [ebx-0x39c0008d]
  42cf37:	rol    DWORD PTR [ebx-0xef0100],0x6
  42cf3e:	jp     0x42ceda
  42cf40:	dec    esp
  42cf42:	call   FWORD PTR [edi+edi*8+0xa999d4]
  42cf49:	int3   
  42cf4a:	jmp    FWORD PTR [ebp-0x34]
  42cf4d:	dec    esp
  42cf4e:	or     eax,0xffffcc39
  42cf53:	adc    edi,edi
  42cf55:	adc    eax,0xffff91e5
  42cf5a:	mov    DWORD PTR [eax+0x224058ff],ebx
  42cf60:	mov    edi,edi
  42cf62:	mov    DWORD PTR [esi+0x58000eff],esp
  42cf68:	(bad)  
  42cf69:	inc    DWORD PTR [eax]
  42cf6b:	push   esi
  42cf6c:	add    cl,ch
  42cf6e:	rol    BYTE PTR [ebx+eax*4],cl
  42cf71:	mov    DWORD PTR [eax],eax
  42cf73:	test   BYTE PTR [ecx-0x7c28127f],cl
  42cf79:	dec    esp
  42cf7b:	aam    0xff
  42cf7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cf7e:	or     ch,BYTE PTR [eax]
  42cf80:	inc    DWORD PTR [eax]
  42cf82:	mov    esp,ebp
  42cf84:	push   esp
  42cf86:	pop    esi
  42cf87:	fiadd  DWORD PTR [ebx-0x530100]
  42cf8d:	jge    0x42d00a
  42cf8f:	xor    BYTE PTR [eax],al
  42cf91:	inc    DWORD PTR [ebx-0x6992004d]
  42cf97:	dec    esi
  42cf98:	add    bh,bh
  42cf9a:	inc    edi
  42cf9c:	sub    DWORD PTR [ebp-0xde14],0x0
  42cfa3:	jle    0x42cfa4
  42cfa5:	mov    dl,0xf1
  42cfa7:	pop    ss
  42cfa8:	dec    DWORD PTR [ecx-0x6400d001]
  42cfae:	push   edi
  42cfaf:	jmp    0x6b4252b4
  42cfb4:	and    DWORD PTR [ebx-0x5694],0xffffff83
  42cfbb:	pop    ds
  42cfbc:	call   FWORD PTR [edi+eiz*8]
  42cfbf:	leave  
  42cfc0:	or     esp,0xffffffff
  42cfc3:	add    al,0x0
  42cfc5:	pop    ds
  42cfc6:	rol    DWORD PTR [edi+0x1dff83ff],cl
  42cfcc:	call   FWORD PTR [esi]
  42cfce:	xchg   esp,eax
  42cfcf:	sbb    eax,0xdeff8300
  42cfd4:	push   DWORD PTR [ebx-0x7cd303]
  42cfda:	(bad)  
  42cfdb:	jl     0x42cfdd
  42cfdd:	xor    DWORD PTR [bx+di],edi
  42cfe0:	(bad)  
  42cfe1:	dec    esp
  42cfe3:	out    0xff,eax
  42cfe5:	retf   
  42cfe6:	icebp  
  42cfe7:	sub    BYTE PTR [eax],al
  42cfe9:	add    DWORD PTR [ebx+0x2945ff74],0xffffffc4
  42cff0:	add    bh,bh
  42cff2:	call   DWORD PTR [ebp-0x77]
  42cff5:	pop    ebx
  42cff6:	and    cl,bl
  42cff8:	add    BYTE PTR [eax],al
  42cffa:	and    DWORD PTR [edx+0x0],0x5d
  42cffe:	call   0x1425323
  42d003:	push   eax
  42d004:	add    al,ch
  42d006:	call   0xcd0ed0fd
  42d00b:	push   ebx
  42d00c:	push   ebp
  42d00e:	std    
  42d00f:	cdq    
  42d010:	add    bh,bh
  42d012:	add    BYTE PTR [ebx],ah
  42d014:	add    DWORD PTR [eax-0x76005343],0xffffffcc
  42d01b:	sub    eax,DWORD PTR [eax]
  42d01d:	inc    esp
  42d01e:	cmc    
  42d01f:	or     eax,0xf0ff8300
  42d024:	add    bl,ah
  42d026:	xchg   bh,al
  42d028:	inc    DWORD PTR [eax]
  42d02a:	sub    DWORD PTR [edx],0x0
  42d02d:	jmp    DWORD PTR [eax-0xff0020]
  42d033:	ds int3 
  42d035:	push   ds
  42d036:	cmp    BYTE PTR [edi+edi*8-0x335f0000],ch
  42d03d:	mov    ecx,0x831ee9
  42d042:	dec    DWORD PTR ds:0x398bf4cc
  42d048:	inc    DWORD PTR [eax]
  42d04a:	add    BYTE PTR [edi+0x75c0bdff],bh
  42d050:	add    DWORD PTR [eax],0xffffffcc
  42d053:	lds    ecx,FWORD PTR [ecx-0x768517ac]
  42d059:	(bad)  
  42d05a:	inc    DWORD PTR [ebx]
  42d05c:	cmp    esp,0x5c
  42d05f:	ret    
  42d060:	add    BYTE PTR [eax],al
  42d062:	call   DWORD PTR [edx+0xb373bff]
  42d068:	inc    DWORD PTR [eax]
  42d06a:	add    dl,bh
  42d06c:	(bad)  
  42d06d:	fild   WORD PTR [ebx]
  42d06f:	pop    edi
  42d070:	inc    DWORD PTR [eax]
  42d072:	sbb    DWORD PTR [edx],0xffffffcc
  42d075:	mov    esp,0x83ff46ca
  42d07a:	jmp    DWORD PTR [ebx]
  42d07c:	call   eax
  42d07e:	ror    BYTE PTR [eax-0x34],0x0
  42d082:	mov    eax,ebp
  42d084:	(bad)  
  42d085:	fstp   TBYTE PTR ds:0xff000030
  42d08b:	repz int3 
  42d08d:	mov    edi,0xffb272
  42d092:	dec    ebx
  42d094:	or     ecx,0xfffffff9
  42d097:	xor    eax,0x2dff8300
  42d09c:	(bad)  
  42d09d:	jle    0x42d04b
  42d09f:	inc    ebx
  42d0a0:	dec    DWORD PTR [ecx+0x24007bff]
  42d0a6:	pop    ss
  42d0a7:	xchg   ecx,eax
  42d0a8:	(bad)  
  42d0a9:	inc    DWORD PTR [eax]
  42d0ab:	adc    BYTE PTR [eax],al
  42d0ad:	mov    bl,ch
  42d0af:	pop    ss
  42d0b0:	mov    edi,edi
  42d0b2:	int3   
  42d0b3:	scas   al,BYTE PTR es:[edi]
  42d0b4:	add    BYTE PTR [eax],cl
  42d0b6:	xor    eax,0x8389c9
  42d0bb:	add    edi,edi
  42d0bd:	(bad)  
  42d0be:	cmp    al,0x62
  42d0c0:	add    DWORD PTR [ebx+0x15ff6e00],0xfffffff1
  42d0c7:	pop    edx
  42d0c8:	add    BYTE PTR [eax],al
  42d0ca:	dec    DWORD PTR [ebp-0x7d]
  42d0cd:	mov    ds:0xffd88a,eax
  42d0d2:	add    BYTE PTR [ecx-0x1],ah
  42d0d5:	mov    DWORD PTR [edx-0x69],edi
  42d0d8:	add    bh,bh
  42d0da:	dec    DWORD PTR [esi+0x55f41e83]
  42d0e0:	cmp    edi,0xffffffcc
  42d0e3:	and    DWORD PTR [eax],eax
  42d0e5:	lahf   
  42d0e6:	jmp    0x42d083
  42d0e8:	add    BYTE PTR [eax],al
  42d0ea:	add    BYTE PTR [ebx-0x34],bh
  42d0ed:	xlat   BYTE PTR ds:[ebx]
  42d0ee:	push   0xccffffb8
  42d0f3:	hlt    
  42d0f4:	add    bl,bl
  42d0f6:	adc    dl,BYTE PTR [eax-0x1]
  42d0f9:	add    BYTE PTR [eax],al
  42d0fb:	les    eax,FWORD PTR [ebx-0x7c7c0095]
  42d101:	add    bh,bh
  42d103:	add    BYTE PTR gs:[eax+0x8253],cl
  42d10a:	(bad)  
  42d10b:	fcos   
  42d10d:	xchg   esi,eax
  42d10e:	pop    es
  42d10f:	lods   al,BYTE PTR ds:[esi]
  42d110:	(bad)  
  42d111:	inc    DWORD PTR [ebx-0x65617c5b]
  42d117:	aad    0x0
  42d119:	mov    DWORD PTR [ebx+0x5546004c],eax
  42d11f:	test   DWORD PTR [ecx+0xd6ffff],0xff5e161f
  42d129:	mov    edi,edi
  42d12b:	mov    esp,cs
  42d12d:	add    eax,0xa32a
  42d132:	jmp    FWORD PTR [edi-0x34]
  42d135:	jmp    0x42d15d
  42d137:	fld    QWORD PTR [eax]
  42d139:	inc    DWORD PTR [eax]
  42d13b:	test   BYTE PTR [ebx-0x768dbb8d],al
  42d141:	inc    DWORD PTR [eax]
  42d143:	in     al,dx
  42d144:	(bad)  
  42d145:	fbld   TBYTE PTR [ebx]
  42d147:	mov    dl,0x0
  42d149:	inc    DWORD PTR [eax]
  42d14b:	(bad)  
  42d14c:	call   DWORD PTR [ecx-0x6a]
  42d14f:	rol    DWORD PTR [eax],0xff
  42d152:	add    cl,cl
  42d154:	add    bh,cl
  42d156:	adc    DWORD PTR [edi],ebp
  42d158:	(bad)  
  42d159:	inc    DWORD PTR [eax]
  42d15b:	stos   BYTE PTR es:[edi],al
  42d15c:	add    BYTE PTR [ecx+0xcceafd],al
  42d162:	jmp    edx
  42d164:	call   DWORD PTR [eax+0x2e]
  42d167:	jecxz  0x42d168
  42d169:	int3   
  42d16a:	add    dl,dl
  42d16c:	call   edi
  42d16e:	push   edi
  42d16f:	mov    BYTE PTR [ebx-0x7cdb0001],al
  42d175:	pop    esi
  42d176:	mov    ebp,0xff0089b7
  42d17b:	mov    edi,0xbb52b0ff
  42d180:	add    BYTE PTR [eax],al
  42d182:	(bad)  
  42d183:	mov    edi,0x10ed6f00
  42d188:	(bad)  
  42d189:	dec    esp
  42d18b:	xchg   esi,eax
  42d18c:	jmp    FWORD PTR [esi-0x7cb817]
  42d192:	add    BYTE PTR [edi-0x7d],ah
  42d195:	imul   ebx,DWORD PTR [edx-0x3300d8],0xffffffc7
  42d19c:	push   DWORD PTR [esi-0x3313e5]
  42d1a2:	or     DWORD PTR [ecx],0xffffffff
  42d1a5:	jbe    0x42d1a9
  42d1a7:	pop    ss
  42d1a8:	cmp    edi,0x0
  42d1ab:	jecxz  0x42d1ac
  42d1ad:	jbe    0x42d21a
  42d1af:	add    DWORD PTR [eax],eax
  42d1b1:	inc    DWORD PTR [eax]
  42d1b3:	(bad)  
  42d1b4:	jmp    FWORD PTR [ebx-0x67]
  42d1b7:	push   0xffffffff
  42d1b9:	cmp    edi,0x33
  42d1bc:	add    BYTE PTR [eax-0x53],dl
  42d1bf:	clc    
  42d1c0:	(bad)  
  42d1c1:	(bad)  
  42d1c2:	call   esi
  42d1c4:	call   FWORD PTR [esi]
  42d1c6:	pop    eax
  42d1c7:	adc    eax,0x6d83ff89
  42d1cc:	call   FWORD PTR [esi]
  42d1ce:	sub    DWORD PTR [edi+0x62ffcc00],esi
  42d1d4:	mov    eax,esi
  42d1d6:	ror    DWORD PTR [eax],0x89
  42d1d9:	add    bh,bh
  42d1db:	fadd   QWORD PTR [eax]
  42d1dd:	mov    edi,0xff832001
  42d1e2:	call   DWORD PTR [ecx-0x1]
  42d1e5:	jecxz  0x42d173
  42d1e7:	cmp    al,0x0
  42d1e9:	inc    DWORD PTR [eax]
  42d1eb:	or     al,0xff
  42d1ed:	pusha  
  42d1ee:	int    0x49
  42d1f0:	inc    DWORD PTR [ebx+0x67ff20ff]
  42d1f6:	xchg   esi,eax
  42d1f7:	or     eax,DWORD PTR [eax]
  42d1f9:	add    ah,cl
  42d1fb:	lahf   
  42d1fc:	jmp    FWORD PTR [ebp+0x67]
  42d1ff:	outs   dx,BYTE PTR ds:[esi]
  42d200:	inc    DWORD PTR [ebx-0x28338800]
  42d206:	push   0x7f
  42d208:	cmp    edi,0xffffffff
  42d20b:	push   esi
  42d20c:	cmp    DWORD PTR [esi+0x32],0x7a
  42d210:	add    bh,bh
  42d212:	add    BYTE PTR [ebx+0x0],ch
  42d215:	fs inc ebx
  42d217:	push   es
  42d218:	(bad)  
  42d219:	(bad)  
  42d21a:	call   FWORD PTR [eax-0x5bd3f400]
  42d220:	inc    DWORD PTR [eax]
  42d222:	(bad)  
  42d223:	cmp    edi,edi
  42d225:	fldenv ds:0x83ff0032
  42d22b:	sub    edi,edi
  42d22d:	sub    ebp,DWORD PTR [eax-0x9]
  42d230:	add    bh,bh
  42d232:	jmp    DWORD PTR [ebx-0x1]
  42d235:	push   esp
  42d236:	leave  
  42d237:	mov    esi,0xd8ffccff
  42d23c:	jmp    FWORD PTR [ecx]
  42d23e:	addr16 add eax,0x98ff0083
  42d244:	add    BYTE PTR [edi+0x835387],bl
  42d24a:	mov    DWORD PTR [edx],eax
  42d24c:	int3   
  42d24d:	and    al,0xef
  42d24f:	in     eax,0xcc
  42d251:	add    bh,bh
  42d253:	rol    DWORD PTR [ebx-0x7c774b79],1
  42d259:	inc    DWORD PTR [eax]
  42d25b:	idiv   bh
  42d25d:	and    edx,DWORD PTR [eax+0x83ff85]
  42d263:	inc    esi
  42d264:	jmp    DWORD PTR [edx+eax*1-0x18]
  42d268:	add    bh,bh
  42d26a:	mov    DWORD PTR [edx-0x5d165a01],edi
  42d270:	inc    DWORD PTR [eax]
  42d272:	(bad)  
  42d273:	mov    ecx,0xbf916eff
  42d278:	add    DWORD PTR [ebx-0x79006834],0xffffffbf
  42d27f:	bound  eax,QWORD PTR [eax]
  42d281:	int3   
  42d282:	add    BYTE PTR [ebp-0x12e500],bl
  42d288:	add    BYTE PTR [ebx-0x3b7c9100],al
  42d28e:	imul   ecx,esi,0x0
  42d291:	add    bh,bh
  42d293:	sbb    al,0xcc
  42d295:	sbb    ch,BYTE PTR [esi]
  42d297:	lock int3 
  42d299:	add    bh,bh
  42d29b:	inc    edi
  42d29c:	add    BYTE PTR [eax-0xff6b03],cl
  42d2a2:	jmp    FWORD PTR [esi]
  42d2a4:	add    BYTE PTR [esi-0x58],dh
  42d2a7:	repz add ah,cl
  42d2aa:	call   FWORD PTR ds:0x8189ddcc
  42d2b0:	add    bh,bh
  42d2b2:	and    DWORD PTR [esi-0x34],0xffffffcf
  42d2b6:	mov    cl,0x44
  42d2b8:	add    BYTE PTR [ebx-0x117c0034],al
  42d2be:	ficomp DWORD PTR [edi]
  42d2c0:	add    BYTE PTR [ecx-0x56001e01],cl
  42d2c6:	test   DWORD PTR [bx+si],eax
  42d2c9:	(bad)  
  42d2ca:	(bad)  
  42d2cb:	inc    DWORD PTR [eax]
  42d2cd:	or     dl,al
  42d2cf:	mov    eax,0xf9838900
  42d2d4:	add    DWORD PTR [edx+0x26],0xe
  42d2d8:	int3   
  42d2d9:	add    BYTE PTR [eax],al
  42d2db:	fiadd  DWORD PTR [eax]
  42d2dd:	idiv   DWORD PTR [edx+0x66]
  42d2e0:	(bad)  
  42d2e1:	(bad)  
  42d2e2:	jmp    DWORD PTR [edi]
  42d2e4:	add    bh,ch
  42d2e6:	jecxz  0x42d316
  42d2e8:	(bad)  
  42d2e9:	inc    DWORD PTR [eax]
  42d2eb:	push   0x5c177acc
  42d2f0:	add    BYTE PTR [ebx+0x3bffdbff],al
  42d2f6:	or     eax,0xff89f2
  42d2fb:	popf   
  42d2fc:	int3   
  42d2fd:	mov    cl,0xad
  42d2ff:	dec    esp
  42d300:	(bad)  
  42d301:	(bad)  
  42d302:	jmp    esp
  42d304:	(bad)  
  42d305:	mov    ebp,0xffff60e6
  42d30a:	add    BYTE PTR [ebp+0x0],ah
  42d30d:	xlat   BYTE PTR ds:[ebx]
  42d30e:	xor    bh,ch
  42d310:	(bad)  
  42d311:	inc    DWORD PTR [eax]
  42d313:	adc    bh,bh
  42d315:	cwde   
  42d316:	jns    0x42d373
  42d318:	(bad)  
  42d319:	(bad)  
  42d31a:	call   DWORD PTR [esi+0x3b97dff]
  42d320:	mov    DWORD PTR [ebx-0x1effe534],eax
  42d326:	shl    BYTE PTR [edi],0xff
  42d329:	add    DWORD PTR [ebx-0x20cc0044],0x30
  42d330:	mov    DWORD PTR [eax],eax
  42d332:	add    BYTE PTR [eax-0x1],dl
  42d335:	fs jge 0x42d2df
  42d338:	add    BYTE PTR [eax],al
  42d33a:	mov    DWORD PTR [eax],ecx
  42d33c:	call   DWORD PTR [edx-0x7c76dc38]
  42d342:	jmp    DWORD PTR [ebx-0x7426bb00]
  42d348:	(bad)  
  42d349:	inc    DWORD PTR [eax]
  42d34b:	cld    
  42d34c:	dec    DWORD PTR [eax]
  42d34e:	mov    bl,0xf3
  42d350:	add    bh,bh
  42d352:	add    BYTE PTR [eax+0x0],dl
  42d355:	sub    DWORD PTR [ecx+0x38],edi
  42d358:	dec    esp
  42d35a:	sub    DWORD PTR [esi+0x62fa6bff],0xffffffff
  42d361:	(bad)  
  42d362:	call   FWORD PTR [edi-0x84e1c00]
  42d368:	cmp    edi,0x0
  42d36b:	inc    esp
  42d36c:	int3   
  42d36d:	jne    0x42d34a
  42d36f:	loopne 0x42d370
  42d371:	inc    DWORD PTR [eax]
  42d373:	jne    0x42d374
  42d375:	out    dx,eax
  42d376:	adc    bh,bl
  42d378:	inc    DWORD PTR [eax]
  42d37a:	dec    DWORD PTR [ebx-0x7bcefe01]
  42d380:	inc    DWORD PTR [eax]
  42d382:	add    BYTE PTR [edx],dh
  42d384:	jmp    edx
  42d386:	jmpw   0xd28a
  42d38a:	add    ah,ch
  42d38c:	add    BYTE PTR [ecx+0x5f44],bh
  42d392:	add    BYTE PTR [edi],dl
  42d394:	xor    DWORD PTR [edi-0xff51b8],0xffffffcc
  42d39b:	dec    edx
  42d39c:	(bad)  
  42d39d:	cld    
  42d39e:	test   DWORD PTR [ebx-0x7d],esp
  42d3a1:	(bad)  
  42d3a2:	dec    DWORD PTR [eax+eax*1+0xb9dc]
  42d3a9:	inc    DWORD PTR [ebx+0x21cb00ad]
  42d3af:	jle    0x42d334
  42d3b1:	add    bh,bh
  42d3b3:	pop    ebx
  42d3b4:	cmp    DWORD PTR [esi+0x35],0x5b
  42d3b8:	mov    DWORD PTR [eax],eax
  42d3ba:	jmp    FWORD PTR [edi]
  42d3bc:	dec    DWORD PTR [edx+ebp*1-0x55]
  42d3c0:	cmp    edi,0xffffffff
  42d3c3:	cmp    al,0x0
  42d3c5:	pop    ecx
  42d3c6:	imul   esp,DWORD PTR [ecx-0x77],0xff6683ff
  42d3cd:	hlt    
  42d3ce:	inc    eax
  42d3cf:	inc    BYTE PTR [ebx-0x56ff34]
  42d3d5:	stc    
  42d3d6:	mov    ds,WORD PTR [esi-0x4d007c01]
  42d3dc:	dec    DWORD PTR [eax]
  42d3de:	mov    eax,ds:0xfffffc
  42d3e3:	pop    edi
  42d3e4:	call   esp
  42d3e6:	jmp    0x8342d445
  42d3eb:	mov    edx,0xe10b76ff
  42d3f0:	(bad)  
  42d3f1:	dec    esp
  42d3f3:	xlat   BYTE PTR ds:[ebx]
  42d3f4:	add    BYTE PTR ds:0x83009103,al
  42d3fa:	int3   
  42d3fb:	adc    eax,0xdaf71000
  42d400:	(bad)  
  42d401:	dec    DWORD PTR [ecx-0x780d7cde]
  42d407:	clc    
  42d408:	add    bh,bh
  42d40a:	mov    DWORD PTR [eax-0x1],ebp
  42d40d:	jl     0x42d43d
  42d40f:	pop    ebp
  42d410:	mov    DWORD PTR [ebx-0x64fffa34],eax
  42d416:	rcl    DWORD PTR [edi+edi*8-0x34],1
  42d41a:	cmp    esi,0xffffffff
  42d41d:	ds (bad) 
  42d41f:	scas   eax,DWORD PTR es:[edi]
  42d420:	add    BYTE PTR [eax],al
  42d422:	inc    DWORD PTR [edx-0x1]
  42d425:	push   edi
  42d426:	call   0xae:0x83ffff15
  42d42d:	sub    ebp,ebx
  42d42f:	ins    DWORD PTR es:[edi],dx
  42d430:	cmp    edi,0xffffffff
  42d433:	loopne 0x42d434
  42d435:	push   edi
  42d436:	cmp    edi,edi
  42d438:	inc    DWORD PTR [eax]
  42d43a:	add    BYTE PTR [edi],bh
  42d43c:	add    cl,bl
  42d43e:	call   0xccbe:0x83cc8942
  42d445:	jbe    0x42d3ef
  42d447:	sbb    al,BYTE PTR [eax]
  42d449:	mov    edi,edi
  42d44b:	js     0x42d44d
  42d44d:	cwde   
  42d44e:	xor    eax,0xff00ff31
  42d453:	rol    DWORD PTR [eax],0x8b
  42d456:	jmp    0x425e48
  42d45b:	add    edi,edi
  42d45d:	(bad)  
  42d45e:	rcl    cl,0xff
  42d461:	cmp    edi,0xffffffef
  42d464:	and    DWORD PTR [eax-0x1d],0x5
  42d468:	add    bh,bh
  42d46a:	call   FWORD PTR [edi]
  42d46c:	add    BYTE PTR [eax-0xffb034],al
  42d472:	or     esp,0xffffffff
  42d475:	or     bh,BYTE PTR [edi+esi*2-0x1]
  42d479:	dec    esp
  42d47b:	adc    bh,bh
  42d47d:	xchg   ebp,eax
  42d47e:	xchg   esp,eax
  42d47f:	jmp    0x42d480
  42d481:	dec    esp
  42d483:	push   ecx
  42d484:	dec    ebp
  42d486:	imul   ebp,DWORD PTR [ecx],0x0
  42d489:	cmp    edi,0xa
  42d48c:	jmp    DWORD PTR [ebp+0x79]
  42d48f:	hlt    
  42d490:	int3   
  42d491:	cmp    edi,0x8
  42d494:	add    BYTE PTR [ebx-0xc273],ah
  42d49a:	(bad)  
  42d49b:	jp     0x42d49c
  42d49d:	inc    ecx
  42d49e:	xchg   edx,eax
  42d49f:	add    eax,0x52ccff00
  42d4a4:	sbb    DWORD PTR [esi-0xd3b0],0xffffff83
  42d4ab:	ja     0x42d4ac
  42d4ad:	ds add al,0xee
  42d4b0:	add    bh,bh
  42d4b2:	mov    DWORD PTR [edi],ecx
  42d4b4:	dec    DWORD PTR [esi-0x7c33190c]
  42d4ba:	add    dh,al
  42d4bc:	add    BYTE PTR [ebx],dh
  42d4be:	mov    ah,0x7a
  42d4c0:	int3   
  42d4c1:	(bad)  
  42d4c2:	call   FWORD PTR [ecx+0x975289]
  42d4c8:	add    DWORD PTR [ebx-0x61336634],0x39
  42d4cf:	iret   
  42d4d0:	inc    DWORD PTR [eax]
  42d4d2:	add    DWORD PTR [ecx-0x1],0x2
  42d4d6:	jmp    0x8943d44a
  42d4db:	fdiv   st(7),st
  42d4dd:	dec    ebx
  42d4de:	add    ah,BYTE PTR [edi+edi*8+0x0]
  42d4e2:	jmp    DWORD PTR [edi+edi*8]
  42d4e5:	ret    
  42d4e6:	push   esi
  42d4e7:	jle    0x42d4e9
  42d4e9:	add    bh,bh
  42d4eb:	mov    dl,0x0
  42d4ed:	sti    
  42d4ee:	jo     0x42d4c0
  42d4f0:	(bad)  
  42d4f1:	inc    DWORD PTR [eax]
  42d4f3:	add    eax,0xca62a0ff
  42d4f8:	inc    DWORD PTR [eax]
  42d4fa:	add    bl,dh
  42d4fc:	call   DWORD PTR [esi-0xffd7f3]
  42d502:	int3   
  42d503:	sbb    bh,bh
  42d505:	adc    al,0x10
  42d507:	addr16 (bad) 
  42d509:	inc    DWORD PTR [eax]
  42d50b:	cmp    edi,0x7f
  42d50e:	dec    ebp
  42d50f:	(bad)  
  42d510:	inc    DWORD PTR [eax]
  42d512:	push   DWORD PTR [edi]
  42d514:	mov    DWORD PTR [edi],eax
  42d516:	push   DWORD PTR [ebx]
  42d518:	add    BYTE PTR [eax],al
  42d51a:	int3   
  42d51b:	push   es
  42d51c:	add    BYTE PTR [edi-0x63],bh
  42d51f:	adc    al,BYTE PTR [eax]
  42d521:	add    BYTE PTR [eax],al
  42d523:	adc    eax,0xd1e987ff
  42d528:	add    BYTE PTR [eax],al
  42d52a:	mov    DWORD PTR [ebx+0x0],edx
  42d52d:	add    eax,0x89ff3959
  42d532:	int3   
  42d533:	ja     0x42d501
  42d535:	cld    
  42d536:	dec    esi
  42d537:	cli    
  42d538:	dec    esp
  42d53a:	push   DWORD PTR [ebx]
  42d53c:	(bad)  
  42d53d:	aas    
  42d53e:	push   esi
  42d53f:	and    eax,0xff0000
  42d544:	adc    DWORD PTR [edi],0x15
  42d547:	call   0x6f83:0x890000ff
  42d54e:	sub    cl,BYTE PTR [ebp-0x2f7cff7d]
  42d554:	jmp    esp
  42d556:	sahf   
  42d557:	and    eax,DWORD PTR [eax]
  42d559:	inc    DWORD PTR [eax]
  42d55b:	dec    edi
  42d55c:	mov    DWORD PTR [edx],ebp
  42d55e:	pusha  
  42d55f:	or     al,BYTE PTR [eax]
  42d561:	int3   
  42d562:	add    BYTE PTR [esi],ah
  42d564:	(bad)  
  42d565:	jns    0x42d5ad
  42d567:	js     0x42d568
  42d569:	add    bh,bh
  42d56b:	sub    BYTE PTR [eax],al
  42d56d:	popa   
  42d56e:	inc    edi
  42d56f:	xchg   ebx,eax
  42d570:	(bad)  
  42d571:	(bad)  
  42d572:	jmp    FWORD PTR ds:0xecd2b6ff
  42d578:	inc    DWORD PTR [ebx+0xafffeff]
  42d57e:	jae    0x42d5a7
  42d580:	add    DWORD PTR [eax],0xffffffcc
  42d583:	jo     0x42d584
  42d585:	mov    al,ds:0xffcd11
  42d58a:	add    esi,0xffffffff
  42d58d:	out    dx,al
  42d58e:	mov    ds:0xff77,al
  42d593:	gs int3 
  42d595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d596:	clc    
  42d597:	fld    DWORD PTR [eax]
  42d599:	(bad)  
  42d59a:	jmp    FWORD PTR [edi-0x9f2d601]
  42d5a0:	add    BYTE PTR [ecx-0x5c005d34],cl
  42d5a6:	in     al,0xf
  42d5a8:	add    bh,bh
  42d5aa:	inc    DWORD PTR [ebx]
  42d5ac:	sub    esi,0xffffffe3
  42d5af:	aas    
  42d5b0:	inc    DWORD PTR [ebx-0x63000b00]
  42d5b6:	stos   BYTE PTR es:[edi],al
  42d5b7:	cld    
  42d5b8:	(bad)  
  42d5b9:	(bad)  
  42d5ba:	dec    DWORD PTR [edi]
  42d5bc:	call   FWORD PTR [edx]
  42d5be:	cmp    esp,DWORD PTR [eax]
  42d5c0:	add    bh,bh
  42d5c2:	add    BYTE PTR [eax-0x77],al
  42d5c5:	pop    ss
  42d5c6:	lods   eax,DWORD PTR ds:[esi]
  42d5c7:	xor    bh,bh
  42d5c9:	add    DWORD PTR [eax],0x66
  42d5cc:	inc    DWORD PTR [ebx-0x80]
  42d5cf:	push   0x0
  42d5d1:	inc    DWORD PTR [eax]
  42d5d3:	jecxz  0x42d5d5
  42d5d5:	cmp    al,0x47
  42d5d7:	in     eax,0x89
  42d5d9:	add    BYTE PTR [ecx+0x11bcccf7],cl
  42d5df:	clc    
  42d5e0:	inc    DWORD PTR [eax]
  42d5e2:	sub    esp,0xffffffff
  42d5e5:	or     al,0xd
  42d5e7:	jp     0x42d56c
  42d5e9:	dec    DWORD PTR [ecx+0x615dff08]
  42d5ef:	jno    0x42d5f1
  42d5f1:	mov    DWORD PTR [eax],eax
  42d5f3:	in     eax,dx
  42d5f4:	call   FWORD PTR [edi]
  42d5f6:	gs (bad) 
  42d5f9:	add    BYTE PTR [eax],al
  42d5fb:	fadd   QWORD PTR [eax]
  42d5fd:	fst    DWORD PTR [ebx-0x7c002b]
  42d603:	arpl   sp,cx
  42d605:	je     0x42d5af
  42d607:	pop    ecx
  42d608:	add    BYTE PTR [eax],al
  42d60a:	call   DWORD PTR [edx]
  42d60c:	(bad)  
  42d60d:	std    
  42d60e:	dec    esp
  42d60f:	xor    eax,DWORD PTR [eax]
  42d611:	inc    DWORD PTR [ebx-0x6ce6ff32]
  42d617:	in     eax,0xff
  42d619:	(bad)  
  42d61a:	push   DWORD PTR ds:0x248f7f00
  42d620:	add    ah,cl
  42d622:	add    al,dh
  42d624:	add    BYTE PTR [ebp-0xff7c9b],al
  42d62a:	xor    DWORD PTR [esi+0x0],0xfffffff8
  42d62e:	jno    0x42d688
  42d630:	add    BYTE PTR [eax],al
  42d632:	add    BYTE PTR [edx-0x4c4f7a01],dl
  42d638:	inc    DWORD PTR [eax]
  42d63a:	add    BYTE PTR [edi+edi*8],ch
  42d63d:	and    cl,bl
  42d63f:	push   cs
  42d640:	add    BYTE PTR [eax],al
  42d642:	add    BYTE PTR [eax],dh
  42d644:	or     DWORD PTR [esi],0x2b
  42d647:	jmp    0x4441d74b
  42d64c:	int3   
  42d64d:	mov    bh,0x90
  42d64f:	xchg   ecx,eax
  42d650:	add    BYTE PTR [ebx-0x20009401],al
  42d656:	and    al,BYTE PTR [edx]
  42d658:	mov    edi,edi
  42d65a:	xor    DWORD PTR [edx-0x1],0xfffffff5
  42d65e:	fcom   QWORD PTR [edx-0x7d]
  42d661:	add    bh,bh
  42d663:	sbb    edi,edi
  42d665:	xchg   edi,eax
  42d666:	cmp    al,0x3d
  42d668:	add    bh,bh
  42d66a:	add    BYTE PTR [edx-0x7d],ah
  42d66d:	out    0x38,al
  42d66f:	jno    0x42d670
  42d671:	add    bh,bh
  42d673:	in     eax,0xff
  42d675:	out    dx,eax
  42d676:	addr16 repnz (bad) 
  42d679:	(bad)  
  42d67a:	push   eax
  42d67c:	jmp    FWORD PTR [ebp-0x767c040b]
  42d682:	add    BYTE PTR [eax+0x325dcd00],ch
  42d688:	add    BYTE PTR [ecx-0x2effbf01],cl
  42d68e:	xchg   ebp,eax
  42d68f:	outs   dx,BYTE PTR ds:[esi]
  42d690:	or     DWORD PTR [ecx+0x4c8318ff],0x4d
  42d697:	push   eax
  42d698:	(bad)  
  42d699:	(bad)  
  42d69a:	jmp    DWORD PTR [esi+0x0]
  42d69d:	dec    ebp
  42d69e:	(bad)  
  42d6a0:	cmp    edi,0x0
  42d6a3:	mov    al,0xff
  42d6a5:	lods   eax,DWORD PTR ds:[esi]
  42d6a6:	fcom   DWORD PTR [edx-0x34]
  42d6a9:	add    bh,bh
  42d6ab:	push   0xb50fc9ff
  42d6b0:	(bad)  
  42d6b1:	inc    DWORD PTR [eax]
  42d6b3:	cmp    bh,bh
  42d6b5:	int3   
  42d6b6:	(bad)  
  42d6b7:	cmp    BYTE PTR [ebx+0xa900ff],al
  42d6bd:	ror    BYTE PTR [esi-0x33fa],1
  42d6c3:	sbb    BYTE PTR [eax],al
  42d6c5:	enter  0xa46a,0x0
  42d6c9:	inc    DWORD PTR [eax]
  42d6cb:	jmp    0x42d6cc
  42d6cd:	into   
  42d6ce:	or     al,0x69
  42d6d0:	inc    DWORD PTR [eax]
  42d6d2:	sub    esp,0xffffffff
  42d6d5:	pop    ebx
  42d6d6:	push   cs
  42d6d7:	sub    edi,edi
  42d6d9:	add    ah,cl
  42d6db:	int3   
  42d6dc:	jmp    ecx
  42d6de:	xchg   esp,eax
  42d6df:	jne    0x42d664
  42d6e1:	(bad)  
  42d6e2:	inc    edi
  42d6e4:	sub    ecx,0x79
  42d6e7:	bound  eax,QWORD PTR [eax]
  42d6e9:	add    DWORD PTR [eax],0xffffff80
  42d6ec:	mov    DWORD PTR [ebx],esi
  42d6ee:	outs   dx,DWORD PTR ds:[esi]
  42d6ef:	inc    ebp
  42d6f0:	dec    esp
  42d6f2:	mov    DWORD PTR [edi+0x5259f783],esi
  42d6f8:	inc    DWORD PTR [eax]
  42d6fa:	add    bh,ah
  42d6fc:	inc    DWORD PTR [esp+edx*1-0x6b]
  42d700:	inc    DWORD PTR [ebx+0x12ffc400]
  42d706:	push   edx
  42d707:	push   esp
  42d708:	inc    DWORD PTR [eax]
  42d70a:	add    BYTE PTR [edi+edi*8-0x4a],dl
  42d70e:	imul   edi,DWORD PTR [esi-0x34],0xffffffff
  42d712:	call   DWORD PTR [esi+0x0]
  42d715:	jnp    0x42d759
  42d717:	jmp    0xc043d61c
  42d71c:	inc    edx
  42d71e:	mov    ebx,DWORD PTR [ecx-0x1]
  42d721:	inc    DWORD PTR [eax]
  42d723:	lods   eax,DWORD PTR ds:[esi]
  42d724:	call   FWORD PTR [esi-0x7c]
  42d727:	ret    
  42d728:	add    DWORD PTR [eax],0xffffffff
  42d72b:	inc    ecx
  42d72c:	int3   
  42d72d:	mov    edx,0xff004910
  42d732:	jmp    DWORD PTR ds:0x1d501fcc
  42d738:	inc    DWORD PTR [ebx-0x3b760801]
  42d73e:	je     0x42d6e7
  42d740:	add    BYTE PTR [ebx+0x4accfd83],al
  42d746:	xchg   edx,eax
  42d747:	test   DWORD PTR [eax],0xff1883ff
  42d74d:	mov    WORD PTR [ebx+0x75],fs
  42d750:	inc    DWORD PTR [eax]
  42d752:	jmp    DWORD PTR ds:0x52eafeff
  42d758:	add    bh,bh
  42d75a:	(bad)  
  42d75b:	jnp    0x42d6e0
  42d75d:	fsubr  DWORD PTR [esi+0xffff37]
  42d763:	inc    ebx
  42d764:	add    BYTE PTR [eax-0x40],al
  42d767:	fs mov edi,edi
  42d76a:	add    BYTE PTR [edx+0x0],ch
  42d76d:	mov    ds:0xff000c71,al
  42d772:	int3   
  42d773:	loop   0x42d741
  42d775:	fwait
  42d776:	icebp  
  42d777:	inc    ebx
  42d778:	dec    DWORD PTR [ecx-0x29ffc500]
  42d77e:	adc    ebx,esi
  42d780:	add    BYTE PTR [eax],al
  42d782:	(bad)  
  42d783:	jp     0x42d784
  42d785:	je     0x42d78a
  42d787:	fild   WORD PTR [ebx-0x720000]
  42d78d:	inc    ecx
  42d78e:	or     al,0xb4
  42d790:	add    BYTE PTR [eax],al
  42d792:	add    BYTE PTR [eax+0x70fa0eff],bh
  42d798:	add    BYTE PTR [ebx-0x5600e201],al
  42d79e:	mov    BYTE PTR [eax+0x7e0000cc],dh
  42d7a4:	call   edx
  42d7a6:	rol    DWORD PTR [esi],1
  42d7a8:	(bad)  
  42d7a9:	inc    DWORD PTR [eax]
  42d7ab:	sbb    al,0xcc
  42d7ad:	dec    ecx
  42d7ae:	or     eax,DWORD PTR [edx-0x1]
  42d7b1:	cmp    edi,0x2a
  42d7b4:	push   DWORD PTR [esi+0x58]
  42d7b7:	fmul   DWORD PTR [ecx+0x9fff00]
  42d7bd:	and    dl,BYTE PTR [edx+0x13]
  42d7c0:	add    bh,bh
  42d7c2:	add    BYTE PTR [edi-0x1],bl
  42d7c5:	xchg   ebp,eax
  42d7c6:	mov    WORD PTR [esi-0x1],gs
  42d7c9:	add    bh,bh
  42d7cb:	inc    ebx
  42d7cc:	add    BYTE PTR [esi-0x7e],bh
  42d7cf:	mov    eax,ds:0xcdffffff
  42d7d4:	add    dl,bh
  42d7d6:	mov    WORD PTR [edi],?
  42d7d8:	mov    edi,edi
  42d7da:	add    BYTE PTR [ebp-0x7d],dl
  42d7dd:	aaa    
  42d7de:	fnstsw WORD PTR [edx-0x7d]
  42d7e1:	inc    DWORD PTR [ebx+0x204ffae]
  42d7e7:	cdq    
  42d7e8:	add    DWORD PTR [eax],0xffffffff
  42d7eb:	cli    
  42d7ec:	mov    DWORD PTR [esp+eax*2],ebp
  42d7ef:	aaa    
  42d7f0:	inc    DWORD PTR [eax]
  42d7f2:	call   FWORD PTR [eax-0x1f1dbb01]
  42d7f8:	mov    DWORD PTR [ebx+0x1f83adff],eax
  42d7fe:	or     al,0xf
  42d800:	inc    DWORD PTR [ebx-0x29ff477d]
  42d806:	call   0xfff2:0x83ff4b
  42d80d:	push   edx
  42d80e:	fiadd  DWORD PTR [edi-0x1a007601]
  42d814:	(bad)  
  42d815:	jg     0x42d7b4
  42d817:	xchg   ebx,eax
  42d818:	(bad)  
  42d819:	(bad)  
  42d81a:	jmp    DWORD PTR [ecx+0x599768ff]
  42d820:	dec    DWORD PTR [ecx-0x72ffaa77]
  42d826:	dec    edi
  42d827:	push   eax
  42d828:	add    DWORD PTR [eax],0x0
  42d82b:	jo     0x42d82c
  42d82d:	lods   eax,DWORD PTR ds:[esi]
  42d82e:	in     eax,0x64
  42d830:	add    DWORD PTR [eax],0x0
  42d833:	push   cs
  42d834:	int3   
  42d835:	lods   al,BYTE PTR ds:[esi]
  42d836:	sub    edi,DWORD PTR [esi+0x7b000000]
  42d83c:	dec    DWORD PTR [esi+0x6d]
  42d83f:	mov    cl,0xff
  42d841:	cmp    edi,0x18
  42d844:	add    BYTE PTR [esi+eax*1],cl
  42d847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d848:	add    DWORD PTR [ebx-0x4c007301],0xffffffca
  42d84f:	int3   
  42d850:	dec    DWORD PTR [ecx-0x57009f01]
  42d856:	sub    eax,0xcc8900cb
  42d85b:	ja     0x42d85d
  42d85d:	add    dh,BYTE PTR [edx-0x5e]
  42d860:	inc    DWORD PTR [eax]
  42d862:	jmp    DWORD PTR [ecx]
  42d864:	add    BYTE PTR [edx],ch
  42d866:	xchg   edi,eax
  42d867:	mov    bh,bh
  42d869:	add    BYTE PTR [eax],al
  42d86b:	push   ebx
  42d86c:	(bad)  
  42d86d:	jge    0x42d851
  42d86f:	sub    BYTE PTR [eax],al
  42d871:	inc    DWORD PTR [eax]
  42d873:	add    bh,bh
  42d875:	sbb    eax,DWORD PTR ds:0x83ff0091
  42d87b:	out    dx,eax
  42d87c:	add    dl,al
  42d87e:	dec    ebp
  42d87f:	mov    eax,0x69ffff83
  42d884:	add    BYTE PTR [ebx+0x25],dh
  42d887:	jecxz  0x42d888
  42d889:	inc    DWORD PTR [eax]
  42d88b:	js     0x42d88c
  42d88d:	pop    ecx
  42d88e:	es jl  0x42d890
  42d891:	dec    DWORD PTR [ecx-0x5e3b33e3]
  42d897:	aaa    
  42d898:	add    BYTE PTR [eax],al
  42d89a:	and    DWORD PTR [ebx+eax*4+0x77fc9a],0x0
  42d8a2:	dec    eax
  42d8a4:	cmp    esp,0x7a
  42d8a7:	(bad)  
  42d8a8:	mov    DWORD PTR [eax],eax
  42d8aa:	(bad)  
  42d8ab:	(bad)  
  42d8ad:	lock push esi
  42d8af:	cmp    edi,0xffffff89
  42d8b2:	(bad)  
  42d8b3:	in     al,dx
  42d8b4:	jmp    DWORD PTR [ecx]
  42d8b6:	call   0xff42d959
  42d8bb:	add    edi,edi
  42d8bd:	jae    0x42d922
  42d8bf:	nop
  42d8c0:	mov    DWORD PTR [eax],eax
  42d8c2:	(bad)  
  42d8c3:	std    
  42d8c4:	sbb    esp,0x32
  42d8c7:	cmp    bh,bh
  42d8c9:	(bad)  
  42d8ca:	push   DWORD PTR [edi+0x0]
  42d8cd:	inc    ebx
  42d8ce:	mov    al,ds:0x8983c9
  42d8d3:	aad    0x0
  42d8d5:	sub    eax,0xffff8edf
  42d8da:	call   DWORD PTR [ebx]
  42d8dc:	call   FWORD PTR [ebx-0x55]
  42d8df:	xchg   bh,bh
  42d8e1:	or     DWORD PTR [ecx-0xbff0051],0xffffffa8
  42d8e8:	add    bh,bh
  42d8ea:	call   DWORD PTR [ebp-0x28dd8c01]
  42d8f0:	(bad)  
  42d8f1:	dec    esp
  42d8f3:	dec    DWORD PTR [bp+si-0x941]
  42d8f8:	cmp    edi,0xffffff89
  42d8fb:	iret   
  42d8fc:	jmp    DWORD PTR ds:0xff23e6
  42d902:	jmp    FWORD PTR [ecx+0x30f02a00]
  42d908:	(bad)  
  42d909:	(bad)  
  42d90a:	dec    DWORD PTR [eax+0x0]
  42d90d:	mov    ecx,0x8300311c
  42d912:	int3   
  42d913:	sub    BYTE PTR [ebx-0x76363e77],al
  42d919:	mov    esp,ecx
  42d91b:	pushf  
  42d91c:	(bad)  
  42d91d:	out    dx,al
  42d91e:	mov    bh,0x8d
  42d920:	add    bh,bh
  42d922:	add    dl,dh
  42d924:	mov    DWORD PTR [ebx-0x50ec],ebx
  42d92a:	add    BYTE PTR [ebx-0x1],cl
  42d92d:	adc    esp,edx
  42d92f:	sti    
  42d930:	cmp    edi,0xffffffff
  42d933:	iret   
  42d934:	add    bh,ch
  42d936:	stos   DWORD PTR es:[edi],eax
  42d937:	pop    ebx
  42d938:	add    BYTE PTR [eax],al
  42d93a:	mov    DWORD PTR [ecx-0x1],edx
  42d93d:	es jmp 0x840fd886
  42d943:	call   0xffcc:0xafe397ff
  42d94a:	inc    eax
  42d94c:	add    BYTE PTR [edi],al
  42d94e:	repz mov esi,0xc90000ff
  42d954:	sbb    DWORD PTR [ecx+0x45],0x11
  42d958:	(bad)  
  42d959:	dec    DWORD PTR [ecx-0x306001b]
  42d95f:	inc    ebx
  42d960:	add    DWORD PTR [eax],0x0
  42d963:	(bad)  
  42d964:	jmp    FWORD PTR [esi+0x64]
  42d967:	idiv   edi
  42d969:	mov    edi,edi
  42d96b:	lock push DWORD PTR [edx+0x49ffee0e]
  42d972:	sub    DWORD PTR [esi-0xa30001],0xffffff81
  42d979:	sub    al,0xff
  42d97b:	imul   eax,DWORD PTR [eax],0xff4bd9cc
  42d981:	push   ss
  42d982:	jmp    DWORD PTR [eax+eax*1]
  42d985:	adc    ecx,0xffffffff
  42d988:	pop    eax
  42d989:	bswap  esp
  42d98b:	in     al,dx
  42d98c:	or     DWORD PTR [ecx-0x53ff7806],0x0
  42d993:	and    BYTE PTR [eax],al
  42d995:	jmp    DWORD PTR [ecx-0x26b001]
  42d99b:	aaa    
  42d99c:	add    bh,bh
  42d99e:	repz fild DWORD PTR [eax]
  42d9a1:	fwait
  42d9a2:	add    BYTE PTR [edx+0x0],dh
  42d9a5:	mov    DWORD PTR [ecx-0x1],esi
  42d9a8:	das    
  42d9a9:	cmp    eax,0xcc83c5ff
  42d9ae:	test   ax,0xdff
  42d9b2:	int3   
  42d9b3:	xchg   ebp,eax
  42d9b4:	add    BYTE PTR [ebx-0x26c13350],al
  42d9ba:	call   DWORD PTR [eax-0x1]
  42d9bd:	add    BYTE PTR [edi],ah
  42d9bf:	inc    esp
  42d9c0:	int3   
  42d9c1:	je     0x42d9c2
  42d9c3:	pushf  
  42d9c4:	mov    edi,edi
  42d9c6:	int3   
  42d9c7:	jmp    FWORD PTR [edi-0x51]
  42d9ca:	(bad)  
  42d9cb:	mov    esp,0x4c65ffff
  42d9d0:	(bad)  
  42d9d1:	jg     0x42d9d3
  42d9d3:	push   esi
  42d9d4:	inc    DWORD PTR [eax]
  42d9d6:	cmp    bh,0xbd
  42d9d9:	stos   DWORD PTR es:[edi],eax
  42d9da:	call   FWORD PTR [ebp-0xadb007d]
  42d9e0:	call   DWORD PTR [ecx]
  42d9e2:	(bad)  
  42d9e3:	in     al,dx
  42d9e4:	mov    DWORD PTR [eax],eax
  42d9e6:	call   DWORD PTR [edi-0x33ed00c1]
  42d9ed:	jmp    DWORD PTR [eax+0x2d]
  42d9f0:	add    BYTE PTR [edi-0x767c2e34],bh
  42d9f6:	pushf  
  42d9f7:	dec    DWORD PTR [ebp*8-0x7c338b00]
  42d9fe:	adc    eax,0xff36ffa1
  42da03:	data16 (bad) 
  42da05:	call   FWORD PTR ds:0xff9f3c00
  42da0b:	(bad)  
  42da0c:	inc    DWORD PTR [eax]
  42da0e:	push   cs
  42da0f:	pop    eax
  42da10:	adc    DWORD PTR [edi],0x0
  42da13:	mov    edx,0xfff1cc89
  42da18:	push   DWORD PTR [eax+eax*1-0x59]
  42da1c:	add    bh,bh
  42da1e:	loop   0x42da7b
  42da20:	and    DWORD PTR [edi-0xff4100],0x5b
  42da27:	call   DWORD PTR [esi-0x7d]
  42da2a:	add    bl,ch
  42da2c:	cmp    edi,0xffffff9c
  42da2f:	sub    eax,0xe8985ff
  42da34:	add    bh,bh
  42da36:	retf   
  42da37:	dec    esi
  42da39:	popf   
  42da3a:	dec    DWORD PTR [ecx+0x0]
  42da3d:	push   DWORD PTR [esi]
  42da3f:	ror    DWORD PTR [ecx+0xd60069],cl
  42da45:	call   DWORD PTR [esi-0x1]
  42da48:	pop    edx
  42da49:	mov    esi,0xffff5eff
  42da4e:	sbb    al,0x1
  42da50:	(bad)  
  42da51:	jp     0x42d9d6
  42da53:	pop    ebx
  42da54:	mov    DWORD PTR [eax],eax
  42da56:	or     bh,bh
  42da58:	daa    
  42da59:	mov    dh,0xcc
  42da5b:	fadd   DWORD PTR [ebx-0x9d9b00]
  42da61:	fld    DWORD PTR [eax]
  42da63:	add    BYTE PTR [ebx-0xf006d7d],0x4c
  42da6a:	add    BYTE PTR [edx],ch
  42da6c:	(bad)  
  42da6d:	inc    DWORD PTR ds:0xff31cc32
  42da73:	mov    DWORD PTR [ebx+0x17ff0b00],0x5fcc67
  42da7d:	inc    DWORD PTR [ebp+0x76ff39]
  42da83:	popa   
  42da84:	add    BYTE PTR [ecx-0x75a1ffd3],cl
  42da8a:	dec    DWORD PTR [edx-0x34]
  42da8d:	add    BYTE PTR [ecx+0x3c],ch
  42da90:	add    cl,ch
  42da92:	jmp    FWORD PTR [ebp+0x2100cc]
  42da98:	pop    ebx
  42da99:	sar    edi,cl
  42da9b:	pop    es
  42da9c:	inc    DWORD PTR [eax]
  42da9e:	push   es
  42da9f:	fadd   QWORD PTR [eax]
  42daa1:	pushf  
  42daa2:	add    BYTE PTR [esi+0x0],bh
  42daa5:	(bad)  
  42daa6:	sti    
  42daa7:	dec    DWORD PTR [ebp+0x1f]
  42daaa:	xor    ecx,0xffffffff
  42daad:	(bad)  
  42daae:	cmp    al,dl
  42dab0:	add    dl,cl
  42dab2:	add    BYTE PTR [ebp-0x1],bh
  42dab5:	add    BYTE PTR [eax-0x7c05d801],bh
  42dabb:	and    bh,bh
  42dabd:	push   DWORD PTR [ebx]
  42dabf:	xor    eax,0xa896800
  42dac4:	(bad)  
  42dac5:	inc    DWORD PTR [eax-0x5dbc00]
  42dacb:	repnz add DWORD PTR [eax],0xffffffd8
  42dacf:	cmp    eax,0xdd831b00
  42dad4:	or     esp,0x16
  42dad7:	sub    DWORD PTR [eax-0x173400],0xffffffff
  42dade:	or     ecx,DWORD PTR [eax]
  42dae0:	add    BYTE PTR [edx+0xff6083],cl
  42dae6:	or     edi,edi
  42dae8:	cs inc edx
  42daea:	add    al,bl
  42daec:	add    bh,bh
  42daee:	and    al,0xb8
  42daf0:	call   DWORD PTR [esi]
  42daf2:	add    BYTE PTR [ebp+0x0],al
  42daf5:	add    esi,0x0
  42daf8:	jle    0x42da91
  42dafa:	mov    ebp,esp
  42dafc:	add    DWORD PTR [eax],0x34
  42daff:	and    eax,DWORD PTR [ebx+0x11ff04]
  42db05:	int3   
  42db06:	or     al,0xff
  42db08:	dec    edi
  42db09:	adc    al,0x89
  42db0b:	mov    eax,ds:0xbaf83cc
  42db10:	add    BYTE PTR [ebx],dl
  42db12:	xor    ebx,0xffffff83
  42db15:	add    BYTE PTR [edx],al
  42db17:	add    BYTE PTR [edi-0x3c],ch
  42db1a:	add    ch,dl
  42db1c:	add    BYTE PTR [ebx-0x2f7cd2f0],al
  42db22:	push   DWORD PTR [edi+edi*8+0x3c893cff]
  42db29:	enter  0xd8cc,0xff
  42db2d:	call   FWORD PTR [edi+ebx*2-0x55ffb000]
  42db34:	add    bh,bh
  42db36:	jbe    0x42dac1
  42db38:	(bad)
  42db3b:	xor    bh,bh
  42db3d:	jmp    DWORD PTR [eax-0x57c5c]
  42db43:	add    BYTE PTR [eax],0xff
  42db46:	nop
  42db47:	int3   
  42db48:	in     al,dx
  42db49:	test   eax,0x83ffdd00
  42db4e:	xchg   esp,eax
  42db4f:	(bad)  
  42db50:	int3   
  42db51:	data16 add BYTE PTR [esi+0x90000],bl
  42db58:	mov    ah,0x54
  42db5a:	call   esp
  42db5c:	mov    DWORD PTR [ebx+0x74ffc401],eax
  42db62:	add    BYTE PTR [esi+0x73ffff],bh
  42db68:	aaa    
  42db69:	pushf  
  42db6a:	dec    ebp
  42db6c:	add    bh,bh
  42db6e:	dec    edi
  42db6f:	rol    BYTE PTR [eax],cl
  42db71:	fild   DWORD PTR [ebx+0x7fff00a2]
  42db77:	add    DWORD PTR [ecx+0xa],0xffffffff
  42db7b:	out    dx,eax
  42db7c:	add    DWORD PTR [eax],0x47
  42db7f:	sbb    edi,edi
  42db81:	cs (bad) 
  42db83:	mov    ebx,0xffb7ccff
  42db88:	aaa    
  42db89:	(bad)  
  42db8b:	out    dx,al
  42db8c:	add    ah,cl
  42db8e:	pop    esp
  42db8f:	lahf   
  42db90:	dec    DWORD PTR [ebx]
  42db92:	int3   
  42db93:	in     al,0xcc
  42db95:	jmp    FWORD PTR [edi+edi*8-0x53]
  42db99:	xor    edi,edi
  42db9b:	cmp    bh,0xff
  42db9e:	shl    BYTE PTR [eax],cl
  42dba0:	mov    DWORD PTR [edi-0x76fc01],edx
  42dba6:	mov    al,ds:0xff5ccc89
  42dbab:	mov    bl,0xff
  42dbad:	push   DWORD PTR [edi]
  42dbaf:	int    0x0
  42dbb1:	xor    eax,0x89839900
  42dbb6:	pop    ecx
  42dbb7:	add    BYTE PTR [edi],ah
  42dbb9:	cmp    eax,0xff832589
  42dbbe:	gs jle 0x42db8d
  42dbc1:	inc    DWORD PTR fs:[ebp-0x1]
  42dbc5:	add    cl,dl
  42dbc7:	mov    ecx,esp
  42dbc9:	into   
  42dbca:	dec    esi
  42dbcc:	add    DWORD PTR [eax],0xffffffd7
  42dbcf:	inc    ebp
  42dbd0:	call   FWORD PTR [ebx]
  42dbd2:	call   eax
  42dbd4:	add    bh,bh
  42dbd6:	in     al,0x83
  42dbd8:	mov    DWORD PTR [esi-0xfff401],ebp
  42dbde:	pop    esi
  42dbdf:	fdivp  st(7),st
  42dbe1:	fld    DWORD PTR [ebx+0x7cffffa1]
  42dbe7:	add    BYTE PTR [ebx+edi*4-0x1],ah
  42dbeb:	mov    eax,0xfed089ff
  42dbf0:	(bad)  
  42dbf1:	(bad)  
  42dbf3:	fld    QWORD PTR [eax]
  42dbf5:	sub    DWORD PTR [ebx-0x1],0xffffffcc
  42dbf9:	loop   0x42db7e
  42dbfb:	mov    dl,0xff
  42dbfd:	push   DWORD PTR ds:0xff1183cb
  42dc03:	in     eax,dx
  42dc04:	or     esp,0xffffffb6
  42dc07:	dec    DWORD PTR [ecx]
  42dc09:	xor    eax,0x83ff5f00
  42dc0e:	mov    ch,0xb8
  42dc10:	(bad)  
  42dc11:	sti    
  42dc12:	jmp    DWORD PTR [ebp-0xd97d00]
  42dc18:	ins    DWORD PTR es:[edi],dx
  42dc19:	(bad)  
  42dc1b:	cmp    eax,0x6d3dff83
  42dc20:	inc    DWORD PTR [ecx+0x0]
  42dc23:	jae    0x42dc24
  42dc25:	jmp    DWORD PTR [edx]
  42dc27:	int3   
  42dc28:	into   
  42dc29:	mov    bl,0xff
  42dc2b:	cmp    DWORD PTR [eax],eax
  42dc2d:	sub    DWORD PTR [edx-0x11],0xffffff83
  42dc31:	jg     0x42dc32
  42dc33:	dec    edx
  42dc34:	add    bh,bh
  42dc36:	pop    ss
  42dc37:	(bad)  
  42dc38:	cmp    BYTE PTR [ebx+0x1d89],al
  42dc3e:	jl     0x42dc4e
  42dc40:	and    DWORD PTR [eax+eax*1-0x2e],0xffffff83
  42dc45:	dec    DWORD PTR [ecx+0xbb6a00]
  42dc4b:	mov    ebp,0x1515cc00
  42dc50:	int3   
  42dc51:	mov    ebp,0xff00eeff
  42dc56:	pop    ss
  42dc57:	add    BYTE PTR [ebx],bh
  42dc59:	xchg   edi,eax
  42dc5a:	sub    ecx,0xffffffff
  42dc5d:	mov    DWORD PTR [ebx+0x74cc89],eax
  42dc63:	mov    bh,0x0
  42dc65:	sub    DWORD PTR [edi+edi*8-0x1cff4d8d],0xffffffff
  42dc6d:	add    BYTE PTR [esi+0xd58357],al
  42dc73:	push   ecx
  42dc74:	inc    DWORD PTR [eax]
  42dc76:	pop    eax
  42dc77:	inc    DWORD PTR [ebp-0xe33383]
  42dc7d:	add    BYTE PTR [ebx-0x50],ah
  42dc80:	add    BYTE PTR [eax-0x34],ah
  42dc83:	adc    BYTE PTR [ebx+0xcffa700],al
  42dc89:	aad    0xcc
  42dc8b:	xchg   esp,eax
  42dc8c:	inc    DWORD PTR [eax]
  42dc8e:	inc    esi
  42dc8f:	or     al,BYTE PTR [eax]
  42dc91:	cmp    bh,0x65
  42dc94:	add    DWORD PTR [eax],0x20
  42dc97:	int3   
  42dc98:	pop    esp
  42dc99:	or     BYTE PTR [ecx+0x6aff8989],cl
  42dc9f:	clc    
  42dca0:	inc    DWORD PTR [ebx+eax*4]
  42dca3:	xchg   ecx,eax
  42dca4:	add    BYTE PTR [eax],al
  42dca6:	or     edi,edi
  42dca8:	mov    ebp,0xff91ff15
  42dcad:	add    BYTE PTR [ecx],bl
  42dcaf:	loope  0x42dcb1
  42dcb1:	sub    bh,bh
  42dcb3:	repnz inc DWORD PTR [eax]
  42dcb6:	push   ebx
  42dcb7:	sub    DWORD PTR [edx+0x38],0xffffffcc
  42dcbb:	mov    dh,0xff
  42dcbd:	add    DWORD PTR [eax],0xffffffd3
  42dcc0:	push   DWORD PTR [ebx]
  42dcc2:	push   DWORD PTR [edx-0x34]
  42dcc5:	add    BYTE PTR ds:0xff312989,ch
  42dccb:	mov    al,ds:0xe86c0000
  42dcd0:	jmp    FWORD PTR [eax]
  42dcd2:	int3   
  42dcd3:	adc    al,0xff
  42dcd5:	add    al,ah
  42dcd7:	push   DWORD PTR [edi]
  42dcd9:	lods   al,BYTE PTR ds:[esi]
  42dcda:	add    DWORD PTR [edx+0xb018300],0xffffffff
  42dce1:	or     bh,bh
  42dce3:	repz dec DWORD PTR [ecx-0x3a7e0027]
  42dcea:	add    al,cl
  42dcec:	(bad)  
  42dced:	(bad)  
  42dcee:	cmp    DWORD PTR [ecx+0x0],eax
  42dcf1:	mov    ds:0xff893700,eax
  42dcf6:	xchg   edx,eax
  42dcf7:	int3   
  42dcf8:	dec    ebp
  42dcf9:	mov    ds:0x8389ca00,eax
  42dcfe:	neg    esp
  42dd00:	add    BYTE PTR [ebx-0x1],dh
  42dd03:	add    DWORD PTR es:[ebx-0x39cdff72],0xffffffff
  42dd0b:	inc    ebp
  42dd0c:	add    BYTE PTR [eax],al
  42dd0e:	cld    
  42dd0f:	xchg   edx,eax
  42dd10:	(bad)  
  42dd11:	mov    ebp,0xff2583
  42dd16:	loope  0x42dd18
  42dd18:	(bad)  
  42dd19:	xlat   BYTE PTR ds:[ebx]
  42dd1a:	dec    DWORD PTR [edx]
  42dd1c:	add    bh,bh
  42dd1e:	(bad)  
  42dd1f:	retf   0x7fff
  42dd22:	xor    DWORD PTR [ebx],0xffffff83
  42dd25:	dec    ebp
  42dd27:	int3   
  42dd28:	ins    BYTE PTR es:[edi],dx
  42dd29:	scas   eax,DWORD PTR es:[edi]
  42dd2a:	add    BYTE PTR [edi+0x0],ah
  42dd2d:	add    BYTE PTR [ecx],bh
  42dd2f:	add    al,0x0
  42dd31:	xor    ah,cl
  42dd33:	dec    edx
  42dd34:	(bad)  
  42dd35:	dec    DWORD PTR [ebx-0x34]
  42dd38:	ds xor al,0x0
  42dd3b:	cdq    
  42dd3c:	inc    DWORD PTR [eax]
  42dd3e:	rol    DWORD PTR [ebx],1
  42dd40:	add    bh,al
  42dd42:	sbb    eax,0xffffff83
  42dd45:	add    BYTE PTR [eax+0xb0e3ff],bh
  42dd4b:	or     al,0x0
  42dd4d:	add    dh,dl
  42dd4f:	(bad)  
  42dd51:	push   ss
  42dd52:	inc    edi
  42dd54:	(bad)  
  42dd55:	jmp    FWORD PTR [edi-0x7cb29e7d]
  42dd5b:	add    BYTE PTR [eax],al
  42dd5d:	mov    DWORD PTR [ebx+0xe98339],eax
  42dd63:	dec    edx
  42dd64:	mov    edi,edi
  42dd66:	icebp  
  42dd67:	dec    eax
  42dd69:	xor    al,0x0
  42dd6b:	push   esp
  42dd6c:	dec    DWORD PTR [ecx+0x3ff4e56]
  42dd72:	int3   
  42dd73:	mov    dl,0x0
  42dd75:	add    bh,bh
  42dd77:	dec    DWORD PTR [edi-0x3b]
  42dd7a:	int3   
  42dd7b:	sub    eax,0x1ac1ff00
  42dd80:	add    BYTE PTR [ecx-0x76137d],al
  42dd86:	pop    es
  42dd87:	add    BYTE PTR ds:0x1dff90,cl
  42dd8d:	push   DWORD PTR [edi-0x14]
  42dd90:	add    BYTE PTR [ebx-0xff2d01],al
  42dd96:	inc    edx
  42dd97:	add    BYTE PTR [ebx-0x2b],dl
  42dd9a:	add    dl,ch
  42dd9c:	(bad)  
  42dd9d:	jmp    ebp
  42dd9f:	aam    0x0
  42dda1:	rol    DWORD PTR [eax],0x2d
  42dda4:	int3   
  42dda5:	add    BYTE PTR [esi-0x5e0b01],bl
  42ddab:	cmp    edi,0xffffffcc
  42ddae:	lea    eax,fs:[eax]
  42ddb1:	jp     0x42ddb2
  42ddb3:	sahf   
  42ddb4:	cmp    edi,0x7b
  42ddb7:	jmp    FWORD PTR [edx-0x76fc7c3d]
  42ddbd:	add    BYTE PTR [ebx],bh
  42ddbf:	aam    0xff
  42ddc1:	jmp    FWORD PTR es:[ecx-0x1e0000]
  42ddc8:	inc    ecx
  42ddc9:	int    0x0
  42ddcb:	adc    eax,0xb117ffff
  42ddd0:	int3   
  42ddd1:	push   ds
  42ddd2:	call   DWORD PTR [edi]
  42ddd4:	cmp    edi,0x22
  42ddd7:	add    ah,al
  42ddd9:	mov    esp,0xccffd183
  42ddde:	out    0x44,eax
  42dde0:	call   esi
  42dde2:	dec    DWORD PTR [ecx]
  42dde4:	int3   
  42dde5:	(bad)  
  42dde6:	jnp    0x42dd6b
  42dde8:	xchg   ecx,eax
  42dde9:	pushf  
  42ddea:	push   DWORD PTR [esi-0x7d]
  42dded:	dec    DWORD PTR [esp+edx*2+0x61ff2f00]
  42ddf4:	add    bh,bh
  42ddf6:	push   ebp
  42ddf7:	add    BYTE PTR [eax+0x14],dl
  42ddfa:	push   DWORD PTR [ecx]
  42ddfc:	inc    DWORD PTR [ebx+0x44ff749f]
  42de02:	add    BYTE PTR [esi-0x1],bh
  42de05:	call   DWORD PTR [ebp-0x1]
  42de08:	into   
  42de09:	inc    DWORD PTR ss:[edx-0x77]
  42de0d:	jmp    FWORD PTR [edi-0x157c1a]
  42de13:	inc    esp
  42de14:	add    ah,cl
  42de16:	jo     0x42de17
  42de18:	mov    ebx,0x891889a7
  42de1d:	add    BYTE PTR [ecx+0xa9ff6c],al
  42de23:	sbb    BYTE PTR [ebx-0x7e001901],al
  42de29:	into   
  42de2a:	dec    DWORD PTR [ecx+0x0]
  42de2d:	inc    DWORD PTR [ebx-0xcdff5a]
  42de33:	jns    0x42de34
  42de35:	sbb    DWORD PTR [edi-0x1],0x7e
  42de39:	push   ecx
  42de3a:	(bad)  
  42de3b:	cmp    eax,0xd5080000
  42de40:	int3   
  42de41:	or     edi,edi
  42de43:	lock inc DWORD PTR [ebx-0x4ce5ff98]
  42de4a:	int3   
  42de4b:	inc    ecx
  42de4c:	cmp    edi,0xfffffff4
  42de4f:	pushf  
  42de50:	push   DWORD PTR [edi-0xff757d]
  42de56:	aaa    
  42de57:	add    ch,bl
  42de59:	inc    ebp
  42de5a:	add    BYTE PTR [ebx],ah
  42de5c:	(bad)  
  42de5d:	(bad)  
  42de5e:	jmp    0xa3dda2
  42de63:	dec    ebp
  42de64:	inc    DWORD PTR [eax]
  42de66:	popf   
  42de67:	call   ecx
  42de69:	fdiv   st(7),st
  42de6b:	popa   
  42de6c:	add    bh,bh
  42de6e:	scas   al,BYTE PTR es:[edi]
  42de6f:	jmp    0x742b4f7
  42de74:	add    bh,bh
  42de76:	fdivp  st(7),st
  42de78:	not    ebp
  42de7a:	jmp    DWORD PTR [edi+edi*8]
  42de7d:	int3   
  42de7e:	(bad)  [edx]
  42de80:	(bad)  
  42de81:	in     al,dx
  42de82:	(bad)  
  42de83:	sti    
  42de84:	add    DWORD PTR [eax],0x37
  42de87:	push   esp
  42de89:	test   eax,0x838f00
  42de8e:	retf   0x8976
  42de91:	push   ds
  42de92:	int3   
  42de93:	sub    cl,ah
  42de95:	add    bh,ch
  42de97:	jmp    DWORD PTR [esp+edx*1]
  42de9a:	cmp    DWORD PTR [eax+0x3111ff83],0x0
  42dea1:	add    edi,edi
  42dea3:	push   ss
  42dea4:	inc    DWORD PTR [ebx+0x7adc00a2]
  42deaa:	(bad)  
  42deab:	inc    BYTE PTR [eax]
  42dead:	(bad)  
  42deae:	fdivrp st(2),st
  42deb0:	mov    DWORD PTR [edx+0xffa2ff],ebx
  42deb6:	mov    bh,0xff
  42deb8:	fwait
  42deb9:	test   edi,edi
  42debb:	add    eax,DWORD PTR [ebx-0x331e367d]
  42dec1:	jle    0x42dec2
  42dec3:	pop    DWORD PTR [eax]
  42dec5:	int3   
  42dec6:	mov    BYTE PTR [eax],0x64
  42dec9:	and    BYTE PTR [eax],al
  42decb:	in     al,dx
  42decc:	add    BYTE PTR [ebx+0x5b0001f9],al
  42ded2:	add    DWORD PTR [eax+eax*1],0x0
  42ded6:	adc    eax,0xccd0daff
  42dedb:	add    al,0xcc
  42dedd:	add    BYTE PTR [edx+0xdbffcf],bh
  42dee3:	dec    edx
  42dee4:	add    bh,bh
  42dee6:	xchg   bh,bh
  42dee8:	cli    
  42dee9:	ss add bh,al
  42deec:	add    ah,cl
  42deee:	cdq    
  42deef:	dec    ebp
  42def0:	(bad)  
  42def1:	in     al,dx
  42def2:	int3   
  42def3:	dec    esp
  42def4:	add    bh,bh
  42def6:	mov    ebx,0xccd68c83
  42defb:	rol    DWORD PTR [eax],1
  42defd:	or     DWORD PTR [ecx-0x7c9b33a1],0xffffffaf
  42df04:	add    BYTE PTR [ecx+0x315fff7c],cl
  42df0a:	jmp    FWORD PTR [esi+0x0]
  42df0d:	jmp    DWORD PTR [ecx+0xc0ff85]
  42df13:	push   ds
  42df14:	add    BYTE PTR [ecx-0x27977c6e],cl
  42df1a:	cmp    ebx,0xffffffcc
  42df1d:	add    al,ch
  42df1f:	nop
  42df20:	add    BYTE PTR [ebx-0x7200],dh
  42df26:	jmp    0xff91:0x4e12ff
  42df2d:	inc    DWORD PTR [eiz*8+0xcc4400]
  42df34:	add    BYTE PTR [ebx+0x32c6ffde],al
  42df3a:	push   DWORD PTR [ebp-0x28b0077]
  42df40:	add    BYTE PTR [esi],ch
  42df42:	int3   
  42df43:	jae    0x42df44
  42df45:	jmp    DWORD PTR [ecx-0x90ab01]
  42df4b:	lods   al,BYTE PTR ds:[esi]
  42df4c:	(bad)  
  42df4d:	(bad)  
  42df4e:	out    dx,al
  42df4f:	mov    ebp,0xe0006000
  42df54:	(bad)  
  42df55:	dec    DWORD PTR [eax-0xb14500]
  42df5b:	js     0x42df5c
  42df5d:	dec    DWORD PTR [edx-0x790053]
  42df63:	out    dx,eax
  42df64:	mov    DWORD PTR [ebx-0x2a4533f8],eax
  42df6a:	add    BYTE PTR [eax-0x1],bh
  42df6d:	adc    DWORD PTR [ecx-0xb7c93],0xffffffb9
  42df74:	mov    DWORD PTR [eax],eax
  42df76:	dec    edi
  42df77:	add    BYTE PTR [edx+0x68],ch
  42df7a:	inc    ebp
  42df7c:	add    BYTE PTR [eax],al
  42df7e:	xor    ebx,DWORD PTR [ecx-0x77]
  42df81:	jne    0x42df82
  42df83:	push   edx
  42df84:	mov    DWORD PTR [ebx+0x23f8ffae],eax
  42df8a:	add    BYTE PTR [edi+edi*8+0x301aff],ch
  42df91:	sar    edi,0x51
  42df94:	add    bh,bh
  42df96:	fld    DWORD PTR [eax]
  42df98:	xor    BYTE PTR [edi+0x0],al
  42df9b:	in     al,dx
  42df9c:	dec    esp
  42df9e:	fnstcw WORD PTR [eax-0x7d]
  42dfa1:	fwait
  42dfa2:	call   FWORD PTR [edi-0x250001]
  42dfa8:	dec    ebx
  42dfa9:	rol    BYTE PTR [eax],cl
  42dfab:	sahf   
  42dfac:	cmp    edi,0xffffff96
  42dfaf:	adc    DWORD PTR [eax],eax
  42dfb1:	add    al,0xcc
  42dfb3:	inc    edi
  42dfb4:	(bad)  
  42dfb5:	jmp    DWORD PTR [eax]
  42dfb7:	add    BYTE PTR [ebx],cl
  42dfb9:	or     edi,edi
  42dfbb:	inc    DWORD PTR gs:[eax]
  42dfbe:	(bad)  
  42dfbf:	push   ebp
  42dfc0:	call   edi
  42dfc2:	push   DWORD PTR [ecx-0x1]
  42dfc5:	add    BYTE PTR [eax+eax*1+0x3fffb9c5],bl
  42dfcc:	add    bh,bh
  42dfce:	sub    eax,0xcc00f6
  42dfd3:	aad    0x0
  42dfd5:	add    dl,dh
  42dfd7:	add    BYTE PTR [ebx+0x5f8367],cl
  42dfdd:	(bad)  
  42dfde:	ds jo  0x42dfad
  42dfe1:	inc    edx
  42dfe2:	push   edx
  42dfe4:	cmp    edi,0x39
  42dfe7:	dec    DWORD PTR [edi+ebp*4]
  42dfea:	add    BYTE PTR [eax+eax*1],bl
  42dfed:	call   FWORD PTR [esi]
  42dfef:	cmp    DWORD PTR [ebx-0x7cf0ff9e],eax
  42dff5:	add    BYTE PTR [esi-0x7c6c3c01],bh
  42dffb:	stos   DWORD PTR es:[edi],eax
  42dffc:	mov    DWORD PTR [eax],eax
  42dffe:	jmp    0x837b:0xff59ffed
  42e005:	call   FWORD PTR [ecx]
  42e007:	dec    DWORD PTR [edi]
  42e009:	test   BYTE PTR [eax],0x8f
  42e00c:	mov    edi,edi
  42e00e:	or     eax,0xff4c83f3
  42e013:	mov    ds:0x8ecc83,eax
  42e018:	bound  eax,QWORD PTR [edi]
  42e01a:	jmp    eax
  42e01c:	inc    DWORD PTR [ebx-0x7d00411e]
  42e022:	push   esp
  42e024:	(bad)  
  42e025:	call   FWORD PTR [eax]
  42e027:	add    cl,bh
  42e029:	sbb    eax,0xd9ff
  42e02e:	and    esi,DWORD PTR [edx+0x2aff4183]
  42e034:	(bad)  
  42e035:	jmp    DWORD PTR [edi+0xf9b9cc]
  42e03b:	ins    DWORD PTR es:[edi],dx
  42e03c:	add    BYTE PTR [ebx+0x6bcc2656],al
  42e042:	add    bl,al
  42e044:	(bad)  
  42e045:	push   DWORD PTR [ebx]
  42e047:	mov    ecx,ebp
  42e049:	imul   eax,DWORD PTR [ebx+0x12ff002b],0xff718910
  42e053:	outs   dx,BYTE PTR ds:[esi]
  42e054:	mov    DWORD PTR [ebx-0x5eff33d7],eax
  42e05a:	add    dl,ah
  42e05c:	dec    esp
  42e05e:	xchg   esp,esp
  42e060:	xor    ebx,0xffffffff
  42e063:	add    BYTE PTR ss:[eax],al
  42e066:	mov    bl,0xff
  42e068:	adc    edx,eax
  42e06a:	push   edx
  42e06c:	(bad)  
  42e06d:	(bad)  
  42e06e:	mov    ebp,0x3d83c0
  42e073:	xlat   BYTE PTR ds:[ebx]
  42e074:	cmp    edi,0xfffffffc
  42e077:	jmp    DWORD PTR [edx*2+0xff4fff]
  42e07e:	call   0x8943:0x6200f6
  42e085:	int3   
  42e086:	jge    0x42e00b
  42e088:	aaa    
  42e089:	sub    ah,cl
  42e08b:	stc    
  42e08c:	add    BYTE PTR [ecx-0x80067eb],cl
  42e092:	add    bh,dh
  42e094:	inc    DWORD PTR [eax]
  42e096:	and    eax,0x43baff
  42e09b:	or     BYTE PTR [ecx-0x6a6c01],cl
  42e0a1:	adc    edi,edi
  42e0a3:	fwait
  42e0a4:	inc    DWORD PTR [ebx+0x3a6cfff5]
  42e0aa:	or     DWORD PTR [ebx],0x0
  42e0ad:	jmp    eax
  42e0af:	and    edi,edi
  42e0b1:	xchg   ecx,eax
  42e0b2:	add    BYTE PTR [edi-0x7ce70100],dh
  42e0b8:	mov    ebp,0xff7fff10
  42e0bd:	jmp    DWORD PTR [esi+0x5e]
  42e0c0:	int3   
  42e0c1:	cmp    bh,bh
  42e0c3:	lahf   
  42e0c4:	(bad)  
  42e0c5:	inc    DWORD PTR [eax-0x34]
  42e0c8:	je     0x42e0c1
  42e0ca:	dec    DWORD PTR [ecx+0x0]
  42e0cd:	adc    DWORD PTR [esi],0x4c
  42e0d0:	call   FWORD PTR [eax]
  42e0d2:	jmp    DWORD PTR [edi-0x34]
  42e0d5:	sbb    DWORD PTR [ebx+0x4d43ff],0xffffffc1
  42e0dc:	(bad)  
  42e0dd:	(bad)  
  42e0de:	cmp    BYTE PTR [eax-0x1],ch
  42e0e1:	xchg   esp,eax
  42e0e2:	jmp    FWORD PTR [ebx+0x0]
  42e0e5:	(bad)  
  42e0e6:	in     al,dx
  42e0e7:	int3   
  42e0e8:	es icebp 
  42e0ea:	or     DWORD PTR [ecx-0x1],0xffffffff
  42e0ee:	aaa    
  42e0ef:	and    DWORD PTR [ebx+0xd1ff6a],eax
  42e0f5:	call   FWORD PTR [eax-0x77]
  42e0f8:	push   cs
  42e0f9:	sub    edi,edi
  42e0fb:	out    0xcc,al
  42e0fd:	sub    DWORD PTR [ebx+0x8e00a4],0x75
  42e104:	int3   
  42e105:	jmp    DWORD PTR [edi-0x76855401]
  42e10b:	mov    al,0x83
  42e10d:	xor    DWORD PTR [eax+ecx*1+0x5ccc11cc],0xffffffff
  42e115:	add    BYTE PTR [ebx],dl
  42e117:	and    DWORD PTR [edi-0x140097],0x0
  42e11e:	push   cs
  42e11f:	xor    DWORD PTR [ecx-0xc6009c],ecx
  42e125:	add    BYTE PTR [esi-0x1],dl
  42e128:	sbb    DWORD PTR [eax],0xffffffff
  42e12b:	cmc    
  42e12c:	add    BYTE PTR [eax],al
  42e12e:	and    BYTE PTR [ecx-0x1],dl
  42e131:	push   edx
  42e132:	add    cl,dl
  42e134:	(bad)  
  42e135:	jmp    FWORD PTR [edi+0x0]
  42e138:	dec    edi
  42e139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e13a:	jmp    FWORD PTR [edi]
  42e13c:	inc    DWORD PTR [eax]
  42e13e:	scas   eax,DWORD PTR es:[edi]
  42e13f:	mov    esp,0x8bffe700
  42e144:	add    bh,bh
  42e146:	stc    
  42e147:	int3   
  42e148:	adc    DWORD PTR [edx],eax
  42e14a:	jmp    DWORD PTR [ecx]
  42e14c:	(bad)  
  42e14d:	call   DWORD PTR [edi-0xfffff2]
  42e153:	inc    ebp
  42e154:	inc    DWORD PTR [eax]
  42e156:	out    dx,eax
  42e157:	push   DWORD PTR [ebp-0x5a]
  42e15a:	mov    DWORD PTR [eax+eax*1-0x33f42e00],edx
  42e161:	test   BYTE PTR [eax],0xf5
  42e164:	add    BYTE PTR [eax],al
  42e166:	rol    BYTE PTR [eax],0xf1
  42e169:	push   edi
  42e16a:	(bad)  
  42e16b:	fild   DWORD PTR [eax]
  42e16d:	add    BYTE PTR [ecx+0x9389d3],cl
  42e173:	mov    eax,ds:0xcc7389ff
  42e178:	popf   
  42e179:	stos   DWORD PTR es:[edi],eax
  42e17a:	int3   
  42e17b:	jnp    0x42e17c
  42e17d:	int3   
  42e17e:	out    dx,eax
  42e17f:	dec    edx
  42e180:	dec    DWORD PTR [ebp-0x1]
  42e183:	fild   WORD PTR [eax]
  42e185:	add    BYTE PTR [esi],bh
  42e187:	inc    DWORD PTR [edi]
  42e189:	push   esi
  42e18a:	or     DWORD PTR [eax-0x1],0x0
  42e18e:	data16 or al,0x0
  42e191:	sbb    al,0x83
  42e193:	add    DWORD PTR [bx+si],0xffffffe9
  42e197:	or     DWORD PTR [ebp-0x5f],0xffffffff
  42e19b:	xchg   esp,eax
  42e19c:	add    bh,bh
  42e19e:	and    edi,DWORD PTR [ecx+0x0]
  42e1a1:	nop
  42e1a2:	mov    DWORD PTR [esi+0xc2cc00],edx
  42e1a8:	repz mov bl,0xff
  42e1ab:	push   ss
  42e1ac:	inc    DWORD PTR [eax]
  42e1ae:	inc    eax
  42e1af:	je     0x42e1b0
  42e1b1:	mov    dh,0x0
  42e1b3:	mov    ecx,0xff11ffff
  42e1b8:	pop    ss
  42e1b9:	lock jmp FWORD PTR [esi-0x1]
  42e1bd:	add    DWORD PTR [edi-0x2d],0xffffffff
  42e1c1:	inc    esi
  42e1c2:	jmp    DWORD PTR [esi-0x330eff7d]
  42e1c8:	pop    dx
  42e1ca:	dec    DWORD PTR [edx-0x1]
  42e1cd:	add    dh,al
  42e1cf:	sbb    DWORD PTR [ebx-0xc80069],eax
  42e1d5:	add    BYTE PTR [ecx],al
  42e1d7:	add    BYTE PTR [edi+0xcacc9f],ah
  42e1dd:	jmp    FWORD PTR [ebx-0x65]
  42e1e0:	push   DWORD PTR [esi]
  42e1e2:	inc    DWORD PTR [ebx]
  42e1e4:	add    BYTE PTR [ecx-0x3d023360],cl
  42e1ea:	call   FWORD PTR [ebp+0x0]
  42e1ed:	(bad)  
  42e1ee:	fsub   DWORD PTR [ebp-0x97c7a01]
  42e1f4:	inc    DWORD PTR [ebx-0x7571ff76]
  42e1fa:	(bad)  
  42e1fb:	(bad)  
  42e1fc:	(bad)  
  42e1fd:	jmp    FWORD PTR [ecx-0x12]
  42e200:	(bad)  
  42e201:	(bad)  
  42e203:	lock add bh,bh
  42e206:	push   edx
  42e207:	add    BYTE PTR [edx],dh
  42e209:	pop    esp
  42e20a:	mov    DWORD PTR [edi-0x1],esi
  42e20d:	add    DWORD PTR [edx-0x9eff01],0x4c
  42e214:	add    bh,bh
  42e216:	mov    bl,0x0
  42e218:	sub    dh,BYTE PTR [eax+0x89a700]
  42e21e:	(bad)  
  42e21f:	cld    
  42e220:	mov    DWORD PTR [esi],edx
  42e222:	int3   
  42e223:	sub    bh,bh
  42e225:	add    ch,cl
  42e227:	sbb    DWORD PTR [esi],0xffffffc0
  42e22a:	jmp    FWORD PTR [ebx+eax*4-0x1]
  42e22e:	sbb    cl,BYTE PTR [edi+0x51ffdf89]
  42e234:	add    BYTE PTR [ecx-0x6b23fffd],cl
  42e23a:	jmp    DWORD PTR [edi]
  42e23c:	inc    DWORD PTR [eax]
  42e23e:	jae    0x42e1e6
  42e240:	add    dl,bh
  42e242:	add    ah,bh
  42e244:	inc    DWORD PTR [ebx+0x51feff5e]
  42e24a:	int3   
  42e24b:	adc    DWORD PTR [eax],eax
  42e24d:	add    BYTE PTR [eax+0x1],dh
  42e250:	push   DWORD PTR [edi+edi*8-0x53]
  42e254:	add    bh,bh
  42e256:	push   ebp
  42e257:	add    DWORD PTR [eax+0xe],0x0
  42e25b:	aad    0xff
  42e25d:	(bad)  
  42e25e:	in     al,dx
  42e25f:	sar    bh,cl
  42e261:	lock add BYTE PTR [eax+0x91cc00],cl
  42e268:	cld    
  42e269:	jmp    0x7793:0xff007000
  42e270:	sub    DWORD PTR [ebp+0x0],0x2
  42e274:	add    BYTE PTR [eax],al
  42e276:	add    BYTE PTR [eax],al
  42e278:	jno    0x42e293
  42e27a:	push   DWORD PTR [eax]
  42e27c:	inc    DWORD PTR [eax]
  42e27e:	hlt    
  42e27f:	call   0x41423284
  42e284:	add    BYTE PTR [eax],al
  42e286:	lods   eax,DWORD PTR ds:[esi]
  42e287:	add    BYTE PTR [edx*1+0xff5683],al
  42e28e:	and    BYTE PTR [eax-0x1],0xdc
  42e292:	int3   
  42e293:	xor    eax,0xffd58300
  42e298:	cmp    esi,DWORD PTR [ecx-0x76d701]
  42e29e:	in     al,dx
  42e29f:	lock add DWORD PTR [eax-0x1],0x15
  42e2a4:	add    DWORD PTR [eax],0x22
  42e2a7:	(bad)  
  42e2a8:	fnstenv [edi+edi*8+0x57]
  42e2ac:	add    bh,bh
  42e2ae:	ret    
  42e2af:	adc    al,BYTE PTR [eax]
  42e2b1:	add    DWORD PTR [ebx-0x15ff00ff],eax
  42e2b7:	inc    eax
  42e2b9:	push   ds
  42e2ba:	call   DWORD PTR [edi]
  42e2bc:	(bad)  
  42e2bd:	call   esi
  42e2bf:	xchg   edi,edi
  42e2c1:	push   esi
  42e2c2:	inc    DWORD PTR [ebx+0x378983]
  42e2c8:	mov    esi,0x7b0043
  42e2cd:	mov    DWORD PTR [edi],ebx
  42e2cf:	add    edi,edi
  42e2d1:	inc    ecx
  42e2d2:	add    al,dl
  42e2d4:	or     DWORD PTR [ecx+0x1c5fff2a],0xffffff83
  42e2db:	inc    ebp
  42e2dc:	(bad)  
  42e2dd:	push   DWORD PTR [ebx+0x7cffd4]
  42e2e3:	mov    bh,0x83
  42e2e5:	jmp    DWORD PTR [eax]
  42e2e7:	add    bl,bh
  42e2e9:	loopne 0x42e2ea
  42e2eb:	pop    ds
  42e2ec:	int3   
  42e2ed:	add    BYTE PTR [ecx-0x4b0099],ah
  42e2f3:	int3   
  42e2f4:	(bad)  
  42e2f5:	dec    DWORD PTR [eax]
  42e2f7:	add    BYTE PTR ds:0x83b9fff5,dh
  42e2fd:	jmp    FWORD PTR [ecx]
  42e2ff:	dec    esp
  42e300:	add    dl,dl
  42e302:	add    BYTE PTR [esp+ecx*8],al
  42e305:	call   FWORD PTR [ebx-0x1]
  42e308:	or     DWORD PTR [eax],0x0
  42e30b:	sub    DWORD PTR [eax],eax
  42e30d:	jmp    FWORD PTR [edx+0x0]
  42e310:	add    BYTE PTR [eax+0xffb6ff],ch
  42e316:	icebp  
  42e317:	sub    DWORD PTR [ebx],0xffffffb9
  42e31a:	push   DWORD PTR [esi+0xd2300ff]
  42e320:	int3   
  42e321:	xlat   BYTE PTR ds:[ebx]
  42e322:	call   ecx
  42e324:	cmp    edi,0xffffff9e
  42e327:	(bad)  
  42e328:	clc    
  42e329:	lods   al,BYTE PTR ds:[esi]
  42e32a:	sub    DWORD PTR [edi+0x0],0xffffff83
  42e32e:	jno    0x42e2e7
  42e330:	add    BYTE PTR [ecx],dl
  42e332:	mov    DWORD PTR [edx],ecx
  42e334:	dec    esp
  42e336:	sbb    al,0x89
  42e338:	push   edx
  42e339:	test   DWORD PTR [ebx+0x4900ff0d],0xffbf0086
  42e343:	out    0xff,al
  42e345:	xor    ebp,0x0
  42e348:	jmp    esp
  42e34a:	jmp    FWORD PTR [edi-0x7fa5ff01]
  42e350:	add    BYTE PTR [edi+edi*8-0x6d003303],ah
  42e357:	call   edi
  42e359:	rol    DWORD PTR [eax],1
  42e35b:	push   edx
  42e35c:	add    bh,bh
  42e35e:	jg     0x42e3bc
  42e360:	add    BYTE PTR [ecx-0x1],ch
  42e363:	pop    es
  42e364:	(bad)  
  42e365:	jmp    DWORD PTR [edi]
  42e367:	add    BYTE PTR [edx],bh
  42e369:	mov    esi,0x831aff
  42e36e:	scas   eax,DWORD PTR es:[edi]
  42e36f:	push   es
  42e370:	call   FWORD PTR [esi-0xff9834]
  42e376:	test   al,0xff
  42e378:	mov    eax,ds:0xffccccfc
  42e37d:	add    esi,0xffffffe6
  42e380:	dec    DWORD PTR [ecx+ecx*4+0x7a]
  42e384:	add    BYTE PTR [ebx+0x4d7183b6],al
  42e38a:	int3   
  42e38b:	jbe    0x42e38d
  42e38d:	push   DWORD PTR [ecx]
  42e38f:	fld    DWORD PTR [ebx-0x3a00ac]
  42e395:	add    al,ah
  42e397:	call   eax
  42e399:	jmp    0x42e39a
  42e39b:	pop    ebx
  42e39c:	add    bh,bh
  42e39e:	hlt    
  42e39f:	mov    eax,ds:0xd0836fff
  42e3a4:	(bad)  
  42e3a5:	jmp    DWORD PTR [edi+0x1fc300]
  42e3ab:	fisttp WORD PTR [ecx+0xdfa9ff]
  42e3b1:	jae    0x42e3b3
  42e3b3:	xchg   ecx,eax
  42e3b4:	add    bh,bh
  42e3b6:	js     0x42e384
  42e3b8:	pop    edx
  42e3b9:	sub    cl,ah
  42e3bb:	mov    al,0xff
  42e3bd:	mov    eax,eax
  42e3bf:	cmp    al,0x0
  42e3c1:	jle    0x42e3c3
  42e3c3:	cmc    
  42e3c4:	add    BYTE PTR [eax],al
  42e3c6:	retf   
  42e3c7:	(bad)  
  42e3c8:	in     eax,dx
  42e3c9:	and    bh,bh
  42e3cb:	pop    ebx
  42e3cc:	add    DWORD PTR [eax],0xffffff96
  42e3cf:	or     eax,0x34ffaa00
  42e3d4:	add    BYTE PTR [eax],al
  42e3d6:	inc    ebp
  42e3d7:	add    BYTE PTR [ebx],dh
  42e3d9:	arpl   di,di
  42e3db:	inc    esp
  42e3dc:	add    BYTE PTR [ebx-0x2d004fb6],al
  42e3e2:	push   DWORD PTR ds:0x6b00cc
  42e3e8:	mov    WORD PTR [edx-0x1],?
  42e3eb:	mov    edi,edi
  42e3ed:	(bad)  
  42e3ee:	jmp    0xcc57e42e
  42e3f3:	fdiv   st(7),st
  42e3f5:	or     DWORD PTR [edi+edi*8+0x31],0xfffffffd
  42e3fa:	(bad)  
  42e3fb:	jnp    0x42e386
  42e3fd:	add    BYTE PTR ds:0xefffc,cl
  42e403:	aad    0x0
  42e405:	inc    DWORD PTR [edi]
  42e407:	add    BYTE PTR [esi-0xa000c6],bl
  42e40d:	add    BYTE PTR [edx],ch
  42e40f:	or     al,0xff
  42e411:	add    al,0x0
  42e413:	fdivp  st(7),st
  42e415:	jmp    DWORD PTR [eax+0x921bff]
  42e41b:	(bad)  
  42e41c:	mov    edi,edi
  42e41e:	mov    al,ds:0x831300dc
  42e423:	add    DWORD PTR [ebx+0x1683a9ff],eax
  42e429:	xor    eax,0x83a7ff
  42e42e:	out    0x99,eax
  42e430:	push   DWORD PTR [edx+0xff2e89]
  42e436:	(bad)  
  42e437:	(bad)  
  42e438:	cmp    BYTE PTR [ecx],cl
  42e43a:	push   DWORD PTR [ebp-0x49e7c77]
  42e440:	jmp    DWORD PTR [ecx]
  42e442:	cmp    DWORD PTR [edi+edi*8+0x2f838a83],0x4a
  42e44a:	add    BYTE PTR [ecx],bl
  42e44c:	inc    DWORD PTR [ebx+0x2100de30]
  42e452:	call   FWORD PTR [ebx-0x1]
  42e455:	mov    DWORD PTR [eax-0x1],edi
  42e458:	out    0xb4,al
  42e45a:	call   DWORD PTR [esi]
  42e45c:	(bad)  
  42e45d:	inc    DWORD PTR [edi]
  42e45f:	pop    ss
  42e460:	(bad)  
  42e461:	jnp    0x42e462
  42e463:	pop    ecx
  42e464:	dec    DWORD PTR [ecx-0x586b768c]
  42e46a:	add    BYTE PTR [esi-0x41eff7d],cl
  42e470:	add    BYTE PTR [esi],dl
  42e472:	dec    DWORD PTR [ecx-0x7d]
  42e475:	add    BYTE PTR [esi-0x33860a00],bl
  42e47b:	xchg   edx,eax
  42e47c:	add    BYTE PTR [eax],al
  42e47e:	inc    ebx
  42e47f:	mov    DWORD PTR [eax],eax
  42e481:	jecxz  0x42e482
  42e483:	ja     0x42e484
  42e485:	and    DWORD PTR [edx+0x848ff],0xffffffcd
  42e48c:	add    DWORD PTR [ebx-0x7900d38e],0xffffffff
  42e493:	fdivr  st,st(7)
  42e495:	mov    DWORD PTR [esi-0xf59801],ecx
  42e49b:	xor    eax,DWORD PTR [eax]
  42e49d:	mov    ebp,edi
  42e49f:	outs   dx,BYTE PTR ds:[esi]
  42e4a0:	int3   
  42e4a1:	pop    ss
  42e4a2:	add    BYTE PTR [edi-0x92ff01],bh
  42e4a8:	outs   dx,BYTE PTR ds:[esi]
  42e4a9:	adc    BYTE PTR [eax],al
  42e4ab:	(bad)  
  42e4ad:	add    BYTE PTR [esi+0x13],ah
  42e4b0:	add    BYTE PTR [edi+edi*8-0xc00ffd1],ch
  42e4b7:	add    BYTE PTR [edi+edi*8-0x1],bl
  42e4bb:	xchg   esp,eax
  42e4bc:	add    bh,bh
  42e4be:	in     eax,dx
  42e4bf:	call   0xff83:0x1f00b483
  42e4c6:	mov    bh,0xff
  42e4c8:	sub    bl,BYTE PTR [esi]
  42e4ca:	add    BYTE PTR [eax-0x1],cl
  42e4cd:	dec    edx
  42e4cf:	sub    al,0x0
  42e4d1:	sar    bh,1
  42e4d3:	adc    eax,0x8936ffff
  42e4d8:	les    ebx,FWORD PTR [ebx-0x34]
  42e4db:	lds    eax,FWORD PTR [eax]
  42e4dd:	add    dh,ah
  42e4df:	lods   eax,DWORD PTR ds:[esi]
  42e4e0:	sub    DWORD PTR [edi],0xffffff83
  42e4e3:	in     eax,dx
  42e4e4:	add    BYTE PTR [eax],al
  42e4e6:	jae    0x42e4e7
  42e4e8:	mov    ecx,0x89de8328
  42e4ed:	add    BYTE PTR [edx+esi*4],cl
  42e4f0:	jmp    DWORD PTR [esi-0x1]
  42e4f3:	or     eax,0xff0a89ff
  42e4f8:	jne    0x42e4d1
  42e4fa:	jmp    FWORD PTR [ecx+0x0]
  42e4fd:	add    BYTE PTR [ecx-0x1f00e8],dh
  42e503:	mov    DWORD PTR es:[eax],eax
  42e506:	cli    
  42e507:	push   DWORD PTR [edx]
  42e509:	add    DWORD PTR [ebx+0x67ffff0c],eax
  42e50f:	cdq    
  42e510:	(bad)  
  42e511:	fadd   DWORD PTR [eax]
  42e513:	mov    eax,DWORD PTR [ebx+0x2c007889]
  42e519:	pop    ss
  42e51a:	add    BYTE PTR [edi+edi*8],cl
  42e51d:	jmp    FWORD PTR [esi+0x8]
  42e520:	(bad)  
  42e521:	(bad)  
  42e522:	push   esp
  42e524:	inc    DWORD PTR [ebx+0x2b9289c2]
  42e52a:	jmp    DWORD PTR [ecx-0x7be10100]
  42e530:	(bad)  
  42e531:	mov    esi,0xfffffeff
  42e536:	add    eax,0xff54dacc
  42e53b:	mov    eax,ds:0x5586ff83
  42e540:	mov    DWORD PTR [edi+edi*8-0x41ff00d3],edx
  42e547:	inc    esp
  42e549:	iret   
  42e54a:	add    BYTE PTR [ebp+0x24d8ffff],dh
  42e550:	(bad)  
  42e551:	fild   WORD PTR [eax]
  42e553:	hlt    
  42e554:	add    BYTE PTR [ebx-0x2c3633c7],al
  42e55a:	xor    DWORD PTR [ebx],0xffffff89
  42e55d:	mov    esi,esp
  42e55f:	mov    ebx,0x3cff97cc
  42e564:	add    bh,bh
  42e566:	jo     0x42e568
  42e568:	cmp    BYTE PTR [ebx-0x77],bl
  42e56b:	inc    ecx
  42e56c:	(bad)  
  42e56d:	(bad)  
  42e56e:	clc    
  42e56f:	rol    BYTE PTR [eax],1
  42e571:	xor    bh,bh
  42e573:	and    al,BYTE PTR [ebx+0x18ff1eff]
  42e579:	data16 add BYTE PTR [ecx],dl
  42e57c:	add    BYTE PTR [eax],al
  42e57e:	xor    eax,0xffffff89
  42e581:	fs (bad) 
  42e583:	jmp    0x42e584
  42e585:	int3   
  42e586:	pop    edi
  42e587:	adc    DWORD PTR [eax+0xa],0xffffffff
  42e58b:	cmp    ecx,esp
  42e58d:	inc    DWORD PTR [ecx+0x58ff1e]
  42e593:	inc    ecx
  42e594:	inc    DWORD PTR [eax]
  42e596:	mov    cl,0x0
  42e598:	ins    DWORD PTR es:[edi],dx
  42e599:	clc    
  42e59a:	adc    DWORD PTR [ebx],0xffffffff
  42e59d:	dec    eax
  42e59f:	push   es
  42e5a0:	mov    DWORD PTR [esi-0x1],eax
  42e5a3:	xchg   DWORD PTR [ebx-0x1cff1c00],eax
  42e5a9:	outs   dx,DWORD PTR ds:[esi]
  42e5aa:	jmp    DWORD PTR [edi-0x4d207601]
  42e5b0:	jmp    DWORD PTR [edi-0x1]
  42e5b3:	stos   DWORD PTR es:[edi],eax
  42e5b4:	int3   
  42e5b5:	or     eax,0xffffff83
  42e5b8:	add    DWORD PTR [eax+0x0],ecx
  42e5bb:	ins    DWORD PTR es:[edi],dx
  42e5bc:	add    DWORD PTR [eax],0xffffff85
  42e5bf:	fild   DWORD PTR [eax]
  42e5c1:	pusha  
  42e5c2:	add    BYTE PTR [ecx],al
  42e5c4:	add    bh,bh
  42e5c6:	pop    es
  42e5c7:	jmp    FWORD PTR [edi+0xa00045]
  42e5cd:	and    DWORD PTR [edx-0xa7ff88],0x13
  42e5d4:	(bad)  
  42e5d5:	jmp    DWORD PTR [edi+0x0]
  42e5d8:	in     eax,dx
  42e5d9:	sub    eax,0xff8993ff
  42e5de:	pop    eax
  42e5df:	hlt    
  42e5e0:	add    BYTE PTR [esp+ecx*8-0x65],bl
  42e5e4:	add    bh,bh
  42e5e6:	jp     0x42e5e8
  42e5e8:	push   ebx
  42e5e9:	pop    edx
  42e5ea:	add    BYTE PTR [ebx+0x36bfcc83],al
  42e5f0:	add    BYTE PTR [edi+0x0],ch
  42e5f3:	push   eax
  42e5f4:	int3   
  42e5f5:	dec    DWORD PTR [edi-0x33d01677]
  42e5fb:	(bad)  
  42e5fc:	(bad)  
  42e5fd:	jmp    edi
  42e5ff:	mov    ch,0x0
  42e601:	pop    edx
  42e602:	mov    DWORD PTR [edi+edi*8-0x43ff1577],ebp
  42e609:	ret    0x8ff
  42e60c:	int3   
  42e60d:	add    bl,cl
  42e60f:	bound  eax,QWORD PTR [eax]
  42e611:	cmc    
  42e612:	(bad)  
  42e613:	cld    
  42e614:	add    bh,bh
  42e616:	test   al,0x0
  42e618:	or     bh,BYTE PTR [edi+edi*8+0x16]
  42e61c:	add    bh,bh
  42e61e:	pop    esp
  42e61f:	out    dx,eax
  42e620:	int3   
  42e621:	(bad)  
  42e622:	call   DWORD PTR ds:0xff93ff00
  42e628:	mov    bh,0xeb
  42e62a:	cmp    edx,0x0
  42e62d:	(bad)  
  42e62e:	aas    
  42e62f:	sti    
  42e630:	int3   
  42e631:	and    bh,bh
  42e633:	loop   0x42e634
  42e635:	add    BYTE PTR [eax],ah
  42e637:	dec    DWORD PTR [esi]
  42e639:	imul   edi,edi,0x5bccff02
  42e63f:	and    BYTE PTR [eax],al
  42e641:	mov    ebx,0xffffbacc
  42e646:	enter  0xd3ff,0xd2
  42e64a:	add    BYTE PTR [edi-0x1],cl
  42e64d:	add    ah,dh
  42e64f:	popa   
  42e650:	jmp    edx
  42e652:	or     DWORD PTR [eax+eax*1-0x1],0x3e
  42e657:	or     DWORD PTR [eax],0x52
  42e65a:	(bad)  
  42e65b:	mov    ecx,0x1be4ccff
  42e660:	int3   
  42e661:	inc    ebx
  42e662:	add    BYTE PTR [ebx-0x1],al
  42e665:	dec    DWORD PTR [edx-0x706201]
  42e66b:	mov    ebp,0x8ea4ff00
  42e670:	(bad)  
  42e671:	std    
  42e672:	add    BYTE PTR [edi-0xdf3301],ah
  42e678:	fcom   QWORD PTR [ecx-0x76af01]
  42e67e:	retf   0x8945
  42e681:	jl     0x42e683
  42e683:	idiv   bh
  42e685:	xor    DWORD PTR [eax+eax*1],0x65
  42e689:	gs int3 
  42e68b:	cmp    al,0xff
  42e68d:	add    BYTE PTR [edi],ah
  42e68f:	dec    ebp
  42e690:	push   DWORD PTR [eax-0x34]
  42e693:	or     cl,BYTE PTR [ecx+0x1effd7ff]
  42e699:	hlt    
  42e69a:	int3   
  42e69b:	xor    cl,BYTE PTR [ecx+0x43e1ff]
  42e6a1:	mov    ch,0x83
  42e6a3:	(bad)
  42e6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6a7:	int3   
  42e6a8:	mov    al,0xc9
  42e6aa:	dec    esp
  42e6ac:	inc    DWORD PTR [eax]
  42e6ae:	mov    dh,ch
  42e6b0:	call   FWORD PTR [ecx-0x7cffcd01]
  42e6b6:	jle    0x42e6b7
  42e6b8:	dec    ecx
  42e6b9:	stos   BYTE PTR es:[edi],al
  42e6ba:	int3   
  42e6bb:	test   edi,edi
  42e6bd:	jmp    FWORD PTR [edx]
  42e6bf:	inc    edx
  42e6c0:	call   FWORD PTR [edx-0x77]
  42e6c3:	sar    edi,0x0
  42e6c6:	addr16 int3 
  42e6c8:	fld    TBYTE PTR [eax+0x890fff]
  42e6ce:	fisub  WORD PTR [ebx+0x5e899200]
  42e6d4:	add    bh,bh
  42e6d6:	xchg   edi,edi
  42e6d8:	jp     0x42e705
  42e6da:	or     edx,0xffffff83
  42e6dd:	add    BYTE PTR [edx-0x5d],ch
  42e6e0:	mov    DWORD PTR [esi],esi
  42e6e2:	call   DWORD PTR [esi-0x49ff01]
  42e6e8:	(bad)  
  42e6ea:	add    ah,bl
  42e6ec:	add    bh,bh
  42e6ee:	stc    
  42e6ef:	jle    0x42e674
  42e6f1:	pop    edx
  42e6f2:	jmp    DWORD PTR [ecx+ecx*4-0x1]
  42e6f6:	outs   dx,BYTE PTR ds:[esi]
  42e6f7:	add    BYTE PTR [ebp+0x3],bl
  42e6fa:	add    BYTE PTR [edx-0x7d],al
  42e6fd:	int3   
  42e6fe:	mov    eax,ds:0x5cff1c
  42e703:	adc    eax,0xffe183ff
  42e708:	xchg   ebp,eax
  42e709:	adc    BYTE PTR [ecx-0x56000054],cl
  42e70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e710:	add    BYTE PTR [ebp-0xffea01],dl
  42e716:	nop
  42e717:	dec    DWORD PTR [edi-0x4f]
  42e71a:	int3   
  42e71b:	add    ecx,esp
  42e71d:	push   ebp
  42e71f:	ins    BYTE PTR es:[edi],dx
  42e720:	(bad)  
  42e721:	cmp    eax,0xff0036cc
  42e726:	adc    eax,0x897b58cc
  42e72b:	push   0xffffffcc
  42e72d:	jmp    FWORD PTR ds:0x78005f
  42e733:	cld    
  42e734:	(bad)  
  42e735:	jmp    DWORD PTR [eax+0x0]
  42e738:	fs stos DWORD PTR es:[edi],eax
  42e73a:	call   FWORD PTR [edx]
  42e73c:	inc    DWORD PTR [ebx-0x64ff5975]
  42e742:	(bad)  
  42e743:	cmp    DWORD PTR [eax],eax
  42e745:	add    BYTE PTR [eax-0x34],cl
  42e748:	mov    ch,BYTE PTR [eax-0xffa200]
  42e74e:	fs and bh,bh
  42e751:	mov    WORD PTR [eax],es
  42e753:	fadd   DWORD PTR [ebx-0x7c00d901]
  42e759:	push   0x0
  42e75b:	and    DWORD PTR [eax],eax
  42e75d:	dec    DWORD PTR [eax+0x73]
  42e760:	mov    ecx,ebx
  42e762:	add    BYTE PTR [ebx-0xbcff01],ch
  42e768:	gs mov esp,0x83ff1400
  42e76e:	mov    eax,DWORD PTR ds:0x4800a2cc
  42e774:	dec    esp
  42e776:	adc    eax,DWORD PTR [ebx+0x6dff2ade]
  42e77c:	inc    DWORD PTR [ebx-0x37c7884]
  42e782:	mov    DWORD PTR [esi-0x1],esp
  42e785:	add    BYTE PTR [ebp-0xda1401],al
  42e78b:	xchg   ebx,eax
  42e78c:	inc    DWORD PTR [ebx-0x47004d61]
  42e792:	add    bl,ah
  42e794:	inc    DWORD PTR [ebx+0x56a400ed]
  42e79a:	add    BYTE PTR [ebx],bh
  42e79c:	dec    esp
  42e79e:	inc    edx
  42e79f:	add    bh,bh
  42e7a1:	fcos   
  42e7a3:	(bad)  
  42e7a4:	int3   
  42e7a5:	mov    DWORD PTR [ebp-0x7cf0f47d],ecx
  42e7ab:	rol    BYTE PTR [eax],cl
  42e7ad:	int3   
  42e7ae:	mov    WORD PTR [edi+edi*8],es
  42e7b1:	mov    ecx,0xff1e83
  42e7b6:	jo     0x42e784
  42e7b8:	fstp   DWORD PTR [eax]
  42e7ba:	int3   
  42e7bb:	out    0xff,al
  42e7bd:	int3   
  42e7be:	mov    dl,0x97
  42e7c0:	inc    ebx
  42e7c2:	int3   
  42e7c3:	adc    edi,edi
  42e7c5:	add    BYTE PTR [ecx-0x7c6d0a01],bh
  42e7cb:	(bad)  
  42e7cc:	cmp    edi,0x79
  42e7cf:	push   es
  42e7d0:	add    BYTE PTR ds:0x830018ff,ah
  42e7d6:	(bad)  
  42e7d7:	jmp    DWORD PTR [edi+0x2d]
  42e7da:	(bad)  
  42e7db:	stc    
  42e7dc:	add    bh,bh
  42e7de:	pop    ecx
  42e7df:	mov    ecx,0x520092ff
  42e7e4:	add    bh,bh
  42e7e6:	mov    eax,ds:0xffb076cc
  42e7eb:	ret    
  42e7ec:	cmp    edi,0x4f
  42e7ef:	mov    DWORD PTR es:0xffff3d00,esp
  42e7f6:	mov    ebx,0xff341aff
  42e7fb:	and    bh,bh
  42e7fd:	sbb    DWORD PTR [ebp-0x12],0xffffffff
  42e801:	(bad)  
  42e803:	lods   al,BYTE PTR ds:[esi]
  42e804:	(bad)  
  42e805:	(bad)  
  42e806:	mov    DWORD PTR ds:[ebx-0x7ceeff3c],eax
  42e80d:	int3   
  42e80e:	sub    ebp,DWORD PTR [ebx-0x16ffb601]
  42e814:	(bad)  
  42e815:	(bad)  
  42e816:	mov    ebp,0xffb13100
  42e81b:	or     cl,BYTE PTR [ecx-0x76c48834]
  42e821:	ins    DWORD PTR es:[edi],dx
  42e822:	add    BYTE PTR [ecx-0xd37c01],dl
  42e828:	dec    edi
  42e829:	mov    esp,0xff00f489
  42e82e:	push   esp
  42e82f:	ins    BYTE PTR es:[edi],dx
  42e830:	xor    DWORD PTR [edi+edi*8-0x2b007700],0x0
  42e838:	ss ror esp,cl
  42e83b:	(bad)  
  42e83c:	int3   
  42e83d:	add    BYTE PTR [edi-0x28],cl
  42e840:	mov    DWORD PTR [esi+0xff4183],ecx
  42e846:	mov    esp,0x8961cf00
  42e84b:	iret   
  42e84c:	mov    edi,edi
  42e84e:	sti    
  42e84f:	pop    es
  42e850:	dec    DWORD PTR [edx-0x1]
  42e853:	hlt    
  42e854:	inc    DWORD PTR [eax]
  42e856:	adc    al,0x83
  42e858:	jmp    0x2a6b93
  42e85d:	add    cl,dl
  42e85f:	repnz dec DWORD PTR [ebx+0x62ff]
  42e866:	xor    DWORD PTR [eax],eax
  42e868:	xchg   ecx,eax
  42e869:	cli    
  42e86a:	dec    esp
  42e86c:	(bad)  
  42e86d:	inc    edx
  42e86f:	adc    bh,bh
  42e871:	or     bh,bh
  42e873:	fs (bad) 
  42e875:	call   eax
  42e877:	push   DWORD PTR [esi+edx*4]
  42e87a:	sbb    DWORD PTR [esi],0xffffffff
  42e87d:	sbb    DWORD PTR [eax+0x1a],0xffffffff
  42e881:	test   DWORD PTR [eax],0x85ccff7e
  42e887:	push   ebx
  42e889:	ror    ah,0x7a
  42e88c:	inc    DWORD PTR [eax]
  42e88e:	or     DWORD PTR [ebx-0x34],esi
  42e891:	ja     0x42e893
  42e893:	loope  0x42e861
  42e895:	dec    DWORD PTR [eax-0x1]
  42e898:	nop
  42e899:	or     al,BYTE PTR [ebx+0x2383003a]
  42e89f:	pop    ds
  42e8a0:	mov    DWORD PTR [ebx+0x0],ecx
  42e8a3:	jnp    0x42e8a4
  42e8a5:	jmp    DWORD PTR [esi-0x1]
  42e8a8:	inc    ebx
  42e8a9:	dec    edx
  42e8aa:	call   FWORD PTR [ecx]
  42e8ac:	int3   
  42e8ad:	call   DWORD PTR [edi]
  42e8af:	dec    edi
  42e8b0:	call   DWORD PTR [ebx]
  42e8b2:	dec    DWORD PTR [edi+0x94ffff]
  42e8b8:	dec    eax
  42e8b9:	sbb    edi,edi
  42e8bb:	xor    bh,bh
  42e8bd:	mov    ebx,ecx
  42e8bf:	dec    eax
  42e8c0:	add    BYTE PTR [ebp+0x0],al
  42e8c3:	jns    0x42e84e
  42e8c5:	dec    DWORD PTR [eax+eax*1+0x5c]
  42e8c9:	call   0x142a5cd
  42e8ce:	in     eax,0xe9
  42e8d0:	push   DWORD PTR [edi+0xcc6aff]
  42e8d6:	loope  0x42e8d7
  42e8d8:	clc    
  42e8d9:	xlat   BYTE PTR ds:[ebx]
  42e8da:	add    BYTE PTR [eax-0x7ff17700],dl
  42e8e0:	adc    DWORD PTR [esi],0xffffffff
  42e8e3:	cmp    bh,bh
  42e8e5:	int3   
  42e8e6:	out    dx,eax
  42e8e7:	jmp    DWORD PTR [ecx-0x4f]
  42e8ea:	int3   
  42e8eb:	test   edi,edi
  42e8ed:	call   DWORD PTR [ecx]
  42e8ef:	jmp    0xcc:0xd9ccb183
  42e8f6:	inc    edx
  42e8f7:	int3   
  42e8f8:	aad    0x20
  42e8fa:	dec    DWORD PTR [eax-0x7d]
  42e8fd:	add    BYTE PTR ds:0xff52008b,cl
  42e903:	js     0x42e888
  42e905:	jmp    edx
  42e907:	int3   
  42e908:	adc    dh,BYTE PTR [ebp+0x834400]
  42e90e:	test   BYTE PTR [esi+0x5dff3883],dl
  42e914:	(bad)  
  42e915:	push   esp
  42e917:	cmp    esp,0xffffffcb
  42e91a:	add    BYTE PTR [ebp+0x2588ffff],al
  42e920:	add    BYTE PTR [ebx],ch
  42e922:	jmp    esi
  42e924:	int3   
  42e925:	call   DWORD PTR [ecx+0x114b83]
  42e92b:	jmp    0x2adf6d2f
  42e930:	int3   
  42e931:	mov    ch,0xff
  42e933:	push   edi
  42e934:	add    bh,bh
  42e936:	mov    DWORD PTR [ebx-0x53ff346a],0x9c50ffff
  42e940:	jmp    FWORD PTR [ecx-0x1]
  42e943:	fmul   DWORD PTR [ecx-0x107c4f01]
  42e949:	cld    
  42e94a:	dec    DWORD PTR [eax+0x0]
  42e94d:	add    BYTE PTR [ecx-0x9ffaf],ah
  42e953:	lods   al,BYTE PTR ds:[esi]
  42e954:	(bad)  
  42e955:	inc    ecx
  42e957:	inc    DWORD PTR [ecx-0x7cab005e]
  42e95d:	add    BYTE PTR [esi],dh
  42e95f:	xchg   edx,eax
  42e960:	dec    esp
  42e962:	add    BYTE PTR [edi],bl
  42e964:	add    BYTE PTR [eax],al
  42e966:	add    eax,0x83e5c900
  42e96b:	in     al,dx
  42e96c:	mov    edi,edi
  42e96e:	popf   
  42e96f:	sub    al,0x0
  42e971:	mov    ds:0xccffd9ff,eax
  42e976:	add    BYTE PTR es:0x9b005c,dh
  42e97d:	call   DWORD PTR [esi-0x74]
  42e980:	int3   
  42e981:	out    dx,eax
  42e982:	int3   
  42e983:	mov    ebx,0xff9f00ff
  42e988:	clc    
  42e989:	inc    ebp
  42e98a:	int3   
  42e98b:	gs int3 
  42e98d:	jmp    DWORD PTR [ebx+ebx*1-0x1]
  42e991:	ret    
  42e992:	add    ch,dl
  42e994:	add    bh,bh
  42e996:	xor    esp,ecx
  42e998:	stc    
  42e999:	stos   BYTE PTR es:[edi],al
  42e99a:	xor    DWORD PTR [eax-0x1],0x0
  42e99e:	call   0xcd21ea72
  42e9a3:	in     al,0xcc
  42e9a5:	(bad)  
  42e9a6:	(bad)  
  42e9a8:	js     0x42e9fc
  42e9aa:	dec    esp
  42e9ac:	(bad)  
  42e9ad:	(bad)  
  42e9ae:	fst    DWORD PTR [edx-0x77]
  42e9b1:	jae    0x42e9b2
  42e9b3:	enter  0xffff,0x1f
  42e9b7:	add    BYTE PTR [esi],bl
  42e9b9:	mov    edi,?
  42e9bb:	popa   
  42e9bc:	add    BYTE PTR [ebx-0x70ff1daa],al
  42e9c2:	add    BYTE PTR [ebx-0x807d00],ah
  42e9c8:	scas   al,BYTE PTR es:[edi]
  42e9c9:	das    
  42e9ca:	add    BYTE PTR [ebp-0x7d],ch
  42e9cd:	jmp    DWORD PTR [edx-0x39]
  42e9d0:	add    BYTE PTR [eax+0xff2a00],cl
  42e9d6:	icebp  
  42e9d7:	add    BYTE PTR [ebx-0x18],dh
  42e9da:	call   FWORD PTR [esi+0x0]
  42e9dd:	xor    DWORD PTR [edi],0xffffffaf
  42e9e0:	mov    DWORD PTR [ecx-0x1],edx
  42e9e3:	fld    QWORD PTR [eax]
  42e9e5:	dec    DWORD PTR [edi+0x0]
  42e9e8:	inc    ecx
  42e9e9:	mov    esi,0x83dfff
  42e9ee:	xchg   edi,ecx
  42e9f0:	jmp    FWORD PTR [ebx+0x0]
  42e9f3:	mov    edx,0xcce6ff83
  42e9f8:	outs   dx,DWORD PTR ds:[esi]
  42e9f9:	out    dx,al
  42e9fa:	(bad)  
  42e9fb:	cmp    eax,0x781ff00
  42ea00:	jmp    DWORD PTR [edi+0x0]
  42ea03:	bound  ecx,QWORD PTR [ecx-0x1a00ad01]
  42ea09:	scas   eax,DWORD PTR es:[edi]
  42ea0a:	push   DWORD PTR [ebx+eax*4-0x4f1a34]
  42ea11:	aam    0xff
  42ea13:	adc    eax,0xff9bff83
  42ea18:	(bad)  [ecx+0x0]
  42ea1b:	in     eax,dx
  42ea1c:	(bad)  
  42ea1d:	(bad)  
  42ea1e:	fild   QWORD PTR [eax]
  42ea20:	add    BYTE PTR ds:0xff00f183,dh
  42ea26:	dec    edx
  42ea27:	add    BYTE PTR [ebp+ebp*8-0x7cff4e00],dh
  42ea2e:	mov    cl,0x6b
  42ea30:	cmp    DWORD PTR [edi-0x1],0xffffffd0
  42ea34:	add    bh,bh
  42ea36:	sbb    DWORD PTR [eax],eax
  42ea38:	sti    
  42ea39:	fwait
  42ea3a:	sub    ebp,0xffffffcc
  42ea3d:	add    BYTE PTR [ebp+0xdf004c],ah
  42ea43:	xchg   esi,eax
  42ea44:	(bad)  
  42ea45:	dec    DWORD PTR [edi]
  42ea47:	call   FWORD PTR [ecx]
  42ea49:	mov    ds:0xcc8924ff,eax
  42ea4e:	psraw  mm0,QWORD PTR [eax]
  42ea51:	and    al,0x0
  42ea53:	scas   eax,DWORD PTR es:[edi]
  42ea54:	(bad)  
  42ea55:	(bad)  
  42ea56:	mov    ebp,0xf8acff
  42ea5b:	test   DWORD PTR [eax],0x789c00
  42ea61:	imul   eax,DWORD PTR [eax],0xffffffaa
  42ea64:	(bad)  
  42ea65:	call   DWORD PTR [esi-0xbaa701]
  42ea6b:	adc    al,BYTE PTR [ebx-0x58f377]
  42ea71:	sbb    al,BYTE PTR [eax]
  42ea73:	lahf   
  42ea74:	inc    DWORD PTR [eax]
  42ea76:	int3   
  42ea77:	add    BYTE PTR [eax-0x7cfe00e7],dh
  42ea7d:	inc    edi
  42ea7f:	test   DWORD PTR [ebx+0x80ff57],0xfd00b4cc
  42ea89:	loope  0x42ea8a
  42ea8b:	mov    ecx,0xaca68300
  42ea90:	(bad)  
  42ea91:	out    dx,al
  42ea92:	call   FWORD PTR [eax-0xe00100]
  42ea98:	imul   edx,DWORD PTR [eax],0x0
  42ea9b:	dec    esi
  42ea9c:	(bad)  
  42ea9d:	jmp    DWORD PTR [ebp-0x1]
  42eaa0:	jmp    DWORD PTR [edx]
  42eaa2:	add    BYTE PTR [esp+ecx*8],bl
  42eaa5:	push   DWORD PTR [ebx-0x7670647d]
  42eaab:	outs   dx,BYTE PTR ds:[esi]
  42eaac:	add    DWORD PTR [eax],0x13
  42eaaf:	ja     0x42ea34
  42eab1:	dec    DWORD PTR ds:[ebx+eax*4]
  42eab5:	add    al,al
  42eab7:	jmp    DWORD PTR [edx-0x7ccd00c7]
  42eabd:	jmp    DWORD PTR [ecx-0xd]
  42eac0:	jmp    FWORD PTR [edx-0x76ff0201]
  42eac6:	in     eax,dx
  42eac7:	int3   
  42eac8:	mov    ebx,0xff59ffd1
  42eacd:	inc    DWORD PTR [esi]
  42eacf:	sub    bh,bh
  42ead1:	cmp    al,0xcc
  42ead3:	loope  0x42ead5
  42ead5:	add    BYTE PTR [ebp+0xd598ff],dh
  42eadb:	outs   dx,DWORD PTR ds:[esi]
  42eadc:	(bad)  
  42eadd:	call   FWORD PTR [ecx]
  42eadf:	jae    0x42eae0
  42eae1:	cmp    eax,0xff83b7ff
  42eae6:	push   ebp
  42eae7:	mov    DWORD PTR [edi*8-0x9200],edi
  42eaee:	mov    ah,0x17
  42eaf0:	add    BYTE PTR ds:0xcc9000,dh
  42eaf6:	mov    esp,0xff0b2c83
  42eafb:	jo     0x42eafd
  42eafd:	add    bh,al
  42eaff:	(bad)  
  42eb00:	inc    DWORD PTR [ecx+0xff11cc]
  42eb06:	cwde   
  42eb07:	adc    edx,0xffffffb1
  42eb0a:	push   DWORD PTR [edi+edi*8]
  42eb0d:	call   FWORD PTR [edx+0x24]
  42eb10:	xor    DWORD PTR [ecx-0x77],0xffffffe7
  42eb14:	(bad)  
  42eb15:	dec    DWORD PTR [esi+0x5c6800]
  42eb1b:	int    0xcc
  42eb1d:	add    cl,dl
  42eb1f:	or     eax,DWORD PTR [ebx-0x7c34001d]
  42eb25:	call   FWORD PTR [edi]
  42eb27:	add    BYTE PTR [ecx-0x7f7cb0],ch
  42eb2d:	add    BYTE PTR [edx-0x8733fa],dh
  42eb33:	mov    edi,edi
  42eb35:	sub    esp,0xffffff89
  42eb38:	loopne 0x42eb6b
  42eb3a:	push   DWORD PTR [ecx-0x1]
  42eb3d:	add    BYTE PTR [ebp+0x1783b5],dh
  42eb43:	test   eax,0xff3f83cc
  42eb48:	mov    WORD PTR [ebp-0x1],ds
  42eb4b:	dec    edx
  42eb4c:	inc    DWORD PTR [eax]
  42eb4e:	jmp    0x42eb7c
  42eb50:	(bad)  
  42eb51:	sub    DWORD PTR ds:[edi],0xffffffff
  42eb55:	adc    DWORD PTR [esi-0x77],0xfffffff9
  42eb59:	sub    esp,ecx
  42eb5b:	jnp    0x42eb5c
  42eb5d:	add    BYTE PTR [ebp-0x76840004],ch
  42eb63:	arpl   di,di
  42eb65:	int3   
  42eb66:	scas   eax,DWORD PTR es:[edi]
  42eb67:	jmp    FWORD PTR [eax]
  42eb69:	inc    WORD PTR [ecx+0x0]
  42eb6d:	inc    DWORD PTR [ebx-0x47]
  42eb70:	add    BYTE PTR [edx-0x1],ah
  42eb73:	cmp    edi,0xffffffff
  42eb76:	xor    al,0x0
  42eb78:	and    DWORD PTR [edx+0x0],0x21ccffb1
  42eb7f:	sar    bh,1
  42eb81:	pop    eax
  42eb82:	xor    DWORD PTR [edi+edi*8],0x0
  42eb86:	push   0x899dc1ff
  42eb8b:	mov    edx,0xb46effff
  42eb90:	add    BYTE PTR [edx-0x7c1f7d],bh
  42eb96:	and    edi,edi
  42eb98:	leave  
  42eb99:	mov    dl,0x0
  42eb9b:	mov    ebp,0x3fcd83ff
  42eba0:	xor    DWORD PTR [esi-0x3376e77d],0x60
  42eba7:	jmp    FWORD PTR [ebp-0xe97c95]
  42ebad:	add    BYTE PTR [edi+0x1d],dl
  42ebb0:	add    BYTE PTR [ebx],cl
  42ebb2:	call   FWORD PTR [ebx-0x7d]
  42ebb5:	call   DWORD PTR [edi+edi*8+0x5e]
  42ebb9:	mov    al,BYTE PTR [eax]
  42ebbb:	xchg   edi,eax
  42ebbc:	mov    DWORD PTR [eax],eax
  42ebbe:	xor    edx,DWORD PTR [edi+edi*8-0x6f]
  42ebc2:	and    DWORD PTR [ecx-0x1],0xffffff89
  42ebc6:	mov    ebx,0x83b93bff
  42ebcb:	pop    es
  42ebcc:	(bad)  
  42ebcd:	jmp    ebp
  42ebcf:	fld    DWORD PTR [eax]
  42ebd1:	in     al,0xcc
  42ebd3:	ss int3 
  42ebd5:	jmp    FWORD PTR [edx-0x1]
  42ebd8:	test   ch,bh
  42ebda:	add    dh,bh
  42ebdc:	add    DWORD PTR [eax],0xffffffff
  42ebdf:	call   0x0:0x3f00cb00
  42ebe6:	dec    esp
  42ebe7:	mov    DWORD PTR [ebx],esi
  42ebe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ebea:	jmp    DWORD PTR [esi]
  42ebec:	(bad)  
  42ebed:	(bad)  
  42ebee:	in     al,dx
  42ebef:	add    DWORD PTR [ebx-0xbe0049],eax
  42ebf5:	(bad)  
  42ebf6:	jmp    0x42ebf8
  42ebf8:	in     eax,dx
  42ebf9:	mov    edi,0xff22ff
  42ebfe:	dec    esp
  42ebff:	jbe    0x42eb84
  42ec01:	dec    eax
  42ec02:	call   DWORD PTR [edi]
  42ec04:	add    bh,bh
  42ec06:	add    DWORD PTR [ecx+0x1fff1362],ecx
  42ec0c:	mov    DWORD PTR [eax],eax
  42ec0e:	add    al,0x8f
  42ec10:	add    bh,ch
  42ec12:	mov    edi,ecx
  42ec14:	add    BYTE PTR [ecx+0xb4d8312],cl
  42ec1a:	int3   
  42ec1b:	mov    eax,0x8f57ffcc
  42ec20:	add    BYTE PTR [ebx],al
  42ec22:	add    BYTE PTR [eax-0x1],ah
  42ec25:	call   DWORD PTR [eax+eax*1-0x476a60e]
  42ec2c:	add    BYTE PTR [ecx+0x7eff2a43],cl
  42ec32:	dec    ecx
  42ec34:	(bad)  
  42ec35:	inc    DWORD PTR [eax-0x77]
  42ec38:	jmp    0x42ec78
  42ec3a:	call   esi
  42ec3c:	int3   
  42ec3d:	jmp    FWORD PTR ds:0xff090071
  42ec43:	and    eax,0xff6d0000
  42ec48:	pushf  
  42ec49:	rol    DWORD PTR [eax],1
  42ec4b:	hlt    
  42ec4c:	dec    DWORD PTR [ecx+0x3eff1673]
  42ec52:	int3   
  42ec53:	mov    bh,0xff
  42ec55:	add    bh,cl
  42ec57:	dec    DWORD PTR [esi+0x9eff9e]
  42ec5d:	add    cl,dh
  42ec5f:	xchg   edi,edi
  42ec61:	mov    ebx,0xff5389
  42ec66:	push   cs
  42ec67:	call   DWORD PTR [ebp+0x10]
  42ec6a:	jmp    FWORD PTR [ecx]
  42ec6c:	inc    DWORD PTR [eax]
  42ec6e:	jp     0x42ec43
  42ec70:	add    BYTE PTR [edi+edi*8+0x71ff007c],dl
  42ec77:	add    ah,bh
  42ec79:	aam    0xff
  42ec7b:	mov    BYTE PTR [ebx-0x7c52ef7d],al
  42ec81:	xchg   bh,bh
  42ec83:	pop    eax
  42ec84:	add    DWORD PTR [eax],0x6a
  42ec87:	(bad)  
  42ec88:	fstp   TBYTE PTR [edx+0x0]
  42ec8b:	xchg   ecx,eax
  42ec8c:	dec    DWORD PTR [ecx+0x7fffe36c]
  42ec92:	add    dl,dl
  42ec94:	inc    DWORD PTR [ebx-0x4900054]
  42ec9a:	cmp    DWORD PTR [edx+0x3448383],0xffffff83
  42eca1:	pushf  
  42eca2:	cmp    DWORD PTR [ebx-0x7cd3ff01],0xffffffd8
  42eca9:	cld    
  42ecaa:	call   FWORD PTR [eax+0xb51ffff]
  42ecb0:	add    BYTE PTR [ebp-0xff3a00],ah
  42ecb6:	cmp    bh,0x1f
  42ecb9:	aad    0xcc
  42ecbb:	cld    
  42ecbc:	add    ah,cl
  42ecbe:	inc    ebx
  42ecbf:	mov    dh,0x0
  42ecc1:	cmp    bh,bh
  42ecc3:	jmp    0xf332:0xff7d00ff
  42ecca:	int3   
  42eccb:	mov    al,0x0
  42eccd:	(bad)  
  42ecce:	out    dx,eax
  42eccf:	fdivr  st,st(7)
  42ecd1:	jecxz  0x42ecd2
  42ecd3:	leave  
  42ecd4:	(bad)  
  42ecd5:	call   DWORD PTR [edx]
  42ecd7:	add    ah,ch
  42ecd9:	test   bh,bh
  42ecdb:	cmc    
  42ecdc:	add    BYTE PTR [eax],al
  42ecde:	ficomp DWORD PTR [ebx+eax*4-0x61]
  42ece2:	int3   
  42ece3:	sar    edi,1
  42ece5:	add    BYTE PTR [ecx-0x1],bl
  42ece8:	jmp    0xfff0ec84
  42eced:	add    BYTE PTR [eax-0x6c],bl
  42ecf0:	or     DWORD PTR [ecx-0x33ff2d00],0x1d
  42ecf7:	jmp    FWORD PTR [ebx-0x72]
  42ecfa:	add    BYTE PTR [edi+edi*8-0x77],ah
  42ecfe:	adc    esi,DWORD PTR [eax]
  42ed00:	call   DWORD PTR [ecx-0x7c008e01]
  42ed06:	cli    
  42ed07:	add    BYTE PTR [edx+0x6b8967],cl
  42ed0d:	add    BYTE PTR [ecx],bl
  42ed0f:	jmp    0x5a42a513
  42ed14:	(bad)  
  42ed15:	push   DWORD PTR [esi]
  42ed17:	push   ebp
  42ed19:	cmp    al,0x0
  42ed1b:	sbb    eax,DWORD PTR [ebx-0xd20f01]
  42ed21:	imul   edi,edi,0xffffffd5
  42ed24:	add    BYTE PTR [ecx-0x3af9765a],cl
  42ed2a:	dec    DWORD PTR [ecx+ecx*4]
  42ed2d:	add    BYTE PTR [ecx+0x11],dl
  42ed30:	dec    DWORD PTR [ebp+0x0]
  42ed33:	xlat   BYTE PTR ds:[ebx]
  42ed34:	inc    DWORD PTR [eax]
  42ed36:	mov    bh,bh
  42ed38:	add    ecx,edx
  42ed3a:	cmp    DWORD PTR [edi-0x42637c01],0xffffffff
  42ed41:	inc    ebp
  42ed42:	push   DWORD PTR ds:0xffad0089
  42ed48:	cmc    
  42ed49:	add    ah,cl
  42ed4b:	jmp    0x5fff:0xc0e83cc
  42ed52:	push   DWORD PTR [eax]
  42ed54:	(bad)  
  42ed55:	jmp    FWORD PTR [edi+0x0]
  42ed58:	iret   
  42ed59:	out    0xff,eax
  42ed5b:	sub    BYTE PTR [ebx-0x187b0801],al
  42ed61:	add    bh,bh
  42ed63:	cmp    eax,0xb16989ff
  42ed68:	mov    bh,bh
  42ed6a:	add    DWORD PTR [ebp-0x568ff01],0x2b
  42ed71:	mov    DWORD PTR [eax],eax
  42ed73:	int    0xff
  42ed75:	(bad)  
  42ed76:	mov    eax,0xff00d490
  42ed7b:	inc    DWORD PTR [eax]
  42ed7d:	push   DWORD PTR [ebp-0x7c2c0f]
  42ed83:	cwde   
  42ed84:	mov    edi,edi
  42ed86:	jno    0x42ed1d
  42ed88:	imul   eax,DWORD PTR [eax],0xffcc5dff
  42ed8e:	jmp    0xffc7:0xffff4090
  42ed95:	add    BYTE PTR [ebx],bl
  42ed97:	push   ecx
  42ed98:	cmp    bh,bh
  42ed9a:	sub    DWORD PTR [ebx+0x7d440000],0xfffffffa
  42eda1:	(bad)  
  42eda2:	call   DWORD PTR [ebp-0x464b0001]
  42eda8:	rol    DWORD PTR [ebx-0x334701],0xc3
  42edaf:	xchg   edi,eax
  42edb0:	mov    dh,0x83
  42edb2:	or     DWORD PTR [edi+0x783fff89],0x71
  42edb9:	(bad)  
  42edba:	(bad)  
  42edbb:	stc    
  42edbc:	inc    DWORD PTR [ebx+0x2f29c2]
  42edc2:	int3   
  42edc3:	leave  
  42edc4:	add    BYTE PTR [eax],al
  42edc6:	dec    edi
  42edc7:	daa    
  42edc8:	int    0xcc
  42edca:	call   DWORD PTR [ecx+0x124affff]
  42edd0:	in     eax,dx
  42edd1:	mov    edi,edi
  42edd3:	inc    WORD PTR [eax]
  42edd6:	push   eax
  42edd7:	sbb    BYTE PTR [eax-0x1],dl
  42edda:	push   DWORD PTR [ebx+eax*4-0x77]
  42edde:	push   ebp
  42eddf:	xchg   ecx,eax
  42ede0:	rol    BYTE PTR [ebx-0x76ff3c34],cl
  42ede6:	mov    dl,0x66
  42ede8:	ret    
  42ede9:	(bad)  
  42edea:	call   FWORD PTR [ebp+0x6983ffff]
  42edf0:	push   esp
  42edf1:	add    BYTE PTR [eax],al
  42edf3:	sti    
  42edf4:	add    bh,bh
  42edf6:	inc    edi
  42edf7:	jle    0x42ee59
  42edf9:	(bad)  
  42edfa:	jmp    DWORD PTR [edi+0x133600ff]
  42ee00:	pop    ds
  42ee01:	add    BYTE PTR [eax],al
  42ee03:	mov    cs,WORD PTR [ecx+0x603e3cff]
  42ee09:	add    bh,bh
  42ee0b:	jg     0x42ed96
  42ee0d:	cmp    esi,0xffffff94
  42ee10:	mov    bl,0xff
  42ee12:	call   FWORD PTR [edi-0x42860000]
  42ee18:	and    eax,0xffe70000
  42ee1d:	and    DWORD PTR [ebx],0x2
  42ee20:	fadd   QWORD PTR [ebx-0xb000]
  42ee26:	mov    dl,0xe0
  42ee28:	sbb    eax,0xff52ff83
  42ee2d:	(bad)  
  42ee2e:	cli    
  42ee2f:	gs pop ebx
  42ee31:	add    DWORD PTR [eax],0xffffffb0
  42ee34:	(bad)  
  42ee35:	jmp    esp
  42ee37:	int3   
  42ee38:	sar    bh,1
  42ee3a:	add    BYTE PTR [esi+0x574fff00],al
  42ee40:	pop    ss
  42ee41:	cmp    edi,0x6f
  42ee44:	int3   
  42ee45:	add    bh,cl
  42ee47:	xchg   esi,eax
  42ee48:	test   DWORD PTR [eax],eax
  42ee4a:	dec    ecx
  42ee4c:	(bad)  
  42ee4d:	call   esp
  42ee4f:	dec    ebp
  42ee50:	add    ecx,esp
  42ee52:	sub    DWORD PTR [edx+0x3d530000],0xffffffad
  42ee59:	inc    DWORD PTR [ebx+0x1e83ffe9]
  42ee5f:	mov    bl,0xab
  42ee61:	dec    esp
  42ee63:	xor    eax,DWORD PTR [eax]
  42ee65:	(bad)  
  42ee66:	jmp    0x42eeba
  42ee68:	inc    ebx
  42ee69:	dec    esp
  42ee6b:	dec    edx
  42ee6c:	inc    DWORD PTR [ebx-0x31606d]
  42ee72:	add    al,ch
  42ee74:	add    BYTE PTR [eax],al
  42ee76:	sub    al,0xaa
  42ee78:	xchg   DWORD PTR [ebx-0x7c763201],eax
  42ee7e:	pop    edi
  42ee7f:	jl     0x42ee51
  42ee81:	add    bh,bh
  42ee83:	test   edi,edi
  42ee85:	add    BYTE PTR [ebx-0x330ef7],dh
  42ee8b:	in     eax,dx
  42ee8c:	inc    DWORD PTR [ebx-0x6ee226]
  42ee92:	call   DWORD PTR [esi]
  42ee94:	(bad)  
  42ee95:	jmp    DWORD PTR [eax]
  42ee97:	aam    0x35
  42ee99:	dec    esp
  42ee9b:	mov    eax,ds:0x4ef0ccff
  42eea0:	jbe    0x42eea1
  42eea2:	add    bl,dl
  42eea4:	int3   
  42eea5:	call   ebx
  42eea7:	mov    BYTE PTR [esi],cl
  42eea9:	cmp    edi,0x34
  42eeac:	int3   
  42eead:	add    DWORD PTR [edi+ebx*8+0x7d],0xffffffcc
  42eeb2:	add    BYTE PTR [ecx],dh
  42eeb4:	(bad)  
  42eeb5:	inc    DWORD PTR [edx+0xccf077]
  42eebb:	popa   
  42eebc:	inc    DWORD PTR [eax]
  42eebe:	outs   dx,BYTE PTR ds:[esi]
  42eebf:	out    dx,eax
  42eec0:	sbb    edi,edi
  42eec2:	call   eax
  42eec4:	add    bh,bh
  42eec6:	lock ds dec ecx
  42eec9:	add    BYTE PTR [ebx-0x137c3395],al
  42eecf:	in     eax,0xdf
  42eed1:	add    bh,bh
  42eed3:	lods   al,BYTE PTR ds:[esi]
  42eed4:	add    BYTE PTR [eax],al
  42eed6:	sub    BYTE PTR [esi+0x64],cl
  42eed9:	add    bh,bh
  42eedb:	pop    ebp
  42eedc:	inc    DWORD PTR [ebx+0x5150d8]
  42eee2:	dec    DWORD PTR [ecx]
  42eee4:	(bad)  
  42eee5:	call   esi
  42eee7:	repz les eax,FWORD PTR [ebx-0x76ffe200]
  42eeee:	lock loope 0x42ef3e
  42eef1:	add    DWORD PTR [eax],0x2c
  42eef4:	add    bh,bh
  42eef6:	(bad)
  42eef9:	add    bh,bh
  42eefb:	iret   
  42eefc:	add    BYTE PTR [ebx-0x332bc6df],al
  42ef02:	adc    DWORD PTR [eax-0x143b7d00],0xffffff9b
  42ef09:	inc    DWORD PTR [eax]
  42ef0b:	cli    
  42ef0c:	add    bh,bh
  42ef0e:	ds ret 0x8964
  42ef12:	mov    ecx,ecx
  42ef14:	int3   
  42ef15:	inc    DWORD PTR [edi-0x30]
  42ef18:	jmp    0xff90ef1c
  42ef1d:	(bad)  
  42ef1e:	cmp    eax,0xff00a24e
  42ef23:	mov    al,0x0
  42ef25:	inc    DWORD PTR [ebx]
  42ef27:	push   ebx
  42ef28:	mov    dl,0xff
  42ef2a:	int3   
  42ef2b:	nop
  42ef2c:	or     DWORD PTR [ecx-0x76e007],0x0
  42ef33:	inc    esp
  42ef34:	(bad)  
  42ef35:	jmp    FWORD PTR [ebp-0x337c47f2]
  42ef3b:	(bad)  
  42ef3e:	sbb    al,0xdc
  42ef40:	cwde   
  42ef41:	add    BYTE PTR [eax],al
  42ef43:	lock inc DWORD PTR [eax]
  42ef46:	in     al,0x7d
  42ef48:	mov    eax,DWORD PTR [eax]
  42ef4a:	push   DWORD PTR [edx]
  42ef4c:	add    DWORD PTR [eax],0x56
  42ef4f:	lea    eax,[ebp-0x437c7d]
  42ef55:	dec    DWORD PTR [esi+0x6b]
  42ef58:	call   0x28ff:0x73ffff
  42ef5f:	shr    BYTE PTR [edx],0xff
  42ef62:	(bad)  
  42ef63:	fadd   QWORD PTR [ebx+0x4632bbff]
  42ef69:	or     DWORD PTR [ecx+0x50cc8339],0xffffffb3
  42ef70:	sbb    bh,bh
  42ef72:	int3   
  42ef73:	stos   DWORD PTR es:[edi],eax
  42ef74:	add    BYTE PTR [eax],al
  42ef76:	push   edi
  42ef77:	retf   
  42ef78:	dec    ebp
  42ef79:	(bad)  
  42ef7a:	(bad)  
  42ef7b:	inc    BYTE PTR [ebx-0x38356100]
  42ef81:	inc    DWORD PTR [eax]
  42ef83:	imul   ecx,DWORD PTR [ecx+0x6f7c40cc],0xf100ff
  42ef8d:	add    BYTE PTR [esi],bl
  42ef8f:	test   DWORD PTR [esi],ecx
  42ef91:	(bad)  
  42ef92:	push   DWORD PTR [eax+eax*1+0x3500483]
  42ef99:	add    ah,cl
  42ef9b:	call   0x28:0xf00b8383
  42efa2:	and    DWORD PTR ds:0xe5e4ffff,0x40
  42efa9:	add    BYTE PTR [ebx-0x22000052],al
  42efaf:	leave  
  42efb0:	dec    esi
  42efb1:	inc    DWORD PTR [ebx-0x35337c23]
  42efb7:	scas   al,BYTE PTR es:[edi]
  42efb8:	mov    eax,ds:0xffbb00cc
  42efbd:	int3   
  42efbe:	lock in al,0xef
  42efc1:	inc    DWORD PTR [eax]
  42efc3:	fwait
  42efc4:	inc    DWORD PTR [eax]
  42efc6:	fwait
  42efc7:	mov    ah,0x77
  42efc9:	add    BYTE PTR [eax],al
  42efcb:	imul   edi,edi,0x4316e7ff
  42efd1:	(bad)  
  42efd2:	call   DWORD PTR [eax]
  42efd4:	inc    DWORD PTR [eax]
  42efd6:	xor    al,0xa4
  42efd8:	push   ebx
  42efd9:	(bad)  
  42efda:	jmp    DWORD PTR ds:0x76d4ff00
  42efe0:	push   esi
  42efe1:	inc    DWORD PTR [eax]
  42efe3:	push   0x4d7800ff
  42efe8:	aad    0x0
  42efea:	add    cl,bh
  42efec:	mov    edi,edi
  42efee:	pop    es
  42efef:	pop    ecx
  42eff0:	cwde   
  42eff1:	add    bh,bh
  42eff3:	ins    DWORD PTR es:[edi],dx
  42eff4:	add    BYTE PTR [eax],al
  42eff6:	(bad)  
  42eff7:	push   eax
  42eff8:	popf   
  42eff9:	add    BYTE PTR [eax],al
  42effb:	pop    eax
  42effc:	add    BYTE PTR [eax],al
  42effe:	mov    WORD PTR [edi+0x4a],cs
  42f001:	add    BYTE PTR [eax],al
  42f003:	inc    esp
  42f004:	(bad)  
  42f005:	call   DWORD PTR [ebx-0xff3db1]
  42f00b:	repnz add BYTE PTR [ebx-0x66a8b8],al
  42f012:	add    BYTE PTR [ecx-0x1c587d00],ch
  42f018:	pop    ss
  42f019:	add    BYTE PTR [eax],al
  42f01b:	in     al,dx
  42f01c:	inc    DWORD PTR [eax]
  42f01e:	je     0x42f03b
  42f020:	aad    0xff
  42f022:	(bad)  
  42f023:	(bad)  
  42f025:	add    BYTE PTR [edi],cl
  42f027:	(bad)  
  42f028:	mov    bh,0x0
  42f02a:	add    BYTE PTR [edx-0x3b9d0001],al
  42f030:	test   eax,0xcaff00
  42f035:	dec    eax
  42f037:	mov    eax,ds:0x84ffffbc
  42f03c:	add    bh,bh
  42f03e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f03f:	mov    ch,0xbe
  42f041:	(bad)  
  42f042:	call   ebp
  42f044:	(bad)  
  42f045:	inc    edx
  42f047:	sbb    BYTE PTR [eax],0x83
  42f04a:	call   FWORD PTR [edi-0x1]
  42f04d:	dec    DWORD PTR [ecx]
  42f04f:	lds    edi,FWORD PTR [ecx]
  42f051:	add    BYTE PTR [eax],al
  42f053:	mov    ds:0xb4f6ff00,al
  42f058:	cmp    eax,0x98ffff
  42f05d:	jmp    DWORD PTR ds:0xffb40f
  42f063:	adc    al,BYTE PTR [eax]
  42f065:	add    BYTE PTR [eax+edi*4],cl
  42f068:	or     edi,edi
  42f06a:	call   FWORD PTR [esi]
  42f06c:	inc    DWORD PTR [ebx-0xbff61a]
  42f072:	add    ch,dh
  42f074:	add    DWORD PTR [ebx-0xc8bc47],0xffffffff
  42f07b:	in     eax,0x89
  42f07d:	mov    esp,ebx
  42f07f:	push   esp
  42f080:	(bad)  
  42f083:	dec    edi
  42f084:	int3   
  42f085:	(bad)  
  42f086:	jmp    0x1423588
  42f08b:	jmp    0x42f08d
  42f08d:	(bad)  
  42f08e:	fimul  WORD PTR ds:[edx+0x2bff83]
  42f095:	int3   
  42f096:	in     al,dx
  42f097:	sub    eax,DWORD PTR [eax+eax*1]
  42f09a:	add    BYTE PTR [esi-0x1],dh
  42f09d:	add    BYTE PTR ds:0xff00e82e,bh
  42f0a3:	jge    0x42f028
  42f0a5:	push   esp
  42f0a7:	mov    edx,0x2200ff79
  42f0ac:	inc    DWORD PTR [eax]
  42f0ae:	or     ebp,edx
  42f0b0:	test   al,0xff
  42f0b2:	add    BYTE PTR [edx-0x1],al
  42f0b5:	add    cl,bh
  42f0b7:	push   esi
  42f0b8:	in     al,0xff
  42f0ba:	call   FWORD PTR [eax+0x0]
  42f0bd:	call   edx
  42f0bf:	jmp    FWORD PTR [ebp-0x76be3400]
  42f0c5:	add    BYTE PTR [esp+edi*2-0x63ff001e],ch
  42f0cc:	(bad)  
  42f0cd:	jmp    FWORD PTR [ebp-0x8]
  42f0d0:	xchg   edx,eax
  42f0d1:	add    DWORD PTR [eax],0xffffffa0
  42f0d4:	int3   
  42f0d5:	dec    DWORD PTR [ecx+0x34]
  42f0d8:	adc    bh,bh
  42f0da:	jmp    DWORD PTR [edi-0x1]
  42f0dd:	inc    DWORD PTR [eax*1+0x3bcccc24]
  42f0e4:	mov    DWORD PTR [eax],eax
  42f0e6:	inc    esp
  42f0e7:	dec    ebx
  42f0e8:	loopne 0x42f0ea
  42f0ea:	add    BYTE PTR ds:0x2b4a00ff,ch
  42f0f0:	jae    0x42f0f1
  42f0f2:	jmp    FWORD PTR [edi-0x1]
  42f0f5:	int3   
  42f0f6:	ins    BYTE PTR es:[edi],dx
  42f0f7:	pop    esi
  42f0f8:	inc    esi
  42f0f9:	inc    DWORD PTR [eax]
  42f0fb:	push   cs
  42f0fc:	inc    DWORD PTR [eax]
  42f0fe:	icebp  
  42f0ff:	les    ebp,FWORD PTR [edx-0x1]
  42f102:	push   DWORD PTR [edi+edi*8-0x61169100]
  42f109:	add    DWORD PTR [eax],0x15
  42f10c:	(bad)  
  42f10d:	inc    edx
  42f10f:	dec    esi
  42f110:	jle    0x42f111
  42f112:	add    BYTE PTR [eax],al
  42f114:	inc    DWORD PTR [eax]
  42f116:	xchg   esp,eax
  42f117:	lea    esi,[ecx-0x20ff7d]
  42f11d:	add    BYTE PTR [edx+0x5c],dl
  42f120:	daa    
  42f121:	dec    DWORD PTR [ecx-0x617c00f2]
  42f127:	loop   0x42f17b
  42f129:	inc    DWORD PTR [eax]
  42f12b:	cmp    eax,DWORD PTR [eax]
  42f12d:	inc    DWORD PTR ds:0x90c2
  42f133:	xchg   esp,eax
  42f134:	add    BYTE PTR [eax],al
  42f136:	test   DWORD PTR [edi],ecx
  42f138:	adc    al,BYTE PTR [eax]
  42f13a:	add    BYTE PTR [eax-0x1],dh
  42f13d:	add    DWORD PTR [edx-0x7c7cdef2],0x5d
  42f144:	dec    esp
  42f146:	idiv   ebx
  42f148:	adc    al,BYTE PTR [ebx-0x9f00]
  42f14e:	push   cs
  42f14f:	or     DWORD PTR [edx],edx
  42f151:	cmp    edi,0x6e
  42f154:	(bad)  
  42f155:	call   DWORD PTR [eax]
  42f157:	mov    eax,ds:0xb300ffd7
  42f15c:	add    bh,bh
  42f15e:	ret    0x48d0
  42f161:	dec    esp
  42f163:	stos   DWORD PTR es:[edi],eax
  42f164:	add    BYTE PTR [eax],al
  42f166:	imul   edi,DWORD PTR ds:0x19ffffae,0x99e683ff
  42f170:	ret    
  42f171:	(bad)  
  42f172:	push   DWORD PTR [edx]
  42f174:	inc    DWORD PTR [ebx+0xa01450]
  42f17a:	and    DWORD PTR [ebx],0xffffffff
  42f17d:	(bad)  
  42f17e:	cmp    BYTE PTR [ebp-0x4d],dl
  42f181:	add    bh,bh
  42f183:	ins    DWORD PTR es:[edi],dx
  42f184:	add    DWORD PTR [eax],0xffffffe6
  42f187:	inc    esp
  42f188:	dec    esi
  42f189:	add    bh,bh
  42f18b:	dec    esp
  42f18c:	int3   
  42f18d:	add    dh,bh
  42f18f:	sub    eax,0x38ffccc5
  42f194:	int3   
  42f195:	push   DWORD PTR [ecx-0x2e]
  42f198:	mov    dl,0xff
  42f19a:	mov    DWORD PTR [ecx+0x5a90ffff],esp
  42f1a0:	rol    DWORD PTR [eax],cl
  42f1a2:	add    BYTE PTR [edx-0x1],bh
  42f1a5:	add    DWORD PTR [edi+0x41],0xffffffe2
  42f1a9:	dec    esp
  42f1ab:	pop    ds
  42f1ac:	(bad)  
  42f1ad:	jmp    DWORD PTR [esi-0x7c00c6dd]
  42f1b3:	or     edi,edi
  42f1b5:	int3   
  42f1b6:	push   es
  42f1b7:	jle    0x42f1c8
  42f1b9:	int3   
  42f1ba:	jmp    DWORD PTR [edi-0x2d220000]
  42f1c0:	retf   
  42f1c1:	(bad)  
  42f1c2:	(bad)  
  42f1c3:	jmp    0xff11:0x698a00ff
  42f1ca:	add    BYTE PTR [eax+eax*1-0x44c16001],bh
  42f1d1:	add    BYTE PTR [eax],al
  42f1d3:	loop   0x42f1d4
  42f1d5:	add    BYTE PTR [ebx-0x37ac],ah
  42f1db:	rol    BYTE PTR [eax],1
  42f1dd:	add    dl,ch
  42f1df:	pop    esp
  42f1e0:	mov    edx,0xff590000
  42f1e5:	add    BYTE PTR [ecx-0x25],bh
  42f1e8:	(bad)  
  42f1eb:	pop    edi
  42f1ec:	add    bh,bh
  42f1ee:	xchg   edi,eax
  42f1ef:	es imul edi,edi,0xffffffcc
  42f1f3:	pusha  
  42f1f4:	int3   
  42f1f5:	jmp    ecx
  42f1f7:	aas    
  42f1f8:	in     al,0xff
  42f1fa:	add    BYTE PTR [edi+edi*8-0x1],bl
  42f1fe:	sbb    BYTE PTR [edx+0x79008940],ah
  42f204:	cmp    edi,0xffffffb5
  42f207:	test   eax,0x9383ffa4
  42f20c:	int3   
  42f20d:	add    BYTE PTR [ebp-0x76ffaa56],al
  42f213:	outs   dx,DWORD PTR ds:[esi]
  42f214:	dec    esp
  42f216:	lock add dh,cl
  42f219:	add    DWORD PTR [ebx-0x567c00c1],0xffffffe1
  42f220:	mov    edi,0xfff90083
  42f225:	sub    DWORD PTR [eax-0xff822b],0x65
  42f22c:	(bad)  
  42f22d:	call   eax
  42f22f:	std    
  42f230:	cmp    eax,0xffeeff00
  42f235:	add    BYTE PTR [ecx+0xccc5b1],al
  42f23b:	mov    ds:0x285083ff,eax
  42f240:	push   es
  42f241:	inc    DWORD PTR [ebx-0x42ff76a2]
  42f247:	jmp    0xff:0x680000cc
  42f24e:	inc    edi
  42f24f:	in     eax,dx
  42f250:	test   ah,0x0
  42f253:	retf   
  42f254:	mov    edi,edi
  42f256:	xchg   ebp,eax
  42f257:	aad    0xa5
  42f259:	add    bh,bh
  42f25b:	dec    ebp
  42f25c:	int3   
  42f25d:	inc    DWORD PTR [edx-0x3300c7a1]
  42f263:	repz cmp edi,0x6d
  42f267:	xchg   ebp,eax
  42f268:	stc    
  42f269:	(bad)  
  42f26a:	(bad)  
  42f26b:	js     0x42f1f0
  42f26d:	add    BYTE PTR [ecx-0x4f],bl
  42f270:	mov    dl,0xff
  42f272:	inc    edi
  42f274:	add    DWORD PTR [ebx-0x7624b25a],0xffffffff
  42f27b:	jge    0x42f27d
  42f27d:	and    eax,0x62
  42f280:	adc    eax,0x895000ff
  42f285:	add    bl,ah
  42f287:	je     0x42f26a
  42f289:	inc    DWORD PTR [eax]
  42f28b:	mov    eax,DWORD PTR [ebx+0x7d2fd3ff]
  42f291:	(bad)  
  42f292:	(bad)  
  42f293:	cli    
  42f294:	cmp    edi,0x5d
  42f297:	pop    ebx
  42f298:	jecxz  0x42f266
  42f29a:	sub    DWORD PTR [edi+edi*8+0x737205ff],0xffffffff
  42f2a2:	mov    edi,edi
  42f2a4:	add    bh,bh
  42f2a6:	sbb    edi,DWORD PTR [esi+0x74ff8937]
  42f2ac:	(bad)  
  42f2ad:	push   DWORD PTR ds:0xffff59c4
  42f2b3:	mov    bh,bh
  42f2b5:	int3   
  42f2b6:	pop    edx
  42f2b7:	retf   
  42f2b8:	lods   al,BYTE PTR ds:[esi]
  42f2b9:	add    BYTE PTR [eax],al
  42f2bb:	adc    al,0xff
  42f2bd:	mov    DWORD PTR [ecx-0x7c33357d],ebp
  42f2c3:	xlat   BYTE PTR ds:[ebx]
  42f2c4:	inc    DWORD PTR [eax]
  42f2c6:	cwde   
  42f2c7:	pop    esi
  42f2c8:	mov    dh,0xff
  42f2ca:	add    BYTE PTR [esi+0x700dff00],bl
  42f2d0:	xor    esp,ecx
  42f2d2:	jmp    FWORD PTR [edi+0x525a83ff]
  42f2d8:	lods   al,BYTE PTR ds:[esi]
  42f2d9:	inc    DWORD PTR [eax]
  42f2db:	jp     0x42f266
  42f2dd:	add    bh,dl
  42f2df:	mov    esp,0x3d00ff94
  42f2e4:	inc    DWORD PTR [ebx-0x803637]
  42f2ea:	adc    DWORD PTR [edi+0x0],0xffffff89
  42f2ee:	out    0xde,al
  42f2f0:	pop    DWORD PTR [eax]
  42f2f2:	add    ch,cl
  42f2f4:	dec    esp
  42f2f6:	cs xchg esp,eax
  42f2f8:	in     eax,dx
  42f2f9:	inc    DWORD PTR [eax]
  42f2fb:	in     eax,0xff
  42f2fd:	(bad)  
  42f2fe:	jg     0x42f2c2
  42f300:	call   0xcb83:0xff7b83ff
  42f307:	xor    bh,BYTE PTR ds:0xc3ff00
  42f30d:	push   ecx
  42f30f:	test   eax,0xbaff83f9
  42f314:	add    bh,bh
  42f316:	mov    eax,ds:0x89ff43bb
  42f31b:	test   edi,edi
  42f31d:	jmp    DWORD PTR [eax-0x51]
  42f320:	dec    edx
  42f321:	add    ah,cl
  42f323:	aaa    
  42f324:	add    bh,bh
  42f326:	(bad)  
  42f327:	jmp    0x3c42f3a9
  42f32c:	(bad)  
  42f32d:	(bad)  
  42f32e:	jmp    0xffe0:0x8389c842
  42f335:	call   FWORD PTR [ecx-0xf9a6]
  42f33b:	adc    al,0x0
  42f33d:	inc    DWORD PTR ds:0xffff640c
  42f343:	dec    ebp
  42f344:	add    bh,bh
  42f346:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f348:	xor    al,0x83
  42f34a:	mov    edx,esi
  42f34c:	add    bh,bh
  42f34e:	scas   eax,DWORD PTR es:[edi]
  42f34f:	pop    edi
  42f350:	call   0xe4ff:0xffcfffff
  42f357:	ret    0xd7
  42f35a:	call   FWORD PTR [eax+0x4968ffff]
  42f360:	mov    ds:0xffddff83,al
  42f365:	push   ecx
  42f367:	push   eax
  42f368:	fdivr  st,st(7)
  42f36a:	add    bl,dl
  42f36c:	or     esp,0x2b
  42f36f:	ret    
  42f370:	add    bh,bh
  42f372:	(bad)  
  42f373:	mov    eax,0x58e200ff
  42f378:	sar    edi,0x0
  42f37b:	xchg   esi,eax
  42f37c:	(bad)  
  42f37d:	call   FWORD PTR [ebp-0xffe9be]
  42f383:	mov    eax,0x5b2a83ff
  42f388:	idiv   bh
  42f38a:	push   eax
  42f38c:	add    bh,bh
  42f38e:	into   
  42f38f:	or     DWORD PTR [edi-0x267c01],edi
  42f395:	push   ebp
  42f397:	out    0x6,al
  42f399:	int3   
  42f39a:	int3   
  42f39b:	scas   al,BYTE PTR es:[edi]
  42f39c:	inc    DWORD PTR [ebx-0xef114a]
  42f3a2:	push   esi
  42f3a4:	inc    DWORD PTR [eax]
  42f3a6:	pop    esp
  42f3a7:	stos   DWORD PTR es:[edi],eax
  42f3a8:	xchg   bh,bh
  42f3aa:	(bad)  
  42f3ab:	(bad)  
  42f3ac:	dec    esp
  42f3ae:	dec    ecx
  42f3af:	cs inc edx
  42f3b1:	add    bh,bh
  42f3b3:	or     bh,bh
  42f3b5:	(bad)  
  42f3b6:	mov    edi,0xff7478
  42f3bb:	sbb    bh,bh
  42f3bd:	int3   
  42f3be:	test   eax,0x83ff164f
  42f3c3:	lds    eax,FWORD PTR [ebx-0x4c98677d]
  42f3c9:	(bad)  
  42f3ca:	call   FWORD PTR [ecx-0x2cf87c7d]
  42f3d0:	or     DWORD PTR [eax],eax
  42f3d2:	inc    DWORD PTR [edx-0x2db6ff7d]
  42f3d8:	pop    ebp
  42f3d9:	(bad)  
  42f3da:	inc    ecx
  42f3dc:	dec    DWORD PTR [ecx-0x8706fc]
  42f3e2:	mov    DWORD PTR [ecx-0x1135ff77],esi
  42f3e8:	jp     0x42f373
  42f3ea:	call   FWORD PTR [edi+edi*8+0x4d515000]
  42f3f1:	inc    DWORD PTR [ebx+0x183007b]
  42f3f7:	fdivr  DWORD PTR ds:0xff29ff00
  42f3fd:	jmp    FWORD PTR [esi+0x42]
  42f400:	ins    DWORD PTR es:[edi],dx
  42f401:	add    bh,bh
  42f403:	mov    bl,0x0
  42f405:	int3   
  42f406:	pop    eax
  42f407:	out    dx,al
  42f408:	inc    esp
  42f409:	mov    edi,edi
  42f40b:	imul   edi,edi,0x727c4f00
  42f411:	int3   
  42f412:	push   DWORD PTR [ebx]
  42f414:	inc    DWORD PTR [ebx-0xcb1efa]
  42f41a:	inc    DWORD PTR [edi+edi*8-0x252b2001]
  42f421:	dec    DWORD PTR [ecx+0xb00002e]
  42f427:	shl    BYTE PTR [edi],1
  42f429:	add    bh,bh
  42f42b:	pop    esp
  42f42c:	(bad)  
  42f42d:	(bad)  
  42f42e:	frstor ds:0x8bffffe2
  42f434:	(bad)  
  42f435:	call   DWORD PTR [ecx]
  42f437:	lods   eax,DWORD PTR ds:[esi]
  42f438:	das    
  42f439:	cmp    edi,0xffffffba
  42f43c:	(bad)  
  42f43d:	jmp    FWORD PTR [esi+ecx*4-0x47]
  42f441:	add    BYTE PTR [ebx-0x3d0000ae],al
  42f447:	js     0x42f475
  42f449:	(bad)  
  42f44a:	dec    DWORD PTR [edx]
  42f44c:	add    bh,bh
  42f44e:	fdivr  DWORD PTR [ebx+0x23ff0065]
  42f454:	mov    DWORD PTR [eax],eax
  42f456:	xor    bl,al
  42f458:	int    0x83
  42f45a:	push   DWORD PTR [ebx]
  42f45c:	int3   
  42f45d:	add    BYTE PTR [eax],al
  42f45f:	lahf   
  42f460:	int    0xff
  42f462:	or     DWORD PTR [edx],0x0
  42f465:	mov    DWORD PTR [ebx+ebp*2],esi
  42f468:	out    dx,eax
  42f469:	add    bh,bh
  42f46b:	pop    eax
  42f46c:	add    BYTE PTR [eax],al
  42f46e:	jmp    0x838b:0xffff7100
  42f475:	call   FWORD PTR [esi+0x2e]
  42f478:	xchg   esi,eax
  42f479:	add    bh,bh
  42f47b:	test   DWORD PTR [eax],0xe6014b83
  42f481:	inc    DWORD PTR [ebx-0x6c007cf3]
  42f487:	fsubr  DWORD PTR [ecx]
  42f489:	(bad)  
  42f48a:	call   DWORD PTR [ecx]
  42f48c:	dec    DWORD PTR [ecx-0x8e300d]
  42f492:	push   DWORD PTR [eax+0x72e9ff00]
  42f498:	into   
  42f499:	add    bh,bh
  42f49b:	inc    edx
  42f49c:	inc    DWORD PTR [ebx-0x767aad61]
  42f4a2:	int3   
  42f4a3:	mov    al,0x0
  42f4a5:	mov    esp,ebx
  42f4a7:	adc    al,0xd
  42f4a9:	mov    edi,edi
  42f4ab:	jmp    0x43d0f5af
  42f4b0:	and    cl,BYTE PTR [ecx-0x3300a701]
  42f4b6:	jl     0x42f46d
  42f4b8:	push   eax
  42f4b9:	inc    DWORD PTR [ebx+0x66008995]
  42f4bf:	jnp    0x42f523
  42f4c1:	mov    edi,edi
  42f4c3:	(bad)  
  42f4c4:	inc    DWORD PTR [eax]
  42f4c6:	mov    dh,0xfc
  42f4c8:	std    
  42f4c9:	int3   
  42f4ca:	(bad)  
  42f4cb:	jmp    0x42f4cc
  42f4cd:	add    bh,dl
  42f4cf:	and    eax,0x63ff005f
  42f4d4:	(bad)  
  42f4d5:	push   DWORD PTR [eax]
  42f4d7:	mov    eax,0x6a830046
  42f4dc:	inc    DWORD PTR [ebx+0x8839b0]
  42f4e2:	add    BYTE PTR [ecx],dh
  42f4e4:	add    bh,bh
  42f4e6:	jns    0x42f565
  42f4e8:	add    BYTE PTR [eax],al
  42f4ea:	inc    DWORD PTR [esi+0x31e7ff00]
  42f4f0:	mov    al,ds:0x92ffff
  42f4f5:	(bad)  
  42f4f6:	fsubr  QWORD PTR [ebx-0x7600ff7f]
  42f4fc:	add    DWORD PTR [eax],0xfffffff7
  42f4ff:	cld    
  42f500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f501:	add    DWORD PTR [ebx-0x7d7c0098],0xffffffec
  42f508:	ror    ah,1
  42f50a:	sub    DWORD PTR [eax+eax*1],0xffffffff
  42f50e:	mov    al,ds:0xffccbaca
  42f513:	jge    0x42f498
  42f515:	adc    DWORD PTR [ebp+0x4c],0xffffff85
  42f519:	add    bh,bh
  42f51b:	or     DWORD PTR [eax],eax
  42f51d:	add    bh,bh
  42f51f:	fldenv [edi+0xb4ff83]
  42f525:	add    BYTE PTR [edx],cl
  42f527:	in     al,0xa6
  42f529:	cmp    edi,0xffffff9b
  42f52c:	add    DWORD PTR [eax],0xffffffd2
  42f52f:	cmp    BYTE PTR [ebx-0x7c7a7d00],al
  42f535:	call   FWORD PTR [ebp+0x58]
  42f538:	xchg   edx,eax
  42f539:	add    BYTE PTR [eax],al
  42f53b:	push   edx
  42f53c:	(bad)  
  42f53d:	call   FWORD PTR [edx+edi*2+0x67]
  42f541:	add    BYTE PTR [eax],al
  42f543:	pop    ss
  42f544:	add    bh,bh
  42f546:	js     0x42f514
  42f548:	mov    al,ds:0x83b6ff89
  42f54d:	add    BYTE PTR [edi-0x778],ah
  42f553:	inc    esi
  42f554:	cmp    edi,0xffffffed
  42f557:	pushf  
  42f558:	cdq    
  42f559:	(bad)  
  42f55a:	inc    DWORD PTR [edx]
  42f55c:	add    bh,bh
  42f55e:	retf   0xba34
  42f561:	mov    DWORD PTR [ebx+0x37ffffee],eax
  42f567:	mov    al,ds:0x3400ff0e
  42f56c:	int3   
  42f56d:	dec    DWORD PTR [ebx-0x9]
  42f570:	sub    al,0xff
  42f572:	jmp    DWORD PTR [ebx+0x75c400ff]
  42f578:	push   ebp
  42f579:	mov    DWORD PTR [eax],eax
  42f57b:	pop    esi
  42f57c:	dec    esp
  42f57e:	sar    dh,1
  42f580:	mov    ebx,0xffd78300
  42f585:	jmp    DWORD PTR [edi-0x3300ce37]
  42f58b:	leave  
  42f58c:	(bad)  
  42f58d:	(bad)  
  42f58e:	mov    edi,0xff003a21
  42f593:	xchg   ah,cl
  42f595:	inc    DWORD PTR [ecx+0x1a]
  42f598:	push   es
  42f599:	inc    DWORD PTR [eax]
  42f59b:	popf   
  42f59c:	cmp    edi,0xffffff8f
  42f59f:	lods   al,BYTE PTR ds:[esi]
  42f5a0:	jnp    0x42f5a2
  42f5a2:	mov    DWORD PTR [ecx+0x0],ecx
  42f5a5:	jmp    FWORD PTR [edx+eax*2-0x4333ffe9]
  42f5ac:	add    BYTE PTR [ebx-0x62159c],al
  42f5b2:	jmp    FWORD PTR [esi]
  42f5b4:	(bad)  
  42f5b5:	(bad)  
  42f5b6:	cli    
  42f5b7:	push   ebp
  42f5b8:	and    al,0x89
  42f5ba:	call   FWORD PTR [ecx-0x4f247d00]
  42f5c0:	aaa    
  42f5c1:	cmp    edi,0x3f
  42f5c4:	inc    DWORD PTR [ebx-0x623c39]
  42f5ca:	dec    DWORD PTR [edx-0x752cff34]
  42f5d0:	repnz or esp,0xffffff84
  42f5d4:	inc    DWORD PTR [eax]
  42f5d6:	loope  0x42f56d
  42f5d8:	(bad)  
  42f5d9:	dec    esp
  42f5db:	clc    
  42f5dc:	add    BYTE PTR [ebx-0xc06e4],al
  42f5e2:	add    bl,bh
  42f5e4:	inc    DWORD PTR [ebx-0x5f22c5]
  42f5ea:	dec    DWORD PTR [ebp-0x1]
  42f5ed:	inc    edx
  42f5ef:	sbb    al,0xa
  42f5f1:	add    bh,bh
  42f5f3:	push   0x5a0bff00
  42f5f8:	sub    bh,bh
  42f5fa:	sbb    ebp,0x0
  42f5fd:	add    BYTE PTR [ebx+0xf773],cl
  42f603:	sahf   
  42f604:	add    bh,bh
  42f606:	push   ebx
  42f607:	xor    al,BYTE PTR [edi-0x927d00]
  42f60d:	add    ah,dh
  42f60f:	fnstenv [ecx+0x9800ff]
  42f615:	(bad)  
  42f616:	jle    0x42f5ac
  42f618:	xchg   esp,eax
  42f619:	cmp    edi,0x29
  42f61c:	int3   
  42f61d:	jmp    FWORD PTR [eax-0x76334435]
  42f623:	mov    edi,0xdaa600ff
  42f628:	push   esp
  42f629:	add    BYTE PTR [ebx-0x30ffff1b],al
  42f62f:	rcl    BYTE PTR [eax+eax*1+0x0],1
  42f633:	dec    esi
  42f634:	inc    DWORD PTR [eax]
  42f636:	js     0x42f6b5
  42f638:	mov    edi,edi
  42f63a:	add    dl,dh
  42f63c:	(bad)  
  42f63d:	dec    DWORD PTR [ecx]
  42f63f:	rol    DWORD PTR [ecx-0x3bff01],1
  42f645:	(bad)  
  42f646:	jp     0x42f670
  42f648:	pushf  
  42f649:	add    BYTE PTR [ebx-0x4e00ffc9],al
  42f64f:	push   cs
  42f650:	int    0xff
  42f652:	(bad)  
  42f653:	jl     0x42f655
  42f655:	jmp    DWORD PTR [edx-0x56]
  42f658:	jae    0x42f659
  42f65a:	jmp    FWORD PTR [eax-0x1]
  42f65d:	inc    DWORD PTR [eax]
  42f65f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f660:	sub    al,BYTE PTR [eax]
  42f662:	add    BYTE PTR [ebx-0x7d],ch
  42f665:	jmp    edx
  42f667:	or     DWORD PTR [ebp-0x7c970100],eax
  42f66d:	int3   
  42f66e:	cs dec ebp
  42f670:	(bad)  
  42f671:	(bad)  
  42f672:	inc    DWORD PTR [esi-0x7d]
  42f675:	add    BYTE PTR [esi-0x4522],ah
  42f67b:	inc    BYTE PTR [eax]
  42f67d:	and    ebp,0xffffffb8
  42f680:	mov    dh,0xff
  42f682:	xor    DWORD PTR [ecx],0xffffff83
  42f685:	inc    DWORD PTR [ebp+0x39]
  42f688:	or     eax,0x899e0089
  42f68d:	(bad)  
  42f68e:	fstp   DWORD PTR [ecx+0x4d]
  42f691:	(bad)  
  42f692:	inc    DWORD PTR [ebx+eax*4]
  42f695:	add    BYTE PTR [ebx+0x8302f7],bh
  42f69b:	sub    edi,edi
  42f69d:	push   edx
  42f69f:	gs push 0xffd08383
  42f6a5:	inc    DWORD PTR [eax-0x8]
  42f6a8:	cwde   
  42f6a9:	int3   
  42f6aa:	jmp    FWORD PTR [edi]
  42f6ac:	cmp    edi,0x7
  42f6af:	mov    esi,0x5983ffed
  42f6b4:	mov    DWORD PTR [ecx-0x7cbe7e],ecx
  42f6ba:	inc    DWORD PTR [edx-0x1]
  42f6bd:	int3   
  42f6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6bf:	push   ebp
  42f6c0:	sar    bh,cl
  42f6c2:	push   DWORD PTR [eax+eax*1+0x555a3a00]
  42f6c9:	(bad)  
  42f6ca:	inc    DWORD PTR [ebx]
  42f6cc:	inc    DWORD PTR [eax]
  42f6ce:	xlat   BYTE PTR ds:[ebx]
  42f6cf:	jecxz  0x42f721
  42f6d1:	inc    DWORD PTR [eax]
  42f6d3:	je     0x42f658
  42f6d5:	mov    DWORD PTR [esi],ebp
  42f6d7:	mov    esi,0xf7ff006b
  42f6dc:	inc    DWORD PTR [eax]
  42f6de:	sub    ebx,esp
  42f6e0:	push   0xffffffcc
  42f6e2:	and    DWORD PTR [edi],0xffffff83
  42f6e5:	mov    esp,ecx
  42f6e7:	lock or esp,ecx
  42f6ea:	(bad)  
  42f6eb:	in     eax,dx
  42f6ec:	int3   
  42f6ed:	jmp    DWORD PTR [eax+0xff74a2]
  42f6f3:	dec    edx
  42f6f4:	add    BYTE PTR [ecx+0x769f29],cl
  42f6fa:	and    DWORD PTR [ecx-0x1],0x0
  42f6fe:	jb     0x42f6c8
  42f700:	mov    dl,0x83
  42f702:	(bad)  
  42f703:	jge    0x42f6d1
  42f705:	cmp    DWORD PTR [ecx-0x7c00877a],0x63
  42f70c:	int3   
  42f70d:	add    ch,dh
  42f70f:	stos   DWORD PTR es:[edi],eax
  42f710:	add    eax,0x837300ff
  42f715:	adc    DWORD PTR [ebx],0xffffffdc
  42f718:	test   DWORD PTR [ecx-0x7c005401],0xff35dae0
  42f722:	add    BYTE PTR [edi+0x2c278900],ch
  42f728:	idiv   bh
  42f72a:	add    BYTE PTR [eax],ch
  42f72c:	(bad)  
  42f72d:	call   DWORD PTR [eax+0x36]
  42f730:	loopne 0x42f6b5
  42f732:	dec    DWORD PTR [edi-0x1]
  42f735:	inc    edx
  42f737:	sub    BYTE PTR [esp+ecx*8-0x335f00],0x43
  42f73f:	(bad)  
  42f740:	repnz add BYTE PTR [eax],al
  42f743:	mov    eax,0x1d26ff83
  42f748:	popa   
  42f749:	int3   
  42f74a:	push   edi
  42f74c:	add    bh,bh
  42f74e:	or     al,0x9a
  42f750:	sbb    eax,DWORD PTR [ebx-0x339901]
  42f756:	pop    ebp
  42f757:	fwait
  42f758:	add    eax,0xff01ffff
  42f75d:	dec    DWORD PTR [ebx-0xeee7]
  42f763:	dec    eax
  42f764:	add    BYTE PTR [ebx+0x431003],al
  42f76a:	jmp    edx
  42f76c:	dec    esp
  42f76e:	jo     0x42f7aa
  42f770:	dec    esp
  42f771:	mov    DWORD PTR [ebx+0x2c00ff0e],eax
  42f777:	pop    edi
  42f778:	jbe    0x42f779
  42f77a:	xor    DWORD PTR [esi],0x0
  42f77d:	add    BYTE PTR [ebx],ah
  42f77f:	xchg   esi,eax
  42f780:	iret   
  42f781:	dec    esp
  42f783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f784:	mov    DWORD PTR [eax],eax
  42f786:	test   al,0x5a
  42f788:	(bad)  
  42f78a:	int3   
  42f78b:	test   DWORD PTR [eax],0x1ca019cc
  42f791:	add    bh,bh
  42f793:	mov    esi,0x22988389
  42f798:	mov    al,0x83
  42f79a:	mov    DWORD PTR [edx+0x62070000],eax
  42f7a0:	imul   edi,edi,0xff0003ff
  42f7a6:	jp     0x42f81a
  42f7a8:	jno    0x42f7aa
  42f7aa:	jmp    ebp
  42f7ac:	inc    DWORD PTR [eax]
  42f7ae:	add    DWORD PTR [ebp-0x4500ff45],esp
  42f7b4:	mov    edi,edi
  42f7b6:	xchg   edi,eax
  42f7b7:	inc    edi
  42f7b8:	inc    esi
  42f7b9:	int3   
  42f7ba:	add    BYTE PTR [ecx-0x62520077],bl
  42f7c0:	dec    edx
  42f7c1:	add    bh,bh
  42f7c3:	jb     0x42f7c4
  42f7c5:	add    BYTE PTR [edx-0x83bf],dl
  42f7cb:	lahf   
  42f7cc:	add    bh,bh
  42f7ce:	jb     0x42f822
  42f7d0:	jle    0x42f755
  42f7d2:	call   ebx
  42f7d4:	inc    DWORD PTR [ebx-0x7c5e5d92]
  42f7da:	mov    DWORD PTR [ebx],eax
  42f7dc:	(bad)  
  42f7dd:	inc    DWORD PTR [edi-0x7c00e713]
  42f7e3:	(bad)  
  42f7e4:	inc    DWORD PTR [eax]
  42f7e6:	rcr    BYTE PTR [esi-0x58],cl
  42f7e9:	add    bh,bh
  42f7eb:	dec    ebx
  42f7ec:	(bad)  
  42f7ed:	call   FWORD PTR [eax-0xffd992]
  42f7f3:	ret    0x0
  42f7f6:	inc    edx
  42f7f7:	mov    DWORD PTR [esp+ecx*8-0x8301],ebp
  42f7fe:	(bad)  
  42f7ff:	out    0xf0,eax
  42f801:	inc    DWORD PTR [eax]
  42f803:	fisttp WORD PTR [ecx+0x66168800]
  42f809:	add    DWORD PTR [eax],0x16
  42f80c:	add    BYTE PTR [eax],al
  42f80e:	jae    0x42f849
  42f810:	add    al,0xff
  42f812:	mov    esi,ebp
  42f814:	(bad)  
  42f815:	inc    ecx
  42f817:	sbb    DWORD PTR [esi],ebx
  42f819:	inc    DWORD PTR [ebx-0x7b00ff95]
  42f81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f820:	push   ebx
  42f821:	mov    DWORD PTR [eax],eax
  42f823:	out    0x89,al
  42f825:	adc    DWORD PTR [edx-0x34],0xffffffb1
  42f829:	inc    DWORD PTR [eax]
  42f82b:	sahf   
  42f82c:	add    DWORD PTR [eax],0xffffff96
  42f82f:	add    ah,BYTE PTR [ebp-0x34]
  42f832:	add    BYTE PTR [eax-0x3dedff01],bh
  42f838:	fadd   DWORD PTR [ebx+0x4cff]
  42f83e:	pavgw  mm7,mm1
  42f841:	add    BYTE PTR [ebx+0x4bff8375],al
  42f847:	xlat   BYTE PTR ds:[ebx]
  42f848:	leave  
  42f849:	add    BYTE PTR [eax],al
  42f84b:	inc    esi
  42f84c:	add    bh,bh
  42f84e:	push   ecx
  42f84f:	outs   dx,DWORD PTR ds:[esi]
  42f850:	mov    DWORD PTR [bx+si],eax
  42f853:	sbb    al,BYTE PTR [ebx+0x5eb33d00]
  42f859:	add    bh,bh
  42f85b:	sub    edi,edi
  42f85d:	add    BYTE PTR [edi],al
  42f85f:	and    al,0xbb
  42f861:	inc    DWORD PTR [eax]
  42f863:	lods   eax,DWORD PTR ds:[esi]
  42f864:	int3   
  42f865:	jmp    FWORD PTR [esi-0x7cb0f9]
  42f86b:	and    edi,edi
  42f86d:	add    BYTE PTR [eax-0x76ff7880],ch
  42f873:	into   
  42f874:	(bad)  
  42f875:	dec    DWORD PTR [ecx+0x6c]
  42f878:	or     edi,edi
  42f87a:	or     edx,0xffffffcc
  42f87d:	jmp    DWORD PTR [eax-0x7cff0efc]
  42f883:	scas   al,BYTE PTR es:[edi]
  42f884:	add    BYTE PTR [ebx-0xa9cf92],al
  42f88a:	(bad)  
  42f88b:	cmp    DWORD PTR [eax],eax
  42f88d:	call   FWORD PTR [ecx-0xe690]
  42f893:	ins    DWORD PTR es:[edi],dx
  42f894:	add    BYTE PTR [ebx+0xbacebb],al
  42f89a:	push   DWORD PTR [ecx+0x720affff]
  42f8a0:	adc    al,0x89
  42f8a2:	(bad)  
  42f8a3:	(bad)  
  42f8a4:	(bad)  
  42f8a5:	(bad)  
  42f8a6:	cmp    ebp,DWORD PTR [eax]
  42f8a8:	xchg   ecx,eax
  42f8a9:	add    BYTE PTR [eax],al
  42f8ab:	xor    edi,edi
  42f8ad:	adc    ebx,0xfffffffe
  42f8b0:	and    bh,bh
  42f8b2:	push   edi
  42f8b4:	(bad)  
  42f8b5:	call   DWORD PTR [eax+ebp*8-0x7376ff3d]
  42f8bc:	add    bh,bh
  42f8be:	and    BYTE PTR [ebp+0x7c0083fc],al
  42f8c4:	add    DWORD PTR [ebx-0xfbabbe],0xffffffff
  42f8cb:	clc    
  42f8cc:	add    BYTE PTR [eax],al
  42f8ce:	xor    edi,DWORD PTR [eax-0x53]
  42f8d1:	inc    DWORD PTR [ebx+0x63ccff38]
  42f8d7:	sbb    BYTE PTR [edi-0x77],bh
  42f8da:	jmp    FWORD PTR [edi-0x2ab4ff01]
  42f8e0:	add    al,BYTE PTR [eax]
  42f8e2:	(bad)  
  42f8e3:	jl     0x42f8e4
  42f8e5:	add    BYTE PTR [eax+ebp*4],cl
  42f8e8:	aas    
  42f8e9:	or     DWORD PTR [ecx-0x137cff0f],0xffffff84
  42f8f0:	jecxz  0x42f8f2
  42f8f2:	dec    DWORD PTR [edi]
  42f8f4:	add    DWORD PTR [eax],0xffffffac
  42f8f7:	sub    BYTE PTR [ebx-0x1],bl
  42f8fa:	call   FWORD PTR [ebx+0x0]
  42f8fd:	call   FWORD PTR [ebp-0xf]
  42f900:	(bad)  
  42f901:	fild   DWORD PTR [esp+ecx*2-0xb00001]
  42f908:	cmp    edi,0x0
  42f90b:	jb     0x42f8a6
  42f90d:	(bad)  
  42f90e:	js     0x42f931
  42f910:	int3   
  42f911:	sbb    edx,ecx
  42f913:	inc    BYTE PTR [eax]
  42f915:	call   ecx
  42f917:	inc    DWORD PTR [ebx+0x29468300]
  42f91d:	add    BYTE PTR [ecx],dl
  42f91f:	and    BYTE PTR [eax],al
  42f921:	stos   DWORD PTR es:[edi],eax
  42f922:	shl    BYTE PTR [ecx],cl
  42f924:	add    BYTE PTR [eax],al
  42f926:	iret   
  42f927:	add    bh,bh
  42f929:	add    ah,cl
  42f92b:	mov    BYTE PTR [ebx-0x1],bh
  42f92e:	pop    ss
  42f92f:	outs   dx,DWORD PTR ds:[esi]
  42f930:	int3   
  42f931:	iret   
  42f932:	lods   al,BYTE PTR ds:[esi]
  42f933:	stos   DWORD PTR es:[edi],eax
  42f934:	mov    esp,ecx
  42f936:	pop    edi
  42f937:	add    bh,bh
  42f939:	(bad)  
  42f93a:	push   DWORD PTR [esi]
  42f93c:	stc    
  42f93d:	push   DWORD PTR [ebx+0x53aeff89]
  42f943:	pop    ebp
  42f944:	(bad)  
  42f945:	push   DWORD PTR [ecx-0x1]
  42f948:	add    bh,bh
  42f94a:	inc    DWORD PTR [edx]
  42f94c:	pop    ds
  42f94d:	add    BYTE PTR [edx],ch
  42f94f:	push   ds
  42f950:	add    BYTE PTR [eax+0x58],ch
  42f953:	xchg   edi,eax
  42f954:	inc    DWORD PTR [eax]
  42f956:	ret    
  42f957:	cmp    edi,0xffffffcc
  42f95a:	or     DWORD PTR ds:0x67d1005e,0x0
  42f961:	mov    bh,0x55
  42f963:	sub    edi,edi
  42f965:	jmp    esp
  42f967:	mov    edi,edi
  42f969:	int3   
  42f96a:	inc    DWORD PTR [ecx-0x21]
  42f96d:	sbb    ecx,0x22
  42f970:	call   DWORD PTR [edx]
  42f972:	(bad)  
  42f973:	adc    edi,edi
  42f975:	add    bl,ch
  42f977:	dec    DWORD PTR [ecx+0xcbc83ff]
  42f97d:	(bad)  
  42f97e:	cli    
  42f97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f980:	dec    DWORD PTR [ebp-0x79]
  42f983:	cmp    edi,0xffff5b83
  42f989:	add    BYTE PTR [eax],al
  42f98b:	mov    ch,0x4a
  42f98d:	add    DWORD PTR [edx+0x5d238373],0xffffffef
  42f994:	add    bh,bh
  42f996:	jmp    0x42f998
  42f998:	(bad)  
  42f999:	inc    DWORD PTR [eax]
  42f99b:	bound  esi,QWORD PTR [edi+edi*8]
  42f99e:	and    ebx,esp
  42f9a0:	call   FWORD PTR [ecx]
  42f9a2:	mov    ebx,0xf3ff89a4
  42f9a7:	cmp    edi,0x0
  42f9aa:	mov    edx,edi
  42f9ac:	das    
  42f9ad:	add    BYTE PTR [eax+0x55],dh
  42f9b0:	(bad)  
  42f9b1:	jnp    0x42f9ee
  42f9b3:	inc    edx
  42f9b4:	inc    DWORD PTR [eax]
  42f9b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9b7:	inc    DWORD PTR [eax]
  42f9b9:	inc    DWORD PTR [ebx-0x4400d85b]
  42f9bf:	pop    edx
  42f9c0:	mov    DWORD PTR [ebp+0xffbf01],ebx
  42f9c6:	sahf   
  42f9c7:	dec    esp
  42f9c9:	(bad)  
  42f9ca:	jmp    FWORD PTR [esi-0x63]
  42f9cd:	jmp    edx
  42f9cf:	fdiv   st(7),st
  42f9d1:	mov    al,BYTE PTR [edx+0x6eff002e]
  42f9d7:	add    DWORD PTR [eax],0x0
  42f9da:	jmp    DWORD PTR [esi]
  42f9dc:	outs   dx,BYTE PTR ds:[esi]
  42f9dd:	jmp    DWORD PTR [eax+ecx*1]
  42f9e0:	jmp    FWORD PTR [edx+0xc]
  42f9e3:	daa    
  42f9e4:	inc    DWORD PTR [ebx-0x330028]
  42f9ea:	adc    ebx,0xffffff83
  42f9ed:	sub    DWORD PTR [eax-0x547f764c],0x25
  42f9f4:	(bad)  
  42f9f5:	inc    DWORD PTR [esi]
  42f9f7:	(bad)  
  42f9f8:	inc    DWORD PTR [ebx-0x331aa300]
  42f9fe:	scas   al,BYTE PTR es:[edi]
  42f9ff:	sub    DWORD PTR [eax],eax
  42fa01:	jle    0x42f986
  42fa03:	repnz add ah,cl
  42fa06:	cmp    edi,0x5d89ffff
  42fa0c:	aas    
  42fa0d:	jmp    FWORD PTR [eax-0x4052006e]
  42fa13:	ja     0x42fa15
  42fa15:	jmp    DWORD PTR ds:0x838983ff
  42fa1b:	test   eax,0x5c26cc01
  42fa20:	add    BYTE PTR [ecx],ch
  42fa22:	pop    ds
  42fa23:	push   0xffffff89
  42fa25:	call   DWORD PTR [ecx-0x1]
  42fa28:	(bad)  
  42fa29:	inc    DWORD PTR [eax]
  42fa2b:	mov    dh,0x9e
  42fa2d:	add    BYTE PTR [eax+0xc],bh
  42fa30:	add    bl,cl
  42fa32:	jmp    0x8042f9f1
  42fa37:	(bad)  
  42fa38:	inc    DWORD PTR [eax]
  42fa3a:	add    BYTE PTR [edx-0x64],ah
  42fa3d:	add    BYTE PTR [eax+0x7c389f5],dl
  42fa43:	mov    eax,0xff3c00ff
  42fa48:	mov    DWORD PTR [ebx-0x9dd301],eax
  42fa4e:	and    al,BYTE PTR [ebx+0x0]
  42fa51:	aaa    
  42fa52:	sldt   WORD PTR ds:[eax]
  42fa56:	mov    DWORD PTR [eax],eax
  42fa58:	inc    DWORD PTR [ebx+0x763a83]
  42fa5e:	cld    
  42fa5f:	jno    0x42fa60
  42fa61:	repnz (bad) 
  42fa63:	(bad)  
  42fa65:	or     DWORD PTR [edi-0x7c000001],0x6a
  42fa6c:	fiadd  WORD PTR [eax]
  42fa6e:	fs xchg esi,eax
  42fa70:	jmp    FWORD PTR [esp+ecx*2]
  42fa73:	mov    ds:0xbcffff,al
  42fa78:	add    bh,bh
  42fa7a:	sub    esp,0x56
  42fa7d:	dec    DWORD PTR [ebx]
  42fa7f:	dec    esp
  42fa80:	int3   
  42fa81:	fucomi st,st(7)
  42fa83:	aaa    
  42fa84:	add    BYTE PTR [eax],al
  42fa86:	lods   eax,DWORD PTR ds:[esi]
  42fa87:	(bad)  
  42fa88:	(bad)  
  42fa89:	dec    esp
  42fa8b:	pop    eax
  42fa8c:	icebp  
  42fa8d:	or     DWORD PTR [edx-0x623fff10],0xffffffd4
  42fa94:	add    bh,bh
  42fa96:	popa   
  42fa97:	cmp    edi,0xffffff83
  42fa9a:	jmp    edi
  42fa9c:	mov    al,0xcc
  42fa9e:	sar    dl,cl
  42faa0:	add    ah,bl
  42faa2:	dec    eax
  42faa3:	lock (bad) 
  42faa5:	dec    DWORD PTR [eax-0x34]
  42faa8:	inc    DWORD PTR [ebx+0x863ff]
  42faae:	fld    TBYTE PTR [esi-0x74b61d00]
  42fab4:	add    BYTE PTR [ebx-0x7c760022],al
  42faba:	add    BYTE PTR [ebx-0x31f9006e],al
  42fac0:	jmp    DWORD PTR [ebx-0x33ff78a7]
  42fac6:	adc    edi,edi
  42fac8:	inc    DWORD PTR [ebx-0xf0e701]
  42face:	jmp    0xfff8:0x6d8effe5
  42fad5:	push   DWORD PTR [eax]
  42fad7:	int3   
  42fad8:	dec    esp
  42fada:	call   FWORD PTR [esi+ebx*2-0x339dd400]
  42fae1:	nop
  42fae2:	nop
  42fae3:	mov    eax,ds:0xff4983ff
  42fae8:	int3   
  42fae9:	or     esp,0xfffffff2
  42faec:	xor    al,0x0
  42faee:	xor    al,0x49
  42faf0:	inc    DWORD PTR [esp+ecx*4+0x16ccff7e]
  42faf7:	add    bh,bh
  42faf9:	add    bh,bh
  42fafb:	push   esp
  42fafc:	(bad)  
  42fafd:	call   FWORD PTR [edi+0x1f]
  42fb00:	add    BYTE PTR [esp+edi*4+0xffdc],cl
  42fb07:	or     esp,0xffffff83
  42fb0a:	add    al,ch
  42fb0c:	jno    0x42fb0d
  42fb0e:	adc    eax,0x10c6005d
  42fb13:	std    
  42fb14:	add    BYTE PTR [eax],al
  42fb16:	mov    ds:0x83ffff,eax
  42fb1b:	mov    ds:0xa2d5ffde,al
  42fb20:	jmp    FWORD PTR [edi-0x1c]
  42fb23:	or     al,0xff
  42fb25:	add    DWORD PTR [edx+0x0],0x0
  42fb29:	mov    DWORD PTR [ebx+0x50009d31],eax
  42fb2f:	and    BYTE PTR [eax],al
  42fb31:	or     esi,DWORD PTR [edx+0x3800ff0f]
  42fb37:	inc    DWORD PTR [eax]
  42fb39:	or     esp,0x4a
  42fb3c:	sub    eax,0x22c483
  42fb41:	jecxz  0x42fadf
  42fb43:	inc    ebp
  42fb44:	cmp    edi,0x13
  42fb47:	add    BYTE PTR [eax],al
  42fb49:	dec    DWORD PTR [ecx-0x6f7618c3]
  42fb4f:	imul   ecx,esp,0xff2f0548
  42fb55:	call   DWORD PTR [edi+edi*8-0xfff0001]
  42fb5c:	sub    bh,bh
  42fb5e:	sahf   
  42fb5f:	retf   
  42fb60:	add    BYTE PTR [esi-0x77],ah
  42fb63:	mov    ds:0xcc2effff,eax
  42fb68:	or     DWORD PTR [ecx+0x99efff],0xf
  42fb6f:	out    0xff,eax
  42fb71:	mov    eax,0x83ffde33
  42fb76:	(bad)  
  42fb78:	inc    DWORD PTR [eax]
  42fb7a:	add    BYTE PTR [ebx+0x5b230075],dh
  42fb80:	inc    edx
  42fb82:	mov    ebx,0xf8000056
  42fb87:	inc    DWORD PTR [ebx+0x3b238300]
  42fb8d:	sbb    eax,0x47
  42fb90:	(bad)  
  42fb91:	js     0x42fbad
  42fb93:	leave  
  42fb94:	(bad)  
  42fb95:	push   edi
  42fb97:	inc    DWORD PTR [eax]
  42fb99:	(bad)  
  42fb9a:	jmp    DWORD PTR [ebp-0x1e]
  42fb9d:	inc    DWORD PTR [edi]
  42fb9f:	and    eax,0x7e5f3783
  42fba4:	inc    DWORD PTR [ebx-0x337c7632]
  42fbaa:	inc    DWORD PTR [ebx-0x67253377]
  42fbb0:	add    BYTE PTR [eax-0xff5057],ch
  42fbb6:	mov    dl,0xff
  42fbb8:	add    DWORD PTR [eax],0xffffffff
  42fbbb:	loope  0x42fb8b
  42fbbd:	add    BYTE PTR [esi],bl
  42fbbf:	into   
  42fbc0:	mov    DWORD PTR [edx],esi
  42fbc2:	enter  0xccd9,0xff
  42fbc6:	xlat   BYTE PTR ds:[ebx]
  42fbc7:	add    BYTE PTR [eax],al
  42fbc9:	add    bh,bh
  42fbcb:	nop
  42fbcc:	add    bh,bh
  42fbce:	jmp    0xbc2afc1d
  42fbd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fbd4:	add    DWORD PTR [eax],0xffffffec
  42fbd7:	int3   
  42fbd8:	add    DWORD PTR [ebx-0x7c65ea00],0x7c
  42fbdf:	(bad)  
  42fbe0:	dec    DWORD PTR [esi+0xff292f]
  42fbe6:	mov    BYTE PTR [ebx+0x79ffffff],al
  42fbec:	xor    eax,DWORD PTR [ebx-0x3d7c25c9]
  42fbf2:	(bad)  
  42fbf3:	arpl   sp,cx
  42fbf5:	int3   
  42fbf6:	dec    edi
  42fbf7:	add    bh,bh
  42fbf9:	int3   
  42fbfa:	(bad)  
  42fbfb:	cmp    eax,DWORD PTR [edi]
  42fbfd:	add    BYTE PTR [eax+0xf8bffb0],dh
  42fc03:	test   DWORD PTR [eax],eax
  42fc05:	add    al,dh
  42fc07:	add    bh,bh
  42fc09:	(bad)  
  42fc0a:	jmp    FWORD PTR [edx]
  42fc0c:	sar    edi,0x36
  42fc0f:	push   ss
  42fc10:	(bad)  
  42fc11:	fsub   DWORD PTR [ebx+0x64]
  42fc14:	add    bh,bh
  42fc16:	xchg   edx,eax
  42fc17:	inc    DWORD PTR [eax]
  42fc19:	(bad)  
  42fc1a:	dec    DWORD PTR [ebx-0x406afff7]
  42fc20:	call   DWORD PTR [edi+edi*1-0x5dffffb0]
  42fc27:	add    BYTE PTR [ecx-0x3adfff01],cl
  42fc2d:	push   DWORD PTR [ebx-0x38d4ffb7]
  42fc33:	sbb    eax,DWORD PTR [eax]
  42fc35:	add    bh,dl
  42fc37:	add    BYTE PTR [eax],al
  42fc39:	add    BYTE PTR [eax],al
  42fc3b:	shl    BYTE PTR [ebp-0x4ea300],1
  42fc41:	stos   BYTE PTR es:[edi],al
  42fc42:	out    0x8,eax
  42fc44:	inc    DWORD PTR [eax]
  42fc46:	inc    edi
  42fc47:	inc    DWORD PTR [eax]
  42fc49:	cmp    edi,0xffffffea
  42fc4c:	test   BYTE PTR [eax],0x1d
  42fc4f:	inc    eax
  42fc50:	add    BYTE PTR [edi-0x26],al
  42fc53:	ja     0x42fbd8
  42fc55:	add    BYTE PTR [esi-0xff0100],bh
  42fc5b:	(bad)  
  42fc5c:	imul   edi,edi,0xcff6b64
  42fc62:	lods   al,BYTE PTR ds:[esi]
  42fc63:	sbb    DWORD PTR [eax],eax
  42fc65:	add    BYTE PTR [edx],dh
  42fc67:	add    bh,bh
  42fc69:	inc    DWORD PTR [eax]
  42fc6b:	push   0x18
  42fc6d:	call   DWORD PTR [esi+eax*1]
  42fc70:	add    BYTE PTR [esi],ch
  42fc72:	lea    ebp,[edi+edi*8+0xffafff]
  42fc79:	(bad)  
  42fc7a:	call   DWORD PTR [esi-0x792c009f]
  42fc80:	dec    eax
  42fc82:	mov    dl,0x4
  42fc84:	inc    DWORD PTR [ebx-0x25]
  42fc8a:	add    BYTE PTR [esi-0x7],dh
  42fc8d:	add    BYTE PTR [esi],ah
  42fc8f:	das    
  42fc90:	add    BYTE PTR [eax],dl
  42fc92:	retf   0xff52
  42fc95:	inc    edx
  42fc97:	inc    DWORD PTR [eax]
  42fc99:	(bad)  
  42fc9a:	call   FWORD PTR ds:0xde38008c
  42fca0:	add    BYTE PTR [eax-0xff79ec],ch
  42fca6:	test   al,0xff
  42fca8:	inc    DWORD PTR [ebx+0x3b3fff]
  42fcae:	aad    0xfa
  42fcb0:	sub    ecx,0x61
  42fcb3:	sbb    eax,0xff3eff83
  42fcb8:	mov    DWORD PTR [ecx-0xf85501],ecx
  42fcbe:	mov    dl,0x8b
  42fcc0:	int3   
  42fcc1:	or     al,0xe
  42fcc3:	cmc    
  42fcc4:	(bad)  
  42fcc5:	dec    DWORD PTR [ebp-0x7c010000]
  42fccb:	xlat   BYTE PTR ds:[ebx]
  42fccc:	or     eax,0x4204ff
  42fcd1:	(bad)  
  42fcd3:	popa   
  42fcd4:	int3   
  42fcd5:	add    dh,dl
  42fcd7:	add    bh,bh
  42fcd9:	add    BYTE PTR [eax],al
  42fcdb:	mov    ch,BYTE PTR [eax]
  42fcdd:	push   edx
  42fcdf:	push   ebx
  42fce0:	cmp    ebp,0xffffffc5
  42fce3:	mov    ah,0xff
  42fce5:	(bad)  
  42fce6:	in     al,dx
  42fce7:	add    bh,bh
  42fce9:	add    bh,bh
  42fceb:	ret    0xb
  42fcee:	xchg   esi,eax
  42fcef:	mov    esi,0x72f307ff
  42fcf4:	add    bh,bh
  42fcf6:	call   0x141fdfa
  42fcfb:	int3   
  42fcfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fcfd:	int3   
  42fcfe:	test   al,0xc5
  42fd00:	mov    eax,eax
  42fd02:	test   al,0xe4
  42fd04:	add    bh,bh
  42fd06:	mov    al,BYTE PTR [eax]
  42fd08:	(bad)  
  42fd09:	inc    DWORD PTR [ebx-0x71fff3d8]
  42fd0f:	dec    esp
  42fd10:	int3   
  42fd11:	fnstcw WORD PTR [ebp+0x7e]
  42fd14:	(bad)  
  42fd15:	(bad)  
  42fd16:	std    
  42fd17:	(bad)  
  42fd18:	(bad)  
  42fd19:	dec    esp
  42fd1b:	adc    bl,0xcc
  42fd1e:	xchg   esi,eax
  42fd1f:	jmp    0x42fcaa
  42fd21:	stos   BYTE PTR es:[edi],al
  42fd22:	sbb    al,0x59
  42fd24:	add    BYTE PTR [eax],al
  42fd26:	in     al,dx
  42fd27:	add    bh,bh
  42fd29:	add    bh,bh
  42fd2b:	xor    eax,0x9049ff8b
  42fd30:	call   FWORD PTR [esi]
  42fd32:	jnp    0x42fcb4
  42fd34:	int3   
  42fd35:	(bad)  
  42fd36:	fiadd  WORD PTR [eax]
  42fd38:	inc    DWORD PTR [eax]
  42fd3a:	jmp    DWORD PTR [edi-0x485200bc]
  42fd40:	inc    DWORD PTR [ebx]
  42fd42:	push   ebx
  42fd43:	sbb    BYTE PTR [eax],al
  42fd45:	sbb    ecx,0x0
  42fd48:	(bad)  
  42fd49:	(bad)  
  42fd4a:	jmp    FWORD PTR [eax+0xeb80074]
  42fd50:	dec    DWORD PTR [ebp-0x7cff8f71]
  42fd56:	stos   DWORD PTR es:[edi],eax
  42fd57:	add    bh,bh
  42fd59:	add    bh,bh
  42fd5b:	mov    cl,ch
  42fd5d:	mov    ecx,ebx
  42fd5f:	jns    0x42fd60
  42fd61:	fcom   DWORD PTR [edi+0x33]
  42fd64:	cmp    edi,0x47
  42fd67:	add    BYTE PTR [eax],al
  42fd69:	inc    DWORD PTR [eax]
  42fd6b:	js     0x42fd52
  42fd6d:	add    BYTE PTR [ebx],ch
  42fd6f:	stos   DWORD PTR es:[edi],eax
  42fd70:	add    BYTE PTR [ecx+0xb680],al
  42fd76:	int3   
  42fd77:	add    bh,bh
  42fd79:	add    DWORD PTR [ebx-0x557cbd2c],0xffffff85
  42fd80:	(bad)  
  42fd81:	aas    
  42fd82:	std    
  42fd83:	cwde   
  42fd84:	int3   
  42fd85:	sbb    edx,0x0
  42fd88:	(bad)  
  42fd89:	inc    DWORD PTR [ebx-0x5500dfd5]
  42fd8f:	sar    edi,0xe
  42fd92:	popa   
  42fd93:	test   eax,0xbdffff
  42fd98:	add    bh,bh
  42fd9a:	dec    DWORD PTR [ebx+0x1e79cc94]
  42fda0:	add    dh,ch
  42fda2:	xor    edi,esi
  42fda4:	add    bh,bh
  42fda6:	jl     0x42fda7
  42fda8:	inc    DWORD PTR [ebx-0x10e901]
  42fdae:	inc    ebp
  42fdaf:	fdivr  st,st(7)
  42fdb1:	xlat   BYTE PTR ds:[ebx]
  42fdb2:	inc    ebp
  42fdb3:	or     al,BYTE PTR [ebx-0x7c8c00]
  42fdb9:	inc    DWORD PTR [eax]
  42fdbb:	pop    eax
  42fdbc:	mov    dh,0xff
  42fdbe:	xchg   BYTE PTR [eax-0x7d],al
  42fdc1:	sub    eax,0x5148
  42fdc6:	out    0xff,al
  42fdc8:	int3   
  42fdc9:	add    ah,cl
  42fdcb:	in     ax,0xff
  42fdce:	jle    0x42fe0b
  42fdd0:	int3   
  42fdd1:	or     eax,0xffff7bac
  42fdd6:	fisttp DWORD PTR [ecx-0x3bff0001]
  42fddc:	jbe    0x42fdde
  42fdde:	test   ebx,ebp
  42fde0:	jmp    FWORD PTR [eax]
  42fde2:	out    0xea,al
  42fde4:	cmp    edi,0xffffff8c
  42fde7:	int3   
  42fde8:	(bad)  
  42fde9:	(bad)  
  42fdea:	jmp    DWORD PTR [edx]
  42fdec:	rol    DWORD PTR [ebx+0x52ff8b1b],0xf5
  42fdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fdf4:	int3   
  42fdf5:	int3   
  42fdf6:	ins    DWORD PTR es:[edi],dx
  42fdf7:	inc    DWORD PTR [eax]
  42fdf9:	add    bh,bh
  42fdfb:	sub    DWORD PTR [edx-0x5f4e01],esp
  42fe01:	sbb    DWORD PTR [esp+eax*2+0x12ff00],esi
  42fe08:	add    bh,bh
  42fe0a:	add    BYTE PTR [ecx-0x2a9affbd],dh
  42fe10:	push   DWORD PTR [ebx]
  42fe12:	mov    dh,0xde
  42fe14:	add    bh,bh
  42fe16:	(bad)  
  42fe18:	add    BYTE PTR [eax],al
  42fe1a:	add    cl,ah
  42fe1c:	xchg   esi,eax
  42fe1d:	add    BYTE PTR [edi],cl
  42fe1f:	mov    al,ds:0x488eafff
  42fe24:	add    bh,bh
  42fe26:	sub    bh,bh
  42fe28:	add    bh,bh
  42fe2a:	jmp    DWORD PTR [eax+0x4f]
  42fe2d:	int3   
  42fe2e:	cdq    
  42fe2f:	call   0x74e1e500
  42fe34:	(bad)  
  42fe35:	push   DWORD PTR [edi]
  42fe37:	add    bh,bh
  42fe39:	dec    DWORD PTR [ecx+0x5c006172]
  42fe3f:	aas    
  42fe40:	sub    DWORD PTR [edx+eiz*1-0x3000060],0xffffff83
  42fe48:	int3   
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	mov    dl,0xa2
  42fe4d:	mov    DWORD PTR [ecx+0x65aeffcd],ecx
  42fe53:	adc    esp,ecx
  42fe55:	or     DWORD PTR [ebp-0x7d],0xffffffff
  42fe59:	add    DWORD PTR [ebx-0x1bffbe66],0xfffffff3
  42fe60:	inc    DWORD PTR [esi]
  42fe62:	popa   
  42fe63:	jl     0x42fde8
  42fe65:	add    BYTE PTR [edx-0x1],bl
  42fe68:	(bad)  
  42fe69:	inc    DWORD PTR [eax]
  42fe6b:	popw   ds
  42fe6d:	dec    DWORD PTR [esi+0x691dff3d]
  42fe73:	sub    al,0x0
  42fe75:	int3   
  42fe76:	xchg   edi,eax
  42fe77:	add    bh,bh
  42fe79:	cmp    edi,0x1f
  42fe7c:	jns    0x42fe01
  42fe7e:	mov    ebx,0x62f689d0
  42fe83:	int3   
  42fe84:	add    BYTE PTR [eax],al
  42fe86:	ds add bh,bh
  42fe89:	add    ah,cl
  42fe8b:	jo     0x42feaf
  42fe8d:	add    BYTE PTR [eax+ebx*8],al
  42fe90:	mov    ebp,edi
  42fe92:	in     al,dx
  42fe93:	add    edi,edi
  42fe95:	add    BYTE PTR [eax-0x3301],ch
  42fe9b:	xor    eax,0xc037cc97
  42fea0:	and    DWORD PTR [edx],0x4b
  42fea3:	cmp    bh,bh
  42fea5:	call   DWORD PTR [ecx-0x1]
  42fea8:	add    DWORD PTR [eax],0xffffffff
  42feab:	mov    dh,0x14
  42fead:	call   FWORD PTR [ebx-0x40]
  42feb0:	cmp    DWORD PTR [esi-0x767c2679],0xffffffad
  42feb7:	inc    DWORD PTR [eax]
  42feb9:	cmp    edi,0x67
  42febc:	adc    al,0x0
  42febe:	dec    eax
  42febf:	add    cl,BYTE PTR [ecx+0xcbb410]
  42fec5:	dec    DWORD PTR [edi-0x7d00]
  42fecb:	pop    es
  42fecc:	loop   0x42fecd
  42fece:	push   ecx
  42fecf:	rol    DWORD PTR [ebx-0x7cc857],1
  42fed5:	int3   
  42fed6:	outs   dx,BYTE PTR ds:[esi]
  42fed7:	cmp    edi,0xffffffff
  42feda:	inc    DWORD PTR [edx]
  42fedc:	xchg   edi,eax
  42fedd:	mov    edi,edi
  42fedf:	std    
  42fee0:	add    bh,ch
  42fee2:	add    al,bh
  42fee4:	dec    DWORD PTR [ecx-0x6a]
  42feea:	inc    ebx
  42feec:	fdivp  st(7),st
  42feee:	mov    ds:0x29dbff39,al
  42fef3:	pushf  
  42fef4:	int3   
  42fef5:	add    BYTE PTR [esi+0x0],bl
  42fef8:	dec    DWORD PTR [ecx-0x7cd41934]
  42fefe:	scas   al,BYTE PTR es:[edi]
  42feff:	push   ebp
  42ff00:	call   FWORD PTR [ebp-0xff8b72]
  42ff06:	pop    ebp
  42ff07:	add    BYTE PTR [eax],al
  42ff09:	dec    esp
  42ff0b:	leave  
  42ff0c:	imul   edi,edi,0x6
  42ff0f:	dec    edi
  42ff10:	call   FWORD PTR [edi+edi*1]
  42ff13:	xor    eax,DWORD PTR [ebx-0x76ff7701]
  42ff19:	add    bh,bh
  42ff1b:	iret   
  42ff1c:	pop    edi
  42ff1d:	add    al,dh
  42ff1f:	jge    0x42ff20
  42ff21:	sbb    dl,BYTE PTR [edi]
  42ff23:	xchg   ecx,eax
  42ff24:	cmp    edi,0xffffffc9
  42ff27:	add    DWORD PTR [eax],0xffffff89
  42ff2a:	add    ch,bh
  42ff2c:	push   edx
  42ff2d:	add    ch,al
  42ff2f:	ja     0x42ff30
  42ff31:	add    eax,0xffcc95a9
  42ff36:	adc    DWORD PTR [eax],eax
  42ff38:	(bad)  
  42ff39:	(bad)  
  42ff3a:	call   eax
  42ff3c:	into   
  42ff3d:	sbb    DWORD PTR [esi],0x67
  42ff40:	call   FWORD PTR [ecx+eiz*1+0x57]
  42ff44:	add    DWORD PTR [eax],0x79
  42ff47:	inc    DWORD PTR [eax]
  42ff49:	inc    DWORD PTR [ebx-0x5d00f7b2]
  42ff4f:	lahf   
  42ff50:	add    cl,ch
  42ff52:	outs   dx,DWORD PTR ds:[esi]
  42ff53:	sti    
  42ff54:	(bad)  
  42ff55:	jmp    FWORD PTR [edi-0x77]
  42ff58:	(bad)  
  42ff59:	inc    DWORD PTR [eax]
  42ff5b:	out    0x28,al
  42ff5d:	int3   
  42ff5e:	rcl    DWORD PTR [ecx],cl
  42ff60:	add    BYTE PTR [eax+0xffa0b8],ch
  42ff66:	push   esi
  42ff67:	add    bh,bh
  42ff69:	dec    DWORD PTR [ecx-0xa7c3c7c]
  42ff6f:	popf   
  42ff70:	call   DWORD PTR [ebx-0x50]
  42ff73:	inc    ebp
  42ff74:	(bad)  
  42ff75:	call   DWORD PTR [ecx-0xff01]
  42ff7b:	sbb    eax,0xb54cff53
  42ff80:	add    BYTE PTR [eax],bh
  42ff82:	clc    
  42ff83:	pop    edi
  42ff84:	inc    DWORD PTR [ebx-0xff76a0]
  42ff8a:	inc    esi
  42ff8c:	push   es
  42ff8d:	(bad)  
  42ff8e:	fild   DWORD PTR [ecx-0x1]
  42ff91:	sub    ebx,DWORD PTR [edi-0x17ff000b]
  42ff97:	(bad)  
  42ff98:	(bad)  
  42ff99:	inc    DWORD PTR [ebx+0x5ffc355]
  42ff9f:	int    0xff
  42ffa1:	neg    cl
  42ffa3:	arpl   di,di
  42ffa5:	(bad)  
  42ffa6:	in     al,dx
  42ffa7:	add    BYTE PTR [ebx+0x6f1affcc],al
  42ffad:	(bad)  
  42ffae:	mov    esi,0xe62efff2
  42ffb3:	or     al,BYTE PTR [eax]
  42ffb5:	(bad)  
  42ffb6:	inc    DWORD PTR [eax]
  42ffb8:	(bad)  
  42ffb9:	inc    DWORD PTR [eax]
  42ffbb:	xor    edx,esp
  42ffbd:	(bad)  
  42ffbe:	dec    BYTE PTR ds:0xce0791ff
  42ffc4:	cmp    edi,0x23
  42ffc7:	inc    DWORD PTR [eax]
  42ffc9:	(bad)  
  42ffca:	jmp    FWORD PTR [edx+0x354c8393]
  42ffd0:	(bad)  
  42ffd1:	call   0xcd426476
  42ffd6:	jb     0x42ffa4
  42ffd8:	inc    DWORD PTR [ebx-0x5ced01]
  42ffde:	es cmc 
  42ffe0:	dec    eax
  42ffe2:	adc    DWORD PTR [edi-0x420100],edi
  42ffe8:	dec    esp
  42ffea:	add    BYTE PTR [ebx-0x7],bl
  42ffed:	jmp    DWORD PTR [edx+0x5e70ff3a]
  42fff3:	sar    bh,0xff
  42fff6:	push   eax
  42fff7:	add    bh,bh
  42fff9:	int3   
  42fffa:	(bad)  
  42fffb:	jmp    0xe5e5837b
  430000:	add    DWORD PTR [edx+0x5e],0xffffffb9
  430004:	cmp    edi,0x7b
  430007:	inc    DWORD PTR [ebx-0x27d0ff7d]
  43000d:	(bad)  
  43000e:	fidivr DWORD PTR [edx-0x7d]
  430011:	loop   0x430006
  430013:	aam    0x0
  430015:	jmp    FWORD PTR [ebx-0x1]
  430018:	dec    DWORD PTR [ecx-0x76d7aa01]
  43001e:	test   al,0x83
  430020:	mov    DWORD PTR [esi-0x76ff48c7],ebp
  430026:	jno    0x430027
  430028:	inc    DWORD PTR [eax]
  43002a:	(bad)  
  43002b:	mov    ebp,0x7840833f
  430030:	add    BYTE PTR [ebx-0x15],dl
  430033:	add    DWORD PTR ds:[eax],0x1
  430037:	(bad)  
  430038:	(bad)  
  430039:	inc    DWORD PTR [eax]
  43003b:	dec    eax
  43003c:	sar    bh,1
  43003e:	test   BYTE PTR [edx+0x543b2100],al
  430044:	int3   
  430045:	mov    DWORD PTR [edi+edi*8-0x1c33ff01],ecx
  43004c:	push   es
  43004d:	(bad)  
  43004e:	mov    edi,0x884affdf
  430053:	mov    eax,ds:0xff16ff83
  430058:	(bad)  
  430059:	(bad)  
  43005a:	call   DWORD PTR [eax+0x39858982]
  430060:	add    BYTE PTR [esi],bh
  430062:	dec    esp
  430063:	test   eax,0xff6b0000
  430068:	(bad)  
  430069:	(bad)  
  43006a:	jmp    DWORD PTR [eax+0x59]
  43006d:	jmp    DWORD PTR [ebx+0x4e]
  430070:	jmp    esp
  430072:	add    edi,DWORD PTR [edi+edi*8-0x7d]
  430076:	push   cs
  430077:	(bad)  
  430078:	(bad)  
  430079:	inc    DWORD PTR [eax]
  43007b:	push   ebx
  43007c:	cmp    eax,0xff554f83
  430081:	es adc al,0x3a
  430084:	(bad)  
  430085:	call   DWORD PTR [edi+edi*8+0x0]
  430089:	inc    DWORD PTR [eax]
  43008b:	jns    0x430068
  43008d:	push   ebp
  43008f:	sbb    cl,BYTE PTR [ecx+0x679519]
  430095:	or     DWORD PTR [edi+edi*8-0x3700ff34],0x4
  43009d:	adc    DWORD PTR [eax],0xffffffde
  4300a0:	add    BYTE PTR [esi+0x896224],bl
  4300a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300a7:	inc    DWORD PTR [eax]
  4300a9:	add    bh,bh
  4300ab:	mov    al,ds:0xc4bcff39
  4300b0:	or     eax,0xffffff80
  4300b3:	cdq    
  4300b4:	inc    DWORD PTR [eax]
  4300b6:	fcos   
  4300b8:	add    BYTE PTR [ebx-0x7c7bb901],al
  4300be:	and    eax,0x490083a1
  4300c3:	xchg   ecx,eax
  4300c4:	(bad)  
  4300c5:	dec    ecx
  4300c7:	(bad)  
  4300c8:	dec    DWORD PTR [ecx-0xed7301]
  4300ce:	int    0x45
  4300d0:	add    ah,dh
  4300d2:	outs   dx,BYTE PTR ds:[esi]
  4300d3:	call   0x3701d7
  4300d8:	inc    DWORD PTR [ebx-0x33b3c277]
  4300de:	(bad)  
  4300df:	and    eax,0x11c20400
  4300e4:	mov    DWORD PTR [ecx+0xfffff9],ecx
  4300ea:	mov    DWORD PTR [esi],esp
  4300ec:	inc    edi
  4300ed:	(bad)  
  4300ee:	fdivr  QWORD PTR [edx-0x49968a01]
  4300f4:	int3   
  4300f5:	call   DWORD PTR [ebx+eax*4]
  4300f8:	mov    DWORD PTR [eax],eax
  4300fa:	mov    DWORD PTR [ecx-0x2b4e00bd],eax
  430100:	call   esi
  430102:	jle    0x4300ba
  430104:	add    ah,cl
  430106:	aam    0xff
  430108:	inc    DWORD PTR [eax]
  43010a:	add    BYTE PTR [edi+eax*8-0x1],ch
  43010e:	push   edx
  43010f:	lods   eax,DWORD PTR ds:[esi]
  430110:	(bad)  
  430111:	out    dx,al
  430112:	xchg   BYTE PTR [ebx-0x1],cl
  430115:	add    BYTE PTR [edi+0x83ff83],dh
  43011b:	or     al,0xdc
  43011d:	add    BYTE PTR [eax-0x25],dl
  430120:	add    BYTE PTR [eax-0xb],dl
  430123:	repz inc DWORD PTR [eax]
  430126:	push   0xffffffff
  430128:	add    bh,bh
  43012a:	dec    DWORD PTR [ecx]
  43012c:	addr16 call esi
  43012f:	xor    BYTE PTR [eax],al
  430131:	aaa    
  430132:	adc    BYTE PTR [edx],cl
  430134:	inc    DWORD PTR [eax]
  430136:	cmp    edi,0x7b830083
  43013c:	std    
  43013d:	sub    DWORD PTR [eax+0x4d],0xffffffff
  430141:	mov    esi,0xcc83bb8c
  430146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430147:	add    DWORD PTR [eax],0xffffffff
  43014a:	int3   
  43014b:	gs or  bh,bh
  43014e:	sti    
  43014f:	aad    0x83
  430151:	ret    
  430152:	jmp    0xff:0x57008372
  430159:	add    BYTE PTR [ebx+0x38ffb7dd],al
  43015f:	in     al,0x0
  430161:	adc    BYTE PTR [ebp+0x68],cl
  430164:	add    BYTE PTR [ebx+0x83ff78],al
  43016a:	add    BYTE PTR ds:0x992183ac,bh
  430170:	xor    DWORD PTR [esi+0x79],0xf
  430174:	inc    DWORD PTR [eax]
  430176:	mov    bl,0x0
  430178:	(bad)  
  430179:	inc    DWORD PTR [eax]
  43017b:	mov    esp,0x526f0082
  430180:	add    cl,dl
  430182:	mov    eax,ds:0x8089ffb2
  430187:	inc    DWORD PTR [ebx+0x4f3aff00]
  43018d:	(bad)  
  43018e:	aas    
  43018f:	repnz or ebp,0x9
  430193:	xchg   esp,eax
  430194:	(bad)  
  430195:	(bad)  
  430196:	call   0x8a42029a
  43019b:	repz jns 0x430121
  43019e:	xor    DWORD PTR [ebx+0x74902fff],edx
  4301a4:	(bad)  
  4301a5:	call   FWORD PTR [edi-0x3400]
  4301ab:	push   ds
  4301ac:	sar    bh,1
  4301ae:	fdiv   DWORD PTR [ecx]
  4301b0:	inc    DWORD PTR [edi+esi*8]
  4301b3:	push   esi
  4301b4:	add    BYTE PTR [ecx-0x3300ff29],cl
  4301ba:	add    BYTE PTR [esi+0x34],dl
  4301bd:	adc    DWORD PTR [eax+0xc10af7],0xffffff97
  4301c4:	add    bh,bh
  4301c6:	sub    edi,edi
  4301c8:	mov    ds:0xb7ff61,eax
  4301cd:	add    cl,ch
  4301cf:	add    bh,ch
  4301d1:	hlt    
  4301d2:	inc    DWORD PTR [ecx+0x0]
  4301d5:	call   FWORD PTR [ebx+0xcbd00]
  4301db:	ret    
  4301dc:	add    BYTE PTR [eax],al
  4301de:	dec    esp
  4301df:	jmp    FWORD PTR [edx]
  4301e1:	inc    DWORD PTR [eax]
  4301e3:	ins    BYTE PTR es:[edi],dx
  4301e4:	dec    esp
  4301e6:	or     edi,edi
  4301e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301e9:	dec    ebx
  4301ea:	int3   
  4301eb:	inc    ebp
  4301ec:	add    BYTE PTR [eax],al
  4301ee:	scas   eax,DWORD PTR es:[edi]
  4301ef:	call   DWORD PTR [ebx]
  4301f1:	jnp    0x430176
  4301f3:	fcmove st,st(4)
  4301f5:	push   DWORD PTR [edx-0x1]
  4301f8:	daa    
  4301f9:	mov    ebp,0xff6aff
  4301fe:	arpl   di,di
  430200:	ss cmp edi,edi
  430203:	push   eax
  430204:	inc    DWORD PTR [ebx-0x3b18ff8d]
  43020a:	or     DWORD PTR [eax+0x0],0xffffff83
  43020e:	adc    edi,edi
  430210:	inc    eax
  430211:	leave  
  430212:	and    DWORD PTR [edx-0x1],0xffffffff
  430216:	or     DWORD PTR [eax],eax
  430218:	jp     0x430219
  43021a:	add    DWORD PTR [edi],0x0
  43021d:	or     DWORD PTR [eax],0x0
  430220:	and    eax,0xc389cc
  430225:	add    BYTE PTR [edx-0x34],ch
  430228:	inc    edx
  430229:	sbb    edi,edi
  43022b:	je     0x4301b0
  43022d:	(bad)  
  43022e:	aas    
  43022f:	adc    DWORD PTR [ebp-0x3e33ca],0xffffff83
  430236:	test   eax,0x13b5ff
  43023b:	cwde   
  43023c:	mov    DWORD PTR [eax],eax
  43023e:	lahf   
  43023f:	int3   
  430240:	loope  0x4301c2
  430242:	(bad)  
  430243:	cmp    al,0x0
  430245:	(bad)  
  430246:	out    dx,al
  430247:	call   DWORD PTR [edx-0x11]
  43024a:	cmp    ecx,0x0
  43024d:	jmp    FWORD PTR [esi-0x34]
  430250:	loopne 0x43025d
  430252:	call   DWORD PTR [ebp-0xc00000]
  430258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430259:	jp     0x43025a
  43025b:	bswap  esp
  43025d:	dec    edx
  43025f:	jmp    DWORD PTR [edi-0x40]
  430262:	add    BYTE PTR [eax],bl
  430264:	inc    DWORD PTR [eax]
  430266:	pop    ecx
  430267:	add    BYTE PTR [edi-0x50],bh
  43026a:	inc    eax
  43026c:	cmp    edi,0xffffff9f
  43026f:	inc    DWORD PTR [esi-0xf5]
  430275:	add    BYTE PTR [esi],al
  430277:	add    BYTE PTR [esi-0x120068],ch
  43027d:	add    ch,cl
  43027f:	jmp    FWORD PTR [eax-0x7c6d00d5]
  430285:	dec    DWORD PTR [edx]
  430287:	jmp    FWORD PTR [ebp-0x387c3a]
  43028d:	cmp    eax,0xffffffff
  430290:	and    BYTE PTR [edi+edi*8],cl
  430293:	loopne 0x430294
  430295:	call   FWORD PTR [esi-0x1]
  430298:	adc    BYTE PTR [eax],bl
  43029a:	add    BYTE PTR [eax],dl
  43029c:	add    bh,bh
  43029e:	adc    ecx,esp
  4302a0:	mov    ebx,0xfff6892b
  4302a5:	sub    DWORD PTR [ecx+0x9e25ff],0x20
  4302ac:	inc    DWORD PTR [ebx-0x5502ff35]
  4302b2:	(bad)  
  4302b3:	cmp    edi,edi
  4302b5:	or     DWORD PTR [eax-0x523101],0x4f
  4302bc:	inc    DWORD PTR [eax]
  4302be:	add    ecx,DWORD PTR [ecx-0x54007081]
  4302c4:	add    bh,bh
  4302c6:	das    
  4302c7:	(bad)  
  4302c8:	mov    edx,0xcce58965
  4302cd:	add    dh,dh
  4302cf:	add    BYTE PTR [edx+0x1c],cl
  4302d2:	int3   
  4302d3:	inc    eax
  4302d4:	add    DWORD PTR [eax],0xffffffe2
  4302d7:	inc    esi
  4302d9:	adc    eax,0xffcc9f00
  4302de:	xor    eax,DWORD PTR [ebx+0x1cff434a]
  4302e4:	inc    DWORD PTR [eax]
  4302e6:	dec    edi
  4302e7:	add    BYTE PTR [ecx-0x76f9ff38],bh
  4302ed:	add    BYTE PTR [ebx+0x0],ch
  4302f0:	push   ss
  4302f1:	stos   DWORD PTR es:[edi],eax
  4302f2:	inc    DWORD PTR [esi]
  4302f4:	int3   
  4302f5:	call   FWORD PTR [ecx]
  4302f7:	call   DWORD PTR [esi+0x79]
  4302fa:	cmp    DWORD PTR [ebp-0x34],0x0
  4302fe:	nop
  4302ff:	add    BYTE PTR [ebx],ch
  430301:	inc    ecx
  430302:	(bad)  
  430303:	fcmove st,st(4)
  430305:	int3   
  430306:	mov    ebp,0xff7dae00
  43030b:	pop    ecx
  43030c:	mov    DWORD PTR [eax],eax
  43030e:	pop    ebp
  43030f:	add    BYTE PTR [edx],al
  430311:	sar    bh,1
  430313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430314:	add    ah,cl
  430316:	xor    bh,bh
  430318:	shl    dl,cl
  43031a:	add    BYTE PTR [eax],ah
  43031c:	(bad)  
  43031d:	call   FWORD PTR [edi+edi*8]
  430320:	clc    
  430321:	inc    DWORD PTR [eax]
  430323:	xchg   ebp,eax
  430324:	inc    DWORD PTR [ebx-0x29b8ff2a]
  43032a:	add    BYTE PTR [ebx-0x1],al
  43032d:	jmp    FWORD PTR [eax-0x1]
  430330:	jae    0x430370
  430332:	int3   
  430333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430334:	int3   
  430335:	jmp    DWORD PTR [ecx]
  430337:	(bad)  
  430338:	mov    edx,0xffc08976
  43033d:	call   DWORD PTR [edx-0x1]
  430340:	imul   ecx,DWORD PTR [edx],0xcc47ff
  430346:	sbb    eax,0x833ca4ff
  43034b:	ja     0x43034d
  43034d:	inc    DWORD PTR [edi-0x8b987d]
  430353:	call   0xdebe:0xff7a0089
  43035a:	call   DWORD PTR [ecx-0x1]
  43035d:	cmp    DWORD PTR [ebp-0x77],0xffffff8e
  430361:	ret    
  430362:	add    BYTE PTR [ebp-0x9b007d],dl
  430368:	adc    eax,0x892f006b
  43036d:	add    BYTE PTR [ebp-0x1],bh
  430370:	lock xrelease mov DWORD PTR [ebx-0x761f0001],edx
  430378:	es jno 0x43037a
  43037b:	adc    ecx,DWORD PTR [ecx+0x3dcc1fff]
  430381:	mov    ds:0x70ff,al
  430386:	dec    edx
  430387:	call   FWORD PTR [ecx+0x7e]
  43038a:	inc    DWORD PTR [esi]
  43038c:	inc    DWORD PTR [eax]
  43038e:	push   ebx
  43038f:	call   FWORD PTR [eax+0x78]
  430392:	int3   
  430393:	aas    
  430394:	add    bh,bh
  430396:	bound  eax,QWORD PTR [ebx-0x2cff4987]
  43039c:	(bad)  
  43039d:	jmp    DWORD PTR [edi]
  43039f:	add    BYTE PTR [esp+ecx*2-0x33ff117d],dh
  4303a6:	xor    BYTE PTR [ebx-0x7c5854],al
  4303ac:	add    BYTE PTR [ebx-0x324f00cf],al
  4303b2:	(bad)  
  4303b3:	stc    
  4303b4:	add    DWORD PTR [eax],0xffffff80
  4303b7:	jmp    FWORD PTR [ecx]
  4303b9:	push   ss
  4303ba:	push   DWORD PTR [ebx+0x0]
  4303bd:	dec    DWORD PTR [esi-0x7cb89201]
  4303c3:	pop    esi
  4303c4:	int3   
  4303c5:	(bad)  
  4303c6:	cmp    edi,edi
  4303c8:	pop    esp
  4303c9:	stc    
  4303ca:	inc    ebp
  4303cc:	add    BYTE PTR [eax],al
  4303ce:	pop    ss
  4303cf:	push   DWORD PTR [ecx-0x25]
  4303d2:	inc    DWORD PTR [edi-0x1]
  4303d5:	int3   
  4303d6:	inc    ecx
  4303d7:	add    BYTE PTR [ecx],dl
  4303d9:	ud0    eax,DWORD PTR [edi]
  4303dc:	(bad)  
  4303dd:	call   DWORD PTR [eax]
  4303df:	sbb    DWORD PTR [edx-0xb],0xffffffff
  4303e3:	pop    ebp
  4303e4:	add    bh,bh
  4303e6:	xchg   BYTE PTR [eax],al
  4303e8:	push   cs
  4303e9:	and    bh,bh
  4303eb:	mov    ebp,0x27ffff
  4303f0:	out    0x17,eax
  4303f2:	call   DWORD PTR [edi]
  4303f4:	add    BYTE PTR [ebx+0x7601ff6f],al
  4303fa:	mov    DWORD PTR [ecx-0x7c43337d],ecx
  430400:	aaa    
  430401:	fmul   st(4),st
  430403:	retf   0x0
  430406:	lods   al,BYTE PTR ds:[esi]
  430407:	mov    DWORD PTR [ebx-0x407c3d],eax
  43040d:	dec    DWORD PTR [esp+ecx*8+0x3ffbcbe]
  430414:	add    DWORD PTR [ebx+0x1ca90053],0xffffffff
  43041b:	cld    
  43041c:	int3   
  43041d:	add    BYTE PTR [ebx+eax*4-0x60],ch
  430421:	pop    DWORD PTR [eax]
  430423:	mov    ch,0x0
  430425:	call   DWORD PTR [eax-0x33e2e700]
  43042b:	dec    ebp
  43042c:	add    BYTE PTR [ebx+0x25fd83cd],al
  430432:	jmp    DWORD PTR ds:0xff9589ff
  430438:	jns    0x4303e2
  43043a:	call   DWORD PTR [ebx-0x33d40034]
  430440:	into   
  430441:	rol    BYTE PTR [eax],cl
  430443:	xchg   edi,edi
  430445:	sub    DWORD PTR [edi-0x1],0xffffff86
  430449:	inc    eax
  43044a:	jmp    DWORD PTR [ebp+0x230000]
  430450:	shl    DWORD PTR [ecx],cl
  430452:	add    BYTE PTR [ebx+0xbfffff],ch
  430458:	push   edi
  430459:	push   ebx
  43045a:	add    ch,dl
  43045c:	(bad)  
  43045d:	jmp    DWORD PTR [edi]
  43045f:	call   DWORD PTR [eax+edi*1]
  430462:	mov    DWORD PTR [eax-0x1],edi
  430465:	int3   
  430466:	les    eax,FWORD PTR [ebx-0x150099ed]
  43046c:	int3   
  43046d:	jmp    DWORD PTR [ebx-0x76caa000]
  430473:	or     DWORD PTR [eax],eax
  430475:	jmp    ebx
  430477:	add    BYTE PTR [esi+0x78],dh
  43047a:	inc    DWORD PTR [ecx]
  43047c:	add    bh,bh
  43047e:	mov    ebx,0x898c6100
  430483:	xor    bh,bh
  430485:	or     DWORD PTR [esi],0xffffffff
  430488:	sub    al,0xe2
  43048a:	add    bh,cl
  43048c:	(bad)  
  43048d:	call   FWORD PTR [ecx+0x0]
  430490:	dec    ebx
  430491:	push   es
  430492:	add    BYTE PTR [ecx+0x0],ah
  430495:	add    BYTE PTR [eax+0x0],ch
  430498:	fs pop ebx
  43049a:	call   DWORD PTR [edi-0x77]
  43049d:	cmp    DWORD PTR [esi-0x77],0x7d
  4304a1:	repz inc DWORD PTR [ebx+eax*4-0x1]
  4304a6:	(bad)  
  4304a8:	mov    esp,0xc8ffb6
  4304ad:	jmp    FWORD PTR [ebx+eax*4-0x7a7672f2]
  4304b4:	inc    DWORD PTR [ebx+0x1b2d83a0]
  4304ba:	and    DWORD PTR [edi],0x0
  4304bd:	cmp    DWORD PTR [eax],0xffffffff
  4304c0:	sbb    al,0x8f
  4304c2:	add    BYTE PTR [ecx+ecx*4+0x51ff9fff],ah
  4304c9:	mov    cl,0xff
  4304cb:	jl     0x4304cc
  4304cd:	add    BYTE PTR [edx-0xa09800],bh
  4304d3:	clc    
  4304d4:	int3   
  4304d5:	int3   
  4304d6:	call   0xff79:0x89d20783
  4304dd:	dec    DWORD PTR [eax]
  4304df:	dec    esi
  4304e1:	xor    eax,0xcc8362ff
  4304e6:	cli    
  4304e7:	push   DWORD PTR [edi+ebp*4+0xffec00]
  4304ee:	mov    eax,0xc2caff
  4304f3:	inc    DWORD PTR ss:[eax]
  4304f6:	add    al,BYTE PTR [eax]
  4304f8:	ss iret 
  4304fa:	push   DWORD PTR [esi]
  4304fc:	(bad)  
  4304fd:	(bad)  
  4304fe:	fisttp WORD PTR [ecx-0xbffe9ee]
  430504:	add    DWORD PTR [eax],0xffffff9b
  430507:	int3   
  430508:	sbb    DWORD PTR [eax-0xa900],esp
  43050e:	(bad)  
  43050f:	push   DWORD PTR [ebp+0x4a]
  430512:	call   DWORD PTR [eax-0x7d]
  430515:	push   eax
  430517:	int3   
  430518:	das    
  430519:	hlt    
  43051a:	(bad)  
  43051b:	jnp    0x4304e9
  43051d:	add    bh,ah
  43051f:	add    BYTE PTR [edx],ah
  430521:	or     eax,0x89008e00
  430526:	or     cl,BYTE PTR [ecx-0x7ff5621]
  43052c:	mov    edi,edi
  43052e:	lods   al,BYTE PTR ds:[esi]
  43052f:	or     DWORD PTR [edx-0x11ffd9],0x0
  430536:	dec    edx
  430537:	add    BYTE PTR [edi],cl
  430539:	mov    ebp,0xffff06ff
  43053e:	mov    al,ds:0xffed72ff
  430543:	dec    esi
  430544:	add    bh,bh
  430546:	fcos   
  430548:	mov    ecx,0xceffd5
  43054d:	add    BYTE PTR [eax],dh
  43054f:	dec    DWORD PTR [ebp+ebx*2-0x76007701]
  430556:	loope  0x430557
  430558:	outs   dx,DWORD PTR ds:[esi]
  430559:	fxch   st(4)
  43055b:	aad    0x0
  43055d:	int3   
  43055e:	rol    DWORD PTR [eax],1
  430560:	enter  0xff3c,0xb1
  430564:	(bad)  
  430565:	call   DWORD PTR [ecx]
  430567:	add    BYTE PTR [eax+0x5dffc2],dl
  43056d:	int3   
  43056e:	scas   al,BYTE PTR es:[edi]
  43056f:	int3   
  430570:	cmp    DWORD PTR [ebx-0x34],ebp
  430573:	icebp  
  430574:	int3   
  430575:	call   FWORD PTR [ebx-0xdf7600]
  43057b:	pop    ss
  43057c:	inc    DWORD PTR [eax]
  43057e:	in     al,dx
  43057f:	add    BYTE PTR [edi-0xa8004c],ch
  430585:	call   DWORD PTR [esi-0x1]
  430588:	repnz nop
  43058a:	and    DWORD PTR [edx-0x1],0xffffffff
  43058e:	xor    edi,edi
  430590:	push   edx
  430591:	inc    edx
  430592:	cmp    DWORD PTR ds:0xffeb0089,0xffffff95
  430599:	cdq    
  43059a:	(bad)  
  43059b:	jg     0x430526
  43059d:	(bad)  
  43059e:	mov    edx,0xffbdf983
  4305a3:	mov    eax,0x89f800ff
  4305a8:	pusha  
  4305a9:	or     eax,0xffffb783
  4305ae:	sti    
  4305af:	sbb    DWORD PTR [edx],0xfffffff0
  4305b2:	mov    DWORD PTR [ebx-0x1],esp
  4305b5:	or     DWORD PTR [ecx-0x7b8101],0xffffffe2
  4305bc:	mov    DWORD PTR [ebx+0x6f11004e],eax
  4305c2:	int3   
  4305c3:	jns    0x430548
  4305c5:	sbb    DWORD PTR [ecx],0xffffff89
  4305c8:	adc    al,0x1b
  4305ca:	call   DWORD PTR [eax]
  4305cc:	(bad)  
  4305cd:	dec    esp
  4305cf:	jmp    DWORD PTR [ebx]
  4305d1:	xchg   esp,eax
  4305d2:	add    BYTE PTR [ecx+0x10ffff],bh
  4305d8:	loop   0x4305d0
  4305da:	jmp    DWORD PTR [eax+eax*1-0x36ffa901]
  4305e1:	mov    BYTE PTR [eax],0xa2
  4305e4:	dec    DWORD PTR [ecx+0x550aff59]
  4305ea:	add    bl,dh
  4305ec:	mov    edi,edi
  4305ee:	inc    esp
  4305ef:	add    dl,al
  4305f1:	mov    ecx,0x6bff
  4305f6:	fs int3 
  4305f8:	sbb    DWORD PTR [esi+0x0],esi
  4305fb:	cmp    eax,0x83b8ccff
  430600:	push   es
  430601:	mov    ebp,0x89ff9e83
  430606:	retf   
  430607:	(bad)  
  430608:	in     al,dx
  430609:	cdq    
  43060a:	jmp    ebx
  43060c:	mov    DWORD PTR [eax],eax
  43060e:	fisttp QWORD PTR [ecx+0x58831172]
  430614:	add    bh,bh
  430616:	fiadd  DWORD PTR [eax]
  430618:	cdq    
  430619:	pop    edi
  43061a:	add    BYTE PTR [edi-0xf7ff01],cl
  430620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430621:	repnz add BYTE PTR [edi],ah
  430624:	add    BYTE PTR [eax],al
  430626:	sbb    DWORD PTR [ecx+0x3900406a],ecx
  43062c:	or     DWORD PTR [ecx-0x6be70057],0xffffffff
  430633:	adc    al,BYTE PTR [eax]
  430635:	adc    DWORD PTR [edx+0x0],0xffffffc7
  430639:	cdq    
  43063a:	add    BYTE PTR [esi-0x1],ch
  43063d:	add    DWORD PTR [ebp-0x7d],0xffffffb5
  430641:	adc    al,BYTE PTR [eax]
  430643:	inc    esp
  430644:	int3   
  430645:	push   esi
  430647:	and    ebp,0xffffffc3
  43064a:	int3   
  43064b:	das    
  43064c:	add    BYTE PTR [eax],al
  43064e:	push   edi
  43064f:	add    cl,dh
  430651:	(bad)  
  430653:	test   al,0xcc
  430655:	add    ch,al
  430657:	push   DWORD PTR [ecx+edi*4-0x6f00]
  43065e:	adc    al,0x83
  430660:	inc    esi
  430661:	adc    ecx,DWORD PTR [ecx-0x5aff335c]
  430667:	add    edx,0x25
  43066a:	call   FWORD PTR [ebx]
  43066c:	(bad)  
  43066d:	jmp    FWORD PTR [ecx-0x1]
  430670:	icebp  
  430671:	ss (bad) 
  430673:	fdivr  st,st(7)
  430675:	int3   
  430676:	into   
  430677:	mov    eax,edx
  430679:	jle    0x43067a
  43067b:	push   esp
  43067c:	cmp    edi,0x5c
  43067f:	add    BYTE PTR [ebx-0x24],bl
  430682:	add    BYTE PTR [ecx-0x710001],bh
  430688:	mov    esp,0xcccaffa1
  43068d:	dec    DWORD PTR [edi-0x6da47d]
  430693:	aas    
  430694:	dec    esp
  430696:	fdiv   st(7),st
  430698:	sub    al,0x46
  43069a:	inc    DWORD PTR [eax+eax*1-0x7f003401]
  4306a1:	bound  eax,QWORD PTR [eax]
  4306a3:	and    eax,0xffae00ff
  4306a8:	push   0xcc1d8900
  4306ad:	int3   
  4306ae:	fld    DWORD PTR [ebx+0x5c005592]
  4306b4:	inc    DWORD PTR [eax]
  4306b6:	cmp    al,0x0
  4306b8:	xor    dl,ch
  4306ba:	push   esp
  4306bc:	(bad)  
  4306bd:	(bad)  
  4306be:	mov    eax,0x6f0083
  4306c3:	popf   
  4306c4:	add    BYTE PTR [ecx+0x4eeecc18],cl
  4306ca:	add    BYTE PTR [ecx],ch
  4306cc:	inc    DWORD PTR [eax]
  4306ce:	or     edi,edi
  4306d0:	jne    0x43066a
  4306d2:	int3   
  4306d3:	lods   eax,DWORD PTR ds:[esi]
  4306d4:	(bad)  
  4306d5:	call   FWORD PTR [edi+edi*8+0x2a83996a]
  4306dc:	(bad)  
  4306dd:	call   DWORD PTR [esi+0xe1c9ff]
  4306e3:	add    al,0x83
  4306e5:	add    ah,bl
  4306e7:	add    BYTE PTR [ebx-0x33c70016],cl
  4306ed:	jmp    FWORD PTR [esi+0x1d52cc]
  4306f3:	cmp    al,0x0
  4306f5:	call   FWORD PTR [ebp+0x0]
  4306f8:	js     0x4306a5
  4306fa:	add    BYTE PTR [edi-0x1],ah
  4306fd:	jmp    FWORD PTR ds:0xc2b589
  430703:	inc    ebx
  430704:	int3   
  430705:	add    bh,ah
  430707:	add    cl,ch
  430709:	les    eax,FWORD PTR [eax]
  43070b:	push   edi
  43070c:	or     DWORD PTR [ecx+0x1706ffc8],0xffffffff
  430713:	jno    0x430715
  430715:	add    BYTE PTR [ebp+0xd95bff],bl
  43071b:	outs   dx,DWORD PTR ds:[esi]
  43071c:	add    BYTE PTR [eax],al
  43071e:	inc    ebx
  43071f:	inc    DWORD PTR ds:0xffb5ffc7
  430725:	add    ah,dl
  430727:	call   DWORD PTR [ebx-0x7c4300e7]
  43072d:	add    BYTE PTR [ecx+ecx*4-0x6b],dh
  430731:	cli    
  430732:	(bad)  
  430733:	std    
  430734:	inc    DWORD PTR [eax]
  430736:	ja     0x430738
  430738:	les    ecx,FWORD PTR [esi-0x7c333100]
  43073e:	cmp    eax,DWORD PTR [eax]
  430740:	cmc    
  430741:	fadd   DWORD PTR [eax]
  430743:	fild   DWORD PTR [eax]
  430745:	add    BYTE PTR [edx],bl
  430747:	inc    DWORD PTR ds:0xff1b00c8
  43074d:	push   DWORD PTR [ecx-0x1]
  430750:	out    dx,eax
  430751:	pop    ebp
  430752:	add    BYTE PTR [edi],dh
  430754:	inc    DWORD PTR [eax]
  430756:	xchg   ecx,eax
  430757:	mov    DWORD PTR [eax-0x768c],edi
  43075d:	call   edx
  43075f:	mov    DWORD PTR [eax],esi
  430761:	aam    0x0
  430763:	and    bh,bh
  430765:	jmp    DWORD PTR [edx]
  430767:	add    BYTE PTR [edx],dl
  430769:	pop    es
  43076a:	sbb    DWORD PTR [eax+eax*1],0xffffffff
  43076e:	(bad)  
  43076f:	(bad)  
  430770:	std    
  430771:	mov    ah,0xff
  430773:	xor    cl,ah
  430775:	int3   
  430776:	int3   
  430777:	add    DWORD PTR [ecx],0xffffffb3
  43077a:	jmp    FWORD PTR [edi-0x1]
  43077d:	add    bh,ah
  43077f:	or     DWORD PTR [ecx+0x64],0xffffffff
  430783:	jle    0x430785
  430785:	mov    eax,ecx
  430787:	add    BYTE PTR [esi-0x7c197ce0],al
  43078d:	(bad)  
  43078e:	cmp    eax,DWORD PTR [eax]
  430790:	imul   DWORD PTR [ecx-0xe900]
  430796:	(bad)  
  430798:	shr    DWORD PTR [ebx],cl
  43079a:	mov    DWORD PTR [ecx-0x3b0077],eax
  4307a0:	das    
  4307a1:	or     eax,0xff79ff
  4307a6:	add    BYTE PTR es:[edi],cl
  4307a9:	ins    BYTE PTR es:[edi],dx
  4307aa:	call   DWORD PTR [eax-0x7d]
  4307ad:	add    ch,cl
  4307af:	add    BYTE PTR [ecx*2-0x7cffa034],cl
  4307b6:	les    eax,FWORD PTR [ebx-0x6e0045b7]
  4307bc:	inc    DWORD PTR [eax]
  4307be:	jnp    0x4307c0
  4307c0:	aas    
  4307c1:	repz xor ebp,0xffffffff
  4307c5:	inc    esi
  4307c7:	call   DWORD PTR [ebx-0x900a5]
  4307cd:	dec    DWORD PTR [esi-0x7d]
  4307d0:	lea    esi,[ecx]
  4307d2:	add    ch,al
  4307d4:	add    BYTE PTR [ebx-0x1d39ffe1],al
  4307da:	add    BYTE PTR [edx-0xe50000],bh
  4307e0:	stos   BYTE PTR es:[edi],al
  4307e1:	(bad)  
  4307e3:	(bad)  
  4307e4:	(bad)  
  4307e5:	call   DWORD PTR [ebx-0x1]
  4307e8:	fistp  DWORD PTR [ebp-0xff7f01]
  4307ee:	cmp    bh,0x6a
  4307f1:	jae    0x4307f2
  4307f3:	data16 (bad) 
  4307f5:	call   FWORD PTR [ebx-0x77]
  4307f8:	push   edx
  4307f9:	dec    esp
  4307fa:	add    BYTE PTR [ebx+eax*4],cl
  4307fd:	(bad)  
  4307fe:	cli    
  4307ff:	dec    DWORD PTR [ecx]
  430801:	in     al,0x0
  430803:	out    dx,al
  430804:	inc    DWORD PTR [eax]
  430806:	add    BYTE PTR [eax],al
  430808:	in     eax,0x65
  43080a:	(bad)  
  43080b:	jmp    0x43080d
  43080d:	inc    ecx
  43080f:	int3   
  430810:	and    edi,DWORD PTR [ebx+0x89ae89]
  430816:	ret    
  430817:	add    BYTE PTR [eax-0x28],cl
  43081a:	(bad)  
  43081b:	jmp    0x15ae:0xff8b00ff
  430822:	jmp    DWORD PTR [ecx-0x1]
  430825:	add    BYTE PTR [ecx-0x33c82301],dh
  43082b:	sbb    eax,0xff6900ff
  430830:	shl    ebx,0x89
  430833:	icebp  
  430834:	inc    DWORD PTR [ebx-0x77d5ffb8]
  43083a:	push   DWORD PTR [edx-0x34]
  43083d:	dec    DWORD PTR [eax+eax*1-0x2200bc42]
  430844:	(bad)  
  430845:	call   FWORD PTR ds:0xff10f389
  43084b:	fiadd  DWORD PTR [ebx+0x20ffe8ff]
  430851:	aam    0xff
  430853:	popa   
  430854:	(bad)  
  430855:	(bad)  
  430856:	fcos   
  430858:	repz loopne 0x4307de
  43085b:	pop    eax
  43085c:	(bad)  
  43085d:	call   DWORD PTR [eax-0x7c6bc27d]
  430863:	jle    0x4307e8
  430865:	push   DWORD PTR [ebx]
  430867:	add    BYTE PTR [edx],al
  430869:	dec    ebx
  43086a:	add    BYTE PTR [edx],dl
  43086c:	inc    DWORD PTR [eax]
  43086e:	call   FWORD PTR ds:[ebx-0x90fff1]
  430875:	add    BYTE PTR ds:0xffa26489,ch
  43087b:	aas    
  43087c:	add    bh,bh
  43087e:	idiv   edi
  430880:	stc    
  430881:	sub    edi,edi
  430883:	add    BYTE PTR [eax],0x0
  430886:	cmp    bh,0x35
  430889:	or     edi,edi
  43088b:	mov    al,BYTE PTR [ebx-0x74008900]
  430891:	cmp    eax,DWORD PTR [eax]
  430893:	jmp    0x430894
  430895:	add    BYTE PTR [ebx-0x76348634],cl
  43089b:	js     0x43089d
  43089d:	add    BYTE PTR [ebp-0x1],dh
  4308a0:	mov    cl,0x41
  4308a2:	call   DWORD PTR [edi+edi*8-0x47007101]
  4308a9:	retf   
  4308aa:	jmp    ebp
  4308ac:	(bad)  
  4308ad:	dec    DWORD PTR [ebp-0x76088901]
  4308b3:	rol    BYTE PTR [eax],0xff
  4308b6:	(bad)  
  4308b7:	jmp    FWORD PTR [ebx+0x61]
  4308ba:	add    BYTE PTR [edi],bh
  4308bc:	mov    edi,edi
  4308be:	stos   BYTE PTR es:[edi],al
  4308bf:	sbb    eax,0xffffffd4
  4308c2:	(bad)  
  4308c3:	fld    QWORD PTR [ebx+0x75ff4c00]
  4308c9:	stos   BYTE PTR es:[edi],al
  4308ca:	int3   
  4308cb:	add    DWORD PTR es:[eax],0xffffff92
  4308cf:	adc    DWORD PTR [esp+eax*4],0x0
  4308d3:	dec    esp
  4308d4:	(bad)  
  4308d5:	inc    DWORD PTR [edx]
  4308d7:	int3   
  4308d8:	dec    ebp
  4308d9:	sbb    eax,0x8383f7ff
  4308de:	mov    cl,0x83
  4308e0:	cmp    ebx,esi
  4308e2:	int3   
  4308e3:	adc    ah,cl
  4308e5:	sub    DWORD PTR [ebx],0xffffffff
  4308e8:	adc    dl,BYTE PTR [eax-0xff877d]
  4308ee:	mov    es,WORD PTR [eax]
  4308f0:	loope  0x4308f2
  4308f2:	call   FWORD PTR [eax]
  4308f4:	dec    DWORD PTR [ecx-0x4f80ff53]
  4308fa:	dec    DWORD PTR [edx-0x77]
  4308fd:	jmp    FWORD PTR [edi-0x7ca07a00]
  430903:	pop    edi
  430904:	add    BYTE PTR [ecx+0x29ddffbc],cl
  43090a:	mov    DWORD PTR [esi],ebx
  43090c:	add    bh,bh
  43090e:	pop    ds
  43090f:	add    BYTE PTR [ebx],bl
  430911:	out    dx,al
  430912:	add    BYTE PTR ds:0x89318300,bh
  430918:	pop    edx
  430919:	inc    edi
  43091a:	call   FWORD PTR [ecx+0x4d89ff]
  430920:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430921:	scas   eax,DWORD PTR es:[edi]
  430922:	add    ch,al
  430924:	inc    DWORD PTR [eax]
  430926:	and    al,0x89
  430928:	sbb    BYTE PTR [ebp+0x0],dl
  43092b:	jg     0x43092c
  43092d:	add    BYTE PTR [eax+eax*1-0x2dff2fb1],bl
  430934:	int3   
  430935:	push   DWORD PTR [esi-0x1]
  430938:	ja     0x43099b
  43093a:	mov    DWORD PTR [edi-0xaf7c7d],edi
  430940:	dec    edi
  430941:	mov    edi,?
  430943:	cld    
  430944:	add    bh,bh
  430946:	jae    0x6c438aca
  43094c:	inc    DWORD PTR [eax]
  43094e:	pop    eax
  43094f:	add    dh,bh
  430951:	dec    esp
  430952:	add    ah,bl
  430954:	inc    DWORD PTR [eax]
  430956:	pushf  
  430957:	call   DWORD PTR [ebp+0x8e83d5]
  43095d:	sbb    DWORD PTR [ebp-0x7609c801],0x37
  430964:	(bad)  
  430965:	jmp    DWORD PTR [edi-0x1]
  430968:	aas    
  430969:	mov    BYTE PTR [ebx+0x61838310],0x0
  430970:	call   0xc983:0xffa789c6
  430977:	push   DWORD PTR [edx-0x40]
  43097a:	add    BYTE PTR [eax-0x1],ah
  43097d:	add    BYTE PTR [ecx],ah
  43097f:	inc    edx
  430981:	cmp    al,0xcc
  430983:	mov    dl,0x0
  430985:	add    BYTE PTR [ecx-0x1],bl
  430988:	repz retf 
  43098a:	add    al,cl
  43098c:	(bad)  
  43098d:	push   DWORD PTR [ebx]
  43098f:	call   FWORD PTR [edi+edi*2+0x0]
  430993:	(bad)  
  430994:	add    BYTE PTR [eax],al
  430996:	in     al,dx
  430997:	call   FWORD PTR [esi+0x3eff7d]
  43099d:	jmp    FWORD PTR [ecx]
  43099f:	int3   
  4309a0:	cmp    esp,edi
  4309a2:	jmp    DWORD PTR ds:0xff85ff00
  4309a8:	mov    ebp,0x368315
  4309ad:	add    bl,bl
  4309af:	adc    DWORD PTR [eax],0x47
  4309b2:	int3   
  4309b3:	jg     0x4309b5
  4309b5:	jmp    DWORD PTR [edx]
  4309b7:	jmp    FWORD PTR [edx]
  4309b9:	lods   eax,DWORD PTR ds:[esi]
  4309ba:	jmp    DWORD PTR [esi]
  4309bc:	add    BYTE PTR [ebx-0x53ff763e],al
  4309c2:	call   FWORD PTR [edx-0x7d]
  4309c5:	cmp    esp,0xffffffff
  4309c8:	xchg   BYTE PTR ds:0xffccf900,dh
  4309ce:	xchg   ecx,eax
  4309cf:	(bad)  
  4309d0:	js     0x430a1b
  4309d2:	add    ch,cl
  4309d4:	(bad)  
  4309d5:	dec    DWORD PTR [esi-0x1]
  4309d8:	mov    DWORD PTR [edi],eax
  4309da:	add    BYTE PTR [eax-0x1],bh
  4309dd:	add    ch,bl
  4309df:	add    BYTE PTR [ecx+ebx*1],ch
  4309e2:	(bad)  
  4309e3:	fiadd  WORD PTR [ebx-0x5aff6b00]
  4309e9:	cmp    eax,0x8968ff
  4309ee:	mov    ds:0xbca00,eax
  4309f3:	scas   eax,DWORD PTR es:[edi]
  4309f4:	add    BYTE PTR [eax],al
  4309f6:	pop    ss
  4309f7:	add    BYTE PTR [ecx-0x72],ch
  4309fa:	call   edi
  4309fc:	dec    DWORD PTR [ecx-0x1f950090]
  430a02:	dec    esp
  430a04:	cmp    edi,0x16
  430a07:	dec    edi
  430a09:	sbb    edi,edi
  430a0b:	sbb    eax,DWORD PTR [ebx-0x14007901]
  430a11:	mov    BYTE PTR [ebx-0x5d007ca1],al
  430a17:	mov    DWORD PTR [edi],ebx
  430a19:	and    eax,DWORD PTR [ebx-0x36007caa]
  430a1f:	xor    DWORD PTR [esi+0x4b],0xffffff89
  430a23:	and    edi,edi
  430a25:	sbb    ebp,0xffffffff
  430a28:	iret   
  430a29:	pop    ss
  430a2a:	jmp    FWORD PTR [eax]
  430a2c:	cmp    edi,0x2b
  430a2f:	add    BYTE PTR [ebp-0x3c],cl
  430a32:	int3   
  430a33:	add    bh,bh
  430a35:	add    BYTE PTR [ebx+eax*4],dh
  430a38:	adc    dl,BYTE PTR [edx]
  430a3a:	add    BYTE PTR [edx-0x7d],al
  430a3d:	int3   
  430a3e:	popa   
  430a3f:	add    BYTE PTR [edx+ebp*1-0x77],dh
  430a43:	call   0xc590:0xff3f8300
  430a4a:	add    dh,cl
  430a4c:	add    BYTE PTR [ebx-0x37eeff98],al
  430a52:	add    BYTE PTR [ebx],dl
  430a54:	(bad)  
  430a55:	(bad)  
  430a56:	aas    
  430a57:	int3   
  430a58:	mov    eax,ds:0x4cffa7
  430a5d:	jmp    FWORD PTR [esi]
  430a5f:	mov    DWORD PTR [edx-0x7615001d],esp
  430a65:	int3   
  430a66:	cmp    edi,0xfeffcc82
  430a6c:	inc    DWORD PTR [eax]
  430a6e:	dec    ebp
  430a6f:	mov    DWORD PTR [eax+0x6],eax
  430a72:	call   FWORD PTR [ecx-0xf27c7d]
  430a78:	jmp    DWORD PTR ds:0x83cc57ff
  430a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430a7f:	(bad)  
  430a80:	cmp    al,0xda
  430a82:	add    BYTE PTR [eax-0x1],ah
  430a85:	jmp    FWORD PTR [eax+eax*1+0x75cc24a8]
  430a8c:	inc    DWORD PTR [eax]
  430a8e:	pop    ecx
  430a8f:	dec    DWORD PTR [ecx+esi*8]
  430a92:	call   DWORD PTR [edi]
  430a94:	dec    DWORD PTR [ecx+0x60500039]
  430a9a:	int3   
  430a9b:	inc    ecx
  430a9c:	(bad)  
  430a9d:	jmp    DWORD PTR [edx-0xa3737d]
  430aa3:	sub    edi,edi
  430aa5:	dec    DWORD PTR [edi+edi*8+0x1]
  430aa9:	xchg   esi,eax
  430aaa:	add    BYTE PTR [edx],ah
  430aac:	mov    esp,ecx
  430aae:	and    DWORD PTR [eax],eax
  430ab0:	ins    DWORD PTR es:[edi],dx
  430ab1:	mov    BYTE PTR [eax],0xc
  430ab4:	inc    DWORD PTR [eax]
  430ab6:	sahf   
  430ab7:	call   FWORD PTR [eax]
  430ab9:	jns    0x430a44
  430abb:	out    dx,al
  430abc:	(bad)  
  430abd:	(bad)  
  430abe:	fdiv   st(7),st
  430ac0:	adc    BYTE PTR [ebx+eax*4-0x2c],dl
  430ac4:	inc    DWORD PTR [ebx+0x296ff6c]
  430aca:	int3   
  430acb:	js     0x430acc
  430acd:	call   FWORD PTR [esp+ecx*8]
  430ad0:	sbb    esp,DWORD PTR [esi-0x1]
  430ad3:	mov    edi,0x83fa0089
  430ad8:	test   BYTE PTR [ecx-0xef00],bl
  430ade:	dec    ebx
  430adf:	call   DWORD PTR [eax-0x7c33ff15]
  430ae5:	dec    ebp
  430ae7:	push   ebx
  430ae9:	add    eax,0x83ffe3ff
  430aee:	mov    ah,0xcc
  430af0:	stos   DWORD PTR es:[edi],eax
  430af1:	jne    0x430a76
  430af3:	mov    ds:0x7a00cc,al
  430af8:	int3   
  430af9:	aad    0xcc
  430afb:	push   0x3dffcc
  430b00:	jb     0x430b41
  430b02:	mov    DWORD PTR [eax],ebx
  430b04:	dec    DWORD PTR [ecx-0x10940030]
  430b0a:	add    BYTE PTR [edx-0x1],ah
  430b0d:	push   edi
  430b0f:	add    esi,0xffffffea
  430b12:	int3   
  430b13:	adc    BYTE PTR [ecx-0x76007a7d],cl
  430b19:	add    bh,bh
  430b1b:	nop
  430b1c:	add    DWORD PTR [eax],0xffffff85
  430b1f:	push   DWORD PTR [ecx]
  430b21:	pop    esi
  430b22:	jmp    FWORD PTR [edx+0x0]
  430b25:	call   DWORD PTR [ebp-0x1]
  430b28:	loop   0x430ae9
  430b2a:	mov    eax,eax
  430b2c:	add    DWORD PTR [eax],0x4d
  430b2f:	mov    DWORD PTR [eax+ebp*1],edi
  430b32:	mov    ecx,esp
  430b34:	(bad)  
  430b35:	(bad)  
  430b36:	mov    esp,0xef1bff
  430b3b:	rol    DWORD PTR [ebx+0x5dfffa00],cl
  430b41:	daa    
  430b42:	or     DWORD PTR [edi+0x0],0xffffffcc
  430b46:	adc    al,0xff
  430b48:	popa   
  430b49:	sub    BYTE PTR [ebx+0x6f8383bd],al
  430b4f:	call   DWORD PTR ds:0x8e009a
  430b55:	add    BYTE PTR [ecx+ecx*4],dh
  430b58:	pushf  
  430b59:	in     al,0xff
  430b5b:	mov    edx,0xff6783ff
  430b60:	pop    ss
  430b61:	fmul   st(4),st
  430b63:	inc    eax
  430b64:	int3   
  430b65:	int3   
  430b66:	inc    ecx
  430b67:	(bad)  
  430b68:	mov    esi,0xff5b83e9
  430b6d:	adc    ecx,0xffffffff
  430b70:	popa   
  430b71:	std    
  430b72:	add    BYTE PTR [eax-0x77],bl
  430b75:	sbb    DWORD PTR [ebp-0x345401],0xffffffad
  430b7c:	inc    DWORD PTR [eax]
  430b7e:	loopne 0x430b7f
  430b80:	rcr    DWORD PTR [edx-0x7d00],1
  430b86:	xchg   ebp,eax
  430b87:	dec    eax
  430b89:	and    DWORD PTR [ebx-0x7d00ffd8],eax
  430b8f:	(bad)  
  430b90:	cmp    eax,0x17ff4c
  430b95:	int3   
  430b96:	dec    esp
  430b97:	jmp    DWORD PTR [ebx]
  430b99:	jmp    0xcd0fe09e
  430b9e:	nop
  430b9f:	mov    DWORD PTR [ebp-0xf],edx
  430ba2:	jmp    DWORD PTR [ebp-0x1c0001]
  430ba8:	and    al,0x29
  430baa:	jmp    DWORD PTR [edi]
  430bac:	cmp    edi,0xffffff9a
  430baf:	add    BYTE PTR [esi-0x33990012],bh
  430bb5:	add    BYTE PTR [eax-0xada800],al
  430bbb:	jl     0x430bbd
  430bbd:	and    DWORD PTR [ecx+0x0],0x42
  430bc1:	xchg   BYTE PTR [ebx+0x1683ffe2],al
  430bc7:	push   edx
  430bc9:	dec    ebp
  430bca:	(bad)  
  430bcb:	sti    
  430bcc:	cmp    edi,0xffffff86
  430bcf:	mov    DWORD PTR [eax+ebx*8-0x1],edx
  430bd3:	mov    ecx,0x83200000
  430bd8:	test   ch,dh
  430bda:	(bad)  
  430bdb:	sti    
  430bdc:	add    DWORD PTR [eax],0xffffffe2
  430bdf:	xor    DWORD PTR [edi],0xfffffffe
  430be2:	mov    DWORD PTR [ecx-0x1],esi
  430be5:	jmp    esi
  430be7:	int3   
  430be8:	sub    eax,eax
  430bea:	(bad)  
  430beb:	jnp    0x430b70
  430bed:	add    BYTE PTR [ebx+eax*4+0x5a000a9c],ah
  430bf4:	inc    DWORD PTR [eax]
  430bf6:	cld    
  430bf7:	add    dl,bh
  430bf9:	pop    es
  430bfa:	call   DWORD PTR [edi]
  430bfc:	add    DWORD PTR [eax],0xfffffff0
  430bff:	call   edx
  430c01:	cmp    eax,0xff005f00
  430c06:	ja     0x430c08
  430c08:	leave  
  430c09:	jb     0x430c0a
  430c0b:	push   eax
  430c0c:	add    BYTE PTR [eax],al
  430c0e:	cmp    edi,0x7ff1ddf
  430c14:	inc    DWORD PTR [eax]
  430c16:	out    dx,eax
  430c17:	push   DWORD PTR [edx]
  430c19:	jmp    FWORD PTR [bx+di-0x1]
  430c1d:	call   DWORD PTR [ecx]
  430c1f:	call   FWORD PTR [eax+0x4d]
  430c22:	xor    DWORD PTR [edx-0x33210001],0xfffffffb
  430c29:	mov    al,0xff
  430c2b:	test   DWORD PTR [eax],0x3a001e89
  430c31:	jecxz  0x430c32
  430c33:	add    edi,edi
  430c35:	call   DWORD PTR ds:0xff8c80ff
  430c3b:	hlt    
  430c3c:	dec    esp
  430c3e:	jne    0x430c3f
  430c40:	popf   
  430c41:	je     0x430c42
  430c43:	dec    esp
  430c45:	add    BYTE PTR [eax],cl
  430c47:	(bad)  
  430c48:	ds jle 0x430c4b
  430c4b:	nop
  430c4c:	inc    DWORD PTR [eax]
  430c4e:	add    ecx,esp
  430c50:	cmp    DWORD PTR [ebp-0x7c2777],esi
  430c56:	xchg   edi,eax
  430c57:	sub    ebx,0x73
  430c5a:	xor    DWORD PTR [esi+0x0],0xffffffff
  430c5e:	sub    eax,DWORD PTR [ebx-0x567ceeec]
  430c64:	(bad)  
  430c65:	(bad)  
  430c66:	call   0x13c216a
  430c6b:	jecxz  0x430c6c
  430c6d:	cmp    DWORD PTR [esi+0x0],0x2e
  430c71:	dec    esp
  430c72:	add    BYTE PTR [eax],cl
  430c74:	add    bh,bh
  430c76:	sar    edi,0xa8
  430c79:	inc    esp
  430c7a:	add    BYTE PTR [esp+ecx*8+0x0],ch
  430c7e:	jae    0x430c80
  430c80:	inc    BYTE PTR [ebp+0x83edff]
  430c86:	mov    ebp,0xa01ff
  430c8b:	cld    
  430c8c:	(bad)  
  430c8d:	(bad)  
  430c8e:	clc    
  430c8f:	push   DWORD PTR [ebp+0x58]
  430c92:	add    BYTE PTR [edi+0x0],ch
  430c95:	add    bh,bl
  430c97:	add    ah,dl
  430c99:	stc    
  430c9a:	add    bh,dh
  430c9c:	int3   
  430c9d:	call   FWORD PTR [ebp-0x7d]
  430ca0:	imul   edi,DWORD PTR [edx+0x0],0xffffffdb
  430ca4:	int3   
  430ca5:	add    dl,bh
  430ca7:	add    BYTE PTR [ebx+0x61],ah
  430caa:	dec    DWORD PTR [ebp-0x33c67c34]
  430cb0:	pop    esp
  430cb1:	loope  0x430cb2
  430cb3:	inc    edi
  430cb4:	add    bh,bh
  430cb6:	jns    0x430cb8
  430cb8:	ins    BYTE PTR es:[edi],dx
  430cb9:	aam    0x89
  430cbb:	dec    ecx
  430cbc:	cmp    edi,0x5b
  430cbf:	dec    DWORD PTR [ebp-0x5d]
  430cc2:	call   FWORD PTR [ebp-0x77]
  430cc5:	push   DWORD PTR [eax]
  430cc7:	inc    DWORD PTR [eax-0x4fffa]
  430ccd:	int3   
  430cce:	pop    eax
  430ccf:	call   FWORD PTR [ecx+0x78]
  430cd2:	push   ebx
  430cd4:	cmp    edi,0x16
  430cd7:	call   FWORD PTR [edx]
  430cd9:	inc    esp
  430cda:	inc    DWORD PTR [eax]
  430cdc:	add    bh,bh
  430cde:	mov    eax,ds:0x837660cc
  430ce3:	hlt    
  430ce4:	dec    DWORD PTR [ecx-0x60c766f]
  430cea:	call   DWORD PTR [edi+0x8489ff]
  430cf0:	rcr    ebx,0xff
  430cf3:	push   ds
  430cf4:	cmp    edi,0x22
  430cf7:	dec    DWORD PTR [edx-0xb20094]
  430cfd:	add    BYTE PTR [eax-0x1],dh
  430d00:	mov    al,ds:0x65ff73
  430d05:	mov    DWORD PTR [edi],edx
  430d07:	(bad)  
  430d08:	cmp    esp,eax
  430d0a:	int3   
  430d0b:	(bad)  
  430d0c:	dec    DWORD PTR [ecx+0x1c7b83db]
  430d12:	sbb    DWORD PTR [esi-0x1],0xffffffcc
  430d16:	(bad)  
  430d17:	jmp    ebx
  430d19:	sub    al,0x89
  430d1b:	pop    eax
  430d1c:	mov    DWORD PTR [ecx+0x33e3ff5a],ecx
  430d22:	push   DWORD PTR [edi+0x0]
  430d25:	inc    DWORD PTR [ecx]
  430d27:	call   FWORD PTR [ebx]
  430d29:	jecxz  0x430cf7
  430d2b:	jne    0x430cb6
  430d2d:	and    DWORD PTR [edi-0x156f01],0x3d
  430d34:	add    BYTE PTR [eax],al
  430d36:	or     eax,0x8937b3ff
  430d3b:	sahf   
  430d3c:	cmp    edi,0x14
  430d3f:	dec    DWORD PTR [esi]
  430d41:	popf   
  430d42:	add    bh,dl
  430d44:	cmp    edi,0x6c
  430d47:	inc    DWORD PTR [ecx-0x33540020]
  430d4d:	add    bh,bl
  430d4f:	inc    DWORD PTR [esi+esi*2-0xff1401]
  430d56:	cld    
  430d57:	(bad)  
  430d58:	cld    
  430d59:	cwde   
  430d5a:	add    bl,bh
  430d5c:	add    BYTE PTR [ebx+0x6286ffdf],al
  430d62:	adc    DWORD PTR [edx-0x410100],0x4b
  430d69:	cdq    
  430d6a:	mov    DWORD PTR [edx],edi
  430d6c:	add    BYTE PTR [ebx+0x5a3dff20],al
  430d72:	call   DWORD PTR [ecx]
  430d74:	cmp    edi,0x5f
  430d77:	call   FWORD PTR [ebx]
  430d79:	add    edi,edi
  430d7b:	pop    DWORD PTR [eax]
  430d7d:	inc    DWORD PTR [edx]
  430d7f:	jmp    DWORD PTR [eax-0x1c]
  430d82:	add    cl,ah
  430d84:	or     esp,0xffffffa3
  430d87:	(bad)  
  430d88:	sti    
  430d89:	les    eax,FWORD PTR [eax]
  430d8b:	in     eax,0xff
  430d8d:	add    cl,cl
  430d8f:	int3   
  430d90:	out    dx,eax
  430d91:	mov    eax,ds:0x7c83
  430d96:	(bad)  
  430d97:	call   esi
  430d99:	xor    DWORD PTR [ebx+0x2bff83ad],eax
  430d9f:	add    BYTE PTR [ecx+0x66],cl
  430da2:	jmp    DWORD PTR [ecx-0x1]
  430da5:	add    BYTE PTR [edi],ah
  430da7:	add    BYTE PTR [ecx],al
  430da9:	jbe    0x430d34
  430dab:	sbb    al,0x0
  430dad:	dec    eax
  430daf:	add    BYTE PTR [eax+0x2a],bh
  430db2:	jmp    FWORD PTR [eax-0x7d]
  430db5:	add    BYTE PTR [ebp+0x4bc7ff],dh
  430dbb:	pop    edx
  430dbc:	(bad)  
  430dbd:	inc    DWORD PTR [edi+edi*8+0x45]
  430dc1:	xchg   ebx,eax
  430dc2:	call   FWORD PTR [ecx-0x7d]
  430dc5:	(bad)  
  430dc6:	fld    QWORD PTR [eax]
  430dc8:	leave  
  430dc9:	lods   al,BYTE PTR ds:[esi]
  430dca:	inc    DWORD PTR [ecx+ecx*4]
  430dcd:	jmp    FWORD PTR [ebp-0x8b2201]
  430dd3:	in     al,dx
  430dd4:	(bad)  
  430dd5:	(bad)  
  430dd6:	cmp    ecx,DWORD PTR [ecx-0x790020e3]
  430ddc:	cmp    edi,0x71
  430ddf:	dec    DWORD PTR [esi-0x76]
  430de2:	inc    DWORD PTR [eax]
  430de4:	cmp    edi,0xffffff85
  430de7:	or     esp,0xffffffe9
  430dea:	inc    edx
  430dec:	add    bh,bh
  430dee:	fld    DWORD PTR [ebx-0x63ff435e]
  430df4:	(bad)  
  430df5:	(bad)  
  430df6:	cmp    al,0x0
  430df8:	stc    
  430df9:	jle    0x430dfb
  430dfb:	int3   
  430dfc:	int3   
  430dfd:	push   DWORD PTR [edx+0x0]
  430e00:	inc    eax
  430e01:	jb     0x430e03
  430e03:	(bad)  
  430e05:	add    bh,dh
  430e07:	jmp    FWORD PTR ds:0xccff7a
  430e0d:	add    DWORD PTR [edi],0x0
  430e10:	shl    DWORD PTR [edi-0x76330101],0x3f
  430e17:	call   ebp
  430e19:	fwait
  430e1a:	dec    DWORD PTR [edi]
  430e1c:	add    DWORD PTR [eax],0x61
  430e1f:	adc    DWORD PTR [edi],0x47
  430e22:	dec    DWORD PTR [esi]
  430e24:	add    bh,bh
  430e26:	and    edi,edi
  430e28:	call   0x3f0d47
  430e2d:	inc    DWORD PTR [ecx]
  430e2f:	int3   
  430e30:	push   esi
  430e31:	call   0x430d02
  430e36:	dec    ecx
  430e37:	xor    DWORD PTR [ecx-0xbbff7f],0xffffffff
  430e3e:	mov    esi,0xe3a0ff
  430e43:	and    BYTE PTR [ecx+0x628383ff],cl
  430e49:	bound  eax,QWORD PTR [eax]
  430e4b:	mov    cl,0xff
  430e4d:	dec    eax
  430e4f:	add    BYTE PTR [ecx+0xdb0030],al
  430e55:	(bad)  
  430e56:	(bad)  
  430e58:	dec    ebp
  430e59:	stos   DWORD PTR es:[edi],eax
  430e5a:	add    BYTE PTR [edi+edi*8],dh
  430e5d:	add    BYTE PTR [eax+0x3c500],al
  430e63:	jg     0x430e65
  430e65:	xor    DWORD PTR [ecx-0x1],0xffffff86
  430e69:	pusha  
  430e6a:	mov    edx,esi
  430e6c:	add    bh,bh
  430e6e:	cmc    
  430e6f:	jmp    DWORD PTR [esi]
  430e71:	(bad)  
  430e72:	call   DWORD PTR [eax+0xf483ff]
  430e78:	(bad)  
  430e79:	in     eax,dx
  430e7a:	add    al,cl
  430e7c:	int3   
  430e7d:	add    dl,cl
  430e7f:	jmp    DWORD PTR [ecx*2+0xff86ff]
  430e86:	add    edi,edi
  430e88:	jg     0x430e6f
  430e8a:	inc    DWORD PTR [ecx+ecx*4-0x70006101]
  430e91:	add    BYTE PTR [di],ch
  430e94:	add    bh,bh
  430e96:	call   FWORD PTR ss:[eax-0x24]
  430e9a:	add    BYTE PTR [eax-0x1],al
  430e9d:	jmp    FWORD PTR [eax+eax*1]
  430ea0:	pop    edx
  430ea1:	jecxz  0x430e26
  430ea3:	js     0x430ea5
  430ea5:	int3   
  430ea6:	mov    ebp,0xccea5983
  430eab:	inc    edx
  430eac:	cmp    edi,0x13
  430eaf:	mov    DWORD PTR [ecx+0x7aff6b],ebx
  430eb5:	add    cl,bl
  430eb7:	add    al,bl
  430eb9:	sbb    al,0x0
  430ebb:	mov    al,0x0
  430ebd:	add    BYTE PTR [edi+0xfb0183],dl
  430ec3:	addr16 int3 
  430ec5:	jmp    DWORD PTR [esp+ecx*8]
  430ec8:	in     al,dx
  430ec9:	xor    edi,edi
  430ecb:	pop    ds
  430ecc:	inc    DWORD PTR [ebx-0x7c62ff0e]
  430ed2:	dec    DWORD PTR [edi+edi*8-0x1]
  430ed6:	bswap  esp
  430ed8:	dec    eax
  430ed9:	dec    edx
  430eda:	jmp    FWORD PTR [edi]
  430edc:	inc    DWORD PTR [ebx-0x7cebffdf]
  430ee2:	dec    DWORD PTR [eax+eax*1-0x2c760a01]
  430ee9:	dec    ebx
  430eea:	add    BYTE PTR [eax-0x1],ah
  430eed:	inc    DWORD PTR [edx+0x0]
  430ef0:	inc    esi
  430ef1:	lods   eax,DWORD PTR ds:[esi]
  430ef2:	or     DWORD PTR [eax],0xffffffff
  430ef5:	int3   
  430ef6:	imul   edi,edi,0x2e007c58
  430efc:	dec    DWORD PTR [ecx+0x51b83f3]
  430f02:	int3   
  430f03:	rol    BYTE PTR [eax],1
  430f05:	(bad)  
  430f06:	mov    eax,0xa2300
  430f0b:	pop    esi
  430f0c:	add    DWORD PTR [ebx+0x695c007d],0x0
  430f13:	inc    BYTE PTR [eax]
  430f15:	mov    DWORD PTR [edi+0xbd54ff],esi
  430f1b:	or     eax,0xe2ffff
  430f20:	data16 jne 0x430f22
  430f23:	mov    cs,esp
  430f25:	push   ecx
  430f27:	inc    ebx
  430f29:	add    edi,edi
  430f2b:	sub    bh,bh
  430f2d:	add    BYTE PTR [edi+edi*8-0x90b5],dl
  430f34:	inc    DWORD PTR [eax]
  430f36:	pop    ebp
  430f37:	jmp    FWORD PTR [edx-0x527ca5]
  430f3d:	add    cl,dh
  430f3f:	sbb    DWORD PTR ds:0x8382ff3d,0xffffffff
  430f46:	and    ah,cl
  430f48:	(bad)  
  430f49:	loop   0x430f4b
  430f4b:	call   0x31e8:0x4eff00
  430f52:	int3   
  430f53:	adc    bh,bh
  430f55:	cmp    DWORD PTR [eax-0x7d],0xffffffa7
  430f59:	and    bh,bh
  430f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f5c:	(bad)  
  430f5d:	dec    DWORD PTR [ebp-0x6afd34]
  430f63:	ins    BYTE PTR es:[edi],dx
  430f64:	cmp    edi,0x38
  430f67:	add    ch,cl
  430f69:	out    0x0,al
  430f6b:	fwait
  430f6c:	inc    DWORD PTR [eax]
  430f6e:	(bad)  
  430f6f:	int3   
  430f70:	sub    BYTE PTR [ebp-0x2d01],bh
  430f76:	inc    esi
  430f77:	inc    DWORD PTR [eax-0x80]
  430f7a:	jmp    DWORD PTR [edx-0x1]
  430f7d:	(bad)  
  430f7e:	jns    0x430f7f
  430f80:	xchg   BYTE PTR [edx-0x1],dh
  430f83:	dec    DWORD PTR gs:[ecx-0x617e0040]
  430f8a:	inc    DWORD PTR [eax-0xfd0000]
  430f90:	cmp    ch,BYTE PTR [ebp+0xcc47ff]
  430f96:	fs add bl,al
  430f99:	mov    ecx,0xff34ff
  430f9e:	adc    BYTE PTR [eax],al
  430fa0:	push   eax
  430fa1:	add    DWORD PTR [ecx+0x66ff0003],ecx
  430fa7:	jmp    FWORD PTR [ecx]
  430fa9:	loop   0x430f77
  430fab:	outs   dx,DWORD PTR ds:[esi]
  430fac:	dec    DWORD PTR [ecx+0x79f7ff72]
  430fb2:	inc    DWORD PTR [ecx]
  430fb4:	(bad)  
  430fb5:	inc    DWORD PTR [edx]
  430fb7:	xor    DWORD PTR [ebp+0x70],0x0
  430fbb:	jmp    0xba1f:0x8f0089
  430fc2:	int3   
  430fc3:	cmp    al,0xcc
  430fc5:	int3   
  430fc6:	mov    ebx,0xffc0b1ff
  430fcb:	push   edi
  430fcc:	add    DWORD PTR [eax],0x73
  430fcf:	call   DWORD PTR [ecx+0x3d]
  430fd2:	call   FWORD PTR [edx]
  430fd4:	(bad)  
  430fd5:	jmp    DWORD PTR [edx+0x5d083]
  430fdb:	adc    al,0xff
  430fdd:	add    BYTE PTR [edi-0x4e0d00],al
  430fe3:	or     edi,edi
  430fe5:	(bad)  
  430fe6:	jnp    0x430fe8
  430fe8:	xchg   esi,eax
  430fe9:	fwait
  430fea:	add    BYTE PTR [edi+0x0],ch
  430fed:	jmp    FWORD PTR [eax+eax*1]
  430ff0:	mov    ebx,0x899000e8
  430ff5:	mov    DWORD PTR [ecx+0x0],ebx
  430ff8:	inc    esp
  430ff9:	inc    eax
  430ffa:	cmp    edx,0x0
  430ffd:	call   FWORD PTR [eax]
  430fff:	jmp    FWORD PTR [eax-0x33a67c80]
  431005:	add    BYTE PTR [ebx],ch
  431007:	add    BYTE PTR [edi-0x5300d7],dl
  43100d:	inc    ecx
  43100f:	mov    DWORD PTR [esi+edi*1],edx
  431012:	dec    DWORD PTR [eax+eax*1+0x7a000000]
  431019:	xchg   esp,eax
  43101a:	dec    ebx
  43101c:	add    BYTE PTR [eax],al
  43101e:	daa    
  43101f:	inc    DWORD PTR [ebx+eax*2]
  431022:	add    BYTE PTR [ebx-0x1],ch
  431025:	(bad)  
  431026:	fiadd  WORD PTR [ebx-0x276aca7]
  43102c:	(bad)  
  43102d:	(bad)  
  43102e:	out    dx,al
  43102f:	xor    DWORD PTR [edx],0xffffffb5
  431032:	jmp    DWORD PTR ds:0xff09ffcc
  431038:	mov    BYTE PTR [ecx+0x0],dl
  43103b:	idiv   edi
  43103d:	dec    DWORD PTR [edi+edi*8-0x40ff6c6b]
  431044:	inc    DWORD PTR [ebx+0x5b76ffcf]
  43104a:	push   DWORD PTR [eax-0x777c7d]
  431050:	xor    DWORD PTR ds:0xccffa683,0x3
  431057:	inc    DWORD PTR [esi+0x28]
  43105a:	jmp    esp
  43105c:	add    bh,bh
  43105e:	cwde   
  43105f:	inc    ebp
  431061:	in     eax,dx
  431062:	inc    eax
  431064:	add    bh,bh
  431066:	jmp    0x431067
  431068:	fnstsw WORD PTR [eax-0x7c00fe34]
  43106e:	pop    ecx
  43106f:	mov    DWORD PTR [ebx+0x1c00b9],esi
  431075:	int3   
  431076:	ret    
  431077:	xor    DWORD PTR [ebx-0x9],0x0
  43107b:	jecxz  0x431000
  43107d:	add    bl,bl
  43107f:	jmp    FWORD PTR [ebx]
  431081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431082:	jmp    FWORD PTR [edx]
  431084:	inc    DWORD PTR [ebx-0x26ae337b]
  43108a:	call   FWORD PTR [edx-0x97ff34]
  431090:	mov    esi,0x83dcfff6
  431095:	inc    ebx
  431097:	int3   
  431098:	pop    ecx
  431099:	push   ds
  43109a:	add    BYTE PTR [ebx-0x1],al
  43109d:	add    BYTE PTR [ebx-0x1],ah
  4310a0:	cdq    
  4310a1:	idiv   bh
  4310a3:	add    eax,DWORD PTR [eax]
  4310a5:	call   FWORD PTR [esi-0x1]
  4310a8:	js     0x431089
  4310aa:	cmp    DWORD PTR [ecx],0xffffffff
  4310ad:	call   FWORD PTR [edi-0xd38334]
  4310b3:	dec    eax
  4310b4:	(bad)  
  4310b5:	jmp    FWORD PTR [ecx-0x761b0700]
  4310bb:	out    0xcc,al
  4310bd:	push   esp
  4310bf:	add    BYTE PTR [ebx+ecx*2-0xa400],ah
  4310c6:	clc    
  4310c7:	call   DWORD PTR [ebx]
  4310c9:	adc    eax,0xff004400
  4310ce:	push   ds
  4310cf:	adc    ebx,0xffffff81
  4310d2:	inc    ebp
  4310d4:	inc    DWORD PTR [eax]
  4310d6:	out    dx,eax
  4310d7:	add    dh,ch
  4310d9:	pusha  
  4310da:	add    BYTE PTR [edx-0x1],bl
  4310dd:	call   esp
  4310df:	sub    ebp,0x2a
  4310e2:	or     DWORD PTR [eax-0x77],0x0
  4310e6:	xor    eax,0x83463283
  4310eb:	pop    ecx
  4310ec:	inc    DWORD PTR [eax]
  4310ee:	pop    eax
  4310ef:	(bad)  
  4310f0:	out    dx,eax
  4310f1:	stc    
  4310f2:	add    BYTE PTR [ebx],ah
  4310f4:	dec    esp
  4310f6:	aaa    
  4310f7:	jmp    DWORD PTR [eax+0x1e]
  4310fa:	add    BYTE PTR [eax],dl
  4310fc:	inc    DWORD PTR [eax]
  4310fe:	sub    si,0x36
  431102:	int3   
  431103:	mov    ecx,0xffeeccff
  431108:	mov    ah,0x17
  43110a:	int3   
  43110b:	xchg   ebp,eax
  43110c:	int3   
  43110d:	sbb    DWORD PTR [ecx-0x391b00],0x36
  431114:	add    bh,bh
  431116:	into   
  431117:	cmp    DWORD PTR [eax+0x53],0xffffff83
  43111b:	out    0xff,eax
  43111d:	jmp    FWORD PTR [eax]
  43111f:	add    dh,dh
  431121:	ror    ah,0xdd
  431124:	mov    DWORD PTR [eax],eax
  431126:	cdq    
  431127:	jmp    DWORD PTR [esi]
  431129:	scas   al,BYTE PTR es:[edi]
  43112a:	adc    DWORD PTR [edx+0x17ff83],0x10
  431131:	loope  0x431132
  431133:	sub    edi,edi
  431135:	mov    DWORD PTR [ebx],eax
  431137:	call   FWORD PTR [edi]
  431139:	mov    esp,0xcc003500
  43113e:	or     edi,edi
  431140:	test   DWORD PTR ds:0xff830000,ebx
  431146:	mov    bl,0xff
  431148:	movsx  eax,BYTE PTR [ebx+0xeff0047]
  43114f:	(bad)  
  431150:	jmp    0x7800:0xff44cc18
  431157:	call   FWORD PTR [esi+0x7b]
  43115a:	add    BYTE PTR [ebx-0x7c590001],bl
  431160:	cmp    DWORD PTR [ecx],ebx
  431162:	sbb    DWORD PTR [esi+0x27ffff],0x63
  431169:	ds (bad) 
  43116b:	cmp    edi,edi
  43116d:	and    DWORD PTR [edi+edi*8+0x6c],0xffffffba
  431172:	jmp    FWORD PTR [ebx]
  431174:	add    bh,bh
  431176:	sbb    al,0xff
  431178:	or     al,cl
  43117a:	dec    DWORD PTR [ebp-0x1]
  43117d:	dec    DWORD PTR [eax]
  43117f:	inc    DWORD PTR ds:0xccc7891b
  431185:	add    BYTE PTR [eax+eax*1-0x6a00006a],bl
  43118c:	inc    DWORD PTR [eax]
  43118e:	loop   0x431190
  431190:	imul   eax,DWORD PTR [bx+si],0x52
  431194:	cmp    edi,0x72
  431197:	add    BYTE PTR [edi+0x30],al
  43119a:	add    bl,ah
  43119c:	int3   
  43119d:	add    BYTE PTR [edi-0x7c36537d],dl
  4311a3:	stc    
  4311a4:	mov    edi,edi
  4311a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4311a7:	(bad)  
  4311a8:	mov    edx,0x890affc7
  4311ad:	add    BYTE PTR [ebx+0x61bf00],dl
  4311b3:	(bad)  
  4311b5:	mov    DWORD PTR [eax-0x1],eax
  4311b8:	pop    es
  4311b9:	jno    0x431187
  4311bb:	mov    dl,0x89
  4311bd:	add    BYTE PTR [esi+0x0],dl
  4311c0:	aad    0x70
  4311c2:	add    BYTE PTR [ecx+0x5a00ff],ch
  4311c8:	das    
  4311c9:	or     bh,bh
  4311cb:	ins    BYTE PTR es:[edi],dx
  4311cc:	dec    esp
  4311ce:	xchg   edx,eax
  4311cf:	(bad)  
  4311d0:	jge    0x431184
  4311d2:	adc    DWORD PTR [esi-0x1],0xffffffff
  4311d6:	into   
  4311d7:	add    ch,dl
  4311d9:	mov    BYTE PTR [eax],0x2
  4311dc:	(bad)  
  4311dd:	inc    DWORD PTR [edx-0x77]
  4311e0:	loopne 0x43125f
  4311e2:	jmp    DWORD PTR [edi]
  4311e4:	add    BYTE PTR [ecx+0x6dd9001a],cl
  4311ea:	mov    eax,esp
  4311ec:	add    bh,bh
  4311ee:	test   DWORD PTR [eax],0x27ff395f
  4311f4:	add    BYTE PTR [ecx+0xdf9000f],cl
  4311fa:	push   eax
  4311fc:	dec    esp
  4311fe:	jbe    0x431183
  431200:	call   0xd683:0xff49ffdc
  431207:	call   FWORD PTR [eax+0x9300aa]
  43120d:	(bad)  
  43120e:	mov    ebp,0xff537283
  431213:	fadd   QWORD PTR [eax]
  431215:	int3   
  431216:	pop    ebx
  431217:	mov    DWORD PTR [esi+edx*1],esp
  43121a:	mov    DWORD PTR [ebx+eax*4+0x29001b83],edi
  431221:	sbb    DWORD PTR [eax],eax
  431223:	push   es
  431224:	mov    DWORD PTR [eax],eax
  431226:	loop   0x431227
  431228:	ins    DWORD PTR es:[edi],dx
  431229:	in     al,0xff
  43122b:	sub    eax,0xbbffff
  431230:	pushf  
  431231:	pop    es
  431232:	inc    esp
  431234:	add    DWORD PTR [ebx-0x3756ff62],0xffffffff
  43123b:	xor    al,0x83
  43123d:	add    BYTE PTR [ebx],bl
  43123f:	int3   
  431240:	cmp    al,0x6c
  431242:	call   DWORD PTR [edi-0x270001]
  431248:	outs   dx,BYTE PTR ds:[esi]
  431249:	mov    edx,0xff00c0ff
  43124e:	dec    esp
  43124f:	add    BYTE PTR [edi-0x33e2ffb3],al
  431255:	add    BYTE PTR [ebx+0x0],al
  431258:	xchg   ebx,eax
  431259:	push   ss
  43125a:	int3   
  43125b:	outs   dx,BYTE PTR ds:[esi]
  43125c:	cmp    edi,0x7c
  43125f:	call   FWORD PTR [ebx]
  431261:	jbe    0x431262
  431263:	push   0xe500ff
  431268:	daa    
  431269:	cmp    edi,0x4a00ff9a
  43126f:	(bad)  
  431270:	fucomip st,st(5)
  431272:	jmp    FWORD PTR [ebp+0x0]
  431275:	add    al,cl
  431277:	int3   
  431278:	shl    BYTE PTR [edx-0x667d],0xc
  43127f:	jmp    ebp
  431281:	and    edi,edi
  431283:	xchg   ebx,eax
  431284:	int3   
  431285:	call   DWORD PTR [eax-0xbaef01]
  43128b:	xor    al,0xff
  43128d:	add    BYTE PTR [ebx-0x7c668a00],bh
  431293:	repz inc DWORD PTR [eax]
  431296:	scas   al,BYTE PTR es:[edi]
  431297:	add    BYTE PTR [edx],al
  431299:	push   ds
  43129a:	jmp    FWORD PTR [edx-0x76c40001]
  4312a0:	ret    
  4312a1:	mov    dl,0x0
  4312a3:	sub    al,0x0
  4312a5:	int3   
  4312a6:	push   eax
  4312a7:	jmp    FWORD PTR [edi]
  4312a9:	dec    ebx
  4312aa:	add    BYTE PTR [edi-0x7c070100],bl
  4312b0:	or     eax,0xffc2fff8
  4312b5:	dec    ebx
  4312b7:	add    BYTE PTR [ebx-0x1d002d],ch
  4312bd:	add    BYTE PTR [ebp-0x1],al
  4312c0:	cmp    eax,0x89e3ffcd
  4312c5:	xor    DWORD PTR [ebp-0x1],0x7f
  4312c9:	cmp    edi,0xdbcc832a
  4312cf:	add    bh,ah
  4312d1:	in     eax,dx
  4312d2:	add    BYTE PTR [ebx],cl
  4312d4:	inc    DWORD PTR [eax]
  4312d6:	rol    BYTE PTR [eax],cl
  4312d8:	rol    BYTE PTR [edi+0x0],cl
  4312db:	push   ecx
  4312dc:	add    bh,bh
  4312de:	lods   al,BYTE PTR ds:[esi]
  4312df:	int3   
  4312e0:	xor    ebp,DWORD PTR [ecx]
  4312e2:	add    BYTE PTR [eax+0x2f00ff],bh
  4312e8:	test   ebx,0xff001eff
  4312ee:	stos   BYTE PTR es:[edi],al
  4312ef:	int3   
  4312f0:	sub    ebp,DWORD PTR [edx-0x7cfffb01]
  4312f6:	mov    eax,0x83c419ff
  4312fb:	sbb    eax,DWORD PTR [eax]
  4312fd:	dec    DWORD PTR [esp+ecx*8-0x37]
  431301:	adc    eax,0x89005200
  431306:	mov    dl,0x0
  431308:	mov    bh,0x90
  43130a:	add    BYTE PTR [eax-0x280100],cl
  431310:	add    BYTE PTR ds:0xffffcaff,cl
  431316:	mov    ebp,0xffc901ff
  43131b:	add    al,0x89
  43131d:	int3   
  43131e:	xlat   BYTE PTR ds:[ebx]
  43131f:	int3   
  431320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431321:	ins    DWORD PTR es:[edi],dx
  431322:	add    DWORD PTR [esi],0xffffffcc
  431325:	call   DWORD PTR [ebx-0xe3fb01]
  43132b:	lods   eax,DWORD PTR ds:[esi]
  43132c:	add    bh,bh
  43132e:	fiadd  WORD PTR [ebx-0x4765453]
  431334:	int3   
  431335:	sbb    DWORD PTR [esi],0x0
  431338:	js     0x43131d
  43133a:	and    DWORD PTR [ebx],0xffffffff
  43133d:	inc    DWORD PTR [edx+0x0]
  431340:	add    bl,BYTE PTR [eax-0x7600e001]
  431346:	ins    DWORD PTR es:[edi],dx
  431347:	add    cl,dh
  431349:	das    
  43134a:	push   DWORD PTR [edx]
  43134c:	(bad)  
  43134d:	call   FWORD PTR [edi+0x0]
  431350:	add    BYTE PTR [ecx+0xffc9ff],0x77
  431357:	mov    DWORD PTR [edx],edi
  431359:	and    al,BYTE PTR [eax]
  43135b:	pop    ss
  43135c:	or     esp,0x9
  43135f:	jmp    DWORD PTR [ebx-0x33b00080]
  431365:	(bad)  
  431366:	mov    ebp,0x89de74ff
  43136b:	int3   
  43136c:	add    BYTE PTR [eax],al
  43136e:	dec    ebp
  43136f:	jmp    FWORD PTR [ebp-0xc500ee]
  431375:	mov    esp,ebp
  431377:	mov    DWORD PTR [edi+0xc],esp
  43137a:	(bad)  
  43137b:	jns    0x43137d
  43137d:	dec    DWORD PTR [edi+edi*8+0x5f]
  431381:	rol    DWORD PTR [ebx-0x7b00ff2d],cl
  431387:	add    ah,al
  431389:	loop   0x431357
  43138b:	sbb    edi,edi
  43138d:	dec    DWORD PTR [ecx]
  43138f:	jmp    DWORD PTR [eax]
  431391:	add    BYTE PTR [eax],0x89
  431394:	inc    DWORD PTR [ebx-0x75357c73]
  43139a:	(bad)  
  43139b:	aas    
  43139c:	add    BYTE PTR [eax],al
  43139e:	xlat   BYTE PTR ds:[ebx]
  43139f:	add    ch,cl
  4313a1:	call   0xff40:0x83a000
  4313a8:	or     DWORD PTR [ebx+eax*4+0x4e],eax
  4313ac:	add    BYTE PTR [eax],al
  4313ae:	inc    DWORD PTR [eax]
  4313b0:	imul   ebp,DWORD PTR [ebp-0x1],0x7d
  4313b4:	add    BYTE PTR [eax],al
  4313b6:	mov    bh,bh
  4313b8:	rcr    BYTE PTR [esi-0x7cda01],0x3d
  4313bf:	int3   
  4313c0:	test   DWORD PTR [esi-0x1],ebx
  4313c3:	retf   
  4313c4:	add    BYTE PTR [eax],al
  4313c6:	sbb    DWORD PTR [eax],eax
  4313c8:	sbb    esi,edx
  4313ca:	add    BYTE PTR [eax],ch
  4313cc:	add    bh,bh
  4313ce:	add    DWORD PTR [eax],0x58ff9605
  4313d4:	(bad)  
  4313d5:	(bad)  
  4313d6:	jg     0x4313d7
  4313d8:	pusha  
  4313d9:	mov    esi,0xccffb1ff
  4313de:	pop    eax
  4313df:	inc    DWORD PTR [ebx+eax*2-0x100]
  4313e6:	test   eax,0xffee59ff
  4313eb:	pop    edi
  4313ec:	inc    DWORD PTR [eax]
  4313ee:	mov    BYTE PTR [eax],al
  4313f0:	jecxz  0x43137a
  4313f2:	add    BYTE PTR [ebp-0x7ce90000],dl
  4313f8:	in     al,dx
  4313f9:	cdq    
  4313fa:	int3   
  4313fb:	das    
  4313fc:	dec    esp
  4313fe:	sub    eax,0xfff82200
  431403:	je     0x431404
  431405:	xor    ecx,0xffffffff
  431408:	je     0x4313bc
  43140a:	int3   
  43140b:	mov    edi,0xfff8cc00
  431410:	push   ebp
  431411:	into   
  431412:	jmp    DWORD PTR [eax]
  431414:	add    bh,bh
  431416:	and    al,0xcc
  431418:	into   
  431419:	mov    esi,0x89ff4200
  43141e:	fadd   QWORD PTR [eax]
  431420:	jno    0x4313e1
  431422:	mov    DWORD PTR [esi],ebx
  431424:	inc    DWORD PTR [ebx-0x28377660]
  43142a:	add    BYTE PTR [ecx-0x7ccc0001],dh
  431430:	pop    ecx
  431431:	cmc    
  431432:	dec    edi
  431434:	inc    DWORD PTR [ebx-0x7fdb7c2f]
  43143a:	add    BYTE PTR [edx-0x1],dh
  43143d:	mov    DWORD PTR [edi+edi*8+0x47],eax
  431441:	mov    eax,ds:0xffff6789
  431446:	xchg   ecx,eax
  431447:	push   DWORD PTR [ebx-0x7f]
  43144a:	add    ah,bl
  43144c:	add    BYTE PTR [ebx-0x721500b1],al
  431452:	int3   
  431453:	ja     0x431454
  431455:	call   DWORD PTR [edx-0x1]
  431458:	mov    DWORD PTR [ecx],edi
  43145a:	push   DWORD PTR [ebx+0x0]
  43145d:	add    dh,bl
  43145f:	call   DWORD PTR [esi-0x9e7c10]
  431465:	add    ah,bh
  431467:	sub    DWORD PTR [ebp-0x34],0xffffff83
  43146b:	xor    eax,0xf1ffcc
  431470:	xor    eax,0xccd5ffc4
  431475:	add    BYTE PTR [eax-0x1],bl
  431478:	jbe    0x431416
  43147a:	cmp    DWORD PTR [esi],0xffffff83
  43147d:	jmp    FWORD PTR [edx+0xcc9200]
  431483:	(bad)  
  431484:	jmp    0x617e9803
  431489:	add    BYTE PTR [eax],al
  43148b:	int3   
  43148c:	mov    ecx,0xbcefffbb
  431491:	add    bh,bh
  431493:	mov    edx,edx
  431495:	mov    bh,bh
  431497:	iret   
  431498:	fcos   
  43149a:	int3   
  43149b:	(bad)  
  43149c:	fdiv   DWORD PTR [ebx+0x0]
  43149f:	lds    edx,FWORD PTR [edi]
  4314a1:	mov    DWORD PTR [eax],eax
  4314a3:	dec    ebp
  4314a5:	mov    bh,bh
  4314a7:	mov    ch,0xce
  4314a9:	int3   
  4314aa:	inc    DWORD PTR [eax]
  4314ac:	sub    ch,BYTE PTR [ecx+ecx*4+0x11]
  4314b0:	or     eax,DWORD PTR [ebx-0x20b60034]
  4314b6:	inc    DWORD PTR [esi-0x7b]
  4314b9:	inc    DWORD PTR [ebx-0xc4e01]
  4314bf:	pushf  
  4314c0:	xlat   BYTE PTR ds:[ebx]
  4314c1:	(bad)  
  4314c2:	inc    DWORD PTR [ebx-0x3d000a62]
  4314c8:	mov    ecx,0x7800ffff
  4314cd:	ud0    ebp,DWORD PTR ds:0xffffcce7
  4314d4:	pop    ds
  4314d5:	push   edx
  4314d6:	add    BYTE PTR [ecx+ecx*8+0x3f0000ff],ah
  4314dd:	push   ebp
  4314de:	xor    edi,0x2f
  4314e1:	cmp    edi,0xffffff89
  4314e4:	ja     0x43155c
  4314e6:	(bad)  
  4314e7:	jl     0x43146b
  4314e9:	mov    DWORD PTR [eax],eax
  4314eb:	add    BYTE PTR [esp+esi*2-0x1],dl
  4314ef:	jmp    0x4314b6
  4314f1:	int3   
  4314f2:	add    DWORD PTR [eax],0x6e
  4314f5:	imul   eax,DWORD PTR [eax],0x3c
  4314f8:	mov    dl,0x0
  4314fa:	inc    DWORD PTR [ebx+0x6cffd621]
  431500:	mov    ds:0xb889ff00,eax
  431505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431506:	add    bl,bl
  431508:	xchg   ecx,eax
  431509:	add    BYTE PTR [eax],al
  43150b:	call   DWORD PTR [esi+0x68]
  43150e:	add    BYTE PTR [ebp-0xff00f0],ah
  431514:	mov    bh,BYTE PTR [eax+0xd245ff]
  43151a:	int3   
  43151b:	add    cl,ah
  43151d:	jae    0x43151f
  43151f:	les    ebp,FWORD PTR [ebp-0x1]
  431522:	inc    DWORD PTR [ebx+0x73cc9cb0]
  431528:	or     eax,0x4d000000
  43152d:	mov    ds:0xe53a00,al
  431532:	mov    edi,edi
  431534:	push   0xd51ff6c
  431539:	(bad)  
  43153a:	inc    DWORD PTR [eax]
  43153c:	cmp    eax,0x131600db
  431541:	dec    DWORD PTR [ecx+0xc9fa00]
  431547:	xchg   ebx,eax
  431548:	or     eax,0x9d83ffff
  43154d:	retf   0x6b83
  431550:	loop   0x431551
  431552:	dec    esp
  431554:	dec    edi
  431555:	sub    al,0xff
  431557:	das    
  431558:	(bad)  
  431559:	inc    DWORD PTR [ebx-0x334c7c01]
  43155f:	addr16 mov bh,0x0
  431562:	(bad)  
  431563:	(bad)  
  431564:	out    dx,eax
  431565:	or     eax,DWORD PTR [ebx+0x2fdd]
  43156b:	push   DWORD PTR [edi]
  43156d:	test   eax,0xe859ff
  431572:	mov    edi,edi
  431574:	mov    ebp,0x1d618381
  431579:	int3   
  43157a:	(bad)  
  43157b:	call   DWORD PTR [ebx+0x1dc300ee]
  431581:	inc    DWORD PTR [ebx-0x33e8c700]
  431587:	dec    esp
  431588:	idiv   edi
  43158a:	mov    DWORD PTR [eax],eax
  43158c:	ja     0x43154e
  43158e:	inc    DWORD PTR [ecx+0x7c]
  431591:	inc    DWORD PTR [ebx+0x29e00]
  431597:	adc    eax,ebx
  431599:	(bad)  
  43159a:	(bad)  
  43159b:	(bad)  
  43159c:	fnsave [eax-0x1]
  43159f:	mov    ds:0xffff002f,eax
  4315a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315a5:	ja     0x4315a6
  4315a7:	addr16 dec esp
  4315a9:	int3   
  4315aa:	add    bh,bh
  4315ac:	data16 and bh,bh
  4315af:	pushf  
  4315b0:	in     eax,0xff
  4315b2:	add    bh,bh
  4315b4:	das    
  4315b5:	imul   edi,edi,0x83ffdf42
  4315bb:	add    BYTE PTR [edx-0x63],dl
  4315be:	adc    DWORD PTR [ebx+0x77],0xffffffff
  4315c2:	add    DWORD PTR [ebx+0x7ffee55],0xffffffc4
  4315c9:	(bad)  
  4315ca:	inc    DWORD PTR [eax]
  4315cc:	addr16 xchg edi,eax
  4315ce:	add    ch,bh
  4315d0:	xchg   esp,eax
  4315d1:	(bad)  
  4315d2:	inc    DWORD PTR [eax]
  4315d4:	sub    ch,al
  4315d6:	mov    DWORD PTR ds:0x8300ffb2,eax
  4315dc:	mov    ch,0x6d
  4315de:	(bad)  
  4315df:	mov    ecx,0xccffcc5c
  4315e4:	in     eax,dx
  4315e5:	retf   0x7800
  4315e8:	adc    edi,edi
  4315ea:	int3   
  4315eb:	add    BYTE PTR [ecx+0x5700ff31],dl
  4315f1:	cmp    edi,0xffffff83
  4315f4:	jp     0x431662
  4315f6:	call   FWORD PTR [esi+0x32]
  4315f9:	add    bh,bh
  4315fb:	dec    DWORD PTR [esp+esi*1-0x1]
  4315ff:	xlat   BYTE PTR ds:[ebx]
  431600:	test   eax,0x4800ff00
  431605:	add    eax,0x890cd083
  43160a:	add    ah,cl
  43160c:	gs push 0xffffffff
  43160f:	cmp    al,0xb2
  431611:	inc    DWORD PTR [ebx-0x7c491601]
  431617:	in     al,0xe
  431619:	inc    DWORD PTR [eax]
  43161b:	int3   
  43161c:	push   esp
  43161d:	dec    WORD PTR [eax+ebx*1]
  431621:	add    DWORD PTR [eax],0xffffffcc
  431624:	test   al,0xb3
  431626:	int3   
  431627:	sub    BYTE PTR [edx],cl
  431629:	inc    DWORD PTR [ebx+0x8e3600]
  43162f:	xchg   ebp,eax
  431630:	outs   dx,BYTE PTR ds:[esi]
  431631:	cmp    edi,0x0
  431634:	lods   eax,DWORD PTR ds:[esi]
  431635:	iret   
  431636:	dec    esi
  431638:	xchg   edi,edi
  43163a:	(bad)  
  43163b:	dec    DWORD PTR [ecx-0x4d]
  43163e:	(bad)  
  43163f:	in     al,dx
  431640:	test   BYTE PTR [ecx+0x22e3ff00],0x0
  431647:	xor    eax,esi
  431649:	add    bh,bh
  43164b:	add    bh,bl
  43164d:	sbb    bh,bh
  43164f:	sti    
  431650:	dec    edi
  431651:	add    bh,bh
  431653:	and    ecx,0xffffff8c
  431656:	add    BYTE PTR [eax],bl
  431658:	adc    edi,edi
  43165a:	(bad)  
  43165b:	inc    DWORD PTR [ebp+0x6e49cc9f]
  431661:	dec    DWORD PTR [ecx+0xd7c7ff]
  431667:	scas   eax,DWORD PTR es:[edi]
  431668:	pop    esi
  431669:	inc    DWORD PTR [eax]
  43166b:	mov    DWORD PTR [eax+esi*2],eax
  43166e:	int3   
  43166f:	push   ecx
  431670:	cli    
  431671:	inc    DWORD PTR [eax]
  431673:	inc    DWORD PTR [ebx+0x50]
  431676:	call   FWORD PTR [esi-0xffff37]
  43167c:	fdiv   DWORD PTR [edi-0x1]
  43167f:	iret   
  431680:	data16 add BYTE PTR [eax],al
  431683:	dec    DWORD PTR [ebx-0x70d20083]
  431689:	add    DWORD PTR [ebx-0x219001],0xffffffb7
  431690:	out    dx,al
  431691:	int3   
  431692:	add    bh,bh
  431694:	test   DWORD PTR [ebp-0x77],eax
  431697:	daa    
  431698:	popa   
  431699:	inc    DWORD PTR [ebx-0xacaf00]
  43169f:	dec    eax
  4316a0:	lods   eax,DWORD PTR ds:[esi]
  4316a1:	add    bh,bh
  4316a3:	add    BYTE PTR [eax],bl
  4316a5:	outs   dx,BYTE PTR ds:[esi]
  4316a6:	jmp    DWORD PTR [edx]
  4316a8:	bound  eax,QWORD PTR [eax]
  4316aa:	int3   
  4316ab:	inc    DWORD PTR [edi]
  4316ad:	idiv   bh
  4316af:	push   ebp
  4316b0:	pop    ss
  4316b1:	add    BYTE PTR [eax],al
  4316b3:	inc    ebx
  4316b5:	or     al,BYTE PTR [eax]
  4316b7:	int    0x78
  4316b9:	inc    DWORD PTR [eax]
  4316bb:	and    ebp,0xffffffac
  4316be:	and    ebp,0x28
  4316c1:	or     DWORD PTR [ecx-0xe88400],0xffffffe5
  4316c8:	add    bh,bh
  4316ca:	inc    DWORD PTR [ebx-0x590084a4]
  4316d0:	stos   BYTE PTR es:[edi],al
  4316d1:	(bad)  
  4316d2:	(bad)  
  4316d3:	dec    ebx
  4316d5:	add    bh,bh
  4316d7:	xchg   esi,eax
  4316d8:	mov    ecx,0x9dffffff
  4316dd:	mov    bh,0x83
  4316df:	adc    BYTE PTR [eax],ah
  4316e1:	add    bh,bh
  4316e3:	mov    DWORD PTR [ebp+0x4de8ff4c],edi
  4316e9:	add    BYTE PTR [eax],al
  4316eb:	mov    DWORD PTR [ecx+0x40],esp
  4316ee:	add    BYTE PTR [eax+0x4a],al
  4316f1:	cmp    edi,0xffffffcc
  4316f4:	sbb    DWORD PTR [ebp+0x0],eax
  4316f7:	cmp    eax,0xff00ffc2
  4316fc:	sbb    edx,DWORD PTR [edx+0xfc0889]
  431702:	(bad)  
  431703:	dec    DWORD PTR [esi+ebp*8+0x9b2e83]
  43170a:	(bad)  
  43170b:	(bad)  
  43170c:	cmp    eax,0x240ff3b
  431711:	int3   
  431712:	add    ah,cl
  431714:	(bad)  
  431715:	pop    esi
  431716:	add    bh,cl
  431718:	push   0xffffffff
  43171a:	add    BYTE PTR [eax],al
  43171c:	jp     0x4316c0
  43171e:	(bad)  
  43171f:	mov    ebp,0xffffffd9
  431724:	jne    0x431716
  431726:	call   DWORD PTR [eax-0x7c76ff4c]
  43172c:	outs   dx,DWORD PTR ds:[esi]
  43172d:	add    BYTE PTR es:[edx-0x6f],cl
  431731:	mov    DWORD PTR [eax],eax
  431733:	add    bh,dl
  431735:	xlat   BYTE PTR ds:[ebx]
  431736:	add    BYTE PTR [ebx+ecx*1+0x0],dh
  43173a:	(bad)  
  43173b:	call   FWORD PTR [edx-0x4b]
  43173e:	add    BYTE PTR [ecx-0xff0100],bl
  431744:	enter  0x89f8,0x3f
  431748:	and    DWORD PTR [ecx+0xd6ecc00],ecx
  43174e:	add    BYTE PTR [esi-0x76000004],al
  431754:	mov    dh,0x96
  431756:	add    BYTE PTR [ecx+0x61],ch
  431759:	(bad)  
  43175a:	(bad)  
  43175b:	jmp    FWORD PTR ds:0x838dff11
  431761:	mov    edi,edi
  431763:	inc    DWORD PTR [ecx]
  431765:	mov    cl,0x0
  431767:	dec    eax
  431768:	in     al,dx
  431769:	(bad)  
  43176a:	inc    DWORD PTR [eax]
  43176c:	fsub   DWORD PTR [ecx-0x7cf02201]
  431772:	(bad)  
  431773:	dec    ecx
  431775:	sar    edi,0xa0
  431778:	mov    DWORD PTR [eax],eax
  43177a:	dec    esp
  43177c:	loopne 0x431703
  43177e:	(bad)  
  43177f:	in     al,dx
  431780:	sti    
  431781:	add    bh,bh
  431783:	sbb    DWORD PTR [esi+ecx*4+0x0],0x3d
  431788:	xor    al,0x89
  43178a:	inc    DWORD PTR [ebx-0x5bff7c4e]
  431790:	daa    
  431791:	inc    DWORD PTR [eax]
  431793:	(bad)  
  431794:	out    dx,eax
  431795:	mov    cl,0xff
  431797:	ret    
  431798:	iret   
  431799:	mov    DWORD PTR [eax],eax
  43179b:	add    BYTE PTR [edi-0x7142ff3b],cl
  4317a1:	(bad)  
  4317a2:	inc    DWORD PTR [eax]
  4317a4:	imul   ebx,DWORD PTR [edi+0x0],0xccff4062
  4317ab:	add    ah,ch
  4317ad:	mov    esp,0xccdb5a00
  4317b2:	inc    DWORD PTR [eax]
  4317b4:	adc    DWORD PTR [ebp-0x1],ebx
  4317b7:	cmp    al,0xbd
  4317b9:	add    bh,bh
  4317bb:	add    BYTE PTR [ecx],dl
  4317bd:	in     eax,0x0
  4317bf:	cmp    DWORD PTR [ecx],eax
  4317c1:	inc    DWORD PTR [ebx-0x8ed301]
  4317c7:	in     eax,dx
  4317c8:	iret   
  4317c9:	add    ah,cl
  4317cb:	cmp    DWORD PTR [edi],0x45
  4317ce:	mov    DWORD PTR [ebx+esi*8],ebx
  4317d1:	mov    edi,edi
  4317d3:	add    BYTE PTR ds:0xff10ffe3,ah
  4317d9:	inc    DWORD PTR [eax]
  4317db:	mov    ebp,ecx
  4317dd:	xchg   ebp,eax
  4317de:	add    BYTE PTR [edx+eax*8-0x6ff7c01],dh
  4317e5:	push   es
  4317e6:	jmp    FWORD PTR [eax-0x68]
  4317e9:	inc    DWORD PTR [eax]
  4317eb:	add    BYTE PTR [edx-0x2683768f],ch
  4317f1:	add    BYTE PTR [eax],al
  4317f3:	add    dl,bl
  4317f5:	pusha  
  4317f6:	call   FWORD PTR [edx]
  4317f8:	mov    dl,0xff
  4317fa:	mov    DWORD PTR [eax],eax
  4317fc:	mov    dh,0x7f
  4317fe:	mov    DWORD PTR [ebx],esi
  431800:	and    DWORD PTR [eax],eax
  431802:	add    ah,cl
  431804:	aaa    
  431805:	sub    bh,bh
  431807:	push   esp
  431808:	push   0x7effff00
  43180d:	and    al,0xff
  43180f:	sub    esi,edx
  431811:	(bad)  
  431812:	inc    DWORD PTR [eax]
  431814:	ja     0x43183a
  431816:	int3   
  431817:	popf   
  431818:	push   ds
  431819:	inc    DWORD PTR [eax]
  43181b:	call   FWORD PTR [ebx-0x34]
  43181e:	jmp    DWORD PTR [ebx+0xff0013]
  431824:	retf   
  431825:	cmp    bh,bh
  431827:	scas   eax,DWORD PTR es:[edi]
  431828:	test   esp,ecx
  43182a:	add    BYTE PTR [eax],al
  43182c:	sar    cl,0x83
  43182f:	packssdw mm7,mm7
  431832:	(bad)  
  431833:	(bad)  
  431834:	mov    edx,0x1237ffd1
  431839:	inc    DWORD PTR [ebx+0x6eefcc]
  43183f:	les    eax,FWORD PTR [edi]
  431841:	dec    esp
  431843:	dec    ebx
  431845:	iret   
  431846:	cmp    DWORD PTR [eax+0xffff03],0x32
  43184d:	sub    al,BYTE PTR [eax]
  43184f:	mov    ecx,0x6affff83
  431855:	call   FWORD PTR fs:[ebp+0x61]
  431859:	add    bh,bh
  43185b:	xor    DWORD PTR [edx],0xffffffc2
  43185e:	(bad)  
  43185f:	mov    edi,0x8983cc51
  431864:	mov    esp,0xd60dffb0
  431869:	dec    esp
  43186b:	call   FWORD PTR [ebp+0x1ceefffe]
  431871:	inc    DWORD PTR [eax]
  431873:	mov    DWORD PTR [eax+eax*2],eax
  431876:	(bad)  
  431877:	in     eax,dx
  431878:	cwde   
  431879:	add    BYTE PTR [ecx-0x30e900],cl
  43187f:	mov    ds:0xffb0,eax
  431884:	sahf   
  431885:	cli    
  431886:	add    BYTE PTR [edx-0xff0036],ch
  43188c:	jo     0x431868
  43188e:	call   DWORD PTR [ebp-0x33000094]
  431894:	mov    al,ds:0x3330008
  431899:	cmp    edi,0xffffffff
  43189c:	and    esp,eax
  43189e:	jmp    DWORD PTR [ebx+0xffcf]
  4318a4:	jbe    0x4318d0
  4318a6:	jmp    FWORD PTR [ebx+0x63]
  4318a9:	add    bh,bh
  4318ab:	int3   
  4318ac:	dec    edx
  4318ad:	jge    0x431832
  4318af:	stc    
  4318b0:	jl     0x4318b2
  4318b2:	add    bh,bh
  4318b4:	mov    ebp,0xc997cceb
  4318b9:	add    ah,cl
  4318bb:	add    BYTE PTR [eax],cl
  4318bd:	std    
  4318be:	jmp    FWORD PTR [esi+ebx*8-0x1]
  4318c2:	(bad)  
  4318c3:	call   DWORD PTR [esi+0x4c73ff91]
  4318c9:	cmp    edi,0xffffffcc
  4318cc:	adc    BYTE PTR [ebx-0x3301ac01],cl
  4318d2:	add    bh,bh
  4318d4:	lea    ebp,[esi+0x0]
  4318d7:	repz sub al,BYTE PTR [eax]
  4318da:	inc    DWORD PTR [ebx-0x15ffcfd6]
  4318e0:	add    BYTE PTR [eax],0xcc
  4318e3:	push   DWORD PTR [ebp+0x38]
  4318e6:	add    BYTE PTR [edi+0x6c],ah
  4318e9:	(bad)  
  4318ea:	inc    DWORD PTR [ebx+0x4a005edd]
  4318f0:	push   ebp
  4318f1:	mov    edi,edi
  4318f3:	add    BYTE PTR [eax+0x68],bh
  4318f6:	add    BYTE PTR [ecx+0xffff14],bh
  4318fc:	daa    
  4318fd:	add    DWORD PTR [bp-0xa4],0xffffff83
  431903:	call   DWORD PTR [edi+0x4799ccb3]
  431909:	(bad)  
  43190a:	inc    DWORD PTR [eax]
  43190c:	adc    BYTE PTR [edi+0x7ec183],ch
  431912:	(bad)  
  431913:	(bad)  
  431914:	cmp    eax,0xec0600f8
  431919:	dec    DWORD PTR [ecx+0xbc77ff]
  43191f:	out    dx,al
  431920:	fdivr  st,st(7)
  431922:	mov    edi,edi
  431924:	mov    al,0x8e
  431926:	mov    DWORD PTR [edi],ecx
  431928:	mov    al,0xff
  43192a:	int3   
  43192b:	dec    DWORD PTR [eax-0x6c]
  43192e:	or     DWORD PTR [ecx],0xffffffd5
  431931:	dec    DWORD PTR [ecx-0x2f3c34]
  431937:	stc    
  431938:	jne    0x431906
  43193a:	cmp    edi,0x14
  43193d:	dec    esp
  43193e:	add    BYTE PTR [eax+0x42],dl
  431941:	cmp    edi,0xffffff89
  431944:	pop    esi
  431945:	in     al,0x89
  431947:	push   es
  431948:	loopne 0x431949
  43194a:	(bad)  
  43194b:	dec    DWORD PTR [esi-0x2d]
  43194e:	push   DWORD PTR [edi]
  431950:	pop    ss
  431951:	cmp    edi,0x0
  431954:	rdpmc  
  431956:	add    BYTE PTR [edx],dh
  431958:	inc    ebx
  431959:	add    ah,cl
  43195b:	call   edi
  43195d:	xchg   BYTE PTR [eax],al
  43195f:	pop    esp
  431960:	xchg   edx,eax
  431961:	mov    esp,ecx
  431963:	add    BYTE PTR [edi-0x67],cl
  431966:	(bad)  
  431967:	cmp    ebp,DWORD PTR [esi-0x3576ff01]
  43196d:	call   DWORD PTR es:[edi]
  431970:	mov    ebx,0x300ff83
  431975:	mov    es,WORD PTR [ebx-0x337c1269]
  43197b:	add    BYTE PTR [esi+0x6006ff25],dh
  431981:	add    BYTE PTR [ebx+0xd42e00],al
  431987:	pop    edi
  431988:	(bad)  
  431989:	dec    DWORD PTR [ecx-0x7e6577]
  43198f:	pop    es
  431990:	ds (bad) 
  431992:	(bad)  
  431993:	jmp    ebx
  431995:	push   ebx
  431996:	add    BYTE PTR [edx+0xff8360],ch
  43199c:	xchg   esp,eax
  43199d:	sbb    DWORD PTR [eax],eax
  43199f:	dec    edx
  4319a0:	mov    bh,bh
  4319a2:	add    bh,bh
  4319a4:	push   ecx
  4319a5:	fdivp  st(7),st
  4319a7:	xor    eax,0xff00ff1e
  4319ac:	in     al,dx
  4319ad:	or     al,0xff
  4319af:	jp     0x4319fe
  4319b1:	add    bh,bh
  4319b3:	sbb    DWORD PTR [ebp-0x5],0xffffff89
  4319b7:	sbb    ah,dl
  4319b9:	(bad)  
  4319ba:	(bad)  
  4319bb:	(bad)  
  4319bc:	mov    ecx,0xa8a2ffaa
  4319c1:	(bad)  
  4319c2:	inc    DWORD PTR [ebx+0x21ff5d54]
  4319c8:	ud0    eax,DWORD PTR [eax]
  4319cb:	mov    ebx,ebp
  4319cd:	mov    al,BYTE PTR [eax]
  4319cf:	addr16 daa 
  4319d1:	add    BYTE PTR [eax],al
  4319d3:	jmp    DWORD PTR [ebp+eiz*1-0x1]
  4319d7:	push   0xccff12
  4319dc:	sbb    al,BYTE PTR [ecx]
  4319de:	dec    ebx
  4319e0:	mov    edx,0x75ffff83
  4319e5:	pop    ecx
  4319e6:	add    BYTE PTR [ecx*4-0x40010000],dl
  4319ed:	jnp    0x4319ef
  4319ef:	dec    edx
  4319f0:	lods   eax,DWORD PTR ds:[esi]
  4319f1:	cmp    edi,0xffffffff
  4319f4:	adc    DWORD PTR [eax],esp
  4319f6:	cmp    DWORD PTR [edi],0x21
  4319f9:	(bad)  
  4319fa:	(bad)  
  4319fb:	inc    esp
  4319fd:	in     eax,0x0
  4319ff:	inc    esp
  431a00:	pop    ecx
  431a01:	add    BYTE PTR [ecx-0x330a9b01],cl
  431a07:	dec    esi
  431a08:	dec    ebx
  431a09:	cmp    edi,0xffffff89
  431a0c:	js     0x4319ca
  431a0e:	int3   
  431a0f:	push   edx
  431a10:	jmp    0x431a11
  431a12:	inc    DWORD PTR [eax]
  431a14:	sbb    edi,edx
  431a16:	add    BYTE PTR [edx+0xff89f0],bl
  431a1c:	xchg   ebp,eax
  431a1d:	in     al,dx
  431a1e:	jmp    FWORD PTR [edi-0x7c333317]
  431a24:	sub    al,BYTE PTR [edi-0x1]
  431a27:	ins    BYTE PTR es:[edi],dx
  431a28:	cmp    edi,0xffffff83
  431a2b:	add    BYTE PTR [ebx],dl
  431a2d:	add    BYTE PTR ss:[ebx-0x7c338c],al
  431a34:	cld    
  431a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a36:	add    BYTE PTR [eax+0x7e],ch
  431a39:	(bad)  
  431a3a:	(bad)  
  431a3b:	dec    DWORD PTR [eax+eax*8-0x1]
  431a3f:	(bad)  
  431a40:	sub    bh,bh
  431a42:	add    BYTE PTR [ecx+0x6ecc4aba],cl
  431a48:	pop    es
  431a49:	dec    esp
  431a4b:	add    BYTE PTR [edx],dl
  431a4d:	les    eax,FWORD PTR [eax]
  431a4f:	iret   
  431a50:	add    DWORD PTR [ebx-0x5258ff34],eax
  431a56:	inc    DWORD PTR [ebp+0x4a]
  431a59:	add    bh,bh
  431a5b:	xor    ebx,0xffffffa7
  431a5e:	push   esp
  431a60:	xchg   esp,ecx
  431a62:	add    BYTE PTR [eax],al
  431a64:	shr    DWORD PTR [edi-0xc65400],0xff
  431a6b:	(bad)  
  431a6c:	jmp    0x431a9e
  431a6e:	(bad)  
  431a6f:	mov    ecx,0xf3
  431a74:	sbb    al,0x8e
  431a76:	add    ah,ch
  431a78:	popf   
  431a79:	(bad)  
  431a7a:	(bad)  
  431a7b:	call   DWORD PTR [ecx-0x2f907cc4]
  431a81:	cmp    edi,0x0
  431a84:	jp     0x431a1b
  431a86:	int3   
  431a87:	cmc    
  431a88:	add    eax,DWORD PTR [ebx+0x74a5ffff]
  431a8e:	int3   
  431a8f:	mov    bl,0x73
  431a91:	add    BYTE PTR [eax],al
  431a93:	adc    DWORD PTR [ecx],0x27
  431a96:	and    esp,0xffffffa0
  431a99:	(bad)  
  431a9a:	(bad)  
  431a9b:	jmp    DWORD PTR [eax-0xb]
  431a9e:	inc    ecx
  431aa0:	xchg   ebx,eax
  431aa1:	cmp    edi,0xffffffcc
  431aa4:	dec    ecx
  431aa5:	mov    al,0x83
  431aa7:	push   ebp
  431aa8:	mov    esp,0xaccffff
  431aad:	in     eax,0xff
  431aaf:	push   ebx
  431ab0:	cmp    bh,0x89
  431ab3:	add    BYTE PTR [ecx-0x54],bh
  431ab6:	add    dh,al
  431ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ab9:	int3   
  431aba:	(bad)  
  431abb:	call   DWORD PTR [ecx]
  431abd:	test   al,0x0
  431abf:	sbb    eax,0xff00ff57
  431ac4:	cmp    DWORD PTR [ecx+0x0],edi
  431ac7:	and    ebp,edi
  431ac9:	inc    DWORD PTR [eax]
  431acb:	cmp    DWORD PTR [ebx],0x2
  431ace:	int3   
  431acf:	add    BYTE PTR [edx-0x1bff0001],bl
  431ad5:	adc    bh,bh
  431ad7:	fadd   DWORD PTR [eax+eax*1+0x449e00cc]
  431ade:	call   edi
  431ae0:	jecxz  0x431ae1
  431ae2:	inc    DWORD PTR [ebx+0x10004f9d]
  431ae8:	loopne 0x431ae9
  431aea:	(bad)  
  431aeb:	push   DWORD PTR [eax-0x3]
  431aee:	call   FWORD PTR [edi]
  431af0:	imul   eax,DWORD PTR [eax],0x3706ff83
  431af6:	(bad)  
  431af7:	in     eax,dx
  431af8:	mov    ds:0x4ff8983,eax
  431afd:	fdivp  st(7),st
  431aff:	data16 sbb BYTE PTR [eax],al
  431b02:	add    BYTE PTR [eax],al
  431b04:	lods   eax,DWORD PTR ds:[esi]
  431b05:	mov    al,BYTE PTR [ebx-0x33769d5a]
  431b0b:	adc    DWORD PTR [edi-0x104008b],0xffffff83
  431b12:	add    bh,bh
  431b14:	cli    
  431b15:	fiadd  DWORD PTR [eax]
  431b17:	sub    edi,DWORD PTR [esi]
  431b19:	add    DWORD PTR [eax],0x0
  431b1c:	sub    DWORD PTR [esi-0x1],edx
  431b1f:	jns    0x431b9a
  431b21:	mov    DWORD PTR [ebx-0xe40901],eax
  431b27:	repnz (bad) 
  431b29:	(bad)  
  431b2a:	dec    esp
  431b2c:	xchg   edx,eax
  431b2d:	ror    DWORD PTR [ecx-0xff3531],cl
  431b33:	dec    DWORD PTR [eax]
  431b35:	daa    
  431b36:	dec    DWORD PTR [ebp-0xff332a]
  431b3c:	fwait
  431b3d:	into   
  431b3e:	add    BYTE PTR [ebp+0x79],ah
  431b41:	or     esp,0xffffff83
  431b44:	cmp    BYTE PTR [edi+edi*8-0xff0145],al
  431b4b:	call   FWORD PTR [eax+eax*2+0x0]
  431b4f:	mov    al,gs:0x9000ff00
  431b55:	out    0xcc,eax
  431b57:	ror    DWORD PTR [ebp-0x1976ff01],0x79
  431b5e:	add    BYTE PTR [eax-0xffffd6],al
  431b64:	aas    
  431b65:	sbb    BYTE PTR [ebx+0x83936b],al
  431b6b:	inc    DWORD PTR ds:0x96b100a2
  431b71:	cmp    edi,0xffffffff
  431b74:	shr    BYTE PTR [ecx-0x76879800],1
  431b7a:	add    bh,bh
  431b7c:	outs   dx,DWORD PTR ds:[esi]
  431b7d:	push   edi
  431b7e:	add    BYTE PTR [edi],dh
  431b80:	or     ah,cl
  431b82:	inc    DWORD PTR [eax]
  431b84:	out    dx,al
  431b85:	aad    0x0
  431b87:	sbb    al,BYTE PTR [ebp-0x1]
  431b8a:	mov    DWORD PTR [eax],eax
  431b8c:	and    bh,dh
  431b8e:	call   DWORD PTR [edx-0x7cff3388]
  431b94:	dec    esi
  431b95:	(bad)  
  431b97:	iret   
  431b98:	jbe    0x431b23
  431b9a:	cmp    edi,0xffffffad
  431b9d:	adc    al,0xff
  431b9f:	cdq    
  431ba0:	mov    WORD PTR [eax],es
  431ba2:	add    BYTE PTR [eax],al
  431ba4:	mov    edi,0xf591ff7c
  431ba9:	int3   
  431baa:	(bad)  
  431bab:	inc    edi
  431bad:	cwde   
  431bae:	int3   
  431baf:	inc    ebx
  431bb0:	or     al,0xff
  431bb2:	add    BYTE PTR [ebx-0x3f33be26],al
  431bb8:	test   eax,0xa9000000
  431bbd:	jmp    0x8a2bd6c2
  431bc2:	add    bh,bh
  431bc4:	pop    es
  431bc5:	das    
  431bc6:	add    BYTE PTR [edi+0x83ae],bl
  431bcc:	cmp    bh,BYTE PTR [edx]
  431bce:	mov    DWORD PTR [ebx],edx
  431bd0:	stc    
  431bd1:	inc    DWORD PTR [eax]
  431bd3:	mov    DWORD PTR [eax],edx
  431bd5:	jmp    FWORD PTR ds:[ecx+esi*4]
  431bd9:	inc    DWORD PTR [eax]
  431bdb:	add    al,dl
  431bdd:	jnp    0x431bde
  431bdf:	int    0xf1
  431be1:	add    BYTE PTR [eax],al
  431be3:	int3   
  431be4:	loopne 0x431bc9
  431be6:	jmp    FWORD PTR [ecx-0xff3326]
  431bec:	pop    edx
  431bed:	push   DWORD PTR cs:[ecx+0x4a]
  431bf1:	(bad)  
  431bf2:	dec    DWORD PTR [ecx-0x1e00c3be]
  431bf8:	lds    eax,FWORD PTR [eax]
  431bfa:	add    BYTE PTR [eax],al
  431bfc:	ins    DWORD PTR es:[edi],dx
  431bfd:	out    0x0,al
  431bff:	lahf   
  431c00:	pop    edx
  431c01:	(bad)  
  431c02:	(bad)  
  431c03:	(bad)  
  431c04:	(bad)  [ebp-0x1]
  431c07:	xor    al,BYTE PTR [edi+edi*8-0x1]
  431c0b:	jmp    DWORD PTR [eax]
  431c0d:	arpl   di,di
  431c0f:	inc    eax
  431c10:	iret   
  431c11:	add    BYTE PTR [ecx-0x7cab6d00],cl
  431c17:	dec    BYTE PTR [ecx-0x447c767d]
  431c1d:	xor    al,0xff
  431c1f:	mov    dh,0x72
  431c21:	add    bh,bh
  431c23:	add    BYTE PTR [edx+0x7fb400ae],bl
  431c29:	or     DWORD PTR [ecx-0x168e34],0x72
  431c30:	mov    eax,DWORD PTR [ebx+0x3fb4ff83]
  431c36:	add    BYTE PTR [edi-0x5f],bh
  431c39:	dec    esp
  431c3b:	jmp    DWORD PTR [esi-0x6d]
  431c3e:	add    bh,al
  431c40:	hlt    
  431c41:	cmp    edi,0xffffffff
  431c44:	add    BYTE PTR [esi],ch
  431c46:	call   DWORD PTR [ecx+ebp*1]
  431c49:	(bad)  
  431c4a:	inc    DWORD PTR [ebx+0x1800c5d6]
  431c50:	cmp    eax,DWORD PTR [eax]
  431c52:	dec    DWORD PTR [ecx-0x4eff8dd8]
  431c58:	cdq    
  431c59:	or     esp,0xffffffff
  431c5c:	int3   
  431c5d:	ins    BYTE PTR es:[edi],dx
  431c5e:	inc    ebx
  431c60:	push   ds
  431c61:	int3   
  431c62:	(bad)  
  431c63:	call   FWORD PTR [ecx-0x1fd600e9]
  431c69:	add    bh,bh
  431c6b:	dec    DWORD PTR [eax-0x4b]
  431c6e:	jmp    FWORD PTR [ecx]
  431c70:	push   esi
  431c71:	(bad)  
  431c72:	inc    DWORD PTR [eax]
  431c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431c75:	inc    ebp
  431c76:	add    BYTE PTR [ecx-0x3300ff70],dl
  431c7c:	inc    ebx
  431c7d:	dec    ecx
  431c7e:	(bad)  
  431c7f:	fimul  DWORD PTR [eax+eax*1-0x1]
  431c83:	call   DWORD PTR [edx+0x63]
  431c86:	add    BYTE PTR [eax+0xccffcc],ah
  431c8c:	add    esp,DWORD PTR [esi-0x1]
  431c8f:	ret    0x8991
  431c92:	cmp    edi,0x6c
  431c95:	lahf   
  431c96:	int3   
  431c97:	mov    WORD PTR [eax-0x34],ds
  431c9a:	cmp    edi,0xffffffac
  431c9d:	dec    ecx
  431c9e:	jmp    FWORD PTR [edi-0x3300ffe8]
  431ca4:	xor    dl,al
  431ca6:	push   DWORD PTR [eax+0x2c]
  431ca9:	dec    DWORD PTR [ecx-0xfa2c34]
  431caf:	xchg   edi,eax
  431cb0:	add    BYTE PTR fs:[ecx-0x7ca28a34],cl
  431cb7:	sub    BYTE PTR [ebx],0xff
  431cba:	inc    DWORD PTR [ebx+0x6ccccaca]
  431cc0:	mov    DWORD PTR [eax],eax
  431cc2:	add    BYTE PTR [eax],al
  431cc4:	sahf   
  431cc5:	ja     0x431c93
  431cc7:	ja     0x431c73
  431cc9:	add    BYTE PTR [eax],al
  431ccb:	(bad)  
  431ccc:	cmp    DWORD PTR [edi-0xbac101],ebp
  431cd2:	inc    DWORD PTR [eax]
  431cd4:	cmp    cl,BYTE PTR [edi-0x7636597d]
  431cda:	(bad)  
  431cdb:	inc    esp
  431cdd:	and    al,0xff
  431cdf:	jmp    FWORD PTR [ecx+ecx*4]
  431ce2:	(bad)  
  431ce3:	push   DWORD PTR [ebp+0x177ff0f]
  431ce9:	(bad)  
  431cea:	(bad)  
  431ceb:	inc    DWORD PTR [edi-0x217c00a3]
  431cf1:	add    DWORD PTR [ebx+0x1abdff],0x21
  431cf8:	retf   0x83cc
  431cfb:	add    BYTE PTR [ecx],ah
  431cfd:	sahf   
  431cfe:	mov    DWORD PTR [ebx+0x8],ecx
  431d01:	inc    DWORD PTR [ebx+0x72cbcc]
  431d07:	lods   al,BYTE PTR ds:[esi]
  431d08:	out    dx,al
  431d09:	add    ah,cl
  431d0b:	int3   
  431d0c:	pusha  
  431d0d:	sbb    DWORD PTR [ebx-0x7c002cb7],eax
  431d13:	jmp    FWORD PTR [esp+eiz*8]
  431d16:	add    DWORD PTR [esi+edi*8],0x0
  431d1a:	inc    DWORD PTR [eax]
  431d1c:	jb     0x431cff
  431d1e:	add    ah,cl
  431d20:	clc    
  431d21:	inc    DWORD PTR [eax]
  431d23:	jmp    DWORD PTR [edi-0x21c17c7d]
  431d29:	mov    DWORD PTR [eax],eax
  431d2b:	xor    DWORD PTR [esp+eiz*4-0x1],0x2a
  431d30:	adc    eax,DWORD PTR [eax]
  431d32:	int3   
  431d33:	add    BYTE PTR [esi],bh
  431d35:	or     bh,bh
  431d37:	jle    0x431cc3
  431d39:	mov    edi,edi
  431d3b:	dec    ecx
  431d3d:	pusha  
  431d3e:	and    DWORD PTR [ecx],0x5a
  431d41:	add    DWORD PTR [eax],0xffffff89
  431d44:	call   0xb1171d5e
  431d49:	inc    DWORD PTR [ebx-0x5cda01]
  431d4f:	jnp    0x431dc7
  431d51:	add    BYTE PTR [ecx-0x7678dc01],cl
  431d57:	out    0x10,eax
  431d59:	(bad)  
  431d5a:	dec    esp
  431d5c:	mov    cl,BYTE PTR ds:0x1a6400
  431d62:	add    bh,bh
  431d64:	(bad)  
  431d66:	int3   
  431d67:	ja     0x431d8f
  431d69:	int3   
  431d6a:	int3   
  431d6b:	add    cl,dh
  431d6d:	clc    
  431d6e:	add    BYTE PTR [ebx-0xa],bh
  431d71:	add    bh,bh
  431d73:	or     edx,0x3
  431d76:	jmp    DWORD PTR [edx+eax*8]
  431d79:	(bad)  
  431d7a:	(bad)  
  431d7b:	jmp    DWORD PTR [ebx+0x74]
  431d7e:	add    ch,cl
  431d80:	(bad)  
  431d81:	inc    DWORD PTR [eax]
  431d83:	jmp    ecx
  431d85:	repnz mov edi,ebx
  431d88:	jae    0x431d0d
  431d8a:	(bad)  
  431d8b:	dec    DWORD PTR [esi-0x8]
  431d8e:	call   DWORD PTR [esi+0xff83c5]
  431d94:	fild   WORD PTR gs:[eax]
  431d97:	push   cs
  431d98:	cmp    eax,0xfeff83ff
  431d9d:	cwde   
  431d9e:	add    bl,bh
  431da0:	mov    ebx,0x49ffccff
  431da5:	and    eax,DWORD PTR [ebx-0x769685]
  431dab:	xor    DWORD PTR [edi-0x7f],0x0
  431daf:	add    BYTE PTR [esi],0x0
  431db2:	add    bh,bh
  431db4:	and    al,0x46
  431db6:	jmp    FWORD PTR [edx+0xccccda]
  431dbc:	stos   BYTE PTR es:[edi],al
  431dbd:	push   ecx
  431dbe:	add    dl,dh
  431dc0:	jnp    0x431dc2
  431dc2:	int3   
  431dc3:	dec    DWORD PTR [edx+0x5e5983a2]
  431dc9:	cmp    edi,0xffffffff
  431dcc:	sub    al,0xa5
  431dce:	mov    DWORD PTR [ebp-0xffff5e],ebp
  431dd4:	pop    edx
  431dd5:	and    eax,0x83bf42ff
  431dda:	cmp    edi,0x2b
  431ddd:	in     al,0xff
  431ddf:	cmp    ebx,DWORD PTR [eax+0x0]
  431de2:	inc    DWORD PTR [eax]
  431de4:	shl    BYTE PTR [esi],1
  431de6:	(bad)  
  431de7:	mov    edi,0xee
  431dec:	mov    eax,DWORD PTR [edi-0x1]
  431def:	or     eax,0xffffff69
  431df4:	push   esp
  431df5:	mov    al,BYTE PTR [eax]
  431df7:	stc    
  431df8:	mov    dl,0x0
  431dfa:	int3   
  431dfb:	dec    DWORD PTR [eax+0x1f82cc6b]
  431e01:	add    bh,bh
  431e03:	add    BYTE PTR [ebx+0x7e],dl
  431e06:	add    BYTE PTR [esp+esi*4+0x0],dl
  431e0a:	(bad)  
  431e0b:	jmp    FWORD PTR [esp+ebp*1]
  431e0e:	add    BYTE PTR [ebx],bh
  431e10:	pop    es
  431e11:	int3   
  431e12:	(bad)  
  431e13:	push   DWORD PTR [edi+0x63c8ff03]
  431e19:	inc    DWORD PTR [eax]
  431e1b:	(bad)  
  431e1c:	cli    
  431e1d:	cmp    bh,0xe
  431e20:	mov    ecx,0x5783ff00
  431e25:	cmp    DWORD PTR [ebx-0x760018d6],eax
  431e2b:	add    BYTE PTR [ecx-0x2],dl
  431e2e:	add    BYTE PTR [ecx],ah
  431e30:	adc    eax,DWORD PTR [ebx+0x2bf0ff00]
  431e36:	int3   
  431e37:	mov    eax,0xda
  431e3c:	pusha  
  431e3d:	mov    ds:0xff3493ff,al
  431e42:	inc    DWORD PTR [eax]
  431e44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e45:	mov    ecx,0x83271289
  431e4a:	add    bh,bh
  431e4c:	sar    DWORD PTR [edi+edi*8-0xad96],1
  431e53:	add    BYTE PTR [edi+edi*2-0x7cea2e01],bl
  431e5a:	mov    DWORD PTR [ebx+0x2e003819],eax
  431e60:	adc    eax,0xc500ffff
  431e65:	fiadd  DWORD PTR [eax]
  431e67:	add    WORD PTR ss:[eax],0xffff
  431e6c:	and    BYTE PTR ds:0xcee489,al
  431e72:	(bad)  
  431e73:	(bad)  
  431e74:	fdivr  QWORD PTR [edi+edi*8+0x17]
  431e78:	mov    cl,ah
  431e7a:	inc    DWORD PTR [ebx-0x4affbe81]
  431e80:	mov    ebx,0xf600ffff
  431e85:	leave  
  431e86:	adc    DWORD PTR [ebx],0xffffff86
  431e89:	add    bh,bh
  431e8b:	push   esp
  431e8d:	jnp    0x431e8f
  431e8f:	clc    
  431e90:	cdq    
  431e91:	inc    DWORD PTR [eax]
  431e93:	jmp    ebp
  431e95:	xchg   edx,eax
  431e96:	jmp    edx
  431e98:	xor    bh,bh
  431e9a:	add    bh,bh
  431e9c:	mov    edx,0x9e530000
  431ea1:	add    bh,bh
  431ea3:	add    BYTE PTR [edx],ch
  431ea5:	aas    
  431ea6:	mov    DWORD PTR [esi+0xff00d0],ebx
  431eac:	lahf   
  431ead:	fdivp  st(7),st
  431eaf:	and    eax,0x830000fa
  431eb4:	loope  0x431f1e
  431eb6:	call   FWORD PTR [edx-0x53]
  431eb9:	int3   
  431eba:	add    BYTE PTR [ebx-0x137c4d9c],al
  431ec0:	add    BYTE PTR [eax],al
  431ec2:	add    BYTE PTR [eax],al
  431ec4:	arpl   WORD PTR [edx-0x2aa201],bp
  431eca:	add    bh,bh
  431ecc:	test   BYTE PTR [ebx+0x315100],cl
  431ed2:	(bad)  
  431ed3:	(bad)  
  431ed4:	fcmovne st,st(1)
  431ed6:	add    BYTE PTR [eax+0xffff01],dh
  431edc:	call   0x13feb30
  431ee1:	inc    DWORD PTR [ebx-0x223834]
  431ee7:	and    DWORD PTR [ebx-0x1],0x4c81ff00
  431eee:	int3   
  431eef:	xchg   edi,eax
  431ef0:	pop    ebx
  431ef1:	inc    DWORD PTR [eax]
  431ef3:	call   DWORD PTR [ebp-0xb]
  431ef6:	(bad)  
  431ef7:	mov    edx,0xffffff45
  431efc:	push   0x3d
  431efe:	add    BYTE PTR [edx+ecx*1-0x34],bh
  431f02:	dec    DWORD PTR [ecx-0x5d3316d4]
  431f08:	pusha  
  431f09:	inc    DWORD PTR [eax]
  431f0b:	add    BYTE PTR [esi-0x67],al
  431f0e:	mov    edi,ecx
  431f10:	sub    edi,edi
  431f12:	add    bh,bh
  431f14:	call   0xf6b3eb54
  431f19:	mov    edi,edi
  431f1b:	jmp    FWORD PTR [esp+ebx*8-0x77]
  431f1f:	mov    ebp,0xffff00db
  431f24:	pop    edi
  431f25:	or     al,0x0
  431f27:	(bad)  
  431f28:	aas    
  431f29:	mov    DWORD PTR [eax],eax
  431f2b:	sub    DWORD PTR [edi-0x61],0x0
  431f2f:	add    DWORD PTR [edi-0x1],eax
  431f32:	(bad)  
  431f33:	(bad)  
  431f34:	mov    eax,0xcbcecc4a
  431f39:	add    BYTE PTR [eax],al
  431f3b:	push   DWORD PTR [ebx+0x39]
  431f3e:	inc    DWORD PTR [eax-0xbd]
  431f44:	mov    bl,0xbd
  431f46:	jmp    FWORD PTR [esi+0x23]
  431f49:	(bad)  
  431f4a:	inc    DWORD PTR [ebx-0x6900205a]
  431f50:	add    eax,0x68ffffff
  431f55:	push   edi
  431f56:	inc    DWORD PTR [esi+esi*2+0x45ff83ff]
  431f5d:	and    bh,bh
  431f5f:	inc    edx
  431f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431f61:	add    BYTE PTR [ebx-0x76801801],al
  431f67:	push   ecx
  431f68:	pop    esi
  431f69:	(bad)  
  431f6a:	inc    DWORD PTR [eax]
  431f6c:	push   ebx
  431f6d:	cmc    
  431f6e:	mov    DWORD PTR [edx-0x7600ff46],esi
  431f74:	jbe    0x431fb5
  431f76:	inc    DWORD PTR [ebp+0x7c]
  431f79:	int3   
  431f7a:	inc    DWORD PTR [ebx+0x478327e8]
  431f80:	mov    eax,DWORD PTR [eax]
  431f82:	inc    DWORD PTR [eax]
  431f84:	or     ch,dh
  431f86:	add    BYTE PTR [esi-0xff97],dh
  431f8c:	cli    
  431f8d:	sbb    cl,ah
  431f8f:	(bad)  
  431f90:	test   eax,0x7eccffff
  431f95:	cmp    eax,0xffc7fcff
  431f9a:	dec    esp
  431f9c:	dec    esp
  431f9d:	add    BYTE PTR ss:[ecx-0x7],ch
  431fa1:	add    BYTE PTR [ebx-0x4ba97d],al
  431fa7:	jmp    FWORD PTR [ecx-0x7d]
  431faa:	or     esp,0xffffffca
  431fad:	fadd   QWORD PTR [ebx-0xb1b2]
  431fb3:	add    BYTE PTR [eax+0x78],dh
  431fb6:	dec    ecx
  431fb8:	pop    esp
  431fb9:	cmp    edi,0xffffffff
  431fbc:	pop    ebp
  431fbd:	pusha  
  431fbe:	mov    DWORD PTR [edi+0x5b],ebx
  431fc1:	inc    DWORD PTR [ebx-0x1bdf00]
  431fc7:	xchg   ecx,eax
  431fc8:	push   esi
  431fc9:	add    BYTE PTR [ebx-0x7c9c01],al
  431fcf:	sub    al,0xe8
  431fd1:	add    ah,cl
  431fd3:	jmp    FWORD PTR [ebp-0x3194ff1c]
  431fd9:	inc    DWORD PTR [eax]
  431fdb:	jmp    DWORD PTR [ecx-0x51]
  431fde:	add    BYTE PTR [edx-0xffff45],ah
  431fe4:	das    
  431fe5:	dec    esp
  431fe6:	mov    DWORD PTR [ebp-0x7cff76f1],ebp
  431fec:	xchg   DWORD PTR [ebx+0x0],edx
  431fef:	xchg   esi,eax
  431ff0:	mov    ebx,0x588389ff
  431ff5:	add    al,0xff
  431ff7:	fsub   QWORD PTR [ecx+ecx*4-0x34]
  431ffb:	add    BYTE PTR [edx-0x4ce933bb],bl
  432001:	int3   
  432002:	add    ah,cl
  432004:	sbb    eax,0x8f45ff3b
  432009:	(bad)  
  43200a:	inc    DWORD PTR [ebx+0x283960a]
  432010:	mov    ebp,0xe900ffff
  432015:	or     eax,0xe8fdcc
  43201a:	(bad)  
  43201b:	(bad)  
  43201c:	jmp    0x5af0202f
  432021:	dec    DWORD PTR [ecx-0x599000]
  432027:	adc    al,0x10
  432029:	inc    DWORD PTR [ebx-0xea3900]
  43202f:	pop    ebx
  432030:	out    dx,al
  432031:	add    ah,cl
  432033:	or     DWORD PTR [edx+0x49d900ca],0xffffff83
  43203a:	(bad)  
  43203b:	dec    DWORD PTR [ebx]
  43203d:	sar    edi,cl
  43203f:	std    
  432040:	jmp    0x48441fce
  432045:	or     bh,bh
  432047:	in     al,dx
  432048:	inc    edx
  432049:	inc    DWORD PTR [eax]
  43204b:	add    BYTE PTR [ebp-0x10f7ff61],bl
  432051:	(bad)  
  432052:	(bad)  
  432053:	push   DWORD PTR [ebx]
  432055:	call   0x8a3c9c5a
  43205a:	inc    DWORD PTR [eax]
  43205c:	ins    DWORD PTR es:[edi],dx
  43205d:	out    dx,al
  43205e:	int3   
  43205f:	inc    ebp
  432060:	inc    esp
  432061:	int3   
  432062:	int3   
  432063:	dec    esp
  432065:	test   eax,0xc106ff
  43206a:	inc    DWORD PTR [ebx+0x26005739]
  432070:	sbb    edi,edi
  432072:	or     esp,0xffffffe1
  432075:	push   0xffffffcc
  432077:	iret   
  432078:	ja     0x432003
  43207a:	int3   
  43207b:	dec    DWORD PTR [eax+0x72]
  43207e:	jmp    FWORD PTR [edi-0xe]
  432081:	add    bh,bh
  432083:	call   DWORD PTR [esp+ebx*2+0xf1b483]
  43208a:	(bad)  
  43208b:	call   DWORD PTR [edx]
  43208d:	popf   
  43208e:	sbb    DWORD PTR [ebx],0x2a
  432091:	add    bh,bh
  432093:	add    BYTE PTR [esi+eiz*1-0x7643d001],ch
  43209a:	(bad)  
  43209b:	push   DWORD PTR [edx-0x3c]
  43209e:	mov    DWORD PTR [ecx+0x833e],esi
  4320a4:	add    edi,DWORD PTR [edi+edi*8-0xff07c2]
  4320ab:	add    cl,cl
  4320ad:	or     al,BYTE PTR [eax]
  4320af:	jae    0x4320e2
  4320b1:	int3   
  4320b2:	cmp    edi,0x5a
  4320b5:	lock add BYTE PTR [esi-0x49],ch
  4320b9:	inc    DWORD PTR [eax]
  4320bb:	call   esi
  4320bd:	ds add dl,dl
  4320c0:	es dec esp
  4320c3:	int3   
  4320c4:	ret    
  4320c5:	push   cs
  4320c6:	jmp    FWORD PTR [ebx-0x76ff53]
  4320cc:	imul   edx,DWORD PTR [edi-0x1],0x6f
  4320d0:	or     DWORD PTR [ecx-0x70300000],ecx
  4320d6:	xor    DWORD PTR [edi-0x4],0xffffff83
  4320da:	add    ah,cl
  4320dc:	mov    ecx,eax
  4320de:	add    BYTE PTR [edx],ch
  4320e0:	dec    esi
  4320e1:	add    BYTE PTR [eax],al
  4320e3:	jmp    FWORD PTR [edi+0x202fffca]
  4320e9:	add    BYTE PTR [eax],al
  4320eb:	jmp    DWORD PTR [edx-0x19a07c71]
  4320f1:	dec    DWORD PTR [ecx-0xdfeb01]
  4320f7:	mov    BYTE PTR [edi+edi*8],bl
  4320fa:	(bad)  
  4320fb:	inc    DWORD PTR ds:0xe8ec00f4
  432101:	add    DWORD PTR [eax],0xffffffff
  432104:	jmp    0x432167
  432106:	add    BYTE PTR [ecx-0x7c000082],al
  43210c:	daa    
  43210d:	jmp    DWORD PTR cs:[ebp+0x25]
  432111:	(bad)  
  432112:	inc    DWORD PTR [eax]
  432114:	sub    dl,bh
  432116:	int3   
  432117:	add    BYTE PTR [ebp+0x0],0x83
  43211b:	add    ch,dl
  43211d:	push   ebx
  43211e:	add    BYTE PTR [eax],ch
  432120:	xlat   BYTE PTR ds:[ebx]
  432121:	add    DWORD PTR [eax],0x0
  432124:	cmp    BYTE PTR [ecx],bh
  432126:	add    BYTE PTR [esi-0x49],dh
  432129:	mov    DWORD PTR [eax],eax
  43212b:	call   FWORD PTR [eax]
  43212d:	cwde   
  43212e:	call   DWORD PTR [ebx]
  432130:	sbb    edi,edi
  432132:	add    bh,bh
  432134:	mov    ecx,0xd22e8319
  432139:	add    bh,bh
  43213b:	add    BYTE PTR [edx+0xf],al
  43213e:	add    BYTE PTR [eax+0x27],cl
  432141:	or     esp,0x0
  432144:	or     eax,0x97cb0012
  432149:	mov    DWORD PTR [eax],eax
  43214b:	call   DWORD PTR [eax+0x53]
  43214e:	xor    DWORD PTR [esi+0x72],0xffffffcc
  432152:	add    bh,bh
  432154:	mov    eax,ds:0xdc24cc15
  432159:	add    DWORD PTR [eax],0x0
  43215c:	cmovge ecx,esp
  43215f:	push   edx
  432160:	push   ss
  432161:	add    bh,bh
  432163:	add    BYTE PTR [edx],ch
  432165:	aam    0x0
  432167:	jae    0x4321d4
  432169:	int3   
  43216a:	cmp    edi,0xffffff8e
  43216d:	mov    dl,0xff
  43216f:	mov    ebp,0x89ccff2d
  432174:	test   DWORD PTR [ebx+0x47f283],edi
  43217a:	(bad)  
  43217b:	call   FWORD PTR [ebp+0x48]
  43217e:	push   DWORD PTR [ebx]
  432180:	mov    ch,0x83
  432182:	(bad)  
  432183:	call   FWORD PTR [esi*1+0xea0800]
  43218a:	(bad)  
  43218b:	jmp    FWORD PTR [ebx-0x62]
  43218e:	call   DWORD PTR [edx-0x8f]
  432194:	pop    ds
  432195:	stc    
  432196:	add    BYTE PTR [edi+0x67],ch
  432199:	dec    DWORD PTR [ecx+0xfd6600]
  43219f:	adc    DWORD PTR [edx+0x7bcc83ff],edx
  4321a5:	xchg   ebp,eax
  4321a6:	(bad)  
  4321a7:	mov    esp,0xffffff98
  4321ac:	int    0xa9
  4321ae:	add    BYTE PTR [ecx],cl
  4321b0:	lods   al,BYTE PTR ds:[esi]
  4321b1:	add    BYTE PTR [eax],al
  4321b3:	int3   
  4321b4:	pop    ebp
  4321b5:	sahf   
  4321b6:	inc    edx
  4321b8:	dec    esi
  4321b9:	dec    DWORD PTR [ecx-0x720401]
  4321bf:	jno    0x4321cd
  4321c1:	add    bh,bh
  4321c3:	add    BYTE PTR [ecx+0x20a8ff0a],ah
  4321c9:	dec    esp
  4321cb:	add    BYTE PTR [esi],bh
  4321cd:	call   0x25cdd2
  4321d2:	add    BYTE PTR [ebx-0x5d0047bc],al
  4321d8:	mov    cl,0xff
  4321da:	mov    edi,edi
  4321dc:	retf   0xff68
  4321df:	cmc    
  4321e0:	pop    ebp
  4321e1:	(bad)  
  4321e2:	(bad)  
  4321e3:	push   DWORD PTR [ecx-0x3c210007]
  4321e9:	mov    DWORD PTR [ebx-0xd4900],eax
  4321ef:	imul   ecx,DWORD PTR [edi+0x570000ff],0x4e
  4321f6:	(bad)  
  4321f7:	cmp    dl,BYTE PTR [ecx]
  4321f9:	inc    DWORD PTR [eax]
  4321fb:	push   DWORD PTR [ebp+0x17d4ff6a]
  432201:	inc    DWORD PTR [eax]
  432203:	int3   
  432204:	mov    eax,ds:0x64410023
  432209:	add    bh,bh
  43220b:	jmp    DWORD PTR [ecx]
  43220d:	mov    ecx,esp
  43220f:	jecxz  0x432258
  432211:	inc    DWORD PTR [eax]
  432213:	add    BYTE PTR [eax-0x59],ch
  432216:	call   edx
  432218:	jns    0x432219
  43221a:	add    BYTE PTR [eax],al
  43221c:	cdq    
  43221d:	jle    0x4321a2
  43221f:	xor    dh,dh
  432221:	add    BYTE PTR [ecx+0x5adc00],cl
  432227:	mov    WORD PTR [eax+eax*1],?
  43222a:	dec    DWORD PTR [ecx+0x68ffea61]
  432230:	mov    bh,bh
  432232:	(bad)  
  432233:	dec    edi
  432235:	imul   ecx,DWORD PTR [ecx-0x7c5beb],0xffffff83
  43223c:	and    BYTE PTR [esi-0x7b8301],al
  432242:	(bad)  
  432243:	jmp    FWORD PTR [ebp+0x12]
  432246:	add    BYTE PTR [edi],bl
  432248:	mov    ch,0x0
  43224a:	inc    DWORD PTR [ebx-0x3a76be7d]
  432250:	add    BYTE PTR [eax],0x83
  432253:	int3   
  432254:	push   eax
  432255:	cmp    BYTE PTR [ebx-0x7cff8b74],al
  43225b:	mov    esi,edi
  43225d:	inc    ebp
  43225e:	(bad)  
  43225f:	cld    
  432260:	je     0x432261
  432262:	(bad)  
  432263:	call   DWORD PTR [edx]
  432265:	sub    al,0x83
  432267:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432268:	enter  0xff00,0xff
  43226c:	push   cs
  43226d:	enter  0xaa00,0x1a
  432271:	cmp    edi,0xffffffff
  432274:	jb     0x4322c8
  432276:	call   FWORD PTR [ecx-0xff7cac]
  43227c:	inc    esi
  43227d:	sbb    al,BYTE PTR [ebx-0x33002d97]
  432283:	add    cl,ah
  432285:	das    
  432286:	add    BYTE PTR [eax+0xff17],ah
  43228c:	in     eax,0x2f
  43228e:	add    BYTE PTR [eax-0x767c3321],ch
  432294:	(bad)  
  432295:	bound  eax,QWORD PTR [ebx+0xff3bc7]
  43229b:	push   eax
  43229d:	dec    ebp
  43229e:	int3   
  43229f:	inc    esp
  4322a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4322a1:	add    bh,bh
  4322a3:	mov    DWORD PTR [eax+0x7fe5ff06],esi
  4322a9:	inc    DWORD PTR [eax]
  4322ab:	sub    ecx,0x23
  4322ae:	add    DWORD PTR [esi+ebp*4-0x1],0x0
  4322b3:	(bad)  
  4322b4:	cmp    al,0xc
  4322b6:	cmp    DWORD PTR [edi+0x50],0x0
  4322ba:	add    BYTE PTR [eax],al
  4322bc:	cmp    DWORD PTR cs:[ebx-0xff8d94],eax
  4322c3:	mov    DWORD PTR [esi+0x38],eax
  4322c6:	mov    DWORD PTR [ebx+0x5b],esi
  4322c9:	add    DWORD PTR [ebx-0x5c5e01],0xffffff85
  4322d0:	and    bh,bh
  4322d2:	inc    DWORD PTR [ebx+0x5cffd07e]
  4322d8:	pusha  
  4322d9:	int3   
  4322da:	add    bh,bh
  4322dc:	pop    esp
  4322dd:	out    0xff,al
  4322df:	sbb    eax,0xffcc8345
  4322e4:	add    al,0xbc
  4322e6:	sbb    ebx,0xffffff86
  4322e9:	add    bh,bh
  4322eb:	dec    DWORD PTR ds:0x8c02ff44
  4322f1:	inc    DWORD PTR [eax]
  4322f3:	add    dl,ah
  4322f5:	inc    ecx
  4322f6:	mov    ebp,ebx
  4322f8:	cmp    bh,bh
  4322fa:	inc    DWORD PTR [ebx+0x74fff307]
  432300:	js     0x432302
  432302:	(bad)  
  432303:	inc    DWORD PTR ds:0xc406ff64
  432309:	dec    DWORD PTR [ecx-0x120177]
  43230f:	sub    DWORD PTR [ecx-0x77],edx
  432312:	inc    DWORD PTR [ebx-0x7fff90be]
  432318:	ret    
  432319:	add    bh,bh
  43231b:	dec    esp
  43231d:	dec    DWORD PTR es:[edx]
  432320:	ins    BYTE PTR es:[edi],dx
  432321:	int3   
  432322:	(bad)  
  432323:	(bad)  
  432324:	ficom  WORD PTR ds:0xff09e800
  43232a:	inc    DWORD PTR [eax]
  43232c:	add    al,0x1c
  43232e:	add    BYTE PTR [edi+0x83f7],ch
  432334:	leave  
  432335:	jle    0x432336
  432337:	jbe    0x43232e
  432339:	add    BYTE PTR [eax],al
  43233b:	adc    esi,0x48
  43233e:	(bad)  
  43233f:	mov    esi,0xcc00ff0a
  432344:	pop    ss
  432345:	inc    ecx
  432346:	add    BYTE PTR [edx-0x76ffffa5],bh
  43234c:	mov    ds:0x5ab0078,eax
  432351:	inc    DWORD PTR [eax]
  432353:	add    BYTE PTR ds:0x44cbff1f,dl
  432359:	inc    DWORD PTR [ebx-0xc4f101]
  43235f:	imul   ebx,DWORD PTR [esi-0xcff7c01],0x4ae9ff06
  432369:	mov    edi,edi
  43236b:	inc    DWORD PTR [ecx]
  43236d:	sub    DWORD PTR [ecx-0x7c7c6b24],ecx
  432373:	dec    DWORD PTR [ecx-0x78d7656]
  432379:	inc    DWORD PTR [eax]
  43237b:	inc    DWORD PTR [esi-0x12bb33b6]
  432381:	inc    DWORD PTR [eax]
  432383:	dec    DWORD PTR [edi]
  432385:	fiadd  DWORD PTR [eax]
  432387:	fs dec esi
  432389:	dec    esp
  43238b:	inc    DWORD PTR [ebx+ebp*4-0x723c00]
  432392:	(bad)  
  432393:	push   ebx
  432395:	and    edi,edi
  432397:	xchg   esp,eax
  432398:	pop    esp
  432399:	add    BYTE PTR [eax],al
  43239b:	dec    DWORD PTR [edi-0x6f]
  43239e:	jmp    DWORD PTR [esi-0x87]
  4323a4:	nop
  4323a5:	rol    BYTE PTR [eax],0xed
  4323a8:	sldt   WORD PTR [ebx-0x9b6d34]
  4323af:	iret   
  4323b0:	mov    edi,0x18ff8300
  4323b5:	push   ebx
  4323b6:	call   DWORD PTR [edi+ebx*2-0x66ff3400]
  4323bd:	add    al,BYTE PTR [ebx-0xc790]
  4323c3:	add    BYTE PTR [edx],cl
  4323c5:	jb     0x4323c6
  4323c7:	mov    esp,0x83ffffc5
  4323cc:	mov    cl,0x41
  4323ce:	call   FWORD PTR [edx-0x79]
  4323d1:	dec    DWORD PTR [ecx-0x5c4701]
  4323d7:	rcl    dl,1
  4323d9:	inc    DWORD PTR [eax]
  4323db:	jmp    FWORD PTR [esi]
  4323dd:	sub    edi,edi
  4323df:	clc    
  4323e0:	cmp    edi,edi
  4323e2:	inc    DWORD PTR [eax]
  4323e4:	cmp    DWORD PTR [edx],0xf55500
  4323ea:	inc    DWORD PTR [eax]
  4323ec:	stos   BYTE PTR es:[edi],al
  4323ed:	(bad)  
  4323ee:	call   FWORD PTR [esi-0x33007c3d]
  4323f4:	and    cl,BYTE PTR [edi-0xdd2401]
  4323fa:	add    BYTE PTR [ebx-0x327cd3a8],al
  432400:	cmp    cl,ah
  432402:	inc    DWORD PTR [eax]
  432404:	test   eax,0xf544cc78
  432409:	add    BYTE PTR [ebx+0xab1cff],al
  43240f:	aas    
  432410:	repz mov esp,ecx
  432413:	add    bh,cl
  432415:	mov    ebx,0xff4df0ff
  43241a:	inc    DWORD PTR [eax]
  43241c:	bound  ecx,QWORD PTR [eax]
  43241e:	add    cl,bh
  432420:	aas    
  432421:	mov    edi,edi
  432423:	add    BYTE PTR [ebx+0x32],bh
  432426:	jmp    DWORD PTR [edx]
  432428:	cmp    bh,bh
  43242a:	dec    esp
  43242c:	into   
  43242d:	cli    
  43242e:	add    BYTE PTR [edx+0x50],al
  432431:	dec    esp
  432433:	jmp    DWORD PTR [esi-0x4dd4ffe2]
  432439:	int3   
  43243a:	add    ah,cl
  43243c:	repnz jecxz 0x4323c2
  43243f:	inc    ebx
  432440:	(bad)
  432443:	jmp    edi
  432445:	cmp    BYTE PTR [eax],al
  432447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432448:	(bad)  
  432449:	(bad)  
  43244a:	(bad)  
  43244b:	jmp    esi
  43244d:	pop    ss
  43244e:	call   FWORD PTR [edx-0x3362]
  432454:	sub    ch,ah
  432456:	jmp    FWORD PTR [ebx+0x83000c]
  43245c:	test   DWORD PTR [ecx-0x349200],ecx
  432462:	(bad)  
  432463:	(bad)  
  432464:	mov    ecx,0x7febff6d
  432469:	inc    DWORD PTR [eax]
  43246b:	xor    DWORD PTR [edx+0x9c002c],0xffffff83
  432472:	add    ah,cl
  432474:	and    ebp,edi
  432476:	push   DWORD PTR [ebx]
  432478:	or     al,0x83
  43247a:	inc    DWORD PTR [eax]
  43247c:	jns    0x4324c4
  43247e:	push   DWORD PTR [edi+0x3]
  432481:	inc    DWORD PTR [eax]
  432483:	inc    DWORD PTR [esp+eiz*2-0x33b4ba01]
  43248a:	int3   
  43248b:	cmp    DWORD PTR [ebp-0x6a],0xffffffff
  43248f:	mov    es,WORD PTR [ebx-0x60000001]
  432495:	inc    esp
  432496:	jmp    FWORD PTR [edx+0x3b]
  432499:	(bad)  
  43249a:	dec    esp
  43249c:	jp     0x4324fb
  43249e:	int3   
  43249f:	adc    ah,ah
  4324a1:	inc    DWORD PTR [ebx-0x33befe7d]
  4324a7:	icebp  
  4324a8:	jg     0x4324a9
  4324aa:	add    bh,bh
  4324ac:	cli    
  4324ad:	mov    cl,0x0
  4324af:	mov    eax,0xccccff1e
  4324b4:	mul    BYTE PTR [edx-0xb40601]
  4324ba:	(bad)  
  4324bb:	call   FWORD PTR [ecx-0x4d26ff3e]
  4324c1:	int3   
  4324c2:	or     DWORD PTR [ecx-0xeff7ff1],0x7a
  4324c9:	add    DWORD PTR [eax],0x0
  4324cc:	jo     0x43251e
  4324ce:	cmp    DWORD PTR [ebp-0x70],0x0
  4324d2:	add    bh,bh
  4324d4:	jp     0x43246e
  4324d6:	int3   
  4324d7:	pop    ds
  4324d8:	jle    0x432463
  4324da:	cmp    edi,0xffffffcb
  4324dd:	sub    eax,0x837727ff
  4324e2:	add    BYTE PTR [eax],al
  4324e4:	push   0x7a
  4324e6:	(bad)  
  4324e7:	mov    ebx,0xffffd7
  4324ec:	xor    eax,0xcdf6003a
  4324f1:	(bad)  
  4324f2:	dec    esp
  4324f4:	enter  0xff7a,0xf2
  4324f8:	outs   dx,DWORD PTR ds:[esi]
  4324f9:	mov    DWORD PTR [eax],eax
  4324fb:	add    dl,dh
  4324fd:	jne    0x4324fe
  4324ff:	icebp  
  432500:	loop   0x432501
  432502:	int3   
  432503:	add    DWORD PTR [esi],0x3d
  432506:	int3   
  432507:	ss jecxz 0x432509
  43250a:	add    BYTE PTR [eax],al
  43250c:	or     eax,0x826d8361
  432511:	add    bh,bh
  432513:	int3   
  432514:	xor    al,0xd7
  432516:	jmp    esp
  432518:	(bad)  
  432519:	cmp    edi,0x0
  43251c:	sbb    DWORD PTR [edi],0xffffffff
  43251f:	xchg   esp,eax
  432520:	imul   edi,edi,0xd45c00ff
  432526:	int3   
  432527:	mov    gs,WORD PTR [edx+0x1000ffcc]
  43252d:	sar    edi,cl
  43252f:	adc    edx,DWORD PTR [ecx-0x2000001]
  432535:	push   esi
  432536:	add    BYTE PTR ds:0xffffff3a,ch
  43253c:	mov    edi,0xab94002b
  432541:	(bad)  
  432542:	(bad)  
  432543:	call   ebx
  432545:	repz (bad) 
  432547:	cmp    bh,al
  432549:	add    BYTE PTR [ecx-0x7ca65100],cl
  43254f:	inc    ebx
  432550:	fild   WORD PTR [ebx-0x1b177c7d]
  432556:	add    BYTE PTR [ebp-0xf3],al
  43255c:	mov    esp,0x482789ca
  432561:	add    BYTE PTR [ebx-0x4e5e01],al
  432567:	fld    QWORD PTR [ecx-0x1]
  43256a:	add    BYTE PTR [eax],al
  43256c:	pop    ecx
  43256d:	pop    ebx
  43256e:	cmp    DWORD PTR [esi],0xffffffb2
  432571:	add    ah,cl
  432573:	push   ebx
  432575:	and    bh,bh
  432577:	and    al,0xa4
  432579:	inc    DWORD PTR [eax]
  43257b:	int3   
  43257c:	and    eax,0xdb4005d
  432581:	inc    DWORD PTR [eax]
  432583:	add    BYTE PTR [ebp+0x72],ch
  432586:	jmp    ebp
  432588:	pop    esi
  432589:	or     esp,0xffffffff
  43258c:	lods   al,BYTE PTR ds:[esi]
  43258d:	inc    esi
  43258e:	mov    DWORD PTR [eax+0x44],esi
  432591:	add    BYTE PTR [ebx-0x994600],al
  432597:	pop    esp
  432598:	xchg   bh,bh
  43259a:	add    BYTE PTR [eax],al
  43259c:	pop    es
  43259d:	hlt    
  43259e:	call   FWORD PTR [edx-0xff00ec]
  4325a4:	fisub  DWORD PTR [edi-0x1]
  4325a7:	jo     0x4325d6
  4325a9:	inc    DWORD PTR [ebx-0x33a8e901]
  4325af:	je     0x432545
  4325b1:	int3   
  4325b2:	inc    DWORD PTR [ebx-0x2e7ce9e9]
  4325b8:	stos   BYTE PTR es:[edi],al
  4325b9:	or     esp,0xffffff89
  4325bc:	stos   BYTE PTR es:[edi],al
  4325bd:	push   edi
  4325be:	mov    DWORD PTR [edx],edx
  4325c0:	pop    edx
  4325c1:	add    bh,bh
  4325c3:	call   DWORD PTR [ebx-0x63]
  4325c6:	call   ecx
  4325c8:	fld    DWORD PTR [eax]
  4325ca:	cmp    edi,0x33
  4325cd:	ins    BYTE PTR es:[edi],dx
  4325ce:	push   esi
  4325d0:	mov    ah,0x89
  4325d2:	inc    DWORD PTR [eax]
  4325d4:	data16 into 
  4325d6:	add    bh,ch
  4325d8:	or     BYTE PTR [eax],al
  4325da:	inc    DWORD PTR [ebx+0xf005ccb]
  4325e0:	xchg   ebp,eax
  4325e1:	inc    DWORD PTR [eax]
  4325e3:	or     DWORD PTR [eax+0x23cc0060],0x0
  4325ea:	dec    DWORD PTR [ecx-0x1effa114]
  4325f0:	adc    edi,edi
  4325f2:	inc    DWORD PTR [ebx-0x7900df1b]
  4325f8:	je     0x4325f9
  4325fa:	(bad)  
  4325fb:	inc    eax
  4325fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4325fe:	add    BYTE PTR [ecx+0xff87],bh
  432604:	sub    bh,BYTE PTR [esi-0x339b4c00]
  43260a:	inc    DWORD PTR [eax]
  43260c:	adc    BYTE PTR [eax+0x0],dh
  43260f:	mov    ecx,0xff00ff39
  432614:	sub    DWORD PTR [ecx+ecx*4-0x46],ebx
  432618:	call   0x895a:0x7dff00ff
  43261f:	and    al,0x11
  432621:	cmp    edi,0x0
  432624:	in     al,0x9e
  432626:	add    BYTE PTR [ecx-0x69],cl
  432629:	(bad)  
  43262a:	(bad)  
  43262b:	(bad)  
  43262c:	(bad)  [eax-0xe43000]
  432632:	inc    DWORD PTR [eax]
  432634:	or     eax,0x3246001f
  432639:	(bad)  
  43263a:	(bad)  
  43263b:	dec    DWORD PTR [esi-0x15cc0086]
  432641:	mov    DWORD PTR [ecx-0xa17834],ecx
  432647:	inc    ebx
  432648:	and    al,BYTE PTR [eax]
  43264a:	(bad)  
  43264b:	call   edi
  43264d:	mov    ebx,0xff9aab00
  432652:	add    DWORD PTR [ebx-0x45ff6642],0x16
  432659:	add    DWORD PTR [eax],0x0
  43265c:	dec    esi
  43265d:	imul   edi,edi,0xff08cb
  432663:	mov    DWORD PTR [eax],eax
  432665:	sub    BYTE PTR [eax],al
  432667:	jmp    0x42a9dd
  43266c:	sub    eax,0xb2040063
  432671:	(bad)  
  432672:	inc    DWORD PTR [eax]
  432674:	push   eax
  432675:	aaa    
  432676:	add    BYTE PTR [edx+ecx*4+0x0],ch
  43267a:	(bad)  
  43267b:	push   DWORD PTR [edx-0x62]
  43267e:	add    ch,ah
  432680:	lods   eax,DWORD PTR ds:[esi]
  432681:	(bad)  
  432682:	inc    DWORD PTR [ebx-0x107c80eb]
  432688:	es add bh,bh
  43268b:	push   DWORD PTR [edx-0x73]
  43268e:	add    BYTE PTR ds:0xff8900b9,ah
  432694:	test   BYTE PTR ds:0xfff03389,bl
  43269a:	add    ah,cl
  43269c:	pop    ecx
  43269d:	sbb    BYTE PTR [eax],al
  43269f:	ret    0xff64
  4326a2:	cmp    edi,0x1
  4326a5:	cmp    edi,0xff009274
  4326ab:	add    BYTE PTR [ebx+0x54],ch
  4326ae:	int3   
  4326af:	add    dl,BYTE PTR [ebx-0x4800007d]
  4326b5:	(bad)
  4326b8:	xor    DWORD PTR [ebx-0x5a6cff01],eax
  4326be:	push   DWORD PTR [edx-0x69]
  4326c1:	(bad)  
  4326c2:	inc    DWORD PTR [eax]
  4326c4:	or     BYTE PTR [edi-0x33c48700],dh
  4326ca:	dec    esp
  4326cc:	fcmovb st,st(2)
  4326ce:	(bad)  
  4326cf:	fbld   TBYTE PTR ds:0xf50083ff
  4326d5:	out    dx,eax
  4326d6:	inc    DWORD PTR [esi+0x14]
  4326d9:	dec    DWORD PTR [ecx-0x95e101]
  4326df:	xchg   DWORD PTR [ecx+0x0],esi
  4326e2:	(bad)  
  4326e3:	push   DWORD PTR [eax]
  4326e5:	jne    0x4326b3
  4326e7:	aad    0x3
  4326e9:	inc    DWORD PTR [eax]
  4326eb:	call   FWORD PTR [ecx]
  4326ed:	fdivr  st,st(7)
  4326ef:	ret    0xff90
  4326f2:	inc    DWORD PTR [eax]
  4326f4:	add    al,BYTE PTR [ebp+0x2d8183]
  4326fa:	(bad)  
  4326fb:	jmp    DWORD PTR [edi+edi*1]
  4326fe:	add    BYTE PTR [edi],ch
  432700:	in     al,dx
  432701:	add    BYTE PTR [eax],al
  432703:	or     DWORD PTR [edx+edx*4],0xffffffff
  432707:	fdivrp st(5),st
  432709:	int3   
  43270a:	inc    DWORD PTR [ebx+0x9831a46]
  432710:	or     edi,edi
  432712:	inc    DWORD PTR [ebx+0x72ffbfa0]
  432718:	xchg   edi,eax
  432719:	mov    DWORD PTR [ecx-0xaa8e00],ecx
  43271f:	aas    
  432720:	pusha  
  432721:	cmp    edi,0xffffff89
  432724:	push   edx
  432725:	enter  0x83cc,0x45
  432729:	inc    DWORD PTR [ebx+0xaacf00]
  43272f:	or     al,0x2d
  432731:	mov    edi,edi
  432733:	jmp    DWORD PTR [eax]
  432735:	mov    al,ds:0xff992e89
  43273a:	int3   
  43273b:	jmp    DWORD PTR [esi-0x43430042]
  432741:	inc    DWORD PTR [ebx+0x9b9bff]
  432747:	sub    al,0xab
  432749:	(bad)  
  43274a:	inc    DWORD PTR [ebx+0x4300e276]
  432750:	or     bh,bh
  432752:	inc    DWORD PTR [eax]
  432754:	push   0xffffffcc
  432756:	add    dl,cl
  432758:	int3   
  432759:	int3   
  43275a:	int3   
  43275b:	int3   
  43275c:	int3   
  43275d:	int3   
  43275e:	int3   
  43275f:	int3   
  432760:	(bad)  
  432761:	(bad)  
  432762:	(bad)  
  432763:	fnstcw WORD PTR [eax-0xb12501]
  432769:	add    ecx,0x4f
  43276c:	(bad)  
  43276d:	sti    
  43276e:	cmp    DWORD PTR [eax],eax
  432770:	add    BYTE PTR [eax],al
  432772:	jmp    FWORD PTR [ebp+0x20]
  432775:	add    BYTE PTR [esi-0x59],ch
  432778:	add    bh,bh
  43277a:	ret    0x65
  43277d:	mov    ah,0x99
  43277f:	add    BYTE PTR [edi-0x50c101],dh
  432785:	int3   
  432786:	mov    ebx,0x1e88ba00
  43278b:	add    BYTE PTR gs:[eax],al
  43278e:	add    bh,bh
  432790:	(bad)  [ecx-0x7c0088c9]
  432796:	cli    
  432797:	add    BYTE PTR [esi-0x7c44d328],al
  43279d:	mov    edi,edi
  43279f:	dec    DWORD PTR [esi+0x9fe2ff]
  4327a5:	(bad)  
  4327a6:	jg     0x4327a8
  4327a8:	cmp    DWORD PTR [ebp-0x70],edx
  4327ab:	test   DWORD PTR [eax],eax
  4327ad:	inc    DWORD PTR [ebx-0x2c76e401]
  4327b3:	(bad)  
  4327b4:	inc    DWORD PTR [eax]
  4327b6:	cmp    eax,DWORD PTR [eax]
  4327b8:	add    al,0x84
  4327ba:	adc    eax,0x8324
  4327bf:	dec    DWORD PTR [edx-0x1]
  4327c2:	push   cs
  4327c3:	mov    ?,edi
  4327c5:	(bad)  
  4327c6:	std    
  4327c7:	add    BYTE PTR [esi+0x9bf4d8],ah
  4327cd:	add    DWORD PTR [eax],0xffffffff
  4327d0:	add    edi,edi
  4327d2:	dec    edi
  4327d3:	mov    eax,DWORD PTR [eax]
  4327d5:	int3   
  4327d6:	cmp    bh,bh
  4327d8:	mov    ds:0xcce9da6e,al
  4327dd:	(bad)  
  4327de:	inc    DWORD PTR [ebx-0x204bff5d]
  4327e4:	inc    DWORD PTR [eax]
  4327e6:	dec    edx
  4327e7:	add    bh,cl
  4327e9:	test   BYTE PTR [edx+eiz*8+0xffff83],0x44
  4327f1:	push   DWORD PTR [eax+0x2e]
  4327f4:	add    BYTE PTR [eax],al
  4327f6:	call   0xf34934fa
  4327fb:	pop    edi
  4327fc:	(bad)  
  4327fd:	(bad)  
  4327fe:	inc    DWORD PTR [ebx-0x444c7c50]
  432804:	cmp    edi,0xffffff9c
  432807:	add    DWORD PTR [ecx],0xffffffd3
  43280a:	ret    
  43280b:	adc    bh,bh
  43280d:	dec    DWORD PTR [ecx-0x68ffa47d]
  432813:	aas    
  432814:	int3   
  432815:	(bad)  
  432816:	jmp    0x4327e4
  432818:	bound  esi,QWORD PTR [eax+0x6e]
  43281b:	and    bh,bh
  43281d:	mov    DWORD PTR [ebx-0x2a008101],eax
  432823:	jp     0x4327ae
  432825:	(bad)  
  432826:	in     eax,dx
  432827:	int3   
  432828:	or     ecx,DWORD PTR [ecx-0x767c47c8]
  43282e:	cmp    edi,0x37
  432831:	mov    DWORD PTR [eax+ebp*1-0x7ce67601],ebp
  432838:	mov    esi,0xff08d2b9
  43283d:	add    BYTE PTR [ecx+0x33ff70ff],cl
  432843:	add    BYTE PTR cs:[ebx-0x217e00b6],al
  43284a:	fldenv [eax+0xff0000]
  432850:	sub    eax,DWORD PTR [ebx-0x30f]
  432856:	or     ecx,DWORD PTR [ecx-0x4a4c38c8]
  43285c:	int3   
  43285d:	inc    DWORD PTR [eax]
  43285f:	sub    DWORD PTR [eax],0xffffffff
  432862:	push   edi
  432863:	push   esi
  432864:	inc    DWORD PTR [eax]
  432866:	xor    bh,bh
  432868:	dec    ebp
  432869:	jbe    0x43289d
  43286b:	jno    0x432839
  43286d:	add    bh,bh
  43286f:	adc    DWORD PTR [edi-0x1],0xffffffd4
  432873:	test   DWORD PTR [ebx+0x63fffc83],eax
  432879:	xchg   ebx,eax
  43287a:	adc    edx,edi
  43287c:	add    BYTE PTR [ebx-0x9bff7d],al
  432882:	pop    esp
  432883:	mov    esp,ecx
  432885:	add    al,bl
  432887:	int3   
  432888:	outs   dx,DWORD PTR ds:[esi]
  432889:	mov    bh,0x29
  43288b:	mov    bh,0xff
  43288d:	(bad)  
  43288e:	dec    DWORD PTR [ecx+0x6166fff7]
  432894:	cmp    edi,0x28
  432897:	int3   
  432898:	push   cs
  432899:	jo     0x4328bf
  43289b:	out    0x83,al
  43289d:	add    bh,bh
  43289f:	inc    DWORD PTR [ecx-0x1]
  4328a2:	inc    edx
  4328a3:	loopne 0x432871
  4328a5:	call   FWORD PTR [edx-0x6a459501]
  4328ab:	jno    0x432836
  4328ad:	inc    DWORD PTR [eax]
  4328af:	add    al,ch
  4328b1:	int3   
  4328b2:	loope  0x432919
  4328b4:	inc    DWORD PTR [eax]
  4328b6:	push   esi
  4328b7:	call   DWORD PTR [ebx]
  4328b9:	ror    DWORD PTR [edi],0x6c
  4328bc:	dec    esp
  4328be:	add    BYTE PTR [eax],al
  4328c0:	cmp    al,BYTE PTR [eax]
  4328c2:	dec    ebp
  4328c3:	lods   eax,DWORD PTR ds:[esi]
  4328c4:	add    BYTE PTR [eax],al
  4328c6:	pop    ebx
  4328c7:	mov    DWORD PTR [edi+esi*2-0x4c],eax
  4328cb:	(bad)  
  4328cd:	add    BYTE PTR [ecx-0x7a003f01],cl
  4328d3:	arpl   sp,cx
  4328d5:	inc    DWORD PTR [ebx-0x1]
  4328d8:	fs icebp 
  4328da:	wbinvd 
  4328dc:	cmp    edi,0xffffffcc
  4328df:	inc    DWORD PTR [edi]
  4328e1:	add    BYTE PTR ds:0x46ffff1b,dh
  4328e7:	dec    ebp
  4328e9:	add    BYTE PTR [esi],dl
  4328eb:	scas   al,BYTE PTR es:[edi]
  4328ec:	add    DWORD PTR [eax],0xffffffff
  4328ef:	jmp    DWORD PTR [ebx+eax*4-0xa]
  4328f3:	mov    al,ds:0x831eff00
  4328f8:	lock or bh,bl
  4328fb:	push   ecx
  4328fc:	cmp    edi,0x0
  4328ff:	add    BYTE PTR [edx+0xd0aeff],al
  432905:	mov    edx,eax
  432907:	and    DWORD PTR [esi+0xfe8599],0xffffffff
  43290e:	add    DWORD PTR [eax],0x2
  432911:	add    dh,dl
  432913:	lods   eax,DWORD PTR ds:[esi]
  432914:	add    BYTE PTR [ebx-0x55b6ff56],al
  43291a:	cmp    DWORD PTR [ebx+0x0],ebp
  43291d:	add    bh,bh
  43291f:	inc    DWORD PTR ds:0x5620ff
  432925:	int3   
  432926:	mov    ebx,0xb234db83
  43292b:	daa    
  43292c:	add    bh,bh
  43292e:	(bad)  
  43292f:	(bad)  
  432930:	mov    esi,0xd06a89
  432935:	call   DWORD PTR [ecx]
  432937:	inc    ecx
  432939:	inc    edx
  43293a:	mov    ah,0x3c
  43293c:	inc    DWORD PTR [eax]
  43293e:	add    ah,cl
  432940:	mov    ebx,0xff53b1ff
  432945:	push   edx
  432947:	jmp    FWORD PTR [ebx-0x85c215]
  43294d:	(bad)  
  43294e:	(bad)  
  43294f:	(bad)  
  432950:	in     al,dx
  432951:	jmp    edx
  432953:	imul   edi,edi,0x8fff21ff
  432959:	add    BYTE PTR cs:[eax],dl
  43295c:	dec    esp
  43295e:	add    BYTE PTR [ebx-0x2444ffa4],al
  432964:	inc    DWORD PTR [ebx+0x363e89b0]
  43296a:	mov    esi,es
  43296c:	add    BYTE PTR [eax],al
  43296e:	add    BYTE PTR [ebx-0x2df333f1],al
  432974:	(bad)  
  432975:	(bad)  
  432976:	call   0x74a21404
  43297b:	pop    esp
  43297c:	mov    edi,edi
  43297e:	(bad)  
  43297f:	(bad)  
  432980:	xor    DWORD PTR ds:[edi+0x5cffff1a],0xffffff83
  432988:	and    al,0x43
  43298a:	mov    ch,0x6f
  43298c:	(bad)  
  43298d:	inc    DWORD PTR [ebx+0x6500aaff]
  432993:	push   eax
  432994:	dec    DWORD PTR [ecx+0x5844fffb]
  43299a:	mov    esp,0xff830020
  43299f:	call   FWORD PTR [edi+edi*8-0x8fcc]
  4329a6:	test   bh,bh
  4329a8:	or     BYTE PTR [esi+0x9c07],cl
  4329ae:	(bad)  
  4329af:	dec    DWORD PTR [edi-0x7d]
  4329b2:	pop    edx
  4329b3:	or     bh,bh
  4329b5:	add    BYTE PTR [esi],dh
  4329b7:	add    BYTE PTR [eax+eax*2-0x7c001aba],dl
  4329be:	dec    esp
  4329c0:	mov    es,WORD PTR [eax]
  4329c2:	mov    edi,0x8bff0034
  4329c7:	int3   
  4329c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4329c9:	xchg   edx,eax
  4329ca:	int    0x44
  4329cc:	int3   
  4329cd:	inc    DWORD PTR [ebx+0x12ffe7ff]
  4329d3:	cmp    eax,0x10ff00
  4329d8:	adc    al,BYTE PTR [ebp+0xccfd19]
  4329de:	add    BYTE PTR [ebx-0x21fc7c0f],al
  4329e4:	inc    DWORD PTR [eax]
  4329e6:	mov    al,ds:0xf7b67c83
  4329eb:	jo     0x4329ec
  4329ed:	mov    edi,edi
  4329ef:	add    BYTE PTR [edx],bh
  4329f1:	add    BYTE PTR [ebx],al
  4329f3:	jno    0x4329f5
  4329f5:	push   DWORD PTR [ecx+0xad5d8ff]
  4329fb:	push   0x830000ff
  432a00:	mov    BYTE PTR [ebx+0x890602],al
  432a06:	sub    eax,0x19bad8ff
  432a0b:	pushf  
  432a0c:	dec    DWORD PTR [ecx+0xa6ff83]
  432a12:	mov    bh,0xf1
  432a14:	add    BYTE PTR [eax],al
  432a16:	out    dx,eax
  432a17:	add    BYTE PTR [ecx-0x33346670],cl
  432a1d:	inc    DWORD PTR [eax]
  432a1f:	int3   
  432a20:	pop    esp
  432a21:	dec    DWORD PTR [edx-0x11]
  432a24:	dec    DWORD PTR [ecx-0x65d2ff65]
  432a2a:	mov    bl,0x74
  432a2c:	inc    DWORD PTR [eax]
  432a2e:	add    BYTE PTR [ecx+0x1d2ff42],cl
  432a34:	add    bh,bh
  432a36:	fwait
  432a37:	int3   
  432a38:	dec    ebx
  432a39:	push   ebx
  432a3a:	call   0xcc432afc
  432a3f:	jmp    esi
  432a41:	add    BYTE PTR [edx+0x3a],ah
  432a44:	cmp    edi,0xffffff8a
  432a47:	mov    ecx,ebp
  432a49:	or     BYTE PTR [esi],dh
  432a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a4c:	(bad)  
  432a4d:	inc    DWORD PTR [ebx-0x6d006c77]
  432a53:	sti    
  432a54:	(bad)  
  432a55:	jmp    FWORD PTR [edx-0x18dae700]
  432a5b:	lds    eax,FWORD PTR [eax]
  432a5d:	inc    DWORD PTR [ebx-0x13004601]
  432a63:	push   ebp
  432a64:	cmp    edi,0x7d
  432a67:	mov    DWORD PTR [edi*8-0x7c00ea52],esi
  432a6e:	mov    DWORD PTR [ebx-0x67b57c86],eax
  432a74:	mov    edi,edi
  432a76:	sbb    al,0xff
  432a78:	pop    eax
  432a79:	je     0x432a97
  432a7b:	sbb    al,0x0
  432a7d:	add    DWORD PTR [eax],0x0
  432a80:	sar    bh,1
  432a82:	mov    al,ds:0x13830023
  432a87:	add    BYTE PTR [ebx],bh
  432a89:	xchg   ecx,eax
  432a8a:	in     al,0xa
  432a8c:	(bad)  
  432a8d:	dec    esp
  432a8f:	int3   
  432a90:	lods   eax,DWORD PTR ds:[esi]
  432a91:	call   DWORD PTR [ebx-0x3d0076b9]
  432a97:	(bad)  
  432a98:	jmp    0x432a41
  432a9a:	cli    
  432a9b:	ins    BYTE PTR es:[edi],dx
  432a9c:	int3   
  432a9d:	add    BYTE PTR [ebx+0x54ff4489],al
  432aa3:	adc    al,0x89
  432aa5:	jmp    ecx
  432aa7:	mov    DWORD PTR [edx],esp
  432aa9:	call   0xffcc:0xff9e64
  432ab0:	cs or  ebx,0x3c
  432ab4:	int3   
  432ab5:	add    BYTE PTR [edi+edi*8+0x4],bh
  432ab9:	inc    ebx
  432aba:	leave  
  432abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432abc:	add    BYTE PTR [eax],al
  432abe:	inc    DWORD PTR [eax]
  432ac0:	pop    esp
  432ac1:	(bad)  
  432ac2:	mov    esp,0x5d83ffe3
  432ac7:	or     DWORD PTR [ecx+edi*1-0x6],0x5d
  432acc:	add    BYTE PTR [eax],al
  432ace:	(bad)  
  432acf:	jmp    FWORD PTR [esi-0xd52e00]
  432ad5:	add    BYTE PTR [ebx],dh
  432ad7:	(bad)  
  432ad8:	cmp    eax,0x834fa814
  432add:	or     esp,0xffffffff
  432ae0:	dec    esi
  432ae1:	add    BYTE PTR [edi],bh
  432ae3:	and    BYTE PTR [eax],al
  432ae5:	add    bl,ah
  432ae7:	inc    DWORD PTR [edx-0x2a]
  432aea:	sub    DWORD PTR [ebp-0x1],edx
  432af0:	dec    esp
  432af1:	(bad)  
  432af2:	mov    ebp,0x5eff89a1
  432af7:	add    BYTE PTR [eax-0x7e],cl
  432afa:	xor    bl,BYTE PTR [esi]
  432afc:	mov    edi,edi
  432afe:	inc    DWORD PTR [ebx-0x7b8e004b]
  432b04:	add    ah,cl
  432b06:	aam    0xff
  432b08:	ins    DWORD PTR es:[edi],dx
  432b09:	aas    
  432b0a:	pop    edi
  432b0b:	aaa    
  432b0c:	int3   
  432b0d:	mov    edi,edi
  432b0f:	and    DWORD PTR ds:0x89d8be00,0xffffff89
  432b16:	push   ebp
  432b17:	add    BYTE PTR [ebx+ecx*1-0xf477],al
  432b1e:	or     esp,0x71
  432b21:	(bad)  
  432b22:	fdiv   DWORD PTR [ebx+0x2cffff]
  432b28:	in     eax,dx
  432b29:	std    
  432b2a:	xor    ah,cl
  432b2c:	add    DWORD PTR [eax],0xffffff83
  432b2f:	jmp    FWORD PTR [eax-0x64c701]
  432b35:	inc    DWORD PTR [ebp+0x4dbbf889]
  432b3b:	test   BYTE PTR [eax],al
  432b3d:	add    DWORD PTR [eax],0xffffff83
  432b40:	retf   0x3800
  432b43:	sar    bh,cl
  432b45:	push   DWORD PTR [eax+0x1cc1f283]
  432b4b:	loopne 0x432b4c
  432b4d:	inc    DWORD PTR [ebx-0x297cb934]
  432b53:	pop    edi
  432b54:	(bad)  
  432b55:	jmp    FWORD PTR [ebx+eax*4]
  432b58:	mov    DWORD PTR [ecx-0x5c],ebp
  432b5b:	cwde   
  432b5c:	(bad)  
  432b5d:	inc    DWORD PTR [ebx+0x3400ccff]
  432b63:	mov    eax,0xffdaffcc
  432b68:	xor    eax,0xff6186c0
  432b6d:	int3   
  432b6e:	dec    esp
  432b70:	ss mov ecx,ebx
  432b73:	sti    
  432b74:	inc    DWORD PTR [ebx+0x1ba2837b]
  432b7a:	imul   ecx,DWORD PTR ds:0x83838300,0xe07b00fd
  432b84:	add    BYTE PTR [eax],al
  432b86:	add    ecx,esp
  432b88:	pusha  
  432b89:	dec    esi
  432b8a:	int3   
  432b8b:	mov    esp,0xffffff00
  432b90:	or     DWORD PTR [ebx-0x9200],eax
  432b96:	xchg   BYTE PTR [ebx+0x5d293f9b],al
  432b9c:	(bad)  
  432b9d:	inc    DWORD PTR [ebx+0x43005a00]
  432ba3:	out    dx,eax
  432ba4:	inc    DWORD PTR [eax]
  432ba6:	jge    0x432ba8
  432ba8:	outs   dx,DWORD PTR ds:[esi]
  432ba9:	fcmovnbe st,st(6)
  432bab:	sbb    bh,bh
  432bad:	inc    DWORD PTR [eax]
  432baf:	add    bl,dh
  432bb1:	call   DWORD PTR [ecx-0x51]
  432bb4:	(bad)  
  432bb5:	inc    DWORD PTR [edx]
  432bb7:	push   DWORD PTR [eax-0x7c8c99fc]
  432bbd:	or     esp,0xffffffff
  432bc0:	out    0xff,eax
  432bc2:	add    BYTE PTR [ecx+0x2a89ff],bh
  432bc8:	dec    ecx
  432bc9:	or     dh,BYTE PTR [ecx+ecx*1]
  432bcc:	inc    DWORD PTR [ebx-0x76fc0000]
  432bd2:	cwde   
  432bd3:	mov    eax,ds:0xff36ff00
  432bd8:	les    ebp,FWORD PTR [ebx+0x4719]
  432bde:	inc    DWORD PTR [ebx-0x4467ffeb]
  432be4:	add    BYTE PTR [eax],al
  432be6:	push   dx
  432be9:	rcr    DWORD PTR [edx-0x71],cl
  432bec:	int3   
  432bed:	add    bh,bh
  432bef:	add    ah,cl
  432bf1:	inc    DWORD PTR [edx+0x7b890031]
  432bf7:	call   FWORD PTR [esi]
  432bf9:	ret    0x1c4a
  432bfc:	(bad)  
  432bfd:	inc    DWORD PTR [ebx-0x127c4d34]
  432c03:	int3   
  432c04:	inc    DWORD PTR [eax]
  432c06:	and    eax,DWORD PTR [eax]
  432c08:	mov    dh,BYTE PTR [ebp-0x1]
  432c0b:	ins    BYTE PTR es:[edi],dx
  432c0c:	add    BYTE PTR [eax],al
  432c0e:	add    DWORD PTR [eax],0x30
  432c11:	add    BYTE PTR [edx+0x59],dl
  432c14:	add    ah,cl
  432c16:	cmp    edi,0x5d
  432c19:	cmp    ecx,DWORD PTR [edi-0x21]
  432c1c:	dec    esp
  432c1e:	add    bh,bh
  432c20:	cmp    eax,0xff1d3383
  432c25:	mov    ebx,ebp
  432c27:	inc    DWORD PTR [eax+0x2f]
  432c2a:	imul   ebp,DWORD PTR [edi],0xff00ff
  432c30:	adc    bh,bh
  432c32:	and    esi,esp
  432c34:	mov    DWORD PTR [eax],eax
  432c36:	mov    al,ds:0xf6662d00
  432c3b:	aas    
  432c3c:	add    bh,bh
  432c3e:	mov    edi,edi
  432c40:	mov    edi,0x93e0ff
  432c45:	xor    DWORD PTR [esi],0xffffffff
  432c48:	pop    ebp
  432c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c4a:	push   0x62
  432c4c:	add    bh,bh
  432c4e:	(bad)  
  432c4f:	inc    DWORD PTR [ebx-0x7d]
  432c52:	lea    edi,[ecx-0x260000]
  432c58:	in     eax,0x0
  432c5a:	shr    BYTE PTR [ebx-0x7c0100],0xe6
  432c61:	add    BYTE PTR [esi],al
  432c63:	xchg   ebx,eax
  432c64:	add    BYTE PTR [eax],al
  432c66:	push   esi
  432c67:	call   FWORD PTR [esp+ebp*4-0x33ff4473]
  432c6e:	add    BYTE PTR [eax],al
  432c70:	enter  0x8eff,0xe9
  432c74:	add    bh,bh
  432c76:	xor    al,BYTE PTR [eax]
  432c78:	mov    ebp,0xff2fe1ce
  432c7d:	inc    DWORD PTR [eax]
  432c7f:	mov    DWORD PTR [eax+eax*1],ecx
  432c82:	xchg   edx,eax
  432c84:	(bad)  
  432c85:	inc    DWORD PTR [esi+0x0]
  432c88:	loope  0x432d09
  432c8a:	xchg   ebp,eax
  432c8b:	sub    bh,bh
  432c8d:	(bad)  
  432c8e:	inc    DWORD PTR [eax]
  432c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432c91:	add    BYTE PTR [ecx-0x66],bh
  432c94:	add    ah,cl
  432c96:	data16 add BYTE PTR [edi-0x2e],bh
  432c9a:	add    DWORD PTR [edx+0x8300cc],esi
  432ca0:	lods   al,BYTE PTR ds:[esi]
  432ca1:	add    BYTE PTR [ebx-0x46],cl
  432ca4:	add    bh,bh
  432ca6:	add    BYTE PTR fs:[edx+0x282bcd],ah
  432cad:	add    bh,bh
  432caf:	jmp    DWORD PTR [edx]
  432cb1:	adc    DWORD PTR [esi+0x8],0x0
  432cb5:	jmp    DWORD PTR [ecx]
  432cb7:	call   FWORD PTR [edi]
  432cb9:	mov    ch,0x46
  432cbb:	or     al,0xff
  432cbd:	dec    esp
  432cbf:	sub    DWORD PTR [ecx-0x7af801],0xffffffff
  432cc6:	mov    bh,bh
  432cc8:	iret   
  432cc9:	fcmovbe st,st(3)
  432ccb:	ret    
  432ccc:	(bad)  
  432ccd:	inc    DWORD PTR [eax]
  432ccf:	int3   
  432cd0:	mov    eax,ds:0x93b2cc
  432cd5:	add    BYTE PTR [ecx],bl
  432cd7:	or     edi,0xffffffeb
  432cda:	iret   
  432cdb:	fld    QWORD PTR [eax]
  432cdd:	int3   
  432cde:	dec    esp
  432ce0:	into   
  432ce1:	jmp    FWORD PTR [edx+ecx*8+0x0]
  432ce5:	inc    esi
  432ce7:	(bad)  
  432ce8:	cmp    bh,BYTE PTR [eax+0x13]
  432ceb:	push   0xcc
  432cf0:	push   ecx
  432cf1:	add    BYTE PTR [esi-0x2c],dl
  432cf4:	add    DWORD PTR [eax],0x42
  432cf7:	add    BYTE PTR [esp+edi*2+0x2d],ah
  432cfb:	cdq    
  432cfc:	mov    DWORD PTR [eax],eax
  432cfe:	int3   
  432cff:	add    BYTE PTR [edi-0x34],ah
  432d02:	or     BYTE PTR [ebx],cl
  432d04:	inc    DWORD PTR [eax]
  432d06:	fwait
  432d07:	int3   
  432d08:	sub    eax,0xff5fc45b
  432d0d:	add    bh,bh
  432d0f:	push   DWORD PTR [edx]
  432d11:	jmp    edi
  432d13:	clc    
  432d14:	dec    DWORD PTR [ecx+0x759683f9]
  432d1a:	sbb    edx,ecx
  432d1c:	add    bh,bh
  432d1e:	add    BYTE PTR [ebx-0x382cff93],al
  432d24:	inc    DWORD PTR [ebx+0x26eeffaf]
  432d2a:	mov    eax,ds:0xffcc6e
  432d2f:	call   DWORD PTR [ebp-0x1]
  432d32:	(bad)  
  432d34:	dec    DWORD PTR [ecx+0x1e2a834a]
  432d3a:	lds    edx,FWORD PTR [edi-0x1]
  432d3d:	(bad)  
  432d3e:	(bad)  
  432d3f:	call   DWORD PTR [esi+0xfd2400]
  432d45:	dec    DWORD PTR [esi-0x7d]
  432d48:	mov    ebp,0x89aae9e9
  432d4d:	(bad)  
  432d4e:	(bad)  
  432d4f:	dec    DWORD PTR [edx-0x77]
  432d52:	or     ecx,ebp
  432d54:	int3   
  432d55:	mov    esp,ebp
  432d57:	push   edi
  432d59:	mov    eax,0xff2a67
  432d5e:	inc    DWORD PTR [eax]
  432d60:	cli    
  432d61:	call   FWORD PTR [eax+0x1]
  432d64:	inc    DWORD PTR [eax]
  432d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d67:	inc    DWORD PTR [esi+0x2b]
  432d6a:	leave  
  432d6b:	rol    DWORD PTR [eax],0x0
  432d6e:	add    BYTE PTR [eax],al
  432d70:	xlat   BYTE PTR ds:[ebx]
  432d71:	int3   
  432d72:	rol    BYTE PTR ss:[eax],0xff
  432d76:	pop    ds
  432d77:	jmp    FWORD PTR [ecx]
  432d79:	std    
  432d7a:	outs   dx,DWORD PTR ds:[esi]
  432d7b:	fdivp  st(7),st
  432d7d:	add    BYTE PTR [eax],al
  432d7f:	(bad)  
  432d80:	fcos   
  432d82:	or     al,0x23
  432d84:	(bad)  
  432d85:	call   FWORD PTR [edx]
  432d87:	mov    ecx,ebx
  432d89:	stos   DWORD PTR es:[edi],eax
  432d8a:	fsubr  DWORD PTR [ebp-0x7c0001]
  432d90:	(bad)  
  432d91:	(bad)  
  432d92:	jmp    0x10442d57
  432d97:	(bad)  
  432d98:	cmp    eax,0xff8e4fec
  432d9d:	add    bh,bh
  432d9f:	add    BYTE PTR [edi-0x7c9b5c00],bh
  432da5:	dec    DWORD PTR [edx+0x58aa28ff]
  432dab:	aaa    
  432dac:	add    bh,bh
  432dae:	inc    DWORD PTR [ebx-0x579aff5c]
  432db4:	mov    edi,edi
  432db6:	bound  eax,QWORD PTR [eax]
  432db8:	lods   al,BYTE PTR ds:[esi]
  432db9:	fwait
  432dba:	out    0xb,al
  432dbc:	dec    DWORD PTR [ecx+0x5dff83]
  432dc2:	cwde   
  432dc3:	jno    0x432dc4
  432dc5:	jmp    FWORD PTR [edi+edi*8]
  432dc8:	jl     0x432e2d
  432dca:	pop    eax
  432dcb:	bound  eax,QWORD PTR [eax]
  432dcd:	(bad)  
  432dce:	inc    DWORD PTR [eax]
  432dd0:	or     eax,DWORD PTR [ebx-0xff7670]
  432dd6:	mov    al,ds:0xab47a883
  432ddb:	fwait
  432ddc:	(bad)  
  432ddd:	dec    DWORD PTR [ecx-0x2b76e600]
  432de3:	mov    ds:0xff9100ff,al
  432de8:	cmp    di,WORD PTR [ecx]
  432deb:	mov    edi,0xff83cc00
  432df0:	dec    esi
  432df1:	push   DWORD PTR [edi]
  432df3:	lods   eax,DWORD PTR ds:[esi]
  432df4:	inc    DWORD PTR [eax]
  432df6:	add    eax,0x33fe82ff
  432dfb:	dec    ebp
  432dfc:	(bad)  
  432dfd:	(bad)  
  432dfe:	inc    DWORD PTR [eax]
  432e00:	sar    bh,cl
  432e02:	aaa    
  432e03:	arpl   WORD PTR [eax],ax
  432e05:	add    BYTE PTR [edi+0x3d55d589],al
  432e0b:	rol    DWORD PTR [eax],0x83
  432e0e:	(bad)  
  432e0f:	call   DWORD PTR [esi-0x34]
  432e12:	ret    0x98
  432e15:	add    BYTE PTR [esi-0x1],cl
  432e18:	addr16 test eax,0xff00f369
  432e1e:	int3   
  432e1f:	(bad)  
  432e20:	jge    0x432e21
  432e22:	xlat   BYTE PTR ds:[ebx]
  432e23:	xchg   esi,eax
  432e24:	inc    DWORD PTR [eax]
  432e26:	out    0x0,eax
  432e28:	cld    
  432e29:	jle    0x432e11
  432e2b:	into   
  432e2c:	add    BYTE PTR [eax],al
  432e2e:	int3   
  432e2f:	jmp    FWORD PTR [ebx]
  432e31:	add    BYTE PTR [edi],ah
  432e33:	xor    bh,bh
  432e35:	dec    ebp
  432e37:	(bad)  
  432e38:	cmp    al,0xad
  432e3a:	std    
  432e3b:	dec    ebp
  432e3c:	inc    DWORD PTR [eax]
  432e3e:	inc    DWORD PTR [eax]
  432e40:	pop    esi
  432e41:	call   DWORD PTR [edx-0x4b]
  432e44:	(bad)  
  432e45:	dec    DWORD PTR [ebx+eax*4]
  432e48:	xor    al,0xd3
  432e4a:	or     bh,dl
  432e4c:	inc    DWORD PTR [eax]
  432e4e:	add    BYTE PTR [ebx-0x3ca00c8],al
  432e54:	(bad)  
  432e55:	call   FWORD PTR [edi+edi*8]
  432e58:	xchg   esp,eax
  432e59:	dec    edi
  432e5a:	and    eax,0xc6
  432e5f:	sbb    DWORD PTR [ebx-0x975501],0xffffffff
  432e66:	jmp    0x84761837
  432e6b:	out    dx,eax
  432e6c:	(bad)  
  432e6d:	inc    DWORD PTR [ebx-0x547cf400]
  432e73:	inc    DWORD PTR fs:[eax]
  432e76:	aam    0xff
  432e78:	mov    ebx,0xcccd87
  432e7e:	(bad)  
  432e7f:	jmp    FWORD PTR ds:0x8309f3ff
  432e85:	dec    DWORD PTR [ebx+eax*4-0x31880e18]
  432e8c:	int3   
  432e8d:	(bad)  
  432e8e:	inc    DWORD PTR [ebx+0x1f7189be]
  432e94:	(bad)  
  432e95:	push   DWORD PTR [esi]
  432e97:	dec    DWORD PTR [eax-0x1f]
  432e9a:	xlat   BYTE PTR ds:[ebx]
  432e9b:	cmc    
  432e9c:	inc    DWORD PTR [eax]
  432e9e:	dec    esp
  432ea0:	xchg   edi,edi
  432ea2:	std    
  432ea3:	dec    ecx
  432ea4:	add    DWORD PTR [eax],0xffffff95
  432ea7:	call   DWORD PTR [ebp-0x75]
  432eaa:	xor    eax,0xcc8385
  432eaf:	call   FWORD PTR [edi+edi*8]
  432eb2:	cdq    
  432eb3:	lods   eax,DWORD PTR ds:[esi]
  432eb4:	add    BYTE PTR [eax],al
  432eb6:	out    0xcc,al
  432eb8:	fdiv   QWORD PTR [ebx-0x764cf2]
  432ebe:	mov    DWORD PTR [eax],eax
  432ec0:	fld    DWORD PTR [ebx-0x76334d7f]
  432ec6:	pop    ebx
  432ec7:	add    BYTE PTR [ebp-0x26ad49],bh
  432ecd:	add    DWORD PTR [eax],0x0
  432ed0:	out    dx,eax
  432ed1:	(bad)  
  432ed2:	cmp    al,0x22
  432ed4:	inc    DWORD PTR [eax]
  432ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432ed7:	dec    DWORD PTR [eax+ebx*2+0x7]
  432edb:	mov    ecx,0xffff00ff
  432ee0:	xchg   ecx,eax
  432ee1:	adc    DWORD PTR [ebp-0x59],0xffffffcc
  432ee5:	sbb    DWORD PTR [edi+edi*8+0x10b23181],0xffffff83
  432eed:	mov    esp,ecx
  432eef:	adc    DWORD PTR [edx-0x34],0x20
  432ef3:	jne    0x432ef4
  432ef5:	dec    DWORD PTR [ecx-0x3df1357d]
  432efb:	dec    edi
  432efc:	add    bh,bh
  432efe:	inc    DWORD PTR [ebx-0x1a6eff70]
  432f04:	dec    DWORD PTR [ecx+0x6d4b0006]
  432f0a:	dec    ebx
  432f0b:	mov    al,0xff
  432f0d:	add    BYTE PTR [ebx-0x59ff5000],al
  432f13:	das    
  432f14:	inc    DWORD PTR [ebx-0x2ae9ff82]
  432f1a:	mov    edx,0xffffff18
  432f1f:	push   DWORD PTR ds:0xcc6e0683
  432f25:	push   ebx
  432f27:	sbb    DWORD PTR [edx+0x7f],0x6
  432f2b:	push   cs
  432f2c:	int3   
  432f2d:	add    BYTE PTR [ebx-0x26009e01],al
  432f33:	ret    
  432f34:	dec    DWORD PTR [ecx+0x64b489de]
  432f3a:	jge    0x432f23
  432f3c:	add    BYTE PTR [eax],al
  432f3e:	int3   
  432f3f:	(bad)  
  432f40:	jmp    0xffa5bfc8
  432f45:	dec    DWORD PTR [ebp+0x44833bcc]
  432f4b:	lods   eax,DWORD PTR ds:[esi]
  432f4c:	cmp    edi,0x0
  432f4f:	add    BYTE PTR [ebp-0x517c01],bl
  432f55:	add    dl,bh
  432f57:	call   FWORD PTR [ecx]
  432f59:	jb     0x432f9a
  432f5b:	fwait
  432f5c:	add    bh,bh
  432f5e:	inc    DWORD PTR [eax]
  432f60:	cdq    
  432f61:	mov    DWORD PTR [esp+ecx*2+0x1c8300],edi
  432f68:	neg    edx
  432f6a:	cmc    
  432f6b:	mov    dl,0xcc
  432f6d:	(bad)  
  432f6e:	(bad)  
  432f6f:	jmp    FWORD PTR [edx-0xfca034]
  432f75:	jmp    FWORD PTR [esi]
  432f77:	mov    DWORD PTR [ebx],edx
  432f79:	hlt    
  432f7a:	and    BYTE PTR [ebp-0x7c0100],al
  432f80:	add    BYTE PTR [eax],0x76
  432f83:	test   DWORD PTR [ebx+0xf009d83],0xff08cd0f
  432f8d:	inc    DWORD PTR [ebx-0x337c8401]
  432f93:	or     al,0x89
  432f95:	add    DWORD PTR [ebx],0xffffffff
  432f98:	sbb    BYTE PTR gs:[edx+0xff83dd],0xcc
  432fa0:	mov    WORD PTR [ebx-0x76ffbe0f],es
  432fa6:	or     eax,0xa12e3aff
  432fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432fac:	inc    DWORD PTR [eax]
  432fae:	(bad)  
  432faf:	inc    DWORD PTR [edi]
  432fb1:	int3   
  432fb2:	aas    
  432fb3:	add    DWORD PTR [ebx-0x11334f01],eax
  432fb9:	mov    ah,0x50
  432fbb:	pushf  
  432fbc:	(bad)  
  432fbd:	(bad)  
  432fbe:	(bad)  
  432fbf:	inc    DWORD PTR [edi+edi*8+0x52]
  432fc3:	mov    es,WORD PTR [eax]
  432fc5:	jmp    DWORD PTR [eax+eax*1-0x65]
  432fc9:	pusha  
  432fca:	xchg   esp,eax
  432fcb:	mov    al,ds:0x83ffffff
  432fd0:	sar    edi,0xb2
  432fd3:	mov    ds:0xff86ffff,eax
  432fd8:	mov    BYTE PTR [edx],ch
  432fda:	mov    WORD PTR [esi],?
  432fdc:	add    BYTE PTR [ecx-0x383301],cl
  432fe2:	repz test al,0xff
  432fe5:	add    ah,cl
  432fe7:	add    ch,ch
  432fe9:	dec    esi
  432fea:	push   ebx
  432feb:	dec    ebp
  432fec:	cmp    edi,0x0
  432fef:	inc    esp
  432ff1:	add    BYTE PTR [edi-0xc0076cc],cl
  432ff7:	(bad)  
  432ff8:	cmp    esi,esp
  432ffa:	mov    DWORD PTR [ebx-0x7d],ebp
  432ffd:	(bad)  
  432ffe:	inc    DWORD PTR [ebx+0x4ceffb5]
  433004:	mov    DWORD PTR [ebx+0x61738933],eax
  43300a:	push   0xffffff87
  43300c:	add    ah,cl
  43300e:	int3   
  43300f:	int3   
  433010:	mov    ds:0xff615c00,al
  433015:	cmp    DWORD PTR [ebx+eax*4-0x2cfe33b0],0xffffffff
  43301d:	add    bh,bh
  43301f:	add    dh,bh
  433021:	int3   
  433022:	fcom   DWORD PTR [ebx]
  433024:	cmp    edi,0x4d
  433027:	add    BYTE PTR [edx+0x2a28b9],bh
  43302d:	inc    DWORD PTR [ebx-0x4dffd401]
  433033:	cwde   
  433034:	inc    DWORD PTR [ebx+0x5083836c]
  43303a:	cld    
  43303b:	push   0xffffff89
  43303d:	int3   
  43303e:	int3   
  43303f:	xor    DWORD PTR ds:0xfff49bff,0x0
  433046:	outs   dx,DWORD PTR ds:[esi]
  433047:	jmp    FWORD PTR [esi+0x1b]
  43304a:	mov    ebx,DWORD PTR [esi]
  43304c:	int3   
  43304d:	add    bh,bh
  43304f:	add    BYTE PTR [edi-0x1],dh
  433052:	jle    0x43308b
  433054:	add    BYTE PTR [eax],al
  433056:	cli    
  433057:	jmp    FWORD PTR [edx+edx*1-0x76ffde57]
  43305e:	add    BYTE PTR [ecx-0x241800a1],cl
  433064:	inc    DWORD PTR [eax]
  433066:	cdq    
  433067:	(bad)  
  433068:	clc    
  433069:	jecxz  0x43301c
  43306b:	sub    edi,edi
  43306d:	inc    DWORD PTR [ebx-0x48ff3801]
  433073:	fdiv   st(7),st
  433075:	add    BYTE PTR ds:0x3462bbff,ah
  43307b:	pop    es
  43307c:	inc    DWORD PTR [eax]
  43307e:	(bad)  
  43307f:	jmp    DWORD PTR [edi-0x412a01]
  433085:	mov    DWORD PTR [ecx+0x0],ecx
  433088:	dec    ecx
  433089:	and    al,0x38
  43308b:	sar    edi,1
  43308d:	(bad)  
  43308e:	inc    DWORD PTR [eax]
  433090:	mov    esi,0xff14ba89
  433095:	add    ch,ah
  433097:	inc    eax
  433099:	in     eax,0xed
  43309b:	daa    
  43309c:	add    BYTE PTR [ecx-0x761eff01],cl
  4330a2:	sbb    DWORD PTR [edi-0x1],edx
  4330a5:	sbb    DWORD PTR [edx+0x32aa9900],0x3
  4330ac:	add    BYTE PTR [eax],al
  4330ae:	(bad)  
  4330af:	call   FWORD PTR [edi]
  4330b1:	add    BYTE PTR [edx-0x500000f9],dh
  4330b7:	or     edx,0xffffffb8
  4330ba:	out    dx,al
  4330bb:	dec    esi
  4330bc:	inc    DWORD PTR [eax]
  4330be:	mov    edi,edi
  4330c0:	dec    edx
  4330c1:	add    BYTE PTR [edi],bh
  4330c3:	jnp    0x4330c4
  4330c5:	push   DWORD PTR [ebp+0x2f7da1ff]
  4330cb:	das    
  4330cc:	(bad)  
  4330cd:	inc    DWORD PTR [eax]
  4330cf:	call   FWORD PTR [esi-0xf81600]
  4330d5:	inc    DWORD PTR [ecx]
  4330d7:	add    BYTE PTR ds:0xffc84c6e,dh
  4330dd:	inc    DWORD PTR [eax]
  4330df:	jmp    DWORD PTR [edi]
  4330e1:	jmp    DWORD PTR [edx-0x7000001a]
  4330e7:	dec    DWORD PTR [esi-0x8af6fb]
  4330ed:	(bad)  
  4330ee:	(bad)  
  4330ef:	call   DWORD PTR [ecx-0x312c7d]
  4330f5:	add    BYTE PTR [eax],ch
  4330f7:	inc    DWORD PTR [ecx]
  4330f9:	fwait
  4330fa:	jno    0x433134
  4330fc:	(bad)  
  4330fd:	inc    DWORD PTR [eax]
  4330ff:	add    BYTE PTR [edi-0x33b97301],bh
  433105:	cmp    DWORD PTR [edi],0x0
  433108:	mov    ah,0xc3
  43310a:	mov    bl,0x21
  43310c:	add    BYTE PTR [eax],al
  43310e:	dec    esp
  433110:	fild   WORD PTR [eax]
  433112:	dec    ecx
  433113:	ins    BYTE PTR es:[edi],dx
  433114:	cmp    edi,0x6d
  433117:	sbb    DWORD PTR [ecx+0x60],0xfffffffd
  43311b:	aam    0x0
  43311d:	add    BYTE PTR [eax],al
  43311f:	jmp    DWORD PTR [edi+0x0]
  433122:	std    
  433123:	pop    edx
  433124:	(bad)  
  433125:	dec    ecx
  433127:	add    BYTE PTR [eax-0x3c],dl
  43312a:	dec    ebx
  43312b:	aaa    
  43312c:	inc    DWORD PTR [eax]
  43312e:	inc    DWORD PTR [ebx+0x3c02ffbd]
  433134:	add    BYTE PTR [ebx-0x570600e0],al
  43313a:	and    BYTE PTR [esi-0x7d],al
  43313d:	inc    DWORD PTR [ebx-0x1200fc00]
  433143:	mov    ecx,0x7dffff
  433148:	mov    ebp,0xffe26e6c
  43314d:	add    DWORD PTR [eax],0xffffff83
  433150:	pop    ebp
  433151:	call   DWORD PTR [esi]
  433153:	inc    esi
  433154:	add    BYTE PTR [ebx-0x6ec0ffb4],al
  43315a:	aad    0x1c
  43315c:	(bad)  
  43315d:	(bad)  
  43315e:	(bad)  
  43315f:	push   DWORD PTR [edi]
  433161:	call   DWORD PTR [edi-0x400000b7]
  433167:	add    BYTE PTR [ebp+0x4e],cl
  43316a:	jl     0x43312d
  43316c:	(bad)  
  43316d:	inc    DWORD PTR [eax]
  43316f:	dec    DWORD PTR [edi]
  433171:	or     DWORD PTR [edi-0x4700000a],0x0
  433178:	inc    edx
  433179:	add    edx,DWORD PTR [esi-0x18]
  43317c:	add    BYTE PTR [eax],al
  43317e:	inc    DWORD PTR [eax]
  433180:	mov    esi,0xffd5cfff
  433185:	cmp    ebp,0xffffffff
  433188:	shl    edi,cl
  43318a:	test   eax,0xffb5
  43318f:	mov    DWORD PTR [edi-0x1],edx
  433192:	out    dx,al
  433193:	mov    edi,edi
  433195:	(bad)  
  433196:	stc    
  433197:	mov    DWORD PTR [ebx+ecx*1],eax
  43319a:	iret   
  43319b:	cwde   
  43319c:	int3   
  43319d:	(bad)  
  43319e:	inc    DWORD PTR [ebx-0x71e3761a]
  4331a4:	(bad)  
  4331a5:	jmp    FWORD PTR [edi]
  4331a7:	call   edi
  4331a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4331aa:	mov    BYTE PTR [edi-0x33000001],cl
  4331b0:	adc    edi,edi
  4331b2:	dec    esi
  4331b3:	pusha  
  4331b4:	int3   
  4331b5:	call   DWORD PTR [ecx]
  4331b7:	jmp    DWORD PTR [ecx-0x20]
  4331ba:	push   edx
  4331bb:	xchg   edx,eax
  4331bc:	add    bh,bh
  4331be:	(bad)  
  4331bf:	push   DWORD PTR [esi]
  4331c1:	mov    DWORD PTR [esi],ebp
  4331c3:	jecxz  0x43314e
  4331c5:	add    BYTE PTR [edx-0x7d],al
  4331c8:	jmp    0x43319a
  4331ca:	cld    
  4331cb:	pop    DWORD PTR [ebx+0x50ffffcc]
  4331d1:	dec    DWORD PTR [eax+edx*4-0x34]
  4331d5:	add    BYTE PTR [edx+0x0],ch
  4331d8:	mov    dl,0xb3
  4331da:	fimul  DWORD PTR [bx+di-0x34]
  4331df:	mov    DWORD PTR [ebp-0x33606800],ecx
  4331e5:	jmp    DWORD PTR [esi]
  4331e7:	dec    DWORD PTR [ecx+0x4b]
  4331ea:	pop    ds
  4331eb:	repz (bad) 
  4331ed:	inc    DWORD PTR [eax]
  4331ef:	cmp    DWORD PTR [edi-0x33eb2300],0xffffffff
  4331f6:	ins    BYTE PTR es:[edi],dx
  4331f7:	(bad)  
  4331f8:	js     0x4331ca
  4331fa:	push   0x3a
  4331fc:	add    DWORD PTR [eax],0xffffffff
  4331ff:	add    BYTE PTR [edi+0x0],cl
  433202:	push   eax
  433203:	mov    ds:0xff0fff89,al
  433208:	push   esp
  433209:	xchg   BYTE PTR [edi],ch
  43320b:	loop   0x43320c
  43320d:	inc    DWORD PTR [ebx+0x7aff9aff]
  433213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433214:	mov    DWORD PTR [eax],eax
  433216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433217:	mov    DWORD PTR [edx-0x2f31b],edi
  43321d:	inc    DWORD PTR [eax]
  43321f:	(bad)  
  433220:	mov    ecx,0xff7989ff
  433225:	add    BYTE PTR [ecx],dl
  433227:	add    ah,cl
  433229:	mov    edi,0xffffb4fe
  43322e:	(bad)  
  43322f:	push   DWORD PTR ds:0x755dff
  433235:	xor    DWORD PTR [ecx-0x1],0x32
  433239:	sub    eax,0xff890001
  43323e:	add    DWORD PTR [eax],0x7f
  433241:	or     ebx,0xffffff9a
  433244:	(bad)  
  433245:	jmp    esi
  433247:	jmp    FWORD PTR [eax]
  433249:	pop    ecx
  43324a:	fadd   QWORD PTR [edi+0x0]
  43324d:	inc    DWORD PTR [ebx-0x3c005700]
  433253:	sbb    al,BYTE PTR [eax]
  433255:	cmp    DWORD PTR [edx],0xffffff83
  433258:	mov    esp,DWORD PTR [edx+0xff2e11]
  43325e:	add    bh,bh
  433260:	in     al,0xff
  433262:	shr    BYTE PTR [esi-0x77],cl
  433265:	jmp    FWORD PTR ds:0x349c5fff
  43326b:	push   esp
  43326c:	add    DWORD PTR [ebx-0x5f0001],0x66
  433273:	mov    ds:0xff60ffff,al
  433278:	hlt    
  433279:	aam    0xeb
  43327b:	addr16 (bad) 
  43327d:	inc    DWORD PTR [eax]
  43327f:	add    BYTE PTR [esi],ah
  433281:	or     DWORD PTR [edi+0x3a],0xffffff83
  433285:	add    BYTE PTR [ecx],bl
  433287:	(bad)  
  433288:	jl     0x43328c
  43328a:	dec    ecx
  43328b:	sub    eax,DWORD PTR [ebx-0x57c3400]
  433291:	mov    DWORD PTR [esi],esp
  433293:	jbe    0x433295
  433295:	add    BYTE PTR [edi+0x0],bl
  433298:	mov    WORD PTR [ebx+0x36],cs
  43329b:	test   eax,0xff000000
  4332a0:	sbb    DWORD PTR [eax],eax
  4332a2:	adc    al,0xe7
  4332a4:	add    bh,bh
  4332a6:	jmp    0x90:0x271b4189
  4332ad:	add    DWORD PTR [eax],0xffffffff
  4332b0:	mov    BYTE PTR [eax],al
  4332b2:	sub    ecx,ebp
  4332b4:	inc    DWORD PTR [ebx-0x7e80ff4b]
  4332ba:	(bad)  
  4332bb:	pop    ebp
  4332bc:	add    bh,bh
  4332be:	add    bh,bh
  4332c0:	adc    eax,DWORD PTR [eax]
  4332c2:	aad    0x6c
  4332c4:	(bad)  
  4332c5:	jmp    DWORD PTR [edx]
  4332c7:	add    BYTE PTR [ecx+ebx*2],cl
  4332ca:	aad    0xef
  4332cc:	mov    DWORD PTR [eax],eax
  4332ce:	add    DWORD PTR [ebx+0x65590042],0xffffff89
  4332d5:	sbb    DWORD PTR [esi],0xffffffff
  4332d8:	xchg   edx,esp
  4332da:	out    0xd7,eax
  4332dc:	(bad)  
  4332dd:	inc    DWORD PTR [eax]
  4332df:	add    bl,ah
  4332e1:	adc    DWORD PTR [esi+0x61],0xffffffff
  4332e5:	add    BYTE PTR [ebx],dl
  4332e7:	(bad)  
  4332e8:	mov    eax,0xcc53e01e
  4332ed:	add    bh,bh
  4332ef:	add    BYTE PTR [eax-0x1],al
  4332f2:	jbe    0x43329f
  4332f4:	int3   
  4332f5:	add    BYTE PTR [esi],dl
  4332f7:	add    dh,bh
  4332f9:	out    dx,eax
  4332fa:	add    eax,0x83cc8910
  4332ff:	inc    DWORD PTR [esi]
  433301:	add    BYTE PTR [edx-0x67],ch
  433304:	add    BYTE PTR [ecx-0xba600a3],cl
  43330a:	popf   
  43330b:	in     al,0x89
  43330d:	add    BYTE PTR [ecx+0x5f00b3ff],cl
  433313:	jle    0x4332e1
  433315:	(bad)  
  433316:	mov    esi,0xbedf1500
  43331b:	jbe    0x43331c
  43331d:	inc    DWORD PTR [ebx+0x5cff24ff]
  433323:	xchg   ecx,eax
  433324:	add    BYTE PTR [ecx+0x5a8cff38],cl
  43332a:	loopne 0x4332d8
  43332c:	add    bh,bh
  43332e:	add    ah,cl
  433330:	es int3 
  433332:	or     BYTE PTR [edi],0xff
  433335:	call   ecx
  433337:	call   DWORD PTR [ecx+0x3a]
  43333a:	in     al,dx
  43333b:	loope  0x43333c
  43333d:	dec    esp
  43333f:	add    BYTE PTR [esi],bl
  433341:	jmp    esp
  433343:	pop    edi
  433344:	inc    DWORD PTR [ebx+0x7de0ff0b]
  43334a:	inc    esp
  43334b:	push   ecx
  43334c:	(bad)  
  43334d:	dec    esp
  43334f:	(bad)  
  433350:	mov    esp,0xff85c9ff
  433355:	add    bl,ch
  433357:	dec    DWORD PTR [esp]
  43335a:	loop   0x433364
  43335c:	cmp    edi,0x0
  43335f:	or     DWORD PTR [ebx],0xffffffff
  433362:	test   DWORD PTR [ecx+0x0],edx
  433365:	mov    DWORD PTR [ebp+0x0],edx
  433368:	push   edx
  433369:	mov    ds:0xf508,al
  43336e:	add    DWORD PTR [eax],0xffffffa2
  433371:	int3   
  433372:	ja     0x43331d
  433374:	(bad)  
  433375:	(bad)  
  433376:	fdivp  st(7),st
  433378:	pop    edi
  433379:	imul   edi,edx,0xff0074
  43337f:	xor    DWORD PTR [ecx-0x7d],0xffffffd9
  433383:	test   BYTE PTR [eax],al
  433385:	add    BYTE PTR [ebx+eax*4+0x1d],cl
  433389:	sbb    BYTE PTR [ebx+0x11],ch
  43338c:	add    DWORD PTR [eax],0xffffffff
  43338f:	call   DWORD PTR [ecx-0x1]
  433392:	and    eax,0x590000f7
  433397:	sub    DWORD PTR [eax],0x7f
  43339a:	stc    
  43339b:	fwait
  43339c:	add    BYTE PTR [eax],al
  43339e:	add    BYTE PTR [eax],al
  4333a0:	into   
  4333a1:	add    cl,al
  4333a3:	icebp  
  4333a4:	inc    DWORD PTR [ebx+0x3c34cc72]
  4333aa:	mov    bh,dh
  4333ac:	cmp    edi,0xffffff83
  4333af:	call   FWORD PTR [ebx+0x0]
  4333b2:	outs   dx,BYTE PTR ds:[esi]
  4333b3:	arpl   di,di
  4333b5:	sbb    DWORD PTR [ecx],0xffffffff
  4333b8:	xlat   BYTE PTR ds:[ebx]
  4333b9:	mov    esp,DWORD PTR [eax]
  4333bb:	xor    edi,edi
  4333bd:	inc    DWORD PTR [eax]
  4333bf:	or     DWORD PTR [edx-0x1bff00],0xffffff83
  4333c6:	jmp    0x46a11f4e
  4333cb:	call   0xff62:0xffffff
  4333d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333d3:	rol    BYTE PTR [ebx-0x53ff7900],1
  4333d9:	daa    
  4333da:	rcl    BYTE PTR [eax+0xccff00],cl
  4333e0:	call   DWORD PTR [esi]
  4333e2:	inc    DWORD PTR [eax]
  4333e4:	add    BYTE PTR [ebp+0x4783c4df],al
  4333ea:	mov    edi,edi
  4333ec:	mov    DWORD PTR [ecx+0x6fff36c6],esp
  4333f2:	add    BYTE PTR [eax],al
  4333f4:	add    bl,al
  4333f6:	pusha  
  4333f7:	push   ecx
  4333f8:	add    BYTE PTR [edi+edi*8],bh
  4333fb:	int3   
  4333fc:	add    ecx,0xffffffe7
  4333ff:	xor    al,0x83
  433401:	inc    ecx
  433402:	(bad)  
  433403:	inc    DWORD PTR [ebx+0xaa66af]
  433409:	rol    BYTE PTR [ebx-0xd05ff7d],cl
  43340f:	daa    
  433410:	add    BYTE PTR [ebx],bl
  433412:	(bad)  
  433413:	dec    esp
  433415:	js     0x4333b1
  433417:	scas   eax,DWORD PTR es:[edi]
  433418:	or     DWORD PTR ds:0xa83ffff,0xffffff84
  43341f:	dec    eax
  433420:	cmp    DWORD PTR [eax+eax*1-0x3abb3400],0xffffffcf
  433428:	add    BYTE PTR [ecx+0x76ccffff],bh
  43342e:	xchg   esi,eax
  43342f:	enter  0xd7ff,0x0
  433433:	mov    edi,edi
  433435:	les    ebp,FWORD PTR [esi+0x8affdf]
  43343b:	inc    DWORD PTR [eax]
  43343d:	dec    eax
  43343e:	mov    edx,0xbaff3f
  433443:	add    BYTE PTR [eax],al
  433445:	stos   DWORD PTR es:[edi],eax
  433446:	sbb    al,0x3f
  433448:	int3   
  433449:	daa    
  43344a:	(bad)  
  43344b:	inc    DWORD PTR [eax]
  43344d:	ins    BYTE PTR es:[edi],dx
  43344e:	lock dec esp
  433450:	call   FWORD PTR [edx]
  433452:	add    BYTE PTR [eax],al
  433454:	call   DWORD PTR [ebp-0x66]
  433457:	and    eax,0x5589
  43345c:	push   eax
  43345e:	jno    0x433403
  433460:	add    dh,ch
  433462:	(bad)  
  433463:	(bad)  
  433464:	call   esp
  433466:	pushf  
  433467:	push   es
  433468:	add    BYTE PTR [ebp+0x6e00ff83],cl
  43346e:	xor    al,0x68
  433470:	add    BYTE PTR [edx-0x3a337601],bl
  433476:	push   cs
  433477:	mov    bh,0x83
  433479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43347a:	int3   
  43347b:	inc    DWORD PTR [ebx-0x3355f801]
  433481:	(bad)  
  433484:	add    BYTE PTR [ebx+edx*1+0xd78357],al
  43348b:	add    DWORD PTR [ebx-0xaec21f],0xd
  433492:	inc    DWORD PTR [ebx-0x2abe1f01]
  433498:	call   DWORD PTR [esi-0x1]
  43349b:	add    ah,cl
  43349d:	int3   
  43349e:	cmc    
  43349f:	mov    eax,0x83ff87ff
  4334a4:	int3   
  4334a5:	dec    eax
  4334a6:	mov    ds:0x8305ff90,al
  4334ab:	mov    DWORD PTR [eax],eax
  4334ad:	push   cs
  4334ae:	sub    al,BYTE PTR [ecx]
  4334b0:	call   DWORD PTR [ebp-0x1]
  4334b3:	(bad)  
  4334b4:	push   DWORD PTR [edx+0x8]
  4334b7:	mov    ecx,0xff832300
  4334bc:	add    BYTE PTR [ebx+0x61ff9dc7],ah
  4334c2:	inc    DWORD PTR [eax]
  4334c4:	dec    DWORD PTR [eax]
  4334c6:	(bad)
  4334c9:	outs   dx,DWORD PTR ds:[esi]
  4334ca:	add    ah,cl
  4334cc:	mov    DWORD PTR [edx],ecx
  4334ce:	adc    al,0x11
  4334d0:	dec    DWORD PTR [ebx+0x0]
  4334d3:	add    bh,bh
  4334d5:	(bad)  
  4334d6:	fs inc ebp
  4334d8:	sbb    DWORD PTR [eax],0x0
  4334db:	inc    DWORD PTR [eax]
  4334dd:	loop   0x4334d2
  4334df:	stc    
  4334e0:	jmp    FWORD PTR [ebx-0x1]
  4334e3:	cmp    edi,0x53
  4334e6:	ror    DWORD PTR [edi+edi*8+0x44],0xff
  4334eb:	add    bh,bh
  4334ed:	push   ss
  4334ee:	mov    al,0x28
  4334f0:	jmp    FWORD PTR [esi]
  4334f2:	(bad)  
  4334f3:	dec    DWORD PTR [ecx-0x765ba127]
  4334f9:	and    eax,0x4a008300
  4334fe:	and    DWORD PTR [edx-0x1],0xffcc0028
  433505:	mov    al,0xb5
  433507:	stos   DWORD PTR es:[edi],eax
  433508:	sbb    DWORD PTR [eax],0xffffffcc
  43350b:	(bad)  
  43350c:	inc    DWORD PTR [eax-0xc]
  43350f:	add    bh,bh
  433511:	imul   eax,DWORD PTR [eax],0xe3a400cc
  433517:	and    al,0x83
  433519:	jne    0x43351a
  43351b:	add    BYTE PTR [eax],al
  43351d:	stos   DWORD PTR es:[edi],eax
  43351e:	stc    
  43351f:	add    edi,edi
  433521:	cmp    edi,edi
  433523:	int3   
  433524:	push   esi
  433526:	and    esi,DWORD PTR [edx+0xcc6bff]
  43352c:	xor    DWORD PTR [edi+0x3a83492b],0x0
  433533:	add    ah,cl
  433535:	dec    esp
  433536:	js     0x43353f
  433538:	int3   
  433539:	lahf   
  43353a:	mov    edi,edi
  43353c:	(bad)  
  43353d:	push   DWORD PTR [ecx+0x6e]
  433540:	int3   
  433541:	mov    dh,0xcc
  433543:	cmp    edi,0x7e
  433546:	mov    dl,0x70
  433548:	jmp    esi
  43354a:	add    bh,bh
  43354c:	call   DWORD PTR [esp+ebp*2-0x3366ff90]
  433553:	(bad)  
  433554:	dec    esp
  433556:	js     0x43350d
  433558:	add    BYTE PTR [edx-0x1],ch
  43355b:	add    DWORD PTR [eax],0xffffffcc
  43355e:	xchg   ebx,eax
  43355f:	cld    
  433560:	(bad)  
  433561:	stc    
  433562:	add    ah,cl
  433564:	jmp    FWORD PTR [esi+eax*2]
  433567:	in     al,dx
  433568:	add    BYTE PTR [esi+0x0],dh
  43356b:	inc    DWORD PTR [eax]
  43356d:	jb     0x4334f0
  43356f:	repnz jmp FWORD PTR [esi-0x5f7c0001]
  433576:	adc    al,0x63
  433578:	add    BYTE PTR [esi],ch
  43357a:	inc    DWORD PTR [eax]
  43357c:	push   DWORD PTR [eax+0x6e]
  43357f:	inc    ebp
  433580:	jmp    FWORD PTR [ebx+0x5400ffff]
  433586:	sub    DWORD PTR ds:0xff002f89,esp
  43358c:	add    BYTE PTR [edi],ah
  43358e:	cmp    DWORD PTR [eax],0xffffffff
  433591:	dec    edi
  433592:	add    bh,bh
  433594:	inc    edx
  433596:	pop    esp
  433597:	rol    BYTE PTR [eax],1
  433599:	jge    0x43359a
  43359b:	inc    DWORD PTR [ebx-0x7646c508]
  4335a1:	sbb    BYTE PTR [eax],al
  4335a3:	inc    DWORD PTR [eax]
  4335a5:	mov    ch,BYTE PTR [edi-0x46ffb3]
  4335ab:	cmp    edi,0x51
  4335ae:	stc    
  4335af:	ds (bad) 
  4335b1:	out    dx,eax
  4335b2:	(bad)  
  4335b3:	inc    DWORD PTR [ebx-0x6ba720]
  4335b9:	lods   eax,DWORD PTR ds:[esi]
  4335ba:	mov    esp,ecx
  4335bc:	add    BYTE PTR [eax],dh
  4335be:	into   
  4335bf:	in     eax,0x89
  4335c1:	in     al,0x83
  4335c3:	int3   
  4335c4:	mov    DWORD PTR [esi],ebp
  4335c6:	idiv   BYTE PTR [ecx-0x6d00]
  4335cc:	add    BYTE PTR [esi-0x34fff087],cl
  4335d2:	int3   
  4335d3:	inc    DWORD PTR [eax]
  4335d5:	(bad)  [edi+eiz*2-0x1]
  4335d9:	lock mov edi,edi
  4335dc:	sbb    DWORD PTR [edx+0x37],0x73
  4335e0:	and    edi,0xffffffcc
  4335e3:	(bad)  
  4335e4:	inc    DWORD PTR [esp+edx*1-0x7d]
  4335e8:	dec    DWORD PTR [ebp-0x2b7cff77]
  4335ee:	repnz fdivp st(7),st
  4335f1:	jmp    0xc786:0x8d0000ff
  4335f8:	add    BYTE PTR [edx],bl
  4335fa:	dec    esp
  4335fc:	add    DWORD PTR [ecx-0x4e],0xffffff81
  433600:	add    BYTE PTR [edi-0x36ff007d],bl
  433606:	push   esi
  433607:	rol    DWORD PTR [ebx-0xffffba],1
  43360d:	out    dx,eax
  43360e:	cli    
  43360f:	hlt    
  433610:	add    BYTE PTR [ecx-0x1],dh
  433613:	add    BYTE PTR [eax],al
  433615:	pop    es
  433616:	lea    edi,[eax+eax*1+0xc]
  43361a:	add    BYTE PTR [eax],al
  43361c:	call   FWORD PTR [edx]
  43361e:	push   esp
  43361f:	mov    al,0xff
  433621:	data16 add bh,bh
  433624:	add    DWORD PTR [ebx-0x6f009c20],0xffffffff
  43362b:	cmp    edi,0x43
  43362e:	es aaa 
  433630:	mov    DWORD PTR [ebx],edi
  433632:	int3   
  433633:	add    DWORD PTR [ebx-0x7c1530af],0x69
  43363a:	add    BYTE PTR [eax],al
  43363c:	add    BYTE PTR [eax],ch
  43363e:	in     eax,0x70
  433640:	call   FWORD PTR [eax+0x2dffffff]
  433646:	xchg   ecx,eax
  433647:	xchg   edi,edi
  433649:	xchg   ah,cl
  43364b:	inc    DWORD PTR [eax]
  43364d:	inc    esp
  43364e:	add    BYTE PTR [ebp+0x0],al
  433651:	cwde   
  433652:	cmp    edi,0x0
  433655:	sub    cl,BYTE PTR [edx-0x7615ff60]
  43365b:	add    BYTE PTR [eax],al
  43365d:	xchg   ecx,eax
  43365e:	repz cmp al,BYTE PTR [eax]
  433661:	int    0x89
  433663:	add    BYTE PTR [eax],al
  433665:	xchg   esp,eax
  433666:	fwait
  433667:	mov    ah,0xff
  433669:	or     DWORD PTR [ebx-0x208e0001],eax
  43366f:	pop    ebp
  433670:	mov    DWORD PTR [ecx+ecx*4-0x7d],ecx
  433674:	mov    ebp,eax
  433676:	loop   0x4336ef
  433678:	or     DWORD PTR [ebp-0x1],0xffffffff
  43367c:	add    BYTE PTR [eax],ch
  43367e:	out    dx,al
  43367f:	push   ds
  433680:	add    BYTE PTR [ebx+0x72cc00ff],al
  433686:	test   al,0x40
  433688:	cmp    ebx,0x0
  43368b:	add    bh,bh
  43368d:	mov    edx,0x19ff4fdc
  433692:	(bad)  
  433693:	(bad)  
  433694:	push   DWORD PTR [ebx-0x5a7cca7c]
  43369a:	inc    DWORD PTR [eax]
  43369c:	int3   
  43369d:	mov    DWORD PTR cs:[eax+eax*1+0xff0072],edi
  4336a5:	les    ecx,FWORD PTR [edx+0x3c]
  4336a8:	push   DWORD PTR [eax+eax*1-0x1]
  4336ac:	dec    edi
  4336ae:	push   ebx
  4336af:	inc    edx
  4336b0:	(bad)  
  4336b1:	cld    
  4336b2:	inc    DWORD PTR [eax]
  4336b4:	add    DWORD PTR [ebp-0x46ff50a0],0xffffffff
  4336bb:	add    bh,bh
  4336bd:	daa    
  4336be:	clc    
  4336bf:	lods   al,BYTE PTR ds:[esi]
  4336c0:	add    BYTE PTR [ebx],bh
  4336c2:	mov    DWORD PTR [eax],eax
  4336c4:	push   DWORD PTR [edx+0x4c]
  4336c7:	and    edi,edi
  4336c9:	sbb    BYTE PTR [eax],al
  4336cb:	int3   
  4336cc:	(bad)  
  4336cd:	out    dx,al
  4336ce:	xchg   BYTE PTR [ecx-0x1],cl
  4336d1:	sahf   
  4336d2:	inc    DWORD PTR [eax]
  4336d4:	mov    eax,esp
  4336d6:	push   0xffffffff
  4336d8:	(bad)  
  4336d9:	cmp    edi,edi
  4336db:	dec    DWORD PTR [ecx+0xd13ce6]
  4336e1:	leave  
  4336e2:	add    BYTE PTR [ecx+0x121519ff],cl
  4336e8:	add    ah,dh
  4336ea:	cmp    edi,0x0
  4336ed:	loopne 0x433721
  4336ef:	push   ebp
  4336f0:	int3   
  4336f1:	lods   eax,DWORD PTR ds:[esi]
  4336f2:	dec    DWORD PTR [ecx-0x6ab84301]
  4336f8:	inc    DWORD PTR [edx+0x45ffff00]
  4336fe:	mov    ds:0xffff0086,eax
  433703:	add    ah,cl
  433705:	sub    DWORD PTR [esi-0xdcff83],0xffffff83
  43370c:	add    ah,bh
  43370e:	mov    al,0x16
  433710:	dec    DWORD PTR [eax]
  433712:	add    BYTE PTR [ebx+0x482042ff],al
  433718:	dec    DWORD PTR [ebx]
  43371a:	int3   
  43371b:	inc    DWORD PTR [ebx+0x1a248]
  433721:	arpl   sp,cx
  433723:	inc    DWORD PTR [eax]
  433725:	jp     0x433780
  433727:	mov    eax,ds:0xfffe83
  43372c:	add    al,dh
  43372e:	dec    esp
  43372f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433730:	jmp    DWORD PTR [edi+0x44830000]
  433736:	pop    ds
  433737:	outs   dx,DWORD PTR ds:[esi]
  433738:	jmp    FWORD PTR [edx+0x74ff00ff]
  43373e:	pop    es
  43373f:	inc    ebx
  433740:	jmp    DWORD PTR [eax-0x1]
  433743:	or     DWORD PTR [ecx-0x76eb0726],0xffffffb6
  43374a:	inc    DWORD PTR [eax]
  43374c:	add    bl,al
  43374e:	xor    BYTE PTR [ecx-0x77],dh
  433751:	(bad)  
  433752:	inc    DWORD PTR [ebx+0x3a833cc]
  433758:	(bad)  
  433759:	fcos   
  43375b:	(bad)  
  43375c:	(bad)  
  43375d:	mov    edx,0xdb0082ae
  433762:	dec    esp
  433764:	add    BYTE PTR [edi+0x72cc2c49],dl
  43376a:	add    BYTE PTR [eax],al
  43376c:	call   esi
  43376e:	inc    edx
  43376f:	sar    bh,cl
  433771:	loopne 0x433773
  433773:	(bad)  
  433774:	call   DWORD PTR ds:0xae83c7df
  43377a:	add    bh,bh
  43377c:	int3   
  43377d:	mov    edi,0x74ffed6c
  433782:	inc    DWORD PTR [eax]
  433784:	add    BYTE PTR [edi],ch
  433786:	add    ebx,eax
  433788:	and    DWORD PTR [eax+0xaff8983],0x37
  43378f:	push   edx
  433790:	(bad)  
  433791:	call   0xd6433895
  433796:	add    al,0x75
  433798:	add    BYTE PTR [edx],bl
  43379a:	add    DWORD PTR [eax],0xffffff83
  43379d:	xor    dh,BYTE PTR [esp+edx*4]
  4337a0:	(bad)  
  4337a1:	stc    
  4337a2:	inc    DWORD PTR [eax]
  4337a4:	call   FWORD PTR [ecx]
  4337a6:	mov    ebp,0xff54ccb5
  4337ab:	or     esp,0x60
  4337ae:	add    bh,BYTE PTR [eax]
  4337b0:	jmp    FWORD PTR [esi+0x16ff8300]
  4337b6:	xchg   edi,eax
  4337b7:	jle    0x4337b8
  4337b9:	test   eax,0xac8300ff
  4337be:	je     0x4337ea
  4337c0:	(bad)  
  4337c1:	out    dx,eax
  4337c2:	(bad)  
  4337c3:	(bad)  
  4337c4:	call   FWORD PTR ds:0xfff3e7d
  4337ca:	add    BYTE PTR [eax],al
  4337cc:	int3   
  4337cd:	loope  0x4337a7
  4337cf:	iret   
  4337d0:	(bad)  
  4337d1:	stc    
  4337d2:	inc    DWORD PTR [eax]
  4337d4:	add    BYTE PTR [ebp+0x61],al
  4337d7:	pop    eax
  4337d8:	add    cl,bh
  4337da:	inc    DWORD PTR [eax]
  4337dc:	add    BYTE PTR [ecx+ebx*4-0x5a0014],dh
  4337e3:	(bad)  
  4337e4:	dec    DWORD PTR [eax]
  4337e6:	xchg   esp,eax
  4337e7:	xor    DWORD PTR [ebx-0x7c007c17],eax
  4337ed:	rcr    dl,1
  4337ef:	sub    al,0x83
  4337f1:	or     al,BYTE PTR [ebx+0x18ff0000]
  4337f7:	repnz call FWORD PTR [ebp-0xe330001]
  4337fe:	inc    esi
  4337ff:	mov    eax,ds:0x2683
  433804:	int3   
  433805:	ins    BYTE PTR es:[edi],dx
  433806:	cmp    al,0x46
  433808:	inc    DWORD PTR [ebx-0x24ff7601]
  43380e:	jno    0x433799
  433810:	jmp    DWORD PTR [edi]
  433812:	inc    DWORD PTR [eax]
  433814:	and    esi,0xfffffffa
  433817:	push   esi
  433818:	jmp    FWORD PTR [esi]
  43381a:	add    BYTE PTR [ebx+0x6bf303ff],al
  433820:	jmp    FWORD PTR [esi-0x5a76ff01]
  433826:	mov    bh,BYTE PTR [edx]
  433828:	(bad)  
  433829:	sti    
  43382a:	int3   
  43382b:	add    bh,bh
  43382d:	ins    BYTE PTR es:[edi],dx
  43382e:	pusha  
  43382f:	push   ss
  433830:	add    ch,ch
  433832:	(bad)  
  433833:	inc    DWORD PTR [ebx-0xf32d30]
  433839:	(bad)  
  43383a:	add    ah,cl
  43383c:	(bad)  
  43383d:	jns    0x433890
  43383f:	stc    
  433840:	mov    DWORD PTR [edi+0x10083ff],edi
  433846:	add    BYTE PTR [esi+0x0],dh
  433849:	and    eax,0xeaff0083
  43384e:	mov    al,ds:0xff99ffac
  433853:	cmp    edi,0x26
  433856:	(bad)  
  433858:	add    BYTE PTR [eax],ch
  43385a:	add    BYTE PTR [eax],al
  43385c:	add    BYTE PTR [eiz*8-0xabff1f],ah
  433863:	int3   
  433864:	call   FWORD PTR [ebx+edi*4-0x63]
  433868:	jmp    edi
  43386a:	inc    DWORD PTR [eax]
  43386c:	add    dl,al
  43386e:	rol    BYTE PTR cs:[eax],0xf2
  433872:	add    DWORD PTR [eax],0xffffffff
  433875:	div    eax
  433877:	(bad)  
  433878:	jmp    DWORD PTR [ebx-0x1]
  43387b:	(bad)  
  43387c:	call   DWORD PTR [eax+0x62]
  43387f:	loop   0x43380a
  433881:	xor    al,BYTE PTR [ebx-0x16220034]
  433887:	add    BYTE PTR [eax],0xf8
  43388a:	add    BYTE PTR [eax],al
  43388c:	push   DWORD PTR [ebx]
  43388e:	in     al,0x53
  433890:	add    dh,dh
  433892:	add    DWORD PTR [eax],0xffffff83
  433895:	and    al,0x96
  433897:	gs (bad) 
  433899:	mov    ecx,0x5affffff
  43389e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43389f:	cld    
  4338a0:	(bad)  
  4338a1:	mov    ebp,0xd400ff00
  4338a6:	cs pushf 
  4338a8:	add    BYTE PTR [eax-0x1],dh
  4338ab:	add    bh,bh
  4338ad:	(bad)  
  4338ae:	cmp    ch,BYTE PTR [eax]
  4338b0:	push   DWORD PTR [eax+eax*1-0x1]
  4338b4:	(bad)  
  4338b5:	mov    edi,0x66008aaa
  4338ba:	dec    esp
  4338bc:	call   DWORD PTR [edi+0xbff76c1]
  4338c2:	cmp    edi,0xffffff83
  4338c5:	dec    ecx
  4338c6:	iret   
  4338c7:	jle    0x43384c
  4338c9:	cmp    edi,0xb43389ff
  4338cf:	dec    edx
  4338d0:	mov    DWORD PTR [ebp+0x0],eax
  4338d3:	inc    DWORD PTR [ebx-0x55c78e]
  4338d9:	sbb    DWORD PTR [ebx-0xdfa0000],eax
  4338df:	aaa    
  4338e0:	jmp    DWORD PTR [edi+edi*8-0x1]
  4338e4:	dec    DWORD PTR [edi]
  4338e6:	xchg   ebx,eax
  4338e7:	sub    eax,0xc383
  4338ec:	adc    edx,0x78
  4338ef:	cmp    bh,bh
  4338f1:	xchg   edx,eax
  4338f2:	(bad)  
  4338f3:	inc    DWORD PTR [ebx-0x76cab3e6]
  4338f9:	pop    ds
  4338fa:	add    DWORD PTR [eax],0xffffffff
  4338fd:	les    esi,FWORD PTR [esi-0x46]
  433900:	(bad)  
  433901:	jp     0x433903
  433903:	add    BYTE PTR [ebx+0x8d559f],al
  433909:	sub    BYTE PTR [eax],al
  43390b:	cmp    edi,0x44
  43390e:	dec    esp
  43390f:	or     bh,bh
  433911:	pop    DWORD PTR [eax]
  433913:	(bad)  
  433914:	(bad)  
  433915:	fistp  WORD PTR [edx-0x7733af]
  43391b:	(bad)  
  43391c:	jmp    FWORD PTR [edi]
  43391e:	pop    edx
  43391f:	jmp    0xff440ea7
  433924:	add    BYTE PTR [ecx-0x3d],bh
  433927:	and    DWORD PTR [ecx-0x3d],ecx
  43392d:	pop    ecx
  43392e:	mov    esp,edi
  433930:	push   DWORD PTR ds:0x7cc8383
  433936:	xor    dh,cl
  433938:	call   FWORD PTR [edi-0x7d]
  43393b:	inc    DWORD PTR [ebx-0x7ec954]
  433941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433942:	mov    edi,edi
  433944:	mov    DWORD PTR [edx-0x43],ebp
  433947:	sub    al,0xff
  433949:	xchg   ebx,eax
  43394a:	(bad)  
  43394b:	inc    DWORD PTR [ebx-0x7c796cfd]
  433951:	stos   DWORD PTR es:[edi],eax
  433952:	add    BYTE PTR [ebx+0xe95d300],al
  433958:	add    DWORD PTR [eax],0x0
  43395b:	inc    DWORD PTR [eax]
  43395d:	cld    
  43395e:	adc    DWORD PTR [esi],0xffffffff
  433961:	pop    ss
  433962:	inc    DWORD PTR [eax]
  433964:	jmp    edi
  433966:	xchg   edx,eax
  433967:	out    0xff,eax
  433969:	inc    edi
  43396a:	inc    DWORD PTR [eax]
  43396c:	dec    DWORD PTR [edx]
  43396e:	icebp  
  43396f:	mov    bh,bh
  433971:	xor    al,0x83
  433973:	cmp    edi,0xffffffba
  433976:	sbb    bl,dl
  433978:	jmp    DWORD PTR [esi]
  43397a:	(bad)  
  43397b:	inc    DWORD PTR [eax]
  43397d:	push   cs
  43397e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43397f:	sar    bh,cl
  433981:	leave  
  433982:	cmp    edi,0xffffffff
  433985:	in     eax,dx
  433986:	call   0xba39a9
  43398b:	inc    DWORD PTR [eax]
  43398d:	outs   dx,DWORD PTR ds:[esi]
  43398e:	cmc    
  43398f:	std    
  433990:	add    BYTE PTR [ebp+0x27830000],bl
  433996:	mov    cl,0x57
  433998:	add    BYTE PTR [ebp-0x1],cl
  43399b:	(bad)  
  43399c:	dec    DWORD PTR [edi]
  43399e:	adc    bl,BYTE PTR [esi+0xccb6cc]
  4339a4:	int3   
  4339a5:	test   DWORD PTR [eax+ecx*4-0x77],ebx
  4339a9:	mov    ah,0xff
  4339ab:	(bad)  
  4339ac:	inc    DWORD PTR [ecx-0x5b00e6fe]
  4339b2:	int3   
  4339b3:	inc    DWORD PTR [eax]
  4339b5:	clc    
  4339b6:	js     0x43395e
  4339b8:	int3   
  4339b9:	sar    bh,cl
  4339bb:	(bad)  
  4339bc:	call   FWORD PTR [edi]
  4339be:	mov    bl,0xd4
  4339c0:	add    cl,dl
  4339c2:	add    bh,bh
  4339c4:	jmp    DWORD PTR [ebx+0xc0047c5]
  4339ca:	(bad)  
  4339cb:	(bad)  
  4339cc:	jmp    DWORD PTR [edx]
  4339ce:	sub    al,0x4d
  4339d0:	jmp    DWORD PTR [edi+0x0]
  4339d3:	cmp    edi,0xffffffe0
  4339d6:	push   ss
  4339d7:	fwait
  4339d8:	int3   
  4339d9:	push   eax
  4339da:	or     esp,0xffffffff
  4339dd:	ds or  ecx,ebx
  4339e0:	push   DWORD PTR [ebx+0x4800ffff]
  4339e6:	xchg   ecx,eax
  4339e7:	add    BYTE PTR [eax],0x21
  4339ea:	add    bh,bh
  4339ec:	(bad)  
  4339ed:	jmp    0x9c433c71
  4339f2:	add    DWORD PTR [eax],0xffffffff
  4339f5:	or     eax,0x5b00530f
  4339fa:	dec    esp
  4339fc:	(bad)  
  4339fd:	(bad)  
  4339fe:	repz pop edx
  433a00:	(bad)  
  433a01:	cmp    edi,edi
  433a03:	add    DWORD PTR [eax],0x13
  433a06:	sbb    DWORD PTR [ecx-0x337c1801],ebp
  433a0c:	push   DWORD PTR [edi-0x1d767382]
  433a12:	int3   
  433a13:	int3   
  433a14:	mov    DWORD PTR [edx],ecx
  433a16:	pop    ebp
  433a17:	jnp    0x433a19
  433a19:	sub    DWORD PTR [ebx-0x3247ff77],eax
  433a1f:	in     eax,dx
  433a20:	add    BYTE PTR [eax-0x1],bl
  433a23:	(bad)  
  433a24:	jmp    FWORD PTR [edi]
  433a26:	push   ds
  433a27:	stc    
  433a28:	push   DWORD PTR [ecx]
  433a2a:	cmp    edi,0x0
  433a2d:	dec    ebp
  433a2e:	adc    BYTE PTR [ebx],dh
  433a30:	add    al,ch
  433a32:	add    bh,bh
  433a34:	add    cl,bl
  433a36:	and    BYTE PTR [ebx],dh
  433a38:	add    bh,al
  433a3a:	add    bh,bh
  433a3c:	jmp    DWORD PTR [edx+0x3e]
  433a3f:	mov    edi,0x2fff
  433a44:	add    BYTE PTR [edx+eiz*8],ah
  433a47:	mov    ds:0x830046ff,eax
  433a4c:	add    BYTE PTR [edx-0x2],al
  433a4f:	sbb    al,0xff
  433a51:	in     al,0x0
  433a53:	inc    DWORD PTR [eax]
  433a55:	dec    eax
  433a56:	fwait
  433a57:	xchg   edi,edi
  433a59:	jle    0x433a5b
  433a5b:	add    bh,bh
  433a5d:	pop    ecx
  433a5e:	mov    ebx,0x3eccdf
  433a63:	inc    DWORD PTR [ebx-0x7c0e732a]
  433a69:	iret   
  433a6a:	cmp    edi,0xffffffff
  433a6d:	fnstcw WORD PTR [edi+0x1f]
  433a70:	add    BYTE PTR [eax+eax*1],dh
  433a73:	add    ah,cl
  433a75:	mov    dh,0x9c
  433a77:	adc    al,BYTE PTR [ebx-0x7cff2a]
  433a7d:	or     al,BYTE PTR [esi-0x32ff5a]
  433a83:	(bad)  
  433a84:	jmp    FWORD PTR [eax-0x1a]
  433a87:	lods   eax,DWORD PTR ds:[esi]
  433a88:	add    dl,ch
  433a8a:	or     esp,0xffffffff
  433a8d:	sbb    al,0x45
  433a8f:	pop    esi
  433a90:	add    dh,dh
  433a92:	(bad)  
  433a93:	(bad)  
  433a94:	(bad)  
  433a95:	fdivrp st(4),st
  433a97:	inc    esi
  433a98:	call   DWORD PTR [edi]
  433a9a:	add    BYTE PTR [eax],al
  433a9c:	jmp    FWORD PTR [ecx-0x19]
  433a9f:	pop    esi
  433aa0:	add    BYTE PTR ds:0xcb000083,dl
  433aa6:	pusha  
  433aa7:	(bad)  
  433aa8:	(bad)  
  433aa9:	fcos   
  433aab:	(bad)  
  433aac:	call   DWORD PTR [edx+eax*4-0x3328ff29]
  433ab3:	inc    DWORD PTR [eax]
  433ab5:	fdivr  st,st(0)
  433ab7:	or     BYTE PTR [eax],al
  433ab9:	popf   
  433aba:	add    BYTE PTR [ebx-0x572eb601],al
  433ac0:	sbb    DWORD PTR ds:0x98ff00cc,0xffffffdf
  433ac7:	rol    DWORD PTR [eax],0xfa
  433aca:	add    BYTE PTR [eax],al
  433acc:	jmp    DWORD PTR [edx-0x70ff426f]
  433ad2:	add    DWORD PTR [ebx+0x22cdccff],0xffffffff
  433ad9:	xchg   ebx,eax
  433ada:	add    BYTE PTR [ebx-0x329a9f00],al
  433ae0:	jmp    DWORD PTR [edi+edi*8]
  433ae3:	add    DWORD PTR [ebx-0x331ebf01],0xffffffb4
  433aea:	add    DWORD PTR [eax],0x0
  433aed:	rol    BYTE PTR [edi+ebx*4+0x0],1
  433af1:	dec    esp
  433af2:	add    bh,bh
  433af4:	add    dl,ah
  433af6:	cmp    eax,0xffa1006f
  433afb:	(bad)  
  433afc:	call   FWORD PTR [eax+0x34]
  433aff:	xor    eax,0x830041ff
  433b04:	add    dh,al
  433b06:	jmp    0x433aff
  433b08:	jmp    DWORD PTR [ebx]
  433b0a:	add    DWORD PTR [eax],0xffffff89
  433b0d:	and    eax,0xb000feec
  433b12:	mov    DWORD PTR [ecx-0x5031f877],ecx
  433b18:	jmp    DWORD PTR [edi]
  433b1a:	add    bh,bh
  433b1c:	and    DWORD PTR [edi],0xa
  433b1f:	mov    esp,0xffff5200
  433b24:	(bad)  
  433b25:	cmp    eax,0x81ff1b81
  433b2a:	add    BYTE PTR [eax],al
  433b2c:	(bad)  
  433b2d:	cmp    BYTE PTR [eax],bl
  433b2f:	xor    bh,bh
  433b31:	fiadd  DWORD PTR [eax]
  433b33:	add    BYTE PTR [eax],al
  433b35:	retf   
  433b36:	sar    DWORD PTR [edi-0xff937d],1
  433b3c:	inc    DWORD PTR [ecx]
  433b3e:	(bad)  
  433b3f:	(bad)  
  433b41:	(bad)  
  433b42:	inc    DWORD PTR [eax]
  433b44:	jmp    DWORD PTR [ecx+0x65]
  433b47:	lahf   
  433b48:	add    BYTE PTR [edx-0x46007c7d],ch
  433b4e:	pop    ecx
  433b4f:	popf   
  433b50:	mov    esp,ebp
  433b52:	mov    edi,edi
  433b54:	add    BYTE PTR [edi+0x48ff5cc4],ah
  433b5a:	(bad)  
  433b5b:	(bad)  
  433b5c:	push   DWORD PTR [esi]
  433b5e:	les    ebx,FWORD PTR [esi-0x7d]
  433b61:	sar    bh,1
  433b63:	(bad)  
  433b64:	jmp    FWORD PTR [edi+ebx*2]
  433b67:	jle    0x433b68
  433b69:	loope  0x433b6b
  433b6b:	inc    DWORD PTR [eax]
  433b6d:	and    BYTE PTR [ecx],bh
  433b6f:	push   cs
  433b70:	(bad)  
  433b71:	mov    esi,0x15ffffcc
  433b76:	dec    ecx
  433b77:	call   0x43587b
  433b7c:	mov    ebx,esi
  433b7e:	xchg   esp,eax
  433b7f:	or     eax,0x7089
  433b84:	add    BYTE PTR [ecx+0x5d00e79e],al
  433b8a:	inc    DWORD PTR [eax]
  433b8c:	mov    DWORD PTR [eax+0x61],esi
  433b8f:	push   cs
  433b90:	int3   
  433b91:	push   edx
  433b92:	add    bh,bh
  433b94:	push   DWORD PTR [ebx]
  433b96:	lods   eax,DWORD PTR ds:[esi]
  433b97:	push   ds
  433b98:	add    BYTE PTR [ecx],bh
  433b9a:	inc    DWORD PTR [ebx+0x1de36900]
  433ba0:	jmp    FWORD PTR [edi-0x75ff0001]
  433ba6:	fiadd  DWORD PTR ds:0xcc834483
  433bac:	inc    DWORD PTR [edi]
  433bae:	imul   eax,DWORD PTR [ebx-0x1],0xfffffff3
  433bb2:	inc    DWORD PTR [eax]
  433bb4:	mov    DWORD PTR [ebp+0x1ff00d0],edi
  433bba:	(bad)  
  433bbb:	inc    DWORD PTR [eax]
  433bbd:	xor    al,0x5
  433bbf:	pop    ebx
  433bc0:	call   DWORD PTR [eax]
  433bc2:	cmp    edi,0xffffffcc
  433bc5:	jbe    0x433ba2
  433bc7:	mov    edi,?
  433bc9:	pop    edx
  433bca:	add    bh,bh
  433bcc:	jmp    DWORD PTR [edi]
  433bce:	pop    ds
  433bcf:	ror    esp,1
  433bd1:	das    
  433bd2:	add    bh,bh
  433bd4:	jmp    ecx
  433bd6:	adc    BYTE PTR [ebx-0x1],dl
  433bd9:	inc    ebp
  433bda:	add    BYTE PTR [eax],al
  433bdc:	or     DWORD PTR [ecx+0x3d000210],0x0
  433be3:	add    BYTE PTR [ebx+0xef05a5],al
  433be9:	icebp  
  433bea:	add    bh,bh
  433bec:	call   esi
  433bee:	mov    esi,0x42fff7
  433bf3:	int3   
  433bf4:	inc    DWORD PTR [edi]
  433bf6:	scas   eax,DWORD PTR es:[edi]
  433bf7:	fiadd  DWORD PTR [eax]
  433bf9:	pop    esp
  433bfa:	inc    DWORD PTR [eax]
  433bfc:	add    BYTE PTR [ebp+0x4aff5ec7],dh
  433c02:	inc    DWORD PTR [ebx-0x75f74601]
  433c08:	add    BYTE PTR [edx+0x0],bl
  433c0b:	add    BYTE PTR [eax],al
  433c0d:	mov    edx,0xf700ea1b
  433c12:	add    bh,bh
  433c14:	push   DWORD PTR [esi+0x7a]
  433c17:	pop    ebp
  433c18:	(bad)  
  433c19:	fdiv   st(7),st
  433c1b:	dec    esp
  433c1d:	add    DWORD PTR [edi-0x657688],edi
  433c23:	dec    esp
  433c25:	ret    0xd405
  433c28:	xor    DWORD PTR [ebx],0x0
  433c2b:	mov    edi,edi
  433c2d:	hlt    
  433c2e:	add    ch,dh
  433c30:	inc    DWORD PTR [edi+edi*8+0x4df40000]
  433c37:	cmp    BYTE PTR [ebx-0x3300c1],al
  433c3d:	dec    eax
  433c3e:	cdq    
  433c3f:	push   cs
  433c40:	add    BYTE PTR [ebx],dh
  433c42:	add    bh,bh
  433c44:	inc    esp
  433c46:	push   edx
  433c47:	add    BYTE PTR [di],al
  433c4a:	add    BYTE PTR [ecx+0x5e87a500],cl
  433c50:	(bad)  
  433c51:	sti    
  433c52:	inc    DWORD PTR [eax]
  433c54:	push   DWORD PTR [esi-0x64]
  433c57:	cmp    ecx,esp
  433c59:	int3   
  433c5a:	int3   
  433c5b:	int3   
  433c5c:	int3   
  433c5d:	int3   
  433c5e:	int3   
  433c5f:	int3   
  433c60:	and    cl,ah
  433c62:	adc    DWORD PTR [ebx+eax*4-0x6e],ebx
  433c66:	add    DWORD PTR [eax],0x21
  433c69:	(bad)  
  433c6a:	add    DWORD PTR [eax],0x0
  433c6d:	add    BYTE PTR [eax+0x17],bh
  433c70:	add    eax,0xff2c0b00
  433c75:	sbb    bh,bh
  433c77:	add    cl,ah
  433c79:	aaa    
  433c7a:	add    BYTE PTR [ebx+0x6522ff00],al
  433c80:	int    0xff
  433c82:	or     DWORD PTR [eax],0xffffffff
  433c85:	imul   eax,DWORD PTR [eax],0x8957cdff
  433c8b:	inc    DWORD PTR [eax]
  433c8d:	int3   
  433c8e:	fwait
  433c8f:	ins    BYTE PTR es:[edi],dx
  433c90:	fild   DWORD PTR [eax]
  433c92:	in     eax,0x92
  433c94:	(bad)  
  433c95:	mov    ecx,0x124b0000
  433c9a:	or     esp,0x0
  433c9d:	add    BYTE PTR [edx],ah
  433c9f:	xchg   ebp,eax
  433ca0:	jg     0x433c6e
  433ca2:	retf   
  433ca3:	fdivr  st,st(7)
  433ca5:	add    al,0x89
  433ca7:	int3   
  433ca8:	inc    eax
  433ca9:	popf   
  433caa:	(bad)  
  433cab:	inc    DWORD PTR [eax]
  433cad:	mov    DWORD PTR [esi+0x57],esi
  433cb0:	push   ecx
  433cb1:	inc    DWORD PTR [esi+0xe98987]
  433cb7:	call   DWORD PTR [edi+eiz*2]
  433cba:	int3   
  433cbb:	add    BYTE PTR [eax],al
  433cbd:	(bad)  
  433cbe:	cmp    ch,BYTE PTR [esi]
  433cc0:	outs   dx,DWORD PTR ds:[esi]
  433cc1:	add    ch,al
  433cc3:	bnd call edx
  433cc6:	add    bh,bh
  433cc8:	adc    DWORD PTR [eax+eax*1-0x1],edi
  433ccc:	int3   
  433ccd:	call   FWORD PTR [edi+0x1d00dd9e]
  433cd3:	jl     0x433cd4
  433cd5:	stos   BYTE PTR es:[edi],al
  433cd6:	inc    DWORD PTR [ebx-0xfff6b5]
  433cdc:	int3   
  433cdd:	(bad)  
  433cde:	cld    
  433cdf:	retf   0xffc7
  433ce2:	leave  
  433ce3:	bound  eax,QWORD PTR [eax]
  433ce5:	mov    edi,edi
  433ce7:	call   FWORD PTR [edi+0x4c]
  433cea:	dec    esp
  433cec:	add    ah,cl
  433cee:	ss inc ax
  433cf1:	inc    ebp
  433cf3:	mov    dl,0xff
  433cf5:	cld    
  433cf6:	inc    DWORD PTR [eax]
  433cf8:	add    DWORD PTR [eax-0x7c00ff01],ebp
  433cfe:	(bad)  
  433cff:	cwde   
  433d00:	ja     0x433d02
  433d02:	mov    es,ebx
  433d04:	dec    DWORD PTR [edx-0x5927007d]
  433d0a:	dec    esp
  433d0c:	int3   
  433d0d:	add    BYTE PTR [ebx],dl
  433d0f:	arpl   dx,ax
  433d11:	call   DWORD PTR [ecx+esi*2-0x1]
  433d15:	ret    
  433d16:	(bad)  
  433d17:	call   DWORD PTR [esi+edi*4]
  433d1a:	add    bh,bh
  433d1c:	inc    DWORD PTR [eax]
  433d1e:	mov    esi,eax
  433d20:	add    edi,edi
  433d22:	out    dx,al
  433d23:	and    ah,cl
  433d25:	dec    edi
  433d26:	(bad)  
  433d27:	push   DWORD PTR [eax]
  433d29:	mov    al,ds:0x89ff89
  433d2e:	ret    0x383f
  433d31:	push   esp
  433d33:	jbe    0x433cb8
  433d35:	xor    al,BYTE PTR [eax]
  433d37:	int3   
  433d38:	adc    BYTE PTR [edi+edi*8+0x0],0xff
  433d3d:	int3   
  433d3e:	pop    eax
  433d3f:	icebp  
  433d40:	xchg   ebx,eax
  433d41:	mov    ebp,edi
  433d43:	std    
  433d44:	jmp    FWORD PTR [eax]
  433d46:	dec    esp
  433d48:	out    dx,al
  433d49:	popa   
  433d4a:	mov    edi,edi
  433d4c:	add    BYTE PTR [ebx-0x33a54357],al
  433d52:	fwait
  433d53:	das    
  433d54:	jmp    FWORD PTR [edx-0x48620034]
  433d5a:	inc    DWORD PTR [eax]
  433d5c:	(bad)  
  433d5d:	jmp    DWORD PTR [ebx-0x52]
  433d60:	and    al,0x0
  433d62:	rcr    BYTE PTR [esi-0x3300d07d],cl
  433d68:	dec    esi
  433d69:	sub    edi,edi
  433d6b:	(bad)  
  433d6c:	dec    DWORD PTR [ecx-0x820c9c]
  433d72:	mov    eax,0xcc3000dc
  433d77:	jmp    DWORD PTR [esi-0x32]
  433d7a:	mov    DWORD PTR [eax],eax
  433d7c:	add    BYTE PTR [ecx+0x16d27e],cl
  433d82:	aam    0x28
  433d84:	call   ecx
  433d86:	inc    DWORD PTR [ebx+0x836b7d]
  433d8c:	mov    edi,edi
  433d8e:	pop    edx
  433d8f:	hlt    
  433d90:	mov    edi,edi
  433d92:	inc    ecx
  433d93:	sbb    eax,DWORD PTR [eax]
  433d95:	adc    edi,edi
  433d97:	add    BYTE PTR [edx-0x7c00ffad],bl
  433d9d:	call   FWORD PTR [ebx-0x976554d]
  433da3:	inc    DWORD PTR ds:0x439d0000
  433daa:	or     esp,0xffffffff
  433dad:	add    BYTE PTR [ebx+edx*1+0x4b5aff83],dl
  433db4:	or     DWORD PTR [edi+edi*8-0x77],0xffffff9e
  433db9:	jg     0x433dba
  433dbb:	inc    DWORD PTR [eax]
  433dbd:	call   FWORD PTR [eax+0x42]
  433dc0:	jo     0x433dc2
  433dc2:	or     al,0x9d
  433dc4:	jmp    DWORD PTR [eax-0x1]
  433dc7:	int3   
  433dc8:	xchg   ebx,eax
  433dc9:	sahf   
  433dca:	int3   
  433dcb:	(bad)  
  433dcc:	dec    esp
  433dce:	into   
  433dcf:	and    cl,BYTE PTR [eax+0x0]
  433dd2:	and    ah,BYTE PTR [edi-0x1]
  433dd5:	dec    ah
  433dd7:	mov    DWORD PTR [esi+0x22],esi
  433dda:	int3   
  433ddb:	inc    DWORD PTR [eax]
  433ddd:	add    BYTE PTR [ecx-0x34003f13],bh
  433de3:	add    eax,0xff00c2ff
  433de8:	stc    
  433de9:	sar    bh,0x83
  433dec:	add    bh,bh
  433dee:	in     al,dx
  433def:	ss dec edi
  433df1:	add    BYTE PTR [edi],ch
  433df3:	sti    
  433df4:	add    BYTE PTR [edi+0x271d00cc],ch
  433dfa:	add    bh,bh
  433dfc:	inc    DWORD PTR [eax]
  433dfe:	jmp    0x28c6706c
  433e03:	xor    edi,edi
  433e05:	push   esi
  433e06:	inc    DWORD PTR [eax]
  433e08:	pop    eax
  433e09:	lds    eax,FWORD PTR [eax]
  433e0b:	dec    DWORD PTR [ecx+0x33239c00]
  433e11:	dec    DWORD PTR ds:0xffb300cb
  433e17:	add    BYTE PTR [edx],ch
  433e19:	cwde   
  433e1a:	inc    DWORD PTR [ebx-0x1b84ff34]
  433e20:	xchg   esi,eax
  433e21:	dec    DWORD PTR [edx-0x7cca3308]
  433e27:	call   FWORD PTR [edi-0x17]
  433e2a:	inc    DWORD PTR [ebx+0x4bf28983]
  433e30:	mov    ebp,0xb441ff
  433e35:	push   0xc723ffff
  433e3a:	inc    DWORD PTR [ebx+0x59bd00ff]
  433e40:	jge    0x433e41
  433e42:	mov    edx,0x398321
  433e47:	add    al,ah
  433e49:	dec    ebx
  433e4a:	dec    esp
  433e4c:	(bad)  
  433e4d:	call   DWORD PTR [esi]
  433e4f:	add    DWORD PTR [eax-0x76589a34],ebp
  433e55:	jae    0xb232de
  433e5b:	int3   
  433e5c:	inc    DWORD PTR [ebx-0x9b8556]
  433e62:	shl    DWORD PTR [edi+0x0],1
  433e65:	dec    edi
  433e66:	int3   
  433e67:	int3   
  433e68:	push   ebp
  433e69:	(bad)  
  433e6a:	dec    esp
  433e6c:	dec    esp
  433e6e:	cmp    DWORD PTR [ebx],eax
  433e70:	cmc    
  433e71:	jmp    FWORD PTR [ebx+esi*4-0x7c00d100]
  433e78:	jb     0x433e21
  433e7a:	cmp    edi,0x0
  433e7d:	inc    DWORD PTR [ebx]
  433e7f:	loop   0x433ef8
  433e81:	add    BYTE PTR ds:0xffab83a9,ah
  433e87:	push   DWORD PTR [esp+edi*8]
  433e8a:	add    bh,bh
  433e8c:	inc    DWORD PTR [eax]
  433e8e:	jle    0x433e6c
  433e90:	push   esp
  433e91:	add    BYTE PTR [ebx-0x1b],ah
  433e94:	jmp    FWORD PTR [ebx-0x34]
  433e97:	inc    DWORD PTR [ecx-0x5]
  433e9a:	cmp    edi,0xffffff89
  433e9d:	add    bh,ah
  433e9f:	xor    BYTE PTR [ebx],dl
  433ea1:	jmp    DWORD PTR [edx-0x5f005c]
  433ea7:	inc    DWORD PTR [ebp-0x7c00ca]
  433ead:	int3   
  433eae:	mov    eax,0xefff5e8f
  433eb3:	xchg   esp,eax
  433eb4:	jmp    DWORD PTR [ecx+ecx*4+0x0]
  433eb8:	sahf   
  433eb9:	scas   eax,DWORD PTR es:[edi]
  433eba:	or     esp,0xffffffff
  433ebd:	add    BYTE PTR [edx-0x1f],ah
  433ec0:	xor    bh,bh
  433ec2:	sub    ecx,eax
  433ec4:	inc    DWORD PTR [esi]
  433ec6:	add    bh,bh
  433ec8:	cmp    DWORD PTR [ecx+ecx*4],esp
  433ecb:	int3   
  433ecc:	mov    DWORD PTR [eax],eax
  433ece:	clc    
  433ecf:	mov    dl,BYTE PTR [edi]
  433ed1:	dec    DWORD PTR [edi+ecx*4-0x7600e87d]
  433ed8:	cs cwde 
  433eda:	add    bh,bh
  433edc:	cmp    edi,0xffffff95
  433edf:	in     eax,0x19
  433ee1:	mov    DWORD PTR [edx+0xabffbc],esp
  433ee7:	int3   
  433ee8:	inc    ebp
  433ee9:	(bad)  
  433eea:	int3   
  433eeb:	add    BYTE PTR [ecx-0x12aa4b7d],cl
  433ef1:	(bad)  
  433ef2:	(bad)  
  433ef3:	pop    ds
  433ef4:	add    dl,al
  433ef6:	add    BYTE PTR [ecx-0x76cb66],cl
  433efc:	(bad)  
  433efd:	jmp    DWORD PTR [esp+ecx*8]
  433f00:	out    dx,al
  433f01:	call   FWORD PTR [esi]
  433f03:	int3   
  433f04:	add    BYTE PTR [ecx-0x7d],al
  433f07:	sbb    DWORD PTR [esi],0xffffffaf
  433f0a:	inc    DWORD PTR [eax]
  433f0c:	(bad)  
  433f0d:	jmp    FWORD PTR [esi-0x2e]
  433f10:	mov    ebp,0x32fa00
  433f15:	pop    eax
  433f16:	add    bh,bh
  433f18:	enter  0xff8c,0xff
  433f1c:	(bad)  
  433f1d:	(bad)  
  433f1e:	out    dx,al
  433f1f:	fs xchg esp,eax
  433f21:	inc    DWORD PTR [edx]
  433f23:	and    edi,edi
  433f25:	out    0xff,eax
  433f27:	and    edx,0xffffff8e
  433f2a:	inc    DWORD PTR [ebx-0x1f07ff01]
  433f30:	repz inc DWORD PTR [eax-0xd5335a]
  433f37:	int3   
  433f38:	mov    bh,0x69
  433f3a:	inc    DWORD PTR [eax]
  433f3c:	int3   
  433f3d:	add    BYTE PTR [ebx],bl
  433f3f:	xor    bh,BYTE PTR [edi-0xde7934]
  433f45:	cmp    bh,0x83
  433f48:	xchg   esi,eax
  433f49:	xchg   ebp,eax
  433f4a:	add    BYTE PTR [ebx-0x7d74ff77],al
  433f50:	xor    edi,edi
  433f52:	mov    dh,0xee
  433f54:	inc    DWORD PTR [ecx-0x1]
  433f57:	call   DWORD PTR [edi]
  433f59:	xchg   ah,cl
  433f5b:	(bad)  
  433f5c:	(bad)  
  433f5d:	jmp    FWORD PTR [esi-0xb002364]
  433f63:	mov    edi,?
  433f65:	or     DWORD PTR [eax],eax
  433f67:	push   ecx
  433f69:	(bad)  
  433f6a:	dec    DWORD PTR [ecx+0x102a0000]
  433f70:	xchg   ebp,eax
  433f71:	mov    DWORD PTR [edi-0x73],eax
  433f74:	push   ecx
  433f76:	add    bh,bh
  433f78:	xor    BYTE PTR [esi-0xff01],0x5
  433f7f:	add    bl,BYTE PTR [ebx]
  433f81:	int3   
  433f82:	pushf  
  433f83:	add    BYTE PTR ds:[ebx+0x7bc000ff],ch
  433f8a:	add    BYTE PTR [ecx+0x52eeff83],cl
  433f90:	dec    ebx
  433f91:	push   ebp
  433f93:	dec    ah
  433f95:	or     bh,bh
  433f97:	int3   
  433f98:	das    
  433f99:	mov    al,ds:0xcc83ffff
  433f9e:	and    al,0x61
  433fa0:	inc    ebx
  433fa1:	int3   
  433fa2:	out    dx,eax
  433fa3:	out    0x0,eax
  433fa5:	cmp    al,0xcc
  433fa7:	push   DWORD PTR [ebp-0x3f]
  433faa:	add    DWORD PTR [eax],0x0
  433fad:	inc    DWORD PTR [edx]
  433faf:	or     BYTE PTR [edx],dh
  433fb1:	sub    DWORD PTR [esi],0x10
  433fb4:	jmp    FWORD PTR [esi-0x34]
  433fb7:	add    BYTE PTR [esp+eiz*2],al
  433fba:	add    DWORD PTR [eax],0xffffff83
  433fbd:	dec    DWORD PTR [ecx]
  433fbf:	aam    0x4a
  433fc1:	push   DWORD PTR [ebp+0x1b]
  433fc4:	(bad)  
  433fc5:	js     0x433f4a
  433fc7:	add    dl,dh
  433fc9:	ss (bad) 
  433fcb:	inc    DWORD PTR [eax]
  433fcd:	inc    DWORD PTR [ecx-0x31]
  433fd0:	push   ss
  433fd1:	int3   
  433fd2:	or     ch,BYTE PTR [edi+edi*8+0x1d]
  433fd6:	add    DWORD PTR [eax],0x17
  433fd9:	sar    edi,1
  433fdb:	or     esp,0xffffffff
  433fde:	mov    esi,0x9f006a0d
  433fe3:	retf   
  433fe4:	push   edx
  433fe6:	add    DWORD PTR [eax],0x39
  433fe9:	ins    DWORD PTR es:[edi],dx
  433fea:	(bad)  
  433feb:	(bad)  
  433fec:	(bad)  
  433fed:	call   ebx
  433fef:	ret    0x897d
  433ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ff3:	and    eax,0xff83d4ff
  433ff8:	mov    ds:0x78,al
  433ffd:	inc    DWORD PTR ds:0x74ff8c04
  434003:	push   ds
  434004:	inc    ecx
  434006:	(bad)  
  434007:	dec    esp
  434009:	xchg   edx,eax
  43400a:	add    DWORD PTR [eax],0xffffffff
  43400d:	add    BYTE PTR [esi-0xd],dl
  434010:	imul   eax,DWORD PTR [eax],0xca0063ef
  434016:	add    BYTE PTR [ebx-0x76138d],al
  43401c:	add    bh,bh
  43401e:	cmp    BYTE PTR [eax],dl
  434020:	and    bh,bh
  434022:	(bad)
  434025:	ja     0x434027
  434027:	add    BYTE PTR [ecx+0x79],ah
  43402a:	add    bh,bh
  43402c:	int3   
  43402d:	int3   
  43402e:	sub    esi,DWORD PTR [ebp+0x108bff32]
  434034:	add    BYTE PTR [eax-0x1],ch
  434037:	int3   
  434038:	jns    0x434097
  43403a:	int3   
  43403b:	(bad)  
  43403c:	inc    DWORD PTR [eax]
  43403e:	cmc    
  43403f:	out    dx,eax
  434040:	call   0x1b0045
  434045:	push   ss
  434046:	int3   
  434047:	or     ebp,0xffffffdc
  43404a:	inc    DWORD PTR [eax]
  43404c:	add    ah,cl
  43404e:	es pop ss
  434050:	call   0xff87:0xff0dfacc
  434057:	jmp    FWORD PTR [ecx-0x76000008]
  43405d:	push   DWORD PTR [esi-0x61005137]
  434063:	sbb    edi,edi
  434065:	test   eax,0x5f16ff00
  43406a:	add    BYTE PTR [ebx+0x23c00000],al
  434070:	add    BYTE PTR gs:[esi+0x4d],bl
  434074:	or     DWORD PTR [ebp-0xe4bff01],0xffffff83
  43407b:	inc    DWORD PTR [eax]
  43407d:	add    dh,ch
  43407f:	int3   
  434080:	call   0xd19b84
  434085:	pusha  
  434086:	add    bh,bh
  434088:	and    eax,0x8983001a
  43408d:	inc    DWORD PTR [eax+0x730039b5]
  434093:	(bad)  
  434094:	inc    DWORD PTR [ecx]
  434096:	add    bh,bh
  434098:	rcl    BYTE PTR [ecx],1
  43409a:	add    DWORD PTR [eax],0xffffffff
  43409d:	add    ch,ah
  43409f:	(bad)  
  4340a0:	jp     0x434025
  4340a2:	sbb    esp,DWORD PTR [edi-0x1]
  4340a5:	dec    ebp
  4340a6:	int3   
  4340a7:	jmp    DWORD PTR [ebx]
  4340a9:	popf   
  4340aa:	add    bh,bh
  4340ac:	inc    DWORD PTR [eax]
  4340ae:	arpl   WORD PTR [esi-0x152d767f],cx
  4340b4:	call   DWORD PTR [edi+edi*8-0x7cf92001]
  4340bb:	int3   
  4340bc:	(bad)  
  4340bd:	jmp    DWORD PTR [ecx+0x25]
  4340c0:	sub    eax,0xffa12283
  4340c5:	loop   0x4340c6
  4340c7:	add    BYTE PTR [esi],bh
  4340c9:	push   edx
  4340ca:	(bad)  
  4340cb:	inc    DWORD PTR [eax]
  4340cd:	or     esp,0xffffffb0
  4340d0:	inc    edx
  4340d1:	add    bl,bh
  4340d3:	(bad)  
  4340d4:	inc    DWORD PTR [eax]
  4340d6:	add    BYTE PTR [eax],al
  4340d8:	inc    esp
  4340d9:	call   0x3866:0xff838300
  4340e0:	add    BYTE PTR [eax],0x29
  4340e3:	(bad)  
  4340e4:	push   DWORD PTR [ecx+0x50348300]
  4340ea:	int3   
  4340eb:	add    BYTE PTR [eax],al
  4340ed:	add    bh,bl
  4340ef:	inc    edx
  4340f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4340f1:	dec    DWORD PTR [edi+esi*8]
  4340f4:	call   FWORD PTR [ebx-0x114d0001]
  4340fa:	mov    esp,ecx
  4340fc:	add    BYTE PTR [eax],al
  4340fe:	(bad)  
  4340ff:	pop    ss
  434100:	lods   al,BYTE PTR ds:[esi]
  434101:	dec    DWORD PTR [edi-0x300065]
  434107:	add    BYTE PTR [ebp+ebx*4+0x0],cl
  43410e:	mov    ebp,0x98ff0197
  434113:	mov    edx,0xffffe1ff
  434118:	std    
  434119:	call   0x142caa1
  43411e:	xor    esp,DWORD PTR gs:[ebx+0xa6adff]
  434125:	xchg   ebp,eax
  434126:	add    bh,bh
  434128:	test   BYTE PTR [eax-0x7d],dl
  43412b:	inc    DWORD PTR [ebx-0x1d3e9f01]
  434131:	add    al,dl
  434133:	cmp    cl,ah
  434135:	retf   
  434136:	add    bh,bh
  434138:	or     DWORD PTR [eax+eax*1-0x7d],ecx
  43413c:	(bad)  
  43413d:	call   FWORD PTR [ebp-0x24]
  434140:	pop    ds
  434141:	add    dh,dh
  434143:	mov    dl,0xff
  434145:	outs   dx,BYTE PTR ds:[esi]
  434146:	inc    DWORD PTR [eax]
  434148:	sub    eax,DWORD PTR [ecx+0xffffff]
  43414e:	outs   dx,DWORD PTR ds:[esi]
  43414f:	fwait
  434150:	push   esp
  434151:	int3   
  434152:	jbe    0x4341ac
  434154:	call   FWORD PTR [ecx-0x7d]
  434157:	mov    DWORD PTR [ecx-0x7cff7cf5],edx
  43415d:	call   FWORD PTR [eax]
  43415f:	mov    DWORD PTR [ecx],esi
  434161:	adc    DWORD PTR [edi-0x78ffa7],0xffffffff
  434168:	out    dx,al
  434169:	into   
  43416a:	cmp    edi,0xffffffff
  43416d:	jmp    FWORD PTR [ecx+edx*1+0x7c]
  434171:	add    ah,ch
  434173:	dec    BYTE PTR [ecx-0x320033d0]
  434179:	cmp    bh,bh
  43417b:	(bad)  
  43417c:	dec    esp
  43417e:	and    eax,0xd70078aa
  434183:	loopne 0x434185
  434185:	mov    ebx,0x656d00ff
  43418a:	(bad)  
  43418b:	(bad)  
  43418c:	(bad)  
  43418d:	jmp    FWORD PTR [edi-0x7d7c9beb]
  434193:	jb     0x434194
  434195:	out    dx,al
  434196:	mov    DWORD PTR [eax],eax
  434198:	inc    ebx
  434199:	cmp    bh,0xff
  43419c:	add    BYTE PTR [eax],al
  43419e:	shl    BYTE PTR [ecx],cl
  4341a0:	mov    dl,0xcc
  4341a2:	xor    BYTE PTR [ebx+0x0],ch
  4341a5:	bound  eax,QWORD PTR [ebx+0xb444ff]
  4341ab:	add    bh,bh
  4341ad:	int3   
  4341ae:	pushf  
  4341af:	rcr    BYTE PTR [edi+0xd3d5ff],0x68
  4341b6:	cmp    edi,0x58
  4341b9:	xlat   BYTE PTR ds:[ebx]
  4341ba:	(bad)  
  4341bb:	inc    DWORD PTR [ebx+0x5fac4d89]
  4341c1:	(bad)  
  4341c2:	in     eax,dx
  4341c3:	jbe    0x4341c4
  4341c5:	add    BYTE PTR gs:[eax],al
  4341c8:	mov    al,ds:0x8300cc70
  4341cd:	jmp    FWORD PTR [ebx+0x70837881]
  4341d3:	add    bh,bh
  4341d5:	in     al,dx
  4341d6:	add    BYTE PTR [ebx+0xff223d],al
  4341dc:	int3   
  4341dd:	call   DWORD PTR [edx]
  4341df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4341e0:	mov    ch,0xff
  4341e2:	(bad)  
  4341e3:	repnz and DWORD PTR [eax+0x75f2ff89],0xffffffff
  4341eb:	add    BYTE PTR [ebx+0x7c8a9300],al
  4341f1:	int3   
  4341f2:	les    ebx,FWORD PTR [edi-0x247d]
  4341f8:	retf   0xfffb
  4341fb:	add    bh,bh
  4341fd:	cmp    ecx,0x16
  434200:	mov    edi,0x835257ff
  434205:	xor    DWORD PTR [ecx-0xb2dc34],ecx
  43420b:	add    bh,bh
  43420d:	mov    DWORD PTR [eax+0x71ff94cd],edi
  434213:	lods   al,BYTE PTR ds:[esi]
  434214:	int3   
  434215:	pushf  
  434216:	(bad)  
  434217:	call   DWORD PTR [ecx]
  434219:	lds    eax,FWORD PTR [eax]
  43421b:	inc    DWORD PTR [eax]
  43421d:	jmp    DWORD PTR [edx]
  43421f:	test   BYTE PTR [eax-0x1c601],ah
  434225:	arpl   WORD PTR [eax],ax
  434227:	add    BYTE PTR [eax],bl
  434229:	and    bh,bh
  43422b:	int3   
  43422c:	inc    DWORD PTR [ebx-0x445f77]
  434232:	aad    0xd2
  434234:	add    al,bl
  434236:	dec    DWORD PTR [ecx-0xa2e5]
  43423c:	add    BYTE PTR [ebx-0x7ce4dffe],al
  434242:	pushf  
  434243:	icebp  
  434244:	jmp    FWORD PTR [edi-0x1]
  434247:	add    BYTE PTR [esi],dl
  434249:	adc    bh,bh
  43424b:	add    DWORD PTR [ebx+0x6a0af583],0xffffff89
  434252:	push   esp
  434253:	sub    ecx,esp
  434255:	pop    ds
  434256:	inc    DWORD PTR [ebx+0xffff81]
  43425c:	add    bh,bh
  43425e:	lea    ebx,[ebp+0x78ab8378]
  434264:	push   DWORD PTR [edx-0x1]
  434267:	add    BYTE PTR [ebx+eiz*4],cl
  43426a:	mov    DWORD PTR [eax],eax
  43426c:	inc    DWORD PTR [ebx-0xa5a9e8]
  434272:	sahf   
  434273:	cmp    al,0x89
  434275:	int3   
  434276:	inc    DWORD PTR [ebx-0xa89f]
  43427c:	add    ah,cl
  43427e:	xor    eax,0x76cc85ac
  434283:	jmp    0x58f7:0xff57ff
  43428a:	add    DWORD PTR [eax],0x0
  43428d:	add    BYTE PTR [ecx-0x57],al
  434290:	xlat   BYTE PTR ds:[ebx]
  434291:	add    BYTE PTR [ebx+0x41],cl
  434294:	add    BYTE PTR [edx-0x359b0077],ch
  43429a:	(bad)  
  43429b:	inc    DWORD PTR [ebx-0x1d7bc701]
  4342a1:	jmp    FWORD PTR [eax-0x52]
  4342a4:	(bad)  
  4342a5:	cmp    eax,DWORD PTR [eax]
  4342a7:	(bad)  
  4342a8:	ficomp DWORD PTR [ebp-0x7cff01]
  4342ae:	loop   0x434239
  4342b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4342b1:	add    cl,dl
  4342b3:	dec    esi
  4342b4:	push   DWORD PTR [ebx-0x77]
  4342b7:	push   DWORD PTR [edi-0x75]
  4342ba:	mov    DWORD PTR [eax],eax
  4342bc:	add    BYTE PTR [ecx+0x4b04ac],cl
  4342c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4342c3:	mov    DWORD PTR ds:[edi],esp
  4342c6:	or     esp,0x75
  4342c9:	ja     0x434297
  4342cb:	inc    DWORD PTR [eax]
  4342cd:	add    BYTE PTR [edi+0x27],dh
  4342d0:	mov    ah,0xff
  4342d2:	in     al,0x78
  4342d4:	call   FWORD PTR [edi-0x683b7700]
  4342da:	add    BYTE PTR [ecx+0x71a4ffff],cl
  4342e0:	dec    esi
  4342e1:	push   DWORD PTR [edx]
  4342e3:	sar    bh,1
  4342e5:	push   0xffffff89
  4342e7:	dec    DWORD PTR [edx]
  4342e9:	(bad)  
  4342ea:	int3   
  4342eb:	inc    DWORD PTR [eax]
  4342ed:	call   FWORD PTR [esi-0x55]
  4342f0:	call   0xc0a5f5
  4342f5:	inc    DWORD PTR cs:[eax]
  4342f8:	fld    DWORD PTR [edi]
  4342fa:	dec    DWORD PTR [ecx-0x7be03301]
  434300:	xchg   ebx,eax
  434301:	dec    ebx
  434303:	mov    ecx,0xffffc600
  434308:	ror    esi,1
  43430a:	add    BYTE PTR [eax],al
  43430c:	dec    DWORD PTR [ecx-0xc683ff]
  434312:	(bad)  
  434313:	or     eax,0xffff6400
  434318:	xor    DWORD PTR [edx-0xffff01],ebp
  43431e:	loop   0x43435a
  434320:	xlat   BYTE PTR ds:[ebx]
  434321:	add    BYTE PTR [edi],ah
  434323:	in     eax,0xff
  434325:	add    al,0x0
  434327:	(bad)  
  434328:	mov    eax,0x8383835c
  43432d:	dec    DWORD PTR [eax]
  43432f:	mov    dl,0x82
  434331:	sbb    DWORD PTR [esi+edx*4+0xff5e00],0xffffffaa
  434339:	arpl   di,di
  43433b:	mov    edi,edi
  43433d:	add    BYTE PTR [ecx-0x4900dc33],ah
  434343:	rol    DWORD PTR [ebx-0xb7c007a],1
  434349:	jo     0x4342ce
  43434b:	add    DWORD PTR [ebx-0x3284297d],0xffffffff
  434352:	leave  
  434353:	mov    dl,0x0
  434355:	imul   eax,DWORD PTR [ebx-0xc4c301],0xb30000ff
  43435f:	rcl    DWORD PTR [esi+0x0],cl
  434362:	mov    esi,0xffe5ffbd
  434367:	int3   
  434368:	fst    QWORD PTR [eax+eax*1]
  43436b:	int3   
  43436c:	add    bh,bh
  43436e:	lahf   
  43436f:	pxor   mm7,mm7
  434372:	mov    al,0xb6
  434374:	add    BYTE PTR [edi+edi*8],ch
  434377:	int3   
  434378:	(bad)  
  43437a:	add    bh,bh
  43437c:	(bad)  
  43437d:	call   DWORD PTR [ebx]
  43437f:	sbb    al,0x6d
  434381:	call   DWORD PTR [edi+0xe9ff37]
  434387:	(bad)  
  434388:	mov    ebx,0x8300001b
  43438d:	int3   
  43438e:	(bad)  
  43438f:	data16 out dx,al
  434391:	call   FWORD PTR [esi+0x7a]
  434394:	add    BYTE PTR [eax],dh
  434396:	(bad)  
  434397:	inc    DWORD PTR [eax+0xd]
  43439a:	inc    DWORD PTR [eax]
  43439c:	add    DWORD PTR [eax],0xffffffa7
  43439f:	jg     0x434324
  4343a1:	add    BYTE PTR [ebx],dl
  4343a3:	arpl   sp,cx
  4343a5:	das    
  4343a6:	inc    DWORD PTR [eax]
  4343a8:	inc    ecx
  4343a9:	push   0xffff89ff
  4343ae:	int    0x7e
  4343b0:	hlt    
  4343b1:	call   edx
  4343b3:	sbb    DWORD PTR [ebx-0x1976ff02],eax
  4343b9:	xchg   DWORD PTR [eax],eax
  4343bb:	add    bh,bh
  4343bd:	(bad)  
  4343be:	fsub   QWORD PTR [esi+0xc06ff3f]
  4343c4:	jmp    FWORD PTR [edi-0x62dfff01]
  4343ca:	cmp    edi,0xffffffff
  4343cd:	push   DWORD PTR [ebx]
  4343cf:	cmp    DWORD PTR [edi+0x0],0xdc89e09e
  4343d6:	mov    edi,edi
  4343d8:	pop    ebp
  4343d9:	xor    DWORD PTR [ecx-0x18ff0100],ecx
  4343df:	gs jmp 0xff26:0x13afff
  4343e7:	adc    DWORD PTR ds:0xff83ffb7,0xffffffff
  4343ee:	enter  0x2ac7,0x89
  4343f2:	div    eax
  4343f4:	add    bl,dl
  4343f6:	dec    esp
  4343f8:	mov    ebx,0xff83cc51
  4343fd:	inc    edx
  4343ff:	push   0xffffff83
  434401:	jmp    esi
  434403:	icebp  
  434404:	(bad)  
  434405:	cli    
  434406:	add    bh,bh
  434408:	clc    
  434409:	inc    edx
  43440a:	cmp    edi,0xffffffcc
  43440d:	add    BYTE PTR [esi+0x43],cl
  434410:	idiv   bh
  434412:	mov    esp,0xffbaccc3
  434417:	mov    DWORD PTR [eax],ecx
  434419:	sti    
  43441a:	(bad)  
  43441b:	inc    DWORD PTR [ebx-0x55dd0b01]
  434421:	add    ah,dh
  434423:	or     edi,edi
  434425:	inc    DWORD PTR [bx+si]
  434428:	jp     0x434498
  43442a:	cmp    edi,0x0
  43442d:	jmp    FWORD PTR [edi-0x4a]
  434430:	out    0xff,al
  434432:	scas   eax,DWORD PTR es:[edi]
  434433:	xchg   ebx,eax
  434434:	jmp    FWORD PTR [esi]
  434436:	dec    DWORD PTR [ecx-0x33ffa450]
  43443c:	add    bh,bh
  43443e:	idiv   bl
  434440:	mov    edx,0xffe7c0ff
  434445:	and    eax,DWORD PTR [eax]
  434447:	int3   
  434448:	xchg   esp,eax
  434449:	cli    
  43444a:	add    DWORD PTR [ebx+0x1cedffff],0xfffffff2
  434451:	add    BYTE PTR [ebp-0x7a0059],dl
  434457:	push   DWORD PTR [ebp-0x7d]
  43445a:	(bad)  
  43445b:	(bad)  
  43445c:	dec    esp
  43445e:	rcl    BYTE PTR [edx-0x1387c2c],cl
  434464:	mov    DWORD PTR [esi-0x1],edx
  434467:	int3   
  434468:	pop    esp
  434469:	jle    0x43446a
  43446b:	cmp    edi,0xffffffff
  43446e:	inc    esp
  43446f:	mov    ecx,0xde52ffa8
  434474:	dec    DWORD PTR [edx]
  434476:	add    BYTE PTR [ebx-0xff63c0],al
  43447c:	dec    esp
  43447e:	push   ebx
  43447f:	mov    eax,0x7968ffa7
  434484:	int3   
  434485:	repz mov edi,edi
  434488:	and    ecx,DWORD PTR [edi]
  43448a:	or     esp,0xffffffff
  43448d:	inc    DWORD PTR [esi-0x3f76a253]
  434493:	mov    ecx,0xcccb83
  434498:	scas   al,BYTE PTR es:[edi]
  434499:	adc    al,0x89
  43449b:	(bad)  
  43449c:	(bad)  
  43449d:	inc    DWORD PTR [edi+esi*2]
  4344a0:	(bad)  
  4344a1:	jmp    FWORD PTR [edx+0x8]
  4344a4:	call   esi
  4344a6:	inc    DWORD PTR [eax]
  4344a8:	call   0x142c801
  4344ad:	jmp    DWORD PTR [edi]
  4344af:	std    
  4344b0:	jecxz  0x4344b1
  4344b2:	add    BYTE PTR [eax-0x987d],ch
  4344b8:	xchg   ecx,eax
  4344b9:	imul   edi,edi,0x360083ff
  4344bf:	and    al,0x4c
  4344c1:	int3   
  4344c2:	and    DWORD PTR [esi-0x1],ecx
  4344c5:	ds cmp edi,0xffffffa6
  4344c9:	inc    ebx
  4344ca:	cmp    edi,0x0
  4344cd:	adc    DWORD PTR [ecx],0x33
  4344d0:	adc    edi,edi
  4344d2:	mov    dl,0x12
  4344d4:	(bad)  
  4344d5:	jmp    0x83ff:0xd40effcc
  4344dc:	add    ah,cl
  4344de:	xchg   edx,eax
  4344df:	je     0x434486
  4344e1:	add    BYTE PTR [esi+0x1c],bh
  4344e4:	dec    DWORD PTR [edx-0x7d]
  4344e7:	mov    DWORD PTR [esi+eax*1],edi
  4344ea:	add    ah,cl
  4344ec:	inc    DWORD PTR [eax]
  4344ee:	test   al,0x71
  4344f0:	push   0xffffffff
  4344f2:	in     al,0x78
  4344f4:	add    cl,dh
  4344f6:	(bad)  
  4344f7:	jmp    FWORD PTR [edi]
  4344f9:	(bad)  
  4344fa:	(bad)  
  4344fb:	(bad)  
  4344fc:	inc    DWORD PTR [eax]
  4344fe:	inc    edx
  4344ff:	xchg   ecx,eax
  434500:	push   ebx
  434501:	dec    DWORD PTR [ebp-0x34]
  434504:	jmp    FWORD PTR [ecx-0x16600100]
  43450a:	dec    esp
  43450c:	add    DWORD PTR [eax],0xfffffff6
  43450f:	les    edi,FWORD PTR [eax+eax*1-0x35]
  434513:	push   es
  434514:	adc    DWORD PTR [edx-0x1b8f0100],0xffffffff
  43451b:	cmp    edi,0xffffff89
  43451e:	xor    BYTE PTR [edx],0x59
  434521:	call   FWORD PTR [esi-0x3e]
  434524:	dec    DWORD PTR [eax-0x5d140001]
  43452a:	add    bh,bh
  43452c:	inc    DWORD PTR [eax]
  43452e:	sbb    al,0x1f
  434530:	stos   BYTE PTR es:[edi],al
  434531:	inc    edi
  434533:	pop    esp
  434534:	add    BYTE PTR [ecx+0x24d4ff83],ch
  43453a:	(bad)  
  43453b:	(bad)  
  43453c:	(bad)  
  43453d:	call   FWORD PTR [eax+0x210054e6]
  434543:	jl     0x434544
  434545:	test   BYTE PTR [eax],0xcc
  434548:	std    
  434549:	xchg   BYTE PTR [ebx+0x49ffccff],al
  43454f:	inc    ebx
  434550:	stos   BYTE PTR es:[edi],al
  434551:	add    BYTE PTR [ecx+0x54],dl
  434554:	add    DWORD PTR [esi+0x0],0xffffffff
  434558:	mov    ebp,0xeb
  43455d:	add    BYTE PTR [ecx],al
  43455f:	xor    ah,BYTE PTR [ebx]
  434561:	(bad)  
  434562:	in     al,dx
  434563:	popf   
  434564:	inc    esp
  434566:	(bad)  
  434567:	jmp    DWORD PTR [ebx-0x19]
  43456a:	(bad)  
  43456b:	dec    esp
  43456d:	add    ah,bl
  43456f:	into   
  434570:	jns    0x43453e
  434572:	or     esi,DWORD PTR [ebx-0x1]
  434575:	inc    ecx
  434576:	inc    DWORD PTR [eax]
  434578:	adc    DWORD PTR [edx-0x1],esi
  43457b:	int3   
  43457c:	add    BYTE PTR [eax],al
  43457e:	data16 mov dh,0x55
  434581:	call   DWORD PTR [esi-0x7]
  434584:	mov    DWORD PTR [eax-0x1],edi
  434587:	dec    DWORD PTR [eax-0x7600c1]
  43458d:	sub    esi,0x0
  434590:	out    0x89,al
  434592:	fdiv   QWORD PTR [esi-0x1]
  434595:	jb     0x43451a
  434597:	dec    DWORD PTR [ebp+0x5e]
  43459a:	or     DWORD PTR [ecx-0xb370100],0xffffffe6
  4345a1:	mov    DWORD PTR [ebp+edi*4-0x1],esi
  4345a5:	cmp    edi,edi
  4345a7:	dec    DWORD PTR [edx-0x336d]
  4345ad:	call   DWORD PTR [ebx-0xf764655]
  4345b3:	jo     0x4345b5
  4345b5:	mov    ch,0xcc
  4345b7:	add    ah,dl
  4345b9:	jecxz  0x4345ba
  4345bb:	add    BYTE PTR [eax],al
  4345bd:	add    al,bl
  4345bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345c0:	pop    es
  4345c1:	add    BYTE PTR [edi+0x41],dl
  4345c4:	adc    DWORD PTR [edi-0x5ea37d00],0x0
  4345cb:	inc    DWORD PTR [eax]
  4345cd:	add    al,al
  4345cf:	add    eax,0xa8450080
  4345d4:	add    BYTE PTR [eax],dh
  4345d6:	add    bh,bh
  4345d8:	cld    
  4345d9:	jns    0x434564
  4345db:	inc    DWORD PTR [eax]
  4345dd:	push   DWORD PTR [edx-0x1c00fb45]
  4345e3:	mov    ebx,0xff008b00
  4345e8:	mov    cl,0x3b
  4345ea:	inc    DWORD PTR [eax]
  4345ec:	(bad)  
  4345ed:	dec    DWORD PTR [eax+ebx*2-0x5a387686]
  4345f4:	jmp    DWORD PTR [eax]
  4345f6:	(bad)  
  4345f7:	(bad)  
  4345f8:	cmp    BYTE PTR [ecx-0x1],bl
  4345fb:	add    BYTE PTR [eax],al
  4345fd:	dec    DWORD PTR [edx+ecx*4]
  434600:	in     al,dx
  434601:	add    BYTE PTR [ebx+0x31],bh
  434604:	jmp    FWORD PTR [ebp-0x5397ff7d]
  43460a:	(bad)  
  43460b:	(bad)  
  43460c:	(bad)  
  43460d:	call   FWORD PTR [ecx]
  43460f:	(bad)  
  434610:	(bad)  
  434611:	mov    DWORD PTR [ecx-0x67],esp
  434614:	sbb    DWORD PTR [ebp+0x609c00ff],0xffffffff
  43461b:	int3   
  43461c:	add    bh,bh
  43461e:	mov    ds:0x97ff7f23,eax
  434623:	inc    edi
  434624:	push   DWORD PTR [edi]
  434626:	add    ah,cl
  434628:	in     al,dx
  434629:	(bad)  
  43462a:	dec    esp
  43462c:	add    DWORD PTR [eax],0x32
  43462f:	rcr    ebp,cl
  434631:	jmp    DWORD PTR [ebx+0x7c]
  434634:	add    DWORD PTR [edx],0x0
  434637:	int3   
  434638:	lahf   
  434639:	sbb    al,BYTE PTR [ebx+0x1100ffff]
  43463f:	mov    BYTE PTR [edi-0x1],bh
  434642:	pop    eax
  434643:	push   esi
  434644:	call   DWORD PTR [esi-0x77]
  434647:	sub    DWORD PTR [esi-0xffff58],0x0
  43464e:	sub    cl,bl
  434650:	cmc    
  434651:	add    ah,ch
  434653:	cmc    
  434654:	add    BYTE PTR [esi],ah
  434656:	or     esp,0x36
  434659:	mov    DWORD PTR [eax],eax
  43465b:	add    bh,bh
  43465d:	mov    ebx,esp
  43465f:	jmp    0x4346b9
  434661:	add    bh,dl
  434663:	hlt    
  434664:	sub    DWORD PTR [ebx-0x7d],0xffffffff
  434668:	mov    bl,0x7c
  43466a:	add    BYTE PTR [ebx+0x3a51ffcc],al
  434670:	call   0x5c:0xff5a5683
  434677:	sub    edi,0x38
  43467a:	add    bh,bh
  43467c:	add    BYTE PTR [eax],al
  43467e:	or     eax,0xccfff90c
  434683:	pop    edi
  434684:	sub    DWORD PTR [edi],0x0
  434687:	add    BYTE PTR [esi+0x5b],bh
  43468a:	inc    DWORD PTR [ebx-0x42a17c01]
  434690:	adc    cl,BYTE PTR [ecx+0x4b89e23e]
  434696:	inc    DWORD PTR [ebx-0x33ff48]
  43469c:	add    bh,bh
  43469e:	imul   esi,DWORD PTR [edi-0x1a4900f2],0x83ff6200
  4346a8:	and    eax,0xffff0025
  4346ad:	add    BYTE PTR [ecx+0x5800919c],ch
  4346b3:	retf   
  4346b4:	add    BYTE PTR [ebx-0x4130077],bh
  4346ba:	add    bh,bh
  4346bc:	cmp    edi,0x3a
  4346bf:	push   ss
  4346c0:	out    0xcc,al
  4346c2:	fbstp  TBYTE PTR [eax+0x0]
  4346c5:	mov    esi,0x9795ff89
  4346ca:	(bad)  
  4346cb:	(bad)  
  4346cc:	(bad)  
  4346cd:	call   DWORD PTR [ebp+0x4e]
  4346d0:	pop    esi
  4346d1:	jmp    FWORD PTR [ebx-0x7c8f7c2b]
  4346d7:	call   DWORD PTR [edi+0xe5]
  4346dd:	add    BYTE PTR [ebp+0x79ff981c],cl
  4346e3:	dec    ebp
  4346e4:	push   DWORD PTR [ecx-0x7d]
  4346e7:	add    BYTE PTR [ebp-0x76cf],dl
  4346ed:	jmp    FWORD PTR [edi+0x26ffff63]
  4346f3:	popa   
  4346f4:	jmp    DWORD PTR [ecx-0x1]
  4346f7:	int3   
  4346f8:	cs cmp eax,0xff00ff00
  4346fe:	mov    bl,0xe7
  434700:	xchg   ebp,eax
  434701:	call   DWORD PTR [ecx-0x53]
  434704:	add    BYTE PTR [eax-0xcdaff01],ah
  43470a:	cmp    edi,0xffffffcc
  43470d:	jmp    esp
  43470f:	call   0x3eff:0xff1a00a0
  434716:	int3   
  434717:	int3   
  434718:	mov    edx,0xff55
  43471d:	dec    DWORD PTR [ecx-0x16]
  434720:	rol    DWORD PTR [eax],cl
  434722:	xor    ebp,DWORD PTR [ecx-0xab34]
  434728:	push   ds
  434729:	and    BYTE PTR [eax],al
  43472b:	add    BYTE PTR [eax],al
  43472d:	add    BYTE PTR [esi],ch
  43472f:	int3   
  434730:	mov    al,ds:0xf590ff
  434735:	xor    bh,bh
  434737:	and    DWORD PTR [ebx-0x3300006a],0xffffffff
  43473e:	mov    ebp,DWORD PTR [edx-0x26]
  434741:	jmp    esp
  434743:	jns    0x434745
  434745:	cmp    edi,edi
  434747:	(bad)  
  434748:	jl     0x4346f0
  43474a:	add    DWORD PTR [eax],0xffffffff
  43474d:	push   DWORD PTR [ebx]
  43474f:	mov    edi,0x965b83a5
  434754:	call   FWORD PTR [edx]
  434756:	add    BYTE PTR [eax],al
  434758:	sbb    al,0xe3
  43475a:	dec    esp
  43475c:	int3   
  43475d:	add    dl,ah
  43475f:	push   0xffffffc2
  434761:	mov    DWORD PTR [eax+eax*8],ecx
  434764:	add    BYTE PTR [edx-0x77ab7c34],ch
  43476a:	dec    esp
  43476c:	add    DWORD PTR [eax],0x64
  43476f:	and    DWORD PTR [edx-0x390601],0x8affff94
  434779:	pop    edi
  43477a:	add    bh,bh
  43477c:	add    DWORD PTR [ebx+0x67771c],0xfffffff6
  434783:	(bad)  
  434784:	call   FWORD PTR [edx-0x1]
  434787:	dec    ebx
  434789:	retf   
  43478a:	inc    DWORD PTR [eax]
  43478c:	dec    DWORD PTR [ecx+0x2a1f83]
  434792:	arpl   WORD PTR ds:0xdf00,ax
  434798:	xchg   esp,eax
  434799:	scas   eax,DWORD PTR es:[edi]
  43479a:	(bad)  
  43479b:	dec    DWORD PTR [ecx-0x21937101]
  4347a1:	xor    DWORD PTR [eax-0x48],0xffffffff
  4347a5:	dec    edi
  4347a6:	add    BYTE PTR [eax],al
  4347a8:	scas   eax,DWORD PTR es:[edi]
  4347a9:	out    dx,al
  4347aa:	cmp    edi,0x0
  4347ad:	add    BYTE PTR [edx-0x6ff9aa7],cl
  4347b3:	jae    0x4347b4
  4347b5:	in     al,0x0
  4347b7:	call   edx
  4347b9:	in     eax,dx
  4347ba:	add    bh,bh
  4347bc:	add    ah,cl
  4347be:	outs   dx,BYTE PTR ds:[esi]
  4347bf:	sub    edi,eax
  4347c1:	add    BYTE PTR [edi+0x15],dh
  4347c4:	add    BYTE PTR [edi-0x121d0001],dl
  4347ca:	add    bh,bh
  4347cc:	dec    DWORD PTR [ecx-0x76e80a4b]
  4347d2:	mov    dl,0x6c
  4347d4:	add    cl,al
  4347d6:	add    BYTE PTR [eax],al
  4347d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347d9:	xchg   edi,eax
  4347da:	add    ah,cl
  4347dc:	inc    DWORD PTR [eax]
  4347de:	mov    ch,0x71
  4347e0:	nop
  4347e1:	xor    DWORD PTR [ebp-0x6c],0xffffffff
  4347e5:	push   ds
  4347e6:	inc    DWORD PTR [eax]
  4347e8:	jo     0x4347f5
  4347ea:	(bad)  
  4347eb:	dec    esp
  4347ed:	xor    ebp,0xfffffffe
  4347f0:	pop    ebp
  4347f1:	push   DWORD PTR [ecx-0x33]
  4347f4:	push   edi
  4347f6:	inc    DWORD PTR [eax]
  4347f8:	retf   0xdf
  4347fb:	int3   
  4347fc:	add    BYTE PTR [eax],al
  4347fe:	cdq    
  4347ff:	repz fadd DWORD PTR [eax]
  434802:	int3   
  434803:	fadd   DWORD PTR [eax]
  434805:	dec    ebx
  434806:	dec    esp
  434808:	or     BYTE PTR [esi-0x7600ff01],al
  43480e:	sub    BYTE PTR [edx+0x1b],ch
  434811:	add    BYTE PTR [edi-0x3],bh
  434814:	add    ah,ah
  434816:	mov    DWORD PTR [eax],eax
  434818:	sti    
  434819:	add    BYTE PTR ss:[eax],al
  43481c:	inc    DWORD PTR [eax]
  43481e:	pop    ecx
  43481f:	outs   dx,DWORD PTR ds:[esi]
  434820:	int3   
  434821:	add    BYTE PTR [edi*8-0x767ce37d],bl
  434828:	out    0x15,al
  43482a:	dec    DWORD PTR [ecx+0x53b9ffff]
  434830:	loope  0x434831
  434832:	push   es
  434833:	hlt    
  434834:	jmp    DWORD PTR [ebx+0x0]
  434837:	int3   
  434838:	add    ebp,esp
  43483a:	or     DWORD PTR [ecx-0x14e60001],0x40
  434841:	add    BYTE PTR [eax-0x7833f6],bh
  434847:	int3   
  434848:	adc    ecx,edi
  43484a:	(bad)  
  43484b:	dec    esp
  43484d:	(bad)  
  43484e:	sti    
  43484f:	pusha  
  434850:	adc    eax,DWORD PTR [eax]
  434852:	daa    
  434853:	add    BYTE PTR [eax],al
  434855:	cdq    
  434856:	(bad)  
  434857:	jmp    DWORD PTR [esi-0x35]
  43485a:	(bad)  
  43485b:	inc    DWORD PTR [ebx+0x630bb9ff]
  434861:	(bad)  
  434862:	mov    edx,0xff0dff6d
  434867:	dec    DWORD PTR [ebx-0x16]
  43486a:	mov    edi,edi
  43486c:	add    BYTE PTR [eax],al
  43486e:	pop    eax
  43486f:	adc    esi,DWORD PTR [ecx+ecx*4-0x7f006ad4]
  434876:	(bad)  
  434877:	push   DWORD PTR [esi-0x47]
  43487a:	add    BYTE PTR [ecx-0x4dde767d],cl
  434880:	(bad)  
  434881:	int3   
  434882:	popf   
  434883:	mov    esp,ecx
  434885:	rol    DWORD PTR [ebx-0x988401],1
  43488b:	dec    DWORD PTR [ecx+0x11cb100]
  434891:	add    al,dl
  434893:	add    bh,bh
  434895:	imul   ecx,esp,0xffffffff
  434898:	fadd   st(2),st
  43489a:	add    bh,bh
  43489c:	mov    DWORD PTR [ebx+0xb11f25],eax
  4348a2:	mov    WORD PTR [ebx-0x1],ds
  4348a5:	jl     0x4348a7
  4348a7:	call   DWORD PTR [ebx-0x33a3]
  4348ad:	dec    DWORD PTR [ebx+eiz*1-0x50]
  4348b1:	jmp    FWORD PTR [edi]
  4348b3:	pop    ds
  4348b4:	add    BYTE PTR [esi+0x11c6ffcc],bl
  4348ba:	int3   
  4348bb:	int3   
  4348bc:	add    DWORD PTR [eax],0x70
  4348bf:	fwait
  4348c0:	loope  0x4348c2
  4348c2:	cmp    BYTE PTR [eax-0xff3801],ch
  4348c8:	pop    ebp
  4348c9:	dec    eax
  4348ca:	inc    DWORD PTR [eax]
  4348cc:	add    BYTE PTR [eax],al
  4348ce:	mov    edi,ecx
  4348d0:	mov    al,0x0
  4348d2:	jle    0x434877
  4348d4:	add    BYTE PTR [esi-0x1],dl
  4348d7:	add    ah,al
  4348d9:	mov    ebp,0xcc00ffff
  4348de:	adc    DWORD PTR [eax],esp
  4348e0:	fild   WORD PTR [eax]
  4348e2:	inc    esp
  4348e3:	push   edi
  4348e4:	add    BYTE PTR [edi],bh
  4348e6:	add    BYTE PTR [ecx-0x33d372],cl
  4348ec:	add    DWORD PTR [eax],0x5
  4348ef:	jb     0x434923
  4348f1:	or     ebp,0x49
  4348f4:	inc    DWORD PTR [ebx]
  4348f6:	add    DWORD PTR [eax],0xffffffc8
  4348f9:	pop    eax
  4348fa:	add    BYTE PTR [ebx+0x13d90083],al
  434900:	inc    ebp
  434901:	add    BYTE PTR [ecx],cl
  434903:	scas   eax,DWORD PTR es:[edi]
  434904:	inc    DWORD PTR ds:0x8a8aff00
  43490a:	(bad)  
  43490b:	(bad)  
  43490c:	(bad)  
  43490d:	call   DWORD PTR [ebx]
  43490f:	out    0x3b,al
  434911:	jmp    FWORD PTR [ecx+esi*1-0xa07d]
  434918:	and    ecx,ebp
  43491a:	add    bh,bh
  43491c:	add    BYTE PTR [eax],al
  43491e:	mov    bl,0xe3
  434920:	jmp    0x73:0xccce1400
  434927:	jmp    FWORD PTR [eax-0x7cff0012]
  43492d:	add    bl,dh
  43492f:	dec    edi
  434930:	fdivr  st,st(7)
  434932:	je     0x43498b
  434934:	add    BYTE PTR [edi+edi*8],bl
  434937:	add    BYTE PTR [esi+0x89893b],ch
  43493d:	int3   
  43493e:	aam    0x7f
  434940:	inc    ebp
  434941:	add    al,al
  434943:	and    BYTE PTR [eax],al
  434945:	ret    0xffff
  434948:	stc    
  434949:	push   esp
  43494a:	cmp    edi,0x0
  43494d:	jmp    FWORD PTR [esi]
  43494f:	mov    esi,0x74f0027
  434954:	add    BYTE PTR [eax+eax*1-0x769fc701],dh
  43495b:	add    BYTE PTR [eax],al
  43495d:	mov    DWORD PTR [esp+eax*4+0x60],ebx
  434961:	add    dh,ch
  434963:	sub    al,BYTE PTR [eax]
  434965:	xchg   esp,eax
  434966:	cmp    edi,0x3b
  434969:	repnz add DWORD PTR [eax],0x0
  43496d:	adc    eax,0xffffff96
  434970:	and    al,0xff
  434972:	mov    ebx,DWORD PTR [edx-0x1]
  434975:	sbb    bh,bh
  434977:	mov    DWORD PTR [ecx+0xffff1f],eax
  43497d:	add    bh,al
  43497f:	hlt    
  434980:	cmp    eax,DWORD PTR [eax]
  434982:	aas    
  434983:	ins    DWORD PTR es:[edi],dx
  434984:	jmp    FWORD PTR [ecx+0xee883ff]
  43498a:	int3   
  43498b:	add    BYTE PTR [eax],al
  43498d:	jmp    FWORD PTR [edx+0x70]
  434990:	xchg   edx,eax
  434991:	(bad)  
  434992:	mov    ecx,0xb40011
  434997:	(bad)  
  434998:	mov    ebp,0x89838390
  43499d:	add    ch,dh
  43499f:	in     al,0x0
  4349a1:	add    BYTE PTR [esi-0x45],al
  4349a4:	call   esp
  4349a6:	add    BYTE PTR [eax],al
  4349a8:	rcl    BYTE PTR [edx-0x1],1
  4349ab:	inc    DWORD PTR [eax]
  4349ad:	sbb    DWORD PTR [edx-0x77fffc46],0x59
  4349b4:	add    bl,al
  4349b6:	inc    DWORD PTR [eax]
  4349b8:	addr16 mov ebp,0xff0000ff
  4349be:	imul   esp,DWORD PTR [ebx],0xfffffff9
  4349c1:	inc    eax
  4349c3:	test   DWORD PTR [eax],0xc5890058
  4349c9:	adc    al,0x0
  4349cb:	(bad)  
  4349cc:	dec    DWORD PTR [ecx-0x76dbd995]
  4349d2:	mov    al,0x79
  4349d4:	int3   
  4349d5:	xor    al,0x0
  4349d7:	add    BYTE PTR [ebp+0x68],bl
  4349da:	inc    DWORD PTR [ebx+0x16dff00]
  4349e0:	pop    edx
  4349e1:	add    DWORD PTR [ebp+0xd3893f],0x0
  4349e8:	mov    ch,0xd6
  4349ea:	inc    DWORD PTR [eax]
  4349ec:	add    bh,bh
  4349ee:	cmp    DWORD PTR [ebx+eiz*8-0x1],esi
  4349f2:	pop    edx
  4349f3:	add    eax,0x97ff
  4349f8:	idiv   BYTE PTR [edi+edi*8-0x5ffff01]
  4349ff:	xor    al,0xa8
  434a01:	jmp    FWORD PTR [edx-0x50]
  434a04:	mov    DWORD PTR [ebx-0x65387c01],edx
  434a0a:	mov    DWORD PTR [ebx+0x6283ff83],eax
  434a10:	sub    edi,edi
  434a12:	shl    BYTE PTR [eax],1
  434a14:	add    cl,bl
  434a16:	add    BYTE PTR [eax],al
  434a18:	xor    DWORD PTR [eax-0x7c00ff77],esi
  434a1e:	cwde   
  434a1f:	(bad)  
  434a20:	sub    eax,0xff28f8ff
  434a25:	sub    edi,edi
  434a27:	jmp    FWORD PTR [ecx]
  434a29:	test   al,0x0
  434a2b:	cmp    edi,0xffffffff
  434a2e:	pop    edx
  434a2f:	mov    ecx,0x1db18342
  434a34:	dec    DWORD PTR [edx]
  434a36:	add    bh,bh
  434a38:	xchg   ebx,eax
  434a39:	cmc    
  434a3a:	add    BYTE PTR [ebx-0x5b2f7601],al
  434a40:	pushf  
  434a41:	adc    DWORD PTR [esi+0xf8ff3b],0xffffffff
  434a48:	push   edi
  434a49:	xor    al,0xff
  434a4b:	add    ah,cl
  434a4d:	add    BYTE PTR [eax],ch
  434a4f:	jbe    0x434a78
  434a51:	add    ebx,0x32
  434a54:	add    bl,ah
  434a56:	add    bh,bh
  434a58:	mov    ds:0xff001d,al
  434a5d:	add    dl,al
  434a5f:	and    ah,al
  434a61:	(bad)  
  434a62:	std    
  434a63:	xor    edi,edi
  434a65:	retf   
  434a66:	int3   
  434a67:	and    DWORD PTR ds:0x83898933,0xffffffff
  434a6e:	scas   eax,DWORD PTR es:[edi]
  434a6f:	mov    esi,0xef01002f
  434a74:	add    BYTE PTR [ecx+0x55f1ccff],dl
  434a7a:	inc    DWORD PTR [eax]
  434a7c:	add    BYTE PTR [eax],al
  434a7e:	(bad)  
  434a7f:	mov    bh,0x0
  434a81:	call   FWORD PTR [ebx+eiz*8-0x33bb00]
  434a88:	mov    ds:0xccffff,al
  434a8d:	add    BYTE PTR [ebp-0x2700cb9d],al
  434a93:	outs   dx,DWORD PTR ds:[esi]
  434a94:	add    BYTE PTR [eax-0xee6ff34],al
  434a9a:	(bad)  
  434a9b:	(bad)  
  434a9c:	(bad)  
  434a9d:	(bad)  
  434a9e:	(bad)  
  434a9f:	js     0x434ad8
  434aa1:	sbb    edx,0xffffff8b
  434aa4:	inc    DWORD PTR [edx-0x1]
  434aa7:	add    BYTE PTR [eax],ah
  434aa9:	rol    DWORD PTR [eax],cl
  434aab:	inc    DWORD PTR [ebx-0x192c2f01]
  434ab1:	jmp    DWORD PTR [esi-0x26]
  434ab4:	call   FWORD PTR [edi]
  434ab6:	dec    esp
  434ab8:	mov    WORD PTR [edx-0x77],fs
  434abb:	(bad)  
  434abc:	inc    DWORD PTR [ebx+0xd6d251]
  434ac2:	dec    ecx
  434ac3:	jle    0x434a91
  434ac5:	xchg   ecx,eax
  434ac6:	(bad)  
  434ac7:	jmp    FWORD PTR [ecx+0x3]
  434aca:	(bad)  
  434acb:	inc    DWORD PTR [ebx-0x2d77b001]
  434ad1:	add    dl,ch
  434ad3:	aaa    
  434ad4:	jmp    FWORD PTR [eax+eax*1-0x46cd01]
  434adb:	add    bh,bh
  434add:	and    DWORD PTR [ebp+0x1bff03ec],0xfffffff1
  434ae4:	add    BYTE PTR [ebp+0x146eff00],dl
  434aea:	inc    DWORD PTR [ebx-0x484b0034]
  434af0:	sub    edi,edi
  434af2:	or     edx,edx
  434af4:	(bad)  
  434af5:	aas    
  434af6:	dec    esp
  434af8:	mov    ebp,0xffcc55
  434afd:	or     DWORD PTR [edi+0x6],0xffffffd4
  434b01:	jmp    DWORD PTR [eax-0x76637c9f]
  434b07:	add    BYTE PTR [ebx+0x6e],bl
  434b0a:	inc    DWORD PTR [eax]
  434b0c:	(bad)  
  434b0d:	push   edx
  434b0f:	iret   
  434b10:	jae    0x434a95
  434b12:	outs   dx,BYTE PTR ds:[esi]
  434b13:	dec    ebp
  434b14:	add    BYTE PTR [esi+0x0],ch
  434b17:	int3   
  434b18:	or     BYTE PTR [ebx],cl
  434b1a:	dec    esp
  434b1c:	(bad)  
  434b1d:	(bad)  
  434b1e:	jnp    0x434b56
  434b20:	sub    edi,edi
  434b22:	and    ch,BYTE PTR [edi+edi*8+0x56]
  434b26:	inc    DWORD PTR [eax]
  434b28:	sub    al,0xed
  434b2a:	(bad)  
  434b2b:	inc    DWORD PTR [eax]
  434b2d:	and    DWORD PTR [ebx+0x67ffc2b6],0xffffffba
  434b34:	add    DWORD PTR [esi-0x77],0xffffffff
  434b38:	popa   
  434b39:	(bad)  
  434b3b:	add    bh,bh
  434b3d:	add    BYTE PTR [esp+edx*2],al
  434b40:	loop   0x434ac5
  434b42:	sub    ch,BYTE PTR [ebx]
  434b44:	call   FWORD PTR [esi]
  434b46:	(bad)  
  434b47:	inc    DWORD PTR [edi-0x15]
  434b4a:	dec    esp
  434b4c:	mov    edi,edi
  434b4e:	dec    ebp
  434b4f:	gs iret 
  434b51:	(bad)  
  434b52:	cmp    al,0xd6
  434b54:	(bad)  
  434b55:	jmp    0x434ae0
  434b57:	jmp    eax
  434b59:	and    bh,bh
  434b5b:	dec    esp
  434b5d:	int3   
  434b5e:	inc    edi
  434b5f:	adc    al,dl
  434b61:	adc    DWORD PTR [esi-0xe3ff2f],0x0
  434b68:	call   0xff:0xff00ff3a
  434b6f:	inc    ebp
  434b70:	and    al,0xff
  434b72:	lahf   
  434b73:	inc    edx
  434b74:	or     DWORD PTR [edx-0x703cff7d],0x0
  434b7b:	mov    edi,edi
  434b7d:	and    DWORD PTR [ebp+0x3a008270],0xffffffad
  434b84:	jmp    edi
  434b86:	(bad)  
  434b87:	(bad)  
  434b88:	ds xchg edi,edi
  434b8b:	(bad)  
  434b8c:	(bad)  
  434b8d:	inc    DWORD PTR [edx-0x7133ff2d]
  434b93:	jp     0x434b61
  434b95:	mov    ebp,0x152500ff
  434b9a:	add    DWORD PTR [eax],0xffffffff
  434b9d:	push   esi
  434b9f:	ins    DWORD PTR es:[edi],dx
  434ba0:	sbb    edi,edi
  434ba2:	jmp    0x4617a8
  434ba7:	(bad)  
  434ba8:	fidiv  WORD PTR [edx]
  434baa:	mov    edi,edi
  434bac:	add    bh,bh
  434bae:	sahf   
  434baf:	es sub bh,bh
  434bb2:	leave  
  434bb3:	add    eax,0xff005800
  434bb8:	xor    eax,0x837e
  434bbd:	jmp    FWORD PTR [esi]
  434bbf:	cmp    ah,dl
  434bc1:	call   DWORD PTR [esp+ebp*2+0x0]
  434bc5:	out    dx,al
  434bc6:	(bad)  
  434bc7:	jmp    DWORD PTR [ecx]
  434bc9:	ror    esp,cl
  434bcb:	inc    DWORD PTR [eax]
  434bcd:	inc    DWORD PTR [ecx]
  434bcf:	push   0x8a4ffbd
  434bd4:	dec    ebx
  434bd6:	(bad)  
  434bd7:	(bad)  
  434bd8:	mov    ebp,0xffccff13
  434bdd:	(bad)  
  434bde:	mov    eax,0xc4ff41a3
  434be3:	inc    edx
  434be4:	dec    esi
  434be6:	(bad)  
  434be7:	jmp    FWORD PTR [ecx+0x2f]
  434bea:	int3   
  434beb:	add    bh,bh
  434bed:	inc    DWORD PTR [edx+0x7a]
  434bf0:	call   0x112ab78
  434bf5:	sar    edi,1
  434bf7:	int3   
  434bf8:	bsr    eax,DWORD PTR [eax]
  434bfb:	inc    DWORD PTR [eax]
  434bfd:	add    BYTE PTR [ecx+eiz*2-0x73],ah
  434c01:	sbb    DWORD PTR [eax+0x41],0xffffffff
  434c05:	retf   
  434c06:	inc    DWORD PTR [eax]
  434c08:	leave  
  434c09:	xchg   ecx,eax
  434c0a:	dec    esp
  434c0c:	inc    DWORD PTR [eax]
  434c0e:	mov    ds:0x69ff31fa,eax
  434c13:	pop    ds
  434c14:	push   DWORD PTR [eax]
  434c16:	(bad)  
  434c17:	(bad)  
  434c18:	mov    ebx,0xffff34
  434c1d:	add    BYTE PTR [ebp-0x34],cl
  434c20:	xchg   edx,eax
  434c21:	mov    ecx,ebp
  434c23:	mov    esi,0xcc890a00
  434c28:	or     ecx,DWORD PTR [edx]
  434c2a:	int3   
  434c2b:	(bad)  
  434c2c:	dec    esp
  434c2e:	shl    BYTE PTR [esi],cl
  434c30:	(bad)  
  434c31:	call   FWORD PTR [esi+0x57]
  434c34:	jmp    DWORD PTR [eax]
  434c36:	(bad)  
  434c37:	push   DWORD PTR [ebx]
  434c39:	out    0xff,eax
  434c3b:	add    DWORD PTR [eax],0xffffff83
  434c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434c3f:	adc    bh,dh
  434c41:	add    DWORD PTR [edi-0x76da00d5],0xffffff89
  434c48:	add    edi,DWORD PTR [edi]
  434c4a:	add    BYTE PTR [ebx+0x7497ffff],al
  434c50:	call   0x836facd8
  434c55:	xor    al,BYTE PTR [eax]
  434c57:	int3   
  434c58:	xchg   edi,eax
  434c59:	sar    edi,cl
  434c5b:	add    bh,bh
  434c5d:	add    bh,dh
  434c5f:	and    ch,ah
  434c61:	sbb    esp,0xffffff9d
  434c64:	or     DWORD PTR [esi],0xffffffcc
  434c67:	dec    edx
  434c69:	push   esp
  434c6a:	add    bh,bh
  434c6c:	(bad)  
  434c6d:	jmp    DWORD PTR [edx-0x4d]
  434c70:	jne    0x434c72
  434c72:	sti    
  434c73:	sar    edi,1
  434c75:	cmc    
  434c76:	dec    DWORD PTR [ecx-0x76ffd330]
  434c7c:	(bad)  
  434c7d:	push   DWORD PTR [ebx+0x1a]
  434c80:	mov    dh,0x0
  434c82:	lahf   
  434c83:	mov    eax,0xffff91ff
  434c88:	mov    esp,0xff89ff35
  434c8d:	call   FWORD PTR [esi+0x6affc46d]
  434c93:	ret    
  434c94:	(bad)  
  434c95:	mov    esp,0xe928300
  434c9a:	or     esp,0x0
  434c9d:	add    BYTE PTR [eax+edi*8],al
  434ca0:	jp     0x434c6e
  434ca2:	pop    esi
  434ca3:	pop    edi
  434ca4:	dec    DWORD PTR [esi-0x3fad0100]
  434caa:	(bad)  
  434cab:	dec    DWORD PTR [ecx-0x245d9e01]
  434cb1:	int3   
  434cb2:	push   ecx
  434cb3:	lock jmp FWORD PTR [esi+0x0]
  434cb7:	mov    DWORD PTR [esi-0xff008c],edi
  434cbd:	add    BYTE PTR [edx],cl
  434cbf:	push   ebp
  434cc0:	(bad)  
  434cc1:	jmp    DWORD PTR [edx+0x720033]
  434cc7:	(bad)  
  434cc8:	fidivr DWORD PTR [edi-0x77]
  434ccb:	(bad)  
  434ccc:	inc    DWORD PTR [eax]
  434cce:	inc    eax
  434ccf:	jp     0x434c91
  434cd1:	(bad)  
  434cd2:	jle    0x434c81
  434cd4:	add    bl,dl
  434cd6:	(bad)  
  434cd7:	call   FWORD PTR [edi-0x33ffff6e]
  434cdd:	add    BYTE PTR [edx],dh
  434cdf:	cdq    
  434ce0:	(bad)  
  434ce1:	dec    DWORD PTR [eax-0x33827cbd]
  434ce7:	add    BYTE PTR [ecx+0x50],ch
  434cea:	int3   
  434ceb:	inc    DWORD PTR [eax]
  434ced:	jmp    DWORD PTR [ecx]
  434cef:	adc    esp,DWORD PTR [ebx+ebx*8+0x33b000d4]
  434cf6:	inc    DWORD PTR [eax]
  434cf8:	(bad)  
  434cf9:	dec    DWORD PTR [edx]
  434cfb:	sub    eax,0x83cc83ce
  434d00:	inc    esp
  434d01:	sbb    ebp,DWORD PTR [ebp-0x1]
  434d04:	ret    0x832c
  434d07:	mov    DWORD PTR [eax],eax
  434d09:	push   DWORD PTR [edx+eiz*2-0x4f]
  434d0d:	inc    DWORD PTR [eax]
  434d0f:	jmp    FWORD PTR [eax]
  434d11:	cmp    eax,0x80b2005f
  434d16:	add    bh,bh
  434d18:	add    BYTE PTR [ecx-0x7624a446],cl
  434d1e:	inc    DWORD PTR [ebx-0x766f50]
  434d24:	imul   eax,DWORD PTR [ebx+0x620089ff]
  434d2b:	test   al,0x42
  434d2d:	add    BYTE PTR [eax],al
  434d2f:	int3   
  434d30:	xchg   ebx,eax
  434d31:	daa    
  434d32:	fwait
  434d33:	int3   
  434d34:	and    esi,DWORD PTR [ebx-0x1]
  434d37:	inc    DWORD PTR [ebx-0x785ea27d]
  434d3d:	add    bh,bh
  434d3f:	(bad)  
  434d40:	mov    eax,0xaff788a
  434d45:	stos   BYTE PTR es:[edi],al
  434d46:	add    BYTE PTR [eax],al
  434d48:	add    BYTE PTR [ecx-0xd7619e],cl
  434d4e:	(bad)  
  434d4f:	jmp    FWORD PTR [edi-0x69002702]
  434d55:	bound  eax,QWORD PTR [ebx-0x737d0000]
  434d5b:	push   ss
  434d5c:	jp     0x434d5d
  434d5e:	add    bh,bh
  434d60:	pop    ss
  434d61:	sub    eax,0xa00b89c0
  434d66:	add    bh,bh
  434d68:	dec    esp
  434d6a:	jns    0x434db4
  434d6c:	pop    esi
  434d6d:	(bad)  
  434d6e:	(bad)  
  434d6f:	call   DWORD PTR ds:0x6c00975e
  434d75:	fwait
  434d76:	add    BYTE PTR [eax],al
  434d78:	inc    DWORD PTR [ebx-0x9a65bf]
  434d7e:	(bad)  
  434d7f:	call   FWORD PTR [ebx-0x71]
  434d82:	mov    dh,0x83
  434d84:	jo     0x434d3e
  434d86:	mov    edi,edi
  434d88:	dec    DWORD PTR [ecx+0x5ec053]
  434d8e:	(bad)  
  434d8f:	push   DWORD PTR [ebx]
  434d91:	dec    ecx
  434d92:	and    edi,edi
  434d94:	and    eax,0xffffee
  434d99:	xor    DWORD PTR [ecx-0xf],0x58
  434d9d:	add    bh,bh
  434d9f:	mov    DWORD PTR [ecx+0x43002265],esi
  434da5:	sub    esp,ecx
  434da7:	mov    DWORD PTR [eax],eax
  434da9:	(bad)  
  434daa:	aas    
  434dab:	add    DWORD PTR [esi],edx
  434dad:	(bad)  
  434dae:	(bad)  
  434daf:	call   FWORD PTR [edx+0x25008c60]
  434db5:	les    eax,FWORD PTR [eax]
  434db7:	or     esp,0x0
  434dba:	outs   dx,DWORD PTR ds:[esi]
  434dbb:	mov    al,ds:0x89cc0015
  434dc0:	inc    ebx
  434dc1:	adc    al,0x94
  434dc3:	int3   
  434dc4:	jge    0x434d8c
  434dc6:	dec    DWORD PTR [ecx+0x42783ff]
  434dcc:	fcos   
  434dce:	dec    esp
  434dd0:	mov    edx,0x85ff1cd5
  434dd5:	test   al,0xff
  434dd7:	cmp    edi,0xffffffff
  434dda:	ins    DWORD PTR es:[edi],dx
  434ddb:	clc    
  434ddc:	adc    bh,bh
  434dde:	inc    DWORD PTR [eax]
  434de0:	in     al,dx
  434de1:	sub    DWORD PTR [ecx],eax
  434de3:	int3   
  434de4:	cmc    
  434de5:	ss dec esp
  434de8:	(bad)  
  434de9:	call   DWORD PTR [ecx-0x33a065]
  434def:	add    dh,cl
  434df1:	fimul  DWORD PTR [ebp+0x8afe83]
  434df7:	(bad)  
  434df8:	(bad)  
  434df9:	dec    DWORD PTR [ebp-0x2e]
  434dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434dfd:	add    BYTE PTR [eax],al
  434dff:	call   DWORD PTR [edx-0x2400c80b]
  434e05:	jne    0x434e07
  434e07:	(bad)  
  434e08:	inc    DWORD PTR [eax]
  434e0a:	jo     0x434e76
  434e0c:	fs cmp edi,0x0
  434e10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434e11:	mov    ebx,0x2a22ffab
  434e16:	add    BYTE PTR [eax],al
  434e18:	(bad)  
  434e19:	call   FWORD PTR [ebp+0x6f]
  434e1c:	push   ds
  434e1d:	inc    DWORD PTR [eax]
  434e1f:	inc    DWORD PTR [edi+0x1d]
  434e22:	idiv   edi
  434e24:	ret    0xff0d
  434e27:	add    DWORD PTR [eax],0x0
  434e2a:	nop
  434e2b:	inc    ebp
  434e2c:	leave  
  434e2d:	add    BYTE PTR [eax],al
  434e2f:	add    cl,bh
  434e31:	add    al,0x76
  434e33:	int3   
  434e34:	sbb    al,0x53
  434e36:	(bad)  
  434e37:	inc    DWORD PTR [eax]
  434e39:	mov    edx,eax
  434e3b:	es std 
  434e3d:	dec    esp
  434e3f:	add    BYTE PTR [edi],ch
  434e41:	mov    al,ds:0xb786ccd5
  434e46:	cmp    edi,0xffffffcc
  434e49:	add    BYTE PTR [esi+eax*4+0x46],ah
  434e4d:	add    bh,bh
  434e4f:	int3   
  434e50:	shl    DWORD PTR [ebp+eax*8-0x77],1
  434e54:	ss imul edi,edi,0xffffffff
  434e58:	add    BYTE PTR [eax],al
  434e5a:	neg    esp
  434e5c:	fiadd  DWORD PTR [ebx-0x2bf70077]
  434e62:	mov    ecx,0xff0ee500
  434e67:	inc    DWORD PTR [eax]
  434e69:	add    BYTE PTR [ecx],dl
  434e6b:	mov    bh,0x7
  434e6d:	add    bh,bh
  434e6f:	call   FWORD PTR [edx+0x22]
  434e72:	jp     0x434e74
  434e74:	imul   ebx,DWORD PTR ds:0x83ff0089,0xcc2d5f0d
  434e7e:	add    bh,bh
  434e80:	in     eax,0x42
  434e82:	popa   
  434e83:	add    BYTE PTR ds:0xffff00c1,cl
  434e89:	int3   
  434e8a:	cmovnp ecx,DWORD PTR [esi-0x1]
  434e8e:	add    BYTE PTR [eax],al
  434e90:	cmp    esi,0x18
  434e93:	add    BYTE PTR [eax],al
  434e95:	xchg   edx,eax
  434e96:	(bad)  
  434e97:	inc    DWORD PTR [eax]
  434e99:	mov    edi,ebx
  434e9b:	lock popa 
  434e9d:	int3   
  434e9e:	dec    esp
  434ea0:	inc    ebp
  434ea1:	dec    edx
  434ea2:	xchg   edx,eax
  434ea3:	inc    DWORD PTR [ebp-0xad]
  434ea9:	call   eax
  434eab:	retf   0xff74
  434eae:	(bad)  
  434eaf:	dec    DWORD PTR [esi-0x6ffb957]
  434eb5:	push   0x890000
  434eba:	fldcw  WORD PTR [ebp-0x7c7cfff3]
  434ec0:	cmp    al,0x96
  434ec2:	xor    BYTE PTR [ebx-0x7c33913c],al
  434ec8:	inc    DWORD PTR [eax]
  434eca:	cmp    esi,DWORD PTR [edx-0x3315]
  434ed0:	jae    0x434eef
  434ed2:	es push eax
  434ed5:	ror    DWORD PTR [ecx-0x63ff7d00],0x43
  434edc:	sub    eax,0x8f00ffff
  434ee1:	add    dl,BYTE PTR [esi]
  434ee3:	push   DWORD PTR ds:0xff55
  434ee9:	add    BYTE PTR [edi-0x7c3321f8],al
  434eef:	dec    DWORD PTR [edx]
  434ef1:	cmp    ecx,DWORD PTR [esi-0xc1ec00]
  434ef7:	int3   
  434ef8:	cmp    edi,0x12
  434efb:	addr16 cmp bh,bh
  434efe:	add    ah,cl
  434f00:	pop    eax
  434f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434f02:	loope  0x434ed0
  434f04:	in     eax,0xf0
  434f06:	mov    edi,edi
  434f08:	add    ah,cl
  434f0a:	cmp    DWORD PTR [ebp-0xffff61],ebp
  434f10:	scas   al,BYTE PTR es:[edi]
  434f11:	inc    eax
  434f12:	inc    ebp
  434f13:	add    BYTE PTR [esi+0x4b],dl
  434f16:	inc    DWORD PTR [eax]
  434f18:	add    DWORD PTR [ebx+0xcb477e],0x0
  434f1f:	and    ebx,0xffffffb1
  434f22:	nop
  434f23:	call   FWORD PTR [ecx]
  434f25:	(bad)  
  434f27:	int3   
  434f28:	(bad)  
  434f29:	jmp    DWORD PTR [ecx]
  434f2b:	push   es
  434f2c:	inc    edi
  434f2d:	inc    DWORD PTR [eax]
  434f2f:	add    BYTE PTR [ebx+0x53ff0b4c],al
  434f35:	xchg   edi,eax
  434f36:	inc    DWORD PTR [eax]
  434f38:	add    ah,cl
  434f3a:	aas    
  434f3b:	mov    edx,0x89890025
  434f40:	leave  
  434f41:	ja     0x434ecc
  434f43:	add    bh,ch
  434f45:	ds int3 
  434f47:	add    BYTE PTR [eax],al
  434f49:	add    BYTE PTR [edi-0x16],ch
  434f4c:	jno    0x434f4e
  434f4e:	dec    DWORD PTR [ecx-0x308416]
  434f54:	fld    TBYTE PTR [eax+0x0]
  434f57:	inc    DWORD PTR [eax]
  434f59:	int3   
  434f5a:	lock jecxz 0x434f83
  434f5d:	inc    DWORD PTR [eax]
  434f5f:	mov    eax,edx
  434f61:	stc    
  434f62:	push   ecx
  434f63:	or     DWORD PTR [edi+0x36],0x0
  434f67:	(bad)  
  434f68:	(bad)  
  434f69:	jmp    FWORD PTR [ebx+ecx*8]
  434f6c:	and    edi,edi
  434f6e:	add    bh,bh
  434f70:	les    edi,FWORD PTR [ebx-0x69c57cdc]
  434f76:	(bad)  
  434f77:	(bad)  
  434f78:	inc    DWORD PTR [ebx-0x9b2cf8]
  434f7e:	(bad)  
  434f7f:	inc    DWORD PTR [edi]
  434f81:	sub    ecx,ecx
  434f83:	add    bh,al
  434f85:	sbb    bh,bh
  434f87:	(bad)  
  434f88:	(bad)  
  434f89:	jmp    FWORD PTR ds:0x83cca946
  434f8f:	call   DWORD PTR [esi+0x24fff5ba]
  434f95:	pusha  
  434f96:	add    BYTE PTR [eax],al
  434f98:	add    bh,bh
  434f9a:	imul   eax,DWORD PTR [ebp-0x39],0x9600ffff
  434fa1:	stos   DWORD PTR es:[edi],eax
  434fa2:	(bad)  
  434fa3:	mov    DWORD PTR [eax],ebp
  434fa5:	(bad)  
  434fa6:	(bad)  
  434fa7:	(bad)  
  434fa8:	dec    DWORD PTR [ecx-0x23858e]
  434fae:	(bad)  
  434faf:	push   DWORD PTR [ecx+0x12831756]
  434fb5:	pop    ebx
  434fb6:	inc    DWORD PTR [ebx+0xa5d0089]
  434fbc:	je     0x434fbd
  434fbe:	add    BYTE PTR [ecx-0x83a184],cl
  434fc4:	out    dx,al
  434fc5:	dec    ebp
  434fc6:	mov    edi,edi
  434fc8:	(bad)  
  434fc9:	jmp    DWORD PTR [eax+0x91fd]
  434fcf:	(bad)  
  434fd0:	cli    
  434fd1:	lock test eax,0xc510ff
  434fd7:	inc    DWORD PTR [eax]
  434fd9:	jmp    DWORD PTR [esi]
  434fdb:	mov    esi,0xff
  434fe0:	rcl    cl,cl
  434fe2:	jns    0x434fe3
  434fe4:	sub    cl,BYTE PTR [edx]
  434fe6:	cmp    edi,0xffffffff
  434fe9:	inc    DWORD PTR [ecx]
  434feb:	dec    esi
  434fec:	jge    0x434fee
  434fee:	add    bh,bh
  434ff0:	sahf   
  434ff1:	popa   
  434ff2:	enter  0xc289,0x80
  434ff6:	add    BYTE PTR [ebx-0x64b5ff7d],al
  434ffc:	push   esi
  434ffd:	add    bh,bh
  434fff:	(bad)  
  435000:	fnstenv [eax]
  435002:	mov    ah,0xff
  435004:	and    ebx,ebp
  435006:	(bad)  
  435007:	(bad)  
  435008:	(bad)  
  435009:	call   DWORD PTR [esi+0x839a5a]
  43500f:	inc    ebx
  435011:	outs   dx,BYTE PTR ds:[esi]
  435012:	inc    esi
  435013:	dec    DWORD PTR [esi+0xff98]
  435019:	jmp    ecx
  43501b:	sbb    esp,DWORD PTR [edx]
  43501d:	dec    esp
  43501f:	int3   
  435020:	sbb    DWORD PTR [edx+0x76],edx
  435023:	add    BYTE PTR [edi+0x5f],dl
  435026:	cmp    edi,0xffffffff
  435029:	int3   
  43502a:	jmp    0x2fff:0xffff8e53
  435031:	mov    ss,ecx
  435033:	(bad)  
  435034:	jl     0x435006
  435036:	add    bh,bh
  435038:	add    bh,bh
  43503a:	in     al,dx
  43503b:	popf   
  43503c:	icebp  
  43503d:	inc    DWORD PTR [eax]
  43503f:	inc    esp
  435041:	mov    ah,0xc0
  435043:	push   DWORD PTR [eax-0x79]
  435046:	inc    DWORD PTR [ebx+0x59230089]
  43504c:	jnp    0x43504d
  43504e:	inc    DWORD PTR [eax]
  435050:	nop
  435051:	imul   eax,DWORD PTR [ecx],0xffffffcc
  435054:	sbb    edx,DWORD PTR [edi+0x0]
  43505a:	mov    esp,DWORD PTR [edx+0x4d]
  43505d:	int3   
  43505e:	add    ah,cl
  435060:	inc    eax
  435061:	aad    0xd
  435063:	(bad)  
  435064:	out    dx,al
  435065:	xor    edi,edi
  435067:	int3   
  435068:	add    BYTE PTR [eax],al
  43506a:	sti    
  43506b:	pop    ecx
  43506c:	cmp    bh,0xff
  43506f:	add    al,dl
  435071:	inc    esp
  435072:	sub    al,0xff
  435074:	mov    eax,ds:0xffff838e
  435079:	call   edi
  43507b:	retf   
  43507c:	fwait
  43507d:	inc    DWORD PTR [eax]
  43507f:	(bad)  
  435080:	fnstcw WORD PTR [edx]
  435082:	std    
  435083:	add    bl,ch
  435085:	cld    
  435086:	int3   
  435087:	(bad)  
  435088:	(bad)  
  435089:	call   esp
  43508b:	or     al,0x1e
  43508d:	add    bh,bh
  43508f:	dec    DWORD PTR [ecx]
  435091:	adc    bh,ah
  435093:	add    bl,dl
  435095:	cld    
  435096:	int3   
  435097:	(bad)  
  435098:	dec    DWORD PTR [ecx-0x3147c2]
  43509e:	add    BYTE PTR [eax],al
  4350a0:	inc    ecx
  4350a1:	mov    ecx,0x156d0095
  4350a6:	(bad)  
  4350a7:	inc    DWORD PTR [eax]
  4350a9:	adc    ebx,0x7a
  4350ac:	lods   eax,DWORD PTR ds:[esi]
  4350ad:	inc    DWORD PTR [eax]
  4350af:	int3   
  4350b0:	sbb    eax,0x39ff9e63
  4350b5:	(bad)  
  4350b6:	(bad)  
  4350b7:	(bad)  
  4350b8:	(bad)  
  4350b9:	jmp    DWORD PTR [edx+0xff9886]
  4350bf:	and    DWORD PTR [esi],0xfffffff7
  4350c2:	test   DWORD PTR [eax],0xff83c2e5
  4350c8:	int3   
  4350c9:	push   DWORD PTR [ebx+0x58]
  4350cc:	icebp  
  4350cd:	cmp    edi,0xffffff83
  4350d0:	jl     0x4350dd
  4350d2:	cmc    
  4350d3:	(bad)  
  4350d4:	fistp  WORD PTR [edi+0x0]
  4350d7:	inc    DWORD PTR [eax]
  4350d9:	jmp    FWORD PTR [ebp+0x15]
  4350dc:	out    dx,al
  4350dd:	(bad)  
  4350de:	inc    DWORD PTR [eax]
  4350e0:	jnp    0x435067
  4350e2:	dec    ebp
  4350e3:	add    BYTE PTR [ebp+esi*2-0x34],bl
  4350e7:	add    BYTE PTR [eax],al
  4350e9:	add    BYTE PTR [ecx+0x5a],bl
  4350ec:	dec    eax
  4350ed:	(bad)  
  4350ee:	inc    DWORD PTR [ebx-0xf95366]
  4350f4:	fldenv [ebp-0xff7c7d]
  4350fa:	xchg   BYTE PTR [ebp-0xff45],bh
  435100:	push   esi
  435101:	leave  
  435102:	or     bh,bh
  435104:	sub    ecx,DWORD PTR [esi-0x34]
  435107:	add    BYTE PTR [ecx+0x4a9e0000],cl
  43510d:	add    bh,bh
  43510f:	add    BYTE PTR [ebp+eiz*8-0x2cbb00be],al
  435116:	add    bh,bh
  435118:	(bad)  
  435119:	call   FWORD PTR [eax+0x3]
  43511c:	xlat   BYTE PTR ds:[ebx]
  43511d:	inc    DWORD PTR [ebx-0x12efa500]
  435123:	inc    edi
  435125:	jg     0x435126
  435127:	add    BYTE PTR [eax],al
  435129:	jmp    FWORD PTR [esi-0x60]
  43512c:	mov    ebx,0x730000ff
  435131:	dec    edx
  435132:	pushf  
  435133:	sub    ebp,0x64
  435136:	inc    DWORD PTR [eax]
  435138:	add    BYTE PTR [eax],al
  43513a:	ficom  DWORD PTR [esi-0x1000000]
  435140:	sub    al,0xbb
  435142:	pop    esp
  435143:	add    BYTE PTR [esi-0x7cff00e6],cl
  435149:	dec    edx
  43514b:	(bad)  
  43514c:	mov    al,ds:0x1483ff00
  435151:	push   ebp
  435152:	and    BYTE PTR [ebx-0x3333e8c0],al
  435158:	inc    DWORD PTR [ebx-0x6cc332]
  43515e:	add    bh,bh
  435160:	fild   DWORD PTR [ecx]
  435162:	stos   BYTE PTR es:[edi],al
  435163:	(bad)  
  435164:	jle    0x435140
  435166:	add    DWORD PTR [ebx+0xfa5ffff],0x30
  43516d:	inc    DWORD PTR [eax]
  43516f:	jmp    FWORD PTR [eax-0x70001209]
  435175:	mov    ds:0xff00ff89,al
  43517a:	aas    
  43517b:	mov    ebp,0xcc00ff4f
  435180:	xlat   BYTE PTR ds:[ebx]
  435181:	jae    0x4351fe
  435183:	and    DWORD PTR [edi+0xff832d],0x0
  43518a:	popf   
  43518b:	icebp  
  43518c:	test   edi,edi
  43518e:	add    bh,bh
  435190:	and    ebx,DWORD PTR [eax-0x5c]
  435193:	add    BYTE PTR [esi+0x5],cl
  435196:	add    bh,bh
  435198:	inc    DWORD PTR [eax]
  43519a:	pushf  
  43519b:	push   esp
  43519c:	jae    0x43516a
  43519e:	or     esp,0x10
  4351a1:	jb     0x43518e
  4351a3:	(bad)  
  4351a4:	jle    0x43512e
  4351a6:	(bad)  
  4351a7:	inc    DWORD PTR [eax]
  4351a9:	jmp    ebp
  4351ab:	xchg   edi,eax
  4351ac:	xchg   ebp,eax
  4351ad:	add    bh,bh
  4351af:	inc    edx
  4351b1:	or     DWORD PTR [eax+eax*1],ebx
  4351b4:	test   al,0x59
  4351b6:	add    BYTE PTR [eax],al
  4351b8:	mov    edi,edi
  4351ba:	or     al,0x1e
  4351bc:	mov    DWORD PTR [eax],eax
  4351be:	(bad)  
  4351bf:	(bad)  
  4351c0:	fisubr WORD PTR [eax+0x24320035]
  4351c6:	inc    DWORD PTR [ebx+0x77a083cc]
  4351cc:	sar    bh,0x0
  4351cf:	add    dl,bh
  4351d1:	aas    
  4351d2:	adc    bh,bh
  4351d4:	pop    ds
  4351d5:	arpl   di,di
  4351d7:	add    bh,bh
  4351d9:	call   FWORD PTR [edx]
  4351db:	js     0x4351b2
  4351dd:	inc    DWORD PTR [ebx+0x6f696fff]
  4351e3:	dec    DWORD PTR [edi]
  4351e5:	adc    edi,edi
  4351e7:	cmp    edi,0xffffff83
  4351ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351eb:	(bad)  
  4351ec:	fisttp WORD PTR [ecx-0x15220001]
  4351f2:	(bad)  
  4351f3:	call   DWORD PTR [eax-0xd]
  4351f6:	int3   
  4351f7:	add    BYTE PTR [eax],al
  4351f9:	add    edx,0xffffffd2
  4351fc:	cld    
  4351fd:	add    BYTE PTR [eax],al
  4351ff:	jmp    FWORD PTR [esp+eiz*4+0x2e478943]
  435206:	cmp    edi,0x0
  435209:	int3   
  43520a:	lea    ebp,[ecx+0x4c]
  43520d:	inc    DWORD PTR [ebx+0x65fe94cc]
  435213:	sbb    DWORD PTR [edi-0x7cff0097],0xffffff83
  43521a:	and    eax,0x8319f1
  43521f:	dec    DWORD PTR [eax-0xe76147f]
  435225:	in     al,dx
  435226:	inc    DWORD PTR [eax]
  435228:	add    DWORD PTR [ebx+0x9c2ac7],0x0
  43522f:	inc    DWORD PTR [ecx-0x33764e44]
  435235:	sahf   
  435236:	inc    DWORD PTR [eax]
  435238:	int3   
  435239:	inc    DWORD PTR [eax]
  43523b:	dec    ebp
  43523c:	lds    eax,FWORD PTR [eax]
  43523e:	inc    DWORD PTR [eax]
  435240:	cmp    BYTE PTR [ebp+0x4791ffdb],dl
  435246:	inc    DWORD PTR [ebx-0x35800001]
  43524c:	ret    0x0
  43524f:	jmp    FWORD PTR [esi+esi*2+0x657a00f8]
  435256:	inc    DWORD PTR [eax]
  435258:	add    DWORD PTR [eax],0xffffffc6
  43525b:	enter  0xff50,0xff
  43525f:	adc    DWORD PTR [eax+0x43830548],0x4a
  435266:	int3   
  435267:	inc    DWORD PTR [eax]
  435269:	or     DWORD PTR [ebx-0x5b],0x7e
  43526d:	inc    DWORD PTR [ebx+0x4b933fff]
  435273:	jmp    FWORD PTR [edi+0x54]
  435276:	add    BYTE PTR [eax],al
  435278:	(bad)  
  435279:	call   DWORD PTR [ebx-0x3da5]
  43527f:	add    BYTE PTR [edx+0x1f007349],al
  435285:	mov    es,WORD PTR [ebx-0x7d7c7c01]
  43528b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43528c:	(bad)  
  43528d:	inc    DWORD PTR [ebx+0x372b36ff]
  435293:	mov    ebx,ecx
  435295:	jp     0x435296
  435297:	(bad)  
  435298:	(bad)  
  435299:	jmp    FWORD PTR [ecx]
  43529b:	pop    ss
  43529c:	jne    0x43526a
  43529e:	(bad)  
  43529f:	inc    DWORD PTR [edx-0xe]
  4352a2:	rol    BYTE PTR [eax],0x1b
  4352a5:	mov    ebx,0xffff0000
  4352aa:	aaa    
  4352ab:	mov    dh,0x9f
  4352ad:	inc    DWORD PTR [ebx-0x6c5cdf77]
  4352b3:	(bad)  
  4352b4:	cmp    DWORD PTR [edi],edx
  4352b6:	inc    DWORD PTR [ebx+0x182683ff]
  4352bc:	push   edi
  4352bd:	add    BYTE PTR [eax],al
  4352bf:	jmp    eax
  4352c1:	jns    0x435316
  4352c3:	dec    DWORD PTR [ebp+0x5b]
  4352c6:	cmp    edi,0x0
  4352c9:	add    BYTE PTR [eax],dh
  4352cb:	and    eax,0xffff009a
  4352d0:	mov    edx,DWORD PTR [ebp+0x51]
  4352d3:	add    BYTE PTR [esi-0x80],al
  4352d6:	int3   
  4352d7:	(bad)  
  4352d8:	(bad)  
  4352d9:	(bad)  
  4352da:	mov    ecx,0xff02f4
  4352df:	add    BYTE PTR [ebx-0x17ff387d],dl
  4352e5:	cmp    edi,edi
  4352e7:	(bad)  
  4352e8:	dec    esp
  4352ea:	rcr    BYTE PTR [ecx-0xffb0],cl
  4352f0:	inc    eax
  4352f1:	adc    DWORD PTR [ebp-0x82f301],esi
  4352f7:	int3   
  4352f8:	inc    DWORD PTR [ebx+0x2d0975]
  4352fe:	add    BYTE PTR [eax],al
  435300:	ror    DWORD PTR [edi],1
  435302:	cli    
  435303:	(bad)  
  435304:	fbstp  TBYTE PTR [edi+edi*8-0x7d]
  435308:	inc    DWORD PTR [eax]
  43530a:	sub    al,0xbc
  43530c:	enter  0xccff,0xff
  435310:	sub    eax,DWORD PTR [esi]
  435312:	pop    ss
  435313:	inc    DWORD PTR [ecx]
  435315:	sldt   WORD PTR [eax]
  435318:	add    DWORD PTR [ebx-0x33ae5a34],0x0
  43531f:	jmp    ebx
  435321:	or     edx,ebp
  435323:	(bad)  
  435324:	stc    
  435325:	add    cl,ah
  435327:	add    BYTE PTR [ebx+0x43c61683],al
  43532d:	int3   
  43532e:	add    DWORD PTR [eax],0x3f
  435331:	pop    ecx
  435332:	sbb    bh,bh
  435334:	mov    dh,0x7a
  435336:	inc    DWORD PTR [eax]
  435338:	mov    DWORD PTR [eax],eax
  43533a:	or     DWORD PTR [esi-0xa],ebp
  43533d:	or     DWORD PTR [ecx+0x41056cff],0x0
  435344:	clc    
  435345:	dec    edi
  435346:	inc    DWORD PTR [ebx-0x52030100]
  43534c:	dec    ebx
  43534d:	add    BYTE PTR [ecx-0x5faa9700],cl
  435353:	(bad)  
  435354:	fldcw  WORD PTR [ecx-0x34]
  435357:	or     esp,0xffffffff
  43535a:	mov    al,ds:0xff0092af
  43535f:	jmp    ebx
  435361:	or     ecx,edx
  435363:	mov    DWORD PTR [edx+ebp*4-0x7c330034],ebp
  43536a:	pop    ss
  43536b:	or     eax,0x830089aa
  435370:	dec    ebp
  435371:	ret    0xcc90
  435374:	mov    esp,0xffffccc6
  435379:	jmp    FWORD PTR [ebx]
  43537b:	call   0x105316
  435380:	adc    esp,ebx
  435382:	cmp    DWORD PTR [eax],eax
  435384:	pop    ds
  435385:	popa   
  435386:	dec    DWORD PTR [ecx+0x32ecff00]
  43538c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43538d:	add    bh,bh
  43538f:	call   DWORD PTR [esi+0x40ff2c38]
  435395:	ins    DWORD PTR es:[edi],dx
  435396:	dec    esp
  435398:	int3   
  435399:	add    BYTE PTR [ebp-0x7cff806c],al
  43539f:	add    ah,cl
  4353a1:	fstp   TBYTE PTR [edx-0x1]
  4353a4:	inc    ebx
  4353a5:	cmp    eax,DWORD PTR [ebx-0x7e7c0001]
  4353ab:	pop    es
  4353ac:	inc    ecx
  4353ad:	inc    DWORD PTR [eax]
  4353af:	add    BYTE PTR [edx],ah
  4353b1:	xchg   ebp,eax
  4353b2:	and    edi,edi
  4353b4:	push   cs
  4353b5:	repnz add BYTE PTR [eax],al
  4353b8:	add    bh,bh
  4353ba:	jmp    0x435356
  4353bc:	iret   
  4353bd:	add    DWORD PTR [ebx+0xae30689],0xffffffff
  4353c4:	adc    dl,BYTE PTR [edx-0x1]
  4353c7:	int3   
  4353c8:	add    bh,bh
  4353ca:	xchg   ecx,eax
  4353cb:	aas    
  4353cc:	mov    edi,0xeaff00cc
  4353d1:	(bad)
  4353d4:	add    eax,0x838301
  4353d9:	add    BYTE PTR [ecx-0xffe4f9],ch
  4353df:	and    DWORD PTR [eax+0x78],0x2
  4353e3:	add    BYTE PTR [ebp-0x3300e9],dl
  4353e9:	jmp    FWORD PTR [ecx-0xfff694]
  4353ef:	jmp    DWORD PTR [ecx-0x37]
  4353f2:	test   eax,0x6b3ff
  4353f7:	mov    edi,edi
  4353f9:	sub    DWORD PTR [edi-0x3a],0x22
  4353fd:	dec    esp
  4353ff:	add    BYTE PTR [esi+0x36ff6ee3],al
  435405:	(bad)  
  435406:	dec    DWORD PTR [ecx+0x32998300]
  43540c:	jecxz  0x435391
  43540e:	add    BYTE PTR [eax],al
  435410:	push   ebp
  435411:	mov    ebx,DWORD PTR [ebx-0x7600d301]
  435417:	add    bh,bh
  435419:	jmp    FWORD PTR [edx-0x5a]
  43541c:	out    dx,eax
  43541d:	add    bh,bh
  43541f:	add    BYTE PTR [edx],bl
  435421:	or     DWORD PTR [ebx],ebx
  435423:	add    BYTE PTR [ebx],dh
  435425:	(bad)  
  435426:	dec    esp
  435428:	int3   
  435429:	call   DWORD PTR [eax-0x14]
  43542c:	mov    ebp,0x7689cccc
  435431:	out    0x22,al
  435433:	adc    DWORD PTR [esi-0x59],0xffffffff
  435437:	(bad)  
  435438:	inc    DWORD PTR [eax]
  43543a:	mov    dl,0xcf
  43543c:	sbb    eax,0xedffffff
  435441:	sbb    ah,BYTE PTR [edx+0x86a8ff]
  435447:	dec    esp
  435449:	add    BYTE PTR [eax+0xff9dd0],al
  43544f:	push   DWORD PTR [eax]
  435451:	sub    al,0x94
  435453:	jmp    DWORD PTR [eax-0x49]
  435456:	add    DWORD PTR [eax],0x0
  435459:	int3   
  43545a:	test   eax,0xff0141
  43545f:	mov    DWORD PTR [ebp-0x2900069e],edi
  435465:	mov    ebp,0xff00ff
  43546a:	xor    DWORD PTR [ebx+0x37],esp
  43546d:	dec    esp
  43546f:	dec    DWORD PTR [edi-0x5d]
  435472:	dec    edi
  435473:	dec    ecx
  435475:	clc    
  435476:	(bad)  
  435477:	(bad)  
  435478:	(bad)  
  435479:	call   DWORD PTR [ebx+0x1b]
  43547c:	jnp    0x43547e
  43547e:	(bad)  
  43547f:	(bad)  
  435480:	mov    esp,0xe400c893
  435485:	addr16 add bh,bh
  435488:	dec    esp
  43548a:	mov    dh,0x93
  43548c:	inc    edi
  43548d:	(bad)  
  43548e:	inc    DWORD PTR [eax]
  435490:	dec    esi
  435491:	sbb    edi,DWORD PTR [edi+edi*8-0xc]
  435495:	xor    eax,0xffccffff
  43549a:	xchg   esp,eax
  43549b:	(bad)  
  43549c:	adc    BYTE PTR [ebx-0x69e0007d],al
  4354a2:	jne    0x4354a3
  4354a4:	adc    BYTE PTR [ecx],bh
  4354a6:	or     esp,0x0
  4354a9:	(bad)  
  4354aa:	fild   QWORD PTR [edi+ecx*4-0x1]
  4354ae:	add    bh,bh
  4354b0:	(bad)  
  4354b2:	inc    ebp
  4354b3:	dec    DWORD PTR [ebx]
  4354b5:	jmp    0x142d8b9
  4354ba:	mov    cl,al
  4354bc:	dec    esp
  4354bd:	inc    DWORD PTR [ebx+0x492bc00]
  4354c3:	add    cl,dl
  4354c5:	aaa    
  4354c6:	(bad)  
  4354c7:	(bad)  
  4354c8:	inc    DWORD PTR [eax]
  4354ca:	push   0xffffcc4a
  4354cf:	jmp    ecx
  4354d1:	xor    al,BYTE PTR [ecx+0x0]
  4354d4:	jb     0x43549d
  4354d6:	(bad)  
  4354d7:	(bad)  
  4354d8:	inc    DWORD PTR [eax]
  4354da:	pop    es
  4354db:	pop    ebp
  4354dc:	mov    esi,0x2effcc00
  4354e1:	sbb    bl,ch
  4354e3:	inc    DWORD PTR [edi-0x33007c1c]
  4354e9:	push   DWORD PTR [ebx]
  4354eb:	(bad)  
  4354ec:	into   
  4354ed:	add    BYTE PTR [eax],al
  4354ef:	call   FWORD PTR [eax]
  4354f1:	fst    DWORD PTR [ecx]
  4354f3:	add    BYTE PTR [edi+eax*1],ch
  4354f6:	inc    DWORD PTR [eax]
  4354f8:	inc    DWORD PTR [eax]
  4354fa:	pushf  
  4354fb:	popf   
  4354fc:	out    dx,al
  4354fd:	add    BYTE PTR [ecx-0x6371a101],cl
  435503:	add    ebp,0xffffffa4
  435506:	inc    DWORD PTR [ebx-0xe8b0100]
  43550c:	int    0xff
  43550e:	inc    DWORD PTR [ebx-0x764f0354]
  435514:	fmul   QWORD PTR [ecx]
  435516:	add    ah,cl
  435518:	mov    edi,edi
  43551a:	xlat   BYTE PTR ds:[ebx]
  43551b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43551c:	addr16 int3 
  43551e:	add    bh,bh
  435520:	(bad)  
  435521:	hlt    
  435522:	cwde   
  435523:	add    BYTE PTR [esi],dh
  435525:	(bad)  
  435526:	(bad)  
  435527:	inc    DWORD PTR [eax]
  435529:	dec    edi
  43552b:	out    dx,eax
  43552c:	xchg   ebx,eax
  43552d:	add    DWORD PTR [ebx+0x436195cc],0x0
  435534:	pusha  
  435535:	aad    0x83
  435537:	inc    DWORD PTR [eax]
  435539:	mov    edx,ebx
  43553b:	push   esi
  43553c:	dec    ecx
  43553d:	add    DWORD PTR [eax],0xffffffff
  435540:	xor    al,0x8
  435542:	aam    0xff
  435544:	xor    al,0x13
  435546:	(bad)  
  435547:	(bad)  
  435548:	(bad)  
  435549:	jmp    FWORD PTR [eax+0x2f]
  43554c:	jb     0x43554d
  43554e:	add    DWORD PTR [eax],0xffffffc3
  435551:	and    eax,0x9fd20082
  435556:	dec    DWORD PTR [ecx+0x693bff83]
  43555c:	or     bh,bh
  43555e:	int3   
  43555f:	sbb    esp,0xffffffe0
  435562:	loop   0x4354ed
  435564:	in     eax,0x11
  435566:	or     DWORD PTR [ecx+0x2faa83ff],0x3b
  43556d:	add    ah,cl
  43556f:	add    BYTE PTR [ebx+0x41ff9140],bh
  435575:	cmp    edi,edi
  435577:	add    DWORD PTR [eax],0xffffffff
  43557a:	sbb    eax,0xffff179d
  43557f:	(bad)  
  435580:	mov    eax,0x11ff78e2
  435585:	cmp    BYTE PTR [eax],al
  435587:	inc    DWORD PTR [eax]
  435589:	call   FWORD PTR [edx-0x4a]
  43558c:	mov    ah,0xff
  43558e:	(bad)  
  43558f:	inc    DWORD PTR [ebp+0x29]
  435592:	cs xor esi,0x3e
  435596:	or     DWORD PTR [ecx-0x1c777c34],0x4d
  43559d:	inc    DWORD PTR [eax]
  43559f:	add    BYTE PTR [ecx-0x6b],al
  4355a2:	pushf  
  4355a3:	jmp    DWORD PTR [esi-0x7c000053]
  4355a9:	xor    ecx,0xffffffc4
  4355ac:	mov    al,0x83
  4355ae:	(bad)  
  4355af:	jmp    DWORD PTR [esp+ebx*8]
  4355b2:	call   0xff89:0xcc4e39ff
  4355b9:	call   FWORD PTR [esi-0x25]
  4355bc:	add    al,0xff
  4355be:	inc    DWORD PTR [eax]
  4355c0:	cs icebp 
  4355c2:	sub    eax,0xcc7e81ff
  4355c7:	add    BYTE PTR [ebx-0x4548777],al
  4355cd:	int3   
  4355ce:	inc    DWORD PTR [eax]
  4355d0:	xor    eax,0x45fff97c
  4355d5:	icebp  
  4355d6:	add    ah,cl
  4355d8:	add    BYTE PTR [ebx-0x336c7492],al
  4355de:	mov    DWORD PTR [ecx-0x7c4bde74],ecx
  4355e4:	jnp    0x435618
  4355e6:	add    BYTE PTR [eax],al
  4355e8:	(bad)  
  4355e9:	call   FWORD PTR [edi-0x1f]
  4355ec:	(bad)  
  4355ed:	inc    DWORD PTR [eax]
  4355ef:	add    BYTE PTR [edi],dh
  4355f1:	fwait
  4355f2:	out    dx,al
  4355f3:	inc    DWORD PTR [ebx+0xff002b]
  4355f9:	push   DWORD PTR [esi-0x76978d]
  4355ff:	call   DWORD PTR [ecx-0x12]
  435602:	push   ebx
  435603:	add    BYTE PTR [ecx+0xcc0025],bh
  435609:	add    BYTE PTR [edx-0x3300557b],cl
  43560f:	push   DWORD PTR [eax]
  435611:	pop    eax
  435612:	mov    esp,0xffb82eff
  435617:	dec    esp
  435619:	push   DWORD PTR [ebp-0x3a]
  43561c:	xchg   bh,bh
  43561e:	dec    esp
  435620:	mov    dl,0x5c
  435622:	test   al,0xff
  435624:	mov    BYTE PTR [ebx-0x1],cl
  435627:	dec    esp
  435629:	jmp    DWORD PTR ds:0xff78ef
  43562f:	sbb    eax,0xfffffff6
  435632:	inc    BYTE PTR [eax]
  435634:	rol    DWORD PTR [ecx+0xffffff],0xd2
  43563b:	mov    DWORD PTR [ebx],edx
  43563d:	inc    DWORD PTR [eax]
  43563f:	inc    DWORD PTR [ecx-0x1effd169]
  435645:	imul   eax,DWORD PTR [eax],0xffffffcc
  435648:	add    bh,bh
  43564a:	push   0xffffffff
  43564c:	add    eax,DWORD PTR [ebx-0x5eb90001]
  435652:	inc    BYTE PTR [eax]
  435654:	and    al,0xde
  435656:	inc    DWORD PTR [eax]
  435658:	inc    DWORD PTR [eax]
  43565a:	loopne 0x4356c5
  43565c:	sub    al,BYTE PTR [eax]
  43565e:	add    BYTE PTR [eax],al
  435660:	adc    al,BYTE PTR [edx+0x66]
  435663:	call   FWORD PTR [ecx]
  435665:	xchg   ebp,eax
  435666:	add    ah,cl
  435668:	add    bh,bh
  43566a:	nop
  43566b:	mov    edx,0xffffff2a
  435670:	dec    esp
  435671:	stos   DWORD PTR es:[edi],eax
  435672:	test   BYTE PTR [ebx-0x7cbaa0],0xff
  435679:	call   DWORD PTR [ecx+0x34]
  43567c:	mov    ds:0x9effff83,al
  435681:	sbb    BYTE PTR [ebx],dh
  435683:	(bad)  
  435684:	js     0x435688
  435686:	add    bh,bh
  435688:	inc    DWORD PTR [ebx-0x7c35b1fb]
  43568e:	cmp    edi,0xffffff8a
  435691:	imul   bh
  435693:	jmp    FWORD PTR [ebp-0xc]
  435696:	cmp    edi,0x0
  435699:	add    BYTE PTR [esi+ebx*4-0x7cff0097],bl
  4356a0:	lahf   
  4356a1:	adc    edi,DWORD PTR [eax]
  4356a3:	add    BYTE PTR ds:0x89ffc8,al
  4356a9:	(bad)  
  4356aa:	jmp    0x4271e6
  4356af:	jmp    DWORD PTR [ebx]
  4356b1:	icebp  
  4356b2:	mov    al,ds:0xff38c9ff
  4356b7:	add    bh,bh
  4356b9:	(bad)  
  4356ba:	jg     0x4356cf
  4356bc:	mov    bh,0x0
  4356be:	(bad)  
  4356bf:	push   DWORD PTR [edx]
  4356c1:	sar    DWORD PTR [ebx],cl
  4356c3:	call   FWORD PTR [edi+edx*2-0x3300ff7d]
  4356ca:	pushf  
  4356cb:	in     al,dx
  4356cc:	or     al,0x83
  4356ce:	mov    esp,ecx
  4356d0:	sbb    DWORD PTR [ebx+0x7b],0x83c17d89
  4356d7:	(bad)  
  4356d8:	inc    DWORD PTR [eax]
  4356da:	pop    edi
  4356db:	inc    esp
  4356dc:	mov    eax,0x82ff8383
  4356e1:	jmp    0x43572f
  4356e3:	push   ebp
  4356e5:	push   ss
  4356e6:	cmp    edi,0xffffff83
  4356e9:	sub    DWORD PTR [edx-0x8739],0x0
  4356f0:	test   eax,0x2b00d818
  4356f5:	test   BYTE PTR [eax],al
  4356f7:	inc    DWORD PTR [ebx+0x2ee576ff]
  4356fd:	add    BYTE PTR [eax],al
  4356ff:	add    BYTE PTR [edi+0xe],bh
  435702:	inc    ecx
  435703:	inc    DWORD PTR [esp+ecx*4-0x1]
  435707:	inc    DWORD PTR [eax]
  435709:	mov    DWORD PTR ds:0xff83e581,esp
  43570f:	call   DWORD PTR [ecx-0x4a]
  435712:	cld    
  435713:	add    BYTE PTR [ecx],al
  435715:	adc    edi,edi
  435717:	add    BYTE PTR [eax],al
  435719:	call   DWORD PTR [ebx+0x4f]
  43571c:	test   ah,0xff
  43571f:	add    BYTE PTR ds:0xb6ccef40,ch
  435725:	inc    DWORD PTR ds:[eax]
  435728:	add    bh,bh
  43572a:	hlt    
  43572b:	outs   dx,DWORD PTR ds:[esi]
  43572c:	mov    edx,0xe300ff83
  435731:	mov    al,dh
  435733:	add    BYTE PTR [edi+0x2],dh
  435736:	inc    DWORD PTR [eax]
  435738:	inc    DWORD PTR [eax]
  43573a:	stos   BYTE PTR es:[edi],al
  43573b:	mov    BYTE PTR [edi],ah
  43573d:	add    DWORD PTR [ebx-0x2c8ec300],0x0
  435744:	sub    DWORD PTR [edx-0xff0001],esi
  43574a:	dec    esi
  43574b:	push   0xcc000076
  435750:	out    dx,eax
  435751:	add    ebx,DWORD PTR [ebp-0x7d]
  435754:	outs   dx,DWORD PTR ds:[esi]
  435755:	lock add DWORD PTR [ebx-0x3f90100],0x4b
  43575d:	add    DWORD PTR [ebx+0x1b184f00],0x0
  435764:	pop    ebp
  435765:	inc    ebp
  435766:	int3   
  435767:	add    BYTE PTR [ebx+0xfb75cff],al
  43576d:	int3   
  43576e:	(bad)  
  43576f:	push   DWORD PTR [ebx]
  435771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435772:	fmul   st(4),st
  435774:	xor    ecx,esp
  435776:	add    bh,bh
  435778:	cmp    edi,0x35
  43577b:	mov    ebx,0xff838345
  435780:	aaa    
  435781:	add    bh,BYTE PTR [esi]
  435783:	add    BYTE PTR [esi-0x1f],bh
  435786:	add    bh,bh
  435788:	add    BYTE PTR [eax],al
  43578a:	sub    al,0xfd
  43578c:	leave  
  43578d:	cmp    edi,0xffffff83
  435790:	fstp   QWORD PTR [edx]
  435792:	ud0    ebx,ebx
  435795:	or     bh,bh
  435797:	int3   
  435798:	(bad)  
  435799:	jmp    DWORD PTR [esi]
  43579b:	adc    DWORD PTR es:[eax],eax
  43579e:	(bad)  
  43579f:	(bad)  
  4357a0:	(bad)  
  4357a2:	pop    ds
  4357a3:	call   edi
  4357a5:	xchg   DWORD PTR [eax],eax
  4357a7:	cmp    edi,0xffffff83
  4357aa:	out    0x49,eax
  4357ac:	xor    BYTE PTR [ebx-0x58a3301],al
  4357b2:	jb     0x4357b3
  4357b4:	fcmovnb st,st(5)
  4357b6:	(bad)  
  4357b7:	inc    DWORD PTR [eax]
  4357b9:	add    cl,ah
  4357bb:	iret   
  4357bc:	idiv   edi
  4357be:	inc    DWORD PTR [ebx-0x9ea4fe]
  4357c4:	enter  0xf8,0x0
  4357c8:	add    ah,cl
  4357ca:	ror    BYTE PTR [ebx],1
  4357cc:	es add bh,bh
  4357cf:	sub    DWORD PTR [eax+0x4e],0x18
  4357d3:	sub    DWORD PTR [edx],0x7f
  4357d6:	(bad)  
  4357d7:	inc    DWORD PTR [ebx+0x2b6ed700]
  4357dd:	cmp    edi,0xffffffff
  4357e0:	mov    ch,0xa3
  4357e2:	in     eax,dx
  4357e3:	add    al,bl
  4357e5:	mov    ds:0xffff83,al
  4357ea:	push   edi
  4357eb:	lds    eax,FWORD PTR ds:[eax]
  4357ee:	int3   
  4357ef:	add    BYTE PTR [eax-0x19],cl
  4357f2:	jge    0x4357f3
  4357f4:	sbb    BYTE PTR ds:0x838383ff,al
  4357fa:	(bad)  
  4357fb:	mov    ah,BYTE PTR [eax+eax*1-0x1]
  4357ff:	(bad)  
  435800:	mov    ebx,0xceff7a20
  435805:	mov    edx,0xffffff
  43580a:	repnz addr16 push es
  43580d:	inc    DWORD PTR [ebx-0x238ada00]
  435813:	cmp    DWORD PTR [esi],0xffffffb3
  435816:	inc    DWORD PTR [eax]
  435818:	mov    edi,edi
  43581a:	sub    DWORD PTR gs:0xa000ffff,edi
  435821:	cmp    ebp,esp
  435823:	add    BYTE PTR [edx+ecx*2+0x0],cl
  435827:	inc    DWORD PTR [eax]
  435829:	jmp    ebx
  43582b:	mov    esi,0xff0089f4
  435830:	je     0x43581b
  435832:	outs   dx,BYTE PTR ds:[esi]
  435833:	call   FWORD PTR [ebx+esi*1-0x1]
  435837:	dec    esp
  435839:	push   DWORD PTR [ecx-0x44]
  43583c:	cld    
  43583d:	add    BYTE PTR [eax],al
  43583f:	int3   
  435840:	lock cwde 
  435842:	push   esi
  435843:	add    BYTE PTR [ebp-0x4a],dl
  435846:	(bad)  
  435847:	(bad)  
  435848:	(bad)  
  435849:	(bad)  
  43584a:	cli    
  43584b:	jns    0x435834
  43584d:	cmp    edi,0xffffffcc
  435850:	xchg   ebp,eax
  435851:	mov    edi,DWORD PTR [eax+eax*1-0x34]
  435855:	out    0xcc,eax
  435857:	inc    DWORD PTR [ebx-0x72b6f100]
  43585d:	(bad)  
  43585e:	(bad)  
  43585f:	inc    DWORD PTR [ebp-0x5a000d1a]
  435865:	jo     0x435867
  435867:	(bad)  
  435868:	inc    DWORD PTR [ebx+0xd24a4c]
  43586e:	inc    DWORD PTR [eax]
  435870:	xor    bh,dl
  435872:	inc    edi
  435873:	add    BYTE PTR [ebx-0x7cff0031],bl
  435879:	cmp    DWORD PTR [ecx],0xffffffc5
  43587c:	hlt    
  43587d:	(bad)  
  43587e:	(bad)  
  43587f:	(bad)  
  435880:	mov    eax,0x11ff2eb5
  435885:	xlat   BYTE PTR ds:[ebx]
  435886:	cmp    edi,0xffffff89
  435889:	call   FWORD PTR [edi+ebp*2-0xd]
  43588d:	cmp    edi,0xffffffff
  435890:	jge    0x4358d3
  435892:	out    0x83,eax
  435894:	dec    edi
  435895:	mov    bh,bh
  435897:	add    BYTE PTR [eax],al
  435899:	push   ecx
  43589b:	test   DWORD PTR [edi+0x4f8300ff],0xff899d69
  4358a5:	das    
  4358a6:	add    bh,bh
  4358a8:	inc    DWORD PTR [ebx-0x27177f]
  4358ae:	add    BYTE PTR [eax],al
  4358b0:	add    ebp,eax
  4358b2:	pop    edx
  4358b3:	push   DWORD PTR [eax+0x3b]
  4358b6:	mov    DWORD PTR [ebx+0x729f00ff],eax
  4358bc:	inc    esi
  4358bd:	or     DWORD PTR [ecx+0x6cb5a600],0xffffffff
  4358c4:	dec    BYTE PTR [eax-0x100]
  4358ca:	into   
  4358cb:	push   es
  4358cc:	push   ds
  4358cd:	(bad)  
  4358ce:	dec    DWORD PTR [ecx-0xbb8612]
  4358d4:	jo     0x4358fa
  4358d6:	(bad)  
  4358d7:	inc    DWORD PTR [ebx+0x15e35183]
  4358dd:	add    DWORD PTR [ebx-0x6ebaad00],0xffffffff
  4358e4:	fst    DWORD PTR [edi+edi*8+0x7e008383]
  4358eb:	and    BYTE PTR [ebp-0x79ff0100],ah
  4358f1:	cdq    
  4358f2:	and    BYTE PTR [ebx-0xff55aa],al
  4358f8:	add    bh,bh
  4358fa:	dec    esp
  4358fb:	mov    eax,ds:0xff68
  435900:	push   fs
  435902:	in     eax,dx
  435903:	and    DWORD PTR [esi-0x79],0x0
  435907:	inc    DWORD PTR [eax]
  435909:	add    BYTE PTR [eax-0x1c],dl
  43590c:	hlt    
  43590d:	(bad)  
  43590e:	(bad)  
  43590f:	(bad)  
  435910:	stc    
  435911:	aam    0x56
  435913:	call   DWORD PTR [edi-0xff00f7]
  435919:	add    BYTE PTR [esi+0x48],ah
  43591c:	or     DWORD PTR [eax],eax
  43591e:	or     DWORD PTR [ecx+0xe02c02],0x51
  435925:	icebp  
  435926:	mov    DWORD PTR [eax],eax
  435928:	inc    DWORD PTR [eax]
  43592a:	mov    bl,0x72
  43592c:	fild   DWORD PTR [eax]
  43592e:	add    DWORD PTR [eax],0x7b
  435931:	add    al,0xbd
  435933:	cmp    DWORD PTR [eax-0x70],0x0
  435937:	inc    DWORD PTR [eax]
  435939:	(bad)  
  43593a:	cld    
  43593b:	jg     0x9f425a40
  435941:	xchg   edx,eax
  435942:	(bad)  
  435944:	shl    BYTE PTR [edi],1
  435946:	cmp    edi,0xffffffcc
  435949:	inc    DWORD PTR [edi+0x79]
  43594c:	ret    
  43594d:	cmp    edi,0xffffffff
  435950:	cmp    ebp,ebx
  435952:	je     0x435953
  435954:	ds in  al,dx
  435956:	add    bh,bh
  435958:	add    bh,bh
  43595a:	inc    eax
  43595b:	add    BYTE PTR [ebp-0x1],ah
  43595e:	inc    DWORD PTR [eax]
  435960:	pop    esp
  435961:	dec    ecx
  435962:	popa   
  435963:	jmp    DWORD PTR [ebx+0x24]
  435966:	add    BYTE PTR [eax],al
  435968:	dec    esp
  43596a:	mov    ecx,eax
  43596c:	jns    0x43596d
  43596e:	(bad)  
  43596f:	dec    DWORD PTR [eax-0x1a]
  435972:	(bad)  
  435973:	dec    ebx
  435975:	pop    ss
  435976:	add    BYTE PTR [ebx+0x255d8300],al
  43597c:	jle    0x43597e
  43597e:	(bad)  
  43597f:	dec    DWORD PTR [ebp-0x66]
  435982:	je     0x435984
  435984:	xchg   ecx,edx
  435986:	add    bh,bh
  435988:	inc    DWORD PTR [eax]
  43598a:	js     0x4359d6
  43598c:	bswap  esp
  43598e:	add    BYTE PTR [eax],al
  435990:	sbb    DWORD PTR [ebp+0x65f200ef],0xff00
  43599a:	bound  ecx,QWORD PTR [ebp+0x830002]
  4359a0:	stos   BYTE PTR es:[edi],al
  4359a1:	outs   dx,BYTE PTR ds:[esi]
  4359a2:	adc    al,0xff
  4359a4:	add    bh,dh
  4359a6:	(bad)  
  4359a7:	(bad)  
  4359a8:	inc    DWORD PTR [ebx-0x7cb62a80]
  4359ae:	inc    DWORD PTR [ebx-0x7cc7880c]
  4359b4:	into   
  4359b5:	mov    BYTE PTR [ebx-0x5010000],al
  4359bb:	pop    ds
  4359bc:	retf   
  4359bd:	(bad)  
  4359be:	(bad)  
  4359bf:	jmp    FWORD PTR [ebp-0xc]
  4359c2:	mov    al,0xff
  4359c4:	adc    DWORD PTR [ebx-0x7cff7d],ebx
  4359ca:	div    BYTE PTR [ebx-0xffff19]
  4359d0:	ret    0xb22
  4359d3:	int3   
  4359d4:	cld    
  4359d5:	xchg   ecx,eax
  4359d6:	add    bh,bh
  4359d8:	add    bh,bh
  4359da:	mov    bh,0x1e
  4359dc:	in     al,dx
  4359dd:	inc    DWORD PTR [ebx-0x4062ef01]
  4359e3:	add    BYTE PTR [ecx],bh
  4359e5:	mov    bh,0xff
  4359e7:	add    DWORD PTR [ebx-0xd43f100],0xffffffff
  4359ee:	add    bh,bh
  4359f0:	push   ss
  4359f1:	sub    al,bl
  4359f3:	add    BYTE PTR [ecx],al
  4359f5:	cmp    edi,0x3b0000ff
  4359fb:	jecxz  0x435a38
  4359fd:	add    BYTE PTR [ebx-0x74a1db00],al
  435a03:	add    al,bl
  435a05:	push   0xff00ffff
  435a0a:	pop    edx
  435a0b:	test   DWORD PTR [edi-0x1],0xf22d00ff
  435a12:	inc    ebp
  435a13:	jmp    FWORD PTR [ebp+0x55]
  435a16:	inc    DWORD PTR [eax]
  435a18:	inc    DWORD PTR [eax]
  435a1a:	rol    DWORD PTR ds:0xff00cc66,0xde
  435a21:	mov    cs,edi
  435a23:	add    BYTE PTR [edi-0x7e],cl
  435a26:	inc    DWORD PTR [eax]
  435a28:	(bad)  
  435a29:	jmp    DWORD PTR [ebp+0x5b]
  435a2c:	dec    esi
  435a2d:	(bad)  
  435a2e:	dec    esp
  435a30:	stc    
  435a31:	mov    eax,0x457eff49
  435a36:	inc    DWORD PTR [ebx+0x5deff00]
  435a3c:	pop    es
  435a3d:	int3   
  435a3e:	int3   
  435a3f:	(bad)  
  435a40:	mov    ebp,0x9200ca27
  435a45:	mov    bh,bh
  435a47:	inc    DWORD PTR [ebx+0x56ba2bff]
  435a4d:	(bad)  
  435a4e:	inc    DWORD PTR [eax]
  435a50:	in     eax,0xc6
  435a52:	sbb    eax,0xffeb9f83
  435a57:	int3   
  435a58:	inc    DWORD PTR [eax]
  435a5a:	imul   ebp,DWORD PTR [edx],0xffffff3b
  435a60:	cmp    eax,0x26834c7a
  435a65:	(bad)  
  435a66:	inc    DWORD PTR [eax]
  435a68:	inc    DWORD PTR [eax]
  435a6a:	enter  0x5674,0xff
  435a6e:	add    bh,bh
  435a70:	(bad)  
  435a71:	dec    edx
  435a72:	lods   eax,DWORD PTR ds:[esi]
  435a73:	add    BYTE PTR [edx],dl
  435a75:	sub    eax,0xff0083cc
  435a7a:	rol    DWORD PTR [ebx],1
  435a7c:	xor    BYTE PTR [eax],al
  435a7e:	add    bh,bh
  435a80:	retf   
  435a81:	ret    0xcc38
  435a84:	xchg   ebx,eax
  435a85:	repz add bh,bh
  435a88:	add    BYTE PTR [eax],al
  435a8a:	arpl   WORD PTR es:[edi+0x26ffff00],sp
  435a91:	cwde   
  435a92:	lock dec ebp
  435a95:	or     eax,0xff00cc83
  435a9a:	sbb    BYTE PTR [ecx],dl
  435a9c:	call   0x3d435ba0
  435aa1:	mov    ecx,DWORD PTR [ecx-0x596b34]
  435aa7:	add    DWORD PTR [eax],0x0
  435aaa:	mov    eax,ds:0xff008aa0
  435aaf:	(bad)  
  435ab0:	mov    esp,0x45002f49
  435ab5:	das    
  435ab6:	inc    DWORD PTR [eax]
  435ab8:	int3   
  435ab9:	add    BYTE PTR [ebx+0x69e9],ah
  435abf:	call   DWORD PTR [eax]
  435ac1:	add    DWORD PTR [eax+0x0],ecx
  435ac4:	xor    eax,0xff0096
  435ac9:	jmp    FWORD PTR [edx]
  435acb:	repz xchg ecx,eax
  435acd:	(bad)  
  435ace:	inc    DWORD PTR [eax]
  435ad0:	mov    esi,0x22009d2e
  435ad5:	fld    DWORD PTR [ebx-0x74000001]
  435adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435adc:	jbe    0x435a61
  435ade:	add    bh,bh
  435ae0:	mov    dh,0xc3
  435ae2:	pop    ecx
  435ae3:	add    BYTE PTR [edi],ah
  435ae5:	push   ds
  435ae6:	inc    DWORD PTR [ebx+0x5628ff00]
  435aec:	push   ebp
  435aed:	cmp    edi,0x0
  435af0:	jae    0x435abc
  435af2:	jmp    0x435af3
  435af4:	stos   DWORD PTR es:[edi],eax
  435af5:	push   ebx
  435af6:	add    ah,cl
  435af8:	add    BYTE PTR [ebx-0xc1a017],al
  435afe:	dec    DWORD PTR [ecx+0x72b1ae]
  435b04:	loopne 0x435b59
  435b06:	inc    DWORD PTR [ebx-0x56cb0077]
  435b0c:	fiadd  WORD PTR [eax]
  435b0e:	(bad)  
  435b0f:	jmp    FWORD PTR [edx]
  435b11:	cmp    bh,BYTE PTR [esi-0x77]
  435b14:	cmp    esp,ecx
  435b16:	add    BYTE PTR [ebx-0x41777c01],al
  435b1c:	cwde   
  435b1d:	or     esp,0xffffffcc
  435b20:	out    dx,eax
  435b21:	outs   dx,DWORD PTR ds:[esi]
  435b22:	rol    BYTE PTR [eax],0x6
  435b25:	dec    edx
  435b26:	add    DWORD PTR [eax],0xffffffff
  435b29:	sbb    DWORD PTR [ebx],0x7b
  435b2c:	push   edx
  435b2d:	add    DWORD PTR [eax],0xffffffff
  435b30:	outs   dx,DWORD PTR ds:[esi]
  435b31:	or     al,0x1d
  435b33:	add    BYTE PTR [ecx-0x7c7cff78],dl
  435b39:	add    al,dh
  435b3b:	jnp    0x435af8
  435b3d:	dec    DWORD PTR [ecx+0x3e8bc400]
  435b43:	int3   
  435b44:	scas   eax,DWORD PTR es:[edi]
  435b45:	add    eax,0xccffff00
  435b4a:	js     0x435b92
  435b4c:	stc    
  435b4d:	add    bh,bh
  435b4f:	add    ah,ch
  435b51:	(bad)  
  435b52:	pop    edi
  435b53:	add    BYTE PTR [edi],bl
  435b55:	cmp    eax,0xff00ffff
  435b5a:	add    esp,DWORD PTR [esi-0x7c0012]
  435b60:	add    esp,edx
  435b62:	mov    esp,0x891b93ff
  435b67:	add    BYTE PTR [eax],al
  435b69:	call   FWORD PTR [edi]
  435b6b:	cmp    cl,BYTE PTR [eax+eax*1+0x1500ff00]
  435b72:	ins    DWORD PTR es:[edi],dx
  435b73:	call   FWORD PTR [esp+eax*4+0xff89ff]
  435b7a:	imul   ebp,edx,0xff0b
  435b80:	and    ah,BYTE PTR [ecx]
  435b82:	add    BYTE PTR fs:[edi-0x50],dh
  435b86:	(bad)  
  435b87:	(bad)  
  435b88:	dec    esp
  435b8a:	inc    esp
  435b8b:	cld    
  435b8c:	mov    ebp,0xf3ccff83
  435b91:	jmp    DWORD PTR [edx-0x33cba901]
  435b97:	inc    DWORD PTR [ebx+0x3d5861ff]
  435b9d:	(bad)  
  435b9e:	inc    DWORD PTR [ebx-0x7c8b3d94]
  435ba4:	mov    dl,0xc
  435ba6:	add    BYTE PTR [eax],al
  435ba8:	cmp    edi,0xffffffdd
  435bab:	int3   
  435bac:	push   es
  435bad:	int3   
  435bae:	add    DWORD PTR [eax],0xb
  435bb1:	and    cl,BYTE PTR [ebp+0x0]
  435bb4:	and    BYTE PTR [esi],0x0
  435bb7:	add    BYTE PTR [ecx+0x1fc93d83],cl
  435bbd:	dec    esp
  435bbf:	add    ah,ch
  435bc1:	fwait
  435bc2:	dec    esp
  435bc4:	cmp    bh,bh
  435bc6:	(bad)  
  435bc7:	inc    DWORD PTR [ebx+0x4a87bff]
  435bcd:	int3   
  435bce:	inc    DWORD PTR [eax]
  435bd0:	fstp   DWORD PTR [ebx]
  435bd2:	jns    0x435ba0
  435bd4:	rcl    BYTE PTR [ebp+0x0],1
  435bd7:	(bad)  
  435bd8:	dec    DWORD PTR [ecx+0x8cb68c]
  435bde:	add    DWORD PTR [eax],0x7a
  435be1:	xchg   di,ax
  435be3:	jmp    FWORD PTR [edi]
  435be5:	bound  eax,QWORD PTR [eax]
  435be7:	mov    edi,edi
  435be9:	add    dl,al
  435beb:	aam    0x16
  435bed:	add    bh,bh
  435bef:	add    BYTE PTR [edx],cl
  435bf1:	iret   
  435bf2:	jle    0x435bf3
  435bf4:	in     eax,0x32
  435bf6:	add    bh,bh
  435bf8:	add    BYTE PTR [ebx-0x59d7d5],al
  435bfe:	(bad)  
  435bff:	dec    DWORD PTR [eax]
  435c01:	jl     0x435baf
  435c03:	(bad)  
  435c04:	cmp    DWORD PTR [ecx-0xff01],esp
  435c0a:	mov    al,0x2b
  435c0c:	dec    eax
  435c0d:	(bad)  
  435c0e:	dec    esp
  435c10:	je     0x435be6
  435c12:	jp     0x435c13
  435c14:	clc    
  435c15:	ins    DWORD PTR es:[edi],dx
  435c16:	dec    DWORD PTR [ecx-0x53a7ff01]
  435c1c:	fild   DWORD PTR [ebx+0x3f91ffff]
  435c22:	pop    eax
  435c23:	dec    ebp
  435c25:	sbb    edi,edi
  435c27:	(bad)  
  435c28:	(bad)  
  435c29:	inc    DWORD PTR [edi+0xcc1f5f]
  435c2f:	add    BYTE PTR [esi],al
  435c31:	mov    esp,0xadbaff73
  435c36:	(bad)  
  435c37:	inc    DWORD PTR [eax]
  435c39:	call   DWORD PTR [eax-0x21]
  435c3c:	out    dx,eax
  435c3d:	mov    DWORD PTR [eax],eax
  435c3f:	add    BYTE PTR [ecx-0x51],cl
  435c42:	test   eax,0xff15e6cc
  435c47:	(bad)  
  435c48:	inc    DWORD PTR [eax]
  435c4a:	pop    edi
  435c4b:	mov    ds:0xff8300f3,al
  435c50:	mov    ebx,0xc80055c8
  435c55:	out    0xff,al
  435c57:	inc    DWORD PTR [eax]
  435c59:	add    cl,ch
  435c5b:	sahf   
  435c5c:	sahf   
  435c5d:	add    BYTE PTR [ecx-0x423f167d],cl
  435c63:	call   FWORD PTR [esi-0x7e]
  435c66:	inc    DWORD PTR [ebx+0x78e38300]
  435c6c:	mov    ch,0xff
  435c6e:	add    bh,bh
  435c70:	repnz test eax,0xe76e0013
  435c76:	or     esp,0xffffff83
  435c79:	(bad)  
  435c7a:	jmp    0xd3ff:0xffdc07
  435c81:	hlt    
  435c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  435c83:	add    dl,dl
  435c85:	push   edx
  435c86:	inc    DWORD PTR [eax]
  435c88:	inc    DWORD PTR [eax]
  435c8a:	scas   eax,DWORD PTR es:[edi]
  435c8b:	pop    edi
  435c8c:	pusha  
  435c8d:	(bad)  
  435c8e:	(bad)  
  435c8f:	jmp    FWORD PTR [ebx+0x34]
  435c92:	in     al,0xff
  435c94:	add    eax,DWORD PTR [bp+di-0x7700]
  435c99:	add    bl,bl
  435c9b:	xor    DWORD PTR [eax],eax
  435c9d:	add    bh,bh
  435c9f:	inc    DWORD PTR [eax+eiz*8]
  435ca2:	test   edi,edi
  435ca4:	push   ebp
  435ca5:	out    dx,al
  435ca6:	add    DWORD PTR [eax],0x0
  435ca9:	(bad)  
  435caa:	fild   WORD PTR [edx+0xff00ee]
  435cb0:	fcom   DWORD PTR [edi]
  435cb2:	or     al,0xcc
  435cb4:	js     0x435ccf
  435cb6:	inc    DWORD PTR [ebx+0x6086ffff]
  435cbc:	add    al,0xff
  435cbe:	mov    DWORD PTR [ecx-0x76d76644],ecx
  435cc4:	popf   
  435cc5:	(bad)  
  435cc6:	inc    DWORD PTR [eax]
  435cc8:	inc    DWORD PTR [eax]
  435cca:	bound  ecx,QWORD PTR [edx-0x65]
  435ccd:	cmp    edi,0xffffffff
  435cd0:	in     al,dx
  435cd1:	mov    cl,0xfe
  435cd3:	push   DWORD PTR [esi+ebx*1]
  435cd6:	inc    DWORD PTR [eax]
  435cd8:	(bad)  
  435cd9:	jmp    DWORD PTR [edx+0x6]
  435cdc:	add    al,0x0
  435cde:	add    BYTE PTR [eax],al
  435ce0:	jo     0x435c72
  435ce2:	(bad)  
  435ce5:	retf   
  435ce6:	add    bh,bh
  435ce8:	add    BYTE PTR [eax],al
  435cea:	mov    eax,0xffccc893
  435cef:	push   DWORD PTR [esi+0x5e]
  435cf2:	cmp    bh,0xa9
  435cf5:	jmp    0x1435c7d
  435cfa:	xchg   DWORD PTR [edx-0xe0],ebx
  435d00:	xchg   esi,eax
  435d01:	xor    DWORD PTR [esi-0x1],edx
  435d04:	into   
  435d05:	push   es
  435d06:	add    DWORD PTR [ebx-0x61c5ff01],0x78
  435d0d:	add    BYTE PTR [eax],al
  435d0f:	add    BYTE PTR [edi+0x33ff82ff],ah
  435d15:	out    0xff,al
  435d17:	int3   
  435d18:	(bad)  
  435d19:	push   esi
  435d1b:	push   cs
  435d1c:	sar    edi,0xff
  435d1f:	inc    DWORD PTR ds:0xb7ffd4c7
  435d25:	push   ebp
  435d26:	cmp    edi,0xffffffff
  435d29:	call   FWORD PTR [eax]
  435d2b:	and    eax,0xff00fffa
  435d30:	push   edx
  435d31:	pop    eax
  435d32:	cmp    edi,edi
  435d34:	ss ins DWORD PTR es:[edi],dx
  435d36:	or     esp,0xffffff83
  435d39:	push   DWORD PTR [eax+ebx*8]
  435d3c:	jbe    0x435cc1
  435d3e:	add    BYTE PTR [ebx+0x22f980],al
  435d44:	mov    edi,0xffc1
  435d49:	inc    DWORD PTR [edi-0x7c]
  435d4c:	aaa    
  435d4d:	inc    DWORD PTR [eax]
  435d4f:	int3   
  435d50:	inc    ebx
  435d51:	or     BYTE PTR [ebp+0x205fcc],0x0
  435d58:	(bad)  
  435d59:	(bad)  
  435d5a:	mov    esp,0xff00f67d
  435d5f:	dec    ebp
  435d61:	mov    eax,0xebbfffa6
  435d66:	inc    DWORD PTR [ebx+0x1faeffff]
  435d6c:	rol    DWORD PTR [eax],cl
  435d6e:	add    BYTE PTR [ecx-0x7c101b02],cl
  435d74:	dec    dl
  435d76:	dec    DWORD PTR [ecx+0x540e00ff]
  435d7c:	pop    ecx
  435d7d:	int3   
  435d7e:	(bad)  
  435d7f:	inc    ecx
  435d81:	pop    ds
  435d82:	dec    ebp
  435d83:	add    BYTE PTR [ecx],dl
  435d85:	sub    edi,edi
  435d87:	add    bh,bh
  435d89:	add    BYTE PTR [edx],bh
  435d8b:	mov    edx,?
  435d8d:	add    BYTE PTR [eax],al
  435d8f:	add    BYTE PTR [eax],bl
  435d91:	jl     0x435d3f
  435d93:	int3   
  435d94:	fwait
  435d95:	xchg   edi,edi
  435d97:	add    bh,bh
  435d99:	add    dl,cl
  435d9b:	ret    
  435d9c:	dec    eax
  435d9d:	add    bh,bh
  435d9f:	add    bl,ch
  435da1:	and    BYTE PTR [ebp+0x0],0x34
  435da5:	push   ss
  435da6:	mov    edi,edi
  435da8:	dec    esp
  435daa:	arpl   WORD PTR [edi],bx
  435dac:	scas   al,BYTE PTR es:[edi]
  435dad:	(bad)  
  435dae:	inc    DWORD PTR [ebx-0xcbe480]
  435db4:	sub    DWORD PTR [ebp-0x1],eax
  435db7:	inc    DWORD PTR [eax]
  435db9:	push   DWORD PTR [edx-0x7cffb91a]
  435dbf:	mov    DWORD PTR [edx],eax
  435dc1:	jg     0x435d9d
  435dc3:	add    cl,ah
  435dc5:	and    esp,ecx
  435dc7:	inc    DWORD PTR [ebx+0x775a7500]
  435dcd:	dec    DWORD PTR [ecx-0x27e26c00]
  435dd3:	jmp    DWORD PTR [esi-0xffca]
  435dd9:	call   DWORD PTR [edi]
  435ddb:	dec    edx
  435ddc:	mov    cl,0x89
  435dde:	add    bh,bh
  435de0:	popa   
  435de1:	retf   
  435de2:	test   al,0x0
  435de4:	leave  
  435de5:	push   es
  435de6:	add    bh,bh
  435de8:	add    bh,bh
  435dea:	ja     0x435dde
  435dec:	or     BYTE PTR [eax],al
  435dee:	add    BYTE PTR [eax],al
  435df0:	jnp    0x435e2e
  435df2:	ret    0xb600
  435df5:	aam    0x83
  435df7:	int3   
  435df8:	or     DWORD PTR [ecx-0x206f7d],0x0
  435dff:	jmp    DWORD PTR [ebx+0x3800b875]
  435e05:	daa    
  435e06:	inc    DWORD PTR [eax]
  435e08:	(bad)  
  435e09:	dec    esi
  435e0b:	pop    ecx
  435e0c:	arpl   di,di
  435e0e:	inc    DWORD PTR [eax]
  435e10:	ins    BYTE PTR es:[edi],dx
  435e11:	(bad)  
  435e12:	jnp    0x435d9d
  435e14:	retf   
  435e15:	inc    ebp
  435e16:	add    DWORD PTR [ebx-0x2ce73400],0x46
  435e1d:	inc    DWORD PTR [eax]
  435e1f:	call   DWORD PTR [edi-0x9]
  435e22:	push   cs
  435e23:	jmp    DWORD PTR [eax]
  435e25:	sar    bh,1
  435e27:	inc    DWORD PTR [eax]
  435e29:	dec    DWORD PTR [ebx-0x6e91]
  435e2f:	add    al,bl
  435e31:	push   ebp
  435e32:	cmc    
  435e33:	call   FWORD PTR [esi+0xd]
  435e36:	dec    DWORD PTR [ecx-0x19973301]
  435e3c:	or     edi,edi
  435e3e:	add    bh,bh
  435e40:	push   cs
  435e41:	sub    DWORD PTR [ecx-0x34],ebx
  435e44:	(bad)  [edi]
  435e46:	add    BYTE PTR [ebx+0x3f5eff83],al
  435e4c:	push   0x7583ffff
  435e51:	daa    
  435e52:	ret    0xae83
  435e55:	rol    DWORD PTR [ebx+0x5b00ffff],0x68
  435e5c:	pop    edx
  435e5d:	int3   
  435e5e:	inc    DWORD PTR [eax]
  435e60:	pop    ebp
  435e61:	ja     0x435e46
  435e63:	add    BYTE PTR [ebx-0x7e],dh
  435e66:	(bad)  
  435e67:	(bad)  
  435e68:	inc    DWORD PTR [ebx+0x94b5c9]
  435e6e:	cmp    edi,0x7a
  435e71:	push   ds
  435e72:	push   eax
  435e73:	add    DWORD PTR [esp+eax*4-0x33010000],0xfffffff2
  435e7b:	add    BYTE PTR [ebx+0x62ffffff],dh
  435e81:	es inc edx
  435e83:	or     DWORD PTR [ebx],0x4d
  435e86:	or     DWORD PTR [ecx-0x6c00100],0x7a
  435e8d:	(bad)  
  435e8e:	dec    DWORD PTR [ecx+0x20e487]
  435e94:	cmp    DWORD PTR [esi-0x1],0x0
  435e98:	add    BYTE PTR [eax],al
  435e9a:	cmc    
  435e9b:	mov    dl,0x83
  435e9d:	or     esp,0xffffffff
  435ea0:	pop    ecx
  435ea1:	xchg   BYTE PTR [edi],ch
  435ea3:	(bad)  
  435ea4:	fimul  WORD PTR [edx]
  435ea6:	add    BYTE PTR [eax],al
  435ea8:	(bad)  
  435ea9:	dec    DWORD PTR [ecx+0x14]
  435eac:	add    ecx,DWORD PTR [ecx-0x466c0001]
  435eb2:	inc    BYTE PTR [ebx-0x7600b437]
  435eb8:	add    bh,bh
  435eba:	add    al,0x3a
  435ebc:	icebp  
  435ebd:	add    BYTE PTR [eax],al
  435ebf:	jmp    FWORD PTR [esi+0x640079e5]
  435ec5:	add    edi,edi
  435ec7:	add    BYTE PTR [ebx+0x1e906ccc],al
  435ecd:	cmp    edi,0xffffffcc
  435ed0:	data16 mov WORD PTR [edi],?
  435ed3:	dec    DWORD PTR [edx*2-0x337677]
  435eda:	jmp    0x1700:0xccff02dc
  435ee1:	add    esp,DWORD PTR [edx-0x33107100]
  435ee7:	inc    DWORD PTR [ebx+0x25f1b1ff]
  435eed:	mov    DWORD PTR [ebx+0x7ec7d800],eax
  435ef3:	call   DWORD PTR [eax+0x23]
  435ef6:	add    BYTE PTR [ebx+0x5d2600ff],al
  435efc:	mov    ebp,0x6effffcc
  435f01:	pop    edx
  435f02:	pop    ds
  435f03:	add    BYTE PTR [ebx],dh
  435f05:	dec    ecx
  435f06:	add    DWORD PTR [eax],0xffffff89
  435f09:	inc    DWORD PTR [eax-0x754f]
  435f0f:	call   DWORD PTR ds:0x8b00291a
  435f15:	add    eax,DWORD PTR [eax]
  435f17:	add    bh,bh
  435f19:	(bad)  
  435f1a:	fist   WORD PTR [ebx-0x1]
  435f1d:	(bad)  
  435f1e:	dec    DWORD PTR [ecx+0xa54e1d]
  435f24:	scas   eax,DWORD PTR es:[edi]
  435f25:	dec    edx
  435f26:	inc    DWORD PTR [eax]
  435f28:	inc    DWORD PTR [ebx-0xbf0355]
  435f2e:	add    bh,bh
  435f30:	dec    edi
  435f31:	cmp    ch,al
  435f33:	add    dh,al
  435f35:	pusha  
  435f36:	(bad)  
  435f37:	(bad)  
  435f38:	dec    esp
  435f3a:	ss sti 
  435f3c:	mov    edi,edi
  435f3e:	inc    DWORD PTR [eax]
  435f40:	sub    al,0x17
  435f42:	xor    al,0xff
  435f44:	iret   
  435f45:	mov    edi,0xff00ffff
  435f4a:	unpcklps xmm4,xmm3
  435f4d:	inc    DWORD PTR [eax]
  435f4f:	jmp    FWORD PTR [edi]
  435f51:	leave  
  435f52:	push   0xff10bf89
  435f57:	(bad)  
  435f58:	inc    DWORD PTR [eax]
  435f5a:	cwde   
  435f5b:	lods   eax,DWORD PTR ds:[esi]
  435f5c:	add    BYTE PTR ds:[ebx+0x588946ff],al
  435f63:	(bad)  
  435f64:	jns    0x435f36
  435f66:	add    bh,bh
  435f68:	add    BYTE PTR [eax],al
  435f6a:	inc    esp
  435f6b:	sbb    eax,0xff0000cd
  435f70:	mov    bh,0xfc
  435f72:	pusha  
  435f73:	jmp    DWORD PTR [ecx-0x7600ffa0]
  435f79:	add    dl,ah
  435f7b:	xor    ebp,DWORD PTR [ebx+0x1aff00ff]
  435f81:	push   esp
  435f82:	idiv   edi
  435f84:	dec    edi
  435f85:	cmp    DWORD PTR [eax],eax
  435f87:	add    BYTE PTR [eax],al
  435f89:	add    BYTE PTR [esi-0x4e],bh
  435f8c:	retf   0xffff
  435f8f:	(bad)  
  435f90:	jmp    FWORD PTR [ebx+0x3fb7ff3a]
  435f96:	add    bh,bh
  435f98:	add    bh,bh
  435f9a:	in     eax,dx
  435f9b:	jo     0x435f93
  435f9d:	(bad)  
  435f9e:	(bad)  
  435f9f:	push   DWORD PTR [edx+eax*1+0x471effac]
  435fa6:	add    bh,bh
  435fa8:	add    bh,bh
  435faa:	outs   dx,DWORD PTR ds:[esi]
  435fab:	jg     0x435f7c
  435fad:	(bad)  
  435fae:	inc    DWORD PTR [eax]
  435fb0:	xchg   edx,eax
  435fb1:	leave  
  435fb2:	mov    dh,0x83
  435fb4:	jge    0x436009
  435fb6:	int3   
  435fb7:	inc    DWORD PTR [ebx+0x2e1476ff]
  435fbd:	mov    DWORD PTR [eax],eax
  435fbf:	add    DWORD PTR [ecx],0x52
  435fc2:	cs add dh,ch
  435fc5:	pop    ss
  435fc6:	(bad)  
  435fc7:	dec    esp
  435fc9:	int3   
  435fca:	test   al,0x24
  435fcc:	inc    DWORD PTR es:[eax]
  435fcf:	int3   
  435fd0:	cmp    ebp,esp
  435fd2:	outs   dx,DWORD PTR ds:[esi]
  435fd3:	int3   
  435fd4:	push   DWORD PTR [ebx-0x7d]
  435fd7:	or     DWORD PTR [ecx-0x182e9001],0x0
  435fde:	add    BYTE PTR [eax],al
  435fe0:	add    eax,0xff25dd
  435fe5:	aas    
  435fe6:	(bad)  
  435fe7:	inc    DWORD PTR [eax]
  435fe9:	mov    DWORD PTR [ebx],esi
  435feb:	xor    BYTE PTR [edx],al
  435fed:	int3   
  435fee:	int3   
  435fef:	add    ch,bl
  435ff1:	pminsw mm7,mm7
  435ff4:	mov    dl,dh
  435ff6:	add    BYTE PTR [ecx-0x3a9f7c01],cl
  435ffc:	ds dec esp
  435fff:	jmp    DWORD PTR [ebp+0x73834aeb]
  436005:	lahf   
  436006:	int3   
  436007:	add    bh,bh
  436009:	add    ah,bh
  43600b:	and    eax,0x8900ffda
  436010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436011:	push   es
  436012:	idiv   bh
  436014:	sub    eax,0x89008346
  436019:	int3   
  43601a:	adc    ebp,DWORD PTR [bx+di+0x0]
  43601f:	jmp    DWORD PTR [esi+0x53]
  436022:	cmp    bh,bh
  436024:	add    al,0xc4
  436026:	(bad)  
  436027:	dec    esp
  436029:	add    ah,dh
  43602b:	repnz add DWORD PTR [ebx-0x6d9eff7d],0xffffffbf
  436033:	cmp    DWORD PTR [edi+0x36],0xffffff89
  436037:	dec    esp
  436039:	add    BYTE PTR [ecx-0x7cff6e7b],bl
  43603f:	(bad)  
  436040:	cmp    eax,0x3bcc2b25
  436045:	dec    ebp
  436046:	add    bh,bh
  436048:	(bad)  
  436049:	jmp    DWORD PTR [edi]
  43604b:	sub    al,0x49
  43604d:	add    bh,bh
  43604f:	add    BYTE PTR [eax],dh
  436051:	mov    ebx,0xe8aeffca
  436056:	mov    DWORD PTR [eax],eax
  436058:	add    BYTE PTR [eax],al
  43605a:	sbb    eax,0xff890f03
  43605f:	(bad)  
  436060:	mov    edx,0x60ff7de9
  436065:	push   edx
  436066:	add    BYTE PTR [eax],al
  436068:	dec    DWORD PTR [ecx+0x10f660]
  43606e:	add    bh,bh
  436070:	pop    edi
  436071:	sar    BYTE PTR [ebp-0x34],0x54
  436075:	icebp  
  436076:	add    bh,bh
  436078:	mov    edi,edi
  43607a:	sbb    al,0x17
  43607c:	xchg   edx,eax
  43607d:	add    BYTE PTR [eax],al
  43607f:	mov    DWORD PTR [esi+ecx*2+0x28258358],eax
  436086:	(bad)  
  436087:	(bad)  
  436088:	(bad)  
  436089:	(bad)  
  43608a:	aas    
  43608b:	and    DWORD PTR [ebx+0x7bffffff],esp
  436091:	pop    eax
  436092:	repnz (bad) 
  436094:	cmp    DWORD PTR [eax],eax
  436096:	inc    DWORD PTR [ebx+0x79dc0083]
  43609c:	mov    edi,0x58ff8900
  4360a1:	dec    esi
  4360a2:	inc    eax
  4360a3:	jmp    FWORD PTR [esi-0x7d]
  4360a6:	inc    DWORD PTR [ebx-0x1539ff01]
  4360ac:	or     al,0x83
  4360ae:	int3   
  4360af:	cmp    DWORD PTR [edx+0x26],0x65
  4360b3:	jmp    DWORD PTR [eax]
  4360b5:	out    dx,al
  4360b6:	add    BYTE PTR [eax],al
  4360b8:	add    DWORD PTR [eax],0x3
  4360bb:	and    DWORD PTR [eax],esi
  4360bd:	inc    DWORD PTR [ebx+0x790d3eff]
  4360c3:	inc    DWORD PTR [ecx-0xff7c5b]
  4360c9:	(bad)  
  4360ca:	mov    ecx,0xffff50bc
  4360cf:	push   DWORD PTR [eax-0xb]
  4360d2:	lods   al,BYTE PTR ds:[esi]
  4360d3:	adc    DWORD PTR [ebx-0x7c007cca],0xffffffff
  4360da:	push   eax
  4360db:	arpl   dx,si
  4360dd:	cmp    edi,0xffffffff
  4360e0:	pop    edi
  4360e1:	xor    BYTE PTR [ebx],ah
  4360e3:	(bad)  
  4360e4:	jmp    0xa5ff:0xffffff0a
  4360eb:	sbb    al,0xaf
  4360ed:	(bad)  
  4360ee:	dec    DWORD PTR [ecx-0x32ef40]
  4360f4:	cmp    BYTE PTR [eax-0x7d],al
  4360f7:	add    bh,bh
  4360f9:	inc    ecx
  4360fb:	fist   WORD PTR [ecx-0x34]
  4360fe:	add    ah,cl
  436100:	add    ebp,0xf022000b
  436106:	add    BYTE PTR [ebx+0x16c60000],al
  43610c:	int    0xff
  43610e:	add    BYTE PTR [eax],al
  436110:	imul   DWORD PTR [ecx]
  436112:	dec    ecx
  436113:	dec    ebx
  436115:	fdiv   st(7),st
  436117:	(bad)  
  436118:	(bad)  
  436119:	(bad)  
  43611a:	mov    edi,0xff00fb0b
  43611f:	call   DWORD PTR [eax-0x7a00c8ad]
  436125:	sar    edi,1
  436127:	inc    DWORD PTR [ebx+0x603536ff]
  43612d:	mov    edi,edi
  43612f:	add    BYTE PTR [edx],bl
  436131:	jecxz  0x4360f8
  436133:	dec    ebx
  436135:	jg     0x436137
  436137:	add    bh,bh
  436139:	push   DWORD PTR [edx]
  43613b:	and    eax,0xff001d
  436140:	(bad)  
  436141:	neg    DWORD PTR [eax]
  436143:	int3   
  436144:	leave  
  436145:	mov    bh,0xff
  436147:	inc    DWORD PTR [eax]
  436149:	jmp    FWORD PTR [ebx-0x1c]
  43614c:	inc    ebx
  43614d:	int3   
  43614e:	add    BYTE PTR [ebx-0x9ec544],al
  436154:	adc    BYTE PTR [esp+ecx*8],ch
  436157:	inc    DWORD PTR [ebx-0x4d8be400]
  43615d:	add    DWORD PTR [ebx-0xf27597d],0xffffffff
  436164:	inc    ecx
  436165:	add    BYTE PTR [ebx-0x100],al
  43616b:	add    DWORD PTR [eax],0x0
  43616e:	add    DWORD PTR [ebx+0xa0ffff],0x4
  436175:	loopne 0x4360ff
  436177:	add    ah,cl
  436179:	jmp    DWORD PTR [eax]
  43617b:	dec    DWORD PTR [esi]
  43617d:	pusha  
  43617e:	popf   
  43617f:	add    DWORD PTR [eax],0xffffffcc
  436182:	cld    
  436183:	adc    DWORD PTR [eax+ebx*8-0x7c0000b4],0x7d
  43618b:	add    BYTE PTR [esi+0xfffad6],cl
  436191:	add    BYTE PTR [edx-0x16cdc01],dl
  436197:	(bad)  
  436198:	inc    DWORD PTR [eax]
  43619a:	jmp    0xafc8759e
  43619f:	add    bh,bh
  4361a1:	dec    DWORD PTR [edi]
  4361a3:	add    BYTE PTR [ebx+eiz*2+0x79],bl
  4361a7:	inc    DWORD PTR [ebx-0x67fff301]
  4361ad:	ins    DWORD PTR es:[edi],dx
  4361ae:	mov    edi,0x89ffffff
  4361b3:	call   DWORD PTR [ecx]
  4361b5:	int    0x4f
  4361b7:	int3   
  4361b8:	(bad)  
  4361b9:	jmp    FWORD PTR [ecx+0x4cf87d83]
  4361bf:	add    bh,bh
  4361c1:	add    BYTE PTR [ebx-0x7d],bh
  4361c4:	jb     0x4361d6
  4361c6:	mov    WORD PTR [eax],es
  4361c8:	mov    esp,ecx
  4361ca:	outs   dx,BYTE PTR ds:[esi]
  4361cb:	int3   
  4361cc:	in     al,0x65
  4361ce:	rol    BYTE PTR [eax],1
  4361d0:	inc    DWORD PTR [ebx+0x39ed835b]
  4361d6:	inc    ebx
  4361d7:	inc    DWORD PTR [eax]
  4361d9:	jmp    DWORD PTR [esi]
  4361db:	jmp    FWORD PTR [esp+eax*1-0x6d]
  4361df:	add    DWORD PTR [eax],0xffffffff
  4361e2:	push   ebp
  4361e3:	add    dl,cl
  4361e5:	aad    0xce
  4361e7:	dec    DWORD PTR [ecx-0x5b006a01]
  4361ed:	in     eax,dx
  4361ee:	out    0x0,eax
  4361f0:	(bad)  
  4361f1:	jmp    DWORD PTR [eax-0x7d]
  4361f4:	and    ebx,eax
  4361f6:	in     al,0x83
  4361f8:	int3   
  4361f9:	jmp    FWORD PTR [ecx]
  4361fb:	add    BYTE PTR [edi+0xcc4f32],cl
  436201:	add    BYTE PTR [ecx+0x0],cl
  436204:	mov    ss,WORD PTR [esi]
  436206:	imul   eax,DWORD PTR [ebx+0x398300],0x80b1f6
  436210:	dec    esp
  436212:	retf   0xbdcc
  436215:	stc    
  436216:	loope  0x436218
  436218:	inc    DWORD PTR [eax]
  43621a:	jmp    0x43621c
  43621c:	sti    
  43621d:	pop    ebx
  43621e:	(bad)  
  43621f:	(bad)  
  436220:	inc    DWORD PTR [eax]
  436222:	inc    ecx
  436223:	add    BYTE PTR [ebp-0x3355e5],ah
  436229:	int3   
  43622a:	sbb    BYTE PTR [eax],al
  43622c:	call   0x8442ac6c
  436231:	int3   
  436232:	add    eax,DWORD PTR [eax]
  436234:	jno    0x43626e
  436236:	rol    DWORD PTR [ebx+0x8e83cc],0x9b
  43623d:	pop    ds
  43623e:	or     DWORD PTR [ecx+0x4affff],0xffffffe4
  436245:	mov    dh,0xc8
  436247:	(bad)  
  436248:	inc    DWORD PTR [eax]
  43624a:	push   0x5ecfc500
  43624f:	mov    DWORD PTR [ebx+0x37ccae83],eax
  436255:	out    0x25,al
  436257:	add    BYTE PTR [eax],al
  436259:	add    BYTE PTR [ecx],ch
  43625b:	push   DWORD PTR [ebx]
  43625d:	fcom   QWORD PTR [ebp-0x3cff0001]
  436263:	push   DWORD PTR [ebp+0x37]
  436266:	scas   al,BYTE PTR es:[edi]
  436267:	inc    DWORD PTR [eax]
  436269:	int3   
  43626a:	scas   al,BYTE PTR es:[edi]
  43626b:	add    BYTE PTR [edx+0x64],ah
  43626e:	bound  eax,QWORD PTR [ebx-0x76aa0001]
  436274:	mov    esi,DWORD PTR [edi]
  436276:	xchg   esi,eax
  436277:	inc    DWORD PTR [eax]
  436279:	int3   
  43627a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43627b:	inc    ebp
  43627d:	mov    ds:0xffffff96,eax
  436282:	and    edi,edi
  436284:	ss inc esp
  436286:	or     eax,0x2c0000ff
  43628b:	call   DWORD PTR [ebx-0xf]
  43628e:	xchg   edi,eax
  43628f:	inc    DWORD PTR [eax]
  436291:	call   FWORD PTR [edi-0x1]
  436294:	loop   0x4362d3
  436296:	stos   DWORD PTR es:[edi],eax
  436297:	(bad)  
  436298:	(bad)  
  436299:	jmp    FWORD PTR [edx-0x3c96e677]
  43629f:	or     esp,0x0
  4362a2:	icebp  
  4362a3:	jmp    DWORD PTR [eax]
  4362a5:	aam    0xcd
  4362a7:	add    DWORD PTR [ebx-0x3b764c01],0x7
  4362ae:	xor    BYTE PTR [eax],al
  4362b0:	add    bh,bh
  4362b2:	push   cs
  4362b3:	add    bl,bh
  4362b5:	push   ebx
  4362b6:	sti    
  4362b7:	add    BYTE PTR [ecx-0x4176c001],cl
  4362bd:	and    eax,DWORD PTR ds:0x6f00ff83
  4362c3:	(bad)  
  4362c4:	cld    
  4362c5:	mul    DWORD PTR [ebx]
  4362c7:	inc    DWORD PTR [eax]
  4362c9:	(bad)  
  4362ca:	in     al,dx
  4362cb:	add    cl,ah
  4362cd:	aad    0x2b
  4362cf:	inc    DWORD PTR [eax]
  4362d1:	add    bh,bl
  4362d3:	jmp    DWORD PTR [edx-0x7c3338e8]
  4362d9:	jmp    FWORD PTR [ecx+0x5af092ff]
  4362df:	(bad)  
  4362e0:	inc    DWORD PTR [eax]
  4362e2:	add    BYTE PTR [ebx-0x3e5d04],al
  4362e8:	add    ah,cl
  4362ea:	ud0    ebp,edi
  4362ed:	xor    ah,0xff
  4362f0:	add    bh,bh
  4362f2:	or     edi,edi
  4362f4:	mov    BYTE PTR [esi-0xffd9],bl
  4362fa:	pop    ss
  4362fb:	call   ecx
  4362fd:	pop    ds
  4362fe:	adc    eax,0x1eff0000
  436303:	add    BYTE PTR [ecx+ecx*1+0xffaa],ah
  43630a:	cmp    DWORD PTR [eax],eax
  43630c:	sub    bh,ch
  43630e:	add    BYTE PTR [eax],0x0
  436311:	or     DWORD PTR [edi],0x0
  436314:	inc    edx
  436315:	mov    ebp,0xffccffe3
  43631a:	leave  
  43631b:	or     DWORD PTR [eax-0xda41],0x0
  436322:	push   edi
  436323:	add    BYTE PTR [esi-0x63],dh
  436326:	dec    edi
  436327:	inc    DWORD PTR [ebx-0x637c8600]
  43632d:	test   eax,esi
  43632f:	add    bh,bh
  436331:	or     DWORD PTR [edx-0x7c562a77],0x0
  436338:	(bad)  
  436339:	dec    esi
  43633b:	sub    esp,0xffffff9a
  43633e:	add    bh,bh
  436340:	inc    DWORD PTR [eax]
  436342:	xchg   esi,eax
  436343:	mov    DWORD PTR [eax],ebx
  436345:	dec    esp
  436346:	into   
  436347:	inc    DWORD PTR [ebx+0x7e83e9ff]
  43634d:	pop    esp
  43634e:	xchg   ecx,eax
  43634f:	int3   
  436350:	add    bh,bh
  436352:	mov    bh,0xff
  436354:	xlat   BYTE PTR ds:[ebx]
  436355:	xor    al,0x45
  436357:	cmp    edi,0xffffffff
  43635a:	nop
  43635b:	jmp    DWORD PTR [ebp+ebp*2+0x27]
  43635f:	inc    DWORD PTR [eax]
  436361:	jmp    FWORD PTR [esi]
  436363:	add    BYTE PTR [ebx-0x7cff1eba],dh
  436369:	(bad)  
  43636a:	jmp    0x43636b
  43636c:	jecxz  0x4363a8
  43636e:	call   0xd600:0xdd00ccff
  436375:	fnstsw WORD PTR [edx-0x7d]
  436378:	int3   
  436379:	add    al,bh
  43637b:	jmp    edx
  43637d:	dec    edx
  43637e:	inc    edi
  43637f:	dec    DWORD PTR [ecx+0x2800fe83]
  436385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436386:	loop   0x436387
  436388:	mov    edi,edi
  43638a:	arpl   WORD PTR [ecx-0x7c7a6606],cx
  436390:	int3   
  436391:	add    BYTE PTR ds:0xcc3c2aff,ch
  436397:	int3   
  436398:	cmp    edi,0xffffffdb
  43639b:	add    al,bl
  43639d:	sub    al,0x90
  43639f:	add    bh,bh
  4363a1:	(bad)  
  4363a2:	jge    0x4363a3
  4363a4:	gs mov ah,0xc0
  4363a7:	inc    DWORD PTR [ebx-0x7c7c5100]
  4363ad:	mov    bh,0x86
  4363af:	(bad)  
  4363b0:	(bad)  
  4363b1:	(bad)  
  4363b2:	jl     0x4363b3
  4363b4:	out    0xd0,al
  4363b6:	pop    esp
  4363b7:	add    BYTE PTR [eax],al
  4363b9:	add    BYTE PTR [edx+0x21acf89],ch
  4363bf:	int3   
  4363c0:	or     esp,0x4b
  4363c3:	add    BYTE PTR [edi+edx*8],dl
  4363c6:	xchg   ebp,eax
  4363c7:	mov    edi,edi
  4363c9:	add    BYTE PTR [eax-0x1],bh
  4363cc:	or     eax,0xff002e6c
  4363d1:	add    bl,cl
  4363d3:	mov    DWORD PTR [eax+eax*2-0x6],edi
  4363da:	lahf   
  4363db:	jmp    FWORD PTR [ebp-0x1c]
  4363de:	in     eax,0x83
  4363e0:	inc    DWORD PTR [ebx-0x3769ffc5]
  4363e6:	clc    
  4363e7:	(bad)  
  4363e8:	inc    DWORD PTR [eax]
  4363ea:	add    al,0x0
  4363ec:	mov    al,fs:0xff83ffcb
  4363f2:	mov    ebx,0x34ea43ff
  4363f7:	dec    esp
  4363f9:	(bad)  
  4363fa:	cmp    edi,edi
  4363fc:	adc    eax,0xccff1be8
  436401:	inc    DWORD PTR [esi+0x48f91500]
  436407:	cmp    edi,0xffffffff
  43640a:	addr16 int3 
  43640c:	inc    ebp
  43640d:	ss pop edx
  43640f:	cmp    edi,0x0
  436412:	ds inc esp
  436415:	out    dx,eax
  436416:	fs (bad) 
  436418:	(bad)  
  436419:	inc    DWORD PTR [edx+0x0]
  43641c:	ja     0x4363f4
  43641e:	gs dec esp
  436421:	or     DWORD PTR [edx-0x3eb0f001],0xffffffff
  436428:	cmp    edi,0x2f
  43642b:	add    BYTE PTR [eax],cl
  43642d:	or     bl,BYTE PTR [esi-0x1]
  436430:	mov    edi,edi
  436432:	jno    0x436400
  436434:	pop    esi
  436435:	mov    cl,0xf0
  436437:	add    DWORD PTR [eax],0x0
  43643a:	xchg   ah,cl
  43643c:	jbe    0x43648b
  43643e:	inc    ebp
  43643f:	(bad)  
  436440:	dec    DWORD PTR [ecx-0x62907cdc]
  436446:	std    
  436447:	or     esp,0xffffffcc
  43644a:	mov    edi,?
  43644c:	push   cs
  43644d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43644e:	xor    eax,DWORD PTR [eax]
  436450:	cmp    edi,0xffffffbf
  436453:	push   DWORD PTR [ebp-0x72]
  436456:	rol    BYTE PTR [eax],0x89
  436459:	dec    edx
  43645b:	(bad)  
  43645c:	jl     0x4364b4
  43645e:	mov    ecx,0x69ffff00
  436463:	add    BYTE PTR [edi-0xffd219],dh
  436469:	add    BYTE PTR [edi+edi*8],cl
  43646c:	je     0x436413
  43646e:	push   ebp
  43646f:	inc    DWORD PTR [eax]
  436471:	call   FWORD PTR [esi-0x37e5f101]
  436477:	add    BYTE PTR [eax],al
  436479:	dec    DWORD PTR [edi-0x2fe73500]
  43647f:	dec    esp
  436481:	dec    DWORD PTR [eax]
  436483:	call   DWORD PTR [ecx]
  436485:	cmp    ch,ch
  436487:	inc    DWORD PTR [eax]
  436489:	(bad)  
  43648a:	jmp    0x43648b
  43648c:	imul   ecx,esp,0x89ff0077
  436492:	mov    DWORD PTR [eax],eax
  436494:	ret    
  436495:	jne    0x43647b
  436497:	add    ah,cl
  436499:	add    bh,cl
  43649b:	add    BYTE PTR [edi+ecx*4],ah
  43649e:	out    0x0,al
  4364a0:	add    bh,bh
  4364a2:	leave  
  4364a3:	add    BYTE PTR [eax-0x53],ch
  4364a6:	add    BYTE PTR fs:[ecx+0x65ff3700],cl
  4364ad:	xor    dl,cl
  4364af:	mov    esp,ecx
  4364b1:	int3   
  4364b2:	(bad)  
  4364b3:	jmp    FWORD PTR [eax-0x336063]
  4364b9:	jmp    FWORD PTR [edx+0x0]
  4364bc:	(bad)  
  4364bd:	mov    al,0x38
  4364bf:	add    bh,bh
  4364c1:	sub    DWORD PTR [ebx],0xffffffff
  4364c4:	sbb    ch,bh
  4364c6:	pop    DWORD PTR [eax]
  4364c8:	add    BYTE PTR [ebx+0x7d29838a],al
  4364ce:	inc    ebp
  4364cf:	add    BYTE PTR [ebx-0x2affaa01],al
  4364d5:	fdivr  st,st(5)
  4364d7:	inc    DWORD PTR [eax]
  4364d9:	mov    DWORD PTR [esi-0x38982200],eax
  4364df:	int3   
  4364e0:	add    bh,bh
  4364e2:	jp     0x4364e3
  4364e4:	mov    edx,DWORD PTR [ebx+0xff00eb]
  4364ea:	xchg   ecx,eax
  4364eb:	call   FWORD PTR [edx-0x7e]
  4364ee:	test   edi,edi
  4364f0:	(bad)  
  4364f1:	dec    DWORD PTR [edx-0x179a1201]
  4364f7:	cmp    edi,0xffffffff
  4364fa:	fild   WORD PTR [ebx+0x851ea5]
  436500:	int3   
  436501:	dec    DWORD PTR [ecx-0x1]
  436504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436505:	bound  ebp,QWORD PTR [edi+0xdff8300]
  43650b:	jmp    DWORD PTR [edi+0x5a]
  43650e:	add    BYTE PTR gs:[eax],al
  436511:	int3   
  436512:	cmp    DWORD PTR [eax],eax
  436514:	mov    ah,0x4f
  436516:	scas   al,BYTE PTR es:[edi]
  436517:	(bad)  
  436518:	(bad)  
  436519:	inc    DWORD PTR [ecx-0x47203600]
  43651f:	mov    esp,ecx
  436521:	dec    DWORD PTR ds:0xa2e80700
  436527:	(bad)  
  436528:	inc    DWORD PTR [ebx-0x549b00f3]
  43652e:	mov    dh,0x83
  436530:	add    bh,bh
  436532:	pop    edx
  436533:	push   DWORD PTR [ebp-0x3aa]
  436539:	call   DWORD PTR [edx+0x0]
  43653c:	xchg   DWORD PTR [edi+edx*2+0x218900ff],eax
  436543:	jmp    ebp
  436545:	fdivr  QWORD PTR [edi+0x12ff0083]
  43654b:	add    dl,bl
  43654d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43654e:	jmp    0xbe89:0x190000ff
  436555:	sub    eax,0xcc8900ff
  43655a:	push   ecx
  43655b:	(bad)  
  43655c:	fcomip st,st(7)
  43655e:	xchg   edi,eax
  43655f:	add    BYTE PTR [ebx-0x617c6c01],al
  436565:	hlt    
  436566:	int3   
  436567:	dec    DWORD PTR [ecx+0x10007bff]
  43656d:	(bad)  [esi+0x64ff0089]
  436573:	call   FWORD PTR [ecx]
  436575:	cmp    BYTE PTR [eax+eax*1+0x0],bh
  436579:	add    BYTE PTR [edx-0x72278801],al
  43657f:	cmp    edi,0xffffffcc
  436582:	push   edx
  436583:	add    bh,ch
  436585:	retf   
  436586:	push   edi
  436587:	add    bh,bh
  436589:	(bad)  
  43658a:	jl     0x43658c
  43658c:	jmp    0x4365f1
  43658e:	lock inc DWORD PTR [ebx-0x56008400]
  436595:	icebp  
  436596:	pop    ebp
  436597:	(bad)  
  436598:	inc    DWORD PTR [eax]
  43659a:	fwait
  43659b:	add    BYTE PTR [eax+0x40],dl
  43659e:	mov    ah,0xcc
  4365a0:	add    BYTE PTR [eax],al
  4365a2:	mov    BYTE PTR [eax],al
  4365a4:	leave  
  4365a5:	sbb    eax,0x83ff02
  4365aa:	aam    0x0
  4365ac:	or     eax,0xa24
  4365b1:	jmp    DWORD PTR [edi+edi*8]
  4365b4:	stos   DWORD PTR es:[edi],eax
  4365b5:	ja     0x4365c5
  4365b7:	add    BYTE PTR [eax],al
  4365b9:	jmp    DWORD PTR [ecx]
  4365bb:	add    BYTE PTR [edx+esi*8-0x7cffff0b],ch
  4365c2:	add    eax,0x4c3d78ff
  4365c7:	add    bh,bh
  4365c9:	int3   
  4365ca:	push   ebx
  4365cb:	add    BYTE PTR [eax+0x70],cl
  4365ce:	mov    cl,0x83
  4365d0:	(bad)  
  4365d1:	dec    DWORD PTR [edx-0x77]
  4365d4:	mov    eax,ds:0x83ffa7da
  4365d9:	call   ecx
  4365db:	add    DWORD PTR [ebp+0x50],0x27
  4365df:	add    bh,bh
  4365e1:	call   FWORD PTR [edx+0x4e185e00]
  4365e7:	inc    DWORD PTR [eax]
  4365e9:	sbb    DWORD PTR [ecx-0x1],0xffffffe9
  4365ed:	fwait
  4365ee:	cmp    DWORD PTR [eax],eax
  4365f0:	(bad)  
  4365f1:	call   FWORD PTR [ecx-0x1]
  4365f4:	lods   al,BYTE PTR ds:[esi]
  4365f5:	ins    BYTE PTR es:[edi],dx
  4365f6:	jne    0x4365f7
  4365f8:	(bad)  
  4365f9:	(bad)  
  4365fa:	cmp    eax,0xc282983
  4365ff:	mov    DWORD PTR [eax],eax
  436601:	add    BYTE PTR [eax+eax*1-0x76d04e52],bh
  436608:	inc    DWORD PTR [eax]
  43660a:	push   ss
  43660b:	adc    DWORD PTR ds:0xff89896f,0xffffff83
  436612:	retf   
  436613:	jmp    ecx
  436615:	push   es
  436616:	sar    bh,cl
  436618:	inc    DWORD PTR [eax]
  43661a:	mov    al,0x83
  43661c:	sub    eax,0xffca8d
  436621:	call   DWORD PTR [esp+ecx*8+0xf92d07]
  436628:	(bad)  
  436629:	jmp    FWORD PTR [ecx-0x1b3e6401]
  43662f:	inc    DWORD PTR [eax]
  436631:	dec    DWORD PTR [esi+0x2ca11d83]
  436637:	inc    DWORD PTR [eax]
  436639:	add    bl,ch
  43663b:	int3   
  43663c:	sub    dh,ch
  43663e:	push   edx
  43663f:	(bad)  
  436640:	inc    DWORD PTR [eax]
  436642:	adc    BYTE PTR [eax],al
  436644:	cli    
  436645:	fsub   st(5),st
  436647:	inc    DWORD PTR [eax]
  436649:	(bad)  
  43664a:	cmp    edi,edi
  43664c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43664d:	(bad)  
  43664e:	outs   dx,DWORD PTR ds:[esi]
  43664f:	add    BYTE PTR [ebx+0x18ff91ff],al
  436655:	aas    
  436656:	fild   WORD PTR [eax]
  436658:	int3   
  436659:	jmp    edi
  43665b:	sub    DWORD PTR [esi-0x48],0xfffffff0
  43665f:	(bad)  
  436660:	inc    DWORD PTR [ebx-0x42cfff24]
  436666:	mov    dh,0x83
  436668:	add    BYTE PTR [ecx-0xef50090],cl
  43666e:	sbb    ah,cl
  436670:	mov    DWORD PTR [ebx-0x37f6005c],eax
  436676:	add    BYTE PTR fs:[eax],al
  436679:	call   eax
  43667b:	inc    DWORD PTR [ebx]
  43667d:	push   ecx
  43667e:	fwait
  43667f:	add    DWORD PTR [eax],0xffffffff
  436682:	inc    edi
  436683:	call   DWORD PTR [ecx+0xf31c]
  436689:	inc    DWORD PTR [eax-0x34]
  43668c:	mov    cl,ch
  43668e:	loope  0x43668f
  436690:	inc    DWORD PTR [eax]
  436692:	sbb    DWORD PTR [eax],eax
  436694:	add    eax,0xffc57f
  436699:	jmp    FWORD PTR [ecx-0x1]
  43669c:	ds mov esp,0xff00ff05
  4366a2:	push   es
  4366a3:	or     DWORD PTR [ebx-0xff3f22],0xffffffcc
  4366aa:	sbb    eax,DWORD PTR [eax]
  4366ac:	(bad)  
  4366ad:	iret   
  4366ae:	add    edi,edi
  4366b0:	dec    esp
  4366b2:	cmp    bh,0xb6
  4366b5:	popa   
  4366b6:	lods   al,BYTE PTR ds:[esi]
  4366b7:	cmp    edi,0xffffff89
  4366ba:	push   ds
  4366bb:	add    BYTE PTR [ecx],bh
  4366bd:	sub    al,BYTE PTR es:[ebx+0x24cc83]
  4366c4:	cdq    
  4366c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4366c6:	outs   dx,DWORD PTR ds:[esi]
  4366c7:	inc    DWORD PTR [ebx+0x51ffdaff]
  4366cd:	jns    0x4366c3
  4366cf:	add    bh,bh
  4366d1:	(bad)  
  4366d2:	inc    DWORD PTR [eax]
  4366d4:	pop    ds
  4366d5:	mov    esp,0x83ffff60
  4366da:	in     eax,0xff
  4366dc:	aam    0x96
  4366de:	dec    ebp
  4366df:	inc    DWORD PTR [eax]
  4366e1:	add    BYTE PTR [ecx+0x7c362689],bl
  4366e7:	inc    DWORD PTR [eax]
  4366e9:	add    BYTE PTR [edx+0x0],ah
  4366ec:	pop    esi
  4366ed:	xchg   DWORD PTR [edi+0xfccccff],ecx
  4366f3:	push   ebp
  4366f5:	jbe    0x43672a
  4366f7:	mov    DWORD PTR [eax],eax
  4366f9:	add    BYTE PTR [eax+0x502b8400],dl
  4366ff:	add    bh,bh
  436701:	jmp    DWORD PTR [ecx+0x257b9d83]
  436707:	add    BYTE PTR [eax],al
  436709:	(bad)  
  43670a:	fadd   QWORD PTR [eax]
  43670c:	ins    BYTE PTR es:[edi],dx
  43670d:	stos   BYTE PTR es:[edi],al
  43670e:	and    eax,DWORD PTR [eax]
  436710:	add    bh,bh
  436712:	xchg   DWORD PTR [eax],eax
  436714:	mov    DWORD PTR [edi],eax
  436716:	xor    DWORD PTR [ebx-0x33370001],eax
  43671c:	mov    eax,eax
  43671e:	sbb    al,0x0
  436720:	add    bh,bh
  436722:	jg     0x436723
  436724:	loop   0x436777
  436726:	nop
  436727:	inc    DWORD PTR [eax]
  436729:	int3   
  43672a:	dec    DWORD PTR [bp+si]
  43672d:	arpl   WORD PTR [ebx-0x2000007d],cx
  436733:	mov    DWORD PTR [ecx+0x6d],esi
  436736:	sbb    BYTE PTR [eax],al
  436738:	inc    DWORD PTR [eax]
  43673a:	sub    al,0x0
  43673c:	pop    ss
  43673d:	push   edx
  43673e:	add    edi,edi
  436740:	add    bh,bh
  436742:	adc    edi,edi
  436744:	(bad)  
  436745:	shl    BYTE PTR [esi+0x0],cl
  436748:	inc    DWORD PTR [eax]
  43674a:	or     edi,edi
  43674c:	iret   
  43674d:	push   ebx
  43674e:	(bad)  
  43674f:	(bad)  
  436750:	inc    DWORD PTR [eax]
  436752:	pop    ebp
  436753:	mov    DWORD PTR [edx],eax
  436755:	sbb    dl,BYTE PTR [ebx-0x1]
  436758:	add    BYTE PTR [ebx-0x82d7cb7],al
  43675e:	in     al,0xff
  436760:	cmp    edi,0x5a
  436763:	sub    DWORD PTR [edi],0x4b
  436766:	es add bh,bh
  436769:	mov    DWORD PTR [esi],eax
  43676b:	jmp    DWORD PTR [ebx-0xff1495]
  436771:	(bad)  
  436772:	jl     0x4366fd
  436774:	les    ebp,FWORD PTR [edx-0x7c007c1f]
  43677a:	push   0xffffffff
  43677c:	icebp  
  43677d:	jno    0x43673b
  43677f:	add    DWORD PTR [ebx-0x3a00e000],0xffffffc4
  436786:	sub    eax,0xc8ff0083
  43678b:	push   DWORD PTR [esi+ebp*2-0x76f8]
  436792:	xchg   ecx,eax
  436793:	jmp    esi
  436795:	mov    bh,0xbb
  436797:	(bad)  
  436798:	(bad)  
  436799:	call   FWORD PTR [edx-0x49c57401]
  43679f:	mov    DWORD PTR [ecx+0x3e83c000],ecx
  4367a5:	and    BYTE PTR [edx+0x0],cl
  4367a8:	add    bh,bh
  4367aa:	add    eax,0xfde30983
  4367af:	add    BYTE PTR [eax],al
  4367b1:	int3   
  4367b2:	pushf  
  4367b3:	add    cl,bl
  4367b5:	jo     0x436795
  4367b7:	add    BYTE PTR [eax],al
  4367b9:	jmp    DWORD PTR [edi+edi*8-0x7c6eef83]
  4367c0:	inc    DWORD PTR [eax]
  4367c2:	add    BYTE PTR [ebx-0x7c5e8aae],0xff
  4367c9:	(bad)  
  4367ca:	jl     0x4367cb
  4367cc:	js     0x4367b6
  4367ce:	or     DWORD PTR [ecx+0x97ffff],0x8994a76d
  4367d8:	int3   
  4367d9:	add    BYTE PTR [ebp-0x1],dh
  4367dc:	fstp   TBYTE PTR [ebx+0xff0009]
  4367e2:	lahf   
  4367e3:	push   ebp
  4367e5:	ins    BYTE PTR es:[edi],dx
  4367e6:	out    0x0,al
  4367e8:	add    bh,bh
  4367ea:	xchg   esi,eax
  4367eb:	add    BYTE PTR [ebx],dh
  4367ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4367ee:	popf   
  4367ef:	inc    DWORD PTR [eax]
  4367f1:	inc    DWORD PTR [esi]
  4367f3:	add    BYTE PTR [eax-0x7c00fe11],dh
  4367f9:	add    bh,dh
  4367fb:	and    DWORD PTR [esi-0x90c8],0x0
  436802:	dec    edx
  436803:	jmp    DWORD PTR [ecx+0xff5774]
  436809:	dec    eax
  43680b:	inc    DWORD PTR [ecx+0x35]
  43680e:	inc    edx
  43680f:	dec    DWORD PTR [ecx+0x1b002ccc]
  436815:	push   cs
  436816:	jae    0x436818
  436818:	add    DWORD PTR [ebx-0x1768ff76],0xd
  43681f:	add    bh,bh
  436821:	xor    DWORD PTR [ebp-0x7403cb77],0x0
  436828:	(bad)  
  436829:	call   FWORD PTR [eax-0x1]
  43682c:	cmp    eax,0xff898d5e
  436831:	push   ebp
  436833:	add    ah,bl
  436835:	aas    
  436836:	push   esi
  436837:	add    bh,bh
  436839:	(bad)  
  43683a:	jns    0x4367c5
  43683c:	pop    ecx
  43683d:	adc    esp,DWORD PTR [ebx+0x0]
  436840:	inc    DWORD PTR [ebx+0x7aa5ffae]
  436846:	adc    edi,edi
  436848:	inc    DWORD PTR [eax]
  43684a:	push   0x7b1f3483
  43684f:	mov    DWORD PTR [eax],eax
  436851:	add    dh,dh
  436853:	dec    DWORD PTR [ebx-0x21]
  436856:	cdq    
  436857:	(bad)  
  436858:	(bad)  
  436859:	(bad)  
  43685a:	jl     0x43685b
  43685c:	mov    bl,0xc5
  43685e:	push   esp
  43685f:	or     DWORD PTR [ecx-0x71ff2f01],0xfffffffc
  436866:	xor    al,0xff
  436868:	(bad)  
  436869:	call   FWORD PTR [ebp-0x1]
  43686c:	xchg   ebx,eax
  43686d:	xor    ah,BYTE PTR [edx-0x1]
  436870:	int3   
  436871:	push   DWORD PTR [edi]
  436873:	adc    DWORD PTR [ecx-0x7600f5cd],0xffffffff
  43687a:	cmc    
  43687b:	call   FWORD PTR [edi]
  43687d:	jecxz  0x43687c
  43687f:	add    bh,bh
  436881:	add    bl,cl
  436883:	(bad)  
  436884:	mov    ebp,0xffffb357
  436889:	add    BYTE PTR [ebx],dh
  43688b:	add    dh,cl
  43688d:	push   ecx
  43688e:	pop    eax
  43688f:	or     esp,0xffffff83
  436892:	dec    ebp
  436893:	mov    DWORD PTR [ebp-0x33767c0a],esi
  436899:	call   FWORD PTR [eax+eax*1-0xb71d6]
  4368a0:	add    BYTE PTR [ecx+0x54ccff66],cl
  4368a6:	adc    edi,edi
  4368a8:	add    bh,bh
  4368aa:	jns    0x43682f
  4368ac:	or     ah,BYTE PTR [ebx]
  4368ae:	in     eax,dx
  4368af:	(bad)  
  4368b0:	inc    DWORD PTR [eax]
  4368b2:	retf   0x8d00
  4368b5:	pop    es
  4368b6:	cmp    al,BYTE PTR [eax]
  4368b8:	mov    edi,edi
  4368ba:	stos   DWORD PTR es:[edi],eax
  4368bb:	call   eax
  4368bd:	jmp    0xffc73547
  4368c2:	call   0xffff:0xa57c96cc
  4368c9:	add    BYTE PTR [edi+edi*8-0x3b],dl
  4368cd:	or     eax,0x830000dd
  4368d2:	out    dx,al
  4368d3:	(bad)  
  4368d4:	cmp    al,0x80
  4368d6:	imul   edi,edi,0x83bcff89
  4368dc:	xchg   edx,eax
  4368dd:	lahf   
  4368de:	test   DWORD PTR [eax],eax
  4368e0:	add    bh,bh
  4368e2:	jb     0x4368e3
  4368e4:	lods   eax,DWORD PTR ds:[esi]
  4368e5:	pop    ecx
  4368e6:	ror    DWORD PTR [ecx-0x33d30001],cl
  4368ec:	dec    ecx
  4368ed:	jae    0x4368e8
  4368ef:	add    DWORD PTR [ebx-0x4a7c7800],0x2c
  4368f6:	fiadd  WORD PTR [eax]
  4368f8:	add    BYTE PTR [eax],al
  4368fa:	jge    0x4368fc
  4368fc:	add    BYTE PTR [ebp-0x24],ah
  4368ff:	(bad)  
  436900:	inc    DWORD PTR [eax]
  436902:	jbe    0x436904
  436904:	cmc    
  436905:	in     al,dx
  436906:	mov    eax,0x99ff0083
  43690b:	dec    DWORD PTR [ebx+0xffd610]
  436911:	call   DWORD PTR [edx-0x4b387e77]
  436917:	inc    DWORD PTR [eax]
  436919:	int3   
  43691a:	jne    0x43691c
  43691c:	mov    bh,0x68
  43691e:	ins    BYTE PTR es:[edi],dx
  43691f:	inc    DWORD PTR [eax]
  436921:	add    BYTE PTR [eax-0x7d],bh
  436924:	jbe    0x4368f9
  436926:	jns    0x4368f4
  436928:	add    BYTE PTR [eax],al
  43692a:	add    eax,0xfa706bcc
  43692f:	dec    DWORD PTR [ecx-0x6f00d734]
  436935:	into   
  436936:	icebp  
  436937:	inc    DWORD PTR [eax]
  436939:	mov    DWORD PTR [esi-0x1],edi
  43693c:	pop    ebx
  43693d:	in     eax,dx
  43693e:	inc    ebx
  43693f:	mov    DWORD PTR [eax],eax
  436941:	(bad)  
  436942:	fcmovne st,st(4)
  436944:	rcr    DWORD PTR [edx-0xffffaf],0xba
  43694b:	add    bh,bh
  43694d:	mov    al,ds:0xc9ff00ff
  436953:	add    BYTE PTR [esi+edx*8],bh
  436956:	mov    bl,0xff
  436958:	int3   
  436959:	call   DWORD PTR [ebx+0x0]
  43695c:	sahf   
  43695d:	clc    
  43695e:	mov    cl,0xff
  436960:	inc    DWORD PTR [ebx-0x263fff4c]
  436966:	test   eax,0x1effccff
  43696b:	dec    DWORD PTR ds:0xff0037a9
  436971:	jmp    DWORD PTR [edi+0x720c5eff]
  436977:	int3   
  436978:	add    ah,cl
  43697a:	push   ebx
  43697b:	inc    DWORD PTR [esi+0x62]
  43697e:	popa   
  43697f:	(bad)  
  436980:	inc    DWORD PTR [eax]
  436982:	xchg   ebx,eax
  436983:	(bad)  
  436984:	cli    
  436985:	mov    ah,0x56
  436987:	add    bh,bh
  436989:	sbb    edx,0x0
  43698c:	in     eax,dx
  43698d:	mov    ah,0x8
  43698f:	inc    DWORD PTR [ebx+0x12ff73ff]
  436995:	je     0x4369f4
  436997:	int3   
  436998:	int3   
  436999:	add    BYTE PTR [edi-0x1],cl
  43699c:	push   esi
  43699d:	jns    0x436a06
  43699f:	(bad)  
  4369a0:	(bad)  
  4369a1:	call   FWORD PTR [ebx+0x0]
  4369a4:	mov    edi,0xffff9b77
  4369a9:	add    BYTE PTR [edx],bl
  4369ab:	jmp    FWORD PTR [esi+0x4e]
  4369ae:	pop    ecx
  4369af:	int3   
  4369b0:	(bad)  
  4369b1:	(bad)  
  4369b2:	jmp    0x43693d
  4369b4:	ret    0x16bd
  4369b7:	dec    DWORD PTR [ecx-0x35009000]
  4369bd:	pop    esi
  4369be:	sbb    DWORD PTR [ebx-0x313400],eax
  4369c4:	out    0x3a,al
  4369c6:	jmp    0x731068cb
  4369cb:	mov    DWORD PTR [ecx+0x6a],ebp
  4369ce:	mov    al,0xff
  4369d0:	dec    esp
  4369d2:	inc    ecx
  4369d3:	mov    DWORD PTR [ebx+0xff5e60],ebp
  4369d9:	xor    DWORD PTR [esi-0x34],0x61
  4369dd:	xor    BYTE PTR [edi+edi*8-0x2e0034],0x33
  4369e5:	(bad)  
  4369e6:	arpl   WORD PTR [eax],ax
  4369e8:	(bad)  
  4369e9:	dec    ebp
  4369eb:	add    BYTE PTR [eax-0x7ca8a0],al
  4369f1:	int3   
  4369f2:	mov    al,0xff
  4369f4:	mov    esp,0xffff4744
  4369f9:	mov    DWORD PTR [edx-0x1],eax
  4369fc:	dec    ebp
  4369fd:	retf   
  4369fe:	test   BYTE PTR [eax],al
  436a00:	int3   
  436a01:	jmp    FWORD PTR [esi]
  436a03:	mov    ebx,edi
  436a05:	lahf   
  436a06:	mov    al,0x0
  436a08:	add    BYTE PTR [ecx-0x4d7fffb6],cl
  436a0e:	inc    eax
  436a0f:	(bad)  
  436a10:	inc    DWORD PTR [ebx-0x49cb7c1d]
  436a16:	mov    esi,0xafff8900
  436a1b:	push   DWORD PTR [edx-0x2]
  436a1e:	cmp    BYTE PTR [eax],al
  436a20:	inc    DWORD PTR [eax]
  436a22:	and    DWORD PTR [eax],eax
  436a24:	xchg   edx,eax
  436a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436a26:	mov    esp,0x33ff83ff
  436a2b:	mov    DWORD PTR [edi],eax
  436a2d:	or     dh,BYTE PTR [edi+edi*8]
  436a30:	add    BYTE PTR [eax],al
  436a32:	jle    0x4369b7
  436a34:	test   DWORD PTR [edx+ebp*8],esp
  436a37:	int3   
  436a38:	inc    DWORD PTR [eax]
  436a3a:	mov    edi,edi
  436a3c:	mov    eax,ds:0xff8339b6
  436a41:	mov    DWORD PTR [ebp-0x1],eax
  436a44:	out    dx,al
  436a45:	pop    edx
  436a46:	inc    esp
  436a47:	inc    DWORD PTR [eax]
  436a49:	call   ebp
  436a4b:	add    BYTE PTR [ebp-0xb2f6],dh
  436a51:	int3   
  436a52:	leave  
  436a53:	int3   
  436a54:	call   0x4acc:0xffff326f
  436a5b:	add    al,bh
  436a5d:	in     eax,0x58
  436a5f:	dec    esp
  436a61:	mov    esi,ebx
  436a63:	int3   
  436a64:	das    
  436a65:	es inc DWORD PTR gs:[eax]
  436a69:	add    BYTE PTR [edi],cl
  436a6b:	jmp    DWORD PTR [edi-0x12]
  436a6e:	dec    eax
  436a6f:	inc    DWORD PTR [eax]
  436a71:	(bad)  
  436a72:	fdiv   st(7),st
  436a74:	inc    edx
  436a75:	sub    BYTE PTR [ebp-0x7d],cl
  436a78:	add    bh,bh
  436a7a:	and    BYTE PTR [eax],al
  436a7c:	fwait
  436a7d:	out    dx,eax
  436a7e:	xchg   edx,eax
  436a7f:	add    ah,cl
  436a81:	add    BYTE PTR [edi],cl
  436a83:	add    BYTE PTR ds:0xffffc47e,cl
  436a89:	add    ch,dl
  436a8b:	adc    DWORD PTR [ecx],0x7a
  436a8e:	push   ebp
  436a8f:	(bad)  
  436a90:	inc    DWORD PTR [eax]
  436a92:	lods   eax,DWORD PTR ds:[esi]
  436a93:	add    BYTE PTR [esi],bh
  436a95:	lods   eax,DWORD PTR ds:[esi]
  436a96:	dec    ebp
  436a97:	dec    DWORD PTR [ecx-0x7e003600]
  436a9d:	add    esi,DWORD PTR [ebx+0x0]
  436aa0:	inc    DWORD PTR [eax]
  436aa2:	mov    eax,ds:0x71983cff
  436aa7:	or     esp,0x0
  436aaa:	add    bh,bh
  436aac:	nop
  436aad:	or     eax,0xff83cce7
  436ab2:	cmp    edi,edi
  436ab4:	pushf  
  436ab5:	popa   
  436ab6:	loop   0x436a3b
  436ab8:	or     DWORD PTR [ecx-0x6de800de],0x59
  436abf:	add    bh,bh
  436ac1:	(bad)  
  436ac2:	js     0x436ac3
  436ac4:	gs xchg ebp,eax
  436ac6:	mov    al,ds:0xa700ff83
  436acb:	jmp    DWORD PTR [eax+0x8325e2]
  436ad1:	add    al,dl
  436ad3:	call   ebp
  436ad5:	inc    ebx
  436ad6:	hlt    
  436ad7:	int3   
  436ad8:	(bad)  
  436ad9:	jmp    DWORD PTR [esp+ecx*8-0x76cc1dab]
  436ae0:	add    DWORD PTR [ebx-0x62bdffbe],0xffffff91
  436ae7:	int3   
  436ae8:	inc    DWORD PTR [ebx-0x31dc0002]
  436aee:	push   0xfccccc00
  436af3:	jmp    DWORD PTR [edi]
  436af5:	jo     0x436aa2
  436af7:	int3   
  436af8:	dec    esp
  436afa:	push   edi
  436afb:	(bad)  
  436afc:	cmp    BYTE PTR [ecx-0x7c00ff75],ah
  436b02:	cmp    BYTE PTR [ebx-0xd16d8e],al
  436b08:	add    bh,bh
  436b0a:	cmp    DWORD PTR [eax],eax
  436b0c:	int3   
  436b0d:	sub    DWORD PTR [ebp-0x7d],esp
  436b10:	(bad)  
  436b11:	call   DWORD PTR [edx+0x0]
  436b14:	int    0x5b
  436b16:	inc    esi
  436b17:	(bad)  
  436b18:	inc    DWORD PTR [eax]
  436b1a:	mov    ecx,0x5e9b3000
  436b1f:	dec    esp
  436b21:	call   FWORD PTR [ebx+eax*4-0xc16bc2]
  436b28:	mov    DWORD PTR [eax],eax
  436b2a:	scas   al,BYTE PTR es:[edi]
  436b2b:	inc    DWORD PTR [eax-0x48]
  436b2e:	mov    edi,edi
  436b30:	(bad)  
  436b31:	jmp    FWORD PTR [edi+edi*8+0x37]
  436b35:	out    dx,eax
  436b36:	in     eax,0x83
  436b38:	dec    esp
  436b3a:	mov    bh,bh
  436b3c:	add    al,0xa8
  436b3e:	iret   
  436b3f:	dec    DWORD PTR [ecx-0x7e7ce400]
  436b45:	sar    BYTE PTR [edi],0xcc
  436b48:	inc    DWORD PTR [eax]
  436b4a:	mov    esi,0x8d9ee9ff
  436b4f:	inc    DWORD PTR [eax]
  436b51:	jmp    FWORD PTR [eax-0x20539877]
  436b57:	int3   
  436b58:	mov    DWORD PTR [eax],eax
  436b5a:	in     al,0xff
  436b5c:	rcr    BYTE PTR [edx-0x26],0x83
  436b60:	dec    DWORD PTR [ecx-0x8b7ffba]
  436b66:	sar    bh,1
  436b68:	cmp    edi,0xffffffb0
  436b6b:	mov    esp,edx
  436b6d:	out    dx,eax
  436b6e:	outs   dx,BYTE PTR ds:[esi]
  436b6f:	inc    DWORD PTR [eax]
  436b71:	int3   
  436b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436b73:	int3   
  436b74:	and    BYTE PTR [esp+ecx*8+0x0],dl
  436b78:	mov    DWORD PTR [ebx-0x46af00a2],eax
  436b7e:	mov    ch,0x0
  436b80:	add    BYTE PTR [ecx+0x5a1d8948],cl
  436b86:	pop    ebp
  436b87:	(bad)  
  436b88:	(bad)  
  436b89:	push   ebx
  436b8b:	inc    DWORD PTR [esi]
  436b8d:	ror    BYTE PTR ds:0x7838300,cl
  436b93:	call   FWORD PTR [edx-0x70]
  436b96:	pop    ecx
  436b97:	add    bh,bh
  436b99:	push   DWORD PTR [esi]
  436b9b:	add    BYTE PTR [esi-0x3f],dh
  436b9e:	jno    0x436ba0
  436ba0:	add    bh,bh
  436ba2:	out    dx,eax
  436ba3:	inc    DWORD PTR [eax]
  436ba5:	mov    ecx,0xffffff33
  436baa:	cmp    bh,bh
  436bac:	sbb    eax,0xffffa6a2
  436bb1:	and    DWORD PTR [ebx-0x75eabb01],0xffffff83
  436bb8:	inc    DWORD PTR [eax]
  436bba:	jne    0x436bbb
  436bbc:	and    ecx,DWORD PTR [ebp-0x33003398]
  436bc2:	push   edx
  436bc3:	(bad)  
  436bc4:	cld    
  436bc5:	and    BYTE PTR [edi+0x5a00cc00],bl
  436bcb:	int3   
  436bcc:	fdivr  st,st(7)
  436bce:	xchg   ebp,eax
  436bcf:	(bad)  
  436bd0:	inc    DWORD PTR [ebx+0x26c8004c]
  436bd6:	fild   WORD PTR [ebx-0x6eff77]
  436bdc:	adc    esi,DWORD PTR [ecx-0x8]
  436bdf:	(bad)  
  436be0:	(bad)  
  436be1:	(bad)  
  436be2:	jmp    0xad92eeb3
  436be7:	(bad)  
  436be8:	(bad)  
  436be9:	jmp    FWORD PTR [esi+0x333fdcff]
  436bef:	inc    DWORD PTR [eax]
  436bf1:	(bad)  
  436bf2:	std    
  436bf3:	dec    edx
  436bf5:	mov    eax,ds:0x8972
  436bfa:	ins    DWORD PTR es:[edi],dx
  436bfb:	mov    DWORD PTR [edi],esi
  436bfd:	ffree  st(3)
  436bff:	inc    DWORD PTR [eax]
  436c01:	jmp    DWORD PTR [edx+0x82fb7ff]
  436c07:	add    bh,bh
  436c09:	push   DWORD PTR ds:0xcbc946cc
  436c0f:	add    bh,bh
  436c11:	add    BYTE PTR [edi+0x0],cl
  436c14:	fwait
  436c15:	data16 mov dl,0x89
  436c18:	cmp    edi,0x6
  436c1b:	(bad)  
  436c1c:	out    dx,eax
  436c1d:	ins    DWORD PTR es:[edi],dx
  436c1e:	push   ecx
  436c1f:	int3   
  436c20:	dec    esp
  436c22:	cdq    
  436c23:	jmp    DWORD PTR [ecx]
  436c25:	xchg   BYTE PTR [esi+0x67cc83ff],ah
  436c2b:	int3   
  436c2c:	(bad)  
  436c2d:	pop    eax
  436c2e:	pop    ebx
  436c2f:	add    ah,cl
  436c31:	(bad)  
  436c32:	mov    eax,0x3ae1fc83
  436c37:	add    BYTE PTR [eax],al
  436c39:	dec    DWORD PTR [ecx-0x7d]
  436c3c:	fild   QWORD PTR [edx+0xccff54]
  436c42:	les    eax,FWORD PTR [ebx+0xad2c9d]
  436c48:	cmp    edi,0x53
  436c4b:	(bad)  
  436c4c:	jns    0x436c4c
  436c4e:	sar    edi,cl
  436c50:	add    DWORD PTR [eax],0xffffffca
  436c53:	jmp    DWORD PTR [edx+0xff409d]
  436c59:	call   DWORD PTR [eax-0x56700334]
  436c5f:	inc    DWORD PTR [ebx-0x7a009300]
  436c65:	push   ss
  436c66:	inc    BYTE PTR [ebx+0xd1ffcc]
  436c6c:	mov    ah,bh
  436c6e:	pusha  
  436c6f:	inc    DWORD PTR [ebx-0x49001700]
  436c75:	inc    esi
  436c76:	(bad)  
  436c77:	(bad)  
  436c78:	(bad)  
  436c79:	dec    DWORD PTR [eax-0x73c30177]
  436c7f:	inc    DWORD PTR [ebx-0x68ffc801]
  436c85:	nop
  436c86:	sti    
  436c87:	add    BYTE PTR [eax],al
  436c89:	jmp    DWORD PTR [ebx+0x6f12eeff]
  436c8f:	(bad)  
  436c90:	(bad)  
  436c91:	jmp    FWORD PTR [ebx-0x7d]
  436c94:	mov    bh,0x48
  436c96:	push   edx
  436c97:	add    bh,bh
  436c99:	add    BYTE PTR [eax+eax*1+0x2b],dl
  436c9d:	rcr    DWORD PTR [eax+eax*1-0x76cf7d00],cl
  436ca4:	addr16 rcr edi,0xff
  436ca8:	add    bh,bh
  436caa:	enter  0x21ff,0xc
  436cae:	data16 int3 
  436cb0:	add    BYTE PTR [eax],al
  436cb2:	and    DWORD PTR [eax],eax
  436cb4:	jle    0x436d05
  436cb6:	adc    bh,bh
  436cb8:	int3   
  436cb9:	int3   
  436cba:	add    edi,edi
  436cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436cbd:	xchg   edi,eax
  436cbe:	add    al,0x0
  436cc0:	dec    esp
  436cc2:	add    esp,ecx
  436cc4:	sub    al,0x5e
  436cc6:	sbb    edi,edi
  436cc8:	inc    DWORD PTR [eax]
  436cca:	xor    eax,DWORD PTR [eax]
  436ccc:	xor    eax,0xccff0c76
  436cd1:	sbb    DWORD PTR [edi+edi*8+0x3],0x24
  436cd6:	ret    
  436cd7:	add    BYTE PTR [eax],al
  436cd9:	int3   
  436cda:	inc    ebp
  436cdb:	int3   
  436cdc:	xlat   BYTE PTR ds:[ebx]
  436cdd:	fsub   QWORD PTR [ecx-0x39000001]
  436ce3:	push   DWORD PTR ds:0x89ff218f
  436ce9:	inc    DWORD PTR [ebp+0x4e2677ff]
  436cef:	inc    DWORD PTR [eax]
  436cf1:	jmp    FWORD PTR [ebx]
  436cf3:	add    BYTE PTR [ebx],bl
  436cf5:	mov    esi,esp
  436cf7:	add    DWORD PTR [eax],0x0
  436cfa:	in     al,0x0
  436cfc:	xchg   ecx,eax
  436cfd:	or     al,0x37
  436cff:	cmp    edi,0x0
  436d02:	or     al,BYTE PTR [ebx-0x745a8f]
  436d08:	add    BYTE PTR [eax],al
  436d0a:	nop
  436d0b:	call   DWORD PTR [esi+ebx*8]
  436d0e:	xchg   esi,eax
  436d0f:	add    BYTE PTR [eax],al
  436d11:	call   DWORD PTR [esi]
  436d13:	add    BYTE PTR [esi-0xa],al
  436d16:	pop    DWORD PTR [ebx+0xa8ff89]
  436d1c:	inc    ebx
  436d1d:	sub    eax,0xff00ffb0
  436d22:	gs or  edi,0xfffffff7
  436d26:	ret    
  436d27:	add    bh,bh
  436d29:	add    BYTE PTR [ecx+0x27a08283],bl
  436d2f:	dec    esp
  436d31:	inc    ebx
  436d33:	add    BYTE PTR [edi+ecx*4],bl
  436d36:	scas   al,BYTE PTR es:[edi]
  436d37:	(bad)  
  436d38:	inc    DWORD PTR [eax]
  436d3a:	lea    ecx,[ecx-0xbc0082]
  436d40:	(bad)  
  436d41:	inc    edi
  436d43:	add    esp,0xffffff82
  436d46:	xor    cl,ah
  436d48:	(bad)  
  436d49:	jmp    esi
  436d4b:	xor    esp,0xffffff90
  436d4e:	add    eax,0xa300ffff
  436d53:	call   DWORD PTR [esi]
  436d55:	into   
  436d56:	ins    BYTE PTR es:[edi],dx
  436d57:	inc    DWORD PTR [eax]
  436d59:	adc    ecx,0x0
  436d5c:	add    eax,0xffa73e
  436d61:	add    BYTE PTR [eax+0x6020f200],al
  436d67:	add    DWORD PTR [ebx+0x6800f8ff],0x33
  436d6e:	ins    DWORD PTR es:[edi],dx
  436d6f:	inc    DWORD PTR [eax]
  436d71:	or     DWORD PTR [ecx-0x34],0x72
  436d75:	xor    eax,eax
  436d77:	add    BYTE PTR [eax],al
  436d79:	add    dl,cl
  436d7b:	inc    edx
  436d7d:	mov    ecx,0xffffffd1
  436d82:	mov    ecx,DWORD PTR [ecx-0x3346e055]
  436d88:	add    BYTE PTR [eax],al
  436d8a:	test   eax,0x95dc80ff
  436d8f:	(bad)  
  436d90:	inc    DWORD PTR [eax]
  436d92:	imul   eax,DWORD PTR [eax],0xffffffbc
  436d95:	loopne 0x436d8a
  436d97:	add    BYTE PTR [eax],al
  436d99:	add    ah,cl
  436d9b:	jmp    DWORD PTR [ebp+edi*8-0x24]
  436d9f:	(bad)  
  436da0:	(bad)  
  436da1:	call   FWORD PTR [ebx+eax*4+0x7a]
  436da5:	dec    eax
  436da6:	sub    al,0x89
  436da8:	inc    DWORD PTR [eax]
  436daa:	loopne 0x436dab
  436dac:	pop    eax
  436dad:	stc    
  436dae:	dec    edi
  436daf:	add    BYTE PTR [eax],al
  436db1:	dec    ecx
  436db3:	and    DWORD PTR [edi-0x7c00dab1],0xffffffff
  436dba:	or     al,BYTE PTR [eax]
  436dbc:	rcr    BYTE PTR [edi-0x65],1
  436dbf:	int3   
  436dc0:	add    bh,bh
  436dc2:	fild   WORD PTR [eax]
  436dc4:	repz (bad) 
  436dc6:	cmc    
  436dc7:	cmp    edi,0xffffffff
  436dca:	hlt    
  436dcb:	add    BYTE PTR [ecx],bl
  436dcd:	mov    BYTE PTR [eax-0x1],bl
  436dd0:	inc    DWORD PTR [eax]
  436dd2:	or     edi,edi
  436dd4:	fstp   DWORD PTR [edx+ebx*4+0x2000ffff]
  436ddb:	int3   
  436ddc:	pop    ebp
  436ddd:	xchg   ecx,eax
  436dde:	push   ss
  436ddf:	inc    DWORD PTR [ebx-0x237c0b77]
  436de5:	sbb    bl,BYTE PTR [edi+0x0]
  436de8:	cmp    edi,0xffffffb7
  436deb:	cmp    DWORD PTR [ebx],0x6f
  436dee:	repz add bh,bh
  436df1:	dec    DWORD PTR [ebx]
  436df3:	sub    DWORD PTR [esi],0x36
  436df6:	lods   eax,DWORD PTR ds:[esi]
  436df7:	(bad)  
  436df8:	(bad)  
  436df9:	dec    DWORD PTR [eax+0x0]
  436dfc:	cdq    
  436dfd:	(bad)  
  436dfe:	test   DWORD PTR [ecx-0xc20034],ecx
  436e04:	ret    
  436e05:	in     eax,0x3c
  436e07:	(bad)  
  436e08:	dec    esp
  436e0a:	clc    
  436e0b:	add    BYTE PTR [esi],ch
  436e0d:	jmp    0x1426e70
  436e12:	aam    0xff
  436e14:	xchg   ecx,eax
  436e15:	clc    
  436e16:	cs (bad) 
  436e18:	(bad)  
  436e19:	jmp    FWORD PTR [ebx]
  436e1b:	adc    ecx,0x9
  436e1e:	xchg   ebx,eax
  436e1f:	dec    DWORD PTR [ecx+0x2ff1200]
  436e25:	push   ss
  436e26:	mov    edi,edi
  436e28:	add    BYTE PTR [eax],al
  436e2a:	test   esp,ecx
  436e2c:	jo     0x436ead
  436e2e:	dec    ebx
  436e2f:	add    BYTE PTR [ebx-0x16ff7101],al
  436e35:	cmp    DWORD PTR [ebx+0x0],esi
  436e38:	dec    esp
  436e3a:	mov    eax,0xe0245cff
  436e3f:	add    BYTE PTR [ebx+0x3eff22ff],al
  436e45:	and    al,0x26
  436e47:	inc    DWORD PTR [ebx-0x3800d877]
  436e4d:	mov    eax,ds:0xff89
  436e52:	xor    al,0xcc
  436e54:	or     eax,0x83002b58
  436e59:	call   edi
  436e5b:	add    ebp,0x55
  436e5e:	fwait
  436e5f:	inc    DWORD PTR [eax]
  436e61:	xor    ecx,0xffffffff
  436e64:	aam    0x45
  436e66:	mov    WORD PTR [eax],es
  436e68:	int3   
  436e69:	dec    DWORD PTR [ebx-0x23d53701]
  436e6f:	or     DWORD PTR [ecx-0x24006b01],0x2f
  436e76:	pop    DWORD PTR [eax]
  436e78:	add    DWORD PTR [eax],0xffffffe0
  436e7b:	int3   
  436e7c:	pop    ss
  436e7d:	daa    
  436e7e:	or     al,BYTE PTR [ebx-0x800001]
  436e84:	imul   ecx,DWORD PTR [esi],0xffffffa7
  436e87:	add    bh,bh
  436e89:	adc    edx,0xffffffff
  436e8c:	sub    ebx,ecx
  436e8e:	inc    ecx
  436e8f:	or     DWORD PTR [ecx+0x45ff85cc],0xffffffcb
  436e96:	sti    
  436e97:	add    bh,bh
  436e99:	mov    DWORD PTR [ecx],esp
  436e9b:	call   ebp
  436e9d:	add    DWORD PTR [esi],ebp
  436e9f:	int3   
  436ea0:	(bad)  
  436ea1:	call   FWORD PTR [ebx-0x70fe6b00]
  436ea7:	inc    DWORD PTR [eax]
  436ea9:	push   ebx
  436eab:	call   FWORD PTR [ecx+0xffef0c]
  436eb1:	add    BYTE PTR ds:0x5017c0ff,ch
  436eb7:	int3   
  436eb8:	inc    DWORD PTR [ebx-0x520f00ba]
  436ebe:	lds    eax,FWORD PTR [eax]
  436ec0:	dec    DWORD PTR [ecx+0x65f2ff53]
  436ec6:	push   edi
  436ec7:	inc    DWORD PTR [eax]
  436ec9:	and    esi,0xffffff83
  436ecc:	lock fild WORD PTR [edx]
  436ecf:	(bad)  
  436ed0:	inc    DWORD PTR [eax]
  436ed2:	call   0x8383:0xcfddb4ff
  436ed9:	adc    ebp,0xffffff89
  436edc:	mov    WORD PTR [edx-0x7c003304],ss
  436ee2:	mov    esi,0xb44313ff
  436ee7:	add    BYTE PTR [eax],al
  436ee9:	(bad)  
  436eea:	fld    QWORD PTR [ebx-0xb6ddea]
  436ef0:	inc    DWORD PTR [eax]
  436ef2:	or     BYTE PTR [ecx+0xd3652a],0xff
  436ef9:	add    ebp,0xffffffff
  436efc:	rcl    DWORD PTR [eax+0x70],0x89
  436f00:	inc    DWORD PTR [ebx-0x462800b6]
  436f06:	pop    eax
  436f07:	inc    DWORD PTR [eax]
  436f09:	int3   
  436f0a:	push   ds
  436f0b:	int3   
  436f0c:	adc    al,0xa8
  436f0e:	nop
  436f0f:	(bad)  
  436f10:	inc    DWORD PTR [eax]
  436f12:	sbb    DWORD PTR ss:[ebx+0x11],0xffffff8c
  436f17:	add    BYTE PTR [eax],al
  436f19:	add    dl,al
  436f1b:	add    BYTE PTR [esi],cl
  436f1d:	adc    eax,0xff89001e
  436f22:	xchg   edi,eax
  436f23:	jmp    FWORD PTR [esi-0x7c0075bd]
  436f29:	call   DWORD PTR [ebx]
  436f2b:	call   FWORD PTR [ebx]
  436f2d:	pop    edi
  436f2e:	sar    bh,cl
  436f30:	add    bh,bh
  436f32:	(bad)  
  436f34:	les    edx,FWORD PTR [ecx-0x50]
  436f37:	add    BYTE PTR [ebx-0x6dffab01],al
  436f3d:	leave  
  436f3e:	cmp    bh,bh
  436f40:	mov    edi,edi
  436f42:	das    
  436f43:	mov    DWORD PTR [ebx+0xc123],ebx
  436f49:	mov    eax,edi
  436f4b:	add    BYTE PTR ds:0x83897f9b,al
  436f51:	int3   
  436f52:	or     esp,0xff836640
  436f58:	add    BYTE PTR [eax],al
  436f5a:	cli    
  436f5b:	jmp    ebp
  436f5d:	jecxz  0x436fa8
  436f5f:	inc    DWORD PTR [eax]
  436f61:	mov    DWORD PTR [edi-0x108a2100],esi
  436f67:	mov    edi,edi
  436f69:	(bad)  
  436f6a:	out    dx,al
  436f6b:	call   DWORD PTR [eax-0x76001eaf]
  436f71:	call   FWORD PTR [esi+0x6239cbcc]
  436f77:	inc    DWORD PTR [eax]
  436f79:	dec    eax
  436f7b:	add    BYTE PTR [eax],bl
  436f7d:	dec    esi
  436f7e:	and    al,0x0
  436f80:	inc    DWORD PTR [eax]
  436f82:	mov    bh,bh
  436f84:	shl    BYTE PTR [esi],1
  436f86:	ds mov edi,edi
  436f89:	int3   
  436f8a:	mov    dh,0xff
  436f8c:	test   al,0xca
  436f8e:	jle    0x436f90
  436f90:	(bad)  
  436f91:	jmp    DWORD PTR ds:0xcbfd7700
  436f97:	add    bh,bh
  436f99:	mov    DWORD PTR [ebp-0x1],esp
  436f9c:	aad    0x9c
  436f9e:	xor    al,BYTE PTR [eax]
  436fa0:	(bad)  
  436fa1:	(bad)  
  436fa2:	mov    ecx,0x44c72aff
  436fa7:	add    BYTE PTR [eax],al
  436fa9:	push   DWORD PTR [eax+eax*1-0x62]
  436fad:	mov    bl,0xc6
  436faf:	inc    DWORD PTR [eax]
  436fb1:	inc    eax
  436fb3:	adc    DWORD PTR ds:0x8383b85a,0xffffffff
  436fba:	add    DWORD PTR [ebx+0xea332],0xff4000ff
  436fc4:	mov    ch,0xfd
  436fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436fc7:	mov    edi,edi
  436fc9:	add    BYTE PTR [edi-0x1],ch
  436fcc:	ins    BYTE PTR es:[edi],dx
  436fcd:	in     al,0x81
  436fcf:	cmp    edi,0xffffff83
  436fd2:	in     eax,0x83
  436fd4:	xor    DWORD PTR [ebp+0x39],eax
  436fd7:	add    DWORD PTR [ebx+0x29ff1283],0x24
  436fde:	sbb    eax,0x15ff8300
  436fe3:	push   esi
  436fe5:	pop    edx
  436fe6:	into   
  436fe7:	inc    DWORD PTR [eax]
  436fe9:	add    BYTE PTR [edx],ah
  436feb:	add    BYTE PTR [edi-0x37],dh
  436fee:	sub    edi,edi
  436ff0:	dec    esp
  436ff2:	jp     0x436ff4
  436ff4:	fisubr DWORD PTR [eax+ebp*2]
  436ff7:	int3   
  436ff8:	add    bh,bh
  436ffa:	popf   
  436ffb:	call   FWORD PTR [ebp-0xff7a72]
  437001:	int3   
  437002:	jg     0x437004
  437004:	es inc esi
  437006:	sar    edi,0xff
  437009:	call   DWORD PTR [esi-0x1ce5d601]
  43700f:	inc    DWORD PTR [eax]
  437011:	push   DWORD PTR [ecx-0x3bc02600]
  437017:	add    BYTE PTR [ebx-0x31006034],al
  43701d:	push   ecx
  43701e:	xchg   edx,eax
  43701f:	add    bh,bh
  437021:	(bad)  
  437022:	mov    eax,0x9fcb63ff
  437027:	add    BYTE PTR [ebx-0x43ff0900],al
  43702d:	in     eax,dx
  43702e:	outs   dx,DWORD PTR ds:[esi]
  43702f:	int3   
  437030:	inc    DWORD PTR [eax]
  437032:	in     eax,0xff
  437034:	mov    ecx,0xff8930f0
  437039:	push   DWORD PTR [esi+0x7490feff]
  43703f:	add    DWORD PTR [eax],0xffffff89
  437042:	mov    al,0x0
  437044:	mov    BYTE PTR [esi-0x4a],al
  437047:	add    bh,bh
  437049:	(bad)  
  43704a:	(bad)  
  43704c:	repz out 0x99,al
  43704f:	(bad)  
  437050:	inc    DWORD PTR [eax]
  437052:	jmp    0x436fd7
  437054:	ss cmc 
  437056:	jp     0x437057
  437058:	(bad)  
  437059:	call   FWORD PTR [eax+eax*1+0x4a]
  43705d:	sar    DWORD PTR [esi-0x23007677],0x89
  437064:	inc    edi
  437065:	cmp    DWORD PTR [esi+0x3400ff00],esi
  43706b:	(bad)  
  43706c:	jge    0x436ff9
  43706e:	push   esi
  43706f:	add    bh,bh
  437071:	cmp    eax,0xffffffff
  437074:	push   edi
  437075:	cli    
  437076:	cmc    
  437077:	cmp    edi,0xffffffff
  43707a:	fmul   QWORD PTR [ecx+0xb957ef]
  437080:	dec    esp
  437082:	je     0x437050
  437084:	rcr    BYTE PTR [ecx],1
  437086:	dec    edi
  437087:	cmp    edi,0xffffffff
  43708a:	fdiv   st(7),st
  43708c:	dec    eax
  43708d:	loop   0x4370ce
  43708f:	inc    DWORD PTR [eax]
  437091:	(bad)  
  437092:	in     eax,dx
  437093:	adc    DWORD PTR [ebx+0x6a],0xffffffa2
  437097:	dec    esp
  437099:	add    BYTE PTR [esi],dh
  43709b:	jmp    FWORD PTR [edi]
  43709d:	ss inc ebx
  43709f:	int3   
  4370a0:	dec    DWORD PTR [ecx+0x465bff1d]
  4370a6:	push   ds
  4370a7:	inc    DWORD PTR [ebx-0x23ff5501]
  4370ad:	mov    ch,0x9b
  4370af:	(bad)  
  4370b0:	inc    DWORD PTR [eax]
  4370b2:	sbb    BYTE PTR [ebx-0x4c0e04],al
  4370b8:	add    bh,bh
  4370ba:	ud0    esi,DWORD PTR [edx+ebp*4-0x2a]
  4370bf:	(bad)  
  4370c0:	dec    DWORD PTR [ecx+0x74c200e5]
  4370c6:	pop    ecx
  4370c7:	int3   
  4370c8:	add    bh,bh
  4370ca:	mov    esp,0xb8ab85ff
  4370cf:	inc    DWORD PTR [eax]
  4370d1:	int3   
  4370d2:	xor    eax,DWORD PTR [ebx-0x7cbdd794]
  4370d8:	(bad)  
  4370d9:	call   FWORD PTR [ebx+0x3065b000]
  4370df:	(bad)  
  4370e0:	(bad)  
  4370e1:	dec    esi
  4370e3:	dec    DWORD PTR [edx]
  4370e5:	mov    bh,0x7f
  4370e7:	(bad)  
  4370e8:	dec    esp
  4370ea:	mov    BYTE PTR [ebx-0x765c0d9f],0xff
  4370f1:	int3   
  4370f2:	adc    edi,edi
  4370f4:	add    eax,0xff830e42
  4370f9:	call   esi
  4370fb:	(bad)  
  4370fc:	fild   WORD PTR [eax-0x24]
  4370ff:	inc    DWORD PTR [eax]
  437101:	sub    DWORD PTR [edi-0x5a0200],0xffffffff
  437108:	dec    esp
  43710a:	inc    ebx
  43710b:	(bad)  
  43710c:	ficom  DWORD PTR [ecx]
  43710e:	out    dx,al
  43710f:	int3   
  437110:	mov    edi,edi
  437112:	stc    
  437113:	and    DWORD PTR [edi-0x338021],0xffffffff
  43711a:	mov    ecx,0xb659ff89
  43711f:	or     esp,0x0
  437122:	jae    0x4370ad
  437124:	out    dx,al
  437125:	mov    es,WORD PTR [eax]
  437127:	(bad)  
  437128:	(bad)  
  437129:	call   DWORD PTR [edi+edi*8-0x9]
  43712d:	xor    eax,0xffff5b
  437132:	cmp    eax,0x56816a83
  437137:	inc    DWORD PTR [eax]
  437139:	push   eax
  43713b:	push   DWORD PTR [edi+0x1]
  43713e:	push   ebx
  43713f:	cmp    edi,0xffffffff
  437142:	(bad)  
  437143:	inc    DWORD PTR [edi-0x7c]
  437146:	aaa    
  437147:	inc    DWORD PTR [ebx-0x6d336000]
  43714d:	cmp    DWORD PTR [esi-0x66007c01],esi
  437153:	add    edx,0xffffff9c
  437156:	(bad)  
  437157:	inc    DWORD PTR [eax]
  437159:	or     DWORD PTR [esi-0x1],0x41
  43715d:	push   es
  43715e:	sahf   
  43715f:	dec    esp
  437161:	dec    DWORD PTR [esi]
  437163:	(bad)  
  437164:	stc    
  437165:	popf   
  437166:	dec    ebx
  437167:	add    DWORD PTR [eax],0xffffffcc
  43716a:	add    DWORD PTR [eax],0x15
  43716d:	jge    0x4371ce
  43716f:	inc    DWORD PTR [ebx-0x4eff7b77]
  437175:	(bad)  
  437176:	int3   
  437177:	int3   
  437178:	inc    DWORD PTR [eax]
  43717a:	mov    esi,0x423a31ff
  43717f:	add    bh,bh
  437181:	jmp    FWORD PTR [esi]
  437183:	inc    DWORD PTR [ecx-0xedad]
  437189:	add    BYTE PTR [ebx],cl
  43718b:	(bad)  
  43718c:	jle    0x4371e1
  43718e:	call   0x3aff:0x31ff00ff
  437195:	js     0x43718e
  437197:	int3   
  437198:	add    DWORD PTR [eax],0xffffffb3
  43719b:	add    al,dl
  43719d:	fmul   QWORD PTR [esi-0x7d]
  4371a0:	add    bh,bh
  4371a2:	add    bh,bh
  4371a4:	leave  
  4371a5:	lods   eax,DWORD PTR ds:[esi]
  4371a6:	ss cmp edi,0xffffff89
  4371aa:	hlt    
  4371ab:	jmp    DWORD PTR [eax-0x64]
  4371ae:	mov    ecx,0xe6ffffff
  4371b3:	add    BYTE PTR [eax+0x7e],ch
  4371b6:	adc    edi,edi
  4371b8:	inc    DWORD PTR [eax]
  4371ba:	adc    eax,0x8924a3ff
  4371bf:	add    BYTE PTR [ebx-0xf000201],al
  4371c5:	ins    DWORD PTR es:[edi],dx
  4371c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4371c7:	(bad)  
  4371c8:	(bad)  
  4371c9:	inc    ebp
  4371cb:	add    BYTE PTR [edi],ah
  4371cd:	mov    ebx,0xcc00ffd2
  4371d2:	mov    al,0x83
  4371d4:	and    al,0xa1
  4371d6:	mov    bh,0xff
  4371d8:	int3   
  4371d9:	dec    DWORD PTR [ecx+0x0]
  4371dc:	dec    ebx
  4371dd:	add    DWORD PTR [edx+0x6bff0083],eax
  4371e3:	add    BYTE PTR [edi],bh
  4371e5:	add    ebx,0x0
  4371e8:	add    BYTE PTR [eax],al
  4371ea:	or     eax,0x3f81bcff
  4371ef:	(bad)  
  4371f0:	(bad)  
  4371f1:	call   FWORD PTR [ebx]
  4371f3:	push   esp
  4371f5:	xchg   ebp,eax
  4371f6:	(bad)  
  4371f7:	dec    esp
  4371f9:	add    BYTE PTR [ecx-0x34],bl
  4371fc:	and    DWORD PTR [ebp-0x43],edx
  4371ff:	(bad)  
  437200:	inc    DWORD PTR [eax]
  437202:	inc    ebp
  437203:	jmp    DWORD PTR [edx+0xcc864c]
  437209:	add    BYTE PTR [edi+0x11beb9ff],al
  43720f:	mov    edi,edi
  437211:	(bad)  
  437212:	(bad)  
  437213:	call   DWORD PTR ds:0xff898bf3
  437219:	xor    DWORD PTR [ebx-0x77],0x4e
  43721d:	ins    BYTE PTR es:[edi],dx
  43721e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43721f:	inc    DWORD PTR [ebx-0x3e7cc701]
  437225:	lea    esi,[esi+0x1aff0089]
  43722b:	mov    DWORD PTR [ebx],edi
  43722d:	jmp    0xcc20:0xffffffbc
  437234:	lods   al,BYTE PTR ds:[esi]
  437235:	cmp    ebp,0x12ffffff
  43723b:	mov    esp,ebx
  43723d:	inc    ecx
  43723e:	inc    eax
  43723f:	add    ah,cl
  437241:	add    BYTE PTR [eax-0x1],dh
  437244:	sbb    edx,ebp
  437246:	jge    0x437248
  437248:	add    BYTE PTR [eax],al
  43724a:	icebp  
  43724b:	add    BYTE PTR [eax],bh
  43724d:	retf   
  43724e:	je     0x4371d3
  437250:	add    BYTE PTR [ebx+0x569000a1],al
  437256:	or     edi,edi
  437258:	add    BYTE PTR [eax],al
  43725a:	inc    ebx
  43725b:	add    dl,ch
  43725d:	push   ebp
  43725e:	sub    al,BYTE PTR [eax]
  437260:	add    bh,bh
  437262:	and    cl,BYTE PTR [ecx-0xbeed6e]
  437268:	add    bh,bh
  43726a:	aaa    
  43726b:	inc    ecx
  43726d:	ds int3 
  43726f:	add    BYTE PTR [eax],al
  437271:	jmp    FWORD PTR [eax-0x1]
  437274:	push   ebx
  437275:	dec    edx
  437276:	inc    DWORD PTR [eax]
  437278:	(bad)  
  437279:	(bad)  
  43727a:	mov    esi,0xa9505489
  43727f:	(bad)  
  437280:	(bad)  
  437281:	jmp    DWORD PTR [ecx+0x48116dff]
  437287:	add    BYTE PTR [eax],al
  437289:	(bad)  
  43728a:	jp     0x43728c
  43728c:	adc    esi,DWORD PTR [edi-0xa]
  43728f:	inc    DWORD PTR [ebx+0x65ffde00]
  437295:	aad    0x7c
  437297:	(bad)  
  437298:	(bad)  
  437299:	inc    DWORD PTR [ecx+ecx*4-0x3b]
  43729d:	scas   al,BYTE PTR es:[edi]
  43729e:	and    DWORD PTR [ebx-0x6fff01],eax
  4372a4:	repnz lods eax,DWORD PTR ss:[esi]
  4372a7:	int3   
  4372a8:	add    bh,bh
  4372aa:	ins    BYTE PTR es:[edi],dx
  4372ab:	jmp    DWORD PTR [edi+0xff2f14]
  4372b1:	int3   
  4372b2:	add    edi,edi
  4372b4:	pushf  
  4372b5:	add    ecx,0x8b0083cc
  4372bb:	jmp    DWORD PTR [esi+0x834733]
  4372c1:	int3   
  4372c2:	cmp    DWORD PTR [ebx-0x2b8949],eax
  4372c8:	inc    DWORD PTR [eax]
  4372ca:	xchg   esp,eax
  4372cb:	(bad)  
  4372cc:	sti    
  4372cd:	push   es
  4372ce:	push   edi
  4372cf:	dec    DWORD PTR [ecx-0x52fff37d]
  4372d5:	popa   
  4372d6:	sti    
  4372d7:	add    bh,bh
  4372d9:	add    bh,dh
  4372db:	add    BYTE PTR [esi-0x7cffb322],bh
  4372e1:	int3   
  4372e2:	add    BYTE PTR ss:[eax+0x13],ah
  4372e6:	retf   0xff00
  4372e9:	mov    DWORD PTR [eax],esi
  4372eb:	add    bl,dh
  4372ed:	push   ss
  4372ee:	popa   
  4372ef:	add    DWORD PTR [ebx+0x12001fff],0xfffffff7
  4372f6:	adc    al,BYTE PTR [ebx-0x7c580034]
  4372fc:	xor    dl,ch
  4372fe:	push   es
  4372ff:	inc    DWORD PTR [eax]
  437301:	sub    ecx,0x0
  437304:	lock cmp edx,DWORD PTR [ebx-0x38ffff01]
  43730b:	(bad)  
  43730c:	fbld   TBYTE PTR [eax+0x5e]
  43730f:	add    DWORD PTR [eax],0x0
  437312:	iret   
  437313:	call   ebx
  437315:	loopne 0x4372ab
  437317:	cmp    edi,0xffffff83
  43731a:	mov    esp,0x66c1989
  43731f:	mov    edi,edi
  437321:	cmp    DWORD PTR [ebp+0x9e705cc],0xffffffff
  437328:	add    bh,bh
  43732a:	or     edi,edi
  43732c:	daa    
  43732d:	imul   esi,DWORD PTR [edx],0x0
  437330:	inc    DWORD PTR [ebx+0x4bcb0016]
  437336:	idiv   bh
  437338:	inc    DWORD PTR [eax]
  43733a:	push   0x563d5900
  43733f:	add    BYTE PTR [ecx-0x5eff8301],cl
  437345:	test   DWORD PTR [ebp+0x45ff83ff],edi
  43734b:	int3   
  43734c:	push   ecx
  43734d:	add    eax,0xff8900b0
  437352:	cmp    bh,0x8b
  437355:	pavgw  mm7,mm7
  437358:	(bad)  
  437359:	inc    ebx
  43735b:	dec    DWORD PTR [ebx-0x6]
  43735e:	mov    dh,0x83
  437360:	cmp    edi,0x23
  437363:	add    BYTE PTR [edx+0xd119],bl
  437369:	add    BYTE PTR [ecx-0x3bb1a601],cl
  43736f:	inc    DWORD PTR [ebx-0x4b761800]
  437375:	mov    ds:0xffffff57,eax
  43737a:	or     edi,edi
  43737c:	jnp    0x437379
  43737e:	aam    0xff
  437380:	dec    esp
  437382:	sub    al,BYTE PTR [eax]
  437384:	mov    al,ds:0xff4b79
  437389:	call   DWORD PTR [ebp-0x5aba01]
  43738f:	add    bh,bh
  437391:	add    al,dl
  437393:	and    DWORD PTR [ebp+0x65],0xb
  437397:	dec    esp
  437399:	push   esp
  43739b:	add    BYTE PTR [ecx],bh
  43739d:	xchg   edx,eax
  43739e:	addr16 dec esp
  4373a1:	int3   
  4373a2:	int    0xff
  4373a4:	int    0x26
  4373a6:	arpl   WORD PTR [eax],ax
  4373a8:	add    bh,bh
  4373aa:	nop
  4373ab:	add    BYTE PTR [edi-0x337dbe],dh
  4373b1:	jmp    DWORD PTR [eax]
  4373b3:	add    BYTE PTR [edx],ch
  4373b5:	mov    DWORD PTR [edi-0x59000000],eax
  4373bb:	(bad)  
  4373bc:	out    dx,eax
  4373bd:	outs   dx,BYTE PTR ds:[esi]
  4373be:	das    
  4373bf:	add    bh,bh
  4373c1:	xor    DWORD PTR [ebx],0xffffffff
  4373c4:	add    eax,DWORD PTR [eax-0x3300f3]
  4373ca:	or     edi,edi
  4373cc:	aad    0x76
  4373ce:	in     al,0x0
  4373d0:	(bad)  
  4373d1:	call   DWORD PTR ds:0xb988b83
  4373d7:	add    bh,bh
  4373d9:	jmp    FWORD PTR [ecx-0x7d]
  4373dc:	pop    esp
  4373dd:	dec    edx
  4373de:	jl     0x4373df
  4373e0:	add    BYTE PTR [eax],al
  4373e2:	retf   0x37ff
  4373e5:	or     DWORD PTR [edi],esp
  4373e7:	int3   
  4373e8:	int3   
  4373e9:	add    bh,bh
  4373eb:	mov    DWORD PTR [eax],esp
  4373ed:	arpl   WORD PTR [eax+eax*1-0x34],ax
  4373f1:	xor    DWORD PTR [eax-0x5ea00901],0xffffffcc
  4373f8:	add    DWORD PTR [eax],0x62
  4373fb:	call   FWORD PTR [eax-0xd876]
  437401:	jmp    FWORD PTR [ebp+0x25df0600]
  437407:	inc    DWORD PTR [ebx-0x76ff0f7d]
  43740d:	cmp    dl,BYTE PTR [ecx+0x65ffffff]
  437413:	dec    DWORD PTR [esi+eax*1-0x4a]
  437417:	add    bh,bh
  437419:	mov    DWORD PTR [eax+eax*1],esi
  43741c:	popaw  
  43741e:	mov    eax,DWORD PTR [eax]
  437420:	add    BYTE PTR [eax],al
  437422:	sub    eax,0x7b5159ff
  437427:	dec    DWORD PTR [ecx+0x1883c1ff]
  43742d:	stc    
  43742e:	pop    edi
  43742f:	inc    DWORD PTR [eax]
  437431:	add    BYTE PTR [eax],bl
  437433:	sbb    DWORD PTR [edi],0x8
  437436:	idiv   bh
  437438:	add    BYTE PTR [eax],al
  43743a:	cmp    al,BYTE PTR [eax]
  43743c:	(bad)  
  43743d:	inc    dl
  43743f:	inc    DWORD PTR [eax]
  437441:	inc    DWORD PTR [edx+0x0]
  437444:	ficomp WORD PTR [esi]
  437446:	in     al,0xff
  437448:	add    ah,cl
  43744a:	or     eax,DWORD PTR [eax]
  43744c:	ret    0xe28b
  43744f:	add    bh,bh
  437451:	(bad)  
  437452:	fiadd  DWORD PTR [eax]
  437454:	dec    eax
  437455:	call   0x897d:0x89ffffb8
  43745c:	fld    QWORD PTR [esi+ebx*4+0x0]
  437460:	add    BYTE PTR [eax],al
  437462:	push   edi
  437463:	add    dh,al
  437465:	add    al,0xc4
  437467:	int3   
  437468:	inc    DWORD PTR [eax]
  43746a:	rol    BYTE PTR [ebx-0x74a57b],1
  437470:	inc    DWORD PTR [eax]
  437472:	and    al,0xff
  437474:	dec    esp
  437475:	lock lahf 
  437477:	dec    esp
  437479:	sbb    DWORD PTR [eax+0x292a9eff],0xffffffff
  437480:	inc    DWORD PTR [eax]
  437482:	fadd   DWORD PTR [eax]
  437484:	sbb    edi,DWORD PTR [edi+0x1b]
  437487:	int3   
  437488:	add    BYTE PTR [eax],al
  43748a:	nop
  43748b:	add    ch,ch
  43748d:	fcom   QWORD PTR [ebx]
  43748f:	add    bh,bh
  437491:	int3   
  437492:	cmp    edi,edi
  437494:	mov    al,0xff
  437496:	fld    QWORD PTR [eax]
  437498:	dec    DWORD PTR [ecx+0x707009d]
  43749e:	push   esi
  43749f:	add    BYTE PTR [ecx-0x76ffe400],cl
  4374a5:	jmp    0x1427547
  4374aa:	mov    al,ds:0x81370e00
  4374af:	add    DWORD PTR [ebx+0x71ff7889],0x45
  4374b6:	lea    ecx,[ecx-0x980001]
  4374bc:	and    al,0xb6
  4374be:	xchg   esp,eax
  4374bf:	inc    DWORD PTR [eax]
  4374c1:	int3   
  4374c2:	push   ds
  4374c3:	add    DWORD PTR [edi-0x10],0xffffff80
  4374c7:	mov    edi,edi
  4374c9:	call   eax
  4374cb:	add    BYTE PTR [ecx-0x44],bl
  4374ce:	out    0xcc,al
  4374d0:	dec    esp
  4374d2:	mov    edi,?
  4374d4:	inc    edx
  4374d5:	cmc    
  4374d6:	mov    edi,0xf7ffccff
  4374db:	add    BYTE PTR [edi-0xff3680],ch
  4374e1:	(bad)  
  4374e2:	std    
  4374e3:	inc    edx
  4374e5:	iret   
  4374e6:	stc    
  4374e7:	inc    DWORD PTR [ebx-0x8007d01]
  4374ed:	push   esi
  4374ee:	xchg   ebp,eax
  4374ef:	(bad)  
  4374f0:	(bad)  
  4374f1:	inc    edi
  4374f3:	mov    edx,ebp
  4374f5:	xchg   esp,eax
  4374f6:	cdq    
  4374f7:	inc    DWORD PTR [eax]
  4374f9:	add    BYTE PTR [ebp-0x7d9a3177],dh
  4374ff:	(bad)  
  437500:	(bad)  
  437501:	(bad)  
  437502:	mov    esp,0x9a256500
  437507:	mov    DWORD PTR [ebx-0x7433e177],eax
  43750d:	mov    esp,0xff83ccd4
  437512:	cmp    edi,edi
  437514:	gs adc al,0xdc
  437517:	dec    DWORD PTR [ecx-0x73ff2400]
  43751d:	mov    ebp,ebp
  43751f:	dec    esp
  437521:	jmp    edx
  437523:	add    BYTE PTR [ebp+ecx*4-0x7c760033],dh
  43752a:	mov    al,ds:0xc7720700
  43752f:	inc    DWORD PTR [eax]
  437531:	jmp    DWORD PTR [eax-0x34]
  437534:	and    al,0x1b
  437536:	cli    
  437537:	(bad)  
  437538:	(bad)  
  437539:	jmp    eax
  43753b:	(bad)  
  43753c:	std    
  43753d:	lods   al,BYTE PTR ds:[esi]
  43753e:	push   ds
  43753f:	add    ah,cl
  437541:	inc    DWORD PTR [esp+ecx*8]
  437544:	add    dh,cl
  437546:	popf   
  437547:	int3   
  437548:	add    DWORD PTR [eax],0x21
  43754b:	add    BYTE PTR [edx+0xff4fb3],ah
  437551:	jmp    FWORD PTR [edx]
  437553:	jmp    FWORD PTR [ecx+0xfd38]
  437559:	add    BYTE PTR [ebp-0x204a1900],bh
  43755f:	add    bh,bh
  437561:	add    BYTE PTR [edx-0x1],ch
  437564:	push   ebp
  437565:	dec    esp
  437566:	(bad)  
  437568:	add    ah,cl
  43756a:	retf   
  43756b:	add    BYTE PTR [ebp+0x3a8f],cl
  437571:	mov    DWORD PTR [eax],esi
  437573:	int3   
  437574:	mov    eax,ds:0x83ffab80
  437579:	add    BYTE PTR [eax+0x1d5d2b83],dl
  43757f:	inc    DWORD PTR [ebx-0x6fff0400]
  437585:	pop    edx
  437586:	jbe    0x43750b
  437588:	add    DWORD PTR [eax],0x61
  43758b:	add    BYTE PTR [eax+0xff87c6],cl
  437591:	(bad)  
  437592:	jl     0x437593
  437594:	repz xor ecx,DWORD PTR [eax-0x1]
  437598:	(bad)  
  437599:	(bad)  
  43759a:	jmp    0x823bba9e
  43759f:	cmp    edi,0xffffffff
  4375a2:	outs   dx,BYTE PTR ds:[esi]
  4375a3:	add    ah,cl
  4375a5:	inc    edi
  4375a6:	or     al,0xff
  4375a8:	add    BYTE PTR [eax],al
  4375aa:	dec    edi
  4375ab:	add    cl,dh
  4375ad:	loopne 0x43754f
  4375af:	int3   
  4375b0:	add    bh,bh
  4375b2:	sar    bh,1
  4375b4:	scas   al,BYTE PTR es:[edi]
  4375b5:	leave  
  4375b6:	retf   0x8300
  4375b9:	add    BYTE PTR [eax-0x1],dl
  4375bc:	xor    dl,BYTE PTR [edi-0x46]
  4375bf:	add    bh,bh
  4375c1:	add    BYTE PTR [eax],ch
  4375c3:	mov    DWORD PTR [eax+0x890c18],esi
  4375c9:	int3   
  4375ca:	pop    eax
  4375cb:	add    BYTE PTR [eax-0xff1172],ch
  4375d1:	call   FWORD PTR [eax-0x7d]
  4375d4:	xchg   esp,eax
  4375d5:	lods   eax,DWORD PTR ds:[esi]
  4375d6:	mov    ah,0xff
  4375d8:	add    bh,bh
  4375da:	retf   0x3600
  4375dd:	mov    ds:0xff00009f,eax
  4375e2:	mov    DWORD PTR [bp+0x30],ecx
  4375e6:	cmp    DWORD PTR [eax],eax
  4375e8:	add    BYTE PTR [ecx+0x156000bb],cl
  4375ee:	fadd   QWORD PTR [eax]
  4375f0:	cmp    edi,0x7d
  4375f3:	sbb    DWORD PTR [ecx+0x9c60],0xffffff83
  4375fa:	ins    DWORD PTR es:[edi],dx
  4375fb:	jmp    DWORD PTR [edi-0x2658]
  437601:	mov    DWORD PTR [edx],eax
  437603:	call   FWORD PTR [edx]
  437605:	and    eax,0xff5e
  43760a:	sbb    al,0x0
  43760c:	ja     0x43768c
  43760e:	test   bh,bh
  437610:	inc    DWORD PTR [ebx+0x2a22cca3]
  437616:	fiadd  DWORD PTR [eax]
  437618:	add    bh,bh
  43761a:	or     eax,0xa1cae8ff
  43761f:	add    BYTE PTR [eax],al
  437621:	call   FWORD PTR [ebx+eax*4]
  437624:	ins    BYTE PTR es:[edi],dx
  437625:	sbb    BYTE PTR [edx],ch
  437627:	or     DWORD PTR [ecx-0x2cffce00],0xffffffcc
  43762e:	adc    bh,bh
  437630:	add    BYTE PTR [eax],al
  437632:	pop    ecx
  437633:	(bad)  
  437634:	aas    
  437635:	xchg   BYTE PTR [ebx+0x668300ff],dl
  43763b:	add    BYTE PTR [eax+eiz*4],bl
  43763e:	dec    eax
  43763f:	add    bh,bh
  437641:	add    BYTE PTR [edi+edi*8+0xd02511],bl
  437648:	add    bh,bh
  43764a:	jg     0x43764b
  43764c:	xor    eax,0x77e
  437651:	mov    ebx,ebx
  437653:	add    dh,ah
  437655:	pop    esp
  437656:	sub    al,0xff
  437658:	dec    DWORD PTR [ecx+0xd8189cd]
  43765e:	xor    cl,ah
  437660:	add    BYTE PTR [eax],al
  437662:	loope  0x437663
  437664:	adc    ah,BYTE PTR [ebx]
  437666:	rol    BYTE PTR [ebx-0x7cf50100],1
  43766c:	pushf  
  43766d:	sar    esi,1
  43766f:	mov    DWORD PTR [eax],eax
  437671:	add    BYTE PTR [eax-0x1],bl
  437674:	pop    ds
  437675:	inc    eax
  437676:	xchg   DWORD PTR [eax],eax
  437678:	add    bh,bh
  43767a:	jns    0x43767b
  43767c:	cmp    eax,0xffdabc
  437681:	add    bl,dl
  437683:	inc    DWORD PTR [esi+0xff877f]
  437689:	add    dl,al
  43768b:	jmp    eax
  43768d:	inc    esp
  43768e:	pop    es
  43768f:	mov    edi,edi
  437691:	and    eax,0xffffff89
  437694:	leave  
  437695:	and    DWORD PTR [ebx+eax*4],edx
  437698:	cmp    edi,0x16
  43769b:	inc    eax
  43769d:	fstp   QWORD PTR [esi+0x0]
  4376a0:	add    BYTE PTR [eax],al
  4376a2:	mov    cl,BYTE PTR [ecx+0x703b3c]
  4376a8:	inc    DWORD PTR [ebx+0x1b47fff3]
  4376ae:	jo     0x4376af
  4376b0:	(bad)  
  4376b1:	jmp    DWORD PTR [esi-0x79188c00]
  4376b7:	cmp    edi,0xffffffff
  4376ba:	scas   al,BYTE PTR es:[edi]
  4376bb:	cmp    ecx,0x47
  4376be:	mov    ?,edi
  4376c0:	add    bh,bh
  4376c2:	inc    edi
  4376c3:	add    BYTE PTR [ecx-0x7cfd0a],dl
  4376c9:	mov    ecx,esp
  4376cb:	and    DWORD PTR [eax],0xffffffb2
  4376ce:	(bad)  
  4376d0:	add    bh,bh
  4376d2:	aad    0xff
  4376d4:	aad    0xdf
  4376d6:	enter  0xcc00,0x0
  4376da:	mov    al,ds:0xba94d83
  4376df:	add    BYTE PTR [eax],al
  4376e1:	push   edi
  4376e3:	add    bl,cl
  4376e5:	fistp  DWORD PTR [esi-0x1]
  4376e8:	add    BYTE PTR [eax],al
  4376ea:	pop    esp
  4376eb:	inc    DWORD PTR [esp+ecx*4]
  4376ee:	xlat   BYTE PTR ds:[ebx]
  4376ef:	dec    esp
  4376f1:	xor    esi,0xffffff89
  4376f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4376f5:	or     al,0xc3
  4376f7:	mov    DWORD PTR [ebx-0x6dff4001],eax
  4376fd:	adc    edi,ebp
  4376ff:	add    bh,bh
  437701:	int3   
  437702:	js     0x437703
  437704:	jbe    0x4376a9
  437706:	stos   BYTE PTR es:[edi],al
  437707:	add    BYTE PTR [eax],al
  437709:	add    bl,ah
  43770b:	jmp    FWORD PTR [edx]
  43770d:	and    DWORD PTR [ecx],edx
  43770f:	add    ah,cl
  437711:	dec    esi
  437713:	call   edx
  437715:	xchg   DWORD PTR [esi-0x34],eax
  437718:	add    BYTE PTR [eax],al
  43771a:	repz (bad) 
  43771c:	fimul  WORD PTR [esi+0xcc002f]
  437722:	adc    bh,bh
  437724:	rol    ebx,1
  437726:	jmp    0x1983:0x21ffffff
  43772d:	xchg   edi,eax
  43772e:	xor    bh,bh
  437730:	inc    DWORD PTR [eax]
  437732:	call   0xba7d6c37
  437737:	inc    DWORD PTR [ebx-0x75006501]
  43773d:	jo     0x437748
  43773f:	(bad)  
  437740:	dec    esp
  437742:	xchg   ecx,eax
  437743:	mov    DWORD PTR [ecx+ebp*4-0x7c000084],ebp
  43774a:	or     eax,DWORD PTR [eax]
  43774c:	lds    esi,FWORD PTR [ebx]
  43774e:	mov    esp,cs
  437750:	(bad)  
  437751:	call   FWORD PTR [esi+0x335c39ff]
  437757:	inc    DWORD PTR [ebx+0x580092ff]
  43775d:	mov    bh,0xd3
  43775f:	inc    DWORD PTR [eax]
  437761:	call   FWORD PTR [ecx]
  437763:	(bad)  
  437764:	cmp    al,0xde
  437766:	mov    dh,0x0
  437768:	inc    DWORD PTR [ebx+0x2d34ff42]
  43776e:	push   esi
  43776f:	add    BYTE PTR [eax],al
  437771:	jmp    FWORD PTR [ebx-0x1]
  437774:	ret    
  437775:	rcr    DWORD PTR [edx-0x100337d],cl
  43777b:	jmp    DWORD PTR [edx-0xf499]
  437781:	int3   
  437782:	repz int3 
  437784:	and    bl,cl
  437786:	push   ebx
  437787:	inc    DWORD PTR [eax]
  437789:	sub    esi,0xffffffff
  43778c:	icebp  
  43778d:	add    cl,bh
  43778f:	or     DWORD PTR [ecx-0x1400ea00],0xfffffffc
  437796:	jne    0x437798
  437798:	(bad)  
  437799:	dec    edi
  43779b:	adc    DWORD PTR [ebx],0xfffffff0
  43779e:	and    al,0x0
  4377a0:	add    ah,cl
  4377a2:	fdiv   st(7),st
  4377a4:	push   ds
  4377a5:	pop    edx
  4377a6:	cmp    ah,cl
  4377a8:	(bad)  
  4377a9:	call   DWORD PTR [ebx]
  4377ab:	call   edi
  4377ad:	sub    bl,bl
  4377af:	(bad)  
  4377b0:	inc    DWORD PTR [eax]
  4377b2:	jmp    0xff:0xee1f9fff
  4377b9:	sub    DWORD PTR [ecx-0x1],0x26
  4377bd:	sub    DWORD PTR [eax-0x7d],eax
  4377c0:	mov    edi,edi
  4377c2:	aad    0xff
  4377c4:	jae    0x437762
  4377c6:	fild   WORD PTR [eax]
  4377c8:	inc    DWORD PTR [eax]
  4377ca:	ins    BYTE PTR es:[edi],dx
  4377cb:	sbb    DWORD PTR [eax-0x8254],0xffffffff
  4377d2:	dec    edx
  4377d3:	(bad)  
  4377d4:	clc    
  4377d5:	or     eax,ebx
  4377d7:	int3   
  4377d8:	mov    edi,edi
  4377da:	or     bh,bh
  4377dc:	lea    ebp,[ebx]
  4377de:	adc    eax,0x39ff89ff
  4377e3:	inc    DWORD PTR [ebx]
  4377e5:	sbb    eax,DWORD PTR [ecx+0x5bccccff]
  4377eb:	or     ebx,0x4d
  4377ee:	mov    ds:0x2800ff00,al
  4377f3:	call   DWORD PTR [ebp-0x17]
  4377f6:	or     DWORD PTR [eax],eax
  4377f8:	(bad)  
  4377f9:	call   DWORD PTR [edi+edi*8]
  4377fc:	adc    bl,bh
  4377fe:	add    DWORD PTR cs:[ebx+0x1d005e00],0x34
  437806:	mov    edx,0xcccccc89
  43780b:	int3   
  43780c:	int3   
  43780d:	int3   
  43780e:	int3   
  43780f:	int3   
  437810:	dec    DWORD PTR [esi]
  437812:	mov    ebp,0xccffffcb
  437817:	je     0x437818
  437819:	inc    DWORD PTR [ebx+0x1accff1a]
  43781f:	pop    ebx
  437820:	add    BYTE PTR [ecx-0x7adf70],bl
  437826:	(bad)  
  437827:	sti    
  437828:	add    DWORD PTR [eax],0x0
  43782b:	inc    edx
  43782c:	(bad)  
  43782d:	dec    ebx
  43782f:	mov    ah,0x0
  437831:	test   DWORD PTR [ebx-0x4b],edx
  437834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437835:	mov    edi,edi
  437837:	in     eax,0x83
  437839:	int3   
  43783a:	jmp    DWORD PTR [ecx]
  43783c:	inc    DWORD PTR [eax]
  43783e:	hlt    
  43783f:	mov    dh,0xff
  437841:	and    ah,BYTE PTR [esi-0xc]
  437844:	pop    ss
  437845:	add    DWORD PTR [eax],0xfffffff8
  437848:	int3   
  437849:	dec    DWORD PTR [ecx+0x46ff0010]
  43784f:	sub    edi,edi
  437851:	out    0x4a,eax
  437853:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437854:	mov    eax,ds:0x7a0083
  437859:	(bad)  
  43785a:	dec    DWORD PTR ds:0x37dbffff
  437860:	add    ch,bl
  437862:	jae    0x4378b1
  437864:	mov    eax,ds:0xff61ffff
  437869:	int3   
  43786a:	add    BYTE PTR [ebp-0x1],cl
  43786d:	call   FWORD PTR [eax+0x12]
  437870:	(bad)  
  437871:	cmp    BYTE PTR [ecx+eax*4+0x3eff005e],dh
  437878:	(bad)  
  437879:	inc    DWORD PTR [ebx-0x317cff24]
  43787f:	data16 (bad) 
  437881:	jmp    0x437888
  437883:	lods   eax,DWORD PTR ds:[esi]
  437884:	lods   al,BYTE PTR ds:[esi]
  437885:	add    DWORD PTR [ebx-0x85],0xffffffea
  43788c:	add    BYTE PTR [eax],al
  43788e:	jne    0x4378c3
  437890:	dec    DWORD PTR [ebp-0x11ced3]
  437896:	add    bl,bl
  437898:	mov    edi,edi
  43789a:	add    BYTE PTR [edi],bh
  43789c:	cmp    edi,0xffffffd9
  43789f:	(bad)  
  4378a1:	mov    edx,0xff94f1ed
  4378a6:	int3   
  4378a7:	mov    ds:0x29ccff00,eax
  4378ac:	add    bh,bh
  4378ae:	mov    ss,WORD PTR [ebx+eax*4+0x1a]
  4378b2:	lock xor BYTE PTR [edi+edi*8],0x83
  4378b7:	inc    DWORD PTR ss:[eax]
  4378ba:	inc    DWORD PTR [edx]
  4378bc:	(bad)  
  4378bd:	push   DWORD PTR [edx+0x115c00c4]
  4378c3:	inc    edi
  4378c4:	or     bh,bh
  4378c6:	add    cl,ch
  4378c8:	or     DWORD PTR [ecx-0x33db00],0xffffffab
  4378cf:	jl     0x4378d0
  4378d1:	lock lock add eax,0xdeff834f
  4378d8:	cmp    edi,0x0
  4378db:	mov    ecx,0xcefcffcc
  4378e0:	sub    DWORD PTR [esi+0xe04bb5],0xffffffcc
  4378e7:	or     esp,ecx
  4378e9:	inc    DWORD PTR [ebx+0x6c000032]
  4378ef:	out    dx,al
  4378f0:	cmp    DWORD PTR [ebx],0x66
  4378f3:	xchg   DWORD PTR [edi-0x1],eax
  4378f6:	add    BYTE PTR [ecx],ah
  4378f8:	(bad)  
  4378f9:	(bad)  
  4378fa:	jmp    FWORD PTR [edx-0x1]
  4378fd:	jmp    FWORD PTR [esi+ebp*2-0x77]
  437901:	cwde   
  437902:	jbe    0x437892
  437904:	lahf   
  437905:	add    bh,bh
  437907:	arpl   WORD PTR [eax],ax
  437909:	add    bh,bh
  43790b:	mov    eax,DWORD PTR [eax]
  43790d:	push   DWORD PTR [edx-0x75aff4e]
  437913:	mov    eax,0x783ff60
  437918:	add    bh,bh
  43791a:	jmp    FWORD PTR [edx-0x1]
  43791d:	int3   
  43791e:	mov    ds:0x814aff5d,al
  437923:	pop    edi
  437924:	adc    eax,0xdaff89
  437929:	inc    DWORD PTR [eax]
  43792b:	ins    DWORD PTR es:[edi],dx
  43792c:	mov    esp,ecx
  43792e:	xchg   ebp,eax
  43792f:	mov    ebp,0xa15d44ff
  437934:	sbb    eax,0xff1aff00
  437939:	add    BYTE PTR [eax],al
  43793b:	outs   dx,BYTE PTR ds:[esi]
  43793c:	(bad)  
  43793d:	dec    esp
  43793f:	fld    QWORD PTR [eax]
  437941:	mov    bh,0x3e
  437943:	dec    edx
  437944:	pushf  
  437945:	add    bh,bh
  437947:	sub    edi,edi
  437949:	add    DWORD PTR [ebx+0xdffff14],0x13
  437950:	int3   
  437951:	cwde   
  437952:	fmul   DWORD PTR [ebp-0x7100ff9b]
  437958:	mov    edi,edi
  43795a:	add    DWORD PTR [esi+0x0],0xffffffff
  43795e:	hlt    
  43795f:	jmp    0xffb3:0xfb6dc400
  437966:	add    BYTE PTR [edx-0x1],ah
  437969:	add    ah,cl
  43796b:	scas   eax,DWORD PTR es:[edi]
  43796c:	(bad)  
  43796d:	call   DWORD PTR [edi+0x49460045]
  437973:	fst    DWORD PTR [eax+eax*1-0xfff301]
  43797a:	add    BYTE PTR [ebp-0x7b1f7c7d],dh
  437980:	sbb    DWORD PTR [edi-0x7637ebcc],0x0
  437987:	dec    ebx
  437988:	(bad)  
  437989:	(bad)  
  43798a:	(bad)  
  43798b:	fild   WORD PTR [ebx-0xde6d01]
  437991:	and    edi,DWORD PTR [edi-0x42fa]
  437997:	inc    esi
  437998:	(bad)  
  437999:	(bad)  
  43799a:	dec    DWORD PTR [eax]
  43799c:	inc    DWORD PTR [ebx-0x21fff831]
  4379a2:	xchg   edx,eax
  4379a3:	mov    WORD PTR [edx-0x1],ss
  4379a6:	mov    DWORD PTR [edx+0x630000ff],edx
  4379ac:	mov    DWORD PTR [eax],eax
  4379ae:	add    bh,cl
  4379b0:	cmp    DWORD PTR [edx-0x6316e3],0xffffffcc
  4379b7:	jp     0x4379b9
  4379b9:	inc    DWORD PTR [eax]
  4379bb:	je     0x4379bc
  4379bd:	mov    esi,eax
  4379bf:	inc    eax
  4379c0:	add    BYTE PTR [eax],bh
  4379c2:	addr16 loope 0x4379aa
  4379c5:	(bad)  
  4379c6:	call   eax
  4379c8:	add    DWORD PTR [eax],0xffffffff
  4379cb:	inc    ebp
  4379cc:	(bad)  
  4379cd:	(bad)  
  4379ce:	fild   DWORD PTR [ecx-0x6e75034]
  4379d4:	sub    DWORD PTR [eax],eax
  4379d6:	int3   
  4379d7:	and    eax,DWORD PTR [eax]
  4379d9:	inc    DWORD PTR [eax]
  4379db:	pop    esi
  4379dc:	add    bh,bh
  4379de:	mov    eax,ds:0x6922ff52
  4379e3:	jnp    0x437a39
  4379e5:	(bad)  
  4379e6:	call   ebp
  4379e8:	inc    DWORD PTR [eax]
  4379ea:	mov    DWORD PTR [ebx-0x7d],edx
  4379ed:	add    BYTE PTR [esi],ch
  4379ef:	mov    bl,0x89
  4379f1:	adc    DWORD PTR [eax+0x70],eax
  4379f4:	add    BYTE PTR [eax],0x0
  4379f7:	or     eax,0xaff0000
  4379fc:	inc    DWORD PTR [eax]
  4379fe:	lods   al,BYTE PTR ds:[esi]
  4379ff:	jae    0x437a00
  437a01:	popf   
  437a02:	iret   
  437a03:	fbld   TBYTE PTR [ebp-0x76690100]
  437a09:	mov    DWORD PTR [eax],eax
  437a0b:	jle    0x4379d9
  437a0d:	add    BYTE PTR [ecx-0x27],dl
  437a10:	dec    DWORD PTR [edi]
  437a12:	outs   dx,DWORD PTR ds:[esi]
  437a13:	pop    ebx
  437a14:	dec    esi
  437a15:	dec    DWORD PTR [ecx-0xff98]
  437a1b:	das    
  437a1c:	(bad)  
  437a1d:	push   DWORD PTR ds:0x2fc98996
  437a23:	shl    BYTE PTR [edx-0x1],1
  437a26:	inc    DWORD PTR [edx+0x4ffff00]
  437a2c:	add    bh,bh
  437a2e:	mov    ecx,0xe97c8311
  437a33:	mov    edi,0xcbffff26
  437a38:	inc    DWORD PTR [eax]
  437a3a:	jmp    edi
  437a3c:	int3   
  437a3d:	call   DWORD PTR [eax]
  437a3f:	mov    esp,0xcdecfb00
  437a44:	cmp    al,0xff
  437a46:	cmp    ebp,0x0
  437a49:	mov    edi,edi
  437a4b:	test   DWORD PTR [ebx-0x11c600],0x70b2ff46
  437a55:	add    bh,bh
  437a57:	(bad)  
  437a58:	dec    DWORD PTR [ecx+0xd700]
  437a5e:	and    DWORD PTR [esi],edi
  437a60:	dec    DWORD PTR [ebx-0xd62f1c]
  437a66:	add    BYTE PTR [eax],bl
  437a68:	add    bh,bh
  437a6a:	int3   
  437a6b:	std    
  437a6c:	add    BYTE PTR [eax],al
  437a6e:	sbb    BYTE PTR [esi-0x34],0xf4
  437a72:	mov    ch,0xc3
  437a74:	jne    0x437a75
  437a76:	add    BYTE PTR [ebp+0x58ff00ff],ah
  437a7c:	add    BYTE PTR [eax],al
  437a7e:	nop
  437a7f:	fdivp  st(7),st
  437a81:	add    DWORD PTR ds:0xff83f30c,eax
  437a87:	inc    edi
  437a88:	inc    DWORD PTR [eax]
  437a8a:	int3   
  437a8b:	enter  0x8983,0xbc
  437a8f:	xor    BYTE PTR [ecx+0x2f087757],cl
  437a95:	inc    DWORD PTR [eax]
  437a97:	jp     0x437a98
  437a99:	inc    DWORD PTR [eax]
  437a9b:	jae    0x437a26
  437a9d:	add    BYTE PTR [esi],ch
  437a9f:	(bad)  
  437aa0:	push   ebx
  437aa2:	sbb    edi,DWORD PTR [edx]
  437aa4:	ins    BYTE PTR es:[edi],dx
  437aa5:	add    DWORD PTR [eax],0x6f
  437aa8:	(bad)  
  437aa9:	inc    DWORD PTR [eax]
  437aab:	scas   eax,DWORD PTR es:[edi]
  437aac:	add    BYTE PTR [ecx-0x61ffe1a0],cl
  437ab2:	retf   0x8837
  437ab5:	add    BYTE PTR [eax],al
  437ab7:	(bad)  
  437ab8:	(bad)  
  437ab9:	dec    DWORD PTR [ecx+0x788900f5]
  437abf:	inc    esi
  437ac0:	add    ch,ch
  437ac2:	and    eax,0xcc00b08c
  437ac7:	inc    DWORD PTR ss:[eax]
  437aca:	(bad)  
  437acb:	mov    esi,0xc89effff
  437ad0:	call   FWORD PTR [edi]
  437ad2:	xchg   ecx,eax
  437ad3:	push   edx
  437ad4:	xchg   esp,eax
  437ad5:	inc    DWORD PTR [eax]
  437ad7:	(bad)  
  437ad8:	int3   
  437ad9:	inc    DWORD PTR [eax]
  437adb:	ds (bad) 
  437add:	inc    DWORD PTR [edi-0x58]
  437ae0:	add    BYTE PTR [ebp+0x15],dh
  437ae3:	ret    
  437ae4:	mov    bh,bh
  437ae6:	add    BYTE PTR [ebp-0x1],ch
  437ae9:	int3   
  437aea:	add    BYTE PTR [esi+0x0],dh
  437aed:	xor    DWORD PTR [eax],0xffffffcf
  437af0:	call   FWORD PTR [ebx*1-0xb369]
  437af7:	push   ecx
  437af8:	(bad)  
  437af9:	inc    DWORD PTR [ebx-0x3dff3323]
  437aff:	dec    DWORD PTR ds:[eax]
  437b02:	aaa    
  437b03:	jnp    0x437b35
  437b05:	int3   
  437b06:	push   edx
  437b08:	cmp    edi,0xffffffff
  437b0b:	add    DWORD PTR [eax],0x83b47a00
  437b11:	cld    
  437b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b13:	and    ch,BYTE PTR [edx-0x1]
  437b16:	jmp    DWORD PTR [edi+edi*8-0x7c3f0100]
  437b1d:	jmp    FWORD PTR [edx+0x6e]
  437b20:	int3   
  437b21:	dec    ecx
  437b22:	iret   
  437b23:	call   DWORD PTR [ebx+eax*4-0x77]
  437b27:	cmp    bh,bh
  437b29:	dec    esp
  437b2b:	out    dx,al
  437b2c:	(bad)  
  437b2d:	inc    esp
  437b2f:	cmp    eax,0x27a382ff
  437b34:	sub    BYTE PTR [eax],al
  437b36:	mov    ebp,esi
  437b38:	inc    DWORD PTR [eax]
  437b3a:	mov    DWORD PTR [ebx+0x0],ebx
  437b3d:	inc    DWORD PTR [ebx]
  437b3f:	fdivp  st(7),st
  437b41:	push   esi
  437b42:	in     eax,dx
  437b43:	fdivp  st(3),st
  437b45:	add    BYTE PTR [eax],al
  437b47:	push   ebp
  437b48:	add    bh,bh
  437b4a:	add    BYTE PTR [ebp-0x1],ch
  437b4d:	inc    eax
  437b4f:	lods   al,BYTE PTR ds:[esi]
  437b50:	jmp    FWORD PTR [eax-0x57]
  437b53:	mov    cl,0xb2
  437b55:	dec    esp
  437b57:	mov    ecx,0x78ff8300
  437b5c:	(bad)  
  437b5d:	jmp    DWORD PTR [eax+ecx*1-0x1]
  437b61:	push   ss
  437b62:	je     0x437afe
  437b64:	and    al,0x0
  437b66:	add    BYTE PTR [ebp-0x1],bh
  437b69:	add    bh,bh
  437b6b:	jmp    0x9e10ff3c
  437b70:	add    BYTE PTR [ebx],bl
  437b72:	push   ds
  437b73:	push   ss
  437b74:	aaa    
  437b75:	add    bh,bh
  437b77:	addr16 int3 
  437b79:	add    ah,cl
  437b7b:	fwait
  437b7c:	add    bh,bh
  437b7e:	cmc    
  437b7f:	mov    dl,0xff
  437b81:	das    
  437b82:	adc    dl,BYTE PTR [esi+0x2effffe1]
  437b88:	inc    DWORD PTR [ebx-0x33af01]
  437b8e:	aaa    
  437b8f:	and    eax,0x6149e7cc
  437b94:	lods   al,BYTE PTR ds:[esi]
  437b95:	add    bh,bh
  437b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437b98:	add    BYTE PTR [eax],al
  437b9a:	inc    DWORD PTR [eax]
  437b9c:	add    DWORD PTR [eax],0xfffffff8
  437b9f:	stos   DWORD PTR es:[edi],eax
  437ba0:	add    al,cl
  437ba2:	dec    edx
  437ba3:	push   ds
  437ba4:	sti    
  437ba5:	int3   
  437ba6:	dec    DWORD PTR [edx+0x7cffff00]
  437bac:	add    DWORD PTR [eax],0xffffff87
  437baf:	push   edi
  437bb0:	mov    DWORD PTR [eax+eiz*4+0x6f],ebx
  437bb4:	add    edi,edi
  437bb6:	add    BYTE PTR [eax+eax*1-0x1],dh
  437bba:	call   DWORD PTR [edx+0xe948300]
  437bc0:	call   FWORD PTR [esi+0x1b]
  437bc3:	xlat   BYTE PTR ds:[ebx]
  437bc4:	sub    eax,0xcc24ff83
  437bc9:	(bad)  
  437bca:	dec    DWORD PTR [edi+0x0]
  437bcd:	xor    DWORD PTR [ebx],0xfffffff3
  437bd0:	add    BYTE PTR [edi-0x90bbf0],dh
  437bd6:	(bad)  
  437bd7:	cmp    al,0x0
  437bd9:	dec    DWORD PTR [ecx-0x6ff0004]
  437bdf:	pop    esp
  437be0:	push   DWORD PTR [ecx+0x66]
  437be3:	or     BYTE PTR [eax-0x76e30077],ch
  437be9:	dec    esp
  437beb:	jp     0x437bec
  437bed:	xor    ecx,0x7
  437bf0:	(bad)  
  437bf1:	jp     0x437c13
  437bf3:	adc    BYTE PTR [ecx+ecx*4-0x3300d934],dh
  437bfa:	add    edi,0xffffffff
  437bfd:	add    bl,al
  437bff:	scas   eax,DWORD PTR es:[edi]
  437c00:	sbb    ebx,0x13
  437c03:	mov    bh,BYTE PTR [esi-0x1]
  437c06:	mov    DWORD PTR [ecx-0x77],ebx
  437c09:	(bad)  
  437c0a:	(bad)  
  437c0b:	(bad)  
  437c0d:	push   DWORD PTR [edi-0x7a0f7c54]
  437c13:	push   es
  437c14:	mov    ecx,0x2400ff
  437c19:	add    ah,cl
  437c1b:	test   edi,edi
  437c1d:	add    BYTE PTR [edi+0x7f],cl
  437c20:	mov    DWORD PTR [eax-0x71],eax
  437c23:	jle    0x437c5d
  437c25:	int3   
  437c26:	add    BYTE PTR [edi+edi*8-0x1],ch
  437c2a:	add    bl,bl
  437c2c:	mov    edi,edi
  437c2e:	clc    
  437c2f:	pop    ebp
  437c30:	and    edx,0x5b
  437c33:	mov    ds:0xa00ffdc,eax
  437c38:	add    DWORD PTR [ebx-0xffb734],0x60
  437c3f:	pop    eax
  437c40:	add    BYTE PTR [esi],cl
  437c42:	adc    DWORD PTR [ecx],esp
  437c44:	jnp    0x437bc9
  437c46:	add    BYTE PTR [ecx+0x0],ch
  437c49:	dec    DWORD PTR [ecx-0x51007687]
  437c4f:	js     0x437c50
  437c51:	inc    eax
  437c52:	sub    ebp,DWORD PTR ds:0xd2ffff8b
  437c58:	add    BYTE PTR [ebx+0x17ff],al
  437c5e:	sbb    al,0xca
  437c60:	(bad)  
  437c61:	jg     0x437cba
  437c63:	ss push 0x0
  437c66:	dec    eax
  437c68:	(bad)  
  437c69:	inc    DWORD PTR [eax]
  437c6b:	retf   0xffff
  437c6e:	bound  ecx,QWORD PTR [ebp-0x7bb46500]
  437c74:	jle    0x437c75
  437c76:	or     DWORD PTR [ebp-0x77],0xffffffff
  437c7a:	call   DWORD PTR [ebx-0x1]
  437c7d:	(bad)  
  437c7e:	aas    
  437c7f:	mov    ds:0x419a98ff,eax
  437c84:	enter  0x83ff,0x7b
  437c88:	(bad)  
  437c89:	inc    DWORD PTR [eax]
  437c8b:	ret    0x89
  437c8e:	repz add eax,0x6a401900
  437c94:	dec    ecx
  437c95:	add    bh,bh
  437c97:	popa   
  437c98:	(bad)  
  437c99:	dec    esp
  437c9b:	es add bh,bh
  437c9e:	push   ds
  437c9f:	aad    0x83
  437ca1:	fidiv  WORD PTR [esi-0x7fc]
  437ca7:	mov    BYTE PTR [eax],0x0
  437caa:	add    BYTE PTR [edi+edi*8],dh
  437cad:	add    BYTE PTR [edi+0x43],dl
  437cb0:	adc    ecx,0x56
  437cb3:	cld    
  437cb4:	sbb    eax,0x8391ffff
  437cb9:	(bad)  
  437cba:	dec    DWORD PTR [ecx-0x3d4aff01]
  437cc0:	add    BYTE PTR [eax-0x76335ab4],al
  437cc6:	call   FWORD PTR [esi-0x34]
  437cc9:	cmp    edi,0x3c
  437ccc:	mov    esp,ecx
  437cce:	sahf   
  437ccf:	das    
  437cd0:	jmp    FWORD PTR [ecx-0x283b89]
  437cd6:	add    cl,cl
  437cd8:	add    BYTE PTR [ecx-0xff7e01],cl
  437cde:	pop    esp
  437cdf:	mov    bl,0xcc
  437ce1:	dec    eax
  437ce2:	cmp    BYTE PTR [edx-0x1],0xcc
  437ce6:	cmp    DWORD PTR [edx-0x1],0xffffffff
  437cea:	sub    DWORD PTR [esi-0x43a20000],0xffffffcc
  437cf1:	jb     0x437d39
  437cf3:	je     0x437d33
  437cf5:	cmp    edi,0x18
  437cf8:	add    bh,bh
  437cfa:	dec    DWORD PTR [esi+0x82dffff]
  437d00:	jmp    FWORD PTR [edx]
  437d02:	xor    al,0x41
  437d04:	add    al,0x0
  437d06:	mov    DWORD PTR [eax-0x34],ecx
  437d09:	dec    esp
  437d0b:	or     DWORD PTR [eax],eax
  437d0d:	add    BYTE PTR [ebx+0x45],dl
  437d10:	cmp    DWORD PTR [ebx-0x73],0xffffff8a
  437d14:	jecxz  0x437ce2
  437d16:	add    dl,bl
  437d18:	inc    DWORD PTR [eax]
  437d1a:	jmp    DWORD PTR [edi-0x7d]
  437d1d:	call   ecx
  437d1f:	push   eax
  437d20:	int3   
  437d21:	or     BYTE PTR [edx+ebx*4],bh
  437d24:	or     DWORD PTR [eax],eax
  437d26:	add    ch,ah
  437d28:	add    bh,bh
  437d2a:	call   DWORD PTR [esi]
  437d2c:	(bad)  
  437d2d:	push   ecx
  437d2f:	mov    WORD PTR [eax],es
  437d31:	lods   al,BYTE PTR ds:[esi]
  437d32:	bound  esi,QWORD PTR [ecx+edi*4+0x0]
  437d36:	add    BYTE PTR [ecx],al
  437d38:	add    bh,bh
  437d3a:	dec    eax
  437d3c:	inc    DWORD PTR [ebx-0x47cb67b]
  437d42:	push   es
  437d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437d44:	in     al,dx
  437d45:	inc    DWORD PTR [eax]
  437d47:	loope  0x437d15
  437d49:	cmp    edi,0xffffffcf
  437d4c:	dec    esp
  437d4e:	cmp    eax,0xf4fa001c
  437d53:	sub    BYTE PTR [edi],bh
  437d55:	add    BYTE PTR [ebx-0x7cf7],al
  437d5b:	daa    
  437d5c:	(bad)  
  437d5d:	dec    DWORD PTR [esp+eiz*2]
  437d60:	adc    edx,0xffffffe5
  437d63:	mov    al,0xc5
  437d65:	dec    esp
  437d67:	mov    dl,0x83
  437d69:	(bad)  
  437d6a:	dec    eax
  437d6c:	int3   
  437d6d:	dec    edi
  437d6f:	xor    edi,edi
  437d71:	lock xor eax,0x893678
  437d77:	cli    
  437d78:	add    ah,cl
  437d7a:	dec    ecx
  437d7c:	inc    DWORD PTR [eax]
  437d7e:	test   DWORD PTR [ecx+0x6c0585ff],edx
  437d84:	sti    
  437d85:	add    bh,bh
  437d87:	push   ebx
  437d88:	add    bh,bh
  437d8a:	add    dh,ch
  437d8c:	or     esp,0xffffffa0
  437d8f:	add    al,0xff
  437d91:	mov    eax,ds:0xffca111d
  437d96:	add    BYTE PTR [edi-0x1],bh
  437d99:	add    ah,cl
  437d9b:	add    BYTE PTR [eax],0xff
  437d9e:	(bad)  
  437d9f:	fdivp  st(7),st
  437da1:	pop    esi
  437da2:	push   DWORD PTR [esi]
  437da4:	ins    BYTE PTR es:[edi],dx
  437da5:	inc    DWORD PTR [ebx-0xfff8]
  437dab:	and    eax,0x995fffff
  437db0:	add    BYTE PTR [edi+eax*8],dl
  437db3:	out    0xeb,al
  437db5:	cmp    edi,0xffffff80
  437db8:	inc    DWORD PTR [ebx-0x9977]
  437dbe:	inc    edx
  437dbf:	add    BYTE PTR [eax],0xbe
  437dc2:	push   esi
  437dc3:	rcl    edi,1
  437dc5:	add    BYTE PTR [eax],al
  437dc7:	aam    0x83
  437dc9:	mov    esp,ecx
  437dcb:	cld    
  437dcc:	cmp    edi,0xffffffe4
  437dcf:	rol    DWORD PTR [ebx-0x101197d8],cl
  437dd5:	add    bh,bh
  437dd7:	mov    DWORD PTR [eax],0x710083
  437ddd:	inc    DWORD PTR [eax-0x5b777631]
  437de3:	fcomp  DWORD PTR [ecx]
  437de5:	cmp    edi,0xfffffff3
  437de8:	(bad)  
  437de9:	(bad)  
  437dea:	dec    DWORD PTR [ebx]
  437dec:	int3   
  437ded:	mov    DWORD PTR [ebp+0x8],esi
  437df0:	add    BYTE PTR [edi+0x76],al
  437df3:	inc    esi
  437df4:	scas   eax,DWORD PTR es:[edi]
  437df5:	(bad)  
  437df6:	push   DWORD PTR [ecx-0x1]
  437df9:	int3   
  437dfa:	add    BYTE PTR [ecx-0xe47ff01],dl
  437e00:	adc    DWORD PTR [edi],0xffffffe3
  437e03:	inc    ecx
  437e04:	or     eax,0xffe983cc
  437e09:	add    bh,bh
  437e0b:	sbb    al,0xff
  437e0d:	add    BYTE PTR [edx+eax*8],bl
  437e10:	add    BYTE PTR [edx],bh
  437e12:	mov    eax,0xff4843
  437e17:	cld    
  437e18:	int3   
  437e19:	inc    DWORD PTR [eax]
  437e1b:	sti    
  437e1c:	mov    DWORD PTR [eax],eax
  437e1e:	mov    BYTE PTR [esi],bl
  437e20:	add    BYTE PTR [ebx+ebx*4-0xfff333],dh
  437e27:	push   edi
  437e28:	add    DWORD PTR [ebx+0xfff500],0x35
  437e2f:	clc    
  437e30:	sub    DWORD PTR [esp+eax*1+0x3f],0xe
  437e35:	(bad)  
  437e36:	(bad)  
  437e37:	jl     0x437e39
  437e39:	mov    DWORD PTR [eax],eax
  437e3b:	imul   edi,edi,0x0
  437e3e:	leave  
  437e3f:	gs int3 
  437e41:	aaa    
  437e42:	test   al,0x3c
  437e44:	dec    edi
  437e45:	inc    DWORD PTR [eax]
  437e47:	or     al,0x0
  437e49:	dec    DWORD PTR [ecx-0x300ff71]
  437e4f:	in     al,0xcc
  437e51:	or     BYTE PTR [ecx],bl
  437e53:	sub    DWORD PTR [ecx+0x0],edi
  437e56:	add    DWORD PTR [edi+edi*8-0x8a7c77],0xffffffff
  437e5e:	cmp    eax,0xede80099
  437e63:	push   edi
  437e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437e65:	add    BYTE PTR [eax],al
  437e67:	push   edx
  437e68:	dec    esp
  437e6a:	inc    DWORD PTR [eax-0x549d3301]
  437e70:	call   DWORD PTR [ebp+ebx*1+0x24]
  437e74:	mov    BYTE PTR [eax],al
  437e76:	and    DWORD PTR [esi+0x2b0000cc],0x0
  437e7d:	add    BYTE PTR [edx+0x39958938],bl
  437e83:	test   dh,dh
  437e85:	add    bh,bh
  437e87:	cdq    
  437e88:	add    BYTE PTR [ebx-0x76ff0700],al
  437e8e:	sbb    ebx,DWORD PTR [edi+edi*8-0x1fa20975]
  437e95:	add    BYTE PTR [ecx+0xffff27],cl
  437e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  437e9c:	add    bh,bh
  437e9e:	sbb    BYTE PTR [ecx],dl
  437ea0:	add    BYTE PTR [ecx+0x6d2b49],bh
  437ea6:	int3   
  437ea7:	xchg   ebp,eax
  437ea8:	dec    esp
  437eaa:	add    BYTE PTR [ecx-0x1],al
  437ead:	call   ecx
  437eaf:	retf   0xb6ff
  437eb2:	or     BYTE PTR [ebx-0x537600f7],ah
  437eb8:	inc    DWORD PTR [eax]
  437eba:	add    BYTE PTR [edi+0x0],bh
  437ebd:	add    BYTE PTR ds:0x380eff9a,ch
  437ec3:	(bad)  
  437ec5:	(bad)  
  437ec6:	push   DWORD PTR [ebx-0x1]
  437ec9:	(bad)  
  437eca:	(bad)  
  437ecb:	cmp    eax,0xb444ffff
  437ed0:	add    BYTE PTR [ecx+0x2],dl
  437ed3:	(bad)  
  437ed4:	in     al,0x89
  437ed6:	add    BYTE PTR [esi-0x7d],cl
  437ed9:	or     DWORD PTR [ecx-0x65007cbf],0xfffffff4
  437ee0:	add    BYTE PTR ds:0xff7c5f00,dh
  437ee6:	add    bl,bh
  437ee8:	add    BYTE PTR [ebx-0x33f077],al
  437eee:	ins    BYTE PTR es:[edi],dx
  437eef:	mov    dh,0x83
  437ef1:	inc    ebp
  437ef2:	mov    ds:0xff8312bd,al
  437ef7:	iret   
  437ef8:	add    bh,bh
  437efa:	int3   
  437efb:	lock inc DWORD PTR [eax]
  437efe:	push   cs
  437eff:	mov    al,0x83
  437f01:	pop    edx
  437f02:	aas    
  437f03:	mov    al,0xcf
  437f05:	(bad)  
  437f06:	dec    DWORD PTR [eax+0x15ffffff]
  437f0c:	add    DWORD PTR [eax],0xffffffe0
  437f0f:	clc    
  437f10:	add    cl,dl
  437f12:	dec    eax
  437f13:	push   eax
  437f14:	cmp    edi,0xffffff89
  437f17:	jmp    0xffff:0xe7cc8300
  437f1e:	xor    edx,esi
  437f20:	int3   
  437f21:	xchg   esi,eax
  437f22:	sub    BYTE PTR [edx],dh
  437f24:	idiv   bh
  437f26:	call   DWORD PTR [ecx]
  437f28:	inc    DWORD PTR [eax]
  437f2a:	push   DWORD PTR [edx-0x1]
  437f2d:	(bad)  
  437f2e:	jg     0x437f1f
  437f30:	jmp    DWORD PTR [ebx-0x75cf7f]
  437f36:	add    BYTE PTR [edi+0x6dff0000],bl
  437f3c:	int3   
  437f3d:	dec    DWORD PTR [eax]
  437f3f:	out    0x0,al
  437f41:	ret    0x2f5d
  437f44:	out    0xff,al
  437f46:	dec    esi
  437f48:	add    bh,bh
  437f4a:	int3   
  437f4b:	and    al,BYTE PTR [eax]
  437f4d:	call   DWORD PTR [esi+ecx*4-0x166aa777]
  437f54:	std    
  437f55:	cmp    edi,0xffffffbe
  437f58:	int3   
  437f59:	int3   
  437f5a:	xor    DWORD PTR [edx-0x1ad90001],0x0
  437f61:	(bad)  
  437f62:	aam    0x8b
  437f64:	sub    bh,bh
  437f66:	int3   
  437f67:	ins    DWORD PTR es:[edi],dx
  437f68:	(bad)  
  437f69:	dec    DWORD PTR [ecx-0x1d003343]
  437f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  437f70:	add    BYTE PTR [edi+0x42],al
  437f73:	mov    edi,0x67cc89c5
  437f78:	cmp    edi,0xffffffff
  437f7b:	fs or  esp,0xffffffb0
  437f7f:	add    BYTE PTR fs:[esi+0xc3e214],ch
  437f86:	add    bl,ah
  437f88:	int3   
  437f89:	add    BYTE PTR [eax],al
  437f8b:	je     0x437f8c
  437f8d:	push   eax
  437f8f:	jne    0x437f90
  437f91:	mov    ebp,0xff0ea4
  437f97:	or     DWORD PTR [ebx-0x7f0077],eax
  437f9d:	(bad)  
  437f9e:	jle    0x437fe3
  437fa0:	mov    DWORD PTR [edx-0x8],eax
  437fa3:	int    0x3d
  437fa5:	(bad)  
  437fa6:	call   DWORD PTR [ecx-0x1]
  437fa9:	(bad)  
  437faa:	push   DWORD PTR [edi+edi*8-0x7c07fb01]
  437fb1:	adc    al,0xe2
  437fb3:	sub    ch,BYTE PTR [ebx-0x7d]
  437fb6:	dec    DWORD PTR [eax]
  437fb8:	add    ah,cl
  437fba:	sbb    edi,0x0
  437fbd:	mov    DWORD PTR [eax+0x50],eax
  437fc0:	call   FWORD PTR [ebx]
  437fc2:	lock cmp BYTE PTR [ebx-0x7d],al
  437fc6:	int3   
  437fc7:	add    BYTE PTR [eax],0x0
  437fca:	int3   
  437fcb:	or     ah,0x83
  437fce:	pop    edx
  437fcf:	sar    edi,cl
  437fd1:	dec    edi
  437fd2:	neg    al
  437fd4:	pop    ss
  437fd5:	cmp    edi,0x7c
  437fd8:	add    DWORD PTR [eax],0xffffffff
  437fdb:	in     al,0x0
  437fdd:	add    BYTE PTR [edi-0x4f],dl
  437fe0:	push   ebp
  437fe2:	adc    ebp,0x5ff005c
  437fe8:	or     DWORD PTR [ecx-0x7c7b00],0x2c
  437fef:	lds    eax,FWORD PTR [eax]
  437ff1:	sti    
  437ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437ff3:	adc    ch,al
  437ff5:	int3   
  437ff6:	add    ch,bl
  437ff8:	dec    DWORD PTR [ecx-0x7c004501]
  437ffe:	outs   dx,DWORD PTR ds:[esi]
  437fff:	jmp    0x3f:0xf7ac0183
  438006:	mov    DWORD PTR [eax-0x527c0100],esp
  43800c:	(bad)  
  43800d:	dec    ecx
  43800f:	dec    eax
  438010:	add    dl,dl
  438012:	cs push esp
  438014:	or     BYTE PTR [ecx-0x76fe01],0xff
  43801b:	nop
  43801c:	int3   
  43801d:	add    BYTE PTR [eax],dh
  43801f:	and    eax,0xaeee2b00
  438024:	stc    
  438025:	add    bh,bh
  438027:	and    eax,0x59cccccc
  43802c:	add    BYTE PTR [eax],al
  43802e:	or     bh,BYTE PTR [eax+0x0]
  438031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438032:	xchg   edx,eax
  438033:	aaa    
  438034:	dec    edx
  438035:	inc    DWORD PTR [ebx-0x2c]
  43803b:	pop    es
  43803c:	inc    DWORD PTR [eax]
  43803e:	int3   
  43803f:	ja     0x438040
  438041:	pop    edx
  438042:	mov    esp,0xff009724
  438047:	hlt    
  438048:	mov    DWORD PTR [ebx-0x4001],eax
  43804e:	mov    eax,ds:0x68fd83e3
  438053:	imul   ebx,DWORD PTR [ecx+0x7c00ff],0xffffffff
  43805a:	sub    DWORD PTR [eax],0xffffffff
  43805d:	add    BYTE PTR [ecx],bl
  43805f:	mov    edi,edi
  438061:	in     eax,0xd3
  438063:	addr16 push eax
  438065:	int3   
  438066:	inc    DWORD PTR [ebx-0x7d]
  438069:	mov    edi,edi
  43806b:	jnp    0x437ff0
  43806d:	add    BYTE PTR [ecx+ebx*4],ch
  438070:	int3   
  438071:	add    bh,bh
  438073:	nop
  438074:	int3   
  438075:	hlt    
  438076:	out    0x8f,eax
  438078:	dec    DWORD PTR [ecx-0x13009e01]
  43807e:	int    0xb3
  438080:	cmp    edi,0x0
  438083:	cmp    bh,bh
  438085:	and    bl,BYTE PTR [ebp-0x7cff0010]
  43808b:	mov    ds:0x4753faff,eax
  438090:	add    bh,bh
  438092:	call   DWORD PTR [eax-0x7db77101]
  438098:	dec    DWORD PTR [ecx+0x1bcc9000]
  43809e:	push   ss
  43809f:	ins    DWORD PTR es:[edi],dx
  4380a0:	add    bh,bh
  4380a2:	call   DWORD PTR [edx-0x83f7001]
  4380a8:	add    ah,cl
  4380aa:	add    DWORD PTR [ebx],0xffffff83
  4380ad:	pop    ecx
  4380ae:	repz jecxz 0x4380b0
  4380b1:	inc    DWORD PTR [eax]
  4380b3:	push   0xd910a7ff
  4380b8:	(bad)  
  4380b9:	(bad)  
  4380ba:	push   DWORD PTR [edi+edi*8+0x63]
  4380be:	aad    0xfc
  4380c0:	dec    esp
  4380c2:	or     DWORD PTR [ecx-0x77],0x60
  4380c6:	adc    eax,0xffccff3c
  4380cb:	push   ds
  4380cc:	sbb    DWORD PTR [edx+0x3],0xffffff97
  4380d0:	(bad)  
  4380d1:	(bad)  
  4380d2:	call   FWORD PTR [edi-0x1]
  4380d5:	add    eax,0x830001bc
  4380da:	add    bh,dh
  4380dc:	inc    DWORD PTR [edi-0x33004b5f]
  4380e2:	dec    DWORD PTR [ebp-0x34]
  4380e5:	mov    eax,ds:0xff8959e9
  4380ea:	cmp    DWORD PTR [ecx+0xd97becc],0xffffffff
  4380f1:	dec    DWORD PTR [ecx-0xa7d7c4d]
  4380f7:	xchg   ebp,eax
  4380f8:	int3   
  4380f9:	add    BYTE PTR [ecx-0x59ed00cf],cl
  4380ff:	jo     0x438100
  438101:	(bad)  
  438102:	push   DWORD PTR [ebp-0x7df8cf01]
  438108:	inc    DWORD PTR [eax]
  43810a:	sub    DWORD PTR [ebp-0x1],0x5f
  43810e:	xchg   esp,eax
  43810f:	clc    
  438110:	add    bh,bh
  438112:	(bad)  
  438113:	mov    ebx,0x27281d83
  438118:	(bad)  
  438119:	(bad)  
  43811a:	jmp    FWORD PTR ds:0x906b82ff
  438120:	add    DWORD PTR [eax],0xffffffcc
  438123:	nop
  438124:	(bad)  
  438125:	fsub   DWORD PTR [ebx]
  438127:	pop    esp
  438128:	cmp    edi,0xffffff83
  43812b:	mov    dh,0xff
  43812d:	dec    DWORD PTR [ecx-0x2]
  438130:	add    BYTE PTR [ebx+0x23ff71ff],al
  438136:	cmp    al,0x50
  438138:	int3   
  438139:	(bad)  
  43813a:	call   DWORD PTR [esi-0x7d]
  43813d:	mov    eax,ds:0xcc00e838
  438142:	add    BYTE PTR [edx],bh
  438144:	call   eax
  438146:	or     edi,DWORD PTR [esi-0x50ff767d]
  43814c:	int3   
  43814d:	mov    cl,0xd1
  43814f:	ins    DWORD PTR es:[edi],dx
  438150:	inc    DWORD PTR [eax]
  438152:	push   DWORD PTR [ebp+0x56888b00]
  438158:	(bad)  
  438159:	(bad)  
  43815a:	dec    DWORD PTR [edx]
  43815c:	jmp    FWORD PTR [ebp+0xff10cf]
  438162:	call   DWORD PTR [ecx]
  438164:	jmp    DWORD PTR [eax-0xff698b]
  43816a:	(bad)  
  43816b:	out    dx,al
  43816c:	int3   
  43816d:	cmp    BYTE PTR [ecx+0x4c],0x83
  438171:	add    BYTE PTR [eax],al
  438173:	in     eax,dx
  438174:	sub    DWORD PTR [ebp-0xffc5c0],0xffffffff
  43817b:	sti    
  43817c:	add    DWORD PTR ds:0x89ff04a5,0xffffffff
  438183:	inc    ebp
  438184:	call   DWORD PTR [ebp-0x43]
  438187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438188:	(bad)  
  438189:	inc    DWORD PTR [eax]
  43818b:	(bad)  
  43818d:	dec    ebp
  43818e:	stos   DWORD PTR es:[edi],eax
  43818f:	fdivp  st(7),st
  438191:	add    bh,bh
  438193:	or     al,BYTE PTR [eax]
  438195:	retf   0x1c98
  438198:	cmp    edi,0xffffffff
  43819b:	repz (bad) 
  43819d:	ds loope 0x43812a
  4381a0:	(bad)  
  4381a1:	inc    DWORD PTR [eax]
  4381a3:	jae    0x4381a4
  4381a5:	repnz bswap eax
  4381a8:	add    ah,cl
  4381aa:	cmp    DWORD PTR [eax],0xffffffff
  4381ad:	outs   dx,DWORD PTR ds:[esi]
  4381ae:	pop    bx
  4381b0:	int3   
  4381b1:	inc    DWORD PTR [eax]
  4381b3:	fadd   QWORD PTR [ebx+0xa68e9f]
  4381b9:	inc    DWORD PTR [eax]
  4381bb:	adc    eax,0x952ee00
  4381c0:	add    BYTE PTR [eax],al
  4381c2:	push   DWORD PTR [ecx]
  4381c4:	jmp    DWORD PTR [esi+0x56]
  4381c7:	jmp    0xfc4381cb
  4381cc:	call   ebx
  4381ce:	add    al,0xaa
  4381d0:	int3   
  4381d1:	add    ah,cl
  4381d3:	ins    BYTE PTR es:[edi],dx
  4381d4:	(bad)  
  4381d5:	clc    
  4381d6:	aaa    
  4381d7:	or     bh,bh
  4381d9:	add    bh,bh
  4381db:	cmp    ecx,esp
  4381dd:	dec    eax
  4381de:	in     eax,0x93
  4381e0:	add    BYTE PTR [eax],al
  4381e2:	call   DWORD PTR [edx-0x32f0af77]
  4381e8:	(bad)  
  4381e9:	(bad)  
  4381ea:	dec    esp
  4381ec:	mov    esp,ebp
  4381ee:	(bad)  
  4381ef:	(bad)  
  4381f0:	inc    DWORD PTR [ebx-0x4008877]
  4381f6:	jnp    0x4381ce
  4381f8:	cmp    edi,0xffffff83
  4381fb:	push   0xabcc8a89
  438200:	add    bh,bh
  438202:	mov    DWORD PTR [edx-0x3df3cf01],ebp
  438208:	(bad)  
  438209:	dec    esp
  43820b:	pop    eax
  43820c:	jmp    FWORD PTR [edi]
  43820e:	dec    ecx
  43820f:	(bad)  
  438211:	dec    DWORD PTR [ecx-0x532eff4a]
  438217:	or     ah,0x0
  43821a:	(bad)  
  43821b:	fild   DWORD PTR [eax]
  43821d:	std    
  43821e:	cld    
  43821f:	into   
  438220:	add    BYTE PTR [eax],al
  438222:	add    BYTE PTR [ecx-0x7d],dh
  438225:	push   edi
  438226:	sbb    al,0x76
  438228:	add    BYTE PTR [ebx+0x2aff4b00],al
  43822e:	push   es
  43822f:	sbb    BYTE PTR [eax],al
  438231:	add    BYTE PTR [eax],al
  438233:	js     0x438235
  438235:	arpl   WORD PTR [esi-0x4f],bx
  438238:	add    bh,bh
  43823a:	mov    esp,edx
  43823c:	jmp    esp
  43823e:	xchg   dh,ah
  438240:	add    bh,bh
  438242:	call   DWORD PTR [eax+eax*1+0x465391]
  438249:	(bad)  
  43824a:	push   DWORD PTR [edx+0x34ec4c00]
  438250:	(bad)  
  438251:	dec    DWORD PTR [ecx-0x6a1b001e]
  438257:	(bad)  
  438258:	(bad)  
  438259:	(bad)  
  43825a:	inc    DWORD PTR [esi-0x632b1f00]
  438260:	add    bh,bh
  438262:	add    BYTE PTR [edi+edi*8+0xf],bl
  438266:	xor    ah,ch
  438268:	add    DWORD PTR [eax],0xffffffff
  43826b:	repnz call FWORD PTR [eax]
  43826e:	ret    0xff44
  438271:	dec    DWORD PTR [ecx+0x2090831d]
  438277:	push   es
  438278:	inc    DWORD PTR [eax]
  43827a:	(bad)  
  43827b:	std    
  43827c:	int3   
  43827d:	dec    esi
  43827e:	fwait
  43827f:	test   DWORD PTR [eax],eax
  438281:	(bad)  
  438282:	(bad)  
  438283:	jp     0x438284
  438285:	dec    ebp
  438286:	add    ch,BYTE PTR [ebx]
  438288:	add    ah,cl
  43828a:	jmp    DWORD PTR [esi+0x698bfbcc]
  438290:	add    DWORD PTR [eax],0xffffffff
  438293:	pop    ebp
  438294:	sbb    esi,0x64
  438297:	test   DWORD PTR [eax],eax
  438299:	int3   
  43829a:	xor    DWORD PTR [ebx],0xffffffff
  43829d:	stc    
  43829e:	dec    edx
  43829f:	dec    ebp
  4382a0:	inc    DWORD PTR [eax]
  4382a2:	dec    DWORD PTR [ebx-0x1]
  4382a5:	jae    0x43823c
  4382a7:	jns    0xaf8330
  4382ad:	xadd   DWORD PTR [esi-0x1],ebx
  4382b1:	add    BYTE PTR [eax],al
  4382b3:	xlat   BYTE PTR ds:[ebx]
  4382b4:	add    ch,cl
  4382b6:	sub    ecx,DWORD PTR [ebx-0x3eff337d]
  4382bc:	add    BYTE PTR [eax+eax*2-0x6b],dl
  4382c0:	dec    DWORD PTR [ecx-0x4d7cd600]
  4382c6:	cmp    al,0x77
  4382c8:	cmp    edi,0x0
  4382cb:	inc    eax
  4382cc:	add    DWORD PTR [eax-0x5b],0xffffffd0
  4382d0:	int3   
  4382d1:	inc    DWORD PTR [ebx-0x11a700ca]
  4382d7:	pushf  
  4382d8:	add    BYTE PTR [ebx+0xfff4c00],al
  4382de:	xchg   BYTE PTR fs:[eax],al
  4382e1:	add    bh,bh
  4382e3:	jmp    0x533a9d6b
  4382e8:	add    BYTE PTR [eax],al
  4382ea:	jmp    DWORD PTR [edi]
  4382ec:	sub    eax,0xffffffd1
  4382ef:	test   bh,bh
  4382f1:	or     DWORD PTR [ecx+0x2840893e],0xffffffd6
  4382f8:	inc    DWORD PTR [ebx-0x26006334]
  4382fe:	jmp    DWORD PTR [eax+0x0]
  438301:	(bad)  
  438302:	call   FWORD PTR [ebx+0x0]
  438305:	xor    BYTE PTR [eax+0x83ff6d],cl
  43830b:	jg     0x43830c
  43830d:	aad    0x7e
  43830f:	into   
  438310:	inc    DWORD PTR [eax]
  438312:	add    BYTE PTR [eax+eax*1+0x55],dl
  438316:	loop   0x438326
  438318:	mov    edi,edi
  43831a:	add    BYTE PTR [ebx-0x1],bl
  43831d:	mov    ?,WORD PTR [ebp-0x33007c18]
  438323:	pop    ds
  438324:	add    BYTE PTR [eax+esi*8],bl
  438327:	loop   0x4382b2
  438329:	(bad)  
  43832a:	dec    DWORD PTR [edx]
  43832c:	jmp    DWORD PTR [ebp-0xc49d]
  438332:	dec    DWORD PTR [ecx+0x429f2083]
  438338:	cmp    edi,0x0
  43833b:	xlat   BYTE PTR ds:[ebx]
  43833c:	add    BYTE PTR [edi+0x44],bl
  43833f:	and    al,0x0
  438341:	add    bh,bh
  438343:	(bad)  
  438345:	icebp  
  438346:	jg     0x4382db
  438348:	add    DWORD PTR [eax],0xffffff89
  43834b:	or     edi,edi
  43834d:	pop    ecx
  43834e:	int3   
  43834f:	sar    bh,cl
  438351:	(bad)  
  438352:	dec    DWORD PTR [edi+edi*8]
  438355:	pusha  
  438356:	xlat   BYTE PTR ds:[ebx]
  438357:	cmp    edi,edi
  438359:	int3   
  43835a:	add    BYTE PTR [edx-0x1],ah
  43835d:	dec    edi
  43835e:	push   0xffff00db
  438363:	fild   DWORD PTR [eax]
  438365:	sub    BYTE PTR [esp+eiz*8],bh
  438368:	inc    DWORD PTR [eax]
  43836a:	add    DWORD PTR [ebp+0x379af9ff],0xffffffcc
  438371:	inc    DWORD PTR [eax]
  438373:	out    dx,al
  438374:	(bad)  
  438375:	(bad)  
  438377:	pop    ecx
  438378:	int3   
  438379:	int3   
  43837a:	jmp    FWORD PTR [edx]
  43837c:	add    dl,dh
  43837e:	push   esi
  43837f:	test   DWORD PTR [eax],0xcc6500ff
  438385:	imul   edi,DWORD PTR [edx+0xffff7b],0x42
  43838c:	add    BYTE PTR [eax+0x31],dl
  43838f:	mov    eax,DWORD PTR [eax]
  438391:	add    bh,bh
  438393:	and    BYTE PTR [eax],al
  438395:	xchg   ebx,eax
  438396:	mov    ch,0x7b
  438398:	inc    DWORD PTR [ebx+0x45ffe4ff]
  43839e:	stc    
  43839f:	lods   al,BYTE PTR ds:[esi]
  4383a0:	int3   
  4383a1:	(bad)  
  4383a2:	jmp    edx
  4383a4:	add    BYTE PTR [ebx],ch
  4383a6:	xchg   ecx,eax
  4383a7:	lahf   
  4383a8:	(bad)  
  4383a9:	inc    DWORD PTR [ebx-0x575cff58]
  4383af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4383b0:	(bad)  
  4383b1:	inc    DWORD PTR [ebx-0x59800003]
  4383b7:	popa   
  4383b8:	add    BYTE PTR [eax],al
  4383ba:	dec    eax
  4383bc:	int3   
  4383bd:	mov    al,0xc0
  4383bf:	(bad)  
  4383c0:	int3   
  4383c1:	add    BYTE PTR [ecx-0x7408ff53],cl
  4383c7:	leave  
  4383c8:	int3   
  4383c9:	cmp    edi,0x10
  4383cc:	int3   
  4383cd:	or     DWORD PTR [esi+0x51],ecx
  4383d0:	add    DWORD PTR [eax],0xffffffff
  4383d3:	test   eax,0xec13eaff
  4383d8:	(bad)  
  4383d9:	inc    DWORD PTR [eax]
  4383db:	pushf  
  4383dc:	dec    DWORD PTR [ecx+0xc]
  4383df:	jns    0x438364
  4383e1:	add    DWORD PTR [eax],0xfffffff9
  4383e4:	(bad)  
  4383e5:	jg     0x43840f
  4383e7:	dec    ebp
  4383e8:	(bad)  
  4383e9:	(bad)  
  4383ea:	(bad)  
  4383eb:	fiadd  WORD PTR [eax]
  4383ed:	jns    0x438412
  4383ef:	mov    edi,edi
  4383f1:	mov    DWORD PTR [eax],eax
  4383f3:	rol    BYTE PTR [eax],cl
  4383f5:	jae    0x4383ce
  4383f7:	rol    BYTE PTR [eax],1
  4383f9:	add    bh,bh
  4383fb:	mov    ah,0xff
  4383fd:	jae    0x4383b5
  4383ff:	into   
  438400:	mov    edi,edi
  438402:	add    DWORD PTR [ebx],0xffffffff
  438405:	sbb    edx,edi
  438407:	sti    
  438408:	add    BYTE PTR [eax],al
  43840a:	or     DWORD PTR [edx+0x683f5eff],0x0
  438411:	add    BYTE PTR [eax],al
  438413:	mov    eax,ds:0xc334c4ff
  438418:	add    bh,bh
  43841a:	add    BYTE PTR ds:0x367d9bff,dl
  438420:	add    ah,cl
  438422:	add    BYTE PTR [ebp-0x47b8a500],cl
  438428:	(bad)  
  438429:	inc    DWORD PTR [eax]
  43842b:	cmp    bh,bh
  43842d:	mov    ds:0x89ffd5e5,al
  438432:	mov    DWORD PTR [eax+eax*1+0xa9014d],esp
  438439:	add    BYTE PTR [eax],al
  43843b:	add    eax,0xfb27dcc
  438440:	inc    DWORD PTR [eax]
  438442:	adc    DWORD PTR [ebp+0x4fb82fff],0xffffffff
  438449:	add    bh,bh
  43844b:	or     al,0xff
  43844d:	xchg   ecx,eax
  43844e:	sub    al,0x5b
  438450:	int3   
  438451:	cmp    edi,0x5b
  438454:	(bad)  
  438455:	jmp    0x43841a
  438457:	jl     0x438458
  438459:	add    BYTE PTR [eax],al
  43845b:	sbb    ecx,esp
  43845d:	cmp    dl,BYTE PTR [ecx-0x1]
  438460:	add    BYTE PTR [eax],al
  438462:	add    ch,dl
  438464:	add    BYTE PTR [ebx+ebp*1-0x330048],bh
  43846b:	out    0x0,al
  43846d:	loope  0x438489
  43846f:	push   0xffffffff
  438471:	mov    DWORD PTR [eax],eax
  438473:	cmp    al,0x0
  438475:	inc    ecx
  438476:	xchg   ebx,eax
  438477:	sub    BYTE PTR [ecx+0xab0000],cl
  43847d:	inc    edx
  43847e:	push   ss
  43847f:	mov    edi,?
  438481:	add    BYTE PTR [eax],al
  438483:	sub    eax,0xcf7c7d83
  438488:	or     DWORD PTR [ecx+0x118928ff],0x64
  43848f:	mov    edi,edi
  438491:	(bad)  
  438492:	dec    DWORD PTR ds:0x620919ff
  438498:	add    ah,cl
  43849a:	sbb    DWORD PTR [ecx-0x77],0xffffffc7
  43849e:	dec    ebx
  43849f:	(bad)  
  4384a0:	(bad)  
  4384a1:	inc    DWORD PTR [eax]
  4384a3:	(bad)  
  4384a4:	int3   
  4384a5:	fsubr  DWORD PTR [edx+0x7]
  4384a8:	dec    esp
  4384aa:	call   DWORD PTR [ecx-0x1]
  4384ad:	jmp    0x43851f
  4384af:	sti    
  4384b0:	int3   
  4384b1:	inc    DWORD PTR [eax]
  4384b3:	pusha  
  4384b4:	add    BYTE PTR [ecx],ah
  4384b6:	push   0xffffff3e
  4384bb:	sub    eax,0xfe0f0dff
  4384c0:	cmp    edi,0xffffffff
  4384c3:	stos   BYTE PTR es:[edi],al
  4384c4:	jmp    DWORD PTR [eax]
  4384c6:	sbb    al,BYTE PTR [ebx]
  4384c8:	(bad)  
  4384c9:	dec    DWORD PTR [ecx-0x760900cf]
  4384cf:	add    DWORD PTR [eax],0x0
  4384d2:	mov    DWORD PTR [ecx],esp
  4384d4:	dec    esi
  4384d6:	cli    
  4384d7:	cdq    
  4384d8:	(bad)  
  4384d9:	inc    DWORD PTR [eax]
  4384db:	pop    ss
  4384dc:	mov    DWORD PTR [ecx+edi*4-0x3a],edx
  4384e0:	or     DWORD PTR [ecx-0x23333234],0x11
  4384e7:	es cmp edi,0xffffffff
  4384eb:	sbb    eax,0x5810ff
  4384f0:	mov    DWORD PTR [eax],eax
  4384f2:	add    BYTE PTR [eax],al
  4384f4:	dec    DWORD PTR [ebx-0x33cf46]
  4384fa:	add    BYTE PTR [edx-0x1],cl
  4384fd:	inc    esp
  4384fe:	aas    
  4384ff:	mov    dl,0x89
  438501:	add    DWORD PTR [eax],0xffffffbf
  438504:	push   DWORD PTR [ebx]
  438506:	cmp    esi,0x0
  438509:	dec    esp
  43850b:	adc    bh,bh
  43850d:	push   edx
  43850e:	pop    edx
  43850f:	in     eax,0xff
  438511:	(bad)  
  438512:	jmp    FWORD PTR [edi]
  438514:	add    ch,bl
  438516:	out    0x4d,al
  438518:	int3   
  438519:	dec    esp
  43851b:	(bad)  
  43851c:	int3   
  43851d:	fiadd  WORD PTR [ebp-0x28]
  438520:	add    DWORD PTR [eax],0x0
  438523:	enter  0x2fff,0x6a
  438527:	addr16 add bh,bh
  43852a:	inc    esi
  43852c:	add    BYTE PTR [ebp+0x5b],ch
  43852f:	imul   eax,DWORD PTR [eax],0x0
  438532:	add    dl,bl
  438534:	add    BYTE PTR [esi-0x3f],ch
  438537:	adc    edi,edi
  438539:	add    bh,bh
  43853b:	call   0xc4c00e3f
  438540:	add    ah,cl
  438542:	add    BYTE PTR [eax+0x5f21b000],ah
  438548:	add    BYTE PTR [ecx+0x4ffe6cc],cl
  43854e:	adc    eax,0x83008329
  438553:	aam    0xff
  438555:	mov    bh,0x8c
  438557:	int    0x83
  438559:	add    BYTE PTR [eax],al
  43855b:	dec    esi
  43855c:	adc    DWORD PTR [edx],0xffffffb2
  43855f:	push   edi
  438560:	add    DWORD PTR [eax],0x0
  438563:	push   DWORD PTR ss:0xff007fb5
  43856a:	(bad)  
  43856b:	cmp    eax,0x29ffeff
  438570:	(bad)  
  438571:	(bad)  
  438572:	(bad)  
  438573:	cld    
  438574:	and    DWORD PTR [ebp+eiz*1+0xffffa3],0xffffffb8
  43857c:	call   edi
  43857e:	aaa    
  43857f:	fld    DWORD PTR [eax]
  438581:	add    BYTE PTR [eax],al
  438583:	jnp    0x438551
  438585:	jecxz  0x438541
  438587:	test   eax,0x84ffff00
  43858c:	add    BYTE PTR [edx+0x3b],bl
  43858f:	test   DWORD PTR [ebx+0xacff00],0xff1d49bb
  438599:	add    BYTE PTR [ecx+0x372989dd],cl
  43859f:	xchg   edi,eax
  4385a0:	add    ah,cl
  4385a2:	add    cl,al
  4385a4:	add    BYTE PTR [ecx+0x60],bh
  4385a7:	xor    bh,bh
  4385a9:	inc    DWORD PTR [ebx+0x225fffab]
  4385af:	das    
  4385b0:	add    bh,bh
  4385b2:	add    ah,cl
  4385b4:	add    BYTE PTR [ecx],cl
  4385b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4385b7:	aaa    
  4385b8:	add    bh,bh
  4385ba:	mov    DWORD PTR [ecx+0x0],esi
  4385bd:	lahf   
  4385be:	adc    ecx,eax
  4385c0:	add    BYTE PTR [ecx-0x68ffee00],cl
  4385c6:	dec    edx
  4385c7:	fild   WORD PTR [ebx+0x6883ff]
  4385cd:	fild   DWORD PTR [esi-0x7cff60]
  4385d3:	mov    al,ds:0xa7b236ff
  4385d8:	dec    DWORD PTR [ecx+0x60ff33ff]
  4385de:	cmp    eax,0xeb
  4385e3:	push   esp
  4385e4:	jmp    DWORD PTR [esi-0x7c003f02]
  4385ea:	int3   
  4385eb:	data16 add BYTE PTR [ecx-0xffe7d1],ch
  4385f2:	call   DWORD PTR [esi+0x17224800]
  4385f8:	add    bh,bh
  4385fa:	and    DWORD PTR [esi+0x1eee7f83],0xffffff89
  438601:	add    BYTE PTR [eax],al
  438603:	dec    ecx
  438604:	(bad)  
  438605:	(bad)  
  438606:	cmp    BYTE PTR [ecx],bh
  438608:	add    BYTE PTR [eax],al
  43860a:	(bad)  
  43860b:	jmp    0x8edd770f
  438610:	add    BYTE PTR [ebx-0x6cffa900],al
  438616:	jle    0x43865e
  438618:	inc    DWORD PTR [eax]
  43861a:	(bad)  
  43861b:	fild   WORD PTR [eax]
  43861d:	inc    ebx
  43861e:	inc    ecx
  43861f:	clc    
  438620:	add    bh,bh
  438622:	(bad)  
  438623:	fiadd  DWORD PTR [eax]
  438625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438626:	les    ebp,FWORD PTR [eax+0x4a008900]
  43862c:	dec    DWORD PTR [ebx]
  43862e:	sahf   
  43862f:	cmp    edi,0xffffff89
  438632:	mov    DWORD PTR [eax-0x34],ebp
  438635:	push   ds
  438636:	and    al,0xbb
  438638:	add    BYTE PTR [eax],al
  43863a:	inc    DWORD PTR [ebx+eax*4+0xdaa26]
  438641:	inc    DWORD PTR [ebx+0x4ee2891d]
  438647:	pop    edx
  438648:	add    BYTE PTR [eax],al
  43864a:	inc    ebx
  43864c:	add    BYTE PTR [ebp-0xffa05e],ah
  438652:	(bad)  
  438653:	sti    
  438654:	(bad)  
  438655:	mov    ecx,0x5a7a
  43865a:	inc    DWORD PTR [edi-0x1]
  43865d:	loope  0x43860d
  43865f:	xchg   ecx,eax
  438660:	add    BYTE PTR [eax],al
  438662:	dec    ecx
  438664:	mov    DWORD PTR [edi],eax
  438666:	xchg   ebx,eax
  438667:	adc    edi,edi
  438669:	or     DWORD PTR [ecx-0x65347cc6],0x46
  438670:	cmp    edi,0xffffffff
  438673:	add    BYTE PTR fs:[ebp+0xc8e3],bl
  43867a:	mov    DWORD PTR [eax-0x51df7c00],eax
  438680:	inc    DWORD PTR [ebx+0x48ff35ff]
  438686:	sbb    eax,DWORD PTR [edx-0x1]
  438689:	inc    DWORD PTR [eax]
  43868b:	int3   
  43868c:	and    DWORD PTR [eax-0x22],0xffffffeb
  438690:	(bad)  
  438691:	inc    DWORD PTR [ebx+0x3a2aff95]
  438697:	out    0x0,al
  438699:	inc    DWORD PTR [eax]
  43869b:	jmp    0x89ff:0x5b83c983
  4386a2:	cmp    DWORD PTR [eax-0x1],0x1b
  4386a6:	mov    ds:0xffff004f,al
  4386ab:	add    BYTE PTR ds:[esi],cl
  4386ae:	mov    bh,0x11
  4386b0:	int3   
  4386b1:	add    BYTE PTR [ebx+0x359b0099],al
  4386b7:	cs add bh,bh
  4386ba:	add    dl,ch
  4386bc:	(bad)  
  4386bd:	jl     0x43866d
  4386bf:	or     DWORD PTR [eax],eax
  4386c1:	add    bh,bh
  4386c3:	and    edi,edi
  4386c5:	and    eax,0x83cc219a
  4386ca:	mov    DWORD PTR [ebx],ebx
  4386cc:	mov    DWORD PTR [esi-0x7c2a8d],esp
  4386d2:	add    BYTE PTR [esi-0x713f4100],bl
  4386d8:	dec    esp
  4386da:	(bad)  
  4386db:	jnp    0x4386dd
  4386dd:	dec    edx
  4386de:	push   es
  4386df:	mov    edx,0xe7ff0000
  4386e4:	add    BYTE PTR [ebx],ch
  4386e6:	and    BYTE PTR ds:0x16ffffcc,bh
  4386ec:	int3   
  4386ed:	mov    ah,0x47
  4386ef:	sbb    eax,0xcdff0000
  4386f4:	add    BYTE PTR [ebx+0xccffe5],bh
  4386fa:	call   FWORD PTR [ebp-0x1]
  4386fd:	mov    ah,0xc9
  4386ff:	push   0x4783ffff
  438704:	inc    DWORD PTR [esp+esi*8+0xff29]
  43870b:	push   edx
  43870c:	jmp    FWORD PTR [eax-0x26]
  43870f:	mov    bh,0x83
  438711:	(bad)  
  438712:	jmp    FWORD PTR [edx-0x12153d01]
  438718:	dec    esp
  43871a:	mov    DWORD PTR [eax],eax
  43871c:	call   FWORD PTR [esi-0x71]
  43871f:	mov    bh,bh
  438721:	add    DWORD PTR [eax],0xffffff80
  438724:	int3   
  438725:	xor    cl,0xa3
  438728:	(bad)  
  438729:	(bad)  
  43872a:	call   ecx
  43872c:	call   FWORD PTR [esi+0x32]
  43872f:	test   BYTE PTR [ebx-0xa6ff01],al
  438735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  438736:	and    cl,dh
  438738:	add    bh,bh
  43873a:	call   FWORD PTR [edi]
  43873c:	add    ah,ch
  43873e:	jge    0x43872e
  438740:	inc    DWORD PTR [ebx+0x1800f0ff]
  438746:	pop    ss
  438747:	fild   WORD PTR [eax]
  438749:	(bad)  
  43874a:	call   FWORD PTR [esi]
  43874c:	sub    DWORD PTR ds:0xffcc2f67,0xffffffff
  438753:	mov    ecx,0x3954b1ff
  438758:	dec    esp
  43875a:	int3   
  43875b:	into   
  43875c:	call   FWORD PTR [edi-0x7cff133b]
  438762:	inc    DWORD PTR [ecx-0x7d]
  438765:	pop    ds
  438766:	iret   
  438767:	mov    DWORD PTR fs:[eax],eax
  43876a:	dec    DWORD PTR [ecx+0x3b04ac00]
  438770:	(bad)  
  438771:	inc    DWORD PTR [ebx+0x65d0047]
  438777:	mov    ah,0x0
  438779:	int3   
  43877a:	call   DWORD PTR [edi-0x5b6d334]
  438780:	(bad)  
  438781:	(bad)  
  438782:	jmp    FWORD PTR [eax-0x1]
  438785:	scas   eax,DWORD PTR es:[edi]
  438786:	push   ds
  438787:	adc    edi,edi
  438789:	add    bh,bh
  43878b:	lods   eax,DWORD PTR ds:[esi]
  43878c:	(bad)  
  43878d:	mov    esp,0x830079b6
  438792:	(bad)  
  438793:	std    
  438794:	and    DWORD PTR [eax-0x44],0xffffffce
  438798:	mov    edi,edi
  43879a:	push   DWORD PTR [edx+0x0]
  43879d:	loop   0x4387a4
  43879f:	sub    bh,bh
  4387a1:	add    BYTE PTR [ebx+0x1661ff58],al
  4387a7:	out    dx,eax
  4387a8:	(bad)  
  4387a9:	(bad)  
  4387aa:	(bad)  
  4387ab:	clc    
  4387ac:	int3   
  4387ad:	dec    edi
  4387ae:	cmp    al,0x89
  4387b1:	(bad)  
  4387b2:	push   eax
  4387b4:	call   DWORD PTR [ebx+ecx*2+0x50]
  4387b8:	mov    edi,edi
  4387ba:	call   edx
  4387bc:	jmp    FWORD PTR [edi+0x5b]
  4387bf:	lock int3 
  4387c1:	int3   
  4387c2:	cmp    DWORD PTR [edx+0x0],0xffffff9c
  4387c6:	stos   DWORD PTR es:[edi],eax
  4387c7:	xlat   BYTE PTR ds:[ebx]
  4387c8:	inc    DWORD PTR [eax]
  4387ca:	push   DWORD PTR [edx+0x2e61bd00]
  4387d0:	(bad)  
  4387d1:	(bad)  
  4387d2:	call   DWORD PTR [esi-0x69f5717d]
  4387d8:	add    DWORD PTR [eax],0x0
  4387db:	(bad)  
  4387dc:	mov    DWORD PTR [edi],ecx
  4387de:	mov    eax,ds:0x83ff0b
  4387e3:	push   edi
  4387e4:	(bad)  
  4387e5:	inc    DWORD PTR [eax-0x2a]
  4387e8:	(bad)  
  4387e9:	(bad)  
  4387ea:	call   DWORD PTR [edi]
  4387ec:	(bad)  
  4387ed:	cmp    al,0x59
  4387ef:	cmp    al,0xff
  4387f1:	dec    esp
  4387f3:	xchg   edx,eax
  4387f4:	int3   
  4387f5:	aas    
  4387f6:	lds    ebx,FWORD PTR [edi+edi*8+0xb38300]
  4387fd:	or     edi,0xffffff85
  438803:	jno    0x4387d1
  438805:	std    
  438806:	xor    ebx,DWORD PTR ds:0x9389ff00
  43880c:	call   ecx
  43880e:	inc    esi
  43880f:	mov    WORD PTR [eax],es
  438811:	(bad)  
  438812:	jmp    FWORD PTR ds:0x710cd500
  438818:	add    bh,bh
  43881a:	cmp    DWORD PTR [esi+0x0],0xffffffca
  43881e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43881f:	xchg   BYTE PTR [eax],al
  438821:	(bad)  
  438822:	call   FWORD PTR [edx-0x521afc00]
  438828:	(bad)  
  438829:	dec    esp
  43882b:	sar    bh,cl
  43882d:	clc    
  43882e:	jns    0x438869
  438830:	add    bh,bh
  438832:	dec    DWORD PTR [eax-0x29c8d801]
  438838:	(bad)  
  438839:	(bad)  
  43883a:	push   edi
  43883c:	int3   
  43883d:	je     0x4387de
  43883f:	cmp    edi,edi
  438841:	(bad)  
  438842:	call   FWORD PTR [edi+edi*8]
  438845:	inc    ebx
  438846:	push   0xccfffff9
  43884b:	pop    ds
  43884c:	add    BYTE PTR [ebx-0xebe3],ch
  438852:	or     DWORD PTR [eax],0x0
  438855:	jge    0x438876
  438857:	and    eax,0xb600ccff
  43885c:	jmp    DWORD PTR [ecx-0x2c]
  43885f:	or     al,0x0
  438861:	add    BYTE PTR [ebx+0x1b28ffc4],al
  438867:	sahf   
  438868:	inc    DWORD PTR [eax]
  43886a:	jmp    FWORD PTR [eax-0x5659cc34]
  438870:	inc    DWORD PTR [eax]
  438872:	push   ebx
  438874:	jmp    FWORD PTR [ebx]
  438876:	fwait
  438877:	repnz (bad) 
  438879:	(bad)  
  43887a:	jmp    DWORD PTR [edx]
  43887c:	call   DWORD PTR [esp+ebp*1-0x76ffff5f]
  438883:	mov    ch,0x0
  438885:	cmp    ch,BYTE PTR [eax+ecx*8-0x77]
  438889:	int3   
  43888a:	int3   
  43888b:	add    bh,bh
  43888d:	sti    
  43888e:	and    DWORD PTR [esi+0x31ffccff],eax
  438894:	(bad)  
  438895:	cmp    BYTE PTR ds:0xfffffffa,dl
  43889b:	mov    ebx,0xaba2ea83
  4388a0:	add    BYTE PTR [ebx-0x200d37d],al
  4388a6:	pop    esi
  4388a7:	push   ebx
  4388a8:	mov    DWORD PTR [ecx+0x3983d700],ecx
  4388ae:	rcr    dh,1
  4388b0:	(bad)  
  4388b1:	inc    DWORD PTR [ebx-0x431a7c62]
  4388b7:	pop    ecx
  4388b8:	add    ah,cl
  4388ba:	dec    DWORD PTR [edi+0x72f5b200]
  4388c0:	inc    DWORD PTR [eax]
  4388c2:	cmp    DWORD PTR [ebx+eax*4-0x3374c55c],0xffffffff
  4388ca:	add    BYTE PTR [edx],al
  4388cc:	jmp    DWORD PTR [ebx+edi*1+0x70]
  4388d0:	(bad)  
  4388d1:	inc    DWORD PTR [eax]
  4388d3:	sahf   
  4388d4:	inc    DWORD PTR [eax+eax*4+0x54]
  4388d8:	dec    DWORD PTR [ecx+0x43892200]
  4388de:	xor    eax,0xffffe0
  4388e3:	push   es
  4388e4:	call   FWORD PTR [ebx]
  4388e6:	sar    BYTE PTR [edx],1
  4388e8:	(bad)  
  4388e9:	(bad)  
  4388ea:	push   ebx
  4388ec:	mov    DWORD PTR [edx-0xc],eax
  4388ef:	mov    esi,0x1affffff
  4388f4:	(bad)  
  4388f5:	(bad)  [edx-0x7c7cffc9]
  4388fb:	dec    edx
  4388fc:	int3   
  4388fd:	xchg   edx,esi
  4388ff:	rol    BYTE PTR [eax],1
  438901:	add    ah,cl
  438903:	cmp    eax,0xe2bd83ff
  438908:	add    bh,bh
  43890a:	inc    eax
  43890c:	(bad)  
  43890d:	cmp    DWORD PTR [ebp-0x4c],ecx
  438910:	mov    edi,edi
  438912:	int3   
  438913:	iret   
  438914:	call   DWORD PTR [edx-0x76ffd634]
  43891a:	(bad)  
  43891b:	cmp    BYTE PTR [eax],al
  43891d:	jecxz  0x4388c5
  43891f:	cmp    eax,0x1dff00ff
  438924:	add    BYTE PTR [esi-0x4a],dl
  438927:	lods   al,BYTE PTR ds:[esi]
  438928:	add    bh,bh
  43892a:	mov    DWORD PTR [eax-0x1],ecx
  43892d:	ret    0xbd07
  438930:	inc    DWORD PTR [eax]
  438932:	call   DWORD PTR [eax+0x0]
  438935:	jns    0x438943
  438937:	repz (bad) 
  438939:	inc    DWORD PTR [eax]
  43893b:	jae    0x43893d
  43893d:	jne    0x438927
  43893f:	retf   0xcc
  438942:	(bad)  
  438943:	mov    ebx,0xd9e0ed83
  438948:	int3   
  438949:	add    ah,cl
  43894b:	adc    edi,edi
  43894d:	xor    BYTE PTR [ebx+eiz*8-0x67ff0100],0x0
  438955:	mov    ah,0x4e
  438957:	adc    eax,0x12ff89ff
  43895c:	call   DWORD PTR [edx-0x21bb]
  438962:	jmp    DWORD PTR [esi-0x1]
  438965:	sbb    eax,0xcc003a72
  43896a:	add    BYTE PTR [esi-0x57f60d01],bl
  438970:	dec    esp
  438972:	sub    DWORD PTR [edx+0x0],0x43
  438976:	push   ecx
  438977:	lods   eax,DWORD PTR ds:[esi]
  438978:	inc    DWORD PTR [eax]
  43897a:	add    BYTE PTR [ecx],al
  43897c:	add    bh,cl
  43897e:	add    eax,0x89ffffa4
  438983:	mov    ebx,0x2bd38600
  438988:	add    bh,bh
  43898a:	push   DWORD PTR [edx-0x34]
  43898d:	push   ebx
  43898e:	cmp    esp,ecx
  438990:	cmp    edi,0x0
  438993:	(bad)  
  438994:	add    BYTE PTR [eax-0xffcadb],dh
  43899a:	add    ah,cl
  43899c:	add    BYTE PTR [edx-0x50],bh
  43899f:	lock add BYTE PTR [ebx-0xf008201],al
  4389a6:	cmp    cl,BYTE PTR [esi+0x0]
  4389a9:	inc    DWORD PTR [ebx+0x54d7ff58]
  4389af:	jmp    0x4389b1
  4389b1:	int3   
  4389b2:	int3   
  4389b3:	or     BYTE PTR [ebx-0x7dd73c],al
  4389b9:	inc    DWORD PTR [eax]
  4389bb:	out    0xcc,eax
  4389bd:	sub    eax,0xff00054d
  4389c2:	call   FWORD PTR [ebp+0xa8540cc]
  4389c8:	add    BYTE PTR [eax],al
  4389ca:	add    BYTE PTR [edi-0x77],ch
  4389cd:	aad    0x0
  4389cf:	in     al,dx
  4389d0:	(bad)  
  4389d1:	(bad)  
  4389d2:	call   eax
  4389d4:	add    BYTE PTR [edx+ebp*8-0x7c332b],cl
  4389db:	jnp    0x4389dd
  4389dd:	inc    esi
  4389de:	in     eax,dx
  4389df:	lods   al,BYTE PTR ds:[esi]
  4389e0:	inc    DWORD PTR [eax]
  4389e2:	add    BYTE PTR [eax+eax*1-0x33a42021],bh
  4389e9:	add    BYTE PTR [eax],al
  4389eb:	jae    0x4389ec
  4389ed:	std    
  4389ee:	sbb    edi,0x6a8983ff
  4389f4:	(bad)  
  4389f5:	jmp    0xf83:0xffffdad9
  4389fc:	inc    DWORD PTR [eax-0x7c00547f]
  438a02:	(bad)  
  438a03:	fcos   
  438a05:	xchg   ebx,eax
  438a06:	sub    DWORD PTR [eax-0x1],ebp
  438a09:	inc    DWORD PTR [eax]
  438a0b:	and    al,BYTE PTR [eax]
  438a0d:	mov    ch,0xe2
  438a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438a10:	inc    DWORD PTR [eax]
  438a12:	int3   
  438a13:	js     0x438a15
  438a15:	cmc    
  438a16:	cld    
  438a17:	sar    bh,0xff
  438a1a:	add    ah,al
  438a1c:	add    dh,dl
  438a1e:	pop    es
  438a1f:	mov    DWORD PTR [eax],0xff3a8383
  438a25:	pop    esp
  438a26:	lds    ebp,FWORD PTR [eax+0x1589ffff]
  438a2c:	sub    DWORD PTR [esp+ecx*2+0x2d],0x0
  438a31:	(bad)  
  438a32:	inc    DWORD PTR [esi-0x6f62c500]
  438a38:	add    BYTE PTR [eax],al
  438a3a:	call   FWORD PTR [edi]
  438a3c:	and    DWORD PTR [esi-0x7c2b19],0xffffffff
  438a43:	pusha  
  438a44:	inc    edx
  438a46:	int3   
  438a47:	mov    ebp,0xa4000000
  438a4c:	inc    DWORD PTR [ecx-0x2e]
  438a4f:	add    edi,edi
  438a51:	add    BYTE PTR [ecx+0x4db0034],cl
  438a57:	lea    eax,[eax]
  438a59:	mov    DWORD PTR [ecx+0x57f6ffe8],ecx
  438a5f:	or     DWORD PTR [eax],eax
  438a61:	add    DWORD PTR [eax],0x4
  438a64:	call   DWORD PTR [ebp-0x33003c45]
  438a6a:	dec    ecx
  438a6c:	call   DWORD PTR [edi]
  438a6e:	add    edx,ecx
  438a70:	inc    DWORD PTR [eax]
  438a72:	add    BYTE PTR [edi+edi*8],bl
  438a75:	imul   ebp,DWORD PTR [ecx+0xff0037],0xffffff84
  438a7c:	add    DWORD PTR [ebx],0xffffff86
  438a7f:	sbb    eax,0x4b83ff00
  438a84:	add    ch,dl
  438a86:	xlat   BYTE PTR ds:[ebx]
  438a87:	rol    DWORD PTR [eax],0xff
  438a8a:	or     DWORD PTR [edi+0x4a3a7dff],0xffffff83
  438a91:	inc    DWORD PTR [eax]
  438a93:	and    eax,0xc744adff
  438a98:	add    ah,cl
  438a9a:	push   esp
  438a9c:	sbb    ecx,0xd
  438a9f:	sahf   
  438aa0:	add    BYTE PTR [eax],al
  438aa2:	(bad)  
  438aa3:	(bad)  
  438aa5:	push   cs
  438aa6:	jmp    0x1430dd1
  438aab:	pop    ecx
  438aac:	jmp    DWORD PTR [edi-0x20]
  438aaf:	call   0x3700:0x7ffff83
  438ab6:	loopne 0x438a8b
  438ab8:	add    ah,cl
  438aba:	add    BYTE PTR [esi+0x2cdecdff],dh
  438ac0:	dec    DWORD PTR [ecx-0x40761800]
  438ac6:	cs push cs
  438ac8:	int3   
  438ac9:	(bad)  
  438aca:	dec    DWORD PTR [edi+edi*8-0x3c]
  438ace:	in     al,0x5f
  438ad0:	add    BYTE PTR [eax],al
  438ad2:	add    ecx,0xffffffcc
  438ad5:	jp     0x438ae2
  438ad7:	push   cs
  438ad8:	add    bh,bh
  438ada:	add    BYTE PTR [eax],bl
  438adc:	add    BYTE PTR [eax-0x8e3d],bl
  438ae2:	dec    edi
  438ae4:	add    cl,ah
  438ae6:	loopne 0x438a6f
  438ae8:	cmp    edi,0xffffffff
  438aeb:	mov    al,ds:0x5fc4ec00
  438af0:	cmp    edi,0xffffffff
  438af3:	enter  0x8300,0xd5
  438af7:	rol    BYTE PTR [eax],cl
  438af9:	add    DWORD PTR [eax],0x76
  438afc:	xor    DWORD PTR [edx],0x7
  438aff:	jg     0x438b00
  438b01:	add    ah,cl
  438b03:	inc    ebx
  438b04:	jmp    DWORD PTR [eax+0x89b339]
  438b0a:	call   DWORD PTR [ecx+ecx*4-0x12]
  438b0e:	dec    edi
  438b0f:	aam    0x0
  438b11:	add    DWORD PTR [eax],0x71
  438b14:	jmp    esp
  438b16:	test   eax,0x83ff00de
  438b1b:	loope  0x438b1c
  438b1d:	mov    ds:0xffff5339,al
  438b22:	add    BYTE PTR [esi+0x5b094489],bl
  438b28:	add    BYTE PTR [ecx+0x7c00d889],cl
  438b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  438b2f:	pop    ebx
  438b30:	inc    DWORD PTR [eax]
  438b32:	push   DWORD PTR [ecx]
  438b34:	add    al,dh
  438b36:	mov    ah,0x95
  438b38:	add    BYTE PTR [eax],al
  438b3a:	mov    DWORD PTR [edi-0x5d947477],edx
  438b40:	int3   
  438b41:	(bad)  
  438b42:	call   FWORD PTR [ebx-0x218a5301]
  438b48:	inc    DWORD PTR [ebx-0x26003401]
  438b4e:	out    0xd7,al
  438b50:	dec    DWORD PTR [ecx+0x4500a200]
  438b56:	popf   
  438b57:	push   esp
  438b58:	mov    DWORD PTR [eax],eax
  438b5a:	add    BYTE PTR [eax],ah
  438b5c:	add    bh,cl
  438b5e:	sbb    ch,ch
  438b60:	inc    DWORD PTR [eax]
  438b62:	add    BYTE PTR [esi],dh
  438b64:	dec    DWORD PTR [edx+edi*1-0x33ff005c]
  438b6b:	jbe    0x438b6c
  438b6d:	push   ss
  438b6e:	jno    0x438b84
  438b70:	add    bh,bh
  438b72:	call   DWORD PTR [edi-0x1]
  438b75:	mov    cl,dh
  438b77:	je     0x438b79
  438b79:	(bad)  
  438b7a:	(bad)  
  438b7b:	fadd   QWORD PTR [ebx-0x7ccc27de]
  438b81:	add    bh,bh
  438b83:	xlat   BYTE PTR ds:[ebx]
  438b84:	push   edi
  438b86:	adc    al,0xbd
  438b88:	mov    DWORD PTR [eax],eax
  438b8a:	dec    DWORD PTR [edx+0x268d63ff]
  438b90:	add    BYTE PTR [eax],al
  438b92:	call   eax
  438b94:	cmp    edx,0x27
  438b97:	add    edi,edi
  438b99:	cmp    edi,0xe
  438b9c:	push   DWORD PTR [eax+0xffc941]
  438ba2:	(bad)  
  438ba3:	jmp    0x8300:0x8bb6583
  438baa:	add    BYTE PTR [esi],bl
  438bac:	jmp    DWORD PTR [esi+edi*1+0x43]
  438bb0:	int3   
  438bb1:	(bad)  
  438bb2:	call   DWORD PTR [ecx-0x77]
  438bb5:	cli    
  438bb6:	cmp    eax,0xfff2
  438bbb:	ja     0x438bbc
  438bbd:	ss fs jb 0x438bc0
  438bc1:	mov    DWORD PTR [ebx-0x6ac90000],eax
  438bc7:	idiv   edi
  438bc9:	dec    esp
  438bcb:	sbb    BYTE PTR [ebx+0xaeedba],al
  438bd1:	int3   
  438bd2:	push   DWORD PTR [eax+0x0]
  438bd5:	addr16 pop eax
  438bd7:	(bad)  
  438bd8:	(bad)  
  438bd9:	dec    esp
  438bdb:	popf   
  438bdc:	dec    DWORD PTR [ebx-0x6c]
  438bdf:	dec    ecx
  438be0:	add    BYTE PTR [eax],al
  438be2:	push   DWORD PTR ds:0x504a8c00
  438be8:	add    BYTE PTR [eax],al
  438bea:	inc    DWORD PTR [eax-0x1]
  438bed:	or     eax,eax
  438bef:	cmp    al,0xff
  438bf1:	int3   
  438bf2:	add    BYTE PTR [edi+edi*8-0x7cfe2e0b],dh
  438bf9:	cmp    edi,0xffffffe7
  438bfc:	add    cl,dh
  438bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438bff:	js     0x438c00
  438c01:	(bad)  
  438c02:	(bad)  
  438c03:	out    dx,eax
  438c04:	and    DWORD PTR [edx-0x33ff8bf3],0xffffff89
  438c0b:	add    al,0x83
  438c0d:	mov    ecx,0x5bf3
  438c12:	call   FWORD PTR [ebp-0x77]
  438c15:	rcl    BYTE PTR [edx+ebp*4],1
  438c18:	add    BYTE PTR [eax],al
  438c1a:	mov    DWORD PTR [esi],eax
  438c1c:	mov    esi,edx
  438c1e:	jbe    0x438bf4
  438c20:	cmp    edi,0xffffffff
  438c23:	add    BYTE PTR [eax],0x42
  438c26:	popa   
  438c27:	or     edi,edi
  438c29:	dec    DWORD PTR [ecx+0x105700b7]
  438c2f:	ud0    ecx,DWORD PTR [ecx+0x7bff9aff]
  438c36:	inc    eax
  438c37:	popa   
  438c38:	dec    esp
  438c3a:	and    DWORD PTR [ecx-0x5b3ebd01],0x0
  438c41:	inc    DWORD PTR [ebx-0x41bff66]
  438c47:	lea    eax,[ebx+0x1dcc00]
  438c4d:	inc    ecx
  438c4e:	neg    ch
  438c50:	mov    DWORD PTR [eax],eax
  438c52:	add    bl,bl
  438c54:	dec    edx
  438c56:	fiadd  WORD PTR ds:[ebx-0x300001]
  438c5d:	and    DWORD PTR [eax-0xab],0x41
  438c64:	int3   
  438c65:	aas    
  438c66:	sub    al,0xab
  438c68:	add    BYTE PTR [eax],al
  438c6a:	add    BYTE PTR [edx],bl
  438c6c:	int3   
  438c6d:	pop    ss
  438c6e:	test   eax,0xff00cc94
  438c73:	or     DWORD PTR [eax],eax
  438c75:	push   ss
  438c76:	enter  0xcc41,0xff
  438c7a:	int3   
  438c7b:	push   ebp
  438c7c:	add    BYTE PTR [esi-0x7c44f5],ah
  438c82:	call   DWORD PTR [edi+0x3b7c1dff]
  438c88:	(bad)  
  438c89:	(bad)  
  438c8a:	jmp    DWORD PTR [eax]
  438c8c:	add    ah,cl
  438c8e:	mov    bl,0xf1
  438c90:	inc    DWORD PTR [eax]
  438c92:	xor    DWORD PTR [ebp-0x424caa01],0xffffff83
  438c99:	add    bh,bh
  438c9b:	test   DWORD PTR [eax],eax
  438c9d:	jnp    0x438cdf
  438c9f:	mov    ah,0xff
  438ca1:	add    DWORD PTR [ebx-0xba40058],0x7f
  438ca8:	add    bh,bh
  438caa:	add    edx,0xffffffff
  438cad:	dec    edi
  438cae:	add    DWORD PTR [eax],0xffffffff
  438cb1:	int3   
  438cb2:	and    DWORD PTR [eax],0x0
  438cb5:	out    0xa5,eax
  438cb7:	jge    0x438cb9
  438cb9:	(bad)  
  438cba:	push   DWORD PTR [eax]
  438cbc:	dec    DWORD PTR [edi-0xff04aa]
  438cc2:	or     DWORD PTR [ecx+0x2bb20700],0xffffffff
  438cc9:	add    bh,bh
  438ccb:	jl     0x438ccc
  438ccd:	inc    esp
  438cce:	shl    BYTE PTR [edi],1
  438cd0:	(bad)  
  438cd1:	(bad)  
  438cd2:	inc    esi
  438cd4:	dec    DWORD PTR [eax-0x33e259]
  438cda:	and    DWORD PTR [ecx-0x5dd2dc01],0xffffffcc
  438ce1:	add    DWORD PTR [eax],0xffffffd2
  438ce4:	mov    DWORD PTR [eax-0x21],esi
  438ce7:	sbb    eax,0xb1000083
  438cec:	jmp    DWORD PTR [esi-0xff2bdc]
  438cf2:	jmp    DWORD PTR [esi]
  438cf4:	jmp    FWORD PTR [ebp-0x17]
  438cf7:	daa    
  438cf8:	inc    DWORD PTR [ebx-0x38fff377]
  438cfe:	(bad)
  438d01:	add    DWORD PTR [eax],0x72
  438d04:	jmp    DWORD PTR ds:0xff2ca4
  438d0a:	int3   
  438d0b:	(bad)  
  438d0e:	adc    ecx,ebx
  438d10:	cmp    edi,0xffffffff
  438d13:	add    BYTE PTR ds:[esi+0x1149],ah
  438d1a:	int3   
  438d1b:	cmp    al,0xff
  438d1d:	lods   al,BYTE PTR ds:[esi]
  438d1e:	pcmpgtd mm7,mm7
  438d21:	add    BYTE PTR [ebx+0x1dcd831e],al
  438d27:	and    BYTE PTR [eax],al
  438d29:	(bad)  
  438d2a:	(bad)  
  438d2b:	(bad)  
  438d2d:	and    BYTE PTR [ecx+ebx*8],bh
  438d30:	add    BYTE PTR [eax],al
  438d32:	mov    DWORD PTR [ebp-0x1],ebp
  438d35:	data16 aaa 
  438d37:	scas   al,BYTE PTR es:[edi]
  438d38:	(bad)  
  438d39:	inc    DWORD PTR [eax]
  438d3b:	push   ecx
  438d3c:	call   FWORD PTR [ecx-0x7c33f59c]
  438d42:	add    BYTE PTR [edx],dh
  438d44:	inc    DWORD PTR [ecx]
  438d46:	pop    esi
  438d47:	retf   
  438d48:	inc    DWORD PTR [eax]
  438d4a:	int3   
  438d4b:	call   0x2f83744f
  438d50:	inc    DWORD PTR [eax]
  438d52:	add    BYTE PTR [ebx-0x7fdb5001],ch
  438d58:	inc    DWORD PTR [eax]
  438d5a:	int3   
  438d5b:	add    al,0xff
  438d5d:	inc    ebx
  438d5e:	jl     0x438d5b
  438d60:	add    bh,bh
  438d62:	jmp    FWORD PTR [edi+0x0]
  438d65:	xchg   ebp,eax
  438d66:	aad    0x3e
  438d68:	add    bh,bh
  438d6a:	inc    DWORD PTR [esi]
  438d6c:	add    BYTE PTR [edi-0x7c0017c7],ah
  438d72:	dec    DWORD PTR [esi]
  438d74:	(bad)  
  438d75:	out    dx,eax
  438d76:	xchg   edi,eax
  438d77:	adc    esp,ecx
  438d79:	(bad)  
  438d7a:	jmp    FWORD PTR [ebx]
  438d7c:	inc    DWORD PTR [eax-0x6a]
  438d7f:	and    BYTE PTR [eax],al
  438d81:	inc    DWORD PTR [eax]
  438d83:	sbb    eax,0x24db0000
  438d88:	int3   
  438d89:	dec    DWORD PTR [ecx+0x5d540055]
  438d8f:	arpl   di,di
  438d91:	inc    DWORD PTR [eax]
  438d93:	mov    eax,ds:0xc222f000
  438d98:	inc    DWORD PTR [eax]
  438d9a:	xor    DWORD PTR [edi+edi*8],0xffffffda
  438d9e:	jecxz  0x438d41
  438da0:	inc    DWORD PTR [eax]
  438da2:	dec    DWORD PTR [edi+edi*8-0xbf38e0]
  438da9:	inc    DWORD PTR [eax]
  438dab:	fwait
  438dac:	call   DWORD PTR [edx]
  438dae:	lea    edx,[edi+0x37ccffff]
  438db4:	add    BYTE PTR [edi-0x70],dh
  438db7:	jg     0x438db8
  438db9:	add    bh,bh
  438dbb:	jmp    0xff:0x36985cff
  438dc2:	dec    edx
  438dc4:	call   FWORD PTR [esi-0x7c84e8]
  438dca:	add    BYTE PTR [ebx-0x1],dh
  438dcd:	pop    ds
  438dce:	dec    ebp
  438dcf:	call   0x5b448dd3
  438dd4:	int3   
  438dd5:	pop    edx
  438dd6:	xor    al,0xcd
  438dd8:	int3   
  438dd9:	add    BYTE PTR [eax],al
  438ddb:	cmp    eax,0xf7a3400
  438de0:	inc    DWORD PTR [ebx-0x3500017d]
  438de6:	dec    edi
  438de7:	cli    
  438de8:	add    ah,cl
  438dea:	cmp    edx,0xffffff83
  438ded:	or     DWORD PTR [esi-0x32],esi
  438df0:	add    BYTE PTR [eax],al
  438df2:	add    BYTE PTR [edx],cl
  438df4:	push   DWORD PTR [ecx]
  438df6:	push   ecx
  438df7:	test   bh,bh
  438df9:	mov    DWORD PTR [eax],eax
  438dfb:	rol    DWORD PTR [eax],cl
  438dfd:	sub    eax,0xff83fab4
  438e02:	call   FWORD PTR [edx]
  438e04:	int3   
  438e05:	cli    
  438e06:	or     eax,0xffff2e
  438e0b:	mov    ds:0x4c6ddccc,eax
  438e10:	dec    esp
  438e12:	call   DWORD PTR [eax+eax*1]
  438e15:	adc    bh,ch
  438e17:	ja     0x438e18
  438e19:	add    ah,cl
  438e1b:	(bad)  
  438e1c:	(bad)  
  438e1d:	mov    edi,0xffff86e7
  438e22:	call   DWORD PTR [edi-0x21dd197d]
  438e28:	add    BYTE PTR [eax],al
  438e2a:	int3   
  438e2b:	sar    bh,cl
  438e2d:	stc    
  438e2e:	xlat   BYTE PTR ds:[ebx]
  438e2f:	es (bad) 
  438e31:	inc    DWORD PTR [eax]
  438e33:	clc    
  438e34:	int3   
  438e35:	pop    edi
  438e36:	fadd   st(7),st
  438e38:	add    BYTE PTR [eax],al
  438e3a:	push   DWORD PTR [ebp+0x13de68ff]
  438e40:	int3   
  438e41:	(bad)  
  438e42:	jmp    FWORD PTR [eax-0x55291301]
  438e48:	cmp    edi,0x0
  438e4b:	ds int3 
  438e4d:	sbb    ch,ch
  438e4f:	inc    edx
  438e50:	(bad)  
  438e51:	inc    DWORD PTR [eax]
  438e53:	scas   eax,DWORD PTR es:[edi]
  438e54:	add    cl,dl
  438e56:	or     al,0x6f
  438e58:	(bad)  
  438e59:	inc    DWORD PTR [eax]
  438e5b:	or     eax,0xff9a3600
  438e60:	(bad)  
  438e61:	inc    DWORD PTR [ebx+0x25b2ff90]
  438e67:	nop
  438e68:	(bad)  
  438e69:	inc    DWORD PTR [eax]
  438e6b:	dec    ecx
  438e6c:	push   DWORD PTR [ecx]
  438e6e:	js     0x438eeb
  438e70:	inc    DWORD PTR [eax]
  438e72:	add    BYTE PTR [esi-0x7d],dh
  438e75:	pop    edx
  438e76:	pop    eax
  438e77:	pop    ss
  438e78:	or     DWORD PTR [ecx+0x1eff6100],0xffffffe1
  438e7f:	sbb    edi,edi
  438e81:	dec    DWORD PTR [ecx+0xbe8ffbc]
  438e87:	pusha  
  438e88:	add    BYTE PTR [eax],al
  438e8a:	adc    DWORD PTR [eax+0x0],0x77
  438e8e:	repz mov esp,0xd08300ff
  438e94:	sbb    eax,0x32
  438e97:	stos   DWORD PTR es:[edi],eax
  438e98:	inc    DWORD PTR [ebx-0x1b003100]
  438e9e:	lods   eax,DWORD PTR ds:[esi]
  438e9f:	retf   0xffff
  438ea2:	dec    DWORD PTR [ebp-0x77]
  438ea5:	test   al,0x4e
  438ea7:	in     al,dx
  438ea8:	add    bh,bh
  438eaa:	add    BYTE PTR ds:0xbe0f7100,dl
  438eb0:	(bad)  
  438eb1:	(bad)  
  438eb2:	push   DWORD PTR [esi-0x77]
  438eb5:	int    0xff
  438eb7:	adc    esp,ecx
  438eb9:	add    BYTE PTR [eax],al
  438ebb:	imul   eax,DWORD PTR [eax],0xff3bf2cb
  438ec1:	mov    edi,edi
  438ec3:	nop
  438ec4:	add    ah,bh
  438ec6:	pushf  
  438ec7:	xchg   edi,eax
  438ec8:	int3   
  438ec9:	inc    DWORD PTR [eax]
  438ecb:	mov    bl,0xff
  438ecd:	adc    bl,BYTE PTR [ebx-0xff9a]
  438ed3:	ror    esp,cl
  438ed5:	xor    al,0xb6
  438ed7:	or     eax,0x6183ff00
  438edc:	add    BYTE PTR [edx+0xffa64f],dh
  438ee2:	mov    DWORD PTR [ebx-0x36351734],edi
  438ee8:	inc    DWORD PTR [eax]
  438eea:	(bad)  
  438eeb:	call   0x6f2db473
  438ef0:	add    bh,bh
  438ef2:	int3   
  438ef3:	retf   
  438ef4:	cmp    DWORD PTR [esi-0x5c],0x21
  438ef8:	add    bh,bh
  438efa:	mov    DWORD PTR [ecx-0x1ada2c01],ebx
  438f00:	add    DWORD PTR [eax],0x0
  438f03:	xchg   ebx,eax
  438f04:	dec    esi
  438f06:	jle    0x438f50
  438f08:	add    DWORD PTR [ebx-0x597c2700],0xffffffae
  438f0f:	aaa    
  438f10:	(bad)  
  438f11:	(bad)  
  438f12:	inc    edx
  438f14:	add    BYTE PTR ds:0xffff63ab,dh
  438f1a:	add    BYTE PTR [edx],dl
  438f1c:	(bad)  
  438f1d:	clc    
  438f1e:	das    
  438f1f:	nop
  438f20:	dec    DWORD PTR [ecx+0x47ffdbff]
  438f26:	int3   
  438f27:	mov    es,WORD PTR [eax]
  438f29:	add    BYTE PTR [ebx+0x387d0082],al
  438f2f:	loopne 0x438eb4
  438f31:	int3   
  438f32:	adc    DWORD PTR [esi],0x0
  438f35:	popa   
  438f36:	or     bh,BYTE PTR [ecx-0x79ff7c01]
  438f3c:	add    dh,dh
  438f3e:	adc    ch,BYTE PTR [edx-0x2effff01]
  438f44:	sbb    DWORD PTR [ecx],0x18
  438f47:	call   0x6200:0xa7ff00ff
  438f4e:	sub    al,0xf4
  438f50:	int3   
  438f51:	dec    esp
  438f53:	push   esp
  438f54:	cmp    DWORD PTR [edx],0xffffff91
  438f57:	in     eax,0x0
  438f59:	(bad)  
  438f5a:	call   FWORD PTR [eax+eax*1]
  438f5d:	jno    0x438eea
  438f5f:	mov    ?,edi
  438f61:	add    BYTE PTR [eax],al
  438f63:	das    
  438f64:	push   DWORD PTR [ebp+0x899329]
  438f6a:	push   DWORD PTR [ebx]
  438f6c:	call   DWORD PTR [esi]
  438f6e:	adc    BYTE PTR [eax],bl
  438f70:	dec    DWORD PTR [ecx+0x31006c00]
  438f76:	mov    al,0x1b
  438f78:	(bad)  
  438f79:	inc    DWORD PTR [eax]
  438f7b:	call   0xe48a780
  438f80:	(bad)  
  438f81:	inc    DWORD PTR [eax]
  438f83:	(bad)  
  438f84:	call   DWORD PTR [ebx]
  438f86:	cmp    DWORD PTR [edi+edi*8],esp
  438f89:	dec    DWORD PTR [ecx-0x3c650017]
  438f8f:	icebp  
  438f90:	(bad)  
  438f91:	inc    DWORD PTR [eax]
  438f93:	adc    bh,bh
  438f95:	dec    ecx
  438f96:	pop    eax
  438f97:	add    al,BYTE PTR [eax]
  438f99:	add    bh,bh
  438f9b:	push   ds
  438f9c:	inc    DWORD PTR [edx+0xb]
  438f9f:	into   
  438fa0:	add    BYTE PTR [eax],al
  438fa2:	int3   
  438fa3:	xchg   esp,eax
  438fa4:	add    BYTE PTR ds:0xff001703,cl
  438faa:	jmp    FWORD PTR [ecx+0x6af6deff]
  438fb0:	add    BYTE PTR [eax],al
  438fb2:	mov    DWORD PTR [ecx+0x0],ecx
  438fb5:	jmp    0x5d00:0xffcc962e
  438fbc:	(bad)  
  438fbd:	cmp    DWORD PTR [ebx+0x78],eax
  438fc0:	(bad)  
  438fc1:	inc    DWORD PTR [eax]
  438fc3:	sbb    al,0xff
  438fc5:	or     eax,eax
  438fc7:	into   
  438fc8:	add    bh,bh
  438fca:	mov    DWORD PTR [ebx-0x1],edi
  438fcd:	adc    DWORD PTR [edi],edx
  438fcf:	adc    esp,ecx
  438fd1:	inc    DWORD PTR [eax]
  438fd3:	ror    DWORD PTR [ecx-0x33c90c39],0xff
  438fda:	call   FWORD PTR [edi-0x5866e401]
  438fe0:	add    BYTE PTR [ebx+0x360060ff],al
  438fe6:	mov    ah,0xf4
  438fe8:	add    BYTE PTR [eax],al
  438fea:	add    BYTE PTR [ecx+0xcd407ff],dh
  438ff0:	dec    DWORD PTR [ecx+0x120092cc]
  438ff6:	jns    0x438ff2
  438ff8:	add    BYTE PTR [eax],al
  438ffa:	add    esp,0xffffffff
  438ffd:	mov    edx,0x83ff8dcf
  439002:	sbb    edx,0xffffffcc
  439005:	mov    bl,BYTE PTR [edx]
  439007:	(bad)  
  439008:	inc    DWORD PTR [eax]
  43900a:	add    ch,al
  43900c:	jmp    FWORD PTR [eax-0x80]
  43900f:	or     edi,edi
  439011:	cmp    edi,0xffffffc5
  439014:	(bad)  
  439015:	std    
  439016:	and    BYTE PTR [edi-0x1],ch
  439019:	add    bh,bh
  43901b:	mov    BYTE PTR [eax],0xfd
  43901e:	adc    BYTE PTR [esi],0x83
  439021:	add    BYTE PTR [eax],al
  439023:	jnp    0x438fa8
  439025:	mov    cl,0x16
  439027:	pop    edi
  439028:	add    bh,bh
  43902a:	jmp    DWORD PTR [ebp-0xd81cb01]
  439030:	inc    DWORD PTR [eax]
  439032:	add    BYTE PTR [edi+0x6fdad7ff],al
  439038:	add    bh,bh
  43903a:	call   DWORD PTR ds:0xc6547bff
  439040:	(bad)  
  439041:	inc    DWORD PTR [eax]
  439043:	inc    edi
  439044:	inc    DWORD PTR [esi]
  439046:	data16 jo 0x439048
  439049:	int3   
  43904a:	dec    DWORD PTR [edi+edi*8]
  43904d:	call   0xcd42ff60
  439052:	(bad)  
  439053:	cld    
  439054:	sub    DWORD PTR [edi+0x2c],0x9
  439058:	cmp    edi,0xffffffff
  43905b:	mov    ds:0x4d99f9ff,eax
  439060:	add    bh,bh
  439062:	(bad)  
  439063:	cmp    bh,bh
  439065:	inc    eax
  439066:	mov    bh,0x54
  439068:	add    BYTE PTR [ebx-0x8006b7d],al
  43906e:	xlat   BYTE PTR ds:[ebx]
  43906f:	hlt    
  439070:	add    bh,bh
  439072:	add    BYTE PTR [ecx-0x7d],bh
  439075:	scas   eax,DWORD PTR es:[edi]
  439076:	aad    0x24
  439078:	dec    DWORD PTR [ecx-0x3c00827d]
  43907e:	fimul  DWORD PTR [esi]
  439080:	add    bh,bh
  439082:	add    BYTE PTR [eax-0x1],dl
  439085:	adc    eax,0xfffff4a3
  43908a:	and    DWORD PTR [ecx-0x1],0x19
  43908e:	xor    BYTE PTR [esi-0x1],ch
  439091:	(bad)  
  439092:	inc    DWORD PTR [ebx]
  439094:	add    BYTE PTR [ebx+ecx*2],ch
  439097:	xchg   edi,eax
  439098:	add    bh,bh
  43909a:	adc    DWORD PTR [eax],0x0
  43909d:	inc    esp
  43909e:	(bad)  
  43909f:	mov    ch,0xff
  4390a1:	add    bh,bh
  4390a3:	sar    bh,cl
  4390a5:	pop    eax
  4390a6:	add    DWORD PTR [esi],ebx
  4390a8:	(bad)  
  4390a9:	(bad)  
  4390aa:	push   DWORD PTR [eax-0x127aef01]
  4390b0:	add    DWORD PTR [ebx+0x5fffc2ff],0xffffffed
  4390b7:	popa   
  4390b8:	int3   
  4390b9:	mov    edi,edi
  4390bb:	sub    cl,ah
  4390bd:	jo     0x4390a0
  4390bf:	adc    ecx,esp
  4390c1:	int3   
  4390c2:	call   DWORD PTR [ebp-0x315be800]
  4390c8:	(bad)  
  4390c9:	inc    DWORD PTR [eax]
  4390cb:	mov    bh,0x0
  4390cd:	push   edi
  4390ce:	imul   ebp,DWORD PTR [eax+0x0],0xadffff
  4390d5:	inc    ebx
  4390d6:	ds into 
  4390d8:	(bad)  
  4390d9:	(bad)  
  4390da:	jmp    edx
  4390dc:	mov    eax,edi
  4390de:	cwde   
  4390df:	jg     0x4390e0
  4390e1:	add    bh,bh
  4390e3:	icebp  
  4390e4:	jmp    FWORD PTR [ecx-0x34]
  4390e7:	mov    esi,0xac00cccc
  4390ec:	add    cl,ch
  4390ee:	mov    edi,ebp
  4390f0:	(bad)  
  4390f1:	dec    esp
  4390f3:	mov    ebx,0x52da9e83
  4390f8:	add    bh,bh
  4390fa:	dec    esi
  4390fc:	dec    DWORD PTR [edi-0xff2dd5]
  439102:	add    dl,dl
  439104:	add    BYTE PTR [esi],ch
  439106:	int3   
  439107:	imul   eax,DWORD PTR [eax],0xffffff83
  43910a:	inc    DWORD PTR [ecx]
  43910c:	sub    DWORD PTR [edi+0x14],0x40
  439110:	dec    DWORD PTR [ecx-0x6b00ca7d]
  439116:	jno    0x4390bf
  439118:	inc    DWORD PTR [ebx-0x10000a01]
  43911e:	sar    BYTE PTR [ecx],0xff
  439121:	add    BYTE PTR [eax],al
  439123:	add    eax,0x8368383
  439128:	(bad)  
  439129:	(bad)  
  43912a:	call   DWORD PTR [edi-0x23f08b01]
  439130:	add    ah,cl
  439132:	add    BYTE PTR [ebp+0x68d8c6ff],dh
  439138:	inc    DWORD PTR [ebx+0x758380cc]
  43913e:	xor    DWORD PTR [edx+0x2400cc83],esp
  439144:	add    BYTE PTR [edx-0x15],dl
  439147:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439148:	(bad)  
  439149:	(bad)  
  43914a:	dec    esi
  43914c:	call   FWORD PTR [edi-0x3]
  43914f:	pop    esp
  439150:	int3   
  439151:	inc    DWORD PTR [eax]
  439153:	mov    eax,0x238e5d83
  439158:	add    bh,bh
  43915a:	add    BYTE PTR ds:0x2d6214ff,bh
  439160:	add    DWORD PTR [eax],0xffffffff
  439163:	sbb    BYTE PTR [eax],al
  439165:	mov    esi,0x83ff5694
  43916a:	jmp    esp
  43916c:	add    BYTE PTR [edi],bl
  43916e:	lods   al,BYTE PTR ds:[esi]
  43916f:	jno    0x439171
  439171:	mov    DWORD PTR [eax],eax
  439173:	cmp    eax,0x6dc0aa83
  439178:	mov    edi,edi
  43917a:	mov    DWORD PTR [edi+edi*8],ebp
  43917d:	(bad)  
  43917e:	lahf   
  43917f:	inc    ebx
  439180:	inc    DWORD PTR [eax]
  439182:	and    DWORD PTR [esi-0x1],0x4d
  439186:	adc    ch,BYTE PTR [ebp+0x0]
  439189:	inc    DWORD PTR [ebx-0x77d6fff0]
  43918f:	rol    DWORD PTR [eax],cl
  439191:	add    bh,bh
  439193:	xor    eax,0x28c21aff
  439198:	add    bh,bh
  43919a:	add    BYTE PTR [esi],dl
  43919c:	jmp    FWORD PTR [ebx-0x76ff61bf]
  4391a2:	mov    DWORD PTR [esi],eax
  4391a4:	add    bl,al
  4391a6:	lds    edi,FWORD PTR [ecx]
  4391a8:	add    BYTE PTR [ebx-0x600b401],al
  4391ae:	data16 addr16 (bad) 
  4391b1:	dec    esp
  4391b3:	sub    DWORD PTR cs:[eax-0x76ff8bef],0xffffffff
  4391bb:	popf   
  4391bc:	add    BYTE PTR [ecx+edi*4],bl
  4391bf:	add    BYTE PTR ds:[eax],al
  4391c2:	int3   
  4391c3:	bound  eax,QWORD PTR [ebx-0x7694e7ca]
  4391c9:	(bad)  
  4391ca:	(bad)  
  4391cb:	inc    BYTE PTR [ebx+0xc2cb15]
  4391d1:	int3   
  4391d2:	call   DWORD PTR [edi+0x0]
  4391d5:	bound  ecx,QWORD PTR [edx+0x1e]
  4391d8:	cmp    edi,0xffffffff
  4391db:	adc    eax,0xca7ca0cc
  4391e0:	dec    esp
  4391e2:	mov    DWORD PTR [esi-0x77],ecx
  4391e5:	ror    esp,1
  4391e7:	pop    ebp
  4391e8:	int3   
  4391e9:	add    bh,bh
  4391eb:	and    eax,0x104369ff
  4391f0:	add    BYTE PTR [ebx-0x42ff5f01],al
  4391f6:	shl    BYTE PTR [edi-0x77],cl
  4391f9:	mov    DWORD PTR [eax],eax
  4391fb:	cwde   
  4391fc:	inc    DWORD PTR [ecx+0x58]
  4391ff:	fmul   st,st(4)
  439201:	add    BYTE PTR [eax],al
  439203:	iret   
  439204:	add    BYTE PTR [edi],bl
  439206:	mov    al,ds:0xff00ff60
  43920b:	push   esi
  43920c:	mov    DWORD PTR [edx+esi*2+0x33],ebx
  439210:	(bad)  
  439211:	inc    DWORD PTR [ebx-0x534800fa]
  439217:	ins    DWORD PTR es:[edi],dx
  439218:	add    bh,bh
  43921a:	inc    DWORD PTR [ecx+0x317ee8ff]
  439220:	(bad)  
  439221:	inc    DWORD PTR [eax]
  439223:	leave  
  439224:	call   DWORD PTR [ecx+0x27]
  439227:	lahf   
  439228:	dec    DWORD PTR [ecx-0x6076b534]
  43922e:	mov    ebp,0x89ff003f
  439233:	lods   eax,DWORD PTR ds:[esi]
  439234:	add    BYTE PTR [eax-0x93fe],al
  43923a:	add    ecx,0x0
  43923d:	mov    dh,0x28
  43923f:	jg     0x43920d
  439241:	add    BYTE PTR [eax],al
  439243:	push   ecx
  439244:	call   DWORD PTR [esi]
  439246:	(bad)  
  439247:	adc    al,0x0
  439249:	add    bh,bh
  43924b:	inc    ecx
  43924c:	add    BYTE PTR [edi],cl
  43924e:	fidiv  WORD PTR [eax+eax*1]
  439251:	(bad)  
  439252:	call   eax
  439254:	mov    DWORD PTR [ecx+eax*8+0x13],ebx
  439258:	inc    DWORD PTR [ebx+0xff5183]
  43925e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43925f:	add    eax,0x8ff0089
  439264:	call   FWORD PTR [esi]
  439266:	popa   
  439267:	xchg   edx,eax
  439268:	add    bh,bh
  43926a:	push   DWORD PTR [eax+0x0]
  43926d:	rol    DWORD PTR [eax],1
  43926f:	idiv   bh
  439271:	add    DWORD PTR [eax],0xffffffb2
  439274:	cmp    DWORD PTR [eax+ebp*1],0x7b
  439278:	int3   
  439279:	inc    DWORD PTR [eax]
  43927b:	ja     0x43927c
  43927d:	mov    al,ds:0xffff57dc
  439282:	push   ecx
  439284:	or     ebp,0x3b
  439287:	sub    DWORD PTR [eax],eax
  439289:	add    BYTE PTR [ebx+0x544600ee],al
  43928f:	in     eax,0x0
  439291:	int3   
  439292:	add    BYTE PTR [edx+0x0],dl
  439295:	into   
  439296:	xor    eax,0xffffff30
  43929b:	ins    DWORD PTR es:[edi],dx
  43929c:	call   DWORD PTR [esi-0x3300a1af]
  4392a2:	inc    DWORD PTR ds:0xb595cf00
  4392a8:	add    bh,bh
  4392aa:	int3   
  4392ab:	dec    ecx
  4392ac:	add    bh,ch
  4392ae:	sbb    al,0x7c
  4392b0:	int3   
  4392b1:	add    BYTE PTR [eax],al
  4392b3:	lock jmp FWORD PTR [edi-0x7c5f90]
  4392ba:	jmp    DWORD PTR [edi+edi*8-0x37]
  4392be:	bound  ebx,QWORD PTR [edx+0x0]
  4392c1:	int3   
  4392c2:	add    BYTE PTR [ecx+0x0],al
  4392c5:	popa   
  4392c6:	push   0xffff00a0
  4392cb:	cmp    bh,0xa5
  4392ce:	icebp  
  4392cf:	mov    edx,0xe2838383
  4392d4:	add    eax,0x1b
  4392d7:	fdiv   st(7),st
  4392d9:	int3   
  4392da:	add    BYTE PTR [edi+0x5966ccff],dl
  4392e0:	add    bh,bh
  4392e2:	(bad)  
  4392e3:	mov    edi,0xdce793ff
  4392e8:	mov    edi,edi
  4392ea:	cmp    DWORD PTR [esi+0x127f5aff],0x0
  4392f1:	add    BYTE PTR [ecx+0x162cffea],cl
  4392f7:	cli    
  4392f8:	(bad)  
  4392f9:	inc    DWORD PTR [ebx+0x7cbdff1b]
  4392ff:	sar    edi,cl
  439301:	(bad)  
  439302:	jmp    ebx
  439304:	inc    DWORD PTR [esi+0x8901a4]
  43930a:	push   esp
  43930c:	(bad)  
  43930d:	mov    ebp,0xffffc75e
  439312:	call   FWORD PTR [ecx-0x63599a01]
  439318:	add    BYTE PTR [eax],al
  43931a:	call   DWORD PTR [ecx+0x4fc13aff]
  439320:	or     DWORD PTR [ecx+0x6600b9ff],0x7b
  439327:	mov    edx,0xf70000ff
  43932c:	add    dh,cl
  43932e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43932f:	dec    esp
  439330:	add    BYTE PTR [ebx-0x2b005000],al
  439336:	nop
  439337:	mov    WORD PTR [eax],es
  439339:	add    bh,bh
  43933b:	mov    bh,0xff
  43933d:	ds adc ecx,ebp
  439340:	(bad)  
  439341:	inc    DWORD PTR [ebx+0x3699ff8e]
  439347:	out    dx,eax
  439348:	add    bh,bh
  43934a:	add    BYTE PTR [eax+0x5ee04ff],bh
  439350:	dec    DWORD PTR [ecx-0x68000701]
  439356:	and    eax,0xa100cccc
  43935c:	dec    DWORD PTR [esi]
  43935e:	jle    0x4393bd
  439360:	inc    DWORD PTR [eax]
  439362:	add    BYTE PTR [ebx+0x5b0a13ff],dh
  439368:	add    bh,bh
  43936a:	add    al,cl
  43936c:	add    BYTE PTR [ecx-0x767c9b73],al
  439372:	push   edi
  439374:	inc    DWORD PTR [ebp+0xc7d0]
  43937a:	call   FWORD PTR [edi+edi*8-0x916c20]
  439381:	(bad)  
  439382:	call   FWORD PTR [eax-0x34]
  439385:	jg     0x4393a5
  439387:	inc    DWORD PTR [bp+di+0x7000]
  43938c:	(bad)  
  43938d:	inc    BYTE PTR [edi+eax*4-0x1]
  439391:	int3   
  439392:	jmp    FWORD PTR [eax+eax*1-0x7cd477aa]
  439399:	dec    esp
  43939b:	loop   0x43939c
  43939d:	fnstenv [esp+edi*1+0x12008300]
  4393a4:	int3   
  4393a5:	out    dx,eax
  4393a6:	lea    ecx,cs:[ecx-0x76d9ff01]
  4393ad:	scas   eax,DWORD PTR es:[edi]
  4393ae:	push   eax
  4393af:	in     eax,dx
  4393b0:	inc    DWORD PTR [eax]
  4393b2:	call   DWORD PTR [edi]
  4393b4:	jmp    DWORD PTR [ebp+0x29]
  4393b7:	int3   
  4393b8:	(bad)  
  4393b9:	(bad)  
  4393ba:	(bad)  
  4393bb:	std    
  4393bc:	jmp    FWORD PTR [edx-0x337c00fb]
  4393c2:	add    al,bh
  4393c4:	add    cl,al
  4393c6:	sar    dh,cl
  4393c8:	inc    DWORD PTR [eax]
  4393ca:	dec    DWORD PTR [ecx]
  4393cc:	inc    eax
  4393ce:	es retf 
  4393d0:	int3   
  4393d1:	add    bh,bh
  4393d3:	add    edi,edi
  4393d5:	sub    al,0x8e
  4393d7:	sti    
  4393d8:	add    BYTE PTR [eax],al
  4393da:	dec    DWORD PTR [ebx+0x0]
  4393dd:	xor    al,0xc9
  4393df:	pop    ds
  4393e0:	add    bh,bh
  4393e2:	add    BYTE PTR ds:0x436f55ff,ah
  4393e8:	inc    DWORD PTR [eax]
  4393ea:	(bad)  
  4393eb:	mov    esp,0xb66e52ff
  4393f0:	(bad)  
  4393f1:	(bad)  
  4393f2:	jmp    FWORD PTR [ecx-0x54633200]
  4393f8:	inc    DWORD PTR [ebx-0x44fff600]
  4393fe:	in     al,dx
  4393ff:	mov    ds:0xf4ffffcc,al
  439404:	int3   
  439405:	cmp    DWORD PTR [eax-0x33000020],ebx
  43940b:	dec    ebx
  43940c:	push   DWORD PTR [esi+0xff041d]
  439412:	add    BYTE PTR [edi+edi*8-0x334bb378],al
  439419:	(bad)  
  43941a:	push   DWORD PTR [eax-0x1ba4967d]
  439420:	inc    DWORD PTR [ebx+0x6a83eecc]
  439426:	sahf   
  439427:	mov    eax,DWORD PTR [eax]
  439429:	inc    DWORD PTR [ebx+0x2867ff86]
  43942f:	pushf  
  439430:	inc    DWORD PTR [ebx-0x53000201]
  439436:	fs je  0x4393bc
  439439:	inc    DWORD PTR [eax]
  43943b:	add    DWORD PTR [eax],0x899beb36
  439441:	(bad)  
  439442:	(bad)  
  439443:	fld    QWORD PTR [eax]
  439445:	xor    DWORD PTR [ecx-0x3e],ebp
  439448:	mov    DWORD PTR [ebx+0xb833400],eax
  43944e:	dec    edx
  43944f:	mov    WORD PTR [eax],es
  439451:	inc    DWORD PTR [ebx+0x7394001e]
  439457:	out    0x0,al
  439459:	inc    DWORD PTR [eax]
  43945b:	pusha  
  43945c:	dec    DWORD PTR [eax+0x2d]
  43945f:	pop    ss
  439460:	mov    DWORD PTR [ebx+0x4189ff00],eax
  439466:	scas   eax,DWORD PTR es:[edi]
  439467:	in     al,dx
  439468:	mov    DWORD PTR [ebx-0x7d00967d],eax
  43946e:	(bad)  ds:0x9100ffff
  439474:	jmp    esp
  439476:	add    eax,0xff00ff8a
  43947b:	sti    
  43947c:	call   ebx
  43947e:	aad    0x6e
  439480:	(bad)  
  439481:	(bad)  
  439482:	push   DWORD PTR [edi-0x7d]
  439485:	aaa    
  439486:	and    bl,BYTE PTR [edi+edi*8]
  439489:	add    BYTE PTR [ebx+0x620683c6],al
  43948f:	xchg   esi,eax
  439490:	(bad)  
  439491:	(bad)  
  439492:	call   FWORD PTR [ebx+0x596f5a00]
  439498:	mov    DWORD PTR [eax],eax
  43949a:	call   esi
  43949c:	or     DWORD PTR [eax-0xffb6b9],0xffffffff
  4394a3:	nop
  4394a4:	jmp    DWORD PTR [ebp-0x38]
  4394a7:	loopne 0x4394a8
  4394a9:	mov    DWORD PTR [ebx-0x1452ffd7],eax
  4394af:	sti    
  4394b0:	add    DWORD PTR [eax],0x0
  4394b3:	dec    ecx
  4394b4:	jmp    FWORD PTR [ebp-0x60e7]
  4394ba:	and    edx,0xffffffcc
  4394bd:	jl     0x4394ea
  4394bf:	sub    edi,edi
  4394c1:	dec    DWORD PTR [ecx-0x236fffbc]
  4394c7:	out    dx,eax
  4394c8:	add    bh,bh
  4394ca:	call   DWORD PTR [edi+edi*8+0x16]
  4394ce:	push   edx
  4394cf:	popa   
  4394d0:	(bad)  
  4394d1:	(bad)  
  4394d2:	(bad)  
  4394d3:	mov    esp,0xda076483
  4394d8:	(bad)  
  4394d9:	dec    esp
  4394db:	ins    BYTE PTR es:[edi],dx
  4394dc:	add    cl,bh
  4394de:	cmp    eax,0xffffccc2
  4394e3:	jp     0x4394e5
  4394e5:	sti    
  4394e6:	add    BYTE PTR [ebp+0x4dff8300],bl
  4394ec:	call   DWORD PTR [edx]
  4394ee:	and    eax,DWORD PTR [ebx]
  4394f0:	int3   
  4394f1:	cmp    edi,0xa
  4394f4:	sbb    ebp,0x6e
  4394f7:	adc    al,0xff
  4394f9:	inc    DWORD PTR [ebx+0x1de7ffa8]
  4394ff:	jle    0x439501
  439501:	add    ah,cl
  439503:	jo     0x439504
  439505:	sbb    ebx,eax
  439507:	inc    edi
  439508:	inc    DWORD PTR [eax]
  43950a:	int3   
  43950b:	add    edi,edi
  43950d:	and    ah,BYTE PTR fs:[eax+eax*1]
  439511:	dec    DWORD PTR [ecx+0x12d4005a]
  439517:	push   es
  439518:	add    bh,bh
  43951a:	int3   
  43951b:	pop    esi
  43951c:	add    BYTE PTR [eax-0x55],dl
  43951f:	push   0xf500ffff
  439524:	call   FWORD PTR [eax-0x74]
  439527:	call   0x38ff:0x41ff8300
  43952e:	arpl   WORD PTR [eax+eax*1+0xde83ff],si
  439535:	and    al,0xcc
  439537:	in     eax,0xff
  439539:	add    DWORD PTR [eax],0xffffffcf
  43953c:	int3   
  43953d:	add    eax,0xffff5012
  439542:	or     ebx,0xffffffff
  439545:	call   0xcbff:0x8383bb9d
  43954c:	push   ebx
  43954e:	test   DWORD PTR [ebp-0x1],esi
  439551:	or     esp,0xffffff85
  439554:	add    BYTE PTR [edx-0x7c4fb6],bh
  43955a:	int3   
  43955b:	stc    
  43955c:	(bad)  
  43955d:	fisubr DWORD PTR [esi-0xff0086]
  439563:	push   esp
  439564:	add    dh,bh
  439566:	mov    ecx,0xffff00d7
  43956b:	ret    
  43956c:	call   DWORD PTR [eax+0x5]
  43956f:	sub    eax,0xcffffff
  439574:	int3   
  439575:	int3   
  439576:	push   ds
  439577:	push   esi
  439578:	inc    DWORD PTR [eax]
  43957a:	int3   
  43957b:	pop    esi
  43957c:	int3   
  43957d:	fsubr  QWORD PTR [ebx]
  43957f:	jg     0x439504
  439581:	(bad)  
  439582:	call   DWORD PTR [edi+edi*8+0x4424b4]
  439589:	(bad)  
  43958a:	jmp    DWORD PTR [edi-0x1]
  43958d:	or     esi,ecx
  43958f:	sbb    bh,bh
  439591:	add    DWORD PTR [eax],0xffffffb3
  439594:	int3   
  439595:	daa    
  439596:	retf   
  439597:	mov    al,ds:0x39ffff83
  43959c:	mov    DWORD PTR [eax+0x3a],ebp
  43959f:	jae    0x4395a0
  4395a1:	inc    DWORD PTR [eax]
  4395a3:	test   ah,0x7f
  4395a6:	push   0xffffffb7
  4395a8:	add    bh,bh
  4395aa:	call   FWORD PTR [eax-0x1]
  4395ad:	cwde   
  4395ae:	fs scas al,BYTE PTR es:[edi]
  4395b0:	inc    DWORD PTR [eax]
  4395b2:	push   DWORD PTR [edi]
  4395b4:	add    BYTE PTR [edx+0x7],ah
  4395b7:	push   ss
  4395b8:	add    BYTE PTR [ecx-0x67ff1801],cl
  4395be:	je     0x439548
  4395c0:	inc    DWORD PTR [ebx-0x3b00c101]
  4395c6:	mov    ebx,gs
  4395c8:	add    BYTE PTR [eax],al
  4395ca:	add    ah,dl
  4395cc:	jmp    DWORD PTR [esi-0x38]
  4395cf:	rol    DWORD PTR [eax],0xff
  4395d2:	inc    DWORD PTR [edi+0x3b52f6ff]
  4395d8:	add    bh,bh
  4395da:	inc    DWORD PTR [eax-0x27df8c01]
  4395e0:	inc    DWORD PTR [eax]
  4395e2:	mov    DWORD PTR [eax+eax*1+0x8467c],edi
  4395e9:	add    BYTE PTR [eax],al
  4395eb:	and    bh,bh
  4395ed:	fldcw  WORD PTR [edx]
  4395ef:	sub    cl,ah
  4395f1:	(bad)  
  4395f2:	inc    DWORD PTR ds:0x1e100700
  4395f8:	(bad)  
  4395f9:	(bad)  
  4395fa:	jmp    DWORD PTR [ebx+0x0]
  4395fd:	cwde   
  4395fe:	lea    eax,[esi-0x37003334]
  439604:	add    BYTE PTR [esi],bh
  439606:	jmp    0x4395e5
  439608:	int3   
  439609:	(bad)  
  43960a:	call   FWORD PTR [edi+edi*8]
  43960d:	test   al,0x71
  43960f:	loop   0x439594
  439611:	add    DWORD PTR [eax],0xffffff88
  439614:	int3   
  439615:	mov    cl,BYTE PTR [ebp-0x7c00b4]
  43961b:	and    BYTE PTR [ebx-0xc26be7],al
  439621:	add    bh,bh
  439623:	jmp    0x4395ae
  439625:	mov    bh,0xe7
  439627:	pop    edi
  439628:	add    BYTE PTR [eax],al
  43962a:	dec    DWORD PTR [eax-0x7d]
  43962d:	es sub eax,0xffff007d
  439633:	into   
  439634:	(bad)  
  439635:	jge    0x439624
  439637:	imul   eax,DWORD PTR [ebx-0x76370001],0xffffffce
  43963e:	pop    esp
  43963f:	addr16 (bad) 
  439641:	(bad)  
  439642:	jmp    FWORD PTR [eax+0x0]
  439645:	sub    ebx,esi
  439647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  439648:	(bad)  
  439649:	(bad)  
  43964a:	call   FWORD PTR [esi]
  43964c:	dec    DWORD PTR [esi-0x33003a48]
  439652:	add    BYTE PTR [ecx+ecx*4],dh
  439655:	pushf  
  439656:	sub    bh,BYTE PTR [eax-0x29ff007d]
  43965c:	add    BYTE PTR [edi-0x8],al
  43965f:	idiv   bh
  439661:	add    bh,bh
  439663:	add    al,0x0
  439665:	cmp    eax,0xffff9327
  43966a:	int3   
  43966b:	add    edi,edi
  43966d:	pop    ecx
  43966e:	jecxz  0x439639
  439670:	add    BYTE PTR [eax],al
  439672:	call   FWORD PTR [eax+0x7e0f5aff]
  439678:	int3   
  439679:	add    bh,bh
  43967b:	mov    al,0xff
  43967d:	jmp    0x439609
  43967f:	xchg   ebp,eax
  439680:	dec    DWORD PTR [ecx+0x2bffdcff]
  439686:	cdq    
  439687:	inc    edi
  439688:	dec    esp
  43968a:	sbb    edi,0xffffffcc
  43968d:	int3   
  43968e:	inc    edi
  43968f:	scas   eax,DWORD PTR es:[edi]
  439690:	dec    esp
  439692:	(bad)  
  439693:	cld    
  439694:	add    BYTE PTR [ecx+eiz*4-0xfffa],bh
  43969b:	dec    esp
  43969c:	dec    DWORD PTR [eax]
  43969e:	jge    0x43967b
  4396a0:	(bad)  
  4396a1:	inc    DWORD PTR [ebx+0x5036ff37]
  4396a7:	scas   al,BYTE PTR es:[edi]
  4396a8:	int3   
  4396a9:	add    BYTE PTR [eax],al
  4396ab:	mov    al,BYTE PTR [eax]
  4396ad:	ss mov ah,0x5d
  4396b0:	inc    DWORD PTR [eax]
  4396b2:	int3   
  4396b3:	or     esp,ecx
  4396b5:	sbb    BYTE PTR [ecx],al
  4396b7:	mov    bl,0xff
  4396b9:	(bad)  
  4396ba:	(bad)  
  4396bb:	jmp    0xf22bc843
  4396c0:	inc    DWORD PTR [ebx-0x75ff9400]
  4396c6:	or     eax,0x838389b3
  4396cb:	push   es
  4396cc:	call   FWORD PTR [edx-0x71e7]
  4396d2:	add    BYTE PTR [edi-0x1],bl
  4396d5:	sbb    esi,DWORD PTR [edx+ecx*2-0x227c0001]
  4396dc:	add    BYTE PTR [ecx+0x14],cl
  4396df:	push   ebp
  4396e0:	add    BYTE PTR [eax],al
  4396e2:	dec    ebp
  4396e4:	add    BYTE PTR [ebp-0x32],dh
  4396e7:	xchg   ecx,eax
  4396e8:	mov    DWORD PTR [eax],eax
  4396ea:	push   DWORD PTR ds:0x64edae00
  4396f0:	add    BYTE PTR [ecx+0x42ff7b89],cl
  4396f6:	add    al,0xa9
  4396f8:	add    BYTE PTR [eax],al
  4396fa:	int3   
  4396fb:	push   cs
  4396fc:	add    ch,bh
  4396fe:	ss pop es
  439700:	(bad)  
  439701:	(bad)  
  439702:	(bad)  
  439703:	cld    
  439704:	(bad)  
  439705:	fistp  DWORD PTR ds:[esi-0x34]
  439709:	add    BYTE PTR [eax],al
  43970b:	mov    ds:0xa9f47bff,al
  439710:	inc    DWORD PTR [eax]
  439712:	add    BYTE PTR [ecx-0x5925a934],dh
  439718:	inc    DWORD PTR [ebx-0x6c004f77]
  43971e:	retf   
  43971f:	push   eax
  439720:	(bad)  
  439721:	inc    DWORD PTR [eax]
  439723:	jae    0x4396a8
  439725:	mov    al,0x43
  439727:	push   cs
  439728:	mov    DWORD PTR [ebx-0xb00d500],eax
  43972e:	sbb    al,0x45
  439730:	inc    DWORD PTR [eax]
  439732:	inc    DWORD PTR [ebp-0xf457601]
  439738:	int3   
  439739:	int3   
  43973a:	int3   
  43973b:	int3   
  43973c:	int3   
  43973d:	int3   
  43973e:	int3   
  43973f:	int3   
  439740:	in     eax,dx
  439741:	ja     0x439743
  439743:	push   ebx
  439745:	add    DWORD PTR [ebx+0x5d00d6ff],0xffffffeb
  43974c:	add    bh,bh
  43974e:	sub    ebx,esi
  439750:	cdq    
  439751:	xchg   edi,edi
  439753:	add    BYTE PTR [ebp-0x1],dl
  439756:	cmp    edi,0x29
  439759:	add    BYTE PTR [esi-0x2e],bl
  43975c:	add    BYTE PTR [ebx+0x47776d1e],al
  439762:	inc    DWORD PTR [ebx+0xd0]
  439768:	ds inc edx
  43976b:	adc    al,0xff
  43976d:	xor    DWORD PTR [ebp+0x44],0xfffffff0
  439771:	sbb    DWORD PTR [eax],eax
  439773:	push   DWORD PTR [ecx]
  439775:	cmp    edi,0x0
  439778:	sub    edi,edi
  43977a:	sti    
  43977b:	in     al,dx
  43977c:	dec    DWORD PTR [ecx+0x766b1591]
  439782:	(bad)  
  439783:	jmp    DWORD PTR [eax]
  439785:	add    bh,bh
  439787:	jmp    DWORD PTR [eax+0x0]
  43978a:	imul   ebp,DWORD PTR [edi],0xb0f8cc00
  439790:	gs dec esi
  439792:	add    BYTE PTR [eax],al
  439794:	adc    edi,edi
  439796:	add    DWORD PTR [eax],0xfffffff0
  439799:	call   FWORD PTR [esi+0x73]
  43979c:	add    ah,cl
  43979e:	push   cs
  43979f:	test   al,0xfb
  4397a1:	cmp    al,0xff
  4397a3:	add    BYTE PTR [edx-0x1],cl
  4397a6:	inc    DWORD PTR [eax]
  4397a8:	or     DWORD PTR cs:[esi],0xffffffea
  4397ac:	mov    edi,edi
  4397ae:	sar    DWORD PTR [ecx-0x33332c17],cl
  4397b4:	sub    DWORD PTR [eax],eax
  4397b6:	add    DWORD PTR [eax],0xffffffd3
  4397b9:	call   DWORD PTR [ecx-0x6400ff92]
  4397bf:	xlat   BYTE PTR gs:[ebx]
  4397c1:	adc    edi,edi
  4397c3:	add    al,dl
  4397c5:	(bad)  
  4397c6:	inc    DWORD PTR [eax]
  4397c8:	int3   
  4397c9:	inc    DWORD PTR ds:0x3ff00aa
  4397cf:	(bad)  
  4397d0:	into   
  4397d1:	push   cs
  4397d2:	mov    edi,edi
  4397d4:	sahf   
  4397d5:	(bad)  
  4397d6:	(bad)  
  4397d7:	inc    eax
  4397d9:	add    BYTE PTR [ecx+0x68830039],bh
  4397df:	add    edx,0x4cffff13
  4397e5:	inc    DWORD PTR [ebx+0x9ff51ff]
  4397eb:	ret    0x89ff
  4397ee:	ds cld 
  4397f0:	push   esi
  4397f1:	cmp    edi,edi
  4397f3:	add    dh,al
  4397f5:	add    BYTE PTR [eax],al
  4397f7:	sbb    DWORD PTR [edi+0x5d8aff],0xffffff89
  4397fe:	outs   dx,BYTE PTR ds:[esi]
  4397ff:	xor    BYTE PTR [edi-0x21ffff80],al
  439805:	cmp    edi,0x0
  439808:	fmul   DWORD PTR [ecx-0x76eae3]
  43980e:	ins    BYTE PTR es:[edi],dx
  43980f:	mov    esp,0xcc008fcd
  439814:	jno    0x439815
  439816:	(bad)  
  439817:	call   FWORD PTR [ebx]
  439819:	int3   
  43981a:	bound  esp,QWORD PTR [edx]
  43981c:	inc    DWORD PTR [eax]
  43981e:	iret   
  43981f:	and    ebx,DWORD PTR [eax+0x3f]
  439822:	add    bh,bh
  439824:	test   eax,0xbcffff00
  439829:	sub    DWORD PTR [esi+eax*2-0x1a100077],0x6c
  439831:	ja     0x4397ff
  439833:	add    BYTE PTR [ebp-0x6f760001],cl
  439839:	add    dh,bl
  43983b:	das    
  43983c:	add    bh,bh
  43983e:	mov    dh,0x78
  439840:	mov    edi,0x6d000072
  439845:	inc    DWORD PTR [ebx-0x2800b701]
  43984b:	aaa    
  43984c:	add    ah,cl
  43984e:	push   0xffffffed
  439850:	add    DWORD PTR [edx],eax
  439852:	add    bh,bh
  439854:	add    BYTE PTR [ebx-0x769f0001],0x58
  43985b:	stos   BYTE PTR es:[edi],al
  43985c:	(bad)  
  43985d:	push   DWORD PTR [esi+0x4cd1be]
  439863:	sbb    DWORD PTR [ebp+0x3aff00ff],0xffffff83
  43986a:	sbb    eax,0x95008990
  43986f:	shl    esi,1
  439871:	sbb    al,0xff
  439873:	add    BYTE PTR [ebx],ch
  439875:	(bad)  
  439876:	inc    DWORD PTR [eax]
  439878:	mov    DWORD PTR [ebx-0x7c33eafa],0x47f7aa6
  439882:	dec    esp
  439884:	sar    bh,cl
  439886:	inc    DWORD PTR [eax]
  439888:	fdiv   st(7),st
  43988a:	(bad)  
  43988b:	fld    DWORD PTR [eax]
  43988d:	jmp    FWORD PTR [edi-0x34ffc6]
  439893:	dec    DWORD PTR [edx]
  439895:	dec    esp
  439897:	add    BYTE PTR [edi],ah
  439899:	push   DWORD PTR [ebp-0x17]
  43989c:	(bad)  
  43989d:	call   FWORD PTR [ebp-0x63]
  4398a0:	stos   BYTE PTR es:[edi],al
  4398a1:	mov    edx,0xff65ff00
  4398a6:	dec    DWORD PTR [ecx-0x214200be]
  4398ac:	dec    DWORD PTR [ecx+0x55552631]
  4398b2:	add    DWORD PTR [eax],0xffffffd8
  4398b5:	mov    DWORD PTR [ebx-0x5200b27d],eax
  4398bb:	test   edi,edi
  4398bd:	(bad)  
  4398be:	(bad)  
  4398bf:	adc    BYTE PTR gs:[ecx-0x1],0xff
  4398c4:	loop   0x4398c5
  4398c6:	add    BYTE PTR [ebx-0x6350ff14],al
  4398cc:	mov    esp,ecx
  4398ce:	lods   al,BYTE PTR ds:[esi]
  4398cf:	pusha  
  4398d0:	sbb    DWORD PTR [esi+0x17ccff],edx
  4398d6:	add    BYTE PTR [ebx-0x7bf00009],al
  4398dc:	(bad)  
  4398dd:	call   FWORD PTR [edi]
  4398df:	cmp    DWORD PTR [edi-0x17],ebp
  4398e5:	add    bh,bh
  4398e7:	add    BYTE PTR ds:0xff755100,ch
  4398ed:	call   DWORD PTR [eax]
  4398ef:	mov    cl,0x80
  4398f1:	mov    dh,0x0
  4398f3:	jmp    FWORD PTR [esi-0x77]
  4398f6:	add    BYTE PTR [ebx-0x1cd2ff69],al
  4398fc:	inc    DWORD PTR [eax]
  4398fe:	stc    
  4398ff:	gs (bad) 
  439901:	cmp    eax,0x8a0083
  439906:	cmp    edi,0xffffffd4
  439909:	cmp    DWORD PTR [ebp+0x74],0xffffff89
  43990d:	add    dh,al
  43990f:	shl    DWORD PTR [esi-0x5d],1
  439912:	inc    DWORD PTR [eax]
  439914:	inc    ebx
  439915:	inc    DWORD PTR [eax]
  439917:	inc    DWORD PTR [edx]
  439919:	push   DWORD PTR [edx-0x640000a7]
  43991f:	jo     0x43997a
  439921:	inc    ebx
  439922:	add    BYTE PTR [ebx-0x7c7c00eb],al
  439928:	lods   eax,DWORD PTR ds:[esi]
  439929:	add    BYTE PTR [edx],bh
  43992b:	inc    DWORD PTR es:[ebx+0x6fc7b597]
  439932:	cmp    edi,0x23
  439935:	(bad)  
  439936:	dec    DWORD PTR [ecx-0x4e3f7655]
  43993c:	int3   
  43993d:	jmp    FWORD PTR [ebp+0x18]
  439940:	repz test eax,0xffd0ff89
  439946:	add    bh,bh
  439948:	jge    0x439949
  43994a:	loop   0x4398f2
  43994c:	inc    DWORD PTR [ebx+0x6adf1bd]
  439952:	add    BYTE PTR [eax],al
  439954:	xor    al,0xff
  439956:	add    bh,bh
  439958:	test   DWORD PTR [eax],eax
  43995a:	jae    0x4399d5
  43995c:	inc    DWORD PTR [eax]
  43995e:	loope  0x439949
  439960:	cdq    
  439961:	idiv   bh
  439963:	call   FWORD PTR [eax+eax*1]
  439966:	add    bh,bh
  439968:	fiadd  DWORD PTR [eax]
  43996a:	nop
  43996b:	adc    al,0xff
  43996d:	xor    DWORD PTR [esi-0x2b],0xffffffaa
  439971:	aad    0xcc
  439973:	dec    DWORD PTR [ecx]
  439975:	add    BYTE PTR [eax],al
  439977:	add    BYTE PTR ds:0x830f0100,al
  43997d:	call   FWORD PTR [esp+ebp*8-0xffe331]
  439984:	pop    eax
  439985:	add    bh,bh
  439987:	call   DWORD PTR [edi]
  439989:	jmp    DWORD PTR [edx+0x4b]
  43998c:	mov    edi,edi
  43998e:	int3   
  43998f:	ins    DWORD PTR es:[edi],dx
  439990:	fbld   TBYTE PTR ds:0xffe58900
  439996:	cmp    edi,0xffffffe9
  439999:	dec    ecx
  43999b:	lock add ah,cl
  43999e:	jmp    0xa2ff:0x343e83
  4399a5:	(bad)  
  4399a6:	dec    esp
  4399a8:	xor    al,0x0
  4399aa:	les    ecx,FWORD PTR [ecx]
  4399ac:	inc    DWORD PTR [ebx-0x6522845d]
  4399b2:	(bad)  
  4399b3:	jmp    DWORD PTR [ebp+0x0]
  4399b6:	inc    DWORD PTR [eax]
  4399b8:	mov    edi,edi
  4399ba:	sbb    eax,0x2f0000e3
  4399bf:	mov    al,0x74
  4399c1:	push   eax
  4399c2:	add    DWORD PTR [ebx-0xffbf],0xffffff8f
  4399c9:	inc    DWORD PTR [ecx+ebx*2+0x17db00ff]
  4399d0:	sbb    bh,BYTE PTR [edx-0x7cc7ff01]
  4399d6:	(bad)  
  4399d7:	call   FWORD PTR [edi+0xbfc1ff]
  4399dd:	add    dh,dh
  4399df:	les    ebx,FWORD PTR [esi]
  4399e1:	cs (bad) 
  4399e3:	dec    DWORD PTR [ebx-0x1]
  4399e6:	dec    DWORD PTR [ecx-0xeb768c]
  4399ec:	add    BYTE PTR [eax],al
  4399ee:	ret    
  4399ef:	ins    DWORD PTR es:[edi],dx
  4399f0:	jno    0x4399a1
  4399f2:	inc    DWORD PTR [eax]
  4399f4:	mov    ebx,0x7b008300
  4399f9:	call   ebx
  4399fb:	les    eax,FWORD PTR [eax]
  4399fd:	add    dl,cl
  4399ff:	sbb    esi,DWORD PTR [ecx]
  439a01:	ret    
  439a02:	dec    esp
  439a04:	pushf  
  439a05:	int3   
  439a06:	add    BYTE PTR [ebx+0x6e6e0003],al
  439a0c:	(bad)  
  439a0d:	dec    DWORD PTR [ebx]
  439a0f:	fmul   QWORD PTR [eax-0x74]
  439a12:	(bad)  
  439a13:	call   DWORD PTR [ebx+eax*4+0x58cc00]
  439a1a:	sub    al,0xf5
  439a1c:	inc    DWORD PTR [eax]
  439a1e:	push   ds
  439a1f:	push   di
  439a21:	aam    0x0
  439a23:	sub    DWORD PTR [edx-0x1],0xffffff89
  439a27:	mov    DWORD PTR [ecx-0x11e701],esi
  439a2d:	sub    eax,0xffffff94
  439a30:	pop    edi
  439a31:	cmp    edi,edi
  439a33:	jmp    FWORD PTR [ebp+0x64ffff00]
  439a39:	jmp    FWORD PTR [edx]
  439a3b:	jne    0x439a3c
  439a3d:	mov    DWORD PTR [ebx+0x54a346],ebp
  439a43:	(bad)  
  439a44:	mov    edi,0xafffffff
  439a49:	call   DWORD PTR [ebx+0x6600ffe4]
  439a4f:	daa    
  439a50:	and    dh,0xff
  439a53:	inc    ebp
  439a55:	dec    DWORD PTR [ecx-0x30004001]
  439a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439a5c:	cmp    edi,0xffffff91
  439a5f:	add    ah,BYTE PTR [edi+0x7c]
  439a62:	cmp    edi,0xffffff86
  439a65:	(bad)  
  439a66:	inc    DWORD PTR [eax]
  439a68:	xor    edi,edi
  439a6a:	outs   dx,DWORD PTR ds:[esi]
  439a6b:	cmp    ecx,DWORD PTR [ecx-0x5a46a234]
  439a71:	xchg   DWORD PTR [ebx-0x6800],eax
  439a77:	dec    DWORD PTR [ebx]
  439a79:	jmp    FWORD PTR [ebx+0xe]
  439a7c:	add    bh,bh
  439a7e:	out    0xbc,al
  439a80:	jp     0x439a1c
  439a82:	add    bh,bh
  439a84:	ins    DWORD PTR es:[edi],dx
  439a85:	dec    esp
  439a87:	add    DWORD PTR [eax-0x3306b901],0xffffffcc
  439a8e:	jp     0x439aae
  439a90:	jle    0x439aac
  439a92:	add    bh,bh
  439a94:	outs   dx,DWORD PTR ds:[esi]
  439a95:	(bad)  
  439a96:	dec    DWORD PTR [ecx+0x2d46835a]
  439a9c:	int3   
  439a9d:	add    BYTE PTR [ecx+0xa7a405],ah
  439aa3:	add    BYTE PTR [edx],ah
  439aa5:	(bad)  
  439aa6:	dec    DWORD PTR [ecx-0x60ab00be]
  439aac:	or     DWORD PTR [ecx-0x7f6c3e83],0xffffffff
  439ab3:	push   DWORD PTR [edx+0x0]
  439ab6:	dec    DWORD PTR [ecx-0x4e8c00b8]
  439abc:	add    bh,bh
  439abe:	add    ecx,DWORD PTR [ebx-0x76ff6658]
  439ac4:	jbe    0x439ac5
  439ac6:	(bad)  
  439ac7:	push   DWORD PTR [ebx+eax*4]
  439aca:	ss (bad) 
  439acc:	int3   
  439acd:	push   eax
  439acf:	pop    es
  439ad0:	jecxz  0x439a53
  439ad2:	inc    DWORD PTR [eax]
  439ad4:	inc    eax
  439ad5:	add    bh,bh
  439ad7:	int3   
  439ad8:	(bad)  
  439ada:	mov    eax,0xa489fff1
  439adf:	mov    edi,0x83834c94
  439ae4:	inc    ebp
  439ae5:	add    bh,bh
  439ae7:	call   DWORD PTR [edi+edi*8]
  439aea:	jecxz  0x439aca
  439aec:	(bad)  
  439aed:	dec    DWORD PTR [esi]
  439aef:	inc    eax
  439af0:	call   0xa7449a4d
  439af5:	cmp    edi,0x0
  439af8:	leave  
  439af9:	jmp    FWORD PTR [ebp-0x25]
  439afc:	int3   
  439afd:	add    BYTE PTR [esp+ecx*8-0x60],dh
  439b01:	fs cmp edi,0xffffffd5
  439b05:	mov    DWORD PTR [eax],eax
  439b07:	add    BYTE PTR [eax-0xf4057d],bl
  439b0d:	dec    DWORD PTR ds:0x831e87ab
  439b13:	add    BYTE PTR [edx-0x7d],dl
  439b16:	add    BYTE PTR [eax],al
  439b18:	jnp    0x439b1a
  439b1a:	mov    ecx,0x5dffcc9e
  439b1f:	mov    bh,0xf
  439b21:	jmp    0xff00:0xff2100ff
  439b28:	pop    ebp
  439b29:	jmp    DWORD PTR [eax]
  439b2b:	xchg   DWORD PTR [eax],eax
  439b2d:	inc    DWORD PTR [ebp-0x40]
  439b30:	xchg   esi,eax
  439b31:	push   ebx
  439b32:	(bad)  
  439b33:	push   DWORD PTR ds:0xd8ffffff
  439b39:	call   DWORD PTR [edi+0x9fffff6]
  439b3f:	xor    eax,0x8983e257
  439b44:	popf   
  439b45:	add    BYTE PTR [ecx+0x1dcc1283],cl
  439b4b:	dec    ecx
  439b4c:	(bad)  
  439b4d:	inc    DWORD PTR [ecx]
  439b4f:	cmp    edx,DWORD PTR [bx]
  439b52:	add    DWORD PTR [eax],0xffffffa6
  439b55:	dec    DWORD PTR [ecx+0x79fff7ff]
  439b5b:	push   0x6650ff89
  439b60:	data16 or al,0x83
  439b63:	(bad)  
  439b64:	jmp    0x7000:0x8383ccff
  439b6b:	sbb    bh,bh
  439b6d:	(bad)  
  439b6e:	jg     0x439afe
  439b70:	in     eax,0xa
  439b72:	add    bh,bh
  439b74:	(bad)  
  439b75:	int3   
  439b76:	dec    DWORD PTR [ecx-0x63f03329]
  439b7c:	(bad)  
  439b7d:	dec    DWORD PTR [esp+ebx*4-0x2]
  439b81:	call   0xff:0xff2bff83
  439b88:	jl     0x439b89
  439b8a:	and    al,0xaa
  439b8c:	add    DWORD PTR [ebx-0x33837b0c],0xffffffff
  439b93:	push   DWORD PTR [eax+eax*1-0xcd0100]
  439b9a:	pusha  
  439b9b:	fld    DWORD PTR [eax]
  439b9d:	dec    DWORD PTR [esi+0x14]
  439ba0:	iret   
  439ba1:	pop    esp
  439ba2:	add    BYTE PTR [eax],al
  439ba4:	mov    ds:0xa2ff00ff,eax
  439ba9:	add    BYTE PTR [edi-0x5b000004],dl
  439baf:	cmc    
  439bb0:	cmp    DWORD PTR [ebp+0x0],eax
  439bb3:	add    BYTE PTR [ebp+0x5e8300ff],dh
  439bb9:	(bad)  
  439bba:	(bad)  
  439bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  439bbc:	mov    edi,edi
  439bbe:	loope  0x439c1b
  439bc0:	adc    BYTE PTR [bx+di+0xdff],cl
  439bc5:	(bad)  
  439bc6:	inc    DWORD PTR [ebx-0x21ba0042]
  439bcc:	int3   
  439bcd:	add    BYTE PTR [edx-0xb],dl
  439bd0:	xlat   BYTE PTR ds:[ebx]
  439bd1:	xor    bh,bh
  439bd3:	add    dh,cl
  439bd5:	int3   
  439bd6:	inc    DWORD PTR [eax]
  439bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439bd9:	add    BYTE PTR [edi+ebp*1],dh
  439bdc:	inc    DWORD PTR [eax]
  439bde:	div    bl
  439be0:	mov    ss,ecx
  439be2:	add    bh,bh
  439be4:	mov    ebp,0xce8983ff
  439be9:	add    BYTE PTR [ebx+0x17],dh
  439bec:	add    BYTE PTR [eax],al
  439bee:	mov    DWORD PTR [edx+ebx*4],esp
  439bf1:	pop    ss
  439bf2:	mov    edi,edi
  439bf4:	dec    ebx
  439bf5:	add    bh,bh
  439bf7:	adc    DWORD PTR [esi-0x7d],0x5f
  439bfb:	idiv   bh
  439bfd:	jmp    DWORD PTR [ecx*2-0x7362]
  439c04:	test   eax,0x5dffffff
  439c09:	(bad)  
  439c0a:	in     eax,dx
  439c0b:	or     edi,edi
  439c0d:	and    DWORD PTR [ebx+0x5d],0x27
  439c11:	or     al,BYTE PTR [eax]
  439c13:	dec    DWORD PTR [edx]
  439c15:	or     esp,0xffffff83
  439c18:	lods   al,BYTE PTR ds:[esi]
  439c19:	dec    DWORD PTR [eax+ecx*8]
  439c1c:	inc    DWORD PTR [eax]
  439c1e:	mov    bh,0x5
  439c20:	mov    WORD PTR [edx],cs
  439c22:	add    bh,bh
  439c24:	fdivr  st,st(7)
  439c26:	(bad)  
  439c27:	push   DWORD PTR [esi]
  439c29:	jmp    FWORD PTR [ebp-0x4700006d]
  439c2f:	(bad)  
  439c30:	fsubp  st(1),st
  439c32:	add    DWORD PTR [eax],0x6f
  439c35:	mov    esp,ecx
  439c37:	add    BYTE PTR [edi],dl
  439c39:	dec    DWORD PTR [esi-0x52ff00ec]
  439c3f:	push   ss
  439c40:	and    al,BYTE PTR [eax-0x77]
  439c43:	jmp    FWORD PTR [ebp-0x3c7c3377]
  439c49:	dec    DWORD PTR [edx+0x34]
  439c4c:	add    BYTE PTR [eax],al
  439c4e:	add    al,0xe5
  439c50:	add    dl,BYTE PTR [eax-0xebff01]
  439c56:	(bad)  
  439c57:	(bad)  
  439c58:	mov    eax,0x3155ff
  439c5d:	mov    eax,eax
  439c5f:	inc    esi
  439c60:	jo     0x439c3d
  439c62:	(bad)  
  439c63:	push   DWORD PTR [edi+edi*8-0x34]
  439c67:	add    BYTE PTR [edi-0xdf8401],ah
  439c6d:	add    BYTE PTR [ebx+0x75],bh
  439c70:	inc    ebp
  439c71:	jge    0x439c72
  439c73:	add    BYTE PTR [edi-0x79007c01],dh
  439c79:	sub    eax,0xffffffbc
  439c7c:	(bad)  
  439c7d:	jmp    DWORD PTR [esi]
  439c7f:	and    esi,DWORD PTR [ecx]
  439c81:	or     al,BYTE PTR [ebx-0x6e7d]
  439c87:	add    BYTE PTR [edx],ch
  439c89:	add    BYTE PTR [ebp+0x67],al
  439c8c:	(bad)  
  439c8d:	call   FWORD PTR [ebp+0xb]
  439c90:	inc    eax
  439c91:	mov    al,0x83
  439c93:	add    cl,bl
  439c95:	int3   
  439c96:	add    bh,bh
  439c98:	aam    0x0
  439c9a:	mov    ds:0x9c83830c,al
  439c9f:	cmp    esi,DWORD PTR [edx]
  439ca1:	jo     0x439ca2
  439ca3:	add    BYTE PTR [ecx],bl
  439ca5:	add    DWORD PTR [eax],0x0
  439ca8:	icebp  
  439ca9:	add    BYTE PTR [edx],bh
  439cab:	ret    
  439cac:	inc    DWORD PTR [eax]
  439cae:	outs   dx,DWORD PTR ds:[esi]
  439caf:	cmp    al,dl
  439cb1:	mov    edi,edi
  439cb3:	add    BYTE PTR ds:0x4700ff00,dl
  439cb9:	(bad)  
  439cba:	cli    
  439cbb:	add    edi,edi
  439cbd:	and    DWORD PTR [edi+ebx*4-0xff4198],0x51
  439cc5:	inc    DWORD PTR [ebx-0x4eff997d]
  439ccb:	xchg   edi,eax
  439ccc:	int3   
  439ccd:	cmp    DWORD PTR [esi-0x3be525],0xffffffff
  439cd4:	xchg   ebx,eax
  439cd5:	(bad)  
  439cd6:	inc    DWORD PTR [eax]
  439cd8:	into   
  439cd9:	add    dl,bh
  439cdb:	repz add bh,bh
  439cde:	test   dh,bl
  439ce0:	int    0x60
  439ce2:	(bad)  
  439ce3:	call   FWORD PTR [ecx-0x1]
  439ce6:	add    bh,bh
  439ce8:	jb     0x439c6d
  439cea:	rol    BYTE PTR [ecx-0x1],1
  439ced:	add    BYTE PTR [edi-0x49],bh
  439cf0:	sub    ecx,DWORD PTR [edx-0x8f0001]
  439cf6:	inc    DWORD PTR [eax]
  439cf8:	das    
  439cf9:	add    BYTE PTR [ebp+0x4183ff1e],cl
  439cff:	jmp    0x83448634
  439d04:	loopne 0x439cd2
  439d06:	add    BYTE PTR [ebx-0x4c9a006a],al
  439d0c:	add    bh,bh
  439d0e:	fcmovnb st,st(4)
  439d10:	pop    es
  439d11:	add    DWORD PTR [eax],0xff00b1ff
  439d17:	jmp    FWORD PTR [edi]
  439d19:	add    al,dl
  439d1b:	ss (bad) 
  439d1d:	call   DWORD PTR [esi]
  439d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  439d20:	dec    eax
  439d21:	xor    eax,0x50ccff
  439d26:	inc    DWORD PTR [eax]
  439d28:	mov    eax,0xffc844ff
  439d2d:	sub    DWORD PTR [edx],0x2b
  439d30:	or     al,dh
  439d32:	add    bh,bh
  439d34:	popf   
  439d35:	inc    DWORD PTR [eax]
  439d37:	jmp    DWORD PTR [eax+0x0]
  439d3a:	gs jo  0x439d3d
  439d3d:	(bad)  
  439d3e:	jp     0x439d1e
  439d40:	dec    ecx
  439d41:	test   BYTE PTR [eax],al
  439d43:	int3   
  439d44:	es (bad) 
  439d46:	inc    DWORD PTR [ebx+0x1c530029]
  439d4c:	add    bh,bh
  439d4e:	push   edx
  439d4f:	stos   BYTE PTR es:[edi],al
  439d50:	adc    BYTE PTR [ebx-0x1],bl
  439d53:	call   FWORD PTR [esi]
  439d55:	dec    DWORD PTR [ecx-0xaffa900]
  439d5b:	icebp  
  439d5c:	inc    DWORD PTR [eax]
  439d5e:	jno    0x439d63
  439d60:	stc    
  439d61:	scas   al,BYTE PTR es:[edi]
  439d62:	inc    DWORD PTR [eax]
  439d64:	push   cs
  439d65:	add    bh,bh
  439d67:	add    bl,dl
  439d69:	push   DWORD PTR [edi-0x41]
  439d6c:	add    DWORD PTR [eax],0xe
  439d6f:	loopne 0x439d3c
  439d71:	or     eax,0xfffdff83
  439d76:	(bad)  
  439d77:	dec    DWORD PTR [edx]
  439d79:	cmp    ebp,0x32
  439d7c:	inc    DWORD PTR [eax]
  439d7e:	daa    
  439d7f:	or     eax,DWORD PTR [eax+0x69ff00a2]
  439d85:	add    bh,bh
  439d87:	int3   
  439d88:	jno    0x439d8a
  439d8a:	add    bl,bh
  439d8c:	add    bh,bh
  439d8e:	out    dx,al
  439d8f:	(bad)  
  439d90:	mov    ebx,0x3effff76
  439d95:	(bad)  
  439d96:	dec    DWORD PTR [ecx+0x7ba0ffdb]
  439d9c:	add    BYTE PTR [eax],al
  439d9e:	cli    
  439d9f:	xor    eax,0xffff3596
  439da4:	jmp    0x3600:0x108900cc
  439dab:	push   ebp
  439dac:	cmp    edi,0xffffffcb
  439daf:	out    dx,al
  439db0:	test   al,0xd2
  439db2:	add    BYTE PTR [eax],al
  439db4:	adc    DWORD PTR [eax],eax
  439db6:	add    DWORD PTR [eax],0xffffffae
  439db9:	jmp    FWORD PTR ds:0x4500cc1c
  439dbf:	pushf  
  439dc0:	xchg   ebp,eax
  439dc1:	mov    ds:0xff9d00ff,eax
  439dc6:	dec    DWORD PTR [ecx+0x2163008f]
  439dcc:	mov    esp,ecx
  439dce:	mov    edx,0xfff66876
  439dd3:	add    BYTE PTR [edx-0x67760001],dh
  439dd9:	dec    DWORD PTR [edx-0x32]
  439ddc:	dec    esp
  439dde:	repz cdq 
  439de0:	push   eax
  439de1:	pop    eax
  439de2:	mov    DWORD PTR [ecx+0xff83b1],ecx
  439de8:	cmp    al,0xff
  439dea:	and    cl,BYTE PTR [ebp-0x1]
  439ded:	int3   
  439dee:	aas    
  439def:	into   
  439df0:	adc    edx,edx
  439df2:	add    bh,bh
  439df4:	xchg   bh,bh
  439df6:	dec    esp
  439df8:	mov    bh,bh
  439dfa:	pop    edx
  439dfb:	mov    bh,bh
  439dfd:	adc    DWORD PTR [eax-0x33235ba3],0x0
  439e04:	sub    BYTE PTR [eax],al
  439e06:	dec    DWORD PTR [ecx+0x48770017]
  439e0c:	add    bh,bh
  439e0e:	jl     0x439dae
  439e10:	shr    BYTE PTR [edx-0x7c81007d],0xff
  439e17:	(bad)  
  439e18:	ds (bad) 
  439e1a:	mov    edi,0x22008969
  439e1f:	sbb    BYTE PTR [esi-0x2fff007c],ch
  439e25:	inc    DWORD PTR [ebx+0x71ff5aff]
  439e2b:	(bad)  
  439e2c:	inc    DWORD PTR [eax]
  439e2e:	outs   dx,BYTE PTR ds:[esi]
  439e2f:	mov    esi,0xffff3291
  439e34:	pop    es
  439e35:	int3   
  439e36:	dec    esp
  439e38:	push   cs
  439e39:	add    BYTE PTR [eax],ch
  439e3b:	push   es
  439e3c:	(bad)  
  439e3d:	(bad)  
  439e3e:	mov    esp,0xe6e5a
  439e43:	add    BYTE PTR [edx+0x33ffffff],bl
  439e49:	dec    DWORD PTR [esi-0x6ff00e2]
  439e4f:	jae    0x439e7d
  439e51:	lods   al,BYTE PTR ds:[esi]
  439e52:	(bad)  
  439e53:	jmp    DWORD PTR [edi]
  439e55:	inc    DWORD PTR [eax]
  439e57:	cmp    edi,0x0
  439e5a:	test   al,0xf
  439e5c:	inc    DWORD PTR [ebx-0x291163d4]
  439e62:	mov    edi,edi
  439e64:	cmc    
  439e65:	add    BYTE PTR [eax],al
  439e67:	int3   
  439e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  439e69:	jmp    FWORD PTR [ebp-0x27]
  439e6c:	(bad)  
  439e6d:	call   FWORD PTR [esi]
  439e6f:	mov    cl,0xbc
  439e71:	fdivp  st(7),st
  439e73:	dec    DWORD PTR [ecx]
  439e75:	add    BYTE PTR [ecx-0xd00de00],cl
  439e7b:	push   ss
  439e7c:	cmp    edi,0xffffffad
  439e7f:	sub    al,BYTE PTR [edi]
  439e81:	mov    bl,0x0
  439e83:	call   ebx
  439e85:	mov    DWORD PTR [eax],eax
  439e87:	int3   
  439e88:	cmp    al,0xff
  439e8a:	dec    esp
  439e8b:	sar    edi,cl
  439e8d:	add    BYTE PTR [esi-0x2a],dl
  439e90:	mov    al,0x4d
  439e92:	(bad)  
  439e93:	call   DWORD PTR [edx-0x1]
  439e96:	inc    DWORD PTR [eax]
  439e98:	xchg   edi,eax
  439e99:	(bad)  
  439e9a:	jge    0x439eb8
  439e9c:	inc    DWORD PTR [eax]
  439e9e:	xlat   BYTE PTR ds:[ebx]
  439e9f:	mov    cl,0x4f
  439ea1:	out    0x89,eax
  439ea3:	(bad)  
  439ea4:	mov    ebx,0xae0089ff
  439ea9:	(bad)  
  439eaa:	mov    eax,0xdc89ccd0
  439eaf:	and    al,0x36
  439eb1:	sar    bh,1
  439eb3:	add    ch,ch
  439eb5:	add    BYTE PTR [eax],al
  439eb7:	and    DWORD PTR [edi+edi*8],0x25
  439ebb:	pop    ebx
  439ebc:	(bad)  
  439ebd:	dec    DWORD PTR [edx-0xe8b792]
  439ec3:	add    ch,cl
  439ec5:	dec    DWORD PTR [ecx-0x7c00c97d]
  439ecb:	(bad)  
  439ecc:	mov    DWORD PTR [eax],eax
  439ece:	xlat   BYTE PTR ds:[ebx]
  439ecf:	in     eax,dx
  439ed0:	mov    ah,0x6
  439ed2:	inc    DWORD PTR [eax]
  439ed4:	data16 add bh,bh
  439ed7:	add    BYTE PTR [edx],al
  439ed9:	call   FWORD PTR [ecx]
  439edb:	fadd   DWORD PTR [ebx+0x50c14dff]
  439ee1:	es (bad) 
  439ee3:	inc    DWORD PTR [ecx+0x5300ffcc]
  439ee9:	add    al,al
  439eeb:	jp     0x439e70
  439eed:	or     DWORD PTR [edi],0xffffffae
  439ef0:	call   0xb6c79e8b
  439ef5:	add    BYTE PTR [ecx+0x30ffe9ff],cl
  439efb:	mov    eax,0x10f7ff83
  439f00:	mov    bh,0x4c
  439f02:	add    bh,bh
  439f04:	inc    ebx
  439f05:	add    BYTE PTR [eax],al
  439f07:	add    BYTE PTR [ebx],ah
  439f09:	dec    DWORD PTR [eax]
  439f0b:	je     0x439f0d
  439f0d:	jmp    FWORD PTR [eax-0x9af74]
  439f13:	sub    DWORD PTR [ebx-0x7d],0x0
  439f17:	call   FWORD PTR [ecx]
  439f19:	inc    ebx
  439f1b:	mov    edi,0x5cc583ff
  439f20:	pop    esi
  439f21:	aaa    
  439f22:	inc    DWORD PTR [ebx+0xff89d7]
  439f28:	(bad)  
  439f29:	inc    DWORD PTR [ecx+0x41]
  439f2c:	add    DWORD PTR [eax],0xffffffbe
  439f2f:	mov    ch,0x74
  439f31:	or     cl,ah
  439f33:	dec    DWORD PTR [ecx-0x6000ff34]
  439f39:	call   DWORD PTR [edx+0x58ffff24]
  439f3f:	cld    
  439f40:	std    
  439f41:	cdq    
  439f42:	add    bh,bh
  439f44:	sahf   
  439f45:	(bad)  
  439f46:	(bad)  
  439f47:	jmp    FWORD PTR [edi+edi*8]
  439f4a:	inc    esi
  439f4b:	fwait
  439f4c:	add    BYTE PTR [ecx+0x4c1a62ee],cl
  439f52:	int3   
  439f53:	call   DWORD PTR [ebp-0x30ff0001]
  439f59:	mov    DWORD PTR [esi+ecx*1-0x7d],ebx
  439f5d:	xor    esi,0x3
  439f60:	adc    esp,DWORD PTR [ecx+0x0]
  439f63:	(bad)  
  439f64:	mov    edx,0x9089ff00
  439f69:	add    BYTE PTR [eax],bh
  439f6b:	adc    BYTE PTR [eax],al
  439f6d:	mov    DWORD PTR [esi],ebp
  439f6f:	pop    edx
  439f70:	dec    esp
  439f71:	xchg   esp,eax
  439f72:	inc    DWORD PTR [eax]
  439f74:	cmc    
  439f75:	add    BYTE PTR [ebx-0x51334e01],al
  439f7b:	cmp    bh,0xff
  439f7e:	xor    ebp,DWORD PTR [esi+0x7b]
  439f81:	sub    bh,bh
  439f83:	cmp    DWORD PTR [eax-0x9010000],0xffffff89
  439f8a:	xor    BYTE PTR [ecx-0x1],dh
  439f8d:	call   FWORD PTR [ebx]
  439f8f:	inc    esp
  439f90:	fcomp  DWORD PTR [edi]
  439f92:	(bad)  
  439f93:	jmp    DWORD PTR [ebp-0x1]
  439f96:	mov    edi,edi
  439f98:	jnp    0x439f99
  439f9a:	push   ebp
  439f9b:	mov    bh,bh
  439f9d:	(bad)  
  439f9e:	cld    
  439f9f:	popf   
  439fa0:	int3   
  439fa1:	add    DWORD PTR [ebx-0xea7d],0xffffffff
  439fa8:	leave  
  439fa9:	dec    DWORD PTR [edi-0x5f7c331a]
  439faf:	outs   dx,DWORD PTR ds:[esi]
  439fb0:	icebp  
  439fb1:	xor    edi,edi
  439fb3:	add    BYTE PTR [edi+edi*8-0x76b20001],cl
  439fba:	xor    eax,0x35ff89e9
  439fbf:	sbb    DWORD PTR [edi],ecx
  439fc1:	mov    esp,0xcc5e00ff
  439fc6:	int3   
  439fc7:	mov    ebx,esi
  439fc9:	call   FWORD PTR [eax-0x63]
  439fcc:	(bad)  
  439fcd:	call   FWORD PTR [ecx]
  439fcf:	das    
  439fd0:	repz add edi,edi
  439fd3:	add    dl,cl
  439fd5:	add    bh,bh
  439fd7:	add    BYTE PTR [ebx-0x596f00],ch
  439fdd:	(bad)  
  439fde:	std    
  439fdf:	shr    BYTE PTR [eax+esi*1],0xff
  439fe3:	add    ch,dl
  439fe5:	add    bh,bh
  439fe7:	mov    DWORD PTR [edx-0x1c4e01],esp
  439fed:	call   ebx
  439fef:	mov    cs,ebp
  439ff1:	fdivr  st,st(7)
  439ff3:	add    BYTE PTR [ecx-0x1],dl
  439ff6:	or     DWORD PTR [ecx-0x55400f9],0x0
  439ffd:	mov    esi,esi
  439fff:	mov    ah,bl
  43a001:	add    BYTE PTR [eax],0xff
  43a004:	sti    
  43a005:	add    BYTE PTR [ebx-0x7200d201],al
  43a00b:	xchg   BYTE PTR [ebx+0x2f1fb3ff],al
  43a011:	and    BYTE PTR [ebx-0x7c761801],al
  43a017:	dec    DWORD PTR [edi+edi*8-0xe]
  43a01b:	sbb    BYTE PTR [eax],al
  43a01d:	dec    ebp
  43a01f:	cmp    eax,0x89007050
  43a024:	gs mov edi,edi
  43a027:	add    BYTE PTR [esi],bl
  43a029:	(bad)  
  43a02a:	jl     0x43a07e
  43a02c:	dec    DWORD PTR [ecx-0x72f3bfcc]
  43a032:	add    DWORD PTR [eax],0xffffff85
  43a035:	(bad)  
  43a036:	(bad)  
  43a037:	inc    DWORD PTR [esi-0xde3401]
  43a03d:	mov    DWORD PTR [edi+0x6511df],esi
  43a043:	sub    DWORD PTR [edx+0x65ff89ff],0x0
  43a04a:	fdiv   QWORD PTR [edi+edi*8]
  43a04d:	add    BYTE PTR [ebp-0x66],dl
  43a050:	ss push 0xffffffff
  43a053:	add    BYTE PTR [ecx],al
  43a055:	add    BYTE PTR [eax],al
  43a057:	(bad)  
  43a058:	mov    esp,0xc655ff
  43a05d:	push   DWORD PTR [edx+0x26]
  43a060:	jmp    0x43a042
  43a062:	int3   
  43a063:	jmp    DWORD PTR [ebx-0x1]
  43a066:	add    bh,bh
  43a068:	inc    ebx
  43a069:	mov    DWORD PTR [edx-0x377c33cb],ecx
  43a06f:	cmp    dl,BYTE PTR [ebx+0x74]
  43a072:	add    BYTE PTR [ebx-0x7cff76c7],al
  43a078:	cld    
  43a079:	add    BYTE PTR [eax+0x3bffff0a],al
  43a07f:	into   
  43a080:	fwait
  43a081:	repz int3 
  43a083:	mov    esp,ebp
  43a085:	add    BYTE PTR [eax],al
  43a087:	call   DWORD PTR [edi-0x34]
  43a08a:	xchg   ecx,eax
  43a08b:	popf   
  43a08c:	inc    DWORD PTR [eax]
  43a08e:	mov    dh,0xf5
  43a090:	(bad)  
  43a091:	jb     0x43a092
  43a093:	int3   
  43a094:	mov    eax,0xd8cc00ff
  43a099:	add    BYTE PTR [ecx],al
  43a09b:	lods   al,BYTE PTR ds:[esi]
  43a09c:	(bad)  
  43a09d:	inc    esp
  43a09f:	jnp    0x43a101
  43a0a1:	test   DWORD PTR [eax],0x83ffd700
  43a0a7:	add    dh,dl
  43a0a9:	push   DWORD PTR [ebx+0x79]
  43a0ac:	(bad)  
  43a0ad:	(bad)  
  43a0ae:	jp     0x43a0a8
  43a0b0:	pop    ebp
  43a0b1:	push   esp
  43a0b2:	add    BYTE PTR [ebx-0x760000ab],al
  43a0b8:	adc    bh,bh
  43a0ba:	gs stos DWORD PTR es:[edi],eax
  43a0bc:	add    BYTE PTR [ebx-0x3589c896],al
  43a0c2:	add    ah,cl
  43a0c4:	pop    ds
  43a0c5:	(bad)  
  43a0c6:	(bad)  
  43a0c7:	dec    DWORD PTR [edx+0x0]
  43a0ca:	sti    
  43a0cb:	pop    ecx
  43a0cc:	(bad)  
  43a0cd:	(bad)  
  43a0ce:	clc    
  43a0cf:	fild   DWORD PTR [esi+0x200ff2d]
  43a0d5:	cmp    edi,0xffffff89
  43a0d8:	test   al,0xcc
  43a0da:	xor    al,0xc7
  43a0dc:	dec    esp
  43a0de:	lds    edi,FWORD PTR [ecx-0x7c00855e]
  43a0e4:	inc    esi
  43a0e5:	add    BYTE PTR [eax],al
  43a0e7:	int3   
  43a0e8:	xchg   DWORD PTR [ebx-0xfffe33],eax
  43a0ee:	fild   QWORD PTR [ebx]
  43a0f0:	hlt    
  43a0f1:	in     al,dx
  43a0f2:	(bad)  
  43a0f3:	(bad)  
  43a0f4:	cmp    al,BYTE PTR [eax]
  43a0f6:	inc    DWORD PTR [eax]
  43a0f8:	mov    eax,DWORD PTR [ebx-0x33ffaa11]
  43a0fe:	imul   esi,DWORD PTR [ecx],0x8989a434
  43a104:	test   eax,0xc7ff00ff
  43a109:	sbb    DWORD PTR [esi+0x2c],0xffffffff
  43a10d:	(bad)  
  43a10e:	(bad)  [eax]
  43a110:	ja     0x43a138
  43a112:	(bad)  
  43a113:	jmp    DWORD PTR [edi]
  43a115:	(bad)  
  43a116:	(bad)  
  43a117:	dec    DWORD PTR [ecx+0xd82cc]
  43a11d:	jmp    DWORD PTR [ebx+0x15]
  43a120:	lock aad 0xff
  43a123:	call   DWORD PTR [edi+edi*8-0x335d0000]
  43a12a:	mov    DWORD PTR [edi-0x34],edi
  43a12d:	int3   
  43a12e:	mov    cl,0x6d
  43a130:	sbb    eax,DWORD PTR [eax+eax*1+0x0]
  43a134:	mov    ah,0x89
  43a136:	(bad)  
  43a137:	jmp    FWORD PTR [ecx+0x706883]
  43a13d:	call   DWORD PTR [eax+eax*4]
  43a140:	jle    0x43a162
  43a142:	add    BYTE PTR [ebx-0xffb0],al
  43a148:	pop    ebp
  43a149:	add    BYTE PTR [edi-0x62ff76e8],bl
  43a14f:	sbb    BYTE PTR [ecx-0x52],bl
  43a152:	add    ah,cl
  43a154:	pushf  
  43a155:	inc    DWORD PTR [eax]
  43a157:	cmp    DWORD PTR [eax+eax*1-0x4],0x77
  43a15c:	cmp    edi,0xffffff9b
  43a15f:	inc    ebx
  43a160:	cwde   
  43a161:	mov    es,WORD PTR [eax]
  43a163:	inc    DWORD PTR [eax+eax*1-0xd00001]
  43a16a:	add    al,0xf0
  43a16c:	add    BYTE PTR [eax],al
  43a16e:	xchg   ecx,eax
  43a16f:	pop    edx
  43a170:	movups XMMWORD PTR [eax],xmm0
  43a173:	add    BYTE PTR [eax+eax*1],dl
  43a176:	mov    edi,edi
  43a178:	xchg   ebx,eax
  43a179:	(bad)  
  43a17a:	inc    DWORD PTR [esi]
  43a17c:	inc    DWORD PTR [eax]
  43a17e:	fidivr DWORD PTR [eax+0x7b]
  43a181:	std    
  43a182:	inc    DWORD PTR [ebx+0xff000d]
  43a188:	pop    ebp
  43a189:	add    BYTE PTR [ebx+0x2c00fff0],al
  43a18f:	sbb    DWORD PTR [esi-0x10],esi
  43a192:	add    DWORD PTR [ebx-0xff00eb],0x53
  43a199:	adc    DWORD PTR [edx-0x18ffff21],0xffffff8e
  43a1a0:	adc    ebx,ebx
  43a1a2:	add    BYTE PTR [ebx-0x3],al
  43a1a8:	daa    
  43a1a9:	call   DWORD PTR [esi+0xdcc83a4]
  43a1af:	inc    ecx
  43a1b0:	lahf   
  43a1b1:	std    
  43a1b2:	cmp    edi,0xffffff8f
  43a1b5:	add    BYTE PTR [ebx+0x280059ff],al
  43a1bb:	fimul  DWORD PTR [ecx+0x7b1ea9ff]
  43a1c1:	dec    ecx
  43a1c2:	add    bh,bh
  43a1c4:	adc    eax,0xbeff00cc
  43a1c9:	add    BYTE PTR [ebp+0x52ff83da],bh
  43a1cf:	xchg   ebx,eax
  43a1d0:	and    al,0xb2
  43a1d2:	mov    DWORD PTR [ecx-0x76760013],ecx
  43a1d8:	mov    esp,0x1769ff
  43a1dd:	add    BYTE PTR [edx+0x39],ah
  43a1e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a1e1:	mov    edi,?
  43a1e3:	add    BYTE PTR [edx-0x1e000100],cl
  43a1e9:	dec    DWORD PTR [ecx+0x40]
  43a1ec:	int3   
  43a1ed:	push   DWORD PTR [ebp+0x44]
  43a1f0:	and    DWORD PTR [edi-0x3337ff01],ebp
  43a1f6:	dec    DWORD PTR [ecx-0x27610064]
  43a1fc:	add    BYTE PTR [eax],al
  43a1fe:	sbb    dl,BYTE PTR [eax+0x6]
  43a201:	inc    esp
  43a202:	(bad)  
  43a203:	push   DWORD PTR ds:0xf89ffff
  43a209:	sbb    DWORD PTR [edi],0xffffff81
  43a20c:	dec    esp
  43a20e:	pop    eax
  43a20f:	add    al,0x96
  43a211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43a212:	(bad)  
  43a213:	dec    ebx
  43a215:	(bad)  
  43a216:	(bad)  
  43a217:	jmp    FWORD PTR [esi+0x9829ff]
  43a21d:	jmp    DWORD PTR [eax-0x32]
  43a220:	dec    esi
  43a221:	mov    al,BYTE PTR [eax]
  43a223:	call   FWORD PTR [edi+edi*8-0x33153334]
  43a22a:	sub    dh,BYTE PTR [eax-0x1]
  43a22d:	call   esi
  43a22f:	imul   edi,DWORD PTR [ecx],0xffffffce
  43a232:	add    bh,bh
  43a234:	in     al,0xff
  43a236:	add    BYTE PTR [ebx+0x786100f9],al
  43a23c:	(bad)  
  43a23d:	push   DWORD PTR [ebp-0x76dd5164]
  43a243:	call   FWORD PTR [edx-0x4700ff01]
  43a249:	add    BYTE PTR [eax*1+0x3e4affff],al
  43a250:	in     al,dx
  43a251:	mov    al,0x89
  43a253:	add    dh,dl
  43a255:	add    bh,bh
  43a257:	sub    DWORD PTR ds:0x13ac00,0xffffffff
  43a25e:	dec    edi
  43a25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43a260:	and    BYTE PTR [ebp-0x117700],bh
  43a266:	(bad)  
  43a267:	call   FWORD PTR [edx]
  43a269:	add    BYTE PTR [eax],al
  43a26b:	add    edi,edi
  43a26d:	push   DWORD PTR [eax-0x72]
  43a270:	xor    ecx,0x0
  43a273:	mov    esi,edx
  43a275:	add    DWORD PTR [eax],0xffffffff
  43a278:	pop    ebp
  43a279:	jmp    FWORD PTR [ebx+edi*1-0x34]
  43a27d:	add    BYTE PTR [edx],al
  43a27f:	and    al,0xaa
  43a281:	int    0xcc
  43a283:	add    BYTE PTR [ebx+eax*4-0x7d],bl
  43a287:	(bad)  
  43a288:	cmp    eax,0x5b7200
  43a28d:	xor    ebp,0x7e
  43a290:	mov    ebx,0xb4000041
  43a295:	(bad)  
  43a296:	(bad)  
  43a297:	call   esp
  43a299:	jmp    FWORD PTR [edx]
  43a29b:	push   esi
  43a29c:	inc    DWORD PTR [eax]
  43a29e:	dec    esp
  43a29f:	pop    esi
  43a2a0:	fwait
  43a2a1:	call   0x8412a372
  43a2a6:	add    bh,bh
  43a2a8:	push   0xe958cc
  43a2ad:	call   esi
  43a2af:	jae    0x43a265
  43a2b1:	push   ds
  43a2b2:	inc    DWORD PTR [eax]
  43a2b4:	xor    DWORD PTR [ebx-0x7cba7c77],eax
  43a2ba:	out    0x4,al
  43a2bc:	inc    DWORD PTR [ebx+0x5e544bcf]
  43a2c2:	cmp    edi,0xffffffc9
  43a2c5:	inc    DWORD PTR [eax]
  43a2c7:	adc    DWORD PTR [ebx],0xffffffcc
  43a2ca:	or     dh,bh
  43a2cc:	add    bh,bh
  43a2ce:	pushf  
  43a2cf:	mov    BYTE PTR [edi],bh
  43a2d1:	jno    0x43a29f
  43a2d3:	int3   
  43a2d4:	add    al,0xff
  43a2d6:	dec    DWORD PTR [ecx-0x2df2ff8f]
  43a2dc:	dec    esp
  43a2de:	into   
  43a2df:	ret    
  43a2e0:	popf   
  43a2e1:	fild   WORD PTR [eax]
  43a2e3:	int3   
  43a2e4:	or     edi,edi
  43a2e6:	add    BYTE PTR [eax],al
  43a2e8:	pop    edi
  43a2e9:	add    bh,dh
  43a2eb:	ret    
  43a2ec:	dec    esp
  43a2ee:	lds    esi,FWORD PTR [ecx+ecx*1+0x15]
  43a2f2:	(bad)  
  43a2f3:	(bad)  
  43a2f4:	out    dx,eax
  43a2f5:	int3   
  43a2f6:	add    BYTE PTR [eax],al
  43a2f8:	or     edi,edi
  43a2fa:	stos   DWORD PTR es:[edi],eax
  43a2fb:	in     al,0xff
  43a2fd:	mov    DWORD PTR [edi-0x737dc9],ebp
  43a303:	xor    ebp,0x0
  43a306:	add    BYTE PTR [ebx-0x1b1c7c7a],al
  43a30c:	mov    edi,edi
  43a30e:	jnp    0x43a2cf
  43a310:	dec    eax
  43a311:	mov    DWORD PTR ds:[ecx-0x767600fc],ecx
  43a318:	ret    
  43a319:	call   DWORD PTR [edi]
  43a31b:	adc    bh,bh
  43a31d:	and    DWORD PTR [ebx+0x54ae61],0xffffffcc
  43a324:	lahf   
  43a325:	dec    esp
  43a327:	mov    eax,ebp
  43a329:	add    cl,bl
  43a32b:	push   ecx
  43a32c:	inc    DWORD PTR [eax]
  43a32e:	fdiv   DWORD PTR [edx+0x2]
  43a331:	add    al,0xff
  43a333:	add    BYTE PTR [ebp-0x1],ch
  43a336:	inc    DWORD PTR [eax]
  43a338:	lock inc DWORD PTR [ecx+0x78]
  43a33c:	add    BYTE PTR [ebx+0x382d38e0],al
  43a342:	inc    DWORD PTR [eax]
  43a344:	lahf   
  43a345:	add    BYTE PTR [ecx+0x5300bdff],cl
  43a34b:	mov    ebx,0x120c00ff
  43a350:	sbb    eax,0xd5ffff49
  43a355:	(bad)  
  43a356:	dec    DWORD PTR [ecx-0x4de00e9]
  43a35c:	int3   
  43a35d:	inc    DWORD PTR [ebx-0x7caffa3d]
  43a363:	add    ah,al
  43a365:	inc    DWORD PTR [eax]
  43a367:	add    ah,bl
  43a369:	add    dl,bh
  43a36b:	pop    es
  43a36c:	inc    DWORD PTR [eax]
  43a36e:	shl    dh,1
  43a370:	into   
  43a371:	lods   eax,DWORD PTR ds:[esi]
  43a372:	int3   
  43a373:	jmp    FWORD PTR [ebx-0x28ffff77]
  43a379:	add    BYTE PTR [ebp-0x58],cl
  43a37c:	add    bh,bh
  43a37e:	and    BYTE PTR [edx-0x33002c90],ch
  43a384:	test   BYTE PTR [ebx-0xca0100],al
  43a38a:	jno    0x43a3ec
  43a38c:	add    bh,bh
  43a38e:	sahf   
  43a38f:	cmp    DWORD PTR [edx-0x3c0076a3],0xffffffff
  43a396:	add    bh,bh
  43a398:	idiv   bh
  43a39a:	push   eax
  43a39b:	leave  
  43a39c:	int3   
  43a39d:	add    dl,al
  43a39f:	loopne 0x43a33a
  43a3a1:	mov    ecx,0xa2ffff
  43a3a6:	add    BYTE PTR [eax],al
  43a3a8:	push   ebx
  43a3a9:	or     DWORD PTR [ecx],0xfffffff9
  43a3ac:	add    BYTE PTR [eax],al
  43a3ae:	add    eax,0xff2a46d1
  43a3b3:	(bad)  
  43a3b4:	(bad)  
  43a3b6:	add    BYTE PTR [ebx-0x78ebff57],al
  43a3bc:	add    BYTE PTR [eax],al
  43a3be:	daa    
  43a3bf:	mov    bh,0x8d
  43a3c1:	(bad)  
  43a3c2:	inc    DWORD PTR [eax]
  43a3c4:	xchg   bh,bh
  43a3c6:	inc    DWORD PTR [eax]
  43a3c8:	test   eax,0x3b3983
  43a3cd:	dec    DWORD PTR [ebx]
  43a3cf:	push   edi
  43a3d0:	mov    WORD PTR [ecx-0x1],gs
  43a3d3:	mov    DWORD PTR [ecx-0x29000000],ebx
  43a3d9:	adc    DWORD PTR [eax-0x3],0xffffff83
  43a3dd:	jmp    DWORD PTR [edx]
  43a3df:	mov    ecx,edi
  43a3e1:	adc    BYTE PTR [eax],al
  43a3e3:	add    BYTE PTR [edi+edi*8-0x7ceb3301],ah
  43a3ea:	mov    esp,0xd200000d
  43a3ef:	aam    0x50
  43a3f1:	lock inc DWORD PTR [ebx-0xff00a5]
  43a3f8:	jmp    FWORD PTR cs:0xec00833b
  43a3ff:	mov    gs,WORD PTR [edi-0x260000d2]
  43a405:	add    BYTE PTR [eax],al
  43a407:	call   esi
  43a409:	call   FWORD PTR [ebp+0x6f]
  43a40c:	add    BYTE PTR [eax],al
  43a40e:	cmp    ecx,DWORD PTR [edx-0x5c]
  43a411:	xchg   edi,eax
  43a412:	inc    DWORD PTR [eax]
  43a414:	ss mov edi,edi
  43a417:	call   FWORD PTR ds:0xff5326ff
  43a41d:	jmp    FWORD PTR [edi-0x2ebbf8]
  43a423:	mov    DWORD PTR [ebx],esp
  43a425:	dec    esp
  43a427:	jmp    DWORD PTR [ecx-0x33c56700]
  43a42d:	add    BYTE PTR [eax+0x31],cl
  43a430:	jne    0x43a3f5
  43a432:	(bad)  
  43a433:	push   DWORD PTR [eax-0x1]
  43a436:	(bad)  
  43a437:	(bad)  
  43a438:	mov    edi,0xcce2c300
  43a43d:	(bad)  
  43a43e:	fisttp DWORD PTR [ebx-0x90de]
  43a444:	jge    0x43a446
  43a446:	add    bh,bh
  43a448:	mov    ah,0x0
  43a44a:	dec    eax
  43a44b:	sbb    DWORD PTR [eax],eax
  43a44d:	sbb    DWORD PTR [esi+0x43],0xffffffb3
  43a451:	(bad)  
  43a452:	inc    DWORD PTR [eax]
  43a454:	xor    BYTE PTR [eax],al
  43a456:	int3   
  43a457:	mov    DWORD PTR [ecx-0x68f400],ebx
  43a45d:	add    BYTE PTR [eax*4-0xff1c11],ah
  43a464:	rol    DWORD PTR [eax],cl
  43a466:	dec    esp
  43a468:	inc    edx
  43a469:	add    BYTE PTR [edi+0x1c00ff74],dl
  43a46f:	sar    BYTE PTR [ebx-0xf],0x0
  43a473:	dec    DWORD PTR [esi-0x1]
  43a476:	int3   
  43a477:	dec    DWORD PTR [esi]
  43a479:	int3   
  43a47a:	adc    BYTE PTR [esi],ch
  43a47c:	dec    esp
  43a47e:	jb     0x43a42a
  43a480:	in     eax,0x4e
  43a482:	add    bh,bh
  43a484:	pushf  
  43a485:	add    ah,cl
  43a487:	int3   
  43a488:	cmp    edi,edi
  43a48a:	lds    eax,FWORD PTR [edi+0x0]
  43a48d:	add    BYTE PTR [ecx],dh
  43a48f:	(bad)  
  43a490:	xchg   esi,eax
  43a491:	sub    eax,0x89fa83ff
  43a496:	cmp    edi,0x58
  43a499:	int3   
  43a49a:	push   0x7aff89e3
  43a49f:	lea    eax,[edx+0x5d]
  43a4a2:	add    ah,cl
  43a4a4:	imul   edi,edi,0xa2ff00
  43a4aa:	jmp    0x5544a447
  43a4af:	test   al,0x5b
  43a4b1:	popa   
  43a4b2:	add    DWORD PTR [ebx-0x33fff1],0xffffffde
  43a4b9:	add    DWORD PTR [esp+ebp*1+0x0],0xffffffff
  43a4be:	mov    ds:0xffd72382,eax
  43a4c3:	call   FWORD PTR [ecx]
  43a4c5:	(bad)  
  43a4c6:	inc    DWORD PTR [eax]
  43a4c8:	inc    edx
  43a4c9:	jmp    DWORD PTR [ecx]
  43a4cb:	ss add bh,bh
  43a4ce:	loop   0x43a458
  43a4d0:	dec    ecx
  43a4d1:	sbb    bh,bh
  43a4d3:	sub    edi,0xffffffff
  43a4d6:	inc    DWORD PTR [ebx+0x62ac00e0]
  43a4dc:	inc    DWORD PTR [eax]
  43a4de:	lods   al,BYTE PTR ds:[esi]
  43a4df:	hlt    
  43a4e0:	push   ecx
  43a4e1:	add    DWORD PTR [eax],0xff83d600
  43a4e7:	push   DWORD PTR [ebp-0x339e4d00]
  43a4ed:	int3   
  43a4ee:	loop   0x43a4b7
  43a4f0:	fs cdq 
  43a4f2:	(bad)  
  43a4f3:	push   DWORD PTR [esi+0x0]
  43a4f6:	(bad)  
  43a4f7:	call   DWORD PTR [edi-0x1]
  43a4fa:	jp     0x43a510
  43a4fc:	inc    DWORD PTR [eax]
  43a4fe:	hlt    
  43a4ff:	call   0xfbb76
  43a504:	push   ss
  43a505:	add    BYTE PTR [eax],al
  43a507:	call   FWORD PTR [eax+eax*1-0x7c8d87]
  43a50e:	dec    ecx
  43a50f:	mov    dh,0xec
  43a511:	in     eax,0x83
  43a513:	add    BYTE PTR [ebp+0x0],cl
  43a516:	inc    DWORD PTR [ebx-0x52c07c4f]
  43a51c:	int3   
  43a51d:	call   edi
  43a51f:	dec    esp
  43a520:	pop    ds
  43a521:	push   esp
  43a522:	inc    DWORD PTR [eax]
  43a524:	fdivr  st,st(7)
  43a526:	inc    DWORD PTR [eax]
  43a528:	(bad)
  43a52b:	into   
  43a52c:	dec    DWORD PTR [ecx+0x227764b4]
  43a532:	(bad)  
  43a533:	call   DWORD PTR [edi-0x1800ff01]
  43a539:	int3   
  43a53a:	mov    ebp,0x990000dc
  43a53f:	push   ebp
  43a540:	loopne 0x43a4ea
  43a542:	add    bh,bh
  43a544:	cdq    
  43a545:	(bad)  
  43a546:	inc    DWORD PTR [ebx+0x390f0034]
  43a54c:	(bad)  
  43a54d:	(bad)  
  43a54e:	sti    
  43a54f:	retf   0xdc97
  43a552:	add    DWORD PTR [ebx+0x89bf],0x26
  43a559:	add    BYTE PTR [edi-0x507c764a],ah
  43a55f:	mul    eax
  43a561:	popa   
  43a562:	inc    DWORD PTR [eax]
  43a564:	push   ebx
  43a565:	(bad)  
  43a566:	dec    esp
  43a568:	jp     0x43a569
  43a56a:	cmc    
  43a56b:	xchg   ebx,eax
  43a56c:	add    bh,bh
  43a56e:	or     DWORD PTR [esi-0x76149d],edi
  43a574:	hlt    
  43a575:	(bad)  
  43a576:	(bad)  
  43a577:	call   DWORD PTR [ecx-0x76e93534]
  43a57d:	add    BYTE PTR [eax],ah
  43a57f:	push   eax
  43a580:	and    esp,ebp
  43a582:	add    bh,bh
  43a584:	sub    BYTE PTR [eax],al
  43a586:	inc    DWORD PTR [ebx+0x72e3fffa]
  43a58c:	cmp    edi,0x7d
  43a58f:	out    0xff,al
  43a591:	je     0x43a593
  43a593:	dec    DWORD PTR [edi-0x7cff0001]
  43a599:	mov    DWORD PTR [ebx],ebp
  43a59b:	cs (bad) 
  43a59d:	push   DWORD PTR [ebx-0xb4101]
  43a5a3:	jmp    FWORD PTR [ecx-0x1]
  43a5a6:	add    BYTE PTR [ebx+0x2a8e00a2],al
  43a5ac:	(bad)  
  43a5ad:	(bad)  
  43a5ae:	(bad)  
  43a5af:	aaa    
  43a5b0:	iret   
  43a5b1:	sbb    al,0xff
  43a5b3:	mov    DWORD PTR [edx-0x7d],edi
  43a5b6:	(bad)  
  43a5b7:	jmp    FWORD PTR [edx]
  43a5b9:	add    BYTE PTR [ebx+0x3dcccc01],bl
  43a5bf:	jle    0x43a61a
  43a5c1:	mov    BYTE PTR [ecx-0x768734],cl
  43a5c7:	add    BYTE PTR [eax+0xaf3689],ah
  43a5cd:	jmp    DWORD PTR [ecx]
  43a5cf:	leave  
  43a5d0:	fiadd  WORD PTR [edx+0x0]
  43a5d3:	(bad)  
  43a5d4:	fmul   st(4),st
  43a5d6:	add    ah,cl
  43a5d8:	add    BYTE PTR [eax],0x1b
  43a5db:	(bad)  
  43a5dc:	inc    DWORD PTR [ebx-0x6bd2a867]
  43a5e2:	add    bh,bh
  43a5e4:	inc    edx
  43a5e5:	inc    DWORD PTR [eax]
  43a5e7:	push   DWORD PTR ds:0xcc4b31ff
  43a5ed:	add    BYTE PTR [ebx-0x29],cl
  43a5f0:	mov    ecx,0xfc0083a5
  43a5f5:	mov    edi,edi
  43a5f7:	call   esp
  43a5f9:	(bad)  
  43a5fa:	mov    edi,0x8300ffaf
  43a5ff:	in     eax,dx
  43a600:	xor    al,0x6b
  43a602:	(bad)  
  43a603:	push   esi
  43a605:	inc    DWORD PTR [ebx-0x5cffcc34]
  43a60b:	jmp    0x8437a593
  43a610:	adc    BYTE PTR [edx+0x0],0xff
  43a614:	out    0xff,eax
  43a616:	add    BYTE PTR [ebx-0x26137646],al
  43a61c:	int3   
  43a61d:	call   ebx
  43a61f:	in     eax,dx
  43a620:	and    BYTE PTR [esi+0x0],0xff
  43a624:	dec    esp
  43a625:	inc    DWORD PTR [eax]
  43a627:	mov    DWORD PTR [eax-0xd9ae01],ebx
  43a62d:	int3   
  43a62e:	int    0x1d
  43a630:	loop   0x43a5dc
  43a632:	inc    DWORD PTR [eax]
  43a634:	ss add bh,bh
  43a637:	add    BYTE PTR [edx-0x1],al
  43a63a:	in     al,0x9e
  43a63c:	dec    esp
  43a63e:	aaa    
  43a63f:	jecxz  0x43a6ab
  43a641:	jmp    0x109a645
  43a646:	dec    DWORD PTR [ecx+0x1438fff3]
  43a64c:	dec    DWORD PTR [ecx-0x43650ae9]
  43a652:	(bad)  
  43a653:	inc    DWORD PTR [esi]
  43a655:	(bad)  
  43a656:	(bad)  
  43a657:	(bad)  
  43a658:	mov    esp,0x8908d983
  43a65d:	add    BYTE PTR [eax+0x91859],bl
  43a663:	inc    ecx
  43a665:	mov    DWORD PTR [eax],eax
  43a667:	add    BYTE PTR [ebx],cl
  43a669:	add    dh,ah
  43a66b:	xor    al,0xcc
  43a66d:	add    BYTE PTR [esi+edx*4],al
  43a670:	sub    al,0x60
  43a672:	add    DWORD PTR [eax],0x7e
  43a675:	inc    DWORD PTR [eax]
  43a677:	mov    DWORD PTR [ecx-0x1],esp
  43a67a:	mov    ds:0x6bccff66,al
  43a67f:	ret    0x6178
  43a682:	(bad)  
  43a683:	inc    DWORD PTR [ebx-0x3cff0001]
  43a689:	add    BYTE PTR [edx+0x5f0000cf],al
  43a68f:	mov    ebx,DWORD PTR [eax]
  43a691:	ins    BYTE PTR es:[edi],dx
  43a692:	(bad)  
  43a693:	push   DWORD PTR [esi+0x790083cc]
  43a699:	add    BYTE PTR [eax-0x60007cf9],dh
  43a69f:	mov    bh,0x95
  43a6a1:	sub    eax,0x83e0ff00
  43a6a6:	add    bh,bh
  43a6a8:	aaa    
  43a6a9:	add    BYTE PTR [ebx-0x16],bl
  43a6ac:	add    BYTE PTR [ecx+0x4d6b343a],cl
  43a6b2:	cmp    edi,0xffffffe3
  43a6b5:	(bad)  
  43a6b6:	inc    DWORD PTR [eax]
  43a6b8:	cld    
  43a6b9:	call   FWORD PTR [edx-0x6dffff93]
  43a6bf:	add    al,0x6f
  43a6c1:	mov    ch,0xff
  43a6c3:	add    BYTE PTR [ebx+0x3bffff00],bl
  43a6c9:	jmp    FWORD PTR [ebp+0x2b00ffd8]
  43a6cf:	adc    ah,0x78
  43a6d2:	(bad)  
  43a6d3:	call   DWORD PTR [ecx]
  43a6d5:	add    BYTE PTR [eax],al
  43a6d7:	add    BYTE PTR [eax],al
  43a6d9:	cmp    DWORD PTR [edi+eax*1-0xad5ff01],0x2c
  43a6e1:	and    bh,bh
  43a6e3:	mov    ecx,esi
  43a6e5:	dec    DWORD PTR [ecx+0x17ccafff]
  43a6eb:	mov    cl,0xff
  43a6ed:	mov    edx,edi
  43a6ef:	ja     0x43a705
  43a6f1:	sbb    eax,0xffe400ff
  43a6f6:	dec    DWORD PTR [ecx-0x783f7678]
  43a6fc:	inc    DWORD PTR [eax]
  43a6fe:	push   es
  43a6ff:	cmc    
  43a700:	inc    ebp
  43a701:	push   ebx
  43a702:	add    DWORD PTR [ebx-0x330099],0x71
  43a709:	add    BYTE PTR [esi-0x10],cl
  43a70c:	inc    DWORD PTR [eax]
  43a70e:	fld    QWORD PTR [ebp+edx*4+0x5f83ffc3]
  43a715:	add    DWORD PTR [eax],0xffffffff
  43a718:	add    bh,bh
  43a71a:	dec    eax
  43a71b:	stc    
  43a71c:	add    BYTE PTR [eax],al
  43a71e:	mov    bh,0x45
  43a720:	in     eax,0xae
  43a722:	mov    DWORD PTR [eax],eax
  43a724:	jne    0x43a725
  43a726:	add    bh,bh
  43a728:	pop    es
  43a729:	inc    DWORD PTR [eax]
  43a72b:	adc    eax,DWORD PTR [ebx-0x66956a77]
  43a731:	sar    bh,cl
  43a733:	push   DWORD PTR [edi+edi*8-0x1]
  43a737:	add    dh,bh
  43a739:	inc    edx
  43a73b:	bswap  esp
  43a73d:	int3   
  43a73e:	add    BYTE PTR [eax],dh
  43a740:	xor    BYTE PTR [eax+0x0],ah
  43a743:	push   eax
  43a745:	inc    DWORD PTR [eax]
  43a747:	call   DWORD PTR [edi+edi*8+0x2]
  43a74b:	sub    al,0x89
  43a74d:	call   FWORD PTR [edi+0x5b]
  43a750:	inc    eax
  43a751:	or     al,0xff
  43a753:	dec    eax
  43a755:	mov    esp,ecx
  43a757:	dec    DWORD PTR [ecx-0x6bb01]
  43a75d:	add    dh,ah
  43a75f:	jmp    0x8922:0xffff9b96
  43a766:	(bad)  
  43a767:	dec    edi
  43a769:	add    DWORD PTR [esi-0x5c00ffc2],0xffffffab
  43a770:	mov    eax,DWORD PTR [ecx-0xcf3301]
  43a776:	(bad)  
  43a777:	push   DWORD PTR [eax+eax*1-0x21]
  43a77b:	retf   
  43a77c:	add    bh,bh
  43a77e:	dec    esi
  43a77f:	adc    esi,eax
  43a781:	xor    ecx,DWORD PTR [ecx+0x18cc]
  43a787:	add    BYTE PTR [esi-0x1],dh
  43a78a:	lds    esi,FWORD PTR [edx+0x15faffff]
  43a790:	(bad)  [esi]
  43a792:	inc    DWORD PTR [ebx-0x33000082]
  43a798:	sbb    bh,bh
  43a79a:	pop    ebx
  43a79b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43a79c:	add    BYTE PTR [eax],al
  43a79e:	idiv   BYTE PTR [esp+ebp*2]
  43a7a1:	sub    bh,bh
  43a7a3:	(bad)  
  43a7a4:	cmp    bh,bh
  43a7a6:	add    bh,bh
  43a7a8:	scas   al,BYTE PTR es:[edi]
  43a7a9:	add    BYTE PTR [edi-0x800332d],dh
  43a7af:	ret    0x968a
  43a7b2:	mov    edi,edi
  43a7b4:	std    
  43a7b5:	add    BYTE PTR [ebx-0x1ff3d01],al
  43a7bb:	lea    eax,[ebx-0x38634900]
  43a7c1:	inc    DWORD PTR [ebx-0x337cbf01]
  43a7c7:	(bad)  
  43a7c8:	mov    ecx,0xde2083
  43a7cd:	jmp    DWORD PTR [ecx-0x74]
  43a7d0:	outs   dx,DWORD PTR ds:[esi]
  43a7d1:	inc    esi
  43a7d2:	(bad)  
  43a7d3:	inc    eax
  43a7d5:	mov    edi,edi
  43a7d7:	call   FWORD PTR [edi+edi*8-0xb450]
  43a7de:	adc    ecx,DWORD PTR [esi]
  43a7e0:	xchg   esp,eax
  43a7e1:	pop    ecx
  43a7e2:	add    bh,bh
  43a7e4:	fild   DWORD PTR [eax]
  43a7e6:	cmp    edi,0xffffffc3
  43a7e9:	mov    DWORD PTR [ebp-0x44],esp
  43a7ec:	add    bh,bh
  43a7ee:	addr16 call 0xff26:0xffffda92
  43a7f6:	dec    esp
  43a7f8:	add    edi,edi
  43a7fa:	xchg   edi,eax
  43a7fb:	jae    0x43a7fc
  43a7fd:	(bad)  
  43a7fe:	mov    edi,0xff451ffc
  43a803:	add    BYTE PTR [edx-0x277c7d00],ah
  43a809:	call   DWORD PTR [eax-0x29337ca7]
  43a80f:	adc    eax,0xa2db
  43a814:	mov    ecx,0x9bffffff
  43a819:	add    BYTE PTR [edi-0x4bff00af],bh
  43a81f:	add    al,0x88
  43a821:	jno    0x43a823
  43a823:	inc    DWORD PTR [edi]
  43a825:	add    bh,bh
  43a827:	dec    DWORD PTR [edx]
  43a829:	add    BYTE PTR [ebx+0x68],ch
  43a82c:	add    BYTE PTR [ecx+0x1ba0372b],cl
  43a832:	inc    DWORD PTR [eax]
  43a834:	xor    DWORD PTR [ebx-0x83ff77],eax
  43a83a:	jecxz  0x43a868
  43a83c:	(bad)  
  43a83d:	call   FWORD PTR [ebp+edi*8-0x3300b141]
  43a844:	mov    ebx,0xccffffff
  43a849:	call   DWORD PTR [esi+0x7a]
  43a84c:	mov    edi,edi
  43a84e:	test   esi,edi
  43a850:	daa    
  43a851:	rol    BYTE PTR [eax],1
  43a853:	add    dh,cl
  43a855:	inc    DWORD PTR [eax]
  43a857:	sub    ecx,0xffffffff
  43a85a:	aaa    
  43a85b:	sub    eax,0x8523ff00
  43a860:	lods   al,BYTE PTR ds:[esi]
  43a861:	pop    esp
  43a862:	add    BYTE PTR [eax],al
  43a864:	cmp    eax,0xc30000ff
  43a869:	call   FWORD PTR [edx+0x21]
  43a86c:	inc    DWORD PTR [eax]
  43a86e:	and    ecx,DWORD PTR [ecx]
  43a870:	and    al,0xeb
  43a872:	inc    DWORD PTR [eax]
  43a874:	outs   dx,BYTE PTR ds:[esi]
  43a875:	mov    DWORD PTR [ebx+0x5aff1b83],eax
  43a87b:	fild   WORD PTR [ebx+0x44c24289]
  43a881:	dec    esp
  43a882:	add    bh,bh
  43a884:	and    eax,DWORD PTR [eax]
  43a886:	cmp    edi,0xffffffa4
  43a889:	call   FWORD PTR [edx]
  43a88b:	cld    
  43a88c:	add    DWORD PTR [ebx+0x67c55298],0xffffff83
  43a893:	dec    DWORD PTR [ecx-0x5300ff01]
  43a899:	inc    DWORD PTR ds:0xbe8900b1
  43a89f:	ins    DWORD PTR es:[edi],dx
  43a8a0:	or     DWORD PTR [ecx+0x0],ebp
  43a8a3:	inc    DWORD PTR [edi+edi*8]
  43a8a6:	add    bh,bh
  43a8a8:	xchg   DWORD PTR [eax],eax
  43a8aa:	inc    ebx
  43a8ab:	mov    DWORD PTR [eax],eax
  43a8ad:	add    BYTE PTR [edx-0x7cfc2d85],ch
  43a8b3:	add    dh,dl
  43a8b5:	int3   
  43a8b6:	add    bh,bh
  43a8b8:	enter  0xaff,0x46
  43a8bc:	add    bh,bh
  43a8be:	inc    edx
  43a8bf:	mov    al,ds:0x7aeb
  43a8c4:	jns    0x43a8c6
  43a8c6:	inc    DWORD PTR [eax]
  43a8c8:	pop    edi
  43a8c9:	add    BYTE PTR [edi+0xd83834b],ch
  43a8cf:	cmp    cl,BYTE PTR [ebx-0x1e33ffa5]
  43a8d5:	(bad)  
  43a8d6:	inc    DWORD PTR [eax]
  43a8d8:	push   ebx
  43a8d9:	jmp    FWORD PTR [ebx+0x74ffff20]
  43a8df:	pop    DWORD PTR [eax-0x79]
  43a8e2:	(bad)  
  43a8e3:	inc    DWORD PTR [edi+0x0]
  43a8e6:	add    BYTE PTR [ebx-0x445e7c2b],al
  43a8ec:	inc    DWORD PTR [eax]
  43a8ee:	das    
  43a8ef:	sub    al,0x9c
  43a8f1:	sahf   
  43a8f2:	inc    DWORD PTR [eax]
  43a8f4:	xchg   ebp,eax
  43a8f5:	dec    esp
  43a8f7:	add    BYTE PTR [edi+edi*8],ch
  43a8fa:	ds mov cl,0x83
  43a8fd:	(bad)  
  43a8fe:	in     al,dx
  43a8ff:	outs   dx,BYTE PTR ds:[esi]
  43a900:	mov    BYTE PTR [eax-0x630100],dl
  43a906:	add    bh,bh
  43a908:	cli    
  43a909:	dec    ebx
  43a90b:	(bad)  
  43a90d:	call   DWORD PTR [ecx]
  43a90f:	js     0x43a945
  43a911:	push   ecx
  43a912:	add    BYTE PTR [eax],al
  43a914:	inc    eax
  43a915:	inc    DWORD PTR [eax]
  43a917:	inc    DWORD PTR [esi-0x7c154334]
  43a91d:	dec    DWORD PTR [edx-0xef0f1a]
  43a923:	int3   
  43a924:	xchg   esp,eax
  43a925:	add    BYTE PTR [ecx+0x483e1ff],cl
  43a92b:	fwait
  43a92c:	add    bh,bh
  43a92e:	xor    bh,BYTE PTR [esi+0xffcfb2]
  43a934:	mov    al,0xff
  43a936:	add    bh,bh
  43a938:	adc    eax,DWORD PTR [ebx-0xffa3b3]
  43a93e:	dec    bp
  43a940:	adc    DWORD PTR [ebp-0x34],ecx
  43a943:	int3   
  43a944:	call   0x75cc:0xe4008300
  43a94b:	pop    esp
  43a94c:	add    BYTE PTR [eax],al
  43a94e:	rol    dh,cl
  43a950:	test   DWORD PTR [edi-0x1],esp
  43a953:	(bad)  
  43a954:	mov    ecx,0xa883ffff
  43a959:	call   FWORD PTR [esi-0x2a]
  43a95c:	add    bh,bh
  43a95e:	pop    ds
  43a95f:	das    
  43a960:	mov    ebx,0xf5ffff97
  43a965:	(bad)  
  43a966:	inc    DWORD PTR [eax]
  43a968:	inc    edi
  43a969:	push   DWORD PTR [edi+edi*2]
  43a96c:	inc    DWORD PTR [ebx+0x15cef5d0]
  43a972:	(bad)  
  43a973:	dec    ecx
  43a975:	cmp    edi,0xffffffff
  43a978:	pop    es
  43a979:	add    dl,dl
  43a97b:	mov    eax,DWORD PTR [ebx-0x3efdf77d]
  43a981:	jbe    0x43a906
  43a983:	(bad)  
  43a984:	jmp    0x43a952
  43a986:	int3   
  43a987:	jmp    FWORD PTR [edi+edi*8]
  43a98a:	cmp    BYTE PTR [ecx-0x4d803400],0xd3
  43a991:	in     eax,0xff
  43a993:	call   FWORD PTR [edi-0x12000001]
  43a999:	inc    DWORD PTR [edx]
  43a99b:	rol    BYTE PTR [eax],1
  43a99d:	inc    DWORD PTR [edi]
  43a99f:	scas   eax,DWORD PTR es:[edi]
  43a9a0:	call   0xffff:0x400ffcf
  43a9a7:	add    BYTE PTR [edi],bl
  43a9a9:	jmp    FWORD PTR [ecx-0x3b0000ad]
  43a9af:	fstp   st(3)
  43a9b1:	ror    esp,1
  43a9b3:	inc    DWORD PTR [edx]
  43a9b5:	int3   
  43a9b6:	add    bh,bh
  43a9b8:	xor    eax,0xffc74689
  43a9bd:	add    BYTE PTR [ecx],bh
  43a9bf:	push   eax
  43a9c0:	in     al,dx
  43a9c1:	sbb    edi,edi
  43a9c3:	jmp    DWORD PTR [edi+0x0]
  43a9c6:	int3   
  43a9c7:	call   FWORD PTR [eax-0x259201]
  43a9cd:	add    bh,dh
  43a9cf:	js     0x43a9d1
  43a9d1:	retf   
  43a9d2:	add    BYTE PTR [ebx-0x333300cb],al
  43a9d8:	xchg   ebp,eax
  43a9d9:	int3   
  43a9da:	jae    0x43aa1d
  43a9dc:	mov    edi,edi
  43a9de:	ss call ebp
  43a9e1:	add    eax,0xffafff83
  43a9e6:	dec    esp
  43a9e8:	(bad)  
  43a9e9:	call   esp
  43a9eb:	ins    DWORD PTR es:[edi],dx
  43a9ec:	cmp    edi,0xffffffce
  43a9ef:	dec    eax
  43a9f0:	dec    esi
  43a9f1:	fdiv   st(7),st
  43a9f3:	push   eax
  43a9f5:	add    bh,bh
  43a9f7:	sbb    DWORD PTR ds:0xffdd9500,0xffffffff
  43a9fe:	xor    dl,BYTE PTR [ebx-0x3b]
  43aa01:	mov    DWORD PTR [ecx-0x5f01],ecx
  43aa07:	xor    DWORD PTR [edi],0xffffff89
  43aa0a:	lahf   
  43aa0b:	dec    ebx
  43aa0c:	int3   
  43aa0d:	adc    ebp,0x54
  43aa10:	dec    eax
  43aa11:	and    bh,bh
  43aa13:	xor    DWORD PTR [edi],0xffffff83
  43aa16:	inc    DWORD PTR [ebx+0x49c8cc69]
  43aa1c:	add    bh,bh
  43aa1e:	lock xchg ecx,eax
  43aa20:	or     bl,cl
  43aa22:	inc    DWORD PTR [eax]
  43aa24:	mov    cl,0xff
  43aa26:	inc    DWORD PTR [ebx+0x70e8830a]
  43aa2c:	add    bh,bh
  43aa2e:	jne    0x43aa99
  43aa30:	repz or eax,0xffcaff83
  43aa36:	(bad)  
  43aa37:	call   DWORD PTR [esi-0x1]
  43aa3a:	add    dh,dh
  43aa3c:	(bad)  
  43aa3d:	call   FWORD PTR [ebp+0x8694a6]
  43aa43:	sub    esi,0x0
  43aa46:	add    bh,bh
  43aa48:	sar    bh,0xcd
  43aa4b:	or     eax,0x8951ffcc
  43aa50:	fsub   DWORD PTR [esi-0x1]
  43aa53:	int3   
  43aa54:	push   ds
  43aa55:	int3   
  43aa56:	(bad)  
  43aa57:	(bad)  
  43aa58:	mov    ecx,0xff78b4ff
  43aa5d:	mov    DWORD PTR [eax-0x17],edx
  43aa60:	pushf  
  43aa61:	pop    ss
  43aa62:	add    BYTE PTR [eax],al
  43aa64:	pop    es
  43aa65:	add    DWORD PTR [eax],0x0
  43aa68:	call   0x4ce06c
  43aa6d:	call   eax
  43aa6f:	pop    ds
  43aa70:	jl     0x43aa93
  43aa72:	dec    DWORD PTR [ecx+0x89ff28]
  43aa78:	je     0x43aa79
  43aa7a:	pusha  
  43aa7b:	sub    edi,edi
  43aa7d:	add    dh,cl
  43aa7f:	mov    eax,ds:0xffff310b
  43aa84:	cmp    bh,0x0
  43aa87:	add    DWORD PTR [esi-0x1],0x13
  43aa8b:	scas   eax,DWORD PTR es:[edi]
  43aa8c:	mov    esp,ecx
  43aa8e:	fdiv   st(4),st
  43aa90:	sbb    bl,bh
  43aa92:	int3   
  43aa93:	add    dl,bh
  43aa95:	cmp    edi,0xffffffcc
  43aa98:	or     edi,edi
  43aa9a:	ins    BYTE PTR es:[edi],dx
  43aa9b:	arpl   WORD PTR [ebx-0x26070501],ax
  43aaa1:	add    al,BYTE PTR [eax]
  43aaa3:	xor    DWORD PTR [eax-0x7d],0xffffffcc
  43aaa7:	add    BYTE PTR [ebx+eax*4+0x1],dl
  43aaab:	or     eax,0x3ba2ffff
  43aab0:	call   edi
  43aab2:	add    BYTE PTR [ebx-0x7c00b0],al
  43aab8:	fild   WORD PTR [eax]
  43aaba:	adc    edx,edx
  43aabc:	inc    DWORD PTR [eax]
  43aabe:	and    BYTE PTR [esi+0x5c],ch
  43aac1:	xchg   ebp,eax
  43aac2:	add    BYTE PTR [ebx+0xff00c9],al
  43aac8:	pop    edi
  43aac9:	sub    eax,0x2b
  43aacc:	dec    DWORD PTR [ecx-0x2ca06f3c]
  43aad2:	add    BYTE PTR [eax],al
  43aad4:	sti    
  43aad5:	inc    DWORD PTR [ebx-0x9000501]
  43aadb:	rol    BYTE PTR [eax],cl
  43aadd:	int3   
  43aade:	fbld   TBYTE PTR [ebx+0x30]
  43aae1:	(bad)  
  43aae2:	(bad)  
  43aae3:	call   DWORD PTR [edx]
  43aae5:	add    DWORD PTR [eax],0xffffffff
  43aae8:	in     al,dx
  43aae9:	cmp    DWORD PTR [ecx+ecx*8+0x0],0xffffffff
  43aaee:	add    al,0x89
  43aaf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43aaf1:	outs   dx,DWORD PTR ds:[esi]
  43aaf2:	cmp    edi,0x40
  43aaf5:	(bad)  
  43aaf6:	(bad)  
  43aaf7:	call   FWORD PTR [ecx-0x4acd00]
  43aafd:	jmp    DWORD PTR [ebx-0x1f]
  43ab00:	xchg   esi,eax
  43ab01:	dec    ah
  43ab03:	push   DWORD PTR [edx+0x6ccccc00]
  43ab09:	push   DWORD PTR [edx-0x22]
  43ab0c:	add    DWORD PTR [eax],0x9
  43ab0f:	xchg   ecx,eax
  43ab10:	inc    ebx
  43ab11:	fld    QWORD PTR [eax]
  43ab13:	jmp    DWORD PTR [edx-0x77]
  43ab16:	mov    DWORD PTR [eax],eax
  43ab18:	add    bh,bh
  43ab1a:	mov    BYTE PTR [eax-0x1],al
  43ab1d:	dec    DWORD PTR [ebx]
  43ab1f:	test   al,0x63
  43ab21:	and    edi,edi
  43ab23:	(bad)  
  43ab24:	out    dx,al
  43ab25:	inc    DWORD PTR [eax]
  43ab27:	add    BYTE PTR [eax],ah
  43ab29:	add    esp,0x5
  43ab2c:	cmp    edi,0x1a
  43ab2f:	sub    esp,DWORD PTR [ebp-0x62]
  43ab32:	add    bh,bh
  43ab34:	xchg   esi,eax
  43ab35:	add    BYTE PTR [eax],al
  43ab37:	inc    DWORD PTR [edx-0x2f6700]
  43ab3d:	int3   
  43ab3e:	mov    ch,0xa
  43ab40:	ret    
  43ab41:	push   0xffffffff
  43ab43:	mov    DWORD PTR [edx],esi
  43ab45:	add    BYTE PTR [ecx+0x41005c83],cl
  43ab4b:	xchg   edi,eax
  43ab4c:	inc    DWORD PTR [ebx+0x6b87d8b8]
  43ab52:	add    BYTE PTR [ebx-0xff0039],al
  43ab58:	sub    eax,DWORD PTR [ebx-0x7c43b4]
  43ab5e:	pop    eax
  43ab5f:	int    0xc6
  43ab61:	into   
  43ab62:	add    DWORD PTR [eax],0x57
  43ab65:	(bad)  
  43ab66:	(bad)  
  43ab67:	(bad)  
  43ab68:	std    
  43ab69:	add    BYTE PTR [ecx+0x1d89ff93],bl
  43ab6f:	mov    ecx,0xffffad4b
  43ab74:	xchg   edi,eax
  43ab75:	add    bh,bh
  43ab77:	sub    ebp,0x0
  43ab7a:	push   es
  43ab7b:	cmc    
  43ab7c:	inc    DWORD PTR [eax]
  43ab7e:	sbb    al,0xf2
  43ab80:	xchg   BYTE PTR [ecx+ecx*4],cl
  43ab83:	push   DWORD PTR [esi+0x0]
  43ab86:	add    bh,bh
  43ab88:	out    0x83,eax
  43ab8a:	iret   
  43ab8b:	ror    DWORD PTR [ecx+0x30cc2bff],cl
  43ab91:	(bad)  
  43ab92:	inc    DWORD PTR [eax]
  43ab94:	adc    BYTE PTR [ebx-0x33327700],al
  43ab9a:	xor    BYTE PTR [esi],dh
  43ab9c:	add    BYTE PTR [eax],al
  43ab9e:	call   0x5402c5
  43aba3:	add    BYTE PTR [edi+edi*8],bl
  43aba6:	add    bh,bh
  43aba8:	mov    edx,0x11f2ff
  43abad:	xor    esp,0x31
  43abb0:	in     eax,0x4c
  43abb2:	(bad)  
  43abb3:	call   edx
  43abb5:	dec    esp
  43abb7:	call   FWORD PTR [eax-0x7d]
  43abba:	sbb    bl,ah
  43abbc:	(bad)  
  43abbd:	call   FWORD PTR [ebp+0x5e]
  43abc0:	or     ebx,DWORD PTR [eax]
  43abc2:	mov    DWORD PTR [eax],eax
  43abc4:	push   edi
  43abc5:	or     DWORD PTR [ecx+0x78ff9d00],0x68
  43abcc:	inc    DWORD PTR [eax]
  43abce:	jl     0x43ac23
  43abd0:	inc    ebx
  43abd1:	jne    0x43ab56
  43abd3:	add    BYTE PTR [ebx],cl
  43abd5:	cmp    edi,0xffffffff
  43abd8:	cli    
  43abd9:	dec    ecx
  43abdb:	mov    ebp,0xcde9ccff
  43abe0:	push   ebp
  43abe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43abe2:	inc    DWORD PTR [eax]
  43abe4:	dec    BYTE PTR [ecx-0x8e7c01]
  43abea:	popf   
  43abeb:	ret    0xff00
  43abee:	fsubr  DWORD PTR [edi]
  43abf0:	dec    ebp
  43abf1:	mov    eax,ds:0x897b0089
  43abf6:	add    BYTE PTR [eax],al
  43abf8:	fild   DWORD PTR [eax]
  43abfa:	das    
  43abfb:	sub    edi,edi
  43abfd:	add    BYTE PTR [ecx],dl
  43abff:	nop
  43ac00:	pop    ecx
  43ac01:	daa    
  43ac02:	inc    DWORD PTR [ebx+0xfffff4]
  43ac08:	mov    dl,0xff
  43ac0a:	mov    ah,bl
  43ac0c:	add    BYTE PTR [ebx+0x342228cf],al
  43ac12:	add    DWORD PTR [ebx+0x83ff9d],0xffffffba
  43ac19:	sub    DWORD PTR [ebx],0xffffffd7
  43ac1c:	mov    esp,ecx
  43ac1e:	add    ah,BYTE PTR [edi-0x2cf]
  43ac24:	xor    BYTE PTR [ecx-0x807601],cl
  43ac2a:	(bad)  [ebp+0x2d2cffff]
  43ac30:	inc    esi
  43ac31:	inc    esp
  43ac32:	add    BYTE PTR [ecx-0xff9e],cl
  43ac38:	popf   
  43ac39:	dec    DWORD PTR [edx-0x3a]
  43ac3c:	inc    DWORD PTR [eax]
  43ac3e:	mov    al,0xa2
  43ac40:	fadd   QWORD PTR ds:0x89080089
  43ac46:	add    BYTE PTR [eax],al
  43ac48:	push   eax
  43ac49:	jmp    FWORD PTR [ecx-0x5f7c7cd6]
  43ac4f:	xor    WORD PTR [ebx+eax*4],bx
  43ac53:	add    BYTE PTR [edx-0x1],cl
  43ac56:	add    BYTE PTR [eax],al
  43ac58:	ret    0x24ff
  43ac5b:	test   BYTE PTR [eax],al
  43ac5d:	(bad)  
  43ac5e:	fadd   QWORD PTR [esp+edx*8-0x34]
  43ac62:	add    BYTE PTR [eax],al
  43ac64:	sbb    BYTE PTR [eax],al
  43ac66:	inc    DWORD PTR [eax]
  43ac68:	xchg   BYTE PTR [eax],al
  43ac6a:	jp     0x43ac75
  43ac6c:	(bad)  
  43ac6d:	inc    DWORD PTR [esi-0x44]
  43ac70:	or     edi,edi
  43ac72:	jmp    0x83ff:0x836a63ab
  43ac79:	jle    0x43ac7a
  43ac7b:	inc    DWORD PTR [eax-0x4c7c1b7d]
  43ac81:	inc    DWORD PTR [esi-0xe5198c]
  43ac87:	add    BYTE PTR [eax],al
  43ac89:	loop   0x43ac8a
  43ac8b:	call   FWORD PTR [eax-0x18ff9d7d]
  43ac91:	int3   
  43ac92:	or     ebx,ebp
  43ac94:	inc    esi
  43ac95:	cli    
  43ac96:	add    bh,bh
  43ac98:	add    BYTE PTR [edi],bh
  43ac9a:	add    DWORD PTR [ebx+0xfeffc0],0xffffffe4
  43aca1:	add    DWORD PTR [esi],0xffffffde
  43aca4:	fwait
  43aca5:	xor    eax,0xd5000000
  43acaa:	inc    DWORD PTR [eax]
  43acac:	(bad)  
  43acae:	mov    DWORD PTR [eax],0x993300b5
  43acb4:	mov    esi,0xff00fff9
  43acb9:	cmp    al,0xff
  43acbb:	sub    DWORD PTR [eax+eax*1],0x47
  43acbf:	(bad)  
  43acc0:	cmp    bh,bh
  43acc2:	xchg   ebp,eax
  43acc3:	xor    eax,DWORD PTR [bp-0x7d]
  43acc7:	add    DWORD PTR [eax],0x9
  43acca:	int3   
  43accb:	add    DWORD PTR [eax-0x1],0x1f
  43accf:	inc    DWORD PTR [ebp+0x452490ff]
  43acd5:	js     0x43acd6
  43acd7:	add    BYTE PTR [eax],al
  43acd9:	enter  0xff00,0x21
  43acdd:	push   DWORD PTR [esi-0x1]
  43ace0:	ss (bad) 
  43ace2:	out    dx,al
  43ace3:	lahf   
  43ace4:	sbb    eax,0x83ff00d3
  43ace9:	pop    edx
  43acea:	inc    DWORD PTR [eax]
  43acec:	sub    edi,edi
  43acee:	jbe    0x43acef
  43acf0:	call   0xff8e:0xc54161ff
  43acf7:	add    BYTE PTR [eax],al
  43acf9:	(bad)  
  43acfa:	inc    DWORD PTR [ebx-0x7c71ff1d]
  43ad00:	xor    ecx,esp
  43ad02:	mov    esi,esi
  43ad04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ad05:	lods   eax,DWORD PTR ds:[esi]
  43ad06:	add    BYTE PTR [ebx-0xff0d01],al
  43ad0c:	push   es
  43ad0d:	add    ah,dl
  43ad0f:	(bad)  
  43ad10:	mov    edi,0x1aad3100
  43ad15:	ret    0xffff
  43ad18:	add    BYTE PTR [edx-0x1],dh
  43ad1b:	(bad)  
  43ad1c:	aas    
  43ad1d:	jmp    FWORD PTR [edx-0x34]
  43ad20:	inc    ecx
  43ad21:	add    BYTE PTR [ecx+0x3d],bl
  43ad24:	mov    ds:0xff00ff4d,al
  43ad29:	push   ss
  43ad2a:	inc    DWORD PTR [ebx-0x85fff8]
  43ad30:	or     edi,edi
  43ad32:	cmp    al,0xc1
  43ad34:	sub    dh,dh
  43ad36:	add    bh,bh
  43ad38:	add    BYTE PTR [edx+0x0],dh
  43ad3b:	call   DWORD PTR [ebp+0x0]
  43ad3e:	push   es
  43ad3f:	int3   
  43ad40:	mov    dh,0xff
  43ad42:	xchg   DWORD PTR [edx+ebp*2+0x83ff84],edx
  43ad49:	jecxz  0x43ad4b
  43ad4b:	dec    DWORD PTR [ecx-0x14005001]
  43ad51:	call   DWORD PTR [eax]
  43ad53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad54:	jle    0x43adce
  43ad56:	mov    DWORD PTR [eax],eax
  43ad58:	add    BYTE PTR ds:0xffdb00ff,bl
  43ad5e:	js     0x43ad60
  43ad60:	jecxz  0x43ad62
  43ad62:	sbb    ebp,DWORD PTR [esi+esi*4-0x63]
  43ad66:	inc    DWORD PTR [eax]
  43ad68:	jmp    FWORD PTR [edx]
  43ad6a:	add    DWORD PTR [eax],0x13
  43ad6d:	add    DWORD PTR [edx-0x1],0xffffffcc
  43ad71:	(bad)  
  43ad72:	(bad)  [edi+0x2e]
  43ad75:	cld    
  43ad76:	(bad)  
  43ad77:	inc    DWORD PTR [ebx-0x21ff0044]
  43ad7d:	add    al,ah
  43ad7f:	call   FWORD PTR [ebx+0x0]
  43ad82:	sbb    al,0xb8
  43ad84:	sbb    ebx,DWORD PTR ds:0x6300ccff
  43ad8a:	add    bh,bh
  43ad8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ad8d:	(bad)  
  43ad8e:	sti    
  43ad8f:	call   FWORD PTR [edi]
  43ad91:	push   DWORD PTR [edi+eax*2-0x76001381]
  43ad98:	inc    DWORD PTR [esi+0x0]
  43ad9b:	add    bh,ch
  43ad9d:	(bad)  
  43ad9e:	out    dx,eax
  43ad9f:	call   FWORD PTR [esi-0x34]
  43ada2:	in     al,0xc
  43ada4:	inc    ebp
  43ada5:	stos   BYTE PTR es:[edi],al
  43ada6:	add    BYTE PTR [ecx-0x7c8600],cl
  43adac:	fild   DWORD PTR [eax]
  43adae:	add    BYTE PTR [eax],al
  43adb0:	cdq    
  43adb1:	add    BYTE PTR [ecx-0x7c6c29de],bh
  43adb7:	add    bh,bh
  43adb9:	fmul   st,st(4)
  43adbb:	add    BYTE PTR [esi-0x1],bh
  43adbe:	dec    esp
  43adbf:	add    BYTE PTR [edi+edi*8],ch
  43adc2:	(bad)  [ebp-0x7600b207]
  43adc8:	add    BYTE PTR [eax-0x933377],al
  43adce:	pusha  
  43adcf:	add    dh,bl
  43add1:	(bad)  
  43add2:	jmp    0xffc33e3b
  43add7:	mov    edi,edi
  43add9:	(bad)  
  43adda:	dec    esp
  43addc:	pop    edx
  43addd:	mov    DWORD PTR [ecx-0x77c3577],ebx
  43ade3:	call   0xc9ff:0xffda77
  43adea:	dec    esp
  43adec:	mov    al,BYTE PTR [eax]
  43adee:	(bad)  
  43adf0:	popf   
  43adf1:	call   DWORD PTR ds:0xffb5be8d
  43adf7:	int3   
  43adf8:	dec    DWORD PTR [esi-0x1]
  43adfb:	xor    edx,0xffffffcc
  43adfe:	and    eax,DWORD PTR [eax]
  43ae00:	lahf   
  43ae01:	add    cl,bh
  43ae03:	mov    ebx,0x89ffe365
  43ae08:	add    al,bl
  43ae0a:	add    bh,bh
  43ae0c:	mov    ds:0xd2ffb383,eax
  43ae11:	and    ebp,0xe
  43ae14:	das    
  43ae15:	repz (bad) 
  43ae17:	(bad)  
  43ae18:	jmp    FWORD PTR [edi]
  43ae1a:	mov    DWORD PTR [eax],eax
  43ae1c:	out    dx,al
  43ae1d:	jmp    FWORD PTR [edi-0x78009400]
  43ae23:	popf   
  43ae24:	nop
  43ae25:	xchg   DWORD PTR [ebx-0xd30001],eax
  43ae2b:	add    bl,bh
  43ae2d:	jmp    FWORD PTR [edi+edi*8+0x2266cc11]
  43ae34:	xchg   al,ah
  43ae36:	dec    esp
  43ae38:	add    BYTE PTR [eax],ah
  43ae3a:	(bad)  
  43ae3b:	(bad)  
  43ae3c:	cmp    eax,0xb000f200
  43ae41:	jmp    DWORD PTR [edi]
  43ae43:	pop    ecx
  43ae44:	arpl   bx,sp
  43ae46:	(bad)  
  43ae47:	(bad)  
  43ae48:	call   DWORD PTR [ebp-0x1]
  43ae4b:	add    BYTE PTR [ebp-0x1],dl
  43ae4e:	mov    edi,?
  43ae50:	add    bh,bh
  43ae52:	cli    
  43ae53:	int3   
  43ae54:	mov    edx,0x8300b7
  43ae59:	cmp    edi,0xffffff83
  43ae5c:	push   cs
  43ae5d:	mov    DWORD PTR [eax-0x26ff5201],ebx
  43ae63:	push   edi
  43ae64:	adc    al,0x3a
  43ae66:	add    ah,cl
  43ae68:	inc    esp
  43ae6a:	(bad)  
  43ae6b:	call   DWORD PTR [ebx-0x1]
  43ae6e:	mov    bh,0xff
  43ae70:	ret    
  43ae71:	add    ah,ch
  43ae73:	sbb    BYTE PTR [esp+esi*4],0x89
  43ae77:	add    bh,bh
  43ae79:	rol    BYTE PTR [ebx-0x31ff1501],1
  43ae7f:	(bad)  
  43ae80:	js     0x43ae0b
  43ae82:	xor    eax,0x1003bf
  43ae87:	int3   
  43ae88:	dec    DWORD PTR [edx]
  43ae8a:	inc    DWORD PTR [eax]
  43ae8c:	sbb    edi,edi
  43ae8e:	out    0xff,eax
  43ae90:	xor    edi,edi
  43ae92:	(bad)  
  43ae93:	std    
  43ae94:	lock inc WORD PTR [eax]
  43ae98:	inc    DWORD PTR [edi-0x1]
  43ae9b:	add    BYTE PTR [esi],ch
  43ae9d:	mov    DWORD PTR [edi+edi*8-0x24ba005d],ecx
  43aea4:	dec    edx
  43aea5:	popf   
  43aea6:	mov    DWORD PTR [eax],eax
  43aea8:	(bad)  
  43aea9:	cmp    al,0xcc
  43aeab:	mov    DWORD PTR [edi-0x1],esp
  43aeae:	push   es
  43aeaf:	add    BYTE PTR [edi-0x6ba6b900],dh
  43aeb5:	jb     0x43aeb7
  43aeb7:	cmp    edi,0x5a
  43aeba:	(bad)  
  43aebb:	(bad)  
  43aebc:	out    dx,eax
  43aebd:	(bad)  
  43aebe:	cmp    al,0x0
  43aec0:	lods   eax,DWORD PTR ds:[esi]
  43aec1:	jmp    FWORD PTR [eax+0x60]
  43aec4:	cmp    al,0xde
  43aec6:	mov    DWORD PTR [ebx+0x89a4ff],eax
  43aecc:	dec    ecx
  43aecd:	jmp    FWORD PTR [edx]
  43aecf:	add    bh,dl
  43aed1:	add    BYTE PTR [edi-0x26d656],ah
  43aed7:	add    bh,bh
  43aed9:	scas   eax,DWORD PTR es:[edi]
  43aeda:	cmp    edi,0xffffffc8
  43aedd:	jmp    FWORD PTR [edi]
  43aedf:	push   DWORD PTR [esi+0x59411acc]
  43aee5:	pusha  
  43aee6:	inc    DWORD PTR [eax]
  43aee8:	add    BYTE PTR [ecx],cl
  43aeea:	add    DWORD PTR [ebx-0x7cb700f1],0x73
  43aef1:	add    BYTE PTR [esi],al
  43aef3:	test   al,0x97
  43aef5:	pop    esp
  43aef6:	mov    edi,edi
  43aef8:	jmp    DWORD PTR [ebx+eax*4+0x4f00beff]
  43aeff:	inc    DWORD PTR [edx-0x2db91300]
  43af05:	inc    eax
  43af06:	add    BYTE PTR [eax],al
  43af08:	jmp    FWORD PTR [eax+eax*1]
  43af0b:	call   DWORD PTR [edx+0xb8335ff]
  43af11:	and    DWORD PTR ds:0xa73cb6,0xffffffff
  43af18:	(bad)  
  43af19:	clc    
  43af1a:	inc    DWORD PTR [ebx-0x7c93007d]
  43af20:	cdq    
  43af21:	mov    DWORD PTR [edx+0x70],esi
  43af24:	adc    dl,bh
  43af26:	inc    DWORD PTR [eax]
  43af28:	call   DWORD PTR [edi-0x33e7ff7d]
  43af2e:	adc    al,0xff
  43af30:	pop    edi
  43af31:	int3   
  43af32:	or     ch,0x4
  43af35:	mov    ch,0x0
  43af37:	(bad)  
  43af38:	dec    eax
  43af3a:	(bad)  
  43af3b:	dec    DWORD PTR [eax-0x6001100]
  43af41:	(bad)  
  43af42:	jg     0x43af1e
  43af44:	jne    0x43af79
  43af46:	(bad)  
  43af47:	(bad)  
  43af48:	(bad)  
  43af49:	mov    edi,0xccf58900
  43af4e:	sub    eax,0xd4ff47ff
  43af53:	fadd   DWORD PTR [ebx+0x19]
  43af56:	inc    DWORD PTR [eax]
  43af58:	mov    edi,ebx
  43af5a:	add    DWORD PTR [ebx-0x18fff5],0xffffff85
  43af61:	add    BYTE PTR [esi+ebx*8-0x76008d9d],dh
  43af68:	add    cl,bl
  43af6a:	add    BYTE PTR [ecx+0x85ff97],cl
  43af70:	arpl   WORD PTR [eax],ax
  43af72:	mov    WORD PTR [ebx+0x62],fs
  43af75:	fld    DWORD PTR [ebx-0xc93301]
  43af7b:	jmp    FWORD PTR [esi-0x1]
  43af7e:	(bad)  
  43af7f:	and    DWORD PTR [ebx],0x0
  43af82:	pop    ebx
  43af83:	xor    eax,0xff00c4c6
  43af88:	mov    DWORD PTR [ecx-0x1],esi
  43af8b:	dec    edx
  43af8d:	dec    DWORD PTR [ebx-0x1]
  43af90:	mov    edx,0x2d67afff
  43af95:	imul   ecx,DWORD PTR [ecx-0xf10001],0xffffffff
  43af9c:	fwait
  43af9d:	cmp    DWORD PTR [esi],0xffffff83
  43afa0:	or     al,0xff
  43afa2:	push   eax
  43afa3:	ret    
  43afa4:	popa   
  43afa5:	cmp    edi,edi
  43afa7:	(bad)  
  43afa8:	jmp    eax
  43afaa:	int3   
  43afab:	cmp    DWORD PTR [eax-0x1],0xffffffac
  43afaf:	add    dl,cl
  43afb1:	call   FWORD PTR [edi-0x6ab13e]
  43afb7:	dec    DWORD PTR [ecx-0x380076db]
  43afbd:	dec    DWORD PTR [ebp+0x0]
  43afc0:	daa    
  43afc1:	int3   
  43afc2:	sub    eax,0xccc5a8b6
  43afc7:	mov    edi,edi
  43afc9:	ret    0xffff
  43afcc:	mov    ch,0xff
  43afce:	bound  eax,QWORD PTR [eax]
  43afd0:	enter  0x4900,0x8c
  43afd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43afd5:	mov    bl,0xff
  43afd7:	add    BYTE PTR [eax],al
  43afd9:	retf   
  43afda:	(bad)  
  43afdb:	push   DWORD PTR [edi+edi*8]
  43afde:	cmp    al,BYTE PTR [eax]
  43afe0:	dec    ebp
  43afe1:	add    BYTE PTR [ebx-0x27b382],bl
  43afe7:	mov    edi,edi
  43afe9:	sub    bh,bh
  43afeb:	dec    DWORD PTR [esi-0x17ff1101]
  43aff1:	jmp    DWORD PTR [ebp-0x7c22bccd]
  43aff7:	mov    edi,edi
  43aff9:	sub    DWORD PTR [eax],eax
  43affb:	mov    DWORD PTR [eax],ebx
  43affd:	add    BYTE PTR [eax],dl
  43afff:	call   DWORD PTR [edx-0x1bcf3c00]
  43b005:	test   DWORD PTR [ebx-0x7cb90001],eax
  43b00b:	dec    DWORD PTR [ebx+0x31ff3483]
  43b011:	mov    DWORD PTR [ecx],ebp
  43b013:	sub    ah,bl
  43b015:	adc    eax,DWORD PTR [ebx+0xdcffff]
  43b01b:	jmp    DWORD PTR [ebx]
  43b01d:	add    dh,ch
  43b01f:	mov    DWORD PTR [esi],eax
  43b021:	mov    DWORD PTR [esi+ebx*2-0x48],edx
  43b025:	dec    edx
  43b026:	inc    DWORD PTR [eax]
  43b028:	push   DWORD PTR [ecx]
  43b02a:	dec    DWORD PTR [ecx+0xc28375]
  43b030:	mov    dl,0xff
  43b032:	ds (bad) 
  43b035:	fs (bad) 
  43b037:	(bad)  
  43b038:	jmp    edx
  43b03a:	dec    DWORD PTR [ecx-0x7c36ff77]
  43b040:	sub    bh,bh
  43b042:	push   ebx
  43b043:	bound  eax,QWORD PTR [ebp+0xff89b5]
  43b049:	repnz inc DWORD PTR [eax]
  43b04c:	push   cs
  43b04d:	jmp    DWORD PTR [eax+eax*1-0x2c3afffa]
  43b054:	std    
  43b055:	xor    eax,DWORD PTR [eax]
  43b057:	(bad)  
  43b058:	call   DWORD PTR [edi]
  43b05a:	add    bh,bh
  43b05c:	or     esp,0xffffffc3
  43b05f:	dec    DWORD PTR [eax-0x1]
  43b062:	in     eax,0xe6
  43b064:	ret    0x7e
  43b067:	dec    DWORD PTR [ecx+0x3183cc6a]
  43b06d:	add    BYTE PTR [ebx-0x3f762e7d],bh
  43b073:	push   ds
  43b074:	adc    al,0x4b
  43b076:	add    BYTE PTR [ebx-0x4300],al
  43b07c:	jno    0x43b04a
  43b07e:	stos   DWORD PTR es:[edi],eax
  43b07f:	mov    DWORD PTR [ecx-0x77c6e600],esi
  43b085:	test   BYTE PTR [eax],0xff
  43b088:	int3   
  43b089:	mov    ?,edi
  43b08b:	add    BYTE PTR [ebp-0x1],dh
  43b08e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b08f:	int3   
  43b090:	or     bh,bh
  43b092:	sahf   
  43b093:	lahf   
  43b094:	jmp    0x10fb0b2
  43b099:	jmp    0xc8:0xd6ffff
  43b0a0:	je     0x43b0a1
  43b0a2:	fldcw  WORD PTR [esi+0x8331a0]
  43b0a8:	push   esi
  43b0aa:	(bad)  
  43b0ab:	(bad)  
  43b0ac:	mov    eax,0xf3830700
  43b0b1:	(bad)  
  43b0b2:	fcomp  QWORD PTR [eax+ebx*8]
  43b0b5:	std    
  43b0b6:	dec    DWORD PTR [ecx-0x7cffa201]
  43b0bc:	inc    edi
  43b0bd:	add    BYTE PTR [edi-0x3f00cd34],dl
  43b0c3:	jb     0x43b075
  43b0c5:	cs (bad) 
  43b0c7:	inc    DWORD PTR [eax]
  43b0c9:	jecxz  0x43b0ca
  43b0cb:	(bad)  
  43b0cc:	jle    0x43b0cd
  43b0ce:	lods   al,BYTE PTR ds:[esi]
  43b0cf:	add    BYTE PTR [ebx-0x7d],dl
  43b0d2:	sbb    eax,0xff265afe
  43b0d7:	mov    esp,ecx
  43b0d9:	pop    es
  43b0da:	dec    esp
  43b0dc:	pop    ss
  43b0dd:	push   edi
  43b0df:	adc    DWORD PTR [esi+0x0],0xf
  43b0e3:	sti    
  43b0e4:	fsubr  QWORD PTR [ebx+0x4883cc00]
  43b0ea:	add    bh,bh
  43b0ec:	push   ds
  43b0ed:	inc    DWORD PTR [ecx]
  43b0ef:	jmp    FWORD PTR [ecx+0x0]
  43b0f2:	ret    
  43b0f3:	and    al,0x1f
  43b0f5:	mov    bh,0xff
  43b0f7:	add    BYTE PTR [ebx-0x3033ff4f],al
  43b0fd:	mov    DWORD PTR [edi-0x77],ebp
  43b100:	sar    bh,0xaa
  43b103:	xor    DWORD PTR [esi+0x4b],0x0
  43b107:	inc    DWORD PTR [ebx-0x630000e1]
  43b10d:	jmp    DWORD PTR [ecx-0x1]
  43b110:	dec    eax
  43b111:	call   DWORD PTR [ebp-0x16a7b5]
  43b117:	dec    esp
  43b119:	cs add bh,bh
  43b11c:	xchg   ebx,eax
  43b11d:	jmp    edx
  43b11f:	(bad)  
  43b120:	mov    esi,0xbea853ff
  43b125:	pop    DWORD PTR [eax]
  43b127:	add    ah,cl
  43b129:	jge    0x43b0f7
  43b12b:	int3   
  43b12c:	adc    al,0x0
  43b12e:	mov    BYTE PTR [eax],al
  43b130:	scas   eax,DWORD PTR es:[edi]
  43b131:	mov    DWORD PTR [edx+0x3a],ecx
  43b134:	cmp    eax,0x83ffff78
  43b139:	or     DWORD PTR [eax],eax
  43b13b:	push   DWORD PTR [eax+0x7e832800]
  43b141:	add    cl,bl
  43b143:	leave  
  43b144:	shl    BYTE PTR ds:0xec00ffff,1
  43b14a:	mov    DWORD PTR [eax],eax
  43b14c:	cld    
  43b14d:	add    cl,ah
  43b14f:	int3   
  43b150:	jno    0x43b151
  43b152:	mov    esi,0x171371
  43b157:	add    DWORD PTR [eax],0xffffffc4
  43b15a:	cmp    edi,0x6a
  43b15d:	add    BYTE PTR [eax],al
  43b15f:	call   FWORD PTR [edx]
  43b161:	add    BYTE PTR [eax],ah
  43b163:	mov    cl,0x6d
  43b165:	mov    ebx,0x11ffffff
  43b16a:	add    BYTE PTR [eax],al
  43b16c:	adc    eax,0x9d001d00
  43b171:	add    BYTE PTR [edx-0x767cfef5],ah
  43b177:	(bad)  
  43b178:	jmp    FWORD PTR [ebp-0x1]
  43b17b:	add    BYTE PTR [eax+0x3983b5ff],bh
  43b181:	add    BYTE PTR [edi+edi*4+0x48],dl
  43b185:	sub    eax,0x910000ff
  43b18a:	inc    DWORD PTR [eax]
  43b18c:	test   al,0x83
  43b18e:	out    dx,al
  43b18f:	cmp    edx,0xffffffff
  43b192:	pop    eax
  43b193:	push   ds
  43b194:	cmp    DWORD PTR [ecx+0x5083ff00],ecx
  43b19a:	add    BYTE PTR [eax],al
  43b19c:	push   ecx
  43b19d:	add    BYTE PTR [ebx+eax*4+0x1675ff86],dh
  43b1a4:	mov    ds:0xffffff6a,eax
  43b1a9:	stos   DWORD PTR es:[edi],eax
  43b1aa:	or     esp,0x2d
  43b1ad:	adc    DWORD PTR [ecx-0x1],0xffffffc2
  43b1b1:	add    BYTE PTR [ebp+eiz*8-0x1f],dl
  43b1b5:	mov    DWORD PTR [ebx-0x764eff01],0x230008ff
  43b1bf:	(bad)  
  43b1c0:	jg     0x43b18e
  43b1c2:	mov    ch,0x49
  43b1c4:	fiadd  WORD PTR [eax+eax*1]
  43b1c7:	inc    DWORD PTR [eax]
  43b1c9:	mov    cl,0x83
  43b1cb:	call   FWORD PTR [esi-0x77]
  43b1ce:	ror    DWORD PTR [ecx+0x5761ff3d],cl
  43b1d4:	jecxz  0x43b1d9
  43b1d6:	mov    DWORD PTR [ecx+0xe2ff],ecx
  43b1dc:	jb     0x43b1dd
  43b1de:	mov    DWORD PTR [eax],0x29530067
  43b1e4:	ins    DWORD PTR es:[edi],dx
  43b1e5:	mov    edi,edi
  43b1e7:	(bad)  
  43b1e8:	push   DWORD PTR [ecx]
  43b1ea:	int3   
  43b1eb:	push   DWORD PTR [ebx-0x1]
  43b1ee:	je     0x43b1f0
  43b1f0:	xor    esp,ecx
  43b1f2:	xchg   esi,eax
  43b1f3:	stos   DWORD PTR es:[edi],eax
  43b1f4:	cmc    
  43b1f5:	mov    esi,0x68ff89ff
  43b1fa:	add    BYTE PTR [eax],al
  43b1fc:	jl     0x43b1fd
  43b1fe:	xchg   edi,edi
  43b200:	mov    edi,0x4e61a1ff
  43b205:	dec    ecx
  43b206:	dec    DWORD PTR [ecx-0x3300e97d]
  43b20c:	daa    
  43b20d:	call   DWORD PTR [esi-0x34009001]
  43b213:	inc    esp
  43b214:	int3   
  43b215:	into   
  43b216:	(bad)  
  43b217:	(bad)  
  43b218:	push   DWORD PTR [ebx]
  43b21a:	add    bh,bh
  43b21c:	push   eax
  43b21d:	add    cl,ah
  43b21f:	(bad)  
  43b220:	jp     0x43b221
  43b222:	sbb    al,0x6e
  43b224:	jl     0x43b21b
  43b226:	int3   
  43b227:	int3   
  43b228:	int3   
  43b229:	jle    0x43b22a
  43b22b:	jmp    FWORD PTR [ebp+0x0]
  43b22e:	jmp    FWORD PTR gs:[ebp-0x1]
  43b232:	pushf  
  43b233:	cmp    al,0xb6
  43b235:	sbb    BYTE PTR [eax],al
  43b237:	add    DWORD PTR [eax],0xffffffed
  43b23a:	(bad)  
  43b23b:	inc    edx
  43b23d:	mov    DWORD PTR [edi+edi*8],ebx
  43b240:	dec    eax
  43b241:	jmp    eax
  43b243:	pop    edx
  43b244:	fwait
  43b245:	aam    0x0
  43b247:	inc    DWORD PTR [eax]
  43b249:	fdiv   st(7),st
  43b24b:	jmp    DWORD PTR [eax+0x16000989]
  43b251:	add    ah,dh
  43b253:	xor    ebx,DWORD PTR [esi+ebx*2-0x1]
  43b257:	add    DWORD PTR [eax],0x3d
  43b25a:	add    bh,bh
  43b25c:	pop    esi
  43b25d:	add    BYTE PTR [ecx+ecx*4-0x100100d0],al
  43b264:	or     DWORD PTR [ecx],esi
  43b266:	(bad)  
  43b267:	inc    DWORD PTR [eax]
  43b269:	mov    ch,0xff
  43b26b:	inc    edx
  43b26d:	add    cl,cl
  43b26f:	mov    eax,ecx
  43b271:	or     DWORD PTR [esi],0xffffffba
  43b274:	les    eax,FWORD PTR [eax+eax*1-0x335d0001]
  43b27b:	add    BYTE PTR ds:0xdf0074cc,bl
  43b281:	and    DWORD PTR [esi-0x73],0xffffffc6
  43b285:	loop   0x43b20a
  43b287:	inc    DWORD PTR [eax]
  43b289:	lea    eax,[eax]
  43b28b:	sub    DWORD PTR [eax+0x6d008700],0xffffffff
  43b292:	and    DWORD PTR [eax],ecx
  43b294:	jmp    0xff62:0xffffffc0
  43b29b:	add    BYTE PTR [edx],dh
  43b29d:	int3   
  43b29e:	lods   eax,DWORD PTR ds:[esi]
  43b29f:	add    BYTE PTR [eax+0x55754a83],ah
  43b2a5:	jnp    0x43b2a7
  43b2a7:	dec    esp
  43b2a9:	pop    ebx
  43b2aa:	add    bh,bh
  43b2ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b2ad:	(bad)  
  43b2ae:	out    dx,eax
  43b2af:	add    BYTE PTR [edi-0x37adde7d],ah
  43b2b5:	cmc    
  43b2b6:	mov    DWORD PTR [ebx-0x7c00827d],eax
  43b2bc:	retf   
  43b2bd:	xor    edx,0xffffffff
  43b2c0:	cmp    edi,edi
  43b2c2:	add    al,0x5b
  43b2c4:	(bad)  
  43b2c5:	pop    eax
  43b2c6:	add    BYTE PTR [ebx-0xff7834],al
  43b2cc:	pop    es
  43b2cd:	int3   
  43b2ce:	cmp    esp,ecx
  43b2d0:	dec    edi
  43b2d1:	call   DWORD PTR [ebx-0x22801a]
  43b2d7:	mov    DWORD PTR [eax],eax
  43b2d9:	mov    edi,edi
  43b2db:	int3   
  43b2dc:	mov    dl,0x0
  43b2de:	mov    bh,0xcc
  43b2e0:	inc    eax
  43b2e1:	jmp    DWORD PTR [edx+0x4d]
  43b2e4:	dec    esi
  43b2e5:	inc    edi
  43b2e6:	add    BYTE PTR [eax],al
  43b2e8:	add    BYTE PTR [ecx-0xc93301],dh
  43b2ee:	push   ecx
  43b2ef:	inc    DWORD PTR [edi+0x2cd388cc]
  43b2f5:	test   BYTE PTR [eax],al
  43b2f7:	add    bh,bh
  43b2f9:	xlat   BYTE PTR ds:[ebx]
  43b2fa:	dec    DWORD PTR [ecx-0x7cb80082]
  43b300:	add    BYTE PTR [eax],al
  43b302:	imul   esi,esi,0x66
  43b305:	lds    eax,FWORD PTR [eax]
  43b307:	add    DWORD PTR [ebx+0x38ff89a4],0xffffff89
  43b30e:	xchg   edi,eax
  43b30f:	mov    DWORD PTR [ebx],ecx
  43b311:	jmp    DWORD PTR [eax-0x47]
  43b314:	fs je  0x43b2a0
  43b317:	mov    edi,edi
  43b319:	sar    edi,cl
  43b31b:	sbb    DWORD PTR [eax+eax*1+0x21],0xffffffcc
  43b320:	je     0x43b321
  43b322:	sub    ebx,DWORD PTR [edx]
  43b324:	sbb    ebx,edx
  43b326:	int3   
  43b327:	mov    DWORD PTR [eax],eax
  43b329:	retf   0xff
  43b32c:	or     al,0xff
  43b32e:	jo     0x43b330
  43b330:	fdivr  st,st(7)
  43b332:	cmp    al,0xbf
  43b334:	stc    
  43b335:	jns    0x43b336
  43b337:	add    bh,bh
  43b339:	popa   
  43b33a:	add    BYTE PTR [ebx+0x53ffdb],al
  43b340:	cdq    
  43b341:	add    BYTE PTR [esp+eiz*4],bl
  43b344:	dec    eax
  43b345:	inc    edx
  43b346:	mov    edi,edi
  43b348:	add    ah,dl
  43b34a:	inc    DWORD PTR [eax]
  43b34c:	inc    esp
  43b34d:	inc    DWORD PTR [edi]
  43b34f:	jmp    FWORD PTR [esi]
  43b351:	push   DWORD PTR [eax+0x41]
  43b354:	xchg   edx,eax
  43b355:	call   0x60433d59
  43b35a:	int3   
  43b35b:	dec    ebp
  43b35d:	and    DWORD PTR [edx],0x0
  43b360:	mov    al,ds:0x60e920ff
  43b365:	mov    DWORD PTR [eax],eax
  43b367:	add    BYTE PTR [eax],al
  43b369:	mov    bh,bh
  43b36b:	add    BYTE PTR [eax],ch
  43b36d:	int3   
  43b36e:	xchg   edx,eax
  43b36f:	(bad)  
  43b370:	clc    
  43b371:	mov    DWORD PTR [eax+0xb38ea6],ebp
  43b377:	add    BYTE PTR [eax],al
  43b379:	and    eax,DWORD PTR [eax]
  43b37b:	jmp    DWORD PTR [eax-0x5b331b01]
  43b381:	sub    DWORD PTR [edx+0xc7ad6a],0xffffffff
  43b388:	inc    DWORD PTR [esi-0x76a60100]
  43b38e:	scas   eax,DWORD PTR es:[edi]
  43b38f:	(bad)  
  43b390:	in     al,dx
  43b391:	call   FWORD PTR [ecx+0xac5953]
  43b397:	(bad)  
  43b398:	call   DWORD PTR [edx-0x34]
  43b39b:	add    BYTE PTR [edi+edi*8+0xfaffe2],bl
  43b3a2:	adc    DWORD PTR [edx-0x32],esp
  43b3a5:	lahf   
  43b3a6:	add    BYTE PTR [eax],al
  43b3a8:	sub    DWORD PTR [eax+eax*1+0x49ff2100],0xffffffff
  43b3b0:	xor    bh,bh
  43b3b2:	xchg   ebp,eax
  43b3b3:	fiadd  WORD PTR [eax+0x83009a]
  43b3b9:	or     eax,0xffd90000
  43b3be:	lea    eax,[eax]
  43b3c0:	push   0xffffffff
  43b3c2:	dec    eax
  43b3c3:	pusha  
  43b3c4:	xor    BYTE PTR [edi+edi*8+0x0],dl
  43b3c8:	sbb    esi,0x0
  43b3cb:	push   DWORD PTR [eax-0x1]
  43b3ce:	and    eax,0xef00d189
  43b3d3:	jb     0x43b404
  43b3d5:	mov    DWORD PTR [eax],0x83018300
  43b3db:	push   DWORD PTR [eax+eax*1-0x78]
  43b3df:	add    BYTE PTR [edx-0x1],dl
  43b3e2:	add    DWORD PTR [ecx-0x2b],ebp
  43b3e5:	inc    ebp
  43b3e6:	dec    esp
  43b3e8:	sbb    DWORD PTR [eax+eax*1+0x0],0x59
  43b3ed:	jmp    DWORD PTR [ebx]
  43b3ef:	and    DWORD PTR [ebx-0x11423101],0x7f
  43b3f6:	add    bh,bh
  43b3f8:	push   DWORD PTR [ebp-0x15ff7d]
  43b3fe:	scas   al,BYTE PTR es:[edi]
  43b3ff:	call   DWORD PTR [edx+0x14931e00]
  43b405:	mov    DWORD PTR [eax],eax
  43b407:	(bad)  
  43b408:	(bad)  
  43b409:	mov    ebp,0xffce0000
  43b40e:	xchg   DWORD PTR [eax],eax
  43b410:	ret    
  43b411:	mov    ebx,edx
  43b413:	pop    edx
  43b414:	jb     0x43b3f2
  43b416:	(bad)  
  43b417:	(bad)  
  43b418:	call   DWORD PTR [edi-0x150001]
  43b41e:	push   es
  43b41f:	mov    ebp,eax
  43b421:	call   FWORD PTR [edx]
  43b423:	pmaxsw mm7,QWORD PTR [esi-0x34]
  43b427:	inc    DWORD PTR [eax]
  43b429:	or     cl,ah
  43b42b:	add    BYTE PTR ds:0xb6ff8aff,cl
  43b431:	(bad)  
  43b432:	js     0x43b3cc
  43b434:	adc    BYTE PTR [ebx-0x1],0xff
  43b438:	add    BYTE PTR [ecx-0x120034],dh
  43b43e:	stc    
  43b43f:	call   FWORD PTR [esi+0x0]
  43b442:	cmp    eax,0x480e27
  43b447:	inc    DWORD PTR [eax]
  43b449:	lods   eax,DWORD PTR ds:[esi]
  43b44a:	add    BYTE PTR [ebx+0xc5fff0],al
  43b450:	fiadd  DWORD PTR [eax]
  43b452:	cmp    BYTE PTR [esi+0x13],ah
  43b455:	jmp    0xff:0x100089cc
  43b45c:	es add bl,dh
  43b45f:	(bad)  
  43b460:	jp     0x43b462
  43b462:	jmp    0xcc:0xff9584f9
  43b469:	jp     0x43b46a
  43b46b:	add    ah,ah
  43b46d:	add    cl,al
  43b46f:	(bad)  
  43b470:	fdivr  st,st(7)
  43b472:	int    0x51
  43b474:	xchg   ecx,eax
  43b476:	int3   
  43b477:	dec    esp
  43b479:	mov    al,0xff
  43b47b:	int3   
  43b47c:	push   ebx
  43b47d:	add    ah,ah
  43b47f:	push   DWORD PTR [eax+eax*1+0xbc43bda]
  43b486:	int3   
  43b487:	int3   
  43b488:	jmp    FWORD PTR [ecx-0xc40000]
  43b48e:	adc    DWORD PTR es:[ecx-0x2b9bfa77],0xffffffe1
  43b496:	cmp    edi,0xffffffcc
  43b499:	mov    ebp,0x99ff89
  43b49e:	pop    edx
  43b49f:	int3   
  43b4a0:	clc    
  43b4a1:	jmp    FWORD PTR [edx+0x9a9f2a]
  43b4a7:	inc    DWORD PTR [eax]
  43b4a9:	(bad)  
  43b4aa:	inc    DWORD PTR [eax]
  43b4ac:	add    BYTE PTR [ebx+0x1b836d],0xb3
  43b4b3:	leave  
  43b4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43b4b5:	fwait
  43b4b6:	int3   
  43b4b7:	inc    DWORD PTR [ebx-0x2400ff22]
  43b4bd:	(bad)  
  43b4be:	sti    
  43b4bf:	jmp    FWORD PTR [ebx-0x1]
  43b4c2:	les    ebp,FWORD PTR [ebx+0xff097e]
  43b4c8:	jmp    esi
  43b4ca:	add    bh,bh
  43b4cc:	mov    esp,0x4a83edff
  43b4d1:	push   DWORD PTR [ecx-0x3251a2]
  43b4d7:	add    DWORD PTR [eax],0x1f
  43b4da:	inc    DWORD PTR [eax]
  43b4dc:	out    dx,eax
  43b4dd:	add    BYTE PTR [eax+0x11835b00],bh
  43b4e3:	cs jp  0x43b528
  43b4e6:	(bad)  
  43b4e7:	inc    DWORD PTR [eax]
  43b4e9:	mov    ds:0xff29cccc,al
  43b4ee:	or     edi,edi
  43b4f0:	and    eax,DWORD PTR [eax]
  43b4f2:	mov    ah,0x16
  43b4f4:	std    
  43b4f5:	jne    0x43b4f6
  43b4f7:	(bad)  
  43b4f8:	jmp    FWORD PTR [edi]
  43b4fa:	inc    DWORD PTR [eax]
  43b4fc:	ds int3 
  43b4fe:	cmp    edi,0x56bf0097
  43b504:	xchg   ebx,eax
  43b505:	scas   eax,DWORD PTR es:[edi]
  43b506:	add    bh,bh
  43b508:	add    BYTE PTR [eax],ch
  43b50a:	cmp    edi,0xfffffff1
  43b50d:	or     DWORD PTR [ebp+0x0],0x69
  43b511:	add    BYTE PTR [eax+0x30],ch
  43b514:	gs xchg edi,edi
  43b517:	add    DWORD PTR [ebx+0x39ffcc97],0xffffffff
  43b51e:	jbe    0x43b520
  43b520:	(bad)  
  43b522:	xchg   ebp,eax
  43b523:	call   0x7ccc:0xff4d0f
  43b52a:	dec    DWORD PTR [ecx-0xc1009e]
  43b530:	pushf  
  43b531:	call   FWORD PTR [ebx+ebx*1]
  43b534:	and    BYTE PTR [esi+0x0],ch
  43b537:	dec    esp
  43b539:	and    al,0x0
  43b53b:	add    dl,ch
  43b53d:	add    al,dh
  43b53f:	push   edi
  43b541:	jmp    DWORD PTR [ecx+0x4e]
  43b544:	arpl   WORD PTR [ebp-0x1],bx
  43b547:	add    DWORD PTR [eax],0xfffffff3
  43b54a:	(bad)  
  43b54b:	call   FWORD PTR [ebx+eax*4+0x62]
  43b54f:	cmp    DWORD PTR [ecx+ecx*4+0x37],0xffffffd2
  43b554:	fcmove st,st(7)
  43b556:	add    BYTE PTR [eax],al
  43b558:	add    BYTE PTR [eax],dl
  43b55a:	mov    DWORD PTR [ebx+0x15ff67],eax
  43b560:	sbb    edi,edi
  43b562:	xchg   edx,eax
  43b563:	sahf   
  43b564:	in     al,dx
  43b565:	daa    
  43b566:	dec    esp
  43b568:	(bad)  
  43b569:	js     0x43b56b
  43b56b:	(bad)  
  43b56c:	js     0x43b4f7
  43b56e:	jae    0x43b56f
  43b570:	ins    BYTE PTR es:[edi],dx
  43b571:	call   FWORD PTR [eax-0x39f079]
  43b577:	dec    esp
  43b579:	xor    eax,0xba0089
  43b57e:	loope  0x43b57f
  43b580:	pushf  
  43b581:	add    BYTE PTR [ebx-0x7e],bh
  43b584:	jmp    0x43b551
  43b586:	inc    DWORD PTR [ebx-0x7c8801]
  43b58c:	mov    ds:0x93ffd000,eax
  43b591:	call   FWORD PTR [eax]
  43b593:	enter  0x37b1,0xff
  43b597:	add    BYTE PTR [ecx-0x2b000009],cl
  43b59d:	dec    DWORD PTR [ebp-0x1]
  43b5a0:	push   0xffffffff
  43b5a2:	or     eax,0xb65203
  43b5a7:	add    DWORD PTR [eax],0x1c
  43b5aa:	(bad)  
  43b5ab:	jmp    ecx
  43b5ad:	inc    DWORD PTR [ecx+ecx*4-0x4e]
  43b5b1:	add    DWORD PTR [ebx-0xa64fc1],0xffffffff
  43b5b8:	add    BYTE PTR [ebx-0x76653334],dl
  43b5be:	dec    esp
  43b5c0:	mov    DWORD PTR fs:[esp+esi*1],esi
  43b5c4:	sahf   
  43b5c5:	std    
  43b5c6:	inc    DWORD PTR [eax]
  43b5c8:	mov    ecx,edx
  43b5ca:	add    bh,bh
  43b5cc:	jp     0x43b5ce
  43b5ce:	cdq    
  43b5cf:	jmp    ebp
  43b5d1:	int3   
  43b5d2:	outs   dx,DWORD PTR ds:[esi]
  43b5d3:	add    DWORD PTR [ebx],eax
  43b5d5:	daa    
  43b5d6:	add    ah,cl
  43b5d8:	add    ch,ch
  43b5da:	inc    DWORD PTR [ebx-0x90ffaf]
  43b5e0:	in     eax,0xff
  43b5e2:	mov    edi,0x99c351
  43b5e7:	(bad)  
  43b5e8:	jmp    FWORD PTR [eax-0x7c74ff34]
  43b5ee:	pop    ds
  43b5ef:	add    BYTE PTR [ebp-0x77],ah
  43b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43b5f3:	into   
  43b5f4:	loopne 0x43b5e8
  43b5f6:	(bad)  
  43b5f7:	(bad)  
  43b5f8:	call   DWORD PTR [ecx-0x8aff01]
  43b5fe:	push   esi
  43b5ff:	(bad)  
  43b600:	aas    
  43b601:	(bad)  
  43b602:	cmp    ebx,DWORD PTR [eiz*4+0xcc83a3]
  43b609:	aad    0x83
  43b60b:	dec    DWORD PTR [eax]
  43b60d:	add    bl,dh
  43b60f:	push   DWORD PTR [edi+edi*8+0x503e71ba]
  43b616:	add    BYTE PTR [ebx-0x330677],al
  43b61c:	outs   dx,BYTE PTR ds:[esi]
  43b61d:	add    BYTE PTR [eax-0x3c00a701],bh
  43b623:	fsub   DWORD PTR [ebx]
  43b625:	dec    edx
  43b626:	add    BYTE PTR [ecx-0x3300e201],cl
  43b62c:	xchg   ebx,eax
  43b62d:	call   FWORD PTR [eax-0x1cff1300]
  43b633:	stos   DWORD PTR es:[edi],eax
  43b634:	mov    dh,0xc2
  43b636:	inc    DWORD PTR [eax]
  43b638:	(bad)  
  43b639:	in     eax,dx
  43b63a:	dec    esp
  43b63c:	cdq    
  43b63d:	inc    edi
  43b63f:	jmp    DWORD PTR [edx+0x0]
  43b642:	push   ds
  43b643:	sbb    DWORD PTR [edx-0x7600f2],0xffffffd9
  43b64a:	dec    DWORD PTR [ecx-0xda004a]
  43b650:	jo     0x43b651
  43b652:	nop
  43b653:	inc    ebp
  43b654:	shl    DWORD PTR [ebx],1
  43b656:	(bad)  
  43b657:	inc    DWORD PTR [ebx+0x340089b1]
  43b65d:	add    bl,bh
  43b65f:	call   esp
  43b661:	mov    ebx,ebx
  43b663:	dec    esi
  43b664:	out    dx,al
  43b665:	jne    0x43b667
  43b667:	add    BYTE PTR [eax],al
  43b669:	inc    ebx
  43b66a:	int3   
  43b66b:	add    dl,cl
  43b66d:	adc    DWORD PTR [esi+0x13ff6100],0x6f
  43b674:	addr16 inc ecx
  43b676:	add    BYTE PTR [ecx-0x33002b01],cl
  43b67c:	mov    edi,edi
  43b67e:	mov    ecx,0x95ff60ff
  43b683:	xor    ebp,esi
  43b685:	cwde   
  43b686:	inc    DWORD PTR [eax]
  43b688:	add    bl,ch
  43b68a:	add    BYTE PTR [eax],al
  43b68c:	aas    
  43b68d:	(bad)  
  43b68e:	fdivp  st(7),st
  43b690:	cmp    eax,0xb10cddcc
  43b695:	jge    0x43b61a
  43b697:	add    BYTE PTR [eax],al
  43b699:	cmc    
  43b69a:	cmp    edi,0xffffff8f
  43b69d:	add    BYTE PTR [ecx-0x487ca701],cl
  43b6a3:	mov    BYTE PTR [edx],ch
  43b6a5:	lock add bh,bh
  43b6a8:	add    BYTE PTR [edi],bl
  43b6aa:	add    BYTE PTR [ecx-0xc7cae],cl
  43b6b0:	mov    bl,0xff
  43b6b2:	test   BYTE PTR [edx],0x5
  43b6b5:	sbb    bh,bh
  43b6b7:	add    bh,bh
  43b6b9:	dec    esp
  43b6ba:	add    BYTE PTR [eax],al
  43b6bc:	add    bh,bh
  43b6be:	mov    BYTE PTR [eax],al
  43b6c0:	into   
  43b6c1:	add    cl,dl
  43b6c3:	add    eax,0xffff8e7d
  43b6c8:	(bad)  
  43b6c9:	jnp    0x43b6ca
  43b6cb:	add    BYTE PTR [ebp-0x1],ch
  43b6ce:	mov    bl,0xff
  43b6d0:	leave  
  43b6d1:	add    BYTE PTR [ebx+0x58],al
  43b6d4:	mov    dh,0xc6
  43b6d6:	add    BYTE PTR [eax],al
  43b6d8:	add    DWORD PTR [esi-0x1],0x0
  43b6dc:	(bad)  
  43b6dd:	call   DWORD PTR [ecx-0x77]
  43b6e0:	std    
  43b6e1:	push   esp
  43b6e3:	rcr    BYTE PTR ds:0xccff890e,1
  43b6e9:	(bad)  
  43b6ec:	add    bh,bh
  43b6ee:	sub    BYTE PTR [eax],al
  43b6f0:	jae    0x43b6f1
  43b6f2:	mov    esi,eax
  43b6f4:	mov    ebp,esi
  43b6f6:	dec    DWORD PTR [ecx+0xff9389]
  43b6fc:	test   DWORD PTR [ebx-0xe77c5d],0x13b76ad9
  43b706:	int3   
  43b707:	inc    DWORD PTR [eax]
  43b709:	or     eax,0xff6900ff
  43b70e:	scas   al,BYTE PTR es:[edi]
  43b70f:	add    ecx,0xffffff83
  43b712:	ja     0x43b723
  43b714:	add    BYTE PTR [edx],ch
  43b716:	add    bh,bh
  43b718:	call   DWORD PTR [edi-0x76970000]
  43b71e:	int3   
  43b71f:	add    BYTE PTR [eax-0x1],dh
  43b722:	nop
  43b723:	out    0x5e,al
  43b725:	jne    0x43b727
  43b727:	(bad)  
  43b728:	dec    DWORD PTR [esi-0xdb767d]
  43b72e:	adc    bh,bh
  43b730:	sub    bh,bh
  43b732:	sbb    ah,dl
  43b734:	in     al,dx
  43b735:	pop    es
  43b736:	inc    DWORD PTR [eax]
  43b738:	(bad)  
  43b739:	out    dx,eax
  43b73a:	int3   
  43b73b:	int3   
  43b73c:	jne    0x43b73e
  43b73e:	sti    
  43b73f:	jmp    DWORD PTR [ecx]
  43b741:	jmp    FWORD PTR [edx+0xf3640d]
  43b747:	(bad)  
  43b748:	(bad)  
  43b749:	jg     0x43b6d4
  43b74b:	(bad)  
  43b74c:	out    dx,al
  43b74d:	push   edi
  43b74f:	call   FWORD PTR [esi-0x77]
  43b752:	outs   dx,BYTE PTR ds:[esi]
  43b753:	aad    0x15
  43b755:	lock int3 
  43b757:	(bad)  
  43b758:	push   DWORD PTR [esi]
  43b75a:	inc    DWORD PTR [eax]
  43b75c:	xchg   bh,bh
  43b75e:	aad    0xff
  43b760:	add    ecx,DWORD PTR [ecx-0x598f2d2d]
  43b766:	(bad)  
  43b767:	inc    DWORD PTR [ebx-0x5b00ffb0]
  43b76d:	push   DWORD PTR [eax+0x78ff11cc]
  43b773:	xchg   ecx,eax
  43b774:	stos   BYTE PTR es:[edi],al
  43b775:	stos   BYTE PTR es:[edi],al
  43b776:	(bad)  
  43b777:	inc    DWORD PTR [eax]
  43b779:	add    BYTE PTR [eax],0xff
  43b77c:	or     DWORD PTR [ecx+0xa2cc60],0x5237aa7e
  43b786:	add    BYTE PTR [eax],al
  43b788:	(bad)  
  43b789:	jmp    0xffeeb78d
  43b78e:	add    DWORD PTR [ebx+0x6aa6ffa9],0x30
  43b795:	popf   
  43b796:	dec    esp
  43b798:	call   FWORD PTR ds:0xff440000
  43b79e:	stc    
  43b79f:	dec    DWORD PTR [edx]
  43b7a1:	jmp    DWORD PTR [eax+0x5a891c]
  43b7a7:	inc    DWORD PTR [eax]
  43b7a9:	or     ah,0xff
  43b7ac:	and    ecx,DWORD PTR [ecx+0x45ff73]
  43b7b2:	or     al,0x76
  43b7b4:	mov    ah,0x30
  43b7b6:	cmp    edi,0x0
  43b7b9:	inc    BYTE PTR [ebx+0x33836800]
  43b7bf:	jmp    FWORD PTR [edx-0x7d]
  43b7c2:	sub    eax,DWORD PTR [edx]
  43b7c4:	es lahf 
  43b7c6:	int3   
  43b7c7:	inc    DWORD PTR [ebx-0x6700ffa0]
  43b7cd:	call   DWORD PTR [ecx-0x3d761101]
  43b7d3:	sub    BYTE PTR [edx+0x12],ah
  43b7d6:	(bad)  
  43b7d7:	(bad)  
  43b7d8:	inc    DWORD PTR [ebp-0x1]
  43b7db:	jmp    DWORD PTR [esi-0x2a00d500]
  43b7e1:	add    BYTE PTR [eax-0x7cbb1642],dl
  43b7e7:	dec    DWORD PTR [ecx+0x18ff0022]
  43b7ed:	call   DWORD PTR [edi-0x1]
  43b7f0:	leave  
  43b7f1:	call   DWORD PTR [edi-0x22]
  43b7f4:	xchg   esi,eax
  43b7f5:	mov    dl,0xff
  43b7f7:	int3   
  43b7f8:	jmp    DWORD PTR [eax]
  43b7fa:	(bad)  
  43b7fb:	jmp    FWORD PTR [edx]
  43b7fd:	push   DWORD PTR [ebp+0x0]
  43b800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43b801:	add    cl,bh
  43b803:	aam    0x1a
  43b805:	inc    ebx
  43b806:	add    DWORD PTR [ebx-0x337c2501],0xf
  43b80d:	add    BYTE PTR [eax+eax*1-0x5e],dh
  43b811:	call   FWORD PTR [edx-0x8]
  43b814:	push   es
  43b815:	sub    bh,bh
  43b817:	inc    DWORD PTR [eax]
  43b819:	and    bh,bh
  43b81b:	add    BYTE PTR [ecx-0x6800f200],bh
  43b821:	add    BYTE PTR [ebx-0x73],dh
  43b824:	jnp    0x43b865
  43b826:	(bad)  
  43b827:	inc    DWORD PTR [eax]
  43b829:	jo     0x43b82b
  43b82b:	mov    ebx,edx
  43b82d:	call   FWORD PTR [esi+0x0]
  43b830:	adc    eax,0xbc8b5c83
  43b835:	xor    DWORD PTR [ecx-0x5d0100],ecx
  43b83b:	push   DWORD PTR [edx]
  43b83d:	call   FWORD PTR [esi+0x3effe3cc]
  43b843:	sub    ebx,DWORD PTR [ebx-0x7a]
  43b849:	ds mov edi,edi
  43b84c:	ret    0x8200
  43b84f:	add    BYTE PTR ds:0xfe3fe8ff,al
  43b855:	jne    0x43b857
  43b857:	cmp    edi,0xfffffff9
  43b85a:	add    bh,bh
  43b85c:	fadd   DWORD PTR [eax]
  43b85e:	aaa    
  43b85f:	add    BYTE PTR [esi],ah
  43b861:	dec    DWORD PTR [esp+ecx*4+0x417]
  43b868:	dec    DWORD PTR [edi+edi*8+0x73ff6800]
  43b86f:	add    BYTE PTR ds:0xae2b1d89,ah
  43b875:	push   ecx
  43b876:	add    DWORD PTR [ebx-0x767c4301],0xffffffb0
  43b87d:	add    BYTE PTR [ebx+0x2a0091ff],dl
  43b883:	pop    esi
  43b884:	inc    ebp
  43b885:	dec    ebx
  43b886:	cmp    edi,0xffffffff
  43b889:	xlat   BYTE PTR ds:[ebx]
  43b88a:	add    DWORD PTR [ebx-0xa67c9f],0xfffffff8
  43b891:	jmp    DWORD PTR [ebx+0x12]
  43b894:	mov    esi,0xffff007d
  43b899:	cwde   
  43b89a:	add    BYTE PTR [ecx-0x46ff21],cl
  43b8a0:	mov    ah,0xff
  43b8a2:	in     eax,dx
  43b8a3:	cmp    DWORD PTR [eax+0xff00e5],ebx
  43b8a9:	fld    QWORD PTR [eax]
  43b8ab:	add    dh,ch
  43b8ad:	and    DWORD PTR [ebx-0x5b333300],0x1d
  43b8b4:	push   eax
  43b8b5:	mov    al,BYTE PTR [eax]
  43b8b7:	(bad)  
  43b8b8:	call   DWORD PTR [esi+0x0]
  43b8bb:	jmp    DWORD PTR [edi-0x5aff8500]
  43b8c1:	add    bh,cl
  43b8c3:	inc    esp
  43b8c4:	mov    eax,ds:0xff66
  43b8c9:	cld    
  43b8ca:	add    DWORD PTR [ebx-0x330fff5c],0x7c
  43b8d1:	call   DWORD PTR [eax]
  43b8d3:	les    ebx,FWORD PTR [ecx]
  43b8d5:	fdivr  st,st(7)
  43b8d7:	add    bh,bh
  43b8d9:	push   0xffffffff
  43b8db:	(bad)  
  43b8dc:	jg     0x43b8dd
  43b8de:	jmp    FWORD PTR ds:[esi+0x111f9e00]
  43b8e5:	fadd   DWORD PTR [eax]
  43b8e7:	add    DWORD PTR [ebx+0x1500ffe5],0xffffffff
  43b8ee:	inc    ebx
  43b8ef:	add    BYTE PTR [eax+0x7d2941ff],cl
  43b8f5:	test   al,0xcc
  43b8f7:	add    bh,bh
  43b8f9:	ss cmp edi,0xffffff9f
  43b8fd:	add    BYTE PTR [ecx-0x1],dl
  43b900:	sbb    al,0xff
  43b902:	mov    DWORD PTR [ebx],ebp
  43b904:	sub    BYTE PTR [esi],ch
  43b906:	add    bh,bh
  43b908:	dec    DWORD PTR [eax+0x7ffff]
  43b90e:	mov    al,ds:0xdff9600
  43b913:	ja     0x43b8a0
  43b915:	add    eax,0x77ccff00
  43b91a:	cmp    edi,0xffffff9e
  43b91d:	jmp    edi
  43b91f:	int3   
  43b920:	out    dx,al
  43b921:	add    ch,ah
  43b923:	shl    DWORD PTR [esi],cl
  43b925:	and    cl,BYTE PTR [ecx+0xf883ff]
  43b92b:	jmp    FWORD PTR [edx+0x60003ff]
  43b931:	inc    DWORD PTR [edi+0x27]
  43b934:	nop
  43b935:	pop    ebp
  43b936:	add    bh,bh
  43b938:	add    edx,0x0
  43b93b:	jmp    DWORD PTR [esp+ecx*8+0x46ccb2]
  43b942:	clc    
  43b943:	rcl    BYTE PTR [edx],0x77
  43b946:	add    DWORD PTR [eax],0xffffffcc
  43b949:	popf   
  43b94a:	add    BYTE PTR [eax],al
  43b94c:	pop    ebp
  43b94d:	jmp    FWORD PTR [edx+0x2fff60ff]
  43b953:	out    dx,al
  43b954:	push   eax
  43b955:	(bad)  
  43b958:	inc    DWORD PTR [edi]
  43b95a:	add    bh,bh
  43b95c:	dec    esp
  43b95d:	inc    DWORD PTR [esi-0x7100c701]
  43b963:	adc    eax,0xff10ee
  43b968:	jmp    DWORD PTR [edx-0x77c01]
  43b96e:	and    bh,bh
  43b970:	rol    DWORD PTR [ebx+0x3af063dd],0xff
  43b977:	inc    DWORD PTR [eax]
  43b979:	inc    ebp
  43b97a:	add    DWORD PTR [ebx-0x957ce8],0x5f
  43b981:	int3   
  43b982:	sub    eax,0xcc772f0e
  43b987:	(bad)  
  43b988:	(bad)  
  43b989:	jns    0x43b98b
  43b98b:	int3   
  43b98c:	aad    0xff
  43b98e:	cli    
  43b98f:	jmp    DWORD PTR ds:0x778f06ff
  43b995:	xor    bh,bh
  43b997:	(bad)  
  43b998:	call   DWORD PTR [edx]
  43b99a:	add    bh,bh
  43b99c:	leave  
  43b99d:	(bad)  
  43b99e:	aas    
  43b99f:	add    BYTE PTR [edi-0x1],cl
  43b9a2:	xchg   DWORD PTR [edi],edx
  43b9a4:	sbb    DWORD PTR [edi+edi*8],ebp
  43b9a7:	add    bh,bh
  43b9a9:	repz (bad) 
  43b9ab:	inc    DWORD PTR [esp+ecx*8-0x33b70002]
  43b9b2:	ins    DWORD PTR es:[edi],dx
  43b9b3:	pop    esi
  43b9b4:	sbb    ah,dl
  43b9b6:	add    bh,bh
  43b9b8:	mov    DWORD PTR [ecx],esp
  43b9ba:	inc    DWORD PTR [eax]
  43b9bc:	(bad)  
  43b9be:	aas    
  43b9bf:	jmp    DWORD PTR [esi+0x0]
  43b9c2:	xor    bl,BYTE PTR [edi+ecx*2-0x3331]
  43b9c9:	(bad)  
  43b9ca:	inc    DWORD PTR [eax]
  43b9cc:	jno    0x43b9ce
  43b9ce:	and    al,0x83
  43b9d0:	sub    eax,0x3c92d2ff
  43b9d5:	cs int3 
  43b9d7:	int3   
  43b9d8:	int3   
  43b9d9:	push   ecx
  43b9da:	mov    edi,edi
  43b9dc:	into   
  43b9dd:	or     DWORD PTR [edi+0x3cff16ff],0x22
  43b9e4:	scas   al,BYTE PTR es:[edi]
  43b9e5:	stc    
  43b9e6:	dec    esp
  43b9e8:	(bad)  
  43b9e9:	inc    DWORD PTR [ebx-0x6b00c001]
  43b9ef:	jmp    esp
  43b9f1:	add    al,dl
  43b9f3:	pop    esi
  43b9f4:	push   ss
  43b9f5:	lods   eax,DWORD PTR ds:[esi]
  43b9f6:	inc    DWORD PTR [ebx-0x4000]
  43b9fc:	xchg   ecx,eax
  43b9fd:	mov    DWORD PTR [edi],ecx
  43b9ff:	push   ecx
  43ba01:	jmp    FWORD PTR [edx-0xc7356d]
  43ba07:	or     DWORD PTR [ecx-0x27c3379],0xffffffff
  43ba0e:	cld    
  43ba0f:	or     DWORD PTR [ebx+eax*4],0x5c
  43ba13:	bound  eax,QWORD PTR [edx]
  43ba15:	imul   edi,edi,0x7bcc83
  43ba1b:	dec    DWORD PTR [eax-0x1]
  43ba1e:	mov    al,ds:0xa0ff2000
  43ba23:	mov    ch,0xf1
  43ba25:	push   ebx
  43ba26:	inc    DWORD PTR [ebx-0xfff77d]
  43ba2c:	les    eax,FWORD PTR [ebx-0xb100d5]
  43ba32:	dec    esp
  43ba33:	pop    edx
  43ba34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43ba35:	lahf   
  43ba36:	(bad)  
  43ba37:	(bad)  
  43ba38:	dec    DWORD PTR [edx+0xd2ffff]
  43ba3e:	jb     0x43b9c3
  43ba40:	retf   
  43ba41:	add    BYTE PTR [edx],ah
  43ba43:	jno    0x43ba09
  43ba45:	sbb    DWORD PTR [eax],eax
  43ba47:	(bad)  
  43ba48:	push   esp
  43ba4a:	int3   
  43ba4b:	call   DWORD PTR [ecx-0x1]
  43ba4e:	adc    cl,ah
  43ba50:	xchg   ebp,eax
  43ba51:	int3   
  43ba52:	pusha  
  43ba53:	xchg   esp,eax
  43ba54:	xchg   bl,dh
  43ba56:	(bad)  
  43ba57:	(bad)  
  43ba58:	inc    DWORD PTR [esi-0x1]
  43ba5b:	mov    DWORD PTR [ebx],edi
  43ba5d:	add    BYTE PTR [ebp+0x55830e00],ch
  43ba63:	ss pop edi
  43ba65:	icebp  
  43ba66:	add    BYTE PTR [eax],al
  43ba68:	push   DWORD PTR [ebp-0x3f0100]
  43ba6e:	aam    0x89
  43ba70:	inc    DWORD PTR [bx+si]
  43ba73:	and    eax,DWORD PTR [edi-0xff7623]
  43ba79:	pop    ds
  43ba7a:	inc    DWORD PTR [eax]
  43ba7c:	jl     0x43ba7d
  43ba7e:	clc    
  43ba7f:	call   FWORD PTR [edx-0x1]
  43ba82:	in     eax,dx
  43ba83:	iret   
  43ba84:	test   al,0xec
  43ba86:	add    BYTE PTR [ebx-0x3376d301],al
  43ba8c:	dec    edi
  43ba8d:	int3   
  43ba8e:	bound  eax,QWORD PTR [eax]
  43ba90:	dec    ecx
  43ba91:	adc    esi,0xffffffd7
  43ba94:	pop    edx
  43ba95:	dec    ecx
  43ba96:	dec    esp
  43ba98:	inc    DWORD PTR [edx-0x7d]
  43ba9b:	(bad)  
  43ba9c:	call   0xb5c6e7a1
  43baa1:	xor    DWORD PTR [esi-0x62],0x78
  43baa5:	ja     0x43ba73
  43baa7:	add    BYTE PTR [ebx-0x790000f9],al
  43baad:	add    bh,dl
  43baaf:	add    DWORD PTR ds:0x4542e1ff,0xffffffdd
  43bab6:	cmp    edi,0x0
  43bab9:	mov    esi,0x8700ff
  43babe:	pop    ebp
  43babf:	sub    DWORD PTR [esi-0x4ae63d00],0x32
  43bac6:	inc    DWORD PTR [eax]
  43bac8:	xor    DWORD PTR ds:0xf389ff,0xffffffcf
  43bacf:	add    BYTE PTR [edi+0x5beb0fff],dl
  43bad5:	nop
  43bad6:	cmp    edi,0xffffffff
  43bad9:	mov    ebx,0xffc2cc00
  43bade:	leave  
  43badf:	jmp    FWORD PTR [eax-0x7d]
  43bae2:	inc    edx
  43bae3:	xchg   ebx,eax
  43bae4:	scas   eax,DWORD PTR es:[edi]
  43bae5:	mov    al,ds:0x5b83ff00
  43baea:	add    bh,bh
  43baec:	clc    
  43baed:	and    DWORD PTR [edx],0xffffffff
  43baf0:	mov    edi,0xfc964dff
  43baf5:	hlt    
  43baf6:	(bad)  
  43baf7:	inc    DWORD PTR [eax]
  43baf9:	std    
  43bafa:	(bad)  
  43bafb:	push   DWORD PTR [ecx]
  43bafd:	int3   
  43bafe:	mov    eax,ds:0x200020ff
  43bb03:	cmc    
  43bb04:	je     0x43bb5f
  43bb06:	int3   
  43bb07:	int3   
  43bb08:	push   ebp
  43bb0a:	add    DWORD PTR [eax],0xfffffff9
  43bb0d:	add    BYTE PTR [ebx-0x60763d01],cl
  43bb13:	retf   
  43bb14:	mov    ebx,0xff00897d
  43bb19:	data16 (bad) 
  43bb1b:	inc    DWORD PTR [edx-0x1]
  43bb1e:	sbb    bh,bh
  43bb20:	mov    ah,0xff
  43bb22:	arpl   WORD PTR [esi+0xba77],sp
  43bb28:	sbb    DWORD PTR [ecx-0x7d],0xffffffff
  43bb2c:	xor    eax,0xfbffff00
  43bb31:	add    BYTE PTR [esi],al
  43bb33:	data16 (bad) 
  43bb35:	cmp    eax,DWORD PTR [eax]
  43bb37:	inc    DWORD PTR [eax]
  43bb39:	push   cs
  43bb3a:	dec    esp
  43bb3c:	stc    
  43bb3d:	dec    edx
  43bb3f:	mov    DWORD PTR [eax+eax*1-0x24],ebx
  43bb43:	sub    eax,0x83899855
  43bb48:	add    cl,cl
  43bb4a:	inc    DWORD PTR [ebx-0x7c8dff3f]
  43bb50:	outs   dx,BYTE PTR ds:[esi]
  43bb51:	jmp    FWORD PTR [eax+0x9c48ba]
  43bb57:	inc    DWORD PTR [ebx-0x13007c66]
  43bb5d:	adc    DWORD PTR [eax+0x0],0x38
  43bb61:	call   edx
  43bb63:	mov    ebx,0xffff2490
  43bb68:	add    BYTE PTR [esi],cl
  43bb6a:	dec    DWORD PTR [ecx-0xe30036]
  43bb70:	add    BYTE PTR gs:[edx-0xdb1c2f],bl
  43bb77:	add    DWORD PTR [eax],0xffffffc6
  43bb7a:	inc    DWORD PTR [eax]
  43bb7c:	mov    BYTE PTR [ecx+0xf3ff56],cl
  43bb82:	test   al,0x82
  43bb84:	adc    BYTE PTR [ecx+0x0],0xff
  43bb88:	cmp    DWORD PTR [esi-0x700077],0x57
  43bb8f:	add    BYTE PTR [edx-0x7d],ah
  43bb92:	es out 0xa5,al
  43bb95:	mov    eax,0xd8cc8900
  43bb9a:	add    BYTE PTR [eax],al
  43bb9c:	fild   WORD PTR [eax]
  43bb9e:	mov    BYTE PTR [eax],al
  43bba0:	pusha  
  43bba1:	inc    edx
  43bba3:	pop    edi
  43bba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43bba5:	mov    BYTE PTR [eax],0xff
  43bba8:	(bad)  
  43bba9:	cli    
  43bbaa:	add    BYTE PTR [ebx-0x10001],al
  43bbb0:	mov    edi,edi
  43bbb2:	mov    ebx,0xcc45a58c
  43bbb7:	inc    DWORD PTR [ebx-0x6c00001d]
  43bbbd:	mov    DWORD PTR [eax-0x4e7cc700],ecx
  43bbc3:	nop
  43bbc4:	push   ebx
  43bbc5:	adc    DWORD PTR [ecx-0xc30100],ecx
  43bbcb:	add    BYTE PTR [ebp-0x7d],ch
  43bbce:	sbb    al,0x0
  43bbd0:	or     al,0x83
  43bbd2:	and    BYTE PTR [edi],0x52
  43bbd5:	jge    0x43bbd6
  43bbd7:	(bad)  
  43bbd8:	(bad)  
  43bbd9:	mov    edi,0xffecccff
  43bbde:	into   
  43bbdf:	add    BYTE PTR [edi],ch
  43bbe1:	mov    DWORD PTR [ebx-0x43],eax
  43bbe4:	sahf   
  43bbe5:	xor    eax,0xfeff83ff
  43bbea:	add    bh,bh
  43bbec:	cmp    cl,BYTE PTR [ecx-0x7678ff10]
  43bbf2:	out    0x2d,eax
  43bbf4:	jle    0x43bbb9
  43bbf6:	add    BYTE PTR [eax],al
  43bbf8:	add    ch,dh
  43bbfa:	inc    DWORD PTR [eax]
  43bbfc:	sub    edi,edi
  43bbfe:	push   edi
  43bbff:	xor    DWORD PTR [edi+edi*8+0xe96b6b2],0xffffffff
  43bc07:	add    bh,bh
  43bc09:	aaa    
  43bc0a:	add    BYTE PTR [ebx-0x7c347ca0],al
  43bc10:	jecxz  0x43bc11
  43bc12:	sub    al,0x7e
  43bc14:	mov    ch,0xf0
  43bc16:	add    DWORD PTR [eax],0xffffff83
  43bc19:	fisttp DWORD PTR [ecx-0x37007d34]
  43bc1f:	dec    DWORD PTR [edx]
  43bc21:	mov    DWORD PTR [ecx],ecx
  43bc23:	out    0xce,al
  43bc25:	mov    ebx,0x3ff89ff
  43bc2a:	(bad)  
  43bc2b:	jmp    FWORD PTR [edx+0x2897b00]
  43bc31:	add    BYTE PTR [eax-0x22],bh
  43bc34:	adc    DWORD PTR [edi+edi*8],edx
  43bc37:	(bad)  
  43bc38:	jmp    FWORD PTR [ebp-0x1]
  43bc3b:	add    ah,al
  43bc3d:	mov    esp,ebp
  43bc3f:	add    BYTE PTR [ebp-0x772b9c77],bh
  43bc45:	push   0x0
  43bc47:	add    bh,bh
  43bc49:	sub    eax,DWORD PTR [ebx+0xc832f83]
  43bc4f:	add    BYTE PTR ds:0x2bff26ff,ah
  43bc55:	mov    DWORD PTR [eax],0x4eff00
  43bc5b:	call   FWORD PTR [esi]
  43bc5d:	add    BYTE PTR [edx+0x77003b00],dl
  43bc63:	pusha  
  43bc64:	push   eax
  43bc65:	sbb    bh,bh
  43bc67:	add    BYTE PTR [eax],al
  43bc69:	idiv   bh
  43bc6b:	jmp    DWORD PTR [edi-0x47c2900]
  43bc71:	(bad)  
  43bc72:	fadd   DWORD PTR [eax+edi*4+0x57]
  43bc76:	add    BYTE PTR [eax],al
  43bc78:	add    BYTE PTR [ebx+0x0],cl
  43bc7b:	sub    DWORD PTR [eax+eax*1+0x89cce6],0x5e
  43bc83:	cmp    DWORD PTR [eax],edx
  43bc85:	sub    eax,DWORD PTR [ebx-0x607c01]
  43bc8b:	dec    edi
  43bc8d:	(bad)  
  43bc8e:	js     0x43bc8f
  43bc90:	and    eax,0x3b4210cc
  43bc95:	mov    BYTE PTR [eax],0x0
  43bc98:	add    BYTE PTR [ecx+0x0],ch
  43bc9b:	(bad)  
  43bc9c:	in     al,dx
  43bc9d:	mov    ebp,esp
  43bc9f:	(bad)  
  43bca0:	jp     0x43bc25
  43bca2:	xchg   ecx,eax
  43bca3:	add    DWORD PTR [ebx+0x3],ecx
  43bca6:	add    BYTE PTR [ebx-0x6c77],al
  43bcac:	adc    eax,0xb200d8ff
  43bcb1:	call   FWORD PTR [edx-0x9]
  43bcb4:	lock imul eax,DWORD PTR [eax],0x0
  43bcb8:	jmp    FWORD PTR [ecx]
  43bcba:	cmp    edi,0xffffff9d
  43bcbd:	mov    ebp,esp
  43bcbf:	call   FWORD PTR [ecx+0x0]
  43bcc2:	enter  0x6c70,0x44
  43bcc6:	add    BYTE PTR [ebx-0xffc600],al
  43bccc:	call   FWORD PTR cs:[ecx]
  43bccf:	push   DWORD PTR [ebp-0x1]
  43bcd2:	inc    ebx
  43bcd3:	into   
  43bcd4:	xchg   ebx,eax
  43bcd5:	inc    esp
  43bcd6:	add    BYTE PTR [eax],al
  43bcd8:	cmp    DWORD PTR [esi+0x0],0xffffffff
  43bcdc:	(bad)  
  43bcdd:	(bad)  
  43bcde:	cmp    eax,0x80cca200
  43bce3:	scas   eax,DWORD PTR es:[edi]
  43bce4:	xchg   ecx,eax
  43bce5:	push   ecx
  43bce6:	dec    esp
  43bce8:	push   DWORD PTR [edi+edi*8]
  43bceb:	add    DWORD PTR [edi],0x0
  43bcee:	cmp    al,0xff
  43bcf0:	or     eax,DWORD PTR [eax]
  43bcf2:	push   edi
  43bcf3:	lods   eax,DWORD PTR ds:[esi]
  43bcf4:	push   ecx
  43bcf5:	add    BYTE PTR [eax],al
  43bcf7:	cmp    edi,0xffffff96
  43bcfa:	inc    DWORD PTR [eax]
  43bcfc:	leave  
  43bcfd:	push   DWORD PTR [ecx+0x0]
  43bd00:	xchg   edi,eax
  43bd01:	add    BYTE PTR [eax-0x78],bl
  43bd04:	mov    bl,0x2f
  43bd06:	(bad)  
  43bd07:	(bad)  
  43bd08:	inc    DWORD PTR [eax-0x1]
  43bd0b:	or     esp,0xffffff83
  43bd0e:	mov    edi,0x48ffa783
  43bd13:	dec    edi
  43bd14:	sub    DWORD PTR [edx-0x7d],ecx
  43bd17:	(bad)  
  43bd18:	(bad)  
  43bd19:	in     al,dx
  43bd1a:	mov    DWORD PTR [ebx-0x330eff51],eax
  43bd20:	fdivp  st(7),st
  43bd22:	sbb    DWORD PTR [ecx-0x336af3],ebx
  43bd28:	mov    ebp,ecx
  43bd2a:	cmp    edi,0x1c
  43bd2d:	(bad)  
  43bd2e:	dec    DWORD PTR [ecx+0x7a37ff15]
  43bd34:	jmp    0x833c:0x8983cc1d
  43bd3b:	(bad)  
  43bd3c:	jl     0x43bcc7
  43bd3e:	mov    dl,0xff
  43bd40:	inc    edi
  43bd41:	mov    DWORD PTR [edx],esi
  43bd43:	push   ecx
  43bd44:	iret   
  43bd45:	mov    eax,ds:0xa400ff83
  43bd4a:	mov    edi,edi
  43bd4c:	retf   0x85ff
  43bd4f:	add    BYTE PTR [eax],ch
  43bd51:	cmp    DWORD PTR [ebp-0xc80cf1],0x0
  43bd58:	add    bh,cl
  43bd5a:	inc    DWORD PTR [eax]
  43bd5c:	inc    eax
  43bd5d:	or     DWORD PTR [edi],0xffffffff
  43bd60:	cmp    bh,bh
  43bd62:	stos   BYTE PTR es:[edi],al
  43bd63:	cmc    
  43bd64:	xchg   ecx,eax
  43bd65:	inc    esp
  43bd66:	mov    esp,ecx
  43bd68:	dec    DWORD PTR [eax-0x287d00]
  43bd6e:	jle    0x43bd6f
  43bd70:	data16 add BYTE PTR [ebx-0xed3448],al
  43bd77:	int3   
  43bd78:	add    BYTE PTR [edi],cl
  43bd7a:	inc    DWORD PTR [ebx-0x7ceb001c]
  43bd80:	add    al,BYTE PTR [ebx+0x6263b1c3]
  43bd86:	inc    DWORD PTR [eax]
  43bd88:	cmp    edi,0xffffff83
  43bd8b:	add    BYTE PTR [ebx],al
  43bd8d:	call   DWORD PTR [esp+ecx*8-0x5213ff2d]
  43bd94:	inc    esp
  43bd95:	js     0x43bd63
  43bd97:	(bad)  
  43bd98:	(bad)  
  43bd99:	(bad)  
  43bd9b:	mov    DWORD PTR [ecx],esi
  43bd9d:	dec    DWORD PTR [edx]
  43bd9f:	sub    ecx,0xffffffff
  43bda2:	jo     0x43bd43
  43bda4:	test   DWORD PTR [esp+ecx*8],0xffe80083
  43bdab:	jmp    DWORD PTR ds:0xe8ccf4ff
  43bdb1:	(bad)  
  43bdb2:	sti    
  43bdb3:	mov    dl,0xdc
  43bdb5:	test   bh,bh
  43bdb7:	mov    edi,edi
  43bdb9:	xor    BYTE PTR [eax],al
  43bdbb:	add    cl,bh
  43bdbd:	int3   
  43bdbe:	sub    al,0xff
  43bdc0:	repz add BYTE PTR [ecx-0x46],dl
  43bdc4:	pushf  
  43bdc5:	cmp    edi,0xaaccff
  43bdcb:	add    bh,ah
  43bdcd:	add    BYTE PTR [ebx],bh
  43bdcf:	add    ah,cl
  43bdd1:	add    BYTE PTR [ecx],bl
  43bdd3:	test   DWORD PTR [eax],edx
  43bdd5:	leave  
  43bdd6:	mov    edi,edi
  43bdd8:	add    dh,cl
  43bdda:	mov    edi,edi
  43bddc:	sub    bh,bh
  43bdde:	icebp  
  43bddf:	int3   
  43bde0:	mov    ecx,0x4ae5d1ff
  43bde5:	inc    DWORD PTR gs:[ebx-0x337901]
  43bdec:	jmp    0x884360f1
  43bdf1:	dec    ebp
  43bdf3:	sti    
  43bdf4:	xor    al,0xc
  43bdf6:	inc    DWORD PTR [ebx-0xc400]
  43bdfc:	mov    ds:0x71009883,eax
  43be01:	(bad)  
  43be02:	cmp    eax,DWORD PTR [esi-0x7c7c9276]
  43be08:	(bad)  
  43be09:	cmp    eax,0xff070000
  43be0e:	pusha  
  43be0f:	add    BYTE PTR [ecx-0x8e5e677],ah
  43be15:	pop    DWORD PTR [ebx-0x7c6e0100]
  43be1b:	add    bl,dl
  43be1d:	add    BYTE PTR [ebx+0x18839700],dl
  43be23:	cmp    eax,0x2b43
  43be28:	add    BYTE PTR [ebp-0xea0001],bl
  43be2e:	rol    DWORD PTR [eax],0x29
  43be31:	int3   
  43be32:	sub    dh,al
  43be34:	sub    ch,BYTE PTR [edx-0x2800ff7d]
  43be3a:	(bad)  
  43be3b:	(bad)  
  43be3c:	dec    BYTE PTR [ecx-0x8bff7d]
  43be42:	out    0xde,al
  43be44:	ds and edi,edi
  43be47:	inc    DWORD PTR [eax]
  43be49:	sub    DWORD PTR [eax],eax
  43be4b:	int3   
  43be4c:	push   ecx
  43be4d:	(bad)  
  43be4e:	fdivr  st,st(7)
  43be50:	nop
  43be51:	inc    edx
  43be53:	ss cmp eax,0xffffffc2
  43be59:	sbb    eax,0xff4effff
  43be5e:	dec    ebp
  43be5f:	call   FWORD PTR [edi+edi*8+0x1781ad4]
  43be66:	(bad)  
  43be67:	dec    esp
  43be69:	rol    BYTE PTR [eax],cl
  43be6b:	xor    DWORD PTR [eax-0x73008e00],0xffffff83
  43be72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43be73:	xor    dh,BYTE PTR [ecx-0x6a]
  43be76:	mov    DWORD PTR [eax],eax
  43be78:	add    BYTE PTR [edx-0x33ea7d00],ch
  43be7e:	inc    ecx
  43be7f:	(bad)  
  43be80:	sti    
  43be81:	(bad)  
  43be82:	fistp  DWORD PTR [edx]
  43be84:	adc    eax,0xff898991
  43be89:	outs   dx,DWORD PTR ds:[esi]
  43be8a:	(bad)  
  43be8b:	jmp    FWORD PTR [edi-0x7d]
  43be8e:	clc    
  43be8f:	call   DWORD PTR [ebp-0x1]
  43be92:	pop    esp
  43be93:	pop    ebx
  43be94:	rep lods al,BYTE PTR ds:[esi]
  43be96:	cmp    edi,0xffffffff
  43be99:	das    
  43be9a:	cmp    edi,0xffffffd5
  43be9d:	add    BYTE PTR [edx-0x3f761301],dh
  43bea3:	mov    dh,0xdb
  43bea5:	enter  0xff,0x83
  43bea9:	jecxz  0x43beaa
  43beab:	call   FWORD PTR [esi-0x1]
  43beae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43beaf:	dec    DWORD PTR [edi]
  43beb1:	call   FWORD PTR [ecx+esi*4-0x24]
  43beb5:	push   0xffffffff
  43beb7:	add    BYTE PTR [eax],al
  43beb9:	or     edi,edi
  43bebb:	push   DWORD PTR [eax]
  43bebd:	or     DWORD PTR [eax-0x18ff6401],0xffffffd3
  43bec4:	dec    eax
  43bec5:	add    eax,DWORD PTR [eax]
  43bec7:	inc    DWORD PTR [ebx+0xbccffca]
  43becd:	add    ah,bl
  43becf:	add    BYTE PTR [edx-0x5b251401],ah
  43bed5:	cdq    
  43bed6:	int3   
  43bed7:	int3   
  43bed8:	dec    DWORD PTR [ebp-0x48007d]
  43bede:	adc    al,0x0
  43bee0:	xchg   esi,eax
  43bee1:	dec    DWORD PTR ds:0xe9e85e
  43bee7:	int3   
  43bee8:	add    BYTE PTR [edx+0x0],bh
  43beeb:	or     DWORD PTR ds:0x39ff7f83,0x0
  43bef2:	jecxz  0x43bebf
  43bef4:	shrd   DWORD PTR [ebx-0xd67601],eax,cl
  43befb:	add    BYTE PTR [edx+0x0],cl
  43befe:	mov    edi,0x5dff3c00
  43bf03:	xchg   ebp,eax
  43bf04:	arpl   dx,si
  43bf06:	(bad)  
  43bf07:	inc    DWORD PTR [eax]
  43bf09:	aad    0x0
  43bf0b:	sub    DWORD PTR [eax-0x6c763a7d],0x0
  43bf12:	in     al,dx
  43bf13:	loopne 0x43beb8
  43bf15:	fwait
  43bf16:	(bad)  
  43bf17:	dec    DWORD PTR [ecx-0x1b007c6d]
  43bf1d:	add    BYTE PTR [ebx-0x74ff0d00],dl
  43bf23:	sub    eax,0xcc00806c
  43bf28:	call   FWORD PTR [edx-0xc83400]
  43bf2e:	jmp    0x1344bf32
  43bf33:	sbb    BYTE PTR [ebx-0x7cffdd64],al
  43bf39:	int3   
  43bf3a:	imul   ebx,eax,0xff87eb89
  43bf40:	(bad)  
  43bf41:	(bad)  
  43bf42:	jg     0x43bee3
  43bf44:	add    BYTE PTR [ecx],ch
  43bf46:	add    BYTE PTR gs:[eax],al
  43bf49:	add    DWORD PTR [ebx+0x435e0020],0xffffffcc
  43bf50:	add    BYTE PTR [ebx-0x17009ed6],al
  43bf56:	mov    bl,0x0
  43bf58:	add    DWORD PTR [eax],0xfffffffa
  43bf5b:	nop
  43bf5c:	xor    eax,0xffffffe4
  43bf5f:	int3   
  43bf60:	(bad)  
  43bf61:	call   FWORD PTR [eax]
  43bf63:	les    eax,FWORD PTR [ebx-0x7c9711]
  43bf69:	add    BYTE PTR [eax],bl
  43bf6b:	test   BYTE PTR [eax],0xa3
  43bf6e:	rol    DWORD PTR [eax],0x83
  43bf71:	(bad)  
  43bf72:	jle    0x43bf64
  43bf74:	mov    DWORD PTR [ebx-0x71],eax
  43bf77:	add    BYTE PTR [eax],al
  43bf79:	add    BYTE PTR [ecx-0x200d7cc1],bl
  43bf7f:	inc    DWORD PTR [eax]
  43bf81:	dec    DWORD PTR [edi-0x742e7639]
  43bf87:	inc    DWORD PTR [eax]
  43bf89:	push   DWORD PTR [edx+ebx*8-0x278701]
  43bf90:	(bad)  
  43bf91:	(bad)  
  43bf92:	mov    esp,0x4cdaffef
  43bf97:	inc    DWORD PTR [ebx-0x87e100]
  43bf9d:	test   eax,0x89ffff54
  43bfa2:	(bad)  
  43bfa3:	sar    edi,1
  43bfa5:	dec    esp
  43bfa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43bfa7:	add    BYTE PTR [ebx-0x33e101],al
  43bfad:	mov    edx,0xffcca1
  43bfb2:	sbb    ch,BYTE PTR [ebx-0x77]
  43bfb5:	jmp    0x18c3:0x74
  43bfbc:	add    BYTE PTR [edi],al
  43bfbe:	stos   BYTE PTR es:[edi],al
  43bfbf:	add    BYTE PTR [eax],al
  43bfc1:	xor    DWORD PTR [ebx+0x1d],0x0
  43bfc5:	lock outs dx,BYTE PTR ds:[esi]
  43bfc7:	add    ah,cl
  43bfc9:	int3   
  43bfca:	inc    ecx
  43bfcb:	sbb    eax,0xa3da00
  43bfd0:	(bad)  
  43bfd1:	jmp    FWORD PTR [edx+0x57]
  43bfd4:	add    BYTE PTR [edi],ch
  43bfd6:	pop    es
  43bfd7:	mov    edi,edi
  43bfd9:	dec    DWORD PTR [ecx-0x7fe80018]
  43bfdf:	dec    DWORD PTR [ecx-0x3e8001]
  43bfe5:	mov    bh,0x40
  43bfe7:	inc    DWORD PTR [eax]
  43bfe9:	dec    edi
  43bfeb:	retf   0x3700
  43bfee:	into   
  43bfef:	(bad)  
  43bff0:	(bad)  
  43bff1:	dec    DWORD PTR [ebp+0x590affd5]
  43bff7:	inc    DWORD PTR [eax]
  43bff9:	jmp    FWORD PTR [edi-0x7176762d]
  43bfff:	int3   
  43c000:	inc    DWORD PTR [eax]
  43c002:	cmc    
  43c003:	sub    eax,0xdcb3ff
  43c008:	(bad)  
  43c009:	dec    DWORD PTR [edx+0x31]
  43c00c:	call   eax
  43c00e:	imul   eax,DWORD PTR [eax],0xffffffff
  43c011:	add    BYTE PTR [ebp-0x33],dh
  43c014:	and    ebp,0xffffff84
  43c017:	add    BYTE PTR [eax],al
  43c019:	push   DWORD PTR [ebx]
  43c01b:	xor    eax,0x83da7489
  43c020:	or     esp,0x61
  43c023:	js     0x43c024
  43c025:	mov    bl,0x4d
  43c027:	dec    esp
  43c029:	add    BYTE PTR [esi+0x2c],al
  43c02c:	add    BYTE PTR [esi+0xff00f3],ah
  43c032:	mov    ebx,0xba52ff8b
  43c037:	add    bh,bh
  43c039:	int3   
  43c03a:	inc    esp
  43c03b:	iret   
  43c03c:	add    BYTE PTR [ecx-0x49],bh
  43c03f:	mov    edi,edi
  43c041:	(bad)  
  43c042:	stc    
  43c043:	test   BYTE PTR [eax],al
  43c045:	mov    cl,BYTE PTR [edi-0x34]
  43c048:	(bad)  
  43c049:	call   DWORD PTR [ecx+0x24]
  43c04c:	add    dh,dh
  43c04e:	add    al,0xff
  43c050:	(bad)  
  43c051:	call   FWORD PTR ds:0xa12ffb3
  43c057:	inc    DWORD PTR [eax]
  43c059:	mov    DWORD PTR [eax-0x4f],edx
  43c05c:	jmp    DWORD PTR [ebx+eiz*1]
  43c05f:	inc    DWORD PTR [eax]
  43c061:	call   DWORD PTR [ebp+0x34]
  43c064:	call   DWORD PTR [eax+eiz*2]
  43c067:	add    BYTE PTR [ecx+0xce59ff],cl
  43c06d:	push   0xcc00cc7a
  43c072:	dec    edx
  43c073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43c074:	(bad)  
  43c075:	fidiv  WORD PTR [ebp+0x60ff00ff]
  43c07b:	or     eax,0xae61ff
  43c080:	add    bh,bh
  43c082:	cmp    DWORD PTR [esi+0x0],eax
  43c085:	(bad)  
  43c086:	pop    ss
  43c087:	(bad)  
  43c088:	inc    DWORD PTR [ebx+0x200185c]
  43c08e:	sbb    eax,DWORD PTR [ebx-0x66710001]
  43c094:	add    BYTE PTR [ebx],bh
  43c096:	fdivp  st(7),st
  43c098:	(bad)  
  43c099:	call   DWORD PTR [esi-0x2]
  43c09c:	inc    DWORD PTR [esi-0x7cd4]
  43c0a2:	xchg   BYTE PTR [eax],bh
  43c0a4:	add    DWORD PTR [eax],0x52
  43c0a7:	int3   
  43c0a8:	inc    DWORD PTR [eax]
  43c0aa:	or     eax,0x133800c4
  43c0af:	(bad)  
  43c0b0:	dec    DWORD PTR [ecx+0x3b83b978]
  43c0b6:	mov    BYTE PTR [eax],al
  43c0b8:	(bad)  
  43c0b9:	jmp    esp
  43c0bb:	jmp    0x19f1c0
  43c0c0:	add    ah,cl
  43c0c2:	jne    0x43c06c
  43c0c4:	int3   
  43c0c5:	fmul   DWORD PTR [eax+0x20000ff]
  43c0cb:	in     al,0xff
  43c0cd:	leave  
  43c0ce:	cmp    al,0xff
  43c0d0:	(bad)  
  43c0d1:	(bad)  
  43c0d2:	std    
  43c0d3:	mov    dh,0xff
  43c0d5:	mov    dl,0x9b
  43c0d7:	inc    DWORD PTR [ebx-0x600200]
  43c0dd:	enter  0xe,0xff
  43c0e1:	add    ah,bl
  43c0e3:	mov    dl,0xff
  43c0e5:	inc    edi
  43c0e6:	fld    DWORD PTR [ebx+0x17c4ff89]
  43c0ec:	and    DWORD PTR [ebx-0xff00a4],0xffffffd5
  43c0f3:	mov    DWORD PTR [eax],0x83ff51b6
  43c0f9:	push   edx
  43c0fb:	cld    
  43c0fc:	xor    DWORD PTR [ebx+0xffff],0x6
  43c103:	pop    ecx
  43c104:	add    BYTE PTR [ebp-0xfffffe],dl
  43c10a:	jl     0x43c0fe
  43c10c:	call   DWORD PTR [ebx-0x5b]
  43c10f:	dec    DWORD PTR [ecx-0x33fb2a34]
  43c115:	mov    dl,0x92
  43c117:	(bad)  
  43c118:	inc    DWORD PTR [ebx-0x48760680]
  43c11e:	inc    edx
  43c11f:	int3   
  43c120:	inc    DWORD PTR [eax]
  43c122:	div    BYTE PTR [ebx]
  43c124:	mov    DWORD PTR [ebp+0xff6e],esi
  43c12a:	mov    edx,DWORD PTR [esi+0x0]
  43c12d:	pop    ss
  43c12e:	ins    BYTE PTR es:[edi],dx
  43c12f:	dec    esp
  43c131:	add    DWORD PTR [eax+0x4f03ff59],0xffffffff
  43c138:	(bad)  
  43c139:	dec    DWORD PTR [ecx]
  43c13b:	or     bh,bh
  43c13d:	push   0x13
  43c13f:	(bad)  
  43c140:	inc    DWORD PTR [ebx+0x3800024d]
  43c146:	out    dx,al
  43c147:	inc    DWORD PTR [eax]
  43c149:	add    ah,bh
  43c14b:	addr16 int3 
  43c14d:	cmp    al,0xb1
  43c14f:	add    bh,bh
  43c151:	inc    DWORD PTR [ebx]
  43c153:	dec    esp
  43c154:	push   DWORD PTR [edx]
  43c156:	icebp  
  43c157:	int3   
  43c158:	or     DWORD PTR [ecx-0x6f000c6a],0xffffffcd
  43c15f:	add    BYTE PTR [eax],al
  43c161:	add    BYTE PTR [ebp+0x436400ac],bh
  43c167:	add    bh,bh
  43c169:	inc    esi
  43c16b:	in     al,0xff
  43c16d:	jns    0x43c105
  43c16f:	cmp    edi,0xffffff83
  43c172:	inc    edi
  43c173:	inc    DWORD PTR [ebx+0xffe912]
  43c179:	add    BYTE PTR [edi-0x24],bl
  43c17c:	adc    ecx,0x71
  43c17f:	add    BYTE PTR [eax],al
  43c181:	call   FWORD PTR [edi+0x4c]
  43c184:	jmp    DWORD PTR [ebp+0x6b]
  43c18a:	fstp   DWORD PTR [ebx-0x34]
  43c18d:	popa   
  43c18e:	mov    WORD PTR [ebx-0x7c007d00],es
  43c194:	dec    DWORD PTR [ebp-0x7c00b9]
  43c19a:	div    DWORD PTR [ecx-0xa4b77d]
  43c1a0:	(bad)  
  43c1a1:	jmp    DWORD PTR [eax+esi*4-0x8b1a00]
  43c1a8:	(bad)  
  43c1a9:	jmp    esi
  43c1ab:	sar    bh,cl
  43c1ad:	mov    edi,0xffffff25
  43c1b2:	xchg   esi,eax
  43c1b3:	and    al,0x89
  43c1b5:	sbb    eax,0xff00ff0a
  43c1ba:	stos   BYTE PTR es:[edi],al
  43c1bb:	iret   
  43c1bc:	add    BYTE PTR [edx+0x74],al
  43c1bf:	add    bh,bh
  43c1c1:	mov    DWORD PTR [edx+0x38],esp
  43c1c4:	int3   
  43c1c5:	mov    cl,0xb9
  43c1c7:	(bad)  
  43c1c8:	(bad)  
  43c1c9:	push   DWORD PTR [ebx+0x3f]
  43c1cc:	add    BYTE PTR [ecx-0xff00c3],bh
  43c1d2:	cmp    eax,0xd78a00d7
  43c1d7:	add    bh,bh
  43c1d9:	jmp    DWORD PTR [ebx+eiz*8]
  43c1dc:	call   FWORD PTR [esi-0x7c000004]
  43c1e2:	repz (bad) 
  43c1e4:	int3   
  43c1e5:	xchg   esp,eax
  43c1e6:	xchg   bh,bh
  43c1e8:	int3   
  43c1e9:	int3   
  43c1ea:	retf   0xff7c
  43c1ed:	addr16 dec esi
  43c1ef:	add    bh,bh
  43c1f1:	add    BYTE PTR [edi+0x52],dh
  43c1f4:	add    BYTE PTR ds:0xccff8321,al
  43c1fa:	xchg   ecx,eax
  43c1fb:	lahf   
  43c1fc:	adc    DWORD PTR [ebx],0xfffffffd
  43c1ff:	add    ah,cl
  43c201:	add    BYTE PTR [edi+0x3b],dl
  43c204:	sub    DWORD PTR [ecx-0x59],0xffffff89
  43c208:	(bad)  
  43c209:	call   FWORD PTR [edi]
  43c20b:	add    eax,0x833e15ff
  43c210:	add    BYTE PTR [ecx+0x57cc330b],cl
  43c216:	xor    al,BYTE PTR [ebx-0x3c800000]
  43c21c:	(bad)  
  43c21d:	cmp    BYTE PTR ds:0x4189ff89,al
  43c223:	mov    ebx,0xffc7e9ff
  43c228:	(bad)  
  43c229:	(bad)  
  43c22a:	fmul   st,st(0)
  43c22c:	add    BYTE PTR [ecx],ah
  43c22e:	popf   
  43c22f:	add    bh,bh
  43c231:	xor    DWORD PTR [esi+0xe],0x0
  43c235:	fiadd  WORD PTR [ecx+0x4800ccff]
  43c23b:	inc    edx
  43c23c:	(bad)  
  43c23d:	cmp    ecx,esi
  43c23f:	(bad)  
  43c240:	(bad)  
  43c241:	jmp    eax
  43c243:	adc    al,BYTE PTR [ebx-0xffa0f6]
  43c249:	(bad)  
  43c24a:	in     al,dx
  43c24b:	dec    ebp
  43c24c:	call   FWORD PTR [ebp-0x7c76ffd1]
  43c252:	jecxz  0x43c1f7
  43c254:	call   DWORD PTR [ebp-0x33007cad]
  43c25a:	std    
  43c25b:	mov    DWORD PTR [bx-0xec],ebx
  43c260:	inc    DWORD PTR [eax]
  43c262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c263:	mov    bh,0xff
  43c265:	mov    edx,0x830000ce
  43c26a:	cmc    
  43c26b:	sub    bh,bh
  43c26d:	mov    BYTE PTR [edx+0x55000000],bl
  43c273:	jecxz  0x43c1f8
  43c275:	call   0xcb40:0xccff0b
  43c27c:	add    BYTE PTR [edx+0xffea],cl
  43c282:	inc    edi
  43c283:	dec    ecx
  43c284:	sbb    DWORD PTR [edi+0x1c],0xffffffff
  43c288:	inc    DWORD PTR [eax]
  43c28a:	push   0xffffff96
  43c28c:	(bad)  
  43c28d:	(bad)  
  43c28e:	imul   eax,DWORD PTR [eax],0x3618ff89
  43c294:	add    BYTE PTR [ebx],cl
  43c296:	mov    ebp,0xc483ffcc
  43c29b:	add    al,0xff
  43c29d:	out    0xb0,al
  43c29f:	(bad)  
  43c2a0:	inc    DWORD PTR [ebx+0x4200f407]
  43c2a6:	mov    edx,0xaa8300ff
  43c2ab:	pop    ss
  43c2ac:	add    BYTE PTR [edi],bl
  43c2ae:	push   edx
  43c2af:	add    ah,cl
  43c2b1:	dec    DWORD PTR ds:0x371dffbf
  43c2b7:	dec    DWORD PTR [ecx-0x7c099b01]
  43c2bd:	xor    ah,al
  43c2bf:	add    bh,bh
  43c2c1:	dec    DWORD PTR [edi+0xcf80093]
  43c2c7:	add    bh,bh
  43c2c9:	dec    DWORD PTR [ebp+eax*1-0x971500]
  43c2d0:	add    bh,bh
  43c2d2:	lea    esi,[eax-0x1]
  43c2d5:	mov    al,ds:0x83cc8319
  43c2da:	jb     0x43c2b6
  43c2dc:	call   FWORD PTR [edx+0x71]
  43c2df:	or     DWORD PTR [ecx-0x9e5800],0xffffffc8
  43c2e6:	je     0x43c2e7
  43c2e8:	add    bh,bh
  43c2ea:	ror    DWORD PTR [edi+0xda5700],0xff
  43c2f1:	add    BYTE PTR [edx+0x2e6f899c],bl
  43c2f7:	mov    edi,edi
  43c2f9:	sub    edx,0x8
  43c2fc:	(bad)  
  43c2fd:	call   0x8a4346a2
  43c302:	stos   DWORD PTR es:[edi],eax
  43c303:	mov    edx,0x965300
  43c308:	add    ah,cl
  43c30a:	sub    ecx,DWORD PTR [eax]
  43c30c:	int3   
  43c30d:	mov    ah,0xde
  43c30f:	(bad)  
  43c310:	inc    DWORD PTR [ebx-0x3a7cc083]
  43c316:	cwde   
  43c317:	add    bh,bh
  43c319:	jmp    FWORD PTR [eax]
  43c31b:	scas   eax,DWORD PTR es:[edi]
  43c31c:	dec    DWORD PTR [edi+0x67]
  43c322:	adc    ebx,edi
  43c324:	mov    DWORD PTR [esi],eax
  43c326:	mov    dl,0xff
  43c328:	(bad)  
  43c329:	jmp    FWORD PTR [esi+0x55]
  43c32c:	jmp    ecx
  43c32e:	cmp    DWORD PTR [ebx+0x6df60000],eax
  43c334:	or     DWORD PTR [eax],0xffffffaa
  43c337:	inc    DWORD PTR [eax]
  43c339:	inc    DWORD PTR ds:0x3c28963
  43c33f:	add    bh,bh
  43c341:	inc    DWORD PTR [edx]
  43c343:	(bad)  
  43c345:	test   DWORD PTR [ebp-0x74000001],esp
  43c34b:	mov    ds:0xc4ee00,al
  43c350:	add    bh,bh
  43c352:	xchg   edx,eax
  43c353:	jl     0x43c2d8
  43c355:	and    ebx,DWORD PTR [edi+edi*8]
  43c358:	(bad)  
  43c359:	jmp    FWORD PTR [edi+0x431883f6]
  43c35f:	mov    edi,edi
  43c361:	jmp    DWORD PTR [esi-0x649764f]
  43c367:	add    bh,bh
  43c369:	jmp    FWORD PTR ds:0xb067ffde
  43c36f:	(bad)  
  43c370:	inc    DWORD PTR [eax]
  43c372:	jns    0x43c322
  43c374:	adc    DWORD PTR [edx+edx*4+0x0],0xffffffff
  43c379:	mov    DWORD PTR [edi],edi
  43c37b:	fiadd  DWORD PTR [eax]
  43c37d:	cli    
  43c37e:	outs   dx,DWORD PTR ds:[esi]
  43c37f:	int3   
  43c380:	mov    DWORD PTR [eax],eax
  43c382:	fimul  DWORD PTR [eax-0x281c01]
  43c388:	(bad)  
  43c389:	jmp    FWORD PTR [edx]
  43c38b:	rol    BYTE PTR [eax],0x67
  43c38e:	call   0x56104693
  43c393:	add    eax,0x536100
  43c398:	int3   
  43c399:	mov    DWORD PTR [esi-0x327b3353],ebp
  43c39f:	dec    DWORD PTR [ecx-0x7c75b901]
  43c3a5:	add    eax,0xccffffc3
  43c3aa:	or     ah,BYTE PTR [esi-0x93001]
  43c3b0:	cmp    edi,0xffffffbe
  43c3b3:	and    eax,0xffda30ff
  43c3b8:	inc    DWORD PTR [eax]
  43c3ba:	dec    ebx
  43c3bb:	popf   
  43c3bc:	int3   
  43c3bd:	(bad)  
  43c3be:	retf   
  43c3bf:	dec    esp
  43c3c1:	call   FWORD PTR [edx]
  43c3c3:	sub    al,0xff
  43c3c5:	sbb    DWORD PTR [edi-0x34],0x28d00ff
  43c3cc:	sub    esi,0x3
  43c3cf:	add    bh,bh
  43c3d1:	push   DWORD PTR [edx]
  43c3d3:	push   es
  43c3d4:	jmp    ebp
  43c3d6:	aaa    
  43c3d7:	add    BYTE PTR [eax],al
  43c3d9:	(bad)  
  43c3da:	call   0xe406c39f
  43c3df:	add    bh,bh
  43c3e1:	call   DWORD PTR [esi+0x2c]
  43c3e4:	add    BYTE PTR ds:0xff83ec,dh
  43c3ea:	inc    esp
  43c3eb:	(bad)  
  43c3ed:	ins    BYTE PTR es:[edi],dx
  43c3ee:	sub    eax,0x82ff0000
  43c3f3:	sub    edi,edi
  43c3f5:	test   DWORD PTR [edi-0x4900ff01],esi
  43c3fb:	icebp  
  43c3fc:	inc    DWORD PTR [ecx+0x83ffce]
  43c402:	dec    ebp
  43c403:	pop    ebp
  43c404:	add    BYTE PTR [edx+ebx*4],dl
  43c407:	add    BYTE PTR [eax],al
  43c409:	add    BYTE PTR [ebx-0x1e],ah
  43c40c:	int3   
  43c40d:	in     al,0x9
  43c40f:	(bad)  
  43c410:	inc    DWORD PTR [eax]
  43c412:	xor    ebp,edi
  43c414:	mov    ebx,ebp
  43c416:	(bad)  
  43c417:	dec    esp
  43c419:	add    ch,bh
  43c41b:	xchg   esi,eax
  43c41c:	int3   
  43c41d:	scas   al,BYTE PTR es:[edi]
  43c41e:	mov    DWORD PTR [ebx+0x62c9ccff],0x8ffc00
  43c428:	dec    esp
  43c42a:	cwde   
  43c42b:	js     0x43c3b6
  43c42d:	movmskps edi,xmm7
  43c430:	inc    DWORD PTR [eax]
  43c432:	jne    0x43c441
  43c434:	add    ch,dh
  43c436:	sbb    eax,DWORD PTR [ebx-0x69c40077]
  43c43c:	add    bl,bh
  43c43e:	pop    ebp
  43c43f:	(bad)  
  43c440:	inc    DWORD PTR [eax]
  43c442:	cmovbe eax,DWORD PTR [eax]
  43c445:	aaa    
  43c446:	mov    DWORD PTR [eax],eax
  43c448:	(bad)  
  43c449:	call   DWORD PTR [eax+0x2f3800a3]
  43c44f:	mov    DWORD PTR [eax],eax
  43c451:	push   DWORD PTR [eax-0x502d7c77]
  43c457:	int3   
  43c458:	add    bh,bh
  43c45a:	daa    
  43c45b:	rol    BYTE PTR [eax],0xbe
  43c45e:	retf   
  43c45f:	add    bh,bh
  43c461:	call   FWORD PTR [esi]
  43c463:	(bad)  
  43c464:	int3   
  43c465:	hlt    
  43c466:	cmp    edi,edi
  43c468:	add    BYTE PTR [eax],al
  43c46a:	stos   DWORD PTR es:[edi],eax
  43c46b:	mov    al,BYTE PTR [eax]
  43c46d:	jb     0x43c4b3
  43c46f:	(bad)  
  43c470:	inc    DWORD PTR [eax]
  43c472:	cld    
  43c473:	call   0xccff:0xcc5f7789
  43c47a:	fcom   QWORD PTR [ebx-0xbe3f01]
  43c480:	(bad)  
  43c481:	call   FWORD PTR [ebp+0x50]
  43c484:	jmp    DWORD PTR [ecx]
  43c486:	ud0    edi,edi
  43c489:	(bad)  
  43c48a:	jg     0x43c439
  43c48c:	add    ch,dh
  43c48e:	loope  0x43c490
  43c490:	add    BYTE PTR [ecx+0x6f00155b],cl
  43c496:	push   ds
  43c497:	add    BYTE PTR [ebx-0x7cd0907d],al
  43c49d:	adc    eax,0xff83cc11
  43c4a2:	ds add al,0x0
  43c4a5:	xchg   DWORD PTR [edx-0x34],edi
  43c4a8:	(bad)  
  43c4a9:	push   DWORD PTR [edx-0x7f]
  43c4ac:	call   FWORD PTR [eax-0x7cff7621]
  43c4b2:	mov    ss,WORD PTR [edx-0x259600]
  43c4b8:	inc    DWORD PTR [eax]
  43c4ba:	out    0xeb,eax
  43c4bc:	inc    DWORD PTR [ebx+0xff13]
  43c4c2:	and    DWORD PTR [ebp+0x0],edi
  43c4c5:	push   ecx
  43c4c6:	sub    esp,ecx
  43c4c8:	cmp    edi,0xffffffe3
  43c4cb:	push   ebx
  43c4cc:	add    BYTE PTR [ebx],bh
  43c4ce:	outs   dx,BYTE PTR ds:[esi]
  43c4cf:	dec    esp
  43c4d1:	add    DWORD PTR [ebx+0x47],0xffffffff
  43c4d5:	jbe    0x43c524
  43c4d7:	inc    DWORD PTR [eax]
  43c4d9:	int3   
  43c4da:	mov    cl,0x68
  43c4dc:	int3   
  43c4dd:	xchg   esp,eax
  43c4de:	and    cl,BYTE PTR [ecx+0x80400ff]
  43c4e4:	int3   
  43c4e5:	fs loop 0x43c4e8
  43c4e8:	add    bh,bh
  43c4ea:	into   
  43c4eb:	or     eax,0xff731e00
  43c4f0:	add    BYTE PTR [ebx+0x4f83e7b6],al
  43c4f6:	push   ds
  43c4f7:	add    BYTE PTR [eax],al
  43c4f9:	adc    DWORD PTR [esi-0xb],0xffffffff
  43c4fd:	lahf   
  43c4fe:	adc    edi,edi
  43c500:	int3   
  43c501:	jmp    FWORD PTR [edx]
  43c503:	xchg   esi,eax
  43c504:	inc    DWORD PTR [ecx-0x7d]
  43c507:	inc    DWORD PTR [eax]
  43c509:	add    BYTE PTR [esi],bl
  43c50b:	jmp    0xff58310f
  43c510:	add    BYTE PTR [eax],al
  43c512:	test   ebx,0xc6fbcc
  43c518:	mov    DWORD PTR [ecx-0x19ffd491],ecx
  43c51e:	xchg   esi,eax
  43c51f:	int3   
  43c520:	add    BYTE PTR [eax],al
  43c522:	cdq    
  43c523:	adc    DWORD PTR [eax],eax
  43c525:	sbb    esp,DWORD PTR [eax+eax*1+0x759689ff]
  43c52c:	(bad)  
  43c52d:	in     eax,dx
  43c52e:	cmp    al,BYTE PTR [eax]
  43c530:	inc    DWORD PTR [eax]
  43c532:	xor    DWORD PTR [edx-0x93a334],eax
  43c538:	add    BYTE PTR [ecx-0x667ca35f],cl
  43c53e:	mov    al,ds:0x12ffff00
  43c543:	mov    bh,0xff
  43c545:	xchg   DWORD PTR [ecx-0x1],eax
  43c548:	add    bh,bh
  43c54a:	mov    al,ds:0x12cc837f
  43c54f:	(bad)  
  43c550:	(bad)  
  43c551:	call   DWORD PTR [edi+0x1dc183ca]
  43c557:	(bad)  
  43c558:	(bad)  
  43c559:	(bad)  
  43c55a:	fnstenv [ebp+0x0]
  43c55d:	add    al,0xc4
  43c55f:	(bad)  
  43c560:	(bad)  
  43c561:	dec    DWORD PTR [edi+0x63]
  43c564:	dec    ecx
  43c566:	adc    ah,cl
  43c568:	cmp    edi,0xfffffff3
  43c56b:	retf   0xf0ff
  43c56e:	sbb    al,0x0
  43c570:	add    BYTE PTR [eax],al
  43c572:	adc    eax,0x7b8ff78
  43c577:	(bad)  
  43c578:	inc    DWORD PTR [eax]
  43c57a:	pop    esp
  43c57b:	out    dx,eax
  43c57c:	mov    DWORD PTR [edx-0x37],ecx
  43c582:	outs   dx,BYTE PTR ds:[esi]
  43c583:	fwait
  43c584:	mov    DWORD PTR [ebx+esi*8],ebx
  43c587:	(bad)  
  43c588:	(bad)  
  43c589:	jmp    FWORD PTR [ecx-0x4]
  43c58c:	xor    DWORD PTR [edx-0x767c0068],0x23
  43c593:	std    
  43c594:	add    cl,al
  43c596:	inc    edx
  43c597:	inc    DWORD PTR [eax]
  43c599:	mov    ebx,ebp
  43c59b:	push   0xffffffff
  43c59d:	dec    esp
  43c59e:	ror    DWORD PTR [ecx-0x75630001],0xff
  43c5a5:	jp     0x43c60c
  43c5a7:	add    BYTE PTR [eax],al
  43c5a9:	inc    DWORD PTR [ebx+0x7b]
  43c5ac:	call   FWORD PTR [esi+0xff002a]
  43c5b2:	xor    edi,DWORD PTR [ebx]
  43c5b4:	call   DWORD PTR [ebp+0xc2]
  43c5ba:	mov    ds:0x8ac5ff55,al
  43c5bf:	cmp    edi,0xffffffff
  43c5c2:	lds    ebx,FWORD PTR [edi+0xe91ff]
  43c5c8:	add    bh,bh
  43c5ca:	mov    ecx,0xe4c48960
  43c5cf:	add    BYTE PTR [ebx+0x408b83],al
  43c5d5:	lds    esp,FWORD PTR [eax-0x20000100]
  43c5db:	xor    edi,edi
  43c5dd:	cmp    dh,BYTE PTR [edi+edi*8-0x1]
  43c5e1:	call   DWORD PTR [ebx+0x15]
  43c5e4:	(bad)  
  43c5e5:	cmp    bl,dh
  43c5e7:	add    DWORD PTR [eax],0xffffffff
  43c5ea:	sbb    ecx,DWORD PTR [ebp-0xada01]
  43c5f0:	add    BYTE PTR [eax],al
  43c5f2:	mov    DWORD PTR [edi+edi*8-0x33009733],eax
  43c5f9:	int3   
  43c5fa:	mov    bh,0xec
  43c5fc:	add    BYTE PTR [eax+0xd],ah
  43c5ff:	cmp    edi,0xffffffff
  43c602:	pusha  
  43c603:	or     ah,0xbd
  43c606:	mov    ecx,0x42ffffff
  43c60b:	jmp    0x43c60c
  43c60d:	and    al,0x45
  43c60f:	add    bh,bh
  43c611:	add    BYTE PTR [edi],bh
  43c613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c614:	jmp    DWORD PTR [ecx-0xff00dd]
  43c61a:	or     DWORD PTR [edi],esi
  43c61c:	push   DWORD PTR [edi-0x767c00c2]
  43c622:	xlat   BYTE PTR ds:[ebx]
  43c623:	fld    QWORD PTR [eax]
  43c625:	adc    al,0x93
  43c627:	(bad)  
  43c628:	inc    DWORD PTR [eax]
  43c62a:	int    0x5b
  43c62c:	int3   
  43c62d:	cmp    eax,0x71
  43c632:	xchg   esi,eax
  43c633:	outs   dx,BYTE PTR ds:[esi]
  43c634:	add    cl,bh
  43c636:	and    eax,0xdbcc00cc
  43c63b:	and    eax,0xffe2abff
  43c640:	int3   
  43c641:	add    BYTE PTR [eax-0x24faff6b],dl
  43c647:	(bad)  
  43c648:	inc    DWORD PTR [eax]
  43c64a:	push   edi
  43c64b:	cmc    
  43c64c:	dec    DWORD PTR [ebp-0x1e]
  43c64f:	cmp    edi,0xffffffff
  43c652:	dec    edx
  43c653:	mov    eax,ds:0xffd08cff
  43c658:	add    bh,bh
  43c65a:	lock cli 
  43c65c:	add    BYTE PTR [edx-0x2d],al
  43c65f:	int3   
  43c660:	(bad)  
  43c661:	call   ebx
  43c663:	scas   al,BYTE PTR es:[edi]
  43c664:	call   DWORD PTR [ebp-0xffef]
  43c66a:	ins    DWORD PTR es:[edi],dx
  43c66b:	push   cs
  43c66c:	add    BYTE PTR [edi-0x3373],ch
  43c672:	in     eax,0x2e
  43c674:	mov    DWORD PTR [ebx-0x11],ebp
  43c677:	inc    DWORD PTR [eax]
  43c679:	add    ah,dh
  43c67b:	pop    es
  43c67c:	add    ah,bl
  43c67e:	dec    edi
  43c67f:	(bad)  
  43c680:	inc    DWORD PTR [eax]
  43c682:	push   0x8ba38304
  43c687:	inc    DWORD PTR [eax]
  43c689:	int3   
  43c68a:	pushf  
  43c68b:	xchg   edi,edi
  43c68d:	xor    al,0xb1
  43c68f:	(bad)  
  43c690:	(bad)  
  43c691:	jmp    DWORD PTR [ecx-0x136f00ad]
  43c697:	inc    DWORD PTR [eax]
  43c699:	and    esp,0xfffffff1
  43c69c:	add    BYTE PTR [ecx+ebp*8-0x7d],ch
  43c6a0:	dec    esp
  43c6a2:	fucomp st(3)
  43c6a4:	(bad)  
  43c6a5:	out    dx,eax
  43c6a6:	in     eax,0x83
  43c6a8:	inc    DWORD PTR [ebx+0x54ffe3c8]
  43c6ae:	add    DWORD PTR [eax],0xffffffff
  43c6b1:	add    dl,cl
  43c6b3:	retf   
  43c6b4:	(bad)  
  43c6b5:	fsubr  DWORD PTR [ebx-0x1]
  43c6b8:	inc    DWORD PTR [eax]
  43c6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c6bb:	xchg   ebp,eax
  43c6bc:	add    BYTE PTR [eax+0xccd0],dl
  43c6c2:	xchg   esp,eax
  43c6c3:	sbb    al,BYTE PTR [eax]
  43c6c5:	mov    dl,0x6a
  43c6c7:	(bad)  
  43c6c8:	inc    DWORD PTR [ebx+0x7ffe6a8]
  43c6ce:	lahf   
  43c6cf:	add    DWORD PTR [ebx-0xb6be00],0xffffffbe
  43c6d6:	or     al,BYTE PTR [eax]
  43c6d8:	(bad)  
  43c6d9:	inc    DWORD PTR [eax+0x71a3ff0a]
  43c6df:	int3   
  43c6e0:	add    BYTE PTR [ecx+0x2d00cef5],cl
  43c6e6:	mov    BYTE PTR [eax],al
  43c6e8:	inc    DWORD PTR [eax]
  43c6ea:	mov    DWORD PTR [ecx],0x519aff
  43c6f0:	(bad)  
  43c6f1:	push   DWORD PTR [edi-0xc]
  43c6f4:	call   DWORD PTR [ebx+0x83ff4e]
  43c6fa:	adc    ebx,DWORD PTR [ebx]
  43c6fc:	jmp    DWORD PTR [ecx]
  43c6fe:	add    al,0xff
  43c700:	add    BYTE PTR [eax],al
  43c702:	in     eax,0xe5
  43c704:	call   DWORD PTR [edx]
  43c706:	mov    edi,edi
  43c708:	add    BYTE PTR [eax],al
  43c70a:	cmc    
  43c70b:	repnz xor DWORD PTR [edx-0x63],0xffffffff
  43c710:	add    BYTE PTR [eax],al
  43c712:	dec    eax
  43c713:	or     al,0x0
  43c715:	sbb    al,BYTE PTR [ebx]
  43c717:	add    BYTE PTR [eax],al
  43c719:	jmp    DWORD PTR [ebp+0x635a0086]
  43c71f:	inc    DWORD PTR [eax]
  43c721:	sub    DWORD PTR [ecx+esi*2-0x1],0x28
  43c726:	push   ebx
  43c727:	add    bh,bh
  43c729:	sub    ebp,0xffffff8d
  43c72c:	sub    DWORD PTR [esi],0x5e
  43c72f:	int3   
  43c730:	int3   
  43c731:	call   DWORD PTR [edi+0x4c]
  43c734:	sbb    DWORD PTR [ebx-0x4f],0xffffffff
  43c738:	add    bh,bh
  43c73a:	outs   dx,DWORD PTR ds:[esi]
  43c73b:	push   esp
  43c73c:	push   DWORD PTR [ebx-0x7c7c96]
  43c742:	inc    ebx
  43c744:	(bad)  
  43c745:	cmp    DWORD PTR [eax],ebp
  43c747:	inc    DWORD PTR [eax]
  43c749:	(bad)  
  43c74a:	(bad)  
  43c74b:	xchg   esi,eax
  43c74c:	jmp    DWORD PTR [ecx+0xff891c]
  43c752:	cmp    DWORD PTR [ebp-0x4c2501],esp
  43c758:	add    ah,cl
  43c75a:	pop    eax
  43c75b:	mov    cl,0x83
  43c75d:	or     eax,DWORD PTR [ebx+eax*4-0x6b7bff01]
  43c764:	add    BYTE PTR [ecx],bh
  43c766:	or     bh,bh
  43c768:	add    bh,bh
  43c76a:	scas   eax,DWORD PTR es:[edi]
  43c76b:	mov    cl,0x0
  43c76d:	sahf   
  43c76e:	sub    BYTE PTR [eax],al
  43c770:	(bad)  
  43c771:	(bad)  
  43c772:	jnp    0x43c796
  43c774:	add    ch,dl
  43c776:	retf   
  43c777:	int3   
  43c778:	or     esp,0x63
  43c77b:	repz call DWORD PTR [ecx]
  43c77e:	jecxz  0x43c77f
  43c780:	inc    DWORD PTR [eax]
  43c782:	add    ecx,eax
  43c784:	jmp    DWORD PTR [eax]
  43c786:	jne    0x43c788
  43c788:	(bad)  
  43c789:	call   DWORD PTR [edi]
  43c78b:	mov    BYTE PTR [eax],al
  43c78d:	lea    ebp,[esi-0x74770000]
  43c793:	stos   BYTE PTR es:[edi],al
  43c794:	call   DWORD PTR [ecx-0x4d]
  43c797:	add    bh,bh
  43c799:	inc    DWORD PTR [esi-0x6a]
  43c79c:	add    al,al
  43c79e:	jmp    0x43c79f
  43c7a0:	or     esp,0xffffffb8
  43c7a3:	rol    DWORD PTR [ebx+0xff7f37],0x0
  43c7aa:	mov    dh,0x2c
  43c7ac:	(bad)  
  43c7ad:	jge    0x43c79c
  43c7af:	inc    DWORD PTR [eax]
  43c7b1:	inc    eax
  43c7b3:	sbb    bh,bh
  43c7b5:	dec    edx
  43c7b6:	aaa    
  43c7b7:	inc    DWORD PTR [ebx-0x19c301]
  43c7bd:	mov    bl,0x85
  43c7bf:	inc    DWORD PTR [ebx-0x7ce07101]
  43c7c5:	sub    eax,0xffff8914
  43c7ca:	xor    ebx,DWORD PTR [ecx-0x3332b901]
  43c7d0:	add    BYTE PTR [eax],al
  43c7d2:	and    al,0x2f
  43c7d4:	xor    ecx,0xffffffa1
  43c7d7:	add    BYTE PTR [eax],al
  43c7d9:	jmp    FWORD PTR [esi]
  43c7db:	mov    BYTE PTR [ecx-0x7c6a48],cl
  43c7e1:	add    BYTE PTR [edi+0x573bcce0],bl
  43c7e7:	inc    DWORD PTR [ebx-0x7cfc7634]
  43c7ed:	clc    
  43c7ee:	adc    eax,0xf88300ff
  43c7f3:	jle    0x43c778
  43c7f5:	inc    ebx
  43c7f6:	inc    edx
  43c7f7:	add    DWORD PTR [eax],0xffffffff
  43c7fa:	aad    0xce
  43c7fc:	mov    DWORD PTR [eax-0x6c],esp
  43c7ff:	inc    DWORD PTR [eax]
  43c801:	cmp    edi,0x12
  43c804:	cmp    DWORD PTR [esi-0xffff73],0xffffffd9
  43c80b:	jo     0x43c796
  43c80d:	inc    ecx
  43c80e:	loop   0x43c80f
  43c810:	add    ah,cl
  43c812:	fs imul edi,edi,0x47
  43c816:	test   BYTE PTR [eax],0xff
  43c819:	add    BYTE PTR [esi-0x43],bh
  43c81c:	dec    DWORD PTR [ebx-0x7c0066]
  43c822:	stc    
  43c823:	sar    bh,0x0
  43c826:	mov    al,BYTE PTR [eax]
  43c828:	add    bh,bh
  43c82a:	cld    
  43c82b:	xor    al,0x0
  43c82d:	pushf  
  43c82e:	outs   dx,BYTE PTR ds:[esi]
  43c82f:	inc    DWORD PTR [eax]
  43c831:	cmp    edi,0xffffffb2
  43c834:	add    BYTE PTR [ecx],ch
  43c836:	mov    esi,0xdc83ffff
  43c83b:	adc    al,0x83
  43c83d:	(bad)
  43c841:	add    BYTE PTR [esi-0x27],cl
  43c844:	sub    ebx,0x66
  43c847:	inc    DWORD PTR [ebx-0x91a101]
  43c84d:	adc    edx,DWORD PTR [ebx+0x67ff0000]
  43c853:	scas   eax,DWORD PTR es:[edi]
  43c854:	jmp    FWORD PTR [edx+0xffff07]
  43c85a:	stos   BYTE PTR es:[edi],al
  43c85b:	repnz add BYTE PTR [ecx],dl
  43c85e:	pop    edx
  43c85f:	cmp    edi,0xffffff83
  43c862:	jmp    esi
  43c864:	sub    DWORD PTR [edx],0x21
  43c867:	inc    DWORD PTR [ebx-0x76c7ca01]
  43c86d:	fdiv   QWORD PTR [edx-0x1]
  43c870:	(bad)  
  43c871:	(bad)  
  43c872:	js     0x43c8c7
  43c874:	jmp    FWORD PTR [esi]
  43c876:	dec    ebx
  43c877:	int3   
  43c878:	(bad)  
  43c879:	dec    ebp
  43c87b:	cmp    al,0x0
  43c87d:	inc    edi
  43c87e:	pop    ebp
  43c87f:	add    BYTE PTR [eax],al
  43c881:	dec    DWORD PTR [ebp+0x3b]
  43c884:	call   esi
  43c886:	inc    DWORD PTR es:[ebx-0x2c7277]
  43c88d:	and    al,0xdd
  43c88f:	inc    DWORD PTR [ebx-0x7c57bb01]
  43c895:	ds add BYTE PTR ss:[eax],al
  43c899:	call   DWORD PTR [ebp-0x7ad700d3]
  43c89f:	cmp    edi,0x0
  43c8a2:	inc    ebp
  43c8a3:	xor    eax,0x2b8c00
  43c8a8:	(bad)  
  43c8a9:	dec    DWORD PTR [esi]
  43c8ab:	or     al,BYTE PTR [eax]
  43c8ad:	add    eax,0xffffcc82
  43c8b2:	or     al,0x8a
  43c8b4:	jmp    DWORD PTR [ecx+0xff63]
  43c8ba:	aad    0x1b
  43c8bc:	add    BYTE PTR [edi],dh
  43c8be:	retf   0xffff
  43c8c1:	dec    DWORD PTR [eax+0x7fd0ccb5]
  43c8c7:	add    bh,bh
  43c8c9:	jmp    DWORD PTR [edx]
  43c8cb:	dec    esi
  43c8cc:	dec    DWORD PTR [ecx-0x42]
  43c8cf:	dec    esp
  43c8d1:	call   DWORD PTR [ecx]
  43c8d3:	ret    0x8883
  43c8d6:	bound  eax,QWORD PTR [eax]
  43c8d8:	add    BYTE PTR [eax],al
  43c8da:	cmp    al,0x23
  43c8dc:	dec    DWORD PTR [edx-0x28]
  43c8df:	inc    DWORD PTR [ebx+0x1dd8ff]
  43c8e5:	dec    eax
  43c8e6:	mov    eax,0xf6ffccff
  43c8eb:	mov    ds:0xad99ff,eax
  43c8f0:	add    BYTE PTR [ebx-0xc7c10eb],al
  43c8f6:	aas    
  43c8f7:	int3   
  43c8f8:	add    bh,bh
  43c8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43c8fb:	test   bh,bh
  43c8fd:	jmp    0x8344958f
  43c902:	mov    es,WORD PTR ss:[ebx-0x7c33996b]
  43c909:	add    BYTE PTR [edi],bl
  43c90b:	dec    eax
  43c90c:	jmp    DWORD PTR [ebx-0x76ff0094]
  43c912:	ret    0xc9
  43c915:	xor    DWORD PTR [ebx+0x61ff8983],esp
  43c91b:	jmp    0x43c91d
  43c91d:	repz mov edi,edi
  43c920:	add    DWORD PTR [eax],0x7d
  43c923:	xor    edi,edi
  43c925:	ret    
  43c926:	adc    eax,0x7a008900
  43c92b:	push   cs
  43c92c:	dec    DWORD PTR [esi-0x337c330a]
  43c932:	mov    edi,0x580cfff3
  43c937:	add    bh,bh
  43c939:	inc    DWORD PTR [eax+eax*2-0x33c4fd77]
  43c940:	dec    esp
  43c942:	shr    BYTE PTR [eax-0x7d],0xb1
  43c946:	mov    eax,ds:0xb830089
  43c94b:	xlat   BYTE PTR ds:[ebx]
  43c94c:	int3   
  43c94d:	fidivr WORD PTR [ebx-0x34]
  43c950:	(bad)  
  43c951:	dec    DWORD PTR ds:0xa79cffd1
  43c957:	dec    esp
  43c959:	dec    DWORD PTR [eax]
  43c95b:	repz add al,bh
  43c95e:	popa   
  43c95f:	dec    DWORD PTR [ecx-0x48e800]
  43c965:	popf   
  43c966:	inc    esi
  43c967:	add    bh,bh
  43c969:	push   DWORD PTR [ebx-0x23]
  43c96c:	push   DWORD PTR ds:0xccccff47
  43c972:	mov    esi,DWORD PTR [ecx+0xb56b00]
  43c978:	int3   
  43c979:	int3   
  43c97a:	int3   
  43c97b:	int3   
  43c97c:	int3   
  43c97d:	int3   
  43c97e:	int3   
  43c97f:	int3   
  43c980:	add    BYTE PTR [eax],al
  43c982:	mov    esi,0x89ffff
  43c987:	popf   
  43c988:	dec    edi
  43c989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c98a:	jae    0x43c930
  43c98c:	int3   
  43c98d:	mov    bh,bh
  43c98f:	or     al,BYTE PTR [eax]
  43c991:	add    ah,cl
  43c993:	(bad)  
  43c994:	(bad)  
  43c995:	inc    DWORD PTR [eax]
  43c997:	dec    ebp
  43c998:	sbb    edx,DWORD PTR [esi+0x8]
  43c99b:	cmp    DWORD PTR [eax],eax
  43c99d:	out    0x0,al
  43c99f:	mov    al,BYTE PTR [ebx-0x7cc401]
  43c9a5:	(bad)  
  43c9a6:	push   DWORD PTR [ebx+edi*4]
  43c9a9:	adc    ebx,DWORD PTR [ebx-0x7c7fff10]
  43c9af:	pop    ebx
  43c9b0:	int3   
  43c9b1:	jmp    DWORD PTR [eax+0x0]
  43c9b4:	inc    DWORD PTR [eax]
  43c9b6:	(bad)  
  43c9b7:	clc    
  43c9b8:	mov    dh,0x4a
  43c9ba:	pop    ss
  43c9bb:	dec    eax
  43c9bc:	add    BYTE PTR [esi],bl
  43c9be:	mov    DWORD PTR [edx],esp
  43c9c0:	dec    DWORD PTR [ecx-0x7c6d]
  43c9c6:	add    BYTE PTR [edi],ah
  43c9c8:	jne    0x43c9e8
  43c9ca:	jmp    0x83ca:0xff9bff15
  43c9d1:	call   FWORD PTR [ebx]
  43c9d3:	mov    edi,edi
  43c9d5:	(bad)  
  43c9d6:	(bad)  
  43c9d7:	cmp    al,0xef
  43c9d9:	lds    ecx,FWORD PTR [edx+0x410020]
  43c9df:	pop    esp
  43c9e0:	add    BYTE PTR [ebx+0xff83f8],al
  43c9e6:	add    BYTE PTR [edx-0x69be521a],dl
  43c9ec:	add    dl,bh
  43c9ee:	(bad)  
  43c9ef:	fxch   st(4)
  43c9f1:	add    BYTE PTR [edx+0x83ffff],bh
  43c9f7:	lods   al,BYTE PTR ds:[esi]
  43c9f8:	cmp    BYTE PTR [edx-0x7b],ah
  43c9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43c9fc:	mov    edi,ebp
  43c9fe:	add    ch,dl
  43ca00:	int3   
  43ca01:	or     DWORD PTR [ebp-0x763301],0x21
  43ca08:	test   BYTE PTR [ebp-0x67333781],bl
  43ca0e:	call   FWORD PTR [eax+0x0]
  43ca11:	sbb    DWORD PTR [eax],0xffffffff
  43ca14:	(bad)  
  43ca15:	inc    DWORD PTR [eax]
  43ca17:	repz mov dh,0x5d
  43ca1a:	mov    ch,0xef
  43ca1c:	int3   
  43ca1d:	dec    ebx
  43ca1e:	inc    DWORD PTR [edi]
  43ca20:	add    ah,cl
  43ca22:	or     al,0xff
  43ca24:	add    bh,bh
  43ca26:	int3   
  43ca27:	mov    edx,0xff68f30c
  43ca2c:	int3   
  43ca2d:	pop    ds
  43ca2e:	call   DWORD PTR [ebp-0x7c960001]
  43ca34:	add    BYTE PTR [eax],al
  43ca36:	int3   
  43ca37:	call   0x8bff:0xbd52dbe6
  43ca3e:	add    BYTE PTR [eax],cl
  43ca40:	dec    esp
  43ca42:	jecxz  0x43ca43
  43ca44:	(bad)  
  43ca45:	(bad)  
  43ca46:	call   DWORD PTR [ecx+0x28f2c56]
  43ca4c:	jmp    ecx
  43ca4e:	int3   
  43ca4f:	adc    al,0xff
  43ca51:	dec    edi
  43ca53:	add    BYTE PTR [eax],al
  43ca55:	add    BYTE PTR [eax],al
  43ca57:	(bad)  
  43ca58:	sub    DWORD PTR [edx-0x52003701],ebp
  43ca5e:	dec    ecx
  43ca60:	cmp    edi,0xffffffc9
  43ca63:	int3   
  43ca64:	add    bh,bh
  43ca66:	add    BYTE PTR [edx],cl
  43ca68:	xchg   ebp,eax
  43ca69:	add    dh,0xe7
  43ca6c:	int3   
  43ca6d:	dec    DWORD PTR ss:[edx-0x7c480077]
  43ca74:	(bad)  
  43ca75:	(bad)  
  43ca76:	call   DWORD PTR [edx]
  43ca78:	ja     0x43ca4a
  43ca7a:	mov    esi,0x89d1ff26
  43ca7f:	add    DWORD PTR [eax],eax
  43ca81:	(bad)  
  43ca82:	out    dx,al
  43ca83:	add    bh,bh
  43ca85:	int3   
  43ca86:	call   FWORD PTR [edi]
  43ca88:	pushf  
  43ca89:	int3   
  43ca8a:	cld    
  43ca8b:	jns    0x43ca8d
  43ca8d:	mov    bh,bh
  43ca8f:	(bad)  
  43ca90:	dec    DWORD PTR [ecx-0x7cffca]
  43ca96:	dec    DWORD PTR [edx-0x7f5c76ce]
  43ca9c:	jmp    ebp
  43ca9e:	add    BYTE PTR [eax-0x33373400],bl
  43caa4:	(bad)  
  43caa5:	(bad)  
  43caa6:	inc    edi
  43caa8:	fmul   QWORD PTR [ecx+0x71]
  43caab:	retf   
  43caac:	add    BYTE PTR [eax-0x7d],dh
  43caaf:	pop    eax
  43cab0:	inc    DWORD PTR [eax]
  43cab2:	fadd   QWORD PTR [eax]
  43cab4:	inc    DWORD PTR [eax]
  43cab6:	jmp    FWORD PTR [esi]
  43cab8:	push   esi
  43cab9:	and    edx,DWORD PTR [eax+0x6e]
  43cabc:	add    BYTE PTR [esi],bh
  43cabe:	(bad)  
  43cabf:	jmp    0x83ff:0x831083ff
  43cac6:	add    BYTE PTR [esi+0x3bc52eee],dl
  43cacc:	jmp    DWORD PTR [esi-0x7600ac01]
  43cad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cad3:	cmp    edi,0x0
  43cad6:	add    BYTE PTR [ebp+edi*2-0x40],bh
  43cada:	in     eax,0xe5
  43cadc:	int3   
  43cadd:	xor    eax,0xffff0dff
  43cae2:	mov    edx,0xffff0083
  43cae7:	push   edi
  43cae8:	iret   
  43cae9:	cmp    al,0x1a
  43caeb:	es (bad) 
  43caed:	in     eax,dx
  43caee:	call   FWORD PTR [ebx]
  43caf0:	add    BYTE PTR [ebx-0x337c76dd],al
  43caf6:	int3   
  43caf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43caf8:	dec    esi
  43caf9:	lock or edi,edx
  43cafc:	add    al,ah
  43cafe:	int3   
  43caff:	clc    
  43cb00:	inc    DWORD PTR [ebx-0x33b7]
  43cb06:	call   DWORD PTR [ecx]
  43cb08:	or     dh,ah
  43cb0a:	ret    
  43cb0b:	iret   
  43cb0c:	add    BYTE PTR [ebp-0xff9700],bh
  43cb12:	push   cs
  43cb13:	mov    edi,edi
  43cb15:	mov    edi,edi
  43cb17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43cb18:	xlat   BYTE PTR ds:[ebx]
  43cb19:	push   ebp
  43cb1a:	push   ecx
  43cb1b:	add    BYTE PTR cs:[ebp-0x1],dh
  43cb1f:	dec    ebp
  43cb20:	(bad)  
  43cb21:	inc    ebx
  43cb23:	(bad)  
  43cb24:	inc    DWORD PTR [ebx-0x4636737d]
  43cb2a:	aad    0x6
  43cb2c:	call   edx
  43cb2e:	inc    DWORD PTR [ebx+eax*4]
  43cb31:	add    ah,dl
  43cb33:	(bad)  
  43cb34:	(bad)  
  43cb35:	(bad)  
  43cb36:	inc    edx
  43cb38:	mov    esp,0xec76d0
  43cb3d:	idiv   bh
  43cb3f:	sub    eax,0x893f83ff
  43cb44:	add    bh,bh
  43cb46:	jmp    FWORD PTR [edx+0x7]
  43cb49:	dec    edi
  43cb4a:	hlt    
  43cb4b:	xor    eax,DWORD PTR [eax]
  43cb4d:	jmp    0xff441b51
  43cb52:	or     bh,bh
  43cb54:	inc    DWORD PTR [eax]
  43cb56:	add    DWORD PTR [eax+0x407e095b],0xffffffff
  43cb5d:	jmp    FWORD PTR es:[ecx]
  43cb60:	add    DWORD PTR [ebx-0x7676ff6f],0xffffffff
  43cb67:	cwde   
  43cb68:	or     DWORD PTR [edx+ebp*2+0x28],ebx
  43cb6c:	(bad)  
  43cb6d:	cmp    ecx,DWORD PTR [ecx+0x4ffffff2]
  43cb73:	add    BYTE PTR [ecx+0x3849cc00],cl
  43cb79:	xchg   BYTE PTR [ecx],al
  43cb7b:	mov    bl,0xff
  43cb7d:	mov    al,ds:0xff8322ff
  43cb82:	clc    
  43cb83:	add    bh,bh
  43cb85:	dec    esp
  43cb87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cb88:	sbb    BYTE PTR [esi+0x3cffd1bc],0x0
  43cb8f:	or     al,0xcc
  43cb91:	mov    DWORD PTR [eax+0xffff],ebx
  43cb97:	outs   dx,DWORD PTR ds:[esi]
  43cb98:	inc    esi
  43cb99:	and    eax,0x96cc37e8
  43cb9e:	add    BYTE PTR [edx-0x1],bh
  43cba1:	mov    DWORD PTR [edx-0x1],esi
  43cba4:	add    ah,cl
  43cba6:	add    ch,dl
  43cba8:	mov    bh,dh
  43cbaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43cbab:	and    ecx,esp
  43cbad:	call   0xd7:0x891600
  43cbb4:	add    bh,bh
  43cbb6:	or     edx,0x32
  43cbb9:	inc    ebp
  43cbba:	je     0x43cb91
  43cbbc:	push   DWORD PTR [edx+0x2000]
  43cbc2:	xchg   esi,eax
  43cbc3:	dec    esp
  43cbc5:	inc    DWORD PTR [eax]
  43cbc7:	pop    ds
  43cbc8:	pop    esp
  43cbc9:	retf   
  43cbca:	mov    al,0xf9
  43cbcc:	and    DWORD PTR [esi-0xbd7d],0xffffffe5
  43cbd3:	inc    DWORD PTR [ebx-0x3f48007d]
  43cbd9:	mov    DWORD PTR [esp+ecx*4-0x77],esp
  43cbdd:	sar    bh,cl
  43cbdf:	pusha  
  43cbe0:	mov    edi,edi
  43cbe2:	mov    DWORD PTR [eax],0x93008300
  43cbe8:	mov    bl,0x35
  43cbea:	jns    0x43cbf8
  43cbec:	add    BYTE PTR [esi],ah
  43cbee:	add    DWORD PTR [ecx+0x0],0xffffff83
  43cbf2:	lock inc DWORD PTR [eax]
  43cbf5:	(bad)  
  43cbf6:	call   DWORD PTR [esi-0x25904236]
  43cbfc:	add    dh,al
  43cbfe:	int3   
  43cbff:	xor    bh,bh
  43cc01:	(bad)  
  43cc02:	mov    edi,0xff00ffff
  43cc07:	dec    ebp
  43cc08:	stc    
  43cc09:	inc    eax
  43cc0a:	mov    esi,0xffdd0025
  43cc0f:	retf   
  43cc10:	int3   
  43cc11:	call   DWORD PTR [edi]
  43cc13:	int3   
  43cc14:	add    bh,bh
  43cc16:	add    BYTE PTR [eax+edi*4-0x64],dl
  43cc1a:	fst    DWORD PTR [edi-0x1]
  43cc1d:	jae    0x43cc1f
  43cc1f:	dec    esi
  43cc20:	inc    DWORD PTR [eax]
  43cc22:	xchg   esi,eax
  43cc23:	(bad)  
  43cc24:	dec    esp
  43cc26:	add    BYTE PTR [ebx+0x5d6c98bb],dh
  43cc2c:	int3   
  43cc2d:	adc    ecx,DWORD PTR [ecx-0x7e000076]
  43cc33:	add    bh,bh
  43cc35:	(bad)  
  43cc36:	jmp    edx
  43cc38:	add    DWORD PTR [edx+0x77],ecx
  43cc3b:	je     0x43cbc0
  43cc3d:	cmp    bh,0x68
  43cc40:	cmp    edi,0xffffff9f
  43cc43:	add    BYTE PTR [ebx+0x74d70000],al
  43cc49:	add    esp,ebp
  43cc4b:	xchg   ebx,eax
  43cc4c:	int3   
  43cc4d:	in     al,dx
  43cc4e:	int3   
  43cc4f:	nop
  43cc50:	add    DWORD PTR [ebx-0xff76ba],0x0
  43cc57:	cmp    al,0x2e
  43cc59:	adc    cl,BYTE PTR [edi-0x28]
  43cc5c:	call   edi
  43cc5e:	dec    DWORD PTR [ebx]
  43cc60:	dec    esp
  43cc62:	rol    DWORD PTR [eax],0xff
  43cc65:	(bad)  
  43cc66:	jmp    DWORD PTR ds:0x5dce1458
  43cc6c:	(bad)  
  43cc6d:	out    dx,eax
  43cc6e:	(bad)  
  43cc6f:	jnp    0x43cc71
  43cc71:	push   edi
  43cc73:	(bad)  
  43cc74:	(bad)  
  43cc75:	inc    DWORD PTR [eax]
  43cc77:	adc    eax,0x4aa05bbc
  43cc7c:	call   DWORD PTR [ebp-0x1]
  43cc7f:	test   eax,0x8300ff00
  43cc84:	dec    esp
  43cc86:	add    BYTE PTR [ecx+edx*8-0x5a],dl
  43cc8a:	cmp    DWORD PTR [ebp-0x2e00ad01],ebp
  43cc90:	inc    DWORD PTR [ebx-0xff7cde]
  43cc96:	call   DWORD PTR [ecx]
  43cc98:	test   al,0x7b
  43cc9a:	ficomp WORD PTR [ecx]
  43cc9c:	add    BYTE PTR [eax],ch
  43cc9e:	call   DWORD PTR [ebx-0x7d]
  43cca1:	xor    DWORD PTR [eax],0xffffffff
  43cca4:	int3   
  43cca5:	int3   
  43cca6:	cmp    DWORD PTR [ebx+0x6031cf1d],0xffffffcc
  43ccad:	sar    bh,cl
  43ccaf:	dec    ebx
  43ccb0:	int3   
  43ccb1:	dec    DWORD PTR [eax-0x7c7c0077]
  43ccb7:	mov    edi,0xc656da32
  43ccbc:	add    BYTE PTR [ebx+0xff11ff],dl
  43ccc2:	dec    ebx
  43ccc3:	(bad)  
  43ccc4:	dec    esp
  43ccc6:	add    BYTE PTR [edi],ah
  43ccc8:	lahf   
  43ccc9:	dec    ecx
  43ccca:	or     BYTE PTR [esi+0x0],bh
  43cccd:	fiadd  WORD PTR [ebx-0x6cffff61]
  43ccd3:	mov    edi,edi
  43ccd5:	mov    edi,edi
  43ccd7:	inc    edi
  43ccd8:	cmp    BYTE PTR [ebx-0x5c000db7],bh
  43ccde:	add    BYTE PTR [edx],cl
  43cce0:	inc    DWORD PTR [ebx-0xff009e]
  43cce6:	(bad)  
  43cce7:	mov    edx,0x1b1785fd
  43ccec:	add    BYTE PTR [eax+0xff8eff],al
  43ccf2:	call   0x6ce1:0xff83ff00
  43ccf9:	pushf  
  43ccfa:	xlat   BYTE PTR ds:[ebx]
  43ccfb:	jb     0x43ccfc
  43ccfd:	inc    esp
  43ccfe:	add    BYTE PTR ds:0xff42ffff,dh
  43cd04:	mov    DWORD PTR [ebx+0x2768c6cc],eax
  43cd0a:	cmc    
  43cd0b:	xor    BYTE PTR [eax],al
  43cd0d:	scas   eax,DWORD PTR es:[edi]
  43cd0e:	add    BYTE PTR [edx],al
  43cd10:	(bad)  
  43cd11:	call   DWORD PTR [eax-0x7c76ff01]
  43cd17:	inc    ebp
  43cd18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43cd19:	mov    ah,0x97
  43cd1b:	xchg   BYTE PTR [ecx-0x7dff54],cl
  43cd21:	add    BYTE PTR [ebp-0x34],bh
  43cd24:	cmp    edi,0xffffffcc
  43cd27:	data16 ja 0x43cd51
  43cd2a:	daa    
  43cd2b:	push   0x5a001a89
  43cd30:	(bad)  
  43cd31:	inc    ebx
  43cd33:	(bad)  
  43cd34:	(bad)  
  43cd35:	inc    DWORD PTR [eax]
  43cd37:	sub    edi,DWORD PTR [edi]
  43cd39:	stos   DWORD PTR es:[edi],eax
  43cd3a:	jb     0x43cd6a
  43cd3c:	dec    DWORD PTR [ebx]
  43cd3e:	sub    DWORD PTR [ecx],0x0
  43cd41:	and    ebp,0xffffffff
  43cd44:	add    BYTE PTR [eax],al
  43cd46:	add    BYTE PTR [edi+0x46d5241f],bh
  43cd4c:	(bad)  
  43cd4d:	jl     0x43cd4e
  43cd4f:	loope  0x43cd51
  43cd51:	add    BYTE PTR [edi+edi*8],dh
  43cd54:	or     esp,0x0
  43cd57:	push   esi
  43cd58:	or     al,0xef
  43cd5a:	push   edx
  43cd5b:	pop    edx
  43cd5c:	(bad)  
  43cd5d:	jmp    0xff83:0xccf7ff
  43cd64:	inc    DWORD PTR [eax]
  43cd66:	jmp    edx
  43cd68:	ins    BYTE PTR es:[edi],dx
  43cd69:	stc    
  43cd6a:	sbb    BYTE PTR [eax],dh
  43cd6c:	int3   
  43cd6d:	adc    BYTE PTR [ebx+0x47ff00c4],al
  43cd73:	inc    DWORD PTR [ebx-0x18760001]
  43cd79:	int3   
  43cd7a:	and    ebx,DWORD PTR [ebx]
  43cd7c:	inc    esi
  43cd7e:	call   DWORD PTR [edi-0x33ff01]
  43cd84:	inc    DWORD PTR [ebx+0x784d2cff]
  43cd8a:	push   ebp
  43cd8b:	jb     0x43cd8c
  43cd8d:	cmp    edi,0x3c
  43cd90:	add    BYTE PTR [ebx+0xff04],al
  43cd96:	(bad)  
  43cd97:	mov    edx,0x969fec96
  43cd9c:	and    DWORD PTR [ebx+0x0],0xffffffde
  43cda0:	add    ah,cl
  43cda2:	mov    DWORD PTR [ecx-0x1eff3301],ecx
  43cda8:	push   ebx
  43cda9:	mov    esp,0x5583af33
  43cdae:	sbb    DWORD PTR [ebx],0xffffffff
  43cdb1:	int3   
  43cdb2:	bound  eax,QWORD PTR [eax]
  43cdb4:	(bad)  
  43cdb5:	inc    DWORD PTR [eax]
  43cdb7:	jb     0x43cd65
  43cdb9:	push   es
  43cdba:	mov    edx,0x836dccbe
  43cdbf:	inc    DWORD PTR [bp+di-0x8f]
  43cdc4:	mov    DWORD PTR [eax],eax
  43cdc6:	add    BYTE PTR [ebx],bh
  43cdc8:	or     al,0x7
  43cdca:	(bad)  
  43cdcb:	jo     0x43cdcc
  43cdcd:	sbb    DWORD PTR [eax],eax
  43cdcf:	dec    ecx
  43cdd0:	mov    edi,edi
  43cdd2:	xchg   edx,eax
  43cdd3:	inc    DWORD PTR [eax]
  43cdd5:	add    BYTE PTR [ebx+0x75cf840f],al
  43cddb:	test   edi,edi
  43cddd:	sbb    BYTE PTR [eax],al
  43cddf:	es add bh,bh
  43cde2:	mov    eax,0x83ff0000
  43cde7:	imul   esi,DWORD PTR ds:0xff1f31bc,0x5a83b5
  43cdf1:	add    BYTE PTR [ebx-0x7d0000],bl
  43cdf7:	int    0x5a
  43cdf9:	adc    bh,dl
  43cdfb:	repz int3 
  43cdfd:	jbe    0x43cdfe
  43cdff:	retf   0x8383
  43ce02:	mov    bh,bh
  43ce04:	inc    DWORD PTR [eax]
  43ce06:	add    al,dh
  43ce08:	inc    ebp
  43ce09:	xchg   edi,eax
  43ce0a:	xor    DWORD PTR [esi+0x28ff9c00],ecx
  43ce10:	add    DWORD PTR [eax],0xffffffb5
  43ce13:	inc    DWORD PTR [eax]
  43ce15:	add    ah,cl
  43ce17:	out    0xd,al
  43ce19:	outs   dx,DWORD PTR ds:[esi]
  43ce1a:	mov    dl,0x6f
  43ce1c:	add    BYTE PTR [ebp-0x34],dh
  43ce1f:	cmp    eax,0xff0effff
  43ce24:	add    bh,bh
  43ce26:	push   esp
  43ce28:	xor    al,0x1d
  43ce2a:	popa   
  43ce2b:	fcos   
  43ce2d:	and    bh,bh
  43ce2f:	xor    al,0xff
  43ce31:	mov    esp,eax
  43ce33:	dec    DWORD PTR [ecx+0x3b13ff00]
  43ce39:	out    0xc6,al
  43ce3b:	data16 add BYTE PTR [ebx],ch
  43ce3e:	add    BYTE PTR [ecx+0x5eff00],ch
  43ce44:	add    bh,bh
  43ce46:	add    ah,ch
  43ce48:	push   cs
  43ce49:	inc    ecx
  43ce4a:	repz dec eax
  43ce4c:	or     DWORD PTR [ebx+eax*4+0x3ffff7a],0xffffffff
  43ce54:	mov    DWORD PTR [eax],eax
  43ce56:	add    BYTE PTR [eax-0x24f8a9c2],al
  43ce5c:	add    BYTE PTR [ecx-0x1],cl
  43ce5f:	push   ds
  43ce60:	(bad)  
  43ce61:	dec    DWORD PTR [ebp-0x1]
  43ce64:	add    bh,bh
  43ce66:	add    dh,ah
  43ce68:	add    DWORD PTR [edi-0x3],esi
  43ce6b:	sub    edi,edi
  43ce6d:	leave  
  43ce6e:	and    edx,0x0
  43ce71:	add    al,bh
  43ce73:	add    bh,bh
  43ce75:	add    DWORD PTR [eax],0x60
  43ce78:	fwait
  43ce79:	in     eax,0xd2
  43ce7b:	xchg   esp,ecx
  43ce7d:	jb     0x43ce02
  43ce7f:	addr16 int3 
  43ce81:	add    BYTE PTR [eax-0x34],bh
  43ce84:	add    bh,bh
  43ce86:	(bad)  
  43ce87:	mov    ebp,0x84aaea3b
  43ce8c:	add    BYTE PTR [eax],dl
  43ce8e:	jmp    DWORD PTR [ebp-0x1]
  43ce91:	add    BYTE PTR [ebx-0x1],dl
  43ce94:	add    bh,bh
  43ce96:	add    BYTE PTR [edx],bh
  43ce98:	pop    ecx
  43ce99:	cmp    BYTE PTR [ebp+0x32],dh
  43ce9c:	(bad)  
  43ce9d:	cli    
  43ce9e:	add    BYTE PTR [eax+0xebffff],bh
  43cea4:	dec    DWORD PTR [ecx+0x72be3ff]
  43ceaa:	lds    edi,FWORD PTR ds:0xe00bfff
  43ceb0:	add    bh,bh
  43ceb2:	sbb    edi,edi
  43ceb4:	int3   
  43ceb5:	mov    edi,edi
  43ceb7:	mov    WORD PTR [esi-0xc7dc5b],gs
  43cebd:	cmp    bh,bh
  43cebf:	sar    edi,1
  43cec1:	cmp    DWORD PTR [ecx-0x7d],0xffffff89
  43cec5:	int3   
  43cec6:	inc    esp
  43cec8:	inc    esi
  43cec9:	aad    0xe9
  43cecb:	xor    cl,ah
  43cecd:	adc    bh,bh
  43cecf:	fadd   QWORD PTR [eax]
  43ced1:	int3   
  43ced2:	inc    DWORD PTR [eax]
  43ced4:	inc    DWORD PTR [eax]
  43ced6:	push   eax
  43ced8:	or     DWORD PTR [edx-0x59],0xfffffff5
  43cedc:	add    DWORD PTR [esi+0x0],0xffffffd2
  43cee0:	cmp    edi,0xffffffc4
  43cee3:	add    BYTE PTR [ebx-0x4d9e0100],al
  43cee9:	sub    DWORD PTR [eax],0x8327cc6c
  43ceef:	cmp    bh,bh
  43cef1:	jmp    FWORD PTR [edi]
  43cef3:	cmp    edi,0x0
  43cef6:	jmp    DWORD PTR [ebx]
  43cef8:	in     eax,dx
  43cef9:	sbb    eax,eax
  43cefb:	pop    ds
  43cefc:	dec    DWORD PTR [esi-0x7d]
  43ceff:	retf   0xff00
  43cf02:	loope  0x43cf03
  43cf04:	add    ah,cl
  43cf06:	add    cl,ch
  43cf08:	adc    esp,DWORD PTR [edx]
  43cf0a:	cdq    
  43cf0b:	xchg   esp,eax
  43cf0c:	push   esp
  43cf0e:	add    BYTE PTR [edx+0x1cffff],al
  43cf14:	(bad)  
  43cf15:	(bad)  
  43cf16:	inc    DWORD PTR [edx+0x41]
  43cf19:	add    edx,DWORD PTR [edx]
  43cf1b:	ud0    ecx,DWORD PTR [ebp-0xfff000]
  43cf22:	jecxz  0x43cf24
  43cf24:	add    DWORD PTR [ebx-0x65777f7d],0x7a
  43cf2b:	adc    eax,0x6500b389
  43cf30:	mov    DWORD PTR [ebx+0xccff4c],eax
  43cf36:	add    BYTE PTR [ecx-0x7f],ch
  43cf39:	add    ebx,esp
  43cf3b:	push   ecx
  43cf3c:	add    BYTE PTR [ecx],al
  43cf3e:	call   DWORD PTR [eax-0x1]
  43cf41:	int3   
  43cf42:	inc    esi
  43cf43:	add    BYTE PTR [eax],al
  43cf45:	inc    DWORD PTR [ebx+0x5b9245df]
  43cf4b:	test   esp,0xfc891e
  43cf51:	add    BYTE PTR [ebp+0x0],al
  43cf54:	or     esp,0x0
  43cf57:	pusha  
  43cf58:	mov    bl,0x9b
  43cf5a:	shl    esi,0xff
  43cf5d:	mov    edi,0xffff6400
  43cf62:	mov    WORD PTR [eax],es
  43cf64:	(bad)  
  43cf65:	inc    DWORD PTR [eax]
  43cf67:	mov    ebp,0x4e4cf069
  43cf6c:	jmp    ebx
  43cf6e:	call   DWORD PTR [ebx]
  43cf70:	(bad)  
  43cf71:	dec    edi
  43cf73:	dec    DWORD PTR [ecx+0x2c6fffff]
  43cf79:	pusha  
  43cf7a:	mov    ebx,0x1aff9c
  43cf7f:	fs int3 
  43cf81:	jmp    FWORD PTR ds:0xffffcc
  43cf87:	lock jg 0x43cff2
  43cf8a:	sub    cl,dh
  43cf8c:	add    BYTE PTR [edi],bl
  43cf8e:	inc    DWORD PTR [ebx+eax*4-0x7cfff17d]
  43cf95:	add    BYTE PTR [eax],al
  43cf97:	adc    eax,edi
  43cf99:	push   0x95ffb2de
  43cf9e:	inc    DWORD PTR [eax+0x4883ff]
  43cfa4:	add    BYTE PTR [eax],al
  43cfa6:	int3   
  43cfa7:	outs   dx,BYTE PTR ds:[esi]
  43cfa8:	scas   eax,DWORD PTR es:[edi]
  43cfa9:	lock mov edx,eax
  43cfac:	add    BYTE PTR [esi-0x76006a01],ch
  43cfb2:	or     cl,ah
  43cfb4:	add    DWORD PTR [eax],0xffffffff
  43cfb7:	mov    gs,WORD PTR [edi-0x7c0a1d52]
  43cfbd:	repz add DWORD PTR [ecx+0xce0000],0xffffffff
  43cfc5:	int3   
  43cfc6:	xor    DWORD PTR [ebp+0x2],0xffffff83
  43cfca:	ss pop esp
  43cfcc:	call   FWORD PTR [esi-0x1]
  43cfcf:	idiv   edi
  43cfd1:	call   FWORD PTR [edi-0x1]
  43cfd4:	(bad)  
  43cfd5:	(bad)  
  43cfd6:	call   FWORD PTR [ebx+0x4322414e]
  43cfdc:	mov    ebx,ebx
  43cfde:	jmp    FWORD PTR [esi]
  43cfe0:	add    bh,bh
  43cfe2:	mov    edi,?
  43cfe4:	(bad)  
  43cfe5:	inc    DWORD PTR [ebx-0x49e382c6]
  43cfeb:	(bad)
  43cfef:	pop    ecx
  43cff0:	add    bh,bh
  43cff2:	cs cmp edi,0x0
  43cff6:	mov    DWORD PTR [edi-0x12],esp
  43cff9:	xor    BYTE PTR [edx+eax*4+0x0],al
  43cffd:	mov    al,0xff
  43cfff:	mov    eax,ds:0xff05ffff
  43d004:	add    bh,bh
  43d006:	int3   
  43d007:	push   eax
  43d008:	lods   eax,DWORD PTR ds:[esi]
  43d009:	scas   eax,DWORD PTR es:[edi]
  43d00a:	(bad)  
  43d00b:	or     al,0xff
  43d00d:	mov    esp,0xff001d83
  43d012:	rol    BYTE PTR [ebx+0x1ff8383],1
  43d018:	mov    BYTE PTR [edx+0x65ff78f5],0xff
  43d01f:	xor    eax,0xd8ffff
  43d024:	mov    esp,ecx
  43d026:	call   edi
  43d028:	sub    eax,0xffaace1b
  43d02d:	pop    edi
  43d02e:	push   DWORD PTR [edi]
  43d030:	add    DWORD PTR [eax],0x61
  43d033:	add    BYTE PTR [eax],al
  43d035:	add    BYTE PTR [ebx+0x538ea6fa],al
  43d03b:	rol    BYTE PTR [ebx+0xe20094],cl
  43d041:	jmp    FWORD PTR [eax+0xffffff]
  43d047:	bound  esp,QWORD PTR [esi+0x4e]
  43d04a:	enter  0xff08,0x98
  43d04e:	add    cl,dl
  43d050:	cmp    edi,0x6f
  43d053:	(bad)  
  43d054:	(bad)  
  43d055:	dec    esp
  43d057:	xchg   ebx,eax
  43d058:	rcr    DWORD PTR [edi],cl
  43d05a:	invd   
  43d05c:	add    BYTE PTR [edi-0x1],al
  43d05f:	inc    esi
  43d060:	add    BYTE PTR [eax],al
  43d062:	test   BYTE PTR [ecx+0xdff0083],cl
  43d068:	and    DWORD PTR [ebx-0x5d007dfe],esi
  43d06e:	int3   
  43d06f:	mov    edx,0xfffa00ff
  43d074:	add    bh,bh
  43d076:	add    BYTE PTR [edi],dh
  43d078:	or     eax,0x837031d3
  43d07d:	push   ebp
  43d07e:	call   FWORD PTR [esi-0x769e0100]
  43d084:	(bad)  
  43d085:	(bad)  
  43d086:	jmp    ebx
  43d088:	mov    dl,0x7b
  43d08a:	ret    0x83b9
  43d08d:	cmp    edi,edi
  43d08f:	cwde   
  43d090:	(bad)  
  43d091:	call   FWORD PTR [ecx-0x1]
  43d094:	add    bh,bh
  43d096:	add    DWORD PTR [ebp-0x48cd644e],0x0
  43d09d:	sar    bh,0xd4
  43d0a0:	dec    DWORD PTR [ecx-0x337c00b3]
  43d0a6:	sbb    DWORD PTR [ebx-0x2d241cdf],0xffffffff
  43d0ad:	popa   
  43d0ae:	(bad)  
  43d0af:	jge    0x43d0b0
  43d0b1:	jmp    DWORD PTR [eax]
  43d0b3:	inc    DWORD PTR [eax]
  43d0b5:	(bad)  
  43d0b6:	jmp    FWORD PTR ds:0x795d4200
  43d0bc:	call   FWORD PTR [eax+eax*1]
  43d0bf:	mov    ecx,0xff37ffcc
  43d0c4:	(bad)  
  43d0c5:	(bad)  
  43d0c6:	call   DWORD PTR [ecx+0x21]
  43d0c9:	shl    BYTE PTR [ebx-0x34],0x83
  43d0cd:	fs mov ebx,ebx
  43d0d0:	add    DWORD PTR [ebx-0xff7c87],0xffffff89
  43d0d7:	mov    edx,0x437c6322
  43d0dc:	call   FWORD PTR [eax+eax*1]
  43d0df:	int3   
  43d0e0:	mov    DWORD PTR [ebx-0x7cff3395],eax
  43d0e6:	call   FWORD PTR [ebx-0xb]
  43d0e9:	mov    ds:0x9eff5eb6,al
  43d0ee:	push   DWORD PTR [edi+0x1689ff]
  43d0f4:	mov    esp,ecx
  43d0f6:	(bad)  
  43d0f7:	(bad)  [edi-0x7c47831b]
  43d0fd:	inc    eax
  43d0fe:	jmp    DWORD PTR [eax+0x0]
  43d101:	add    BYTE PTR [eax+0x0],ah
  43d104:	inc    DWORD PTR [eax]
  43d106:	call   DWORD PTR [ecx-0x35016c47]
  43d10c:	push   DWORD PTR [edx-0x34]
  43d10f:	and    BYTE PTR [eax],al
  43d111:	add    BYTE PTR [eax-0xff0100],ah
  43d117:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43d118:	imul   esp,DWORD PTR [ecx],0xffffff82
  43d11b:	add    BYTE PTR ds:[edx-0x7d],ch
  43d11f:	cs or  esp,0xffffffbd
  43d123:	or     esp,0xffffff83
  43d126:	add    BYTE PTR [esi],dl
  43d128:	cmp    bh,dl
  43d12a:	imul   ebp,DWORD PTR [esi+0xb8351cc],0xfff9ff00
  43d134:	add    BYTE PTR [eax],al
  43d136:	(bad)  
  43d137:	cmp    al,0x7b
  43d139:	outs   dx,DWORD PTR ds:[esi]
  43d13a:	sub    bh,BYTE PTR [ecx-0x7d]
  43d13d:	push   es
  43d13e:	adc    DWORD PTR [edi-0x28ff01],0xffffffff
  43d145:	inc    DWORD PTR [eax]
  43d147:	(bad)  
  43d148:	pop    eax
  43d149:	(bad)  
  43d14a:	call   0xff5a:0xff8a0068
  43d151:	mov    DWORD PTR [ecx-0x7d],eax
  43d154:	cmp    edi,0xffffffff
  43d157:	inc    ecx
  43d158:	or     dh,bh
  43d15a:	add    eax,0xff9dff82
  43d15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d160:	inc    DWORD PTR [eax]
  43d162:	ret    
  43d163:	add    BYTE PTR [eax],al
  43d165:	mov    edi,edi
  43d167:	ret    0x6979
  43d16a:	sbb    dh,BYTE PTR [eax-0x1]
  43d16d:	mov    edi,edi
  43d16f:	mov    bl,0x0
  43d171:	sub    DWORD PTR [esi],0xffffff83
  43d174:	add    BYTE PTR [eax],al
  43d176:	call   DWORD PTR [ecx+eiz*1+0x42]
  43d17a:	or     esi,edi
  43d17c:	(bad)  
  43d17d:	cmp    al,BYTE PTR [eax]
  43d17f:	cmp    al,0x89
  43d181:	call   DWORD PTR [edi+edi*8-0x1]
  43d185:	(bad)  
  43d186:	jmp    FWORD PTR [ebx-0x5f301a2a]
  43d18c:	int3   
  43d18d:	adc    al,0x83
  43d18f:	inc    esp
  43d190:	int3   
  43d191:	inc    DWORD PTR [ebx+eax*4]
  43d194:	inc    DWORD PTR [eax]
  43d196:	jmp    DWORD PTR [ecx+0x1cd44ddb]
  43d19c:	add    BYTE PTR [esi-0x34],cl
  43d19f:	mov    eax,DWORD PTR [eax]
  43d1a1:	add    BYTE PTR [eax],dh
  43d1a3:	dec    esp
  43d1a5:	int3   
  43d1a6:	or     DWORD PTR [ecx+0x66863df7],0x0
  43d1ad:	jns    0x43d1ae
  43d1af:	mov    bl,0xff
  43d1b1:	int3   
  43d1b2:	loop   0x43d1b4
  43d1b4:	(bad)  
  43d1b5:	(bad)  
  43d1b6:	inc    DWORD PTR [ebp-0x4e]
  43d1b9:	retf   0xb68
  43d1bc:	xor    DWORD PTR [ecx-0x2700],0xfffffff6
  43d1c3:	add    BYTE PTR [eax],al
  43d1c5:	(bad)  
  43d1c6:	dec    DWORD PTR [ebx+ecx*4+0x5c]
  43d1ca:	mov    edx,0x83bf0062
  43d1cf:	repnz (bad) 
  43d1d1:	inc    esp
  43d1d3:	int3   
  43d1d4:	add    BYTE PTR [eax],al
  43d1d6:	add    bl,al
  43d1d8:	loopne 0x43d1a9
  43d1da:	cmp    edx,esi
  43d1dc:	int3   
  43d1dd:	stos   BYTE PTR es:[edi],al
  43d1de:	jmp    FWORD PTR [ecx-0x1]
  43d1e1:	or     DWORD PTR [esi+0x0],0xffffffff
  43d1e5:	inc    DWORD PTR [ebx+0x777debd7]
  43d1eb:	xchg   ecx,eax
  43d1ec:	(bad)  
  43d1ed:	jmp    0xff8b:0xff00ecff
  43d1f4:	add    DWORD PTR [eax],0x0
  43d1f7:	add    al,0x94
  43d1fa:	mov    ebp,0xffc3ff0a
  43d1ff:	xor    BYTE PTR [eax],al
  43d201:	mov    DWORD PTR [eax-0x7cff7c77],eax
  43d207:	adc    BYTE PTR [ecx-0x7ceb9258],ah
  43d20d:	test   al,0x83
  43d20f:	sar    edi,1
  43d211:	(bad)  
  43d212:	cmp    DWORD PTR [eax],eax
  43d214:	inc    DWORD PTR [ebx+0xf31f383]
  43d21a:	push   es
  43d21b:	mov    dl,0x0
  43d21d:	jbe    0x43d1a2
  43d21f:	cli    
  43d220:	inc    DWORD PTR [ebx-0xff00b4]
  43d226:	inc    DWORD PTR ds:0x4a1e85f4
  43d22c:	push   DWORD PTR [ebp+0x8f83]
  43d232:	add    edi,edi
  43d234:	cmp    edi,0x0
  43d237:	pushf  
  43d238:	into   
  43d239:	ja     0x43d23a
  43d23b:	inc    DWORD PTR [eax]
  43d23d:	(bad)  
  43d23e:	(bad)  
  43d23f:	dec    esp
  43d241:	inc    DWORD PTR [ecx+edx*8-0x34]
  43d245:	mov    DWORD PTR [esp+ebx*8+0x1a8b89ff],ebp
  43d24c:	add    bh,bh
  43d24e:	and    esi,eax
  43d250:	add    bh,bh
  43d252:	cmp    edi,0x3df883ff
  43d258:	add    BYTE PTR [eax],al
  43d25a:	xor    DWORD PTR [ecx-0x1],ebp
  43d25d:	jmp    eax
  43d25f:	xchg   esp,eax
  43d260:	dec    DWORD PTR [ecx-0x7cffecaa]
  43d266:	push   ds
  43d267:	cwde   
  43d268:	inc    DWORD PTR [eax]
  43d26a:	cmp    eax,0x1cff0054
  43d26f:	dec    eax
  43d270:	(bad)  
  43d271:	dec    DWORD PTR [edx-0x357c7c4e]
  43d277:	push   es
  43d278:	add    BYTE PTR [eax],al
  43d27a:	pop    esp
  43d27b:	sbb    bh,bh
  43d27d:	mov    DWORD PTR [edx],ecx
  43d27f:	dec    edx
  43d280:	inc    DWORD PTR [eax]
  43d282:	lods   al,BYTE PTR ds:[si]
  43d284:	int3   
  43d285:	jmp    DWORD PTR [edi-0x32]
  43d288:	or     DWORD PTR [ecx-0xff421a],0xffffffde
  43d28f:	push   ebx
  43d290:	add    BYTE PTR [ebx-0x7c7c7793],al
  43d296:	mov    dh,0x70
  43d298:	(bad)  
  43d299:	call   DWORD PTR [eax+0x4700ff8d]
  43d29f:	mov    WORD PTR [eax],es
  43d2a1:	dec    DWORD PTR [eax]
  43d2a3:	jecxz  0x43d228
  43d2a5:	(bad)  
  43d2a6:	cmp    eax,0xfbffff1f
  43d2ab:	outs   dx,BYTE PTR ds:[esi]
  43d2ac:	add    BYTE PTR [eax],al
  43d2ae:	pop    ebx
  43d2af:	mov    ebp,0x8dc38300
  43d2b4:	(bad)  
  43d2b5:	(bad)  
  43d2b6:	mov    esi,0x2e00ccdb
  43d2bb:	sbb    eax,0xda5fffcc
  43d2c0:	inc    DWORD PTR [ebx+0x8f6]
  43d2c6:	push   ebp
  43d2c7:	sub    eax,0xc9f0ff00
  43d2cc:	cmp    edi,0x11
  43d2cf:	inc    ebx
  43d2d0:	(bad)  
  43d2d1:	(bad)  
  43d2d2:	jl     0x43d320
  43d2d4:	inc    DWORD PTR [eax]
  43d2d6:	(bad)  
  43d2d7:	cs int3 
  43d2d9:	adc    DWORD PTR [edi],0xffffffcd
  43d2dc:	mov    esp,ecx
  43d2de:	daa    
  43d2df:	inc    DWORD PTR fs:[eax]
  43d2e2:	jp     0x43d267
  43d2e4:	inc    DWORD PTR [ebx-0x335db9]
  43d2ea:	fnop   
  43d2ec:	add    BYTE PTR [eax],al
  43d2ee:	sbb    DWORD PTR [edi-0x74857700],ecx
  43d2f4:	mov    edi,edi
  43d2f6:	aad    0xb4
  43d2f8:	add    BYTE PTR [ecx-0x7cffc1b9],cl
  43d2fe:	inc    esi
  43d2ff:	(bad)  
  43d300:	int3   
  43d301:	add    BYTE PTR [edx-0xd00000a],cl
  43d307:	idiv   edi
  43d309:	(bad)  
  43d30a:	mov    esp,0x6bcc00c7
  43d30f:	dec    ecx
  43d310:	or     DWORD PTR [ecx-0x7c004c9a],0xffffffe2
  43d317:	stc    
  43d318:	mov    edi,edi
  43d31a:	push   ecx
  43d31b:	inc    edi
  43d31c:	add    BYTE PTR [ebx+0x83d42c],al
  43d322:	mov    esi,0x68ffffb3
  43d327:	xchg   edi,edi
  43d329:	push   ebp
  43d32b:	lahf   
  43d32c:	inc    DWORD PTR [eax]
  43d32e:	mov    ds,WORD PTR [edi+edi*8-0x1]
  43d332:	js     0x43d310
  43d334:	inc    DWORD PTR [ebx-0xac85]
  43d33a:	ds inc edx
  43d33c:	add    BYTE PTR [eax],al
  43d33e:	xlat   BYTE PTR ds:[ebx]
  43d33f:	lods   eax,DWORD PTR ds:[esi]
  43d340:	add    BYTE PTR [ecx+0xff5fc0],cl
  43d346:	dec    ebp
  43d347:	ret    
  43d348:	add    BYTE PTR [eax],al
  43d34a:	sbb    DWORD PTR [ebx],ebx
  43d34c:	add    BYTE PTR [ecx+0xffd9f7],cl
  43d352:	cmp    ebx,DWORD PTR [ebx+0x695fccff]
  43d358:	(bad)  
  43d359:	call   FWORD PTR [eax+0x78]
  43d35c:	(bad)  
  43d35d:	inc    DWORD PTR [esp+ebx*2]
  43d360:	int3   
  43d361:	add    ch,bh
  43d363:	adc    BYTE PTR [ecx-0x47177d],cl
  43d369:	push   DWORD PTR [ecx-0x4]
  43d36c:	(bad)  
  43d36d:	jmp    DWORD PTR [esi+0x2]
  43d370:	(bad)  
  43d371:	jmp    DWORD PTR [edi-0x30ffff5d]
  43d377:	in     eax,dx
  43d378:	mov    esp,ecx
  43d37a:	adc    BYTE PTR [ebp+0x0],0xff
  43d37e:	jp     0x43d322
  43d380:	add    bh,bh
  43d382:	add    edx,eax
  43d384:	inc    DWORD PTR [eax]
  43d386:	mov    dl,0x5e
  43d388:	inc    DWORD PTR [ebx+0xffb6d3]
  43d38e:	ins    BYTE PTR es:[edi],dx
  43d38f:	pop    edx
  43d390:	add    BYTE PTR [ecx+0xa4e0],cl
  43d396:	pop    esi
  43d397:	cmp    BYTE PTR [eax],al
  43d399:	add    BYTE PTR [eax+0x17],dh
  43d39c:	int3   
  43d39d:	mov    DWORD PTR ds:0xedffffef,esi
  43d3a3:	or     ecx,DWORD PTR [ecx+0xed9eff]
  43d3a9:	mov    DWORD PTR [eax+0x5b],edx
  43d3ac:	add    bh,bh
  43d3ae:	jbe    0x43d414
  43d3b0:	(bad)  
  43d3b1:	jmp    DWORD PTR [esi]
  43d3b3:	dec    edi
  43d3b4:	inc    DWORD PTR [eax]
  43d3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d3b7:	imul   eax,DWORD PTR [eax],0xefdbff
  43d3bd:	inc    ecx
  43d3bf:	sub    eax,0x2508ffcc
  43d3c4:	inc    DWORD PTR [ebx-0x7607d1]
  43d3ca:	sub    DWORD PTR [esi+0x5e9effff],esp
  43d3d0:	(bad)  
  43d3d1:	jmp    DWORD PTR [ecx*4+0x883cc00]
  43d3d8:	(bad)  
  43d3d9:	inc    esi
  43d3db:	xchg   ebp,eax
  43d3dc:	inc    DWORD PTR [ebx-0x7c00c4a2]
  43d3e2:	dec    ecx
  43d3e3:	cmp    bh,0x89
  43d3e6:	fst    DWORD PTR [edx+0x0]
  43d3e9:	call   FWORD PTR [esi+0x10]
  43d3ec:	cmp    edi,0x38
  43d3ef:	jnp    0x43d374
  43d3f1:	push   DWORD PTR [esi+edx*1+0x20d4ccff]
  43d3f8:	cmp    edi,0xffffff8c
  43d3fb:	mov    al,ds:0x102affff
  43d400:	add    DWORD PTR [eax],0xd
  43d403:	and    DWORD PTR [ecx-0x33e86234],ecx
  43d409:	call   DWORD PTR [esi]
  43d40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d40c:	int3   
  43d40d:	jmp    FWORD PTR [esi-0x4b7c00b7]
  43d413:	aam    0xff
  43d415:	add    BYTE PTR [edi],bl
  43d417:	iret   
  43d418:	inc    DWORD PTR [ebx-0x33006892]
  43d41e:	inc    eax
  43d41f:	push   0x72effff
  43d424:	inc    DWORD PTR [eax]
  43d426:	jle    0x43d488
  43d428:	add    BYTE PTR [eax],al
  43d42a:	xlat   BYTE PTR ds:[ebx]
  43d42b:	add    bh,bh
  43d42d:	(bad)  
  43d42e:	mov    eax,0xc3ff00f2
  43d433:	jmp    0x63fea038
  43d438:	inc    DWORD PTR [ebx+0xcc6b8a]
  43d43e:	test   eax,0x3c83ffd5
  43d443:	mov    DWORD PTR [eax],eax
  43d445:	call   FWORD PTR [edx+0x8]
  43d448:	add    BYTE PTR [eax],al
  43d44a:	mul    BYTE PTR [edi]
  43d44c:	add    bh,bh
  43d44e:	xchg   ebx,eax
  43d44f:	jb     0x43d3d4
  43d451:	call   DWORD PTR [ecx-0x5c]
  43d454:	add    bh,bh
  43d456:	add    eax,0x1600ffca
  43d45b:	mov    ch,0xff
  43d45d:	mov    ebp,eax
  43d45f:	jnp    0x43d460
  43d461:	(bad)  
  43d462:	cmp    cl,BYTE PTR [ebx-0x77]
  43d465:	add    dl,al
  43d467:	add    DWORD PTR [bx+si],0xffffff8e
  43d46b:	out    dx,eax
  43d46c:	mov    edi,edi
  43d46e:	lods   eax,DWORD PTR ds:[esi]
  43d46f:	in     eax,0xcc
  43d471:	jmp    DWORD PTR [ebx+ebp*2-0x7d]
  43d475:	call   DWORD PTR [edx+0x11ffff9e]
  43d47b:	in     al,0x0
  43d47d:	jmp    DWORD PTR [edx+0x1bffff45]
  43d483:	test   DWORD PTR [eax],0xff2ca300
  43d489:	add    BYTE PTR [ebp-0x310000c6],cl
  43d48f:	cmp    al,0xff
  43d491:	call   FWORD PTR [ebx]
  43d493:	and    eax,0xf16000ff
  43d498:	inc    DWORD PTR [eax]
  43d49a:	sar    DWORD PTR [eax+0x1abd0000],0xff
  43d4a1:	int3   
  43d4a2:	setb   BYTE PTR [eax]
  43d4a5:	sub    DWORD PTR [ebx-0x1],0xffffffff
  43d4a9:	int3   
  43d4aa:	shl    BYTE PTR [edi-0xf5c0001],cl
  43d4b0:	inc    DWORD PTR [eax]
  43d4b2:	push   ss
  43d4b3:	rol    BYTE PTR [eax],cl
  43d4b5:	(bad)  
  43d4b6:	stc    
  43d4b7:	je     0x43d4b8
  43d4b9:	add    BYTE PTR [esi-0x21ff00d6],cl
  43d4bf:	cmp    eax,DWORD PTR [eax]
  43d4c1:	jmp    FWORD PTR [eax]
  43d4c3:	idiv   bh
  43d4c5:	call   FWORD PTR [edx+0xa]
  43d4c8:	(bad)  
  43d4c9:	jmp    DWORD PTR [ecx+edx*8+0x3bf9ffff]
  43d4d0:	(bad)  
  43d4d1:	call   DWORD PTR [edi]
  43d4d3:	call   0x159ed5d7
  43d4d8:	dec    DWORD PTR [ecx+0x84fb]
  43d4de:	or     ebp,DWORD PTR [edi+0x47bf00ff]
  43d4e4:	mov    DWORD PTR [ebx+0xff2e8e],eax
  43d4ea:	jmp    0x9c44d3f5
  43d4ef:	adc    edi,edi
  43d4f1:	add    ah,ah
  43d4f3:	mov    dl,0xff
  43d4f5:	adc    DWORD PTR [eax-0x2effff9f],0xffffffd4
  43d4fc:	(bad)  
  43d4fd:	(bad)  
  43d4fe:	mov    edi,0xbfff00e7
  43d503:	ins    DWORD PTR es:[edi],dx
  43d504:	(bad)  
  43d505:	call   DWORD PTR [ebx]
  43d507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d508:	int3   
  43d509:	jmp    DWORD PTR [edx]
  43d50b:	mov    ebx,0xc27ffff
  43d510:	inc    DWORD PTR [eax]
  43d512:	popf   
  43d513:	push   0xffffffff
  43d515:	add    dl,dl
  43d517:	(bad)  
  43d518:	inc    DWORD PTR [eax]
  43d51a:	stos   DWORD PTR es:[edi],eax
  43d51b:	test   eax,0xf77aff83
  43d520:	add    ah,cl
  43d522:	mov    cl,0xa4
  43d524:	(bad)  
  43d525:	call   FWORD PTR [eax]
  43d527:	inc    edx
  43d528:	mov    DWORD PTR [ecx-0x76009bb0],ecx
  43d52e:	mov    esp,0xff83ff3b
  43d533:	and    DWORD PTR [eax],eax
  43d535:	add    BYTE PTR [ebx-0x71],bl
  43d538:	add    bh,bh
  43d53a:	jno    0x43d531
  43d53c:	add    DWORD PTR [ebx+0xebe6],0xffffffb2
  43d543:	jns    0x43d544
  43d545:	jmp    FWORD PTR [ebp-0x6e]
  43d548:	inc    DWORD PTR [ebx-0x7c004d3d]
  43d54e:	imul   edi,DWORD PTR [edi],0xffffffff
  43d551:	int3   
  43d552:	dec    ecx
  43d553:	push   edx
  43d554:	(bad)  
  43d555:	inc    DWORD PTR [ecx-0x76ff005f]
  43d55b:	push   0xffffffff
  43d55d:	add    bl,cl
  43d55f:	push   ecx
  43d560:	(bad)  
  43d561:	jmp    eax
  43d563:	sahf   
  43d564:	inc    DWORD PTR [eax]
  43d566:	jbe    0x43d567
  43d568:	add    BYTE PTR [ebx+0xa5fc],al
  43d56e:	push   edx
  43d56f:	cmp    eax,DWORD PTR [ebx-0xa9be7d]
  43d575:	(bad)  
  43d576:	fistp  QWORD PTR [edi]
  43d578:	inc    DWORD PTR [eax]
  43d57a:	aaa    
  43d57b:	pop    DWORD PTR [eax]
  43d57d:	call   FWORD PTR [esi+ebx*8-0x1]
  43d581:	cmp    DWORD PTR [ebx+0x2f],0xffffffff
  43d585:	or     DWORD PTR [ecx+edi*2+0x6479ff00],0xffffffff
  43d58d:	add    DWORD PTR [esi],0xffffffd9
  43d590:	mov    edi,edi
  43d592:	pop    es
  43d593:	sahf   
  43d594:	(bad)  
  43d595:	dec    DWORD PTR [esi-0x66]
  43d598:	dec    esp
  43d59a:	mov    ds:0x8f89ff44,eax
  43d59f:	and    edi,edi
  43d5a1:	call   edx
  43d5a3:	xchg   DWORD PTR [ecx+0xcfb1ff],ecx
  43d5a9:	add    BYTE PTR [edx],bl
  43d5ab:	outs   dx,BYTE PTR ds:[esi]
  43d5ac:	dec    DWORD PTR [ecx-0x339e95]
  43d5b2:	adc    BYTE PTR [edi],bl
  43d5b4:	add    BYTE PTR [eax],al
  43d5b6:	sub    DWORD PTR [edx+0x4a3eff00],ebp
  43d5bc:	add    BYTE PTR [eax],al
  43d5be:	fs or  bh,bh
  43d5c1:	add    BYTE PTR [edx+0x3ccc832f],ch
  43d5c7:	into   
  43d5c8:	inc    DWORD PTR [ebx-0x9e1a]
  43d5ce:	adc    BYTE PTR [eax-0x7d],al
  43d5d1:	add    BYTE PTR [edx+0x6e00ff1d],al
  43d5d7:	pop    edx
  43d5d8:	inc    DWORD PTR [ebx+0x1e0e]
  43d5de:	push   ds
  43d5df:	lahf   
  43d5e0:	add    bh,bh
  43d5e2:	push   DWORD PTR [ecx+0x497900ff]
  43d5e8:	mov    DWORD PTR [ecx-0x7cffd79b],ecx
  43d5ee:	jns    0x43d639
  43d5f0:	(bad)  
  43d5f1:	jmp    FWORD PTR [edx-0x7f]
  43d5f4:	inc    DWORD PTR [eax]
  43d5f6:	mov    eax,ds:0xa6000077
  43d5fb:	pop    ecx
  43d5fc:	cmp    edi,0xffffffc2
  43d5ff:	stos   DWORD PTR es:[edi],eax
  43d600:	inc    DWORD PTR [eax]
  43d602:	inc    eax
  43d603:	jno    0x43d604
  43d605:	add    BYTE PTR [edx],ah
  43d607:	sar    bh,0x83
  43d60a:	aas    
  43d60b:	out    0x0,eax
  43d60d:	add    BYTE PTR [eax+eiz*8+0x0],al
  43d611:	add    BYTE PTR [esi+0x2effff68],dh
  43d617:	fild   WORD PTR [eax]
  43d619:	add    BYTE PTR [esi],cl
  43d61b:	outs   dx,BYTE PTR ds:[esi]
  43d61c:	inc    DWORD PTR [eax]
  43d61e:	xchg   edx,eax
  43d61f:	mov    al,0xff
  43d621:	mov    DWORD PTR [ecx+0x5f],ecx
  43d624:	add    bh,bh
  43d626:	and    esp,0x1aaf0083
  43d62c:	(bad)  
  43d62d:	call   FWORD PTR [ecx]
  43d62f:	(bad)  
  43d630:	inc    DWORD PTR [ebx-0xfd62]
  43d636:	dec    ebp
  43d637:	idiv   edi
  43d639:	mov    DWORD PTR [ebp-0x7e],esp
  43d63c:	(bad)  
  43d63d:	jmp    DWORD PTR [edi+0x3]
  43d640:	dec    DWORD PTR [ecx-0xad32]
  43d646:	pop    ds
  43d647:	dec    ebx
  43d648:	int3   
  43d649:	(bad)  
  43d64a:	jmp    0xff5a:0xcbffff44
  43d651:	add    ah,ah
  43d653:	mov    eax,DWORD PTR [eax]
  43d655:	call   DWORD PTR [ebx+eax*2]
  43d658:	add    BYTE PTR [ecx-0x337649e4],cl
  43d65e:	test   al,0xb9
  43d660:	add    bh,bh
  43d662:	sbb    eax,0x7e83cc26
  43d667:	retf   0xcc89
  43d66a:	and    eax,0x3683ccaa
  43d66f:	in     eax,0xcc
  43d671:	int3   
  43d672:	pop    es
  43d673:	inc    ecx
  43d674:	add    ah,cl
  43d676:	inc    edi
  43d677:	jecxz  0x43d602
  43d679:	int3   
  43d67a:	inc    esp
  43d67b:	push   ebx
  43d67c:	dec    esp
  43d67e:	add    al,BYTE PTR [edi-0x49a0001]
  43d684:	mov    edi,edi
  43d686:	jp     0x43d675
  43d688:	dec    esp
  43d68a:	add    al,0xcb
  43d68c:	inc    DWORD PTR [ebx-0x9146]
  43d692:	lock xchg esp,eax
  43d694:	inc    DWORD PTR [eax]
  43d696:	std    
  43d697:	mov    ch,0x89
  43d699:	sbb    DWORD PTR ds:0x110000ce,0xffffff99
  43d6a0:	dec    DWORD PTR [ecx-0xffa677]
  43d6a6:	aad    0xa0
  43d6a8:	add    BYTE PTR [eax],al
  43d6aa:	test   DWORD PTR [ebx+eax*4-0x262634],edi
  43d6b1:	add    BYTE PTR [eax+0x6aff831d],bl
  43d6b7:	push   ebx
  43d6b8:	mov    DWORD PTR [eax],eax
  43d6ba:	cmp    eax,DWORD PTR [ebx-0x7d]
  43d6bd:	inc    DWORD PTR [ecx-0x2]
  43d6c0:	add    bh,bh
  43d6c2:	stos   DWORD PTR es:[edi],eax
  43d6c3:	xor    eax,0x35260000
  43d6c8:	inc    DWORD PTR [eax]
  43d6ca:	xchg   edi,eax
  43d6cb:	push   ds
  43d6cc:	inc    DWORD PTR [eax]
  43d6ce:	cmp    ah,0xff
  43d6d1:	add    BYTE PTR [esi-0x53],dl
  43d6d4:	(bad)  
  43d6d5:	dec    DWORD PTR [ecx-0x140033ef]
  43d6db:	cmp    al,0x83
  43d6dd:	(bad)  
  43d6de:	in     eax,dx
  43d6df:	ins    DWORD PTR es:[edi],dx
  43d6e0:	add    DWORD PTR [eax],0x7e
  43d6e3:	(bad)  
  43d6e4:	inc    DWORD PTR [eax]
  43d6e6:	sbb    esp,esp
  43d6e8:	(bad)  
  43d6e9:	push   DWORD PTR [ecx]
  43d6eb:	fs add bh,bh
  43d6ee:	ret    0x42
  43d6f1:	jmp    FWORD PTR [edx]
  43d6f3:	or     bh,bh
  43d6f5:	add    al,dh
  43d6f7:	jb     0x43d67c
  43d6f9:	int3   
  43d6fa:	arpl   cx,ax
  43d6fc:	add    bh,bh
  43d6fe:	lea    ebp,[ebp-0x1]
  43d701:	mov    esi,ebp
  43d703:	sbb    eax,0x38fbffff
  43d708:	inc    DWORD PTR [eax]
  43d70a:	in     eax,dx
  43d70b:	repnz int3 
  43d70d:	jmp    FWORD PTR [eax+0x55]
  43d710:	mov    edi,edi
  43d712:	adc    BYTE PTR [edx],bl
  43d714:	inc    DWORD PTR [eax]
  43d716:	inc    ebx
  43d717:	add    bh,bh
  43d719:	and    ebp,0xa
  43d71c:	inc    DWORD PTR [eax]
  43d71e:	repz pop esi
  43d720:	mov    DWORD PTR [ebx-0x7cff51d9],eax
  43d726:	mov    al,0x2
  43d728:	add    BYTE PTR [eax],al
  43d72a:	cmp    edi,0x0
  43d72d:	dec    DWORD PTR [ebx]
  43d72f:	add    BYTE PTR fs:[eax],al
  43d732:	mov    ch,BYTE PTR [edx-0x1f6b3400]
  43d738:	add    BYTE PTR [ebx-0x9caf],al
  43d73e:	ds inc esi
  43d740:	add    BYTE PTR [eax],al
  43d742:	adc    esi,DWORD PTR ds:0xc978ffff
  43d748:	add    BYTE PTR [eax],al
  43d74a:	in     al,0x6b
  43d74c:	(bad)  
  43d74d:	push   DWORD PTR [eax]
  43d74f:	lods   eax,DWORD PTR ds:[esi]
  43d750:	(bad)  
  43d751:	jmp    FWORD PTR [ecx-0x13]
  43d754:	cmp    edi,0xffffffcf
  43d757:	push   ss
  43d758:	inc    DWORD PTR [eax]
  43d75a:	xchg   esi,eax
  43d75b:	ret    
  43d75c:	add    DWORD PTR [ebx+0xa189],0xd
  43d763:	mov    eax,ds:0xf2fbff00
  43d768:	inc    DWORD PTR [eax]
  43d76a:	inc    ebx
  43d76b:	push   0x0
  43d76d:	add    BYTE PTR [edi-0x7d],bh
  43d770:	add    DWORD PTR [ebx-0x33ccff],0x1f
  43d777:	pop    ecx
  43d778:	add    BYTE PTR [eax],al
  43d77a:	pop    edi
  43d77b:	rol    BYTE PTR [ebx-0x7c0ce400],cl
  43d781:	add    BYTE PTR [eax+0x7e],bl
  43d784:	(bad)  
  43d785:	inc    DWORD PTR [ebp-0x17cff55]
  43d78b:	arpl   di,di
  43d78d:	and    DWORD PTR [esi+eiz*1+0x290983ff],0xffffffff
  43d795:	add    BYTE PTR ds:0xbcff8310,dl
  43d79b:	ud0    edi,edi
  43d79e:	inc    esp
  43d79f:	mov    ecx,0xe7cd8300
  43d7a4:	inc    DWORD PTR [ebx+0xeff8]
  43d7aa:	mov    edi,esp
  43d7ac:	add    bh,bh
  43d7ae:	inc    edi
  43d7af:	dec    edi
  43d7b0:	mov    DWORD PTR [eax],eax
  43d7b2:	jmp    0x43d789
  43d7b4:	add    BYTE PTR [eax],al
  43d7b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43d7b7:	leave  
  43d7b8:	add    BYTE PTR [eax],al
  43d7ba:	rcl    al,cl
  43d7bc:	(bad)  
  43d7bd:	jmp    DWORD PTR [eax+esi*8]
  43d7c0:	mov    DWORD PTR [eax],eax
  43d7c2:	inc    eax
  43d7c3:	popf   
  43d7c4:	or     esp,0x56
  43d7c7:	xchg   esi,eax
  43d7c8:	inc    DWORD PTR [eax]
  43d7ca:	or     DWORD PTR [edx-0x34],edi
  43d7cd:	add    BYTE PTR [eax-0x740000e0],bh
  43d7d3:	retf   
  43d7d4:	inc    DWORD PTR [eax]
  43d7d6:	test   BYTE PTR [eax-0x1],al
  43d7d9:	xor    DWORD PTR [eax-0x1100007b],0xfffffff8
  43d7e0:	int3   
  43d7e1:	add    ch,dl
  43d7e3:	mov    bl,0xff
  43d7e5:	xor    DWORD PTR [ebx+edx*1],0xffffffff
  43d7e9:	add    BYTE PTR [edx+0x1c],bl
  43d7ec:	or     esp,0x23
  43d7ef:	xchg   ecx,eax
  43d7f0:	(bad)  
  43d7f1:	jmp    DWORD PTR [edi-0x56]
  43d7f4:	inc    DWORD PTR [ebx+0x833655]
  43d7fa:	lea    ebx,[edi-0x2d040100]
  43d800:	inc    DWORD PTR [eax]
  43d802:	mov    ds:0x3a00ff61,eax
  43d807:	outs   dx,BYTE PTR ds:[esi]
  43d808:	add    bh,bh
  43d80a:	lods   al,BYTE PTR ds:[esi]
  43d80b:	nop
  43d80c:	int3   
  43d80d:	call   DWORD PTR [edx-0x3ff76ac]
  43d813:	call   0x89ff:0x71a7ffff
  43d81a:	mov    bh,0x2
  43d81c:	dec    DWORD PTR [ecx-0x7c002680]
  43d822:	jmp    0xd43d796
  43d827:	fwait
  43d828:	add    bh,bh
  43d82a:	mov    bl,BYTE PTR [esi]
  43d82c:	add    bh,bh
  43d82e:	(bad)  
  43d830:	add    DWORD PTR [ebx+0x83e78a],0xffffff8e
  43d837:	into   
  43d838:	add    bh,bh
  43d83a:	jl     0x43d8b5
  43d83c:	inc    DWORD PTR [ebx-0xfffc2d]
  43d842:	pop    edx
  43d843:	inc    edi
  43d844:	int3   
  43d845:	int3   
  43d846:	cmp    al,0x96
  43d848:	(bad)  
  43d849:	inc    DWORD PTR [edi-0xd]
  43d84c:	inc    DWORD PTR [ebx+0x2ca3]
  43d852:	test   eax,0xdd000084
  43d857:	xor    al,0xff
  43d859:	(bad)  
  43d85a:	ds int3 
  43d85c:	add    bh,bh
  43d85e:	es bswap esp
  43d861:	jmp    ebp
  43d863:	dec    ebp
  43d864:	(bad)  
  43d865:	jmp    FWORD PTR [ebx+0x72ffff57]
  43d86b:	mov    bl,0xff
  43d86d:	int3   
  43d86e:	lahf   
  43d86f:	mov    DWORD PTR [eax],0x898425ff
  43d875:	add    bh,ah
  43d877:	mov    ebp,0x999fcc83
  43d87c:	or     esp,0xfffffffe
  43d87f:	add    BYTE PTR [ebx-0x7652be01],0xff
  43d886:	cs (bad) 
  43d888:	inc    DWORD PTR [eax]
  43d88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43d88b:	(bad)  
  43d88c:	(bad)  
  43d88d:	inc    DWORD PTR [eax+0x75]
  43d890:	add    bh,bh
  43d892:	into   
  43d893:	or     bh,bh
  43d895:	(bad)  
  43d896:	cmp    al,0x7c
  43d898:	inc    DWORD PTR [eax]
  43d89a:	sbb    edx,ecx
  43d89c:	inc    DWORD PTR [eax]
  43d89e:	mov    BYTE PTR ds:0x23680000,ch
  43d8a4:	inc    DWORD PTR [eax]
  43d8a6:	enter  0xcc1a,0x0
  43d8aa:	add    DWORD PTR [ecx+ecx*4],edx
  43d8ad:	add    dl,cl
  43d8af:	icebp  
  43d8b0:	(bad)  
  43d8b1:	call   DWORD PTR [ebp+0x5a]
  43d8b4:	add    bh,bh
  43d8b6:	mov    eax,0x5aff0006
  43d8bb:	mov    esi,0x413effff
  43d8c0:	add    BYTE PTR [ebx-0x33ff8919],al
  43d8c6:	and    ch,BYTE PTR [ebx+0x489eccff]
  43d8cc:	(bad)  
  43d8cd:	dec    DWORD PTR [esp+ebx*2+0x0]
  43d8d1:	add    BYTE PTR [ebx-0x51ff006a],bh
  43d8d7:	push   ds
  43d8d8:	add    bh,bh
  43d8da:	jg     0x43d93f
  43d8dc:	inc    DWORD PTR [eax]
  43d8de:	mov    ?,WORD PTR [ecx]
  43d8e0:	(bad)  
  43d8e1:	jmp    FWORD PTR [ebp+0x6700ff96]
  43d8e7:	rol    BYTE PTR [eax],cl
  43d8e9:	sbb    DWORD PTR [ecx],0x7e
  43d8ec:	(bad)  
  43d8ed:	inc    DWORD PTR [ecx+0x34ff00dc]
  43d8f3:	iret   
  43d8f4:	int3   
  43d8f5:	dec    DWORD PTR [edi-0x50]
  43d8f8:	mov    DWORD PTR [eax],eax
  43d8fa:	add    BYTE PTR [esi],dh
  43d8fc:	add    bh,bh
  43d8fe:	cmp    eax,DWORD PTR [esi-0x6821ff01]
  43d904:	inc    DWORD PTR [eax]
  43d906:	dec    edx
  43d907:	outs   dx,DWORD PTR ds:[esi]
  43d908:	inc    DWORD PTR [ebx-0x7cff80ca]
  43d90e:	jb     0x43d8a1
  43d910:	add    BYTE PTR [ebx+0xccdbd9],al
  43d916:	pop    ebx
  43d917:	jne    0x43d919
  43d919:	add    BYTE PTR ds:0xac0000b4,cl
  43d91f:	out    dx,al
  43d920:	add    bh,bh
  43d922:	push   ebp
  43d923:	add    BYTE PTR gs:[eax],al
  43d926:	xlat   BYTE PTR ds:[ebx]
  43d927:	out    0xff,eax
  43d929:	sub    DWORD PTR [ebx+esi*2],0xffffff83
  43d92d:	push   DWORD PTR [ebx]
  43d92f:	mov    ds:0xa8820000,al
  43d934:	dec    esp
  43d936:	jns    0x43d975
  43d938:	add    ah,cl
  43d93a:	cmp    BYTE PTR [edi+edi*8+0x0],al
  43d93e:	cld    
  43d93f:	call   0x3c80d844
  43d944:	cmp    edi,0x3e
  43d947:	daa    
  43d948:	dec    DWORD PTR [ecx-0xff29ac]
  43d94e:	push   edx
  43d94f:	dec    ah
  43d951:	add    BYTE PTR [ebx],ch
  43d953:	data16 add BYTE PTR [eax],al
  43d956:	sub    esi,DWORD PTR [ecx-0x165d7634]
  43d95c:	inc    DWORD PTR [eax]
  43d95e:	call   0x6dc6da45
  43d963:	ret    0xff83
  43d966:	call   0x79:0x90ff83b9
  43d96d:	add    ch,dh
  43d96f:	xchg   edi,edi
  43d971:	inc    DWORD PTR [ecx+edx*1-0x1]
  43d975:	int3   
  43d976:	push   eax
  43d977:	es cmp edi,0x23
  43d97b:	push   ecx
  43d97c:	inc    DWORD PTR [eax]
  43d97e:	arpl   WORD PTR [ebx],si
  43d980:	mov    edi,edi
  43d982:	sbb    al,0x6a
  43d984:	(bad)  
  43d985:	jmp    DWORD PTR [eax+0x40]
  43d988:	inc    DWORD PTR [eax]
  43d98a:	cld    
  43d98b:	mov    edi,edi
  43d98d:	add    bh,dl
  43d98f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43d990:	add    bh,bh
  43d992:	stos   DWORD PTR es:[edi],eax
  43d993:	fiadd  DWORD PTR [eax]
  43d995:	add    BYTE PTR [ebp+0x7d008373],ah
  43d99b:	cmc    
  43d99c:	add    BYTE PTR [ebx-0x7c8954],al
  43d9a2:	add    esi,DWORD PTR [ebp+0x282ff00]
  43d9a8:	(bad)  
  43d9a9:	jmp    FWORD PTR [ebp-0x78ffff16]
  43d9af:	mov    ecx,0xa8cfff00
  43d9b4:	inc    DWORD PTR [eax]
  43d9b6:	std    
  43d9b7:	pop    es
  43d9b8:	(bad)  
  43d9b9:	call   FWORD PTR ds:0x25ff83a9
  43d9bf:	stc    
  43d9c0:	add    BYTE PTR [eax],al
  43d9c2:	outs   dx,BYTE PTR ds:[esi]
  43d9c3:	test   DWORD PTR [eax],0xffc30ccc
  43d9c9:	jmp    DWORD PTR [edx-0xa7c336c]
  43d9cf:	mov    ?,edi
  43d9d1:	add    BYTE PTR [edx-0x73000086],dh
  43d9d7:	mov    esp,0x2adcff00
  43d9dc:	inc    DWORD PTR [eax]
  43d9de:	inc    esp
  43d9df:	mov    bh,bh
  43d9e1:	call   DWORD PTR [ebx+0x77]
  43d9e4:	cmp    edi,0xffffff85
  43d9e7:	mov    BYTE PTR [ebx+0xbee800],al
  43d9ed:	int3   
  43d9ee:	xchg   edi,eax
  43d9ef:	dec    edi
  43d9f0:	(bad)  
  43d9f1:	call   FWORD PTR [edi]
  43d9f3:	jmp    0xffff:0xd62cc89
  43d9fa:	mov    bl,BYTE PTR [eax+0xbc100ff]
  43da00:	dec    esp
  43da02:	mov    bh,0x5f
  43da04:	inc    DWORD PTR [ebx-0x33c87f]
  43da0a:	stos   DWORD PTR es:[edi],eax
  43da0b:	iret   
  43da0c:	inc    DWORD PTR [eax]
  43da0e:	ins    DWORD PTR es:[edi],dx
  43da0f:	xor    al,0x0
  43da11:	inc    DWORD PTR [ebp+ebp*2-0x7d]
  43da15:	and    DWORD PTR [eax+ecx*1],0xffffffff
  43da19:	add    BYTE PTR [ebp+0x4589ffc8],bl
  43da1f:	in     eax,dx
  43da20:	or     esp,0xffffffcf
  43da23:	repz (bad) 
  43da25:	push   DWORD PTR [ebp-0x10ff0015]
  43da2b:	jb     0x43da2d
  43da2d:	int3   
  43da2e:	out    0x41,al
  43da30:	cmp    edi,0x1a
  43da33:	and    eax,0xf043ffcc
  43da38:	inc    DWORD PTR [eax]
  43da3a:	push   cs
  43da3b:	push   esp
  43da3c:	inc    DWORD PTR [ebx-0x76000a73]
  43da42:	mov    al,ds:0xb3ff0065
  43da47:	push   eax
  43da48:	(bad)  
  43da49:	call   DWORD PTR [edi-0x49]
  43da4c:	cmp    edi,0xffffffea
  43da4f:	inc    DWORD PTR [ebx-0x722d01]
  43da55:	call   esi
  43da57:	adc    bh,bh
  43da59:	mov    edi,esp
  43da5b:	and    DWORD PTR [ebx-0x7c91b401],eax
  43da61:	jmp    DWORD PTR [ebx+0x7a000068]
  43da67:	enter  0xff,0x4b
  43da6b:	and    bh,bh
  43da6d:	add    BYTE PTR [edx+edx*8-0x46e87c34],dl
  43da74:	inc    DWORD PTR [eax]
  43da76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43da77:	or     al,0xff
  43da79:	adc    DWORD PTR [eax+0x4dff003b],0xffffff82
  43da80:	add    BYTE PTR [eax],al
  43da82:	add    dl,al
  43da84:	add    BYTE PTR [ecx-0x7cb2a6],cl
  43da8a:	fbld   TBYTE PTR [edx+0x2c1500ff]
  43da90:	add    BYTE PTR [ecx-0x4805],cl
  43da96:	dec    ebp
  43da97:	enter  0xff83,0x2f
  43da9b:	fcos   
  43da9d:	push   DWORD PTR [edx+0xff83da]
  43daa3:	cmp    ecx,esp
  43daa5:	xor    DWORD PTR [esi-0x26],0x0
  43daa9:	xor    DWORD PTR [ecx],0x2d
  43daac:	add    bh,bh
  43daae:	syscall 
  43dab0:	mov    edi,edi
  43dab2:	stos   BYTE PTR es:[edi],al
  43dab3:	ret    
  43dab4:	cmp    edi,0x12
  43dab7:	mov    edi,0x87bffff
  43dabc:	add    bh,bh
  43dabe:	dec    edx
  43dabf:	cdq    
  43dac0:	dec    DWORD PTR [ecx+0xcb30]
  43dac6:	fst    QWORD PTR [eax]
  43dac8:	add    BYTE PTR [eax],al
  43daca:	pop    eax
  43dacb:	cmp    al,BYTE PTR [eax]
  43dacd:	push   DWORD PTR [ebx-0x1f]
  43dad0:	inc    DWORD PTR [ebx-0xff2764]
  43dad6:	xchg   edx,eax
  43dad7:	adc    eax,DWORD PTR [eax]
  43dad9:	xor    DWORD PTR [ebx],0xfffffff1
  43dadc:	add    BYTE PTR [eax],al
  43dade:	inc    ebp
  43dadf:	repnz (bad) 
  43dae1:	push   DWORD PTR [ecx+edi*8]
  43dae4:	(bad)  
  43dae5:	call   DWORD PTR [ebp+0x38ff00e5]
  43daeb:	cdq    
  43daec:	(bad)  
  43daed:	jmp    FWORD PTR [ecx+0x12]
  43daf0:	add    bh,bh
  43daf2:	cmp    BYTE PTR [ebx],dh
  43daf4:	(bad)  
  43daf5:	call   FWORD PTR [edx+0xd]
  43daf8:	int3   
  43daf9:	call   DWORD PTR [ebp-0x2e00ff60]
  43daff:	cli    
  43db00:	add    bh,bh
  43db02:	pop    edi
  43db03:	and    eax,0x698cffff
  43db08:	(bad)  
  43db09:	dec    edi
  43db0b:	lods   al,BYTE PTR ds:[esi]
  43db0c:	add    BYTE PTR [eax],al
  43db0e:	sub    edx,eax
  43db10:	inc    DWORD PTR [eax]
  43db12:	jo     0x43dacd
  43db14:	inc    DWORD PTR [eax]
  43db16:	popa   
  43db17:	dec    eax
  43db18:	dec    esp
  43db1a:	push   ebp
  43db1b:	sbb    al,BYTE PTR [eax]
  43db1d:	(bad)  
  43db1e:	cmp    eax,0xea000067
  43db23:	xor    bh,bh
  43db25:	jmp    DWORD PTR [ebp+eiz*1-0x1]
  43db29:	add    BYTE PTR [ebp-0x2f],dl
  43db2c:	inc    DWORD PTR [ebx-0x7cff6413]
  43db32:	loope  0x43db4d
  43db34:	int3   
  43db35:	add    BYTE PTR [edx],al
  43db37:	mov    ebx,0x47400cc
  43db3c:	cmp    edi,0xffffffe0
  43db3f:	ror    ah,1
  43db41:	int3   
  43db42:	push   ecx
  43db43:	xor    al,0x83
  43db45:	add    bl,cl
  43db47:	cmp    al,BYTE PTR [eax]
  43db49:	add    BYTE PTR [esi-0x26],ch
  43db4c:	inc    DWORD PTR [eax]
  43db4e:	mov    al,ds:0x3f838332
  43db53:	sbb    BYTE PTR [eax],al
  43db55:	add    bh,cl
  43db57:	retf   
  43db58:	inc    DWORD PTR [ebx-0x7c006642]
  43db5e:	or     eax,0xaffff6e
  43db63:	mov    eax,DWORD PTR [ebx-0x33d93601]
  43db69:	jmp    edx
  43db6b:	inc    ebx
  43db6c:	inc    DWORD PTR [eax]
  43db6e:	mov    ecx,0x5bffffe3
  43db73:	cmp    eax,0xd13d83ff
  43db78:	dec    esp
  43db7a:	ja     0x43db3d
  43db7c:	dec    esp
  43db7e:	dec    edx
  43db7f:	jb     0x43db81
  43db81:	add    ch,cl
  43db83:	mov    BYTE PTR [ebx-0x338ec201],0xff
  43db8a:	cmp    DWORD PTR [esi],ecx
  43db8c:	int3   
  43db8d:	int3   
  43db8e:	es stc 
  43db90:	dec    esp
  43db92:	arpl   si,sp
  43db94:	mov    DWORD PTR [eax],eax
  43db96:	popf   
  43db97:	jecxz  0x43db98
  43db99:	jmp    FWORD PTR [esp+ebp*1]
  43db9c:	int3   
  43db9d:	add    BYTE PTR [ebx+0x52],bl
  43dba0:	inc    DWORD PTR [ebx+0x83c2f1]
  43dba6:	xchg   ebp,eax
  43dba7:	pop    ds
  43dba8:	cmp    edi,0xffffff98
  43dbab:	cmp    edi,0xffffffff
  43dbae:	shl    BYTE PTR [ebx],1
  43dbb0:	add    BYTE PTR [eax],al
  43dbb2:	test   eax,0x4f0000b6
  43dbb7:	xchg   edi,eax
  43dbb8:	(bad)  
  43dbb9:	(bad)  
  43dbba:	ds inc eax
  43dbbc:	int3   
  43dbbd:	jmp    edx
  43dbbf:	inc    BYTE PTR [ebx-0x769caa01]
  43dbc5:	add    BYTE PTR [edx-0x100000cf],dl
  43dbcb:	dec    DWORD PTR es:[ecx-0x7600848e]
  43dbd2:	mov    gs,eax
  43dbd4:	add    bh,bh
  43dbd6:	mov    WORD PTR [ecx-0x1],?
  43dbd9:	cmp    DWORD PTR [edi*4+0x72f800ff],0xffffffff
  43dbe1:	jmp    FWORD PTR [ebx+0x8]
  43dbe4:	add    ah,cl
  43dbe6:	clc    
  43dbe7:	sub    al,BYTE PTR [eax]
  43dbe9:	jmp    FWORD PTR [eax+edi*8+0x22b10000]
  43dbf0:	inc    DWORD PTR [eax]
  43dbf2:	jle    0x43dbfb
  43dbf4:	cmp    edi,0xffffffc6
  43dbf7:	xchg   esp,eax
  43dbf8:	(bad)  
  43dbf9:	call   DWORD PTR [ebx]
  43dbfb:	sti    
  43dbfc:	inc    DWORD PTR [ebx-0x7600fbd4]
  43dc02:	pop    esi
  43dc03:	cmp    bh,bh
  43dc05:	dec    ecx
  43dc07:	cmp    bh,0xff
  43dc0a:	mov    bl,0xc4
  43dc0c:	inc    DWORD PTR [eax]
  43dc0e:	mov    ecx,DWORD PTR [eax]
  43dc10:	int3   
  43dc11:	jmp    DWORD PTR [eax]
  43dc13:	jle    0x43db98
  43dc15:	push   DWORD PTR [ebx+0x6effffc9]
  43dc1b:	jge    0x43dc1d
  43dc1d:	dec    DWORD PTR [ebx+0x698300c1]
  43dc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43dc24:	add    bh,bh
  43dc26:	retf   
  43dc27:	push   ss
  43dc28:	add    BYTE PTR [ebx-0x7676b927],al
  43dc2e:	jmp    0xff44dbb9
  43dc33:	mov    esi,0x1608cc00
  43dc38:	mov    edi,edi
  43dc3a:	mov    ch,BYTE PTR [ebx+0x0]
  43dc3d:	(bad)  
  43dc3e:	cmp    DWORD PTR [ebp-0x1],ebp
  43dc41:	call   FWORD PTR ds:0x798300c6
  43dc47:	cmp    cl,BYTE PTR [ecx+0x44ff00]
  43dc4d:	dec    DWORD PTR [edx]
  43dc4f:	test   eax,0xebd3ff83
  43dc54:	dec    esp
  43dc56:	inc    esp
  43dc57:	xchg   edi,edi
  43dc59:	call   FWORD PTR [ebx]
  43dc5b:	xchg   edx,eax
  43dc5c:	(bad)  
  43dc5d:	jmp    DWORD PTR [ecx+0x7100ff1b]
  43dc63:	mov    DWORD PTR [eax],eax
  43dc65:	sub    DWORD PTR [edi+0xe],0xffffffff
  43dc69:	dec    DWORD PTR [ecx+0x3d]
  43dc6c:	dec    DWORD PTR [ecx-0x7c99aa]
  43dc72:	mov    esp,edi
  43dc74:	inc    DWORD PTR [eax]
  43dc76:	and    DWORD PTR [edi-0x4d03ff01],0x68760000
  43dc80:	add    bh,bh
  43dc82:	out    dx,al
  43dc83:	loop   0x43dc85
  43dc85:	push   DWORD PTR [edx-0x64]
  43dc88:	(bad)  
  43dc89:	call   FWORD PTR [edi-0x4eff0070]
  43dc8f:	fwait
  43dc90:	(bad)  
  43dc91:	(bad)  
  43dc92:	cmp    eax,DWORD PTR [edi]
  43dc94:	add    BYTE PTR [eax],al
  43dc96:	mov    ah,0x79
  43dc98:	(bad)  
  43dc99:	push   DWORD PTR [edx]
  43dc9b:	add    al,0xff
  43dc9d:	add    cl,bl
  43dc9f:	inc    eax
  43dca0:	add    BYTE PTR [eax],al
  43dca2:	dec    ecx
  43dca3:	push   edi
  43dca4:	dec    esp
  43dca6:	sbb    esi,DWORD PTR [edi]
  43dca8:	inc    DWORD PTR [ebx+0xcc095d]
  43dcae:	fcom   QWORD PTR [esi-0x1]
  43dcb1:	jmp    FWORD PTR [edi]
  43dcb3:	je     0x43dcb4
  43dcb5:	call   DWORD PTR [eax+0x39890041]
  43dcbb:	stos   BYTE PTR es:[edi],al
  43dcbc:	add    bh,bh
  43dcbe:	cmp    bl,BYTE PTR [edx+0x258cffcc]
  43dcc4:	(bad)  
  43dcc5:	inc    DWORD PTR [eax]
  43dcc7:	retf   0xff
  43dcca:	mov    ecx,0xaaffcc97
  43dccf:	push   es
  43dcd0:	add    bh,bh
  43dcd2:	and    al,0x3a
  43dcd4:	inc    DWORD PTR [ebx-0x7c33ab41]
  43dcda:	adc    DWORD PTR [edx],eax
  43dcdc:	(bad)  
  43dcdd:	call   DWORD PTR [edi]
  43dcdf:	and    eax,0xb32dff00
  43dce4:	(bad)  
  43dce5:	push   DWORD PTR ds:0xbc0000a9
  43dceb:	adc    edi,edi
  43dced:	mov    DWORD PTR [ebp+esi*1-0x1],edx
  43dcf1:	jmp    FWORD PTR [ebp-0x21]
  43dcf4:	add    bh,bh
  43dcf6:	loope  0x43dd45
  43dcf8:	inc    DWORD PTR [ebx-0x7c00f333]
  43dcfe:	mov    WORD PTR [eax+0x74710083],?
  43dd04:	inc    DWORD PTR [eax]
  43dd06:	(bad)
  43dd09:	jmp    FWORD PTR [ebx+0x6800fffb]
  43dd0f:	dec    DWORD PTR cs:[ecx-0x76ff810a]
  43dd16:	retf   
  43dd17:	test   eax,0x6aa8ffff
  43dd1c:	cmp    edi,0xffffffb1
  43dd1f:	(bad)  
  43dd21:	call   eax
  43dd23:	pop    ecx
  43dd24:	(bad)  
  43dd25:	push   DWORD PTR [eax-0x6b7cff02]
  43dd2b:	or     ecx,DWORD PTR [ecx-0xae5101]
  43dd31:	mov    DWORD PTR [edx-0x5c00ff37],esp
  43dd37:	mov    esp,0xa7cbff83
  43dd3c:	add    bh,bh
  43dd3e:	push   es
  43dd3f:	or     al,BYTE PTR [ebx-0xd86401]
  43dd45:	add    BYTE PTR ds:0xd0ff0040,dl
  43dd4b:	dec    ecx
  43dd4c:	cmp    edi,0x28
  43dd4f:	sar    edi,cl
  43dd51:	add    BYTE PTR [ecx-0x5fff76c6],al
  43dd57:	xchg   ecx,eax
  43dd58:	add    bh,bh
  43dd5a:	pop    ds
  43dd5b:	aam    0xff
  43dd5d:	int3   
  43dd5e:	dec    ecx
  43dd5f:	pop    ecx
  43dd60:	mov    edi,edi
  43dd62:	das    
  43dd63:	inc    edi
  43dd64:	mov    DWORD PTR [eax],eax
  43dd66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43dd67:	aad    0xff
  43dd69:	add    BYTE PTR [ebp-0x43],dh
  43dd6c:	int3   
  43dd6d:	add    dl,al
  43dd6f:	pop    eax
  43dd70:	(bad)  
  43dd71:	jmp    FWORD PTR [eax-0x49]
  43dd74:	(bad)  
  43dd75:	call   DWORD PTR [esi+0x7cff8372]
  43dd7b:	push   edi
  43dd7c:	inc    DWORD PTR [ebx+0xffdd0c]
  43dd82:	(bad)  
  43dd83:	dec    edx
  43dd84:	(bad)  
  43dd85:	push   ecx
  43dd87:	loope  0x43dd88
  43dd89:	add    BYTE PTR [edi+0x66],bl
  43dd8c:	or     esp,0x59
  43dd8f:	pop    ebp
  43dd90:	add    bh,bh
  43dd92:	pop    ss
  43dd93:	fwait
  43dd94:	dec    DWORD PTR [ecx-0x33ca9e]
  43dd9a:	add    al,0x63
  43dd9c:	add    DWORD PTR [eax],0x49
  43dd9f:	test   edi,edi
  43dda1:	jmp    FWORD PTR [esi-0x4100ffde]
  43dda7:	jne    0x43dda9
  43dda9:	jmp    FWORD PTR [eax+0x28]
  43ddac:	add    BYTE PTR [eax],al
  43ddae:	fist   DWORD PTR [edi+edi*8]
  43ddb1:	adc    DWORD PTR [ebp-0x540000fd],0x66
  43ddb8:	inc    DWORD PTR [ebx-0xb31a]
  43ddbe:	sub    ecx,DWORD PTR [edi-0x7d]
  43ddc1:	add    BYTE PTR [edi-0x5f],ah
  43ddc4:	cmp    edi,0xffffff88
  43ddc7:	sbb    eax,DWORD PTR [eax]
  43ddc9:	mov    DWORD PTR ds:0xd7ffff10,ecx
  43ddcf:	adc    edi,edi
  43ddd1:	add    BYTE PTR [edx+0x16],cl
  43ddd4:	(bad)  
  43ddd5:	dec    DWORD PTR [eax-0x50000058]
  43dddb:	ror    BYTE PTR [ecx-0x7cf63134],1
  43dde1:	(bad)  
  43dde2:	aas    
  43dde3:	push   ds
  43dde4:	mov    edi,edi
  43dde6:	xor    ebx,edi
  43dde8:	cmp    edi,0xffffffd7
  43ddeb:	test   bh,bh
  43dded:	mov    DWORD PTR [eax],edx
  43ddef:	in     eax,dx
  43ddf0:	(bad)  
  43ddf1:	call   FWORD PTR ds:0x6fff001f
  43ddf7:	call   0xff:0x1d180000
  43ddfe:	mov    al,ds:0xb7ff0026
  43de03:	jmp    0x43ddd1
  43de05:	call   DWORD PTR [ecx]
  43de07:	das    
  43de08:	int3   
  43de09:	adc    ebx,0x14
  43de0c:	int3   
  43de0d:	add    BYTE PTR [edi-0x3a],bl
  43de10:	inc    DWORD PTR [eax]
  43de12:	inc    ebp
  43de13:	out    dx,al
  43de14:	add    DWORD PTR [ebx+0x89d7eb],0x7b
  43de1b:	sub    al,0xff
  43de1d:	dec    ebx
  43de1f:	add    eax,0x1f64ff00
  43de24:	inc    DWORD PTR [eax]
  43de26:	sub    al,0xc8
  43de28:	inc    DWORD PTR [eax]
  43de2a:	loopne 0x43ddb0
  43de2c:	cmp    edi,0x65
  43de2f:	mov    ?,edi
  43de31:	add    DWORD PTR [esi-0xff76cf],0x79
  43de38:	(bad)  
  43de39:	push   DWORD PTR [ebp-0x7c7c00a9]
  43de3f:	(bad)  
  43de40:	(bad)  
  43de41:	call   DWORD PTR [edx+ecx*1-0x1]
  43de45:	add    bh,bh
  43de47:	cmp    al,0x0
  43de49:	call   DWORD PTR [ebp+0x1]
  43de4c:	add    bh,bh
  43de4e:	add    BYTE PTR [ebp+0x0],dh
  43de51:	push   DWORD PTR [edx-0x1b]
  43de54:	(bad)  
  43de55:	push   esi
  43de57:	retf   0xff00
  43de5a:	jbe    0x43de66
  43de5c:	mov    DWORD PTR [ecx-0x8691],ecx
  43de62:	enter  0xcc58,0x0
  43de66:	push   ecx
  43de67:	add    BYTE PTR [eax],0xcc
  43de6a:	jns    0x43de30
  43de6c:	inc    DWORD PTR [ebx-0x540d]
  43de72:	adc    esp,ebp
  43de74:	mov    DWORD PTR [ebx-0x7c9800],eax
  43de7a:	sub    al,0x2a
  43de7c:	add    BYTE PTR [eax],al
  43de7e:	and    ebx,DWORD PTR [ebp+0x2d67ffff]
  43de84:	cmp    edi,0x7c
  43de87:	sbb    ah,cl
  43de89:	push   edx
  43de8b:	idiv   edi
  43de8d:	dec    DWORD PTR [edi*8+0x5700ffed]
  43de94:	adc    DWORD PTR [eax],eax
  43de96:	xor    DWORD PTR [edx+0x28d9debd],0x0
  43de9d:	add    bh,bh
  43de9f:	(bad)  
  43dea0:	fadd   QWORD PTR [eax]
  43dea2:	add    BYTE PTR [esi-0x58],bh
  43dea5:	dec    DWORD PTR [ecx+0x7895d708]
  43deab:	xchg   esi,eax
  43deac:	add    DWORD PTR [eax],0xffffffff
  43deaf:	inc    DWORD PTR [ecx+0xec30000]
  43deb5:	(bad)  
  43deb6:	dec    DWORD PTR [ebx-0x49]
  43deb9:	add    DWORD PTR [edx],edi
  43debb:	cmp    al,0xff
  43debd:	add    bh,bh
  43debf:	(bad)  
  43dec0:	jge    0x43dec1
  43dec2:	add    BYTE PTR [esi+0x77],dh
  43dec5:	inc    DWORD PTR [eax]
  43dec7:	pusha  
  43dec8:	jmp    0xfff93dbd
  43decd:	inc    DWORD PTR [ebx+0xcc8dff]
  43ded3:	cmp    BYTE PTR [esi],dh
  43ded5:	add    bh,bh
  43ded7:	sbb    al,0xce
  43ded9:	push   cs
  43deda:	repnz (bad) 
  43dedc:	dec    esp
  43dede:	dec    esp
  43dee0:	push   cs
  43dee1:	mov    edi,edi
  43dee3:	xor    DWORD PTR [edi+0x5428ffcc],ecx
  43dee9:	and    BYTE PTR [ecx+0x74],0x0
  43deed:	inc    DWORD PTR [eax]
  43deef:	dec    DWORD PTR [ecx+0x0]
  43def2:	mov    DWORD PTR [edx+edx*2+0x0],ecx
  43def6:	push   DWORD PTR [esi+0x3]
  43def9:	aas    
  43defa:	scas   al,BYTE PTR es:[edi]
  43defb:	dec    esp
  43defc:	dec    esp
  43defe:	(bad)  
  43deff:	call   FWORD PTR [edi-0x1]
  43df02:	push   DWORD PTR [ecx+esi*1-0x7d]
  43df06:	push   DWORD PTR [edi+0x7e21b28d]
  43df0c:	add    DWORD PTR [eax],0xffffffff
  43df0f:	(bad)  
  43df10:	mov    ecx,0x33aecccc
  43df15:	add    DWORD PTR [eax],0x47
  43df18:	sub    bl,dl
  43df1a:	fild   DWORD PTR [edi+edi*8]
  43df1d:	(bad)  
  43df1e:	inc    DWORD PTR [eax]
  43df20:	adc    BYTE PTR [ecx-0x29937d],cl
  43df26:	call   DWORD PTR [ecx]
  43df28:	lea    edi,[ebx]
  43df2a:	mov    eax,edx
  43df2c:	(bad)  
  43df2d:	inc    DWORD PTR [eax]
  43df2f:	mov    DWORD PTR [ecx],esi
  43df31:	add    BYTE PTR [ecx-0xb606],cl
  43df37:	sub    ecx,edx
  43df39:	sahf   
  43df3a:	pop    es
  43df3b:	push   edi
  43df3c:	(bad)  
  43df3d:	(bad)  
  43df3e:	(bad)  
  43df3f:	call   DWORD PTR [ecx]
  43df41:	or     DWORD PTR [ecx+0xff1d48],0x1f
  43df48:	imul   ebp,DWORD PTR [edi-0x7e61],0xffffffff
  43df4f:	mov    DWORD PTR [edi-0x1],esi
  43df52:	dec    DWORD PTR [edx-0x6600ff76]
  43df58:	test   al,0xc6
  43df5a:	call   0xffcdaba6
  43df5f:	dec    DWORD PTR [esp+ecx*8-0x7cc24d7d]
  43df66:	call   ebx
  43df68:	dec    ebx
  43df69:	push   edi
  43df6a:	push   0x8300836a
  43df6f:	int3   
  43df70:	dec    ecx
  43df71:	int3   
  43df72:	add    BYTE PTR [ecx+0x50],dl
  43df75:	mov    edi,edi
  43df77:	(bad)  
  43df78:	sub    dh,BYTE PTR [edi-0x80]
  43df7b:	xor    al,0xff
  43df7d:	cmp    edi,0xffffff89
  43df80:	(bad)  
  43df82:	xor    DWORD PTR [ecx+0x56ff8331],0x4
  43df89:	or     al,0x58
  43df8b:	mov    dl,0xff
  43df8d:	add    bh,bh
  43df8f:	add    BYTE PTR [eax+eax*1-0x1],ch
  43df93:	(bad)  
  43df94:	scas   al,BYTE PTR es:[edi]
  43df95:	(bad)  
  43df96:	call   ebp
  43df98:	push   edi
  43df99:	iret   
  43df9a:	(bad)  
  43df9b:	sbb    edi,edi
  43df9d:	(bad)  
  43df9e:	(bad)  
  43df9f:	push   ebp
  43dfa1:	add    DWORD PTR [ebx+0xff607e],0xffffff9f
  43dfa8:	int3   
  43dfa9:	ss loopne 0x43df9b
  43dfac:	inc    DWORD PTR [eax]
  43dfae:	add    BYTE PTR [ebx+0x2789ff07],al
  43dfb4:	add    edi,edi
  43dfb6:	add    BYTE PTR [eax+0x16da64bd],dl
  43dfbc:	dec    DWORD PTR [ecx-0xc5007d]
  43dfc2:	and    DWORD PTR [esi-0x5b],0xffffffcc
  43dfc6:	push   DWORD PTR [ecx+ebx*4]
  43dfc9:	mov    ebp,0x898381ba
  43dfce:	add    bh,bh
  43dfd0:	out    0x83,al
  43dfd2:	int3   
  43dfd3:	sub    BYTE PTR [esi-0x1],cl
  43dfd6:	call   DWORD PTR [ecx+0x6f]
  43dfd9:	jp     0x43df72
  43dfdb:	add    edi,edi
  43dfdd:	mov    edi,edi
  43dfdf:	add    BYTE PTR [edx],al
  43dfe1:	add    bh,bh
  43dfe3:	mov    dh,0xc8
  43dfe5:	inc    DWORD PTR [eax]
  43dfe7:	call   0xff83:0x3e77ee2f
  43dfee:	int3   
  43dfef:	adc    DWORD PTR [eax+eax*1],0x0
  43dff3:	xchg   ecx,eax
  43dff4:	ret    
  43dff5:	(bad)  
  43dff6:	inc    DWORD PTR [ebx]
  43dff8:	mov    edi,0x428c6b
  43dffd:	inc    DWORD PTR [eax]
  43dfff:	call   esp
  43e001:	inc    DWORD PTR [eax]
  43e003:	jl     0x43e03e
  43e005:	add    bh,bh
  43e007:	data16 xchg BYTE PTR [esi+edi*1],ah
  43e00b:	xchg   ecx,eax
  43e00c:	inc    DWORD PTR [eax]
  43e00e:	add    ah,cl
  43e010:	mov    bh,bh
  43e012:	add    BYTE PTR [ebx-0x4d],cl
  43e015:	add    bh,bh
  43e017:	jle    0x43e058
  43e019:	push   0xff2609
  43e01e:	inc    DWORD PTR [eax]
  43e020:	(bad)  
  43e021:	inc    DWORD PTR [eax]
  43e023:	adc    al,0xb9
  43e025:	(bad)  
  43e026:	push   DWORD PTR [edx]
  43e028:	pop    esi
  43e029:	push   edx
  43e02a:	sub    al,0xb7
  43e02c:	mov    DWORD PTR [ebx-0x650001],eax
  43e032:	add    BYTE PTR [ecx],cl
  43e034:	adc    esp,ecx
  43e036:	add    BYTE PTR [edx+0x3f48174a],bh
  43e03c:	add    bh,bh
  43e03e:	add    BYTE PTR [eax],al
  43e040:	int3   
  43e041:	add    bh,bh
  43e043:	push   edx
  43e044:	lock (bad) 
  43e046:	inc    DWORD PTR [ecx+edx*4]
  43e049:	repnz idiv dl
  43e04c:	cmp    edi,0xffffff89
  43e04f:	inc    DWORD PTR [edi]
  43e051:	int3   
  43e052:	and    DWORD PTR [edx],0xffffffc8
  43e055:	cmp    edi,0xfffffff9
  43e058:	mov    ah,0xec
  43e05a:	pop    edx
  43e05b:	sub    al,BYTE PTR [eax]
  43e05d:	dec    DWORD PTR [ecx+0xff95ff]
  43e063:	push   0x3c
  43e065:	cmp    edi,0x56
  43e068:	sbb    al,0x2a
  43e06a:	inc    ecx
  43e06b:	sub    al,0x0
  43e06d:	inc    DWORD PTR [eax]
  43e06f:	(bad)  
  43e070:	jle    0x43e071
  43e072:	add    BYTE PTR [eax],bl
  43e074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e075:	add    bh,bh
  43e077:	(bad)  
  43e079:	mov    al,0xf0
  43e07b:	add    BYTE PTR es:[eax],al
  43e07e:	add    BYTE PTR [ebx-0x53ffff3d],al
  43e084:	popa   
  43e085:	(bad)  
  43e086:	(bad)  
  43e087:	stc    
  43e088:	out    dx,eax
  43e089:	mov    eax,esp
  43e08b:	jp     0x43e08c
  43e08d:	add    BYTE PTR [eax],al
  43e08f:	mov    DWORD PTR [esi-0x740c3400],esp
  43e095:	add    bh,bh
  43e097:	mov    ebx,0xf406ccdf
  43e09c:	dec    esp
  43e09e:	dec    DWORD PTR [ecx+0x5c89ffc7]
  43e0a4:	inc    esi
  43e0a5:	dec    esp
  43e0a7:	aaa    
  43e0a8:	sub    dl,0x70
  43e0ab:	ins    DWORD PTR es:[edi],dx
  43e0ac:	add    bh,bh
  43e0ae:	add    BYTE PTR [eax],al
  43e0b0:	push   ebx
  43e0b1:	mov    edi,edi
  43e0b3:	sar    BYTE PTR [ebp+0x4d70ff89],cl
  43e0b9:	inc    esi
  43e0ba:	jmp    0xee00:0xffff830e
  43e0c1:	inc    DWORD PTR [eax]
  43e0c3:	pop    ebx
  43e0c4:	ss (bad) 
  43e0c6:	(bad)  
  43e0c7:	jge    0x43e0db
  43e0c9:	pop    edi
  43e0ca:	dec    ebp
  43e0cb:	push   ebp
  43e0cc:	inc    DWORD PTR [eax]
  43e0ce:	add    DWORD PTR [eax],0xffffff97
  43e0d1:	(bad)  
  43e0d2:	(bad)  
  43e0d3:	in     al,dx
  43e0d4:	daa    
  43e0d5:	inc    DWORD PTR [eax]
  43e0d7:	dec    esp
  43e0d8:	mov    eax,0xff77fd7a
  43e0dd:	int3   
  43e0de:	int3   
  43e0df:	mov    DWORD PTR [eax-0x1cdff7d],esi
  43e0e5:	int3   
  43e0e6:	call   FWORD PTR [ecx-0x4c631051]
  43e0ec:	add    bh,bh
  43e0ee:	dec    esp
  43e0f0:	loop   0x43e0f1
  43e0f2:	dec    DWORD PTR [ebx]
  43e0f4:	fild   DWORD PTR [eax]
  43e0f6:	mov    ebp,edi
  43e0f8:	mov    esi,0x1383b7
  43e0fd:	add    ah,cl
  43e0ff:	add    BYTE PTR [eax-0x77],ah
  43e102:	and    DWORD PTR [edi-0x7e],0xffffffff
  43e106:	push   DWORD PTR [ebx+0x1751867d]
  43e10c:	add    bh,bh
  43e10e:	add    DWORD PTR [eax],0x4a
  43e111:	add    ah,cl
  43e113:	out    dx,al
  43e114:	xchg   ebx,eax
  43e115:	add    bh,bh
  43e117:	dec    edi
  43e118:	ins    DWORD PTR es:[edi],dx
  43e119:	adc    BYTE PTR [eax+0x6b],dl
  43e11c:	inc    DWORD PTR [eax]
  43e11e:	inc    DWORD PTR [eax]
  43e120:	xchg   esi,eax
  43e121:	add    BYTE PTR [ebx-0xd557],al
  43e127:	cmp    al,0x4c
  43e129:	fdivr  QWORD PTR [edx]
  43e12b:	mov    BYTE PTR [eax],0x0
  43e12e:	mov    DWORD PTR [ebx-0x12000013],eax
  43e134:	test   esp,ecx
  43e136:	or     DWORD PTR [ecx],0x58
  43e139:	not    BYTE PTR [ecx-0xff0023]
  43e13f:	add    BYTE PTR ds:0x262bff00,bh
  43e145:	inc    DWORD PTR [eax]
  43e147:	and    eax,DWORD PTR [edx+edi*1-0x44]
  43e14b:	sub    edi,edi
  43e14d:	inc    DWORD PTR [ebx+0xffe8ff]
  43e153:	(bad)  
  43e154:	out    0xff,al
  43e156:	add    BYTE PTR ds:0x2b051b6c,dh
  43e15c:	(bad)  
  43e15d:	inc    DWORD PTR [eax]
  43e15f:	dec    DWORD PTR [ecx+0x0]
  43e162:	push   DWORD PTR [edi+ebx*8-0x1]
  43e166:	jmp    DWORD PTR [esi]
  43e168:	xchg   ecx,eax
  43e169:	imul   esi,DWORD PTR [esi],0xffffffe2
  43e16c:	add    BYTE PTR [eax],al
  43e16e:	mov    DWORD PTR [eax],eax
  43e170:	das    
  43e171:	add    BYTE PTR [eax],al
  43e173:	(bad)  
  43e175:	(bad)  
  43e176:	call   DWORD PTR [eax+0x7326c4ce]
  43e17c:	add    DWORD PTR [eax],0xffffffcc
  43e17f:	jmp    edx
  43e181:	inc    DWORD PTR [eax]
  43e183:	mov    ds,WORD PTR ds:0xd1790083
  43e189:	aam    0xba
  43e18b:	adc    cl,ah
  43e18d:	dec    DWORD PTR [ecx-0xff4e00]
  43e193:	mov    dl,BYTE PTR [ebx+0x76d4ffff]
  43e199:	ror    DWORD PTR [ebx-0x7cff00f7],0x89
  43e1a0:	xchg   esp,eax
  43e1a1:	int3   
  43e1a2:	dec    DWORD PTR [edx]
  43e1a4:	outs   dx,BYTE PTR ds:[esi]
  43e1a5:	cmp    edi,0x58
  43e1a8:	jbe    0x43e13c
  43e1aa:	(bad)  
  43e1ab:	ds int3 
  43e1ad:	add    bh,bh
  43e1af:	inc    DWORD PTR [edi+edi*8]
  43e1b2:	add    BYTE PTR [ebp+0x33ffff31],dl
  43e1b8:	fisubr DWORD PTR [edx-0x3310af]
  43e1be:	mov    edi,edi
  43e1c0:	adc    al,0xff
  43e1c2:	xor    DWORD PTR [esp+ebp*8+0x0],0xffffffff
  43e1c7:	mov    al,ds:0x26e1bffd
  43e1cc:	add    ah,cl
  43e1ce:	inc    DWORD PTR [eax]
  43e1d0:	sar    edi,0xff
  43e1d3:	cwde   
  43e1d4:	les    eax,FWORD PTR [eax]
  43e1d6:	(bad)  
  43e1d7:	mov    ecx,0xec93e351
  43e1dc:	add    bh,bh
  43e1de:	dec    DWORD PTR [ecx-0x21ffffa7]
  43e1e4:	(bad)  
  43e1e5:	dec    esp
  43e1e7:	mov    WORD PTR [edi+0x6f],?
  43e1ea:	cld    
  43e1eb:	fild   WORD PTR [eax]
  43e1ed:	inc    DWORD PTR [eax]
  43e1ef:	add    ah,al
  43e1f1:	inc    DWORD PTR [eax]
  43e1f3:	adc    cl,BYTE PTR [edi+edi*8+0x0]
  43e1f7:	aad    0x2c
  43e1f9:	ror    DWORD PTR [edi],cl
  43e1fb:	bound  ecx,QWORD PTR [ecx-0x5a000100]
  43e201:	add    DWORD PTR [eax],0xffffffcf
  43e204:	inc    ebx
  43e205:	inc    DWORD PTR [eax]
  43e207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e208:	add    BYTE PTR [ebp-0x32],bl
  43e20b:	enter  0xccff,0x83
  43e20f:	jmp    FWORD PTR [esi+0x36cb0000]
  43e215:	add    BYTE PTR [eax],al
  43e217:	mov    ch,BYTE PTR [esi+edi*8]
  43e21a:	lods   eax,DWORD PTR ds:[esi]
  43e21b:	retf   
  43e21c:	add    BYTE PTR [eax],al
  43e21e:	add    bh,bh
  43e220:	sbb    al,0xff
  43e222:	and    DWORD PTR [edi],0x49
  43e225:	inc    DWORD PTR [eax]
  43e227:	jae    0x43e295
  43e229:	xchg   ebx,eax
  43e22a:	push   DWORD PTR [edi+0xff89]
  43e230:	adc    ecx,esp
  43e232:	(bad)  
  43e233:	(bad)  
  43e234:	push   ebp
  43e235:	mov    edi,edi
  43e237:	push   ss
  43e238:	shrd   DWORD PTR [edi+ebp*1-0x1],eax,cl
  43e23d:	add    DWORD PTR [eax],0xffffffff
  43e240:	into   
  43e241:	(bad)  
  43e242:	(bad)  
  43e243:	sti    
  43e244:	inc    esi
  43e245:	inc    DWORD PTR [eax]
  43e247:	mov    BYTE PTR [eax+ecx*4-0x5e],dl
  43e24b:	cmp    DWORD PTR [eax],eax
  43e24d:	mov    edi,edi
  43e24f:	int3   
  43e250:	mov    bh,0x0
  43e252:	dec    DWORD PTR [ecx-0x160000d2]
  43e258:	dec    edx
  43e259:	shl    BYTE PTR [edi+eax*4-0x34],1
  43e25d:	cmp    edi,0xffffff83
  43e260:	scas   al,BYTE PTR es:[edi]
  43e261:	add    DWORD PTR [ebx-0x4198],0x2d
  43e268:	fs fcmove st,st(4)
  43e26b:	ret    
  43e26c:	inc    DWORD PTR [ebx+0x1383ff]
  43e272:	add    BYTE PTR [edi-0x46],dh
  43e275:	int3   
  43e276:	dec    DWORD PTR [ecx+0x27]
  43e279:	add    al,0x7c
  43e27b:	arpl   di,di
  43e27d:	(bad)  
  43e27e:	inc    DWORD PTR [eax]
  43e280:	and    al,0xff
  43e282:	xor    DWORD PTR ds:0x5fff00f1,0x7f
  43e289:	lock adc DWORD PTR [esi-0x77],0x0
  43e28e:	inc    DWORD PTR [eax]
  43e290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43e291:	or     esp,0x47
  43e294:	mov    es,WORD PTR [ebx-0x1fa3ab7d]
  43e29a:	shl    BYTE PTR [ebp-0x7cff0077],1
  43e2a0:	ud0    edi,edi
  43e2a3:	jmp    0xd543af09
  43e2a8:	mov    eax,0x83f1ff3d
  43e2ad:	dec    esp
  43e2af:	jmp    DWORD PTR [ecx-0x1]
  43e2b2:	call   DWORD PTR [esi]
  43e2b4:	mov    esi,0x812989ff
  43e2b9:	inc    esp
  43e2ba:	push   ds
  43e2bb:	ret    
  43e2bc:	inc    DWORD PTR [eax]
  43e2be:	add    BYTE PTR [ecx+0x17ffff5b],cl
  43e2c4:	out    dx,eax
  43e2c5:	(bad)  
  43e2c6:	push   DWORD PTR [edi]
  43e2c8:	imul   esp,DWORD PTR [ecx],0xcccc03f3
  43e2ce:	(bad)  
  43e2cf:	push   DWORD PTR [ecx-0x1]
  43e2d2:	add    BYTE PTR [edx-0x217c00cb],cl
  43e2d8:	xchg   DWORD PTR [ecx-0x3d96],edi
  43e2de:	add    BYTE PTR [ebx-0x160000e0],al
  43e2e4:	scas   eax,DWORD PTR es:[edi]
  43e2e5:	cmp    edi,0x64
  43e2e8:	push   eax
  43e2e9:	push   esi
  43e2ea:	call   DWORD PTR [ebp+0x0]
  43e2ed:	add    BYTE PTR [eax],al
  43e2ef:	add    BYTE PTR ds:0x8ed98300,bh
  43e2f5:	int3   
  43e2f6:	add    ch,ch
  43e2f8:	adc    ah,BYTE PTR [ecx]
  43e2fa:	adc    DWORD PTR [ebp-0x33ff7d],edx
  43e300:	xchg   edx,eax
  43e301:	(bad)  
  43e302:	(bad)  
  43e303:	cld    
  43e304:	fadd   DWORD PTR [eax]
  43e306:	add    BYTE PTR [ebx+0x6baa50d4],al
  43e30c:	dec    esp
  43e30e:	add    BYTE PTR [eax],al
  43e310:	adc    al,BYTE PTR [eax]
  43e312:	xor    DWORD PTR [eax+0x45ffccc5],0x2b
  43e319:	outs   dx,DWORD PTR ds:[esi]
  43e31a:	test   eax,0xcc83fff0
  43e31f:	add    BYTE PTR [ebx-0x1],ah
  43e322:	or     DWORD PTR [eax+0x2],0x0
  43e326:	add    BYTE PTR [esi-0x42],bh
  43e329:	inc    eax
  43e32a:	icebp  
  43e32b:	push   edi
  43e32c:	dec    esp
  43e32e:	inc    DWORD PTR [eax]
  43e330:	sti    
  43e331:	inc    DWORD PTR [ebx-0x7c7ce69f]
  43e337:	mov    edx,DWORD PTR [edi]
  43e339:	adc    al,0x17
  43e33b:	xchg   ebp,eax
  43e33c:	add    bh,bh
  43e33e:	inc    DWORD PTR [eax]
  43e340:	call   0x83:0x7e3f00ff
  43e347:	(bad)  
  43e348:	cmp    DWORD PTR [edi-0x7680bb],edx
  43e34e:	(bad)  
  43e34f:	(bad)  
  43e350:	out    dx,eax
  43e351:	add    bh,bh
  43e353:	push   ebp
  43e354:	pusha  
  43e355:	mov    DWORD PTR [eax],eax
  43e357:	xor    DWORD PTR [ebx+eiz*1-0xf4ea],esi
  43e35e:	dec    esp
  43e360:	sar    bh,1
  43e362:	int3   
  43e363:	leave  
  43e364:	nop
  43e365:	inc    DWORD PTR [ebx+0x7f936f78]
  43e36b:	xchg   bh,bh
  43e36d:	add    BYTE PTR [eax],al
  43e36f:	call   FWORD PTR [eax-0x1]
  43e372:	dec    DWORD PTR [ecx+0x49]
  43e375:	inc    DWORD PTR [eax]
  43e377:	jae    0x43e2f9
  43e379:	sub    DWORD PTR [edi],0x5a
  43e37c:	inc    DWORD PTR [ebx+0x3aff83]
  43e382:	jmp    FWORD PTR [eax+0x2e]
  43e385:	add    bh,bh
  43e387:	mov    ds:0xd448ffc5,al
  43e38c:	mov    edi,edi
  43e38e:	add    DWORD PTR [eax],0xfffffff8
  43e391:	or     DWORD PTR [ecx+0xff2626],0xffffff88
  43e398:	add    al,0xde
  43e39a:	cli    
  43e39b:	mov    dl,0xff
  43e39d:	int3   
  43e39e:	inc    DWORD PTR [eax]
  43e3a0:	iret   
  43e3a1:	add    bh,bh
  43e3a3:	jno    0x43e40f
  43e3a5:	cmp    edi,0xffffffb8
  43e3a8:	adc    eax,DWORD PTR [esi+0x39]
  43e3ab:	sub    eax,0xff00ffff
  43e3b0:	sar    edi,0x0
  43e3b3:	test   DWORD PTR [ebp-0x4a280001],0xffa8482e
  43e3bd:	inc    DWORD PTR [eax]
  43e3bf:	inc    DWORD PTR [edi+edi*8-0x190a00]
  43e3c6:	add    BYTE PTR [edi],dl
  43e3c8:	and    eax,0xff8ea0c4
  43e3cd:	(bad)  
  43e3ce:	inc    DWORD PTR [ebx+0x19ffffc9]
  43e3d4:	sbb    cl,BYTE PTR [ecx-0x4fd4b634]
  43e3da:	mov    ss:0xffff00,al
  43e3e0:	in     al,0xff
  43e3e2:	jmp    FWORD PTR [edx+ecx*4+0x58b500ff]
  43e3e9:	dec    ebp
  43e3ea:	in     eax,0x6
  43e3ec:	add    bh,bh
  43e3ee:	(bad)  
  43e3ef:	call   DWORD PTR [edi+0x0]
  43e3f2:	call   FWORD PTR [ebx-0x5a00007a]
  43e3f8:	popa   
  43e3f9:	inc    ecx
  43e3fa:	daa    
  43e3fb:	mov    edi,?
  43e3fd:	dec    esp
  43e3ff:	add    ah,cl
  43e401:	(bad)  
  43e402:	call   DWORD PTR [edx]
  43e404:	(bad)  
  43e406:	mov    DWORD PTR [edi],edi
  43e408:	cmp    al,0x98
  43e40a:	fimul  DWORD PTR ds:0xffffffff
  43e410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e411:	mov    DWORD PTR [eax],eax
  43e413:	jmp    0x2344b0ab
  43e418:	(bad)  
  43e419:	cmp    DWORD PTR [ecx+0xff83eb],edx
  43e41f:	int3   
  43e420:	mov    ah,0xff
  43e422:	call   FWORD PTR [esi-0x5d00009a]
  43e428:	pop    edi
  43e429:	cdq    
  43e42a:	sbb    al,0x7c
  43e42c:	add    ah,cl
  43e42e:	add    DWORD PTR [eax],0x5
  43e431:	add    ah,cl
  43e433:	sub    ebp,DWORD PTR [edi-0x1]
  43e436:	add    BYTE PTR [esi],ch
  43e438:	jl     0x43e48a
  43e43a:	in     eax,0x29
  43e43c:	add    DWORD PTR [ebx-0x520000],0x0
  43e443:	xor    DWORD PTR [esi-0xdd6ff01],eax
  43e449:	inc    esi
  43e44a:	adc    esi,eax
  43e44c:	(bad)  
  43e44d:	(bad)  
  43e44e:	dec    esp
  43e450:	ds add bh,bh
  43e453:	sub    ebx,ebx
  43e455:	(bad)  
  43e456:	jmp    DWORD PTR [eax]
  43e458:	adc    al,0xe6
  43e45a:	ret    0x89e3
  43e45d:	add    DWORD PTR [eax],0xffffffff
  43e460:	repnz add BYTE PTR [ebx-0x3333aac9],al
  43e467:	frstor [ebp+0x4a]
  43e46a:	fdiv   DWORD PTR [ebx]
  43e46c:	dec    DWORD PTR [ecx-0x873400]
  43e472:	adc    ecx,0xffffff92
  43e475:	dec    esp
  43e477:	jbe    0x43e448
  43e479:	pusha  
  43e47a:	cmp    DWORD PTR [edx+0x0],edi
  43e47d:	add    DWORD PTR [ebx-0x33003a01],0xffffff86
  43e484:	and    eax,0x7ed500cc
  43e489:	cli    
  43e48a:	bound  ebx,QWORD PTR [esi]
  43e48c:	(bad)  
  43e48d:	(bad)  
  43e48e:	inc    DWORD PTR [eax]
  43e490:	ins    DWORD PTR es:[edi],dx
  43e491:	dec    esp
  43e493:	xchg   ebx,eax
  43e494:	outs   dx,BYTE PTR ds:[esi]
  43e495:	dec    esp
  43e497:	or     cl,BYTE PTR [esi+0x57]
  43e49a:	rol    BYTE PTR [eax],1
  43e49c:	cmp    edi,0xffffffff
  43e49f:	add    BYTE PTR [ebx],dl
  43e4a1:	add    BYTE PTR [eax],al
  43e4a3:	arpl   WORD PTR [ebx],dx
  43e4a5:	(bad)  
  43e4a6:	jmp    DWORD PTR ds:0x645811a3
  43e4ac:	add    DWORD PTR [eax],0xffffffff
  43e4af:	call   DWORD PTR [edi+edi*8-0x77]
  43e4b3:	mov    esp,0xa983ff7d
  43e4b8:	test   BYTE PTR [ebx+0x45],bh
  43e4bb:	mov    ch,0xff
  43e4bd:	add    BYTE PTR [ebx-0x487d],al
  43e4c3:	sub    eax,0x9e0000f4
  43e4c8:	js     0x43e45b
  43e4ca:	dec    eax
  43e4cb:	xor    BYTE PTR [eax],al
  43e4cd:	inc    DWORD PTR [eax]
  43e4cf:	call   DWORD PTR [edi]
  43e4d1:	inc    DWORD PTR [eax]
  43e4d3:	adc    cl,BYTE PTR [edi+edi*8-0x7d]
  43e4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e4d8:	sub    esp,DWORD PTR [edi-0xff140b]
  43e4de:	(bad)  
  43e4df:	dec    DWORD PTR [ebp-0x1]
  43e4e2:	add    BYTE PTR [ebp-0x5cffff4c],bh
  43e4e8:	popa   
  43e4e9:	or     BYTE PTR [esi-0xffffc5],cl
  43e4ef:	add    BYTE PTR [edi-0x65757c01],dl
  43e4f5:	int3   
  43e4f6:	call   FWORD PTR [esi-0x6d2b4dd0]
  43e4fc:	(bad)  
  43e4fd:	(bad)  
  43e4fe:	inc    DWORD PTR [eax]
  43e500:	retf   0xff00
  43e503:	push   ebx
  43e504:	ins    BYTE PTR es:[edi],dx
  43e505:	add    bh,bh
  43e507:	arpl   WORD PTR [ebx+0x79],bp
  43e50a:	sti    
  43e50b:	jmp    0x44e410
  43e510:	xor    bh,bh
  43e512:	jmp    DWORD PTR [ecx]
  43e514:	(bad)  
  43e515:	(bad)  
  43e516:	push   DWORD PTR [ecx-0x4e]
  43e519:	jge    0x43e596
  43e51b:	push   esp
  43e51c:	add    bh,bh
  43e51e:	add    bh,bh
  43e520:	mov    DWORD PTR ss:[ecx+0xff6c1e],ecx
  43e527:	cmp    ch,BYTE PTR [ecx+0x3bf1c]
  43e52d:	(bad)  
  43e52e:	inc    DWORD PTR [eax]
  43e530:	cmp    al,BYTE PTR [eax]
  43e532:	add    BYTE PTR [eax+0x74],cl
  43e535:	dec    DWORD PTR [ecx-0x286df1bb]
  43e53b:	test   al,0x0
  43e53d:	mov    DWORD PTR [eax],eax
  43e53f:	add    BYTE PTR [edi+0x5829ffff],dh
  43e545:	inc    DWORD PTR [eax]
  43e547:	sahf   
  43e548:	(bad)  
  43e549:	cmp    esi,DWORD PTR [edi+eax*2+0x0]
  43e54d:	(bad)  
  43e54e:	(bad)  
  43e54f:	call   edx
  43e551:	inc    DWORD PTR [eax]
  43e553:	stos   DWORD PTR es:[edi],eax
  43e554:	mov    DWORD PTR [eax],eax
  43e556:	call   DWORD PTR [ebp+0x5edc188a]
  43e55c:	add    bh,bh
  43e55e:	inc    DWORD PTR [eax]
  43e560:	fmul   st,st(4)
  43e562:	(bad)  
  43e563:	clc    
  43e564:	cmp    al,0xcc
  43e566:	add    BYTE PTR [edi],ah
  43e568:	out    0x3a,al
  43e56a:	xor    BYTE PTR [edx-0x767d0000],al
  43e570:	jecxz  0x43e53e
  43e572:	push   DWORD PTR [ecx]
  43e574:	imul   eax,DWORD PTR [eax],0x5251bdff
  43e57a:	lods   eax,DWORD PTR ds:[esi]
  43e57b:	jg     0x43e57d
  43e57d:	mov    DWORD PTR [ebx+0xff2a00],eax
  43e583:	div    DWORD PTR [ecx+ecx*4]
  43e586:	add    BYTE PTR [ebp-0x4d06d11a],ch
  43e58c:	add    DWORD PTR [eax],0xffffffff
  43e58f:	int3   
  43e590:	sub    al,0x0
  43e592:	add    cl,dl
  43e594:	cmp    eax,0xca180083
  43e599:	inc    esp
  43e59a:	imul   ecx,esi,0xff00ffff
  43e5a0:	cmp    bh,0xff
  43e5a3:	daa    
  43e5a4:	repnz add bh,bh
  43e5a7:	scas   al,BYTE PTR es:[edi]
  43e5a8:	sbb    dl,BYTE PTR [edx-0x50]
  43e5ab:	cmp    eax,0x8983ff89
  43e5b0:	sbb    eax,0x19b689ff
  43e5b5:	(bad)  
  43e5b6:	jmp    esi
  43e5b8:	div    BYTE PTR [edi]
  43e5ba:	arpl   WORD PTR [edx],bx
  43e5bc:	mov    esp,ecx
  43e5be:	mov    DWORD PTR [eax],eax
  43e5c0:	test   eax,0xf73a0000
  43e5c5:	inc    DWORD PTR [eax]
  43e5c7:	test   edi,0x8347837d
  43e5cd:	(bad)  
  43e5ce:	dec    DWORD PTR [ecx+0x360083b7]
  43e5d4:	or     bh,bh
  43e5d6:	add    dh,bh
  43e5d8:	inc    esi
  43e5d9:	cmc    
  43e5da:	adc    al,0xb4
  43e5dc:	int3   
  43e5dd:	mov    edi,edi
  43e5df:	call   DWORD PTR [ecx+0x4d5a0000]
  43e5e5:	add    BYTE PTR [eax],al
  43e5e7:	sub    edi,DWORD PTR [edi]
  43e5e9:	sbb    dl,dh
  43e5eb:	add    BYTE PTR fs:[eax],al
  43e5ee:	mov    DWORD PTR [eax],eax
  43e5f0:	out    dx,al
  43e5f1:	add    bh,bh
  43e5f3:	mov    eax,0x688383f3
  43e5f8:	pop    ss
  43e5f9:	(bad)  
  43e5fa:	jmp    0x43e5d5
  43e5fc:	add    DWORD PTR [eax],0x0
  43e5ff:	call   FWORD PTR [ebx-0x16a60077]
  43e605:	inc    DWORD PTR [ebx-0x248892c6]
  43e60b:	xchg   edi,edi
  43e60d:	inc    DWORD PTR [eax]
  43e60f:	add    BYTE PTR [edx-0x4b4c7601],bh
  43e615:	(bad)  
  43e616:	jmp    FWORD PTR [ebx+edx*2-0x7d9957]
  43e61d:	int3   
  43e61e:	inc    DWORD PTR [ebx+0x61ff83ad]
  43e624:	icebp  
  43e625:	inc    DWORD PTR [eax]
  43e627:	push   ebp
  43e628:	in     eax,dx
  43e629:	cmp    DWORD PTR [esp+ebp*8-0x3300007d],edi
  43e630:	inc    ecx
  43e631:	(bad)  
  43e632:	(bad)  
  43e633:	out    dx,eax
  43e634:	push   0xffffffff
  43e636:	add    BYTE PTR [edx+0x4c],ah
  43e639:	addr16 inc ebp
  43e63b:	push   ds
  43e63c:	add    bh,bh
  43e63e:	(bad)  
  43e63f:	(bad)  
  43e640:	fcos   
  43e642:	add    BYTE PTR [ebx],cl
  43e644:	loopne 0x43e645
  43e646:	add    ch,dl
  43e648:	outs   dx,BYTE PTR ds:[esi]
  43e649:	dec    esp
  43e64a:	sti    
  43e64b:	gs (bad) 
  43e64d:	inc    DWORD PTR [eax]
  43e64f:	call   FWORD PTR [ecx-0x1]
  43e652:	mov    edi,eax
  43e654:	mov    dh,0xcc
  43e656:	int3   
  43e657:	shr    ebx,cl
  43e659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e65a:	aam    0x9a
  43e65c:	inc    DWORD PTR [ebx-0x8c0001]
  43e662:	add    BYTE PTR [ebx],al
  43e664:	jp     0x43e665
  43e666:	sub    DWORD PTR [esi+0x3c2f4776],0x0
  43e66d:	(bad)  
  43e66e:	inc    DWORD PTR [ebx-0x12ff0027]
  43e674:	push   0x0
  43e676:	mov    DWORD PTR [esi-0x57245827],ecx
  43e67c:	add    DWORD PTR [eax],0x0
  43e67f:	call   FWORD PTR [edi+edi*8+0x0]
  43e683:	cmc    
  43e684:	aaa    
  43e685:	(bad)  
  43e686:	push   DWORD PTR [ebp+0xe]
  43e689:	push   ebx
  43e68a:	popa   
  43e68b:	xor    esp,ecx
  43e68d:	add    bh,bh
  43e68f:	call   FWORD PTR [eax-0x7d]
  43e692:	int3   
  43e693:	xchg   edx,eax
  43e694:	adc    al,0xff
  43e696:	jmp    DWORD PTR [eax]
  43e698:	fadd   st,st(6)
  43e69a:	xor    eax,0x890000ca
  43e69f:	add    BYTE PTR [eax],ah
  43e6a1:	(bad)  
  43e6a2:	(bad)  
  43e6a3:	in     eax,dx
  43e6a4:	cmp    bh,bh
  43e6a6:	call   FWORD PTR [edx-0x53ad126f]
  43e6ac:	mov    DWORD PTR [eax],eax
  43e6ae:	(bad)  
  43e6af:	inc    DWORD PTR [ebx+0x0]
  43e6b2:	call   FWORD PTR [edi-0x1000ffeb]
  43e6b8:	inc    esi
  43e6b9:	dec    ebp
  43e6ba:	add    DWORD PTR [ebp-0x1],0x300ffcc
  43e6c1:	add    BYTE PTR [ecx+0x899988],cl
  43e6c7:	inc    ebp
  43e6c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43e6c9:	jmp    0xff:0xffff4a78
  43e6d0:	push   0x0
  43e6d2:	dec    DWORD PTR ds:0x4283ffde
  43e6d8:	jae    0x43e6a4
  43e6da:	adc    ah,BYTE PTR [edx-0x1]
  43e6dd:	add    BYTE PTR [ecx-0x7c00f300],cl
  43e6e3:	loope  0x43e6e1
  43e6e5:	add    DWORD PTR [eax],0xffffff9c
  43e6e8:	jp     0x43e680
  43e6ea:	adc    eax,0xffffc6
  43e6ef:	xor    DWORD PTR [ecx],0xffffffcc
  43e6f2:	add    BYTE PTR [edi],bl
  43e6f4:	cld    
  43e6f5:	add    bh,bh
  43e6f7:	sub    bh,BYTE PTR [ecx-0x57]
  43e6fa:	fcomp  QWORD PTR [edx-0x76007c01]
  43e700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e701:	inc    DWORD PTR [eax]
  43e703:	in     eax,0x2
  43e705:	cmp    edi,0xfffffff8
  43e708:	(bad)  
  43e709:	xchg   edi,eax
  43e70a:	daa    
  43e70b:	xor    DWORD PTR [eax],eax
  43e70d:	dec    esp
  43e70f:	add    BYTE PTR [ebp+0x762e00cc],bh
  43e715:	int3   
  43e716:	add    cl,bl
  43e718:	cs js  0x43e69d
  43e71b:	add    DWORD PTR [eax],eax
  43e71d:	dec    esp
  43e71f:	sbb    edi,0xffffffff
  43e722:	jmp    FWORD PTR [ebp+eiz*2+0x1554ffff]
  43e729:	mov    al,0x68
  43e72b:	mov    esp,0x83ff0000
  43e730:	xrelease mov DWORD PTR [eax],eax
  43e733:	mov    eax,eax
  43e735:	(bad)  
  43e736:	(bad)  
  43e737:	jnp    0x43e6f5
  43e739:	and    DWORD PTR [edi+0x69],ebx
  43e73c:	add    ah,cl
  43e73e:	add    BYTE PTR [eax],al
  43e740:	add    eax,0x8f2c8300
  43e745:	int3   
  43e746:	xor    DWORD PTR [edx+0x1e],0xffffff81
  43e74a:	inc    edi
  43e74b:	enter  0x8300,0xff
  43e74f:	jmp    FWORD PTR [ebx]
  43e751:	add    bh,bh
  43e753:	shl    DWORD PTR [ebx],0x0
  43e756:	jmp    DWORD PTR [esi-0x3d]
  43e759:	mov    edx,0xccff95d3
  43e75e:	inc    DWORD PTR [ebx-0x700001e]
  43e764:	loop   0x43e765
  43e766:	int3   
  43e767:	push   ss
  43e768:	cmp    ebx,DWORD PTR [esi+esi*4-0x3d]
  43e76c:	add    BYTE PTR [eax],al
  43e76e:	inc    DWORD PTR [ebx+0x7e00ff8b]
  43e774:	lahf   
  43e775:	(bad)  
  43e776:	push   DWORD PTR [ebx]
  43e778:	lahf   
  43e779:	mov    BYTE PTR ds:0xff00003a,bl
  43e77f:	mov    edx,esi
  43e781:	inc    DWORD PTR [ebx-0x9539]
  43e787:	pop    ecx
  43e788:	in     eax,dx
  43e789:	dec    esi
  43e78a:	fst    DWORD PTR [edi+edi*8-0x75ff0001]
  43e791:	add    BYTE PTR [eax],al
  43e793:	out    0x36,eax
  43e795:	inc    DWORD PTR [eax]
  43e797:	push   edx
  43e798:	pop    edx
  43e799:	int3   
  43e79a:	sub    ebx,ecx
  43e79c:	(bad)  
  43e79d:	(bad)  
  43e79e:	inc    DWORD PTR [ebx+0xaccffa8]
  43e7a4:	sbb    DWORD PTR [ebx-0x5bfb8b34],eax
  43e7aa:	sti    
  43e7ab:	add    al,0x0
  43e7ad:	add    DWORD PTR [ebx-0x7cdf00],0xfffffffc
  43e7b4:	fmulp  st(4),st
  43e7b6:	push   DWORD PTR [ebp+ebx*4+0x8de13f]
  43e7bd:	add    bh,bh
  43e7bf:	add    BYTE PTR [ebx-0x5f547c01],bl
  43e7c5:	(bad)  
  43e7c6:	(bad)  
  43e7c7:	mov    edi,0xc559cac4
  43e7cc:	mov    DWORD PTR [ecx+0x248383],ecx
  43e7d2:	add    BYTE PTR [esi+0x6a],ah
  43e7d5:	inc    DWORD PTR [ebx-0x33fd10c1]
  43e7db:	and    al,0xff
  43e7dd:	inc    DWORD PTR [eax]
  43e7df:	call   ebp
  43e7e1:	add    DWORD PTR [eax],0x7c
  43e7e4:	jmp    0xfcb2:0x63c40083
  43e7eb:	idiv   bh
  43e7ed:	add    bh,bh
  43e7ef:	call   FWORD PTR [edi-0x1]
  43e7f2:	add    BYTE PTR [ebp+0x5aff00fa],al
  43e7f8:	popa   
  43e7f9:	dec    edi
  43e7fa:	mov    WORD PTR [edi+edi*8+0x4900ffff],fs
  43e801:	(bad)  
  43e802:	(bad)  
  43e803:	aas    
  43e804:	inc    DWORD PTR ds:[eax]
  43e807:	(bad)  
  43e808:	fstp   QWORD PTR [eax+0x9247]
  43e80e:	add    BYTE PTR [ecx+0x29ffff0a],cl
  43e814:	push   ebx
  43e815:	mov    edi,edi
  43e817:	outs   dx,DWORD PTR ds:[esi]
  43e818:	lds    edx,FWORD PTR [eax]
  43e81a:	xor    cl,BYTE PTR [eax]
  43e81c:	mov    DWORD PTR [eax],eax
  43e81e:	inc    DWORD PTR [ebx+0x3e89894b]
  43e824:	and    al,0xff
  43e826:	int3   
  43e827:	sub    eax,DWORD PTR [edx-0xb1bc91]
  43e82d:	(bad)  
  43e82e:	inc    DWORD PTR [ebx-0x30ff7c0b]
  43e834:	or     esp,ecx
  43e836:	add    BYTE PTR [ebx+eiz*2-0xaa2bc0],dl
  43e83d:	(bad)  
  43e83e:	(bad)  
  43e83f:	inc    eax
  43e841:	(bad)  
  43e842:	call   DWORD PTR [esi+0x4b]
  43e845:	mov    DWORD PTR [ecx+0x2dc3c1cb],ecx
  43e84b:	xchg   ecx,eax
  43e84c:	(bad)  
  43e84d:	inc    DWORD PTR [eax]
  43e84f:	call   FWORD PTR [edx-0x17010000]
  43e855:	add    BYTE PTR [eax],al
  43e857:	and    eax,0x5bd9964b
  43e85c:	int3   
  43e85d:	inc    DWORD PTR [eax]
  43e85f:	add    BYTE PTR [ebp-0x7d],dl
  43e862:	inc    DWORD PTR [ecx]
  43e864:	leave  
  43e865:	(bad)  
  43e866:	dec    DWORD PTR [esi+eax*1+0x6b]
  43e86a:	push   edx
  43e86b:	int3   
  43e86c:	add    bh,bh
  43e86e:	add    BYTE PTR [ebx-0x29000087],al
  43e874:	cs (bad) 
  43e876:	dec    ebp
  43e878:	inc    edx
  43e879:	ja     0x43e840
  43e87b:	fild   WORD PTR [eax]
  43e87d:	cmp    edi,0x0
  43e880:	into   
  43e881:	cmp    edi,0x5d
  43e884:	popa   
  43e885:	mov    edi,edi
  43e887:	push   esi
  43e888:	shl    BYTE PTR [esi],cl
  43e88a:	mov    ds:0xcc83cc75,eax
  43e88f:	add    BYTE PTR [ecx+0x983ff00],dh
  43e895:	add    ah,cl
  43e897:	pop    esp
  43e898:	xor    al,0xaa
  43e89a:	sub    bl,BYTE PTR [edi+edi*8+0x3e83ff00]
  43e8a1:	add    BYTE PTR [eax],al
  43e8a3:	jle    0x43e82c
  43e8a5:	dec    DWORD PTR [ecx+0x4063093e]
  43e8ab:	fimul  DWORD PTR [ecx-0x747c0001]
  43e8b1:	dec    esp
  43e8b3:	dec    edi
  43e8b4:	xchg   esp,eax
  43e8b5:	add    bh,bh
  43e8b7:	mov    al,0x1a
  43e8b9:	and    cl,BYTE PTR [edx-0x17]
  43e8bc:	add    BYTE PTR [eax],al
  43e8be:	cmp    edi,0x1f
  43e8c1:	add    bh,bh
  43e8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43e8c4:	aas    
  43e8c5:	inc    DWORD PTR [ebx+0x7ae19526]
  43e8cb:	loope  0x43e8cd
  43e8cd:	dec    esp
  43e8cf:	add    BYTE PTR ds:0xf63e00ff,dh
  43e8d5:	add    BYTE PTR [eax],al
  43e8d7:	dec    esi
  43e8d8:	sbb    eax,0xff50659b
  43e8dd:	inc    DWORD PTR [eax]
  43e8df:	int3   
  43e8e0:	(bad)  
  43e8e1:	(bad)  
  43e8e2:	(bad)  
  43e8e3:	js     0x43e914
  43e8e5:	add    bh,bh
  43e8e7:	lds    esp,FWORD PTR [ebx]
  43e8e9:	dec    edi
  43e8ea:	ds or  edi,edi
  43e8ed:	add    BYTE PTR [ebx-0x317d],al
  43e8f3:	rcr    DWORD PTR [ebx],cl
  43e8f5:	(bad)  
  43e8f6:	dec    DWORD PTR [ecx]
  43e8f8:	push   ds
  43e8f9:	jg     0x43e8f0
  43e8fb:	mov    edi,edi
  43e8fd:	(bad)  
  43e8fe:	(bad)  
  43e8ff:	jmp    edi
  43e901:	add    BYTE PTR [ecx+0x83fa2c],cl
  43e907:	ret    0x145b
  43e90a:	and    bl,BYTE PTR [edi]
  43e90c:	int3   
  43e90d:	dec    DWORD PTR [ecx-0x7c7cfc34]
  43e913:	push   0x16ffff8c
  43e918:	in     al,dx
  43e919:	scas   eax,DWORD PTR es:[edi]
  43e91a:	push   ebx
  43e91b:	test   al,0x89
  43e91d:	dec    esp
  43e91f:	add    DWORD PTR [ebx-0x62b1ff34],0xffffff83
  43e926:	sbb    DWORD PTR [edi+0x0],0xffffffae
  43e92a:	std    
  43e92b:	push   edx
  43e92c:	or     DWORD PTR [ecx-0x33a30001],0xffffffff
  43e933:	mul    edi
  43e935:	add    BYTE PTR [eax],al
  43e937:	shl    BYTE PTR [edx+0x65abc5],1
  43e93d:	dec    DWORD PTR [ecx-0xff377d]
  43e943:	mov    BYTE PTR ss:[eax],0xff
  43e947:	sub    al,0x83
  43e949:	(bad)  [edi-0x70]
  43e94c:	add    BYTE PTR [ebx-0x370001],al
  43e952:	add    BYTE PTR [ecx+0xc],al
  43e955:	add    bh,bh
  43e957:	xchg   edx,eax
  43e958:	retf   0x30de
  43e95b:	sub    bh,bh
  43e95d:	add    ah,cl
  43e95f:	push   DWORD PTR [edx]
  43e961:	inc    DWORD PTR [ebx-0x3376c45c]
  43e967:	add    DWORD PTR es:[ecx+ecx*4+0xff897f],ebx
  43e96f:	jmp    DWORD PTR [ecx-0x359a0000]
  43e975:	add    bh,bh
  43e977:	or     DWORD PTR [eax],ebp
  43e979:	hlt    
  43e97a:	or     BYTE PTR [esi],dh
  43e97c:	add    BYTE PTR [eax],al
  43e97e:	dec    DWORD PTR [ecx+0x12ff8920]
  43e984:	cli    
  43e985:	add    bh,bh
  43e987:	stc    
  43e988:	jmp    DWORD PTR [esi+0x893e7e]
  43e98e:	dec    DWORD PTR [ecx+0x28000044]
  43e994:	das    
  43e995:	inc    DWORD PTR [eax]
  43e997:	add    eax,0xfb69a55
  43e99c:	cmp    edi,0x0
  43e99f:	and    DWORD PTR [edi],0xffffffff
  43e9a2:	and    DWORD PTR [edi+0x46],0xffffffff
  43e9a6:	inc    ebp
  43e9a8:	mov    fs,WORD PTR [esi+0x15f0]
  43e9ae:	int3   
  43e9af:	add    bl,ch
  43e9b1:	inc    DWORD PTR [eax]
  43e9b3:	ss jo  0x43e9b6
  43e9b6:	push   DWORD PTR [ebp+eiz*1+0x1a]
  43e9ba:	(bad)  
  43e9bb:	stc    
  43e9bc:	add    ah,cl
  43e9be:	(bad)  
  43e9bf:	(bad)  
  43e9c0:	dec    DWORD PTR ds:[ecx-0xff069f]
  43e9c7:	xchg   ebx,eax
  43e9c8:	sbb    al,BYTE PTR [esp+eax*2]
  43e9cb:	iret   
  43e9cc:	inc    DWORD PTR [eax]
  43e9ce:	inc    DWORD PTR [ebx+0xff8311]
  43e9d4:	jmp    0x3b7c:0x6fdaffff
  43e9db:	retf   
  43e9dc:	mov    DWORD PTR [eax],eax
  43e9de:	inc    DWORD PTR [ebx+0x2d89cc90]
  43e9e4:	mov    DWORD PTR [ebx+0x6a680683],0xffff1d70
  43e9ee:	(bad)  
  43e9ef:	call   DWORD PTR [esi+0x7fd0000]
  43e9f5:	cmp    edi,0x14
  43e9f8:	test   BYTE PTR [ecx-0xff4b46],dl
  43e9fe:	inc    DWORD PTR [eax]
  43ea00:	mov    edi,edi
  43ea02:	add    BYTE PTR [esi+0x1100001e],bl
  43ea08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43ea09:	jle    0x43ea5b
  43ea0b:	icebp  
  43ea0c:	inc    DWORD PTR [ebx-0x880000]
  43ea12:	or     DWORD PTR [ecx-0x27],0xffffff89
  43ea16:	call   DWORD PTR [eax+0x37]
  43ea19:	mov    ds:0x83003274,al
  43ea1e:	mov    DWORD PTR [eax],eax
  43ea20:	mov    eax,ds:0xb41500ff
  43ea25:	add    DWORD PTR [eax],0x6c
  43ea28:	push   eax
  43ea29:	data16 fstp st(6)
  43ea2c:	add    BYTE PTR [eax],al
  43ea2e:	dec    esp
  43ea30:	test   eax,0x44edff00
  43ea35:	mov    edi,edi
  43ea37:	xor    eax,esi
  43ea39:	bound  eax,QWORD PTR [edx-0x3324]
  43ea3f:	jmp    DWORD PTR [edi-0x74f0034]
  43ea45:	add    DWORD PTR [eax],0xffffffb7
  43ea48:	mov    edi,0x89a06c29
  43ea4d:	cmp    edi,0x0
  43ea50:	dec    DWORD PTR gs:[ecx-0x4b3d]
  43ea57:	aam    0x2
  43ea59:	outs   dx,BYTE PTR ds:[esi]
  43ea5a:	adc    eax,0xffcc895c
  43ea5f:	(bad)  
  43ea60:	(bad)  
  43ea61:	(bad)  
  43ea62:	push   DWORD PTR [edi]
  43ea64:	cs (bad) 
  43ea66:	(bad)  
  43ea67:	jnp    0x43ea85
  43ea69:	hlt    
  43ea6a:	loope  0x43ea79
  43ea6c:	inc    DWORD PTR [eax]
  43ea6e:	dec    esp
  43ea70:	add    DWORD PTR [eax],0x70a683
  43ea76:	call   FWORD PTR [edi+0x55]
  43ea79:	jg     0x43ead5
  43ea7b:	pop    eax
  43ea7c:	(bad)  
  43ea7d:	(bad)  
  43ea7e:	(bad)  
  43ea7f:	(bad)  
  43ea80:	(bad)  
  43ea82:	int3   
  43ea83:	int3   
  43ea84:	test   eax,0x35a68300
  43ea89:	pop    esi
  43ea8a:	pop    es
  43ea8b:	mov    edx,0xff830089
  43ea90:	repnz add BYTE PTR [eax],al
  43ea93:	cmp    eax,ecx
  43ea95:	add    BYTE PTR [eax],al
  43ea97:	cs dec edi
  43ea9a:	push   eax
  43ea9b:	dec    eax
  43ea9c:	int3   
  43ea9d:	add    bh,bh
  43ea9f:	jmp    FWORD PTR [esi+0x6f60ff00]
  43eaa5:	add    bh,bh
  43eaa7:	cmp    eax,0x46c3cb99
  43eaac:	int3   
  43eaad:	(bad)  
  43eaae:	(bad)  
  43eaaf:	call   FWORD PTR [esi]
  43eab1:	(bad)  
  43eab2:	inc    DWORD PTR [edx]
  43eab4:	leave  
  43eab5:	inc    DWORD PTR [eax]
  43eab7:	std    
  43eab8:	retf   0xe8c6
  43eabb:	mov    ah,0x83
  43eabd:	inc    DWORD PTR [eax]
  43eabf:	sub    DWORD PTR [esp+ecx*8],0xffffffff
  43eac3:	and    BYTE PTR [edi],0xff
  43eac6:	int3   
  43eac7:	aam    0x5b
  43eac9:	lods   eax,DWORD PTR cs:[esi]
  43eacb:	or     ecx,DWORD PTR [ecx-0x11000077]
  43ead1:	or     esp,0xffffffc4
  43ead4:	mov    ds:0xac4989ff,eax
  43ead9:	push   ds
  43eada:	ins    DWORD PTR es:[edi],dx
  43eadb:	dec    esp
  43eadd:	add    bh,bh
  43eadf:	push   edx
  43eae1:	inc    DWORD PTR [ebx-0xff5e59]
  43eae7:	imul   ecx,DWORD PTR [edx-0xc927b9],0x9700ffff
  43eaf1:	cmp    edi,0x6f
  43eaf4:	in     al,0xff
  43eaf6:	(bad)  
  43eaf7:	cmp    dl,dl
  43eaf9:	xchg   BYTE PTR [ebp-0x7],ch
  43eafc:	dec    DWORD PTR [ecx-0x7c4a7c34]
  43eb02:	jmp    FWORD PTR [ecx+ebp*1+0x0]
  43eb06:	add    bl,bh
  43eb08:	imul   ecx,esi,0xfffff09f
  43eb0e:	mov    DWORD PTR [eax],eax
  43eb10:	iret   
  43eb11:	int3   
  43eb12:	inc    DWORD PTR [esi+0x5500005a]
  43eb18:	outs   dx,BYTE PTR ds:[esi]
  43eb19:	leave  
  43eb1a:	inc    eax
  43eb1b:	inc    edi
  43eb1c:	(bad)  
  43eb1d:	(bad)  
  43eb1e:	inc    DWORD PTR [eax]
  43eb20:	or     al,BYTE PTR [eax]
  43eb22:	add    BYTE PTR [ecx-0x19007c62],al
  43eb28:	loop   0x43eb61
  43eb2a:	push   0xffff8366
  43eb2f:	inc    DWORD PTR [eax+0x0]
  43eb32:	sbb    DWORD PTR [ebp+0x2effcc7a],0x1
  43eb39:	stc    
  43eb3a:	cwde   
  43eb3b:	xchg   ecx,eax
  43eb3c:	add    bh,bh
  43eb3e:	add    bh,bh
  43eb40:	mov    DWORD PTR [eax],eax
  43eb42:	mov    DWORD PTR [ebp-0x3e],eax
  43eb45:	dec    DWORD PTR [ecx+0x3bace3d5]
  43eb4b:	mov    ecx,0xffff83
  43eb50:	inc    esp
  43eb51:	(bad)  
  43eb52:	inc    DWORD PTR [esi+0x46]
  43eb55:	cmp    edi,0x2e
  43eb58:	pop    ss
  43eb59:	xchg   edx,eax
  43eb5a:	sbb    cl,dl
  43eb5c:	mov    edi,edi
  43eb5e:	(bad)  
  43eb5f:	(bad)  
  43eb60:	mov    ecx,0x35310000
  43eb65:	add    BYTE PTR [ebx-0x7445cc7e],al
  43eb6b:	imul   eax,DWORD PTR [ebx-0x3dffff01],0x2dc5ff00
  43eb75:	int3   
  43eb76:	add    dh,cl
  43eb78:	ficomp DWORD PTR [edi+edi*2-0x34]
  43eb7c:	(bad)  
  43eb7d:	inc    DWORD PTR [ebx+0x895f00]
  43eb83:	xlat   BYTE PTR ds:[ebx]
  43eb84:	cmp    ecx,esp
  43eb86:	add    DWORD PTR [edx-0x264451ff],0xffffffff
  43eb8d:	int3   
  43eb8e:	mov    edi,edi
  43eb90:	push   0x12cfffcc
  43eb95:	add    BYTE PTR [ebx-0x6cdc85d2],al
  43eb9b:	push   0xffffffff
  43eb9d:	(bad)  
  43eb9e:	inc    DWORD PTR [eax]
  43eba0:	mov    al,0xcc
  43eba2:	(bad)  
  43eba3:	mov    esp,0x2ecc0085
  43eba8:	sbb    DWORD PTR [eax+0xff9654],0xffffffff
  43ebaf:	int3   
  43ebb0:	cwde   
  43ebb1:	int3   
  43ebb2:	jmp    DWORD PTR [ebx]
  43ebb4:	lahf   
  43ebb5:	(bad)  
  43ebb6:	jmp    DWORD PTR [edi+edi*8-0x7c7f1ff8]
  43ebbd:	add    BYTE PTR [eax],al
  43ebbf:	int3   
  43ebc0:	out    dx,al
  43ebc1:	inc    DWORD PTR [eax]
  43ebc3:	pop    esi
  43ebc4:	fdivr  st,st(7)
  43ebc6:	int3   
  43ebc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43ebc8:	js     0x43eb81
  43ebca:	jmp    0x43ec48
  43ebcc:	(bad)  
  43ebcd:	(bad)  
  43ebce:	(bad)  
  43ebcf:	(bad)  
  43ebd0:	mov    esi,0x60f3ccff
  43ebd5:	(bad)  
  43ebd6:	(bad)  
  43ebd7:	call   0x6b938791
  43ebdc:	add    BYTE PTR [eax],al
  43ebde:	add    BYTE PTR [eax],al
  43ebe0:	jb     0x43ebe1
  43ebe2:	jmp    FWORD PTR ds:0xbbff8354
  43ebe8:	add    BYTE PTR [edi+ebx*8+0x4d],bl
  43ebec:	int3   
  43ebed:	add    bh,bh
  43ebef:	add    BYTE PTR [edi-0x34],cl
  43ebf2:	jmp    FWORD PTR [ebx]
  43ebf4:	jle    0x43eb7f
  43ebf6:	(bad)  
  43ebf7:	cmp    ebx,DWORD PTR [edx+0x1e]
  43ebfa:	imul   eax,DWORD PTR [edx],0xffffff83
  43ebfd:	(bad)  
  43ebfe:	(bad)  
  43ebff:	call   edi
  43ec01:	dec    DWORD PTR [ecx-0xffab1d]
  43ec07:	adc    al,0x1f
  43ec09:	xlat   BYTE PTR ds:[ebx]
  43ec0a:	mov    bl,BYTE PTR ds:0xffccff00
  43ec10:	lea    eax,[eax]
  43ec12:	dec    DWORD PTR [esi]
  43ec14:	mov    ah,0xff
  43ec16:	mov    DWORD PTR [edi+0x3150dafa],ebx
  43ec1c:	add    BYTE PTR [ebx-0x5d0001],al
  43ec22:	add    BYTE PTR [eax+eiz*2],ah
  43ec25:	add    ah,cl
  43ec27:	pushf  
  43ec28:	addr16 in eax,dx
  43ec2a:	dec    ecx
  43ec2b:	pop    ebx
  43ec2c:	int3   
  43ec2d:	(bad)  
  43ec2e:	(bad)  
  43ec2f:	inc    DWORD PTR [edx+0x464b8300]
  43ec35:	inc    DWORD PTR [eax]
  43ec37:	inc    esi
  43ec38:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  43ec3a:	js     0x43ebc7
  43ec3c:	add    bh,bh
  43ec3e:	add    bh,bh
  43ec40:	into   
  43ec41:	add    bh,bh
  43ec43:	cs cmp bh,bh
  43ec46:	and    DWORD PTR [esi],0xffffffd5
  43ec49:	mov    ah,0x35
  43ec4b:	rol    BYTE PTR [ebx-0x26ff7c01],cl
  43ec51:	(bad)  
  43ec52:	jmp    FWORD PTR [eax-0x75760075]
  43ec58:	and    eax,0x833cea2f
  43ec5d:	inc    DWORD PTR [eax]
  43ec5f:	add    BYTE PTR ds:0x4506ffcc,ch
  43ec65:	(bad)  
  43ec66:	call   FWORD PTR [eax-0x37ad7377]
  43ec6c:	add    DWORD PTR [eax],0xffffffff
  43ec6f:	dec    DWORD PTR [edi-0x1]
  43ec72:	inc    DWORD PTR [edx+0x1f8300fe]
  43ec78:	mov    DWORD PTR [eax+0x35],ecx
  43ec7b:	sahf   
  43ec7c:	mov    DWORD PTR [ebx+0xc4cccc],eax
  43ec82:	int3   
  43ec83:	sbb    al,0x2d
  43ec85:	inc    DWORD PTR [ebx-0x61eb0d04]
  43ec8b:	or     ecx,esp
  43ec8d:	(bad)  
  43ec8e:	(bad)  
  43ec8f:	call   DWORD PTR [edi]
  43ec91:	add    BYTE PTR [eax],al
  43ec93:	fprem  
  43ec95:	add    bh,bh
  43ec97:	nop
  43ec98:	jle    0x43eca3
  43ec9a:	out    0x96,al
  43ec9c:	mov    edi,edi
  43ec9e:	mov    edi,edi
  43eca0:	cs add bh,bh
  43eca3:	div    DWORD PTR [ebx-0x1]
  43eca6:	dec    ebp
  43eca8:	adc    eax,0xfffa7105
  43ecad:	inc    DWORD PTR [ebx-0xaf7d]
  43ecb3:	fstp   QWORD PTR [ebp-0x7d]
  43ecb6:	add    BYTE PTR [eax+0x4],dl
  43ecb9:	xchg   DWORD PTR [ebx-0x1c],ebx
  43ecbc:	(bad)  
  43ecbd:	(bad)  
  43ecbe:	(bad)  
  43ecbf:	dec    DWORD PTR [eax]
  43ecc1:	add    bh,bh
  43ecc3:	repnz inc edx
  43ecc5:	inc    DWORD PTR [ebx-0x417a5007]
  43eccb:	jecxz  0x43ec56
  43eccd:	add    bh,bh
  43eccf:	call   DWORD PTR [edx-0x4e00100]
  43ecd5:	add    bh,bh
  43ecd7:	add    esp,edi
  43ecd9:	adc    ebx,DWORD PTR [eax+0x40]
  43ecdc:	(bad)  
  43ecdd:	inc    DWORD PTR [eax]
  43ecdf:	adc    DWORD PTR [ebp+0x18beffff],0xffffff83
  43ece6:	sub    DWORD PTR [edx],0xffffffd0
  43ece9:	pop    esi
  43ecea:	out    0x7f,eax
  43ecec:	add    BYTE PTR [ecx-0x2a0077],cl
  43ecf2:	mov    DWORD PTR [ebx-0x71000078],edi
  43ecf8:	mov    ds:0x90f3d7,al
  43ecfd:	mov    DWORD PTR [eax],eax
  43ecff:	int3   
  43ed00:	jmp    0xff83:0xe91affff
  43ed07:	pop    edi
  43ed08:	or     esp,DWORD PTR ds:0xff00603c
  43ed0e:	dec    esp
  43ed10:	cmp    eax,0xf3a000ff
  43ed15:	int3   
  43ed16:	mov    edx,esi
  43ed18:	int    0x32
  43ed1a:	inc    edx
  43ed1b:	pushf  
  43ed1c:	(bad)  
  43ed1d:	inc    DWORD PTR [eax]
  43ed1f:	add    BYTE PTR [eax-0x34],ah
  43ed22:	add    al,dh
  43ed24:	(bad)  
  43ed27:	or     eax,0x828b74b4
  43ed2c:	inc    DWORD PTR [eax]
  43ed2e:	int3   
  43ed2f:	add    cl,ch
  43ed31:	int3   
  43ed32:	add    BYTE PTR [esi-0x67ff7614],dl
  43ed38:	sub    esp,DWORD PTR [edx+edi*2-0x1c]
  43ed3c:	add    BYTE PTR [eax],al
  43ed3e:	inc    DWORD PTR [ebx-0x6eff0033]
  43ed44:	aas    
  43ed45:	add    BYTE PTR [eax],al
  43ed47:	shl    BYTE PTR [ecx],0x5d
  43ed4a:	mov    ecx,0xffccff04
  43ed4f:	add    BYTE PTR [ebx],dh
  43ed51:	add    DWORD PTR [ebx-0xbd82],0xffffffa6
  43ed58:	int3   
  43ed59:	neg    ch
  43ed5b:	stc    
  43ed5c:	inc    DWORD PTR [ebx-0x76d8007d]
  43ed62:	jmp    DWORD PTR [eax-0x7c]
  43ed65:	mov    edi,edi
  43ed67:	or     eax,0xa9613d10
  43ed6c:	add    BYTE PTR [eax],al
  43ed6e:	add    DWORD PTR [eax],0x38
  43ed71:	add    BYTE PTR [ebx-0x7cffadd4],al
  43ed77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43ed78:	inc    edx
  43ed79:	sub    eax,0xff021b
  43ed7e:	(bad)  
  43ed7f:	call   DWORD PTR [ecx+0x0]
  43ed82:	int3   
  43ed83:	jbe    0x43ed5d
  43ed85:	(bad)  
  43ed86:	dec    DWORD PTR [esi]
  43ed88:	dec    ebx
  43ed89:	iret   
  43ed8a:	ret    
  43ed8b:	adc    bh,bh
  43ed8d:	inc    DWORD PTR [eax]
  43ed8f:	(bad)  
  43ed90:	fld    DWORD PTR [eax]
  43ed92:	jmp    FWORD PTR [edx-0x78]
  43ed95:	int3   
  43ed96:	call   FWORD PTR [esp+ebx*2-0x2b]
  43ed9a:	inc    esi
  43ed9b:	scas   al,BYTE PTR es:[edi]
  43ed9c:	int3   
  43ed9d:	add    bh,bh
  43ed9f:	add    bl,dl
  43eda1:	inc    DWORD PTR [eax]
  43eda3:	jno    0x43ede2
  43eda5:	inc    DWORD PTR [eax]
  43eda7:	push   ss
  43eda8:	in     al,0xae
  43edaa:	xor    DWORD PTR [ebx],edi
  43edac:	(bad)  
  43edad:	dec    esp
  43edaf:	add    ah,dh
  43edb1:	int3   
  43edb2:	mov    DWORD PTR [ebp+0x18],edx
  43edb5:	(bad)  
  43edb6:	push   DWORD PTR [eax]
  43edb8:	mov    edx,0x950f1
  43edbd:	(bad)  
  43edbe:	(bad)  
  43edbf:	dec    DWORD PTR [edx-0x7d]
  43edc2:	push   DWORD PTR [edx-0x7f]
  43edc5:	cmp    edi,0xffffffe7
  43edc8:	add    al,0xf4
  43edca:	lock in al,dx
  43edcc:	add    BYTE PTR [ebx-0x33500000],al
  43edd2:	int3   
  43edd3:	sti    
  43edd4:	sub    al,0x83
  43edd6:	sbb    DWORD PTR ds:0x672f78ea,0xffffff89
  43eddd:	add    bh,bh
  43eddf:	add    BYTE PTR [ecx],dh
  43ede1:	(bad)  
  43ede2:	call   FWORD PTR [eax+0x2]
  43ede5:	dec    esp
  43ede7:	dec    edi
  43ede8:	imul   eax,DWORD PTR [ecx-0xff4e96],0xffffffff
  43edef:	inc    DWORD PTR [ebx]
  43edf1:	(bad)  
  43edf2:	inc    DWORD PTR [ebx+0x67ff00b4]
  43edf8:	cmp    al,0xfa
  43edfa:	fistp  QWORD PTR [ecx-0x1]
  43edfd:	(bad)  
  43edfe:	inc    DWORD PTR [eax]
  43ee00:	push   esi
  43ee01:	(bad)  
  43ee02:	jmp    FWORD PTR [eax-0x6b00ffa7]
  43ee08:	adc    DWORD PTR [ebx+0x5e],edx
  43ee0b:	and    eax,0xccff83
  43ee10:	sar    edi,cl
  43ee12:	push   esp
  43ee14:	mov    bh,bh
  43ee16:	add    esp,0xffffffb4
  43ee19:	xor    DWORD PTR [edi],ebx
  43ee1b:	sbb    al,BYTE PTR [ebx+0x67ffff00]
  43ee21:	add    bh,bh
  43ee23:	xor    al,BYTE PTR gs:[ebx-0xaecee7d]
  43ee2a:	lahf   
  43ee2b:	inc    ecx
  43ee2c:	dec    esp
  43ee2e:	int3   
  43ee2f:	adc    ecx,0xffffffcc
  43ee32:	inc    ebx
  43ee34:	mov    ds:0xbaccffcc,al
  43ee39:	add    al,0xab
  43ee3b:	ror    BYTE PTR [ecx+0x578383ff],cl
  43ee41:	add    bh,bh
  43ee43:	test   DWORD PTR [ebp+0x4b200ff],esi
  43ee49:	push   ecx
  43ee4a:	rcl    BYTE PTR [edi+edi*8],0xff
  43ee4e:	int3   
  43ee4f:	add    BYTE PTR [ecx-0x257a7d00],cl
  43ee55:	add    BYTE PTR [eax],al
  43ee57:	ror    ebx,cl
  43ee59:	mov    esp,0xff89f671
  43ee5e:	mov    edi,edi
  43ee60:	sbb    edi,edi
  43ee62:	add    BYTE PTR [ecx-0x5f7c0054],cl
  43ee68:	pop    es
  43ee69:	inc    esi
  43ee6a:	push   esp
  43ee6b:	sar    bh,1
  43ee6d:	add    bh,bh
  43ee6f:	(bad)  
  43ee70:	mov    esi,0x206aff00
  43ee75:	inc    DWORD PTR [eax]
  43ee77:	ds mov edi,0xf75d04
  43ee7d:	inc    DWORD PTR [ebx+0xffe0ff]
  43ee83:	push   ss
  43ee84:	pop    ebp
  43ee85:	(bad)  
  43ee86:	(bad)  
  43ee87:	jl     0x43ee56
  43ee89:	fst    QWORD PTR [ebx]
  43ee8b:	add    edi,edi
  43ee8d:	mov    DWORD PTR [ebx+0x3ecc],eax
  43ee93:	add    BYTE PTR [ecx-0x1],ah
  43ee96:	jmp    FWORD PTR [esi]
  43ee98:	sar    ah,cl
  43ee9a:	addr16 imul edi,edi,0x0
  43ee9e:	mov    DWORD PTR [ebx-0x2ff76d2],eax
  43eea4:	mov    bh,0xff
  43eea6:	add    BYTE PTR [edi-0x65],ch
  43eea9:	dec    eax
  43eeaa:	pushf  
  43eeab:	xchg   edi,eax
  43eeac:	int3   
  43eead:	cmp    edi,0xffffffcc
  43eeb0:	inc    edx
  43eeb1:	mov    DWORD PTR [eax],eax
  43eeb3:	push   ss
  43eeb4:	and    bh,bh
  43eeb6:	push   DWORD PTR [ecx+ecx*8-0xe57c0d]
  43eebd:	(bad)  
  43eebe:	inc    DWORD PTR [eax]
  43eec0:	sar    bh,cl
  43eec2:	cmp    DWORD PTR [ecx-0x327cffc6],0xfffffff7
  43eec9:	mov    bl,0xb8
  43eecb:	mov    dh,0xff
  43eecd:	add    BYTE PTR [eax],al
  43eecf:	add    BYTE PTR [esi-0x5caf0001],cl
  43eed5:	add    BYTE PTR [eax],al
  43eed7:	cmp    eax,0xbe90ba69
  43eedc:	inc    DWORD PTR [ebx-0xb2ff34]
  43eee2:	call   FWORD PTR [ebp+0x2e00ccb6]
  43eee8:	in     eax,dx
  43eee9:	inc    ebx
  43eeea:	inc    ebp
  43eeeb:	mov    esi,0xff00ffff
  43eef0:	loopne 0x43eebe
  43eef2:	sub    DWORD PTR [eax-0x12],0x0
  43eef6:	push   DWORD PTR ds:0xe5a9293d
  43eefc:	inc    DWORD PTR [ebx-0xfd0001]
  43ef02:	inc    DWORD PTR [edx-0x34]
  43ef05:	inc    DWORD PTR [eax]
  43ef07:	mov    WORD PTR [ebp-0x3b],cs
  43ef0a:	dec    ebp
  43ef0b:	cs (bad) 
  43ef0d:	inc    DWORD PTR [ebx-0x1]
  43ef13:	or     DWORD PTR ds:[eax],eax
  43ef16:	and    DWORD PTR [edi+ebp*1-0x72d4d9],0x0
  43ef1e:	add    bh,bh
  43ef20:	dec    esi
  43ef21:	add    DWORD PTR [eax],0xfffffffb
  43ef24:	adc    eax,DWORD PTR [eax]
  43ef26:	int3   
  43ef27:	clc    
  43ef28:	xchg   edx,eax
  43ef29:	push   ecx
  43ef2a:	std    
  43ef2b:	repnz mov edi,edi
  43ef2e:	int3   
  43ef2f:	add    BYTE PTR [ecx],bl
  43ef31:	add    DWORD PTR [ebx-0x33002ec9],0x79
  43ef38:	sub    bl,bh
  43ef3a:	stc    
  43ef3b:	jecxz  0x43ef3d
  43ef3d:	(bad)  
  43ef3e:	inc    DWORD PTR [eax]
  43ef40:	inc    edi
  43ef41:	int3   
  43ef42:	sub    ebx,0x4b
  43ef45:	inc    DWORD PTR [ebx+0x569be916]
  43ef4b:	repnz dec DWORD PTR [ecx-0x830000]
  43ef52:	add    BYTE PTR [esi-0x390076db],cl
  43ef58:	push   ebp
  43ef59:	jno    0x43ef7a
  43ef5b:	xchg   ecx,eax
  43ef5c:	inc    DWORD PTR [eax]
  43ef5e:	add    BYTE PTR [ebx+0x600ffdb],al
  43ef64:	ds add bh,bh
  43ef67:	(bad)  [ecx]
  43ef69:	cmp    eax,0xf091
  43ef6e:	inc    DWORD PTR [ebx-0x77c004f]
  43ef74:	mov    DWORD PTR [eax],0xff698400
  43ef7a:	loop   0x43ef88
  43ef7c:	add    BYTE PTR [eax],al
  43ef7e:	cmp    edi,0xffffff9a
  43ef81:	int3   
  43ef82:	call   FWORD PTR [eax+0x29838338]
  43ef88:	add    eax,0xff42b4d3
  43ef8d:	inc    DWORD PTR [eax]
  43ef8f:	add    BYTE PTR [edx+0x0],ch
  43ef92:	jmp    DWORD PTR [eax]
  43ef94:	inc    BYTE PTR [ebx+0x7f212800]
  43ef9a:	mov    ebp,0xff9e
  43ef9f:	int3   
  43efa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43efa1:	add    ah,cl
  43efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43efa4:	xor    al,0xff
  43efa6:	call   FWORD PTR [edi]
  43efa8:	mov    al,ds:0xff873c99
  43efad:	add    bh,bh
  43efaf:	dec    DWORD PTR [esi-0x1]
  43efb2:	(bad)  
  43efb3:	push   DWORD PTR [eax-0x1]
  43efb6:	mov    DWORD PTR [esi],edx
  43efb8:	jmp    0x89:0xff1a5531
  43efbf:	call   DWORD PTR [eax]
  43efc1:	add    BYTE PTR [eax],al
  43efc3:	ins    DWORD PTR es:[edi],dx
  43efc4:	mov    ebp,0xfc32ff00
  43efc9:	test   BYTE PTR [edi-0xffff9d],0x0
  43efd0:	rol    BYTE PTR [ebx-0xcca07d],0xff
  43efd7:	mov    esp,0xcc58615e
  43efdc:	dec    DWORD PTR [ecx+0xd80000]
  43efe2:	jmp    edi
  43efe4:	imul   edi,edi,0xd37864ff
  43efea:	dec    eax
  43efeb:	sub    edi,edi
  43efed:	add    bh,bh
  43efef:	add    BYTE PTR [esi+0x47483ff],bl
  43eff5:	add    BYTE PTR [eax],al
  43eff7:	jmp    0x43efb5
  43eff9:	ja     0x43f028
  43effb:	aaa    
  43effc:	add    bh,bh
  43effe:	add    DWORD PTR [eax],0x5
  43f001:	int3   
  43f002:	adc    DWORD PTR [ebx-0x59],0xffffffcc
  43f006:	add    BYTE PTR [ebx-0x148ce99d],ah
  43f00c:	int3   
  43f00d:	add    bh,bh
  43f00f:	jmp    DWORD PTR [ecx]
  43f011:	add    bh,bh
  43f013:	xchg   esi,eax
  43f014:	(bad)  
  43f015:	inc    DWORD PTR [eax]
  43f017:	mov    edx,0xaa888014
  43f01c:	inc    DWORD PTR [eax]
  43f01e:	inc    DWORD PTR [eax]
  43f020:	xor    edi,edi
  43f022:	add    BYTE PTR [ebx+0x45],cl
  43f025:	(bad)  
  43f026:	dec    DWORD PTR [esi-0x4461705c]
  43f02c:	add    bh,bh
  43f02e:	mov    edi,edi
  43f030:	xchg   ebp,eax
  43f031:	inc    DWORD PTR [eax]
  43f033:	ins    BYTE PTR es:[edi],dx
  43f034:	xchg   ebp,eax
  43f035:	add    bh,bh
  43f037:	les    esp,FWORD PTR [edx+edx*1]
  43f03a:	(bad)  
  43f03b:	and    edi,edi
  43f03d:	int3   
  43f03e:	mov    edi,edi
  43f040:	jns    0x43f041
  43f042:	jmp    DWORD PTR [edx]
  43f044:	sbb    edi,edi
  43f046:	sub    edx,0x50
  43f049:	loope  0x43f021
  43f04b:	inc    edi
  43f04c:	or     DWORD PTR [ecx-0x33540034],0xffffffff
  43f053:	sahf   
  43f054:	and    al,BYTE PTR [eax]
  43f056:	int3   
  43f057:	adc    eax,0xa9758489
  43f05c:	add    bh,bh
  43f05e:	add    bh,bh
  43f060:	mov    DWORD PTR [ebx-0x7c27a500],eax
  43f066:	call   FWORD PTR [ebx]
  43f068:	arpl   bx,bx
  43f06a:	jge    0x43f082
  43f06c:	add    BYTE PTR [ebx-0x33f30100],al
  43f072:	add    edi,0x16
  43f075:	(bad)  
  43f076:	inc    ebp
  43f078:	(bad)  [esi-0x7c039b]
  43f07e:	add    bh,bh
  43f080:	inc    edx
  43f081:	inc    DWORD PTR [ebx-0xff042b]
  43f087:	sar    DWORD PTR [edx-0xeec97d],cl
  43f08d:	add    ah,cl
  43f08f:	add    BYTE PTR [ebp+0x12e900ff],dh
  43f095:	(bad)  
  43f096:	jmp    DWORD PTR [edi+0x69]
  43f099:	push   esi
  43f09a:	jo     0x43f08e
  43f09c:	add    bh,bh
  43f09e:	(bad)  
  43f09f:	dec    ebx
  43f0a1:	inc    DWORD PTR [eax]
  43f0a3:	mov    ebp,DWORD PTR [eax+0x0]
  43f0a6:	jmp    DWORD PTR [ebx]
  43f0a8:	repz aaa 
  43f0aa:	mov    cl,0x82
  43f0ac:	add    BYTE PTR [ebx-0x76147c7d],al
  43f0b2:	add    BYTE PTR [edi],dh
  43f0b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f0b5:	mov    DWORD PTR [ebx+0x7b04fa28],eax
  43f0bb:	aam    0xff
  43f0bd:	int3   
  43f0be:	add    BYTE PTR [eax],al
  43f0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f0c1:	add    bh,bh
  43f0c3:	mov    bl,0x41
  43f0c5:	dec    esp
  43f0c7:	xchg   edi,eax
  43f0c8:	sti    
  43f0c9:	int    0x50
  43f0cb:	mov    ebp,0x83ff0000
  43f0d0:	lods   al,BYTE PTR ds:[esi]
  43f0d1:	int3   
  43f0d2:	mov    DWORD PTR [esi],ebp
  43f0d4:	int    0x0
  43f0d6:	add    BYTE PTR [esi+0x284573ee],al
  43f0dc:	add    BYTE PTR [ebx-0x94ff34],al
  43f0e2:	add    dl,cl
  43f0e4:	sar    bh,1
  43f0e6:	jmp    FWORD PTR [eax+0x45]
  43f0e9:	retf   
  43f0ea:	cmp    BYTE PTR [eax+eax*1-0x7ff0001],ah
  43f0f1:	(bad)  
  43f0f2:	inc    eax
  43f0f4:	mov    ds:0x24f3ffff,al
  43f0f9:	mov    esp,0x89ff7097
  43f0fe:	(bad)  
  43f0ff:	jmp    DWORD PTR [edi+edi*8-0x33527100]
  43f106:	(bad)  
  43f107:	jmp    0x43f12e
  43f109:	pushf  
  43f10a:	retf   0xcc8d
  43f10d:	(bad)  
  43f10e:	inc    DWORD PTR [eax]
  43f110:	push   edx
  43f111:	add    bh,bh
  43f113:	and    al,bl
  43f115:	add    DWORD PTR [ebx+0x1191e773],0xffffff99
  43f11c:	add    BYTE PTR [ebx-0xaa0000],al
  43f122:	dec    DWORD PTR [edi-0x667c003d]
  43f128:	leave  
  43f129:	inc    esp
  43f12a:	pop    ss
  43f12b:	fild   WORD PTR [eax]
  43f12d:	add    BYTE PTR [eax],al
  43f12f:	int3   
  43f130:	mov    ds:0x6d7cff00,eax
  43f135:	dec    DWORD PTR [ecx+0x579f0d94]
  43f13b:	ins    BYTE PTR es:[edi],dx
  43f13c:	int3   
  43f13d:	add    DWORD PTR [eax],0xffffffff
  43f140:	add    DWORD PTR fs:[ebx+0xa867],0xffffffc1
  43f148:	iret   
  43f149:	dec    cl
  43f14b:	loop   0x43f14d
  43f14d:	dec    esp
  43f14f:	add    DWORD PTR [ebx-0xdf50001],0xffffffff
  43f156:	push   DWORD PTR [edx-0x2b1a1f52]
  43f15c:	(bad)  
  43f15d:	(bad)  
  43f15e:	(bad)  
  43f15f:	jmp    FWORD PTR [edi]
  43f161:	mov    edi,edi
  43f163:	into   
  43f164:	pop    ds
  43f165:	add    bh,bh
  43f167:	cli    
  43f168:	cmp    al,0x61
  43f16a:	cmp    BYTE PTR [eax-0x1],dl
  43f16d:	(bad)  
  43f16e:	inc    DWORD PTR [ebx-0x1a767660]
  43f174:	ss add bh,bh
  43f177:	push   0x31074337
  43f17c:	cmp    edi,0x0
  43f17f:	mov    DWORD PTR [esi],ebp
  43f181:	add    bh,bh
  43f183:	(bad)
  43f186:	inc    DWORD PTR [edi-0x54]
  43f189:	and    al,ch
  43f18b:	lods   al,BYTE PTR ds:[esi]
  43f18c:	inc    DWORD PTR [eax]
  43f18e:	dec    esp
  43f190:	fwait
  43f191:	inc    DWORD PTR [ebx-0xffd49d]
  43f197:	mov    dh,0x4e
  43f199:	nop
  43f19a:	fidivr DWORD PTR [edi-0x7d]
  43f19d:	add    DWORD PTR [ebx-0xea01],0xffffff9b
  43f1a4:	mov    edx,0xaac7ffff
  43f1a9:	int3   
  43f1aa:	fisub  WORD PTR [edx]
  43f1ac:	add    BYTE PTR [ecx-0xaf0034],cl
  43f1b2:	call   FWORD PTR [edi+0x2c]
  43f1b5:	add    DWORD PTR [eax],0x29
  43f1b8:	icebp  
  43f1b9:	or     ebp,esi
  43f1bb:	pop    ebp
  43f1bc:	add    BYTE PTR [eax],al
  43f1be:	add    BYTE PTR [ebx+0x6d008328],al
  43f1c4:	outs   dx,BYTE PTR ds:[esi]
  43f1c5:	add    bh,bh
  43f1c7:	sub    edi,ecx
  43f1c9:	pop    esi
  43f1ca:	mov    bh,0xc2
  43f1cc:	(bad)  
  43f1cd:	(bad)  
  43f1ce:	inc    DWORD PTR [eax]
  43f1d0:	sub    bh,bh
  43f1d2:	add    BYTE PTR [ebp-0x4b],dl
  43f1d5:	cmp    edi,0xffffffdb
  43f1d8:	lea    esi,[eax-0x66]
  43f1db:	test   al,0xff
  43f1dd:	(bad)  
  43f1de:	dec    esp
  43f1e0:	lods   eax,DWORD PTR ds:[esi]
  43f1e1:	or     BYTE PTR [ebx-0x25000077],al
  43f1e7:	inc    DWORD PTR [ebx-0x7636c000]
  43f1ed:	retf   
  43f1ee:	sub    ecx,edx
  43f1f0:	and    bl,al
  43f1f2:	int3   
  43f1f3:	add    DWORD PTR [eax],0x0
  43f1f6:	ud0    ecx,DWORD PTR [ecx-0x76375b01]
  43f1fd:	iret   
  43f1fe:	sahf   
  43f1ff:	and    bh,al
  43f201:	xchg   edx,eax
  43f202:	(bad)  
  43f203:	(bad)  
  43f204:	(bad)  
  43f205:	(bad)  
  43f206:	mov    eax,0xc7ff0000
  43f20b:	imul   eax,DWORD PTR [ebx-0x45cd579f],0xc
  43f212:	add    bh,bh
  43f214:	int3   
  43f215:	add    BYTE PTR [ecx],ch
  43f217:	(bad)  
  43f218:	(bad)  
  43f219:	dec    DWORD PTR [ebx+0x4b]
  43f21c:	push   DWORD PTR [edi+0x1e1350f8]
  43f222:	add    DWORD PTR [eax],0xffffffff
  43f225:	call   DWORD PTR [ebx]
  43f227:	inc    DWORD PTR [eax]
  43f229:	mov    DWORD PTR [ecx],edx
  43f22b:	sbb    DWORD PTR fs:[ebp+0x75a9c9a7],0xffffffff
  43f233:	cmp    edi,0xffffffcc
  43f236:	out    dx,eax
  43f237:	mov    edi,edi
  43f239:	call   DWORD PTR ds:0xc06700e8
  43f23f:	dec    ebp
  43f240:	pop    ss
  43f241:	inc    ecx
  43f242:	inc    DWORD PTR [eax]
  43f244:	add    BYTE PTR [ebx+0xff2e],al
  43f24a:	ficomp DWORD PTR [ecx+0x0]
  43f24d:	rcr    DWORD PTR [esi-0x20],1
  43f250:	or     ebp,DWORD PTR [edx-0x7d]
  43f253:	dec    esp
  43f255:	add    ah,bl
  43f257:	add    bh,bh
  43f259:	add    BYTE PTR [ebx+0x4],dh
  43f25c:	add    BYTE PTR [ebx-0x40],al
  43f25f:	mov    ecx,0xff838182
  43f264:	inc    DWORD PTR [eax]
  43f266:	xor    al,0xff
  43f268:	add    BYTE PTR [ecx+0x13ffaeb8],cl
  43f26e:	out    dx,eax
  43f26f:	jne    0x43f225
  43f271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f272:	add    ah,cl
  43f274:	inc    DWORD PTR [ebx-0xa3]
  43f27a:	cwde   
  43f27b:	mov    ebp,0x6fcbfb83
  43f280:	sub    BYTE PTR [eax-0x7cff0100],cl
  43f286:	mov    al,ds:0x7ecc0000
  43f28b:	push   ebx
  43f28c:	jmp    FWORD PTR [ecx+0xd]
  43f28f:	ds mov esp,0x89ffff36
  43f295:	dec    DWORD PTR [ebx+0x25ff0083]
  43f29b:	in     al,dx
  43f29c:	call   FWORD PTR [ebp+ebx*1+0x23]
  43f2a0:	ins    DWORD PTR es:[edi],dx
  43f2a1:	fld    DWORD PTR [eax]
  43f2a3:	add    bh,bh
  43f2a5:	call   FWORD PTR [esi]
  43f2a7:	add    bh,bh
  43f2a9:	add    BYTE PTR [edx+0x75],dl
  43f2ac:	inc    DWORD PTR [esi]
  43f2ae:	fist   WORD PTR [edi-0x7c00f360]
  43f2b4:	int3   
  43f2b5:	or     DWORD PTR [ebp-0x1],0xffffff83
  43f2b9:	mov    DWORD PTR [ecx-0x32b9ffb1],esp
  43f2bf:	cs xchg esi,eax
  43f2c1:	adc    edi,edi
  43f2c3:	inc    DWORD PTR [eax]
  43f2c5:	(bad)  
  43f2c6:	mov    edx,0xdff0000
  43f2cb:	ja     0x43f2cd
  43f2cd:	fucomip st,st(5)
  43f2cf:	and    edx,DWORD PTR [eax-0x767640]
  43f2d5:	or     DWORD PTR [esi],0xffffffff
  43f2d8:	cmp    edi,0xfffffff7
  43f2db:	test   BYTE PTR [ecx-0x4587d362],0xdf
  43f2e2:	add    BYTE PTR [eax],al
  43f2e4:	add    ah,cl
  43f2e6:	mov    cl,0xcc
  43f2e8:	(bad)  
  43f2e9:	push   DWORD PTR [esi]
  43f2eb:	stos   DWORD PTR es:[edi],eax
  43f2ec:	add    DWORD PTR [ebp-0x5a],0x47
  43f2f0:	imul   eax,ebp,0xffffff83
  43f2f3:	add    bh,bh
  43f2f5:	dec    edi
  43f2f7:	inc    DWORD PTR [eax]
  43f2f9:	add    BYTE PTR [ecx+0x78940063],dl
  43f2ff:	adc    DWORD PTR [ebx+0x77],0xffffff89
  43f306:	dec    ecx
  43f307:	inc    DWORD PTR [ebx+0xc9af00]
  43f30d:	ins    DWORD PTR es:[edi],dx
  43f30e:	push   ecx
  43f30f:	dec    edx
  43f310:	jne    0x43f32a
  43f312:	cmp    edi,0x0
  43f315:	dec    DWORD PTR [eax-0x77]
  43f318:	add    bh,bh
  43f31a:	xchg   esp,eax
  43f31b:	push   ebx
  43f31c:	push   ebx
  43f31e:	cdq    
  43f31f:	(bad)  
  43f320:	mov    eax,0xffffcc67
  43f325:	(bad)  
  43f326:	std    
  43f327:	add    BYTE PTR [eax],al
  43f329:	add    BYTE PTR [ebp+esi*4-0x1],al
  43f32d:	sti    
  43f32e:	dec    esi
  43f32f:	cmp    DWORD PTR [ebp-0x7cce],ebp
  43f335:	inc    DWORD PTR [esi]
  43f337:	or     DWORD PTR [ecx-0xe08c01],0xfffffff4
  43f33e:	aam    0x47
  43f340:	sub    al,0x3a
  43f342:	mov    DWORD PTR [eax],eax
  43f344:	(bad)  
  43f345:	inc    DWORD PTR [esi+0x42ffffff]
  43f34b:	or     al,0x0
  43f34d:	mov    ds:0x488d7f50,eax
  43f352:	add    DWORD PTR [eax],0xffffffff
  43f355:	mov    DWORD PTR [eax+eax*1+0x79f189cc],ebp
  43f35c:	add    BYTE PTR [ecx+0x51900861],al
  43f362:	(bad)  
  43f363:	(bad)  
  43f364:	(bad)  
  43f365:	push   ecx
  43f367:	add    BYTE PTR [eax],al
  43f369:	xor    edx,0x7f
  43f36c:	int3   
  43f36d:	gs xabort 0x26
  43f371:	sub    BYTE PTR [eax],al
  43f373:	add    ah,cl
  43f375:	mov    DWORD PTR [ebp-0x34],esi
  43f378:	dec    DWORD PTR [ecx-0x5e0076ee]
  43f37e:	push   0x32
  43f380:	popa   
  43f381:	and    DWORD PTR [ebx+0x1accffff],eax
  43f387:	(bad)  
  43f388:	inc    DWORD PTR [ebx-0x33003d4d]
  43f38e:	fidivr DWORD PTR [esi+ebp*4-0xbe]
  43f395:	add    BYTE PTR [ebp+0x7accffcc],ah
  43f39b:	inc    esi
  43f39c:	call   FWORD PTR [ecx+0x6c]
  43f39f:	cmp    dh,dh
  43f3a1:	das    
  43f3a2:	dec    esp
  43f3a4:	inc    DWORD PTR [eax]
  43f3a6:	jge    0x43f32b
  43f3a8:	add    bh,bh
  43f3aa:	inc    edi
  43f3ab:	cdq    
  43f3ac:	call   FWORD PTR [ebp+0x3295522e]
  43f3b2:	inc    DWORD PTR [eax]
  43f3b4:	add    bh,bh
  43f3b6:	push   ebx
  43f3b7:	inc    DWORD PTR [eax]
  43f3b9:	call   DWORD PTR [ebx+0x1d]
  43f3bc:	inc    ebp
  43f3be:	fsub   QWORD PTR ss:[eax]
  43f3c1:	ret    0x8300
  43f3c4:	inc    DWORD PTR [eax]
  43f3c6:	jl     0x43f3c7
  43f3c8:	add    BYTE PTR [eax],al
  43f3ca:	rol    BYTE PTR [edi],1
  43f3cc:	(bad)  
  43f3cd:	fmulp  st(4),st
  43f3cf:	adc    ebp,DWORD PTR [ebx+0xffff3b]
  43f3d5:	call   edx
  43f3d7:	(bad)  
  43f3d8:	inc    DWORD PTR [ebx-0x1affd7c8]
  43f3de:	leave  
  43f3df:	and    bl,BYTE PTR [esp+ebx*4+0x0]
  43f3e6:	jle    0x43f3b4
  43f3e8:	(bad)  
  43f3e9:	jmp    FWORD PTR [esp+edi*8]
  43f3ec:	add    BYTE PTR [esi+eax*8],ch
  43f3ef:	test   DWORD PTR [ecx-0x33007613],ebp
  43f3f5:	add    bh,dh
  43f3f7:	int3   
  43f3f8:	cmp    edi,0xffffffde
  43f3fb:	jp     0x43f3c9
  43f3fd:	dec    esi
  43f3fe:	enter  0x3290,0x7a
  43f402:	add    BYTE PTR [eax],al
  43f404:	dec    esp
  43f406:	xchg   DWORD PTR [ecx-0x28760001],ecx
  43f40c:	add    BYTE PTR ds:0x7f0febde,dl
  43f412:	add    BYTE PTR [ebx+0x2dff89],al
  43f418:	(bad)  
  43f419:	push   edx
  43f41b:	in     al,dx
  43f41c:	add    bl,bh
  43f41e:	and    eax,0x5f8b79
  43f423:	add    bh,bh
  43f425:	call   DWORD PTR [ebx]
  43f427:	add    BYTE PTR [ecx-0x3a2900],cl
  43f42d:	pop    es
  43f42e:	inc    esp
  43f42f:	out    dx,eax
  43f430:	ret    0x8344
  43f433:	int3   
  43f434:	add    bh,bh
  43f436:	fild   WORD PTR [eax]
  43f438:	add    bh,bh
  43f43a:	bound  edx,QWORD PTR ds:0x9dfb3eff
  43f440:	ss jle 0x43f40f
  43f443:	inc    DWORD PTR [eax]
  43f445:	add    BYTE PTR [eax+eax*1-0x1],cl
  43f449:	push   DWORD PTR [ecx-0x3f13ff6a]
  43f44f:	loopne 0x43f437
  43f451:	jmp    0xcd43c0df
  43f456:	adc    bh,bh
  43f458:	(bad)  
  43f459:	(bad)  
  43f45a:	jmp    0x2070f35f
  43f45f:	inc    ebx
  43f460:	sub    eax,0xffffffcf
  43f465:	dec    DWORD PTR [edx-0x22000000]
  43f46b:	leave  
  43f46c:	mov    DWORD PTR [esi+0x515fa401],eax
  43f472:	add    BYTE PTR [eax],al
  43f474:	add    DWORD PTR [ebx-0x7c337cd1],0x42
  43f47b:	in     al,dx
  43f47c:	call   DWORD PTR [ebx+0x18]
  43f47f:	stc    
  43f480:	nop
  43f481:	sub    BYTE PTR [eax],al
  43f483:	int3   
  43f484:	(bad)  
  43f485:	push   DWORD PTR [ecx-0x1]
  43f488:	mov    DWORD PTR [eax],eax
  43f48a:	jo     0x43f4c0
  43f48c:	xor    DWORD PTR [ebp+0x383b6a3f],0x0
  43f493:	(bad)  
  43f494:	inc    DWORD PTR [eax]
  43f496:	in     eax,dx
  43f497:	(bad)  
  43f498:	inc    DWORD PTR [eax]
  43f49a:	out    0x40,al
  43f49c:	add    BYTE PTR [eax-0x2d],dh
  43f49f:	lea    edx,[eax-0x25]
  43f4a2:	add    ah,cl
  43f4a4:	cmp    edi,0x2c
  43f4a7:	add    bh,bh
  43f4a9:	int3   
  43f4aa:	sub    al,0x9
  43f4ac:	and    DWORD PTR [esi-0x36fe6d4a],0xffffffff
  43f4b3:	inc    DWORD PTR [eax]
  43f4b5:	int3   
  43f4b6:	xor    esp,ecx
  43f4b8:	mov    edi,edi
  43f4ba:	add    eax,0x17e90040
  43f4bf:	dec    eax
  43f4c0:	(bad)  
  43f4c1:	out    0xcc,al
  43f4c3:	add    BYTE PTR [eax],al
  43f4c5:	(bad)  
  43f4c6:	fild   DWORD PTR [eax]
  43f4c8:	inc    DWORD PTR [eax]
  43f4ca:	retf   
  43f4cb:	call   0xc444:0xdcf8fc83
  43f4d2:	add    DWORD PTR [eax],0x0
  43f4d5:	or     DWORD PTR [esi],0xffffffff
  43f4d8:	dec    esp
  43f4da:	cmp    al,0xf4
  43f4dc:	jmp    FWORD PTR [edx]
  43f4de:	in     eax,0xbc
  43f4e0:	(bad)  
  43f4e1:	enter  0xffff,0x0
  43f4e5:	add    BYTE PTR [eax-0x1],ah
  43f4e8:	inc    DWORD PTR [eax]
  43f4ea:	ins    BYTE PTR es:[edi],dx
  43f4eb:	fiadd  WORD PTR [eax]
  43f4ed:	daa    
  43f4ee:	cdq    
  43f4ef:	pop    es
  43f4f0:	sbb    dh,dl
  43f4f2:	int3   
  43f4f3:	add    BYTE PTR [ecx-0x33ffd777],cl
  43f4f9:	add    BYTE PTR [edi+ebx*2],al
  43f4fc:	add    BYTE PTR [eax],cl
  43f4fe:	mov    es,eax
  43f500:	inc    ebx
  43f501:	dec    ebx
  43f502:	add    BYTE PTR [eax],al
  43f504:	dec    DWORD PTR [ecx-0xff0009]
  43f50a:	push   0x27a3003e
  43f50f:	shl    BYTE PTR [edx],cl
  43f511:	xchg   ecx,eax
  43f512:	int3   
  43f513:	inc    DWORD PTR [eax]
  43f515:	mov    DWORD PTR [ecx-0x7700ff7d],ebx
  43f51b:	mov    cl,0xff
  43f51d:	xchg   DWORD PTR [esi+0x1],ecx
  43f520:	std    
  43f521:	hlt    
  43f522:	(bad)  
  43f523:	inc    DWORD PTR [eax]
  43f525:	call   DWORD PTR [edx]
  43f527:	cmp    edi,0xffffffff
  43f52a:	aas    
  43f52b:	hlt    
  43f52c:	inc    esi
  43f52e:	dec    ecx
  43f52f:	ss in  al,0xce
  43f532:	cmp    edi,0xffffffff
  43f535:	(bad)  
  43f536:	inc    BYTE PTR [eax]
  43f538:	(bad)  
  43f539:	push   ebp
  43f53b:	push   0xffffffff
  43f53d:	cmc    
  43f53e:	cmc    
  43f53f:	mov    ?,edi
  43f541:	push   0xff83ccff
  43f546:	sahf   
  43f547:	inc    DWORD PTR [eax]
  43f549:	add    BYTE PTR [ebx],cl
  43f54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43f54c:	add    BYTE PTR [ecx-0x7e],al
  43f54f:	mov    edi,ecx
  43f551:	addr16 (bad) 
  43f553:	(bad)  
  43f554:	inc    DWORD PTR [eax]
  43f556:	sub    eax,0x3ffff89
  43f55b:	dec    edx
  43f55c:	jmp    FWORD PTR [edx-0x5a]
  43f55f:	and    bh,ah
  43f561:	push   esi
  43f562:	mov    edi,edi
  43f564:	(bad)  
  43f565:	(bad)  
  43f566:	in     al,dx
  43f567:	cmp    edi,0xffffff83
  43f56a:	add    bl,BYTE PTR [ecx]
  43f56c:	mov    DWORD PTR [eax+edi*1],eax
  43f56f:	es aam 0x2e
  43f572:	add    bh,bh
  43f574:	add    BYTE PTR [ecx-0x760009],cl
  43f57a:	jg     0x43f50d
  43f57c:	inc    esp
  43f57e:	jle    0x43f5c9
  43f580:	pushf  
  43f581:	mov    edi,0xff0000ff
  43f586:	mov    ch,0xff
  43f588:	add    bh,bh
  43f58a:	in     al,0x9b
  43f58c:	add    BYTE PTR [eax],bh
  43f58e:	ret    
  43f58f:	xlat   BYTE PTR ds:[ebx]
  43f590:	pusha  
  43f591:	test   bh,bh
  43f593:	add    BYTE PTR [eax],al
  43f595:	add    dl,ch
  43f597:	inc    DWORD PTR [ebx-0x90d01]
  43f59d:	dec    esp
  43f59e:	rcl    BYTE PTR [edi+0xfffdd8],1
  43f5a4:	add    bh,bh
  43f5a6:	mov    WORD PTR [ecx-0x2d677d00],cs
  43f5ac:	or     DWORD PTR [edx+0x767bdaeb],0x0
  43f5b3:	add    bh,bh
  43f5b5:	jmp    DWORD PTR [ebx-0x1]
  43f5b8:	(bad)  
  43f5b9:	inc    DWORD PTR [ebx-0x39]
  43f5bc:	dec    DWORD PTR [eax+0x2fe527a4]
  43f5c2:	inc    DWORD PTR [ebx-0x1f0100]
  43f5c8:	inc    DWORD PTR [eax]
  43f5ca:	and    al,0x9d
  43f5cc:	add    BYTE PTR [eax+ebx*1-0x49],cl
  43f5d0:	js     0x43f5e9
  43f5d2:	(bad)  
  43f5d3:	dec    esp
  43f5d5:	int3   
  43f5d6:	and    al,BYTE PTR [eax]
  43f5d8:	cmp    edi,0x70
  43f5db:	test   edi,edi
  43f5dd:	jmp    0x43f5ba
  43f5df:	fwait
  43f5e0:	mov    BYTE PTR [edi],bl
  43f5e2:	int3   
  43f5e3:	(bad)  
  43f5e4:	(bad)  
  43f5e5:	dec    DWORD PTR [eax-0x2500ff01]
  43f5eb:	rol    DWORD PTR [eax],cl
  43f5ed:	out    dx,eax
  43f5ee:	out    dx,al
  43f5ef:	fwait
  43f5f0:	imul   ecx,DWORD PTR [edi+edi*8-0x4600ff01],0xffffffff
  43f5f8:	inc    DWORD PTR [ebx-0x14764c90]
  43f5fe:	jno    0x43f5d0
  43f600:	in     al,dx
  43f601:	adc    al,BYTE PTR [eax]
  43f603:	(bad)  
  43f604:	inc    DWORD PTR [eax]
  43f606:	and    eax,0x500000cc
  43f60b:	stos   BYTE PTR es:[edi],al
  43f60c:	add    ah,ah
  43f60e:	jg     0x43f5b6
  43f610:	cli    
  43f611:	cwde   
  43f612:	add    ah,cl
  43f614:	add    ah,cl
  43f616:	mov    edx,0x13ccffff
  43f61b:	in     eax,dx
  43f61c:	add    BYTE PTR [ebp+0x45],ch
  43f61f:	in     al,0x19
  43f621:	xor    DWORD PTR [eax],eax
  43f623:	(bad)  
  43f624:	inc    DWORD PTR [eax]
  43f626:	lods   eax,DWORD PTR ds:[esi]
  43f627:	inc    DWORD PTR [ebx-0x838201]
  43f62d:	in     eax,0xc8
  43f62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f630:	es add bh,bh
  43f633:	inc    DWORD PTR [eax]
  43f635:	(bad)  
  43f636:	cli    
  43f637:	add    ah,cl
  43f639:	jmp    DWORD PTR [edx+0x41]
  43f63c:	jmp    FWORD PTR [edi]
  43f63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f63f:	adc    BYTE PTR [ebx+ebx*4],cl
  43f642:	inc    DWORD PTR [eax]
  43f644:	(bad)  
  43f645:	push   DWORD PTR [esi+0x75ffcc00]
  43f64b:	sbb    edi,edi
  43f64d:	aam    0xea
  43f64f:	push   ss
  43f650:	mov    ah,0x24
  43f652:	mov    edi,edi
  43f654:	add    BYTE PTR [eax],al
  43f656:	mov    ds:0xc6ffff00,eax
  43f65b:	dec    ebx
  43f65c:	add    BYTE PTR [edi-0x74d301f0],bh
  43f662:	cmp    edi,0x0
  43f665:	int3   
  43f666:	lods   al,BYTE PTR ds:[esi]
  43f667:	(bad)  
  43f668:	(bad)  
  43f669:	call   DWORD PTR [eax]
  43f66b:	sbb    bh,bh
  43f66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f66e:	cmp    BYTE PTR [edi+0x65],al
  43f671:	jns    0x43f672
  43f673:	inc    DWORD PTR [eax]
  43f675:	adc    DWORD PTR [ecx],0x0
  43f678:	cmp    edi,0xffffffeb
  43f67b:	push   ds
  43f67c:	int3   
  43f67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f67e:	in     al,dx
  43f67f:	(bad)  
  43f680:	sbb    BYTE PTR [eax],0xff
  43f683:	cmp    edi,0xffffff83
  43f686:	iret   
  43f687:	inc    DWORD PTR [eax]
  43f689:	dec    DWORD PTR [esi+0x20]
  43f68c:	add    BYTE PTR [ebp-0x4e],al
  43f68f:	int3   
  43f690:	outs   dx,BYTE PTR ds:[esi]
  43f691:	test   edi,edi
  43f693:	(bad)  
  43f694:	inc    DWORD PTR [eax]
  43f696:	aas    
  43f697:	add    ah,cl
  43f699:	add    BYTE PTR [ebp+0x1c],ah
  43f69c:	add    BYTE PTR [esi-0x79],bh
  43f69f:	push   es
  43f6a0:	nop
  43f6a1:	lods   eax,DWORD PTR ds:[esi]
  43f6a2:	add    bh,bh
  43f6a4:	inc    DWORD PTR [ebx-0x7c7c00da]
  43f6aa:	adc    al,0x26
  43f6ac:	add    BYTE PTR [ebp+0x47],bh
  43f6af:	pop    ecx
  43f6b0:	mov    ebp,0xff00fff9
  43f6b5:	jmp    FWORD PTR ds:0xe300ccff
  43f6bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43f6bc:	mov    DWORD PTR [ebx-0xc],ecx
  43f6bf:	mov    ?,WORD PTR [eax]
  43f6c1:	cli    
  43f6c2:	add    BYTE PTR [eax],al
  43f6c4:	inc    DWORD PTR [eax]
  43f6c6:	inc    DWORD PTR gs:[eax]
  43f6c9:	jmp    FWORD PTR [edi]
  43f6cb:	mov    edi,edi
  43f6cd:	or     BYTE PTR [esi+0xc],dl
  43f6d0:	push   eax
  43f6d1:	jg     0x43f6d2
  43f6d3:	inc    DWORD PTR [ebx-0xa500]
  43f6d9:	add    BYTE PTR [ebp-0x62],bl
  43f6dc:	add    BYTE PTR [edx+ebp*1],bl
  43f6df:	cmp    eax,0xffffd684
  43f6e4:	add    BYTE PTR [eax],al
  43f6e6:	inc    BYTE PTR [ebx-0x5696ff01]
  43f6ec:	add    cl,bl
  43f6ee:	xor    al,0xd9
  43f6f0:	lahf   
  43f6f1:	sti    
  43f6f2:	add    BYTE PTR [eax],al
  43f6f4:	add    bh,bh
  43f6f6:	cmp    BYTE PTR [eax],al
  43f6f8:	inc    DWORD PTR [eax]
  43f6fa:	pop    edx
  43f6fb:	dec    ebx
  43f6fc:	add    DWORD PTR [eax-0x4e],0xffffffd0
  43f700:	imul   BYTE PTR [edi]
  43f702:	inc    DWORD PTR [eax]
  43f704:	inc    DWORD PTR [ebx-0x33337c3e]
  43f70a:	test   eax,0xbe0cff5b
  43f70f:	mov    cl,0xa0
  43f711:	das    
  43f712:	cmp    edi,0x0
  43f715:	jmp    DWORD PTR [ebp+0x118383ff]
  43f71b:	pop    edi
  43f71c:	inc    DWORD PTR [ebx-0x5b]
  43f71f:	loop   0x43f70e
  43f721:	sbb    edi,edi
  43f723:	inc    DWORD PTR [eax]
  43f725:	call   DWORD PTR [esi+0x71ff89ff]
  43f72b:	or     al,0x0
  43f72d:	les    ebp,FWORD PTR [bx+si+0x3991]
  43f732:	(bad)  
  43f733:	inc    DWORD PTR [eax]
  43f735:	int3   
  43f736:	pop    edi
  43f737:	add    DWORD PTR [ebx+0xe361ff],0x43
  43f73e:	jl     0x43f761
  43f740:	aad    0xda
  43f742:	add    bh,bh
  43f744:	add    bh,bh
  43f746:	pop    ebp
  43f747:	add    BYTE PTR [eax],al
  43f749:	(bad)  
  43f74a:	call   FWORD PTR [ecx-0x1]
  43f74d:	pop    ss
  43f74e:	push   ebp
  43f74f:	inc    ebx
  43f750:	push   edi
  43f751:	loopne 0x43f753
  43f753:	int3   
  43f754:	or     esp,0x42
  43f757:	(bad)  
  43f758:	(bad)  
  43f759:	dec    DWORD PTR [ebp+0x77]
  43f75c:	add    BYTE PTR [edi],bl
  43f75e:	adc    BYTE PTR [edi],0x39
  43f761:	jg     0x43f762
  43f763:	add    bh,bh
  43f765:	(bad)  
  43f766:	inc    DWORD PTR [eax]
  43f768:	add    BYTE PTR [eax],al
  43f76a:	jae    0x43f6fe
  43f76c:	mov    DWORD PTR [eax+0x72afe811],ebx
  43f772:	inc    DWORD PTR [eax]
  43f774:	(bad)  
  43f775:	call   DWORD PTR [eax+eax*1]
  43f778:	inc    DWORD PTR [ebx+0x23cc6b70]
  43f77e:	sub    bh,ah
  43f780:	cmp    al,0x5d
  43f782:	cmp    edi,0x0
  43f785:	add    ch,bl
  43f787:	(bad)  
  43f788:	inc    DWORD PTR [eax]
  43f78a:	inc    esi
  43f78b:	mov    dl,0xff
  43f78d:	mov    dl,0xd7
  43f78f:	stos   DWORD PTR es:[edi],eax
  43f790:	xchg   esp,eax
  43f791:	hlt    
  43f792:	(bad)  
  43f793:	inc    DWORD PTR [ebx-0xcc01]
  43f799:	sub    DWORD PTR [ebx+0x74],0xffffffff
  43f79d:	daa    
  43f79e:	mov    edi,0x83c45d5d
  43f7a3:	mov    edi,edi
  43f7a5:	call   esp
  43f7a7:	dec    esp
  43f7a9:	add    ah,bl
  43f7ab:	test   al,0x0
  43f7ad:	xor    eax,0xceba2ed7
  43f7b2:	add    DWORD PTR [eax],0x0
  43f7b5:	call   FWORD PTR [ebp+0x70ff8389]
  43f7bb:	inc    edi
  43f7bc:	add    BYTE PTR [ebp-0x12],dl
  43f7bf:	fs mov esp,0x83ffccd5
  43f7c5:	int3   
  43f7c6:	mov    ecx,0x7600ff83
  43f7cb:	in     eax,dx
  43f7cc:	and    DWORD PTR [esi-0x23],0x40
  43f7d0:	enter  0x831c,0x83
  43f7d4:	add    bh,bh
  43f7d6:	jge    0x43f761
  43f7d8:	inc    DWORD PTR [eax]
  43f7da:	xor    edi,DWORD PTR [esi+0x7fb9ae83]
  43f7e0:	out    dx,al
  43f7e1:	enter  0x83,0x0
  43f7e5:	inc    DWORD PTR [eax-0x77]
  43f7e8:	inc    DWORD PTR [eax]
  43f7ea:	add    bl,BYTE PTR [edx]
  43f7ec:	int3   
  43f7ed:	push   cs
  43f7ee:	mov    esp,0xff9e6885
  43f7f3:	add    bh,bh
  43f7f5:	add    BYTE PTR [edx],dh
  43f7f7:	(bad)  
  43f7f8:	inc    DWORD PTR [ebx+0x5cfff6e1]
  43f7fe:	cmp    al,0x82
  43f800:	push   0xff2d
  43f805:	push   DWORD PTR [eax+eax*1+0x5afa00ff]
  43f80c:	cmp    DWORD PTR [eax-0x57b417b8],0x0
  43f813:	(bad)  
  43f814:	inc    DWORD PTR [ebx-0x337c69]
  43f81a:	add    bh,cl
  43f81c:	add    BYTE PTR [ecx+0x76cd013d],cl
  43f822:	cmp    edi,0xffffff83
  43f825:	jmp    DWORD PTR [ebp-0x7bffff01]
  43f82b:	cmp    bh,0x44
  43f82e:	stc    
  43f82f:	mov    eax,DWORD PTR [ebx]
  43f831:	pop    esi
  43f832:	(bad)  
  43f833:	(bad)  
  43f834:	inc    DWORD PTR [eax]
  43f836:	adc    al,BYTE PTR [eax]
  43f838:	cmp    edi,0x57
  43f83b:	jle    0x43f7c0
  43f83d:	pop    ebp
  43f83e:	push   0x83383910
  43f843:	inc    DWORD PTR [ebx-0x761801]
  43f849:	jmp    DWORD PTR [edx]
  43f84b:	cli    
  43f84c:	dec    DWORD PTR [ebx-0x6b]
  43f84f:	aad    0x7
  43f851:	dec    edi
  43f852:	dec    esp
  43f854:	(bad)  
  43f855:	(bad)  
  43f856:	jns    0x43f858
  43f858:	add    BYTE PTR [eax],al
  43f85a:	mov    DWORD PTR [edi-0x2c8e9e01],esp
  43f860:	mov    ebp,0x83ffffe2
  43f865:	mov    DWORD PTR [ebp-0x1],ebx
  43f868:	inc    DWORD PTR [ebx-0x6a00ec8a]
  43f86e:	pop    ss
  43f86f:	popf   
  43f870:	or     BYTE PTR [ebx+eax*4+0x0],bl
  43f874:	add    bh,bh
  43f876:	cmp    bh,0x83
  43f879:	call   DWORD PTR [edx]
  43f87b:	jecxz  0x43f87d
  43f87d:	rcr    BYTE PTR [ebx],0x2b
  43f880:	outs   dx,DWORD PTR ds:[esi]
  43f881:	fiadd  WORD PTR [eax]
  43f883:	add    bh,bh
  43f885:	inc    esi
  43f887:	add    ah,cl
  43f889:	call   DWORD PTR [edx+0x3753ffe4]
  43f88f:	es enterw 0xffff,0x0
  43f895:	add    ah,bl
  43f897:	add    bh,bh
  43f899:	jmp    DWORD PTR [eax-0x50]
  43f89c:	(bad)  
  43f89d:	out    dx,al
  43f89e:	daa    
  43f89f:	enter  0x6170,0xcc
  43f8a3:	add    bh,bh
  43f8a5:	jmp    DWORD PTR [edx+0x7cccffff]
  43f8ab:	push   edx
  43f8ac:	call   FWORD PTR [edx+edi*2]
  43f8af:	xor    esi,edi
  43f8b1:	test   DWORD PTR [ebx+0x6c000000],eax
  43f8b7:	(bad)  
  43f8b8:	inc    DWORD PTR [ebx+0x12ff4351]
  43f8be:	cmp    esi,DWORD PTR [esi]
  43f8c0:	lea    edi,[eax+eax*1]
  43f8c3:	dec    esp
  43f8c5:	inc    esi
  43f8c7:	inc    DWORD PTR [eax]
  43f8c9:	add    BYTE PTR [eax-0x62],al
  43f8cc:	add    DWORD PTR [eax+0x4e],0xffffffa5
  43f8d0:	(bad)  
  43f8d1:	cs or  esp,0x0
  43f8d5:	call   DWORD PTR [edx]
  43f8d7:	dec    esp
  43f8d9:	add    BYTE PTR [ebx-0xd917ce8],dl
  43f8df:	push   esp
  43f8e0:	push   ecx
  43f8e1:	sub    al,BYTE PTR [ebx-0x6dff7c34]
  43f8e7:	(bad)  
  43f8e8:	inc    DWORD PTR [eax]
  43f8ea:	xor    al,0x35
  43f8ec:	mov    DWORD PTR [esi+0x375028ef],esi
  43f8f2:	add    BYTE PTR [ebx+0xb1ff89],al
  43f8f8:	inc    DWORD PTR [ebx+0x53004e05]
  43f8fe:	retf   
  43f8ff:	lea    ebx,[ebx+0x6b]
  43f902:	inc    DWORD PTR [eax]
  43f904:	mov    DWORD PTR [eax],eax
  43f906:	sub    edi,edi
  43f908:	int3   
  43f909:	sub    DWORD PTR [ebx-0x7c],0xffffffcc
  43f90d:	daa    
  43f90e:	in     al,0xf
  43f910:	sub    ebp,edi
  43f912:	inc    DWORD PTR [eax]
  43f914:	(bad)  
  43f915:	call   FWORD PTR [eax-0x77]
  43f918:	int3   
  43f919:	(bad)  
  43f91a:	mov    ebx,0x56f0cc6d
  43f91f:	fild   QWORD PTR [esi-0x7d]
  43f923:	mov    DWORD PTR [eax],eax
  43f925:	and    eax,0xffffffcc
  43f928:	int3   
  43f929:	call   eax
  43f92b:	jp     0x43f92c
  43f92d:	push   ebx
  43f92e:	dec    esp
  43f92f:	mov    bh,0xc9
  43f931:	jecxz  0x43f932
  43f933:	dec    esp
  43f935:	dec    eax
  43f937:	add    bh,bh
  43f939:	mov    DWORD PTR [esi+0x50],esi
  43f93c:	add    BYTE PTR [ecx],ch
  43f93e:	call   0xfff0617e
  43f943:	add    bh,bh
  43f945:	call   DWORD PTR [edx+0x4accffff]
  43f94b:	loopne 0x43f919
  43f94d:	test   BYTE PTR [edi+0x1cfc7f],cl
  43f953:	add    BYTE PTR [ebx-0x7c004500],al
  43f959:	(bad)  
  43f95a:	mov    esp,0x30f2ffa3
  43f95f:	stc    
  43f960:	lds    esi,FWORD PTR [eax]
  43f962:	cmp    edi,0x0
  43f965:	add    BYTE PTR [esi-0xdffff01],cl
  43f96b:	jns    0x43f96d
  43f96d:	arpl   WORD PTR [ecx],dx
  43f96f:	xchg   edx,eax
  43f970:	jns    0x43f945
  43f972:	inc    DWORD PTR [ebx-0xda767d]
  43f978:	dec    esp
  43f97a:	sbb    ch,BYTE PTR [esi+0x0]
  43f97d:	jl     0x43f943
  43f97f:	arpl   WORD PTR [edx+eiz*4],bp
  43f982:	dec    esp
  43f984:	add    bh,bh
  43f986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43f987:	add    BYTE PTR [ebx+0xc9b683],al
  43f98d:	mov    esi,0x86f7e94e
  43f992:	add    BYTE PTR [eax],al
  43f994:	inc    DWORD PTR [ebx-0x3300ff44]
  43f99a:	(bad)  
  43f99b:	xor    edi,edi
  43f99d:	or     eax,0x4e1ed7f8
  43f9a2:	inc    DWORD PTR [eax]
  43f9a4:	(bad)  
  43f9a5:	jmp    FWORD PTR [edi+edi*8+0x0]
  43f9a9:	mov    DWORD PTR [eax+0x40],esi
  43f9ac:	(bad)  
  43f9ad:	stc    
  43f9ae:	sub    bh,BYTE PTR [esi-0x1f]
  43f9b1:	pop    ss
  43f9b2:	cmp    edi,0xffffffcc
  43f9b5:	add    ah,ah
  43f9b7:	(bad)  
  43f9b8:	dec    DWORD PTR [ecx-0x38ff343d]
  43f9be:	sub    DWORD PTR [eax+0x6],edx
  43f9c1:	inc    ebp
  43f9c2:	add    DWORD PTR [ebx-0x70000],0xffffff89
  43f9c9:	add    ch,dl
  43f9cb:	(bad)  
  43f9cc:	inc    DWORD PTR [edx+0x13]
  43f9cf:	popf   
  43f9d0:	jo     0x43f989
  43f9d2:	inc    DWORD PTR [eax]
  43f9d4:	inc    DWORD PTR [eax]
  43f9d6:	fld    QWORD PTR [eax]
  43f9d8:	dec    esp
  43f9da:	push   ds
  43f9db:	mov    esp,ecx
  43f9dd:	ins    BYTE PTR es:[edi],dx
  43f9de:	loopne 0x43f9b6
  43f9e0:	inc    edx
  43f9e1:	mov    ah,0xff
  43f9e3:	int3   
  43f9e4:	int3   
  43f9e5:	mov    DWORD PTR [edx-0x7d],ebp
  43f9e8:	(bad)  
  43f9e9:	inc    esi
  43f9eb:	sbb    bh,bh
  43f9ed:	xchg   esi,eax
  43f9ee:	pushf  
  43f9ef:	and    dh,BYTE PTR [ebx]
  43f9f1:	rol    DWORD PTR [eax],0xff
  43f9f4:	(bad)  
  43f9f5:	call   ebx
  43f9f7:	inc    DWORD PTR [eax]
  43f9f9:	jmp    FWORD PTR [eax-0x39]
  43f9fc:	int3   
  43f9fd:	mov    al,ds:0x2e9bdf98
  43fa02:	add    bh,bh
  43fa04:	add    bh,bh
  43fa06:	pop    ds
  43fa07:	inc    DWORD PTR [ebx+0x9f6200]
  43fa0d:	pop    ss
  43fa0e:	repz inc esp
  43fa10:	lods   eax,DWORD PTR ds:[esi]
  43fa11:	sub    eax,0x8900ffcc
  43fa16:	pop    ebx
  43fa17:	(bad)  
  43fa18:	inc    DWORD PTR [eax]
  43fa1a:	imul   esp,DWORD PTR [edx+0x33a3c5ff],0xff00c615
  43fa24:	int3   
  43fa25:	call   DWORD PTR [ecx]
  43fa27:	(bad)  
  43fa28:	(bad)  
  43fa29:	push   esi
  43fa2b:	push   esi
  43fa2c:	dec    eax
  43fa2e:	out    dx,al
  43fa2f:	sbb    bl,BYTE PTR [eax-0xff006f]
  43fa35:	push   DWORD PTR [ebp+0x0]
  43fa38:	add    bh,bh
  43fa3a:	cli    
  43fa3b:	ja     0x43fa3c
  43fa3d:	sub    DWORD PTR [ebp-0x2f],0x15
  43fa41:	add    ecx,esp
  43fa43:	(bad)  
  43fa44:	inc    DWORD PTR [eax]
  43fa46:	pop    edx
  43fa47:	(bad)  
  43fa48:	(bad)  
  43fa49:	dec    eax
  43fa4b:	dec    eax
  43fa4c:	int3   
  43fa4d:	out    dx,al
  43fa4e:	pop    ds
  43fa4f:	addr16 jns 0x43faaa
  43fa52:	inc    DWORD PTR [ebx-0x7b007d]
  43fa58:	or     esp,0x11
  43fa5b:	sub    DWORD PTR [eax],eax
  43fa5d:	lds    eax,FWORD PTR [eax-0x13b09f]
  43fa63:	inc    DWORD PTR [eax]
  43fa65:	(bad)  
  43fa66:	mov    ebp,0xab83ffff
  43fa6b:	inc    edx
  43fa6c:	dec    DWORD PTR [ebx+0x1c]
  43fa6f:	xchg   dl,ah
  43fa71:	dec    edx
  43fa72:	add    bh,bh
  43fa74:	add    DWORD PTR [eax],0xffffffa2
  43fa77:	add    bh,bh
  43fa79:	(bad)  
  43fa7a:	cld    
  43fa7b:	pop    eax
  43fa7c:	inc    DWORD PTR [esi]
  43fa7e:	test   DWORD PTR [ecx-0xff9cec],0x4effff
  43fa88:	(bad)  
  43fa89:	(bad)  
  43fa8a:	mov    esi,0xec2cffdf
  43fa8f:	jo     0x43fad9
  43fa91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43fa92:	add    BYTE PTR [eax],al
  43fa94:	int3   
  43fa95:	(bad)  
  43fa96:	stc    
  43fa97:	inc    DWORD PTR [ebx-0x337c9c01]
  43fa9d:	into   
  43fa9e:	dec    ecx
  43fa9f:	and    BYTE PTR [ebp-0x1a],bl
  43faa2:	inc    DWORD PTR [eax]
  43faa4:	add    bh,bh
  43faa6:	and    al,BYTE PTR [eax]
  43faa8:	inc    DWORD PTR [eax]
  43faaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43faab:	xchg   esi,eax
  43faac:	jmp    DWORD PTR [esp+edx*4+0xc55814]
  43fab3:	add    BYTE PTR [ecx-0x7c4601],cl
  43fab9:	xor    DWORD PTR ds:0xb2e60049,0x31
  43fac0:	aas    
  43fac1:	xor    edi,edi
  43fac3:	(bad)  
  43fac4:	inc    DWORD PTR [ebx-0x33ff7688]
  43faca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43facb:	mov    BYTE PTR [ecx+0x6ecc96ce],cl
  43fad1:	jo     0x43fad2
  43fad3:	int3   
  43fad4:	add    bh,bh
  43fad6:	and    al,BYTE PTR [eax]
  43fad8:	(bad)  
  43fad9:	(bad)  
  43fada:	jmp    0x43fb50
  43fadc:	add    bl,dh
  43fade:	ret    0x9cdd
  43fae1:	outs   dx,BYTE PTR ds:[esi]
  43fae2:	inc    DWORD PTR [ebx+0xdfcc83]
  43fae8:	cmp    edi,0xffffffd3
  43faeb:	xor    eax,0x3a7b9200
  43faf0:	in     al,dx
  43faf1:	jl     0x43fa7c
  43faf3:	add    DWORD PTR [eax],0xffffffff
  43faf6:	mov    ah,0xff
  43faf8:	(bad)  
  43faf9:	jmp    DWORD PTR [ebx-0x36]
  43fafc:	dec    DWORD PTR [eax]
  43fafe:	cmp    edi,DWORD PTR [esi-0x1]
  43fb01:	aam    0xff
  43fb03:	inc    DWORD PTR [ebx-0xff3700]
  43fb09:	mov    DWORD PTR [edx*4+0xb4e3483],ebp
  43fb10:	pop    edi
  43fb11:	or     al,0xff
  43fb13:	dec    esp
  43fb15:	cmp    DWORD PTR [edx+0x77898389],0x39
  43fb1c:	(bad)  
  43fb1d:	(bad)  [ebx]
  43fb1f:	outs   dx,DWORD PTR ds:[esi]
  43fb20:	loope  0x43fb74
  43fb22:	add    DWORD PTR [eax],0xffffffcc
  43fb25:	add    BYTE PTR [edx+0x3d83ffff],ch
  43fb2b:	jnp    0x43fb2d
  43fb2d:	test   BYTE PTR [esi],bl
  43fb2f:	mov    dh,0xb3
  43fb31:	and    bh,bh
  43fb33:	(bad)  
  43fb34:	(bad)  
  43fb35:	call   esp
  43fb37:	inc    DWORD PTR [eax]
  43fb39:	push   DWORD PTR [eax+0x8]
  43fb3c:	add    al,cl
  43fb3e:	mov    eax,ds:0xff0150f6
  43fb43:	(bad)  
  43fb44:	(bad)  
  43fb45:	dec    DWORD PTR [edi-0x7d]
  43fb48:	or     DWORD PTR [ecx-0x7433572b],0x27
  43fb4f:	(bad)  
  43fb50:	gs push ebx
  43fb52:	cmp    edi,0x0
  43fb55:	add    BYTE PTR [edi],ah
  43fb57:	(bad)  
  43fb58:	(bad)  
  43fb59:	push   DWORD PTR [ebp-0x3c]
  43fb5c:	and    DWORD PTR [edi+ebp*8-0x15],0xffffffb0
  43fb61:	xchg   ebx,eax
  43fb62:	add    DWORD PTR [ebx-0xa40001],0xffffffcc
  43fb69:	mov    DWORD PTR [esi],esp
  43fb6b:	icebp  
  43fb6c:	inc    DWORD PTR [edx+0x3]
  43fb6f:	push   esi
  43fb70:	jle    0x43fbd1
  43fb72:	(bad)  
  43fb73:	(bad)  
  43fb74:	inc    DWORD PTR [eax]
  43fb76:	(bad)  
  43fb78:	int3   
  43fb79:	add    BYTE PTR [esi+0x4f2f832e],dh
  43fb7f:	cmp    esp,DWORD PTR gs:[edx-0x77]
  43fb83:	int3   
  43fb84:	inc    DWORD PTR [eax]
  43fb86:	outs   dx,BYTE PTR ds:[esi]
  43fb87:	inc    DWORD PTR [eax]
  43fb89:	int3   
  43fb8a:	aad    0xc4
  43fb8c:	add    bh,dh
  43fb8e:	int3   
  43fb8f:	jmp    0x43fbf7
  43fb91:	inc    DWORD PTR [ebx+0x138989cc]
  43fb97:	add    DWORD PTR [eax],0x0
  43fb9a:	jge    0x43fbc6
  43fb9c:	jmp    FWORD PTR [ecx-0x5ee72244]
  43fba2:	(bad)  
  43fba3:	inc    DWORD PTR [eax]
  43fba5:	add    BYTE PTR [eax],al
  43fba7:	inc    DWORD PTR [eax]
  43fba9:	call   esi
  43fbab:	aam    0x0
  43fbad:	ins    DWORD PTR es:[edi],dx
  43fbae:	mov    ds:0xff14ae35,eax
  43fbb3:	mov    edi,edi
  43fbb5:	jmp    DWORD PTR [ecx+0x0]
  43fbb8:	add    ah,cl
  43fbba:	dec    esp
  43fbbb:	rol    DWORD PTR [eax],cl
  43fbbd:	aad    0x26
  43fbbf:	retf   
  43fbc0:	xchg   ecx,eax
  43fbc1:	add    DWORD PTR [eax],eax
  43fbc3:	dec    esp
  43fbc5:	jmp    DWORD PTR [edi+edi*8]
  43fbc8:	(bad)  
  43fbc9:	push   DWORD PTR [esi+0x76]
  43fbcc:	int3   
  43fbcd:	or     eax,0xfede08d1
  43fbd2:	(bad)  
  43fbd3:	(bad)  
  43fbd4:	dec    esp
  43fbd6:	dec    edx
  43fbd7:	(bad)  
  43fbd8:	(bad)  
  43fbd9:	dec    DWORD PTR [esi]
  43fbdb:	adc    cl,ah
  43fbdd:	sbb    eax,0xce97ceb6
  43fbe2:	(bad)  
  43fbe3:	inc    DWORD PTR [eax]
  43fbe5:	adc    ecx,0x0
  43fbe8:	(bad)  
  43fbe9:	jmp    DWORD PTR [eax-0x5b2800fb]
  43fbef:	adc    BYTE PTR [esi],al
  43fbf1:	rol    BYTE PTR [eax],1
  43fbf3:	inc    DWORD PTR [eax]
  43fbf5:	(bad)  
  43fbf6:	jp     0x43fbf8
  43fbf8:	add    ah,cl
  43fbfa:	mov    bh,0x3e
  43fbfc:	add    BYTE PTR [ebp-0x181575e1],bl
  43fc02:	inc    DWORD PTR [ebx+0x92ffff]
  43fc08:	inc    DWORD PTR [eax]
  43fc0a:	and    eax,0x70a4ff3f
  43fc0f:	test   al,0xad
  43fc11:	lahf   
  43fc12:	add    BYTE PTR [eax],al
  43fc14:	add    BYTE PTR [eax],al
  43fc16:	push   edi
  43fc17:	inc    DWORD PTR [eax]
  43fc19:	int3   
  43fc1a:	cmp    BYTE PTR [eax+eax*1-0x3d7d849a],dh
  43fc21:	sbb    bh,bh
  43fc23:	(bad)  
  43fc24:	(bad)  
  43fc25:	call   ebp
  43fc27:	add    DWORD PTR [ebx-0x46ec01],0x35
  43fc2e:	jnp    0x43fc71
  43fc30:	in     al,0x40
  43fc32:	inc    DWORD PTR [ebx-0xff0001]
  43fc38:	add    bh,bh
  43fc3a:	xlat   BYTE PTR ds:[ebx]
  43fc3b:	loop   0x43fc3c
  43fc3d:	pop    edx
  43fc3e:	ret    0xe497
  43fc41:	xchg   esp,eax
  43fc42:	add    DWORD PTR [ebx-0x7d],0xffffff83
  43fc49:	dec    DWORD PTR [ebp+eax*8+0x0]
  43fc4d:	mov    esp,ds
  43fc4f:	loope  0x43fc38
  43fc51:	test   BYTE PTR [eax],al
  43fc53:	inc    DWORD PTR [eax]
  43fc55:	add    DWORD PTR [eax+0x0],0xffffffff
  43fc59:	mov    DWORD PTR [ebx],esp
  43fc5b:	jbe    0x43fc5d
  43fc5d:	sub    al,0xbe
  43fc5f:	push   ebx
  43fc60:	ins    DWORD PTR es:[edi],dx
  43fc61:	je     0x43fc62
  43fc63:	(bad)  
  43fc64:	(bad)  
  43fc65:	jmp    DWORD PTR [edi+edi*8+0x99400ff]
  43fc6c:	call   FWORD PTR ds:0x948ca587
  43fc72:	inc    DWORD PTR [eax]
  43fc74:	(bad)  
  43fc75:	dec    DWORD PTR ds:0xfe0083ff
  43fc7b:	sub    eax,0xbe6278ff
  43fc80:	fiadd  DWORD PTR [edx]
  43fc82:	int3   
  43fc83:	or     DWORD PTR [ecx-0x7c763e34],0xffffffff
  43fc8a:	call   0x2b1cfbc6
  43fc8f:	push   ss
  43fc90:	and    al,0x0
  43fc93:	add    DWORD PTR [ebx-0x7c00ba01],0xffffffff
  43fc9a:	jge    0x43fd1b
  43fc9c:	cmp    DWORD PTR [eax],0x35
  43fc9f:	push   esp
  43fca0:	sub    BYTE PTR ds:[ebx+0x5e00ffff],al
  43fca7:	add    BYTE PTR [eax],al
  43fca9:	jmp    DWORD PTR [eax-0x7eab7c1a]
  43fcaf:	sar    DWORD PTR [edi+0xffab],0x0
  43fcb6:	xor    eax,0x26ffffff
  43fcbb:	inc    ebx
  43fcbc:	add    BYTE PTR [esp+esi*4-0x769cd8a6],al
  43fcc3:	cmp    edi,0xffffffff
  43fcc6:	and    eax,DWORD PTR [eax]
  43fcc8:	inc    DWORD PTR [eax]
  43fcca:	push   ebp
  43fccb:	inc    ecx
  43fccc:	add    BYTE PTR [ecx],dh
  43fcce:	or     eax,0xffa7fa52
  43fcd3:	int3   
  43fcd4:	inc    DWORD PTR [eax]
  43fcd6:	stc    
  43fcd7:	int3   
  43fcd8:	inc    DWORD PTR [eax]
  43fcda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fcdb:	mov    bl,0x0
  43fcdd:	adc    al,0x9d
  43fcdf:	cld    
  43fce0:	in     eax,dx
  43fce1:	mov    edi,edi
  43fce3:	cmp    edi,0x0
  43fce6:	mov    ebp,0x4f00ff00
  43fceb:	xor    edi,edi
  43fced:	lahf   
  43fcee:	fst    QWORD PTR [ebx+esi*4-0x7c7cffb0]
  43fcf5:	add    ah,dh
  43fcf7:	add    bh,bh
  43fcf9:	jmp    FWORD PTR [edi+0x44]
  43fcfc:	add    BYTE PTR [edi],ch
  43fcfe:	sub    BYTE PTR [ecx-0x50],dh
  43fd01:	mov    ebx,0xcc0000ff
  43fd06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43fd07:	add    DWORD PTR [ebx+0xcbe783],0xffffffc7
  43fd0e:	and    dl,dl
  43fd10:	cmp    ch,dl
  43fd12:	inc    DWORD PTR [ebx+0x840083]
  43fd18:	int3   
  43fd19:	add    BYTE PTR [esi+edi*8-0x70bd3b7d],bl
  43fd20:	jg     0x43fd2c
  43fd22:	dec    esp
  43fd24:	(bad)  
  43fd25:	(bad)  
  43fd26:	mov    ebx,0x92ff00cc
  43fd2b:	popf   
  43fd2c:	add    esp,0x2a
  43fd2f:	pushf  
  43fd30:	mov    ecx,0x8383ffeb
  43fd35:	inc    DWORD PTR [eax+eax*1]
  43fd38:	add    bh,bh
  43fd3a:	mov    WORD PTR [edx-0x4aa0d200],es
  43fd40:	stc    
  43fd41:	mov    dh,0x0
  43fd43:	cmp    edi,0xffffff83
  43fd46:	sar    bh,cl
  43fd48:	dec    esp
  43fd4a:	xchg   ebx,eax
  43fd4b:	fdivp  st(7),st
  43fd4d:	test   eax,0x2e4a4740
  43fd52:	inc    DWORD PTR [eax]
  43fd54:	(bad)  
  43fd55:	(bad)  
  43fd56:	fdiv   st(7),st
  43fd58:	add    BYTE PTR [ebx-0x270084be],al
  43fd5e:	rcr    bh,0xbc
  43fd61:	mov    esp,0xccff8383
  43fd66:	dec    esi
  43fd67:	(bad)  
  43fd68:	(bad)  
  43fd69:	jmp    DWORD PTR [esi]
  43fd6b:	fld    QWORD PTR [eax]
  43fd6d:	jb     0x43fd49
  43fd6f:	sbb    al,0x3a
  43fd71:	int3   
  43fd72:	add    bh,bh
  43fd74:	inc    DWORD PTR [ebx+0xffae]
  43fd7a:	or     al,0x3
  43fd7c:	add    dh,al
  43fd7e:	out    0x6f,eax
  43fd80:	push   0x44
  43fd82:	int3   
  43fd83:	add    bh,bh
  43fd85:	sub    DWORD PTR [ebx],0xffffff83
  43fd88:	(bad)  
  43fd89:	call   FWORD PTR [esi]
  43fd8b:	inc    esp
  43fd8c:	cmp    DWORD PTR [eax+0x49],0x29
  43fd90:	sbb    BYTE PTR [edx+0x0],ah
  43fd93:	cmp    edi,0xffffffff
  43fd96:	pop    edx
  43fd97:	add    BYTE PTR [ebx-0x8c6c01],al
  43fd9d:	and    al,0x40
  43fd9f:	mov    bl,0x22
  43fda1:	stos   DWORD PTR es:[edi],eax
  43fda2:	add    BYTE PTR [eax],al
  43fda4:	int3   
  43fda5:	add    BYTE PTR [edi-0x1],dh
  43fda8:	inc    DWORD PTR [ebx+0x4783a621]
  43fdae:	(bad)  
  43fdaf:	hlt    
  43fdb0:	sub    edx,DWORD PTR [edx-0x7d]
  43fdb3:	add    bh,bh
  43fdb5:	inc    DWORD PTR [eax+0x26ffffff]
  43fdbb:	pop    ecx
  43fdbc:	call   DWORD PTR [edx]
  43fdbe:	xlat   BYTE PTR ds:[ebx]
  43fdbf:	mov    dh,0xda
  43fdc1:	push   cs
  43fdc2:	add    bh,bh
  43fdc4:	add    DWORD PTR [eax],0x50
  43fdc7:	cmp    edi,0x0
  43fdca:	stc    
  43fdcb:	bound  ecx,QWORD PTR [ecx+0x175b2e24]
  43fdd1:	pop    edx
  43fdd2:	(bad)  
  43fdd3:	(bad)  
  43fdd4:	inc    DWORD PTR [eax]
  43fdd6:	inc    DWORD PTR [eax]
  43fdd8:	add    bh,bh
  43fdda:	jmp    0x8a3fec1
  43fddf:	mov    esi,0x89ff3d56
  43fde4:	add    bh,bh
  43fde6:	xor    al,0xff
  43fde8:	(bad)  
  43fde9:	push   ebp
  43fdeb:	ror    esp,cl
  43fded:	les    ebp,FWORD PTR [edi-0x2c]
  43fdf0:	add    al,0x64
  43fdf2:	inc    DWORD PTR [eax]
  43fdf4:	add    ah,cl
  43fdf6:	outs   dx,DWORD PTR ds:[esi]
  43fdf7:	add    bh,bh
  43fdf9:	jmp    FWORD PTR [edx+0x2ae8ff39]
  43fdff:	push   ss
  43fe00:	or     eax,ecx
  43fe02:	inc    DWORD PTR [ebx+0xacccff]
  43fe08:	int3   
  43fe09:	jmp    DWORD PTR ds:0xf3da83ef
  43fe0f:	mov    dh,bl
  43fe11:	test   eax,0xffffff00
  43fe16:	pop    edx
  43fe17:	inc    DWORD PTR [eax]
  43fe19:	call   DWORD PTR [ebx-0x3e]
  43fe1c:	call   DWORD PTR [ebp-0x708b0ae7]
  43fe22:	add    DWORD PTR [eax],0xffffffff
  43fe25:	add    BYTE PTR [edx+0x0],bl
  43fe28:	inc    DWORD PTR [eax]
  43fe2a:	xchg   esp,edx
  43fe2c:	add    DWORD PTR [ebx],0x69
  43fe2f:	add    DWORD PTR [ecx],0xffff83d5
  43fe35:	(bad)  
  43fe36:	aas    
  43fe37:	inc    DWORD PTR [ebx-0x76af1401]
  43fe3d:	int3   
  43fe3e:	sti    
  43fe3f:	adc    ecx,DWORD PTR [ebx]
  43fe41:	stos   DWORD PTR es:[edi],eax
  43fe42:	inc    DWORD PTR [ebx-0x7c940001]
  43fe48:	inc    DWORD PTR [eax]
  43fe4a:	sub    DWORD PTR [edx],ecx
  43fe4c:	add    BYTE PTR [esi+0xf1d5eca],bh
  43fe52:	(bad)  
  43fe53:	inc    DWORD PTR [eax]
  43fe55:	or     DWORD PTR [ebp+0x6eff0089],0x6c
  43fe5c:	jmp    FWORD PTR [ebx+ecx*2]
  43fe5f:	imul   ecx,ecx,0x49
  43fe62:	cmp    edi,0x0
  43fe65:	add    BYTE PTR [esi-0x1],dh
  43fe68:	mov    DWORD PTR [ebx+0x7ffff2e8],eax
  43fe6e:	out    dx,al
  43fe6f:	je     0x43fe82
  43fe71:	arpl   WORD PTR [eax],ax
  43fe73:	or     DWORD PTR [ecx+0xff7c00],0xffffffff
  43fe7a:	inc    esi
  43fe7b:	mov    bh,bh
  43fe7d:	scas   eax,DWORD PTR es:[edi]
  43fe7e:	inc    ebp
  43fe7f:	in     al,0x92
  43fe81:	push   ss
  43fe82:	(bad)  
  43fe83:	(bad)  
  43fe84:	dec    DWORD PTR [ecx-0x23]
  43fe8a:	mov    edx,0x43c08371
  43fe8f:	dec    edx
  43fe90:	inc    ebx
  43fe91:	and    eax,0x838383
  43fe96:	push   edi
  43fe97:	(bad)  
  43fe98:	inc    DWORD PTR [ebx+0x1d8326d7]
  43fe9e:	add    eax,0xe1bb84
  43fea3:	add    bh,bh
  43fea5:	add    BYTE PTR [ebx+eax*4],cl
  43fea8:	add    bh,bh
  43feaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43feab:	jno    0x43fead
  43fead:	dec    ebp
  43feae:	dec    edi
  43feaf:	xchg   ebp,eax
  43feb0:	icebp  
  43feb1:	adc    bh,bh
  43feb3:	inc    DWORD PTR [eax]
  43feb5:	add    BYTE PTR [ecx-0xb00ff7d],bl
  43febb:	sub    DWORD PTR [eax],eax
  43febd:	idiv   BYTE PTR [esi-0x73]
  43fec0:	sub    al,BYTE PTR [ebp-0x100]
  43fec6:	xchg   edx,eax
  43fec7:	(bad)  
  43fec8:	inc    DWORD PTR [eax]
  43feca:	xor    BYTE PTR [ecx],dh
  43fecc:	push   DWORD PTR [eax-0x53257c71]
  43fed2:	add    BYTE PTR [eax],al
  43fed4:	or     DWORD PTR [ecx+0x890045],0x1a
  43fedb:	fwait
  43fedc:	call   FWORD PTR [edi+eax*2]
  43fedf:	xor    bl,bl
  43fee1:	fiadd  WORD PTR [eax]
  43fee3:	add    BYTE PTR [ebx+0x830300],al
  43fee9:	push   DWORD PTR [edi]
  43feeb:	rol    BYTE PTR [eax],0x92
  43feee:	imul   edi,edx,0xffff3e24
  43fef4:	add    bh,bh
  43fef6:	pop    ss
  43fef7:	inc    DWORD PTR [ebx-0x3345d701]
  43fefd:	lahf   
  43fefe:	lock pop ecx
  43ff00:	sbb    al,BYTE PTR [edx-0x7c01]
  43ff06:	mov    edi,?
  43ff08:	add    bh,bh
  43ff0a:	or     dh,BYTE PTR [eax]
  43ff0c:	add    BYTE PTR [ebx],bl
  43ff0e:	jecxz  0x43ff31
  43ff10:	sbb    ebx,edx
  43ff12:	(bad)  
  43ff13:	(bad)  
  43ff14:	inc    DWORD PTR [eax]
  43ff16:	dec    ecx
  43ff17:	inc    DWORD PTR [eax]
  43ff19:	add    bh,al
  43ff1b:	sub    al,0xff
  43ff1d:	stos   BYTE PTR es:[edi],al
  43ff1e:	adc    BYTE PTR [eax-0x21],ch
  43ff21:	pop    edi
  43ff22:	int3   
  43ff23:	(bad)  
  43ff24:	(bad)  
  43ff25:	inc    DWORD PTR [esi-0x1]
  43ff28:	add    BYTE PTR [ebx+0x3a006dc1],al
  43ff2e:	jg     0x43feeb
  43ff30:	push   0xffffffcb
  43ff32:	add    DWORD PTR [eax],0xffffffff
  43ff35:	call   DWORD PTR [edx-0x1010000]
  43ff3b:	adc    bh,bh
  43ff3d:	and    al,0xd
  43ff3f:	ror    BYTE PTR [ecx],cl
  43ff41:	mov    al,0x0
  43ff43:	int3   
  43ff44:	add    BYTE PTR [eax],al
  43ff46:	cmp    al,BYTE PTR [eax]
  43ff48:	add    bh,bh
  43ff4a:	and    eax,0xf0590008
  43ff4f:	or     eax,0x5dd7
  43ff54:	add    DWORD PTR [eax],0xffffffad
  43ff57:	(bad)  
  43ff58:	(bad)  
  43ff59:	jmp    DWORD PTR [eax]
  43ff5b:	push   0x2d9193ff
  43ff60:	and    esi,ebp
  43ff62:	add    DWORD PTR [ebx-0x7c587c01],0xffffff83
  43ff69:	add    BYTE PTR [eax-0x7f3affb6],cl
  43ff6f:	add    dh,ah
  43ff71:	fwait
  43ff72:	(bad)  
  43ff73:	(bad)  
  43ff74:	(bad)  
  43ff75:	call   DWORD PTR [ebx-0x1]
  43ff78:	add    DWORD PTR [eax],0xffffffa5
  43ff7b:	rol    DWORD PTR [ebx+0x615be653],0x47
  43ff82:	inc    DWORD PTR [eax]
  43ff84:	add    bh,bh
  43ff86:	adc    ecx,esp
  43ff88:	add    bh,bh
  43ff8a:	inc    edi
  43ff8b:	in     al,0x0
  43ff8d:	ja     0x43ff3c
  43ff8f:	pop    eax
  43ff90:	sub    BYTE PTR [edi+edi*8-0x1],0x83
  43ff95:	jmp    DWORD PTR [edx+0x4383ff00]
  43ff9b:	ins    DWORD PTR es:[edi],dx
  43ff9c:	and    ebx,0x4a
  43ff9f:	push   eax
  43ffa0:	push   es
  43ffa1:	inc    ecx
  43ffa2:	add    bh,bh
  43ffa4:	add    bh,bh
  43ffa6:	rol    BYTE PTR [eax],1
  43ffa8:	(bad)  
  43ffa9:	(bad)  
  43ffaa:	fsubr  DWORD PTR [ebx+0x0]
  43ffad:	xor    cl,dh
  43ffaf:	jge    0x43ff60
  43ffb1:	xchg   BYTE PTR [eax],al
  43ffb3:	add    BYTE PTR [ebx-0xff6400],al
  43ffb9:	inc    DWORD PTR [eax]
  43ffbb:	mov    esi,0xef022300
  43ffc0:	mov    dl,0xe9
  43ffc2:	(bad)  
  43ffc3:	(bad)  
  43ffc4:	inc    DWORD PTR [eax]
  43ffc6:	loop   0x43ffc7
  43ffc8:	inc    DWORD PTR [eax]
  43ffca:	or     ebx,DWORD PTR [ecx-0xc718101]
  43ffd0:	pop    edx
  43ffd1:	repz add ah,cl
  43ffd4:	add    bh,bh
  43ffd6:	adc    BYTE PTR [eax],al
  43ffd8:	inc    DWORD PTR [eax]
  43ffda:	xor    BYTE PTR [esi-0x5cbbda01],ch
  43ffe0:	popf   
  43ffe1:	idiv   bh
  43ffe3:	(bad)  
  43ffe4:	dec    esp
  43ffe6:	mov    ah,0xff
  43ffe8:	inc    DWORD PTR [ebx-0x14ff0870]
  43ffee:	dec    esp
  43ffef:	add    eax,0xccff9ca6
  43fff4:	int3   
  43fff5:	(bad)  
  43fff6:	mov    ecx,0x71ffff00
  43fffb:	iret   
  43fffc:	cmp    DWORD PTR ds:0x97152482,0xffffffff
  440003:	(bad)  
  440004:	inc    DWORD PTR [eax]
  440006:	jne    0x43ff8b
  440008:	dec    esp
  44000a:	or     BYTE PTR [edi+edi*8],bl
  44000d:	sbb    eax,edi
  44000f:	in     eax,0x73
  440011:	push   es
  440012:	add    bh,bh
  440014:	(bad)  
  440015:	jmp    FWORD PTR [edx]
  440017:	cmp    edi,0x0
  44001a:	bound  ebx,QWORD PTR [ebx+0x113b67ff]
  440020:	fs inc ebx
  440022:	add    bh,bh
  440024:	add    bh,bh
  440026:	and    eax,0x3b83cc00
  44002b:	mov    edx,0x65047b00
  440030:	mov    bl,0x67
  440032:	inc    DWORD PTR [eax]
  440034:	add    bh,bh
  440036:	mov    ebx,0x35ff00cc
  44003b:	out    dx,al
  44003c:	add    BYTE PTR [edx-0x5c],al
  44003f:	fs and al,0x6
  440042:	add    BYTE PTR [eax],al
  440044:	(bad)  
  440045:	dec    DWORD PTR [edi+edi*8+0x11b8cc83]
  44004c:	add    BYTE PTR [esi+0x1a],bl
  44004f:	outs   dx,DWORD PTR ds:[esi]
  440050:	add    BYTE PTR [edi+edi*8],al
  440053:	inc    DWORD PTR [eax]
  440055:	add    BYTE PTR [eax-0x34],dh
  440058:	inc    DWORD PTR [ebx-0x23ff42eb]
  44005e:	xlat   BYTE PTR ds:[ebx]
  44005f:	dec    ebx
  440060:	mov    ecx,0xff0000d6
  440065:	jmp    FWORD PTR [eax]
  440067:	add    bh,bh
  440069:	add    BYTE PTR [edi+0x3b91cc73],dh
  44006f:	or     DWORD PTR [ebp+0x4f],0xffffffff
  440076:	int    0x0
  440078:	add    bh,bh
  44007a:	retf   
  44007b:	mov    dl,0x0
  44007d:	lea    edi,[ebx+esi*8-0x72]
  440081:	sbb    edi,edi
  440083:	(bad)  
  440084:	inc    DWORD PTR [eax]
  440086:	push   ds
  440087:	add    BYTE PTR [ebx-0x2d801],al
  44008d:	cs ins DWORD PTR es:[edi],dx
  44008f:	or     al,0xb3
  440091:	mov    edx,0xff0083ff
  440096:	xor    eax,DWORD PTR [eax]
  440098:	inc    DWORD PTR [ebx+0x740028c8]
  44009e:	cmp    BYTE PTR [edi+0x68],0xf7
  4400a2:	inc    DWORD PTR [ebx-0xa3ff01]
  4400a8:	add    ah,cl
  4400aa:	leave  
  4400ab:	inc    edx
  4400ac:	add    bl,ch
  4400ae:	sub    DWORD PTR [ebx-0x7c550e],ecx
  4400b4:	dec    DWORD PTR [ecx-0x7c00ff72]
  4400ba:	ret    0x89a2
  4400bd:	cmp    al,0xb8
  4400bf:	mov    eax,0xffd0e4
  4400c4:	(bad)  
  4400c5:	(bad)  
  4400c6:	fmul   DWORD PTR [ecx+0x7d2b8300]
  4400cc:	inc    DWORD PTR [eax+0x3e]
  4400cf:	xlat   BYTE PTR ds:[ebx]
  4400d0:	(bad)  
  4400d1:	cmp    eax,0xcccc8383
  4400d6:	cmp    eax,0xfb008300
  4400db:	das    
  4400dc:	call   FWORD PTR [ebp+0x7b328d7a]
  4400e2:	add    DWORD PTR [ebx+0xdfff00],0x0
  4400e9:	sub    DWORD PTR [edx-0x24a87c3b],0x5b
  4400f0:	sti    
  4400f1:	fild   WORD PTR [eax]
  4400f3:	dec    DWORD PTR [ecx+0xcce600]
  4400f9:	push   DWORD PTR [esi]
  4400fb:	(bad)  
  4400fd:	jmp    0xcc:0x4736b4da
  440104:	inc    DWORD PTR [eax]
  440106:	int3   
  440107:	add    bh,bh
  440109:	inc    DWORD PTR [esi+0x46]
  44010c:	add    BYTE PTR [ebp-0x216a765c],dl
  440112:	(bad)  
  440113:	inc    DWORD PTR [ebx-0x76001901]
  440119:	add    ah,dl
  44011b:	mov    edx,0xdeffab00
  440120:	sub    ah,BYTE PTR [edi]
  440122:	inc    DWORD PTR [eax]
  440124:	add    bh,bh
  440126:	lahf   
  440127:	(bad)  
  440128:	dec    DWORD PTR [ecx-0x1a001454]
  44012e:	sbb    DWORD PTR ss:[edi],edi
  440131:	adc    BYTE PTR [eax],al
  440133:	inc    DWORD PTR [eax]
  440135:	add    BYTE PTR [ecx],bh
  440137:	add    bh,bh
  440139:	dec    DWORD PTR [ecx]
  44013b:	and    bh,bh
  44013d:	mov    ah,BYTE PTR [eax+edx*1]
  440140:	push   es
  440141:	jns    0x44010f
  440143:	cmp    edi,0xffffffcc
  440146:	iret   
  440147:	dec    esp
  440149:	(bad)  
  44014a:	cmp    al,0xb6
  44014c:	xor    DWORD PTR [eax],0x19
  44014f:	adc    DWORD PTR ds:0xffffff12,edx
  440155:	and    DWORD PTR [ebx+eax*4+0x3d540000],0xffffff83
  44015d:	fldenv [edx]
  44015f:	in     eax,dx
  440160:	add    ch,BYTE PTR [edi+0x83ccff]
  440166:	jb     0x440168
  440168:	add    BYTE PTR [eax],al
  44016a:	inc    esp
  44016b:	icebp  
  44016c:	mov    DWORD PTR [ebp+0x52100665],eax
  440172:	cmp    edi,0xffffffcc
  440175:	add    al,dl
  440177:	int3   
  440178:	(bad)  
  440179:	push   DWORD PTR [ecx+ebx*1-0x7d]
  44017d:	xchg   edi,eax
  44017e:	aas    
  44017f:	(bad)  
  440181:	xor    edi,edi
  440183:	int3   
  440184:	inc    DWORD PTR [eax]
  440186:	test   ah,0x0
  440189:	jmp    DWORD PTR [ebp-0x48bf005f]
  44018f:	outs   dx,BYTE PTR ds:[esi]
  440190:	mov    edx,0x83008981
  440195:	add    BYTE PTR ds:0x428900ff,al
  44019b:	aaa    
  44019c:	jmp    FWORD PTR [ebx-0x24]
  44019f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4401a0:	mov    ecx,0xff00000b
  4401a5:	add    BYTE PTR [edx-0x1],bh
  4401a8:	add    bh,bh
  4401aa:	mov    al,0x1d
  4401ac:	add    BYTE PTR [ecx+0x1a37f8be],ch
  4401b2:	cmp    edi,0xffffffff
  4401b5:	(bad)  
  4401b6:	out    dx,eax
  4401b7:	(bad)  
  4401b8:	inc    DWORD PTR [eax]
  4401ba:	leave  
  4401bb:	inc    edx
  4401bc:	call   DWORD PTR [edx+0x54]
  4401bf:	cmp    DWORD PTR [esi],ebx
  4401c1:	(bad)  
  4401c3:	(bad)  
  4401c4:	dec    esp
  4401c6:	cmp    bh,0xff
  4401c9:	mov    DWORD PTR [edi+0x414aff76],ecx
  4401cf:	add    al,BYTE PTR [edx-0x7cffd0]
  4401d5:	call   FWORD PTR [ecx-0x5d000001]
  4401db:	add    bh,bh
  4401dd:	inc    DWORD PTR [si]
  4401e0:	pop    ecx
  4401e1:	and    edi,edi
  4401e3:	int3   
  4401e4:	add    BYTE PTR [eax],al
  4401e6:	addr16 (bad) 
  4401e8:	(bad)  
  4401e9:	jmp    DWORD PTR [eax-0x6ec7ffcf]
  4401ef:	mov    bl,0x73
  4401f1:	test   bh,bh
  4401f3:	mov    DWORD PTR [eax],eax
  4401f5:	add    BYTE PTR [ecx-0x34],cl
  4401f8:	(bad)  
  4401f9:	inc    DWORD PTR [edx]
  4401fb:	jbe    0x4401fc
  4401fd:	xchg   esi,eax
  4401fe:	lods   al,BYTE PTR ds:[esi]
  4401ff:	lahf   
  440200:	addr16 leave 
  440202:	add    BYTE PTR [eax],al
  440204:	cmp    edi,0x17
  440207:	add    bh,bh
  440209:	(bad)  
  44020a:	cmp    BYTE PTR [ebx],ah
  44020c:	add    BYTE PTR [eax+0x738b479],ah
  440212:	add    BYTE PTR [eax],al
  440214:	mov    DWORD PTR [ebx-0x7c00003b],eax
  44021a:	clc    
  44021b:	xchg   DWORD PTR [eax],eax
  44021d:	mov    cl,0xae
  44021f:	and    al,0x86
  440221:	pushf  
  440222:	cmp    edi,0x0
  440225:	dec    DWORD PTR [eax+eax*1+0x4690cc83]
  44022c:	add    ebx,0xffffffea
  44022f:	inc    ebp
  440230:	mov    ah,0x63
  440232:	(bad)  
  440233:	inc    DWORD PTR [eax]
  440235:	call   FWORD PTR [esi+0x0]
  440238:	inc    DWORD PTR [eax]
  44023a:	ror    DWORD PTR [edx-0x1],cl
  44023d:	mov    cl,BYTE PTR [ebp+0x7c]
  440240:	cld    
  440241:	mov    eax,DWORD PTR [eax]
  440243:	(bad)  
  440244:	(bad)  
  440245:	call   DWORD PTR ds:0x9b0083ff
  44024b:	or     al,0x89
  44024d:	xchg   edx,eax
  44024e:	shl    edx,0x53
  440251:	iret   
  440252:	add    BYTE PTR [eax],al
  440254:	(bad)  
  440255:	push   ebx
  440257:	inc    DWORD PTR [ebx+0x130700]
  44025d:	xchg   ecx,eax
  44025e:	xor    al,0xd5
  440260:	inc    edx
  440261:	inc    eax
  440263:	pop    edi
  440264:	add    bh,bh
  440266:	add    BYTE PTR [ebx],ch
  440268:	int3   
  440269:	(bad)  
  44026a:	and    DWORD PTR [eax-0x1],ecx
  44026d:	adc    DWORD PTR [eax],0xffffffff
  440270:	cmp    bh,0xe1
  440273:	push   es
  440274:	dec    DWORD PTR [ecx+0x6289b289]
  44027a:	out    dx,eax
  44027b:	adc    eax,0xff3f00ff
  440280:	add    DWORD PTR [eax],0xffffffc8
  440283:	test   DWORD PTR [ebx-0xb50001],eax
  440289:	imul   esi,ebx,0x7a00fff8
  44028f:	dec    DWORD PTR [eax-0x1]
  440292:	hlt    
  440293:	add    eax,0xd7000000
  440298:	dec    esp
  44029a:	push   ecx
  44029b:	and    al,BYTE PTR [eax]
  44029d:	push   ebp
  44029f:	add    BYTE PTR [esi-0x33a12600],bh
  4402a5:	(bad)  
  4402a6:	(bad)  
  4402a7:	jmp    0x4402a8
  4402a9:	jae    0x44027e
  4402ab:	outs   dx,BYTE PTR ds:[esi]
  4402ac:	cmp    edi,0xffffffbc
  4402af:	push   DWORD PTR [ecx-0xc5e700]
  4402b5:	(bad)  
  4402b6:	dec    DWORD PTR [ecx-0x132d1a01]
  4402bc:	add    DWORD PTR [ebx+0x15ff05],0x12
  4402c3:	mov    al,BYTE PTR [eax]
  4402c5:	add    BYTE PTR [eax],al
  4402c7:	sub    bh,bh
  4402c9:	inc    DWORD PTR [edx+0x32ccff7a]
  4402cf:	(bad)  
  4402d0:	(bad)  
  4402d1:	call   DWORD PTR [eax]
  4402d3:	lahf   
  4402d4:	(bad)  
  4402d5:	(bad)  
  4402d6:	(bad)  
  4402d7:	cmp    eax,0x4cbcccff
  4402dc:	cmp    edi,0xffffffb0
  4402df:	push   ebp
  4402e1:	jmp    FWORD PTR [esi-0xff00b0]
  4402e7:	nop
  4402e8:	jmp    FWORD PTR [edi-0x337c4435]
  4402ee:	repnz or DWORD PTR [edi+edi*8-0x44],0xe
  4402f4:	add    DWORD PTR [eax],0xffffff83
  4402f7:	mov    eax,ds:0x921b9600
  4402fc:	inc    DWORD PTR [eax]
  4402fe:	mov    es,WORD PTR [eax]
  440300:	jmp    0xffa0b504
  440305:	add    ah,cl
  440307:	jg     0x4402d5
  440309:	in     al,dx
  44030a:	jnp    0x440361
  44030c:	add    BYTE PTR [eax],al
  44030e:	pop    ss
  44030f:	call   DWORD PTR [edi+edi*8-0x60]
  440313:	test   al,0x0
  440315:	(bad)  
  440316:	(bad)  
  440317:	fdiv   st(7),st
  440319:	mov    ch,0x52
  44031b:	clc    
  44031c:	inc    DWORD PTR [ebx-0x5700f6]
  440322:	pop    esi
  440323:	mov    BYTE PTR [eax],0x0
  440326:	mov    DWORD PTR [ebx],ecx
  440328:	adc    DWORD PTR [ebp+0x72],0xffffffb9
  44032c:	dec    DWORD PTR [ecx+0x1bff64]
  440332:	push   si
  440334:	int3   
  440335:	(bad)  
  440336:	push   DWORD PTR [edx-0x6e2e6e00]
  44033c:	inc    DWORD PTR [eax]
  44033e:	xchg   bh,bh
  440340:	or     DWORD PTR [eax],eax
  440342:	aaa    
  440343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  440344:	add    BYTE PTR [eax],al
  440346:	add    BYTE PTR [edi],bl
  440348:	int3   
  440349:	cdq    
  44034a:	dec    edi
  44034b:	cmc    
  44034c:	inc    DWORD PTR [eax]
  44034e:	ins    BYTE PTR es:[edi],dx
  44034f:	dec    esi
  440351:	add    BYTE PTR [edi+0x5a],al
  440354:	add    bh,bh
  440356:	add    dl,ah
  440358:	add    BYTE PTR [ecx],bl
  44035a:	lea    esi,[ebp-0x77]
  44035d:	(bad)  
  44035e:	fdiv   st(7),st
  440360:	xchg   ecx,eax
  440361:	int3   
  440362:	or     eax,0x83ffff28
  440367:	sar    bh,0x3d
  44036a:	dec    esp
  44036b:	mov    edi,?
  44036d:	inc    ebp
  44036f:	add    BYTE PTR [edi],al
  440371:	(bad)  
  440372:	jp     0x440326
  440374:	add    BYTE PTR [ebx-0x2eff6a77],al
  44037a:	push   0xc2ffccf6
  44037f:	xor    DWORD PTR [ebx],0x0
  440382:	es inc edx
  440384:	dec    DWORD PTR [ecx+0x70ff8c00]
  44038a:	dec    cl
  44038c:	add    bh,bh
  44038e:	inc    ebp
  44038f:	call   DWORD PTR [ebp-0x7655eb01]
  440395:	add    bh,bh
  440397:	cmc    
  440398:	add    BYTE PTR [ebp+eax*8-0x2800ff42],bl
  44039f:	add    BYTE PTR [ebp+0x90c1ff],dl
  4403a5:	add    BYTE PTR [eax],al
  4403a7:	adc    eax,0x54f02c00
  4403ac:	or     esp,0xffffffe0
  4403af:	xor    DWORD PTR [edi],0xffffff89
  4403b2:	daa    
  4403b3:	xor    edi,edi
  4403b5:	add    bh,bh
  4403b7:	mov    ds:0x9c41ce00,eax
  4403bc:	inc    DWORD PTR [eax]
  4403be:	(bad)  
  4403bf:	(bad)  
  4403c0:	fdiv   st(7),st
  4403c2:	adc    DWORD PTR [esi-0x1],0xffffffff
  4403c6:	add    al,dl
  4403c8:	mov    DWORD PTR [ebp+0xc],ebp
  4403cb:	xor    al,BYTE PTR [ebx-0x68ff2e7d]
  4403d1:	int3   
  4403d2:	fisubr WORD PTR [edx]
  4403d4:	inc    DWORD PTR [eax]
  4403d6:	call   DWORD PTR [eax+0x4e4f69ff]
  4403dc:	(bad)  
  4403dd:	jmp    FWORD PTR [ecx+0x0]
  4403e0:	add    al,0xff
  4403e2:	test   eax,0xffff8d
  4403e7:	cmp    eax,0xa41f2eff
  4403ec:	dec    DWORD PTR [ecx-0x330900e2]
  4403f2:	add    eax,0xff00ff17
  4403f7:	jbe    0x4403c5
  4403f9:	sbb    ebp,DWORD PTR [eax+eax*1+0x0]
  4403fd:	sub    DWORD PTR [esi],0xffffff83
  440400:	mov    edi,?
  440402:	push   esp
  440403:	sbb    bh,bh
  440405:	inc    DWORD PTR [ebx-0x1e057c62]
  44040b:	pop    ebx
  44040c:	cmp    edi,0xffffffb6
  44040f:	(bad)  
  440410:	jp     0x440412
  440412:	jne    0x44043c
  440414:	int3   
  440415:	inc    DWORD PTR [eax]
  440417:	fild   DWORD PTR [eax]
  440419:	clc    
  44041a:	push   0x72ffffb7
  44041f:	(bad)  
  440420:	fild   DWORD PTR [ebx-0x7cff2075]
  440426:	push   ebp
  440428:	xor    DWORD PTR [edi],0x47
  44042b:	hlt    
  44042c:	add    BYTE PTR [eax],al
  44042e:	cmp    edi,0xdc79cc67
  440434:	(bad)  
  440435:	(bad)  
  440436:	(bad)  
  440437:	cmp    BYTE PTR [ebx-0x7c454018],al
  44043d:	mov    edx,esi
  44043f:	add    BYTE PTR [esi-0x1],bl
  440442:	xchg   edx,eax
  440443:	adc    edi,edi
  440445:	dec    DWORD PTR [ecx-0x493affb2]
  44044b:	sar    edi,0x0
  44044e:	js     0x440450
  440450:	enter  0x8500,0xd8
  440454:	or     esp,0xffffffff
  440457:	js     0x440458
  440459:	in     al,0x7c
  44045b:	mov    ds:0xff6b0000,eax
  440460:	sar    edi,0xdc
  440463:	adc    ecx,DWORD PTR [ecx-0x7c270001]
  440469:	into   
  44046a:	in     eax,dx
  44046b:	sar    edi,1
  44046d:	mov    DWORD PTR [esi+0x0],ebp
  440470:	popa   
  440471:	call   DWORD PTR ds:0xff000033
  440477:	retf   0x4f00
  44047a:	(bad)  
  44047b:	(bad)  
  44047c:	inc    DWORD PTR [eax]
  44047e:	mov    eax,ds:0xeecc9783
  440483:	mov    dl,0x83
  440485:	dec    esp
  440487:	jp     0x440488
  440489:	mov    ds:0x89892c7b,al
  44048e:	and    cl,ah
  440490:	adc    edi,edi
  440492:	retf   0xff8f
  440495:	int3   
  440496:	add    BYTE PTR [ebx+0x14d3b400],ch
  44049c:	int3   
  44049d:	call   edx
  44049f:	and    DWORD PTR [edi+edi*8-0x7c76c842],0x0
  4404a7:	into   
  4404a8:	jmp    FWORD PTR [edx-0x41]
  4404ab:	fild   DWORD PTR [eax]
  4404ad:	and    DWORD PTR [eax],0xffffffff
  4404b0:	fiadd  DWORD PTR [eax]
  4404b2:	dec    ecx
  4404b3:	daa    
  4404b4:	int3   
  4404b5:	(bad)  
  4404b6:	call   FWORD PTR [edx+0x0]
  4404b9:	sub    DWORD PTR [esi-0x4fff7ce4],0xffffff89
  4404c0:	cmp    bh,0xae
  4404c3:	(bad)  
  4404c5:	(bad)  
  4404c6:	call   DWORD PTR [ebx]
  4404c8:	add    BYTE PTR [esi],ch
  4404ca:	mov    esp,0x200004c
  4404cf:	dec    DWORD PTR [esi-0x1]
  4404d2:	gs cld 
  4404d4:	(bad)  
  4404d5:	dec    DWORD PTR [ecx-0x826ff43]
  4404db:	outs   dx,BYTE PTR ds:[esi]
  4404dc:	inc    DWORD PTR [eax]
  4404de:	(bad)  
  4404df:	(bad)  
  4404e0:	mov    eax,0xff32e983
  4404e5:	add    bh,bh
  4404e7:	mov    bl,0x0
  4404e9:	aam    0xe9
  4404eb:	pop    ds
  4404ec:	(bad)  
  4404ed:	push   DWORD PTR [ebx-0x1]
  4404f0:	dec    esp
  4404f1:	int3   
  4404f2:	out    0x48,eax
  4404f4:	(bad)  
  4404f5:	inc    DWORD PTR [eax]
  4404f7:	mov    edi,0x9dff58ff
  4404fc:	(bad)  
  4404fd:	dec    DWORD PTR [esi-0x2a006700]
  440503:	inc    DWORD PTR ss:[eax]
  440506:	push   DWORD PTR [ecx+0x41988e89]
  44050c:	(bad)  
  44050d:	(bad)  
  44050e:	mov    ebx,0x8b0076ff
  440513:	jl     0x440515
  440515:	cmp    edi,0x3b
  440518:	jmp    FWORD PTR [esi+ebp*2-0x4f00ff2f]
  44051f:	add    BYTE PTR [ebp+0xe31600],ch
  440525:	add    bh,bh
  440527:	das    
  440528:	dec    ebx
  44052a:	mov    al,ds:0xe7ff0023
  44052f:	mov    esp,edi
  440531:	add    BYTE PTR [edi-0xff0019],dl
  440537:	mov    ebx,0xb2b8eaff
  44053c:	add    BYTE PTR [eax],al
  44053e:	push   eax
  44053f:	add    dl,ah
  440541:	add    BYTE PTR [ecx+0x60],dl
  440544:	(bad)  
  440545:	(bad)  
  440546:	push   DWORD PTR [esi-0x1]
  440549:	lea    ebp,[ecx+eiz*1]
  44054c:	add    bh,bh
  44054e:	push   es
  44054f:	add    BYTE PTR [edi-0x3e2501],al
  440555:	(bad)  
  440556:	call   DWORD PTR [eax+0x68335cff]
  44055c:	add    bh,bh
  44055e:	mov    BYTE PTR [eax],al
  440560:	xor    bh,bh
  440562:	ss aam 0xff
  440565:	inc    DWORD PTR [eax]
  440567:	jb     0x4404ec
  440569:	fsub   DWORD PTR [ebx+0x7bffcc04]
  44056f:	or     DWORD PTR [edi],0xffffffff
  440572:	and    esi,esi
  440574:	mov    DWORD PTR [eax],eax
  440576:	adc    ebp,0x0
  440579:	xchg   esi,eax
  44057a:	mov    bl,0x66
  44057c:	(bad)  
  44057d:	call   DWORD PTR [esp+ecx*8+0x3084cc7a]
  440584:	inc    DWORD PTR [eax]
  440586:	int3   
  440587:	out    dx,al
  440588:	int3   
  440589:	test   al,0x2a
  44058b:	pop    eax
  44058c:	add    DWORD PTR [ebx-0x4c7677],0x8
  440593:	pop    DWORD PTR [eax]
  440595:	add    BYTE PTR [eax],al
  440597:	mov    eax,0x3433ecff
  44059c:	(bad)  
  44059d:	call   FWORD PTR [edi+0x0]
  4405a0:	nop
  4405a1:	mov    DWORD PTR [eax+0xcccc0b],edi
  4405a7:	mov    esi,0x7f4212ff
  4405ac:	add    BYTE PTR [ecx-0x7c830045],cl
  4405b2:	pop    ebp
  4405b3:	mov    ds:0xd3ffccff,eax
  4405b8:	and    edi,0xffffffda
  4405bb:	mov    ebx,0xffff00cc
  4405c0:	mov    BYTE PTR [eax],0x70
  4405c3:	scas   al,BYTE PTR es:[edi]
  4405c4:	inc    DWORD PTR [eax]
  4405c6:	mov    ebx,ebx
  4405c8:	push   DWORD PTR ds:0x83428e
  4405ce:	pop    edi
  4405cf:	mov    edx,eax
  4405d1:	int3   
  4405d2:	addr16 xchg ebx,eax
  4405d4:	add    BYTE PTR [eax],al
  4405d6:	jmp    DWORD PTR [edi]
  4405d8:	jmp    DWORD PTR [edi]
  4405da:	sbb    al,0x11
  4405dc:	(bad)  
  4405dd:	call   DWORD PTR ds:0xe20010cc
  4405e3:	ret    
  4405e4:	add    DWORD PTR [ebx-0x247cce00],0x3c
  4405eb:	mov    al,0x89
  4405ed:	jmp    DWORD PTR [edi-0x77ff4e34]
  4405f3:	push   0x0
  4405f5:	cmp    edi,0xffffffcf
  4405f8:	int3   
  4405f9:	jnp    0x440622
  4405fb:	fiadd  WORD PTR [eax]
  4405fd:	push   DWORD PTR [ebx]
  4405ff:	inc    DWORD PTR [esi-0x1]
  440602:	sti    
  440603:	mov    ah,0x0
  440605:	inc    DWORD PTR [eax]
  440607:	arpl   di,di
  440609:	mov    eax,edx
  44060b:	lods   al,BYTE PTR ds:[esi]
  44060c:	mov    DWORD PTR [eax],eax
  44060e:	or     al,0x0
  440610:	push   esp
  440611:	add    BYTE PTR [ebp+eax*1-0x77],bl
  440615:	(bad)  
  440616:	(bad)  
  440617:	call   0x79f6441b
  44061c:	add    BYTE PTR [eax],al
  44061e:	enter  0xf8ff,0x89
  440622:	and    BYTE PTR [edx+0x0],al
  440625:	add    bh,bh
  440627:	ds int3 
  440629:	cmp    al,dl
  44062b:	jp     0x44062d
  44062d:	call   FWORD PTR [ecx-0x77]
  440630:	test   bh,bh
  440632:	pop    ss
  440633:	add    al,0x0
  440635:	add    BYTE PTR [ecx-0x6f247c1e],cl
  44063b:	jno    0x44063c
  44063d:	call   DWORD PTR [edi+edi*8]
  440640:	out    dx,al
  440641:	inc    DWORD PTR [ecx-0xc4]
  440647:	loop   0x440648
  440649:	push   edx
  44064a:	pop    edi
  44064b:	and    al,0xff
  44064d:	xor    DWORD PTR [ebx+0x6f003983],0xfffffffd
  440654:	add    BYTE PTR [ecx+0x36ffefff],cl
  44065a:	mov    ebx,0x6783ffbd
  44065f:	(bad)  
  440660:	jle    0x440662
  440662:	push   ds
  440663:	mov    ds:0x2483cc83,eax
  440668:	jmp    FWORD PTR [eax+esi*1]
  44066b:	mov    ds:0x837b0000,al
  440670:	or     al,0x0
  440672:	inc    ecx
  440673:	mov    edx,0xb6ff83ff
  440678:	jmp    FWORD PTR [ebx]
  44067a:	ja     0x4406f2
  44067c:	add    DWORD PTR [eax],0xffffff88
  44067f:	call   FWORD PTR [ebx-0xc3df01]
  440685:	(bad)  
  440686:	push   DWORD PTR [edi-0x5c06837d]
  44068c:	cmp    edi,0xffffffbc
  44068f:	and    esp,0xffffffff
  440692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440693:	out    dx,eax
  440694:	cmp    edi,0xffffffff
  440697:	cwde   
  440698:	inc    DWORD PTR [eax-0x917f]
  44069e:	je     0x44069f
  4406a0:	in     eax,0xff
  4406a2:	icebp  
  4406a3:	jmp    0x4406a4
  4406a5:	dec    DWORD PTR [ecx+0x12bbff01]
  4406ab:	mov    dh,0x83
  4406ad:	add    BYTE PTR [edi+edi*8+0x38],al
  4406b1:	(bad)  
  4406b2:	mov    edx,0xcc00ccfe
  4406b7:	ret    
  4406b8:	add    BYTE PTR [edx+0x1],dl
  4406bb:	js     0x4406bd
  4406bd:	sub    DWORD PTR [ebx+0x0],0x76
  4406c1:	add    BYTE PTR [edx+0xff54],ch
  4406c7:	out    dx,al
  4406c8:	dec    DWORD PTR [eax-0xeea0]
  4406ce:	mov    eax,0xcefff0ff
  4406d3:	push   ebx
  4406d4:	add    bh,bh
  4406d6:	(bad)  
  4406d7:	mov    ebx,0xdc8069ff
  4406dc:	(bad)  
  4406dd:	inc    esi
  4406df:	cmp    DWORD PTR [ecx],0xffffffff
  4406e2:	add    al,0xe0
  4406e4:	mov    edi,edi
  4406e6:	add    BYTE PTR [ebp-0x1],bh
  4406e9:	jmp    0x4483d4
  4406ee:	sub    edi,edi
  4406f0:	push   ss
  4406f1:	(bad)  
  4406f2:	jg     0x440748
  4406f4:	add    bh,bh
  4406f6:	add    ch,ch
  4406f8:	int3   
  4406f9:	stos   DWORD PTR es:[edi],eax
  4406fa:	mov    ah,0xf3
  4406fc:	(bad)  
  4406fd:	(bad)  
  4406fe:	jnp    0x440700
  440700:	jg     0x440701
  440702:	mov    ch,BYTE PTR [esi-0x34]
  440705:	add    BYTE PTR [ebx+0x7abffef],al
  44070b:	ret    0xffcc
  44070e:	xchg   ebx,eax
  44070f:	and    DWORD PTR [edi-0x7cd73f00],0xffffff83
  440716:	add    DWORD PTR [edi],0xffffffff
  440719:	stc    
  44071a:	pop    edi
  44071b:	rol    DWORD PTR [eax],0x83
  44071e:	verr   cx
  440721:	(bad)  
  440722:	clc    
  440723:	jnp    0x440724
  440725:	inc    DWORD PTR [ebx-0x17ecffcd]
  44072b:	stos   DWORD PTR es:[edi],eax
  44072c:	add    BYTE PTR [ebx-0x597cca],al
  440732:	clc    
  440733:	test   eax,0xdeffff83
  440738:	call   ebx
  44073a:	jmp    0xa7cc:0x5200ffc6
  440741:	call   FWORD PTR ds:0x8300ffa4
  440747:	dec    esp
  440748:	inc    edx
  44074a:	call   0xc7d3d7
  44074f:	mov    DWORD PTR [ecx],esp
  440751:	add    BYTE PTR [edi-0xffff2c],ah
  440757:	arpl   di,di
  440759:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44075b:	out    dx,al
  44075c:	inc    DWORD PTR [eax]
  44075e:	fcos   
  440760:	xchg   edx,eax
  440761:	add    BYTE PTR [ebx+0x19],cl
  440764:	add    BYTE PTR [eax],al
  440766:	mov    DWORD PTR [esi+0x277934ff],edx
  44076c:	inc    DWORD PTR [ebx-0x663371]
  440772:	out    dx,al
  440773:	sub    ecx,esp
  440775:	add    BYTE PTR [ebx-0x30bd33e4],al
  44077b:	enter  0xffff,0x9d
  44077f:	add    BYTE PTR [ebx-0x34],bl
  440782:	dec    edi
  440783:	cmp    bh,0x89
  440786:	jmp    FWORD PTR [ebp-0x55de4601]
  44078c:	(bad)  
  44078d:	dec    DWORD PTR [ebx]
  44078f:	push   DWORD PTR [edi-0x1]
  440792:	add    cl,BYTE PTR [edx-0x5dff0100]
  440798:	(bad)  
  440799:	fiadd  DWORD PTR [edi]
  44079b:	sar    bh,cl
  44079d:	adc    DWORD PTR [ebp-0x3c001301],0x26
  4407a4:	dec    DWORD PTR [ecx+0x41ff3f00]
  4407aa:	xor    al,0xc6
  4407ac:	dec    esp
  4407ae:	stos   DWORD PTR es:[edi],eax
  4407af:	(bad)  
  4407b0:	clc    
  4407b1:	add    BYTE PTR [edi-0x767c33d3],dh
  4407b7:	mov    eax,0xf1e26fff
  4407bc:	add    ah,cl
  4407be:	fld    QWORD PTR [ebx-0x66710007]
  4407c4:	(bad)  
  4407c5:	(bad)  
  4407c6:	push   DWORD PTR [edi]
  4407c8:	add    BYTE PTR [edx],ah
  4407ca:	push   ss
  4407cb:	or     edi,edi
  4407cd:	(bad)  
  4407ce:	cld    
  4407cf:	add    BYTE PTR [ebx+eax*4-0x3f],al
  4407d3:	out    dx,eax
  4407d4:	add    BYTE PTR [ecx-0x7a00c034],cl
  4407da:	push   ss
  4407db:	mov    dh,0x0
  4407dd:	add    bh,ah
  4407df:	jmp    FWORD PTR [esi-0x7d]
  4407e2:	jecxz  0x440783
  4407e4:	add    BYTE PTR [eax],al
  4407e6:	call   FWORD PTR [eax]
  4407e8:	jmp    FWORD PTR [esi-0x7cff253c]
  4407ee:	jge    0x4407ef
  4407f0:	mov    ah,0xff
  4407f2:	adc    edi,DWORD PTR [ebx]
  4407f4:	mov    DWORD PTR [eax],eax
  4407f6:	inc    DWORD PTR [edx-0x36e84001]
  4407fc:	inc    DWORD PTR [eax]
  4407fe:	das    
  4407ff:	(bad)  
  440800:	cmp    al,0x89
  440802:	and    eax,0xff000086
  440807:	idiv   edi
  440809:	cmc    
  44080a:	mov    al,0x6c
  44080c:	(bad)  
  44080d:	call   FWORD PTR [esi]
  44080f:	call   FWORD PTR [edi+edi*8-0x767ca6dc]
  440816:	add    cl,cl
  440818:	call   FWORD PTR [ebp-0x7c3366ac]
  44081e:	lock add BYTE PTR [ebp-0x1],bl
  440822:	push   ebx
  440823:	inc    DWORD PTR [eax]
  440825:	add    DWORD PTR [ebx+0x37dbfffc],0xffffffbc
  44082c:	add    bh,bh
  44082e:	lock push DWORD PTR [edx]
  440831:	int3   
  440832:	push   DWORD PTR [edx-0x1]
  440835:	add    DWORD PTR [eax],0xffffffdd
  440838:	call   FWORD PTR [esi+esi*4-0x3bff3393]
  44083f:	jmp    FWORD PTR [ecx]
  440841:	dec    DWORD PTR [edi+0x38]
  440844:	add    BYTE PTR [eax],al
  440846:	mov    ebx,esi
  440848:	add    bl,al
  44084a:	data16 and al,0xff
  44084d:	int3   
  44084e:	and    al,0x0
  440850:	iret   
  440851:	add    dl,al
  440853:	call   0xcf00:0x5900ccff
  44085a:	push   esp
  44085b:	int3   
  44085c:	(bad)  
  44085d:	jmp    DWORD PTR [ebx-0xbff3000]
  440863:	inc    eax
  440864:	add    BYTE PTR [eax],al
  440866:	inc    DWORD PTR [ebx+0x5c099eff]
  44086c:	cmp    edi,0xffffff9e
  44086f:	call   DWORD PTR [edi+0x0]
  440872:	arpl   WORD PTR [eax+eax*1-0x1],dx
  440876:	add    BYTE PTR [edx-0x3833ad01],bl
  44087c:	cmp    edi,0x23
  44087f:	call   DWORD PTR [esi+0x0]
  440882:	cld    
  440883:	sub    al,0x89
  440885:	(bad)  
  440886:	push   DWORD PTR [edx]
  440888:	add    bl,dh
  44088a:	pop    edx
  44088b:	scas   al,BYTE PTR es:[edi]
  44088c:	inc    DWORD PTR [ebx+0xaa00cb]
  440892:	mov    al,gs:0xe1cc8383
  440898:	sub    DWORD PTR [eax+ebx*8],0xffffffbe
  44089c:	int3   
  44089d:	dec    DWORD PTR [edi+edi*8-0x5f55ff80]
  4408a4:	cmp    edi,0x0
  4408a7:	in     al,0xff
  4408a9:	les    eax,FWORD PTR [edx+0xb00002a]
  4408af:	dec    esi
  4408b1:	inc    ebx
  4408b3:	out    dx,al
  4408b4:	add    BYTE PTR [eax],al
  4408b6:	or     DWORD PTR [ecx+0x0],0x70
  4408ba:	mov    edi,0xf0838934
  4408bf:	add    BYTE PTR [ebx-0x7d],bl
  4408c2:	inc    DWORD PTR ds:0x27cc00ff
  4408c8:	inc    DWORD PTR [esi]
  4408ca:	js     0x440913
  4408cc:	mov    esp,ecx
  4408ce:	or     DWORD PTR [ebx+0x487400f0],eax
  4408d4:	add    DWORD PTR [ebx+0x3b000800],0x28
  4408db:	int3   
  4408dc:	add    BYTE PTR [eax],al
  4408de:	push   esp
  4408df:	adc    ecx,0xffffff83
  4408e2:	lods   eax,DWORD PTR ds:[esi]
  4408e3:	(bad)  
  4408e4:	(bad)  
  4408e5:	(bad)  
  4408e6:	dec    DWORD PTR [ecx+ecx*4-0x33]
  4408ea:	dec    esp
  4408eb:	jmp    0xff8208bc
  4408f0:	retf   
  4408f1:	add    BYTE PTR [ebx-0xffffb4],dl
  4408f7:	add    eax,0x51bce189
  4408fc:	add    bh,bh
  4408fe:	(bad)  
  440900:	in     eax,dx
  440901:	cmp    DWORD PTR [ebx-0xff0025],0xffffff8d
  440908:	int3   
  440909:	outs   dx,BYTE PTR ds:[esi]
  44090a:	and    eax,0x88ff0026
  44090f:	cmp    DWORD PTR [esp+ecx*8],0xfffffffd
  440913:	pop    ebp
  440914:	add    BYTE PTR [eax],al
  440916:	add    ch,ah
  440918:	add    BYTE PTR [esi],ah
  44091a:	cs adc edi,edi
  44091d:	mov    ebp,ebp
  44091f:	cmp    DWORD PTR [edx-0x1],0xffffffae
  440923:	rol    BYTE PTR [eax],cl
  440925:	(bad)  
  440926:	dec    DWORD PTR [edx+0x0]
  440929:	mov    dh,0xe1
  44092b:	test   bh,bh
  44092d:	add    BYTE PTR [ecx-0x7dfff801],dh
  440933:	add    DWORD PTR ss:[eax],0xffffffff
  440937:	push   ebx
  440938:	sbb    DWORD PTR [ecx],0xffffffa7
  44093b:	xchg   edi,eax
  44093c:	inc    DWORD PTR [ebx-0x5bffd8]
  440942:	(bad)  
  440943:	(bad)  
  440944:	(bad)  
  440945:	dec    esp
  440947:	or     bh,bh
  440949:	mov    BYTE PTR [eax+0x17],0xff
  44094d:	add    dh,ch
  44094f:	int3   
  440950:	(bad)  
  440951:	push   eax
  440953:	outs   dx,BYTE PTR ds:[esi]
  440954:	int3   
  440955:	int3   
  440956:	call   FWORD PTR [eax-0x36b9e501]
  44095c:	(bad)  
  44095d:	call   DWORD PTR [ecx+0x1d89c7ff]
  440963:	lods   eax,DWORD PTR ds:[esi]
  440964:	dec    DWORD PTR [ecx-0x3376a801]
  44096a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44096b:	pop    eax
  44096c:	(bad)  
  44096d:	inc    ecx
  44096f:	inc    edi
  440971:	add    BYTE PTR [eax+0x43],cl
  440974:	add    BYTE PTR [ebx+0x57005889],al
  44097a:	xor    ebp,esi
  44097c:	mov    DWORD PTR [ebx-0x33ce00ac],eax
  440982:	add    BYTE PTR [edi+edi*8],ch
  440985:	inc    DWORD PTR [eax]
  440987:	or     BYTE PTR [ecx-0x9c7dab],cl
  44098d:	cmp    DWORD PTR [ebx],0x0
  440990:	jmp    0x185394
  440995:	add    bh,bh
  440997:	sub    DWORD PTR ss:[ecx-0x5a],0x0
  44099c:	inc    DWORD PTR [eax]
  44099e:	add    bh,bh
  4409a0:	mov    ah,0xff
  4409a2:	mov    al,ds:0xffff83e3
  4409a7:	or     DWORD PTR [eax],eax
  4409a9:	loope  0x4409be
  4409ab:	int    0xff
  4409ad:	dec    DWORD PTR [esi]
  4409af:	mov    DWORD PTR [edi+edi*8+0x64],eax
  4409b3:	dec    ecx
  4409b4:	inc    DWORD PTR [eax]
  4409b6:	sbb    DWORD PTR [ebx],0xffffffff
  4409b9:	pop    ecx
  4409ba:	imul   edx,DWORD PTR [esi-0x7d],0xffffffff
  4409be:	jle    0x4409bf
  4409c0:	dec    esp
  4409c1:	or     DWORD PTR [eax-0x337c005f],0xffffff90
  4409c8:	inc    ecx
  4409ca:	jne    0x44098a
  4409cc:	add    bh,bh
  4409ce:	mov    es,WORD PTR [ebx+0x751dff20]
  4409d4:	inc    DWORD PTR [eax]
  4409d6:	adc    DWORD PTR [ecx-0x217aa901],0xffffffff
  4409dd:	sub    DWORD PTR [ebp-0x6a006801],0x4a
  4409e4:	add    bh,bh
  4409e6:	dec    DWORD PTR [eax+0x1b875fcc]
  4409ec:	inc    DWORD PTR [eax]
  4409ee:	mov    al,0x83
  4409f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4409f1:	and    DWORD PTR [eax-0xff00f1],0x3b
  4409f8:	inc    DWORD PTR ds:0x8979b3
  4409fe:	aad    0x0
  440a00:	add    BYTE PTR [ebx-0x7cff6a71],0xff
  440a07:	(bad)  
  440a08:	add    BYTE PTR [esi+ebx*2],dh
  440a0b:	test   BYTE PTR [eax],al
  440a0d:	add    dl,al
  440a0f:	int3   
  440a10:	jne    0x4409de
  440a12:	(bad)  
  440a13:	jmp    0x440a14
  440a15:	add    bh,bh
  440a17:	mov    bh,0x0
  440a19:	dec    BYTE PTR [esi-0x21007cde]
  440a1f:	mov    eax,edi
  440a21:	int3   
  440a22:	ror    bl,cl
  440a24:	add    BYTE PTR [eax],al
  440a26:	adc    DWORD PTR [edx-0x1],0xffffffe3
  440a2a:	retf   
  440a2b:	out    dx,al
  440a2c:	add    bh,bh
  440a2e:	cs add dh,bh
  440a31:	and    DWORD PTR [eax],0x3a
  440a34:	add    bh,bh
  440a36:	add    BYTE PTR [ebx-0x1],bl
  440a39:	and    ch,dh
  440a3b:	pop    edi
  440a3c:	int3   
  440a3d:	jmp    DWORD PTR [esi+0x0]
  440a40:	scas   eax,DWORD PTR es:[edi]
  440a41:	add    bl,ah
  440a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  440a44:	int3   
  440a45:	add    DWORD PTR [eax],0xffffffaf
  440a48:	(bad)  
  440a49:	fisub  WORD PTR [ecx-0x56]
  440a4c:	int3   
  440a4d:	dec    DWORD PTR [eax+eax*1-0x580ff2e]
  440a54:	inc    DWORD PTR [ebx-0x6833a200]
  440a5a:	mov    ds,WORD PTR [ecx]
  440a5c:	mov    DWORD PTR [ecx-0xc40043],ecx
  440a62:	(bad)  
  440a63:	bound  eax,QWORD PTR [ebx-0xdc0000]
  440a69:	je     0x440aab
  440a6b:	leave  
  440a6c:	(bad)  
  440a6d:	push   DWORD PTR [ecx]
  440a6f:	add    BYTE PTR [ebx],bh
  440a71:	add    dl,bl
  440a73:	into   
  440a74:	(bad)  
  440a75:	inc    DWORD PTR [eax]
  440a77:	mov    es,WORD PTR [ebx-0x33aa72a2]
  440a7d:	dec    DWORD PTR [edx]
  440a7f:	cmp    DWORD PTR [ebx-0x2ab001],0xffffffcc
  440a86:	add    BYTE PTR [ebp-0x13872a77],dh
  440a8c:	inc    DWORD PTR [eax]
  440a8e:	jo     0x440a90
  440a90:	scas   al,BYTE PTR es:[edi]
  440a91:	push   DWORD PTR [ebx+0xffccae]
  440a97:	idiv   edi
  440a99:	outs   dx,BYTE PTR ds:[esi]
  440a9a:	imul   DWORD PTR [ebp-0x7d]
  440a9d:	add    BYTE PTR [esi-0x7d],bh
  440aa0:	aaa    
  440aa1:	(bad)  
  440aa2:	jge    0x440b07
  440aa4:	(bad)  
  440aa5:	dec    DWORD PTR [ecx-0x6d5000a5]
  440aab:	imul   eax,DWORD PTR [eax],0xffffffff
  440aae:	add    edi,edi
  440ab0:	leave  
  440ab1:	add    ah,cl
  440ab3:	jae    0x440ab5
  440ab5:	mov    edi,edi
  440ab7:	scas   al,BYTE PTR es:[edi]
  440ab8:	int3   
  440ab9:	ficomp WORD PTR [edi+0x7e890064]
  440abf:	cmp    DWORD PTR [ebp+0x0],0x7e
  440ac3:	sahf   
  440ac4:	inc    DWORD PTR [ebx-0x3fff17d]
  440aca:	daa    
  440acb:	sbb    edi,edi
  440acd:	add    BYTE PTR [edx+0x0],dh
  440ad0:	loop   0x440ad1
  440ad2:	(bad)  
  440ad3:	stc    
  440ad4:	cmp    edi,0x0
  440ad7:	add    BYTE PTR gs:[ecx-0x55],cl
  440adb:	sub    edi,edi
  440add:	add    BYTE PTR [ecx+0x50ffabff],dl
  440ae3:	mov    bl,0x83
  440ae5:	cmp    edi,0x74
  440ae8:	int3   
  440ae9:	and    eax,0x6c
  440aec:	add    BYTE PTR [eax],al
  440aee:	mov    eax,DWORD PTR [eax]
  440af0:	push   ecx
  440af1:	add    BYTE PTR [esi+0xd],ch
  440af4:	int3   
  440af5:	(bad)  
  440af6:	(bad)  
  440af7:	std    
  440af8:	int3   
  440af9:	xchg   esp,eax
  440afa:	clc    
  440afb:	sti    
  440afc:	add    bh,bh
  440afe:	mov    edx,0xfd003c00
  440b03:	add    DWORD PTR fs:[ebx-0x59003e00],0x7c
  440b0b:	jnp    0x440b0d
  440b0d:	add    BYTE PTR [ecx+0x0],bl
  440b10:	push   0xffffffff
  440b12:	push   esi
  440b13:	xchg   esp,eax
  440b14:	(bad)  
  440b15:	(bad)  
  440b16:	dec    DWORD PTR [ebx-0x784a117d]
  440b1c:	add    DWORD PTR [eax],0x3d
  440b1f:	mov    DWORD PTR [ecx],eax
  440b21:	add    edx,0xffffffe2
  440b24:	add    BYTE PTR [ecx+0x34ff72ff],cl
  440b2a:	sub    ch,BYTE PTR [edx+0x0]
  440b2d:	jmp    edx
  440b2f:	mov    DWORD PTR [edx-0x1],edi
  440b32:	mov    ah,0x4f
  440b34:	int3   
  440b35:	add    BYTE PTR [eax],al
  440b37:	or     edi,edi
  440b39:	xchg   esp,eax
  440b3a:	lods   eax,DWORD PTR ds:[esi]
  440b3b:	fwait
  440b3c:	int3   
  440b3d:	add    BYTE PTR [ebx-0x1],cl
  440b40:	pop    es
  440b41:	add    BYTE PTR [edx-0x767cf5],ah
  440b47:	mov    cl,0x0
  440b49:	mov    ss:0xaf00ff0e,al
  440b4f:	(bad)  
  440b50:	in     eax,dx
  440b51:	add    BYTE PTR [edi-0xff003a],dh
  440b57:	mov    BYTE PTR [eax],al
  440b59:	add    cl,BYTE PTR [ecx+ebx*8+0x0]
  440b5d:	inc    DWORD PTR [ecx-0x1]
  440b60:	fwait
  440b61:	add    dl,dl
  440b63:	cs add ah,cl
  440b66:	add    BYTE PTR [ebx-0x54b47501],al
  440b6c:	(bad)  
  440b6d:	jmp    ebx
  440b6f:	int3   
  440b70:	js     0x440b72
  440b72:	dec    edi
  440b73:	add    al,0xff
  440b75:	cmp    edi,0x72
  440b78:	(bad)  
  440b79:	mov    esi,0x8983fc48
  440b7e:	mov    DWORD PTR [eax],eax
  440b80:	aas    
  440b81:	call   FWORD PTR [edx]
  440b83:	fdiv   st(7),st
  440b85:	add    BYTE PTR [eax],al
  440b87:	sar    bh,1
  440b89:	lock jmp 0x440bd0
  440b8c:	add    bh,bh
  440b8e:	inc    ebx
  440b8f:	(bad)  
  440b90:	in     al,dx
  440b91:	int3   
  440b92:	cmp    DWORD PTR [ecx-0x1],esp
  440b95:	cmp    edi,0x38
  440b98:	add    BYTE PTR [eax+ebp*8+0x1dff83ed],ch
  440b9f:	int3   
  440ba0:	out    0xff,eax
  440ba2:	pop    edi
  440ba3:	xchg   edi,eax
  440ba4:	dec    esp
  440ba6:	(bad)  
  440ba7:	jle    0x440b2c
  440ba9:	push   ebp
  440baa:	ffreep st(2)
  440bac:	inc    DWORD PTR [ebx+0x25ffef]
  440bb2:	call   0xff450ba4
  440bb7:	scas   al,BYTE PTR es:[edi]
  440bb8:	add    BYTE PTR [esp+edx*8-0x200000ee],cl
  440bbf:	sbb    ebp,0xffffffff
  440bc2:	and    al,0x93
  440bc4:	add    bh,bh
  440bc6:	(bad)  
  440bc7:	jge    0x440bc8
  440bc9:	repz or al,0xb5
  440bcc:	dec    DWORD PTR [ecx-0x7c4700bd]
  440bd2:	sahf   
  440bd3:	cmp    edi,edi
  440bd5:	add    ah,cl
  440bd7:	pop    eax
  440bd8:	push   DWORD PTR [esi]
  440bda:	pop    edi
  440bdb:	push   ss
  440bdc:	mov    DWORD PTR [ecx-0x58ff0d],ecx
  440be2:	add    al,0xc8
  440be4:	add    BYTE PTR [ebx-0xbd01],al
  440bea:	add    bh,bh
  440bec:	add    bh,bh
  440bee:	inc    DWORD PTR [ebx+0x186739]
  440bf4:	add    bh,bh
  440bf6:	inc    DWORD PTR [edi+ebp*4+0xff4790]
  440bfd:	mov    edi,edi
  440bff:	xor    al,0xb
  440c01:	push   ebx
  440c02:	pop    ecx
  440c03:	inc    DWORD PTR [eax]
  440c05:	add    bh,bh
  440c07:	mov    WORD PTR [edi-0x33ffde6f],ss
  440c0d:	inc    DWORD PTR [eax]
  440c0f:	(bad)  
  440c10:	mov    eax,0xff0045d3
  440c15:	int3   
  440c16:	call   DWORD PTR [edx-0xf57541]
  440c1c:	or     DWORD PTR [ecx-0x72d6d301],0x47
  440c23:	add    bh,bh
  440c25:	inc    DWORD PTR [eax]
  440c27:	mov    eax,0xffe4c34a
  440c2c:	inc    DWORD PTR [eax]
  440c2e:	add    BYTE PTR [ecx-0x76c0dd5c],cl
  440c34:	add    DWORD PTR [eax],0xffffffff
  440c37:	das    
  440c38:	sub    esi,DWORD PTR [ebx-0x33ff7c33]
  440c3e:	int3   
  440c3f:	adc    edi,ebp
  440c41:	imul   eax,DWORD PTR ds:[ebx-0x57cff01],0x2d
  440c49:	dec    dh
  440c4b:	add    BYTE PTR [eax],al
  440c4d:	inc    DWORD PTR [ebx-0x1f772f5]
  440c53:	add    bh,bh
  440c55:	add    bh,bh
  440c57:	sbb    eax,0x89f1cdc1
  440c5c:	int3   
  440c5d:	add    bh,bh
  440c5f:	cmp    ebp,DWORD PTR [edx]
  440c61:	(bad)  
  440c62:	icebp  
  440c63:	mov    edi,edi
  440c65:	add    bh,bh
  440c67:	hlt    
  440c68:	cmp    ebp,ebp
  440c6a:	pop    edi
  440c6b:	int3   
  440c6c:	add    BYTE PTR [eax],al
  440c6e:	dec    ebx
  440c70:	add    dh,BYTE PTR [eax]
  440c72:	mov    DWORD PTR fs:[eax],eax
  440c75:	add    BYTE PTR [eax],al
  440c77:	cli    
  440c78:	cld    
  440c79:	(bad)  
  440c7a:	sbb    DWORD PTR [ecx-0x5a00ff01],ecx
  440c80:	fst    QWORD PTR [esi]
  440c82:	and    BYTE PTR [ecx-0x70003301],cl
  440c88:	xchg   ecx,eax
  440c89:	xor    ch,BYTE PTR [esi]
  440c8b:	add    bh,bh
  440c8d:	inc    DWORD PTR [eax]
  440c8f:	push   ebp
  440c90:	imul   esp,DWORD PTR ds:0xccffff42,0x93b6c283
  440c9a:	jbe    0x440c9b
  440c9c:	inc    DWORD PTR [eax]
  440c9e:	sbb    DWORD PTR [ebx],0x6a
  440ca1:	pop    ds
  440ca2:	popf   
  440ca3:	mov    DWORD PTR [ebx-0x540f0034],eax
  440ca9:	cmp    DWORD PTR [ebx+eax*4],edi
  440cac:	(bad)  
  440cad:	(bad)  
  440cae:	jmp    FWORD PTR [ecx-0x26]
  440cb1:	loop   0x440c9b
  440cb3:	(bad)  
  440cb4:	inc    DWORD PTR [eax]
  440cb6:	add    BYTE PTR [eax],bh
  440cb8:	xor    ecx,ebp
  440cba:	daa    
  440cbb:	(bad)  
  440cbc:	(bad)  
  440cbd:	inc    DWORD PTR [eax]
  440cbf:	test   eax,0x2960ff
  440cc4:	add    bh,bh
  440cc6:	add    BYTE PTR [esi+ebp*4],ch
  440cc9:	aam    0x99
  440ccb:	inc    DWORD PTR [eax]
  440ccd:	add    BYTE PTR [eax],al
  440ccf:	stos   BYTE PTR es:[edi],al
  440cd0:	shl    BYTE PTR [eax+0x2a],1
  440cd3:	add    bh,bh
  440cd5:	add    bh,bh
  440cd7:	daa    
  440cd8:	pop    edi
  440cd9:	jmp    0x2000:0xccffcc08
  440ce0:	jp     0x440cf0
  440ce2:	add    BYTE PTR [eax],0xff
  440ce5:	or     esp,0x7e
  440ce8:	mov    ebp,0xffffae45
  440ced:	(bad)  
  440cee:	(bad)  
  440cef:	mov    edx,0x137a87
  440cf4:	(bad)  
  440cf5:	(bad)  
  440cf6:	inc    DWORD PTR [edi+eax*1-0x69]
  440cfa:	cmp    al,0x83
  440cfc:	add    BYTE PTR [ebx-0x3756ab00],al
  440d02:	mov    dh,0x83
  440d04:	inc    DWORD PTR [ebx+0x67828bff]
  440d0a:	inc    edi
  440d0b:	inc    DWORD PTR [eax]
  440d0d:	add    DWORD PTR [eax],0xfffffffb
  440d10:	push   edi
  440d11:	mov    edx,0x89008331
  440d16:	add    BYTE PTR [eax+0x19],dl
  440d19:	gs lahf 
  440d1b:	add    ah,cl
  440d1d:	inc    DWORD PTR [ebx+0x2b3cf4e7]
  440d23:	inc    DWORD PTR [ebx+0x7b7effcc]
  440d29:	cs push ebx
  440d2b:	cmp    edi,0x0
  440d2e:	mov    DWORD PTR [ebp-0x71],edx
  440d31:	or     cl,BYTE PTR [ebp+0xffcc00]
  440d37:	stc    
  440d38:	push   esi
  440d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  440d3a:	cmp    bh,bh
  440d3c:	inc    DWORD PTR [ebx-0x6ec69e00]
  440d42:	cmp    bh,0xcc
  440d45:	inc    DWORD PTR [eax]
  440d47:	mov    ebp,0x48d997
  440d4c:	(bad)  
  440d4d:	dec    esp
  440d4f:	cdq    
  440d50:	bound  ebp,QWORD PTR [edi+eiz*2-0x1]
  440d54:	inc    DWORD PTR [eax]
  440d56:	push   DWORD PTR [ecx]
  440d58:	and    dl,BYTE PTR [ebx]
  440d5a:	adc    eax,DWORD PTR [eax]
  440d5c:	add    bh,bh
  440d5e:	sbb    DWORD PTR [esi+0x34],0xffffff91
  440d62:	cmc    
  440d63:	(bad)  
  440d64:	(bad)  
  440d65:	(bad)  
  440d66:	push   eax
  440d68:	add    al,0x24
  440d6a:	sti    
  440d6b:	add    BYTE PTR [eax],al
  440d6d:	(bad)  
  440d6e:	call   DWORD PTR [ebp-0x1b]
  440d71:	sbb    BYTE PTR [ecx],ah
  440d73:	add    bh,bh
  440d75:	inc    DWORD PTR [ebx-0x7355b457]
  440d7b:	(bad)  
  440d7c:	inc    DWORD PTR [ebx+0x10787dff]
  440d82:	icebp  
  440d83:	cmp    edi,0xffffffff
  440d86:	inc    DWORD PTR [ebp-0xac60df]
  440d8c:	inc    DWORD PTR [eax]
  440d8e:	add    ch,ch
  440d90:	push   edi
  440d91:	jmp    0x440d8b
  440d93:	dec    esp
  440d95:	mov    edi,edi
  440d97:	xchg   BYTE PTR [ebx+0x14],cl
  440d9a:	jmp    0xff450d22
  440d9f:	in     al,dx
  440da0:	mov    edi,0x839da8
  440da5:	(bad)  
  440da6:	call   DWORD PTR [edi]
  440da8:	iret   
  440da9:	out    dx,eax
  440daa:	mov    DWORD PTR [ebx+0x19ffffff],eax
  440db0:	fucomi st,st(2)
  440db2:	add    BYTE PTR [eax],al
  440db4:	mov    edi,edi
  440db6:	add    BYTE PTR [ebp-0x1c],dh
  440db9:	jle    0x440d79
  440dbb:	(bad)  
  440dbc:	dec    DWORD PTR [ecx+0x2366bcc]
  440dc2:	pushf  
  440dc3:	add    BYTE PTR [eax],al
  440dc5:	int3   
  440dc6:	or     ecx,0x72
  440dc9:	mov    WORD PTR [ebp+0x0],fs
  440dcc:	inc    DWORD PTR [eax]
  440dce:	int3   
  440dcf:	jnp    0x440d95
  440dd1:	out    0x74,eax
  440dd3:	inc    DWORD PTR [ebx-0x4b40001]
  440dd9:	inc    ebp
  440dda:	sub    eax,0x89000000
  440ddf:	aaa    
  440de0:	int3   
  440de1:	and    ch,BYTE PTR [edi+0x0]
  440de4:	add    bh,bh
  440de6:	int3   
  440de7:	push   edx
  440de8:	add    bl,0xf9
  440deb:	(bad)  
  440dec:	inc    DWORD PTR [ebx+0x232d2ccc]
  440df2:	dec    esi
  440df3:	add    BYTE PTR [eax],al
  440df5:	dec    esp
  440df7:	xor    eax,0xcc335c30
  440dfc:	add    bh,bh
  440dfe:	mov    DWORD PTR [ebp+0x60],ebx
  440e01:	inc    ebp
  440e02:	pop    ds
  440e03:	add    BYTE PTR [eax],al
  440e05:	inc    DWORD PTR [eax]
  440e07:	pushf  
  440e08:	mov    edi,0xffcc0948
  440e0d:	add    bh,bh
  440e0f:	or     BYTE PTR [eiz*2+0xffffe1],ah
  440e16:	(bad)  
  440e17:	jmp    0x440e0a
  440e19:	xlat   BYTE PTR ds:[ebx]
  440e1a:	ins    BYTE PTR es:[edi],dx
  440e1b:	add    DWORD PTR [eax],0x0
  440e1e:	(bad)  
  440e1f:	jp     0x440e88
  440e21:	cli    
  440e22:	xor    bh,bh
  440e24:	dec    esp
  440e26:	int3   
  440e27:	push   0x6a
  440e29:	add    eax,0x89ffff7d
  440e2e:	push   DWORD PTR [edx-0x484047]
  440e34:	(bad)  
  440e35:	dec    esp
  440e37:	adc    DWORD PTR [ebp-0xff5c75],edx
  440e3d:	add    DWORD PTR [eax],0x34
  440e40:	cmp    dl,al
  440e42:	pop    ebx
  440e43:	inc    DWORD PTR [ebx+0x560b89ff]
  440e49:	adc    cl,BYTE PTR [edi+0x0]
  440e4c:	(bad)  
  440e4d:	(bad)  
  440e4e:	jmp    DWORD PTR [esi]
  440e50:	xchg   DWORD PTR [ecx],ebp
  440e52:	inc    ebp
  440e53:	or     DWORD PTR [ecx+0x45fe8300],0x7c
  440e5a:	call   0x9b13:0x8900ffff
  440e61:	icebp  
  440e62:	enter  0xff00,0x89
  440e66:	(bad)  
  440e67:	fldenv [edx]
  440e69:	cld    
  440e6a:	xor    bh,bh
  440e6c:	mov    edi,edi
  440e6e:	mov    DWORD PTR [ebx],edx
  440e70:	rol    BYTE PTR [ebx],cl
  440e72:	scas   al,BYTE PTR es:[edi]
  440e73:	dec    esp
  440e75:	inc    DWORD PTR [eax]
  440e77:	imul   ebp,DWORD PTR [eax-0xffd468],0xffffffff
  440e7e:	jmp    DWORD PTR [edx+0x91de29]
  440e84:	dec    esp
  440e86:	add    BYTE PTR [edx-0x77],ah
  440e89:	jbe    0x440e74
  440e8b:	inc    DWORD PTR [ebx+0x77caff00]
  440e91:	gs sbb bh,bh
  440e94:	add    BYTE PTR [ebx+0x4525d500],al
  440e9a:	scas   al,BYTE PTR es:[edi]
  440e9b:	int3   
  440e9c:	add    DWORD PTR [ebx-0x3b8c1300],0x72
  440ea3:	cmp    edi,0xffffffff
  440ea6:	and    edx,0x3b
  440ea9:	mov    ebx,DWORD PTR [edi]
  440eab:	add    bh,bh
  440ead:	inc    DWORD PTR [eax]
  440eaf:	test   DWORD PTR [esi-0x53],0x83ffff42
  440eb6:	int3   
  440eb7:	aad    0x23
  440eb9:	cmp    DWORD PTR [ebx],ebx
  440ebb:	(bad)  
  440ebc:	(bad)  
  440ebd:	inc    DWORD PTR [eax]
  440ebf:	mov    edx,0x247a4
  440ec4:	(bad)  
  440ec5:	(bad)  
  440ec6:	call   DWORD PTR [esi+ebp*2]
  440ec9:	shl    DWORD PTR [ebp-0x34],0x0
  440ecd:	(bad)  
  440ece:	(bad)  
  440ecf:	clc    
  440ed0:	jmp    0xff:0x83ffc681
  440ed7:	call   0xffb8bffd
  440edc:	add    bh,bh
  440ede:	dec    edi
  440ee0:	xor    ah,BYTE PTR ds:0xff00fff7
  440ee6:	add    BYTE PTR [eax-0x7cfa6d8f],al
  440eec:	dec    DWORD PTR [ecx-0x36467d]
  440ef2:	xchg   edi,eax
  440ef3:	int3   
  440ef4:	or     esp,0x0
  440ef7:	icebp  
  440ef8:	sbb    al,0xf3
  440efa:	out    0x0,al
  440efc:	mov    DWORD PTR [ebx+0xb63d9ff],eax
  440f02:	mov    edi,0x83ffccff
  440f07:	jne    0x440ed6
  440f09:	sar    DWORD PTR [esi-0x7d],0x0
  440f0d:	dec    esp
  440f0f:	sbb    eax,0xab7201
  440f14:	add    DWORD PTR [eax],0x0
  440f17:	lea    edx,fs:[eax-0x33ff007d]
  440f1e:	add    ch,dl
  440f20:	stos   DWORD PTR es:[edi],eax
  440f21:	ds cli 
  440f23:	add    DWORD PTR [ebx-0x399a0001],0xffffffb2
  440f2a:	je     0x440eb5
  440f2c:	(bad)  
  440f2d:	dec    esp
  440f2f:	and    BYTE PTR [ebx+0x2e],ah
  440f32:	scas   eax,DWORD PTR es:[edi]
  440f33:	dec    esp
  440f35:	add    bh,bh
  440f37:	mov    eax,ds:0x831c2106
  440f3c:	(bad)  
  440f3d:	inc    DWORD PTR [eax]
  440f3f:	ror    bl,cl
  440f41:	or     al,0xed
  440f43:	add    BYTE PTR [eax],al
  440f45:	add    bh,bh
  440f47:	fwait
  440f48:	mov    edx,0xff3b67
  440f4d:	add    bh,bh
  440f4f:	jb     0x440f5a
  440f51:	dec    ebx
  440f52:	push   esi
  440f53:	(bad)  
  440f54:	dec    DWORD PTR [ecx-0xd0ee001]
  440f5a:	js     0x440f28
  440f5c:	cmp    edi,0xffffffcc
  440f5f:	aas    
  440f60:	aas    
  440f61:	push   esi
  440f62:	adc    edi,edi
  440f64:	add    BYTE PTR [ecx-0x460f5900],cl
  440f6a:	loope  0x440f6b
  440f6c:	add    bh,bh
  440f6e:	add    BYTE PTR [edx+0x5b],cl
  440f71:	xor    al,0x42
  440f73:	inc    DWORD PTR [eax]
  440f75:	mov    edi,edi
  440f77:	das    
  440f78:	xchg   BYTE PTR [esi+0xff83a2],ah
  440f7e:	inc    DWORD PTR [eax-0x45]
  440f81:	push   esi
  440f82:	cmc    
  440f83:	inc    DWORD PTR [eax]
  440f85:	add    BYTE PTR [eax],al
  440f87:	js     0x440ffc
  440f89:	add    DWORD PTR [edx],ecx
  440f8b:	add    BYTE PTR [eax],al
  440f8d:	dec    DWORD PTR [ecx+0x531b11e8]
  440f93:	or     DWORD PTR [ecx+0x7fcc83ff],0xfffffff9
  440f9a:	stos   BYTE PTR es:[edi],al
  440f9b:	(bad)  
  440f9c:	(bad)  
  440f9d:	inc    DWORD PTR [eax]
  440f9f:	mov    bh,0x49
  440fa1:	cmp    DWORD PTR [edx-0x1],edx
  440fa4:	or     DWORD PTR [ecx-0x42eb2a01],0xffffff82
  440fab:	add    DWORD PTR [ebx-0x47ebff7d],0xffffffa5
  440fb2:	dec    ebp
  440fb3:	cmp    edi,0x0
  440fb6:	mov    ecx,ecx
  440fb8:	pop    eax
  440fb9:	mov    ebx,ds
  440fbb:	(bad)  
  440fbc:	(bad)  
  440fbd:	(bad)  
  440fbe:	call   DWORD PTR [edi+0x7649dd]
  440fc4:	add    bh,bh
  440fc6:	int3   
  440fc7:	push   0xccde7cc2
  440fcc:	or     DWORD PTR [ecx+0x10706dff],0x7c
  440fd3:	(bad)  
  440fd4:	(bad)  
  440fd5:	inc    DWORD PTR [ebx+0x5e7d63f8]
  440fdb:	int3   
  440fdc:	inc    DWORD PTR [eax]
  440fde:	inc    DWORD PTR [ebx+0x32]
  440fe1:	les    edx,FWORD PTR [esi-0xff0100]
  440fe7:	or     edi,esp
  440fe9:	jmp    0xff4410ce
  440fee:	push   DWORD PTR [ecx-0x74f86a]
  440ff4:	mov    DWORD PTR [eax],eax
  440ff6:	xor    esp,0xffffffd0
  440ff9:	mov    ebx,0xcc0083
  440ffe:	jmp    FWORD PTR [edx-0x67]
  441001:	jg     0x441068
  441003:	(bad)  
  441004:	(bad)  
  441005:	inc    DWORD PTR [ebx-0x287a045a]
  44100b:	dec    esp
  44100d:	dec    esp
  44100f:	sub    al,0x9e
  441011:	fstp   QWORD PTR [eax]
  441013:	add    BYTE PTR [eax],al
  441015:	add    BYTE PTR [eax],al
  441017:	xlat   BYTE PTR ds:[ebx]
  441018:	cmp    BYTE PTR [eax],bl
  44101a:	ins    BYTE PTR es:[edi],dx
  44101b:	mov    DWORD PTR [ecx+0x3c0f8900],ecx
  441021:	adc    BYTE PTR [edi-0x1],dl
  441024:	add    DWORD PTR [eax],0xffffffff
  441027:	pop    eax
  441028:	mov    al,0x2e
  44102a:	cli    
  44102b:	add    BYTE PTR [eax],al
  44102d:	(bad)  
  44102e:	dec    DWORD PTR [edx]
  441030:	fild   WORD PTR [edi]
  441032:	fdivr  st,st(7)
  441034:	(bad)  
  441035:	inc    DWORD PTR [eax]
  441037:	jnp    0x44103f
  441039:	and    al,0xab
  44103b:	(bad)  
  44103c:	(bad)  
  44103d:	inc    DWORD PTR [eax]
  44103f:	mov    dh,0x97
  441041:	pop    eax
  441042:	mov    DWORD PTR [eax],0x1fffffff
  441048:	sti    
  441049:	push   ss
  44104a:	mov    WORD PTR [ecx+0x1200ccff],cs
  441050:	mov    esp,0xcc310c
  441055:	(bad)  
  441056:	call   FWORD PTR [edi-0x95334f]
  44105c:	add    bh,bh
  44105e:	add    BYTE PTR [edx+0x1c],dh
  441061:	repnz lock int3 
  441064:	int3   
  441065:	int3   
  441066:	int3   
  441067:	imul   esi,DWORD PTR [edx],0xfffffff5
  44106a:	repnz inc DWORD PTR [eax]
  44106d:	(bad)  
  44106e:	dec    DWORD PTR [ecx]
  441070:	sahf   
  441071:	imul   esp,DWORD PTR [edi-0x10000],0x6a
  441078:	adc    ecx,DWORD PTR [edi-0x7c000094]
  44107e:	push   DWORD PTR [esi+edi*2+0x42]
  441082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441083:	(bad)  
  441084:	inc    DWORD PTR [ebx+0x4b46cf89]
  44108a:	cwde   
  44108b:	add    bh,bh
  44108d:	dec    DWORD PTR [ecx-0x1858e8e4]
  441093:	inc    DWORD PTR [ebx+0x7af2ffff]
  441099:	xchg   esi,eax
  44109a:	mov    esp,0xff838900
  44109f:	inc    edi
  4410a0:	pop    esi
  4410a1:	jg     0x441110
  4410a3:	inc    DWORD PTR [ebx+0x6e3aff89]
  4410a9:	lds    ebp,FWORD PTR [ecx]
  4410ab:	cmp    edi,0xffffffff
  4410ae:	mov    ebp,esp
  4410b0:	sub    ebx,DWORD PTR [ebx]
  4410b2:	jne    0x441037
  4410b4:	add    ah,cl
  4410b6:	xor    ecx,0x4e
  4410b9:	xchg   edx,eax
  4410ba:	adc    eax,DWORD PTR [ebx+0x60ffff89]
  4410c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4410c1:	imul   ebx,eax,0xffffffff
  4410c4:	inc    DWORD PTR [eax]
  4410c6:	jmp    DWORD PTR [edx-0x11]
  4410c9:	sbb    al,BYTE PTR [esi-0x1]
  4410cc:	add    bh,bh
  4410ce:	add    BYTE PTR [eax-0xf08bc1],bl
  4410d4:	add    BYTE PTR [eax],al
  4410d6:	jmp    FWORD PTR [eax+0x30]
  4410d9:	int3   
  4410da:	dec    ebp
  4410db:	mov    edi,edi
  4410dd:	add    BYTE PTR [ecx+0xd98485c],cl
  4410e3:	inc    DWORD PTR [eax]
  4410e5:	inc    DWORD PTR [eax]
  4410e7:	sbb    al,0x1c
  4410e9:	jg     0x441102
  4410eb:	add    ah,cl
  4410ed:	add    bh,bh
  4410ef:	mov    ch,0x72
  4410f1:	not    BYTE PTR [esp+ecx*8-0x42007c7d]
  4410f8:	stc    
  4410f9:	mov    cl,0xb3
  4410fb:	mov    edi,edi
  4410fd:	dec    DWORD PTR [ecx-0x7d25dbf8]
  441103:	add    BYTE PTR [ecx-0x3dbeff7d],cl
  441109:	mov    edi,edx
  44110b:	inc    DWORD PTR [eax]
  44110d:	add    bh,bh
  44110f:	pop    es
  441110:	jle    0x4410b4
  441112:	popa   
  441113:	add    bh,bh
  441115:	add    BYTE PTR [eax],al
  441117:	jb     0x44115e
  441119:	test   al,0x7
  44111b:	add    BYTE PTR [ecx-0x1d0a7d00],cl
  441121:	mov    ebx,0xffff893d
  441126:	add    BYTE PTR [esi-0xd],ah
  441129:	adc    edi,eax
  44112b:	add    DWORD PTR [eax],0x0
  44112e:	push   DWORD PTR [esi-0xc]
  441131:	jmp    0xc7947b
  441136:	int3   
  441137:	call   0xcc83:0xff51424d
  44113e:	add    BYTE PTR [eax+0x69],ah
  441141:	outs   dx,BYTE PTR ds:[esi]
  441142:	jns    0x441144
  441144:	add    bh,bh
  441146:	int3   
  441147:	int    0xe5
  441149:	sub    dh,BYTE PTR [ebp-0xff0100]
  44114f:	inc    esi
  441150:	stos   BYTE PTR es:[edi],al
  441151:	lods   al,BYTE PTR ds:[esi]
  441152:	out    dx,al
  441153:	inc    DWORD PTR [ebx-0x621e3377]
  441159:	gs js  0x44115c
  44115c:	cmp    edi,0xffffffff
  44115f:	mov    al,0xe8
  441161:	dec    eax
  441162:	jp     0x441163
  441164:	(bad)  
  441165:	(bad)  
  441166:	jmp    DWORD PTR [edi+esi*1-0x76336094]
  44116d:	inc    DWORD PTR [ebx-0x3775b5dc]
  441173:	inc    DWORD PTR [eax]
  441175:	add    bh,bh
  441177:	pop    edx
  441178:	sbb    DWORD PTR [edx],ebp
  44117a:	jle    0x44117b
  44117c:	(bad)  
  44117d:	dec    esp
  44117f:	hlt    
  441180:	in     eax,dx
  441181:	dec    ebp
  441182:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  441183:	inc    DWORD PTR [ebx-0x6cda0001]
  441189:	mov    DWORD PTR [ebx+0xffffcc],esi
  44118f:	scas   eax,DWORD PTR es:[edi]
  441190:	int    0x15
  441192:	leave  
  441193:	(bad)  
  441194:	inc    DWORD PTR [eax]
  441196:	dec    DWORD PTR [esi]
  441198:	nop
  441199:	mov    eax,DWORD PTR ss:[eax]
  44119c:	dec    DWORD PTR [ecx+0x5289d6cc]
  4411a2:	mov    esp,cs
  4411a4:	add    DWORD PTR [eax],0xffffffff
  4411a7:	iret   
  4411a8:	ret    
  4411a9:	push   edi
  4411aa:	loop   0x4411ac
  4411ac:	add    bh,bh
  4411ae:	jmp    edx
  4411b0:	sub    eax,0x83ff3b07
  4411b5:	add    BYTE PTR [eax],al
  4411b7:	ret    0x313d
  4411ba:	dec    eax
  4411bb:	mov    esp,ecx
  4411bd:	add    bh,bh
  4411bf:	push   esi
  4411c0:	mov    BYTE PTR [esi+0x66],cl
  4411c3:	add    bh,bh
  4411c5:	int3   
  4411c6:	(bad)  
  4411c7:	jmp    0x83ff:0xff96e14a
  4411ce:	call   FWORD PTR [eax]
  4411d0:	adc    ecx,DWORD PTR [edi+0xe]
  4411d3:	(bad)  
  4411d4:	inc    DWORD PTR [eax]
  4411d6:	adc    DWORD PTR [edi+0x1c3062],0x0
  4411dd:	dec    esp
  4411df:	pop    edi
  4411e0:	mov    al,ds:0xccffc0a8
  4411e5:	add    BYTE PTR [eax],al
  4411e7:	fisub  DWORD PTR [ebx]
  4411e9:	and    eax,0xfff1
  4411ee:	dec    DWORD PTR [edx-0x290919]
  4411f4:	mov    DWORD PTR [eax],eax
  4411f6:	int3   
  4411f7:	call   0x6162ff
  4411fc:	add    BYTE PTR [eax],al
  4411fe:	cmp    DWORD PTR [esi-0x76ec7b7d],0xffffffff
  441205:	inc    DWORD PTR [eax]
  441207:	jne    0x441256
  441209:	bswap  edx
  44120b:	add    bh,bh
  44120d:	add    BYTE PTR [eax],al
  44120f:	cmp    eax,0x9505ed
  441214:	(bad)  
  441215:	(bad)  
  441216:	jmp    FWORD PTR [ebp+0x954c4]
  44121c:	(bad)  
  44121d:	inc    DWORD PTR [ebx+0x6b0adece]
  441223:	add    BYTE PTR [ecx+0x7653ffff],cl
  441229:	repz xchg edi,eax
  44122b:	add    BYTE PTR [eax],al
  44122d:	add    ah,cl
  44122f:	shr    DWORD PTR [edi],1
  441231:	lahf   
  441232:	mov    BYTE PTR [ebx-0x71000000],al
  441238:	jmp    0x4411e9
  44123a:	jecxz  0x44123c
  44123c:	inc    DWORD PTR [eax]
  44123e:	inc    DWORD PTR [edx+0x7f]
  441241:	mov    edx,ecx
  441243:	(bad)  
  441244:	inc    DWORD PTR [eax]
  441246:	(bad)  
  441247:	jge    0x4412b7
  441249:	cmp    al,0xe7
  44124b:	add    BYTE PTR [ecx+0x583dff89],cl
  441251:	inc    ecx
  441252:	mov    ebx,0xff0089ff
  441257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441258:	and    DWORD PTR [edx-0x4e],edi
  44125b:	inc    DWORD PTR [eax]
  44125d:	add    DWORD PTR [eax],0xfffffff3
  441260:	xor    ebp,DWORD PTR [ebx]
  441262:	fdivr  st,st(7)
  441264:	(bad)  
  441265:	dec    esp
  441267:	lsl    ecx,WORD PTR [ebp-0x7c33c1]
  44126e:	dec    edx
  441270:	nop
  441271:	or     esi,ebx
  441273:	add    BYTE PTR [ebx+0x2b9c00ff],al
  441279:	mov    bh,0x12
  44127b:	mov    DWORD PTR [eax],eax
  44127d:	add    DWORD PTR [ebx+0x68702b69],0xffffffff
  441284:	add    BYTE PTR [eax],al
  441286:	inc    ebp
  441288:	lods   al,BYTE PTR ds:[esi]
  441289:	aas    
  44128a:	xlat   BYTE PTR ds:[ebx]
  44128b:	dec    esp
  44128d:	mov    DWORD PTR [ecx-0x65933565],ecx
  441293:	(bad)  
  441294:	(bad)  
  441295:	(bad)  
  441296:	dec    ecx
  441298:	jecxz  0x44130b
  44129a:	mov    esi,0x83ff0000
  44129f:	jbe    0x4412eb
  4412a1:	(bad)  
  4412a3:	add    BYTE PTR [eax],al
  4412a5:	int3   
  4412a6:	add    BYTE PTR [ecx+0x43],ah
  4412a9:	push   ecx
  4412aa:	(bad)  
  4412ab:	add    DWORD PTR [ebx-0x16580001],0x67
  4412b2:	call   0xffc712b7
  4412b7:	bound  esp,QWORD PTR [edi-0x64]
  4412ba:	imul   edi,edi,0xffffffff
  4412bd:	(bad)  
  4412be:	inc    DWORD PTR [ecx-0x15]
  4412c1:	mov    ah,0xaf
  4412c3:	inc    DWORD PTR [ebx+0x8a20000]
  4412c9:	push   edx
  4412ca:	push   edx
  4412cb:	add    DWORD PTR [eax],0x0
  4412ce:	add    BYTE PTR [edx-0x4a],al
  4412d1:	lds    eax,FWORD PTR [eax-0x100]
  4412d7:	fld    TBYTE PTR [ebp-0x27]
  4412da:	sub    al,0xff
  4412dc:	(bad)  
  4412dd:	inc    DWORD PTR [eax]
  4412df:	add    eax,0xffa00702
  4412e4:	(bad)  
  4412e5:	(bad)  
  4412e6:	push   DWORD PTR [esi-0x33]
  4412e9:	xchg   ecx,eax
  4412ea:	sbb    bh,bh
  4412ec:	mov    DWORD PTR [eax],eax
  4412ee:	cmp    esi,0xffffffab
  4412f1:	pop    es
  4412f2:	sar    bh,cl
  4412f4:	inc    DWORD PTR [eax]
  4412f6:	dec    DWORD PTR [edx+0xe522a6]
  4412fc:	add    bh,bh
  4412fe:	add    BYTE PTR [esi+0xf],bl
  441301:	ins    DWORD PTR es:[edi],dx
  441302:	(bad)  
  441304:	int3   
  441305:	mov    DWORD PTR [ecx+0x10f9ab53],ecx
  44130b:	add    BYTE PTR [eax],al
  44130d:	(bad)  
  44130e:	call   DWORD PTR [esi+0x91e539]
  441314:	(bad)  
  441315:	(bad)  
  441316:	jmp    edi
  441318:	sbb    esp,esi
  44131a:	scas   eax,DWORD PTR es:[edi]
  44131b:	add    bh,bh
  44131d:	int3   
  44131e:	(bad)  
  44131f:	fcomp  DWORD PTR [esi]
  441321:	mov    ebx,?
  441323:	add    bh,bh
  441325:	mov    edi,edi
  441327:	pushf  
  441328:	ins    DWORD PTR es:[edi],dx
  441329:	data16 mov es,WORD PTR [ebx-0x24330100]
  441330:	xor    al,0x35
  441332:	mov    eax,0xffff00ff
  441337:	mov    bl,0x87
  441339:	scas   al,BYTE PTR es:[edi]
  44133a:	or     bh,bh
  44133c:	mov    edi,edi
  44133e:	sbb    DWORD PTR [edi-0x7bb3ba],0xffffffff
  441345:	(bad)  
  441346:	call   FWORD PTR [edx-0xddeade]
  44134c:	inc    DWORD PTR [ebx-0x5a14d601]
  441352:	in     eax,0xff
  441354:	add    DWORD PTR [ebx-0x41ee637d],0xffffffb4
  44135b:	inc    DWORD PTR [eax]
  44135d:	add    bh,bh
  44135f:	pop    ecx
  441360:	nop
  441361:	in     al,0x57
  441363:	add    bh,bh
  441365:	add    bh,bh
  441367:	mov    eax,0xe6fb7f
  44136c:	mov    edi,edi
  44136e:	add    ch,bh
  441370:	or     DWORD PTR [esi],ebp
  441372:	pop    eax
  441373:	(bad)  
  441374:	(bad)  
  441375:	inc    DWORD PTR [eax]
  441377:	jecxz  0x441398
  441379:	ja     0x441336
  44137b:	add    bh,bh
  44137d:	inc    DWORD PTR [ebx+0x5dfe6cfa]
  441383:	add    bh,bh
  441385:	add    bh,bh
  441387:	sub    eax,0xcdd4cc
  44138c:	int3   
  44138d:	mov    DWORD PTR [eax],eax
  44138f:	pusha  
  441390:	sub    esi,DWORD PTR [edx]
  441392:	iret   
  441393:	add    bh,bh
  441395:	(bad)  
  441396:	dec    DWORD PTR [edi]
  441398:	jo     0x44135e
  44139a:	adc    eax,0xffffffff
  44139f:	(bad)  
  4413a0:	ret    
  4413a1:	scas   al,BYTE PTR es:[edi]
  4413a2:	mov    bl,0xff
  4413a4:	dec    DWORD PTR [ecx-0x4e2d3000]
  4413aa:	inc    esi
  4413ab:	(bad)  
  4413ac:	inc    DWORD PTR [eax]
  4413ae:	mov    DWORD PTR [esi-0x122a8c],esi
  4413b4:	cmp    edi,0xffffff83
  4413b7:	les    ecx,FWORD PTR [edx-0xff7adf]
  4413bd:	int3   
  4413be:	add    DWORD PTR [edi+0x6a],0xffffff98
  4413c2:	mov    al,ds:0xff008300
  4413c7:	popf   
  4413c8:	out    dx,eax
  4413c9:	mov    edi,0xffccff96
  4413ce:	and    ebx,0xffffffd1
  4413d1:	pop    esp
  4413d2:	push   ds
  4413d3:	add    DWORD PTR [ebx-0x62113334],0xffffffb6
  4413da:	mov    dh,0x83
  4413dc:	inc    DWORD PTR [ebx-0x64324900]
  4413e2:	ins    DWORD PTR es:[edi],dx
  4413e3:	inc    DWORD PTR [eax]
  4413e5:	(bad)  
  4413e6:	jmp    FWORD PTR [ecx-0x76debea0]
  4413ec:	add    bh,bh
  4413ee:	mov    DWORD PTR [edi],esi
  4413f0:	cli    
  4413f1:	scas   al,BYTE PTR es:[edi]
  4413f2:	dec    esi
  4413f3:	inc    DWORD PTR [eax]
  4413f5:	add    DWORD PTR [eax],0xffffffa5
  4413f8:	adc    cl,BYTE PTR [eax+eiz*8+0x89ff89]
  4413ff:	(bad)  
  441400:	pop    edx
  441401:	and    al,0x27
  441403:	inc    DWORD PTR [eax]
  441405:	add    BYTE PTR [eax],al
  441407:	mov    ebx,0x83f109ab
  44140c:	mov    edi,edi
  44140e:	jmp    DWORD PTR [edx]
  441410:	jmp    0xcdaa37
  441415:	add    bh,bh
  441417:	scas   eax,DWORD PTR es:[edi]
  441418:	ror    BYTE PTR [eax],cl
  44141a:	xchg   ebp,eax
  44141b:	add    BYTE PTR [ecx-0x4e5d0100],cl
  441421:	idiv   DWORD PTR [ebx]
  441423:	add    BYTE PTR [eax],al
  441425:	add    ah,cl
  441427:	mov    esi,ds
  441429:	mov    edi,0x89ffff90
  44142e:	xor    ecx,0x31
  441431:	add    ecx,DWORD PTR [ebx-0x7d]
  441434:	(bad)  
  441435:	inc    DWORD PTR [eax]
  441437:	jmp    FWORD PTR [eax-0x7c004365]
  44143d:	add    bh,bh
  44143f:	mov    ecx,0x3a2c0c
  441444:	add    BYTE PTR [eax],al
  441446:	call   ecx
  441448:	jl     0x4413da
  44144a:	and    eax,DWORD PTR [eax]
  44144c:	inc    DWORD PTR [ebx-0x377f700]
  441452:	pop    ebx
  441453:	cmp    edi,0xffffff89
  441456:	jmp    DWORD PTR [ecx+0x1]
  441459:	jg     0x4413fc
  44145b:	(bad)  
  44145c:	inc    DWORD PTR [ebx+0x41714183]
  441462:	add    DWORD PTR [ebx+0x3ff8900],0x18
  441469:	push   es
  44146a:	pop    ebx
  44146b:	cmp    edi,0x0
  44146e:	call   FWORD PTR [eax+0xa5e24f]
  441474:	dec    esp
  441476:	add    BYTE PTR [edx+0x5f],ah
  441479:	fwait
  44147a:	adc    eax,DWORD PTR [eax]
  44147c:	inc    DWORD PTR [eax]
  44147e:	jmp    FWORD PTR [edx-0x23]
  441481:	inc    esp
  441482:	retf   
  441483:	(bad)  
  441484:	inc    DWORD PTR [eax]
  441486:	add    BYTE PTR [ebx+0xbaeb9b],ch
  44148c:	(bad)  
  44148d:	inc    DWORD PTR [eax]
  44148f:	mov    eax,ds:0xff743a65
  441494:	int3   
  441495:	inc    DWORD PTR [eax]
  441497:	cmp    BYTE PTR [ebp+0x36],dl
  44149a:	lock (bad) 
  44149c:	inc    DWORD PTR [ebx-0x4eadb600]
  4414a2:	or     eax,DWORD PTR [eax]
  4414a4:	or     esp,0x0
  4414a7:	icebp  
  4414a8:	jne    0x441504
  4414aa:	mov    dl,0xff
  4414ac:	(bad)  
  4414ad:	inc    DWORD PTR [eax]
  4414af:	out    0xd4,eax
  4414b1:	sbb    BYTE PTR [edi-0x7c00767d],0xb8
  4414b8:	dec    esp
  4414b9:	jp     0x4414aa
  4414bb:	cmp    edi,0x0
  4414be:	int3   
  4414bf:	js     0x441525
  4414c1:	xor    edx,DWORD PTR [esi-0x1]
  4414c4:	inc    DWORD PTR [eax]
  4414c6:	inc    esp
  4414c8:	enter  0x7302,0xff
  4414cc:	inc    DWORD PTR [eax]
  4414ce:	jmp    DWORD PTR [esi-0x53]
  4414d1:	or     ch,ch
  4414d3:	add    BYTE PTR [eax],al
  4414d5:	inc    DWORD PTR [ebx-0x41875a5c]
  4414db:	add    BYTE PTR [eax],al
  4414dd:	dec    DWORD PTR [ecx+0x7b4c2f85]
  4414e3:	add    BYTE PTR [eax],al
  4414e5:	add    BYTE PTR [eax],al
  4414e7:	cmp    edi,DWORD PTR [edi+0x13]
  4414ea:	dec    edx
  4414eb:	add    BYTE PTR [eax],al
  4414ed:	(bad)  
  4414ee:	dec    DWORD PTR [ebx-0x76d87aa6]
  4414f4:	(bad)  
  4414f5:	inc    DWORD PTR [ebx+0x4fa72491]
  4414fb:	(bad)  
  4414fc:	(bad)  
  4414fd:	inc    DWORD PTR [ebx+0x546d3c3c]
  441503:	(bad)  
  441504:	inc    DWORD PTR [ebx+0x5a63f283]
  44150a:	sub    eax,0x838389ff
  44150f:	arpl   WORD PTR [ecx-0x7c00e115],sp
  441515:	mov    edi,edi
  441517:	pop    ebx
  441518:	pusha  
  441519:	xor    eax,DWORD PTR ss:[ebx+0x6583ffff]
  441520:	out    dx,eax
  441521:	jmp    0x38ff:0xcc00ff57
  441528:	mov    esi,esi
  44152a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44152b:	add    BYTE PTR [ebx-0x20e47d00],al
  441531:	push   ss
  441532:	or     esp,0x7008900
  441538:	repnz inc edi
  44153a:	test   DWORD PTR [ebx+0x2d0000ff],0x83254e22
  441544:	add    BYTE PTR [eax],al
  441546:	push   DWORD PTR [edx-0x2edb6c]
  44154c:	int3   
  44154d:	inc    DWORD PTR [eax]
  44154f:	enter  0x4fe1,0x55
  441553:	dec    DWORD PTR [ecx+0x7cbc89ff]
  441559:	test   eax,0xffffccf1
  44155e:	(bad)  
  44155f:	in     al,dx
  441560:	stos   BYTE PTR es:[edi],al
  441561:	clc    
  441562:	sbb    BYTE PTR [eax],al
  441564:	mov    edi,edi
  441566:	sbb    DWORD PTR [esi-0x7c2e7804],0xffffffff
  44156d:	dec    esp
  44156f:	xor    ebx,DWORD PTR [edx-0x2d]
  441572:	jno    0x4414f7
  441574:	inc    DWORD PTR [eax]
  441576:	jmp    DWORD PTR [ebp-0x5809b]
  44157c:	add    ah,cl
  44157e:	push   DWORD PTR [ecx]
  441580:	or     al,0x99
  441582:	pop    es
  441583:	add    bh,bh
  441585:	(bad)  
  441586:	call   FWORD PTR [ecx]
  441588:	adc    eax,0x895957
  44158d:	int3   
  44158e:	dec    DWORD PTR [edx-0x63]
  441591:	push   edx
  441592:	out    0xff,al
  441594:	cmp    edi,0xffffffff
  441597:	mov    al,al
  441599:	fiadd  DWORD PTR [esi]
  44159b:	(bad)  
  44159c:	inc    DWORD PTR [eax]
  44159e:	mov    DWORD PTR [eax-0x4f],ecx
  4415a1:	or     eax,0xcced
  4415a6:	call   FWORD PTR [ecx]
  4415a8:	mov    dh,0xe5
  4415aa:	fld    QWORD PTR [eax]
  4415ac:	dec    DWORD PTR [ecx-0x55eae01]
  4415b2:	jae    0x4415b3
  4415b4:	inc    DWORD PTR [ebx-0x53c8d801]
  4415ba:	mov    al,0x83
  4415bc:	dec    esp
  4415be:	jmp    eax
  4415c0:	inc    esp
  4415c1:	pop    edi
  4415c2:	aas    
  4415c3:	dec    esp
  4415c5:	dec    DWORD PTR [ecx+0x19cd3b4d]
  4415cb:	add    BYTE PTR [ebx-0x77870100],al
  4415d1:	mov    BYTE PTR [eax],al
  4415d3:	(bad)  
  4415d4:	inc    DWORD PTR [eax]
  4415d6:	cmp    DWORD PTR [ebx+eax*8-0x7],0xfffffffd
  4415db:	(bad)  
  4415dc:	(bad)  
  4415dd:	(bad)  
  4415de:	dec    DWORD PTR [ebx-0x7c626686]
  4415e4:	int3   
  4415e5:	or     esp,0x41
  4415e8:	cmp    al,0x2
  4415ea:	test   eax,0xcccc0000
  4415ef:	and    BYTE PTR [esi-0x28],al
  4415f2:	sub    al,0xff
  4415f4:	add    BYTE PTR [ecx-0x51a4c301],cl
  4415fa:	cmp    eax,0xff00ff89
  4415ff:	dec    ebx
  441600:	shr    BYTE PTR [esi-0x337c004e],cl
  441606:	mov    DWORD PTR [ecx-0x42],edi
  441609:	aaa    
  44160a:	nop
  44160b:	cmp    edi,0xffffffff
  44160e:	sub    esi,0xffffffb0
  441611:	bnd jnp 0x441614
  441614:	(bad)  
  441615:	inc    DWORD PTR [eax]
  441617:	rcl    bh,1
  441619:	ins    DWORD PTR es:[edi],dx
  44161a:	jp     0x44161b
  44161c:	dec    DWORD PTR [ecx+0x2aa03883]
  441622:	adc    DWORD PTR [eax],eax
  441624:	mov    DWORD PTR [ecx+0x4a702aff],ecx
  44162a:	mov    edi,0x8300ffff
  44162f:	or     ch,BYTE PTR [edx-0xffbdc7]
  441635:	add    DWORD PTR [eax],0x3a
  441638:	es (bad) 
  44163a:	jns    0x441608
  44163c:	inc    DWORD PTR [ebx+0x5f823b83]
  441642:	and    BYTE PTR [ebx-0xcffff01],al
  441648:	cmc    
  441649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44164a:	jmp    0x439f4f
  44164f:	test   eax,0x83d05613
  441654:	dec    esp
  441656:	int3   
  441657:	scas   al,BYTE PTR es:[edi]
  441658:	hlt    
  441659:	jg     0x441614
  44165b:	int3   
  44165c:	inc    DWORD PTR [ebx-0x45a81201]
  441662:	loopne 0x4415e7
  441664:	inc    DWORD PTR [eax]
  441666:	mov    DWORD PTR [edi+0x50],edi
  441669:	(bad)  
  44166a:	icebp  
  44166b:	cmp    edi,0xffffffff
  44166e:	jmp    FWORD PTR [edi+edi*4-0xff02c5]
  441675:	add    bh,bh
  441677:	imul   ecx,DWORD PTR [ebx],0xffffff83
  44167a:	outs   dx,BYTE PTR ds:[esi]
  44167b:	(bad)  
  44167c:	inc    DWORD PTR [ebx+0x16317d00]
  441682:	push   0xffffffff
  441684:	(bad)  
  441685:	inc    DWORD PTR [eax]
  441687:	bound  ecx,QWORD PTR [esi]
  441689:	cld    
  44168a:	xor    cl,ah
  44168c:	inc    DWORD PTR [eax]
  44168e:	int3   
  44168f:	stos   BYTE PTR es:[edi],al
  441690:	inc    esp
  441691:	outs   dx,BYTE PTR ds:[esi]
  441692:	mov    dh,0xcc
  441694:	mov    edi,edi
  441696:	call   DWORD PTR [eax+eiz*8+0x16]
  44169a:	(bad)  
  44169b:	(bad)  
  44169c:	(bad)  
  44169d:	inc    DWORD PTR [ebx+0x294a3438]
  4416a3:	inc    DWORD PTR [eax]
  4416a5:	dec    esp
  4416a7:	or     cl,BYTE PTR [edx]
  4416a9:	jnp    0x4416d3
  4416ab:	add    BYTE PTR [eax],al
  4416ad:	inc    DWORD PTR [eax]
  4416af:	and    ecx,DWORD PTR [edx+eax*8]
  4416b2:	sbb    al,0x83
  4416b4:	add    BYTE PTR [ebx+0x1202b3ff],al
  4416ba:	dec    eax
  4416bb:	cmp    edi,0xffffffff
  4416be:	and    DWORD PTR [esi+0x18],0xffffffc1
  4416c2:	int3   
  4416c3:	dec    DWORD PTR [ecx-0x3621ff01]
  4416c9:	adc    bl,ah
  4416cb:	add    BYTE PTR [ebx-0x4a1b7c01],al
  4416d1:	mov    ?,esi
  4416d3:	add    BYTE PTR [ebx-0x63950077],al
  4416d9:	call   0x9283:0xffccff06
  4416e0:	add    cl,BYTE PTR ds:0x83004e
  4416e6:	(bad)  
  4416e7:	jp     0x4416ff
  4416e9:	inc    ecx
  4416ea:	sub    al,BYTE PTR [eax]
  4416ec:	add    bh,bh
  4416ee:	and    DWORD PTR [edi+eax*1-0x61],0xffffff97
  4416f3:	add    bh,bh
  4416f5:	add    BYTE PTR [eax],al
  4416f7:	mov    ecx,0xff8319c7
  4416fc:	add    bh,bh
  4416fe:	add    al,bh
  441700:	lahf   
  441701:	xchg   esp,eax
  441702:	rol    BYTE PTR [eax],cl
  441704:	(bad)  
  441705:	(bad)  
  441706:	dec    DWORD PTR [esi-0x49]
  441709:	push   edx
  44170a:	jp     0x44170c
  44170c:	(bad)  
  44170d:	(bad)  
  44170e:	(bad)  
  44170f:	fsub   QWORD PTR [ebx-0x8061]
  441715:	cmp    edi,0x75
  441718:	into   
  441719:	sti    
  44171a:	imul   edi,edi,0xffffffcc
  44171d:	inc    DWORD PTR [eax]
  44171f:	retf   0x741b
  441722:	and    cl,BYTE PTR [ecx+0x24ffff00]
  441728:	jne    0x441785
  44172a:	jne    0x44172b
  44172c:	(bad)  
  44172d:	(bad)  
  44172e:	jmp    eax
  441730:	jmp    0x10e4d9
  441735:	dec    esp
  441737:	dec    ebp
  441738:	vandnpd xmm0,xmm1,XMMWORD PTR [eax]
  44173c:	inc    DWORD PTR [eax]
  44173e:	inc    DWORD PTR [edi+0x3]
  441741:	out    0x1c,al
  441743:	add    ah,cl
  441745:	mov    DWORD PTR [ebx+0x6cec2cbd],eax
  44174b:	inc    DWORD PTR [ebx+0x64520083]
  441751:	jb     0x441700
  441753:	inc    DWORD PTR [ebx-0x5070007d]
  441759:	or     dh,0xff
  44175c:	inc    DWORD PTR [eax]
  44175e:	(bad)  
  44175f:	cld    
  441760:	sbb    al,0xca
  441762:	mov    ds:0x83,al
  441767:	imul   edx,eax,0xffffcfa8
  44176d:	add    ah,cl
  44176f:	and    al,0x3f
  441771:	clc    
  441772:	fld    DWORD PTR [eax]
  441774:	add    bh,bh
  441776:	adc    ebx,0xffffff83
  441779:	cld    
  44177a:	fwait
  44177b:	add    bh,bh
  44177d:	add    bh,bh
  44177f:	xor    DWORD PTR [esi+0x2d],0xffffd3
  441786:	add    BYTE PTR [eax],cl
  441788:	scas   eax,DWORD PTR es:[edi]
  441789:	sbb    al,0xf4
  44178b:	add    BYTE PTR [eax],al
  44178d:	add    ah,cl
  44178f:	int3   
  441790:	mov    DWORD PTR [esi],edi
  441792:	mov    ds:0xcc0083ff,eax
  441797:	xor    eax,0x436242
  44179c:	add    bh,bh
  44179e:	int3   
  44179f:	mov    edi,0x833b5571
  4417a4:	int3   
  4417a5:	inc    DWORD PTR [eax]
  4417a7:	retf   0x517a
  4417aa:	xchg   ecx,eax
  4417ab:	inc    DWORD PTR [eax]
  4417ad:	mov    DWORD PTR [ebx-0x2d3240a0],eax
  4417b3:	(bad)  
  4417b4:	(bad)  
  4417b5:	dec    DWORD PTR [ecx+0x3923699a]
  4417bb:	(bad)  
  4417bc:	inc    DWORD PTR [eax]
  4417be:	(bad)  
  4417bf:	ds adc al,0x23
  4417c2:	inc    esi
  4417c3:	int3   
  4417c4:	(bad)  
  4417c5:	inc    DWORD PTR [ebx+0x9360a23]
  4417cb:	(bad)  
  4417cc:	(bad)  
  4417cd:	inc    DWORD PTR [eax]
  4417cf:	out    dx,al
  4417d0:	outs   dx,DWORD PTR ds:[esi]
  4417d1:	mov    ds:0x83ccff38,eax
  4417d6:	(bad)  
  4417d7:	cli    
  4417d8:	inc    bl
  4417da:	inc    ebx
  4417db:	mov    DWORD PTR [ecx-0x4a5e0001],ecx
  4417e1:	push   ds
  4417e2:	ror    BYTE PTR [ecx+0x5883ff00],cl
  4417e8:	jg     0x441772
  4417ea:	jb     0x4417eb
  4417ec:	(bad)  
  4417ed:	(bad)  
  4417ee:	call   edx
  4417f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4417f1:	or     al,0xfc
  4417f3:	add    bh,bh
  4417f5:	inc    DWORD PTR [eax]
  4417f7:	pop    ss
  4417f8:	cli    
  4417f9:	icebp  
  4417fa:	fmul   DWORD PTR [ecx+0x32ffccff]
  441800:	mov    ds:0x83892229,al
  441805:	cmp    edi,0x64
  441808:	nop
  441809:	mov    eax,ds:0x89ffcc9e
  44180e:	mov    eax,ecx
  441810:	inc    ebx
  441811:	addr16 std 
  441813:	mov    edi,edi
  441815:	inc    DWORD PTR [eax]
  441817:	xchg   edx,eax
  441818:	std    
  441819:	dec    ebp
  44181a:	cmp    edi,edi
  44181c:	dec    esp
  44181e:	mov    ebx,esp
  441820:	dec    esp
  441821:	retf   
  441822:	mov    eax,0xffff83
  441827:	mov    esi,0x30507a
  44182c:	dec    DWORD PTR [ecx-0x7f2f277d]
  441832:	cmp    eax,0x8300ffff
  441837:	js     0x441880
  441839:	fsub   DWORD PTR [ecx-0x1]
  44183c:	(bad)  
  44183d:	dec    esp
  44183f:	or     DWORD PTR [eax],0xff004c82
  441845:	inc    DWORD PTR [eax]
  441847:	pushf  
  441848:	sub    cl,BYTE PTR ds:0xffff0b
  44184e:	add    BYTE PTR [eax+0x21],ch
  441851:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441852:	jp     0x4417d7
  441854:	inc    DWORD PTR [ebx-0x31f6e600]
  44185a:	ds (bad) 
  44185c:	dec    DWORD PTR [ecx-0x65b34000]
  441862:	popa   
  441863:	cmp    edi,0xffffffff
  441866:	cmp    ebp,0xfffffffc
  441869:	xchg   DWORD PTR [ebp+0xffffff],ecx
  44186f:	cmp    ch,bl
  441871:	cmp    DWORD PTR [ebp-0x7cff0001],edi
  441877:	(bad)  
  441878:	in     eax,dx
  441879:	xchg   esi,eax
  44187a:	or     esp,0xffffffff
  44187d:	add    bh,bh
  44187f:	xlat   BYTE PTR ds:[ebx]
  441880:	sar    ch,cl
  441882:	ins    DWORD PTR es:[edi],dx
  441883:	add    ah,cl
  441885:	add    DWORD PTR [eax],0x1f
  441888:	in     al,dx
  441889:	sti    
  44188a:	mov    edx,0x8383ff00
  44188f:	fldenv [eax]
  441891:	inc    ecx
  441892:	outs   dx,DWORD PTR ds:[esi]
  441893:	inc    DWORD PTR [eax]
  441895:	(bad)  
  441896:	dec    DWORD PTR [edx-0x52]
  441899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44189a:	push   cs
  44189b:	add    BYTE PTR [eax],al
  44189d:	mov    DWORD PTR [eax],eax
  44189f:	dec    esi
  4418a0:	push   eax
  4418a1:	adc    DWORD PTR [edi+edi*8+0x0],esi
  4418a5:	inc    DWORD PTR [ebx-0x355210ca]
  4418ab:	add    bh,bh
  4418ad:	add    bh,bh
  4418af:	iret   
  4418b0:	mov    WORD PTR [di],fs
  4418b3:	(bad)  
  4418b4:	(bad)  
  4418b5:	inc    DWORD PTR [ebx-0x2c560e84]
  4418bb:	inc    DWORD PTR [eax]
  4418bd:	dec    DWORD PTR [ecx+0x55195779]
  4418c3:	(bad)  
  4418c4:	(bad)  
  4418c5:	(bad)  
  4418c6:	push   DWORD PTR [esp+edx*1+0x2a]
  4418ca:	mov    bh,bh
  4418cc:	mov    edi,edi
  4418ce:	and    ecx,0xffffffdf
  4418d1:	dec    ebx
  4418d2:	push   0x83ffffff
  4418d7:	add    eax,0xffab3dc0
  4418dc:	cmp    edi,0x0
  4418df:	push   es
  4418e0:	add    al,0x6d
  4418e2:	mov    dl,0xff
  4418e4:	add    DWORD PTR [eax],0xffffffff
  4418e7:	jns    0x44188a
  4418e9:	imul   esi,DWORD PTR [esi-0x33ffff01],0x14d9f8e4
  4418f3:	inc    DWORD PTR [eax]
  4418f5:	add    bh,bh
  4418f7:	or     BYTE PTR [ebx-0xff4163],dh
  4418fd:	inc    DWORD PTR [eax]
  4418ff:	pop    edx
  441900:	xchg   ecx,eax
  441901:	out    dx,eax
  441902:	stos   BYTE PTR es:[edi],al
  441903:	add    DWORD PTR [eax],0xffffffff
  441906:	int3   
  441907:	cmp    BYTE PTR [esi+0x2e],bh
  44190a:	ja     0x441895
  44190c:	(bad)  
  44190d:	inc    DWORD PTR [ebx-0x4f2f9ba2]
  441913:	add    BYTE PTR [ebx+0xdef00ff],al
  441919:	pop    es
  44191a:	ins    BYTE PTR es:[edi],dx
  44191b:	(bad)  
  44191c:	(bad)  
  44191d:	(bad)  
  44191e:	call   FWORD PTR [esi]
  441920:	mov    al,0x54
  441922:	mov    ch,0xff
  441924:	int3   
  441925:	int3   
  441926:	call   FWORD PTR [edi-0x4b2006]
  44192c:	add    DWORD PTR [eax],0xffffffff
  44192f:	test   bh,dl
  441931:	cmp    al,0x6d
  441933:	(bad)  
  441934:	inc    DWORD PTR [eax]
  441936:	mov    DWORD PTR [ecx],esp
  441938:	ret    
  441939:	jl     0x44193a
  44193b:	inc    DWORD PTR [ebx-0x2ada0100]
  441941:	cld    
  441942:	sub    edi,edi
  441944:	add    BYTE PTR [eax],al
  441946:	add    ch,dl
  441948:	aad    0x4d
  44194a:	pop    ss
  44194b:	(bad)  
  44194c:	inc    DWORD PTR [eax]
  44194e:	inc    DWORD PTR [edi+0x73]
  441951:	and    ch,BYTE PTR [ecx]
  441953:	add    BYTE PTR [eax],al
  441955:	add    BYTE PTR [eax],al
  441957:	or     cl,BYTE PTR [ebx]
  441959:	icebp  
  44195a:	pop    edx
  44195b:	cmp    edi,0xffffff89
  44195e:	add    BYTE PTR [eax-0x92abbe],bl
  441964:	(bad)  
  441965:	(bad)  
  441966:	(bad)  
  441967:	sti    
  441968:	bnd ret 0x8346
  44196c:	add    BYTE PTR [eax],al
  44196e:	int3   
  44196f:	(bad)  
  441972:	mov    ebx,0xffffff00
  441977:	or     DWORD PTR [edi-0xff9074],esi
  44197d:	dec    DWORD PTR [ecx-0x2d4b6238]
  441983:	(bad)  
  441984:	inc    DWORD PTR [eax]
  441986:	add    BYTE PTR [edi],bh
  441988:	push   cs
  441989:	jo     0x44193a
  44198b:	(bad)  
  44198c:	inc    DWORD PTR [eax]
  44198e:	call   DWORD PTR [edi]
  441990:	test   eax,0xff0b37
  441995:	add    DWORD PTR [eax],0x5a
  441998:	xchg   ebp,eax
  441999:	mov    cl,0x84
  44199b:	int3   
  44199c:	or     esp,0xffffff83
  44199f:	jg     0x441965
  4419a1:	aas    
  4419a2:	in     al,0xff
  4419a4:	mov    edi,edi
  4419a6:	add    ch,dh
  4419a8:	xchg   ebp,eax
  4419a9:	sti    
  4419aa:	xchg   ecx,eax
  4419ab:	add    BYTE PTR [eax],al
  4419ad:	add    BYTE PTR [eax],al
  4419af:	fadd   QWORD PTR [ecx-0x7cff3e3e]
  4419b5:	add    ah,cl
  4419b7:	mov    esi,0xff8b9d4f
  4419bc:	int3   
  4419bd:	(bad)  
  4419be:	call   FWORD PTR [esp+ebp*8]
  4419c1:	xor    edi,edx
  4419c3:	add    DWORD PTR [eax],0xffffffff
  4419c6:	jmp    DWORD PTR [eax-0x1d14aa]
  4419cc:	int3   
  4419cd:	(bad)  
  4419ce:	(bad)  
  4419cf:	cmp    ah,al
  4419d1:	(bad)  
  4419d3:	add    DWORD PTR [eax],0xffffffff
  4419d6:	add    al,al
  4419d8:	dec    edx
  4419d9:	push   esp
  4419da:	add    eax,0xff0089ff
  4419df:	jecxz  0x441a0f
  4419e1:	inc    ecx
  4419e2:	dec    esp
  4419e3:	inc    DWORD PTR [eax]
  4419e5:	cmp    edi,0xffffffe0
  4419e8:	out    dx,al
  4419e9:	aam    0xfe
  4419eb:	int3   
  4419ec:	inc    DWORD PTR [eax]
  4419ee:	inc    DWORD PTR [ebp-0x76935e85]
  4419f4:	or     esp,0x0
  4419f7:	xchg   edx,eax
  4419f8:	xor    ebx,ecx
  4419fa:	dec    eax
  4419fb:	inc    DWORD PTR [eax]
  4419fd:	add    BYTE PTR [ebx-0xa6167ff],al
  441a03:	add    DWORD PTR [eax],0x0
  441a06:	add    BYTE PTR [ebp-0x76a2c30a],ah
  441a0c:	inc    DWORD PTR [eax]
  441a0e:	push   DWORD PTR [edi+ecx*2]
  441a11:	adc    BYTE PTR [ecx-0x1],cl
  441a14:	add    bh,bh
  441a16:	int3   
  441a17:	ja     0x441a16
  441a19:	ror    bl,cl
  441a1b:	(bad)  
  441a1c:	(bad)  
  441a1d:	(bad)  
  441a1e:	push   edx
  441a20:	in     al,0x15
  441a22:	inc    ebp
  441a23:	add    bh,bh
  441a25:	(bad)  
  441a26:	jmp    DWORD PTR [ebx+0x3705c9]
  441a2c:	inc    DWORD PTR [ebx-0x65bd0f01]
  441a32:	xor    eax,DWORD PTR [eax]
  441a34:	cmp    edi,0xffffff83
  441a37:	xchg   BYTE PTR [ebx],ah
  441a39:	sbb    ch,0xff
  441a3c:	int3   
  441a3d:	add    BYTE PTR [eax],al
  441a3f:	adc    eax,0xff97485a
  441a44:	add    ah,cl
  441a46:	jmp    DWORD PTR [esi-0x7c33bae5]
  441a4c:	cmp    edi,0xffffffff
  441a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441a50:	push   edx
  441a51:	fidivr WORD PTR [edi]
  441a53:	dec    esp
  441a55:	inc    DWORD PTR [ebx-0x541468df]
  441a5b:	inc    DWORD PTR [eax]
  441a5d:	add    bh,bh
  441a5f:	jae    0x441a1b
  441a61:	adc    dl,BYTE PTR [ebp+0x0]
  441a64:	int3   
  441a65:	(bad)  
  441a66:	(bad)  
  441a67:	(bad)  
  441a68:	jp     0x441ae2
  441a6a:	pop    ebx
  441a6b:	(bad)  
  441a6c:	(bad)  
  441a6d:	(bad)  
  441a6e:	push   esp
  441a70:	daa    
  441a71:	and    bl,BYTE PTR [edi+edi*8-0x1]
  441a75:	(bad)  
  441a76:	call   DWORD PTR [ecx+edx*4-0x3f]
  441a7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441a7b:	mov    edi,edi
  441a7d:	inc    DWORD PTR [eax]
  441a7f:	or     ebx,DWORD PTR [esi]
  441a81:	shl    dh,0x0
  441a84:	(bad)  
  441a85:	dec    esp
  441a87:	xor    eax,DWORD PTR [esi-0x78]
  441a8a:	test   BYTE PTR [eax],0x0
  441a8d:	(bad)  
  441a8e:	push   DWORD PTR [edx+0x51]
  441a91:	pusha  
  441a92:	inc    DWORD PTR [eax]
  441a94:	add    BYTE PTR [ecx-0x6e719900],cl
  441a9a:	xlat   BYTE PTR ds:[ebx]
  441a9b:	(bad)  
  441a9c:	dec    esp
  441a9e:	dec    DWORD PTR [eax]
  441aa0:	pop    edx
  441aa1:	mov    ds:0xffff8985,al
  441aa6:	jmp    DWORD PTR [eax+eax*1]
  441aa9:	lea    ebx,[esi-0x76ff7c01]
  441aaf:	pop    es
  441ab0:	outs   dx,BYTE PTR ds:[esi]
  441ab1:	sub    ecx,esp
  441ab3:	add    BYTE PTR [eax],al
  441ab5:	int3   
  441ab6:	int3   
  441ab7:	out    dx,eax
  441ab8:	jge    0x441ad8
  441aba:	(bad)  
  441abb:	int3   
  441abc:	(bad)  
  441abd:	inc    DWORD PTR [ebx+0x7c91059e]
  441ac3:	add    bh,bh
  441ac5:	(bad)  
  441ac6:	inc    DWORD PTR [ebp-0xccd7d0]
  441acc:	add    DWORD PTR [eax],0xffffffff
  441acf:	js     0x441af9
  441ad1:	jne    0x441aec
  441ad3:	add    BYTE PTR [eax],al
  441ad5:	(bad)  
  441ad6:	call   esp
  441ad8:	es dec esp
  441ada:	outs   dx,DWORD PTR ds:[esi]
  441adb:	inc    DWORD PTR [eax]
  441add:	add    BYTE PTR [eax],al
  441adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441ae0:	pop    ebx
  441ae1:	out    0x47,eax
  441ae3:	inc    DWORD PTR [eax]
  441ae5:	add    BYTE PTR [ecx-0x5a34c285],cl
  441aeb:	mov    DWORD PTR [eax],eax
  441aed:	add    DWORD PTR [eax],0xffffffac
  441af0:	daa    
  441af1:	imul   ebp,DWORD PTR [ecx-0x1],0xfdcc83ff
  441af8:	in     al,0xa3
  441afa:	iret   
  441afb:	add    BYTE PTR [eax],al
  441afd:	(bad)  
  441afe:	call   FWORD PTR ds:0xff67d41b
  441b04:	mov    edi,edi
  441b06:	add    BYTE PTR [eax],cl
  441b08:	es sti 
  441b0a:	push   0x0
  441b0c:	add    bh,bh
  441b0e:	add    bl,dl
  441b10:	inc    esi
  441b11:	cmp    esp,DWORD PTR [edi-0xff0100]
  441b17:	enter  0x307c,0xc2
  441b1b:	inc    DWORD PTR [ebx-0x69fe0077]
  441b21:	retf   0xff23
  441b24:	cmp    edi,0xffffffcc
  441b27:	pop    ecx
  441b28:	sub    eax,0xffff5362
  441b2d:	add    bh,bh
  441b2f:	push   edi
  441b30:	sub    esp,DWORD PTR [edi]
  441b32:	xchg   edi,eax
  441b33:	(bad)  
  441b34:	inc    DWORD PTR [eax]
  441b36:	dec    DWORD PTR [ecx-0x7ca630f5]
  441b3c:	(bad)  
  441b3d:	inc    DWORD PTR [ebx+0x6e326e72]
  441b43:	cmp    edi,0xffffff83
  441b46:	inc    DWORD PTR [esp+ebp*8+0xf]
  441b4a:	arpl   sp,cx
  441b4c:	(bad)  
  441b4d:	inc    DWORD PTR [eax]
  441b4f:	ror    BYTE PTR [edi-0x5884],cl
  441b55:	inc    DWORD PTR [eax]
  441b57:	jae    0x441bcc
  441b59:	push   ebp
  441b5a:	fwait
  441b5b:	(bad)  
  441b5c:	dec    esp
  441b5e:	inc    edi
  441b60:	hlt    
  441b61:	imul   BYTE PTR [edx]
  441b63:	or     DWORD PTR [ecx+0x3b3a0000],0x17
  441b6a:	cmc    
  441b6b:	int3   
  441b6c:	add    DWORD PTR [eax],0xffffff83
  441b6f:	fs dec ecx
  441b71:	xor    BYTE PTR [eax+eax*1],ch
  441b74:	(bad)  
  441b75:	(bad)  
  441b76:	inc    ecx
  441b78:	sbb    eax,0xcc838ba1
  441b7d:	dec    esp
  441b7f:	retf   
  441b80:	and    BYTE PTR [esi],0x52
  441b83:	add    bh,bh
  441b85:	inc    DWORD PTR [ebx+0x31bbdb35]
  441b8b:	dec    esp
  441b8d:	add    bh,bh
  441b8f:	pushf  
  441b90:	hlt    
  441b91:	xor    BYTE PTR [ebx],bl
  441b93:	add    bh,bh
  441b95:	inc    DWORD PTR [eax]
  441b97:	(bad)  
  441b98:	je     0x441b75
  441b9a:	hlt    
  441b9b:	(bad)  
  441b9c:	inc    DWORD PTR [ebx-0x41e2b401]
  441ba2:	or     al,0xff
  441ba4:	int3   
  441ba5:	(bad)  
  441ba6:	jmp    FWORD PTR [ebx]
  441ba8:	ss mov ch,0x39
  441bab:	inc    DWORD PTR [eax]
  441bad:	mov    esp,ecx
  441baf:	push   ds
  441bb0:	adc    BYTE PTR [ebp+0xffce],cl
  441bb6:	jmp    DWORD PTR [ecx-0x27]
  441bb9:	mov    bl,0xaf
  441bbb:	(bad)  
  441bbc:	inc    DWORD PTR [eax]
  441bbe:	add    BYTE PTR [eax-0x26],al
  441bc1:	pop    ebp
  441bc2:	push   esi
  441bc3:	inc    DWORD PTR [ebx+0xa8cffff]
  441bc9:	jnp    0x441b5b
  441bcb:	add    BYTE PTR [eax],al
  441bcd:	add    bh,bh
  441bcf:	pop    ds
  441bd0:	inc    esp
  441bd1:	imul   ebp,DWORD PTR [ecx-0x1],0xffffff83
  441bd5:	or     DWORD PTR [ecx+0x5f3de20a],0x0
  441bdc:	add    DWORD PTR [ebx+0x4038a5ff],0x54
  441be3:	add    bh,bh
  441be5:	add    bh,bh
  441be7:	mov    esp,0xccb705f3
  441bec:	inc    DWORD PTR [eax]
  441bee:	inc    DWORD PTR [esi+eiz*1]
  441bf1:	dec    ecx
  441bf2:	fiadd  DWORD PTR [eax]
  441bf4:	or     esp,0xffffffff
  441bf7:	(bad)  
  441bfa:	(bad)  
  441bfb:	int3   
  441bfc:	dec    esp
  441bfe:	int3   
  441bff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  441c00:	push   eax
  441c01:	aas    
  441c02:	mov    edx,0xff0083
  441c07:	test   esi,ebp
  441c09:	and    eax,DWORD PTR [ecx-0x7c7c01]
  441c0f:	sahf   
  441c10:	inc    DWORD PTR [eax+0x15]
  441c13:	inc    DWORD PTR [eax]
  441c15:	int3   
  441c16:	mov    DWORD PTR [edx],esp
  441c18:	sub    dh,al
  441c1a:	jnp    0x441c1c
  441c1c:	inc    DWORD PTR [ebx-0x71ff717d]
  441c22:	idiv   edi
  441c24:	add    bh,bh
  441c26:	jmp    DWORD PTR [edi-0x38]
  441c29:	rol    al,0x89
  441c2c:	inc    DWORD PTR [eax]
  441c2e:	add    BYTE PTR [esi-0x3343240e],dl
  441c34:	inc    DWORD PTR [eax]
  441c36:	sbb    DWORD PTR [eax],0x4e
  441c39:	je     0x441bc1
  441c3b:	(bad)  
  441c3c:	inc    DWORD PTR [ebx-0x59ed9e00]
  441c42:	imul   edi,edi,0xf2ffccff
  441c48:	ja     0x441c56
  441c4a:	test   eax,0xff00ff00
  441c4f:	xchg   esi,eax
  441c50:	and    BYTE PTR [ebx],cl
  441c52:	arpl   di,di
  441c54:	add    DWORD PTR [ebx-0x57554101],0xffffffac
  441c5b:	inc    DWORD PTR [eax]
  441c5d:	(bad)  
  441c5e:	(bad)  
  441c5f:	mov    ecx,0x83cb5382
  441c64:	(bad)  
  441c65:	inc    DWORD PTR [eax]
  441c67:	retf   0xc78d
  441c6a:	mov    edi,?
  441c6c:	(bad)  
  441c6d:	(bad)  
  441c6e:	call   DWORD PTR [ebx-0xe245ea]
  441c74:	dec    DWORD PTR [ecx+0x41245ecc]
  441c7a:	enter  0x0,0xff
  441c7e:	dec    DWORD PTR [ecx+0xe1685]
  441c84:	add    BYTE PTR [eax],al
  441c86:	sbb    DWORD PTR [ebx+0x53],0xffffffb6
  441c8a:	xor    edi,edi
  441c8c:	add    BYTE PTR [eax],al
  441c8e:	int3   
  441c8f:	icebp  
  441c90:	push   ecx
  441c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  441c92:	rol    BYTE PTR [eax],cl
  441c94:	add    DWORD PTR [ebx-0x53b3d077],0x61
  441c9b:	(bad)  
  441c9c:	(bad)  
  441c9d:	dec    DWORD PTR [ecx+0x58798521]
  441ca3:	add    BYTE PTR [eax],al
  441ca5:	add    bh,bh
  441ca7:	sahf   
  441ca8:	sar    BYTE PTR [eax-0x48],0x89
  441cac:	dec    esp
  441cae:	mov    DWORD PTR [esi],esi
  441cb0:	push   edx
  441cb1:	and    eax,0x48
  441cb6:	jmp    DWORD PTR [eax+0xd1ff7f]
  441cbc:	add    bh,bh
  441cbe:	call   FWORD PTR [ebp-0x4d]
  441cc1:	jo     0x441c5e
  441cc3:	int3   
  441cc4:	inc    DWORD PTR [ebx+0xedaf1ff]
  441cca:	in     al,0xff
  441ccc:	add    BYTE PTR [eax],al
  441cce:	dec    DWORD PTR [edi+0x44]
  441cd1:	pop    ds
  441cd2:	popa   
  441cd3:	dec    DWORD PTR [ecx-0x1ee7ff01]
  441cd9:	push   edi
  441cda:	in     al,dx
  441cdb:	mov    DWORD PTR [eax],eax
  441cdd:	mov    DWORD PTR [eax],eax
  441cdf:	inc    esp
  441ce0:	loope  0x441c98
  441ce2:	jl     0x441ce3
  441ce4:	add    bh,bh
  441ce6:	add    BYTE PTR [ebp-0x6c],bh
  441ce9:	lds    esi,FWORD PTR ds:0xffff0089
  441cef:	stos   DWORD PTR es:[edi],eax
  441cf0:	adc    dl,bl
  441cf2:	ja     0x441cc0
  441cf4:	cmp    edi,0xffffffff
  441cf7:	popa   
  441cf8:	inc    edi
  441cf9:	icebp  
  441cfa:	jp     0x441c7f
  441cfc:	inc    DWORD PTR [eax]
  441cfe:	add    bl,ch
  441d00:	into   
  441d01:	or     al,0xd3
  441d03:	inc    DWORD PTR [ebx-0x7290ff01]
  441d09:	es ds int3 
  441d0c:	mov    DWORD PTR [ecx-0x6bc97d],ecx
  441d12:	pop    es
  441d13:	add    DWORD PTR [eax],0x0
  441d16:	mov    DWORD PTR [esi],ebx
  441d18:	sbb    al,BYTE PTR [eax-0xff2d]
  441d1e:	inc    DWORD PTR [eax-0xd84e]
  441d24:	add    bh,bh
  441d26:	sbb    DWORD PTR [eax-0x7c2f45fe],0x0
  441d2d:	inc    DWORD PTR [ebx+0x58f6aa87]
  441d33:	add    ah,cl
  441d35:	(bad)  
  441d36:	call   ecx
  441d38:	mov    dl,0x17
  441d3a:	icebp  
  441d3b:	(bad)  
  441d3c:	(bad)  
  441d3d:	inc    DWORD PTR [eax]
  441d3f:	(bad)  
  441d40:	shl    DWORD PTR [edi],cl
  441d42:	ud0    eax,DWORD PTR [eax]
  441d45:	add    ah,cl
  441d47:	sub    ebp,DWORD PTR [esi+0xa490]
  441d4d:	int3   
  441d4e:	sub    edx,0x36
  441d51:	inc    esi
  441d52:	sbb    edi,edi
  441d54:	(bad)  
  441d55:	(bad)  
  441d56:	(bad)  
  441d57:	mov    ebp,0xa1180d
  441d5c:	add    bh,bh
  441d5e:	dec    DWORD PTR [edx]
  441d60:	mov    al,ds:0xff0055e1
  441d65:	inc    DWORD PTR [eax]
  441d67:	cdq    
  441d68:	push   edx
  441d69:	or     al,0x73
  441d6b:	add    ah,cl
  441d6d:	cmp    edi,0x3e
  441d70:	loop   0x441cfa
  441d72:	loopne 0x441d73
  441d74:	(bad)  
  441d75:	dec    esp
  441d77:	das    
  441d78:	jecxz  0x441daa
  441d7a:	enter  0xffff,0xff
  441d7e:	call   FWORD PTR [edx+0x6d]
  441d81:	add    ecx,DWORD PTR ds:0xff830000
  441d87:	sar    BYTE PTR [eax+0x5dce],0xff
  441d8e:	inc    DWORD PTR [edx]
  441d90:	jmp    0x0:0x89fffb93
  441d97:	dec    esp
  441d98:	add    ah,ah
  441d9a:	jmp    0xdfac:0xffcc
  441da1:	add    DWORD PTR [esi-0x7c01],edi
  441da7:	add    al,0x29
  441da9:	(bad)  
  441daa:	std    
  441dab:	inc    DWORD PTR [eax]
  441dad:	(bad)  
  441dae:	inc    ecx
  441db0:	pop    ebx
  441db1:	pop    ebp
  441db2:	int    0x0
  441db4:	(bad)  
  441db5:	dec    DWORD PTR [ecx+0x4467d87]
  441dbb:	cmp    edi,0xffffffff
  441dbe:	sbb    esp,0xffffffaa
  441dc1:	int    0x38
  441dc3:	int3   
  441dc4:	add    BYTE PTR [eax],al
  441dc6:	jmp    FWORD PTR [edi+0x52]
  441dc9:	pop    esi
  441dca:	or     BYTE PTR [eax],al
  441dcc:	add    BYTE PTR [eax],al
  441dce:	add    BYTE PTR [edi+0xb],al
  441dd1:	loopne 0x441de5
  441dd3:	dec    esp
  441dd5:	add    bh,bh
  441dd7:	je     0x441e40
  441dd9:	pusha  
  441dda:	dec    ecx
  441ddb:	add    BYTE PTR [eax],al
  441ddd:	inc    DWORD PTR [eax]
  441ddf:	bnd jp 0x441d8b
  441de2:	js     0x441de3
  441de4:	int3   
  441de5:	inc    DWORD PTR [eax]
  441de7:	pushf  
  441de8:	loop   0x441e22
  441dea:	push   ecx
  441deb:	cmp    edi,0xffffff83
  441dee:	add    BYTE PTR [ecx-0x9ffe52],al
  441df4:	int3   
  441df5:	add    BYTE PTR [eax],al
  441df7:	cld    
  441df8:	rcr    DWORD PTR [edi],cl
  441dfa:	(bad)
  441dfe:	add    BYTE PTR [ebp-0x4d],dh
  441e01:	pop    ss
  441e02:	dec    ebx
  441e03:	(bad)  
  441e04:	(bad)  
  441e05:	(bad)  
  441e06:	inc    DWORD PTR [esi-0xd07871]
  441e0c:	(bad)  
  441e0d:	dec    DWORD PTR [ecx+0x59413041]
  441e13:	int3   
  441e14:	int3   
  441e15:	or     esp,0x12
  441e18:	std    
  441e19:	cwde   
  441e1a:	loope  0x441e1b
  441e1c:	(bad)  
  441e1d:	inc    DWORD PTR [eax]
  441e1f:	pop    ebp
  441e20:	fs repnz int 0xff
  441e24:	or     DWORD PTR [ecx-0x5af5f834],0x4e
  441e2b:	add    DWORD PTR [eax],0xffffff83
  441e2e:	dec    DWORD PTR [edx-0x55]
  441e31:	mov    ebx,0xff00ff3b
  441e36:	jmp    esi
  441e38:	jg     0xff44a7b9
  441e3e:	jmp    DWORD PTR [ebp+0x10]
  441e41:	or     cl,dh
  441e43:	inc    DWORD PTR [eax]
  441e45:	(bad)  
  441e46:	inc    DWORD PTR [edi-0x4f]
  441e49:	loopne 0x441dee
  441e4b:	add    BYTE PTR [ecx+0x4eee8300],cl
  441e51:	fwait
  441e52:	jns    0x441e20
  441e54:	(bad)  
  441e55:	dec    esp
  441e57:	rcr    DWORD PTR [ebx-0x14cd],1
  441e5d:	mov    DWORD PTR [eax],eax
  441e5f:	or     edx,DWORD PTR [edi]
  441e61:	stos   DWORD PTR es:[edi],eax
  441e62:	and    eax,DWORD PTR [eax]
  441e64:	(bad)  
  441e65:	(bad)  
  441e66:	inc    ebx
  441e68:	mov    bh,0xce
  441e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  441e6b:	mov    DWORD PTR [ecx+0x511100ff],ecx
  441e71:	jns    0x441ec0
  441e73:	(bad)  
  441e74:	inc    DWORD PTR [ebx-0x410fcf00]
  441e7a:	cmp    eax,0xffcc00ff
  441e7f:	mov    ds,WORD PTR [edi-0xa194]
  441e85:	add    bh,bh
  441e87:	add    cl,BYTE PTR [ebx]
  441e89:	pop    ss
  441e8a:	pop    edx
  441e8b:	add    DWORD PTR [ebx-0x2576ff01],0x18
  441e92:	jp     0x441e94
  441e94:	add    BYTE PTR [eax],al
  441e96:	xor    ecx,0xffffffda
  441e99:	xor    BYTE PTR [ebx+0x83ff00],dh
  441e9f:	aam    0x1e
  441ea1:	fnstcw WORD PTR [eax+eax*1+0x2200ff00]
  441ea8:	dec    ebp
  441ea9:	fcom   QWORD PTR [ecx]
  441eab:	add    bh,bh
  441ead:	inc    DWORD PTR [ebx+0x74ea9838]
  441eb3:	dec    esp
  441eb5:	inc    DWORD PTR [eax]
  441eb7:	xlat   BYTE PTR ds:[ebx]
  441eb8:	sub    ah,BYTE PTR ds:0xb7
  441ebe:	add    al,ch
  441ec0:	cmp    edx,DWORD PTR [ecx-0xff0065]
  441ec6:	dec    DWORD PTR [edi-0x5cc4c3]
  441ecc:	(bad)  
  441ecd:	(bad)  
  441ece:	inc    DWORD PTR [ebp+0x3d]
  441ed1:	inc    esi
  441ed2:	jbe    0x441ea0
  441ed4:	inc    DWORD PTR [eax]
  441ed6:	(bad)  
  441ed7:	(bad)  
  441ed8:	mov    eax,0xffffc53f
  441edd:	(bad)  
  441ede:	push   DWORD PTR [edi]
  441ee0:	xor    DWORD PTR [edi-0x20],edx
  441ee3:	add    BYTE PTR [eax],al
  441ee5:	add    BYTE PTR [eax],al
  441ee7:	push   ds
  441ee8:	jmp    0x441f0d
  441eea:	fld    QWORD PTR [eax]
  441eec:	or     esp,0xffffffff
  441eef:	lods   eax,DWORD PTR ds:[esi]
  441ef0:	or     eax,DWORD PTR [ebx-0x64]
  441ef3:	int3   
  441ef4:	add    bh,bh
  441ef6:	jmp    DWORD PTR [edi]
  441ef8:	cwde   
  441ef9:	in     al,0x19
  441efb:	cmp    edi,0xffffffcc
  441efe:	add    BYTE PTR [ecx-0x338441d9],cl
  441f04:	(bad)  
  441f05:	inc    DWORD PTR [eax]
  441f07:	hlt    
  441f08:	dec    ebp
  441f09:	mov    ds:0xccff9c,eax
  441f0e:	call   FWORD PTR [edi]
  441f10:	sbb    BYTE PTR [ecx-0x41],al
  441f13:	mov    DWORD PTR [eax],eax
  441f15:	mov    edi,edi
  441f17:	mov    ecx,0x8342b2cc
  441f1c:	mov    DWORD PTR [eax],eax
  441f1e:	push   DWORD PTR [esp+ebx*1-0x7c00d148]
  441f25:	(bad)  
  441f26:	(bad)  
  441f27:	fsubr  QWORD PTR [ebp+ebp*8+0x55]
  441f2b:	add    DWORD PTR [ebx-0x7df80100],0x6
  441f32:	out    dx,eax
  441f33:	mov    edi,edi
  441f35:	mov    edi,edi
  441f37:	jae    0x441ebf
  441f39:	mov    BYTE PTR [edi+edi*8],bl
  441f3c:	inc    DWORD PTR [eax]
  441f3e:	add    BYTE PTR [eax],ah
  441f40:	sub    BYTE PTR [ecx],bl
  441f42:	sub    eax,0xffccff83
  441f47:	pop    edi
  441f48:	stc    
  441f49:	std    
  441f4a:	(bad)  
  441f4d:	inc    DWORD PTR [eax]
  441f4f:	cli    
  441f50:	mov    dl,0xfc
  441f52:	fadd   QWORD PTR [eax]
  441f54:	inc    DWORD PTR [ebx+0x20b3bcff]
  441f5a:	and    al,0x0
  441f5c:	add    DWORD PTR [ebx+0x17ba0dcc],0x40
  441f63:	inc    DWORD PTR [eax]
  441f65:	dec    esp
  441f67:	cld    
  441f68:	out    dx,al
  441f69:	adc    bh,BYTE PTR [edi]
  441f6b:	add    bh,bh
  441f6d:	add    DWORD PTR [ebx+0x4a24ccb7],0xffffffff
  441f74:	add    BYTE PTR [ecx-0x58a51100],cl
  441f7a:	repnz add BYTE PTR [eax],al
  441f7d:	(bad)  
  441f7e:	call   DWORD PTR [ebx-0x768823ef]
  441f84:	inc    DWORD PTR [eax]
  441f86:	cmp    DWORD PTR [ebx*8-0xfcd2],0xffffffff
  441f8e:	int3   
  441f8f:	es mov ebx,gs
  441f92:	mov    ebx,0xffff0000
  441f97:	(bad)  
  441f98:	jne    0x442014
  441f9a:	jne    0x441f68
  441f9c:	mov    edi,edi
  441f9e:	add    dh,al
  441fa0:	add    BYTE PTR [edx+0x56],dl
  441fa3:	add    bh,bh
  441fa5:	mov    DWORD PTR [ebx-0x64e2291c],eax
  441fab:	inc    DWORD PTR [eax]
  441fad:	add    BYTE PTR [eax],al
  441faf:	fild   QWORD PTR [ecx+0x7b]
  441fb2:	daa    
  441fb3:	add    BYTE PTR [ebx+0x325fccff],al
  441fb9:	arpl   WORD PTR [ecx-0x7d],ax
  441fbc:	int3   
  441fbd:	(bad)  
  441fbe:	dec    DWORD PTR [eax]
  441fc0:	sbb    DWORD PTR [edi+0x5f],esp
  441fc3:	inc    DWORD PTR [ebx-0x6e2e7c01]
  441fc9:	push   ds
  441fca:	stc    
  441fcb:	mov    edi,edi
  441fcd:	cmp    edi,0x2e
  441fd0:	inc    eax
  441fd1:	fdiv   QWORD PTR [ebp-0x1]
  441fd4:	(bad)  
  441fd5:	inc    DWORD PTR [ebx-0x404fe4a9]
  441fdb:	inc    DWORD PTR [ebx-0x7f0e0034]
  441fe1:	or     BYTE PTR [edx-0x3300ff01],ah
  441fe7:	push   ecx
  441fe8:	(bad)  
  441fe9:	(bad)  
  441fea:	pop    eax
  441feb:	inc    DWORD PTR [eax]
  441fed:	add    bh,bh
  441fef:	jbe    0x441f78
  441ff1:	dec    eax
  441ff2:	out    0xff,al
  441ff4:	(bad)  
  441ff5:	inc    DWORD PTR [eax]
  441ff7:	out    dx,eax
  441ff8:	test   eax,0xffff3bab
  441ffd:	cmp    edi,0x10
  442000:	sub    al,0x85
  442002:	inc    ebx
  442003:	dec    esp
  442005:	add    bh,bh
  442007:	sahf   
  442008:	xchg   ecx,ebx
  44200a:	sbb    BYTE PTR [eax],al
  44200c:	add    BYTE PTR [ebx+0x18f97d83],al
  442012:	out    0x89,eax
  442014:	inc    DWORD PTR [ebx-0x2f808577]
  44201a:	ja     0x44201b
  44201c:	add    bh,bh
  44201e:	add    BYTE PTR [edx],ch
  442020:	(bad)  
  442022:	cwde   
  442023:	add    DWORD PTR [eax],0xffffffff
  442026:	int3   
  442027:	not    ebp
  442029:	xchg   DWORD PTR [eax],ecx
  44202b:	(bad)  
  44202c:	dec    esp
  44202e:	add    BYTE PTR [edx-0x795417],dl
  442034:	inc    DWORD PTR [eax]
  442036:	mov    DWORD PTR [ecx],esi
  442038:	jmp    0xff89:0xff833491
  44203f:	pop    ebp
  442040:	inc    eax
  442041:	xchg   ebp,eax
  442042:	(bad)  
  442043:	inc    DWORD PTR [eax]
  442045:	(bad)  
  442046:	jmp    FWORD PTR [edi+edx*2-0x7e]
  44204a:	push   ss
  44204b:	add    DWORD PTR [eax],0x0
  44204e:	push   DWORD PTR [edx]
  442050:	adc    al,0x84
  442052:	push   ds
  442053:	int3   
  442054:	add    BYTE PTR [ebx+0x748a6600],al
  44205a:	idiv   edi
  44205c:	add    bh,bh
  44205e:	add    BYTE PTR [edi+eax*1],cl
  442061:	leave  
  442062:	in     al,0xff
  442064:	add    bh,bh
  442066:	mov    DWORD PTR [edx-0x680ada],esp
  44206c:	mov    DWORD PTR [eax],eax
  44206e:	inc    DWORD PTR [edx-0xd]
  442071:	xor    eax,DWORD PTR [edi+edi*8-0x7d]
  442075:	inc    DWORD PTR [eax]
  442077:	add    al,0x51
  442079:	xor    BYTE PTR ds:0xffff00,ah
  44207f:	cmc    
  442080:	scas   eax,DWORD PTR es:[edi]
  442081:	sbb    BYTE PTR [ecx],al
  442083:	(bad)  
  442084:	inc    DWORD PTR [ebx+0x59239fcc]
  44208a:	sar    bh,cl
  44208c:	add    BYTE PTR [ebx+0x73d2f1cc],al
  442092:	or     al,0x0
  442094:	inc    DWORD PTR [eax]
  442096:	add    dh,cl
  442098:	mov    al,0x14
  44209a:	fwait
  44209b:	add    bh,bh
  44209d:	add    BYTE PTR [eax],al
  44209f:	icebp  
  4420a0:	pop    ss
  4420a1:	xor    BYTE PTR [edi-0x7c00ff01],0x4a
  4420a8:	bound  ecx,QWORD PTR [esi+0x59]
  4420ab:	(bad)  
  4420ac:	dec    esp
  4420ae:	add    BYTE PTR [ecx],al
  4420b0:	int3   
  4420b1:	fstp   TBYTE PTR [esi+0x0]
  4420b4:	int3   
  4420b5:	inc    DWORD PTR [eax]
  4420b7:	ss mov bl,0xaa
  4420ba:	add    eax,0x0
  4420bf:	cdq    
  4420c0:	and    al,0xf2
  4420c2:	lea    ecx,[ecx-0x5a00ff01]
  4420c8:	pusha  
  4420c9:	jae    0x4420dc
  4420cb:	add    BYTE PTR [eax],al
  4420cd:	cmp    edi,0x7c
  4420d0:	xchg   esp,eax
  4420d1:	shl    DWORD PTR [edi-0x760001],1
  4420d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4420d8:	dec    ecx
  4420d9:	sub    BYTE PTR [ebp+0x0],dh
  4420dc:	mov    DWORD PTR [eax],eax
  4420de:	add    BYTE PTR [esi+ebp*4+0x89d13a],ch
  4420e5:	add    bh,bh
  4420e7:	shl    dl,1
  4420e9:	mov    al,0x77
  4420eb:	(bad)  
  4420ec:	(bad)  
  4420ed:	(bad)  
  4420ee:	push   DWORD PTR [eax-0xdf2f1a]
  4420f4:	inc    DWORD PTR [eax]
  4420f6:	add    al,ch
  4420f8:	lods   eax,DWORD PTR ds:[esi]
  4420f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4420fa:	(bad)  
  4420fb:	inc    DWORD PTR [eax]
  4420fd:	(bad)  
  4420fe:	(bad)  
  4420ff:	mov    esp,0x83578904
  442104:	mov    edi,edi
  442106:	call   FWORD PTR [esi-0x29]
  442109:	stos   BYTE PTR es:[edi],al
  44210a:	cmp    edi,0x520000ff
  442110:	xchg   ebp,eax
  442111:	sbb    dl,BYTE PTR [ecx-0x77]
  442114:	inc    DWORD PTR [eax]
  442116:	cmp    DWORD PTR [edx],0x77
  442119:	out    dx,eax
  44211a:	and    eax,0xffffffff
  44211f:	test   al,0x75
  442121:	or     BYTE PTR [esi],al
  442123:	dec    esp
  442125:	inc    DWORD PTR [eax]
  442127:	mov    dl,0xa8
  442129:	cmp    eax,0xff0000cc
  44212e:	add    BYTE PTR [esi+eiz*8-0x9],dh
  442132:	in     eax,dx
  442133:	int3   
  442134:	(bad)  
  442135:	(bad)  
  442136:	jmp    FWORD PTR ds:0x83954ac9
  44213c:	add    DWORD PTR [ebx+0x39d9e200],0x3b
  442143:	add    DWORD PTR [eax],0x0
  442146:	push   DWORD PTR [eax+0x4f]
  442149:	lods   eax,DWORD PTR ds:[esi]
  44214a:	fadd   QWORD PTR [eax]
  44214c:	mov    edi,edi
  44214e:	dec    DWORD PTR [edx]
  442150:	pop    edx
  442151:	lds    ecx,FWORD PTR [ecx-0xff0100]
  442157:	dec    esp
  442158:	xchg   ecx,eax
  442159:	xchg   esi,eax
  44215a:	aad    0x0
  44215c:	inc    DWORD PTR [eax]
  44215e:	call   DWORD PTR [ecx]
  442160:	push   0xffffffd0
  442162:	mov    edi,0xff008383
  442167:	(bad)  
  442168:	idiv   bl
  44216a:	jo     0x44216b
  44216c:	inc    DWORD PTR [eax]
  44216e:	int3   
  44216f:	sahf   
  442170:	push   cs
  442171:	enter  0xcc9c,0x89
  442175:	cmp    edi,0x47
  442178:	fdivr  QWORD PTR [eax]
  44217a:	inc    WORD PTR [ebx+0x50accff]
  442181:	mov    edi,ds
  442183:	cmp    edi,0xffffffff
  442186:	int3   
  442187:	hlt    
  442188:	xchg   BYTE PTR [esi],dl
  44218a:	fdivr  st,st(7)
  44218c:	inc    DWORD PTR [eax]
  44218e:	mov    DWORD PTR [edi-0x96a4f7],esi
  442194:	inc    DWORD PTR [eax]
  442196:	jmp    DWORD PTR [edi]
  442198:	and    DWORD PTR ds:0xffff0003,ebp
  44219e:	jmp    edi
  4421a0:	test   BYTE PTR [ecx],dh
  4421a2:	xchg   ebp,eax
  4421a3:	inc    DWORD PTR [eax]
  4421a5:	dec    esp
  4421a7:	jo     0x442181
  4421a9:	mov    ds,WORD PTR [ebx-0x7c01]
  4421af:	pop    ds
  4421b0:	or     BYTE PTR [ebx],0xb7
  4421b3:	add    DWORD PTR [eax],0xffffff83
  4421b6:	sub    ebp,0x3e
  4421b9:	xor    al,0x56
  4421bb:	cmp    edi,0xffffffff
  4421be:	add    BYTE PTR [edi+esi*4+0x893e42],bh
  4421c5:	(bad)  
  4421c6:	(bad)  
  4421c7:	jmp    0xff00:0xcc3597d1
  4421ce:	add    BYTE PTR [edx-0x53],cl
  4421d1:	mov    eax,edx
  4421d3:	(bad)  
  4421d4:	inc    DWORD PTR [ebx-0x759b000]
  4421da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4421db:	cmp    edi,0x0
  4421de:	(bad)  
  4421df:	jg     0x442204
  4421e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4421e2:	adc    al,0x0
  4421e4:	cmp    edi,0xffffffcc
  4421e7:	xor    ebx,DWORD PTR [edi]
  4421e9:	pop    eax
  4421ea:	sti    
  4421eb:	(bad)  
  4421ec:	(bad)  
  4421ed:	inc    DWORD PTR [ebx+0x50f1cde]
  4421f3:	(bad)  
  4421f4:	inc    DWORD PTR [eax]
  4421f6:	cmp    DWORD PTR [esp+eax*1],0x79
  4421fa:	sar    edi,0x0
  4421fd:	inc    DWORD PTR [eax]
  4421ff:	xchg   BYTE PTR [edi],al
  442201:	xchg   ebp,eax
  442202:	adc    al,BYTE PTR [eax]
  442204:	add    DWORD PTR [eax],0xffffff83
  442207:	stos   BYTE PTR es:[edi],al
  442208:	pop    ebp
  442209:	sbb    ebp,DWORD PTR [ecx-0x34]
  44220c:	add    ah,cl
  44220e:	mov    DWORD PTR [ecx-0x2f],eax
  442211:	mov    ecx,0x83ffff7f
  442216:	push   DWORD PTR [ecx-0x3a]
  442219:	and    bl,BYTE PTR [ebx-0x76000001]
  44221f:	and    edi,DWORD PTR [edi]
  442221:	jb     0x4421ba
  442223:	cmp    edi,0x0
  442226:	(bad)  
  442227:	cmp    eax,0x83b956a9
  44222c:	inc    DWORD PTR [eax]
  44222e:	int3   
  44222f:	pop    esi
  442230:	adc    BYTE PTR [edx],cl
  442232:	mov    bh,bh
  442234:	(bad)  
  442235:	(bad)  
  442236:	jmp    DWORD PTR [ecx-0xd3047a]
  44223c:	add    bh,bh
  44223e:	inc    DWORD PTR [ecx]
  442240:	repnz dec ecx
  442242:	int    0x0
  442244:	add    DWORD PTR [eax],0xffffffff
  442247:	sub    DWORD PTR [ecx+eax*1],ebx
  44224a:	fdivp  st(7),st
  44224c:	inc    DWORD PTR [eax]
  44224e:	int3   
  44224f:	and    ah,dh
  442251:	ins    BYTE PTR es:[edi],dx
  442252:	pop    es
  442253:	int3   
  442254:	add    BYTE PTR [ebx+0x2d6222ff],al
  44225a:	mov    ch,0xff
  44225c:	add    BYTE PTR [eax],al
  44225e:	or     DWORD PTR [eax-0x7a],0x76
  442262:	lods   eax,DWORD PTR ds:[esi]
  442263:	dec    DWORD PTR [ecx-0x68890001]
  442269:	cmp    al,0x40
  44226b:	add    bh,bh
  44226d:	int3   
  44226e:	add    BYTE PTR [edi],ah
  442270:	xchg   edi,eax
  442271:	std    
  442272:	sti    
  442273:	dec    esp
  442275:	(bad)  
  442276:	jmp    edi
  442278:	sub    edi,DWORD PTR [edi-0xff66]
  44227e:	add    BYTE PTR [esi+0x6b],cl
  442281:	retf   
  442282:	mov    esi,0xff00ff
  442287:	shr    BYTE PTR [esi+0x7a],0x7a
  44228b:	add    BYTE PTR [eax],al
  44228d:	inc    DWORD PTR [eax]
  44228f:	dec    ecx
  442290:	mov    ebp,0x83838d59
  442295:	add    DWORD PTR [ebx-0xb9cbb0c],0xffffffcc
  44229c:	(bad)  
  44229d:	(bad)  
  44229e:	(bad)  
  44229f:	(bad)  
  4422a0:	jl     0x442283
  4422a2:	ins    BYTE PTR es:[edi],dx
  4422a3:	dec    DWORD PTR [ecx-0xfbdff01]
  4422a9:	les    ecx,FWORD PTR [edi+edi*8]
  4422ac:	add    bh,bh
  4422ae:	call   DWORD PTR [ebp-0x42]
  4422b1:	aam    0xf8
  4422b3:	mov    DWORD PTR [eax],eax
  4422b5:	add    DWORD PTR [eax],0xffffffdd
  4422b8:	ds push cs
  4422ba:	les    eax,FWORD PTR [eax]
  4422bc:	inc    DWORD PTR [eax]
  4422be:	or     DWORD PTR [esi-0x3],0x1e
  4422c2:	rol    DWORD PTR [eax],0xcc
  4422c5:	mov    DWORD PTR [eax],eax
  4422c7:	push   eax
  4422c8:	xor    BYTE PTR [eax-0x11],bl
  4422cb:	add    bh,bh
  4422cd:	add    bh,bh
  4422cf:	jb     0x4422f7
  4422d1:	inc    eax
  4422d2:	xchg   ebp,eax
  4422d3:	(bad)  
  4422d4:	inc    DWORD PTR [eax]
  4422d6:	and    DWORD PTR [ecx-0x2d],0x54
  4422da:	out    dx,al
  4422db:	cmp    edi,0xffffff83
  4422de:	dec    DWORD PTR [eax-0x80]
  4422e1:	ret    
  4422e2:	add    BYTE PTR [ebx+0x90000ff],al
  4422e8:	or     al,0x5c
  4422ea:	push   ss
  4422eb:	cmp    edi,0x0
  4422ee:	xor    esp,0x60
  4422f1:	std    
  4422f2:	push   ecx
  4422f3:	inc    DWORD PTR [ebx-0x1255ff7d]
  4422f9:	les    edx,FWORD PTR [ebx]
  4422fb:	mov    DWORD PTR [eax],eax
  4422fd:	int3   
  4422fe:	(bad)  
  4422ff:	fist   WORD PTR [edx-0xff0103]
  442305:	add    DWORD PTR [ebx-0x1f766765],0xffffffcc
  44230c:	add    bh,bh
  44230e:	int3   
  44230f:	push   ss
  442310:	neg    DWORD PTR [esi+0x520089]
  442316:	add    bh,bh
  442318:	jmp    FWORD PTR [ebp-0x44]
  44231b:	mov    edi,edi
  44231d:	sbb    edi,esp
  44231f:	sub    DWORD PTR [ebx],0x6383002e
  442325:	(bad)  
  442326:	(bad)  
  442327:	dec    esp
  442329:	fwait
  44232a:	and    al,BYTE PTR [eax]
  44232c:	add    BYTE PTR [esi+0x7c],dl
  44232f:	test   ah,dl
  442331:	pop    eax
  442332:	(bad)  
  442333:	jmp    DWORD PTR [ebp+0xff89cc]
  442339:	mov    edx,0xfdff0026
  44233e:	fidiv  WORD PTR [esi-0x7c76efbf]
  442344:	sar    bh,1
  442346:	add    BYTE PTR [eax],al
  442348:	add    BYTE PTR [ecx],cl
  44234a:	jo     0x44234c
  44234c:	and    DWORD PTR [edx-0x3f1eefa5],0xffffffff
  442353:	int3   
  442354:	fild   DWORD PTR [ebx-0x31000034]
  44235a:	mov    edi,edi
  44235c:	and    DWORD PTR [eax-0x4badf085],0xffffffff
  442363:	xor    edx,0xffffff89
  442366:	inc    DWORD PTR [ebx-0x211d01]
  44236c:	inc    eax
  44236e:	call   0x1583:0xff342c66
  442375:	inc    DWORD PTR [ebx-0x7ebb0034]
  44237b:	inc    DWORD PTR [eax]
  44237d:	adc    BYTE PTR [edx],ch
  44237f:	xchg   esi,eax
  442380:	ins    DWORD PTR es:[edi],dx
  442381:	inc    ebp
  442382:	dec    esp
  442384:	outs   dx,BYTE PTR ds:[esi]
  442385:	inc    DWORD PTR [eax]
  442387:	add    bh,bh
  442389:	ret    
  44238a:	inc    esp
  44238b:	(bad)  
  44238c:	call   esi
  44238e:	hlt    
  44238f:	sub    eax,DWORD PTR [ecx+eiz*4-0x71ff01]
  442396:	inc    DWORD PTR [ebx-0xf63d01]
  44239c:	int3   
  44239d:	lods   eax,DWORD PTR ds:[esi]
  44239e:	loope  0x442348
  4423a0:	jecxz  0x442375
  4423a2:	add    bh,bh
  4423a4:	or     al,0x0
  4423a6:	add    BYTE PTR [ebx-0x76f1307d],al
  4423ac:	push   DWORD PTR [esi]
  4423ae:	les    edi,FWORD PTR [edx*4-0x3c767c63]
  4423b5:	inc    DWORD PTR [eax]
  4423b7:	inc    DWORD PTR [eax]
  4423b9:	fbstp  TBYTE PTR [ebx-0x10bcff7d]
  4423bf:	pusha  
  4423c0:	xchg   edx,eax
  4423c1:	es dec esp
  4423c4:	(bad)  
  4423c6:	dec    esp
  4423c8:	add    dl,ch
  4423ca:	add    eax,0x51d4ffff
  4423cf:	mov    al,0xf9
  4423d1:	sbb    al,0x0
  4423d3:	mov    DWORD PTR [esi-0x7d],ecx
  4423d6:	dec    DWORD PTR [ecx-0x946601]
  4423dc:	add    BYTE PTR [ebx+esi*8],ah
  4423df:	jl     0x44240a
  4423e1:	jecxz  0x4423e2
  4423e3:	inc    DWORD PTR [esi]
  4423e5:	add    DWORD PTR [eax],0x0
  4423e8:	push   DWORD PTR ds:0x4100ccce
  4423ee:	xlat   BYTE PTR ds:[ebx]
  4423ef:	sbb    DWORD PTR [ebx],edi
  4423f1:	fld    DWORD PTR [ebx+0xfff700]
  4423f7:	inc    DWORD PTR [eax]
  4423f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4423fa:	or     edi,edi
  4423fc:	add    BYTE PTR [ebp+0x66],al
  4423ff:	xor    al,0xfc
  442401:	idiv   edi
  442403:	mov    DWORD PTR [edi+edi*8-0x5600ff77],ecx
  44240a:	aam    0xff
  44240c:	sub    edi,0xffffff8b
  44240f:	mov    esp,0xff61cb
  442414:	mov    eax,ds:0xffff00
  442419:	enter  0xff8e,0xff
  44241d:	jg     0x4423f1
  44241f:	pop    eax
  442420:	jge    0x442495
  442422:	or     esp,0xffffffbc
  442425:	inc    DWORD PTR [eax]
  442427:	or     esp,0xffffffdf
  44242a:	addr16 add bh,bh
  44242d:	mov    WORD PTR [esi],ds
  44242f:	dec    edx
  442430:	inc    esp
  442431:	rol    BYTE PTR [eax],0x0
  442434:	inc    ebp
  442435:	add    bh,bh
  442437:	add    BYTE PTR [eax],al
  442439:	push   ecx
  44243a:	push   ebp
  44243b:	inc    DWORD PTR [eax]
  44243d:	(bad)  
  44243e:	mov    al,ds:0xffb758b7
  442443:	and    DWORD PTR [ecx-0x1],0xffffffff
  442447:	int3   
  442448:	add    BYTE PTR [ecx+eiz*2-0x52da3400],dh
  44244f:	fst    st(1)
  442451:	or     al,0xff
  442453:	add    cl,dl
  442455:	add    BYTE PTR [eax],al
  442457:	add    BYTE PTR [eax],al
  442459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44245a:	xchg   ebp,eax
  44245b:	mov    edi,edi
  44245d:	pop    esi
  44245e:	dec    ecx
  44245f:	add    DWORD PTR [edi-0x6600ff3e],esi
  442465:	add    BYTE PTR [eax],al
  442467:	cmp    edi,0x75
  44246a:	pusha  
  44246b:	(bad)  
  44246c:	(bad)  
  44246d:	out    dx,eax
  44246e:	jmp    0xa5ff:0x89d39249
  442475:	add    BYTE PTR [ecx+0x4f1e0000],cl
  44247b:	mov    DWORD PTR [eax],eax
  44247d:	jbe    0x4424ad
  44247f:	imul   edi,DWORD PTR [ebx-0xc00ff01],0xffffffff
  442489:	jno    0x44247e
  44248b:	(bad)  
  44248c:	(bad)  
  44248d:	in     al,dx
  44248e:	mov    esp,0xe3937c
  442493:	add    BYTE PTR [edx],al
  442495:	inc    DWORD PTR [eax]
  442497:	(bad)  
  442498:	jmp    esp
  44249a:	mov    ebp,0xafa48983
  44249f:	rcl    DWORD PTR [ebx+0x20],1
  4424a2:	(bad)  
  4424a3:	call   FWORD PTR [edx]
  4424a5:	(bad)  
  4424a6:	inc    DWORD PTR [eax]
  4424a8:	add    BYTE PTR [ecx-0x76c7],dh
  4424ae:	sahf   
  4424af:	out    0x42,al
  4424b1:	jg     0x4424b3
  4424b3:	sbb    DWORD PTR [ecx-0x1],0xffffffb7
  4424ba:	jb     0x4424bb
  4424bc:	int3   
  4424bd:	imul   ecx,DWORD PTR [edx+0x35],0xffa635
  4424c4:	cli    
  4424c5:	add    BYTE PTR [eax],al
  4424c7:	inc    DWORD PTR [eax]
  4424c9:	mov    ecx,ebp
  4424cb:	int3   
  4424cc:	(bad)  
  4424cd:	js     0x442458
  4424cf:	repnz cmp BYTE PTR [ecx],bl
  4424d2:	(bad)  
  4424d3:	jmp    FWORD PTR [ecx+0x838383]
  4424d9:	stos   BYTE PTR es:[edi],al
  4424da:	outs   dx,BYTE PTR ds:[esi]
  4424db:	add    DWORD PTR [eax],0x3c
  4424de:	mov    al,BYTE PTR [edx]
  4424e0:	jmp    0x442496
  4424e2:	add    bh,bh
  4424e4:	dec    edx
  4424e5:	add    BYTE PTR [ecx-0x31f0001],cl
  4424eb:	add    bh,bh
  4424ed:	push   ds
  4424ee:	adc    al,0x33
  4424f0:	dec    esi
  4424f1:	fld    DWORD PTR [eax]
  4424f3:	call   FWORD PTR [ebx+0x0]
  4424f6:	inc    DWORD PTR [eax]
  4424f8:	jmp    FWORD PTR [ecx]
  4424fa:	scas   al,BYTE PTR es:[edi]
  4424fb:	add    DWORD PTR [ebx+0x58f4ad92],0xfffffff9
  442502:	add    bh,bh
  442504:	xor    edi,edi
  442506:	inc    DWORD PTR [eax]
  442508:	int3   
  442509:	mov    ch,BYTE PTR [edx+0x50d389cc]
  44250f:	or     eax,esp
  442511:	rol    DWORD PTR [ebx-0x7c00c101],0xff
  442518:	int3   
  442519:	inc    esi
  44251a:	push   0xffffff83
  44251c:	(bad)  
  44251d:	mov    ebp,0x5550eb96
  442522:	dec    esp
  442524:	or     edi,edi
  442526:	inc    DWORD PTR [eax]
  442528:	mov    DWORD PTR [esi],eax
  44252a:	sar    edi,0xff
  44252d:	aam    0x3
  44252f:	jmp    0xfc:0xff00fc76
  442536:	(bad)  
  442537:	(bad)  
  442538:	call   FWORD PTR [esi+0x500ffb4]
  44253e:	das    
  44253f:	je     0x44258c
  442541:	jno    0x442542
  442543:	int3   
  442544:	sbb    bh,bh
  442546:	cmp    edi,0xffffffff
  442549:	mov    ecx,0x5b008315
  44254e:	and    DWORD PTR [ebp-0x31],ebp
  442551:	xor    al,0x83
  442553:	cmp    DWORD PTR [esi],0xffffff83
  442556:	(bad)  
  442557:	inc    DWORD PTR [eax]
  442559:	pop    eax
  44255a:	dec    edi
  44255b:	mov    DWORD PTR [eax],eax
  44255d:	mov    al,ds:0xa6c2e4ca
  442562:	(bad)  
  442563:	(bad)  
  442564:	mov    edi,0xff00cc
  442569:	adc    esp,DWORD PTR [ebp-0x1]
  44256c:	dec    DWORD PTR [eax-0x941735]
  442572:	add    DWORD PTR [eax],0x1d
  442575:	cmp    edi,0x0
  442578:	(bad)  
  442579:	cli    
  44257a:	retf   
  44257b:	add    BYTE PTR [ebx-0x30099d7f],al
  442581:	xchg   esp,eax
  442582:	dec    esp
  442584:	(bad)  
  442585:	(bad)  
  442586:	(bad)  
  442587:	inc    DWORD PTR [ebx-0xc492]
  44258d:	xlat   BYTE PTR ds:[ebx]
  44258e:	fsubr  QWORD PTR [esi]
  442590:	adc    esi,0xff6d8300
  442596:	add    bh,bh
  442598:	add    BYTE PTR [edi-0x29],dl
  44259b:	add    BYTE PTR [ebx-0x2c8f8919],al
  4425a1:	call   0xcc00:0xcccb8300
  4425a8:	mov    DWORD PTR [eax+0x54],esi
  4425ab:	(bad)  
  4425ac:	inc    DWORD PTR [ebp+0x1a2f5623]
  4425b2:	cmp    edi,0xffffff9a
  4425b5:	(bad)  
  4425b6:	(bad)  
  4425b7:	dec    DWORD PTR [ecx-0x7cbbbe]
  4425bd:	lods   al,BYTE PTR ds:[esi]
  4425be:	push   es
  4425bf:	pop    ss
  4425c0:	cmp    eax,DWORD PTR [ebx-0x7c560100]
  4425c6:	inc    DWORD PTR [eax]
  4425c8:	int3   
  4425c9:	bound  ebp,QWORD PTR [edx]
  4425cb:	(bad)  
  4425cc:	inc    ecx
  4425ce:	test   eax,ecx
  4425d0:	ret    
  4425d1:	cmp    bh,0xff
  4425d4:	in     al,dx
  4425d5:	inc    DWORD PTR [eax]
  4425d7:	(bad)  
  4425d8:	inc    DWORD PTR [ebp+0x7f830034]
  4425de:	adc    bl,dl
  4425e0:	bound  esi,QWORD PTR [esi]
  4425e2:	add    bh,bh
  4425e4:	jns    0x4425e5
  4425e6:	inc    DWORD PTR [eax]
  4425e8:	int3   
  4425e9:	pop    edx
  4425ea:	ret    0xcc
  4425ed:	lea    ebp,[ebp-0x7c4a691d]
  4425f3:	(bad)  
  4425f4:	fcos   
  4425f6:	add    BYTE PTR [eax],al
  4425f8:	or     esi,0xffffff86
  4425fb:	dec    DWORD PTR [ecx-0x2018ef4f]
  442601:	mov    bh,bh
  442603:	(bad)  
  442604:	mov    edi,0xccff00
  442609:	ja     0x442609
  44260b:	dec    esp
  44260d:	pushf  
  44260e:	sub    eax,DWORD PTR [esi-0xe1bb]
  442614:	popa   
  442615:	add    bh,bh
  442617:	inc    DWORD PTR [eax]
  442619:	xor    dl,BYTE PTR [edi-0x1]
  44261c:	add    BYTE PTR [edi-0x1c2b590c],dl
  442622:	inc    DWORD PTR [eax]
  442624:	call   0xe8ad:0xff0000
  44262b:	add    DWORD PTR [ebx+0x384b21a5],0x6
  442632:	add    DWORD PTR [ebx-0x334d],0xffffffff
  442639:	lea    ebx,[edi+edi*8-0x77]
  44263d:	cmp    bl,BYTE PTR [edi]
  44263f:	(bad)  
  442640:	fisttp DWORD PTR [ebp-0x4fff01]
  442646:	add    bh,bh
  442648:	(bad)  
  442649:	fild   DWORD PTR [esi-0x77]
  44264c:	add    BYTE PTR [edi],dl
  44264e:	adc    al,0x56
  442650:	test   eax,0x8a008317
  442655:	add    bh,bh
  442657:	add    BYTE PTR [ebx-0x33ff51e1],al
  44265d:	push   esp
  44265e:	nop
  44265f:	mov    ah,0xc8
  442661:	in     al,dx
  442662:	mov    DWORD PTR [eax],eax
  442664:	dec    eax
  442665:	add    bh,bh
  442667:	add    bh,bh
  442669:	pop    ebp
  44266a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  44266b:	(bad)  
  44266c:	inc    ebx
  44266e:	or     dl,ah
  442670:	leave  
  442671:	or     eax,0x83fd8300
  442676:	inc    DWORD PTR [ebx-0x7c059901]
  44267c:	jmp    FWORD PTR [esi]
  44267e:	cmp    cl,BYTE PTR gs:[ecx-0x7affff9c]
  442685:	cmp    edi,0x0
  442688:	add    DWORD PTR [edx+0x37],0xffffffff
  44268c:	xor    DWORD PTR [esi],0xffffff9e
  44268f:	push   edi
  442690:	fcomp  QWORD PTR [esi]
  442692:	add    DWORD PTR [eax],0xffffffed
  442695:	mov    DWORD PTR [eax],eax
  442697:	int3   
  442698:	jmp    FWORD PTR [esi-0x2c]
  44269b:	add    bh,bh
  44269d:	sbb    edx,0x83222b70
  4426a3:	xor    DWORD PTR [edx],0xffffffcc
  4426a6:	add    bh,bh
  4426a8:	int3   
  4426a9:	(bad)  
  4426aa:	ror    ah,cl
  4426ac:	add    BYTE PTR [ebp-0x72],ch
  4426af:	cld    
  4426b0:	adc    BYTE PTR ds:0xcc508300,dl
  4426b6:	(bad)  
  4426b7:	(bad)  
  4426b8:	(bad)  
  4426b9:	sti    
  4426ba:	mov    ah,0xff
  4426bc:	call   DWORD PTR [eax+0x16]
  4426bf:	sbb    al,0xf8
  4426c1:	(bad)  
  4426c2:	(bad)  
  4426c3:	(bad)  
  4426c4:	fld    DWORD PTR [ebx-0x4700ff34]
  4426ca:	push   ss
  4426cb:	add    BYTE PTR [ebx-0x3f8bf61b],al
  4426d1:	inc    edi
  4426d2:	add    BYTE PTR [eax],al
  4426d4:	jb     0x442659
  4426d6:	add    DWORD PTR [ebx+0x6a74ff],0xffffff83
  4426dd:	jmp    DWORD PTR ds:0x19ba23
  4426e3:	xor    DWORD PTR [ebp-0xffff01],0xfffffff3
  4426ea:	rol    DWORD PTR [eax],0x0
  4426ed:	add    BYTE PTR [ebx],dh
  4426ef:	test   BYTE PTR [ebx],ah
  4426f1:	xor    eax,DWORD PTR [eax]
  4426f3:	add    BYTE PTR [edx-0x34],cl
  4426f6:	int3   
  4426f7:	add    bh,bh
  4426f9:	pushf  
  4426fa:	pop    ss
  4426fb:	add    bh,bh
  4426fd:	and    bh,0x3a
  442700:	ror    edx,1
  442702:	inc    DWORD PTR [eax]
  442704:	add    eax,DWORD PTR [eax]
  442706:	add    DWORD PTR [eax],0xffffffff
  442709:	rol    BYTE PTR [esi],cl
  44270b:	int3   
  44270c:	call   DWORD PTR [eax-0x7953e5e3]
  442712:	int3   
  442713:	add    BYTE PTR [edx-0x7d],bh
  442716:	add    bh,bh
  442718:	or     DWORD PTR [edx],0xffffffbf
  44271b:	add    BYTE PTR [eax],al
  44271d:	jnp    0x4426be
  44271f:	in     al,dx
  442720:	or     al,0x3d
  442722:	add    BYTE PTR [ecx+0xff0077],cl
  442728:	call   DWORD PTR [eax+0x70]
  44272b:	inc    DWORD PTR [ebx+0x5359ec7b]
  442731:	jb     0x4426b6
  442733:	int3   
  442734:	popa   
  442735:	add    bh,bh
  442737:	int3   
  442738:	add    BYTE PTR [ecx-0x36],bh
  44273b:	int3   
  44273c:	and    DWORD PTR [edi+0x19e266f2],0x0
  442743:	add    BYTE PTR [edi-0xff0001],al
  442749:	fsubr  st,st(6)
  44274b:	add    bh,bh
  44274d:	stos   BYTE PTR es:[edi],al
  44274e:	push   0xff2838ec
  442753:	call   FWORD PTR [ecx]
  442755:	(bad)  
  442756:	dec    esp
  442758:	add    BYTE PTR [ebx-0x5cffffe4],ch
  44275e:	and    BYTE PTR [edi+0x1b],cl
  442761:	dec    edi
  442762:	dec    DWORD PTR [ecx-0x7c330093]
  442768:	add    BYTE PTR [edx-0x3aff7cf4],al
  44276e:	sub    DWORD PTR [esi+0x0],edx
  442771:	fild   WORD PTR [ebx+0xff35ff]
  442777:	inc    DWORD PTR [eax]
  442779:	add    al,0xf9
  44277b:	add    bh,bh
  44277d:	xchg   ebx,eax
  44277e:	ds fwait
  442780:	pushf  
  442781:	adc    al,0xff
  442783:	add    DWORD PTR [eax],0xffffff83
  442786:	inc    DWORD PTR [eax]
  442788:	inc    edi
  44278a:	test   esp,0x5e25ef00
  442790:	imul   ebx,DWORD PTR [esi+0x0],0xffff42ff
  442797:	mov    edi,edi
  442799:	int    0xa2
  44279b:	(bad)  
  44279c:	jmp    DWORD PTR ds:0x4bd70910
  4427a2:	cmp    edi,0xffffffdc
  4427a5:	add    DWORD PTR [eax],0xffffffff
  4427a8:	call   ebx
  4427aa:	loope  0x442778
  4427ac:	mov    ebp,ebx
  4427ae:	lahf   
  4427af:	push   esp
  4427b0:	bound  esp,QWORD PTR [ebp-0x7d]
  4427b3:	add    ch,cl
  4427b5:	cmp    edi,0xffffffcc
  4427b8:	call   FWORD PTR [esp+esi*4+0x5e55ffff]
  4427bf:	dec    ecx
  4427c0:	outs   dx,DWORD PTR ds:[esi]
  4427c1:	push   ss
  4427c2:	(bad)  
  4427c3:	call   FWORD PTR [edi-0xff007d]
  4427c9:	sub    BYTE PTR [ebx-0x1],ch
  4427cc:	add    BYTE PTR [edi+0x2dda5220],ah
  4427d2:	inc    DWORD PTR [eax]
  4427d4:	add    BYTE PTR cs:[eax],al
  4427d7:	or     esp,0x1d
  4427da:	pop    edx
  4427db:	mov    edi,edi
  4427dd:	mov    bl,0x6
  4427df:	test   ebx,esp
  4427e1:	ins    DWORD PTR es:[edi],dx
  4427e2:	dec    DWORD PTR [ecx+0xff84]
  4427e8:	jmp    DWORD PTR [edi]
  4427ea:	push   esi
  4427eb:	add    BYTE PTR [ebx-0x346bf2e6],al
  4427f1:	nop
  4427f2:	add    bh,bh
  4427f4:	or     eax,DWORD PTR [eax]
  4427f6:	add    bh,bh
  4427f8:	add    BYTE PTR [edx-0x3b],ah
  4427fb:	int3   
  4427fc:	or     DWORD PTR [ecx+0x60],0x50
  442800:	aaa    
  442801:	jne    0x44278c
  442803:	int3   
  442804:	outs   dx,DWORD PTR ds:[esi]
  442805:	mov    esp,ecx
  442807:	add    bh,bh
  442809:	sub    BYTE PTR [eax+0x0],0xff
  44280d:	inc    edx
  44280e:	loope  0x4427ef
  442810:	mov    bh,0x69
  442812:	add    ah,cl
  442814:	inc    esp
  442815:	add    DWORD PTR [eax],0xffffffff
  442818:	add    BYTE PTR [edx+esi*2-0x604d0100],dh
  44281f:	mov    ?,WORD PTR [edx+0x38]
  442822:	inc    DWORD PTR [eax]
  442824:	in     eax,dx
  442825:	(bad)  
  442826:	inc    DWORD PTR [ebx+0xdd60cc]
  44282c:	jmp    FWORD PTR ds:0x4c1a45d3
  442832:	dec    DWORD PTR [ecx-0x31]
  442838:	add    BYTE PTR [edx-0x58ff00cc],dl
  44283e:	ret    
  44283f:	pop    DWORD PTR [eax]
  442841:	out    dx,al
  442842:	mov    edi,edi
  442844:	retf   0xff00
  442847:	mov    edi,edi
  442849:	aaa    
  44284a:	jmp    0x4732274f
  44284f:	jno    0x442829
  442851:	add    al,0x0
  442853:	jmp    FWORD PTR [eax+eax*1+0x0]
  442857:	inc    DWORD PTR [ebx+0x6e06]
  44285d:	jmp    0x15f27f42
  442862:	add    bh,bh
  442864:	xor    al,0xff
  442866:	(bad)  
  442867:	inc    DWORD PTR [eax]
  442869:	ja     0x44281d
  44286b:	(bad)  
  44286c:	(bad)  
  44286d:	jg     0x442833
  44286f:	lock imul ebx,DWORD PTR [edx],0xff19ffff
  442876:	cmp    edi,0xffffffff
  442879:	outs   dx,BYTE PTR ds:[esi]
  44287a:	pusha  
  44287b:	add    bh,bh
  44287d:	fmul   st,st(2)
  44287f:	push   edx
  442880:	lods   al,BYTE PTR ds:[esi]
  442881:	xlat   BYTE PTR ds:[ebx]
  442882:	mov    edi,edi
  442884:	into   
  442885:	mov    DWORD PTR [ecx-0x69e97d00],ecx
  44288b:	int3   
  44288c:	(bad)  
  44288d:	mov    eax,0xdc81036c
  442892:	inc    DWORD PTR [eax]
  442894:	popf   
  442895:	dec    DWORD PTR [ecx-0x663e0000]
  44289b:	int3   
  44289c:	or     DWORD PTR [ebx+0x201acff3],0x0
  4428a3:	add    BYTE PTR [ebp-0xffff01],cl
  4428a9:	or     bh,BYTE PTR [eax+0x737bff00]
  4428af:	xchg   edi,eax
  4428b0:	mov    eax,es:0xd0ffff
  4428b6:	add    ah,cl
  4428b8:	cmp    DWORD PTR [ebp+0x70],0xffffff83
  4428bc:	mov    DWORD PTR [ecx-0x7f28c4fa],edx
  4428c2:	add    bh,bh
  4428c4:	test   BYTE PTR [ebx+0x7effff00],al
  4428ca:	mov    dh,0x0
  4428cc:	or     esi,0xffffffac
  4428cf:	neg    BYTE PTR [ebx]
  4428d1:	push   esi
  4428d2:	add    DWORD PTR [ebx+0xffccdc],0xffffffff
  4428d9:	shr    BYTE PTR [eax],cl
  4428db:	add    bh,bh
  4428dd:	js     0x4428e0
  4428df:	pop    eax
  4428e0:	mov    edi,0xcbffff4a
  4428e5:	inc    DWORD PTR [eax]
  4428e7:	add    BYTE PTR [eax],al
  4428e9:	fld    TBYTE PTR [edi]
  4428eb:	add    bh,bh
  4428ed:	popa   
  4428ee:	(bad)  
  4428ef:	pop    edx
  4428f0:	xchg   edi,eax
  4428f1:	or     edi,edi
  4428f3:	(bad)  
  4428f4:	sti    
  4428f5:	inc    DWORD PTR [eax]
  4428f7:	inc    DWORD PTR [eax]
  4428f9:	jl     0x4428e1
  4428fb:	inc    DWORD PTR [eax]
  4428fd:	ins    BYTE PTR es:[edi],dx
  4428fe:	cmp    eax,0x310b3b
  442903:	call   DWORD PTR [ebx-0x76337d00]
  442909:	stos   DWORD PTR es:[edi],eax
  44290a:	test   BYTE PTR [ebx-0x4f52b00],al
  442910:	dec    esi
  442911:	pop    ebp
  442912:	mov    DWORD PTR [ebx-0x33ffa7],eax
  442918:	add    BYTE PTR [esi],al
  44291a:	pop    ebx
  44291b:	dec    DWORD PTR [ecx-0x3ba3690a]
  442921:	lock (bad) 
  442923:	dec    DWORD PTR [ebx+eax*4]
  442926:	add    BYTE PTR [eax],al
  442928:	add    BYTE PTR [ebx],ch
  44292a:	mov    dh,0x0
  44292c:	(bad)  
  44292d:	out    dx,eax
  44292e:	aas    
  44292f:	push   edi
  442930:	lea    eax,[esi]
  442932:	inc    DWORD PTR [eax]
  442934:	test   BYTE PTR [eax],al
  442936:	(bad)  
  442937:	dec    esp
  442939:	inc    edi
  44293a:	inc    ebx
  44293b:	add    DWORD PTR [eax],0x6f
  44293e:	mov    ecx,0xff13bbe9
  442943:	call   DWORD PTR [ecx-0x1]
  442946:	add    DWORD PTR [eax],0x0
  442949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44294a:	jl     0x44294c
  44294c:	add    cl,dh
  44294e:	cmp    ebp,DWORD PTR [edi]
  442950:	xchg   DWORD PTR [edi-0x8b0001],edx
  442956:	inc    DWORD PTR [eax]
  442958:	dec    DWORD PTR ds:0x3283ff08
  44295e:	int    0x37
  442960:	push   es
  442961:	mov    al,0xff
  442963:	jmp    DWORD PTR [ebx-0x34]
  442966:	add    bh,bh
  442968:	jmp    FWORD PTR [edx+0x15]
  44296b:	inc    DWORD PTR [eax]
  44296d:	in     eax,0xeb
  44296f:	fild   DWORD PTR [ebp-0x1d]
  442972:	int3   
  442973:	jmp    esp
  442975:	(bad)  
  442976:	(bad)  
  442977:	dec    esp
  442979:	cli    
  44297a:	add    eax,0xfe9f0000
  44297f:	mov    cl,0x4e
  442981:	dec    esp
  442982:	(bad)  
  442983:	jmp    DWORD PTR [eax+eax*1-0x7d]
  442987:	inc    DWORD PTR [ebx+0xff7438]
  44298d:	mov    fs,WORD PTR [edi-0xd5ca27]
  442993:	call   FWORD PTR [edx-0x77]
  442996:	cmp    edi,0xffffffff
  442999:	pop    esi
  44299a:	je     0x44299c
  44299c:	add    BYTE PTR [eax+0x7e],ah
  44299f:	cli    
  4429a0:	cmp    eax,0x31ffff6b
  4429a5:	(bad)  
  4429a6:	(bad)  
  4429a7:	(bad)  
  4429a8:	push   eax
  4429aa:	xor    al,BYTE PTR [eax]
  4429ac:	mov    DWORD PTR [eax],edi
  4429ae:	adc    al,al
  4429b0:	sub    cl,BYTE PTR [ebp-0x77]
  4429b3:	dec    DWORD PTR [edx]
  4429b5:	(bad)  
  4429b6:	(bad)  
  4429b7:	inc    DWORD PTR [eax]
  4429b9:	cmc    
  4429ba:	(bad)  
  4429bb:	inc    DWORD PTR [eax]
  4429bd:	or     BYTE PTR [edi+0x4d],ch
  4429c0:	xor    BYTE PTR [edx+0xc30000],bl
  4429c6:	add    bh,bh
  4429c8:	add    BYTE PTR [ebp+ebx*4-0x1],cl
  4429cc:	jmp    FWORD PTR [ecx-0x5e977cde]
  4429d2:	cmp    edi,0xffffff95
  4429d5:	inc    DWORD PTR [eax]
  4429d7:	dec    esp
  4429d9:	imul   ecx,ecx,0xffffffff
  4429dc:	or     DWORD PTR [esi],0x38
  4429df:	mov    bl,0x95
  4429e1:	mov    eax,ds:0x89d083ff
  4429e6:	mov    esp,ecx
  4429e8:	int3   
  4429e9:	or     ecx,DWORD PTR [esi+0xfd800cc]
  4429ef:	stc    
  4429f0:	int3   
  4429f1:	mov    al,BYTE PTR [eax]
  4429f3:	(bad)  
  4429f4:	js     0x4429c2
  4429f6:	add    BYTE PTR [eax],al
  4429f8:	add    BYTE PTR [ebp-0x28],bl
  4429fb:	add    BYTE PTR [eax],al
  4429fd:	pop    esi
  4429fe:	xor    DWORD PTR [edi+eax*2+0x6800899e],ebp
  442a05:	dec    esp
  442a07:	inc    DWORD PTR [ebx-0x9e5f]
  442a0d:	pop    edx
  442a0e:	cdq    
  442a0f:	mov    ecx,0x83895ad0
  442a14:	xchg   DWORD PTR [ebx-0x367c0034],eax
  442a1a:	scas   eax,DWORD PTR es:[edi]
  442a1b:	inc    DWORD PTR [eax]
  442a1d:	jg     0x4429f9
  442a1f:	aam    0x91
  442a21:	dec    esp
  442a22:	add    BYTE PTR [eax],al
  442a24:	bound  eax,QWORD PTR [eax]
  442a26:	dec    esp
  442a28:	add    BYTE PTR [edi-0x3e],bl
  442a2b:	add    BYTE PTR [ebx+0x597f0a4c],al
  442a31:	mov    bh,bh
  442a33:	and    edi,0xffffffff
  442a36:	add    bh,bh
  442a38:	(bad)  
  442a39:	fisubr DWORD PTR [ecx-0x1]
  442a3c:	add    BYTE PTR [ebx-0x59],ch
  442a3f:	in     eax,0xe
  442a41:	ins    BYTE PTR es:[edi],dx
  442a42:	(bad)  
  442a43:	call   edx
  442a45:	add    DWORD PTR [ebx+0x5ded00cc],0xffffffff
  442a4c:	(bad)  
  442a4d:	std    
  442a4e:	mov    ah,0xb
  442a50:	jmp    0x442a4c
  442a52:	(bad)  
  442a53:	(bad)  
  442a54:	inc    DWORD PTR [eax]
  442a56:	add    DWORD PTR [eax],0xffffffff
  442a59:	and    al,0x0
  442a5b:	dec    DWORD PTR [ecx+0x1943e3e1]
  442a61:	in     al,dx
  442a62:	(bad)  
  442a63:	inc    DWORD PTR [esi]
  442a65:	int3   
  442a66:	add    bh,bh
  442a68:	(bad)  
  442a69:	cmp    cl,al
  442a6b:	inc    DWORD PTR [eax]
  442a6d:	xchg   esp,eax
  442a6e:	adc    BYTE PTR [ebx],dh
  442a70:	aas    
  442a71:	mov    al,ds:0x3eff00
  442a76:	add    BYTE PTR [eax],al
  442a78:	add    BYTE PTR [edi-0x4e],dl
  442a7b:	(bad)  
  442a7c:	call   DWORD PTR [ebx]
  442a7e:	mov    dh,0xc8
  442a80:	xchg   ecx,eax
  442a81:	jb     0x442a83
  442a83:	mov    DWORD PTR [ebp-0x77],edx
  442a86:	inc    DWORD PTR [eax]
  442a88:	add    bl,bh
  442a8a:	(bad)  
  442a8c:	add    dh,dl
  442a8e:	mov    cl,0x1
  442a90:	xor    edi,eax
  442a92:	(bad)  
  442a93:	dec    DWORD PTR [eax]
  442a95:	(bad)  
  442a96:	(bad)  
  442a97:	(bad)  
  442a98:	jmp    DWORD PTR [edi+esi*2-0x1]
  442a9c:	add    dh,ah
  442a9e:	add    al,0x4b
  442aa0:	inc    edi
  442aa1:	rol    BYTE PTR [ebx-0x8d00],1
  442aa7:	add    BYTE PTR [ebx+0xff99c3],al
  442aad:	mov    BYTE PTR [eax+0x34],ch
  442ab0:	out    0x6c,eax
  442ab2:	or     esp,0xffffff96
  442ab5:	add    DWORD PTR [eax],0xffffffff
  442ab8:	add    BYTE PTR [esi+0x4aff004e],dl
  442abe:	and    BYTE PTR [edi],dh
  442ac0:	shl    BYTE PTR [edi-0x7cc60100],cl
  442ac6:	cmp    edi,0x0
  442ac9:	loopne 0x442b11
  442acb:	dec    DWORD PTR [ecx+0x2a46c598]
  442ad1:	scas   eax,DWORD PTR es:[edi]
  442ad2:	add    DWORD PTR [eax],0x7b
  442ad5:	add    BYTE PTR [eax],al
  442ad7:	add    DWORD PTR [ebx+0x834575],0x17
  442ade:	jmp    0x7e00:0x83f696cb
  442ae5:	add    bh,bh
  442ae7:	cmp    edi,0xffffffec
  442aea:	sub    al,0xff
  442aec:	add    bl,ah
  442aee:	inc    esp
  442aef:	jo     0x442a9c
  442af1:	repz (bad) 
  442af3:	dec    DWORD PTR [eax+eax*1]
  442af6:	int3   
  442af7:	inc    DWORD PTR [eax]
  442af9:	idiv   DWORD PTR [edx+0x2fcb8300]
  442aff:	cmp    BYTE PTR [ebx+ecx*2+0x0],0x0
  442b04:	and    bh,bh
  442b06:	add    BYTE PTR [eax],al
  442b08:	add    BYTE PTR [ebx-0x637c0025],bh
  442b0e:	int    0x6f
  442b10:	xor    al,0xd8
  442b12:	add    BYTE PTR [eax],al
  442b14:	ret    0xcc00
  442b17:	cmp    edi,0x6f
  442b1a:	fld    QWORD PTR [eax]
  442b1c:	jmp    DWORD PTR [ebx]
  442b1e:	push   0xa80c67
  442b23:	int3   
  442b24:	mov    esi,0xccffff00
  442b29:	sahf   
  442b2a:	jp     0x442b2b
  442b2c:	add    BYTE PTR [edi],ch
  442b2e:	out    0xd7,al
  442b30:	mov    ch,0xb8
  442b32:	dec    DWORD PTR [ecx+0xffffbd]
  442b38:	add    BYTE PTR [eax-0x32],ch
  442b3b:	mov    DWORD PTR [eax],eax
  442b3d:	es ss mov edi,0xffff2f12
  442b44:	jne    0x442b46
  442b46:	(bad)  
  442b47:	inc    DWORD PTR [eax]
  442b49:	sub    al,0x8b
  442b4b:	add    bh,bh
  442b4d:	std    
  442b4e:	jo     0x442b0c
  442b50:	(bad)
  442b54:	loope  0x442b56
  442b56:	add    bh,bh
  442b58:	call   DWORD PTR [esi+0x26]
  442b5b:	add    BYTE PTR [eax],al
  442b5d:	or     eax,0x9dbccd8b
  442b62:	add    BYTE PTR [eax],al
  442b64:	dec    esp
  442b65:	inc    DWORD PTR [ebx+0x31048300]
  442b6b:	add    BYTE PTR [ecx-0x56a63e36],cl
  442b71:	add    BYTE PTR [ecx+0xff05ff],cl
  442b77:	mov    esp,ecx
  442b79:	sti    
  442b7a:	cld    
  442b7b:	cmp    edi,0xffffffdd
  442b7e:	sub    eax,0xffa08cbf
  442b83:	inc    DWORD PTR [edx]
  442b85:	add    BYTE PTR [ebx+0x63daff83],al
  442b8b:	(bad)  
  442b8c:	(bad)  
  442b8d:	jns    0x442be8
  442b8f:	or     BYTE PTR [edi+0x2600fffa],dl
  442b95:	add    bh,bh
  442b97:	inc    DWORD PTR [ebx-0x7ca6f7]
  442b9d:	xor    esp,edx
  442b9f:	mov    bl,BYTE PTR [ebx]
  442ba1:	bswap  esp
  442ba3:	xor    DWORD PTR [edi+0x0],0x0
  442ba7:	cmp    edi,0xfffffffa
  442baa:	mov    ebx,0xb08f00ff
  442baf:	dec    ebx
  442bb0:	jmp    0xff00:0x4c00ff1c
  442bb7:	inc    DWORD PTR [eax]
  442bb9:	jne    0x442b3b
  442bbb:	(bad)  
  442bbc:	call   ecx
  442bbe:	bound  esi,QWORD PTR [ecx-0xff13e8]
  442bc4:	push   ebx
  442bc5:	cmp    edi,0x0
  442bc8:	int3   
  442bc9:	out    dx,eax
  442bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  442bcb:	add    BYTE PTR [ecx+0x2882e1ad],cl
  442bd1:	aam    0xff
  442bd3:	add    DWORD PTR [edx-0x76ff01],0x18
  442bda:	sub    al,0xcc
  442bdc:	mov    edx,edi
  442bde:	ret    
  442bdf:	fisttp DWORD PTR [eax]
  442be1:	lods   al,BYTE PTR ds:[esi]
  442be2:	cmp    edi,0x3f
  442be5:	(bad)  
  442be6:	(bad)  
  442be7:	(bad)  
  442be8:	jmp    ebp
  442bea:	pop    esp
  442beb:	dec    DWORD PTR [ecx-0x73c51348]
  442bf1:	push   es
  442bf2:	(bad)  
  442bf3:	dec    DWORD PTR [eax+eax*1-0x447c0100]
  442bfa:	mov    bl,0xff
  442bfc:	call   FWORD PTR ds:0xa588544f
  442c02:	(bad)  
  442c03:	dec    DWORD PTR [ebp+0xffffff]
  442c09:	retf   0x5e
  442c0c:	add    BYTE PTR [esi],al
  442c0e:	shl    BYTE PTR [edi],1
  442c10:	jne    0x442c17
  442c12:	add    DWORD PTR [eax],0xffffffc2
  442c15:	cmp    edi,0xffffff83
  442c18:	mov    DWORD PTR [ecx-0x13],ebx
  442c1b:	add    bh,bh
  442c1d:	push   ebp
  442c1e:	lds    edx,FWORD PTR ss:[edi]
  442c21:	fild   DWORD PTR [eax]
  442c23:	inc    DWORD PTR [ebx-0x76007c01]
  442c29:	or     DWORD PTR ds:0xd622ffff,0xff6e3d39
  442c33:	mov    edx,esi
  442c35:	add    DWORD PTR [ebx-0x3c117c7d],0xffffffff
  442c3c:	jmp    FWORD PTR [edi+ebp*2]
  442c3f:	loop   0x442cae
  442c41:	test   al,0x0
  442c43:	call   FWORD PTR [esi-0x33000001]
  442c49:	jge    0x442be3
  442c4b:	add    bh,bh
  442c4d:	xchg   BYTE PTR ds:0xff804295,bl
  442c53:	jmp    esp
  442c55:	add    BYTE PTR [ebx-0x2a5cff7d],al
  442c5b:	add    bh,bh
  442c5d:	xchg   BYTE PTR [eax],ch
  442c5f:	cs sub esp,esi
  442c62:	(bad)  
  442c63:	jmp    FWORD PTR [ecx-0x1]
  442c66:	inc    DWORD PTR [eax]
  442c68:	(bad)  
  442c69:	aas    
  442c6a:	adc    BYTE PTR [eax],al
  442c6c:	(bad)  
  442c6d:	cmp    al,BYTE PTR [ebx]
  442c6f:	lods   al,BYTE PTR ds:[esi]
  442c70:	sbb    al,0x3b
  442c72:	(bad)  
  442c73:	inc    DWORD PTR [edi+edi*8]
  442c76:	add    BYTE PTR [eax],al
  442c78:	int3   
  442c79:	mov    ebx,0x3a0000aa
  442c7e:	pop    edi
  442c7f:	xchg   ebx,eax
  442c80:	mov    al,0x48
  442c82:	inc    DWORD PTR [eax]
  442c84:	inc    DWORD PTR fs:[eax]
  442c87:	mov    DWORD PTR [eax],eax
  442c89:	jp     0x442c94
  442c8b:	(bad)  
  442c8c:	jmp    DWORD PTR ds:0xd378c248
  442c92:	inc    DWORD PTR [eax]
  442c94:	cmp    eax,0xffffff00
  442c99:	fdiv   DWORD PTR [ebx-0x76f7601]
  442c9f:	iret   
  442ca0:	sar    ch,0x0
  442ca3:	add    BYTE PTR ds:0xff000083,dl
  442ca9:	call   0xbdc72cf3
  442cae:	out    dx,eax
  442caf:	sti    
  442cb0:	inc    esp
  442cb1:	xchg   edi,eax
  442cb2:	add    BYTE PTR [ecx-0x76ff69],cl
  442cb8:	int3   
  442cb9:	jno    0x442c3f
  442cbb:	(bad)  
  442cbc:	call   DWORD PTR [ebx-0x1b]
  442cbf:	sbb    eax,0xff00ac91
  442cc4:	mov    al,ds:0xcc
  442cc9:	cmp    ah,0x0
  442ccc:	xor    DWORD PTR [ebx+0x47f83c86],0xffffffcc
  442cd3:	add    bl,cl
  442cd5:	inc    DWORD PTR [ebx+0x75e700ff]
  442cdb:	add    bh,bh
  442cdd:	dec    ebx
  442cde:	adc    BYTE PTR [edi*4-0x6dffff99],bh
  442ce5:	add    BYTE PTR [eax],al
  442ce7:	(bad)  
  442ce8:	jmp    DWORD PTR [edx-0x3f]
  442ceb:	add    DWORD PTR [ebx+0x439216d9],0x2d
  442cf2:	add    DWORD PTR [eax],0x61
  442cf5:	add    BYTE PTR [eax],al
  442cf7:	inc    DWORD PTR [eax]
  442cf9:	push   cs
  442cfa:	idiv   bh
  442cfc:	add    BYTE PTR [ebx],bh
  442cfe:	dec    edx
  442cff:	das    
  442d00:	inc    esp
  442d01:	pop    ebx
  442d02:	add    bh,bh
  442d04:	cmp    eax,0xffff00ff
  442d09:	inc    esp
  442d0a:	sar    bh,0x89
  442d0d:	iret   
  442d0e:	or     ah,cl
  442d10:	jno    0x442d4d
  442d12:	int3   
  442d13:	dec    ebp
  442d15:	cmp    edi,0xffffffff
  442d18:	jmp    FWORD PTR [ebp-0x1e]
  442d1b:	dec    esp
  442d1d:	inc    edi
  442d1e:	shl    BYTE PTR [eax-0x760027e4],0x78
  442d25:	(bad)  
  442d26:	inc    DWORD PTR [eax]
  442d28:	jmp    FWORD PTR ds:0x77ffffd3
  442d2e:	out    dx,eax
  442d2f:	scas   al,BYTE PTR es:[edi]
  442d30:	bswap  edi
  442d32:	cmp    edi,0x77
  442d35:	int3   
  442d36:	add    ah,cl
  442d38:	(bad)  
  442d39:	jmp    0x34442c4a
  442d3e:	fld    TBYTE PTR [eax-0x3f]
  442d41:	push   esp
  442d42:	(bad)  
  442d43:	jmp    DWORD PTR [eax-0x1]
  442d46:	int3   
  442d47:	int3   
  442d48:	sbb    DWORD PTR [edi+ebx*2-0x1],0xffffffff
  442d4d:	(bad)  
  442d4e:	pushf  
  442d4f:	add    eax,0xff000bf5
  442d54:	sar    edi,cl
  442d56:	add    BYTE PTR [eax],al
  442d58:	add    BYTE PTR [esi-0x5b33ff36],al
  442d5e:	jmp    0xff56d290
  442d63:	add    BYTE PTR [eax-0x10000],cl
  442d69:	fs xchg ebp,eax
  442d6b:	add    BYTE PTR [eax],al
  442d6d:	add    cl,BYTE PTR [ebx]
  442d6f:	nop
  442d70:	and    eax,DWORD PTR [ecx]
  442d72:	int3   
  442d73:	inc    DWORD PTR [edi]
  442d75:	(bad)  
  442d76:	dec    DWORD PTR [ecx-0x7cd99f01]
  442d7c:	add    BYTE PTR [ebp+ebp*4-0x21c620],cl
  442d83:	jmp    DWORD PTR [edi-0x760100]
  442d89:	sub    eax,0xab890044
  442d8e:	outs   dx,DWORD PTR ds:[esi]
  442d8f:	sbb    eax,0xff83d10c
  442d94:	cli    
  442d95:	add    BYTE PTR [eax],al
  442d97:	dec    esp
  442d99:	push   eax
  442d9a:	mov    ch,0xff
  442d9c:	dec    DWORD PTR [esi]
  442d9e:	scas   al,BYTE PTR es:[edi]
  442d9f:	sahf   
  442da0:	cld    
  442da1:	ds add ah,cl
  442da4:	jg     0x442da6
  442da6:	dec    DWORD PTR [ecx+0x5a9eff]
  442dac:	inc    DWORD PTR [esi+eiz*2-0x3320dc77]
  442db3:	(bad)  
  442db4:	jge    0x442db5
  442db6:	add    bh,bh
  442db8:	add    DWORD PTR [ebx],0x5a
  442dbb:	add    BYTE PTR [eax],al
  442dbd:	into   
  442dbe:	and    bl,BYTE PTR [ebx+0x52]
  442dc1:	xchg   DWORD PTR [ebx+0xcc9300],eax
  442dc7:	add    bh,bh
  442dc9:	aad    0xe2
  442dcb:	dec    DWORD PTR [ecx-0x59b336c5]
  442dd1:	xchg   DWORD PTR [eax],eax
  442dd3:	add    BYTE PTR [ebx-0xff7634],al
  442dd9:	mov    al,0x98
  442ddb:	inc    DWORD PTR [eax]
  442ddd:	hlt    
  442dde:	and    ah,dh
  442de0:	jge    0x442d7a
  442de2:	add    bh,bh
  442de4:	pop    ebx
  442de5:	mov    edi,edi
  442de7:	add    bh,bh
  442de9:	das    
  442dea:	lock (bad) 
  442dec:	inc    DWORD PTR [edi-0x7bed15f8]
  442df2:	add    bh,bh
  442df4:	pop    ds
  442df5:	int3   
  442df6:	inc    DWORD PTR [eax]
  442df8:	add    BYTE PTR [ebp-0x6b00ffd4],bl
  442dfe:	sbb    cl,al
  442e00:	add    BYTE PTR [eax+eax*1-0x1],dh
  442e04:	mov    al,ds:0xff0000
  442e09:	sbb    dl,al
  442e0b:	inc    DWORD PTR [eax]
  442e0d:	push   eax
  442e0e:	into   
  442e0f:	jbe    0x442daa
  442e11:	out    dx,al
  442e12:	(bad)  
  442e13:	jmp    DWORD PTR [esp+ecx*8+0x0]
  442e17:	int3   
  442e18:	sub    DWORD PTR ds:0xb900cc70,0x57
  442e1f:	test   BYTE PTR [ebp+0x5983ff2d],0xff
  442e26:	(bad)  
  442e27:	(bad)  
  442e28:	(bad)  
  442e29:	fnsave [ebp-0x1]
  442e2c:	push   edx
  442e2e:	popa   
  442e2f:	push   esi
  442e30:	stos   DWORD PTR es:[edi],eax
  442e31:	nop
  442e32:	add    BYTE PTR [eax],al
  442e34:	and    bh,bh
  442e36:	cmp    edi,0x0
  442e39:	push   0x9f89ff62
  442e3e:	xchg   edi,eax
  442e3f:	leave  
  442e40:	jae    0x442dff
  442e42:	(bad)  
  442e43:	inc    DWORD PTR [ebp+0x0]
  442e46:	or     DWORD PTR [ecx-0x33fd3a7d],0xffffffff
  442e4d:	imul   esi,DWORD PTR ds:0xd60ad,0xffff7eff
  442e57:	int3   
  442e58:	mov    ebx,ecx
  442e5a:	mov    WORD PTR [eax],es
  442e5c:	push   DWORD PTR [eax-0x52]
  442e5f:	fucom  st(3)
  442e61:	jns    0x442e62
  442e63:	dec    ebx
  442e65:	add    bh,bh
  442e67:	mov    DWORD PTR [eax],eax
  442e69:	jle    0x442e9c
  442e6b:	inc    DWORD PTR [ebx-0x3984d182]
  442e71:	ror    DWORD PTR [ecx+0xff05ff],0x0
  442e78:	push   ebx
  442e7a:	xor    DWORD PTR [ebx+0x23ccdfff],eax
  442e80:	scas   eax,DWORD PTR es:[edi]
  442e81:	jle    0x442e82
  442e83:	add    BYTE PTR [esi-0x1],cl
  442e86:	int3   
  442e87:	(bad)  
  442e88:	call   DWORD PTR [ebx+0x12]
  442e8b:	(bad)  
  442e8c:	(bad)  
  442e8d:	fstp   QWORD PTR [edx+0x2c]
  442e90:	aas    
  442e91:	hlt    
  442e92:	add    BYTE PTR [eax],al
  442e94:	sbb    eax,0xff0000ff
  442e99:	outs   dx,DWORD PTR ds:[esi]
  442e9a:	mov    eax,DWORD PTR [eax]
  442e9c:	call   edx
  442e9e:	jmp    0x7283:0xccb2a01d
  442ea5:	add    bh,bh
  442ea7:	add    DWORD PTR [ebx-0xff0754],0x75
  442eae:	xor    eax,0xc49df8
  442eb3:	xor    ebp,0xffffffff
  442eb6:	inc    DWORD PTR [eax]
  442eb8:	push   DWORD PTR [edi-0x3e]
  442ebb:	or     esp,0xffffffd3
  442ebe:	jle    0x442e6f
  442ec0:	enter  0xccea,0x0
  442ec4:	inc    edx
  442ec5:	inc    DWORD PTR [eax]
  442ec7:	int3   
  442ec8:	inc    ebx
  442eca:	ja     0x442ecb
  442ecc:	mov    DWORD PTR [ecx],eax
  442ece:	sbb    DWORD PTR [ebp-0x75],0x4c
  442ed2:	dec    DWORD PTR [ecx-0x81]
  442ed8:	inc    DWORD PTR [esp+eax*2]
  442edb:	(bad)  
  442edc:	push   DWORD PTR [eax]
  442ede:	mov    eax,0x6de1f5
  442ee3:	add    al,ah
  442ee5:	add    ah,cl
  442ee7:	inc    DWORD PTR [eax]
  442ee9:	push   edi
  442eea:	mov    cl,ah
  442eec:	add    BYTE PTR [esi+esi*4-0x80],cl
  442ef0:	(bad)  
  442ef2:	add    BYTE PTR [eax],al
  442ef4:	xchg   esi,eax
  442ef5:	dec    DWORD PTR [ecx+0x313eff00]
  442efb:	add    DWORD PTR [eax],0x79
  442efe:	test   DWORD PTR [esi-0x6d],esi
  442f01:	adc    BYTE PTR [ebx+0xbe00],al
  442f07:	(bad)  
  442f08:	dec    DWORD PTR [ebx-0x1633ffc7]
  442f0e:	add    BYTE PTR [esi-0x3cde],bh
  442f14:	cmp    eax,0xff83ffff
  442f19:	out    dx,al
  442f1a:	sahf   
  442f1b:	dec    DWORD PTR [ecx-0x5edaba17]
  442f21:	mov    ecx,0xfff9ffff
  442f26:	add    bh,bh
  442f28:	sbb    DWORD PTR [edx],0x15
  442f2b:	inc    DWORD PTR [eax]
  442f2d:	add    DWORD PTR [ebx-0xad1632],0xff0020ff
  442f37:	add    DWORD PTR [eax],0xffffffea
  442f3a:	adc    eax,0x86168300
  442f3f:	mul    DWORD PTR [esi]
  442f41:	mov    ebx,0xff4f8300
  442f46:	int3   
  442f47:	(bad)  
  442f48:	push   DWORD PTR [ebp-0x6d]
  442f4b:	mov    DWORD PTR [ebx+0x47cb2e41],eax
  442f51:	mov    al,BYTE PTR [eax]
  442f53:	int3   
  442f54:	push   ss
  442f55:	add    BYTE PTR [eax],al
  442f57:	add    BYTE PTR [eax],al
  442f59:	xchg   ebp,eax
  442f5a:	jae    0x442f5c
  442f5c:	call   DWORD PTR [esi+edi*1-0x155a25]
  442f63:	mov    DWORD PTR [esi+0x0],edi
  442f66:	dec    esp
  442f68:	dec    DWORD PTR [eax+0x4c]
  442f6b:	inc    DWORD PTR [ebx+0x7e956b5b]
  442f71:	cmc    
  442f72:	add    bh,bh
  442f74:	(bad)  
  442f76:	add    bh,bh
  442f78:	call   FWORD PTR [eax-0xd]
  442f7b:	(bad)  
  442f7c:	call   FWORD PTR [ebx-0x2db3f70a]
  442f82:	inc    DWORD PTR [eax]
  442f84:	sub    bh,bh
  442f86:	(bad)  
  442f87:	(bad)  
  442f88:	push   DWORD PTR [ebx+0x5b00ff76]
  442f8e:	in     al,dx
  442f8f:	int3   
  442f90:	xchg   DWORD PTR [eax],esi
  442f92:	add    bh,bh
  442f94:	les    eax,FWORD PTR [ebx+0x19ff0000]
  442f9a:	repz inc DWORD PTR [eax]
  442f9d:	mov    eax,0x136eac90
  442fa2:	inc    DWORD PTR [ebx-0xff7632]
  442fa8:	(bad)  
  442fa9:	fistp  DWORD PTR [ebx+0x0]
  442fac:	jmp    DWORD PTR [esi-0x2bd357f6]
  442fb2:	add    BYTE PTR [eax],al
  442fb4:	popf   
  442fb5:	add    BYTE PTR [eax],al
  442fb7:	mov    esp,ecx
  442fb9:	aam    0x1
  442fbb:	inc    DWORD PTR [eax]
  442fbd:	adc    DWORD PTR [ecx+0xc666f9],edi
  442fc3:	add    BYTE PTR [ebp-0xffff77],cl
  442fc9:	call   0x24442ef8
  442fce:	and    esi,DWORD PTR [ebx-0x57]
  442fd1:	pop    esi
  442fd2:	cmp    edi,0xffffffd0
  442fd5:	add    BYTE PTR [eax],al
  442fd7:	add    DWORD PTR [eax],0x8
  442fda:	retf   0x83
  442fdd:	push   0x694a0d7
  442fe2:	add    BYTE PTR [ebx-0xff00a7],al
  442fe8:	inc    esi
  442fea:	in     al,dx
  442feb:	(bad)  
  442fec:	jmp    FWORD PTR [esi]
  442fee:	sar    bh,cl
  442ff0:	xor    ecx,DWORD PTR [edi+edi*8-0x1]
  442ff4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  442ff5:	inc    DWORD PTR [ebx+0x88783ff]
  442ffb:	add    bh,bh
  442ffd:	cmp    BYTE PTR [eax],cl
  442fff:	push   0x48
  443001:	push   esi
  443002:	inc    DWORD PTR [eax]
  443004:	sbb    ah,cl
  443006:	add    BYTE PTR [eax],al
  443008:	add    BYTE PTR [ebx],al
  44300a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  44300b:	inc    DWORD PTR [eax]
  44300d:	ficom  WORD PTR ds:0xff365fd9
  443013:	add    BYTE PTR [esi-0xff0100],dl
  443019:	cmp    eax,ebp
  44301b:	add    DWORD PTR [eax],0xffffff9a
  44301e:	in     al,dx
  44301f:	int    0xaf
  443021:	xchg   ebp,eax
  443022:	inc    DWORD PTR [eax]
  443024:	or     eax,DWORD PTR [eax]
  443026:	inc    DWORD PTR [eax]
  443028:	jmp    FWORD PTR [edx]
  44302a:	add    BYTE PTR [eax],0xff
  44302d:	mov    ds:0x501db066,eax
  443032:	mov    DWORD PTR [eax],eax
  443034:	iret   
  443035:	add    BYTE PTR [ecx+0x6e92ffcc],cl
  44303b:	cmp    edi,0x5f
  44303e:	jo     0x443043
  443040:	cld    
  443041:	add    DWORD PTR [eax],eax
  443043:	add    BYTE PTR [ebx-0x337c01],al
  443049:	sti    
  44304a:	and    eax,DWORD PTR [ebx-0x6c477d00]
  443050:	ins    DWORD PTR es:[edi],dx
  443051:	sar    bh,1
  443053:	add    al,al
  443055:	int3   
  443056:	mov    DWORD PTR [eax],eax
  443058:	push   DWORD PTR [edx]
  44305a:	(bad)  
  44305b:	mov    edi,edi
  44305d:	mov    esi,esi
  44305f:	call   0xffb1:0x83ff7f12
  443066:	add    DWORD PTR [eax],0xffffffff
  443069:	pop    eax
  44306a:	leave  
  44306b:	add    bh,bh
  44306d:	ja     0x4430ac
  44306f:	adc    esi,edx
  443071:	add    DWORD PTR [eax],0x0
  443074:	mov    DWORD PTR [eax],eax
  443076:	mov    DWORD PTR [ecx-0x76744f01],ecx
  44307c:	push   DWORD PTR [ebx]
  44307e:	dec    ebx
  44307f:	inc    esp
  443080:	xor    cl,ah
  443082:	add    BYTE PTR [eax],al
  443084:	ret    
  443085:	(bad)  
  443086:	(bad)  
  443087:	(bad)  
  443088:	call   DWORD PTR [ebp-0x1f]
  44308b:	cmp    edi,0x4c
  44308e:	out    0x85,eax
  443090:	jbe    0x443018
  443092:	inc    DWORD PTR [eax]
  443094:	sahf   
  443095:	cmp    edi,0xffffffff
  443098:	adc    DWORD PTR [ecx-0x7dff3371],0xd
  44309f:	dec    ebp
  4430a0:	(bad)  
  4430a1:	jmp    0x44306f
  4430a3:	call   FWORD PTR [eax+eax*1+0x283ccff]
  4430aa:	jle    0x443035
  4430ac:	add    BYTE PTR [esi],bh
  4430ae:	mov    ah,0xfe
  4430b0:	retf   
  4430b1:	inc    edi
  4430b2:	int3   
  4430b3:	call   FWORD PTR [ecx-0x7cffff77]
  4430b9:	test   eax,0x97ff83dc
  4430be:	push   esp
  4430bf:	add    eax,0x8340a8
  4430c4:	std    
  4430c5:	mov    edi,edi
  4430c7:	dec    esp
  4430c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4430ca:	cmp    eax,DWORD PTR [eax]
  4430cc:	adc    DWORD PTR [esi],0x41
  4430cf:	dec    edi
  4430d0:	into   
  4430d1:	xchg   DWORD PTR [eax],eax
  4430d3:	int3   
  4430d4:	into   
  4430d5:	mov    edi,edi
  4430d7:	inc    DWORD PTR [eax]
  4430d9:	jge    0x443074
  4430db:	(bad)  
  4430dc:	inc    esi
  4430de:	dec    ecx
  4430df:	inc    eax
  4430e0:	aam    0x83
  4430e2:	(bad)  
  4430e3:	jmp    DWORD PTR [ebx+0x0]
  4430e6:	add    DWORD PTR [eax],0xffffffff
  4430e9:	cmp    BYTE PTR [esi-0x1],ch
  4430ec:	add    BYTE PTR [edx],dl
  4430ee:	sbb    BYTE PTR [ebp-0x44],bl
  4430f1:	cmp    DWORD PTR [ebx-0x76ffd177],eax
  4430f7:	mov    DWORD PTR [ebx-0xa900],eax
  4430fd:	pusha  
  4430fe:	cmp    DWORD PTR [esi-0xbd68],ebp
  443104:	inc    edx
  443105:	int3   
  443106:	dec    esp
  443108:	(bad)  
  443109:	mov    ebx,0xf6ff0068
  44310e:	sbb    esp,esp
  443110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443111:	clc    
  443112:	inc    DWORD PTR [ebx-0x7cff006f]
  443118:	int3   
  443119:	lods   eax,DWORD PTR ds:[esi]
  44311a:	cmc    
  44311b:	inc    DWORD PTR [eax]
  44311d:	xchg   ebx,eax
  44311e:	pop    ss
  44311f:	(bad)  
  443121:	mov    ecx,0x47ffff
  443126:	int3   
  443127:	(bad)  
  443128:	push   DWORD PTR [eax]
  44312a:	into   
  44312b:	add    ah,cl
  44312d:	lahf   
  44312e:	pop    ecx
  44312f:	(bad)  
  443130:	retf   0xffa7
  443133:	add    BYTE PTR [ebx],ah
  443135:	inc    DWORD PTR [ebx-0x26c80001]
  44313b:	cmp    edi,0x2d
  44313e:	or     DWORD PTR [esi+ebx*8],edx
  443141:	sbb    bh,bh
  443143:	mov    DWORD PTR [ebx+eax*4-0x1],ebp
  443147:	(bad)  
  443148:	push   DWORD PTR [edi+ebp*8-0x1]
  44314c:	dec    edi
  44314e:	mov    al,ds:0x83954424
  443153:	call   FWORD PTR [eax-0x3333ff01]
  443159:	in     al,0x58
  44315b:	int3   
  44315c:	cmp    ecx,0x61
  44315f:	mov    ecx,0xff002a47
  443164:	push   esi
  443165:	inc    DWORD PTR [eax]
  443167:	inc    DWORD PTR [eax]
  443169:	pop    ebp
  44316a:	aam    0xff
  44316c:	jmp    eax
  44316e:	mov    cl,0x64
  443170:	mov    ebp,0x59ff89e4
  443175:	(bad)  
  443176:	(bad)  
  443177:	inc    DWORD PTR [ebx-0x7c7c4050]
  44317d:	xor    al,dl
  44317f:	cmp    al,0x76
  443181:	scas   al,BYTE PTR es:[edi]
  443182:	(bad)  
  443183:	inc    DWORD PTR [ebp-0x1]
  443186:	add    bh,bh
  443188:	(bad)  
  443189:	jge    0x443162
  44318b:	add    BYTE PTR [ebx+0x3b1224b5],al
  443191:	adc    eax,0xd0ffff
  443196:	cmp    edi,0x0
  443199:	and    eax,ebp
  44319b:	add    bh,bh
  44319d:	jg     0x4431a5
  44319f:	xchg   esi,eax
  4431a0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4431a2:	add    BYTE PTR [eax],al
  4431a4:	imul   edi,edi,0x5a0089cc
  4431aa:	mov    eax,0x1745ffcc
  4431af:	iret   
  4431b0:	lods   eax,DWORD PTR ds:[esi]
  4431b1:	jbe    0x4431b2
  4431b3:	add    BYTE PTR [eax],cl
  4431b5:	add    bh,bh
  4431b7:	dec    esp
  4431b9:	or     esi,esp
  4431bb:	inc    DWORD PTR [eax]
  4431bd:	dec    edi
  4431be:	mov    ecx,0xff5241e5
  4431c3:	inc    esi
  4431c5:	add    BYTE PTR [eax],al
  4431c7:	(bad)  
  4431c8:	jmp    DWORD PTR [ebx]
  4431ca:	fs add bh,bh
  4431cd:	ja     0x44324c
  4431cf:	mov    al,ds:0xcc7f77
  4431d4:	das    
  4431d5:	add    BYTE PTR [ecx-0x4cf5007d],cl
  4431db:	add    BYTE PTR [ebx+0x672ad879],al
  4431e1:	add    BYTE PTR ds:[eax],al
  4431e4:	push   ecx
  4431e5:	add    bh,bh
  4431e7:	dec    esp
  4431e9:	pop    es
  4431ea:	cmp    al,0x0
  4431ec:	add    BYTE PTR [ebx-0x430e968d],ah
  4431f2:	add    bh,bh
  4431f4:	or     eax,0xffcc00ff
  4431f9:	imul   esp,DWORD PTR [ecx],0xffffffff
  4431fc:	int3   
  4431fd:	out    0xb2,al
  4431ff:	push   edi
  443200:	add    BYTE PTR [ebp-0x76020001],dl
  443206:	add    ah,cl
  443208:	dec    DWORD PTR [esi]
  44320a:	xlat   BYTE PTR ds:[ebx]
  44320b:	add    BYTE PTR [eax],al
  44320d:	cmp    ah,bl
  44320f:	outs   dx,BYTE PTR ds:[esi]
  443210:	into   
  443211:	jno    0x443212
  443213:	add    bl,ch
  443215:	add    BYTE PTR [eax],al
  443217:	dec    esp
  443219:	mov    ah,0x3e
  44321b:	inc    DWORD PTR [eax]
  44321d:	adc    BYTE PTR [ecx+ebp*8],dl
  443220:	scas   al,BYTE PTR es:[edi]
  443221:	cmp    bh,0xff
  443224:	fdivp  st(7),st
  443226:	add    bh,bh
  443228:	add    al,bl
  44322a:	je     0x44322b
  44322c:	push   eax
  44322e:	inc    ebx
  44322f:	into   
  443230:	out    0x90,al
  443232:	add    bh,bh
  443234:	(bad)  
  443235:	(bad)  
  443236:	(bad)  
  443237:	(bad)  
  443238:	(bad)  
  443239:	jp     0x44322d
  44323b:	cmp    edi,0x6f
  44323e:	pop    ds
  44323f:	xor    eax,0xff0062f6
  443244:	pop    esi
  443245:	int3   
  443246:	add    bh,bh
  443248:	push   DWORD PTR [ebx-0x24ff7ca7]
  44324e:	push   ebp
  44324f:	xchg   ecx,eax
  443250:	pop    ebx
  443251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443252:	add    DWORD PTR [eax],0xffffffde
  443255:	add    BYTE PTR [eax],al
  443257:	add    BYTE PTR [eax],al
  443259:	inc    edx
  44325a:	inc    DWORD PTR fs:[eax]
  44325d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  44325e:	cmp    BYTE PTR [ebp-0x33269c],al
  443264:	dec    esp
  443266:	mov    esp,ecx
  443268:	add    ch,ah
  44326a:	(bad)  
  44326b:	(bad)  
  44326c:	jmp    FWORD PTR [eax+0x4c99517b]
  443272:	(bad)  
  443273:	(bad)  
  443274:	jg     0x443275
  443276:	(bad)  
  443277:	(bad)  
  443278:	inc    DWORD PTR [edx]
  44327a:	push   ecx
  44327b:	add    bh,bh
  44327d:	mov    ch,BYTE PTR [ebp+ebp*1-0x78]
  443281:	mov    ch,0xff
  443283:	add    dl,cl
  443285:	add    bh,bh
  443287:	add    BYTE PTR [ebx-0x330081b7],al
  44328d:	cli    
  44328e:	sbb    esi,esi
  443290:	or     eax,0xfa0083c6
  443295:	add    bh,bh
  443297:	dec    DWORD PTR [ecx-0x33002100]
  44329d:	dec    esi
  44329e:	cvttps2pi mm6,QWORD PTR [esi+0x1783ffb6]
  4432a5:	(bad)  
  4432a6:	inc    DWORD PTR [eax]
  4432a8:	(bad)  
  4432a9:	mov    ecx,0xfaff89b1
  4432ae:	iret   
  4432af:	xlat   BYTE PTR ds:[ebx]
  4432b0:	nop
  4432b1:	out    0x83,eax
  4432b3:	push   DWORD PTR [edi]
  4432b5:	(bad)  
  4432b6:	inc    DWORD PTR [ebx-0xb33c01]
  4432bc:	add    BYTE PTR [esi+edx*8],dl
  4432bf:	popa   
  4432c0:	xor    ch,BYTE PTR [eax+eax*1]
  4432c3:	sbb    DWORD PTR [ecx-0x7d],0x0
  4432c7:	inc    DWORD PTR [eax]
  4432c9:	mov    ds:0x99fffffb,eax
  4432ce:	fdivrp st(6),st
  4432d0:	outs   dx,DWORD PTR ds:[esi]
  4432d1:	xchg   DWORD PTR [eax],eax
  4432d3:	(bad)  
  4432d4:	(bad)  
  4432d6:	mov    edi,edi
  4432d8:	adc    DWORD PTR [ebx-0x56],0xffffffff
  4432dc:	add    BYTE PTR [eax],dl
  4432de:	neg    bh
  4432e0:	jle    0x443280
  4432e2:	mov    DWORD PTR [eax],eax
  4432e4:	fwait
  4432e5:	(bad)  
  4432e6:	inc    DWORD PTR [eax]
  4432e8:	call   FWORD PTR [edi]
  4432ea:	je     0x4432ec
  4432ec:	jmp    DWORD PTR [ebp-0x4e]
  4432ef:	ret    
  4432f0:	inc    ebp
  4432f1:	xchg   ebx,eax
  4432f2:	cmp    edi,0x24
  4432f5:	mov    edi,edi
  4432f7:	add    bh,bh
  4432f9:	sbb    eax,0xc7ffcca9
  4432fe:	lods   eax,DWORD PTR ds:[esi]
  4432ff:	iret   
  443300:	mov    ebx,0xacffff21
  443305:	inc    DWORD PTR [eax]
  443307:	inc    DWORD PTR [ebx+0x60b9]
  44330d:	daa    
  44330e:	into   
  44330f:	mov    edi,0xffff0291
  443314:	out    0xff,eax
  443316:	inc    DWORD PTR [ebx-0x33d40f01]
  44331c:	call   FWORD PTR [ebp+0x35f67665]
  443322:	add    DWORD PTR [ebx-0x7609],0xffffffff
  443329:	mov    es,WORD PTR [esi]
  44332b:	inc    DWORD PTR [ebx-0x1ad0e51d]
  443331:	jl     0x443333
  443333:	int3   
  443334:	mov    edi,0xffcc0000
  443339:	pop    ds
  44333a:	dec    edi
  44333b:	(bad)  
  44333c:	(bad)  
  44333d:	fistp  DWORD PTR [eax-0x76aea43c]
  443343:	call   FWORD PTR [esi-0xff01]
  443349:	pop    edi
  44334a:	aam    0x83
  44334c:	mov    DWORD PTR ds:0x8e9c0445,ebx
  443352:	or     esp,0xffffffb5
  443355:	add    BYTE PTR [ecx+0x298cffff],cl
  44335b:	(bad)  
  44335c:	call   DWORD PTR [edi+0x7e387eb2]
  443362:	add    BYTE PTR [eax],al
  443364:	loopne 0x443366
  443366:	(bad)  
  443367:	(bad)  
  443368:	dec    DWORD PTR [edi+0x6b]
  44336b:	inc    DWORD PTR [eax]
  44336d:	or     DWORD PTR [ecx-0x53],ebx
  443370:	ror    ebx,0x0
  443373:	add    al,ch
  443375:	mov    edi,edi
  443377:	add    bh,bh
  443379:	and    esi,eax
  44337b:	mov    DWORD PTR [ebx+0x51da0f04],eax
  443381:	jno    0x443382
  443383:	(bad)  
  443384:	js     0x443386
  443386:	add    BYTE PTR [eax],al
  443388:	add    BYTE PTR [eax-0x537c009f],ah
  44338e:	push   edx
  44338f:	mov    edi,0x83649e
  443394:	add    edi,edi
  443396:	inc    DWORD PTR [ebx-0x247a01]
  44339c:	(bad)  
  44339d:	cmp    DWORD PTR [esi+0x1],edi
  4433a0:	add    al,0x43
  4433a2:	add    DWORD PTR [eax],0x19
  4433a5:	(bad)  
  4433a6:	(bad)  
  4433a7:	inc    DWORD PTR [eax]
  4433a9:	jae    0x443339
  4433ab:	add    bh,bh
  4433ad:	or     al,0x17
  4433af:	or     ah,bl
  4433b1:	jo     0x443336
  4433b3:	jmp    DWORD PTR [esi-0x34]
  4433b6:	add    BYTE PTR [eax],al
  4433b8:	push   esp
  4433ba:	xchg   ebp,eax
  4433bb:	(bad)  
  4433bc:	call   FWORD PTR [ebx+0x3a]
  4433bf:	adc    al,0xd9
  4433c1:	mov    bl,0xcc
  4433c3:	cmp    DWORD PTR [esi-0x7c010000],0xffffffdc
  4433ca:	test   eax,0x445283ff
  4433cf:	sti    
  4433d0:	jecxz  0x4433b4
  4433d2:	dec    esp
  4433d4:	dec    edx
  4433d5:	add    bh,bh
  4433d7:	dec    esp
  4433d9:	loop   0x443433
  4433db:	inc    DWORD PTR [ebx-0x22bf3144]
  4433e1:	inc    ecx
  4433e2:	inc    DWORD PTR [eax]
  4433e4:	jp     0x4433e6
  4433e6:	add    BYTE PTR [ebx-0x762d0101],al
  4433ec:	add    edi,0x2d
  4433ef:	mov    esp,0xff00acd1
  4433f4:	xchg   edi,edi
  4433f6:	add    ah,cl
  4433f8:	(bad)  
  4433f9:	std    
  4433fa:	adc    al,0xff
  4433fc:	cmp    edi,0x45
  4433ff:	jl     0x44339d
  443401:	dec    esp
  443402:	(bad)  
  443403:	call   DWORD PTR [edi+edi*8+0x73ccffff]
  44340a:	inc    ebp
  44340b:	dec    esp
  44340d:	cs xchg ecx,eax
  44340f:	and    DWORD PTR [eax],edi
  443411:	cdq    
  443412:	inc    DWORD PTR [eax]
  443414:	push   ebp
  443415:	int3   
  443416:	inc    DWORD PTR [ebx-0x33d76801]
  44341c:	adc    esp,0x6e
  44341f:	and    esi,edi
  443421:	or     esp,0x0
  443424:	push   esp
  443425:	(bad)  
  443426:	dec    esp
  443428:	add    dl,ah
  44342a:	(bad)  
  44342b:	inc    DWORD PTR [eax]
  44342d:	mov    ebp,DWORD PTR ds:0xff4c2922
  443433:	inc    ecx
  443435:	add    bh,bh
  443437:	add    BYTE PTR [ebx-0x7c33e8c2],al
  44343d:	sar    BYTE PTR [ecx+0x2e],0x54
  443441:	mov    ebp,0x24ff00
  443446:	add    BYTE PTR [eax],al
  443448:	inc    DWORD PTR [edx-0x5e]
  44344b:	inc    DWORD PTR [ebx+0x1a5ef9b4]
  443451:	ret    0xff00
  443454:	jbe    0x443455
  443456:	inc    DWORD PTR [ebx+0x9a2a00]
  44345c:	mov    DWORD PTR [edx+ebx*8-0x7c94ab79],esp
  443463:	add    BYTE PTR ds:0xff00ff00,al
  443469:	and    ch,bh
  44346b:	add    BYTE PTR [ebx-0x6acce1c],al
  443471:	int    0xcc
  443473:	sub    edx,0x0
  443476:	cmp    edi,0x0
  443479:	lahf   
  44347a:	push   ebx
  44347b:	add    bh,bh
  44347d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  44347e:	cmp    eax,DWORD PTR [eax-0x76766bb0]
  443484:	dec    edi
  443485:	int3   
  443486:	(bad)  
  443487:	(bad)  
  443488:	push   DWORD PTR [ebx+esi*4]
  44348b:	(bad)  
  44348c:	call   edx
  44348e:	inc    esi
  44348f:	add    ebp,ebx
  443491:	mov    BYTE PTR [eax],al
  443493:	jmp    DWORD PTR [esi-0x33000100]
  443499:	(bad)  [esi]
  44349b:	or     DWORD PTR [ecx+0x749f2dfa],0xe
  4434a2:	inc    DWORD PTR [eax]
  4434a4:	hlt    
  4434a5:	(bad)  
  4434a6:	inc    DWORD PTR [ebx-0xfd434]
  4434ac:	add    BYTE PTR [edi+esi*8-0x18],bh
  4434b0:	aam    0xb7
  4434b2:	add    BYTE PTR [eax],al
  4434b4:	out    dx,eax
  4434b5:	inc    DWORD PTR [eax]
  4434b7:	add    bh,bh
  4434b9:	jae    0x44348a
  4434bb:	add    DWORD PTR [eax],0xffffffe0
  4434be:	fnsave [ebx]
  4434c0:	fwait
  4434c1:	stos   BYTE PTR es:[edi],al
  4434c2:	add    DWORD PTR [ebx-0x34],0xffffffff
  4434c9:	sub    BYTE PTR ds:0xd2e3ff00,cl
  4434cf:	fsub   DWORD PTR [edi+0x6b]
  4434d2:	(bad)  
  4434d3:	(bad)  
  4434d4:	out    dx,al
  4434d5:	cmp    edi,0xffffff83
  4434d8:	mov    DWORD PTR [ecx-0x4a337ca7],esi
  4434de:	mov    al,0x33
  4434e0:	or     al,BYTE PTR [ebx]
  4434e2:	dec    esp
  4434e4:	aas    
  4434e5:	add    BYTE PTR [eax],al
  4434e7:	(bad)  
  4434e8:	inc    DWORD PTR [edx+ecx*4-0x7d]
  4434ec:	add    BYTE PTR [edi],dh
  4434ee:	imul   eax,ebx,0xffffffe7
  4434f1:	in     al,0xff
  4434f3:	add    BYTE PTR [edi+0xffcc89],bl
  4434f9:	push   ebx
  4434fa:	xor    al,0x0
  4434fc:	add    BYTE PTR [edx-0x503e371c],ch
  443502:	(bad)  
  443503:	jmp    DWORD PTR [esi]
  443505:	add    BYTE PTR [ebx+0x4edecc00],al
  44350b:	add    DWORD PTR [ebx-0x57addfb3],0x7f
  443512:	add    BYTE PTR [ebx+0xffff6d],al
  443518:	add    DWORD PTR [edi-0x3100006b],0x78
  44351f:	pop    es
  443520:	in     eax,dx
  443521:	add    al,0xff
  443523:	xor    DWORD PTR [ebp-0x7d],0xffffffcc
  443527:	int3   
  443528:	add    BYTE PTR ds:0x2dccff84,al
  44352e:	loopne 0x44355a
  443530:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  443531:	jno    0x443532
  443533:	add    dl,ch
  443535:	inc    DWORD PTR [eax]
  443537:	add    BYTE PTR [eax],al
  443539:	push   ebx
  44353a:	cmp    edi,edi
  44353c:	jmp    FWORD PTR [ecx+0x3c]
  44353f:	jns    0x443555
  443541:	data16 (bad) 
  443543:	push   DWORD PTR [esi-0x1]
  443546:	add    bh,bh
  443548:	dec    ebp
  44354a:	sub    eax,DWORD PTR [eax]
  44354c:	dec    edx
  44354e:	sahf   
  44354f:	or     ch,ah
  443551:	mov    bh,0xff
  443553:	add    BYTE PTR [ecx-0x1],ch
  443556:	add    BYTE PTR [eax],al
  443558:	add    BYTE PTR [ebp-0x1f0076a8],dl
  44355e:	pop    ebp
  44355f:	or     bl,ch
  443561:	cmc    
  443562:	add    bh,bh
  443564:	sbb    al,0x0
  443566:	add    BYTE PTR [eax],al
  443568:	add    ah,bl
  44356a:	cmp    al,BYTE PTR [eax]
  44356c:	add    BYTE PTR [ebx-0x7c1e3603],bl
  443572:	add    BYTE PTR [eax],al
  443574:	sub    eax,0xff00ffff
  443579:	retf   
  44357a:	mov    bh,0x0
  44357c:	sbb    DWORD PTR [ecx],0x4c
  44357f:	sub    esi,DWORD PTR ds:0x6f00ff75
  443585:	add    BYTE PTR [ebx+0x7f4d0000],al
  44358b:	inc    DWORD PTR [eax]
  44358d:	repz jo 0x443591
  443590:	inc    ebx
  443591:	sar    edi,cl
  443593:	dec    eax
  443595:	inc    DWORD PTR [eax]
  443597:	add    BYTE PTR [eax],al
  443599:	scas   eax,DWORD PTR es:[edi]
  44359a:	cdq    
  44359b:	(bad)  
  44359c:	call   DWORD PTR [ecx+0x6fd705c0]
  4435a2:	add    bh,bh
  4435a4:	dec    ebx
  4435a5:	add    bh,bh
  4435a7:	(bad)  
  4435a8:	dec    DWORD PTR [esi+0x2aff004f]
  4435ae:	adc    eax,0xffd765a6
  4435b3:	(bad)  
  4435b4:	mov    eax,0xff83ffff
  4435b9:	mov    ecx,?
  4435bb:	(bad)  
  4435bc:	(bad)  
  4435bd:	cmp    esi,ebp
  4435bf:	adc    dl,dh
  4435c1:	add    BYTE PTR es:[eax],al
  4435c4:	push   eax
  4435c5:	add    bh,bh
  4435c7:	(bad)  
  4435c8:	jmp    FWORD PTR [esi]
  4435ca:	xchg   edx,eax
  4435cb:	add    bh,bh
  4435cd:	xor    al,0x5d
  4435cf:	leave  
  4435d0:	xor    DWORD PTR [edx],esi
  4435d2:	inc    DWORD PTR [eax]
  4435d4:	arpl   WORD PTR [eax],ax
  4435d6:	add    bh,bh
  4435d8:	jmp    esp
  4435da:	imul   edi,edi,0xffffff83
  4435dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4435de:	adc    DWORD PTR [ebx-0x7b],edi
  4435e1:	(bad)  
  4435e3:	add    cl,al
  4435e5:	add    DWORD PTR [ebx+0x47e9ffff],0xffffff89
  4435ec:	mov    DWORD PTR [ebp-0x7dafddba],edx
  4435f2:	(bad)  
  4435f3:	call   FWORD PTR [eax-0x34]
  4435f6:	(bad)  
  4435f7:	inc    DWORD PTR [eax]
  4435f9:	xchg   ch,dh
  4435fb:	add    bh,bh
  4435fd:	rol    DWORD PTR [ebx-0x4c],cl
  443600:	inc    eax
  443601:	sbb    eax,0xa9ff83
  443606:	int3   
  443607:	add    BYTE PTR [eax],al
  443609:	pop    ecx
  44360a:	pop    edx
  44360b:	inc    DWORD PTR [eax]
  44360d:	push   ds
  44360e:	mov    ah,0x80
  443610:	add    BYTE PTR [ecx-0x7caa0100],0xff
  443617:	inc    DWORD PTR [eax]
  443619:	in     al,dx
  44361a:	or     bh,bh
  44361c:	add    BYTE PTR ds:0xb046c30c,ch
  443622:	inc    DWORD PTR [eax]
  443624:	adc    bh,bh
  443626:	add    bh,bh
  443628:	call   FWORD PTR [esi-0x7000ffb6]
  44362e:	ficom  WORD PTR [eax+ebp*8+0x28cc0045]
  443635:	mov    DWORD PTR [eax],eax
  443637:	inc    DWORD PTR [eax]
  443639:	add    eax,0x27ffffe7
  44363e:	push   0x83d287e7
  443643:	add    BYTE PTR [esi],cl
  443645:	int3   
  443646:	(bad)  
  443647:	(bad)  
  443648:	(bad)  
  443649:	jge    0x443627
  44364b:	(bad)  
  44364c:	jmp    DWORD PTR [ecx]
  44364e:	call   0x7ecc:0xcccc8134
  443655:	mov    DWORD PTR [eax],eax
  443657:	add    BYTE PTR [eax],al
  443659:	mov    ch,0x9
  44365b:	inc    DWORD PTR [eax]
  44365d:	or     edi,DWORD PTR [eax+esi*2+0x5e]
  443661:	into   
  443662:	(bad)  
  443663:	call   DWORD PTR [edi+edi*8+0x2a00ffcc]
  44366a:	cmp    eax,0xcc400ff
  44366f:	pop    eax
  443670:	mov    ebp,0x3cffffac
  443675:	inc    DWORD PTR [eax]
  443677:	add    DWORD PTR [eax],0xffffffab
  44367a:	cmp    edi,0xffffffff
  44367d:	arpl   WORD PTR [ecx],bx
  44367f:	dec    ebp
  443680:	jno    0x4436eb
  443682:	inc    DWORD PTR [eax]
  443684:	retf   0xff
  443687:	add    DWORD PTR [eax],0x46
  44368a:	sub    bh,bh
  44368c:	add    BYTE PTR [ebp-0x20],ch
  44368f:	fsubr  DWORD PTR [ebx+eiz*4-0xf57601]
  443696:	cmp    edi,0x0
  443699:	enter  0xa1,0xff
  44369d:	lods   eax,DWORD PTR ds:[esi]
  44369e:	sbb    BYTE PTR [eax+0x46c4],dh
  4436a4:	add    al,BYTE PTR [eax]
  4436a6:	add    BYTE PTR [eax],al
  4436a8:	add    dh,al
  4436aa:	jge    0x4436ab
  4436ac:	adc    DWORD PTR [esi+0x25b46ddf],0xffffff83
  4436b3:	and    ebx,0xffffffff
  4436b6:	int3   
  4436b7:	add    DWORD PTR [eax],0x33
  4436ba:	sbb    bh,bh
  4436bc:	jmp    ebx
  4436be:	or     DWORD PTR [esi],esp
  4436c0:	sbb    BYTE PTR [ecx-0x99007d],cl
  4436c6:	(bad)  
  4436c7:	inc    DWORD PTR [eax]
  4436c9:	sbb    al,0x12
  4436cb:	add    bh,bh
  4436cd:	mov    dh,0x91
  4436cf:	jge    0x443690
  4436d1:	cli    
  4436d2:	dec    esp
  4436d4:	push   eax
  4436d5:	add    BYTE PTR [eax],al
  4436d7:	(bad)  
  4436d8:	jmp    FWORD PTR [eax]
  4436da:	retf   0x83ff
  4436dd:	test   DWORD PTR [esi],edi
  4436df:	pop    ebp
  4436e0:	cmp    edx,eax
  4436e2:	(bad)  
  4436e3:	call   FWORD PTR [edi-0x1]
  4436e6:	add    DWORD PTR [eax],0xffffff83
  4436e9:	jmp    FWORD PTR [ebx]
  4436eb:	(bad)  
  4436ec:	push   esi
  4436ee:	sbb    DWORD PTR [edx+esi*2-0x700ffdf],edi
  4436f5:	add    DWORD PTR [eax],0x0
  4436f8:	call   DWORD PTR [ebx-0x6eff33fe]
  4436fe:	(bad)  
  4436ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443700:	sub    edx,ecx
  443702:	int3   
  443703:	call   FWORD PTR [esi-0x76000034]
  443709:	call   0x5f6a:0xb4ffff37
  443710:	clc    
  443711:	stos   BYTE PTR es:[edi],al
  443712:	add    BYTE PTR [eax],al
  443714:	xchg   esp,eax
  443715:	inc    DWORD PTR [ebx+0x3437ccff]
  44371b:	(bad)  
  44371c:	push   DWORD PTR [eax+0x1c]
  44371f:	push   DWORD PTR [eax]
  443721:	dec    edi
  443722:	inc    DWORD PTR [ebx-0x333300d9]
  443728:	jmp    FWORD PTR [ebx]
  44372a:	adc    eax,0xe1860000
  44372f:	adc    ah,BYTE PTR [edi+0x46ffffa5]
  443735:	inc    DWORD PTR [eax]
  443737:	inc    DWORD PTR [eax]
  443739:	jns    0x44370a
  44373b:	add    bh,bh
  44373d:	mov    edx,0xd1a08951
  443742:	add    BYTE PTR [eax],al
  443744:	push   ss
  443745:	inc    DWORD PTR [eax]
  443747:	(bad)  
  443748:	inc    DWORD PTR [ebx+0x7b000046]
  44374e:	inc    edx
  44374f:	push   edi
  443750:	lods   eax,DWORD PTR ds:[esi]
  443751:	sub    eax,0xff200000
  443756:	add    bh,bh
  443758:	dec    DWORD PTR [esi]
  44375a:	sbb    BYTE PTR [eax],al
  44375c:	dec    DWORD PTR [ebp+0x3c6f9db8]
  443762:	dec    esp
  443764:	push   ds
  443765:	int3   
  443766:	(bad)  
  443767:	inc    DWORD PTR [eax]
  443769:	inc    esp
  44376a:	(bad)  
  44376b:	(bad)  
  44376c:	call   esi
  44376e:	rep lods eax,DWORD PTR ds:[esi]
  443770:	jle    0x443740
  443772:	mov    DWORD PTR [eax],eax
  443774:	stos   DWORD PTR es:[edi],eax
  443775:	cmp    edi,0xffffffff
  443778:	sub    DWORD PTR [ebx+0x22],0xffffffcc
  44377c:	add    al,dl
  44377e:	ja     0x4437e0
  443780:	adc    al,0xc0
  443782:	add    BYTE PTR [ecx-0x7c330015],cl
  443788:	sbb    ebx,0x44
  44378b:	inc    DWORD PTR [ebx-0x9c005f3]
  443791:	jae    0x443716
  443793:	add    BYTE PTR [edi-0xff7c01],dl
  443799:	mov    ecx,0xecfffffb
  44379e:	sub    ebp,edx
  4437a0:	(bad)  
  4437a1:	iret   
  4437a2:	add    bh,bh
  4437a4:	push   ss
  4437a5:	inc    DWORD PTR [eax]
  4437a7:	int3   
  4437a8:	add    BYTE PTR [ebx],al
  4437aa:	test   al,0xff
  4437ac:	cmp    DWORD PTR [esi+0xe888ab5],0xffffffff
  4437b3:	and    DWORD PTR [edi],0xffffff89
  4437b6:	add    BYTE PTR [eax],al
  4437b8:	add    BYTE PTR [esp+edi*4-0x1],ch
  4437bc:	add    BYTE PTR [edx+0x18],al
  4437bf:	jecxz  0x443766
  4437c1:	inc    ebp
  4437c2:	int3   
  4437c3:	add    ah,bh
  4437c5:	mov    edi,edi
  4437c7:	add    bh,bh
  4437c9:	mov    esp,DWORD PTR [ecx-0x4a570034]
  4437cf:	cmp    al,0x72
  4437d1:	xchg   ebx,eax
  4437d2:	dec    esp
  4437d4:	jl     0x443759
  4437d6:	(bad)  
  4437d7:	(bad)  
  4437d8:	jmp    DWORD PTR [edi-0x76ff7c3f]
  4437de:	ins    BYTE PTR es:[edi],dx
  4437df:	leave  
  4437e0:	fwait
  4437e1:	and    bh,bh
  4437e3:	dec    esp
  4437e5:	add    DWORD PTR [ebx-0x50480077],0x0
  4437ec:	sbb    DWORD PTR [ebp+0x32],0xffffffa5
  4437f0:	cmp    eax,0x1e00ff83
  4437f5:	mov    DWORD PTR [eax],eax
  4437f7:	inc    DWORD PTR [eax]
  4437f9:	cmp    edi,DWORD PTR [ebx+eax*4-0x2aeecf01]
  443800:	dec    edi
  443801:	push   ecx
  443802:	(bad)  
  443803:	inc    DWORD PTR [ebx+eax*4-0x677c3301]
  44380a:	(bad)  
  44380b:	(bad)  
  44380c:	(bad)  
  44380d:	clc    
  44380e:	adc    eax,0xffd9a000
  443813:	mov    DWORD PTR [ecx+0x0],edx
  443816:	dec    DWORD PTR [ecx-0xf25801]
  44381c:	dec    DWORD PTR [ebp-0x73]
  44381f:	(bad)  
  443820:	test   DWORD PTR [ebx],0xffdcffff
  443826:	int3   
  443827:	add    BYTE PTR [eax],al
  443829:	push   0x7689ff20
  44382e:	xor    BYTE PTR [esi+0x43],bh
  443831:	dec    esp
  443833:	sub    DWORD PTR [edi+0xff00ff],0xffffff87
  44383a:	jecxz  0x44383c
  44383c:	jmp    edi
  44383e:	adc    eax,0xccee9547
  443843:	jmp    FWORD PTR [ebx]
  443845:	inc    DWORD PTR [ebx+0x7e3500ff]
  44384b:	mov    DWORD PTR [eax],eax
  44384d:	mov    al,0xd4
  44384f:	in     eax,0x5f
  443851:	(bad)  
  443852:	inc    DWORD PTR [eax]
  443854:	daa    
  443855:	inc    DWORD PTR [ebx-0x10987c01]
  44385b:	add    BYTE PTR [ecx+0x6cff4968],cl
  443861:	push   cs
  443862:	add    BYTE PTR [eax],al
  443864:	ins    BYTE PTR es:[edi],dx
  443865:	dec    esp
  443867:	inc    DWORD PTR [eax]
  443869:	in     eax,0x42
  44386b:	(bad)  
  44386c:	push   DWORD PTR [edx+0x12]
  44386f:	mov    eax,0x83ffe1be
  443874:	ud0    eax,DWORD PTR [ebx+0x774cff00]
  44387b:	add    bh,bh
  44387d:	sub    al,0x88
  44387f:	(bad)
  443883:	jmp    FWORD PTR [eax-0x76000100]
  443889:	sub    eax,0xe7ffffce
  44388e:	mov    ds:0x8d6df3,eax
  443893:	int3   
  443894:	adc    BYTE PTR [eax],al
  443896:	inc    DWORD PTR [eax]
  443898:	add    BYTE PTR [ecx+0x38ffffec],cl
  44389e:	ror    BYTE PTR [edi-0x7c765ada],cl
  4438a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4438a5:	(bad)  
  4438a6:	(bad)  
  4438a7:	(bad)  
  4438a8:	(bad)  
  4438a9:	jnp    0x4438de
  4438ab:	add    bh,bh
  4438ad:	or     DWORD PTR [esi],esp
  4438af:	sub    eax,0xffffcaf6
  4438b4:	mov    ds:0x8983ff00,al
  4438b9:	lahf   
  4438ba:	dec    esp
  4438bb:	add    bh,bh
  4438bd:	sbb    ch,dh
  4438bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4438c0:	mov    ds:0xf0fffff5,al
  4438c5:	(bad)  
  4438c6:	inc    DWORD PTR [eax]
  4438c8:	(bad)  
  4438c9:	cld    
  4438ca:	mov    ecx,0x1ddbffff
  4438cf:	inc    ebp
  4438d0:	sub    ebp,DWORD PTR [edx-0x9f007d]
  4438d6:	(bad)  
  4438d7:	inc    DWORD PTR [eax]
  4438d9:	addr16 mov eax,ds:0xcc83
  4438dd:	in     eax,dx
  4438de:	(bad)  
  4438df:	mov    ds:0xfffffafe,al
  4438e4:	inc    ebp
  4438e5:	inc    DWORD PTR [eax]
  4438e7:	inc    DWORD PTR [eax]
  4438e9:	and    eax,edx
  4438eb:	(bad)  
  4438ec:	(bad)  
  4438ed:	jns    0x44387a
  4438ef:	enter  0x3270,0x0
  4438f3:	push   DWORD PTR [edi+edi*8]
  4438f6:	cmp    edi,0xffffffff
  4438f9:	inc    esp
  4438fa:	(bad)  
  4438fc:	jmp    esp
  4438fe:	in     al,dx
  4438ff:	rcl    DWORD PTR [edi+0x72],1
  443902:	inc    DWORD PTR [ebx-0x3300000a]
  443908:	int3   
  443909:	imul   edi,DWORD PTR [edx-0x1],0xffffff83
  44390d:	add    DWORD PTR cs:[eax-0xa0aa],edi
  443914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  443915:	inc    DWORD PTR [eax]
  443917:	(bad)  
  443918:	dec    DWORD PTR [ecx-0x68330066]
  44391e:	call   0xe8ec64
  443923:	dec    DWORD PTR [edi-0x1]
  443926:	(bad)  
  443927:	inc    DWORD PTR [eax]
  443929:	aas    
  44392a:	fcos   
  44392c:	int3   
  44392d:	(bad)  
  44392e:	sub    DWORD PTR [eax],edi
  443930:	adc    DWORD PTR ds:0x83f383ff,esp
  443936:	cmp    edi,0xffffffff
  443939:	daa    
  44393a:	das    
  44393b:	add    DWORD PTR [ebx+0x26844923],0xffffff86
  443942:	add    bh,bh
  443944:	xchg   ebp,eax
  443945:	add    DWORD PTR [eax],0xffffffff
  443948:	jmp    FWORD PTR ds:0xf789ff54
  44394e:	pop    esi
  44394f:	into   
  443950:	pop    ebx
  443951:	pop    esp
  443952:	dec    DWORD PTR [ecx-0x76ff769c]
  443958:	jmp    FWORD PTR [edi-0x68ff00d9]
  44395e:	or     cl,BYTE PTR [esi-0x7c00afce]
  443964:	mov    ecx,0xff008300
  443969:	jmp    FWORD PTR [ebp-0x1]
  44396c:	jmp    edx
  44396e:	cdq    
  44396f:	jnp    0x443974
  443971:	and    al,BYTE PTR [eax]
  443973:	push   DWORD PTR [eax]
  443975:	add    ah,cl
  443977:	mov    edi,edi
  443979:	jl     0x4438fc
  44397b:	inc    DWORD PTR [eax]
  44397d:	dec    eax
  44397e:	xchg   edx,eax
  44397f:	or     BYTE PTR [esp+ebx*4-0x34],dl
  443983:	push   DWORD PTR [edx-0x7c01]
  443989:	retf   0xff70
  44398c:	(bad)  
  44398d:	fadd   st,st(3)
  44398f:	imul   edi,esi,0x61
  443992:	dec    DWORD PTR [ecx+0x71]
  443998:	push   edx
  44399a:	adc    edi,edi
  44399c:	push   edi
  44399e:	xchg   ebx,eax
  44399f:	lds    ebp,FWORD PTR [eax-0x1f]
  4439a2:	(bad)  
  4439a3:	jmp    DWORD PTR [ebx-0x7c0001]
  4439a9:	(bad)  
  4439aa:	jp     0x4439ab
  4439ac:	jmp    FWORD PTR [edx]
  4439ae:	sub    al,0xcb
  4439b0:	jnp    0x4439eb
  4439b2:	add    BYTE PTR [ebx-0xf6],al
  4439b8:	(bad)  
  4439b9:	jnp    0x443949
  4439bb:	add    bh,bh
  4439bd:	jo     0x443965
  4439bf:	fist   WORD PTR [edi-0x4d00ff19]
  4439c5:	mov    DWORD PTR [eax],eax
  4439c7:	cmp    edi,0xffffffb9
  4439ca:	(bad)  
  4439cb:	int3   
  4439cc:	add    BYTE PTR [ebx+edi*8],bh
  4439cf:	fisubr WORD PTR [edx+0x48]
  4439d2:	inc    DWORD PTR [ebx+0x8900c0]
  4439d8:	push   DWORD PTR [edi-0x35ffffc2]
  4439de:	lds    edx,FWORD PTR [ecx+ebx*2-0x7e]
  4439e2:	(bad)  
  4439e3:	dec    DWORD PTR [esi-0xff007d]
  4439e9:	mul    BYTE PTR [ebp+0x5a58300]
  4439ef:	js     0x4439e5
  4439f1:	int3   
  4439f2:	inc    DWORD PTR [ebx-0x7c9e]
  4439f8:	dec    DWORD PTR [edi+0x7e89ff7f]
  4439fe:	sub    BYTE PTR [esi-0x10],dl
  443a01:	push   ds
  443a02:	(bad)  
  443a03:	(bad)  
  443a04:	mov    eax,0xff00ff00
  443a09:	mov    esp,0xac83ff78
  443a0e:	call   0x3ccc:0x89eb5cad
  443a15:	add    BYTE PTR [ecx-0x7a9c0077],cl
  443a1b:	inc    DWORD PTR [eax]
  443a1d:	sar    DWORD PTR [ebx-0x7601ea6c],1
  443a23:	(bad)  
  443a24:	fdivp  st(7),st
  443a26:	int3   
  443a27:	inc    DWORD PTR [ebx+0x8975f6]
  443a2d:	jge    0x443a02
  443a2f:	inc    ebp
  443a30:	xchg   ebx,eax
  443a31:	jge    0x4439bc
  443a33:	dec    DWORD PTR [ebx-0x1]
  443a36:	add    ah,cl
  443a38:	(bad)  
  443a39:	std    
  443a3a:	push   ebp
  443a3b:	inc    DWORD PTR [eax]
  443a3d:	in     al,0xe2
  443a3f:	cmp    esp,ebx
  443a41:	pop    ebp
  443a42:	add    bh,bh
  443a44:	pop    ebx
  443a45:	(bad)  
  443a46:	inc    DWORD PTR [eax]
  443a48:	and    ebx,0x4d
  443a4b:	inc    DWORD PTR [ebx+0x1136200f]
  443a51:	or     al,0x0
  443a53:	add    BYTE PTR [edi+0x0],dl
  443a56:	inc    DWORD PTR [eax]
  443a58:	call   FWORD PTR [edi+0x17ff00da]
  443a5e:	fistp  DWORD PTR ds:0xffff8345
  443a64:	mov    al,ds:0xff00ff00
  443a69:	retf   
  443a6a:	or     eax,0xd020083
  443a6f:	stc    
  443a70:	dec    ebp
  443a71:	mov    dl,0x83
  443a73:	adc    DWORD PTR [edi+edi*8],0xffffff83
  443a77:	int3   
  443a78:	sub    DWORD PTR [esi],0x67
  443a7b:	add    bh,bh
  443a7d:	aam    0x3f
  443a7f:	xor    bh,BYTE PTR [edi-0x6003306]
  443a85:	add    DWORD PTR [ebx-0x31b30100],0x0
  443a8c:	add    BYTE PTR [edi-0x68],ch
  443a8f:	test   DWORD PTR [ebx-0x5c],0xb9ff83
  443a96:	add    BYTE PTR [ebx-0x7c8b9301],al
  443a9c:	add    BYTE PTR [edx-0x56b13016],bl
  443aa2:	add    BYTE PTR [ebx+0xff8387],al
  443aa8:	add    BYTE PTR [edx],ch
  443aaa:	scas   al,BYTE PTR es:[edi]
  443aab:	(bad)  
  443aac:	dec    DWORD PTR [esi+0x1dca8f47]
  443ab2:	add    BYTE PTR [eax],al
  443ab4:	adc    eax,0xff89ff00
  443ab9:	scas   al,BYTE PTR es:[edi]
  443aba:	jno    0x443a3f
  443abc:	add    ch,ah
  443abe:	fwait
  443abf:	into   
  443ac0:	inc    edx
  443ac1:	push   es
  443ac2:	(bad)  
  443ac3:	jmp    DWORD PTR [ecx]
  443ac5:	cmp    edi,0xffffffff
  443ac8:	(bad)  
  443ac9:	clc    
  443aca:	or     eax,DWORD PTR [eax]
  443acc:	call   FWORD PTR [edx+edx*2]
  443acf:	test   DWORD PTR [eax+ebp*4-0x637c77],eax
  443ad6:	(bad)  
  443ad7:	inc    DWORD PTR [eax]
  443ad9:	or     DWORD PTR [esi-0x34],ecx
  443adc:	jmp    DWORD PTR [edx+0xd8b7072]
  443ae2:	add    al,0x8d
  443ae4:	inc    esp
  443ae5:	add    BYTE PTR [ebx+0x44805c15],cl
  443aeb:	add    BYTE PTR [esi+0x57],dl
  443aee:	add    ecx,0x60
  443af1:	mov    esi,0x44
  443af6:	jmp    0x443b00
  443af8:	lea    esp,[esp+0x0]
  443aff:	nop
  443b00:	movzx  eax,BYTE PTR [edx+0x7]
  443b04:	movzx  edi,BYTE PTR [edx+0x5]
  443b08:	movzx  edx,WORD PTR [edx]
  443b0b:	shl    eax,0x8
  443b0e:	add    eax,edi
  443b10:	shl    eax,0x10
  443b13:	add    eax,edx
  443b15:	mov    ds:0x448cf0,eax
  443b1a:	mov    edx,0xe3e417be
  443b1f:	sub    edx,DWORD PTR ds:0x448d00
  443b25:	add    ecx,0x10
  443b28:	xor    edx,eax
  443b2a:	mov    DWORD PTR [ecx-0x10],edx
  443b2d:	mov    edx,DWORD PTR ds:0x44805c
  443b33:	add    edx,0x8
  443b36:	mov    DWORD PTR ds:0x44805c,edx
  443b3c:	movzx  eax,BYTE PTR [edx+0x7]
  443b40:	movzx  edi,BYTE PTR [edx+0x5]
  443b44:	movzx  edx,WORD PTR [edx]
  443b47:	shl    eax,0x8
  443b4a:	add    eax,edi
  443b4c:	shl    eax,0x10
  443b4f:	add    eax,edx
  443b51:	mov    ds:0x448cf0,eax
  443b56:	mov    edx,0xe3e417be
  443b5b:	sub    edx,DWORD PTR ds:0x448d00
  443b61:	xor    edx,eax
  443b63:	mov    DWORD PTR [ecx-0xc],edx
  443b66:	mov    edx,DWORD PTR ds:0x44805c
  443b6c:	add    edx,0x8
  443b6f:	mov    DWORD PTR ds:0x44805c,edx
  443b75:	movzx  eax,BYTE PTR [edx+0x7]
  443b79:	movzx  edi,BYTE PTR [edx+0x5]
  443b7d:	movzx  edx,WORD PTR [edx]
  443b80:	shl    eax,0x8
  443b83:	add    eax,edi
  443b85:	shl    eax,0x10
  443b88:	add    eax,edx
  443b8a:	mov    ds:0x448cf0,eax
  443b8f:	mov    edx,0xe3e417be
  443b94:	sub    edx,DWORD PTR ds:0x448d00
  443b9a:	xor    edx,eax
  443b9c:	mov    DWORD PTR [ecx-0x8],edx
  443b9f:	mov    edx,DWORD PTR ds:0x44805c
  443ba5:	add    edx,0x8
  443ba8:	mov    DWORD PTR ds:0x44805c,edx
  443bae:	movzx  eax,BYTE PTR [edx+0x7]
  443bb2:	movzx  edi,BYTE PTR [edx+0x5]
  443bb6:	movzx  edx,WORD PTR [edx]
  443bb9:	shl    eax,0x8
  443bbc:	add    eax,edi
  443bbe:	shl    eax,0x10
  443bc1:	add    eax,edx
  443bc3:	mov    edx,0xe3e417be
  443bc8:	sub    edx,DWORD PTR ds:0x448d00
  443bce:	mov    ds:0x448cf0,eax
  443bd3:	xor    edx,eax
  443bd5:	mov    DWORD PTR [ecx-0x4],edx
  443bd8:	mov    edx,DWORD PTR ds:0x44805c
  443bde:	add    edx,0x8
  443be1:	dec    esi
  443be2:	mov    DWORD PTR ds:0x44805c,edx
  443be8:	jne    0x443b00
  443bee:	push   ebx
  443bef:	push   0x405f20
  443bf4:	call   0x40d010
  443bf9:	mov    esi,DWORD PTR ds:0x448d04
  443bff:	mov    ebx,DWORD PTR ds:0x445058
  443c05:	mov    ecx,DWORD PTR ds:0x448060
  443c0b:	add    esp,0x4
  443c0e:	add    esi,0xa04
  443c14:	mov    edi,0x175
  443c19:	lea    esp,[esp+0x0]
  443c20:	movzx  eax,WORD PTR [ecx+0x5]
  443c24:	movzx  ecx,WORD PTR [ecx]
  443c27:	shl    eax,0x10
  443c2a:	mov    edx,0x43188e85
  443c2f:	sub    edx,DWORD PTR ds:0x448d00
  443c35:	add    eax,ecx
  443c37:	push   0x447a74
  443c3c:	xor    edx,eax
  443c3e:	mov    ds:0x448cf0,eax
  443c43:	push   0x0
  443c45:	mov    DWORD PTR [esi],edx
  443c47:	call   ebx
  443c49:	mov    ecx,DWORD PTR ds:0x448060
  443c4f:	add    ecx,0x8
  443c52:	add    esi,0x4
  443c55:	dec    edi
  443c56:	mov    DWORD PTR ds:0x448060,ecx
  443c5c:	jne    0x443c20
  443c5e:	push   0x438070
  443c63:	call   0x409d20
  443c68:	push   0x425360
  443c6d:	push   0x40d250
  443c72:	call   0x412690
  443c77:	mov    edx,DWORD PTR ds:0x448064
  443c7d:	movzx  ecx,BYTE PTR [edx+0x7]
  443c81:	movzx  esi,BYTE PTR [edx+0x4]
  443c85:	movzx  edx,WORD PTR [edx+0x1]
  443c89:	mov    eax,ds:0x448d04
  443c8e:	shl    ecx,0x8
  443c91:	add    ecx,esi
  443c93:	shl    ecx,0x10
  443c96:	add    ecx,edx
  443c98:	mov    edx,DWORD PTR ds:0x448d00
  443c9e:	mov    DWORD PTR ds:0x448cf0,ecx
  443ca4:	add    edx,0xea729520
  443caa:	xor    edx,ecx
  443cac:	mov    DWORD PTR [eax+0x50],edx
  443caf:	mov    edx,DWORD PTR ds:0x448064
  443cb5:	movzx  ecx,BYTE PTR [edx+0xd]
  443cb9:	movzx  esi,WORD PTR [edx+0xb]
  443cbd:	movzx  edx,BYTE PTR [edx+0x8]
  443cc1:	shl    ecx,0x10
  443cc4:	add    ecx,esi
  443cc6:	shl    ecx,0x8
  443cc9:	add    ecx,edx
  443ccb:	mov    edx,DWORD PTR ds:0x448d00
  443cd1:	xor    edx,ecx
  443cd3:	mov    DWORD PTR ds:0x448cf0,ecx
  443cd9:	xor    edx,0xea7296e0
  443cdf:	mov    DWORD PTR [eax+0x54],edx
  443ce2:	mov    edx,DWORD PTR ds:0x448064
  443ce8:	add    edx,0x10
  443ceb:	mov    DWORD PTR ds:0x448064,edx
  443cf1:	movzx  ecx,BYTE PTR [edx+0x7]
  443cf5:	movzx  esi,BYTE PTR [edx+0x4]
  443cf9:	movzx  edx,WORD PTR [edx+0x1]
  443cfd:	shl    ecx,0x8
  443d00:	add    ecx,esi
  443d02:	shl    ecx,0x10
  443d05:	add    ecx,edx
  443d07:	mov    edx,DWORD PTR ds:0x448d00
  443d0d:	mov    DWORD PTR ds:0x448cf0,ecx
  443d13:	add    edx,0xea729520
  443d19:	xor    edx,ecx
  443d1b:	mov    DWORD PTR [eax+0x58],edx
  443d1e:	mov    edx,DWORD PTR ds:0x448064
  443d24:	movzx  ecx,BYTE PTR [edx+0xd]
  443d28:	movzx  esi,WORD PTR [edx+0xb]
  443d2c:	movzx  edx,BYTE PTR [edx+0x8]
  443d30:	mov    ebx,DWORD PTR ds:0x445014
  443d36:	shl    ecx,0x10
  443d39:	add    ecx,esi
  443d3b:	shl    ecx,0x8
  443d3e:	add    ecx,edx
  443d40:	mov    edx,DWORD PTR ds:0x448d00
  443d46:	xor    edx,ecx
  443d48:	xor    edx,0xea7296e0
  443d4e:	mov    DWORD PTR ds:0x448cf0,ecx
  443d54:	mov    DWORD PTR [eax+0x5c],edx
  443d57:	mov    esi,DWORD PTR ds:0x448d04
  443d5d:	add    DWORD PTR ds:0x448064,0x10
  443d64:	mov    ecx,DWORD PTR ds:0x448068
  443d6a:	add    esp,0xc
  443d6d:	add    esi,0x4a0
  443d73:	mov    edi,0xac
  443d78:	jmp    0x443d80
  443d7a:	lea    ebx,[ebx+0x0]
  443d80:	movzx  eax,BYTE PTR [ecx+0x6]
  443d84:	movzx  edx,WORD PTR [ecx+0x2]
  443d88:	movzx  ecx,BYTE PTR [ecx]
  443d8b:	shl    eax,0x10
  443d8e:	add    eax,edx
  443d90:	mov    edx,DWORD PTR ds:0x448d00
  443d96:	sub    edx,0x401e6
  443d9c:	shl    eax,0x8
  443d9f:	add    eax,ecx
  443da1:	neg    edx
  443da3:	sbb    edx,edx
  443da5:	and    edx,0x6bd2ea06
  443dab:	add    edx,0x942d46c7
  443db1:	xor    edx,eax
  443db3:	mov    ds:0x448cf0,eax
  443db8:	push   0x0
  443dba:	mov    DWORD PTR [esi],edx
  443dbc:	call   ebx
  443dbe:	mov    ecx,DWORD PTR ds:0x448068
  443dc4:	movzx  eax,BYTE PTR [ecx+0xc]
  443dc8:	movzx  edx,BYTE PTR [ecx+0xa]
  443dcc:	movzx  ecx,WORD PTR [ecx+0x8]
  443dd0:	shl    eax,0x8
  443dd3:	add    eax,edx
  443dd5:	mov    edx,DWORD PTR ds:0x448d00
  443ddb:	shl    eax,0x10
  443dde:	add    eax,ecx
  443de0:	add    edx,0x942944e1
  443de6:	xor    edx,eax
  443de8:	mov    ds:0x448cf0,eax
  443ded:	mov    DWORD PTR [esi+0x4],edx
  443df0:	mov    ecx,DWORD PTR ds:0x448068
  443df6:	add    ecx,0x10
  443df9:	add    esi,0x8
  443dfc:	dec    edi
  443dfd:	mov    DWORD PTR ds:0x448068,ecx
  443e03:	jne    0x443d80
  443e09:	movzx  eax,BYTE PTR [ecx+0x6]
  443e0d:	movzx  edx,WORD PTR [ecx+0x2]
  443e11:	movzx  ecx,BYTE PTR [ecx]
  443e14:	shl    eax,0x10
  443e17:	add    eax,edx
  443e19:	mov    edx,DWORD PTR ds:0x448d00
  443e1f:	shl    eax,0x8
  443e22:	add    eax,ecx
  443e24:	add    edx,0x942944e1
  443e2a:	xor    edx,eax
  443e2c:	mov    ds:0x448cf0,eax
  443e31:	mov    DWORD PTR [esi],edx
  443e33:	mov    ecx,DWORD PTR ds:0x448d04
  443e39:	mov    edx,DWORD PTR ds:0x44806c
  443e3f:	add    ecx,0xfd8
  443e45:	mov    esi,0xe3
  443e4a:	pop    ebx
  443e4b:	jmp    0x443e50
  443e4d:	lea    ecx,[ecx+0x0]
  443e50:	movzx  eax,BYTE PTR [edx+0x7]
  443e54:	movzx  edi,BYTE PTR [edx+0x4]
  443e58:	movzx  edx,WORD PTR [edx]
  443e5b:	shl    eax,0x8
  443e5e:	add    eax,edi
  443e60:	shl    eax,0x10
  443e63:	add    eax,edx
  443e65:	mov    edx,DWORD PTR ds:0x448d00
  443e6b:	xor    edx,eax
  443e6d:	mov    ds:0x448cf0,eax
  443e72:	xor    edx,0x9eda5e2a
  443e78:	mov    DWORD PTR [ecx],edx
  443e7a:	mov    edx,DWORD PTR ds:0x44806c
  443e80:	add    edx,0x8
  443e83:	mov    DWORD PTR ds:0x44806c,edx
  443e89:	movzx  eax,BYTE PTR [edx+0x7]
  443e8d:	movzx  edi,BYTE PTR [edx+0x4]
  443e91:	movzx  edx,WORD PTR [edx]
  443e94:	shl    eax,0x8
  443e97:	add    eax,edi
  443e99:	shl    eax,0x10
  443e9c:	add    eax,edx
  443e9e:	mov    edx,DWORD PTR ds:0x448d00
  443ea4:	xor    edx,eax
  443ea6:	xor    edx,0x9eda5e2a
  443eac:	mov    ds:0x448cf0,eax
  443eb1:	mov    DWORD PTR [ecx+0x4],edx
  443eb4:	mov    edx,DWORD PTR ds:0x44806c
  443eba:	add    edx,0x8
  443ebd:	mov    DWORD PTR ds:0x44806c,edx
  443ec3:	movzx  eax,BYTE PTR [edx+0x7]
  443ec7:	movzx  edi,BYTE PTR [edx+0x4]
  443ecb:	movzx  edx,WORD PTR [edx]
  443ece:	shl    eax,0x8
  443ed1:	add    eax,edi
  443ed3:	shl    eax,0x10
  443ed6:	add    eax,edx
  443ed8:	mov    edx,DWORD PTR ds:0x448d00
  443ede:	xor    edx,eax
  443ee0:	xor    edx,0x9eda5e2a
  443ee6:	mov    ds:0x448cf0,eax
  443eeb:	mov    DWORD PTR [ecx+0x8],edx
  443eee:	mov    edx,DWORD PTR ds:0x44806c
  443ef4:	add    edx,0x8
  443ef7:	add    ecx,0xc
  443efa:	dec    esi
  443efb:	mov    DWORD PTR ds:0x44806c,edx
  443f01:	jne    0x443e50
  443f07:	mov    eax,ds:0x448d04
  443f0c:	mov    edx,DWORD PTR ds:0x448070
  443f12:	add    eax,0x1a7c
  443f17:	mov    esi,0x3e
  443f1c:	lea    esp,[esp+0x0]
  443f20:	movzx  ecx,WORD PTR [edx+0x6]
  443f24:	movzx  edi,BYTE PTR [edx+0x3]
  443f28:	movzx  edx,BYTE PTR [edx]
  443f2b:	shl    ecx,0x8
  443f2e:	add    ecx,edi
  443f30:	shl    ecx,0x8
  443f33:	add    ecx,edx
  443f35:	mov    edx,DWORD PTR ds:0x448d00
  443f3b:	mov    DWORD PTR ds:0x448cf0,ecx
  443f41:	add    edx,0x1180d6aa
  443f47:	xor    edx,ecx
  443f49:	mov    DWORD PTR [eax],edx
  443f4b:	mov    edx,DWORD PTR ds:0x448070
  443f51:	add    edx,0x8
  443f54:	mov    DWORD PTR ds:0x448070,edx
  443f5a:	movzx  ecx,WORD PTR [edx+0x6]
  443f5e:	movzx  edi,BYTE PTR [edx+0x3]
  443f62:	movzx  edx,BYTE PTR [edx]
  443f65:	shl    ecx,0x8
  443f68:	add    ecx,edi
  443f6a:	shl    ecx,0x8
  443f6d:	add    ecx,edx
  443f6f:	mov    edx,DWORD PTR ds:0x448d00
  443f75:	mov    DWORD PTR ds:0x448cf0,ecx
  443f7b:	add    edx,0x1180d6aa
  443f81:	xor    edx,ecx
  443f83:	mov    DWORD PTR [eax+0x4],edx
  443f86:	mov    edx,DWORD PTR ds:0x448070
  443f8c:	add    edx,0x8
  443f8f:	mov    DWORD PTR ds:0x448070,edx
  443f95:	movzx  ecx,WORD PTR [edx+0x6]
  443f99:	movzx  edi,BYTE PTR [edx+0x3]
  443f9d:	movzx  edx,BYTE PTR [edx]
  443fa0:	shl    ecx,0x8
  443fa3:	add    ecx,edi
  443fa5:	shl    ecx,0x8
  443fa8:	add    ecx,edx
  443faa:	mov    edx,DWORD PTR ds:0x448d00
  443fb0:	mov    DWORD PTR ds:0x448cf0,ecx
  443fb6:	add    edx,0x1180d6aa
  443fbc:	xor    edx,ecx
  443fbe:	mov    DWORD PTR [eax+0x8],edx
  443fc1:	mov    edx,DWORD PTR ds:0x448070
  443fc7:	add    edx,0x8
  443fca:	mov    DWORD PTR ds:0x448070,edx
  443fd0:	movzx  ecx,WORD PTR [edx+0x6]
  443fd4:	movzx  edi,BYTE PTR [edx+0x3]
  443fd8:	movzx  edx,BYTE PTR [edx]
  443fdb:	shl    ecx,0x8
  443fde:	add    ecx,edi
  443fe0:	shl    ecx,0x8
  443fe3:	add    ecx,edx
  443fe5:	mov    edx,DWORD PTR ds:0x448d00
  443feb:	mov    DWORD PTR ds:0x448cf0,ecx
  443ff1:	add    edx,0x1180d6aa
  443ff7:	xor    edx,ecx
  443ff9:	mov    DWORD PTR [eax+0xc],edx
  443ffc:	mov    edx,DWORD PTR ds:0x448070
  444002:	add    edx,0x8
  444005:	mov    DWORD PTR ds:0x448070,edx
  44400b:	movzx  ecx,WORD PTR [edx+0x6]
  44400f:	movzx  edi,BYTE PTR [edx+0x3]
  444013:	movzx  edx,BYTE PTR [edx]
  444016:	shl    ecx,0x8
  444019:	add    ecx,edi
  44401b:	shl    ecx,0x8
  44401e:	add    ecx,edx
  444020:	mov    edx,DWORD PTR ds:0x448d00
  444026:	add    edx,0x1180d6aa
  44402c:	xor    edx,ecx
  44402e:	mov    DWORD PTR ds:0x448cf0,ecx
  444034:	mov    DWORD PTR [eax+0x10],edx
  444037:	mov    edx,DWORD PTR ds:0x448070
  44403d:	add    edx,0x8
  444040:	mov    DWORD PTR ds:0x448070,edx
  444046:	movzx  ecx,WORD PTR [edx+0x6]
  44404a:	movzx  edi,BYTE PTR [edx+0x3]
  44404e:	movzx  edx,BYTE PTR [edx]
  444051:	shl    ecx,0x8
  444054:	add    ecx,edi
  444056:	shl    ecx,0x8
  444059:	add    ecx,edx
  44405b:	mov    edx,DWORD PTR ds:0x448d00
  444061:	add    edx,0x1180d6aa
  444067:	xor    edx,ecx
  444069:	mov    DWORD PTR ds:0x448cf0,ecx
  44406f:	mov    DWORD PTR [eax+0x14],edx
  444072:	mov    edx,DWORD PTR ds:0x448070
  444078:	add    edx,0x8
  44407b:	add    eax,0x18
  44407e:	dec    esi
  44407f:	mov    DWORD PTR ds:0x448070,edx
  444085:	jne    0x443f20
  44408b:	pop    edi
  44408c:	pop    esi
  44408d:	ret    
  44408e:	int3   
  44408f:	int3   
  444090:	push   ecx
  444091:	mov    eax,ds:0x445074
  444096:	lea    ecx,[esp]
  444099:	push   ecx
  44409a:	push   0x0
  44409c:	mov    ds:0x448d2c,eax
  4440a1:	call   eax
  4440a3:	mov    eax,DWORD PTR [esp]
  4440a6:	mov    edx,DWORD PTR [eax]
  4440a8:	mov    edx,DWORD PTR [edx+0x48]
  4440ab:	lea    ecx,[esp]
  4440ae:	push   ecx
  4440af:	push   eax
  4440b0:	push   eax
  4440b1:	call   edx
  4440b3:	mov    ds:0x448d00,eax
  4440b8:	xor    eax,eax
  4440ba:	pop    ecx
  4440bb:	ret    0x4
  4440be:	int3   
  4440bf:	int3   
  4440c0:	mov    eax,ds:0x445000
  4440c5:	mov    ds:0x44a000,eax
  4440ca:	ret    
  4440cb:	int3   
  4440cc:	int3   
  4440cd:	int3   
  4440ce:	int3   
  4440cf:	int3   
  4440d0:	mov    eax,ds:0x445004
  4440d5:	mov    ds:0x44900c,eax
  4440da:	ret    
  4440db:	int3   
  4440dc:	int3   
  4440dd:	int3   
  4440de:	int3   
  4440df:	int3   
  4440e0:	mov    eax,ds:0x445004
  4440e5:	mov    ds:0x44a004,eax
  4440ea:	ret    
  4440eb:	int3   
  4440ec:	int3   
  4440ed:	int3   
  4440ee:	int3   
  4440ef:	int3   
  4440f0:	mov    eax,ds:0x445048
  4440f5:	mov    ds:0x449008,eax
  4440fa:	ret    
