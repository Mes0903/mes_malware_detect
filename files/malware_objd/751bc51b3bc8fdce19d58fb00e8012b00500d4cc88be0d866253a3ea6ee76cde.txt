
751bc51b3bc8fdce19d58fb00e8012b00500d4cc88be0d866253a3ea6ee76cde.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    DWORD PTR ds:0x42b1de,0x13
  401013:	cmp    DWORD PTR ds:0x42b1de,0x0
  40101a:	je     0x401078
  401020:	cmp    DWORD PTR ds:0x42b1de,0x7
  401027:	jb     0x401078
  40102d:	jmp    0x401050
  401032:	push   0x42a019
  401037:	push   0x564d
  40103c:	push   DWORD PTR [ebp-0x28]
  40103f:	push   0x8804
  401044:	push   DWORD PTR [ebp-0x24]
  401047:	push   DWORD PTR [ebp-0x18]
  40104a:	call   DWORD PTR ds:0x42b2ea
  401050:	cmp    DWORD PTR ds:0x42b1de,0x8
  401057:	jne    0x401068
  40105d:	mov    eax,ds:0x42b1de
  401062:	dec    eax
  401063:	mov    ds:0x42b1de,eax
  401068:	mov    eax,ds:0x42b1de
  40106d:	dec    eax
  40106e:	mov    ds:0x42b1de,eax
  401073:	jmp    0x401013
  401078:	mov    eax,DWORD PTR [ebp+0x8]
  40107b:	mov    ecx,DWORD PTR ds:0x42b1be
  401081:	add    DWORD PTR ds:0x42b22a,ecx
  401087:	push   ebx
  401088:	and    DWORD PTR ds:0x42b21e,0x0
  401092:	xor    ecx,ecx
  401094:	or     ecx,DWORD PTR ds:0x42b21e
  40109a:	inc    ecx
  40109b:	mov    DWORD PTR ds:0x42b21e,ecx
  4010a1:	cmp    DWORD PTR ds:0x42b21e,0xc
  4010a8:	ja     0x4010ef
  4010ae:	jmp    0x4010c8
  4010b3:	push   0x42a03d
  4010b8:	push   0x0
  4010ba:	push   DWORD PTR [ebp-0xc]
  4010bd:	push   0x87c3
  4010c2:	call   DWORD PTR ds:0x42b2ee
  4010c8:	cmp    DWORD PTR ds:0x42b21e,0xb
  4010cf:	jne    0x4010e2
  4010d5:	mov    ecx,DWORD PTR ds:0x42b21e
  4010db:	inc    ecx
  4010dc:	mov    DWORD PTR ds:0x42b21e,ecx
  4010e2:	cmp    DWORD PTR ds:0x42b21e,0x1b
  4010e9:	jb     0x401092
  4010ef:	push   esi
  4010f0:	push   edi
  4010f1:	mov    esi,0x75108ae
  4010f6:	mov    DWORD PTR ds:0x42b1f6,0x15
  401100:	cmp    DWORD PTR ds:0x42b1f6,0x0
  401107:	je     0x401156
  40110d:	cmp    DWORD PTR ds:0x42b1f6,0x9
  401114:	jb     0x401156
  40111a:	jmp    0x40112a
  40111f:	push   0x7250
  401124:	call   DWORD PTR ds:0x42b2f2
  40112a:	cmp    DWORD PTR ds:0x42b1f6,0xa
  401131:	jne    0x401144
  401137:	mov    ecx,DWORD PTR ds:0x42b1f6
  40113d:	dec    ecx
  40113e:	mov    DWORD PTR ds:0x42b1f6,ecx
  401144:	mov    ecx,DWORD PTR ds:0x42b1f6
  40114a:	dec    ecx
  40114b:	mov    DWORD PTR ds:0x42b1f6,ecx
  401151:	jmp    0x401100
  401156:	xor    eax,esi
  401158:	mov    edi,0x3272f5
  40115d:	dec    DWORD PTR ds:0x42b19e
  401163:	add    eax,edi
  401165:	add    DWORD PTR ds:0x42b186,edi
  40116b:	mov    DWORD PTR [ebp-0x40],eax
  40116e:	mov    eax,ds:0x42a2f2
  401173:	xor    DWORD PTR ds:0x42b1aa,0x2d22
  40117d:	mov    eax,DWORD PTR [eax]
  40117f:	mov    ecx,DWORD PTR ds:0x42b22e
  401185:	sbb    ecx,DWORD PTR ds:0x42b1fe
  40118b:	mov    DWORD PTR ds:0x42b22e,ecx
  401191:	mov    DWORD PTR [ebp-0x3c],eax
  401194:	and    DWORD PTR ds:0x42b192,0x0
  40119e:	jmp    0x4011b0
  4011a3:	mov    ecx,DWORD PTR ds:0x42b192
  4011a9:	inc    ecx
  4011aa:	mov    DWORD PTR ds:0x42b192,ecx
  4011b0:	cmp    DWORD PTR ds:0x42b192,0x15
  4011b7:	jae    0x4011f9
  4011bd:	cmp    DWORD PTR ds:0x42b192,0x8
  4011c4:	jg     0x4011f9
  4011ca:	jmp    0x4011da
  4011cf:	push   0x42b1aa
  4011d4:	call   DWORD PTR ds:0x42b2f6
  4011da:	cmp    DWORD PTR ds:0x42b192,0x7
  4011e1:	jne    0x4011f4
  4011e7:	mov    ecx,DWORD PTR ds:0x42b192
  4011ed:	inc    ecx
  4011ee:	mov    DWORD PTR ds:0x42b192,ecx
  4011f4:	jmp    0x4011a3
  4011f9:	mov    eax,ds:0x42a502
  4011fe:	xor    DWORD PTR ds:0x42b182,0x12c5
  401208:	mov    eax,DWORD PTR [eax]
  40120a:	mov    DWORD PTR [ebp-0x1c],eax
  40120d:	mov    DWORD PTR ds:0x42b1da,0x1a
  401217:	cmp    DWORD PTR ds:0x42b1da,0x0
  40121e:	je     0x40127b
  401224:	cmp    DWORD PTR ds:0x42b1da,0x8
  40122b:	jl     0x40127b
  401231:	jmp    0x401250
  401236:	push   0x42b1ba
  40123b:	push   0x42b1d2
  401240:	push   0x8af3
  401245:	push   0x42a12c
  40124a:	call   DWORD PTR ds:0x42b2fa
  401250:	cmp    DWORD PTR ds:0x42b1da,0x9
  401257:	jne    0x40126b
  40125d:	xor    eax,eax
  40125f:	or     eax,DWORD PTR ds:0x42b1da
  401265:	dec    eax
  401266:	mov    ds:0x42b1da,eax
  40126b:	mov    eax,ds:0x42b1da
  401270:	dec    eax
  401271:	mov    ds:0x42b1da,eax
  401276:	jmp    0x401217
  40127b:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  401282:	mov    eax,DWORD PTR [ebp-0x34]
  401285:	xor    eax,esi
  401287:	xor    DWORD PTR ds:0x42b222,edi
  40128d:	add    eax,edi
  40128f:	or     ecx,DWORD PTR ds:0x42b222
  401295:	mov    DWORD PTR [ebp-0x40],eax
  401298:	adc    ecx,DWORD PTR ds:0x42b19a
  40129e:	mov    eax,ds:0x42a472
  4012a3:	xor    DWORD PTR ds:0x42b1d6,0x6afc
  4012ad:	mov    DWORD PTR [ebp-0x40],eax
  4012b0:	mov    eax,DWORD PTR [ebp-0x3c]
  4012b3:	mov    DWORD PTR [ebp-0x14],eax
  4012b6:	adc    eax,0x46d9
  4012bb:	mov    eax,DWORD PTR [ebp-0x14]
  4012be:	and    DWORD PTR ds:0x42b222,0x0
  4012c8:	jmp    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x42b222
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x42b222,ecx
  4012da:	cmp    DWORD PTR ds:0x42b222,0x1c
  4012e1:	jae    0x401328
  4012e7:	cmp    DWORD PTR ds:0x42b222,0x5
  4012ee:	jg     0x401328
  4012f4:	jmp    0x401309
  4012f9:	push   0x42b1e2
  4012fe:	push   0x42a2a1
  401303:	call   DWORD PTR ds:0x42b2fe
  401309:	cmp    DWORD PTR ds:0x42b222,0x4
  401310:	jne    0x401323
  401316:	mov    ecx,DWORD PTR ds:0x42b222
  40131c:	inc    ecx
  40131d:	mov    DWORD PTR ds:0x42b222,ecx
  401323:	jmp    0x4012cd
  401328:	push   0x4
  40132a:	or     DWORD PTR ds:0x42b186,0x3485
  401334:	pop    ecx
  401335:	and    DWORD PTR ds:0x42b206,0x42b1ee
  40133f:	sub    ecx,eax
  401341:	dec    eax
  401342:	add    ecx,DWORD PTR [ebp-0x1c]
  401345:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  40134c:	adc    DWORD PTR ds:0x42b20e,0x42b1e2
  401356:	mov    DWORD PTR [ebp-0x18],ecx
  401359:	mov    DWORD PTR [ebp-0xa0],0xf89c85a1
  401363:	or     DWORD PTR ds:0x42b182,0x6f89
  40136d:	mov    eax,DWORD PTR [ebp-0x14]
  401370:	xor    DWORD PTR ds:0x42b20e,0x6cd3
  40137a:	mov    DWORD PTR [ebp-0x9c],eax
  401380:	adc    eax,DWORD PTR ds:0x42b196
  401386:	mov    eax,DWORD PTR [ebp-0x18]
  401389:	and    DWORD PTR ds:0x42b22a,0x42b226
  401393:	mov    DWORD PTR [ebp-0x98],eax
  401399:	xor    DWORD PTR ds:0x42b186,ecx
  40139f:	mov    eax,DWORD PTR [ebp-0x2c]
  4013a2:	adc    DWORD PTR ds:0x42b1f6,0x42b22a
  4013ac:	xor    eax,esi
  4013ae:	add    eax,edi
  4013b0:	add    DWORD PTR ds:0x42b22e,0x47bc
  4013ba:	mov    DWORD PTR [ebp-0x94],eax
  4013c0:	and    DWORD PTR ds:0x42b20e,0x42b202
  4013ca:	lea    eax,[ebp-0x48]
  4013cd:	mov    DWORD PTR [ebp-0x90],eax
  4013d3:	add    eax,0x2eac
  4013d8:	mov    eax,DWORD PTR [ebp-0xa0]
  4013de:	xor    eax,esi
  4013e0:	sub    DWORD PTR ds:0x42b20e,0x42b1f6
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0xa0],eax
  4013f2:	inc    DWORD PTR ds:0x42b1ce
  4013f8:	lea    eax,[ebp-0xa0]
  4013fe:	add    DWORD PTR ds:0x42b1a6,0x42b21a
  401408:	push   eax
  401409:	sub    DWORD PTR ds:0x42b1fe,ebx
  40140f:	mov    eax,DWORD PTR [ebp+0xc]
  401412:	and    DWORD PTR ds:0x42b226,0xfdc
  40141c:	xor    eax,esi
  40141e:	add    eax,edi
  401420:	push   eax
  401421:	and    DWORD PTR ds:0x42b192,ecx
  401427:	mov    eax,ds:0x42a492
  40142c:	sub    DWORD PTR ds:0x42b1f6,0x42b1c6
  401436:	push   0x42a3e8
  40143b:	and    DWORD PTR ds:0x42b1c2,0x42b19e
  401445:	push   DWORD PTR [eax]
  401447:	call   0x4061fa
  40144c:	mov    ebx,DWORD PTR ds:0x42b226
  401452:	add    ebx,DWORD PTR ds:0x42b19a
  401458:	mov    DWORD PTR ds:0x42b226,ebx
  40145e:	mov    ebx,DWORD PTR [ebp-0x14]
  401461:	adc    edx,DWORD PTR ds:0x42b1da
  401467:	mov    eax,DWORD PTR [ebp-0x18]
  40146a:	and    DWORD PTR ds:0x42b1f2,0x0
  401474:	mov    edx,DWORD PTR ds:0x42b1f2
  40147a:	inc    edx
  40147b:	mov    DWORD PTR ds:0x42b1f2,edx
  401481:	cmp    DWORD PTR ds:0x42b1f2,0x8
  401488:	ja     0x4014d0
  40148e:	jmp    0x4014a9
  401493:	push   DWORD PTR [ebp-0x10]
  401496:	push   DWORD PTR [ebp-0x28]
  401499:	push   0x42a223
  40149e:	push   0x400000
  4014a3:	call   DWORD PTR ds:0x42b306
  4014a9:	cmp    DWORD PTR ds:0x42b1f2,0x7
  4014b0:	jne    0x4014c3
  4014b6:	mov    edx,DWORD PTR ds:0x42b1f2
  4014bc:	inc    edx
  4014bd:	mov    DWORD PTR ds:0x42b1f2,edx
  4014c3:	cmp    DWORD PTR ds:0x42b1f2,0x1e
  4014ca:	jb     0x401474
  4014d0:	mov    DWORD PTR [ebp-0x58],eax
  4014d3:	or     DWORD PTR ds:0x42b1ce,edi
  4014d9:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  4014e0:	sub    DWORD PTR ds:0x42b1f2,0x209f
  4014ea:	mov    eax,0xf89c85a3
  4014ef:	sbb    DWORD PTR ds:0x42b21a,0x6d23
  4014f9:	mov    DWORD PTR [ebp-0x1c],eax
  4014fc:	sub    DWORD PTR ds:0x42b206,ebx
  401502:	lea    ecx,[eax+0x2]
  401505:	adc    edx,0x42c6
  40150b:	mov    DWORD PTR [ebp-0x28],ecx
  40150e:	inc    edx
  40150f:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  401516:	or     edx,DWORD PTR ds:0x42b182
  40151c:	mov    DWORD PTR [ebp-0x8],eax
  40151f:	mov    edx,DWORD PTR ds:0x42b256
  401525:	xor    eax,eax
  401527:	xor    eax,DWORD PTR ds:0x42b276
  40152d:	sub    edx,eax
  40152f:	sub    edx,DWORD PTR [edx+eax*1]
  401532:	mov    eax,DWORD PTR [ebp-0x10]
  401535:	xor    DWORD PTR ds:0x42b1b2,edi
  40153b:	xor    eax,esi
  40153d:	sub    DWORD PTR ds:0x42b1be,ecx
  401543:	mov    edx,0xffcd8d8b
  401548:	sbb    DWORD PTR ds:0x42b182,0x343
  401552:	sub    edx,eax
  401554:	mov    DWORD PTR [ebp-0xc],edx
  401557:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  40155e:	mov    eax,DWORD PTR [ebp-0x8]
  401561:	mov    DWORD PTR ds:0x42b216,0x6ef4
  40156b:	mov    DWORD PTR [ebp-0x3c],ebx
  40156e:	mov    DWORD PTR ds:0x42b206,0x4694
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x42b21e,0x4f34
  401584:	je     0x401870
  40158a:	or     eax,DWORD PTR ds:0x42b22e
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	and    DWORD PTR ds:0x42b21a,0x0
  40159d:	jmp    0x4015af
  4015a2:	mov    ecx,DWORD PTR ds:0x42b21a
  4015a8:	inc    ecx
  4015a9:	mov    DWORD PTR ds:0x42b21a,ecx
  4015af:	cmp    DWORD PTR ds:0x42b21a,0x1b
  4015b6:	jae    0x4015e4
  4015bc:	cmp    DWORD PTR ds:0x42b21a,0x1c
  4015c3:	jb     0x4015e4
  4015c9:	jmp    0x4015df
  4015ce:	push   0x42a211
  4015d3:	push   DWORD PTR [ebp-0x1c]
  4015d6:	push   DWORD PTR [ebp-0x14]
  4015d9:	call   DWORD PTR ds:0x42b30e
  4015df:	jmp    0x4015a2
  4015e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4015e7:	adc    DWORD PTR ds:0x42b196,0x5f31
  4015f1:	xor    eax,esi
  4015f3:	xor    ecx,esi
  4015f5:	or     DWORD PTR ds:0x42b1d6,0x22e1
  4015ff:	lea    ecx,[eax+ecx*1+0x64e5ea]
  401606:	mov    eax,ds:0x42b186
  40160b:	xor    DWORD PTR ds:0x42b1ee,eax
  401611:	mov    eax,DWORD PTR [ebp-0xc]
  401614:	xor    edx,edx
  401616:	xor    DWORD PTR ds:0x42b212,0x42b202
  401620:	div    ecx
  401622:	mov    eax,DWORD PTR [ebp-0x8]
  401625:	sub    DWORD PTR ds:0x42b192,edi
  40162b:	mov    ecx,DWORD PTR [ebp-0x10]
  40162e:	xor    eax,esi
  401630:	add    DWORD PTR ds:0x42b1c6,0x2cb7
  40163a:	xor    ecx,esi
  40163c:	sub    eax,ecx
  40163e:	mov    DWORD PTR ds:0x42b21a,0x2b73
  401648:	cmp    edx,eax
  40164a:	mov    DWORD PTR ds:0x42b21e,0x4704
  401654:	jne    0x40181a
  40165a:	mov    eax,DWORD PTR [ebp-0xc]
  40165d:	xor    ecx,0x1cf0
  401663:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  40166a:	mov    eax,DWORD PTR [ebp-0x28]
  40166d:	add    DWORD PTR ds:0x42b1ce,0x4d15
  401677:	mov    ecx,DWORD PTR [ebp-0x18]
  40167a:	or     DWORD PTR ds:0x42b18e,0x42b1ea
  401684:	xor    eax,esi
  401686:	add    DWORD PTR ds:0x42b18e,0x42b182
  401690:	xor    ecx,esi
  401692:	or     DWORD PTR ds:0x42b21a,0x42b1aa
  40169c:	add    eax,edi
  40169e:	adc    DWORD PTR ds:0x42b1e2,0x3afa
  4016a8:	add    ecx,edi
  4016aa:	mov    BYTE PTR [ebp-0x21],dl
  4016ad:	cmp    eax,ecx
  4016af:	jae    0x4017e8
  4016b5:	and    DWORD PTR ds:0x42b1fe,0x0
  4016bf:	mov    edx,DWORD PTR ds:0x42b1fe
  4016c5:	inc    edx
  4016c6:	mov    DWORD PTR ds:0x42b1fe,edx
  4016cc:	cmp    DWORD PTR ds:0x42b1fe,0x27
  4016d3:	ja     0x4016f6
  4016d9:	jmp    0x4016e9
  4016de:	push   0x18bf
  4016e3:	call   DWORD PTR ds:0x42b316
  4016e9:	cmp    DWORD PTR ds:0x42b1fe,0x18
  4016f0:	jb     0x4016bf
  4016f6:	lea    ecx,[eax-0x3272f5]
  4016fc:	adc    DWORD PTR ds:0x42b19e,0x3c59
  401706:	mov    DWORD PTR [ebp-0x14],ecx
  401709:	mov    edx,DWORD PTR [ebp-0x14]
  40170c:	xor    edx,esi
  40170e:	add    DWORD PTR ds:0x42b192,0x42b1fa
  401718:	add    edx,0x7f55d8e3
  40171e:	lea    ecx,[ebp+eax*4-0xb4]
  401725:	mov    DWORD PTR ds:0x42b1ca,0x6fb0
  40172f:	mov    DWORD PTR [ecx],edx
  401731:	mov    edx,DWORD PTR [ecx]
  401733:	cmp    edx,0x244ecb80
  401739:	mov    DWORD PTR ds:0x42b1e2,0xbe5
  401743:	jbe    0x40175e
  401749:	add    DWORD PTR [ecx],0x405fcc1
  40174f:	mov    DWORD PTR ds:0x42b1ca,0x62ff
  401759:	jmp    0x401764
  40175e:	add    DWORD PTR [ecx],0xfdaf433f
  401764:	sbb    DWORD PTR ds:0x42b1c2,0x1be5
  40176e:	mov    ecx,DWORD PTR [ebp-0x18]
  401771:	xor    DWORD PTR ds:0x42b1c6,0x42b18e
  40177b:	xor    ecx,esi
  40177d:	xor    DWORD PTR ds:0x42b1f6,0x42b192
  401787:	inc    eax
  401788:	inc    DWORD PTR [ebp-0x14]
  40178b:	adc    DWORD PTR ds:0x42b1b2,0x7e0f
  401795:	add    ecx,edi
  401797:	cmp    eax,ecx
  401799:	jb     0x401709
  40179f:	mov    DWORD PTR ds:0x42b192,0x13
  4017a9:	cmp    DWORD PTR ds:0x42b192,0x0
  4017b0:	je     0x4017e5
  4017b6:	cmp    DWORD PTR ds:0x42b192,0x20
  4017bd:	jl     0x4017e5
  4017c3:	jmp    0x4017d5
  4017c8:	push   0xd
  4017ca:	push   0x57ae
  4017cf:	call   DWORD PTR ds:0x42b31a
  4017d5:	mov    eax,ds:0x42b192
  4017da:	dec    eax
  4017db:	mov    ds:0x42b192,eax
  4017e0:	jmp    0x4017a9
  4017e5:	mov    dl,BYTE PTR [ebp-0x21]
  4017e8:	mov    eax,ds:0x42b226
  4017ed:	sub    eax,DWORD PTR ds:0x42b1ce
  4017f3:	mov    ds:0x42b226,eax
  4017f8:	mov    eax,DWORD PTR [ebp-0x34]
  4017fb:	xor    al,0xae
  4017fd:	mov    cl,0xb
  4017ff:	sub    cl,al
  401801:	add    dl,cl
  401803:	mov    ecx,DWORD PTR [ebp-0x1c]
  401806:	xor    cl,0xae
  401809:	sub    cl,0xb
  40180c:	ror    dl,cl
  40180e:	xor    eax,eax
  401810:	mov    eax,DWORD PTR [ebp-0xc]
  401813:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  40181a:	mov    eax,DWORD PTR [ebp-0xc]
  40181d:	mov    ecx,DWORD PTR [ebp-0x28]
  401820:	sub    eax,edi
  401822:	xor    eax,esi
  401824:	cmp    eax,ecx
  401826:	jne    0x401850
  40182c:	mov    eax,DWORD PTR [ebp-0x8]
  40182f:	mov    ecx,DWORD PTR [ebp-0x10]
  401832:	xor    eax,esi
  401834:	xor    ecx,esi
  401836:	sub    eax,ecx
  401838:	sub    eax,edi
  40183a:	xor    eax,esi
  40183c:	mov    DWORD PTR [ebp-0x8],eax
  40183f:	mov    eax,DWORD PTR [ebp-0x10]
  401842:	xor    eax,esi
  401844:	mov    ecx,0xffcd8d8b
  401849:	sub    ecx,eax
  40184b:	jmp    0x40185f
  401850:	mov    eax,DWORD PTR [ebp-0x10]
  401853:	xor    eax,esi
  401855:	mov    ecx,0xffcd8d0b
  40185a:	sub    ecx,eax
  40185c:	add    ecx,DWORD PTR [ebp-0xc]
  40185f:	mov    DWORD PTR [ebp-0xc],ecx
  401862:	mov    eax,DWORD PTR [ebp-0x8]
  401865:	cmp    eax,0xf89c85a5
  40186a:	jne    0x40158a
  401870:	mov    DWORD PTR [ebp-0x34],0x9
  401877:	mov    ecx,DWORD PTR [ebp+0x8]
  40187a:	xor    ecx,esi
  40187c:	add    ecx,edi
  40187e:	jmp    0x406188
  401883:	lea    eax,[ecx+ebx*1]
  401886:	mov    DWORD PTR [ebp-0x2c],eax
  401889:	mov    eax,DWORD PTR [ebp-0x58]
  40188c:	sub    eax,ecx
  40188e:	mov    DWORD PTR [ebp-0x1c],eax
  401891:	mov    eax,DWORD PTR [ebp-0x1c]
  401894:	mov    DWORD PTR [ebp-0x14],eax
  401897:	mov    eax,DWORD PTR [ebp-0x2c]
  40189a:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4018a1:	mov    DWORD PTR [ebp-0x54],eax
  4018a4:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  4018ab:	mov    eax,DWORD PTR [ebp-0x38]
  4018ae:	xor    eax,esi
  4018b0:	add    eax,edi
  4018b2:	mov    DWORD PTR [ebp-0x10],eax
  4018b5:	mov    eax,DWORD PTR [ebp-0x38]
  4018b8:	xor    eax,esi
  4018ba:	add    eax,edi
  4018bc:	mov    DWORD PTR [ebp-0x8],eax
  4018bf:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  4018c6:	jmp    0x403c1b
  4018cb:	mov    al,0x2a
  4018cd:	dec    ecx
  4018ce:	and    ebp,eax
  4018d0:	adc    ch,BYTE PTR [eax-0x7dd88776]
  4018d6:	push   esi
  4018d7:	ret    0x9118
  4018da:	in     eax,dx
  4018db:	add    DWORD PTR [ebx+0x5e4b8383],0xffffff83
  4018e2:	sub    DWORD PTR [eax],0x31
  4018e5:	es cmp al,0x24
  4018e8:	cmp    BYTE PTR [edx],ah
  4018ea:	cs js  0x401928
  4018ed:	je     0x401966
  4018ef:	out    0x71,eax
  4018f1:	jo     0x401966
  4018f3:	jo     0x401940
  4018f5:	fsub   st,st(1)
  4018f7:	cld    
  4018f8:	ins    DWORD PTR es:[edi],dx
  4018f9:	push   ebp
  4018fa:	jb     0x401978
  4018fc:	bound  ebp,QWORD PTR [ebp-0x319b8f83]
  401902:	pusha  
  401903:	push   ebx
  401904:	cmp    eax,0x87960391
  401909:	push   ax
  40190b:	jle    0x401953
  40190d:	lea    esi,[edi+0x42bbbd7e]
  401913:	xor    esi,edi
  401915:	ja     0x4018f8
  401917:	add    ebp,DWORD PTR [edx+0x7e]
  40191a:	pop    ds
  40191b:	lock inc esp
  40191d:	rol    bl,1
  40191f:	lock xchg esi,eax
  401921:	sub    bl,bh
  401923:	xchg   edx,eax
  401924:	xor    al,0xe
  401926:	fs mov dl,0x93
  401929:	fld    DWORD PTR [esi]
  40192b:	jo     0x40190d
  40192d:	sbb    ecx,ebp
  40192f:	lsl    esi,WORD PTR [edi]
  401932:	and    eax,0x72371155
  401937:	jne    0x4018fd
  401939:	scas   al,BYTE PTR es:[edi]
  40193a:	sub    bl,BYTE PTR [eax+ebx*1-0x49]
  40193e:	(bad)  
  40193f:	hlt    
  401940:	push   esp
  401941:	xor    cl,BYTE PTR [ecx+0x462d54b]
  401947:	and    eax,DWORD PTR [ebx]
  401949:	test   DWORD PTR [edx+edi*2-0x6da15a20],edi
  401950:	mov    esp,0x4c9b2916
  401955:	or     bl,BYTE PTR [edi+0x128a8b41]
  40195b:	jecxz  0x40198d
  40195d:	imul   edx,DWORD PTR [eax-0x596b5b7],0xffffffce
  401964:	xchg   ebx,eax
  401965:	xor    al,0x94
  401967:	int    0xc6
  401969:	rcl    DWORD PTR [ebp+0x6b58f96c],1
  40196f:	push   ecx
  401970:	adc    DWORD PTR [edi],edi
  401972:	or     al,BYTE PTR [edi+0x1a]
  401975:	mov    al,0x52
  401977:	shl    DWORD PTR [esi+0x6719dd4d],cl
  40197d:	add    BYTE PTR [ebx+0x67],ch
  401980:	mov    eax,0x5be7504
  401985:	pop    ebx
  401986:	and    al,0x52
  401988:	mov    es,WORD PTR [ebx]
  40198a:	repz pop esp
  40198c:	retf   0xc6f
  40198f:	scas   al,BYTE PTR es:[edi]
  401990:	and    ebp,DWORD PTR [ebx-0x78]
  401993:	adc    BYTE PTR [eax+ebp*2+0x66],ch
  401997:	add    DWORD PTR [ecx+0x61be6f2f],ecx
  40199d:	and    al,0x29
  40199f:	mov    dh,bl
  4019a1:	push   edx
  4019a2:	push   ebx
  4019a3:	test   bl,al
  4019a5:	mov    edi,0x89fd9d7c
  4019aa:	leave  
  4019ab:	popf   
  4019ac:	call   DWORD PTR [edx-0x69]
  4019af:	xchg   ecx,eax
  4019b0:	cmc    
  4019b1:	int    0x8a
  4019b3:	daa    
  4019b4:	fimul  DWORD PTR [ebx-0x4a]
  4019b7:	push   0x66
  4019b9:	call   0x9a49:0x514e5e31
  4019c0:	push   ebx
  4019c1:	lods   al,BYTE PTR ds:[esi]
  4019c2:	push   eax
  4019c3:	add    eax,0xb1caa74f
  4019c8:	in     eax,0x73
  4019ca:	jle    0x4019d7
  4019cc:	nop
  4019cd:	sub    esi,esp
  4019cf:	dec    edi
  4019d0:	mov    eax,ds:0xe7617373
  4019d5:	push   ebx
  4019d6:	adc    edx,DWORD PTR [edx+eax*2+0x60a5c0a0]
  4019dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019de:	xchg   esp,eax
  4019df:	outs   dx,DWORD PTR ds:[esi]
  4019e0:	dec    ebx
  4019e1:	enter  0x3231,0x4e
  4019e5:	ret    
  4019e6:	mov    dl,0x2e
  4019e8:	sbb    al,0xbe
  4019ea:	inc    edx
  4019eb:	pop    edx
  4019ec:	xchg   edi,eax
  4019ed:	arpl   WORD PTR [edx-0x3e],bx
  4019f0:	pop    ebp
  4019f1:	fdiv   QWORD PTR [ecx-0x72164cc6]
  4019f7:	pop    esi
  4019f8:	(bad)  
  4019f9:	fimul  DWORD PTR [ebx+edi*4-0x57656d94]
  401a00:	pop    ebp
  401a01:	inc    esi
  401a02:	mov    esi,0x59894772
  401a07:	add    DWORD PTR [edi+0x6],0x40
  401a0b:	leave  
  401a0c:	cmp    edx,DWORD PTR [ebx+0x28f1a775]
  401a12:	fld    QWORD PTR [ebp-0x51207b3a]
  401a18:	clc    
  401a19:	dec    esp
  401a1a:	add    eax,0x6fa33b6
  401a1f:	fisub  DWORD PTR [esi+0x4a6eebe4]
  401a25:	and    edi,DWORD PTR ds:0x7c9a49b5
  401a2b:	repnz stos DWORD PTR es:[edi],eax
  401a2d:	retf   
  401a2e:	dec    ecx
  401a2f:	xor    DWORD PTR [ebp+ebx*8+0x20a9d3fa],0x15916f59
  401a3a:	jo     0x4019e1
  401a3c:	adc    al,0x91
  401a3e:	data16 rol ch,1
  401a41:	push   eax
  401a42:	push   cs
  401a43:	jbe    0x401a0e
  401a45:	add    DWORD PTR [esi],0x4
  401a48:	and    DWORD PTR [edi+0x74],0xffffffba
  401a4c:	dec    ebp
  401a4d:	xor    al,0x7c
  401a4f:	das    
  401a50:	cdq    
  401a51:	xor    al,0x44
  401a53:	mov    cl,0x16
  401a55:	aas    
  401a56:	dec    edi
  401a57:	xor    al,0x71
  401a59:	mov    WORD PTR [ebx-0x1b36dede],?
  401a5f:	call   0x2cf399b5
  401a64:	in     eax,dx
  401a65:	jmp    0x401ad6
  401a67:	mov    WORD PTR [esi+0x60],ds
  401a6a:	add    ebp,DWORD PTR [ebx]
  401a6c:	pop    eax
  401a6d:	add    BYTE PTR [ecx+eax*8+0x44],dl
  401a71:	adc    bh,BYTE PTR [edi]
  401a73:	mov    ds:0x28b7f279,al
  401a78:	dec    esp
  401a79:	add    esp,DWORD PTR ds:0x9601ea10
  401a7f:	rcl    bh,0x8c
  401a82:	adc    dl,BYTE PTR [ebp-0x2c81d04b]
  401a88:	cmp    al,0xa2
  401a8a:	cdq    
  401a8b:	dec    esi
  401a8c:	bound  eax,QWORD PTR [esi]
  401a8e:	sub    al,0xfe
  401a90:	sti    
  401a91:	shl    BYTE PTR [eax+esi*2+0x64],0xe8
  401a96:	mov    DWORD PTR [ecx+0xaa7f615],0x26d83923
  401aa0:	fs adc esp,ebx
  401aa3:	call   FWORD PTR [ecx]
  401aa5:	arpl   WORD PTR [eax+edi*4+0x6c],dx
  401aa9:	into   
  401aaa:	dec    edi
  401aab:	mov    edi,0x724e9bce
  401ab0:	retf   
  401ab1:	fwait
  401ab2:	add    DWORD PTR [ebp-0x24],esi
  401ab5:	mov    ds:0x2d6f8dec,al
  401aba:	sbb    cl,bl
  401abc:	sub    cl,bl
  401abe:	rol    BYTE PTR [ebp+0x5aa6d22f],0xab
  401ac5:	cmp    bh,dh
  401ac7:	pop    ebx
  401ac8:	and    ch,al
  401aca:	inc    ebx
  401acb:	cli    
  401acc:	cmc    
  401acd:	xchg   DWORD PTR [esi+esi*4],esi
  401ad0:	mov    dl,ch
  401ad2:	popa   
  401ad3:	xor    BYTE PTR [eiz*8+0x509dd6fd],al
  401ada:	stos   DWORD PTR es:[edi],eax
  401adb:	xor    DWORD PTR [eax+edx*1-0x46],ecx
  401adf:	psubd  mm5,mm0
  401ae2:	ret    0xffc0
  401ae5:	sub    cl,BYTE PTR [edx-0x7b]
  401ae8:	sbb    eax,0x25b340ca
  401aed:	cmp    eax,0xb893787c
  401af2:	shl    BYTE PTR [edx+0x69cd1152],1
  401af8:	std    
  401af9:	pop    edi
  401afa:	in     eax,dx
  401afb:	xlat   BYTE PTR ds:[ebx]
  401afc:	fistp  QWORD PTR [ecx]
  401afe:	sbb    DWORD PTR [esi],0x5b
  401b01:	jns    0x401acf
  401b03:	push   edi
  401b04:	cmp    eax,ebx
  401b06:	imul   esi,edi,0x70e17f30
  401b0c:	ds push 0xcfe7c8ab
  401b12:	loope  0x401a97
  401b14:	imul   ebp,DWORD PTR [ebx-0x2d],0xf5c9c73f
  401b1b:	xor    bl,cl
  401b1d:	sbb    eax,0x2f64b74d
  401b22:	or     BYTE PTR [eax+eax*2-0x1fd9d352],ch
  401b29:	popf   
  401b2a:	ror    eax,1
  401b2c:	push   ss
  401b2d:	jmp    0xe5de:0xe04b8fdb
  401b34:	outs   dx,BYTE PTR ds:[esi]
  401b35:	ror    BYTE PTR [esi],0x9f
  401b38:	in     al,dx
  401b39:	test   BYTE PTR [eax+edi*1-0x1c],al
  401b3d:	iret   
  401b3e:	(bad)  
  401b3f:	ret    0xcce8
  401b42:	js     0x401ac7
  401b44:	jae    0x401b91
  401b46:	int    0x3d
  401b48:	lods   eax,DWORD PTR ds:[esi]
  401b49:	jl     0x401b52
  401b4b:	xor    bh,ch
  401b4d:	dec    ebp
  401b4e:	out    0xf4,eax
  401b50:	ins    DWORD PTR es:[edi],dx
  401b51:	push   ecx
  401b52:	cmc    
  401b53:	xchg   ebp,eax
  401b54:	mov    ah,0x99
  401b56:	mov    esi,0xb7d8977e
  401b5b:	sbb    eax,0x3a3ca483
  401b60:	add    edx,DWORD PTR [edi-0x1a5e741b]
  401b66:	mov    bh,0xf1
  401b68:	add    DWORD PTR [ecx-0xb6cce91],esp
  401b6e:	jo     0x401ba3
  401b70:	inc    ebp
  401b71:	adc    BYTE PTR [ecx-0x6a7f7e03],al
  401b77:	in     al,0x96
  401b79:	xor    DWORD PTR [edi+0x4239aece],esp
  401b7f:	lea    edi,[eax-0x36]
  401b82:	shl    BYTE PTR [edi+0x18],1
  401b85:	int    0x37
  401b87:	xlat   BYTE PTR ds:[ebx]
  401b88:	mov    esi,0xe832f9a0
  401b8d:	rcl    DWORD PTR [ebp-0x6f263b76],cl
  401b93:	popf   
  401b94:	daa    
  401b95:	out    0x26,al
  401b97:	in     al,0x33
  401b99:	push   esp
  401b9a:	mov    dh,0xbd
  401b9c:	push   edx
  401b9d:	cmp    DWORD PTR ds:0xda831013,0x51
  401ba4:	push   ecx
  401ba5:	add    al,0x3f
  401ba7:	mov    ds:0xe715d356,al
  401bac:	shr    DWORD PTR [ecx-0x5b730aa3],0x58
  401bb3:	ret    
  401bb4:	xchg   esp,eax
  401bb5:	jb     0x401ba9
  401bb7:	or     BYTE PTR [edi+edi*4-0x5],0x35
  401bbc:	enter  0xd684,0x2
  401bc0:	sbb    edx,DWORD PTR [ebx-0x57]
  401bc3:	in     eax,dx
  401bc4:	in     al,0xdd
  401bc6:	sub    eax,0x62a332f2
  401bcb:	inc    ebx
  401bcc:	adc    al,dh
  401bce:	imul   ecx,DWORD PTR [edi-0x6d9ba802],0xaac3f77d
  401bd8:	fisttp WORD PTR [ebx-0x393d5760]
  401bde:	xor    al,bh
  401be0:	mov    eax,0x1e4ce3cd
  401be5:	mov    WORD PTR [ecx],ds
  401be7:	clc    
  401be8:	push   ds
  401be9:	mov    ch,0x9f
  401beb:	ja     0xc90f417
  401bf1:	or     DWORD PTR [esi],ebp
  401bf3:	sar    BYTE PTR [esi-0x7280e8cc],cl
  401bf9:	test   al,0xd5
  401bfb:	ins    DWORD PTR es:[edi],dx
  401bfc:	and    dh,BYTE PTR [edi+0x3c9c3071]
  401c02:	mov    ah,0x63
  401c04:	lea    esp,ds:0x73f53156
  401c0a:	pop    ds
  401c0b:	outs   dx,BYTE PTR ds:[esi]
  401c0c:	int3   
  401c0d:	jge    0x401c35
  401c0f:	mov    ds:0x6131f858,eax
  401c14:	iret   
  401c15:	mov    WORD PTR [edx-0x56],fs
  401c18:	inc    edx
  401c19:	jno    0x401c86
  401c1b:	in     al,dx
  401c1c:	imul   eax,DWORD PTR [ecx],0xffffff8c
  401c1f:	mov    eax,ds:0x86d96ef
  401c24:	or     esi,DWORD PTR [esi+0x3c]
  401c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c28:	stos   DWORD PTR es:[edi],eax
  401c29:	rol    BYTE PTR [ebx-0x19],1
  401c2c:	fild   QWORD PTR [ecx+0x7f]
  401c2f:	les    esi,FWORD PTR [edi+0x8]
  401c32:	jno    0x401bc2
  401c34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c35:	stos   BYTE PTR es:[edi],al
  401c36:	mov    edi,0xb328312b
  401c3b:	icebp  
  401c3c:	pop    ecx
  401c3d:	jae    0x401c28
  401c3f:	fcomi  st,st(7)
  401c41:	mov    cl,0xc3
  401c43:	jo     0x401be9
  401c45:	fldenv [edx-0x36]
  401c48:	dec    edx
  401c49:	outs   dx,DWORD PTR ds:[esi]
  401c4a:	or     eax,0x20db14bb
  401c4f:	fistp  DWORD PTR [eax+0x7e]
  401c52:	inc    edx
  401c53:	mov    edx,0x2ee6eb49
  401c58:	cmp    al,bh
  401c5a:	mov    edx,0xe6835398
  401c5f:	stc    
  401c60:	loope  0x401ca0
  401c62:	dec    edi
  401c63:	jo     0x401c30
  401c65:	jb     0x401bea
  401c67:	push   cs
  401c68:	dec    edi
  401c69:	aaa    
  401c6a:	pop    ebx
  401c6b:	jl     0x401c6d
  401c6d:	pop    esi
  401c6e:	pushf  
  401c6f:	addr16 pop es
  401c71:	adc    dh,BYTE PTR [ecx-0x2b]
  401c74:	adc    esi,ecx
  401c76:	adc    bl,BYTE PTR [edi]
  401c78:	or     DWORD PTR [edx-0x25],edx
  401c7b:	scas   al,BYTE PTR es:[edi]
  401c7c:	xchg   esp,eax
  401c7d:	or     BYTE PTR [eax-0x2f],ah
  401c80:	hlt    
  401c81:	fs xor al,0x61
  401c84:	and    al,0xa3
  401c86:	test   BYTE PTR [edi-0x1],0x13
  401c8a:	xchg   BYTE PTR [edx],al
  401c8c:	xchg   ecx,eax
  401c8d:	dec    edi
  401c8e:	pop    ds
  401c8f:	mov    ebx,0x2ce36c1b
  401c94:	jne    0x401c42
  401c96:	fidiv  WORD PTR [ebx-0x591a7bcd]
  401c9c:	sahf   
  401c9d:	sub    ebp,DWORD PTR ds:0x268fde5f
  401ca3:	mov    ch,0xef
  401ca5:	je     0x401c6e
  401ca7:	inc    esi
  401ca8:	inc    eax
  401ca9:	xchg   edx,eax
  401caa:	test   eax,0x64f578f9
  401caf:	inc    esp
  401cb0:	or     bh,0x2a
  401cb3:	retf   
  401cb4:	add    eax,0x3da4ca0a
  401cb9:	add    BYTE PTR ds:0x83f1d0d5,ah
  401cbf:	xchg   cx,ax
  401cc1:	push   eax
  401cc2:	cmp    BYTE PTR [ebx+edi*4+0x75c12d72],bh
  401cc9:	jle    0x401cc0
  401ccb:	stos   DWORD PTR es:[edi],eax
  401ccc:	or     BYTE PTR [eax+0x382b1491],dl
  401cd2:	push   edx
  401cd3:	push   0x703c6dbf
  401cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cd9:	or     ch,BYTE PTR [ebp-0x75]
  401cdc:	push   ebx
  401cdd:	sbb    eax,0x719c87c7
  401ce2:	mov    DWORD PTR ds:0x28880f11,eax
  401ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ce9:	sub    al,0x41
  401ceb:	sub    cl,BYTE PTR [eax]
  401ced:	cmp    bl,BYTE PTR [esi+0x62]
  401cf0:	(bad)  
  401cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cf2:	xor    BYTE PTR [esp+edi*4-0x3bb2ab2f],dl
  401cf9:	adc    BYTE PTR [ebx],bh
  401cfb:	out    dx,al
  401cfc:	xor    DWORD PTR [eax+0x7d],ebx
  401cff:	mov    edi,0x5c639632
  401d04:	push   eax
  401d05:	jo     0x401d67
  401d07:	pop    ebx
  401d08:	lea    ebp,[edi+0x50]
  401d0b:	xor    eax,0x3a5d45
  401d10:	push   ebp
  401d11:	out    0x76,al
  401d13:	mov    esi,0x15ab1f6e
  401d18:	push   ebp
  401d19:	hlt    
  401d1a:	push   ebx
  401d1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d1d:	shl    DWORD PTR [ecx+0x59],1
  401d20:	xchg   edi,eax
  401d21:	mov    eax,0xb78473ad
  401d26:	aas    
  401d27:	aaa    
  401d28:	inc    ebx
  401d29:	addr16 repnz push ss
  401d2c:	aas    
  401d2d:	adc    al,0xf4
  401d2f:	and    DWORD PTR [ebx-0x69feafab],0x73
  401d36:	pop    ds
  401d37:	adc    DWORD PTR [ecx],eax
  401d39:	imul   ebx,DWORD PTR [ebp+0x8aa24f],0x39
  401d40:	fyl2xp1 
  401d42:	rcl    edi,0x95
  401d45:	mov    al,ds:0xc3336f0f
  401d4a:	stos   DWORD PTR es:[edi],eax
  401d4b:	call   0x3335fb85
  401d50:	test   BYTE PTR [eax+0xb],ah
  401d53:	out    dx,eax
  401d54:	adc    eax,0xcb1dc826
  401d59:	sub    edx,DWORD PTR [ecx+0x77]
  401d5c:	xchg   esp,eax
  401d5d:	dec    ebx
  401d5e:	(bad)  
  401d5f:	rcr    bh,0x39
  401d62:	jmp    0xa915:0x44d71ab4
  401d69:	nop
  401d6a:	mov    eax,0x66e3d889
  401d6f:	add    cl,0x6e
  401d72:	mov    al,ds:0x725615b0
  401d77:	and    BYTE PTR [ecx],cl
  401d79:	adc    ebp,ebp
  401d7b:	ds dec ecx
  401d7d:	fwait
  401d7e:	pop    edx
  401d7f:	xor    al,0x1
  401d81:	ret    0x7f7f
  401d84:	sbb    ah,BYTE PTR [ecx]
  401d86:	loope  0x401db8
  401d88:	inc    esi
  401d89:	jo     0x401db4
  401d8b:	bound  si,DWORD PTR [ebp+0x17b4d4c]
  401d92:	mov    edi,0x3df8aff9
  401d97:	mov    ah,0xb0
  401d99:	dec    eax
  401d9a:	push   cs
  401d9b:	pusha  
  401d9c:	add    al,0x9
  401d9e:	inc    edi
  401d9f:	(bad)  
  401da0:	sub    esi,DWORD PTR [edx+0x6b]
  401da3:	pop    esp
  401da4:	jecxz  0x401d55
  401da6:	pop    ecx
  401da7:	xchg   ecx,eax
  401da8:	inc    esp
  401da9:	xchg   edx,eax
  401daa:	jnp    0x401dbe
  401dac:	in     al,dx
  401dad:	ret    
  401dae:	es jo  0x401dd9
  401db1:	sub    ah,ch
  401db3:	fucomi st,st(6)
  401db5:	push   0x5ba5cbd8
  401dba:	cmp    edx,DWORD PTR [eax+0x2712a4bb]
  401dc0:	arpl   cx,sp
  401dc2:	and    cl,BYTE PTR [eax]
  401dc4:	std    
  401dc5:	pop    ecx
  401dc6:	fisub  DWORD PTR [eax-0x34]
  401dc9:	push   ebx
  401dca:	hlt    
  401dcb:	add    cl,BYTE PTR [ecx+edx*1+0x2fe99ba6]
  401dd2:	lock repz imul ebp,edx,0xd277f5d0
  401dda:	dec    edx
  401ddb:	jb     0x401d6d
  401ddd:	dec    edi
  401dde:	rcr    eax,0x6c
  401de1:	inc    ecx
  401de2:	lahf   
  401de3:	pop    edx
  401de4:	(bad)  
  401de5:	cs or  al,0xe6
  401de8:	mov    edx,0x775a329a
  401ded:	in     eax,dx
  401dee:	bound  esp,QWORD PTR [ecx]
  401df0:	out    0x14,eax
  401df2:	mov    al,ds:0x2782a0c2
  401df7:	in     al,0xa1
  401df9:	mov    ch,dl
  401dfb:	cmp    DWORD PTR [eax-0x509b1c40],ebp
  401e01:	add    ebx,edx
  401e03:	lods   al,BYTE PTR ds:[esi]
  401e04:	inc    eax
  401e05:	imul   eax,edx,0xeb7ddb7c
  401e0b:	(bad)
  401e0f:	jbe    0x401e89
  401e11:	mov    al,0x15
  401e13:	or     bl,BYTE PTR [eax-0x35]
  401e16:	(bad)  
  401e18:	push   eax
  401e19:	jb     0x401e9a
  401e1b:	and    dh,al
  401e1d:	into   
  401e1e:	inc    ebp
  401e1f:	sub    al,BYTE PTR ds:0xc13e8391
  401e25:	xor    al,0x32
  401e27:	mov    ebx,0xe7996309
  401e2c:	mov    ah,0x9
  401e2e:	push   ebx
  401e2f:	in     al,0xe2
  401e31:	pop    edi
  401e32:	xchg   edi,eax
  401e33:	cmp    ecx,edx
  401e35:	jmp    0x401dff
  401e37:	data16 ja 0x401df0
  401e3a:	sub    edi,ebx
  401e3c:	or     BYTE PTR [esi+0x4c73afd0],ch
  401e42:	mov    ecx,0x3b4a82cc
  401e47:	sar    BYTE PTR [ebx+0x3d],0x58
  401e4b:	sub    eax,0x52f54f8a
  401e50:	enter  0x275,0x76
  401e54:	pop    ecx
  401e55:	cs aas 
  401e57:	sub    edi,esp
  401e59:	fdiv   st(5),st
  401e5b:	cli    
  401e5c:	mov    bl,0xa3
  401e5e:	or     ah,BYTE PTR [edx-0x1907a0b0]
  401e64:	fdivr  QWORD PTR [ecx+eax*4-0x1e]
  401e68:	pop    eax
  401e69:	repz arpl bx,bp
  401e6c:	in     eax,0x13
  401e6e:	aas    
  401e6f:	enter  0x4830,0xd
  401e73:	or     DWORD PTR [eax+ebp*1],eax
  401e76:	xchg   bl,ch
  401e78:	mov    ebp,0x84286bff
  401e7d:	mov    al,0x9c
  401e7f:	xlat   BYTE PTR es:[ebx]
  401e81:	adc    eax,0xafbfe3ad
  401e86:	push   ds
  401e87:	cmp    al,0x47
  401e89:	jge    0x401e73
  401e8b:	xchg   DWORD PTR [edi-0x1187062d],eax
  401e91:	ins    BYTE PTR es:[edi],dx
  401e92:	dec    ebx
  401e93:	push   DWORD PTR [ebx+ecx*8+0x37abf789]
  401e9a:	cmp    DWORD PTR [edi],ebx
  401e9c:	shr    BYTE PTR [edi],cl
  401e9e:	sub    ah,bh
  401ea0:	jmp    0xdfe4b779
  401ea5:	mov    ah,0x2f
  401ea7:	addr16 ds ret 
  401eaa:	repz xchg ebp,eax
  401eac:	inc    edi
  401ead:	out    0x50,al
  401eaf:	add    eax,0xc1bccb46
  401eb4:	pusha  
  401eb5:	mov    bl,0x76
  401eb7:	push   ss
  401eb8:	jne    0x401e5c
  401eba:	mov    esp,0xfd90598d
  401ebf:	mov    ds,WORD PTR [ebx]
  401ec1:	call   0xb139fe9
  401ec6:	add    BYTE PTR [esi-0x42],dl
  401ec9:	inc    eax
  401eca:	fsub   QWORD PTR [ebp+0xa60ef9d]
  401ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ed1:	out    dx,eax
  401ed2:	cwde   
  401ed3:	push   edx
  401ed4:	xchg   edx,eax
  401ed5:	outs   dx,BYTE PTR ds:[esi]
  401ed6:	mov    bl,0x8d
  401ed8:	test   eax,0x5be93d73
  401edd:	add    ebp,ecx
  401edf:	das    
  401ee0:	iret   
  401ee1:	mov    eax,0x622b5ccd
  401ee6:	int    0x85
  401ee8:	and    BYTE PTR [eax+ebp*8-0x80],cl
  401eec:	add    al,0x3d
  401eee:	mov    al,ds:0x47370cdc
  401ef3:	cli    
  401ef4:	lea    edx,[ecx]
  401ef6:	loope  0x401f28
  401ef8:	mov    ch,0xe5
  401efa:	shr    BYTE PTR [edi-0x6abfe456],cl
  401f00:	repz aam 0x55
  401f03:	loop   0x401efc
  401f05:	out    0x5c,eax
  401f07:	test   al,0x8
  401f09:	pushf  
  401f0a:	out    0x1e,eax
  401f0c:	and    eax,0x3110cad0
  401f11:	jb     0x401ec8
  401f13:	fidiv  DWORD PTR [esi+ecx*1+0x74]
  401f17:	and    al,0x3e
  401f19:	mov    dh,BYTE PTR [edi]
  401f1b:	sbb    DWORD PTR [esi-0x44],esi
  401f1e:	mov    dl,0xbe
  401f20:	inc    esp
  401f21:	lea    esp,ss:[ecx-0x79f7e966]
  401f28:	stos   DWORD PTR es:[edi],eax
  401f29:	repz mov ds:0x968f5090,eax
  401f2f:	cmp    esp,DWORD PTR [esi-0x40969606]
  401f35:	push   cs
  401f36:	dec    ebx
  401f37:	push   esi
  401f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f39:	loopne 0x401f3d
  401f3b:	loopne 0x401fb8
  401f3d:	call   0x3e17:0x5fef84e3
  401f44:	add    dl,bl
  401f46:	loop   0x401efb
  401f48:	mov    ecx,0x733f1d9a
  401f4d:	loopne 0x401ef1
  401f4f:	adc    BYTE PTR ds:[edi-0x1e],cl
  401f53:	leave  
  401f54:	adc    eax,0x600b5eb0
  401f59:	xor    DWORD PTR [esp],ebp
  401f5c:	jae    0x401f4f
  401f5e:	add    al,0x27
  401f60:	push   ebx
  401f61:	mov    eax,0x873fac3c
  401f66:	out    dx,al
  401f67:	pop    edx
  401f68:	aam    0x82
  401f6a:	enter  0xd387,0x20
  401f6e:	mov    ch,0x5f
  401f70:	mov    ds:0xec4715ee,al
  401f75:	call   0x99da:0x74f7d430
  401f7c:	jmp    0xed46:0x37b79cd8
  401f83:	std    
  401f84:	shl    bh,cl
  401f86:	mov    WORD PTR [ebp+0x636f9380],gs
  401f8c:	xor    BYTE PTR [ecx-0x26],cl
  401f8f:	push   ecx
  401f90:	mov    ecx,0x419d0906
  401f95:	mov    DWORD PTR ds:0xf8f5b317,ebp
  401f9b:	push   cs
  401f9c:	repnz sub BYTE PTR [eax+0x7],bh
  401fa0:	jne    0x401f9f
  401fa2:	js     0x401f4f
  401fa4:	(bad)  
  401fa5:	lahf   
  401fa6:	jae    0x402012
  401fa8:	cmp    eax,0x69a04326
  401fad:	ins    DWORD PTR es:[edi],dx
  401fae:	adc    dh,ah
  401fb0:	mov    esi,eax
  401fb2:	cs int 0xff
  401fb5:	bound  ebp,QWORD PTR [edi]
  401fb7:	test   al,0x3d
  401fb9:	retfw  
  401fbb:	shl    bl,cl
  401fbd:	push   eax
  401fbe:	retf   
  401fbf:	sbb    DWORD PTR [edx-0x54],edx
  401fc2:	outs   dx,DWORD PTR ds:[esi]
  401fc3:	daa    
  401fc4:	pop    DWORD PTR [ecx+eax*1+0x14]
  401fc8:	mov    eax,DWORD PTR [eax-0x1cf86297]
  401fce:	sbb    DWORD PTR [ebx+ecx*1+0x70],esi
  401fd2:	in     eax,0xe7
  401fd4:	inc    edi
  401fd5:	iret   
  401fd6:	pusha  
  401fd7:	in     eax,dx
  401fd8:	push   ds
  401fd9:	clc    
  401fda:	mov    edi,0xa23ad6cc
  401fdf:	in     al,dx
  401fe0:	xor    DWORD PTR [edi+ebx*2-0x5f],0xfffffff9
  401fe5:	inc    edx
  401fe6:	cli    
  401fe7:	cmp    al,0xdb
  401fe9:	add    edx,DWORD PTR [ecx+0x14]
  401fec:	cmp    dl,cl
  401fee:	pop    ecx
  401fef:	leave  
  401ff0:	xchg   ebx,eax
  401ff1:	fisubr WORD PTR [eax*2-0x430e027]
  401ff8:	je     0x402029
  401ffa:	adc    BYTE PTR [ecx],dl
  401ffc:	scas   eax,DWORD PTR es:[edi]
  401ffd:	dec    ebp
  401ffe:	out    dx,al
  401fff:	cmp    ah,BYTE PTR [ecx+edx*4]
  402002:	xor    bl,BYTE PTR ss:[ebx+0x6738eee6]
  402009:	add    eax,0x2c8fba15
  40200e:	ins    DWORD PTR es:[edi],dx
  40200f:	stos   DWORD PTR es:[edi],eax
  402010:	xor    al,0x4c
  402012:	xlat   BYTE PTR ds:[ebx]
  402013:	dec    edx
  402014:	outs   dx,BYTE PTR ds:[esi]
  402015:	imul   edi,ecx,0x93c39305
  40201b:	int    0xd3
  40201d:	inc    ecx
  40201e:	inc    edx
  40201f:	mov    ecx,0x6b0d706b
  402024:	enter  0xcc33,0x27
  402028:	mov    ebx,0x80035ab5
  40202d:	stos   DWORD PTR es:[edi],eax
  40202e:	int3   
  40202f:	loop   0x402056
  402031:	cmp    edi,DWORD PTR [eax+0x49]
  402034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402035:	jbe    0x401feb
  402037:	sbb    eax,0xefe93ee8
  40203c:	cli    
  40203d:	jp     0x402015
  40203f:	rcl    BYTE PTR [ebx-0x1a6cf50b],0xdd
  402046:	mov    edi,0xc08c6c70
  40204b:	sti    
  40204c:	scas   eax,DWORD PTR es:[edi]
  40204d:	cli    
  40204e:	jl     0x401ff6
  402050:	cdq    
  402051:	xlat   BYTE PTR ds:[ebx]
  402052:	dec    ebp
  402053:	pop    es
  402054:	cmc    
  402055:	stc    
  402056:	inc    ebx
  402057:	sbb    bl,0xb7
  40205a:	xchg   edi,eax
  40205b:	pop    eax
  40205c:	add    cl,BYTE PTR [ebx+0x4a]
  40205f:	lock call 0x5009e9e3
  402065:	cmp    BYTE PTR [edx-0x40],al
  402068:	jmp    0x368d5ff6
  40206d:	dec    esi
  40206e:	jmp    0x21b6d7cb
  402073:	loop   0x4020b6
  402075:	mov    ebx,0x10d23d8d
  40207a:	xor    dh,BYTE PTR [ecx]
  40207c:	dec    ecx
  40207d:	fisttp WORD PTR [esi]
  40207f:	(bad)  
  402080:	outs   dx,DWORD PTR ds:[esi]
  402081:	or     eax,0x33b9e44f
  402086:	mov    cl,0x89
  402088:	mov    dl,0x51
  40208a:	push   ebp
  40208b:	sub    eax,0xd6e01211
  402090:	jns    0x4020c5
  402092:	xor    al,0x66
  402094:	dec    ebx
  402095:	or     ebx,ebp
  402097:	mov    esp,ecx
  402099:	or     cl,bl
  40209b:	xor    al,0x26
  40209d:	pop    eax
  40209e:	call   0x1dd8:0x9a2c0976
  4020a5:	dec    edi
  4020a6:	sbb    eax,0x44c27a9d
  4020ab:	ja     0x4020a6
  4020ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ae:	xchg   ebx,eax
  4020af:	adc    esp,DWORD PTR [ebp+0x62]
  4020b2:	xor    ebx,DWORD PTR [ebx+0x50]
  4020b5:	sar    DWORD PTR [esi-0x17aa1f25],1
  4020bb:	repnz mov al,ds:0xfd00b957
  4020c1:	xor    esp,DWORD PTR [ecx+0x3b]
  4020c4:	add    edx,DWORD PTR [ecx]
  4020c6:	(bad)  
  4020c7:	(bad)  
  4020c8:	xchg   ebx,eax
  4020c9:	clc    
  4020ca:	bound  edx,QWORD PTR [eax+eax*2+0x5ce22817]
  4020d1:	mov    bh,0xa5
  4020d3:	sub    DWORD PTR [esp+edx*4-0x6918882c],ebp
  4020da:	cmp    DWORD PTR [eax+0x68],edx
  4020dd:	sbb    BYTE PTR [esi+0x18],ah
  4020e0:	mov    ecx,0xc04bf98b
  4020e5:	cdq    
  4020e6:	adc    eax,0xfb9ca0a9
  4020eb:	mov    bh,0xc4
  4020ed:	mov    bl,0x29
  4020ef:	sti    
  4020f0:	rol    DWORD PTR [eax],1
  4020f2:	inc    ebx
  4020f3:	arpl   WORD PTR [edi+0xb],sp
  4020f6:	add    al,0x85
  4020f8:	xchg   esi,eax
  4020f9:	addr16 lahf 
  4020fb:	sub    BYTE PTR [eax-0x45],0xa7
  4020ff:	rol    DWORD PTR cs:[edi+0x1],0x32
  402104:	js     0x4020e7
  402106:	jle    0x4020d7
  402108:	jmp    0x4020f2
  40210a:	jbe    0x402100
  40210c:	pusha  
  40210d:	cmp    DWORD PTR [eax-0x2c],esi
  402110:	pop    eax
  402111:	scas   eax,DWORD PTR es:[edi]
  402112:	push   DWORD PTR [edx]
  402114:	dec    ebp
  402115:	xchg   esi,edi
  402117:	outs   dx,BYTE PTR ds:[esi]
  402118:	retf   0x6c5b
  40211b:	and    al,0x82
  40211d:	or     eax,0xefd6922f
  402122:	lahf   
  402123:	add    al,0x78
  402125:	fcmovnb st,st(1)
  402127:	cdq    
  402128:	jecxz  0x402183
  40212a:	adc    BYTE PTR [eax-0x39eed6b0],bh
  402130:	pop    ds
  402131:	fcom   st(4)
  402133:	fwait
  402134:	mov    ds:0x3e5daa0b,al
  402139:	push   ds
  40213a:	mov    dl,0xe7
  40213c:	gs mov esp,0xc73f6050
  402142:	in     eax,dx
  402143:	sub    BYTE PTR [eax],cl
  402145:	leave  
  402146:	xlat   BYTE PTR ds:[ebx]
  402147:	push   ebx
  402148:	jg     0x40216d
  40214a:	pop    edi
  40214b:	mov    ebp,0xac7bdc3a
  402150:	mov    ds,WORD PTR [ebx]
  402152:	sbb    bh,ah
  402154:	aam    0xf2
  402156:	sub    ch,bh
  402158:	bound  edx,QWORD PTR [ebx+0x369c7235]
  40215e:	cmc    
  40215f:	not    DWORD PTR [eax-0x16066a11]
  402165:	pop    ebx
  402166:	cmp    edx,ebx
  402168:	(bad)  
  402169:	push   DWORD PTR [ecx]
  40216b:	adc    ecx,DWORD PTR [edi]
  40216d:	sbb    al,0xc3
  40216f:	das    
  402170:	lahf   
  402171:	jmp    0x4021b6
  402173:	das    
  402174:	aam    0x43
  402176:	jae    0x402196
  402178:	sti    
  402179:	or     al,ch
  40217b:	inc    eax
  40217c:	or     eax,0x46db03df
  402181:	stc    
  402182:	sbb    dh,dh
  402184:	mov    ds:0x3855d684,al
  402189:	stos   DWORD PTR es:[edi],eax
  40218a:	imul   ebx,DWORD PTR [ebx],0xffffffad
  40218d:	jg     0x40215b
  40218f:	dec    ecx
  402190:	icebp  
  402191:	inc    esp
  402192:	(bad)  
  402193:	stc    
  402194:	retf   
  402195:	xchg   DWORD PTR [esi-0x35],ecx
  402198:	mov    WORD PTR [ecx-0x55],fs
  40219b:	mov    DWORD PTR [edi-0x45],esi
  40219e:	bound  ebx,QWORD PTR [ecx+0x6e]
  4021a1:	fild   WORD PTR es:0x98679a3
  4021a8:	popf   
  4021a9:	cmp    edi,0x8b9f4a83
  4021af:	cmp    BYTE PTR [edi+eiz*2-0x4c],dl
  4021b3:	pop    edi
  4021b4:	push   eax
  4021b5:	inc    edi
  4021b6:	jbe    0x4021ca
  4021b8:	inc    edi
  4021b9:	out    0xb4,eax
  4021bb:	dec    esp
  4021bc:	and    ebx,DWORD PTR [ebx+0x75929231]
  4021c2:	add    edx,DWORD PTR [edi]
  4021c4:	sbb    BYTE PTR [esi-0x11a71e03],bl
  4021ca:	in     eax,dx
  4021cb:	retf   0xbbac
  4021ce:	sub    esi,DWORD PTR [edi]
  4021d0:	in     eax,0x9b
  4021d2:	dec    ebx
  4021d3:	inc    edx
  4021d4:	scas   al,BYTE PTR es:[edi]
  4021d5:	pcmpgtb mm2,QWORD PTR [ecx-0xa763532]
  4021dc:	xchg   al,bh
  4021de:	outs   dx,DWORD PTR ds:[esi]
  4021df:	xchg   BYTE PTR [ebx+0x5dd77a59],al
  4021e5:	adc    DWORD PTR [eax],0xc01191ec
  4021eb:	fisttp WORD PTR [edx-0x46]
  4021ee:	(bad)
  4021f1:	dec    edi
  4021f2:	push   edx
  4021f3:	pusha  
  4021f4:	inc    edi
  4021f5:	test   cl,al
  4021f7:	or     DWORD PTR [ebp-0x198b05fd],0x1bd4dfba
  402201:	test   DWORD PTR ds:0xef18387b,esi
  402207:	inc    esp
  402208:	clc    
  402209:	pop    ebp
  40220a:	rcl    BYTE PTR [esi+0x2],1
  40220d:	pushf  
  40220e:	pop    ss
  40220f:	mov    edx,0xe44c18e3
  402214:	adc    esp,ecx
  402216:	(bad)  
  402217:	into   
  402218:	aam    0xab
  40221a:	out    dx,al
  40221b:	outs   dx,BYTE PTR ds:[esi]
  40221c:	sbb    ecx,DWORD PTR [eax+0x449817f3]
  402222:	mov    es,WORD PTR [edi]
  402224:	jno    0x40224c
  402226:	add    eax,0x4b7c052c
  40222b:	add    DWORD PTR [ebp-0x26cdada],ebx
  402231:	repz mov dh,0x3d
  402234:	rcr    DWORD PTR [ebp+0x30],cl
  402237:	and    al,0xb3
  402239:	mov    edi,0x7f2206b0
  40223e:	loope  0x4022ba
  402240:	in     al,dx
  402241:	ret    0x2c82
  402244:	xlat   BYTE PTR ds:[ebx]
  402245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402246:	ret    
  402247:	test   DWORD PTR [ebx+ebp*2-0x2d],ecx
  40224b:	test   DWORD PTR [edi],ebx
  40224d:	les    esi,FWORD PTR ss:[edi+eax*8+0xae1bfca]
  402255:	test   al,0x4c
  402257:	mov    esp,0x257fb0e1
  40225c:	inc    ebx
  40225d:	scas   eax,DWORD PTR es:[edi]
  40225e:	addr16 jne 0x40221c
  402261:	leave  
  402262:	call   DWORD PTR [esi]
  402264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402265:	les    esi,FWORD PTR [edi+0x2cecf2d4]
  40226b:	push   esp
  40226c:	in     al,0xd2
  40226e:	stos   DWORD PTR es:[edi],eax
  40226f:	sbb    DWORD PTR [esi+edx*4+0x37],0xffffffb2
  402274:	dec    ebx
  402275:	adc    eax,0xc68002b4
  40227a:	fwait
  40227b:	cld    
  40227c:	fnstsw WORD PTR [ebx]
  40227e:	xor    al,0x24
  402280:	mov    DWORD PTR [edi],edi
  402282:	call   0x7db8cf98
  402287:	addr16 sbb eax,0xa990a4ef
  40228d:	sub    DWORD PTR [eax],eax
  40228f:	(bad)  
  402290:	out    0x40,eax
  402292:	mov    WORD PTR [ebx],ds
  402294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402295:	xchg   edx,eax
  402296:	lds    ebp,FWORD PTR [ebp+edx*8+0x57c1dd72]
  40229d:	in     eax,0xbe
  40229f:	ja     0x402242
  4022a1:	inc    ebx
  4022a2:	in     eax,dx
  4022a3:	xor    BYTE PTR ds:0x9880b7d9,0x50
  4022aa:	inc    edi
  4022ab:	mov    ebp,0xa059d419
  4022b0:	es cmp bh,dh
  4022b3:	stos   BYTE PTR es:[edi],al
  4022b4:	jmp    0x4ab92b2b
  4022b9:	mov    edx,DWORD PTR [eax-0x14]
  4022bc:	adc    DWORD PTR [edx-0x4c],0xd
  4022c0:	lods   al,BYTE PTR ds:[esi]
  4022c1:	out    0xfc,eax
  4022c3:	cmp    BYTE PTR [ebp+0x297e4ec5],ch
  4022c9:	push   0x48
  4022cb:	mov    edi,0xe500cdb0
  4022d0:	and    BYTE PTR [ebp-0x147805b3],0x53
  4022d7:	push   ebp
  4022d8:	pop    ebp
  4022d9:	rcl    DWORD PTR [ebp-0x3ccf0069],1
  4022df:	lea    edx,[ebx]
  4022e1:	shl    DWORD PTR [eax-0x2e],1
  4022e4:	jmp    0xbbac:0x2d8123dd
  4022eb:	(bad)  
  4022ec:	lods   eax,DWORD PTR ds:[esi]
  4022ed:	idiv   BYTE PTR [edi]
  4022ef:	jmp    0xfcf8:0x1815165b
  4022f6:	cmp    BYTE PTR ds:0x54b7443,cl
  4022fc:	xchg   ebp,eax
  4022fd:	xchg   ebp,eax
  4022fe:	jg     0x4022e8
  402300:	pop    edx
  402301:	add    BYTE PTR [eax-0x9],bh
  402304:	or     dl,BYTE PTR [eax]
  402306:	fucomi st,st(2)
  402308:	sub    BYTE PTR [ebx+0x52ef25c4],ah
  40230e:	inc    esi
  40230f:	sti    
  402310:	retf   
  402311:	in     al,0x8c
  402313:	outs   dx,DWORD PTR ds:[esi]
  402314:	push   esp
  402315:	add    bh,BYTE PTR ds:[eax-0x3a795491]
  40231c:	int    0xdf
  40231e:	dec    eax
  40231f:	scas   eax,DWORD PTR es:[edi]
  402320:	(bad)  
  402321:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402323:	cwde   
  402324:	loope  0x402375
  402326:	and    eax,0x712947a1
  40232b:	out    0xb9,eax
  40232d:	mov    ch,0xde
  40232f:	pop    ds
  402330:	out    dx,al
  402331:	dec    edx
  402332:	sub    DWORD PTR [edi],esi
  402334:	mov    al,0x14
  402336:	dec    BYTE PTR [eax-0x753381ca]
  40233c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40233d:	mov    bh,0x72
  40233f:	xchg   esi,eax
  402340:	sub    eax,0x51d8aaf
  402346:	outs   dx,DWORD PTR ds:[esi]
  402347:	xchg   ebx,eax
  402348:	cmp    eax,0xb9d5bd28
  40234d:	sahf   
  40234e:	ret    0xeb3e
  402351:	fwait
  402352:	add    esp,DWORD PTR [edx]
  402354:	fild   WORD PTR [eax]
  402356:	dec    ecx
  402357:	push   cs
  402358:	enter  0x78ee,0x54
  40235c:	loope  0x4023c0
  40235e:	jl     0x4022fe
  402360:	sbb    BYTE PTR [ebx+edx*8-0x5de95b9c],al
  402367:	lds    ecx,FWORD PTR [edx]
  402369:	adc    BYTE PTR [edi+0x41],0x1f
  40236d:	mov    ah,0xf7
  40236f:	add    DWORD PTR [edx-0x7a],0xa18ddbde
  402376:	cwde   
  402377:	mov    cl,0x32
  402379:	cwde   
  40237a:	or     eax,0x2dd9809c
  40237f:	jno    0x402369
  402381:	inc    ebx
  402382:	mov    al,ds:0xee119a75
  402387:	pop    ss
  402388:	pushf  
  402389:	or     eax,0xc8da2b5b
  40238e:	in     al,0x8
  402390:	dec    esi
  402391:	mov    DWORD PTR [edx],ecx
  402393:	adc    edi,edx
  402395:	int    0x28
  402397:	inc    esp
  402398:	loopne 0x402364
  40239a:	lea    eax,[eax+0x6]
  40239d:	mov    ah,0xda
  40239f:	das    
  4023a0:	cmp    DWORD PTR [ebp-0x34],eax
  4023a3:	or     ebp,edx
  4023a5:	mov    ds:0x3693472a,eax
  4023aa:	leave  
  4023ab:	cld    
  4023ac:	dec    ebx
  4023ad:	or     al,0x7
  4023af:	jns    0x4023ae
  4023b1:	jmp    0x4023aa
  4023b3:	shl    eax,0x9
  4023b6:	push   0xffffff86
  4023b8:	fidivr WORD PTR [edx+ebp*1+0x71]
  4023bc:	or     BYTE PTR [esi-0x42fd2268],ah
  4023c2:	frstor [ebp+0x7c]
  4023c5:	pusha  
  4023c6:	(bad)  
  4023c7:	ds jno 0x402425
  4023ca:	int    0x3b
  4023cc:	or     al,0xa8
  4023ce:	inc    esi
  4023cf:	push   ebx
  4023d0:	dec    esi
  4023d1:	fwait
  4023d2:	ret    0x4608
  4023d5:	shl    BYTE PTR [edx],1
  4023d7:	xor    esp,0x9ea91d29
  4023dd:	push   ecx
  4023de:	jg     0x402420
  4023e0:	and    eax,0x95419b88
  4023e5:	call   0x6bc34833
  4023ea:	stc    
  4023eb:	sahf   
  4023ec:	out    0x79,al
  4023ee:	jo     0x40244a
  4023f0:	aad    0x3d
  4023f2:	or     DWORD PTR [esi+0x48],ecx
  4023f5:	xor    ecx,DWORD PTR [eax+ecx*1+0x35]
  4023f9:	ja     0x40246e
  4023fb:	mov    bl,0xc0
  4023fd:	call   0xefe1:0x6ef10f3b
  402404:	pop    ds
  402405:	fs loope 0x402446
  402408:	lock xchg BYTE PTR [edi+0x10dea9af],cl
  40240f:	jle    0x402474
  402411:	add    bl,BYTE PTR [esi+ebp*1+0x31]
  402415:	cmp    DWORD PTR [esi],ebx
  402417:	daa    
  402418:	sbb    bh,bl
  40241a:	add    eax,0xc147a916
  40241f:	jae    0x402454
  402421:	leave  
  402422:	mov    cl,0xd0
  402424:	cmp    DWORD PTR [eax+0x6],ebx
  402427:	adc    eax,0x945a7cc3
  40242c:	or     BYTE PTR [esi],bh
  40242e:	and    esi,ebx
  402430:	icebp  
  402431:	jno    0x4024b2
  402433:	sahf   
  402434:	xchg   ebp,eax
  402435:	mov    esp,0x55a36e1b
  40243a:	(bad)  
  40243b:	imul   ebp,DWORD PTR [esi],0x26
  40243e:	dec    ebp
  40243f:	lock inc ebp
  402441:	retf   
  402442:	pop    edi
  402443:	idiv   BYTE PTR [eax+eiz*4-0xfea0d35]
  40244a:	lods   al,BYTE PTR ds:[esi]
  40244b:	mov    DWORD PTR [eax-0x66],edx
  40244e:	cmc    
  40244f:	add    BYTE PTR [eax+0x3b],cl
  402452:	mov    dl,0xd3
  402454:	add    ebx,DWORD PTR ds:0x93db77a8
  40245a:	push   ds
  40245b:	mov    esp,0xc67788
  402460:	inc    ebp
  402461:	sti    
  402462:	loope  0x4023f4
  402464:	lea    edi,[ebx-0x6b]
  402467:	mov    WORD PTR ds:0xb9279a10,ss
  40246d:	je     0x4024c6
  40246f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402470:	sbb    dh,BYTE PTR [ebp+esi*8-0x66c01704]
  402477:	and    al,0xc7
  402479:	push   ss
  40247a:	mov    DWORD PTR [edi-0x54b12f48],eax
  402480:	test   al,0x4b
  402482:	ja     0x402457
  402484:	scas   eax,DWORD PTR es:[edi]
  402485:	mov    DWORD PTR [edx+ebx*2-0x69],ebp
  402489:	adc    DWORD PTR [ebx+eiz*1],esi
  40248c:	ret    
  40248d:	and    al,0x70
  40248f:	mov    ecx,0xf99f17a5
  402494:	mov    ds:0xbebfd8a6,al
  402499:	sub    al,0xfc
  40249b:	sbb    ah,BYTE PTR [ecx]
  40249d:	iret   
  40249e:	imul   ebx,DWORD PTR [esi+0x7f889438],0xffffffe6
  4024a5:	(bad)  
  4024a6:	(bad)  
  4024a7:	retf   
  4024a8:	sub    eax,0x5d5cfe9d
  4024ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024ae:	mov    ebx,0x95cdcf59
  4024b3:	ins    BYTE PTR es:[edi],dx
  4024b4:	adc    eax,0xaabc354b
  4024b9:	ins    DWORD PTR es:[edi],dx
  4024ba:	arpl   WORD PTR [ebx],bp
  4024bc:	pop    es
  4024bd:	leave  
  4024be:	xor    BYTE PTR es:[edi+0x6f],0xeb
  4024c3:	adc    ecx,DWORD PTR [ebx+eax*2+0x5b096a12]
  4024ca:	jl     0x40249a
  4024cc:	in     al,dx
  4024cd:	push   esp
  4024ce:	mov    WORD PTR [edx+0x4c],fs
  4024d1:	cmp    DWORD PTR [esi+0x365569ef],esi
  4024d7:	in     eax,dx
  4024d8:	add    DWORD PTR [edi+eax*8+0x4f6b0b6d],ebx
  4024df:	or     DWORD PTR [edi],0xd66d0bd9
  4024e5:	outs   dx,DWORD PTR ds:[esi]
  4024e6:	fldenv [edi-0x71581771]
  4024ec:	jmp    0x40254d
  4024ee:	add    al,0x1d
  4024f0:	inc    edi
  4024f1:	hlt    
  4024f2:	in     eax,0x25
  4024f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f5:	fbstp  TBYTE PTR [ebp+ebp*1-0x484d0969]
  4024fc:	dec    ecx
  4024fd:	ja     0x402567
  4024ff:	xchg   ecx,eax
  402500:	cwde   
  402501:	(bad)  
  402502:	sar    bl,1
  402504:	mov    ecx,0xb04c52df
  402509:	xor    BYTE PTR [esi],dl
  40250b:	xchg   ax,ax
  40250d:	adc    eax,0xf569b200
  402512:	ficom  DWORD PTR [esi-0x5181f990]
  402518:	fmul   QWORD PTR [edx-0x76ee544]
  40251e:	mov    eax,ebx
  402520:	mov    DWORD PTR [edx],eax
  402522:	mov    ds:0x4da9b7b0,eax
  402527:	add    DWORD PTR [eax-0x7bc28190],eax
  40252d:	mov    bh,BYTE PTR [esi]
  40252f:	or     BYTE PTR ds:0x9b993082,dh
  402535:	lods   al,BYTE PTR ds:[esi]
  402536:	or     dl,dl
  402538:	outs   dx,BYTE PTR ds:[esi]
  402539:	mov    bh,0xf2
  40253b:	stos   DWORD PTR es:[edi],eax
  40253c:	cld    
  40253d:	bound  ecx,QWORD PTR [edi+0x72]
  402540:	xchg   BYTE PTR [ebp-0x328c8b17],cl
  402546:	ffreep st(7)
  402548:	cmp    al,0x23
  40254a:	sbb    ch,BYTE PTR [edx+eiz*1-0x5]
  40254e:	cmp    eax,0x114cf645
  402553:	pop    ecx
  402554:	neg    BYTE PTR [ebx]
  402556:	cdq    
  402557:	dec    ebp
  402558:	cmp    edx,ebp
  40255a:	jo     0x40253d
  40255c:	and    edx,DWORD PTR ds:0xf69aeb76
  402562:	xor    al,BYTE PTR [ecx-0x52412184]
  402568:	fild   QWORD PTR [eax-0x241fb7c2]
  40256e:	call   0x40e49215
  402573:	lods   al,BYTE PTR ds:[esi]
  402574:	lods   al,BYTE PTR ds:[esi]
  402575:	gs pop ss
  402577:	add    al,0xcf
  402579:	into   
  40257a:	(bad)  
  40257b:	ficom  DWORD PTR [eax+0x1df88583]
  402581:	gs jmp 0x1c03413d
  402587:	test   DWORD PTR [ebx-0x19],eax
  40258a:	das    
  40258b:	dec    esi
  40258c:	or     ch,BYTE PTR [ebp-0x53]
  40258f:	lahf   
  402590:	ficomp DWORD PTR [ebp-0x53ec7960]
  402596:	loop   0x40257a
  402598:	fbstp  TBYTE PTR [ebp+ebx*1+0x6a]
  40259c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259d:	sbb    ch,BYTE PTR gs:[ebx*4-0x74f9a83e]
  4025a5:	mov    DWORD PTR ds:0x72706aed,edx
  4025ab:	fstp   st(5)
  4025ad:	xor    DWORD PTR [edx-0x75daac16],esp
  4025b3:	dec    ebx
  4025b4:	es enter 0xb86d,0x68
  4025b9:	pusha  
  4025ba:	in     eax,0xcf
  4025bc:	int3   
  4025bd:	xchg   DWORD PTR [esi],edx
  4025bf:	lea    ecx,[esi-0x26]
  4025c2:	xchg   ecx,eax
  4025c3:	add    al,0x2a
  4025c5:	ins    DWORD PTR es:[edi],dx
  4025c6:	ins    BYTE PTR es:[edi],dx
  4025c7:	add    al,0xf7
  4025c9:	stc    
  4025ca:	mov    cs,WORD PTR [eax+0x14]
  4025cd:	mov    esp,edx
  4025cf:	dec    ebx
  4025d0:	in     eax,dx
  4025d1:	mov    ?,WORD PTR [ebp-0x754e47e6]
  4025d7:	mov    DWORD PTR [edx*2-0x13fb1e72],eax
  4025de:	aam    0x1
  4025e0:	stos   DWORD PTR es:[edi],eax
  4025e1:	xor    cl,cl
  4025e3:	sahf   
  4025e4:	xchg   edi,eax
  4025e5:	lahf   
  4025e6:	jl     0x402656
  4025e8:	sti    
  4025e9:	sti    
  4025ea:	jg     0x40256f
  4025ec:	icebp  
  4025ed:	sub    BYTE PTR [ebx+0x17],bl
  4025f0:	inc    esi
  4025f1:	add    al,0xfd
  4025f3:	rol    BYTE PTR [esp+ebx*8+0x4c3e41c4],0x8c
  4025fb:	xchg   BYTE PTR [edx+0x3df4d67d],dh
  402601:	shr    BYTE PTR [esp+ecx*1],0x6d
  402605:	scas   eax,DWORD PTR es:[edi]
  402606:	pusha  
  402607:	jno    0x402660
  402609:	ret    0x6a50
  40260c:	std    
  40260d:	jnp    0x4025fa
  40260f:	add    al,0xed
  402611:	adc    edx,DWORD PTR [ebx-0x12]
  402614:	mov    ds:0x8db57f1e,al
  402619:	pop    ds
  40261a:	sbb    bh,bl
  40261c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40261d:	sbb    bl,0xd0
  402620:	mov    dh,0x74
  402622:	or     BYTE PTR [ecx],dl
  402624:	dec    edx
  402625:	cmc    
  402626:	or     DWORD PTR [esi+edi*2+0x28],0xffffff94
  40262b:	sbb    eax,0x4489ff6a
  402630:	add    eax,0xe28fb123
  402635:	jp     0x40265f
  402637:	jge    0x402630
  402639:	jns    0x40269d
  40263b:	and    BYTE PTR [ebx+0x26],al
  40263e:	(bad)  
  40263f:	pop    ds
  402640:	nop
  402641:	aas    
  402642:	pop    esp
  402643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402644:	sahf   
  402645:	mov    ebx,0xd62f2718
  40264a:	(bad)  
  40264b:	scas   al,BYTE PTR es:[edi]
  40264c:	xchg   ecx,eax
  40264d:	and    eax,0x23020deb
  402653:	mov    edx,0x2743b008
  402658:	fdiv   QWORD PTR [edi]
  40265a:	lahf   
  40265b:	xor    al,0x12
  40265d:	js     0x402688
  40265f:	cmp    ah,BYTE PTR [ebx-0x3fdf35e9]
  402665:	xchg   ebp,eax
  402666:	imul   edx,edi,0xffffff9d
  402669:	adc    DWORD PTR ds:0x13664f41,ebx
  40266f:	(bad)  
  402670:	js     0x402647
  402672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402673:	adc    dh,BYTE PTR [ecx-0x1e]
  402676:	(bad)  
  402678:	ins    DWORD PTR es:[edi],dx
  402679:	out    0x41,eax
  40267b:	sub    bh,BYTE PTR [ebp-0x76]
  40267e:	pop    edx
  40267f:	sbb    ch,BYTE PTR [ecx+0x50532810]
  402685:	int    0x1d
  402687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402688:	in     al,dx
  402689:	pop    edi
  40268a:	mov    eax,ds:0xed5f7671
  40268f:	xchg   esi,eax
  402690:	sbb    eax,0x29cc0fc5
  402695:	ins    BYTE PTR es:[edi],dx
  402696:	pop    ebp
  402697:	and    al,0x6b
  402699:	fnstcw WORD PTR [eax]
  40269b:	mov    al,bl
  40269d:	push   edx
  40269e:	fwait
  40269f:	sub    bh,0x3c
  4026a2:	xor    eax,0x6ee43b19
  4026a7:	ins    BYTE PTR es:[edi],dx
  4026a8:	inc    edi
  4026a9:	fdivr  QWORD PTR [edi-0x65]
  4026ac:	push   ebp
  4026ad:	ret    0xea17
  4026b0:	std    
  4026b1:	aam    0x53
  4026b3:	pop    edi
  4026b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026b5:	outs   dx,DWORD PTR ds:[esi]
  4026b6:	pop    ds
  4026b7:	cdq    
  4026b8:	inc    esp
  4026b9:	imul   esp,esp,0xa6880c31
  4026bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026c0:	rcr    ah,1
  4026c2:	pop    esi
  4026c3:	lds    eax,FWORD PTR [ebx-0x64]
  4026c6:	push   ecx
  4026c7:	scas   eax,DWORD PTR es:[edi]
  4026c8:	sub    ah,cl
  4026ca:	retf   
  4026cb:	adc    eax,0xe78e42a5
  4026d0:	loopne 0x40267b
  4026d2:	pop    es
  4026d3:	scas   eax,DWORD PTR es:[edi]
  4026d4:	sub    ebx,DWORD PTR [edx+edi*2]
  4026d7:	test   eax,0xd8eb689b
  4026dc:	into   
  4026dd:	push   ss
  4026de:	adc    ebx,DWORD PTR [edi]
  4026e0:	or     esp,DWORD PTR [edx]
  4026e2:	jnp    0x40273c
  4026e4:	retf   
  4026e5:	pop    edx
  4026e6:	inc    ecx
  4026e7:	mov    ecx,0xbd412881
  4026ec:	sbb    eax,0x7240cf17
  4026f1:	test   BYTE PTR [esi],0x5f
  4026f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026f5:	xor    esp,DWORD PTR [esi+eiz*2]
  4026f8:	ins    DWORD PTR es:[edi],dx
  4026f9:	out    dx,al
  4026fa:	imul   esp,DWORD PTR [edx],0xffffff9e
  4026fd:	xchg   esi,eax
  4026fe:	add    BYTE PTR [edi],dh
  402700:	outs   dx,BYTE PTR ds:[esi]
  402701:	xor    ebp,0x36675d42
  402707:	(bad)  
  402708:	cmp    DWORD PTR [ebx],ebx
  40270a:	jo     0x4026b7
  40270c:	push   es
  40270d:	and    BYTE PTR [edi],ch
  40270f:	arpl   WORD PTR [ebx],di
  402711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402712:	cmp    ah,BYTE PTR [esi]
  402714:	inc    ecx
  402715:	rol    DWORD PTR [eax],1
  402717:	(bad)  
  402718:	popf   
  402719:	mov    cl,0x3f
  40271b:	pop    ss
  40271c:	jae    0x4026b7
  40271e:	adc    DWORD PTR [edx-0x4624839a],0xf1e7c7dd
  402728:	dec    DWORD PTR [ecx+0x7a9928e3]
  40272e:	push   ss
  40272f:	enter  0x9530,0xfd
  402733:	(bad)  
  402735:	push   0xfffffff5
  402737:	or     al,0xa0
  402739:	push   edi
  40273a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40273b:	sar    DWORD PTR [ebp+0x2e],0x39
  40273f:	loope  0x402784
  402741:	cmp    BYTE PTR [ebx],0xcd
  402744:	fwait
  402745:	sub    al,0x79
  402747:	ret    0x2a3a
  40274a:	retf   
  40274b:	mov    ch,0x1f
  40274d:	mov    ebx,ecx
  40274f:	mov    al,ds:0x60742caa
  402754:	retf   
  402755:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  402757:	retf   
  402758:	in     al,0x62
  40275a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275b:	enter  0x6686,0x9b
  40275f:	jbe    0x402757
  402761:	jg     0x402718
  402763:	xchg   esi,eax
  402764:	retf   
  402765:	sub    ah,dh
  402767:	imul   ecx,ebp,0xffffffe6
  40276a:	cdq    
  40276b:	xlat   BYTE PTR ds:[ebx]
  40276c:	sbb    BYTE PTR [esi-0x6],cl
  40276f:	mov    edx,0x8fa83e02
  402774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402775:	aaa    
  402776:	or     edi,DWORD PTR [esi-0x101d58cb]
  40277c:	xchg   esi,eax
  40277d:	jecxz  0x402739
  40277f:	jb     0x402791
  402781:	getsec 
  402783:	ins    BYTE PTR es:[edi],dx
  402784:	inc    esp
  402785:	test   DWORD PTR [eax],ebx
  402787:	jl     0x402801
  402789:	pop    esi
  40278a:	test   al,0xda
  40278c:	cmp    al,0x20
  40278e:	sub    dl,BYTE PTR [ebx]
  402790:	push   ebx
  402791:	inc    esi
  402792:	ret    
  402793:	jmp    0x40278e
  402795:	dec    eax
  402796:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402797:	pop    edi
  402798:	call   0x79fb492f
  40279d:	add    ah,BYTE PTR [edi-0x5c3e0010]
  4027a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a4:	jnp    0x40274d
  4027a6:	xor    esi,DWORD PTR [edx+ecx*8+0x2f]
  4027aa:	sahf   
  4027ab:	fwait
  4027ac:	jne    0x40272f
  4027ae:	jb     0x402829
  4027b0:	leave  
  4027b1:	(bad)  
  4027b2:	fnstenv [edx-0x74649220]
  4027b8:	push   ds
  4027b9:	rol    BYTE PTR [ebp+0x2e],cl
  4027bc:	add    BYTE PTR [eax-0x80],dh
  4027bf:	aaa    
  4027c0:	mov    al,0xfa
  4027c2:	lods   al,BYTE PTR ds:[esi]
  4027c3:	out    dx,al
  4027c4:	cmp    BYTE PTR [ebp-0x75373448],0x3
  4027cb:	lock das 
  4027cd:	sub    al,0x15
  4027cf:	stc    
  4027d0:	xchg   ebp,eax
  4027d1:	(bad)  
  4027d2:	adc    eax,0xd52ed77a
  4027d7:	adc    eax,0x9d4acc92
  4027dc:	push   ss
  4027dd:	push   ss
  4027de:	mov    ecx,ebx
  4027e0:	mov    bl,0x13
  4027e2:	mov    dh,0x54
  4027e4:	and    esi,edi
  4027e6:	xchg   esi,eax
  4027e7:	pop    ebx
  4027e8:	icebp  
  4027e9:	add    dl,BYTE PTR [ecx]
  4027eb:	les    ecx,FWORD PTR [edx+0x10eaeb30]
  4027f1:	inc    ecx
  4027f2:	mov    ch,0x10
  4027f4:	mov    ah,0xfe
  4027f6:	lock jg 0x4027a4
  4027f9:	push   esi
  4027fa:	test   BYTE PTR [ebp+eax*1-0x40c68056],dl
  402801:	das    
  402802:	and    DWORD PTR [esi],edx
  402804:	mov    esi,0xe40f757d
  402809:	push   edx
  40280a:	jl     0x402821
  40280c:	pop    ecx
  40280d:	mov    ds,WORD PTR [eax+0x2c]
  402810:	aad    0x1f
  402812:	cmp    esi,eax
  402814:	fmulp  st(6),st
  402816:	xor    edi,ecx
  402818:	jg     0x4027c4
  40281a:	idiv   BYTE PTR [edi-0x7d54fdf5]
  402820:	js     0x402826
  402822:	adc    eax,0x822d3127
  402827:	mov    bl,0x47
  402829:	nop
  40282a:	jmp    0x4027cd
  40282c:	std    
  40282d:	push   edi
  40282e:	clc    
  40282f:	push   edx
  402830:	out    0x5e,al
  402832:	cmp    DWORD PTR [eax+0x68],0xa72d6c9
  402839:	cmp    al,0xf7
  40283b:	lods   al,BYTE PTR ds:[esi]
  40283c:	cli    
  40283d:	hlt    
  40283e:	leave  
  40283f:	(bad)  
  402840:	daa    
  402841:	mov    cl,0xdb
  402843:	mov    dl,0x46
  402845:	lods   eax,DWORD PTR ds:[esi]
  402846:	mov    esp,0x19679a0f
  40284b:	mov    DWORD PTR [edx],ebx
  40284d:	out    0xbd,eax
  40284f:	icebp  
  402850:	leave  
  402851:	icebp  
  402852:	jns    0x4028d1
  402854:	sub    DWORD PTR [ebx-0x2c],ecx
  402857:	or     ecx,esi
  402859:	pusha  
  40285a:	das    
  40285b:	jp     0x4028af
  40285d:	pop    edx
  40285e:	loopne 0x40287b
  402860:	mov    BYTE PTR [ebp-0x6b64aefe],cl
  402866:	xor    DWORD PTR [ecx-0x26c1b11a],eax
  40286c:	dec    ecx
  40286d:	mov    al,ds:0xe9e68490
  402872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402873:	les    ebp,FWORD PTR [ebx]
  402875:	adc    DWORD PTR [esi+eiz*4-0x54e45904],0x25
  40287d:	aam    0x40
  40287f:	div    BYTE PTR [ebx+edi*4+0x5f]
  402883:	or     dh,BYTE PTR [eax]
  402885:	dec    dh
  402887:	add    BYTE PTR ds:0x58c72dc8,0x5a
  40288e:	outs   dx,BYTE PTR ds:[esi]
  40288f:	lahf   
  402890:	cmp    esp,ebx
  402892:	ss cmp al,0x7
  402895:	pcmpeqw mm5,QWORD PTR [eax+0x3d]
  402899:	jmp    0x40286e
  40289b:	rcr    eax,0xa4
  40289e:	mov    ds:0xcccb2df,eax
  4028a3:	cdq    
  4028a4:	adc    edi,0xffffffb5
  4028a7:	(bad)  
  4028a8:	sti    
  4028a9:	pop    edi
  4028aa:	(bad)  
  4028ab:	mov    esp,0xaca7c025
  4028b0:	fnstsw WORD PTR [ecx-0x7d]
  4028b3:	mov    eax,0x17cdcdf3
  4028b8:	push   ebx
  4028b9:	movaps XMMWORD PTR [esi*8-0x77b705e6],xmm2
  4028c1:	pop    edi
  4028c2:	ret    
  4028c3:	sahf   
  4028c4:	xlat   BYTE PTR ds:[ebx]
  4028c5:	(bad)
  4028c9:	not    BYTE PTR [ebp-0x693130bc]
  4028cf:	mov    BYTE PTR ds:[ecx+0x4dd4ab0d],ah
  4028d6:	push   edx
  4028d8:	in     al,dx
  4028d9:	retf   
  4028da:	mov    ecx,DWORD PTR [edx]
  4028dc:	jae    0x402930
  4028de:	mov    edi,esi
  4028e0:	daa    
  4028e1:	in     eax,0x6b
  4028e3:	(bad)  
  4028e4:	push   ss
  4028e5:	or     ebp,DWORD PTR [ebx+ecx*1+0xbb6f0a1]
  4028ec:	jg     0x402955
  4028ee:	fsubr  QWORD PTR [eax+0x64]
  4028f1:	inc    esi
  4028f2:	out    dx,eax
  4028f3:	daa    
  4028f4:	mov    dh,0x6d
  4028f6:	dec    ebx
  4028f7:	xlat   BYTE PTR ds:[ebx]
  4028f8:	inc    edi
  4028f9:	das    
  4028fa:	mov    al,0xb9
  4028fc:	pop    ebp
  4028fd:	mov    eax,ds:0x68f2c022
  402902:	mov    DWORD PTR [edx],ecx
  402904:	push   ebx
  402905:	mov    edi,0x9b1ee4d6
  40290a:	out    dx,al
  40290b:	mov    bh,0x14
  40290d:	daa    
  40290e:	mov    dl,0xa5
  402910:	lock test al,0xa4
  402913:	mov    ecx,0x27e8404
  402918:	mov    esp,0x2425845e
  40291d:	dec    BYTE PTR [edx+0x37]
  402920:	xor    al,0xd4
  402922:	sbb    DWORD PTR [ebp+0x6e],ebp
  402925:	inc    esi
  402926:	pop    esp
  402927:	or     al,0x55
  402929:	std    
  40292a:	(bad)  
  40292b:	iret   
  40292c:	mov    WORD PTR [ebp+0x66c20bdd],ds
  402932:	or     BYTE PTR [eax-0x13],0xa9
  402936:	cwde   
  402937:	repnz fst QWORD PTR [esi+0x39]
  40293b:	retf   
  40293c:	xor    DWORD PTR [edx+0x72],esp
  40293f:	in     eax,dx
  402940:	gs int 0x25
  402943:	rcl    DWORD PTR [edx-0x391a169b],0x63
  40294a:	lods   eax,DWORD PTR ds:[esi]
  40294b:	sub    cl,BYTE PTR [edx+0xd]
  40294e:	and    eax,0x6b92c542
  402953:	xchg   edx,eax
  402954:	cdq    
  402955:	add    ebx,edi
  402957:	xchg   DWORD PTR [eax],ebx
  402959:	sahf   
  40295a:	(bad)  
  40295b:	jp     0x40292e
  40295d:	mov    ah,0x94
  40295f:	xchg   ebx,eax
  402960:	(bad)  [esi+0x3a]
  402963:	lea    ebx,[edx-0x21]
  402966:	loope  0x4029a7
  402968:	push   cs
  402969:	lahf   
  40296a:	jb     0x4029d0
  40296c:	xor    DWORD PTR [ecx],ebx
  40296e:	push   ss
  40296f:	xrelease mov BYTE PTR [esp+ebp*1-0x1a],cl
  402974:	jb     0x40296b
  402976:	mov    ah,0x3d
  402978:	and    al,0x76
  40297a:	jecxz  0x402904
  40297c:	push   cs
  40297d:	sub    ebp,DWORD PTR ds:0xc693b6d9
  402983:	dec    DWORD PTR [esi+0x1d7107e]
  402989:	mul    DWORD PTR [ebx-0x7d]
  40298c:	xor    edi,DWORD PTR [ebp+0x5]
  40298f:	sub    bh,BYTE PTR [edx]
  402991:	test   BYTE PTR [edx-0x2d],bh
  402994:	jns    0x402993
  402996:	jne    0x4029ee
  402998:	jne    0x402978
  40299a:	or     BYTE PTR [ecx+0x7a6480a5],dl
  4029a0:	int    0x62
  4029a2:	jns    0x4029d0
  4029a4:	pushf  
  4029a5:	dec    esp
  4029a6:	cld    
  4029a7:	out    dx,al
  4029a8:	and    edi,0x67
  4029ab:	jg     0x402937
  4029ad:	xlat   BYTE PTR ds:[ebx]
  4029ae:	cmp    dl,BYTE PTR [esi]
  4029b0:	sar    DWORD PTR [ecx+eax*8],0x55
  4029b4:	or     ch,BYTE PTR [eax]
  4029b6:	xor    eax,0xe2084a75
  4029bb:	je     0x402a1d
  4029bd:	pop    eax
  4029be:	(bad)  
  4029c0:	outs   dx,DWORD PTR ds:[esi]
  4029c1:	ins    DWORD PTR es:[edi],dx
  4029c2:	jge    0x4029b7
  4029c4:	xchg   edi,eax
  4029c5:	sbb    cl,bl
  4029c7:	jg     0x4029dc
  4029c9:	push   eax
  4029ca:	jb     0x4029ba
  4029cc:	(bad)  
  4029cd:	jbe    0x4029c5
  4029cf:	pop    esi
  4029d0:	adc    eax,DWORD PTR [edx]
  4029d2:	cmp    BYTE PTR [ebx+0x530add65],ah
  4029d8:	sub    DWORD PTR [ecx],ebx
  4029da:	xor    al,0xcb
  4029dc:	push   ss
  4029dd:	xor    al,0x82
  4029df:	ss das 
  4029e1:	jle    0x402a0e
  4029e3:	add    al,0x87
  4029e5:	dec    ebx
  4029e6:	jne    0x402a34
  4029e8:	dec    esi
  4029e9:	fisttp QWORD PTR [ecx+0x7c450e2]
  4029ef:	add    eax,0x80a09844
  4029f4:	pusha  
  4029f5:	pop    eax
  4029f6:	mov    eax,0xe7f9ca6c
  4029fb:	int    0xc5
  4029fd:	xor    dl,ah
  4029ff:	add    eax,0x4b264f5e
  402a04:	mov    esp,0xc944f522
  402a09:	mov    dh,0xf5
  402a0b:	add    al,0x7e
  402a0d:	jmp    0x8015:0x713d5023
  402a14:	pop    ebp
  402a15:	pop    ebx
  402a16:	aad    0xc6
  402a18:	je     0x402a82
  402a1a:	in     eax,dx
  402a1b:	mov    al,ds:0xf66f52be
  402a20:	ret    0xb602
  402a23:	loopne 0x4029e7
  402a25:	push   esi
  402a26:	(bad)  
  402a27:	scas   al,BYTE PTR es:[edi]
  402a28:	(bad)  
  402a29:	push   edx
  402a2a:	(bad)  
  402a2b:	std    
  402a2c:	adc    esp,DWORD PTR [ebp+0x64]
  402a2f:	sahf   
  402a30:	pushf  
  402a31:	fwait
  402a32:	jmp    0xbb4e:0x4d0e84a5
  402a39:	inc    ebp
  402a3a:	cmp    al,0xdd
  402a3c:	ss mov esp,0x7ae3431c
  402a42:	scas   eax,DWORD PTR es:[edi]
  402a43:	aam    0x55
  402a45:	jmp    0xcf46:0xb41f94a5
  402a4c:	aam    0x9c
  402a4e:	jo     0x402a5a
  402a50:	hlt    
  402a51:	and    al,0x9e
  402a53:	pop    eax
  402a54:	push   esi
  402a55:	lods   al,BYTE PTR ds:[esi]
  402a56:	test   al,0x89
  402a58:	inc    ecx
  402a59:	sub    BYTE PTR [edi+0x7f69f3a1],al
  402a5f:	and    BYTE PTR ds:0x6d33fdf,0x43
  402a66:	push   es
  402a67:	add    eax,0x91ac49ae
  402a6c:	sub    BYTE PTR [ebp-0x70],bl
  402a6f:	pop    ecx
  402a70:	pop    ds
  402a71:	ficom  DWORD PTR ds:0x3b7b6953
  402a77:	push   ebx
  402a78:	push   edi
  402a79:	stc    
  402a7a:	shl    ch,cl
  402a7c:	jo     0x402a1a
  402a7e:	fwait
  402a7f:	add    bh,BYTE PTR [edx+0x44fdef6f]
  402a85:	add    al,0x3a
  402a87:	inc    BYTE PTR [ecx-0x73]
  402a8a:	xor    eax,0xdff9c96e
  402a8f:	jnp    0x402a82
  402a91:	lds    esi,FWORD PTR [edx+0x1a]
  402a94:	(bad)  
  402a95:	mov    al,0xb0
  402a97:	es sti 
  402a99:	retf   0x2e5d
  402a9c:	je     0x402a29
  402a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a9f:	mov    ebp,0xb33e7d5
  402aa4:	repnz cwde 
  402aa6:	dec    eax
  402aa7:	dec    ebp
  402aa8:	xor    ebp,ecx
  402aaa:	into   
  402aab:	jae    0x402a66
  402aad:	ja     0x402a81
  402aaf:	out    dx,al
  402ab0:	les    esp,FWORD PTR ds:0x4e0d6474
  402ab6:	test   al,0xa6
  402ab8:	add    dh,BYTE PTR [edi+0x753e9968]
  402abe:	cs stos BYTE PTR es:[edi],al
  402ac0:	mov    esi,0xe3c4b8a4
  402ac5:	add    DWORD PTR [ebp+0x1b69b9bd],edi
  402acb:	jne    0x402af4
  402acd:	repz cmp al,0x4a
  402ad0:	retf   
  402ad1:	cld    
  402ad2:	jecxz  0x402ac6
  402ad4:	add    esi,esp
  402ad6:	mul    BYTE PTR [esi]
  402ad8:	push   0x9110956b
  402add:	mov    ecx,0xdc8842de
  402ae2:	aad    0xd7
  402ae4:	pusha  
  402ae5:	call   0x9595b5bc
  402aea:	retf   
  402aeb:	cmp    BYTE PTR [edi-0x59],0x1e
  402aef:	pop    ebp
  402af0:	adc    BYTE PTR [ebx],0xa5
  402af3:	mov    dl,0xbd
  402af5:	pop    ebx
  402af6:	inc    edx
  402af7:	scas   al,BYTE PTR es:[edi]
  402af8:	mov    bh,0x9c
  402afa:	(bad)  
  402afb:	mov    esp,0x5160d051
  402b00:	mov    ebx,0x696ce8ee
  402b05:	aas    
  402b06:	std    
  402b07:	(bad)  
  402b08:	or     cl,BYTE PTR [ecx+edx*2-0x3c]
  402b0c:	lods   al,BYTE PTR ds:[esi]
  402b0d:	or     dl,BYTE PTR [edx+0x69]
  402b10:	addr16 call 0x8e7b1eb4
  402b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b17:	(bad)  
  402b18:	cmp    ch,BYTE PTR [edx+ebp*2-0x3c]
  402b1c:	or     BYTE PTR [ebx+0x7de66ba7],al
  402b22:	jle    0x402b33
  402b24:	lods   eax,DWORD PTR ds:[esi]
  402b25:	aaa    
  402b26:	stos   BYTE PTR es:[edi],al
  402b27:	je     0x402aec
  402b29:	cmp    al,0x5d
  402b2b:	ins    DWORD PTR es:[edi],dx
  402b2c:	in     eax,dx
  402b2d:	int3   
  402b2e:	test   eax,0x7d07064e
  402b33:	test   DWORD PTR [eax+0x352413a],ecx
  402b39:	ret    0x97e3
  402b3c:	fist   DWORD PTR [edx-0x4d]
  402b3f:	(bad)  
  402b40:	ja     0x402b98
  402b42:	fild   DWORD PTR [ecx+0x53]
  402b45:	sbb    eax,0xe29a21de
  402b4a:	(bad)  
  402b4b:	stc    
  402b4c:	mov    ds:0x8b972abc,eax
  402b51:	scas   eax,DWORD PTR es:[edi]
  402b52:	pop    es
  402b53:	push   ebp
  402b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b55:	dec    ecx
  402b56:	(bad)  
  402b57:	fbld   TBYTE PTR [esi]
  402b59:	leave  
  402b5a:	pop    ebp
  402b5b:	call   0xf479:0x9d2219a5
  402b62:	imul   esi,DWORD PTR [ebp+0x26],0xb057cc2e
  402b69:	jb     0x402aed
  402b6b:	xchg   dh,bh
  402b6d:	aam    0xb9
  402b6f:	adc    DWORD PTR [edi],ebx
  402b71:	(bad)  [ebx+0x30]
  402b74:	push   ebp
  402b75:	retf   0x1c73
  402b78:	adc    DWORD PTR [ecx+ecx*2-0x69],0x42
  402b7d:	fld    TBYTE PTR [ecx+0x5adb56de]
  402b83:	xlat   BYTE PTR ds:[ebx]
  402b84:	dec    ecx
  402b85:	shr    esi,0x94
  402b88:	mov    esi,0x84ed2f7d
  402b8d:	dec    esi
  402b8e:	cld    
  402b8f:	outs   dx,DWORD PTR ds:[esi]
  402b90:	mov    dl,0xae
  402b92:	idiv   BYTE PTR ds:0x349526c1
  402b98:	push   ebx
  402b99:	cmp    BYTE PTR [edx-0x58ede299],ah
  402b9f:	hlt    
  402ba0:	dec    esp
  402ba1:	inc    eax
  402ba2:	lahf   
  402ba3:	outs   dx,DWORD PTR ds:[esi]
  402ba4:	push   ecx
  402ba5:	dec    edi
  402ba6:	xchg   esp,eax
  402ba7:	inc    ebp
  402ba8:	enter  0x9d96,0xba
  402bac:	xchg   ecx,eax
  402bad:	in     eax,0xec
  402baf:	in     al,0xc
  402bb1:	mov    dh,0xa
  402bb3:	imul   ecx
  402bb5:	sbb    DWORD PTR [edi-0x73],ecx
  402bb8:	sar    DWORD PTR [ebx],cl
  402bba:	call   0xd93:0xc2d559f0
  402bc1:	mov    ebx,0xabf6d36b
  402bc6:	jecxz  0x402ba7
  402bc8:	mov    ds:0x42700d79,al
  402bcd:	sub    al,0x9d
  402bcf:	mov    ds:0x95328975,eax
  402bd4:	jp     0x402c1a
  402bd6:	cmc    
  402bd7:	out    0x88,al
  402bd9:	push   0x60abf0a6
  402bde:	iret   
  402bdf:	xchg   DWORD PTR [edi],ebx
  402be1:	mov    ds,WORD PTR [ebx-0x14f6c4ec]
  402be7:	call   FWORD PTR [eax]
  402be9:	dec    edx
  402bea:	cli    
  402beb:	xchg   ebp,eax
  402bec:	retf   
  402bed:	mov    BYTE PTR [eax+0x73],0x12
  402bf1:	cld    
  402bf2:	sub    edx,edi
  402bf4:	mov    ds:0x3b75403d,eax
  402bf9:	mov    ds:0x1d2b1df4,al
  402bfe:	popf   
  402bff:	dec    ecx
  402c00:	dec    ebp
  402c01:	std    
  402c02:	push   ds
  402c03:	xchg   DWORD PTR [eax+0x69db28db],ebx
  402c09:	xor    BYTE PTR [edx+0x5ed5b3ad],ch
  402c0f:	sbb    ebx,DWORD PTR [ebp+0x2d8babe0]
  402c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c16:	pop    ds
  402c17:	mov    ch,0x8f
  402c19:	xor    eax,0x1ae721a9
  402c1e:	and    eax,0xd5637e84
  402c23:	fsubr  QWORD PTR [edi+0x502a393]
  402c29:	fwait
  402c2a:	test   DWORD PTR [esi+0x5220e0e5],edx
  402c30:	xor    al,0x1e
  402c32:	nop
  402c33:	adc    BYTE PTR [ebp+0x6d777f0],al
  402c39:	fbstp  TBYTE PTR [ebp-0x3d2ea253]
  402c3f:	inc    edi
  402c40:	adc    edi,DWORD PTR [ebp-0x5fa1374e]
  402c46:	inc    esi
  402c47:	inc    ebx
  402c48:	cmp    al,0x33
  402c4a:	or     edx,DWORD PTR [ebx]
  402c4c:	stos   BYTE PTR es:[edi],al
  402c4d:	pop    ss
  402c4e:	inc    ebx
  402c4f:	xchg   esp,eax
  402c50:	add    BYTE PTR [edi+0x20dab6f7],ch
  402c56:	cmp    al,0x34
  402c58:	fnsave [esi]
  402c5a:	xor    ecx,DWORD PTR [edi+esi*4-0x788291e0]
  402c61:	adc    DWORD PTR [eax-0x71d53f20],esp
  402c67:	mov    dl,0x8f
  402c69:	pop    ss
  402c6a:	jmp    0x402c53
  402c6c:	mov    DWORD PTR [edi-0x4181b366],0x253e03dc
  402c76:	xchg   ebx,eax
  402c77:	xor    edi,DWORD PTR [esi]
  402c79:	test   eax,ecx
  402c7b:	int3   
  402c7c:	mov    ch,0xca
  402c7e:	mul    DWORD PTR [ecx+eiz*2]
  402c81:	and    eax,0xbd45f78d
  402c86:	add    edi,esp
  402c88:	data16 or al,BYTE PTR [eax+0x7a]
  402c8c:	pop    ecx
  402c8d:	jmp    0x6069:0x3c2c214f
  402c94:	add    al,0xaf
  402c96:	std    
  402c97:	sub    ecx,DWORD PTR [edx]
  402c99:	add    BYTE PTR [edi-0x7357b9ad],cl
  402c9f:	mov    eax,ds:0xebf3f36c
  402ca4:	cld    
  402ca5:	das    
  402ca6:	sub    al,BYTE PTR [ecx+eiz*2]
  402ca9:	mov    al,BYTE PTR [ebx-0x72735ffe]
  402caf:	xor    DWORD PTR [esi-0xf],0x2b
  402cb3:	push   edi
  402cb4:	xchg   ebx,eax
  402cb5:	push   ss
  402cb6:	mov    eax,0x31c86257
  402cbb:	dec    ebx
  402cbc:	adc    BYTE PTR [eax+0x73],0xff
  402cc0:	out    dx,al
  402cc1:	sbb    dh,BYTE PTR [ecx]
  402cc3:	ror    DWORD PTR [edx+0x1e350e6f],cl
  402cc9:	sbb    eax,0x707b9e66
  402cce:	out    0xa2,al
  402cd0:	push   es
  402cd1:	mov    esp,DWORD PTR [edi]
  402cd3:	sub    DWORD PTR [edx-0x6c],esp
  402cd6:	sub    ecx,edi
  402cd8:	pop    eax
  402cd9:	push   0xffffff9b
  402cdb:	lea    ebx,ds:0x8f3b01f
  402ce1:	rcr    DWORD PTR [eax],0x97
  402ce4:	js     0x402d15
  402ce6:	aad    0x7b
  402ce8:	push   esi
  402ce9:	mov    ds:0x759d1f6b,al
  402cee:	add    ecx,eax
  402cf0:	fiadd  WORD PTR [ebp+eiz*8+0x6b]
  402cf4:	(bad)  
  402cf5:	jnp    0x402d39
  402cf7:	outs   dx,BYTE PTR ds:[esi]
  402cf8:	icebp  
  402cf9:	pop    edi
  402cfa:	push   ecx
  402cfb:	mov    ch,0x86
  402cfd:	fwait
  402cfe:	clc    
  402cff:	jge    0x402c81
  402d01:	jle    0x402c95
  402d03:	xchg   edi,eax
  402d04:	lods   eax,DWORD PTR ds:[esi]
  402d05:	icebp  
  402d06:	or     cl,BYTE PTR [edx-0x7f60090d]
  402d0c:	pop    eax
  402d0d:	neg    DWORD PTR [edx]
  402d0f:	mov    ecx,0x1687928e
  402d14:	aas    
  402d15:	jne    0x402cec
  402d17:	mov    ds:0x8da42526,eax
  402d1c:	ret    0x69e8
  402d1f:	call   0xeb5b2be1
  402d24:	call   0x43792ec9
  402d29:	ror    BYTE PTR [edi+0x531e31d8],cl
  402d2f:	std    
  402d30:	or     al,0x3
  402d32:	jno    0x402d03
  402d34:	cmp    al,0x33
  402d36:	mov    eax,0xc9e9f133
  402d3b:	sub    cl,BYTE PTR [eax-0x2b3ade61]
  402d41:	and    al,0x30
  402d43:	xor    ch,ch
  402d45:	sbb    eax,0x97442cb3
  402d4a:	popf   
  402d4b:	pop    ss
  402d4c:	lods   al,BYTE PTR ds:[esi]
  402d4d:	xlat   BYTE PTR ds:[ebx]
  402d4e:	test   al,0xca
  402d50:	popa   
  402d51:	xor    edi,DWORD PTR [ebx+eax*1-0x14]
  402d55:	cli    
  402d56:	cli    
  402d57:	(bad)  [ebx]
  402d59:	push   edx
  402d5a:	jge    0x402ced
  402d5c:	sub    al,BYTE PTR [edx+edi*4+0x60]
  402d60:	mov    ebp,ecx
  402d62:	cmp    dl,bh
  402d64:	addr16 cmp al,0x14
  402d67:	dec    esp
  402d68:	and    eax,0x15f050df
  402d6d:	gs add eax,0xdd997a47
  402d73:	out    dx,al
  402d74:	push   0x7c6e4046
  402d79:	jge    0xb7e2ae7a
  402d7f:	(bad)  
  402d80:	ror    edi,cl
  402d82:	jg     0x402d94
  402d84:	ds je  0x402dd2
  402d87:	outs   dx,BYTE PTR ds:[esi]
  402d88:	test   eax,0x49284082
  402d8d:	pushw  0x1f77
  402d91:	cmp    al,0x45
  402d93:	jae    0x402de6
  402d95:	sub    BYTE PTR [eax],0x83
  402d98:	loopne 0x402d5a
  402d9a:	es xchg ecx,eax
  402d9c:	cmp    BYTE PTR [ebp+0x3ab8519f],cl
  402da2:	int    0xcc
  402da4:	push   DWORD PTR [ecx]
  402da6:	clc    
  402da7:	sbb    dh,BYTE PTR [edi-0x2424fafd]
  402dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dae:	or     eax,0x6ddf5eba
  402db3:	lock cmp bh,BYTE PTR [edx-0x46]
  402db7:	push   ebp
  402db8:	mov    ch,0x55
  402dba:	rol    BYTE PTR ss:[edx-0x41b99809],1
  402dc1:	sub    DWORD PTR [edi-0x58349e56],0x7
  402dc8:	or     BYTE PTR [ecx-0x5a],0x8b
  402dcc:	add    bh,BYTE PTR [edx-0x6a81406b]
  402dd2:	imul   esi,DWORD PTR [ebp-0x25],0x6e
  402dd6:	jp     0x402e10
  402dd8:	out    0x72,eax
  402dda:	lea    edx,[eax]
  402ddc:	push   ss
  402ddd:	mov    bl,0x4d
  402ddf:	bound  esi,QWORD PTR [edi+0x6714af74]
  402de5:	test   eax,esp
  402de7:	xchg   edx,eax
  402de8:	jecxz  0x402e0a
  402dea:	jecxz  0x402e00
  402dec:	arpl   sp,di
  402dee:	popf   
  402def:	not    bh
  402df1:	jge    0x402d76
  402df3:	cdq    
  402df4:	out    dx,eax
  402df5:	imul   ebx,esi,0xffffffc9
  402df8:	or     ah,al
  402dfa:	jmp    0xc3275dc7
  402dff:	mov    dh,0xfe
  402e01:	popf   
  402e02:	mov    WORD PTR [eax],ds
  402e04:	pop    esp
  402e05:	jmp    0x402dd4
  402e07:	push   esp
  402e08:	les    edx,FWORD PTR [ebx+ebp*1+0x51]
  402e0c:	inc    ebp
  402e0d:	push   es
  402e0e:	inc    ebp
  402e0f:	fsubr  DWORD PTR [esi-0x77]
  402e12:	pop    esp
  402e13:	sub    BYTE PTR [ebp+0x5d],al
  402e16:	or     al,0x48
  402e18:	sub    al,0x96
  402e1a:	repz jmp 0xcf0ede41
  402e20:	mov    edx,0x5bd5f364
  402e25:	push   ss
  402e26:	rol    BYTE PTR [edx],1
  402e28:	jns    0x402e29
  402e2a:	and    DWORD PTR [ebx],ebx
  402e2c:	out    0x54,eax
  402e2e:	les    ebx,FWORD PTR [ecx-0x1ea68702]
  402e34:	or     bl,BYTE PTR [ebx-0x78]
  402e37:	pushf  
  402e38:	aad    0x21
  402e3a:	sbb    edx,DWORD PTR ds:0x4ebb6429
  402e40:	mov    esi,DWORD PTR ds:0xbec8e198
  402e46:	hlt    
  402e47:	enter  0xe7a7,0xc7
  402e4b:	and    al,0xf0
  402e4d:	push   edx
  402e4e:	adc    BYTE PTR [eax-0x3c],0xb6
  402e52:	sahf   
  402e53:	sbb    DWORD PTR [ecx-0x43],0x43
  402e57:	cwde   
  402e58:	xor    ebp,eax
  402e5a:	bound  ebp,QWORD PTR [ebx]
  402e5c:	ret    0x71ac
  402e5f:	sbb    ch,al
  402e61:	cs int 0x2e
  402e64:	pop    ebx
  402e65:	ds out 0xe7,eax
  402e68:	popa   
  402e69:	ds fwait
  402e6b:	(bad)  
  402e6c:	(bad)  [edx+ebx*4-0x6915e484]
  402e73:	xor    cl,dl
  402e75:	adc    al,0x40
  402e77:	sub    ch,BYTE PTR [edi+0x3aa33728]
  402e7d:	bnd jno 0x402e6e
  402e80:	sub    DWORD PTR [ecx+0x26],0x7036d591
  402e87:	mov    ecx,0x9d13866c
  402e8c:	adc    al,0xca
  402e8e:	add    dl,BYTE PTR [ebp-0x67]
  402e91:	stos   DWORD PTR es:[edi],eax
  402e92:	pop    es
  402e93:	cmc    
  402e94:	fadd   st,st(1)
  402e96:	int    0x22
  402e98:	out    dx,eax
  402e99:	mov    cl,0x6
  402e9b:	fcom   QWORD PTR [ebx-0x2d6fae96]
  402ea1:	fcom   DWORD PTR [ebx-0x4f]
  402ea4:	mov    ?,WORD PTR [ebx+0x5f]
  402ea7:	or     eax,0xe8f5e4a5
  402eac:	jp     0x402f16
  402eae:	xor    DWORD PTR [edi-0x3d7e80b],esi
  402eb4:	in     eax,dx
  402eb5:	ins    DWORD PTR es:[edi],dx
  402eb6:	pop    esp
  402eb7:	cdq    
  402eb8:	fstp   QWORD PTR [ecx+0x76]
  402ebb:	and    ebp,esp
  402ebd:	xchg   BYTE PTR [edi-0x5e],dh
  402ec0:	stc    
  402ec1:	push   0xffffffad
  402ec3:	fisub  WORD PTR ds:0x8efc82d4
  402ec9:	xchg   esi,eax
  402eca:	push   esi
  402ecb:	xchg   esp,eax
  402ecc:	popa   
  402ecd:	push   0xffffffcd
  402ecf:	inc    ecx
  402ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ed1:	stos   DWORD PTR es:[edi],eax
  402ed2:	std    
  402ed3:	outs   dx,DWORD PTR ds:[esi]
  402ed4:	jns    0x402e81
  402ed6:	xor    al,0xea
  402ed8:	mov    esi,0x33e7055f
  402edd:	ret    0x1724
  402ee0:	fwait
  402ee1:	nop
  402ee2:	outs   dx,DWORD PTR ds:[esi]
  402ee3:	es jnp 0x402eaf
  402ee6:	cli    
  402ee7:	inc    esp
  402ee8:	mov    ebp,0x8b4b10ad
  402eed:	jle    0x402f40
  402eef:	pop    edi
  402ef0:	(bad)  
  402ef1:	xlat   BYTE PTR ds:[ebx]
  402ef2:	test   BYTE PTR [edi],0xcf
  402ef5:	lea    esp,[ebx-0x684659ad]
  402efb:	scas   al,BYTE PTR es:[edi]
  402efc:	ret    
  402efd:	mov    ch,0xd7
  402eff:	add    eax,0x62b05631
  402f04:	int3   
  402f05:	les    esp,FWORD PTR [edi+eax*4]
  402f08:	fcmovu st,st(3)
  402f0a:	pop    ecx
  402f0b:	xor    al,0xe6
  402f0d:	cmp    BYTE PTR [esi-0x1bf98111],dh
  402f13:	in     al,0x90
  402f15:	mov    esi,0x227f5665
  402f1a:	and    DWORD PTR [ebx-0x4f3f0ed4],ecx
  402f20:	(bad)  
  402f21:	inc    ebx
  402f22:	push   edi
  402f23:	mov    al,0x11
  402f25:	loope  0x402f0c
  402f27:	stc    
  402f28:	aaa    
  402f29:	push   ebp
  402f2a:	pop    esi
  402f2b:	or     ebx,DWORD PTR [ecx]
  402f2d:	sub    eax,0xe54c42d7
  402f32:	push   edx
  402f33:	jle    0x402ef1
  402f35:	fdiv   DWORD PTR [edx+0x24]
  402f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f39:	inc    edi
  402f3a:	jmp    0x402fa3
  402f3c:	jne    0x402eef
  402f3e:	gs pop esp
  402f40:	jecxz  0x402f3a
  402f42:	call   0x2197b993
  402f47:	popa   
  402f48:	push   ebp
  402f49:	jo     0x402ef7
  402f4b:	push   0xffffffac
  402f4d:	clc    
  402f4e:	jmp    0x58ad759e
  402f53:	outs   dx,BYTE PTR ds:[esi]
  402f54:	mov    cl,0x11
  402f56:	in     al,dx
  402f57:	xlat   BYTE PTR ds:[ebx]
  402f58:	pop    ss
  402f59:	jl     0x402f0d
  402f5b:	test   al,ah
  402f5d:	push   0x3ef36b9e
  402f62:	add    bl,BYTE PTR [ebp+0x1a]
  402f65:	jle    0x402f43
  402f67:	xor    DWORD PTR [ebx-0x19],esp
  402f6a:	jo     0x402f32
  402f6c:	xchg   esi,eax
  402f6d:	fisttp QWORD PTR [ebx+0x7c60298]
  402f73:	sbb    bh,bh
  402f75:	ficomp WORD PTR [edx]
  402f77:	int    0x6e
  402f79:	xchg   DWORD PTR [ecx],esp
  402f7b:	(bad)  
  402f7d:	dec    esi
  402f7e:	cmp    ebx,ebp
  402f80:	(bad)
  402f84:	test   BYTE PTR [esi-0x5cbee29a],bl
  402f8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f8b:	push   edx
  402f8c:	(bad)  
  402f8d:	stc    
  402f8e:	(bad)  
  402f8f:	aaa    
  402f90:	popa   
  402f91:	add    DWORD PTR [ebp+0x28],edi
  402f94:	xchg   edx,eax
  402f95:	jg     0x402f3d
  402f97:	out    dx,al
  402f98:	retf   0x9fec
  402f9b:	(bad)  
  402f9c:	aad    0xdb
  402f9e:	cmp    DWORD PTR [edx+0x54a9378],esp
  402fa4:	sti    
  402fa5:	sbb    DWORD PTR cs:[ecx+ebp*8],edi
  402fa9:	outs   dx,BYTE PTR ds:[esi]
  402faa:	(bad)  
  402fab:	pushf  
  402fac:	jo     0x40300f
  402fae:	xor    BYTE PTR [esp+ebp*8+0x17],al
  402fb2:	push   edx
  402fb3:	mov    ds:0x1e3e117d,eax
  402fb8:	push   edi
  402fb9:	enter  0x8dbf,0x93
  402fbd:	push   ss
  402fbe:	mov    ebx,0xe309f57e
  402fc3:	hlt    
  402fc4:	sub    ah,BYTE PTR [ebx+0x23]
  402fc7:	dec    edx
  402fc8:	jbe    0x403014
  402fca:	sub    eax,0x6b20c1d1
  402fcf:	jle    0x402ffc
  402fd1:	pop    ecx
  402fd2:	fisubr DWORD PTR [edi]
  402fd4:	cmp    edi,DWORD PTR [edi+0x1]
  402fd7:	push   0xabe2811b
  402fdc:	xchg   ebx,eax
  402fdd:	inc    ebp
  402fde:	pop    edi
  402fdf:	test   eax,0xf089645b
  402fe4:	add    ebp,esp
  402fe6:	sbb    esi,eax
  402fe8:	mov    esp,0xecc5b877
  402fed:	rol    DWORD PTR [edx-0x25],cl
  402ff0:	xchg   esp,eax
  402ff1:	test   al,0x3e
  402ff3:	fst    DWORD PTR [edi+0x26fb1b87]
  402ff9:	mov    edx,0x5717485e
  402ffe:	push   es
  402fff:	lds    eax,FWORD PTR [ecx+edi*4-0x24b92575]
  403006:	add    DWORD PTR [esi+0x16668460],ebp
  40300c:	icebp  
  40300d:	sbb    DWORD PTR [edx-0x26b02382],0x26
  403014:	sbb    cl,dh
  403016:	mov    ch,0x5a
  403018:	xchg   DWORD PTR [edi-0x397f77cb],eax
  40301e:	cld    
  40301f:	outs   dx,BYTE PTR ds:[esi]
  403020:	test   BYTE PTR [ecx-0x1a],0xbe
  403024:	popf   
  403025:	(bad)  
  403027:	sub    al,0x3c
  403029:	jecxz  0x4030a9
  40302b:	add    DWORD PTR [edi-0x13],edi
  40302e:	std    
  40302f:	push   ss
  403030:	dec    esi
  403031:	scas   al,BYTE PTR es:[edi]
  403032:	mov    edx,0xcffe7659
  403037:	lahf   
  403038:	lods   al,BYTE PTR ds:[esi]
  403039:	sub    eax,DWORD PTR [edi-0x6f]
  40303c:	mov    ebx,0x9623a92d
  403041:	ror    dh,0x70
  403044:	mov    ?,WORD PTR [esi+0x48]
  403047:	hlt    
  403048:	pop    eax
  403049:	add    ah,BYTE PTR [ebp-0x20cced43]
  40304f:	shr    DWORD PTR [ebp+0x71cdafdd],0x79
  403056:	jbe    0x4030a0
  403058:	adc    ebp,DWORD PTR [esi]
  40305a:	xchg   DWORD PTR [edx+0x5e3d3135],esi
  403060:	or     bl,BYTE PTR [ecx]
  403062:	mov    bh,BYTE PTR [edi]
  403064:	mov    esp,0x7f3dc4dd
  403069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40306a:	std    
  40306b:	enter  0xa63f,0x36
  40306f:	adc    al,0x1a
  403071:	jmp    FWORD PTR [eax]
  403073:	or     eax,0x82d4e2ac
  403078:	jl     0x403059
  40307a:	sbb    eax,0x78455b7b
  40307f:	xor    eax,0xa3c6832b
  403084:	nop
  403085:	jo     0x40307c
  403087:	lds    edi,FWORD PTR [esi]
  403089:	fs push ds
  40308b:	or     ah,BYTE PTR ds:0x59268587
  403091:	sub    al,0xc4
  403093:	pusha  
  403094:	pop    ecx
  403095:	mov    esp,0x9d258177
  40309a:	xor    BYTE PTR [esi-0x2799e7fd],ah
  4030a0:	adc    edi,ecx
  4030a2:	div    DWORD PTR [ebp-0x318b889e]
  4030a8:	mov    esp,0xa86da8e5
  4030ad:	mul    BYTE PTR [edx-0x67cbb2a4]
  4030b3:	es addr16 adc ebp,eax
  4030b7:	shl    BYTE PTR [edi+0x15],0xd2
  4030bb:	das    
  4030bc:	jg     0x4030b4
  4030be:	cmp    DWORD PTR [edi-0x45],edx
  4030c1:	xchg   ecx,eax
  4030c2:	and    BYTE PTR [esi-0x272818e1],al
  4030c8:	push   ss
  4030c9:	(bad)  
  4030ca:	cld    
  4030cb:	jno    0x403092
  4030cd:	inc    esi
  4030ce:	mov    edx,0x84312890
  4030d3:	push   eax
  4030d4:	xor    dl,BYTE PTR [ebx+0x63]
  4030d7:	push   eax
  4030d8:	frstor [ecx*4-0x44a75cde]
  4030df:	aad    0x9d
  4030e1:	aaa    
  4030e2:	jle    0x40306a
  4030e4:	lods   al,BYTE PTR ds:[esi]
  4030e5:	pop    ebx
  4030e6:	inc    ebp
  4030e7:	xchg   BYTE PTR [eax+0x2a],bl
  4030ea:	pop    edi
  4030eb:	lods   al,BYTE PTR ds:[esi]
  4030ec:	imul   ebx,DWORD PTR [ebp+0x62],0x2591b7a4
  4030f3:	or     BYTE PTR [esi+0x7d9d6c4a],dh
  4030f9:	leave  
  4030fa:	lahf   
  4030fb:	pop    ecx
  4030fc:	sbb    eax,0x1961083a
  403101:	lds    eax,FWORD PTR [ebx]
  403103:	std    
  403104:	(bad)  
  403105:	cmc    
  403106:	pop    edx
  403107:	and    BYTE PTR [edi],dl
  403109:	sub    eax,0xa97ee79b
  40310e:	inc    ebx
  40310f:	add    BYTE PTR [ecx+ebp*2-0x80],cl
  403113:	adc    cl,cl
  403115:	and    BYTE PTR [ebx-0x7596a2df],ah
  40311b:	pop    esi
  40311c:	pop    ebp
  40311d:	ins    BYTE PTR es:[edi],dx
  40311e:	mov    dl,0x7b
  403120:	iret   
  403121:	data16 jb 0x403172
  403124:	push   edi
  403125:	pop    edx
  403126:	hlt    
  403127:	(bad)  
  403128:	sbb    DWORD PTR [ebx+0x47],edi
  40312b:	fwait
  40312c:	ret    
  40312d:	mov    cs,WORD PTR [edi+0x28]
  403130:	imul   edi,DWORD PTR [edx],0x39fde75c
  403136:	mov    eax,ds:0xa6831f1e
  40313b:	mov    ds:0x99e2a95d,eax
  403140:	xor    eax,0x681d45b1
  403145:	es pop edi
  403147:	gs mov bl,0x42
  40314a:	and    BYTE PTR [ecx],al
  40314c:	std    
  40314d:	cmp    edi,DWORD PTR [esi+0x4a]
  403150:	in     eax,dx
  403151:	cld    
  403152:	mov    ecx,0xcebfff70
  403157:	cmp    esi,DWORD PTR [ecx+0x62]
  40315a:	sbb    DWORD PTR [ecx],0x2667ed00
  403160:	push   edi
  403161:	mov    edi,0xeae39c6c
  403166:	mov    al,ds:0x1b1cef40
  40316b:	(bad)  
  40316c:	cmc    
  40316d:	jl     0x4031ab
  40316f:	pop    eax
  403170:	mov    al,ds:0x806d807a
  403175:	xchg   BYTE PTR [eax+0x1],bh
  403178:	push   0x7890f741
  40317d:	inc    esp
  40317e:	sar    DWORD PTR [eax],cl
  403180:	add    dl,cl
  403182:	xchg   ecx,eax
  403183:	adc    eax,0xa00f3e46
  403188:	sub    DWORD PTR [edi+edx*4+0x1dfbecd9],0xfd830c8e
  403193:	sbb    BYTE PTR ds:0x7f6ce9,dh
  403199:	fcomp  QWORD PTR [ecx+ebx*8-0x3e919ef]
  4031a0:	loopne 0x40313f
  4031a2:	js     0x4031b5
  4031a4:	and    bh,bl
  4031a6:	test   dl,dl
  4031a8:	xchg   esp,eax
  4031a9:	push   cs
  4031aa:	push   ebp
  4031ab:	stos   BYTE PTR es:[edi],al
  4031ac:	push   0x6f
  4031ae:	or     al,0xee
  4031b0:	push   edi
  4031b1:	pop    esi
  4031b2:	pop    es
  4031b3:	mov    esi,0x87209259
  4031b8:	loop   0x4031ec
  4031ba:	iret   
  4031bb:	sbb    DWORD PTR [edi+0x52],ebx
  4031be:	and    eax,0xdb833d20
  4031c3:	aam    0xb2
  4031c5:	data16 adc BYTE PTR [ebp+0x3c],0x1c
  4031ca:	shl    DWORD PTR [edx-0x64f0f8c5],cl
  4031d0:	in     eax,0xe4
  4031d2:	sahf   
  4031d3:	pop    eax
  4031d4:	lahf   
  4031d5:	jg     0x4031c7
  4031d7:	xlat   BYTE PTR ds:[ebx]
  4031d8:	cld    
  4031d9:	ret    
  4031da:	outs   dx,BYTE PTR ds:[esi]
  4031db:	outs   dx,BYTE PTR ds:[esi]
  4031dc:	add    DWORD PTR [edx-0x22ac5403],0x6f
  4031e3:	aad    0xc8
  4031e5:	lods   al,BYTE PTR ds:[esi]
  4031e6:	inc    ebp
  4031e7:	test   eax,0x3356a079
  4031ec:	mov    al,ds:0x2462c38d
  4031f1:	add    BYTE PTR [edi-0x4c],al
  4031f4:	or     eax,0x22abb77e
  4031f9:	mov    eax,0x2e03c5a
  4031fe:	fiadd  WORD PTR [ebx+0x71]
  403201:	pop    ss
  403202:	push   ds
  403203:	sbb    eax,0x264f45b6
  403208:	cmp    BYTE PTR [ebx+ebx*8-0x7e],cl
  40320c:	fmulp  st(6),st
  40320e:	mov    es,WORD PTR [eax+0x2cf58580]
  403214:	mov    bl,0xac
  403216:	and    eax,0x8766aff3
  40321b:	mov    ds:0xdddf5bdd,al
  403220:	das    
  403221:	add    ah,dl
  403223:	fcomp  QWORD PTR [edx]
  403225:	push   esi
  403226:	jmp    0x2de9:0xf5b0651a
  40322d:	mov    ds:0x1880c26d,eax
  403232:	sub    edi,0xe1f61705
  403238:	sub    ah,0xc0
  40323b:	xor    dl,BYTE PTR [esi]
  40323d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323e:	sub    esi,0x26bc3d48
  403244:	cwde   
  403245:	inc    ebx
  403246:	jb     0x4031ee
  403248:	leave  
  403249:	shl    al,0x5b
  40324c:	mov    ecx,0xafd69621
  403251:	add    DWORD PTR [ebx+0x7e16ee4e],eax
  403257:	stos   BYTE PTR es:[edi],al
  403258:	addr16 call 0x41a6e3b6
  40325e:	enter  0x85f8,0xb9
  403262:	sub    ebx,DWORD PTR [ebp+0x8b4f878]
  403268:	rep lods eax,DWORD PTR ds:[esi]
  40326a:	aas    
  40326b:	ins    BYTE PTR es:[edi],dx
  40326c:	xor    BYTE PTR [ebp+0x5c8996cc],ch
  403272:	daa    
  403273:	add    BYTE PTR ds:0x9f017910,ah
  403279:	sar    BYTE PTR [edx],0x51
  40327c:	inc    eax
  40327d:	leave  
  40327e:	xchg   esi,eax
  40327f:	bswap  edi
  403281:	in     eax,0xa1
  403283:	cmp    edx,DWORD PTR [ebx]
  403285:	sahf   
  403286:	jo     0x40329e
  403288:	cmc    
  403289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328a:	xchg   esp,eax
  40328b:	pusha  
  40328c:	outs   dx,DWORD PTR ds:[esi]
  40328d:	xor    eax,0x1234bf3a
  403292:	xchg   ecx,eax
  403293:	or     bl,BYTE PTR [ecx+0x5456f13a]
  403299:	dec    ecx
  40329a:	imul   DWORD PTR [eax+0x689d2ea]
  4032a0:	sbb    DWORD PTR [ebx+ecx*2],esp
  4032a3:	aaa    
  4032a4:	xlat   BYTE PTR ds:[ebx]
  4032a5:	popf   
  4032a6:	pop    ds
  4032a7:	mov    eax,0x251ac8c6
  4032ac:	scas   al,BYTE PTR es:[edi]
  4032ad:	repnz sbb eax,0xfaa0e92e
  4032b3:	jb     0x4032c3
  4032b5:	xchg   edx,eax
  4032b6:	add    DWORD PTR [esi+0x7f],0xe553f4ea
  4032bd:	aad    0x51
  4032bf:	aaa    
  4032c0:	mov    ebp,0x7590ab8
  4032c5:	cmovle ebx,DWORD PTR [esi]
  4032c8:	test   ebx,edi
  4032ca:	repz push edi
  4032cc:	push   ds
  4032cd:	push   0x91d0bc59
  4032d2:	xchg   edx,eax
  4032d3:	lods   al,BYTE PTR ds:[esi]
  4032d4:	push   ebp
  4032d5:	or     BYTE PTR [ebp-0x7d],al
  4032d8:	mov    esp,0x6120b64c
  4032dd:	add    al,0x9
  4032df:	dec    esi
  4032e0:	jge    0x403353
  4032e2:	jno    0x403332
  4032e4:	clc    
  4032e5:	push   cs
  4032e6:	sub    cl,al
  4032e8:	sbb    dl,BYTE PTR [esi+0x1268761]
  4032ee:	jne    0x4032a5
  4032f0:	ffree  st(6)
  4032f2:	das    
  4032f3:	leave  
  4032f4:	add    esp,eax
  4032f6:	sbb    eax,0xbeb3f22d
  4032fb:	cli    
  4032fc:	sbb    bl,BYTE PTR [esi+0x52ed5566]
  403302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403303:	push   ebx
  403304:	jg     0x403375
  403306:	bound  ebx,QWORD PTR [ebx]
  403308:	add    dl,dl
  40330a:	cli    
  40330b:	cmp    bh,bh
  40330d:	push   ss
  40330e:	pop    ebx
  40330f:	ins    DWORD PTR es:[edi],dx
  403310:	(bad)  
  403311:	mov    bl,0x6f
  403313:	dec    ecx
  403314:	jecxz  0x40333c
  403316:	push   cs
  403317:	inc    ebx
  403318:	stos   BYTE PTR es:[edi],al
  403319:	inc    eax
  40331a:	outs   dx,DWORD PTR ds:[esi]
  40331b:	push   eax
  40331c:	mov    gs,WORD PTR [edx-0x194142cd]
  403322:	stos   BYTE PTR es:[edi],al
  403323:	sti    
  403324:	in     eax,0x76
  403326:	push   0x343c7bee
  40332b:	idiv   ah
  40332d:	stos   BYTE PTR es:[edi],al
  40332e:	test   eax,0x20c8907d
  403333:	inc    esp
  403334:	push   cs
  403335:	push   0x2c2a8d2d
  40333a:	inc    esp
  40333b:	loop   0x4032f5
  40333d:	retf   
  40333e:	xor    eax,0x5adb57bd
  403343:	nop
  403344:	bound  esi,QWORD PTR [edx-0x6c8bcc99]
  40334a:	cmp    al,0x9a
  40334c:	aad    0x61
  40334e:	pop    esp
  40334f:	jbe    0x40337e
  403351:	adc    ch,dh
  403353:	push   edx
  403354:	add    eax,0xcbffa17e
  403359:	fs cmc 
  40335b:	ficom  WORD PTR [eax+0x6dd0189b]
  403361:	inc    ebp
  403362:	jnp    0x4033ad
  403364:	retf   
  403365:	rcl    bh,cl
  403367:	jbe    0x403394
  403369:	jmp    0x29fc:0x6b784210
  403370:	pop    ds
  403371:	add    DWORD PTR [ecx],ecx
  403373:	pop    ebp
  403374:	neg    edx
  403376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403377:	mov    edx,0x1e857c47
  40337c:	jp     0x403303
  40337e:	imul   eax,DWORD PTR fs:[ebx+ecx*8],0xf
  403383:	cmc    
  403384:	inc    ebx
  403385:	sahf   
  403386:	sbb    edx,esp
  403388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403389:	pop    eax
  40338a:	jp     0x40334a
  40338c:	jae    0x403364
  40338e:	sbb    al,0xa7
  403390:	gs data16 clc 
  403393:	ss xchg edi,eax
  403395:	mov    bh,0x36
  403397:	xor    BYTE PTR [ebx-0x6d8676b0],bl
  40339d:	mov    ecx,0xe1c1153b
  4033a2:	popa   
  4033a3:	mov    al,0xc4
  4033a5:	jo     0x4033ff
  4033a7:	lea    edi,[edx+eiz*4]
  4033aa:	jne    0x4033ed
  4033ac:	push   esp
  4033ad:	push   eax
  4033ae:	xchg   edi,eax
  4033af:	xor    DWORD PTR [ebx+0xffe8bda],edi
  4033b5:	sti    
  4033b6:	(bad)  
  4033b7:	(bad)  
  4033b8:	fcom   DWORD PTR [ebp-0x67cc0485]
  4033be:	test   al,0xb6
  4033c0:	rol    DWORD PTR [edx-0x147097a9],0x18
  4033c7:	jb     0x4033c1
  4033c9:	mov    eax,ds:0xf998299c
  4033ce:	es pop ebx
  4033d0:	push   edi
  4033d1:	or     eax,0x906d3a26
  4033d6:	push   0x5bf28356
  4033db:	mov    al,0x6e
  4033dd:	cmp    ebp,eax
  4033df:	xor    edi,ebp
  4033e1:	iret   
  4033e2:	xor    DWORD PTR [esp+edx*8],edx
  4033e5:	push   edx
  4033e6:	aaa    
  4033e7:	and    BYTE PTR [edi+0x43ac6a2f],0x9a
  4033ee:	inc    esi
  4033ef:	or     dh,0xf8
  4033f2:	inc    ebx
  4033f3:	int3   
  4033f4:	hlt    
  4033f5:	lahf   
  4033f6:	cld    
  4033f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033f8:	(bad)  
  4033f9:	dec    esp
  4033fa:	mov    al,0x4a
  4033fc:	je     0x40338e
  4033fe:	pop    ds
  4033ff:	or     bl,al
  403401:	push   cs
  403402:	jb     0x4033b1
  403404:	fmul   QWORD PTR [ebp+0x1]
  403407:	stos   DWORD PTR es:[edi],eax
  403408:	pop    esp
  403409:	fcomp  QWORD PTR [edx-0x5e8b8f54]
  40340f:	xor    al,0x51
  403411:	je     0x4033f4
  403413:	inc    esi
  403414:	push   esi
  403415:	xor    al,BYTE PTR ss:[edx+0x6f]
  403419:	test   DWORD PTR [esp+ebx*1],0x47feed7e
  403420:	aam    0x34
  403422:	xchg   ecx,eax
  403423:	pop    ecx
  403424:	js     0x403484
  403426:	and    dh,BYTE PTR [ebx]
  403428:	sub    DWORD PTR [ecx],esi
  40342a:	xor    al,0x7b
  40342c:	push   edx
  40342d:	ret    
  40342e:	std    
  40342f:	repnz push esi
  403431:	fcomp  QWORD PTR [edi]
  403433:	retf   0x30ea
  403436:	jge    0x403442
  403438:	pop    DWORD PTR [edi]
  40343a:	dec    ebx
  40343b:	rol    cl,0xdd
  40343e:	ret    
  40343f:	outs   dx,DWORD PTR ds:[esi]
  403440:	dec    edx
  403441:	xor    ah,cl
  403443:	sbb    ebx,DWORD PTR [eax-0x1030c226]
  403449:	xor    BYTE PTR [ecx+esi*1],cl
  40344c:	jne    0x40347b
  40344e:	jl     0x403439
  403450:	pop    ecx
  403451:	pop    ecx
  403452:	dec    esp
  403453:	shl    BYTE PTR [edx+0x757627bd],0x82
  40345a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40345b:	cmp    ch,BYTE PTR [ebx]
  40345d:	out    dx,eax
  40345e:	(bad)
  403461:	fsubr  st(1),st
  403463:	ins    BYTE PTR es:[edi],dx
  403464:	arpl   bp,bx
  403466:	add    DWORD PTR [ecx-0x7da84cc5],edx
  40346c:	sbb    ah,BYTE PTR [ebp-0x22]
  40346f:	pop    ebx
  403470:	dec    edi
  403471:	push   esp
  403472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403473:	dec    ebx
  403474:	inc    esi
  403475:	loopne 0x403470
  403477:	ins    DWORD PTR es:[edi],dx
  403478:	add    cl,BYTE PTR [edx+0xf]
  40347b:	(bad)  
  40347c:	retf   
  40347d:	out    0x51,al
  40347f:	ss inc ecx
  403481:	mov    al,0x9b
  403483:	pop    esp
  403484:	test   eax,0x7d8471fb
  403489:	xchg   ebx,eax
  40348a:	popf   
  40348b:	jl     0x403503
  40348d:	pop    edi
  40348e:	xlat   BYTE PTR ds:[ebx]
  40348f:	sbb    eax,0x9b3fd77e
  403494:	jo     0x4034fa
  403496:	xor    BYTE PTR [edi-0x2c],bh
  403499:	pop    edx
  40349a:	mov    bl,0xc1
  40349c:	sub    ecx,DWORD PTR [edx]
  40349e:	xor    cl,BYTE PTR [ecx+0x64]
  4034a1:	rcl    DWORD PTR [ebx],0x5e
  4034a4:	pop    edi
  4034a5:	mov    dh,0x39
  4034a7:	ret    0x4978
  4034aa:	inc    ebp
  4034ab:	imul   ecx,DWORD PTR es:[edx+0x5c],0xffffffe7
  4034b0:	jns    0x4034ba
  4034b2:	mov    dh,0x11
  4034b4:	cs (bad) 
  4034b6:	jbe    0x40345a
  4034b8:	std    
  4034b9:	stos   BYTE PTR es:[edi],al
  4034ba:	inc    edi
  4034bb:	inc    edi
  4034bc:	das    
  4034bd:	dec    esp
  4034be:	pop    eax
  4034bf:	into   
  4034c0:	mov    ah,BYTE PTR [esp+eax*1+0x37517db4]
  4034c7:	adc    BYTE PTR [eax],bl
  4034c9:	sub    esi,ecx
  4034cb:	pop    ecx
  4034cc:	push   eax
  4034cd:	fdiv   st,st(4)
  4034cf:	and    DWORD PTR [ebp-0x11e5f0c4],0x6b
  4034d6:	mov    ch,0x11
  4034d8:	fcmovbe st,st(5)
  4034da:	jmp    0xe3846d14
  4034df:	aam    0xfa
  4034e1:	les    esi,FWORD PTR [ecx-0x73]
  4034e4:	sbb    cl,dl
  4034e6:	mov    cl,0x23
  4034e8:	in     al,dx
  4034e9:	mov    ds:0x8114fbc2,al
  4034ee:	fsubr  st,st(5)
  4034f0:	push   esp
  4034f1:	sub    eax,0xeb8240c0
  4034f6:	fdivr  DWORD PTR [eax]
  4034f8:	into   
  4034f9:	mov    bh,0x37
  4034fb:	sub    al,0x28
  4034fd:	mov    edx,0x1da7ae97
  403502:	out    0x1b,eax
  403504:	not    BYTE PTR ds:0xbf7c5b82
  40350a:	bound  esi,QWORD PTR [edi]
  40350c:	in     al,dx
  40350d:	jae    0x403542
  40350f:	shl    dl,0xa
  403512:	in     eax,dx
  403513:	mov    edi,0xf34c562c
  403518:	pop    es
  403519:	int    0x72
  40351b:	leave  
  40351c:	int    0x38
  40351e:	stos   DWORD PTR es:[edi],eax
  40351f:	retf   
  403520:	out    dx,al
  403521:	ja     0x40354a
  403523:	inc    esi
  403524:	in     eax,dx
  403525:	jge    0x4034f3
  403527:	into   
  403528:	out    dx,al
  403529:	mov    ecx,0xb510acd8
  40352e:	fwait
  40352f:	push   cs
  403530:	nop
  403531:	pop    es
  403532:	inc    ebp
  403533:	(bad)  
  403534:	jecxz  0x4035a0
  403536:	mov    ch,0xbf
  403538:	sbb    eax,0x1d61cbf3
  40353d:	adc    ah,BYTE PTR [edx+0x2b8db5f6]
  403543:	ins    DWORD PTR es:[edi],dx
  403544:	jmp    DWORD PTR [edi+0x2f]
  403547:	adc    ch,ch
  403549:	mov    edx,0xbee1a283
  40354e:	loope  0x4034e9
  403550:	mov    ch,0x29
  403552:	jb     0x40355b
  403554:	(bad)  
  403555:	repz mov ch,0xde
  403558:	mov    dh,0xb0
  40355a:	add    DWORD PTR [edx],0x80ec326d
  403560:	sbb    BYTE PTR [edi-0x13],dl
  403563:	outs   dx,BYTE PTR ds:[esi]
  403564:	cmp    eax,ebx
  403566:	jmp    0x8ec68618
  40356b:	cs add eax,0x5afb9ba4
  403571:	nop
  403572:	jmp    0xcc13:0xd9507284
  403579:	push   cs
  40357a:	je     0x40355d
  40357c:	xchg   ebp,eax
  40357d:	pushf  
  40357e:	bound  ebx,QWORD PTR [ecx]
  403580:	pushf  
  403581:	into   
  403582:	aam    0x1e
  403584:	aam    0x81
  403586:	daa    
  403587:	adc    eax,0x6e73306c
  40358c:	mov    ds:0x6f56a9ef,eax
  403591:	ret    
  403592:	lea    ebp,[eax-0x32863695]
  403598:	dec    edx
  403599:	mov    ah,0x82
  40359b:	push   es
  40359c:	cmp    BYTE PTR [edx],cl
  40359e:	xchg   ecx,eax
  40359f:	pop    ss
  4035a0:	retf   
  4035a1:	cmp    esp,DWORD PTR [edi-0x7c]
  4035a4:	lock stc 
  4035a6:	mov    ah,0x4d
  4035a8:	and    edx,DWORD PTR [ebx+esi*1]
  4035ab:	loope  0x403569
  4035ad:	mov    ebp,0x41533a2f
  4035b2:	mov    al,ds:0x3d23fd5
  4035b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035b8:	or     eax,0x613fbde
  4035bd:	push   ebx
  4035be:	stc    
  4035bf:	jo     0x4035bb
  4035c1:	or     eax,DWORD PTR [eax]
  4035c3:	mov    al,0x35
  4035c5:	push   ebp
  4035c6:	ss stos BYTE PTR es:[edi],al
  4035c8:	and    BYTE PTR [edx],bl
  4035ca:	push   es
  4035cb:	jecxz  0x4035f8
  4035cd:	cmp    dh,ch
  4035cf:	add    ebx,DWORD PTR [ebx-0x57aa8a3e]
  4035d5:	push   0xfffffff7
  4035d7:	pop    ebx
  4035d8:	je     0x40364f
  4035da:	xor    DWORD PTR [ebp+0x33df17a9],edx
  4035e0:	xchg   esp,eax
  4035e1:	ds jno 0x403610
  4035e4:	or     BYTE PTR [edx+0x6a],dh
  4035e7:	push   es
  4035e8:	push   ebp
  4035e9:	test   DWORD PTR [eax],eax
  4035eb:	fstp   TBYTE PTR [eax]
  4035ed:	jl     0x4035c4
  4035ef:	or     dh,ch
  4035f1:	sbb    ah,ah
  4035f3:	jmp    0xf834:0x1189b06c
  4035fa:	es mov al,0xbd
  4035fd:	mov    esi,0x203227e3
  403602:	repnz repz add al,BYTE PTR cs:[ebx+0x6b]
  403608:	sti    
  403609:	mov    ebx,esp
  40360b:	call   0x3265:0x35fab094
  403612:	cmp    DWORD PTR [esi-0x7d],edx
  403615:	dec    ebp
  403616:	dec    esp
  403617:	lods   al,BYTE PTR ds:[esi]
  403618:	cmp    al,0xa0
  40361a:	jecxz  0x40366a
  40361c:	mov    ds:0x66ca643,eax
  403621:	sub    DWORD PTR [edi-0xa],ebp
  403624:	add    al,0x2a
  403626:	lods   eax,DWORD PTR ds:[esi]
  403627:	inc    ebx
  403628:	inc    ecx
  403629:	mov    dh,0xa1
  40362b:	outs   dx,BYTE PTR ds:[esi]
  40362c:	mov    dh,0x86
  40362e:	lahf   
  40362f:	cmp    eax,0x55356e73
  403634:	popf   
  403635:	outs   dx,BYTE PTR ds:[esi]
  403636:	pop    eax
  403637:	xor    ah,BYTE PTR [edi-0x5e42b2b7]
  40363d:	jbe    0x4036a4
  40363f:	xor    edi,0x5001949e
  403645:	push   ebp
  403646:	sub    al,0xb6
  403648:	sbb    ebp,DWORD PTR [ecx]
  40364a:	ins    BYTE PTR es:[edi],dx
  40364b:	mov    esi,0x9261dbc7
  403650:	or     bh,BYTE PTR [eax+eiz*2]
  403653:	mov    ebx,0xb9d36708
  403658:	add    eax,0xadfbb11a
  40365d:	and    BYTE PTR [edx+0x65],al
  403660:	and    ch,BYTE PTR [edx]
  403662:	aaa    
  403663:	inc    ebx
  403664:	mov    bl,0x3
  403666:	cli    
  403667:	or     edx,ecx
  403669:	mov    cl,0x12
  40366b:	push   cs
  40366c:	jmp    0x782f:0x5b2e164a
  403673:	das    
  403674:	adc    ecx,esp
  403676:	pop    ebx
  403677:	cs cmp al,0xcc
  40367a:	xor    BYTE PTR [edi*1+0x1304df44],dh
  403681:	scas   al,BYTE PTR es:[edi]
  403682:	mov    ds:0x1f8b0bf4,eax
  403687:	std    
  403688:	jo     0x40362f
  40368a:	mov    ebp,DWORD PTR [ecx]
  40368c:	outs   dx,BYTE PTR ds:[esi]
  40368d:	iret   
  40368e:	imul   eax,DWORD PTR [ebp-0x118aa6cb],0x51
  403695:	pop    esp
  403696:	dec    ecx
  403697:	cmp    ebp,eax
  403699:	xor    DWORD PTR [ecx-0x7d],edx
  40369c:	push   0x25
  40369e:	adc    eax,0x7d0dfaf5
  4036a3:	bound  esi,QWORD PTR [eax]
  4036a5:	xor    eax,0xf26913e5
  4036aa:	out    dx,al
  4036ab:	loop   0x403729
  4036ad:	aam    0xd4
  4036af:	ds rcr ch,0xc7
  4036b3:	xor    eax,0xeaf6b3a5
  4036b8:	push   edx
  4036b9:	adc    al,0x76
  4036bb:	pop    ds
  4036bc:	mov    ds:0x146b483,eax
  4036c1:	mov    edx,0xf367c55d
  4036c6:	lods   eax,DWORD PTR ds:[esi]
  4036c7:	sub    DWORD PTR [esi-0x3bb216bc],edi
  4036cd:	or     eax,0x4c2f44a0
  4036d2:	test   eax,0x548a4a91
  4036d7:	inc    eax
  4036d8:	push   0x49
  4036da:	push   ebx
  4036db:	(bad)  
  4036dc:	sbb    al,0x9d
  4036de:	jp     0x403662
  4036e0:	fisttp QWORD PTR [eax-0x3f]
  4036e3:	fucomip st,st(3)
  4036e5:	xchg   DWORD PTR [eax+0x49],ebp
  4036e8:	lock nop
  4036ea:	adc    al,BYTE PTR [ebp-0x4be6bf40]
  4036f0:	out    dx,eax
  4036f1:	das    
  4036f2:	push   ds
  4036f3:	add    DWORD PTR [eax],0xcea06b53
  4036f9:	outs   dx,DWORD PTR cs:[esi]
  4036fb:	mov    eax,ds:0xcc1365c4
  403700:	mov    dh,BYTE PTR ds:0xfa80adf3
  403706:	in     eax,0xf2
  403708:	and    al,0x32
  40370a:	inc    ebp
  40370b:	aad    0x52
  40370d:	mov    esp,0xe624e543
  403712:	mov    esi,0xd0c96f77
  403717:	mov    dl,0xf4
  403719:	les    eax,FWORD PTR [edi+0x5e0f1799]
  40371f:	mov    ecx,0x49912a2a
  403724:	hlt    
  403725:	jecxz  0x403791
  403727:	ret    0xdd9d
  40372a:	mov    edi,0x93ba7ca1
  40372f:	jmp    0x9ef8:0x1e8eeb17
  403736:	iret   
  403737:	mov    esp,0xc5660486
  40373c:	sub    DWORD PTR [ebp+ecx*4-0x72],esp
  403740:	push   0x5a
  403742:	pushw  ds
  403744:	and    al,0xa9
  403746:	hlt    
  403747:	test   DWORD PTR [eax],esp
  403749:	in     al,0xba
  40374b:	shr    BYTE PTR gs:[ecx+0x19],cl
  40374f:	in     al,0x1f
  403751:	int3   
  403752:	lahf   
  403753:	addr16 jo 0x40377e
  403756:	push   es
  403757:	or     al,0x7a
  403759:	icebp  
  40375a:	mov    bh,0x36
  40375c:	je     0x4037b0
  40375e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40375f:	inc    edi
  403760:	xor    BYTE PTR [ebp+0x48e8b7a],bh
  403766:	ins    BYTE PTR es:[edi],dx
  403767:	or     esp,edi
  403769:	xchg   edx,eax
  40376a:	icebp  
  40376b:	dec    eax
  40376c:	push   ds
  40376d:	daa    
  40376e:	add    BYTE PTR [ecx+0x1c],0x2a
  403772:	fisttp QWORD PTR [esp+esi*8-0x3ca934a]
  403779:	shr    ebx,1
  40377b:	gs cli 
  40377d:	adc    al,0x86
  40377f:	jmp    FWORD PTR [ecx-0x1f11bf25]
  403785:	pop    es
  403786:	pop    ebp
  403787:	ins    BYTE PTR es:[edi],dx
  403788:	fwait
  403789:	mov    dh,0x3b
  40378b:	push   es
  40378c:	pop    ecx
  40378d:	sub    eax,0xa3cdbc3a
  403792:	dec    esp
  403793:	add    ecx,0x43
  403796:	inc    edx
  403797:	sbb    eax,0x80b4b69d
  40379c:	inc    esp
  40379d:	imul   edi,DWORD PTR [esi],0x6f6b1bda
  4037a3:	icebp  
  4037a4:	jae    0x403777
  4037a6:	sbb    DWORD PTR [esi],ecx
  4037a8:	cmp    al,0x39
  4037aa:	pop    esp
  4037ab:	dec    ecx
  4037ac:	and    cl,0x20
  4037af:	pop    esp
  4037b0:	push   ecx
  4037b1:	and    cl,bl
  4037b3:	cli    
  4037b4:	lea    esp,[esi+0x48ad3cc9]
  4037ba:	dec    ebp
  4037bb:	jp     0x4037d2
  4037bd:	fbld   TBYTE PTR [edi+0xc]
  4037c0:	adc    al,0x9e
  4037c2:	in     al,0x95
  4037c4:	dec    edi
  4037c5:	js     0x403757
  4037c7:	mov    edi,0x6a4cb2c1
  4037cc:	xor    BYTE PTR [esi-0x37],dh
  4037cf:	jl     0x4037cb
  4037d1:	shl    BYTE PTR [eax-0x155902d],0xd0
  4037d8:	and    DWORD PTR [ecx],esi
  4037da:	adc    al,0x91
  4037dc:	and    al,0xbd
  4037de:	xor    al,0xdc
  4037e0:	ret    
  4037e1:	push   ds
  4037e2:	sbb    DWORD PTR [ebx],ebx
  4037e4:	(bad)  
  4037e7:	fmul   st,st(4)
  4037e9:	popa   
  4037ea:	jne    0x403804
  4037ec:	mov    cl,0x5b
  4037ee:	push   ebp
  4037ef:	ja     0x40377a
  4037f1:	xchg   edx,eax
  4037f2:	or     eax,0x842fc561
  4037f7:	ror    BYTE PTR [edx-0x7a],cl
  4037fa:	shr    ebp,0xa1
  4037fd:	call   0x947f:0x4a8ddd44
  403804:	mov    esi,DWORD PTR [esi+0x4fb6b150]
  40380a:	shl    bl,1
  40380c:	test   edi,esi
  40380e:	xchg   ecx,eax
  40380f:	xchg   ebp,eax
  403810:	mov    ebx,0xae4ffea7
  403815:	pop    ss
  403816:	add    al,0xba
  403818:	(bad)  
  40381a:	rol    ch,1
  40381c:	and    eax,0xf1de4d1f
  403821:	inc    esp
  403822:	add    al,0x8b
  403824:	xchg   esp,eax
  403825:	push   esi
  403826:	pop    ebx
  403827:	outs   dx,BYTE PTR ds:[esi]
  403828:	out    dx,eax
  403829:	jg     0x40387f
  40382b:	pushf  
  40382c:	jnp    0x403877
  40382e:	inc    ebp
  40382f:	xchg   ebx,eax
  403830:	or     esp,ebx
  403832:	jb     0x403824
  403834:	repnz sbb esi,DWORD PTR [ebx-0x79]
  403838:	ret    0x6922
  40383b:	inc    esp
  40383c:	test   al,0x2f
  40383e:	dec    eax
  40383f:	adc    BYTE PTR [eax+0x5b613aa1],dh
  403845:	pop    ss
  403846:	(bad)  
  403847:	test   DWORD PTR [eax+0x1a],edx
  40384a:	jge    0x403812
  40384c:	sub    DWORD PTR [ebp+0x4323d66],ecx
  403852:	retf   
  403853:	pop    eax
  403854:	int    0x3a
  403856:	mov    dl,0x3c
  403858:	push   edx
  403859:	shr    BYTE PTR ds:0x30a3c058,0x7c
  403860:	sub    eax,0x5c125513
  403865:	test   DWORD PTR [edx],esp
  403867:	outs   dx,DWORD PTR ds:[esi]
  403868:	xor    BYTE PTR [ebx],al
  40386a:	mov    eax,ds:0x786ba3b1
  40386f:	cmp    edx,DWORD PTR [eax]
  403871:	sub    dl,BYTE PTR ds:0x4ed7bbf
  403877:	push   esi
  403878:	push   0xffffff82
  40387a:	fcmovbe st,st(1)
  40387c:	push   ecx
  40387d:	mov    edi,0xc56b340f
  403882:	test   BYTE PTR [edi-0x788562f3],dh
  403888:	mul    BYTE PTR [edi+0x4b18543f]
  40388e:	bound  ebx,QWORD PTR [ebp-0xbefb572]
  403894:	sub    BYTE PTR [edx-0x187d86f0],ch
  40389a:	cmc    
  40389b:	sub    eax,0x7a5d4163
  4038a0:	ret    
  4038a1:	(bad)  
  4038a2:	or     edi,DWORD PTR fs:[esp+edi*4+0x37763ab1]
  4038aa:	sub    cl,BYTE PTR ds:[eax+0x37]
  4038ae:	pop    eax
  4038af:	mov    bh,0x4
  4038b1:	inc    edx
  4038b2:	cdq    
  4038b3:	pop    es
  4038b4:	sub    ecx,DWORD PTR [edx]
  4038b6:	mov    ebp,0x9b838123
  4038bb:	inc    esi
  4038bc:	ins    DWORD PTR es:[edi],dx
  4038bd:	sub    al,0x81
  4038bf:	ins    BYTE PTR es:[edi],dx
  4038c0:	into   
  4038c1:	add    al,0x64
  4038c3:	jge    0x403846
  4038c5:	mov    esi,0xc8429c52
  4038ca:	jne    0x4038c2
  4038cc:	scas   eax,DWORD PTR es:[edi]
  4038cd:	inc    ebx
  4038ce:	inc    eax
  4038cf:	loope  0x403885
  4038d1:	ret    
  4038d2:	dec    ecx
  4038d3:	test   al,0x44
  4038d5:	fsub   QWORD PTR [eax*8-0x49a513b]
  4038dc:	inc    ecx
  4038dd:	jae    0x40395c
  4038df:	hlt    
  4038e0:	xchg   DWORD PTR [ecx-0x6a2da6ba],edi
  4038e6:	clc    
  4038e7:	scas   eax,DWORD PTR es:[edi]
  4038e8:	mov    bl,bl
  4038ea:	stos   DWORD PTR es:[edi],eax
  4038eb:	add    dl,BYTE PTR [ecx-0x2b9930e1]
  4038f1:	push   ss
  4038f2:	jmp    0x923e86a8
  4038f7:	test   eax,0x2e5fa015
  4038fc:	jbe    0x40390b
  4038fe:	iret   
  4038ff:	push   ds
  403900:	dec    ebp
  403901:	loope  0x403909
  403903:	xor    al,0xab
  403905:	xor    edx,eax
  403907:	or     al,0x49
  403909:	imul   edi,DWORD PTR [esi+0x640736b1],0xffffffe0
  403910:	pop    ecx
  403911:	jecxz  0x403919
  403913:	pop    esp
  403914:	mov    DWORD PTR [edx-0x53],esp
  403917:	pushf  
  403918:	push   esi
  403919:	lods   eax,DWORD PTR ds:[esi]
  40391a:	xor    BYTE PTR [esi],0xbb
  40391d:	jo     0x4038c9
  40391f:	gs ss test al,0xe
  403923:	fst    QWORD PTR cs:[ebx+ebx*8+0x74108ec0]
  40392b:	into   
  40392c:	sub    DWORD PTR [esi+0x66266c69],0x25
  403933:	loope  0x4038cb
  403935:	inc    edx
  403936:	push   0x566707e6
  40393b:	jae    0x40399d
  40393d:	out    0x68,eax
  40393f:	or     ch,0x31
  403942:	dec    ecx
  403943:	jmp    0x4039b2
  403945:	push   edx
  403946:	inc    ebx
  403947:	xor    BYTE PTR [eax],cl
  403949:	shr    BYTE PTR [edx-0x20],1
  40394c:	push   0xfffffff9
  40394e:	pop    esi
  40394f:	pop    eax
  403951:	addr16 (bad) 
  403953:	jns    0x40390e
  403955:	ins    BYTE PTR es:[edi],dx
  403956:	imul   eax,DWORD PTR [edx+eiz*8-0x3d],0x60
  40395b:	sbb    al,0x8d
  40395d:	inc    edx
  40395e:	lahf   
  40395f:	sbb    DWORD PTR [ecx+0x6e],0xfffffffd
  403963:	fisubr WORD PTR [ecx+0x44]
  403966:	fsubr  QWORD PTR [edi-0x2ddd62f]
  40396c:	or     ah,0x97
  40396f:	(bad)  
  403970:	pop    esp
  403971:	fcmove st,st(0)
  403973:	fist   DWORD PTR [eax-0x71]
  403976:	pop    edx
  403977:	xlat   BYTE PTR ds:[ebx]
  403978:	clc    
  403979:	sub    DWORD PTR [ebp+0x4a00d6b4],esi
  40397f:	clc    
  403980:	pushf  
  403981:	sub    ecx,DWORD PTR [esi+0x71]
  403984:	cdq    
  403985:	inc    esp
  403986:	cmp    DWORD PTR [ebp+0x3b],ebx
  403989:	xchg   DWORD PTR [esi-0x20a05663],ebx
  40398f:	inc    esi
  403990:	push   esi
  403991:	jmp    0xd651:0x3cb545e6
  403998:	pop    ss
  403999:	cli    
  40399a:	add    al,0x41
  40399c:	jnp    0x403995
  40399e:	mov    ds:0x64e3ca37,al
  4039a3:	xlat   BYTE PTR ds:[ebx]
  4039a4:	lahf   
  4039a5:	pop    edi
  4039a6:	sbb    edi,DWORD PTR [esi+ebp*8]
  4039a9:	rcr    DWORD PTR [edi-0x2e],cl
  4039ac:	dec    edi
  4039ad:	adc    esp,DWORD PTR [esi]
  4039af:	mov    ds:0xafabb86,al
  4039b4:	mov    dl,0xae
  4039b6:	or     DWORD PTR [ecx-0x4719eb82],edx
  4039bc:	mov    esi,0x1b647dcb
  4039c1:	xor    bh,BYTE PTR ds:0x625f68d5
  4039c7:	pusha  
  4039c8:	stc    
  4039c9:	(bad)  
  4039cb:	or     edi,0xa36b0317
  4039d1:	mov    dl,0x3b
  4039d3:	in     al,0x50
  4039d5:	or     BYTE PTR [ebx],al
  4039d7:	cmc    
  4039d8:	hlt    
  4039d9:	mov    dh,0x73
  4039db:	in     eax,0xdb
  4039dd:	or     esp,DWORD PTR [ecx]
  4039df:	xchg   ebx,eax
  4039e0:	mov    cs,WORD PTR [edi-0x6b5f473d]
  4039e6:	popf   
  4039e7:	dec    edx
  4039e8:	push   edx
  4039e9:	outs   dx,DWORD PTR ds:[esi]
  4039ea:	pop    ds
  4039eb:	jecxz  0x403996
  4039ed:	es cwde 
  4039ef:	in     al,dx
  4039f0:	push   edx
  4039f1:	sub    al,0x3e
  4039f3:	ret    0x92
  4039f6:	dec    edi
  4039f7:	mov    ah,0x34
  4039f9:	mov    dh,0xd8
  4039fb:	xchg   ebp,eax
  4039fc:	mov    al,ds:0x1a345543
  403a01:	push   ecx
  403a02:	push   ebx
  403a03:	sub    ebp,edx
  403a05:	inc    esi
  403a06:	mov    ds:0xe903f457,eax
  403a0b:	ds fcmovne st,st(7)
  403a0e:	cmp    al,0x4b
  403a10:	pop    ebx
  403a11:	dec    edi
  403a12:	mov    ds:0x49572820,eax
  403a17:	pop    edi
  403a18:	ins    BYTE PTR es:[edi],dx
  403a19:	adc    DWORD PTR [ebx+0x12c555e8],esi
  403a1f:	mov    esp,0x10d9b3a3
  403a24:	js     0x403a4b
  403a26:	pop    esp
  403a27:	dec    edi
  403a28:	shl    BYTE PTR [ebx-0x4d5e1fa4],0xbc
  403a2f:	lsl    ebx,WORD PTR [edi]
  403a32:	call   0xdc2d35ba
  403a37:	mov    bl,0xb2
  403a39:	loope  0x403a68
  403a3b:	test   eax,0xf0ed5da3
  403a40:	ret    0x7842
  403a43:	mov    ch,0x9e
  403a45:	xor    ecx,ecx
  403a47:	cmp    al,0x92
  403a49:	(bad)  
  403a4a:	je     0x4039e8
  403a4c:	in     eax,dx
  403a4d:	or     DWORD PTR [ebp+0xc2de25a],edx
  403a53:	mov    ds:0x97d9db34,eax
  403a58:	test   eax,0xfd51500b
  403a5d:	dec    edi
  403a5e:	jae    0x403aac
  403a60:	(bad)  
  403a61:	add    dl,cl
  403a63:	pop    ebx
  403a64:	xchg   edi,eax
  403a65:	jo     0x403a3b
  403a67:	pop    esi
  403a68:	cmp    al,0x6b
  403a6a:	push   edx
  403a6b:	inc    esi
  403a6c:	sub    BYTE PTR [ebp-0x6e],0x64
  403a70:	cmp    al,0xff
  403a72:	push   eax
  403a73:	jne    0x403aa5
  403a75:	xchg   ecx,eax
  403a76:	mov    edx,0x2c1171e7
  403a7b:	pop    eax
  403a7c:	cwde   
  403a7d:	xchg   edi,eax
  403a7e:	inc    ebx
  403a7f:	pop    ebx
  403a80:	bound  esp,QWORD PTR [ebp+0x4996b641]
  403a86:	pushf  
  403a87:	xchg   edi,eax
  403a88:	mov    bh,0x4f
  403a8a:	mov    bl,0x67
  403a8c:	ins    DWORD PTR es:[edi],dx
  403a8d:	je     0x403a7e
  403a8f:	xchg   edi,eax
  403a90:	pop    ds
  403a91:	daa    
  403a92:	jae    0x403a82
  403a94:	mov    eax,ds:0xe2b33b6f
  403a99:	inc    eax
  403a9a:	dec    edx
  403a9b:	in     eax,dx
  403a9c:	pmaxub mm2,QWORD PTR [edi-0x55d87b88]
  403aa3:	mov    dh,bh
  403aa5:	push   cs
  403aa6:	js     0x403a4b
  403aa8:	jg     0x403ad1
  403aaa:	adc    BYTE PTR [esp+eiz*2],ah
  403aad:	jnp    0x403ac2
  403aaf:	pusha  
  403ab0:	inc    edx
  403ab1:	jb     0x403af1
  403ab3:	pop    edx
  403ab4:	dec    ecx
  403ab5:	sub    DWORD PTR [edx+0x3f],ebp
  403ab8:	aam    0x1b
  403aba:	sub    al,0x4a
  403abc:	cmp    bh,BYTE PTR [esi]
  403abe:	cwde   
  403abf:	add    al,0x2
  403ac1:	mov    WORD PTR [ecx-0xe],es
  403ac4:	jnp    0x403ade
  403ac6:	jmp    0xaae6a1f0
  403acb:	xor    al,0xf1
  403acd:	xor    bl,ah
  403acf:	(bad)  
  403ad0:	cmp    dl,al
  403ad2:	stos   DWORD PTR es:[edi],eax
  403ad3:	je     0x403b39
  403ad5:	stc    
  403ad6:	jg     0x403ad8
  403ad8:	cmp    dl,cl
  403ada:	nop
  403adb:	out    dx,al
  403adc:	cmp    eax,0x28ce2b67
  403ae1:	fstp   DWORD PTR [ebp-0x4c]
  403ae4:	loopne 0x403b31
  403ae6:	dec    edx
  403ae7:	xchg   edx,eax
  403ae8:	sub    ch,BYTE PTR [edi]
  403aea:	mov    ebx,0x4b451ac7
  403aef:	pop    esp
  403af0:	mov    dl,0x5e
  403af2:	aam    0xee
  403af4:	fwait
  403af5:	push   cs
  403af6:	jmp    0x403a82
  403af8:	cli    
  403af9:	adc    al,0x51
  403afb:	push   0x23
  403afd:	and    eax,0x7eb55ff5
  403b02:	sbb    esi,DWORD PTR [esi-0x3c072d77]
  403b08:	jecxz  0x403b63
  403b0a:	xor    eax,DWORD PTR [eax-0x1e5de964]
  403b10:	in     al,0xbc
  403b12:	sar    edi,cl
  403b14:	test   al,0xc3
  403b16:	sahf   
  403b17:	fld    TBYTE PTR [esi]
  403b19:	xor    dh,BYTE PTR [edi+0x1]
  403b1c:	ja     0x403b14
  403b1e:	paddsw mm2,QWORD PTR [ebp-0x46]
  403b22:	pop    edi
  403b23:	pop    ds
  403b24:	cmp    DWORD PTR ds:0x5dfd1026,esi
  403b2a:	jecxz  0x403b9b
  403b2c:	jmp    0x403b2d
  403b2e:	sbb    al,0x96
  403b30:	jne    0x403b95
  403b32:	dec    edx
  403b33:	pop    ss
  403b34:	push   ebp
  403b35:	mov    al,ds:0x680cc2cb
  403b3a:	rcr    DWORD PTR [ecx],1
  403b3c:	dec    ebx
  403b3d:	mov    dl,0x71
  403b3f:	or     DWORD PTR [ecx+0x66],ebx
  403b42:	sub    al,ah
  403b44:	or     BYTE PTR [eax-0x63],bh
  403b47:	adc    al,0xd1
  403b49:	rol    ecx,cl
  403b4b:	arpl   WORD PTR [ebp-0x35],bx
  403b4e:	out    0x82,al
  403b50:	jge    0x403b9b
  403b52:	imul   esp,DWORD PTR ds:0xe65dd109,0x17
  403b59:	mov    edx,0x7417d739
  403b5e:	push   ecx
  403b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b60:	pop    eax
  403b61:	sar    esp,1
  403b63:	sar    BYTE PTR [eax],cl
  403b65:	xor    eax,0xd0609d49
  403b6a:	sbb    ah,0x4c
  403b6d:	push   eax
  403b6e:	nop
  403b6f:	sbb    ecx,DWORD PTR [eax-0x4]
  403b72:	pop    ebp
  403b73:	loope  0x403b26
  403b75:	call   0x9a6a:0x6a1fb657
  403b7c:	mov    esp,0xb6804bcb
  403b81:	inc    ebp
  403b82:	xor    ch,BYTE PTR [bx+si]
  403b85:	lds    eax,FWORD PTR [edi+0x2e]
  403b88:	out    dx,eax
  403b89:	adc    dh,BYTE PTR [esi+ebp*1-0x3a34564]
  403b90:	ins    DWORD PTR es:[edi],dx
  403b91:	push   0xfffffff1
  403b93:	xchg   ebx,eax
  403b94:	mov    cl,0x66
  403b96:	sbb    ecx,DWORD PTR [ebx+0x53f4786c]
  403b9c:	pop    ss
  403b9d:	sub    dh,0xf3
  403ba0:	imul   esp,DWORD PTR [ecx],0x9413ddb5
  403ba6:	in     eax,dx
  403ba7:	lock test DWORD PTR [edi+0x7378e2a1],0x88cc3bd4
  403bb2:	mov    ebx,0x27511df4
  403bb7:	stos   DWORD PTR es:[edi],eax
  403bb8:	pop    eax
  403bb9:	mov    edx,DWORD PTR [esi-0x5f2af77f]
  403bbf:	daa    
  403bc0:	lock das 
  403bc2:	mov    eax,0xdd56a00b
  403bc7:	fbld   TBYTE PTR [eax-0x2282dbc0]
  403bcd:	or     eax,esi
  403bcf:	pusha  
  403bd0:	mov    al,ds:0x26b300e1
  403bd5:	rcl    BYTE PTR [esi],0x5c
  403bd8:	lods   al,BYTE PTR ds:[esi]
  403bd9:	outs   dx,BYTE PTR ds:[esi]
  403bda:	ja     0x403bcf
  403bdc:	pop    ebp
  403bdd:	imul   ecx,DWORD PTR [ebx-0x3cf40737],0x2adba99b
  403be7:	clc    
  403be8:	cdq    
  403be9:	addr16 and al,0xc7
  403bec:	push   edx
  403bed:	stos   BYTE PTR es:[edi],al
  403bee:	sbb    eax,0xafaa7ca1
  403bf3:	inc    esi
  403bf4:	push   esp
  403bf5:	pusha  
  403bf6:	mov    cl,0x26
  403bf8:	and    bh,BYTE PTR [ecx+ecx*8-0x489f61e8]
  403bff:	outs   dx,DWORD PTR ds:[esi]
  403c00:	int    0x48
  403c02:	retf   0x5aca
  403c05:	mov    bl,0x50
  403c07:	push   cs
  403c08:	scas   eax,DWORD PTR es:[edi]
  403c09:	es retf 
  403c0b:	call   0xf23:0x491401bf
  403c12:	cwde   
  403c13:	push   ecx
  403c14:	or     BYTE PTR [edx+ebx*8+0x2c48ca28],0xc7
  403c1c:	inc    ebp
  403c1d:	mov    esp,0xf89c85bc
  403c22:	mov    eax,DWORD PTR [ebp-0x38]
  403c25:	mov    edx,DWORD PTR [ebp-0x14]
  403c28:	xor    eax,esi
  403c2a:	add    eax,edi
  403c2c:	cmp    edx,eax
  403c2e:	je     0x40617c
  403c34:	mov    eax,DWORD PTR [ebp-0x20]
  403c37:	xor    eax,esi
  403c39:	mov    edx,0xffcd8d0b
  403c3e:	sub    edx,eax
  403c40:	add    edx,DWORD PTR [ebp-0x14]
  403c43:	mov    eax,DWORD PTR [ebp-0x20]
  403c46:	mov    ebx,DWORD PTR [ebp-0x10]
  403c49:	xor    eax,esi
  403c4b:	add    eax,edi
  403c4d:	imul   eax,ebx
  403c50:	cmp    eax,edx
  403c52:	ja     0x406179
  403c58:	mov    edx,DWORD PTR [ebp-0x10]
  403c5b:	mov    eax,DWORD PTR [ebp-0x14]
  403c5e:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c61:	sub    eax,edx
  403c63:	xor    ebx,esi
  403c65:	xor    edx,edx
  403c67:	add    ebx,edi
  403c69:	div    ebx
  403c6b:	mov    DWORD PTR [ebp-0x8],eax
  403c6e:	mov    eax,DWORD PTR [ebp-0x44]
  403c71:	mov    edx,DWORD PTR [ebp-0x8]
  403c74:	xor    eax,esi
  403c76:	add    eax,edi
  403c78:	cmp    edx,eax
  403c7a:	jbe    0x403c8a
  403c80:	mov    eax,DWORD PTR [ebp-0x44]
  403c83:	xor    eax,esi
  403c85:	add    eax,edi
  403c87:	mov    DWORD PTR [ebp-0x8],eax
  403c8a:	mov    eax,DWORD PTR [ebp-0x2c]
  403c8d:	mov    edx,DWORD PTR [ebp-0x8]
  403c90:	xor    eax,esi
  403c92:	add    eax,edi
  403c94:	imul   eax,edx
  403c97:	mov    DWORD PTR [ebp-0x8],eax
  403c9a:	mov    eax,DWORD PTR [ebp-0x38]
  403c9d:	mov    edx,DWORD PTR [ebp-0x8]
  403ca0:	xor    eax,esi
  403ca2:	add    eax,edi
  403ca4:	cmp    edx,eax
  403ca6:	je     0x406162
  403cac:	mov    eax,DWORD PTR [ebp-0x8]
  403caf:	mov    DWORD PTR [ebp-0x18],eax
  403cb2:	mov    eax,DWORD PTR [ebp-0x10]
  403cb5:	add    eax,DWORD PTR [ebp-0x54]
  403cb8:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  403cbf:	mov    DWORD PTR [ebp-0x8],eax
  403cc2:	mov    eax,0xf89c85a2
  403cc7:	mov    DWORD PTR [ebp-0x28],eax
  403cca:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  403cd1:	mov    DWORD PTR [ebp-0x40],0xf89c85a0
  403cd8:	mov    DWORD PTR [ebp-0x30],eax
  403cdb:	mov    eax,DWORD PTR [ebp-0x1c]
  403cde:	xor    eax,esi
  403ce0:	add    eax,edi
  403ce2:	jmp    0x40611e
  403ce7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  403cee:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  403cf5:	mov    eax,DWORD PTR [ebp-0x30]
  403cf8:	mov    edx,DWORD PTR [ebp-0xc]
  403cfb:	xor    eax,esi
  403cfd:	add    eax,edi
  403cff:	imul   eax,edx
  403d02:	mov    edx,DWORD PTR [ebp-0x8]
  403d05:	mov    al,BYTE PTR [eax+edx*1]
  403d08:	mov    BYTE PTR [ebp-0x1],al
  403d0b:	mov    eax,DWORD PTR [ebp-0x30]
  403d0e:	mov    edx,DWORD PTR [ebp-0xc]
  403d11:	xor    eax,esi
  403d13:	add    eax,edi
  403d15:	imul   eax,edx
  403d18:	mov    edx,DWORD PTR [ebp-0x5c]
  403d1b:	xor    edx,esi
  403d1d:	add    eax,edx
  403d1f:	mov    edx,DWORD PTR [ebp-0x8]
  403d22:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d2a:	mov    edx,DWORD PTR [ebp-0x4c]
  403d2d:	xor    edx,esi
  403d2f:	lea    eax,[edx+eax*1+0x3272f5]
  403d36:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3a:	xor    edx,eax
  403d3c:	mov    BYTE PTR [ebp-0x1],dl
  403d3f:	mov    al,BYTE PTR [ebp-0x1]
  403d42:	mov    edx,DWORD PTR [ebp-0x30]
  403d45:	mov    ebx,DWORD PTR [ebp-0xc]
  403d48:	xor    edx,esi
  403d4a:	add    edx,edi
  403d4c:	imul   edx,ebx
  403d4f:	mov    ebx,DWORD PTR [ebp-0x8]
  403d52:	mov    BYTE PTR [edx+ebx*1],al
  403d55:	mov    eax,DWORD PTR [ebp-0x30]
  403d58:	mov    edx,DWORD PTR [ebp-0xc]
  403d5b:	xor    eax,esi
  403d5d:	add    eax,edi
  403d5f:	imul   eax,edx
  403d62:	mov    edx,DWORD PTR [ebp-0x8]
  403d65:	mov    al,BYTE PTR [eax+edx*1]
  403d68:	mov    BYTE PTR [ebp-0x1],al
  403d6b:	mov    eax,DWORD PTR [ebp-0x30]
  403d6e:	mov    edx,DWORD PTR [ebp-0xc]
  403d71:	xor    eax,esi
  403d73:	add    eax,edi
  403d75:	imul   eax,edx
  403d78:	mov    edx,DWORD PTR [ebp-0x28]
  403d7b:	xor    edx,esi
  403d7d:	add    eax,edx
  403d7f:	mov    edx,DWORD PTR [ebp-0x8]
  403d82:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f5]
  403d8a:	mov    edx,DWORD PTR [ebp-0x50]
  403d8d:	xor    edx,esi
  403d8f:	lea    eax,[edx+eax*1+0x3272f5]
  403d96:	movzx  edx,BYTE PTR [ebp-0x1]
  403d9a:	xor    edx,eax
  403d9c:	mov    BYTE PTR [ebp-0x1],dl
  403d9f:	mov    al,BYTE PTR [ebp-0x1]
  403da2:	mov    edx,DWORD PTR [ebp-0x30]
  403da5:	mov    ebx,DWORD PTR [ebp-0xc]
  403da8:	xor    edx,esi
  403daa:	add    edx,edi
  403dac:	imul   edx,ebx
  403daf:	mov    ebx,DWORD PTR [ebp-0x8]
  403db2:	jmp    0x406107
  403db7:	dec    ebx
  403db8:	inc    eax
  403db9:	sub    eax,0xc4820296
  403dbe:	scas   al,BYTE PTR es:[edi]
  403dbf:	push   0x47dd8915
  403dc4:	dec    ecx
  403dc5:	xchg   DWORD PTR [ebp+0x4b],esp
  403dc8:	pop    esi
  403dc9:	add    DWORD PTR [ebx-0x7c7ca1b5],0x3
  403dd0:	push   esp
  403dd1:	xchg   BYTE PTR [eax],bh
  403dd3:	jb     0x403da5
  403dd5:	and    al,0x9a
  403dd7:	sub    eax,0xf4849d33
  403ddc:	fwait
  403ddd:	mov    dh,BYTE PTR [esi]
  403ddf:	adc    al,0xb5
  403de1:	xor    BYTE PTR [esi-0x20],bh
  403de4:	pop    es
  403de5:	fld    TBYTE PTR [ebx-0x6a0bb9b0]
  403deb:	retf   0xabe2
  403dee:	sbb    BYTE PTR [edx],0x83
  403df1:	pusha  
  403df2:	cmp    al,0x8
  403df4:	adc    DWORD PTR [ebx-0x25],0xa0a2776c
  403dfb:	dec    esi
  403dfc:	mov    DWORD PTR [esi+0x78d81c34],ecx
  403e02:	xor    DWORD PTR [esi-0x5a9a1d6],edx
  403e08:	cmp    ebp,DWORD PTR [edi+0x10]
  403e0b:	sbb    dl,BYTE PTR [edi+edi*8-0x77]
  403e0f:	jne    0x403df3
  403e11:	mov    DWORD PTR [ecx+0xc19e42b],esp
  403e17:	test   eax,0xcec89bf3
  403e1c:	xor    al,0x7c
  403e1e:	pushf  
  403e1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e20:	dec    ecx
  403e21:	inc    edx
  403e22:	and    eax,0x6eea92cc
  403e27:	lahf   
  403e28:	test   BYTE PTR [eax+ebp*4],0xbb
  403e2c:	pushf  
  403e2d:	jmp    0xeb395cc0
  403e32:	cmp    eax,0x62251ae4
  403e37:	adc    eax,0xbd6f2823
  403e3c:	rol    BYTE PTR [ecx-0x116a366d],0xcf
  403e43:	and    ebx,ecx
  403e45:	repnz inc edi
  403e47:	loop   0x403ddb
  403e49:	enter  0xec5a,0xfd
  403e4d:	clc    
  403e4e:	jge    0x403e29
  403e50:	sbb    DWORD PTR [edi-0x59bbf033],esi
  403e56:	in     al,0x9e
  403e58:	mov    WORD PTR [ecx],?
  403e5a:	mov    al,ds:0x787b12cc
  403e5f:	mov    DWORD PTR [ebx-0x466551ea],esp
  403e65:	loop   0x403ea6
  403e67:	sbb    al,0x68
  403e69:	stos   DWORD PTR es:[edi],eax
  403e6a:	rcl    BYTE PTR [ecx-0x6c],cl
  403e6d:	sbb    eax,ecx
  403e6f:	dec    edi
  403e70:	stos   DWORD PTR es:[edi],eax
  403e71:	lods   al,BYTE PTR ds:[esi]
  403e72:	inc    esp
  403e73:	loop   0x403ec0
  403e75:	stos   BYTE PTR es:[edi],al
  403e76:	mov    ds:0x285c38a3,al
  403e7b:	mov    es,WORD PTR [ebx+eax*1-0x26181478]
  403e82:	jmp    0x403e6d
  403e84:	hlt    
  403e85:	cdq    
  403e86:	in     eax,dx
  403e87:	pop    edi
  403e88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e89:	int    0x2
  403e8b:	lahf   
  403e8c:	sbb    eax,0xbdf01eb8
  403e91:	data16 jne 0x403eaf
  403e94:	iret   
  403e95:	jne    0x403ede
  403e97:	sbb    BYTE PTR [eax-0x18906919],cl
  403e9d:	cs push esp
  403e9f:	push   ds
  403ea0:	lahf   
  403ea1:	adc    BYTE PTR [ebx-0x2],ch
  403ea4:	pop    ds
  403ea5:	(bad)  [edx-0x6]
  403ea8:	cwde   
  403ea9:	push   ss
  403eaa:	mov    bh,0xdc
  403eac:	jle    0x403ed8
  403eae:	daa    
  403eaf:	call   0xd673:0xe2750bbe
  403eb6:	mov    esp,0x1847f20a
  403ebb:	mov    fs,ecx
  403ebd:	lahf   
  403ebe:	adc    bh,BYTE PTR [bp+di-0x17]
  403ec2:	xchg   edx,eax
  403ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec4:	test   edi,edi
  403ec6:	mov    ds:0xebbea77a,eax
  403ecb:	loope  0x403eae
  403ecd:	ja     0x403ea4
  403ecf:	mov    bh,0xb8
  403ed1:	mov    al,0xeb
  403ed3:	idiv   DWORD PTR [edi]
  403ed5:	mov    al,BYTE PTR [ebp+eiz*1+0x63cc76b8]
  403edc:	(bad)  [edx+0x19ceb9b5]
  403ee2:	jbe    0x403e68
  403ee4:	inc    edx
  403ee5:	rcr    BYTE PTR [ecx+ebp*1+0x44],0xf9
  403eea:	xchg   esi,eax
  403eeb:	rol    BYTE PTR [esi+0x1219dceb],0x31
  403ef2:	pop    es
  403ef3:	out    0x77,eax
  403ef5:	fmul   st,st(7)
  403ef7:	or     esi,edi
  403ef9:	pop    esi
  403efa:	inc    ebx
  403efb:	jo     0x403ebe
  403efd:	mov    al,0xe0
  403eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f00:	jle    0x403ee7
  403f02:	outs   dx,BYTE PTR ds:[esi]
  403f03:	xchg   ebx,eax
  403f04:	and    eax,0x56b3f2ea
  403f09:	fisubr WORD PTR ds:0xa3c7ad76
  403f0f:	xor    DWORD PTR [ebp+0x48],0x53
  403f13:	xchg   ecx,eax
  403f14:	jecxz  0x403f86
  403f16:	push   0x76
  403f18:	dec    ecx
  403f19:	and    eax,0x8a4641df
  403f1e:	adc    BYTE PTR [ebx+0x62],dh
  403f21:	es jecxz 0x403f3d
  403f24:	mov    edx,edx
  403f26:	aas    
  403f27:	or     DWORD PTR [si+0x68],esp
  403f2b:	inc    ebx
  403f2c:	ins    BYTE PTR es:[edi],dx
  403f2d:	pop    ebx
  403f2e:	rcr    DWORD PTR [ecx+0x38c65221],cl
  403f34:	out    dx,eax
  403f35:	inc    ebx
  403f36:	sti    
  403f37:	push   0xffffffbf
  403f39:	sahf   
  403f3a:	ins    WORD PTR es:[edi],dx
  403f3c:	cmp    BYTE PTR [ebp+0x74],0x27
  403f40:	sbb    ch,ah
  403f42:	xchg   esi,eax
  403f43:	aaa    
  403f44:	sbb    DWORD PTR [esi],ecx
  403f46:	mov    edx,0x9f68b0e4
  403f4b:	push   ss
  403f4c:	sub    esp,DWORD PTR [ebp-0x3f]
  403f4f:	loop   0x403ee6
  403f51:	mov    ebp,0xde14359d
  403f56:	aas    
  403f57:	rcr    DWORD PTR [edi-0xa],cl
  403f5a:	adc    edx,DWORD PTR [ebp+ebp*2+0xc9bb298]
  403f61:	es aaa 
  403f63:	add    ch,BYTE PTR [edi-0x2d157df7]
  403f69:	adc    eax,0xb2f0cf88
  403f6e:	icebp  
  403f6f:	loop   0x403f1b
  403f71:	dec    ebp
  403f72:	push   esi
  403f73:	(bad)  
  403f74:	jge    0x403f0d
  403f76:	mov    DWORD PTR [edi],ebp
  403f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f79:	scas   al,BYTE PTR es:[edi]
  403f7a:	and    bl,BYTE PTR [edi-0xef010af]
  403f80:	mov    ds:0xe8aefc01,al
  403f85:	or     ch,dl
  403f87:	pop    edx
  403f88:	ja     0x403fcf
  403f8a:	iret   
  403f8b:	arpl   WORD PTR fs:[esi+0x18],di
  403f8f:	mov    eax,ds:0x2757c35e
  403f94:	sbb    al,0x19
  403f96:	dec    ebx
  403f97:	xor    al,0xda
  403f99:	lods   al,BYTE PTR ds:[esi]
  403f9a:	repnz jmp 0xe8c2:0x90e63382
  403fa2:	addr16 add eax,0xa0c9ffa1
  403fa8:	(bad)  
  403fa9:	jo     0x403f7f
  403fab:	imul   ebx,DWORD PTR ds:[esp+esi*1],0xa68b0ec2
  403fb3:	pop    es
  403fb4:	cdq    
  403fb5:	add    edx,DWORD PTR [esi-0x225916ed]
  403fbb:	aam    0x18
  403fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbe:	xchg   ebx,eax
  403fbf:	idiv   edi
  403fc1:	and    BYTE PTR [ebp-0x511ab3b1],dh
  403fc7:	mov    eax,0x2b787741
  403fcc:	and    eax,0xf692d464
  403fd1:	js     0x40401c
  403fd3:	inc    ecx
  403fd4:	sar    esp,cl
  403fd6:	loope  0x404007
  403fd8:	push   esi
  403fd9:	add    dh,BYTE PTR [ebx]
  403fdb:	(bad)  
  403fdc:	in     al,0x21
  403fde:	enter  0xbb,0xd
  403fe2:	and    eax,0xad12ad9a
  403fe7:	ret    
  403fe8:	push   eax
  403fe9:	cli    
  403fea:	and    esp,DWORD PTR [esi+0x10970be5]
  403ff0:	jle    0x404003
  403ff2:	jo     0x403f84
  403ff4:	frstor [esp+ecx*1+0xd839053]
  403ffb:	mov    bl,0x5c
  403ffd:	pop    eax
  403ffe:	popf   
  403fff:	ror    DWORD PTR [eax-0x7c77f0f3],cl
  404005:	dec    esi
  404006:	xchg   esi,ebp
  404008:	test   BYTE PTR [ebx+edx*8+0x5ee9961a],dh
  40400f:	pop    eax
  404010:	push   ebp
  404011:	(bad)  
  404012:	push   edx
  404013:	mov    DWORD PTR [ebx+0x3526a676],esi
  404019:	push   ss
  40401a:	jp     0x403fd0
  40401c:	hlt    
  40401d:	sub    dl,BYTE PTR [ecx-0x8]
  404020:	sbb    ebx,DWORD PTR [esi+edx*2+0x25c4499f]
  404027:	ins    DWORD PTR es:[edi],dx
  404028:	les    esp,FWORD PTR [ebx]
  40402a:	add    BYTE PTR [ecx-0x6972f2fd],al
  404030:	and    bh,ch
  404032:	(bad)  
  404033:	jmp    0x404013
  404035:	(bad)  
  404036:	push   edx
  404037:	aad    0xb1
  404039:	fld    DWORD PTR [ebp-0x1b]
  40403c:	mov    esi,0xb7946e10
  404041:	ficom  WORD PTR [edi-0x15]
  404044:	xchg   edi,eax
  404045:	inc    ecx
  404046:	repnz xor eax,0x138d6ee3
  40404c:	pop    ecx
  40404d:	cmp    eax,0xed1e6d48
  404052:	fdivr  DWORD PTR ds:0x2fd4a9ce
  404058:	sahf   
  404059:	dec    edi
  40405a:	pop    edx
  40405b:	stos   DWORD PTR es:[edi],eax
  40405c:	push   ds
  40405d:	leave  
  40405e:	xchg   ebp,eax
  40405f:	xchg   ebp,eax
  404061:	push   0xffffffc6
  404063:	sub    esp,esp
  404065:	mov    ds:0x7fdf761f,eax
  40406a:	lock mov dx,0x4512
  40406f:	or     dh,BYTE PTR [ecx+esi*1]
  404072:	pop    ecx
  404073:	mov    al,ds:0xc27c0123
  404078:	fsubr  st(7),st
  40407a:	xchg   edi,eax
  40407b:	inc    ebp
  40407c:	mov    bh,0x9f
  40407e:	cmp    esi,edi
  404080:	ins    DWORD PTR es:[edi],dx
  404081:	sub    bl,BYTE PTR [edx+esi*4+0x5a2087e6]
  404088:	or     eax,0xa06dcc94
  40408d:	sub    al,BYTE PTR [esi]
  40408f:	cmp    eax,0x6d5c00c8
  404094:	mov    eax,ds:0x7214242e
  404099:	xchg   ebp,eax
  40409a:	push   edx
  40409b:	mov    al,ds:0xe180a393
  4040a0:	call   0x13f8bca1
  4040a5:	jns    0x404095
  4040a7:	leave  
  4040a8:	add    BYTE PTR [esi+0x7ea7ff88],al
  4040ae:	xor    eax,0xe55e3883
  4040b3:	add    al,0x58
  4040b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040b6:	xor    DWORD PTR [ebx-0x74a29bac],esi
  4040bc:	pop    ss
  4040bd:	or     ah,BYTE PTR [edi]
  4040bf:	stos   BYTE PTR es:[edi],al
  4040c0:	mov    cl,0xe7
  4040c2:	mov    ebx,0x316ef25a
  4040c7:	iret   
  4040c8:	loop   0x4040f5
  4040ca:	addr16 push edx
  4040cc:	xor    DWORD PTR [eax],0xdb0decd
  4040d2:	xor    DWORD PTR [edi+edx*8-0x24],ecx
  4040d6:	adc    BYTE PTR [edx],ah
  4040d8:	test   esi,eax
  4040da:	inc    ebx
  4040db:	pop    edx
  4040dc:	fwait
  4040dd:	lds    esp,FWORD PTR [ecx-0x3afc330]
  4040e3:	aaa    
  4040e4:	cmpxchg BYTE PTR [ebp+0x6bd4c157],dl
  4040eb:	push   es
  4040ec:	mov    dh,0xb0
  4040ee:	mov    esi,DWORD PTR [eax+0x30]
  4040f1:	cld    
  4040f2:	xchg   edx,esi
  4040f4:	jle    0x40414a
  4040f6:	sub    eax,0x21ddf1ce
  4040fb:	je     0x4040e3
  4040fd:	adc    dl,0x69
  404100:	dec    edx
  404101:	hlt    
  404102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404103:	fadd   QWORD PTR [eax]
  404105:	jge    0x4040fd
  404107:	push   0x5c5552b3
  40410c:	cmp    eax,0xd47c630f
  404111:	ret    0x6d78
  404114:	int3   
  404115:	shl    DWORD PTR [edi],0xbe
  404118:	hlt    
  404119:	out    dx,eax
  40411a:	cdq    
  40411b:	or     ecx,DWORD PTR [ecx+0x6e]
  40411e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411f:	jmp    0xacbf30b2
  404124:	pop    ss
  404125:	repz mov ds:0x34581656,al
  40412b:	retf   
  40412c:	push   ecx
  40412d:	loope  0x40410d
  40412f:	cmp    BYTE PTR [ebx],0xa
  404132:	xor    ebp,DWORD PTR [edx+0x5e200a08]
  404138:	push   eax
  404139:	out    0xad,eax
  40413b:	imul   edi,DWORD PTR [esi],0x75bafc74
  404141:	sub    al,BYTE PTR [eax-0x26]
  404144:	sbb    al,0x2d
  404146:	dec    edi
  404147:	adc    edi,edx
  404149:	arpl   WORD PTR [esi],sp
  40414b:	dec    ebx
  40414c:	pop    ds
  40414d:	(bad)  
  40414e:	clc    
  40414f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404150:	add    dl,BYTE PTR [edx-0x49fd1ea4]
  404156:	cwde   
  404157:	les    edi,FWORD PTR [ebp-0x78]
  40415a:	or     eax,0xaa3727b
  40415f:	push   ss
  404160:	sub    DWORD PTR [esp+ecx*8+0x5f],ebp
  404164:	xchg   edi,eax
  404165:	ins    BYTE PTR es:[edi],dx
  404166:	mov    ch,0xee
  404168:	pop    ss
  404169:	je     0x40413b
  40416b:	dec    ebx
  40416c:	dec    ebx
  40416d:	pop    ebp
  40416e:	(bad)  
  40416f:	sub    dl,ch
  404171:	mov    DWORD PTR [ecx+esi*4-0x72],0x2ef286c9
  404179:	push   ebx
  40417a:	mov    al,0x9c
  40417c:	int    0x91
  40417e:	or     bh,BYTE PTR [ebp-0x15]
  404181:	mov    ecx,0x76fc065c
  404186:	ja     0x4041a6
  404188:	out    0x64,eax
  40418a:	or     DWORD PTR [ebx-0x56],eax
  40418d:	add    esp,esp
  40418f:	arpl   WORD PTR [esi],sp
  404191:	push   ds
  404192:	int    0xfc
  404194:	outs   dx,DWORD PTR ds:[esi]
  404195:	gs cmp esi,edi
  404198:	es (bad) 
  40419a:	pop    ds
  40419b:	or     DWORD PTR [ebp+0x44e805b5],ecx
  4041a1:	loopne 0x404198
  4041a3:	inc    edi
  4041a4:	inc    edx
  4041a5:	aas    
  4041a6:	inc    eax
  4041a7:	aad    0xe7
  4041a9:	or     ebp,DWORD PTR ds:[ebx]
  4041ac:	pop    ss
  4041ad:	jbe    0x4041f6
  4041af:	ins    DWORD PTR es:[edi],dx
  4041b0:	sub    al,0x74
  4041b2:	adc    BYTE PTR [eax-0x405fa18d],0xde
  4041b9:	lahf   
  4041ba:	lods   eax,DWORD PTR ds:[esi]
  4041bb:	xor    eax,0xd8ff60d7
  4041c0:	(bad)  [edx+0x2bb93497]
  4041c6:	pop    esi
  4041c7:	stos   DWORD PTR es:[edi],eax
  4041c8:	pop    ebp
  4041c9:	jb     0x4041b0
  4041cb:	adc    ebp,DWORD PTR [edx]
  4041cd:	js     0x404203
  4041cf:	fs xchg ebx,eax
  4041d1:	pushf  
  4041d2:	(bad)  
  4041d4:	jb     0x404186
  4041d6:	dec    edi
  4041d7:	fimul  DWORD PTR [ecx]
  4041d9:	pop    esp
  4041da:	imul   esp,DWORD PTR [ebp-0x7c7ab47d],0xedb44648
  4041e4:	dec    esi
  4041e5:	mov    esi,0x5ad69db1
  4041ea:	mov    cl,0xa9
  4041ec:	icebp  
  4041ed:	(bad)  
  4041ee:	fild   DWORD PTR [edi+0x51afb82b]
  4041f4:	jl     0x404272
  4041f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041f7:	cmpxchg BYTE PTR [ebx+0x553173e],cl
  4041fe:	(bad)  
  4041ff:	rcl    BYTE PTR [ecx],cl
  404201:	aaa    
  404202:	xor    cl,dl
  404204:	jl     0x404216
  404206:	xor    dh,BYTE PTR [eax+0x4bb934bc]
  40420c:	pop    edx
  40420d:	sub    ecx,edi
  40420f:	cmp    eax,0x7257d467
  404214:	pop    ebp
  404215:	xor    DWORD PTR [ebp+0x25f4630a],0x75
  40421c:	push   ss
  40421d:	mov    eax,ecx
  40421f:	inc    esi
  404220:	push   cs
  404221:	test   BYTE PTR [eax-0x6ddfd22a],bh
  404227:	xor    ecx,edx
  404229:	lahf   
  40422a:	ret    
  40422b:	std    
  40422c:	mov    edi,0x6f869c2a
  404231:	xchg   edx,eax
  404232:	cmpxchg DWORD PTR [eax+0x5c],ecx
  404236:	cmp    DWORD PTR [edi+0x69],edi
  404239:	cli    
  40423a:	jb     0x4041ea
  40423c:	mov    ecx,0xdff29663
  404241:	jne    0x404258
  404243:	pop    ebx
  404244:	arpl   bp,sp
  404246:	pop    esp
  404247:	fwait
  404248:	(bad)  
  404249:	outs   dx,DWORD PTR ds:[esi]
  40424a:	icebp  
  40424b:	dec    esi
  40424c:	xchg   DWORD PTR [eax-0x3],edi
  40424f:	jl     0x404269
  404251:	popf   
  404252:	dec    ebx
  404253:	fdiv   QWORD PTR [ecx+esi*1+0x45349f75]
  40425a:	mov    dh,0x2
  40425c:	daa    
  40425d:	fstp   DWORD PTR [edx-0x12]
  404260:	enter  0x2b55,0xdb
  404264:	inc    esp
  404265:	and    BYTE PTR [edi+0x7d170ad8],dh
  40426b:	mov    WORD PTR [edi-0x2c],ss
  40426e:	mov    dl,0xf1
  404270:	fsub   DWORD PTR [ebp-0x11]
  404273:	cmp    al,0x95
  404275:	int    0xd9
  404277:	test   bh,al
  404279:	mov    bh,0x31
  40427b:	bound  ecx,QWORD PTR [ebx]
  40427d:	mov    edi,0x94f271
  404282:	adc    al,0xaf
  404284:	lds    ebx,FWORD PTR [edi+0x7a42308b]
  40428a:	cmp    dl,bl
  40428c:	loopne 0x404229
  40428e:	rcr    BYTE PTR [ebx+eiz*1],0x6a
  404292:	xor    BYTE PTR [edx],ch
  404294:	mov    bl,BYTE PTR [ebx+0x44]
  404297:	jle    0x4042cd
  404299:	out    dx,al
  40429a:	test   al,0x35
  40429c:	mov    ebx,0x72289676
  4042a1:	cdq    
  4042a2:	xchg   edi,eax
  4042a3:	outs   dx,DWORD PTR es:[esi]
  4042a5:	rol    DWORD PTR [ebx+eiz*8+0xd074e8f],1
  4042ac:	sub    bh,al
  4042ae:	ret    0x821d
  4042b1:	push   eax
  4042b2:	iret   
  4042b3:	dec    esp
  4042b4:	jmp    0x5a85:0x996c1f26
  4042bb:	sar    BYTE PTR [ecx],0xe1
  4042be:	mov    bl,0x42
  4042c0:	sbb    DWORD PTR [edx],edx
  4042c2:	pusha  
  4042c3:	and    al,0x92
  4042c5:	adc    ch,BYTE PTR [eax+edi*4+0x1b]
  4042c9:	cmp    eax,0xd6b53fa9
  4042ce:	jmp    0xff94:0x3517a6e6
  4042d5:	sub    eax,DWORD PTR [eax+edi*4-0x25ce9f94]
  4042dc:	dec    esp
  4042dd:	mov    dh,0x66
  4042df:	mov    WORD PTR [ebx],?
  4042e1:	(bad)  [edx-0x203a5b34]
  4042e7:	test   al,0x33
  4042e9:	clc    
  4042ea:	(bad)  
  4042eb:	call   0xfb58:0x1fbd8c9e
  4042f2:	dec    ebx
  4042f3:	ja     0x4042fb
  4042f5:	xchg   DWORD PTR [esi+0x47],eax
  4042f8:	fdivrp st(6),st
  4042fa:	pop    ds
  4042fb:	sub    dh,dl
  4042fd:	in     eax,dx
  4042fe:	clc    
  4042ff:	add    DWORD PTR [ebx+0x55],esp
  404302:	ja     0x40428b
  404304:	add    al,0x36
  404306:	enter  0xb4ce,0x6
  40430a:	xchg   ecx,eax
  40430b:	pop    esi
  40430c:	pop    eax
  40430d:	test   eax,0x630206ee
  404312:	jmp    0x6caa1322
  404317:	or     DWORD PTR [esi+0x6daf40b1],edx
  40431d:	add    DWORD PTR [esi],edi
  40431f:	jo     0x4042bb
  404321:	repnz push ebx
  404323:	dec    esp
  404324:	ja     0x404341
  404326:	neg    BYTE PTR [ebx]
  404328:	outs   dx,DWORD PTR ds:[esi]
  404329:	cmp    eax,0x4ec3d28f
  40432e:	inc    edi
  40432f:	out    0x59,eax
  404331:	mov    eax,0x64fb38b8
  404336:	mov    dl,0xeb
  404338:	ins    BYTE PTR es:[edi],dx
  404339:	fwait
  40433a:	cmp    al,0x14
  40433c:	shl    DWORD PTR [esi+0x3c36ebf5],0x18
  404343:	jnp    0x40434f
  404345:	outs   dx,DWORD PTR ds:[esi]
  404346:	nop
  404347:	mov    dh,0x48
  404349:	push   edx
  40434a:	fisttp WORD PTR [ebx+0x52]
  40434d:	fwait
  40434e:	aam    0xe8
  404350:	popa   
  404351:	repnz pusha 
  404353:	xchg   edi,eax
  404354:	mov    ah,0xfd
  404356:	fsubr  QWORD PTR [ebp-0x158ac2b8]
  40435c:	ja     0x404347
  40435e:	mov    al,0x39
  404360:	inc    edx
  404361:	fidiv  DWORD PTR [edx]
  404363:	je     0x40432a
  404365:	push   ebx
  404366:	pop    esp
  404367:	lods   eax,DWORD PTR ds:[esi]
  404368:	or     ch,ch
  40436a:	bound  ebx,QWORD PTR [ecx+eax*1-0x23]
  40436e:	nop
  40436f:	sub    DWORD PTR [ebp-0x2a],edi
  404372:	dec    eax
  404373:	adc    DWORD PTR [eax+0x7fa90741],ecx
  404379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40437a:	xchg   edx,eax
  40437b:	or     ah,BYTE PTR ds:0x971a037a
  404381:	push   cs
  404382:	sbb    esi,DWORD PTR [edi-0x6e2e99b8]
  404388:	xchg   edx,eax
  404389:	hlt    
  40438a:	mov    cl,bh
  40438c:	pop    esp
  40438d:	push   edx
  40438e:	mov    cs,WORD PTR [eax]
  404390:	ret    
  404391:	mov    ecx,0x65a3e581
  404396:	xchg   esi,eax
  404397:	jecxz  0x404356
  404399:	sbb    al,cl
  40439b:	push   edx
  40439c:	fbld   TBYTE PTR [ecx+0x27c47d54]
  4043a2:	shl    ecx,cl
  4043a4:	(bad)  
  4043a5:	push   esi
  4043a6:	dec    esi
  4043a7:	xchg   ebx,eax
  4043a8:	retf   0xd1b7
  4043ab:	add    edx,eax
  4043ad:	jbe    0x4043c9
  4043af:	repz sbb BYTE PTR [ebp-0x23662ad7],0x3b
  4043b7:	sbb    al,0x90
  4043b9:	test   eax,0x2a93d191
  4043be:	lods   eax,DWORD PTR ds:[esi]
  4043bf:	(bad)  
  4043c0:	push   ebp
  4043c1:	addr16 ss icebp 
  4043c4:	mov    ds:0xe5a938ba,al
  4043c9:	sbb    eax,0x74ff581d
  4043ce:	cmp    esp,0xdf09d3dc
  4043d4:	data16 fs in al,0xb1
  4043d8:	add    ecx,DWORD PTR [eax-0x4b6662ff]
  4043de:	inc    ebx
  4043df:	pop    edi
  4043e0:	mov    esp,0x2a439606
  4043e5:	lea    ebp,[esi+0x393585ee]
  4043eb:	retf   
  4043ec:	jmp    0x82cb:0x91658882
  4043f3:	inc    eax
  4043f4:	outs   dx,BYTE PTR ds:[esi]
  4043f5:	jecxz  0x404386
  4043f7:	inc    edx
  4043f8:	shr    BYTE PTR [ebp+0x60],0x59
  4043fc:	sub    DWORD PTR [ecx-0x34b121db],ebp
  404402:	mov    eax,fs
  404404:	mov    ah,0x45
  404406:	or     al,0x67
  404408:	in     al,0x86
  40440a:	in     eax,dx
  40440b:	dec    edx
  40440c:	jnp    0x4043cd
  40440e:	add    BYTE PTR [edx],ah
  404410:	xor    BYTE PTR [edi-0x63],al
  404413:	sub    al,0x25
  404415:	pop    es
  404416:	mov    BYTE PTR [esi+edi*4-0x4],cl
  40441a:	and    esi,DWORD PTR [ebp+edi*4-0x18]
  40441e:	xchg   esi,eax
  40441f:	and    eax,0x642fe225
  404424:	push   es
  404425:	pop    esi
  404426:	xchg   esi,eax
  404427:	jbe    0x404480
  404429:	cdq    
  40442a:	mov    esp,0xcfba69e3
  40442f:	lahf   
  404430:	lock outs dx,DWORD PTR ds:[esi]
  404432:	and    al,0x94
  404434:	cld    
  404435:	jecxz  0x4043f2
  404437:	inc    esp
  404438:	and    eax,DWORD PTR ds:0x1d1ce836
  40443e:	sahf   
  40443f:	in     eax,0xb4
  404441:	jo     0x404407
  404443:	jb     0x404426
  404445:	js     0x404449
  404447:	mov    ds:0x318ec2e7,al
  40444c:	or     esp,DWORD PTR [esp+ecx*8]
  40444f:	js     0x404460
  404451:	jmp    FWORD PTR [ecx-0x1afdee71]
  404457:	mov    ch,0xe5
  404459:	(bad)  [eax+0x78]
  40445c:	dec    esp
  40445d:	push   edx
  40445e:	and    BYTE PTR [ebx],bl
  404460:	cwde   
  404461:	add    BYTE PTR [ebp+0x3a],bh
  404464:	arpl   si,sp
  404466:	push   es
  404467:	shl    BYTE PTR [esi+0x19],1
  40446a:	ins    BYTE PTR es:[edi],dx
  40446b:	xchg   esp,eax
  40446c:	adc    BYTE PTR [ecx],0x87
  40446f:	inc    esp
  404470:	jae    0x404438
  404472:	in     al,0x8d
  404474:	in     eax,0xd6
  404476:	in     eax,0x6d
  404478:	ins    BYTE PTR es:[edi],dx
  404479:	adc    ecx,DWORD PTR [esi-0x54]
  40447c:	sub    al,0xf1
  40447e:	stos   BYTE PTR es:[edi],al
  40447f:	pop    esp
  404480:	ss dec ebx
  404482:	push   edx
  404483:	add    eax,0x7b48686b
  404488:	pop    ecx
  404489:	out    dx,eax
  40448a:	loopne 0x404505
  40448c:	cmp    BYTE PTR [edx-0x3104c09d],bl
  404492:	xchg   ecx,eax
  404493:	test   al,0xe
  404495:	(bad)  
  404496:	pop    eax
  404497:	stos   DWORD PTR es:[edi],eax
  404498:	dec    edx
  404499:	sub    al,BYTE PTR [ebx-0x5]
  40449c:	add    eax,eax
  40449e:	stos   BYTE PTR es:[edi],al
  40449f:	push   edi
  4044a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044a1:	out    dx,al
  4044a2:	xlat   BYTE PTR ds:[ebx]
  4044a3:	mov    dl,0xe8
  4044a5:	call   DWORD PTR [edi]
  4044a7:	pop    eax
  4044a8:	mov    bl,0x43
  4044aa:	xchg   edx,eax
  4044ab:	out    dx,eax
  4044ac:	xchg   ebp,eax
  4044ad:	mov    BYTE PTR [ebp-0x47498ea4],al
  4044b3:	inc    esp
  4044b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b5:	mov    bh,0x30
  4044b7:	out    dx,eax
  4044b8:	inc    ebp
  4044b9:	jnp    0x4044ac
  4044bb:	jle    0x40445d
  4044bd:	xchg   edi,ebx
  4044bf:	imul   ebp,DWORD PTR [ebx-0x3c5073],0xebd93632
  4044c9:	adc    DWORD PTR [esi+0x70],eax
  4044cc:	imul   esi,ebp,0x388dc310
  4044d2:	dec    edx
  4044d3:	test   eax,0xc513f1ce
  4044d8:	loope  0x40452c
  4044da:	xor    BYTE PTR [ebx+0x37],al
  4044dd:	sub    cl,BYTE PTR [ecx+eax*8-0x39b23c4e]
  4044e4:	mov    WORD PTR [esi],es
  4044e6:	jg     0x40452b
  4044e8:	xor    DWORD PTR [eax-0x39f27a15],0xb7b9595d
  4044f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044f3:	pop    ebp
  4044f4:	aaa    
  4044f5:	mov    bh,0xc2
  4044f7:	mov    ah,0x56
  4044f9:	jmp    0x404494
  4044fb:	fisttp QWORD PTR es:0x1a32b4e4
  404502:	stos   BYTE PTR es:[edi],al
  404503:	repz adc BYTE PTR cs:[edi+esi*2-0x3987bbf6],dh
  40450c:	push   0x18
  40450e:	push   ecx
  40450f:	xor    al,0xbe
  404511:	xor    esp,DWORD PTR [ebp+0x17e8d5f1]
  404517:	fidiv  DWORD PTR [edi]
  404519:	pop    ds
  40451a:	cli    
  40451b:	dec    ebp
  40451c:	popf   
  40451d:	(bad)  
  40451e:	xor    eax,0xe4145062
  404523:	ins    DWORD PTR es:[edi],dx
  404524:	xchg   ebx,eax
  404525:	xor    eax,0x7d1e13af
  40452a:	xor    BYTE PTR [edi+0x3d],bh
  40452d:	xchg   esp,eax
  40452e:	adc    eax,0x4ab74df1
  404533:	mov    ebx,0xa2d6b457
  404538:	fsub   DWORD PTR [edi+0x22]
  40453b:	neg    BYTE PTR [edx-0x61c789c5]
  404541:	dec    esi
  404542:	mov    dl,al
  404544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404545:	ficom  WORD PTR [ebx]
  404547:	fisttp DWORD PTR [esi-0x67]
  40454a:	or     eax,0x9f076fac
  40454f:	sbb    al,0xc8
  404551:	sub    edi,ecx
  404553:	aam    0x61
  404555:	add    ebx,DWORD PTR [esi+0x288d9f44]
  40455b:	arpl   WORD PTR [ebx-0x55],bp
  40455e:	stos   DWORD PTR es:[edi],eax
  40455f:	sub    BYTE PTR [edi-0x207d2753],dl
  404565:	test   DWORD PTR [ecx+0x29],0x25e5b0d
  40456c:	leave  
  40456d:	retf   0x4fc4
  404570:	jmp    0x404596
  404572:	fwait
  404573:	popf   
  404574:	jmp    0x3645:0x681348a6
  40457b:	outs   dx,DWORD PTR ds:[esi]
  40457c:	mov    bl,0x32
  40457e:	push   ss
  40457f:	jb     0x404503
  404581:	jmp    0x6b94:0x8414cbc6
  404588:	jp     0x4045e5
  40458a:	sub    cl,BYTE PTR [edi-0x6c]
  40458d:	nop
  40458e:	sbb    DWORD PTR [edx+0x44],edx
  404591:	mov    al,ds:0x2456ea98
  404596:	add    al,0xe0
  404598:	mov    ebp,ecx
  40459a:	stc    
  40459b:	sbb    eax,0xa59df751
  4045a0:	(bad)  
  4045a1:	xor    dl,dl
  4045a3:	ds dec ebx
  4045a5:	dec    ebp
  4045a6:	fldcw  WORD PTR [ebp-0x7e]
  4045a9:	sbb    edi,DWORD PTR [ebx+0x1ddbde38]
  4045af:	push   0x17a16802
  4045b4:	push   ds
  4045b5:	cmp    edx,DWORD PTR [edx+0x2a]
  4045b8:	aam    0xb9
  4045ba:	jmp    0x40460d
  4045bc:	imul   ebp,DWORD PTR [edx+0x21ccd4e7],0xffffffae
  4045c3:	std    
  4045c4:	and    eax,0x50979da9
  4045c9:	jno    0x4045f1
  4045cb:	lahf   
  4045cc:	xor    DWORD PTR [edi],esp
  4045ce:	shl    DWORD PTR [ebp-0x7474b845],cl
  4045d4:	and    DWORD PTR [esi],ecx
  4045d6:	fisub  WORD PTR fs:[ebp-0x1d618e83]
  4045dd:	lods   al,BYTE PTR ds:[esi]
  4045de:	mov    bh,0xca
  4045e0:	sub    eax,0x6ffda6a7
  4045e5:	scas   al,BYTE PTR es:[edi]
  4045e6:	dec    si
  4045e8:	jp     0x40464f
  4045ea:	cdq    
  4045eb:	fsubr  QWORD PTR [edi+0x3b53c80a]
  4045f1:	mov    ebp,0x4ff22412
  4045f6:	cmovl  edi,DWORD PTR [ecx]
  4045f9:	into   
  4045fa:	rcl    BYTE PTR [edi-0x6f9fec64],0x3f
  404601:	in     al,0x2f
  404603:	mov    ecx,0x1a4a0cc4
  404608:	sub    DWORD PTR [ebp-0x14],0x7e
  40460c:	(bad)
  40460f:	xor    edx,ebp
  404611:	(bad)  
  404612:	scas   eax,DWORD PTR es:[edi]
  404613:	scas   eax,DWORD PTR es:[edi]
  404614:	fcomp  QWORD PTR [eax]
  404616:	loope  0x40462d
  404618:	jae    0x40465c
  40461a:	es sub eax,0xf712bebf
  404620:	mov    ebx,0xfe057c24
  404625:	or     edx,DWORD PTR [ebp+ecx*1-0x7627e4d2]
  40462c:	scas   eax,DWORD PTR es:[edi]
  40462d:	push   0x83a9620e
  404632:	add    esi,DWORD PTR [eax-0x38]
  404635:	xor    DWORD PTR [edi-0x3d],eax
  404638:	jge    0x40461b
  40463a:	sbb    BYTE PTR [edx-0x24],cl
  40463d:	mov    bh,0x22
  40463f:	mov    dl,0xd6
  404641:	or     bh,BYTE PTR [edi]
  404643:	cmp    al,0xed
  404645:	lods   eax,DWORD PTR ds:[esi]
  404646:	jae    0x4045d6
  404648:	sbb    DWORD PTR [ebx-0x59],ecx
  40464b:	rol    BYTE PTR [ecx],0x49
  40464e:	pop    edi
  40464f:	jg     0x40466f
  404651:	sub    ebp,DWORD PTR [esi+0x5ab00fae]
  404657:	(bad)  
  404659:	clc    
  40465a:	adc    BYTE PTR [edx],bh
  40465c:	loope  0x4045e3
  40465e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40465f:	retf   0xf426
  404662:	repz clc 
  404664:	out    dx,al
  404665:	and    DWORD PTR [edi],ebx
  404667:	inc    ecx
  404668:	repnz cld 
  40466a:	xchg   ebp,eax
  40466b:	lds    esi,FWORD PTR [ecx]
  40466d:	mov    dl,0x36
  40466f:	js     0x404622
  404671:	inc    esi
  404672:	aam    0xe7
  404674:	fisub  WORD PTR [esi]
  404676:	test   BYTE PTR [ebp-0x53ba5b1a],ch
  40467c:	and    eax,0x5320e9
  404681:	retf   
  404682:	std    
  404683:	sbb    al,BYTE PTR [ebx]
  404685:	pop    ss
  404686:	and    al,0xb8
  404688:	test   DWORD PTR ds:0x3d37a431,esi
  40468e:	sub    DWORD PTR [ecx+0x3c],ebp
  404691:	ins    BYTE PTR es:[edi],dx
  404692:	adc    DWORD PTR [ecx-0x66732850],0x2b92510b
  40469c:	stc    
  40469d:	jecxz  0x404689
  40469f:	mov    bh,0x81
  4046a1:	daa    
  4046a2:	(bad)  
  4046a3:	ficomp DWORD PTR [ecx+0x29ce3b7f]
  4046a9:	ins    DWORD PTR es:[edi],dx
  4046aa:	push   eax
  4046ab:	(bad)  
  4046ac:	addr16 (bad) 
  4046ae:	mov    bh,0x60
  4046b0:	xchg   eax,esp
  4046b2:	(bad)  
  4046b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046b4:	mov    ds:0x5fccc4fd,eax
  4046b9:	cmovno esi,DWORD PTR [esi-0x1710b36]
  4046c0:	mov    DWORD PTR [edx-0xf305115],esi
  4046c6:	xchg   ecx,eax
  4046c7:	(bad)  
  4046c8:	cmp    DWORD PTR [ebp-0x2e47742e],esp
  4046ce:	push   edi
  4046cf:	pusha  
  4046d0:	jle    0x40472b
  4046d2:	mov    bl,0xc1
  4046d4:	add    ah,al
  4046d6:	inc    ebp
  4046d7:	and    al,0x4
  4046d9:	bound  eax,QWORD PTR [edx+edi*2-0xe]
  4046dd:	ret    
  4046de:	jmp    0xc8848dec
  4046e3:	cmp    edi,DWORD PTR [edx+0x1ceb323a]
  4046e9:	sbb    bl,BYTE PTR [ebx+edi*1+0x16ff2308]
  4046f0:	aas    
  4046f1:	mov    ch,0x49
  4046f3:	cmp    DWORD PTR [ecx-0x63],edx
  4046f6:	lea    ecx,[edx-0x6f4e8ade]
  4046fc:	jb     0x404746
  4046fe:	or     cl,al
  404700:	push   0x8aff585b
  404705:	or     BYTE PTR [esi+0xe],ch
  404708:	test   eax,0x9a0b44a4
  40470d:	std    
  40470e:	cli    
  40470f:	sub    eax,0xe173c7e5
  404714:	lock mov bh,0x85
  404717:	sbb    BYTE PTR [edx],dl
  404719:	cld    
  40471a:	nop
  40471b:	xor    dl,dh
  40471d:	push   ss
  40471e:	inc    eax
  40471f:	xor    dh,ch
  404721:	dec    eax
  404722:	pop    edx
  404723:	repnz push ecx
  404725:	push   esi
  404726:	cwde   
  404727:	pop    esi
  404728:	mov    bh,0xfb
  40472a:	and    ah,BYTE PTR [esi]
  40472c:	rol    ebp,cl
  40472e:	push   esp
  40472f:	and    DWORD PTR [ecx-0x7a7f78b2],ebx
  404735:	jle    0x4046dd
  404737:	(bad)
  40473b:	cdq    
  40473c:	push   cs
  40473d:	and    eax,0x67155944
  404742:	dec    eax
  404743:	fsubr  QWORD PTR [edx]
  404745:	or     DWORD PTR [edx],esi
  404747:	outs   dx,DWORD PTR ds:[esi]
  404748:	xchg   esp,eax
  404749:	adc    eax,0x27feaa2c
  40474e:	dec    esi
  40474f:	in     eax,dx
  404750:	lods   eax,DWORD PTR ds:[esi]
  404751:	outs   dx,BYTE PTR ds:[esi]
  404752:	clc    
  404753:	inc    eax
  404754:	(bad)  
  404755:	push   ss
  404756:	sub    DWORD PTR [esi],eax
  404758:	dec    ebx
  404759:	jge    0x4047b4
  40475b:	arpl   di,bx
  40475d:	xchg   ecx,eax
  40475e:	mov    ebx,0xa27333bb
  404763:	sbb    al,0x6c
  404765:	push   edi
  404766:	fs ja  0x4047a0
  404769:	stos   DWORD PTR es:[edi],eax
  40476a:	push   0xffffffae
  40476c:	stc    
  40476d:	call   0x2c1b3c2d
  404772:	outs   dx,BYTE PTR ds:[esi]
  404773:	mov    edi,0x11ebfbf8
  404778:	lods   eax,DWORD PTR ds:[esi]
  404779:	js     0x404743
  40477b:	cmc    
  40477c:	ins    DWORD PTR es:[edi],dx
  40477d:	sub    dh,0xd2
  404780:	add    DWORD PTR [ecx],0xffffffb2
  404783:	dec    edi
  404784:	add    BYTE PTR [ebx-0x5d01d6aa],al
  40478a:	icebp  
  40478b:	adc    al,BYTE PTR [edi]
  40478d:	mov    cl,0x15
  40478f:	repz push 0x5df12b2b
  404795:	pop    esi
  404796:	mov    WORD PTR [ebx],cs
  404798:	sbb    eax,0xb364f7c4
  40479d:	fistp  WORD PTR [ebx+0x2]
  4047a0:	push   ebp
  4047a1:	scas   al,BYTE PTR es:[edi]
  4047a2:	in     al,0xaa
  4047a4:	cmp    BYTE PTR [esi],ch
  4047a6:	lock scas eax,DWORD PTR es:[edi]
  4047a8:	mov    ds:0x18b8a065,eax
  4047ad:	mov    ch,0x74
  4047af:	rcl    BYTE PTR [ebx-0x788687be],0x75
  4047b6:	call   0xc6783028
  4047bb:	(bad)  
  4047bc:	(bad)  
  4047bd:	mov    ch,0xbb
  4047bf:	sub    al,BYTE PTR [ecx-0x1bc9f743]
  4047c5:	out    0xc2,al
  4047c7:	adc    DWORD PTR [eax-0x32],0xd6064525
  4047ce:	xor    eax,0xc61e0e77
  4047d3:	xor    BYTE PTR [ecx+ebp*1+0x3],0xe6
  4047d8:	loope  0x40479d
  4047da:	mov    al,0xe6
  4047dc:	or     BYTE PTR [ebx],al
  4047de:	dec    eax
  4047df:	sti    
  4047e0:	clc    
  4047e1:	mov    ds:0xc5c4b8db,al
  4047e6:	js     0x4047c9
  4047e8:	xlat   BYTE PTR ds:[ebx]
  4047e9:	dec    edx
  4047ea:	or     bh,ch
  4047ec:	js     0x404803
  4047ee:	xchg   edx,eax
  4047ef:	repz in al,dx
  4047f1:	cmp    al,0xd3
  4047f3:	daa    
  4047f4:	mov    DWORD PTR [esi+0x64],esi
  4047f7:	out    0xe4,al
  4047f9:	push   ecx
  4047fa:	icebp  
  4047fb:	aas    
  4047fc:	xchg   esi,eax
  4047fd:	sbb    eax,0x1f74d08c
  404802:	inc    edi
  404803:	mov    bl,0x1f
  404805:	jbe    0x404857
  404807:	addr16 test al,0x9
  40480a:	jle    0x404819
  40480c:	(bad)  
  40480d:	pop    eax
  40480e:	or     BYTE PTR [ebx],al
  404810:	cmp    al,0xb7
  404812:	data16 cld 
  404814:	sbb    BYTE PTR [ecx],dl
  404816:	cmp    eax,0xa8a531e7
  40481b:	mov    ds,WORD PTR [esi+ecx*2-0x16acac34]
  404822:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404824:	or     BYTE PTR [edx],bh
  404826:	xor    eax,esp
  404828:	sar    bh,cl
  40482a:	repz test eax,0x9e3e456f
  404830:	lods   al,BYTE PTR ds:[esi]
  404831:	cmp    eax,DWORD PTR [edi+0x6f070bf7]
  404837:	mov    cl,ch
  404839:	test   eax,0xd38584e5
  40483e:	popa   
  40483f:	jle    0x40483f
  404841:	mov    gs,WORD PTR [edx]
  404843:	lea    esi,[edx]
  404845:	jge    0x404825
  404847:	mov    ebx,0x5bd5b1cb
  40484c:	scas   eax,DWORD PTR es:[edi]
  40484d:	jle    0x4048b0
  40484f:	jno    0x4047d9
  404851:	data16 fsub DWORD PTR [edi+0x1b]
  404855:	daa    
  404856:	sub    DWORD PTR [eax+0x72f944e2],ebp
  40485c:	jl     0x404899
  40485e:	loopne 0x404812
  404860:	pop    esi
  404861:	outs   dx,BYTE PTR ds:[esi]
  404862:	push   ss
  404863:	push   0xbda80542
  404868:	in     eax,dx
  404869:	jl     0x404897
  40486b:	addr16 push ds
  40486d:	(bad)  
  40486e:	xor    BYTE PTR [ecx+0x40],ch
  404871:	sbb    eax,0xdbdabd3f
  404876:	or     DWORD PTR [edi],edx
  404878:	fadd   DWORD PTR [ebx]
  40487a:	dec    eax
  40487b:	jecxz  0x40481a
  40487d:	je     0x4048e2
  40487f:	xor    eax,0x1bc92f8b
  404884:	loope  0x404828
  404886:	xchg   ebx,ecx
  404888:	enter  0xe199,0x92
  40488c:	push   ecx
  40488d:	dec    ecx
  40488e:	pop    es
  40488f:	lahf   
  404890:	loope  0x40489e
  404892:	stc    
  404893:	push   es
  404894:	mov    bh,0x58
  404896:	daa    
  404897:	ja     0x404892
  404899:	fxam   
  40489b:	dec    eax
  40489c:	mov    ebp,0x1673a40f
  4048a1:	mov    eax,ds:0xcb4e59c0
  4048a6:	retf   
  4048a7:	inc    ebp
  4048a8:	push   edi
  4048a9:	inc    eax
  4048aa:	mov    esi,0xa17b0c49
  4048af:	pop    ss
  4048b0:	xchg   BYTE PTR [edx],dl
  4048b2:	ror    edi,0xaf
  4048b5:	add    eax,0x5ae67420
  4048ba:	mov    eax,0xf380ada8
  4048bf:	push   0x99e014cc
  4048c4:	lea    ecx,[ecx-0x6d]
  4048c7:	mov    DWORD PTR [eax],edi
  4048c9:	lock pop ss
  4048cb:	cwde   
  4048cc:	mov    ebx,0x4b2a144d
  4048d1:	mov    edi,0x454d8caa
  4048d6:	das    
  4048d7:	adc    DWORD PTR [edi+ebx*8+0x3981fa39],eax
  4048de:	outs   dx,BYTE PTR ds:[esi]
  4048df:	ins    BYTE PTR es:[edi],dx
  4048e0:	xchg   edx,eax
  4048e1:	xchg   ebx,eax
  4048e2:	cmp    ebp,edx
  4048e4:	fst    QWORD PTR [ebp-0x40328f17]
  4048ea:	mov    ebp,0xcc4a9243
  4048ef:	stos   BYTE PTR es:[edi],al
  4048f0:	ror    BYTE PTR [edx-0x73],1
  4048f3:	mov    edx,0xa3be45ad
  4048f8:	dec    ecx
  4048f9:	ret    0x48da
  4048fc:	inc    esp
  4048fd:	pop    ss
  4048fe:	fldenv [esi+0x29]
  404901:	xor    dl,bh
  404903:	push   edi
  404904:	xor    al,0x23
  404906:	fnsave [eax+0x961d32f]
  40490c:	mov    bl,cl
  40490e:	cdq    
  40490f:	jbe    0x4048d4
  404911:	pop    ecx
  404912:	sub    dl,al
  404914:	mov    edi,0x42f0b35
  404919:	mov    esp,0xf58a44f1
  40491e:	push   es
  40491f:	inc    esp
  404920:	mov    dl,0xcf
  404922:	mov    ebp,0x8ed62b8f
  404927:	out    dx,eax
  404928:	call   0x5b9f84a2
  40492d:	inc    esi
  40492e:	mov    dh,0xfb
  404930:	jb     0x4048e2
  404932:	jnp    0x404953
  404934:	pop    esp
  404935:	ret    0x4a20
  404938:	aaa    
  404939:	dec    esp
  40493a:	lods   eax,DWORD PTR ds:[esi]
  40493b:	dec    edi
  40493c:	(bad)  
  40493d:	pop    ss
  40493e:	lds    esi,FWORD PTR [ecx-0x61fca158]
  404944:	jl     0x40491b
  404946:	xchg   BYTE PTR [ecx+edx*4+0x6e863fe7],ah
  40494d:	adc    ah,bh
  40494f:	jg     0x40499f
  404951:	les    ecx,FWORD PTR [ebx]
  404953:	rcl    DWORD PTR [eax],1
  404955:	pop    edx
  404956:	add    al,0x44
  404958:	call   0x3828c0ac
  40495d:	jp     0x4049cf
  40495f:	ins    DWORD PTR es:[edi],dx
  404960:	xchg   ah,ah
  404962:	es jns 0x40499f
  404965:	fdivr  DWORD PTR [esi+0x131bd25e]
  40496b:	(bad)  
  40496c:	sbb    ecx,DWORD PTR [edx-0x29]
  40496f:	test   BYTE PTR [ebx],cl
  404971:	mul    BYTE PTR [edi-0x2a]
  404974:	inc    eax
  404975:	dec    ebx
  404976:	xchg   ebp,eax
  404977:	call   0x28a1:0x88a5ba05
  40497e:	inc    ebp
  40497f:	push   ecx
  404980:	lahf   
  404981:	xor    cl,cl
  404983:	add    edi,esi
  404985:	(bad)  
  404986:	stc    
  404987:	xor    eax,DWORD PTR [esi]
  404989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40498a:	xchg   esp,eax
  40498b:	cmp    BYTE PTR [ebp+0x26236200],ch
  404991:	daa    
  404992:	xchg   ebp,eax
  404993:	xor    ecx,DWORD PTR [ebx-0x63]
  404996:	enter  0xb34a,0xc9
  40499a:	fidiv  DWORD PTR [esi]
  40499c:	push   esi
  40499d:	jb     0x4049c5
  40499f:	jne    0x4049b0
  4049a1:	sbb    eax,0x5bfdb70b
  4049a6:	enter  0xbb2e,0xa3
  4049aa:	je     0x404a26
  4049ac:	xchg   esi,eax
  4049ad:	adc    bl,BYTE PTR [eax]
  4049af:	xor    esi,DWORD PTR [ebx]
  4049b1:	adc    al,0x39
  4049b3:	retf   
  4049b4:	(bad)  
  4049b5:	loopne 0x4049f6
  4049b7:	push   0x58
  4049b9:	pop    ds
  4049ba:	mov    edi,DWORD PTR [ebx+0x4f]
  4049bd:	je     0x404970
  4049bf:	push   DWORD PTR [ebp+0x55]
  4049c2:	(bad)  
  4049c3:	sahf   
  4049c4:	scas   eax,DWORD PTR es:[edi]
  4049c5:	jl     0x404954
  4049c7:	mov    bl,0xcb
  4049c9:	scas   eax,DWORD PTR es:[edi]
  4049ca:	jbe    0x40498a
  4049cc:	jecxz  0x4049b8
  4049ce:	mov    al,ds:0x22320e9f
  4049d3:	xchg   ebp,eax
  4049d4:	adc    eax,0x25123b69
  4049d9:	push   edi
  4049da:	arpl   WORD PTR [ebx+0x91f3f67],bp
  4049e0:	sub    ah,BYTE PTR ds:0xfe5af21
  4049e6:	rcl    ebx,1
  4049e8:	int3   
  4049e9:	jne    0x404a23
  4049eb:	xor    al,ah
  4049ed:	pushf  
  4049ee:	dec    ebx
  4049ef:	jle    0x4049b5
  4049f1:	mov    ecx,ebx
  4049f3:	mov    edx,0x89a0dcf4
  4049f8:	push   cs
  4049f9:	xor    al,0x81
  4049fb:	fdivr  st(1),st
  4049fd:	lock aam 0x4d
  404a00:	and    DWORD PTR [ebx-0x24],0x12
  404a04:	sub    ah,BYTE PTR [eax+0x5aaf0d7f]
  404a0a:	stc    
  404a0b:	jecxz  0x404a70
  404a0d:	xchg   esi,eax
  404a0e:	push   edx
  404a0f:	daa    
  404a10:	add    eax,0xda5343d1
  404a15:	cs (bad) 
  404a18:	retf   
  404a19:	cmp    BYTE PTR [edx+esi*1-0x18],ch
  404a1d:	xchg   ebp,eax
  404a1e:	cmp    esi,eax
  404a20:	xlat   BYTE PTR ds:[ebx]
  404a21:	daa    
  404a22:	sbb    DWORD PTR [esi-0x22ad5fbf],esi
  404a28:	nop
  404a29:	xchg   edx,eax
  404a2a:	or     ah,BYTE PTR [eax+0x4b5ca74e]
  404a30:	fisub  DWORD PTR [esi+ebp*2]
  404a33:	and    ecx,DWORD PTR [edi+edx*1-0x3aa78643]
  404a3a:	inc    edi
  404a3b:	sbb    al,0x12
  404a3d:	adc    al,BYTE PTR [ebp-0x60]
  404a40:	jnp    0x4049fa
  404a42:	loop   0x404a36
  404a44:	int    0xe3
  404a46:	(bad)  
  404a47:	hlt    
  404a48:	addr16 dec esp
  404a4a:	dec    eax
  404a4b:	ds sbb al,0x9a
  404a4e:	aad    0x4f
  404a50:	push   edi
  404a51:	push   edi
  404a52:	fidivr DWORD PTR [eax-0x60]
  404a55:	lock popa 
  404a57:	jecxz  0x404aa5
  404a59:	clc    
  404a5a:	dec    esp
  404a5b:	push   esi
  404a5c:	or     ebx,DWORD PTR [eax+ebp*2]
  404a5f:	test   BYTE PTR [ebp-0x38],ch
  404a62:	pusha  
  404a63:	loopne 0x404aac
  404a65:	xchg   ebp,eax
  404a66:	pop    ds
  404a67:	inc    bp
  404a69:	(bad)  
  404a6b:	dec    ecx
  404a6c:	adc    eax,DWORD PTR [ebx]
  404a6e:	jb     0x404a3f
  404a70:	(bad)  
  404a72:	(bad)  
  404a73:	fcomp  QWORD PTR [ebp-0x1a95cd0a]
  404a79:	rcr    BYTE PTR [eax-0x25],0x5e
  404a7d:	fcomp  DWORD PTR [edi+0x738e25fb]
  404a83:	and    ecx,DWORD PTR [ecx+0x30cacc17]
  404a89:	and    DWORD PTR [ebp+0x382d78ba],ebp
  404a8f:	shl    BYTE PTR [ebx-0x452aa82a],1
  404a95:	pop    eax
  404a96:	and    BYTE PTR [eax+0x2b721268],cl
  404a9c:	cmp    eax,0xf4c38048
  404aa1:	stos   DWORD PTR es:[edi],eax
  404aa2:	xchg   DWORD PTR [ebp+eax*8+0x29],esi
  404aa6:	ins    DWORD PTR es:[edi],dx
  404aa7:	dec    ebx
  404aa8:	and    bl,0xed
  404aab:	jne    0x404aaf
  404aad:	sbb    eax,0x420c688d
  404ab2:	push   eax
  404ab3:	repz cdq 
  404ab5:	dec    eax
  404ab6:	rcr    ebx,cl
  404ab8:	out    0xb1,al
  404aba:	mov    edx,0xcccd3a5a
  404abf:	xor    bh,BYTE PTR [ecx]
  404ac1:	pop    ecx
  404ac2:	(bad)  
  404ac4:	jns    0x404aea
  404ac6:	add    al,0xb
  404ac8:	inc    esi
  404ac9:	dec    eax
  404aca:	push   DWORD PTR [eax+0x76cd3232]
  404ad0:	xchg   esp,eax
  404ad1:	xchg   ebx,eax
  404ad2:	iret   
  404ad3:	mov    ah,0x54
  404ad5:	jo     0x404a9f
  404ad7:	dec    edi
  404ad8:	and    dl,bh
  404ada:	sbb    DWORD PTR cs:[eax],0x9451e741
  404ae1:	scas   al,BYTE PTR es:[edi]
  404ae2:	cmp    ebx,DWORD PTR [esi]
  404ae4:	enter  0x822a,0xd4
  404ae8:	ss stos BYTE PTR es:[edi],al
  404aea:	imul   ecx,DWORD PTR [esi+0x18],0xd241747b
  404af1:	cmp    dl,cl
  404af3:	xchg   ecx,eax
  404af4:	push   0x7dce926f
  404af9:	inc    ebx
  404afa:	out    dx,eax
  404afb:	stos   BYTE PTR es:[edi],al
  404afc:	pop    eax
  404afd:	ins    DWORD PTR es:[edi],dx
  404afe:	pusha  
  404aff:	push   ebx
  404b00:	jae    0x404aca
  404b02:	push   edi
  404b03:	jmp    0xcb9c2ac8
  404b08:	ret    
  404b09:	ret    0x9013
  404b0c:	adc    edi,DWORD PTR [edx-0x4f2c24de]
  404b12:	push   0x26822454
  404b17:	jb     0x404af3
  404b19:	add    DWORD PTR [edx+ecx*8-0x2ae77acb],ecx
  404b20:	ss hlt 
  404b22:	jmp    0xc47e:0xee9a1e61
  404b29:	xor    ebp,ecx
  404b2b:	cmp    bl,al
  404b2d:	shl    DWORD PTR [ecx+eax*8],1
  404b30:	push   ss
  404b31:	pop    ds
  404b32:	push   eax
  404b33:	mov    ecx,edx
  404b35:	push   ss
  404b36:	push   0x75
  404b38:	aam    0x93
  404b3a:	popa   
  404b3b:	enter  0xb836,0xce
  404b3f:	iret   
  404b40:	jae    0x404b68
  404b42:	sbb    DWORD PTR [ebx+0x78fb6191],edi
  404b48:	and    BYTE PTR [esi-0x7c82e474],al
  404b4e:	xchg   ecx,eax
  404b4f:	mov    ebx,0x92a21d2d
  404b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b55:	jecxz  0x404baf
  404b57:	mov    esp,DWORD PTR [edi]
  404b59:	into   
  404b5a:	cmp    al,0xff
  404b5c:	jne    0x404b4b
  404b5e:	adc    bh,BYTE PTR [ebp-0x1b]
  404b61:	lods   al,BYTE PTR ds:[esi]
  404b62:	or     al,0xf7
  404b64:	scas   eax,DWORD PTR es:[edi]
  404b65:	mov    cl,0x24
  404b67:	je     0x404b49
  404b69:	jp     0x404b3d
  404b6b:	jmp    0xfe1e65d3
  404b70:	sub    eax,0x62d52dc1
  404b75:	or     esp,DWORD PTR [ebx+edx*8-0x72]
  404b79:	jmp    0x404bb7
  404b7b:	inc    edx
  404b7c:	jmp    0x125b9e09
  404b81:	xor    bh,BYTE PTR [eax+0x471716b]
  404b87:	fsubr  DWORD PTR [edx+0x5]
  404b8a:	cmp    esp,esi
  404b8c:	hlt    
  404b8d:	adc    eax,0x23142c0b
  404b92:	icebp  
  404b93:	pop    ds
  404b94:	xor    edi,ebx
  404b96:	pop    ecx
  404b97:	mov    ebp,0x8082cb71
  404b9c:	add    esp,eax
  404b9e:	ins    BYTE PTR es:[edi],dx
  404b9f:	test   eax,0x74a24a81
  404ba4:	dec    eax
  404ba5:	test   eax,0x74873e11
  404baa:	sbb    DWORD PTR [ebx-0x7a49ac51],eax
  404bb0:	sbb    eax,0x562cb821
  404bb5:	push   edx
  404bb6:	mov    ds:0x8d7b7a,eax
  404bbb:	dec    edx
  404bbc:	dec    dl
  404bbe:	rcl    BYTE PTR [ebp-0x72859a9f],1
  404bc4:	sbb    al,0xda
  404bc6:	or     al,0x3f
  404bc8:	aam    0x51
  404bca:	inc    ebx
  404bcb:	enter  0xf071,0xc0
  404bcf:	and    BYTE PTR [ebx+esi*4+0x19],0x71
  404bd4:	xchg   BYTE PTR [ebp-0x1a41ae5a],cl
  404bda:	dec    esi
  404bdb:	jecxz  0x404b8e
  404bdd:	push   ebp
  404bde:	inc    esp
  404bdf:	stc    
  404be0:	cwde   
  404be1:	jne    0x404c3f
  404be3:	loop   0x404c2a
  404be5:	or     dh,BYTE PTR [eax]
  404be7:	std    
  404be8:	push   ecx
  404be9:	mov    esi,0x5e39b477
  404bee:	inc    ecx
  404bef:	(bad)  
  404bf0:	(bad)  
  404bf1:	fld    DWORD PTR [ebx+0x4]
  404bf4:	ins    DWORD PTR es:[edi],dx
  404bf5:	sub    eax,0xb4ed4e26
  404bfa:	jmp    0x404bc7
  404bfc:	std    
  404bfd:	scas   eax,DWORD PTR es:[edi]
  404bfe:	mov    edi,DWORD PTR [edi-0xe]
  404c01:	out    0xf1,eax
  404c03:	mov    ds:0x6d4f1f62,eax
  404c08:	lea    ebp,cs:[edx]
  404c0b:	clc    
  404c0c:	sbb    esi,DWORD PTR [ecx+ebx*1+0x49c7db19]
  404c13:	dec    edi
  404c14:	mov    al,0xe0
  404c16:	ret    
  404c17:	loopne 0x404c86
  404c19:	nop
  404c1a:	das    
  404c1b:	xlat   BYTE PTR ds:[ebx]
  404c1c:	aam    0x6b
  404c1e:	dec    ebx
  404c1f:	rcr    BYTE PTR [ebx-0x6164a3f0],cl
  404c25:	or     DWORD PTR [edx+0x63c6866e],edi
  404c2b:	mov    ch,0x2b
  404c2d:	fst    QWORD PTR [ebp+0x7898f4ad]
  404c33:	cmp    cl,al
  404c35:	and    DWORD PTR [ebx],0xbfac834f
  404c3b:	or     al,dh
  404c3d:	dec    edi
  404c3e:	or     ah,0x82
  404c41:	scas   al,BYTE PTR es:[edi]
  404c42:	adc    al,0x1a
  404c44:	dec    ebx
  404c45:	sahf   
  404c46:	gs jmp 0x972efc21
  404c4c:	or     BYTE PTR [esi],al
  404c4e:	lods   eax,DWORD PTR ds:[esi]
  404c4f:	sahf   
  404c50:	mov    bh,0x8c
  404c52:	dec    esp
  404c53:	sub    BYTE PTR [edx-0xb],bl
  404c56:	and    edi,DWORD PTR [edi-0x27]
  404c59:	loop   0x404cbb
  404c5b:	adc    DWORD PTR [edx],0x24
  404c5e:	scas   eax,DWORD PTR es:[edi]
  404c5f:	push   0x723c082c
  404c64:	dec    ebx
  404c65:	mov    ch,0xea
  404c67:	sbb    ecx,DWORD PTR [edi+0x36927594]
  404c6d:	stos   DWORD PTR es:[edi],eax
  404c6e:	(bad)  
  404c6f:	mov    esi,0x8d17c910
  404c74:	les    esi,FWORD PTR [ebx-0x6b]
  404c77:	arpl   WORD PTR [edx+edx*8],bp
  404c7a:	sbb    ch,dh
  404c7c:	mov    BYTE PTR [edi+0x79],cl
  404c7f:	hlt    
  404c80:	ret    0x538f
  404c83:	nop
  404c84:	ficom  DWORD PTR [edx]
  404c86:	sub    eax,0x467b9ad8
  404c8b:	and    BYTE PTR [ebx+ebx*2],ch
  404c8e:	shl    bh,0xc3
  404c91:	dec    ebp
  404c92:	xchg   ebx,eax
  404c93:	mov    ebp,0x132df56b
  404c98:	and    DWORD PTR [eax-0xd2099f5],0xa31796bf
  404ca2:	test   DWORD PTR [ecx+ecx*1+0x60b7ea40],eax
  404ca9:	mov    esp,0xfa0430e3
  404cae:	cmp    ebp,DWORD PTR [ebx-0x5a]
  404cb1:	je     0x404c73
  404cb3:	fidiv  WORD PTR [eax+0x9]
  404cb6:	sub    cl,bh
  404cb8:	jecxz  0x404c69
  404cba:	pop    ss
  404cbb:	shl    DWORD PTR [edx],1
  404cbd:	cmc    
  404cbe:	pop    ds
  404cbf:	jbe    0x404c6c
  404cc1:	dec    eax
  404cc2:	mov    dh,0x1c
  404cc4:	mov    edi,0x32a4205f
  404cc9:	jge    0x404c79
  404ccb:	clc    
  404ccc:	(bad)  
  404ccd:	jl     0x404c78
  404ccf:	test   eax,0xc043878e
  404cd4:	ret    0xce00
  404cd7:	inc    edx
  404cd8:	push   esp
  404cd9:	retf   
  404cda:	dec    ebx
  404cdb:	das    
  404cdc:	(bad)
  404ce0:	xchg   edi,eax
  404ce1:	sbb    eax,0x96d6329d
  404ce6:	add    ch,0xd
  404ce9:	and    eax,0xc8c6a190
  404cee:	xlat   BYTE PTR ds:[ebx]
  404cef:	pop    ebx
  404cf0:	leave  
  404cf1:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cf3:	jno    0x404d3d
  404cf5:	mov    ah,0xd7
  404cf7:	ins    DWORD PTR es:[edi],dx
  404cf8:	jno    0x404cbc
  404cfa:	or     bh,ch
  404cfc:	xchg   BYTE PTR [esi+0x42],ah
  404cff:	sbb    ch,ch
  404d01:	push   cs
  404d02:	push   ecx
  404d03:	call   ecx
  404d05:	jmp    0x2262aa71
  404d0a:	push   es
  404d0b:	pop    ss
  404d0c:	xchg   edx,eax
  404d0d:	test   al,0xc4
  404d0f:	sub    eax,DWORD PTR [esi*4-0x13ca9822]
  404d16:	jne    0x404d25
  404d18:	sub    al,0x95
  404d1a:	je     0x404d4c
  404d1c:	add    ch,BYTE PTR ds:0x1772a5b5
  404d22:	jg     0x404d85
  404d24:	jge    0x404cc2
  404d26:	jb     0x404d75
  404d28:	jmp    0xa8f17d1d
  404d2d:	push   0xebf0e7e8
  404d32:	cmp    BYTE PTR [esi-0x57],dh
  404d35:	cld    
  404d36:	nop
  404d37:	push   0xfffffff1
  404d39:	sti    
  404d3a:	inc    ebx
  404d3b:	stos   DWORD PTR es:[edi],eax
  404d3c:	sar    DWORD PTR [ebp+0x6e],cl
  404d3f:	out    0xa,al
  404d41:	mov    esi,ds
  404d43:	ror    BYTE PTR [eax],0x9e
  404d46:	fs in  al,dx
  404d48:	icebp  
  404d49:	mov    ds:0xa424e8cf,eax
  404d4e:	(bad)  
  404d4f:	iret   
  404d50:	scas   al,BYTE PTR es:[edi]
  404d51:	aad    0x3d
  404d53:	push   esi
  404d54:	push   es
  404d55:	cmp    eax,0xc410e874
  404d5a:	test   DWORD PTR [eax],ecx
  404d5c:	push   es
  404d5d:	int3   
  404d5e:	push   0xffffff82
  404d60:	ret    
  404d61:	sub    bh,BYTE PTR [ebp-0x2b]
  404d64:	or     eax,0x8d405808
  404d69:	push   esp
  404d6a:	ret    0xdb49
  404d6d:	shr    ch,cl
  404d6f:	sub    BYTE PTR [ebp-0x8ca3457],0x90
  404d76:	ret    
  404d77:	mov    esi,ds
  404d79:	sub    eax,0xa0ab01d8
  404d7e:	outs   dx,DWORD PTR ds:[esi]
  404d7f:	dec    esp
  404d80:	mov    ds:0xae25812f,al
  404d85:	mov    bh,0x13
  404d87:	or     edx,ebx
  404d89:	mov    ss:0x60327f74,eax
  404d8f:	(bad)  
  404d91:	dec    ebp
  404d92:	add    edx,DWORD PTR [eax+0x35]
  404d95:	mov    fs,WORD PTR [eax]
  404d97:	ins    DWORD PTR es:[edi],dx
  404d98:	xchg   esp,eax
  404d99:	dec    edi
  404d9a:	sbb    ch,0xf5
  404d9d:	pop    esi
  404d9e:	ret    
  404d9f:	aam    0xa4
  404da1:	lods   al,BYTE PTR ds:[esi]
  404da2:	sub    ah,BYTE PTR [ebx-0x54]
  404da5:	dec    edi
  404da6:	int    0x6e
  404da8:	mov    es,WORD PTR [edx+0x2dc2c6a3]
  404dae:	push   0xffffff90
  404db0:	adc    al,0xeb
  404db2:	mov    ah,0x61
  404db4:	add    al,BYTE PTR [esi+edi*1-0x76e06f37]
  404dbb:	sbb    BYTE PTR [eax],bh
  404dbd:	add    DWORD PTR ds:0x84b8f7b8,0xf257af3
  404dc7:	xlat   BYTE PTR ds:[ebx]
  404dc8:	xor    eax,0xfad1224c
  404dcd:	(bad)  
  404dcf:	sub    al,0x9a
  404dd1:	test   al,0xa7
  404dd3:	or     ch,al
  404dd5:	retf   0xdd44
  404dd8:	(bad)  
  404dd9:	jns    0x404e2c
  404ddb:	mov    BYTE PTR [ecx-0x5e],bl
  404dde:	fisub  WORD PTR [ebx-0x64485fe]
  404de4:	jae    0x404d77
  404de6:	ss mov esi,0x8fada697
  404dec:	and    eax,edi
  404dee:	pop    ebx
  404def:	adc    DWORD PTR [ebp-0x2eef69c1],ebx
  404df5:	cmp    esp,DWORD PTR [edi]
  404df7:	out    0x54,al
  404df9:	jecxz  0x404dda
  404dfb:	neg    esi
  404dfd:	into   
  404dfe:	fbld   TBYTE PTR [esi-0x24]
  404e01:	pop    ds
  404e02:	xchg   ebx,eax
  404e03:	daa    
  404e04:	mov    eax,DWORD PTR [ebp+0xf0ddf1f]
  404e0a:	jmp    0x4131:0x6ab02f20
  404e11:	mov    eax,ds:0x1b5cc5b4
  404e16:	pop    esi
  404e17:	cdq    
  404e18:	xor    dl,BYTE PTR [edx]
  404e1a:	gs jae 0x404e34
  404e1d:	(bad)  
  404e1e:	enter  0xc885,0xf
  404e22:	adc    edi,DWORD PTR [ecx]
  404e24:	ret    
  404e25:	add    ebp,ebp
  404e27:	jbe    0x404e5e
  404e29:	dec    esp
  404e2a:	pop    es
  404e2b:	push   edi
  404e2c:	popf   
  404e2d:	icebp  
  404e2e:	cdq    
  404e2f:	and    bl,dl
  404e31:	adc    DWORD PTR [eax-0x4b],0xffffffb7
  404e35:	pminsw mm3,QWORD PTR ds:0xa6c3b10c
  404e3c:	sub    ebx,DWORD PTR [ecx+ecx*4+0x59]
  404e40:	inc    edx
  404e41:	xor    DWORD PTR [edi+edx*1-0x5e857df1],esp
  404e48:	ins    BYTE PTR es:[edi],dx
  404e49:	stos   BYTE PTR es:[edi],al
  404e4a:	mov    BYTE PTR [esp+ebp*2],dl
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	into   
  404e4f:	sbb    BYTE PTR [eax+edx*2],bl
  404e52:	xor    ebp,DWORD PTR [ebx+ebp*4]
  404e55:	inc    ebx
  404e56:	mov    ?,WORD PTR [ebx+0x5b658e33]
  404e5c:	fbstp  TBYTE PTR [ebx+0x83385fc]
  404e62:	sbb    BYTE PTR [ebx],0x26
  404e65:	cmp    al,0x22
  404e67:	mov    al,0xf5
  404e69:	mov    ch,0x25
  404e6b:	ins    BYTE PTR es:[edi],dx
  404e6c:	into   
  404e6d:	ret    
  404e6e:	sahf   
  404e6f:	mov    eax,0x1c3161e1
  404e74:	cmp    eax,0x2e86e3c1
  404e79:	inc    eax
  404e7a:	daa    
  404e7b:	sbb    edi,DWORD PTR [esi+esi*1-0x15]
  404e7f:	xchg   edi,eax
  404e80:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  404e82:	jns    0x404e35
  404e84:	xchg   edx,eax
  404e85:	inc    ebp
  404e86:	sbb    edx,DWORD PTR [ebp+0x24078083]
  404e8c:	imul   ebp,DWORD PTR [eax],0x60a98eb
  404e92:	aas    
  404e93:	(bad)  
  404e94:	and    ebx,edx
  404e96:	fprem1 
  404e98:	leave  
  404e99:	push   ss
  404e9a:	and    ch,BYTE PTR [ecx]
  404e9c:	pop    esp
  404e9d:	shl    BYTE PTR [edx-0x78],cl
  404ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ea1:	jne    0x404e53
  404ea3:	pop    esi
  404ea4:	add    ebx,ebp
  404ea6:	push   cs
  404ea7:	mov    BYTE PTR [eax+0x66],0x67
  404eab:	sbb    al,0x85
  404ead:	adc    esi,DWORD PTR [edx+0x367bfa08]
  404eb3:	popf   
  404eb4:	ss jp  0x404ec9
  404eb7:	lea    edi,[ebp-0x76]
  404eba:	ret    
  404ebb:	cmp    eax,0x74cd1307
  404ec0:	test   DWORD PTR [ebx-0x36],edi
  404ec3:	rcr    eax,1
  404ec5:	fucomip st,st(0)
  404ec7:	add    eax,0x8c3653d5
  404ecc:	stos   BYTE PTR es:[edi],al
  404ecd:	leave  
  404ece:	sub    eax,0x505b661f
  404ed3:	sbb    dh,BYTE PTR [edi+0x7e]
  404ed6:	xor    edx,esp
  404ed8:	pop    edx
  404ed9:	pop    ebx
  404eda:	or     esi,DWORD PTR [eax+0x6600aa02]
  404ee0:	sub    edi,DWORD PTR [eax]
  404ee2:	cli    
  404ee3:	scas   eax,DWORD PTR es:[edi]
  404ee4:	mov    edx,0x205e178
  404ee9:	in     eax,dx
  404eea:	dec    ebp
  404eeb:	pop    ebx
  404eec:	(bad)  
  404eed:	pop    ebx
  404eee:	and    al,0x9c
  404ef0:	push   edx
  404ef1:	inc    ecx
  404ef2:	xchg   esi,eax
  404ef3:	ds inc esi
  404ef5:	cs popf 
  404ef7:	push   esp
  404ef8:	pop    ebp
  404ef9:	add    bh,BYTE PTR [edx+0x49]
  404efc:	fnstsw WORD PTR [ebx-0x5a0b2215]
  404f02:	cs and al,0x8b
  404f06:	iret   
  404f07:	jb     0x404f1e
  404f09:	sub    bl,BYTE PTR [ebp+edx*1+0x65bf39dd]
  404f10:	mov    ch,0xee
  404f12:	push   ebp
  404f13:	pop    esp
  404f14:	retfw  
  404f16:	mov    ds,WORD PTR [ecx]
  404f18:	and    BYTE PTR [eax-0x66],0xe2
  404f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f1d:	fldcw  WORD PTR [ecx+0x63]
  404f20:	(bad)  
  404f21:	fcmovnbe st,st(4)
  404f23:	scas   eax,DWORD PTR es:[edi]
  404f24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f25:	sub    ecx,DWORD PTR [eax+ecx*8-0x459e7603]
  404f2c:	sub    dl,BYTE PTR ds:0xd8261ebe
  404f32:	nop
  404f33:	xchg   ebx,eax
  404f34:	cld    
  404f35:	aam    0x83
  404f37:	cmp    al,0x2b
  404f39:	fisubr WORD PTR ds:0x4a7ba5c4
  404f3f:	and    eax,0x7d4d8ee3
  404f44:	push   cs
  404f45:	xor    BYTE PTR [eax+0x76],ch
  404f48:	imul   edi,DWORD PTR [edx],0xffffffd6
  404f4b:	rcl    DWORD PTR [esi],cl
  404f4d:	jmp    0x404f1a
  404f4f:	lods   eax,DWORD PTR ds:[esi]
  404f50:	ret    0xbe5
  404f53:	js     0x404f59
  404f55:	in     al,dx
  404f56:	lahf   
  404f57:	imul   esp,DWORD PTR [edx-0x30],0xed36476b
  404f5e:	mov    ch,dl
  404f60:	lods   eax,DWORD PTR ds:[esi]
  404f61:	mov    ch,0x27
  404f63:	mov    ecx,0x7d54821c
  404f68:	pop    ebp
  404f69:	sub    ebp,DWORD PTR ds:0x63d9e366
  404f6f:	adc    DWORD PTR [edi+0x4b],eax
  404f72:	ja     0x404fce
  404f74:	pop    ecx
  404f75:	(bad)  
  404f76:	test   DWORD PTR [ecx+0x54],0x67a1f324
  404f7d:	sub    eax,0x56c4e3ba
  404f82:	fldenv [edx-0x77]
  404f85:	dec    esp
  404f86:	stc    
  404f87:	in     eax,0x41
  404f89:	add    DWORD PTR [edx+edi*1+0x64],ecx
  404f8d:	leave  
  404f8e:	ret    
  404f8f:	fsubr  DWORD PTR [edx+0x607052b]
  404f95:	stos   DWORD PTR es:[edi],eax
  404f96:	fcomp  QWORD PTR [edi-0x67]
  404f99:	mov    bl,0x72
  404f9b:	shr    DWORD PTR [ecx],1
  404f9d:	adc    al,0xf0
  404f9f:	push   ebp
  404fa0:	sbb    bh,BYTE PTR [eax+0x1f]
  404fa3:	int    0x72
  404fa5:	enter  0xcf5e,0xbd
  404fa9:	int3   
  404faa:	icebp  
  404fab:	xchg   DWORD PTR [ecx+eiz*8-0x602a1766],eax
  404fb2:	pop    ds
  404fb3:	popf   
  404fb4:	xor    eax,DWORD PTR [ecx]
  404fb6:	xor    DWORD PTR [eax+0x183b916f],ebx
  404fbc:	dec    edx
  404fbd:	int    0xeb
  404fbf:	fcom   QWORD PTR [esi+0x61]
  404fc2:	ja     0x404f5a
  404fc4:	jle    0x405014
  404fc6:	in     al,dx
  404fc7:	mov    DWORD PTR [eax+0x72],0xd8bdfbf9
  404fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fcf:	outs   dx,BYTE PTR ds:[esi]
  404fd0:	and    al,0x84
  404fd2:	push   esi
  404fd3:	stos   DWORD PTR es:[edi],eax
  404fd4:	add    eax,0x2ab1de85
  404fd9:	jle    0x405013
  404fdb:	pop    esi
  404fdc:	mov    al,0x80
  404fde:	in     al,dx
  404fdf:	mov    al,ds:0xe9462cc6
  404fe4:	mov    ebp,0x26a01848
  404fe9:	mov    edi,0x59580fa7
  404fee:	test   BYTE PTR [eax+esi*1+0x42],dh
  404ff2:	xchg   esi,eax
  404ff3:	(bad)  
  404ff5:	lahf   
  404ff6:	sti    
  404ff7:	(bad)  
  404ff8:	push   esp
  404ff9:	push   edi
  404ffa:	mov    WORD PTR [esi-0x60],es
  404ffd:	mov    dl,0x34
  404fff:	sbb    BYTE PTR [esi+0x1ddc4044],0x97
  405006:	adc    eax,0xf08be4f9
  40500b:	xor    eax,0x8032dece
  405010:	sub    eax,0x681c7dbf
  405015:	adc    DWORD PTR [ebx],edx
  405017:	cli    
  405018:	into   
  405019:	dec    ecx
  40501a:	jmp    0x57e6:0x6bbaf985
  405021:	xchg   edi,eax
  405022:	jmp    0x405064
  405024:	adc    eax,0x57f7bba5
  405029:	shl    DWORD PTR [edi+esi*4+0x5edeb549],1
  405030:	es xchg edx,eax
  405032:	popf   
  405033:	arpl   WORD PTR [ebp+0x5f],dx
  405036:	mov    BYTE PTR [ebx+0x22d0e1c9],ch
  40503c:	sub    al,0xfe
  40503e:	pop    ebx
  40503f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405040:	imul   esi,DWORD PTR [edx+0x19],0xd33d3f5c
  405047:	fs ss push 0xffffff93
  40504b:	sti    
  40504c:	dec    esp
  40504d:	add    dl,dl
  40504f:	or     ebx,DWORD PTR [edx+0x0]
  405052:	adc    eax,0xa198313a
  405057:	push   eax
  405058:	ins    DWORD PTR es:[edi],dx
  405059:	dec    edi
  40505a:	pop    edx
  40505b:	sub    ebp,DWORD PTR [edi+0x75]
  40505e:	std    
  40505f:	bound  ebx,QWORD PTR [edi+0x30]
  405062:	push   0x7d
  405064:	xchg   esi,eax
  405065:	push   es
  405066:	xchg   edi,eax
  405067:	(bad)  
  405068:	loopne 0x40508d
  40506a:	mov    dl,0xfd
  40506c:	and    DWORD PTR [eax],eax
  40506e:	xchg   ebx,eax
  40506f:	inc    esp
  405070:	or     esp,DWORD PTR [ecx-0x21]
  405073:	or     eax,0x567281a6
  405078:	jp     0x405084
  40507a:	mov    eax,ds:0x9f332110
  40507f:	cwde   
  405080:	jecxz  0x40504b
  405082:	(bad)  
  405083:	rcr    DWORD PTR [ecx+0x6fd9194a],cl
  405089:	repz push esi
  40508b:	ins    DWORD PTR es:[edi],dx
  40508c:	inc    esi
  40508d:	inc    edx
  40508e:	out    dx,eax
  40508f:	xor    edi,DWORD PTR [esi-0x323e24ac]
  405095:	sbb    BYTE PTR [ecx-0x10f22f7d],ch
  40509b:	daa    
  40509c:	cdq    
  40509d:	(bad)  
  40509e:	fmul   QWORD PTR [ebx+ecx*4]
  4050a1:	popa   
  4050a2:	enter  0xb255,0x68
  4050a6:	icebp  
  4050a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050a8:	dec    esi
  4050a9:	scas   eax,DWORD PTR es:[edi]
  4050aa:	dec    esi
  4050ab:	mov    dh,0xb7
  4050ad:	iret   
  4050ae:	add    BYTE PTR [edx+0x4055c9aa],al
  4050b4:	(bad)  
  4050b6:	mov    ds:0x86027b39,eax
  4050bb:	sub    al,0xab
  4050bd:	pop    eax
  4050be:	sub    ecx,esp
  4050c0:	test   DWORD PTR [eax+eax*2],ebp
  4050c3:	inc    esi
  4050c4:	jne    0x405064
  4050c6:	or     DWORD PTR [edi],edi
  4050c8:	out    0xe1,al
  4050ca:	rcl    DWORD PTR [esp+edx*8-0x69e9a198],0x52
  4050d2:	int3   
  4050d3:	dec    esp
  4050d4:	lds    esi,FWORD PTR [esi]
  4050d6:	xlat   BYTE PTR ds:[ebx]
  4050d8:	push   eax
  4050d9:	lods   eax,DWORD PTR ds:[esi]
  4050da:	mov    bh,0xa1
  4050dc:	add    dh,bh
  4050de:	sub    DWORD PTR [esp+ecx*1+0x65c91c1f],0xffffffcb
  4050e6:	shl    BYTE PTR [edi],0xd6
  4050e9:	es (bad) 
  4050eb:	mov    ebx,0x60db36f6
  4050f0:	dec    ecx
  4050f1:	(bad)  
  4050f2:	jmp    0xfdb10304
  4050f7:	enter  0x6bb1,0x85
  4050fb:	in     al,dx
  4050fc:	mov    esp,0x81dd7323
  405101:	adc    eax,0x2aae532
  405106:	and    BYTE PTR [ebx],0x60
  405109:	jmp    DWORD PTR [esi+0x70]
  40510c:	cwde   
  40510d:	arpl   WORD PTR [edx+0x36],cx
  405110:	retf   
  405111:	mov    ds:0xaca2b7aa,eax
  405116:	into   
  405117:	mov    dh,0x94
  405119:	mov    dh,0x6a
  40511b:	adc    cl,BYTE PTR [ebx-0x51]
  40511e:	stc    
  40511f:	pop    eax
  405120:	gs daa 
  405122:	mov    edi,0xfd7b24d7
  405127:	dec    ebp
  405128:	fstp   QWORD PTR [edx+ecx*2-0x6069e5b6]
  40512f:	sub    eax,0x3b2c7654
  405134:	std    
  405135:	dec    ebx
  405136:	imul   eax,DWORD PTR [ebx-0x5ff8aeab],0xffffffc0
  40513d:	mul    BYTE PTR [ebx+0x60]
  405140:	or     ebx,DWORD PTR [ecx-0x20]
  405143:	sbb    al,0x9d
  405145:	test   DWORD PTR [ebx-0x31],ecx
  405148:	jge    0x4050e9
  40514a:	pop    edi
  40514b:	sbb    esi,edx
  40514d:	std    
  40514e:	pusha  
  40514f:	cld    
  405150:	and    DWORD PTR ds:0x70d9c028,esp
  405156:	jnp    0x4050f4
  405158:	ficomp DWORD PTR [ebp-0x2]
  40515b:	inc    ebx
  40515c:	test   al,0x9d
  40515e:	sub    BYTE PTR [edx*2-0x1ca40115],dh
  405165:	es fs shr esi,cl
  405169:	imul   eax,DWORD PTR [ebx+ecx*2+0x66f0df36],0x44
  405171:	ins    DWORD PTR es:[edi],dx
  405172:	mov    cs,WORD PTR [edi-0x5e98c993]
  405178:	retf   
  405179:	fnsave [ecx+0x68]
  40517c:	pop    esp
  40517d:	mov    ah,0xa8
  40517f:	mov    ah,0xa8
  405181:	or     eax,0xe627ffe2
  405186:	jb     0x4051f6
  405188:	push   ebx
  405189:	adc    edi,edx
  40518b:	push   0x42cdc861
  405190:	xchg   esi,eax
  405191:	dec    esi
  405192:	into   
  405193:	cmp    BYTE PTR [esi],dh
  405195:	jg     0x405133
  405197:	pop    edx
  405199:	push   cs
  40519a:	rcr    DWORD PTR [eax-0x2d],cl
  40519d:	call   0xd9debe38
  4051a2:	jno    0x4051dc
  4051a4:	xor    bl,BYTE PTR [eax+0x5c]
  4051a7:	push   es
  4051a8:	les    ebp,FWORD PTR [esi-0x6f]
  4051ab:	and    DWORD PTR [ebx-0x3df8de0c],esp
  4051b1:	in     eax,dx
  4051b2:	pop    eax
  4051b3:	push   eax
  4051b4:	sahf   
  4051b5:	retf   0xa1b0
  4051b8:	xchg   esi,eax
  4051b9:	iret   
  4051ba:	aas    
  4051bb:	stos   BYTE PTR es:[edi],al
  4051bc:	sahf   
  4051bd:	jmp    0x5aeb0532
  4051c2:	fisttp QWORD PTR [ecx+eiz*2-0x5]
  4051c6:	jl     0x4051db
  4051c8:	jo     0x4051ce
  4051ca:	cld    
  4051cb:	jmp    0x23b4cc86
  4051d0:	jmp    0x40516d
  4051d2:	aas    
  4051d3:	mov    ebx,0x53bc6fe2
  4051d8:	fcom   QWORD PTR [esi+0x1a]
  4051db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051dc:	xchg   edx,eax
  4051dd:	popf   
  4051de:	cmp    eax,0x39c27396
  4051e3:	(bad)  
  4051e4:	dec    esp
  4051e5:	xchg   esp,eax
  4051e6:	fucom  st(7)
  4051e8:	aam    0x4c
  4051ea:	xor    cl,BYTE PTR [esp+edi*1+0x2d]
  4051ee:	(bad)  
  4051ef:	xor    BYTE PTR [ecx+0x153ec0a7],dl
  4051f5:	sbb    al,0xea
  4051f7:	lods   eax,DWORD PTR ds:[esi]
  4051f8:	ret    0xefeb
  4051fb:	mov    ch,BYTE PTR [edi]
  4051fd:	pop    es
  4051fe:	ror    BYTE PTR [ecx-0x1e],0x1b
  405202:	xchg   edx,eax
  405203:	aaa    
  405204:	push   0xdae991a7
  405209:	push   0xd7a6ecb6
  40520e:	std    
  40520f:	pop    ebp
  405210:	jle    0x4051a0
  405212:	inc    edx
  405213:	add    BYTE PTR [ebx],cl
  405215:	sub    al,BYTE PTR [esi-0x38b24ce7]
  40521b:	das    
  40521c:	jmp    0x96f2bf66
  405221:	dec    edx
  405222:	xor    ch,dh
  405224:	push   cs
  405225:	jge    0x405237
  405227:	outs   dx,BYTE PTR ds:[esi]
  405228:	mov    esp,0xcf632426
  40522d:	or     al,BYTE PTR [edx]
  40522f:	(bad)  
  405230:	mov    ah,0x94
  405232:	and    al,0x26
  405234:	sub    DWORD PTR [edx+edi*1+0x2023d6ac],esi
  40523b:	popa   
  40523c:	sub    DWORD PTR [edx+0x2a],esi
  40523f:	sbb    ch,ch
  405241:	shr    DWORD PTR [ebp+0xb],1
  405244:	xor    edx,DWORD PTR [esi-0x780487a4]
  40524a:	inc    ecx
  40524b:	cmp    eax,0x4297aacd
  405251:	ins    BYTE PTR es:[edi],dx
  405252:	sbb    al,0x9d
  405254:	(bad)  
  405255:	cmp    eax,0xbc721c19
  40525a:	rcl    BYTE PTR [edi+0x736f701f],1
  405260:	fdivr  DWORD PTR [eax-0x63]
  405263:	cmp    BYTE PTR [ebp-0x50],dh
  405266:	or     eax,0x8ad01
  40526b:	(bad)  
  40526c:	aad    0x42
  40526e:	mov    ds:0x7cce373c,al
  405273:	stc    
  405274:	xlat   BYTE PTR ds:[ebx]
  405275:	mov    eax,ds:0xb04f7cb7
  40527a:	(bad)  
  40527b:	call   0xc5916599
  405280:	test   BYTE PTR [ebx+0x6bfb4e22],bl
  405286:	and    eax,0x914809bc
  40528b:	pop    ebp
  40528c:	leave  
  40528d:	inc    esp
  40528e:	mov    dl,0xbd
  405290:	ret    
  405291:	jmp    0x4052ce
  405293:	adc    bh,BYTE PTR [edx-0x17d938cb]
  405299:	jecxz  0x4052c9
  40529b:	mov    ebx,0x4d9fb225
  4052a0:	jmp    0x405282
  4052a2:	push   es
  4052a3:	mov    edi,0xa61c4e64
  4052a8:	addr16 mov dl,0xde
  4052ab:	sbb    ah,ch
  4052ad:	popa   
  4052ae:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b0:	jo     0x4052d2
  4052b2:	xchg   ebp,eax
  4052b4:	daa    
  4052b5:	(bad)  
  4052b6:	mov    eax,ds:0x761f023e
  4052bb:	ss scas eax,DWORD PTR es:[edi]
  4052bd:	pop    edi
  4052be:	dec    ecx
  4052bf:	pushf  
  4052c0:	fcomp  QWORD PTR ds:0xe33fd285
  4052c6:	popa   
  4052c7:	xor    bh,BYTE PTR [eax+0x70503408]
  4052cd:	inc    edx
  4052ce:	jg     0x40533a
  4052d0:	ret    0xeb3
  4052d3:	inc    esi
  4052d4:	jg     0x40526c
  4052d6:	cmp    ecx,DWORD PTR [ebx]
  4052d8:	and    BYTE PTR [ebp+0x3c],ah
  4052db:	cmp    al,0x3
  4052dd:	out    0x58,al
  4052df:	push   0x36
  4052e1:	xor    bl,BYTE PTR [eax]
  4052e3:	xor    ebp,DWORD PTR [ecx+0x37]
  4052e6:	adc    al,0xc2
  4052e8:	or     al,0xfb
  4052ea:	test   bh,dl
  4052ec:	sbb    eax,0xed0f9b3f
  4052f1:	fs mov ebp,0x9673a163
  4052f7:	(bad)  
  4052f8:	test   eax,0xf8a5efbd
  4052fd:	pop    edx
  4052fe:	push   es
  4052ff:	mov    gs,WORD PTR [ecx+0x76d68529]
  405305:	pop    edi
  405306:	inc    ebp
  405307:	pop    es
  405308:	je     0x40536f
  40530a:	fisub  DWORD PTR [edi]
  40530c:	outs   dx,DWORD PTR ds:[esi]
  40530d:	xchg   DWORD PTR [ebx+0x57],ebp
  405310:	pop    ebp
  405311:	sbb    BYTE PTR [ebp+0xf],dl
  405314:	adc    ch,bl
  405316:	xlat   BYTE PTR ds:[ebx]
  405317:	cmp    DWORD PTR [ecx+0x53],eax
  40531a:	ins    DWORD PTR es:[edi],dx
  40531b:	sbb    edx,esp
  40531d:	add    ebp,ecx
  40531f:	ret    0x73b7
  405322:	repnz and BYTE PTR [ebx-0x5c71fb0e],bh
  405329:	jge    0x4053a1
  40532b:	out    dx,al
  40532c:	es sub eax,0xbce51b4a
  405332:	mov    edi,0xd620d6ab
  405337:	ja     0x4052c7
  405339:	add    eax,0x4607c74d
  40533e:	pop    ebx
  40533f:	xchg   edi,eax
  405340:	test   al,0x7d
  405342:	mov    BYTE PTR [esi-0x37],al
  405345:	or     al,0x89
  405347:	outs   dx,BYTE PTR ds:[esi]
  405348:	jb     0x4052f9
  40534a:	jmp    0x7ddba691
  40534f:	adc    DWORD PTR [esi-0x7c79bf25],edx
  405355:	out    0x42,al
  405357:	cmp    eax,0x33ad6575
  40535c:	and    bl,dl
  40535e:	(bad)  
  40535f:	mov    dl,0x5f
  405361:	mov    cl,0x3
  405363:	neg    DWORD PTR [edi+eax*2-0x4d]
  405367:	ins    DWORD PTR es:[edi],dx
  405368:	inc    edi
  405369:	dec    ecx
  40536a:	pop    edi
  40536b:	dec    esi
  40536c:	push   es
  40536d:	ins    DWORD PTR es:[edi],dx
  40536e:	pop    ebx
  40536f:	mov    ebp,0xc5a0e662
  405374:	and    eax,0xe73b1a37
  405379:	add    ah,BYTE PTR [ebx-0x198b639e]
  40537f:	mov    ds:0x400107f4,eax
  405384:	jbe    0x405356
  405386:	sbb    bl,bh
  405388:	adc    esp,esp
  40538a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40538b:	test   BYTE PTR [esi-0x118998f1],ah
  405391:	cmc    
  405392:	scas   eax,DWORD PTR es:[edi]
  405393:	(bad)  
  405394:	stos   BYTE PTR es:[edi],al
  405395:	add    BYTE PTR [esi+edx*4-0x171ed064],dl
  40539c:	add    cl,al
  40539e:	rcr    DWORD PTR [edi+esi*2-0x335b3921],0xda
  4053a6:	(bad)  
  4053a7:	jmp    0xae:0xe8387b72
  4053ae:	pop    esp
  4053af:	iret   
  4053b0:	scas   al,BYTE PTR es:[edi]
  4053b1:	adc    al,0x4
  4053b3:	repz mov bl,0x26
  4053b6:	jmp    0x2fbc:0xe7538ff6
  4053bd:	daa    
  4053be:	lods   al,BYTE PTR ds:[esi]
  4053bf:	jb     0x405431
  4053c1:	jns    0x4053ba
  4053c3:	add    DWORD PTR [ebx+0x9bcc515],ebp
  4053c9:	and    ecx,eax
  4053cb:	pop    ds
  4053cc:	cmp    eax,0xd3fef372
  4053d1:	inc    esp
  4053d2:	push   es
  4053d3:	and    eax,0xf6f02ed9
  4053d8:	push   ss
  4053d9:	in     al,0x6b
  4053db:	dec    edx
  4053dc:	addr16 pop esp
  4053de:	lahf   
  4053df:	or     al,0x2d
  4053e1:	or     esi,ecx
  4053e3:	jo     0x405446
  4053e5:	jns    0x405442
  4053e7:	pop    es
  4053e8:	xlat   BYTE PTR ds:[ebx]
  4053e9:	pop    ebx
  4053ea:	jb     0x405412
  4053ec:	add    dh,BYTE PTR [edi-0x4ded4b63]
  4053f2:	popa   
  4053f3:	retf   0x1322
  4053f6:	sbb    al,0x0
  4053f8:	jno    0x405406
  4053fa:	cmc    
  4053fb:	dec    ebp
  4053fc:	and    esp,ecx
  4053fe:	(bad)  
  4053ff:	clc    
  405400:	jmp    0xcd669007
  405405:	and    ebp,DWORD PTR [ebx]
  405407:	outs   dx,BYTE PTR ds:[esi]
  405408:	or     DWORD PTR [ebp-0x6f],edi
  40540b:	outs   dx,DWORD PTR ds:[esi]
  40540c:	push   0x64
  40540e:	sub    eax,0xb7cb2443
  405413:	loope  0x405397
  405415:	lds    esi,FWORD PTR [esi+0x4b8415ad]
  40541b:	popf   
  40541c:	bound  edx,QWORD PTR [esi+0x6bbfb00]
  405422:	jne    0x4053e2
  405424:	(bad)  
  405425:	cli    
  405426:	mov    ds:0x564203ca,al
  40542b:	repnz mov bl,dl
  40542e:	cs sub eax,edi
  405431:	inc    DWORD PTR [eax+0x19]
  405434:	cwde   
  405435:	push   edx
  405436:	xchg   edx,eax
  405437:	std    
  405438:	dec    esp
  405439:	dec    cx
  40543b:	mov    dh,0x93
  40543d:	mov    DWORD PTR [ebp+0x46],0x15db4784
  405444:	arpl   WORD PTR [edi+0x50],bx
  405447:	repz loop 0x4054ba
  40544a:	cs repnz daa 
  40544d:	fwait
  40544e:	jecxz  0x40547d
  405450:	jmp    0x56879197
  405455:	add    BYTE PTR [ecx-0x44],ah
  405458:	push   ds
  405459:	sub    esi,DWORD PTR [ebp-0x6f]
  40545c:	jns    0x405436
  40545e:	inc    ebx
  40545f:	fidivr DWORD PTR [ebx]
  405461:	cmp    esp,DWORD PTR [edi-0x5e]
  405464:	add    BYTE PTR [edx],dh
  405466:	lods   eax,DWORD PTR ds:[esi]
  405467:	xlat   BYTE PTR ds:[ebx]
  405468:	js     0x40546e
  40546a:	and    eax,0xc52135f2
  40546f:	cmc    
  405470:	push   eax
  405471:	or     eax,0xffffff8f
  405474:	pusha  
  405475:	mov    al,ds:0x7b84c257
  40547a:	cmp    eax,DWORD PTR [ebx-0x51]
  40547d:	popf   
  40547e:	jnp    0x40546c
  405480:	jg     0x40545e
  405482:	or     al,0x32
  405484:	add    DWORD PTR [edx],0x6511da17
  40548a:	loopne 0x4054eb
  40548c:	pop    ds
  40548d:	jle    0x40547f
  40548f:	les    ebp,FWORD PTR ds:0x9b0a925f
  405495:	ja     0x405441
  405497:	push   0xb
  405499:	jge    0x4054fa
  40549b:	mov    eax,0x60569c4
  4054a0:	mov    edi,0x1eef0944
  4054a5:	jb     0x40548c
  4054a7:	jmp    0x40544e
  4054a9:	dec    ebp
  4054aa:	pop    ecx
  4054ab:	inc    ecx
  4054ac:	sub    DWORD PTR [ebp+esi*2+0x21],edx
  4054b0:	inc    eax
  4054b1:	jns    0x40544b
  4054b3:	jnp    0x405517
  4054b5:	retf   0x5860
  4054b8:	cmc    
  4054b9:	pop    ecx
  4054ba:	ins    DWORD PTR es:[edi],dx
  4054bb:	or     BYTE PTR es:[eax],al
  4054be:	pop    eax
  4054bf:	lock xlat BYTE PTR ds:[ebx]
  4054c1:	jne    0x405490
  4054c3:	and    DWORD PTR es:[edx+ebp*8],ebp
  4054c7:	rcr    bl,1
  4054c9:	imul   edx,DWORD PTR [esi],0xd799e467
  4054cf:	out    dx,al
  4054d0:	xchg   DWORD PTR [ecx-0x2651b9ad],ebp
  4054d6:	push   0x8f24c8c4
  4054db:	(bad)  
  4054dc:	and    BYTE PTR [ecx],ch
  4054de:	add    al,BYTE PTR [ebx+0x28]
  4054e1:	test   eax,0xef229291
  4054e6:	iret   
  4054e7:	push   ds
  4054e8:	cdq    
  4054e9:	in     al,0x60
  4054eb:	adc    al,0x27
  4054ee:	xchg   esp,eax
  4054ef:	daa    
  4054f0:	dec    edx
  4054f1:	fstp   DWORD PTR [eax]
  4054f3:	sbb    DWORD PTR [esi-0x5034061],0x72f97fbd
  4054fd:	cs push es
  4054ff:	jecxz  0x405537
  405501:	stos   DWORD PTR es:[edi],eax
  405502:	daa    
  405503:	cmp    BYTE PTR [eax+0x6c4fc21e],0x20
  40550a:	push   ecx
  40550b:	in     eax,0xdc
  40550d:	jmp    0x40557d
  40550f:	jmp    0x5af2fd13
  405514:	and    DWORD PTR [eax+eax*4+0x50d0e945],edx
  40551b:	push   ecx
  40551c:	xchg   BYTE PTR [esi+0xcface0c],dl
  405522:	call   0xfb77:0xe00ac27
  405529:	jmp    0xdd75:0x6dae44d
  405530:	add    eax,0x6e9c764c
  405535:	mov    ecx,0x1affa32e
  40553a:	(bad)  
  40553c:	push   ss
  40553d:	sbb    bl,bl
  40553f:	popf   
  405540:	ret    
  405541:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405542:	into   
  405543:	in     eax,0x27
  405545:	push   cs
  405546:	adc    al,BYTE PTR [edi-0x27]
  405549:	cmp    DWORD PTR [ebx],edx
  40554b:	pop    edi
  40554c:	adc    dl,BYTE PTR [ecx-0x369c2e9c]
  405552:	mov    edx,0x170aaad0
  405557:	jo     0x40557b
  405559:	test   al,0x43
  40555b:	mov    eax,0xbc34f940
  405560:	les    ebx,FWORD PTR [esi+0x717de977]
  405566:	into   
  405567:	out    0x96,eax
  405569:	push   es
  40556a:	ret    0x3f57
  40556d:	ror    DWORD PTR [edx+0x53292dec],0xc7
  405574:	test   eax,0xeda53129
  405579:	addr16 imul al
  40557c:	mov    bh,0x2d
  40557e:	cwde   
  40557f:	cmp    esp,esi
  405581:	enter  0xa382,0xd5
  405585:	pop    eax
  405586:	sbb    BYTE PTR [edx-0x1c71a54a],0x4e
  40558d:	cli    
  40558e:	mov    bl,0x39
  405590:	inc    ecx
  405591:	icebp  
  405592:	add    ebx,esp
  405594:	push   edx
  405595:	pop    ss
  405596:	add    al,ch
  405598:	loop   0x405591
  40559a:	and    edx,ebx
  40559c:	add    eax,0x358202cd
  4055a1:	mov    ds:0x3070f3a,al
  4055a6:	mov    edx,0x121d210a
  4055ab:	or     bl,BYTE PTR [ecx+0x25c0ccb7]
  4055b1:	push   0xfffffffe
  4055b3:	outs   dx,BYTE PTR ds:[esi]
  4055b4:	call   0xaa1d0b90
  4055b9:	jp     0x4055fe
  4055bb:	jg     0x40558f
  4055bd:	mov    eax,0x7bcf3e14
  4055c2:	lods   al,BYTE PTR ds:[esi]
  4055c3:	repnz cmp edi,ebp
  4055c6:	shr    DWORD PTR [edx],1
  4055c8:	jge    0x40562f
  4055ca:	ins    BYTE PTR es:[edi],dx
  4055cb:	mov    al,ds:0x4b2da28
  4055d0:	inc    edi
  4055d1:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055d3:	mov    bl,0x65
  4055d5:	stos   DWORD PTR es:[edi],eax
  4055d6:	retf   
  4055d7:	adc    BYTE PTR [edi-0x6f8bbfba],al
  4055dd:	mov    dl,0xc6
  4055df:	clc    
  4055e0:	aam    0xad
  4055e2:	xor    DWORD PTR [eax+0x4cc69fd1],eax
  4055e8:	adc    bh,BYTE PTR [esp+edi*2-0x75]
  4055ec:	aas    
  4055ed:	gs addr16 dec ebp
  4055f0:	repz or ah,BYTE PTR [ebp+ebx*1-0x6a7890b]
  4055f8:	inc    esp
  4055f9:	xor    ecx,edx
  4055fb:	mov    bl,0xd
  4055fd:	sub    al,0xf3
  4055ff:	push   ecx
  405600:	sar    bl,1
  405602:	mov    WORD PTR [ebx+0x11],ss
  405605:	cmp    eax,0x8309c5d9
  40560a:	retf   0xa262
  40560d:	push   ds
  40560e:	fcmovbe st,st(3)
  405610:	mov    ebx,0xf77baf66
  405615:	into   
  405616:	dec    ecx
  405617:	aaa    
  405618:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405619:	mov    eax,ds:0xca1ba611
  40561e:	ss push edi
  405620:	fcomi  st,st(1)
  405622:	add    bl,BYTE PTR [edx]
  405624:	loop   0x405693
  405626:	jmp    0x8b55:0x8485feda
  40562d:	retf   0xa669
  405630:	dec    eax
  405631:	xlat   BYTE PTR ds:[ebx]
  405632:	sub    DWORD PTR [edx+0x3dccdb1d],edx
  405638:	les    ebx,FWORD PTR [ebp-0x76442b48]
  40563e:	adc    bl,BYTE PTR [eax+0x72f0a1c8]
  405644:	pop    ss
  405645:	fld    QWORD PTR [edx+0x4a]
  405648:	jb     0x405625
  40564a:	es fwait
  40564c:	xor    BYTE PTR [esi-0x26],dh
  40564f:	cld    
  405650:	or     eax,0x59ceaeca
  405655:	je     0x405627
  405657:	adc    al,0xba
  405659:	jl     0x4055df
  40565b:	add    al,0xad
  40565d:	iret   
  40565e:	mov    BYTE PTR [ebx+eiz*4+0x6],al
  405662:	mov    edx,ebp
  405664:	popa   
  405665:	jmp    0xfa10cbc9
  40566a:	and    dl,BYTE PTR [ebx-0x538f339d]
  405670:	adc    ecx,DWORD PTR [ebp-0x3a016f41]
  405676:	mov    edi,0xc026e39d
  40567b:	nop
  40567c:	push   esi
  40567d:	push   esi
  40567e:	cs fdivr st(0),st
  405681:	nop
  405682:	sub    al,0x7d
  405684:	push   es
  405685:	jo     0x405663
  405687:	addr16 mov edx,0xf51c5b92
  40568d:	neg    DWORD PTR [eax+0xb6b8ad1]
  405693:	mov    al,ds:0x2a9881b4
  405698:	ja     0x4056c9
  40569a:	lahf   
  40569b:	xor    ebx,edx
  40569d:	jae    0x405656
  40569f:	mov    dl,0xfa
  4056a1:	xor    ah,BYTE PTR [esi]
  4056a3:	or     al,0x41
  4056a5:	(bad)
  4056a8:	xor    BYTE PTR [ebx+0x6935a54e],ch
  4056ae:	into   
  4056af:	jle    0x4056d0
  4056b1:	push   esi
  4056b2:	mov    ds:0x5cd9cff2,eax
  4056b7:	in     al,dx
  4056b8:	cs sti 
  4056ba:	cli    
  4056bb:	(bad)  
  4056bc:	xchg   ebx,eax
  4056bd:	adc    ecx,DWORD PTR [edi-0x451d4b]
  4056c3:	mov    bh,0x69
  4056c5:	int    0xa0
  4056c7:	sbb    esi,edi
  4056c9:	dec    ebx
  4056ca:	cmc    
  4056cb:	mov    ds,WORD PTR ds:[edi+edx*8-0x75552697]
  4056d3:	mov    al,ds:0x53e0da6d
  4056d8:	fistp  WORD PTR [eax-0x748013b6]
  4056de:	pop    edi
  4056df:	inc    esp
  4056e0:	mov    ebx,0x14b38a76
  4056e5:	fmul   st(7),st
  4056e7:	imul   edi,DWORD PTR [esi+eiz*2+0x7a],0x53686840
  4056ef:	mov    ds:0x9d61a161,al
  4056f4:	dec    edi
  4056f5:	or     al,0x67
  4056f7:	mov    dh,0x81
  4056f9:	inc    ebp
  4056fa:	sub    eax,0xf8b3f49a
  4056ff:	adc    ch,BYTE PTR [edx-0x3e]
  405702:	cwde   
  405703:	inc    esp
  405704:	jo     0x4056dd
  405706:	add    DWORD PTR [ebx+ecx*2+0xf76e50d],esp
  40570d:	inc    ebx
  40570e:	xchg   esi,ecx
  405710:	cmp    al,0xa1
  405712:	ror    ah,1
  405714:	pop    es
  405715:	adc    al,0x74
  405717:	mov    bh,0x4c
  405719:	imul   edi,DWORD PTR [esi],0x3b
  40571c:	mov    al,ds:0xcefe0eb5
  405721:	test   cl,al
  405723:	data16 rol BYTE PTR [edi+0x70],0x19
  405728:	and    ebp,DWORD PTR [edi+edi*2-0x790c9944]
  40572f:	aad    0xd1
  405731:	cmp    bl,ch
  405733:	or     BYTE PTR [edx+0x32],bl
  405736:	push   ss
  405737:	mov    edi,0x753db784
  40573c:	mov    DWORD PTR [ebp+0x12],edx
  40573f:	jne    0x405744
  405741:	adc    DWORD PTR [ebp-0x6c],edx
  405744:	xlat   BYTE PTR ds:[ebx]
  405745:	fcmovbe st,st(5)
  405747:	imul   edi,DWORD PTR [ebp-0x71],0x1018528f
  40574e:	or     edi,ecx
  405750:	rol    BYTE PTR [edi-0x34],0xdc
  405754:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405756:	mov    ch,0x68
  405758:	or     eax,0xd0f6f3bd
  40575d:	xabort 0x72
  405760:	mov    eax,0xb6f5fcce
  405765:	loopne 0x4057a2
  405767:	mov    ds:0x5c52fd09,eax
  40576c:	and    ebp,DWORD PTR [ebx-0x68]
  40576f:	jno    0x405764
  405771:	mov    BYTE PTR [ebx-0x76],ah
  405774:	dec    bh
  405776:	inc    eax
  405777:	adc    BYTE PTR [ecx+0xfc5b72f],ch
  40577d:	test   BYTE PTR [ecx+edi*1],ch
  405780:	sar    ebx,0xde
  405783:	mov    ds:0x831e1cbc,al
  405788:	dec    ebx
  405789:	mov    al,BYTE PTR [esi-0x6e20c875]
  40578f:	retf   
  405790:	shl    al,cl
  405792:	gs mov bh,0xfd
  405795:	addr16 jmp 0x93e1:0x8a3f6dbd
  40579d:	daa    
  40579e:	mov    ds:0x2d61d47c,eax
  4057a3:	scas   eax,DWORD PTR es:[edi]
  4057a4:	pop    ecx
  4057a5:	cmc    
  4057a6:	scas   eax,DWORD PTR es:[edi]
  4057a7:	xchg   edi,eax
  4057a8:	cmp    BYTE PTR [ecx+ecx*1-0x4befa7f9],bl
  4057af:	pop    esp
  4057b0:	popa   
  4057b1:	(bad)  
  4057b2:	out    dx,eax
  4057b3:	ja     0x4057aa
  4057b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b6:	(bad)
  4057b9:	push   edx
  4057ba:	shr    ebp,0xb1
  4057bd:	push   esi
  4057be:	test   eax,0x74925aff
  4057c3:	jb     0x4057e3
  4057c5:	loopne 0x40581d
  4057c7:	out    0x51,eax
  4057c9:	pop    ecx
  4057ca:	xor    BYTE PTR [edi],dh
  4057cc:	cmp    DWORD PTR [edx],0xfffffff7
  4057cf:	in     al,0x97
  4057d1:	(bad)  
  4057d2:	cli    
  4057d3:	adc    esi,DWORD PTR [esi-0x20b57b7a]
  4057d9:	cs push 0x4108face
  4057df:	push   cs
  4057e0:	or     al,0x5f
  4057e2:	mov    ds:0x94cff133,al
  4057e7:	dec    esp
  4057e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057e9:	adc    ebx,DWORD PTR [esi]
  4057eb:	bswap  edi
  4057ed:	cs jb  0x4057cb
  4057f0:	pop    edi
  4057f1:	push   0xffffffdb
  4057f3:	cdq    
  4057f4:	mov    dh,0xfc
  4057f6:	(bad)  
  4057f7:	jge    0x405799
  4057f9:	(bad)  
  4057fa:	jno    0x405819
  4057fc:	mov    al,0xe9
  4057fe:	add    DWORD PTR [eax+ebp*8+0x492f7493],ecx
  405805:	sbb    eax,0xf0b5781a
  40580a:	sub    ecx,ecx
  40580c:	inc    esp
  40580d:	cld    
  40580e:	push   ebx
  40580f:	xor    eax,0xe776cce0
  405814:	push   es
  405815:	mov    ds:0x3f71589b,al
  40581a:	jne    0x40587f
  40581c:	pop    edx
  40581d:	iret   
  40581e:	jmp    0xc5145fb
  405823:	mov    ecx,0xa5236785
  405828:	jae    0x40584f
  40582a:	sbb    eax,0x438ad79e
  40582f:	test   al,0x16
  405831:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405832:	cmp    eax,0x2c2e4934
  405837:	mov    edi,0x56d4b9e9
  40583c:	out    dx,al
  40583d:	pop    ecx
  40583e:	std    
  40583f:	jl     0x4058aa
  405841:	nop
  405842:	aam    0x62
  405844:	nop
  405845:	fimul  WORD PTR [eax+0x78]
  405848:	in     al,0xdc
  40584a:	pop    esp
  40584b:	xor    ebx,edi
  40584d:	and    ecx,DWORD PTR [edx]
  40584f:	sub    al,0x60
  405851:	pop    ebx
  405852:	sbb    cl,BYTE PTR [ecx+0x61646e2d]
  405858:	push   esi
  405859:	push   0xc428d942
  40585e:	int    0xcf
  405860:	fldcw  WORD PTR [ebx+0x771572a5]
  405866:	mov    edx,0x41d89b9a
  40586b:	(bad)  
  40586c:	out    0xc4,eax
  40586e:	pop    ebx
  40586f:	push   edi
  405870:	jo     0x4057f5
  405872:	lahf   
  405873:	call   FWORD PTR [ebp-0x49]
  405876:	into   
  405877:	jmp    0xf09281f2
  40587c:	xor    al,0x1
  40587e:	push   ds
  40587f:	int    0x6
  405881:	cmp    eax,0x98ccd3b6
  405886:	sbb    bh,cl
  405888:	sbb    dh,BYTE PTR ds:0x1b491917
  40588e:	xchg   esp,eax
  40588f:	jnp    0x405860
  405891:	xchg   edx,eax
  405892:	mov    ch,0x6
  405894:	sub    edx,DWORD PTR [edi]
  405896:	xor    DWORD PTR [eax-0x257cb5b],0xefdc0627
  4058a0:	jbe    0x405867
  4058a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058a3:	sub    eax,0x785a64c2
  4058a8:	adc    al,0x2f
  4058aa:	or     esp,DWORD PTR [edx-0x4c6dd75e]
  4058b0:	shl    ecx,cl
  4058b2:	xchg   edi,eax
  4058b3:	xchg   ecx,eax
  4058b4:	pop    edx
  4058b5:	lods   al,BYTE PTR ds:[esi]
  4058b6:	int    0x93
  4058b8:	inc    eax
  4058b9:	or     bh,dh
  4058bb:	jne    0x40593b
  4058bd:	dec    esp
  4058be:	pop    eax
  4058bf:	xchg   BYTE PTR [edi+0x1a],dh
  4058c2:	mov    eax,ds:0x8f2e2fe7
  4058c7:	push   0x4f87bf84
  4058cc:	sti    
  4058cd:	das    
  4058ce:	pop    ds
  4058cf:	inc    esp
  4058d0:	dec    ebp
  4058d1:	ja     0x4058b5
  4058d3:	pop    ds
  4058d4:	stos   DWORD PTR es:[edi],eax
  4058d5:	dec    esp
  4058d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d7:	lahf   
  4058d8:	nop
  4058d9:	pop    ds
  4058da:	pop    ebx
  4058db:	push   edx
  4058dc:	mov    al,ds:0x3f250d70
  4058e1:	add    ebp,DWORD PTR [ebx+0x37]
  4058e4:	adc    dl,dl
  4058e6:	sti    
  4058e7:	fmul   st(7),st
  4058e9:	test   esi,ebx
  4058eb:	je     0x4058ac
  4058ed:	call   0x2128:0x6864821d
  4058f4:	into   
  4058f5:	jmp    0x3645:0xed8c130b
  4058fc:	sbb    bx,WORD PTR [edx+0x14c3006e]
  405903:	mov    ch,0x92
  405905:	adc    ah,BYTE PTR [esi-0x5388ca3a]
  40590b:	sub    bl,BYTE PTR [ecx]
  40590d:	arpl   WORD PTR [eax-0xe],sp
  405910:	push   es
  405911:	mov    ch,0xd8
  405913:	jecxz  0x405985
  405915:	dec    ebx
  405916:	ins    BYTE PTR es:[edi],dx
  405917:	pop    esp
  405918:	lods   eax,DWORD PTR ds:[esi]
  405919:	dec    ebp
  40591a:	jmp    DWORD PTR [ebx]
  40591c:	pop    edx
  40591d:	int3   
  40591e:	push   edx
  40591f:	pushf  
  405920:	stc    
  405921:	test   DWORD PTR [eax+0x41c39e83],esi
  405927:	inc    ebp
  405928:	dec    ebp
  405929:	loopne 0x405923
  40592b:	cli    
  40592c:	(bad)  
  40592e:	mov    DWORD PTR [ebx-0x65],0x2274967e
  405935:	(bad)  
  405936:	jl     0x40595b
  405938:	das    
  405939:	sub    cl,ch
  40593b:	sub    DWORD PTR [esi-0x3be06db0],ebp
  405941:	iret   
  405942:	xor    DWORD PTR [eax+0x6c],eax
  405945:	add    edx,DWORD PTR [ecx]
  405947:	shl    BYTE PTR [ebp-0x76],1
  40594a:	mov    ebx,0xd13a59d3
  40594f:	test   eax,0x89bd2bfc
  405954:	push   ebp
  405955:	mov    bh,dh
  405957:	mov    bl,0xc5
  405959:	je     0x40590a
  40595b:	xchg   esi,eax
  40595c:	mov    ch,0x5a
  40595e:	sub    ch,dh
  405960:	sahf   
  405961:	iret   
  405962:	jmp    0x1923:0xf62a0ead
  405969:	stc    
  40596a:	aam    0x24
  40596c:	xchg   edi,eax
  40596d:	dec    ebx
  40596e:	mov    edx,esp
  405970:	cmp    BYTE PTR [ebx-0x31ba49fc],0x68
  405977:	nop
  405978:	add    al,0x62
  40597a:	sbb    eax,0xb0f63349
  40597f:	mov    bh,0xd
  405981:	das    
  405982:	xor    al,BYTE PTR [edx]
  405984:	enter  0x45a3,0x7d
  405988:	aam    0xce
  40598a:	jmp    0x321da739
  40598f:	cdq    
  405990:	shl    DWORD PTR [ecx-0x7ab69ab2],0x7e
  405997:	pop    ss
  405998:	das    
  405999:	cmp    dh,BYTE PTR [eax-0x7cc2e903]
  40599f:	sub    BYTE PTR [esi],bl
  4059a1:	dec    ecx
  4059a2:	jno    0x4059b7
  4059a4:	and    al,0xa7
  4059a6:	outs   dx,DWORD PTR ds:[esi]
  4059a7:	cmp    al,al
  4059a9:	fisub  DWORD PTR [eax-0x32a048b3]
  4059af:	xor    al,0x96
  4059b1:	dec    esp
  4059b2:	std    
  4059b3:	or     cl,BYTE PTR [edx]
  4059b5:	mov    edi,0x200ff73
  4059ba:	lods   eax,DWORD PTR ds:[esi]
  4059bb:	icebp  
  4059bc:	adc    BYTE PTR [edx],dh
  4059be:	(bad)  
  4059bf:	adc    esi,DWORD PTR [eax-0x5f]
  4059c2:	(bad)  
  4059c3:	jno    0x405a16
  4059c5:	repz fld TBYTE PTR [esi+edx*4]
  4059c9:	jecxz  0x405979
  4059cb:	test   DWORD PTR [ecx+edx*2-0x4a984867],edi
  4059d2:	(bad)  
  4059d3:	jmp    0x4ea390a4
  4059d8:	mov    dh,0x14
  4059da:	lea    ebx,[ebp-0x109b99da]
  4059e0:	ins    BYTE PTR es:[edi],dx
  4059e1:	(bad)  
  4059e2:	xor    al,0xab
  4059e4:	test   BYTE PTR [ebx-0x2c476457],bl
  4059ea:	test   BYTE PTR [esi-0xc17b058],0x45
  4059f1:	test   eax,0xa36a4503
  4059f6:	(bad)  [edi+eiz*2]
  4059f9:	imul   ecx,DWORD PTR [ecx],0xa2b10613
  4059ff:	icebp  
  405a00:	enter  0x793a,0xe9
  405a04:	in     al,dx
  405a05:	mov    esi,ecx
  405a07:	and    dh,al
  405a09:	ds add al,0xec
  405a0c:	jo     0x405a28
  405a0e:	clc    
  405a0f:	mov    WORD PTR [edx-0x62],fs
  405a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a13:	pop    esi
  405a14:	(bad)  
  405a15:	mov    BYTE PTR [ecx+0x1c657b59],ah
  405a1b:	out    0x71,al
  405a1d:	lea    ecx,[ecx+eax*8-0x9]
  405a21:	sahf   
  405a22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a23:	iret   
  405a24:	call   0x1ac0:0xa152c838
  405a2b:	xor    eax,0xe596d524
  405a30:	sbb    edi,DWORD PTR [edi-0x76a9da51]
  405a36:	sbb    edi,DWORD PTR [ecx-0x39acbef9]
  405a3c:	rcr    BYTE PTR [ebx],0x4a
  405a3f:	mov    BYTE PTR [eax-0x6b],dh
  405a42:	pusha  
  405a43:	gs xchg esp,eax
  405a45:	retf   
  405a46:	shl    DWORD PTR [esi+0x4],1
  405a49:	cmp    BYTE PTR [edi-0x7d],ch
  405a4c:	jp     0x4059df
  405a4e:	jnp    0x4059fa
  405a50:	test   eax,0x4aaf13
  405a55:	push   ebx
  405a56:	fs sti 
  405a58:	stos   DWORD PTR es:[edi],eax
  405a59:	fsubr  QWORD PTR [ebp-0x33]
  405a5c:	popa   
  405a5d:	jmp    0xf8e25c2
  405a62:	ret    
  405a63:	xor    al,BYTE PTR [ebp+0x77]
  405a66:	pushf  
  405a67:	rol    BYTE PTR [ebp+0x281b47c5],0xb1
  405a6e:	neg    BYTE PTR ds:0xf774cecd
  405a74:	jle    0x405ada
  405a76:	in     eax,dx
  405a77:	xchg   edi,eax
  405a79:	test   al,0xba
  405a7b:	adc    BYTE PTR fs:0x88f30c09,ch
  405a82:	cwde   
  405a83:	shrd   edi,edi,cl
  405a86:	ss inc ebp
  405a88:	or     al,0xb5
  405a8a:	adc    bx,WORD PTR [ecx-0x6d]
  405a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a8f:	mov    ds:0xb4dde916,al
  405a94:	add    eax,0x54ef8feb
  405a99:	out    dx,eax
  405a9a:	jmp    0xe17f:0xf37db9a4
  405aa1:	xor    ebp,esp
  405aa3:	jbe    0x405a66
  405aa5:	dec    esi
  405aa6:	rol    al,0x9c
  405aa9:	cs push edx
  405aab:	out    0x8e,al
  405aad:	adc    BYTE PTR [ebp-0x65],0x8d
  405ab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ab2:	in     al,dx
  405ab3:	pop    edx
  405ab4:	inc    edi
  405ab5:	out    0x3a,al
  405ab7:	adc    DWORD PTR [edi-0x7aa875a2],ecx
  405abd:	pop    ss
  405abe:	jns    0x405ab9
  405ac0:	xchg   DWORD PTR [ebp+eax*1-0x4f97bd1b],ecx
  405ac7:	adc    eax,0x7dc9cdf6
  405acc:	enter  0xd6a3,0x3a
  405ad0:	clc    
  405ad1:	push   edx
  405ad2:	sbb    al,0x70
  405ad4:	jmp    0x3598:0x5f2dc2fc
  405adb:	mov    ch,0xb7
  405add:	arpl   bx,si
  405adf:	sub    BYTE PTR [ebp-0x66],ch
  405ae2:	bound  eax,QWORD PTR [ebp-0xdb3ee8e]
  405ae8:	and    al,0xbd
  405aea:	sub    ch,BYTE PTR [edi+0x7f093e9b]
  405af0:	mov    ebp,0xf7c20bad
  405af5:	push   es
  405af6:	mov    al,0x8c
  405af8:	test   al,0x46
  405afa:	nop
  405afb:	xchg   BYTE PTR [edi],al
  405afd:	jp     0x405aa7
  405aff:	retf   0xa9f1
  405b02:	stos   DWORD PTR es:[edi],eax
  405b03:	xchg   ecx,eax
  405b04:	stc    
  405b05:	lock imul eax,esp,0xc
  405b09:	mov    edx,0x12575378
  405b0e:	push   ebp
  405b0f:	clc    
  405b10:	popf   
  405b11:	adc    DWORD PTR [edx+0x225169bc],eax
  405b17:	lods   eax,DWORD PTR ds:[esi]
  405b18:	cmove  esp,esi
  405b1b:	jle    0x405b36
  405b1d:	je     0x405b9c
  405b1f:	clc    
  405b20:	cmp    eax,0x107c2594
  405b25:	arpl   WORD PTR [eax+0x6944118e],bx
  405b2b:	sbb    esp,DWORD PTR [ebx+0x3511dc71]
  405b31:	inc    edi
  405b32:	iret   
  405b33:	fs stos DWORD PTR es:[edi],eax
  405b35:	jne    0x405b68
  405b37:	icebp  
  405b38:	fbld   TBYTE PTR [ecx]
  405b3a:	mov    ah,0x41
  405b3c:	jmp    0xba38:0x56dcc1b2
  405b43:	sub    eax,0x19ef7637
  405b48:	mov    ebp,0xa413ad25
  405b4d:	cmp    al,0x45
  405b4f:	mov    bh,0xd9
  405b51:	push   0x5f678a0d
  405b56:	ins    DWORD PTR es:[edi],dx
  405b57:	add    eax,DWORD PTR [edi-0x24152f0]
  405b5d:	add    edx,0xffffffe9
  405b60:	jo     0x405b22
  405b62:	jns    0x405b59
  405b64:	mov    ds:0x55b62dff,al
  405b69:	or     BYTE PTR [esi+ecx*4],0x27
  405b6d:	push   cs
  405b6e:	xchg   ebx,eax
  405b6f:	mov    al,ds:0x4a051f7b
  405b74:	test   DWORD PTR [ebp-0x20a0fae4],0xf8d0c784
  405b7e:	out    dx,eax
  405b7f:	pop    ds
  405b80:	lock ja 0x405bbf
  405b83:	xor    ebx,DWORD PTR [ebx+0x2b2602d7]
  405b89:	jp     0x405b4b
  405b8b:	mov    ch,0xf5
  405b8d:	mov    edx,0xbfca22b2
  405b92:	mov    bl,dh
  405b94:	adc    esp,DWORD PTR [eax+ecx*1-0x78]
  405b98:	add    eax,0x4e1faaf9
  405b9d:	cmp    edi,ebp
  405b9f:	gs int 0x94
  405ba2:	shr    BYTE PTR [esi+0x79faabad],cl
  405ba8:	pushf  
  405ba9:	js     0x405c0c
  405bab:	xchg   DWORD PTR [esi-0x6135b0d7],edx
  405bb1:	cli    
  405bb2:	sub    DWORD PTR [esi],ebp
  405bb4:	jae    0x405b95
  405bb6:	test   DWORD PTR [ecx],esi
  405bb8:	push   ebx
  405bb9:	inc    esi
  405bba:	das    
  405bbb:	pop    edx
  405bbc:	(bad)  
  405bbd:	icebp  
  405bbe:	sbb    bh,dl
  405bc0:	rcl    bl,cl
  405bc2:	dec    esp
  405bc3:	inc    eax
  405bc4:	enter  0x6ac,0xb6
  405bc8:	sub    BYTE PTR [ecx-0x7e],bh
  405bcb:	adc    DWORD PTR [eax],edi
  405bcd:	sbb    eax,0xeb3bb210
  405bd2:	lods   eax,DWORD PTR ds:[esi]
  405bd3:	or     DWORD PTR [edi+0x4a],esp
  405bd6:	sub    al,0x48
  405bd8:	xchg   ecx,eax
  405bd9:	xchg   BYTE PTR [esi+0x354b5974],dh
  405bdf:	jmp    0xa128d7fc
  405be4:	popf   
  405be5:	aas    
  405be6:	add    eax,0xabc881f8
  405beb:	mov    eax,ds:0x5f9fd171
  405bf0:	cmp    BYTE PTR [esi],dl
  405bf2:	pop    ebp
  405bf3:	les    ecx,FWORD PTR [edx]
  405bf5:	retf   
  405bf6:	in     al,0x3d
  405bf8:	in     al,0x72
  405bfa:	push   esi
  405bfb:	xchg   esi,eax
  405bfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bfd:	jnp    0x405c1d
  405bff:	lea    edx,[esi+0x5973b6e1]
  405c05:	sub    cl,bl
  405c07:	dec    eax
  405c08:	xlat   BYTE PTR ds:[ebx]
  405c09:	jp     0x405bc6
  405c0b:	mov    edi,0xf2d6a1af
  405c10:	jmp    0xb5c8:0xfcd26c86
  405c17:	iret   
  405c18:	pop    ebp
  405c19:	xchg   ebx,eax
  405c1a:	cdq    
  405c1b:	scas   eax,DWORD PTR es:[edi]
  405c1c:	add    BYTE PTR [ebx],ch
  405c1e:	cmp    ebp,DWORD PTR [ecx]
  405c20:	mov    eax,0xda3b9e12
  405c25:	push   0x5b
  405c27:	retf   0x25fe
  405c2a:	aaa    
  405c2b:	sbb    eax,0x51b7f89
  405c30:	sbb    eax,0xc6634a2
  405c35:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405c37:	out    dx,al
  405c38:	push   esp
  405c39:	call   0x9b3f7bd1
  405c3e:	fnstsw WORD PTR [ecx-0x7f]
  405c41:	dec    ebp
  405c42:	xchg   BYTE PTR [esp+eiz*8+0x16],bl
  405c46:	cmp    ebp,DWORD PTR [esi+0x39c29ca3]
  405c4c:	icebp  
  405c4d:	and    BYTE PTR [ebx+0x58c8a7b0],dl
  405c53:	pop    es
  405c54:	mov    esi,0xc771194f
  405c59:	lods   eax,DWORD PTR ds:[esi]
  405c5a:	sti    
  405c5b:	sbb    edx,DWORD PTR [edi-0x10]
  405c5e:	in     eax,0x4c
  405c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c61:	jl     0x405c1c
  405c63:	xchg   edi,eax
  405c64:	popa   
  405c65:	ret    
  405c66:	ja     0x405cc1
  405c68:	test   BYTE PTR [ebx-0x1f600bd6],0xe0
  405c6f:	and    bl,al
  405c71:	gs inc ecx
  405c73:	xor    ecx,DWORD PTR ds:0xb3e3a77b
  405c79:	in     al,0xa
  405c7b:	stos   DWORD PTR es:[edi],eax
  405c7c:	mov    ebx,DWORD PTR [eax+0x28]
  405c7f:	cmp    BYTE PTR [edi],0xad
  405c82:	test   DWORD PTR [esi-0x48],ebx
  405c85:	cmp    al,0x66
  405c87:	gs xchg esp,eax
  405c89:	xlat   BYTE PTR ds:[ebx]
  405c8a:	mov    eax,0x534ebbb7
  405c8f:	call   0xdeba85d3
  405c94:	add    eax,0x767053e2
  405c99:	mov    ds:0x9d294845,eax
  405c9e:	pop    edx
  405c9f:	lock push esi
  405ca1:	mov    gs,ecx
  405ca3:	repnz cmp DWORD PTR [ebp+0x382b7931],ebx
  405caa:	and    BYTE PTR [edi-0x57],0x6c
  405cae:	aaa    
  405caf:	sbb    WORD PTR [eax+edi*2-0x3b],0xca1c
  405cb6:	sub    esi,DWORD PTR [ecx+0x65]
  405cb9:	sbb    eax,0xf6f88c69
  405cbe:	dec    edx
  405cbf:	mov    DWORD PTR [eax+0x19],0xb2f99a68
  405cc6:	cmc    
  405cc7:	sub    DWORD PTR gs:[edi+0x3c],edx
  405ccb:	jmp    FWORD PTR [esi]
  405ccd:	data16 sub dl,bh
  405cd0:	inc    esi
  405cd1:	mov    ecx,0xd4839ae2
  405cd6:	push   ebp
  405cd7:	pop    edi
  405cd8:	gs dec eax
  405cda:	repnz mov esp,0xff4a6386
  405ce0:	and    al,0x4e
  405ce2:	outs   dx,DWORD PTR ds:[esi]
  405ce3:	and    al,BYTE PTR [edx-0xc55c2a0]
  405ce9:	test   BYTE PTR [edx+eiz*1-0xe37f1fb],bh
  405cf0:	sub    eax,0x3c28001d
  405cf5:	inc    ebp
  405cf6:	sub    ah,BYTE PTR [ebp+0x14]
  405cf9:	mov    esp,0x23f35603
  405cfe:	push   edx
  405cff:	fnstcw WORD PTR [edx+0x27807adc]
  405d05:	sub    ch,BYTE PTR [edi-0x22]
  405d08:	or     BYTE PTR [edi],cl
  405d0a:	jbe    0x405d2d
  405d0c:	in     eax,dx
  405d0d:	lea    edx,ss:[eax]
  405d10:	mov    ds:0x10530ca0,eax
  405d15:	sar    DWORD PTR [esi-0x2bb966f2],cl
  405d1b:	mov    bl,0x4b
  405d1d:	xchg   esi,eax
  405d1e:	rol    BYTE PTR [esi+0x49f86309],0xbb
  405d25:	(bad)  
  405d26:	pop    edi
  405d27:	stos   BYTE PTR es:[edi],al
  405d28:	hlt    
  405d29:	pop    ss
  405d2a:	inc    esp
  405d2b:	inc    ebx
  405d2c:	sbb    al,0x7c
  405d2e:	add    eax,eax
  405d30:	push   ecx
  405d31:	jecxz  0x405cc7
  405d33:	addr16 pop edi
  405d35:	cmp    eax,0xf8395793
  405d3a:	ds and ebx,ebx
  405d3d:	pop    esi
  405d3e:	add    eax,0x6838acde
  405d43:	sbb    edi,eax
  405d45:	mov    eax,ds:0x41a425a2
  405d4a:	stos   DWORD PTR es:[di],eax
  405d4c:	or     BYTE PTR [esi+0x42b3d6],0xad
  405d53:	mov    ds:0x9433cf54,al
  405d58:	int    0x4f
  405d5a:	or     dh,BYTE PTR [edi+0x7b]
  405d5d:	push   esi
  405d5e:	popf   
  405d5f:	test   bh,bh
  405d61:	sub    edi,DWORD PTR [ebp-0x4246ea76]
  405d67:	inc    eax
  405d68:	jl     0x405d4d
  405d6a:	mov    ds:0xe8e4a2e2,eax
  405d6f:	mov    ah,0xd0
  405d71:	jb     0x405cf8
  405d73:	cdq    
  405d74:	dec    ebp
  405d75:	mov    bl,0xdb
  405d77:	sub    edi,esp
  405d79:	adc    eax,esi
  405d7b:	push   edi
  405d7c:	icebp  
  405d7d:	mov    dh,0x42
  405d7f:	pop    esi
  405d80:	mov    ah,0x4e
  405d83:	fsub   QWORD PTR [ecx+0x28]
  405d86:	sbb    eax,edx
  405d88:	mov    ecx,0x773f914c
  405d8d:	test   al,0x7e
  405d8f:	lea    edi,[edx+0x42]
  405d92:	and    ebx,esi
  405d94:	mov    ss,edx
  405d96:	push   ebx
  405d97:	repnz mov eax,ds:0x89fa7b07
  405d9d:	daa    
  405d9e:	in     eax,dx
  405d9f:	mov    esi,0xa501b5a1
  405da4:	clc    
  405da5:	and    al,0x54
  405da7:	jg     0x405d91
  405da9:	and    ebx,esi
  405dab:	shl    DWORD PTR [edx-0x32f073f3],cl
  405db1:	jbe    0x405e2e
  405db3:	inc    eax
  405db4:	sbb    eax,0x430447d7
  405db9:	loop   0x405d5b
  405dbb:	fdivr  DWORD PTR [ecx]
  405dbd:	mov    bh,0xc8
  405dbf:	pop    es
  405dc0:	data16 mov al,BYTE PTR [ebp+esi*2-0x69d196e4]
  405dc8:	xchg   ebx,eax
  405dc9:	sbb    ch,al
  405dcb:	and    al,0xce
  405dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405dce:	icebp  
  405dcf:	pop    ebp
  405dd0:	fs retf 
  405dd2:	test   al,0x74
  405dd4:	arpl   WORD PTR [edi],bp
  405dd6:	sbb    DWORD PTR [edi+0x6c],ecx
  405dd9:	ja     0x405d7b
  405ddb:	lock in al,0xa2
  405dde:	or     eax,0x12043170
  405de3:	pop    ecx
  405de4:	inc    edx
  405de5:	add    DWORD PTR [edi+0x3a],0xffffffcd
  405de9:	add    BYTE PTR [eax+0x26],cl
  405dec:	outs   dx,BYTE PTR ds:[esi]
  405ded:	jmp    0x7367:0x31f35ee6
  405df4:	mov    eax,ds:0xb9499e1b
  405df9:	arpl   WORD PTR [ecx+0x15],cx
  405dfc:	outs   dx,BYTE PTR ds:[esi]
  405dfd:	in     al,0xfd
  405dff:	sbb    bl,BYTE PTR [edx+eax*8+0x65]
  405e03:	cli    
  405e04:	jbe    0x405d92
  405e06:	mov    ds:0xb332ccfb,eax
  405e0b:	add    edi,DWORD PTR [eax+0x6907e2af]
  405e11:	mov    DWORD PTR [ebx+edi*8-0x3f7fc69f],esi
  405e18:	mul    BYTE PTR [esi+0x3f]
  405e1b:	mov    ds:0x64a56977,eax
  405e20:	or     BYTE PTR fs:[edx],ah
  405e23:	call   FWORD PTR [eax]
  405e25:	push   esi
  405e26:	pop    ds
  405e27:	jmp    0x405e84
  405e29:	mov    bh,0x96
  405e2b:	xchg   ebp,eax
  405e2c:	shl    dl,0xd4
  405e2f:	pop    eax
  405e30:	mov    edi,DWORD PTR [ebx+0x5e]
  405e33:	mov    bl,0x8
  405e35:	lods   eax,DWORD PTR ds:[esi]
  405e36:	mov    cl,0x43
  405e38:	jns    0x405eb6
  405e3a:	pop    ds
  405e3b:	call   DWORD PTR [eax+0x23]
  405e3e:	sbb    ch,BYTE PTR [ecx+0x20]
  405e41:	pushf  
  405e42:	mov    eax,0x72d23098
  405e47:	test   al,0x67
  405e49:	test   al,0xe5
  405e4b:	outs   dx,BYTE PTR ds:[esi]
  405e4c:	fisubr DWORD PTR [edi]
  405e4e:	or     al,dl
  405e50:	ja     0x405e56
  405e52:	scas   eax,DWORD PTR es:[edi]
  405e53:	or     BYTE PTR [eax],ch
  405e55:	loope  0x405e04
  405e57:	sbb    eax,0x77915234
  405e5c:	enter  0xd0ec,0xf7
  405e60:	mov    edx,0x2a4ceb3c
  405e65:	adc    BYTE PTR [edi],0x13
  405e68:	icebp  
  405e69:	fisttp WORD PTR [ebx-0x2b81fed7]
  405e6f:	imul   ebx,DWORD PTR [eax-0xb],0xffffff91
  405e73:	je     0x405ebf
  405e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e76:	in     eax,dx
  405e77:	jmp    0xa74589e7
  405e7c:	xchg   esp,eax
  405e7d:	sbb    ch,BYTE PTR [ecx]
  405e7f:	pop    ebp
  405e80:	stos   BYTE PTR es:[edi],al
  405e81:	mov    ebx,0x30252cb2
  405e86:	xor    eax,DWORD PTR [ebp-0x6f]
  405e89:	mov    edx,0x505cfc74
  405e8e:	pop    edx
  405e8f:	test   esi,0x52f50ce6
  405e95:	sub    ebp,DWORD PTR [esi-0x7]
  405e98:	dec    edx
  405e99:	pop    ds
  405e9a:	jo     0x405e80
  405e9c:	xchg   ecx,eax
  405e9d:	call   ebx
  405e9f:	or     BYTE PTR [edi],dh
  405ea1:	xchg   ebx,eax
  405ea2:	or     BYTE PTR [ebx-0x5b54904c],bl
  405ea8:	and    edx,esi
  405eaa:	pop    edx
  405eab:	xchg   DWORD PTR [eax],esi
  405ead:	sbb    al,0xfe
  405eaf:	add    BYTE PTR [esi+0x23],dh
  405eb2:	dec    edx
  405eb3:	jbe    0x405ee7
  405eb5:	xor    eax,0x17794100
  405eba:	mov    dl,0x85
  405ebc:	sub    BYTE PTR [ebx-0x71ae7bfc],dh
  405ec2:	push   eax
  405ec3:	dec    eax
  405ec4:	jns    0x405ed5
  405ec6:	in     eax,dx
  405ec7:	dec    edi
  405ec8:	cmp    eax,0x34f9da6e
  405ecd:	push   esp
  405ece:	pop    ss
  405ecf:	push   edx
  405ed0:	mov    eax,0x393dc196
  405ed5:	push   ebx
  405ed6:	mov    dh,0x86
  405ed8:	sbb    DWORD PTR [ecx+0x2b],ebp
  405edb:	shr    BYTE PTR [ebp-0x48],1
  405ede:	add    BYTE PTR [eax-0x5a6f3234],0x5e
  405ee5:	icebp  
  405ee6:	jne    0x405f20
  405ee8:	push   ecx
  405ee9:	ds pop ss
  405eeb:	inc    esi
  405eec:	dec    edi
  405eed:	xor    esi,edx
  405eef:	xchg   DWORD PTR [edx],eax
  405ef1:	stc    
  405ef2:	test   DWORD PTR [ebp-0x6a8559f],esi
  405ef8:	ror    BYTE PTR [edi+ebx*2+0x6539146e],1
  405eff:	fisttp QWORD PTR [ebx+0xe68b4c2]
  405f05:	bound  ebp,QWORD PTR [ebx]
  405f07:	cmp    al,0x85
  405f09:	and    DWORD PTR [esp+ebx*8-0x5e97ff9a],ebp
  405f10:	jg     0x405ec2
  405f12:	clc    
  405f13:	lods   eax,DWORD PTR ds:[esi]
  405f14:	les    esp,FWORD PTR [edi-0x54]
  405f17:	sub    dl,BYTE PTR [edx]
  405f19:	popf   
  405f1a:	mov    edx,DWORD PTR [edi+0x17b64be5]
  405f20:	sahf   
  405f21:	xor    ebp,esi
  405f23:	nop
  405f24:	cdq    
  405f25:	shl    BYTE PTR [ebx-0x68fbb799],1
  405f2b:	addr16 push esi
  405f2d:	adc    edx,DWORD PTR [ecx+0xcfbc208]
  405f33:	mov    ds:0x3ad2515a,al
  405f38:	jb     0x405f9f
  405f3a:	test   BYTE PTR [esp+esi*2],ch
  405f3d:	pop    ebp
  405f3e:	les    esp,FWORD PTR [esp+ebp*1-0x652a1cc4]
  405f45:	es jo  0x405f55
  405f48:	push   ecx
  405f49:	sbb    BYTE PTR [ecx+esi*4],ah
  405f4c:	mov    ebp,0xcfacec5e
  405f51:	test   BYTE PTR [edi+0x2d],0x4a
  405f55:	fisttp DWORD PTR [ebx]
  405f57:	sub    DWORD PTR [ebx],esp
  405f59:	inc    eax
  405f5a:	push   eax
  405f5b:	hlt    
  405f5c:	mov    al,ds:0x1dfd2eea
  405f61:	pop    ebx
  405f62:	sbb    bl,dh
  405f64:	xor    al,0x1f
  405f67:	ss in  al,dx
  405f69:	dec    ebp
  405f6a:	jge    0x405f29
  405f6c:	xlat   BYTE PTR ds:[ebx]
  405f6d:	sub    edx,eax
  405f6f:	dec    eax
  405f70:	mov    cl,0xdb
  405f72:	sub    edi,ebp
  405f74:	dec    esi
  405f75:	fisttp WORD PTR [ecx-0x5]
  405f78:	aas    
  405f79:	mov    dh,0xad
  405f7b:	lds    esi,FWORD PTR [esi]
  405f7d:	clc    
  405f7e:	imul   esp,DWORD PTR [edx-0x443b9a51],0xffffff82
  405f85:	(bad)  
  405f86:	push   edi
  405f87:	repnz pushf 
  405f89:	dec    eax
  405f8a:	(bad)  
  405f8b:	xchg   ecx,eax
  405f8c:	inc    ebp
  405f8d:	jmp    0x405fce
  405f8f:	mov    cl,0x68
  405f91:	(bad)  
  405f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f95:	nop
  405f96:	arpl   WORD PTR [ebp-0x7f],si
  405f99:	mov    ds:0x9e58cb50,al
  405f9e:	add    bl,BYTE PTR [ebx+0x5e6758ff]
  405fa4:	mov    ebp,0xb85ffd65
  405fa9:	inc    eax
  405faa:	push   esi
  405fab:	jns    0x405f4a
  405fad:	rol    BYTE PTR [eax+edi*4+0x5506de32],0x52
  405fb5:	mov    al,0x35
  405fb7:	adc    dl,BYTE PTR ds:0xeb29f9da
  405fbd:	imul   esp,DWORD PTR [eax+edx*8],0xbbf33fc5
  405fc4:	xrelease xchg DWORD PTR [eax+ecx*4-0x566481f7],eax
  405fcc:	aas    
  405fcd:	sub    ah,BYTE PTR [eax-0x39]
  405fd0:	inc    edx
  405fd1:	add    DWORD PTR [edx+0x4d],esp
  405fd4:	loop   0x405fcf
  405fd6:	xchg   ecx,eax
  405fd7:	ss push ebp
  405fd9:	leave  
  405fda:	add    BYTE PTR [ebx+0x3304fbb8],0xb
  405fe1:	out    0x2b,al
  405fe3:	sbb    al,bl
  405fe5:	and    BYTE PTR ds:0x5545dad3,0x45
  405fec:	xchg   ebp,eax
  405fed:	cmp    ecx,DWORD PTR [eax-0x50]
  405ff0:	rol    BYTE PTR [ecx-0x115e4433],1
  405ff6:	mov    ebx,0x46c525e3
  405ffb:	fwait
  405ffc:	push   es
  405ffd:	scas   eax,DWORD PTR es:[edi]
  405ffe:	mov    ch,BYTE PTR [ecx-0x5d56dc91]
  406004:	popf   
  406005:	fnstenv [edx+0x1b56b6f7]
  40600b:	sahf   
  40600c:	out    dx,al
  40600d:	ins    BYTE PTR es:[edi],dx
  40600e:	mov    esp,0xf45ee1c0
  406013:	and    DWORD PTR [edi],esi
  406015:	popf   
  406016:	lds    ebp,FWORD PTR [edx+0x6c]
  406019:	dec    ecx
  40601a:	mov    DWORD PTR [ecx+eiz*8+0x27a2b49],edx
  406021:	ret    0x9dcc
  406024:	xchg   esp,ebx
  406026:	in     al,dx
  406027:	es jnp 0x405ffa
  40602a:	icebp  
  40602b:	fist   DWORD PTR [eax+eiz*2-0x27]
  40602f:	push   0x3d
  406031:	pop    ss
  406032:	add    cl,dl
  406034:	pop    esi
  406035:	mov    WORD PTR [edi+eiz*8+0x5b],?
  406039:	cmp    eax,0x7d08b457
  40603e:	fcom   DWORD PTR [eax-0x3be25f98]
  406044:	mov    ds:0xd15504e2,al
  406049:	or     eax,0x7e235fec
  40604e:	cmp    dl,ah
  406050:	jmp    0x7cf45958
  406055:	xchg   ebp,eax
  406056:	xor    DWORD PTR [edi+0x25c665b9],edx
  40605c:	fisub  DWORD PTR [ecx]
  40605e:	daa    
  40605f:	cld    
  406060:	jmp    FWORD PTR [edi+ebx*1-0x6f]
  406064:	adc    BYTE PTR ds:0x997c,bh
  406069:	push   es
  40606a:	cmc    
  40606b:	ret    0x9837
  40606e:	push   eax
  40606f:	jnp    0x405ff2
  406071:	ret    
  406072:	clc    
  406073:	mov    BYTE PTR [ecx-0x4e],ch
  406076:	mov    dh,0x9
  406078:	cdq    
  406079:	mov    ebx,0xe387285b
  40607e:	xchg   ecx,eax
  40607f:	jmp    0x5a587b31
  406084:	ret    
  406085:	xchg   ecx,eax
  406086:	stc    
  406087:	jge    0x40606d
  406089:	xchg   edx,eax
  40608a:	inc    eax
  40608b:	dec    eax
  40608c:	xchg   esi,eax
  40608d:	addr16 (bad) 
  40608f:	in     eax,dx
  406090:	jne    0x40609d
  406092:	retf   
  406093:	in     eax,0x56
  406095:	retf   
  406096:	mov    ebp,DWORD PTR [edx+ebp*2]
  406099:	(bad)  
  40609a:	dec    edi
  40609b:	push   edx
  40609c:	test   eax,0x6e37f3fd
  4060a1:	push   ebp
  4060a2:	adc    al,BYTE PTR [edx+0x71b95f62]
  4060a8:	div    DWORD PTR [edi]
  4060aa:	mov    ds:0x5334ec31,eax
  4060af:	in     al,dx
  4060b0:	mov    ecx,0xa28b754f
  4060b5:	aas    
  4060b6:	push   ss
  4060b7:	stc    
  4060b8:	mov    bh,0x7e
  4060ba:	hlt    
  4060bb:	out    0xae,al
  4060bd:	mov    bl,0x5f
  4060bf:	dec    esp
  4060c0:	test   BYTE PTR [ecx],0xca
  4060c3:	sub    dh,BYTE PTR [eax-0x47cb8a04]
  4060c9:	and    BYTE PTR [ebx-0x3917c74b],dl
  4060cf:	(bad)  
  4060d0:	jg     0x4060ce
  4060d2:	mov    al,0x52
  4060d4:	inc    eax
  4060d5:	and    esi,edi
  4060d7:	fisttp DWORD PTR fs:[esi+0x63778488]
  4060de:	add    al,0xfb
  4060e0:	ret    0x9d11
  4060e3:	in     al,dx
  4060e4:	push   0xda0b6a05
  4060e9:	clc    
  4060ea:	mov    al,BYTE PTR cs:[eax+eiz*4-0x3439f5ab]
  4060f2:	pop    edi
  4060f3:	jb     0x4060c5
  4060f5:	out    dx,eax
  4060f6:	sub    al,0x16
  4060f8:	int    0xb8
  4060fa:	aam    0x1a
  4060fc:	jnp    0x40609d
  4060fe:	mov    eax,ds:0x3533ddee
  406103:	daa    
  406104:	out    0xe7,eax
  406106:	lock mov BYTE PTR [edx+ebx*1],al
  40610a:	mov    eax,DWORD PTR [ebp-0x40]
  40610d:	mov    edx,DWORD PTR [ebp-0x28]
  406110:	xor    eax,esi
  406112:	xor    edx,esi
  406114:	add    eax,edi
  406116:	add    edx,edi
  406118:	imul   eax,edx
  40611b:	add    eax,DWORD PTR [ebp-0xc]
  40611e:	mov    DWORD PTR [ebp-0xc],eax
  406121:	mov    eax,DWORD PTR [ebp-0xc]
  406124:	mov    edx,DWORD PTR [ebp-0x18]
  406127:	cmp    edx,eax
  406129:	jb     0x403ce7
  40612f:	mov    eax,DWORD PTR [ebp-0x28]
  406132:	mov    edx,DWORD PTR [ebp-0x18]
  406135:	xor    eax,esi
  406137:	add    eax,edi
  406139:	imul   eax,edx
  40613c:	mov    edx,DWORD PTR [ebp-0x1c]
  40613f:	xor    edx,esi
  406141:	add    edx,edi
  406143:	or     eax,edx
  406145:	mov    edx,DWORD PTR [ebp-0x20]
  406148:	xor    edx,esi
  40614a:	add    eax,edx
  40614c:	mov    edx,DWORD PTR [ebp-0x20]
  40614f:	xor    edx,esi
  406151:	add    eax,edx
  406153:	mov    edx,DWORD PTR [ebp-0x10]
  406156:	lea    eax,[eax+edx*1+0x64e5ea]
  40615d:	jmp    0x406171
  406162:	mov    eax,DWORD PTR [ebp-0x20]
  406165:	mov    edx,DWORD PTR [ebp-0x10]
  406168:	xor    eax,esi
  40616a:	lea    eax,[eax+edx*1+0x3272f5]
  406171:	mov    DWORD PTR [ebp-0x10],eax
  406174:	jmp    0x403c34
  406179:	mov    ebx,DWORD PTR [ebp-0x3c]
  40617c:	mov    eax,DWORD PTR [ebp+0xc]
  40617f:	xor    eax,esi
  406181:	lea    ecx,[ecx+eax*1+0x3272f5]
  406188:	lea    eax,[ecx-0x3272f5]
  40618e:	xor    eax,esi
  406190:	cmp    eax,0xf89c95a5
  406195:	jne    0x401883
  40619b:	dec    DWORD PTR [ebp-0x34]
  40619e:	jne    0x401877
  4061a4:	mov    eax,DWORD PTR [ebp+0x8]
  4061a7:	mov    ecx,DWORD PTR [ebp+0xc]
  4061aa:	mov    edx,DWORD PTR [ebp+0x8]
  4061ad:	xor    ecx,esi
  4061af:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f5]
  4061b6:	xor    eax,esi
  4061b8:	mov    al,BYTE PTR [eax+ebx*1+0x3272f5]
  4061bf:	xor    edx,esi
  4061c1:	mov    BYTE PTR [edx+ebx*1+0x3272f5],cl
  4061c8:	mov    ecx,DWORD PTR [ebp+0xc]
  4061cb:	xor    ecx,esi
  4061cd:	mov    BYTE PTR [ecx+ebx*1+0x3272f5],al
  4061d4:	mov    eax,DWORD PTR [ebp+0xc]
  4061d7:	xor    eax,esi
  4061d9:	add    eax,edi
  4061db:	pop    edi
  4061dc:	pop    esi
  4061dd:	pop    ebx
  4061de:	leave  
  4061df:	ret    0x8
  4061e2:	sbb    DWORD PTR ds:0x42b226,0x2deb
  4061ec:	xor    eax,eax
  4061ee:	sbb    DWORD PTR ds:0x42b1ce,0x42b18a
  4061f8:	inc    eax
  4061f9:	ret    
  4061fa:	push   ebp
  4061fb:	mov    ebp,esp
  4061fd:	sub    esp,0x38
  406200:	and    DWORD PTR ds:0x42b22a,0x0
  40620a:	mov    eax,ds:0x42b22a
  40620f:	inc    eax
  406210:	mov    ds:0x42b22a,eax
  406215:	cmp    DWORD PTR ds:0x42b22a,0x14
  40621c:	jbe    0x40624e
  406222:	jmp    0x406241
  406227:	push   0x42b216
  40622c:	push   0x1051
  406231:	push   0x42a251
  406236:	push   0x42a000
  40623b:	call   DWORD PTR ds:0x42b31e
  406241:	cmp    DWORD PTR ds:0x42b22a,0x12
  406248:	jb     0x40620a
  40624e:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  406255:	push   ebx
  406256:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40625d:	mov    eax,DWORD PTR [ebp-0x4]
  406260:	push   esi
  406261:	and    DWORD PTR ds:0x42b22a,0x0
  40626b:	mov    esi,DWORD PTR ds:0x42b22a
  406271:	inc    esi
  406272:	mov    DWORD PTR ds:0x42b22a,esi
  406278:	cmp    DWORD PTR ds:0x42b22a,0x26
  40627f:	jbe    0x4062a0
  406285:	jmp    0x406293
  40628a:	push   DWORD PTR [ebp-0x1c]
  40628d:	call   DWORD PTR ds:0x42b322
  406293:	cmp    DWORD PTR ds:0x42b22a,0x16
  40629a:	jb     0x40626b
  4062a0:	mov    esi,0x75108ae
  4062a5:	or     DWORD PTR ds:0x42b1aa,0x42b19e
  4062af:	xor    eax,esi
  4062b1:	sub    DWORD PTR ds:0x42b1da,0x3dfa
  4062bb:	push   edi
  4062bc:	add    DWORD PTR ds:0x42b1ea,0x4970
  4062c6:	mov    edi,0x3272f5
  4062cb:	and    DWORD PTR ds:0x42b1ea,0x42b1d6
  4062d5:	add    eax,edi
  4062d7:	mov    DWORD PTR [ebp-0x1c],eax
  4062da:	mov    eax,DWORD PTR [ebp+0x14]
  4062dd:	add    DWORD PTR ds:0x42b22a,0x5e0e
  4062e7:	test   eax,eax
  4062e9:	je     0x40635d
  4062ef:	mov    DWORD PTR ds:0x42b1b6,0x13
  4062f9:	cmp    DWORD PTR ds:0x42b1b6,0x0
  406300:	je     0x40634f
  406306:	cmp    DWORD PTR ds:0x42b1b6,0x3
  40630d:	jle    0x40634f
  406313:	jmp    0x406323
  406318:	push   0x8d96
  40631d:	call   DWORD PTR ds:0x42b326
  406323:	cmp    DWORD PTR ds:0x42b1b6,0x4
  40632a:	jne    0x40633d
  406330:	mov    ebx,DWORD PTR ds:0x42b1b6
  406336:	dec    ebx
  406337:	mov    DWORD PTR ds:0x42b1b6,ebx
  40633d:	mov    ebx,DWORD PTR ds:0x42b1b6
  406343:	dec    ebx
  406344:	mov    DWORD PTR ds:0x42b1b6,ebx
  40634a:	jmp    0x4062f9
  40634f:	mov    eax,DWORD PTR [ebp+0x14]
  406352:	sbb    DWORD PTR ds:0x42b1ba,edx
  406358:	mov    eax,DWORD PTR [eax]
  40635a:	mov    DWORD PTR [ebp-0x1c],eax
  40635d:	and    ebx,DWORD PTR ds:0x42b1fa
  406363:	mov    eax,DWORD PTR [ebp-0x4]
  406366:	xor    eax,esi
  406368:	mov    DWORD PTR ds:0x42b22a,0x1f
  406372:	cmp    DWORD PTR ds:0x42b22a,0x0
  406379:	je     0x4063c1
  40637f:	cmp    DWORD PTR ds:0x42b22a,0x2a
  406386:	jg     0x4063c1
  40638c:	jmp    0x4063af
  406391:	push   0x42a061
  406396:	push   0x44b1
  40639b:	push   DWORD PTR [ebp-0x1c]
  40639e:	push   DWORD PTR [ebp-0x18]
  4063a1:	push   DWORD PTR [ebp-0x1c]
  4063a4:	push   0x7663
  4063a9:	call   DWORD PTR ds:0x42b2ea
  4063af:	mov    ebx,DWORD PTR ds:0x42b22a
  4063b5:	dec    ebx
  4063b6:	mov    DWORD PTR ds:0x42b22a,ebx
  4063bc:	jmp    0x406372
  4063c1:	add    eax,edi
  4063c3:	mov    DWORD PTR [ebp-0x8],eax
  4063c6:	sub    eax,eax
  4063c8:	mov    eax,DWORD PTR [ebp-0xc]
  4063cb:	add    DWORD PTR ds:0x42b196,ecx
  4063d1:	xor    eax,esi
  4063d3:	adc    ebx,DWORD PTR ds:0x42b1aa
  4063d9:	add    eax,edi
  4063db:	add    ebx,DWORD PTR ds:0x42b186
  4063e1:	mov    DWORD PTR [ebp-0x24],eax
  4063e4:	mov    eax,DWORD PTR [ebp-0x4]
  4063e7:	add    ebx,DWORD PTR ds:0x42b1ba
  4063ed:	xor    eax,esi
  4063ef:	and    DWORD PTR ds:0x42b19e,0x0
  4063f9:	jmp    0x40640b
  4063fe:	mov    ebx,DWORD PTR ds:0x42b19e
  406404:	inc    ebx
  406405:	mov    DWORD PTR ds:0x42b19e,ebx
  40640b:	cmp    DWORD PTR ds:0x42b19e,0x1e
  406412:	jae    0x406444
  406418:	cmp    DWORD PTR ds:0x42b19e,0x27
  40641f:	ja     0x406444
  406425:	jmp    0x40643f
  40642a:	push   0x42a061
  40642f:	push   DWORD PTR [ebp-0x20]
  406432:	push   0x0
  406434:	push   0x6ce9
  406439:	call   DWORD PTR ds:0x42b2ee
  40643f:	jmp    0x4063fe
  406444:	add    eax,edi
  406446:	mov    DWORD PTR [ebp-0x30],eax
  406449:	movzx  ebx,BYTE PTR ds:0x42b22e
  406450:	add    ebx,DWORD PTR ds:0x42b1c6
  406456:	mov    DWORD PTR ds:0x42b22e,ebx
  40645c:	mov    ebx,DWORD PTR [ebp-0x4]
  40645f:	xor    ebx,esi
  406461:	mov    eax,ds:0x42b1da
  406466:	or     DWORD PTR ds:0x42b1ee,eax
  40646c:	add    ebx,edi
  40646e:	and    DWORD PTR ds:0x42b1b2,0x0
  406478:	mov    eax,ds:0x42b1b2
  40647d:	inc    eax
  40647e:	mov    ds:0x42b1b2,eax
  406483:	cmp    DWORD PTR ds:0x42b1b2,0x1f
  40648a:	jg     0x4064ab
  406490:	jmp    0x40649e
  406495:	push   DWORD PTR [ebp-0x1c]
  406498:	call   DWORD PTR ds:0x42b2f2
  40649e:	cmp    DWORD PTR ds:0x42b1b2,0x17
  4064a5:	jb     0x406478
  4064ab:	mov    eax,DWORD PTR [ebp-0x24]
  4064ae:	and    DWORD PTR ds:0x42b1e2,0x6649
  4064b8:	sub    eax,edi
  4064ba:	sub    DWORD PTR ds:0x42b22e,0x1376
  4064c4:	lea    ecx,[ebx-0x3272f5]
  4064ca:	xor    DWORD PTR ds:0x42b212,0x3b15
  4064d4:	xor    eax,esi
  4064d6:	adc    DWORD PTR ds:0x42b216,0x7bbc
  4064e0:	xor    ecx,esi
  4064e2:	cmp    ecx,eax
  4064e4:	je     0x40678a
  4064ea:	mov    eax,ds:0x42b18a
  4064ef:	sbb    eax,DWORD PTR ds:0x42b192
  4064f5:	mov    ds:0x42b18a,eax
  4064fa:	mov    eax,DWORD PTR [ebp-0x4]
  4064fd:	xor    eax,esi
  4064ff:	add    eax,edi
  406501:	mov    DWORD PTR ds:0x42b21e,0x72e1
  40650b:	cmp    ebx,eax
  40650d:	mov    DWORD PTR ds:0x42b202,0xd47
  406517:	jne    0x406767
  40651d:	xor    DWORD PTR ds:0x42b1f2,0x42b1b6
  406527:	push   DWORD PTR [ebp+0x8]
  40652a:	call   0x424022
  40652f:	xor    DWORD PTR ds:0x42b1b2,edx
  406535:	mov    DWORD PTR [ebp-0x14],eax
  406538:	mov    ecx,DWORD PTR ds:0x42b296
  40653e:	mov    ecx,DWORD PTR [ecx]
  406540:	sbb    DWORD PTR ds:0x42b1f6,ecx
  406546:	mov    eax,DWORD PTR [ebp-0x4]
  406549:	sbb    DWORD PTR ds:0x42b1d6,ecx
  40654f:	mov    ecx,DWORD PTR [ebp-0x14]
  406552:	xor    eax,esi
  406554:	add    eax,edi
  406556:	mov    DWORD PTR ds:0x42b226,0x75db
  406560:	cmp    ecx,eax
  406562:	je     0x4067f5
  406568:	push   DWORD PTR [ebp-0x14]
  40656b:	push   DWORD PTR [ebp+0x8]
  40656e:	mov    DWORD PTR ds:0x42b196,0x32ca
  406578:	call   0x424138
  40657d:	mov    DWORD PTR [ebp-0x14],eax
  406580:	adc    DWORD PTR ds:0x42b18a,ecx
  406586:	mov    eax,DWORD PTR [ebp-0x4]
  406589:	adc    DWORD PTR ds:0x42b186,ecx
  40658f:	mov    ecx,DWORD PTR [ebp-0x14]
  406592:	sub    DWORD PTR ds:0x42b1e6,0x42b196
  40659c:	xor    eax,esi
  40659e:	adc    DWORD PTR ds:0x42b212,0x42b1f6
  4065a8:	add    eax,edi
  4065aa:	cmp    ecx,eax
  4065ac:	mov    DWORD PTR ds:0x42b1da,0x7670
  4065b6:	je     0x4067f5
  4065bc:	xor    eax,eax
  4065be:	add    eax,DWORD PTR ds:0x42b19a
  4065c4:	and    eax,DWORD PTR ds:0x42b1be
  4065ca:	mov    ds:0x42b19a,eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x14]
  4065d2:	mov    eax,DWORD PTR [eax+0x18]
  4065d5:	and    DWORD PTR ds:0x42b1e2,0x0
  4065df:	jmp    0x4065f1
  4065e4:	mov    ecx,DWORD PTR ds:0x42b1e2
  4065ea:	inc    ecx
  4065eb:	mov    DWORD PTR ds:0x42b1e2,ecx
  4065f1:	cmp    DWORD PTR ds:0x42b1e2,0x13
  4065f8:	jae    0x40663a
  4065fe:	cmp    DWORD PTR ds:0x42b1e2,0x9
  406605:	jb     0x40663a
  40660b:	jmp    0x40661b
  406610:	push   0x42b206
  406615:	call   DWORD PTR ds:0x42b2f6
  40661b:	cmp    DWORD PTR ds:0x42b1e2,0x8
  406622:	jne    0x406635
  406628:	mov    ecx,DWORD PTR ds:0x42b1e2
  40662e:	inc    ecx
  40662f:	mov    DWORD PTR ds:0x42b1e2,ecx
  406635:	jmp    0x4065e4
  40663a:	mov    DWORD PTR [ebp-0x24],eax
  40663d:	mov    eax,DWORD PTR [ebp-0x14]
  406640:	mov    ecx,DWORD PTR ds:0x42b1c2
  406646:	adc    ecx,DWORD PTR ds:0x42b1b2
  40664c:	mov    DWORD PTR ds:0x42b1c2,ecx
  406652:	mov    ecx,DWORD PTR [ebp+0x8]
  406655:	or     DWORD PTR ds:0x42b1f6,0x7077
  40665f:	add    ecx,DWORD PTR [eax+0x20]
  406662:	and    eax,0x7368
  406667:	mov    DWORD PTR [ebp-0x2c],ecx
  40666a:	mov    eax,DWORD PTR [ebp-0x14]
  40666d:	and    DWORD PTR ds:0x42b21a,0x0
  406677:	jmp    0x40668b
  40667c:	xor    ecx,ecx
  40667e:	or     ecx,DWORD PTR ds:0x42b21a
  406684:	inc    ecx
  406685:	mov    DWORD PTR ds:0x42b21a,ecx
  40668b:	cmp    DWORD PTR ds:0x42b21a,0x1c
  406692:	jae    0x4066e3
  406698:	cmp    DWORD PTR ds:0x42b21a,0x5
  40669f:	jbe    0x4066e3
  4066a5:	jmp    0x4066c4
  4066aa:	push   0x42b1f6
  4066af:	push   0x42b18e
  4066b4:	push   0x52aa
  4066b9:	push   0x42a0fe
  4066be:	call   DWORD PTR ds:0x42b2fa
  4066c4:	cmp    DWORD PTR ds:0x42b21a,0x4
  4066cb:	jne    0x4066de
  4066d1:	mov    ecx,DWORD PTR ds:0x42b21a
  4066d7:	inc    ecx
  4066d8:	mov    DWORD PTR ds:0x42b21a,ecx
  4066de:	jmp    0x40667c
  4066e3:	mov    ecx,DWORD PTR [ebp+0x8]
  4066e6:	add    ecx,DWORD PTR [eax+0x24]
  4066e9:	mov    DWORD PTR [ebp-0x34],ecx
  4066ec:	adc    DWORD PTR ds:0x42b212,0x34a6
  4066f6:	mov    eax,DWORD PTR [ebp-0x14]
  4066f9:	and    DWORD PTR ds:0x42b192,0x0
  406703:	mov    ecx,DWORD PTR ds:0x42b192
  406709:	inc    ecx
  40670a:	mov    DWORD PTR ds:0x42b192,ecx
  406710:	cmp    DWORD PTR ds:0x42b192,0x4
  406717:	jbe    0x406759
  40671d:	jmp    0x406732
  406722:	push   0x42b1b6
  406727:	push   0x42a2a1
  40672c:	call   DWORD PTR ds:0x42b2fe
  406732:	cmp    DWORD PTR ds:0x42b192,0x3
  406739:	jne    0x40674c
  40673f:	mov    ecx,DWORD PTR ds:0x42b192
  406745:	inc    ecx
  406746:	mov    DWORD PTR ds:0x42b192,ecx
  40674c:	cmp    DWORD PTR ds:0x42b192,0x13
  406753:	jb     0x406703
  406759:	mov    ecx,DWORD PTR [ebp+0x8]
  40675c:	add    ecx,DWORD PTR [eax+0x1c]
  40675f:	mov    DWORD PTR [ebp-0x14],ecx
  406762:	jmp    0x4067bd
  406767:	mov    eax,DWORD PTR [ebp-0x2c]
  40676a:	mov    ecx,DWORD PTR [ebp+0x8]
  40676d:	add    ecx,DWORD PTR [eax+ebx*4]
  406770:	mov    DWORD PTR [ebp-0x28],ecx
  406773:	mov    eax,DWORD PTR [ebp-0x4]
  406776:	mov    ecx,DWORD PTR [ebp-0x28]
  406779:	xor    eax,esi
  40677b:	add    eax,edi
  40677d:	cmp    ecx,eax
  40677f:	je     0x4067bd
  406785:	jmp    0x4067ae
  40678a:	mov    eax,DWORD PTR [ebp-0x4]
  40678d:	mov    ecx,DWORD PTR [ebp-0x8]
  406790:	xor    eax,esi
  406792:	add    eax,edi
  406794:	cmp    ecx,eax
  406796:	mov    eax,DWORD PTR [ebp-0x4]
  406799:	je     0x4067f8
  40679f:	mov    ecx,DWORD PTR [ebp-0x30]
  4067a2:	xor    eax,esi
  4067a4:	add    eax,edi
  4067a6:	cmp    ecx,eax
  4067a8:	je     0x406801
  4067ae:	lea    eax,[ebp-0x8]
  4067b1:	push   eax
  4067b2:	push   DWORD PTR [ebp-0x28]
  4067b5:	push   DWORD PTR [ebp+0xc]
  4067b8:	call   0x40f847
  4067bd:	mov    eax,DWORD PTR [ebp-0x4]
  4067c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4067c3:	xor    eax,esi
  4067c5:	add    eax,edi
  4067c7:	cmp    ecx,eax
  4067c9:	je     0x4067e4
  4067cf:	mov    eax,DWORD PTR [ebp-0x34]
  4067d2:	movzx  eax,WORD PTR [eax+ebx*2]
  4067d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4067d9:	mov    eax,DWORD PTR [ecx+eax*4]
  4067dc:	mov    DWORD PTR [ebp-0x38],eax
  4067df:	jmp    0x40678a
  4067e4:	mov    eax,DWORD PTR [ebp-0xc]
  4067e7:	xor    eax,esi
  4067e9:	lea    ebx,[ebx+eax*1+0x3272f5]
  4067f0:	jmp    0x40646e
  4067f5:	mov    eax,DWORD PTR [ebp-0x4]
  4067f8:	xor    eax,esi
  4067fa:	add    eax,edi
  4067fc:	jmp    0x40f768
  406801:	mov    eax,DWORD PTR [ebp-0x38]
  406804:	add    eax,DWORD PTR [ebp+0x8]
  406807:	mov    DWORD PTR [ebp-0x18],eax
  40680a:	mov    eax,DWORD PTR [ebp-0x1c]
  40680d:	test   eax,eax
  40680f:	je     0x40afcd
  406815:	mov    DWORD PTR [ebp-0x20],0x0
  40681c:	push   0x3
  40681e:	xor    edx,edx
  406820:	pop    edx
  406821:	add    edx,0x8
  406824:	push   edx
  406825:	pop    ecx
  406826:	push   0x6
  406828:	dec    ecx
  406829:	pop    ebx
  40682a:	dec    ebx
  40682b:	xchg   ebx,ecx
  40682d:	sub    ebx,ecx
  40682f:	xchg   ebx,ecx
  406831:	dec    ecx
  406832:	mov    eax,DWORD PTR [ebp-0x1c]
  406835:	imul   eax,ecx
  406838:	sub    esp,eax
  40683a:	mov    DWORD PTR [ebp-0x20],esp
  40683d:	mov    eax,DWORD PTR [ebp-0x4]
  406840:	xor    eax,esi
  406842:	add    eax,edi
  406844:	jmp    0x408c14
  406849:	mov    ecx,DWORD PTR [ebp-0xc]
  40684c:	mov    eax,DWORD PTR [ebp+0x8]
  40684f:	mov    edx,DWORD PTR [ebp+0x14]
  406852:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  406856:	xor    ecx,esi
  406858:	add    ecx,edi
  40685a:	xor    edx,edx
  40685c:	div    ecx
  40685e:	mov    ecx,DWORD PTR [ebp-0x4]
  406861:	xor    ecx,esi
  406863:	lea    eax,[ecx+eax*1+0x3272f5]
  40686a:	mov    ecx,DWORD PTR [ebp+0x8]
  40686d:	mov    edx,DWORD PTR [ebp-0x20]
  406870:	mov    DWORD PTR [edx+ecx*4],eax
  406873:	mov    eax,DWORD PTR [ebp-0xc]
  406876:	mov    ecx,DWORD PTR [ebp+0x8]
  406879:	xor    eax,esi
  40687b:	jmp    0x408c0d
  406880:	mov    ebx,0x2cc0cea
  406885:	mov    bh,BYTE PTR [ebx-0x264bb77e]
  40688b:	pop    esi
  40688c:	fild   QWORD PTR [eax+ebp*1+0x16]
  406890:	adc    edi,DWORD PTR ds:0x5e0c8383
  406896:	add    DWORD PTR [ebx+0x47503f60],0x1b
  40689d:	mov    edi,0xa945a196
  4068a2:	pop    ebx
  4068a3:	jmp    0x406851
  4068a5:	aaa    
  4068a6:	jg     0x40688b
  4068a8:	cmp    al,0xda
  4068aa:	call   0xc2fe:0x6215f336
  4068b1:	and    cl,BYTE PTR [edi]
  4068b3:	rcl    BYTE PTR fs:[eax-0x3a],1
  4068b7:	fnsave [ebx+edx*4-0x6a]
  4068bb:	jge    0x40684e
  4068bd:	sub    DWORD PTR [eax-0x16],eax
  4068c0:	inc    esp
  4068c1:	cmp    al,ch
  4068c3:	mov    gs,WORD PTR [ecx+0x4c6f29e4]
  4068c9:	jno    0x406939
  4068cb:	add    eax,0x76d0e596
  4068d0:	fild   DWORD PTR [edx+eax*1+0x2f742af3]
  4068d7:	and    bl,cl
  4068d9:	mov    ecx,0x2bca71d5
  4068de:	jb     0x40695f
  4068e0:	retf   0x6dc4
  4068e3:	push   ss
  4068e4:	aas    
  4068e5:	push   ecx
  4068e6:	sbb    ecx,0xd3fad4aa
  4068ec:	bound  ebx,QWORD PTR [ecx-0x52]
  4068ef:	jne    0x406883
  4068f1:	push   esi
  4068f2:	mov    cl,0x46
  4068f4:	push   ebx
  4068f5:	add    DWORD PTR [ecx+0x1c5f2130],ebp
  4068fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068fc:	out    0x96,al
  4068fe:	jmp    0x40695f
  406900:	inc    eax
  406901:	jmp    0x406898
  406903:	cmp    eax,0x1a1cd995
  406908:	mov    al,0x96
  40690a:	inc    esp
  40690b:	cmp    ch,ah
  40690d:	mov    dl,BYTE PTR [edi+0x2781c06]
  406913:	mov    ebx,ebp
  406915:	pop    es
  406916:	xchg   ebp,eax
  406917:	stos   BYTE PTR es:[edi],al
  406918:	cmp    ch,BYTE PTR [ebx+ecx*4+0x7e]
  40691c:	adc    ebx,0x135675f9
  406922:	mov    bl,0x30
  406924:	cdq    
  406925:	(bad)  
  406926:	jbe    0x40692d
  406928:	lahf   
  406929:	sbb    DWORD PTR [edi],edx
  40692b:	dec    eax
  40692c:	loop   0x4068d1
  40692e:	mov    edx,0xa35431fb
  406933:	push   0x6756340b
  406938:	cmp    BYTE PTR [ebp+0x605d177e],dl
  40693e:	ror    DWORD PTR [ecx+0x2d],1
  406941:	(bad)  
  406942:	ja     0x406985
  406944:	mov    cl,bl
  406946:	pop    DWORD PTR [edx]
  406948:	sahf   
  406949:	in     eax,dx
  40694a:	out    dx,eax
  40694b:	arpl   WORD PTR [esi+0x42a33ed4],sp
  406951:	cmc    
  406952:	inc    esi
  406953:	ins    DWORD PTR es:[edi],dx
  406954:	cmp    ecx,DWORD PTR [ecx-0x5]
  406957:	add    ebx,DWORD PTR [edi-0x1c4d8632]
  40695d:	lds    edi,FWORD PTR [ebx+eax*2+0x61b895ed]
  406964:	(bad)  
  406965:	jp     0x40692c
  406967:	sub    DWORD PTR [esi-0x4a81f499],edx
  40696d:	int3   
  40696e:	aad    0xb5
  406970:	pop    ss
  406971:	xlat   BYTE PTR ds:[ebx]
  406972:	nop
  406973:	icebp  
  406974:	mov    ebp,0xaa0b0379
  406979:	int    0xe3
  40697b:	(bad)  [edx]
  40697d:	adc    al,0xbd
  40697f:	hlt    
  406980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406981:	inc    ebp
  406982:	cld    
  406983:	inc    esp
  406984:	jae    0x4069b7
  406986:	mov    bl,0xcf
  406988:	adc    edi,DWORD PTR [edi+0x6c]
  40698b:	lock pop ebx
  40698d:	jnp    0x4069c7
  40698f:	icebp  
  406990:	mov    ebp,0x7144620a
  406995:	sti    
  406996:	push   edx
  406997:	scas   al,BYTE PTR es:[edi]
  406998:	cld    
  406999:	ret    0xf465
  40699c:	(bad)  
  40699d:	call   0x77f5e2b5
  4069a2:	pop    edx
  4069a3:	xor    eax,0x1ff3f3a2
  4069a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069a9:	mov    ds:0xb8308ce5,al
  4069ae:	sub    eax,0xe3254459
  4069b3:	jne    0x4069ad
  4069b5:	shr    ch,cl
  4069b7:	nop
  4069b8:	enter  0x45f7,0x32
  4069bc:	inc    edx
  4069bd:	push   ss
  4069be:	jp     0x4069a6
  4069c0:	sbb    DWORD PTR [ebx+ebx*8-0x5],ecx
  4069c4:	in     al,dx
  4069c5:	or     DWORD PTR [ecx+0x1e],edx
  4069c8:	mov    ds:0x4995371f,al
  4069cd:	or     eax,0x513cfcbf
  4069d2:	push   ebx
  4069d3:	outs   dx,BYTE PTR ds:[esi]
  4069d4:	js     0x406a41
  4069d6:	idiv   ecx
  4069d8:	pop    edi
  4069d9:	mov    ah,0xf9
  4069db:	ins    BYTE PTR es:[edi],dx
  4069dc:	xlat   BYTE PTR ds:[ebx]
  4069dd:	sub    al,0xaa
  4069df:	mov    cl,ah
  4069e1:	data16 jg 0x406a15
  4069e4:	or     al,0x42
  4069e6:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e8:	imul   ecx,edi,0xfffffffc
  4069eb:	push   ss
  4069ec:	out    dx,al
  4069ed:	in     eax,0xcc
  4069ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f0:	test   BYTE PTR [eax+0x442689a7],0xdc
  4069f7:	mov    bl,0x6f
  4069f9:	fwait
  4069fa:	shl    BYTE PTR cs:[ebx],cl
  4069fd:	rcr    DWORD PTR [ecx+ebp*1],cl
  406a00:	(bad)  [ebp+0xc]
  406a03:	gs shl eax,cl
  406a06:	jle    0x4069bd
  406a08:	das    
  406a09:	jecxz  0x4069ca
  406a0b:	pushf  
  406a0c:	(bad)  
  406a0d:	in     eax,0x39
  406a0f:	dec    esi
  406a10:	jmp    0x3745:0xec2d2363
  406a17:	cmc    
  406a18:	bound  esp,QWORD PTR [ecx+0x16]
  406a1b:	(bad)  
  406a1c:	mul    BYTE PTR [edx+0x777273a6]
  406a22:	shr    BYTE PTR [ecx],1
  406a24:	dec    edx
  406a25:	je     0x406a64
  406a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a28:	or     bl,BYTE PTR [ebx]
  406a2a:	adc    ebp,ecx
  406a2c:	out    0x84,eax
  406a2e:	bound  esp,QWORD PTR [edx-0x61]
  406a31:	leave  
  406a32:	scas   eax,DWORD PTR es:[edi]
  406a33:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  406a35:	adc    bh,cl
  406a37:	dec    esi
  406a38:	mov    es,WORD PTR [edi+0x3d]
  406a3b:	mov    eax,ebp
  406a3d:	out    dx,eax
  406a3e:	add    al,0xb4
  406a40:	xor    dh,BYTE PTR ds:0x1f69ae2d
  406a46:	std    
  406a47:	push   ds
  406a48:	add    eax,0x9c3819fa
  406a4d:	push   edi
  406a4e:	scas   eax,DWORD PTR es:[edi]
  406a4f:	int3   
  406a50:	push   edi
  406a51:	clc    
  406a52:	popa   
  406a53:	test   DWORD PTR [esi+0x43],ecx
  406a56:	xchg   esp,eax
  406a57:	cmp    bl,BYTE PTR [ecx]
  406a59:	cdq    
  406a5a:	mov    al,ds:0x8b3b4483
  406a5f:	jno    0x406a69
  406a61:	xlat   BYTE PTR ds:[ebx]
  406a62:	dec    edx
  406a63:	lea    edi,[edx-0x61bcb840]
  406a69:	rol    DWORD PTR [ebx-0x56],cl
  406a6c:	push   esp
  406a6d:	xlat   BYTE PTR ds:[ebx]
  406a6e:	cmc    
  406a6f:	push   esi
  406a70:	fnsave [ecx]
  406a72:	mov    ecx,0x30d5dcff
  406a77:	xlat   BYTE PTR ds:[ebx]
  406a78:	jb     0x406a81
  406a7a:	into   
  406a7b:	or     eax,0xbe6ef0e0
  406a80:	push   ebp
  406a81:	retf   0xdda3
  406a84:	mov    ch,BYTE PTR [eax-0x34]
  406a87:	std    
  406a88:	in     al,dx
  406a89:	inc    esp
  406a8b:	into   
  406a8c:	mov    ds:0x4dc6dfba,al
  406a91:	call   0xacf91055
  406a96:	add    eax,0xfd5ebade
  406a9b:	sbb    eax,0xa2537148
  406aa0:	inc    esp
  406aa1:	dec    esi
  406aa2:	sub    al,0x6b
  406aa4:	scas   eax,DWORD PTR es:[edi]
  406aa5:	mov    cl,0x1d
  406aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aa8:	or     al,0x57
  406aaa:	inc    ebx
  406aab:	xlat   BYTE PTR ds:[ebx]
  406aac:	sub    al,0x60
  406aae:	iret   
  406aaf:	mov    ch,BYTE PTR [ecx-0x746984a9]
  406ab5:	pop    ebx
  406ab6:	(bad)  
  406ab7:	push   ebp
  406ab8:	and    DWORD PTR ds:0x4178df2c,esp
  406abe:	(bad)  [ecx+edi*2+0x6d]
  406ac2:	adc    ch,BYTE PTR ds:0x73eda9c2
  406ac8:	mov    ch,BYTE PTR [edx]
  406aca:	cdq    
  406acb:	inc    ebx
  406acc:	push   ebx
  406acd:	pop    esi
  406ace:	fild   DWORD PTR [ecx+ebp*4+0x5c]
  406ad2:	in     al,0x47
  406ad4:	mov    cl,0xd2
  406ad6:	and    DWORD PTR [eax-0x68a89db9],edx
  406adc:	repnz sahf 
  406ade:	mov    dh,0x76
  406ae0:	xor    esi,DWORD PTR [ecx]
  406ae2:	push   esp
  406ae3:	lods   eax,DWORD PTR ds:[esi]
  406ae4:	js     0x406a7a
  406ae6:	fcmovbe st,st(3)
  406ae8:	test   eax,0x5ec515a9
  406aed:	iret   
  406aee:	jle    0x406ad4
  406af0:	jg     0x406add
  406af2:	ins    BYTE PTR es:[edi],dx
  406af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406af4:	lea    edi,[edi]
  406af6:	adc    al,cl
  406af8:	js     0x406b76
  406afa:	mov    ds:0xe5d58b77,eax
  406aff:	xchg   edx,eax
  406b00:	imul   eax,DWORD PTR [ecx+0x2b],0x45
  406b04:	int    0x75
  406b06:	mov    ah,0x8e
  406b08:	mov    cl,0x30
  406b0a:	adc    eax,0xa268f294
  406b0f:	(bad)  
  406b11:	mov    cl,0x33
  406b13:	adc    ch,al
  406b15:	jmp    0x99cb1dd3
  406b1a:	dec    esi
  406b1b:	lods   eax,DWORD PTR ds:[esi]
  406b1c:	imul   esi,ebx,0x5f8f119f
  406b22:	imul   eax,DWORD PTR [eax],0x2c249c3b
  406b28:	out    dx,al
  406b29:	or     al,0x9f
  406b2b:	int3   
  406b2c:	leave  
  406b2d:	sbb    BYTE PTR [ebx-0x78],dh
  406b30:	(bad)  
  406b32:	popf   
  406b33:	mov    ah,BYTE PTR [edi+0x12]
  406b36:	cli    
  406b37:	jo     0x406b1b
  406b39:	loop   0x406af4
  406b3b:	pop    esi
  406b3c:	out    dx,eax
  406b3d:	mov    bl,0x1a
  406b3f:	push   edx
  406b40:	sete   BYTE PTR [edx-0x7]
  406b44:	push   ecx
  406b45:	cmc    
  406b46:	cdq    
  406b47:	bound  ebp,QWORD PTR [ebp+0x4c1c70e6]
  406b4d:	push   ecx
  406b4e:	inc    ecx
  406b4f:	cdq    
  406b50:	adc    ah,BYTE PTR [edx+0x6a]
  406b53:	sbb    ah,BYTE PTR [esi-0x48d641f6]
  406b59:	or     edi,DWORD PTR [ebx]
  406b5b:	adc    esi,DWORD PTR [ecx]
  406b5d:	add    bh,bl
  406b5f:	jmp    0x4a511a4b
  406b64:	mov    WORD PTR [ecx+0x50eab320],?
  406b6a:	xchg   esi,eax
  406b6b:	ins    DWORD PTR es:[edi],dx
  406b6c:	xchg   esp,eax
  406b6d:	xor    al,0x1d
  406b6f:	ss add eax,0xc82d833b
  406b75:	push   eax
  406b76:	retf   
  406b77:	cmp    al,0x89
  406b79:	adc    DWORD PTR [esp+ebp*4-0x3b],edi
  406b7d:	sar    DWORD PTR [ebx+0x76],1
  406b80:	jno    0x406bd9
  406b82:	loopne 0x406b6b
  406b84:	inc    ebp
  406b85:	aas    
  406b86:	test   cl,bh
  406b88:	pop    esp
  406b89:	xor    ecx,DWORD PTR [esi]
  406b8b:	mov    bl,0x91
  406b8d:	inc    ebx
  406b8e:	jne    0x406b41
  406b90:	sar    cl,1
  406b92:	jp     0x406b77
  406b94:	pop    es
  406b95:	das    
  406b96:	js     0x406b96
  406b98:	in     eax,0xb
  406b9a:	mov    ch,0x90
  406b9c:	test   BYTE PTR [eax+esi*8-0xfa85a37],dh
  406ba3:	and    edi,DWORD PTR [ebx-0x2e]
  406ba6:	or     al,0xc4
  406ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ba9:	ror    ebp,0x1c
  406bac:	imul   esi,DWORD PTR [eax+edx*2+0x15],0x73
  406bb1:	jns    0x406b57
  406bb3:	ret    
  406bb4:	cmp    esp,DWORD PTR [edx]
  406bb6:	adc    al,0xc6
  406bb8:	ja     0x406bfc
  406bba:	mov    ebp,0xd7f569
  406bbf:	jp     0x406b49
  406bc1:	and    bl,BYTE PTR [eax-0x44144bd0]
  406bc7:	ss mov ah,0x6a
  406bca:	cdq    
  406bcb:	mov    dh,0x4
  406bcd:	sub    BYTE PTR [edx-0x3f],dl
  406bd0:	in     eax,0xed
  406bd2:	add    cl,BYTE PTR [ecx+edi*4-0xdeabab5]
  406bd9:	icebp  
  406bda:	fstp   DWORD PTR [ebx+0x220660b1]
  406be0:	(bad)  
  406be1:	sbb    esp,ecx
  406be3:	pop    edi
  406be4:	mov    ebp,0x9495b073
  406be9:	ja     0x406c1a
  406beb:	inc    edx
  406bec:	cmp    esi,DWORD PTR [esi+0x1ede0478]
  406bf2:	jmp    0xd31e:0x2b6b9302
  406bf9:	retf   
  406bfa:	cmp    cl,BYTE PTR gs:[ebx]
  406bfd:	addr16 mov edx,ecx
  406c00:	sbb    eax,0x837d4588
  406c05:	fwait
  406c06:	inc    edx
  406c07:	mov    dl,0x93
  406c09:	pop    esp
  406c0a:	adc    cl,BYTE PTR [ecx-0x3438a385]
  406c10:	dec    eax
  406c11:	into   
  406c12:	xor    bl,BYTE PTR [eax]
  406c14:	jmp    0x15c9:0xa8853a3
  406c1b:	jp     0x406c49
  406c1d:	push   ss
  406c1e:	les    ecx,FWORD PTR ds:0xed9ea863
  406c24:	loopne 0x406c47
  406c26:	pop    es
  406c27:	daa    
  406c28:	lock inc ecx
  406c2a:	cmp    eax,0x4abcbcad
  406c2f:	shl    DWORD PTR [ebp+eax*8-0x25],cl
  406c33:	inc    eax
  406c34:	dec    edi
  406c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c36:	pop    esp
  406c37:	mov    ah,0x38
  406c39:	pop    edi
  406c3a:	shl    BYTE PTR [ebp+ecx*4-0x6e],1
  406c3e:	in     eax,dx
  406c3f:	cli    
  406c40:	or     al,ch
  406c42:	test   eax,0x153bf5ea
  406c47:	sbb    BYTE PTR [ecx],bh
  406c49:	bound  edx,QWORD PTR [ebp+0x14640dd7]
  406c4f:	or     dl,bl
  406c51:	sbb    eax,0x5031cda7
  406c56:	mov    edi,0x18bc1a64
  406c5b:	fdiv   st,st(7)
  406c5d:	test   al,0xfd
  406c5f:	pop    ecx
  406c60:	clc    
  406c61:	jg     0x406c0d
  406c63:	fistp  DWORD PTR [esi]
  406c65:	inc    edx
  406c66:	aas    
  406c67:	xchg   edi,eax
  406c68:	and    dl,BYTE PTR [ebp-0x13]
  406c6b:	push   ss
  406c6c:	and    dh,BYTE PTR [ecx-0x498089b1]
  406c72:	push   ss
  406c73:	jmp    0x406c16
  406c75:	fld    TBYTE PTR [eax-0x3a40db58]
  406c7b:	xor    BYTE PTR [edi+0x19],dl
  406c7e:	dec    ecx
  406c7f:	and    eax,0xc6161539
  406c84:	lds    esp,FWORD PTR [edx+0x31f91915]
  406c8a:	xor    eax,0xce583629
  406c8f:	(bad)  
  406c91:	push   esi
  406c92:	jb     0x406c9a
  406c94:	sar    BYTE PTR [ebp+eax*2+0x5b745e4c],cl
  406c9b:	fist   DWORD PTR fs:0x84c5c828
  406ca2:	jecxz  0x406c53
  406ca4:	xlat   BYTE PTR ds:[ebx]
  406ca5:	ds mov edi,0x9d45d651
  406cab:	mov    gs,WORD PTR [ecx]
  406cad:	ds jne 0x406c30
  406cb0:	sub    cl,BYTE PTR [edx-0x16f77ed4]
  406cb6:	loope  0x406cd0
  406cb8:	pop    es
  406cb9:	in     eax,0xf8
  406cbb:	mov    BYTE PTR [esi-0x2a2c6e98],bh
  406cc1:	mov    edi,0xb571d99b
  406cc6:	out    dx,al
  406cc7:	fsubp  st(7),st
  406cc9:	add    al,0x11
  406ccb:	xchg   ebx,eax
  406ccc:	rol    DWORD PTR [ecx],cl
  406cce:	ror    ah,1
  406cd0:	jbe    0x406ce6
  406cd2:	xchg   BYTE PTR [edi+0x24],ah
  406cd5:	sub    eax,0x48a536cd
  406cda:	gs dec ebp
  406cdc:	mov    cs,WORD PTR [edx]
  406cde:	add    BYTE PTR [ebx+0x2be2ea14],0x9b
  406ce5:	dec    ebp
  406ce6:	dec    ebp
  406ce7:	addr16 loope 0x406c83
  406cea:	pop    ebp
  406ceb:	sub    eax,0x89eb3da2
  406cf0:	dec    ecx
  406cf1:	test   al,0x0
  406cf3:	cmp    dh,BYTE PTR [edi-0x55b1475c]
  406cf9:	mov    bl,0xca
  406cfb:	push   0xffffff92
  406cfd:	std    
  406cfe:	les    esp,FWORD PTR [ebx]
  406d00:	push   edi
  406d02:	popf   
  406d03:	inc    edi
  406d04:	or     DWORD PTR [edi+0x28],esp
  406d07:	retf   
  406d08:	sbb    eax,0x8249ff9e
  406d0d:	xchg   DWORD PTR [edi+eiz*2],ecx
  406d10:	lods   eax,DWORD PTR ds:[esi]
  406d11:	pop    edi
  406d12:	cmp    al,0x7a
  406d14:	push   cs
  406d15:	xchg   esi,eax
  406d16:	cs out dx,al
  406d18:	mov    ecx,0x279dfb9
  406d1e:	ficom  WORD PTR [edi]
  406d20:	arpl   WORD PTR [eax],cx
  406d22:	fisub  WORD PTR [edx]
  406d24:	neg    DWORD PTR [edi-0x80]
  406d27:	int3   
  406d28:	fst    QWORD PTR [edi+edx*2]
  406d2b:	cld    
  406d2c:	scas   eax,DWORD PTR es:[edi]
  406d2d:	mov    ?,ebx
  406d2f:	mov    bh,0x49
  406d31:	jmp    0x406d59
  406d33:	jo     0x406ce4
  406d35:	inc    edi
  406d36:	das    
  406d37:	mov    ds:0x3f91fd00,al
  406d3c:	bsr    eax,edx
  406d3f:	ins    DWORD PTR es:[edi],dx
  406d40:	imul   esp,DWORD PTR [ebx],0xffffffcb
  406d43:	dec    esi
  406d44:	leave  
  406d45:	jmp    0x889d:0x2e95824b
  406d4c:	jo     0x406d37
  406d4e:	shr    BYTE PTR [eax],cl
  406d50:	js     0x406d22
  406d52:	retf   0x3b84
  406d55:	and    bl,BYTE PTR [edx-0x3d004468]
  406d5b:	icebp  
  406d5c:	jmp    0xb3301ddb
  406d61:	out    dx,eax
  406d62:	pop    edx
  406d63:	out    0x96,al
  406d65:	std    
  406d66:	xchg   ecx,eax
  406d67:	xchg   ecx,eax
  406d68:	jnp    0x406d32
  406d6a:	scas   al,BYTE PTR es:[edi]
  406d6b:	js     0x406d8c
  406d6d:	jb     0x406d5c
  406d6f:	fisttp WORD PTR [ebp-0x75]
  406d72:	ss enter 0xf395,0x59
  406d77:	jbe    0x406d14
  406d79:	gs (bad) 
  406d7b:	mov    esp,0x9cb2017b
  406d80:	fild   QWORD PTR [edi-0x40]
  406d83:	sub    eax,0x7bac0241
  406d88:	push   edx
  406d89:	jo     0x406d9c
  406d8b:	push   ebx
  406d8c:	outs   dx,DWORD PTR ds:[esi]
  406d8d:	dec    ebx
  406d8e:	pop    edx
  406d8f:	jg     0x406e0c
  406d91:	js     0x406d55
  406d93:	shl    BYTE PTR [ebx-0x5f33bc24],0xd7
  406d9a:	mov    DWORD PTR [ecx],eax
  406d9c:	test   DWORD PTR [edi-0x6eb3fed3],ecx
  406da2:	sahf   
  406da3:	sar    BYTE PTR [eax+ebx*2-0x1732b816],1
  406daa:	mov    edx,0x421fda5d
  406daf:	inc    esi
  406db0:	cmp    ecx,DWORD PTR [eax-0x42]
  406db3:	inc    esp
  406db4:	jp     0x406dac
  406db6:	in     al,0x21
  406db8:	loope  0x406d77
  406dba:	dec    DWORD PTR [ebp-0x5e01394a]
  406dc0:	cmp    DWORD PTR [ecx],esi
  406dc2:	imul   edx,DWORD PTR [ebx],0xffffff81
  406dc5:	add    eax,0x91c08dad
  406dca:	xlat   BYTE PTR ds:[ebx]
  406dcb:	push   es
  406dcc:	or     al,0xd8
  406dce:	imul   eax,DWORD PTR [ebx+0xf],0xffffff81
  406dd2:	xchg   DWORD PTR ds:0x99946ab5,esi
  406dd8:	add    al,0x39
  406dda:	xor    al,0x54
  406ddc:	test   al,0xc9
  406dde:	xor    ch,BYTE PTR [ebx-0x6d81c81]
  406de4:	(bad)  
  406de5:	push   0x251ddc84
  406dea:	js     0x406dde
  406dec:	test   eax,0x3a01aea9
  406df1:	mov    esi,0xaa1036c8
  406df6:	add    bl,0x5c
  406df9:	(bad)  
  406dfa:	pop    ecx
  406dfb:	sar    eax,0xa3
  406dfe:	fwait
  406dff:	lock das 
  406e01:	es enter 0x9bd,0x88
  406e06:	inc    ecx
  406e07:	cmp    BYTE PTR [ebx],bh
  406e09:	fld    DWORD PTR [eax]
  406e0b:	sar    BYTE PTR [edx-0x67],1
  406e0e:	clc    
  406e0f:	pusha  
  406e10:	jge    0x406dda
  406e12:	call   0xf824fd7d
  406e17:	aad    0x79
  406e19:	sbb    BYTE PTR [ebx+0x2f],cl
  406e1c:	mov    ds:0x3a0d86a,al
  406e21:	cmp    al,0xc2
  406e23:	mov    esi,0xcf610161
  406e28:	xor    DWORD PTR [edx],esp
  406e2a:	lock fisub WORD PTR es:[ebp+ecx*8-0x5f]
  406e30:	mov    al,0x8d
  406e32:	sub    DWORD PTR [esi+0x502983d4],edx
  406e38:	sub    bh,al
  406e3a:	shl    ch,1
  406e3c:	js     0x406e1e
  406e3e:	mov    esp,0x6ffd61d5
  406e43:	cmp    al,0xc7
  406e45:	mov    ecx,ebp
  406e47:	mov    ebx,0x58500d73
  406e4c:	and    DWORD PTR [edi+0x6d],ebp
  406e4f:	sbb    ebp,DWORD PTR [edx+0x53f810df]
  406e55:	call   0xa56ea1f9
  406e5a:	mov    dl,0x57
  406e5c:	push   ebx
  406e5d:	mov    WORD PTR [edx+0x79a60e64],?
  406e63:	jp     0x406ece
  406e65:	jbe    0x406e59
  406e67:	popa   
  406e68:	(bad)  
  406e69:	xchg   edx,eax
  406e6a:	lahf   
  406e6b:	lds    esi,FWORD PTR [ebx+0x7a]
  406e6e:	(bad)  [eax+0x345e7e52]
  406e74:	imul   ecx,edx,0xe25405d9
  406e7a:	jb     0x406ea0
  406e7c:	add    ch,BYTE PTR [edx]
  406e7e:	nop
  406e7f:	inc    eax
  406e80:	and    DWORD PTR [edi-0x4135c9a6],esi
  406e86:	push   cs
  406e87:	sbb    eax,0xc559aac4
  406e8c:	mov    WORD PTR [ebx+0x6f400b6f],gs
  406e92:	mov    esi,0xab4e5f2e
  406e97:	and    BYTE PTR [ebx+0x53],bh
  406e9a:	mov    ds:0x6b13565d,al
  406e9f:	ret    0xec66
  406ea2:	rol    BYTE PTR [ebx],1
  406ea4:	fsub   DWORD PTR ds:0x6e4d5687
  406eaa:	stc    
  406eab:	cs dec eax
  406ead:	sbb    BYTE PTR [edi],al
  406eaf:	std    
  406eb0:	jp     0x406ed5
  406eb2:	and    eax,0xab9ca958
  406eb7:	and    al,al
  406eb9:	xchg   DWORD PTR ss:[edx+eax*2],edx
  406ebd:	ja     0x406f03
  406ebf:	sbb    esp,DWORD PTR [ebx]
  406ec1:	sbb    eax,0xb14bd742
  406ec6:	movnti DWORD PTR [edx-0x65],esi
  406eca:	mov    BYTE PTR ds:0xbc95a4c4,bl
  406ed0:	xchg   edx,eax
  406ed1:	adc    bh,cl
  406ed3:	xchg   esi,eax
  406ed4:	mov    esp,0x70fa0974
  406ed9:	xchg   esp,eax
  406eda:	shr    DWORD PTR [eax-0x77510e11],0xe3
  406ee1:	add    ebp,DWORD PTR [edx]
  406ee3:	stc    
  406ee4:	xor    edx,DWORD PTR [esi]
  406ee6:	push   cs
  406ee7:	pusha  
  406ee8:	jmp    0x1397:0x72b12c6f
  406eef:	mov    edi,0x20e330ea
  406ef4:	pop    es
  406ef5:	mov    ebp,0xe7ddeb24
  406efa:	(bad)  
  406efb:	stc    
  406efc:	adc    eax,0xf5454c90
  406f01:	and    edx,DWORD PTR [ecx+0x6a]
  406f04:	inc    esi
  406f05:	cdq    
  406f06:	adc    al,0xb5
  406f08:	xchg   ebp,eax
  406f09:	clc    
  406f0a:	jnp    0x406ef0
  406f0c:	das    
  406f0d:	sbb    al,BYTE PTR [eax+ebx*8+0x63]
  406f11:	adc    ch,BYTE PTR [edi+0x448cb3f5]
  406f17:	rol    DWORD PTR [esp+ebp*8-0x2b6bf315],0x23
  406f1f:	nop
  406f20:	adc    BYTE PTR [ecx+0x99fa1c3],cl
  406f26:	pushf  
  406f27:	sbb    eax,ebx
  406f29:	cmp    al,0x10
  406f2b:	pop    ds
  406f2c:	jnp    0x406f98
  406f2e:	sub    eax,0x6104bf7d
  406f33:	(bad)  
  406f34:	cmc    
  406f35:	mov    cl,0x46
  406f37:	repnz fbstp TBYTE PTR ds:0x94d99376
  406f3e:	add    bh,dh
  406f40:	ret    0x1dd0
  406f43:	adc    DWORD PTR [ebp+0x41f2012a],0xfe1caac6
  406f4d:	jns    0x406efc
  406f4f:	mov    bl,cl
  406f51:	and    BYTE PTR [ecx+0x19],bh
  406f54:	mov    edx,0x15bc2586
  406f59:	xchg   DWORD PTR [eax+0x3e],edx
  406f5c:	cmp    al,0x9
  406f5e:	mov    BYTE PTR [ecx-0x6f],0xe
  406f62:	cli    
  406f63:	mov    dh,0x2
  406f65:	ret    
  406f66:	fdivr  QWORD PTR [edi-0x11]
  406f69:	add    dl,BYTE PTR [ebx-0x6fc28b8f]
  406f6f:	(bad)  
  406f70:	push   0x4b
  406f72:	add    edi,ebp
  406f74:	and    al,0x64
  406f76:	lock imul ebx,DWORD PTR [edx-0x2a46ee4d],0x63
  406f7e:	xchg   edi,eax
  406f7f:	(bad)  
  406f80:	xor    eax,0x3cabaeed
  406f85:	(bad)  
  406f87:	pop    ebx
  406f88:	pop    ecx
  406f89:	xchg   esp,eax
  406f8a:	rcl    DWORD PTR [ecx-0x2cd80400],0xd
  406f91:	push   esp
  406f92:	sub    BYTE PTR [edi],al
  406f94:	or     ah,0x2e
  406f97:	fwait
  406f98:	and    BYTE PTR ds:0x13cdf1c8,ch
  406f9e:	jo     0x406f58
  406fa0:	fsub   QWORD PTR [ecx+0x3d]
  406fa3:	repz pop esi
  406fa5:	aam    0x84
  406fa7:	fdivr  QWORD PTR [edi+0x2d7ee363]
  406fad:	xor    ch,BYTE PTR [edi+0x1d]
  406fb0:	test   BYTE PTR [ebp+0xe],dl
  406fb3:	push   0x9eb7077e
  406fb8:	mov    bl,0xa8
  406fba:	xchg   edx,eax
  406fbb:	fst    DWORD PTR [esi+0x4572bea7]
  406fc1:	add    al,0xcb
  406fc3:	sbb    BYTE PTR [eax],cl
  406fc5:	xchg   edi,eax
  406fc6:	cmc    
  406fc7:	test   al,0x1a
  406fc9:	xor    eax,0xcd172f82
  406fce:	push   esi
  406fcf:	xchg   esp,eax
  406fd0:	fld    DWORD PTR [ebx+0x32]
  406fd3:	and    edx,DWORD PTR [edx+0x43c65c32]
  406fd9:	dec    edx
  406fda:	cmp    dh,BYTE PTR [edi-0x9]
  406fdd:	call   0xa018c9a6
  406fe2:	(bad)  
  406fe3:	imul   ebx,DWORD PTR [ecx+0x4a2cc2cf],0xffffffad
  406fea:	imul   eax,DWORD PTR [ebx-0x64],0xa3581a1d
  406ff1:	out    0x6f,al
  406ff3:	mov    edx,0x6a4055d9
  406ff8:	clc    
  406ff9:	push   edi
  406ffa:	xlat   BYTE PTR ds:[ebx]
  406ffb:	daa    
  406ffc:	adc    DWORD PTR [esi-0x67],esp
  406fff:	inc    ebp
  407000:	xlat   BYTE PTR ds:[ebx]
  407001:	xchg   esp,eax
  407002:	add    DWORD PTR [esi+0x27bb4d3a],ecx
  407008:	adc    eax,0x89647431
  40700d:	jmp    0xd6ee71f1
  407012:	sbb    eax,0xe488c733
  407017:	mov    ch,0xfe
  407019:	leave  
  40701a:	leave  
  40701b:	or     DWORD PTR [ebp-0x4f0cb609],ecx
  407021:	mov    esi,0x162168e6
  407026:	or     edx,DWORD PTR [ebp-0x2f72e73]
  40702c:	fsubr  DWORD PTR [ebp-0x6f993c3e]
  407032:	cli    
  407033:	sbb    ebp,DWORD PTR [eax-0x2344f521]
  407039:	aam    0x41
  40703b:	(bad)  
  40703c:	fnstenv [esi+eax*8+0xd95d7fe]
  407043:	loop   0x407040
  407045:	xlat   BYTE PTR ds:[ebx]
  407046:	lock call 0x5d0b:0xa8e8f7b6
  40704e:	sbb    bl,BYTE PTR [eax]
  407050:	test   BYTE PTR [ecx],dl
  407052:	cwde   
  407053:	scas   eax,DWORD PTR es:[edi]
  407054:	pop    ds
  407055:	jge    0x407059
  407057:	pop    esi
  407058:	and    DWORD PTR [ecx],esi
  40705a:	pop    esi
  40705b:	mul    BYTE PTR [ebp-0x436a05b2]
  407061:	lds    esi,FWORD PTR [ebp-0x5080f495]
  407067:	jg     0x40705c
  407069:	rcr    DWORD PTR [edi-0x38],1
  40706c:	ins    BYTE PTR es:[edi],dx
  40706d:	jmp    0x4a42:0x71d5f39d
  407074:	mov    al,0x48
  407076:	xchg   esi,eax
  407077:	popf   
  407078:	fs into 
  40707a:	inc    ecx
  40707b:	retf   
  40707c:	popf   
  40707d:	or     al,0x81
  40707f:	xor    DWORD PTR [eax-0x229a90fc],eax
  407085:	and    BYTE PTR [edi+0x35b09872],bh
  40708b:	mov    bl,0xe3
  40708d:	adc    ah,BYTE PTR [ebp-0x41bfdf9a]
  407093:	cmc    
  407094:	icebp  
  407095:	mov    ebx,0x6ed8967a
  40709a:	inc    esp
  40709b:	test   BYTE PTR ss:[edx-0x2103c2d2],bl
  4070a2:	or     al,BYTE PTR fs:[edx+0x7fc99e18]
  4070a9:	imul   edi,DWORD PTR [esi+0x3d],0x63578e4e
  4070b0:	iret   
  4070b1:	call   0x91445f8f
  4070b6:	mov    edx,ebx
  4070b8:	push   eax
  4070b9:	push   ebp
  4070ba:	jecxz  0x4070af
  4070bc:	das    
  4070bd:	arpl   WORD PTR [ebx+ebp*8],cx
  4070c0:	loope  0x40704d
  4070c2:	jae    0x40709f
  4070c4:	push   cs
  4070c5:	mov    ah,0xb2
  4070c7:	int    0x60
  4070c9:	or     eax,0x9d71597d
  4070ce:	inc    esp
  4070cf:	repnz fsub DWORD PTR [edi-0x5bde44f8]
  4070d6:	dec    ebp
  4070d7:	retf   0x4a14
  4070da:	adc    ah,BYTE PTR [edx-0x6e04c13f]
  4070e0:	aaa    
  4070e1:	shl    BYTE PTR [edx-0x13],0x8e
  4070e5:	cld    
  4070e6:	and    esi,DWORD PTR [ecx-0x39d9a958]
  4070ec:	add    ebp,DWORD PTR [ecx]
  4070ee:	and    ebx,DWORD PTR [ecx+0x666548f7]
  4070f4:	push   eax
  4070f5:	jno    0x4070ec
  4070f7:	sbb    al,0xec
  4070f9:	push   eax
  4070fa:	add    edi,edx
  4070fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070fe:	je     0x407130
  407100:	ja     0x4070d7
  407102:	int3   
  407103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407104:	clc    
  407105:	or     DWORD PTR [eax],ecx
  407107:	je     0x407126
  407109:	fcom   DWORD PTR [esi+0x3d558afa]
  40710f:	xor    al,0xcc
  407111:	(bad)  
  407112:	cwde   
  407113:	(bad)  
  407114:	jmp    0xf23c:0x3bf9b4cf
  40711b:	aam    0x58
  40711d:	mov    esi,0xb03a095b
  407122:	sbb    bl,cl
  407124:	inc    ebx
  407125:	add    BYTE PTR [esi-0x42],dh
  407128:	adc    DWORD PTR [edx+edi*4-0x4be436f],edx
  40712f:	clc    
  407130:	mov    ch,bl
  407132:	test   eax,0xbc6d954
  407137:	cmp    DWORD PTR [edx],eax
  407139:	lahf   
  40713a:	(bad)  
  40713b:	in     eax,0x30
  40713d:	add    bl,BYTE PTR [edi+ebx*1+0x5f]
  407141:	add    bl,BYTE PTR [ebp+0x4c]
  407144:	out    dx,al
  407145:	fsubr  QWORD PTR [ebp+ebp*8+0x27611e01]
  40714c:	ds push 0xffffff93
  40714f:	mov    ebx,0x6f341240
  407154:	sub    edx,DWORD PTR [ecx-0xde485ad]
  40715a:	(bad)  
  40715b:	adc    dh,BYTE PTR [edx+0x3d67708b]
  407161:	out    dx,al
  407162:	push   0x4dfd556d
  407167:	sbb    DWORD PTR [edx-0x2c8bdc47],esi
  40716d:	and    DWORD PTR [esi+0x4a5e1485],ecx
  407173:	or     DWORD PTR [esi+0x4c],esi
  407176:	sub    DWORD PTR [edi-0xd],esi
  407179:	pusha  
  40717a:	ja     0x407178
  40717c:	stos   DWORD PTR es:[edi],eax
  40717d:	xchg   edi,eax
  40717e:	and    ebx,eax
  407180:	test   esi,ecx
  407182:	mov    dl,0x91
  407184:	scas   eax,DWORD PTR es:[edi]
  407185:	jmp    FWORD PTR fs:[eax+0x53d00316]
  40718c:	(bad)  
  40718d:	or     DWORD PTR [ebx-0x69],edi
  407190:	mov    dh,0x70
  407192:	pushf  
  407193:	mov    bh,0xb4
  407195:	fld    QWORD PTR [ecx+0x7f6f494]
  40719b:	cld    
  40719c:	push   cs
  40719d:	call   0x6810f2db
  4071a2:	jbe    0x407144
  4071a4:	sub    al,0x16
  4071a6:	das    
  4071a7:	xchg   esp,eax
  4071a8:	adc    al,0xc3
  4071aa:	and    bl,dl
  4071ac:	adc    al,0x52
  4071ae:	pop    ecx
  4071af:	addr16 test eax,0x14ef56e9
  4071b5:	xchg   ebp,eax
  4071b7:	ins    DWORD PTR es:[edi],dx
  4071b8:	mov    ecx,ecx
  4071ba:	inc    edx
  4071bb:	add    eax,0x900a83d1
  4071c0:	cwde   
  4071c1:	fdiv   DWORD PTR [edx+0x4245cb97]
  4071c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c8:	xchg   edi,eax
  4071c9:	sub    eax,0xb0ad42e0
  4071ce:	sbb    ebp,0x23
  4071d1:	frstor [eax-0xad83198]
  4071d7:	mov    dh,0x45
  4071d9:	jne    0x40717e
  4071db:	xchg   ebp,eax
  4071dc:	xor    ch,BYTE PTR [edi+eiz*2-0x71d80b57]
  4071e3:	xchg   ebx,eax
  4071e4:	jle    0x4071e7
  4071e6:	lds    edx,FWORD PTR [edx+0x31b74a02]
  4071ec:	sti    
  4071ed:	and    dh,bl
  4071ef:	nop
  4071f0:	out    0xd7,eax
  4071f2:	add    dl,bh
  4071f4:	jp     0x407235
  4071f6:	stos   DWORD PTR es:[edi],eax
  4071f7:	arpl   WORD PTR [edx+0x76],cx
  4071fa:	sti    
  4071fb:	addr16 dec eax
  4071fd:	add    al,0xd7
  4071ff:	or     DWORD PTR [ecx],ecx
  407201:	dec    edi
  407202:	outs   dx,BYTE PTR ds:[esi]
  407203:	ins    BYTE PTR es:[edi],dx
  407204:	mov    edx,0xa90b3c16
  407209:	ss jo  0x4071db
  40720c:	clc    
  40720d:	ins    DWORD PTR es:[edi],dx
  40720e:	mov    edx,0xe9b34a49
  407213:	test   eax,0x4c61936f
  407218:	pop    esp
  407219:	sub    DWORD PTR [ebp+0x2c93b8b6],0xffffff90
  407220:	or     DWORD PTR [ebx+0x45],0x77
  407224:	in     al,dx
  407225:	fsubr  st(0),st
  407227:	sub    DWORD PTR [edx+0x7d],eax
  40722a:	ficomp WORD PTR [edi+eax*8]
  40722d:	call   0xaf5f:0xa4f2915c
  407234:	xor    al,0x13
  407237:	dec    ebp
  407238:	fst    DWORD PTR [esp+ebp*2]
  40723b:	add    cl,dh
  40723d:	mov    bl,0xc
  40723f:	inc    ebx
  407240:	(bad)  
  407241:	loope  0x40728b
  407243:	pop    esi
  407244:	dec    ecx
  407246:	cld    
  407247:	clc    
  407248:	jle    0x40723c
  40724a:	add    eax,edi
  40724c:	fild   QWORD PTR [ecx+0x66]
  40724f:	shl    BYTE PTR [eax+ecx*8],0xb5
  407253:	jnp    0x40729d
  407255:	cld    
  407256:	xchg   BYTE PTR ds:0x3048225f,ch
  40725c:	sbb    al,0xe3
  40725e:	dec    ebp
  40725f:	mov    ebx,0x538526e4
  407264:	jne    0x40724d
  407266:	stc    
  407267:	rol    BYTE PTR [esi+0x3c1ac1c],0x7b
  40726e:	arpl   WORD PTR [ebx],ax
  407270:	jne    0x407242
  407272:	aad    0xe1
  407274:	std    
  407275:	dec    edx
  407276:	retf   0xf6a0
  407279:	outs   dx,DWORD PTR ds:[esi]
  40727a:	xor    BYTE PTR [esi-0x6a],ah
  40727d:	lock adc eax,DWORD PTR [eax]
  407280:	std    
  407281:	in     al,dx
  407282:	xchg   esp,eax
  407283:	cmp    eax,DWORD PTR [edi+0x1]
  407286:	mov    ds:0xe899f7b0,eax
  40728b:	mov    ds:0x7e47472f,eax
  407290:	retf   0x553b
  407293:	retf   0xde0b
  407296:	inc    edi
  407297:	mov    bl,0x31
  407299:	sbb    edx,DWORD PTR [ebx-0x53629046]
  40729f:	add    al,0x65
  4072a1:	ret    0x4936
  4072a4:	aas    
  4072a5:	in     eax,dx
  4072a6:	mov    esi,0xa18572aa
  4072ab:	xchg   ebx,eax
  4072ac:	(bad)  
  4072ad:	shl    BYTE PTR [edi+0x31],1
  4072b0:	loope  0x407303
  4072b2:	inc    edx
  4072b3:	and    edi,esp
  4072b5:	push   esi
  4072b6:	push   edi
  4072b7:	repnz int 0x85
  4072ba:	call   FWORD PTR ds:0x582ab8a
  4072c0:	xor    al,0xef
  4072c2:	adc    BYTE PTR [esp+edx*1+0x72cc85a],cl
  4072c9:	stos   BYTE PTR es:[edi],al
  4072ca:	sbb    dh,bl
  4072cc:	in     al,0x55
  4072ce:	(bad)  
  4072cf:	fisub  DWORD PTR [edi]
  4072d1:	imul   eax,edx,0xffffff97
  4072d4:	xchg   bl,ch
  4072d6:	xor    BYTE PTR ds:0x3ae7b574,cl
  4072dc:	inc    ecx
  4072dd:	and    eax,0x85df9849
  4072e2:	and    eax,0x6b0b2e9
  4072e7:	sbb    eax,0x72e2cf97
  4072ec:	jae    0x407356
  4072ee:	inc    edx
  4072ef:	dec    ebp
  4072f0:	(bad)  
  4072f2:	xchg   ebp,eax
  4072f3:	push   esi
  4072f4:	cmp    BYTE PTR [ebx-0x50],dh
  4072f7:	dec    eax
  4072f8:	sbb    al,0xc3
  4072fa:	dec    ecx
  4072fb:	iret   
  4072fc:	pop    ecx
  4072fd:	pop    ebx
  4072fe:	jl     0x407290
  407300:	mov    eax,0x7ec175f4
  407305:	lods   al,BYTE PTR ds:[esi]
  407306:	adc    BYTE PTR [ecx+ebp*8+0x977c13b],bh
  40730d:	in     al,0x97
  40730f:	js     0x407291
  407311:	shl    BYTE PTR [edx],cl
  407313:	mov    ebx,DWORD PTR [edi+0x8]
  407316:	in     al,dx
  407317:	out    dx,eax
  407318:	in     eax,dx
  407319:	jmp    0x407357
  40731b:	mov    cs:0x28da6878,al
  407321:	pop    esp
  407322:	inc    edx
  407323:	out    0x81,al
  407325:	iret   
  407326:	cmp    ebp,ecx
  407328:	lods   eax,DWORD PTR ds:[esi]
  407329:	dec    eax
  40732a:	clc    
  40732b:	mov    dl,0x63
  40732d:	xor    eax,0x66e062e2
  407332:	or     eax,0xc9cd4e99
  407337:	fdiv   DWORD PTR [esi+0x5b]
  40733a:	repnz arpl WORD PTR [eax-0x652806c7],bx
  407341:	out    dx,al
  407342:	xchg   ebx,eax
  407343:	in     eax,dx
  407344:	adc    BYTE PTR [edx-0x14],al
  407347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407348:	gs addr16 aad 0x11
  40734c:	sub    BYTE PTR [edx-0x21],bl
  40734f:	mov    ecx,0x1e06d0d0
  407354:	adc    BYTE PTR [esi],ah
  407356:	inc    DWORD PTR [edx]
  407358:	or     al,BYTE PTR [edi]
  40735a:	adc    al,0x6e
  40735c:	stos   DWORD PTR es:[edi],eax
  40735d:	inc    ecx
  40735e:	retf   0x875e
  407361:	(bad)  
  407363:	add    eax,0xd7ee067
  407368:	pop    esp
  407369:	into   
  40736a:	imul   eax,DWORD PTR [ebx-0x55],0x3748a690
  407371:	add    DWORD PTR [esi],edi
  407373:	jge    0x40731c
  407375:	lods   eax,DWORD PTR ds:[esi]
  407376:	call   0x97b5:0xf8a3dea1
  40737d:	cld    
  40737e:	std    
  40737f:	sbb    BYTE PTR [esi-0x3a36453c],0xf9
  407386:	sub    BYTE PTR [ebp-0x1],ch
  407389:	dec    ebp
  40738a:	scas   al,BYTE PTR es:[edi]
  40738b:	hlt    
  40738c:	and    BYTE PTR [ecx-0x7a],dh
  40738f:	fwait
  407390:	dec    esp
  407391:	loope  0x4073d7
  407393:	mov    bl,0x8
  407395:	lods   al,BYTE PTR ds:[esi]
  407396:	test   BYTE PTR [ebx],0x38
  407399:	les    edi,FWORD PTR [ecx+0x3a]
  40739c:	jmp    0x8e7:0x7400896e
  4073a3:	pop    eax
  4073a4:	mov    ebp,0xf31f11e1
  4073a9:	enter  0xb2d9,0xb9
  4073ad:	adc    ah,BYTE PTR [ebp-0x26ecc2ce]
  4073b3:	aaa    
  4073b4:	(bad)  
  4073b5:	aas    
  4073b6:	inc    esi
  4073b7:	sub    ebx,ebx
  4073b9:	jo     0x407436
  4073bb:	mov    esi,0x1b3d9ab5
  4073c0:	aas    
  4073c1:	(bad)  
  4073c2:	mov    eax,0x65b0cd4e
  4073c7:	lahf   
  4073c8:	sbb    eax,0x1483fd8
  4073cd:	xchg   ebx,eax
  4073ce:	adc    al,0x11
  4073d0:	push   eax
  4073d1:	dec    ecx
  4073d3:	xchg   BYTE PTR [edx],dl
  4073d5:	fs push ecx
  4073d7:	mov    ch,0x10
  4073d9:	dec    ebp
  4073da:	call   0xaa971f20
  4073df:	rol    DWORD PTR [ebp-0x3533f2],1
  4073e5:	aam    0xa0
  4073e7:	pop    esi
  4073e8:	es jp  0x407416
  4073eb:	jle    0x40745e
  4073ed:	cmp    BYTE PTR [ebx+0x3d],cl
  4073f0:	mov    WORD PTR [edx-0x61],?
  4073f3:	scas   al,BYTE PTR es:[edi]
  4073f4:	int3   
  4073f5:	(bad)  
  4073f6:	or     BYTE PTR [edi-0x10055521],cl
  4073fc:	mov    bh,0x32
  4073fe:	xor    ch,bl
  407400:	(bad)
  407403:	out    0xb1,eax
  407405:	pop    edi
  407406:	out    dx,al
  407407:	cwde   
  407408:	push   eax
  407409:	xor    DWORD PTR [esi+eiz*1],edi
  40740c:	loope  0x407451
  40740e:	push   edx
  40740f:	fistp  WORD PTR [ecx-0x671eb84b]
  407415:	(bad)  [eax]
  407417:	xor    cl,ch
  407419:	out    0xdd,al
  40741b:	dec    edi
  40741c:	sub    eax,0x373be65
  407421:	xchg   esp,eax
  407422:	pop    ds
  407423:	adc    BYTE PTR [esi-0x63f89e3a],bh
  407429:	(bad)  
  40742a:	je     0x40749f
  40742c:	and    al,0x2f
  40742e:	sbb    eax,0xf8ee32c2
  407433:	xchg   edi,eax
  407434:	adc    DWORD PTR [edi-0x63],edi
  407437:	lea    ebp,[edx+0x27cc3ead]
  40743d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743e:	in     al,dx
  40743f:	mov    edx,0x483df151
  407444:	mov    ebx,0xb75e97a6
  407449:	lods   eax,DWORD PTR ds:[esi]
  40744a:	retf   0x4583
  40744d:	xchg   DWORD PTR [edx-0x2962db91],ecx
  407453:	xchg   edi,eax
  407454:	out    0xa5,al
  407456:	add    ah,ch
  407458:	sub    dl,BYTE PTR [edx*2+0x174663e3]
  40745f:	cmp    ah,0xe6
  407462:	enter  0xaccb,0x94
  407466:	jnp    0x4074b2
  407468:	out    dx,eax
  407469:	cmp    BYTE PTR [esp+edx*8],ch
  40746c:	jge    0x4073ef
  40746e:	sub    cl,BYTE PTR [eax+0x716fc9bf]
  407474:	sbb    al,0xee
  407476:	push   esp
  407477:	mov    ch,0xf1
  407479:	jp     0x4074d1
  40747b:	lea    edi,[edi+0x5eb8063b]
  407481:	popa   
  407482:	nop
  407483:	mov    edx,0x638df5d2
  407488:	mov    eax,ds:0x1030865c
  40748d:	xor    BYTE PTR [edi],ch
  40748f:	aas    
  407490:	xchg   ebx,eax
  407491:	int3   
  407492:	das    
  407493:	mov    cl,0x12
  407495:	stc    
  407496:	adc    esi,ebx
  407498:	dec    edi
  407499:	dec    BYTE PTR [ebx]
  40749b:	push   ebp
  40749c:	jg     0x4074f0
  40749e:	int    0x4f
  4074a0:	fbld   TBYTE PTR [ecx-0x50b7043f]
  4074a6:	add    eax,DWORD PTR ds:[esi]
  4074a9:	mov    edi,0x70376e33
  4074ae:	xlat   BYTE PTR ds:[ebx]
  4074af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074b0:	lods   al,BYTE PTR ds:[esi]
  4074b1:	scas   eax,DWORD PTR es:[edi]
  4074b2:	mov    edx,edx
  4074b4:	inc    eax
  4074b5:	xchg   esp,eax
  4074b6:	push   esp
  4074b7:	or     al,0x2d
  4074b9:	std    
  4074ba:	lods   al,BYTE PTR ds:[esi]
  4074bb:	fs call 0x5504:0xc6e10d9
  4074c3:	inc    edx
  4074c4:	js     0x407514
  4074c6:	or     eax,0x76dbfea1
  4074cb:	stos   DWORD PTR es:[edi],eax
  4074cc:	add    al,0xc6
  4074ce:	clc    
  4074cf:	xor    edi,DWORD PTR cs:[ebp+0x4]
  4074d3:	push   edx
  4074d4:	push   es
  4074d5:	adc    eax,0x27c1524d
  4074da:	push   ss
  4074db:	out    dx,eax
  4074dc:	sbb    eax,0xf64b608f
  4074e1:	jnp    0x40748c
  4074e3:	rol    BYTE PTR [eax-0x318a8942],0xe3
  4074ea:	out    dx,al
  4074eb:	jg     0x4074f4
  4074ed:	int3   
  4074ee:	outs   dx,DWORD PTR ds:[esi]
  4074ef:	in     al,0x7b
  4074f1:	rol    BYTE PTR [edx+0x25],1
  4074f4:	lahf   
  4074f5:	and    eax,0xf6ce66ac
  4074fa:	pop    ebp
  4074fb:	fcmovb st,st(1)
  4074fd:	lds    ecx,FWORD PTR [ecx-0x2b]
  407500:	cmp    BYTE PTR [ebx],ah
  407502:	hlt    
  407503:	(bad)  
  407504:	shl    DWORD PTR ds:0xe407a24e,cl
  40750a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40750b:	rcl    dl,1
  40750d:	dec    esi
  40750e:	sub    ch,BYTE PTR [eax-0x41]
  407511:	add    al,0xcd
  407513:	sub    esp,ecx
  407515:	or     bh,BYTE PTR ds:0xa647078e
  40751b:	daa    
  40751c:	push   eax
  40751d:	and    eax,0xf070449d
  407522:	sbb    eax,0xa125f237
  407527:	xchg   esp,eax
  407528:	cmc    
  407529:	call   0xd2ba:0x85690b95
  407530:	mov    ecx,0xf59fcc4d
  407535:	sbb    ebp,esp
  407537:	push   edi
  407538:	imul   ebx,DWORD PTR [eax-0x62dba496],0x71240d41
  407542:	adc    al,0x7e
  407544:	or     esi,DWORD PTR [eax+0x12986675]
  40754a:	inc    ecx
  40754b:	or     ah,ah
  40754d:	out    dx,al
  40754e:	jne    0x4075a8
  407550:	mov    ah,0x19
  407552:	mov    WORD PTR [ebp-0x21],ds
  407555:	ins    DWORD PTR es:[edi],dx
  407556:	stos   DWORD PTR es:[edi],eax
  407557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407558:	(bad)  
  40755a:	xor    bh,BYTE PTR [ebx-0x6b]
  40755d:	mov    bh,0xcc
  40755f:	gs or  al,0xaf
  407562:	pop    ss
  407563:	int3   
  407564:	mov    ah,0xd1
  407566:	push   0x5caf0e59
  40756b:	mov    ah,0x2e
  40756d:	lahf   
  40756e:	scas   al,BYTE PTR es:[edi]
  40756f:	outs   dx,BYTE PTR ds:[esi]
  407570:	mov    edx,0x71ede790
  407575:	push   esi
  407576:	outs   dx,DWORD PTR ds:[esi]
  407577:	or     DWORD PTR [edx+0x17],ebp
  40757a:	and    al,dl
  40757c:	icebp  
  40757d:	adc    edi,ecx
  40757f:	fbld   TBYTE PTR gs:[ebp-0x78]
  407583:	dec    eax
  407584:	lock fs dec esp
  407587:	dec    eax
  407588:	mov    bl,0x33
  40758a:	pop    edi
  40758b:	jns    0x40758c
  40758d:	or     BYTE PTR [esi],dl
  40758f:	stc    
  407590:	cmp    al,0xb7
  407592:	dec    ebp
  407593:	dec    ebp
  407594:	mov    bl,0x3c
  407596:	inc    ebx
  407597:	mov    WORD PTR [ebp+0x5d],fs
  40759a:	push   es
  40759b:	jp     0x407561
  40759d:	cwde   
  40759e:	cld    
  40759f:	sbb    DWORD PTR ds:0x85b00c33,esi
  4075a5:	mov    dh,bl
  4075a7:	out    0xc6,al
  4075a9:	aam    0x3
  4075ab:	fucomp st(2)
  4075ad:	popf   
  4075ae:	mov    esp,0x50538fda
  4075b3:	xchg   DWORD PTR [edi-0x7d],ecx
  4075b6:	cmp    cl,ah
  4075b8:	inc    esp
  4075b9:	mov    bh,BYTE PTR [ecx-0x3de04611]
  4075bf:	and    edi,edx
  4075c1:	idiv   WORD PTR [edi+0x13]
  4075c5:	mov    esi,0xbbd952fc
  4075ca:	sar    DWORD PTR [ebx-0x6b],cl
  4075cd:	pusha  
  4075ce:	nop
  4075cf:	mov    BYTE PTR [ebp+0x3b],0xba
  4075d3:	or     BYTE PTR [ecx+ebx*4+0x6d],0x9
  4075d8:	into   
  4075d9:	ins    BYTE PTR es:[edi],dx
  4075da:	xchg   ebp,eax
  4075db:	xchg   ebx,eax
  4075dc:	mov    DWORD PTR [esi],0xde23112d
  4075e2:	fdivr  DWORD PTR [ecx]
  4075e4:	stos   BYTE PTR es:[edi],al
  4075e5:	cs fsubr st,st(7)
  4075e8:	inc    eax
  4075e9:	daa    
  4075ea:	mov    esi,0x2a012cb0
  4075ef:	xor    al,0xf8
  4075f1:	(bad)  
  4075f2:	out    0xf3,al
  4075f4:	mul    BYTE PTR [ecx+edi*1]
  4075f7:	aas    
  4075f8:	cld    
  4075f9:	call   0xa1e4:0x42781c2e
  407600:	icebp  
  407601:	mov    eax,ds:0x901c80d4
  407606:	lods   eax,DWORD PTR ds:[esi]
  407607:	dec    ecx
  407608:	ret    
  407609:	jmp    0x9347:0xd697a8b1
  407610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407611:	retf   
  407612:	jp     0x4075b7
  407614:	iret   
  407615:	das    
  407616:	mov    dl,0x5d
  407618:	jg     0x4075e1
  40761a:	imul   edi
  40761c:	mov    ?,WORD PTR [edi-0x4677d5dd]
  407622:	out    dx,eax
  407623:	jns    0x407671
  407625:	ret    
  407626:	adc    edi,DWORD PTR [ecx+0x48]
  407629:	bound  edx,QWORD PTR [esi]
  40762b:	test   eax,0x8bd81da3
  407630:	sbb    DWORD PTR [esi+0x62],ebx
  407633:	cmp    edi,DWORD PTR [ebx-0x742dac22]
  407639:	test   eax,0x68e611a4
  40763e:	cld    
  40763f:	sub    BYTE PTR [ebp-0x24318d6],al
  407645:	sbb    DWORD PTR [ebp+0x71],esp
  407648:	std    
  407649:	in     eax,dx
  40764a:	loopne 0x407651
  40764c:	mov    es,edi
  40764e:	pushf  
  40764f:	mov    esi,0x8bc23e6b
  407654:	imul   ebx,DWORD PTR [esp+edi*4-0x58],0x47f16d4d
  40765c:	cdq    
  40765d:	icebp  
  40765e:	jnp    0x4076c7
  407660:	addr16 inc esp
  407662:	cmp    edx,DWORD PTR [eax]
  407664:	jb     0x4076ab
  407666:	je     0x4076a5
  407668:	or     BYTE PTR [eax-0x3bdf4d88],dh
  40766e:	loop   0x40766b
  407670:	or     al,0x38
  407672:	mov    si,WORD PTR fs:[esi]
  407676:	sti    
  407677:	dec    eax
  407678:	mov    ebx,0xb4db301a
  40767d:	and    al,0x1a
  40767f:	sbb    BYTE PTR [ecx+0x2e0173ef],ah
  407685:	inc    eax
  407686:	xor    eax,0xd26ef939
  40768b:	fwait
  40768c:	jns    0x40769d
  40768e:	pusha  
  40768f:	cmp    eax,0x7d213d3
  407694:	dec    ebx
  407695:	pop    es
  407696:	int    0x74
  407698:	mov    esp,DWORD PTR [eax+ebx*2]
  40769b:	(bad)  
  40769c:	xchg   edx,eax
  40769d:	cli    
  40769e:	sub    DWORD PTR [ebx+0x72be67ab],esp
  4076a4:	push   cs
  4076a5:	jg     0x407716
  4076a7:	mov    ds:0x2cd414dd,al
  4076ac:	or     eax,DWORD PTR [eax-0x2f]
  4076af:	xchg   esp,eax
  4076b0:	out    0x3c,al
  4076b2:	cmp    DWORD PTR [ebp+edx*8+0x74],ebx
  4076b6:	aad    0x32
  4076b8:	or     al,BYTE PTR [eax]
  4076ba:	mov    ecx,0x2c18c4b9
  4076bf:	aad    0x8b
  4076c1:	cmp    bh,BYTE PTR [edx+eax*8+0x6d]
  4076c5:	xor    eax,0xda9bab8a
  4076ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076cb:	iret   
  4076cc:	jae    0x40772a
  4076ce:	jae    0x4076a8
  4076d0:	clc    
  4076d1:	stc    
  4076d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076d3:	or     DWORD PTR [eax+0x56321c2a],0x5f
  4076da:	xchg   esi,eax
  4076db:	adc    BYTE PTR [eax-0x7964ce46],0x85
  4076e2:	je     0x4076c6
  4076e4:	adc    cl,BYTE PTR [ecx]
  4076e6:	(bad)  
  4076e7:	mov    ebx,0xc59a7161
  4076ec:	jae    0x40767d
  4076ee:	test   al,0xd1
  4076f0:	jns    0x407702
  4076f2:	mov    ds:0x8ce4290a,eax
  4076f7:	sbb    eax,0x1e523719
  4076fc:	ins    BYTE PTR es:[edi],dx
  4076fd:	call   0x226e:0xd0986989
  407704:	sub    BYTE PTR [ebp+0x7d],0x3
  407708:	and    eax,0x4befed3f
  40770d:	cli    
  40770e:	pop    esp
  40770f:	mov    ds:0xfca1587c,al
  407714:	in     al,dx
  407715:	std    
  407716:	icebp  
  407717:	pusha  
  407718:	mov    ?,WORD PTR [esi]
  40771a:	adc    eax,0xf207a1b7
  40771f:	xchg   ebx,eax
  407720:	stos   DWORD PTR es:[edi],eax
  407721:	push   esi
  407722:	dec    al
  407724:	arpl   WORD PTR [esi-0x2e971874],dx
  40772a:	shl    ch,cl
  40772c:	mov    al,ch
  40772e:	aas    
  40772f:	jmp    0x4b9f:0x34a9c1cf
  407736:	mov    ecx,0x2a0093c5
  40773b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40773c:	inc    ebp
  40773d:	inc    esi
  40773e:	cmp    BYTE PTR [edi],bh
  407740:	(bad)
  407743:	adc    dl,bh
  407745:	out    0x7b,al
  407747:	and    eax,edi
  407749:	das    
  40774a:	fld    DWORD PTR [edi+ebx*8-0x7e]
  40774e:	sbb    esi,esp
  407750:	jbe    0x40774e
  407752:	mov    ebx,0xb9bcbc31
  407757:	mov    al,ds:0xab9f3fdd
  40775c:	pop    ecx
  40775d:	jmp    0x608a700d
  407762:	fdiv   QWORD PTR [esi+0x4]
  407765:	iret   
  407766:	and    eax,0x59d714cf
  40776b:	std    
  40776c:	push   0xffffffe1
  40776e:	pop    edi
  40776f:	push   esp
  407770:	pop    edi
  407771:	and    DWORD PTR [esi+0x2a],0x11
  407775:	or     BYTE PTR [edx-0xd640a8d],0xa3
  40777c:	pusha  
  40777d:	add    al,0xe8
  40777f:	mov    eax,0xdf7d9429
  407784:	mov    al,0xbc
  407786:	add    al,0xf2
  407788:	out    dx,al
  407789:	push   ebx
  40778a:	push   cs
  40778b:	jg     0x407751
  40778d:	fcomip st,st(3)
  40778f:	stos   BYTE PTR es:[edi],al
  407790:	fsubr  st,st(2)
  407792:	inc    ecx
  407793:	in     eax,dx
  407794:	stos   DWORD PTR es:[edi],eax
  407795:	xchg   edx,eax
  407796:	mov    ds:0x93d55556,eax
  40779b:	repz push 0xe5ee8e55
  4077a1:	mov    al,ds:0x84c9255d
  4077a6:	push   edx
  4077a7:	inc    ecx
  4077a8:	mov    edx,0xa85bd585
  4077ad:	(bad)  
  4077ae:	push   ebx
  4077af:	mov    esp,0x6c481e5e
  4077b4:	fcomp  DWORD PTR [ecx+0x4e1700a6]
  4077ba:	and    BYTE PTR [edi+0x2fc375d8],bl
  4077c0:	pushf  
  4077c1:	out    0x27,al
  4077c3:	fdivr  QWORD PTR ds:0x60c14d4c
  4077c9:	xor    BYTE PTR [ebx+0x29],dh
  4077cc:	jmp    0xe0827bdb
  4077d1:	repz dec ecx
  4077d3:	in     al,0x6
  4077d5:	cdq    
  4077d6:	mov    edx,0xf3cf13ca
  4077db:	pushf  
  4077dc:	or     DWORD PTR [ebp+0x799b8442],edx
  4077e2:	push   0x37
  4077e4:	jecxz  0x407822
  4077e6:	jp     0x4077d5
  4077e8:	jno    0x4077d7
  4077ea:	(bad)  
  4077eb:	mov    ah,0xa3
  4077ed:	and    ch,cl
  4077ef:	adc    DWORD PTR [edi+0x1],ebx
  4077f2:	out    0x80,al
  4077f4:	js     0x407869
  4077f6:	scas   eax,DWORD PTR es:[edi]
  4077f7:	xor    al,0xfb
  4077f9:	sbb    eax,0xc37b59c2
  4077fe:	fs std 
  407800:	ds in  al,dx
  407802:	fimul  DWORD PTR [ebx-0x7908b052]
  407808:	sti    
  407809:	cmp    BYTE PTR [esi],ah
  40780b:	rol    DWORD PTR [eax-0x4c030e69],1
  407811:	(bad)  
  407813:	xor    esi,esp
  407815:	push   0x38fc4501
  40781a:	icebp  
  40781b:	xlat   BYTE PTR ds:[ebx]
  40781c:	mov    ah,0x5e
  40781e:	sub    ah,0xb7
  407821:	aam    0x19
  407823:	sub    DWORD PTR [esp+ecx*8-0x53],ebp
  407827:	loope  0x4077d4
  407829:	int    0x46
  40782b:	stos   BYTE PTR es:[edi],al
  40782c:	inc    eax
  40782d:	sti    
  40782e:	sti    
  40782f:	ret    
  407830:	jmp    0x4077c2
  407832:	sbb    ah,dh
  407834:	inc    ebp
  407835:	adc    edx,DWORD PTR [edx-0x51]
  407838:	cmp    dx,sp
  40783b:	(bad)  
  40783c:	enter  0x5191,0xea
  407840:	adc    DWORD PTR [eax-0x70],eax
  407843:	rol    BYTE PTR [edx+0x7e184cf5],0xe
  40784a:	mov    fs,WORD PTR [esi]
  40784c:	mov    eax,0x19650448
  407851:	daa    
  407852:	dec    edi
  407853:	ja     0x40780c
  407855:	movups xmm5,XMMWORD PTR [ecx+0x36]
  407859:	ret    0xdd36
  40785c:	xor    ch,BYTE PTR [ecx+0x79d05d97]
  407862:	sar    DWORD PTR [ebx-0x7d],1
  407865:	into   
  407866:	xchg   ecx,eax
  407867:	add    BYTE PTR [ebx],bh
  407869:	and    al,0x55
  40786b:	ja     0x407855
  40786d:	stos   DWORD PTR es:[edi],eax
  40786e:	dec    ecx
  40786f:	repz xchg edi,eax
  407871:	(bad)  
  407872:	and    eax,0xa7777a9e
  407877:	cmp    dh,ch
  407879:	mov    esi,0x93eb46ac
  40787e:	(bad)  
  40787f:	jns    0x40784e
  407881:	(bad)  
  407882:	fdiv   QWORD PTR [eax-0x3bf18f4c]
  407888:	retf   
  407889:	push   edi
  40788a:	in     eax,dx
  40788b:	int    0x8f
  40788d:	adc    ecx,edi
  40788f:	fimul  DWORD PTR [eax]
  407891:	outs   dx,DWORD PTR ds:[esi]
  407892:	jg     0x40789a
  407894:	sub    ch,BYTE PTR [ecx-0x4b1beb54]
  40789a:	in     eax,0xd7
  40789c:	pusha  
  40789d:	pop    ebp
  40789e:	aas    
  40789f:	daa    
  4078a0:	dec    eax
  4078a1:	call   0x7ede3764
  4078a6:	repz or al,0x7d
  4078a9:	mov    ecx,0x60371747
  4078ae:	daa    
  4078af:	sbb    al,0x6e
  4078b1:	push   ax
  4078b3:	out    0x4f,al
  4078b5:	shr    ah,1
  4078b7:	cmp    eax,ebp
  4078b9:	mov    al,0x15
  4078bb:	adc    eax,0x4880813b
  4078c0:	sub    eax,0xaebe227b
  4078c5:	jecxz  0x407883
  4078c7:	mov    ch,0x3
  4078ca:	mov    edi,0x23114b1b
  4078cf:	in     al,0x23
  4078d1:	inc    edi
  4078d2:	or     edi,DWORD PTR [ecx-0x7397c95]
  4078d8:	jne    0x4078b4
  4078da:	xor    DWORD PTR [edi+ebp*1],0x9dbb9a3
  4078e1:	stos   DWORD PTR es:[edi],eax
  4078e2:	cmp    BYTE PTR ds:0x5deed940,al
  4078e8:	or     dh,BYTE PTR [edx-0x45]
  4078eb:	push   ebp
  4078ec:	mov    eax,0xe60cefd2
  4078f1:	cld    
  4078f2:	adc    ebp,ecx
  4078f4:	jne    0x407930
  4078f6:	or     BYTE PTR [ebx+0x714a38a0],bh
  4078fc:	mov    eax,0x895e34a0
  407901:	cmp    eax,0x4d9c39be
  407906:	dec    edx
  407907:	inc    esi
  407908:	pop    esp
  407909:	mov    dh,0xa9
  40790b:	jmp    0x407907
  40790d:	ficom  WORD PTR [ecx]
  40790f:	inc    eax
  407910:	and    al,0x25
  407912:	sbb    eax,0x9cb6eaa3
  407917:	push   0x787b014e
  40791c:	sub    DWORD PTR [esi+0x79],edi
  40791f:	and    dl,BYTE PTR ds:0xa11ebd86
  407925:	leave  
  407926:	in     eax,0xf9
  407928:	pushf  
  407929:	hlt    
  40792a:	inc    edi
  40792b:	mov    esp,0x433e513a
  407930:	mov    esi,0xdd725fc
  407935:	loop   0x407918
  407937:	xchg   esi,eax
  407938:	les    eax,FWORD PTR [ecx-0x9]
  40793b:	mov    WORD PTR [edx-0x5fec3466],gs
  407941:	retf   
  407942:	data16 jae 0x40792a
  407945:	add    BYTE PTR [eax+ebp*8-0x380ba294],bh
  40794c:	or     BYTE PTR [eax-0x2e],al
  40794f:	mov    edx,0xf8244f50
  407954:	int3   
  407955:	pop    ebx
  407956:	js     0x4079bf
  407958:	cmp    eax,0xac4d5a74
  40795d:	aaa    
  40795e:	lock inc ebx
  407960:	aas    
  407961:	cdq    
  407962:	mov    al,0xb0
  407964:	add    DWORD PTR [edx-0x43],edx
  407967:	call   0xca4ff325
  40796c:	xor    BYTE PTR [edi+0xe],dh
  40796f:	push   0x3e
  407971:	pop    es
  407972:	inc    edx
  407973:	inc    esi
  407974:	(bad)  
  407976:	push   ss
  407977:	xchg   ecx,eax
  407978:	jge    0x4079cc
  40797a:	lahf   
  40797b:	cld    
  40797c:	sbb    bh,0xd2
  40797f:	mov    bl,0x80
  407981:	xchg   esp,eax
  407982:	ja     0x407992
  407984:	jecxz  0x40797a
  407986:	dec    BYTE PTR [esi]
  407988:	jns    0x4079a6
  40798a:	sub    esp,ebx
  40798c:	stos   BYTE PTR es:[edi],al
  40798d:	(bad)  
  40798e:	shl    al,cl
  407990:	call   DWORD PTR ds:0x68adeb9
  407996:	inc    esp
  407997:	retf   0x91ab
  40799a:	std    
  40799b:	inc    esp
  40799c:	pusha  
  40799d:	sbb    eax,0x22063092
  4079a2:	add    cl,BYTE PTR ds:0x605b33ae
  4079a8:	cli    
  4079a9:	stos   BYTE PTR es:[edi],al
  4079aa:	mov    bl,0xcd
  4079ac:	popf   
  4079ad:	ds out 0x60,al
  4079b0:	cmp    DWORD PTR [esp+esi*1],0x89f01685
  4079b7:	push   ss
  4079b8:	sub    dl,BYTE PTR [ebx+0x4ddaa61f]
  4079be:	out    dx,al
  4079bf:	call   0x66b8:0xffb9d2f3
  4079c6:	jg     0x4079bd
  4079c8:	dec    edx
  4079c9:	mov    eax,ds:0x77060492
  4079ce:	mov    edi,0x51032a51
  4079d3:	or     esp,0xffffffa2
  4079d6:	push   ss
  4079d7:	push   ds
  4079d8:	cmp    ebp,DWORD PTR [eax+0x45dabed1]
  4079de:	ret    0xe1ca
  4079e1:	inc    ebp
  4079e2:	(bad)  
  4079e3:	loope  0x40797c
  4079e5:	mov    edi,0xa6148933
  4079ea:	mov    ebx,0x13f39239
  4079ef:	test   BYTE PTR [eax+0x75493227],al
  4079f5:	push   esp
  4079f6:	xchg   ebx,eax
  4079f7:	inc    ecx
  4079f8:	jle    0x407a05
  4079fa:	jmp    0x229d:0xabca3579
  407a01:	xor    BYTE PTR [esp+ebx*1+0x4533508f],0x25
  407a09:	xchg   edi,eax
  407a0a:	call   0x99f9d424
  407a0f:	jns    0x407a18
  407a11:	nop
  407a12:	pop    edi
  407a13:	aaa    
  407a14:	loope  0x4079de
  407a16:	xor    BYTE PTR [eax+0x18],bh
  407a19:	add    DWORD PTR [ecx],esi
  407a1b:	and    BYTE PTR [ecx+0x41],ah
  407a1e:	jo     0x4079ca
  407a20:	jge    0x4079a3
  407a22:	xchg   ebp,eax
  407a23:	fstp   DWORD PTR [esi+0x10]
  407a26:	dec    ebp
  407a27:	mov    BYTE PTR [esi-0x3d9cbcdb],dh
  407a2d:	xor    ax,0x72dc
  407a31:	std    
  407a32:	dec    ebp
  407a33:	pushf  
  407a34:	sbb    esp,ebp
  407a36:	push   ecx
  407a37:	adc    eax,0x770a55ba
  407a3c:	fidiv  DWORD PTR [ecx-0x77]
  407a3f:	add    BYTE PTR [ebx],bl
  407a41:	test   DWORD PTR [edi+eiz*8],eax
  407a44:	xchg   ecx,eax
  407a45:	xchg   ebx,eax
  407a46:	leave  
  407a47:	xchg   BYTE PTR ds:0xe5c62a8f,dh
  407a4d:	bnd jmp 0xe4be2583
  407a53:	mov    ds:0x70dd8995,al
  407a58:	xchg   BYTE PTR [eax+0x27],dh
  407a5b:	or     ebp,esi
  407a5d:	cli    
  407a5e:	aad    0xd9
  407a60:	rol    esp,1
  407a62:	fadd   DWORD PTR [edx+edx*2]
  407a65:	pop    edx
  407a66:	repz pop ss
  407a68:	retf   
  407a69:	or     al,BYTE PTR [edi+0x422330c9]
  407a6f:	fmul   QWORD PTR [ebx+0x640ff4a2]
  407a75:	push   esi
  407a76:	pushf  
  407a77:	sbb    ebx,ebp
  407a79:	adc    eax,0x6e459d85
  407a7e:	push   esp
  407a7f:	call   0x364a:0xfe62927a
  407a86:	adc    al,0xea
  407a88:	call   0x334c:0x93bcc1bc
  407a8f:	inc    edi
  407a90:	(bad)  
  407a91:	dec    esp
  407a92:	pop    ss
  407a93:	lods   eax,DWORD PTR ds:[esi]
  407a94:	and    BYTE PTR [edx],0xcd
  407a97:	arpl   WORD PTR [ecx+eiz*1+0x4988922c],di
  407a9e:	daa    
  407a9f:	jge    0x407a59
  407aa1:	cmp    DWORD PTR [edi+ecx*2+0x1a],edx
  407aa5:	xor    al,0xa6
  407aa7:	cmp    eax,0xe51afe3e
  407aac:	mov    dl,0xed
  407aae:	sub    BYTE PTR [ebp+0x63],0xaa
  407ab2:	push   esp
  407ab3:	jnp    0x407aca
  407ab5:	(bad)  
  407ab6:	div    BYTE PTR [ebx-0x578f2f45]
  407abc:	mov    dl,BYTE PTR [esi+0x36]
  407abf:	loope  0x407a8a
  407ac1:	popf   
  407ac2:	push   edi
  407ac3:	daa    
  407ac4:	cli    
  407ac5:	das    
  407ac6:	jle    0x407a8e
  407ac8:	mov    esp,0x6ff2cb58
  407acd:	xor    al,0xbf
  407acf:	adc    edx,DWORD PTR [ebp-0x49]
  407ad2:	test   bh,0x3a
  407ad5:	ds es add al,0x4
  407ad9:	xlat   BYTE PTR ds:[ebx]
  407ada:	cdq    
  407adb:	inc    ebx
  407adc:	and    DWORD PTR [esi-0x11],ebx
  407adf:	imul   ebx,DWORD PTR [edi+0x7cdca4bd],0xb2311001
  407ae9:	pop    edx
  407aea:	or     ecx,DWORD PTR [esi+ebx*8+0x1c]
  407aee:	cs pop ecx
  407af0:	mov    ch,0xdb
  407af2:	shr    BYTE PTR [edx],0xaf
  407af5:	(bad)  
  407af6:	jmp    0x407b0a
  407af8:	je     0x407b53
  407afa:	mov    al,0x6c
  407afc:	dec    edx
  407afd:	push   ds
  407afe:	adc    al,0x96
  407b00:	inc    edx
  407b01:	pusha  
  407b02:	lds    ebp,FWORD PTR ds:0xdf73fe4a
  407b08:	leave  
  407b09:	scas   al,BYTE PTR es:[edi]
  407b0a:	jne    0x407b7b
  407b0c:	pop    ecx
  407b0d:	mov    al,0x62
  407b0f:	inc    eax
  407b10:	mov    esi,0x48525572
  407b15:	cwde   
  407b16:	dec    eax
  407b17:	add    dl,dl
  407b19:	and    bl,bl
  407b1b:	sub    DWORD PTR [esp+ecx*8-0x18487395],0xf0cb1b37
  407b26:	not    BYTE PTR [ebp-0x2b54b0cb]
  407b2c:	popa   
  407b2d:	scas   eax,DWORD PTR es:[edi]
  407b2e:	outs   dx,BYTE PTR ds:[esi]
  407b2f:	daa    
  407b30:	inc    edi
  407b31:	ins    BYTE PTR es:[edi],dx
  407b32:	jb     0x407baa
  407b34:	sbb    eax,0x9536bafb
  407b39:	outs   dx,DWORD PTR ds:[esi]
  407b3a:	jmp    0x407b11
  407b3c:	mov    bh,0x24
  407b3e:	inc    ebp
  407b3f:	xchg   ebp,eax
  407b40:	jnp    0x407b47
  407b42:	fstp   st(5)
  407b44:	loopne 0x407b6b
  407b46:	scas   eax,DWORD PTR es:[edi]
  407b47:	mov    esp,0x6ad88a03
  407b4c:	mov    ds:0x7f075be8,al
  407b51:	mov    bh,BYTE PTR [esi]
  407b53:	cdq    
  407b54:	pop    esi
  407b55:	into   
  407b56:	loopne 0x407b63
  407b58:	lock fstp DWORD PTR [esi+0x3510ed7b]
  407b5f:	xchg   ebx,eax
  407b60:	or     eax,0x75f8e566
  407b65:	pop    ebp
  407b66:	std    
  407b67:	mov    BYTE PTR [esi+0x105598ed],ah
  407b6d:	jle    0x407bd8
  407b6f:	into   
  407b70:	sbb    DWORD PTR [esi-0x38],eax
  407b73:	mov    ebp,0x8be997b
  407b78:	cli    
  407b79:	lahf   
  407b7a:	inc    esi
  407b7b:	stos   BYTE PTR es:[edi],al
  407b7c:	add    eax,0x2227f07c
  407b81:	ja     0x407b66
  407b83:	or     eax,0x596908e4
  407b88:	repz push 0xd6e0d43d
  407b8e:	nop
  407b8f:	push   edi
  407b90:	mov    dl,BYTE PTR [ecx+0x30507f8d]
  407b96:	fisttp DWORD PTR [esi-0x11]
  407b99:	fmul   QWORD PTR [esp+0x47e0c5c1]
  407ba0:	popf   
  407ba1:	aas    
  407ba2:	xlat   BYTE PTR ds:[ebx]
  407ba3:	ficomp DWORD PTR [ebp-0x7908b4bd]
  407ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407baa:	das    
  407bab:	stc    
  407bac:	out    0xd6,al
  407bae:	mov    es,WORD PTR [esi-0x3b]
  407bb1:	jge    0x407b52
  407bb3:	test   al,0xf4
  407bb5:	pop    es
  407bb6:	xor    BYTE PTR [ebx+0x58],0x9
  407bba:	adc    ebx,DWORD PTR [edx-0x7f]
  407bbd:	int3   
  407bbe:	rol    dl,cl
  407bc0:	dec    eax
  407bc1:	xchg   DWORD PTR [edi+0x1217d949],ebp
  407bc7:	(bad)  
  407bc8:	push   esi
  407bc9:	push   edi
  407bca:	push   0x32
  407bcc:	or     DWORD PTR ds:0x52fb846,0x1a17149a
  407bd6:	pushf  
  407bd7:	mov    edx,0xdc8c6591
  407bdc:	lods   al,BYTE PTR ds:[esi]
  407bdd:	aaa    
  407bde:	push   eax
  407bdf:	pop    es
  407be0:	lahf   
  407be1:	stos   BYTE PTR es:[edi],al
  407be2:	dec    esp
  407be3:	jno    0x407b7b
  407be5:	pop    edx
  407be6:	dec    edx
  407be7:	xor    DWORD PTR [esi+edi*2-0x7e],ebx
  407beb:	js     0x407bdd
  407bed:	xor    ebp,edx
  407bef:	out    0x9a,eax
  407bf1:	jp     0x407b94
  407bf3:	retf   
  407bf4:	pop    edx
  407bf5:	jg     0x407b9f
  407bf7:	adc    eax,0xb2d2ffa8
  407bfc:	pmullw mm5,QWORD PTR [ecx+0x17]
  407c00:	ret    
  407c01:	mov    ebx,0x2bbc20c5
  407c06:	in     al,dx
  407c07:	pop    eax
  407c08:	cmp    al,0xff
  407c0a:	repz call 0x3bc6:0x7358a23f
  407c12:	inc    edi
  407c13:	inc    ebx
  407c14:	and    ch,ch
  407c16:	xchg   esp,eax
  407c17:	dec    edx
  407c18:	jno    0x407c45
  407c1a:	jae    0x407bcc
  407c1c:	mul    BYTE PTR [edi+0x29]
  407c1f:	les    edi,FWORD PTR [esi+0x58a9b7f2]
  407c25:	pushf  
  407c26:	in     eax,0xf9
  407c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c29:	fcmovu st,st(2)
  407c2b:	sub    ah,bl
  407c2d:	(bad)  
  407c2f:	adc    DWORD PTR [esi],esi
  407c31:	loopne 0x407c2d
  407c33:	out    0x19,eax
  407c35:	jae    0x407c8f
  407c37:	mov    esp,fs
  407c39:	cmp    eax,DWORD PTR [esi+ebp*1-0x570b3d7b]
  407c40:	push   0x221a0e23
  407c45:	xor    eax,0x395f188f
  407c4a:	push   ss
  407c4b:	or     dh,dh
  407c4d:	ror    DWORD PTR [ecx+0x72],0x7e
  407c51:	xlat   BYTE PTR ds:[ebx]
  407c52:	ins    BYTE PTR es:[edi],dx
  407c53:	fstp   st(7)
  407c55:	in     eax,dx
  407c56:	rcl    DWORD PTR [edi-0xa],1
  407c59:	ret    
  407c5a:	or     eax,0xe55021b9
  407c5f:	fistp  WORD PTR [eax]
  407c61:	xchg   esp,eax
  407c62:	push   edx
  407c63:	cmp    eax,0x92528cf4
  407c68:	jl     0x407ce4
  407c6a:	mov    dh,0xb8
  407c6c:	or     BYTE PTR [ebx-0x5f488cc0],0x41
  407c73:	inc    ebp
  407c74:	cmp    bl,ch
  407c76:	mov    ebx,0xf6296f08
  407c7b:	ins    DWORD PTR es:[edi],dx
  407c7c:	test   DWORD PTR cs:[ebx-0x3b9fe843],ecx
  407c83:	cmp    ebp,DWORD PTR [ebx+0x2bf899c2]
  407c89:	fs das 
  407c8b:	(bad)  
  407c8c:	push   ebp
  407c8d:	dec    edx
  407c8e:	nop
  407c8f:	or     eax,0x9e6c9352
  407c94:	ds inc edi
  407c96:	xor    al,0x21
  407c98:	stc    
  407c99:	inc    eax
  407c9a:	push   cs
  407c9b:	scas   al,BYTE PTR es:[edi]
  407c9c:	jmp    DWORD PTR [ecx-0x66]
  407c9f:	inc    ebp
  407ca0:	xchg   bh,dl
  407ca2:	cmp    bl,BYTE PTR [esi+0x521aa914]
  407ca8:	mov    ebp,0xe3b99b50
  407cad:	sbb    BYTE PTR [esi],al
  407caf:	pop    esi
  407cb0:	and    eax,0xe386ef8b
  407cb5:	test   al,0xf7
  407cb7:	(bad)  
  407cb8:	xor    ah,al
  407cba:	stos   BYTE PTR es:[edi],al
  407cbb:	mov    dh,0x4e
  407cbd:	sbb    BYTE PTR [edi+0x1bd18fb4],bh
  407cc3:	sub    BYTE PTR [ecx-0xf3745a9],dl
  407cc9:	addr16 cmp al,0x7c
  407ccc:	inc    esp
  407ccd:	dec    esp
  407cce:	cli    
  407ccf:	pop    esp
  407cd0:	jge    0x407c54
  407cd2:	dec    esp
  407cd3:	popf   
  407cd4:	xor    al,0x96
  407cd6:	call   0x8fd71442
  407cdb:	jg     0x407c6d
  407cdd:	jbe    0x407d28
  407cdf:	mov    BYTE PTR ds:0x38c7e41,0xa1
  407ce6:	cmp    eax,0x675b695
  407ceb:	xchg   ebx,eax
  407cec:	stos   DWORD PTR es:[edi],eax
  407ced:	das    
  407cee:	lods   eax,DWORD PTR ds:[esi]
  407cef:	loope  0x407d0a
  407cf1:	cmp    DWORD PTR [edi],0x5e964192
  407cf7:	cwde   
  407cf8:	not    DWORD PTR [edx]
  407cfa:	(bad)  
  407cfb:	pop    edx
  407cfc:	pop    ecx
  407cfd:	cdq    
  407cfe:	imul   edi,ecx,0x1c
  407d01:	jle    0x407d40
  407d03:	or     esp,DWORD PTR [edi+0x7d]
  407d06:	fcomi  st,st(4)
  407d08:	add    eax,0x89980baf
  407d0d:	pop    ss
  407d0e:	mov    ds,WORD PTR [esi-0x49]
  407d11:	outs   dx,DWORD PTR ds:[esi]
  407d12:	xchg   ebp,eax
  407d13:	pop    ecx
  407d14:	lock adc al,BYTE PTR [edx+0x338ecdc7]
  407d1b:	sub    al,0xf4
  407d1d:	aam    0xff
  407d1f:	retf   
  407d20:	mov    DWORD PTR [edi+0x2c5e5d2a],eax
  407d26:	sbb    bl,cl
  407d28:	icebp  
  407d29:	cmp    al,0x26
  407d2b:	push   ecx
  407d2c:	shl    DWORD PTR [esi+0x9cbc040],cl
  407d32:	sbb    al,0x8e
  407d34:	hlt    
  407d35:	inc    esp
  407d36:	cwde   
  407d37:	mov    dh,0xfb
  407d39:	shl    DWORD PTR [edx],1
  407d3b:	push   ds
  407d3c:	out    0xa,al
  407d3e:	cld    
  407d3f:	xor    al,0xf7
  407d41:	pusha  
  407d42:	mov    edx,0x32dcd881
  407d47:	dec    ebp
  407d48:	and    eax,0x17d73aca
  407d4d:	xlat   BYTE PTR ds:[ebx]
  407d4e:	dec    ebp
  407d4f:	(bad)  
  407d50:	push   ss
  407d51:	ror    DWORD PTR cs:[esi+edx*8-0x423f686c],cl
  407d59:	mov    eax,ds:0x30c58c74
  407d5e:	pop    eax
  407d5f:	xor    ecx,edi
  407d61:	or     dl,bl
  407d63:	xchg   ebp,eax
  407d64:	mov    DWORD PTR [ebx-0x3a7a1935],esi
  407d6a:	shl    DWORD PTR [ebp-0x33],1
  407d6d:	mov    al,ds:0x810f632
  407d72:	xor    DWORD PTR [ecx+0x74],ecx
  407d75:	iret   
  407d76:	dec    esp
  407d77:	and    al,0x36
  407d79:	xchg   esi,eax
  407d7a:	lods   al,BYTE PTR ds:[esi]
  407d7b:	and    dh,ah
  407d7d:	dec    ebx
  407d7e:	mov    esi,0x5eeaef6
  407d83:	in     eax,0x1f
  407d85:	xor    DWORD PTR [ebp+0x680bd4b1],ebp
  407d8b:	sub    al,0xd8
  407d8d:	and    eax,0xf1c5fc12
  407d92:	inc    edi
  407d93:	popa   
  407d94:	hlt    
  407d95:	sbb    ecx,edx
  407d97:	xchg   edi,eax
  407d98:	or     bh,BYTE PTR [ebp+0x37c96baa]
  407d9e:	inc    ebx
  407d9f:	enter  0xd4f5,0xee
  407da3:	leave  
  407da4:	in     eax,dx
  407da5:	je     0x407d60
  407da7:	inc    edi
  407da8:	fwait
  407da9:	dec    edi
  407daa:	int3   
  407dab:	(bad)  
  407dac:	ficom  WORD PTR [edx-0x2]
  407daf:	retf   
  407db0:	and    bl,ah
  407db2:	push   esp
  407db3:	cmc    
  407db4:	dec    esp
  407db5:	cmp    DWORD PTR [eax+0x30c17f9b],ebp
  407dbb:	inc    edx
  407dbc:	xchg   ebp,eax
  407dbd:	pusha  
  407dbe:	and    BYTE PTR [eax],bl
  407dc0:	dec    ecx
  407dc1:	jl     0x407e01
  407dc3:	mov    eax,0xe07c9487
  407dc8:	das    
  407dc9:	pop    ecx
  407dca:	mov    bl,BYTE PTR [esi-0x36]
  407dcd:	lods   eax,DWORD PTR ds:[esi]
  407dce:	mov    al,ds:0x1f6a524f
  407dd3:	mov    BYTE PTR [ebp+0x36],dh
  407dd6:	cmp    esp,DWORD PTR [edx+0x75]
  407dd9:	stc    
  407dda:	mov    cl,0x88
  407ddc:	imul   edi,DWORD PTR [edx],0x35
  407ddf:	push   esi
  407de0:	sar    ebx,1
  407de2:	push   ebx
  407de3:	cmp    DWORD PTR [edx],eax
  407de5:	xor    BYTE PTR [eax+eax*1-0x4f],dl
  407de9:	fwait
  407dea:	mov    edx,0x8f9083c9
  407def:	gs sub al,0x47
  407df2:	adc    al,0xd4
  407df4:	enter  0xcc66,0x2f
  407df8:	inc    esi
  407df9:	imul   esp,DWORD PTR [ebp+0x46],0x8cde1170
  407e00:	push   ds
  407e01:	inc    ecx
  407e02:	sub    eax,0x5ba9a9b
  407e07:	out    dx,al
  407e08:	mov    dh,0xc2
  407e0a:	push   ebp
  407e0b:	sub    DWORD PTR [eax+0x54df4bc8],0xa9a5ba17
  407e15:	mov    bh,0xb2
  407e17:	icebp  
  407e18:	mov    al,ds:0x59236a82
  407e1d:	ss pop ss
  407e1f:	add    eax,0x7ef94255
  407e24:	fiadd  DWORD PTR [ebx]
  407e26:	lock inc eax
  407e28:	test   al,0x3c
  407e2a:	cmp    BYTE PTR [ebx-0x29],0x67
  407e2e:	pop    ss
  407e2f:	(bad)  
  407e30:	fs into 
  407e32:	sbb    esp,ecx
  407e34:	retf   0x8822
  407e37:	jle    0x407eb3
  407e39:	jle    0x407e95
  407e3b:	mov    edi,eax
  407e3d:	jmp    0x28e82e
  407e42:	fwait
  407e43:	adc    cl,BYTE PTR [ecx]
  407e45:	add    al,0x32
  407e47:	inc    esp
  407e48:	mov    ds:0x8b0bc3c7,eax
  407e4d:	inc    DWORD PTR [edi]
  407e4f:	jl     0x407e00
  407e51:	enter  0x77be,0x10
  407e55:	add    bl,BYTE PTR [ebp+0x1c1407c9]
  407e5b:	loop   0x407de0
  407e5d:	add    eax,0x2c12a1d8
  407e62:	cwde   
  407e63:	in     eax,dx
  407e64:	cli    
  407e65:	sahf   
  407e66:	dec    esi
  407e67:	ret    
  407e68:	cmp    al,0x1f
  407e6a:	loopne 0x407df6
  407e6c:	aas    
  407e6d:	pop    esp
  407e6e:	inc    esi
  407e6f:	mov    al,0xeb
  407e71:	cmp    DWORD PTR ds:0xb3126640,ebx
  407e77:	mov    esp,0x8421c3ac
  407e7c:	aas    
  407e7d:	(bad)  
  407e7e:	jb     0x407e5b
  407e80:	and    al,0xe0
  407e82:	in     eax,0x6f
  407e84:	outs   dx,BYTE PTR ds:[esi]
  407e85:	repnz (bad) 
  407e88:	add    cl,cl
  407e8a:	addr16 pop ss
  407e8c:	mov    bh,BYTE PTR [ebx-0x7b]
  407e8f:	sub    esi,DWORD PTR [esi-0x29b113f2]
  407e95:	pop    edx
  407e96:	push   es
  407e97:	(bad)  
  407e98:	(bad)  
  407e99:	out    dx,al
  407e9a:	and    DWORD PTR [ebp+0x48],0xffffffc7
  407e9e:	push   0xb3acba2f
  407ea3:	pop    eax
  407ea4:	stos   DWORD PTR es:[edi],eax
  407ea5:	fucomp st(4)
  407ea7:	lds    ebp,FWORD PTR ds:0xb488e6cd
  407ead:	pushf  
  407eae:	adc    eax,0xe8628c87
  407eb3:	inc    ebp
  407eb4:	add    BYTE PTR [edx-0x2cdf669b],al
  407eba:	xor    al,0x61
  407ebc:	sub    ah,bh
  407ebe:	outs   dx,DWORD PTR ds:[esi]
  407ebf:	jle    0x407e8d
  407ec1:	xchg   ebp,eax
  407ec2:	xor    al,0xdf
  407ec4:	mov    esp,0x7d515b92
  407ec9:	out    dx,eax
  407eca:	and    eax,ebx
  407ecc:	adc    al,0x79
  407ecf:	lock sbb bl,BYTE PTR [esi]
  407ed2:	sub    BYTE PTR [edx+0x7a],ah
  407ed5:	iret   
  407ed6:	cli    
  407ed7:	jge    0x407f3d
  407ed9:	add    DWORD PTR [ecx-0xe],esp
  407edc:	dec    ebp
  407edd:	fnstsw WORD PTR [eax]
  407edf:	jge    0x407e79
  407ee1:	inc    eax
  407ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee3:	aaa    
  407ee4:	pop    esp
  407ee5:	stos   DWORD PTR es:[edi],eax
  407ee6:	sahf   
  407ee7:	aad    0x72
  407ee9:	inc    ecx
  407eea:	pop    eax
  407eeb:	mov    cl,0xe
  407eed:	pop    ds
  407eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eef:	cmp    eax,ebx
  407ef1:	xchg   edi,eax
  407ef2:	sar    DWORD PTR [ebx],cl
  407ef4:	(bad)  
  407ef5:	xor    al,0x66
  407ef7:	jmp    0x407f24
  407ef9:	mov    edx,0xecd24449
  407efe:	ins    BYTE PTR es:[edi],dx
  407eff:	inc    ebp
  407f00:	call   0xa4d2:0xe3b12584
  407f07:	lds    ecx,FWORD PTR [edx+0x63]
  407f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f0b:	mov    eax,0xa72e3493
  407f10:	aas    
  407f11:	rcr    DWORD PTR [edi],1
  407f13:	test   BYTE PTR [ecx],al
  407f15:	inc    esp
  407f16:	sub    esp,DWORD PTR [esi]
  407f18:	pop    ecx
  407f19:	inc    ebp
  407f1a:	leave  
  407f1b:	pop    es
  407f1c:	stos   BYTE PTR es:[edi],al
  407f1d:	jge    0x407f2e
  407f1f:	cmc    
  407f20:	lods   al,BYTE PTR ds:[esi]
  407f21:	dec    esi
  407f22:	dec    eax
  407f23:	rcr    BYTE PTR [ebx-0x15dc8d03],1
  407f29:	shl    DWORD PTR [edx+0x10],1
  407f2c:	and    DWORD PTR [ebp-0x2],ecx
  407f2f:	ja     0x407f80
  407f31:	push   0x20d7543
  407f36:	xchg   esp,eax
  407f37:	mov    ebx,0xabd43995
  407f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f3d:	loopne 0x407fb9
  407f3f:	in     al,0x0
  407f41:	xchg   ebx,eax
  407f42:	cmp    DWORD PTR [ebx+0x0],esi
  407f45:	js     0x407ed5
  407f47:	les    edx,FWORD PTR [esi+eax*2]
  407f4a:	stos   BYTE PTR es:[edi],al
  407f4b:	add    DWORD PTR [edi-0x1],ebp
  407f4e:	and    al,0x5f
  407f50:	adc    eax,0xaf04a379
  407f55:	stos   DWORD PTR es:[edi],eax
  407f56:	cld    
  407f57:	sbb    ecx,DWORD PTR [edi+0x702ca492]
  407f5d:	push   ebx
  407f5e:	mov    edx,0x716265bd
  407f63:	aas    
  407f64:	popa   
  407f65:	ss dec edi
  407f67:	inc    eax
  407f68:	cli    
  407f69:	arpl   WORD PTR [esp+eax*8+0x7ffba0cb],dx
  407f70:	pop    esi
  407f71:	pop    edx
  407f72:	jmp    FWORD PTR ds:0x5ca8f4d3
  407f78:	push   ecx
  407f79:	xor    eax,0xb1ad4807
  407f7e:	xchg   esi,eax
  407f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f80:	mov    esi,0x7c69ad77
  407f85:	jp     0x407fcc
  407f87:	loope  0x407ffd
  407f89:	or     BYTE PTR [esi],bl
  407f8b:	pop    edx
  407f8c:	add    BYTE PTR [edi+0x5c],dl
  407f8f:	jmp    ebx
  407f91:	fadd   st,st(0)
  407f93:	dec    edi
  407f94:	test   eax,0x151b151d
  407f99:	lahf   
  407f9a:	std    
  407f9b:	pop    ds
  407f9c:	mov    al,bh
  407f9e:	and    bh,0x20
  407fa1:	lods   eax,DWORD PTR ds:[esi]
  407fa2:	jb     0x407fe5
  407fa4:	aam    0xe1
  407fa6:	mov    al,ds:0xbfbb028a
  407fab:	lea    ebx,[ebp-0x1e]
  407fae:	fstp   DWORD PTR [ebx+0x147bfa6c]
  407fb4:	jmp    0x407f3a
  407fb6:	inc    esp
  407fb7:	dec    ecx
  407fb8:	sub    bl,ah
  407fba:	out    dx,al
  407fbb:	int    0xbd
  407fbd:	push   es
  407fbe:	jnp    0x407f77
  407fc0:	xchg   ebx,eax
  407fc1:	push   0xeef54b09
  407fc6:	out    dx,al
  407fc7:	adc    BYTE PTR [edi+eax*2],cl
  407fca:	test   BYTE PTR [ecx+0x3836979a],al
  407fd0:	pop    eax
  407fd1:	adc    al,0x5a
  407fd3:	out    dx,eax
  407fd4:	or     DWORD PTR [edi-0x46a7c990],esp
  407fda:	clc    
  407fdb:	out    0xf1,eax
  407fdd:	out    dx,eax
  407fde:	pop    ecx
  407fdf:	jmp    0xbc9287d
  407fe4:	cdq    
  407fe5:	dec    esi
  407fe6:	cmp    DWORD PTR [ecx],esp
  407fe8:	jb     0x408049
  407fea:	pushf  
  407feb:	cmp    eax,0x8e111e72
  407ff0:	aas    
  407ff1:	push   ecx
  407ff2:	mov    ebx,esp
  407ff4:	push   esi
  407ff5:	mov    al,ds:0x5f9ba015
  407ffa:	add    DWORD PTR gs:[eax+0x1ab99ed],esp
  408001:	test   DWORD PTR [esi-0x6e],esi
  408004:	enter  0x482a,0xef
  408008:	sbb    al,0x30
  40800a:	cwde   
  40800b:	data16 jp 0x407fcf
  40800e:	leave  
  40800f:	js     0x407f92
  408011:	outs   dx,BYTE PTR ds:[esi]
  408012:	xor    BYTE PTR [ebx],ah
  408014:	inc    edi
  408015:	lds    eax,FWORD PTR [eax+eax*2-0x26]
  408019:	retf   
  40801a:	inc    esi
  40801b:	outs   dx,BYTE PTR ds:[esi]
  40801c:	push   ecx
  40801d:	sbb    cl,BYTE PTR [ebx]
  40801f:	ja     0x407fed
  408021:	mov    bl,0x9b
  408023:	aad    0x62
  408025:	inc    esp
  408026:	or     ebp,DWORD PTR [edi+0x41]
  408029:	fwait
  40802a:	mul    DWORD PTR [edx+0x4ee948eb]
  408030:	aaa    
  408031:	inc    eax
  408032:	xchg   DWORD PTR [ecx+0x6230b134],ecx
  408038:	pop    ecx
  408039:	lds    ebp,FWORD PTR [edx+esi*2-0x5422ff7b]
  408040:	add    BYTE PTR [ecx],ch
  408042:	test   edi,0x9623a892
  408048:	add    ah,dl
  40804a:	mov    ebx,0x6e5cd7b1
  40804f:	leave  
  408050:	jmp    0x4080c0
  408052:	idiv   DWORD PTR [ecx+esi*2+0x63204d59]
  408059:	pop    ss
  40805a:	cmp    eax,0x2eb373f4
  40805f:	xor    DWORD PTR es:[edi],edx
  408062:	cli    
  408063:	jmp    0x93ae:0xac8f593b
  40806a:	retf   
  40806b:	aaa    
  40806c:	fsubrp st(4),st
  40806e:	push   ebp
  40806f:	dec    ebx
  408070:	mov    bh,0xa
  408072:	cmp    eax,0x30a93c17
  408077:	mov    ebx,DWORD PTR [eax]
  408079:	and    al,0xd0
  40807b:	pop    ebp
  40807c:	jge    0x408055
  40807e:	out    dx,eax
  40807f:	mov    edi,0x3c3f65df
  408084:	xor    bh,BYTE PTR [esi]
  408086:	cmp    edx,edi
  408088:	stos   DWORD PTR es:[edi],eax
  408089:	mov    al,ds:0x8eec0581
  40808f:	and    al,0x6f
  408091:	mov    esi,0xc441c2d2
  408096:	mov    dl,0x6a
  408098:	shl    DWORD PTR [ebx-0x1b],0xfe
  40809c:	xor    edi,DWORD PTR [ebx+0x76eb84b9]
  4080a2:	sub    DWORD PTR [ebp+eiz*2-0x446d867f],ecx
  4080a9:	or     ebp,DWORD PTR [ebp-0x7e8b7a46]
  4080af:	sahf   
  4080b0:	mov    cl,0xf6
  4080b2:	pop    edi
  4080b3:	aas    
  4080b4:	arpl   bx,ax
  4080b6:	int    0x88
  4080b8:	outs   dx,BYTE PTR es:[esi]
  4080ba:	inc    edi
  4080bb:	mov    ds:0x8ad517d,al
  4080c0:	sbb    BYTE PTR [edx],bh
  4080c2:	jmp    0x4080b8
  4080c4:	inc    edx
  4080c5:	enter  0xace,0xad
  4080c9:	in     eax,0x49
  4080cb:	and    BYTE PTR ds:0xa2e0b17e,bl
  4080d1:	pop    ecx
  4080d2:	fwait
  4080d3:	adc    edx,eax
  4080d5:	sar    bh,cl
  4080d7:	mov    ebp,0x6fc9fde6
  4080dc:	mul    ecx
  4080de:	cdq    
  4080df:	mov    eax,0x25ac94a9
  4080e4:	les    esi,FWORD PTR [ebx-0x3d]
  4080e7:	or     edx,ecx
  4080e9:	add    ah,BYTE PTR [ecx]
  4080eb:	jecxz  0x40809a
  4080ed:	add    eax,0x247a7221
  4080f2:	div    BYTE PTR gs:[edi+ecx*2-0x7c]
  4080f7:	dec    edi
  4080f8:	les    ebp,FWORD PTR [edx]
  4080fa:	sbb    edx,0xffffffe7
  4080fd:	js     0x40812f
  4080ff:	jp     0x4080ba
  408101:	addr16 sub edx,ebp
  408104:	clc    
  408105:	pop    ebp
  408106:	mov    eax,0x5592bf12
  40810b:	pusha  
  40810c:	fsubr  DWORD PTR [edi]
  40810e:	je     0x4080a7
  408110:	mov    bh,0x79
  408112:	or     esi,DWORD PTR [ebx+0x28e1f030]
  408118:	inc    esi
  408119:	scas   eax,DWORD PTR es:[edi]
  40811a:	and    DWORD PTR [ebp-0x53],0x48
  40811e:	stc    
  40811f:	fisttp DWORD PTR [edx-0x41]
  408122:	fld    TBYTE PTR [ebx]
  408124:	jae    0x4080b6
  408126:	(bad)  
  408127:	mov    ebx,0x776a48f
  40812c:	pop    esi
  40812d:	(bad)  
  40812e:	aaa    
  40812f:	jnp    0x4080d7
  408131:	scas   eax,DWORD PTR es:[edi]
  408132:	mov    DWORD PTR gs:[esp+edx*8-0x7fa221a],0xad92351f
  40813e:	xchg   edi,eax
  40813f:	add    BYTE PTR [ebx-0x72],dl
  408142:	test   al,0xe7
  408144:	xchg   esp,eax
  408145:	loop   0x4080e7
  408147:	xor    eax,0xffadac74
  40814c:	or     eax,0xcbffb54d
  408151:	pop    ebp
  408152:	or     dl,BYTE PTR [eax]
  408154:	stc    
  408155:	daa    
  408156:	ror    edx,0x8b
  408159:	scas   eax,DWORD PTR es:[edi]
  40815a:	xor    BYTE PTR [eax],dh
  40815c:	mov    bl,0x95
  40815e:	outs   dx,BYTE PTR ds:[esi]
  40815f:	jmp    0x40812f
  408161:	ret    
  408162:	dec    edx
  408163:	stc    
  408164:	ja     0x408155
  408166:	rcr    DWORD PTR [ebx+ebx*4-0x2a],cl
  40816a:	test   ah,bh
  40816c:	pop    ecx
  40816d:	iret   
  40816e:	push   edi
  40816f:	or     BYTE PTR [edi],ah
  408171:	dec    esi
  408172:	jne    0x408131
  408174:	jne    0x408145
  408176:	ret    
  408177:	popa   
  408178:	mov    al,0x6f
  40817a:	mov    bl,0x7f
  40817c:	push   esi
  40817d:	push   ecx
  40817e:	cmc    
  40817f:	or     al,0xb7
  408181:	sub    eax,0x28ed4f5
  408186:	mov    WORD PTR [esp+ebx*4-0x37effcc5],?
  40818d:	fsub   QWORD PTR [edi+0x49]
  408190:	inc    edi
  408191:	add    eax,0xd79f7592
  408196:	sar    DWORD PTR [edi+0x7dc27bbd],cl
  40819c:	in     al,0x86
  40819e:	mov    BYTE PTR [edi],bl
  4081a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081a1:	sub    DWORD PTR [edi-0x526abd45],eax
  4081a7:	test   eax,0x255419b4
  4081ac:	or     al,0x8d
  4081ae:	cld    
  4081af:	push   esi
  4081b0:	and    bl,bh
  4081b2:	sbb    al,dl
  4081b4:	mov    BYTE PTR [edi-0x27],0x6a
  4081b8:	push   es
  4081b9:	cli    
  4081ba:	adc    BYTE PTR [esi-0x614bc5ae],bh
  4081c0:	lods   al,BYTE PTR ds:[esi]
  4081c1:	sub    ebx,0x9a60976c
  4081c7:	pop    ebp
  4081c8:	cld    
  4081c9:	mov    eax,ds:0x26bf1c36
  4081ce:	jl     0x408207
  4081d0:	mov    dh,0xc
  4081d2:	shr    cl,1
  4081d4:	in     al,0x2c
  4081d6:	sbb    dh,BYTE PTR [edi-0x57]
  4081d9:	sub    DWORD PTR [ecx+eax*8],ecx
  4081dc:	mov    bl,0x55
  4081de:	popa   
  4081df:	jmp    0x9caa:0x8496cc77
  4081e6:	int3   
  4081e7:	mov    ds:0x838d590,eax
  4081ec:	pushf  
  4081ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081ee:	xchg   esp,eax
  4081ef:	dec    ebp
  4081f0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4081f2:	xchg   edx,eax
  4081f3:	or     al,0xa
  4081f5:	pop    edi
  4081f6:	lea    ebp,[ebx+ecx*1+0x7e4f74be]
  4081fd:	pop    esp
  4081fe:	jp     0x4081fa
  408200:	daa    
  408201:	mov    dh,0xc8
  408203:	xchg   ebp,eax
  408204:	sbb    dl,BYTE PTR [ecx]
  408206:	mov    fs,WORD PTR [edi-0x61696c9c]
  40820c:	fldcw  WORD PTR [ebp+0x4af0b0ee]
  408212:	bound  ebp,QWORD PTR [esi-0xad34ef8]
  408218:	cs xchg ebp,eax
  40821a:	test   al,0xcc
  40821c:	inc    esi
  40821d:	shr    DWORD PTR [eax-0x1c935bf2],1
  408223:	shl    DWORD PTR [ebp-0x5a],1
  408226:	je     0x4081c2
  408228:	xor    edx,DWORD PTR [ebx+esi*8-0x44]
  40822c:	cmp    al,0x7c
  40822e:	push   esi
  40822f:	hlt    
  408230:	adc    esi,ecx
  408232:	jne    0x4081d9
  408234:	cmp    dh,dl
  408236:	adc    al,0x25
  408238:	jae    0x40828a
  40823a:	rol    eax,1
  40823c:	pop    edx
  40823d:	ds cld 
  40823f:	in     eax,dx
  408240:	lea    ebx,[ebp-0x77]
  408243:	adc    ah,ah
  408245:	icebp  
  408246:	loopne 0x40824b
  408248:	outs   dx,BYTE PTR ds:[esi]
  408249:	or     dl,dl
  40824b:	xchg   DWORD PTR [ecx+0x4a],esi
  40824e:	outs   dx,BYTE PTR ds:[esi]
  40824f:	stc    
  408250:	call   0x9024:0xf5174416
  408257:	cmp    DWORD PTR [ebx+esi*1-0x45],0xffffffba
  40825c:	ds mov bl,0x73
  40825f:	mov    esp,0x67328f8f
  408264:	inc    eax
  408265:	test   DWORD PTR [ebx-0x39eb6de1],ecx
  40826b:	in     al,dx
  40826c:	push   cs
  40826d:	or     dh,BYTE PTR [ecx]
  40826f:	add    DWORD PTR [esi+0x68],esi
  408272:	push   ebp
  408273:	jmp    0xbf0df417
  408278:	pop    ds
  408279:	or     esi,DWORD PTR [esi]
  40827b:	addr16 aas 
  40827d:	dec    edx
  40827e:	adc    eax,0xe60ac643
  408283:	sub    dh,dl
  408285:	mov    ebp,0x6928528c
  40828a:	outs   dx,BYTE PTR ds:[esi]
  40828b:	in     al,0x7e
  40828d:	fnsave [edi-0x7b3b979e]
  408293:	cmp    eax,0x7fa61e21
  408298:	and    al,0xcf
  40829a:	mov    ebp,0x43603537
  40829f:	sub    edx,edx
  4082a1:	std    
  4082a2:	das    
  4082a3:	rol    DWORD PTR ds:0x53f4b2d4,0xaf
  4082aa:	jle    0x408321
  4082ac:	sbb    DWORD PTR [ebp-0x5cbe8974],edi
  4082b2:	xchg   edi,eax
  4082b3:	sub    cl,BYTE PTR [eax-0x43dd4b3b]
  4082b9:	push   esi
  4082ba:	push   eax
  4082bb:	sbb    eax,0xa483edbd
  4082c0:	jns    0x408274
  4082c2:	adc    BYTE PTR [ebx+0x37],cl
  4082c5:	xlat   BYTE PTR ds:[ebx]
  4082c6:	fdivr  QWORD PTR ds:0xeca8852d
  4082cc:	xor    eax,0x3c53e097
  4082d1:	push   edx
  4082d2:	fbstp  TBYTE PTR [edi]
  4082d4:	pop    edx
  4082d5:	stc    
  4082d6:	(bad)  [ebx-0x77]
  4082d9:	lods   eax,DWORD PTR ds:[esi]
  4082da:	cmp    BYTE PTR [ecx+0x7c1d78c5],ch
  4082e0:	adc    al,BYTE PTR [esi+0x1d62ac22]
  4082e6:	inc    esi
  4082e7:	or     BYTE PTR [edi],ch
  4082e9:	out    dx,al
  4082ea:	das    
  4082eb:	aad    0xd8
  4082ed:	into   
  4082ee:	int    0xf3
  4082f0:	out    dx,al
  4082f1:	xlat   BYTE PTR ds:[ebx]
  4082f2:	mov    eax,0xc1589ac5
  4082f7:	mov    ecx,0x47bd606f
  4082fc:	shl    BYTE PTR [esi+0x6dd1616d],1
  408302:	popa   
  408303:	mov    DWORD PTR [ecx],ecx
  408305:	dec    ebx
  408306:	out    dx,eax
  408307:	std    
  408308:	adc    DWORD PTR [edi-0x5e],edi
  40830b:	or     edx,ecx
  40830d:	push   edi
  40830e:	mov    eax,ds:0x65b2aedd
  408313:	stos   BYTE PTR es:[edi],al
  408314:	or     DWORD PTR [edi*8-0x23d8895d],ebx
  40831b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831c:	ins    DWORD PTR es:[edi],dx
  40831d:	fisttp DWORD PTR ss:[ebx-0x25d0902c]
  408324:	pop    esi
  408325:	nop
  408326:	pop    esp
  408327:	sar    ebp,0x5
  40832a:	xchg   esp,eax
  40832b:	mov    eax,0x3f1057a8
  408330:	inc    edx
  408331:	add    al,0x13
  408333:	mov    dl,0xca
  408335:	sub    eax,0x8f7757ec
  40833a:	lods   al,BYTE PTR ds:[esi]
  40833b:	lock and ebx,DWORD PTR [esi+0x10]
  40833f:	sbb    al,0x76
  408342:	mov    dh,0x74
  408344:	iret   
  408345:	ds xor dl,dh
  408348:	(bad)  
  408349:	mov    ecx,0xedcb17f4
  40834e:	ret    0xe9b1
  408351:	(bad)  
  408353:	scas   eax,DWORD PTR es:[edi]
  408354:	jnp    0x408389
  408356:	jb     0x4083ce
  408358:	iret   
  408359:	int3   
  40835a:	push   ss
  40835b:	mov    ah,0xbc
  40835d:	ja     0x4082fc
  40835f:	jmp    0x723b9812
  408364:	lahf   
  408365:	fnstsw WORD PTR [ecx]
  408367:	adc    al,0xd6
  408369:	sub    DWORD PTR [esi],ecx
  40836b:	adc    ah,cl
  40836d:	push   esp
  40836e:	ja     0x4083b5
  408370:	dec    ecx
  408371:	push   ebp
  408372:	adc    BYTE PTR [ebp+0x600ed5b6],dl
  408378:	mov    ch,0x79
  40837a:	jae    0x4083db
  40837c:	pop    edi
  40837d:	mov    WORD PTR [eax-0x6c],ds
  408380:	cmp    al,0xf3
  408382:	push   0x6b
  408384:	aas    
  408385:	icebp  
  408386:	adc    edx,DWORD PTR [eax-0x61289ee0]
  40838c:	scas   eax,DWORD PTR es:[edi]
  40838d:	ins    BYTE PTR es:[edi],dx
  40838e:	pop    ecx
  40838f:	mov    eax,ds:0x9fe5e20c
  408394:	aas    
  408395:	repnz mov esp,ds
  408398:	cmp    ebp,DWORD PTR [eax+ebx*2]
  40839b:	push   edi
  40839c:	cs retf 0x4a71
  4083a0:	(bad)  
  4083a1:	jne    0x4083a1
  4083a3:	and    DWORD PTR [eax-0x6d],ebx
  4083a6:	push   0xffffff96
  4083a8:	mov    bl,0x36
  4083aa:	or     DWORD PTR [ebx+ebp*1+0x7b83261],ebp
  4083b1:	sub    DWORD PTR [ebp-0x5e],esi
  4083b4:	ret    0x984c
  4083b7:	dec    esi
  4083b8:	nop
  4083b9:	push   0x7eb7181f
  4083be:	nop
  4083bf:	cmc    
  4083c0:	push   es
  4083c1:	popf   
  4083c2:	cs jns 0x4083a9
  4083c5:	lahf   
  4083c6:	fst    DWORD PTR [ebx+0x78510e3]
  4083cc:	pop    ecx
  4083cd:	hlt    
  4083ce:	mov    ah,0x8e
  4083d0:	mov    BYTE PTR [esi-0x41],cl
  4083d3:	not    DWORD PTR [ebx-0x888246a]
  4083d9:	dec    dh
  4083db:	sub    al,0xe0
  4083dd:	in     al,dx
  4083de:	out    0x94,al
  4083e0:	or     cl,cl
  4083e2:	es lock std 
  4083e5:	ja     0x4083bb
  4083e7:	pop    es
  4083e8:	inc    edx
  4083e9:	fbstp  TBYTE PTR [eax-0x4a]
  4083ec:	dec    edx
  4083ed:	sbb    DWORD PTR ss:[edi-0x2c898b3b],edi
  4083f4:	bound  ecx,QWORD PTR [esi]
  4083f6:	pushf  
  4083f7:	adc    eax,0x64548130
  4083fc:	mov    esi,ebp
  4083fe:	adc    DWORD PTR [eax-0x9],edi
  408401:	sub    BYTE PTR [edx+0x4bfd7ff0],ch
  408407:	retf   0x1169
  40840a:	lock pop ecx
  40840c:	iret   
  40840d:	mov    al,BYTE PTR [ebx+0x56eadb9b]
  408413:	mov    ebx,esi
  408415:	sbb    al,0xb3
  408417:	adc    al,0x55
  408419:	push   ebx
  40841a:	adc    al,0x2c
  40841c:	push   esi
  40841d:	(bad)  
  40841e:	fdivr  DWORD PTR [eax+0x1b]
  408421:	jle    0x408491
  408423:	mov    ah,0x64
  408425:	inc    eax
  408426:	sub    esp,esp
  408428:	lods   al,BYTE PTR ds:[esi]
  408429:	sbb    dl,0xd6
  40842c:	scas   eax,DWORD PTR es:[edi]
  40842d:	sub    BYTE PTR [edx-0x6c],0x3e
  408431:	sub    BYTE PTR [edx+0x3bda9728],dl
  408437:	ror    DWORD PTR [ebx],0xbc
  40843a:	inc    ebx
  40843b:	jle    0x408457
  40843d:	fnstenv [ecx]
  40843f:	pop    edi
  408440:	and    eax,0x655a4289
  408445:	inc    esi
  408446:	retf   0xbafc
  408449:	sti    
  40844a:	inc    esp
  40844b:	inc    ebx
  40844c:	loope  0x4083e9
  40844e:	xchg   ecx,eax
  40844f:	mov    edi,0x7eeb2a93
  408454:	out    dx,eax
  408455:	push   edx
  408456:	xchg   edi,eax
  408457:	pop    edx
  408458:	sahf   
  408459:	dec    ebp
  40845a:	xor    dh,BYTE PTR gs:0x47e25865
  408461:	int3   
  408462:	jne    0x4084b9
  408464:	das    
  408465:	xor    dl,BYTE PTR [esi]
  408467:	sub    ah,BYTE PTR [ebp-0x7]
  40846a:	mov    ch,ch
  40846c:	sbb    edx,DWORD PTR [esi]
  40846e:	dec    BYTE PTR [ebp+0x767da0a6]
  408474:	or     DWORD PTR [edx-0x60],esi
  408477:	jge    0x4084b4
  408479:	jbe    0x4084bf
  40847b:	jae    0x408422
  40847d:	xlat   BYTE PTR ds:[ebx]
  40847e:	push   edx
  40847f:	cdq    
  408480:	sbb    ch,BYTE PTR cs:[edx+ebp*1+0x3d2e44f6]
  408488:	rcl    DWORD PTR ds:0x4a27d751,cl
  40848e:	call   0xa67b:0x5d54fe70
  408495:	jg     0x40845a
  408497:	icebp  
  408498:	scas   al,BYTE PTR es:[edi]
  408499:	aam    0xc0
  40849b:	push   esp
  40849c:	push   cs
  40849d:	test   BYTE PTR [ebx+ebp*2-0x28],al
  4084a1:	mov    edi,DWORD PTR [ebx+0x5e98ed1c]
  4084a7:	mov    WORD PTR [edi+ebp*2-0x54382ff6],es
  4084ae:	enter  0x6bfd,0x4e
  4084b2:	inc    ecx
  4084b3:	nop
  4084b4:	cmp    eax,DWORD PTR [eax-0x72ff74ce]
  4084ba:	push   ebx
  4084bb:	cmp    esp,DWORD PTR [ecx+0x7]
  4084be:	sbb    al,0x0
  4084c0:	ret    0xaccf
  4084c3:	inc    ebp
  4084c4:	retf   0xa1e5
  4084c7:	inc    ecx
  4084c8:	ins    BYTE PTR es:[edi],dx
  4084c9:	xor    al,0x52
  4084cb:	sub    eax,0x86b7bd13
  4084d0:	in     eax,0x8
  4084d2:	push   cs
  4084d3:	push   esi
  4084d4:	pop    esi
  4084d6:	mov    ch,dh
  4084d8:	int3   
  4084d9:	inc    ebx
  4084da:	and    ebp,DWORD PTR ds:0x175bdabc
  4084e0:	mov    bl,0x4b
  4084e2:	dec    edi
  4084e3:	dec    eax
  4084e4:	out    0x61,al
  4084e6:	mov    WORD PTR [edx-0x72],es
  4084e9:	jmp    0xed377387
  4084ee:	fadd   st,st(2)
  4084f0:	js     0x408547
  4084f2:	fistp  QWORD PTR [ebx]
  4084f4:	addr16 push edx
  4084f6:	pop    eax
  4084f7:	cmp    edx,esp
  4084f9:	and    esi,0x59898bd
  4084ff:	cmp    al,BYTE PTR [esi-0x8157c22]
  408505:	fsubr  DWORD PTR [ecx-0x1d]
  408508:	push   ecx
  408509:	aaa    
  40850a:	fwait
  40850b:	sbb    bh,BYTE PTR [edi+0x63de796]
  408511:	sbb    al,0xe4
  408513:	xor    eax,0x7533479f
  408518:	aaa    
  408519:	mov    edi,0xe6e58b99
  40851e:	lods   eax,DWORD PTR ds:[esi]
  40851f:	pop    ebx
  408520:	push   ds
  408521:	rcl    DWORD PTR [eax+0xc],0xd2
  408525:	jmp    0x4084b4
  408527:	xchg   esi,eax
  408528:	mov    al,ds:0x29ec2f1c
  40852d:	jecxz  0x4084bd
  40852f:	sub    dl,BYTE PTR [eax-0x22b722ce]
  408535:	push   esp
  408536:	jns    0x4085b0
  408538:	lods   eax,DWORD PTR ds:[esi]
  408539:	not    edi
  40853b:	outs   dx,BYTE PTR ds:[esi]
  40853c:	mov    BYTE PTR [edx+0x12],bl
  40853f:	add    eax,0x1d029500
  408544:	sbb    al,0xc2
  408546:	icebp  
  408547:	cdq    
  408548:	imul   esi,DWORD PTR [eax+ebx*2-0x69],0x24b3e6e4
  408550:	inc    ecx
  408551:	fiadd  WORD PTR [edi-0x2a]
  408554:	inc    edx
  408555:	das    
  408556:	loop   0x4085c2
  408558:	(bad)  
  408559:	or     eax,0xcb2e416
  40855e:	mov    ecx,0x1f1b506d
  408563:	or     BYTE PTR [edi+0x78],al
  408566:	test   al,0x5c
  408568:	fwait
  408569:	in     al,0x49
  40856b:	lea    esp,[eax-0x4093a3f7]
  408571:	call   FWORD PTR [eax]
  408573:	jl     0x40850c
  408575:	enter  0x45fc,0x82
  408579:	cmc    
  40857a:	mov    bl,0x16
  40857c:	dec    edx
  40857d:	aad    0x8e
  40857f:	mov    dl,0xc8
  408581:	mov    ds:0x67ec2460,eax
  408586:	cmp    bh,dl
  408588:	pop    ebx
  408589:	call   0xb317:0xab18e234
  408590:	(bad)  
  408591:	(bad)  
  408592:	clc    
  408593:	and    ecx,0x837f9ff9
  408599:	sar    BYTE PTR [edx-0x7a],0xdd
  40859d:	mov    esp,0xa88ae8dc
  4085a2:	pop    eax
  4085a3:	test   al,0xa8
  4085a5:	push   ebp
  4085a6:	icebp  
  4085a7:	or     BYTE PTR [ebx-0x5c],dh
  4085aa:	in     eax,dx
  4085ab:	inc    ecx
  4085ac:	iret   
  4085ad:	cmp    BYTE PTR ds:0x852db707,dl
  4085b3:	or     esp,DWORD PTR [edx-0x5bc712cf]
  4085b9:	pop    edx
  4085ba:	sub    al,0x74
  4085bc:	mov    eax,0x1a6ff566
  4085c1:	ds dec ah
  4085c4:	jnp    0x408622
  4085c6:	imul   edi,DWORD PTR [ebx+0x867d0be],0xa22dbcb6
  4085d0:	xchg   ebp,eax
  4085d1:	and    DWORD PTR [ebp-0x2da7a19b],edi
  4085d7:	stos   DWORD PTR es:[edi],eax
  4085d8:	push   eax
  4085d9:	jno    0x4085c6
  4085db:	test   al,0x61
  4085dd:	mov    ebp,0xa2f6d8d9
  4085e2:	xor    esi,DWORD PTR [ecx-0x645cb765]
  4085e8:	or     DWORD PTR gs:[edx+0x6b],eax
  4085ec:	mov    DWORD PTR [ecx],esi
  4085ee:	mov    BYTE PTR [ebp-0x2e80a9af],cl
  4085f4:	mov    al,0x84
  4085f6:	aam    0x72
  4085f8:	sbb    DWORD PTR [ecx],esi
  4085fa:	pop    esp
  4085fb:	imul   eax,DWORD PTR [esi],0x57
  4085fe:	aam    0x67
  408600:	jnp    0x408614
  408602:	jnp    0x4085f3
  408604:	pusha  
  408605:	dec    ecx
  408606:	dec    ecx
  408607:	cmp    ah,BYTE PTR [edi-0x61b7bad6]
  40860d:	jmp    0xcf2007a4
  408612:	xor    eax,0xe3f0374f
  408617:	int3   
  408618:	gs (bad) 
  40861a:	shl    DWORD PTR [ebx],cl
  40861c:	xchg   DWORD PTR [ebx+0x78],ebx
  40861f:	sub    BYTE PTR ds:0x32a6f5cd,cl
  408625:	mov    ds:0x11ef0961,al
  40862a:	sub    eax,0xe079612c
  40862f:	call   0x1392bf49
  408634:	cli    
  408635:	cmp    al,0x77
  408637:	sahf   
  408638:	add    edx,DWORD PTR [edx]
  40863a:	inc    edx
  40863b:	xchg   edi,eax
  40863c:	mov    ds:0x7c590b69,eax
  408641:	pop    ds
  408642:	frstor [eax]
  408644:	icebp  
  408645:	test   DWORD PTR [edx],esp
  408647:	inc    ebp
  408648:	data16 hlt 
  40864a:	pushf  
  40864b:	call   0xc4d9aeb8
  408650:	and    ecx,0x34afe976
  408656:	nop
  408657:	pushf  
  408658:	stos   BYTE PTR es:[edi],al
  408659:	(bad)  
  40865b:	dec    eax
  40865c:	mov    bh,0x60
  40865e:	cmp    ebx,DWORD PTR ds:0x4773366
  408664:	shr    DWORD PTR [esi],cl
  408666:	pop    eax
  408667:	adc    eax,0xec53441d
  40866c:	add    ebx,esi
  40866e:	xchg   esp,eax
  40866f:	add    BYTE PTR [eax+0x6ebbd425],0x2b
  408676:	mov    edx,0x99608e19
  40867b:	rol    BYTE PTR [ebp+0x4a],0x54
  40867f:	push   ebp
  408680:	clc    
  408681:	loop   0x40868a
  408683:	das    
  408684:	and    dh,BYTE PTR [eax+0xfd6e67d]
  40868a:	xchg   edx,eax
  40868b:	jb     0x4086a2
  40868d:	pop    ebx
  40868e:	mov    dl,BYTE PTR [ecx+0x32215cd4]
  408694:	repz pushf 
  408696:	ret    
  408697:	hlt    
  408698:	das    
  408699:	pmaxsw mm5,QWORD PTR [esi]
  40869c:	push   es
  40869d:	and    bl,dh
  40869f:	mov    esi,0x81cc274c
  4086a4:	ss aaa 
  4086a6:	sbb    al,BYTE PTR [ebx-0x2]
  4086a9:	xor    dh,ah
  4086ab:	lds    esp,FWORD PTR [esi+0x6f]
  4086ae:	repz fldenv [ebx+0x4e3fa991]
  4086b5:	shr    BYTE PTR [eax],0x3f
  4086b8:	pop    ebp
  4086b9:	clc    
  4086ba:	inc    ebx
  4086bb:	pop    edi
  4086bc:	adc    DWORD PTR [ecx-0x1e4c5a23],ecx
  4086c2:	dec    edx
  4086c3:	mov    al,ds:0x8584f86d
  4086c8:	sbb    DWORD PTR [eax],esp
  4086ca:	call   0x3a69ead9
  4086cf:	fdivr  QWORD PTR [edx-0x34]
  4086d2:	fldcw  WORD PTR [ecx-0xfe96894]
  4086d8:	lods   al,BYTE PTR cs:[esi]
  4086da:	rol    BYTE PTR [esi+edi*2-0x76dad82b],cl
  4086e1:	ins    BYTE PTR es:[edi],dx
  4086e2:	mov    ch,0x68
  4086e4:	enter  0x2f5a,0x2e
  4086e8:	arpl   bx,dx
  4086ea:	mul    BYTE PTR ds:0x38634218
  4086f0:	bound  ecx,QWORD PTR [eax]
  4086f2:	pop    eax
  4086f3:	pop    edx
  4086f4:	not    DWORD PTR [esi-0x20]
  4086f7:	pop    ebx
  4086f8:	aam    0x35
  4086fa:	scas   al,BYTE PTR es:[edi]
  4086fb:	out    dx,eax
  4086fc:	(bad)
  408700:	mov    bh,bl
  408702:	mov    ebp,0x7b1ab1c9
  408707:	clc    
  408708:	fs jl  0x4086a9
  40870b:	inc    ecx
  40870c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40870d:	or     edx,DWORD PTR [esi-0x17]
  408710:	sti    
  408711:	xchg   DWORD PTR [ecx+0x565586c1],esp
  408717:	in     al,0x94
  408719:	and    edi,DWORD PTR [edi-0x3c]
  40871c:	mov    ds,WORD PTR [eax+ebp*4-0x26]
  408720:	cmc    
  408721:	fcmovne st,st(6)
  408723:	(bad)  
  408724:	int3   
  408725:	fld    TBYTE PTR [esp+esi*1]
  408728:	push   ss
  408729:	fisttp DWORD PTR [eax+0x47]
  40872c:	in     eax,dx
  40872d:	fldcw  WORD PTR [eax]
  40872f:	sti    
  408730:	aad    0x54
  408732:	xor    ah,BYTE PTR [ecx+edx*1]
  408735:	mov    WORD PTR [edi+esi*2-0x3799d1e5],fs
  40873c:	icebp  
  40873d:	jp     0x4086ce
  40873f:	outs   dx,DWORD PTR ds:[esi]
  408740:	lds    ebx,FWORD PTR [edi-0xb]
  408743:	scas   al,BYTE PTR es:[edi]
  408744:	push   DWORD PTR [ecx-0x66f5545]
  40874a:	ss add eax,0xf4829c47
  408750:	or     DWORD PTR [edi],ebx
  408752:	dec    ebx
  408753:	xor    BYTE PTR [edi+0x4b65e77],ah
  408759:	cdq    
  40875a:	inc    ebx
  40875c:	mov    al,ds:0xc31ee148
  408761:	adc    eax,0x3fb6d109
  408766:	(bad)  
  408767:	jmp    0xddb1:0x6800d8ce
  40876e:	mov    edi,0x6ae2dbe1
  408773:	aaa    
  408774:	pop    edx
  408775:	adc    ebp,DWORD PTR [ebp+0x7e7337d7]
  40877b:	xor    al,0xe4
  40877d:	pop    ecx
  40877e:	popa   
  40877f:	fs fst st(1)
  408782:	push   ebp
  408783:	mov    al,0x9c
  408785:	popf   
  408786:	push   ds
  408787:	pop    edx
  408788:	iret   
  408789:	add    DWORD PTR [edi],ecx
  40878b:	shr    BYTE PTR ds:0xb4a4f60e,1
  408791:	mov    ds:0x8ec273b7,eax
  408796:	fs mov esi,0x473af566
  40879c:	jle    0x408815
  40879e:	fldenv [edx+ecx*1]
  4087a1:	cmp    al,0xd1
  4087a3:	in     eax,dx
  4087a4:	mov    ds:0x96591fe6,al
  4087a9:	mov    WORD PTR [eax],?
  4087ab:	mov    ds:0x6ccf0316,eax
  4087b0:	ss xchg edi,eax
  4087b2:	mov    eax,DWORD PTR [ebx-0x28]
  4087b5:	pop    edi
  4087b6:	inc    edx
  4087b7:	lea    ecx,[edi-0x609353fa]
  4087bd:	popf   
  4087be:	add    eax,0x235dc2c3
  4087c3:	and    dl,BYTE PTR [edi+0x58d0c43d]
  4087c9:	xor    BYTE PTR [ebp+0x19fc3eb],cl
  4087cf:	sar    DWORD PTR [ebp+0x71],cl
  4087d2:	xchg   ecx,eax
  4087d3:	les    ebp,FWORD PTR [ebx-0x41]
  4087d6:	daa    
  4087d7:	dec    edx
  4087d8:	sub    al,0xa5
  4087da:	clc    
  4087db:	push   DWORD PTR [ebx]
  4087dd:	inc    ecx
  4087de:	js     0x408836
  4087e0:	xchg   ebp,eax
  4087e1:	jecxz  0x4087eb
  4087e3:	adc    ch,BYTE PTR [edx]
  4087e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087e6:	fmul   DWORD PTR [edx-0x1081fded]
  4087ec:	idiv   edx
  4087ee:	imul   esi,DWORD PTR [ecx+0x39],0xffffff96
  4087f2:	dec    edi
  4087f3:	adc    BYTE PTR [eax],dl
  4087f5:	mov    dh,0x7e
  4087f7:	push   cs
  4087f8:	sti    
  4087f9:	and    ah,BYTE PTR [ebx]
  4087fb:	jmp    0x28aaf7c2
  408800:	das    
  408801:	mov    al,0x2c
  408803:	call   0xbb2d:0xf39d8991
  40880a:	adc    eax,0x471e565a
  40880f:	add    ebp,DWORD PTR [esi+0x65]
  408812:	outs   dx,DWORD PTR ds:[esi]
  408813:	push   cs
  408814:	lods   al,BYTE PTR ds:[esi]
  408815:	mul    cl
  408817:	dec    esi
  408818:	shl    DWORD PTR [edi+eax*8-0xf4368e],1
  40881f:	int    0x5e
  408821:	retf   
  408822:	clc    
  408823:	lock std 
  408825:	out    0x40,al
  408827:	adc    eax,0x215c9bff
  40882c:	loopne 0x4087e8
  40882e:	add    ebx,DWORD PTR [eax]
  408830:	and    bh,dl
  408832:	sub    BYTE PTR [edx+edi*2+0x48e68ad6],dl
  408839:	sbb    al,0xd5
  40883b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40883c:	test   eax,0xa8d7f114
  408841:	pop    ebx
  408842:	leave  
  408843:	lea    eax,ds:0x4367ba72
  408849:	cdq    
  40884a:	xor    al,0xd3
  40884c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884d:	push   0xddaf84ec
  408852:	int3   
  408853:	pop    esi
  408854:	adc    edx,DWORD PTR ds:0x9d862ad9
  40885a:	cli    
  40885b:	pop    ds
  40885c:	lahf   
  40885d:	out    dx,eax
  40885e:	pop    edi
  40885f:	(bad)  
  408860:	je     0x4087f6
  408862:	pop    edi
  408863:	add    esp,DWORD PTR [ebx+ecx*2]
  408866:	jae    0x4088cd
  408868:	scas   eax,DWORD PTR es:[edi]
  408869:	mov    dl,0xd4
  40886b:	fwait
  40886c:	adc    eax,0x32a49de9
  408871:	jl     0x40888a
  408873:	or     esi,DWORD PTR [ebx+0x783190b3]
  408879:	int3   
  40887a:	test   BYTE PTR [eax-0x29],dl
  40887d:	mov    ebx,0x13e8723b
  408882:	std    
  408883:	fidiv  WORD PTR [esi+ebp*8]
  408886:	cmp    eax,0x2e4dd547
  40888b:	and    al,0xd7
  40888d:	sub    edx,DWORD PTR [ebp+0x1a]
  408890:	push   esp
  408891:	jle    0x408857
  408893:	lds    esp,FWORD PTR ds:0x12ea8124
  408899:	test   al,0x1f
  40889b:	dec    ecx
  40889c:	and    DWORD PTR [eax-0x7e],ebx
  40889f:	aad    0xb9
  4088a1:	shr    BYTE PTR [eax+0x2e52779e],cl
  4088a7:	and    al,cl
  4088a9:	sbb    dl,cl
  4088ab:	xchg   DWORD PTR [eax+edi*2],eax
  4088ae:	jge    0x4088b1
  4088b0:	loopne 0x408897
  4088b2:	shl    esi,1
  4088b4:	xor    esi,DWORD PTR [eax]
  4088b6:	mov    al,0xd8
  4088b8:	cdq    
  4088b9:	jmp    0x5914:0x9c096d4
  4088c0:	bound  eax,QWORD PTR ds:0x60a74f56
  4088c6:	push   ss
  4088c7:	lea    esi,[ecx]
  4088c9:	lock sub al,0x28
  4088cc:	sub    eax,0x428ebeab
  4088d1:	sbb    DWORD PTR [ebx-0x11],0x4d465673
  4088d8:	jp     0x4088d3
  4088da:	sbb    DWORD PTR [ecx-0x2a],edx
  4088dd:	inc    esi
  4088de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088e0:	addr16 ds push edi
  4088e3:	inc    edx
  4088e4:	push   eax
  4088e5:	xchg   ebx,eax
  4088e6:	cmp    eax,0xa2f635f7
  4088eb:	stos   BYTE PTR es:[edi],al
  4088ec:	ss (bad) 
  4088ee:	mov    ecx,0xc1942876
  4088f3:	xor    BYTE PTR [edx],0xcd
  4088f6:	inc    edx
  4088f7:	stos   DWORD PTR es:[edi],eax
  4088f8:	xchg   BYTE PTR [esi+0x23],bl
  4088fb:	mov    esp,0x32be03fa
  408900:	adc    BYTE PTR [ebx+0x557b3d85],0x2a
  408907:	daa    
  408908:	sub    DWORD PTR [ecx+0x1755fcbb],ecx
  40890e:	sbb    BYTE PTR [esi+0x42],bl
  408911:	frstor [eax-0x7f1f1600]
  408917:	xchg   ebx,eax
  408918:	dec    edi
  408919:	push   esi
  40891a:	clc    
  40891b:	iret   
  40891c:	fyl2xp1 
  40891e:	js     0x4088d9
  408920:	pop    ss
  408921:	nop
  408922:	imul   DWORD PTR [ebp+0x3f]
  408925:	jge    0x4088aa
  408927:	leave  
  408928:	add    ebx,ecx
  40892a:	cmp    ch,BYTE PTR [esi]
  40892c:	das    
  40892d:	repz out 0x4e,al
  408930:	jp     0x4088f1
  408932:	dec    ebx
  408933:	imul   ebx,DWORD PTR [ebp+0x27],0xffffff80
  408937:	(bad)  
  408938:	scas   eax,DWORD PTR es:[edi]
  408939:	mov    ds:0xada2fd1f,eax
  40893e:	test   bl,dl
  408940:	aas    
  408941:	jnp    0x408980
  408943:	pop    edx
  408944:	aas    
  408945:	cmp    esi,DWORD PTR [ebx+0x76848188]
  40894b:	inc    esp
  40894c:	and    eax,0xc9ea0812
  408951:	sub    eax,ecx
  408953:	mov    edx,0xace4effa
  408958:	mov    ecx,0xe9f7d5be
  40895d:	gs push ds
  40895f:	inc    edi
  408960:	jmp    0x612e76e5
  408965:	mov    ch,0x24
  408967:	ins    DWORD PTR es:[edi],dx
  408968:	mov    DWORD PTR [esi],esi
  40896a:	es push ebp
  40896c:	jbe    0x408964
  40896e:	xor    eax,DWORD PTR [eax-0x2dfbeff6]
  408974:	(bad)  
  408976:	push   ds
  408977:	cmp    eax,0x9d9a1fcc
  40897c:	ret    
  40897d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897e:	call   DWORD PTR [eax+0x4b]
  408981:	test   al,0x87
  408983:	push   ds
  408984:	mov    DWORD PTR [edx],eax
  408986:	xchg   ebx,eax
  408987:	loopne 0x4089ff
  408989:	ret    
  40898a:	dec    DWORD PTR [ecx-0x19945aad]
  408990:	cs aaa 
  408992:	rol    DWORD PTR [edi+0x38],1
  408995:	ror    BYTE PTR [esi-0x1c],0x3b
  408999:	dec    esp
  40899a:	mov    ds:0xbdadfd02,al
  40899f:	(bad)  
  4089a0:	in     eax,dx
  4089a1:	in     eax,dx
  4089a2:	mov    esp,DWORD PTR [ecx]
  4089a4:	dec    ecx
  4089a5:	inc    esp
  4089a6:	jecxz  0x40893c
  4089a8:	adc    eax,0xc5b61271
  4089ad:	jne    0x408944
  4089af:	out    dx,al
  4089b0:	pop    es
  4089b1:	mov    ds:0x2c67c97b,eax
  4089b6:	jbe    0x4089e5
  4089b8:	cmp    eax,0xa73c9606
  4089bd:	or     al,0x99
  4089bf:	(bad)  
  4089c0:	ins    BYTE PTR es:[edi],dx
  4089c1:	jp     0x4089d7
  4089c3:	or     cl,BYTE PTR [esi+0x6e13c230]
  4089c9:	or     cl,BYTE PTR [eax+ebx*4]
  4089cc:	mov    cl,BYTE PTR ds:0x4f77a53a
  4089d2:	xchg   esp,eax
  4089d3:	mov    eax,0xc80853ae
  4089d8:	mov    edx,0x61f748de
  4089dd:	std    
  4089de:	sbb    BYTE PTR [ecx+0x3e],0xe7
  4089e2:	fsub   QWORD PTR [ebx-0x41942cf7]
  4089e8:	int    0x78
  4089ea:	push   esp
  4089eb:	sub    BYTE PTR [esi-0x23],bh
  4089ee:	ficomp WORD PTR [edx+0xf2cc221]
  4089f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f5:	push   ebp
  4089f6:	pop    edx
  4089f7:	xor    ecx,DWORD PTR [esi-0x1f]
  4089fa:	mov    ds:0xf889df05,eax
  4089ff:	push   es
  408a00:	shl    BYTE PTR [esi+0x58f3ce7f],1
  408a06:	fld    DWORD PTR [eax+edi*4+0x45cf54b4]
  408a0d:	dec    ebp
  408a0e:	sub    DWORD PTR gs:[ebp-0x60],edi
  408a12:	inc    ebp
  408a13:	(bad)  
  408a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a15:	seta   BYTE PTR [edx*2-0x6cfd0cef]
  408a1d:	mov    al,ds:0x28b8e704
  408a22:	xor    al,bh
  408a24:	pop    esp
  408a25:	jmp    0xf09f:0xb62749f8
  408a2c:	xchg   BYTE PTR [eax],bh
  408a2e:	and    al,0xed
  408a30:	bound  esi,QWORD PTR [ebx]
  408a32:	out    0x19,al
  408a34:	leave  
  408a35:	adc    bh,BYTE PTR [ecx-0x5965ad47]
  408a3b:	loope  0x408a9f
  408a3d:	sub    BYTE PTR [esi],bl
  408a3f:	ja     0x408a70
  408a41:	enter  0xf6c2,0xb7
  408a45:	cld    
  408a46:	jg     0x408a8e
  408a48:	imul   esp,DWORD PTR [ecx+edi*4+0x1452b07d],0x3e99ab32
  408a53:	arpl   WORD PTR [edi+0x4a],sp
  408a56:	popf   
  408a57:	mov    ebp,0x7915fa2
  408a5d:	xchg   edx,eax
  408a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a5f:	sbb    ebp,DWORD PTR [esi]
  408a61:	sub    al,0xa0
  408a63:	inc    ecx
  408a64:	(bad)  
  408a65:	hlt    
  408a66:	push   esi
  408a67:	sub    bh,dl
  408a69:	or     BYTE PTR [esi-0x42d674f1],0x55
  408a70:	xchg   esi,eax
  408a71:	pop    ss
  408a72:	or     esp,esp
  408a74:	fwait
  408a75:	je     0x408a27
  408a77:	adc    al,0xf
  408a79:	sbb    ch,dl
  408a7b:	es cdq 
  408a7d:	push   ebx
  408a7e:	mov    ch,0xa3
  408a80:	loopne 0x408ab1
  408a82:	mov    ecx,0x63403eb
  408a87:	xor    dl,BYTE PTR [esi-0x76b1466f]
  408a8d:	pusha  
  408a8e:	out    0x78,eax
  408a90:	or     eax,0x5dd9b004
  408a95:	sahf   
  408a96:	mov    ebx,0x84da1a3c
  408a9b:	std    
  408a9c:	fidiv  DWORD PTR [eax+edx*4-0x687b4dee]
  408aa3:	mov    ss,WORD PTR [edi+0x775b2fd0]
  408aa9:	es dec esp
  408aab:	retf   0x3798
  408aae:	pushf  
  408aaf:	(bad)  
  408ab0:	je     0x408a7a
  408ab2:	ret    
  408ab3:	mov    edi,0xcb79061b
  408ab8:	or     esi,esi
  408aba:	out    dx,eax
  408abb:	in     eax,0x3f
  408abd:	das    
  408abe:	bound  esp,QWORD PTR [edi]
  408ac0:	jle    0x408a89
  408ac2:	mov    ch,0x91
  408ac4:	adc    al,cl
  408ac6:	cmp    ecx,eax
  408ac8:	or     ecx,DWORD PTR [eax]
  408aca:	mov    ah,0x63
  408acc:	mov    ebx,0x66133dfa
  408ad1:	add    eax,0x2861533f
  408ad6:	jno    0x408acd
  408ad8:	outs   dx,BYTE PTR ds:[esi]
  408ad9:	mov    ecx,0xa7301ed7
  408ade:	fist   DWORD PTR [edi]
  408ae0:	into   
  408ae1:	inc    ebx
  408ae2:	(bad)  ds:0x7ca3cb72
  408ae8:	or     al,0xd6
  408aea:	mov    al,ds:0xdd54e51c
  408aef:	xchg   ebx,eax
  408af0:	xchg   ebx,eax
  408af1:	(bad)  
  408af2:	pop    ebx
  408af3:	shl    DWORD PTR ds:[edx],cl
  408af6:	adc    esi,DWORD PTR [esi]
  408af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408af9:	adc    DWORD PTR [ecx+0x45b0d2b7],esp
  408aff:	inc    eax
  408b00:	retf   
  408b01:	adc    al,0xc8
  408b03:	jnp    0x408b71
  408b05:	jmp    0xdc12:0x13684216
  408b0c:	imul   ecx,DWORD PTR ds:0x3faff818,0x2fa698c6
  408b16:	pushf  
  408b17:	cmp    DWORD PTR [edx-0x63284423],0x3d09a1a8
  408b21:	test   eax,0xb4a938ab
  408b26:	fistp  QWORD PTR [edi]
  408b28:	sti    
  408b29:	das    
  408b2a:	outs   dx,DWORD PTR ds:[esi]
  408b2b:	inc    esi
  408b2c:	add    BYTE PTR [ebx+0x6c],al
  408b2f:	fisttp WORD PTR [eax]
  408b31:	cs xchg ch,bl
  408b34:	ins    DWORD PTR es:[edi],dx
  408b35:	lea    eax,[ebx-0x7a12bc9f]
  408b3b:	lods   al,BYTE PTR ds:[esi]
  408b3c:	sub    cl,dh
  408b3e:	(bad)
  408b41:	xor    al,0xd6
  408b43:	mov    bl,BYTE PTR [esi]
  408b45:	inc    eax
  408b46:	ins    BYTE PTR es:[edi],dx
  408b47:	cs aam 0x8b
  408b4a:	mov    esi,0x21aef54f
  408b4f:	imul   esp,DWORD PTR [edx+eax*8-0x4b12c76b],0xe
  408b57:	enter  0x1b15,0x3
  408b5b:	sub    al,0x75
  408b5d:	in     eax,0x48
  408b5f:	or     bh,BYTE PTR [ebp-0x37b6625b]
  408b65:	ret    0x915a
  408b68:	push   esi
  408b69:	(bad)  
  408b6a:	lahf   
  408b6b:	and    BYTE PTR [edi+0x715b59b5],bh
  408b71:	add    BYTE PTR [edi-0x173d87e5],ah
  408b77:	stos   BYTE PTR es:[edi],al
  408b78:	cmp    edx,eax
  408b7a:	push   edx
  408b7b:	push   esp
  408b7c:	adc    ah,al
  408b7e:	and    DWORD PTR ds:0x442447fa,edi
  408b84:	mov    al,ds:0xd07e7150
  408b89:	push   es
  408b8a:	xor    al,0x84
  408b8c:	shr    BYTE PTR ds:0xff23eb43,1
  408b92:	xchg   ebp,eax
  408b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b94:	mov    ds:0x50301edc,al
  408b99:	xor    ebp,esp
  408b9b:	lock sub ecx,ebx
  408b9e:	xor    BYTE PTR [ebp+0x28],0x5b
  408ba2:	test   DWORD PTR [eax+eiz*4-0x55f3c93a],ecx
  408ba9:	add    DWORD PTR [ecx],ebp
  408bab:	cs stos BYTE PTR es:[edi],al
  408bad:	mov    ch,0x93
  408baf:	add    DWORD PTR [esi-0x1c2bca01],ebx
  408bb5:	test   BYTE PTR [edx-0x71],cl
  408bb8:	call   0xf7f8:0x259e9a4f
  408bbf:	mov    bl,ah
  408bc1:	mov    DWORD PTR [edx-0x5a995d48],eax
  408bc7:	add    esp,esp
  408bc9:	jmp    0xd9e7f373
  408bce:	cmp    al,0x96
  408bd0:	inc    edx
  408bd1:	or     al,0x6c
  408bd3:	xchg   edi,eax
  408bd4:	aaa    
  408bd5:	jge    0x408b85
  408bd7:	fild   WORD PTR [eax-0x56]
  408bda:	daa    
  408bdb:	push   ecx
  408bdc:	xchg   esi,eax
  408bdd:	scas   eax,DWORD PTR es:[edi]
  408bde:	cld    
  408bdf:	in     al,0x3b
  408be1:	test   eax,0xdf9aab8d
  408be6:	outs   dx,BYTE PTR ds:[esi]
  408be7:	and    DWORD PTR es:[ebp+0x2d6febd8],edx
  408bee:	sbb    esi,eax
  408bf0:	or     cl,ch
  408bf2:	outs   dx,BYTE PTR ds:[esi]
  408bf3:	not    dh
  408bf5:	clc    
  408bf6:	cmp    ecx,ebx
  408bf8:	and    eax,DWORD PTR [ebx-0x25]
  408bfb:	idiv   DWORD PTR [edx+0xb]
  408bfe:	and    cl,BYTE PTR [eax]
  408c00:	jno    0x408c4e
  408c02:	ret    0x54fa
  408c05:	test   bl,al
  408c07:	fdiv   QWORD PTR [edx]
  408c09:	and    al,0x83
  408c0b:	push   ss
  408c0c:	or     al,0x8d
  408c0e:	test   BYTE PTR [eax],cl
  408c10:	cmc    
  408c11:	jb     0x408c45
  408c13:	add    BYTE PTR [ecx+0x458b0845],cl
  408c19:	hlt    
  408c1a:	mov    ecx,DWORD PTR [ebp+0x14]
  408c1d:	xor    eax,esi
  408c1f:	add    eax,edi
  408c21:	imul   eax,DWORD PTR [ecx]
  408c24:	mov    ecx,DWORD PTR [ebp-0x4]
  408c27:	mov    edx,DWORD PTR [ebp+0x8]
  408c2a:	xor    ecx,esi
  408c2c:	lea    ecx,[ecx+edx*1+0x3272f5]
  408c33:	cmp    ecx,eax
  408c35:	jne    0x406849
  408c3b:	jmp    0x40afcd
  408c40:	or     eax,0xbf3c7fd1
  408c45:	mov    cl,BYTE PTR [edx]
  408c47:	into   
  408c48:	and    bl,BYTE PTR [ebx]
  408c4a:	and    eax,0xbc67212a
  408c4f:	push   esp
  408c50:	pushf  
  408c51:	sbb    BYTE PTR [ebx-0x7ca1f37d],al
  408c57:	and    DWORD PTR ds:0x2f83b852,0xfffffff6
  408c5e:	or     bh,BYTE PTR [ebp+0x6a]
  408c61:	stos   DWORD PTR es:[edi],eax
  408c62:	pop    esp
  408c63:	out    0xe1,al
  408c65:	inc    eax
  408c66:	out    0x4f,eax
  408c68:	repz mov bl,0xd2
  408c6b:	fsubr  st,st(0)
  408c6d:	dec    edi
  408c6e:	dec    ebx
  408c6f:	or     al,0xa8
  408c71:	in     al,0x8c
  408c73:	mov    eax,0x96f8ebba
  408c78:	pop    ebp
  408c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c7a:	mov    edi,0xb5f4c73f
  408c7f:	pusha  
  408c80:	aam    0x6d
  408c82:	(bad)  
  408c83:	mov    bh,0xac
  408c85:	rcr    ecx,0x30
  408c88:	mov    ebx,0xf00245ee
  408c8d:	data16 loopne 0x408c4a
  408c90:	jno    0x408c50
  408c92:	idiv   DWORD PTR [ebx-0x14a05b87]
  408c98:	arpl   WORD PTR [ecx+eiz*2+0x57],bx
  408c9c:	mov    ecx,0x59a10856
  408ca1:	fidivr DWORD PTR [esp+ebx*1-0x16]
  408ca5:	popf   
  408ca6:	sbb    DWORD PTR [ecx-0x6e],edx
  408ca9:	call   0x50b8:0x77ae9160
  408cb0:	pop    ecx
  408cb1:	inc    ecx
  408cb2:	pop    ss
  408cb3:	mov    edx,0x325a9797
  408cb8:	(bad)  
  408cba:	jg     0x408d33
  408cbc:	mov    esi,0x54861184
  408cc1:	retf   0xc064
  408cc4:	leave  
  408cc5:	dec    ebp
  408cc6:	(bad)  ds:0xe6fda5e7
  408ccc:	jle    0x408c8b
  408cce:	iret   
  408ccf:	(bad)  
  408cd1:	nop
  408cd2:	sub    DWORD PTR [esi+eax*4-0x1873b1a2],0xffffffc4
  408cda:	push   ebx
  408cdc:	cld    
  408cdd:	lock mov es,WORD PTR ds:0x885c1b13
  408ce4:	das    
  408ce5:	mov    ebp,0xdf9a5685
  408cea:	aam    0xe7
  408cec:	lods   al,BYTE PTR ds:[esi]
  408ced:	icebp  
  408cee:	ss (bad) 
  408cf1:	call   0xc92b:0x5fc2c859
  408cf8:	ins    BYTE PTR es:[edi],dx
  408cf9:	jecxz  0x408d77
  408cfb:	cli    
  408cfc:	cdq    
  408cfd:	(bad)  
  408cfe:	out    dx,al
  408cff:	jle    0x408d2e
  408d01:	mov    ds:0x8bc1c858,eax
  408d06:	xchg   DWORD PTR [eax+0x24],eax
  408d09:	daa    
  408d0a:	fisub  WORD PTR [ebp-0x3a]
  408d0d:	inc    edx
  408d0e:	repz and DWORD PTR [edx],0x68
  408d12:	daa    
  408d13:	lods   al,BYTE PTR ds:[esi]
  408d14:	outs   dx,DWORD PTR ds:[esi]
  408d15:	stc    
  408d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d17:	ret    0x8c9c
  408d1a:	xchg   DWORD PTR [edx+0x1c999977],ecx
  408d20:	stc    
  408d21:	scas   al,BYTE PTR es:[edi]
  408d22:	pop    ebx
  408d23:	push   ebp
  408d24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d25:	lods   eax,DWORD PTR ds:[esi]
  408d26:	cmp    ch,BYTE PTR [ebx+edi*1]
  408d29:	(bad)  
  408d2a:	idiv   cl
  408d2c:	es test eax,0x9921c595
  408d32:	sbb    esp,DWORD PTR [edx-0x29]
  408d35:	imul   edx,DWORD PTR [edx-0x3d],0x47
  408d39:	inc    edi
  408d3a:	fldenv [edi-0x56]
  408d3d:	fwait
  408d3e:	push   cs
  408d3f:	icebp  
  408d40:	adc    DWORD PTR [ebp+0x764918cc],edi
  408d46:	cmp    BYTE PTR [esi+ebx*1-0x7e],ah
  408d4a:	lock push 0xb2843509
  408d50:	out    dx,eax
  408d51:	shl    dl,1
  408d53:	aad    0xe5
  408d55:	mov    esp,0xe70658f2
  408d5a:	aaa    
  408d5b:	hlt    
  408d5c:	dec    esp
  408d5d:	les    esi,FWORD PTR [esi-0x71]
  408d60:	jmp    0xacef:0x29df55ca
  408d67:	jmp    0x408d04
  408d69:	mov    ?,WORD PTR [ebx-0x22]
  408d6c:	or     ecx,ebx
  408d6e:	aad    0xaa
  408d70:	loop   0x408dc7
  408d72:	in     eax,0x8b
  408d74:	xchg   DWORD PTR [ecx+0x200f2b28],edx
  408d7a:	out    0xe7,eax
  408d7c:	test   al,0xf9
  408d7e:	icebp  
  408d7f:	adc    edx,DWORD PTR [edi+0x2ddee40a]
  408d85:	or     eax,0x77160fb3
  408d8a:	mov    eax,DWORD PTR [edi-0x2b]
  408d8d:	inc    eax
  408d8e:	or     al,0xb6
  408d90:	mov    ecx,0xd1bd466b
  408d95:	dec    ebp
  408d96:	ss ds leave 
  408d99:	es mov edi,gs
  408d9c:	sub    BYTE PTR [esi],cl
  408d9e:	xchg   si,ax
  408da0:	ret    0xf67a
  408da3:	rol    al,cl
  408da5:	repnz gs out 0xb,al
  408da9:	inc    edx
  408daa:	fcomp  st(0)
  408dac:	std    
  408dad:	and    al,0x5f
  408daf:	push   edx
  408db0:	icebp  
  408db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408db2:	pop    edi
  408db3:	das    
  408db4:	addr16 jmp 0x408e18
  408db7:	pop    edx
  408db8:	out    0x46,al
  408dba:	mov    edi,?
  408dbc:	dec    eax
  408dbd:	jb     0x408dc3
  408dbf:	push   ds
  408dc0:	add    al,0xd5
  408dc2:	add    bh,BYTE PTR [edx]
  408dc4:	(bad)  
  408dc5:	fcmovnb st,st(5)
  408dc7:	pop    esp
  408dc8:	dec    edi
  408dc9:	inc    esi
  408dca:	stos   DWORD PTR es:[edi],eax
  408dcb:	leave  
  408dcc:	pop    esp
  408dcd:	jp     0x408db5
  408dcf:	pusha  
  408dd0:	(bad)  
  408dd1:	mov    esp,0xd848388d
  408dd6:	add    BYTE PTR [edi+0x17],bh
  408dd9:	cmp    BYTE PTR [edx+0x247a5b49],ah
  408ddf:	iret   
  408de0:	out    0x28,al
  408de2:	leave  
  408de3:	mov    edi,DWORD PTR [ebx+0x3f]
  408de6:	push   ebp
  408de7:	imul   ebp,DWORD PTR [esi+0x30],0xbb3c288a
  408dee:	test   esi,ebx
  408df0:	loope  0x408dfa
  408df2:	push   ds
  408df3:	adc    cl,bl
  408df5:	inc    edx
  408df6:	sahf   
  408df7:	cmp    DWORD PTR [ecx],0xffffffc5
  408dfa:	xor    dl,BYTE PTR [ebx+0x72943e23]
  408e00:	lock test BYTE PTR [esi-0xa044067],bh
  408e07:	sub    DWORD PTR gs:[ecx+0x5a0451d0],ebx
  408e0e:	(bad)  
  408e0f:	(bad)  
  408e10:	in     al,dx
  408e11:	jne    0x408e0d
  408e13:	(bad)  
  408e14:	ins    BYTE PTR es:[edi],dx
  408e15:	cmp    ecx,DWORD PTR [eax]
  408e17:	push   ebx
  408e18:	mov    ds:0xefb3b6df,al
  408e1d:	adc    eax,0x673b9507
  408e22:	ins    DWORD PTR es:[edi],dx
  408e23:	dec    esi
  408e24:	leave  
  408e25:	imul   edx,DWORD PTR [edx-0x6c340528],0x6f
  408e2c:	hlt    
  408e2d:	outs   dx,DWORD PTR ds:[esi]
  408e2e:	sub    ebp,ecx
  408e30:	mov    eax,ds:0xef9097ef
  408e35:	imul   DWORD PTR [ebx-0x580d22e8]
  408e3b:	mov    ebx,0xb281d27b
  408e40:	in     eax,dx
  408e41:	xor    esi,DWORD PTR [edi+0x49]
  408e44:	ins    BYTE PTR es:[edi],dx
  408e45:	rcr    bh,cl
  408e47:	test   al,0x78
  408e49:	icebp  
  408e4a:	sub    eax,0xbd8fc356
  408e4f:	inc    ecx
  408e50:	mov    esp,0x2a384e64
  408e55:	stos   DWORD PTR es:[edi],eax
  408e56:	pop    ds
  408e57:	inc    ecx
  408e58:	inc    ecx
  408e59:	pop    eax
  408e5a:	test   ecx,edi
  408e5c:	loope  0x408e09
  408e5e:	sub    DWORD PTR [edi-0x24],0xfffffffb
  408e62:	aaa    
  408e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e64:	mov    ebx,DWORD PTR [eax+0x11]
  408e67:	in     eax,dx
  408e68:	scas   al,BYTE PTR es:[edi]
  408e69:	je     0x408e53
  408e6b:	data16 neg BYTE PTR [ebp-0x42954a36]
  408e72:	lods   al,BYTE PTR ds:[esi]
  408e73:	and    ebx,esi
  408e75:	in     al,0x4e
  408e77:	push   ds
  408e78:	xchg   esp,eax
  408e79:	adc    eax,0x31
  408e7c:	int3   
  408e7d:	ins    DWORD PTR es:[edi],dx
  408e7e:	sub    dl,BYTE PTR [eax+0x49]
  408e81:	adc    al,0x9
  408e83:	(bad)  
  408e84:	push   esi
  408e85:	jno    0x408e89
  408e87:	ins    DWORD PTR es:[edi],dx
  408e88:	loopne 0x408f05
  408e8a:	xchg   BYTE PTR ds:0x484b2036,dl
  408e90:	daa    
  408e91:	inc    esi
  408e92:	imul   eax,DWORD PTR ds:[edx+0x21],0xffffffc2
  408e97:	xchg   ebx,eax
  408e98:	or     DWORD PTR cs:[esi-0x75],ebp
  408e9c:	pushf  
  408e9d:	cs pop es
  408e9f:	xor    esi,ecx
  408ea1:	iret   
  408ea2:	sub    BYTE PTR [ecx+0x29],0xa2
  408ea6:	je     0x408e35
  408ea8:	nop
  408ea9:	xchg   esp,eax
  408eaa:	push   0xffffff9f
  408eac:	xchg   edi,eax
  408ead:	xor    DWORD PTR [ebx+ecx*2+0x23],0x75
  408eb2:	loop   0x408eb0
  408eb4:	push   ecx
  408eb5:	push   esp
  408eb6:	adc    eax,0xee5e21e3
  408ebb:	fld    TBYTE PTR [esi+0x28]
  408ebe:	pop    ebp
  408ebf:	sbb    dh,BYTE PTR [edx-0x5b]
  408ec2:	jb     0x408eb2
  408ec4:	or     edx,DWORD PTR [edi]
  408ec6:	lock outs dx,DWORD PTR ds:[esi]
  408ec8:	cli    
  408ec9:	clc    
  408eca:	outs   dx,BYTE PTR ds:[esi]
  408ecb:	or     al,0xa3
  408ecd:	jne    0x408f34
  408ecf:	cmp    al,0xa6
  408ed1:	jp     0x408ee1
  408ed3:	mov    edi,0x5864cfa3
  408ed8:	inc    ecx
  408ed9:	(bad)  [eax+0x71]
  408edc:	rcr    DWORD PTR [ebx+0x25d13dd8],1
  408ee2:	mov    eax,ds:0x7dd7649f
  408ee7:	in     eax,dx
  408ee8:	cmp    ch,BYTE PTR [ecx]
  408eea:	or     eax,0xc3338c1c
  408eef:	in     al,0xa5
  408ef1:	cmp    bh,BYTE PTR [edx]
  408ef3:	sub    DWORD PTR [eax-0x28],ecx
  408ef6:	aam    0x9a
  408ef8:	pop    ss
  408ef9:	jge    0x408f20
  408efb:	daa    
  408efc:	aam    0x5
  408efe:	jae    0x408f42
  408f00:	scas   eax,DWORD PTR es:[edi]
  408f01:	mov    eax,ds:0xffd460e6
  408f06:	dec    esi
  408f07:	and    al,0x8c
  408f09:	in     eax,0x71
  408f0b:	push   esi
  408f0c:	das    
  408f0d:	cmp    DWORD PTR [ebp-0x70],eax
  408f10:	mul    BYTE PTR ds:0x54fb5134
  408f16:	imul   esi,DWORD PTR [esp+edi*1-0x7e5872f3],0xc395db17
  408f21:	int3   
  408f22:	std    
  408f23:	push   es
  408f24:	mov    ds:0x86afd83b,eax
  408f29:	out    dx,al
  408f2a:	and    al,0x5c
  408f2c:	dec    edx
  408f2d:	fist   DWORD PTR [edi+0x13]
  408f30:	inc    esp
  408f31:	push   edi
  408f32:	test   al,0x59
  408f34:	popa   
  408f35:	cmc    
  408f36:	shl    BYTE PTR [eax+0x6f],1
  408f39:	ja     0x408f81
  408f3b:	jo     0x408f6c
  408f3d:	adc    BYTE PTR [ebp-0xa],dh
  408f40:	inc    eax
  408f41:	xor    eax,0x1db155f6
  408f46:	adc    esp,esi
  408f48:	sti    
  408f49:	es scas al,BYTE PTR es:[edi]
  408f4b:	mov    bh,0xc
  408f4d:	dec    ecx
  408f4e:	das    
  408f4f:	mov    esi,0xd4a3cc0e
  408f54:	lahf   
  408f55:	sbb    bl,BYTE PTR [ebx]
  408f57:	daa    
  408f58:	xor    ebx,DWORD PTR [ecx-0x3ac1de9e]
  408f5e:	loop   0x408f3d
  408f60:	(bad)  
  408f61:	rcl    DWORD PTR [eax],cl
  408f63:	out    dx,eax
  408f64:	fwait
  408f65:	loop   0x408faa
  408f67:	inc    edi
  408f68:	outs   dx,BYTE PTR ds:[esi]
  408f69:	ins    DWORD PTR es:[edi],dx
  408f6a:	lock leave 
  408f6c:	mov    bl,0x92
  408f6e:	mov    DWORD PTR [ebp-0x7d],esi
  408f71:	repnz push edi
  408f73:	mov    al,ds:0x4962876f
  408f78:	ins    DWORD PTR es:[edi],dx
  408f79:	push   ss
  408f7a:	lahf   
  408f7b:	dec    ebx
  408f7c:	dec    edx
  408f7d:	fmul   DWORD PTR [eax+ebp*4+0x1b]
  408f81:	dec    edx
  408f82:	int    0x8b
  408f84:	xchg   DWORD PTR [ecx-0x52],esi
  408f87:	call   DWORD PTR [eax]
  408f89:	jbe    0x408fca
  408f8b:	mov    bh,BYTE PTR [edi+eax*8]
  408f8e:	pusha  
  408f8f:	and    eax,ecx
  408f91:	mov    eax,ds:0x888f4f54
  408f96:	mov    dh,0xdb
  408f98:	mov    dh,dl
  408f9a:	outs   dx,BYTE PTR ds:[esi]
  408f9b:	xor    DWORD PTR [eax],ecx
  408f9d:	addr16 stc 
  408f9f:	(bad)  
  408fa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa2:	popa   
  408fa3:	stc    
  408fa4:	(bad)  
  408fa5:	dec    esi
  408fa6:	adc    al,0x54
  408fa8:	push   esi
  408fa9:	aaa    
  408faa:	out    0xa9,al
  408fac:	out    dx,eax
  408fad:	mov    esi,0x8a3182d1
  408fb2:	xchg   esi,ecx
  408fb4:	xacquire xchg BYTE PTR [ebp-0x7dbdce5],bh
  408fbb:	ja     0x408f72
  408fbd:	imul   edi,esi,0x5529fac3
  408fc3:	jmp    0x408fcb
  408fc5:	pop    ecx
  408fc6:	and    edx,DWORD PTR [edx-0x1626ce9]
  408fcc:	xlat   BYTE PTR ds:[ebx]
  408fcd:	lock pop ebp
  408fcf:	pop    esp
  408fd0:	xchg   edx,eax
  408fd1:	into   
  408fd2:	xchg   edi,eax
  408fd3:	inc    edx
  408fd4:	adc    esp,DWORD PTR [ebx+esi*8]
  408fd7:	call   0x3d82:0xb37fb099
  408fde:	js     0x409044
  408fe0:	icebp  
  408fe1:	and    eax,0x6b7440ee
  408fe6:	cmp    eax,0xdc1f612f
  408feb:	add    ebp,DWORD PTR [eax+0x35345c5f]
  408ff1:	and    BYTE PTR [ebp-0x40f2afc6],al
  408ff7:	cmp    dl,BYTE PTR [edx+0x14]
  408ffa:	mov    ds:0x8cb719c9,al
  408fff:	xchg   BYTE PTR [edi+0x2a],bl
  409002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409003:	lahf   
  409004:	call   0x6241d109
  409009:	push   ss
  40900a:	(bad)  
  40900c:	daa    
  40900d:	mov    ds:0x2c4ac35a,al
  409012:	stos   BYTE PTR es:[edi],al
  409013:	push   esp
  409014:	sub    eax,0xe0e92e0e
  409019:	les    edi,FWORD PTR [eax-0x10a58d48]
  40901f:	idiv   BYTE PTR [ebp+0x4]
  409022:	sub    cl,BYTE PTR [ecx-0x26]
  409025:	mov    ds:0xfb7a1086,eax
  40902a:	push   cs
  40902b:	sub    dh,0x12
  40902e:	pop    edx
  40902f:	xchg   esi,eax
  409030:	pop    edi
  409031:	jb     0x4090ae
  409033:	sbb    eax,0x582c3731
  409038:	or     BYTE PTR [esi],ch
  40903a:	out    0xb3,eax
  40903c:	push   0x10b89b8e
  409041:	or     BYTE PTR [eax],bh
  409043:	mov    dh,0xdc
  409045:	xchg   BYTE PTR [edx],ch
  409047:	or     ebp,edi
  409049:	outs   dx,DWORD PTR ds:[esi]
  40904a:	or     cl,0xab
  40904d:	mov    bl,0xed
  40904f:	cmc    
  409050:	cs inc edi
  409052:	lods   eax,DWORD PTR ds:[esi]
  409053:	sbb    ebp,DWORD PTR [eax+0x39c2ab1d]
  409059:	(bad)  
  40905a:	clc    
  40905b:	leave  
  40905c:	outs   dx,BYTE PTR ds:[esi]
  40905d:	js     0x40905d
  40905f:	pop    edx
  409060:	lods   al,BYTE PTR ds:[esi]
  409061:	cmp    DWORD PTR [ebx],edi
  409063:	adc    DWORD PTR [edx],0xc584fe86
  409069:	pop    ecx
  40906a:	test   BYTE PTR [ebx+ebx*1],bh
  40906d:	or     BYTE PTR [edi+ecx*1+0x3e],0x79
  409072:	jp     0x4090bf
  409074:	fcom   QWORD PTR [eax]
  409076:	clc    
  409077:	lahf   
  409078:	mov    eax,0xcd4c104d
  40907d:	std    
  40907e:	xor    BYTE PTR [ebx+0x7e],dh
  409081:	adc    ecx,DWORD PTR [edx-0x53cbeea2]
  409087:	aam    0x8
  409089:	stos   DWORD PTR es:[edi],eax
  40908a:	adc    ebx,DWORD PTR [edi]
  40908c:	sbb    eax,0xffffffca
  40908f:	lods   eax,DWORD PTR ds:[esi]
  409090:	xor    ebx,eax
  409092:	fimul  DWORD PTR [ebx]
  409094:	sub    BYTE PTR [ecx-0x2a],al
  409097:	out    0x23,eax
  409099:	cmc    
  40909a:	ror    edi,cl
  40909c:	xor    al,0xbe
  40909e:	scas   al,BYTE PTR es:[edi]
  40909f:	bound  edx,QWORD PTR [ebx]
  4090a1:	dec    ebp
  4090a2:	dec    esi
  4090a3:	test   eax,0x2cc1686e
  4090a8:	dec    eax
  4090a9:	inc    edx
  4090aa:	sbb    eax,0xc55ee76f
  4090af:	aaa    
  4090b0:	adc    ch,dl
  4090b2:	sub    ebx,DWORD PTR [edx]
  4090b4:	dec    edx
  4090b5:	hlt    
  4090b6:	mov    bh,0xbb
  4090b8:	arpl   WORD PTR [ebx-0x19f72c68],bx
  4090be:	not    al
  4090c0:	scas   eax,DWORD PTR es:[edi]
  4090c1:	mov    eax,0x1353e118
  4090c6:	out    0x96,eax
  4090c8:	dec    esi
  4090c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090ca:	xor    eax,0x6e852292
  4090cf:	xor    DWORD PTR [edi],0xffffff99
  4090d2:	pusha  
  4090d3:	mov    WORD PTR [ebx],gs
  4090d5:	das    
  4090d6:	pop    esp
  4090d7:	nop
  4090d8:	aam    0x8f
  4090da:	jl     0x4090ae
  4090dc:	repnz outs dx,BYTE PTR ds:[esi]
  4090de:	push   ebx
  4090df:	xor    BYTE PTR [edx+ebx*8],0x42
  4090e3:	ror    BYTE PTR [edx],0x2
  4090e6:	add    BYTE PTR [esi-0x792e13c],dh
  4090ec:	or     bl,BYTE PTR [ebp-0x33bd0f1]
  4090f2:	idiv   DWORD PTR [ebx-0x26]
  4090f5:	int    0x4e
  4090f7:	clc    
  4090f8:	push   ecx
  4090f9:	retf   
  4090fa:	lods   al,BYTE PTR ds:[esi]
  4090fb:	xor    BYTE PTR [ebp+0x31],bl
  4090fe:	cmp    esp,DWORD PTR [esi-0x3aaa812d]
  409104:	pop    esp
  409105:	jmp    0x5ba4:0x419a1d64
  40910c:	mov    ah,BYTE PTR [edx-0x2ff3c454]
  409112:	dec    ebp
  409113:	and    DWORD PTR [edx],esp
  409115:	jno    0x4090f1
  409117:	(bad)  
  409118:	punpckhdq mm0,QWORD PTR [edi]
  40911b:	mov    ecx,DWORD PTR [esi+0x28]
  40911e:	dec    eax
  40911f:	nop
  409120:	lds    ebp,FWORD PTR [esi]
  409122:	in     eax,dx
  409123:	(bad)  
  409124:	ins    DWORD PTR es:[edi],dx
  409125:	dec    ebx
  409126:	mov    edx,0xb1d2b8f0
  40912b:	xchg   dl,bl
  40912d:	jns    0x4090e2
  40912f:	test   eax,0x59c8209d
  409134:	pop    ebx
  409135:	cmp    dl,BYTE PTR [eax-0x243d730e]
  40913b:	xor    dh,al
  40913d:	aaa    
  40913e:	jmp    0x8cc6:0xdaf039cf
  409145:	pop    esp
  409146:	test   eax,0xe72e573e
  40914b:	inc    edx
  40914c:	mov    ah,0x80
  40914e:	mov    esi,0xb838afb5
  409153:	inc    ecx
  409154:	jae    0x409115
  409156:	inc    eax
  409157:	jecxz  0x4090f4
  409159:	in     al,dx
  40915a:	lock repnz imul ecx,DWORD PTR [edx+0x27cb489c],0xa55d0f29
  409166:	xor    al,0xb2
  409168:	xor    ebp,DWORD PTR [esi-0x28]
  40916b:	dec    edi
  40916c:	js     0x4091da
  40916e:	lods   al,BYTE PTR ds:[esi]
  40916f:	and    al,0xfc
  409171:	das    
  409172:	dec    edi
  409173:	push   es
  409174:	stc    
  409175:	xchg   dh,dl
  409177:	mov    ecx,0x6568d386
  40917c:	jne    0x4091b3
  40917e:	pop    esp
  40917f:	fisttp QWORD PTR [ecx+ebp*8-0x9197a54]
  409186:	std    
  409187:	cs push ebp
  409189:	ja     0x409160
  40918b:	adc    eax,DWORD PTR [edi+0x659f397e]
  409191:	cmp    DWORD PTR [esi+edi*1-0x79],esp
  409195:	(bad)  
  409196:	dec    ebx
  409197:	stos   BYTE PTR es:[edi],al
  409198:	test   BYTE PTR [esi],dh
  40919a:	xor    edi,esp
  40919c:	and    edi,DWORD PTR [eax]
  40919e:	fadd   st(5),st
  4091a0:	ret    
  4091a1:	jbe    0x4091eb
  4091a3:	cmp    BYTE PTR ds:0xed6d2b7f,ch
  4091a9:	movzx  ecx,WORD PTR [ebx+0xfd642c3]
  4091b0:	and    DWORD PTR [edx+0x293b75e1],edx
  4091b6:	test   al,0xca
  4091b8:	xchg   edi,eax
  4091b9:	xchg   esi,eax
  4091ba:	sbb    ah,BYTE PTR [ecx]
  4091bc:	retf   0x68c2
  4091bf:	out    0x80,al
  4091c1:	pop    ds
  4091c2:	dec    ebp
  4091c3:	jp     0x40923b
  4091c5:	lods   al,BYTE PTR ds:[esi]
  4091c6:	fdiv   st,st(0)
  4091c8:	fld    QWORD PTR [edi]
  4091ca:	jmp    0x4091c9
  4091cc:	test   al,0x85
  4091ce:	test   DWORD PTR ds:0xf19e5607,edi
  4091d4:	push   cs
  4091d5:	(bad)  [eax-0x33]
  4091d8:	aam    0x49
  4091da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091db:	retf   0xaa07
  4091de:	mov    bh,bl
  4091e0:	xor    ch,0xbc
  4091e3:	test   BYTE PTR [edi-0x2ef818db],0xf1
  4091ea:	mov    ah,0x72
  4091ec:	mov    ebp,0xa25566d9
  4091f1:	aam    0x13
  4091f3:	sbb    DWORD PTR [ebx+0x7a],ebp
  4091f6:	arpl   WORD PTR [edx+0x296e43df],di
  4091fc:	push   cs
  4091fd:	dec    ebx
  4091fe:	or     BYTE PTR [esi],al
  409200:	cmp    edi,DWORD PTR [eax]
  409202:	sar    esi,1
  409204:	dec    ebx
  409205:	jmp    0x4091e8
  409207:	lea    edi,es:[ebx-0x569607f8]
  40920e:	enter  0xc8e4,0xd1
  409212:	div    DWORD PTR fs:[ebx+ecx*4-0xbf48943]
  40921a:	fild   DWORD PTR [eax]
  40921c:	rol    DWORD PTR [ebp-0x4b],cl
  40921f:	imul   esi,DWORD PTR [ebp+0x2e],0xffffffda
  409223:	add    DWORD PTR [ecx],edi
  409225:	fisub  DWORD PTR [eax+0x3c]
  409228:	mov    eax,ds:0x8dd4a1a9
  40922d:	dec    ebx
  40922e:	imul   ebp,DWORD PTR [ebx+ecx*8-0x3e172969],0x5c
  409236:	pushf  
  409237:	repz scas al,BYTE PTR es:[edi]
  409239:	xor    BYTE PTR [edi+0x6],dl
  40923c:	bound  ebx,QWORD PTR [ebx+0x733183fd]
  409242:	pop    esp
  409243:	or     al,0x75
  409245:	fdiv   DWORD PTR [esi]
  409247:	cmp    al,0x65
  409249:	cmp    eax,esp
  40924b:	daa    
  40924c:	sub    BYTE PTR [edi+0x44],0x86
  409250:	popa   
  409251:	test   DWORD PTR [edi+0x5c58526e],edi
  409257:	arpl   WORD PTR [edx],bx
  409259:	(bad)  
  40925a:	xchg   esi,eax
  40925b:	jl     0x4092a2
  40925d:	pop    ss
  40925e:	and    DWORD PTR [ecx+0x345266fa],0xb94090c5
  409268:	(bad)  
  409269:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40926a:	dec    esp
  40926b:	adc    dl,BYTE PTR [edx+0x6c26ef89]
  409271:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409272:	test   DWORD PTR ds:0x92cc87e7,edx
  409278:	int3   
  409279:	adc    esp,edx
  40927b:	mov    ecx,0x3d94d925
  409280:	sbb    ecx,DWORD PTR [ebx+0x50]
  409283:	mov    bh,0xcf
  409285:	test   bl,dh
  409287:	push   eax
  409288:	xchg   edx,eax
  409289:	fimul  DWORD PTR [esi+0x5fa21c09]
  40928f:	sbb    al,0x4
  409291:	jne    0x409243
  409293:	sbb    al,0xd6
  409295:	pop    eax
  409296:	sub    edi,DWORD PTR [ecx-0x25]
  409299:	pop    esi
  40929a:	nop
  40929b:	push   ebp
  40929c:	fldcw  WORD PTR [ebx]
  40929e:	xor    edx,edi
  4092a0:	or     ah,dh
  4092a2:	jp     0x4092db
  4092a4:	in     al,dx
  4092a5:	xchg   DWORD PTR [eax-0x35],eax
  4092a8:	sbb    BYTE PTR [eax],dh
  4092aa:	fld    QWORD PTR [ecx-0x51]
  4092ad:	data16 jb 0x4092fb
  4092b0:	shl    DWORD PTR [edx+ecx*8-0x3d],1
  4092b4:	inc    edi
  4092b5:	ss fdivrp st(6),st
  4092b8:	(bad)  
  4092b9:	xchg   esp,eax
  4092ba:	and    BYTE PTR [edx+0x69419b66],bl
  4092c0:	jge    0x40925b
  4092c2:	lds    esp,FWORD PTR [ebp-0x1e]
  4092c5:	(bad)  
  4092c6:	into   
  4092c7:	pushf  
  4092c8:	(bad)  
  4092c9:	repz xchg esi,eax
  4092cb:	mov    WORD PTR [ecx],ss
  4092cd:	mov    ecx,0x72f2cb85
  4092d2:	js     0x409268
  4092d4:	data16 adc BYTE PTR [eax+0x3e],ch
  4092d8:	lock mov cl,0xe0
  4092db:	mov    cl,0x64
  4092dd:	loopne 0x40933e
  4092df:	call   0x8904:0x743f8b7b
  4092e6:	fdiv   QWORD PTR [esi-0x55]
  4092e9:	add    ebp,esi
  4092eb:	es mov ch,0x33
  4092ee:	add    BYTE PTR [edi-0x5f],dl
  4092f1:	loope  0x40933a
  4092f3:	mov    ebx,0x7c3045fc
  4092f8:	fnsave [edx-0x5f]
  4092fb:	ins    BYTE PTR es:[edi],dx
  4092fc:	push   ebp
  4092fd:	leave  
  4092fe:	xchg   BYTE PTR [esi+eiz*8+0x2196d4dc],ch
  409305:	or     al,cl
  409307:	mov    bh,0x2
  409309:	pop    ds
  40930a:	sub    DWORD PTR [ecx],ecx
  40930c:	jnp    0x409354
  40930e:	mov    ds:0xfd6aef90,eax
  409313:	icebp  
  409314:	sub    eax,DWORD PTR [ebx]
  409316:	mov    cl,0x2d
  409318:	mov    bl,0x90
  40931a:	sbb    al,ah
  40931c:	retf   0xc722
  40931f:	imul   ebp,edx,0x19f1da0d
  409325:	fcom   DWORD PTR [edx]
  409327:	inc    edx
  409328:	sbb    eax,0x9d653f59
  40932d:	call   0xa055:0x892fe685
  409334:	jge    0x40936e
  409336:	(bad)  
  409337:	mov    bh,0x6c
  409339:	cmp    esp,esp
  40933b:	lock fmulp st(3),st
  40933e:	xchg   ebx,eax
  40933f:	in     eax,dx
  409340:	out    dx,al
  409341:	push   eax
  409342:	and    ah,BYTE PTR [esi-0x6bff3fdf]
  409348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409349:	mov    bl,BYTE PTR [ecx-0x4f]
  40934c:	into   
  40934d:	inc    edi
  40934e:	dec    esp
  40934f:	(bad)  
  409350:	ret    
  409351:	pop    ebx
  409352:	jg     0x4093af
  409354:	ret    
  409355:	pop    ss
  409356:	loop   0x409302
  409358:	push   0xe623adc9
  40935d:	sub    al,0xfe
  40935f:	popa   
  409360:	mov    ds:0xf2015143,eax
  409365:	call   0x9d5c:0x3c463b2
  40936c:	cwde   
  40936d:	out    0xc1,eax
  40936f:	call   0x9a4ac15
  409374:	lahf   
  409375:	mov    cl,BYTE PTR [edx+eiz*4]
  409378:	dec    ebp
  409379:	out    dx,al
  40937a:	pop    esi
  40937b:	sbb    eax,0x6bd264a1
  409380:	scas   eax,DWORD PTR es:[edi]
  409381:	mov    edx,0xf7955fbd
  409386:	cdq    
  409387:	ins    BYTE PTR es:[edi],dx
  409388:	sbb    al,0xa0
  40938a:	into   
  40938b:	lea    edx,[ebx-0x68cefad]
  409391:	mov    ecx,0xed7cd601
  409396:	xor    al,0x72
  409398:	out    dx,al
  409399:	fcomp  DWORD PTR [edx+0x7d]
  40939c:	push   eax
  40939d:	xchg   esi,eax
  40939e:	pusha  
  40939f:	pop    eax
  4093a0:	and    DWORD PTR [ebp+0x33e3feec],esp
  4093a6:	pop    ecx
  4093a7:	stos   DWORD PTR es:[edi],eax
  4093a8:	cld    
  4093a9:	bnd jno 0x4093a4
  4093ac:	mov    edi,0xfe1be4f8
  4093b1:	xor    eax,0xe61997c2
  4093b6:	add    ah,BYTE PTR ds:[ebp-0x6d]
  4093ba:	retf   
  4093bb:	and    ebx,ecx
  4093bd:	cmc    
  4093be:	jb     0x409434
  4093c0:	js     0x40938e
  4093c2:	inc    eax
  4093c3:	cwde   
  4093c4:	rcl    BYTE PTR [ecx+edi*1+0x639e4854],1
  4093cb:	add    esp,edx
  4093cd:	clc    
  4093ce:	xchg   BYTE PTR [ebp+0x6cf78806],ah
  4093d4:	je     0x409429
  4093d6:	dec    edx
  4093d7:	mov    al,0x6d
  4093d9:	jmp    ebx
  4093db:	shl    DWORD PTR [eax-0x1a],cl
  4093de:	pop    esp
  4093df:	(bad)  
  4093e0:	xchg   ebx,eax
  4093e1:	shl    bl,1
  4093e3:	xchg   edx,eax
  4093e4:	add    al,0xe1
  4093e6:	jb     0x40939d
  4093e8:	ror    DWORD PTR [esi+0x24f3ad3f],0x4b
  4093ef:	push   ebp
  4093f0:	mov    edi,0x3355c1b
  4093f5:	dec    edi
  4093f6:	pop    ecx
  4093f7:	or     BYTE PTR [ebx-0x49e2189a],bh
  4093fd:	dec    esi
  4093fe:	cmp    BYTE PTR [edi+0x50],dl
  409401:	ret    0xa3c8
  409404:	xor    al,0x99
  409406:	or     edx,edx
  409408:	and    BYTE PTR [eax],bl
  40940a:	jae    0x40944a
  40940c:	je     0x4093b1
  40940e:	and    al,0xfa
  409410:	mov    ebp,0xe2307d60
  409415:	imul   ebx,DWORD PTR [eax+0x56aad032],0x72d56d42
  40941f:	or     al,0xbe
  409421:	or     DWORD PTR [eax+edx*1],esi
  409424:	pop    ecx
  409425:	inc    DWORD PTR [eax+0x6223fcfa]
  40942b:	jmp    0x3811:0x1c9d9f26
  409432:	(bad)  
  409433:	sbb    ebx,DWORD PTR [ebx+0x41b5dd17]
  409439:	push   ebx
  40943a:	mov    esi,DWORD PTR [esi-0x74]
  40943d:	add    DWORD PTR [esi],ebp
  40943f:	jmp    0x9315:0xbdc6fed8
  409446:	jae    0x4093e2
  409448:	clc    
  409449:	enter  0x2e5e,0x4
  40944d:	scas   eax,DWORD PTR es:[edi]
  40944e:	hlt    
  40944f:	rol    ecx,cl
  409451:	mov    WORD PTR [ebp-0x40521cc0],gs
  409457:	loopne 0x40947e
  409459:	dec    esi
  40945a:	jp     0x40946c
  40945c:	mov    bl,0x10
  40945e:	adc    DWORD PTR [ebx],ebp
  409460:	jl     0x40941b
  409462:	test   al,0xf4
  409464:	movd   DWORD PTR [ebp+0x62407f2a],mm3
  40946b:	add    dh,al
  40946d:	ja     0x4094e4
  40946f:	mov    ds:0xd5eb3e5a,eax
  409474:	ss enter 0xff80,0xa6
  409479:	call   0x2e239812
  40947e:	out    dx,eax
  40947f:	leave  
  409480:	xor    ah,BYTE PTR [ecx+0x8]
  409483:	jbe    0x4094bf
  409485:	or     ah,BYTE PTR [edx+0x1c]
  409488:	push   0x5134ffc4
  40948d:	jl     0x409487
  40948f:	push   ds
  409490:	mov    bh,0xca
  409492:	lock fstp TBYTE PTR [ebx-0x3042f1f8]
  409499:	imul   ebx,DWORD PTR ds:0xcd9e9ed0,0x6f
  4094a0:	xor    dl,BYTE PTR [esi+0x14]
  4094a3:	lock call 0x47b5:0x9f09b843
  4094ab:	mov    ecx,0xa0db275d
  4094b0:	pop    ds
  4094b1:	jl     0x409482
  4094b3:	int    0x8c
  4094b5:	or     ebp,edx
  4094b7:	in     al,dx
  4094b8:	jmp    0xcb72:0xaee89d81
  4094bf:	(bad)  
  4094c0:	sub    DWORD PTR [ebp-0x71ad75c0],ebx
  4094c6:	loope  0x409522
  4094c8:	xlat   BYTE PTR ds:[ebx]
  4094c9:	mov    BYTE PTR ss:[ebx-0x79],ah
  4094cd:	sbb    BYTE PTR [ebx+0x65],dl
  4094d0:	xchg   esi,eax
  4094d1:	cmp    eax,edx
  4094d3:	jle    0x4094ff
  4094d5:	xchg   ebp,eax
  4094d6:	mov    ds:0x4edc686c,eax
  4094db:	dec    ecx
  4094dc:	push   ecx
  4094dd:	jbe    0x409469
  4094df:	xor    eax,esi
  4094e1:	cmc    
  4094e2:	jge    0x4094ba
  4094e4:	dec    ecx
  4094e5:	pop    edi
  4094e6:	imul   edi,DWORD PTR [ebx+0x7f],0xa5c84692
  4094ed:	out    dx,eax
  4094ee:	pop    ebx
  4094ef:	ins    DWORD PTR es:[edi],dx
  4094f0:	jecxz  0x409546
  4094f2:	fwait
  4094f3:	dec    edi
  4094f4:	xor    eax,0x5528d897
  4094f9:	das    
  4094fa:	cmp    eax,0xb5f4db1e
  4094ff:	jle    0x40956f
  409501:	pop    ds
  409502:	pop    es
  409503:	rcl    DWORD PTR [ebx],cl
  409505:	aad    0x42
  409507:	retf   0xa812
  40950a:	fmul   DWORD PTR [edx]
  40950c:	shl    BYTE PTR [esi-0x1f],cl
  40950f:	imul   edi,DWORD PTR [esi-0x2afce407],0x7c
  409516:	xchg   ah,bl
  409518:	es pop edi
  40951a:	in     eax,0xb
  40951c:	inc    edx
  40951d:	call   0x816:0x1c8f772e
  409524:	cmp    BYTE PTR cs:[ebx+0x55284e2b],0x4a
  40952c:	gs int 0xa3
  40952f:	mov    BYTE PTR [edx+0x704d18be],bh
  409535:	stos   DWORD PTR es:[edi],eax
  409536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409537:	les    ebp,FWORD PTR [ebx+0x11b5c82f]
  40953d:	pop    ebp
  40953e:	aam    0x62
  409540:	push   ebx
  409541:	out    dx,eax
  409542:	test   al,0x71
  409544:	stc    
  409545:	out    0x8c,al
  409547:	add    esi,DWORD PTR [eax]
  409549:	es call 0xf636:0x78f02e6d
  409551:	call   0xc369:0xc0ae8efb
  409558:	or     ch,BYTE PTR [ebp+0x368ff882]
  40955e:	adc    BYTE PTR [ecx+ebx*8],0xc5
  409562:	mov    DWORD PTR [ebp+eax*4-0x4],0x6f39b9ed
  40956a:	jae    0x40954d
  40956c:	sbb    eax,0x399a9b37
  409571:	and    al,0xc9
  409573:	jne    0x4095e4
  409575:	outs   dx,DWORD PTR ds:[esi]
  409576:	ins    BYTE PTR es:[edi],dx
  409577:	push   esp
  409578:	dec    eax
  409579:	mov    edx,0xeac38a8e
  40957e:	dec    edx
  40957f:	popa   
  409580:	call   0x87964e3a
  409585:	ins    BYTE PTR es:[edi],dx
  409586:	push   esi
  409587:	into   
  409588:	sbb    al,0xb5
  40958a:	pop    ds
  40958b:	inc    esi
  40958c:	lahf   
  40958d:	sub    ebx,DWORD PTR [eax+0x6b670561]
  409593:	dec    BYTE PTR [ecx-0x4dc8950d]
  409599:	in     eax,dx
  40959a:	iret   
  40959b:	or     al,0x2b
  40959d:	in     eax,dx
  40959e:	push   es
  40959f:	cmp    eax,0x1211361e
  4095a4:	adc    al,0xeb
  4095a6:	in     eax,0x9b
  4095a8:	xchg   BYTE PTR [esp+edx*8+0x3343adb4],dl
  4095af:	dec    ebp
  4095b0:	push   0xffffffcd
  4095b2:	jo     0x40953d
  4095b4:	jg     0x4095a7
  4095b6:	jecxz  0x4095de
  4095b8:	std    
  4095b9:	sub    BYTE PTR [esi-0x39],0xd6
  4095bd:	cwde   
  4095be:	test   eax,0x88379f67
  4095c3:	adc    DWORD PTR [ebx-0x59e005ef],ecx
  4095c9:	mov    ss,WORD PTR [edi]
  4095cb:	sahf   
  4095cc:	cld    
  4095cd:	cdq    
  4095ce:	pop    edi
  4095cf:	mov    esi,0xaeeccc15
  4095d4:	and    al,BYTE PTR [edx+0x13]
  4095d7:	push   esi
  4095d8:	xchg   ebx,eax
  4095d9:	fdiv   DWORD PTR [edx]
  4095db:	xchg   DWORD PTR [ecx],esi
  4095dd:	add    BYTE PTR [edx],al
  4095df:	jo     0x409616
  4095e1:	cmc    
  4095e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095e3:	adc    eax,0xb1194c0d
  4095e8:	adc    BYTE PTR [ecx-0x32111bc4],bh
  4095ee:	aam    0x94
  4095f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095f1:	ins    BYTE PTR es:[edi],dx
  4095f2:	mov    eax,ds:0x54c348f3
  4095f7:	push   ebp
  4095f8:	and    al,0xfe
  4095fa:	add    eax,0x6f3d303b
  4095ff:	dec    eax
  409600:	jl     0x409653
  409602:	xor    DWORD PTR [ebx],edi
  409604:	cmp    BYTE PTR [ebx-0x49],0xb7
  409608:	stos   DWORD PTR es:[edi],eax
  409609:	rcr    BYTE PTR [edi+0x4e],1
  40960c:	mov    ds:0x52710dba,eax
  409611:	femms  
  409613:	daa    
  409614:	fidivr DWORD PTR [edi]
  409616:	add    eax,eax
  409618:	fld    DWORD PTR [edi-0x6cfa8ada]
  40961e:	lahf   
  40961f:	xchg   esp,eax
  409620:	cld    
  409621:	rcr    esp,0x23
  409624:	cmp    BYTE PTR [edi+0x29],ah
  409627:	outs   dx,BYTE PTR ds:[esi]
  409628:	aas    
  409629:	inc    edx
  40962a:	lock int 0xb9
  40962d:	inc    esp
  40962e:	in     al,0x47
  409630:	adc    bl,bl
  409632:	xchg   ecx,eax
  409633:	adc    dh,BYTE PTR [edx]
  409635:	add    DWORD PTR [edi],esi
  409637:	cld    
  409638:	call   FWORD PTR [edi]
  40963a:	mov    cl,0x46
  40963c:	jmp    0xeea6:0x89d6f785
  409643:	mov    dl,0xb8
  409645:	imul   esp,eax,0x61
  409648:	cmp    BYTE PTR [edx+0x757fae1c],dh
  40964e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40964f:	add    ebx,ebp
  409651:	icebp  
  409652:	mov    ebp,0xfe1e6722
  409657:	mov    bh,0x68
  409659:	sbb    dl,BYTE PTR [ebx-0x6a]
  40965c:	fstp   TBYTE PTR [ebx*1+0x3aa9ed3b]
  409663:	dec    edi
  409664:	pop    es
  409665:	pop    edi
  409666:	add    al,0x69
  409668:	stc    
  409669:	std    
  40966a:	xchg   edx,eax
  40966b:	out    0xfb,al
  40966d:	push   ds
  40966e:	xchg   edx,eax
  40966f:	inc    esp
  409670:	mov    dh,0x10
  409672:	es sbb al,bl
  409675:	sahf   
  409676:	ja     0x409692
  409678:	sub    cl,bh
  40967a:	fst    st(7)
  40967c:	fwait
  40967d:	xchg   edx,eax
  40967e:	push   eax
  40967f:	in     eax,dx
  409680:	aas    
  409681:	cmp    DWORD PTR [edi],esi
  409683:	ja     0x40968d
  409685:	push   esp
  409686:	loop   0x409609
  409688:	call   0xba87de0e
  40968d:	push   ecx
  40968e:	cwde   
  40968f:	sub    ebx,DWORD PTR [edi+0x8]
  409692:	das    
  409693:	popa   
  409694:	mov    esi,0x3845affa
  409699:	add    DWORD PTR [edi+ebp*8+0x28],ebx
  40969d:	mov    ebp,0x9e171749
  4096a2:	ins    BYTE PTR es:[edi],dx
  4096a3:	retf   0xba67
  4096a6:	aas    
  4096a7:	ja     0x4096c7
  4096a9:	mov    dl,0xed
  4096ab:	(bad)
  4096af:	aam    0xdd
  4096b1:	xor    DWORD PTR [eax-0x563ca3fb],ebx
  4096b7:	aas    
  4096b8:	cmp    dh,ch
  4096ba:	imul   edi,ebp,0xfffffffb
  4096bd:	push   ebx
  4096be:	mov    eax,0xfc861054
  4096c3:	cmp    esi,eax
  4096c5:	shl    eax,cl
  4096c7:	gs and edi,esp
  4096ca:	(bad)  
  4096cb:	lods   al,BYTE PTR fs:[esi]
  4096cd:	pop    esp
  4096ce:	lds    ebx,FWORD PTR [edx+ebp*2]
  4096d1:	xchg   esp,eax
  4096d2:	mov    ax,0x9797
  4096d6:	ins    BYTE PTR es:[edi],dx
  4096d7:	add    edi,DWORD PTR [ebp-0x1b]
  4096da:	ds sub ebx,ecx
  4096dd:	jo     0x40970c
  4096df:	dec    edi
  4096e0:	inc    esi
  4096e1:	push   0x43ccabda
  4096e6:	push   ebx
  4096e7:	aas    
  4096e8:	push   esi
  4096e9:	mov    al,ds:0xb69b3e25
  4096ee:	mov    DWORD PTR [edi],esp
  4096f0:	adc    esp,edx
  4096f2:	lds    eax,FWORD PTR [ecx-0x78084cd6]
  4096f8:	adc    ebp,DWORD PTR [edi]
  4096fa:	sub    DWORD PTR [esi-0x5a26d320],ebx
  409700:	and    DWORD PTR [edx],edi
  409702:	inc    ecx
  409703:	mov    dl,BYTE PTR [ebx-0x6f]
  409706:	push   ecx
  409707:	ficom  WORD PTR [edx-0x1b327786]
  40970d:	(bad)  
  40970e:	in     eax,0xb7
  409710:	fdivr  DWORD PTR [edi-0x28]
  409713:	and    ah,bl
  409715:	sbb    al,0xde
  409717:	cmc    
  409718:	jne    0x4096b6
  40971a:	pop    esi
  40971b:	das    
  40971c:	xor    al,0xd6
  40971e:	test   BYTE PTR [edx],ch
  409720:	arpl   WORD PTR [ecx],sp
  409722:	gs aas 
  409724:	xchg   esp,eax
  409725:	sub    al,0xa2
  409727:	cdq    
  409728:	sbb    BYTE PTR [ecx-0x51e25f5d],bl
  40972e:	mov    WORD PTR [eax-0x2e],ds
  409731:	add    DWORD PTR [esi],esi
  409733:	enter  0x3ab7,0xf8
  409737:	pop    es
  409738:	rol    BYTE PTR [edi-0x5d],0x19
  40973c:	mov    DWORD PTR [ecx-0x79],eax
  40973f:	push   eax
  409740:	mov    edi,0x8d511ace
  409745:	aaa    
  409746:	mov    ecx,0x30f2210d
  40974b:	lods   al,BYTE PTR ss:[esi]
  40974d:	cmp    DWORD PTR [ebp+edi*8+0x61],edx
  409751:	pop    DWORD PTR [ebp+0x3b]
  409754:	xchg   esi,eax
  409755:	in     eax,dx
  409756:	adc    DWORD PTR [eax-0x1d76f3d0],0xffffffc6
  40975d:	sub    cl,BYTE PTR [edi-0x5564fc39]
  409763:	test   DWORD PTR cs:[edi+0x16],ebp
  409767:	push   eax
  409768:	mov    ds:0x7677fad1,eax
  40976d:	mov    dl,0x4d
  40976f:	mov    cs,WORD PTR [esi+0x1d]
  409772:	pop    ss
  409773:	mov    edi,DWORD PTR [edi-0x19]
  409776:	out    0xea,al
  409778:	jl     0x409772
  40977a:	xchg   ebp,eax
  40977b:	(bad)  
  40977c:	clc    
  40977d:	mul    BYTE PTR [eax]
  40977f:	mov    esi,DWORD PTR [ebx-0x10304fc3]
  409785:	dec    eax
  409786:	add    al,0x26
  409788:	shl    DWORD PTR [ecx-0x67],1
  40978b:	loopne 0x4097ed
  40978d:	(bad)  
  40978e:	and    DWORD PTR [ecx],edx
  409790:	leave  
  409791:	(bad)  
  409793:	nop
  409794:	and    DWORD PTR [ecx+0x645addec],edi
  40979a:	lods   eax,DWORD PTR ds:[esi]
  40979b:	sub    DWORD PTR [ecx-0x47],ebp
  40979e:	inc    ebp
  40979f:	jo     0x40974d
  4097a1:	push   ecx
  4097a2:	shr    dh,1
  4097a4:	out    0xbb,al
  4097a6:	out    dx,eax
  4097a7:	test   eax,0x47b3453f
  4097ac:	call   0xd7bc:0x54fd36d2
  4097b3:	ret    
  4097b4:	scas   eax,DWORD PTR es:[edi]
  4097b5:	and    eax,0xe3f9cf15
  4097ba:	loopne 0x4097bb
  4097bc:	cmp    cl,bh
  4097be:	mov    ecx,0x830a5047
  4097c3:	addr16 add al,0x87
  4097c6:	xlat   BYTE PTR ds:[ebx]
  4097c7:	into   
  4097c8:	loopne 0x4097fd
  4097ca:	push   es
  4097cb:	pop    edx
  4097cc:	jle    0x4097c8
  4097ce:	adc    eax,0xb9caa0e8
  4097d3:	xchg   DWORD PTR [edx-0x640ad4d4],ebp
  4097d9:	adc    edi,edi
  4097db:	aad    0x77
  4097dd:	push   esp
  4097de:	cdq    
  4097df:	jmp    0x5854d683
  4097e4:	cmp    eax,0x66a1c862
  4097e9:	(bad)  
  4097eb:	ret    
  4097ec:	je     0x40986d
  4097ee:	fldenv [eax-0x57]
  4097f1:	test   al,0x92
  4097f3:	repz pop ebp
  4097f5:	in     al,dx
  4097f6:	dec    ecx
  4097f7:	jno    0x40978d
  4097f9:	push   eax
  4097fa:	mov    bl,0x33
  4097fc:	je     0x4097ab
  4097fe:	pop    esp
  4097ff:	in     al,dx
  409800:	in     eax,dx
  409801:	xchg   BYTE PTR [ebp+0x75],dl
  409804:	add    dh,BYTE PTR [ebx-0xf1b2d84]
  40980a:	aaa    
  40980b:	bnd jnp 0x409848
  40980e:	outs   dx,DWORD PTR ds:[esi]
  40980f:	mov    ecx,0x556d4cee
  409814:	das    
  409815:	mov    fs,WORD PTR [bx+di]
  409818:	bound  ecx,QWORD PTR [ebp+0x7a58079d]
  40981e:	div    BYTE PTR [edi+0x453ed8f2]
  409824:	cs in  al,0xcb
  409827:	push   ebx
  409828:	add    al,0x31
  40982a:	fidivr WORD PTR [ecx+0x27]
  40982d:	dec    edi
  40982e:	dec    esp
  40982f:	jp     0x409897
  409831:	daa    
  409832:	pop    eax
  409833:	outs   dx,BYTE PTR ds:[esi]
  409834:	sbb    eax,0x4cd2ace4
  409839:	dec    eax
  40983a:	stos   BYTE PTR es:[edi],al
  40983b:	xchg   esp,eax
  40983c:	cld    
  40983d:	das    
  40983e:	(bad)  
  40983f:	mov    ds:0xe1d8cef2,al
  409844:	ss jb  0x409813
  409847:	push   esi
  409848:	into   
  409849:	loopne 0x4098b0
  40984b:	mov    ecx,ebx
  40984d:	adc    al,bh
  40984f:	add    ah,BYTE PTR [ebp+0x3]
  409852:	jnp    0x409875
  409854:	and    edi,DWORD PTR [ebx]
  409856:	dec    ebx
  409857:	mov    DWORD PTR [ebx+0x2d],esi
  40985a:	sbb    al,0x16
  40985c:	dec    esi
  40985d:	push   cs
  40985e:	pop    esp
  40985f:	loop   0x409894
  409861:	ins    DWORD PTR es:[edi],dx
  409862:	xchg   BYTE PTR cs:[ebx],bl
  409865:	aam    0x9b
  409867:	(bad)  
  409868:	outs   dx,DWORD PTR ds:[esi]
  409869:	jmp    0x4098d3
  40986b:	cdq    
  40986c:	fst    QWORD PTR [edi+0x1c]
  40986f:	add    DWORD PTR [ecx],esi
  409871:	fidiv  WORD PTR [edx]
  409873:	test   DWORD PTR [eax+0x4],0x38d04309
  40987a:	sti    
  40987b:	dec    ecx
  40987c:	ins    BYTE PTR es:[edi],dx
  40987d:	mov    eax,ds:0xfe7a9f48
  409882:	aas    
  409883:	mov    BYTE PTR [ecx+eax*1+0x12a9939e],dl
  40988a:	or     al,0x7b
  40988c:	mov    ah,0x56
  40988e:	add    esp,DWORD PTR [ebp+0xe6a425a]
  409894:	sbb    al,bl
  409896:	pop    esp
  409897:	dec    esi
  409898:	adc    DWORD PTR [ecx-0x73],0x47
  40989c:	les    ebx,FWORD PTR [eax+0x377428f9]
  4098a2:	pop    es
  4098a3:	sahf   
  4098a4:	sub    bh,cl
  4098a6:	push   es
  4098a7:	pop    esi
  4098a8:	cwde   
  4098a9:	push   es
  4098aa:	mov    BYTE PTR [ebx-0x54],0xee
  4098ae:	cmc    
  4098af:	cmp    ecx,DWORD PTR [ecx-0x27157960]
  4098b5:	mov    ebp,DWORD PTR [ebp+eax*8+0x2df858de]
  4098bc:	xchg   esi,eax
  4098bd:	data16 sar ah,cl
  4098c0:	mov    al,ds:0x89f7e65d
  4098c5:	dec    BYTE PTR [esi-0x1]
  4098c8:	jae    0x409905
  4098ca:	mov    esp,0x13a0780e
  4098cf:	retf   0x36ec
  4098d2:	mov    esi,0x8149453e
  4098d7:	fldcw  WORD PTR [edi-0x41aa2fbc]
  4098dd:	dec    esp
  4098de:	inc    eax
  4098df:	(bad)  
  4098e0:	fstp   QWORD PTR [ecx-0x748b2630]
  4098e6:	mov    ah,0x4d
  4098e8:	and    al,0x41
  4098ea:	ret    0xd8c3
  4098ed:	test   eax,0x859c9d48
  4098f2:	push   ecx
  4098f3:	mov    cl,0x71
  4098f5:	call   0x31b1:0x30939828
  4098fc:	xor    al,bh
  4098fe:	mov    al,ds:0x3cbe4346
  409903:	daa    
  409904:	inc    esi
  409905:	jg     0x4098c5
  409907:	mov    edx,0x55f64544
  40990c:	mov    WORD PTR [ecx+0x20],fs
  40990f:	mov    DWORD PTR [esi+0x28],0x7abdd915
  409916:	sub    al,0x18
  409918:	add    DWORD PTR [ebp-0x4c],0x407b8af1
  40991f:	pop    ds
  409920:	jle    0x40999c
  409922:	stos   BYTE PTR es:[edi],al
  409923:	and    DWORD PTR [edi+0x51],ecx
  409926:	inc    edi
  409927:	fadd   st,st(3)
  409929:	xchg   ebp,eax
  40992a:	jecxz  0x409936
  40992c:	inc    esi
  40992d:	loopne 0x40993d
  40992f:	neg    DWORD PTR [ebx+0x6439a9f9]
  409935:	rcr    DWORD PTR [ecx],0x1b
  409938:	add    eax,0x10a15838
  40993d:	push   eax
  40993e:	adc    al,0xd0
  409940:	sub    BYTE PTR [esi],0x77
  409943:	stos   DWORD PTR es:[edi],eax
  409944:	rol    BYTE PTR [edi+ebp*2],cl
  409947:	xor    eax,0x1a3c36cb
  40994c:	jg     0x4098df
  40994e:	jl     0x4099bd
  409950:	mov    bl,0x7c
  409952:	lahf   
  409953:	mov    dh,0x92
  409955:	shr    DWORD PTR [edi+0x6f87d684],1
  40995b:	or     BYTE PTR [ecx+0x78b0f2],0x7f
  409962:	inc    ebp
  409963:	ror    BYTE PTR [ecx],1
  409965:	mov    ebx,0xe04ada0e
  40996a:	inc    ecx
  40996b:	xor    edi,esi
  40996d:	bound  ecx,QWORD PTR [edx]
  40996f:	test   BYTE PTR [eax],al
  409971:	pop    es
  409972:	loope  0x409948
  409974:	clc    
  409975:	push   cs
  409976:	xchg   ebx,eax
  409977:	xor    eax,0x2b0ee5a7
  40997c:	fstp   st(4)
  40997e:	mov    dl,BYTE PTR [ebx-0x5f]
  409981:	ins    BYTE PTR es:[edi],dx
  409982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409983:	add    DWORD PTR [edi-0x16],0x46
  409987:	mov    ds:0x82c743e1,eax
  40998c:	mov    ebx,0x22474403
  409991:	js     0x4099c3
  409993:	aad    0x80
  409995:	cmp    al,0x22
  409997:	dec    eax
  409998:	lea    ebx,[si+0x78]
  40999c:	jmp    0x45fb:0xcd4334b4
  4099a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a4:	sub    eax,0x3aeaa556
  4099a9:	call   0x55cb:0x13b165fb
  4099b0:	les    edi,FWORD PTR [edi]
  4099b2:	lahf   
  4099b3:	lds    eax,FWORD PTR [eax+0x92f3d3c]
  4099b9:	mov    ch,0x5f
  4099bb:	jb     0x4099b3
  4099bd:	xor    al,0x7e
  4099bf:	cmp    bl,BYTE PTR [ebp-0x4d]
  4099c2:	test   al,0x71
  4099c4:	ins    DWORD PTR es:[edi],dx
  4099c5:	(bad)  [esi]
  4099c7:	xchg   edx,eax
  4099c8:	mov    esp,eax
  4099ca:	jnp    0x4099ac
  4099cc:	sub    al,0x52
  4099ce:	iret   
  4099cf:	mov    edx,0xa0c77feb
  4099d4:	imul   edx,esp,0x991ff247
  4099da:	lock neg DWORD PTR [esi]
  4099dd:	cmc    
  4099de:	pop    esp
  4099df:	cmp    DWORD PTR [edi+0x958c7e],edi
  4099e5:	mov    ?,WORD PTR [esi+0x5580daa5]
  4099eb:	outs   dx,BYTE PTR ds:[esi]
  4099ec:	bound  ebx,QWORD PTR [ecx-0xe0907ef]
  4099f2:	lock mov esi,DWORD PTR [esi+0x79]
  4099f6:	cmp    DWORD PTR [edi+0x4e],esi
  4099f9:	mov    ss,WORD PTR [ecx-0x1f]
  4099fc:	pop    esp
  4099fd:	xor    dh,BYTE PTR [edx+0x55]
  409a00:	ja     0x409a44
  409a02:	fnstsw ax
  409a04:	(bad)  
  409a05:	rol    BYTE PTR [ecx-0x79c09489],cl
  409a0b:	adc    ch,BYTE PTR [ebx+0x520835df]
  409a11:	(bad)  
  409a12:	push   ds
  409a13:	pop    edx
  409a14:	cmp    al,0xbf
  409a16:	sbb    cl,BYTE PTR [ebx+esi*2-0x7b]
  409a1a:	sub    BYTE PTR [ecx-0x65abb425],0x65
  409a21:	aas    
  409a22:	loop   0x409a91
  409a24:	pop    ds
  409a25:	inc    ecx
  409a26:	cmp    al,0xcf
  409a28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a29:	mov    cl,cl
  409a2b:	mov    esp,?
  409a2d:	(bad)  
  409a2e:	test   BYTE PTR [edx-0x72],cl
  409a31:	cmp    DWORD PTR [ecx],edx
  409a33:	xchg   esi,eax
  409a34:	mov    dl,0x62
  409a36:	mov    dl,0x56
  409a38:	popa   
  409a39:	hlt    
  409a3a:	jnp    0x409a94
  409a3c:	xchg   esp,eax
  409a3d:	loopne 0x4099e2
  409a3f:	fwait
  409a40:	push   ebp
  409a41:	add    edi,DWORD PTR [ebx]
  409a43:	mov    ebp,0xb11242af
  409a48:	jmp    0x409a4d
  409a4a:	inc    edx
  409a4b:	or     esi,DWORD PTR [esp+eax*2-0x3d]
  409a4f:	dec    esi
  409a50:	(bad)
  409a54:	pop    es
  409a55:	xor    eax,0xf722cae7
  409a5a:	retf   0xe1bc
  409a5d:	mov    ch,0xae
  409a5f:	cwde   
  409a60:	imul   esi,ebp,0x5d03792a
  409a66:	pop    ecx
  409a67:	sahf   
  409a68:	jo     0x409a56
  409a6a:	arpl   WORD PTR [esp+ebx*2+0x57],ax
  409a6e:	adc    ecx,eax
  409a70:	aam    0x4a
  409a72:	xchg   edx,eax
  409a73:	sub    ah,BYTE PTR ss:[edx-0x72]
  409a77:	je     0x409ad4
  409a79:	jmp    0x5bb81e97
  409a7e:	sub    DWORD PTR [ebx+0x68],esp
  409a81:	push   edi
  409a82:	dec    esi
  409a83:	scas   al,BYTE PTR es:[edi]
  409a84:	stc    
  409a85:	pop    ds
  409a86:	retf   
  409a87:	xor    eax,0xaead98f2
  409a8c:	xor    BYTE PTR [eax],0x3f
  409a8f:	mov    edi,0xae10633a
  409a94:	pop    eax
  409a95:	and    BYTE PTR [eax+esi*1-0x1c],al
  409a99:	add    al,0x74
  409a9b:	adc    ebp,0xffffffb0
  409a9e:	call   0x9b682ce6
  409aa3:	jmp    0x60f2fce5
  409aa8:	in     eax,0xe6
  409aaa:	sbb    BYTE PTR [edi-0x7e0d4c2c],cl
  409ab0:	sub    eax,0x469ed0fa
  409ab5:	stc    
  409ab6:	in     al,dx
  409ab7:	pop    esp
  409ab8:	push   cs
  409ab9:	pop    esp
  409aba:	xchg   ebx,eax
  409abb:	in     al,0x46
  409abd:	stc    
  409abe:	icebp  
  409abf:	inc    ecx
  409ac0:	jg     0x409b07
  409ac2:	mov    bh,0x43
  409ac4:	(bad)  
  409ac5:	pop    edi
  409ac6:	rcr    BYTE PTR [ebx],0xc4
  409ac9:	and    dh,bh
  409acb:	pop    edi
  409acc:	sar    bl,0x41
  409acf:	xchg   ebx,eax
  409ad0:	sub    ebx,DWORD PTR [ebx-0x7b7fae66]
  409ad6:	cs out dx,al
  409ad8:	or     BYTE PTR [ebx],ch
  409ada:	ins    DWORD PTR es:[edi],dx
  409adb:	sub    al,0x3
  409add:	xchg   edi,eax
  409ade:	mov    edi,0x4e6b4853
  409ae3:	arpl   si,ax
  409ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae6:	(bad)  
  409ae7:	fstp   QWORD PTR [edx-0x3]
  409aea:	in     al,0x5b
  409aec:	add    eax,0xd5825ec1
  409af1:	or     ah,BYTE PTR [ebp+0x5cf18269]
  409af7:	inc    eax
  409af8:	push   eax
  409af9:	dec    ecx
  409afa:	jnp    0x409ad5
  409afc:	popa   
  409afd:	fs pop ebp
  409aff:	sub    DWORD PTR [ebx+ecx*2+0x445eefa8],edi
  409b06:	push   ebp
  409b07:	fnstenv [edi]
  409b09:	repz push ecx
  409b0b:	xchg   esp,eax
  409b0c:	aad    0xd3
  409b0e:	into   
  409b0f:	sti    
  409b10:	add    edx,eax
  409b12:	lea    ebp,[ebp-0x411fc6d2]
  409b18:	or     eax,0xb2915c5e
  409b1d:	sbb    dh,BYTE PTR [ecx]
  409b1f:	add    DWORD PTR [edi+0x641ad68b],edi
  409b25:	pop    ebx
  409b26:	test   al,0x62
  409b28:	iret   
  409b29:	push   esi
  409b2a:	mov    ch,0xe2
  409b2c:	test   eax,0x28a2df89
  409b31:	mov    eax,0x56ed34f6
  409b36:	sbb    edi,0xffffff85
  409b39:	mov    esi,0x35de5500
  409b3e:	fld    st(4)
  409b40:	cmp    esi,DWORD PTR [edx-0x76]
  409b43:	adc    BYTE PTR [esi],bl
  409b45:	mov    esi,0xca46c7d5
  409b4a:	shl    bh,1
  409b4c:	adc    DWORD PTR [edx],ebp
  409b4e:	jbe    0x409bca
  409b50:	dec    esp
  409b51:	aad    0x3e
  409b53:	sbb    eax,0x5abc2264
  409b58:	or     dh,BYTE PTR [ebx-0x5a]
  409b5b:	bound  edi,QWORD PTR [eax]
  409b5d:	dec    eax
  409b5e:	fwait
  409b5f:	push   ds
  409b60:	int    0x55
  409b62:	xchg   edx,eax
  409b63:	xor    DWORD PTR [ecx+0x66],0x59
  409b67:	mov    esp,0xc49eb073
  409b6c:	fs jo  0x409bde
  409b6f:	shl    BYTE PTR [edi-0x33183678],0xcb
  409b76:	mov    al,0x2c
  409b78:	retf   0xc63a
  409b7b:	std    
  409b7c:	int3   
  409b7d:	cmp    eax,0x48de756b
  409b82:	jl     0x409b54
  409b84:	inc    esi
  409b85:	loop   0x409bd9
  409b87:	inc    ebp
  409b88:	call   0xca83:0xd017f58
  409b8f:	inc    esp
  409b90:	(bad)  
  409b91:	das    
  409b92:	push   ebp
  409b93:	xor    bh,BYTE PTR [ebp+0x54d0558f]
  409b99:	imul   ecx,DWORD PTR [ebp+0x76c2eb4a],0x358ab249
  409ba3:	xchg   ebp,eax
  409ba4:	mov    esp,0x5209c87e
  409ba9:	mov    eax,ds:0xe8ca6f0b
  409bae:	inc    esi
  409baf:	fadd   DWORD PTR [esi-0x4384999f]
  409bb5:	int    0xbd
  409bb7:	clc    
  409bb8:	pop    edi
  409bb9:	cmp    ebp,DWORD PTR [ebp+0x31]
  409bbc:	das    
  409bbd:	es nop
  409bbf:	psllw  mm0,mm1
  409bc2:	dec    ebx
  409bc3:	int    0xea
  409bc5:	neg    BYTE PTR [edx]
  409bc7:	jge    0x409c25
  409bc9:	jle    0x409c1c
  409bcb:	popf   
  409bcc:	xchg   esp,eax
  409bcd:	inc    ebp
  409bce:	sub    edx,ecx
  409bd0:	pop    ds
  409bd1:	sbb    al,BYTE PTR [edx-0x4f20e589]
  409bd7:	ins    DWORD PTR es:[edi],dx
  409bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409bd9:	ret    0xd965
  409bdc:	pop    es
  409bdd:	xor    edi,ebp
  409bdf:	stos   BYTE PTR es:[edi],al
  409be0:	mov    ds:0x9cbde12a,eax
  409be5:	fdivrp st(5),st
  409be7:	push   0x59c8aa35
  409bec:	fcomp  DWORD PTR [edi+esi*2]
  409bef:	fimul  DWORD PTR [edi-0xc]
  409bf2:	in     eax,dx
  409bf3:	jmp    0xc4d5:0x93514c14
  409bfa:	popf   
  409bfb:	fdiv   st(1),st
  409bfd:	in     eax,0x9a
  409bff:	pop    ss
  409c00:	jl     0x409c2f
  409c02:	xor    al,BYTE PTR [edi-0x1b]
  409c05:	iret   
  409c06:	pop    ds
  409c07:	fmul   QWORD PTR [edi+0x42]
  409c0a:	jnp    0x409bfe
  409c0c:	stc    
  409c0d:	sub    bh,cl
  409c0f:	inc    esi
  409c10:	lods   eax,DWORD PTR ds:[esi]
  409c11:	and    al,BYTE PTR [edx]
  409c13:	scas   eax,DWORD PTR es:[edi]
  409c14:	pushf  
  409c15:	or     eax,0xd6d048e3
  409c1a:	cwde   
  409c1b:	int3   
  409c1c:	pop    ebp
  409c1d:	xor    esi,DWORD PTR ds:0x4d8f877b
  409c23:	ja     0x409c8f
  409c25:	dec    edx
  409c26:	inc    ecx
  409c27:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409c29:	scas   eax,DWORD PTR es:[edi]
  409c2a:	ret    0x55a6
  409c2d:	aas    
  409c2e:	sub    al,0xdf
  409c30:	mov    WORD PTR [ebx+0x3bdd5fc2],fs
  409c36:	ja     0x409cb6
  409c38:	jp     0x409c57
  409c3a:	push   edi
  409c3b:	push   0x34b6d9d
  409c40:	fisttp WORD PTR [esi]
  409c42:	jne    0x409ca7
  409c44:	(bad)  
  409c45:	mov    al,ds:0xa2b7e8b0
  409c4a:	pop    edi
  409c4b:	mov    eax,0xba5af8ed
  409c50:	xchg   esi,eax
  409c51:	mov    DWORD PTR [eax+0x3a941623],esi
  409c57:	gs aaa 
  409c59:	adc    bh,BYTE PTR [esi+0x5]
  409c5c:	sub    BYTE PTR [edx+0x45],ah
  409c5f:	aad    0xc4
  409c61:	and    eax,0x1b7ebc4c
  409c66:	inc    edx
  409c67:	jo     0x409c50
  409c69:	ins    DWORD PTR es:[edi],dx
  409c6a:	xor    cl,0xe2
  409c6d:	aam    0xae
  409c6f:	jg     0x409c38
  409c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c72:	push   ebp
  409c73:	sbb    BYTE PTR [esp+ebx*8-0x41],ah
  409c77:	and    DWORD PTR [ebp-0x34],eax
  409c7a:	in     al,dx
  409c7b:	jbe    0x409cd1
  409c7d:	ds pop eax
  409c7f:	leave  
  409c80:	push   0xffffff9d
  409c82:	repnz pop edi
  409c84:	dec    esp
  409c85:	add    dl,bh
  409c87:	icebp  
  409c88:	cmp    eax,0x209143ff
  409c8d:	jne    0x409c1b
  409c8f:	inc    esp
  409c90:	ret    
  409c91:	fwait
  409c92:	rcr    BYTE PTR ds:0x72ec00bf,cl
  409c98:	mov    ds,WORD PTR [edx-0x35]
  409c9b:	or     eax,0xf584269f
  409ca0:	cmp    al,BYTE PTR [eax-0x3bfa354f]
  409ca6:	repz push edi
  409ca8:	mov    ds:0x8c6c6551,al
  409cad:	ins    BYTE PTR es:[edi],dx
  409cae:	sub    ebp,DWORD PTR [ebx]
  409cb0:	jmp    0x409ca5
  409cb2:	es pop esi
  409cb4:	in     eax,dx
  409cb5:	mov    dl,0xba
  409cb7:	inc    esi
  409cb8:	inc    esp
  409cb9:	cli    
  409cba:	fwait
  409cbb:	imul   eax,DWORD PTR ds:0x5f28114,0x54
  409cc2:	jle    0x409d1d
  409cc4:	je     0x409cbd
  409cc6:	push   0xffffffeb
  409cc8:	ja     0x409c4a
  409cca:	xor    DWORD PTR [ecx-0x15cea36e],edx
  409cd0:	mov    al,ds:0xcfc88f0
  409cd5:	je     0x409d13
  409cd7:	outs   dx,DWORD PTR ds:[esi]
  409cd8:	mov    ebx,0x6fbe8ea6
  409cdd:	dec    ecx
  409cde:	ror    DWORD PTR [edx+0x2b],0xa1
  409ce2:	adc    edi,edx
  409ce4:	and    eax,0x15b79ed1
  409ce9:	mov    ds:0x27e143f0,al
  409cee:	aaa    
  409cef:	and    bl,BYTE PTR [eax+edx*1-0x20]
  409cf3:	and    eax,0x2b7cbea3
  409cf8:	jmp    0x4702:0xc225c689
  409cff:	enter  0xab5e,0x85
  409d03:	or     ch,al
  409d05:	jp     0x409ce8
  409d07:	test   eax,0x89da17f3
  409d0c:	cmp    eax,0x2662cedc
  409d11:	push   edi
  409d12:	inc    ecx
  409d13:	ret    
  409d14:	mov    edx,0x20c1ea0
  409d19:	mov    al,ds:0x97eb6518
  409d1e:	push   es
  409d1f:	jl     0x409d37
  409d21:	inc    edi
  409d22:	js     0x409da1
  409d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d25:	fs jns 0x409d9a
  409d28:	jmp    0x9ed9:0xc396d5e1
  409d2f:	push   ss
  409d30:	lods   eax,DWORD PTR ds:[esi]
  409d31:	push   0xd0db8cfd
  409d36:	lock cmp esi,DWORD PTR [esi+0x35]
  409d3a:	clc    
  409d3b:	or     BYTE PTR [esi-0x25299d7d],ch
  409d41:	add    DWORD PTR [ebx+0x69],ecx
  409d44:	cdq    
  409d45:	dec    ebx
  409d46:	sbb    DWORD PTR [ebp-0x65],0x3f
  409d4a:	add    ebp,DWORD PTR [edx+0x20]
  409d4d:	cli    
  409d4e:	sahf   
  409d4f:	xchg   ah,dh
  409d51:	scas   al,BYTE PTR es:[edi]
  409d52:	push   ds
  409d53:	mov    dh,0xd3
  409d55:	iret   
  409d56:	xor    ch,0xe1
  409d59:	addr16 popf 
  409d5b:	in     al,dx
  409d5c:	pop    edi
  409d5d:	lods   eax,DWORD PTR ds:[esi]
  409d5e:	repnz sar BYTE PTR [edx-0x440cd7e2],0xc5
  409d66:	(bad)
  409d6a:	and    dh,BYTE PTR ds:0xaa5ab0e3
  409d70:	xor    DWORD PTR [ecx-0x1bbb9428],edi
  409d76:	push   ss
  409d77:	test   al,0x8d
  409d79:	dec    edx
  409d7a:	dec    esi
  409d7b:	cmp    BYTE PTR [esi+0x43af11bd],bh
  409d81:	enter  0xfcb0,0xdf
  409d85:	jnp    0x409dbd
  409d87:	vpunpckhqdq xmm4,xmm7,xmm4
  409d8b:	pop    eax
  409d8c:	fst    QWORD PTR [edi+ebx*1]
  409d8f:	xor    DWORD PTR [edx+0x3a7ac732],esp
  409d95:	adc    BYTE PTR [esi-0x6c],dh
  409d98:	and    eax,0x47943fb9
  409d9d:	mov    bh,0x2c
  409d9f:	call   0xf8b50dcc
  409da4:	js     0x409d85
  409da6:	sbb    BYTE PTR [esi+0x44],ah
  409da9:	jg     0x409d5e
  409dab:	push   0x2e98091
  409db0:	xor    ah,BYTE PTR [eax-0x46]
  409db3:	in     eax,0x41
  409db5:	xchg   edi,eax
  409db6:	jmp    0x2f0c:0xd83dfdbd
  409dbd:	es mov eax,0x24f254f9
  409dc3:	sar    DWORD PTR [ecx-0x15],1
  409dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dc7:	pop    ebp
  409dc8:	es div esp
  409dcb:	jp     0x409e46
  409dcd:	call   DWORD PTR [edx-0x7633eb33]
  409dd3:	inc    ebx
  409dd4:	xlat   BYTE PTR ds:[ebx]
  409dd5:	lods   eax,DWORD PTR ds:[esi]
  409dd6:	test   eax,0xcae2b682
  409ddb:	inc    esi
  409ddc:	pop    ss
  409ddd:	sub    eax,0xb9772d2f
  409de2:	add    edi,DWORD PTR [esi]
  409de4:	add    ebp,DWORD PTR ds:0xf4232581
  409dea:	push   edi
  409deb:	jns    0x409dda
  409ded:	ins    DWORD PTR es:[edi],dx
  409dee:	jmp    0x409e4b
  409df0:	daa    
  409df1:	call   0x28de:0xe2a1e7e0
  409df8:	test   ebx,0x5d6a8554
  409dfe:	icebp  
  409dff:	mov    ecx,0xa8d4be97
  409e04:	shl    BYTE PTR [esi+edi*8],0xb2
  409e08:	(bad)  
  409e09:	sbb    eax,DWORD PTR [eax]
  409e0b:	pop    ebp
  409e0c:	jnp    0x409e76
  409e0e:	loope  0x409d98
  409e10:	jno    0x409da5
  409e12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e13:	hlt    
  409e14:	xchg   esp,eax
  409e15:	cmp    ch,BYTE PTR [ecx]
  409e17:	neg    BYTE PTR [eax]
  409e19:	cmp    eax,0x186e2a29
  409e1e:	in     eax,0xf7
  409e20:	sub    BYTE PTR [esi+0x79],0x63
  409e24:	hlt    
  409e25:	dec    eax
  409e26:	imul   esi,DWORD PTR [esi+0x4d],0x844df8a2
  409e2d:	clc    
  409e2e:	sahf   
  409e2f:	imul   esi,DWORD PTR [edi+0x31472ddf],0x1935f96e
  409e39:	(bad)  
  409e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e3b:	jecxz  0x409ea4
  409e3d:	add    al,0x36
  409e3f:	fist   WORD PTR [edx]
  409e41:	mov    dh,0xe8
  409e43:	mov    esp,0xa4696b52
  409e48:	mov    al,ds:0x5c3ba3af
  409e4d:	jo     0x409df2
  409e4f:	inc    esp
  409e50:	data16 shr bl,0x30
  409e54:	push   es
  409e55:	add    DWORD PTR [edx-0x56],eax
  409e58:	out    0x82,al
  409e5a:	fstp   QWORD PTR [edi-0x75]
  409e5d:	push   edx
  409e5e:	stos   BYTE PTR es:[edi],al
  409e5f:	out    dx,eax
  409e60:	rcl    ch,1
  409e62:	loope  0x409e2f
  409e64:	add    dh,BYTE PTR [eax+0xb]
  409e67:	inc    eax
  409e68:	je     0x409e49
  409e6a:	loop   0x409e23
  409e6c:	jno    0x409eb5
  409e6e:	aam    0x92
  409e70:	or     eax,DWORD PTR [ebp-0x38f000f7]
  409e76:	cmp    BYTE PTR [esi-0x15fe24bd],ch
  409e7c:	mov    ds,esi
  409e7e:	(bad)  
  409e80:	xchg   esp,eax
  409e81:	xchg   DWORD PTR [edi-0x26614a48],edi
  409e87:	ret    0xbfaa
  409e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e8b:	inc    ebx
  409e8c:	sub    al,BYTE PTR [esi]
  409e8e:	(bad)  
  409e90:	mov    ds:0xc3d0a99b,al
  409e95:	adc    eax,0x9dcb9861
  409e9a:	fucom  st(6)
  409e9c:	mov    edx,DWORD PTR [ecx-0x47]
  409e9f:	aaa    
  409ea0:	mov    ds:0xd78249a5,al
  409ea5:	std    
  409ea6:	jmp    0x27aac1f2
  409eab:	aaa    
  409eac:	jmp    0x5abc2048
  409eb1:	push   ds
  409eb2:	ficom  DWORD PTR [edx]
  409eb4:	stos   DWORD PTR es:[edi],eax
  409eb5:	inc    ebp
  409eb6:	fist   WORD PTR [edi]
  409eb8:	jg     0x409edc
  409eba:	cmp    BYTE PTR [edx+0x2d82202a],dh
  409ec0:	lea    edx,[eax+ebp*1+0x1e]
  409ec4:	jns    0x409e94
  409ec6:	mov    cl,0x6c
  409ec8:	jb     0x409ece
  409eca:	fcom   QWORD PTR [eax+0x42]
  409ecd:	xor    DWORD PTR [ebx],ebx
  409ecf:	push   esp
  409ed0:	adc    dl,al
  409ed2:	daa    
  409ed3:	inc    eax
  409ed4:	push   esi
  409ed5:	dec    ebp
  409ed6:	out    dx,eax
  409ed7:	call   0x57e02d30
  409edc:	jo     0x409f03
  409ede:	inc    ecx
  409edf:	jb     0x409eaa
  409ee1:	sbb    dl,dl
  409ee3:	jo     0x409ee3
  409ee5:	push   ss
  409ee6:	sbb    cl,BYTE PTR [edi-0x32afc5b0]
  409eec:	pop    ecx
  409eed:	mov    ds:0x3c53877f,al
  409ef2:	sti    
  409ef3:	out    0x2,eax
  409ef5:	push   ebp
  409ef6:	ret    
  409ef7:	jecxz  0x409f75
  409ef9:	mov    esp,DWORD PTR [edx]
  409efb:	mov    al,0xf9
  409efd:	pop    esp
  409efe:	mov    ecx,0x1b9524ac
  409f03:	sbb    dl,bl
  409f05:	leave  
  409f06:	pushf  
  409f07:	test   BYTE PTR [ebp+0x7b],bh
  409f0a:	or     dh,bl
  409f0c:	rol    eax,0x22
  409f0f:	ror    BYTE PTR [edi-0x79a03c98],1
  409f15:	xchg   DWORD PTR [edx-0x78d97e1c],esi
  409f1b:	mov    dl,0x4d
  409f1d:	xlat   BYTE PTR ds:[ebx]
  409f1e:	dec    ebp
  409f1f:	push   ds
  409f20:	xchg   DWORD PTR [ebx],ecx
  409f22:	(bad)  
  409f23:	xlat   BYTE PTR ds:[ebx]
  409f24:	xor    BYTE PTR [esi+eiz*2],0x3f
  409f28:	inc    ecx
  409f29:	rcl    DWORD PTR [edx+0x383b5c48],1
  409f2f:	cmp    dl,BYTE PTR [edi+0x35fff9fb]
  409f35:	div    esp
  409f37:	push   ds
  409f38:	sub    esp,DWORD PTR ds:0xf71a033
  409f3e:	or     ebp,ecx
  409f40:	daa    
  409f41:	shl    DWORD PTR [edx],1
  409f43:	and    BYTE PTR [ecx+0x2b],0xac
  409f47:	mov    edx,0x8ca0e32c
  409f4c:	pop    esp
  409f4d:	iret   
  409f4e:	add    ecx,DWORD PTR [esi-0x31]
  409f51:	ret    
  409f52:	xchg   esi,eax
  409f53:	jmp    0x16c4b734
  409f58:	cmc    
  409f59:	jo     0x409f2f
  409f5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f5c:	mov    dl,0xd9
  409f5e:	xlat   BYTE PTR ds:[ebx]
  409f5f:	addr16 push edi
  409f61:	out    dx,eax
  409f62:	mov    cl,0x19
  409f64:	jnp    0x409f3c
  409f66:	or     eax,0xda015cdc
  409f6b:	mov    ah,0x24
  409f6d:	jnp    0x409fe5
  409f6f:	pop    edx
  409f70:	retf   
  409f71:	mov    dh,0x64
  409f73:	jno    0x409fce
  409f75:	mov    esi,0xcacbf0a9
  409f7a:	je     0x409f9b
  409f7c:	sbb    esi,esp
  409f7e:	mov    al,BYTE PTR [edi-0xb]
  409f81:	or     eax,0xceb3d260
  409f86:	and    BYTE PTR [ecx-0x634799b4],ch
  409f8c:	mov    ds:0x289d82,al
  409f91:	pop    ecx
  409f92:	(bad)  
  409f93:	cmp    edx,DWORD PTR [ebx+0x75551b02]
  409f99:	or     ch,cl
  409f9b:	outs   dx,DWORD PTR ds:[esi]
  409f9c:	out    dx,eax
  409f9d:	jp     0x409f27
  409f9f:	das    
  409fa0:	inc    ebx
  409fa1:	xlat   BYTE PTR ds:[ebx]
  409fa2:	lea    ecx,[eax-0x54fae610]
  409fa8:	mov    esp,es
  409faa:	mov    ebp,0xcc9435f2
  409faf:	repz push esi
  409fb1:	or     ch,BYTE PTR [edi+0x7775c7d2]
  409fb7:	dec    esp
  409fb8:	pop    es
  409fb9:	test   eax,0x6f874706
  409fbe:	pushf  
  409fbf:	pop    esi
  409fc0:	pop    edx
  409fc1:	push   eax
  409fc2:	leave  
  409fc3:	shl    BYTE PTR [esi+esi*4+0x57],0xd9
  409fc8:	lahf   
  409fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fca:	mov    bl,0x4a
  409fcc:	mov    bl,0xa6
  409fce:	xor    DWORD PTR [edx-0x6f],ecx
  409fd1:	xchg   DWORD PTR [edx-0x7b],ebp
  409fd4:	nop
  409fd5:	push   esp
  409fd6:	jbe    0x40a001
  409fd8:	inc    ebx
  409fd9:	jb     0x40a04f
  409fdb:	int    0xdd
  409fdd:	inc    ecx
  409fde:	mov    ss,WORD PTR [edi-0x32d92a7b]
  409fe4:	icebp  
  409fe5:	xor    ebx,DWORD PTR [ecx+0x41]
  409fe8:	or     esi,DWORD PTR [ebp+0xf65cedc]
  409fee:	cs repz jae 0x409fdf
  409ff2:	mov    ebp,0xc126b346
  409ff7:	sti    
  409ff8:	jmp    0x8572:0x9dffe575
  409fff:	add    al,0xc7
  40a001:	xchg   edi,eax
  40a002:	hlt    
  40a003:	pop    ebp
  40a004:	movnti DWORD PTR [edx],esp
  40a007:	add    al,0x16
  40a009:	mov    ah,0x58
  40a00b:	sbb    DWORD PTR [eax],ebx
  40a00d:	cmp    eax,edx
  40a00f:	xchg   edi,eax
  40a010:	repz adc DWORD PTR [edi+edx*4],esi
  40a014:	sbb    BYTE PTR ds:0xbf00e997,al
  40a01a:	aas    
  40a01b:	cmp    DWORD PTR [edx+0x1e0c64f2],edx
  40a021:	adc    eax,0xc9a6ff57
  40a026:	aas    
  40a027:	imul   esi,DWORD PTR [esi],0x11
  40a02a:	mov    esi,0x1e56dc0d
  40a02f:	leave  
  40a030:	adc    ecx,DWORD PTR ds:0xdf106abc
  40a036:	int    0xb0
  40a038:	aad    0x76
  40a03a:	ror    BYTE PTR ds:0x58b779df,1
  40a040:	lahf   
  40a041:	in     eax,0xeb
  40a043:	mov    dl,ch
  40a045:	pop    ecx
  40a046:	pop    ss
  40a047:	ins    BYTE PTR es:[edi],dx
  40a048:	jecxz  0x40a035
  40a04a:	int    0x46
  40a04c:	hlt    
  40a04d:	inc    edx
  40a04e:	enter  0x30e8,0x1
  40a052:	inc    eax
  40a053:	push   esi
  40a054:	jne    0x40a001
  40a056:	int3   
  40a057:	adc    DWORD PTR [eax+eax*8-0x37],ebx
  40a05b:	fcomp  st(2)
  40a05d:	inc    ebx
  40a05e:	push   cs
  40a05f:	mov    edi,edi
  40a061:	mov    al,ds:0x3e9fbbaf
  40a066:	jno    0x409ff4
  40a068:	or     al,0xb
  40a06a:	out    0xf6,eax
  40a06c:	jle    0x40a0c7
  40a06e:	pusha  
  40a06f:	add    al,0x1b
  40a071:	shl    BYTE PTR [eax+0x77d90d60],1
  40a077:	inc    ebp
  40a078:	add    ecx,DWORD PTR [esi-0x72]
  40a07b:	jmp    DWORD PTR ds:0x73a812ed
  40a081:	je     0x40a08c
  40a083:	xor    BYTE PTR [esi+0x47cc8415],bh
  40a089:	lods   al,BYTE PTR ds:[esi]
  40a08a:	imul   ecx,DWORD PTR ds:0x2b72cc18,0xffffff9f
  40a091:	aaa    
  40a092:	xchg   ecx,eax
  40a093:	inc    edx
  40a094:	les    esi,FWORD PTR [ebp-0x31]
  40a097:	call   FWORD PTR [esi+edx*4]
  40a09a:	ins    DWORD PTR es:[edi],dx
  40a09b:	clc    
  40a09c:	inc    ecx
  40a09d:	sub    eax,0xc4224cc9
  40a0a2:	clc    
  40a0a3:	out    0x5c,al
  40a0a5:	adc    al,0x2a
  40a0a7:	mov    ebx,0x41354a4
  40a0ac:	fdiv   DWORD PTR [ebx-0x4a7f3d90]
  40a0b2:	mov    bl,0x45
  40a0b4:	cwde   
  40a0b5:	fldcw  WORD PTR [ebx-0x6be48008]
  40a0bb:	test   DWORD PTR [esi],ecx
  40a0bd:	xchg   DWORD PTR [esi],ecx
  40a0bf:	pop    eax
  40a0c0:	dec    esi
  40a0c1:	dec    edi
  40a0c2:	pop    ebp
  40a0c3:	retf   
  40a0c4:	sub    DWORD PTR [eax-0x4f],ecx
  40a0c7:	sub    al,0xfc
  40a0c9:	push   edi
  40a0ca:	call   0x9b94:0x75ad3d7b
  40a0d1:	inc    edi
  40a0d2:	sub    esi,DWORD PTR [ecx-0x5fd21ca6]
  40a0d8:	lock push DWORD PTR [edx]
  40a0db:	sub    cl,ch
  40a0dd:	sub    al,0xbc
  40a0df:	adc    al,0xc0
  40a0e1:	ror    DWORD PTR [esi],1
  40a0e3:	fsub   QWORD PTR [edx+0x10]
  40a0e6:	push   0xc8bccb65
  40a0eb:	aaa    
  40a0ec:	mov    bh,0x3b
  40a0ee:	enter  0x5104,0x32
  40a0f2:	test   BYTE PTR [esi+0x27],dl
  40a0f5:	mov    ds:0xa029dec5,al
  40a0fa:	nop
  40a0fb:	push   ss
  40a0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0fd:	mov    cl,0x4b
  40a0ff:	inc    esp
  40a100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a101:	test   BYTE PTR [ebp-0x1b],0xd
  40a105:	push   es
  40a106:	fwait
  40a107:	ret    0xb980
  40a10a:	lods   al,BYTE PTR ds:[esi]
  40a10b:	mov    ch,0x37
  40a10d:	pop    esi
  40a10e:	cmp    edx,ebx
  40a110:	pop    eax
  40a111:	adc    BYTE PTR [esi+0x72],0x53
  40a115:	je     0x40a139
  40a117:	inc    esp
  40a118:	ss call 0xfd349744
  40a11e:	add    BYTE PTR [ebx+0x4c],al
  40a121:	bound  ebp,QWORD PTR [ebx+esi*2+0x12]
  40a125:	scas   eax,DWORD PTR es:[edi]
  40a126:	outs   dx,DWORD PTR ds:[esi]
  40a127:	or     al,BYTE PTR [esi+0x4d]
  40a12a:	retf   
  40a12b:	fwait
  40a12c:	pop    ecx
  40a12d:	mov    ebp,0xb65201b5
  40a132:	jmp    0x9f36cd81
  40a137:	pop    ds
  40a138:	mov    ebx,0x1bf3f01b
  40a13d:	sysexit 
  40a13f:	in     al,dx
  40a140:	repz push edi
  40a142:	icebp  
  40a143:	test   DWORD PTR ss:[ebx-0x34],edx
  40a147:	xchg   esi,eax
  40a148:	jmp    0x72f8:0x2d0a1860
  40a14f:	outs   dx,DWORD PTR ds:[esi]
  40a150:	(bad)  
  40a151:	and    eax,0x4b79b814
  40a156:	xchg   ebx,eax
  40a157:	mov    ds:0xdfeef1e4,al
  40a15c:	loopne 0x40a0f2
  40a15e:	mov    edx,0xbbe05f4d
  40a163:	xor    ebp,DWORD PTR [esi]
  40a165:	in     eax,dx
  40a166:	shl    BYTE PTR [ebx],0x5f
  40a169:	fnstenv [ebp+0x19fc31b7]
  40a16f:	cmp    eax,0xd31b2e01
  40a174:	and    al,0x45
  40a176:	jmp    0xdbe96744
  40a17b:	(bad)  
  40a17c:	xor    ebp,DWORD PTR [ebx]
  40a17e:	mov    ss,WORD PTR [ebp+0x2b625616]
  40a184:	jne    0x40a1f1
  40a186:	nop
  40a187:	sti    
  40a188:	out    0xd8,eax
  40a18a:	pop    edx
  40a18b:	aad    0xb3
  40a18d:	imul   BYTE PTR [eax-0x7a]
  40a190:	cld    
  40a191:	sti    
  40a192:	shl    BYTE PTR [ebx],cl
  40a194:	add    dh,BYTE PTR [eax+0x3af00390]
  40a19a:	clc    
  40a19b:	pushf  
  40a19c:	in     al,dx
  40a19d:	xor    ebp,DWORD PTR [eax-0x7b]
  40a1a0:	lods   eax,DWORD PTR ds:[esi]
  40a1a1:	test   BYTE PTR gs:[ecx],bh
  40a1a4:	out    dx,al
  40a1a5:	dec    ebx
  40a1a6:	shl    DWORD PTR [edx],cl
  40a1a8:	repz xchg ebp,eax
  40a1aa:	nop
  40a1ab:	xchg   edi,eax
  40a1ac:	popf   
  40a1ad:	jecxz  0x40a1de
  40a1af:	femms  
  40a1b1:	inc    ebx
  40a1b2:	xor    ebx,DWORD PTR [esi+0x67]
  40a1b5:	inc    ecx
  40a1b6:	add    al,0x83
  40a1b8:	out    0xb4,al
  40a1ba:	dec    edx
  40a1bb:	js     0x40a1e3
  40a1bd:	loopne 0x40a15c
  40a1bf:	mov    edx,DWORD PTR [eax-0x70]
  40a1c2:	sar    BYTE PTR [ecx+eiz*8-0x74],cl
  40a1c6:	outs   dx,DWORD PTR ds:[esi]
  40a1c7:	fst    DWORD PTR [esi]
  40a1c9:	das    
  40a1ca:	out    0x2,eax
  40a1cc:	xchg   edi,eax
  40a1cd:	push   ds
  40a1ce:	in     eax,0x1c
  40a1d0:	stos   BYTE PTR es:[edi],al
  40a1d1:	scas   al,BYTE PTR es:[edi]
  40a1d2:	push   esi
  40a1d3:	mov    esi,0x20f2636e
  40a1d8:	data16 sub ch,0x2a
  40a1dc:	jbe    0x40a188
  40a1de:	cmp    eax,0x82eb5918
  40a1e3:	or     BYTE PTR [eax+0x2f],al
  40a1e6:	scas   al,BYTE PTR es:[edi]
  40a1e7:	shl    DWORD PTR ss:[eax],0xcd
  40a1eb:	inc    edi
  40a1ec:	hlt    
  40a1ed:	jmp    0x40a218
  40a1ef:	arpl   bp,dx
  40a1f1:	cld    
  40a1f2:	adc    al,0xa2
  40a1f4:	push   ss
  40a1f5:	std    
  40a1f6:	(bad)  
  40a1f7:	push   0xfffffff4
  40a1f9:	mov    ebx,0xacbbe5e5
  40a1fe:	test   BYTE PTR [ebp-0x433e204b],al
  40a204:	mov    edi,0xb4d02cea
  40a209:	test   al,0xdd
  40a20b:	or     ch,BYTE PTR [ebx-0x376069ea]
  40a211:	xlat   BYTE PTR ds:[ebx]
  40a212:	cmp    eax,0x84e1d84a
  40a217:	sbb    DWORD PTR [eax-0x6f7fa655],esi
  40a21d:	fs (bad) 
  40a21f:	scas   al,BYTE PTR es:[edi]
  40a220:	cmp    DWORD PTR [ecx-0x1d],eax
  40a223:	push   ebx
  40a224:	xlat   BYTE PTR ds:[ebx]
  40a225:	in     al,dx
  40a226:	pusha  
  40a227:	fild   QWORD PTR [esi+0x7f]
  40a22a:	cmp    BYTE PTR [ecx-0x1a],0x24
  40a22e:	sbb    ecx,ecx
  40a230:	addr16 loop 0x40a23a
  40a233:	mov    bh,0x9
  40a235:	lock push sp
  40a238:	pop    ecx
  40a239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a23a:	mov    ds:0xff23900f,al
  40a23f:	sub    eax,0x2775f1a4
  40a244:	jmp    0x7be9c243
  40a249:	mov    ebp,0xedf0cb8d
  40a24e:	sbb    DWORD PTR [edi],esi
  40a250:	call   0xc118:0xe58455be
  40a257:	inc    ebp
  40a258:	pusha  
  40a259:	imul   esi,DWORD PTR [edi+0x42],0xd8a2956c
  40a260:	in     al,dx
  40a261:	mov    ebp,0x16281599
  40a266:	jp     0x40a27f
  40a268:	bound  esp,QWORD PTR [esi]
  40a26a:	sbb    BYTE PTR [eax],0x21
  40a26d:	cld    
  40a26e:	cwde   
  40a26f:	test   eax,0xd3047cf3
  40a274:	fsubr  QWORD PTR gs:[esi+0x8]
  40a278:	(bad)  
  40a279:	retf   0x8bd7
  40a27c:	and    al,0xd4
  40a27e:	dec    ecx
  40a27f:	je     0x40a2ea
  40a281:	(bad)  
  40a283:	dec    edx
  40a284:	push   edi
  40a285:	xor    al,0x39
  40a287:	jecxz  0x40a20c
  40a289:	fldcw  WORD PTR es:[edx]
  40a28c:	push   0x26bc2357
  40a291:	mov    ?,WORD PTR [edi-0x769f8c8]
  40a297:	fist   WORD PTR [eax+0x601207c7]
  40a29d:	and    bl,BYTE PTR [eax]
  40a29f:	add    al,0xf0
  40a2a1:	and    al,0x84
  40a2a3:	add    DWORD PTR [edi+0x12],ebx
  40a2a6:	sbb    bh,BYTE PTR [ecx+ebp*1+0x53]
  40a2aa:	mov    esi,0x4b7cad9b
  40a2af:	arpl   si,cx
  40a2b1:	into   
  40a2b2:	fdivr  QWORD PTR cs:[edi-0xebca094]
  40a2b9:	mov    eax,ds:0x14d51741
  40a2be:	cmovne esi,DWORD PTR [esi+0x61c18dbb]
  40a2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c6:	mov    ch,0x45
  40a2c8:	fsub   DWORD PTR [esi+0x5d35bb76]
  40a2ce:	out    dx,eax
  40a2cf:	mov    al,0xe8
  40a2d1:	loop   0x40a28c
  40a2d3:	xchg   edx,eax
  40a2d4:	shl    BYTE PTR [edx-0x19],1
  40a2d7:	jg     0x40a2cc
  40a2d9:	stos   DWORD PTR es:[edi],eax
  40a2da:	outs   dx,DWORD PTR ds:[esi]
  40a2db:	mov    cl,0xc3
  40a2dd:	mov    bl,0x17
  40a2df:	pop    ds
  40a2e0:	mov    DWORD PTR [edi],esp
  40a2e2:	pop    eax
  40a2e3:	lds    ecx,FWORD PTR [ebx-0x7ddfac80]
  40a2e9:	and    al,0xbf
  40a2eb:	add    al,0x3d
  40a2ed:	cs and ch,0x40
  40a2f1:	ins    DWORD PTR es:[edi],dx
  40a2f2:	lods   eax,DWORD PTR ds:[esi]
  40a2f3:	rcr    cl,0x1e
  40a2f6:	jno    0x40a288
  40a2f8:	jecxz  0x40a372
  40a2fa:	mov    ecx,0x118bbf92
  40a2ff:	stos   DWORD PTR es:[edi],eax
  40a300:	add    al,0x60
  40a302:	pushf  
  40a303:	cdq    
  40a304:	or     dh,BYTE PTR [ecx+0x72efb92e]
  40a30a:	add    bl,BYTE PTR [di]
  40a30d:	sbb    al,0x7b
  40a30f:	cmp    BYTE PTR [eax+0x10],ah
  40a312:	(bad)  
  40a314:	aam    0xbd
  40a316:	inc    edx
  40a317:	adc    cl,dl
  40a319:	iret   
  40a31a:	in     al,dx
  40a31b:	je     0x40a321
  40a31d:	mov    esi,0x2f5b1572
  40a322:	mov    eax,0xa5b673a
  40a327:	or     eax,0x74260045
  40a32c:	fwait
  40a32d:	in     al,dx
  40a32e:	cmp    edi,DWORD PTR [ebp+0x4543a764]
  40a334:	jmp    0x40a38d
  40a336:	cmp    cl,BYTE PTR [eax+0x64]
  40a339:	mov    dl,0xd3
  40a33b:	mov    al,ds:0xbc228170
  40a340:	mov    ecx,0x6c9c566
  40a345:	data16 test al,0x93
  40a348:	xor    DWORD PTR [ebp+edx*2+0x6ae5c74f],ebp
  40a34f:	xchg   esp,eax
  40a350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a351:	(bad)  
  40a352:	out    0x36,al
  40a354:	xchg   BYTE PTR [eax+0x2],al
  40a357:	pop    edx
  40a358:	jmp    0x40a35f
  40a35a:	fsubr  QWORD PTR [esi+0x57]
  40a35d:	jecxz  0x40a399
  40a35f:	and    esi,0x1c633759
  40a365:	mov    al,0x42
  40a367:	jne    0x40a3d0
  40a369:	xchg   ecx,eax
  40a36a:	clc    
  40a36b:	sbb    al,dh
  40a36d:	jg     0x40a337
  40a36f:	das    
  40a370:	pop    esi
  40a371:	xchg   ecx,eax
  40a372:	xchg   ebx,eax
  40a373:	push   cs
  40a374:	arpl   WORD PTR [edx+0x79],bx
  40a377:	and    BYTE PTR [bx+si-0x423d],al
  40a37c:	dec    edi
  40a37d:	xchg   esi,eax
  40a37e:	inc    edi
  40a37f:	push   ebx
  40a380:	xor    bh,BYTE PTR [edi-0x30]
  40a383:	in     al,0x52
  40a385:	sbb    BYTE PTR [ecx-0x2],bl
  40a388:	cld    
  40a389:	cmp    DWORD PTR [edx+0x1],esp
  40a38c:	mov    bl,BYTE PTR [edi+ebx*2-0x44364812]
  40a393:	test   DWORD PTR [esi+ebx*2+0x49],eax
  40a397:	out    dx,al
  40a398:	cdq    
  40a399:	int    0xe
  40a39b:	mov    bh,BYTE PTR [ebp-0x49]
  40a39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a39f:	cwde   
  40a3a0:	xchg   edi,eax
  40a3a1:	and    al,0x5f
  40a3a3:	fadd   st,st(6)
  40a3a5:	cli    
  40a3a6:	mov    ah,0x5
  40a3a8:	imul   BYTE PTR ss:[ebx+edx*1+0x57]
  40a3ad:	add    ah,BYTE PTR [ebp+0x55d3f3da]
  40a3b3:	test   BYTE PTR [eax-0x1b0a0e6],dl
  40a3b9:	and    edi,DWORD PTR [edi+0x4ef936a4]
  40a3bf:	cmp    ecx,DWORD PTR [edi-0x72]
  40a3c2:	fs mov al,0x46
  40a3c5:	out    dx,al
  40a3c6:	das    
  40a3c7:	sbb    BYTE PTR [esi-0x2c],dh
  40a3ca:	mov    bl,0x33
  40a3cc:	jns    0x40a3e3
  40a3ce:	fldenv [edi]
  40a3d0:	pop    eax
  40a3d1:	sar    BYTE PTR [ecx],1
  40a3d3:	loope  0x40a39d
  40a3d5:	rol    BYTE PTR [eax],cl
  40a3d7:	mov    DWORD PTR [ecx-0x38e159bd],edi
  40a3dd:	push   es
  40a3de:	push   0xffffffb1
  40a3e0:	stc    
  40a3e1:	inc    edx
  40a3e2:	mov    ebp,0xb43a1522
  40a3e7:	(bad)  
  40a3e8:	fmulp  st(2),st
  40a3ea:	jno    0x40a436
  40a3ec:	sbb    bh,BYTE PTR [ecx]
  40a3ee:	addr16 push ebx
  40a3f0:	lods   eax,DWORD PTR ds:[esi]
  40a3f1:	(bad)  
  40a3f3:	xchg   ebx,eax
  40a3f4:	scas   eax,DWORD PTR es:[edi]
  40a3f5:	or     dh,BYTE PTR [eax-0x46e9a937]
  40a3fb:	popa   
  40a3fc:	push   ecx
  40a3fd:	int3   
  40a3fe:	imul   ecx,DWORD PTR [eax],0x14
  40a401:	mov    edi,ecx
  40a403:	mov    esp,edi
  40a405:	ret    0x7f01
  40a408:	loope  0x40a43c
  40a40a:	in     eax,0x61
  40a40c:	int    0x3d
  40a40e:	es sub bh,0xfa
  40a412:	fsub   QWORD PTR [eax+0x7576f309]
  40a418:	add    al,0xcc
  40a41a:	push   ebx
  40a41b:	sub    bl,BYTE PTR [edx]
  40a41d:	mov    bl,0xce
  40a41f:	mov    fs:0x95bf8970,eax
  40a425:	jl     0x40a3b1
  40a427:	hlt    
  40a428:	fstp   TBYTE PTR [edx-0x73024b2f]
  40a42e:	jle    0x40a3e0
  40a430:	jmp    0x40d:0x10589cd6
  40a437:	les    ecx,FWORD PTR [edx]
  40a439:	(bad)  
  40a43a:	aaa    
  40a43b:	pop    edx
  40a43c:	fadd   DWORD PTR [esi-0x2c0568db]
  40a442:	jae    0x40a499
  40a444:	fwait
  40a445:	out    0x3d,al
  40a447:	pop    ds
  40a448:	pop    ds
  40a449:	jmp    0x64c242ab
  40a44e:	aas    
  40a44f:	sub    DWORD PTR [ecx+0x6b],esp
  40a452:	mov    esp,ebp
  40a454:	rol    edx,0xb5
  40a457:	cmp    DWORD PTR [esi-0x638aa2e7],edi
  40a45d:	std    
  40a45e:	sahf   
  40a45f:	cwde   
  40a460:	xlat   BYTE PTR ds:[ebx]
  40a461:	sub    ebx,DWORD PTR [ecx]
  40a463:	inc    eax
  40a464:	mov    WORD PTR [esi-0x7e],fs
  40a467:	cmp    al,0xe
  40a469:	cmp    al,0x21
  40a46b:	xchg   esp,eax
  40a46c:	pusha  
  40a46d:	lods   eax,DWORD PTR ss:[esi]
  40a46f:	popf   
  40a470:	fbstp  TBYTE PTR [ecx+0x678e7077]
  40a476:	and    al,0x1b
  40a478:	sbb    eax,0xd01ec22f
  40a47d:	jno    0x40a488
  40a47f:	ss pop es
  40a481:	and    ch,BYTE PTR [edx-0x27]
  40a484:	sub    edi,DWORD PTR [ebx-0x38]
  40a487:	xor    ah,bl
  40a489:	mov    ds:0x3384e9e5,al
  40a48e:	mov    ebp,0x8b91c7fa
  40a493:	xchg   ebp,eax
  40a494:	mov    dl,0x56
  40a496:	test   al,0xbc
  40a498:	xchg   DWORD PTR [ebp+0x61a252ea],esp
  40a49e:	loop   0x40a4a7
  40a4a0:	in     eax,0x9a
  40a4a2:	es jne 0x40a4e2
  40a4a5:	(bad)
  40a4a8:	cmp    ah,bh
  40a4aa:	dec    esp
  40a4ab:	mov    esp,0xa77d51de
  40a4b0:	xchg   ecx,eax
  40a4b1:	xor    esp,esi
  40a4b3:	test   esp,esp
  40a4b5:	jmp    0x2267:0x7c6aa91f
  40a4bc:	xchg   ecx,eax
  40a4bd:	xor    eax,DWORD PTR [edi-0x14a64b0e]
  40a4c3:	ss xchg ecx,eax
  40a4c5:	xchg   ch,bh
  40a4c7:	jo     0x40a4c9
  40a4c9:	push   edi
  40a4ca:	sbb    BYTE PTR [esi+0x54ca0f56],0xe8
  40a4d1:	dec    edx
  40a4d2:	sub    eax,0x37b97ac0
  40a4d7:	cmp    al,0x6e
  40a4d9:	mov    cl,0xab
  40a4db:	mov    ebp,0xb1688622
  40a4e0:	jp     0x40a536
  40a4e2:	(bad)  
  40a4e3:	rol    BYTE PTR [ecx+edi*8+0x27],1
  40a4e7:	pop    edx
  40a4e8:	and    al,0x9a
  40a4ea:	xor    DWORD PTR [edi-0x7fa51859],esp
  40a4f0:	rcl    BYTE PTR [ecx+ebx*4+0x72],1
  40a4f4:	push   ss
  40a4f5:	lahf   
  40a4f6:	mov    ds:0xbb50fa0d,al
  40a4fb:	jne    0x40a4eb
  40a4fd:	mov    edx,DWORD PTR [edx+0xc5af385]
  40a503:	and    edx,DWORD PTR [ebx]
  40a505:	push   ecx
  40a506:	fiadd  DWORD PTR [eiz*2-0x1e9f0bab]
  40a50d:	push   ebp
  40a50e:	push   edi
  40a50f:	ror    BYTE PTR [edi+0xa],cl
  40a512:	xchg   edi,eax
  40a513:	add    eax,0xf9ee604a
  40a518:	mov    esi,?
  40a51a:	xor    DWORD PTR [ebp+0x79],esp
  40a51d:	mov    ecx,0x7518b3df
  40a522:	arpl   WORD PTR [edx-0x5a],cx
  40a525:	ror    DWORD PTR [edx-0x72],0x25
  40a529:	inc    edi
  40a52a:	pushf  
  40a52b:	cld    
  40a52c:	rcr    DWORD PTR [esi],1
  40a52e:	push   esp
  40a52f:	inc    ecx
  40a530:	fs out 0xd1,al
  40a533:	lds    eax,FWORD PTR [eax]
  40a535:	lahf   
  40a536:	dec    edx
  40a537:	or     dh,ah
  40a539:	add    al,0x53
  40a53b:	pop    ebx
  40a53c:	ret    
  40a53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a53f:	sete   BYTE PTR [ebx]
  40a542:	pop    ss
  40a543:	and    edx,DWORD PTR [esi]
  40a545:	inc    edi
  40a546:	push   esp
  40a547:	push   0x50
  40a549:	scas   eax,DWORD PTR es:[edi]
  40a54a:	push   di
  40a54c:	cmp    dl,BYTE PTR [edx+0x12]
  40a54f:	fimul  WORD PTR [ecx-0x11]
  40a552:	ss enter 0xf532,0x58
  40a557:	cdq    
  40a558:	mov    edx,0x5f6fcd2d
  40a55d:	stos   BYTE PTR es:[edi],al
  40a55e:	loop   0x40a581
  40a560:	in     al,dx
  40a561:	sub    dh,BYTE PTR [ebx+eiz*8]
  40a564:	add    BYTE PTR [edi],bl
  40a566:	dec    ecx
  40a567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a568:	stos   DWORD PTR es:[edi],eax
  40a569:	add    dh,BYTE PTR [ecx]
  40a56b:	mov    ah,0x65
  40a56d:	or     ecx,DWORD PTR [ecx+edi*1]
  40a570:	icebp  
  40a571:	out    dx,al
  40a572:	outs   dx,DWORD PTR ds:[esi]
  40a573:	or     esi,0x19
  40a576:	inc    ebp
  40a577:	and    al,0xb5
  40a579:	jmp    edx
  40a57b:	inc    ebp
  40a57c:	push   es
  40a57d:	inc    edi
  40a57e:	ins    BYTE PTR es:[edi],dx
  40a57f:	and    bh,BYTE PTR [eax]
  40a581:	fdivr  st(1),st
  40a583:	sub    esi,DWORD PTR ds:0x16dda4fb
  40a589:	push   esi
  40a58a:	cmp    al,0x70
  40a58c:	sbb    DWORD PTR [edx+esi*2],0x7ae6b3d
  40a593:	jle    0x40a5bf
  40a595:	or     eax,0x18f4c31f
  40a59a:	(bad)  
  40a59b:	mov    esi,0x8fa9de97
  40a5a0:	add    DWORD PTR [edx+0x50f5ca14],eax
  40a5a6:	jecxz  0x40a55b
  40a5a8:	(bad)  
  40a5a9:	dec    ebp
  40a5aa:	xor    esp,DWORD PTR [ecx-0x370edab0]
  40a5b0:	xor    BYTE PTR es:[ebx],dl
  40a5b3:	pushf  
  40a5b4:	pop    es
  40a5b5:	cwde   
  40a5b6:	(bad)  
  40a5b7:	adc    al,BYTE PTR [ecx]
  40a5b9:	xlat   BYTE PTR ds:[ebx]
  40a5ba:	add    DWORD PTR [esi-0x6a],eax
  40a5bd:	popa   
  40a5be:	push   esi
  40a5bf:	and    DWORD PTR [esi+ebp*4],edi
  40a5c2:	pop    ss
  40a5c3:	pop    eax
  40a5c4:	rcl    edx,cl
  40a5c6:	cld    
  40a5c7:	fstp   DWORD PTR [ecx-0x6]
  40a5ca:	fstp   QWORD PTR [ecx-0x72]
  40a5cd:	popf   
  40a5ce:	mov    DWORD PTR [edi+0x286ab2cb],esi
  40a5d4:	xchg   esp,eax
  40a5d5:	shl    BYTE PTR [esi+eax*1+0x67],cl
  40a5d9:	popa   
  40a5da:	out    dx,al
  40a5db:	jmp    0xdd363286
  40a5e0:	mov    eax,ds:0x5b08d52f
  40a5e5:	fwait
  40a5e6:	cwde   
  40a5e7:	add    ebx,edi
  40a5e9:	sub    ch,BYTE PTR [ecx]
  40a5eb:	push   ss
  40a5ec:	jle    0x40a592
  40a5ee:	outs   dx,BYTE PTR ds:[esi]
  40a5ef:	stc    
  40a5f0:	test   DWORD PTR [ebp-0x78e773e6],0x53209e34
  40a5fa:	lods   eax,DWORD PTR ds:[esi]
  40a5fb:	inc    eax
  40a5fc:	aad    0x3c
  40a5fe:	add    ch,ah
  40a600:	dec    ecx
  40a601:	cwde   
  40a602:	xor    al,0x74
  40a604:	(bad)  
  40a605:	aam    0x47
  40a607:	inc    ebx
  40a608:	loop   0x40a5ca
  40a60a:	ja     0x40a617
  40a60c:	(bad)  
  40a60d:	pop    esp
  40a60e:	push   cs
  40a60f:	cmc    
  40a610:	icebp  
  40a611:	mov    edx,DWORD PTR [edi+0x25e18fa9]
  40a617:	push   ebp
  40a618:	adc    DWORD PTR [edi+0x6bd3ae36],0x52a0c1e1
  40a622:	test   al,0x7d
  40a624:	push   edx
  40a625:	ins    BYTE PTR es:[edi],dx
  40a626:	jg     0x40a5ec
  40a628:	outs   dx,BYTE PTR ds:[esi]
  40a629:	pop    edi
  40a62a:	(bad)  
  40a62b:	sbb    dh,BYTE PTR [ebx-0x50a92b51]
  40a631:	daa    
  40a632:	sbb    dl,BYTE PTR [edx+ecx*4+0x76]
  40a636:	fisttp QWORD PTR [eax-0x7be0186a]
  40a63c:	xchg   DWORD PTR [ebx+edx*1+0x49fef0ad],esi
  40a643:	mov    BYTE PTR [ecx-0x7],0x64
  40a647:	jmp    0x76ba32d
  40a64c:	xchg   esp,eax
  40a64d:	inc    ebp
  40a64e:	push   es
  40a64f:	loope  0x40a643
  40a651:	fsubr  DWORD PTR [ecx+0x1bb7c92d]
  40a657:	loope  0x40a690
  40a659:	dec    edi
  40a65a:	push   esp
  40a65b:	push   cs
  40a65c:	pop    edi
  40a65d:	mov    es,WORD PTR [esi]
  40a65f:	jo     0x40a696
  40a661:	in     al,0xef
  40a663:	and    edi,DWORD PTR [esi]
  40a665:	out    0xad,al
  40a667:	mov    WORD PTR [ebx],fs
  40a669:	sbb    al,bh
  40a66b:	fimul  WORD PTR [esi-0x7f]
  40a66e:	push   esi
  40a66f:	(bad)  
  40a670:	xchg   edx,eax
  40a671:	std    
  40a672:	ss jl  0x40a668
  40a675:	outs   dx,DWORD PTR ds:[esi]
  40a676:	sar    dl,cl
  40a678:	aas    
  40a679:	call   0xb26e3fd6
  40a67e:	rcr    BYTE PTR [ebp+0x8],0xc1
  40a682:	fisttp DWORD PTR [eax-0x19]
  40a685:	inc    eax
  40a686:	dec    edi
  40a687:	enter  0xd37f,0xd3
  40a68b:	stos   BYTE PTR es:[edi],al
  40a68c:	pop    esi
  40a68d:	aas    
  40a68e:	push   esp
  40a68f:	adc    DWORD PTR [edx],esp
  40a691:	outs   dx,BYTE PTR ds:[esi]
  40a692:	pop    es
  40a693:	xchg   DWORD PTR ds:0xb588c6a0,esi
  40a699:	mov    eax,0x887c6a90
  40a69e:	daa    
  40a69f:	sbb    bl,ch
  40a6a1:	push   esp
  40a6a2:	mov    cl,0x8b
  40a6a4:	adc    BYTE PTR ds:0xd1019b5d,ch
  40a6aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6ab:	jnp    0x40a6e4
  40a6ad:	push   cs
  40a6ae:	xchg   ebx,eax
  40a6af:	dec    ebx
  40a6b0:	and    bh,BYTE PTR [esi-0x33]
  40a6b3:	sti    
  40a6b4:	stc    
  40a6b5:	mov    ah,0xfa
  40a6b7:	(bad)  
  40a6b8:	(bad)  
  40a6b9:	icebp  
  40a6ba:	jae    0x40a671
  40a6bc:	sbb    BYTE PTR [edi-0xcea8e3b],0xc7
  40a6c3:	mov    esi,DWORD PTR [ecx-0x3b]
  40a6c6:	xor    ch,BYTE PTR [esp+edx*2-0x67babadc]
  40a6cd:	sub    ebp,ebp
  40a6cf:	call   0x15844a33
  40a6d4:	test   al,0x87
  40a6d7:	stos   BYTE PTR es:[edi],al
  40a6d8:	lods   eax,DWORD PTR ds:[esi]
  40a6d9:	das    
  40a6da:	mul    ebp
  40a6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dd:	in     eax,0x68
  40a6df:	outs   dx,DWORD PTR ds:[esi]
  40a6e0:	(bad)  
  40a6e2:	sbb    DWORD PTR [ebp-0x6aa77717],0xfffffffe
  40a6e9:	and    ch,ch
  40a6eb:	cs pop ebp
  40a6ed:	sub    BYTE PTR [ecx],0x61
  40a6f0:	in     eax,0x94
  40a6f2:	pop    edi
  40a6f3:	mov    WORD PTR [esi+eiz*8+0x26],fs
  40a6f7:	add    edi,ecx
  40a6f9:	inc    edi
  40a6fa:	sbb    eax,0xcfe99606
  40a6ff:	ins    BYTE PTR es:[edi],dx
  40a700:	mov    eax,0x4da2ac6e
  40a705:	bound  esi,QWORD PTR [edx]
  40a707:	ss jno 0x40a6bf
  40a70a:	mov    cl,BYTE PTR [ebp+0x53e99409]
  40a710:	push   ebp
  40a711:	sub    ecx,DWORD PTR [ecx]
  40a713:	bound  edx,QWORD PTR [eax+0x5b7a2f95]
  40a719:	icebp  
  40a71a:	dec    ebp
  40a71b:	push   cs
  40a71c:	jge    0x40a76f
  40a71e:	push   ebp
  40a71f:	xchg   ecx,eax
  40a720:	imul   BYTE PTR [edi-0x5f]
  40a723:	and    ecx,ebp
  40a725:	(bad)  
  40a727:	retf   
  40a728:	mov    esi,0x1a52b7cc
  40a72d:	sbb    eax,0xfa440abe
  40a732:	sub    DWORD PTR [edx+ebx*4-0x72d22bc0],edx
  40a739:	out    dx,eax
  40a73a:	sbb    ebx,DWORD PTR ds:[eax]
  40a73d:	aaa    
  40a73e:	lock imul ebp,DWORD PTR [esi+0x22],0x17
  40a743:	jno    0x40a743
  40a745:	and    BYTE PTR [esi-0x1d102b77],0x84
  40a74c:	mov    ecx,0x4a667598
  40a751:	xchg   ebp,eax
  40a752:	push   DWORD PTR [esi+0x45]
  40a755:	push   eax
  40a756:	sub    dl,BYTE PTR [ebx+ecx*8]
  40a759:	mov    eax,ds:0x735a1a7d
  40a75e:	jo     0x40a717
  40a760:	mov    edi,0xcfa148c8
  40a765:	inc    edx
  40a766:	dec    esi
  40a767:	daa    
  40a768:	repz sbb bh,bh
  40a76b:	js     0x40a768
  40a76d:	jbe    0x40a710
  40a76f:	push   cs
  40a770:	inc    ebx
  40a771:	dec    ebx
  40a772:	and    eax,0x6da81258
  40a777:	sub    eax,0xbacf350
  40a77c:	test   al,0x8a
  40a77e:	sub    eax,0xba9c721b
  40a783:	ins    BYTE PTR es:[edi],dx
  40a784:	pop    esp
  40a785:	sbb    dh,dh
  40a787:	mov    dl,0x47
  40a789:	pop    ebx
  40a78a:	mov    ch,0xba
  40a78c:	enter  0x32fd,0x65
  40a790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a791:	dec    edx
  40a792:	outs   dx,DWORD PTR ds:[esi]
  40a793:	adc    eax,0xc4b33883
  40a798:	mov    esi,0x2965f9b6
  40a79d:	fs inc edi
  40a79f:	inc    edi
  40a7a0:	lods   eax,DWORD PTR ds:[esi]
  40a7a1:	(bad)  
  40a7a2:	stc    
  40a7a3:	mov    ds:0xcad8ed1b,al
  40a7a8:	mov    ds:0x18aa6a40,al
  40a7ad:	mov    si,0xeec9
  40a7b1:	add    BYTE PTR [ebp+0x30],0xe4
  40a7b5:	sub    BYTE PTR [edx+ecx*8+0x12e9fdae],0xf3
  40a7bd:	dec    edx
  40a7be:	fcom   DWORD PTR [esi-0x64]
  40a7c1:	and    DWORD PTR [edi-0x630e474d],0x10
  40a7c8:	popa   
  40a7c9:	jo     0x40a777
  40a7cb:	iret   
  40a7cc:	jl     0x40a78d
  40a7ce:	push   ebp
  40a7cf:	pop    edi
  40a7d0:	into   
  40a7d1:	stos   DWORD PTR es:[edi],eax
  40a7d2:	inc    ecx
  40a7d3:	in     eax,dx
  40a7d4:	cmp    edx,DWORD PTR [edx-0x1a]
  40a7d7:	inc    edi
  40a7d8:	in     eax,0xf9
  40a7da:	push   edi
  40a7db:	outs   dx,BYTE PTR ds:[esi]
  40a7dc:	in     al,dx
  40a7dd:	xor    DWORD PTR ds:0x8b286d8c,ecx
  40a7e3:	cli    
  40a7e4:	lock or eax,0xae0a9c5c
  40a7ea:	stos   DWORD PTR es:[edi],eax
  40a7eb:	inc    esp
  40a7ec:	test   eax,0x631608a8
  40a7f1:	pop    ebx
  40a7f2:	in     al,0x83
  40a7f4:	outs   dx,BYTE PTR ds:[esi]
  40a7f5:	pop    eax
  40a7f6:	add    BYTE PTR [ebp+0x4a],ah
  40a7f9:	push   edi
  40a7fa:	jge    0x40a850
  40a7fc:	adc    ah,ah
  40a7fe:	mov    eax,0x895c442f
  40a803:	dec    esi
  40a804:	xor    al,0xac
  40a806:	and    al,0x69
  40a808:	xlat   BYTE PTR ss:[ebx]
  40a80a:	cli    
  40a80b:	and    eax,0x20ba7100
  40a810:	test   BYTE PTR [ebp+0x7c60cc88],bl
  40a816:	je     0x40a80d
  40a818:	xor    eax,0xf46d2255
  40a81d:	out    dx,al
  40a81e:	das    
  40a81f:	loope  0x40a899
  40a821:	gs cmp eax,0x834afff6
  40a827:	jp     0x40a820
  40a829:	mov    eax,0xb5092163
  40a82e:	sub    DWORD PTR [eax],ebx
  40a830:	lods   eax,DWORD PTR ds:[esi]
  40a831:	jp     0x40a7ba
  40a833:	ds hlt 
  40a835:	push   0x41d6408d
  40a83a:	(bad)  
  40a83b:	js     0x40a8b9
  40a83d:	std    
  40a83e:	inc    ecx
  40a83f:	mov    edx,edi
  40a841:	lods   eax,DWORD PTR ds:[esi]
  40a842:	hlt    
  40a843:	stos   DWORD PTR es:[edi],eax
  40a844:	xor    eax,0xd57a01a9
  40a849:	mov    bl,0x48
  40a84b:	add    al,0xed
  40a84d:	je     0x40a86b
  40a84f:	sub    ah,BYTE PTR [ecx]
  40a851:	xlat   BYTE PTR ds:[ebx]
  40a852:	aas    
  40a853:	retf   
  40a854:	iret   
  40a855:	mov    edx,0xe61ad2af
  40a85a:	lea    esi,[esi-0x19]
  40a85d:	xor    BYTE PTR [ebx+0x76],dh
  40a860:	add    BYTE PTR [esi],0xfa
  40a863:	test   DWORD PTR [edi],ebx
  40a865:	mov    eax,0x6a6e3118
  40a86a:	mov    al,0x9c
  40a86c:	imul   esp,DWORD PTR [edi+0x8],0xf756427a
  40a873:	dec    edi
  40a874:	clc    
  40a875:	shl    bh,0xe7
  40a878:	adc    eax,0x8eed0f74
  40a87d:	cli    
  40a87e:	cmp    BYTE PTR [edx+eax*2],ch
  40a881:	xchg   esp,eax
  40a882:	bound  ecx,QWORD PTR [esi+0x25]
  40a885:	jecxz  0x40a833
  40a887:	fld    QWORD PTR [edx+0x2a010c0c]
  40a88d:	or     ebp,ebp
  40a88f:	outs   dx,DWORD PTR ds:[esi]
  40a890:	arpl   WORD PTR [ecx+0x3d69984a],bx
  40a896:	jge    0x40a890
  40a898:	adc    DWORD PTR [ecx],0xffffffcc
  40a89b:	inc    edi
  40a89c:	pop    edi
  40a89d:	jbe    0x40a83a
  40a89f:	retf   0xaa38
  40a8a2:	push   esp
  40a8a3:	mov    eax,0xc091f382
  40a8a8:	xor    eax,0xc0a986a4
  40a8ad:	popa   
  40a8ae:	mov    bh,0x15
  40a8b0:	out    0x11,eax
  40a8b2:	lock sbb BYTE PTR [ebp-0x6d],bl
  40a8b6:	shr    DWORD PTR [esp+edx*4+0x729459cd],0x7e
  40a8be:	xchg   edx,eax
  40a8bf:	push   ebx
  40a8c0:	aas    
  40a8c1:	push   es
  40a8c2:	push   es
  40a8c3:	adc    edi,DWORD PTR [eax+0x4b616747]
  40a8c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8ca:	jmp    0x40a90b
  40a8cc:	test   esp,eax
  40a8ce:	mov    bh,0x91
  40a8d0:	mov    edi,0x13195bab
  40a8d5:	leave  
  40a8d6:	and    dh,BYTE PTR [edi+ebp*2]
  40a8d9:	mov    esi,0xaaac62b1
  40a8de:	ss push edx
  40a8e0:	imul   ecx,DWORD PTR [edi],0x7
  40a8e3:	cmp    eax,0xc4051687
  40a8e8:	xchg   BYTE PTR [ebp-0x1622ee8f],ah
  40a8ee:	ins    DWORD PTR es:[edi],dx
  40a8ef:	mov    esi,0x792edfc8
  40a8f4:	retf   
  40a8f5:	iret   
  40a8f6:	aas    
  40a8f7:	ja     0x40a912
  40a8f9:	out    0xb1,al
  40a8fb:	mov    cl,0x95
  40a8fd:	push   esp
  40a8fe:	mov    edi,0xe5483919
  40a903:	mov    dl,0x25
  40a905:	cdq    
  40a906:	fild   QWORD PTR [ecx+0x5b4ad6d]
  40a90c:	sbb    bl,ah
  40a90e:	or     edx,edx
  40a910:	push   si
  40a912:	(bad)  
  40a913:	in     eax,dx
  40a914:	mov    ds:0x1144d4af,al
  40a919:	sahf   
  40a91a:	out    0x28,al
  40a91c:	rcr    BYTE PTR [edx],0x8
  40a91f:	test   BYTE PTR [edi-0x32],bl
  40a922:	ror    DWORD PTR [edi+0x6ac211f7],0xce
  40a929:	add    eax,0x29b412cf
  40a92e:	pop    ebx
  40a92f:	or     al,0x8
  40a931:	sbb    DWORD PTR [esp],0xb3cff85
  40a938:	and    cl,bh
  40a93a:	jne    0x40a978
  40a93c:	push   ecx
  40a93d:	push   eax
  40a93e:	out    0x58,al
  40a940:	or     DWORD PTR [ecx+0x362f5f12],0xa
  40a947:	push   ss
  40a948:	rcl    BYTE PTR [ebx-0x1e],cl
  40a94b:	push   esi
  40a94c:	inc    ecx
  40a94d:	adc    esp,ebx
  40a94f:	push   es
  40a950:	aam    0xfa
  40a952:	dec    ebp
  40a953:	and    eax,0x791519f4
  40a958:	(bad)  [ecx+ebx*4+0x7515272d]
  40a95f:	push   ss
  40a960:	sbb    al,0x9d
  40a962:	data16 icebp 
  40a964:	mov    bh,0x8a
  40a966:	sub    cl,0x83
  40a969:	inc    edi
  40a96a:	cs sbb ebx,ebx
  40a96d:	jnp    0x40a95c
  40a96f:	(bad)  
  40a971:	dec    ecx
  40a972:	je     0x40a9b2
  40a974:	jns    0x40a9b5
  40a976:	adc    eax,0x4eff71e0
  40a97b:	xchg   ebx,eax
  40a97c:	pushf  
  40a97d:	push   es
  40a97e:	and    al,0xf5
  40a980:	and    eax,0x808b4ea6
  40a985:	pop    eax
  40a986:	ficom  WORD PTR [edi+0x13]
  40a989:	repnz out 0x93,al
  40a98c:	mov    al,0x6a
  40a98e:	xchg   ecx,eax
  40a98f:	lock mov al,ds:0xba4dc6dc
  40a995:	std    
  40a996:	dec    ebx
  40a997:	lea    esp,[ecx]
  40a999:	sahf   
  40a99a:	xor    DWORD PTR [edx-0x2a721f53],0x6d
  40a9a1:	inc    ebp
  40a9a2:	ret    0xfeac
  40a9a5:	cmp    ebx,eax
  40a9a7:	and    cl,BYTE PTR [eax-0x357b9e79]
  40a9ad:	repnz mov ch,0x7
  40a9b0:	cmp    eax,0x759766eb
  40a9b5:	test   eax,0x81366a33
  40a9ba:	out    0x16,eax
  40a9bc:	xchg   ebx,eax
  40a9bd:	rol    al,1
  40a9bf:	pop    ds
  40a9c0:	scas   al,BYTE PTR es:[edi]
  40a9c1:	sbb    edx,DWORD PTR [esi]
  40a9c3:	(bad)  
  40a9c4:	or     eax,0xbdb2751e
  40a9c9:	and    eax,DWORD PTR [esi-0x2003737d]
  40a9cf:	jecxz  0x40a9c3
  40a9d1:	mov    ebx,0xe89850f7
  40a9d6:	ss in  al,0x9
  40a9d9:	aaa    
  40a9da:	test   DWORD PTR [ebp-0x7777b047],ebx
  40a9e0:	js     0x40a96c
  40a9e2:	repnz and al,0x63
  40a9e5:	pusha  
  40a9e6:	jl     0x40a9ca
  40a9e8:	adc    eax,0xcdca3a14
  40a9ed:	sahf   
  40a9ee:	out    dx,al
  40a9ef:	mov    ah,0x6c
  40a9f1:	loop   0x40aa37
  40a9f3:	sbb    DWORD PTR [ebx],ecx
  40a9f5:	dec    edx
  40a9f6:	mov    DWORD PTR [edi-0x95adbc3],edx
  40a9fc:	repz out 0xd9,al
  40a9ff:	outs   dx,DWORD PTR ds:[esi]
  40aa00:	inc    ebp
  40aa01:	adc    eax,0xc7ff2d9a
  40aa06:	pop    ebp
  40aa07:	sub    DWORD PTR [esi+0x138885a6],0xcf069e7d
  40aa11:	in     al,dx
  40aa12:	leave  
  40aa13:	mov    esi,0xd90edd71
  40aa18:	lds    eax,FWORD PTR [ecx-0xe1a8d39]
  40aa1e:	cmp    eax,0x83c075d9
  40aa23:	add    ecx,eax
  40aa25:	popa   
  40aa26:	mov    edi,0x1bb67aee
  40aa2b:	mov    bl,0x61
  40aa2d:	daa    
  40aa2e:	mov    ah,0x7e
  40aa30:	cmp    bl,BYTE PTR [eax+0x74]
  40aa33:	mov    esi,DWORD PTR [esi]
  40aa35:	div    BYTE PTR ds:0x8aa46d6b
  40aa3b:	push   ss
  40aa3c:	mov    ah,0x81
  40aa3e:	push   ss
  40aa3f:	sub    esp,ecx
  40aa41:	jge    0x40aab7
  40aa43:	shl    BYTE PTR [ebx+0x61],1
  40aa46:	push   cs
  40aa47:	mov    ds,eax
  40aa49:	arpl   WORD PTR [edi+0x54e8e52],bp
  40aa4f:	and    bh,BYTE PTR [ebx-0x461bedf5]
  40aa55:	rol    BYTE PTR [esi],1
  40aa57:	push   ss
  40aa58:	rcr    DWORD PTR [edx-0x63],1
  40aa5b:	mov    al,ds:0x6c90c61
  40aa60:	lea    eax,[esi+0x40]
  40aa63:	es push ds
  40aa65:	push   ebp
  40aa66:	or     BYTE PTR ds:0xb71b6e93,bh
  40aa6c:	adc    BYTE PTR [ebp-0x35],cl
  40aa6f:	push   ebx
  40aa70:	dec    esi
  40aa71:	cmp    eax,DWORD PTR [ebx+0x48]
  40aa74:	sub    DWORD PTR [ebx],esi
  40aa76:	loopne 0x40aa91
  40aa78:	stc    
  40aa79:	inc    edx
  40aa7a:	inc    ecx
  40aa7b:	push   DWORD PTR [edx+0x3c]
  40aa7e:	pop    es
  40aa7f:	pushf  
  40aa80:	test   BYTE PTR [edx-0x317841d9],bh
  40aa86:	or     eax,DWORD PTR [eax]
  40aa88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa89:	and    DWORD PTR [edi],0x29f55c88
  40aa8f:	adc    cl,BYTE PTR [esi+0x46]
  40aa92:	int3   
  40aa93:	out    dx,eax
  40aa94:	jae    0x40aac7
  40aa96:	lock cmc 
  40aa98:	icebp  
  40aa99:	fst    st(0)
  40aa9b:	(bad)  
  40aa9c:	js     0x40aac8
  40aa9e:	test   ebp,edx
  40aaa0:	sbb    esi,esp
  40aaa2:	xchg   BYTE PTR [esi+0x42],ah
  40aaa5:	int    0x37
  40aaa7:	sub    ch,BYTE PTR es:[ecx+eax*8]
  40aaab:	outs   dx,DWORD PTR ds:[esi]
  40aaac:	loop   0x40aaf9
  40aaae:	jle    0x40aa72
  40aab0:	leave  
  40aab1:	mov    bh,0x19
  40aab3:	data16 jl 0x40aa4e
  40aab6:	clc    
  40aab7:	test   eax,0xb030ec4d
  40aabc:	call   0x7c44:0x30bd093d
  40aac3:	icebp  
  40aac4:	int3   
  40aac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac6:	pop    ecx
  40aac7:	mov    dl,0xfc
  40aac9:	pushf  
  40aaca:	call   0x5491608e
  40aacf:	js     0x40aa5c
  40aad1:	hlt    
  40aad2:	push   ecx
  40aad3:	pop    bx
  40aad5:	add    eax,0x58465be3
  40aada:	(bad)  
  40aadb:	rcr    BYTE PTR [ebp-0x17cbd6fb],cl
  40aae1:	or     ch,bh
  40aae3:	add    edx,DWORD PTR [esi-0x6151563e]
  40aae9:	add    ecx,DWORD PTR [edi]
  40aaeb:	fcom   st(4)
  40aaed:	mov    ds:0x5595bdd2,al
  40aaf2:	pop    ss
  40aaf3:	pop    edi
  40aaf4:	dec    ebp
  40aaf5:	jb     0x40aadc
  40aaf7:	adc    esi,DWORD PTR [ebx+eax*8]
  40aafa:	or     ch,BYTE PTR [edi+0x5a0effe3]
  40ab00:	in     al,dx
  40ab01:	push   edi
  40ab02:	lea    edi,ds:0x622660d2
  40ab08:	xor    al,al
  40ab0a:	pop    ecx
  40ab0b:	and    BYTE PTR [ecx-0x70454046],ah
  40ab11:	gs xchg cl,cl
  40ab14:	adc    al,0x88
  40ab16:	xor    BYTE PTR [edx],bh
  40ab18:	and    BYTE PTR [edx-0x40],ah
  40ab1b:	mov    DWORD PTR [edi],ebx
  40ab1d:	xchg   ebx,eax
  40ab1e:	cmp    bl,dl
  40ab20:	or     al,0x29
  40ab22:	inc    eax
  40ab23:	into   
  40ab24:	jns    0x40aaf0
  40ab26:	xchg   BYTE PTR [edi+0x74],ch
  40ab29:	imul   ebx,esp,0xfffffff5
  40ab2c:	mov    bl,0xb0
  40ab2e:	dec    BYTE PTR [ebp+0x20a7686e]
  40ab34:	js     0x40aad9
  40ab36:	and    ch,dh
  40ab38:	call   0x64e6a015
  40ab3d:	retf   
  40ab3e:	push   ebp
  40ab3f:	inc    ecx
  40ab40:	jnp    0x40ab61
  40ab42:	hlt    
  40ab43:	loopne 0x40ab0d
  40ab45:	inc    esi
  40ab46:	lds    edi,FWORD PTR [ebx+esi*2]
  40ab49:	(bad)  
  40ab4a:	xchg   esi,eax
  40ab4b:	mov    bh,0x52
  40ab4d:	dec    ebp
  40ab4e:	into   
  40ab4f:	int    0x2e
  40ab51:	addr16 jle 0x40ab1c
  40ab54:	stos   BYTE PTR es:[edi],al
  40ab55:	mov    al,ds:0x511974a
  40ab5a:	pop    ebp
  40ab5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab5c:	cmp    BYTE PTR [edi],0x9
  40ab5f:	push   ds
  40ab60:	ror    bl,0xde
  40ab63:	adc    al,0xcb
  40ab65:	in     eax,dx
  40ab66:	fdiv   DWORD PTR [esi+0x2b898a21]
  40ab6c:	das    
  40ab6d:	jecxz  0x40ab99
  40ab6f:	cld    
  40ab70:	ror    al,0xad
  40ab73:	in     eax,0x32
  40ab75:	ins    DWORD PTR es:[edi],dx
  40ab76:	popf   
  40ab77:	mov    ebp,0xfbd0afb0
  40ab7c:	jle    0x40ab04
  40ab7e:	jnp    0x40ab38
  40ab80:	and    DWORD PTR [ecx],0x6a
  40ab83:	popf   
  40ab84:	adc    DWORD PTR [edi+0x8],edi
  40ab87:	mov    eax,0xc407c4b3
  40ab8c:	rcr    al,1
  40ab8e:	dec    edi
  40ab8f:	test   bh,bl
  40ab91:	mov    esi,DWORD PTR [edi+0x5e048083]
  40ab97:	sub    edx,esp
  40ab99:	inc    edi
  40ab9a:	lock sub eax,0xd8629e3
  40aba0:	fdiv   st(4),st
  40aba2:	mov    dh,BYTE PTR [ebp+0x76]
  40aba5:	aam    0x60
  40aba7:	cmp    eax,0xffd0de21
  40abac:	push   ss
  40abad:	jge    0x40ab4e
  40abaf:	fsub   st,st(2)
  40abb1:	and    esi,edx
  40abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb4:	xchg   esp,eax
  40abb5:	ins    BYTE PTR es:[edi],dx
  40abb6:	mov    ah,BYTE PTR [edx-0x2ead34c9]
  40abbc:	pop    esp
  40abbd:	jp     0x40abdc
  40abbf:	mov    esp,0xc9df0091
  40abc4:	cmp    esp,DWORD PTR [edx+eiz*4+0x19]
  40abc8:	out    0x88,eax
  40abca:	adc    eax,0x8d420fa8
  40abcf:	fcomp  DWORD PTR [eax+ebp*2]
  40abd2:	pop    esi
  40abd3:	leave  
  40abd4:	in     al,0xca
  40abd6:	or     DWORD PTR [ebx],esp
  40abd8:	pop    esi
  40abd9:	in     al,dx
  40abda:	push   ecx
  40abdb:	mov    ds:0x867126f5,al
  40abe0:	xchg   ecx,eax
  40abe1:	int3   
  40abe2:	in     al,0x18
  40abe4:	lea    ecx,[edx+esi*8]
  40abe7:	cmp    DWORD PTR [eax-0x51744dbd],edx
  40abed:	test   dl,0x3d
  40abf0:	test   al,0x8b
  40abf2:	adc    ah,bl
  40abf4:	mov    al,0x87
  40abf6:	push   edx
  40abf7:	daa    
  40abf8:	into   
  40abf9:	shl    esi,cl
  40abfb:	cmp    eax,0x2b954657
  40ac00:	push   edx
  40ac01:	sbb    bh,BYTE PTR [ecx-0x4a]
  40ac04:	jecxz  0x40abb1
  40ac06:	mov    ecx,0x674ab270
  40ac0b:	xchg   ebx,eax
  40ac0c:	outs   dx,BYTE PTR ds:[esi]
  40ac0d:	rcl    bh,0xa3
  40ac10:	push   edi
  40ac11:	arpl   WORD PTR [esi+0x6a019ba4],bp
  40ac17:	xchg   esi,eax
  40ac18:	or     esi,ebp
  40ac1a:	mov    al,0xeb
  40ac1c:	and    ch,BYTE PTR [esi+ebp*4-0x6f]
  40ac20:	sub    BYTE PTR [edi-0x69],0x94
  40ac24:	ins    DWORD PTR es:[edi],dx
  40ac25:	jmp    0x51b2af0d
  40ac2a:	adc    al,0xd
  40ac2c:	or     al,0xf3
  40ac2e:	sbb    eax,0x41a0ab2a
  40ac33:	pop    ecx
  40ac34:	adc    eax,0xa866b7f3
  40ac39:	push   ss
  40ac3a:	pop    eax
  40ac3b:	test   BYTE PTR [ecx],0x2c
  40ac3e:	xchg   esi,eax
  40ac3f:	push   ds
  40ac40:	add    eax,0x466e3bd8
  40ac45:	jno    0x40ac84
  40ac47:	in     al,0xf7
  40ac49:	scas   eax,DWORD PTR es:[edi]
  40ac4a:	mov    edx,DWORD PTR [edx+0x53]
  40ac4d:	fs jnp 0x40ac84
  40ac50:	retf   
  40ac51:	mov    ds:0xd5619281,al
  40ac56:	jmp    0x40ac36
  40ac58:	dec    edx
  40ac59:	sbb    bh,bl
  40ac5b:	mov    esi,0x797e0945
  40ac60:	not    DWORD PTR [esi+0x37689785]
  40ac66:	adc    DWORD PTR [eax-0x34ab84ab],ebp
  40ac6c:	je     0x40ac2d
  40ac6e:	in     al,dx
  40ac6f:	mov    esi,0x670eb97c
  40ac74:	scas   al,BYTE PTR es:[edi]
  40ac75:	lods   eax,DWORD PTR ds:[esi]
  40ac76:	sti    
  40ac77:	jb     0x40acbb
  40ac79:	(bad)  
  40ac7a:	daa    
  40ac7b:	data16 jecxz 0x40acc9
  40ac7e:	repz and BYTE PTR [eax+ebx*8+0x22],0x20
  40ac84:	mov    bh,0x26
  40ac86:	les    esp,FWORD PTR [esi-0x3312be56]
  40ac8c:	jecxz  0x40ac4f
  40ac8e:	popa   
  40ac8f:	adc    DWORD PTR [edi-0x70fb5ee3],edi
  40ac95:	dec    eax
  40ac96:	jo     0x40ac79
  40ac98:	pusha  
  40ac99:	scas   eax,DWORD PTR es:[edi]
  40ac9a:	push   0xa2d1e58f
  40ac9f:	push   es
  40aca0:	inc    esp
  40aca1:	jmp    0x7bd1f665
  40aca6:	fidivr WORD PTR [edx]
  40aca8:	stos   DWORD PTR es:[edi],eax
  40aca9:	pop    ds
  40acaa:	imul   ebp,DWORD PTR [esi+0x54c42b72],0xef5adb37
  40acb4:	loop   0x40ad14
  40acb6:	leave  
  40acb7:	inc    eax
  40acb8:	dec    ecx
  40acb9:	xor    BYTE PTR [edx],dl
  40acbb:	push   eax
  40acbc:	mov    bh,0xad
  40acbe:	adc    DWORD PTR [edi-0x7c10266],eax
  40acc4:	in     eax,0xde
  40acc6:	mov    WORD PTR [edi],?
  40acc8:	int3   
  40acc9:	aad    0x41
  40accb:	mov    WORD PTR ds:0x703e1c98,?
  40acd1:	mov    edi,0xbf82c0d
  40acd6:	xchg   esi,eax
  40acd7:	sbb    DWORD PTR [ebx-0x1b792961],ebx
  40acdd:	or     al,0x7b
  40acdf:	fadd   QWORD PTR [ecx+0x7f28f707]
  40ace5:	lds    ebp,FWORD PTR [edi-0x55]
  40ace8:	or     al,0xe3
  40acea:	sbb    BYTE PTR [edx+0x75],ch
  40aced:	shl    BYTE PTR [esi+0x25],cl
  40acf0:	imul   ecx,DWORD PTR ds:0xf267ef92,0xfffffffb
  40acf7:	dec    ebx
  40acf8:	xor    al,0x5a
  40acfa:	dec    ebp
  40acfb:	xor    DWORD PTR [edx+0x23],esi
  40acfe:	stos   BYTE PTR es:[edi],al
  40acff:	push   ebp
  40ad00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad01:	sub    BYTE PTR [ecx],bh
  40ad03:	mov    ah,0xf
  40ad05:	dec    esp
  40ad06:	cs mov ebp,0x26ad5675
  40ad0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad0d:	imul   ebx,edi,0xfffffffc
  40ad10:	and    al,0x3f
  40ad12:	jnp    0x40ad12
  40ad14:	mov    ah,0x64
  40ad16:	mov    esp,0xfec727b6
  40ad1b:	scas   al,BYTE PTR es:[edi]
  40ad1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1d:	jbe    0x40acc2
  40ad1f:	arpl   si,cx
  40ad21:	mov    edi,esi
  40ad23:	xchg   edx,eax
  40ad24:	inc    edx
  40ad25:	adc    dh,dl
  40ad27:	outs   dx,DWORD PTR ds:[esi]
  40ad28:	ja     0x40acc1
  40ad2a:	std    
  40ad2b:	and    al,0xea
  40ad2d:	cmp    ch,BYTE PTR [esi-0x6a]
  40ad30:	pushf  
  40ad31:	in     eax,0xc7
  40ad33:	pop    es
  40ad34:	mov    eax,ds:0x3219d5b
  40ad39:	xchg   ecx,eax
  40ad3a:	pop    es
  40ad3b:	sbb    al,0xc9
  40ad3d:	outs   dx,DWORD PTR ds:[esi]
  40ad3e:	ss or  al,0xbc
  40ad41:	mov    esi,cs
  40ad43:	outs   dx,BYTE PTR ds:[esi]
  40ad44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad45:	pusha  
  40ad46:	shr    DWORD PTR [edi],0x1e
  40ad49:	outs   dx,BYTE PTR ds:[esi]
  40ad4a:	mul    BYTE PTR [ebx-0xd]
  40ad4d:	and    BYTE PTR [ebx+0x68],al
  40ad50:	call   0xde4d0f81
  40ad55:	call   ecx
  40ad57:	xor    BYTE PTR [esi],ch
  40ad59:	jae    0x40ad32
  40ad5b:	call   0xb17a:0x66eae391
  40ad62:	or     eax,0x82fd4250
  40ad67:	loope  0x40ad19
  40ad69:	retf   0x16d4
  40ad6c:	and    al,0x78
  40ad6e:	dec    esi
  40ad6f:	and    al,0x6d
  40ad71:	push   eax
  40ad72:	rcl    BYTE PTR [eax],cl
  40ad74:	cmp    al,0xc2
  40ad76:	mov    ah,0xe4
  40ad78:	jg     0x40adc6
  40ad7a:	js     0x40ad43
  40ad7c:	mov    DWORD PTR [edi-0x7e2b23ef],edx
  40ad82:	push   esp
  40ad83:	and    al,0x7
  40ad85:	aas    
  40ad86:	mov    ebx,0xc64f3cc1
  40ad8b:	sub    DWORD PTR [ebx+eiz*4+0x7083c3da],edi
  40ad92:	sti    
  40ad93:	cmp    edx,DWORD PTR [ebp-0x80]
  40ad96:	ds push 0x6b
  40ad99:	xor    eax,0xb56e81eb
  40ad9e:	repnz cmp al,0x1f
  40ada1:	rol    DWORD PTR [ecx-0x16156b25],cl
  40ada7:	repnz jmp 0xe2a5:0x298421d9
  40adaf:	sbb    bl,BYTE PTR [ecx+0x27]
  40adb2:	xor    BYTE PTR [ebx+ecx*8-0xc],bh
  40adb6:	push   0x3b
  40adb8:	mov    WORD PTR [eax+ecx*4],?
  40adbb:	cld    
  40adbc:	repnz jecxz 0x40ae20
  40adbf:	dec    ebp
  40adc0:	push   ss
  40adc1:	push   0x89ec62c5
  40adc6:	pop    ebx
  40adc7:	fcomp  QWORD PTR [ebx+0x7]
  40adca:	cdq    
  40adcb:	jne    0x40adb0
  40adcd:	mov    eax,eax
  40adcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add0:	mov    al,0x17
  40add2:	xor    ah,al
  40add4:	jne    0x40ae2c
  40add6:	cmp    al,0xa7
  40add8:	mov    ds:0x6b28ce84,al
  40addd:	rol    DWORD PTR [ecx-0x68],0xa7
  40ade1:	add    DWORD PTR [ebx],ebx
  40ade3:	xchg   edx,eax
  40ade4:	mov    ebx,0x762be8e9
  40ade9:	adc    al,0x6
  40adeb:	leave  
  40adec:	mov    ebp,DWORD PTR [ecx]
  40adee:	fbstp  TBYTE PTR [esi+ebx*8-0x14]
  40adf2:	or     al,0xda
  40adf4:	cwde   
  40adf5:	mov    ebx,0x1b5dac95
  40adfa:	ins    BYTE PTR es:[edi],dx
  40adfb:	repnz in al,dx
  40adfd:	js     0x40adb6
  40adff:	lds    ebx,FWORD PTR [ebp-0x7e]
  40ae02:	or     al,0x62
  40ae04:	or     esp,DWORD PTR [ebx-0x1584e785]
  40ae0a:	outs   dx,BYTE PTR ds:[esi]
  40ae0b:	cmp    dh,BYTE PTR [edi+0x7b]
  40ae0e:	sub    ecx,DWORD PTR [ecx-0x6a960fc0]
  40ae14:	sbb    cl,BYTE PTR [ebp+0x419fa002]
  40ae1a:	dec    ecx
  40ae1b:	loop   0x40ae78
  40ae1d:	stos   DWORD PTR es:[edi],eax
  40ae1e:	sbb    eax,0xf615c03d
  40ae23:	add    BYTE PTR [edi],0x9e
  40ae26:	pop    edi
  40ae27:	enter  0xf627,0x36
  40ae2b:	add    esp,DWORD PTR [eax-0x5c]
  40ae2e:	push   ss
  40ae2f:	hlt    
  40ae30:	pop    esi
  40ae31:	rcr    dl,cl
  40ae33:	daa    
  40ae34:	xchg   ebp,eax
  40ae35:	std    
  40ae36:	push   esp
  40ae37:	push   edx
  40ae38:	mov    ds:0xd20f96f0,al
  40ae3d:	sti    
  40ae3e:	push   0xd
  40ae40:	sub    esi,eax
  40ae42:	cwde   
  40ae43:	mov    eax,ds:0x499652b2
  40ae48:	sub    DWORD PTR [edi-0x3bc3d22e],esp
  40ae4e:	inc    esp
  40ae4f:	cld    
  40ae50:	ret    0x2161
  40ae53:	pop    es
  40ae54:	mov    eax,DWORD PTR [edi+0x676968c6]
  40ae5a:	ret    
  40ae5b:	das    
  40ae5c:	xchg   ebx,eax
  40ae5d:	mov    al,ds:0xf1e94c0a
  40ae62:	pop    es
  40ae63:	jmp    0x40ae45
  40ae65:	fisttp DWORD PTR [edx+edi*2+0x1d091ced]
  40ae6c:	fisttp WORD PTR [esi+0x0]
  40ae6f:	sbb    DWORD PTR [edi],0xffffffd5
  40ae72:	cmp    esi,DWORD PTR [ecx]
  40ae74:	(bad)  
  40ae75:	in     al,0xc9
  40ae77:	sbb    eax,0x285d8ab2
  40ae7c:	push   eax
  40ae7d:	stos   DWORD PTR es:[edi],eax
  40ae7e:	pop    ecx
  40ae7f:	ss push 0x51
  40ae82:	scas   eax,DWORD PTR es:[edi]
  40ae83:	xchg   esi,eax
  40ae84:	(bad)  
  40ae85:	xor    BYTE PTR [edi],dh
  40ae87:	sti    
  40ae88:	es push ds
  40ae8a:	xor    ebp,DWORD PTR [eax-0xa]
  40ae8d:	cmp    eax,DWORD PTR [eax-0x5e7fc78d]
  40ae93:	cld    
  40ae94:	or     al,0x29
  40ae96:	xor    ecx,DWORD PTR [eax-0x30fe1aaa]
  40ae9c:	jmp    0x40aebc
  40ae9e:	bound  esi,QWORD PTR [esp+edx*2-0x7b]
  40aea2:	sub    BYTE PTR [ecx+0x65],al
  40aea5:	dec    esp
  40aea6:	retf   0x9038
  40aea9:	jo     0x40ae64
  40aeab:	and    BYTE PTR [ecx+edi*4+0x45],al
  40aeaf:	or     al,0x2e
  40aeb1:	dec    ebx
  40aeb2:	stc    
  40aeb3:	jmp    0x40ae75
  40aeb5:	push   ecx
  40aeb6:	mov    eax,ebx
  40aeb8:	pop    ebp
  40aeb9:	lds    edx,FWORD PTR [ebp-0x1e826ea8]
  40aebf:	retf   0x1e37
  40aec2:	xor    eax,0x890cfb2e
  40aec7:	or     al,0x56
  40aec9:	shr    DWORD PTR [ecx],1
  40aecb:	jg     0x40ae5e
  40aecd:	les    ebx,FWORD PTR [esi+0x574b4190]
  40aed3:	push   ecx
  40aed4:	test   edi,edx
  40aed6:	push   edx
  40aed7:	push   ss
  40aed8:	shr    BYTE PTR [eax+ebp*1-0x57],1
  40aedc:	xor    DWORD PTR ds:0xdb1e8347,0x24acbc1a
  40aee6:	and    BYTE PTR [esp+ecx*2],dh
  40aee9:	pop    ebp
  40aeea:	pop    esp
  40aeeb:	aas    
  40aeec:	pop    edi
  40aeed:	sbb    bl,BYTE PTR [eax]
  40aeef:	gs or  eax,0xb40efe4e
  40aef5:	out    dx,al
  40aef6:	fimul  WORD PTR [ecx+esi*4+0x7b]
  40aefa:	mov    BYTE PTR [edx-0x48],dl
  40aefd:	or     ah,BYTE PTR [ecx-0x65]
  40af00:	arpl   WORD PTR [eax-0x47],sp
  40af03:	sbb    edi,eax
  40af05:	inc    ebx
  40af06:	out    dx,al
  40af07:	jb     0x40af87
  40af09:	sbb    eax,0xa9969b04
  40af0e:	call   0x2663:0x225e6aa9
  40af15:	push   esi
  40af16:	mov    edi,0xc60d1794
  40af1b:	xor    al,0xe8
  40af1d:	jg     0x40af6b
  40af1f:	lock int 0x57
  40af22:	cli    
  40af23:	or     ebp,DWORD PTR [edi]
  40af25:	jo     0x40af24
  40af27:	in     al,0x1f
  40af29:	mov    BYTE PTR ds:0x1fa18114,al
  40af2f:	cs mov al,dl
  40af32:	push   edi
  40af33:	mov    cl,0x4e
  40af35:	xchg   edx,eax
  40af36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af37:	sub    ebx,DWORD PTR [edx-0x16]
  40af3a:	xchg   ebx,eax
  40af3b:	std    
  40af3c:	bound  edx,QWORD PTR [eax]
  40af3e:	jg     0x40af54
  40af40:	jmp    ebp
  40af42:	jmp    0x40af73
  40af44:	enter  0xdb2b,0x16
  40af48:	or     al,0x4b
  40af4a:	aaa    
  40af4b:	into   
  40af4c:	xchg   ebx,eax
  40af4d:	jecxz  0x40af52
  40af4f:	clc    
  40af50:	pop    edi
  40af51:	xchg   ecx,eax
  40af52:	mov    al,ds:0xee130a57
  40af57:	fisubr WORD PTR [eax+eiz*4-0x4bdb655]
  40af5e:	sbb    BYTE PTR [esi],0xcf
  40af61:	rcr    eax,cl
  40af63:	sbb    ebp,DWORD PTR ss:[edx-0x51]
  40af67:	adc    bh,bh
  40af69:	rcr    BYTE PTR [edx+0x295dabc1],1
  40af6f:	sub    ch,BYTE PTR [ebp+0x615b945]
  40af75:	and    DWORD PTR [ebp+ebp*8+0x52f50efe],0x73
  40af7d:	fstp   QWORD PTR [edx+0x29]
  40af80:	jecxz  0x40af3c
  40af82:	sbb    al,0xbb
  40af84:	div    esp
  40af86:	dec    edi
  40af87:	inc    edx
  40af88:	adc    DWORD PTR [ebx],edi
  40af8a:	adc    al,0xb
  40af8c:	push   es
  40af8d:	shrd   ebp,ecx,cl
  40af90:	or     dh,bl
  40af92:	sbb    ah,dl
  40af94:	add    dh,BYTE PTR [ebx-0x68607ef8]
  40af9a:	pop    esp
  40af9b:	xchg   ebx,eax
  40af9c:	pop    ebp
  40af9d:	inc    ebp
  40af9e:	(bad)  
  40af9f:	sbb    cl,BYTE PTR [eax-0x586762a4]
  40afa5:	repz inc DWORD PTR ds:[ecx+0x27]
  40afaa:	aas    
  40afab:	(bad)  
  40afac:	mov    ebp,0xfcc19edf
  40afb1:	or     BYTE PTR [esi],cl
  40afb3:	xchg   DWORD PTR [eax+0x54],ebp
  40afb6:	mov    esi,eax
  40afb8:	and    DWORD PTR [ebp-0x22c5c42f],ebp
  40afbe:	sbb    ebx,DWORD PTR [ebx+0x55a0d5cd]
  40afc4:	sbb    ebx,DWORD PTR [edi+0x16]
  40afc7:	dec    ebx
  40afc8:	cmp    BYTE PTR [ebp+0x65],dh
  40afcb:	or     eax,0xfc458bb5
  40afd0:	xor    eax,esi
  40afd2:	add    eax,edi
  40afd4:	mov    DWORD PTR [ebp-0x10],eax
  40afd7:	mov    ebx,0x65655
  40afdc:	add    ebx,0x3234
  40afe2:	xchg   ebx,esi
  40afe4:	xor    ebx,ebx
  40afe6:	push   esi
  40afe7:	mov    esi,ebx
  40afe9:	pop    ebx
  40afea:	mov    edx,esi
  40afec:	jmp    0x40d37e
  40aff1:	cli    
  40aff2:	mov    DWORD PTR [ecx-0x65b47dad],esi
  40aff8:	add    BYTE PTR ds:0xb229b0d0,0x9a
  40afff:	cmp    al,0x2
  40b001:	sub    esp,esi
  40b003:	add    DWORD PTR [ebx-0x7c7ca1f4],0xffffffac
  40b00a:	fs push esp
  40b00c:	dec    ebx
  40b00d:	jg     0x40b01b
  40b00f:	aad    0xde
  40b011:	ins    BYTE PTR es:[edi],dx
  40b012:	lahf   
  40b013:	stos   BYTE PTR es:[edi],al
  40b014:	mov    ebp,0x44408922
  40b019:	adc    al,0x88
  40b01b:	dec    ebp
  40b01c:	or     BYTE PTR [esi+0x5058a037],dl
  40b022:	or     eax,0x68a1c953
  40b027:	call   0xd7f8d283
  40b02c:	(bad)  
  40b02d:	bnd jnp 0x40b06c
  40b030:	ret    0xdb7b
  40b033:	and    bl,BYTE PTR [edi-0x47e3e8bd]
  40b039:	adc    edx,0xffffffd9
  40b03c:	sti    
  40b03d:	imul   edi,DWORD PTR [esp+eiz*2],0x2
  40b041:	adc    ecx,DWORD PTR [edi+0x2735254b]
  40b047:	and    eax,0xab562be7
  40b04c:	jo     0x40b0a9
  40b04e:	cld    
  40b04f:	popa   
  40b050:	mov    bl,0x9
  40b052:	in     eax,dx
  40b053:	jb     0x40b06f
  40b055:	cmp    DWORD PTR [ebp+0x3bf20c52],edi
  40b05b:	mov    BYTE PTR [ecx-0x48],ah
  40b05e:	push   edx
  40b05f:	cld    
  40b060:	dec    ebx
  40b061:	cli    
  40b062:	aas    
  40b063:	icebp  
  40b064:	and    BYTE PTR [eax+0x51],ch
  40b067:	cmp    eax,0xff7662c3
  40b06c:	push   edi
  40b06d:	lock sbb DWORD PTR [ebx],eax
  40b070:	cmp    DWORD PTR [eax+0x7e],ecx
  40b073:	and    dl,al
  40b075:	mov    esp,0x8d693566
  40b07a:	fsubr  DWORD PTR [esi-0x6b833a44]
  40b080:	push   edx
  40b081:	inc    ebp
  40b082:	or     eax,ecx
  40b084:	cmc    
  40b085:	(bad)  
  40b086:	mov    esp,0xed17c665
  40b08b:	jae    0x40b0ec
  40b08d:	test   al,0xee
  40b08f:	cmp    bh,BYTE PTR [edx]
  40b091:	push   esp
  40b092:	inc    esp
  40b093:	adc    eax,eax
  40b095:	mov    WORD PTR [edx+eiz*8],gs
  40b098:	dec    ebp
  40b099:	sub    dl,BYTE PTR [esi-0x4d]
  40b09c:	or     bh,BYTE PTR [edx]
  40b09e:	js     0x40b0c0
  40b0a0:	dec    esi
  40b0a1:	ds xchg ebp,eax
  40b0a3:	jge    0x40b0c8
  40b0a5:	jmp    0xd19f:0x824bee09
  40b0ac:	jae    0x40b087
  40b0ae:	repz in al,dx
  40b0b0:	dec    edx
  40b0b1:	scas   eax,DWORD PTR es:[edi]
  40b0b2:	pop    ds
  40b0b3:	aad    0x5d
  40b0b5:	std    
  40b0b6:	and    bl,dl
  40b0b8:	pop    eax
  40b0b9:	mov    esi,0xdd80de17
  40b0be:	ins    BYTE PTR es:[edi],dx
  40b0bf:	mov    ebp,edi
  40b0c1:	lds    ebx,FWORD PTR [ecx+0x212bc4ac]
  40b0c7:	mov    al,0xdc
  40b0c9:	fsub   st(4),st
  40b0cb:	jl     0x40b09e
  40b0cd:	add    DWORD PTR [edi],edx
  40b0cf:	in     al,0xcc
  40b0d1:	aad    0x4f
  40b0d3:	xor    eax,0x9af8fdea
  40b0d8:	outs   dx,BYTE PTR ds:[esi]
  40b0d9:	mov    bh,BYTE PTR [eax-0x6cd9f731]
  40b0df:	push   esi
  40b0e0:	pop    es
  40b0e1:	or     DWORD PTR [eax-0x3d],edx
  40b0e4:	mov    WORD PTR [edx-0x2ae4fb1c],fs
  40b0ea:	inc    esi
  40b0eb:	and    cl,BYTE PTR fs:[ebx+eiz*1]
  40b0ef:	and    eax,0x9b8f839f
  40b0f4:	xchg   BYTE PTR [edx+0x3e],bh
  40b0f7:	and    edx,edi
  40b0f9:	iret   
  40b0fa:	mov    dl,al
  40b0fc:	xchg   esi,eax
  40b0fd:	mov    ebx,0xecb1f7e9
  40b102:	cmp    ch,ah
  40b104:	add    eax,0x1cf4ffb2
  40b109:	dec    ecx
  40b10a:	xor    al,0x30
  40b10c:	test   eax,0xff096f64
  40b111:	ficomp WORD PTR [edi+0xa]
  40b114:	pop    ss
  40b115:	push   cs
  40b116:	sbb    DWORD PTR [esi+0x592f3a75],ebp
  40b11c:	pop    eax
  40b11d:	mov    ecx,0xc74f2646
  40b122:	sti    
  40b123:	fisubr DWORD PTR [ebp-0x3a]
  40b126:	mov    cl,0x43
  40b128:	push   ss
  40b129:	mov    ss,esi
  40b12b:	lods   eax,DWORD PTR ds:[esi]
  40b12c:	xor    bl,BYTE PTR [ebx+0x3]
  40b12f:	xor    dh,BYTE PTR [ebx+0x4b]
  40b132:	rcr    BYTE PTR [eax+0x461a784d],cl
  40b138:	in     al,dx
  40b139:	add    DWORD PTR [edi+edx*4+0x7e65845a],eax
  40b140:	add    ecx,DWORD PTR [edx]
  40b142:	(bad)  
  40b143:	das    
  40b144:	inc    edi
  40b145:	adc    al,0xb3
  40b147:	das    
  40b148:	lock cmp cl,ah
  40b14b:	aas    
  40b14c:	or     DWORD PTR [edi-0xa],esp
  40b14f:	cmp    edx,DWORD PTR [edi-0x3bbfd774]
  40b155:	adc    eax,0xc0f05e31
  40b15a:	out    dx,al
  40b15b:	add    BYTE PTR [edx],cl
  40b15d:	sbb    al,0xb9
  40b15f:	ins    BYTE PTR es:[edi],dx
  40b160:	inc    ebp
  40b161:	rol    DWORD PTR [esi+0x65],cl
  40b164:	cmc    
  40b165:	sahf   
  40b166:	arpl   WORD PTR [ebp+0x59058fdc],sp
  40b16c:	or     eax,0x4780d489
  40b171:	sbb    ah,BYTE PTR ds:0xf66e4e09
  40b177:	(bad)  [edi-0x34446f70]
  40b17d:	mov    DWORD PTR [edx+ebx*8+0x37],esi
  40b181:	add    eax,0xef0d1aa7
  40b186:	sahf   
  40b187:	sub    BYTE PTR [esi+0x77],dh
  40b18a:	retf   0xecb5
  40b18d:	jge    0x40b114
  40b18f:	iret   
  40b190:	in     al,0xc6
  40b192:	or     ch,al
  40b194:	aam    0xb9
  40b196:	idiv   DWORD PTR [ebx+0x4a]
  40b199:	retf   0x659d
  40b19c:	rcr    BYTE PTR [ebp-0x3b154948],cl
  40b1a2:	in     al,dx
  40b1a3:	xchg   esp,eax
  40b1a4:	dec    edi
  40b1a5:	add    BYTE PTR [edi-0x4d46b76a],al
  40b1ab:	pop    es
  40b1ac:	push   ecx
  40b1ad:	dec    edx
  40b1ae:	and    DWORD PTR [eax+ecx*8],ebx
  40b1b1:	pop    esp
  40b1b2:	pop    ds
  40b1b3:	dec    ecx
  40b1b4:	mov    cl,0x12
  40b1b6:	mov    esi,0x50702ace
  40b1bb:	into   
  40b1bc:	gs enter 0x8dc,0x58
  40b1c1:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40b1c3:	push   0x4d9957f3
  40b1c8:	xchg   esi,eax
  40b1c9:	repnz push es
  40b1cb:	lea    edx,[eax]
  40b1cd:	popf   
  40b1ce:	xor    eax,0x862b8e72
  40b1d3:	nop
  40b1d4:	inc    esi
  40b1d5:	imul   esi,DWORD PTR [esi-0x66f36b6d],0xfffffff4
  40b1dc:	jno    0x40b25d
  40b1de:	or     al,0x27
  40b1e0:	pushf  
  40b1e1:	cli    
  40b1e2:	push   ss
  40b1e3:	and    ebx,DWORD PTR ds:0x2fa8d333
  40b1e9:	cmp    eax,0x2af4668c
  40b1ee:	sbb    edi,DWORD PTR [ecx+0x1fdb93bb]
  40b1f4:	fbld   TBYTE PTR [edi-0x135e093d]
  40b1fa:	sbb    BYTE PTR ss:[eax-0x37],ah
  40b1fe:	dec    ebp
  40b1ff:	nop
  40b200:	jbe    0x40b206
  40b202:	cli    
  40b203:	jmp    0x4d99:0x6a15e167
  40b20a:	dec    esi
  40b20b:	ds and eax,0x946bd68b
  40b211:	inc    edi
  40b212:	sbb    bh,BYTE PTR [edx+0xbb33cb0]
  40b218:	inc    eax
  40b219:	lahf   
  40b21a:	cdq    
  40b21b:	xchg   BYTE PTR fs:[esi+ecx*8+0x22e56b43],ah
  40b223:	cmc    
  40b224:	pop    edx
  40b225:	xor    esp,DWORD PTR [edx]
  40b227:	fimul  WORD PTR [esi-0x7b206d4e]
  40b22d:	lea    edi,[ebx+ecx*1+0x38]
  40b231:	or     eax,esi
  40b233:	in     al,dx
  40b234:	push   ss
  40b235:	inc    edx
  40b236:	out    0x2,eax
  40b238:	lea    edi,[ebp+0x4c]
  40b23b:	rol    BYTE PTR [ebx-0x3d74a7e2],cl
  40b241:	out    0xcd,al
  40b243:	fs leave 
  40b245:	in     eax,dx
  40b246:	aas    
  40b247:	pop    edx
  40b248:	inc    eax
  40b249:	lods   eax,DWORD PTR ds:[esi]
  40b24a:	jo     0x40b23a
  40b24c:	ins    BYTE PTR es:[edi],dx
  40b24d:	fisub  DWORD PTR [edi+0x5953d7cf]
  40b253:	ins    DWORD PTR es:[edi],dx
  40b254:	std    
  40b255:	repnz pushf 
  40b257:	test   eax,0x2df5aa1c
  40b25c:	loop   0x40b267
  40b25e:	jge    0x40b20d
  40b260:	icebp  
  40b261:	mov    eax,0xfb4051c
  40b266:	jle    0x40b20a
  40b268:	mov    edx,0x395a3e4e
  40b26d:	ret    0x66e2
  40b270:	outs   dx,BYTE PTR ds:[esi]
  40b271:	push   esi
  40b272:	dec    eax
  40b273:	inc    ecx
  40b274:	ret    0xff6a
  40b277:	and    DWORD PTR [edx],0x4b8e13f6
  40b27d:	cli    
  40b27e:	pop    eax
  40b27f:	and    edi,DWORD PTR [edi-0x5c]
  40b282:	aad    0x40
  40b284:	out    dx,eax
  40b285:	loope  0x40b214
  40b287:	push   ecx
  40b288:	aam    0xd0
  40b28a:	inc    edi
  40b28b:	aam    0xae
  40b28d:	daa    
  40b28e:	jle    0x40b2a2
  40b290:	mov    al,0xd6
  40b292:	aad    0x77
  40b294:	push   esi
  40b295:	nop
  40b296:	mov    al,cl
  40b298:	jmp    0x40b28b
  40b29a:	and    BYTE PTR [esi+edi*1+0x51],dl
  40b29e:	sbb    al,0x9e
  40b2a0:	cmp    bh,BYTE PTR [edx]
  40b2a2:	mov    ebx,0x21025b38
  40b2a7:	mov    ah,0x20
  40b2a9:	mov    esi,0x47feef78
  40b2ae:	clc    
  40b2af:	std    
  40b2b0:	dec    edi
  40b2b1:	lock pop ebx
  40b2b3:	shl    DWORD PTR [eax+ebp*1-0xc],1
  40b2b7:	push   esp
  40b2b8:	ret    
  40b2b9:	inc    edx
  40b2ba:	rcr    DWORD PTR [eax+0x39a562ef],cl
  40b2c0:	out    0xba,al
  40b2c2:	xchg   ebp,eax
  40b2c3:	sahf   
  40b2c4:	sbb    al,0xfb
  40b2c7:	or     al,0x29
  40b2c9:	mov    esp,0x9ecd5643
  40b2ce:	push   ss
  40b2cf:	je     0x40b2cb
  40b2d1:	stos   BYTE PTR es:[edi],al
  40b2d2:	dec    esp
  40b2d3:	or     eax,0xff045438
  40b2d8:	mov    gs,edi
  40b2da:	loope  0x40b34e
  40b2dc:	dec    ecx
  40b2dd:	dec    edi
  40b2de:	jmp    0x942bcdf5
  40b2e3:	sub    eax,0xf32b1de4
  40b2e8:	mov    al,ds:0xb4409612
  40b2ed:	sub    edi,DWORD PTR [ebx+0x595fbc78]
  40b2f3:	mov    bh,0x5b
  40b2f5:	cmp    eax,0xcee76018
  40b2fa:	out    0xa1,eax
  40b2fc:	in     al,dx
  40b2fd:	rcl    DWORD PTR [ecx],1
  40b2ff:	xor    eax,0x8f1194a6
  40b304:	cmc    
  40b305:	shl    bl,cl
  40b307:	(bad)  
  40b308:	jno    0x40b2a9
  40b30a:	pop    ecx
  40b30b:	call   0xc208:0x561999dc
  40b312:	mov    ch,0x8b
  40b314:	jmp    0xdf693ad1
  40b319:	sub    eax,DWORD PTR [ecx+0x49]
  40b31c:	mov    al,ds:0x98a39b0e
  40b321:	mov    DWORD PTR [ecx-0x1d],0xf9017111
  40b328:	push   0x8d1d2a02
  40b32d:	add    eax,0x9a2a55d8
  40b332:	das    
  40b333:	jno    0x40b378
  40b335:	push   ecx
  40b336:	adc    dh,bh
  40b338:	pop    edi
  40b339:	in     eax,0xa
  40b33b:	add    eax,0x5aafbcbd
  40b340:	mov    ecx,0xa104a902
  40b345:	pop    edi
  40b346:	xchg   ecx,eax
  40b347:	push   DWORD PTR [ecx-0x6b397ce]
  40b34d:	mov    ah,0xd8
  40b34f:	ja     0x40b30b
  40b351:	repz and ebx,DWORD PTR [eax+edi*4]
  40b355:	sbb    BYTE PTR [eax-0x18],0xfa
  40b359:	mov    eax,ds:0xaec20fe4
  40b35e:	jl     0x40b38c
  40b360:	push   ebx
  40b361:	ds inc edi
  40b363:	shr    BYTE PTR [ecx-0x6b4abd83],cl
  40b369:	rcl    DWORD PTR [edx+0x2d504f22],1
  40b36f:	popf   
  40b370:	adc    eax,0x2263db18
  40b375:	mov    ebp,0x896c3ccb
  40b37a:	es in  eax,dx
  40b37c:	inc    esp
  40b37d:	inc    eax
  40b37e:	test   eax,0xbd03914b
  40b383:	(bad)  
  40b384:	mov    edi,0xeb909fed
  40b389:	sbb    eax,0x9c984d0d
  40b38e:	or     eax,0x9049338f
  40b393:	mov    BYTE PTR [edi-0x61],ch
  40b396:	add    al,0x86
  40b398:	mov    eax,ds:0x6e786ae9
  40b39d:	add    al,0x87
  40b39f:	sbb    eax,0x6dac3086
  40b3a4:	enter  0x2124,0x5b
  40b3a8:	push   esp
  40b3a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3aa:	jae    0x40b3c3
  40b3ac:	hlt    
  40b3ad:	push   ecx
  40b3ae:	or     eax,0x8dad7b85
  40b3b3:	dec    esp
  40b3b4:	pop    esp
  40b3b5:	mov    al,0x30
  40b3b7:	out    0x67,eax
  40b3b9:	or     ecx,0xfd11c56a
  40b3bf:	push   cs
  40b3c0:	add    edx,esi
  40b3c2:	psrld  mm3,QWORD PTR [ecx+0x66c0f0f2]
  40b3c9:	xor    al,0xfb
  40b3cb:	dec    ebx
  40b3cc:	mov    dl,0x32
  40b3ce:	fimul  WORD PTR [ebx]
  40b3d0:	test   BYTE PTR [edi],0x15
  40b3d3:	aaa    
  40b3d4:	(bad)  
  40b3d5:	mov    ebx,0x85cc6f09
  40b3da:	adc    ch,BYTE PTR [edi+0x5af8a414]
  40b3e0:	sbb    DWORD PTR [edx+0x28],edi
  40b3e3:	ror    DWORD PTR [edi-0x75],1
  40b3e6:	call   FWORD PTR [eax-0x50]
  40b3e9:	ror    BYTE PTR [ebx],1
  40b3eb:	stos   DWORD PTR es:[edi],eax
  40b3ec:	push   0xade9e2c2
  40b3f1:	test   cl,bh
  40b3f3:	(bad)  
  40b3f6:	sub    DWORD PTR [esi],edx
  40b3f8:	sar    BYTE PTR [eax],0xe4
  40b3fb:	inc    esp
  40b3fc:	cld    
  40b3fd:	inc    eax
  40b3fe:	dec    edi
  40b3ff:	mov    eax,ds:0xed91b287
  40b404:	js     0x40b433
  40b406:	pop    ds
  40b407:	pop    edi
  40b408:	dec    ecx
  40b409:	dec    ecx
  40b40a:	sbb    al,0x5e
  40b40c:	stos   DWORD PTR es:[edi],eax
  40b40d:	fnstenv [ecx]
  40b40f:	jae    0x40b3eb
  40b411:	inc    ecx
  40b412:	lea    ebx,[edi]
  40b414:	or     ch,bh
  40b416:	daa    
  40b417:	xor    DWORD PTR [edi-0x61f319be],ebp
  40b41d:	xchg   esi,eax
  40b41e:	das    
  40b41f:	leave  
  40b420:	adc    BYTE PTR [esi+0x14764dd1],al
  40b426:	inc    esi
  40b427:	push   eax
  40b428:	sbb    DWORD PTR [ebx+0x48f2d4c9],edx
  40b42e:	out    dx,eax
  40b42f:	jo     0x40b4ac
  40b431:	fist   WORD PTR [ebx-0x7848a400]
  40b437:	mov    DWORD PTR [edi],0x78825af1
  40b43d:	mov    al,0x5d
  40b43f:	test   al,0x10
  40b441:	xor    eax,0xf142b2c8
  40b446:	sbb    bh,ah
  40b448:	lock cmp dl,bl
  40b44b:	pop    edi
  40b44c:	push   ss
  40b44d:	pop    edx
  40b44e:	inc    esp
  40b44f:	adc    al,0x4a
  40b451:	stc    
  40b452:	cmp    DWORD PTR [edx+0x22cc1871],eax
  40b458:	into   
  40b459:	jns    0x40b3de
  40b45b:	sti    
  40b45c:	(bad)  
  40b45d:	loop   0x40b429
  40b45f:	out    dx,eax
  40b460:	mov    ?,WORD PTR [edi+eax*2+0x2f56792d]
  40b467:	fwait
  40b468:	or     esp,DWORD PTR [ebp+0x63]
  40b46b:	and    eax,0x1b8c0f89
  40b470:	mov    al,0x1a
  40b472:	inc    edx
  40b473:	adc    cl,BYTE PTR [eax-0x78]
  40b476:	mov    ah,0x1b
  40b478:	gs mov edi,0xe2ba8614
  40b47e:	cld    
  40b47f:	pop    ebp
  40b480:	in     al,dx
  40b481:	int3   
  40b482:	and    edx,DWORD PTR [edi+0x62]
  40b485:	jnp    0x40b4fc
  40b487:	out    dx,eax
  40b488:	sub    DWORD PTR ds:0x642c2a76,esi
  40b48e:	dec    esi
  40b48f:	popf   
  40b490:	push   eax
  40b491:	push   ss
  40b492:	push   eax
  40b493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b494:	inc    eax
  40b495:	dec    edx
  40b496:	adc    al,0x8e
  40b498:	push   ecx
  40b499:	(bad)  
  40b49a:	es jns 0x40b439
  40b49d:	mov    esp,0xfb139d5a
  40b4a2:	lahf   
  40b4a3:	ja     0x40b4ae
  40b4a5:	das    
  40b4a6:	aaa    
  40b4a7:	clc    
  40b4a8:	ror    DWORD PTR [ebp-0x33085e2f],cl
  40b4ae:	leave  
  40b4af:	dec    esi
  40b4b0:	aaa    
  40b4b1:	fsubr  st(3),st
  40b4b3:	ror    DWORD PTR [edi],1
  40b4b5:	nop
  40b4b6:	add    BYTE PTR [esi+0x490dba1c],dh
  40b4bc:	sbb    BYTE PTR [ebx-0x5f3e903f],bl
  40b4c2:	test   al,0x84
  40b4c4:	fidivr DWORD PTR [ebx+edx*2]
  40b4c7:	sti    
  40b4c8:	fbld   TBYTE PTR ds:0xeb139615
  40b4ce:	inc    esp
  40b4cf:	xor    eax,esp
  40b4d1:	retf   
  40b4d2:	out    0x92,al
  40b4d4:	jl     0x40b4d7
  40b4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4d7:	ret    
  40b4d8:	lock add edi,DWORD PTR [ebx]
  40b4db:	mov    esp,DWORD PTR [edx+0x73c7f612]
  40b4e1:	inc    edi
  40b4e2:	xor    BYTE PTR [edi],dl
  40b4e4:	cmc    
  40b4e5:	loopne 0x40b4a3
  40b4e7:	or     BYTE PTR [edi-0x57],al
  40b4ea:	and    bh,dl
  40b4ec:	inc    esi
  40b4ed:	popa   
  40b4ee:	repnz cmp al,0x88
  40b4f1:	(bad)  
  40b4f2:	hlt    
  40b4f3:	aas    
  40b4f4:	hlt    
  40b4f5:	ret    
  40b4f6:	popf   
  40b4f7:	xchg   edx,eax
  40b4f8:	leave  
  40b4f9:	imul   esp
  40b4fb:	push   ebp
  40b4fc:	jbe    0x40b4b6
  40b4fe:	or     BYTE PTR [ecx-0x3b],0xaf
  40b502:	iret   
  40b503:	cmp    al,0x94
  40b505:	mov    ds,WORD PTR [edi]
  40b507:	push   0x53a5e959
  40b50c:	mov    bh,0x4b
  40b50e:	ret    
  40b50f:	fstp   QWORD PTR [esi+0x6f]
  40b512:	inc    ecx
  40b513:	ds test eax,0x636e8d79
  40b519:	add    bl,BYTE PTR es:[ebx+edx*4+0xf]
  40b51e:	stos   BYTE PTR es:[edi],al
  40b51f:	or     al,0x55
  40b521:	and    al,0x4f
  40b523:	push   esi
  40b524:	sub    DWORD PTR [edi],ecx
  40b526:	push   edx
  40b527:	jns    0x40b57d
  40b529:	mov    eax,ds:0xac58ce10
  40b52e:	fadd   QWORD PTR [ebx-0x1a]
  40b531:	adc    eax,DWORD PTR [esi+0x200622a5]
  40b537:	out    dx,eax
  40b538:	pop    ebp
  40b539:	fwait
  40b53a:	xor    al,0xa2
  40b53c:	lods   eax,DWORD PTR ds:[esi]
  40b53d:	cld    
  40b53e:	inc    ebp
  40b53f:	or     cl,BYTE PTR [esp+eax*1]
  40b542:	nop
  40b543:	mov    ebx,0xd76d85e7
  40b548:	xor    eax,0xedc19c72
  40b54d:	jns    0x40b516
  40b54f:	data16 hlt 
  40b551:	ficom  DWORD PTR [eax+eiz*1+0x4e529792]
  40b558:	in     al,dx
  40b559:	clc    
  40b55a:	add    ch,BYTE PTR [edi-0x2271ed93]
  40b560:	xchg   ebx,eax
  40b561:	ret    
  40b562:	mov    ebx,0xb0564a81
  40b567:	add    bl,BYTE PTR [ebp+eax*1-0x6]
  40b56b:	out    dx,al
  40b56c:	sub    bl,ah
  40b56e:	fistp  WORD PTR [ebp-0x80]
  40b571:	daa    
  40b572:	ss sbb al,0xef
  40b575:	fld    QWORD PTR [ebp+ecx*2-0x4e45f4b0]
  40b57c:	dec    eax
  40b57d:	lea    edi,[ecx]
  40b57f:	dec    edx
  40b580:	inc    edx
  40b581:	in     eax,dx
  40b582:	int    0x4
  40b584:	dec    esp
  40b585:	xchg   edx,eax
  40b586:	add    eax,0x5ccc07f0
  40b58b:	xchg   ecx,eax
  40b58c:	mov    edx,0x42573a17
  40b591:	stos   DWORD PTR es:[edi],eax
  40b592:	or     DWORD PTR [eax+0x7e9152af],esp
  40b598:	shl    DWORD PTR [ecx-0x66],0xea
  40b59c:	push   ebp
  40b59d:	xor    DWORD PTR [edx],edi
  40b59f:	pop    es
  40b5a0:	push   es
  40b5a1:	repz push edi
  40b5a3:	jo     0x40b5df
  40b5a5:	lea    ecx,[edx-0x74]
  40b5a8:	in     al,0x38
  40b5aa:	xchg   ecx,eax
  40b5ab:	sbb    edx,esi
  40b5ad:	fwait
  40b5ae:	test   al,0xfe
  40b5b0:	jecxz  0x40b61d
  40b5b2:	and    eax,0x9462153
  40b5b7:	xchg   ebp,eax
  40b5b8:	jp     0x40b5be
  40b5ba:	ror    al,1
  40b5bc:	hlt    
  40b5bd:	inc    ecx
  40b5be:	jmp    0x16a7:0x62159370
  40b5c5:	jmp    0x40b635
  40b5c7:	popf   
  40b5c8:	shl    BYTE PTR [edx-0x7d],cl
  40b5cb:	jmp    0xe4d6:0x9b351ff9
  40b5d2:	mov    edi,0xb7ddc02b
  40b5d7:	jge    0x40b603
  40b5d9:	inc    ebp
  40b5da:	repnz xor al,0x30
  40b5dd:	sub    BYTE PTR [ebp+0x56],bl
  40b5e0:	push   edi
  40b5e1:	data16 xlat BYTE PTR ds:[ebx]
  40b5e3:	mov    esp,0xcb73e0fc
  40b5e8:	inc    ebx
  40b5e9:	xor    eax,0x951c57c2
  40b5ee:	sub    DWORD PTR [eax*2-0x69aac6ce],eax
  40b5f5:	ins    BYTE PTR es:[edi],dx
  40b5f6:	pop    ecx
  40b5f7:	pop    edi
  40b5f8:	dec    ebx
  40b5f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5fa:	inc    esp
  40b5fb:	adc    eax,edx
  40b5fd:	(bad)  
  40b5fe:	loope  0x40b627
  40b600:	out    0xc1,al
  40b602:	fcmovnbe st,st(5)
  40b604:	mov    cl,0xc0
  40b606:	mov    dh,ch
  40b608:	pop    DWORD PTR [ecx+0x4e]
  40b60b:	mov    BYTE PTR [ecx+esi*8],ah
  40b60e:	icebp  
  40b60f:	and    DWORD PTR [ebx+ecx*2-0x5c],edi
  40b613:	push   ebp
  40b614:	adc    al,0xd6
  40b616:	fstp   TBYTE PTR ds:0x9faad06f
  40b61c:	and    ebx,DWORD PTR cs:[edi]
  40b61f:	aam    0x6a
  40b621:	jle    0x40b639
  40b623:	jle    0x40b651
  40b625:	mov    ecx,0x7e9f1a0d
  40b62a:	add    eax,DWORD PTR [edi]
  40b62c:	sub    eax,DWORD PTR [eax+0xb]
  40b62f:	icebp  
  40b630:	fcmove st,st(1)
  40b632:	jbe    0x40b662
  40b634:	mov    dl,0x4e
  40b636:	mov    edi,0x8714dd6c
  40b63b:	xchg   BYTE PTR [edi+0x43],dh
  40b63e:	mov    DWORD PTR [ecx-0x5ab16062],ebp
  40b644:	imul   ebp,eax,0xffffff96
  40b647:	add    ch,BYTE PTR [ecx+0x10]
  40b64a:	pop    ebx
  40b64b:	enter  0x7f13,0x5f
  40b64f:	into   
  40b650:	les    eax,FWORD PTR [esp+ebp*1-0x254f3365]
  40b657:	int    0xd6
  40b659:	sbb    al,0x87
  40b65b:	sub    ch,bh
  40b65d:	dec    ecx
  40b65e:	retf   0xf2be
  40b661:	mov    esp,0xae4f85cd
  40b666:	ficom  DWORD PTR ds:0x9778b66e
  40b66c:	push   ebp
  40b66d:	mov    ds:0x78699005,al
  40b672:	fwait
  40b673:	and    DWORD PTR [edx],eax
  40b675:	retf   0x1903
  40b678:	pop    edx
  40b679:	out    dx,eax
  40b67a:	fsub   DWORD PTR [ebx-0x198362c5]
  40b680:	mov    edx,0x83eb03f8
  40b685:	pop    ecx
  40b686:	sbb    edi,DWORD PTR [edx]
  40b688:	mov    BYTE PTR [ecx+0x68],dh
  40b68b:	std    
  40b68c:	add    DWORD PTR [ebx+0x30290133],edi
  40b692:	xchg   edx,eax
  40b693:	aaa    
  40b694:	dec    ebx
  40b695:	mov    bl,0xff
  40b697:	call   0xe0c4d3a2
  40b69c:	sbb    bh,dl
  40b69e:	idiv   BYTE PTR [edx+edx*8]
  40b6a1:	and    DWORD PTR [eax-0x61],0x3b
  40b6a5:	inc    esp
  40b6a6:	not    DWORD PTR [edi+eiz*1]
  40b6a9:	inc    ecx
  40b6aa:	popf   
  40b6ab:	iret   
  40b6ac:	inc    ebp
  40b6ad:	mov    DWORD PTR [esi+ebp*2-0x1],ebx
  40b6b1:	fidivr WORD PTR [ebp-0x17175de7]
  40b6b7:	mov    ds:0x25795210,eax
  40b6bc:	mov    al,ds:0x749c95cb
  40b6c1:	pop    ss
  40b6c2:	cmp    edi,DWORD PTR [ebx+0x16]
  40b6c5:	daa    
  40b6c6:	retf   
  40b6c7:	int    0xdd
  40b6c9:	mov    ecx,ecx
  40b6cb:	mov    esp,0xbf191d41
  40b6d0:	in     eax,dx
  40b6d1:	retf   
  40b6d2:	sahf   
  40b6d3:	int    0xf9
  40b6d5:	sub    ebx,0x3e74271e
  40b6db:	add    BYTE PTR [ecx],0xf6
  40b6de:	cmp    ebx,DWORD PTR [edx]
  40b6e0:	jp     0x40b710
  40b6e2:	mov    ebp,0x13b47e71
  40b6e7:	stos   DWORD PTR es:[edi],eax
  40b6e8:	sar    BYTE PTR [eax],0xf9
  40b6eb:	popf   
  40b6ec:	push   edi
  40b6ed:	stos   DWORD PTR es:[edi],eax
  40b6ee:	mov    ch,0xaa
  40b6f0:	or     BYTE PTR [ebp-0x7a],bh
  40b6f3:	loopne 0x40b692
  40b6f5:	sub    BYTE PTR [edx+0x4462b865],ch
  40b6fb:	pop    ecx
  40b6fc:	pop    ebp
  40b6fd:	and    bh,al
  40b6ff:	mov    ch,0x84
  40b701:	ja     0x40b6b9
  40b703:	and    edi,DWORD PTR [eax+edi*4]
  40b706:	inc    edx
  40b707:	pop    es
  40b708:	mov    eax,0xdfb2bcf8
  40b70d:	fs (bad) 
  40b70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b710:	repz sar DWORD PTR [ebp+0x2731903c],1
  40b717:	push   ecx
  40b718:	stos   DWORD PTR es:[edi],eax
  40b719:	repnz inc ebp
  40b71b:	daa    
  40b71c:	test   BYTE PTR [esi-0x5c5e29dc],ah
  40b722:	fistp  WORD PTR [edi-0xb730211]
  40b728:	outs   dx,BYTE PTR ds:[esi]
  40b729:	das    
  40b72a:	cmp    BYTE PTR [ebp-0x526f065f],bl
  40b730:	call   0x8ab9:0x3b5851e9
  40b737:	jnp    0x40b78d
  40b739:	aas    
  40b73a:	shl    BYTE PTR [ebp-0x59],1
  40b73d:	or     eax,0x39470b9c
  40b742:	jno    0x40b72b
  40b744:	pop    edx
  40b745:	mov    ebx,cs
  40b747:	retf   0x739
  40b74a:	inc    edx
  40b74b:	idiv   edi
  40b74d:	into   
  40b74e:	or     ebp,edx
  40b750:	out    0xe1,eax
  40b752:	data16 fucomip st,st(5)
  40b755:	mov    eax,ds:0xeae3ff34
  40b75a:	fdivr  QWORD PTR [edx-0xf]
  40b75d:	inc    ebp
  40b75e:	retf   0x2d44
  40b761:	ins    DWORD PTR es:[edi],dx
  40b762:	jle    0x40b7df
  40b764:	das    
  40b765:	mov    esp,0x1f4b4aea
  40b76a:	or     ebp,DWORD PTR [edi]
  40b76c:	adc    eax,0x7367c5e7
  40b771:	cmc    
  40b772:	pop    ss
  40b773:	sub    BYTE PTR [ebx-0x96f4f11],dh
  40b779:	xchg   ebp,eax
  40b77a:	lahf   
  40b77b:	fwait
  40b77c:	cmp    esp,eax
  40b77e:	jle    0x40b7fb
  40b780:	mov    edx,0xcca7db46
  40b785:	lds    ebp,FWORD PTR [edi+ebp*8-0x714c8a80]
  40b78c:	lea    ecx,[edi]
  40b78e:	stc    
  40b78f:	add    bl,BYTE PTR [edx]
  40b791:	jae    0x40b736
  40b793:	hlt    
  40b794:	xor    al,bl
  40b796:	(bad)  
  40b798:	das    
  40b799:	xchg   edx,eax
  40b79a:	mov    al,0xf5
  40b79c:	sub    eax,0xcb58ad2e
  40b7a1:	mov    DWORD PTR [edx],eax
  40b7a3:	pop    ss
  40b7a4:	xchg   edi,eax
  40b7a5:	lock adc BYTE PTR [ebx+0x49f3970e],bh
  40b7ac:	or     al,0x96
  40b7ae:	xlat   BYTE PTR ds:[ebx]
  40b7af:	xchg   edi,eax
  40b7b0:	add    ebp,DWORD PTR [esp+ebp*8+0x56]
  40b7b4:	in     al,dx
  40b7b5:	cwde   
  40b7b6:	fucom  st(0)
  40b7b8:	or     BYTE PTR [edx],dl
  40b7ba:	jno    0x40b77f
  40b7bc:	daa    
  40b7bd:	(bad)  [ecx]
  40b7bf:	fild   QWORD PTR [ecx+eax*1-0x35]
  40b7c3:	(bad)  
  40b7c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7c5:	pop    esp
  40b7c6:	call   0x8710:0x46fcc7c0
  40b7cd:	dec    esp
  40b7ce:	iret   
  40b7cf:	xor    al,0xa1
  40b7d1:	push   ebp
  40b7d2:	jp     0x40b81d
  40b7d4:	pop    ebx
  40b7d5:	or     eax,0xad4da94f
  40b7da:	sbb    eax,0xb36b6c7c
  40b7df:	scas   eax,DWORD PTR es:[edi]
  40b7e0:	sbb    ch,BYTE PTR [esi]
  40b7e2:	push   0x551db5fa
  40b7e7:	jle    0x40b7b9
  40b7e9:	mov    dh,BYTE PTR [esi+0x5]
  40b7ec:	out    0x4c,eax
  40b7ee:	fcomp  QWORD PTR [eax]
  40b7f0:	push   0xffffffbe
  40b7f2:	adc    ebx,DWORD PTR [edx]
  40b7f4:	fmul   DWORD PTR [edx+0x6c]
  40b7f7:	jno    0x40b7f4
  40b7f9:	lahf   
  40b7fa:	sahf   
  40b7fb:	fs loope 0x40b842
  40b7fe:	cmp    DWORD PTR [ebp+esi*4-0x5019b144],esp
  40b805:	and    al,0x74
  40b807:	xor    al,0x88
  40b809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b80a:	data16 outs dx,BYTE PTR ds:[esi]
  40b80c:	dec    esi
  40b80d:	and    BYTE PTR [edx+0x69cfade],0x39
  40b814:	mov    al,ds:0xf05b4a22
  40b819:	fcomp  st(2)
  40b81b:	fwait
  40b81c:	jne    0x40b810
  40b81e:	imul   esi,DWORD PTR [ecx+0x5465e44c],0x5b
  40b825:	push   0xb
  40b827:	add    ch,al
  40b829:	lock xchg edx,eax
  40b82b:	das    
  40b82c:	sub    al,0x5a
  40b82e:	and    al,0x13
  40b830:	icebp  
  40b831:	dec    ebx
  40b832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b833:	inc    ecx
  40b834:	cmp    eax,0x9bdacfa5
  40b839:	rol    BYTE PTR [esp+ecx*1-0x33],1
  40b83d:	dec    ecx
  40b83e:	mov    edi,0x93b8e11
  40b843:	test   dl,dh
  40b845:	scas   eax,DWORD PTR es:[edi]
  40b846:	enter  0xf41a,0x7d
  40b84a:	iret   
  40b84b:	stos   DWORD PTR es:[edi],eax
  40b84c:	xor    ah,dh
  40b84e:	lock out 0xe1,eax
  40b851:	jecxz  0x40b86f
  40b853:	sub    DWORD PTR [eax-0x11911f93],edi
  40b859:	retf   0xad13
  40b85c:	sub    esp,DWORD PTR [edi+0x7c]
  40b85f:	pop    esp
  40b860:	call   esi
  40b862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b863:	call   0xabbf:0x7f5c72d
  40b86a:	push   0x91def8cb
  40b86f:	ds cmp al,0xbd
  40b872:	pop    edi
  40b873:	or     eax,0x85d0130b
  40b878:	call   FWORD PTR [ebx-0x293c76ef]
  40b87e:	mov    eax,ds:0x49337c2f
  40b883:	arpl   WORD PTR [edx+0x1b],bx
  40b886:	mov    dl,0x7
  40b888:	repz fadd st(7),st
  40b88b:	stos   DWORD PTR es:[edi],eax
  40b88c:	cmp    cl,BYTE PTR [eax]
  40b88e:	pop    es
  40b88f:	inc    edx
  40b890:	ret    0x8cfa
  40b893:	lahf   
  40b894:	loop   0x40b915
  40b896:	pop    esp
  40b897:	sub    BYTE PTR [edi],ch
  40b899:	mov    bh,0x36
  40b89b:	or     ecx,DWORD PTR [esp+edi*1+0x3f18d9bc]
  40b8a2:	mov    WORD PTR [ecx],cs
  40b8a4:	mov    eax,ds:0x93df80b0
  40b8a9:	hlt    
  40b8aa:	out    dx,al
  40b8ab:	call   0x932c:0x61af4ac1
  40b8b2:	push   esp
  40b8b3:	xchg   dh,ch
  40b8b5:	add    ebp,edi
  40b8b7:	bound  esi,QWORD PTR [eax]
  40b8b9:	jb     0x40b927
  40b8bb:	popf   
  40b8bc:	sar    BYTE PTR [esi],cl
  40b8be:	sub    BYTE PTR [ebp-0x60],ch
  40b8c1:	mov    al,ds:0xfbba430e
  40b8c6:	xor    eax,0x32530b6c
  40b8cb:	push   esi
  40b8cc:	mov    ebp,0xe63ba29f
  40b8d1:	sub    DWORD PTR [ebx+0x3d6d965a],eax
  40b8d7:	aas    
  40b8d8:	je     0x40b90e
  40b8da:	inc    edi
  40b8db:	sbb    al,0xf6
  40b8dd:	push   ebx
  40b8de:	out    dx,al
  40b8df:	mov    ds:0xc0717163,eax
  40b8e4:	mov    ds:0xc295083a,al
  40b8e9:	mul    DWORD PTR [eax+0x477af7fa]
  40b8ef:	and    eax,0xe2a3f835
  40b8f4:	mov    edx,0x259c256a
  40b8f9:	xchg   DWORD PTR [edi],ebx
  40b8fb:	(bad)  [ebx+0x72db443f]
  40b901:	jecxz  0x40b8b8
  40b903:	paddusb mm3,QWORD PTR [ecx-0x1e]
  40b907:	or     BYTE PTR [eax-0x33e6090b],cl
  40b90d:	ret    0x7088
  40b910:	pop    eax
  40b911:	adc    al,0x5e
  40b913:	mov    edi,0x9ff383ba
  40b918:	xchg   ebp,eax
  40b919:	pop    edx
  40b91a:	(bad)  
  40b91b:	dec    esp
  40b91c:	fisubr WORD PTR [ecx+0xc1a3c86]
  40b922:	pop    es
  40b923:	inc    esp
  40b924:	push   ebp
  40b925:	or     BYTE PTR [ecx],dl
  40b927:	addr16 in eax,dx
  40b929:	outs   dx,BYTE PTR ds:[esi]
  40b92a:	enter  0x726a,0x3a
  40b92e:	shl    DWORD PTR [edi],cl
  40b930:	xor    esp,esp
  40b932:	mov    esp,0x599f5ec4
  40b937:	add    cl,BYTE PTR [eax]
  40b939:	push   ss
  40b93a:	mov    edi,0x9d1f9af8
  40b93f:	mov    al,BYTE PTR [edx-0xc9adf45]
  40b945:	ds cli 
  40b947:	fiadd  WORD PTR [eax]
  40b949:	adc    dh,BYTE PTR [edx]
  40b94b:	jno    0x40b9c7
  40b94d:	adc    al,0x30
  40b94f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b950:	or     eax,0x994e0e3a
  40b955:	mov    ebp,0x3aa68f71
  40b95a:	sbb    BYTE PTR [edi-0x22],al
  40b95d:	dec    esp
  40b95e:	push   cs
  40b95f:	mov    al,ds:0xc67645aa
  40b964:	ror    BYTE PTR [ecx+0x23dfe8a0],1
  40b96a:	div    BYTE PTR [esi-0x3aecca8d]
  40b970:	push   0x6b
  40b972:	icebp  
  40b973:	pop    esi
  40b974:	popf   
  40b975:	xchg   edx,eax
  40b976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b977:	or     bh,BYTE PTR ds:0x9171d441
  40b97d:	mov    eax,ds:0x36e0837f
  40b982:	adc    al,0xa0
  40b984:	leave  
  40b985:	xchg   edi,eax
  40b986:	jl     0x40b9fe
  40b988:	pop    esi
  40b989:	adc    DWORD PTR ss:[ebp-0x39],eax
  40b98d:	cmp    bh,al
  40b98f:	aam    0x32
  40b991:	mov    es,WORD PTR [eax+esi*8]
  40b994:	stos   BYTE PTR es:[edi],al
  40b995:	xor    eax,0xed0ca233
  40b99a:	adc    eax,0x94addd82
  40b99f:	dec    ebx
  40b9a0:	mov    ds:0x1ee13dab,eax
  40b9a5:	adc    BYTE PTR [edi+ebx*8-0x44],0x20
  40b9aa:	sbb    bh,BYTE PTR [edx-0x61]
  40b9ad:	mov    al,ds:0xec7ed0e0
  40b9b2:	sub    BYTE PTR [ebx],ch
  40b9b4:	sbb    DWORD PTR [ecx-0x1f],ebp
  40b9b7:	jno    0x40b9ea
  40b9b9:	faddp  st(2),st
  40b9bb:	xor    BYTE PTR [eax+0x52],0x55
  40b9bf:	clc    
  40b9c0:	or     al,0x3b
  40b9c2:	jmp    0x6a340f06
  40b9c7:	repnz fcomp QWORD PTR [eax-0x24]
  40b9cb:	aam    0x9
  40b9cd:	call   0x4d1f7c07
  40b9d2:	idiv   DWORD PTR ds:0xacaf7f92
  40b9d8:	pop    esp
  40b9d9:	xor    dl,ch
  40b9db:	(bad)
  40b9de:	sub    edi,DWORD PTR [ebx-0x71]
  40b9e1:	cmp    esp,DWORD PTR [edx+0x74]
  40b9e4:	aaa    
  40b9e5:	xchg   ebp,eax
  40b9e6:	xor    eax,0x9646f5fd
  40b9eb:	loope  0x40ba20
  40b9ed:	pop    cx
  40b9ef:	dec    ebx
  40b9f0:	test   al,0xc
  40b9f2:	rol    DWORD PTR cs:[esi+ebx*1],cl
  40b9f6:	ret    0x7492
  40b9f9:	test   eax,0x3a1005b5
  40b9fe:	scas   al,BYTE PTR es:[edi]
  40b9ff:	adc    BYTE PTR [ecx+0x36f3718],dh
  40ba05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba06:	xor    ebp,DWORD PTR [ecx+edx*8+0x2e]
  40ba0a:	call   0xfa1a7c10
  40ba0f:	push   ebp
  40ba10:	js     0x40b9a0
  40ba12:	cmp    BYTE PTR [ebx-0x19],ch
  40ba15:	sub    BYTE PTR [ecx+0x3a],0xb4
  40ba19:	jbe    0x40ba31
  40ba1b:	stos   DWORD PTR es:[edi],eax
  40ba1c:	mov    ds:0xe78e4507,al
  40ba21:	push   ebp
  40ba22:	jb     0x40ba6e
  40ba24:	pop    ebp
  40ba25:	mov    BYTE PTR [ecx-0x79],bl
  40ba28:	(bad)  
  40ba29:	pushf  
  40ba2a:	pop    eax
  40ba2b:	imul   esi,ecx,0xedd480e1
  40ba31:	les    esp,FWORD PTR [edi]
  40ba33:	push   0x55653c1d
  40ba38:	imul   edx,DWORD PTR [ecx-0x74],0xffffffee
  40ba3c:	xchg   edi,eax
  40ba3d:	pop    ebp
  40ba3e:	lahf   
  40ba3f:	icebp  
  40ba40:	jmp    0x8803c140
  40ba45:	push   edi
  40ba46:	pusha  
  40ba47:	lea    edx,[esi+eax*8+0x3]
  40ba4b:	or     dl,BYTE PTR [esi]
  40ba4d:	lods   al,BYTE PTR ds:[esi]
  40ba4e:	adc    dl,BYTE PTR [eax]
  40ba50:	icebp  
  40ba51:	mov    ecx,0xb5652812
  40ba56:	pop    ds
  40ba57:	stc    
  40ba58:	xor    al,0xb4
  40ba5a:	sbb    DWORD PTR [edx-0x41],esi
  40ba5d:	xchg   ecx,eax
  40ba5e:	sbb    al,0x85
  40ba60:	popa   
  40ba61:	add    eax,0xb422350b
  40ba66:	shl    BYTE PTR [ecx],1
  40ba68:	test   DWORD PTR [esi+0x2e2488b0],ecx
  40ba6e:	cwde   
  40ba6f:	pop    ebx
  40ba70:	cmp    DWORD PTR [esi-0x5a6c0ec4],esp
  40ba76:	cld    
  40ba77:	pop    edx
  40ba78:	(bad)  
  40ba79:	cwde   
  40ba7a:	mov    eax,ds:0x21187539
  40ba7f:	ret    
  40ba80:	push   ecx
  40ba81:	push   es
  40ba82:	pop    ebx
  40ba83:	push   esp
  40ba84:	xor    al,0x15
  40ba86:	mov    al,0x36
  40ba88:	ds mov esi,0x4b819611
  40ba8f:	push   0x12
  40ba91:	(bad)  
  40ba92:	fwait
  40ba93:	test   BYTE PTR [ecx+0x73],0xcf
  40ba97:	add    BYTE PTR [edi+0x42],0x6c
  40ba9b:	cmp    ecx,esp
  40ba9d:	out    0x5e,al
  40ba9f:	jge    0x57b3fd0b
  40baa5:	jae    0x40ba32
  40baa7:	stos   BYTE PTR es:[edi],al
  40baa8:	sbb    edx,DWORD PTR [eax]
  40baaa:	faddp  st(3),st
  40baac:	out    0x2,eax
  40baae:	adc    ebp,esp
  40bab0:	mov    dh,0x78
  40bab2:	out    0x3d,eax
  40bab4:	js     0x40ba3b
  40bab6:	arpl   WORD PTR [eax],bp
  40bab8:	push   cs
  40bab9:	or     DWORD PTR [edi+0x25],esp
  40babc:	jmp    0x3276:0x7c08c0a3
  40bac3:	(bad)  
  40bac4:	fadd   QWORD PTR [edi+0x1c]
  40bac7:	xchg   BYTE PTR [esi+esi*4+0x44],bl
  40bacb:	jmp    0xe62d06d
  40bad0:	cli    
  40bad1:	mov    ebp,0xa7611cc2
  40bad6:	add    eax,0xa28516cf
  40badb:	(bad)  
  40badd:	inc    ecx
  40bade:	and    al,0x1b
  40bae0:	and    al,0x27
  40bae2:	mov    ?,WORD PTR [eax+0x321986b7]
  40bae8:	js     0x40bb00
  40baea:	mov    WORD PTR [ebx+0x69995916],es
  40baf0:	cmp    al,BYTE PTR [ecx]
  40baf2:	push   edi
  40baf3:	not    bl
  40baf5:	lea    ebp,[edi+0x66]
  40baf8:	inc    ebx
  40baf9:	stc    
  40bafa:	sub    BYTE PTR [ebx],ch
  40bafc:	or     BYTE PTR [esi-0x39610633],al
  40bb02:	and    dl,dh
  40bb04:	fs jns 0x40bb2c
  40bb07:	arpl   si,di
  40bb09:	cmp    eax,0x969aa6b6
  40bb0e:	loopne 0x40bb57
  40bb10:	sbb    BYTE PTR [ebp+0x36],cl
  40bb13:	(bad)  
  40bb14:	push   edx
  40bb15:	push   eax
  40bb16:	retf   0x8e5c
  40bb19:	xor    bp,WORD PTR [eax]
  40bb1c:	inc    ebx
  40bb1d:	and    eax,0xa4c33fee
  40bb22:	push   es
  40bb23:	(bad)  [esi]
  40bb25:	ja     0x40bb7b
  40bb27:	xchg   ebp,eax
  40bb28:	mov    ah,0xee
  40bb2a:	xor    eax,0x7d37a899
  40bb2f:	das    
  40bb30:	data16 rep stos BYTE PTR es:[edi],al
  40bb33:	add    esp,edi
  40bb35:	lods   al,BYTE PTR ds:[esi]
  40bb36:	dec    edx
  40bb37:	loopne 0x40babe
  40bb39:	sahf   
  40bb3a:	xchg   ecx,eax
  40bb3b:	mov    ebp,0x6b65aa19
  40bb40:	xor    eax,DWORD PTR [ebx+ebp*4-0x26]
  40bb44:	repnz scas al,BYTE PTR es:[edi]
  40bb46:	lds    ebx,FWORD PTR [ecx]
  40bb48:	out    0x5,al
  40bb4a:	int    0x2a
  40bb4c:	(bad)  
  40bb4d:	sahf   
  40bb4e:	inc    edx
  40bb4f:	(bad)  
  40bb51:	call   FWORD PTR [esi+eiz*2+0x2a]
  40bb55:	fmul   QWORD PTR [eax+0x34]
  40bb58:	lahf   
  40bb59:	ror    ecx,1
  40bb5b:	xor    eax,0x463e9acd
  40bb60:	ss mov ah,0xf5
  40bb63:	std    
  40bb64:	add    BYTE PTR [ebx-0x2f68dc82],bh
  40bb6a:	sbb    ch,cl
  40bb6c:	fld    TBYTE PTR [edx+0x5bc847d9]
  40bb72:	pop    esi
  40bb73:	jmp    0x40bbb8
  40bb75:	mov    eax,0x86c8aa70
  40bb7a:	xchg   esi,eax
  40bb7b:	pop    ds
  40bb7c:	cmp    cl,0x39
  40bb7f:	cli    
  40bb80:	push   edx
  40bb81:	mov    dh,0x4
  40bb83:	sbb    DWORD PTR [ebp-0x2f],ebx
  40bb86:	push   es
  40bb87:	jns    0x40bbcd
  40bb89:	add    eax,edx
  40bb8b:	adc    DWORD PTR [edi-0x44],0xffffffcd
  40bb8f:	repnz cld 
  40bb91:	std    
  40bb92:	shl    DWORD PTR ds:0x654ed7f4,cl
  40bb98:	enter  0xf121,0x28
  40bb9c:	dec    eax
  40bb9d:	dec    esp
  40bb9e:	push   ebp
  40bb9f:	jp     0x40bbcb
  40bba1:	fcom   DWORD PTR [edx]
  40bba3:	jno    0x40bb37
  40bba5:	push   edx
  40bba6:	cmp    DWORD PTR [ecx+0x32a01307],0x7b
  40bbad:	test   eax,0xf8cbde8
  40bbb2:	and    DWORD PTR [eax],ecx
  40bbb4:	jg     0x40bbbd
  40bbb6:	ins    DWORD PTR es:[edi],dx
  40bbb7:	jbe    0x40bbb8
  40bbb9:	and    BYTE PTR [eax-0x77],bh
  40bbbc:	push   0x1b
  40bbbe:	add    edx,eax
  40bbc0:	retf   
  40bbc1:	xchg   esi,eax
  40bbc2:	in     al,0x4f
  40bbc4:	push   ss
  40bbc5:	push   ss
  40bbc6:	data16 es scas al,BYTE PTR es:[edi]
  40bbc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbca:	xor    edx,ebp
  40bbcc:	sub    DWORD PTR [esi],ebp
  40bbce:	mov    DWORD PTR [edi+0x66357656],ecx
  40bbd4:	add    DWORD PTR [ebx+0x52],esp
  40bbd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbd8:	mov    dh,0x1b
  40bbda:	cmp    eax,0x2a8f5a96
  40bbdf:	stos   DWORD PTR es:[edi],eax
  40bbe0:	ficom  DWORD PTR [eax-0x62]
  40bbe3:	out    0x94,eax
  40bbe5:	jb     0x40bbb9
  40bbe7:	mov    BYTE PTR [eax-0x51],cl
  40bbea:	imul   ebx,DWORD PTR [edi-0x4a],0x56
  40bbee:	sar    DWORD PTR [ecx+0x2b],1
  40bbf1:	js     0x40bc6d
  40bbf3:	jg     0x40bb76
  40bbf5:	xor    BYTE PTR [eax],ah
  40bbf7:	retf   
  40bbf8:	pop    ebx
  40bbf9:	rcr    BYTE PTR [edi-0x4],0x28
  40bbfd:	std    
  40bbfe:	mov    ebp,0xeb67d64e
  40bc03:	sub    DWORD PTR [edx],0xee4e323a
  40bc09:	push   edi
  40bc0a:	test   al,0x93
  40bc0c:	retf   
  40bc0d:	mov    dl,0xb
  40bc0f:	popa   
  40bc10:	xlat   BYTE PTR ds:[ebx]
  40bc11:	pop    esi
  40bc12:	mov    DWORD PTR [esi-0x5b],esp
  40bc15:	dec    ebp
  40bc16:	enter  0x38a,0x6f
  40bc1a:	cld    
  40bc1b:	daa    
  40bc1c:	add    al,0x4c
  40bc1e:	inc    DWORD PTR [ecx]
  40bc20:	call   0x227b2185
  40bc25:	repz fld TBYTE PTR [edx+0xd]
  40bc29:	addr16 pop es
  40bc2b:	push   ds
  40bc2c:	inc    edx
  40bc2d:	push   ebp
  40bc2e:	jp     0x40bbf2
  40bc30:	push   ds
  40bc31:	aam    0xd6
  40bc33:	push   ds
  40bc34:	mov    ch,0x3e
  40bc36:	outs   dx,DWORD PTR ds:[esi]
  40bc37:	inc    edx
  40bc38:	push   ebx
  40bc39:	adc    DWORD PTR [edi],esi
  40bc3b:	call   0xf29a:0xe40a7b1
  40bc42:	imul   eax,DWORD PTR [eax+0x6e8fa5fc],0x5f
  40bc49:	addr16 inc esi
  40bc4b:	sub    ecx,DWORD PTR [edx+0x3021b8d0]
  40bc51:	lock pop eax
  40bc53:	stos   WORD PTR es:[edi],ax
  40bc55:	test   eax,0x70bbc806
  40bc5a:	leave  
  40bc5b:	push   esi
  40bc5c:	ja     0x40bc8d
  40bc5e:	cmp    esp,DWORD PTR [ebp+0x53]
  40bc61:	call   0xc60cd63b
  40bc66:	dec    ebx
  40bc67:	mov    dl,0xb7
  40bc69:	pop    ecx
  40bc6a:	mov    DWORD PTR [edi-0xb],edx
  40bc6d:	mov    eax,ds:0x7fdc02cd
  40bc72:	fisttp QWORD PTR [ebx+0x3c]
  40bc75:	jne    0x40bc12
  40bc77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc79:	ret    
  40bc7a:	add    dh,BYTE PTR [ecx]
  40bc7c:	pop    es
  40bc7d:	fild   DWORD PTR [edx-0x7b760c71]
  40bc83:	mov    ebx,edi
  40bc85:	hlt    
  40bc86:	mov    WORD PTR [edi+0x6e42f8a7],fs
  40bc8c:	out    0xc5,al
  40bc8e:	cmp    DWORD PTR [esi-0x1b],edx
  40bc91:	stos   DWORD PTR es:[edi],eax
  40bc92:	pop    ebx
  40bc93:	inc    esp
  40bc94:	popa   
  40bc95:	shl    BYTE PTR [ebx+0x6b5fb31b],cl
  40bc9b:	cmp    al,0x6e
  40bc9d:	sti    
  40bc9e:	enter  0xcad7,0x2d
  40bca2:	sahf   
  40bca3:	jae    0x40bd19
  40bca5:	rcl    ch,0xb8
  40bca8:	out    dx,eax
  40bca9:	sti    
  40bcaa:	cmp    dl,al
  40bcac:	scas   eax,DWORD PTR es:[edi]
  40bcad:	mov    ds:0x437bbb0f,al
  40bcb2:	pop    ds
  40bcb3:	mov    ah,BYTE PTR [ecx-0x30]
  40bcb6:	stc    
  40bcb7:	xchg   ecx,eax
  40bcb8:	icebp  
  40bcb9:	cmp    al,0xde
  40bcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcbc:	mov    al,0xd5
  40bcbe:	mov    bl,0x59
  40bcc1:	push   ss
  40bcc2:	fst    DWORD PTR [edx]
  40bcc4:	mov    bh,0xff
  40bcc6:	pushf  
  40bcc7:	leave  
  40bcc8:	std    
  40bcc9:	ds sar bl,0xab
  40bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcce:	push   esp
  40bccf:	jmp    0xce8a:0xbc67fc08
  40bcd6:	rcr    BYTE PTR [ecx+edx*1+0x3d],cl
  40bcda:	adc    eax,0xecf679c
  40bcdf:	nop
  40bce0:	addr16 popa 
  40bce2:	ds push es
  40bce4:	pop    ebp
  40bce5:	mov    DWORD PTR [edx+0x4dcadcfe],esi
  40bceb:	jnp    0x40bcc2
  40bced:	push   ecx
  40bcee:	push   eax
  40bcef:	mov    ch,0x20
  40bcf1:	inc    eax
  40bcf2:	mov    bl,0x54
  40bcf4:	dec    ebp
  40bcf5:	pop    edi
  40bcf6:	ficom  DWORD PTR [eax-0x7a5d3bd5]
  40bcfc:	in     eax,0xfe
  40bcfe:	dec    ebx
  40bcff:	add    edx,DWORD PTR [ebx]
  40bd01:	adc    BYTE PTR [ecx],dl
  40bd03:	jmp    0x6f68:0xe16b924c
  40bd0a:	xchg   esi,eax
  40bd0b:	sar    DWORD PTR [ebx+0x26],cl
  40bd0e:	lods   al,BYTE PTR ds:[esi]
  40bd0f:	out    dx,al
  40bd10:	nop
  40bd11:	xchg   ebp,eax
  40bd12:	pop    ebx
  40bd13:	mov    ebp,0xc5981805
  40bd18:	outs   dx,DWORD PTR ds:[esi]
  40bd19:	push   ebp
  40bd1a:	call   0xcfc32061
  40bd1f:	mov    ds:0xaf7eaf14,al
  40bd24:	fidivr DWORD PTR [esi-0x746b6c01]
  40bd2a:	mov    edi,cs
  40bd2c:	dec    ecx
  40bd2d:	sbb    esp,DWORD PTR ds:0xe28c4685
  40bd33:	lea    esp,[ebx+0x4]
  40bd36:	pop    eax
  40bd37:	adc    al,BYTE PTR [eax-0xf5fb3d5]
  40bd3d:	out    0x86,eax
  40bd3f:	test   edi,eax
  40bd41:	jp     0x40bd2a
  40bd43:	mov    ebp,0xbd6555fa
  40bd48:	(bad)  
  40bd49:	cmp    DWORD PTR [esi+0xe],ebx
  40bd4c:	mov    edi,0x3af0ad80
  40bd51:	push   es
  40bd52:	push   edx
  40bd53:	push   edx
  40bd54:	js     0x40bd9c
  40bd56:	pop    edi
  40bd57:	pop    edx
  40bd58:	push   es
  40bd59:	inc    edi
  40bd5a:	jmp    0x40bdc3
  40bd5c:	sahf   
  40bd5d:	stc    
  40bd5e:	dec    edi
  40bd5f:	dec    edx
  40bd60:	inc    esi
  40bd61:	loop   0x40bd95
  40bd63:	adc    al,BYTE PTR [edi+0x6edbac86]
  40bd69:	or     bl,bh
  40bd6b:	inc    esp
  40bd6c:	hlt    
  40bd6d:	ja     0x40bd09
  40bd6f:	or     edi,DWORD PTR [eax-0x64b0ac9e]
  40bd75:	iret   
  40bd76:	mov    edi,0x20516656
  40bd7b:	and    BYTE PTR [ebp+0xd556f6f],bh
  40bd81:	dec    ebp
  40bd82:	aad    0x96
  40bd84:	xor    BYTE PTR [esi+0x35],al
  40bd87:	jne    0x40bd8a
  40bd89:	inc    edi
  40bd8a:	test   al,0x63
  40bd8c:	fdiv   DWORD PTR [edi]
  40bd8e:	popf   
  40bd8f:	int3   
  40bd90:	jle    0x40bdd0
  40bd92:	sbb    BYTE PTR [edx+edx*1-0x19],dh
  40bd96:	xor    eax,0x3f28edcc
  40bd9b:	stos   BYTE PTR es:[edi],al
  40bd9c:	jmp    0xc45f:0x8359a57
  40bda3:	cs xor edi,ebx
  40bda6:	ins    DWORD PTR es:[edi],dx
  40bda7:	and    dh,0xc0
  40bdaa:	cs mov ecx,0xca71ae9c
  40bdb0:	push   esi
  40bdb1:	adc    DWORD PTR [ecx],0xfffffffc
  40bdb4:	fstp   TBYTE PTR ds:0xa4abeebe
  40bdba:	push   cs
  40bdbb:	sub    BYTE PTR [ecx+0x22],dh
  40bdbe:	xor    al,0x49
  40bdc0:	inc    esp
  40bdc1:	mov    cl,0x11
  40bdc3:	and    BYTE PTR [esi-0x44365af8],bl
  40bdc9:	inc    esi
  40bdca:	je     0x40bd67
  40bdcc:	test   BYTE PTR [ebp+0x53],0x77
  40bdd0:	aaa    
  40bdd1:	fidiv  DWORD PTR [edi-0x21]
  40bdd4:	hlt    
  40bdd5:	(bad)  
  40bdd7:	xchg   esi,eax
  40bdd8:	lock pop edi
  40bdda:	add    cl,dh
  40bddc:	jno    0x40bde7
  40bdde:	fsubr  st,st(4)
  40bde0:	sahf   
  40bde1:	pop    ss
  40bde2:	imul   BYTE PTR [eax+0x6d]
  40bde5:	test   BYTE PTR [edi+0x3b],dh
  40bde8:	cmp    al,0xc4
  40bdea:	sbb    ch,BYTE PTR [edx+0x4e]
  40bded:	jp     0x40be20
  40bdef:	jge    0x40bd8e
  40bdf1:	jmp    0x5dd9:0xd94aa7b
  40bdf8:	sub    esi,DWORD PTR [edx+0x42cfa03f]
  40bdfe:	pop    ds
  40bdff:	sbb    eax,0x21773506
  40be04:	(bad)  
  40be05:	push   cs
  40be06:	xor    al,0xa2
  40be08:	ffreep st(4)
  40be0a:	jb     0x40bd8e
  40be0c:	pop    esi
  40be0d:	or     bh,BYTE PTR [eax]
  40be0f:	jg     0x40be61
  40be11:	xchg   esi,eax
  40be12:	inc    ecx
  40be13:	inc    esp
  40be14:	sub    edi,DWORD PTR [edi+eax*2]
  40be17:	pop    eax
  40be18:	dec    eax
  40be19:	std    
  40be1a:	mov    ch,0xba
  40be1c:	imul   esi,DWORD PTR [ebx+0xa33ff5b],0x28
  40be23:	sub    eax,0xd47e3cce
  40be28:	imul   ecx,ebx,0x74
  40be2b:	mov    esp,?
  40be2d:	pusha  
  40be2e:	in     eax,0xb9
  40be30:	jge    0x40be9d
  40be32:	push   eax
  40be33:	mov    ah,0xd3
  40be35:	cmp    BYTE PTR [edx],0x59
  40be38:	fnstenv [ecx-0x5d93afd8]
  40be3e:	push   ebx
  40be3f:	loopne 0x40bdd6
  40be41:	outs   dx,BYTE PTR ds:[esi]
  40be42:	push   DWORD PTR [ebp+edi*4+0x1]
  40be46:	clc    
  40be47:	pop    ebx
  40be48:	fisub  WORD PTR [ebp+0x5405cc88]
  40be4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be4f:	cmc    
  40be50:	mov    ebp,0xe575dfe3
  40be55:	push   es
  40be56:	push   esi
  40be57:	in     eax,dx
  40be58:	jno    0x40bdf5
  40be5a:	call   0xe5a116e0
  40be5f:	out    dx,eax
  40be60:	div    BYTE PTR [ecx]
  40be62:	add    DWORD PTR [edi-0x771bed6d],ecx
  40be68:	xor    al,0xb2
  40be6a:	jns    0x40bded
  40be6c:	dec    ebx
  40be6d:	mov    cl,0xef
  40be6f:	into   
  40be70:	mov    dl,0x7c
  40be72:	js     0x40be9f
  40be74:	(bad)  
  40be75:	ret    
  40be76:	mov    bh,0xe4
  40be78:	popa   
  40be79:	icebp  
  40be7a:	mov    WORD PTR [ecx+ecx*1+0x3e],?
  40be7e:	adc    eax,0x8e4c4a5d
  40be83:	mov    ch,0x6a
  40be85:	cs stos DWORD PTR es:[edi],eax
  40be87:	imul   eax,DWORD PTR [ebp-0x4933c4b3],0x9c80b3
  40be91:	pop    ebx
  40be92:	rcl    DWORD PTR [edx+eax*4+0xc7e93ab],cl
  40be99:	pop    esp
  40be9a:	cs cmp ebp,esp
  40be9d:	aas    
  40be9e:	jl     0x40beba
  40bea0:	dec    ecx
  40bea1:	mov    ds:0x91471689,al
  40bea6:	aad    0x5f
  40bea8:	and    edi,DWORD PTR [ebx]
  40beaa:	ja     0x40beee
  40beac:	dec    edi
  40bead:	or     DWORD PTR [edi],0x5c6e8d26
  40beb3:	popa   
  40beb4:	adc    BYTE PTR [edx+esi*4-0x77],ch
  40beb8:	int3   
  40beb9:	adc    ebx,DWORD PTR [ebp+0x6b018dea]
  40bebf:	adc    ah,BYTE PTR [eax+0x69e5e5a7]
  40bec5:	adc    al,0x53
  40bec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec8:	dec    esi
  40bec9:	cmp    eax,0x4bf3990f
  40bece:	in     al,dx
  40becf:	and    al,bh
  40bed1:	call   0xb759:0xbb9ec43
  40bed8:	and    BYTE PTR [ebp+esi*8-0x44],0xf6
  40bedd:	dec    esi
  40bede:	or     DWORD PTR [ecx+0x475c6722],0xd8f139
  40bee8:	leave  
  40bee9:	call   0xa7d3:0xe7e96c88
  40bef0:	hlt    
  40bef1:	mov    ah,0x78
  40bef3:	mov    dh,0xb0
  40bef5:	ss pop edi
  40bef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef8:	sub    ecx,ebx
  40befa:	fwait
  40befb:	pop    es
  40befc:	lahf   
  40befd:	dec    eax
  40befe:	repz or BYTE PTR [eax-0x5391c2a4],cl
  40bf05:	xor    eax,0xf44abaca
  40bf0a:	retf   
  40bf0b:	ss daa 
  40bf0d:	xor    BYTE PTR [ebx-0x72],0x46
  40bf11:	pop    DWORD PTR [eax-0x47fefdc1]
  40bf17:	pop    es
  40bf18:	mov    eax,0x244aae80
  40bf1d:	daa    
  40bf1e:	adc    BYTE PTR [edx+0x7c3b0e99],bl
  40bf24:	ror    BYTE PTR [edi-0x9],cl
  40bf27:	out    0xda,eax
  40bf29:	fs call 0xce6a:0x6fed0fbc
  40bf31:	pop    es
  40bf32:	dec    ebp
  40bf33:	pop    esi
  40bf34:	sbb    BYTE PTR [ebx+0x8925859],bl
  40bf3a:	jle    0x40bf73
  40bf3c:	icebp  
  40bf3d:	mov    DWORD PTR [edi+0x6c3bcefa],ebx
  40bf43:	iret   
  40bf44:	aaa    
  40bf45:	cwde   
  40bf46:	or     al,0x31
  40bf48:	mov    edi,0x8538a2cf
  40bf4d:	mov    WORD PTR [ebx+0x1d632478],es
  40bf53:	in     eax,0x41
  40bf55:	aas    
  40bf56:	test   ecx,esi
  40bf58:	xor    dl,al
  40bf5a:	sbb    al,0x2a
  40bf5c:	outs   dx,BYTE PTR ds:[esi]
  40bf5d:	inc    ebx
  40bf5e:	xlat   BYTE PTR fs:[ebx]
  40bf60:	or     BYTE PTR [ecx+0x17],bl
  40bf63:	fsub   DWORD PTR [ebp-0x3e972d2a]
  40bf69:	test   eax,0x32fd2eb8
  40bf6e:	adc    BYTE PTR [esi+0x6c],ch
  40bf71:	pop    ebp
  40bf72:	retf   0x710b
  40bf75:	les    edx,FWORD PTR [eax]
  40bf77:	pusha  
  40bf78:	inc    ecx
  40bf79:	inc    ebx
  40bf7a:	inc    edi
  40bf7b:	push   ds
  40bf7c:	xchg   edi,eax
  40bf7d:	dec    eax
  40bf7e:	ins    BYTE PTR es:[edi],dx
  40bf7f:	xchg   BYTE PTR [eax+0x78],ch
  40bf82:	lock dec ecx
  40bf84:	and    edi,DWORD PTR [ebx]
  40bf86:	pop    ecx
  40bf87:	(bad)  
  40bf88:	outs   dx,DWORD PTR ds:[esi]
  40bf89:	mov    bh,0x3f
  40bf8b:	dec    ebx
  40bf8c:	out    0xdc,al
  40bf8e:	in     eax,0xc5
  40bf90:	(bad)  
  40bf91:	cld    
  40bf92:	call   0x92f65986
  40bf97:	jb     0x40bf30
  40bf99:	lods   eax,DWORD PTR ds:[esi]
  40bf9a:	xor    cl,BYTE PTR [edx]
  40bf9c:	retf   0xaa70
  40bf9f:	jle    0x40bfc3
  40bfa1:	jge    0x40bffe
  40bfa3:	call   0x8ddd3eaf
  40bfa8:	adc    DWORD PTR [edi+0x5e027633],eax
  40bfae:	and    dl,dh
  40bfb0:	add    ah,BYTE PTR [edx]
  40bfb2:	sub    DWORD PTR [ebx-0x13],eax
  40bfb5:	inc    eax
  40bfb6:	cmp    DWORD PTR [ecx],ecx
  40bfb8:	pop    eax
  40bfb9:	(bad)  
  40bfba:	ss xor cl,0xe2
  40bfbe:	test   BYTE PTR [ebp+0x4b],dl
  40bfc1:	xor    esp,DWORD PTR [ebx]
  40bfc3:	loopne 0x40bff3
  40bfc5:	test   eax,0xf8681c4d
  40bfca:	ror    BYTE PTR [edx-0x48381d36],0x89
  40bfd1:	clc    
  40bfd2:	je     0x40bfcd
  40bfd4:	lea    ecx,[ecx-0x1844dc78]
  40bfda:	sahf   
  40bfdb:	cmp    BYTE PTR [esi+0x1],dl
  40bfde:	push   0xffffffdb
  40bfe0:	mov    esi,0xf9c08fd1
  40bfe5:	imul   ecx,ecx,0xffffff8c
  40bfe8:	mov    al,0x7c
  40bfea:	jp     0x40bff2
  40bfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfed:	in     al,0x98
  40bfef:	mov    al,ds:0x26f0385e
  40bff4:	adc    ebp,DWORD PTR [esi-0x2c]
  40bff7:	ja     0x40c012
  40bff9:	test   al,0x9e
  40bffb:	sub    eax,DWORD PTR [ebx+ebx*1-0x73]
  40bfff:	push   edi
  40c000:	inc    ebp
  40c001:	call   0x574611a7
  40c006:	stc    
  40c007:	adc    dl,al
  40c009:	mov    eax,ds:0x9f08d318
  40c00e:	cmp    DWORD PTR [ebx+0x40bd2a0f],esi
  40c014:	xor    bl,dh
  40c016:	ror    DWORD PTR [ecx],0xda
  40c019:	mov    ecx,0xd7721f1f
  40c01e:	sub    bl,0x69
  40c021:	pop    ecx
  40c022:	push   0x65
  40c024:	ret    0x57c1
  40c027:	mov    DWORD PTR [ecx-0x46fe7fda],ebp
  40c02d:	retf   0xf561
  40c030:	cmp    ebx,DWORD PTR [ecx+esi*1]
  40c033:	lds    esi,FWORD PTR [esp+eax*1+0x49]
  40c037:	call   0xea5a2526
  40c03c:	push   ds
  40c03d:	das    
  40c03e:	sub    edi,DWORD PTR [ebx]
  40c040:	imul   DWORD PTR [ebp-0x24]
  40c043:	push   es
  40c044:	mov    ecx,0xba9ebae8
  40c049:	mov    esp,0x13b73af9
  40c04e:	jbe    0x40c0b3
  40c050:	shr    BYTE PTR [ecx-0x5e],1
  40c053:	call   0x2b706d35
  40c058:	daa    
  40c059:	mov    al,ds:0x20f6592c
  40c05e:	inc    BYTE PTR [esi-0x2399efc3]
  40c064:	add    edi,DWORD PTR [ecx]
  40c066:	stc    
  40c067:	jl     0x40c03d
  40c069:	jbe    0x40c0b9
  40c06b:	rcr    BYTE PTR [edx-0x1f],cl
  40c06e:	and    al,0xa3
  40c070:	push   0xffffff9f
  40c072:	sub    al,0xaa
  40c074:	cmp    ch,BYTE PTR [esi+ecx*4]
  40c077:	fistp  WORD PTR [eax-0xd]
  40c07a:	pop    es
  40c07b:	xchg   edi,eax
  40c07c:	mov    bh,0x44
  40c07e:	adc    ecx,DWORD PTR [edi-0x1c]
  40c081:	and    BYTE PTR [edi-0x53],al
  40c084:	in     eax,0x1c
  40c086:	xchg   DWORD PTR [ecx+0x6b],esp
  40c089:	dec    ebp
  40c08a:	sbb    BYTE PTR [ecx+0x37efec5c],bh
  40c090:	cmp    edi,DWORD PTR [edi]
  40c092:	popf   
  40c093:	inc    edi
  40c094:	push   edi
  40c095:	pushf  
  40c096:	test   DWORD PTR [esp+eax*2-0x14],esi
  40c09a:	mov    DWORD PTR [ebp+0x415f587b],edx
  40c0a0:	cmc    
  40c0a1:	test   BYTE PTR ds:0xb9e26123,bh
  40c0a7:	pop    ds
  40c0a8:	cld    
  40c0a9:	jecxz  0x40c082
  40c0ab:	sub    eax,0x91e9a264
  40c0b0:	pushf  
  40c0b1:	inc    eax
  40c0b2:	cdq    
  40c0b3:	scas   al,BYTE PTR es:[edi]
  40c0b4:	inc    edx
  40c0b5:	and    BYTE PTR [eax-0x6],ah
  40c0b8:	(bad)  
  40c0b9:	je     0x40c0ee
  40c0bb:	or     DWORD PTR ds:0x90936b06,ebp
  40c0c1:	sbb    eax,0x19ffb6ef
  40c0c6:	mov    ah,0x7f
  40c0c8:	cmp    ecx,DWORD PTR [ebx+0x7eba92b3]
  40c0ce:	inc    eax
  40c0cf:	add    dh,BYTE PTR [ebp+0x5f]
  40c0d2:	pop    esi
  40c0d3:	cdq    
  40c0d4:	and    ebp,edx
  40c0d6:	cmp    al,0x25
  40c0d8:	adc    DWORD PTR [ebp+ebp*4+0x7d677478],eax
  40c0df:	aas    
  40c0e0:	fwait
  40c0e1:	add    al,0x7c
  40c0e3:	dec    esi
  40c0e4:	and    al,0xe8
  40c0e6:	sahf   
  40c0e7:	pop    ss
  40c0e8:	ds mov ebp,0x80946aad
  40c0ee:	ja     0x40c108
  40c0f0:	jl     0x40c146
  40c0f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0f3:	jmp    0x40c0af
  40c0f5:	pop    edx
  40c0f6:	xor    DWORD PTR [esi],esi
  40c0f8:	xchg   esi,eax
  40c0f9:	sahf   
  40c0fa:	repz xchg esi,eax
  40c0fc:	scas   al,BYTE PTR es:[edi]
  40c0fd:	push   esi
  40c0fe:	add    al,0xc1
  40c100:	loope  0x40c0e3
  40c102:	aam    0x3c
  40c104:	xor    BYTE PTR [edx],bh
  40c106:	gs and eax,0x55e2e58
  40c10c:	fs icebp 
  40c10e:	push   ebx
  40c10f:	or     eax,DWORD PTR [eax+0x3b]
  40c112:	mov    ch,0xa1
  40c114:	cmp    ebx,edx
  40c116:	loop   0x40c0ff
  40c118:	dec    esi
  40c119:	add    BYTE PTR [ebx-0x1d],dl
  40c11c:	inc    edx
  40c11d:	lahf   
  40c11e:	and    ah,al
  40c120:	xlat   BYTE PTR ds:[ebx]
  40c121:	ret    
  40c122:	cmp    al,0x9e
  40c124:	test   DWORD PTR [edx+eax*2],ebp
  40c127:	mov    ch,ch
  40c129:	ret    0x2001
  40c12c:	mov    esi,0x51a80ba4
  40c131:	push   DWORD PTR [ebx+0x6d]
  40c134:	pushf  
  40c135:	mov    edx,0x70457681
  40c13a:	into   
  40c13b:	xchg   ebx,eax
  40c13c:	push   es
  40c13d:	sahf   
  40c13e:	arpl   WORD PTR [esi],si
  40c140:	into   
  40c141:	rcr    BYTE PTR [edi+0x6d],1
  40c144:	mov    bh,0x17
  40c146:	ins    DWORD PTR es:[edi],dx
  40c147:	cmc    
  40c148:	ret    0xbe7b
  40c14b:	sbb    ch,bl
  40c14d:	ror    DWORD PTR [ecx],cl
  40c14f:	and    eax,0xbcbbfa1d
  40c154:	xor    esp,DWORD PTR [eax+0x18d2aea]
  40c15a:	pop    es
  40c15b:	out    dx,eax
  40c15c:	sub    eax,0x83efcf4c
  40c161:	outs   dx,BYTE PTR ds:[esi]
  40c162:	scas   al,BYTE PTR es:[edi]
  40c163:	aad    0x53
  40c165:	call   0x7855:0x36374c3b
  40c16c:	xchg   BYTE PTR [eax-0x2d],al
  40c16f:	fadd   DWORD PTR [esi]
  40c171:	and    eax,0x8b55c6db
  40c176:	mov    esi,0xfc61d1db
  40c17b:	(bad)  
  40c17c:	jg     0x40c1db
  40c17e:	jge    0x40c11b
  40c180:	cmp    esp,DWORD PTR [edi-0x4f]
  40c183:	sbb    eax,0x459e15f6
  40c188:	cmp    DWORD PTR [ecx],esp
  40c18a:	sub    BYTE PTR [ebx+0x5ebf6eae],0x81
  40c191:	push   0x5c
  40c193:	sub    esi,DWORD PTR ds:0x86255a0
  40c199:	sahf   
  40c19a:	iret   
  40c19b:	in     eax,dx
  40c19c:	add    cl,bl
  40c19e:	or     bl,bh
  40c1a0:	(bad)  
  40c1a1:	push   ds
  40c1a2:	xchg   DWORD PTR [edx],ebp
  40c1a4:	arpl   WORD PTR [edi+eax*8+0x50],bp
  40c1a8:	add    eax,0xc804328f
  40c1ad:	or     bl,BYTE PTR [ecx*1-0x476d9676]
  40c1b4:	mov    bh,0xc1
  40c1b6:	lock sbb BYTE PTR [edx+0x3c],ah
  40c1ba:	cdq    
  40c1bb:	or     ah,BYTE PTR [edx+0x3b8eaf28]
  40c1c1:	mov    cl,BYTE PTR [esi+0x4]
  40c1c4:	icebp  
  40c1c5:	adc    DWORD PTR gs:[eax],0xffffffcc
  40c1c9:	leave  
  40c1ca:	lods   eax,DWORD PTR ds:[esi]
  40c1cb:	iret   
  40c1cc:	xor    DWORD PTR [eax-0xc],0xb35bf57a
  40c1d3:	xlat   BYTE PTR ds:[ebx]
  40c1d4:	into   
  40c1d5:	mov    edi,edx
  40c1d7:	jle    0x40c16c
  40c1d9:	hlt    
  40c1da:	adc    dh,BYTE PTR [esi+0x21]
  40c1dd:	push   esi
  40c1de:	jmp    0x40c1e0
  40c1e0:	mov    esi,0xfb783fc9
  40c1e5:	xchg   esp,eax
  40c1e6:	in     eax,0x64
  40c1e8:	jmp    0x40c17d
  40c1ea:	mov    esp,0x95a3f865
  40c1ef:	lods   eax,DWORD PTR ds:[esi]
  40c1f0:	and    dh,BYTE PTR [eax+ebp*2-0x58]
  40c1f4:	repnz mov ds:0x7034ed4d,al
  40c1fa:	and    eax,0xcc6892bd
  40c1ff:	mov    DWORD PTR [edi-0x61084677],ecx
  40c205:	loope  0x40c206
  40c207:	out    dx,al
  40c208:	jo     0x40c251
  40c20a:	jmp    DWORD PTR [ecx+0x416285d]
  40c210:	aad    0x5c
  40c212:	cmp    esp,DWORD PTR [ecx]
  40c214:	ja     0x40c268
  40c216:	outs   dx,BYTE PTR ds:[esi]
  40c217:	(bad)  
  40c218:	push   edi
  40c219:	loopne 0x40c277
  40c21b:	jge    0x40c205
  40c21d:	repz int 0xae
  40c220:	xchg   BYTE PTR [edi+0x3c],ch
  40c223:	xor    ebx,DWORD PTR [ebx-0x78]
  40c226:	push   cs
  40c227:	imul   ecx,DWORD PTR [ebx+edx*2+0x8],0x776f2a5e
  40c22f:	(bad)  
  40c231:	pop    esi
  40c232:	std    
  40c233:	(bad)  
  40c234:	pop    ebx
  40c235:	in     al,dx
  40c236:	dec    ebx
  40c237:	dec    ecx
  40c238:	rol    BYTE PTR [ebx],cl
  40c23a:	add    DWORD PTR [ecx+ebp*4],0xffffffcb
  40c23e:	(bad)  
  40c23f:	mov    cl,0x4c
  40c241:	ficom  DWORD PTR [edx-0x49]
  40c244:	xor    al,0x78
  40c246:	add    ah,BYTE PTR [eax]
  40c248:	sub    al,0xdd
  40c24a:	inc    edi
  40c24b:	jbe    0x40c262
  40c24d:	inc    edx
  40c24e:	push   es
  40c24f:	shld   DWORD PTR [ecx+0x798027a0],eax,0xd9
  40c257:	es mov al,0xb1
  40c25a:	and    cl,BYTE PTR [ecx]
  40c25c:	sub    BYTE PTR [eax+0x57],bl
  40c25f:	xchg   edx,eax
  40c260:	and    edx,edx
  40c262:	je     0x40c279
  40c264:	mov    eax,0x7a74221
  40c269:	aas    
  40c26a:	jne    0x40c21a
  40c26c:	xlat   BYTE PTR ds:[ebx]
  40c26d:	test   BYTE PTR [ecx],0xb
  40c270:	add    dl,dl
  40c272:	cmp    eax,0xbb02eeae
  40c277:	push   ebx
  40c278:	sub    DWORD PTR [ebp+0x537015f0],edx
  40c27e:	add    esi,DWORD PTR [ebx]
  40c280:	jmp    DWORD PTR [esi-0x95b7f7f]
  40c286:	fidiv  DWORD PTR [ebp+0x78]
  40c289:	das    
  40c28a:	jno    0x40c2ec
  40c28c:	jge    0x40c2b7
  40c28e:	fs adc al,0xcc
  40c291:	xchg   esi,eax
  40c292:	mov    ecx,0xf0773e99
  40c297:	shr    DWORD PTR [edi+ebp*1+0x74],0x1f
  40c29c:	mov    esp,0x3c75ff8
  40c2a1:	dec    ebx
  40c2a2:	(bad)  
  40c2a3:	mov    bl,0x41
  40c2a5:	xchg   DWORD PTR [ebp+0xa],edi
  40c2a8:	pushf  
  40c2a9:	dec    ebx
  40c2aa:	test   ecx,0x60b5b66e
  40c2b0:	test   ax,0x787
  40c2b4:	mov    bl,0x88
  40c2b6:	add    DWORD PTR [ecx+edx*2],edi
  40c2b9:	gs pop ds
  40c2bb:	mov    dl,0x6c
  40c2bd:	jne    0x40c333
  40c2bf:	and    edx,DWORD PTR [ebp+0x7c]
  40c2c2:	mov    eax,ds:0xf05d294
  40c2c7:	int    0xae
  40c2c9:	dec    eax
  40c2ca:	rol    DWORD PTR [ecx+0x32a29970],1
  40c2d0:	je     0x40c27c
  40c2d2:	xchg   DWORD PTR [ecx+esi*8],ebp
  40c2d5:	clc    
  40c2d6:	adc    DWORD PTR [edx],esi
  40c2d8:	setl   BYTE PTR [esp+ebx*8+0x651668dc]
  40c2e0:	adc    edi,eax
  40c2e2:	push   ebp
  40c2e3:	jne    0x40c330
  40c2e5:	shr    DWORD PTR [esi],0x90
  40c2e8:	or     BYTE PTR [eax+0x49175a09],ah
  40c2ee:	inc    edi
  40c2ef:	inc    edi
  40c2f0:	mov    ah,0xe6
  40c2f2:	xor    eax,0x6e4d1ff4
  40c2f7:	test   DWORD PTR [edx],eax
  40c2f9:	ret    
  40c2fa:	push   ecx
  40c2fb:	mov    ecx,0x41be6e27
  40c300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c301:	mov    ah,0x2c
  40c303:	js     0x40c2b6
  40c305:	jae    0x40c2ca
  40c307:	or     al,0xeb
  40c309:	pop    ebp
  40c30a:	ucomiss xmm6,DWORD PTR [ebp-0x63374e02]
  40c311:	aad    0xa9
  40c313:	mov    al,ds:0x73485a85
  40c318:	call   0xdf3f:0xd8377b0c
  40c31f:	dec    esi
  40c320:	loop   0x40c31d
  40c322:	jg     0x40c2ab
  40c324:	(bad)  [ebx-0x4]
  40c327:	aad    0xac
  40c329:	loopne 0x40c31c
  40c32b:	jno    0x40c332
  40c32d:	sbb    BYTE PTR [edi+0x73fe3465],al
  40c333:	push   ebx
  40c334:	jg     0x40c37a
  40c336:	fst    QWORD PTR [edx]
  40c338:	in     eax,dx
  40c339:	adc    bl,bl
  40c33b:	outs   dx,DWORD PTR ds:[esi]
  40c33c:	mov    ecx,DWORD PTR [ebx+0x7606ec85]
  40c342:	iret   
  40c343:	nop
  40c344:	add    ebp,edx
  40c346:	(bad)  
  40c347:	and    al,BYTE PTR [ebp-0x38]
  40c34a:	adc    al,0x2
  40c34c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c34d:	jnp    0x40c381
  40c34f:	pop    es
  40c350:	cli    
  40c351:	cmc    
  40c352:	sub    dh,BYTE PTR [ecx]
  40c354:	cdq    
  40c355:	mov    WORD PTR [edx],bx
  40c358:	pop    esp
  40c359:	aaa    
  40c35a:	jbe    0x40c368
  40c35c:	cmp    DWORD PTR [ebx],eax
  40c35e:	adc    BYTE PTR [edi-0x3b3c93ed],bl
  40c364:	retf   0x9f30
  40c367:	arpl   WORD PTR [edi+0x5c],di
  40c36a:	iret   
  40c36b:	call   DWORD PTR [ebx+0x71]
  40c36e:	add    al,0x60
  40c370:	xor    al,0x21
  40c372:	and    ch,BYTE PTR [ecx+0x5c1f2201]
  40c378:	xchg   edi,eax
  40c379:	sub    eax,0xb8f00419
  40c37e:	mov    BYTE PTR ds:0x5ffc3c72,ah
  40c384:	imul   ebx,DWORD PTR [esi*1+0x5521c38f],0x290e9c8c
  40c38f:	into   
  40c390:	into   
  40c391:	arpl   WORD PTR [ebx-0xa],si
  40c394:	addr16 mov ch,0x66
  40c397:	stos   DWORD PTR es:[edi],eax
  40c398:	push   es
  40c399:	rcr    DWORD PTR [ecx],cl
  40c39b:	xchg   DWORD PTR [edx+0x1d2d8030],ebx
  40c3a1:	mov    eax,0xcb2cdd97
  40c3a6:	sub    bh,ah
  40c3a8:	fisubr DWORD PTR [ebp-0x34]
  40c3ab:	mov    esi,0x5f03cb85
  40c3b0:	and    BYTE PTR [edx+ebp*8],0xa7
  40c3b4:	cmp    ah,BYTE PTR [edi-0x1874746a]
  40c3ba:	out    0xde,eax
  40c3bc:	mov    ds:0x4301f914,eax
  40c3c1:	inc    edx
  40c3c2:	mov    ds:0x4116227d,eax
  40c3c7:	imul   esp,DWORD PTR [edi],0x205f05e7
  40c3cd:	pop    esp
  40c3ce:	fidivr WORD PTR [ecx-0x4b7f72e4]
  40c3d4:	mov    edi,0xd3b80029
  40c3d9:	test   BYTE PTR [eax-0x3a5ca7b6],0xb
  40c3e0:	pop    eax
  40c3e1:	jmp    0x40c37e
  40c3e3:	test   al,0xe4
  40c3e5:	icebp  
  40c3e6:	pop    ebx
  40c3e7:	mov    bh,0x76
  40c3e9:	push   cs
  40c3ea:	and    DWORD PTR [edx+0x3019eaeb],esi
  40c3f0:	dec    ecx
  40c3f1:	addr16 iret 
  40c3f3:	mov    DWORD PTR [ebx+0x50],eax
  40c3f6:	das    
  40c3f7:	inc    edx
  40c3f8:	mov    edx,0xf179597c
  40c3fd:	push   ss
  40c3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3ff:	lods   eax,DWORD PTR ds:[esi]
  40c400:	lds    ebx,FWORD PTR [ebp+0x29f381bf]
  40c406:	mov    al,ds:0xe108b56a
  40c40b:	imul   BYTE PTR [edx+0x6edc10f0]
  40c411:	imul   eax,ebx,0xffffffa6
  40c414:	repz and esp,DWORD PTR [eax+0x55]
  40c418:	scas   eax,DWORD PTR es:[edi]
  40c419:	retf   0xf94
  40c41c:	or     eax,esi
  40c41e:	jmp    0x40c41e
  40c420:	lods   al,BYTE PTR ds:[esi]
  40c421:	sub    ebp,esi
  40c423:	aas    
  40c424:	inc    ebx
  40c425:	mov    eax,ds:0x16ded86f
  40c42a:	dec    ebx
  40c42b:	xchg   ecx,eax
  40c42c:	out    dx,al
  40c42d:	xor    al,0x95
  40c42f:	stos   BYTE PTR es:[edi],al
  40c430:	push   esi
  40c431:	adc    DWORD PTR [edx-0x54],ecx
  40c434:	js     0x40c47d
  40c436:	inc    ecx
  40c437:	int    0x87
  40c439:	mov    ecx,0x81f057ea
  40c43e:	lods   al,BYTE PTR ds:[esi]
  40c43f:	add    BYTE PTR [ebx],0xda
  40c442:	fs fdiv st(3),st
  40c445:	cdq    
  40c446:	or     DWORD PTR [edx+eiz*1],esp
  40c449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c44a:	dec    edx
  40c44b:	xor    dl,cl
  40c44d:	mov    eax,DWORD PTR [eax]
  40c44f:	mov    ebp,0x58750ddf
  40c454:	popa   
  40c455:	mov    ebx,0x114eca6b
  40c45a:	sahf   
  40c45b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c45c:	xchg   esp,eax
  40c45d:	sub    BYTE PTR [edi],ah
  40c45f:	ret    
  40c460:	jge    0x40c46b
  40c462:	pop    edi
  40c463:	popa   
  40c464:	mul    BYTE PTR [edi-0x54118faa]
  40c46a:	mov    eax,0xac50039b
  40c46f:	outs   dx,BYTE PTR ds:[esi]
  40c470:	xchg   esi,eax
  40c471:	add    ch,BYTE PTR [esi+0x5a075f20]
  40c477:	les    eax,FWORD PTR es:[edi-0x406529c2]
  40c47e:	dec    ebx
  40c47f:	xor    esi,DWORD PTR [edi]
  40c481:	sub    BYTE PTR [ebx-0x6b48058f],bl
  40c487:	pushf  
  40c488:	fimul  WORD PTR ds:0xd8ba3b5a
  40c48e:	fldcw  WORD PTR [edi]
  40c490:	or     bl,al
  40c492:	std    
  40c493:	jmp    0x40c46a
  40c495:	pop    ebp
  40c496:	adc    eax,0xd26d403c
  40c49b:	jbe    0x40c45e
  40c49d:	test   eax,0x63966af9
  40c4a2:	sub    eax,0x19c01ce8
  40c4a7:	xor    DWORD PTR ds:0x871ffa2b,0xf783552e
  40c4b1:	add    al,0x8d
  40c4b3:	aam    0x6
  40c4b5:	stos   DWORD PTR es:[edi],eax
  40c4b6:	cmc    
  40c4b7:	mov    edx,0xd290ca61
  40c4bc:	xchg   esi,eax
  40c4bd:	sbb    bh,BYTE PTR [edx]
  40c4bf:	(bad)  
  40c4c0:	xor    BYTE PTR [edx-0x68],ch
  40c4c3:	bound  ebp,QWORD PTR [ebx+0x44fb51b3]
  40c4c9:	push   edx
  40c4ca:	test   al,0x8d
  40c4cc:	add    eax,0x26f85f8c
  40c4d1:	adc    eax,0xb246e783
  40c4d6:	lahf   
  40c4d7:	loop   0x40c474
  40c4d9:	rcr    BYTE PTR [edx],1
  40c4db:	cli    
  40c4dc:	inc    esp
  40c4dd:	test   ebx,0x24e83dc7
  40c4e3:	cs in  al,0x5d
  40c4e6:	push   ds
  40c4e7:	(bad)  
  40c4e8:	aad    0x24
  40c4ea:	cld    
  40c4eb:	pop    esp
  40c4ec:	fld    TBYTE PTR [edi-0x1f]
  40c4ef:	or     ah,BYTE PTR [ebp+edx*4-0x16]
  40c4f3:	xchg   ebx,ecx
  40c4f5:	push   edx
  40c4f6:	add    BYTE PTR [edx],al
  40c4f8:	cmp    BYTE PTR [edi+ebx*8+0x3725cd8e],dh
  40c4ff:	push   ds
  40c500:	enter  0x1f01,0xb1
  40c504:	cld    
  40c505:	push   esi
  40c506:	pop    edx
  40c507:	and    esi,DWORD PTR [ecx+0x47]
  40c50a:	inc    eax
  40c50b:	dec    ebp
  40c50c:	pop    ecx
  40c50d:	xlat   BYTE PTR ds:[ebx]
  40c50e:	jbe    0x40c49f
  40c510:	mul    BYTE PTR [ecx-0x2839e621]
  40c516:	adc    al,0xdb
  40c518:	retf   
  40c519:	inc    eax
  40c51a:	mov    eax,ds:0xbb2c7797
  40c51f:	in     eax,dx
  40c520:	mov    dh,0x2e
  40c522:	imul   ebx,edx,0x8ac6ad45
  40c528:	xchg   ebx,eax
  40c529:	mov    edi,0x3cb9927d
  40c52e:	repnz (bad) 
  40c530:	jmp    0x2449:0xd4651ecc
  40c537:	lock push eax
  40c539:	xchg   esp,eax
  40c53a:	fs test al,0x57
  40c53d:	push   ds
  40c53e:	mov    eax,0x837b236f
  40c543:	push   es
  40c544:	adc    edx,DWORD PTR [esi-0x903995b]
  40c54a:	fisubr DWORD PTR [ebx+0x25]
  40c54d:	pop    edx
  40c54e:	xor    dh,BYTE PTR [edx]
  40c550:	lahf   
  40c551:	daa    
  40c552:	inc    esp
  40c553:	pop    ebp
  40c554:	adc    BYTE PTR [edx+0x7e],bl
  40c557:	dec    ebx
  40c558:	pop    ebx
  40c559:	test   al,0xd0
  40c55b:	mov    ebx,0x2d43c7d1
  40c560:	mov    dl,0xf5
  40c562:	pusha  
  40c563:	adc    BYTE PTR [edi+ebx*8+0x1bac6863],0xa1
  40c56b:	sbb    eax,0xa29beef
  40c570:	inc    esi
  40c571:	and    edx,DWORD PTR [ecx+ebp*2-0x4bb11f24]
  40c578:	jns    0x40c525
  40c57a:	ficomp DWORD PTR [esi-0x13]
  40c57d:	xchg   edx,eax
  40c57e:	(bad)  
  40c57f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c580:	and    al,0x71
  40c582:	push   esp
  40c583:	and    al,0x94
  40c585:	xchg   edx,eax
  40c586:	push   ecx
  40c587:	dec    ecx
  40c588:	adc    BYTE PTR [esi+0x53e10137],ch
  40c58e:	mov    al,0xb9
  40c590:	(bad)  
  40c591:	loopne 0x40c55b
  40c593:	mov    bl,0xa9
  40c595:	jno    0x40c5c0
  40c597:	stos   BYTE PTR es:[edi],al
  40c598:	xor    eax,0x2c6efca9
  40c59d:	cmp    eax,0x77797e0b
  40c5a2:	jo     0x40c61f
  40c5a4:	mov    dl,0x82
  40c5a6:	mov    bh,0x5c
  40c5a8:	add    ch,BYTE PTR [ebx-0x3cd06ab9]
  40c5ae:	fidivr WORD PTR [edx+edi*1-0x74a1a0c9]
  40c5b5:	ds mov ah,0x38
  40c5b8:	mov    edx,0x3fadc764
  40c5bd:	jecxz  0x40c54d
  40c5bf:	leave  
  40c5c0:	iret   
  40c5c1:	push   cs
  40c5c2:	and    DWORD PTR [esi+edx*8],ebp
  40c5c5:	adc    eax,0x83c47a7f
  40c5ca:	in     al,dx
  40c5cb:	pop    esp
  40c5cc:	push   ss
  40c5cd:	fsub   QWORD PTR [edx]
  40c5cf:	add    eax,0xef95ac1b
  40c5d4:	ret    
  40c5d5:	ficom  DWORD PTR [edi+0x1a]
  40c5d8:	(bad)  
  40c5d9:	loopne 0x40c58f
  40c5db:	sbb    dh,BYTE PTR [eax]
  40c5dd:	jmp    0xfd7bb8fe
  40c5e2:	mov    bl,BYTE PTR [ebx-0xd]
  40c5e5:	push   ds
  40c5e6:	nop
  40c5e7:	inc    ecx
  40c5e8:	mov    dh,0xb
  40c5ea:	ja     0x40c65a
  40c5ec:	fwait
  40c5ed:	lods   al,BYTE PTR ds:[esi]
  40c5ee:	ins    DWORD PTR es:[edi],dx
  40c5ef:	cmp    DWORD PTR [esi+0x44],edi
  40c5f2:	(bad)  [edx+0x4f]
  40c5f5:	inc    esi
  40c5f6:	stc    
  40c5f7:	aas    
  40c5f8:	pop    edx
  40c5f9:	in     eax,dx
  40c5fa:	push   ebp
  40c5fb:	mov    edi,0xa5a5fcd7
  40c600:	sub    al,0xce
  40c602:	add    BYTE PTR [ecx],al
  40c604:	sub    al,0x15
  40c606:	jmp    0xfcc580cb
  40c60b:	ror    DWORD PTR [esi-0x46ff8a82],cl
  40c611:	mov    ch,0x92
  40c613:	enter  0x1fba,0x0
  40c617:	enter  0x3d9c,0xfb
  40c61b:	pop    esi
  40c61c:	das    
  40c61d:	mov    edx,0xf9f64833
  40c622:	lahf   
  40c623:	and    esp,DWORD PTR [edi+0x28]
  40c626:	push   es
  40c627:	outs   dx,BYTE PTR ds:[esi]
  40c628:	inc    esi
  40c629:	push   ds
  40c62a:	add    bl,BYTE PTR [ecx-0x4cf93e61]
  40c630:	add    cl,BYTE PTR [ebx+0x17]
  40c633:	dec    edi
  40c634:	jbe    0x40c5c7
  40c636:	lods   al,BYTE PTR ds:[esi]
  40c637:	mov    edi,DWORD PTR [ecx+0x493e366b]
  40c63d:	(bad)  
  40c63e:	cmp    DWORD PTR [eax+0x40d231ba],ebp
  40c644:	test   BYTE PTR [edi+esi*2],ch
  40c647:	dec    esi
  40c648:	retf   0xc71
  40c64b:	cmp    BYTE PTR [ebx+0x3a],ah
  40c64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c64f:	jmp    FWORD PTR [esi+0x7b]
  40c652:	retf   
  40c653:	dec    ecx
  40c654:	loop   0x40c649
  40c656:	pushf  
  40c657:	adc    al,0xe8
  40c659:	sbb    DWORD PTR [ecx-0x334bc1c0],eax
  40c65f:	stos   DWORD PTR es:[edi],eax
  40c660:	cs mov edi,0x666e2d8
  40c666:	hlt    
  40c667:	dec    esi
  40c668:	push   ebp
  40c669:	sbb    al,0xe5
  40c66b:	gs jl  0x40c6ac
  40c66e:	inc    ebp
  40c66f:	sbb    al,0x5c
  40c671:	enter  0xf4c9,0x4d
  40c675:	cmc    
  40c676:	dec    esp
  40c677:	dec    esp
  40c678:	sub    ch,BYTE PTR [eax-0x1bb91913]
  40c67e:	xchg   DWORD PTR [eax],esi
  40c680:	fmul   QWORD PTR [edx-0x1a]
  40c683:	in     eax,dx
  40c684:	xchg   esp,eax
  40c685:	(bad)  
  40c686:	mov    dl,0x37
  40c688:	mov    ebp,0x29bb48d5
  40c68d:	add    esp,esp
  40c68f:	jbe    0x40c698
  40c691:	pop    ebx
  40c692:	pop    edi
  40c693:	clc    
  40c694:	and    BYTE PTR [edi+eiz*8],dl
  40c697:	sbb    DWORD PTR [ebx],edx
  40c699:	push   edx
  40c69a:	mov    al,0x2a
  40c69c:	aad    0x32
  40c69e:	mov    edi,0x4c49d41d
  40c6a3:	cs cli 
  40c6a5:	dec    ebx
  40c6a6:	scas   al,BYTE PTR es:[edi]
  40c6a7:	mov    bh,0x3b
  40c6a9:	sbb    DWORD PTR [esi],edx
  40c6ab:	add    al,0x49
  40c6ad:	cmp    esp,DWORD PTR [ebp-0x7]
  40c6b0:	ins    BYTE PTR es:[edi],dx
  40c6b1:	(bad)  
  40c6b2:	leave  
  40c6b3:	push   0xb878b137
  40c6b8:	call   0x6906:0xf3c69641
  40c6bf:	pop    es
  40c6c0:	dec    ecx
  40c6c1:	ffreep st(4)
  40c6c3:	inc    ecx
  40c6c4:	call   0x86e8:0x1a8d1c51
  40c6cb:	adc    eax,0x25c85e8f
  40c6d0:	pop    ds
  40c6d1:	sbb    edx,DWORD PTR [eax+0x65d8d29c]
  40c6d7:	mov    al,0x90
  40c6d9:	mov    al,0xa5
  40c6db:	enter  0xafde,0x41
  40c6df:	sbb    al,0xe6
  40c6e1:	clc    
  40c6e2:	stc    
  40c6e3:	mov    ds:0x29241c,eax
  40c6e8:	jbe    0x40c741
  40c6ea:	inc    edi
  40c6eb:	mov    esi,0xf13353d6
  40c6f0:	cwde   
  40c6f1:	xchg   edx,eax
  40c6f2:	in     eax,0x39
  40c6f4:	dec    edx
  40c6f5:	les    ebx,FWORD PTR [ebp-0x5bcdef2a]
  40c6fb:	xor    ebx,edi
  40c6fd:	popf   
  40c6fe:	clc    
  40c6ff:	dec    esi
  40c700:	or     esp,DWORD PTR [esi-0x12]
  40c703:	xor    edi,ecx
  40c705:	push   cs
  40c706:	adc    BYTE PTR [ecx],0xcc
  40c709:	mov    ecx,0xcbaf23d8
  40c70e:	icebp  
  40c70f:	cmp    eax,0xa80538a
  40c714:	in     al,dx
  40c715:	std    
  40c716:	xor    DWORD PTR [edx+0x41],esi
  40c719:	mov    ebp,0x6d8fd6b4
  40c71e:	and    edi,ebx
  40c720:	jge    0x40c6bd
  40c722:	xor    DWORD PTR [edx+0x50e61597],ebp
  40c728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c729:	dec    esi
  40c72a:	inc    esp
  40c72b:	push   ds
  40c72c:	fldcw  WORD PTR [edx]
  40c72e:	xor    eax,0xedd680bd
  40c733:	or     al,0xc5
  40c735:	scas   al,BYTE PTR es:[edi]
  40c736:	xchg   ebx,eax
  40c737:	std    
  40c738:	mov    ds:0xae66c7f8,eax
  40c73d:	jg     0x40c6f4
  40c73f:	ret    0xffe9
  40c742:	icebp  
  40c743:	jns    0x40c745
  40c745:	dec    ecx
  40c746:	add    dl,0x1f
  40c749:	sbb    ecx,DWORD PTR [ebx+0x1f94ed3e]
  40c74f:	in     eax,0x49
  40c751:	push   eax
  40c752:	pusha  
  40c753:	test   BYTE PTR [ebp-0x408527d4],cl
  40c759:	or     al,0xc0
  40c75b:	scas   al,BYTE PTR es:[edi]
  40c75c:	clc    
  40c75d:	fimul  DWORD PTR [edx-0x651708fc]
  40c763:	pushf  
  40c764:	gs push 0xffffffb1
  40c767:	(bad)  
  40c768:	imul   esi,DWORD PTR [edx+ecx*2],0x6f55deab
  40c76f:	jl     0x40c77a
  40c771:	push   es
  40c772:	dec    esi
  40c773:	fmulp  st(4),st
  40c775:	push   edx
  40c776:	and    DWORD PTR [ebx],esp
  40c778:	mov    bh,0xc
  40c77a:	xchg   BYTE PTR ds:0x15d833c7,bl
  40c780:	(bad)  
  40c781:	enter  0x270a,0x93
  40c785:	mov    ebp,DWORD PTR [edx+0xe]
  40c788:	xor    BYTE PTR [edi+0xd],dl
  40c78b:	fwait
  40c78c:	loop   0x40c781
  40c78e:	cmp    ch,dh
  40c790:	pop    edx
  40c791:	sbb    DWORD PTR [edi-0x373cf4fe],esi
  40c797:	xchg   esp,eax
  40c798:	mov    ch,0x10
  40c79a:	bound  ebx,QWORD PTR [ecx+ecx*4]
  40c79d:	add    eax,0x64401070
  40c7a2:	rcl    edi,cl
  40c7a4:	lods   eax,DWORD PTR ds:[esi]
  40c7a5:	xor    al,BYTE PTR [ebp-0x4c]
  40c7a8:	arpl   WORD PTR [ecx+0x29],cx
  40c7ab:	and    ebx,edi
  40c7ad:	dec    esi
  40c7ae:	das    
  40c7af:	ins    BYTE PTR es:[edi],dx
  40c7b0:	pop    eax
  40c7b1:	scas   eax,DWORD PTR es:[edi]
  40c7b2:	cmp    DWORD PTR [ebp-0x271ca59f],edi
  40c7b8:	mov    edi,DWORD PTR [edi+0x50]
  40c7bb:	cmp    DWORD PTR [esp],ebx
  40c7be:	inc    edx
  40c7bf:	push   esp
  40c7c0:	fstp   DWORD PTR [edx]
  40c7c2:	xchg   edx,eax
  40c7c3:	cmp    edx,eax
  40c7c5:	xchg   ebx,eax
  40c7c6:	sub    bh,BYTE PTR ds:0x43248949
  40c7cc:	and    DWORD PTR [esi+0x18],ecx
  40c7cf:	das    
  40c7d0:	cmp    al,0x19
  40c7d2:	in     eax,dx
  40c7d3:	adc    esp,ecx
  40c7d5:	push   ebx
  40c7d6:	in     al,0x9c
  40c7d8:	inc    edx
  40c7d9:	mov    al,ds:0x81520ecf
  40c7de:	jno    0x40c765
  40c7e0:	aam    0x85
  40c7e2:	inc    DWORD PTR [edx-0x32]
  40c7e5:	lea    esi,[edi+edx*2]
  40c7e8:	xchg   ebp,eax
  40c7e9:	pop    edx
  40c7ea:	push   es
  40c7eb:	test   al,0xde
  40c7ed:	lods   eax,DWORD PTR ds:[esi]
  40c7ee:	sub    eax,0x7a5370cc
  40c7f3:	test   BYTE PTR [edx],0x82
  40c7f6:	pop    ecx
  40c7f7:	xlat   BYTE PTR ds:[ebx]
  40c7f8:	stc    
  40c7f9:	mov    BYTE PTR [esi+0x2daa79c8],bh
  40c7ff:	sahf   
  40c800:	jl     0x40c7ac
  40c802:	js     0x40c7d9
  40c804:	aaa    
  40c805:	push   ds
  40c806:	call   0x6126e7e2
  40c80b:	or     dl,BYTE PTR [edx]
  40c80d:	sbb    eax,0xdd4f7ac0
  40c812:	jg     0x40c7f6
  40c814:	pushf  
  40c815:	xchg   esp,eax
  40c816:	data16 sub BYTE PTR [esi+edi*2],ah
  40c81a:	adc    ebx,DWORD PTR [ebx+0x1f]
  40c81d:	push   edx
  40c81e:	xchg   ecx,eax
  40c81f:	(bad)
  40c823:	data16 xlat BYTE PTR ds:[ebx]
  40c825:	das    
  40c826:	dec    ebx
  40c827:	loope  0x40c873
  40c829:	fidivr DWORD PTR [eax+0x2f8f747f]
  40c82f:	or     esi,DWORD PTR ds:0x91f4e79a
  40c835:	mov    eax,edx
  40c837:	dec    ecx
  40c838:	ficom  DWORD PTR [ecx+0x419b92f4]
  40c83e:	sbb    edi,ebx
  40c840:	cmp    eax,0x9b694b36
  40c845:	imul   eax,DWORD PTR [ecx],0x69
  40c848:	mov    BYTE PTR [eax],bh
  40c84a:	add    ebx,DWORD PTR [edi+0x15]
  40c84d:	xor    eax,0x33615ef0
  40c852:	dec    eax
  40c853:	scas   al,BYTE PTR es:[edi]
  40c854:	imul   esi,edx,0x6a
  40c857:	mov    WORD PTR [edi-0xe],?
  40c85a:	(bad)  
  40c85b:	inc    ebp
  40c85c:	aad    0x93
  40c85e:	jbe    0x40c7f7
  40c860:	and    DWORD PTR [ebp-0x14],esi
  40c863:	jecxz  0x40c898
  40c865:	sar    BYTE PTR [ebx],1
  40c867:	ja     0x40c814
  40c869:	push   eax
  40c86a:	and    edx,esp
  40c86c:	inc    ebp
  40c86d:	aad    0xad
  40c86f:	mov    eax,0x2f2641b6
  40c874:	retf   
  40c875:	add    eax,0x65452e03
  40c87a:	scas   al,BYTE PTR es:[edi]
  40c87b:	push   0x4c
  40c87d:	pop    esi
  40c87e:	push   edx
  40c87f:	mov    cl,0x33
  40c881:	mov    dh,0x7a
  40c883:	(bad)  
  40c884:	not    DWORD PTR [ecx+0x15541837]
  40c88a:	cld    
  40c88b:	aaa    
  40c88c:	lods   eax,DWORD PTR ds:[esi]
  40c88d:	cmc    
  40c88e:	pop    es
  40c88f:	pop    ebx
  40c890:	das    
  40c891:	inc    edx
  40c892:	xchg   DWORD PTR [edx+0x4f],ebx
  40c895:	sti    
  40c896:	pop    eax
  40c898:	loopne 0x40c8a3
  40c89a:	pusha  
  40c89b:	pop    ds
  40c89c:	test   DWORD PTR [edx-0x5d],0x2dc162dd
  40c8a3:	or     ebp,DWORD PTR [ecx+esi*8+0x84d4b6d]
  40c8aa:	leave  
  40c8ab:	cmp    BYTE PTR [eax+0x727f2ae6],ah
  40c8b1:	sub    edx,DWORD PTR [bx+si-0x39]
  40c8b5:	push   ebp
  40c8b6:	inc    esi
  40c8b7:	stos   BYTE PTR es:[edi],al
  40c8b8:	dec    ebx
  40c8b9:	inc    ebp
  40c8ba:	xor    BYTE PTR [ecx+0x41caa4bc],al
  40c8c0:	into   
  40c8c1:	inc    esp
  40c8c2:	or     al,0xf4
  40c8c4:	stc    
  40c8c5:	fisttp WORD PTR [ebx+eax*4+0x5b]
  40c8c9:	ror    DWORD PTR [edi],1
  40c8cb:	mov    esi,ebp
  40c8cd:	ins    DWORD PTR es:[edi],dx
  40c8ce:	popf   
  40c8cf:	xchg   ebx,eax
  40c8d0:	jbe    0x40c8bc
  40c8d2:	fcmovnb st,st(6)
  40c8d4:	sbb    BYTE PTR [ebp+0x3c9e9051],0x6a
  40c8db:	shr    edx,1
  40c8dd:	mov    BYTE PTR [edx+0x3d2e91d9],dh
  40c8e3:	stos   DWORD PTR es:[di],eax
  40c8e5:	loop   0x40c957
  40c8e7:	push   edx
  40c8e8:	test   eax,0x1ed24bfe
  40c8ed:	(bad)  
  40c8ee:	out    dx,al
  40c8ef:	add    dl,cl
  40c8f1:	mov    esi,DWORD PTR [edx+0x4997be9c]
  40c8f7:	jb     0x40c898
  40c8f9:	push   ecx
  40c8fa:	or     edx,DWORD PTR [ebp+ebx*4-0x2bfe566e]
  40c901:	loopne 0x40c8ac
  40c903:	and    al,0x72
  40c905:	dec    ecx
  40c906:	and    BYTE PTR [edi],cl
  40c908:	out    dx,eax
  40c909:	inc    esp
  40c90a:	inc    esi
  40c90b:	sub    BYTE PTR [esi-0x618741e7],ah
  40c911:	scas   eax,DWORD PTR es:[edi]
  40c912:	mov    ch,0x11
  40c914:	ds (bad) 
  40c916:	jmp    0xe470:0xb9aba29f
  40c91d:	lods   eax,DWORD PTR ds:[esi]
  40c91e:	adc    al,0xe2
  40c920:	pop    esp
  40c921:	js     0x40c8c5
  40c923:	jmp    0xa17267f9
  40c928:	aad    0xb6
  40c92a:	rcl    BYTE PTR [esi+0x38],1
  40c92d:	stos   DWORD PTR es:[edi],eax
  40c92e:	gs add eax,0xcbdc6209
  40c934:	clc    
  40c935:	(bad)  
  40c936:	pusha  
  40c937:	adc    ch,BYTE PTR [esi]
  40c939:	xchg   edi,eax
  40c93a:	sbb    BYTE PTR [edx+0x6a0aad2],ah
  40c940:	jg     0x40c903
  40c942:	test   BYTE PTR [si+0x53],dl
  40c946:	inc    esp
  40c947:	jae    0x40c966
  40c949:	mov    bl,0xe7
  40c94b:	cmc    
  40c94c:	and    al,0x4
  40c94e:	inc    edx
  40c94f:	cdq    
  40c950:	inc    esp
  40c951:	mov    ebp,0x7e98f5f7
  40c956:	into   
  40c957:	sub    esi,DWORD PTR [edi-0x14]
  40c95a:	sub    DWORD PTR [esp+edx*4],ecx
  40c95d:	adc    esi,DWORD PTR [edx-0x6c]
  40c960:	(bad)  
  40c961:	push   0xffffff9b
  40c963:	cld    
  40c964:	iret   
  40c965:	cmp    eax,0x5256ee33
  40c96a:	loope  0x40c9e1
  40c96c:	xchg   edi,eax
  40c96d:	pusha  
  40c96e:	jl     0x40c9d7
  40c970:	cmovge edi,edi
  40c973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c974:	xor    DWORD PTR ds:0x81e798,0xfffffffb
  40c97b:	mov    ecx,0x92e83f88
  40c980:	loop   0x40c94f
  40c982:	iret   
  40c983:	sbb    al,0x22
  40c985:	fisttp QWORD PTR [ecx+0x16]
  40c988:	inc    edi
  40c989:	cmp    eax,0x74556076
  40c98e:	jbe    0x40c9a5
  40c990:	dec    ecx
  40c991:	ins    DWORD PTR es:[edi],dx
  40c992:	jmp    0x221d:0x55acd630
  40c999:	aaa    
  40c99a:	fucomip st,st(5)
  40c99c:	sub    eax,0xa6be53a9
  40c9a1:	xor    eax,0x74df6a0a
  40c9a6:	pop    esi
  40c9a7:	bound  ebx,QWORD PTR [ecx*2+0x7fbfca34]
  40c9ae:	pop    ebx
  40c9af:	cwde   
  40c9b0:	int    0x62
  40c9b2:	and    al,0xca
  40c9b4:	or     DWORD PTR [ebp+0x6e],edi
  40c9b7:	inc    ebx
  40c9b8:	sub    al,0x97
  40c9ba:	pop    ds
  40c9bb:	push   esp
  40c9bc:	sub    esi,ecx
  40c9be:	icebp  
  40c9bf:	dec    esp
  40c9c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c1:	xchg   BYTE PTR ds:0xa73a9827,al
  40c9c7:	and    DWORD PTR [esi],esi
  40c9c9:	loopne 0x40c9df
  40c9cb:	fdivr  QWORD PTR [esi-0x15]
  40c9ce:	test   al,0xe7
  40c9d0:	fdiv   DWORD PTR ds:0x9d80a55c
  40c9d6:	pop    ss
  40c9d7:	in     al,0x87
  40c9d9:	(bad)  [ecx]
  40c9db:	cli    
  40c9dc:	cmp    bh,BYTE PTR [ebp+0x2abb48bf]
  40c9e2:	retf   0xcf85
  40c9e5:	pop    edi
  40c9e6:	(bad)  
  40c9e9:	int3   
  40c9ea:	hlt    
  40c9eb:	sbb    DWORD PTR [edi+0x2c8e1095],0xffffffbc
  40c9f2:	sbb    BYTE PTR [edi+0x479ccecf],ah
  40c9f8:	daa    
  40c9f9:	addr16 shl eax,cl
  40c9fc:	ret    0x5dc4
  40c9ff:	out    0xa7,al
  40ca01:	rol    BYTE PTR [ecx-0x6b5adfbc],0xdb
  40ca08:	or     BYTE PTR [ebp+0x16],dl
  40ca0b:	jmp    0xe677c61f
  40ca10:	cwde   
  40ca11:	sub    eax,DWORD PTR [edx+ebx*2-0x2f7675f1]
  40ca18:	inc    si
  40ca1a:	rep ins BYTE PTR es:[edi],dx
  40ca1c:	mov    eax,cs:0xcc8654f7
  40ca22:	pop    ds
  40ca23:	das    
  40ca24:	xlat   BYTE PTR ds:[ebx]
  40ca25:	mov    bh,0xa0
  40ca27:	inc    eax
  40ca28:	ds mov ebp,0x5f3e372a
  40ca2e:	mov    fs,WORD PTR [edi+0x20fca74]
  40ca34:	popa   
  40ca35:	loopne 0x40ca65
  40ca37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca38:	jbe    0x40ca60
  40ca3a:	push   esi
  40ca3b:	mov    dl,0x48
  40ca3d:	(bad)  
  40ca3e:	in     al,0xc4
  40ca40:	cmp    esi,DWORD PTR [edi-0x4b60c40b]
  40ca46:	test   eax,edx
  40ca48:	fldcw  WORD PTR [ebx+0x412b22da]
  40ca4e:	(bad)  
  40ca4f:	mul    BYTE PTR ds:0x31d74eb6
  40ca55:	in     al,dx
  40ca56:	cmp    al,0x3f
  40ca58:	out    dx,al
  40ca59:	mov    eax,ds:0xda2b7486
  40ca5e:	push   esi
  40ca5f:	clc    
  40ca60:	mov    eax,0xd6942577
  40ca65:	push   ds
  40ca66:	(bad)  [edx+0x5c]
  40ca69:	out    dx,al
  40ca6a:	and    BYTE PTR [ebx+0x7],dl
  40ca6d:	in     eax,dx
  40ca6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca6f:	fbstp  TBYTE PTR [eax-0x36]
  40ca72:	fstp   DWORD PTR [edi+0x1f1204d2]
  40ca78:	clc    
  40ca79:	pusha  
  40ca7a:	cmp    eax,0x788a5abf
  40ca7f:	sbb    bh,BYTE PTR [edx]
  40ca81:	scas   al,BYTE PTR es:[edi]
  40ca82:	mov    ah,ah
  40ca84:	popf   
  40ca85:	xchg   ecx,eax
  40ca86:	jl     0x40ca54
  40ca88:	push   esi
  40ca89:	jmp    0xed64:0xe8d90827
  40ca90:	test   DWORD PTR [edx+ebp*4-0x12dcbf56],0xce3138db
  40ca9b:	add    dl,BYTE PTR [ecx-0x53]
  40ca9e:	clc    
  40ca9f:	rcl    eax,1
  40caa1:	jle    0x40cb22
  40caa3:	inc    esi
  40caa4:	add    DWORD PTR [ebp+0x6b4a3e41],edx
  40caaa:	mov    ebx,DWORD PTR [edi+0x20a1ffb1]
  40cab0:	nop
  40cab1:	add    DWORD PTR [ebp-0x49],0xbed1c0fb
  40cab8:	aaa    
  40cab9:	ret    
  40caba:	cs aas 
  40cabc:	stc    
  40cabd:	xchg   ebp,eax
  40cabe:	mov    ds:0xef000266,eax
  40cac3:	jmp    0x9fed43e1
  40cac8:	lock push edi
  40caca:	jb     0x40ca57
  40cacc:	outs   dx,DWORD PTR ds:[esi]
  40cacd:	sub    al,0x73
  40cacf:	outs   dx,BYTE PTR ds:[esi]
  40cad0:	xor    DWORD PTR [eax],ecx
  40cad2:	cs lahf 
  40cad4:	mov    ds:0x95769e33,eax
  40cad9:	bound  ecx,QWORD PTR [esi-0x51b87bc9]
  40cadf:	neg    BYTE PTR [ecx-0x64]
  40cae2:	pop    ebx
  40cae3:	push   0xfffffff2
  40cae5:	test   cl,dl
  40cae7:	pop    esp
  40cae8:	sahf   
  40cae9:	out    dx,al
  40caea:	dec    ebx
  40caeb:	rcr    DWORD PTR [eax-0x7c],0x0
  40caef:	(bad)
  40caf2:	jmp    0x40cae3
  40caf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caf5:	xor    eax,0xc04dbb5
  40cafa:	or     eax,0xf64ddf3e
  40caff:	dec    esi
  40cb00:	(bad)
  40cb03:	test   eax,0x71adcfbb
  40cb08:	in     al,dx
  40cb09:	imul   esi,DWORD PTR [ebp-0x4012b0d9],0x26982a7e
  40cb13:	and    al,0x89
  40cb15:	int    0x4e
  40cb17:	add    BYTE PTR [ebp-0x23],0xf4
  40cb1b:	pcmpeqd mm0,mm4
  40cb1e:	scas   eax,DWORD PTR es:[edi]
  40cb1f:	push   ecx
  40cb20:	int    0x75
  40cb22:	dec    ebx
  40cb23:	in     al,0x36
  40cb25:	or     ebp,DWORD PTR [edi+0x4fa3ffe]
  40cb2b:	out    dx,eax
  40cb2c:	gs aaa 
  40cb2e:	push   0xeb7f1d4b
  40cb33:	out    dx,eax
  40cb34:	popa   
  40cb35:	xchg   ebp,eax
  40cb36:	loope  0x40caec
  40cb38:	(bad)  
  40cb3a:	or     ebx,ebx
  40cb3c:	push   ebp
  40cb3d:	mov    dh,0xc5
  40cb3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb40:	sbb    al,BYTE PTR [ebx]
  40cb42:	lock fsub QWORD PTR [esi+edx*2+0x1fd1fd27]
  40cb4a:	out    dx,eax
  40cb4b:	icebp  
  40cb4c:	jns    0xbf1f9da6
  40cb52:	mov    bh,0xe3
  40cb54:	xor    BYTE PTR [ebp-0x5c03d16c],dl
  40cb5a:	sbb    eax,0x6ec59d5f
  40cb5f:	jl     0x40cbb4
  40cb61:	pop    ebp
  40cb62:	pop    ecx
  40cb63:	dec    ebp
  40cb64:	retf   
  40cb65:	xchg   DWORD PTR [edx],ecx
  40cb67:	test   eax,0x9e5b63b0
  40cb6c:	rcl    BYTE PTR [eax],cl
  40cb6e:	out    0x3b,eax
  40cb70:	xor    eax,0xfc296a7a
  40cb75:	cmp    al,0x5b
  40cb77:	repnz add al,0x24
  40cb7a:	adc    edi,DWORD PTR [eax]
  40cb7c:	in     eax,0x24
  40cb7e:	jo     0x40cb68
  40cb80:	dec    eax
  40cb81:	xchg   ecx,eax
  40cb82:	or     DWORD PTR [edx-0x73],edx
  40cb85:	int3   
  40cb86:	dec    edi
  40cb87:	lahf   
  40cb88:	in     eax,dx
  40cb89:	cs test al,0x78
  40cb8c:	mov    esp,0xb59d4fb5
  40cb91:	stc    
  40cb92:	add    ch,BYTE PTR [eax+0x48]
  40cb95:	adc    al,0x24
  40cb97:	jnp    0x40cbac
  40cb99:	out    dx,eax
  40cb9a:	push   edi
  40cb9b:	sar    al,cl
  40cb9d:	add    eax,0x9ce5b766
  40cba2:	sub    al,0xab
  40cba4:	add    ecx,DWORD PTR [eax-0x77]
  40cba7:	and    ebx,DWORD PTR [esi+ebp*1]
  40cbaa:	push   ebx
  40cbab:	adc    esi,esi
  40cbad:	test   DWORD PTR [ebp-0x62],edi
  40cbb0:	(bad)  
  40cbb1:	(bad)  
  40cbb2:	push   ds
  40cbb3:	or     BYTE PTR ds:0x69ec804f,dh
  40cbb9:	push   0x1425b02e
  40cbbe:	ins    BYTE PTR es:[edi],dx
  40cbbf:	and    ebp,DWORD PTR [esi]
  40cbc1:	mov    eax,ds:0x55230df8
  40cbc6:	or     ebp,ebx
  40cbc8:	or     BYTE PTR ds:0x23de7ed6,bh
  40cbce:	or     BYTE PTR [edx+0x62a8024b],ch
  40cbd4:	jg     0x40cbf2
  40cbd6:	adc    DWORD PTR [ebx+0x39],esp
  40cbd9:	aaa    
  40cbda:	jle    0x40cb6b
  40cbdc:	aam    0xe0
  40cbde:	pop    ds
  40cbdf:	dec    ecx
  40cbe0:	jnp    0x40cc26
  40cbe2:	xabort 0x68
  40cbe5:	test   BYTE PTR [ebp+0x3d],0xd6
  40cbe9:	ins    BYTE PTR es:[edi],dx
  40cbea:	cmc    
  40cbeb:	shr    DWORD PTR [ebp-0x7a52e964],0xb1
  40cbf2:	cmp    dh,BYTE PTR [edi-0x7ffa1226]
  40cbf8:	es inc ebx
  40cbfa:	fldenv [esi+0x43]
  40cbfd:	xchg   edx,eax
  40cbfe:	inc    ecx
  40cbff:	retf   
  40cc00:	mov    esp,DWORD PTR ds:0x43e08fe5
  40cc06:	mov    ecx,0xd4ec144d
  40cc0b:	(bad)
  40cc0f:	mov    ss,WORD PTR [eax-0x5d0ab966]
  40cc15:	in     al,0xe2
  40cc17:	lahf   
  40cc18:	sub    eax,0x713b0b45
  40cc1d:	push   edi
  40cc1e:	icebp  
  40cc1f:	dec    esi
  40cc20:	icebp  
  40cc21:	sub    esi,DWORD PTR [edi-0x5f]
  40cc24:	mov    ds:0xc757cbbd,eax
  40cc29:	push   ss
  40cc2a:	repnz les ebx,FWORD PTR [ebp+0x7f25803]
  40cc31:	mov    ch,0x78
  40cc33:	xchg   ecx,eax
  40cc34:	icebp  
  40cc35:	pop    esi
  40cc36:	lahf   
  40cc37:	push   edx
  40cc38:	stos   BYTE PTR es:[edi],al
  40cc39:	sbb    bh,BYTE PTR [ebx-0x62241f1c]
  40cc3f:	ret    
  40cc40:	xchg   BYTE PTR [edi-0x8],dh
  40cc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc44:	dec    ebx
  40cc45:	or     esi,DWORD PTR [ebp+esi*1+0x99b827a]
  40cc4c:	pusha  
  40cc4d:	test   al,0xbb
  40cc4f:	inc    ebp
  40cc50:	popa   
  40cc51:	fsubr  DWORD PTR [ebx+0x49]
  40cc54:	pushf  
  40cc55:	add    edi,ebp
  40cc57:	es xchg ebp,eax
  40cc59:	cmc    
  40cc5a:	jmp    0x806bf9a3
  40cc5f:	clc    
  40cc60:	(bad)  
  40cc61:	pushf  
  40cc62:	mov    edx,edi
  40cc64:	xchg   edx,eax
  40cc65:	jnp    0x40cce1
  40cc67:	jns    0x40cbf3
  40cc69:	imul   esi,DWORD PTR [edx+0x23644553],0x1f
  40cc70:	sbb    esi,0x9f229dd2
  40cc76:	loope  0x40cc8d
  40cc78:	pop    eax
  40cc79:	ficomp WORD PTR [eax-0x4ea6cada]
  40cc7f:	fcomp  DWORD PTR [esi]
  40cc81:	mov    al,BYTE PTR [ecx-0x30fa6168]
  40cc87:	inc    esp
  40cc88:	setnp  al
  40cc8b:	sbb    edx,DWORD PTR [edx-0x1d]
  40cc8e:	fwait
  40cc8f:	mov    al,ds:0xc6edaf3a
  40cc94:	inc    esi
  40cc95:	stc    
  40cc96:	ds ret 0x86a7
  40cc9a:	mov    cl,BYTE PTR [esi+0x447b227a]
  40cca0:	ins    DWORD PTR es:[edi],dx
  40cca1:	and    ch,0x8d
  40cca4:	inc    esp
  40cca5:	mov    DWORD PTR [esi-0x63],ecx
  40cca8:	cdq    
  40cca9:	sbb    bl,cl
  40ccab:	push   di
  40ccad:	mov    esi,0x3fedb475
  40ccb2:	loop   0x40ccb2
  40ccb4:	dec    ebx
  40ccb5:	outs   dx,DWORD PTR ds:[esi]
  40ccb6:	push   cs
  40ccb7:	repz jecxz 0x40cc59
  40ccba:	cmp    dh,BYTE PTR [edx-0x79b998bf]
  40ccc0:	push   ss
  40ccc1:	scas   al,BYTE PTR es:[edi]
  40ccc2:	pop    ebx
  40ccc3:	inc    eax
  40ccc4:	xor    edi,DWORD PTR [ecx+ebp*4+0x5e]
  40ccc8:	jno    0x40cc5d
  40ccca:	shr    DWORD PTR [esi+edx*2+0x5fca9377],0xb
  40ccd2:	or     al,0xe8
  40ccd4:	icebp  
  40ccd5:	inc    eax
  40ccd6:	out    dx,eax
  40ccd7:	adc    al,0xb3
  40ccd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccda:	cmp    eax,0xe00baa20
  40ccdf:	clc    
  40cce0:	hlt    
  40cce1:	mov    ebx,0x2e39564
  40cce6:	into   
  40cce7:	shl    edx,cl
  40cce9:	push   ss
  40ccea:	in     eax,dx
  40cceb:	push   edx
  40ccec:	in     al,0x7
  40ccee:	aad    0x29
  40ccf0:	push   ecx
  40ccf1:	inc    esi
  40ccf2:	scas   eax,DWORD PTR es:[edi]
  40ccf3:	scas   eax,DWORD PTR es:[edi]
  40ccf4:	fisub  WORD PTR [ebx]
  40ccf6:	cld    
  40ccf7:	lds    edx,FWORD PTR [ebx]
  40ccf9:	or     eax,0x572dca34
  40ccfe:	push   esp
  40ccff:	sbb    ch,bl
  40cd01:	aaa    
  40cd02:	xchg   ebp,eax
  40cd03:	pusha  
  40cd04:	jecxz  0x40cd1a
  40cd06:	push   esi
  40cd07:	out    dx,eax
  40cd08:	mov    ah,0x79
  40cd0a:	sar    DWORD PTR ds:0x518d2731,cl
  40cd10:	scas   al,BYTE PTR es:[edi]
  40cd11:	mov    al,ds:0xb5f0566a
  40cd16:	push   es
  40cd17:	sbb    DWORD PTR [bx+si-0x1f],esp
  40cd1b:	mov    al,ds:0x2248196a
  40cd20:	out    dx,al
  40cd21:	adc    DWORD PTR [ecx+0x4d310da1],0x33
  40cd28:	jmp    0x894f:0xc81e6fe9
  40cd2f:	adc    eax,DWORD PTR [ebx+0x57]
  40cd32:	dec    ebx
  40cd33:	jnp    0x40cd4d
  40cd35:	out    dx,al
  40cd36:	sbb    eax,0x11118388
  40cd3b:	dec    ecx
  40cd3c:	pop    ecx
  40cd3d:	in     al,dx
  40cd3e:	mov    ch,0x3d
  40cd40:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd42:	int3   
  40cd43:	sub    DWORD PTR [edi-0x6a],ebp
  40cd46:	arpl   si,ax
  40cd48:	xchg   ebx,eax
  40cd49:	adc    al,0xb9
  40cd4b:	add    edi,DWORD PTR [ebx]
  40cd4d:	mov    BYTE PTR [edi+0x1bd30d36],bh
  40cd53:	pop    esp
  40cd54:	pop    DWORD PTR [esi+edi*1+0x40f051b8]
  40cd5b:	push   edi
  40cd5c:	cwde   
  40cd5d:	push   eax
  40cd5e:	in     al,dx
  40cd5f:	mov    bl,0xbf
  40cd61:	cmp    dl,BYTE PTR [ebx-0xdccdb25]
  40cd67:	adc    DWORD PTR [edx],edi
  40cd69:	push   esp
  40cd6a:	push   ebx
  40cd6b:	mov    DWORD PTR [edx+edx*8+0x21],ebx
  40cd6f:	jno    0x40cd86
  40cd71:	pop    ebp
  40cd72:	cmp    eax,0x633984bd
  40cd77:	lea    ecx,[esi]
  40cd79:	and    al,0x32
  40cd7b:	outs   dx,BYTE PTR ds:[esi]
  40cd7c:	sub    BYTE PTR [edx],bh
  40cd7e:	sbb    bl,al
  40cd80:	ins    DWORD PTR es:[edi],dx
  40cd81:	stos   DWORD PTR es:[edi],eax
  40cd82:	das    
  40cd83:	mov    al,0x5d
  40cd85:	mov    BYTE PTR [ecx],ah
  40cd87:	(bad)  
  40cd88:	or     ecx,eax
  40cd8a:	and    al,0x70
  40cd8c:	and    cl,BYTE PTR [edx]
  40cd8e:	das    
  40cd8f:	cmp    DWORD PTR [esi+0x74],esi
  40cd92:	push   es
  40cd93:	arpl   sp,ax
  40cd95:	add    ebx,DWORD PTR [ebp-0x6d]
  40cd98:	cmp    eax,0x45e28d73
  40cd9d:	dec    edi
  40cd9e:	pop    edx
  40cd9f:	add    BYTE PTR [edx],0xf2
  40cda2:	into   
  40cda3:	addr16 xchg ebp,eax
  40cda5:	mov    ecx,0x8cae595a
  40cdaa:	(bad)  
  40cdab:	and    ch,BYTE PTR [edx+0x2f5cf0ed]
  40cdb1:	mov    edi,0x3015cac3
  40cdb6:	push   edi
  40cdb7:	mov    edx,0xf2379ad5
  40cdbc:	xor    ebx,esi
  40cdbe:	ins    DWORD PTR es:[edi],dx
  40cdbf:	push   0x48
  40cdc1:	xchg   ebx,eax
  40cdc2:	adc    eax,0x90e1b236
  40cdc7:	mov    WORD PTR [ebx+edi*4+0x45],es
  40cdcb:	push   ebx
  40cdcc:	jne    0x40cd8d
  40cdce:	dec    DWORD PTR [edi+edx*8]
  40cdd1:	mov    ds:0xd67634d6,eax
  40cdd6:	repz mov cs,WORD PTR [ebp-0x40d6814f]
  40cddd:	push   cs
  40cdde:	aam    0x2
  40cde0:	ror    DWORD PTR [ecx+0x6f7153c1],1
  40cde6:	popf   
  40cde7:	pop    ss
  40cde8:	jo     0x40ce48
  40cdea:	out    dx,eax
  40cdeb:	retf   0xb337
  40cdee:	jo     0x40cd94
  40cdf0:	loope  0x40ce55
  40cdf2:	scas   eax,DWORD PTR es:[edi]
  40cdf3:	fmul   QWORD PTR [ebp-0x4ccb5d7a]
  40cdf9:	jns    0x40ce5c
  40cdfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdfc:	add    dl,BYTE PTR [ebp+0x4c56f04b]
  40ce02:	pop    edi
  40ce03:	jmp    0xc7f8:0xb72f9a20
  40ce0a:	pushf  
  40ce0b:	dec    edx
  40ce0c:	and    DWORD PTR [eax+0x2519b876],0x72ef3834
  40ce16:	pop    ebp
  40ce17:	aam    0xea
  40ce19:	test   eax,0x34a257b9
  40ce1e:	dec    eax
  40ce1f:	xlat   BYTE PTR ds:[ebx]
  40ce20:	addr16 push ebp
  40ce22:	push   ds
  40ce23:	aas    
  40ce24:	jns    0x40ce46
  40ce26:	(bad)
  40ce29:	push   ebp
  40ce2a:	sahf   
  40ce2b:	or     edi,DWORD PTR [ecx-0x48fd9b28]
  40ce31:	data16 xor al,0xa4
  40ce34:	fldcw  WORD PTR [edi+edx*8+0x2]
  40ce38:	fs mov ebx,0x69d2d8db
  40ce3e:	outs   dx,DWORD PTR ds:[esi]
  40ce3f:	loop   0x40ce19
  40ce41:	mov    esp,0x4a9e2b2c
  40ce46:	and    DWORD PTR [esi+esi*2+0xe776402],eax
  40ce4d:	mov    eax,ds:0x9edac4e9
  40ce52:	pop    ebx
  40ce53:	into   
  40ce54:	jle    0x40ce83
  40ce56:	mov    esp,DWORD PTR [edx+0x71440ab4]
  40ce5c:	and    ebx,edx
  40ce5e:	jbe    0x40cde3
  40ce60:	pop    ecx
  40ce61:	sbb    bh,al
  40ce63:	shl    DWORD PTR [ebp+0x2cb53bbe],cl
  40ce69:	lods   eax,DWORD PTR ds:[esi]
  40ce6a:	into   
  40ce6b:	dec    ecx
  40ce6c:	fwait
  40ce6d:	lods   eax,DWORD PTR gs:[esi]
  40ce6f:	xlat   BYTE PTR ds:[ebx]
  40ce70:	pop    ebx
  40ce71:	jnp    0x40cebf
  40ce73:	mov    al,0xdd
  40ce75:	shl    DWORD PTR [edi-0x65],0xa
  40ce79:	imul   esp,edx,0xffffffa4
  40ce7c:	fcomip st,st(1)
  40ce7e:	mov    dh,dl
  40ce80:	ins    DWORD PTR es:[edi],dx
  40ce81:	in     al,0x2e
  40ce83:	hlt    
  40ce84:	add    al,dl
  40ce86:	jne    0x40cf04
  40ce88:	pop    ds
  40ce89:	fisttp DWORD PTR [ebx]
  40ce8b:	sub    BYTE PTR [edi-0x8],ah
  40ce8e:	aaa    
  40ce8f:	mov    BYTE PTR [edi+0x6a7b7f64],ah
  40ce95:	mov    dl,0x71
  40ce97:	mov    al,ds:0x3dee3f4f
  40ce9c:	pop    ebp
  40ce9d:	pop    ds
  40ce9e:	inc    esp
  40ce9f:	and    al,0xe3
  40cea1:	xor    ch,dl
  40cea3:	daa    
  40cea4:	lds    edx,FWORD PTR [ecx+0x417c4330]
  40ceaa:	ret    
  40ceab:	into   
  40ceac:	lahf   
  40cead:	int3   
  40ceae:	or     al,0xb0
  40ceb0:	cmp    BYTE PTR [esp+edx*1-0x5cc3a228],dh
  40ceb7:	cmc    
  40ceb8:	xlat   BYTE PTR ds:[ebx]
  40ceb9:	out    0x3b,eax
  40cebb:	ins    BYTE PTR es:[edi],dx
  40cebc:	inc    edi
  40cebd:	retf   0x76cc
  40cec0:	cmp    ch,bl
  40cec2:	add    ecx,0xbd879fee
  40cec8:	push   edx
  40cec9:	lahf   
  40ceca:	iret   
  40cecb:	push   esp
  40cecc:	mov    eax,DWORD PTR [ecx+0x4379ece]
  40ced2:	mov    al,ds:0x5bdf00cb
  40ced7:	mov    cl,dl
  40ced9:	adc    eax,0xcd259800
  40cede:	(bad)  
  40cedf:	pop    esp
  40cee0:	rol    BYTE PTR [edi+0x24],0x9c
  40cee4:	jmp    0x40ceba
  40cee6:	call   0x5ecbba21
  40ceeb:	ror    BYTE PTR [edx],0x7c
  40ceee:	mov    BYTE PTR [ecx+0x54],al
  40cef1:	in     al,0x42
  40cef3:	imul   ecx,edx,0xffffffba
  40cef6:	arpl   WORD PTR [edi+0x1d0b640a],sp
  40cefc:	pmaxub mm2,QWORD PTR [ebp-0x57]
  40cf00:	mov    dl,0xd4
  40cf02:	xchg   esp,ecx
  40cf04:	cmp    BYTE PTR [eax+0x6b],0xef
  40cf08:	inc    ebx
  40cf09:	mov    esi,0x69820fb2
  40cf0e:	sbb    ah,BYTE PTR [ebp-0x1ec5e5e0]
  40cf14:	mov    esi,0x30b1984b
  40cf19:	lods   eax,DWORD PTR ds:[esi]
  40cf1a:	not    BYTE PTR [eax+0x579604ab]
  40cf20:	cmp    al,0x41
  40cf22:	push   cs
  40cf23:	or     al,0x47
  40cf25:	sub    DWORD PTR [ecx+0x49568175],esp
  40cf2b:	or     al,0xf7
  40cf2d:	stos   BYTE PTR es:[edi],al
  40cf2e:	clc    
  40cf2f:	retf   0xc32a
  40cf32:	xor    BYTE PTR [ecx-0x7c],bl
  40cf35:	or     al,0x39
  40cf37:	jo     0x40cf12
  40cf39:	jecxz  0x40cfac
  40cf3b:	stc    
  40cf3c:	push   0xc8dfe88a
  40cf41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf42:	mov    cl,0xf3
  40cf44:	xor    eax,0xdce7494e
  40cf49:	popa   
  40cf4a:	add    DWORD PTR [ecx+0x41a31392],edi
  40cf50:	cmp    bh,BYTE PTR [eax-0x5973fcfa]
  40cf56:	sbb    edi,DWORD PTR [ecx+0x1e20c9ac]
  40cf5c:	pop    edi
  40cf5d:	dec    esi
  40cf5e:	scas   eax,DWORD PTR es:[edi]
  40cf5f:	dec    esi
  40cf60:	sub    bl,cl
  40cf62:	mov    ds:0x46a2890b,eax
  40cf67:	movq   QWORD PTR ds:0x8d5bd54d,mm1
  40cf6e:	mov    ecx,DWORD PTR [ebx+0x28]
  40cf71:	(bad)  
  40cf73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf74:	imul   esp,ebx,0x53
  40cf77:	dec    edi
  40cf78:	ja     0x40cf5b
  40cf7a:	rol    dh,1
  40cf7c:	and    DWORD PTR [ecx-0x56330ded],esp
  40cf82:	hlt    
  40cf83:	scas   al,BYTE PTR es:[edi]
  40cf84:	sub    eax,0x701928b9
  40cf89:	(bad)  [ecx]
  40cf8b:	repnz std 
  40cf8d:	repnz cmp al,0x10
  40cf90:	sub    edi,ecx
  40cf92:	call   0xf846:0xd2c50c91
  40cf99:	push   esi
  40cf9a:	push   ebp
  40cf9b:	in     eax,0x80
  40cf9d:	mov    bl,0xdd
  40cf9f:	shl    BYTE PTR [edx],cl
  40cfa1:	inc    ecx
  40cfa2:	jg     0x40cfc4
  40cfa4:	and    BYTE PTR [ebp+0x34066dc5],dl
  40cfaa:	adc    BYTE PTR [ecx+esi*1],al
  40cfad:	jecxz  0x40cfe2
  40cfaf:	jb     0x40cfee
  40cfb1:	sub    ch,BYTE PTR ds:0xaee53e0d
  40cfb7:	and    DWORD PTR [esi-0x43],esi
  40cfba:	shl    al,1
  40cfbc:	fidiv  WORD PTR [eax-0x75]
  40cfbf:	dec    edi
  40cfc0:	sbb    eax,0xc439c82c
  40cfc5:	shl    DWORD PTR [edi-0x22],0xf8
  40cfc9:	or     BYTE PTR [eax-0x1faaf921],dh
  40cfcf:	in     al,0x14
  40cfd1:	jns    0x40cfa0
  40cfd3:	fst    DWORD PTR [ebx-0xa83f162]
  40cfd9:	mov    eax,0x458cdca7
  40cfde:	and    ecx,DWORD PTR [ebx+0x7b139c02]
  40cfe4:	outs   dx,DWORD PTR ds:[esi]
  40cfe5:	ror    BYTE PTR [ebx],0xf9
  40cfe8:	je     0x40cfa3
  40cfea:	inc    esi
  40cfeb:	push   es
  40cfec:	mov    edi,0xff7261e8
  40cff1:	fld    QWORD PTR [ebx]
  40cff3:	and    al,0x1b
  40cff5:	fwait
  40cff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff7:	loop   0x40d049
  40cff9:	jge    0x40cfe8
  40cffb:	xor    BYTE PTR [ebx-0x7b],cl
  40cffe:	rol    BYTE PTR gs:0xccf40f09,1
  40d005:	sbb    ebx,DWORD PTR [edi+ebp*1+0x75690882]
  40d00c:	(bad)  
  40d00d:	cld    
  40d00e:	cmp    dl,bh
  40d010:	dec    ebp
  40d011:	or     BYTE PTR [ecx],dl
  40d013:	sti    
  40d014:	rcr    edx,1
  40d016:	stos   BYTE PTR es:[edi],al
  40d017:	pop    es
  40d018:	mov    bl,0x27
  40d01a:	je     0x40cffd
  40d01c:	aaa    
  40d01d:	ins    DWORD PTR es:[edi],dx
  40d01e:	repnz pushf 
  40d020:	mov    ds:0x7faa8c31,al
  40d025:	sub    ah,bh
  40d027:	or     bl,BYTE PTR [edx+0x3d]
  40d02a:	aas    
  40d02b:	add    dh,BYTE PTR [eax+0x53]
  40d02e:	push   edi
  40d02f:	adc    eax,0x1ee7da2c
  40d034:	pop    edi
  40d035:	push   eax
  40d036:	lea    ebx,[ebp+0x7e]
  40d039:	hlt    
  40d03a:	pop    ebx
  40d03b:	jo     0x40d084
  40d03d:	push   cs
  40d03e:	fcmovnb st,st(3)
  40d040:	fstp   TBYTE PTR [edx+ecx*8]
  40d043:	shr    DWORD PTR [ecx*4-0x4f7ddcc],cl
  40d04a:	dec    ebx
  40d04b:	jl     0x40cffc
  40d04d:	jle    0x40d09c
  40d04f:	ror    BYTE PTR [esi-0x5e],1
  40d052:	adc    BYTE PTR [esi+edx*4],bh
  40d055:	retf   0x534c
  40d058:	popa   
  40d059:	scas   al,BYTE PTR es:[edi]
  40d05a:	pusha  
  40d05b:	xchg   BYTE PTR [ebx+ebx*8],ch
  40d05e:	inc    bp
  40d060:	jmp    0x40d0e1
  40d062:	lock dec ebp
  40d064:	cmp    eax,0x58d0d943
  40d069:	lods   al,BYTE PTR ds:[esi]
  40d06a:	leave  
  40d06b:	cmp    edi,ebx
  40d06d:	sub    al,0x49
  40d06f:	inc    esp
  40d070:	pop    ebx
  40d071:	xor    ebx,DWORD PTR [ecx+eiz*8]
  40d074:	xor    dl,BYTE PTR [ebx+0x1a]
  40d077:	push   edi
  40d078:	xchg   esi,eax
  40d079:	fs lahf 
  40d07b:	sbb    al,0xf3
  40d07d:	fwait
  40d07e:	xchg   esi,eax
  40d07f:	pop    esi
  40d080:	dec    edi
  40d081:	out    dx,eax
  40d082:	js     0x40d0ad
  40d084:	xchg   ebx,eax
  40d085:	dec    esi
  40d086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d087:	inc    ecx
  40d088:	sti    
  40d089:	mov    al,ds:0xb7db23bb
  40d08e:	lock rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d091:	mov    esi,0x53ae043f
  40d096:	push   ecx
  40d097:	dec    esi
  40d098:	push   cs
  40d099:	stos   DWORD PTR es:[edi],eax
  40d09a:	mov    bl,0xcc
  40d09c:	(bad)
  40d0a0:	or     BYTE PTR [eax-0x21bf50d8],0x4b
  40d0a7:	pop    ss
  40d0a8:	sbb    edi,DWORD PTR [edx]
  40d0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0ab:	lahf   
  40d0ac:	xchg   edi,eax
  40d0ad:	or     edi,eax
  40d0af:	fs test ebx,ebx
  40d0b2:	rcr    BYTE PTR [edx-0x34],1
  40d0b5:	cmp    ebp,DWORD PTR [eax+edx*8+0x71460a9b]
  40d0bc:	daa    
  40d0bd:	stos   DWORD PTR es:[edi],eax
  40d0be:	mov    ds:0x1b0c708a,eax
  40d0c3:	mov    ch,0x5c
  40d0c5:	jbe    0x40d0c1
  40d0c7:	xchg   ecx,eax
  40d0c8:	popf   
  40d0c9:	mov    ebp,0x821016e2
  40d0ce:	mov    dh,0xc8
  40d0d0:	out    0x1b,eax
  40d0d2:	out    dx,al
  40d0d3:	sbb    eax,0x23091a97
  40d0d8:	out    dx,eax
  40d0d9:	xchg   edi,eax
  40d0da:	test   al,0xc1
  40d0dc:	inc    ebx
  40d0dd:	js     0x40d10e
  40d0df:	hlt    
  40d0e0:	add    DWORD PTR [ebp+0x52],eax
  40d0e3:	sbb    BYTE PTR [ecx+0x4a46bc56],dh
  40d0e9:	shr    edi,cl
  40d0eb:	sbb    al,0x95
  40d0ed:	pop    edx
  40d0ee:	iret   
  40d0ef:	push   edx
  40d0f0:	ins    BYTE PTR es:[edi],dx
  40d0f1:	xchg   ebp,eax
  40d0f2:	imul   edi,DWORD PTR ds:0x24296560,0x1810c0e1
  40d0fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0fd:	pand   mm3,QWORD PTR [ecx+0x28bfcb88]
  40d104:	call   0x6088:0x6eda0899
  40d10b:	inc    esi
  40d10c:	into   
  40d10d:	xchg   BYTE PTR [edx+edi*1],dl
  40d110:	mov    dh,BYTE PTR [ebp+0x24]
  40d113:	sub    DWORD PTR [ebp+0x78296f49],ebx
  40d119:	data16 dec BYTE PTR gs:[ebx+0x36]
  40d11e:	js     0x40d0fc
  40d120:	ins    BYTE PTR es:[edi],dx
  40d121:	mov    bl,0x15
  40d123:	out    dx,eax
  40d124:	inc    esi
  40d125:	out    dx,eax
  40d126:	inc    ebp
  40d127:	pop    ebp
  40d128:	add    dl,dl
  40d12a:	iret   
  40d12b:	stc    
  40d12c:	fwait
  40d12d:	mov    bh,0x13
  40d12f:	and    eax,0xf08d2e1a
  40d134:	cwde   
  40d135:	mov    ecx,0x4c7e02fa
  40d13a:	out    0xeb,al
  40d13c:	sub    BYTE PTR [ecx],ah
  40d13e:	push   0x5
  40d140:	out    dx,al
  40d141:	inc    eax
  40d142:	mov    dl,0xb7
  40d144:	(bad)  
  40d145:	xor    ebp,ebx
  40d147:	mov    ch,0x93
  40d149:	arpl   WORD PTR [edx-0x46],bp
  40d14c:	cmp    DWORD PTR [ebx+edi*8-0x2b],esi
  40d150:	or     al,0xf
  40d152:	bound  ebx,QWORD PTR [esi-0x15]
  40d155:	shl    BYTE PTR [esi],0xdb
  40d158:	mov    esi,0xc4e21301
  40d15d:	scas   eax,DWORD PTR es:[edi]
  40d15e:	out    0xe3,eax
  40d160:	hlt    
  40d161:	in     eax,0x54
  40d163:	sub    DWORD PTR [edx],ebx
  40d165:	inc    ebx
  40d166:	pop    esi
  40d167:	out    dx,eax
  40d168:	clc    
  40d169:	in     eax,dx
  40d16a:	loop   0x40d10f
  40d16c:	jge    0x40d1a3
  40d16e:	xchg   ebx,eax
  40d16f:	jmp    0x40d185
  40d171:	rol    esp,cl
  40d173:	jo     0x40d1dc
  40d175:	inc    edi
  40d176:	dec    esp
  40d177:	mov    eax,0xb6dda66a
  40d17c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17d:	enter  0xd493,0x82
  40d181:	imul   edx,esi,0xffffff89
  40d184:	add    eax,0xf7cc8470
  40d189:	std    
  40d18a:	lock pusha 
  40d18c:	out    0xc0,eax
  40d18e:	cld    
  40d18f:	fcomip st,st(1)
  40d191:	lahf   
  40d192:	stc    
  40d193:	xchg   edi,eax
  40d194:	xor    al,BYTE PTR [bp+si]
  40d197:	add    al,0xf7
  40d199:	cmp    al,0xd0
  40d19b:	ins    BYTE PTR es:[edi],dx
  40d19c:	pushf  
  40d19d:	sbb    eax,DWORD PTR [eax-0xc]
  40d1a0:	push   edx
  40d1a1:	into   
  40d1a2:	jns    0x40d18a
  40d1a4:	sub    edx,DWORD PTR [ebx-0x7c]
  40d1a7:	add    eax,0x5b96e0d2
  40d1ac:	in     eax,dx
  40d1ad:	pushf  
  40d1ae:	sub    eax,0xfc00b09
  40d1b3:	jg     0x40d170
  40d1b5:	xchg   esi,eax
  40d1b6:	mov    esp,0x964f809f
  40d1bb:	das    
  40d1bc:	inc    ebp
  40d1bd:	sbb    BYTE PTR [eax*8-0x4676941c],bh
  40d1c4:	test   DWORD PTR [edx-0x2d],0xda0074e
  40d1cb:	xchg   ebx,eax
  40d1cc:	xor    cl,BYTE PTR [ebp-0x26]
  40d1cf:	xchg   ecx,eax
  40d1d0:	push   ds
  40d1d1:	push   ds
  40d1d2:	frstor [ecx]
  40d1d4:	mov    cl,0xda
  40d1d6:	xchg   ecx,eax
  40d1d7:	inc    ebx
  40d1d8:	cld    
  40d1d9:	jmp    0x53962b3a
  40d1de:	or     DWORD PTR [edx+0x3a],esi
  40d1e1:	push   eax
  40d1e2:	mov    edx,DWORD PTR [edx+0x2d]
  40d1e5:	xor    BYTE PTR [esi],dl
  40d1e7:	jae    0x40d171
  40d1e9:	pop    ebp
  40d1ea:	pop    ecx
  40d1eb:	ja     0x40d208
  40d1ed:	or     DWORD PTR [edx-0x22923317],ecx
  40d1f3:	push   ss
  40d1f4:	jmp    0x609:0x5362fa8b
  40d1fb:	imul   ecx,DWORD PTR [edx],0xc6e7df79
  40d201:	cmp    dh,BYTE PTR [ebx+ecx*2+0x21b47339]
  40d208:	pop    ss
  40d209:	fadd   QWORD PTR [ecx+eax*8+0x46]
  40d20d:	test   ecx,edi
  40d20f:	or     eax,0x84be4aa7
  40d214:	cld    
  40d215:	repz jmp 0x5935:0xd0aea987
  40d21d:	test   al,0x89
  40d21f:	aad    0x98
  40d221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d222:	enter  0x91b4,0xef
  40d226:	ds loop 0x40d293
  40d229:	rcr    DWORD PTR [edi],0xb9
  40d22c:	push   esp
  40d22d:	xchg   ebp,eax
  40d22e:	mov    cl,0x41
  40d230:	xchg   BYTE PTR [edx+eiz*8-0x72],dl
  40d234:	inc    eax
  40d235:	push   ss
  40d236:	inc    esi
  40d237:	pusha  
  40d238:	into   
  40d239:	mov    al,0xe1
  40d23b:	ss in  eax,dx
  40d23d:	dec    edx
  40d23e:	ret    0x5014
  40d241:	inc    eax
  40d242:	pop    edx
  40d243:	jbe    0x40d263
  40d245:	int    0xc7
  40d247:	lds    ebx,FWORD PTR [eax]
  40d249:	push   0xffffffba
  40d24b:	lds    ecx,FWORD PTR [ebp-0x62b9c286]
  40d251:	(bad)  
  40d252:	cmp    eax,0xc1d49151
  40d257:	sbb    BYTE PTR [ebx-0x74],dl
  40d25a:	dec    edx
  40d25b:	inc    DWORD PTR [eax+0x1e]
  40d25e:	cmp    esi,DWORD PTR [esi]
  40d260:	xchg   BYTE PTR [ebp+esi*1+0x2b11d953],dh
  40d267:	push   edi
  40d268:	pop    es
  40d269:	cmp    DWORD PTR [edx+ebx*4-0x64],0xffffffdd
  40d26e:	xor    DWORD PTR [edi+0x356944e1],eax
  40d274:	xor    eax,0xce775611
  40d279:	mov    ah,0xcb
  40d27b:	mov    dh,0xce
  40d27d:	fnsave [esi+0x17b641d3]
  40d283:	inc    esp
  40d284:	sub    al,0xaa
  40d286:	scas   al,BYTE PTR es:[edi]
  40d287:	out    dx,eax
  40d288:	mov    ecx,0x383f16e8
  40d28d:	xor    al,0x7c
  40d28f:	jl     0x40d24d
  40d291:	jge    0x40d2a0
  40d293:	mov    edx,0x7be99159
  40d298:	je     0x40d284
  40d29a:	nop
  40d29b:	mov    esi,0xad6244d5
  40d2a0:	xor    al,0x7d
  40d2a2:	cmp    eax,DWORD PTR [ebp+0x5d]
  40d2a5:	in     eax,0x5c
  40d2a7:	cli    
  40d2a8:	add    eax,ebp
  40d2aa:	dec    ebp
  40d2ab:	mov    al,ds:0x6feb3d39
  40d2b0:	pop    es
  40d2b1:	sub    dl,BYTE PTR [eax]
  40d2b3:	jle    0x40d23d
  40d2b5:	fldcw  WORD PTR [edi+esi*1]
  40d2b8:	add    DWORD PTR fs:[ebp-0x2aa02851],eax
  40d2bf:	push   ebp
  40d2c0:	push   es
  40d2c1:	jo     0x40d304
  40d2c3:	int    0x0
  40d2c5:	repnz rcr bh,cl
  40d2c8:	xor    dl,BYTE PTR [ecx]
  40d2ca:	mov    esi,DWORD PTR [edx]
  40d2cc:	xchg   DWORD PTR [eax-0x7d],esp
  40d2cf:	rcr    BYTE PTR [esi+0x60284ea2],cl
  40d2d5:	mov    DWORD PTR [ecx-0x2a],esi
  40d2d8:	and    BYTE PTR [ebx+eax*4+0x459b5f5f],0x63
  40d2e0:	loop   0x40d2ac
  40d2e2:	test   DWORD PTR [edi-0x30],edx
  40d2e5:	inc    edx
  40d2e6:	fdivr  st,st(3)
  40d2e8:	outs   dx,BYTE PTR ds:[esi]
  40d2e9:	popa   
  40d2ea:	push   esi
  40d2eb:	add    al,0xf3
  40d2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ee:	push   cs
  40d2ef:	jnp    0x40d2e5
  40d2f1:	jmp    0x40d2c6
  40d2f3:	dec    esp
  40d2f4:	pop    es
  40d2f5:	adc    al,0xa2
  40d2f7:	jecxz  0x40d2fd
  40d2f9:	in     al,dx
  40d2fa:	iret   
  40d2fb:	xchg   ebp,eax
  40d2fc:	push   es
  40d2fd:	idiv   BYTE PTR [edi+eax*8+0xe812eda]
  40d304:	int    0xf
  40d306:	jmp    0x4a06:0x3e489468
  40d30d:	adc    DWORD PTR [edi+edi*2],esp
  40d310:	fidivr DWORD PTR [ebp+0x25]
  40d313:	pushf  
  40d314:	xchg   ebp,eax
  40d315:	adc    al,0x6
  40d317:	sbb    al,0xeb
  40d319:	jp     0x40d331
  40d31b:	inc    edi
  40d31c:	shl    BYTE PTR [edx-0x4c],cl
  40d31f:	mov    eax,ds:0x63aabfb1
  40d324:	int3   
  40d325:	stos   BYTE PTR es:[edi],al
  40d326:	or     DWORD PTR [edx-0x5c751f59],ebp
  40d32c:	loopne 0x40d368
  40d32e:	(bad)  
  40d32f:	psrlw  mm0,QWORD PTR [ebp+0x453066d0]
  40d336:	out    0x90,eax
  40d338:	jmp    0xaff2e873
  40d33d:	jnp    0x40d394
  40d33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d340:	fstp   DWORD PTR [ebx-0x766b1baa]
  40d346:	in     eax,dx
  40d347:	xchg   esi,eax
  40d348:	pop    esi
  40d349:	pop    ss
  40d34a:	xor    BYTE PTR [edi],dh
  40d34c:	test   eax,0xb78fc5ab
  40d351:	or     BYTE PTR [eax],ch
  40d353:	xlat   BYTE PTR ds:[ebx]
  40d354:	or     eax,0xdea86a45
  40d359:	stos   DWORD PTR es:[edi],eax
  40d35a:	inc    eax
  40d35b:	cmp    eax,0x7d9d77a9
  40d360:	cmp    eax,0x9ecb8e3e
  40d365:	(bad)  [edx-0x406eac3d]
  40d36b:	in     al,dx
  40d36c:	daa    
  40d36d:	sbb    dh,BYTE PTR [eax+0x2fcae96e]
  40d373:	jnp    0x40d39c
  40d375:	sahf   
  40d376:	lds    ecx,FWORD PTR [esi-0x6cbc0954]
  40d37c:	mov    ds:0x2c3811d,al
  40d381:	adc    BYTE PTR [eax],al
  40d383:	add    BYTE PTR [ebp-0x2ffc17bb],cl
  40d389:	add    edx,0x5
  40d38c:	push   edx
  40d38d:	inc    esi
  40d38e:	pop    ecx
  40d38f:	dec    ecx
  40d390:	xchg   ecx,eax
  40d391:	dec    eax
  40d392:	xchg   ecx,eax
  40d393:	dec    ecx
  40d394:	xchg   ecx,edx
  40d396:	dec    edx
  40d397:	push   edx
  40d398:	mov    edx,ebx
  40d39a:	pop    ebx
  40d39b:	dec    ebx
  40d39c:	call   DWORD PTR [ebx]
  40d39e:	cmp    DWORD PTR [ebp+0x10],esi
  40d3a1:	je     0x40f754
  40d3a7:	xchg   edx,eax
  40d3a8:	push   0xc
  40d3aa:	pop    ecx
  40d3ab:	dec    ecx
  40d3ac:	push   0x3
  40d3ae:	pop    ebx
  40d3af:	inc    ebx
  40d3b0:	xchg   ebx,ecx
  40d3b2:	inc    ecx
  40d3b3:	sub    ebx,ecx
  40d3b5:	xchg   ebx,ecx
  40d3b7:	dec    ecx
  40d3b8:	dec    ecx
  40d3b9:	mov    eax,DWORD PTR [ebp-0x1c]
  40d3bc:	imul   eax,ecx
  40d3bf:	jmp    0x40f751
  40d3c4:	inc    eax
  40d3c5:	sbb    edx,DWORD PTR [ebp-0x1e]
  40d3c8:	push   edx
  40d3c9:	mov    ds:0x35198590,al
  40d3ce:	aad    0x91
  40d3d0:	les    edi,FWORD PTR [ecx-0x2c4d5bce]
  40d3d6:	add    DWORD PTR [ebx-0x7c7ca1f4],0x67
  40d3dd:	lods   al,BYTE PTR ds:[esi]
  40d3de:	or     cl,BYTE PTR [esi]
  40d3e0:	add    esi,DWORD PTR [ebp+0x4a249414]
  40d3e6:	and    al,0xc8
  40d3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3e9:	mov    ecx,DWORD PTR [ecx+0x23568069]
  40d3ef:	and    eax,DWORD PTR [esi-0x2]
  40d3f2:	daa    
  40d3f3:	and    BYTE PTR [eax+0x5f64f1a8],0xca
  40d3fa:	cdq    
  40d3fb:	aad    0x79
  40d3fd:	lds    ebp,FWORD PTR [esi-0x634273c2]
  40d403:	xchg   esp,eax
  40d404:	call   0x708be520
  40d409:	(bad)  
  40d40a:	icebp  
  40d40b:	xchg   ecx,eax
  40d40c:	mov    DWORD PTR [eax],ebx
  40d40e:	xor    bl,BYTE PTR [eax+0x52]
  40d411:	cmovbe edi,DWORD PTR [edi-0x53]
  40d415:	dec    ebx
  40d416:	(bad)  
  40d417:	jmp    0x40d468
  40d419:	ja     0x40d3ba
  40d41b:	int3   
  40d41c:	xchg   edi,eax
  40d41d:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d420:	fucomi st,st(0)
  40d422:	jnp    0x40d499
  40d424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d425:	xlat   BYTE PTR ds:[ebx]
  40d426:	popf   
  40d427:	dec    ebp
  40d428:	adc    al,0x9a
  40d42a:	inc    ecx
  40d42b:	or     ch,dh
  40d42d:	mov    ebp,0xd59dece4
  40d432:	push   0x8b0eb987
  40d437:	push   es
  40d438:	nop
  40d439:	ins    DWORD PTR es:[edi],dx
  40d43a:	test   DWORD PTR [ecx-0x12],eax
  40d43d:	jno    0x40d3d9
  40d43f:	out    dx,al
  40d440:	mov    bh,0x59
  40d442:	xchg   ecx,eax
  40d443:	or     BYTE PTR [ebx-0x55],ah
  40d446:	mov    WORD PTR [edx],gs
  40d448:	rol    BYTE PTR [ebp+0x326d2307],cl
  40d44e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d44f:	in     al,dx
  40d450:	dec    edi
  40d451:	push   esi
  40d452:	retf   0xd0a7
  40d455:	xor    BYTE PTR [edi],cl
  40d457:	data16 and BYTE PTR [ebx],ch
  40d45a:	or     bl,BYTE PTR [ebx+0x57819172]
  40d460:	repnz inc ebx
  40d462:	rol    DWORD PTR [edi*4+0x4895ceaa],1
  40d469:	das    
  40d46a:	mov    bx,0x7a27
  40d46e:	pop    ss
  40d46f:	loopne 0x40d447
  40d471:	jle    0x40d484
  40d473:	dec    esi
  40d474:	and    ah,al
  40d476:	pop    esi
  40d477:	ror    BYTE PTR [eax-0x34ffa385],0xb9
  40d47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47f:	cwde   
  40d480:	loop   0x40d49d
  40d482:	jge    0x40d4e5
  40d484:	jo     0x40d42d
  40d486:	mov    bh,BYTE PTR [ecx+0x4f]
  40d489:	mov    WORD PTR [eax+edi*4+0x70],?
  40d48d:	xor    bl,BYTE PTR ds:0xff14c7a1
  40d493:	fsub   QWORD PTR [ebx+0x19]
  40d496:	add    BYTE PTR [esi+0x6e5ab668],0x4d
  40d49d:	xchg   ebp,eax
  40d49e:	lds    ebx,FWORD PTR [ebx-0x27]
  40d4a1:	sbb    BYTE PTR [ebp+ebp*2+0x31e11a6a],bh
  40d4a8:	outs   dx,DWORD PTR ds:[esi]
  40d4a9:	jl     0x40d498
  40d4ab:	ja     0x40d4bd
  40d4ad:	xor    edi,DWORD PTR [ebp+0x3b]
  40d4b0:	cmp    BYTE PTR [ecx-0x3d],bl
  40d4b3:	ja     0x40d464
  40d4b5:	imul   ecx,DWORD PTR [eax],0xffffffed
  40d4b8:	sti    
  40d4b9:	loop   0x40d47e
  40d4bb:	out    dx,eax
  40d4bc:	mov    edx,0x5d1da030
  40d4c1:	fstp   st(1)
  40d4c3:	rcl    BYTE PTR [eax-0x54a7d395],1
  40d4c9:	jecxz  0x40d4f6
  40d4cb:	icebp  
  40d4cc:	je     0x40d496
  40d4ce:	mov    dh,0x79
  40d4d0:	add    eax,0xefaa4ae2
  40d4d5:	add    dl,BYTE PTR [edx+0x7f0eb106]
  40d4db:	pop    es
  40d4dc:	je     0x40d469
  40d4de:	mov    eax,0x721254f1
  40d4e3:	outs   dx,DWORD PTR ds:[esi]
  40d4e4:	aas    
  40d4e5:	(bad)  
  40d4e6:	ins    DWORD PTR es:[edi],dx
  40d4e7:	fdivr  DWORD PTR [ebp-0x42]
  40d4ea:	and    bh,ah
  40d4ec:	cli    
  40d4ed:	fisubr WORD PTR [ecx-0x44]
  40d4f0:	ret    
  40d4f1:	call   0xe3426882
  40d4f6:	dec    edx
  40d4f7:	fiadd  DWORD PTR [ebx+0x53ef1042]
  40d4fd:	xchg   edi,eax
  40d4fe:	xor    edi,DWORD PTR [eax+0x51f75b85]
  40d504:	frstor [esi+0xd57aca]
  40d50a:	mov    dh,0x33
  40d50c:	xor    eax,0xfdd31729
  40d511:	addr16 ret 0x9c4d
  40d515:	es push ds
  40d517:	sar    BYTE PTR [edi+edx*1-0x3f18a8fb],0xb5
  40d51f:	xor    ecx,DWORD PTR [esi]
  40d521:	addr16 dec esi
  40d523:	and    al,0xbb
  40d525:	mov    ah,0x80
  40d527:	sub    BYTE PTR ss:[eax+0x300343f5],0xd1
  40d52f:	pop    edx
  40d530:	or     dl,BYTE PTR [ebx-0x45]
  40d533:	jns    0x40d4d4
  40d535:	adc    eax,0xe8fcb4e7
  40d53a:	xor    eax,0xf11a6e1f
  40d53f:	dec    ebx
  40d540:	xchg   edx,eax
  40d541:	ja     0x40d578
  40d543:	gs xchg ecx,eax
  40d545:	rcl    bh,1
  40d547:	sbb    DWORD PTR [edi+0x4318f189],esp
  40d54d:	retf   0xb7be
  40d550:	arpl   WORD PTR [edx+0x74],cx
  40d553:	and    bh,bl
  40d555:	stc    
  40d556:	fnstsw WORD PTR [eax+0x76]
  40d559:	pop    edi
  40d55a:	mov    cl,0xcd
  40d55c:	add    DWORD PTR [ecx+0x3a0ec096],0x53d616d7
  40d566:	mov    edx,0x3bc79174
  40d56b:	jmp    0x5f4afa72
  40d570:	pusha  
  40d571:	pop    edi
  40d572:	lods   eax,DWORD PTR ds:[esi]
  40d573:	or     edi,DWORD PTR [edi]
  40d575:	dec    edx
  40d576:	arpl   WORD PTR [ecx],cx
  40d578:	fadd   DWORD PTR [ebp-0x2a]
  40d57b:	cdq    
  40d57c:	push   0xffffffec
  40d57e:	aam    0x1
  40d580:	loopne 0x40d544
  40d582:	ins    BYTE PTR es:[edi],dx
  40d583:	jmp    0xd4a49636
  40d588:	das    
  40d589:	xlat   BYTE PTR ds:[ebx]
  40d58a:	mov    eax,ds:0x511ac7aa
  40d58f:	(bad)  
  40d590:	mov    edi,0x30c4456b
  40d595:	dec    ebx
  40d596:	dec    ecx
  40d597:	in     al,dx
  40d598:	nop
  40d599:	lea    esp,[esi+edi*8+0x455f374e]
  40d5a0:	(bad)
  40d5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5a6:	xor    BYTE PTR [eax+ebx*4+0x7c],ah
  40d5aa:	adc    BYTE PTR [ebp+0x498d040],ah
  40d5b0:	cmp    DWORD PTR [edx],ebx
  40d5b2:	loopne 0x40d621
  40d5b4:	jo     0x40d53f
  40d5b6:	cwde   
  40d5b7:	imul   esp,DWORD PTR [edx],0xaf89b86d
  40d5bd:	in     eax,0x4c
  40d5bf:	std    
  40d5c0:	xchg   esi,eax
  40d5c1:	fcomp  QWORD PTR [ebp+0x48]
  40d5c4:	cmp    esp,DWORD PTR [ebx]
  40d5c6:	imul   esp,DWORD PTR [ecx],0x4d76a04b
  40d5cc:	push   ebp
  40d5cd:	outs   dx,BYTE PTR ds:[esi]
  40d5ce:	sbb    ebx,DWORD PTR [esi-0x1fbc0cb2]
  40d5d4:	(bad)  
  40d5d5:	shl    ch,0x33
  40d5d8:	dec    eax
  40d5d9:	mov    eax,0xd220f180
  40d5de:	test   DWORD PTR [ebp-0x9],edx
  40d5e1:	jbe    0x40d651
  40d5e3:	or     ah,BYTE PTR [ebp-0x29499fda]
  40d5e9:	jle    0x40d5d0
  40d5eb:	loope  0x40d63a
  40d5ed:	lods   al,BYTE PTR ds:[esi]
  40d5ee:	enter  0x9a72,0xe7
  40d5f2:	rcr    BYTE PTR ds:0xb2f8d3bf,0x6
  40d5f9:	fs jmp 0x91fc:0xbf29650b
  40d601:	ds push 0x62a493c3
  40d607:	aad    0x7b
  40d609:	cmp    dh,BYTE PTR [esi-0x6f]
  40d60c:	mov    dh,0x4a
  40d60e:	aam    0x26
  40d610:	or     BYTE PTR ds:0x5f792cb8,0x29
  40d617:	mov    cs,ebp
  40d619:	es xchg edx,eax
  40d61b:	addr16 cmp eax,0x8c2d1f8b
  40d621:	and    DWORD PTR [ecx-0x2bd12255],eax
  40d627:	lods   al,BYTE PTR ds:[esi]
  40d628:	retf   
  40d629:	jae    0x40d6a3
  40d62b:	sub    BYTE PTR [edi-0x319b13cf],cl
  40d631:	mov    ch,0x90
  40d633:	jecxz  0x40d62e
  40d635:	and    al,0xda
  40d637:	pop    esi
  40d638:	fsubr  QWORD PTR ds:0x17cc8a22
  40d63e:	cmp    al,0x5c
  40d640:	adc    BYTE PTR [edx+0x1b],bh
  40d643:	test   DWORD PTR [ebp+0x74c8ec51],esi
  40d649:	push   ecx
  40d64a:	inc    ebx
  40d64b:	push   ebp
  40d64c:	or     eax,0xad9a4083
  40d651:	sbb    BYTE PTR [ecx],dl
  40d653:	and    dh,0xec
  40d656:	sbb    eax,DWORD PTR [ecx+0x9]
  40d659:	ja     0x40d687
  40d65b:	repz inc ebx
  40d65d:	imul   ebp,esi,0x9
  40d660:	cdq    
  40d661:	push   0xd1f44d16
  40d666:	adc    dh,BYTE PTR [eax-0x6de584cb]
  40d66c:	xchg   ecx,eax
  40d66d:	inc    ebx
  40d66e:	push   esp
  40d66f:	push   edi
  40d670:	aas    
  40d671:	loop   0x40d5ff
  40d673:	mov    ebp,0x1a658ef1
  40d678:	es xchg esp,eax
  40d67a:	mov    ah,cl
  40d67c:	lods   eax,DWORD PTR ds:[esi]
  40d67d:	call   DWORD PTR [edx-0x79]
  40d680:	or     eax,0xb77008ff
  40d685:	mov    ebp,ebx
  40d687:	enter  0x100e,0xe3
  40d68b:	fucom  st(7)
  40d68d:	call   0x5315:0x7107a1cc
  40d694:	xchg   ebx,eax
  40d695:	popa   
  40d696:	push   es
  40d697:	hlt    
  40d698:	scas   al,BYTE PTR es:[edi]
  40d699:	shr    BYTE PTR [eax],cl
  40d69b:	dec    ebx
  40d69c:	popf   
  40d69d:	arpl   WORD PTR [edx],bx
  40d69f:	add    BYTE PTR [ecx-0x1f251314],0x29
  40d6a6:	sbb    BYTE PTR [edi],al
  40d6a8:	or     BYTE PTR [esi*4+0x2029e2a7],dl
  40d6af:	mov    ah,BYTE PTR [edi]
  40d6b1:	and    al,0x3
  40d6b3:	dec    ecx
  40d6b4:	out    dx,al
  40d6b5:	inc    esi
  40d6b6:	je     0x40d737
  40d6b8:	sbb    cl,bl
  40d6ba:	sub    eax,0xa8994761
  40d6bf:	out    0x6b,al
  40d6c1:	mov    ecx,0xa25924e0
  40d6c6:	(bad)  [edx+0x4b463fb6]
  40d6cc:	jo     0x40d6cf
  40d6ce:	adc    ebp,esi
  40d6d0:	das    
  40d6d1:	mov    ecx,db0
  40d6d4:	xor    eax,0x53a9487d
  40d6d9:	pop    esp
  40d6da:	mov    al,0xb4
  40d6dc:	pop    ebx
  40d6dd:	push   ss
  40d6de:	sbb    eax,0x8145dbde
  40d6e3:	sbb    al,0xd8
  40d6e5:	js     0x40d6f4
  40d6e7:	fbstp  TBYTE PTR [edx]
  40d6e9:	jno    0x40d6ad
  40d6eb:	sbb    eax,DWORD PTR ds:0xf6ec3bfa
  40d6f1:	sbb    al,0x30
  40d6f3:	sbb    al,0x40
  40d6f5:	rcl    BYTE PTR [ebp-0x4af356e0],0x6c
  40d6fc:	dec    esp
  40d6fd:	add    DWORD PTR [ebx-0x45],ecx
  40d700:	add    ebp,ebp
  40d702:	es xlat BYTE PTR es:[ebx]
  40d705:	in     al,dx
  40d706:	mov    esp,0xd13018f1
  40d70b:	dec    edi
  40d70c:	mov    eax,ds:0xabc98615
  40d711:	push   eax
  40d712:	in     al,dx
  40d713:	mov    dh,cl
  40d715:	sbb    eax,eax
  40d717:	in     eax,dx
  40d718:	cvtdq2ps xmm3,XMMWORD PTR [eax]
  40d71b:	leave  
  40d71c:	in     eax,dx
  40d71d:	fwait
  40d71e:	or     bh,bh
  40d720:	push   es
  40d721:	fnsave [edi-0x5b]
  40d724:	je     0x40d717
  40d726:	inc    edx
  40d727:	jecxz  0x40d75e
  40d729:	retf   
  40d72a:	adc    bl,BYTE PTR [ebx-0xc]
  40d72d:	mov    cl,0x5f
  40d72f:	lea    esi,[ebx+0x26b64ee3]
  40d735:	div    BYTE PTR ds:0x898112b9
  40d73b:	add    ecx,DWORD PTR [esi]
  40d73d:	shl    BYTE PTR [edi+0x37],1
  40d740:	xchg   edi,eax
  40d741:	adc    DWORD PTR [ebx],edi
  40d743:	xor    eax,0x1d7ee81f
  40d748:	cmp    eax,0x3d2bfaaa
  40d74d:	or     esi,DWORD PTR [ebx-0x45]
  40d750:	jmp    0x1019dd1e
  40d755:	inc    edx
  40d756:	std    
  40d757:	test   eax,0x16394e0d
  40d75c:	sub    DWORD PTR [esi+0x14d7a621],edx
  40d762:	bnd js 0x40d794
  40d765:	outs   dx,BYTE PTR ds:[esi]
  40d766:	cli    
  40d767:	pop    ebx
  40d768:	and    ebx,DWORD PTR [ebp-0x46]
  40d76b:	div    DWORD PTR [ecx+0x11]
  40d76e:	mov    dl,0x42
  40d770:	adc    bh,BYTE PTR [ecx-0x6f]
  40d773:	out    0xc9,al
  40d775:	sahf   
  40d776:	sbb    BYTE PTR [edi],ah
  40d778:	fistp  WORD PTR [edx+0x49343904]
  40d77e:	imul   ebx,DWORD PTR [ebp+ecx*1-0x52c64413],0xe332a5c4
  40d789:	xor    al,0x37
  40d78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d78c:	pop    edx
  40d78d:	xor    al,0x20
  40d78f:	push   es
  40d790:	mov    eax,ds:0x3c4fa4a7
  40d795:	in     eax,0x92
  40d797:	or     BYTE PTR [esp+ebx*2],0xfb
  40d79b:	mov    esp,0x1302d37e
  40d7a0:	xchg   dl,al
  40d7a2:	inc    ecx
  40d7a3:	je     0x40d7fe
  40d7a5:	into   
  40d7a6:	jns    0x40d732
  40d7a8:	push   es
  40d7a9:	xchg   edx,eax
  40d7aa:	stos   DWORD PTR es:[edi],eax
  40d7ab:	fidiv  WORD PTR [ebx+0x729cea62]
  40d7b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b2:	out    0x17,eax
  40d7b4:	mov    DWORD PTR [edi+eax*4-0x35],esp
  40d7b8:	mov    DWORD PTR [ebx+eax*2-0x40859337],ebp
  40d7bf:	gs out dx,al
  40d7c1:	xor    al,0xce
  40d7c3:	mov    eax,ds:0x1234e912
  40d7c8:	sub    BYTE PTR [eax+0x2f4dace0],ch
  40d7ce:	wrmsr  
  40d7d0:	mov    edi,0xeb28ebe0
  40d7d5:	and    al,BYTE PTR [eax+0x65add3b5]
  40d7db:	lahf   
  40d7dc:	fwait
  40d7dd:	mov    ebx,0x37922652
  40d7e2:	retf   0xb3f5
  40d7e5:	fwait
  40d7e6:	pop    ebp
  40d7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e8:	je     0x40d823
  40d7ea:	dec    ebp
  40d7eb:	retf   0x774e
  40d7ee:	jmp    0xdcb9:0xe312d715
  40d7f5:	mov    cs,ecx
  40d7f7:	push   ebx
  40d7f8:	inc    esi
  40d7f9:	jns    0x40d83f
  40d7fb:	mov    esi,DWORD PTR ds:0x432cdcf
  40d801:	loope  0x40d881
  40d803:	or     DWORD PTR [ecx-0x1],ebx
  40d806:	push   ecx
  40d807:	lock into 
  40d809:	adc    cl,BYTE PTR [edx]
  40d80b:	test   eax,0xf5684952
  40d810:	iret   
  40d811:	sbb    al,0x42
  40d813:	inc    ecx
  40d814:	jnp    0x40d7c2
  40d816:	in     eax,0x7f
  40d818:	push   edi
  40d819:	sub    al,0x2a
  40d81b:	test   DWORD PTR [esi+0x587929fb],0x832389be
  40d825:	mov    al,ds:0x9d08c02f
  40d82a:	sbb    esi,ebx
  40d82c:	sbb    DWORD PTR [ebx-0x7d],eax
  40d82f:	pop    es
  40d830:	clc    
  40d831:	jo     0x40d88f
  40d833:	stos   BYTE PTR es:[edi],al
  40d834:	inc    ebx
  40d835:	pop    ecx
  40d836:	ja     0x40d857
  40d838:	jo     0x40d85b
  40d83a:	xchg   esi,eax
  40d83b:	dec    edx
  40d83c:	push   edx
  40d83d:	and    dh,ah
  40d83f:	jmp    0x40d7dc
  40d841:	sbb    ebx,DWORD PTR [edi+0x53]
  40d844:	enter  0x79e3,0x41
  40d848:	mov    ds:0xc4c21fe2,al
  40d84d:	retf   0xaa3
  40d850:	xchg   ebp,eax
  40d851:	adc    eax,0x435f62a0
  40d856:	or     esp,ebx
  40d858:	add    ebp,esp
  40d85a:	stc    
  40d85b:	faddp  st(3),st
  40d85d:	xor    ebp,DWORD PTR [edi+0x36]
  40d860:	add    al,0x65
  40d862:	das    
  40d863:	hlt    
  40d864:	jmp    0xb16e:0x504689c7
  40d86b:	(bad)  
  40d86c:	idiv   BYTE PTR [edx-0x7f]
  40d86f:	mov    BYTE PTR [edi-0x3d],bl
  40d872:	(bad)  
  40d873:	adc    BYTE PTR [ebx-0x75336be4],bl
  40d879:	sub    eax,0xcdd208d5
  40d87e:	imul   ecx,eax,0xd05ba66
  40d884:	mov    edi,0xacbc590d
  40d889:	xor    al,0x5a
  40d88b:	mov    eax,0x9fb519d
  40d890:	push   0xffffffe7
  40d892:	fild   WORD PTR [ebx]
  40d894:	test   al,bl
  40d896:	cmp    ebx,DWORD PTR [ecx-0x643b3d8b]
  40d89c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d89d:	mov    edx,0x316f3d19
  40d8a2:	mov    eax,0x33abeb15
  40d8a7:	ret    0xb619
  40d8aa:	stos   DWORD PTR es:[edi],eax
  40d8ab:	test   eax,0x2d98e574
  40d8b0:	cld    
  40d8b1:	(bad)  
  40d8b2:	aaa    
  40d8b3:	outs   dx,DWORD PTR ds:[esi]
  40d8b4:	push   esp
  40d8b5:	adc    esp,DWORD PTR ds:0x7914ee9e
  40d8bb:	or     BYTE PTR [esi+0x5291440f],dl
  40d8c1:	push   cs
  40d8c2:	rcr    DWORD PTR [eax-0xac2d5f2],cl
  40d8c8:	popa   
  40d8c9:	imul   ebx,DWORD PTR [esi+0x738ba667],0xffffffc6
  40d8d0:	add    al,0xb6
  40d8d2:	dec    eax
  40d8d3:	fst    QWORD PTR [edx]
  40d8d5:	push   ss
  40d8d6:	mov    cl,0x9e
  40d8d8:	imul   eax,DWORD PTR [eax+0x6f37e067],0xffffffa4
  40d8df:	pop    esp
  40d8e0:	cli    
  40d8e1:	fild   QWORD PTR [edi]
  40d8e3:	out    0x9d,eax
  40d8e5:	shl    bh,1
  40d8e7:	rcl    DWORD PTR [edi+eiz*8-0x36],1
  40d8eb:	inc    ebp
  40d8ec:	retf   0xb30e
  40d8ef:	dec    edi
  40d8f0:	adc    dh,BYTE PTR [eax-0x7b1a131e]
  40d8f6:	jns    0x40d8a8
  40d8f8:	or     dl,BYTE PTR [ebx+esi*4+0x799cfcf8]
  40d8ff:	sbb    al,0x23
  40d901:	jbe    0x40d8f7
  40d903:	sub    bh,BYTE PTR [ebx-0x67]
  40d906:	mov    eax,ds:0x2fb2c27b
  40d90b:	jge    0x40d8ae
  40d90d:	sahf   
  40d90e:	inc    esp
  40d90f:	iret   
  40d910:	sub    eax,DWORD PTR [eax+0x18f6c42d]
  40d916:	icebp  
  40d917:	pop    eax
  40d918:	dec    ebp
  40d919:	inc    eax
  40d91a:	jne    0x40d968
  40d91c:	dec    ecx
  40d91d:	inc    edi
  40d91e:	fmul   QWORD PTR ds:0x8684367c
  40d924:	xchg   edx,eax
  40d925:	stc    
  40d926:	jp     0x40d91f
  40d928:	fnstenv [ebp+0x21]
  40d92b:	and    ebp,esp
  40d92d:	hlt    
  40d92e:	test   DWORD PTR ds:0x1b850f6b,esi
  40d934:	adc    ecx,DWORD PTR es:[ebx-0x13]
  40d938:	push   esi
  40d939:	mov    esp,0x98165021
  40d93e:	add    BYTE PTR [eax+0x77ba35b9],0x88
  40d945:	inc    ebx
  40d946:	adc    dh,BYTE PTR [edi-0x47]
  40d949:	in     eax,0xe1
  40d94b:	and    eax,0x74d64374
  40d950:	bound  ebx,QWORD PTR [edi+0x4f93c1db]
  40d956:	inc    eax
  40d957:	fs inc eax
  40d959:	adc    eax,0x9a7b3a4a
  40d95e:	in     al,dx
  40d95f:	dec    edi
  40d960:	mov    ?,ecx
  40d962:	jmp    0x31b27c0b
  40d967:	cld    
  40d968:	adc    cl,ch
  40d96a:	rcr    DWORD PTR [edi+esi*1-0x2f10d8cc],0x67
  40d972:	out    dx,al
  40d973:	mov    ebp,DWORD PTR [eax-0x5f733438]
  40d979:	(bad)  
  40d97a:	data16 mov cl,0x87
  40d97d:	jp     0x40d94c
  40d97f:	add    al,0x81
  40d981:	test   DWORD PTR [ecx+0x5b],0xae8794bd
  40d988:	sti    
  40d989:	cwde   
  40d98a:	cmp    al,0x2e
  40d98c:	lahf   
  40d98d:	push   cs
  40d98e:	xor    edx,DWORD PTR [eax*2+0x349b1c0d]
  40d995:	fiadd  WORD PTR [ebx]
  40d997:	sbb    al,0xe0
  40d999:	enter  0xef84,0xac
  40d99d:	xlat   BYTE PTR ds:[ebx]
  40d99e:	pop    esi
  40d99f:	test   DWORD PTR [ebx],ecx
  40d9a1:	imul   esp,DWORD PTR [edx],0x5d532cad
  40d9a7:	adc    BYTE PTR [edi-0x2a],ch
  40d9aa:	retf   
  40d9ab:	pushf  
  40d9ac:	pop    ecx
  40d9ad:	repz retf 0x14ac
  40d9b1:	or     al,0x2e
  40d9b3:	pop    edi
  40d9b4:	mov    dl,0x4a
  40d9b6:	std    
  40d9b7:	shl    DWORD PTR [eax-0x5e],cl
  40d9ba:	cwde   
  40d9bb:	mov    BYTE PTR [edx+0x15],cl
  40d9be:	aas    
  40d9bf:	pop    esp
  40d9c0:	mov    cl,0xa4
  40d9c2:	into   
  40d9c3:	cwde   
  40d9c4:	ins    DWORD PTR es:[edi],dx
  40d9c5:	inc    esi
  40d9c6:	shl    DWORD PTR [edi],1
  40d9c8:	cmp    esp,esi
  40d9ca:	std    
  40d9cb:	add    BYTE PTR cs:[esp+ebx*4-0x6c],al
  40d9d0:	cs sbb bh,dh
  40d9d3:	lock xlat BYTE PTR ds:[ebx]
  40d9d5:	out    dx,eax
  40d9d6:	bound  esp,QWORD PTR [ebx+0x33477641]
  40d9dc:	xchg   esp,eax
  40d9dd:	idiv   DWORD PTR [edx+0x3c]
  40d9e0:	mov    dh,0x68
  40d9e2:	jb     0x40d9ce
  40d9e4:	mov    esi,0x58fe7070
  40d9e9:	pop    ebx
  40d9ea:	and    esi,ebx
  40d9ec:	pop    DWORD PTR [edi+edi*4]
  40d9ef:	inc    ebp
  40d9f0:	int3   
  40d9f1:	das    
  40d9f2:	rcl    DWORD PTR [edi],1
  40d9f4:	cld    
  40d9f5:	jg     0x40da6d
  40d9f7:	jbe    0x40d9d5
  40d9f9:	mov    ecx,0xc3609a29
  40d9fe:	and    al,0xbf
  40da00:	xchg   DWORD PTR [ecx+0x28],esp
  40da03:	pushf  
  40da04:	(bad)  
  40da05:	jno    0x40d9e7
  40da07:	cdq    
  40da08:	inc    esi
  40da09:	mov    dl,0x75
  40da0b:	out    dx,eax
  40da0c:	add    al,0x91
  40da0e:	outs   dx,BYTE PTR ds:[esi]
  40da0f:	cmc    
  40da10:	in     eax,dx
  40da11:	pop    ebp
  40da12:	sbb    DWORD PTR ds:0x3e9cee88,esi
  40da18:	jmp    0x40d9ee
  40da1a:	loop   0x40da50
  40da1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da1d:	leave  
  40da1e:	mov    ss,ebx
  40da20:	add    bh,ah
  40da22:	dec    ebx
  40da23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da24:	mov    esi,0x64d535dc
  40da29:	add    dh,BYTE PTR [eax]
  40da2b:	mov    edi,0x89761d06
  40da30:	retf   0x620a
  40da33:	jb     0x40da90
  40da35:	add    cl,BYTE PTR [esi+0x7e6e3a44]
  40da3b:	addr16 and esp,edx
  40da3e:	loop   0x40da21
  40da40:	clc    
  40da41:	mov    DWORD PTR [ecx],ebp
  40da43:	lods   eax,DWORD PTR ds:[esi]
  40da44:	adc    DWORD PTR [ecx],esp
  40da46:	cmp    eax,0x1fe9926c
  40da4b:	sahf   
  40da4c:	sti    
  40da4d:	clc    
  40da4e:	fnsave [ebp+ebx*2-0x47]
  40da52:	fisttp QWORD PTR [edx+0x730146b1]
  40da58:	pop    es
  40da59:	xor    BYTE PTR [ecx+0x639af5c2],dh
  40da5f:	adc    al,0x14
  40da61:	mov    esi,0xc0c8a7f5
  40da66:	inc    esi
  40da67:	cmp    al,0x3c
  40da69:	push   edx
  40da6a:	push   ecx
  40da6b:	outs   dx,BYTE PTR ds:[esi]
  40da6c:	inc    ebx
  40da6d:	loope  0x40da9a
  40da6f:	xchg   bl,al
  40da71:	sahf   
  40da72:	loope  0x40dabb
  40da74:	sbb    eax,0xa6d355d8
  40da79:	iret   
  40da7a:	cmp    ah,dl
  40da7c:	leave  
  40da7d:	(bad)  
  40da7e:	repz jg 0x40da8d
  40da81:	dec    edi
  40da82:	mov    al,0x83
  40da84:	xor    dl,dh
  40da86:	lock sti 
  40da88:	fldenv [edi]
  40da8a:	add    edx,eax
  40da8c:	neg    BYTE PTR [ebp-0x78]
  40da8f:	repz pop es
  40da91:	lahf   
  40da92:	(bad)  
  40da93:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da95:	pop    ss
  40da96:	repz loope 0x40da6b
  40da99:	rcr    ebx,cl
  40da9b:	dec    eax
  40da9c:	push   0xca44e378
  40daa1:	jbe    0x40db14
  40daa3:	push   cs
  40daa4:	test   BYTE PTR [eax+0x61],dh
  40daa7:	fs jo  0x40daa7
  40daaa:	ror    DWORD PTR [esi+0x50],0xbb
  40daae:	push   0xf3fd646e
  40dab3:	xchg   ebp,eax
  40dab4:	push   ebp
  40dab5:	mov    eax,ds:0x6de2fbca
  40daba:	mov    ecx,0xe2f62087
  40dabf:	sahf   
  40dac0:	pop    ss
  40dac1:	lock and ch,al
  40dac4:	jp     0x40da47
  40dac6:	mov    cl,0xf3
  40dac8:	scas   al,BYTE PTR es:[edi]
  40dac9:	or     eax,0x7a753739
  40dace:	push   0x13df80d
  40dad3:	pop    esp
  40dad4:	leave  
  40dad5:	sub    DWORD PTR [edi+0x10],edi
  40dad8:	cs jg  0x40daf3
  40dadb:	inc    eax
  40dadc:	test   al,0x4e
  40dade:	jl     0x40daa3
  40dae0:	and    DWORD PTR [edi-0x66],ebp
  40dae3:	adc    al,BYTE PTR [edx+0x12656066]
  40dae9:	mov    ?,WORD PTR [ecx+0x26f3bb2a]
  40daef:	in     al,0xc4
  40daf1:	add    edi,DWORD PTR [edi]
  40daf3:	add    eax,0x712b51c4
  40daf8:	add    eax,0xd7b0d60c
  40dafd:	adc    BYTE PTR [ebp-0x5e],al
  40db00:	aad    0xdc
  40db02:	mov    eax,DWORD PTR [edx]
  40db04:	std    
  40db05:	xchg   esi,eax
  40db06:	lds    esp,FWORD PTR [ebx-0x21e5993d]
  40db0c:	repz cmp ebp,DWORD PTR [ebx]
  40db0f:	enter  0xb2a3,0x8f
  40db13:	hlt    
  40db14:	mov    BYTE PTR [ecx],ah
  40db16:	cmp    BYTE PTR [ebp-0x44],0x35
  40db1a:	fidiv  DWORD PTR [eax]
  40db1c:	in     eax,0xc3
  40db1e:	dec    ecx
  40db1f:	add    cl,dh
  40db21:	and    eax,DWORD PTR [eax+0x5e]
  40db24:	pop    es
  40db25:	mov    BYTE PTR [esi+0x50],cl
  40db28:	nop
  40db29:	ret    0x6b0d
  40db2c:	dec    ecx
  40db2d:	sbb    eax,DWORD PTR [esi]
  40db2f:	cmp    ch,ah
  40db31:	mov    ds:0x38d57260,al
  40db36:	aad    0x98
  40db38:	ins    DWORD PTR es:[edi],dx
  40db39:	in     al,dx
  40db3a:	in     al,dx
  40db3b:	lods   eax,DWORD PTR ds:[esi]
  40db3c:	loopne 0x40db78
  40db3e:	outs   dx,BYTE PTR ds:[esi]
  40db3f:	and    ah,BYTE PTR [ebp+ebp*4-0x6c57aac0]
  40db46:	jmp    0x84f0f43a
  40db4b:	std    
  40db4c:	jmp    0x736304ae
  40db51:	jg     0x40db26
  40db53:	jmp    0x40db4e
  40db55:	retf   0xbf22
  40db58:	or     eax,0x708632ba
  40db5d:	js     0x40dbd1
  40db5f:	jp     0x40db75
  40db61:	test   BYTE PTR [edi],al
  40db63:	(bad)  
  40db65:	xchg   ah,bl
  40db67:	das    
  40db68:	rol    bl,0x5a
  40db6b:	rol    DWORD PTR [esp+ecx*2-0xb],0x42
  40db70:	mov    DWORD PTR [eax-0x17aa0e7b],esp
  40db76:	(bad)
  40db79:	mov    ecx,0x48b70545
  40db7e:	loop   0x40db7d
  40db80:	int3   
  40db81:	xor    eax,0xa0bb5e5
  40db86:	mov    edx,0xf0469ea3
  40db8b:	in     al,0x99
  40db8d:	stc    
  40db8e:	push   ds
  40db8f:	mov    dl,0x83
  40db91:	fnstsw WORD PTR [edx+0x66]
  40db94:	dec    ebp
  40db95:	cmp    DWORD PTR [esp+eax*4],eax
  40db98:	add    BYTE PTR [edi],ah
  40db9a:	push   cs
  40db9b:	mov    DWORD PTR [ebp-0x29],eax
  40db9e:	cli    
  40db9f:	shr    DWORD PTR [ecx+0x27a451b6],0x7d
  40dba6:	mov    ds:0x6ba09c2,al
  40dbab:	lahf   
  40dbac:	(bad)  
  40dbad:	rcr    DWORD PTR [ecx+0x79],cl
  40dbb0:	loop   0x40dbb7
  40dbb2:	clc    
  40dbb3:	add    al,0xf1
  40dbb5:	(bad)  
  40dbb6:	cld    
  40dbb7:	fstp   st(0)
  40dbb9:	cmp    BYTE PTR [ecx+0x1d728a16],bh
  40dbbf:	sar    BYTE PTR [ebp+0x2cdcd600],0x5e
  40dbc6:	inc    ebx
  40dbc7:	int3   
  40dbc8:	xor    DWORD PTR [ecx+0x52],ebx
  40dbcb:	push   cs
  40dbcc:	aam    0xbb
  40dbce:	test   al,0x11
  40dbd0:	mov    ah,0xde
  40dbd2:	mov    ch,0x23
  40dbd4:	out    dx,al
  40dbd5:	or     ch,BYTE PTR [edi+0x53025741]
  40dbdb:	aam    0x81
  40dbdd:	jae    0x40db6b
  40dbdf:	je     0x40dc04
  40dbe1:	or     edi,esp
  40dbe3:	jle    0x40db7e
  40dbe5:	push   edi
  40dbe6:	es (bad) 
  40dbe8:	sub    BYTE PTR [ebp+0x26],al
  40dbeb:	mov    ah,0xde
  40dbed:	jge    0x40dbe8
  40dbef:	sbb    esi,esi
  40dbf1:	xchg   DWORD PTR [eax-0x5829b487],ebx
  40dbf7:	int3   
  40dbf8:	lea    edi,[ebx+0x2]
  40dbfb:	cdq    
  40dbfc:	or     al,0xc9
  40dbfe:	aaa    
  40dbff:	jnp    0x40dbf4
  40dc01:	jp     0x40dc43
  40dc03:	dec    eax
  40dc04:	mov    al,BYTE PTR [edi-0x3c]
  40dc07:	fisubr DWORD PTR [ebx+0x1e1c0858]
  40dc0d:	and    eax,0x616a7b24
  40dc12:	cmp    eax,0x82140d3a
  40dc17:	adc    dh,BYTE PTR [eax-0x21]
  40dc1a:	cmp    edi,DWORD PTR [ebp+esi*1-0x78]
  40dc1e:	push   ecx
  40dc1f:	imul   edi,DWORD PTR [ecx-0x2032964a],0xffffff94
  40dc26:	int    0xf6
  40dc28:	repz shl ebx,0xe4
  40dc2c:	sbb    eax,0x1e96ff3c
  40dc31:	jbe    0x40dbee
  40dc33:	sub    ebx,ebp
  40dc35:	add    ch,0x49
  40dc38:	push   ss
  40dc39:	lods   al,BYTE PTR ds:[esi]
  40dc3a:	dec    ebp
  40dc3b:	and    bl,BYTE PTR [edi+eax*1+0x22]
  40dc3f:	add    bh,BYTE PTR gs:[eax-0x2774f8f7]
  40dc46:	xchg   ebx,eax
  40dc47:	dec    edx
  40dc48:	xchg   ecx,eax
  40dc49:	outs   dx,BYTE PTR ds:[esi]
  40dc4a:	xor    ch,BYTE PTR [esi-0x246a871a]
  40dc50:	pop    edi
  40dc51:	in     al,0x85
  40dc53:	cld    
  40dc54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc55:	mov    bh,0x2b
  40dc57:	xchg   ebx,eax
  40dc58:	or     edx,DWORD PTR [esi-0x5c357517]
  40dc5e:	ret    
  40dc5f:	mov    edx,0xc04fa293
  40dc64:	xor    BYTE PTR [eax-0x5914f62f],ah
  40dc6a:	add    BYTE PTR [ebx],ch
  40dc6c:	xchg   esi,eax
  40dc6d:	dec    edx
  40dc6e:	or     ch,0x39
  40dc71:	iret   
  40dc72:	jp     0x40dc49
  40dc74:	cmp    al,0x18
  40dc76:	mov    cl,0xd3
  40dc78:	ins    BYTE PTR es:[edi],dx
  40dc79:	mov    eax,ds:0xc055bf95
  40dc7e:	stc    
  40dc7f:	je     0x40dcfc
  40dc81:	mov    al,ds:0x3a1032e0
  40dc86:	add    esp,edi
  40dc88:	std    
  40dc89:	lods   al,BYTE PTR ds:[esi]
  40dc8a:	test   BYTE PTR [edi+esi*2],dl
  40dc8d:	rcl    BYTE PTR [edx],0x6d
  40dc90:	push   ds
  40dc91:	push   ecx
  40dc92:	retf   
  40dc93:	arpl   WORD PTR [ebx+0x47],dx
  40dc96:	pop    esp
  40dc97:	repz call 0x3e3f:0x3b9acd3
  40dc9f:	lahf   
  40dca0:	jmp    0x40dc7e
  40dca2:	aad    0x3e
  40dca4:	(bad)  
  40dca5:	pushf  
  40dca6:	aad    0x7d
  40dca8:	jmp    0xfb22:0x56cc25b4
  40dcaf:	cmp    al,0x3d
  40dcb1:	add    edi,DWORD PTR [edx]
  40dcb3:	xchg   ecx,eax
  40dcb4:	mov    bh,0xf4
  40dcb6:	cmp    ch,al
  40dcb8:	dec    esi
  40dcb9:	pop    es
  40dcba:	mov    esp,0xd5af60b6
  40dcbf:	ret    0x5b6a
  40dcc2:	sbb    eax,0x805f54b8
  40dcc7:	ror    BYTE PTR [edi+edx*1-0x2c5f64d0],cl
  40dcce:	cmp    BYTE PTR [ebp+0x6a1191a7],ah
  40dcd4:	mov    WORD PTR [eax+eax*2-0x46affe2e],cs
  40dcdb:	pop    ebp
  40dcdc:	dec    eax
  40dcdd:	out    dx,al
  40dcde:	and    DWORD PTR [ebx],edx
  40dce0:	adc    ecx,DWORD PTR [ecx+0x5149902c]
  40dce6:	sub    al,0x76
  40dce8:	retf   
  40dce9:	push   0x6e
  40dceb:	xor    al,0x36
  40dced:	add    ecx,DWORD PTR [ebx-0x5c]
  40dcf0:	mov    ch,0xa9
  40dcf2:	es js  0x40dc99
  40dcf5:	mov    dh,0x59
  40dcf7:	sti    
  40dcf8:	mov    edi,0xf0597e27
  40dcfd:	fld1   
  40dcff:	inc    esi
  40dd00:	les    ebx,FWORD PTR [ebp+0x5ee20fe8]
  40dd06:	pop    ebp
  40dd07:	sti    
  40dd08:	jg     0x40dcd7
  40dd0a:	jg     0x40dcf5
  40dd0c:	and    al,0xf9
  40dd0e:	adc    esp,DWORD PTR [esi-0x68]
  40dd11:	or     eax,0x52ebf442
  40dd16:	test   al,0x56
  40dd18:	gs es aas 
  40dd1b:	mov    ebp,0x423a78e6
  40dd20:	push   0x42
  40dd22:	outs   dx,BYTE PTR ds:[esi]
  40dd23:	xchg   esi,eax
  40dd24:	loopne 0x40dd0b
  40dd26:	je     0x40dcc4
  40dd28:	adc    al,0x1a
  40dd2a:	cwde   
  40dd2b:	mov    WORD PTR [edi+esi*2-0x139cc422],gs
  40dd32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd33:	jns    0x40dd79
  40dd35:	xchg   ebx,eax
  40dd36:	stc    
  40dd37:	loopne 0x40dd4d
  40dd39:	push   edx
  40dd3a:	push   ds
  40dd3b:	dec    edi
  40dd3c:	lahf   
  40dd3d:	stos   BYTE PTR es:[edi],al
  40dd3e:	pushf  
  40dd3f:	lock push edx
  40dd41:	sbb    DWORD PTR [edi],ebp
  40dd43:	xchg   ebx,eax
  40dd44:	jge    0x40dda5
  40dd46:	mov    ds:0x4367bf5e,al
  40dd4b:	add    edi,DWORD PTR ds:[ebp-0x605e26ab]
  40dd52:	cwde   
  40dd53:	in     al,0x99
  40dd55:	arpl   WORD PTR [eax],bx
  40dd57:	jns    0x40dd71
  40dd59:	jmp    0x2232dcc
  40dd5e:	cmc    
  40dd5f:	pop    es
  40dd60:	xchg   esp,eax
  40dd61:	cmp    BYTE PTR [ebx-0x52a81376],dl
  40dd67:	add    al,0x35
  40dd69:	mov    dl,0xf3
  40dd6b:	mul    DWORD PTR [esi+0x39]
  40dd6e:	test   al,bl
  40dd70:	mov    bl,0xbd
  40dd72:	push   cs
  40dd73:	mov    edx,?
  40dd75:	push   esp
  40dd76:	loope  0x40dd41
  40dd78:	ds js  0x40dd25
  40dd7b:	mov    al,ds:0x48a31190
  40dd80:	loop   0x40dd3a
  40dd82:	stos   DWORD PTR es:[edi],eax
  40dd83:	cmp    eax,0x9165f1c3
  40dd88:	fst    DWORD PTR [eax-0x18aad32c]
  40dd8e:	cwde   
  40dd8f:	adc    bl,BYTE PTR [ebp-0x740e3500]
  40dd95:	push   ecx
  40dd96:	push   ebp
  40dd97:	dec    esp
  40dd98:	xlat   BYTE PTR ds:[ebx]
  40dd99:	jnp    0x40dd4c
  40dd9b:	jae    0x40de0c
  40dd9d:	in     al,dx
  40dd9e:	int    0x87
  40dda0:	ret    0xc03a
  40dda3:	pop    ebp
  40dda4:	clc    
  40dda5:	jnp    0x40dd93
  40dda7:	add    eax,0xbfb7fd61
  40ddac:	scas   al,BYTE PTR es:[edi]
  40ddad:	jmp    0x8b11:0x330ebc58
  40ddb4:	xor    ch,0xda
  40ddb7:	mov    ecx,0x85b64930
  40ddbc:	adc    BYTE PTR [edi+eiz*4+0x76],dh
  40ddc0:	test   BYTE PTR [edi],bl
  40ddc2:	pusha  
  40ddc3:	inc    ecx
  40ddc4:	mov    dh,0x73
  40ddc6:	hlt    
  40ddc7:	(bad)  [edi-0x76babf21]
  40ddcd:	test   eax,0x5ea3fd00
  40ddd2:	rcr    BYTE PTR [eax+0x2e4aa5b8],1
  40ddd8:	adc    eax,0xb0490b
  40dddd:	xor    dl,BYTE PTR [edx]
  40dddf:	fmul   DWORD PTR [ecx+esi*4-0x3a925c95]
  40dde6:	out    0x55,al
  40dde8:	mov    bh,0x57
  40ddea:	xor    al,0x30
  40ddec:	stos   DWORD PTR es:[edi],eax
  40dded:	fidiv  WORD PTR [eax+edi*2]
  40ddf0:	push   es
  40ddf1:	mov    dh,0xd9
  40ddf3:	rcl    DWORD PTR [eax-0x21432a19],cl
  40ddf9:	xor    BYTE PTR [bx+di+0x68],cl
  40ddfd:	mov    DWORD PTR [edi-0x68193046],eax
  40de03:	or     dh,dl
  40de05:	stos   BYTE PTR es:[edi],al
  40de06:	push   esp
  40de07:	sub    DWORD PTR [edi-0x61],edx
  40de0a:	jle    0x40de50
  40de0c:	lods   al,BYTE PTR ds:[esi]
  40de0d:	aad    0x3f
  40de0f:	mov    cl,0xd5
  40de11:	mov    cl,0x84
  40de13:	fsub   QWORD PTR [ebx-0x3a]
  40de16:	lods   al,BYTE PTR ds:[esi]
  40de17:	xor    ch,dl
  40de19:	sbb    ebx,edx
  40de1b:	and    BYTE PTR [ecx+edi*8],bl
  40de1e:	sbb    al,0xd1
  40de20:	fdivp  st(6),st
  40de22:	test   DWORD PTR [eax+0x2a2b8351],esi
  40de28:	xor    ebx,ecx
  40de2a:	(bad)  
  40de2b:	call   0xbddb:0x2cc64584
  40de32:	shr    DWORD PTR [edi-0x9],1
  40de35:	loopne 0x40ddbf
  40de37:	mov    ah,0xa3
  40de39:	inc    ebp
  40de3a:	cmc    
  40de3b:	pop    esi
  40de3c:	aad    0x7b
  40de3e:	xchg   ecx,eax
  40de3f:	push   edi
  40de40:	inc    esi
  40de41:	out    0x9d,eax
  40de43:	shl    DWORD PTR [esi+0x757356cc],0xe8
  40de4a:	lods   eax,DWORD PTR ds:[esi]
  40de4b:	lds    eax,FWORD PTR [esi+ebp*4]
  40de4e:	push   es
  40de4f:	sbb    al,0x7a
  40de51:	mov    edx,0x2c1148b7
  40de56:	cld    
  40de57:	push   ecx
  40de58:	mov    eax,0xb00acd46
  40de5d:	dec    esp
  40de5e:	ja     0x40de3d
  40de60:	inc    ecx
  40de61:	or     edx,ebx
  40de63:	test   bl,0x3c
  40de66:	push   ds
  40de67:	dec    esi
  40de68:	xor    cl,al
  40de6a:	add    al,ah
  40de6c:	push   0xffffffb1
  40de6e:	jns    0x40dee1
  40de70:	stos   BYTE PTR es:[edi],al
  40de71:	(bad)  
  40de73:	push   edi
  40de74:	test   eax,0x702330de
  40de79:	dec    ecx
  40de7a:	mov    dh,BYTE PTR [eax+0x663d961d]
  40de80:	hlt    
  40de81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de82:	adc    edi,DWORD PTR [ebx+eiz*1]
  40de85:	popf   
  40de86:	stos   DWORD PTR es:[edi],eax
  40de87:	mov    BYTE PTR [ebp+0x19],bl
  40de8a:	retf   0x108e
  40de8d:	shrd   DWORD PTR ds:0xd0a539be,ebp,0xb4
  40de95:	lea    edi,[edx-0x50165147]
  40de9b:	or     eax,0xe683e0e4
  40dea0:	stos   BYTE PTR es:[edi],al
  40dea1:	pushf  
  40dea2:	mov    BYTE PTR [edx+0x7c],bl
  40dea5:	jnp    0x40def2
  40dea7:	and    eax,0x25869ba2
  40deac:	test   ebx,ebp
  40deae:	xor    al,0xa3
  40deb0:	jbe    0x40de41
  40deb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deb3:	dec    esi
  40deb4:	jno    0x40df0f
  40deb6:	xor    eax,0xdc53d067
  40debb:	lods   eax,DWORD PTR ds:[esi]
  40debc:	or     eax,0xb2970053
  40dec1:	mov    BYTE PTR [ebx-0x7],bh
  40dec4:	bound  eax,QWORD PTR [ebp-0x73]
  40dec7:	fwait
  40dec8:	jl     0x40ded6
  40deca:	rol    DWORD PTR [edx-0x67],0xfb
  40dece:	loop   0x40de80
  40ded0:	addr16 ret 
  40ded2:	mov    bl,0x96
  40ded4:	jp     0x40ded3
  40ded6:	jns    0x40de9d
  40ded8:	std    
  40ded9:	dec    edx
  40deda:	jns    0x40dec2
  40dedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dedd:	into   
  40dede:	mov    dl,0x7b
  40dee0:	popa   
  40dee1:	outs   dx,BYTE PTR ds:[esi]
  40dee2:	inc    edi
  40dee3:	cli    
  40dee4:	jnp    0x40df3f
  40dee6:	pop    edx
  40dee7:	aam    0xc5
  40dee9:	fidivr DWORD PTR [ecx+ebx*8+0x21]
  40deed:	out    dx,al
  40deee:	stc    
  40deef:	inc    esp
  40def0:	push   es
  40def1:	jmp    FWORD PTR [ecx]
  40def3:	(bad)  
  40def4:	popf   
  40def5:	dec    esi
  40def6:	jno    0x40df15
  40def8:	(bad)  
  40def9:	aas    
  40defa:	pop    ecx
  40defb:	mov    dl,0xeb
  40defd:	repnz daa 
  40deff:	mov    BYTE PTR [edx+0x57],dl
  40df02:	sbb    bl,BYTE PTR [eax+0x1a1f8f34]
  40df08:	rcr    BYTE PTR [esi+0x51114ed6],1
  40df0e:	jbe    0x40deac
  40df10:	sub    eax,0x837c10c2
  40df15:	push   ebx
  40df16:	lea    ebp,[ebx]
  40df18:	push   es
  40df19:	sbb    dl,BYTE PTR [ecx+0xf]
  40df1c:	loope  0x40df29
  40df1e:	in     al,0xb5
  40df20:	jecxz  0x40dee0
  40df22:	ds push ecx
  40df24:	retf   0xe539
  40df27:	and    DWORD PTR [esi],0x61
  40df2a:	xchg   ebx,eax
  40df2b:	add    al,0x5c
  40df2d:	pop    ds
  40df2e:	mov    ds:0x3ce94e15,al
  40df33:	popf   
  40df34:	call   0xf2a:0x74e26d91
  40df3b:	ins    DWORD PTR es:[edi],dx
  40df3c:	cdq    
  40df3d:	fadd   st,st(0)
  40df3f:	adc    ebp,DWORD PTR [ecx]
  40df41:	(bad)  
  40df42:	fxam   
  40df44:	cwde   
  40df45:	cli    
  40df46:	sbb    eax,0x358abad
  40df4b:	mov    WORD PTR ds:0x1c62df14,cs
  40df51:	jge    0x40df99
  40df53:	xchg   esi,eax
  40df54:	test   al,0xa1
  40df56:	or     bh,BYTE PTR [esi-0x39c83392]
  40df5c:	fst    QWORD PTR [ebp+eax*1-0x19306aa]
  40df63:	xchg   edx,eax
  40df64:	repz test eax,0x96d68483
  40df6a:	mov    esi,0x1a5ae671
  40df6f:	sbb    DWORD PTR ds:0x60a9ff82,0x5a5fdbb3
  40df79:	lods   eax,DWORD PTR ds:[esi]
  40df7a:	push   edi
  40df7b:	mov    cl,0x63
  40df7d:	push   ecx
  40df7e:	push   ecx
  40df7f:	ret    0x7281
  40df82:	dec    esp
  40df83:	pop    ebp
  40df84:	xchg   edi,eax
  40df85:	xchg   esi,eax
  40df86:	inc    ecx
  40df87:	das    
  40df88:	jg     0x40dfbc
  40df8a:	(bad)  
  40df8b:	xchg   ebp,eax
  40df8c:	(bad)  
  40df8d:	addr16 fwait
  40df8f:	out    dx,al
  40df90:	popa   
  40df91:	jle    0x40df41
  40df93:	clc    
  40df94:	popf   
  40df95:	jg     0x40df17
  40df97:	mov    ebp,0xccddd4a6
  40df9c:	sub    esi,DWORD PTR [ebp+0x28]
  40df9f:	xchg   edx,eax
  40dfa0:	push   cs
  40dfa1:	inc    edx
  40dfa2:	ss push esp
  40dfa4:	sbb    eax,0xd8d0b95e
  40dfa9:	popa   
  40dfaa:	in     al,dx
  40dfab:	test   BYTE PTR [esi+0x7a],ch
  40dfae:	adc    eax,0x52932307
  40dfb3:	sar    BYTE PTR ds:0x4d5993df,1
  40dfb9:	and    DWORD PTR [ebp+ecx*8+0x3d1a34ee],0x54830a0a
  40dfc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfc5:	dec    esp
  40dfc7:	fcom   DWORD PTR [edi+0x4fd1b2]
  40dfcd:	js     0x40dfdd
  40dfcf:	or     dh,BYTE PTR ss:[ecx]
  40dfd2:	mov    esp,0xa04164bb
  40dfd7:	ret    0x7e83
  40dfda:	xchg   esi,eax
  40dfdb:	cmp    ecx,DWORD PTR [edx-0xa06f242]
  40dfe1:	fmul   DWORD PTR [ebp-0x4fb2ec7c]
  40dfe7:	or     al,0xd7
  40dfe9:	dec    esi
  40dfea:	add    DWORD PTR [esi+eiz*2+0x58],esp
  40dfee:	rcl    DWORD PTR [eax],0x18
  40dff1:	mov    WORD PTR [esi-0x6dd37fa5],?
  40dff7:	or     al,0x98
  40dff9:	not    DWORD PTR [edx+0x12d060ef]
  40dfff:	gs jle 0x40e011
  40e002:	sbb    ch,BYTE PTR [ecx+0x465264f]
  40e008:	jp     0x40e06f
  40e00a:	(bad)  
  40e00b:	cmc    
  40e00c:	pand   mm7,QWORD PTR [edi+0x4d]
  40e010:	pop    esi
  40e011:	push   ebp
  40e012:	mov    eax,ds:0xdc7ff816
  40e017:	sub    BYTE PTR [bx+di-0x282d],al
  40e01c:	ins    DWORD PTR es:[edi],dx
  40e01d:	in     eax,dx
  40e01e:	daa    
  40e01f:	in     eax,0x7a
  40e021:	mov    esp,DWORD PTR [esi+ebp*4-0x4baec6d5]
  40e028:	shl    DWORD PTR [ecx],0x2
  40e02b:	cmc    
  40e02c:	int3   
  40e02d:	push   edi
  40e02e:	xchg   esi,eax
  40e02f:	or     al,0x37
  40e031:	test   al,0xc3
  40e033:	rol    DWORD PTR [eax],cl
  40e035:	push   ds
  40e036:	loopne 0x40e070
  40e038:	rcl    dl,1
  40e03a:	test   BYTE PTR [eax-0x43],cl
  40e03d:	es out 0xc7,eax
  40e040:	jmp    0x4b60:0xed993662
  40e047:	fisttp QWORD PTR [ebx-0x4bca5457]
  40e04d:	aad    0xec
  40e04f:	inc    eax
  40e050:	sti    
  40e051:	push   esp
  40e052:	xchg   edi,eax
  40e053:	push   esp
  40e054:	out    0x4f,eax
  40e056:	(bad)  
  40e057:	jnp    0x40dfe2
  40e059:	mov    esi,edx
  40e05b:	dec    edx
  40e05c:	dec    ecx
  40e05d:	pop    edx
  40e05e:	fs lock inc eax
  40e061:	jl     0x40e01b
  40e063:	xchg   DWORD PTR [ecx],edx
  40e065:	xor    eax,0xae0e989
  40e06a:	xchg   ebx,eax
  40e06b:	sti    
  40e06c:	xchg   esp,eax
  40e06d:	js     0x40e0e1
  40e06f:	jne    0x40e0be
  40e071:	xchg   ebp,eax
  40e072:	cmp    eax,0x19df264b
  40e077:	mov    ch,0xde
  40e079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e07a:	or     ebp,ebp
  40e07c:	add    eax,0x425ecf3c
  40e081:	shl    BYTE PTR ds:0x6605e085,0x30
  40e088:	jno    0x40e029
  40e08a:	fcmove st,st(2)
  40e08c:	sbb    eax,0x880cdaf8
  40e091:	adc    DWORD PTR [esi-0x3994c2f3],ebp
  40e097:	jno    0x40e10b
  40e099:	mov    cs,WORD PTR [edi-0x21515785]
  40e09f:	test   BYTE PTR [ecx+ebp*4-0x7d],ah
  40e0a3:	lea    edx,[ecx+eiz*8]
  40e0a6:	adc    DWORD PTR [edi-0x6a],edx
  40e0a9:	mov    eax,ds:0x9cef5b24
  40e0ae:	xor    eax,0x1557df84
  40e0b3:	cmp    DWORD PTR [ebx-0x79],ebp
  40e0b6:	mov    edx,0xc7cc1efe
  40e0bb:	pop    esp
  40e0bc:	sbb    al,0xd1
  40e0be:	dec    ebp
  40e0bf:	lods   eax,DWORD PTR ds:[esi]
  40e0c0:	jmp    DWORD PTR [eax+0x7c]
  40e0c3:	sbb    DWORD PTR [ecx+ecx*4-0x3c2ab511],esp
  40e0ca:	fld    QWORD PTR [esi]
  40e0cc:	xchg   ebx,eax
  40e0cd:	adc    bl,BYTE PTR [esi]
  40e0cf:	loop   0x40e0d7
  40e0d1:	je     0x40e0ac
  40e0d3:	cmp    eax,0xe6756863
  40e0d8:	popf   
  40e0d9:	out    dx,eax
  40e0da:	test   eax,0x77b348d0
  40e0df:	xchg   edx,eax
  40e0e0:	repnz retf 
  40e0e2:	lods   eax,DWORD PTR ds:[esi]
  40e0e3:	jo     0x40e103
  40e0e5:	jae    0x40e0c4
  40e0e7:	mov    dh,0x9f
  40e0e9:	add    eax,edi
  40e0eb:	or     eax,0x387be5d7
  40e0f0:	jns    0x40e0e4
  40e0f2:	inc    eax
  40e0f3:	(bad)  
  40e0f5:	pop    esi
  40e0f6:	repz retf 
  40e0f8:	inc    edx
  40e0f9:	xchg   ebx,eax
  40e0fa:	or     edi,DWORD PTR [eax+0x19448d1f]
  40e100:	mov    ebp,0xd980865f
  40e105:	xor    al,BYTE PTR [ebx+0x9bb8d5b]
  40e10b:	aad    0xbe
  40e10d:	mov    ds:0x9d8a1479,eax
  40e112:	sub    DWORD PTR ds:0xeb15587b,eax
  40e118:	pop    ss
  40e119:	mov    cl,0xb4
  40e11b:	into   
  40e11c:	cmp    al,0x5f
  40e11e:	xchg   esi,eax
  40e11f:	xor    DWORD PTR ss:[esi],edi
  40e122:	add    ebp,DWORD PTR [edx+eiz*1]
  40e125:	(bad)  
  40e126:	mov    edi,0x3526478e
  40e12b:	xor    esi,DWORD PTR [esi-0x6ba3788e]
  40e131:	(bad)  
  40e132:	jo     0x40e10c
  40e134:	loopne 0x40e161
  40e136:	cdq    
  40e137:	sahf   
  40e138:	cmp    eax,DWORD PTR [esi-0xe]
  40e13b:	mov    eax,0xff298171
  40e140:	retf   0x8c7
  40e143:	or     al,0xcd
  40e145:	cmp    BYTE PTR [esi+0x47],al
  40e148:	repnz out dx,al
  40e14a:	out    dx,eax
  40e14b:	cmp    BYTE PTR [eax+0x7d],0x40
  40e14f:	jne    0x7ae92d1b
  40e155:	popf   
  40e156:	push   0xffffffd5
  40e158:	sub    al,0xdc
  40e15a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e15b:	aad    0xba
  40e15d:	and    dl,al
  40e15f:	dec    ebx
  40e160:	int    0xe
  40e162:	sti    
  40e163:	adc    edi,DWORD PTR [esi]
  40e165:	or     eax,0xd5a67dc1
  40e16a:	fisub  DWORD PTR [eax+0x64bffc31]
  40e170:	mov    ds:0xd9c1f29f,eax
  40e175:	jle    0x40e15b
  40e177:	lods   al,BYTE PTR ds:[esi]
  40e178:	cwde   
  40e179:	ins    BYTE PTR es:[edi],dx
  40e17a:	dec    edx
  40e17b:	or     eax,DWORD PTR [ebp+0x335576e]
  40e181:	or     DWORD PTR [ebp-0xd],edi
  40e184:	pop    ebp
  40e185:	add    al,0x67
  40e187:	es jmp 0xb1a35ad9
  40e18d:	add    DWORD PTR [edi-0x29],ecx
  40e190:	(bad)  
  40e191:	pop    ss
  40e192:	inc    ecx
  40e193:	cld    
  40e194:	inc    esp
  40e195:	out    dx,al
  40e196:	and    BYTE PTR [ebx-0x4889e0dd],0x1
  40e19d:	nop
  40e19e:	cmp    ah,bh
  40e1a0:	or     cl,BYTE PTR [esi-0x30]
  40e1a3:	xchg   esp,eax
  40e1a4:	les    edi,FWORD PTR [esp+ebp*4-0x34e806ca]
  40e1ab:	add    ah,BYTE PTR [eax-0x6a7bb6b0]
  40e1b1:	fisub  DWORD PTR [ebp-0x8770e2e]
  40e1b7:	stc    
  40e1b8:	mov    esp,0xab9c7ec8
  40e1bd:	lea    eax,[esi]
  40e1bf:	dec    esi
  40e1c0:	adc    BYTE PTR [esi+0x64],cl
  40e1c3:	jne    0x40e145
  40e1c5:	inc    esi
  40e1c6:	pop    ebx
  40e1c7:	std    
  40e1c8:	or     esp,0x60
  40e1cb:	call   0x155bf0ff
  40e1d0:	(bad)  
  40e1d1:	adc    BYTE PTR [edx+ecx*4+0x2],0xf4
  40e1d6:	out    dx,al
  40e1d7:	(bad)  
  40e1d8:	pushf  
  40e1d9:	imul   esp,DWORD PTR [ecx-0x69feea9a],0x14
  40e1e0:	pop    edx
  40e1e1:	xchg   ebp,eax
  40e1e2:	ja     0x40e1d4
  40e1e4:	xor    eax,0x309180d8
  40e1e9:	sbb    DWORD PTR [edx],esp
  40e1eb:	adc    al,0xc5
  40e1ed:	out    0xa0,eax
  40e1ef:	loope  0x40e241
  40e1f1:	iret   
  40e1f2:	mov    dl,0x44
  40e1f4:	push   ebp
  40e1f5:	pop    ss
  40e1f6:	add    eax,eax
  40e1f8:	pop    es
  40e1f9:	call   0x9dfd:0xa807f836
  40e200:	push   0x1a
  40e202:	and    eax,0xada216c4
  40e207:	mov    DWORD PTR [ebx+0x8],0x2fbbf5a9
  40e20e:	fist   WORD PTR [edx+0x11]
  40e211:	fadd   DWORD PTR [eax+ebx*4]
  40e214:	or     BYTE PTR [ebx+0x2c5bcab7],dl
  40e21a:	cmp    ah,BYTE PTR [edi+eiz*4+0x7925f6bd]
  40e221:	dec    eax
  40e222:	push   0x1f
  40e224:	add    eax,0x4d24a777
  40e229:	shr    ecx,0xc4
  40e22c:	mov    edx,0x99ba7b73
  40e231:	inc    esp
  40e232:	adc    ebp,DWORD PTR [eax+0x577b5d22]
  40e238:	jb     0x40e265
  40e23a:	mov    ch,0x84
  40e23c:	adc    ch,ah
  40e23e:	sub    DWORD PTR cs:[edx-0x26],edi
  40e242:	xchg   DWORD PTR [ecx],ecx
  40e244:	push   es
  40e245:	ficomp DWORD PTR [eax+0x7d]
  40e248:	mov    ebp,0xb6aed0b3
  40e24d:	in     eax,0x73
  40e24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e250:	and    DWORD PTR ds:0xa1c05e58,0xffffffce
  40e257:	in     al,0xca
  40e259:	lahf   
  40e25a:	push   ebp
  40e25b:	xor    edx,ecx
  40e25d:	ficomp WORD PTR [edi+0x26ac387]
  40e263:	jle    0x40e1f2
  40e265:	mov    edx,0xc95aa51b
  40e26a:	add    al,0x46
  40e26c:	inc    edx
  40e26d:	out    dx,eax
  40e26e:	ins    DWORD PTR es:[edi],dx
  40e26f:	lea    dx,[esi+0x41]
  40e273:	aam    0xf5
  40e275:	sub    BYTE PTR [esp+edx*8-0x79],cl
  40e279:	in     al,0x66
  40e27b:	jo     0x40e292
  40e27d:	popa   
  40e27e:	rcl    ebp,cl
  40e280:	sub    BYTE PTR [esp+eax*2],ch
  40e283:	push   ss
  40e284:	xchg   ebx,eax
  40e285:	jae    0x40e2fd
  40e287:	adc    al,0xde
  40e289:	pop    edi
  40e28a:	out    dx,eax
  40e28b:	jp     0x40e2b9
  40e28d:	jb     0x40e280
  40e28f:	loope  0x40e22a
  40e291:	pop    ecx
  40e292:	mov    ?,WORD PTR [ecx]
  40e294:	xchg   ebp,eax
  40e295:	scas   al,BYTE PTR es:[edi]
  40e296:	cmp    al,0xf5
  40e298:	cmc    
  40e299:	call   0xa378:0x599f5fbe
  40e2a0:	aaa    
  40e2a1:	test   cl,ch
  40e2a3:	and    bl,ch
  40e2a5:	xor    DWORD PTR [esi+0x6],edx
  40e2a8:	add    ah,bh
  40e2aa:	xchg   esi,eax
  40e2ab:	xor    dh,BYTE PTR ds:0x7c18d806
  40e2b1:	or     dl,BYTE PTR [edi-0x69]
  40e2b4:	jbe    0x40e2a9
  40e2b6:	dec    ecx
  40e2b7:	fcomip st,st(6)
  40e2b9:	int3   
  40e2ba:	jns    0x40e2c6
  40e2bc:	aaa    
  40e2bd:	call   0xe11be99a
  40e2c2:	mov    ds:0x7c08454f,al
  40e2c7:	fbstp  TBYTE PTR [ecx+0x5390fdbd]
  40e2cd:	popf   
  40e2ce:	mov    ds:0xf0fdd7ef,eax
  40e2d3:	hlt    
  40e2d4:	aas    
  40e2d5:	ret    
  40e2d6:	mov    al,0xaa
  40e2d8:	mov    cl,ah
  40e2da:	sbb    BYTE PTR [ebx],dh
  40e2dc:	shl    BYTE PTR [esi+0x12],0x97
  40e2e0:	push   ss
  40e2e1:	push   esi
  40e2e2:	ficomp WORD PTR [ebp+0x6cb56891]
  40e2e8:	xor    ah,BYTE PTR [ebx-0x2fa1e475]
  40e2ee:	or     DWORD PTR [ebx],ebx
  40e2f0:	or     DWORD PTR ds:0x1df7135e,esp
  40e2f6:	sbb    BYTE PTR [edx+0x2db2a5d2],dl
  40e2fc:	pop    ecx
  40e2fd:	add    ebx,DWORD PTR [ebp+0x752cc350]
  40e303:	fcomp  QWORD PTR [edx+0x6203c5d8]
  40e309:	iret   
  40e30a:	xor    eax,0x59ad3d9d
  40e30f:	dec    ebx
  40e310:	push   cs
  40e311:	ds in  eax,dx
  40e313:	adc    al,0xe0
  40e315:	(bad)  
  40e316:	and    al,0xb1
  40e319:	dec    eax
  40e31a:	sbb    al,0xd6
  40e31c:	imul   eax,esp,0xfffffff4
  40e31f:	(bad)  
  40e320:	xor    esi,DWORD PTR [ecx+0xa]
  40e323:	cmp    ah,bl
  40e325:	outs   dx,BYTE PTR ds:[esi]
  40e326:	mov    cl,0xcf
  40e328:	add    bh,BYTE PTR [ebx]
  40e32a:	call   0x7cb4:0x51f2f098
  40e331:	xchg   edx,eax
  40e332:	cdq    
  40e333:	les    edi,FWORD PTR [ebp+0x5dea5e8b]
  40e339:	test   eax,0x7c6abc73
  40e33e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33f:	stos   BYTE PTR es:[edi],al
  40e340:	dec    ecx
  40e341:	cmp    al,0xe2
  40e343:	(bad)
  40e347:	mov    ebx,0xfc79bf70
  40e34c:	sbb    DWORD PTR [esi],ecx
  40e34e:	in     al,dx
  40e34f:	scas   al,BYTE PTR es:[edi]
  40e350:	or     BYTE PTR [ebx+0x1e6f6993],ch
  40e356:	mov    ds:0x7fe4605d,al
  40e35b:	jmp    0xd670:0x4bda0847
  40e362:	in     al,dx
  40e363:	or     al,0x81
  40e365:	adc    BYTE PTR [eax-0x41],ch
  40e368:	jmp    0x40e375
  40e36a:	sbb    eax,0xf63ced68
  40e36f:	jmp    0x5d6d5335
  40e374:	xchg   DWORD PTR [esi+0x7d],ecx
  40e377:	(bad)  
  40e378:	add    bp,cx
  40e37b:	fidiv  DWORD PTR [ebp+edx*1+0x3a1afa9c]
  40e382:	aad    0x39
  40e384:	inc    edi
  40e385:	(bad)  
  40e386:	shl    BYTE PTR [eax],cl
  40e388:	mov    dl,0xc9
  40e38a:	clc    
  40e38b:	out    0x87,al
  40e38d:	bound  eax,QWORD PTR [edi+0x2d]
  40e390:	add    DWORD PTR [ebx],0x2966c08c
  40e396:	not    bh
  40e398:	sbb    DWORD PTR [eax-0x5618dba5],ebp
  40e39e:	or     edi,DWORD PTR [eax-0x2428d72d]
  40e3a4:	fadd   st(0),st
  40e3a6:	sbb    al,0x7d
  40e3a8:	xor    sp,ax
  40e3ab:	dec    ebp
  40e3ac:	cwde   
  40e3ad:	jne    0x40e428
  40e3af:	fldcw  WORD PTR [ebp+ecx*4+0x5]
  40e3b3:	cs add eax,0x64af5567
  40e3b9:	cmp    DWORD PTR [edx+0x5dd572c6],ecx
  40e3bf:	pop    esp
  40e3c0:	dec    edi
  40e3c1:	or     dl,BYTE PTR [esi]
  40e3c3:	add    edx,DWORD PTR [eax]
  40e3c5:	mov    ebx,0x4d36967c
  40e3ca:	push   esi
  40e3cb:	xor    DWORD PTR [eax+0x46],ebp
  40e3ce:	iret   
  40e3cf:	jmp    0x3748404
  40e3d4:	inc    ecx
  40e3d5:	pop    ss
  40e3d6:	jns    0x40e370
  40e3d8:	iret   
  40e3d9:	aas    
  40e3da:	sahf   
  40e3db:	ins    DWORD PTR es:[edi],dx
  40e3dc:	jecxz  0x40e3a3
  40e3de:	out    dx,al
  40e3df:	imul   ebx,DWORD PTR [ebx-0x19],0xaf235dd6
  40e3e6:	cli    
  40e3e7:	retf   0xfc02
  40e3ea:	loop   0x40e42d
  40e3ec:	int3   
  40e3ed:	mov    cl,0xe2
  40e3ef:	fdiv   QWORD PTR [esi]
  40e3f1:	mov    ah,0xe6
  40e3f3:	into   
  40e3f4:	push   edx
  40e3f5:	rcl    BYTE PTR [ebx-0x523f8c7e],cl
  40e3fb:	shr    DWORD PTR [ecx+esi*1],0x98
  40e3ff:	out    dx,eax
  40e400:	mov    esp,0xe3386851
  40e405:	test   DWORD PTR [eax+0x3d],edi
  40e408:	mov    dl,0x83
  40e40a:	inc    edx
  40e40b:	pusha  
  40e40c:	call   0x7f95a078
  40e411:	retf   0x9143
  40e414:	bswap  ecx
  40e416:	sbb    DWORD PTR [ebp-0x2589727f],ecx
  40e41c:	mov    edx,0xee669fce
  40e421:	xor    al,0xf
  40e423:	mov    eax,0x6156990b
  40e428:	jmp    0x88d3:0xbf03fe0b
  40e42f:	mov    ds:0x69cbd94d,al
  40e434:	pusha  
  40e435:	out    0x69,al
  40e437:	js     0x40e475
  40e439:	jg     0x40e448
  40e43b:	retf   0x8980
  40e43e:	pop    esp
  40e43f:	shl    DWORD PTR [ebp+0x6e1f1851],cl
  40e445:	std    
  40e446:	stc    
  40e447:	je     0x40e493
  40e449:	xchg   ecx,eax
  40e44a:	gs jg  0x40e43d
  40e44d:	or     al,0x28
  40e44f:	push   ebp
  40e450:	cwde   
  40e451:	inc    edx
  40e452:	mov    BYTE PTR [ebx+0x13b6c1c5],dh
  40e458:	add    al,0xa6
  40e45a:	cmp    DWORD PTR [edx+0x29],ebp
  40e45d:	mov    ecx,DWORD PTR [ebx]
  40e45f:	loop   0x40e472
  40e461:	jg     0x40e456
  40e463:	and    ah,BYTE PTR [ecx+eax*4+0x1a]
  40e467:	adc    DWORD PTR [ebp+0x68af54e1],edi
  40e46d:	cs xor al,0x9
  40e470:	mov    eax,0xc7a7834d
  40e475:	pop    ebp
  40e476:	pop    ebx
  40e477:	adc    ecx,edx
  40e479:	adc    edx,DWORD PTR [eax+0x33]
  40e47c:	pop    esi
  40e47d:	xchg   BYTE PTR [esi+0xb6fa1bd],ah
  40e483:	mov    al,ds:0xc9a72c60
  40e488:	xchg   ebx,eax
  40e489:	push   cs
  40e48a:	aam    0x37
  40e48c:	push   ss
  40e48d:	es inc ecx
  40e48f:	leave  
  40e490:	jb     0x40e45a
  40e492:	dec    ebp
  40e494:	xlat   BYTE PTR ds:[ebx]
  40e495:	jne    0x40e44b
  40e497:	ins    DWORD PTR es:[edi],dx
  40e498:	fdiv   st,st(7)
  40e49a:	mov    BYTE PTR [edx+edi*8+0x14],0xca
  40e49f:	push   0x8db9d8cc
  40e4a4:	in     al,0x96
  40e4a6:	call   DWORD PTR [ebx-0x387493f0]
  40e4ac:	cmp    al,0x1f
  40e4ae:	cmp    eax,DWORD PTR fs:[ebp-0x55602093]
  40e4b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4b6:	ins    DWORD PTR es:[edi],dx
  40e4b7:	clc    
  40e4b8:	xor    esi,esp
  40e4ba:	stos   DWORD PTR es:[edi],eax
  40e4bb:	ret    
  40e4bc:	jl     0x40e475
  40e4be:	pop    eax
  40e4bf:	fcom   DWORD PTR [esi+0x12]
  40e4c2:	jge    0x40e4a8
  40e4c4:	jno    0x40e50e
  40e4c6:	fimul  DWORD PTR [eax-0x62]
  40e4c9:	xchg   esi,eax
  40e4ca:	imul   ebp,ebp,0xffffff85
  40e4cd:	aaa    
  40e4ce:	inc    ecx
  40e4cf:	dec    ebx
  40e4d0:	or     dh,cl
  40e4d2:	jne    0x40e47e
  40e4d4:	nop
  40e4d5:	loopne 0x40e4ce
  40e4d7:	add    eax,0xaffd72f6
  40e4dc:	repnz pop edx
  40e4de:	xor    esi,DWORD PTR [edi+0x71]
  40e4e1:	mov    es,WORD PTR [edi+0x78eee5e4]
  40e4e7:	aam    0x6
  40e4e9:	mov    esp,0x14aee695
  40e4ee:	xchg   edi,eax
  40e4ef:	add    edi,DWORD PTR [eax]
  40e4f1:	scas   eax,DWORD PTR es:[edi]
  40e4f2:	in     al,0x8
  40e4f4:	in     eax,0xaf
  40e4f6:	dec    ebp
  40e4f7:	mov    ds:0xe2c080e8,eax
  40e4fc:	jecxz  0x40e53c
  40e4fe:	call   0x6b7a7430
  40e503:	dec    esi
  40e504:	mov    dl,0xa6
  40e506:	rcl    ebp,cl
  40e508:	sub    BYTE PTR [eax-0x51],dh
  40e50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e50c:	push   0x2970e3fa
  40e511:	stos   DWORD PTR es:[edi],eax
  40e512:	pop    ss
  40e513:	xchg   DWORD PTR [ecx],ebx
  40e515:	sbb    eax,0x1e236ae
  40e51a:	jle    0x40e54c
  40e51c:	push   ebp
  40e51d:	std    
  40e51e:	xchg   ebx,eax
  40e51f:	into   
  40e520:	out    dx,al
  40e521:	(bad)  
  40e522:	mov    esp,0xd2260d0f
  40e527:	mov    edi,0x4d94f9af
  40e52c:	std    
  40e52d:	jo     0x40e4b7
  40e52f:	(bad)
  40e533:	ss cmp al,0x5b
  40e536:	icebp  
  40e537:	mov    BYTE PTR [eax+0x31],0xc2
  40e53b:	jno    0x40e4f6
  40e53d:	add    bh,BYTE PTR [edi+0x49e0857c]
  40e543:	jp     0x40e500
  40e545:	cs jno 0x40e4d8
  40e548:	leave  
  40e549:	retf   
  40e54a:	ins    BYTE PTR es:[edi],dx
  40e54b:	sub    al,0x2
  40e54d:	add    al,0xb0
  40e54f:	cmp    edx,DWORD PTR [ecx+ecx*2+0x43]
  40e553:	push   es
  40e554:	inc    ecx
  40e555:	mov    cl,0xf6
  40e557:	xchg   esp,esp
  40e559:	jnp    0x40e581
  40e55b:	pop    ds
  40e55c:	or     al,0xa7
  40e55e:	mov    esi,0x861f0cb1
  40e563:	neg    DWORD PTR [edx-0x4c305fa8]
  40e569:	push   edi
  40e56a:	dec    edx
  40e56b:	cmp    DWORD PTR [ecx+esi*4],esp
  40e56e:	sub    ebx,DWORD PTR ds:[edi+0x7f949a62]
  40e575:	jg     0x40e5ad
  40e577:	jle    0x40e5c0
  40e579:	ins    DWORD PTR es:[edi],dx
  40e57a:	test   DWORD PTR [ebp-0x44],eax
  40e57d:	out    0x4a,eax
  40e57f:	sbb    al,BYTE PTR [ecx]
  40e581:	push   cs
  40e582:	out    dx,eax
  40e583:	push   es
  40e584:	lea    eax,[ebx]
  40e586:	push   es
  40e587:	test   dh,dl
  40e589:	ret    0x7e89
  40e58c:	in     al,dx
  40e58d:	(bad)  
  40e58e:	sbb    al,BYTE PTR [ebp+0x37]
  40e591:	int    0xad
  40e593:	dec    ebx
  40e594:	fiadd  DWORD PTR [edx+edi*8+0x6ebfdc1c]
  40e59b:	push   ebx
  40e59c:	daa    
  40e59d:	sbb    ah,BYTE PTR [ebp-0x4f612b33]
  40e5a3:	adc    ecx,DWORD PTR [ebp-0x1eb1732f]
  40e5a9:	jge    0x40e574
  40e5ab:	enter  0x5b4e,0xd0
  40e5af:	cli    
  40e5b0:	inc    esi
  40e5b1:	mov    eax,ds:0x90e0ca8e
  40e5b6:	sti    
  40e5b7:	mov    bh,0xf
  40e5b9:	mov    al,ds:0x7d8c86ec
  40e5be:	ficomp DWORD PTR [edx+ebx*4-0x2f]
  40e5c2:	in     al,dx
  40e5c3:	test   DWORD PTR [ebx-0x761dfbff],edx
  40e5c9:	repz pop esp
  40e5cb:	push   ecx
  40e5cc:	lods   al,BYTE PTR ds:[esi]
  40e5cd:	ss xchg esi,eax
  40e5cf:	xchg   DWORD PTR [ebp-0x32357f90],ebp
  40e5d5:	popf   
  40e5d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d7:	or     edx,0xffffff8f
  40e5da:	mov    bl,0x75
  40e5dc:	push   edx
  40e5dd:	aad    0x67
  40e5df:	loop   0x40e59f
  40e5e1:	retf   
  40e5e2:	cmp    DWORD PTR [eax],eax
  40e5e4:	push   edi
  40e5e5:	add    BYTE PTR [edi+0x757d5669],0xaa
  40e5ec:	cdq    
  40e5ed:	cmp    BYTE PTR [edi-0x46c03f4c],ch
  40e5f3:	sub    ecx,eax
  40e5f5:	mov    ds:0xba3dcbf7,eax
  40e5fa:	daa    
  40e5fb:	sbb    dh,BYTE PTR [edx]
  40e5fd:	ins    DWORD PTR es:[edi],dx
  40e5fe:	cmp    bh,BYTE PTR ds:[edi+0x1f5779ab]
  40e605:	fnstenv [edx-0x7b1c03c5]
  40e60b:	mov    ecx,0x34846fd3
  40e610:	stc    
  40e611:	dec    ebp
  40e612:	mov    ch,0x2d
  40e614:	jmp    0x40f5fd86
  40e619:	outs   dx,BYTE PTR ds:[esi]
  40e61a:	and    eax,0x7d372fc4
  40e61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e620:	jb     0x40e6a0
  40e622:	xor    edi,eax
  40e624:	loope  0x40e5f4
  40e626:	jbe    0x40e5f2
  40e628:	sar    DWORD PTR [esi+ebx*1],cl
  40e62b:	xchg   esi,eax
  40e62c:	das    
  40e62d:	das    
  40e62e:	adc    dl,BYTE PTR [esi+0x5010c6cf]
  40e634:	cmp    DWORD PTR [edx],esi
  40e636:	sub    eax,0xb1e721bb
  40e63b:	pop    ebx
  40e63c:	jmp    0x40e651
  40e63e:	enter  0x823,0x54
  40e642:	mov    bl,0x18
  40e644:	sahf   
  40e645:	dec    ebx
  40e646:	out    dx,eax
  40e647:	pop    es
  40e648:	xlat   BYTE PTR ds:[ebx]
  40e649:	xor    cl,BYTE PTR [ebx]
  40e64b:	xchg   edx,eax
  40e64c:	retf   0x64eb
  40e64f:	test   ecx,0x1b61688
  40e655:	mov    ah,0xac
  40e657:	fadd   DWORD PTR [ebx]
  40e659:	enter  0x367f,0x66
  40e65d:	jne    0x40e5f8
  40e65f:	pushf  
  40e660:	and    eax,0xc4f03178
  40e665:	test   al,0xe7
  40e667:	ja     0x40e6c6
  40e669:	out    0x3f,al
  40e66b:	dec    esi
  40e66c:	(bad)  
  40e66d:	shl    BYTE PTR [eax+edx*4-0x7f],1
  40e671:	mov    eax,ds:0x3553ca2e
  40e676:	jmp    0xbab8ceed
  40e67b:	xchg   ecx,eax
  40e67c:	frstor [esi-0x76]
  40e67f:	lods   al,BYTE PTR ds:[esi]
  40e680:	dec    esp
  40e681:	hlt    
  40e682:	pmuludq mm1,mm1
  40e685:	popf   
  40e686:	sbb    BYTE PTR [edx+0x57],ch
  40e689:	adc    ah,bl
  40e68b:	xor    BYTE PTR [eax+ecx*1-0x10],ah
  40e68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e691:	sub    al,0x86
  40e693:	push   eax
  40e694:	das    
  40e695:	adc    DWORD PTR [ecx],ebp
  40e697:	popf   
  40e698:	in     eax,dx
  40e699:	add    ebx,ebx
  40e69b:	jecxz  0x40e669
  40e69d:	inc    edi
  40e69e:	sbb    eax,0xfec2bf8e
  40e6a3:	icebp  
  40e6a4:	dec    esp
  40e6a5:	mov    edx,0x66bcb80
  40e6aa:	test   DWORD PTR [edi+0x5f91764a],esp
  40e6b0:	mov    ebp,0x71a0fcca
  40e6b5:	adc    bh,bh
  40e6b7:	lock or al,0x27
  40e6ba:	in     al,dx
  40e6bb:	hlt    
  40e6bc:	test   DWORD PTR [edx],ecx
  40e6be:	adc    al,0xa
  40e6c0:	mov    esp,0x2bb8c4ef
  40e6c5:	les    ecx,FWORD PTR [eax-0x247da762]
  40e6cb:	add    BYTE PTR [eax+0x2e691365],dl
  40e6d1:	lock pop ds
  40e6d3:	sub    al,0xcd
  40e6d5:	icebp  
  40e6d6:	and    eax,0xc7aa68ad
  40e6db:	or     BYTE PTR [ebx+0x2b5af058],0xa4
  40e6e2:	(bad)  
  40e6e3:	mov    edx,0x71d28d49
  40e6e8:	cli    
  40e6e9:	and    al,0x9d
  40e6eb:	shl    BYTE PTR [edx],cl
  40e6ed:	mov    ch,BYTE PTR [edi]
  40e6ef:	ret    
  40e6f0:	lock loop 0x40e719
  40e6f3:	out    dx,eax
  40e6f4:	daa    
  40e6f5:	pop    esi
  40e6f6:	xchg   edi,eax
  40e6f7:	aam    0x68
  40e6f9:	shr    BYTE PTR [eax],cl
  40e6fb:	jae    0x40e751
  40e6fd:	cmp    BYTE PTR [ecx+0x1f],al
  40e700:	test   al,0x3e
  40e702:	adc    DWORD PTR [esi+0x36],edx
  40e705:	cmp    bh,BYTE PTR [eax+0x7f]
  40e708:	mov    ds:0xec5fcfeb,eax
  40e70d:	hlt    
  40e70e:	in     eax,dx
  40e70f:	jge    0x40e731
  40e711:	enter  0xbed7,0x6e
  40e715:	push   ds
  40e716:	fs push ebp
  40e718:	stos   DWORD PTR es:[edi],eax
  40e719:	int3   
  40e71a:	sbb    edi,DWORD PTR [ebx+0x1e2ef0ba]
  40e720:	out    dx,eax
  40e721:	dec    ebp
  40e722:	retf   
  40e723:	outs   dx,DWORD PTR ds:[esi]
  40e724:	pop    ebx
  40e725:	sbb    ebx,DWORD PTR [ebx]
  40e727:	inc    ecx
  40e728:	fild   DWORD PTR [ebx-0x17]
  40e72b:	xchg   ecx,eax
  40e72c:	retf   0xda05
  40e72f:	sti    
  40e730:	adc    dl,dl
  40e732:	pop    edx
  40e733:	mov    esp,0x1bba6efc
  40e738:	jne    0x40e767
  40e73a:	sub    eax,0xab0acc8e
  40e73f:	int3   
  40e740:	icebp  
  40e741:	lods   eax,DWORD PTR ds:[esi]
  40e742:	or     al,0x6a
  40e744:	aas    
  40e745:	test   BYTE PTR [edx],0x63
  40e748:	add    DWORD PTR [edx-0x15d31bef],0x40a530a7
  40e752:	inc    esi
  40e753:	jo     0x40e7c5
  40e755:	add    al,0xe7
  40e757:	pop    ss
  40e758:	mov    edi,0xc3f059ce
  40e75d:	add    BYTE PTR [edi+0x2adad76e],0x1c
  40e764:	jns    0x40e7ba
  40e766:	popa   
  40e767:	and    DWORD PTR [ecx-0x6350967e],eax
  40e76d:	push   ds
  40e76e:	or     eax,0x61f5f65a
  40e773:	scas   al,BYTE PTR es:[edi]
  40e774:	sub    dl,BYTE PTR [ecx+ebx*8+0x19]
  40e778:	adc    bl,BYTE PTR [edi]
  40e77a:	sar    BYTE PTR [ecx-0x4e],0x44
  40e77e:	cmc    
  40e77f:	and    DWORD PTR [ecx+eiz*2],edx
  40e782:	out    0x5b,eax
  40e784:	ret    
  40e785:	popa   
  40e786:	xchg   al,dl
  40e788:	stos   DWORD PTR es:[edi],eax
  40e789:	lods   al,BYTE PTR ds:[esi]
  40e78a:	out    dx,eax
  40e78b:	ffreep st(1)
  40e78d:	clc    
  40e78e:	mov    ch,BYTE PTR [edi+edi*8]
  40e791:	arpl   WORD PTR [esi-0x5c4e209],cx
  40e797:	mov    al,0xf
  40e799:	daa    
  40e79a:	cwde   
  40e79b:	test   BYTE PTR [edx-0x6348d606],0x89
  40e7a2:	add    al,0x1e
  40e7a4:	fisub  WORD PTR [edx+0x11]
  40e7a7:	pop    esi
  40e7a8:	fsubrp st(5),st
  40e7aa:	sbb    BYTE PTR [esi-0x49],0x35
  40e7ae:	pop    es
  40e7af:	popa   
  40e7b0:	scas   al,BYTE PTR es:[edi]
  40e7b1:	lock mov dl,0x51
  40e7b4:	into   
  40e7b5:	ror    bl,0xdd
  40e7b8:	jns    0x40e743
  40e7ba:	in     al,0xff
  40e7bc:	inc    ebp
  40e7bd:	push   esi
  40e7be:	push   edi
  40e7bf:	jno    0x40e82b
  40e7c1:	push   esi
  40e7c2:	xor    al,0xff
  40e7c4:	int3   
  40e7c5:	int    0xfa
  40e7c7:	fsubr  QWORD PTR [esi]
  40e7c9:	and    cl,dl
  40e7cb:	bound  edx,QWORD PTR [ebx+0x305fc754]
  40e7d1:	adc    ecx,DWORD PTR ds:0x1a8c0c0c
  40e7d7:	sbb    al,0xc1
  40e7d9:	push   eax
  40e7da:	adc    eax,0xec7468dd
  40e7df:	push   eax
  40e7e0:	pusha  
  40e7e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7e2:	sbb    al,0xb
  40e7e4:	cmp    ecx,eax
  40e7e6:	retf   0x2c6a
  40e7e9:	mov    ah,0x55
  40e7eb:	jg     0x40e7e9
  40e7ed:	retf   0x43b5
  40e7f0:	add    cl,BYTE PTR [esp+edi*2+0x10]
  40e7f4:	pusha  
  40e7f5:	push   cs
  40e7f6:	pop    ecx
  40e7f7:	hlt    
  40e7f8:	ja     0x40e7ab
  40e7fa:	loope  0x40e78f
  40e7fc:	mov    ah,0x8c
  40e7fe:	pusha  
  40e7ff:	cdq    
  40e800:	(bad)  [edx+0x65db23c9]
  40e806:	push   edx
  40e807:	jno    0x40e869
  40e809:	mov    bh,0xec
  40e80b:	inc    esp
  40e80c:	sub    cl,cl
  40e80e:	dec    edi
  40e80f:	pop    es
  40e810:	dec    edi
  40e811:	mov    edi,0xd41b59a2
  40e816:	push   edi
  40e817:	xchg   cl,bh
  40e819:	(bad)  [ebx-0x5c]
  40e81c:	jnp    0x40e7f4
  40e81e:	dec    esi
  40e81f:	cli    
  40e820:	push   ecx
  40e821:	inc    esp
  40e822:	(bad)  
  40e825:	aad    0xa7
  40e827:	in     al,0x5b
  40e829:	pop    eax
  40e82a:	std    
  40e82b:	add    eax,0xb5ae4af8
  40e830:	xchg   ebp,eax
  40e831:	pop    edx
  40e832:	scas   eax,DWORD PTR es:[edi]
  40e833:	cli    
  40e834:	inc    ecx
  40e835:	push   es
  40e836:	bound  edx,QWORD PTR [ebx]
  40e838:	xchg   edx,eax
  40e839:	scas   eax,DWORD PTR es:[edi]
  40e83a:	aad    0xf8
  40e83c:	in     al,0x51
  40e83e:	pop    ecx
  40e83f:	pop    edi
  40e840:	data16 test BYTE PTR [eax+0x73],ch
  40e844:	pop    ebp
  40e845:	inc    ebp
  40e846:	sbb    eax,0x39f3666c
  40e84b:	fwait
  40e84c:	ret    
  40e84d:	xchg   esi,esp
  40e84f:	jp     0x40e899
  40e851:	adc    DWORD PTR [ebp+0x24],edi
  40e854:	xchg   di,ax
  40e856:	and    al,0x9c
  40e858:	mov    ch,dl
  40e85a:	pop    eax
  40e85b:	test   eax,0x6d53233b
  40e860:	inc    eax
  40e861:	ret    0x3e5c
  40e864:	das    
  40e865:	cli    
  40e866:	cmp    eax,eax
  40e868:	and    ecx,DWORD PTR [ecx-0x4bf0d989]
  40e86e:	ja     0x40e8aa
  40e870:	mov    ebp,DWORD PTR ds:0x6ac5bce8
  40e876:	test   eax,0x8107c1dc
  40e87b:	adc    al,0x5c
  40e87e:	jbe    0x40e8be
  40e880:	mov    cl,0x51
  40e882:	pop    edx
  40e883:	scas   eax,DWORD PTR es:[edi]
  40e884:	ficomp WORD PTR [edx]
  40e886:	mov    dh,BYTE PTR [ecx-0x3ac249f2]
  40e88c:	mov    ecx,0x93c5ada5
  40e891:	aam    0x37
  40e893:	jmp    0x40e8bb
  40e895:	jp     0x40e89f
  40e897:	int3   
  40e898:	mov    al,0x73
  40e89a:	sbb    dl,BYTE PTR [edi]
  40e89c:	add    eax,0x1d33532a
  40e8a1:	imul   edx,ebp,0xffffffbe
  40e8a4:	jmp    0x40e82d
  40e8a6:	pop    edi
  40e8a7:	adc    DWORD PTR [edi],esi
  40e8a9:	cld    
  40e8aa:	icebp  
  40e8ab:	jo     0x40e8cf
  40e8ad:	shl    BYTE PTR [ecx-0x37c3765d],1
  40e8b3:	addr16 sub eax,0xfd8877e7
  40e8b9:	frstor ds:0x65b3
  40e8be:	sub    dh,BYTE PTR [edx]
  40e8c0:	shl    DWORD PTR fs:[edi+ebx*1+0x18],1
  40e8c5:	or     eax,0x6c3c95d2
  40e8ca:	pop    esi
  40e8cb:	lea    esi,ss:[eax+ebx*2]
  40e8cf:	arpl   WORD PTR [edi-0x377dc7f4],sp
  40e8d5:	hlt    
  40e8d6:	out    dx,al
  40e8d7:	int    0x28
  40e8d9:	int3   
  40e8da:	sub    BYTE PTR [edi+0x16b646e2],al
  40e8e0:	push   0x6449ac39
  40e8e5:	adc    al,0x2b
  40e8e7:	stc    
  40e8e8:	xchg   esp,eax
  40e8e9:	jns    0x40e966
  40e8eb:	(bad)  
  40e8ec:	loopne 0x40e8cc
  40e8ee:	ret    0xdd94
  40e8f1:	sub    al,0x45
  40e8f3:	adc    dl,BYTE PTR [esi]
  40e8f5:	mov    eax,0x841311c0
  40e8fa:	stos   DWORD PTR es:[edi],eax
  40e8fb:	cmp    ebp,DWORD PTR [edx+0x4ca43f74]
  40e901:	ficom  DWORD PTR [edx]
  40e903:	or     eax,DWORD PTR [ecx-0x649c36f6]
  40e909:	mov    al,0x6
  40e90b:	xor    ebx,esi
  40e90d:	pop    eax
  40e90e:	ficomp WORD PTR [ecx]
  40e910:	jl     0x40e8c0
  40e912:	pop    DWORD PTR ds:0x7bdf1d20
  40e918:	pop    edi
  40e919:	add    ah,BYTE PTR [ebx]
  40e91b:	fs dec esi
  40e91d:	ret    0xc19c
  40e920:	xchg   ebx,eax
  40e921:	xchg   esi,eax
  40e922:	sub    dl,dh
  40e924:	loopne 0x40e954
  40e926:	loope  0x40e994
  40e928:	cmp    eax,0x237421e4
  40e92d:	stc    
  40e92e:	das    
  40e92f:	xor    DWORD PTR [ebp-0x12],0x6e242a02
  40e936:	cmp    cl,BYTE PTR [ebp-0x1f59d435]
  40e93c:	xor    bh,ch
  40e93e:	push   cs
  40e93f:	add    dh,BYTE PTR [edi-0x3856c46c]
  40e945:	cmc    
  40e946:	cli    
  40e947:	fidiv  WORD PTR [edx-0x796d5b8a]
  40e94d:	pusha  
  40e94e:	out    dx,al
  40e94f:	lea    eax,[ebx+0x2f707bac]
  40e955:	dec    esi
  40e956:	inc    edi
  40e957:	dec    eax
  40e958:	and    ch,BYTE PTR [edi]
  40e95a:	dec    esi
  40e95b:	dec    ecx
  40e95c:	mov    bh,0x4b
  40e95e:	mov    WORD PTR [ebx],?
  40e960:	ins    DWORD PTR es:[edi],dx
  40e961:	imul   DWORD PTR [ebx]
  40e963:	xor    al,0x3b
  40e965:	aas    
  40e966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e967:	xor    ebx,DWORD PTR [edx+0x5c]
  40e96a:	pusha  
  40e96b:	adc    dh,cl
  40e96d:	sub    al,0xe1
  40e96f:	adc    ecx,DWORD PTR [ebx]
  40e971:	rcr    BYTE PTR [ebx],0x54
  40e974:	push   ecx
  40e975:	xor    DWORD PTR [edi-0x7a430593],esp
  40e97b:	rol    BYTE PTR [ecx-0x43],cl
  40e97e:	lea    esp,[edi]
  40e980:	and    cl,dh
  40e982:	mov    ds:0x2a852ff5,al
  40e987:	retf   
  40e988:	enter  0x685f,0x77
  40e98c:	push   0x33
  40e98e:	stc    
  40e98f:	lock cmp eax,0xed6976aa
  40e995:	int    0xf1
  40e997:	mov    esi,0xb460e85f
  40e99c:	mov    esi,0x391b3b7
  40e9a1:	adc    BYTE PTR [esi],dh
  40e9a3:	and    DWORD PTR [eax],esi
  40e9a5:	(bad)  
  40e9a6:	popa   
  40e9a7:	je     0x40e997
  40e9a9:	out    0x18,eax
  40e9ab:	sahf   
  40e9ac:	pop    eax
  40e9ad:	inc    BYTE PTR [ebx]
  40e9af:	test   eax,0x69eab7d7
  40e9b4:	aas    
  40e9b5:	or     BYTE PTR [eax+0x5597ed24],bl
  40e9bb:	jge    0x40e99e
  40e9bd:	dec    edx
  40e9be:	gs dec edi
  40e9c0:	jle    0x40e973
  40e9c2:	int    0x8c
  40e9c4:	hlt    
  40e9c5:	fbstp  TBYTE PTR [ebx+0x780fcf9e]
  40e9cb:	sub    eax,0x39dce32c
  40e9d0:	dec    edx
  40e9d1:	imul   ebp,DWORD PTR es:[esi-0x2d],0xf64fa503
  40e9d9:	out    dx,eax
  40e9da:	repz bound ebx,QWORD PTR ss:[esi+esi*2+0x63]
  40e9e0:	pop    esi
  40e9e1:	push   edx
  40e9e2:	xor    al,0x65
  40e9e4:	adc    eax,0x4252e244
  40e9e9:	or     al,0xa6
  40e9eb:	outs   dx,BYTE PTR ds:[esi]
  40e9ec:	jp     0x40e984
  40e9ee:	and    DWORD PTR [ebx+0x7d76c341],ecx
  40e9f4:	into   
  40e9f5:	push   esi
  40e9f6:	ins    BYTE PTR es:[edi],dx
  40e9f7:	and    edi,DWORD PTR [ebx+0xd86777c]
  40e9fd:	div    BYTE PTR [ecx]
  40e9ff:	mul    DWORD PTR [esi+0x470b8f30]
  40ea05:	add    eax,DWORD PTR [ebx]
  40ea07:	jno    0x40ea85
  40ea09:	add    esi,edx
  40ea0b:	pop    edi
  40ea0c:	jmp    0x5b776540
  40ea11:	sbb    DWORD PTR [edx],0x1e
  40ea14:	clc    
  40ea15:	mov    edi,0x6c7a7923
  40ea1a:	in     al,dx
  40ea1b:	(bad)  
  40ea1c:	(bad)  
  40ea1d:	ror    BYTE PTR [eax],1
  40ea1f:	into   
  40ea20:	test   al,0xfc
  40ea23:	inc    eax
  40ea24:	in     eax,dx
  40ea25:	sub    DWORD PTR [eax],esp
  40ea27:	mov    ecx,0x26b9fffe
  40ea2c:	jns    0x40e9c5
  40ea2e:	cld    
  40ea2f:	data16 sub bl,ch
  40ea32:	fst    st(0)
  40ea34:	pop    es
  40ea35:	call   0xa4a0e187
  40ea3a:	lahf   
  40ea3b:	sahf   
  40ea3c:	out    0xda,eax
  40ea3e:	cwde   
  40ea3f:	push   ecx
  40ea40:	jae    0x40e9c8
  40ea42:	xchg   DWORD PTR [edx],edx
  40ea44:	xlat   BYTE PTR ds:[ebx]
  40ea45:	retf   0x2e3e
  40ea48:	xor    BYTE PTR [ebx],0x16
  40ea4b:	inc    ecx
  40ea4c:	xchg   ebx,eax
  40ea4d:	push   0x63
  40ea4f:	jnp    0x40ea7f
  40ea51:	or     eax,edi
  40ea53:	into   
  40ea54:	test   esp,ebp
  40ea56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea57:	push   eax
  40ea58:	or     al,0x10
  40ea5a:	jp     0x40ea46
  40ea5c:	pop    ebx
  40ea5d:	fbld   TBYTE PTR [edi-0x44]
  40ea60:	sub    cl,BYTE PTR [eax]
  40ea62:	sbb    esi,edi
  40ea64:	xor    ebx,DWORD PTR [edi+0x50]
  40ea67:	inc    ecx
  40ea68:	pop    ebp
  40ea69:	clc    
  40ea6a:	mov    dl,0x8d
  40ea6c:	(bad)  
  40ea6d:	sub    DWORD PTR [edx+0xbe3c6d1],ebx
  40ea73:	movsx  edi,WORD PTR [esi+0x33]
  40ea77:	mov    al,0x8d
  40ea79:	mov    DWORD PTR [eax],esi
  40ea7b:	repnz pop edi
  40ea7d:	imul   edi,DWORD PTR [ecx],0xffffffdb
  40ea80:	sub    edx,DWORD PTR [edx+0x13]
  40ea83:	dec    ebx
  40ea84:	mov    dh,0x97
  40ea86:	sbb    bl,BYTE PTR [eax+0x18]
  40ea89:	and    al,0xd7
  40ea8b:	out    0xa1,eax
  40ea8d:	mov    ebx,0xd34739fa
  40ea92:	fisubr WORD PTR [ebx]
  40ea94:	mov    cl,0x91
  40ea96:	mov    cl,0x3a
  40ea98:	retf   
  40ea99:	xor    DWORD PTR [edx+0x55],ebx
  40ea9c:	aam    0x87
  40ea9e:	in     al,0x6
  40eaa0:	fisubr DWORD PTR [edi]
  40eaa2:	mov    cl,0xf0
  40eaa4:	cdq    
  40eaa5:	out    dx,eax
  40eaa6:	jle    0x40ea2f
  40eaa8:	and    ebx,DWORD PTR [esi+0x32]
  40eaab:	leave  
  40eaac:	jbe    0x40ea2f
  40eaae:	or     bl,ah
  40eab0:	dec    ecx
  40eab1:	adc    al,0xd6
  40eab3:	lock mov bh,0xbf
  40eab6:	scas   eax,DWORD PTR es:[edi]
  40eab7:	scas   eax,DWORD PTR es:[edi]
  40eab8:	imul   esp,DWORD PTR [ecx+0x25],0x736eee45
  40eabf:	popf   
  40eac0:	adc    BYTE PTR [edx+edi*2-0x76690f1],ah
  40eac7:	mov    dl,0xca
  40eac9:	lods   al,BYTE PTR ds:[esi]
  40eaca:	arpl   WORD PTR [edi-0x77898d95],cx
  40ead0:	mov    bh,BYTE PTR [edi+0x20]
  40ead3:	rcr    BYTE PTR [edx-0x5b1b360a],cl
  40ead9:	jae    0x40eb1c
  40eadb:	xchg   edi,eax
  40eadc:	pop    ecx
  40eadd:	pop    ebx
  40eade:	or     al,0x16
  40eae0:	xchg   BYTE PTR [ecx-0x2235cfa9],cl
  40eae6:	mov    esi,ss
  40eae8:	inc    ebp
  40eae9:	aad    0x69
  40eaeb:	mov    bl,0x5c
  40eaed:	jmp    0x29ec6768
  40eaf2:	push   es
  40eaf3:	push   ebp
  40eaf4:	jl     0x40eb23
  40eaf6:	out    0x7a,eax
  40eaf8:	sbb    al,0x40
  40eafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eafb:	push   0xd70e8965
  40eb00:	xor    dl,al
  40eb02:	aam    0x75
  40eb04:	shl    ch,1
  40eb06:	out    dx,al
  40eb07:	xchg   dx,ax
  40eb09:	dec    eax
  40eb0a:	or     DWORD PTR [eax-0x7c],edx
  40eb0d:	jmp    0x478d:0xa72d06e0
  40eb14:	dec    edi
  40eb15:	xor    ecx,ecx
  40eb17:	xor    BYTE PTR [ecx+0x535ba7fc],bl
  40eb1d:	xchg   ebp,eax
  40eb1e:	pop    ds
  40eb1f:	int    0xa8
  40eb21:	imul   ebp,DWORD PTR [edx-0x39c28b2d],0x3026f972
  40eb2b:	pop    edi
  40eb2c:	repz mov bl,0xf3
  40eb2f:	aad    0x3d
  40eb31:	(bad)  
  40eb33:	sub    dl,cl
  40eb35:	mov    ebx,0xa402ac03
  40eb3a:	and    al,0x3b
  40eb3c:	fwait
  40eb3d:	shl    ch,cl
  40eb3f:	jns    0x40ebb2
  40eb41:	jp     0x40eaf1
  40eb43:	icebp  
  40eb44:	add    al,0x20
  40eb46:	outs   dx,DWORD PTR ds:[esi]
  40eb47:	and    esp,esi
  40eb49:	clc    
  40eb4a:	xchg   DWORD PTR [eax],ebp
  40eb4c:	fs call 0x2e69:0x342d5fcc
  40eb54:	mov    al,0x3e
  40eb56:	out    dx,al
  40eb57:	jmp    0x223d:0xaa2e48db
  40eb5e:	dec    ebx
  40eb5f:	iret   
  40eb60:	(bad)  
  40eb61:	mov    ebp,ebx
  40eb63:	sbb    cl,BYTE PTR gs:[edx+ebp*8+0x2c]
  40eb68:	jge    0x40eb88
  40eb6a:	pop    ecx
  40eb6b:	(bad)  
  40eb6c:	sti    
  40eb6d:	and    eax,0x49e7847
  40eb72:	daa    
  40eb73:	inc    esi
  40eb74:	mov    al,0xce
  40eb76:	adc    al,0xbd
  40eb78:	pop    esi
  40eb79:	mov    DWORD PTR ds:[edi-0x75966b6c],0x3ae2d689
  40eb84:	dec    esp
  40eb85:	inc    esi
  40eb86:	ret    
  40eb87:	xor    eax,0xcf2ff33a
  40eb8c:	mov    edi,0xdc6f0d14
  40eb91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb92:	mov    esi,0xdd6824e5
  40eb97:	fucomp st(6)
  40eb99:	(bad)  
  40eb9a:	pop    ss
  40eb9b:	verr   WORD PTR [ebx]
  40eb9e:	in     eax,dx
  40eb9f:	xchg   esi,eax
  40eba0:	test   BYTE PTR [edx],al
  40eba2:	pop    ecx
  40eba3:	sub    eax,0x53d948d9
  40eba8:	fsub   QWORD PTR [esp+ebp*4]
  40ebab:	es dec ebx
  40ebad:	cmp    al,0x61
  40ebaf:	pop    ds
  40ebb0:	xor    al,0x3b
  40ebb2:	sbb    eax,0x9966d653
  40ebb7:	and    BYTE PTR [ecx-0x73debbf6],bl
  40ebbd:	mov    al,ds:0x5a751b53
  40ebc2:	sub    eax,0x3355ddee
  40ebc7:	shr    BYTE PTR [eax*8+0x337393dc],1
  40ebce:	aam    0xab
  40ebd0:	ds xor al,0x3c
  40ebd3:	and    dl,bl
  40ebd5:	mov    ecx,0xc3b4343b
  40ebda:	push   cs
  40ebdb:	push   esp
  40ebdc:	call   0x4470:0x18e642ef
  40ebe3:	sbb    ebp,esp
  40ebe5:	dec    ebx
  40ebe6:	fadd   st,st(6)
  40ebe8:	out    0x2a,eax
  40ebea:	push   ebx
  40ebeb:	push   edi
  40ebec:	call   0xb8a6:0x64e90dcf
  40ebf3:	stos   BYTE PTR es:[edi],al
  40ebf4:	xor    eax,0xa9a5b144
  40ebf9:	push   ecx
  40ebfa:	ror    ah,0xe7
  40ebfd:	push   edx
  40ebfe:	imul   esi,DWORD PTR [ecx-0x53ccd93d],0x63
  40ec05:	in     al,0x8e
  40ec07:	push   ebx
  40ec08:	ins    DWORD PTR es:[edi],dx
  40ec09:	sbb    DWORD PTR [ebp-0x2c655041],esi
  40ec0f:	adc    al,BYTE PTR [ebx+0x60b2aa26]
  40ec15:	sub    bh,bl
  40ec17:	repnz (bad) 
  40ec19:	sti    
  40ec1a:	sti    
  40ec1b:	mov    DWORD PTR [esi],eax
  40ec1d:	pusha  
  40ec1e:	mov    ecx,ds
  40ec20:	dec    edx
  40ec21:	jl     0x40ebab
  40ec23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec24:	sahf   
  40ec25:	fdiv   QWORD PTR [edi+eiz*8]
  40ec28:	dec    ebp
  40ec29:	mov    ch,0xee
  40ec2b:	add    ebx,DWORD PTR [esi]
  40ec2d:	in     eax,0xfe
  40ec2f:	fnstenv [edi-0x53]
  40ec32:	adc    eax,0x382bdc84
  40ec37:	dec    ebp
  40ec38:	dec    ebx
  40ec39:	xchg   dl,cl
  40ec3b:	cdq    
  40ec3c:	dec    ecx
  40ec3d:	jne    0x40ebda
  40ec3f:	push   esi
  40ec40:	jp     0x40ec90
  40ec42:	and    al,0xc1
  40ec44:	jae    0x40ec55
  40ec46:	dec    edi
  40ec47:	push   eax
  40ec48:	outs   dx,BYTE PTR ds:[esi]
  40ec49:	or     cl,dh
  40ec4b:	fsub   QWORD PTR [edx-0x52f907c0]
  40ec51:	in     eax,dx
  40ec52:	mov    bl,0x43
  40ec54:	sbb    BYTE PTR [edx-0x24],dl
  40ec57:	and    eax,0xb42dcb64
  40ec5c:	dec    esp
  40ec5d:	mov    ds:0x2fafb6c0,eax
  40ec62:	stc    
  40ec63:	xchg   ch,bl
  40ec65:	adc    DWORD PTR [ecx],esi
  40ec67:	or     al,bl
  40ec69:	sub    eax,0xea76e37
  40ec6e:	add    al,0x5
  40ec70:	mov    BYTE PTR [eax+eax*2],dl
  40ec73:	mov    ds:0x8d970040,al
  40ec78:	jne    0x40ec64
  40ec7a:	retf   0x75a9
  40ec7d:	add    eax,ecx
  40ec7f:	add    BYTE PTR [ebp+0x23],ah
  40ec82:	cmp    DWORD PTR [ebx+0x56ef0382],edx
  40ec88:	clc    
  40ec89:	adc    BYTE PTR [eax+0x5f],ch
  40ec8c:	sar    DWORD PTR [eax],cl
  40ec8e:	js     0x40ec8a
  40ec90:	mov    al,0x35
  40ec92:	jae    0x40ec63
  40ec94:	or     DWORD PTR [ecx+eax*8-0x5f03f709],0xecb35fde
  40ec9f:	pop    es
  40eca0:	fcmovb st,st(1)
  40eca2:	or     eax,0x8306f4f0
  40eca7:	xor    DWORD PTR [ebx],ebp
  40eca9:	and    eax,0x9a566710
  40ecae:	cld    
  40ecaf:	inc    edi
  40ecb0:	push   es
  40ecb1:	xor    eax,ebp
  40ecb3:	sbb    BYTE PTR fs:[ebx+0x7c4d86f1],cl
  40ecba:	(bad)  
  40ecbc:	frstor [esi+0xda1515b]
  40ecc2:	jle    0x40ed21
  40ecc4:	inc    edi
  40ecc5:	and    eax,0xff8606d9
  40ecca:	mov    dl,0xb9
  40eccc:	(bad)  
  40ecce:	retf   
  40eccf:	ja     0x40ecdb
  40ecd1:	ss test al,0xed
  40ecd4:	cwde   
  40ecd5:	loope  0x40eca9
  40ecd7:	aaa    
  40ecd8:	add    DWORD PTR [esi-0x12870693],eax
  40ecde:	out    0xb3,eax
  40ece0:	pop    esi
  40ece1:	stc    
  40ece2:	dec    ah
  40ece4:	jmp    0x40ed39
  40ece6:	lds    ebp,FWORD PTR [edi+0x116211c4]
  40ecec:	scas   eax,DWORD PTR es:[edi]
  40eced:	fidivr WORD PTR [eax-0x43e0db3d]
  40ecf3:	lea    edx,[ebx]
  40ecf5:	imul   edi,DWORD PTR [edi-0x5a],0x237c74bb
  40ecfc:	mov    al,0xe8
  40ecfe:	inc    ebp
  40ecff:	fdivrp st(5),st
  40ed01:	enter  0xfc78,0x36
  40ed05:	in     eax,dx
  40ed06:	and    cl,ch
  40ed08:	mov    ecx,0x1c107d09
  40ed0d:	mov    ch,0x8
  40ed0f:	xchg   esp,eax
  40ed10:	push   ecx
  40ed11:	dec    ecx
  40ed12:	loope  0x40ed55
  40ed14:	popa   
  40ed15:	jmp    0x83c2:0xbb88d48f
  40ed1c:	cmp    BYTE PTR [ecx],0x34
  40ed1f:	fdiv   DWORD PTR [esi+edx*2+0x55fd5d30]
  40ed26:	adc    al,0x49
  40ed28:	fistp  WORD PTR [edx+0x18d41cd4]
  40ed2e:	loop   0x40ed69
  40ed30:	inc    ebp
  40ed31:	or     BYTE PTR [ebx-0x36],cl
  40ed34:	push   edi
  40ed35:	clc    
  40ed36:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed38:	mov    ds:0x5fec2c90,eax
  40ed3d:	add    ebx,esi
  40ed3f:	xchg   ebp,eax
  40ed40:	nop
  40ed41:	jne    0x40ed34
  40ed43:	inc    ecx
  40ed44:	ins    DWORD PTR es:[edi],dx
  40ed45:	pusha  
  40ed46:	cmp    eax,0x90864e11
  40ed4b:	and    ebx,DWORD PTR [esi-0x3602cb00]
  40ed51:	fxch   st(1)
  40ed53:	test   BYTE PTR [ebx],bl
  40ed55:	(bad)  
  40ed56:	xchg   esi,eax
  40ed57:	sub    edi,DWORD PTR [esi+0x8]
  40ed5a:	sti    
  40ed5b:	(bad)  
  40ed5c:	xlat   BYTE PTR ds:[ebx]
  40ed5d:	dec    ecx
  40ed5e:	mov    edx,0x7c9e32f
  40ed63:	scas   eax,DWORD PTR es:[edi]
  40ed64:	leave  
  40ed65:	dec    ecx
  40ed66:	lock jnp 0x40edcb
  40ed69:	mov    bh,0x67
  40ed6b:	mov    ch,0xeb
  40ed6d:	das    
  40ed6e:	fild   DWORD PTR [edi+0x41366648]
  40ed74:	out    0x9,eax
  40ed76:	and    eax,0x6aa0893e
  40ed7b:	pushf  
  40ed7c:	fnsave [ebx+0x259620b4]
  40ed82:	sbb    DWORD PTR [ecx],0x79
  40ed85:	neg    BYTE PTR [esi+0x16]
  40ed88:	mov    ss,esi
  40ed8a:	out    dx,al
  40ed8b:	nop
  40ed8c:	sub    eax,0xa135ce8e
  40ed91:	or     eax,0x7fd216a0
  40ed96:	inc    ebx
  40ed97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed98:	cmp    al,0x22
  40ed9a:	int3   
  40ed9b:	mov    edx,0x6026cb2a
  40eda0:	addr16 in eax,dx
  40eda2:	dec    edi
  40eda3:	adc    DWORD PTR [esp+esi*1-0x2f],edx
  40eda7:	out    0xfb,eax
  40eda9:	dec    eax
  40edaa:	pop    esi
  40edab:	loope  0x40ed6b
  40edad:	xor    al,0xcd
  40edaf:	mov    DWORD PTR [eax-0x48],ecx
  40edb2:	(bad)  
  40edb3:	outs   dx,DWORD PTR ds:[esi]
  40edb4:	out    0x8f,al
  40edb6:	mov    al,ds:0x3ce26203
  40edbb:	sub    dh,dl
  40edbd:	dec    esi
  40edbe:	out    0x99,al
  40edc0:	mov    cl,0x8e
  40edc2:	int    0x77
  40edc4:	pop    edi
  40edc5:	jb     0x40ee1c
  40edc7:	push   cx
  40edc9:	in     eax,0x83
  40edcb:	adc    BYTE PTR [edi-0x201bae48],al
  40edd1:	add    BYTE PTR [eax-0x37],0x67
  40edd5:	xchg   edi,eax
  40edd6:	mov    edx,0x75299962
  40eddb:	in     al,dx
  40eddc:	iret   
  40eddd:	mov    cl,0x68
  40eddf:	je     0x40edbd
  40ede1:	mov    al,ds:0xd280e6bd
  40ede6:	push   ds
  40ede7:	daa    
  40ede8:	and    eax,0x24619377
  40eded:	xor    ebx,0x23
  40edf0:	scas   al,BYTE PTR es:[edi]
  40edf1:	test   eax,0xd944ff84
  40edf6:	fstp   st(0)
  40edf8:	sbb    cl,ah
  40edfa:	mov    eax,ds:0x246f174c
  40edff:	jmp    0x9c67121b
  40ee04:	ds enter 0xd34c,0x58
  40ee09:	sbb    ah,BYTE PTR [ebp+eax*1-0x2078c17]
  40ee10:	add    BYTE PTR [ebp-0x1a],ah
  40ee13:	and    eax,0x5740dfbf
  40ee18:	fsubr  DWORD PTR [esi+edi*8-0x64]
  40ee1c:	pop    ecx
  40ee1d:	call   0xd3544752
  40ee22:	jle    0x40eea3
  40ee24:	jp     0x40ee63
  40ee26:	cwde   
  40ee27:	push   esp
  40ee28:	push   ds
  40ee29:	les    esi,FWORD PTR [ebx+0x30]
  40ee2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee2d:	inc    ebp
  40ee2e:	outs   dx,BYTE PTR ds:[esi]
  40ee2f:	loope  0x40edcc
  40ee31:	bound  esp,QWORD PTR [eax]
  40ee33:	mov    ds:0x877057c7,al
  40ee38:	xor    DWORD PTR [ecx+edx*8],0x25
  40ee3c:	mov    al,0xb5
  40ee3e:	jno    0x40ee22
  40ee40:	test   eax,0xf760aa70
  40ee45:	cwde   
  40ee46:	scas   al,BYTE PTR es:[edi]
  40ee47:	sbb    BYTE PTR [ebp+0x7b],cl
  40ee4a:	jnp    0x40ee44
  40ee4c:	rcl    DWORD PTR [edx],0xdb
  40ee4f:	or     eax,0xc575a4c4
  40ee54:	mov    eax,ds:0x8ba7a0ed
  40ee59:	pop    ebx
  40ee5a:	scas   eax,DWORD PTR es:[edi]
  40ee5b:	aam    0xb8
  40ee5d:	or     eax,0x2a4dbbc0
  40ee62:	fisttp QWORD PTR [eax+0x13aeb8c1]
  40ee68:	mov    bl,0x69
  40ee6a:	dec    esi
  40ee6b:	pusha  
  40ee6c:	pop    esp
  40ee6d:	cld    
  40ee6e:	sub    BYTE PTR [eax-0x40],cl
  40ee71:	fwait
  40ee72:	dec    ecx
  40ee73:	xchg   ebp,eax
  40ee74:	dec    ecx
  40ee75:	and    al,bh
  40ee77:	or     eax,0x6099fa59
  40ee7c:	lock in al,0x20
  40ee7f:	sbb    ah,0xd9
  40ee82:	add    DWORD PTR [esi],0xe600fce5
  40ee88:	push   ebp
  40ee89:	test   BYTE PTR [ebp+0x52103e60],bh
  40ee8f:	fs pop ebp
  40ee91:	sub    al,0x17
  40ee93:	call   FWORD PTR [esi+0x7b]
  40ee96:	imul   esp,DWORD PTR [edi+eax*2-0x600d9bd],0xdc4424be
  40eea1:	in     eax,dx
  40eea2:	fxch   st(7)
  40eea4:	ret    0x34d0
  40eea7:	popf   
  40eea8:	and    ecx,DWORD PTR [ebx+0x2]
  40eeab:	sub    al,0x5
  40eead:	and    DWORD PTR [ebx],0x8f69433f
  40eeb3:	hlt    
  40eeb4:	push   edx
  40eeb5:	mov    esi,0xba56d039
  40eeba:	ins    DWORD PTR es:[edi],dx
  40eebb:	leave  
  40eebc:	adc    DWORD PTR [edi],edi
  40eebe:	lods   eax,DWORD PTR ds:[esi]
  40eebf:	jg     0x40ef1f
  40eec1:	sbb    al,BYTE PTR [edx]
  40eec3:	push   edi
  40eec4:	pop    eax
  40eec5:	sti    
  40eec6:	(bad)  
  40eec8:	mov    ebp,0xad95cd98
  40eecd:	loope  0x40eed9
  40eecf:	inc    edi
  40eed0:	pop    esi
  40eed1:	cmp    eax,0xc56302db
  40eed6:	mov    WORD PTR [ecx+ebp*4-0x614b7fff],?
  40eedd:	push   esp
  40eede:	ficomp DWORD PTR [edx]
  40eee0:	or     eax,0x1b97a90a
  40eee5:	rcr    DWORD PTR [ebx+0x65726e71],1
  40eeeb:	ss int 0x81
  40eeee:	and    bl,al
  40eef0:	(bad)  
  40eef1:	cmp    eax,esp
  40eef3:	sub    DWORD PTR ss:[ebx-0x2d],esi
  40eef7:	cld    
  40eef8:	add    al,0x69
  40eefa:	mov    ch,0x68
  40eefc:	pop    ebp
  40eefd:	xchg   ebx,eax
  40eefe:	test   eax,0xc3e497c1
  40ef03:	xchg   esp,eax
  40ef04:	sti    
  40ef05:	pop    esi
  40ef06:	out    0xa0,eax
  40ef08:	outs   dx,BYTE PTR ds:[esi]
  40ef09:	adc    al,0xfe
  40ef0b:	retf   
  40ef0c:	(bad)  
  40ef0d:	cmp    eax,0x51fdccda
  40ef12:	and    DWORD PTR [ebx-0x5b288e38],esp
  40ef18:	push   ds
  40ef19:	iret   
  40ef1a:	loopne 0x40ef8a
  40ef1c:	dec    esp
  40ef1d:	call   0xdf2f46f
  40ef22:	popa   
  40ef23:	jmp    0x55b3:0xd3d182d8
  40ef2a:	iret   
  40ef2b:	mov    ebx,ds
  40ef2d:	sar    BYTE PTR [ecx-0x7a55d09e],0xcb
  40ef34:	push   ds
  40ef35:	pop    ebx
  40ef36:	pop    esi
  40ef37:	push   edx
  40ef38:	sub    esp,esi
  40ef3a:	dec    esi
  40ef3b:	xchg   edx,eax
  40ef3c:	int    0x10
  40ef3e:	test   ebp,edx
  40ef40:	cmp    edx,eax
  40ef42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef43:	(bad)  
  40ef44:	loop   0x40ef55
  40ef46:	imul   edi,edi,0xffffffcf
  40ef49:	push   esp
  40ef4a:	dec    edx
  40ef4b:	aas    
  40ef4c:	leave  
  40ef4d:	fsub   QWORD PTR [ebx+0x4028b4a2]
  40ef53:	test   eax,0x71a4119e
  40ef58:	es call 0x739ea5b7
  40ef5e:	mov    ecx,0x2d0ba400
  40ef63:	in     al,dx
  40ef64:	addr16 jb 0x40ef76
  40ef67:	les    ebx,FWORD PTR [esp+ebp*8-0x19]
  40ef6b:	pop    edi
  40ef6c:	cmp    eax,0x124f97fb
  40ef71:	dec    esi
  40ef72:	test   eax,0x41c589d
  40ef77:	(bad)  
  40ef79:	jae    0x40ef5e
  40ef7b:	xchg   ebp,eax
  40ef7c:	push   ss
  40ef7d:	outs   dx,DWORD PTR ds:[esi]
  40ef7e:	sbb    al,0xf4
  40ef80:	fidiv  WORD PTR [edx+ebx*1-0x62]
  40ef84:	int3   
  40ef85:	stos   BYTE PTR es:[edi],al
  40ef86:	adc    DWORD PTR ds:[ecx],edx
  40ef89:	or     al,0x79
  40ef8b:	xchg   ebp,eax
  40ef8c:	pop    ecx
  40ef8d:	je     0x40effb
  40ef8f:	popf   
  40ef90:	mov    ebx,0x7efeccec
  40ef95:	sar    dh,0x2c
  40ef98:	outs   dx,BYTE PTR ds:[esi]
  40ef99:	imul   eax,ecx,0xffffffcb
  40ef9c:	popf   
  40ef9d:	cmp    eax,0x30039b4a
  40efa2:	lds    edx,FWORD PTR [esi-0x2b0b4ef9]
  40efa8:	or     dh,ah
  40efaa:	scas   al,BYTE PTR es:[edi]
  40efab:	xchg   BYTE PTR [ebx+0x24],cl
  40efae:	and    BYTE PTR [eax-0x9765822],0xde
  40efb5:	jae    0x40ef93
  40efb7:	push   edx
  40efb8:	push   ds
  40efb9:	out    0x43,eax
  40efbb:	inc    ecx
  40efbc:	cwde   
  40efbd:	bound  ebp,QWORD PTR [ecx+0x3e28ae8e]
  40efc3:	les    esi,FWORD PTR [esp+ebx*4+0x56]
  40efc7:	dec    esi
  40efc8:	ret    0x58d0
  40efcb:	mov    BYTE PTR [ebp+edi*2+0x22683b5d],al
  40efd2:	and    ebx,DWORD PTR [ebx+esi*1+0x759e4736]
  40efd9:	fst    DWORD PTR [edi+0x46ee9a69]
  40efdf:	xor    ecx,edi
  40efe1:	dec    ecx
  40efe2:	jno    0x40f01c
  40efe4:	jmp    0xaa3b353c
  40efe9:	and    al,0xa9
  40efeb:	popf   
  40efec:	js     0x40efba
  40efee:	mov    bh,0x8c
  40eff0:	mov    ah,0xa7
  40eff2:	or     DWORD PTR [edx+0xc],edi
  40eff5:	xor    al,0xa
  40eff7:	lods   eax,DWORD PTR ds:[esi]
  40eff8:	inc    ebp
  40eff9:	das    
  40effa:	out    dx,eax
  40effb:	push   ds
  40effc:	fadd   QWORD PTR [edx]
  40effe:	aam    0x71
  40f000:	aam    0x92
  40f002:	mov    al,0x9f
  40f004:	adc    al,0x9b
  40f006:	inc    eax
  40f007:	mov    ecx,0x8ea4da07
  40f00c:	int3   
  40f00d:	adc    dl,BYTE PTR [ebx-0x5e]
  40f010:	jnp    0x40efe0
  40f012:	jbe    0x40efd1
  40f014:	lock nop
  40f016:	add    bl,bh
  40f018:	or     al,0x6f
  40f01a:	xchg   esp,eax
  40f01b:	lock cli 
  40f01d:	mov    al,0x7a
  40f01f:	nop
  40f020:	stos   BYTE PTR es:[edi],al
  40f021:	dec    ebp
  40f022:	ror    BYTE PTR [edi],cl
  40f024:	int    0x5
  40f026:	jle    0x40f003
  40f028:	sbb    edi,0xffffffab
  40f02b:	int3   
  40f02c:	sub    edx,esp
  40f02e:	xor    BYTE PTR [eax+0x3ce92aae],dh
  40f034:	push   ds
  40f035:	mov    bl,0x1a
  40f037:	js     0x40eff3
  40f039:	adc    BYTE PTR [edi+eiz*4+0x5f],bh
  40f03d:	adc    edi,DWORD PTR [edi+eiz*2-0x3d7c47ce]
  40f044:	xchg   BYTE PTR ds:0x760934ca,bh
  40f04a:	xor    ax,0x43ba
  40f04e:	mov    cl,0x95
  40f050:	out    dx,al
  40f051:	pop    esi
  40f052:	icebp  
  40f053:	inc    esi
  40f054:	add    edx,DWORD PTR [ebx+0x1d]
  40f057:	sub    DWORD PTR [ebx],esi
  40f059:	ret    0xd1e0
  40f05c:	stos   BYTE PTR es:[edi],al
  40f05d:	mov    edi,0x15077ea6
  40f062:	rcr    BYTE PTR [ebp+0x71],cl
  40f065:	mov    WORD PTR [ebp-0x66],gs
  40f068:	ret    0xe71b
  40f06b:	mov    ds:0x24457ad0,al
  40f070:	test   al,0x6e
  40f072:	and    cl,BYTE PTR [ecx]
  40f074:	jo     0x40f05c
  40f076:	jle    0x40f028
  40f078:	push   cs
  40f079:	xchg   ebx,eax
  40f07a:	inc    ebx
  40f07b:	mov    cl,0x61
  40f07d:	jecxz  0x40f0d7
  40f07f:	adc    edi,0x9ad6f68a
  40f085:	mov    bh,0xfc
  40f087:	cmp    bl,BYTE PTR [esp+ebx*8]
  40f08a:	xchg   ebx,eax
  40f08b:	jbe    0x40f036
  40f08d:	xchg   BYTE PTR [ecx+eax*8+0x1283600a],ah
  40f094:	in     al,0x9d
  40f096:	jmp    0xa9d6:0xf64a596f
  40f09d:	push   esi
  40f09e:	cld    
  40f09f:	pushf  
  40f0a0:	(bad)  
  40f0a1:	adc    dh,dl
  40f0a3:	push   ebx
  40f0a4:	pop    ecx
  40f0a5:	jp     0x40f041
  40f0a7:	or     BYTE PTR es:[esi+0x4e],ch
  40f0ab:	push   ebp
  40f0ac:	push   0x4bf0f2a2
  40f0b1:	inc    ecx
  40f0b2:	or     DWORD PTR [edx+eiz*4-0x29],0xb
  40f0b7:	adc    eax,0x9e67d8c6
  40f0bc:	push   edi
  40f0bd:	mov    ch,0xae
  40f0bf:	dec    ebx
  40f0c0:	ret    
  40f0c1:	jbe    0x40f09f
  40f0c3:	mov    edi,0x573d907
  40f0c8:	dec    ebp
  40f0c9:	ja     0x40f0fb
  40f0cb:	ja     0x40f0b9
  40f0cd:	nop
  40f0ce:	arpl   WORD PTR [edx],cx
  40f0d0:	(bad)
  40f0d3:	mov    dl,dl
  40f0d5:	fldenv [eax-0x64]
  40f0d8:	mov    ebx,0x7866d174
  40f0dd:	lds    edx,FWORD PTR [esi]
  40f0df:	inc    esp
  40f0e0:	mov    ch,0x95
  40f0e2:	and    esp,DWORD PTR ds:0xce299df5
  40f0e8:	nop
  40f0e9:	xchg   esi,eax
  40f0ea:	inc    edx
  40f0eb:	pop    es
  40f0ec:	xchg   edx,eax
  40f0ed:	scas   eax,DWORD PTR es:[edi]
  40f0ee:	test   DWORD PTR [ebp+0x300659e7],eax
  40f0f4:	stc    
  40f0f5:	push   edi
  40f0f6:	sub    esi,ebp
  40f0f8:	sub    bh,BYTE PTR [ebp+edx*2+0x6d]
  40f0fc:	loope  0x40f0fd
  40f0fe:	pop    esp
  40f0ff:	jmp    0x40f0b2
  40f101:	(bad)  
  40f102:	(bad)  
  40f103:	retf   0xd06c
  40f106:	sti    
  40f107:	ror    BYTE PTR [edx+eiz*4-0x1813ab47],cl
  40f10e:	(bad)  
  40f10f:	repnz dec eax
  40f111:	fcomip st,st(4)
  40f113:	push   ebp
  40f114:	and    al,bh
  40f116:	scas   al,BYTE PTR es:[edi]
  40f117:	sub    edi,eax
  40f119:	repnz stos BYTE PTR es:[edi],al
  40f11b:	pushf  
  40f11c:	fmul   QWORD PTR [eax-0x7d]
  40f11f:	mov    ch,0x77
  40f121:	rcl    DWORD PTR [ecx-0x3529189b],1
  40f127:	cld    
  40f128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f129:	test   eax,0x851597b
  40f12e:	mov    al,0xc0
  40f130:	mov    eax,ds:0x697c8711
  40f135:	cmp    ebx,DWORD PTR [edx]
  40f137:	test   DWORD PTR [esi],0x65694add
  40f13d:	push   esp
  40f13e:	sar    DWORD PTR [esi],1
  40f140:	adc    al,0x4b
  40f142:	fbld   TBYTE PTR [eax-0x7e]
  40f145:	xchg   BYTE PTR [esi+0x1b],ah
  40f148:	and    ebx,ecx
  40f14a:	retf   0x6280
  40f14d:	xor    eax,0x83209e0d
  40f152:	push   esp
  40f153:	cmp    BYTE PTR [ebx],ah
  40f155:	pop    ebp
  40f156:	sub    DWORD PTR [edx+ecx*2-0x76],esi
  40f15a:	retf   
  40f15b:	pusha  
  40f15c:	mov    eax,ds:0x44cee257
  40f161:	or     esp,DWORD PTR ds:0xe5a683c5
  40f167:	pusha  
  40f168:	push   0x30e44b11
  40f16d:	xlat   BYTE PTR ds:[ebx]
  40f16e:	mov    esp,0xbfee1c2
  40f173:	retf   
  40f174:	add    BYTE PTR [ebp+ebp*4-0x681447ed],cl
  40f17b:	ds pop ebp
  40f17d:	loope  0x40f17e
  40f17f:	sub    al,0x42
  40f181:	ds jmp 0x32a16b7f
  40f187:	pop    DWORD PTR [ebp-0x1a]
  40f18a:	jno    0x40f149
  40f18c:	std    
  40f18d:	jp     0x40f1aa
  40f18f:	lea    eax,[eax]
  40f191:	fdivr  QWORD PTR [ecx+0x3]
  40f194:	pop    ebp
  40f195:	adc    DWORD PTR [ecx-0x74],edx
  40f198:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f199:	or     BYTE PTR [edi],bh
  40f19b:	popf   
  40f19c:	and    cl,BYTE PTR [ecx+0x5b]
  40f19f:	xchg   ebp,eax
  40f1a0:	out    dx,eax
  40f1a1:	mov    cl,0x4b
  40f1a3:	xchg   esi,eax
  40f1a4:	add    eax,0x39105317
  40f1a9:	mov    edi,0x40864da9
  40f1ae:	jo     0x40f174
  40f1b0:	cmp    BYTE PTR [edi],bl
  40f1b2:	ret    0x368f
  40f1b5:	add    BYTE PTR [ecx+0x619b89a0],dl
  40f1bb:	mov    al,0xac
  40f1bd:	iret   
  40f1be:	push   cs
  40f1bf:	cmp    al,0x3f
  40f1c1:	push   edi
  40f1c2:	pop    edi
  40f1c3:	in     al,dx
  40f1c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1c5:	retf   
  40f1c6:	push   ecx
  40f1c7:	jmp    0xc33d1406
  40f1cc:	mov    eax,ds:0x69b00007
  40f1d1:	sub    DWORD PTR [esi],edi
  40f1d3:	arpl   WORD PTR [ebp+0x4f],cx
  40f1d6:	ja     0x40f210
  40f1d8:	inc    ebp
  40f1d9:	push   DWORD PTR [esi+0x2d]
  40f1dc:	repz cdq 
  40f1de:	push   esi
  40f1df:	aad    0x31
  40f1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1e2:	icebp  
  40f1e3:	js     0x40f1dc
  40f1e5:	fcomp  QWORD PTR [edi]
  40f1e7:	ret    0xa005
  40f1ea:	and    BYTE PTR [ebp+0x3abeb254],al
  40f1f0:	cdq    
  40f1f1:	pop    ds
  40f1f2:	ja     0x40f1a4
  40f1f4:	push   ecx
  40f1f5:	inc    edi
  40f1f6:	pop    ss
  40f1f7:	adc    edi,DWORD PTR [eax+edx*1-0x42]
  40f1fb:	dec    edx
  40f1fc:	pushf  
  40f1fd:	call   0x1c904da
  40f202:	test   bl,bl
  40f204:	fcmove st,st(0)
  40f206:	pop    es
  40f207:	repz fisttp WORD PTR [ecx+0x5f9331b4]
  40f20e:	push   ecx
  40f20f:	rcl    DWORD PTR [esi+edx*8+0x1fda623d],1
  40f216:	(bad)  
  40f217:	and    edi,DWORD PTR cs:[edi-0x445c8985]
  40f21e:	fiadd  DWORD PTR [esi-0x29]
  40f221:	in     eax,dx
  40f222:	xor    BYTE PTR [eax],dh
  40f224:	sbb    eax,0x62b85669
  40f229:	mov    ds:0xd45defeb,eax
  40f22e:	add    ecx,ebx
  40f230:	xchg   edi,eax
  40f231:	ds xchg edi,eax
  40f233:	sub    ch,BYTE PTR [ebx]
  40f235:	adc    eax,0xd621d930
  40f23a:	xor    BYTE PTR [ebp+0x13],dh
  40f23d:	jbe    0x40f22e
  40f23f:	les    eax,FWORD PTR [ebx]
  40f241:	in     al,0xce
  40f243:	push   esi
  40f244:	test   al,0xf1
  40f246:	jle    0x40f222
  40f248:	inc    edi
  40f249:	mov    dh,0x48
  40f24b:	in     al,0xd1
  40f24d:	shl    DWORD PTR [edi-0x6d57775c],1
  40f253:	mov    ecx,DWORD PTR ds:0xdd9bbef6
  40f259:	stc    
  40f25a:	je     0x40f2ab
  40f25c:	fiadd  DWORD PTR [ebp-0x2aed9f9]
  40f262:	hlt    
  40f263:	jmp    0x4d1e:0xc4ac6170
  40f26a:	dec    ebx
  40f26b:	sbb    al,0x4e
  40f26d:	imul   edi,DWORD PTR ds:0x9c7f837f,0x9338c832
  40f277:	mov    al,ds:0x7f9acf8b
  40f27c:	mov    ch,BYTE PTR [ecx+0x23]
  40f27f:	retf   0xe1da
  40f282:	mov    edi,0x87bac425
  40f287:	jl     0x40f2d6
  40f289:	gs mov ebx,0xb670ecab
  40f28f:	add    cl,ch
  40f291:	mov    ebx,0x12252517
  40f296:	jbe    0x40f23b
  40f298:	or     DWORD PTR [eax-0x6b172742],eax
  40f29e:	xchg   esi,eax
  40f29f:	inc    ecx
  40f2a0:	out    0x32,eax
  40f2a2:	push   ds
  40f2a3:	jecxz  0x40f2f8
  40f2a5:	cmp    bl,ch
  40f2a7:	push   ebp
  40f2a8:	fmul   QWORD PTR ds:0xb0f3785d
  40f2ae:	or     BYTE PTR [esi-0x7ac0bb45],al
  40f2b4:	cmp    eax,DWORD PTR [ebx-0x7402e5c2]
  40f2ba:	sbb    DWORD PTR [esi+0x5a63ab51],ebp
  40f2c0:	ret    
  40f2c1:	adc    BYTE PTR [edi+0x3b],dh
  40f2c4:	cs sub al,0x55
  40f2c7:	stos   DWORD PTR es:[edi],eax
  40f2c8:	or     cl,BYTE PTR [ebx]
  40f2ca:	mov    edi,0xfa6db824
  40f2cf:	paddd  mm0,QWORD PTR [ebx-0x4ec2188b]
  40f2d6:	pushf  
  40f2d7:	add    DWORD PTR [ebp+ebp*8+0x3b],ebx
  40f2db:	or     BYTE PTR [edx],0x13
  40f2de:	inc    eax
  40f2df:	sbb    al,0xd8
  40f2e1:	push   ds
  40f2e2:	fild   WORD PTR [ebp+ebx*4-0x21ac48f0]
  40f2e9:	adc    DWORD PTR [esi],eax
  40f2eb:	out    dx,al
  40f2ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2ed:	jo     0x40f34c
  40f2ef:	pop    edi
  40f2f0:	pop    ecx
  40f2f1:	add    al,0x65
  40f2f3:	enter  0x2625,0x17
  40f2f7:	cmp    eax,0xebf2d482
  40f2fc:	lods   eax,DWORD PTR ds:[esi]
  40f2fd:	fcomp  QWORD PTR [eax]
  40f2ff:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f301:	or     ch,BYTE PTR [edx-0x453fbd7]
  40f307:	and    DWORD PTR [ebp-0x23],esi
  40f30a:	ficomp WORD PTR [eax]
  40f30c:	xor    eax,0x718ab68
  40f311:	pusha  
  40f312:	aam    0x9d
  40f314:	xchg   edx,eax
  40f315:	test   eax,0xc4ddcc1e
  40f31a:	(bad)  
  40f31b:	loop   0x40f37c
  40f31d:	out    0xe6,al
  40f31f:	mov    edx,0xf83c6a9a
  40f324:	pop    edi
  40f325:	xchg   esi,eax
  40f326:	ins    DWORD PTR es:[edi],dx
  40f327:	vpsubsb ymm2,ymm6,YMMWORD PTR [ebx]
  40f32b:	mov    al,ds:0xc62dd456
  40f330:	pop    esp
  40f331:	test   al,0xb5
  40f333:	out    0x99,al
  40f335:	test   al,0xb7
  40f337:	and    BYTE PTR [ebp+0x48],bh
  40f33a:	sbb    DWORD PTR [ecx],ebp
  40f33c:	repz fmul DWORD PTR [ecx-0x24091be9]
  40f343:	bound  ebx,QWORD PTR [edx]
  40f345:	(bad)  
  40f346:	pop    esp
  40f347:	stc    
  40f348:	int    0x27
  40f34a:	scas   eax,DWORD PTR es:[edi]
  40f34b:	test   DWORD PTR [esi-0x48],0x1165c3d4
  40f352:	leave  
  40f353:	sub    DWORD PTR [eax-0x68572f4d],ebp
  40f359:	jbe    0x40f36b
  40f35b:	enter  0xb271,0x91
  40f35f:	les    edi,FWORD PTR [ecx-0x43feff52]
  40f365:	push   esi
  40f366:	mov    bl,0x4f
  40f368:	push   0x76e5c339
  40f36d:	les    ebx,FWORD PTR cs:[eax+0x40]
  40f371:	and    dh,BYTE PTR [eax]
  40f373:	and    al,0x4a
  40f375:	mov    edi,0x4d7505ca
  40f37a:	jge    0x40f2ff
  40f37c:	or     ebp,DWORD PTR [ebx-0x21]
  40f37f:	cmp    bl,dl
  40f381:	mov    WORD PTR [eax+0x58],fs
  40f384:	in     al,0xe2
  40f386:	popf   
  40f387:	sub    al,0x4f
  40f389:	stos   BYTE PTR es:[edi],al
  40f38a:	or     bl,cl
  40f38c:	call   0x2bde:0x4c385348
  40f393:	inc    esp
  40f394:	(bad)  
  40f395:	in     eax,dx
  40f396:	or     ecx,DWORD PTR [edx]
  40f398:	pop    eax
  40f399:	fiadd  WORD PTR [esi+eiz*1]
  40f39c:	or     DWORD PTR [edx+ecx*1],esi
  40f39f:	loop   0x40f351
  40f3a1:	fcmovnbe st,st(4)
  40f3a3:	push   0x3d
  40f3a5:	sub    ch,BYTE PTR [esi]
  40f3a7:	fdiv   DWORD PTR [edx+0x40]
  40f3aa:	(bad)  
  40f3ab:	or     esp,DWORD PTR [ebp+0x49]
  40f3ae:	dec    esp
  40f3af:	or     eax,0x1e591073
  40f3b4:	in     al,0xa3
  40f3b6:	addr16 xchg edx,eax
  40f3b8:	cmp    esp,esp
  40f3ba:	xchg   esi,eax
  40f3bb:	repnz sbb cl,cl
  40f3be:	mov    ebp,0x6d0d3e81
  40f3c3:	jno    0x40f349
  40f3c5:	(bad)  
  40f3c6:	adc    bl,ch
  40f3c8:	scas   eax,DWORD PTR es:[edi]
  40f3c9:	and    edi,DWORD PTR [edx]
  40f3cb:	push   esp
  40f3cc:	(bad)  
  40f3cd:	xor    edx,DWORD PTR [edi-0x34d859d1]
  40f3d3:	js     0x40f449
  40f3d5:	add    dh,cl
  40f3d7:	and    BYTE PTR [eax+0x1346f10d],bh
  40f3dd:	repnz outs dx,BYTE PTR ds:[esi]
  40f3df:	push   edx
  40f3e0:	(bad)
  40f3e3:	mov    ebx,0xb195d384
  40f3e8:	sbb    DWORD PTR [ecx+ebx*1],0x1e8f0de8
  40f3ef:	mov    BYTE PTR [edi-0x2fe76574],ah
  40f3f5:	dec    eax
  40f3f6:	push   0x598d4753
  40f3fb:	pop    ecx
  40f3fc:	clc    
  40f3fd:	outs   dx,DWORD PTR ds:[esi]
  40f3fe:	xchg   edi,eax
  40f3ff:	jl     0x40f3e3
  40f401:	add    edx,DWORD PTR [esi+eax*2-0x14]
  40f405:	fild   DWORD PTR [ebp+0x226abba0]
  40f40b:	or     esp,DWORD PTR [ecx-0x78]
  40f40e:	sbb    eax,0x4171a4c4
  40f413:	dec    ebx
  40f414:	mov    cl,0x57
  40f416:	sub    edx,ebp
  40f418:	cmp    al,0xa2
  40f41a:	and    eax,0x6cf1ea05
  40f41f:	pop    edx
  40f420:	popf   
  40f421:	dec    eax
  40f422:	out    0x5f,eax
  40f424:	cmp    BYTE PTR [ecx],0xd5
  40f427:	aam    0xb6
  40f429:	icebp  
  40f42a:	dec    ecx
  40f42b:	and    dl,BYTE PTR [eax+0x79]
  40f42e:	inc    esi
  40f42f:	push   ebp
  40f430:	int3   
  40f431:	int3   
  40f432:	and    edi,DWORD PTR [ecx+0x4d]
  40f435:	sub    bl,BYTE PTR [edx]
  40f437:	js     0x40f440
  40f439:	sbb    ch,dh
  40f43b:	push   ecx
  40f43c:	lds    ecx,FWORD PTR [edx+0x680edc99]
  40f442:	and    eax,0x496fda7b
  40f447:	(bad)  
  40f449:	cmc    
  40f44a:	retf   0xc107
  40f44d:	in     eax,0xdf
  40f44f:	dec    edx
  40f450:	stos   DWORD PTR es:[edi],eax
  40f451:	push   0xc3bb3907
  40f456:	jmp    0x5c86:0x8f30868b
  40f45d:	inc    edx
  40f45e:	jmp    0x3379:0xa4d1fc07
  40f465:	inc    ecx
  40f466:	jbe    0x40f44b
  40f468:	pop    edi
  40f469:	loop   0x40f44d
  40f46b:	or     DWORD PTR [edx],esp
  40f46d:	(bad)  
  40f46f:	push   esp
  40f470:	xor    esp,DWORD PTR [edx-0x4f]
  40f473:	cld    
  40f474:	xor    al,0xd1
  40f476:	lahf   
  40f477:	fild   DWORD PTR [ebx+0x41]
  40f47a:	(bad)  [edx-0x521210a5]
  40f480:	ret    
  40f481:	xor    eax,0xb1931f88
  40f486:	dec    ebx
  40f487:	inc    esi
  40f488:	jge    0x40f48c
  40f48a:	or     eax,0x5113483a
  40f48f:	stc    
  40f490:	shl    DWORD PTR [ebp-0x4416c01],0x27
  40f497:	push   es
  40f498:	mov    edx,0xf735272b
  40f49d:	add    eax,0x42059217
  40f4a2:	fsub   QWORD PTR [ecx]
  40f4a4:	mov    dh,0x2
  40f4a6:	pop    ebx
  40f4a7:	pop    esi
  40f4a8:	sbb    eax,0x8906aeef
  40f4ad:	mov    al,cs:0x3472816d
  40f4b3:	sub    eax,0x51a3c591
  40f4b8:	sub    edx,DWORD PTR [esp+eiz*8-0x2b]
  40f4bc:	pusha  
  40f4bd:	in     eax,0xa4
  40f4bf:	or     al,0x79
  40f4c1:	xor    eax,0x897a9ed7
  40f4c6:	shl    BYTE PTR [edi+eiz*4],0x96
  40f4ca:	or     DWORD PTR [ecx],edi
  40f4cc:	add    ebp,edx
  40f4ce:	jge    0x40f53e
  40f4d0:	pop    ecx
  40f4d1:	retf   
  40f4d2:	add    edx,edx
  40f4d4:	fs je  0x40f4d5
  40f4d7:	fistp  QWORD PTR [ebx+ebp*2]
  40f4da:	(bad)  
  40f4db:	and    bl,BYTE PTR [esi]
  40f4dd:	add    DWORD PTR [edi],ebx
  40f4df:	adc    edx,DWORD PTR [edx]
  40f4e1:	pop    ecx
  40f4e2:	xchg   esi,eax
  40f4e3:	in     eax,dx
  40f4e4:	popf   
  40f4e5:	pop    esi
  40f4e6:	cwde   
  40f4e7:	fadd   st,st(3)
  40f4e9:	dec    ebp
  40f4ea:	jno    0x40f4d1
  40f4ec:	scas   eax,DWORD PTR es:[edi]
  40f4ed:	aad    0x26
  40f4ef:	mov    al,ds:0x336a6bda
  40f4f4:	sbb    BYTE PTR [ecx-0x5de98813],ch
  40f4fa:	arpl   WORD PTR [esi],ax
  40f4fc:	(bad)  
  40f4fe:	inc    edi
  40f4ff:	mov    ecx,0x6d9eca43
  40f504:	imul   esp,DWORD PTR ds:0x7d13f8e0,0x92dffb3a
  40f50e:	add    BYTE PTR [ecx],dh
  40f510:	jecxz  0x40f51c
  40f512:	mov    esp,0xca18632a
  40f517:	(bad)  
  40f518:	pop    ecx
  40f519:	pop    ss
  40f51a:	dec    esi
  40f51b:	test   eax,0x79f912cc
  40f520:	mov    cl,0xaa
  40f522:	add    eax,0xacd7a16a
  40f527:	test   al,0xf6
  40f529:	cmp    bl,BYTE PTR [eax+0x5b]
  40f52c:	(bad)  
  40f52d:	pop    esp
  40f52e:	mov    WORD PTR [ebx-0x60],fs
  40f531:	les    esi,FWORD PTR [esi-0x7d9f44c4]
  40f537:	bound  ebx,QWORD PTR [esi+0x3c8d09f9]
  40f53d:	xchg   ecx,eax
  40f53e:	add    eax,DWORD PTR [ecx]
  40f540:	rcr    cl,1
  40f542:	dec    ebx
  40f543:	out    dx,eax
  40f544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f545:	cmp    eax,0xc7887f6f
  40f54a:	jl     0x40f5aa
  40f54c:	int    0x51
  40f54e:	mov    bh,0x80
  40f550:	inc    edi
  40f551:	std    
  40f552:	nop
  40f553:	xor    dl,BYTE PTR [edi+0x1c]
  40f556:	out    dx,al
  40f557:	push   eax
  40f558:	xlat   BYTE PTR ds:[ebx]
  40f559:	mov    edi,0xd7b62128
  40f55e:	and    al,0x5a
  40f560:	(bad)  
  40f562:	cmp    eax,0xcae428db
  40f567:	xchg   esi,eax
  40f568:	mov    al,ds:0xc5db3636
  40f56d:	xchg   edx,eax
  40f56e:	add    bh,BYTE PTR [ecx-0x4e8549fd]
  40f574:	mov    BYTE PTR ss:[edi-0x2b6963df],dl
  40f57b:	(bad)  
  40f57c:	mov    edi,0xf388f854
  40f581:	fld    st(1)
  40f583:	nop
  40f584:	neg    BYTE PTR [ebp-0x7c]
  40f587:	xchg   edx,eax
  40f588:	cmp    al,0x4a
  40f58a:	and    edx,ebp
  40f58c:	mov    bh,0x2d
  40f58e:	mov    ds:0x5c236bb2,al
  40f593:	mov    eax,ds:0x94887425
  40f598:	pop    ebp
  40f599:	das    
  40f59a:	jbe    0x40f598
  40f59c:	(bad)  
  40f59d:	jmp    FWORD PTR [ecx+0x5c433c68]
  40f5a3:	and    ah,BYTE PTR [edi+0x6c]
  40f5a6:	icebp  
  40f5a7:	enter  0x9c27,0x9b
  40f5ab:	dec    ebp
  40f5ac:	gs retf 
  40f5ae:	fistp  DWORD PTR [edi]
  40f5b0:	data16 (bad) 
  40f5b2:	adc    ebp,DWORD PTR [edi-0x3ae1c393]
  40f5b8:	shl    BYTE PTR [ebx],cl
  40f5ba:	and    ebp,esp
  40f5bc:	clc    
  40f5bd:	mov    ds:0xe0e3a7bd,al
  40f5c2:	jl     0x40f629
  40f5c4:	rcl    DWORD PTR [eax+ebp*8-0x290909d9],0x71
  40f5cc:	(bad)  
  40f5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ce:	sub    DWORD PTR [ecx+0x473befd0],esp
  40f5d4:	sbb    BYTE PTR ds:0xbf7b960a,0x55
  40f5db:	mov    ch,0x54
  40f5dd:	fist   DWORD PTR [edx+0x6b]
  40f5e0:	and    DWORD PTR [ebx+0x2d9fca7b],ebp
  40f5e6:	cld    
  40f5e7:	ror    BYTE PTR [ebp+0x22d14a6],cl
  40f5ed:	ins    DWORD PTR es:[edi],dx
  40f5ee:	mov    al,BYTE PTR [edi-0x5e]
  40f5f1:	in     al,dx
  40f5f2:	hlt    
  40f5f3:	nop
  40f5f4:	cs jge 0x40f666
  40f5f7:	sar    BYTE PTR [ebx],0xe1
  40f5fa:	adc    edi,DWORD PTR [edi]
  40f5fc:	sub    al,0x51
  40f5fe:	mov    ah,0xdc
  40f600:	xor    DWORD PTR [eax],edi
  40f602:	into   
  40f603:	pushf  
  40f604:	lods   al,BYTE PTR ds:[esi]
  40f605:	pushf  
  40f606:	jo     0x40f58f
  40f608:	in     eax,0x6c
  40f60a:	xlat   BYTE PTR ds:[ebx]
  40f60b:	inc    esi
  40f60c:	mov    ds:0xa1e46fdc,eax
  40f611:	repnz cmp eax,0x18
  40f615:	out    0xfe,eax
  40f617:	sar    DWORD PTR [edi-0x33],1
  40f61a:	and    DWORD PTR [ebp+0x663c3d2],esp
  40f620:	pop    edi
  40f621:	inc    eax
  40f622:	mov    al,0x94
  40f624:	loop   0x40f5a6
  40f626:	push   esp
  40f627:	mov    DWORD PTR [eax+0x4bd32c10],edx
  40f62d:	push   es
  40f62e:	xchg   ebp,eax
  40f62f:	push   es
  40f630:	sbb    eax,0x679c464c
  40f635:	mov    BYTE PTR [edi],bh
  40f637:	jne    0x40f5e8
  40f639:	fwait
  40f63a:	test   BYTE PTR [eax],cl
  40f63c:	pop    esp
  40f63d:	jmp    0x40f628
  40f63f:	mov    bl,0x6c
  40f641:	cld    
  40f642:	lods   al,BYTE PTR ds:[esi]
  40f643:	jge    0x40f6b7
  40f645:	cld    
  40f646:	gs or  al,0xb2
  40f649:	rcr    DWORD PTR [eax-0x3b0b76ee],cl
  40f64f:	sub    DWORD PTR [ebx-0x4b8c09ae],0xffffffba
  40f656:	push   esi
  40f657:	jb     0x40f651
  40f659:	scas   eax,DWORD PTR es:[edi]
  40f65a:	xchg   esi,eax
  40f65b:	mov    ah,0xaa
  40f65d:	sbb    al,0x42
  40f65f:	ds mov esi,0xc02853c8
  40f665:	mov    ecx,0xc23bd87c
  40f66a:	aad    0x6
  40f66c:	push   ss
  40f66d:	lds    edx,FWORD PTR [edx]
  40f66f:	lahf   
  40f670:	popw   ss
  40f672:	mov    ds:0x9ddd73d0,eax
  40f677:	sub    DWORD PTR [ebx+0x22],ebp
  40f67a:	mov    edi,cs
  40f67c:	inc    edi
  40f67d:	push   ebx
  40f67e:	pop    edi
  40f67f:	test   eax,0x59575c13
  40f684:	jns    0x40f6f0
  40f686:	nop    DWORD PTR [ebp+0x12]
  40f68a:	dec    ebp
  40f68b:	mov    ecx,0xae3d18ed
  40f690:	mov    bl,0x37
  40f692:	repz jns 0x40f6d8
  40f695:	or     eax,0x3eaec7f3
  40f69a:	mov    ch,0x96
  40f69c:	scas   al,BYTE PTR es:[di]
  40f69e:	mov    ah,0x5b
  40f6a0:	int    0x69
  40f6a2:	scas   al,BYTE PTR es:[edi]
  40f6a3:	sub    eax,0x23db2975
  40f6a8:	dec    esp
  40f6a9:	out    0x4a,eax
  40f6ab:	lea    ebx,[esi+0x57a381fc]
  40f6b1:	rol    BYTE PTR [ebx-0x2c5714cd],1
  40f6b7:	xchg   DWORD PTR [eax+0x65],esi
  40f6ba:	jg     0x40f6fd
  40f6bc:	mov    eax,0xa90909af
  40f6c1:	add    dh,bh
  40f6c3:	pop    ds
  40f6c4:	loopne 0x40f733
  40f6c6:	rol    DWORD PTR [ebx],cl
  40f6c8:	pop    es
  40f6c9:	jmp    0x40f6b1
  40f6cb:	xor    al,0xeb
  40f6cd:	jne    0x40f72a
  40f6cf:	mov    dh,0x81
  40f6d1:	scas   al,BYTE PTR es:[edi]
  40f6d2:	sar    ebx,cl
  40f6d4:	sub    bl,BYTE PTR [ebp+0x20]
  40f6d7:	fwait
  40f6d8:	fwait
  40f6d9:	adc    ecx,ebx
  40f6db:	ret    
  40f6dc:	rol    BYTE PTR [esi-0xd6fdc32],cl
  40f6e2:	pop    es
  40f6e3:	in     eax,dx
  40f6e4:	push   es
  40f6e5:	mov    dh,0x2f
  40f6e7:	rcl    ah,1
  40f6e9:	in     eax,0x50
  40f6eb:	cmp    DWORD PTR [esi],ebp
  40f6ed:	jne    0x40f67a
  40f6ef:	add    eax,0x6b51614b
  40f6f4:	and    ah,bh
  40f6f6:	clc    
  40f6f7:	cmp    al,0x38
  40f6f9:	xor    BYTE PTR [eax-0x45],al
  40f6fc:	stos   DWORD PTR es:[edi],eax
  40f6fd:	add    DWORD PTR [ecx+0x9],esi
  40f700:	push   eax
  40f701:	xchg   edi,eax
  40f702:	sbb    esi,DWORD PTR [ecx-0x3e]
  40f705:	adc    edx,edi
  40f707:	sub    al,0x92
  40f709:	dec    ecx
  40f70a:	nop    ebx
  40f70d:	int3   
  40f70e:	shl    BYTE PTR [ebp+0x61],1
  40f711:	stc    
  40f712:	ffree  st(0)
  40f714:	sbb    al,0xff
  40f716:	cmp    ah,BYTE PTR [edi-0x23]
  40f719:	dec    esi
  40f71a:	aam    0x69
  40f71c:	fisub  DWORD PTR [ebx+0x3]
  40f71f:	xor    DWORD PTR [edi-0x7660f73f],ebp
  40f725:	xlat   BYTE PTR ds:[ebx]
  40f726:	cmc    
  40f727:	mov    cl,0x1a
  40f729:	push   esp
  40f72a:	ss jns 0x40f739
  40f72d:	mov    ebx,0x3ec76890
  40f732:	iret   
  40f733:	inc    esp
  40f734:	aas    
  40f735:	mov    dl,0xba
  40f737:	(bad)  
  40f738:	int3   
  40f739:	and    al,0xaf
  40f73b:	xchg   esp,eax
  40f73c:	xchg   edx,eax
  40f73d:	xor    al,bl
  40f73f:	je     0x40f77b
  40f741:	cs dec eax
  40f743:	mov    dh,0xa5
  40f745:	test   al,0xaf
  40f747:	cmp    BYTE PTR [ecx-0x788f4523],ch
  40f74d:	dec    ecx
  40f74e:	cwde   
  40f74f:	call   0x3350:0x92e0037f
  40f756:	fisttp DWORD PTR [ebx+0x3434ad4]
  40f75c:	sbb    al,0x1a
  40f75e:	dec    ebx
  40f75f:	xor    edx,edx
  40f761:	add    DWORD PTR [ebp-0x10],ebx
  40f764:	pop    ebx
  40f765:	mov    eax,DWORD PTR [ebp-0x10]
  40f768:	pop    edi
  40f769:	pop    esi
  40f76a:	pop    ebx
  40f76b:	leave  
  40f76c:	ret    0x10
  40f76f:	push   ebp
  40f770:	mov    ebp,esp
  40f772:	push   ecx
  40f773:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40f77a:	mov    ecx,DWORD PTR ds:0x42b26e
  40f780:	mov    edx,DWORD PTR ds:0x42b2da
  40f786:	sub    edx,ecx
  40f788:	xor    ecx,DWORD PTR [ecx+edx*1]
  40f78b:	mov    eax,DWORD PTR [ebp-0x4]
  40f78e:	and    DWORD PTR ds:0x42b226,0x0
  40f798:	mov    edx,DWORD PTR ds:0x42b226
  40f79e:	inc    edx
  40f79f:	mov    DWORD PTR ds:0x42b226,edx
  40f7a5:	cmp    DWORD PTR ds:0x42b226,0xb
  40f7ac:	jb     0x40f7f2
  40f7b2:	jmp    0x40f7cb
  40f7b7:	push   DWORD PTR [ebp-0x24]
  40f7ba:	push   DWORD PTR [ebp-0x24]
  40f7bd:	push   0x42a23f
  40f7c2:	push   DWORD PTR [ebp-0x1c]
  40f7c5:	call   DWORD PTR ds:0x42b306
  40f7cb:	cmp    DWORD PTR ds:0x42b226,0xa
  40f7d2:	jne    0x40f7e5
  40f7d8:	mov    edx,DWORD PTR ds:0x42b226
  40f7de:	inc    edx
  40f7df:	mov    DWORD PTR ds:0x42b226,edx
  40f7e5:	cmp    DWORD PTR ds:0x42b226,0x17
  40f7ec:	jb     0x40f798
  40f7f2:	mov    edx,DWORD PTR [ebp+0x10]
  40f7f5:	mov    ecx,0x75108ae
  40f7fa:	add    DWORD PTR ds:0x42b1ea,0x1734
  40f804:	xor    eax,ecx
  40f806:	add    eax,0x3272f5
  40f80b:	mov    DWORD PTR [edx],eax
  40f80d:	mov    eax,DWORD PTR [ebp+0xc]
  40f810:	xor    eax,ecx
  40f812:	push   esi
  40f813:	mov    esi,DWORD PTR [ebp+0x10]
  40f816:	mov    edx,0x3272f5
  40f81b:	add    eax,edx
  40f81d:	mov    DWORD PTR [esi+0x4],eax
  40f820:	mov    eax,DWORD PTR [ebp+0x14]
  40f823:	mov    esi,DWORD PTR [ebp+0x10]
  40f826:	mov    DWORD PTR [esi+0x8],eax
  40f829:	mov    eax,DWORD PTR [ebp+0x18]
  40f82c:	mov    esi,DWORD PTR [ebp+0x10]
  40f82f:	mov    DWORD PTR [esi+0xc],eax
  40f832:	mov    eax,DWORD PTR [ebp+0x1c]
  40f835:	mov    esi,DWORD PTR [ebp+0x10]
  40f838:	mov    DWORD PTR [esi+0x10],eax
  40f83b:	mov    eax,DWORD PTR [ebp+0x8]
  40f83e:	xor    eax,ecx
  40f840:	add    eax,edx
  40f842:	pop    esi
  40f843:	leave  
  40f844:	ret    0x18
  40f847:	push   ebp
  40f848:	mov    ebp,esp
  40f84a:	sub    esp,0x9c
  40f850:	and    DWORD PTR ds:0x42b1b6,0x0
  40f85a:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f860:	inc    ecx
  40f861:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f867:	cmp    DWORD PTR ds:0x42b1b6,0xd
  40f86e:	ja     0x40f8b2
  40f874:	jmp    0x40f88b
  40f879:	push   0x42a1d7
  40f87e:	push   0x0
  40f880:	push   0x7b23
  40f885:	call   DWORD PTR ds:0x42b30e
  40f88b:	cmp    DWORD PTR ds:0x42b1b6,0xc
  40f892:	jne    0x40f8a5
  40f898:	mov    ecx,DWORD PTR ds:0x42b1b6
  40f89e:	inc    ecx
  40f89f:	mov    DWORD PTR ds:0x42b1b6,ecx
  40f8a5:	cmp    DWORD PTR ds:0x42b1b6,0x14
  40f8ac:	jb     0x40f85a
  40f8b2:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8b5:	xor    eax,DWORD PTR ds:0x42b1a6
  40f8bb:	mov    eax,0x8a9a
  40f8c0:	xor    ax,WORD PTR [ecx+0x20]
  40f8c4:	xor    DWORD PTR ds:0x42b1d6,ebx
  40f8ca:	mov    ecx,0x3b5c
  40f8cf:	adc    DWORD PTR ds:0x42b206,0x42b22e
  40f8d9:	add    ax,cx
  40f8dc:	and    DWORD PTR ds:0x42b1ba,0x0
  40f8e6:	mov    ecx,DWORD PTR ds:0x42b1ba
  40f8ec:	inc    ecx
  40f8ed:	mov    DWORD PTR ds:0x42b1ba,ecx
  40f8f3:	cmp    DWORD PTR ds:0x42b1ba,0x1e
  40f8fa:	jge    0x40f91b
  40f900:	jmp    0x40f90e
  40f905:	push   DWORD PTR [ebp-0x20]
  40f908:	call   DWORD PTR ds:0x42b316
  40f90e:	cmp    DWORD PTR ds:0x42b1ba,0x19
  40f915:	jb     0x40f8e6
  40f91b:	movzx  eax,ax
  40f91e:	or     ecx,DWORD PTR ds:0x42b1fa
  40f924:	mov    DWORD PTR [ebp-0x10],eax
  40f927:	and    DWORD PTR ds:0x42b1a2,0x5305
  40f931:	mov    BYTE PTR [ebp-0x1],0x80
  40f935:	mov    ecx,DWORD PTR ds:0x42b22a
  40f93b:	sub    DWORD PTR ds:0x42b1f6,ecx
  40f941:	lea    eax,[ebp-0x1]
  40f944:	mov    DWORD PTR ds:0x42b21e,0x14
  40f94e:	cmp    DWORD PTR ds:0x42b21e,0x0
  40f955:	je     0x40f9a6
  40f95b:	cmp    DWORD PTR ds:0x42b21e,0x4
  40f962:	ja     0x40f9a6
  40f968:	jmp    0x40f97a
  40f96d:	push   0x5
  40f96f:	push   0x6029
  40f974:	call   DWORD PTR ds:0x42b31a
  40f97a:	cmp    DWORD PTR ds:0x42b21e,0x5
  40f981:	jne    0x40f994
  40f987:	mov    ecx,DWORD PTR ds:0x42b21e
  40f98d:	dec    ecx
  40f98e:	mov    DWORD PTR ds:0x42b21e,ecx
  40f994:	mov    ecx,DWORD PTR ds:0x42b21e
  40f99a:	dec    ecx
  40f99b:	mov    DWORD PTR ds:0x42b21e,ecx
  40f9a1:	jmp    0x40f94e
  40f9a6:	mov    DWORD PTR [ebp-0xc],eax
  40f9a9:	or     ecx,DWORD PTR ds:0x42b212
  40f9af:	mov    al,BYTE PTR [ebp-0x1]
  40f9b2:	xor    DWORD PTR ds:0x42b226,0x485
  40f9bc:	mov    ecx,DWORD PTR [ebp-0xc]
  40f9bf:	xor    al,0x7e
  40f9c1:	add    al,0x3
  40f9c3:	and    DWORD PTR ds:0x42b20a,0x20b6
  40f9cd:	mov    BYTE PTR [ecx],al
  40f9cf:	sbb    ecx,0x5f8e
  40f9d5:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  40f9dc:	push   ebx
  40f9dd:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  40f9e4:	and    DWORD PTR ds:0x42b1da,0x0
  40f9ee:	jmp    0x40f9fe
  40f9f3:	mov    eax,ds:0x42b1da
  40f9f8:	inc    eax
  40f9f9:	mov    ds:0x42b1da,eax
  40f9fe:	cmp    DWORD PTR ds:0x42b1da,0x14
  40fa05:	jae    0x40fa55
  40fa0b:	cmp    DWORD PTR ds:0x42b1da,0xb
  40fa12:	jbe    0x40fa55
  40fa18:	jmp    0x40fa35
  40fa1d:	push   0x42b1f2
  40fa22:	push   DWORD PTR [ebp-0xc]
  40fa25:	push   0x42a000
  40fa2a:	push   0x42a18d
  40fa2f:	call   DWORD PTR ds:0x42b31e
  40fa35:	cmp    DWORD PTR ds:0x42b1da,0xa
  40fa3c:	jne    0x40fa50
  40fa42:	xor    eax,eax
  40fa44:	xor    eax,DWORD PTR ds:0x42b1da
  40fa4a:	inc    eax
  40fa4b:	mov    ds:0x42b1da,eax
  40fa50:	jmp    0x40f9f3
  40fa55:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa58:	sub    DWORD PTR ds:0x42b1fa,0x685a
  40fa62:	push   esi
  40fa63:	dec    esi
  40fa64:	mov    eax,0x75108ae
  40fa69:	and    DWORD PTR ds:0x42b1b2,0x4a0b
  40fa73:	xor    ecx,eax
  40fa75:	or     DWORD PTR ds:0x42b212,ebx
  40fa7b:	mov    esi,0x3272f5
  40fa80:	adc    DWORD PTR ds:0x42b216,0x42b222
  40fa8a:	push   edi
  40fa8b:	and    DWORD PTR ds:0x42b19a,0x42b1a2
  40fa95:	add    ecx,esi
  40fa97:	mov    DWORD PTR ds:0x42b212,0x27f7
  40faa1:	jmp    0x40facf
  40faa6:	mov    DWORD PTR ds:0x42b1a2,0x4c70
  40fab0:	mov    dl,BYTE PTR [ebp-0x1]
  40fab3:	mov    DWORD PTR ds:0x42b1da,0x7ef5
  40fabd:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40fac4:	mov    DWORD PTR ds:0x42b21a,0x736d
  40face:	inc    ecx
  40facf:	mov    DWORD PTR ds:0x42b1b2,0x61ef
  40fad9:	cmp    ecx,0x40
  40fadc:	jb     0x40faa6
  40fae2:	sbb    edx,DWORD PTR ds:0x42b1de
  40fae8:	mov    edx,DWORD PTR [ebp-0x18]
  40faeb:	adc    DWORD PTR ds:0x42b18e,0x3f3e
  40faf5:	xor    edx,eax
  40faf7:	sub    DWORD PTR ds:0x42b1d2,0x42b1ce
  40fb01:	add    edx,esi
  40fb03:	jmp    0x40fbc0
  40fb08:	mov    edi,DWORD PTR [ebp+0x8]
  40fb0b:	mov    ecx,0x8a9a
  40fb10:	sbb    DWORD PTR ds:0x42b1e6,0x42b226
  40fb1a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40fb1f:	adc    DWORD PTR ds:0x42b1de,ecx
  40fb25:	mov    edi,0x3b5c
  40fb2a:	xor    DWORD PTR ds:0x42b1ca,0x42b1a2
  40fb34:	add    cx,di
  40fb37:	adc    DWORD PTR ds:0x42b1b6,0x7f83
  40fb41:	movzx  ecx,cx
  40fb44:	and    DWORD PTR ds:0x42b1f6,0x42b18a
  40fb4e:	mov    DWORD PTR [ebp-0xc],ecx
  40fb51:	and    DWORD PTR ds:0x42b21a,0x0
  40fb5b:	jmp    0x40fb6d
  40fb60:	mov    ecx,DWORD PTR ds:0x42b21a
  40fb66:	inc    ecx
  40fb67:	mov    DWORD PTR ds:0x42b21a,ecx
  40fb6d:	cmp    DWORD PTR ds:0x42b21a,0x19
  40fb74:	jae    0x40fb9c
  40fb7a:	cmp    DWORD PTR ds:0x42b21a,0x1e
  40fb81:	jge    0x40fb9c
  40fb87:	jmp    0x40fb97
  40fb8c:	push   0x1c76
  40fb91:	call   DWORD PTR ds:0x42b322
  40fb97:	jmp    0x40fb60
  40fb9c:	mov    ecx,DWORD PTR [ebp+0x8]
  40fb9f:	add    DWORD PTR ds:0x42b1d2,0x42b1ea
  40fba9:	movzx  ecx,WORD PTR [ecx+edx*4]
  40fbad:	xor    ecx,0x8a9a
  40fbb3:	add    ecx,edi
  40fbb5:	mov    edi,DWORD PTR [ebp-0xc]
  40fbb8:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fbbf:	inc    edx
  40fbc0:	mov    ecx,0xfa9
  40fbc5:	mov    ecx,DWORD PTR [ebp-0x10]
  40fbc8:	cmp    edx,ecx
  40fbca:	jne    0x40fb08
  40fbd0:	mov    DWORD PTR ds:0x42b186,0x1e
  40fbda:	cmp    DWORD PTR ds:0x42b186,0x0
  40fbe1:	je     0x40fc18
  40fbe7:	cmp    DWORD PTR ds:0x42b186,0x24
  40fbee:	jle    0x40fc18
  40fbf4:	jmp    0x40fc04
  40fbf9:	push   0x7864
  40fbfe:	call   DWORD PTR ds:0x42b326
  40fc04:	xor    ecx,ecx
  40fc06:	add    ecx,DWORD PTR ds:0x42b186
  40fc0c:	dec    ecx
  40fc0d:	mov    DWORD PTR ds:0x42b186,ecx
  40fc13:	jmp    0x40fbda
  40fc18:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc1b:	and    edi,edx
  40fc1d:	mov    edx,DWORD PTR [ebp+0x10]
  40fc20:	and    DWORD PTR ds:0x42b19a,0x0
  40fc2a:	mov    edi,DWORD PTR ds:0x42b19a
  40fc30:	inc    edi
  40fc31:	mov    DWORD PTR ds:0x42b19a,edi
  40fc37:	cmp    DWORD PTR ds:0x42b19a,0x25
  40fc3e:	jge    0x40fc76
  40fc44:	jmp    0x40fc69
  40fc49:	push   0x42a0fe
  40fc4e:	push   0x5d6f
  40fc53:	push   0x13cc
  40fc58:	push   DWORD PTR [ebp-0x1c]
  40fc5b:	push   0x3c54
  40fc60:	push   DWORD PTR [ebp-0x20]
  40fc63:	call   DWORD PTR ds:0x42b2ea
  40fc69:	cmp    DWORD PTR ds:0x42b19a,0x1d
  40fc70:	jb     0x40fc2a
  40fc76:	xor    ecx,eax
  40fc78:	inc    edi
  40fc79:	add    ecx,esi
  40fc7b:	and    DWORD PTR ds:0x42b1b6,0x0
  40fc85:	jmp    0x40fc97
  40fc8a:	mov    edi,DWORD PTR ds:0x42b1b6
  40fc90:	inc    edi
  40fc91:	mov    DWORD PTR ds:0x42b1b6,edi
  40fc97:	cmp    DWORD PTR ds:0x42b1b6,0x10
  40fc9e:	jae    0x40fcea
  40fca4:	cmp    DWORD PTR ds:0x42b1b6,0x6
  40fcab:	jl     0x40fcea
  40fcb1:	jmp    0x40fcc9
  40fcb6:	push   0x42a0fe
  40fcbb:	push   DWORD PTR [ebp-0x14]
  40fcbe:	push   0x1
  40fcc0:	push   DWORD PTR [ebp-0x1c]
  40fcc3:	call   DWORD PTR ds:0x42b2ee
  40fcc9:	cmp    DWORD PTR ds:0x42b1b6,0x5
  40fcd0:	jne    0x40fce5
  40fcd6:	xor    edi,edi
  40fcd8:	xor    edi,DWORD PTR ds:0x42b1b6
  40fcde:	inc    edi
  40fcdf:	mov    DWORD PTR ds:0x42b1b6,edi
  40fce5:	jmp    0x40fc8a
  40fcea:	mov    DWORD PTR [edx],ecx
  40fcec:	xor    ecx,ecx
  40fcee:	mov    ecx,DWORD PTR [ebp-0x18]
  40fcf1:	and    DWORD PTR ds:0x42b1e2,0x0
  40fcfb:	xor    edi,edi
  40fcfd:	xor    edi,DWORD PTR ds:0x42b1e2
  40fd03:	inc    edi
  40fd04:	mov    DWORD PTR ds:0x42b1e2,edi
  40fd0a:	cmp    DWORD PTR ds:0x42b1e2,0x29
  40fd11:	ja     0x40fd32
  40fd17:	jmp    0x40fd25
  40fd1c:	push   DWORD PTR [ebp-0x14]
  40fd1f:	call   DWORD PTR ds:0x42b2f2
  40fd25:	cmp    DWORD PTR ds:0x42b1e2,0x19
  40fd2c:	jb     0x40fcfb
  40fd32:	xor    ecx,eax
  40fd34:	and    edi,0x72ff
  40fd3a:	add    ecx,esi
  40fd3c:	or     DWORD PTR ds:0x42b182,0x54fc
  40fd46:	mov    DWORD PTR [ebp-0xc],ecx
  40fd49:	adc    edi,DWORD PTR ds:0x42b1e6
  40fd4f:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  40fd56:	or     edi,DWORD PTR ds:0x42b226
  40fd5c:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40fd63:	and    DWORD PTR ds:0x42b1ba,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ecx,DWORD PTR ds:0x42b1ba
  40fd78:	inc    ecx
  40fd79:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fd7f:	cmp    DWORD PTR ds:0x42b1ba,0x12
  40fd86:	jae    0x40fdca
  40fd8c:	cmp    DWORD PTR ds:0x42b1ba,0x4
  40fd93:	jle    0x40fdca
  40fd99:	jmp    0x40fda9
  40fd9e:	push   0x42b226
  40fda3:	call   DWORD PTR ds:0x42b2f6
  40fda9:	cmp    DWORD PTR ds:0x42b1ba,0x3
  40fdb0:	jne    0x40fdc5
  40fdb6:	xor    ecx,ecx
  40fdb8:	xor    ecx,DWORD PTR ds:0x42b1ba
  40fdbe:	inc    ecx
  40fdbf:	mov    DWORD PTR ds:0x42b1ba,ecx
  40fdc5:	jmp    0x40fd72
  40fdca:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  40fdd1:	mov    ecx,DWORD PTR [ebp-0x14]
  40fdd4:	mov    DWORD PTR [ebp+0x8],ecx
  40fdd7:	mov    ecx,DWORD PTR [ebp+0x8]
  40fdda:	xor    DWORD PTR ds:0x42b20a,edi
  40fde0:	xor    ecx,eax
  40fde2:	or     edi,DWORD PTR ds:0x42b182
  40fde8:	add    ecx,esi
  40fdea:	mov    ecx,0x242ebf1
  40fdef:	mov    edi,0xf641bf0
  40fdf4:	je     0x419191
  40fdfa:	add    DWORD PTR ds:0x42b1c2,0x6a2f
  40fe04:	mov    edx,DWORD PTR [ebp+0x8]
  40fe07:	mov    ebx,DWORD PTR ds:0x42b1aa
  40fe0d:	and    ebx,DWORD PTR ds:0x42b1f2
  40fe13:	mov    DWORD PTR ds:0x42b1aa,ebx
  40fe19:	mov    ebx,DWORD PTR [ebp-0x8]
  40fe1c:	xor    edx,eax
  40fe1e:	xor    ebx,eax
  40fe20:	xor    DWORD PTR ds:0x42b1e6,0x42b196
  40fe2a:	sub    edx,ebx
  40fe2c:	sub    edx,esi
  40fe2e:	mov    DWORD PTR ds:0x42b1ce,0x13
  40fe38:	cmp    DWORD PTR ds:0x42b1ce,0x0
  40fe3f:	je     0x40fe81
  40fe45:	cmp    DWORD PTR ds:0x42b1ce,0x1c
  40fe4c:	jb     0x40fe81
  40fe52:	jmp    0x40fe6f
  40fe57:	push   0x42b1ca
  40fe5c:	push   0x42b196
  40fe61:	push   DWORD PTR [ebp-0x1c]
  40fe64:	push   0x42a12c
  40fe69:	call   DWORD PTR ds:0x42b2fa
  40fe6f:	mov    ebx,DWORD PTR ds:0x42b1ce
  40fe75:	dec    ebx
  40fe76:	mov    DWORD PTR ds:0x42b1ce,ebx
  40fe7c:	jmp    0x40fe38
  40fe81:	xor    edx,eax
  40fe83:	and    DWORD PTR ds:0x42b196,0x0
  40fe8d:	jmp    0x40fe9f
  40fe92:	mov    ebx,DWORD PTR ds:0x42b196
  40fe98:	inc    ebx
  40fe99:	mov    DWORD PTR ds:0x42b196,ebx
  40fe9f:	cmp    DWORD PTR ds:0x42b196,0x1b
  40fea6:	jae    0x40feef
  40feac:	cmp    DWORD PTR ds:0x42b196,0x6
  40feb3:	jb     0x40feef
  40feb9:	jmp    0x40fece
  40febe:	push   0x42b226
  40fec3:	push   0x42a000
  40fec8:	call   DWORD PTR ds:0x42b2fe
  40fece:	cmp    DWORD PTR ds:0x42b196,0x5
  40fed5:	jne    0x40feea
  40fedb:	xor    ebx,ebx
  40fedd:	add    ebx,DWORD PTR ds:0x42b196
  40fee3:	inc    ebx
  40fee4:	mov    DWORD PTR ds:0x42b196,ebx
  40feea:	jmp    0x40fe92
  40feef:	mov    DWORD PTR [ebp+0x8],edx
  40fef2:	and    DWORD PTR ds:0x42b196,0x0
  40fefc:	jmp    0x40ff10
  40ff01:	xor    ebx,ebx
  40ff03:	xor    ebx,DWORD PTR ds:0x42b196
  40ff09:	inc    ebx
  40ff0a:	mov    DWORD PTR ds:0x42b196,ebx
  40ff10:	cmp    DWORD PTR ds:0x42b196,0x15
  40ff17:	jae    0x40ff62
  40ff1d:	cmp    DWORD PTR ds:0x42b196,0x4
  40ff24:	jb     0x40ff62
  40ff2a:	jmp    0x40ff43
  40ff2f:	push   DWORD PTR [ebp-0xc]
  40ff32:	push   DWORD PTR [ebp-0x1c]
  40ff35:	push   0x42a1d7
  40ff3a:	push   DWORD PTR [ebp-0xc]
  40ff3d:	call   DWORD PTR ds:0x42b306
  40ff43:	cmp    DWORD PTR ds:0x42b196,0x3
  40ff4a:	jne    0x40ff5d
  40ff50:	mov    ebx,DWORD PTR ds:0x42b196
  40ff56:	inc    ebx
  40ff57:	mov    DWORD PTR ds:0x42b196,ebx
  40ff5d:	jmp    0x40ff01
  40ff62:	mov    edx,DWORD PTR [ebp+0x8]
  40ff65:	and    DWORD PTR ds:0x42b21a,0x0
  40ff6f:	jmp    0x40ff81
  40ff74:	mov    ebx,DWORD PTR ds:0x42b21a
  40ff7a:	inc    ebx
  40ff7b:	mov    DWORD PTR ds:0x42b21a,ebx
  40ff81:	cmp    DWORD PTR ds:0x42b21a,0x17
  40ff88:	jae    0x40ffd0
  40ff8e:	cmp    DWORD PTR ds:0x42b21a,0xe
  40ff95:	jb     0x40ffd0
  40ff9b:	jmp    0x40ffb1
  40ffa0:	push   0x42a23f
  40ffa5:	push   DWORD PTR [ebp-0x20]
  40ffa8:	push   DWORD PTR [ebp-0xc]
  40ffab:	call   DWORD PTR ds:0x42b30e
  40ffb1:	cmp    DWORD PTR ds:0x42b21a,0xd
  40ffb8:	jne    0x40ffcb
  40ffbe:	mov    ebx,DWORD PTR ds:0x42b21a
  40ffc4:	inc    ebx
  40ffc5:	mov    DWORD PTR ds:0x42b21a,ebx
  40ffcb:	jmp    0x40ff74
  40ffd0:	mov    ebx,DWORD PTR [ebp-0x58]
  40ffd3:	add    DWORD PTR ds:0x42b20e,0x42b1de
  40ffdd:	add    edx,0x5708e2
  40ffe3:	imul   edx,ebx
  40ffe6:	or     DWORD PTR ds:0x42b1b6,0x7440
  40fff0:	mov    DWORD PTR [ebp-0x58],edx
  40fff3:	sub    DWORD PTR ds:0x42b192,ecx
  40fff9:	jmp    0x412359
  40fffe:	add    al,0x23
  410000:	cld    
  410001:	shl    esp,1
  410003:	mov    al,BYTE PTR [edx]
  410005:	xchg   edx,eax
  410006:	(bad)  
  410009:	retf   0xe113
  41000c:	jmp    0x83f03fbf
  410011:	cmp    DWORD PTR [esi],0x5e
  410014:	add    DWORD PTR [ebx-0x1e07d676],0xa
  41001b:	xchg   DWORD PTR [edx-0x50603ba0],edx
  410021:	std    
  410022:	mul    ch
  410024:	(bad)  
  410025:	or     al,0x7c
  410027:	aaa    
  410028:	(bad)  
  410029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002a:	mov    eax,ds
  41002c:	mov    bl,0xcf
  41002e:	push   eax
  41002f:	jae    0x410065
  410031:	sub    ch,ah
  410033:	jmp    0xcf3e:0xff6d92cd
  41003a:	aas    
  41003b:	nop
  41003c:	shl    BYTE PTR [esi-0x1f1376c9],1
  410042:	sti    
  410043:	cdq    
  410044:	rcr    BYTE PTR [ebx+ecx*8+0x43],0x29
  410049:	fsub   QWORD PTR ds:0xd5bf027b
  41004f:	(bad)  [edi]
  410051:	jno    0x41006f
  410053:	daa    
  410054:	add    ebp,DWORD PTR [eax+ebx*8]
  410057:	jp     0x41008d
  410059:	inc    eax
  41005a:	rcl    DWORD PTR [edx-0x2a],1
  41005d:	js     0xb5458634
  410063:	push   edi
  410064:	call   0x8d2c:0x6119e711
  41006b:	dec    esp
  41006c:	dec    ecx
  41006d:	push   0xda4a28ef
  410072:	(bad)  
  410074:	add    cl,dh
  410076:	rol    BYTE PTR [ebp+0x44],1
  410079:	es inc esi
  41007b:	sub    eax,0x43e1d44d
  410080:	xchg   esi,eax
  410081:	pushf  
  410082:	ja     0x410015
  410084:	add    edx,edi
  410086:	push   cs
  410087:	mov    bl,0xc8
  410089:	push   eax
  41008a:	jno    0x410028
  41008c:	sub    DWORD PTR [edi],ecx
  41008e:	scas   eax,DWORD PTR es:[edi]
  41008f:	and    al,0xf
  410091:	cli    
  410092:	push   ebx
  410093:	sbb    eax,0x48a2e75e
  410098:	pop    ebp
  410099:	xor    ah,0xb6
  41009c:	dec    esi
  41009d:	nop
  41009e:	rcr    DWORD PTR [ebp-0xb66c263],0xd4
  4100a5:	out    dx,al
  4100a6:	sbb    DWORD PTR [eax],0xffffffd7
  4100a9:	or     al,0x51
  4100ab:	cmc    
  4100ac:	popf   
  4100ad:	add    al,0x97
  4100af:	(bad)  
  4100b0:	push   edx
  4100b1:	icebp  
  4100b2:	push   ds
  4100b3:	pop    esi
  4100b4:	outs   dx,BYTE PTR ds:[esi]
  4100b5:	cmp    dl,dl
  4100b7:	mov    ch,0xb0
  4100b9:	xor    BYTE PTR [edx],dh
  4100bb:	cmp    BYTE PTR [edi-0x24],al
  4100be:	stos   DWORD PTR es:[edi],eax
  4100bf:	aad    0xce
  4100c1:	xor    dl,al
  4100c3:	push   ebx
  4100c4:	mov    al,ds:0x4411987e
  4100c9:	or     al,0xb7
  4100cb:	jbe    0x41014b
  4100cd:	pop    ebp
  4100ce:	xor    eax,0x327cd9e0
  4100d3:	adc    esp,esi
  4100d5:	mov    esi,0x7a68c2a8
  4100da:	ins    DWORD PTR es:[edi],dx
  4100db:	test   eax,0xa3602361
  4100e0:	leave  
  4100e1:	clc    
  4100e2:	imul   edi,DWORD PTR [edx],0xffffffe9
  4100e5:	dec    ebx
  4100e6:	adc    ecx,edx
  4100e8:	ficom  DWORD PTR [ecx-0x70ce12a6]
  4100ee:	loopne 0x410154
  4100f0:	lods   al,BYTE PTR ds:[esi]
  4100f1:	adc    DWORD PTR [edi-0x1dd1fcb8],esp
  4100f7:	and    dl,bl
  4100f9:	mov    cl,0xd
  4100fb:	push   edx
  4100fc:	push   ebp
  4100fd:	xchg   ebp,eax
  4100fe:	add    ebx,DWORD PTR [edi+0x5ede7878]
  410104:	cli    
  410105:	pop    ebp
  410106:	or     cl,ch
  410108:	aaa    
  410109:	fucomip st,st(3)
  41010b:	cdq    
  41010c:	cmp    al,0xda
  41010e:	mov    ch,0x91
  410110:	ret    0x92cd
  410113:	push   es
  410114:	mov    WORD PTR [esi+0x4f],ds
  410117:	dec    eax
  410118:	inc    ebx
  410119:	cmp    al,0xbe
  41011b:	cld    
  41011c:	jne    0x41011d
  41011e:	ins    BYTE PTR es:[edi],dx
  41011f:	sbb    esi,DWORD PTR [ecx]
  410121:	ins    BYTE PTR es:[edi],dx
  410122:	push   ebx
  410123:	ds pushf 
  410125:	xchg   edi,esp
  410127:	mov    eax,ds:0x3d56f89a
  41012c:	jge    0x4100f0
  41012e:	aaa    
  41012f:	xor    dh,ch
  410131:	call   FWORD PTR [esi-0xd6747f0]
  410137:	mov    edx,ebp
  410139:	mov    ds:0x1bc4e5df,al
  41013e:	pop    edi
  41013f:	jge    0x4101a8
  410141:	lock lds ebx,FWORD PTR [ebp+0x5]
  410145:	mov    ds:0xc6fe1d5a,al
  41014a:	(bad)  
  41014b:	shl    BYTE PTR [eax+0x1d0a4c46],0x2c
  410152:	xor    dh,bl
  410154:	push   es
  410155:	cmp    al,0xf6
  410158:	enter  0x9ec2,0x68
  41015c:	sub    al,0x8c
  41015e:	add    DWORD PTR [ebx+0x62],esp
  410161:	(bad)  
  410162:	adc    eax,0xb696923b
  410167:	mov    cl,0xbc
  410169:	pop    ebp
  41016a:	fisub  WORD PTR [edi]
  41016c:	mov    dh,0xcd
  41016e:	sahf   
  41016f:	sub    al,0x7
  410171:	nop
  410172:	stc    
  410173:	imul   edi,DWORD PTR [edx-0x5],0xffffffbf
  410177:	cmp    eax,0x9ef95367
  41017c:	ins    BYTE PTR es:[edi],dx
  41017d:	mov    bl,0x66
  41017f:	in     eax,dx
  410180:	xchg   ebx,eax
  410181:	daa    
  410182:	repz inc ebp
  410184:	xor    ecx,edi
  410186:	dec    ebp
  410187:	xlat   BYTE PTR ds:[ebx]
  410188:	push   ebp
  410189:	test   DWORD PTR [edx-0x60ef38a3],edi
  41018f:	fcomp  DWORD PTR [ecx]
  410191:	lods   eax,DWORD PTR ds:[esi]
  410192:	xchg   edx,eax
  410193:	mov    edi,0x41f78262
  410198:	add    DWORD PTR [esi-0x52316a9f],0x8b12c2f
  4101a2:	sub    eax,0x96502913
  4101a7:	stc    
  4101a8:	call   0x772b:0x513b08e9
  4101af:	in     al,0xf6
  4101b1:	in     eax,dx
  4101b2:	mov    al,ds:0xb76e36a
  4101b7:	jb     0x4101d3
  4101b9:	stc    
  4101ba:	xor    ecx,DWORD PTR [eax-0x77968536]
  4101c0:	push   ss
  4101c1:	jp     0x410187
  4101c3:	ins    DWORD PTR es:[edi],dx
  4101c4:	ror    dh,cl
  4101c6:	ret    
  4101c7:	add    BYTE PTR [edi-0x79],dl
  4101ca:	in     eax,0x1a
  4101cc:	mov    edi,0xebafc559
  4101d1:	sub    dl,BYTE PTR [eax-0x4711b00a]
  4101d7:	dec    DWORD PTR [edx-0x57a49532]
  4101dd:	fcomp  DWORD PTR [edi]
  4101df:	push   ss
  4101e0:	mov    dh,0xd5
  4101e2:	mov    cl,0xce
  4101e4:	outs   dx,DWORD PTR ds:[esi]
  4101e5:	sub    al,0x42
  4101e7:	leave  
  4101e8:	mov    ds:0x66dc8e4d,al
  4101ed:	addr16 push eax
  4101ef:	sbb    BYTE PTR [edi],0xca
  4101f2:	das    
  4101f3:	por    mm5,mm0
  4101f6:	pop    es
  4101f7:	add    eax,0x52d5ea5d
  4101fc:	mov    bl,0x1e
  4101fe:	jb     0x4101de
  410200:	mov    eax,ds:0x8026f016
  410205:	mov    ah,0x3c
  410207:	dec    edx
  410208:	mov    edx,0xc56087eb
  41020d:	push   ebx
  41020e:	pop    ebx
  41020f:	jae    0x4101e5
  410211:	scas   eax,DWORD PTR es:[edi]
  410212:	sahf   
  410213:	mov    ds:0x638725a3,eax
  410218:	hlt    
  410219:	mov    edx,ebp
  41021b:	lahf   
  41021c:	nop
  41021d:	and    al,0x88
  41021f:	imul   ecx,DWORD PTR [ebp+0x6],0x7c06771e
  410226:	fs out dx,eax
  410228:	jle    0x4101b3
  41022a:	ins    DWORD PTR es:[edi],dx
  41022b:	ins    BYTE PTR es:[edi],dx
  41022c:	je     0x4101da
  41022e:	xchg   edi,eax
  41022f:	lds    esp,FWORD PTR [edi+0x71]
  410232:	in     eax,dx
  410233:	pop    es
  410234:	arpl   bp,ax
  410236:	js     0x410208
  410238:	xor    bl,al
  41023a:	lea    esi,[ecx+esi*1]
  41023d:	in     eax,0x13
  41023f:	scas   al,BYTE PTR es:[edi]
  410240:	jle    0x41022a
  410242:	test   al,0xcc
  410244:	(bad)  
  410245:	out    dx,al
  410246:	retf   
  410247:	xor    al,BYTE PTR [ebx+0x7d]
  41024a:	mov    ch,0x74
  41024c:	test   dh,0x1c
  41024f:	push   0xffffffab
  410251:	push   ss
  410252:	fsub   st,st(5)
  410254:	mov    al,ds:0x42beab82
  410259:	mov    esi,0x581df213
  41025e:	sbb    edx,edi
  410260:	push   esi
  410261:	cld    
  410262:	jbe    0x41023a
  410264:	mov    ss,WORD PTR cs:[edx]
  410267:	lods   al,BYTE PTR ds:[esi]
  410268:	out    dx,eax
  410269:	les    ecx,FWORD PTR ds:0xf843c35d
  41026f:	mov    ch,0x25
  410271:	inc    edi
  410272:	stos   DWORD PTR es:[edi],eax
  410273:	jo     0x41024c
  410275:	int    0x77
  410277:	sub    eax,0xc17978d
  41027c:	xor    DWORD PTR [edi-0x8e1e823],0x1b03a453
  410286:	rcr    BYTE PTR [ebx],cl
  410288:	sbb    eax,DWORD PTR [ebx*8-0x6d13ceb]
  41028f:	jnp    0x410305
  410291:	push   esp
  410292:	lods   eax,DWORD PTR ds:[esi]
  410293:	dec    eax
  410294:	and    BYTE PTR [eax+0x34],bh
  410297:	rcr    BYTE PTR [edi],0xb9
  41029a:	je     0x4102cb
  41029c:	lods   eax,DWORD PTR ds:[esi]
  41029d:	jmp    0x410298
  41029f:	mov    es,WORD PTR [eax+0x3b5d8ce4]
  4102a5:	xor    al,0x21
  4102a7:	jno    0x410267
  4102a9:	lahf   
  4102aa:	fcomp  QWORD PTR [esp+esi*2-0x3f]
  4102ae:	ret    0x48ab
  4102b1:	mov    bl,0xc5
  4102b3:	bound  ebx,QWORD PTR [eax+ecx*8-0x55]
  4102b7:	push   ebx
  4102b8:	add    eax,0x8209f337
  4102bd:	jb     0x410327
  4102bf:	sbb    BYTE PTR [edx-0x34],bl
  4102c2:	fadd   QWORD PTR [eax+0xf926e25]
  4102c8:	js     0x410287
  4102ca:	ins    DWORD PTR es:[edi],dx
  4102cb:	addr16 ds pop ebp
  4102ce:	or     edx,DWORD PTR [esi-0x79151e6b]
  4102d4:	mov    eax,0xae3ae773
  4102d9:	in     al,dx
  4102da:	or     BYTE PTR ds:0x738ec323,ah
  4102e0:	adc    ebx,DWORD PTR [edi-0x3e488435]
  4102e6:	sub    eax,0xf6f1f655
  4102eb:	cli    
  4102ec:	adc    BYTE PTR [ebp-0x2cb04bb5],bh
  4102f2:	mov    ecx,0x974eb6c5
  4102f7:	outs   dx,BYTE PTR ds:[esi]
  4102f8:	push   DWORD PTR [edx]
  4102fa:	jmp    0xc262:0xce204d53
  410301:	in     al,dx
  410302:	iret   
  410303:	loope  0x410310
  410305:	dec    eax
  410306:	mov    BYTE PTR [edx+esi*2],ch
  410309:	ret    
  41030a:	dec    ebx
  41030b:	xlat   BYTE PTR ds:[ebx]
  41030c:	retf   0xde49
  41030f:	add    dh,BYTE PTR [ebx]
  410311:	xchg   esp,eax
  410312:	mov    ebx,0xa5b97ae1
  410317:	iret   
  410318:	and    cl,dl
  41031a:	and    eax,0x37a39c03
  41031f:	mov    al,ds:0x267b2d19
  410324:	(bad)  
  410325:	(bad)  
  410326:	push   edx
  410327:	cld    
  410328:	ins    BYTE PTR es:[edi],dx
  410329:	fadd   DWORD PTR [bp+si-0x5ea8]
  41032e:	imul   ebp,DWORD PTR [edi+0x6d],0xffffffe9
  410332:	add    eax,DWORD PTR [ebp+edx*1-0x3]
  410336:	xor    edx,edi
  410338:	lea    esp,[eax-0x4b06c0a8]
  41033e:	or     DWORD PTR [ecx-0x68c63b16],esp
  410344:	and    al,0x4f
  410346:	mov    BYTE PTR [ebx+0x25eb20a1],dl
  41034c:	aad    0xa1
  41034e:	jns    0x41033d
  410350:	dec    ebx
  410351:	js     0x41030c
  410353:	mov    ?,WORD PTR [ebp+0x78]
  410356:	popa   
  410357:	mov    eax,ebx
  410359:	nop
  41035a:	call   0x42ea:0x82662a9c
  410361:	cli    
  410362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410363:	fidivr WORD PTR ds:0x7c87a1ed
  410369:	int3   
  41036a:	push   cs
  41036b:	fild   WORD PTR [ecx+0x33af7701]
  410371:	(bad)  
  410372:	out    dx,al
  410373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410374:	jecxz  0x4103f1
  410376:	mov    WORD PTR [ecx],fs
  410378:	adc    BYTE PTR [eax-0x605efd6b],ah
  41037e:	push   es
  41037f:	clc    
  410380:	xlat   BYTE PTR ds:[ebx]
  410381:	adc    bl,BYTE PTR [edi-0x34]
  410384:	or     BYTE PTR [edi],dh
  410386:	outs   dx,BYTE PTR ds:[esi]
  410387:	test   esi,esi
  410389:	xor    ebx,DWORD PTR [ebx-0x7d2c0d46]
  41038f:	dec    edi
  410390:	and    eax,0xf7337e22
  410395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410396:	xchg   esi,eax
  410397:	push   edi
  410398:	rcl    edx,1
  41039a:	fst    DWORD PTR [ebx+0x5584c6b2]
  4103a0:	vpmullw xmm7,xmm3,xmm0
  4103a4:	or     BYTE PTR [edi*4-0x268c9967],dl
  4103ab:	adc    eax,0x2ef78b3d
  4103b0:	hlt    
  4103b1:	cwde   
  4103b2:	repz rol BYTE PTR [edx],0xa9
  4103b6:	fwait
  4103b7:	push   edi
  4103b8:	xchg   edi,eax
  4103b9:	aam    0xcd
  4103bb:	xchg   ebp,eax
  4103bc:	inc    esi
  4103bd:	outs   dx,DWORD PTR ds:[esi]
  4103be:	adc    DWORD PTR [ebx],0xffffffa0
  4103c1:	jb     0x41043a
  4103c3:	jp     0x4103fb
  4103c5:	sti    
  4103c6:	push   ss
  4103c7:	pop    ds
  4103c8:	and    esp,DWORD PTR [ecx+0x4f2e04db]
  4103ce:	mov    ?,WORD PTR [esp+eax*8]
  4103d1:	xchg   esi,eax
  4103d2:	push   esp
  4103d3:	sbb    BYTE PTR [eax-0x60cec839],0xbd
  4103da:	adc    al,0xba
  4103dc:	(bad)  
  4103dd:	pop    ebx
  4103de:	(bad)  
  4103e0:	push   esp
  4103e1:	add    eax,0x49c75dcc
  4103e6:	mov    DWORD PTR [esi+0x11],esi
  4103e9:	call   0xd212:0x943ba7b0
  4103f0:	bound  edx,QWORD PTR [edi+ecx*4]
  4103f3:	mov    edx,0xc03e939d
  4103f9:	retf   
  4103fa:	sub    ch,BYTE PTR [ebp+0x3ecfc07e]
  410400:	push   es
  410401:	mov    DWORD PTR [edx+ecx*1],ebp
  410404:	repnz test eax,0xc8b8c56f
  41040a:	test   eax,0x48cfdd92
  41040f:	rcr    BYTE PTR [edi+0x44],0xc3
  410413:	cwde   
  410414:	adc    ch,BYTE PTR [ebx+0x58b79b64]
  41041a:	cs xchg esi,eax
  41041c:	jnp    0x4103c3
  41041e:	xlat   BYTE PTR ds:[ebx]
  41041f:	sub    dh,al
  410421:	cmp    eax,0xabc62644
  410426:	xchg   edi,eax
  410427:	add    al,0x7b
  410429:	cli    
  41042a:	mov    eax,ds:0xb5620bfd
  41042f:	addr16 jmp 0x410448
  410432:	test   al,0x9b
  410434:	mov    al,ds:0x95fb687b
  410439:	inc    esi
  41043a:	jae    0x4103c0
  41043c:	std    
  41043d:	sub    BYTE PTR [edx-0x3e155b39],al
  410443:	pop    es
  410444:	adc    BYTE PTR [ebp+0x7da32af],al
  41044a:	ds xchg esi,eax
  41044c:	idiv   edi
  41044e:	inc    ebp
  41044f:	cwde   
  410450:	xchg   edx,eax
  410451:	inc    eax
  410452:	mov    dl,BYTE PTR ds:0x6d9e07ae
  410458:	iret   
  410459:	fidivr WORD PTR [esi+eax*8-0x33]
  41045d:	mov    DWORD PTR [edx],edx
  41045f:	fs stos BYTE PTR es:[edi],al
  410461:	jl     0x410445
  410463:	mov    ebx,0x2930289f
  410468:	test   eax,0xbba32631
  41046d:	stos   DWORD PTR es:[edi],eax
  41046e:	push   edx
  41046f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410470:	jno    0x410479
  410472:	xchg   esp,eax
  410473:	mov    eax,ds:0x7a63ee5c
  410478:	xor    eax,0xb0ff5341
  41047d:	pusha  
  41047e:	pop    eax
  41047f:	lods   eax,DWORD PTR ds:[esi]
  410480:	push   eax
  410481:	adc    ah,bh
  410483:	out    0xd8,al
  410485:	fcmovbe st,st(2)
  410487:	popa   
  410488:	add    al,0xf6
  41048a:	xor    BYTE PTR [edi-0x381058a1],0x61
  410491:	jecxz  0x4104b0
  410493:	add    BYTE PTR [eax],dh
  410495:	dec    ebx
  410496:	mov    edx,0x399cb8c0
  41049b:	ss pop es
  41049d:	lock mov bl,0x34
  4104a0:	xor    BYTE PTR [ebx-0x78],dl
  4104a3:	cld    
  4104a4:	push   0x46
  4104a6:	add    DWORD PTR [edx-0x65],esp
  4104a9:	imul   DWORD PTR ds:0x2ab84ca1
  4104af:	jo     0x410460
  4104b1:	fldenv gs:[eax+0x33]
  4104b5:	inc    ecx
  4104b6:	int    0xc2
  4104b8:	add    BYTE PTR [eax-0x53d30aef],ch
  4104be:	mov    BYTE PTR [eax],ch
  4104c0:	stc    
  4104c1:	cmp    eax,0x29d41d99
  4104c6:	mov    cl,0xfb
  4104c8:	push   es
  4104c9:	ins    BYTE PTR es:[edi],dx
  4104ca:	outs   dx,DWORD PTR ds:[esi]
  4104cb:	inc    esp
  4104cc:	push   es
  4104cd:	mov    ds:0x68cd9f89,al
  4104d2:	jo     0x41045a
  4104d4:	int    0xd1
  4104d6:	adc    BYTE PTR [eax-0x44],0x71
  4104da:	pop    edx
  4104db:	bound  esp,QWORD PTR [ecx+0x30fb24cb]
  4104e1:	jge    0x4104e3
  4104e3:	lock inc esi
  4104e5:	bound  ecx,QWORD PTR [edi]
  4104e7:	adc    ch,dh
  4104e9:	sub    eax,0x9282048
  4104ee:	je     0x4104a8
  4104f0:	lods   al,BYTE PTR ds:[esi]
  4104f1:	out    0xe,eax
  4104f3:	mov    WORD PTR [edi+ebp*4+0x28],fs
  4104f7:	imul   ecx,DWORD PTR [eax+0xa],0xffffffaa
  4104fb:	cld    
  4104fc:	cld    
  4104fd:	sub    esp,0x17
  410500:	enter  0x865b,0xd2
  410504:	cld    
  410505:	mov    ds:0xa847ac8c,al
  41050a:	fstp   DWORD PTR [ebx]
  41050c:	fwait
  41050d:	and    al,0xd4
  41050f:	(bad)  
  410510:	aad    0xb8
  410512:	out    0xab,eax
  410514:	lods   eax,DWORD PTR ds:[esi]
  410515:	test   eax,0x94fb1706
  41051a:	adc    dh,bl
  41051c:	and    BYTE PTR ds:0xa43ff1e9,bh
  410522:	and    edi,DWORD PTR [ebx]
  410524:	aas    
  410525:	inc    ecx
  410526:	sbb    esi,eax
  410528:	call   0xf6c79212
  41052d:	sub    edi,DWORD PTR ds:[ebx+0x37ccbae2]
  410534:	push   esi
  410535:	sbb    al,0x5
  410537:	inc    esi
  410538:	idiv   BYTE PTR [esi-0x52]
  41053b:	leave  
  41053c:	xchg   edx,eax
  41053d:	loope  0x4104e7
  41053f:	aam    0x16
  410541:	sti    
  410542:	inc    ebp
  410543:	or     ch,BYTE PTR [esi+edi*1]
  410546:	cmp    eax,0x237e9aaa
  41054b:	mov    ah,0x57
  41054d:	ins    BYTE PTR es:[edi],dx
  41054e:	inc    edx
  41054f:	fst    DWORD PTR [ebp+0x33]
  410552:	cmp    eax,0xd8604737
  410557:	popf   
  410558:	addr16 aam 0x7a
  41055b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41055c:	gs add cl,bh
  41055f:	aad    0xe9
  410561:	mov    ch,0xdb
  410563:	cmovge ebp,edi
  410566:	fsubp  st(4),st
  410568:	jl     0x410529
  41056a:	pop    es
  41056b:	shl    DWORD PTR [ebx],cl
  41056d:	push   edi
  41056e:	push   eax
  41056f:	jp     0x41055a
  410571:	mov    ebp,0x7576ac1e
  410576:	scas   eax,DWORD PTR es:[edi]
  410577:	cmp    al,0x51
  410579:	lods   al,BYTE PTR ds:[esi]
  41057a:	or     ch,BYTE PTR [edx+0x6b8fce65]
  410580:	jmp    0x816a:0x3c9966cd
  410587:	push   0x9db84728
  41058c:	pop    ebp
  41058d:	xchg   ecx,eax
  41058e:	psubsb mm7,QWORD PTR [esi+0x4d55e543]
  410595:	in     eax,dx
  410596:	or     dh,BYTE PTR [ebx]
  410598:	sub    edi,edx
  41059a:	mov    edi,0x34a42c44
  41059f:	push   ss
  4105a0:	int    0xa1
  4105a2:	or     bl,bh
  4105a4:	add    BYTE PTR [eax-0x1536375b],bl
  4105aa:	cld    
  4105ab:	jnp    0x4105eb
  4105ad:	or     eax,0x25f8d9c5
  4105b2:	inc    ebx
  4105b3:	dec    edx
  4105b4:	fprem  
  4105b6:	xchg   ecx,eax
  4105b7:	jns    0x41054b
  4105b9:	icebp  
  4105ba:	call   0x52eb18e0
  4105bf:	sub    eax,0x8a5f915c
  4105c4:	fstp   DWORD PTR [eax-0x417525ec]
  4105ca:	sar    eax,0x5d
  4105cd:	(bad)  
  4105ce:	lds    eax,FWORD PTR [ebp+ecx*1+0x50dadfb1]
  4105d5:	ins    BYTE PTR es:[edi],dx
  4105d6:	inc    ebx
  4105d7:	add    eax,0x61a2ae64
  4105dc:	jb     0x41055e
  4105de:	push   esp
  4105df:	int3   
  4105e0:	cs dec edx
  4105e2:	sub    edi,DWORD PTR [esi]
  4105e4:	adc    al,dh
  4105e6:	xchg   edx,eax
  4105e7:	sbb    eax,DWORD PTR ds:[ecx+0x72]
  4105eb:	sub    eax,0x8ee97826
  4105f0:	add    ebp,DWORD PTR [edx+0x77144c71]
  4105f6:	or     cl,BYTE PTR [eax-0x6c]
  4105f9:	mov    al,0x4b
  4105fb:	pop    ebp
  4105fc:	daa    
  4105fd:	adc    eax,0xed27226
  410602:	in     al,0x45
  410604:	mov    ?,WORD PTR [esi-0x254c7702]
  41060a:	dec    edi
  41060b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41060c:	xchg   ebp,eax
  41060d:	cwde   
  41060e:	js     0x4105fe
  410610:	mov    DWORD PTR [ebx],ecx
  410612:	dec    edx
  410613:	pop    ds
  410614:	mov    dh,0xa
  410616:	iret   
  410617:	pop    ecx
  410618:	xchg   esi,eax
  410619:	dec    edi
  41061a:	mov    edi,0xe3b47cfd
  41061f:	mov    ebp,0xc6165ba8
  410624:	mov    esp,DWORD PTR [esi-0x2d4ef0fe]
  41062a:	fld    QWORD PTR [esi-0x36]
  41062d:	mov    DWORD PTR [eax+eiz*2],edi
  410630:	sub    BYTE PTR [ebp-0x2b],bl
  410633:	jecxz  0x41067e
  410635:	in     eax,0x5f
  410637:	fwait
  410638:	sbb    DWORD PTR [ebx+0x2b],edx
  41063b:	sti    
  41063c:	sub    bh,BYTE PTR [ebp+ecx*2-0x15402be4]
  410643:	mov    ebp,0x35150607
  410648:	or     dl,ch
  41064a:	fadd   DWORD PTR ss:[edi-0x19]
  41064e:	pop    edx
  41064f:	xlat   BYTE PTR ds:[ebx]
  410650:	retf   
  410651:	test   eax,0x4c9bb86a
  410656:	arpl   WORD PTR [eax+0x17653ba3],bp
  41065c:	add    ah,BYTE PTR [edx+ebp*2-0x7f]
  410660:	adc    al,0x32
  410662:	sub    ah,BYTE PTR [esp+ebp*1+0x15]
  410666:	mov    ds:0x233b1b0e,al
  41066b:	cmp    BYTE PTR gs:[ebx],0x50
  41066f:	(bad)  
  410670:	rcr    BYTE PTR [edx+0x18],0x22
  410674:	into   
  410675:	out    0x81,eax
  410677:	dec    ebp
  410678:	mov    eax,0xfe40c6ef
  41067d:	mul    DWORD PTR [ebx+0x7]
  410680:	sbb    DWORD PTR [ecx+0x18],esp
  410683:	scas   al,BYTE PTR es:[edi]
  410684:	test   ebp,edi
  410686:	aas    
  410687:	jo     0x4106eb
  410689:	repz ds cmp eax,0xf746d139
  410690:	sbb    BYTE PTR [ebx+0x168aa0fb],dh
  410696:	addr16 dec esp
  410698:	or     esi,ebp
  41069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41069b:	and    DWORD PTR [ebp+0x5c509c6a],edx
  4106a1:	xchg   ebp,eax
  4106a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106a3:	popa   
  4106a4:	sahf   
  4106a5:	dec    esp
  4106a6:	int    0x89
  4106a8:	imul   esi,DWORD PTR [ebx+0x76],0x6d
  4106ac:	ret    0xe52c
  4106af:	adc    DWORD PTR [edi+0x5e],esi
  4106b2:	pop    es
  4106b3:	cmp    al,0x9d
  4106b5:	dec    esi
  4106b6:	lahf   
  4106b7:	push   ecx
  4106b8:	fisub  DWORD PTR [eax]
  4106ba:	push   esi
  4106bb:	data16 arpl WORD PTR [ebx],di
  4106be:	aaa    
  4106bf:	dec    esp
  4106c0:	or     BYTE PTR [edi-0x16],cl
  4106c3:	fild   DWORD PTR [ebp+0x34]
  4106c6:	dec    ebp
  4106c7:	das    
  4106c8:	jmp    0x4106ad
  4106ca:	jecxz  0x4106a2
  4106cc:	dec    ebp
  4106cd:	or     eax,0x548c08ec
  4106d2:	push   ebp
  4106d3:	pusha  
  4106d4:	test   dl,dl
  4106d6:	sub    DWORD PTR [esi+0x13f40427],ebx
  4106dc:	sti    
  4106dd:	retf   
  4106de:	pop    esi
  4106df:	or     cl,cl
  4106e1:	pop    ebx
  4106e2:	stc    
  4106e3:	jl     0x4106ff
  4106e5:	ror    BYTE PTR [esi+0x4],cl
  4106e8:	sub    al,0x5d
  4106ea:	popa   
  4106eb:	js     0x4106cf
  4106ed:	lds    ebp,FWORD PTR [esi]
  4106ef:	jp     0x410687
  4106f1:	add    eax,0xb8c2660f
  4106f6:	cmp    eax,0x3e1a966
  4106fb:	lds    esi,FWORD PTR [edx]
  4106fd:	pop    ss
  4106fe:	paddsb mm3,QWORD PTR [esi+edx*4-0x5e]
  410703:	mov    edi,0x75b9857b
  410708:	xor    DWORD PTR [edx+0x524bbe7e],0x3b
  41070f:	xor    ecx,esi
  410711:	fst    QWORD PTR [edi]
  410713:	push   esp
  410714:	iret   
  410715:	(bad)  es:[ebp+0x66]
  410719:	jb     0x41074f
  41071b:	cmp    al,BYTE PTR [ebp+0x2869e4ed]
  410721:	mov    esp,es
  410723:	push   edi
  410724:	mov    ecx,0x96782818
  410729:	ds icebp 
  41072b:	sub    esi,DWORD PTR [ecx+0x46]
  41072e:	test   eax,0x40ec52af
  410733:	pop    esp
  410734:	call   0xf827:0x8a452897
  41073b:	xor    al,0xb8
  41073d:	out    dx,eax
  41073e:	lock push ecx
  410740:	jns    0x41075b
  410742:	push   ds
  410743:	cmp    BYTE PTR [ecx],dl
  410745:	or     DWORD PTR [esi],0xffffff82
  410748:	into   
  410749:	inc    edx
  41074a:	imul   ecx,DWORD PTR [ecx],0x90d31767
  410750:	pop    esp
  410751:	sub    cl,BYTE PTR [ebp-0x6534db35]
  410757:	push   es
  410758:	mov    dh,0xc2
  41075a:	mov    eax,ds:0xf77f7014
  41075f:	push   ss
  410760:	sbb    eax,0x9363a7a6
  410765:	adc    ebx,ebx
  410767:	xchg   esi,eax
  410768:	dec    ebp
  410769:	ins    BYTE PTR es:[edi],dx
  41076a:	int3   
  41076b:	dec    ecx
  41076c:	sub    BYTE PTR [ecx+0x7711ab7],0x4f
  410773:	(bad)  
  410774:	pop    esi
  410775:	jecxz  0x41072a
  410777:	cmp    eax,0xbb1d0422
  41077c:	sub    eax,0x5d911fac
  410781:	mov    ecx,DWORD PTR [edx+0x50]
  410784:	das    
  410785:	sbb    BYTE PTR [ecx-0x543d192f],bh
  41078b:	test   DWORD PTR [ebp+eiz*8+0x68a99919],esp
  410792:	js     0x410728
  410794:	add    eax,0x465661fc
  410799:	ja     0x4107aa
  41079b:	mov    eax,0x7acc11c3
  4107a0:	add    eax,0x6749e7ed
  4107a5:	pushf  
  4107a6:	cmp    eax,0xea6d6c56
  4107ab:	leave  
  4107ac:	inc    ecx
  4107ad:	pop    ebx
  4107ae:	inc    edx
  4107af:	add    al,0xf2
  4107b1:	sbb    eax,0xec45b0a4
  4107b6:	sbb    ebx,eax
  4107b8:	call   0xc4932434
  4107bd:	rcr    edi,0x6b
  4107c0:	dec    esp
  4107c1:	fcmovb st,st(7)
  4107c3:	adc    eax,0xd0cf8b71
  4107c8:	pop    edi
  4107c9:	jbe    0x410794
  4107cb:	or     BYTE PTR [ecx+eax*2-0x55],0x95
  4107d0:	cmc    
  4107d1:	pop    edx
  4107d2:	inc    ecx
  4107d3:	popa   
  4107d4:	and    DWORD PTR [ebx+0x75],ebx
  4107d7:	in     eax,dx
  4107d8:	sub    esi,DWORD PTR [esi+0x7c]
  4107db:	cmp    DWORD PTR [esi],edx
  4107dd:	test   al,0x70
  4107df:	test   al,0xd8
  4107e1:	mov    BYTE PTR [ebx-0x5a],dl
  4107e4:	xor    bh,al
  4107e6:	call   0xfd78:0xad174061
  4107ed:	cld    
  4107ee:	pushf  
  4107ef:	outs   dx,BYTE PTR ds:[esi]
  4107f0:	jmp    0xfb11c5b
  4107f5:	std    
  4107f6:	les    esi,FWORD PTR [ebx-0x197cf50f]
  4107fc:	sar    bh,0x2c
  4107ff:	arpl   dx,bx
  410801:	fsincos 
  410803:	xchg   esi,eax
  410804:	adc    BYTE PTR ds:0x2cc4dbd0,dh
  41080a:	jb     0x41084f
  41080c:	mov    edi,DWORD PTR [esp+eax*8+0x32b6392a]
  410813:	fist   WORD PTR [edx]
  410815:	or     dh,BYTE PTR [edi-0x30]
  410818:	retf   
  410819:	mov    eax,ds:0x5db60be6
  41081e:	icebp  
  41081f:	pop    ecx
  410820:	loope  0x410828
  410822:	mov    DWORD PTR [edx],ecx
  410824:	mov    ds:0x16a614f9,al
  410829:	add    BYTE PTR [ebx+0x71],ch
  41082c:	test   eax,0x9638747a
  410831:	add    eax,0x8a7b1da7
  410836:	pop    edi
  410837:	push   ecx
  410838:	sub    eax,0x687eca4d
  41083d:	js     0x410801
  41083f:	(bad)  
  410840:	fistp  QWORD PTR [edi+edx*2-0x7b]
  410844:	data16 data16 cmp al,dh
  410848:	mov    al,0xea
  41084a:	in     eax,dx
  41084b:	hlt    
  41084c:	adc    eax,0x6dc47c62
  410851:	sub    edx,DWORD PTR [esi+edx*8-0x80]
  410855:	scas   al,BYTE PTR es:[edi]
  410856:	inc    ebx
  410857:	fdivr  st(6),st
  410859:	les    ebx,FWORD PTR [eax-0x42a58ce0]
  41085f:	add    eax,0x9220ad68
  410864:	sub    bh,dh
  410866:	fwait
  410867:	pop    esi
  410868:	jne    0x41082b
  41086a:	add    bl,dl
  41086c:	imul   eax,DWORD PTR [ebx],0x5d5b098b
  410872:	xchg   ebx,eax
  410873:	dec    edx
  410874:	adc    eax,0x678cd6ee
  410879:	lods   al,BYTE PTR ds:[esi]
  41087a:	mov    bh,0x73
  41087c:	imul   edx,DWORD PTR [ebx],0x821dda20
  410882:	cmp    bl,ah
  410884:	sub    DWORD PTR [esi-0x2],edi
  410887:	out    0x5c,eax
  410889:	sub    BYTE PTR [edi+0x1e],dh
  41088c:	cmp    eax,DWORD PTR [ebx-0x1d7232d5]
  410892:	jp     0x410843
  410894:	inc    edx
  410895:	pusha  
  410896:	pop    esp
  410897:	outs   dx,DWORD PTR ds:[esi]
  410898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410899:	adc    esi,DWORD PTR [esi-0x30517d0a]
  41089f:	jmp    0xefec2a25
  4108a4:	jo     0x4108ce
  4108a6:	sbb    BYTE PTR [edi],0xb7
  4108a9:	shr    DWORD PTR [ebx+0x154afe2c],1
  4108af:	mov    bh,0x2a
  4108b1:	jno    0x41086c
  4108b3:	jmp    0xbb23:0x5c63d861
  4108ba:	paddusb mm6,mm4
  4108bd:	shl    BYTE PTR [ecx+0x43ae4d2],1
  4108c3:	mov    eax,ds
  4108c5:	into   
  4108c6:	and    eax,0xf159619e
  4108cb:	push   cs
  4108cc:	and    DWORD PTR [ecx-0x77],ebx
  4108cf:	jb     0x410854
  4108d1:	push   0x51c22a5
  4108d6:	mov    bl,0x19
  4108d8:	hlt    
  4108d9:	and    BYTE PTR [edx],dl
  4108db:	pusha  
  4108dc:	gs nop
  4108de:	push   0xaa1e8f77
  4108e3:	cli    
  4108e4:	repz ja 0x4108c6
  4108e7:	jnp    0x4108f4
  4108e9:	xchg   ebp,eax
  4108ea:	(bad)  
  4108eb:	sti    
  4108ec:	test   ecx,esp
  4108ee:	xchg   DWORD PTR [eax+ebp*4+0x78c673a5],edi
  4108f5:	push   esp
  4108f6:	mov    dh,0x6a
  4108f8:	lds    edi,FWORD PTR [eax+0x46884cde]
  4108fe:	mov    bh,BYTE PTR [esi-0x43]
  410901:	cmc    
  410902:	jo     0x410929
  410904:	adc    ch,BYTE PTR [ebp-0x4fbfb6eb]
  41090a:	ja     0x41091c
  41090c:	ins    BYTE PTR es:[edi],dx
  41090d:	xor    eax,0xfe6e48eb
  410912:	xlat   BYTE PTR ds:[ebx]
  410913:	sub    al,0x48
  410915:	idiv   BYTE PTR [eax+eax*1]
  410918:	ds adc al,0x3
  41091b:	push   esp
  41091c:	jb     0x410910
  41091e:	outs   dx,DWORD PTR ds:[esi]
  41091f:	xlat   BYTE PTR ds:[ebx]
  410920:	inc    edx
  410921:	cmc    
  410922:	and    bl,BYTE PTR [eax+0x1d]
  410925:	and    bh,al
  410927:	xchg   ecx,eax
  410928:	fidivr DWORD PTR [edi]
  41092a:	ins    BYTE PTR es:[edi],dx
  41092b:	in     eax,0x1c
  41092d:	add    esp,DWORD PTR [esi-0x28ac385b]
  410933:	ja     0x41098a
  410935:	pop    ebp
  410936:	push   ecx
  410937:	add    al,0xb7
  410939:	push   ds
  41093a:	cmp    dh,BYTE PTR [edi+0x79f211e1]
  410940:	push   edi
  410941:	out    0x95,eax
  410943:	gs ds mov esp,0x3484870e
  41094a:	push   ds
  41094b:	jge    0x41098e
  41094d:	add    eax,0x567e82e5
  410952:	dec    eax
  410953:	fwait
  410954:	pop    ebx
  410955:	adc    DWORD PTR [eax],eax
  410957:	call   0x3a29d93e
  41095c:	das    
  41095d:	cmp    ch,BYTE PTR [ebp+ecx*1-0x53]
  410961:	sbb    DWORD PTR [edi+ecx*1-0x77e13632],esp
  410968:	sbb    eax,0x56847dd5
  41096d:	push   ebp
  41096e:	es mov esi,0x60075014
  410974:	jg     0x4108ff
  410976:	call   0xdcc7:0x98d802df
  41097d:	or     BYTE PTR [eax],dl
  41097f:	icebp  
  410980:	and    ebx,edx
  410982:	clc    
  410983:	xor    eax,edx
  410985:	dec    ebp
  410986:	ret    
  410987:	adc    al,al
  410989:	jp     0x4109ed
  41098b:	repnz sub esp,DWORD PTR [esi]
  41098e:	add    cl,0xe8
  410991:	mov    ebx,0xa7f71203
  410996:	dec    eax
  410997:	arpl   di,sp
  410999:	adc    al,0x23
  41099b:	dec    eax
  41099c:	xor    DWORD PTR [eax-0x7681c442],ebp
  4109a2:	sub    edx,DWORD PTR [esi]
  4109a4:	and    al,BYTE PTR [eax+edx*2]
  4109a7:	xchg   esp,eax
  4109a8:	push   es
  4109a9:	add    ecx,DWORD PTR [edi+0x34]
  4109ac:	mov    bh,0x74
  4109ae:	(bad)  
  4109af:	js     0x41099a
  4109b1:	pop    ds
  4109b2:	mov    BYTE PTR [edx-0x67],ah
  4109b5:	xchg   esp,eax
  4109b6:	sub    ah,dh
  4109b8:	add    ebp,esi
  4109ba:	out    dx,eax
  4109bb:	stc    
  4109bc:	je     0x410a18
  4109be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109bf:	and    DWORD PTR [ecx],eax
  4109c1:	pop    ds
  4109c2:	and    BYTE PTR [esp+ecx*4],bh
  4109c5:	pop    ebx
  4109c6:	or     al,0x22
  4109c8:	iret   
  4109c9:	out    dx,eax
  4109ca:	sub    al,BYTE PTR [edx-0x124a73a3]
  4109d0:	mov    dh,0x2
  4109d2:	sar    DWORD PTR ds:[esi],1
  4109d5:	cmp    esi,ecx
  4109d7:	add    al,0xd1
  4109d9:	xor    al,0xcf
  4109db:	mul    DWORD PTR [ebx]
  4109dd:	rol    DWORD PTR [esp+ebp*8+0x2a32ba18],0xf8
  4109e5:	xchg   edi,eax
  4109e6:	dec    ebp
  4109e7:	xchg   edi,eax
  4109e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e9:	push   edi
  4109ea:	dec    esp
  4109eb:	or     eax,0x30e828f6
  4109f0:	call   FWORD PTR [edx+ebp*1]
  4109f3:	stc    
  4109f4:	pop    ebx
  4109f5:	das    
  4109f6:	sub    DWORD PTR [edi+0x42ac9c7e],0xb9f80441
  410a00:	pop    edi
  410a01:	sub    al,0x28
  410a03:	adc    BYTE PTR [ebx+0x4e],dh
  410a06:	icebp  
  410a07:	cwde   
  410a08:	add    esi,DWORD PTR [esi+0x49466d65]
  410a0e:	stos   DWORD PTR es:[edi],eax
  410a0f:	enter  0x437a,0xc0
  410a13:	(bad)  
  410a14:	or     cl,BYTE PTR [edi+0x209ae5a2]
  410a1a:	push   edx
  410a1b:	mov    edx,0x2509722a
  410a20:	pop    esp
  410a21:	mov    ds:0xd0ef8493,eax
  410a26:	das    
  410a27:	add    bl,BYTE PTR [edi-0x5e]
  410a2a:	in     eax,dx
  410a2b:	int    0x20
  410a2d:	jbe    0x410a50
  410a2f:	add    cl,dl
  410a31:	add    ebp,DWORD PTR [ecx]
  410a33:	xchg   ecx,eax
  410a34:	push   ss
  410a35:	js     0x410a77
  410a37:	pop    esi
  410a38:	and    BYTE PTR [edx-0x6],0xcb
  410a3c:	in     eax,dx
  410a3d:	sub    eax,0x35ab0ec0
  410a42:	jb     0x410ab7
  410a44:	cmp    eax,0xebdf2016
  410a49:	(bad)  
  410a4a:	rcl    BYTE PTR [ecx],cl
  410a4c:	stc    
  410a4d:	and    cl,BYTE PTR [ecx+0x15]
  410a50:	shl    DWORD PTR [ecx-0xcc51f56],1
  410a56:	fisub  DWORD PTR [ecx+edx*2+0x40]
  410a5a:	add    BYTE PTR [ecx+0x6b01e9cc],bl
  410a60:	fmul   DWORD PTR [esi-0x19c1267d]
  410a66:	loope  0x410a7a
  410a68:	cs dec edi
  410a6a:	mov    bl,0xb7
  410a6c:	inc    esi
  410a6d:	out    dx,al
  410a6e:	lods   al,BYTE PTR ds:[esi]
  410a6f:	jae    0x410a51
  410a71:	push   edx
  410a72:	push   cs
  410a73:	xchg   ebx,eax
  410a74:	stc    
  410a75:	mov    dl,0xb
  410a77:	pushf  
  410a78:	push   0x6674b5ee
  410a7d:	ins    DWORD PTR es:[edi],dx
  410a7e:	mov    esi,0xadb545fe
  410a83:	push   0x20d42d5c
  410a88:	(bad)  
  410a89:	pushf  
  410a8a:	cld    
  410a8b:	pop    ebp
  410a8c:	xchg   edi,eax
  410a8d:	xor    al,bh
  410a8f:	sbb    bl,bl
  410a91:	add    BYTE PTR [esi+0x10366cd0],0xf5
  410a98:	paddd  mm0,QWORD PTR [ecx+0xd]
  410a9c:	adc    al,0x65
  410a9f:	out    0xe8,eax
  410aa1:	fs gs ins BYTE PTR es:[edi],dx
  410aa4:	stos   DWORD PTR es:[edi],eax
  410aa5:	js     0x410a9e
  410aa7:	dec    ebx
  410aa8:	(bad)  
  410aa9:	cmc    
  410aaa:	out    dx,eax
  410aab:	push   edx
  410aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410aad:	icebp  
  410aae:	(bad)  
  410aaf:	mov    ah,cl
  410ab1:	dec    edi
  410ab2:	ja     0x410ad6
  410ab4:	jge    0x410ace
  410ab6:	or     BYTE PTR [eax],ah
  410ab8:	aaa    
  410ab9:	lods   al,BYTE PTR ds:[esi]
  410aba:	ins    BYTE PTR es:[edi],dx
  410abb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410abc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410abd:	test   BYTE PTR [ebx+edx*4-0x50],0x5b
  410ac2:	push   esi
  410ac3:	enter  0x9a27,0x57
  410ac7:	dec    ecx
  410ac8:	jmp    0xa2c1ac26
  410acd:	stc    
  410ace:	fbld   TBYTE PTR [esi]
  410ad0:	xchg   edx,eax
  410ad1:	pop    ebx
  410ad2:	neg    BYTE PTR [ebp-0xb580aeb]
  410ad8:	jmp    0xccec536f
  410add:	xchg   esi,eax
  410ade:	imul   ecx,DWORD PTR [edx+0x75],0xffffffae
  410ae2:	loopne 0x410a79
  410ae4:	fwait
  410ae5:	push   0xffffffdd
  410ae7:	sbb    eax,0x8996ff0d
  410aec:	push   cs
  410aed:	push   DWORD PTR [esi-0x440f4b40]
  410af3:	xchg   esi,eax
  410af4:	daa    
  410af5:	sbb    ch,BYTE PTR [ebx+0x3ae48fc9]
  410afb:	xor    BYTE PTR [ebp-0x3b94032f],al
  410b01:	mov    edx,0x50bfd87c
  410b06:	sbb    BYTE PTR [ebp-0x3f6825c1],dl
  410b0c:	lods   eax,DWORD PTR ds:[esi]
  410b0d:	test   al,0x4
  410b0f:	in     eax,0x58
  410b11:	cli    
  410b12:	aad    0x5e
  410b14:	pop    esp
  410b15:	stos   BYTE PTR es:[edi],al
  410b16:	mov    edi,0x1077dfb2
  410b1b:	cmp    esp,DWORD PTR [ebp-0x28]
  410b1e:	mov    ch,0xac
  410b20:	ret    0xdfd2
  410b23:	lods   al,BYTE PTR ds:[esi]
  410b24:	in     al,0xa8
  410b26:	fdivrp st(3),st
  410b28:	mov    esi,ebp
  410b2a:	push   edi
  410b2b:	clc    
  410b2c:	gs cmc 
  410b2e:	mov    ch,0x1a
  410b30:	test   DWORD PTR [esi-0x4e8dba62],edi
  410b36:	enter  0x2a6b,0xec
  410b3a:	scas   eax,DWORD PTR es:[edi]
  410b3b:	ins    BYTE PTR es:[edi],dx
  410b3c:	test   eax,0x6787a03b
  410b41:	pop    esi
  410b42:	jnp    0x410afa
  410b44:	cli    
  410b45:	ret    
  410b46:	ins    BYTE PTR es:[edi],dx
  410b47:	arpl   WORD PTR [edx+0x2d4f8dc6],sp
  410b4d:	imul   esi,DWORD PTR [edx+0x5aaecb84],0x2b
  410b54:	push   ds
  410b55:	mov    esp,ebp
  410b57:	push   ecx
  410b58:	dec    ebx
  410b59:	jno    0x410b9a
  410b5b:	inc    esp
  410b5c:	lea    edi,[esi+0x73]
  410b5f:	jmp    0xaeed:0x57a1608
  410b66:	and    edi,DWORD PTR [eax]
  410b68:	shr    BYTE PTR gs:[ecx+0x3b],cl
  410b6c:	dec    ecx
  410b6d:	out    dx,al
  410b6e:	pop    ebx
  410b6f:	and    DWORD PTR [ebp+0x26],eax
  410b72:	add    DWORD PTR [eax],ebx
  410b74:	add    bh,0xec
  410b77:	sub    ebp,DWORD PTR [edi+0x54]
  410b7a:	mov    eax,0x8216fa68
  410b7f:	das    
  410b80:	and    ch,bh
  410b82:	xor    al,0x84
  410b84:	jp     0x410bb9
  410b86:	ficomp DWORD PTR [ecx]
  410b88:	ins    BYTE PTR es:[edi],dx
  410b89:	enter  0x9032,0x60
  410b8d:	fisub  DWORD PTR [ebx-0x14]
  410b90:	loope  0x410bd2
  410b92:	mov    bh,0x32
  410b94:	inc    edx
  410b95:	add    eax,0x70f14a6c
  410b9a:	pusha  
  410b9b:	not    edi
  410b9d:	jns    0x410b25
  410b9f:	lahf   
  410ba0:	jb     0x410bde
  410ba2:	mov    eax,ds:0x42b9e9da
  410ba7:	lds    ebx,FWORD PTR [eax+eax*8-0x42]
  410bab:	div    DWORD PTR [ebp+0x70ef3931]
  410bb1:	(bad)  
  410bb2:	mov    edi,0x5c8c3d49
  410bb7:	xchg   ebp,eax
  410bb8:	push   es
  410bb9:	mov    esp,0xdd062126
  410bbe:	dec    ebp
  410bbf:	sbb    DWORD PTR [ecx],eax
  410bc1:	ins    DWORD PTR es:[edi],dx
  410bc2:	(bad)  
  410bc3:	scas   al,BYTE PTR es:[edi]
  410bc4:	fwait
  410bc5:	imul   ebx,DWORD PTR [ebp+0x78],0xffffffbd
  410bc9:	pusha  
  410bca:	clc    
  410bcb:	mov    edi,0x7f1cf96e
  410bd0:	mov    edi,0x2ae5c7a5
  410bd5:	xor    eax,0x141d4f5a
  410bda:	cli    
  410bdb:	push   0x5b
  410bdd:	or     esp,ebp
  410bdf:	ja     0x410bf9
  410be1:	mov    ebp,0xcdc0737e
  410be6:	push   edx
  410be7:	test   eax,0x254d90d5
  410bec:	push   ebx
  410bed:	add    al,0xaf
  410bef:	lds    ecx,FWORD PTR [eax+0x7c]
  410bf2:	icebp  
  410bf3:	xor    ah,BYTE PTR [ebx-0x293553e9]
  410bf9:	and    dh,dl
  410bfb:	icebp  
  410bfc:	cmc    
  410bfd:	or     eax,DWORD PTR [esi-0x7a]
  410c00:	mov    dl,0x74
  410c02:	(bad)  
  410c04:	int3   
  410c05:	ds xchg edi,eax
  410c07:	xchg   edx,eax
  410c08:	mov    bh,0xab
  410c0a:	stos   DWORD PTR es:[edi],eax
  410c0b:	jb     0x410c7f
  410c0d:	xchg   ebx,eax
  410c0e:	sbb    BYTE PTR [ecx-0x51],0x9
  410c12:	add    al,0xf5
  410c14:	test   eax,0x4321de0a
  410c19:	loopne 0x410bad
  410c1b:	ds scas al,BYTE PTR es:[edi]
  410c1d:	cmp    ah,BYTE PTR [esi+0x5c57b371]
  410c23:	push   edi
  410c24:	push   ss
  410c25:	popf   
  410c26:	ja     0x410bd2
  410c28:	adc    DWORD PTR [esi],ebp
  410c2a:	frstor [ecx]
  410c2c:	cmp    esi,DWORD PTR [esi-0x26]
  410c2f:	sar    BYTE PTR [edi+0x4e],1
  410c32:	inc    esp
  410c33:	sub    DWORD PTR [eax+0x5f],esi
  410c36:	inc    esi
  410c37:	jg     0x410be4
  410c39:	mov    bl,al
  410c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c3c:	out    0xd6,al
  410c3e:	es push ds
  410c40:	es mov ah,0xde
  410c43:	push   eax
  410c44:	es xor al,0xed
  410c47:	add    ebp,edx
  410c49:	int3   
  410c4a:	mov    dh,0x69
  410c4c:	imul   ecx,DWORD PTR [edi],0xba3abfc5
  410c52:	adc    al,0xe3
  410c54:	cmp    DWORD PTR [ebx-0x7afe0ee5],edi
  410c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c5b:	dec    esi
  410c5c:	cmp    DWORD PTR [eax-0x4],ecx
  410c5f:	mov    DWORD PTR [ebx-0x410d27f9],esp
  410c65:	jne    0x410ccb
  410c67:	aam    0x14
  410c69:	leave  
  410c6a:	mov    bl,0x79
  410c6c:	mov    esp,0xce3f3658
  410c71:	mov    ecx,0xf8113425
  410c76:	icebp  
  410c77:	rcl    BYTE PTR [edi-0x77],1
  410c7a:	sbb    eax,0x1e32dc12
  410c7f:	leave  
  410c80:	popf   
  410c81:	and    dl,dl
  410c83:	popa   
  410c84:	enter  0xa0b5,0x87
  410c88:	mov    al,0x7b
  410c8a:	inc    esi
  410c8b:	jb     0x410cd5
  410c8d:	or     ecx,DWORD PTR [esi]
  410c8f:	and    eax,0x9a20ae16
  410c94:	clc    
  410c95:	jnp    0x410ce9
  410c97:	iret   
  410c98:	ja     0x410ce6
  410c9a:	mov    esi,0xc3e4dd3d
  410c9f:	add    edi,ebp
  410ca1:	inc    eax
  410ca2:	arpl   WORD PTR [esi],dx
  410ca4:	mov    dh,0x4
  410ca6:	arpl   cx,di
  410ca8:	xchg   edx,eax
  410ca9:	pop    ss
  410caa:	sbb    BYTE PTR [ebp+0x1f96b110],al
  410cb0:	cmp    DWORD PTR [ecx+0x31a7948e],esi
  410cb6:	lock jle 0x410cf2
  410cb9:	push   0xdec504ee
  410cbe:	push   cs
  410cbf:	mov    eax,0x542d690c
  410cc4:	mov    esp,0xffe8be7f
  410cc9:	fsub   QWORD PTR [ebx]
  410ccb:	adc    esp,DWORD PTR [edi-0x4b]
  410cce:	dec    si
  410cd0:	push   0xffffff9d
  410cd2:	fdivr  DWORD PTR ss:[esi+0x505f5aad]
  410cd9:	jns    0x410cf2
  410cdb:	in     al,dx
  410cdc:	std    
  410cdd:	push   ss
  410cde:	pop    ds
  410cdf:	push   ds
  410ce0:	cmp    DWORD PTR [eax],ebp
  410ce2:	mov    esp,0x94b11245
  410ce7:	sbb    BYTE PTR [esi],bh
  410ce9:	dec    edx
  410cea:	dec    eax
  410ceb:	adc    al,0x4d
  410ced:	xchg   ebx,eax
  410cee:	psraw  mm5,QWORD PTR [ebx+0x202fc23b]
  410cf5:	dec    edx
  410cf6:	mov    esp,0xf5e191f3
  410cfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cfc:	xor    DWORD PTR [ebx],esi
  410cfe:	popa   
  410cff:	hlt    
  410d00:	pop    eax
  410d01:	cmp    esi,eax
  410d03:	(bad)  
  410d04:	(bad)  
  410d05:	ror    BYTE PTR [ecx-0x2619417e],1
  410d0b:	xlat   BYTE PTR ds:[ebx]
  410d0c:	mov    ebx,0x61bb8417
  410d11:	mov    ebp,0xadc72ee6
  410d16:	scas   al,BYTE PTR es:[edi]
  410d17:	call   0x93b2:0x409bdd7b
  410d1e:	and    ebx,DWORD PTR [ebp-0x20]
  410d21:	push   es
  410d22:	or     BYTE PTR [eax],0xf5
  410d25:	idiv   DWORD PTR [edi]
  410d27:	jmp    0x410d3a
  410d29:	sbb    edi,DWORD PTR [esi+ebp*4+0x6605fa8c]
  410d30:	gs (bad) 
  410d32:	pop    ecx
  410d33:	dec    esi
  410d34:	data16 outs dx,BYTE PTR ds:[esi]
  410d36:	das    
  410d37:	adc    eax,0x841346cd
  410d3c:	dec    esp
  410d3d:	push   esp
  410d3e:	sub    al,0x6f
  410d40:	xchg   ebp,eax
  410d41:	mov    esi,DWORD PTR [edi]
  410d43:	xchg   edx,eax
  410d44:	cs push edx
  410d46:	jbe    0x410d48
  410d48:	mov    BYTE PTR [edi-0x281d223],bl
  410d4e:	adc    eax,0x62902cc6
  410d53:	mov    al,ds:0x943ac73d
  410d58:	push   ebp
  410d59:	(bad)  
  410d5a:	dec    ebx
  410d5b:	jg     0x410d3f
  410d5d:	xor    ebx,DWORD PTR [ebx+0x3de8a5b3]
  410d63:	jp     0x410cf5
  410d65:	pop    edx
  410d66:	lds    edi,FWORD PTR [ebp+0x35d74f26]
  410d6c:	pop    ecx
  410d6d:	dec    eax
  410d6e:	and    ah,ah
  410d70:	dec    ecx
  410d71:	dec    esp
  410d72:	sub    dh,BYTE PTR [ecx]
  410d74:	push   esp
  410d75:	pusha  
  410d76:	test   al,0x24
  410d78:	add    BYTE PTR [eax-0x4facfb4e],bl
  410d7e:	pop    ebp
  410d7f:	pop    ss
  410d80:	mov    eax,0xa98087cb
  410d85:	sbb    al,ch
  410d87:	adc    edi,esi
  410d89:	repz push eax
  410d8b:	and    ecx,edx
  410d8d:	and    eax,0x4e1f683
  410d92:	and    dh,BYTE PTR [eax]
  410d94:	dec    eax
  410d95:	bound  ebx,QWORD PTR [ebp+0x6f]
  410d98:	(bad)  
  410d99:	adc    DWORD PTR [ebp-0x98f9c1d],eax
  410d9f:	dec    esp
  410da0:	sahf   
  410da1:	ds xchg ecx,eax
  410da3:	bound  ebp,QWORD PTR [esi+0x27]
  410da6:	and    BYTE PTR [edx-0x67b815d4],dl
  410dac:	push   edi
  410dad:	retf   0x4acf
  410db0:	sub    edx,DWORD PTR [ecx-0x17]
  410db3:	pop    esp
  410db4:	aam    0x51
  410db6:	add    ecx,DWORD PTR [eax+0x5e3bbcf8]
  410dbc:	push   edx
  410dbd:	pop    es
  410dbe:	mov    DWORD PTR [ebp+0x463ea59f],ebp
  410dc4:	add    cl,BYTE PTR [ebx-0x19]
  410dc7:	enter  0x1e29,0x85
  410dcb:	push   eax
  410dcc:	jge    0x410e1d
  410dce:	mov    DWORD PTR [edi],esp
  410dd0:	popf   
  410dd1:	les    eax,FWORD PTR [ebp+eiz*8+0x78]
  410dd5:	mov    ah,0x18
  410dd7:	enter  0xc4c5,0xb6
  410ddb:	and    BYTE PTR [eax-0x5e],al
  410dde:	in     al,dx
  410ddf:	fs aas 
  410de1:	mov    eax,DWORD PTR [ebp+0xa]
  410de4:	add    ebx,DWORD PTR [esi+0x62e4be30]
  410dea:	mul    DWORD PTR [ecx]
  410dec:	test   al,0xe3
  410dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410def:	sti    
  410df0:	popa   
  410df1:	pop    esi
  410df2:	out    0xb8,eax
  410df4:	xchg   edi,eax
  410df5:	jge    0x410e69
  410df7:	sub    bh,BYTE PTR [ebx]
  410df9:	inc    edi
  410dfa:	add    DWORD PTR [esi-0x72f4a39c],esi
  410e00:	inc    edi
  410e01:	adc    eax,esi
  410e03:	(bad)  
  410e05:	(bad)  [esi]
  410e07:	or     ebp,DWORD PTR [bp+di+0x12d9]
  410e0c:	in     al,dx
  410e0d:	cmp    ebp,DWORD PTR [ebp+ebx*4-0x6895167c]
  410e14:	inc    esp
  410e15:	pop    edx
  410e16:	sahf   
  410e17:	in     eax,dx
  410e18:	outs   dx,DWORD PTR ds:[esi]
  410e19:	add    cl,dl
  410e1b:	je     0x410e85
  410e1d:	call   0x78ba:0x2eef5069
  410e24:	cmp    cl,BYTE PTR [ebp+0x2e170107]
  410e2a:	loop   0x410db3
  410e2c:	sub    al,BYTE PTR [edi+0x46]
  410e2f:	xchg   esi,eax
  410e30:	mov    al,ds:0xc63b31c9
  410e35:	jae    0x410def
  410e37:	mov    DWORD PTR [ecx-0x57],ebx
  410e3a:	sbb    al,0x92
  410e3c:	pop    edi
  410e3d:	pop    es
  410e3e:	xchg   DWORD PTR [ecx-0x6b],esp
  410e41:	outs   dx,DWORD PTR ds:[esi]
  410e42:	mov    ebx,0x54bb5fb1
  410e47:	push   esp
  410e48:	dec    ebx
  410e49:	js     0x410e7e
  410e4b:	iret   
  410e4c:	jae    0x410e72
  410e4e:	xor    ebp,edx
  410e50:	sub    DWORD PTR [edi],ebp
  410e52:	dec    ebx
  410e53:	add    al,BYTE PTR [eax]
  410e55:	push   0x18643b35
  410e5a:	stc    
  410e5b:	push   ecx
  410e5c:	lock mov esi,0xb1f042ec
  410e62:	push   ds
  410e63:	mov    edi,0xe2fabf49
  410e68:	mov    al,0x64
  410e6a:	cs pop ebx
  410e6c:	mov    esp,0x2f0dad12
  410e71:	or     BYTE PTR [edx-0x12],bl
  410e74:	adc    eax,0x1379a509
  410e79:	cmp    ebp,ebp
  410e7b:	mov    edx,0x7d978eb0
  410e80:	and    BYTE PTR [eax+0x5fffe28d],dl
  410e86:	dec    esi
  410e87:	mov    ebp,ebp
  410e89:	jb     0x410e73
  410e8b:	dec    ebx
  410e8c:	pop    ebx
  410e8d:	mov    ds:0x8bc8a655,eax
  410e92:	jno    0x410ed2
  410e94:	or     ebp,DWORD PTR [edx]
  410e96:	popa   
  410e97:	mov    dh,0x4f
  410e99:	bound  eax,QWORD PTR [ecx+0x6afdf9df]
  410e9f:	nop
  410ea0:	cmp    edi,DWORD PTR [esi-0x20]
  410ea3:	pop    es
  410ea4:	mov    DWORD PTR [ebx+0x71a03160],edi
  410eaa:	xor    eax,0xb100828e
  410eaf:	inc    edi
  410eb0:	pop    edi
  410eb1:	int3   
  410eb2:	test   DWORD PTR [esi+0x3204a3d7],ebx
  410eb8:	enter  0x5556,0x14
  410ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ebd:	add    esi,DWORD PTR [edi]
  410ebf:	jmp    0x410ef1
  410ec1:	mov    dh,0xc8
  410ec3:	leave  
  410ec4:	cmp    al,0x49
  410ec6:	and    al,0x7e
  410ec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ec9:	fistp  DWORD PTR [ebp-0x149721b6]
  410ecf:	cmp    DWORD PTR [ebx+0x6c],eax
  410ed2:	push   eax
  410ed3:	cs clc 
  410ed5:	mov    eax,ds:0x61555e0f
  410eda:	cwde   
  410edb:	push   ecx
  410edc:	adc    DWORD PTR [esp+ecx*2],ebx
  410edf:	mov    esi,0x7b9a2d15
  410ee4:	inc    edx
  410ee5:	xor    DWORD PTR [ecx-0x5578e9cd],edi
  410eeb:	sbb    ch,BYTE PTR [esi+0x147f77e8]
  410ef1:	or     dl,cl
  410ef3:	mov    edx,0x1f447698
  410ef8:	xchg   ebp,eax
  410ef9:	in     eax,0x63
  410efb:	xor    dh,BYTE PTR [edx]
  410efd:	mov    BYTE PTR [ebp+0x14b99e44],bl
  410f03:	stos   BYTE PTR es:[edi],al
  410f04:	jp     0x410f2b
  410f06:	daa    
  410f07:	sbb    DWORD PTR [ecx+ecx*2],0x25
  410f0b:	dec    ebp
  410f0c:	sbb    al,0xb3
  410f0e:	push   cs
  410f0f:	arpl   ax,sp
  410f11:	shr    edi,0x27
  410f14:	ds jns 0x410ec0
  410f17:	sbb    ch,BYTE PTR [ebp+ecx*1-0x1a2acf9]
  410f1e:	shr    BYTE PTR [eax+0xdb03054],cl
  410f24:	pop    esp
  410f25:	sub    edx,DWORD PTR [esi+esi*8-0x21]
  410f29:	xor    eax,DWORD PTR [esp+edi*1-0x584bfa4c]
  410f30:	stos   DWORD PTR es:[edi],eax
  410f31:	inc    ebp
  410f32:	lock je 0x410f8e
  410f35:	mov    cl,0xfd
  410f37:	or     DWORD PTR [ebp-0x14],edi
  410f3a:	mov    al,ds:0x2456a7d0
  410f3f:	fdivr  DWORD PTR [eax+0x45]
  410f42:	cmp    bl,BYTE PTR [ecx]
  410f44:	or     al,0xf
  410f46:	rcl    BYTE PTR [esi],cl
  410f48:	or     esi,DWORD PTR [esi+edi*4+0x3f]
  410f4c:	pop    ds
  410f4d:	push   es
  410f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f4f:	lds    ecx,FWORD PTR [ebp-0x7d]
  410f52:	(bad)  
  410f53:	aad    0x63
  410f55:	ins    BYTE PTR es:[edi],dx
  410f56:	mov    esp,0xdca6cd11
  410f5b:	xor    esi,DWORD PTR [esi+0x63f5b62]
  410f61:	adc    dl,ch
  410f63:	inc    esi
  410f64:	aad    0x7c
  410f66:	das    
  410f67:	adc    al,BYTE PTR [ebp+eiz*8-0x6e]
  410f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6c:	mov    esi,0x7d01773b
  410f71:	mov    dl,BYTE PTR [eax]
  410f73:	retf   
  410f74:	fild   QWORD PTR [edx]
  410f76:	jb     0x410f26
  410f78:	ins    BYTE PTR es:[edi],dx
  410f79:	fmul   QWORD PTR [ebx+0x1a]
  410f7c:	dec    ebx
  410f7d:	jecxz  0x410f33
  410f7f:	and    al,0x93
  410f81:	push   edx
  410f82:	rsqrtps xmm1,XMMWORD PTR [edx-0x68f4f03b]
  410f89:	data16 fwait
  410f8b:	sub    ebx,edi
  410f8d:	loope  0x410fc1
  410f8f:	jbe    0x410f66
  410f91:	(bad)  
  410f92:	lods   al,BYTE PTR ds:[esi]
  410f93:	lods   eax,DWORD PTR ds:[esi]
  410f94:	or     al,0x3f
  410f96:	xor    ebx,edi
  410f98:	jbe    0x410fdd
  410f9a:	jne    0x410f87
  410f9c:	popa   
  410f9d:	jno    0x410f5f
  410f9f:	adc    eax,0xfe9580be
  410fa4:	xchg   DWORD PTR [eax-0x7e],esp
  410fa7:	jl     0x41101e
  410fa9:	xchg   ebx,eax
  410faa:	out    dx,al
  410fab:	into   
  410fac:	xchg   ecx,eax
  410fad:	adc    al,0x56
  410faf:	mov    ah,0xe9
  410fb1:	or     eax,0xe976d00
  410fb6:	mov    bh,0x92
  410fb8:	fdivr  QWORD PTR [ebp-0x60]
  410fbb:	iret   
  410fbc:	stc    
  410fbd:	jo     0x410f40
  410fbf:	test   al,0xec
  410fc1:	ret    0x496c
  410fc4:	jl     0x410f64
  410fc6:	xchg   bp,ax
  410fc8:	bound  esp,QWORD PTR [ebx*1+0x690aba53]
  410fcf:	ins    DWORD PTR es:[edi],dx
  410fd0:	mov    esp,0x1a7589b6
  410fd5:	push   eax
  410fd6:	je     0x411020
  410fd8:	mov    ebx,0xb44a0440
  410fdd:	into   
  410fde:	ins    DWORD PTR es:[edi],dx
  410fdf:	jae    0x41101a
  410fe1:	sub    DWORD PTR [ebp+0x77],esp
  410fe4:	add    BYTE PTR [ebx+0x1156d2e5],bl
  410fea:	loope  0x411018
  410fec:	jno    0x41101f
  410fee:	pusha  
  410fef:	mov    ebp,0xff455cde
  410ff4:	pop    eax
  410ff5:	cmp    esp,DWORD PTR [ebx-0x74351634]
  410ffb:	mov    al,0x62
  410ffd:	mov    eax,ds:0x21d6c21b
  411002:	and    dh,BYTE PTR [edi+ebp*4-0x5d634dad]
  411009:	and    DWORD PTR [eax+eax*8],esi
  41100c:	lea    edx,[ebx+eax*8+0x1a]
  411010:	mov    ds:0x883c744e,eax
  411015:	cs stos DWORD PTR es:[edi],eax
  411017:	mov    dl,0xb2
  411019:	inc    esi
  41101a:	loope  0x411067
  41101c:	pop    edx
  41101d:	jp     0x41100f
  41101f:	hlt    
  411020:	jno    0x41109b
  411022:	call   0x69dd4df8
  411027:	jae    0x411074
  411029:	jns    0x41109a
  41102b:	nop
  41102c:	add    bl,BYTE PTR [ebx]
  41102e:	lahf   
  41102f:	ins    DWORD PTR es:[edi],dx
  411030:	pusha  
  411031:	clc    
  411032:	jb     0x411046
  411034:	sbb    DWORD PTR [edx-0x5c],esi
  411037:	gs inc edx
  411039:	jno    0x410fdf
  41103b:	dec    edi
  41103c:	or     al,BYTE PTR [esi-0x6d]
  41103f:	ficom  WORD PTR [eax+0x3da821a7]
  411045:	adc    al,0x95
  411047:	ja     0x411091
  411049:	aas    
  41104a:	scas   al,BYTE PTR es:[edi]
  41104b:	xchg   edx,eax
  41104c:	fwait
  41104d:	(bad)  
  41104e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41104f:	adc    cl,BYTE PTR [ecx+0x41]
  411052:	stos   DWORD PTR es:[edi],eax
  411053:	dec    ebx
  411054:	pop    ebx
  411055:	or     ecx,DWORD PTR [esi]
  411057:	adc    eax,0x37eac237
  41105c:	dec    edx
  41105d:	sbb    edi,DWORD PTR [ebx-0x6a]
  411060:	fidiv  DWORD PTR [ebx+0x17]
  411063:	es cli 
  411065:	int    0x31
  411067:	or     al,0x5e
  411069:	push   esi
  41106a:	cmp    BYTE PTR [esi+eax*2],0x99
  41106e:	data16 rol dl,cl
  411071:	call   0x378a:0x7454e269
  411078:	arpl   WORD PTR [esi+0x72e3f2ff],si
  41107e:	mov    esp,0x47b328a0
  411083:	cld    
  411084:	arpl   WORD PTR [edx+0x7147e8c5],dx
  41108a:	shr    BYTE PTR ds:0x68c88b96,cl
  411090:	sbb    DWORD PTR [esi+0x40e28265],eax
  411096:	push   ebx
  411097:	pop    ds
  411098:	dec    edi
  411099:	bswap  edx
  41109b:	push   ecx
  41109c:	xchg   esp,eax
  41109d:	push   es
  41109e:	scas   al,BYTE PTR es:[edi]
  41109f:	xchg   esi,eax
  4110a0:	out    0xd3,eax
  4110a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110a3:	adc    dl,BYTE PTR [ebx]
  4110a5:	jg     0x411105
  4110a7:	repnz out dx,eax
  4110a9:	mov    esi,0x176495d7
  4110ae:	adc    edi,edi
  4110b0:	test   eax,0x79f59b5f
  4110b5:	stos   BYTE PTR es:[edi],al
  4110b6:	shr    BYTE PTR [eax-0x463d77db],1
  4110bc:	cmp    ebp,DWORD PTR [edi-0x9a5b7b0]
  4110c2:	div    DWORD PTR [edi+0x2be3202c]
  4110c8:	add    edx,esp
  4110ca:	or     dl,bl
  4110cc:	inc    ebp
  4110cd:	and    ebx,DWORD PTR [ebx]
  4110cf:	add    al,0x98
  4110d1:	outs   dx,DWORD PTR ds:[esi]
  4110d2:	jp     0x4110d9
  4110d4:	mov    cl,0x53
  4110d6:	or     eax,0x44b57a4c
  4110db:	push   ds
  4110dc:	ret    
  4110dd:	mul    dh
  4110df:	pop    ebx
  4110e0:	icebp  
  4110e1:	xchg   ebp,eax
  4110e2:	int    0x68
  4110e4:	xor    BYTE PTR [edx+0x4a],bl
  4110e7:	repz (bad) [esp+edi*4-0x5a]
  4110ec:	sub    ecx,esi
  4110ee:	jle    0x41108c
  4110f0:	or     DWORD PTR [edx-0x53924a53],ebx
  4110f6:	ss adc al,0xa9
  4110f9:	sub    BYTE PTR [ebx],dl
  4110fb:	sub    al,0xd9
  4110fd:	popa   
  4110fe:	jne    0x4110db
  411100:	daa    
  411101:	push   0x780e38a9
  411106:	lods   al,BYTE PTR ds:[esi]
  411107:	or     DWORD PTR [edi+0x74],eax
  41110a:	push   0xa6f63b86
  41110f:	add    bh,cl
  411111:	mov    eax,ds:0x491cbaa
  411116:	cmp    DWORD PTR [eax],ecx
  411118:	push   esp
  411119:	nop
  41111a:	xchg   ecx,eax
  41111b:	push   eax
  41111c:	mov    esi,0xac5d4440
  411121:	in     eax,0xdd
  411123:	std    
  411124:	push   0xa12884f1
  411129:	sbb    BYTE PTR [ebx+edx*1],dh
  41112c:	and    DWORD PTR [edi+0x2db92831],esp
  411132:	shl    BYTE PTR [edx+0x26],1
  411135:	imul   edx,esp,0x4b
  411138:	stos   DWORD PTR es:[edi],eax
  411139:	xor    BYTE PTR [esi],0x3e
  41113c:	ds mov ebp,0x3cf5c33e
  411142:	je     0x411183
  411144:	sub    ah,cl
  411146:	repz mov edi,0x956f3e19
  41114c:	cmc    
  41114d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114e:	jbe    0x4111a8
  411150:	lahf   
  411151:	add    dl,BYTE PTR [esi]
  411153:	dec    esp
  411154:	shl    DWORD PTR [edx+0x5e],cl
  411157:	fnstenv [esi+0x45e97f83]
  41115d:	mov    ss,edx
  41115f:	and    DWORD PTR es:[eax+0xb3876e],ecx
  411166:	xchg   cl,ch
  411168:	(bad)  
  411169:	pop    edx
  41116a:	gs inc esi
  41116c:	adc    eax,0x23f3ce1b
  411171:	lds    ebp,FWORD PTR [edi-0x23b78265]
  411177:	loop   0x411192
  411179:	mov    BYTE PTR [edx+0x54d924cb],dh
  41117f:	dec    DWORD PTR [edx]
  411181:	inc    edi
  411182:	cmp    BYTE PTR [ebx-0xd],dl
  411185:	cmp    eax,0x38858b6e
  41118a:	xchg   ecx,eax
  41118b:	and    ch,BYTE PTR [ebx-0x57]
  41118e:	aas    
  41118f:	jmp    0xf72fbaaf
  411194:	push   ebx
  411195:	popf   
  411196:	ja     0x41118e
  411198:	test   al,0x67
  41119a:	(bad)  
  41119c:	pop    ecx
  41119d:	push   ebx
  41119e:	sbb    bh,ah
  4111a0:	mov    edi,0xbcc7f501
  4111a5:	outs   dx,DWORD PTR ds:[esi]
  4111a6:	lods   eax,DWORD PTR ds:[esi]
  4111a7:	leave  
  4111a8:	in     eax,0x7a
  4111aa:	out    0x4f,eax
  4111ac:	iret   
  4111ad:	pusha  
  4111ae:	adc    esi,DWORD PTR [eax+0xb]
  4111b1:	cdq    
  4111b2:	nop
  4111b3:	sbb    cl,ah
  4111b5:	in     eax,dx
  4111b6:	adc    dh,BYTE PTR [ecx+0x2c]
  4111b9:	sbb    dl,dh
  4111bb:	fcom   DWORD PTR [esi+0x73]
  4111be:	sub    eax,0x8efa4f1a
  4111c3:	fimul  WORD PTR [ecx]
  4111c5:	(bad)  
  4111c6:	lods   al,BYTE PTR ds:[esi]
  4111c7:	into   
  4111c8:	jns    0x411155
  4111ca:	inc    edx
  4111cb:	sbb    dh,BYTE PTR [edi+0x41]
  4111ce:	(bad)  
  4111cf:	test   al,0x92
  4111d1:	(bad)  
  4111d3:	idiv   BYTE PTR [edx-0x5c]
  4111d6:	inc    edi
  4111d7:	xor    ch,dh
  4111d9:	lds    edx,FWORD PTR [eax]
  4111db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111dc:	adc    bl,BYTE PTR [esi]
  4111de:	dec    edx
  4111df:	or     ebp,DWORD PTR [esi]
  4111e1:	test   edx,0xdc459cb9
  4111e7:	cvtps2pi mm0,QWORD PTR [edx-0x615849a6]
  4111ee:	xchg   BYTE PTR [ecx],cl
  4111f0:	leave  
  4111f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f2:	xchg   ebx,eax
  4111f3:	retf   0x8342
  4111f6:	arpl   di,sp
  4111f8:	ss pop ecx
  4111fa:	push   ebp
  4111fb:	les    esi,FWORD PTR [edx]
  4111fd:	loope  0x4111f8
  4111ff:	xor    edi,DWORD PTR [esi+ecx*4-0x3e]
  411203:	mov    edx,0xf7a641c7
  411208:	or     dl,BYTE PTR [ecx+eax*2]
  41120b:	cmp    DWORD PTR [ebx+0x73],eax
  41120e:	add    eax,0xf255f246
  411213:	fisub  WORD PTR [edi+0x28258199]
  411219:	sbb    eax,0x7cb6cd5c
  41121e:	xchg   ecx,eax
  41121f:	sub    DWORD PTR ds:0xd0fc78d4,ebx
  411225:	xchg   ebp,eax
  411226:	add    eax,0x6d88ea8f
  41122b:	lea    edx,[edi-0x20654101]
  411231:	fsubr  DWORD PTR [edx+edi*4]
  411234:	outs   dx,DWORD PTR ds:[esi]
  411235:	jg     0x411233
  411237:	mov    cs,WORD PTR [ecx+0x76]
  41123a:	cli    
  41123b:	test   DWORD PTR [ebx+0x3b347f1f],edi
  411241:	popa   
  411242:	es nop
  411244:	sub    eax,0xe086ba14
  411249:	push   ebx
  41124a:	scas   al,BYTE PTR es:[edi]
  41124b:	push   ebx
  41124c:	xchg   ebp,eax
  41124d:	retf   
  41124e:	push   0xa60b6088
  411253:	gs lock out 0x7f,eax
  411257:	popa   
  411258:	test   BYTE PTR [edx-0x72],dh
  41125b:	and    bh,ah
  41125d:	std    
  41125e:	mov    eax,ds:0x7ef50a4b
  411263:	xor    eax,0xa7d73d64
  411268:	dec    esp
  411269:	add    DWORD PTR [eax-0x2f89742f],ecx
  41126f:	pushf  
  411270:	dec    esp
  411271:	test   al,0xdd
  411273:	or     DWORD PTR [ecx-0x3ad08845],ecx
  411279:	xchg   esi,eax
  41127a:	scas   eax,DWORD PTR es:[edi]
  41127b:	int3   
  41127c:	adc    eax,DWORD PTR [edx]
  41127e:	outs   dx,DWORD PTR ds:[esi]
  41127f:	cli    
  411280:	dec    edx
  411281:	std    
  411282:	lods   eax,DWORD PTR ds:[esi]
  411283:	cmp    bl,BYTE PTR [ecx-0x74]
  411286:	cwde   
  411287:	sub    DWORD PTR es:[edi],0xffffffab
  41128b:	gs pop ecx
  41128d:	pop    ecx
  41128e:	push   ds
  41128f:	sub    ecx,DWORD PTR [ecx]
  411291:	jp     0x4112e5
  411293:	jecxz  0x41130c
  411295:	imul   ebx,DWORD PTR [edx-0x23],0x67060b7e
  41129c:	cli    
  41129d:	push   ebp
  41129e:	fcomp  QWORD PTR [edx+esi*8-0x64]
  4112a2:	gs std 
  4112a4:	inc    ebp
  4112a5:	cli    
  4112a6:	repz arpl WORD PTR [esi+0x49],ax
  4112aa:	aas    
  4112ab:	sahf   
  4112ac:	sub    BYTE PTR [edi-0x7eaacd47],bl
  4112b2:	inc    esp
  4112b3:	mov    esp,0x27503faa
  4112b8:	sub    eax,DWORD PTR [ebp-0x31]
  4112bb:	int    0x58
  4112bd:	repz mov bh,0xfe
  4112c0:	fcom   st(4)
  4112c2:	jmp    0x8447:0xe1d9b9ae
  4112c9:	pop    ecx
  4112ca:	clc    
  4112cb:	aaa    
  4112cc:	xchg   edi,eax
  4112cd:	ins    DWORD PTR es:[edi],dx
  4112ce:	gs je  0x41133f
  4112d1:	in     eax,dx
  4112d2:	pop    ds
  4112d3:	mov    dh,BYTE PTR [ecx]
  4112d5:	inc    esp
  4112d6:	or     bh,dh
  4112d8:	sbb    DWORD PTR [ebp+0x62b3fb04],ebp
  4112de:	push   0xfffffff4
  4112e0:	mov    dl,0xe9
  4112e2:	jne    0x411281
  4112e4:	jge    0x4112a3
  4112e6:	mov    edx,0x63b2fc40
  4112eb:	mov    al,0x83
  4112ed:	dec    edi
  4112ee:	jp     0x4112be
  4112f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112f1:	or     bl,dl
  4112f3:	das    
  4112f4:	jecxz  0x4112fd
  4112f6:	jl     0x411323
  4112f8:	mov    bl,0x15
  4112fa:	add    edi,ebp
  4112fc:	outs   dx,BYTE PTR ds:[esi]
  4112fd:	inc    eax
  4112fe:	mov    bl,0xa6
  411300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411301:	dec    ecx
  411302:	jg     0x411346
  411304:	mov    ds:0x393dd54b,eax
  411309:	popa   
  41130a:	push   ebp
  41130b:	es out dx,eax
  41130d:	mov    al,ds:0xee4ec540
  411312:	mov    esi,0x59fd7b3a
  411317:	adc    ch,BYTE PTR [edi]
  411319:	mov    es,WORD PTR [edx+0x6e]
  41131c:	sbb    BYTE PTR [eax-0x2ac29acf],0xc7
  411323:	jp     0x41134b
  411325:	mov    eax,cs
  411327:	dec    ebx
  411328:	dec    ecx
  411329:	or     al,0xea
  41132b:	stos   DWORD PTR es:[edi],eax
  41132c:	les    esi,FWORD PTR [edx]
  41132e:	inc    BYTE PTR [ebp-0x6d4e2866]
  411334:	cld    
  411335:	xor    DWORD PTR [edx+eiz*1-0x49],ebx
  411339:	in     eax,dx
  41133a:	jne    0x4112e4
  41133c:	retf   0x8478
  41133f:	mov    ds:0x1860e79b,al
  411344:	jne    0x4113c4
  411346:	adc    eax,0x5000d8a3
  41134b:	mov    bl,0xb1
  41134d:	imul   ecx,ecx,0x5ad4aa9a
  411353:	cmp    eax,0xc0ae3c72
  411358:	and    eax,0x793f2503
  41135d:	mov    bl,0xfd
  41135f:	out    dx,al
  411360:	and    ebx,edx
  411362:	loop   0x4113a5
  411364:	xor    esi,0x6b
  411367:	xor    ebx,DWORD PTR [eax-0x6b]
  41136a:	inc    ebx
  41136b:	mov    cl,0xda
  41136d:	jne    0x411368
  41136f:	dec    DWORD PTR [ecx+0x77]
  411372:	out    0x4c,al
  411374:	pop    esi
  411375:	xor    al,0xf1
  411377:	mov    eax,0x6643dd6c
  41137c:	or     al,0x1d
  41137e:	adc    eax,0xa0dda3da
  411383:	jo     0x41137a
  411385:	lock call 0xbb39aa59
  41138b:	popa   
  41138c:	mov    ds:0xf027fd10,eax
  411391:	pop    ecx
  411392:	push   cs
  411393:	or     ecx,DWORD PTR [ebx]
  411395:	sahf   
  411396:	aas    
  411397:	mov    edx,0x8af19137
  41139c:	push   es
  41139d:	int    0xa1
  41139f:	inc    ebp
  4113a0:	les    ebp,FWORD PTR [ecx+ebp*1]
  4113a3:	imul   esi,DWORD PTR [ebx-0x2a99476d],0x4f8c54f
  4113ad:	fisub  WORD PTR [ebx-0x2c]
  4113b0:	cwde   
  4113b1:	adc    BYTE PTR [edx],bl
  4113b3:	inc    eax
  4113b4:	sahf   
  4113b5:	mov    ch,0x25
  4113b7:	test   DWORD PTR [ebx+0x515c1f42],ecx
  4113bd:	xchg   esi,eax
  4113be:	loope  0x411373
  4113c0:	fwait
  4113c1:	push   eax
  4113c2:	cmp    BYTE PTR [edi],bl
  4113c4:	jmp    0xd30d:0x68c93987
  4113cb:	add    eax,0x1fe9c160
  4113d0:	ins    DWORD PTR es:[edi],dx
  4113d1:	fdivr  DWORD PTR ds:0xfeb4b1bd
  4113d7:	or     BYTE PTR [edx+0x3fbf4edb],cl
  4113dd:	mov    dh,0xde
  4113df:	xchg   edx,eax
  4113e0:	sbb    eax,0xeb693a2f
  4113e5:	sub    bl,BYTE PTR [edi]
  4113e7:	pop    ebx
  4113e8:	mov    edx,fs
  4113ea:	mov    DWORD PTR [eax-0x58eaa94c],eax
  4113f0:	adc    BYTE PTR [eax+0x35],ch
  4113f3:	in     eax,dx
  4113f4:	or     edx,edx
  4113f6:	add    edx,DWORD PTR [edi-0x28]
  4113f9:	in     eax,0xcb
  4113fb:	idiv   BYTE PTR [eax-0x6ae774fa]
  411401:	clc    
  411402:	lds    edi,FWORD PTR [eax]
  411404:	sub    al,0x46
  411406:	mov    ch,0x4b
  411408:	test   eax,0xe4ffe6d7
  41140d:	jg     0x411403
  41140f:	in     al,dx
  411410:	(bad)  
  411411:	jge    0x41144e
  411413:	(bad)  
  411414:	xor    BYTE PTR ds:0xb8936f46,0x5d
  41141b:	outs   dx,BYTE PTR ds:[esi]
  41141c:	dec    esi
  41141d:	pop    ecx
  41141e:	xchg   ecx,eax
  41141f:	bound  edi,QWORD PTR [ecx+0x7]
  411422:	adc    eax,0x381108bf
  411427:	leave  
  411428:	adc    BYTE PTR [eax-0x5d],dh
  41142b:	ret    
  41142c:	mov    ah,0x18
  41142e:	jb     0x4114ad
  411430:	mov    dh,0xc1
  411432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411433:	jo     0x41140e
  411435:	cwde   
  411436:	jns    0x4114a8
  411438:	or     eax,0xb515ea2b
  41143d:	les    edx,FWORD PTR [ecx+0x9]
  411440:	out    dx,eax
  411441:	je     0x4113f4
  411443:	cmp    al,0xb1
  411445:	out    dx,al
  411446:	shl    BYTE PTR [ebp-0x58059a6c],0x42
  41144d:	add    DWORD PTR [eax+ebp*8+0x596b7ac8],edx
  411454:	cld    
  411455:	test   DWORD PTR [ebp-0x6b],esp
  411458:	push   ecx
  411459:	test   al,0x73
  41145b:	push   ds
  41145c:	mov    eax,0xaa61bd85
  411461:	retf   
  411462:	adc    eax,0xc948bfde
  411467:	lds    edx,FWORD PTR [ebx]
  411469:	in     eax,0x2a
  41146b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41146c:	and    BYTE PTR [esi+0x7b6ab473],al
  411472:	das    
  411473:	neg    BYTE PTR [edi+0x1]
  411476:	aas    
  411477:	fisubr WORD PTR [ecx]
  411479:	mov    ah,0x19
  41147b:	fsub   st,st(6)
  41147d:	scas   al,BYTE PTR es:[edi]
  41147e:	push   ss
  41147f:	xchg   esi,eax
  411480:	cmp    ebx,DWORD PTR [ecx-0x63c8ab08]
  411486:	inc    edi
  411487:	mov    eax,ds:0xff69de11
  41148c:	popa   
  41148d:	sub    eax,0x4e787c8b
  411492:	add    BYTE PTR [eax+ecx*1],dh
  411495:	popa   
  411496:	cmp    DWORD PTR [esi+0x4b],0x2be992f
  41149d:	out    dx,al
  41149e:	dec    ecx
  41149f:	sahf   
  4114a0:	sbb    BYTE PTR fs:[esi-0x3f6be907],al
  4114a7:	jbe    0x411501
  4114a9:	and    BYTE PTR [eax+0x4b432fbb],ch
  4114af:	jne    0x4114ef
  4114b1:	std    
  4114b2:	mov    ecx,0x442b089f
  4114b7:	adc    bh,BYTE PTR [ecx]
  4114b9:	aad    0xdd
  4114bb:	cmc    
  4114bc:	add    al,dl
  4114be:	dec    edx
  4114bf:	dec    ebx
  4114c0:	adc    bh,dh
  4114c2:	lea    esp,ds:0x45eafcac
  4114c8:	xor    edx,ecx
  4114ca:	int    0x4b
  4114cc:	daa    
  4114cd:	push   edi
  4114ce:	jne    0x4114cd
  4114d0:	dec    ecx
  4114d1:	int    0x71
  4114d3:	jb     0x4114f6
  4114d5:	adc    bl,BYTE PTR [edx+0x7ead5839]
  4114db:	sbb    eax,0xa4a7826a
  4114e0:	xlat   BYTE PTR ds:[ebx]
  4114e1:	arpl   WORD PTR [ecx],dx
  4114e3:	icebp  
  4114e4:	not    BYTE PTR [ebp+0x53b1a3c1]
  4114ea:	sub    eax,0x752b1c6c
  4114ef:	add    ch,ah
  4114f1:	aas    
  4114f2:	push   esp
  4114f3:	fst    QWORD PTR [edx-0x7b]
  4114f6:	mov    ds:0x52588902,eax
  4114fb:	jl     0x411540
  4114fd:	pop    edi
  4114fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ff:	loopne 0x4114e3
  411501:	cmp    al,0xd2
  411503:	inc    esi
  411504:	mov    ebp,0x36f57ba6
  411509:	adc    ah,cl
  41150b:	iret   
  41150c:	gs loope 0x411582
  41150f:	adc    DWORD PTR [eax-0x36f1c643],esp
  411515:	jl     0x4114b0
  411517:	mov    dl,0x77
  411519:	in     eax,0xa0
  41151b:	xchg   ebp,eax
  41151c:	pop    edi
  41151d:	sbb    al,0xcf
  41151f:	shr    BYTE PTR [ebp-0x7e],cl
  411522:	or     ecx,DWORD PTR [ebx+0x10]
  411525:	je     0x41154f
  411527:	outs   dx,DWORD PTR ds:[esi]
  411528:	cli    
  411529:	(bad)  
  41152a:	cmp    dh,BYTE PTR [edi-0x4a]
  41152d:	pop    eax
  41152e:	fsubr  QWORD PTR [edx-0x78]
  411531:	cmp    BYTE PTR [esi+eiz*1],dh
  411534:	mov    bh,0x4
  411536:	inc    edi
  411537:	mov    edi,0x6a4de525
  41153c:	cmp    BYTE PTR [ebx-0x58],dh
  41153f:	sar    dh,0x50
  411542:	outs   dx,DWORD PTR ds:[esi]
  411543:	clc    
  411544:	pop    ecx
  411545:	data16 addr16 sub cl,cl
  411549:	stos   DWORD PTR es:[edi],eax
  41154a:	jnp    0x4115b9
  41154c:	dec    esi
  41154d:	popa   
  41154e:	cmp    eax,0x9b5ae148
  411553:	mov    ds:0xb783e24c,al
  411558:	pop    esi
  411559:	or     bh,cl
  41155b:	in     al,dx
  41155c:	(bad)  
  41155d:	outs   dx,DWORD PTR ds:[esi]
  41155e:	cdq    
  41155f:	xchg   BYTE PTR fs:[esp+edx*8-0x397aa761],ch
  411567:	cmc    
  411568:	xor    DWORD PTR [edi],edx
  41156a:	stc    
  41156b:	dec    esi
  41156c:	add    al,0x3a
  41156e:	leave  
  41156f:	scas   eax,DWORD PTR es:[edi]
  411570:	xor    eax,0x1b55d764
  411575:	pop    edi
  411576:	inc    ebp
  411577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411578:	cmp    eax,0xdb9e9bd
  41157d:	mov    dl,0xfa
  41157f:	xor    ebx,DWORD PTR [ebp+0x6f]
  411582:	and    ebp,DWORD PTR [esi+esi*1]
  411585:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411586:	daa    
  411587:	sbb    ah,BYTE PTR [esi-0x2d656ddc]
  41158d:	adc    edi,ebx
  41158f:	xor    ch,BYTE PTR [ecx+0x3c3280aa]
  411595:	in     al,dx
  411596:	inc    ebp
  411597:	iret   
  411598:	out    0x12,eax
  41159a:	aam    0x87
  41159c:	and    DWORD PTR [ebp+0x70779430],ebp
  4115a2:	inc    eax
  4115a3:	inc    edi
  4115a4:	mov    dl,0xc8
  4115a6:	ficomp WORD PTR [ecx-0x553fa29c]
  4115ac:	pop    eax
  4115ad:	mov    al,ds:0xa3821421
  4115b2:	xor    ebx,DWORD PTR [edx+0x45]
  4115b5:	int    0x95
  4115b7:	xor    DWORD PTR [ecx-0x46],0xffffff8a
  4115bb:	in     al,dx
  4115bc:	and    al,ch
  4115be:	aad    0x1c
  4115c0:	bound  ecx,QWORD PTR [edx]
  4115c2:	sub    bh,BYTE PTR [ebx-0x30]
  4115c5:	sbb    al,0xca
  4115c7:	adc    eax,0xbdee6736
  4115cc:	push   es
  4115cd:	retf   0xce73
  4115d0:	dec    edi
  4115d1:	adc    bl,BYTE PTR [ebx]
  4115d3:	cmp    ebp,DWORD PTR [eax+0x746f4a55]
  4115d9:	test   DWORD PTR [edi+0x7a],ebx
  4115dc:	retf   
  4115dd:	mov    eax,ds:0x618fff77
  4115e2:	les    eax,FWORD PTR [eax+0x151c7d6a]
  4115e8:	jmp    0x7d12641
  4115ed:	push   0x1e
  4115ef:	pop    esp
  4115f0:	adc    ch,dl
  4115f2:	loopne 0x4115e9
  4115f4:	ret    
  4115f5:	or     DWORD PTR [edx+0x7b],esp
  4115f8:	ret    
  4115f9:	xchg   ecx,eax
  4115fa:	mov    edi,DWORD PTR [esi+0x41]
  4115fd:	pop    ecx
  4115fe:	in     al,0xb2
  411600:	out    0x23,al
  411602:	cli    
  411603:	jno    0x41164b
  411605:	push   es
  411606:	lahf   
  411607:	es or  eax,0x773f94b1
  41160d:	mov    WORD PTR [ebx-0x516b70f2],fs
  411613:	jnp    0x411625
  411615:	pop    esp
  411616:	xor    edi,DWORD PTR [ebx+ecx*8]
  411619:	lods   al,BYTE PTR ds:[esi]
  41161a:	xchg   ebp,eax
  41161b:	xchg   ebx,eax
  41161c:	and    BYTE PTR [edi+eax*1+0x294e557f],0xb4
  411624:	sub    DWORD PTR [eax+0x72bdfa15],edx
  41162a:	or     cl,cl
  41162c:	shr    BYTE PTR [ebp+0x3c],cl
  41162f:	dec    ebx
  411630:	fsub   st,st(5)
  411632:	mov    DWORD PTR [esi+edx*4-0x4],ebx
  411636:	shr    BYTE PTR [ebp-0x21],1
  411639:	xor    dh,ah
  41163b:	pop    esp
  41163c:	push   ecx
  41163d:	ins    DWORD PTR es:[edi],dx
  41163e:	and    eax,0x12accb71
  411643:	add    ebp,esi
  411645:	mov    edx,0xe133389
  41164a:	nop
  41164b:	pop    ecx
  41164c:	cli    
  41164d:	or     eax,0x3fd924fc
  411652:	mov    ah,0x57
  411654:	mov    cl,0xec
  411656:	rcl    DWORD PTR [esp+esi*2+0x59812d2d],1
  41165d:	arpl   WORD PTR [edx+ebp*1+0x6ce09038],ax
  411664:	push   ss
  411665:	aas    
  411666:	push   es
  411667:	pop    esi
  411668:	adc    al,0xd5
  41166a:	je     0x411608
  41166c:	jbe    0x41160b
  41166e:	jno    0x411643
  411670:	(bad)  
  411671:	fistp  DWORD PTR [ebp+eax*4-0x43]
  411675:	sub    ebp,DWORD PTR [esp+ebp*4]
  411678:	adc    BYTE PTR [edx-0x13fc0e0],dl
  41167e:	jb     0x411690
  411680:	add    BYTE PTR [edx-0x13],dh
  411683:	inc    ebp
  411684:	jmp    0x114f:0x60613fda
  41168b:	popa   
  41168c:	jmp    0x34585874
  411691:	les    edx,FWORD PTR [esi+ebx*2-0x36544284]
  411698:	scas   eax,DWORD PTR es:[edi]
  411699:	dec    eax
  41169a:	xor    ebp,DWORD PTR [edx]
  41169c:	repz sbb BYTE PTR [ebp-0x261884b3],dh
  4116a3:	or     BYTE PTR [esi],cl
  4116a5:	inc    ebp
  4116a6:	push   0x3695b830
  4116ab:	(bad)  [ebx-0x64ff9db1]
  4116b1:	push   ebx
  4116b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b3:	out    0xc7,eax
  4116b5:	sbb    BYTE PTR ds:0xf8cbbd58,bl
  4116bb:	sar    BYTE PTR [ecx],0xa2
  4116be:	add    dh,BYTE PTR [edi]
  4116c0:	inc    edi
  4116c1:	shl    dh,1
  4116c3:	lods   eax,DWORD PTR ds:[esi]
  4116c4:	dec    ebp
  4116c5:	xchg   ebx,eax
  4116c6:	push   esi
  4116c7:	xchg   esp,eax
  4116c8:	sub    esp,DWORD PTR [edx-0x4b]
  4116cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116cc:	std    
  4116cd:	ja     0x411705
  4116cf:	dec    ebx
  4116d0:	jbe    0x41167c
  4116d2:	mov    eax,ds:0xa11a8263
  4116d7:	adc    DWORD PTR [eax],ecx
  4116d9:	(bad)  
  4116db:	pop    ecx
  4116dc:	adc    DWORD PTR [eax+0x1f],edi
  4116df:	fmul   QWORD PTR [ebp+0x5d]
  4116e2:	loope  0x4116f9
  4116e4:	jge    0x411691
  4116e6:	jge    0x41169d
  4116e8:	(bad)  
  4116ea:	push   ds
  4116eb:	shl    DWORD PTR [ecx-0x1bb13581],0x73
  4116f2:	cmp    BYTE PTR [edi],0x60
  4116f5:	pusha  
  4116f6:	out    0x32,eax
  4116f8:	xor    eax,0x51c15244
  4116fd:	fisubr WORD PTR [eax+0x65]
  411700:	repz aam 0x15
  411703:	push   ds
  411704:	inc    ecx
  411705:	pop    edi
  411707:	and    eax,0x57be90b3
  41170c:	mov    al,0xee
  41170e:	test   BYTE PTR [ecx-0x11],al
  411711:	jg     0x411704
  411713:	fwait
  411714:	dec    esp
  411715:	bound  ecx,QWORD PTR [ebx-0x50]
  411718:	fdivrp st(1),st
  41171a:	or     DWORD PTR [edx-0x1821fa75],edx
  411720:	and    edi,ebp
  411722:	fs jnp 0x411778
  411725:	xchg   ebp,eax
  411726:	pop    ebx
  411727:	push   ss
  411728:	jne    0x41179e
  41172a:	or     bl,BYTE PTR [edx+0x3e0b147d]
  411730:	test   eax,0x3af657df
  411735:	dec    edi
  411736:	jle    0x411784
  411738:	and    al,BYTE PTR [ebx]
  41173a:	mov    ah,0x47
  41173c:	mov    edi,0xccb64f8b
  411741:	imul   esp,DWORD PTR [esi-0x23],0x51
  411745:	(bad)  
  411746:	lock sub al,0xbd
  411749:	jbe    0x4116ee
  41174b:	repnz mov ebp,0x40367322
  411751:	aam    0x20
  411753:	in     al,dx
  411754:	ret    0xf5d4
  411757:	xor    ch,BYTE PTR [edi]
  411759:	out    0x64,eax
  41175b:	mov    al,BYTE PTR [ebx-0x22]
  41175e:	inc    edx
  41175f:	jecxz  0x41177e
  411761:	mov    eax,ds:0x7d41f86f
  411766:	and    al,0xc5
  411768:	pop    edx
  411769:	push   edx
  41176a:	inc    eax
  41176b:	jg     0x411783
  41176d:	cmp    dh,BYTE PTR [esp+edi*8-0x30233e43]
  411774:	xor    al,0x57
  411776:	add    eax,0xc65ba050
  41177b:	popf   
  41177c:	xchg   ebp,eax
  41177d:	add    al,0xbd
  41177f:	add    edi,DWORD PTR [edi+eax*8-0x586aa2ec]
  411786:	mov    al,0xb7
  411788:	cli    
  411789:	ret    0x4bb1
  41178c:	lods   al,BYTE PTR ds:[esi]
  41178d:	push   es
  41178e:	sub    DWORD PTR [esi+ebp*4-0x73],edi
  411792:	loopne 0x411766
  411794:	mov    ebp,DWORD PTR [ebx+0x7e]
  411797:	push   0xfa45fd71
  41179c:	jae    0x4117e2
  41179e:	gs or  eax,0x88187672
  4117a4:	loope  0x41177b
  4117a6:	sbb    dh,BYTE PTR [edi]
  4117a8:	aaa    
  4117a9:	dec    edi
  4117aa:	xor    bl,bl
  4117ac:	std    
  4117ad:	xor    ebp,edx
  4117af:	push   edi
  4117b0:	imul   eax,esi,0x55584835
  4117b6:	sbb    al,BYTE PTR [edi-0x3ff329ab]
  4117bc:	jmp    0xc92c2e4
  4117c1:	jmp    0x2c36:0x1a960cf3
  4117c8:	popa   
  4117c9:	xchg   ebx,eax
  4117ca:	dec    eax
  4117cb:	mov    ch,0xbf
  4117cd:	mov    eax,ds:0x43ae28a4
  4117d2:	sbb    ch,BYTE PTR [edx+0x7f62f6d8]
  4117d8:	ds jecxz 0x4117f8
  4117db:	sar    DWORD PTR [ecx+eiz*8+0x3a],cl
  4117df:	nop
  4117e0:	adc    al,BYTE PTR [ebx+0x68e482bb]
  4117e6:	add    BYTE PTR [edi-0x15],bh
  4117e9:	je     0x4117dc
  4117eb:	mov    DWORD PTR [ebx+0xe],eax
  4117ee:	and    al,0xfa
  4117f0:	pop    ds
  4117f1:	mov    ebx,0xbeefc566
  4117f6:	fimul  DWORD PTR [ebx+0x75c41e91]
  4117fc:	je     0x41179a
  4117fe:	jnp    0x411798
  411800:	mov    cl,0x8c
  411802:	std    
  411803:	mov    ch,al
  411805:	lock mov dh,0xfd
  411808:	push   0x3a60e298
  41180d:	call   DWORD PTR [eax+0x4e168255]
  411813:	(bad)  
  411814:	cmp    BYTE PTR [edx-0x1c],al
  411817:	aad    0x57
  411819:	imul   edx,DWORD PTR ds:0x45d6bb7c,0xcca0ac54
  411823:	(bad)  
  411824:	idiv   BYTE PTR [esi-0x35b02be0]
  41182a:	aad    0x22
  41182c:	inc    eax
  41182d:	inc    edi
  41182e:	inc    eax
  41182f:	int    0xd9
  411831:	ficom  WORD PTR [eax-0x6ae1c35f]
  411837:	mov    ch,0x40
  411839:	in     eax,dx
  41183a:	jecxz  0x411804
  41183c:	jl     0x4118a5
  41183e:	dec    edi
  41183f:	lock dec esi
  411841:	ror    DWORD PTR [esi],cl
  411843:	sbb    BYTE PTR [ecx-0x54],0x98
  411847:	sub    BYTE PTR [edx+0x64fb51a6],al
  41184d:	out    0xd9,eax
  41184f:	sub    al,0xe2
  411851:	sbb    DWORD PTR [edi+eax*1+0x28],0xe61ffaa0
  411859:	pop    esi
  41185a:	nop
  41185b:	ja     0x4117f0
  41185d:	and    al,al
  41185f:	mov    WORD PTR [ebp-0x1a41915a],fs
  411865:	repz push ebp
  411867:	in     al,dx
  411868:	daa    
  411869:	fisttp DWORD PTR [ebp-0x67]
  41186c:	sbb    DWORD PTR [ebx+edi*1+0x15],edi
  411870:	xchg   ebp,eax
  411871:	mov    ebx,0xad3cff29
  411876:	repz test eax,0xc455a848
  41187c:	or     eax,0xb36eb83
  411881:	ret    
  411882:	mov    BYTE PTR [ecx+0x79],cl
  411885:	mov    cl,0xa7
  411887:	cmp    al,0x95
  411889:	dec    esp
  41188a:	cmp    eax,0x29ba07d8
  41188f:	pop    ecx
  411890:	pop    ecx
  411891:	loop   0x411872
  411893:	into   
  411894:	and    eax,0x994dedc4
  411899:	fs ja  0x4118c2
  41189c:	add    esp,DWORD PTR [ebp-0x55]
  41189f:	jl     0x4118a1
  4118a1:	stc    
  4118a2:	call   0x6ec88e03
  4118a7:	sbb    al,0x85
  4118a9:	call   0x2774:0xffc12d8d
  4118b0:	pop    ecx
  4118b1:	mov    bh,BYTE PTR [ecx+0x39]
  4118b4:	add    eax,0xdf0002fa
  4118b9:	push   eax
  4118ba:	push   eax
  4118bb:	mov    BYTE PTR [eax-0x64],al
  4118be:	xchg   edi,eax
  4118bf:	sub    DWORD PTR [edx-0x15e9d972],ecx
  4118c5:	pop    ds
  4118c6:	pop    es
  4118c7:	out    dx,eax
  4118c8:	mov    ecx,DWORD PTR [ebp+edx*2+0x22]
  4118cc:	jecxz  0x4118f4
  4118ce:	jp     0x4118c5
  4118d0:	sub    al,0x3e
  4118d2:	loope  0x41191a
  4118d4:	xchg   edx,eax
  4118d5:	popa   
  4118d6:	mov    ah,0x4d
  4118d8:	clc    
  4118d9:	repz push ebp
  4118db:	or     esi,eax
  4118dd:	sub    esp,ebx
  4118df:	sbb    dl,BYTE PTR [ebp-0x3089b2e9]
  4118e5:	icebp  
  4118e6:	fsub   DWORD PTR [ecx-0x6a9ee2ca]
  4118ec:	push   edi
  4118ed:	fwait
  4118ee:	mov    ah,0xf1
  4118f0:	push   ebp
  4118f1:	int    0x51
  4118f3:	(bad)  [ebx-0x33ebdd5c]
  4118f9:	daa    
  4118fa:	xchg   ecx,eax
  4118fb:	imul   edx,DWORD PTR [edi-0x534fc0d5],0x6e3eea2b
  411905:	dec    eax
  411906:	cmp    eax,0x63fc71d0
  41190b:	(bad)  
  41190c:	and    ebp,DWORD PTR [ebx-0x3e]
  41190f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411910:	xor    cl,0x9f
  411913:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411914:	dec    edx
  411915:	xchg   ebx,eax
  411916:	cmp    eax,0x3537c709
  41191b:	mov    esp,0x4cce54bc
  411920:	gs push esi
  411922:	mov    bl,0x3f
  411924:	xchg   esp,eax
  411925:	out    dx,eax
  411926:	mov    bh,0x54
  411928:	les    ebx,FWORD PTR [ecx]
  41192a:	pop    edx
  41192b:	bound  esp,QWORD PTR [ecx]
  41192d:	(bad)  
  41192e:	shl    DWORD PTR [esi+0x3df252b5],1
  411934:	mov    ebx,0x8c8f1f6b
  411939:	call   0x92eb643a
  41193e:	enter  0xb953,0x73
  411942:	sub    BYTE PTR [esi+0x54ea830b],bl
  411948:	jb     0x411949
  41194a:	imul   esp,ecx,0xb2d39f71
  411950:	icebp  
  411951:	fcomp  DWORD PTR [edx]
  411953:	pop    es
  411954:	pushf  
  411955:	mov    WORD PTR [ebx],?
  411957:	and    bl,ch
  411959:	push   ss
  41195a:	or     DWORD PTR [ecx+0xd0efe3a],ecx
  411960:	jno    0x4119ba
  411962:	push   0xeac1cd51
  411967:	in     eax,0x3e
  411969:	lock stos DWORD PTR es:[edi],eax
  41196b:	loope  0x4119d4
  41196d:	inc    ebx
  41196e:	repnz pop eax
  411970:	lock addr16 mov ah,0x10
  411974:	xchg   ecx,eax
  411975:	adc    al,0x29
  411977:	sbb    BYTE PTR [ecx+0x51165570],dl
  41197d:	cld    
  41197e:	dec    esp
  41197f:	jns    0x4119d1
  411981:	adc    edi,ebx
  411983:	jno    0x4119c7
  411985:	fsubr  DWORD PTR [edi]
  411987:	mov    gs,WORD PTR [eax+0x4d6855f1]
  41198d:	cwde   
  41198e:	leave  
  41198f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411990:	mov    edi,0xb54aede6
  411995:	sub    al,0xb
  411997:	mov    ds:0x7ce4f26a,eax
  41199c:	dec    esp
  41199d:	jecxz  0x4119e8
  41199f:	es push 0x5a
  4119a2:	sub    ah,BYTE PTR [ebx]
  4119a4:	lahf   
  4119a5:	int    0x25
  4119a7:	jo     0x411986
  4119a9:	sbb    ecx,esi
  4119ab:	xor    eax,0xf9209615
  4119b0:	daa    
  4119b1:	(bad)  [eax-0x643e665e]
  4119b7:	retf   0x6191
  4119ba:	xor    al,0xa2
  4119bc:	sbb    BYTE PTR [ebx+0x75d63233],ah
  4119c2:	jae    0x411a20
  4119c4:	xchg   BYTE PTR [esi+eax*4],dh
  4119c7:	(bad)  
  4119c9:	mov    bl,0x13
  4119cb:	imul   ebp,DWORD PTR [ebp-0x1f],0x784be526
  4119d2:	out    dx,al
  4119d3:	loope  0x4119e4
  4119d5:	retf   
  4119d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119d7:	inc    ebx
  4119d8:	sbb    esi,DWORD PTR [eax+0x30]
  4119db:	out    dx,eax
  4119dc:	push   cs
  4119dd:	mov    edi,0x62a92f65
  4119e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e3:	cwde   
  4119e4:	es aam 0x90
  4119e7:	mov    eax,ds:0x1bf5e809
  4119ec:	sbb    dl,BYTE PTR [ebx+0x28]
  4119ef:	loope  0x4119cd
  4119f1:	jne    0x4119ae
  4119f3:	dec    esp
  4119f4:	rcr    DWORD PTR [esi+0x3d],1
  4119f7:	retf   0x3963
  4119fa:	sbb    al,0x4
  4119fc:	cli    
  4119fd:	mov    dl,0x5c
  4119ff:	loop   0x4119de
  411a01:	xchg   BYTE PTR [ecx],bh
  411a03:	in     eax,dx
  411a04:	popa   
  411a05:	mov    esp,0x15f74a85
  411a0a:	mov    DWORD PTR [eax],esp
  411a0c:	mov    eax,ds:0xcee988ba
  411a11:	fwait
  411a12:	retf   
  411a13:	push   es
  411a14:	sub    ebx,DWORD PTR [edi-0x4f]
  411a17:	inc    edx
  411a18:	(bad)  
  411a19:	cdq    
  411a1a:	xchg   ecx,eax
  411a1b:	pop    edi
  411a1c:	vmwrite ebx,DWORD PTR [eax]
  411a1f:	addr16 test eax,0x6c840165
  411a25:	loopne 0x411a4a
  411a27:	fnstcw WORD PTR [edi]
  411a29:	xor    al,ah
  411a2b:	test   DWORD PTR [esi],esi
  411a2d:	xor    esp,edx
  411a2f:	rcr    DWORD PTR [esi],1
  411a31:	jae    0x4119b6
  411a33:	sbb    eax,0xb0766937
  411a38:	retf   
  411a39:	xor    eax,0x1743b888
  411a3e:	push   eax
  411a3f:	xchg   ebp,eax
  411a40:	ret    0xf363
  411a43:	push   0x25
  411a45:	jge    0x411ab2
  411a47:	pop    edi
  411a48:	push   es
  411a49:	jge    0x411a20
  411a4b:	mov    ds:0x58b3cd07,eax
  411a50:	jmp    0x411aa4
  411a52:	into   
  411a53:	mov    ebp,0x989758b2
  411a58:	xor    al,0xeb
  411a5a:	iret   
  411a5b:	mov    esp,ds
  411a5d:	dec    ecx
  411a5e:	push   eax
  411a5f:	gs push edx
  411a61:	adc    eax,0x52e6419d
  411a66:	dec    ebp
  411a67:	inc    ecx
  411a68:	push   ecx
  411a69:	pop    ds
  411a6a:	popf   
  411a6b:	sbb    BYTE PTR [edx-0x62985a9e],cl
  411a71:	pushf  
  411a72:	lods   al,BYTE PTR ds:[esi]
  411a73:	push   esi
  411a74:	bound  edi,QWORD PTR [edi]
  411a76:	inc    esi
  411a77:	xchg   esp,eax
  411a78:	push   ebp
  411a79:	clc    
  411a7a:	jnp    0x411abe
  411a7c:	fcom   DWORD PTR [eax]
  411a7e:	neg    BYTE PTR [ebx-0x28db0126]
  411a84:	lahf   
  411a85:	repnz and eax,0x836b0411
  411a8b:	add    dl,BYTE PTR [ebp+0x125dbd4a]
  411a91:	(bad)
  411a94:	push   esp
  411a95:	icebp  
  411a96:	mov    ah,0x77
  411a98:	inc    ebp
  411a99:	or     BYTE PTR [edx],dl
  411a9b:	jmp    0x4a3622fb
  411aa0:	das    
  411aa1:	inc    edx
  411aa2:	je     0x411abd
  411aa4:	push   esi
  411aa5:	not    DWORD PTR [edx+0x15592144]
  411aab:	sub    ecx,eax
  411aad:	mov    ebp,0x52832cfa
  411ab2:	or     DWORD PTR [ebp+0x45],ecx
  411ab5:	jno    0x411ad8
  411ab7:	fsubrp st(3),st
  411ab9:	mov    dh,0x6f
  411abb:	out    dx,al
  411abc:	push   ds
  411abd:	int    0x55
  411abf:	xchg   BYTE PTR [eax-0x3a4aac85],bh
  411ac5:	pushf  
  411ac6:	and    al,0xb2
  411ac8:	call   0x5fc03fa2
  411acd:	(bad)  
  411ace:	js     0x411a67
  411ad0:	add    eax,0xc1484181
  411ad5:	scas   eax,DWORD PTR es:[edi]
  411ad6:	rcr    DWORD PTR [ebx-0x3d8f0b87],1
  411adc:	stos   DWORD PTR es:[edi],eax
  411add:	mov    cl,0x6e
  411adf:	test   BYTE PTR [ebp+edx*2+0x4d3f0bba],0x87
  411ae7:	jae    0x411a87
  411ae9:	loop   0x411aa1
  411aeb:	pop    edx
  411aec:	mov    ecx,0x58ae0191
  411af1:	push   edx
  411af2:	shl    DWORD PTR [eax+eiz*8],1
  411af5:	pop    esi
  411af6:	popa   
  411af7:	pop    esi
  411af8:	call   0x6025:0xee18b766
  411aff:	aam    0x1e
  411b01:	push   0x5c
  411b03:	jge    0x411acd
  411b05:	lods   eax,DWORD PTR ds:[esi]
  411b06:	xchg   ebp,eax
  411b07:	push   edx
  411b08:	mov    eax,ebp
  411b0a:	push   0x55d6ef0b
  411b0f:	mov    dl,0xb1
  411b11:	outs   dx,BYTE PTR ds:[esi]
  411b12:	and    eax,0x6cdda8ef
  411b17:	adc    cl,cl
  411b19:	dec    ebx
  411b1a:	and    bl,dh
  411b1c:	mov    al,0x4f
  411b1e:	std    
  411b1f:	jbe    0x411b78
  411b21:	and    DWORD PTR [edi-0x3f],eax
  411b24:	cld    
  411b25:	fiadd  DWORD PTR [eax+0x3570951a]
  411b2b:	inc    edi
  411b2c:	out    0xd2,al
  411b2e:	ret    0x48c2
  411b31:	gs (bad) 
  411b34:	inc    ebp
  411b35:	mov    ebp,0x43d533b1
  411b3a:	lds    ebx,FWORD PTR [edi]
  411b3c:	mov    ebp,0x72a6c038
  411b41:	loope  0x411b79
  411b43:	nop
  411b44:	pop    es
  411b45:	out    0xdc,eax
  411b47:	jo     0x411b87
  411b49:	mov    bl,0x62
  411b4b:	jo     0x411b68
  411b4d:	aaa    
  411b4e:	lds    esp,FWORD PTR [eax-0x68f177a3]
  411b54:	xlat   BYTE PTR ds:[ebx]
  411b55:	mov    eax,ds:0x71f8c8b8
  411b5a:	xchg   ebx,eax
  411b5b:	mov    cl,BYTE PTR [ebp-0x8]
  411b5e:	mov    bl,0xf2
  411b60:	and    esp,DWORD PTR [ebp+0x46]
  411b63:	(bad)  [eax+0x5c7a6d75]
  411b69:	push   edi
  411b6a:	jmp    0xebaf6609
  411b6f:	cli    
  411b70:	lahf   
  411b71:	inc    si
  411b73:	cmp    eax,0xd6cadfd1
  411b78:	(bad)  
  411b79:	aas    
  411b7a:	rol    BYTE PTR [eax+esi*8],cl
  411b7d:	mov    WORD PTR [edx],?
  411b7f:	sti    
  411b80:	mov    ebp,0x325ee779
  411b85:	mov    ch,0x3c
  411b87:	xchg   ecx,eax
  411b88:	imul   esp,DWORD PTR [esi+edx*2-0x1ed52246],0xffffff9c
  411b90:	out    dx,al
  411b91:	xchg   BYTE PTR [edx+0x3b],dh
  411b94:	icebp  
  411b95:	dec    edi
  411b96:	or     esi,DWORD PTR [edi+0x17622a3e]
  411b9c:	fisub  WORD PTR [eax-0x339680b7]
  411ba2:	and    esp,DWORD PTR [ecx+0x6e3dd15e]
  411ba8:	push   0x35
  411baa:	cwde   
  411bab:	leave  
  411bac:	push   ss
  411bad:	mov    cs,WORD PTR [ecx]
  411baf:	pop    es
  411bb0:	gs leave 
  411bb2:	xlat   BYTE PTR ds:[ebx]
  411bb3:	mov    BYTE PTR [esi],ch
  411bb5:	pop    es
  411bb6:	test   eax,0xaa914c8
  411bbb:	xchg   esi,ebp
  411bbd:	fimul  WORD PTR [eax-0x7eb80c93]
  411bc3:	jnp    0x411b99
  411bc5:	test   al,0x62
  411bc7:	sbb    al,0xe2
  411bc9:	es ret 
  411bcb:	idiv   BYTE PTR [ebx-0x7a]
  411bce:	pop    ecx
  411bcf:	jmp    0x411bb5
  411bd1:	(bad)  
  411bd2:	stos   DWORD PTR es:[edi],eax
  411bd3:	rol    ah,cl
  411bd5:	cwde   
  411bd6:	jl     0x411b90
  411bd8:	inc    eax
  411bd9:	jmp    0xc11ffa8c
  411bde:	loop   0x411bc9
  411be0:	jbe    0x411bd8
  411be2:	cwde   
  411be3:	aad    0x21
  411be5:	bound  eax,QWORD PTR [esi-0x57]
  411be8:	xlat   BYTE PTR ds:[ebx]
  411be9:	dec    edi
  411bea:	mov    ecx,0x5185c9b
  411bef:	dec    ecx
  411bf0:	jb     0x411c26
  411bf2:	jns    0x411c4f
  411bf4:	popf   
  411bf5:	lods   al,BYTE PTR ds:[esi]
  411bf6:	test   BYTE PTR [ebp-0x38],dh
  411bf9:	and    eax,0x61a05b14
  411bfe:	ret    0x87fc
  411c01:	arpl   WORD PTR [ebx-0x69],dx
  411c04:	pop    edi
  411c05:	mov    bl,0xca
  411c07:	push   0x62
  411c09:	add    BYTE PTR [edx-0x76],cl
  411c0c:	mov    ecx,0xa53bed4a
  411c11:	adc    al,0x9e
  411c13:	loopne 0x411c5b
  411c15:	cmp    al,0xb1
  411c17:	adc    BYTE PTR [esi],cl
  411c19:	and    al,0x5c
  411c1b:	or     DWORD PTR [esi-0x253f2f6f],eax
  411c21:	dec    esp
  411c22:	sub    DWORD PTR [edi],0x49
  411c25:	fs iret 
  411c27:	idiv   edi
  411c29:	loope  0x411c58
  411c2b:	shr    DWORD PTR [edi-0x9fa4d1c],cl
  411c31:	in     eax,dx
  411c32:	xchg   edx,eax
  411c33:	xor    al,al
  411c35:	imul   DWORD PTR [eax+0x1f]
  411c38:	dec    edx
  411c39:	jne    0x411bcc
  411c3b:	repnz dec ebp
  411c3d:	mul    BYTE PTR [esi-0x60]
  411c40:	enter  0xd3c0,0x79
  411c44:	ins    DWORD PTR es:[edi],dx
  411c45:	pusha  
  411c46:	jg     0x411c99
  411c48:	mov    fs,WORD PTR [edx]
  411c4a:	fdiv   st,st(5)
  411c4c:	add    eax,0x5348e86
  411c51:	and    al,0x30
  411c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c54:	addr16 mov eax,gs:0x11ac
  411c59:	xor    ch,BYTE PTR [esp+eiz*2]
  411c5c:	pushf  
  411c5d:	pop    esi
  411c5e:	xchg   ecx,eax
  411c5f:	cwde   
  411c60:	ret    
  411c61:	(bad)  
  411c63:	out    dx,eax
  411c64:	int    0x7
  411c66:	nop
  411c67:	popf   
  411c68:	pop    edx
  411c69:	adc    al,0xfd
  411c6b:	data16 arpl WORD PTR [esi+edx*8-0x25],dx
  411c70:	or     eax,0x1c9e9c9
  411c75:	int    0xc3
  411c77:	and    al,0x65
  411c79:	neg    BYTE PTR [ebp+ecx*2-0x3d05b935]
  411c80:	jp     0x411c23
  411c82:	and    eax,edx
  411c84:	loop   0x411c95
  411c86:	xor    ch,BYTE PTR [esi+eax*4]
  411c89:	fimul  DWORD PTR [ebx+eax*4-0x61]
  411c8d:	fidiv  WORD PTR [edx]
  411c8f:	(bad)  
  411c90:	xchg   edi,eax
  411c91:	in     eax,dx
  411c92:	loope  0x411c92
  411c94:	fsub   QWORD PTR [eax-0x73abad06]
  411c9a:	lsl    ebx,WORD PTR [ecx+edx*8+0x53]
  411c9f:	dec    ebp
  411ca0:	jb     0x411cd1
  411ca2:	jne    0x411d12
  411ca4:	push   edx
  411ca5:	pop    es
  411ca6:	sbb    al,0x86
  411ca8:	sar    ebx,cl
  411caa:	push   esi
  411cab:	xchg   ebp,eax
  411cac:	mov    dl,0xee
  411cae:	scas   eax,DWORD PTR es:[edi]
  411caf:	or     DWORD PTR [ebp-0x70f3c5fb],0x2b
  411cb6:	nop
  411cb7:	sbb    esp,esp
  411cb9:	sar    bh,1
  411cbb:	jnp    0x411c4e
  411cbd:	test   al,0xcb
  411cbf:	pop    eax
  411cc0:	jle    0x411c6c
  411cc2:	movups xmm2,XMMWORD PTR [ebx]
  411cc5:	retf   0xbb6b
  411cc8:	leave  
  411cc9:	out    dx,eax
  411cca:	adc    DWORD PTR [eax-0x19],ebx
  411ccd:	pop    es
  411cce:	mov    bh,0x30
  411cd0:	ds into 
  411cd2:	fist   WORD PTR [edi-0x8]
  411cd5:	(bad)  
  411cd6:	das    
  411cd7:	fwait
  411cd8:	adc    BYTE PTR [ebx-0x2c9adfdb],bh
  411cde:	(bad)  
  411ce0:	call   0x8d1c52c
  411ce5:	inc    edx
  411ce6:	leave  
  411ce7:	pop    es
  411ce8:	js     0x411ccc
  411cea:	push   0x4f
  411cec:	ins    DWORD PTR es:[edi],dx
  411ced:	adc    esp,DWORD PTR [edi]
  411cef:	cmc    
  411cf0:	jge    0x411d2d
  411cf2:	into   
  411cf3:	fsubp  st(3),st
  411cf5:	mov    ch,0xa5
  411cf7:	xor    al,0x96
  411cf9:	jg     0x411d4d
  411cfb:	stc    
  411cfc:	pop    ss
  411cfd:	icebp  
  411cfe:	aam    0x2f
  411d00:	push   ebx
  411d01:	mov    edi,0x2c505626
  411d06:	stos   DWORD PTR es:[edi],eax
  411d07:	les    eax,FWORD PTR [ebx+0x68fe884c]
  411d0d:	aaa    
  411d0e:	pop    edx
  411d0f:	inc    ecx
  411d10:	loope  0x411ccd
  411d12:	pop    ds
  411d13:	mov    ebp,0x80db4537
  411d18:	sub    al,0x7b
  411d1a:	mov    eax,ds:0x31534be1
  411d1f:	shl    BYTE PTR [eax-0x50b51bbb],cl
  411d25:	lods   al,BYTE PTR ds:[esi]
  411d26:	imul   eax,DWORD PTR [ebp+0x40b5923d],0xffffffd4
  411d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d2e:	aam    0x51
  411d30:	push   ebx
  411d31:	mov    DWORD PTR [edi+0x672e260d],ebx
  411d37:	test   eax,0xc8398b4a
  411d3c:	mov    ds,ebp
  411d3e:	js     0x411ccb
  411d40:	xchg   ebx,eax
  411d41:	ret    
  411d42:	fmul   DWORD PTR [ecx+edx*4+0x1]
  411d46:	je     0x411ccf
  411d48:	hlt    
  411d49:	pop    ebp
  411d4a:	ror    BYTE PTR [edx+0x3],0x28
  411d4e:	dec    esp
  411d4f:	xchg   ecx,eax
  411d50:	cmc    
  411d51:	out    0x7d,eax
  411d53:	sub    esp,ebp
  411d55:	aad    0x86
  411d57:	in     al,dx
  411d58:	inc    esi
  411d59:	jno    0x411db5
  411d5b:	pop    es
  411d5c:	xchg   edx,eax
  411d5d:	outs   dx,DWORD PTR ds:[esi]
  411d5e:	push   es
  411d5f:	add    BYTE PTR [esi-0x37bebd09],ch
  411d65:	in     eax,dx
  411d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d67:	push   ebx
  411d68:	mov    ds,WORD PTR [eax-0x372b596e]
  411d6e:	int    0x1
  411d70:	mov    BYTE PTR ds:0xc738e6ab,0x70
  411d77:	xor    bl,BYTE PTR [ebx+0x4d6d57ba]
  411d7d:	cmp    bl,BYTE PTR [ebx]
  411d7f:	mov    eax,0x67a54066
  411d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d85:	mov    esp,gs
  411d87:	aaa    
  411d88:	mov    ecx,0x220f8382
  411d8d:	xor    DWORD PTR [ebp+0x297ea093],0x51c124bf
  411d97:	cmp    BYTE PTR [eax-0x54f46ff8],dl
  411d9d:	mov    ds:0x8f4310bc,al
  411da2:	or     ebp,DWORD PTR [ecx-0x37]
  411da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da6:	dec    esi
  411da7:	dec    esp
  411da8:	sub    DWORD PTR [esi],esp
  411daa:	stos   DWORD PTR es:[edi],eax
  411dab:	mov    ecx,0x1ca27575
  411db0:	test   DWORD PTR [edi-0x7775d2ae],edx
  411db6:	test   BYTE PTR [edx],cl
  411db8:	xchg   DWORD PTR ss:[ebp+0x5d],edi
  411dbc:	popf   
  411dbd:	call   0x4a51:0x7d736c9e
  411dc4:	outs   dx,BYTE PTR ds:[esi]
  411dc5:	adc    ebx,DWORD PTR [eax]
  411dc7:	js     0x411ddf
  411dc9:	pop    ebp
  411dca:	mov    ah,0xe
  411dcc:	or     eax,0xffc90121
  411dd1:	in     al,dx
  411dd2:	cmc    
  411dd3:	jmp    0x411e07
  411dd5:	cmc    
  411dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd7:	jecxz  0x411dd6
  411dd9:	iret   
  411dda:	out    0xa,eax
  411ddc:	stos   BYTE PTR es:[edi],al
  411ddd:	push   edi
  411dde:	(bad)  
  411ddf:	add    esi,ebx
  411de1:	cmp    BYTE PTR [edi-0x3f],al
  411de4:	cwde   
  411de5:	add    ah,BYTE PTR [ebp-0x764ff1ac]
  411deb:	mov    eax,0x778275b8
  411df0:	or     DWORD PTR [ebx-0x4a4bc886],eax
  411df6:	xchg   esi,eax
  411df7:	and    BYTE PTR [ebx],cl
  411df9:	mov    dl,0x21
  411dfb:	je     0x411e3b
  411dfd:	adc    eax,0xeee08dbd
  411e02:	jne    0x411d8c
  411e04:	pop    ss
  411e05:	xchg   edx,eax
  411e06:	mov    eax,0xab31d9a7
  411e0b:	psrld  mm7,QWORD PTR [ecx+0x34]
  411e0f:	mov    DWORD PTR [ebx+0x6f],ebx
  411e12:	mov    eax,ds:0xf7381389
  411e17:	jmp    0x193f2ec9
  411e1c:	imul   ebx,ebx,0x20
  411e1f:	out    0xd3,al
  411e21:	xchg   BYTE PTR [eax-0x1c928fd9],al
  411e27:	add    al,0x6f
  411e29:	lods   eax,DWORD PTR ds:[esi]
  411e2a:	xchg   esi,eax
  411e2b:	xchg   ebx,eax
  411e2c:	pop    ebp
  411e2d:	and    al,0xa6
  411e2f:	fs (bad) 
  411e31:	inc    esi
  411e32:	mov    ecx,0x2fbe321
  411e37:	dec    edx
  411e38:	(bad)  
  411e39:	lahf   
  411e3a:	pop    ebp
  411e3b:	dec    edx
  411e3c:	les    edx,FWORD PTR ss:[ecx+0x20]
  411e40:	test   BYTE PTR [ecx+0x38aad7f7],cl
  411e46:	sub    BYTE PTR [ecx-0x2f],dl
  411e49:	pop    eax
  411e4a:	mov    ch,0xbf
  411e4c:	xchg   ebx,eax
  411e4d:	in     al,dx
  411e4e:	xor    BYTE PTR [ecx-0x37],al
  411e51:	mov    eax,0x16cdf562
  411e56:	lock (bad) 
  411e58:	repz fst st(0)
  411e5b:	push   ds
  411e5c:	xchg   esp,eax
  411e5d:	sbb    eax,0xce650605
  411e62:	inc    esi
  411e63:	pushf  
  411e64:	bound  edx,QWORD PTR [ecx]
  411e66:	cli    
  411e67:	arpl   WORD PTR [eax-0x60d4b5f0],si
  411e6d:	aad    0xd6
  411e6f:	adc    ecx,DWORD PTR [eax+0x3e]
  411e72:	in     eax,0x2d
  411e74:	xchg   BYTE PTR [eax-0x4e],cl
  411e77:	loopne 0x411eef
  411e79:	mov    al,0x76
  411e7b:	rcr    DWORD PTR [edi+0x5ad707ba],0x2a
  411e82:	stos   DWORD PTR es:[edi],eax
  411e83:	out    0xc5,eax
  411e85:	mov    WORD PTR ds:[ebp-0x72],?
  411e89:	or     cl,ch
  411e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e8c:	data16 scas al,BYTE PTR es:[edi]
  411e8e:	pop    ss
  411e8f:	int3   
  411e90:	sub    bl,0x41
  411e93:	aaa    
  411e94:	enter  0xbbc5,0xc2
  411e98:	jg     0x411ee3
  411e9a:	sahf   
  411e9b:	cmp    DWORD PTR es:0x821146fb,edi
  411ea2:	clc    
  411ea3:	aaa    
  411ea4:	jmp    0x355a590
  411ea9:	lds    edi,FWORD PTR [bp+si-0x40fd]
  411eae:	clc    
  411eaf:	pop    ecx
  411eb0:	add    DWORD PTR [esi+0x4],ecx
  411eb3:	xlat   BYTE PTR ds:[ebx]
  411eb4:	ds fsubr st,st(7)
  411eb7:	fistp  QWORD PTR [edi+ebx*8-0x66]
  411ebb:	or     eax,esp
  411ebd:	es inc esi
  411ebf:	lea    esi,[edx]
  411ec1:	mov    ecx,0xd49b55d2
  411ec6:	adc    al,0x8a
  411ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ec9:	lahf   
  411eca:	leave  
  411ecb:	push   0xcd8b4287
  411ed0:	and    al,0x2a
  411ed2:	mov    cl,0x47
  411ed4:	ret    
  411ed5:	jne    0x411f36
  411ed7:	test   BYTE PTR [ebx],al
  411ed9:	aas    
  411eda:	push   ebx
  411edb:	jns    0x411efd
  411edd:	mov    edi,0x58d57b71
  411ee2:	(bad)  
  411ee3:	adc    BYTE PTR [eax-0x1be0bcfd],bh
  411ee9:	sub    ah,BYTE PTR [edi-0x1eb6bcc6]
  411eef:	call   0xc7d9:0x43490013
  411ef6:	(bad)  
  411ef7:	(bad)  
  411ef8:	gs mov ch,0x25
  411efb:	fadd   QWORD PTR [edi]
  411efd:	aam    0xd
  411eff:	sbb    al,0x7d
  411f01:	mov    al,ds:0x845815ef
  411f06:	repnz add BYTE PTR ds:0x73eef78d,al
  411f0d:	ja     0x411f1a
  411f0f:	jae    0x411f42
  411f11:	rcl    BYTE PTR [edi],1
  411f13:	imul   edi,edi,0xffffff88
  411f16:	jl     0x411ea9
  411f18:	mov    ecx,0xac17dcde
  411f1d:	mov    eax,0xcd6e4ac
  411f22:	hlt    
  411f23:	in     eax,0x32
  411f25:	sub    al,0x9c
  411f27:	in     eax,0xc3
  411f29:	and    eax,0x3b0b2cbd
  411f2e:	or     eax,0x9501d3d9
  411f33:	(bad)  
  411f34:	mov    ch,0x5b
  411f36:	add    DWORD PTR [ecx+0x21],0x2ccb7e13
  411f3d:	pop    esi
  411f3e:	jl     0x411efa
  411f40:	scas   al,BYTE PTR es:[edi]
  411f41:	data16 jne 0x411efc
  411f44:	cmp    eax,0x764483e3
  411f49:	and    al,0x52
  411f4b:	push   cs
  411f4c:	loope  0x411f1b
  411f4e:	xor    al,0x85
  411f50:	ins    BYTE PTR es:[edi],dx
  411f51:	fisttp QWORD PTR [edi+0x1ffa4c2a]
  411f57:	xor    al,0x36
  411f59:	mov    edi,0x5ff48c3e
  411f5e:	cs sub eax,0x6f40848e
  411f64:	adc    cl,BYTE PTR [eax]
  411f66:	pop    ebp
  411f67:	imul   esp,DWORD PTR [esi-0x7],0xf93ae08e
  411f6e:	xchg   BYTE PTR [edx],al
  411f70:	sar    BYTE PTR [esi-0x49],0xbb
  411f74:	sub    al,0x6a
  411f76:	lea    esp,[ebp+0x2dd19ee3]
  411f7c:	or     BYTE PTR [esi+0x74219c80],0x3e
  411f83:	xor    DWORD PTR [esi+0x56],ebx
  411f86:	test   eax,0x5daded7c
  411f8b:	lods   eax,DWORD PTR ds:[esi]
  411f8c:	cs aad 0xe8
  411f8f:	(bad)  
  411f91:	lea    ebp,[ecx-0x4c0d32dd]
  411f97:	ins    BYTE PTR es:[edi],dx
  411f98:	test   al,0x60
  411f9a:	mov    esi,DWORD PTR [ebp+0x36fa4336]
  411fa0:	arpl   sp,cx
  411fa2:	in     eax,0xa6
  411fa4:	hlt    
  411fa5:	repz aaa 
  411fa7:	mov    cs,WORD PTR [ecx+0x5447b1d9]
  411fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fae:	sub    DWORD PTR ds:0x82b28467,edi
  411fb4:	cld    
  411fb5:	aad    0xfd
  411fb7:	push   edi
  411fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb9:	pop    edx
  411fba:	aas    
  411fbb:	add    eax,0x5ab9d0e8
  411fc0:	cmp    BYTE PTR [ebx-0x37194028],0xc7
  411fc7:	dec    ebp
  411fc8:	xor    BYTE PTR ds:0x236f20c,dh
  411fce:	int    0xe9
  411fd0:	jg     0x411ff8
  411fd2:	or     al,0xc6
  411fd4:	dec    edx
  411fd5:	jno    0x411f94
  411fd7:	push   eax
  411fd8:	bound  ecx,QWORD PTR [edi+0x8]
  411fdb:	shr    BYTE PTR [esp+eax*4],0x43
  411fdf:	pop    ss
  411fe0:	arpl   ax,sp
  411fe2:	xchg   esi,eax
  411fe3:	test   esi,esp
  411fe5:	pop    ss
  411fe6:	test   bh,dl
  411fe8:	jmp    0x411fef
  411fea:	mov    ds:0x6ff25955,al
  411fef:	js     0x411ffa
  411ff1:	sub    BYTE PTR [ebx+0x17],al
  411ff4:	cwde   
  411ff5:	(bad)  
  411ff6:	std    
  411ff7:	sub    esp,DWORD PTR [ebp+0x7]
  411ffa:	cmp    ecx,ecx
  411ffc:	in     al,0x34
  411ffe:	mov    gs,WORD PTR [edx-0x4d3a2c2f]
  412004:	push   esp
  412005:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412007:	enter  0x76a6,0x45
  41200b:	mov    ?,WORD PTR [edi+0xe]
  41200e:	aad    0xbe
  412010:	mov    esi,0xb74954ea
  412015:	out    dx,eax
  412016:	inc    edx
  412017:	lds    esi,FWORD PTR [esi]
  412019:	cwde   
  41201a:	adc    al,BYTE PTR [esi+0x6d]
  41201d:	hlt    
  41201e:	neg    DWORD PTR [esi-0x2af8809f]
  412024:	test   BYTE PTR [eax-0x27ecf2d9],dl
  41202a:	push   0x3c
  41202c:	cmp    DWORD PTR ds:0xe2db1a9c,ebx
  412032:	mov    ebx,0x69c4c25
  412037:	add    eax,0x84541e31
  41203c:	inc    eax
  41203d:	xchg   DWORD PTR [edx+ebx*8+0x409c645b],eax
  412044:	pop    eax
  412045:	xor    DWORD PTR [eax-0x60672bfb],ebp
  41204b:	mov    cs,WORD PTR [edx+0x60221ebf]
  412051:	mov    al,0x9f
  412053:	pop    ebp
  412054:	mov    al,0x32
  412056:	fnop   
  412058:	cmc    
  412059:	into   
  41205a:	lahf   
  41205b:	fist   DWORD PTR ss:[eax-0x70]
  41205f:	sahf   
  412060:	mov    ebp,gs
  412062:	or     al,0x99
  412064:	iret   
  412065:	xchg   edx,eax
  412066:	pop    es
  412067:	adc    eax,DWORD PTR [ebx]
  412069:	popf   
  41206a:	pusha  
  41206b:	repnz mov ds:0xde415965,eax
  412071:	fwait
  412072:	lods   al,BYTE PTR ds:[esi]
  412073:	jnp    0x412033
  412075:	sbb    eax,0xc0bbe2c3
  41207a:	retf   
  41207b:	ja     0x4120b7
  41207d:	pandn  mm2,QWORD PTR [edi-0x60c6cc64]
  412084:	mov    al,ds:0x2a2025bc
  412089:	push   esi
  41208a:	ror    BYTE PTR ds:0x7e6bb351,1
  412090:	add    DWORD PTR [edi-0x59d919e6],ebx
  412096:	push   ecx
  412097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412098:	(bad)  [eax-0x47989e27]
  41209e:	or     ebp,DWORD PTR ds:0x241e051c
  4120a4:	mov    ds:0x66c55189,al
  4120a9:	jl     0x4120f3
  4120ab:	outs   dx,DWORD PTR ds:[esi]
  4120ac:	inc    edx
  4120ad:	cli    
  4120ae:	sahf   
  4120af:	jmp    0xfea03f74
  4120b4:	push   0xffffffef
  4120b6:	ffreep st(5)
  4120b8:	rol    DWORD PTR ds:0xc1e10e8b,1
  4120be:	imul   edx,DWORD PTR [eax+edi*1],0x14e5f2f9
  4120c5:	add    esp,eax
  4120c7:	pop    edx
  4120c8:	scas   al,BYTE PTR es:[edi]
  4120c9:	call   0xcab0:0x2b019ea7
  4120d0:	aas    
  4120d1:	cmp    al,0x4b
  4120d3:	dec    ebx
  4120d4:	test   eax,0xdb9a87d8
  4120d9:	popa   
  4120da:	push   esi
  4120db:	mov    ecx,0x4da04160
  4120e0:	dec    ecx
  4120e1:	loope  0x41209f
  4120e3:	dec    eax
  4120e4:	mov    esp,0xa587c35b
  4120e9:	ret    0x97b1
  4120ec:	mov    ds:0xd73f0f3d,eax
  4120f1:	mov    dl,0x33
  4120f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f4:	pop    ds
  4120f5:	in     al,dx
  4120f6:	imul   edi,DWORD PTR [esp+ecx*8+0x5b],0x8487180f
  4120fe:	mov    BYTE PTR [esi],al
  412100:	push   esp
  412101:	out    0x28,al
  412103:	gs inc edi
  412105:	std    
  412106:	push   cs
  412107:	pop    esi
  412108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412109:	push   0x32
  41210b:	js     0x412168
  41210d:	(bad)  
  41210e:	daa    
  41210f:	das    
  412110:	sub    eax,0xf54872aa
  412115:	xchg   esp,eax
  412116:	ror    bh,1
  412118:	(bad)  
  412119:	xchg   ebx,eax
  41211a:	add    BYTE PTR [ecx+edx*8],dh
  41211d:	add    edi,DWORD PTR [ecx]
  41211f:	push   ss
  412120:	dec    esi
  412121:	mov    al,ds:0x26dd46de
  412126:	retf   0x3f04
  412129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41212a:	jl     0x412164
  41212c:	mov    esi,0xd9735788
  412132:	dec    edi
  412133:	nop
  412134:	push   ebp
  412135:	out    0x7a,al
  412137:	lods   al,BYTE PTR ds:[esi]
  412138:	add    al,0x6d
  41213a:	mov    ds:0xdb55b1cb,al
  41213f:	rol    BYTE PTR [esi],cl
  412141:	pop    ss
  412142:	mov    dl,0x6d
  412144:	ret    0x4169
  412147:	mov    cl,0x65
  412149:	dec    ebp
  41214a:	push   ebp
  41214b:	sbb    bl,BYTE PTR [edi]
  41214d:	lds    ebp,FWORD PTR [ebp+0x46]
  412150:	je     0x4120dc
  412152:	dec    ebp
  412153:	xchg   edx,eax
  412154:	imul   ebx,ecx,0xfffffff0
  412157:	mov    esi,0x8a766140
  41215c:	nop
  41215d:	xchg   esi,eax
  41215e:	sbb    al,dl
  412160:	xor    eax,0x5bfe2804
  412165:	in     al,0x89
  412167:	fimul  DWORD PTR [esi]
  412169:	outs   dx,DWORD PTR ds:[esi]
  41216a:	jns    0x412197
  41216c:	enter  0xaaa1,0x23
  412170:	test   eax,0x58676bf7
  412175:	and    eax,0xc26ad442
  41217a:	mov    bl,0x2d
  41217c:	mov    edi,0x7f5d36f1
  412181:	cmp    edx,DWORD PTR [edx+0x4017944c]
  412187:	aas    
  412188:	int    0x8d
  41218a:	mov    edx,0x298d2bf1
  41218f:	xor    ecx,DWORD PTR [edi-0x7e]
  412192:	xor    DWORD PTR [eax-0x7d],ebx
  412195:	xchg   edi,eax
  412196:	test   al,0x12
  412198:	sub    ecx,DWORD PTR [edx+0x6c7872e1]
  41219e:	fist   DWORD PTR [edi]
  4121a0:	imul   ecx,DWORD PTR fs:0x593ad218,0xdf2fa672
  4121ab:	xchg   ecx,eax
  4121ac:	or     BYTE PTR [edx-0x2f],bh
  4121af:	mov    BYTE PTR fs:[edi],cl
  4121b2:	xchg   ecx,eax
  4121b3:	lahf   
  4121b4:	jnp    0x41214b
  4121b6:	jecxz  0x41221b
  4121b8:	outs   dx,BYTE PTR ds:[esi]
  4121b9:	adc    al,dl
  4121bb:	ret    
  4121bc:	aaa    
  4121bd:	in     al,0x79
  4121bf:	mov    ebx,0xedd39ee2
  4121c4:	push   cs
  4121c5:	pop    esp
  4121c6:	mov    esi,0x70b002d5
  4121cb:	mov    al,BYTE PTR [edx-0x4d]
  4121ce:	jo     0x4121af
  4121d0:	(bad)  
  4121d1:	cld    
  4121d2:	jmp    0xfd3b:0x555d8653
  4121d9:	bnd jmp 0x4121a9
  4121dc:	lods   eax,DWORD PTR ds:[esi]
  4121dd:	cmp    al,0xa4
  4121df:	xchg   ebx,eax
  4121e0:	stos   DWORD PTR es:[edi],eax
  4121e1:	pushf  
  4121e2:	push   ecx
  4121e3:	rcpps  xmm7,XMMWORD PTR [edx+ebx*2]
  4121e7:	arpl   ax,si
  4121e9:	jb     0x4121a0
  4121eb:	aaa    
  4121ec:	das    
  4121ed:	mov    esi,0xc77512e1
  4121f2:	adc    DWORD PTR [edx+0x39137bfd],0x4d72ac64
  4121fc:	out    0xca,eax
  4121fe:	retf   0x8118
  412201:	sbb    esi,DWORD PTR [eax-0x22f4133d]
  412207:	sti    
  412208:	and    al,0xc
  41220a:	in     al,0x2d
  41220c:	add    eax,0x32f15e6
  412211:	into   
  412212:	dec    edx
  412213:	cmp    eax,0x4f64fa34
  412219:	sbb    al,0xd1
  41221b:	xchg   ebx,eax
  41221c:	mov    dl,0x29
  41221e:	lahf   
  41221f:	mov    eax,ds:0x39e945ce
  412224:	and    cl,BYTE PTR ds:0xfe96a222
  41222a:	call   0x85012fc0
  41222f:	pop    ebx
  412230:	bt     DWORD PTR ds:0x9b092a5b,ebx
  412237:	js     0x412212
  412239:	int3   
  41223a:	mov    ch,0xfa
  41223c:	loop   0x412264
  41223e:	jne    0x412236
  412240:	jp     0x4122a3
  412242:	mov    ah,0x4e
  412244:	js     0x412235
  412246:	icebp  
  412247:	xchg   ecx,eax
  412248:	std    
  412249:	ss add eax,0x3963ca9
  41224f:	aam    0xb2
  412251:	cmc    
  412252:	ret    
  412253:	aas    
  412254:	retf   
  412255:	jb     0x4122cb
  412257:	and    BYTE PTR [ebp-0x7b100904],0xca
  41225e:	cld    
  41225f:	jno    0x4122c0
  412261:	retf   0xcafc
  412264:	push   ecx
  412265:	jb     0x412271
  412267:	out    dx,al
  412268:	sbb    bl,BYTE PTR [ebx]
  41226a:	push   ss
  41226b:	leave  
  41226c:	xor    eax,0xb81ad14d
  412271:	jo     0x412286
  412273:	scas   eax,DWORD PTR es:[edi]
  412274:	xor    al,0xa2
  412276:	lods   eax,DWORD PTR ds:[esi]
  412277:	aaa    
  412278:	jp     0x4122b7
  41227a:	pop    ss
  41227b:	push   edi
  41227c:	dec    edx
  41227d:	push   0x7361d37f
  412282:	(bad)  
  412283:	retf   0x5847
  412286:	jo     0x4122c6
  412288:	int3   
  412289:	call   0x810:0x99e0bf38
  412290:	jne    0x41224c
  412292:	cld    
  412293:	or     cl,bh
  412295:	inc    esi
  412296:	ds push ebp
  412298:	mov    bl,0x87
  41229a:	test   BYTE PTR [eax+eiz*8],dh
  41229d:	popa   
  41229e:	jb     0x41223f
  4122a0:	cmc    
  4122a1:	nop
  4122a2:	dec    edi
  4122a3:	add    dl,BYTE PTR [eax+0x19e83970]
  4122a9:	fdiv   st,st(6)
  4122ab:	out    0xc,al
  4122ad:	clc    
  4122ae:	and    DWORD PTR [ecx],0x70
  4122b1:	fdivr  st,st(2)
  4122b3:	inc    esp
  4122b4:	shl    edi,0x4e
  4122b7:	mov    dl,BYTE PTR [esi+ecx*8-0x5723c251]
  4122be:	mov    DWORD PTR ds:0xbe5d3679,ecx
  4122c5:	fs mov eax,0x9f92d817
  4122cb:	fmul   st,st(4)
  4122ce:	sahf   
  4122cf:	or     BYTE PTR [ecx-0x2a4fd543],dh
  4122d5:	jg     0x4122a5
  4122d7:	out    dx,al
  4122d8:	or     edi,DWORD PTR [esi-0x5c45d75a]
  4122de:	int3   
  4122df:	lods   al,BYTE PTR ds:[esi]
  4122e0:	ja     0x412343
  4122e2:	enter  0x893b,0xcb
  4122e6:	aad    0xed
  4122e8:	push   esi
  4122e9:	dec    edx
  4122ea:	mov    bh,0x38
  4122ec:	fs and eax,0xedb13718
  4122f2:	dec    ebp
  4122f3:	fbstp  TBYTE PTR [esi+0x67da46ad]
  4122f9:	and    DWORD PTR [eax-0x497d3c4],eax
  4122ff:	add    BYTE PTR [eax],0x29
  412302:	xlat   BYTE PTR ds:[ebx]
  412303:	mov    ecx,0x273b0964
  412308:	stos   BYTE PTR es:[edi],al
  412309:	dec    edi
  41230a:	and    ebx,edi
  41230c:	inc    eax
  41230e:	shl    eax,1
  412310:	data16 xor dh,BYTE PTR [ebx+ebp*4]
  412314:	jne    0x41236d
  412316:	dec    esi
  412317:	sub    DWORD PTR [ecx-0x2],ebp
  41231a:	(bad)  
  41231b:	push   DWORD PTR ds:0x3aeeec3b
  412321:	add    BYTE PTR [edx],dl
  412323:	xor    DWORD PTR [ecx-0x6753cf61],esp
  412329:	sub    DWORD PTR [edi+0x2445497b],eax
  41232f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412330:	push   ecx
  412331:	mov    cl,0x29
  412333:	mov    dh,0xdc
  412335:	mov    ds,esi
  412337:	ss xor al,dh
  41233a:	mov    dh,0xdf
  41233c:	mov    bh,0xc3
  41233e:	or     ebx,0xffffffbe
  412341:	mov    eax,0xe38aa348
  412346:	or     cl,dh
  412348:	loope  0x412347
  41234a:	aam    0x84
  41234c:	lahf   
  41234d:	mov    ah,0xac
  41234f:	or     al,0x8f
  412351:	cmovle eax,esp
  412354:	(bad)  
  412356:	clc    
  412357:	add    BYTE PTR [ebx-0x7ef7aa75],ah
  41235d:	and    eax,0x42b21a
  412362:	add    BYTE PTR [eax],al
  412364:	add    BYTE PTR [eax],al
  412366:	jmp    0x41237a
  41236b:	xor    ebx,ebx
  41236d:	xor    ebx,DWORD PTR ds:0x42b21a
  412373:	inc    ebx
  412374:	mov    DWORD PTR ds:0x42b21a,ebx
  41237a:	cmp    DWORD PTR ds:0x42b21a,0x18
  412381:	jae    0x4123c1
  412387:	cmp    DWORD PTR ds:0x42b21a,0x4
  41238e:	jg     0x4123c1
  412394:	jmp    0x4123a2
  412399:	push   DWORD PTR [ebp-0x18]
  41239c:	call   DWORD PTR ds:0x42b316
  4123a2:	cmp    DWORD PTR ds:0x42b21a,0x3
  4123a9:	jne    0x4123bc
  4123af:	mov    ebx,DWORD PTR ds:0x42b21a
  4123b5:	inc    ebx
  4123b6:	mov    DWORD PTR ds:0x42b21a,ebx
  4123bc:	jmp    0x41236b
  4123c1:	mov    ebx,DWORD PTR [ebp-0x54]
  4123c4:	mov    DWORD PTR ds:0x42b21a,0x6966
  4123ce:	add    edx,0x64f880
  4123d4:	or     edx,ebx
  4123d6:	mov    DWORD PTR [ebp-0x54],edx
  4123d9:	mov    edx,DWORD PTR [ebp+0x8]
  4123dc:	xor    DWORD PTR ds:0x42b1b2,edx
  4123e2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123e5:	and    DWORD PTR ds:0x42b226,0x42b18e
  4123ef:	add    edx,ecx
  4123f1:	sbb    DWORD PTR ds:0x42b1ee,0x42b196
  4123fb:	xor    edx,ebx
  4123fd:	mov    DWORD PTR [ebp-0x50],edx
  412400:	mov    DWORD PTR ds:0x42b226,0x2b16
  41240a:	mov    edx,DWORD PTR [ebp+0x8]
  41240d:	and    DWORD PTR ds:0x42b19e,0x0
  412417:	mov    ebx,DWORD PTR ds:0x42b19e
  41241d:	inc    ebx
  41241e:	mov    DWORD PTR ds:0x42b19e,ebx
  412424:	cmp    DWORD PTR ds:0x42b19e,0xc
  41242b:	ja     0x41246b
  412431:	jmp    0x412444
  412436:	push   DWORD PTR [ebp-0x10]
  412439:	push   0x7c16
  41243e:	call   DWORD PTR ds:0x42b31a
  412444:	cmp    DWORD PTR ds:0x42b19e,0xb
  41244b:	jne    0x41245e
  412451:	mov    ebx,DWORD PTR ds:0x42b19e
  412457:	inc    ebx
  412458:	mov    DWORD PTR ds:0x42b19e,ebx
  41245e:	cmp    DWORD PTR ds:0x42b19e,0x13
  412465:	jb     0x412417
  41246b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41246e:	add    edx,edi
  412470:	and    edx,ebx
  412472:	mov    ebx,DWORD PTR ds:0x42b206
  412478:	add    DWORD PTR ds:0x42b1c6,ebx
  41247e:	mov    DWORD PTR [ebp-0x4c],edx
  412481:	add    DWORD PTR ds:0x42b19a,0x5c82
  41248b:	mov    edx,DWORD PTR [ebp+0x8]
  41248e:	mov    ebx,DWORD PTR [ebp-0x48]
  412491:	lea    edx,[ebx+edx*1+0x241fcdf]
  412498:	mov    DWORD PTR [ebp-0x48],edx
  41249b:	mov    edx,DWORD PTR [ebp+0x8]
  41249e:	mov    ebx,0xfa5e1524
  4124a3:	sub    ebx,edx
  4124a5:	add    ebx,DWORD PTR [ebp-0x44]
  4124a8:	mov    DWORD PTR [ebp-0x44],ebx
  4124ab:	mov    edx,DWORD PTR [ebp+0x8]
  4124ae:	xor    edx,eax
  4124b0:	add    edx,esi
  4124b2:	jne    0x40fdfa
  4124b8:	jmp    0x419191
  4124bd:	mov    edx,DWORD PTR [ebp-0xc]
  4124c0:	sub    edx,esi
  4124c2:	xor    edx,eax
  4124c4:	mov    DWORD PTR [ebp-0x5c],edx
  4124c7:	mov    edx,DWORD PTR [ebp-0x10]
  4124ca:	mov    ebx,DWORD PTR [ebp-0x8]
  4124cd:	xor    edx,eax
  4124cf:	xor    ebx,eax
  4124d1:	sub    edx,ebx
  4124d3:	sub    edx,esi
  4124d5:	xor    edx,eax
  4124d7:	mov    DWORD PTR [ebp-0x10],edx
  4124da:	mov    edx,DWORD PTR [ebp-0x14]
  4124dd:	mov    DWORD PTR [ebp+0x8],edx
  4124e0:	jmp    0x4148b5
  4124e5:	mov    edx,DWORD PTR [ebp+0x8]
  4124e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4124eb:	xor    edx,eax
  4124ed:	xor    ebx,eax
  4124ef:	sub    edx,ebx
  4124f1:	sub    edx,esi
  4124f3:	xor    edx,eax
  4124f5:	mov    DWORD PTR [ebp+0x8],edx
  4124f8:	mov    edx,DWORD PTR [ebp+0x8]
  4124fb:	mov    ebx,DWORD PTR [ebp-0x58]
  4124fe:	add    edx,0x5708e2
  412504:	imul   edx,ebx
  412507:	mov    DWORD PTR [ebp-0x58],edx
  41250a:	mov    edx,DWORD PTR [ebp+0x8]
  41250d:	mov    ebx,DWORD PTR [ebp-0x54]
  412510:	add    edx,0x64f880
  412516:	or     edx,ebx
  412518:	mov    DWORD PTR [ebp-0x54],edx
  41251b:	mov    edx,DWORD PTR [ebp+0x8]
  41251e:	mov    ebx,DWORD PTR [ebp-0x50]
  412521:	add    edx,ecx
  412523:	xor    edx,ebx
  412525:	mov    DWORD PTR [ebp-0x50],edx
  412528:	mov    edx,DWORD PTR [ebp+0x8]
  41252b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41252e:	add    edx,edi
  412530:	and    edx,ebx
  412532:	mov    DWORD PTR [ebp-0x4c],edx
  412535:	mov    edx,DWORD PTR [ebp+0x8]
  412538:	mov    ebx,DWORD PTR [ebp-0x48]
  41253b:	lea    edx,[ebx+edx*1+0x241fcdf]
  412542:	mov    DWORD PTR [ebp-0x48],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,0xfa5e1524
  41254d:	sub    ebx,edx
  41254f:	add    ebx,DWORD PTR [ebp-0x44]
  412552:	mov    DWORD PTR [ebp-0x44],ebx
  412555:	jmp    0x4148b5
  41255a:	xlat   BYTE PTR ds:[ebx]
  41255b:	push   ss
  41255c:	xchg   BYTE PTR [ebx-0x7e],dh
  41255f:	repz xchg edx,eax
  412561:	add    BYTE PTR [eax-0x49],0xdb
  412565:	test   BYTE PTR [ecx-0x67],0x6
  412569:	push   eax
  41256a:	cli    
  41256b:	mov    al,BYTE PTR [ebx-0x7ca1c17d]
  412571:	add    esp,0x55
  412574:	fist   DWORD PTR [edi-0xadb8fbc]
  41257a:	xor    ecx,esi
  41257c:	push   ebx
  41257d:	or     al,0x4f
  41257f:	mov    dh,0x97
  412581:	leave  
  412582:	out    0x79,eax
  412584:	outs   dx,BYTE PTR ds:[esi]
  412585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412586:	dec    esp
  412587:	lea    eax,[ecx-0x4192d2c]
  41258d:	push   ebp
  41258e:	sbb    al,0x89
  412590:	pop    edx
  412591:	bound  edx,QWORD PTR [edi]
  412593:	test   eax,0xc012be4a
  412598:	call   0xfd79:0x29cc6bde
  41259f:	xchg   ecx,eax
  4125a0:	fstp   TBYTE PTR [eax-0x1]
  4125a3:	aaa    
  4125a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125a6:	out    0x9d,eax
  4125a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125aa:	bound  edi,QWORD PTR [eax]
  4125ac:	cmp    eax,0x28328b1a
  4125b1:	aas    
  4125b2:	(bad)
  4125b5:	jl     0x4125c1
  4125b7:	xor    BYTE PTR [esp+ebp*8+0x62],dl
  4125bb:	mov    edx,0x364c02f9
  4125c0:	test   DWORD PTR [edi+0x41],0xc9a93f42
  4125c7:	outs   dx,BYTE PTR ds:[esi]
  4125c8:	lds    eax,FWORD PTR [ecx]
  4125ca:	push   edx
  4125cb:	cmp    DWORD PTR [eax],eax
  4125cd:	outs   dx,BYTE PTR ds:[esi]
  4125ce:	fimul  DWORD PTR [eax]
  4125d0:	test   DWORD PTR [edi],eax
  4125d2:	cmp    DWORD PTR [edx+0x53],esp
  4125d5:	(bad)  
  4125d6:	loopne 0x412610
  4125d8:	mov    ah,BYTE PTR [ebp+esi*8+0x6189cd39]
  4125df:	das    
  4125e0:	iret   
  4125e1:	stos   DWORD PTR es:[edi],eax
  4125e2:	scas   eax,DWORD PTR es:[edi]
  4125e3:	ins    BYTE PTR es:[edi],dx
  4125e4:	icebp  
  4125e5:	ds stos DWORD PTR es:[edi],eax
  4125e7:	mov    ebp,0xf239456d
  4125ec:	pop    ss
  4125ed:	and    edi,ebx
  4125ef:	sub    ebp,DWORD PTR [eax+0x33]
  4125f2:	test   BYTE PTR [ebp+edx*4-0x57],bl
  4125f6:	call   0xb0a9:0x738
  4125fc:	mov    esp,0xbb09e16c
  412601:	addr16 imul ebp,edx,0xffffffc4
  412605:	inc    esp
  412606:	shl    DWORD PTR [eax+ecx*8],0x1d
  41260a:	ins    DWORD PTR es:[edi],dx
  41260b:	stc    
  41260c:	cmp    BYTE PTR ds:0x882ad0ff,cl
  412612:	inc    ebp
  412613:	xchg   edx,eax
  412614:	hlt    
  412615:	inc    edx
  412616:	push   eax
  412617:	mov    eax,ds:0x83e24ba7
  41261c:	cmp    eax,0x84725e8b
  412621:	pop    ds
  412622:	je     0x412666
  412624:	and    dl,0xfc
  412627:	pop    ds
  412628:	out    0x5d,al
  41262a:	pop    edx
  41262b:	mov    WORD PTR [ebx],ss
  41262d:	std    
  41262e:	jae    0x4125e5
  412630:	loopne 0x412679
  412632:	ret    
  412633:	add    eax,0x1e150aff
  412638:	xor    bh,BYTE PTR [edx+eiz*1-0x351800b2]
  41263f:	mov    esp,0xd4180738
  412644:	add    DWORD PTR [ebx+0x3f25e6cb],0xe1004d64
  41264e:	das    
  41264f:	or     BYTE PTR [edi],ah
  412651:	ja     0x41265a
  412653:	jbe    0x412650
  412655:	idiv   BYTE PTR [edx+0x35]
  412658:	int    0xb4
  41265a:	mov    dh,0x71
  41265c:	sbb    bl,BYTE PTR [ebx]
  41265e:	hlt    
  41265f:	and    bh,BYTE PTR [edx+ebp*2]
  412662:	call   0xaac4:0x25f92fe9
  412669:	in     al,0x3c
  41266b:	mov    ebx,0x914b23f2
  412670:	in     eax,dx
  412671:	cdq    
  412672:	dec    ebx
  412673:	push   ebx
  412674:	pop    ebp
  412675:	stos   BYTE PTR es:[edi],al
  412676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412677:	ins    DWORD PTR es:[edi],dx
  412678:	in     al,0x95
  41267a:	mov    ah,0xd
  41267c:	mov    ds:0x8efdf79f,eax
  412681:	rcr    BYTE PTR [esi+0x27],0x5a
  412685:	scas   al,BYTE PTR es:[edi]
  412686:	inc    ebx
  412687:	dec    edx
  412688:	and    DWORD PTR [ebx],esi
  41268a:	shl    dh,1
  41268c:	fisubr DWORD PTR [ebx+0x177eea6a]
  412692:	dec    ecx
  412693:	es leave 
  412695:	jb     0x412643
  412697:	test   DWORD PTR [esi-0x341e4a02],ebx
  41269d:	push   ds
  41269e:	test   BYTE PTR [ebp+ecx*8+0x3b],ah
  4126a2:	sbb    al,0xa2
  4126a4:	mov    ds:0x1fcfafa9,al
  4126a9:	dec    ecx
  4126aa:	repnz mov es,WORD PTR [ebx+0x1f0fc559]
  4126b1:	mov    ss,ebp
  4126b3:	data16 and cl,BYTE PTR [edi]
  4126b6:	sbb    eax,0x42a7967
  4126bb:	aas    
  4126bc:	add    DWORD PTR [esi+0x5c4e849f],esi
  4126c2:	jb     0x412695
  4126c4:	cwde   
  4126c5:	cli    
  4126c6:	adc    eax,0xbc1c4f80
  4126cb:	rol    BYTE PTR [ecx],1
  4126cd:	outs   dx,DWORD PTR ds:[esi]
  4126ce:	pop    ebp
  4126cf:	aam    0xb4
  4126d1:	inc    esp
  4126d2:	dec    eax
  4126d3:	push   esi
  4126d4:	xor    eax,0x76017794
  4126d9:	inc    ecx
  4126da:	data16 mov ?,WORD PTR [edx+eiz*2+0x52]
  4126df:	xchg   ah,dl
  4126e1:	sar    DWORD PTR [edi],1
  4126e3:	fmul   st,st(7)
  4126e5:	in     eax,dx
  4126e6:	jecxz  0x4126b7
  4126e8:	ret    
  4126e9:	nop
  4126ea:	int    0x9d
  4126ec:	cmp    al,0x42
  4126ee:	mov    ecx,0x23f23fb0
  4126f3:	inc    edx
  4126f4:	xchg   DWORD PTR [esi-0x28],esi
  4126f7:	cmp    DWORD PTR [esi+0x14321095],eax
  4126fd:	rcr    BYTE PTR [edi],cl
  4126ff:	int    0xe5
  412701:	lods   eax,DWORD PTR ds:[esi]
  412702:	pop    esp
  412703:	adc    al,0x54
  412705:	mov    DWORD PTR [edi-0x77a8aa5],esp
  41270b:	stos   DWORD PTR es:[edi],eax
  41270c:	mov    al,ds:0xa1bdf777
  412711:	mov    edi,0x5d530f2e
  412716:	iret   
  412717:	push   ecx
  412718:	mov    bl,0x28
  41271a:	mov    BYTE PTR [edx+eiz*1+0x2c],0x1d
  41271f:	mov    ds:0xc729f7e0,eax
  412724:	bnd jbe 0x4126b1
  412727:	dec    eax
  412728:	test   al,0x50
  41272a:	gs dec ebp
  41272c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272d:	adc    al,0x76
  41272f:	fiadd  WORD PTR [ebp-0x35]
  412732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412733:	sub    al,0x5
  412735:	fdivr  QWORD PTR [edi+eiz*2+0x28554a7b]
  41273c:	int    0xa7
  41273e:	out    dx,al
  41273f:	gs dec eax
  412741:	jns    0x412721
  412743:	sub    DWORD PTR [ebp-0x7c736555],esp
  412749:	cmp    cl,BYTE PTR es:[esi]
  41274c:	pushf  
  41274d:	push   0xab59bd8
  412752:	arpl   WORD PTR [edx-0x3578b508],ax
  412758:	xor    BYTE PTR [eax],ah
  41275a:	popa   
  41275b:	ss push edi
  41275d:	aaa    
  41275e:	mov    al,0x14
  412760:	dec    esp
  412761:	fiadd  WORD PTR [ecx+0x22c623dd]
  412767:	and    eax,0x38bc528d
  41276c:	lds    ebx,FWORD PTR [edi-0x4ed56ed5]
  412772:	push   DWORD PTR [ecx+edi*8]
  412775:	mov    ch,0x43
  412777:	mov    bl,0x16
  412779:	sti    
  41277a:	push   0x260976da
  41277f:	mov    bh,0xbd
  412781:	psubw  mm7,QWORD PTR [eax-0x75]
  412785:	popa   
  412786:	cdq    
  412787:	inc    eax
  412788:	in     al,0x17
  41278a:	das    
  41278b:	gs jbe 0x41278e
  41278e:	xor    eax,0xd7c25cd4
  412793:	inc    ebp
  412794:	mov    ds:0xeaf00929,al
  412799:	pop    ds
  41279a:	cli    
  41279b:	addr16 add bl,dh
  41279e:	xor    BYTE PTR [edx+0x12],0xab
  4127a2:	adc    eax,ebp
  4127a4:	test   eax,0x28b6d6e2
  4127a9:	mov    al,0x4f
  4127ab:	or     BYTE PTR [esi+0x5206134d],cl
  4127b1:	mov    eax,ds:0x61eae978
  4127b6:	xor    esi,DWORD PTR [edx+0x49e4b679]
  4127bc:	stos   BYTE PTR es:[edi],al
  4127bd:	and    BYTE PTR [ebx],dh
  4127bf:	push   esp
  4127c0:	int    0x32
  4127c2:	adc    eax,0x98523d9c
  4127c7:	out    dx,eax
  4127c8:	xchg   edi,eax
  4127c9:	sahf   
  4127ca:	dec    ebx
  4127cb:	leave  
  4127cc:	jmp    0x412773
  4127ce:	fcom   QWORD PTR [eax]
  4127d0:	pop    ebx
  4127d1:	xor    eax,0x817ed320
  4127d6:	push   es
  4127d7:	jo     0x4127a9
  4127d9:	out    dx,al
  4127da:	mov    edi,0xddba4ca5
  4127df:	jb     0x412766
  4127e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e2:	sbb    edi,DWORD PTR [ebx+0x13]
  4127e5:	in     al,0x1
  4127e7:	xchg   DWORD PTR [eax-0x75415caf],edx
  4127ed:	mov    bl,0xaa
  4127ef:	mov    ds:0x72841c30,eax
  4127f4:	mov    eax,0xba5f86f8
  4127f9:	lahf   
  4127fa:	inc    ecx
  4127fb:	dec    eax
  4127fc:	ror    DWORD PTR [eax],0x91
  4127ff:	(bad)  
  412800:	wrfsbase edx
  412804:	sar    ah,0x17
  412807:	add    eax,0x31207121
  41280c:	mov    ds,WORD PTR [edx-0x15]
  41280f:	(bad)  
  412810:	popa   
  412811:	int    0x5a
  412813:	mov    DWORD PTR [edi+edi*4-0x92c2ac1],eax
  41281a:	adc    cl,bh
  41281c:	popa   
  41281d:	jae    0x412848
  41281f:	cld    
  412820:	imul   esp,DWORD PTR [eax-0x3bed81f8],0x1e
  412827:	pop    ecx
  412828:	out    0x2b,eax
  41282a:	jnp    0x412887
  41282c:	jmp    0xed39013f
  412831:	mov    ah,0xd7
  412833:	mov    cl,0xdf
  412835:	jge    0x412837
  412837:	push   ebp
  412838:	pop    ss
  412839:	stos   DWORD PTR es:[edi],eax
  41283a:	cmp    al,0x7
  41283c:	maxps  xmm2,XMMWORD PTR [edi+0x51bb9aa9]
  412843:	mov    cl,0x4a
  412845:	aad    0x3c
  412847:	mov    esi,0x1ebf98b9
  41284c:	outs   dx,DWORD PTR ds:[esi]
  41284d:	dec    eax
  41284e:	dec    esi
  41284f:	hlt    
  412850:	imul   edi,DWORD PTR [ebx+0x75ac7740],0x437cedd4
  41285a:	add    bl,BYTE PTR [edi+0x246f634e]
  412860:	aaa    
  412861:	pusha  
  412862:	sahf   
  412863:	lods   eax,DWORD PTR ds:[esi]
  412864:	(bad)  
  412865:	stc    
  412866:	push   edx
  412867:	xchg   ebx,eax
  412868:	enter  0x4139,0xec
  41286c:	push   esp
  41286d:	or     eax,0x47d8d541
  412872:	stc    
  412873:	jno    0x41282e
  412875:	lahf   
  412876:	lds    esp,FWORD PTR [ecx-0x50]
  412879:	cmp    al,0x1d
  41287b:	fbstp  TBYTE PTR gs:[esi-0x2d]
  41287f:	or     ecx,ebp
  412881:	adc    BYTE PTR [edi-0x52],0xc5
  412885:	push   edx
  412886:	dec    ebp
  412887:	mov    bh,0x6f
  412889:	lds    cx,DWORD PTR [edi-0x72ad075]
  412890:	mov    WORD PTR [ecx],?
  412892:	cmova  edi,ebp
  412895:	retf   
  412896:	mov    WORD PTR [ebx+eax*8],gs
  412899:	sub    DWORD PTR [edx],esp
  41289b:	mov    edx,0xa7b6aa4c
  4128a0:	(bad)  
  4128a1:	xor    ebp,DWORD PTR [eax]
  4128a3:	ret    
  4128a4:	push   esp
  4128a5:	retf   
  4128a6:	add    al,0xfd
  4128a8:	ins    WORD PTR es:[edi],dx
  4128aa:	rcl    DWORD PTR [eax-0x658d388],1
  4128b0:	xchg   edi,eax
  4128b1:	xchg   edx,eax
  4128b2:	xchg   ebp,eax
  4128b3:	pop    es
  4128b4:	push   ebp
  4128b5:	jno    0x412874
  4128b7:	sub    BYTE PTR [ebx-0x49],cl
  4128ba:	aam    0x90
  4128bc:	je     0x412857
  4128be:	ds or  eax,0x6fcdcb05
  4128c4:	mov    esi,0x8993f0f2
  4128c9:	xchg   esp,eax
  4128ca:	imul   ecx,DWORD PTR [edx+0x6c872933],0x8c64f07f
  4128d4:	sbb    ecx,edi
  4128d6:	and    al,0x16
  4128d8:	jae    0x412892
  4128da:	adc    DWORD PTR [ecx],edi
  4128dc:	mov    ah,0xa5
  4128de:	imul   edx,DWORD PTR [ebx+0x54],0x4005d152
  4128e5:	and    dl,bl
  4128e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e8:	stos   DWORD PTR es:[edi],eax
  4128e9:	sbb    al,0xed
  4128eb:	sbb    DWORD PTR [ebp-0x6a4968d7],edi
  4128f1:	or     DWORD PTR [edx+eax*8],0x6de2a22e
  4128f8:	pop    eax
  4128f9:	(bad)  [eax]
  4128fb:	sbb    DWORD PTR [ebx+0x2ecf3c80],0x61
  412902:	xor    BYTE PTR [eax-0x1a591119],al
  412908:	stos   BYTE PTR es:[edi],al
  412909:	adc    dh,BYTE PTR [esi+0x1b]
  41290c:	dec    eax
  41290d:	mov    eax,ds:0x9d229812
  412912:	loope  0x4128b2
  412914:	add    esp,esi
  412916:	aad    0xc6
  412918:	out    dx,eax
  412919:	mov    esi,0x527f59e0
  41291e:	push   esi
  41291f:	jb     0x412948
  412921:	ret    
  412922:	call   0x5da4:0x3b5a386b
  412929:	xchg   edi,eax
  41292a:	sub    ecx,DWORD PTR ss:[ebx+0x3c2bc5f9]
  412931:	ret    
  412932:	dec    ebx
  412933:	fcomp  QWORD PTR [ebx]
  412935:	aad    0xf3
  412937:	pop    ebp
  412938:	jmp    0xee99:0x20c19426
  41293f:	mov    ah,0x10
  412941:	cmp    edi,DWORD PTR [edi]
  412943:	adc    eax,0xec58955d
  412948:	xor    eax,0x2e75c20c
  41294d:	inc    esi
  41294e:	into   
  41294f:	loopne 0x412938
  412951:	imul   ebp,DWORD PTR [ebx+0x24],0x850bd55c
  412958:	fld    QWORD PTR [ebx]
  41295a:	clc    
  41295b:	dec    ecx
  41295c:	dec    edx
  41295d:	or     eax,0x691826a1
  412962:	retf   
  412963:	rcr    BYTE PTR [edi+eiz*2],0x2f
  412967:	xor    edi,ebx
  412969:	mov    bl,0x79
  41296b:	fcmovnbe st,st(6)
  41296d:	mov    bl,0xf2
  41296f:	push   edx
  412970:	bound  esp,QWORD PTR [ebp+0x59]
  412973:	loop   0x41298f
  412975:	stc    
  412976:	jmp    0xdcac:0xcc20302a
  41297d:	pusha  
  41297e:	loop   0x41299f
  412980:	and    esi,DWORD PTR [eax+ebx*4-0x3942e035]
  412987:	xor    cl,cl
  412989:	mov    esi,0xbc74cfc0
  41298e:	icebp  
  41298f:	adc    ebx,DWORD PTR [edi]
  412991:	popf   
  412992:	ins    BYTE PTR es:[edi],dx
  412993:	sbb    ah,cl
  412995:	mov    dl,bl
  412997:	adc    cl,ah
  412999:	or     DWORD PTR [ebp-0x7efc23a7],eax
  41299f:	repz fiadd DWORD PTR [ebx+0x7a86208]
  4129a6:	stos   BYTE PTR es:[edi],al
  4129a7:	xchg   ebp,eax
  4129a8:	leave  
  4129a9:	jmp    0x32fe:0x95f937be
  4129b0:	mov    eax,0x9b91176f
  4129b5:	xchg   edx,eax
  4129b6:	(bad)  
  4129b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b8:	cmc    
  4129b9:	jmp    FWORD PTR [ecx+0x1ca38daf]
  4129bf:	mov    ebp,0x65e7393
  4129c4:	cmp    eax,0x953eb348
  4129c9:	jg     0x412a0d
  4129cb:	xchg   edx,eax
  4129cc:	mov    ch,BYTE PTR [esi+eiz*1]
  4129cf:	shl    DWORD PTR [ebp+0x523c6ad5],cl
  4129d5:	ret    0xcd8e
  4129d8:	dec    ebx
  4129d9:	sbb    eax,DWORD PTR ds:0x60f29329
  4129df:	cli    
  4129e0:	and    dh,dl
  4129e2:	push   esi
  4129e3:	xor    edx,DWORD PTR [ebx+0x6980e1a1]
  4129e9:	sti    
  4129ea:	add    BYTE PTR [ebp+ebp*1-0x17],bl
  4129ee:	loope  0x4129a2
  4129f0:	dec    esi
  4129f1:	mov    ebx,0x32b499d9
  4129f6:	and    al,0x74
  4129f8:	cdq    
  4129f9:	out    0xe4,eax
  4129fb:	fs loopne 0x412a35
  4129fe:	adc    ebp,edx
  412a00:	push   eax
  412a01:	out    dx,eax
  412a02:	setp   BYTE PTR [ebp+0x19048916]
  412a09:	pop    ebx
  412a0a:	aaa    
  412a0b:	and    esp,ebp
  412a0d:	mov    ds:0xe52bfc3e,eax
  412a12:	dec    edx
  412a13:	mov    bh,0x9a
  412a15:	je     0x4129ed
  412a17:	mov    ah,0x17
  412a19:	xor    BYTE PTR [ebx+0x32e47d22],dl
  412a1f:	adc    al,0xd1
  412a21:	jnp    0x4129a3
  412a23:	jns    0x4129f7
  412a25:	mov    bl,0xbf
  412a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a28:	dec    edx
  412a29:	cmc    
  412a2a:	stc    
  412a2b:	jbe    0x4129d5
  412a2d:	adc    esp,DWORD PTR ds:0x3ab1e7be
  412a33:	stc    
  412a34:	test   eax,0x8f2d0f67
  412a39:	fimul  DWORD PTR [ebp-0x35]
  412a3c:	icebp  
  412a3d:	pop    edx
  412a3e:	push   0x39
  412a40:	mov    ch,0x9e
  412a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a43:	xor    esi,DWORD PTR [ebp+0xf2bb1b7]
  412a49:	gs push ecx
  412a4b:	xchg   edi,eax
  412a4c:	lahf   
  412a4d:	inc    esi
  412a4e:	das    
  412a4f:	xchg   edi,eax
  412a50:	cli    
  412a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a52:	out    dx,eax
  412a53:	sbb    dh,BYTE PTR [eax]
  412a55:	clc    
  412a56:	xor    eax,0x3f68918a
  412a5b:	sub    al,0x3b
  412a5d:	cdq    
  412a5e:	mov    bl,0xe4
  412a61:	inc    eax
  412a62:	test   al,0x78
  412a64:	mov    esp,0x484e3d09
  412a69:	cdq    
  412a6a:	add    dh,BYTE PTR [esi-0x38fbfc57]
  412a70:	into   
  412a71:	aam    0xe8
  412a73:	es out dx,al
  412a75:	or     dh,BYTE PTR fs:[eax-0x6c69b830]
  412a7c:	adc    al,0x48
  412a7e:	mov    ch,0x1c
  412a80:	mov    edx,DWORD PTR [edx]
  412a82:	or     DWORD PTR [edi+0x23e98fe1],eax
  412a88:	or     eax,0xb0cdce16
  412a8d:	add    BYTE PTR [ebx+0x3da4b0a1],0x87
  412a94:	mov    eax,ds:0xa4c74493
  412a99:	adc    eax,0xc0cd2ccc
  412a9e:	dec    edi
  412a9f:	shr    bh,1
  412aa1:	test   eax,0x1fb53164
  412aa6:	adc    dl,BYTE PTR [eax+0x37]
  412aa9:	imul   ebx,DWORD PTR [esi],0x37
  412aac:	cmp    al,0xc5
  412aae:	stos   DWORD PTR es:[edi],eax
  412aaf:	dec    ebx
  412ab0:	loop   0x412b1c
  412ab2:	test   BYTE PTR [ebp+edi*1+0x28],dl
  412ab6:	push   ds
  412ab7:	jmp    0x412b21
  412ab9:	or     ah,BYTE PTR [edx-0x722a5d48]
  412abf:	stos   BYTE PTR es:[edi],al
  412ac0:	cdq    
  412ac1:	scas   eax,DWORD PTR es:[edi]
  412ac2:	repz pop eax
  412ac4:	mov    eax,0xa3963fe
  412ac9:	cmp    ebx,edx
  412acb:	pusha  
  412acc:	test   eax,0xb161d15e
  412ad1:	xchg   esp,eax
  412ad2:	mov    edx,0xa662c909
  412ad7:	fild   DWORD PTR [ecx]
  412ad9:	shr    DWORD PTR [ebx-0x7d6de3f7],0xa7
  412ae0:	rcl    DWORD PTR [edx],0x91
  412ae3:	pop    eax
  412ae4:	push   ebp
  412ae5:	pop    ecx
  412ae6:	out    dx,al
  412ae7:	adc    eax,0x37801394
  412aec:	mov    esp,0x17fa14b7
  412af1:	cmp    eax,0x9d7eb058
  412af6:	in     al,dx
  412af7:	xchg   DWORD PTR [edi-0x476b1955],ecx
  412afd:	mov    ebp,0x3e3e691d
  412b02:	jnp    0x412b47
  412b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b05:	inc    ecx
  412b06:	pop    ecx
  412b07:	mov    esi,0xf5f478b3
  412b0c:	sub    edi,ebx
  412b0e:	xchg   edx,eax
  412b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b10:	adc    cl,bl
  412b12:	fcomp  QWORD PTR [ebx-0x69033e21]
  412b18:	js     0x412b04
  412b1a:	call   0x3cba0001
  412b1f:	in     al,0x9
  412b21:	mov    DWORD PTR [edi-0x60a542f1],edi
  412b27:	cdq    
  412b28:	icebp  
  412b29:	outs   dx,BYTE PTR ds:[esi]
  412b2a:	jg     0x412b56
  412b2c:	sbb    ecx,DWORD PTR [ebx+0x39]
  412b2f:	loope  0x412b97
  412b31:	sbb    bl,BYTE PTR [ebx+0x1]
  412b34:	cli    
  412b35:	inc    edi
  412b36:	das    
  412b37:	xor    al,0xc9
  412b39:	adc    eax,0x25a62711
  412b3e:	into   
  412b3f:	and    edx,ecx
  412b41:	and    eax,0xd69f78c2
  412b46:	js     0x412acf
  412b48:	js     0x412ad1
  412b4a:	(bad)  
  412b4b:	mov    ebp,0x7dd453bb
  412b50:	jb     0x412af7
  412b52:	lods   al,BYTE PTR ds:[esi]
  412b53:	popa   
  412b54:	arpl   bx,sp
  412b56:	pusha  
  412b57:	adc    ah,BYTE PTR [esi+0x705bdefe]
  412b5d:	std    
  412b5e:	mov    ch,0x2f
  412b60:	fwait
  412b61:	sti    
  412b62:	lock sbb BYTE PTR [esi+0x2f069c02],0x98
  412b6a:	and    eax,0xe3926f9
  412b6f:	jo     0x412b51
  412b71:	daa    
  412b72:	sar    BYTE PTR [ebx-0x3],1
  412b75:	mov    es,ebx
  412b77:	cmp    dh,BYTE PTR [edx+0x6fd69a41]
  412b7d:	pop    es
  412b7e:	std    
  412b7f:	dec    ebp
  412b80:	lock sbb eax,0x6ee5202d
  412b86:	js     0x412b28
  412b88:	std    
  412b89:	mov    esp,0x29db996b
  412b8e:	adc    ah,BYTE PTR [edi-0x7]
  412b91:	mov    dl,0x87
  412b93:	mul    DWORD PTR [esi]
  412b95:	ffree  st(4)
  412b97:	not    DWORD PTR [eax+0x5c0a228f]
  412b9d:	je     0x412b23
  412b9f:	xor    DWORD PTR [edx-0x15],eax
  412ba2:	jg     0x412bd6
  412ba4:	xchg   esi,eax
  412ba5:	adc    ebx,DWORD PTR [ebx-0x7f]
  412ba8:	leave  
  412ba9:	mov    bh,BYTE PTR [edi+0x68]
  412bac:	shl    DWORD PTR [ebx],cl
  412bae:	dec    esi
  412baf:	adc    DWORD PTR [eax],edi
  412bb1:	ja     0x412be2
  412bb3:	inc    esi
  412bb4:	dec    ecx
  412bb5:	ss call 0xed31f393
  412bbb:	or     al,0xbb
  412bbd:	sub    eax,DWORD PTR [ecx+edi*1+0x1]
  412bc1:	cmp    eax,0x6400bf99
  412bc6:	mov    cl,0xc2
  412bc8:	loop   0x412ba9
  412bca:	cmp    BYTE PTR [edi-0x17],al
  412bcd:	cwde   
  412bce:	adc    ch,dh
  412bd0:	dec    esi
  412bd1:	in     eax,0x69
  412bd3:	push   edi
  412bd4:	dec    eax
  412bd5:	cwde   
  412bd6:	jns    0x412b5c
  412bd8:	outs   dx,BYTE PTR ds:[esi]
  412bd9:	jg     0x412b98
  412bdb:	dec    ebx
  412bdc:	lds    ecx,FWORD PTR [ecx-0x2b]
  412bdf:	lods   eax,DWORD PTR ds:[esi]
  412be0:	dec    eax
  412be1:	and    ebp,DWORD PTR [esi]
  412be3:	mov    BYTE PTR [eax+0x4bfddb1c],bh
  412be9:	inc    esi
  412bea:	jmp    esi
  412bec:	pop    ss
  412bed:	sbb    eax,0x1a7b4820
  412bf2:	imul   ecx,DWORD PTR [ebx-0x67],0xf
  412bf6:	mov    ah,0x35
  412bf8:	scas   al,BYTE PTR es:[edi]
  412bf9:	aaa    
  412bfa:	and    eax,edi
  412bfc:	fist   WORD PTR [esi+0x19e734cc]
  412c02:	push   0xbf437f1
  412c07:	stos   BYTE PTR es:[edi],al
  412c08:	cwde   
  412c09:	data16 xchg BYTE PTR [edx+ebx*8-0x7d09b4bc],cl
  412c11:	mov    ebx,0xdec49f2a
  412c16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c17:	cld    
  412c18:	(bad)  
  412c19:	mul    eax
  412c1b:	sbb    al,0x80
  412c1d:	ins    DWORD PTR es:[edi],dx
  412c1e:	jp     0x412c9a
  412c20:	inc    esi
  412c21:	mov    fs,WORD PTR [edx]
  412c23:	rsqrtps xmm4,XMMWORD PTR [edx+0x3e]
  412c27:	in     al,0x32
  412c29:	push   edi
  412c2a:	adc    eax,0xd7e769c6
  412c2f:	je     0x412c92
  412c31:	lahf   
  412c32:	imul   edi,DWORD PTR [edx+0x69],0xd414de1d
  412c39:	sub    al,0x11
  412c3b:	lahf   
  412c3c:	xor    dl,bl
  412c3e:	mov    al,0x74
  412c40:	sub    ebx,esi
  412c42:	jp     0x412c1c
  412c44:	mov    ?,WORD PTR [esi]
  412c46:	mov    ebx,0xf94eb16c
  412c4b:	jmp    0xfa2d45c7
  412c50:	out    dx,eax
  412c51:	stc    
  412c52:	and    BYTE PTR [ecx+0x2c798642],ah
  412c58:	sub    DWORD PTR [ebp-0x66],eax
  412c5b:	clc    
  412c5c:	mov    edx,DWORD PTR [esi-0x5b]
  412c5f:	add    dh,BYTE PTR [ebx-0x7e47d54d]
  412c65:	mov    BYTE PTR [ecx+0x2cd3d77c],bh
  412c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c6c:	mov    WORD PTR [esi+0x18],es
  412c6f:	or     ecx,DWORD PTR [ecx+0x7e]
  412c72:	int3   
  412c73:	mov    edx,0x6ffdd7d9
  412c78:	mov    esp,0xf3a00b6c
  412c7d:	push   ss
  412c7e:	or     al,0x4e
  412c80:	xor    bl,BYTE PTR [esi]
  412c82:	test   eax,0x700f1be3
  412c87:	dec    ebx
  412c88:	sub    al,bh
  412c8a:	inc    eax
  412c8b:	cmp    eax,DWORD PTR [edi]
  412c8d:	out    dx,al
  412c8e:	retf   0x65d5
  412c91:	jmp    0x77d:0xae5142aa
  412c98:	ds in  al,0x3f
  412c9b:	shl    DWORD PTR [edi-0x3f3e077a],0xff
  412ca2:	dec    eax
  412ca3:	mov    WORD PTR [ebx],fs
  412ca5:	mov    dl,0x3
  412ca7:	mov    edi,0x4154f1
  412cac:	rcl    BYTE PTR [ebp+0x65],0x58
  412cb0:	xor    DWORD PTR [edi+esi*1-0x37510f72],ebp
  412cb7:	push   ds
  412cb8:	iret   
  412cb9:	fmul   QWORD PTR [ebp+0x1941ae52]
  412cbf:	push   ebp
  412cc0:	sub    ax,0xe95d
  412cc4:	nop
  412cc5:	mov    WORD PTR [ebx],gs
  412cc7:	scas   eax,DWORD PTR es:[edi]
  412cc8:	inc    esp
  412cc9:	out    0x45,al
  412ccb:	dec    eax
  412ccc:	adc    al,0x38
  412cce:	pop    ds
  412ccf:	cwde   
  412cd0:	or     ah,0xff
  412cd3:	add    DWORD PTR [edx-0x57],0x65c0963b
  412cda:	and    eax,0x33220cb5
  412cdf:	mov    ebx,0x39d72042
  412ce4:	daa    
  412ce5:	ss xchg edi,eax
  412ce7:	mov    ebx,0x5fd0cdd8
  412cec:	add    al,BYTE PTR [eax+0x3af80be6]
  412cf2:	bound  esp,QWORD PTR [esi+0x214b342a]
  412cf8:	cmp    al,0x3e
  412cfa:	adc    DWORD PTR [eax+ecx*8],0x68
  412cfe:	mov    esp,0x8e941f2d
  412d03:	and    ch,BYTE PTR [ebp+eax*2+0x71]
  412d07:	pop    ss
  412d08:	retf   
  412d09:	jg     0x412c92
  412d0b:	dec    edi
  412d0c:	xor    edi,esp
  412d0e:	lahf   
  412d0f:	mov    ebp,0x19e2cd34
  412d14:	popa   
  412d15:	xor    ebx,edx
  412d17:	pop    edx
  412d18:	rcl    bh,1
  412d1a:	ret    
  412d1b:	jo     0x412cfd
  412d1d:	pop    es
  412d1e:	inc    edx
  412d1f:	and    bl,BYTE PTR [ebp-0x49]
  412d22:	scas   al,BYTE PTR es:[edi]
  412d23:	jnp    0x412d3a
  412d25:	mov    bh,0x2c
  412d27:	ficom  WORD PTR ds:0xe51b8ef5
  412d2d:	jp     0x412d42
  412d2f:	imul   esi,DWORD PTR [ecx+edx*8-0x47],0xa3435e6a
  412d37:	dec    ecx
  412d38:	xchg   ebx,eax
  412d39:	pop    ss
  412d3a:	daa    
  412d3b:	sub    dh,BYTE PTR [esi]
  412d3d:	mov    esp,0x75480fb9
  412d42:	mov    DWORD PTR [edx+0x2c],ecx
  412d45:	or     DWORD PTR [ebp-0x70],0x6a149c64
  412d4c:	mov    ebp,0x2a366a4a
  412d51:	ds push cs
  412d53:	popa   
  412d54:	sub    esp,ecx
  412d56:	push   esi
  412d57:	(bad)  
  412d58:	popf   
  412d59:	dec    esi
  412d5a:	sbb    bh,BYTE PTR [ecx-0x75]
  412d5d:	pushf  
  412d5e:	or     ch,BYTE PTR [bx]
  412d61:	in     eax,0x68
  412d63:	mov    bl,bh
  412d65:	popf   
  412d66:	mov    eax,ds:0xd4eaa6fd
  412d6b:	pushf  
  412d6c:	stos   DWORD PTR es:[edi],eax
  412d6d:	aas    
  412d6e:	sub    eax,0x6c89f56f
  412d73:	rcr    dl,0x1b
  412d76:	cmp    eax,0x32878d26
  412d7b:	or     DWORD PTR [eax+0x50],ebx
  412d7e:	jno    0x412d62
  412d80:	(bad)  
  412d81:	ficomp DWORD PTR [ebx]
  412d83:	dec    ebx
  412d84:	jmp    0x595c:0xfa69999a
  412d8b:	dec    eax
  412d8c:	out    dx,eax
  412d8d:	stc    
  412d8e:	mov    dl,0x33
  412d90:	outs   dx,BYTE PTR ds:[esi]
  412d91:	and    DWORD PTR [edx],ebp
  412d93:	aam    0x52
  412d95:	out    0xaa,al
  412d97:	(bad)  
  412d99:	cmp    ch,BYTE PTR [ebp+0x56ce744f]
  412d9f:	test   BYTE PTR [ebx-0x40],0x93
  412da3:	add    eax,0x41a2dbdb
  412da8:	leave  
  412da9:	outs   dx,DWORD PTR ds:[esi]
  412daa:	inc    eax
  412dab:	outs   dx,BYTE PTR ds:[esi]
  412dac:	pusha  
  412dad:	jl     0x412d36
  412daf:	and    eax,DWORD PTR [ebp-0x7b209f07]
  412db5:	ror    esp,cl
  412db7:	in     al,dx
  412db8:	xchg   edx,eax
  412db9:	arpl   WORD PTR [esi-0x44c9905b],dx
  412dbf:	dec    edx
  412dc0:	lahf   
  412dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc2:	xchg   esi,eax
  412dc3:	jg     0x412deb
  412dc5:	mov    esp,0xc2bfe0dd
  412dca:	sub    ch,BYTE PTR [edx-0x77]
  412dcd:	jge    0x412e03
  412dcf:	mov    ebp,0xaece87a7
  412dd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dd5:	or     edx,DWORD PTR [edi]
  412dd7:	inc    edx
  412dd8:	push   ds
  412dd9:	push   edi
  412dda:	adc    cl,cl
  412ddc:	push   esi
  412ddd:	mov    ebx,0xb4440ed
  412de2:	mov    eax,ds:0x27c6693a
  412de7:	or     BYTE PTR ds:0x144b9b3d,cl
  412ded:	jp     0x412dea
  412def:	call   0x5e7dbbf0
  412df4:	adc    al,0xea
  412df6:	retf   0x8536
  412df9:	pop    ds
  412dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dfb:	dec    ebp
  412dfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dfd:	xchg   edi,eax
  412dfe:	ret    0x63ea
  412e01:	stos   BYTE PTR es:[edi],al
  412e02:	aam    0x2e
  412e04:	jbe    0x412e31
  412e06:	jle    0x412ddf
  412e08:	in     al,0x64
  412e0a:	add    al,0x3c
  412e0c:	mov    ebx,0xe32ef317
  412e11:	pop    ebp
  412e12:	xor    DWORD PTR [edi-0x7e30dde1],0x414cea38
  412e1c:	mov    ss,WORD PTR [ebx+0x71aabec0]
  412e22:	out    0x22,al
  412e24:	mov    eax,ds:0x34b9a4e6
  412e29:	rcl    DWORD PTR [edi-0x4c],1
  412e2c:	ja     0x412dd8
  412e2e:	dec    ecx
  412e2f:	retf   
  412e30:	dec    ebx
  412e31:	mov    al,ds:0x82532432
  412e36:	inc    ebx
  412e37:	les    ecx,FWORD PTR [eax]
  412e39:	rcl    edx,1
  412e3b:	cmp    eax,0xafda13eb
  412e41:	(bad)  
  412e42:	out    0x5a,eax
  412e44:	(bad)  [edx]
  412e46:	mov    fs,WORD PTR ds:0x887efce1
  412e4c:	sub    BYTE PTR [ebx+0x57],dl
  412e4f:	push   ss
  412e50:	cwde   
  412e51:	test   BYTE PTR [eax],ah
  412e53:	inc    edx
  412e54:	sub    al,bl
  412e56:	or     edx,eax
  412e58:	mov    al,0xf0
  412e5a:	loope  0x412eac
  412e5c:	cmp    ah,BYTE PTR [edi-0x21]
  412e5f:	out    dx,al
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	iret   
  412e62:	shl    BYTE PTR [edx+0x239c2cd0],1
  412e68:	imul   ebx,DWORD PTR [esi-0x5ef474a4],0x76
  412e6f:	(bad)  
  412e70:	in     al,0xc7
  412e72:	dec    DWORD PTR ds:0x4ac64e46
  412e78:	push   0x36201ef0
  412e7d:	jmp    0x412ee4
  412e7f:	clc    
  412e80:	in     eax,dx
  412e81:	mov    WORD PTR [esi-0x47],?
  412e84:	iret   
  412e85:	xor    ecx,eax
  412e87:	sbb    edx,edi
  412e89:	pop    ecx
  412e8a:	ja     0x412e12
  412e8c:	xor    ecx,0xfffffff3
  412e8f:	aam    0xa7
  412e91:	jo     0x412e3f
  412e93:	arpl   WORD PTR [esi+0x7],cx
  412e96:	iret   
  412e97:	je     0x412eb4
  412e99:	and    DWORD PTR ds:0x1c0ce4a7,ebx
  412e9f:	mov    bl,0x16
  412ea1:	in     eax,dx
  412ea2:	or     bl,BYTE PTR [eax*2-0x52ed2c7f]
  412ea9:	mov    ds:0x9e3ccc23,eax
  412eae:	int3   
  412eaf:	mul    dl
  412eb1:	xchg   esp,eax
  412eb2:	je     0x412e50
  412eb4:	xchg   esp,eax
  412eb5:	sub    ecx,DWORD PTR [edi]
  412eb7:	clc    
  412eb8:	inc    esi
  412eb9:	dec    eax
  412eba:	and    BYTE PTR [ebp-0x5b],al
  412ebd:	mov    esi,0xbbc41916
  412ec2:	int    0x67
  412ec4:	ret    0xb095
  412ec7:	inc    edx
  412ec8:	jecxz  0x412e9e
  412eca:	into   
  412ecb:	push   ecx
  412ecc:	sub    DWORD PTR [edx+0x65],0x85cd86af
  412ed3:	popf   
  412ed4:	out    0xbc,al
  412ed6:	aaa    
  412ed7:	repz mov ch,0x85
  412eda:	out    0x74,al
  412edc:	clc    
  412edd:	add    DWORD PTR [ebx+0x5cb2e12],edi
  412ee3:	retf   0xee45
  412ee6:	(bad)  
  412ee7:	push   cs
  412ee8:	xor    al,0xd6
  412eea:	dec    edx
  412eeb:	sub    eax,esi
  412eed:	push   edi
  412eee:	inc    edi
  412eef:	jns    0x412e9d
  412ef1:	test   DWORD PTR [ebx-0x6fdcff68],0x2abb793f
  412efb:	xchg   ebx,eax
  412efc:	pop    esp
  412efd:	pop    esp
  412efe:	nop
  412eff:	push   eax
  412f00:	test   BYTE PTR [edi+eiz*8-0x33c5f530],cl
  412f07:	sahf   
  412f08:	sahf   
  412f09:	add    dl,BYTE PTR [ecx-0x25]
  412f0c:	aad    0x32
  412f0e:	ffreep st(1)
  412f10:	pop    eax
  412f11:	jg     0x412ec2
  412f13:	jnp    0x412ec4
  412f15:	sbb    bl,BYTE PTR [ecx]
  412f17:	xchg   ebx,eax
  412f18:	mov    dh,BYTE PTR [ebp+0x78]
  412f1b:	fst    QWORD PTR [edi]
  412f1d:	cs xor eax,0xbcf620ec
  412f23:	xchg   BYTE PTR [ebx-0x6039f65b],ch
  412f29:	or     bh,dl
  412f2b:	retf   
  412f2c:	retf   
  412f2d:	jmp    0xe80a:0x4cd6209e
  412f34:	sahf   
  412f35:	mov    esi,0xd1875155
  412f3a:	lock pop ebx
  412f3c:	in     eax,dx
  412f3d:	xor    ecx,DWORD PTR ds:0x525ac3e6
  412f43:	sbb    DWORD PTR [ebx],ecx
  412f45:	test   al,0x8a
  412f47:	(bad)  
  412f48:	cmc    
  412f49:	and    ah,BYTE PTR [edx+edi*1-0x14d88999]
  412f50:	xchg   edi,eax
  412f51:	mov    edi,0xb180dd9f
  412f56:	cld    
  412f57:	xchg   esi,eax
  412f58:	leave  
  412f59:	retf   0x1b4e
  412f5c:	scas   eax,DWORD PTR es:[edi]
  412f5d:	push   cs
  412f5e:	xchg   ebp,eax
  412f5f:	jae    0x412ef9
  412f61:	imul   ebp,DWORD PTR [ebp+0x1546a8c8],0x5def1bf4
  412f6b:	daa    
  412f6c:	cli    
  412f6d:	dec    ecx
  412f6e:	call   0x99103614
  412f73:	push   ds
  412f74:	sub    eax,0x1b6c42f7
  412f79:	pop    esi
  412f7a:	jmp    0xeed3fd95
  412f7f:	ins    BYTE PTR es:[edi],dx
  412f80:	xor    eax,0xe3354baf
  412f85:	push   edx
  412f86:	mov    esp,0x5ca3ce30
  412f8b:	push   esi
  412f8c:	jg     0x412f6b
  412f8e:	test   DWORD PTR [esi-0x243f42fa],eax
  412f94:	lods   eax,DWORD PTR ds:[esi]
  412f95:	adc    BYTE PTR [edx-0x8],dl
  412f98:	sbb    cl,ah
  412f9a:	adc    eax,0xda5352ec
  412f9f:	sbb    edi,DWORD PTR [bx+si-0x2b]
  412fa3:	imul   eax,DWORD PTR cs:[edi],0x73
  412fa7:	mov    al,BYTE PTR [edi]
  412fa9:	call   0x71c79345
  412fae:	rcl    edi,0xda
  412fb1:	retf   0x6574
  412fb4:	(bad)  
  412fb5:	pop    ecx
  412fb6:	stc    
  412fb7:	jns    0x412f65
  412fb9:	xchg   DWORD PTR [edi+0x5ffe8690],esp
  412fbf:	retf   
  412fc0:	adc    eax,0x91c72a48
  412fc5:	pop    ebx
  412fc6:	push   ecx
  412fc7:	sbb    DWORD PTR [esi],ebx
  412fc9:	or     BYTE PTR [edx+0xd],ah
  412fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fcd:	rol    BYTE PTR [edi+0x966c151],cl
  412fd3:	pop    ds
  412fd4:	stos   DWORD PTR es:[edi],eax
  412fd5:	push   esi
  412fd6:	dec    ebx
  412fd7:	jp     0x412fbd
  412fd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fda:	test   dh,ch
  412fdc:	or     ebx,ecx
  412fde:	jne    0x413024
  412fe0:	popa   
  412fe1:	cs ins BYTE PTR es:[edi],dx
  412fe3:	call   0x4451:0x6174693b
  412fea:	push   0x38
  412fec:	jne    0x412f9e
  412fee:	les    esp,FWORD PTR [edi+ebx*8+0x5b5893f5]
  412ff5:	outs   dx,BYTE PTR ds:[esi]
  412ff6:	sbb    edi,ebp
  412ff8:	xchg   esp,eax
  412ff9:	sbb    al,0xca
  412ffb:	fsubrp st(6),st
  412ffd:	arpl   bx,si
  412fff:	xor    DWORD PTR [edx+0x5e7f4ae8],edx
  413005:	cld    
  413006:	pop    ebp
  413007:	and    DWORD PTR [eax+0x5],ebx
  41300a:	jbe    0x413023
  41300c:	dec    edx
  41300d:	ja     0x412fd8
  41300f:	add    esp,edx
  413011:	cmp    bl,BYTE PTR [ebp-0x73bd0844]
  413017:	lock sbb eax,0x837b61cb
  41301d:	jge    0x413051
  41301f:	ins    DWORD PTR es:[edi],dx
  413020:	test   eax,0xff9f6461
  413025:	lods   al,BYTE PTR ds:[esi]
  413026:	adc    eax,0x6eab2a99
  41302b:	int    0x49
  41302d:	dec    ecx
  41302e:	in     al,dx
  41302f:	aam    0x2
  413031:	xchg   DWORD PTR [edx-0x35f9d39f],edx
  413037:	jmp    0xaba86c95
  41303c:	xor    eax,0x9b5456bd
  413041:	pushf  
  413042:	inc    esi
  413043:	xchg   ebx,eax
  413044:	inc    eax
  413045:	and    edx,DWORD PTR [ebp+0x5df1c52b]
  41304b:	ficom  DWORD PTR [eax]
  41304d:	popa   
  41304e:	icebp  
  41304f:	js     0x413042
  413051:	mov    ch,0xef
  413053:	scas   eax,DWORD PTR es:[edi]
  413054:	dec    edi
  413055:	in     eax,0xd9
  413057:	or     BYTE PTR [edx-0x72],0xcc
  41305b:	fnsave ds:0x3d2ff6a
  413061:	bound  ebp,QWORD PTR [esi]
  413063:	std    
  413064:	das    
  413065:	lods   eax,DWORD PTR ds:[esi]
  413066:	push   cs
  413067:	pop    edi
  413068:	jmp    0x6e8b:0x54e0c48c
  41306f:	into   
  413070:	js     0x4130a5
  413072:	jmp    0xf73b:0x775befa3
  413079:	xchg   esi,eax
  41307a:	repnz rcr DWORD PTR [ecx+0x67],1
  41307e:	pusha  
  41307f:	push   edi
  413080:	out    0x4c,eax
  413082:	sub    eax,0x46b4b5ac
  413087:	add    bl,BYTE PTR [ecx]
  413089:	rcl    DWORD PTR [ecx],cl
  41308b:	data16 mov ah,0xa9
  41308e:	cmp    dh,BYTE PTR [edi]
  413090:	mov    al,ds:0x235ebecf
  413095:	clc    
  413096:	sbb    BYTE PTR [eax-0x77e3eef],dl
  41309c:	xor    bl,BYTE PTR [ebx-0x19]
  41309f:	stos   BYTE PTR es:[edi],al
  4130a0:	sbb    al,0x55
  4130a2:	cwde   
  4130a3:	mov    WORD PTR [eax],es
  4130a5:	outs   dx,DWORD PTR ds:[esi]
  4130a6:	xchg   ebp,eax
  4130a7:	hlt    
  4130a8:	(bad)  
  4130aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130ab:	dec    ebx
  4130ac:	dec    ecx
  4130ad:	sbb    DWORD PTR [edi+0x243e14c],esi
  4130b3:	stos   BYTE PTR es:[edi],al
  4130b4:	adc    DWORD PTR [ebx+0x7c],ebp
  4130b7:	cmp    al,BYTE PTR [edx-0x34]
  4130ba:	sti    
  4130bb:	jle    0x413061
  4130bd:	jmp    0x6a9d52ba
  4130c2:	fisub  DWORD PTR [edi+0x54edc9e3]
  4130c8:	call   0x77646906
  4130cd:	jno    0x4130c2
  4130cf:	adc    eax,0xc6a9a8ee
  4130d4:	sbb    cl,bh
  4130d6:	push   ecx
  4130d7:	push   edi
  4130d8:	sar    BYTE PTR [edi-0x16],1
  4130db:	cs inc esi
  4130dd:	cmp    esi,DWORD PTR [esi+0x48]
  4130e0:	addr16 cmp BYTE PTR [di-0x5d],0x88
  4130e6:	dec    ebx
  4130e7:	push   ecx
  4130e8:	imul   esp,DWORD PTR [edi-0x13cf005b],0x7d94e11a
  4130f2:	(bad)  
  4130f3:	xor    al,0x76
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	push   eax
  4130f7:	or     eax,0x73a0955c
  4130fc:	pop    ebx
  4130fd:	sti    
  4130fe:	pop    es
  4130ff:	or     dl,BYTE PTR [ebp+0x767b3397]
  413105:	push   0x22
  413107:	hlt    
  413108:	out    dx,eax
  413109:	mov    dh,BYTE PTR [eax]
  41310b:	mov    ch,0x83
  41310d:	shl    BYTE PTR [ecx-0x63],1
  413110:	imul   esp,DWORD PTR [eax+0x0],0xffffffca
  413114:	das    
  413115:	sar    DWORD PTR [edx],0xe6
  413118:	shl    DWORD PTR [edi],0x41
  41311b:	push   ss
  41311c:	inc    edx
  41311d:	xlat   BYTE PTR ds:[ebx]
  41311e:	inc    ebp
  41311f:	push   ebp
  413120:	add    dh,dl
  413122:	popa   
  413123:	outs   dx,BYTE PTR ds:[esi]
  413124:	retf   
  413125:	sbb    dx,sp
  413128:	inc    esp
  413129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41312a:	pop    esp
  41312b:	rcr    BYTE PTR [eax+0x45],0xa4
  41312f:	mov    dh,0xdc
  413131:	sbb    ah,BYTE PTR [eax+0x71]
  413134:	mov    dh,0x3b
  413136:	pop    ss
  413137:	mov    edx,0xfa6bebbe
  41313c:	mov    bh,cl
  41313e:	imul   ecx,DWORD PTR [ebp-0x4f132688],0xa42780d1
  413148:	imul   DWORD PTR [edi-0x6932fe9]
  41314e:	fisub  WORD PTR [edi+ebp*4+0x52640e80]
  413155:	jo     0x413177
  413157:	ja     0x41314e
  413159:	addr16 mov bl,0xba
  41315c:	out    0x1a,al
  41315e:	loop   0x413147
  413160:	or     DWORD PTR [ebx-0x54e403ae],esi
  413166:	and    al,0xa2
  413168:	cdq    
  413169:	mov    al,0x41
  41316b:	ret    0x4beb
  41316e:	(bad)  
  41316f:	aaa    
  413170:	das    
  413171:	mov    ecx,esp
  413173:	push   edx
  413174:	sub    ah,BYTE PTR [ebx+ecx*1-0x3b]
  413178:	inc    eax
  413179:	repnz ins DWORD PTR es:[edi],dx
  41317b:	or     ebp,DWORD PTR [edx]
  41317d:	fnsave [ebx+0x5c]
  413180:	cmc    
  413181:	xchg   ecx,eax
  413182:	rcr    ch,0x34
  413185:	and    DWORD PTR [ebx],edx
  413187:	dec    edx
  413188:	dec    ebx
  413189:	jp     0x413201
  41318b:	mov    edx,0xdf699f21
  413190:	xchg   ecx,eax
  413191:	retf   0x2dfe
  413194:	lods   eax,DWORD PTR ds:[esi]
  413195:	cmp    bh,dl
  413197:	fsubr  QWORD PTR [edx+0x72169b67]
  41319d:	test   eax,0x48ee24b9
  4131a2:	xchg   ebx,eax
  4131a3:	retf   
  4131a4:	dec    esp
  4131a5:	pop    edi
  4131a6:	cmp    edi,edx
  4131a8:	ror    cl,0x66
  4131ab:	xchg   ebx,eax
  4131ac:	rol    DWORD PTR [esi-0x6f],cl
  4131af:	scas   al,BYTE PTR es:[edi]
  4131b0:	rcr    BYTE PTR [edx+0x91310fe],1
  4131b6:	add    ebx,ebx
  4131b8:	cld    
  4131b9:	xor    ah,BYTE PTR [esi+ebp*4]
  4131bc:	add    eax,0xb86463cc
  4131c1:	retf   0xb4b7
  4131c4:	loope  0x4131ae
  4131c6:	mov    ecx,0xc5349a61
  4131cb:	adc    eax,DWORD PTR [eax+esi*2-0x79fe19f2]
  4131d2:	cmp    bl,BYTE PTR [ebx+0x67]
  4131d5:	rol    eax,cl
  4131d7:	or     ah,0xa
  4131da:	mov    ds:0xe2ac530f,ax
  4131e0:	xchg   ebx,eax
  4131e1:	ins    BYTE PTR es:[edi],dx
  4131e2:	sbb    al,0xdd
  4131e4:	ja     0x413236
  4131e6:	lahf   
  4131e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e8:	cs lahf 
  4131ea:	cli    
  4131eb:	push   edx
  4131ec:	mov    eax,0xeec5d6fd
  4131f1:	loope  0x413251
  4131f3:	xor    BYTE PTR [edx],al
  4131f5:	jl     0x413247
  4131f7:	mov    al,0x8d
  4131f9:	or     BYTE PTR [edx],0xfd
  4131fc:	ds sub eax,0x2a442b08
  413202:	pusha  
  413203:	pusha  
  413204:	inc    ebp
  413205:	xchg   ecx,eax
  413206:	xor    eax,0x7a5ceab4
  41320b:	sub    DWORD PTR [eax],edi
  41320d:	mov    eax,0x7975123a
  413212:	and    eax,0x377f196b
  413217:	mov    esi,0x8a9eb0e3
  41321c:	dec    ebp
  41321d:	adc    cl,bh
  41321f:	pop    edi
  413220:	outs   dx,DWORD PTR ds:[esi]
  413221:	xchg   ebx,eax
  413222:	xchg   al,bl
  413224:	pop    eax
  413225:	inc    esi
  413226:	xlat   BYTE PTR ds:[ebx]
  413227:	ins    DWORD PTR es:[edi],dx
  413228:	mov    ebp,0xa449c716
  41322d:	rcl    DWORD PTR [edi+ecx*8],0x86
  413231:	jb     0x4131e8
  413233:	cmp    BYTE PTR [ecx],ch
  413235:	inc    eax
  413236:	jbe    0x413276
  413238:	retf   0x6b87
  41323b:	xchg   esi,eax
  41323c:	je     0x413231
  41323e:	dec    esi
  41323f:	dec    esi
  413240:	mov    edx,0xad71c758
  413245:	mov    ebx,0xdf69bd88
  41324a:	fs and esi,0x61
  41324e:	adc    DWORD PTR [esi+0xb],ecx
  413251:	ret    0x38da
  413254:	xchg   BYTE PTR [edx+0x55],cl
  413257:	fdivr  QWORD PTR [ecx-0x79]
  41325a:	aam    0xad
  41325c:	fst    QWORD PTR [ebx-0x17]
  41325f:	sbb    al,0xcf
  413261:	fwait
  413262:	xchg   ebp,eax
  413263:	out    dx,al
  413264:	xchg   DWORD PTR [esi-0x1b],eax
  413267:	lahf   
  413268:	(bad)  [ebp-0x6c1de72a]
  41326e:	dec    eax
  41326f:	adc    bl,BYTE PTR [ecx+edx*1+0x181c9492]
  413276:	in     eax,dx
  413277:	add    DWORD PTR [edx],eax
  413279:	xchg   BYTE PTR ds:0x62879bc1,bl
  41327f:	pop    ebx
  413280:	mov    fs,WORD PTR [ebp+0x1f]
  413283:	adc    ebp,ebx
  413285:	jnp    0x4132c9
  413287:	cmp    al,0xe3
  413289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41328a:	fcom   QWORD PTR [esi-0x797db2b3]
  413290:	sahf   
  413291:	lea    ebp,[eax]
  413293:	sbb    DWORD PTR [ecx],esi
  413295:	pop    ss
  413296:	sbb    BYTE PTR ds:0xefd266aa,cl
  41329c:	iret   
  41329d:	bound  ebp,QWORD PTR [ebx-0x4df273f3]
  4132a3:	in     al,0xcc
  4132a5:	cwde   
  4132a6:	and    dh,BYTE PTR [esi+0x32a8d496]
  4132ac:	push   es
  4132ad:	dec    eax
  4132ae:	fmul   DWORD PTR [ecx]
  4132b0:	daa    
  4132b1:	dec    eax
  4132b2:	repz sar ah,0xc
  4132b6:	cmp    al,0xc3
  4132b8:	sbb    eax,DWORD PTR [edx+0x1c707953]
  4132be:	pop    ebp
  4132bf:	add    bl,BYTE PTR ds:0x643d307e
  4132c5:	das    
  4132c6:	es int 0xee
  4132c9:	repnz mov al,0x2
  4132cc:	dec    eax
  4132cd:	or     DWORD PTR [ebx+0x5e],ebx
  4132d0:	dec    edx
  4132d1:	fisttp QWORD PTR [edi+0x7a]
  4132d5:	xchg   BYTE PTR [ebx-0x40],cl
  4132d8:	dec    ecx
  4132d9:	jb     0x413343
  4132db:	inc    eax
  4132dc:	rcr    bh,1
  4132de:	sbb    eax,0x92088a9e
  4132e3:	add    al,0x17
  4132e5:	xchg   ecx,eax
  4132e6:	xor    eax,0x7c096850
  4132eb:	scas   eax,DWORD PTR es:[edi]
  4132ec:	cmp    eax,0x9f3eed46
  4132f1:	mov    gs,WORD PTR [ecx+ebx*2-0x73]
  4132f5:	inc    esi
  4132f6:	xchg   ecx,eax
  4132f7:	ret    
  4132f8:	pop    ebp
  4132f9:	and    eax,0x1edbac7c
  4132fe:	cmc    
  4132ff:	in     eax,dx
  413300:	lea    ebp,[esi]
  413302:	sub    al,BYTE PTR [ebp+0xd]
  413305:	test   al,0x95
  413307:	arpl   ax,bx
  413309:	in     al,0xe9
  41330b:	(bad)  
  41330c:	ins    DWORD PTR es:[edi],dx
  41330d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41330e:	lock pop ds
  413310:	jno    0x413329
  413312:	outs   dx,DWORD PTR ds:[esi]
  413313:	dec    ecx
  413314:	cli    
  413315:	jl     0x413354
  413317:	jmp    0x41336d
  413319:	addr16 add al,0x1f
  41331c:	mov    eax,ds:0x41940fb0
  413321:	scas   al,BYTE PTR es:[edi]
  413322:	daa    
  413323:	or     ah,BYTE PTR [ecx+0x26a6af07]
  413329:	push   cs
  41332a:	ins    DWORD PTR es:[edi],dx
  41332b:	push   cs
  41332c:	jle    0x413389
  41332e:	test   eax,0xe469f78d
  413333:	nop
  413334:	sahf   
  413335:	pop    ebx
  413336:	sbb    bl,bl
  413338:	jle    0x4132f8
  41333a:	call   0x3d5a:0x9b2d91cc
  413341:	clc    
  413342:	cmp    DWORD PTR [ebp+0xe],0xade9f1a0
  413349:	jne    0x4132d6
  41334b:	stos   BYTE PTR es:[edi],al
  41334c:	out    0xda,eax
  41334e:	mov    ch,BYTE PTR [esi]
  413350:	xchg   ebp,eax
  413351:	sbb    cl,BYTE PTR [ecx+0x3376e012]
  413357:	jmp    0x37310fcf
  41335c:	xor    eax,0x4991d34a
  413361:	stc    
  413362:	test   BYTE PTR [ecx+0x5a0347f],bl
  413368:	fninit 
  41336a:	and    esp,esi
  41336c:	sbb    al,BYTE PTR [ebx]
  41336e:	jnp    0x413351
  413370:	arpl   WORD PTR [esi+0x15f7de45],si
  413376:	enter  0x8c98,0x1a
  41337a:	xor    BYTE PTR [ebp+0x14],ch
  41337d:	(bad)  
  41337e:	ins    DWORD PTR es:[edi],dx
  41337f:	mov    edx,esp
  413381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413382:	mov    ah,0x61
  413384:	add    ah,BYTE PTR [edi-0x35]
  413387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413388:	jns    0x413408
  41338a:	push   eax
  41338b:	sbb    eax,0x30d1a7c1
  413390:	sbb    eax,0xfb1265c
  413395:	inc    eax
  413396:	aad    0x21
  413398:	xor    ebx,DWORD PTR [esi+0xb]
  41339b:	iret   
  41339c:	je     0x413343
  41339e:	mov    dh,0xdb
  4133a0:	adc    ebx,DWORD PTR [eax+0x4c]
  4133a3:	sub    BYTE PTR [esi-0x65],dh
  4133a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a7:	repnz inc edx
  4133a9:	adc    ecx,esi
  4133ab:	sub    al,al
  4133ad:	je     0x413346
  4133af:	mov    ch,0x8e
  4133b1:	sbb    BYTE PTR [ecx+eax*1-0x5b2364d],0xb5
  4133b9:	ds push 0xcc6c2cf7
  4133bf:	adc    al,0x28
  4133c1:	lahf   
  4133c2:	pop    ss
  4133c3:	fdivr  QWORD PTR [ebx-0x36b904fe]
  4133c9:	pop    esi
  4133ca:	into   
  4133cb:	jle    0x41337a
  4133cd:	xchg   ebp,eax
  4133ce:	inc    ebx
  4133cf:	sub    al,0x3a
  4133d1:	inc    ebp
  4133d2:	pop    esi
  4133d3:	nop
  4133d4:	push   esi
  4133d5:	pop    edx
  4133d6:	xchg   edi,eax
  4133d7:	sar    DWORD PTR es:[ecx+ebx*2],1
  4133db:	mov    edx,0xca7d38ff
  4133e0:	add    eax,edx
  4133e2:	or     eax,0x4c95aca4
  4133e7:	leave  
  4133e8:	dec    eax
  4133e9:	jge    0x413457
  4133eb:	(bad)  
  4133ec:	retf   
  4133ed:	push   0xffffff91
  4133ef:	and    eax,0x33eb49bd
  4133f4:	cmp    DWORD PTR [ebx+esi*8+0x1fa21c0b],esi
  4133fb:	adc    eax,0x2350e860
  413400:	pop    edi
  413401:	or     BYTE PTR [esp+ebp*8],dl
  413404:	cdq    
  413405:	pop    esi
  413406:	into   
  413407:	add    edi,ebx
  413409:	sub    dh,BYTE PTR [ebx-0x3b26f524]
  41340f:	mov    ch,ah
  413411:	clc    
  413412:	leave  
  413413:	cs dec ebp
  413415:	mov    WORD PTR [ecx-0x1b],ss
  413418:	mov    cs,edx
  41341a:	gs cld 
  41341c:	mov    WORD PTR [esi+ebp*2+0xb],fs
  413420:	jne    0x4133d7
  413422:	pop    edi
  413423:	loopne 0x41349d
  413425:	test   eax,0xe2e591e3
  41342a:	lea    ecx,[eax+esi*4+0x39]
  41342e:	mov    al,ds:0xa5e7f25e
  413433:	jmp    0xb065e8d2
  413438:	dec    ebp
  413439:	ins    BYTE PTR es:[edi],dx
  41343a:	sbb    BYTE PTR [ebx],bl
  41343c:	mov    dl,0x18
  41343e:	jg     0x4133d8
  413440:	sub    eax,0xfc35f5a3
  413445:	rcr    BYTE PTR [esi+0x4c0d24a8],cl
  41344b:	fdivrp st(4),st
  41344d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41344e:	pop    es
  41344f:	loopne 0x4133e0
  413451:	fisub  DWORD PTR [esi-0x6113ce2f]
  413457:	shl    dl,0x4b
  41345a:	lock xor cl,bh
  41345d:	mov    esi,?
  41345f:	sbb    ecx,DWORD PTR [eax]
  413461:	in     al,0x8a
  413463:	pop    ds
  413464:	add    al,ch
  413466:	xchg   DWORD PTR [eax-0x28],edi
  413469:	jnp    0x413402
  41346b:	jnp    0x4134d4
  41346d:	sub    DWORD PTR [ecx-0x57],esi
  413470:	outs   dx,DWORD PTR ds:[esi]
  413471:	adc    al,0x4e
  413473:	in     al,dx
  413474:	retf   
  413475:	mov    ah,0xa
  413477:	mov    cl,0xae
  413479:	imul   edi,DWORD PTR [edi-0x6e],0xc7d163e9
  413480:	jecxz  0x4134ec
  413482:	cmp    bl,BYTE PTR [edi+0x53]
  413485:	xchg   BYTE PTR [edx],ch
  413487:	dec    ebx
  413488:	test   al,0x8c
  41348a:	and    ch,dh
  41348c:	xor    BYTE PTR [ebp+0x1b1e8d62],ah
  413492:	push   esi
  413493:	repnz inc ebp
  413495:	dec    esp
  413496:	push   es
  413497:	sbb    eax,0xe5661e01
  41349c:	mov    ss,WORD PTR [edi]
  41349e:	cmp    esp,esp
  4134a0:	mov    ecx,0x990c0695
  4134a5:	inc    edi
  4134a6:	outs   dx,BYTE PTR ds:[esi]
  4134a7:	xor    ebx,DWORD PTR [edi-0x3f]
  4134aa:	imul   ebx,DWORD PTR [eax-0x72],0xce17bd09
  4134b1:	scas   eax,DWORD PTR es:[edi]
  4134b2:	mov    ebp,0xc46a4a0e
  4134b7:	mov    ebx,0x79f720dc
  4134bc:	fisub  WORD PTR [eax-0x4869a0c8]
  4134c2:	aad    0x8a
  4134c4:	int3   
  4134c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134c6:	jnp    0x4134eb
  4134c8:	mov    ebp,0x3d1e367c
  4134cd:	pop    ds
  4134ce:	sub    ah,BYTE PTR [esi]
  4134d0:	je     0x413459
  4134d2:	test   eax,0x58c6a273
  4134d7:	(bad)  
  4134d8:	sub    ch,BYTE PTR [ebx+0x38]
  4134db:	fsub   st,st(7)
  4134dd:	aad    0x54
  4134df:	mov    BYTE PTR [eax],bh
  4134e1:	push   ecx
  4134e2:	int    0x27
  4134e4:	popf   
  4134e5:	repnz ins BYTE PTR es:[edi],dx
  4134e7:	ins    BYTE PTR es:[edi],dx
  4134e8:	imul   ecx,DWORD PTR [esi+0x23],0x4d70736b
  4134ef:	stc    
  4134f0:	jnp    0x4134c3
  4134f2:	call   0x92d05ff0
  4134f7:	outs   dx,BYTE PTR ds:[esi]
  4134f8:	push   ss
  4134f9:	xor    BYTE PTR [edi+eiz*4],0x5a
  4134fd:	pop    ebp
  4134fe:	retfw  0x7155
  413502:	sub    bh,BYTE PTR [edx]
  413504:	add    DWORD PTR [ebx+0x158b9b6c],ebx
  41350a:	cmp    BYTE PTR [eax-0x41],bl
  41350d:	aaa    
  41350e:	addr16 iret 
  413510:	fmul   QWORD PTR [eax-0x38]
  413513:	stc    
  413514:	mov    eax,ds:0xf7940320
  413519:	iret   
  41351a:	sbb    bh,BYTE PTR [ebp+0x7a5f0909]
  413520:	push   cs
  413521:	inc    eax
  413522:	inc    edi
  413523:	in     al,dx
  413524:	add    eax,0x378d9f86
  413529:	inc    ecx
  41352a:	test   eax,0x43b061ec
  41352f:	inc    esp
  413530:	mov    al,ds:0xba6c025a
  413535:	push   cs
  413536:	lock and BYTE PTR [ebx],dh
  413539:	repnz cdq 
  41353b:	fwait
  41353c:	cli    
  41353d:	rol    BYTE PTR [edx+0x3e9e966],0xfd
  413544:	scas   eax,DWORD PTR es:[edi]
  413545:	pusha  
  413546:	adc    eax,0xda31f801
  41354b:	div    DWORD PTR [esi]
  41354d:	cmp    dh,BYTE PTR [edi+0x85a90e9]
  413553:	pop    ss
  413554:	gs lahf 
  413556:	es mov ebp,0x385d6563
  41355c:	xchg   esi,eax
  41355d:	imul   edi,DWORD PTR [ecx-0x1b],0xffffffdf
  413561:	push   ss
  413562:	xor    bh,BYTE PTR [ecx-0x5f90e5fd]
  413568:	jmp    0xf98d325b
  41356d:	mov    eax,0xf4e5130b
  413572:	and    BYTE PTR [ebp+ebx*2+0x2142aa3c],ah
  413579:	adc    bh,BYTE PTR [esi+0x79]
  41357c:	add    esp,esp
  41357e:	jge    0x41358b
  413580:	jle    0x413588
  413582:	test   dh,cl
  413584:	dec    BYTE PTR [eax]
  413586:	pop    ds
  413587:	scas   al,BYTE PTR es:[edi]
  413588:	and    DWORD PTR [edx+0x4c],ebp
  41358b:	(bad)  
  41358d:	sub    esp,DWORD PTR [ebx+ebp*4+0xe]
  413591:	inc    esi
  413592:	adc    eax,0x36e901a9
  413597:	fwait
  413598:	xor    DWORD PTR [esi],eax
  41359a:	nop
  41359b:	test   DWORD PTR [ecx+0x422ac7b0],edx
  4135a1:	push   DWORD PTR [eax]
  4135a3:	jnp    0x4135e5
  4135a5:	jo     0x413564
  4135a7:	cmp    ebp,DWORD PTR [edi+0x15]
  4135aa:	pop    esi
  4135ab:	test   DWORD PTR [ecx-0x38],esi
  4135ae:	adc    BYTE PTR [edx+0x5f42c638],bh
  4135b4:	pop    es
  4135b5:	outs   dx,DWORD PTR ds:[esi]
  4135b6:	cld    
  4135b7:	push   ss
  4135b8:	adc    ecx,eax
  4135ba:	jne    0x41360c
  4135bc:	and    ah,BYTE PTR [ebp-0x5ac907b9]
  4135c2:	push   ds
  4135c3:	test   dl,cl
  4135c5:	mov    edi,0x5b6183f2
  4135ca:	mov    DWORD PTR [edx-0x55],esp
  4135cd:	lahf   
  4135ce:	stos   DWORD PTR es:[edi],eax
  4135cf:	icebp  
  4135d0:	(bad)  [edi+0x17]
  4135d3:	mov    WORD PTR [edi-0x2b3c71c2],fs
  4135d9:	xchg   ebx,eax
  4135da:	push   cs
  4135db:	mov    dl,0xfa
  4135dd:	or     BYTE PTR [ebx+0x15],dh
  4135e0:	loop   0x41365a
  4135e2:	cmovg  eax,ecx
  4135e5:	mov    eax,0x54183eb2
  4135ea:	or     DWORD PTR [edx+0x7c92ed03],esi
  4135f0:	fcom   st(3)
  4135f2:	stos   BYTE PTR es:[edi],al
  4135f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f4:	ret    
  4135f5:	adc    BYTE PTR [edi],dh
  4135f7:	fwait
  4135f8:	jo     0x41359d
  4135fa:	inc    ebp
  4135fb:	sbb    al,0xa4
  4135fd:	repnz imul ah
  413600:	mov    eax,0x1e8353b9
  413605:	mov    eax,ds:0x384e4a78
  41360a:	ss push ebp
  41360c:	out    0xd4,eax
  41360e:	popf   
  41360f:	pop    ebp
  413610:	xchg   edx,eax
  413611:	int3   
  413612:	sbb    ebp,DWORD PTR [edx-0x1d]
  413615:	mov    ds:0x80ebcd60,al
  41361a:	ja     0x4135ec
  41361c:	in     al,0xf7
  41361e:	ret    0xf239
  413621:	fnstenv [ecx-0x136f908c]
  413627:	int    0x9
  413629:	mov    eax,0x6a2ae0f0
  41362e:	push   0x145f3faf
  413633:	lahf   
  413634:	call   0xa0fb:0x363434f8
  41363b:	jo     0x41362d
  41363d:	cmp    BYTE PTR [ecx+0x44],0xf1
  413641:	mov    eax,ds:0xea5a654a
  413646:	in     al,0x40
  413648:	aad    0xfe
  41364a:	mov    WORD PTR [edi+0x3f],es
  41364d:	xchg   esp,edx
  41364f:	cs popa 
  413651:	push   es
  413652:	dec    eax
  413653:	jecxz  0x413695
  413655:	xchg   esp,eax
  413656:	cmp    al,0x15
  413658:	dec    ebp
  413659:	pop    edi
  41365a:	jo     0x41366d
  41365c:	cdq    
  41365d:	sbb    DWORD PTR [edi-0x5a67042d],esp
  413663:	mov    ecx,0xc96bf643
  413668:	mov    edx,0x2388ae59
  41366d:	(bad)  
  41366e:	or     BYTE PTR [edi],al
  413670:	mov    eax,0x9b7b8dfd
  413675:	(bad)  
  413676:	push   ecx
  413677:	pop    esi
  413678:	pop    edi
  413679:	xor    DWORD PTR [esi+0x33],0xffffff84
  41367d:	fwait
  41367e:	pop    ebx
  41367f:	test   DWORD PTR ds:0x7636fe79,esi
  413685:	mov    ebx,0xa7709dad
  41368a:	xor    DWORD PTR [edi-0x22a2ddc0],edi
  413690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413691:	or     BYTE PTR [ebx-0x15],0xcf
  413695:	or     eax,0xfbb95dc5
  41369a:	push   ss
  41369b:	mov    ?,WORD PTR [esi]
  41369d:	adc    BYTE PTR [edi],cl
  41369f:	outs   dx,DWORD PTR ds:[esi]
  4136a0:	cmp    ebp,DWORD PTR [edx]
  4136a2:	add    eax,0x63909f50
  4136a7:	(bad)  
  4136a8:	cmp    DWORD PTR [ecx],edi
  4136aa:	dec    edi
  4136ab:	and    al,0xb
  4136ad:	lods   eax,DWORD PTR ds:[esi]
  4136ae:	imul   BYTE PTR [edi+0x43f9d79f]
  4136b4:	cmp    BYTE PTR [edx+0x4e],cl
  4136b7:	stc    
  4136b8:	lahf   
  4136b9:	mov    ebx,0x9584d642
  4136be:	mov    bl,0x4
  4136c0:	les    esi,FWORD PTR [eax]
  4136c2:	scas   al,BYTE PTR es:[edi]
  4136c3:	pop    ebp
  4136c4:	hlt    
  4136c5:	jmp    0xd685a3a9
  4136ca:	or     BYTE PTR [edi],0xbe
  4136cd:	out    dx,al
  4136ce:	xchg   DWORD PTR [esi],ebx
  4136d0:	jno    0x413740
  4136d2:	js     0x413704
  4136d4:	dec    ecx
  4136d5:	sub    BYTE PTR [eax-0x635c0b06],bh
  4136db:	mov    ds:0xd6eae13b,al
  4136e0:	aas    
  4136e1:	dec    esp
  4136e2:	adc    dh,BYTE PTR cs:[edx-0x7089d309]
  4136e9:	push   esp
  4136ea:	xor    bh,0x56
  4136ed:	cdq    
  4136ee:	push   0x7893c539
  4136f3:	pushf  
  4136f4:	sub    BYTE PTR [edx-0x58b926e0],ah
  4136fa:	into   
  4136fb:	jle    0x4136c4
  4136fd:	or     eax,0x1fdec6c6
  413702:	imul   esp,DWORD PTR [ebx-0x6106aab8],0x60fbb2b8
  41370c:	xchg   edx,eax
  41370d:	in     eax,0x2c
  41370f:	cmp    BYTE PTR [edx+0x35],0x5c
  413713:	cwde   
  413714:	mov    ds:0x595050c2,eax
  413719:	dec    eax
  41371a:	outs   dx,BYTE PTR ds:[esi]
  41371b:	mov    ds,WORD PTR [ecx-0x4d]
  41371e:	sar    DWORD PTR [esi+0x56],cl
  413721:	pop    ecx
  413722:	outs   dx,BYTE PTR ds:[esi]
  413723:	cmp    eax,0xa40e3fe9
  413728:	or     DWORD PTR [esi+0x2da534e5],eax
  41372e:	mov    BYTE PTR [ebp+0x335c0a20],ch
  413734:	add    al,0xd6
  413736:	cmp    eax,0xb89179db
  41373b:	pop    es
  41373c:	jns    0x4136d8
  41373e:	mov    DWORD PTR [edi+0x63],ecx
  413741:	outs   dx,DWORD PTR ds:[esi]
  413742:	bound  esi,QWORD PTR [ebx-0x2f]
  413745:	shl    BYTE PTR [eax-0x4eaf3bd8],1
  41374b:	xchg   esi,eax
  41374c:	out    dx,eax
  41374d:	js     0x4137a1
  41374f:	mov    esp,0xe089eb4b
  413754:	cld    
  413755:	dec    ecx
  413756:	dec    eax
  413757:	mov    bh,0xe6
  413759:	push   esp
  41375a:	int    0xd8
  41375c:	sbb    ah,ah
  41375e:	pushf  
  41375f:	and    eax,0xf46acb01
  413764:	dec    ebx
  413765:	bound  ebx,QWORD PTR [esi-0x62e7b668]
  41376b:	ret    0x319f
  41376e:	out    0x81,eax
  413770:	sub    al,0xa
  413772:	inc    ecx
  413773:	pop    ecx
  413774:	into   
  413775:	retf   
  413776:	adc    DWORD PTR [edx],0xffffffa0
  413779:	mov    al,0x28
  41377b:	xor    esi,esp
  41377d:	cmp    eax,0x2dc3bbcd
  413782:	jmp    0x4e275bcc
  413787:	ret    0x8402
  41378a:	call   0x628:0xfe452e2
  413791:	adc    eax,0xbd66b681
  413796:	jl     0x4137be
  413798:	test   al,0xd6
  41379a:	test   eax,0xc5892364
  41379f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a0:	mov    ds:0xf6286df,eax
  4137a5:	call   0x587cee89
  4137aa:	xor    DWORD PTR [ebx+0x72],edx
  4137ad:	int    0x1
  4137af:	(bad)  
  4137b0:	jno    0x4137b0
  4137b2:	in     eax,0xac
  4137b4:	arpl   WORD PTR [eax+ebp*1],si
  4137b7:	in     al,0x1a
  4137b9:	stos   DWORD PTR es:[edi],eax
  4137ba:	call   0x509e861e
  4137bf:	pusha  
  4137c0:	cwde   
  4137c1:	add    al,0x79
  4137c3:	imul   eax,edi,0x45
  4137c6:	sbb    eax,0xc51ecce3
  4137cb:	(bad)  
  4137cc:	retf   
  4137cd:	jl     0x4137e3
  4137cf:	push   esp
  4137d0:	push   ss
  4137d1:	test   BYTE PTR [esi-0x3aae8ca8],cl
  4137d7:	ror    dl,0xee
  4137da:	xchg   edi,eax
  4137db:	push   0xb5f15dba
  4137e0:	idiv   DWORD PTR [ebx]
  4137e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e3:	loopne 0x41377e
  4137e5:	sbb    esi,ebx
  4137e7:	pop    es
  4137e8:	dec    edx
  4137e9:	in     eax,dx
  4137ea:	int3   
  4137eb:	jmp    0xd691:0x9b3adae8
  4137f2:	add    ch,BYTE PTR [eax-0x74faecf0]
  4137f8:	jp     0x413810
  4137fa:	jnp    0x413796
  4137fc:	stc    
  4137fd:	sub    eax,0xb4b418cc
  413802:	push   edi
  413803:	fild   DWORD PTR [edi-0x7df5afa5]
  413809:	leave  
  41380a:	stos   BYTE PTR es:[edi],al
  41380b:	(bad)
  41380f:	scas   eax,DWORD PTR es:[edi]
  413810:	jae    0x413873
  413812:	push   cs
  413813:	xor    esi,DWORD PTR [eax-0x3f]
  413816:	push   eax
  413817:	in     al,0x48
  413819:	je     0x41380c
  41381b:	mov    bl,0x13
  41381d:	xor    ah,BYTE PTR [edi]
  41381f:	in     al,0xb5
  413821:	mov    ch,0xf5
  413823:	imul   edx,DWORD PTR [ebp+0xb21a04b],0x46
  41382a:	imul   al
  41382c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41382d:	xchg   edx,eax
  41382e:	inc    eax
  41382f:	sub    al,0x9e
  413831:	adc    DWORD PTR [edx+0x55],esp
  413834:	popa   
  413835:	outs   dx,BYTE PTR ds:[esi]
  413836:	pop    edi
  413837:	dec    ebp
  413838:	stos   DWORD PTR es:[edi],eax
  413839:	add    BYTE PTR [eax],0x3a
  41383c:	add    BYTE PTR [edx],0xd2
  41383f:	(bad)  
  413840:	push   cs
  413841:	sti    
  413842:	mov    al,0xc8
  413844:	out    dx,eax
  413845:	outs   dx,DWORD PTR ds:[esi]
  413846:	add    BYTE PTR [edx+0x6c1b9a83],ch
  41384c:	jmp    0x58ffe112
  413851:	shl    bh,0x6
  413854:	sbb    DWORD PTR [eax-0x7e],0x9ed40cf1
  41385b:	and    al,0x3c
  41385d:	fdivr  QWORD PTR [eax-0x2c84a1db]
  413863:	das    
  413864:	shl    DWORD PTR [edi-0x12],0x5
  413868:	ins    BYTE PTR es:[edi],dx
  413869:	lods   al,BYTE PTR ds:[esi]
  41386a:	stos   DWORD PTR es:[edi],eax
  41386b:	cld    
  41386c:	mov    cs,WORD PTR [ebx]
  41386e:	jne    0x4137f7
  413870:	cwde   
  413871:	lods   al,BYTE PTR ds:[esi]
  413872:	jle    0x413812
  413874:	xor    BYTE PTR [edi+0x1a],0xf9
  413878:	cs ret 0xb79f
  41387c:	mov    esp,0x9fceab87
  413881:	mov    BYTE PTR ds:0xa4c60ab5,al
  413887:	xor    ch,BYTE PTR [ebx]
  413889:	fs sti 
  41388b:	cmc    
  41388c:	mov    dl,0xb3
  41388e:	or     eax,0x4fc19a30
  413893:	and    esp,DWORD PTR [eax+ebp*8+0x16f2000a]
  41389a:	sub    al,0xa1
  41389c:	add    bl,BYTE PTR [eax]
  41389e:	fsubr  DWORD PTR [esi+0x71]
  4138a1:	arpl   bp,bp
  4138a3:	pop    ebp
  4138a4:	xchg   BYTE PTR [esi],ah
  4138a6:	(bad)  
  4138a7:	outs   dx,BYTE PTR ds:[esi]
  4138a8:	jp     0x4138ce
  4138aa:	in     eax,0xa0
  4138ac:	push   esp
  4138ad:	push   edx
  4138ae:	cmp    edx,DWORD PTR [eax-0x64]
  4138b1:	fmul   st(2),st
  4138b3:	ficomp DWORD PTR [ecx]
  4138b5:	out    dx,al
  4138b6:	mov    eax,ds:0xf608d9fe
  4138bb:	sub    al,0x23
  4138bd:	fstp   DWORD PTR [esi-0x4aef4514]
  4138c3:	push   edi
  4138c4:	ret    0x1846
  4138c7:	(bad)  
  4138c8:	imul   ebp,edx,0xa1fe7c5d
  4138ce:	mov    ebx,0x876e5d53
  4138d3:	leave  
  4138d4:	inc    esi
  4138d5:	mov    bh,0xb6
  4138d7:	jmp    0x413918
  4138d9:	stc    
  4138da:	scas   al,BYTE PTR es:[edi]
  4138db:	xor    al,0x8a
  4138dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138df:	sub    ah,BYTE PTR [ebx]
  4138e1:	jo     0x41395d
  4138e3:	clc    
  4138e4:	add    al,0xaf
  4138e6:	cmp    al,0x3c
  4138e8:	add    DWORD PTR [eax],esi
  4138ea:	mov    al,ds:0x95183ae9
  4138ef:	dec    eax
  4138f0:	test   DWORD PTR [ecx],0x9b174e50
  4138f6:	aaa    
  4138f7:	cmp    esi,DWORD PTR [eiz*4-0x1e8032dd]
  4138fe:	cmp    ecx,DWORD PTR [esi]
  413900:	sbb    BYTE PTR [esi+0x3d1c5e9],dl
  413906:	xor    al,al
  413908:	int    0xd4
  41390a:	in     al,0x47
  41390c:	scas   eax,DWORD PTR es:[edi]
  41390d:	mov    ss,WORD PTR [edx+0x5d]
  413910:	cmp    eax,esp
  413912:	inc    edx
  413913:	jo     0x41396c
  413915:	ds pop ebx
  413917:	adc    dh,BYTE PTR [edx+0x4d]
  41391a:	mov    bl,dl
  41391c:	outs   dx,DWORD PTR ds:[esi]
  41391d:	pop    ds
  41391e:	xor    edx,edx
  413920:	(bad)  
  413921:	stc    
  413922:	arpl   WORD PTR ds:0xa383913b,bx
  413928:	shl    DWORD PTR [edx+0x9],0xb0
  41392c:	enter  0xc4e0,0xb9
  413930:	xchg   DWORD PTR [eax-0x7f],edi
  413933:	or     edi,DWORD PTR [eax-0x8e5bd1b]
  413939:	push   ebx
  41393a:	inc    ebp
  41393b:	aaa    
  41393c:	xor    DWORD PTR [esi],ebx
  41393e:	adc    BYTE PTR [esi-0x4d],bl
  413941:	mov    ah,0x0
  413943:	mov    dl,0x8
  413945:	jmp    0x9e6d:0x6b879e3e
  41394c:	jmp    0x413996
  41394e:	lds    ebx,FWORD PTR [ebx]
  413950:	call   0x4cb03e8
  413955:	mov    al,0x91
  413957:	mov    cl,0xeb
  413959:	loop   0x413954
  41395b:	add    BYTE PTR [edi-0x155af4eb],cl
  413961:	fs jnp 0x41391a
  413964:	(bad)  
  413965:	retf   
  413966:	inc    eax
  413967:	lods   eax,DWORD PTR ds:[esi]
  413968:	jmp    0xa00e4c8c
  41396d:	jecxz  0x4139e0
  41396f:	(bad)  
  413970:	cld    
  413971:	outs   dx,BYTE PTR ds:[esi]
  413972:	mov    dl,0xfe
  413974:	xchg   DWORD PTR [edx],eax
  413976:	call   0x796e6d15
  41397b:	sbb    ah,BYTE PTR [edi]
  41397d:	neg    BYTE PTR [esi+0x25]
  413980:	fwait
  413981:	xchg   edx,eax
  413982:	std    
  413983:	xlat   BYTE PTR ds:[ebx]
  413984:	or     edx,DWORD PTR [ebp-0x3c]
  413987:	repz or eax,0x858738fa
  41398d:	lods   al,BYTE PTR ds:[esi]
  41398e:	pusha  
  41398f:	adc    BYTE PTR [eax+0x3e837c86],ah
  413995:	mov    dh,0xf3
  413997:	cmp    al,0x28
  413999:	lahf   
  41399a:	sahf   
  41399b:	lods   eax,DWORD PTR ds:[esi]
  41399c:	mov    cl,0x15
  41399e:	mov    edi,0x70f01998
  4139a3:	or     al,BYTE PTR [edx-0x1d]
  4139a6:	jae    0x413977
  4139a8:	lahf   
  4139a9:	cdq    
  4139aa:	ss hlt 
  4139ac:	inc    eax
  4139ad:	push   ebx
  4139ae:	or     al,0xab
  4139b0:	xor    DWORD PTR [ecx-0x2a],eax
  4139b3:	mov    al,0x36
  4139b5:	enter  0x2f57,0xc1
  4139b9:	push   ds
  4139ba:	fistp  WORD PTR [ecx]
  4139bc:	iret   
  4139bd:	push   ecx
  4139be:	and    al,ch
  4139c0:	daa    
  4139c1:	cwde   
  4139c2:	int    0x82
  4139c4:	nop
  4139c5:	sub    DWORD PTR [eax+0x16ae9cc7],ecx
  4139cb:	ins    BYTE PTR es:[edi],dx
  4139cc:	(bad)  
  4139cd:	dec    ecx
  4139ce:	mov    ecx,edx
  4139d0:	das    
  4139d1:	mov    dl,0xb9
  4139d3:	cmp    DWORD PTR [edx+0x1e],ebx
  4139d6:	pop    ds
  4139d7:	xor    ecx,DWORD PTR [edi+eiz*8]
  4139da:	jno    0x4139fc
  4139dc:	outs   dx,DWORD PTR ds:[esi]
  4139dd:	(bad)  
  4139de:	push   0x47
  4139e0:	std    
  4139e1:	xor    al,0x74
  4139e3:	mov    ch,0x64
  4139e5:	call   0x2ad9:0xd19b8c07
  4139ec:	push   edx
  4139ed:	xchg   esi,eax
  4139ee:	jmp    0x4fb0330a
  4139f3:	lods   al,BYTE PTR ds:[esi]
  4139f4:	pop    es
  4139f5:	pop    ecx
  4139f6:	push   eax
  4139f7:	xchg   bl,cl
  4139f9:	mov    ds:0x7f21655d,eax
  4139fe:	lods   eax,DWORD PTR ds:[esi]
  4139ff:	mov    ebp,0x71e77792
  413a04:	fisttp DWORD PTR [ebp+0x26736c92]
  413a0a:	add    al,0x46
  413a0c:	dec    esi
  413a0d:	cmp    DWORD PTR [eax],edx
  413a0f:	jno    0x413a39
  413a11:	fidiv  WORD PTR ds:0x3b1463a9
  413a17:	cwde   
  413a18:	clc    
  413a19:	xor    al,BYTE PTR [edi-0x7d]
  413a1c:	dec    edi
  413a1d:	stos   DWORD PTR es:[edi],eax
  413a1e:	mov    dl,0x4b
  413a20:	mov    dl,0x2f
  413a22:	aam    0x2d
  413a24:	jg     0x4139e3
  413a26:	jg     0x413a60
  413a28:	lods   eax,DWORD PTR ds:[esi]
  413a29:	es in  eax,dx
  413a2b:	pop    ds
  413a2c:	add    BYTE PTR ds:0x2564a3d0,cl
  413a32:	retf   0xc84c
  413a35:	sbb    al,0x64
  413a37:	xchg   ebx,eax
  413a38:	cmp    eax,0xeee55ac
  413a3d:	arpl   bp,bx
  413a3f:	aam    0xe1
  413a41:	ins    DWORD PTR es:[edi],dx
  413a42:	not    DWORD PTR [edx+0x46]
  413a45:	jns    0x413a9f
  413a47:	(bad)  
  413a48:	push   edx
  413a49:	loop   0x413a16
  413a4b:	fadd   DWORD PTR [esi+0x3c]
  413a4e:	dec    eax
  413a4f:	lahf   
  413a50:	adc    al,0x90
  413a52:	pop    edx
  413a53:	shl    ch,0x49
  413a56:	aam    0xf0
  413a58:	or     BYTE PTR [ecx],ah
  413a5a:	push   ebx
  413a5b:	xor    al,0xc0
  413a5d:	mov    al,BYTE PTR [edx-0x5a]
  413a60:	add    DWORD PTR ds:0x1e35a85c,ecx
  413a66:	jbe    0x4139e9
  413a68:	push   esi
  413a69:	push   eax
  413a6a:	sbb    si,WORD PTR [eax+0x24]
  413a6e:	inc    edx
  413a6f:	out    0xd7,eax
  413a71:	xchg   BYTE PTR [ebp+esi*4+0x11655543],cl
  413a78:	dec    esi
  413a79:	stc    
  413a7a:	mov    al,ds:0xb64849c3
  413a7f:	cld    
  413a80:	out    dx,eax
  413a81:	in     eax,dx
  413a82:	xlat   BYTE PTR ds:[ebx]
  413a83:	mov    edx,0x73e5b3c1
  413a88:	fcmovnb st,st(3)
  413a8a:	sbb    BYTE PTR [edi-0x74],dh
  413a8d:	push   eax
  413a8e:	retf   0x911b
  413a91:	dec    ecx
  413a92:	add    al,0xab
  413a94:	jo     0x413ac0
  413a96:	data16 jg 0x413a8f
  413a99:	inc    ebp
  413a9a:	push   edi
  413a9b:	stos   DWORD PTR es:[edi],eax
  413a9c:	sbb    ebp,DWORD PTR [eax-0xfb6d954]
  413aa2:	dec    esi
  413aa3:	fst    DWORD PTR [esi+0x1f]
  413aa6:	call   0x88e6:0xcc528dd0
  413aad:	sub    ebp,DWORD PTR [esi+0x535db329]
  413ab3:	add    al,0x77
  413ab5:	cmp    al,0x11
  413ab7:	cmp    dh,0x7d
  413aba:	adc    esp,DWORD PTR [edx-0x16]
  413abd:	aad    0x5e
  413abf:	inc    ebx
  413ac0:	das    
  413ac1:	mov    eax,0x76b67339
  413ac6:	xchg   ebp,eax
  413ac7:	(bad)  
  413ac8:	mov    dh,0x4c
  413aca:	inc    ebx
  413acb:	cmp    BYTE PTR [eax+0x59],cl
  413ace:	std    
  413acf:	in     eax,0x2d
  413ad1:	cli    
  413ad2:	or     edx,ebp
  413ad4:	fs adc DWORD PTR ds:[ecx],edi
  413ad8:	mov    dh,0xaa
  413ada:	pop    ebp
  413adb:	push   esi
  413adc:	clc    
  413add:	sub    bh,BYTE PTR [edx-0x18]
  413ae0:	mov    DWORD PTR [edi-0x2c070609],ebx
  413ae6:	jg     0x413ae0
  413ae8:	into   
  413ae9:	out    0x17,al
  413aeb:	retf   0x29e2
  413aee:	xor    DWORD PTR [edi-0xd6e5462],esp
  413af4:	shr    DWORD PTR [ebp+0x781efeb7],1
  413afa:	or     ebx,DWORD PTR [ebp-0x56aa215f]
  413b00:	inc    ebp
  413b01:	pop    edx
  413b02:	mov    ds:0x274b706a,eax
  413b07:	cmc    
  413b08:	cld    
  413b09:	adc    bl,bl
  413b0b:	jns    0x413b7e
  413b0d:	jno    0x413aa1
  413b0f:	pop    ecx
  413b10:	div    BYTE PTR [ebx]
  413b12:	sbb    DWORD PTR [eax+0x70],ebx
  413b15:	fidiv  WORD PTR [eax+0xc907ac4]
  413b1b:	(bad)
  413b1e:	sbb    BYTE PTR [ebx-0x17a3ccb1],ah
  413b24:	addr16 sbb eax,0x4f31cdd
  413b2a:	inc    esi
  413b2b:	mov    ecx,0x886c0aca
  413b30:	adc    ebx,0xeb3cf819
  413b36:	cmp    eax,DWORD PTR [eax-0x37c1bcad]
  413b3c:	mov    DWORD PTR [ecx+0x5c],edx
  413b3f:	mov    edx,0x41100bac
  413b44:	fs sbb ch,bh
  413b47:	hlt    
  413b48:	push   es
  413b49:	mov    edi,0x3f438c10
  413b4e:	cmovs  ebp,DWORD PTR [esi]
  413b51:	popf   
  413b52:	in     al,dx
  413b53:	enter  0x46d9,0x5a
  413b57:	mov    al,0xe1
  413b59:	xor    BYTE PTR [edx+eax*8-0x6b],dl
  413b5d:	ret    0xf313
  413b60:	adc    ah,BYTE PTR [edx]
  413b62:	adc    DWORD PTR [esi],ebx
  413b64:	pop    ebx
  413b65:	inc    edx
  413b66:	xchg   BYTE PTR [ebp+0x10788f73],ch
  413b6c:	hlt    
  413b6d:	(bad)  
  413b6e:	enter  0x76c6,0x97
  413b72:	pop    esp
  413b73:	fistp  QWORD PTR [edi+0x6f]
  413b76:	pop    es
  413b77:	add    dl,0x1f
  413b7a:	mov    esi,0x619c1bc8
  413b7f:	adc    eax,0xa1628be2
  413b84:	repnz pop ss
  413b86:	in     eax,dx
  413b87:	push   ecx
  413b88:	xchg   ecx,eax
  413b89:	les    esp,FWORD PTR [edx-0x13]
  413b8c:	add    ebp,ebp
  413b8e:	cli    
  413b8f:	pop    es
  413b90:	or     DWORD PTR [esp+ebx*8-0x7a3d10e4],ecx
  413b97:	pop    ss
  413b98:	ds inc ebx
  413b9a:	or     eax,0xd97ac62e
  413b9f:	scas   al,BYTE PTR es:[edi]
  413ba0:	fwait
  413ba1:	inc    ebx
  413ba2:	lods   al,BYTE PTR ds:[esi]
  413ba3:	mov    ebp,0x37f3b9fe
  413ba8:	adc    DWORD PTR [edx-0x6d3a7b85],eax
  413bae:	mov    dl,0xd9
  413bb0:	ror    BYTE PTR ds:[edx-0x7a6f2927],0x92
  413bb8:	outs   dx,DWORD PTR ds:[esi]
  413bb9:	jle    0x413b45
  413bbb:	jmp    0x413bef
  413bbd:	fnsave [edi+0xe]
  413bc0:	mov    al,ds:0x68be0bd2
  413bc5:	adc    eax,0xf64ac4c
  413bca:	cs iret 
  413bcc:	std    
  413bcd:	mov    ds:0x3940349c,eax
  413bd2:	addr16 pop edx
  413bd4:	sub    DWORD PTR [eax],esi
  413bd6:	scas   eax,DWORD PTR es:[edi]
  413bd7:	fstp   TBYTE PTR [ecx]
  413bd9:	dec    edx
  413bda:	or     esp,DWORD PTR [edx]
  413bdc:	pop    ds
  413bdd:	inc    esi
  413bde:	cld    
  413bdf:	add    dh,BYTE PTR [ebp+0x1d6bd380]
  413be5:	clc    
  413be6:	cmp    al,0x81
  413be8:	inc    esp
  413be9:	(bad)  
  413bea:	loope  0x413ba8
  413bec:	mov    ds:0xa4fd8c39,al
  413bf1:	call   0xbeeb5a5f
  413bf6:	cmp    ah,ah
  413bf8:	mov    ebx,0xf0b92639
  413bfd:	mov    edx,0xf61ab200
  413c02:	and    edi,DWORD PTR [eax-0x61]
  413c05:	push   esi
  413c06:	mov    eax,0xb277a572
  413c0b:	add    BYTE PTR [ecx],al
  413c0d:	loope  0x413c3d
  413c0f:	pop    ss
  413c10:	icebp  
  413c11:	in     eax,0xab
  413c13:	retf   0x4ac1
  413c16:	(bad)
  413c19:	sbb    al,0xb2
  413c1b:	xchg   esi,eax
  413c1c:	js     0x413c62
  413c1e:	pop    es
  413c1f:	pushf  
  413c20:	dec    eax
  413c21:	mov    ebx,0x495cfdcf
  413c26:	add    ecx,DWORD PTR [eax+0x14]
  413c29:	jmp    0x413bf9
  413c2b:	mov    eax,0xb45f5000
  413c30:	sbb    al,0x18
  413c32:	push   edx
  413c33:	jb     0x413c27
  413c35:	or     ecx,DWORD PTR [ebp-0x6abd70b8]
  413c3b:	push   0x2e20e2f3
  413c40:	jecxz  0x413bc3
  413c42:	mov    edi,0x430d8049
  413c47:	mov    esi,0x6b08ce6e
  413c4c:	test   al,0x5b
  413c4e:	imul   BYTE PTR [edi]
  413c50:	loopne 0x413cc1
  413c52:	cmp    ecx,DWORD PTR [edi-0x1022c1ec]
  413c58:	out    0x88,al
  413c5a:	dec    bl
  413c5c:	hlt    
  413c5d:	aad    0x69
  413c5f:	in     al,dx
  413c60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c61:	cmp    ah,BYTE PTR [edi-0x2e]
  413c64:	pop    ss
  413c65:	add    eax,ecx
  413c67:	cli    
  413c68:	stos   DWORD PTR es:[edi],eax
  413c69:	outs   dx,DWORD PTR ds:[esi]
  413c6a:	cs mov dl,0x1
  413c6d:	into   
  413c6e:	neg    DWORD PTR [ebx-0x4ccc5a0d]
  413c74:	lds    ebx,FWORD PTR [edx+0x5]
  413c77:	es mov edx,0xefa39be1
  413c7d:	fcomp  QWORD PTR [eax+0x16]
  413c80:	mov    cl,0x7e
  413c82:	and    DWORD PTR [eax+edx*1-0x54bcfd24],eax
  413c89:	or     edx,0x2320a81d
  413c8f:	push   esi
  413c90:	inc    edi
  413c91:	inc    edx
  413c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c93:	mov    eax,0x26940c4b
  413c98:	popa   
  413c99:	jp     0x413ce6
  413c9b:	cld    
  413c9c:	(bad)  
  413c9d:	fdiv   st(7),st
  413c9f:	mov    ds:0xed28dcbd,eax
  413ca4:	push   ds
  413ca5:	(bad)  
  413ca6:	pop    ebx
  413ca7:	mov    DWORD PTR [edi-0x4bb23352],ebx
  413cad:	enter  0x96fb,0xac
  413cb1:	dec    ebp
  413cb2:	xor    BYTE PTR [edi],ah
  413cb4:	mov    eax,ds:0x3c1ac18a
  413cb9:	push   ebp
  413cba:	test   al,0x4d
  413cbc:	cmp    BYTE PTR [ecx+edi*2-0x66],dh
  413cc0:	adc    ecx,DWORD PTR [ecx+0x1e]
  413cc3:	cmp    al,0x85
  413cc5:	xchg   ecx,ecx
  413cc7:	pop    edx
  413cc8:	sub    BYTE PTR [eax-0x5b26a53],dl
  413cce:	fcom   DWORD PTR ds:0xe9d6dbcf
  413cd4:	stos   DWORD PTR es:[edi],eax
  413cd5:	adc    dh,BYTE PTR [edi]
  413cd7:	push   0x30e540e
  413cdc:	jnp    0x413cf6
  413cde:	retf   
  413cdf:	shr    DWORD PTR [eax+0x6],0x1e
  413ce3:	jmp    0xb70adbed
  413ce8:	mov    esp,0x25d056af
  413ced:	cmp    esp,eax
  413cef:	cdq    
  413cf0:	test   al,0x0
  413cf2:	mov    cl,0x8e
  413cf4:	adc    al,0x7b
  413cf6:	jnp    0x413d68
  413cf8:	dec    esi
  413cf9:	pop    ebx
  413cfa:	icebp  
  413cfb:	test   al,0x60
  413cfd:	stos   BYTE PTR es:[edi],al
  413cfe:	scas   al,BYTE PTR es:[edi]
  413cff:	dec    esi
  413d00:	adc    BYTE PTR [eax-0x6aaac5e0],cl
  413d06:	push   es
  413d07:	(bad)  
  413d08:	sahf   
  413d09:	bound  ebx,QWORD PTR [ecx+0x3a]
  413d0c:	or     DWORD PTR [edi-0x1a],0x2d
  413d10:	loop   0x413c97
  413d12:	dec    esi
  413d13:	add    al,0x7e
  413d15:	push   0x17
  413d17:	mov    al,0x56
  413d19:	out    dx,eax
  413d1a:	xor    esp,DWORD PTR [edx+0x227e1ad2]
  413d20:	pop    ecx
  413d21:	and    cl,bl
  413d23:	jmp    0x413d05
  413d25:	xchg   ebp,eax
  413d26:	cmp    esp,edx
  413d28:	idiv   DWORD PTR [edx]
  413d2a:	sbb    eax,0x17149eb6
  413d2f:	out    0xff,eax
  413d31:	dec    esp
  413d32:	mov    eax,0x565d159a
  413d37:	iret   
  413d38:	repz rol bh,1
  413d3b:	sbb    edx,DWORD PTR [ebx+0x18]
  413d3e:	call   0xcd5b0ef6
  413d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d44:	mov    fs,WORD PTR ds:[esi-0x43]
  413d48:	inc    ebx
  413d49:	mov    esi,0x5db02ec4
  413d4e:	cmp    dh,BYTE PTR [ebp-0x16a4c35]
  413d54:	(bad)  
  413d55:	fbstp  TBYTE PTR [ecx]
  413d57:	adc    eax,0x269949e0
  413d5c:	hlt    
  413d5d:	pusha  
  413d5e:	inc    edx
  413d5f:	pop    ds
  413d60:	jmp    0xbf5ce5c1
  413d65:	test   BYTE PTR [eax-0x62],cl
  413d68:	mov    esp,0x2f5b2507
  413d6d:	not    BYTE PTR [eax+0x60]
  413d70:	dec    esi
  413d71:	xor    al,0xb7
  413d73:	mov    al,0xdc
  413d75:	aaa    
  413d76:	sbb    cl,BYTE PTR [edx-0xe]
  413d79:	xor    DWORD PTR [ecx+ebx*2],edi
  413d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d7d:	dec    ebx
  413d7e:	shl    BYTE PTR [ebp-0x1bdbfa45],1
  413d84:	test   DWORD PTR [ecx-0x13],0xd0f4e11b
  413d8b:	xor    esp,DWORD PTR [edx]
  413d8d:	sub    al,bh
  413d8f:	das    
  413d90:	lahf   
  413d91:	jmp    0x3775:0xb4849f8c
  413d98:	sub    ebx,esp
  413d9a:	mov    bl,0x1a
  413d9c:	inc    ebx
  413d9d:	xor    edi,DWORD PTR [eax+0x19]
  413da0:	pop    ds
  413da1:	mov    dl,0xcf
  413da3:	add    BYTE PTR [ebp+esi*8-0x25],dh
  413da7:	sub    al,0xa8
  413da9:	xchg   edi,eax
  413daa:	dec    esi
  413dab:	jb     0x413dc1
  413dad:	hlt    
  413dae:	xchg   esp,eax
  413daf:	int    0x15
  413db1:	mov    dl,dh
  413db3:	icebp  
  413db4:	add    cl,dh
  413db6:	inc    edx
  413db7:	jmp    0x46e0:0xbe9cc34f
  413dbe:	mov    eax,0x6aa1f4e4
  413dc3:	xor    DWORD PTR [edx-0x6f52e481],esi
  413dc9:	adc    BYTE PTR [ebx+0x11aa1eac],ch
  413dcf:	out    dx,al
  413dd0:	cmp    BYTE PTR [ebx-0x712899e1],cl
  413dd6:	xchg   BYTE PTR [ebp-0x39],cl
  413dd9:	mov    al,0x9b
  413ddb:	xchg   edi,eax
  413ddc:	inc    edx
  413ddd:	cwde   
  413dde:	sbb    ebx,DWORD PTR fs:[edi-0x631f9bcb]
  413de5:	dec    ebp
  413de6:	cmp    bl,al
  413de8:	pop    eax
  413de9:	das    
  413dea:	hlt    
  413deb:	cmp    esi,DWORD PTR es:[ebx-0x41]
  413def:	and    dh,dl
  413df1:	stc    
  413df2:	adc    ebp,ecx
  413df4:	pop    ds
  413df5:	repz sub ah,BYTE PTR [ebp-0x80]
  413df9:	pop    ebp
  413dfa:	mov    bl,BYTE PTR [ebp+0x2a]
  413dfd:	imul   edx,DWORD PTR [ebp-0x6f],0x29b9b759
  413e04:	xchg   BYTE PTR [ecx],dh
  413e06:	mov    bl,0xdc
  413e08:	and    eax,0xb9bedad3
  413e0d:	fidivr DWORD PTR [ebp+0x55bcb8f5]
  413e13:	mov    edx,eax
  413e15:	or     esi,DWORD PTR [ebp-0x7b119f5a]
  413e1b:	icebp  
  413e1c:	popf   
  413e1d:	jnp    0x413e2f
  413e1f:	add    bh,BYTE PTR [edx-0x13]
  413e22:	and    eax,0xb9a90a6f
  413e27:	sbb    eax,0x2605b0c4
  413e2c:	into   
  413e2d:	pusha  
  413e2e:	fwait
  413e2f:	mov    ds:0xfeab6a62,al
  413e34:	fldenv [esi+eiz*2]
  413e37:	ret    
  413e38:	xor    DWORD PTR [eax],0xffffff8c
  413e3b:	mov    edx,0x7bd6f6ae
  413e40:	xor    bh,al
  413e42:	xchg   esp,eax
  413e43:	adc    BYTE PTR [ecx-0x1b],al
  413e46:	and    eax,0x35250cff
  413e4b:	in     eax,dx
  413e4c:	lock mov eax,0xce2885b7
  413e52:	mov    dh,0x7d
  413e54:	push   esp
  413e55:	and    DWORD PTR [ecx-0x5a],esi
  413e58:	mov    bl,0x41
  413e5a:	sub    BYTE PTR [esi-0x4a1fa151],al
  413e60:	xchg   DWORD PTR [eax-0x2d],edx
  413e63:	cld    
  413e64:	xchg   edi,eax
  413e65:	(bad)  
  413e66:	(bad)  
  413e68:	xchg   edx,eax
  413e69:	add    ecx,edx
  413e6b:	aam    0x6e
  413e6d:	xchg   bl,ch
  413e6f:	and    eax,0xe2c88264
  413e74:	popf   
  413e75:	sub    dl,BYTE PTR [edi-0x1059a409]
  413e7b:	and    DWORD PTR [edi],edx
  413e7d:	xchg   edx,eax
  413e7e:	xchg   edx,eax
  413e7f:	aaa    
  413e80:	fcomi  st,st(7)
  413e82:	inc    edx
  413e83:	add    al,0x4a
  413e85:	imul   ecx,DWORD PTR [ebp+0x746fa1fb],0xffffffb9
  413e8c:	xchg   esi,eax
  413e8d:	inc    ecx
  413e8e:	ret    
  413e8f:	jl     0x413eed
  413e91:	fadd   DWORD PTR [esi]
  413e93:	xlat   BYTE PTR ds:[ebx]
  413e94:	stos   BYTE PTR es:[edi],al
  413e95:	rol    DWORD PTR [esi-0x38],cl
  413e98:	xor    BYTE PTR [eax-0x3f044241],al
  413e9e:	cs cs (bad) 
  413ea1:	inc    eax
  413ea2:	div    DWORD PTR [ecx-0x41]
  413ea5:	clc    
  413ea6:	pop    es
  413ea7:	mov    ch,0x60
  413ea9:	(bad)  
  413eaa:	daa    
  413eab:	daa    
  413eac:	sub    eax,DWORD PTR [edi+0x2b35a611]
  413eb2:	inc    edx
  413eb3:	pop    ebx
  413eb4:	imul   esi,DWORD PTR [ebx+0x3fdf9d89],0x1fd4bfd3
  413ebe:	aaa    
  413ebf:	daa    
  413ec0:	adc    cl,BYTE PTR [edi+0x7d]
  413ec3:	jo     0x413ed1
  413ec5:	inc    ecx
  413ec6:	push   edx
  413ec7:	inc    edi
  413ec8:	std    
  413ec9:	pmaxsw mm7,QWORD PTR [ecx-0x477c2578]
  413ed0:	add    al,0xe1
  413ed2:	cmp    BYTE PTR [esi+0x58],bl
  413ed5:	out    dx,eax
  413ed6:	dec    ecx
  413ed7:	icebp  
  413ed8:	int    0x2e
  413eda:	(bad)  
  413edb:	xchg   ebp,eax
  413edc:	iret   
  413edd:	mov    ecx,DWORD PTR [ebx+esi*2]
  413ee0:	inc    edi
  413ee1:	mov    bh,0x88
  413ee3:	adc    al,BYTE PTR [edx+0x19f59037]
  413ee9:	daa    
  413eea:	push   edi
  413eeb:	mov    ah,BYTE PTR [ebp+0x54]
  413eee:	pop    ecx
  413eef:	inc    ebx
  413ef0:	jb     0x413ec5
  413ef2:	(bad)  
  413ef3:	mov    ch,0xd7
  413ef5:	cli    
  413ef6:	cld    
  413ef7:	clc    
  413ef8:	iret   
  413ef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413efb:	sub    DWORD PTR [edi+0x68071d7b],edx
  413f01:	or     BYTE PTR [ebp-0x20f99c32],bl
  413f07:	cdq    
  413f08:	enter  0xa324,0xc6
  413f0c:	mov    al,ds:0xfee23b3e
  413f11:	cmp    al,0xb0
  413f13:	fldcw  WORD PTR [esi+esi*2+0x5e2e4916]
  413f1a:	fcmovne st,st(1)
  413f1c:	clc    
  413f1d:	dec    ebp
  413f1e:	sbb    ecx,edi
  413f20:	std    
  413f21:	das    
  413f22:	stc    
  413f23:	(bad)  
  413f24:	outs   dx,DWORD PTR ds:[esi]
  413f25:	in     al,0xe8
  413f27:	jno    0x413ec9
  413f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f2a:	sub    DWORD PTR ds:0x20289cb6,edx
  413f30:	mov    cl,0xd6
  413f32:	scas   eax,DWORD PTR es:[edi]
  413f33:	dec    eax
  413f34:	or     eax,0xdc7e8814
  413f39:	sbb    al,0x78
  413f3b:	jo     0x413f90
  413f3d:	aaa    
  413f3e:	jl     0x413ee1
  413f40:	mov    bl,0xf2
  413f42:	sahf   
  413f43:	push   ss
  413f44:	jno    0x413f19
  413f46:	aad    0xbc
  413f48:	mov    esp,0x8ff5a30e
  413f4d:	(bad)  
  413f4e:	cmp    DWORD PTR [edx],ebx
  413f50:	adc    al,BYTE PTR [edi-0x2]
  413f53:	fld    TBYTE PTR [esi]
  413f55:	es dec ebp
  413f57:	icebp  
  413f58:	in     al,0xb3
  413f5a:	jb     0x413f73
  413f5c:	pop    ebp
  413f5d:	xchg   ecx,eax
  413f5e:	sub    al,0xf0
  413f60:	sub    eax,DWORD PTR [eax+0xa]
  413f63:	pusha  
  413f64:	shl    DWORD PTR [ebx-0x752db5d8],0x25
  413f6b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f6d:	cmp    ecx,DWORD PTR [ebx-0x5962f096]
  413f73:	add    al,0x6d
  413f75:	dec    ebx
  413f76:	lods   al,BYTE PTR ds:[esi]
  413f77:	dec    esi
  413f78:	fldcw  WORD PTR [edi+ebp*1]
  413f7b:	mov    al,ds:0xbcae6cf5
  413f80:	xor    ecx,DWORD PTR [edi]
  413f82:	jmp    0x673bfb5c
  413f87:	add    al,0xae
  413f89:	xchg   DWORD PTR [edi-0x547cb8a1],esi
  413f8f:	in     al,0xaa
  413f91:	jns    0x413f1e
  413f93:	push   es
  413f94:	sbb    ah,dh
  413f96:	fldcw  WORD PTR [edx-0x37]
  413f99:	xchg   ebx,eax
  413f9a:	out    dx,eax
  413f9b:	dec    esi
  413f9c:	ror    dh,1
  413f9e:	add    esi,DWORD PTR [edi-0x30]
  413fa1:	and    al,0xaf
  413fa3:	sbb    edi,DWORD PTR ds:0x2bc8d85b
  413fa9:	ret    0x2ef8
  413fac:	aad    0x87
  413fae:	inc    ebp
  413faf:	mov    BYTE PTR [ebx+0xfa02c0e],ch
  413fb5:	sbb    DWORD PTR [edx+0x2],edi
  413fb8:	push   eax
  413fb9:	cwde   
  413fba:	cwde   
  413fbb:	shl    ecx,1
  413fbd:	in     al,0xdc
  413fbf:	adc    BYTE PTR ds:0x3e4ab20f,0x1f
  413fc6:	mov    edx,0x5a2964fc
  413fcb:	cmp    al,0x80
  413fcd:	push   edx
  413fce:	inc    edx
  413fcf:	icebp  
  413fd0:	mov    ds:0xdb83732,eax
  413fd5:	popa   
  413fd6:	add    esi,eax
  413fd8:	cmp    BYTE PTR [ecx-0x386453d0],ch
  413fde:	sti    
  413fdf:	and    DWORD PTR [esi+0xa],0xce76b8a0
  413fe6:	sbb    eax,0xe79f814f
  413feb:	dec    ebx
  413fec:	ror    BYTE PTR [edi],1
  413fee:	(bad)
  413ff1:	sub    ah,BYTE PTR [ebp+ebx*2+0x39]
  413ff5:	sub    al,0x92
  413ff7:	loopne 0x413fa5
  413ff9:	cmp    al,0x6
  413ffb:	fstp   DWORD PTR [ebx]
  413ffd:	(bad)  
  413ffe:	and    DWORD PTR [edi+0x34],ecx
  414001:	fldcw  WORD PTR [esi-0x2b526b6f]
  414007:	out    0xb2,al
  414009:	sub    al,0xd7
  41400b:	loopne 0x413f8d
  41400d:	std    
  41400e:	retf   0x8e42
  414011:	pushf  
  414012:	pop    ds
  414013:	movzx  esi,BYTE PTR [edx+esi*1-0x1b]
  414018:	fistp  WORD PTR [edi+0x7c]
  41401b:	fbstp  TBYTE PTR [edx-0x61]
  41401e:	jns    0x413fe2
  414020:	jle    0x414020
  414022:	add    BYTE PTR [edx],dh
  414024:	retf   0x732b
  414027:	cmp    ch,BYTE PTR [ebx]
  414029:	mov    DWORD PTR [esi+edx*2],ebp
  41402c:	sbb    al,0xa
  41402e:	add    eax,0x6f638628
  414033:	fwait
  414034:	sahf   
  414035:	jmp    DWORD PTR [edx]
  414037:	(bad)  
  414038:	ins    BYTE PTR es:[edi],dx
  414039:	cmp    al,0x12
  41403b:	sub    eax,0x11f620b8
  414040:	cld    
  414041:	adc    ebx,DWORD PTR gs:[edx-0xfcaad7e]
  414048:	inc    esi
  414049:	je     0x41407d
  41404b:	fld    DWORD PTR [edi+0x652d1ab2]
  414051:	or     ch,BYTE PTR [edx-0x3297f4f6]
  414057:	push   edx
  414058:	add    BYTE PTR [ebx-0x1],al
  41405b:	xchg   ecx,eax
  41405c:	inc    edx
  41405d:	stos   DWORD PTR es:[edi],eax
  41405e:	or     bh,ch
  414060:	add    BYTE PTR [edi],cl
  414062:	dec    esi
  414063:	pop    ds
  414064:	call   0x3e436ba4
  414069:	stc    
  41406a:	cwde   
  41406b:	repz jbe 0x414021
  41406e:	or     edi,ebp
  414070:	and    edi,DWORD PTR [ecx+0x14]
  414073:	mov    gs,WORD PTR [edi]
  414075:	cmp    ebp,DWORD PTR [edx+0x4b]
  414078:	sub    DWORD PTR [eax+0x29aea6eb],ebx
  41407e:	sbb    DWORD PTR [ecx],esi
  414080:	mov    ebp,0x423a6075
  414085:	pop    edx
  414086:	push   esi
  414087:	lods   eax,DWORD PTR ds:[esi]
  414088:	call   0x2823e3d2
  41408d:	mov    eax,0x203ea34b
  414092:	outs   dx,BYTE PTR ds:[esi]
  414093:	rcl    ebx,cl
  414095:	es sbb dl,ah
  414098:	int    0xb9
  41409a:	pop    ss
  41409b:	push   eax
  41409c:	adc    BYTE PTR [ebx],0x3d
  41409f:	into   
  4140a0:	out    0xd9,eax
  4140a2:	xlat   BYTE PTR ds:[ebx]
  4140a3:	das    
  4140a4:	xchg   BYTE PTR [esi+edx*8+0x16c80875],dh
  4140ab:	dec    DWORD PTR [eax+0x7d2e8d4f]
  4140b1:	lods   eax,DWORD PTR ds:[esi]
  4140b2:	pop    edx
  4140b3:	push   es
  4140b4:	mov    edx,0x97767653
  4140b9:	fucomi st,st(3)
  4140bb:	jns    0x414124
  4140bd:	sbb    BYTE PTR [ebx+edx*2],0x34
  4140c1:	xchg   ebp,eax
  4140c2:	clc    
  4140c3:	and    DWORD PTR [esi],esi
  4140c5:	xor    ah,ch
  4140c7:	loope  0x41410e
  4140c9:	scas   al,BYTE PTR es:[edi]
  4140ca:	xor    BYTE PTR [edi+ebx*2],dh
  4140cd:	mul    BYTE PTR [esi-0x4842108f]
  4140d3:	(bad)  
  4140d5:	stos   DWORD PTR es:[edi],eax
  4140d6:	into   
  4140d7:	mov    edi,0x79990207
  4140dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140dd:	xchg   edx,eax
  4140de:	or     al,0xad
  4140e0:	jle    0x414062
  4140e2:	mov    ds:0x1c88d7bf,al
  4140e7:	add    eax,0xe2ef2a28
  4140ec:	sbb    ebp,DWORD PTR [esi+0x3d]
  4140ef:	inc    ebx
  4140f0:	push   eax
  4140f1:	scas   eax,DWORD PTR es:[edi]
  4140f2:	and    eax,0x878421be
  4140f7:	inc    esp
  4140f8:	ja     0x414127
  4140fa:	jno    0x414152
  4140fc:	or     DWORD PTR [edx-0x48c17db],edx
  414102:	and    DWORD PTR [ecx-0x3474d115],edx
  414108:	sbb    BYTE PTR [edx+0x33],al
  41410b:	aaa    
  41410c:	scas   al,BYTE PTR es:[edi]
  41410d:	das    
  41410e:	add    cl,BYTE PTR [edx]
  414110:	fsubp  st(6),st
  414112:	xchg   edi,eax
  414113:	xor    BYTE PTR [ecx-0x2b656626],dl
  414119:	xor    eax,0x61e93fcf
  41411e:	inc    ebp
  41411f:	push   eax
  414120:	repnz inc ecx
  414122:	stos   BYTE PTR es:[edi],al
  414123:	enter  0x4a59,0x6a
  414127:	pop    ds
  414128:	or     edx,eax
  41412a:	pop    ds
  41412b:	mov    dh,0x5f
  41412d:	mov    ebx,0xb43943b3
  414132:	daa    
  414133:	ss data16 jo 0x4140c3
  414137:	cmc    
  414138:	pop    esp
  414139:	daa    
  41413a:	addr16 je 0x4140e9
  41413d:	adc    eax,0x6af6b0d5
  414142:	dec    edi
  414143:	in     eax,dx
  414144:	xor    BYTE PTR [edx+0x21],dh
  414147:	push   cs
  414148:	adc    bh,BYTE PTR ds:0xcffb2735
  41414e:	(bad)  
  41414f:	sbb    esp,DWORD PTR [esp+esi*1+0x5ab92497]
  414156:	jb     0x4141d7
  414158:	push   0x3da600c2
  41415d:	xor    eax,0xa85647fe
  414162:	inc    edi
  414163:	icebp  
  414164:	sub    BYTE PTR [esi+0x164a7321],cl
  41416a:	int    0xdd
  41416c:	mov    esi,0xc0c21e44
  414171:	xchg   edi,eax
  414172:	sbb    eax,DWORD PTR [eax+0x52]
  414175:	dec    edx
  414176:	mov    dl,0x18
  414178:	inc    esp
  414179:	out    0x9,eax
  41417b:	mov    ds:0xe2d5e7cf,eax
  414180:	pop    ebx
  414181:	hlt    
  414182:	ins    DWORD PTR es:[edi],dx
  414183:	mov    ecx,0x53b1751e
  414188:	mov    cl,0xe2
  41418a:	xor    dl,BYTE PTR [ecx+0x30]
  41418d:	push   esi
  41418e:	(bad)  [eax+0x6c]
  414191:	jecxz  0x414123
  414193:	mov    ch,BYTE PTR [edi+0x9]
  414196:	jae    0x414188
  414198:	push   0x6915388a
  41419d:	arpl   cx,bp
  41419f:	inc    ebp
  4141a0:	(bad)  
  4141a1:	aam    0x4b
  4141a3:	mov    cs,WORD PTR [eax]
  4141a5:	ins    BYTE PTR es:[edi],dx
  4141a6:	xor    al,0x63
  4141a8:	jmp    0xd919:0x90c44ed8
  4141af:	fidivr DWORD PTR [eax]
  4141b1:	pop    ecx
  4141b2:	ins    BYTE PTR es:[edi],dx
  4141b3:	mov    al,0xdd
  4141b5:	lods   al,BYTE PTR ds:[esi]
  4141b6:	inc    edx
  4141b7:	dec    esi
  4141b8:	fistp  WORD PTR [edx]
  4141ba:	sub    al,0x7b
  4141bc:	cld    
  4141bd:	jmp    0x6858d09e
  4141c2:	mov    esp,0xb8076b4a
  4141c7:	push   edx
  4141c8:	std    
  4141c9:	and    ebx,DWORD PTR [esi-0x58fcd1a]
  4141cf:	jmp    0xc7e4:0x84c8481d
  4141d6:	icebp  
  4141d7:	inc    ebp
  4141d8:	xchg   ecx,eax
  4141d9:	xchg   edx,eax
  4141da:	sahf   
  4141db:	mov    ch,0x57
  4141dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141de:	cmc    
  4141df:	addr16 sub esi,ecx
  4141e2:	xchg   esi,eax
  4141e3:	stos   BYTE PTR es:[di],al
  4141e5:	popf   
  4141e6:	(bad)  [ebp+0x1a]
  4141e9:	lahf   
  4141ea:	arpl   WORD PTR [edx+0x3d],bx
  4141ed:	mov    al,ds:0x750cec59
  4141f2:	fwait
  4141f3:	out    dx,al
  4141f4:	setp   BYTE PTR [eax-0x7099148d]
  4141fb:	and    BYTE PTR ds:0x5ee8cdcd,ch
  414201:	cmp    dh,BYTE PTR [edi+ebp*4-0x39778ae]
  414208:	dec    ecx
  414209:	mov    bh,dl
  41420b:	sbb    al,0x4e
  41420d:	(bad)  
  41420e:	out    dx,al
  41420f:	fucomi st,st(2)
  414211:	xor    al,0xc2
  414213:	dec    eax
  414214:	fimul  WORD PTR [ecx+edx*2]
  414217:	jmp    0x1b0f:0x3ef2b103
  41421e:	fistp  QWORD PTR [edx+0x2d]
  414221:	pop    ss
  414222:	addr16 mov edx,0x2a549d42
  414228:	sti    
  414229:	cmp    BYTE PTR [ebx],ch
  41422b:	pop    esp
  41422c:	ret    0x4a56
  41422f:	and    al,cl
  414231:	mov    ds:0x9b5445f0,eax
  414236:	jne    0x414296
  414238:	fsub   QWORD PTR [ecx-0x7a]
  41423b:	xchg   ebx,eax
  41423c:	sti    
  41423d:	out    dx,al
  41423e:	(bad)  [ecx+edi*8+0x322de206]
  414245:	push   ds
  414246:	div    BYTE PTR [eax-0x3feafa5c]
  41424c:	pop    ss
  41424d:	ja     0x4142c3
  41424f:	(bad)  
  414251:	xchg   BYTE PTR ds:0x1417234a,ah
  414257:	push   0xffffffd3
  414259:	lods   al,BYTE PTR ds:[esi]
  41425a:	(bad)  
  41425b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41425c:	fnstsw WORD PTR [ecx-0x51223ecc]
  414262:	and    ebp,DWORD PTR [edx]
  414264:	adc    cl,BYTE PTR [esi+0x65]
  414267:	push   edi
  414268:	repz push es
  41426a:	jl     0x41425f
  41426c:	ficom  DWORD PTR [eax+0x3952bbd1]
  414272:	and    bl,dl
  414274:	add    dh,ch
  414276:	cmp    al,0xd6
  414278:	out    dx,eax
  414279:	scas   al,BYTE PTR es:[edi]
  41427a:	mov    edx,cs
  41427c:	repnz pop DWORD PTR [ebx]
  41427f:	pusha  
  414280:	nop
  414281:	xchg   ebp,eax
  414282:	cld    
  414283:	jae    0x41422f
  414285:	mov    ecx,0x69a1dc28
  41428a:	push   eax
  41428b:	or     ebx,DWORD PTR [edx-0x9]
  41428e:	add    BYTE PTR [edx+0x47],dl
  414291:	(bad)  
  414292:	xor    eax,edx
  414294:	cdq    
  414295:	xor    eax,DWORD PTR [edi]
  414297:	inc    esp
  414298:	lods   eax,DWORD PTR ds:[esi]
  414299:	and    BYTE PTR [edx+0x5ce2b76f],bl
  41429f:	or     BYTE PTR [ecx-0x570ed56b],dh
  4142a5:	cmp    ebp,ecx
  4142a7:	lods   eax,DWORD PTR ds:[esi]
  4142a8:	jl     0x414248
  4142aa:	push   cs
  4142ab:	loope  0x4142f5
  4142ad:	xor    bl,BYTE PTR [ebp+0x11]
  4142b0:	xchg   esi,eax
  4142b1:	lahf   
  4142b2:	int    0x10
  4142b4:	arpl   WORD PTR ds:0x821ecc80,bp
  4142ba:	sub    edi,DWORD PTR [ecx-0x392b3125]
  4142c0:	daa    
  4142c1:	push   ds
  4142c2:	jno    0x4142ef
  4142c4:	test   eax,0x3f3ddc1a
  4142c9:	sti    
  4142ca:	scas   eax,DWORD PTR es:[edi]
  4142cb:	xchg   BYTE PTR [ebp+0x77f33207],bl
  4142d1:	mov    al,0xb9
  4142d3:	sub    al,0x1a
  4142d5:	inc    ecx
  4142d6:	cmc    
  4142d7:	mov    ch,0xe2
  4142d9:	push   ds
  4142da:	addr16 jp 0x4142cf
  4142dd:	lahf   
  4142de:	fmul   st,st(2)
  4142e0:	(bad)  
  4142e1:	pop    ebp
  4142e2:	dec    esp
  4142e3:	into   
  4142e4:	mov    al,0x0
  4142e6:	jl     0x414293
  4142e8:	dec    eax
  4142e9:	pop    ebx
  4142ea:	jmp    0x75a8:0xb4d4e6c6
  4142f1:	enter  0xaa5,0x33
  4142f5:	xchg   edx,eax
  4142f6:	hlt    
  4142f7:	outs   dx,BYTE PTR ds:[esi]
  4142f8:	mov    DWORD PTR [esi-0x1c],edx
  4142fb:	rol    BYTE PTR [edi+0x6f],1
  4142fe:	pop    esi
  4142ff:	imul   ebx,DWORD PTR [esi+0x49],0x30
  414303:	mov    eax,ds:0x4fc8f01e
  414308:	jle    0x414312
  41430a:	push   ds
  41430b:	add    ebp,DWORD PTR [edx-0x71]
  41430e:	(bad)  
  414310:	mov    cs,WORD PTR [ebp-0x4b]
  414313:	dec    DWORD PTR [eax+0x79]
  414316:	xchg   edi,eax
  414317:	(bad)  
  414318:	adc    eax,0x2be9e058
  41431d:	shl    DWORD PTR [ebp+0x6b],cl
  414320:	jmp    0x414331
  414322:	push   ss
  414323:	inc    edi
  414324:	sub    eax,0x9889bff7
  414329:	sbb    cl,al
  41432b:	sahf   
  41432c:	pop    es
  41432d:	and    ah,BYTE PTR [esi+0x577be2c2]
  414333:	hlt    
  414334:	out    dx,al
  414335:	lahf   
  414336:	imul   esp,edx,0x49c698ff
  41433c:	cmp    esi,esp
  41433e:	sbb    dx,0xffa7
  414342:	out    0x1b,al
  414344:	in     al,0x32
  414346:	ror    BYTE PTR [edx],cl
  414348:	sub    DWORD PTR [ebp+0x10912318],edi
  41434e:	mov    edi,eax
  414350:	xchg   dl,cl
  414352:	mov    al,0x1d
  414354:	xor    eax,0xaa9a0a1b
  414359:	or     esi,DWORD PTR [esi]
  41435b:	pop    ds
  41435c:	mov    bh,0x4d
  41435e:	dec    ecx
  41435f:	mov    ds:0xd9f69557,eax
  414364:	fadd   DWORD PTR [ebp+edx*8-0x30b8d0a7]
  41436b:	push   esi
  41436c:	clc    
  41436d:	dec    esi
  41436e:	je     0x414387
  414370:	mov    ds,WORD PTR [edi+eiz*8]
  414373:	push   0x2d591784
  414378:	gs jb  0x4143b1
  41437b:	adc    dl,BYTE PTR [ebx+0x4a]
  41437e:	ins    DWORD PTR es:[edi],dx
  41437f:	push   ebx
  414380:	rol    BYTE PTR [ebp+0x36],0x60
  414384:	mov    bl,0xd1
  414386:	jbe    0x414335
  414388:	test   al,0x8c
  41438a:	cmp    eax,0x2aea36dd
  41438f:	sahf   
  414390:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414391:	ss xchg esp,eax
  414393:	shl    BYTE PTR [edx-0x15],0x2b
  414397:	jmp    0x7142:0x9bc155b3
  41439e:	mov    esi,esi
  4143a0:	mov    dl,0x86
  4143a2:	out    0xbc,eax
  4143a4:	cmp    al,0x16
  4143a6:	jae    0x414354
  4143a8:	mov    ch,0x6e
  4143aa:	sbb    eax,0x371c3148
  4143af:	retf   0x7af2
  4143b2:	into   
  4143b3:	push   edi
  4143b4:	xor    ebx,DWORD PTR [ecx+0x11]
  4143b7:	sti    
  4143b8:	jecxz  0x414429
  4143ba:	shl    bl,1
  4143bc:	data16 fldcw WORD PTR [eax+0x3]
  4143c0:	fld    QWORD PTR [ecx+esi*4-0x1bb9417c]
  4143c7:	or     BYTE PTR ds:0xcba20a79,bh
  4143cd:	xchg   ecx,eax
  4143ce:	xor    edi,DWORD PTR [esp+eiz*8+0x4ea18a9d]
  4143d5:	dec    edi
  4143d6:	inc    ebp
  4143d7:	mov    ebp,0xd3de620a
  4143dc:	and    BYTE PTR [edi-0xa],dh
  4143df:	xor    BYTE PTR [edx],ch
  4143e1:	pop    ds
  4143e2:	or     al,0x78
  4143e4:	call   0x2f3a:0x5b96948c
  4143eb:	leave  
  4143ec:	fild   WORD PTR [eax+0x4a]
  4143ef:	cmp    ebx,ecx
  4143f1:	xor    al,0x3
  4143f3:	or     eax,0x22ad6cf0
  4143f8:	lock shl BYTE PTR [eax+ebx*4-0x36],0x35
  4143fe:	add    al,0xa4
  414400:	mov    ecx,0xa69c8146
  414405:	cmp    DWORD PTR [ecx+0x3e1bc32a],esp
  41440b:	shr    esi,1
  41440d:	or     al,0x84
  41440f:	xchg   esi,eax
  414410:	mov    bl,0xa6
  414412:	push   ebx
  414413:	rcr    edi,1
  414415:	mov    eax,ds:0xf2059b2
  41441b:	jb     0x41441b
  41441d:	icebp  
  41441e:	gs dec eax
  414420:	fld    TBYTE PTR [eax]
  414422:	cmp    eax,0x79b6333
  414427:	mov    ecx,0x9cbe1cce
  41442c:	jno    0x4143ed
  41442e:	scas   al,BYTE PTR es:[edi]
  41442f:	sub    esp,0x2b
  414432:	stc    
  414433:	das    
  414434:	cli    
  414435:	(bad)  
  414436:	addr16 jg 0x41443d
  414439:	stos   BYTE PTR es:[edi],al
  41443a:	jno    0x414435
  41443c:	and    DWORD PTR [esp],ecx
  41443f:	mov    ecx,0x9eb30b1b
  414444:	hlt    
  414445:	(bad)  
  414446:	cmp    DWORD PTR [ecx+0x4f49f2da],ecx
  41444c:	inc    esp
  41444d:	lds    ebp,FWORD PTR [ecx+ebx*4+0x4d66779f]
  414454:	iret   
  414455:	popa   
  414456:	and    cl,ah
  414458:	mov    ds:0xb8d40324,al
  41445d:	call   DWORD PTR [ebp-0x28]
  414460:	mov    ebx,esp
  414462:	fsubr  QWORD PTR [ebx+0x79]
  414465:	or     DWORD PTR [edx-0x29],ecx
  414468:	out    dx,eax
  414469:	icebp  
  41446a:	(bad)  
  41446b:	std    
  41446c:	div    eax
  41446e:	aam    0xb2
  414470:	(bad)  
  414471:	clc    
  414472:	mov    ebp,0x7f8aa210
  414477:	icebp  
  414478:	mov    dh,0x66
  41447a:	mov    ch,bh
  41447c:	push   esp
  41447d:	mov    ah,0x88
  41447f:	push   0xfffffffa
  414481:	cwde   
  414482:	adc    BYTE PTR [eax+0x8f5fd14],dh
  414488:	cmp    eax,0xf2aedd40
  41448d:	push   es
  41448e:	sub    edx,edi
  414490:	stos   BYTE PTR es:[edi],al
  414491:	jno    0x4144d5
  414493:	(bad)  
  414495:	xor    dl,ah
  414497:	jl     0x41447e
  414499:	stos   DWORD PTR es:[edi],eax
  41449a:	and    eax,0x48d1c5a8
  41449f:	push   edi
  4144a0:	aaa    
  4144a1:	mov    al,ds:0x2cbf64f3
  4144a6:	jbe    0x414508
  4144a8:	push   edi
  4144a9:	pop    esp
  4144aa:	cmp    cl,BYTE PTR [ebx+0x7afd93d8]
  4144b0:	cmp    DWORD PTR ds:0x322d7d4,0xc533c729
  4144ba:	(bad)
  4144bd:	mov    bh,0xf6
  4144bf:	daa    
  4144c0:	sahf   
  4144c1:	add    ch,ah
  4144c3:	dec    ebp
  4144c4:	push   ds
  4144c5:	xor    BYTE PTR [edi],ah
  4144c7:	mov    eax,0xc736ec56
  4144cc:	mul    BYTE PTR [edx]
  4144ce:	int    0xe
  4144d0:	inc    ecx
  4144d1:	fisub  DWORD PTR [ebp-0x74]
  4144d4:	jb     0x414545
  4144d6:	lods   eax,DWORD PTR ds:[esi]
  4144d7:	mov    ds:0xf66528ce,eax
  4144dc:	popa   
  4144dd:	test   al,0xfb
  4144df:	in     al,0x44
  4144e1:	cmp    al,0x60
  4144e3:	push   eax
  4144e4:	mov    ds:0xdee39cd9,eax
  4144e9:	sbb    eax,0x43731133
  4144ee:	dec    edi
  4144ef:	push   esi
  4144f0:	repz mov esp,0xc24584a7
  4144f6:	aam    0x66
  4144f8:	addr16 stc 
  4144fa:	sbb    edi,DWORD PTR [esi]
  4144fc:	iret   
  4144fd:	add    al,0x6d
  4144ff:	mov    al,0x5
  414501:	clc    
  414502:	inc    edx
  414503:	jle    0x4144e7
  414505:	dec    esi
  414506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414507:	xor    DWORD PTR ds:0x7a8b46e5,ebp
  41450d:	sub    DWORD PTR [ebx-0x68],ecx
  414510:	cmp    DWORD PTR [ecx+ecx*2+0x0],eax
  414514:	cmc    
  414515:	push   ecx
  414516:	push   esp
  414517:	pop    edx
  414518:	push   0x851d9689
  41451d:	out    dx,eax
  41451e:	lods   al,BYTE PTR ds:[esi]
  41451f:	nop
  414520:	sbb    DWORD PTR [esp+ebx*8+0x72],0x33050102
  414528:	jp     0x414571
  41452a:	paddb  mm7,mm3
  41452d:	jg     0x41453d
  41452f:	pop    ebp
  414530:	sub    BYTE PTR [eax+0x36ab5dbe],dl
  414536:	retf   0x8733
  414539:	jl     0x41450f
  41453b:	push   0xbbd9dfb6
  414540:	cs inc esi
  414542:	jge    0x414538
  414544:	push   edi
  414545:	or     edx,DWORD PTR [edi-0x3d]
  414548:	push   edi
  414549:	les    ecx,FWORD PTR [edx]
  41454b:	mov    ds:0xd0654487,eax
  414550:	jmp    0x39e1a826
  414555:	adc    BYTE PTR [edx+0x69],ch
  414558:	cmc    
  414559:	lods   eax,DWORD PTR ds:[esi]
  41455a:	pop    ebx
  41455b:	and    al,bl
  41455d:	xchg   BYTE PTR [ebx],cl
  41455f:	push   0x54
  414561:	and    BYTE PTR [edi+ecx*8],ch
  414564:	adc    BYTE PTR [eax],0xcf
  414567:	fbld   TBYTE PTR [ecx+0x29]
  41456a:	xchg   esi,eax
  41456b:	(bad)  
  41456c:	mov    edx,0x90d621b1
  414571:	mov    edx,0x52bb3d5d
  414576:	fcomip st,st(1)
  414578:	mov    esi,0xe6080d7d
  41457d:	xchg   DWORD PTR [edx],edx
  41457f:	pop    ecx
  414580:	jnp    0x414507
  414582:	call   0x6ded43fd
  414587:	outs   dx,BYTE PTR ds:[esi]
  414588:	adc    edi,DWORD PTR [ebp+0x61]
  41458b:	in     eax,dx
  41458c:	mov    esp,0x698ca845
  414591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414592:	add    bh,BYTE PTR [edi-0x5778afd0]
  414598:	push   ebx
  414599:	mov    esp,0x4dd32a48
  41459e:	mov    gs,esp
  4145a0:	add    cl,BYTE PTR ds:0xc4578139
  4145a6:	inc    edx
  4145a7:	inc    ebp
  4145a8:	fwait
  4145a9:	cli    
  4145aa:	adc    dh,BYTE PTR [ecx-0x38c0e6de]
  4145b0:	push   ebp
  4145b1:	add    eax,0xe144728b
  4145b6:	aas    
  4145b7:	pop    ecx
  4145b8:	fsubr  QWORD PTR [eax-0x62]
  4145bb:	in     eax,0x17
  4145bd:	scas   al,BYTE PTR es:[edi]
  4145be:	or     ah,BYTE PTR [eax+0x71da9b5d]
  4145c4:	sub    bl,0x6
  4145c7:	aaa    
  4145c8:	ins    BYTE PTR es:[edi],dx
  4145c9:	mov    ah,0xa6
  4145cb:	mov    al,ds:0xa70e6ab
  4145d0:	mov    dl,0xaa
  4145d2:	shl    ch,1
  4145d4:	leave  
  4145d5:	fisubr WORD PTR [edi+0x369dba4e]
  4145db:	es mov ch,0x29
  4145de:	cmp    dl,BYTE PTR [ecx+0x3ab45b36]
  4145e4:	(bad)
  4145e8:	div    bl
  4145ea:	cdq    
  4145eb:	mul    DWORD PTR [edi-0x2609fdf]
  4145f1:	xlat   BYTE PTR ds:[ebx]
  4145f2:	sub    al,0x32
  4145f4:	or     BYTE PTR [eax-0x4e8128fa],dl
  4145fa:	push   es
  4145fb:	cmc    
  4145fc:	shl    bh,1
  4145fe:	loope  0x414646
  414600:	loopne 0x414670
  414602:	int    0x6d
  414604:	ficomp DWORD PTR [ebx-0x255509b6]
  41460a:	stc    
  41460b:	mov    ds:0x50c59038,eax
  414610:	pop    edx
  414611:	push   edx
  414612:	add    DWORD PTR [edx],esi
  414614:	sub    al,0x3d
  414616:	push   ecx
  414617:	push   0x1b3cb40d
  41461c:	mov    cl,0xe3
  41461e:	(bad)  
  41461f:	in     al,dx
  414620:	loopne 0x41465c
  414622:	iret   
  414623:	pop    eax
  414624:	and    eax,0xe658a122
  414629:	cli    
  41462a:	sbb    eax,0xe303836d
  41462f:	sub    DWORD PTR [ecx+0xa3d1372],ebx
  414635:	mov    ds:0xdfd71838,eax
  41463a:	push   0xda1603e8
  41463f:	imul   edx,edi,0x40
  414642:	xor    al,0x96
  414644:	push   ebp
  414645:	outs   dx,DWORD PTR ds:[esi]
  414646:	retf   
  414647:	xlat   BYTE PTR ds:[ebx]
  414648:	les    esp,FWORD PTR [eax]
  41464a:	aad    0xe0
  41464c:	iret   
  41464d:	bnd js 0x4145d4
  414650:	arpl   WORD PTR [eax+0x4cf0cd6b],bx
  414656:	ins    DWORD PTR es:[edi],dx
  414657:	add    ebp,ecx
  414659:	jae    0x41469a
  41465b:	xchg   ebp,eax
  41465c:	or     ch,bh
  41465e:	ja     0x4146b6
  414660:	mov    es,WORD PTR [ecx+0x4a]
  414663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414664:	call   0x3f50:0xe7ce2ef
  41466b:	cli    
  41466c:	fld    TBYTE PTR [edx]
  41466e:	icebp  
  41466f:	out    0x32,al
  414671:	adc    ecx,DWORD PTR [eax+0x7267b982]
  414677:	and    dh,BYTE PTR [eax+0x3117286f]
  41467d:	inc    esi
  41467e:	nop
  41467f:	outs   dx,BYTE PTR ds:[esi]
  414680:	mov    ds:0xfe973984,al
  414685:	in     eax,dx
  414686:	and    BYTE PTR [esi-0x795208e9],bl
  41468c:	sub    bl,cl
  41468e:	fidiv  DWORD PTR [ebp-0x7feedd49]
  414694:	jle    0x4146c9
  414696:	dec    ecx
  414697:	jb     0x4146a4
  414699:	bswap  esi
  41469b:	lahf   
  41469c:	sbb    bh,BYTE PTR [edx]
  41469e:	(bad)  
  41469f:	pop    ebx
  4146a0:	xor    eax,0xcb396e47
  4146a5:	(bad)  
  4146a6:	gs mov dl,0xda
  4146a9:	adc    DWORD PTR [ebx+0x2ab32f71],ebx
  4146af:	outs   dx,DWORD PTR ds:[esi]
  4146b0:	repz enter 0x9361,0xbc
  4146b5:	std    
  4146b6:	add    ebx,DWORD PTR [esp+ecx*2]
  4146b9:	retf   0x9ce8
  4146bc:	adc    eax,0x7d91c6ac
  4146c1:	dec    esp
  4146c2:	popf   
  4146c3:	cmp    al,0x25
  4146c5:	inc    ebx
  4146c6:	(bad)  
  4146c7:	ss jg  0x414682
  4146ca:	or     DWORD PTR [ebx+0x48],esp
  4146cd:	bound  edx,QWORD PTR [eax+0x56]
  4146d0:	(bad)  
  4146d1:	adc    eax,0x93f9adc1
  4146d6:	dec    esi
  4146d7:	not    ebp
  4146d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146da:	pushf  
  4146db:	enter  0xbb71,0x5b
  4146df:	dec    edx
  4146e0:	popa   
  4146e1:	mov    dl,0xa7
  4146e3:	push   ebx
  4146e4:	cmp    DWORD PTR [ebx],0x14
  4146e7:	dec    ebx
  4146e8:	add    esi,DWORD PTR [ebp+0x38]
  4146eb:	adc    BYTE PTR [eax],dl
  4146ed:	mov    dl,0x83
  4146ef:	adc    edi,DWORD PTR [esi-0x6c]
  4146f2:	jo     0x414749
  4146f4:	leave  
  4146f5:	es push esp
  4146f7:	div    BYTE PTR [ecx-0x2d]
  4146fa:	sbb    esi,DWORD PTR [esi-0x30]
  4146fd:	jmp    0x414715
  4146ff:	cmp    al,0xde
  414701:	inc    ecx
  414702:	push   0xe87501f9
  414707:	dec    ecx
  414708:	in     eax,dx
  414709:	outs   dx,DWORD PTR ds:[esi]
  41470a:	jecxz  0x414764
  41470c:	test   BYTE PTR [eax+edx*1-0x2f9a878d],0xc1
  414714:	pop    ecx
  414715:	repnz add ebp,ebx
  414718:	adc    DWORD PTR [eax+0x63],ecx
  41471b:	add    eax,0x39c16c0c
  414720:	sbb    al,0xd9
  414722:	xchg   ebp,eax
  414723:	ror    BYTE PTR [esi],1
  414725:	or     al,0x5c
  414727:	mov    ch,0x85
  414729:	and    esp,ebp
  41472b:	pushf  
  41472c:	xchg   ebx,eax
  41472d:	lods   al,BYTE PTR ds:[esi]
  41472e:	push   0xffffffdd
  414730:	(bad)  
  414731:	fisttp WORD PTR [edi+0x47904fe6]
  414737:	sbb    BYTE PTR [ebp-0x21],bl
  41473a:	cwde   
  41473b:	enter  0x1f8,0x78
  41473f:	sub    eax,0xe2be01e8
  414744:	rcl    DWORD PTR [edx+0x14],0x17
  414748:	popa   
  414749:	test   BYTE PTR [ecx+0x72],dl
  41474c:	pusha  
  41474d:	sub    DWORD PTR [eax],edx
  41474f:	xor    eax,0xea928f1a
  414754:	mov    bl,0xeb
  414756:	addr16 aad 0x3d
  414759:	cmp    esi,ecx
  41475b:	mov    eax,0x83e589f0
  414760:	cmp    DWORD PTR [esi],edx
  414762:	xor    BYTE PTR [edi],ch
  414764:	xchg   edx,eax
  414765:	loop   0x41477f
  414767:	das    
  414768:	pop    edx
  414769:	xchg   esp,eax
  41476a:	jmp    0xadef:0x474880b8
  414771:	or     al,dl
  414773:	call   0x282f1b37
  414778:	into   
  414779:	shl    al,0x99
  41477c:	and    eax,0xee5dbb
  414781:	adc    al,0xec
  414783:	and    DWORD PTR [ecx+0x3f1ae2b6],edx
  414789:	lea    ecx,[edi+0x70]
  41478c:	mov    ebx,ebx
  41478e:	(bad)  
  414790:	xchg   edx,eax
  414791:	jle    0x4147dd
  414793:	(bad)  
  414794:	push   esp
  414795:	rcl    esp,0x68
  414798:	retf   
  414799:	sbb    ebp,edx
  41479b:	mov    al,BYTE PTR [ebx+0x8]
  41479e:	loop   0x414775
  4147a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a1:	cdq    
  4147a2:	mov    ebx,0xb15a6656
  4147a7:	xchg   esi,eax
  4147a8:	sub    BYTE PTR [esi+0x68e1aea],al
  4147ae:	mov    dh,0x25
  4147b0:	jae    0x41482e
  4147b2:	dec    edi
  4147b3:	push   ebp
  4147b4:	inc    esi
  4147b5:	shl    bh,cl
  4147b7:	mov    eax,DWORD PTR [ebx]
  4147b9:	ret    0x476c
  4147bc:	addr16 jbe 0x414821
  4147bf:	test   BYTE PTR [ebx],ch
  4147c1:	bound  ebp,QWORD PTR [esi-0x7f08669]
  4147c7:	test   eax,0x1b0b6f52
  4147cc:	pop    ecx
  4147cd:	out    0x76,eax
  4147cf:	mov    ds:0x1118f8bf,al
  4147d4:	push   eax
  4147d5:	mov    ebx,0xc5e9e3cd
  4147da:	pop    ds
  4147db:	stos   BYTE PTR es:[edi],al
  4147dc:	push   0xd
  4147de:	push   ecx
  4147df:	mov    edx,0x232b29ef
  4147e4:	test   DWORD PTR [edi],0x63d5de54
  4147ea:	xchg   edx,eax
  4147eb:	or     eax,edx
  4147ed:	or     ch,BYTE PTR [edx]
  4147ef:	xchg   ecx,eax
  4147f0:	cmp    eax,0x9f19ed7d
  4147f5:	jmp    0xb364:0x15694288
  4147fc:	cmp    dl,bl
  4147fe:	push   es
  4147ff:	pop    ds
  414800:	stos   BYTE PTR es:[edi],al
  414801:	clc    
  414802:	jno    0x4147a8
  414804:	jne    0x41482d
  414806:	fbstp  TBYTE PTR ss:[esp+edi*4+0x54c17719]
  41480e:	(bad)  [edi-0x6a]
  414811:	mov    bl,0xd4
  414813:	ins    DWORD PTR es:[edi],dx
  414814:	push   esi
  414815:	cmc    
  414816:	dec    edi
  414817:	ja     0x414891
  414819:	out    dx,eax
  41481a:	or     ch,BYTE PTR [eax-0x36]
  41481d:	data16 mov BYTE PTR [esi+0x74c40511],bl
  414824:	push   0xfffffff6
  414826:	jo     0x4147ef
  414828:	adc    ebx,DWORD PTR [esi-0x66f0a74e]
  41482e:	test   al,0xca
  414830:	imul   ebp,DWORD PTR [ebp+eax*8+0x2787ed45],0xfd5b709e
  41483b:	mov    esi,0x16321915
  414840:	or     edi,eax
  414842:	sub    BYTE PTR [edx+edi*2],ah
  414845:	fstp   QWORD PTR [ebx]
  414847:	xchg   DWORD PTR [edx+0x3b],esi
  41484a:	push   ecx
  41484b:	mov    ch,0xf1
  41484d:	sub    eax,0x95dbde5e
  414852:	push   ss
  414853:	pop    ebp
  414854:	mov    al,0xea
  414856:	adc    bl,al
  414858:	push   ds
  414859:	xchg   ebx,eax
  41485a:	loop   0x414855
  41485c:	stc    
  41485d:	js     0x4148c2
  41485f:	inc    edi
  414860:	pop    edi
  414861:	and    eax,esp
  414863:	in     eax,0x6d
  414865:	daa    
  414866:	cmp    cl,BYTE PTR [ebx+esi*2]
  414869:	aaa    
  41486a:	mov    ds:0x13365f03,eax
  41486f:	not    BYTE PTR [ebx]
  414871:	ror    DWORD PTR [ecx],0x11
  414874:	sbb    DWORD PTR [edi-0x38],0xfffffffd
  414878:	(bad)  
  414879:	nop
  41487a:	xchg   BYTE PTR [eax-0x13],al
  41487d:	fcmove st,st(3)
  41487f:	cmp    esi,edi
  414881:	clc    
  414882:	repnz cwde 
  414884:	mov    cl,0xe
  414886:	adc    ch,dl
  414888:	dec    ecx
  414889:	mov    ds:0xe4c06817,eax
  41488e:	cli    
  41488f:	xor    esp,DWORD PTR [edi-0xe43c967]
  414895:	adc    BYTE PTR [eax+0x3575a985],0xc1
  41489c:	pop    ebx
  41489d:	mov    edx,DWORD PTR [esp+esi*4+0x51]
  4148a1:	popf   
  4148a2:	pop    edx
  4148a3:	mov    ecx,0xf2733647
  4148a8:	adc    al,0x1f
  4148aa:	pop    ds
  4148ab:	add    ch,dh
  4148ad:	or     al,0x8e
  4148af:	jmp    0x8bcc:0x94485d20
  4148b6:	push   ebp
  4148b7:	or     BYTE PTR [ebx],dh
  4148b9:	rol    BYTE PTR [ebx],1
  4148bb:	(bad)  
  4148bc:	jne    0x4124e5
  4148c2:	mov    edx,DWORD PTR [ebp-0xc]
  4148c5:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148cc:	mov    bl,BYTE PTR [ebp-0x1]
  4148cf:	cmp    dl,bl
  4148d1:	je     0x416d0f
  4148d7:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148da:	mov    edx,DWORD PTR [ebp-0xc]
  4148dd:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4148e4:	mov    ebx,DWORD PTR [ebp+0xc]
  4148e7:	xor    ecx,eax
  4148e9:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f5]
  4148f0:	jne    0x4191a3
  4148f6:	mov    ecx,DWORD PTR [ebp-0x5c]
  4148f9:	mov    edx,DWORD PTR [ebp+0xc]
  4148fc:	xor    ecx,eax
  4148fe:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f5]
  414906:	mov    edx,DWORD PTR [ebp-0x18]
  414909:	xor    edx,eax
  41490b:	add    edx,esi
  41490d:	cmp    ecx,edx
  41490f:	mov    ecx,DWORD PTR [ebp-0x14]
  414912:	mov    DWORD PTR [ebp+0x8],ecx
  414915:	mov    ecx,DWORD PTR [ebp+0x8]
  414918:	je     0x41b60b
  41491e:	xor    ecx,eax
  414920:	add    ecx,esi
  414922:	mov    ecx,0x242ebf1
  414927:	je     0x416d97
  41492d:	mov    edx,DWORD PTR [ebp+0x8]
  414930:	jmp    0x416c90
  414935:	jo     0x414954
  414937:	cmc    
  414938:	dec    eax
  414939:	or     BYTE PTR [eax-0x4213ea36],0xb0
  414940:	sub    eax,0xdda1bf25
  414945:	mov    ecx,0x3e838069
  41494a:	pop    esi
  41494b:	add    DWORD PTR [ebx+0x5a7449da],0xffffff97
  414952:	adc    BYTE PTR [edx+ebp*2-0x1],dl
  414956:	and    BYTE PTR [edx],bh
  414958:	pop    ebx
  414959:	pop    ds
  41495a:	das    
  41495b:	test   ch,cl
  41495d:	rol    ch,cl
  41495f:	fdivp  st(2),st
  414961:	stos   DWORD PTR es:[edi],eax
  414962:	popf   
  414963:	aaa    
  414964:	lock js 0x4148f9
  414967:	jnp    0x41493e
  414969:	jg     0x41493d
  41496b:	(bad)
  41496e:	dec    ebx
  41496f:	js     0x4149cf
  414971:	inc    esp
  414972:	repz imul edi,DWORD PTR [edi-0x5e],0x49d5b82c
  41497a:	jmp    0x4149b3
  41497c:	xchg   ebx,eax
  41497d:	mov    ebx,0x62ff8d0f
  414982:	mov    eax,ds:0x736545ae
  414987:	xor    edi,edx
  414989:	in     al,0x71
  41498b:	ins    DWORD PTR es:[edi],dx
  41498c:	ds pushf 
  41498e:	pop    ds
  41498f:	jnp    0x4149cd
  414991:	mov    ebx,0x4e1fdd3a
  414996:	mov    ebx,0x521c1bf9
  41499b:	mov    esi,0x19e8e430
  4149a0:	jge    0x414980
  4149a2:	mov    ds:0xf017a15,eax
  4149a7:	xchg   edx,eax
  4149a8:	mov    DWORD PTR [ebp-0x4a],ebp
  4149ab:	out    0x1f,al
  4149ad:	jnp    0x41499b
  4149af:	inc    esp
  4149b0:	xchg   DWORD PTR [edx],esi
  4149b2:	retf   0x3ba8
  4149b5:	ss nop
  4149b7:	(bad)  
  4149b8:	xor    ebp,DWORD PTR [ecx+0x6545a88e]
  4149be:	aad    0x92
  4149c0:	and    DWORD PTR [edx],edi
  4149c2:	pop    esp
  4149c3:	sbb    BYTE PTR [esi-0x77],al
  4149c6:	(bad)  
  4149c7:	push   ebp
  4149c8:	mov    WORD PTR [ebx],?
  4149ca:	(bad)  
  4149cc:	dec    esp
  4149cd:	xor    al,0xfa
  4149d0:	iret   
  4149d1:	scas   eax,DWORD PTR es:[edi]
  4149d2:	jo     0x414a26
  4149d4:	cdq    
  4149d5:	jmp    0x1a07:0xca8b77ed
  4149dc:	mov    esi,DWORD PTR [ecx]
  4149de:	mov    bl,0xb
  4149e0:	xchg   ecx,eax
  4149e1:	shl    BYTE PTR [ecx],1
  4149e3:	(bad)  
  4149e4:	out    0xe4,al
  4149e6:	test   DWORD PTR [edx-0x44cb90cf],ebx
  4149ec:	lods   al,BYTE PTR ds:[esi]
  4149ed:	inc    ebx
  4149ee:	xor    ebp,DWORD PTR [eax]
  4149f0:	cs push 0xec85adc7
  4149f6:	shl    bl,0xd1
  4149f9:	push   ebp
  4149fa:	xlat   BYTE PTR ds:[ebx]
  4149fb:	mov    ebp,0x8643ccc9
  414a00:	pop    ecx
  414a01:	pop    ds
  414a02:	mov    al,0xb6
  414a04:	push   esp
  414a05:	jp     0x4149d6
  414a07:	inc    edx
  414a08:	loope  0x4149d0
  414a0a:	cld    
  414a0b:	push   cs
  414a0c:	outs   dx,DWORD PTR ds:[esi]
  414a0d:	(bad)  [edx+edi*2-0x74]
  414a11:	sub    cl,BYTE PTR [eax]
  414a13:	push   DWORD PTR [ecx+eax*1]
  414a16:	pop    ss
  414a17:	jo     0x4149c9
  414a19:	xchg   esi,eax
  414a1a:	(bad)  [esi-0x29f2b8c7]
  414a20:	mov    al,ds:0xb0b504d5
  414a25:	add    eax,ebx
  414a27:	scas   eax,DWORD PTR es:[edi]
  414a28:	sahf   
  414a29:	mov    ch,0x44
  414a2b:	iret   
  414a2c:	push   ebp
  414a2d:	xor    eax,0x38e371ad
  414a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a33:	sbb    dl,BYTE PTR [eax-0x5d]
  414a36:	out    0xd1,eax
  414a38:	ja     0x414a20
  414a3a:	add    esi,DWORD PTR [ebx]
  414a3c:	repz leave 
  414a3e:	imul   esi,edx,0xb2090672
  414a44:	push   es
  414a45:	ins    DWORD PTR es:[edi],dx
  414a46:	push   ecx
  414a47:	jo     0x414a4d
  414a49:	adc    al,0x1c
  414a4b:	push   esp
  414a4c:	dec    eax
  414a4d:	mov    dl,0x42
  414a4f:	jge    0x414a5d
  414a51:	xor    ah,BYTE PTR [edx+0x7d]
  414a54:	ins    DWORD PTR es:[edi],dx
  414a55:	mov    ds:0xdf5b4392,eax
  414a5a:	sub    eax,0x9b9dd247
  414a5f:	xchg   esi,eax
  414a60:	aad    0x1a
  414a62:	scas   eax,DWORD PTR es:[edi]
  414a63:	sub    edi,0xc38ca818
  414a69:	xchg   BYTE PTR [edx-0x58],bh
  414a6c:	mov    ah,0xf7
  414a6e:	or     DWORD PTR [eax-0x1e125140],eax
  414a74:	test   al,0xd9
  414a76:	test   al,0x6f
  414a78:	popa   
  414a79:	xchg   edi,eax
  414a7a:	jmp    0x414a0d
  414a7c:	test   eax,0x84712801
  414a81:	or     BYTE PTR [eax+0x5bc76baf],al
  414a87:	mov    ah,ch
  414a89:	leave  
  414a8a:	push   eax
  414a8b:	dec    ecx
  414a8c:	jp     0x414a67
  414a8e:	mov    ?,WORD PTR [edi-0x3082b283]
  414a94:	jne    0x414a16
  414a96:	xchg   ecx,eax
  414a97:	(bad)  
  414a98:	mov    eax,0xe61b06a2
  414a9d:	dec    DWORD PTR [ebp-0x20]
  414aa0:	sbb    DWORD PTR [edi+0x453f8f85],0xee1fbe6b
  414aaa:	imul   esi,DWORD PTR [eax-0x11],0x5a
  414aae:	cmp    edi,DWORD PTR [edx-0x62df28fc]
  414ab4:	mov    esi,0xcf63daff
  414ab9:	rcl    BYTE PTR [edx-0x60],1
  414abc:	lahf   
  414abd:	and    eax,0x26a2cf05
  414ac2:	adc    cl,dl
  414ac4:	pop    ss
  414ac5:	mov    eax,ds:0xe9a863f0
  414aca:	aaa    
  414acb:	jmp    0x414a65
  414acd:	mov    eax,0x70c7d42a
  414ad2:	imul   esp,DWORD PTR [eax],0xffffffa1
  414ad5:	jbe    0x414aff
  414ad7:	and    al,0xca
  414ad9:	mov    ebp,0xa766ad51
  414ade:	sub    BYTE PTR [esi],cl
  414ae0:	cmp    esi,ebx
  414ae2:	mov    edx,eax
  414ae4:	aam    0x7a
  414ae6:	or     eax,0xe4d9fde3
  414aeb:	pop    ecx
  414aec:	call   0x7966:0x195e77d1
  414af3:	mov    cl,0x3c
  414af5:	call   0xc414e046
  414afa:	daa    
  414afb:	and    al,0xd4
  414afd:	sub    ch,BYTE PTR [ebx+0x5f]
  414b00:	mov    eax,ds:0x82326d82
  414b05:	repz jnp 0x414b51
  414b08:	pop    eax
  414b09:	iret   
  414b0a:	jecxz  0x414acc
  414b0c:	and    eax,0xed3c7a97
  414b11:	retf   0x1d99
  414b14:	push   0xd34b95dd
  414b19:	iret   
  414b1a:	xor    BYTE PTR [edi-0x43],bl
  414b1d:	push   esp
  414b1e:	dec    eax
  414b1f:	out    dx,eax
  414b20:	inc    edi
  414b21:	sub    dl,bl
  414b23:	repz push eax
  414b25:	retf   
  414b26:	rcr    DWORD PTR [ecx-0x3c9a2a9a],0x44
  414b2d:	push   eax
  414b2e:	retf   0x6a0d
  414b31:	sub    eax,0x6fe9aa9c
  414b36:	xchg   esi,eax
  414b37:	fisubr WORD PTR [ebp+0x72c61294]
  414b3d:	or     ecx,DWORD PTR [edx-0x24c374f4]
  414b43:	push   ss
  414b44:	jns    0x414ac6
  414b46:	xchg   esi,eax
  414b47:	mov    DWORD PTR [ecx-0x497f5b42],ebx
  414b4d:	sub    bl,BYTE PTR [edi+0x76]
  414b50:	add    al,0x3b
  414b52:	cli    
  414b53:	push   esi
  414b54:	and    BYTE PTR [edi+0x31d8117e],0x33
  414b5b:	or     al,0x86
  414b5d:	mov    ah,0x30
  414b5f:	or     al,0x92
  414b61:	iret   
  414b62:	outs   dx,DWORD PTR ds:[esi]
  414b63:	or     BYTE PTR [ecx+0x14],0x10
  414b67:	rcr    BYTE PTR [ecx],0x7
  414b6a:	push   es
  414b6b:	sti    
  414b6c:	cs pop esi
  414b6e:	imul   edx,DWORD PTR [esi],0xadc6ad87
  414b74:	xchg   esi,eax
  414b75:	rep outs dx,BYTE PTR ds:[esi]
  414b77:	push   0xfb3cfd4a
  414b7c:	sahf   
  414b7d:	mov    ch,0x9c
  414b7f:	jbe    0x414b42
  414b81:	sbb    BYTE PTR [eax+ebp*1],0xa5
  414b85:	cmp    DWORD PTR [edi-0x65],edx
  414b88:	sar    esi,1
  414b8a:	inc    edx
  414b8b:	inc    esp
  414b8c:	loope  0x414bfc
  414b8e:	cmp    BYTE PTR [edi+0x170120a9],dh
  414b94:	adc    DWORD PTR [edi],esp
  414b96:	mov    dl,BYTE PTR [ecx-0x8]
  414b99:	mov    bl,0x9e
  414b9b:	lock std 
  414b9d:	xchg   ecx,eax
  414b9e:	ins    BYTE PTR es:[edi],dx
  414b9f:	ss dec esi
  414ba1:	sbb    eax,0x35dc7a3c
  414ba6:	call   0xaee9610a
  414bab:	adc    BYTE PTR [edi+0x4b],dh
  414bae:	jno    0x414bc1
  414bb0:	inc    esp
  414bb1:	dec    esi
  414bb2:	in     eax,0xb0
  414bb4:	aad    0x7a
  414bb6:	in     al,dx
  414bb7:	scas   eax,DWORD PTR es:[edi]
  414bb8:	ja     0x414c2e
  414bba:	adc    BYTE PTR [ecx],bl
  414bbc:	stos   DWORD PTR es:[edi],eax
  414bbd:	mov    ds:0x41062eba,al
  414bc2:	dec    esi
  414bc3:	sbb    BYTE PTR [ebx-0x22],0xf0
  414bc7:	retf   0x3ca8
  414bca:	int    0xe9
  414bcc:	cmc    
  414bcd:	repnz lods al,BYTE PTR ds:[esi]
  414bcf:	stos   DWORD PTR es:[edi],eax
  414bd0:	mov    al,ds:0x3d91fa0e
  414bd5:	stos   DWORD PTR es:[edi],eax
  414bd6:	push   edx
  414bd7:	pusha  
  414bd8:	fwait
  414bd9:	aam    0x2b
  414bdb:	mov    ?,WORD PTR ds:0xd487e72
  414be1:	retf   0x8f66
  414be4:	sub    ebp,edi
  414be6:	fucomip st,st(4)
  414be8:	sahf   
  414be9:	and    al,0x85
  414beb:	push   0x15
  414bed:	cli    
  414bee:	xor    al,0x1e
  414bf0:	add    DWORD PTR [eax-0x5],0xffffffac
  414bf4:	pop    edi
  414bf5:	int    0xf0
  414bf7:	mov    ecx,0xef57aa0e
  414bfc:	adc    edx,DWORD PTR [edx+0x47b01f7d]
  414c02:	and    edi,DWORD PTR [eax+0x58]
  414c05:	(bad)  
  414c06:	pop    ss
  414c07:	or     esi,edi
  414c09:	stos   BYTE PTR es:[edi],al
  414c0a:	jne    0x414c71
  414c0c:	daa    
  414c0d:	sub    DWORD PTR [esi+0x49],eax
  414c10:	and    al,0x56
  414c12:	cmp    al,0x2a
  414c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c16:	ins    BYTE PTR es:[edi],dx
  414c17:	xchg   esi,eax
  414c18:	shr    BYTE PTR [eax+0x25],cl
  414c1b:	imul   esi,DWORD PTR [eax+0x646c6401],0xfffffffb
  414c22:	test   ebx,ecx
  414c24:	push   ebp
  414c25:	pop    esi
  414c26:	cwde   
  414c27:	inc    edi
  414c28:	bound  esp,QWORD PTR cs:[ebx+eax*4]
  414c2c:	jle    0x414c57
  414c2e:	xchg   ebx,eax
  414c2f:	push   0xd943fae7
  414c34:	add    edi,DWORD PTR ds:0x4ca02e6b
  414c3a:	aam    0xde
  414c3c:	ds jo  0x414c1d
  414c3f:	mov    fs,WORD PTR [edi-0x16fa9e3f]
  414c45:	jmp    0xac8859b3
  414c4a:	cdq    
  414c4b:	inc    ebp
  414c4c:	ja     0x414cbf
  414c4e:	cmp    ecx,DWORD PTR [esi]
  414c50:	mov    edx,ebp
  414c52:	cmp    eax,DWORD PTR [edi+0x4ef7aaee]
  414c58:	call   FWORD PTR [ecx+0x5e]
  414c5b:	dec    ebx
  414c5c:	lods   eax,DWORD PTR ds:[esi]
  414c5d:	sub    al,0xc7
  414c5f:	inc    esi
  414c60:	mov    ebp,0x5f8d9930
  414c66:	xor    al,0xd0
  414c68:	scas   eax,DWORD PTR es:[edi]
  414c69:	jge    0x414c6d
  414c6b:	mov    DWORD PTR [eax-0x2d731ab6],ebp
  414c71:	out    dx,al
  414c72:	repnz ins BYTE PTR es:[edi],dx
  414c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c75:	dec    edi
  414c76:	dec    eax
  414c77:	mov    al,ds:0x50c48fa7
  414c7c:	outs   dx,BYTE PTR ds:[esi]
  414c7d:	cli    
  414c7e:	mov    BYTE PTR [edx-0x4febaec6],0x2f
  414c85:	push   esp
  414c86:	sub    DWORD PTR [edx-0x24a282fb],eax
  414c8c:	dec    eax
  414c8d:	js     0x414cda
  414c8f:	push   esp
  414c90:	ret    
  414c91:	push   ebp
  414c92:	pushf  
  414c93:	int3   
  414c94:	pop    ss
  414c95:	push   ds
  414c96:	xlat   BYTE PTR ds:[ebx]
  414c97:	adc    ebp,DWORD PTR [esi]
  414c99:	(bad)  
  414c9a:	fimul  DWORD PTR [edi+0x4e]
  414c9d:	push   edi
  414c9e:	jmp    0xa4ce:0xb12b9982
  414ca5:	mov    al,ds:0xfd223455
  414caa:	jl     0x414cda
  414cac:	mov    dl,0xf7
  414cae:	jno    0x414ccd
  414cb0:	xchg   esp,edx
  414cb2:	lock inc ebp
  414cb4:	sbb    dl,0xae
  414cb7:	jae    0x414c6c
  414cb9:	into   
  414cba:	add    esi,ebx
  414cbc:	lock test eax,0x7c5a3760
  414cc2:	sub    ebp,DWORD PTR cs:[ebx+0x6dfb4274]
  414cc9:	cmp    eax,0xab749608
  414cce:	mov    ds:0x48f3d48c,eax
  414cd3:	sbb    ecx,eax
  414cd5:	lods   al,BYTE PTR ds:[esi]
  414cd6:	adc    DWORD PTR [esi+0x376e92fe],esp
  414cdc:	xchg   esp,eax
  414cdd:	inc    esp
  414cde:	or     ecx,DWORD PTR ds:0x205b7258
  414ce4:	out    dx,eax
  414ce5:	pop    ecx
  414ce6:	sahf   
  414ce7:	xchg   edx,eax
  414ce8:	pusha  
  414ce9:	pop    esp
  414cea:	sub    BYTE PTR [esi],bh
  414cec:	ins    BYTE PTR es:[edi],dx
  414ced:	pop    edx
  414cee:	push   ebp
  414cef:	mov    WORD PTR [edx],ds
  414cf1:	sbb    al,0x65
  414cf3:	and    BYTE PTR [edx],ah
  414cf5:	pop    es
  414cf6:	pop    ds
  414cf7:	mov    ecx,DWORD PTR [edx-0x30546c71]
  414cfd:	xchg   edx,eax
  414cfe:	lahf   
  414cff:	sub    esi,DWORD PTR [ecx-0x36]
  414d02:	xchg   esp,eax
  414d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d04:	or     DWORD PTR [eax],ebp
  414d06:	cdq    
  414d07:	add    eax,0x7deeaf8f
  414d0c:	mov    ah,0xc9
  414d0e:	mov    bh,0x42
  414d10:	cdq    
  414d11:	xchg   esi,eax
  414d12:	(bad)  [esi+0x21c5b4ca]
  414d18:	adc    cl,BYTE PTR [ecx+0x36]
  414d1b:	call   0x5c104d2c
  414d20:	shl    BYTE PTR [eax],0x4b
  414d23:	pop    eax
  414d24:	call   0x8bef7e76
  414d29:	inc    ebx
  414d2b:	popa   
  414d2c:	bnd jmp 0x414d1c
  414d2f:	pop    edx
  414d30:	fadd   DWORD PTR [edx-0x3d]
  414d33:	inc    ebx
  414d34:	push   ebp
  414d35:	pmaxsw mm7,QWORD PTR [edi+0x61]
  414d39:	jmp    0x390d4058
  414d3e:	pop    es
  414d3f:	popa   
  414d40:	into   
  414d41:	xor    cl,bl
  414d43:	jo     0x414d9c
  414d45:	aam    0xea
  414d47:	and    BYTE PTR [ecx+0xc],0x8d
  414d4b:	aad    0xa0
  414d4d:	and    DWORD PTR ds:0x314369b5,ecx
  414d53:	and    esi,DWORD PTR [edi+0x447bc398]
  414d59:	xlat   BYTE PTR ds:[ebx]
  414d5a:	pop    esi
  414d5b:	sub    DWORD PTR ss:[eax-0x36],eax
  414d5f:	call   0xbeb3:0x45d4538f
  414d66:	mov    DWORD PTR [edi-0x4b],ebx
  414d69:	mov    al,0x13
  414d6b:	mov    esi,0x4b62deb
  414d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d71:	aas    
  414d72:	jbe    0x414d7c
  414d74:	xchg   edi,eax
  414d75:	pushf  
  414d76:	sub    BYTE PTR [ebx+0x2dcff571],bl
  414d7c:	and    dh,BYTE PTR [edi-0x1b]
  414d7f:	cmp    eax,0xcb8dc5c0
  414d84:	mov    ecx,?
  414d86:	repz repnz dec esp
  414d89:	(bad)  
  414d8b:	repnz sahf 
  414d8d:	mov    bh,0xfb
  414d8f:	rcl    BYTE PTR [ebp+0x1513cbd3],0x97
  414d96:	test   al,0xd4
  414d98:	loope  0x414d44
  414d9a:	pop    es
  414d9b:	jmp    0xa5d7:0x826e630b
  414da2:	push   ds
  414da3:	in     eax,0x34
  414da5:	mov    edx,0x1c4b36ee
  414daa:	sub    eax,ebx
  414dac:	mov    ecx,0x8c680186
  414db1:	mov    eax,ds:0x15c7b47d
  414db6:	jmp    0x414e1c
  414db8:	ffree  st(7)
  414dba:	xchg   ebp,eax
  414dbb:	scas   al,BYTE PTR es:[edi]
  414dbc:	(bad)  
  414dbd:	cmp    esi,DWORD PTR ss:[esi]
  414dc0:	xchg   edi,eax
  414dc1:	out    0xfb,al
  414dc3:	ss sbb al,0x91
  414dc6:	sahf   
  414dc7:	sub    eax,0x9eefc95a
  414dcc:	outs   dx,DWORD PTR ds:[esi]
  414dcd:	clc    
  414dce:	xchg   edx,eax
  414dcf:	sahf   
  414dd0:	enter  0x172,0xf7
  414dd4:	jp     0x414d79
  414dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dd7:	in     al,dx
  414dd8:	dec    ecx
  414dd9:	mov    bl,0x9f
  414ddb:	ja     0x414d5e
  414ddd:	jns    0x414d8e
  414ddf:	push   0xffffff8d
  414de1:	adc    al,0x31
  414de3:	bound  ecx,QWORD PTR [esi-0x4c07584c]
  414de9:	in     al,dx
  414dea:	in     eax,0x97
  414dec:	push   0x9e0f3acb
  414df1:	ja     0x414e41
  414df3:	sti    
  414df4:	popa   
  414df5:	inc    ecx
  414df6:	adc    al,0x95
  414df8:	xchg   BYTE PTR [eax+ecx*4+0x40f02dc2],dl
  414dff:	sbb    al,0x77
  414e01:	data16 mov dl,0xd5
  414e04:	nop
  414e05:	cmc    
  414e06:	jo     0x414de6
  414e08:	repnz test ah,bl
  414e0b:	sub    BYTE PTR [esi+eiz*2-0x11],ch
  414e0f:	cmc    
  414e10:	icebp  
  414e11:	cmp    eax,0x51f149d8
  414e16:	xor    BYTE PTR [ebp-0x2af3a1f4],bl
  414e1c:	lock push esi
  414e1e:	sub    BYTE PTR [esi-0x62],cl
  414e21:	icebp  
  414e22:	inc    esi
  414e23:	xchg   ecx,eax
  414e24:	dec    edi
  414e25:	mov    ah,0x7d
  414e27:	sbb    eax,0x339e9e2f
  414e2c:	mov    eax,ds:0xfab1541c
  414e31:	popf   
  414e32:	cwde   
  414e33:	nop
  414e34:	imul   BYTE PTR [esi]
  414e36:	xchg   esi,eax
  414e37:	pushf  
  414e38:	xchg   DWORD PTR [edi-0x4097724b],edx
  414e3e:	sub    BYTE PTR [edx+0x35],ch
  414e41:	pop    esp
  414e42:	add    esi,DWORD PTR [edx+0x21]
  414e45:	cld    
  414e46:	cmp    dh,BYTE PTR [edi]
  414e48:	cmp    edi,DWORD PTR [eax+0x7067c157]
  414e4e:	scas   eax,DWORD PTR es:[edi]
  414e4f:	les    ecx,FWORD PTR [esi-0x55]
  414e52:	mov    ebx,0x4d6147f5
  414e57:	js     0x414e47
  414e59:	inc    esp
  414e5a:	pop    ds
  414e5b:	dec    edi
  414e5c:	mov    ds:0xca728424,al
  414e61:	fadd   QWORD PTR [eax]
  414e63:	sahf   
  414e64:	(bad)  
  414e65:	and    DWORD PTR [ebx],ebx
  414e67:	shl    BYTE PTR [eax],cl
  414e69:	into   
  414e6a:	inc    esi
  414e6b:	mov    dh,0x98
  414e6d:	push   eax
  414e6e:	pop    ebp
  414e6f:	push   ds
  414e70:	sbb    edx,DWORD PTR [edx+esi*4-0x67c61dc4]
  414e77:	mov    bh,BYTE PTR [ecx+edi*1-0x6365d8e4]
  414e7e:	loopne 0x414ebe
  414e80:	retf   0xad23
  414e83:	lock (bad) 
  414e85:	xchg   esi,eax
  414e86:	push   ecx
  414e87:	xchg   ebx,eax
  414e88:	or     ebp,DWORD PTR [edi+0xa]
  414e8b:	and    eax,0x46198daa
  414e90:	lds    ecx,FWORD PTR [edi]
  414e92:	and    dl,BYTE PTR [ebp-0x6735f664]
  414e98:	push   0xffffffed
  414e9a:	inc    edx
  414e9b:	mul    DWORD PTR [ebx-0x3c]
  414e9e:	data16 lock rcr BYTE PTR [edx*1-0x41939c1c],0x8f
  414ea8:	mov    dl,0xc
  414eaa:	pop    esp
  414eab:	in     eax,dx
  414eac:	or     al,0x15
  414eae:	and    al,cl
  414eb0:	mov    ebp,0x992f1e11
  414eb5:	jo     0x414e6b
  414eb7:	scas   al,BYTE PTR es:[edi]
  414eb8:	in     al,0xf6
  414eba:	xchg   esp,eax
  414ebb:	shl    dl,1
  414ebd:	mov    esp,DWORD PTR [ebp+0x2354a3f2]
  414ec3:	xor    BYTE PTR [esp+esi*8],al
  414ec6:	add    ah,ch
  414ec8:	sub    DWORD PTR [ebp+eiz*4-0x6daffcc0],0x43
  414ed0:	mov    DWORD PTR [esi],0x3482a671
  414ed6:	in     eax,0x9f
  414ed8:	iret   
  414ed9:	cld    
  414eda:	(bad)  
  414edb:	cmp    eax,0x5bb2ff7a
  414ee0:	scas   eax,DWORD PTR es:[edi]
  414ee1:	xor    eax,0x79b084f2
  414ee6:	adc    ebx,DWORD PTR [ebx-0x80]
  414ee9:	mov    ss,WORD PTR [ecx+0x1732a487]
  414eef:	push   edi
  414ef0:	hlt    
  414ef1:	mov    ds,WORD PTR [esi+edx*2+0x3b]
  414ef5:	pop    ebx
  414ef6:	sub    ebx,edi
  414ef8:	mov    esp,0xa8db5e5e
  414efd:	sub    bl,cl
  414eff:	enter  0x39a0,0x54
  414f03:	repnz adc al,0xbd
  414f06:	jecxz  0x414f21
  414f08:	arpl   WORD PTR [ecx-0x18ab2173],ax
  414f0e:	pop    edx
  414f0f:	mov    bl,0x98
  414f11:	repnz pusha 
  414f13:	inc    eax
  414f14:	icebp  
  414f15:	clc    
  414f16:	push   esp
  414f17:	mov    BYTE PTR [ebx-0x9],ch
  414f1a:	or     bl,BYTE PTR [eax+0x49]
  414f1d:	or     eax,0xdb4e73fd
  414f22:	mov    al,ds:0xed6b4f23
  414f27:	push   cs
  414f28:	fcomp  QWORD PTR [ebx]
  414f2a:	or     ah,cl
  414f2c:	push   0x489b32c1
  414f31:	mov    DWORD PTR [edx],esp
  414f33:	les    ebp,FWORD PTR [edx]
  414f35:	pop    eax
  414f36:	jmp    0xefb9391e
  414f3b:	les    edx,FWORD PTR [edi-0x3420e204]
  414f41:	dec    ebx
  414f42:	mov    cs,WORD PTR [eax+0x38d91735]
  414f48:	mov    al,ds:0x56833228
  414f4d:	gs pop ss
  414f4f:	das    
  414f50:	push   eax
  414f51:	lahf   
  414f52:	inc    edx
  414f53:	ins    DWORD PTR es:[edi],dx
  414f54:	xchg   DWORD PTR [edi+esi*8],ebx
  414f57:	jp     0x414fc4
  414f59:	dec    ebp
  414f5a:	xchg   bh,bh
  414f5c:	cli    
  414f5d:	stos   DWORD PTR es:[edi],eax
  414f5e:	ret    
  414f5f:	adc    BYTE PTR [ecx],dl
  414f61:	pop    ebx
  414f62:	enter  0x7f8d,0xef
  414f66:	fchs   
  414f68:	jno    0x414fdc
  414f6a:	dec    esp
  414f6b:	push   es
  414f6c:	into   
  414f6d:	mov    WORD PTR ds:0xdadecb44,ds
  414f73:	fdivr  QWORD PTR [eax-0x5ff0676f]
  414f79:	daa    
  414f7a:	sub    ebp,DWORD PTR [edx+eiz*2]
  414f7d:	aaa    
  414f7e:	scas   eax,DWORD PTR es:[edi]
  414f7f:	popa   
  414f80:	jl     0x414f51
  414f82:	cwde   
  414f83:	mov    cl,0xa9
  414f85:	xchg   ecx,eax
  414f86:	adc    bh,0x54
  414f89:	sub    al,0xe2
  414f8b:	out    dx,eax
  414f8c:	dec    ebx
  414f8d:	mov    dh,0x19
  414f8f:	retf   0xe473
  414f92:	lea    esi,[edx-0x39]
  414f95:	test   BYTE PTR [ebp+0x5],al
  414f98:	call   0x2387:0x299b213a
  414f9f:	retf   0x5005
  414fa2:	fsub   QWORD PTR [esi+ebp*8-0x52507a0d]
  414fa9:	push   esp
  414faa:	dec    edx
  414fab:	sbb    al,0xf
  414fad:	sbb    al,ah
  414faf:	sbb    dh,BYTE PTR [eax+ebx*2-0x1422337c]
  414fb6:	mov    edx,0xdd57e666
  414fbb:	sbb    al,0x5d
  414fbd:	or     esp,DWORD PTR [esi-0x7857d7a0]
  414fc3:	jnp    0x414fe8
  414fc5:	sub    ch,ah
  414fc7:	sbb    eax,0x1f4d4003
  414fcc:	shl    BYTE PTR [esi-0x479c5044],0x5
  414fd3:	cmp    ecx,DWORD PTR [eax]
  414fd5:	jnp    0x414f62
  414fd7:	cmc    
  414fd8:	test   bh,ah
  414fda:	pop    esi
  414fdb:	dec    esp
  414fdc:	mov    ds:0x305d1fc1,eax
  414fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe2:	in     eax,dx
  414fe3:	push   es
  414fe4:	adc    BYTE PTR [ebp+0x2],0x8b
  414fe8:	inc    ebx
  414fe9:	add    BYTE PTR [esi-0x31],dl
  414fec:	mov    cl,0xd4
  414fee:	ret    
  414fef:	or     eax,0x39325ed5
  414ff4:	add    dh,dh
  414ff6:	jae    0x415063
  414ff8:	ins    BYTE PTR es:[edi],dx
  414ff9:	push   ebx
  414ffa:	mov    esi,0xe407c452
  414fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415000:	sbb    eax,0x206904de
  415005:	fistp  DWORD PTR [eax-0x5131a21f]
  41500b:	in     al,0x8a
  41500d:	loop   0x414f90
  41500f:	out    dx,al
  415010:	es xchg edi,eax
  415012:	fild   QWORD PTR [ebx-0x2d3e360c]
  415018:	(bad)  
  415019:	and    esi,DWORD PTR [ecx+0x290e7ead]
  41501f:	pushf  
  415020:	or     bh,BYTE PTR [ecx-0x38066ac2]
  415026:	sub    ebx,ebx
  415028:	pop    esi
  415029:	xlat   BYTE PTR ds:[ebx]
  41502a:	and    BYTE PTR [ebp-0x2d55d80b],bh
  415030:	stos   DWORD PTR es:[edi],eax
  415031:	je     0x415099
  415033:	sub    eax,0xd98c47aa
  415038:	or     DWORD PTR [edx+0x277c9d56],eax
  41503e:	lock pushf 
  415040:	mov    bl,0x99
  415042:	mov    dh,0xb3
  415044:	fwait
  415045:	jg     0x4150c1
  415047:	cli    
  415048:	jecxz  0x414ff8
  41504a:	les    eax,FWORD PTR [ebp-0x5e]
  41504d:	add    eax,0x3fa61648
  415052:	mov    al,ds:0x2b80943d
  415057:	ins    DWORD PTR es:[edi],dx
  415058:	dec    eax
  415059:	sbb    bl,BYTE PTR [ecx-0x16]
  41505c:	pop    ecx
  41505d:	sub    eax,0x17fd7f42
  415062:	fs push eax
  415064:	push   ss
  415065:	mov    esi,0x28475591
  41506a:	into   
  41506b:	jmp    0xdb91:0xb22a4d46
  415072:	cmp    ch,cl
  415074:	rcr    BYTE PTR [eax-0x35],1
  415077:	and    al,0xb6
  415079:	fabs   
  41507b:	es call 0x669f:0xed5cbe29
  415083:	es pusha 
  415085:	add    esi,edx
  415087:	sahf   
  415088:	(bad)  
  415089:	int    0x78
  41508b:	into   
  41508c:	xchg   DWORD PTR [eax+0x3f],esp
  41508f:	sar    BYTE PTR [edx],cl
  415091:	lock adc al,0x22
  415094:	inc    eax
  415095:	xchg   esi,eax
  415096:	or     DWORD PTR [esi-0x7],ecx
  415099:	mov    eax,0x8f3747cd
  41509e:	retf   0x5c55
  4150a1:	repnz pop ds
  4150a3:	scas   al,BYTE PTR es:[edi]
  4150a4:	(bad)  
  4150a5:	fisub  DWORD PTR [ecx-0x77b50798]
  4150ab:	inc    esi
  4150ac:	dec    edi
  4150ad:	jl     0x415052
  4150af:	jne    0x415109
  4150b1:	loop   0x4150d8
  4150b3:	pop    ecx
  4150b4:	mov    edi,0xd3e9ae61
  4150b9:	xchg   esp,eax
  4150ba:	fnstenv [edx-0x33c582f8]
  4150c0:	add    eax,0x15cf8124
  4150c5:	jnp    0x4150aa
  4150c7:	sbb    eax,0xa7289ac6
  4150cc:	jnp    0x415140
  4150ce:	test   al,0x87
  4150d0:	(bad)  
  4150d1:	sub    DWORD PTR [ebx+0x356d85c6],esi
  4150d7:	dec    edi
  4150d8:	add    al,0x2b
  4150da:	push   es
  4150db:	loopne 0x4150a8
  4150dd:	loope  0x415090
  4150df:	pop    ss
  4150e0:	sahf   
  4150e1:	xor    al,0x89
  4150e3:	sbb    BYTE PTR [esi+ebx*1+0x10],0xec
  4150e8:	int3   
  4150e9:	std    
  4150ea:	cmp    BYTE PTR [edx],ch
  4150ec:	mov    bl,0xa7
  4150ee:	ret    0x8244
  4150f1:	test   al,dl
  4150f3:	sbb    al,0x74
  4150f5:	mov    dh,0x7f
  4150f7:	mov    bl,0x15
  4150f9:	(bad)  
  4150fa:	push   esp
  4150fb:	push   ebx
  4150fc:	dec    edi
  4150fd:	dec    ecx
  4150fe:	or     ecx,ecx
  415100:	repnz and BYTE PTR [ecx+0x4f6584d4],al
  415107:	test   eax,0xeaf23b49
  41510c:	rol    dl,cl
  41510e:	sbb    ecx,DWORD PTR [edi+ebp*4]
  415111:	mov    esp,ebp
  415113:	or     BYTE PTR ds:0x98aaee0b,0x58
  41511a:	stos   BYTE PTR es:[edi],al
  41511b:	pop    es
  41511c:	push   esp
  41511d:	test   dh,bl
  41511f:	imul   esp,DWORD PTR [edi],0x38
  415122:	bswap  edi
  415124:	mov    BYTE PTR [ecx-0x448f77f0],dl
  41512a:	add    eax,0xe7a38801
  41512f:	push   esi
  415130:	(bad)  
  415132:	sub    ebp,DWORD PTR [edi-0x73]
  415135:	mov    esi,0x7b82c71
  41513a:	dec    ebp
  41513b:	ror    DWORD PTR [eax-0x6e625ea5],cl
  415141:	adc    esi,ecx
  415143:	sbb    edx,edi
  415145:	dec    edx
  415146:	aam    0x67
  415148:	loop   0x4151c1
  41514a:	mov    dl,0x67
  41514c:	cdq    
  41514d:	sti    
  41514e:	into   
  41514f:	push   0xffffffbf
  415151:	xor    al,0xb7
  415153:	div    bl
  415155:	pusha  
  415156:	mov    esp,0x7c482334
  41515b:	dec    ebx
  41515c:	in     al,dx
  41515d:	mov    DWORD PTR [esi-0x230e81b7],esp
  415163:	add    bh,BYTE PTR [edi+0x50]
  415166:	dec    esi
  415167:	(bad)  
  415168:	ror    BYTE PTR [eax-0x7d],cl
  41516b:	shl    DWORD PTR [eax-0x479ee3de],1
  415171:	bound  esp,QWORD PTR [ebx]
  415173:	loopne 0x415199
  415175:	stc    
  415176:	and    bl,BYTE PTR [esi-0x3b]
  415179:	xor    al,0x17
  41517b:	je     0x4151d9
  41517d:	push   ds
  41517e:	xor    BYTE PTR [ebp+eax*8+0x6cf7f52c],bl
  415185:	mov    ds:0x2e5957f,eax
  41518a:	shl    DWORD PTR [ecx-0x262b10cc],0xea
  415191:	loopne 0x4151ab
  415193:	repz sbb eax,edx
  415196:	ja     0x415198
  415198:	sbb    al,0xd1
  41519a:	xchg   esp,eax
  41519b:	jo     0x415139
  41519d:	xchg   edi,eax
  41519e:	mov    eax,0xade1166b
  4151a3:	loop   0x4151ab
  4151a5:	nop
  4151a6:	retf   0x11b4
  4151a9:	cmp    BYTE PTR [edx+0x2a],bl
  4151ac:	ja     0x415134
  4151ae:	lods   eax,DWORD PTR ds:[esi]
  4151af:	aam    0x8c
  4151b1:	and    al,0x3d
  4151b3:	sbb    ah,dl
  4151b5:	cmp    BYTE PTR [ecx],bl
  4151b7:	std    
  4151b8:	xchg   esp,eax
  4151b9:	or     edi,DWORD PTR [ebp+ecx*8+0x4aed8b23]
  4151c0:	add    ah,BYTE PTR [eax]
  4151c2:	push   0xffffffa4
  4151c4:	loopne 0x4151be
  4151c6:	adc    DWORD PTR [esi+ebx*1+0x325413e4],ecx
  4151cd:	inc    edx
  4151ce:	xchg   esp,eax
  4151cf:	xchg   edx,eax
  4151d0:	sbb    eax,0x6d1a0d91
  4151d5:	jb     0x4151dc
  4151d7:	jg     0x415163
  4151d9:	popa   
  4151da:	daa    
  4151db:	push   ebx
  4151dc:	or     ecx,DWORD PTR [eax+ebx*2]
  4151df:	mov    esi,0xd6d863d8
  4151e4:	add    al,0xa9
  4151e6:	sub    eax,0x9f3fbb
  4151eb:	call   0xf56a:0xdcf5f3ae
  4151f2:	addr16 mov eax,0xb1841c6a
  4151f8:	icebp  
  4151f9:	pop    ss
  4151fa:	mov    ah,0x4
  4151fc:	inc    ebp
  4151fd:	outs   dx,BYTE PTR ds:[esi]
  4151fe:	jg     0x4151f7
  415200:	sbb    sp,WORD PTR [ebx-0x73]
  415204:	push   ebp
  415205:	dec    esp
  415206:	(bad)  
  415207:	jne    0x4151c6
  415209:	inc    ecx
  41520a:	jecxz  0x415239
  41520c:	or     DWORD PTR [ecx-0x1af99666],eax
  415212:	sub    cl,bl
  415214:	ins    DWORD PTR es:[edi],dx
  415215:	imul   esp,DWORD PTR [esi],0x62444310
  41521b:	add    DWORD PTR [esi],ecx
  41521d:	dec    ecx
  41521e:	or     DWORD PTR [edi],ebx
  415220:	cld    
  415221:	daa    
  415222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415223:	jns    0x415298
  415225:	push   ds
  415226:	in     al,0x52
  415228:	adc    eax,0x5fc8add0
  41522d:	mov    esi,0x863d6db9
  415232:	fld    DWORD PTR [esi+0x68]
  415235:	clc    
  415236:	mov    ecx,ebx
  415238:	ret    0xb35a
  41523b:	mov    dh,0x4a
  41523d:	add    DWORD PTR [esp+edi*1+0x2b],0x70
  415242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415243:	scas   eax,DWORD PTR es:[edi]
  415244:	adc    al,BYTE PTR [edx+edx*4]
  415247:	out    dx,al
  415248:	xor    eax,0xfccbc9e4
  41524d:	(bad)  
  41524e:	imul   eax,DWORD PTR [edi],0x6d4a55b7
  415254:	sub    BYTE PTR ds:0xb8b509c7,ah
  41525a:	cs int 0xe7
  41525d:	push   ss
  41525e:	cmp    BYTE PTR [ebp+0x2fbea255],bh
  415264:	out    dx,al
  415265:	sbb    al,BYTE PTR [ecx]
  415267:	dec    esp
  415268:	mov    bl,0xc5
  41526a:	std    
  41526b:	lods   eax,DWORD PTR ds:[esi]
  41526c:	adc    bh,BYTE PTR [edx-0x40]
  41526f:	and    bh,BYTE PTR [ebp-0x53427bf6]
  415275:	push   esi
  415276:	je     0x415293
  415278:	std    
  415279:	sub    DWORD PTR [edi],ebp
  41527b:	cmp    BYTE PTR [ebp+esi*2+0x79],al
  41527f:	xchg   DWORD PTR [edx-0x5],ebx
  415282:	sbb    BYTE PTR [esi+esi*8+0x3edbcee],dh
  415289:	ret    
  41528a:	stc    
  41528b:	fsubr  st,st(5)
  41528d:	popf   
  41528e:	cdq    
  41528f:	xor    eax,0x36123646
  415294:	push   DWORD PTR [ebx+edi*4-0x5b2b33c4]
  41529b:	lock ficom WORD PTR [esi+0x5c35d017]
  4152a2:	arpl   dx,dx
  4152a4:	cmp    eax,0x45b0455c
  4152a9:	push   cs
  4152aa:	jns    0x41526e
  4152ac:	sbb    eax,0xa2d896d9
  4152b1:	jmp    0xa2540036
  4152b6:	mov    ebp,0xa7474947
  4152bb:	pop    eax
  4152bc:	jne    0x4152df
  4152be:	xchg   edx,eax
  4152bf:	jmp    0x4bf50d25
  4152c4:	push   ecx
  4152c5:	sub    edx,DWORD PTR [esi+0x48eb3c10]
  4152cb:	dec    edi
  4152cc:	icebp  
  4152cd:	int3   
  4152ce:	(bad)  
  4152cf:	jl     0x41525c
  4152d1:	inc    ebx
  4152d2:	sahf   
  4152d3:	cmp    ch,al
  4152d5:	mov    ds:0xe5f82aa5,eax
  4152da:	mov    esp,0x770dbd12
  4152df:	shl    DWORD PTR [eiz*2-0x889c110],0x7
  4152e7:	inc    ecx
  4152e8:	or     al,0x4
  4152ea:	(bad)  
  4152eb:	dec    ecx
  4152ec:	mov    al,ds:0xf962ca4e
  4152f1:	dec    esi
  4152f2:	pop    esi
  4152f3:	and    ebp,esp
  4152f5:	jg     0x4152be
  4152f7:	ins    BYTE PTR es:[edi],dx
  4152f8:	sahf   
  4152f9:	mov    bh,0x20
  4152fb:	xchg   esi,eax
  4152fc:	adc    esi,DWORD PTR ds:0x668f0925
  415302:	in     al,dx
  415303:	dec    esp
  415304:	jb     0x4152e0
  415306:	sbb    al,0xcb
  415308:	adc    esp,DWORD PTR ds:0x71c1cefe
  41530e:	aaa    
  41530f:	jno    0x4152e3
  415311:	mov    al,0x71
  415313:	mov    eax,0x789b3866
  415318:	jl     0x41533f
  41531a:	sub    al,0x58
  41531c:	repz pop es
  41531e:	rol    bl,0xee
  415321:	sbb    DWORD PTR [edi+0x25e95429],esp
  415327:	lds    esi,FWORD PTR [edi-0x2ab76ede]
  41532d:	addr16 iret 
  41532f:	jle    0x415388
  415331:	mov    esp,ecx
  415333:	xor    eax,0x41c5abaf
  415338:	aaa    
  415339:	pop    edi
  41533a:	popf   
  41533b:	lahf   
  41533c:	(bad)  
  41533d:	mov    edi,0x64a83bec
  415342:	mov    di,WORD PTR [ebp+0x5f7f7a2f]
  415349:	mov    ebx,0xcd145eb9
  41534e:	out    0x33,eax
  415350:	js     0x415371
  415352:	ss ret 
  415354:	cmp    BYTE PTR [ecx-0xaa40bfe],0x7f
  41535b:	addr16 cmp ah,bl
  41535e:	sub    DWORD PTR [esi],edx
  415360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415361:	mov    es,edx
  415363:	mov    ecx,esp
  415365:	ins    DWORD PTR es:[edi],dx
  415366:	jbe    0x41530e
  415368:	adc    esi,DWORD PTR [esi-0x33812222]
  41536e:	inc    esp
  41536f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415370:	es mov ch,0x9e
  415373:	into   
  415374:	data16 sbb ah,BYTE PTR [esi+0x7]
  415378:	in     eax,0x91
  41537a:	repz cld 
  41537c:	in     eax,0xf8
  41537e:	stos   BYTE PTR es:[edi],al
  41537f:	xor    edi,DWORD PTR ds:0x1b19fc49
  415385:	adc    al,0x9e
  415387:	jb     0x415340
  415389:	ss mov ebp,0xadaa8574
  41538f:	in     eax,0x88
  415391:	int    0xc2
  415393:	clc    
  415394:	adc    eax,0xd169ee9
  415399:	imul   edx,DWORD PTR [ecx+edx*1+0x3b],0x13
  41539e:	xor    edi,DWORD PTR [ecx+edx*8+0x2cb96f17]
  4153a5:	cdq    
  4153a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a7:	pop    ecx
  4153a8:	jecxz  0x41533c
  4153aa:	leave  
  4153ab:	xor    DWORD PTR [ebx-0x7f],0xcb3fd10d
  4153b2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4153b4:	mov    ebx,0xf2a1d089
  4153b9:	in     al,dx
  4153ba:	test   BYTE PTR [ecx+0x5e0b686d],0xc
  4153c1:	cmp    esi,DWORD PTR [ebx+ecx*1]
  4153c4:	cmp    eax,0xa1671e82
  4153c9:	push   0xffffffbb
  4153cb:	loope  0x415402
  4153cd:	sub    ah,cl
  4153cf:	inc    ecx
  4153d0:	dec    edi
  4153d1:	sbb    eax,0x2631a772
  4153d6:	adc    eax,0xfcb03904
  4153db:	lods   al,BYTE PTR ds:[esi]
  4153dc:	gs mov esp,0xcf097339
  4153e2:	and    BYTE PTR [edi-0x356fdf84],bh
  4153e8:	lea    eax,ds:0xd98d2538
  4153ee:	ins    BYTE PTR es:[edi],dx
  4153ef:	scas   al,BYTE PTR es:[edi]
  4153f0:	jl     0x41545b
  4153f2:	jb     0x415454
  4153f4:	add    esi,ecx
  4153f6:	pop    ds
  4153f7:	mov    BYTE PTR [esi+0x44],ah
  4153fa:	dec    esp
  4153fb:	jae    0x4153fe
  4153fd:	jae    0x415440
  4153ff:	dec    edi
  415400:	mov    eax,0x2b41edda
  415405:	in     eax,dx
  415406:	xchg   ebp,eax
  415407:	bound  esp,QWORD PTR [ecx+0x4094c48]
  41540d:	adc    dh,dh
  41540f:	shl    DWORD PTR [edi],1
  415411:	and    bl,BYTE PTR [ebx+0x0]
  415414:	push   ebp
  415415:	lahf   
  415416:	inc    edi
  415417:	mov    cl,0x3
  415419:	lock les esp,FWORD PTR [esp+ebp*8]
  41541d:	test   DWORD PTR [ebp+0x4f],0x59095914
  415424:	daa    
  415425:	ins    DWORD PTR es:[edi],dx
  415426:	mov    esp,ebx
  415428:	inc    edi
  415429:	inc    edx
  41542a:	jp     0x41549b
  41542c:	iret   
  41542d:	int3   
  41542e:	outs   dx,DWORD PTR ds:[esi]
  41542f:	ret    
  415430:	push   edx
  415431:	(bad)  
  415432:	cmp    al,0x6d
  415434:	loope  0x415415
  415436:	and    DWORD PTR [eax-0x63e1b918],0x54b87472
  415440:	lods   eax,DWORD PTR ds:[esi]
  415441:	test   BYTE PTR [ecx],cl
  415443:	(bad)  
  415445:	cmp    eax,0xb730ed79
  41544a:	or     edx,DWORD PTR [edi-0x66]
  41544d:	push   eax
  41544e:	sub    al,BYTE PTR [edx]
  415450:	sbb    al,0x60
  415452:	sub    eax,0x196527dd
  415457:	or     BYTE PTR [eax+0x2c],ch
  41545a:	(bad)  
  41545b:	fimul  WORD PTR [ecx+0x73]
  41545e:	mov    edi,eax
  415460:	mov    BYTE PTR [ebp-0xb340498],dl
  415466:	adc    ebp,esp
  415468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415469:	test   edi,0xe77d022d
  41546f:	mov    al,0xd3
  415471:	xchg   esi,eax
  415472:	sbb    eax,0xf75a680b
  415477:	dec    esi
  415478:	cmp    al,0x3f
  41547a:	ret    
  41547b:	into   
  41547c:	add    esp,DWORD PTR [ebx+0x1915b366]
  415482:	xchg   esp,eax
  415483:	loopne 0x41544c
  415485:	cmp    al,0x20
  415487:	jmp    0x4154e1
  415489:	jle    0x415479
  41548b:	ins    BYTE PTR es:[edi],dx
  41548c:	xor    DWORD PTR [eiz*1-0xdfa100b],edi
  415493:	ror    ebp,cl
  415495:	xor    esi,DWORD PTR [ebx+eax*8]
  415498:	push   ss
  415499:	mov    DWORD PTR [ecx-0x4f],ebx
  41549c:	fdiv   DWORD PTR [esi-0x7d2d413e]
  4154a2:	enter  0x453a,0x44
  4154a6:	out    0x18,al
  4154a8:	push   ebp
  4154a9:	sbb    bh,BYTE PTR [edi+0x39]
  4154ac:	clc    
  4154ad:	mov    dl,0xf5
  4154af:	test   al,0xc1
  4154b1:	sti    
  4154b2:	sub    edi,DWORD PTR [ebp+eiz*4+0x43]
  4154b6:	or     al,0x7c
  4154b8:	mov    bh,0x2d
  4154ba:	mov    ds:0x9e64e1e7,al
  4154bf:	jnp    0x415517
  4154c1:	fcmovb st,st(3)
  4154c3:	call   0x740e:0xcbf58923
  4154ca:	jne    0x415478
  4154cc:	fs std 
  4154ce:	jge    0x41550c
  4154d0:	mov    dh,0x42
  4154d2:	call   0x5e5d2c21
  4154d7:	cmp    al,al
  4154d9:	xchg   ebx,eax
  4154da:	pop    es
  4154db:	or     eax,0x7b404fd1
  4154e0:	sub    BYTE PTR [eax-0x2bd005aa],0x34
  4154e7:	adc    BYTE PTR [eax-0x39cf68dc],0xb4
  4154ee:	mov    ah,0x94
  4154f0:	cmp    al,0x1
  4154f2:	jecxz  0x4154c3
  4154f4:	fimul  DWORD PTR ds:0xe953ac53
  4154fa:	mov    ds:0xe111e0d3,al
  4154ff:	cdq    
  415500:	adc    eax,0x4e9b8a23
  415505:	push   es
  415506:	gs inc edi
  415508:	and    esp,DWORD PTR [ebx-0x66d18fda]
  41550e:	fiadd  DWORD PTR [esp+edi*2-0x5794032a]
  415515:	gs mov al,0x1
  415518:	sbb    al,0x4
  41551a:	popa   
  41551b:	lods   al,BYTE PTR ds:[esi]
  41551c:	inc    edx
  41551d:	jge    0x415549
  41551f:	sbb    DWORD PTR ds:0x661027b5,ecx
  415525:	out    dx,eax
  415526:	push   ss
  415527:	idiv   bl
  415529:	inc    ecx
  41552a:	mov    esp,0xe652b8f1
  41552f:	lea    esi,[edi-0x24ab6ee]
  415535:	lds    ebx,FWORD PTR [ecx]
  415537:	in     eax,dx
  415538:	and    BYTE PTR [edi*2+0x44b4ab13],ah
  41553f:	or     eax,0xf53c859d
  415544:	push   esp
  415545:	adc    eax,DWORD PTR [eax+0x5b7762e1]
  41554b:	mov    ecx,0x2ee0639f
  415550:	push   cs
  415551:	push   0xffffffce
  415553:	xchg   edx,eax
  415554:	jl     0x4155a0
  415556:	xor    DWORD PTR [eax+0x58],edi
  415559:	(bad)  [eax]
  41555b:	stos   BYTE PTR es:[edi],al
  41555c:	mov    ch,BYTE PTR [edx+0x1edde083]
  415562:	push   ebx
  415563:	sbb    bl,BYTE PTR [edx+0x4e]
  415566:	mov    dl,0xb6
  415568:	jae    0x4155e0
  41556a:	cdq    
  41556b:	mov    eax,0xaccdfbbb
  415570:	or     ebx,DWORD PTR [esi-0x2156d4c8]
  415576:	popf   
  415577:	pop    esp
  415578:	adc    eax,0xd4404580
  41557d:	mov    ebx,0xac8637cf
  415582:	(bad)  
  415583:	jg     0x41551f
  415585:	sub    BYTE PTR [esi],dl
  415587:	mov    ebx,0xfa6bb73c
  41558c:	jns    0x415521
  41558e:	mov    ds:0xf6b82344,al
  415593:	shr    BYTE PTR [eax+0x4ae391f5],cl
  415599:	pop    eax
  41559a:	jmp    0x56409517
  41559f:	das    
  4155a0:	into   
  4155a1:	cmp    BYTE PTR [ebx+0x65],ah
  4155a4:	jge    0x41558b
  4155a6:	(bad)  
  4155a8:	push   edi
  4155a9:	popf   
  4155aa:	clc    
  4155ab:	pop    ebp
  4155ac:	loope  0x415614
  4155ae:	jmp    0x415610
  4155b0:	xor    edi,DWORD PTR [eax-0x68]
  4155b3:	mov    BYTE PTR [esi-0x571eb931],0x98
  4155ba:	pop    ebx
  4155bb:	jp     0x4155c1
  4155bd:	sahf   
  4155be:	mov    edx,0x4e23eb8b
  4155c3:	enter  0x5e3a,0x2d
  4155c7:	inc    ebp
  4155c8:	repz sub al,0x5a
  4155cb:	faddp  st(0),st
  4155cd:	(bad)  
  4155ce:	ficom  WORD PTR [ebp+edi*2-0x2]
  4155d2:	pop    edi
  4155d3:	neg    BYTE PTR [ecx-0x2f]
  4155d6:	je     0x415588
  4155d8:	div    DWORD PTR [eax+0x55]
  4155db:	leave  
  4155dc:	(bad)  
  4155dd:	cld    
  4155de:	imul   DWORD PTR [eax]
  4155e0:	jl     0x415642
  4155e2:	retf   
  4155e3:	(bad)  [ebx+0x56]
  4155e6:	jmp    0x4e59a2ed
  4155eb:	inc    eax
  4155ec:	or     bh,BYTE PTR [ecx+ebx*8+0x71]
  4155f0:	repnz xchg ebp,eax
  4155f2:	and    BYTE PTR [esi-0x2b],ch
  4155f5:	jle    0x41563f
  4155f7:	ss sti 
  4155f9:	mov    bh,dh
  4155fb:	call   0x907fe53a
  415600:	jo     0x415681
  415602:	mov    BYTE PTR ds:0x524f3a0,al
  415608:	ins    WORD PTR es:[edi],dx
  41560a:	inc    edi
  41560b:	dec    edx
  41560c:	ja     0x415617
  41560e:	(bad)  
  41560f:	loopne 0x41562c
  415611:	jnp    0x41559e
  415613:	daa    
  415614:	adc    dl,al
  415616:	inc    ebx
  415617:	idiv   BYTE PTR [ebx+edi*2-0x703cd089]
  41561e:	fidivr DWORD PTR [ebx+0x6a]
  415621:	das    
  415622:	or     eax,0xf8f8c12
  415627:	pop    ebx
  415628:	inc    eax
  415629:	shl    bh,cl
  41562b:	popa   
  41562c:	xchg   esp,eax
  41562d:	loopne 0x4155f1
  41562f:	and    DWORD PTR [edx-0x11afbd95],ebp
  415635:	adc    eax,0xfe572d02
  41563a:	mov    esi,0x141f72eb
  41563f:	xchg   esi,eax
  415640:	ds hlt 
  415642:	das    
  415643:	in     al,0x46
  415645:	xor    bl,BYTE PTR [ebx+0x2c]
  415648:	sub    esp,DWORD PTR [esi-0x1be495c5]
  41564e:	scas   al,BYTE PTR es:[edi]
  41564f:	pusha  
  415650:	xor    eax,0x3734d903
  415655:	pop    ebp
  415656:	jns    0x41566f
  415658:	test   DWORD PTR [edx-0x24],0xb518dbe2
  41565f:	xor    dl,al
  415661:	jmp    0x415641
  415663:	xor    DWORD PTR [eax+0x60],ebx
  415666:	fucomp st(0)
  415668:	f2xm1  
  41566a:	ja     0x41569a
  41566c:	mov    al,0xbc
  41566e:	jl     0x41569a
  415670:	mov    dl,BYTE PTR ds:0x5c9e2504
  415676:	mov    ds:0x5c81e0ac,al
  41567b:	out    dx,eax
  41567c:	adc    DWORD PTR [ecx-0x72acebe4],eax
  415682:	jae    0x415611
  415684:	mov    BYTE PTR [ebp+0x4ab44a7d],dh
  41568a:	das    
  41568b:	xor    al,0x3d
  41568d:	call   0x399e3eae
  415692:	pusha  
  415693:	or     esp,ecx
  415695:	jge    0x41562f
  415697:	push   ebp
  415698:	or     WORD PTR [esi-0x70],sp
  41569c:	dec    esi
  41569d:	std    
  41569e:	inc    edx
  41569f:	jmp    0xee23:0x881ec5e5
  4156a6:	xchg   esi,eax
  4156a7:	cli    
  4156a8:	xlat   BYTE PTR ds:[ebx]
  4156a9:	rcr    DWORD PTR [eax],cl
  4156ab:	push   edi
  4156ac:	mov    edi,ebx
  4156ae:	imul   edi,esp,0x141e8dc7
  4156b4:	jb     0x4156fb
  4156b6:	les    edx,FWORD PTR [esi+0x26]
  4156b9:	(bad)  
  4156bb:	xor    dh,BYTE PTR [ecx+0x1a114d56]
  4156c1:	repnz xchg edi,eax
  4156c3:	shl    BYTE PTR [eax-0x80],1
  4156c6:	loop   0x415664
  4156c8:	sahf   
  4156c9:	mov    esp,0xcf6322d3
  4156ce:	daa    
  4156cf:	add    edi,DWORD PTR [esi+0x69]
  4156d2:	add    edx,DWORD PTR [eax+0x4283ab09]
  4156d8:	fidiv  WORD PTR [edi]
  4156da:	jmp    0x380af976
  4156df:	fild   WORD PTR ds:0x9ab80cc6
  4156e5:	sahf   
  4156e6:	enter  0x5a5c,0xb9
  4156ea:	and    eax,ebp
  4156ec:	shl    DWORD PTR [edi+edi*8],1
  4156ef:	into   
  4156f0:	data16 mov ch,0x4b
  4156f3:	mov    bl,0x2c
  4156f5:	jmp    DWORD PTR [ebx+eax*2-0x39]
  4156f9:	lods   eax,DWORD PTR ds:[esi]
  4156fa:	mov    bh,0xe5
  4156fc:	add    BYTE PTR [ebx-0x4d242a82],dh
  415702:	sub    ebx,DWORD PTR [ebp-0x24]
  415705:	adc    BYTE PTR [ebp+0x162db3fc],bl
  41570b:	cmp    dh,BYTE PTR es:[esi+ebp*1-0x1d307d90]
  415713:	repz xchg esi,eax
  415715:	mov    esi,0xe9c6adc4
  41571a:	mov    ebx,0xb7f60a81
  41571f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415720:	lock fild QWORD PTR [ebx+0x6a6f873b]
  415727:	cmp    DWORD PTR [ebx-0x543883f0],esi
  41572d:	inc    edi
  41572e:	or     al,0xdd
  415730:	pop    edi
  415731:	jns    0x415784
  415733:	mul    DWORD PTR [ebx-0x2ae55bdf]
  415739:	and    BYTE PTR [ebx-0x59089082],dl
  41573f:	int    0x4c
  415741:	xchg   BYTE PTR [ebp+0x71a7ca36],dh
  415747:	adc    BYTE PTR [ebx-0x79],al
  41574a:	inc    edx
  41574b:	in     al,0x4e
  41574d:	lea    eax,[esi+ebp*8+0x5b]
  415751:	mov    ds:0x950646e4,eax
  415756:	jecxz  0x415700
  415758:	mov    dh,0xc7
  41575a:	mov    cx,?
  41575d:	inc    edx
  41575e:	xchg   edx,eax
  41575f:	jnp    0x4157d4
  415761:	mov    bl,BYTE PTR [edx-0x66]
  415764:	jae    0x415766
  415766:	sbb    al,0x18
  415768:	stos   DWORD PTR es:[edi],eax
  415769:	mov    al,BYTE PTR [eax+0xbeef594]
  41576f:	mov    ebp,DWORD PTR [edi]
  415771:	jl     0x415703
  415773:	inc    edi
  415774:	idiv   BYTE PTR [esi-0x4f906a2f]
  41577a:	mov    cl,0x2a
  41577c:	sub    eax,0xb917b81f
  415781:	es cld 
  415783:	cwde   
  415784:	push   ecx
  415785:	jmp    0xbac1:0x6bfe147e
  41578c:	cmp    BYTE PTR [edi],bl
  41578e:	mov    ah,0xed
  415790:	inc    ebx
  415791:	fcomp  DWORD PTR [eax]
  415793:	dec    edi
  415794:	xchg   edx,eax
  415795:	mov    edi,0x9c5737b
  41579a:	fidivr WORD PTR [ebx-0x43c19841]
  4157a0:	fisubr DWORD PTR [edi]
  4157a2:	xchg   ebx,eax
  4157a3:	and    edi,DWORD PTR [esi-0x5e]
  4157a6:	fidivr DWORD PTR fs:[edi+0x46]
  4157aa:	js     0x415804
  4157ac:	stc    
  4157ad:	clc    
  4157ae:	sbb    DWORD PTR [ebx+0x9],0x42
  4157b2:	push   ss
  4157b3:	(bad)  
  4157b4:	mov    esp,0x45763628
  4157b9:	sub    eax,0xffd3ed63
  4157be:	push   ebp
  4157bf:	jae    0x41576f
  4157c1:	fdiv   DWORD PTR [esi+0x32b25f14]
  4157c7:	push   ebp
  4157c8:	add    al,0x40
  4157ca:	pop    ebp
  4157cb:	imul   esi,DWORD PTR ds:0x6423d101,0xffffffb7
  4157d2:	pop    ecx
  4157d3:	bound  ebp,QWORD PTR [ebx-0xd45af0f]
  4157d9:	pop    ds
  4157da:	ret    
  4157db:	jp     0x41580b
  4157dd:	adc    ah,dl
  4157df:	(bad)  
  4157e0:	lock jbe 0x4157eb
  4157e3:	sbb    ecx,DWORD PTR [ebx-0x10]
  4157e6:	stos   BYTE PTR es:[edi],al
  4157e7:	shl    DWORD PTR [ebx+eiz*4+0x13a1c748],1
  4157ee:	sbb    edx,DWORD PTR [ecx-0x64]
  4157f1:	lods   eax,DWORD PTR ds:[esi]
  4157f2:	sbb    dh,BYTE PTR [edi-0x4a]
  4157f5:	dec    esi
  4157f6:	jb     0x4157ea
  4157f8:	xor    DWORD PTR [ebp-0x58e829da],ebp
  4157fe:	sbb    edx,DWORD PTR [eax]
  415800:	xchg   edi,eax
  415801:	xchg   edi,eax
  415802:	cld    
  415803:	paddusw mm3,QWORD PTR [ebp-0x2c]
  415807:	and    al,0xd1
  415809:	mov    edx,0x97ef7b1
  41580e:	sub    al,0xf9
  415810:	ins    DWORD PTR es:[edi],dx
  415811:	jmp    0x4be0:0x5449b629
  415818:	stos   BYTE PTR es:[edi],al
  415819:	dec    ecx
  41581a:	jmp    0xcb41a763
  41581f:	push   edi
  415820:	inc    ebp
  415821:	jecxz  0x415846
  415823:	mov    edx,0xc232cab4
  415828:	xchg   edx,eax
  415829:	sbb    al,0xaf
  41582b:	ficomp WORD PTR [ebx-0x65]
  41582e:	aam    0x1c
  415830:	les    ebx,FWORD PTR [ecx-0x21]
  415833:	pop    esi
  415834:	in     al,0x65
  415836:	mov    esi,0x83d6882b
  41583b:	inc    edx
  41583c:	jns    0x415882
  41583e:	addr16 push cs
  415840:	sti    
  415841:	mov    WORD PTR ds:0x5acb8396,cs
  415847:	sbb    eax,ebx
  415849:	fiadd  WORD PTR [edi-0x608bb460]
  41584f:	in     al,dx
  415850:	mov    esi,0xc845d350
  415855:	pop    ebx
  415856:	jae    0x415807
  415858:	mov    ecx,0xfe502d6c
  41585d:	xor    DWORD PTR [edx-0x50],edi
  415860:	stos   BYTE PTR es:[edi],al
  415861:	push   esp
  415862:	cmp    eax,0x8367963c
  415867:	fisub  DWORD PTR [ecx+0x111f82df]
  41586d:	out    dx,al
  41586e:	mov    dh,0x1c
  415870:	in     eax,dx
  415871:	sub    ah,BYTE PTR [ecx-0x5b]
  415874:	xchg   esp,eax
  415875:	fiadd  WORD PTR [ecx-0x10]
  415878:	int3   
  415879:	ret    0xdee9
  41587c:	rcl    dh,1
  41587e:	xchg   ebx,eax
  41587f:	mov    edx,0x33c10873
  415884:	pusha  
  415885:	popa   
  415886:	inc    esi
  415887:	daa    
  415888:	stos   BYTE PTR es:[edi],al
  415889:	rcr    BYTE PTR [ebp-0x2719076c],1
  41588f:	(bad)  
  415890:	aad    0x41
  415892:	or     eax,0xec2465e0
  415897:	div    BYTE PTR [ecx]
  415899:	ins    BYTE PTR es:[edi],dx
  41589a:	cmp    BYTE PTR [eax],bl
  41589c:	xor    ecx,DWORD PTR [ebp-0xcd1aa15]
  4158a2:	scas   al,BYTE PTR es:[edi]
  4158a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a4:	cld    
  4158a5:	(bad)  [edi]
  4158a7:	mov    al,cs:0xcec7da4
  4158ad:	cdq    
  4158ae:	push   ecx
  4158af:	shr    bh,cl
  4158b1:	inc    ecx
  4158b2:	push   edi
  4158b3:	lods   eax,DWORD PTR cs:[esi]
  4158b5:	pop    edx
  4158b6:	stc    
  4158b7:	push   ebx
  4158b8:	jbe    0x415919
  4158ba:	int3   
  4158bb:	adc    DWORD PTR [esi+0x1a],esp
  4158be:	lea    esi,[ecx]
  4158c0:	inc    eax
  4158c1:	js     0x41589c
  4158c3:	outs   dx,BYTE PTR ds:[esi]
  4158c4:	mov    ecx,DWORD PTR [eax-0x17]
  4158c7:	add    ebx,eax
  4158c9:	leave  
  4158ca:	cdq    
  4158cb:	data16 std 
  4158cd:	inc    edi
  4158ce:	jp     0x41590b
  4158d0:	cld    
  4158d1:	and    DWORD PTR [ecx-0x54],eax
  4158d4:	fwait
  4158d5:	imul   eax,ebp,0x77
  4158d8:	lock std 
  4158da:	or     ch,bl
  4158dc:	mov    eax,ds:0x517093be
  4158e2:	pop    ss
  4158e3:	adc    ecx,DWORD PTR [edx+esi*8+0x60]
  4158e7:	mov    cl,0xc5
  4158e9:	mov    al,0x53
  4158eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ed:	adc    al,ah
  4158ef:	data16 das 
  4158f1:	and    cl,cl
  4158f3:	out    0x2d,eax
  4158f5:	cmc    
  4158f6:	cld    
  4158f7:	(bad)  
  4158f8:	xchg   esi,eax
  4158f9:	and    al,0xf5
  4158fb:	mov    ecx,0xfeda4fa
  415900:	stos   BYTE PTR es:[edi],al
  415901:	xor    BYTE PTR [eax],al
  415903:	mov    al,ds:0xc568e83d
  415908:	pop    edx
  415909:	(bad)  
  41590a:	sbb    al,0xed
  41590c:	mov    ch,0x21
  41590e:	mov    BYTE PTR [esi],ah
  415910:	das    
  415911:	mov    ds:0xddeb7098,al
  415916:	jae    0x415975
  415918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415919:	xchg   esi,eax
  41591a:	xor    DWORD PTR [ecx+0x57be8722],0xffffff9b
  415921:	mov    al,0x64
  415923:	sbb    ecx,edi
  415925:	mov    eax,ds:0xf13a5501
  41592a:	sub    edx,DWORD PTR [esi+0x5fee1ece]
  415930:	xor    al,0x6c
  415932:	enter  0x3eef,0xf7
  415936:	lahf   
  415937:	ins    DWORD PTR es:[edi],dx
  415938:	or     eax,0x3bca3084
  41593d:	out    0xf6,eax
  41593f:	pop    ss
  415940:	push   eax
  415941:	pop    edx
  415942:	xor    DWORD PTR [ebp+edi*1-0x4bffaa17],edx
  415949:	dec    eax
  41594a:	jae    0x415942
  41594c:	sbb    DWORD PTR [ebp-0x7f],edx
  41594f:	sbb    DWORD PTR [ebx+0x2],ebx
  415952:	push   ss
  415953:	lock or al,BYTE PTR [ebp+0x62]
  415957:	mov    BYTE PTR [edx-0x5330c8be],ah
  41595d:	sti    
  41595e:	dec    edi
  41595f:	or     al,BYTE PTR [ebx+0x5b]
  415962:	xchg   edx,eax
  415963:	push   esp
  415964:	xor    DWORD PTR [esi],esi
  415966:	test   cl,bl
  415968:	je     0x4159af
  41596a:	ins    BYTE PTR es:[edi],dx
  41596b:	(bad)  
  41596c:	mov    ch,0xe4
  41596e:	aas    
  41596f:	popf   
  415970:	out    0xf3,eax
  415972:	fs jp  0x4158f8
  415975:	jle    0x415941
  415977:	xchg   edi,eax
  415978:	out    0x9,al
  41597a:	mov    bh,0x34
  41597c:	adc    BYTE PTR [ebp-0x34],bh
  41597f:	xor    al,0x79
  415981:	sub    al,0x9f
  415983:	daa    
  415984:	jmp    0x4159dd
  415986:	aad    0xa
  415988:	addr16 aaa 
  41598a:	mov    al,0x2f
  41598c:	frstor [esi]
  41598e:	push   eax
  41598f:	jge    0x415a0e
  415991:	mov    ebx,DWORD PTR [esi-0x4af1f1cb]
  415997:	mov    ds:0xf4005f2d,al
  41599c:	outs   dx,BYTE PTR ds:[esi]
  41599d:	push   esi
  41599e:	mov    edi,0xcfd22876
  4159a3:	jmp    0x415a0c
  4159a5:	and    dl,BYTE PTR [ecx]
  4159a7:	pop    ebp
  4159a8:	xchg   ecx,eax
  4159a9:	je     0x415a23
  4159ab:	add    al,0x9a
  4159ad:	jb     0x415959
  4159af:	jecxz  0x415957
  4159b1:	(bad)  
  4159b3:	retf   
  4159b4:	rol    DWORD PTR [esi],0xfd
  4159b7:	jge    0x41597c
  4159b9:	cmp    eax,0xd5c4e541
  4159be:	test   DWORD PTR [esi-0x7f5c24ae],edi
  4159c4:	or     eax,0x36deb6e5
  4159c9:	sar    DWORD PTR ds:0x7a6899c5,cl
  4159cf:	mov    al,0x55
  4159d1:	sub    DWORD PTR [esp+edx*1],ecx
  4159d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d5:	les    esp,FWORD PTR [eax-0x23]
  4159d8:	sub    eax,0xafb23bdd
  4159dd:	sti    
  4159de:	xor    BYTE PTR [esi-0x31],al
  4159e1:	rol    BYTE PTR [ebp+0x6987a66c],0x2
  4159e8:	retf   0xf6e0
  4159eb:	std    
  4159ec:	(bad)  
  4159ed:	ss mov dh,0xd1
  4159f0:	sbb    eax,0xade03987
  4159f5:	cli    
  4159f6:	data16 and ch,ah
  4159f9:	sahf   
  4159fa:	adc    ch,ah
  4159fc:	adc    eax,0x785a1eff
  415a01:	fld    st(2)
  415a03:	popf   
  415a04:	mov    ah,0xa4
  415a06:	js     0x4159b2
  415a08:	push   ebx
  415a09:	mov    DWORD PTR [ebx-0x4a713678],edi
  415a0f:	shl    DWORD PTR [esi-0xa],1
  415a12:	shr    BYTE PTR [eax+0x22],1
  415a15:	jle    0x415a1f
  415a17:	mov    ebx,0xa8baba23
  415a1c:	mov    dh,0xa4
  415a1e:	xor    DWORD PTR [ecx-0x80],edi
  415a21:	jne    0x415a52
  415a23:	adc    al,0x62
  415a25:	call   0xc3c71a3c
  415a2a:	inc    edx
  415a2b:	xor    al,0xf4
  415a2d:	xlat   BYTE PTR ds:[ebx]
  415a2e:	pop    ds
  415a2f:	cli    
  415a30:	in     al,dx
  415a31:	sbb    DWORD PTR [ebp-0x7c],edx
  415a34:	pop    edx
  415a35:	ins    BYTE PTR es:[edi],dx
  415a36:	std    
  415a37:	mov    ds:0xe42e0cd4,eax
  415a3c:	cmc    
  415a3d:	mov    esp,ebx
  415a3f:	cmp    ch,0x72
  415a42:	repz sub ah,ah
  415a45:	adc    edx,DWORD PTR [edi+0x22]
  415a48:	jbe    0x415a82
  415a4a:	mov    ebx,0x9d5c94e2
  415a4f:	xchg   ecx,eax
  415a50:	dec    edx
  415a51:	jns    0x415a06
  415a53:	cwde   
  415a54:	iret   
  415a55:	xchg   DWORD PTR ds:0xdd904e1b,esp
  415a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a5c:	loope  0x415a04
  415a5e:	jmp    0x54886959
  415a63:	push   ss
  415a64:	or     al,BYTE PTR [edx-0x47]
  415a67:	push   eax
  415a68:	mov    esp,0x4b3f7d47
  415a6d:	add    eax,0x4f654fdd
  415a73:	and    esp,0x845dd933
  415a79:	aaa    
  415a7a:	(bad)  
  415a7b:	fldenv [ecx]
  415a7d:	aaa    
  415a7e:	mov    eax,ds:0xb5b1ad87
  415a83:	mov    esi,0xb2035c31
  415a88:	test   DWORD PTR [esp+eax*1],ebp
  415a8b:	(bad)  
  415a8c:	test   eax,0x5db3f2ab
  415a91:	test   eax,0xb1d5dcc3
  415a96:	mov    BYTE PTR [ecx-0x5eb336ed],ah
  415a9c:	lds    ebp,FWORD PTR [edx+0x18]
  415a9f:	push   0xffffffdf
  415aa1:	inc    esi
  415aa2:	xchg   ecx,eax
  415aa3:	jge    0x415a59
  415aa5:	cld    
  415aa6:	in     eax,0x3c
  415aa8:	addr16 pop ss
  415aaa:	repz or ebx,DWORD PTR [esi]
  415aad:	imul   eax,ebx,0xffffffe8
  415ab0:	dec    ebp
  415ab1:	loope  0x415a57
  415ab3:	lock sbb esi,edx
  415ab6:	add    BYTE PTR [edx-0x6e],cl
  415ab9:	call   0x7011:0x246b1a80
  415ac0:	inc    eax
  415ac1:	mov    ebx,0xae76cb63
  415ac6:	xchg   edi,eax
  415ac7:	and    ebp,edx
  415ac9:	cmp    eax,0xb48773b8
  415ace:	inc    edx
  415acf:	je     0x415ac3
  415ad1:	push   edx
  415ad2:	push   0xe1e38f67
  415ad7:	sub    al,0xde
  415ad9:	retf   
  415ada:	cdq    
  415adb:	push   edx
  415add:	ins    BYTE PTR es:[edi],dx
  415ade:	mov    BYTE PTR [edi],ch
  415ae0:	call   0xcb3b:0x212dd610
  415ae7:	jmp    0x548b:0xf015f724
  415aee:	sbb    al,dh
  415af0:	sbb    dl,BYTE PTR [ebp-0x56]
  415af3:	push   eax
  415af4:	add    DWORD PTR [ebp-0x1],edi
  415af7:	jo     0x415b0e
  415af9:	mov    al,ds:0x3fa38fb2
  415afe:	push   cs
  415aff:	mov    ch,0x22
  415b01:	adc    ch,BYTE PTR cs:[eax+eax*4+0x14]
  415b06:	sub    BYTE PTR ds:0x83dfe7fe,cl
  415b0c:	leave  
  415b0d:	jnp    0x415b61
  415b0f:	and    BYTE PTR [ebp-0x5c],bl
  415b12:	les    ebx,FWORD PTR [eax+eiz*4-0x322acbc4]
  415b19:	call   0x3bfa49b7
  415b1e:	sub    bl,BYTE PTR [esp+edi*1+0x34]
  415b22:	test   al,0x42
  415b24:	and    DWORD PTR [ecx],ebp
  415b26:	mov    esp,0xeca75b08
  415b2b:	arpl   WORD PTR [ecx],ax
  415b2d:	inc    edx
  415b2e:	fld1   
  415b30:	mov    ds:0x97e17f29,eax
  415b35:	fidivr DWORD PTR [eax]
  415b37:	dec    edx
  415b38:	fwait
  415b39:	lea    ecx,fs:[esi+0x7c7f0796]
  415b40:	xchg   DWORD PTR [edx+0x63],edx
  415b43:	cmp    al,0xd1
  415b45:	pop    es
  415b46:	push   edx
  415b47:	js     0x415b1c
  415b49:	mov    ds:0x7530d2cc,al
  415b4e:	jmp    0x3e99:0xa326ada0
  415b55:	jnp    0x415afa
  415b57:	aaa    
  415b58:	fisub  WORD PTR [edx]
  415b5a:	and    DWORD PTR [edi],eax
  415b5c:	mov    edx,DWORD PTR [ebp+eax*8+0x3a]
  415b60:	push   ebp
  415b61:	cmp    al,0xc3
  415b63:	lods   al,BYTE PTR ds:[esi]
  415b64:	popf   
  415b65:	lock mov ebx,0x2a46af19
  415b6b:	adc    al,0x29
  415b6d:	popa   
  415b6e:	daa    
  415b6f:	sbb    al,0x76
  415b71:	cmp    al,0x95
  415b73:	and    ah,BYTE PTR [ebx-0x25]
  415b76:	aad    0x49
  415b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b79:	adc    BYTE PTR [ecx+0x4],dl
  415b7c:	outs   dx,BYTE PTR ds:[esi]
  415b7d:	xchg   ebx,eax
  415b7e:	loop   0x415b74
  415b80:	pop    edi
  415b81:	arpl   dx,si
  415b83:	test   al,0x69
  415b85:	mov    dl,dh
  415b87:	out    dx,eax
  415b88:	mov    ebp,0x1fa646a4
  415b8d:	push   DWORD PTR [ebx*1-0x2226f108]
  415b94:	dec    esp
  415b95:	(bad)  
  415b97:	cld    
  415b98:	pop    edi
  415b99:	or     BYTE PTR [eax],ch
  415b9b:	jecxz  0x415b3f
  415b9d:	xor    al,0xfb
  415b9f:	js     0x415c01
  415ba1:	ins    DWORD PTR es:[edi],dx
  415ba2:	push   0x86b1b4eb
  415ba7:	retf   0xd93b
  415baa:	jge    0x415b4a
  415bac:	or     BYTE PTR [eax],dl
  415bae:	in     al,dx
  415baf:	in     eax,0x2d
  415bb1:	push   ds
  415bb2:	test   BYTE PTR [eax],dl
  415bb4:	pop    ds
  415bb5:	jp     0x415c22
  415bb7:	fistp  QWORD PTR [edi]
  415bb9:	call   0xe118927
  415bbe:	repz dec edi
  415bc0:	adc    al,0x1c
  415bc2:	cwde   
  415bc3:	mov    al,BYTE PTR [ebx]
  415bc5:	or     bh,cl
  415bc7:	test   BYTE PTR [ecx],dh
  415bc9:	jl     0x415c10
  415bcb:	mov    ebp,0x7d493d1
  415bd0:	pop    ss
  415bd1:	mov    ebp,0xed2231ef
  415bd6:	dec    ebx
  415bd7:	dec    ecx
  415bd8:	push   esp
  415bd9:	fstp   TBYTE PTR [ecx]
  415bdb:	add    ah,ah
  415bdd:	sub    eax,0x600e9181
  415be2:	(bad)
  415be6:	mov    edi,0xcb0ab3ec
  415beb:	jbe    0x415bd5
  415bed:	fwait
  415bee:	addr16 pop ecx
  415bf0:	aam    0x2b
  415bf2:	fadd   st,st(5)
  415bf4:	daa    
  415bf5:	rcr    eax,cl
  415bf7:	je     0x415bd2
  415bf9:	ret    
  415bfa:	mov    ds:0x927afcdd,al
  415bff:	les    eax,FWORD PTR [esi+0x454ecf7c]
  415c05:	jmp    0x25adbb88
  415c0a:	fs in  eax,0x3
  415c0d:	icebp  
  415c0e:	bound  esi,QWORD PTR [ebp+edi*2+0x4e]
  415c12:	dec    esp
  415c13:	ja     0x415b95
  415c15:	daa    
  415c16:	add    al,0xa3
  415c18:	mov    al,ds:0x6e842ce0
  415c1e:	add    al,0x66
  415c20:	mov    ebx,0x8dd97b45
  415c25:	lods   eax,DWORD PTR ds:[esi]
  415c26:	lock fwait
  415c28:	xor    eax,0xd860a0c1
  415c2d:	fwait
  415c2e:	sar    ch,1
  415c30:	xchg   esp,eax
  415c31:	cmp    DWORD PTR [edi+ebx*1-0x59],0xb38b5f9e
  415c39:	retf   
  415c3a:	lods   al,BYTE PTR ds:[esi]
  415c3b:	or     BYTE PTR [edi-0x3b],0xa6
  415c3f:	dec    eax
  415c40:	push   0xffffffb9
  415c42:	jo     0x415c4e
  415c44:	jne    0x415c63
  415c46:	cmp    edi,ecx
  415c48:	out    0x42,eax
  415c4a:	fmul   st(0),st
  415c4c:	in     eax,0x20
  415c4e:	mov    eax,ds:0x66815b98
  415c53:	mov    ecx,0x4449664f
  415c58:	jmp    0x73e9:0xf7200538
  415c5f:	ds jge 0x415c2f
  415c62:	cli    
  415c63:	jecxz  0x415c6d
  415c65:	xchg   DWORD PTR [edx+edi*1],edx
  415c68:	bound  ebx,QWORD PTR [edi+0x91b2dd0]
  415c6e:	mov    edx,0x3a2a259b
  415c73:	test   BYTE PTR [esi],dl
  415c75:	pop    ecx
  415c76:	xchg   ebp,eax
  415c77:	imul   esi,DWORD PTR [eax],0xffffff93
  415c7a:	out    dx,al
  415c7b:	ins    BYTE PTR es:[edi],dx
  415c7c:	fisub  DWORD PTR [ebx]
  415c7e:	test   BYTE PTR [edi],bl
  415c80:	or     ch,BYTE PTR [edx+0x67]
  415c83:	int    0x40
  415c85:	push   cs
  415c86:	pop    ss
  415c87:	addr16 mov al,0x4e
  415c8a:	es popf 
  415c8c:	ret    
  415c8d:	mov    DWORD PTR [esi-0x2d],esp
  415c90:	sbb    esi,ebx
  415c92:	lahf   
  415c93:	fcomip st,st(0)
  415c95:	mov    cl,0x0
  415c97:	lds    edx,FWORD PTR [eax+0x6fcb904e]
  415c9d:	mov    edi,DWORD PTR [ebx]
  415c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ca0:	dec    ebx
  415ca2:	xor    ebp,DWORD PTR [esi]
  415ca4:	inc    edi
  415ca5:	or     ah,ch
  415ca7:	data16 clc 
  415ca9:	scas   eax,DWORD PTR es:[edi]
  415caa:	enter  0x38c0,0x27
  415cae:	retf   0x8f80
  415cb1:	jge    0x415d2d
  415cb3:	sbb    BYTE PTR [ebx+0x5e],cl
  415cb6:	push   esp
  415cb8:	xlat   BYTE PTR ds:[ebx]
  415cb9:	jmp    0xc1ad2a32
  415cbe:	ins    DWORD PTR es:[edi],dx
  415cbf:	es (bad) 
  415cc1:	pop    ss
  415cc2:	mov    ebx,0x36a5b8ee
  415cc7:	mov    ecx,DWORD PTR [ebx+0x4fd10069]
  415ccd:	sbb    eax,0x6fcf2f28
  415cd2:	call   0x7a1d276a
  415cd7:	pop    edi
  415cd8:	mov    dl,0xbe
  415cda:	jnp    0x415d34
  415cdc:	ins    BYTE PTR es:[edi],dx
  415cdd:	mov    eax,ds:0xed0352ba
  415ce2:	sahf   
  415ce3:	and    cl,BYTE PTR [esp+edx*1-0x7a]
  415ce7:	jmp    0xcada:0x309b5657
  415cee:	cmc    
  415cef:	out    0x7a,eax
  415cf1:	neg    BYTE PTR [ecx-0x37]
  415cf4:	push   edi
  415cf5:	add    eax,0x790ad8bb
  415cfa:	mov    ds:0x2d56b0be,eax
  415cff:	in     eax,dx
  415d00:	push   eax
  415d01:	(bad)  
  415d02:	in     al,0x2
  415d04:	jnp    0x415ce2
  415d06:	(bad)  
  415d08:	dec    ebx
  415d09:	push   eax
  415d0a:	push   esp
  415d0b:	push   edx
  415d0c:	jecxz  0x415d84
  415d0e:	jg     0x415c9e
  415d10:	clc    
  415d11:	or     eax,0xf39a9b28
  415d16:	cmp    al,dl
  415d18:	jle    0x415ca4
  415d1a:	jp     0x415d98
  415d1c:	xor    DWORD PTR [eax+0x338a1bd2],0xedd8fe71
  415d26:	fisub  DWORD PTR [esi-0x7f622a6c]
  415d2c:	dec    ebp
  415d2d:	sub    ebp,esi
  415d2f:	sub    ch,BYTE PTR [esi]
  415d31:	fidivr WORD PTR [esi-0x23]
  415d34:	call   0xf795:0x8658a6b1
  415d3b:	aad    0xd6
  415d3d:	jmp    0x7b047c41
  415d42:	loop   0x415d65
  415d44:	pushf  
  415d45:	cmp    eax,0x428b12cc
  415d4a:	push   edx
  415d4b:	addr16 out dx,eax
  415d4d:	push   ss
  415d4e:	enter  0x84f0,0x81
  415d52:	inc    ebp
  415d53:	int3   
  415d54:	dec    edx
  415d55:	jnp    0x415d36
  415d57:	xchg   ebx,eax
  415d58:	nop
  415d59:	jge    0x415dd9
  415d5b:	pop    es
  415d5c:	xchg   edi,eax
  415d5d:	push   edx
  415d5e:	dec    ebx
  415d5f:	xchg   esp,eax
  415d60:	cdq    
  415d61:	xchg   edi,eax
  415d62:	(bad)  
  415d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d64:	xchg   BYTE PTR ds:0xc0110ae6,dh
  415d6a:	gs push ebx
  415d6c:	add    BYTE PTR [esi],al
  415d6e:	addr16 out dx,eax
  415d70:	sub    BYTE PTR ds:0x4140012c,cl
  415d76:	ret    0x3862
  415d79:	test   BYTE PTR [esi],ah
  415d7b:	xchg   esp,eax
  415d7c:	jo     0x415d78
  415d7e:	loop   0x415dc0
  415d80:	repz mov ah,0x6e
  415d83:	and    esi,DWORD PTR [ebx]
  415d85:	or     al,0xe4
  415d87:	mov    al,ds:0xd0a8b234
  415d8c:	sub    ebp,DWORD PTR [ebp+0x468ebfc0]
  415d92:	aaa    
  415d93:	cmp    edx,eax
  415d95:	inc    esp
  415d96:	sbb    ah,dh
  415d98:	jl     0x415db1
  415d9a:	aam    0x8c
  415d9c:	jae    0x415dca
  415d9e:	push   esp
  415d9f:	mov    ch,0xb5
  415da1:	pminsw mm1,QWORD PTR [ecx-0x7840ddf1]
  415da8:	pop    es
  415da9:	repz mov ah,cl
  415dac:	cmp    cl,BYTE PTR [eax-0x67d3bdeb]
  415db2:	xor    BYTE PTR [esi-0x28],bl
  415db5:	loopne 0x415e1d
  415db7:	psllw  mm6,mm0
  415dba:	repnz scas eax,DWORD PTR es:[edi]
  415dbc:	xchg   ebx,eax
  415dbd:	scas   eax,DWORD PTR es:[edi]
  415dbe:	enter  0xd1db,0x50
  415dc2:	sbb    dl,dh
  415dc4:	out    dx,al
  415dc5:	call   0x8452a533
  415dca:	mov    ecx,0x9952d270
  415dcf:	cld    
  415dd0:	xchg   ebx,eax
  415dd1:	lds    esi,FWORD PTR [edi]
  415dd3:	xor    eax,0x18dcb179
  415dd8:	daa    
  415dd9:	or     BYTE PTR [ecx+0x57],bh
  415ddc:	bound  edx,QWORD PTR [edx-0x1cdd27ac]
  415de2:	outs   dx,BYTE PTR ds:[esi]
  415de3:	fsubr  DWORD PTR [bp+si+0x39]
  415de7:	mov    ebp,0xb5dcf3b
  415dec:	adc    DWORD PTR [ecx],0x4e
  415def:	jg     0x415da1
  415df1:	fld    DWORD PTR [si-0x6f44]
  415df6:	mov    ah,0x36
  415df8:	ficom  DWORD PTR [eax]
  415dfa:	and    bh,BYTE PTR [edi]
  415dfc:	out    dx,eax
  415dfd:	jnp    0x415dad
  415dff:	popa   
  415e00:	sub    DWORD PTR [edi+0x4d],esi
  415e03:	sub    al,0x33
  415e05:	xchg   edi,eax
  415e06:	in     al,0xa9
  415e08:	cli    
  415e09:	jg     0x415e1c
  415e0b:	inc    edi
  415e0c:	arpl   WORD PTR [edx+0x7c107ba9],ax
  415e12:	sub    edi,DWORD PTR [ebp-0x7a362daa]
  415e18:	sbb    BYTE PTR [ecx+edi*4],dl
  415e1b:	cmp    ecx,DWORD PTR [eax+eax*1]
  415e1e:	(bad)  
  415e1f:	jmp    0x11b62a88
  415e24:	sub    DWORD PTR ds:0x488244a2,ecx
  415e2a:	cmp    eax,0x95c37a87
  415e2f:	pop    esp
  415e30:	or     edx,DWORD PTR [ebx]
  415e32:	sti    
  415e33:	pop    edi
  415e34:	int    0xcc
  415e36:	add    cl,cl
  415e38:	pop    es
  415e39:	sbb    esi,eax
  415e3b:	add    DWORD PTR [esi-0x47b470b3],edx
  415e41:	loopne 0x415e1b
  415e43:	add    esp,DWORD PTR [esi+eiz*2-0x1]
  415e47:	hlt    
  415e48:	in     al,dx
  415e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e4a:	push   0x80619278
  415e4f:	pushf  
  415e50:	es js  0x415e37
  415e53:	xor    esp,DWORD PTR [ebx-0x6646ed7b]
  415e59:	cmc    
  415e5a:	loopne 0x415e25
  415e5c:	mov    dl,0x48
  415e5e:	jl     0x415e99
  415e60:	shl    al,cl
  415e62:	jmp    0x40b926f6
  415e67:	mov    edx,0x9ec8994d
  415e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e6d:	push   cs
  415e6e:	jecxz  0x415e0d
  415e70:	jge    0x415e92
  415e72:	sbb    esp,esp
  415e74:	lock mov eax,0x8b33973f
  415e7a:	dec    edi
  415e7b:	and    dh,ah
  415e7d:	outs   dx,DWORD PTR ds:[esi]
  415e7e:	mov    ds:0x94278f63,eax
  415e83:	push   0xffffffbd
  415e85:	pop    ds
  415e86:	or     esp,ebx
  415e88:	rcl    DWORD PTR [ebx+0x71098e72],cl
  415e8e:	mov    bh,0xd2
  415e90:	xor    ch,BYTE PTR [eax]
  415e92:	or     eax,0xb2c5620
  415e97:	lds    ebp,FWORD PTR [ebx+0x5e]
  415e9a:	inc    ebx
  415e9b:	test   DWORD PTR [ebp-0x34099f0e],esi
  415ea1:	add    esp,edx
  415ea3:	dec    ebp
  415ea4:	jmp    0x415e44
  415ea6:	fiadd  WORD PTR [eax+ebp*4]
  415ea9:	pop    ecx
  415eaa:	cmp    ch,ch
  415eac:	xor    ch,bl
  415eae:	push   ebp
  415eaf:	push   esi
  415eb0:	rcr    DWORD PTR [edi+0x56],0x6d
  415eb4:	icebp  
  415eb5:	sbb    BYTE PTR [edx],dl
  415eb7:	xor    DWORD PTR [edx-0x62f5f9e3],edi
  415ebd:	or     BYTE PTR [eax-0xb51511a],dl
  415ec3:	repnz xor esi,edx
  415ec6:	push   esi
  415ec7:	mov    cl,0x4
  415ec9:	hlt    
  415eca:	mov    ecx,0x98e9748b
  415ecf:	sub    ah,bl
  415ed1:	gs push esi
  415ed3:	adc    BYTE PTR [esi+0x576dce7e],al
  415ed9:	pop    ebx
  415eda:	cmp    al,0x71
  415edc:	cld    
  415edd:	scas   eax,DWORD PTR es:[edi]
  415ede:	cmovl  esp,DWORD PTR [ebp+0x67]
  415ee2:	and    eax,0xff0d632f
  415ee7:	daa    
  415ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ee9:	cmp    dh,BYTE PTR [eax+0x468f5f4a]
  415eef:	xchg   ecx,eax
  415ef0:	dec    edx
  415ef1:	aaa    
  415ef2:	test   BYTE PTR [esi-0x280879e8],ah
  415ef8:	add    DWORD PTR [esi],0xffffffa2
  415efb:	lahf   
  415efc:	and    al,0x24
  415efe:	push   ebx
  415eff:	rcl    DWORD PTR ds:0xdc25e89b,0x79
  415f06:	adc    eax,0xc632101a
  415f0b:	pusha  
  415f0c:	push   0xffffffe8
  415f0e:	adc    BYTE PTR [edi],al
  415f10:	xchg   ecx,eax
  415f11:	push   ecx
  415f12:	mov    ch,0x75
  415f14:	cmp    eax,0xb329f6b5
  415f19:	inc    BYTE PTR [ebp-0x6e]
  415f1c:	ins    BYTE PTR es:[edi],dx
  415f1d:	pushfw 
  415f1f:	enter  0x7b11,0xc3
  415f23:	fbld   TBYTE PTR ds:[ebp-0x23298b0a]
  415f2a:	fisttp DWORD PTR [ecx+ecx*2]
  415f2d:	pop    ecx
  415f2e:	ss sahf 
  415f30:	shr    BYTE PTR [ebx+edx*4],cl
  415f33:	out    0x1b,al
  415f35:	or     eax,0xe8b62f12
  415f3a:	pop    ds
  415f3b:	repnz mov dl,0x39
  415f3e:	mov    cl,0xc5
  415f40:	cmp    al,0x58
  415f42:	nop
  415f43:	adc    bh,BYTE PTR ds:0xcf8cba33
  415f49:	or     BYTE PTR [edi],ah
  415f4b:	stos   BYTE PTR es:[edi],al
  415f4c:	pusha  
  415f4d:	mov    al,0x14
  415f4f:	call   0x64fc:0xe241acac
  415f56:	xchg   ecx,eax
  415f57:	js     0x415f1e
  415f59:	cmp    DWORD PTR [esi+0x5852ff1b],ecx
  415f5f:	mov    ch,0x84
  415f61:	push   eax
  415f62:	sub    DWORD PTR [esi+0x5f841249],ecx
  415f68:	outs   dx,BYTE PTR ds:[esi]
  415f69:	lods   al,BYTE PTR ds:[esi]
  415f6a:	aaa    
  415f6b:	loope  0x415ef7
  415f6d:	call   ecx
  415f6f:	(bad)  
  415f70:	lahf   
  415f71:	cli    
  415f72:	mov    bh,dh
  415f74:	bound  ebp,QWORD PTR [edi+0x10]
  415f77:	out    dx,eax
  415f78:	ficom  WORD PTR ds:0x5b47b7fa
  415f7e:	or     al,0xa0
  415f80:	popa   
  415f81:	push   0xffffff98
  415f83:	dec    ebp
  415f84:	jmp    FWORD PTR [ebx-0x7a]
  415f87:	repnz xor DWORD PTR [esi+eax*1+0x13c67985],ebp
  415f8f:	sbb    DWORD PTR [eax+0x2a648a56],eax
  415f95:	fistp  DWORD PTR [esi]
  415f97:	loopne 0x415f37
  415f99:	(bad)  
  415f9a:	js     0x415fda
  415f9c:	mov    fs,WORD PTR [edx-0x71813e78]
  415fa2:	(bad)  
  415fa3:	shl    BYTE PTR [edi+ebp*8-0x39],1
  415fa7:	xor    BYTE PTR [esi-0x6],bh
  415faa:	ds (bad) 
  415fac:	setbe  ah
  415faf:	jmp    0x415f84
  415fb1:	mov    ebx,0xb8696bf3
  415fb6:	sbb    BYTE PTR [ecx-0x447929e5],bl
  415fbc:	cmp    al,0x18
  415fbe:	fnsave [esi-0x91a64de]
  415fc4:	jae    0x415fdf
  415fc6:	es stos BYTE PTR es:[edi],al
  415fc8:	rcl    DWORD PTR [ebp-0x71],1
  415fcb:	sar    BYTE PTR [edi],1
  415fcd:	outs   dx,DWORD PTR ds:[esi]
  415fce:	xor    DWORD PTR [eax],edi
  415fd0:	jmp    0x415fac
  415fd2:	sbb    eax,0x1ff64375
  415fd7:	sti    
  415fd8:	sub    esi,DWORD PTR [edi-0x6329168d]
  415fde:	push   ss
  415fdf:	mov    cl,0x7a
  415fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fe2:	loop   0x415f70
  415fe4:	sbb    BYTE PTR [esi+0x1c],dl
  415fe7:	mov    BYTE PTR [edx],0xf1
  415fea:	push   0xa7c6bd7d
  415fef:	imul   esi,edi,0x7f
  415ff2:	fld    QWORD PTR [ebx+eax*1+0x6898bed5]
  415ff9:	rcl    BYTE PTR [ecx-0x5d],1
  415ffc:	xor    ecx,edi
  415ffe:	lahf   
  415fff:	mov    bh,0x6e
  416001:	push   ss
  416002:	push   ecx
  416003:	popf   
  416004:	cmp    BYTE PTR [eax-0x53],bh
  416007:	fcom   QWORD PTR [edx+ecx*2+0x36cbaa24]
  41600e:	xchg   DWORD PTR [esi],esp
  416010:	push   ss
  416011:	push   0x4b935d2b
  416016:	and    esi,DWORD PTR [esp+eiz*2]
  416019:	jo     0x415fd1
  41601b:	div    BYTE PTR [ecx+0x167853c6]
  416021:	dec    eax
  416022:	mov    ebx,0x7e598b8d
  416027:	jno    0x415fd5
  416029:	add    eax,0x9de700c6
  41602e:	pop    ecx
  41602f:	adc    eax,0x6593870d
  416034:	push   es
  416035:	pusha  
  416036:	mov    eax,ds:0xed81c91f
  41603b:	sub    al,0x14
  41603d:	jl     0x416016
  41603f:	mov    eax,0xa16b8c6d
  416044:	fisub  DWORD PTR [ebx]
  416046:	fst    DWORD PTR [edx-0x379cc5a1]
  41604c:	imul   ebx,edx,0xffffff83
  41604f:	cmp    DWORD PTR [esi-0x6c],edx
  416052:	loop   0x41605b
  416054:	inc    esp
  416055:	gs out 0x3d,al
  416058:	mov    dl,BYTE PTR [ebp-0x72]
  41605b:	or     edi,DWORD PTR [edi+0x18]
  41605e:	je     0x4160bb
  416060:	sbb    DWORD PTR [esi+0x41],edi
  416063:	out    dx,al
  416064:	shl    BYTE PTR [ebp+ebp*4-0x4539c09c],cl
  41606b:	mov    ds:0xb755c15c,eax
  416070:	pop    eax
  416071:	adc    cl,BYTE PTR [eax+0x4d]
  416074:	jne    0x416059
  416076:	xor    BYTE PTR [ebx+0x44],bl
  416079:	outs   dx,DWORD PTR ds:[esi]
  41607a:	fs out dx,eax
  41607c:	stc    
  41607d:	scas   eax,DWORD PTR es:[edi]
  41607e:	ret    0x3b9e
  416081:	je     0x4160f7
  416083:	push   0xd9695790
  416088:	xor    eax,0x698c51a8
  41608d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41608e:	lock in al,0x2c
  416091:	data16 jno 0x41609a
  416094:	xor    DWORD PTR [edi-0x73],0xfce8502b
  41609b:	cmp    edx,DWORD PTR [edi+0xa]
  41609e:	adc    bl,al
  4160a0:	xchg   edx,eax
  4160a1:	hlt    
  4160a2:	adc    cl,BYTE PTR [edx]
  4160a4:	pop    ds
  4160a5:	es push esp
  4160a7:	imul   esp,DWORD PTR [ebx-0x67],0x1c
  4160ab:	xchg   esp,eax
  4160ac:	fild   WORD PTR [ecx]
  4160ae:	dec    ebx
  4160af:	es xchg ecx,eax
  4160b1:	cwde   
  4160b2:	and    BYTE PTR ds:0x3cdd915c,0x16
  4160b9:	test   eax,0x62c8d983
  4160be:	push   edi
  4160bf:	or     ah,0x7a
  4160c2:	adc    DWORD PTR [edx],edx
  4160c4:	sub    cl,BYTE PTR [ecx-0x26]
  4160c7:	inc    edx
  4160c8:	loopne 0x4160cd
  4160ca:	xor    edi,esp
  4160cc:	cmp    al,0x34
  4160ce:	mov    edx,?
  4160d0:	mov    cs,WORD PTR [ebp-0x52b7ad86]
  4160d6:	lods   al,BYTE PTR ds:[esi]
  4160d7:	les    ebp,FWORD PTR [edx]
  4160d9:	inc    esp
  4160da:	push   ecx
  4160db:	cmp    DWORD PTR ds:[edi],esi
  4160de:	and    edi,DWORD PTR [esi+0x5d4b3a44]
  4160e4:	dec    eax
  4160e5:	xchg   ebp,eax
  4160e6:	xlat   BYTE PTR ds:[ebx]
  4160e7:	pop    esi
  4160e8:	imul   esp,DWORD PTR [ecx+0x2],0x3429505b
  4160ef:	mov    eax,0x9a281b6a
  4160f4:	jle    0x4160de
  4160f6:	dec    esp
  4160f7:	fnstsw WORD PTR [esi]
  4160f9:	mov    dh,0x26
  4160fb:	js     0x416164
  4160fd:	push   ebp
  4160fe:	in     al,0xee
  416100:	fnsave [esi]
  416102:	mov    eax,ds:0x3d84cd4d
  416107:	out    dx,eax
  416108:	sar    esi,1
  41610a:	pop    ebx
  41610b:	out    0x49,eax
  41610d:	inc    ebx
  41610e:	std    
  41610f:	dec    edx
  416110:	push   edx
  416111:	dec    eax
  416112:	test   al,0xda
  416114:	and    esi,DWORD PTR [ebp+0x782621a2]
  41611a:	rol    BYTE PTR [ecx-0x5b],cl
  41611d:	xor    BYTE PTR [ebx-0x10],bh
  416120:	cwde   
  416121:	mov    eax,ds:0x221b9904
  416126:	aam    0x77
  416128:	or     bl,bl
  41612a:	jl     0x416170
  41612c:	jbe    0x41619c
  41612e:	xor    eax,0x2de1f145
  416133:	xor    DWORD PTR [edi+0x8],0x378aa491
  41613a:	jb     0x41613e
  41613c:	push   ss
  41613d:	cmp    DWORD PTR [ebx],edi
  41613f:	fist   DWORD PTR [ecx+0x28]
  416142:	mov    edi,0xaeb328d8
  416147:	loope  0x416105
  416149:	lea    edx,[ecx+0x4efc35f8]
  41614f:	mov    ecx,DWORD PTR [edi-0x43]
  416152:	adc    DWORD PTR [esi+eiz*4-0x12],ebx
  416156:	pop    edi
  416157:	clc    
  416158:	enter  0x6ee4,0x15
  41615c:	stos   BYTE PTR es:[edi],al
  41615d:	ja     0x41611f
  41615f:	cmp    ecx,ebx
  416161:	jmp    0x13a0:0x76b1ac70
  416168:	mov    BYTE PTR [eax+0x2e],ah
  41616b:	sbb    al,bh
  41616d:	lds    edx,FWORD PTR [eax]
  41616f:	xchg   ebp,eax
  416170:	(bad)
  416173:	cmp    al,0xe1
  416175:	add    ch,ah
  416177:	mov    DWORD PTR [ecx],eax
  416179:	nop
  41617a:	aas    
  41617b:	sbb    al,0x97
  41617d:	mov    esi,0x1b9c367e
  416182:	adc    DWORD PTR [eax],edx
  416184:	scas   al,BYTE PTR es:[edi]
  416185:	ja     0x4161fe
  416187:	and    BYTE PTR [ebp+0x51a653bd],0xbd
  41618e:	and    DWORD PTR [ebx+0x29],edx
  416191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416192:	add    al,BYTE PTR [ebx-0x7874414e]
  416198:	scas   al,BYTE PTR es:[edi]
  416199:	icebp  
  41619a:	out    0x31,al
  41619c:	popf   
  41619d:	dec    ebp
  41619e:	sub    ch,dl
  4161a0:	pop    eax
  4161a1:	nop
  4161a2:	jmp    0xeb743c73
  4161a7:	ja     0x416174
  4161a9:	out    0xf3,al
  4161ab:	sbb    edx,edx
  4161ad:	ins    DWORD PTR es:[edi],dx
  4161ae:	and    al,ah
  4161b0:	inc    esi
  4161b1:	rcr    al,0xe5
  4161b4:	add    BYTE PTR [eax+0x75],dl
  4161b7:	hlt    
  4161b8:	and    eax,0xd5ef4326
  4161bd:	push   esp
  4161be:	jnp    0x41618b
  4161c0:	out    dx,eax
  4161c1:	xchg   ebx,eax
  4161c2:	push   esi
  4161c3:	add    esi,DWORD PTR [ebp-0xd3d9699]
  4161c9:	sub    eax,0xde1549c7
  4161ce:	inc    edi
  4161cf:	adc    al,0x76
  4161d1:	ins    DWORD PTR es:[edi],dx
  4161d2:	pop    ebp
  4161d3:	sar    BYTE PTR [esi],0xc4
  4161d6:	cli    
  4161d7:	hlt    
  4161d8:	and    esi,DWORD PTR [ecx-0x6fcc591e]
  4161de:	data16 jg 0x416164
  4161e1:	test   eax,0x4a4655c3
  4161e6:	imul   esp,DWORD PTR ds:0x5ca7be10,0xe9fe44ab
  4161f0:	mov    cl,0x91
  4161f2:	jnp    0x416267
  4161f4:	cmp    DWORD PTR [ecx+esi*4],0x35
  4161f8:	inc    ecx
  4161f9:	(bad)  
  4161fa:	sbb    al,0xf
  4161fc:	sbb    al,0xe2
  4161fe:	bswap  ebp
  416200:	fcomi  st,st(4)
  416202:	mov    ah,0xb4
  416204:	mov    eax,DWORD PTR [edi]
  416206:	mov    WORD PTR [ebp+0x23],ds
  416209:	sti    
  41620a:	ins    DWORD PTR es:[edi],dx
  41620b:	push   edx
  41620c:	sti    
  41620d:	rol    al,cl
  41620f:	and    esp,DWORD PTR [ebp+0x729b949a]
  416215:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416216:	rol    DWORD PTR [edi+esi*2],1
  416219:	fisttp DWORD PTR es:[ebx-0x1b110f]
  416220:	ins    DWORD PTR es:[edi],dx
  416221:	fwait
  416222:	in     al,dx
  416223:	mov    DWORD PTR [ebx],0xfca3854e
  416229:	mov    dl,BYTE PTR [edx]
  41622b:	arpl   dx,cx
  41622d:	mov    ebp,0xe173bfc0
  416232:	nop
  416233:	xchg   ebx,eax
  416234:	and    al,0x89
  416236:	adc    DWORD PTR [ebx],esi
  416238:	dec    ebp
  416239:	xchg   edx,eax
  41623a:	dec    edx
  41623b:	xor    DWORD PTR [eax+eiz*2+0x1a66ccc],esi
  416242:	pop    ebp
  416243:	in     al,dx
  416244:	sar    BYTE PTR [edi],cl
  416246:	out    0x4e,al
  416248:	push   ebp
  416249:	in     eax,dx
  41624a:	fstp   TBYTE PTR [edi]
  41624c:	std    
  41624d:	mov    ecx,0x15708a0f
  416252:	pop    ecx
  416253:	pop    ss
  416254:	bound  esi,QWORD PTR [ebp+0x5aed2dbb]
  41625a:	mul    DWORD PTR [esp+ebx*4-0x1a]
  41625e:	les    eax,FWORD PTR [esi+0x3d5d1556]
  416264:	adc    dh,BYTE PTR [edx]
  416266:	mov    esp,0x1603708f
  41626b:	adc    BYTE PTR [eax],ch
  41626d:	pop    ebx
  41626e:	sahf   
  41626f:	call   0xe2d5e9fe
  416274:	je     0x416249
  416276:	aas    
  416277:	sub    eax,0x281135bf
  41627c:	jg     0x416237
  41627e:	mov    ebp,0x7c47b1c2
  416283:	and    BYTE PTR es:[ebp-0x51],al
  416287:	call   0x170b:0x28ea8666
  41628e:	into   
  41628f:	mov    al,ds:0xd733da4c
  416294:	fs push 0x35
  416297:	gs push si
  41629a:	pop    ds
  41629b:	imul   esp,DWORD PTR [ecx-0x42],0xe7b022a7
  4162a2:	sub    DWORD PTR cs:[edx+0x41607e8b],0x2ce75ebf
  4162ad:	xor    eax,0x8e981058
  4162b2:	inc    ecx
  4162b3:	push   es
  4162b4:	cwde   
  4162b5:	jmp    0x4162ea
  4162b7:	imul   edi,DWORD PTR [edi+0x1768c0b7],0xd
  4162be:	or     ebx,esp
  4162c0:	in     al,dx
  4162c1:	sbb    ebp,0xb746f811
  4162c7:	add    ebp,DWORD PTR [eax-0x54]
  4162ca:	daa    
  4162cb:	and    esp,DWORD PTR [edi]
  4162cd:	int3   
  4162ce:	inc    ebp
  4162cf:	jne    0x4162da
  4162d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d2:	sub    DWORD PTR [esi-0x20243e4d],0x6e
  4162d9:	cmp    bl,cl
  4162db:	push   ebp
  4162dc:	outs   dx,DWORD PTR ds:[esi]
  4162dd:	mov    eax,ds:0x5f98a2d9
  4162e2:	mov    esp,DWORD PTR [esi+eiz*1+0x718de0c]
  4162e9:	cmp    DWORD PTR [eax+edi*4-0x4149611d],esi
  4162f0:	push   ds
  4162f1:	(bad)  
  4162f2:	sbb    DWORD PTR ds:[esi-0x2c],0x74c6fdc6
  4162fa:	or     dh,al
  4162fc:	retf   
  4162fd:	(bad)  
  4162fe:	sub    BYTE PTR [ecx],dl
  416300:	bound  ebp,QWORD PTR ss:[esi]
  416303:	cmp    ebx,0x6a77a0d4
  416309:	jne    0x41633f
  41630b:	in     al,dx
  41630c:	push   edx
  41630d:	pop    es
  41630e:	or     BYTE PTR [eax+0x54],bl
  416311:	pop    edx
  416312:	sbb    BYTE PTR [ecx-0x42],ah
  416315:	mov    bh,0x7c
  416317:	add    eax,0xa74e1e15
  41631c:	adc    ch,BYTE PTR [edx-0x29]
  41631f:	push   cs
  416320:	or     eax,0x93e282bd
  416325:	mov    ebp,gs
  416327:	add    eax,0x74cbff74
  41632c:	les    esp,FWORD PTR [eax+0x19e84d94]
  416332:	sbb    eax,0x5be717da
  416337:	ss pop ss
  416339:	xor    ebp,DWORD PTR [eax]
  41633b:	cdq    
  41633c:	push   edx
  41633d:	nop
  41633e:	inc    ecx
  41633f:	fstp   st(6)
  416341:	push   edx
  416342:	scas   eax,DWORD PTR es:[edi]
  416343:	out    0xf4,al
  416345:	inc    ebx
  416346:	outs   dx,DWORD PTR ds:[esi]
  416347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416348:	in     al,dx
  416349:	inc    edx
  41634a:	mov    ebp,0xacc7e04b
  41634f:	jp     0x416320
  416351:	test   al,0x79
  416353:	xchg   BYTE PTR [ecx-0x4],bl
  416356:	adc    esi,0x5f518ad1
  41635c:	mov    ch,0x28
  41635e:	push   esi
  41635f:	and    al,0x86
  416361:	sbb    al,0xe9
  416363:	or     DWORD PTR [edx+0x438dcda0],ecx
  416369:	xchg   ecx,eax
  41636a:	test   eax,0xb37fc2ca
  41636f:	adc    al,0x95
  416371:	aaa    
  416372:	ret    0xffd1
  416375:	inc    ebp
  416376:	mov    bl,0x4a
  416378:	sub    dh,BYTE PTR es:[edi]
  41637b:	ins    BYTE PTR es:[edi],dx
  41637c:	mov    al,ss:0xe3bc40bd
  416382:	sub    DWORD PTR [ebx-0x70f6558c],eax
  416388:	jno    0x41638d
  41638a:	nop
  41638b:	mov    bl,bh
  41638d:	and    ecx,eax
  41638f:	pop    esp
  416390:	aad    0xaa
  416392:	ret    0x8d82
  416395:	or     eax,0x304b794a
  41639a:	enter  0x62d0,0xf5
  41639e:	sub    cl,dh
  4163a0:	(bad)  [ebx+0xeba24a1]
  4163a6:	push   eax
  4163a7:	hlt    
  4163a8:	int3   
  4163a9:	rcr    BYTE PTR [ebx],cl
  4163ab:	int    0xcf
  4163ad:	(bad)  
  4163ae:	jmp    0x41640b
  4163b0:	push   0xffffffdf
  4163b2:	popa   
  4163b3:	enter  0x6be6,0x63
  4163b7:	fisttp WORD PTR ds:0x574b9845
  4163bd:	jb     0x4163d0
  4163bf:	or     BYTE PTR [eax-0xe4054d0],0xeb
  4163c6:	or     eax,0x5e8294e
  4163cb:	xchg   ecx,eax
  4163cc:	inc    ebx
  4163cd:	shl    cl,0x7c
  4163d0:	imul   esp,DWORD PTR [edi],0x1c
  4163d3:	or     al,0xc8
  4163d5:	dec    ecx
  4163d6:	add    edx,esi
  4163d8:	cmp    eax,0x1af00ac6
  4163dd:	and    eax,0xcae3459f
  4163e2:	mov    ebx,edi
  4163e4:	(bad)  
  4163e5:	mov    dl,0x5a
  4163e7:	cmp    al,BYTE PTR [edi-0x30a73505]
  4163ed:	or     bh,BYTE PTR [eax-0xc8a9526]
  4163f3:	pop    eax
  4163f4:	and    esi,DWORD PTR [edx-0x49fa9992]
  4163fa:	fstp   TBYTE PTR [ecx-0x24]
  4163fd:	nop
  4163fe:	dec    ebp
  4163ff:	fisubr DWORD PTR [ebx-0x344925c6]
  416405:	loop   0x416460
  416407:	mov    ah,0xc3
  416409:	jl     0x4163eb
  41640b:	in     eax,dx
  41640c:	and    esp,DWORD PTR [esi+0x76]
  41640f:	stos   DWORD PTR es:[edi],eax
  416410:	jmp    0x41639b
  416412:	jg     0x41644d
  416414:	cs adc al,0x3f
  416417:	or     dh,bh
  416419:	adc    cl,ch
  41641b:	fsubp  st(6),st
  41641d:	neg    BYTE PTR [ecx]
  41641f:	mov    bh,0x6e
  416421:	inc    cx
  416423:	inc    ebx
  416424:	retf   
  416425:	neg    BYTE PTR [ebx-0x33c0c3b6]
  41642b:	pop    esi
  41642c:	add    DWORD PTR [ebp+eax*1+0x9c566c9],eax
  416433:	mov    es,edi
  416435:	mov    ds:0xa16dee74,eax
  41643a:	addr16 pop edi
  41643c:	and    eax,esi
  41643e:	cld    
  41643f:	dec    edx
  416440:	dec    ecx
  416441:	xchg   BYTE PTR [ecx],dh
  416443:	mov    ch,0xb1
  416445:	sub    DWORD PTR [bp+si-0x6294],0x487a345d
  41644e:	retf   
  41644f:	mov    dl,0x46
  416451:	aam    0x1a
  416453:	ror    DWORD PTR [ebp+eax*1-0x5a],1
  416457:	enter  0xa993,0xec
  41645b:	push   eax
  41645c:	jmp    FWORD PTR [edi+0x7d]
  41645f:	clc    
  416460:	push   esp
  416461:	sar    BYTE PTR [ecx],0x4e
  416464:	mov    dh,0x5a
  416466:	loopne 0x41640a
  416468:	test   DWORD PTR [esi],0xb1a62a59
  41646e:	jno    0x4164aa
  416470:	aas    
  416471:	pop    ds
  416472:	xlat   BYTE PTR ds:[ebx]
  416473:	cmp    al,0x4
  416475:	clc    
  416476:	xchg   esp,eax
  416477:	ja     0x416451
  416479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647a:	test   DWORD PTR [eax],0xe045a3d7
  416480:	adc    DWORD PTR [edi+0x8691948],edx
  416486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416487:	cdq    
  416488:	cld    
  416489:	pop    ss
  41648a:	iret   
  41648b:	popa   
  41648c:	lahf   
  41648d:	jge    0x4164ef
  41648f:	add    ebx,DWORD PTR [eax+0x13]
  416492:	push   ebx
  416493:	and    edi,DWORD PTR [edi]
  416495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416496:	ins    BYTE PTR es:[edi],dx
  416497:	mov    ebp,0x663f92f8
  41649c:	pop    ecx
  41649d:	cli    
  41649e:	dec    ebx
  41649f:	std    
  4164a0:	sub    DWORD PTR [ebp+0x1a2cdfd2],edx
  4164a6:	or     bh,bh
  4164a8:	xor    bh,BYTE PTR [ebx-0x4792dcaf]
  4164ae:	xchg   eax,ebx
  4164b0:	pop    esi
  4164b1:	jle    0x41648f
  4164b3:	retf   
  4164b4:	aam    0xeb
  4164b6:	jle    0x41646c
  4164b8:	aam    0x12
  4164ba:	pop    edx
  4164bb:	and    BYTE PTR [ebp+edi*4+0x7d455d21],dl
  4164c2:	and    eax,0xa7e77fcc
  4164c7:	sbb    al,0x7e
  4164c9:	mov    esp,0xe34da21c
  4164ce:	cmp    DWORD PTR [edi+0x7f],0xffffff97
  4164d2:	push   ebx
  4164d3:	sub    ch,al
  4164d5:	repz div DWORD PTR [edi-0x28661a42]
  4164dc:	add    al,al
  4164de:	repnz adc eax,0x219b53d4
  4164e4:	bound  ecx,QWORD PTR [eax-0x14301ad1]
  4164ea:	xchg   ecx,eax
  4164eb:	aad    0x50
  4164ed:	hlt    
  4164ee:	das    
  4164ef:	mov    eax,eax
  4164f1:	stos   DWORD PTR es:[edi],eax
  4164f2:	stos   DWORD PTR es:[edi],eax
  4164f3:	call   0xcdaf6d3d
  4164f8:	fldenv [ecx+eax*8]
  4164fb:	and    dl,0xe4
  4164fe:	xor    ebp,ebp
  416500:	inc    ecx
  416501:	jmp    0x89863fef
  416506:	test   esi,ebp
  416508:	adc    eax,0x41af4498
  41650d:	push   es
  41650e:	fild   QWORD PTR [ebx]
  416510:	pop    ecx
  416511:	(bad)  
  416512:	adc    eax,0xb7421434
  416517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416518:	and    DWORD PTR [esp+edi*8-0x47],ebx
  41651c:	pop    eax
  41651d:	pop    ecx
  41651e:	push   0x5e
  416520:	or     eax,0x5be19274
  416525:	cmp    bl,dh
  416527:	and    al,0xca
  416529:	pop    edx
  41652a:	ds mov edi,0x51f2efd5
  416530:	mov    bl,0x2f
  416532:	je     0x41651f
  416534:	rol    DWORD PTR [ebx],cl
  416536:	dec    ebp
  416537:	pop    eax
  416538:	fcomp  DWORD PTR [edx-0x14d03dfb]
  41653e:	and    dh,cl
  416540:	(bad)  
  416541:	push   cs
  416542:	test   al,0x5c
  416544:	(bad)  
  416545:	lahf   
  416546:	sar    BYTE PTR [ebp-0x46],1
  416549:	fadd   DWORD PTR [ebp-0x2af87ee0]
  41654f:	xor    al,0x8
  416551:	ds sbb al,0xc0
  416554:	nop
  416555:	arpl   WORD PTR [esi-0x4fc2cf77],si
  41655b:	iret   
  41655c:	dec    ecx
  41655d:	push   esi
  41655e:	fbld   TBYTE PTR [ecx+0x3e]
  416561:	cmp    edi,DWORD PTR [edx*1+0x1881c78b]
  416568:	jmp    0xec78:0x2d0a0fcc
  41656f:	jecxz  0x416561
  416571:	inc    ebp
  416572:	lock mov ecx,esp
  416575:	or     al,0xc
  416577:	icebp  
  416578:	loop   0x4165d3
  41657a:	lods   eax,DWORD PTR ds:[esi]
  41657b:	adc    DWORD PTR [edx],ecx
  41657d:	test   ah,dl
  41657f:	pushf  
  416580:	or     al,0x1f
  416582:	xor    eax,DWORD PTR [edx+0x9567f20]
  416588:	jmp    0xc380:0xb70b0146
  41658f:	fstp   TBYTE PTR [ebx+ebp*8-0xa0ef73e]
  416596:	push   ss
  416597:	sahf   
  416598:	inc    edi
  416599:	mov    ss,WORD PTR [edx+0x54]
  41659c:	push   0x6566e18
  4165a1:	sub    al,0x81
  4165a3:	xor    esp,ecx
  4165a5:	in     eax,dx
  4165a6:	inc    esi
  4165a7:	stos   BYTE PTR es:[edi],al
  4165a8:	and    dl,bh
  4165aa:	repz jl 0x41661e
  4165ad:	sbb    al,0x17
  4165af:	push   ss
  4165b0:	repnz sub BYTE PTR [ebx-0x3fcf87b0],cl
  4165b7:	out    dx,eax
  4165b8:	stc    
  4165b9:	dec    edx
  4165ba:	jne    0x41659d
  4165bc:	jns    0x416579
  4165be:	mov    ch,0xf7
  4165c0:	push   ds
  4165c1:	adc    DWORD PTR [ecx],edx
  4165c3:	inc    esp
  4165c4:	dec    edx
  4165c5:	sbb    ch,BYTE PTR [eax+ecx*8]
  4165c8:	adc    al,0xc2
  4165ca:	nop
  4165cb:	add    edi,DWORD PTR [ecx-0x34]
  4165ce:	xor    ah,BYTE PTR [edx+eax*1]
  4165d1:	(bad)  
  4165d4:	cdq    
  4165d5:	push   ecx
  4165d6:	outs   dx,BYTE PTR ds:[esi]
  4165d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165d8:	or     dh,BYTE PTR [esi]
  4165da:	xchg   edi,eax
  4165db:	add    eax,0xbcf23536
  4165e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e1:	leave  
  4165e2:	popa   
  4165e3:	pop    ebx
  4165e4:	sub    DWORD PTR [edi-0x3],edx
  4165e7:	(bad)  
  4165e8:	push   edi
  4165e9:	xor    BYTE PTR [ebx+0x67],0x22
  4165ed:	and    eax,0x879413e1
  4165f2:	sbb    bl,0xbd
  4165f5:	inc    ecx
  4165f6:	aad    0xb2
  4165f8:	ss sahf 
  4165fa:	or     eax,0xc6bf1e49
  4165ff:	arpl   dx,bp
  416601:	ss shr edi,0xef
  416605:	jle    0x4165b7
  416607:	push   edi
  416608:	mov    dh,0xd9
  41660a:	mov    ah,BYTE PTR [eax]
  41660c:	lahf   
  41660d:	icebp  
  41660e:	and    eax,0xe31a7cea
  416613:	xor    BYTE PTR [edi+0x2],ch
  416616:	leave  
  416617:	jns    0x416641
  416619:	inc    ebp
  41661a:	xchg   esi,eax
  41661b:	adc    ebx,ebp
  41661d:	jae    0x416639
  41661f:	ret    0x98be
  416622:	(bad)  
  416623:	dec    edi
  416624:	retf   
  416625:	retf   0xf771
  416628:	imul   ebp,DWORD PTR [edx-0x67],0xffffffd7
  41662c:	leave  
  41662d:	pop    edx
  41662e:	outs   dx,DWORD PTR ds:[esi]
  41662f:	push   0xed564b2a
  416634:	sub    eax,0xd96d3c81
  416639:	ins    BYTE PTR es:[edi],dx
  41663a:	xor    edi,edi
  41663c:	nop
  41663d:	or     ah,ch
  41663f:	dec    ebx
  416640:	xor    bh,ah
  416642:	dec    edx
  416643:	mov    ds,ebx
  416645:	popa   
  416646:	jo     0x416637
  416648:	stos   DWORD PTR es:[edi],eax
  416649:	mov    ebx,0x692314c2
  41664e:	sub    ebx,DWORD PTR [ecx+0x23]
  416651:	xchg   esi,eax
  416652:	hlt    
  416653:	push   ebp
  416654:	aas    
  416655:	out    dx,al
  416656:	sub    ebx,DWORD PTR [esi+0x51]
  416659:	cmc    
  41665a:	inc    edx
  41665b:	inc    esp
  41665c:	cmp    edx,DWORD PTR [ecx+eiz*4+0x14e6425]
  416663:	imul   esi,DWORD PTR [edx+0x6fec13a0],0x0
  41666a:	scas   eax,DWORD PTR es:[edi]
  41666b:	test   al,0x6
  41666d:	out    dx,eax
  41666e:	popf   
  41666f:	test   DWORD PTR [edx+0x5b],esi
  416672:	lahf   
  416673:	adc    DWORD PTR [edx+edx*4],esp
  416676:	call   0xc26f86d2
  41667b:	js     0x416609
  41667d:	in     eax,0xde
  41667f:	loop   0x416690
  416681:	loop   0x416641
  416683:	js     0x41669a
  416685:	sub    BYTE PTR [ecx],cl
  416687:	mov    al,0xeb
  416689:	ret    
  41668a:	stc    
  41668b:	(bad)  
  41668c:	sti    
  41668d:	mov    ecx,0xf20bd1f2
  416692:	jae    0x416629
  416694:	jne    0x41663b
  416696:	inc    eax
  416697:	ja     0x4166da
  416699:	inc    ecx
  41669a:	mov    ecx,0xd263dd1e
  41669f:	pop    eax
  4166a1:	clc    
  4166a2:	outs   dx,BYTE PTR ds:[esi]
  4166a3:	sub    al,0x31
  4166a5:	int    0x54
  4166a7:	jp     0x4166f3
  4166a9:	sbb    cl,ah
  4166ab:	fnsave [esi-0x19]
  4166ae:	repz sbb cl,ah
  4166b1:	mov    cl,0x61
  4166b3:	ret    
  4166b4:	xchg   ebx,eax
  4166b5:	std    
  4166b6:	les    ebp,FWORD PTR [edi]
  4166b8:	mov    ecx,0x8d8768ed
  4166bd:	push   ebp
  4166be:	ins    BYTE PTR es:[edi],dx
  4166bf:	test   BYTE PTR [eax-0x24],bl
  4166c2:	adc    esp,0xe1197f9c
  4166c8:	xchg   edi,eax
  4166c9:	outs   dx,BYTE PTR ds:[esi]
  4166ca:	mov    cl,0x6
  4166cc:	loopne 0x4166dc
  4166ce:	adc    BYTE PTR [eax+0x1e270b5c],dl
  4166d4:	scas   al,BYTE PTR es:[edi]
  4166d5:	sub    DWORD PTR [esi+eiz*4],eax
  4166d8:	cmp    DWORD PTR [edi+0x4471106e],ecx
  4166de:	int    0xf3
  4166e0:	(bad)  
  4166e1:	mov    WORD PTR [ebp+0x133789e5],fs
  4166e7:	imul   ebp,DWORD PTR [ebp+0x1939b36f],0x8500c220
  4166f1:	call   0xbcd2:0x81880ec7
  4166f8:	inc    ebx
  4166f9:	pushf  
  4166fa:	and    eax,0xf784c118
  4166ff:	loop   0x41674c
  416701:	push   0x3d
  416703:	and    esp,esi
  416705:	es or  eax,0xa938108d
  41670b:	sub    BYTE PTR [ecx+edi*1+0x72],dl
  41670f:	scas   eax,DWORD PTR es:[edi]
  416710:	and    al,0xb5
  416712:	push   es
  416713:	xlat   BYTE PTR ds:[ebx]
  416714:	imul   ebx,DWORD PTR [edi+0x3d],0xffffff92
  416718:	js     0x41675e
  41671a:	and    DWORD PTR [edx],edx
  41671c:	mov    edx,0xb25ab44f
  416721:	repz pop esi
  416723:	je     0x4166e6
  416725:	xchg   ebx,eax
  416726:	repnz test DWORD PTR [ebx],0x5a5059f2
  41672d:	mov    dl,0x55
  41672f:	mov    eax,ds:0x6bbf18c5
  416734:	fisub  WORD PTR [edx-0x37]
  416737:	mov    al,0xe7
  416739:	mov    ecx,0xe7345243
  41673e:	or     eax,0xfcb0d27e
  416743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416744:	jge    0x416784
  416746:	push   esi
  416747:	sub    DWORD PTR [edx-0x1d],eax
  41674a:	xor    edi,ebp
  41674c:	repz inc DWORD PTR [edx+0x249b8639]
  416753:	push   es
  416754:	fcomp  DWORD PTR [esi+0x7d258eb3]
  41675a:	mov    al,0x6c
  41675c:	outs   dx,BYTE PTR ds:[esi]
  41675d:	mov    eax,0xbfef050f
  416762:	aas    
  416763:	dec    edi
  416764:	xlat   BYTE PTR ds:[ebx]
  416765:	dec    ecx
  416766:	gs loope 0x416787
  416769:	inc    edi
  41676a:	retf   
  41676b:	pop    esi
  41676c:	es xchg esp,eax
  41676e:	retf   0xf764
  416771:	dec    eax
  416772:	stos   DWORD PTR es:[edi],eax
  416773:	scas   eax,DWORD PTR es:[edi]
  416774:	xor    ch,ch
  416776:	rcl    DWORD PTR [esi+0x75779c2b],1
  41677c:	or     DWORD PTR [esi],esp
  41677e:	popf   
  41677f:	les    ebx,FWORD PTR [eax+ebx*4]
  416782:	jl     0x4167f6
  416784:	jae    0x41677c
  416786:	xchg   ebp,eax
  416787:	push   ss
  416788:	sub    DWORD PTR [edi+eiz*2+0x7a724350],edi
  41678f:	mov    al,ds:0xffaaf8da
  416794:	loope  0x41679d
  416796:	out    dx,al
  416797:	outs   dx,DWORD PTR ds:[esi]
  416798:	and    al,0x95
  41679a:	sahf   
  41679b:	cld    
  41679c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41679d:	add    dl,al
  41679f:	retf   
  4167a0:	mov    al,ds:0x4d702d5d
  4167a5:	fs xchg edx,eax
  4167a7:	xor    al,0x8
  4167a9:	hlt    
  4167aa:	mov    al,0x2e
  4167ac:	sub    ah,0xee
  4167af:	jb     0x41674f
  4167b1:	or     ecx,DWORD PTR [ebx-0x4e]
  4167b4:	retf   
  4167b5:	pop    esp
  4167b6:	ret    0xa8d9
  4167b9:	pop    edx
  4167ba:	(bad)  
  4167bb:	repz add DWORD PTR [edi],0xe946b0ef
  4167c2:	mov    WORD PTR [ebp+eax*8+0x34],gs
  4167c6:	call   0x4fcd:0x676495d7
  4167cd:	pop    ds
  4167ce:	push   cs
  4167cf:	mov    bl,0x2a
  4167d1:	pop    ss
  4167d2:	xor    DWORD PTR [edi-0x15e8f301],ecx
  4167d8:	pop    edx
  4167d9:	jo     0x4167f1
  4167db:	xchg   ecx,eax
  4167dc:	push   0x66ee3c08
  4167e1:	lock out 0x32,eax
  4167e4:	int    0x6b
  4167e6:	rcr    DWORD PTR [edx+edx*2+0x6a],0x70
  4167eb:	nop
  4167ec:	lods   al,BYTE PTR ds:[esi]
  4167ed:	mov    al,ds:0xb964299f
  4167f2:	daa    
  4167f3:	jmp    0x4167be
  4167f5:	mov    ds:0x97767e10,eax
  4167fa:	mov    ebx,0x15fdb244
  4167ff:	(bad)  
  416800:	jmp    0x41684b
  416802:	into   
  416803:	dec    ecx
  416804:	imul   esp,esp,0xffffff9b
  416807:	add    al,0xdb
  416809:	cmc    
  41680a:	add    DWORD PTR [edx+0x71],esi
  41680d:	lods   eax,DWORD PTR ds:[esi]
  41680e:	loopne 0x4167bb
  416810:	and    cl,BYTE PTR [eax+esi*4+0x7e0e2221]
  416817:	xor    esi,DWORD PTR [ecx]
  416819:	sub    ebp,eax
  41681b:	stos   DWORD PTR es:[edi],eax
  41681c:	stc    
  41681d:	rol    BYTE PTR [esi],cl
  41681f:	mov    edi,0xb260b7c5
  416824:	ds out dx,eax
  416826:	or     cl,al
  416828:	out    dx,eax
  416829:	mov    bl,0xd2
  41682b:	xchg   edx,edi
  41682d:	pop    esi
  41682e:	call   0x83f2:0xdfa3fe4d
  416835:	adc    eax,ebx
  416837:	ds pop eax
  416839:	pop    esp
  41683a:	adc    BYTE PTR [ecx+0x37],0x25
  41683e:	sub    ah,BYTE PTR [ecx+0x7f]
  416841:	es (bad) 
  416843:	sub    cl,BYTE PTR [esi]
  416845:	inc    edx
  416846:	mov    ebx,0xafa18d94
  41684b:	xlat   BYTE PTR ss:[ebx]
  41684d:	pop    edi
  41684e:	retf   0x3e1d
  416851:	icebp  
  416852:	xchg   edi,eax
  416853:	addr16 call 0x6017172b
  416859:	iret   
  41685a:	sbb    eax,0x66727c10
  41685f:	enter  0xe47d,0xf7
  416863:	pop    ss
  416864:	pop    edx
  416865:	and    BYTE PTR [edx-0x2a],bh
  416868:	push   ds
  416869:	inc    edx
  41686a:	popf   
  41686b:	(bad)
  41686e:	lods   eax,DWORD PTR ds:[esi]
  41686f:	mov    bh,0x24
  416871:	es jle 0x416826
  416874:	loop   0x41684c
  416876:	xor    BYTE PTR [esi],dl
  416878:	or     dl,bl
  41687a:	adc    eax,ebx
  41687c:	adc    DWORD PTR fs:[edx+0x5bc750d4],esi
  416883:	int3   
  416884:	jae    0x4168d4
  416886:	clc    
  416887:	(bad)  
  416888:	or     eax,DWORD PTR [eax]
  41688a:	cmp    BYTE PTR [ebx],bl
  41688c:	xor    BYTE PTR [edx-0x6ae89205],bh
  416892:	pop    esp
  416893:	arpl   dx,di
  416895:	ret    0xd5a2
  416898:	xor    eax,0x76b88442
  41689d:	xchg   ecx,eax
  41689e:	popa   
  41689f:	sbb    DWORD PTR [esi],ecx
  4168a1:	adc    DWORD PTR [esi+0x36125e87],ebx
  4168a7:	mov    cl,ch
  4168a9:	mov    bh,0xd0
  4168ab:	pop    ebx
  4168ac:	std    
  4168ad:	xchg   DWORD PTR ds:0x60d0416c,ebp
  4168b3:	sbb    ah,bh
  4168b5:	daa    
  4168b6:	jae    0x416839
  4168b8:	push   DWORD PTR [esi-0x33]
  4168bb:	xchg   ebx,eax
  4168bc:	add    ecx,ecx
  4168be:	ins    DWORD PTR es:[edi],dx
  4168bf:	ins    BYTE PTR es:[edi],dx
  4168c0:	out    0x1b,eax
  4168c2:	mov    eax,ds:0xaff84b20
  4168c7:	dec    esp
  4168c8:	adc    edx,edi
  4168ca:	push   esi
  4168cb:	cdq    
  4168cc:	mov    dl,0x44
  4168ce:	pop    ecx
  4168cf:	stc    
  4168d0:	in     al,dx
  4168d1:	sbb    BYTE PTR [edi-0x3f],0xea
  4168d5:	leave  
  4168d6:	arpl   WORD PTR [esi],dx
  4168d8:	and    eax,0x49fdd703
  4168dd:	ret    
  4168de:	jno    0x41693b
  4168e0:	or     BYTE PTR [eax-0x5e504021],bh
  4168e6:	cmp    ah,0xcd
  4168e9:	mov    cl,bh
  4168eb:	jmp    0xba10:0x3daacf48
  4168f2:	and    DWORD PTR [edi+ebx*1-0x24],ebp
  4168f6:	mov    eax,ds:0x7f9243ad
  4168fb:	leave  
  4168fc:	aaa    
  4168fd:	mul    DWORD PTR [eax+edx*1]
  416900:	int3   
  416901:	mov    esp,edx
  416903:	xor    dh,al
  416905:	ss pop ebp
  416907:	mov    esi,0x7efe18a2
  41690c:	ja     0x41694a
  41690e:	aas    
  41690f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416910:	fsin   
  416912:	mov    ah,0xdd
  416914:	xor    DWORD PTR [esi-0x77f47dd5],0x3e8b1057
  41691e:	pop    ebp
  41691f:	in     eax,0x6d
  416921:	data16 cli 
  416923:	loopne 0x4168fd
  416925:	xchg   ecx,eax
  416926:	jp     0x416920
  416928:	ror    DWORD PTR [eax],0x27
  41692b:	sub    BYTE PTR [eax],dl
  41692d:	lock lds eax,FWORD PTR [esi-0x49912c94]
  416934:	and    BYTE PTR [edx],0x63
  416937:	cld    
  416938:	jmp    0x416912
  41693a:	aam    0x10
  41693c:	ins    BYTE PTR es:[edi],dx
  41693d:	push   0xffffffa7
  41693f:	(bad)  
  416940:	jo     0x4169ab
  416942:	mov    eax,ds:0x5f9e15da
  416947:	dec    ecx
  416948:	push   0xc85b3e3e
  41694d:	ins    BYTE PTR es:[edi],dx
  41694e:	shl    DWORD PTR ds:0x9803022b,cl
  416954:	imul   ebp,DWORD PTR [edi+0x16],0x22e25921
  41695b:	or     BYTE PTR [edi+0x4f1f9750],ah
  416961:	arpl   WORD PTR [ebp-0x4f326c73],di
  416967:	or     eax,0x984b57f5
  41696c:	adc    dh,0xe4
  41696f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416970:	add    esi,edi
  416972:	mov    bl,0x53
  416974:	mov    al,0x30
  416976:	scas   eax,DWORD PTR es:[edi]
  416977:	or     BYTE PTR [ebx+edx*2-0x529b61c6],al
  41697e:	and    BYTE PTR [esi-0x1],cl
  416981:	cmp    eax,0xdf87b46d
  416986:	imul   eax,edi,0xa70dc8e0
  41698c:	jge    0x416926
  41698e:	fcomp  QWORD PTR [ecx+0x29]
  416991:	mov    edi,0xf1c31ca4
  416996:	pop    edi
  416997:	xchg   esp,eax
  416998:	and    dh,bl
  41699a:	pop    edx
  41699b:	mov    edx,ds
  41699d:	loopne 0x416987
  41699f:	jmp    0x416995
  4169a1:	call   DWORD PTR [edi+edi*8]
  4169a4:	aaa    
  4169a5:	mov    ch,0xac
  4169a7:	gs aam 0x5c
  4169aa:	pop    ebp
  4169ab:	mov    ecx,0x85194f26
  4169b0:	fldenv [edi+esi*4+0x9dc4ef0]
  4169b7:	test   al,0xeb
  4169b9:	fadd   QWORD PTR [ebx-0x6]
  4169bc:	in     eax,0x9f
  4169be:	call   0x1c6c:0xe860989c
  4169c5:	ficomp WORD PTR [ebp+0xa]
  4169c8:	(bad)  
  4169c9:	mov    al,ds:0x8f82816f
  4169ce:	das    
  4169cf:	out    dx,eax
  4169d0:	sbb    al,al
  4169d2:	push   ds
  4169d3:	mov    dh,0xff
  4169d5:	daa    
  4169d6:	neg    DWORD PTR [eax]
  4169d8:	mov    ebx,0x6f864caf
  4169dd:	xchg   eax,ebp
  4169df:	ficom  WORD PTR [eax-0x1e]
  4169e2:	sbb    al,0x6c
  4169e4:	xor    esi,DWORD PTR [esi-0x36]
  4169e7:	pop    eax
  4169e8:	inc    esp
  4169e9:	push   ebx
  4169ea:	sbb    DWORD PTR [eax+0x77],0x70ee294f
  4169f1:	cld    
  4169f2:	push   0xfffffff3
  4169f4:	sub    DWORD PTR [esi],edi
  4169f6:	mov    esp,0xd10fe5a2
  4169fb:	out    0x29,eax
  4169fd:	fdiv   st,st(1)
  4169ff:	(bad)  
  416a01:	fmul   QWORD PTR [ebx+0x3b8df00c]
  416a07:	(bad)  
  416a08:	add    esp,ecx
  416a0a:	jbe    0x4169fd
  416a0c:	enter  0x2b5c,0x93
  416a10:	scas   al,BYTE PTR es:[edi]
  416a11:	mov    dh,BYTE PTR [edx]
  416a13:	adc    al,0x68
  416a15:	(bad)  
  416a16:	retf   0x5a12
  416a19:	push   0xffffffc4
  416a1b:	mov    esi,0x65401380
  416a20:	(bad)  
  416a21:	cmp    eax,0x3e8b5893
  416a26:	test   BYTE PTR [eax-0x3dd984af],dh
  416a2c:	gs dec ebx
  416a2e:	jnp    0x4169d9
  416a30:	add    BYTE PTR [ebp-0x12],ch
  416a33:	in     al,dx
  416a34:	adc    esi,DWORD PTR [eax]
  416a36:	or     ecx,0x8763c71b
  416a3c:	aam    0x2d
  416a3e:	retfw  0x9e93
  416a42:	(bad)  
  416a43:	les    esp,FWORD PTR [eax-0x3d]
  416a46:	lock pop esp
  416a48:	xchg   edi,eax
  416a49:	pop    ecx
  416a4a:	nop
  416a4b:	sub    DWORD PTR [eax+0x3de83cf5],esi
  416a51:	sar    DWORD PTR [edi+0x8],1
  416a54:	aam    0x97
  416a56:	nop
  416a57:	mov    ebx,ss
  416a59:	lahf   
  416a5a:	sahf   
  416a5b:	jge    0x416a47
  416a5d:	cli    
  416a5e:	mov    esi,0xbe99b426
  416a63:	imul   edx,ecx,0x3e
  416a66:	jns    0x4169ec
  416a68:	shr    BYTE PTR [ecx],0x74
  416a6b:	stos   DWORD PTR es:[edi],eax
  416a6c:	cmp    cl,al
  416a6e:	push   0xbf6dd5a2
  416a73:	test   eax,0xbde6d8ce
  416a78:	mov    ebp,0x279fea37
  416a7d:	les    ecx,FWORD PTR [ecx]
  416a7f:	dec    ebp
  416a80:	sbb    edi,ebp
  416a82:	jae    0x416ac1
  416a84:	(bad)  
  416a85:	dec    ebp
  416a86:	test   BYTE PTR [bx+si],dl
  416a89:	aaa    
  416a8a:	add    al,0xdc
  416a8c:	mov    eax,0xbdf2dfd9
  416a91:	popf   
  416a92:	sbb    esp,DWORD PTR [ebp-0x56]
  416a95:	jmp    0x603bbc9a
  416a9a:	mov    edx,0x7c1e5b12
  416a9f:	add    cl,bh
  416aa1:	loop   0x416afe
  416aa3:	(bad)  
  416aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aa5:	sbb    eax,0xac03db1d
  416aaa:	popa   
  416aab:	loope  0x416a54
  416aad:	call   0x163729af
  416ab2:	jnp    0x416a71
  416ab4:	dec    edi
  416ab5:	hlt    
  416ab6:	cwde   
  416ab7:	adc    dl,BYTE PTR [esi-0x31]
  416aba:	sahf   
  416abb:	cld    
  416abc:	loope  0x416b0e
  416abe:	mov    cs,esp
  416ac0:	cmp    al,0x22
  416ac2:	xlat   BYTE PTR ds:[ebx]
  416ac3:	arpl   WORD PTR [edx+ebx*8],si
  416ac6:	and    cl,BYTE PTR [ecx+edx*4+0xc317009]
  416acd:	add    eax,0xee11130f
  416ad2:	idiv   bh
  416ad4:	mov    ds:0x6826fd86,al
  416ad9:	lea    esi,[esi+0x33efd7ee]
  416adf:	sub    BYTE PTR [edi-0x15],0x5e
  416ae3:	mov    bh,0x97
  416ae5:	pop    esp
  416ae6:	je     0x416aed
  416ae8:	push   esi
  416ae9:	cli    
  416aea:	dec    esi
  416aeb:	adc    BYTE PTR [eax+0x47275317],cl
  416af1:	rcpps  xmm3,XMMWORD PTR [eax]
  416af4:	mov    ch,0xa5
  416af6:	and    ecx,DWORD PTR ds:0x9915ca21
  416afc:	frstor [ebp+ebp*8-0xc]
  416b00:	outs   dx,DWORD PTR ds:[esi]
  416b01:	mov    DWORD PTR [edx],edi
  416b03:	scas   eax,DWORD PTR es:[edi]
  416b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b05:	call   0x7c9b39a1
  416b0a:	into   
  416b0b:	fadd   DWORD PTR ds:0x85bb282e
  416b11:	xor    al,0x44
  416b13:	push   es
  416b14:	lahf   
  416b15:	sbb    BYTE PTR [edx+edi*1+0x1e016cc8],bl
  416b1c:	sbb    BYTE PTR [edi],bh
  416b1e:	psubusw mm2,QWORD PTR [eax+ebp*4]
  416b22:	mov    ds:0x11f48934,al
  416b27:	dec    ebx
  416b28:	inc    esi
  416b29:	clc    
  416b2a:	gs inc edi
  416b2c:	pop    esi
  416b2d:	and    DWORD PTR [edi],esi
  416b2f:	mov    es,ebx
  416b31:	cmp    al,0x16
  416b33:	add    ah,dl
  416b35:	pop    esi
  416b36:	xchg   esp,eax
  416b37:	outs   dx,BYTE PTR ds:[esi]
  416b38:	add    eax,0x4121d10a
  416b3d:	out    dx,eax
  416b3e:	iret   
  416b3f:	sahf   
  416b40:	adc    eax,0xb12bad69
  416b45:	mov    cl,0x2e
  416b47:	jp     0x416b6a
  416b49:	push   esi
  416b4a:	jmp    DWORD PTR [ecx]
  416b4c:	ds or  eax,0xb9ac3727
  416b52:	add    dh,BYTE PTR [eax]
  416b54:	jnp    0x416ad9
  416b56:	mov    ebp,0xb3254d95
  416b5b:	sub    al,0xb8
  416b5d:	jmp    0xf269:0x5668e8f3
  416b64:	xchg   ecx,eax
  416b65:	xor    edx,eax
  416b67:	push   cs
  416b68:	cmp    cl,BYTE PTR [ebx+0x1a164708]
  416b6e:	fisttp WORD PTR [eax+ecx*2]
  416b71:	sub    BYTE PTR [ebx+0x4a],dh
  416b74:	pop    esp
  416b75:	cmp    BYTE PTR [esi+eax*1-0x69],0x45
  416b7a:	sbb    al,0xb9
  416b7c:	(bad)  
  416b7e:	arpl   WORD PTR [esi],sp
  416b80:	je     0x416c01
  416b82:	vaddss xmm2,xmm1,DWORD PTR [eax+ecx*8-0x1b05c1df]
  416b8b:	add    bh,0xcd
  416b8e:	inc    ebx
  416b8f:	lock stos BYTE PTR es:[edi],al
  416b91:	jle    0x416b4f
  416b93:	gs cli 
  416b95:	pushf  
  416b96:	xor    edi,edi
  416b98:	iret   
  416b99:	rcl    BYTE PTR [ebp-0x5b],cl
  416b9c:	cld    
  416b9d:	xchg   edx,eax
  416b9e:	dec    edi
  416b9f:	cmc    
  416ba0:	ss dec esi
  416ba3:	test   eax,0x1293047f
  416ba8:	jae    0x416b52
  416baa:	and    eax,DWORD PTR [ebp+0xa]
  416bad:	addr16 push 0x20
  416bb0:	lock sub eax,0xda4d84d7
  416bb6:	and    dl,BYTE PTR [ebp+0x50]
  416bb9:	push   ss
  416bba:	inc    ebp
  416bbb:	xchg   ecx,eax
  416bbc:	inc    edx
  416bbd:	cld    
  416bbe:	dec    edi
  416bbf:	adc    eax,0x7b6a5242
  416bc4:	xchg   BYTE PTR [esi+0x431cac7f],dl
  416bca:	pushf  
  416bcb:	push   edi
  416bcc:	out    0xea,eax
  416bce:	and    BYTE PTR [eax],0x26
  416bd1:	inc    ebp
  416bd2:	inc    esi
  416bd3:	push   ecx
  416bd4:	jl     0x416c1e
  416bd6:	and    al,0xbe
  416bd8:	jne    0x7c74dc38
  416bde:	dec    esp
  416bdf:	cmp    al,0xc7
  416be1:	cmp    DWORD PTR [ecx-0x2efdbef6],ebx
  416be7:	pushf  
  416be8:	mov    DWORD PTR [ebx+0x67632db5],0xec8b84f2
  416bf2:	stos   DWORD PTR es:[edi],eax
  416bf3:	mov    ah,0x4b
  416bf5:	and    eax,0xef6afba9
  416bfa:	or     edx,DWORD PTR [edi-0x48]
  416bfd:	adc    esi,ebp
  416bff:	lods   eax,DWORD PTR es:[esi]
  416c01:	mov    bh,0x3e
  416c03:	ret    
  416c04:	(bad)  
  416c05:	out    0x60,al
  416c07:	rcl    ebx,0x59
  416c0a:	pop    edi
  416c0b:	jp     0x416bf0
  416c0d:	pop    ecx
  416c0e:	rol    dl,0x8b
  416c11:	or     eax,0x4198334d
  416c16:	jp     0x416c04
  416c18:	mov    ds,ecx
  416c1a:	mov    ch,0x2e
  416c1c:	mov    ah,0x41
  416c1e:	repz pop ss
  416c20:	sbb    al,0xc9
  416c22:	(bad)  
  416c23:	mov    esi,0x7b057941
  416c28:	xchg   BYTE PTR [esi+eax*8],cl
  416c2b:	ins    DWORD PTR es:[edi],dx
  416c2c:	adc    dl,ah
  416c2e:	jnp    0x416ca3
  416c30:	retf   0xcebe
  416c33:	sbb    al,0xcb
  416c35:	(bad)
  416c39:	jge    0x416c69
  416c3b:	loopne 0x416c57
  416c3d:	push   esi
  416c3e:	sub    DWORD PTR [edi+0x4f511f],esp
  416c44:	shr    DWORD PTR [ebx+0x88d85c3],cl
  416c4a:	or     al,0x3c
  416c4d:	dec    ebp
  416c4e:	inc    ebx
  416c4f:	pop    edi
  416c50:	scas   eax,DWORD PTR es:[edi]
  416c51:	rcl    BYTE PTR [ebp+0x6b],0xe9
  416c55:	or     eax,0x289000e2
  416c5a:	push   cs
  416c5b:	push   ecx
  416c5c:	imul   eax,esp,0xfffffff4
  416c5f:	mov    DWORD PTR [ebx+0x26ec44d2],ebp
  416c65:	inc    ecx
  416c66:	xchg   ebp,eax
  416c67:	or     DWORD PTR [eax+ebx*2+0x517791d9],ebp
  416c6e:	rcr    DWORD PTR ds:0xb4fbdfcc,cl
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	pop    ebp
  416c76:	pop    edi
  416c77:	and    bh,BYTE PTR [eax+0x23]
  416c7a:	or     esi,DWORD PTR [edx]
  416c7c:	pop    eax
  416c7d:	adc    al,0xc6
  416c7f:	test   DWORD PTR [ecx-0x283b3ebf],esi
  416c85:	xchg   DWORD PTR [ebx+0x41],edx
  416c88:	pop    edx
  416c89:	(bad)  
  416c8a:	xor    al,0x83
  416c8c:	iret   
  416c8d:	aaa    
  416c8e:	adc    al,0x82
  416c90:	mov    ebx,DWORD PTR [ebp-0x8]
  416c93:	xor    edx,eax
  416c95:	xor    ebx,eax
  416c97:	sub    edx,ebx
  416c99:	sub    edx,esi
  416c9b:	xor    edx,eax
  416c9d:	mov    DWORD PTR [ebp+0x8],edx
  416ca0:	mov    edx,DWORD PTR [ebp+0x8]
  416ca3:	mov    ebx,DWORD PTR [ebp-0x58]
  416ca6:	add    edx,0x5708e2
  416cac:	imul   edx,ebx
  416caf:	mov    DWORD PTR [ebp-0x58],edx
  416cb2:	mov    edx,DWORD PTR [ebp+0x8]
  416cb5:	mov    ebx,DWORD PTR [ebp-0x54]
  416cb8:	add    edx,0x64f880
  416cbe:	or     edx,ebx
  416cc0:	mov    DWORD PTR [ebp-0x54],edx
  416cc3:	mov    edx,DWORD PTR [ebp+0x8]
  416cc6:	mov    ebx,DWORD PTR [ebp-0x50]
  416cc9:	add    edx,ecx
  416ccb:	xor    edx,ebx
  416ccd:	mov    DWORD PTR [ebp-0x50],edx
  416cd0:	mov    edx,DWORD PTR [ebp+0x8]
  416cd3:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cd6:	add    edx,edi
  416cd8:	and    edx,ebx
  416cda:	mov    DWORD PTR [ebp-0x4c],edx
  416cdd:	mov    edx,DWORD PTR [ebp+0x8]
  416ce0:	mov    ebx,DWORD PTR [ebp-0x48]
  416ce3:	lea    edx,[ebx+edx*1+0x241fcdf]
  416cea:	mov    DWORD PTR [ebp-0x48],edx
  416ced:	mov    edx,DWORD PTR [ebp+0x8]
  416cf0:	mov    ebx,0xfa5e1524
  416cf5:	sub    ebx,edx
  416cf7:	add    ebx,DWORD PTR [ebp-0x44]
  416cfa:	mov    DWORD PTR [ebp-0x44],ebx
  416cfd:	mov    edx,DWORD PTR [ebp+0x8]
  416d00:	xor    edx,eax
  416d02:	add    edx,esi
  416d04:	jne    0x41492d
  416d0a:	jmp    0x416d97
  416d0f:	mov    edx,DWORD PTR [ebp-0x14]
  416d12:	mov    DWORD PTR [ebp+0x8],edx
  416d15:	jmp    0x416d8a
  416d1a:	mov    edx,DWORD PTR [ebp+0x8]
  416d1d:	mov    ebx,DWORD PTR [ebp-0x8]
  416d20:	xor    edx,eax
  416d22:	xor    ebx,eax
  416d24:	sub    edx,ebx
  416d26:	sub    edx,esi
  416d28:	xor    edx,eax
  416d2a:	mov    DWORD PTR [ebp+0x8],edx
  416d2d:	mov    edx,DWORD PTR [ebp+0x8]
  416d30:	mov    ebx,DWORD PTR [ebp-0x58]
  416d33:	add    edx,0x5708e2
  416d39:	imul   edx,ebx
  416d3c:	mov    DWORD PTR [ebp-0x58],edx
  416d3f:	mov    edx,DWORD PTR [ebp+0x8]
  416d42:	mov    ebx,DWORD PTR [ebp-0x54]
  416d45:	add    edx,0x64f880
  416d4b:	or     edx,ebx
  416d4d:	mov    DWORD PTR [ebp-0x54],edx
  416d50:	mov    edx,DWORD PTR [ebp+0x8]
  416d53:	mov    ebx,DWORD PTR [ebp-0x50]
  416d56:	add    edx,ecx
  416d58:	xor    edx,ebx
  416d5a:	mov    DWORD PTR [ebp-0x50],edx
  416d5d:	mov    edx,DWORD PTR [ebp+0x8]
  416d60:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d63:	add    edx,edi
  416d65:	and    edx,ebx
  416d67:	mov    DWORD PTR [ebp-0x4c],edx
  416d6a:	mov    edx,DWORD PTR [ebp+0x8]
  416d6d:	mov    ebx,DWORD PTR [ebp-0x48]
  416d70:	lea    edx,[ebx+edx*1+0x241fcdf]
  416d77:	mov    DWORD PTR [ebp-0x48],edx
  416d7a:	mov    edx,DWORD PTR [ebp+0x8]
  416d7d:	mov    ebx,0xfa5e1524
  416d82:	sub    ebx,edx
  416d84:	add    ebx,DWORD PTR [ebp-0x44]
  416d87:	mov    DWORD PTR [ebp-0x44],ebx
  416d8a:	mov    edx,DWORD PTR [ebp+0x8]
  416d8d:	xor    edx,eax
  416d8f:	add    edx,esi
  416d91:	jne    0x416d1a
  416d97:	mov    edx,DWORD PTR [ebp-0x14]
  416d9a:	mov    DWORD PTR [ebp+0x8],edx
  416d9d:	jmp    0x419172
  416da2:	mov    edx,DWORD PTR [ebp+0x8]
  416da5:	mov    ebx,DWORD PTR [ebp-0x8]
  416da8:	xor    edx,eax
  416daa:	xor    ebx,eax
  416dac:	sub    edx,ebx
  416dae:	sub    edx,esi
  416db0:	xor    edx,eax
  416db2:	mov    DWORD PTR [ebp+0x8],edx
  416db5:	mov    edx,DWORD PTR [ebp+0x8]
  416db8:	mov    ebx,DWORD PTR [ebp-0x58]
  416dbb:	add    edx,0x5708e2
  416dc1:	imul   edx,ebx
  416dc4:	mov    DWORD PTR [ebp-0x58],edx
  416dc7:	mov    edx,DWORD PTR [ebp+0x8]
  416dca:	mov    ebx,DWORD PTR [ebp-0x54]
  416dcd:	add    edx,0x64f880
  416dd3:	or     edx,ebx
  416dd5:	mov    DWORD PTR [ebp-0x54],edx
  416dd8:	mov    edx,DWORD PTR [ebp+0x8]
  416ddb:	mov    ebx,DWORD PTR [ebp-0x50]
  416dde:	add    edx,ecx
  416de0:	xor    edx,ebx
  416de2:	jmp    0x419142
  416de7:	adc    eax,0xa46b3bce
  416dec:	xchg   BYTE PTR ds:0xd7812f8a,al
  416df2:	add    BYTE PTR [edi-0x72],dl
  416df5:	ror    BYTE PTR [ebx-0x7c7fba8c],cl
  416dfb:	ds pop esi
  416dfd:	add    DWORD PTR [ebx+0x4cd1fe5b],0xb
  416e04:	sub    eax,0xfb2ea839
  416e09:	push   es
  416e0a:	jne    0x416e77
  416e0c:	xchg   esi,esp
  416e0e:	adc    al,0xb2
  416e10:	xor    ebp,DWORD PTR [ecx]
  416e12:	push   cs
  416e13:	in     al,dx
  416e14:	mov    fs,WORD PTR cs:[ecx-0x1b050bb7]
  416e1b:	sbb    eax,0xa9f83513
  416e20:	pop    ss
  416e21:	fild   WORD PTR [ecx]
  416e23:	stos   DWORD PTR es:[edi],eax
  416e24:	inc    esp
  416e25:	push   ebp
  416e26:	jae    0x416dba
  416e28:	outs   dx,BYTE PTR ds:[esi]
  416e29:	mov    dh,0xed
  416e2b:	mov    ebp,0x5382db23
  416e30:	dec    ecx
  416e31:	cmp    ebp,DWORD PTR [eax]
  416e33:	sbb    edi,DWORD PTR [ebx]
  416e35:	inc    eax
  416e36:	cwde   
  416e37:	scas   eax,DWORD PTR es:[edi]
  416e38:	inc    esi
  416e39:	(bad)  
  416e3b:	xchg   ebx,eax
  416e3c:	dec    edi
  416e3d:	out    0x17,al
  416e3f:	mov    ds:0x61c4d3b2,eax
  416e44:	mov    ?,WORD PTR [edi+0xe]
  416e47:	cld    
  416e48:	popf   
  416e49:	pop    es
  416e4a:	ins    DWORD PTR es:[edi],dx
  416e4b:	push   esp
  416e4c:	stos   BYTE PTR es:[edi],al
  416e4d:	mov    al,0x9f
  416e4f:	xor    eax,0x1a64c096
  416e54:	fimul  DWORD PTR [edi-0x48]
  416e57:	int3   
  416e58:	data16 addr16 jbe 0x416e06
  416e5c:	xor    eax,0x31d910c9
  416e61:	xor    DWORD PTR [esi-0x7103e214],edx
  416e67:	or     DWORD PTR [esi+edx*2],0xf2eda154
  416e6e:	push   0x611fd047
  416e73:	inc    esp
  416e74:	stos   BYTE PTR es:[edi],al
  416e75:	arpl   WORD PTR [ebx],dx
  416e77:	mov    al,ds:0x29e6686a
  416e7c:	cmp    eax,0x45081c24
  416e81:	(bad)  
  416e82:	popf   
  416e83:	(bad)  
  416e85:	shr    DWORD PTR [edi],1
  416e87:	call   0x1117:0xbc1ee4b4
  416e8e:	iret   
  416e8f:	daa    
  416e90:	jae    0x416e63
  416e92:	xchg   edx,eax
  416e93:	int    0x80
  416e95:	xor    BYTE PTR [ecx+0x1],dl
  416e98:	jp     0x416f17
  416e9a:	xchg   esp,eax
  416e9b:	jnp    0x416e52
  416e9d:	cmp    BYTE PTR [eax],0x63
  416ea0:	ins    DWORD PTR es:[edi],dx
  416ea1:	std    
  416ea2:	aam    0xa
  416ea4:	mov    dl,0x22
  416ea6:	cs mov eax,esp
  416ea9:	addr16 sahf 
  416eab:	neg    dh
  416ead:	sub    DWORD PTR [ecx+0x249262f5],esp
  416eb3:	mov    dh,0x78
  416eb5:	int3   
  416eb6:	jo     0x416f33
  416eb8:	xchg   edi,eax
  416eb9:	or     DWORD PTR [edi+0x5ec35636],eax
  416ebf:	lods   eax,DWORD PTR ds:[esi]
  416ec0:	repnz pop di
  416ec3:	test   eax,0x64bcaafe
  416ec8:	popf   
  416ec9:	pop    ss
  416eca:	mov    edi,0x8d49b04f
  416ecf:	jno    0x416ead
  416ed1:	mov    ds:0x96a71326,al
  416ed6:	cmp    al,0xae
  416ed8:	dec    esp
  416ed9:	push   edi
  416eda:	add    eax,0x25a2c4b0
  416edf:	fnstcw WORD PTR [eax]
  416ee1:	jmp    0x416f39
  416ee3:	adc    esi,ebx
  416ee5:	xchg   esp,eax
  416ee6:	jmp    0x643d:0x1332dcc6
  416eed:	in     eax,dx
  416eee:	mov    fs,WORD PTR [ebp-0x26]
  416ef1:	mov    bl,ch
  416ef3:	test   DWORD PTR [ecx+ebx*8-0x3d],0xa1f433d
  416efb:	stc    
  416efc:	in     eax,0xc3
  416efe:	jb     0x416f59
  416f00:	pop    edi
  416f01:	stc    
  416f02:	aas    
  416f03:	sti    
  416f04:	cmp    al,0x82
  416f06:	imul   esp,DWORD PTR [ecx],0x2
  416f09:	jp     0x416f1f
  416f0b:	push   ebx
  416f0c:	mov    ebx,0x74b68dbf
  416f11:	inc    eax
  416f12:	xor    dh,BYTE PTR [eax+0x39]
  416f15:	mov    bl,0x41
  416f17:	mov    ebx,0x680e208c
  416f1c:	(bad)  
  416f1d:	ins    DWORD PTR es:[edi],dx
  416f1e:	test   BYTE PTR [esi+0xd],cl
  416f21:	mov    bh,0x9
  416f23:	mov    ds,WORD PTR [edi+0x4605a2c8]
  416f29:	scas   al,BYTE PTR es:[edi]
  416f2a:	nop
  416f2b:	dec    eax
  416f2c:	xor    esp,DWORD PTR [eax]
  416f2e:	push   ebp
  416f2f:	push   esp
  416f30:	xor    edx,DWORD PTR ds:0xee60d70c
  416f36:	inc    eax
  416f37:	sbb    dl,BYTE PTR [eax-0x63]
  416f3a:	rol    BYTE PTR [ebx-0x1b],1
  416f3d:	add    DWORD PTR [edx-0x3d46e2ba],ebx
  416f43:	cmp    esi,ebx
  416f45:	jns    0x416f4b
  416f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f48:	pop    es
  416f49:	dec    esi
  416f4a:	cmp    dh,bl
  416f4c:	rcl    dl,1
  416f4e:	sub    BYTE PTR [esi+0x6b],ch
  416f51:	leave  
  416f52:	mov    BYTE PTR [esi-0x73f2c242],dl
  416f58:	adc    esi,edx
  416f5a:	out    dx,eax
  416f5b:	pop    ss
  416f5c:	xchg   bh,bh
  416f5e:	xchg   ebp,eax
  416f5f:	(bad)  
  416f60:	repz sbb eax,0x60ecd17b
  416f66:	inc    esp
  416f67:	pop    ebx
  416f68:	fistp  QWORD PTR [edi]
  416f6a:	xor    ch,dl
  416f6c:	push   ecx
  416f6d:	dec    esp
  416f6e:	xchg   esp,eax
  416f6f:	push   ebx
  416f70:	fwait
  416f71:	retf   
  416f72:	jae    0x416f1e
  416f74:	mov    ch,0x4d
  416f76:	lds    esi,FWORD PTR [esi]
  416f78:	mov    ebx,0xc97e098d
  416f7d:	jbe    0x416f51
  416f7f:	sub    eax,0x11a79263
  416f84:	push   ebx
  416f85:	in     al,dx
  416f86:	sub    ebx,DWORD PTR [edx-0x75]
  416f89:	inc    ebx
  416f8a:	fcom   QWORD PTR [eax-0x557eb050]
  416f90:	jmp    0x416f7b
  416f92:	adc    BYTE PTR [ecx+0x3d],ch
  416f95:	pop    ecx
  416f96:	xor    BYTE PTR [edi+0x47],cl
  416f99:	pop    edi
  416f9a:	jge    0x416f1f
  416f9c:	repnz sbb DWORD PTR [esi+0x19],ebp
  416fa0:	fwait
  416fa1:	jge    0x416f88
  416fa3:	xchg   edx,eax
  416fa4:	push   ebx
  416fa5:	js     0x41701d
  416fa7:	shr    ah,0x9d
  416faa:	in     al,dx
  416fab:	jae    0x416fcc
  416fad:	xchg   esi,eax
  416fae:	lock inc esi
  416fb0:	inc    ebx
  416fb1:	mov    dl,0x4d
  416fb3:	(bad)  
  416fb4:	adc    eax,0xdf2df8a0
  416fb9:	sub    esp,DWORD PTR [ebp+0x3f]
  416fbc:	jmp    DWORD PTR [edx-0xd5a4bea]
  416fc2:	lahf   
  416fc3:	not    DWORD PTR [ebp-0x48]
  416fc6:	test   WORD PTR [edx],0x16c
  416fcb:	imul   eax,DWORD PTR [edi+0x1d],0x15b4ac94
  416fd2:	ja     0x416fba
  416fd4:	in     eax,dx
  416fd5:	test   BYTE PTR [edi-0x77],al
  416fd8:	pop    ds
  416fd9:	je     0x416fb3
  416fdb:	jno    0x416fd1
  416fdd:	outs   dx,BYTE PTR ds:[esi]
  416fde:	into   
  416fdf:	push   ss
  416fe0:	cs mov ebx,0x734056fa
  416fe6:	push   ss
  416fe7:	dec    ecx
  416fe8:	rol    DWORD PTR [eax+0x62],1
  416feb:	mov    ebp,0xf6dda8bd
  416ff0:	iret   
  416ff1:	paddw  mm0,QWORD PTR [esi]
  416ff4:	mov    ecx,DWORD PTR [eax+0x4c6c10ca]
  416ffa:	push   esi
  416ffb:	lahf   
  416ffc:	mov    ebp,0x6ec5e8a0
  417001:	mov    BYTE PTR [ebx],ah
  417003:	mov    ebx,DWORD PTR [ecx+ebp*4]
  417006:	pop    edx
  417007:	fs aam 0x4e
  41700a:	out    0x15,al
  41700c:	adc    ebx,ebp
  41700e:	jnp    0x41704a
  417010:	jnp    0x416fb7
  417012:	or     al,0xec
  417014:	mov    esp,0xab95c8a8
  417019:	xlat   BYTE PTR ds:[ebx]
  41701a:	fstp   st(5)
  41701c:	or     eax,0x491e307
  417021:	callw  0x334c
  417025:	mov    dh,0xae
  417027:	xchg   edx,eax
  417028:	test   edi,esi
  41702a:	dec    edx
  41702b:	xor    eax,0x43de8182
  417030:	and    al,0x26
  417032:	xor    edi,ebp
  417034:	pushf  
  417035:	(bad)  
  417036:	gs pop ecx
  417038:	std    
  417039:	gs adc eax,0xe68f32b5
  41703f:	loope  0x417003
  417041:	(bad)  
  417042:	(bad)  
  417043:	retf   0x78e1
  417046:	test   al,0x7
  417048:	jnp    0x417046
  41704a:	dec    ebx
  41704b:	in     al,dx
  41704c:	(bad)  
  41704d:	or     ch,BYTE PTR [edi-0x6d94109e]
  417053:	push   ebx
  417054:	cmp    BYTE PTR [ebp+edx*1-0x4a588788],bl
  41705b:	ss gs ins BYTE PTR es:[edi],dx
  41705e:	aaa    
  41705f:	cdq    
  417060:	not    eax
  417062:	sti    
  417063:	(bad)  
  417065:	aam    0x96
  417067:	mov    BYTE PTR [edi+0x0],al
  41706a:	ja     0x4170b8
  41706c:	cmp    al,0x2e
  41706e:	out    dx,al
  41706f:	pushf  
  417070:	jecxz  0x4170aa
  417072:	mov    bh,0xe5
  417074:	call   0xefa8:0x2f98afb1
  41707b:	popf   
  41707c:	shl    dl,cl
  41707e:	stc    
  41707f:	dec    edx
  417080:	(bad)  
  417081:	cmp    eax,0x3b61186f
  417086:	(bad)  
  417087:	aad    0xcd
  417089:	rcl    BYTE PTR [eax-0x220f082f],1
  41708f:	add    edi,esp
  417091:	or     eax,0xc507514e
  417096:	jns    0x4170ff
  417098:	dec    esp
  417099:	mov    esi,0x131a471c
  41709e:	push   edi
  41709f:	jg     0x417087
  4170a1:	mov    BYTE PTR [edx+0x4f],al
  4170a4:	sbb    al,0x1
  4170a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a7:	ins    DWORD PTR es:[edi],dx
  4170a8:	rcl    DWORD PTR [eax],1
  4170aa:	fist   WORD PTR [edi-0x56]
  4170ad:	xchg   esi,eax
  4170ae:	aad    0xca
  4170b0:	sbb    eax,0x9bab1506
  4170b5:	xor    al,0x23
  4170b7:	dec    edi
  4170b8:	mov    esi,0xc6312343
  4170bd:	mul    DWORD PTR [ecx+0x6c6b0f35]
  4170c3:	stc    
  4170c4:	jo     0x4170f3
  4170c6:	mov    DWORD PTR [ebp+0x74b3c9fd],edx
  4170cc:	mov    bh,0x30
  4170ce:	fist   DWORD PTR [ebx]
  4170d0:	or     eax,0x8a4a48bb
  4170d5:	es xchg esi,eax
  4170d7:	enter  0x5186,0x46
  4170db:	mov    dl,0x4b
  4170dd:	cs push esi
  4170df:	push   eax
  4170e0:	push   edi
  4170e1:	or     eax,0xb87efa1a
  4170e6:	enter  0xc23f,0xb3
  4170ea:	popf   
  4170eb:	test   eax,eax
  4170ed:	iret   
  4170ee:	popf   
  4170ef:	dec    BYTE PTR [esp+ebp*8+0x791b857d]
  4170f6:	or     eax,0x73275d2c
  4170fb:	xor    eax,0x28420135
  417100:	rol    BYTE PTR [edx+0x5893bd5e],0xf4
  417107:	lahf   
  417108:	cs enter 0x4e18,0x90
  41710d:	mov    eax,ds:0xd4885470
  417112:	cmp    edi,eax
  417114:	and    al,0xf8
  417116:	jns    0x4170d9
  417118:	and    DWORD PTR [esi],edx
  41711a:	mov    esp,0xbadc8ea0
  41711f:	and    ecx,DWORD PTR [edi+0x6c512c77]
  417125:	cwde   
  417126:	lahf   
  417127:	and    eax,0x86793fae
  41712c:	fst    QWORD PTR [ebp+0x7f]
  41712f:	(bad)  
  417130:	jnp    0x41712e
  417132:	inc    ebx
  417133:	push   ss
  417134:	add    edx,ecx
  417136:	mov    dh,0xb6
  417138:	test   DWORD PTR [esi+0x46],ecx
  41713b:	xor    al,0xd9
  41713d:	inc    ebx
  41713e:	pop    ebp
  41713f:	push   esi
  417140:	xor    eax,0x9c0063fc
  417145:	pushf  
  417146:	and    BYTE PTR [ecx],cl
  417148:	test   DWORD PTR [ebp+0x79b0fe49],esi
  41714e:	lds    eax,FWORD PTR ds:0xb8677fea
  417154:	(bad)  
  417155:	pop    ecx
  417156:	inc    ecx
  417157:	popa   
  417158:	xor    BYTE PTR [esi-0x24],bh
  41715b:	push   esp
  41715c:	sub    eax,0xfe9d6e6f
  417161:	sub    BYTE PTR [esi-0x5219e789],ch
  417167:	fwait
  417168:	push   esi
  417169:	fwait
  41716a:	ins    BYTE PTR es:[edi],dx
  41716b:	xor    al,0x44
  41716d:	cmp    BYTE PTR [edx],bh
  41716f:	or     bl,ch
  417171:	mov    cl,0xe4
  417173:	mov    eax,0xa2b9bb39
  417178:	add    DWORD PTR [ebp+0x3d],edx
  41717b:	xor    ch,BYTE PTR [eax]
  41717d:	fs gs daa 
  417180:	cld    
  417181:	mov    eax,ds:0x72b88140
  417186:	inc    edx
  417187:	sub    ah,bh
  417189:	inc    ebx
  41718a:	push   ebx
  41718b:	nop
  41718c:	out    dx,al
  41718d:	fwait
  41718e:	xchg   ebx,eax
  41718f:	iret   
  417190:	stc    
  417191:	dec    ebx
  417192:	in     eax,dx
  417193:	out    dx,eax
  417194:	in     al,dx
  417195:	outs   dx,BYTE PTR ds:[esi]
  417196:	bound  esi,QWORD PTR ds:[ebp+0x50ea2585]
  41719d:	rol    DWORD PTR ds:[esi+0x42],cl
  4171a1:	ror    cl,1
  4171a3:	inc    esp
  4171a4:	or     edx,0xc00f4cb4
  4171aa:	or     eax,0xeb7cf4e4
  4171af:	mov    eax,ds:0xf37b4fd0
  4171b4:	jae    0x41717a
  4171b6:	mov    WORD PTR [edx-0x39],es
  4171b9:	add    cl,dh
  4171bb:	ds adc eax,0x87292c12
  4171c1:	xor    al,0x4
  4171c3:	scas   al,BYTE PTR es:[edi]
  4171c4:	jl     0x41718c
  4171c6:	cwde   
  4171c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171c8:	adc    BYTE PTR [esi-0x4f],al
  4171cb:	mov    edx,0xea28f4ee
  4171d0:	lods   al,BYTE PTR ds:[esi]
  4171d1:	retf   
  4171d2:	lods   al,BYTE PTR ds:[esi]
  4171d3:	push   ds
  4171d4:	pop    ebx
  4171d5:	fcmovnbe st,st(3)
  4171d7:	adc    edi,DWORD PTR [ecx+0x68da679c]
  4171dd:	xchg   BYTE PTR [ebp+0x3e],cl
  4171e0:	test   BYTE PTR [ebp+0x62],al
  4171e3:	jo     0x41725e
  4171e5:	call   0x22a8:0xb3c264a6
  4171ec:	loop   0x417175
  4171ee:	inc    eax
  4171ef:	sub    ebx,edx
  4171f1:	js     0x417183
  4171f3:	inc    edi
  4171f4:	or     ch,BYTE PTR [ebp+0xf]
  4171f7:	xlat   BYTE PTR ds:[ebx]
  4171f8:	and    DWORD PTR [esi+0x4f],eax
  4171fb:	mov    WORD PTR [ebx-0x30e6d329],?
  417201:	xchg   ebp,eax
  417202:	adc    al,cl
  417204:	mov    bl,0xa0
  417206:	es (bad) 
  417208:	cmp    eax,DWORD PTR [edi]
  41720a:	xchg   ebp,eax
  41720b:	sahf   
  41720c:	pop    es
  41720d:	mov    ds,WORD PTR [ecx+ecx*1+0x7bbb9d98]
  417214:	mov    fs,WORD PTR [esi]
  417216:	pusha  
  417217:	test   DWORD PTR [ebp-0x32],edx
  41721a:	out    dx,al
  41721b:	or     ebx,DWORD PTR [eax]
  41721d:	jno    0x417225
  41721f:	inc    eax
  417220:	out    0x1d,eax
  417222:	dec    esp
  417223:	xchg   BYTE PTR [esi],bl
  417225:	push   ecx
  417226:	add    BYTE PTR [ebx+0x55],ah
  417229:	stos   DWORD PTR es:[edi],eax
  41722a:	mov    dl,0xee
  41722c:	jne    0x417228
  41722e:	mov    BYTE PTR [ecx-0x30],dh
  417231:	xchg   esi,eax
  417232:	fist   DWORD PTR [edi-0x78]
  417235:	scas   al,BYTE PTR es:[edi]
  417236:	mov    esi,0xf792a9ce
  41723b:	mov    dl,0x3b
  41723d:	dec    esi
  41723e:	xor    DWORD PTR [ecx-0x62],esp
  417241:	cmp    bh,bl
  417243:	test   eax,0x909d40a0
  417248:	int3   
  417249:	stos   BYTE PTR es:[edi],al
  41724a:	mov    ch,0x2c
  41724c:	jl     0x4171fc
  41724e:	xchg   edi,eax
  41724f:	sub    al,0xf
  417251:	cwde   
  417252:	test   bl,bl
  417254:	ror    dl,cl
  417256:	mov    dl,0x90
  417258:	fdiv   st(7),st
  41725a:	push   esp
  41725b:	int3   
  41725c:	dec    esi
  41725d:	mov    edx,DWORD PTR [ebx-0x66351f13]
  417263:	out    0x74,eax
  417265:	inc    esp
  417266:	mov    bh,0xed
  417268:	add    eax,0xb34783e8
  41726d:	push   esi
  41726e:	stc    
  41726f:	gs dec edi
  417271:	call   0xa0c490da
  417276:	jge    0x417266
  417278:	cmp    eax,0x5bf1603b
  41727d:	mov    esi,0xdc6d1993
  417282:	pop    DWORD PTR [ecx]
  417284:	je     0x4172df
  417286:	loop   0x417234
  417288:	imul   eax,DWORD PTR [edx-0x4d],0xffffffd1
  41728c:	and    DWORD PTR [eax],ecx
  41728e:	aam    0x16
  417290:	call   DWORD PTR [esi]
  417292:	outs   dx,DWORD PTR ds:[esi]
  417293:	outs   dx,DWORD PTR ds:[esi]
  417294:	adc    eax,0xb43d6731
  417299:	or     esp,esp
  41729b:	cs ja  0x417231
  41729e:	or     DWORD PTR [edx],esp
  4172a0:	repnz dec eax
  4172a2:	pop    ebp
  4172a3:	loopne 0x4172f3
  4172a5:	enter  0x892c,0x2e
  4172a9:	add    dh,BYTE PTR ds:0xd22339d3
  4172af:	push   esp
  4172b0:	xor    al,0x13
  4172b2:	or     al,BYTE PTR [edx-0x7d]
  4172b5:	rcl    BYTE PTR [ebp+0x7e],1
  4172b8:	pop    esi
  4172b9:	cmp    BYTE PTR [edi],dl
  4172bb:	test   al,0xfd
  4172bd:	mov    al,0xca
  4172bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172c0:	and    ch,BYTE PTR [edx]
  4172c2:	pop    ss
  4172c3:	(bad)  
  4172c4:	in     eax,0x22
  4172c6:	mov    bh,0xe9
  4172c8:	dec    ebx
  4172c9:	int3   
  4172ca:	imul   eax,DWORD PTR [ebx],0xaa88a662
  4172d0:	xchg   ebx,eax
  4172d1:	lahf   
  4172d2:	iret   
  4172d3:	pop    es
  4172d4:	add    al,0x17
  4172d6:	jge    0x41734f
  4172d8:	icebp  
  4172d9:	mov    gs,ebp
  4172db:	imul   eax,edi,0x7003d2c8
  4172e1:	or     al,0x78
  4172e3:	jle    0x41732d
  4172e5:	inc    edi
  4172e6:	xor    al,0x3b
  4172e8:	jg     0x417363
  4172ea:	imul   esi,DWORD PTR [edi-0x4e92f391],0x34a16d6e
  4172f4:	les    ebx,FWORD PTR [edx-0x23a7e92a]
  4172fa:	push   ecx
  4172fb:	pop    eax
  4172fc:	mov    WORD PTR [esi],ds
  4172fe:	dec    cl
  417300:	fs int3 
  417302:	xchg   ecx,eax
  417303:	lahf   
  417304:	push   0xffffffb6
  417306:	call   0xcfc8:0x594cc5b7
  41730d:	xchg   edi,eax
  41730e:	popf   
  41730f:	xor    DWORD PTR [esi-0x5708b790],edx
  417315:	mov    esi,0xdd23f16c
  41731a:	pushf  
  41731b:	fimul  WORD PTR [edx+0x23ee78af]
  417321:	rcl    ebx,1
  417323:	or     dl,bl
  417325:	push   ebp
  417326:	cmp    al,0x6d
  417328:	retf   0xe3d7
  41732b:	pop    es
  41732c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732d:	inc    ebp
  41732e:	in     al,0x15
  417330:	iret   
  417331:	mov    bx,0xe92e
  417335:	out    dx,al
  417336:	repnz mov esi,ebx
  417339:	dec    ecx
  41733b:	pop    ebx
  41733c:	sbb    BYTE PTR [ebp-0x78],cl
  41733f:	ror    DWORD PTR [ecx+0x60],cl
  417342:	push   esi
  417343:	pop    edi
  417344:	sbb    eax,0xbd87dd54
  417349:	and    eax,0x16d461b7
  41734e:	scas   eax,DWORD PTR es:[edi]
  41734f:	pop    ds
  417350:	pop    esi
  417351:	jbe    0x417301
  417353:	into   
  417354:	xor    eax,DWORD PTR [ebx+0x18]
  417357:	and    ch,BYTE PTR [ebx+0x4ff95be6]
  41735d:	jl     0x417342
  41735f:	adc    eax,0x2424b397
  417364:	ror    DWORD PTR [esp+ebx*2],1
  417367:	frndint 
  417369:	mov    edx,0x454e210d
  41736e:	xchg   ebx,eax
  41736f:	mov    edi,0x650ef7bc
  417374:	add    al,0x4d
  417376:	fwait
  417377:	shl    DWORD PTR [ecx-0x47],0x8c
  41737b:	dec    eax
  41737c:	push   esi
  41737d:	xchg   esi,edi
  41737f:	stos   BYTE PTR es:[edi],al
  417380:	imul   ebx,edx,0x54553213
  417386:	imul   edx,DWORD PTR [ebx-0x15f1b819],0x5b
  41738d:	into   
  41738e:	pop    edi
  41738f:	or     DWORD PTR [ebx+0x6fcb5f0d],ecx
  417395:	in     al,dx
  417396:	pop    esp
  417397:	test   al,0x9b
  417399:	inc    edi
  41739a:	mov    bh,0x2a
  41739c:	popa   
  41739d:	cdq    
  41739e:	dec    edi
  41739f:	bound  edx,QWORD PTR [esi-0x173067bb]
  4173a5:	lods   al,BYTE PTR ds:[esi]
  4173a6:	add    bh,BYTE PTR [ebx]
  4173a8:	(bad)  
  4173a9:	ds out 0x59,al
  4173ac:	jge    0x41742a
  4173ae:	xchg   edx,eax
  4173af:	cmp    BYTE PTR [eax-0x6d189afb],dl
  4173b5:	dec    edx
  4173b6:	pop    ecx
  4173b7:	out    dx,eax
  4173b8:	das    
  4173b9:	sub    DWORD PTR [ecx+ebx*4-0x335c6126],0x4d08f08d
  4173c4:	dec    esi
  4173c5:	pop    ds
  4173c6:	gs iret 
  4173c8:	mov    ecx,0x26da2144
  4173cd:	cwde   
  4173ce:	jl     0x4173fe
  4173d0:	adc    eax,0x3f76dcc5
  4173d5:	in     eax,dx
  4173d6:	sti    
  4173d7:	pop    edi
  4173d8:	scas   al,BYTE PTR es:[di]
  4173da:	xlat   BYTE PTR ds:[ebx]
  4173db:	aad    0xcb
  4173dd:	in     al,dx
  4173de:	pop    ebp
  4173df:	mov    ds:0x66a335ce,al
  4173e4:	mov    ch,BYTE PTR [edx]
  4173e6:	and    eax,0xfe786642
  4173eb:	push   ss
  4173ec:	xor    al,0x9e
  4173ee:	fwait
  4173ef:	mov    esi,0xae3facae
  4173f4:	dec    al
  4173f6:	pop    es
  4173f7:	in     eax,0xd
  4173f9:	lahf   
  4173fa:	fdiv   st,st(2)
  4173fc:	cmp    esi,0xca248f2f
  417402:	shr    BYTE PTR [ecx],0xb8
  417405:	sbb    edi,DWORD PTR [eax]
  417407:	sbb    DWORD PTR [edx-0xa93db98],esi
  41740d:	push   ds
  41740e:	mov    al,ds:0x608339f6
  417413:	inc    edx
  417414:	js     0x417403
  417416:	aad    0xd5
  417418:	push   0x4d
  41741a:	sub    al,0x2
  41741c:	mov    ebp,0x68516f05
  417421:	or     eax,0xf7ae1313
  417426:	jbe    0x4174a2
  417428:	push   ebx
  417429:	shl    BYTE PTR [edx],1
  41742b:	adc    al,0x2b
  41742d:	adc    al,0x9a
  41742f:	js     0x417447
  417431:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417432:	mov    cs,WORD PTR [edx-0x44]
  417435:	mov    ebp,0x984ec561
  41743a:	idiv   BYTE PTR [edi]
  41743c:	jno    0x417415
  41743e:	popf   
  41743f:	popa   
  417440:	sbb    ebx,DWORD PTR [ecx-0x5bf2abec]
  417446:	fwait
  417447:	stc    
  417448:	sbb    dl,BYTE PTR [edx+0x34]
  41744b:	out    0x5e,eax
  41744d:	mov    ebp,0x60c917b1
  417452:	mov    esp,0x78b2f090
  417457:	mul    dh
  417459:	adc    BYTE PTR [esi-0x6b],bh
  41745c:	jle    0x41742a
  41745e:	inc    esp
  41745f:	mov    bl,0xfd
  417461:	pop    ds
  417462:	xchg   esp,eax
  417463:	outs   dx,DWORD PTR ds:[esi]
  417464:	pop    edi
  417465:	adc    BYTE PTR [ebx],al
  417467:	ja     0x417476
  417469:	sub    ch,BYTE PTR [ecx+0x48]
  41746c:	aas    
  41746d:	or     ebp,0x71
  417470:	sub    esi,0x7
  417473:	out    dx,eax
  417474:	out    dx,al
  417475:	dec    edi
  417476:	es push 0x25
  417479:	sub    edi,DWORD PTR [esi+0x7d]
  41747c:	repnz out dx,al
  41747e:	adc    eax,0xfb26aa8d
  417483:	mov    WORD PTR [edx+eax*1+0x37],cs
  417487:	test   eax,0x31f64df3
  41748c:	ret    0x7b84
  41748f:	jl     0x4174e4
  417491:	int    0xc4
  417493:	pusha  
  417494:	pop    es
  417495:	push   edx
  417496:	aam    0x35
  417498:	pop    es
  417499:	xor    al,0x9e
  41749b:	or     cl,BYTE PTR [edx]
  41749d:	add    BYTE PTR [ebx-0x3e],0xc4
  4174a1:	mov    eax,ds:0x6df04192
  4174a6:	pop    ss
  4174a7:	xchg   esi,eax
  4174a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174a9:	scas   eax,DWORD PTR es:[edi]
  4174aa:	push   0xc6824506
  4174af:	xor    BYTE PTR [ecx+0x16],0x88
  4174b3:	mov    ecx,0x96ec3451
  4174b9:	add    ecx,DWORD PTR [ecx-0x1e5f813]
  4174bf:	cli    
  4174c0:	cmp    al,0x68
  4174c2:	lea    edx,ds:0xb0e8fec6
  4174c8:	mov    gs:0xab2edde0,eax
  4174ce:	stos   BYTE PTR es:[edi],al
  4174cf:	xchg   edx,eax
  4174d0:	ds scas eax,DWORD PTR es:[edi]
  4174d2:	lods   eax,DWORD PTR ds:[esi]
  4174d3:	inc    ecx
  4174d4:	aas    
  4174d5:	cmp    BYTE PTR [edi+edi*4+0x670e7b83],cl
  4174dc:	mov    dl,0xac
  4174de:	mov    cl,0x3
  4174e0:	das    
  4174e1:	pop    es
  4174e2:	or     DWORD PTR [esi-0x3fa2351f],ebp
  4174e8:	call   0x49e7:0xe021b224
  4174ef:	add    BYTE PTR [edi-0x59],0xd2
  4174f3:	ss adc al,0xef
  4174f6:	xlat   BYTE PTR ds:[ebx]
  4174f7:	ins    DWORD PTR es:[edi],dx
  4174f8:	push   esi
  4174f9:	xchg   edi,esp
  4174fb:	les    ebx,FWORD PTR [edi-0x74d97aa7]
  417501:	dec    esi
  417502:	sar    ch,0x30
  417505:	sub    DWORD PTR [ebp+0x47737dc1],0x392601f5
  41750f:	push   edi
  417510:	loopne 0x4174bf
  417512:	inc    ebx
  417513:	mov    ds,WORD PTR [eax]
  417515:	mov    ebp,0xc3b323a4
  41751a:	push   es
  41751b:	shl    BYTE PTR [esi+0x4c],1
  41751e:	cmc    
  41751f:	cmp    ch,0x8f
  417522:	dec    ebx
  417523:	(bad)  
  417525:	aas    
  417526:	lods   al,BYTE PTR ds:[esi]
  417527:	sub    BYTE PTR [esi+ebx*8-0x796177f2],0xb8
  41752f:	pop    ebp
  417530:	cwde   
  417531:	or     dh,BYTE PTR [eax]
  417533:	jecxz  0x4174e3
  417535:	jl     0x41754e
  417537:	stos   BYTE PTR es:[edi],al
  417538:	sub    ecx,DWORD PTR [esi+0x4]
  41753b:	ins    DWORD PTR es:[edi],dx
  41753c:	sub    DWORD PTR [esi+0x5a2623f2],ebx
  417542:	outs   dx,BYTE PTR ds:[esi]
  417543:	xor    BYTE PTR [ebp+0x31],ch
  417546:	mov    esp,edi
  417548:	dec    esi
  417549:	pop    edx
  41754a:	mov    ebp,0xec2b0e23
  41754f:	lds    edi,FWORD PTR [ebp-0x1c372267]
  417555:	sbb    eax,DWORD PTR [ebp+0x60]
  417558:	imul   DWORD PTR [ebx+0x45]
  41755b:	jp     0x417501
  41755d:	sbb    bl,al
  41755f:	or     DWORD PTR [ebx],eax
  417561:	test   al,0x35
  417563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417564:	mov    ds,esp
  417566:	jns    0x4174fd
  417568:	es jne 0x41756e
  41756b:	lea    eax,[esi]
  41756d:	inc    ebp
  41756e:	(bad)  
  41756f:	jmp    0x9cd6:0xa2944fbb
  417576:	and    al,BYTE PTR [ecx]
  417578:	test   BYTE PTR [eax-0x73],dl
  41757b:	push   es
  41757c:	icebp  
  41757d:	scas   al,BYTE PTR es:[edi]
  41757e:	push   ebx
  41757f:	xor    DWORD PTR [esi-0x35d145a8],ebx
  417585:	xchg   edi,eax
  417586:	(bad)  
  417587:	dec    DWORD PTR [ecx+0x73]
  41758a:	jle    0x417519
  41758c:	dec    eax
  41758d:	sti    
  41758e:	sbb    ebp,0x3c
  417591:	cs jno 0x41759c
  417594:	xor    ch,BYTE PTR ds:0xd0d7916f
  41759a:	icebp  
  41759b:	jl     0x4175c5
  41759d:	dec    esp
  41759e:	out    dx,al
  41759f:	(bad)  
  4175a0:	test   al,0xa6
  4175a2:	cmp    eax,DWORD PTR [ebx+0x65]
  4175a5:	test   DWORD PTR [ebp+0x63],ebp
  4175a8:	add    BYTE PTR [ecx+0x39],cl
  4175ab:	dec    esi
  4175ac:	aaa    
  4175ad:	aaa    
  4175ae:	or     eax,0xf18c6689
  4175b3:	jne    0x4175c1
  4175b5:	cmp    al,0x4c
  4175b7:	icebp  
  4175b8:	shl    ebp,cl
  4175ba:	xchg   ebp,eax
  4175bb:	xchg   al,cl
  4175bd:	mov    eax,0x398a66db
  4175c2:	inc    ecx
  4175c3:	pop    ds
  4175c4:	push   ss
  4175c5:	pop    eax
  4175c6:	mov    eax,ds:0x446c6437
  4175cb:	mov    ?,WORD PTR [edi-0x52]
  4175ce:	int    0x6b
  4175d0:	loop   0x4175c9
  4175d2:	xor    dh,dh
  4175d4:	inc    ebx
  4175d5:	add    esi,DWORD PTR [edi-0x15]
  4175d8:	add    dh,BYTE PTR [eax]
  4175da:	or     al,BYTE PTR [ecx+0x8844154]
  4175e0:	pusha  
  4175e1:	cwde   
  4175e2:	xchg   ebp,eax
  4175e3:	inc    esi
  4175e4:	ret    
  4175e5:	mov    bh,0x91
  4175e7:	fstp   DWORD PTR [esi+eiz*4-0x79]
  4175eb:	xchg   ebp,eax
  4175ec:	or     eax,0x2688c6d3
  4175f1:	call   0x14a59a0b
  4175f6:	add    dh,BYTE PTR ss:[ebp-0x502ed520]
  4175fd:	adc    al,0x36
  4175ff:	xchg   DWORD PTR [edi-0x4415f392],edi
  417605:	or     al,0xb3
  417607:	repz ss and eax,0x1e01de4
  41760e:	retf   0xb209
  417611:	sub    ebx,DWORD PTR [ecx]
  417613:	sub    al,0x8f
  417615:	xchg   ecx,eax
  417616:	ins    DWORD PTR es:[edi],dx
  417617:	ja     0x417686
  417619:	ds (bad) 
  41761b:	clc    
  41761c:	ins    DWORD PTR es:[edi],dx
  41761d:	jae    0x41767e
  41761f:	add    al,dh
  417621:	inc    eax
  417622:	cmp    eax,0x7351122a
  417627:	aad    0x92
  417629:	test   DWORD PTR [edi],ebx
  41762b:	test   BYTE PTR [ebx-0x5e],cl
  41762e:	rol    BYTE PTR [edx+0x50b43aab],cl
  417634:	jmp    0x4176a9
  417636:	mov    esi,0x2a46ff72
  41763b:	rcl    DWORD PTR [ebx],cl
  41763d:	mov    edi,0xa5cc16b5
  417642:	pop    ebx
  417643:	aas    
  417644:	sbb    BYTE PTR [esi+eiz*8+0xe],dh
  417648:	lds    edi,FWORD PTR [esi-0x7d93aac0]
  41764e:	ret    
  41764f:	push   0x43ee68b7
  417654:	mov    WORD PTR [ebp-0x76],fs
  417657:	ficomp WORD PTR [ebp-0x27]
  41765a:	and    bl,BYTE PTR [esi]
  41765c:	jbe    0x4176ac
  41765e:	mov    ah,0x74
  417660:	loopne 0x41763d
  417662:	aas    
  417663:	in     al,dx
  417664:	push   edx
  417665:	test   BYTE PTR [esi],bh
  417667:	cld    
  417668:	add    BYTE PTR [ebx-0x7cb7f9cd],0x7e
  41766f:	sbb    BYTE PTR [edi],ch
  417671:	push   ecx
  417672:	out    dx,eax
  417673:	ret    0x4f2b
  417676:	(bad)  
  417677:	jns    0x41769b
  417679:	pop    edx
  41767a:	test   edi,edi
  41767c:	outs   dx,DWORD PTR ds:[esi]
  41767d:	pop    esi
  41767e:	jl     0x417647
  417680:	jae    0x41767f
  417682:	lea    edi,[edx]
  417684:	mov    ch,0xc1
  417686:	out    0xfe,al
  417688:	nop
  417689:	(bad)  
  41768a:	jg     0x4176a3
  41768c:	aam    0x6f
  41768e:	mov    edx,0x571c42d6
  417693:	and    DWORD PTR es:[edx],esp
  417696:	arpl   sp,sp
  417698:	push   edi
  417699:	xchg   edx,eax
  41769a:	not    DWORD PTR [eax-0xc4dfe30]
  4176a0:	push   edi
  4176a1:	cmp    BYTE PTR [edx+0x35],0x9d
  4176a5:	stc    
  4176a6:	jo     0x417655
  4176a8:	or     al,0xe9
  4176aa:	outs   dx,BYTE PTR ds:[esi]
  4176ab:	cmc    
  4176ac:	icebp  
  4176ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ae:	dec    edx
  4176af:	fnstenv [ecx+0x2b86ac36]
  4176b5:	loopne 0x4176ae
  4176b7:	push   esp
  4176b8:	xchg   BYTE PTR [edx],dh
  4176ba:	cmp    al,0xf6
  4176bc:	xchg   DWORD PTR [edi+esi*8-0x74],ecx
  4176c0:	into   
  4176c1:	int3   
  4176c2:	dec    esi
  4176c3:	cld    
  4176c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c5:	fucomip st,st(1)
  4176c7:	push   eax
  4176c8:	mov    esp,0x7722f0c0
  4176cd:	mov    ah,0x85
  4176cf:	mov    edi,0xf1a88b30
  4176d4:	sbb    eax,0x21bf8db0
  4176d9:	popf   
  4176da:	rcl    BYTE PTR [ecx-0x9],0xda
  4176de:	inc    ebp
  4176df:	ror    ebx,cl
  4176e1:	sbb    al,0x38
  4176e3:	mov    al,ds:0x913a1349
  4176e8:	dec    ecx
  4176e9:	xor    esi,DWORD PTR ds:[eax]
  4176ec:	pop    ecx
  4176ed:	retf   
  4176ee:	sub    DWORD PTR [esi-0x1761cedd],esi
  4176f4:	push   edi
  4176f5:	ds dec ebx
  4176f7:	inc    esp
  4176f8:	pusha  
  4176f9:	fsub   QWORD PTR [eax-0x68]
  4176fc:	arpl   WORD PTR [edx],dx
  4176fe:	out    0x18,al
  417700:	repz cmp al,0xb6
  417703:	scas   al,BYTE PTR es:[edi]
  417704:	js     0x417696
  417706:	jge    0x4176da
  417708:	fldpi  
  41770a:	inc    edi
  41770b:	sahf   
  41770c:	xchg   BYTE PTR [ebx],cl
  41770e:	pop    edi
  41770f:	cmp    bl,BYTE PTR [esi+0x7af18e60]
  417715:	xchg   ebx,eax
  417716:	jns    0x417746
  417718:	lock mov bl,0xb
  41771b:	rcl    ebp,1
  41771d:	imul   edi,DWORD PTR [ebp-0x3],0xffffff9d
  417721:	push   ds
  417722:	bnd jns 0x41774b
  417725:	sub    eax,0x444497e9
  41772a:	shr    cl,1
  41772c:	rcr    ah,1
  41772e:	retf   0x7a3b
  417731:	cmc    
  417732:	mov    BYTE PTR es:[edx+esi*4],dh
  417736:	jmp    0x41776a
  417738:	scas   al,BYTE PTR es:[edi]
  417739:	xchg   BYTE PTR [eax],ch
  41773b:	mov    ds:0x2889dcb8,eax
  417740:	push   esp
  417741:	popa   
  417742:	jns    0x417719
  417744:	cmp    BYTE PTR [edx+ecx*8],0xad
  417748:	rol    bh,cl
  41774a:	inc    eax
  41774b:	jg     0x417751
  41774d:	and    edi,DWORD PTR [edx]
  41774f:	sbb    bl,al
  417751:	push   0xffffff8f
  417753:	int    0x1b
  417755:	(bad)  
  417757:	mov    dh,0x2c
  417759:	or     DWORD PTR [esi],eax
  41775b:	aam    0xfe
  41775d:	xor    eax,0xc1a0f4b4
  417762:	pusha  
  417763:	jns    0x417768
  417765:	mov    cl,0x16
  417767:	or     edx,DWORD PTR [edx]
  417769:	sahf   
  41776a:	inc    edx
  41776b:	test   ch,ah
  41776d:	test   BYTE PTR [esi+0x5a87524],al
  417773:	jl     0x4177a7
  417775:	mov    ecx,gs
  417777:	leave  
  417778:	int3   
  417779:	stc    
  41777a:	bound  eax,QWORD PTR [ebx+0x31]
  41777d:	out    dx,al
  41777e:	sub    DWORD PTR [eax+esi*1+0x7c1867c5],0x58
  417786:	hlt    
  417787:	aas    
  417788:	mov    edx,0x1e09561b
  41778d:	loop   0x4177af
  41778f:	out    0x23,eax
  417791:	(bad)  
  417792:	fisttp WORD PTR [ecx+0x44c819f8]
  417798:	mov    ebx,0xa8344425
  41779d:	push   esi
  41779e:	hlt    
  41779f:	call   0xb71b7e62
  4177a4:	mov    WORD PTR [edx-0x588e7283],es
  4177aa:	stos   BYTE PTR es:[edi],al
  4177ab:	xor    al,0x5e
  4177ad:	push   eax
  4177ae:	push   esp
  4177af:	daa    
  4177b0:	daa    
  4177b1:	popa   
  4177b2:	cli    
  4177b3:	lahf   
  4177b4:	adc    eax,0x1d47aaec
  4177b9:	inc    ebx
  4177ba:	imul   ebx,DWORD PTR ds:0x1b0221be,0xb58ebc50
  4177c4:	xchg   ebx,eax
  4177c5:	fcomp  st(1)
  4177c7:	loopne 0x417842
  4177c9:	xchg   edx,eax
  4177ca:	std    
  4177cb:	mov    ds:0xfbf09091,eax
  4177d0:	adc    edi,DWORD PTR [esi+0x61314a1e]
  4177d6:	add    edi,eax
  4177d8:	out    0x68,eax
  4177da:	mov    ?,WORD PTR [edi]
  4177dc:	or     eax,DWORD PTR [edx+0x50494481]
  4177e2:	sbb    eax,0xa6acf38c
  4177e7:	fidiv  DWORD PTR [edx-0x59]
  4177ea:	and    bh,bl
  4177ec:	adc    edi,DWORD PTR [esi+0x70]
  4177ef:	pop    edx
  4177f0:	cmp    eax,0x988ebc1a
  4177f5:	jp     0x417828
  4177f7:	jbe    0x41786b
  4177f9:	adc    bh,BYTE PTR [edx-0x41]
  4177fc:	push   ecx
  4177fd:	(bad)  
  4177ff:	lods   al,BYTE PTR ds:[esi]
  417800:	mov    eax,ds:0x3da8e8cc
  417805:	fstp   TBYTE PTR [edi+0x6f381fad]
  41780b:	ins    BYTE PTR es:[edi],dx
  41780c:	je     0x4177e9
  41780e:	stc    
  41780f:	sub    al,0x88
  417811:	cmp    BYTE PTR [edi+0x3b],0xe6
  417815:	test   BYTE PTR [edi],0x14
  417818:	mov    ebp,0x3301779d
  41781d:	adc    DWORD PTR [ebx],0xffffff93
  417820:	and    BYTE PTR [edi],ch
  417822:	pop    ebp
  417823:	icebp  
  417824:	pushw  es
  417826:	mov    DWORD PTR [edi],ecx
  417828:	pop    es
  417829:	xchg   ebp,eax
  41782a:	ffree  st(0)
  41782c:	sti    
  41782d:	shr    BYTE PTR ds:[ecx],cl
  417830:	xor    BYTE PTR [ebp+0x32],ah
  417833:	ds inc eax
  417835:	(bad)  
  417836:	test   BYTE PTR [esi+ebx*2+0x5c9a91b2],0x1d
  41783e:	push   cs
  41783f:	sub    cl,BYTE PTR [edx]
  417841:	xchg   bp,ax
  417843:	jnp    0x417887
  417845:	inc    esi
  417846:	inc    ebp
  417847:	mov    ds:0xe50c5a0e,al
  41784c:	xchg   edx,eax
  41784d:	lahf   
  41784e:	push   edx
  41784f:	mov    esi,0x27b729e1
  417854:	dec    ebx
  417855:	mov    bh,BYTE PTR [edi]
  417857:	in     al,dx
  417858:	cmp    bl,0x6e
  41785b:	aad    0x85
  41785d:	inc    eax
  41785e:	test   DWORD PTR [ebx+0x54846d00],0xa0747668
  417868:	dec    ecx
  417869:	call   0x1920b07a
  41786e:	cli    
  41786f:	jge    0x417875
  417871:	and    BYTE PTR [esi-0x8],ah
  417874:	leave  
  417875:	pop    edx
  417876:	sub    al,0x7
  417878:	jo     0x4178f5
  41787a:	pushf  
  41787b:	leave  
  41787c:	pop    ds
  41787d:	mov    al,ds:0xdb558d60
  417882:	lahf   
  417883:	and    al,bh
  417885:	cmp    eax,0x3ba9835c
  41788a:	or     ah,BYTE PTR [ecx-0x4d]
  41788d:	xchg   edx,eax
  41788e:	add    al,0x49
  417890:	and    al,0xb1
  417892:	add    edx,DWORD PTR [eax+0x1136efb4]
  417898:	loope  0x41782b
  41789a:	iret   
  41789b:	or     al,0xab
  41789d:	cmp    ah,bl
  41789f:	xchg   BYTE PTR [edx],ah
  4178a1:	int3   
  4178a2:	sub    esp,DWORD PTR [ebx]
  4178a4:	mov    es,eax
  4178a6:	sbb    BYTE PTR fs:[edi+ecx*4+0x6b787731],bl
  4178ae:	inc    esp
  4178af:	in     al,dx
  4178b0:	xchg   ecx,eax
  4178b1:	mov    cl,0xb6
  4178b3:	scas   al,BYTE PTR es:[edi]
  4178b4:	inc    ebp
  4178b5:	mov    esp,0xf0ab08f0
  4178ba:	pop    es
  4178bb:	call   0x5e2792c7
  4178c0:	pop    esi
  4178c1:	and    dl,BYTE PTR [ebx]
  4178c3:	ret    0x8eb1
  4178c6:	add    eax,0xd04a49d0
  4178cb:	xor    ch,0x2d
  4178ce:	(bad)  
  4178cf:	out    dx,eax
  4178d0:	push   eax
  4178d1:	inc    esi
  4178d2:	(bad)  
  4178d4:	outs   dx,DWORD PTR ds:[esi]
  4178d5:	jl     0x417938
  4178d7:	or     eax,0x10fa5146
  4178dc:	jnp    0x417921
  4178de:	mov    ebx,ecx
  4178e0:	icebp  
  4178e1:	inc    ebp
  4178e2:	xchg   esi,eax
  4178e3:	sub    al,0x5a
  4178e5:	inc    edx
  4178e6:	clc    
  4178e7:	inc    ebp
  4178e8:	pop    edi
  4178e9:	(bad)  
  4178eb:	dec    edx
  4178ec:	jl     0x4178fa
  4178ee:	jmp    0xc806515c
  4178f3:	xchg   esp,esi
  4178f5:	add    BYTE PTR [edi+0x2136c434],al
  4178fb:	sub    ecx,0xc
  4178fe:	addr16 inc edx
  417900:	test   eax,0x6518ddc7
  417905:	fwait
  417906:	dec    ecx
  417907:	mov    dh,0x3c
  417909:	int3   
  41790a:	rcl    edx,1
  41790c:	rcl    ebx,1
  41790e:	mov    ch,0xa7
  417910:	jmp    0x8b9a8e5
  417915:	in     eax,dx
  417916:	mov    DWORD PTR [ecx],edx
  417918:	ror    BYTE PTR [esi-0x62d7f02],1
  41791e:	gs icebp 
  417920:	aad    0x4f
  417922:	ins    BYTE PTR es:[edi],dx
  417923:	shl    DWORD PTR [ebp-0x40],1
  417926:	aad    0x14
  417928:	xchg   esp,eax
  417929:	cmp    DWORD PTR [edx],ebp
  41792b:	xchg   edi,eax
  41792c:	js     0x417946
  41792e:	ja     0x41791f
  417930:	cmp    esp,DWORD PTR [esi-0x5d9eb440]
  417936:	outs   dx,DWORD PTR ds:[esi]
  417937:	pusha  
  417938:	ficomp WORD PTR [ebx+0x18]
  41793b:	pop    ebx
  41793c:	repnz push esp
  41793e:	lods   al,BYTE PTR ds:[esi]
  41793f:	fdivr  DWORD PTR [edi+0x336e0a7d]
  417945:	xchg   esi,eax
  417946:	sbb    al,0xec
  417948:	inc    eax
  417949:	fbstp  TBYTE PTR [edx-0x62]
  41794c:	push   ecx
  41794d:	(bad)  
  41794e:	imul   esp,DWORD PTR [ecx-0x6f8dd5ca],0xfffffff3
  417955:	xchg   ebx,eax
  417956:	jb     0x4179b7
  417958:	imul   DWORD PTR [ebp-0x13]
  41795b:	push   esp
  41795c:	sub    dh,bl
  41795e:	and    ecx,DWORD PTR [edi+0x73]
  417961:	push   esp
  417962:	dec    ebx
  417963:	mov    eax,0x4a74c42b
  417968:	mov    dh,0x97
  41796a:	aaa    
  41796b:	jl     0x41795a
  41796d:	inc    ebx
  41796e:	inc    ecx
  41796f:	mov    dl,0x3b
  417971:	pusha  
  417972:	ret    
  417973:	add    eax,0xaa05a84f
  417978:	dec    ebp
  417979:	mov    eax,ds:0xc6f9450e
  41797e:	outs   dx,BYTE PTR ds:[esi]
  41797f:	fdiv   DWORD PTR [esp+eax*1-0xb0b01a8]
  417986:	lock sbb DWORD PTR [eax+0x79],ecx
  41798a:	or     BYTE PTR [eax],dl
  41798c:	or     esp,DWORD PTR [edx]
  41798e:	xchg   ebx,eax
  41798f:	outs   dx,BYTE PTR ds:[esi]
  417990:	fisub  WORD PTR [ebx+eiz*4+0x26]
  417994:	(bad)  
  417995:	ja     0x417918
  417997:	mov    eax,ebx
  417999:	call   0xa179:0xc510a335
  4179a0:	sub    DWORD PTR ds:0x9ddf742f,0x11
  4179a7:	ins    BYTE PTR es:[edi],dx
  4179a8:	scas   al,BYTE PTR es:[edi]
  4179a9:	fs xchg esp,eax
  4179ab:	mov    cl,0xeb
  4179ad:	mov    edx,0x7b54cf6a
  4179b2:	mov    WORD PTR [ecx+0x2a],?
  4179b5:	fcom   st(5)
  4179b7:	sbb    bh,BYTE PTR [ebp+0x2e]
  4179ba:	dec    esi
  4179bb:	push   ss
  4179bc:	or     eax,0xcd4e3a1d
  4179c1:	stos   DWORD PTR es:[edi],eax
  4179c2:	jnp    0x417a32
  4179c4:	scas   al,BYTE PTR es:[edi]
  4179c5:	outs   dx,BYTE PTR ds:[esi]
  4179c6:	sbb    BYTE PTR [edi],dl
  4179c8:	ror    DWORD PTR [ecx-0x7f38a833],1
  4179ce:	ja     0x417986
  4179d0:	les    esp,FWORD PTR [ebx]
  4179d2:	icebp  
  4179d3:	inc    BYTE PTR [ecx]
  4179d5:	mov    dl,0xdf
  4179d7:	stos   BYTE PTR es:[edi],al
  4179d8:	hlt    
  4179d9:	imul   DWORD PTR ds:0x8ac697d9
  4179df:	mov    edx,eax
  4179e1:	jl     0x417a61
  4179e3:	daa    
  4179e4:	inc    edi
  4179e5:	shl    BYTE PTR [ecx+0x66],0xee
  4179e9:	fwait
  4179ea:	pop    esp
  4179eb:	out    dx,eax
  4179ec:	push   0x7c
  4179ee:	sbb    dl,BYTE PTR [esi+0x549a7607]
  4179f4:	lods   al,BYTE PTR gs:[esi]
  4179f6:	jbe    0x417a5c
  4179f8:	fst    DWORD PTR [eax+0x18]
  4179fb:	push   esi
  4179fc:	mov    bh,0x33
  4179fe:	sbb    al,0xd0
  417a00:	push   edi
  417a01:	(bad)  
  417a02:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a05:	sbb    DWORD PTR [edx],0x5a1cc82e
  417a0b:	xchg   ebx,eax
  417a0c:	add    dl,BYTE PTR [ebp-0x371ceaa6]
  417a12:	push   eax
  417a13:	std    
  417a14:	das    
  417a15:	xchg   BYTE PTR [ebx],bh
  417a17:	pushf  
  417a18:	lahf   
  417a19:	add    edi,DWORD PTR [ebp+ebp*4-0x53]
  417a1d:	clc    
  417a1e:	aaa    
  417a1f:	loope  0x417a4c
  417a21:	sbb    ecx,DWORD PTR [ecx]
  417a23:	out    0x42,al
  417a25:	outs   dx,BYTE PTR ds:[esi]
  417a26:	jmp    0x87c0b974
  417a2b:	push   es
  417a2c:	je     0x4179ed
  417a2e:	mov    DWORD PTR [eax],edi
  417a30:	inc    eax
  417a31:	retf   
  417a32:	cmpxchg8b QWORD PTR [ebx-0x56]
  417a36:	inc    esi
  417a37:	dec    ebx
  417a38:	xor    al,0x41
  417a3a:	fsub   QWORD PTR [eax+0x7d450d73]
  417a40:	cmp    eax,0x155e050f
  417a45:	inc    ebx
  417a46:	cdq    
  417a47:	mov    BYTE PTR [ecx-0x62],ah
  417a4a:	scas   eax,DWORD PTR es:[edi]
  417a4b:	sub    al,0x22
  417a4d:	icebp  
  417a4e:	dec    esp
  417a4f:	imul   edx,DWORD PTR ds:0xcf2e1f68,0xb7e63ac4
  417a59:	addr16 xchg esp,eax
  417a5b:	and    edi,DWORD PTR [edi]
  417a5d:	or     edx,DWORD PTR [ecx+edx*2+0x69c88c16]
  417a64:	test   BYTE PTR [ebp+0x7b],dh
  417a67:	sar    BYTE PTR [ebx+0x59],0xcb
  417a6b:	push   esp
  417a6c:	pop    ebx
  417a6d:	inc    edi
  417a6e:	int    0x3c
  417a70:	push   es
  417a71:	sub    BYTE PTR [ecx],bh
  417a73:	mov    cl,0xf5
  417a75:	pop    edi
  417a76:	ja     0x417a85
  417a78:	arpl   WORD PTR [edi+eiz*8-0x27],di
  417a7c:	mov    dl,0xd5
  417a7e:	cvtps2pd xmm3,xmm3
  417a81:	test   eax,0xc367d4ee
  417a86:	push   edi
  417a87:	lahf   
  417a88:	leave  
  417a89:	jmp    0xaa083619
  417a8e:	daa    
  417a8f:	sub    eax,0x35a5e09a
  417a94:	mov    esi,0x20c69f2a
  417a99:	or     ah,BYTE PTR [ebx-0x1f]
  417a9c:	call   0x69379aad
  417aa1:	lea    ebp,[ecx+0x29]
  417aa4:	ja     0x417b21
  417aa6:	cmp    ecx,DWORD PTR [ebx]
  417aa8:	fsubr  QWORD PTR [eax-0x2cb93997]
  417aae:	sbb    eax,0x88fcc0a3
  417ab3:	addr16 push cs
  417ab5:	rcr    edi,0xf6
  417ab8:	addr16 mov ch,0x82
  417abb:	or     dl,BYTE PTR [edx-0x46b9d73]
  417ac1:	mov    ds:0xc625d95,al
  417ac6:	frstor [esi]
  417ac8:	fimul  WORD PTR gs:[eax-0x16b3a8]
  417acf:	add    BYTE PTR [ecx],0x25
  417ad2:	cs enter 0xa8ef,0xc5
  417ad7:	daa    
  417ad8:	(bad)  
  417ad9:	loopne 0x417b0e
  417adb:	jo     0x417a73
  417add:	pop    esp
  417ade:	outs   dx,DWORD PTR ds:[esi]
  417adf:	sbb    BYTE PTR [ecx],cl
  417ae1:	mov    ecx,0xe770fb98
  417ae6:	jecxz  0x417ad8
  417ae8:	repnz sar BYTE PTR [ebx],1
  417aeb:	scas   al,BYTE PTR es:[edi]
  417aec:	push   ds
  417aed:	retf   0x3e8f
  417af0:	push   eax
  417af1:	xchg   esp,eax
  417af3:	mov    edi,0x8613d23d
  417af8:	call   0xd326bbc
  417afd:	cmp    BYTE PTR [ebx+0x748752db],ch
  417b03:	loopne 0x417b7d
  417b05:	xchg   edi,eax
  417b06:	pop    eax
  417b07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b08:	xchg   DWORD PTR [esi],edi
  417b0a:	dec    ebp
  417b0b:	add    eax,0x8648dd3e
  417b10:	and    ah,BYTE PTR [edx-0x36183f9]
  417b16:	les    ebp,FWORD PTR [ebx-0x3081d645]
  417b1c:	outs   dx,BYTE PTR ds:[esi]
  417b1d:	jg     0x417b40
  417b1f:	sbb    al,0xed
  417b21:	(bad)  
  417b22:	push   0x41bf07fc
  417b27:	das    
  417b28:	std    
  417b29:	das    
  417b2a:	or     eax,0x2e79b706
  417b2f:	pushf  
  417b30:	cmp    bl,ch
  417b32:	inc    esp
  417b33:	cli    
  417b34:	fisub  DWORD PTR [eax+0x1f]
  417b37:	mov    dh,0x71
  417b39:	or     bh,BYTE PTR [eax]
  417b3b:	mov    dl,BYTE PTR [ebx+0x58]
  417b3e:	sbb    ebp,DWORD PTR [edi-0x1]
  417b41:	or     dh,ch
  417b43:	lods   al,BYTE PTR ds:[esi]
  417b44:	mov    esp,0x11bb62aa
  417b49:	or     BYTE PTR [eax-0x5de24e14],bh
  417b4f:	add    ebp,DWORD PTR [eax-0x18fc3eec]
  417b55:	lock leave 
  417b57:	mov    edx,0xc092d5c8
  417b5c:	les    ebx,FWORD PTR [edx]
  417b5e:	sbb    DWORD PTR [eax+0x2a6e15ba],0x7
  417b65:	mov    ah,0x62
  417b67:	pop    ebp
  417b68:	test   ecx,edi
  417b6a:	xchg   BYTE PTR [ebp+0x5f],ch
  417b6d:	and    al,0x5e
  417b6f:	jne    0x417bd2
  417b71:	pop    ebp
  417b72:	pop    esi
  417b73:	(bad)
  417b76:	jae    0x417b09
  417b78:	mov    cl,0x33
  417b7a:	dec    ebx
  417b7b:	mov    esi,ebx
  417b7d:	mov    fs,edi
  417b7f:	ins    BYTE PTR es:[edi],dx
  417b80:	or     BYTE PTR [edx+0x4c],al
  417b83:	inc    ebp
  417b84:	ins    DWORD PTR es:[edi],dx
  417b85:	cvtdq2ps xmm5,XMMWORD PTR ds:0x64e36fa2
  417b8c:	hlt    
  417b8d:	fs dec edi
  417b8f:	pushf  
  417b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b91:	sbb    DWORD PTR [edx-0x6eab0878],eax
  417b97:	inc    esp
  417b98:	inc    edx
  417b99:	pop    edi
  417b9a:	in     al,0xb6
  417b9c:	push   esp
  417b9d:	data16 adc BYTE PTR [eax],cl
  417ba0:	leave  
  417ba1:	ins    BYTE PTR es:[edi],dx
  417ba2:	inc    esp
  417ba3:	sub    bl,dh
  417ba5:	outs   dx,BYTE PTR ds:[esi]
  417ba6:	push   es
  417ba7:	out    dx,al
  417ba8:	sbb    DWORD PTR [edi-0x45d51e5],0x2b47faf0
  417bb2:	adc    DWORD PTR [eax],0x51
  417bb5:	pop    es
  417bb6:	dec    ebp
  417bb7:	adc    eax,0xc0ddba22
  417bbc:	push   esi
  417bbd:	xchg   ebp,eax
  417bbe:	push   edi
  417bbf:	punpcklbw mm0,DWORD PTR [edx+ecx*8+0x12]
  417bc4:	(bad)  
  417bc5:	xor    ebp,DWORD PTR [ecx+0x6f]
  417bc8:	addr16 jne 0x417b98
  417bcb:	repz mov cl,0x94
  417bce:	lds    ecx,FWORD PTR [ecx]
  417bd0:	add    ch,BYTE PTR ds:0xbdbecdb4
  417bd6:	mov    ds:0x30c7135b,al
  417bdb:	or     DWORD PTR [ebx+0x66],esp
  417bde:	(bad)
  417be1:	jmp    0x417b91
  417be3:	inc    edx
  417be4:	icebp  
  417be5:	sub    BYTE PTR [eax*1-0x639a7c36],0xba
  417bed:	add    DWORD PTR [ecx-0x4bc63664],esi
  417bf3:	aam    0x7d
  417bf5:	sbb    DWORD PTR ss:[ebx],0xb85cec3d
  417bfc:	out    dx,eax
  417bfd:	cmp    BYTE PTR [eax+0x47],0x53
  417c01:	daa    
  417c02:	add    cl,BYTE PTR [edx]
  417c04:	sbb    dl,BYTE PTR [esi+eax*1+0x6c]
  417c08:	fcom   QWORD PTR [ecx+0x37]
  417c0b:	dec    esi
  417c0c:	lock cmp al,0xa0
  417c0f:	add    ebx,DWORD PTR [ebp+esi*4-0x60]
  417c13:	unpcklps xmm0,xmm2
  417c16:	pop    eax
  417c17:	and    cl,ch
  417c19:	pop    ebx
  417c1a:	inc    edi
  417c1b:	add    al,0xa
  417c1d:	nop
  417c1e:	mov    eax,0x814456d6
  417c23:	ficomp DWORD PTR [edx-0x36]
  417c26:	mov    dl,0x2e
  417c28:	out    dx,eax
  417c29:	sub    DWORD PTR [edx-0x8],edi
  417c2c:	and    ch,BYTE PTR [esp+eiz*8+0x1f]
  417c30:	fisttp DWORD PTR [ebp+0x64]
  417c33:	daa    
  417c34:	add    cl,bh
  417c36:	fwait
  417c37:	push   eax
  417c38:	data16 mov WORD PTR [ebx],gs
  417c3b:	pop    esi
  417c3c:	rol    DWORD PTR [eax],1
  417c3e:	cld    
  417c3f:	stc    
  417c40:	bound  esp,QWORD PTR [edx+0x91c7708]
  417c46:	dec    eax
  417c47:	ret    
  417c48:	jnp    0x417c93
  417c4a:	in     eax,0x25
  417c4c:	fild   DWORD PTR [ecx+0x7a]
  417c4f:	cmp    DWORD PTR [ebx-0xea3dbfe],edx
  417c55:	xchg   ebp,eax
  417c56:	in     eax,0xcd
  417c58:	push   ecx
  417c59:	pop    ecx
  417c5a:	test   eax,0x988f504
  417c5f:	add    DWORD PTR [ebp+0x46],0x5f39a237
  417c66:	je     0x417cc1
  417c68:	dec    esp
  417c69:	and    dl,BYTE PTR [edi-0x2c]
  417c6c:	push   ebp
  417c6d:	add    esp,DWORD PTR [esi+0x2f]
  417c70:	(bad)  
  417c71:	mov    cl,0x22
  417c73:	xchg   edx,eax
  417c74:	pop    ss
  417c75:	cmp    bh,bl
  417c77:	stos   DWORD PTR es:[edi],eax
  417c78:	mov    ebx,0xa9763f76
  417c7d:	or     al,0xaa
  417c7f:	cmp    BYTE PTR [edx+0x249196bd],bh
  417c85:	inc    ebp
  417c86:	xchg   DWORD PTR [esi],ebx
  417c88:	sbb    cl,BYTE PTR [ecx]
  417c8a:	inc    esi
  417c8b:	loope  0x417c42
  417c8d:	jecxz  0x417c13
  417c8f:	or     eax,0x5ce5248a
  417c94:	inc    edi
  417c95:	(bad)  
  417c96:	xor    ah,dl
  417c98:	imul   ebp,edi,0xffffff85
  417c9b:	lods   eax,DWORD PTR ds:[esi]
  417c9c:	sbb    bl,BYTE PTR [eax+ecx*8-0x65]
  417ca0:	jg     0x417cad
  417ca2:	cmp    eax,0x4a01bc64
  417ca7:	mov    cl,BYTE PTR es:[edx-0x5b]
  417cab:	mov    BYTE PTR [ecx-0x34],bh
  417cae:	outs   dx,DWORD PTR ds:[esi]
  417caf:	or     eax,0xf851e936
  417cb4:	je     0x417d09
  417cb6:	dec    BYTE PTR [ebp+esi*2+0x24e02cdb]
  417cbd:	jl     0x417c44
  417cbf:	js     0x417c66
  417cc1:	jg     0x417c93
  417cc3:	dec    esi
  417cc4:	mov    ebx,0x5dc8530b
  417cc9:	addr16 add cl,ah
  417ccc:	scas   eax,DWORD PTR es:[edi]
  417ccd:	jp     0x417d0e
  417ccf:	pusha  
  417cd0:	js     0x417c61
  417cd2:	xchg   esp,eax
  417cd3:	and    bl,BYTE PTR [ebx+0x275024f4]
  417cd9:	enter  0xa7c,0x7b
  417cdd:	call   0xbe667b56
  417ce2:	mov    ds:0x630af500,al
  417ce7:	push   cs
  417ce8:	ss mov bh,0x48
  417ceb:	mov    esp,0x27008d50
  417cf0:	pop    es
  417cf1:	adc    ah,BYTE PTR [ecx+0x22]
  417cf4:	or     DWORD PTR [edi-0x3b696c6f],0xb08c082e
  417cfe:	fwait
  417cff:	clc    
  417d00:	shl    BYTE PTR [ecx+0xf23b7b4],1
  417d06:	jecxz  0x417cd3
  417d08:	cmp    DWORD PTR [esi-0x80],esp
  417d0b:	push   ecx
  417d0c:	frstor [ecx]
  417d0e:	dec    edi
  417d0f:	shl    WORD PTR [eax+0x1d],1
  417d13:	dec    edi
  417d14:	sahf   
  417d15:	xchg   edx,eax
  417d16:	jbe    0x417cd7
  417d18:	bound  ebp,QWORD PTR [ecx]
  417d1a:	enter  0x78ce,0xe8
  417d1e:	retf   
  417d1f:	and    edx,DWORD PTR ss:[edi]
  417d22:	ja     0x417d65
  417d24:	cmp    edx,esp
  417d26:	cdq    
  417d27:	cmp    DWORD PTR [esi+0xfa4ae14],eax
  417d2d:	ss dec ecx
  417d2f:	inc    esp
  417d30:	dec    edx
  417d31:	test   al,0x92
  417d33:	pop    ds
  417d34:	xchg   edx,eax
  417d35:	xchg   ecx,eax
  417d36:	mov    al,ds:0x9ee99097
  417d3b:	loopne 0x417d55
  417d3d:	xchg   DWORD PTR [eax+0x2da6f896],edi
  417d43:	fs cmc 
  417d45:	ja     0x417d67
  417d47:	mov    dl,0xf8
  417d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d4a:	dec    edx
  417d4b:	cmp    BYTE PTR [ecx+0x7e28bff0],dh
  417d51:	hlt    
  417d52:	push   ecx
  417d53:	cmc    
  417d54:	and    dl,BYTE PTR [ebp-0x3ce6740d]
  417d5a:	pop    ebx
  417d5b:	pop    ebp
  417d5c:	and    ch,cl
  417d5e:	jmp    0x4d43:0x13d8bf0a
  417d65:	rcl    ch,1
  417d67:	aad    0x90
  417d69:	sbb    eax,eax
  417d6b:	cmp    eax,esi
  417d6d:	pop    ss
  417d6e:	mov    cl,0x5
  417d70:	add    DWORD PTR [ecx+0x42],edi
  417d73:	in     eax,0x6
  417d75:	inc    edi
  417d76:	inc    eax
  417d77:	xchg   DWORD PTR [edx+esi*1],edi
  417d7a:	fsub   st,st(2)
  417d7c:	jle    0x417d83
  417d7e:	jmp    0x417d67
  417d80:	(bad)  
  417d81:	xchg   esp,eax
  417d82:	mov    dl,0x82
  417d84:	js     0x417d98
  417d86:	fs jge 0x417d75
  417d89:	push   ss
  417d8a:	ss dec edx
  417d8c:	xlat   BYTE PTR ds:[ebx]
  417d8d:	cmp    eax,0x10e45f19
  417d92:	pop    edi
  417d93:	cmp    cl,BYTE PTR ds:0xee5129e4
  417d99:	push   edx
  417d9a:	pop    edi
  417d9b:	lahf   
  417d9c:	les    ebp,FWORD PTR [eax-0x732b25b9]
  417da2:	mov    cs,WORD PTR [eax]
  417da4:	loope  0x417e18
  417da6:	lods   eax,DWORD PTR ds:[esi]
  417da7:	jge    0x417d8b
  417da9:	dec    ebx
  417daa:	adc    al,0x5f
  417dac:	retf   0x69ea
  417daf:	call   0xed157bfc
  417db4:	cwde   
  417db5:	test   al,0xb7
  417db7:	mov    dh,0x83
  417db9:	push   0x14db4020
  417dbe:	mov    edi,0x8c95c138
  417dc3:	adc    BYTE PTR [ebx-0x2d],0x42
  417dc7:	cmp    BYTE PTR [edi+0x38],ch
  417dca:	sbb    DWORD PTR [edi],esp
  417dcc:	xor    al,0xf1
  417dce:	add    eax,0x1d10a8e5
  417dd3:	ss in  al,0x9d
  417dd6:	pop    DWORD PTR [eax]
  417dd8:	sbb    cl,BYTE PTR [edx-0x25f478e0]
  417dde:	jno    0x417db6
  417de0:	call   0xef1dc274
  417de5:	xor    dl,ch
  417de7:	lods   eax,DWORD PTR ds:[esi]
  417de8:	or     al,0x8
  417dea:	pop    ss
  417deb:	or     BYTE PTR [edx+0x34],dl
  417dee:	in     al,0x2f
  417df0:	stos   BYTE PTR es:[edi],al
  417df1:	sbb    cl,BYTE PTR [esp+ebp*8-0x5facb290]
  417df8:	int3   
  417df9:	mov    edx,0x2e9bb953
  417dfe:	aad    0xbc
  417e00:	sub    ah,0x15
  417e03:	out    dx,eax
  417e04:	bound  ecx,QWORD PTR [edi+edi*2]
  417e07:	mov    ds:0xbce89a2,eax
  417e0c:	mov    dh,0x7b
  417e0e:	cmp    ecx,DWORD PTR [edx-0x1c106d30]
  417e14:	hlt    
  417e15:	sub    eax,0xad5ecd40
  417e1a:	fbld   TBYTE PTR [esp+0x31]
  417e1e:	jp     0x417dff
  417e20:	xchg   ebx,esp
  417e22:	(bad)  
  417e23:	mov    eax,0xce9732be
  417e28:	sbb    ebx,DWORD PTR [edi]
  417e2a:	cdq    
  417e2b:	xchg   bh,ch
  417e2d:	xchg   DWORD PTR [eax],ebx
  417e2f:	inc    esp
  417e30:	pusha  
  417e31:	inc    esi
  417e32:	or     ebx,DWORD PTR [esi+0x55d62595]
  417e38:	mov    bh,0xec
  417e3a:	ins    DWORD PTR es:[edi],dx
  417e3b:	dec    ecx
  417e3c:	mov    dl,0x29
  417e3e:	pop    ds
  417e3f:	fdivr  DWORD PTR [eax+0x6732bc49]
  417e45:	push   0xda4da5c0
  417e4a:	mov    ch,0x2c
  417e4c:	(bad)  [edi+0x19]
  417e4f:	pop    ecx
  417e50:	xchg   DWORD PTR [ebx],ebp
  417e52:	shr    DWORD PTR [eax-0x13fbf940],cl
  417e58:	sbb    dh,BYTE PTR [ebx-0x2e]
  417e5b:	dec    edi
  417e5c:	pop    ds
  417e5d:	lahf   
  417e5e:	jp     0x417ec0
  417e60:	and    BYTE PTR [edi],bl
  417e62:	jmp    eax
  417e64:	(bad)  
  417e65:	push   0x4847aae
  417e6a:	mov    BYTE PTR [ebx-0x20fe0d7d],bh
  417e70:	sub    eax,DWORD PTR [edx-0x40]
  417e73:	xchg   edx,eax
  417e74:	pop    ebp
  417e75:	add    edi,DWORD PTR [eax+ebp*2-0x2f]
  417e79:	dec    ebp
  417e7a:	mov    ds:0xc2a8965f,al
  417e7f:	popf   
  417e80:	mov    eax,ds:0x83eefeeb
  417e85:	add    DWORD PTR [eax-0x2974a402],esi
  417e8b:	aam    0xb8
  417e8d:	cmp    edi,DWORD PTR [eax+0x598160b8]
  417e93:	bound  ebx,QWORD PTR [edx]
  417e95:	mov    fs,WORD PTR [esi]
  417e97:	imul   esi,DWORD PTR [eax-0x12],0x9c154dd5
  417e9e:	pop    edi
  417e9f:	push   ss
  417ea0:	push   0xffffffaf
  417ea2:	int3   
  417ea3:	fs pop esp
  417ea5:	leave  
  417ea6:	mov    eax,ds:0x33102da1
  417eab:	cmp    ebx,DWORD PTR [esp+eiz*2-0x48]
  417eaf:	inc    ebx
  417eb0:	mov    eax,0xf425c24a
  417eb5:	out    0xc6,eax
  417eb7:	lds    ebp,FWORD PTR [edx]
  417eb9:	push   eax
  417eba:	mov    esp,0xc07d634c
  417ebf:	ins    DWORD PTR es:[edi],dx
  417ec0:	loopne 0x417e63
  417ec2:	fs adc eax,esp
  417ec5:	or     al,0x7f
  417ec7:	aam    0x6b
  417ec9:	add    al,0x8b
  417ecb:	add    al,0xad
  417ecd:	mov    BYTE PTR [esi+0x7c],dh
  417ed0:	ja     0x417ebe
  417ed2:	push   es
  417ed3:	xor    eax,0xf2674175
  417ed8:	retf   0x1e04
  417edb:	mov    ch,BYTE PTR es:[edx]
  417ede:	push   eax
  417edf:	sub    BYTE PTR [ebx+0x45],ch
  417ee2:	shl    DWORD PTR [eax+0x5a],1
  417ee5:	int3   
  417ee6:	xchg   ebx,eax
  417ee7:	cmp    DWORD PTR [ecx+0x5e],edx
  417eea:	add    esp,0xcfbaa4bc
  417ef0:	dec    esi
  417ef1:	xor    ecx,DWORD PTR [esi-0x78b0e049]
  417ef7:	dec    edi
  417ef8:	(bad)  
  417ef9:	xlat   BYTE PTR ds:[ebx]
  417efa:	sub    bl,BYTE PTR [edi-0x193ccca5]
  417f00:	sbb    al,0x51
  417f02:	add    DWORD PTR [ebx],esp
  417f04:	call   0xecb0:0x44aff7e6
  417f0b:	ret    0x2e27
  417f0e:	lods   al,BYTE PTR ds:[esi]
  417f0f:	jae    0x417f40
  417f11:	sbb    al,0x26
  417f13:	retf   
  417f14:	jmp    0x417e9e
  417f16:	push   edx
  417f17:	mov    ds:0xf825cba7,eax
  417f1d:	shl    DWORD PTR [ebp+0x4bac2882],cl
  417f23:	dec    edx
  417f24:	cmc    
  417f25:	jecxz  0x417f32
  417f27:	jnp    0x417eff
  417f29:	fsubp  st(3),st
  417f2b:	jecxz  0x417f1f
  417f2d:	out    0xee,eax
  417f2f:	repz adc BYTE PTR [eax+ecx*4],al
  417f33:	js     0x417f6e
  417f35:	call   DWORD PTR [ebx+edi*1-0x78e0b851]
  417f3c:	mov    ch,0x37
  417f3e:	ins    DWORD PTR es:[edi],dx
  417f3f:	mov    eax,ds:0x78feb430
  417f44:	jecxz  0x417ee0
  417f46:	ficom  DWORD PTR [edi-0x29b89735]
  417f4c:	fwait
  417f4d:	scas   al,BYTE PTR es:[edi]
  417f4e:	daa    
  417f4f:	and    BYTE PTR [ecx-0x62],ah
  417f52:	xor    ecx,edi
  417f54:	out    dx,al
  417f55:	dec    edi
  417f56:	and    BYTE PTR [ebx-0x34],ch
  417f59:	xor    esp,edx
  417f5b:	pop    ecx
  417f5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f5d:	mov    dl,0x3c
  417f5f:	sbb    BYTE PTR [ebp-0x53a54c07],0x15
  417f66:	inc    ebp
  417f67:	pop    ds
  417f68:	cwde   
  417f69:	mov    ebp,0xca59695a
  417f6e:	shl    BYTE PTR [ebx],0x1d
  417f71:	hlt    
  417f72:	or     DWORD PTR [ebx+0x75385253],ebp
  417f78:	sbb    ebp,DWORD PTR [edx-0x37]
  417f7b:	jne    0x417f0e
  417f7d:	inc    ebp
  417f7e:	out    0xc6,al
  417f80:	out    0x5b,eax
  417f82:	push   ss
  417f83:	jb     0x417f8c
  417f85:	into   
  417f86:	adc    DWORD PTR [edx],eax
  417f88:	add    esp,DWORD PTR [ebx]
  417f8a:	std    
  417f8b:	mov    ebx,0x134deeac
  417f90:	arpl   WORD PTR [ebx-0x7a519b7e],ax
  417f96:	add    eax,0x497b9057
  417f9b:	and    eax,esp
  417f9d:	test   eax,0x2025bcb1
  417fa2:	and    DWORD PTR [ebx+0x29],edi
  417fa5:	aam    0x92
  417fa7:	ror    eax,1
  417fa9:	push   ecx
  417faa:	jns    0x417f34
  417fac:	inc    esp
  417fad:	sub    al,0x6f
  417faf:	cmp    BYTE PTR [esi-0x71],bl
  417fb2:	push   ecx
  417fb3:	int3   
  417fb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fb5:	fbstp  TBYTE PTR [ebx-0x64200e97]
  417fbb:	jmp    0x26f50b82
  417fc0:	jne    0x417fb0
  417fc2:	(bad)  
  417fc3:	loope  0x417fd9
  417fc5:	cmp    ecx,DWORD PTR [esi-0x41]
  417fc8:	in     al,dx
  417fc9:	adc    BYTE PTR [edx+ecx*8+0x5e],ah
  417fcd:	xchg   ecx,eax
  417fce:	outs   dx,BYTE PTR ds:[esi]
  417fcf:	cdq    
  417fd0:	js     0x417ffc
  417fd2:	and    BYTE PTR [ebx-0x4845973c],cl
  417fd8:	nop
  417fd9:	xor    bl,BYTE PTR [esi+0x3d9876fc]
  417fdf:	cmc    
  417fe0:	mov    ebp,ds
  417fe2:	shr    al,cl
  417fe4:	mov    ds:0x8880b91e,eax
  417fe9:	push   0x7e
  417feb:	data16 jmp 0x418002
  417fee:	enter  0x1613,0x31
  417ff2:	cli    
  417ff3:	mov    edx,0x6a6bb6dd
  417ff8:	repz dec edi
  417ffa:	popf   
  417ffb:	sahf   
  417ffc:	xor    bl,BYTE PTR [edx]
  417ffe:	hlt    
  417fff:	dec    ebp
  418000:	jp     0x417fbd
  418002:	stos   DWORD PTR es:[edi],eax
  418003:	fsubr  QWORD PTR [ebp-0x29f99e4e]
  418009:	in     eax,dx
  41800a:	test   al,0xab
  41800c:	sbb    bl,BYTE PTR [edi]
  41800e:	sti    
  41800f:	rol    DWORD PTR [esi-0x5ab3581f],1
  418015:	jmp    0xb1fedf4
  41801a:	mov    BYTE PTR [ebp-0x44426642],bl
  418020:	stc    
  418021:	push   es
  418022:	mov    al,ds:0x472de7d6
  418027:	pop    esi
  418028:	jle    0x418096
  41802a:	and    eax,0x6dc4c755
  41802f:	sub    eax,0xa54c596a
  418034:	mov    es,WORD PTR [edi-0x47fd78e4]
  41803a:	or     bh,BYTE PTR [ecx+edx*4]
  41803d:	icebp  
  41803e:	mov    WORD PTR [edi-0x2cc50980],ds
  418044:	into   
  418045:	out    dx,al
  418046:	das    
  418047:	je     0x41803b
  418049:	jg     0x418017
  41804b:	mov    ah,0x52
  41804d:	sub    ah,BYTE PTR [esi+0x64755b42]
  418053:	push   esi
  418054:	or     eax,0x256c050e
  418059:	in     al,dx
  41805a:	gs std 
  41805c:	mov    dh,dl
  41805e:	test   al,0x1f
  418060:	aad    0xd0
  418062:	cmp    ah,dl
  418064:	cmc    
  418065:	jmp    0xeca5:0x8f8a93fc
  41806c:	out    0x7b,eax
  41806e:	xlat   BYTE PTR ds:[ebx]
  41806f:	and    BYTE PTR [esi-0x42],0xc4
  418073:	fwait
  418074:	or     esp,DWORD PTR [edi+0x78f7a3c]
  41807a:	sub    al,0x4f
  41807c:	adc    edi,DWORD PTR [ebp+0x3d]
  41807f:	xchg   ebx,eax
  418080:	xchg   DWORD PTR [edx+0x7d700d6c],edi
  418086:	ret    
  418087:	gs push 0xecedc10c
  41808d:	outs   dx,BYTE PTR ds:[esi]
  41808e:	sub    BYTE PTR [esi-0x2e05c73b],dl
  418094:	rep ins DWORD PTR es:[edi],dx
  418096:	push   es
  418097:	add    eax,0x2cca2c15
  41809c:	push   ecx
  41809d:	rsm    
  41809f:	dec    edx
  4180a0:	lods   al,BYTE PTR ds:[esi]
  4180a1:	or     esi,DWORD PTR [ebp-0x70]
  4180a4:	xchg   DWORD PTR ds:0x1d49ac4e,eax
  4180aa:	ss inc esp
  4180ac:	mov    ds:0x525280af,al
  4180b1:	jnp    0x4180bc
  4180b3:	mov    DWORD PTR [ecx],edx
  4180b5:	jb     0x41805f
  4180b7:	mov    ch,0x11
  4180b9:	dec    edi
  4180ba:	or     eax,DWORD PTR [eax]
  4180bc:	nop
  4180bd:	inc    ecx
  4180be:	add    al,0xb0
  4180c0:	xor    DWORD PTR [ebp+0x42],eax
  4180c3:	cmp    bl,BYTE PTR [eax-0xfa77545]
  4180c9:	das    
  4180ca:	in     al,dx
  4180cb:	pop    edi
  4180cc:	xchg   ecx,eax
  4180cd:	xor    eax,0x20e4c253
  4180d2:	scas   al,BYTE PTR es:[edi]
  4180d3:	mov    bl,cl
  4180d5:	(bad)  
  4180d6:	push   ds
  4180d7:	pop    es
  4180d8:	icebp  
  4180d9:	aad    0x91
  4180db:	or     cl,BYTE PTR [edx-0x3e]
  4180de:	push   ebp
  4180df:	add    eax,0x7280ccc
  4180e4:	push   es
  4180e5:	ret    
  4180e6:	dec    esp
  4180e7:	dec    edi
  4180e8:	mov    dl,0x39
  4180ea:	test   BYTE PTR [eax+0x31768d7c],cl
  4180f0:	mov    bl,0xb1
  4180f2:	xor    esp,eax
  4180f4:	rol    ah,1
  4180f6:	dec    edi
  4180f7:	xchg   edx,eax
  4180f8:	add    bl,BYTE PTR [ebx+0x38]
  4180fb:	rol    dl,1
  4180fd:	mov    ebp,0xbe4f3330
  418102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418103:	xchg   ecx,eax
  418104:	js     0x41809c
  418106:	dec    ebp
  418107:	push   ds
  418108:	imul   ebx,DWORD PTR [esi-0x60c6218a],0x79
  41810f:	in     eax,0x16
  418111:	adc    BYTE PTR [esi*4+0x6d4f6ada],dl
  418118:	adc    al,0x4
  41811a:	mov    ecx,0x52c27833
  41811f:	sbb    eax,0x59f420bf
  418124:	and    al,0xdb
  418126:	lods   al,BYTE PTR ds:[esi]
  418127:	lods   eax,DWORD PTR ds:[esi]
  418128:	jno    0x4180d4
  41812a:	loopne 0x418194
  41812c:	ins    DWORD PTR es:[edi],dx
  41812d:	(bad)  
  41812e:	test   BYTE PTR [edx+0x13],dh
  418131:	sub    eax,DWORD PTR [ebp+edi*2+0xb]
  418135:	jns    0x418195
  418137:	dec    ecx
  418138:	adc    edx,DWORD PTR [edx+0x69]
  41813b:	and    DWORD PTR [ecx-0x5b09f2ee],edi
  418141:	rcr    ecx,0x8d
  418144:	das    
  418145:	jmp    0x4181b9
  418147:	jg     0x4180e0
  418149:	or     eax,0xc1c78bb8
  41814e:	in     eax,dx
  41814f:	cmp    ah,bh
  418151:	aam    0x6c
  418153:	test   BYTE PTR [edx],bh
  418155:	push   ecx
  418156:	int    0xd7
  418158:	xchg   esi,eax
  418159:	(bad)  
  41815a:	(bad)  
  41815b:	sub    DWORD PTR fs:[ebp-0x4b],esi
  41815f:	cld    
  418160:	lods   al,BYTE PTR ds:[esi]
  418161:	mov    esp,0xa684a59f
  418166:	xor    cl,cl
  418168:	outs   dx,BYTE PTR ds:[esi]
  418169:	pop    ecx
  41816a:	dec    esp
  41816b:	(bad)  
  41816c:	es addr16 ja 0x418110
  418170:	ds jge 0x4181c4
  418173:	inc    ebx
  418174:	les    ebp,FWORD PTR [eax+ecx*8+0x71fc0666]
  41817b:	sbb    BYTE PTR [esi-0x627a84f8],cl
  418181:	out    dx,al
  418182:	ret    
  418183:	lea    edi,[edi]
  418185:	addr16 clc 
  418187:	push   ebx
  418188:	sub    dh,al
  41818a:	adc    DWORD PTR [edi-0x60],esi
  41818d:	int    0x8f
  41818f:	cmc    
  418190:	std    
  418191:	call   0x9b09f134
  418196:	mov    edi,0x68c509f
  41819b:	out    0x5c,al
  41819d:	test   DWORD PTR [edx+0x535f5435],ecx
  4181a3:	or     DWORD PTR ss:[edi-0xc],ecx
  4181a7:	mov    al,0xe7
  4181a9:	addr16 in eax,0xbe
  4181ac:	in     al,0x16
  4181ae:	loope  0x418214
  4181b0:	mov    ebx,0x9d299285
  4181b5:	sbb    al,0xae
  4181b7:	dec    edx
  4181b9:	adc    BYTE PTR [edi+edx*4],dl
  4181bc:	mov    edi,0xfb838201
  4181c1:	(bad)  
  4181c3:	mov    ch,0x9f
  4181c5:	clc    
  4181c6:	aaa    
  4181c7:	xchg   esi,eax
  4181c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181c9:	sub    cl,BYTE PTR [eax-0x7b]
  4181cc:	xor    eax,0x7cb84c3c
  4181d1:	sbb    BYTE PTR [esi+0x49],0x58
  4181d5:	(bad)  [ebp+0xb7bf761]
  4181db:	leave  
  4181dc:	jle    0x418248
  4181de:	aam    0x32
  4181e0:	pop    ebx
  4181e1:	mov    edi,DWORD PTR [eax]
  4181e3:	rcl    BYTE PTR [edx+edi*8+0x50],cl
  4181e7:	sar    dh,cl
  4181e9:	jg     0x4181b0
  4181eb:	outs   dx,DWORD PTR ds:[esi]
  4181ec:	mov    dh,0xe
  4181ee:	fidiv  WORD PTR [ecx]
  4181f0:	scas   al,BYTE PTR es:[edi]
  4181f1:	dec    esp
  4181f2:	hlt    
  4181f3:	cld    
  4181f4:	addr16 cmc 
  4181f6:	in     al,0x6e
  4181f8:	cld    
  4181f9:	imul   edx,DWORD PTR [edi],0xac7909e8
  4181ff:	clc    
  418200:	cwde   
  418201:	es dec esp
  418203:	sub    dh,BYTE PTR [edi-0x4]
  418206:	sar    DWORD PTR [esi+edi*8],0x6
  41820a:	push   ecx
  41820b:	loope  0x4181fd
  41820d:	mov    ss,WORD PTR [edx+edi*2]
  418210:	pop    esi
  418211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418212:	sbb    bl,BYTE PTR [edi]
  418214:	int    0xe6
  418216:	cmp    DWORD PTR [ebx+ebx*2+0x23bbdca0],esp
  41821d:	cli    
  41821e:	cmp    esi,ebx
  418220:	adc    al,0x26
  418222:	nop
  418223:	rsm    
  418225:	loope  0x418296
  418227:	sub    al,0xf4
  418229:	lds    ebp,FWORD PTR [esi-0x320e6321]
  41822f:	ins    DWORD PTR es:[edi],dx
  418230:	and    DWORD PTR [ebx+0x5a],edx
  418233:	rcr    BYTE PTR [ebp+0x2b827b8f],1
  418239:	push   0xffffff8e
  41823b:	sub    eax,0xd58b64eb
  418240:	sbb    ebp,DWORD PTR [eax]
  418242:	shr    BYTE PTR [esi-0x2da9427a],0xde
  418249:	cmp    ah,BYTE PTR [edx+0x59f73626]
  41824f:	dec    ebp
  418250:	mov    ecx,0xc0f4c9a7
  418255:	xchg   ebx,eax
  418256:	or     DWORD PTR [ebx-0x791d560d],esi
  41825c:	daa    
  41825d:	cmp    esp,ebx
  41825f:	fmul   QWORD PTR [edi+edi*4+0x0]
  418263:	lods   al,BYTE PTR ds:[si]
  418265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418266:	inc    ebp
  418267:	jg     0x9ab4252c
  41826d:	lods   al,BYTE PTR ds:[esi]
  41826e:	cli    
  41826f:	rol    BYTE PTR [ecx+0x39],1
  418272:	and    eax,0xf2f59d03
  418277:	jb     0x41829b
  418279:	mul    BYTE PTR [edi+0xbf641ca]
  41827f:	xchg   ebx,eax
  418280:	mov    bl,0x87
  418282:	pop    ebp
  418283:	data16 jecxz 0x418302
  418286:	mov    cl,0xdc
  418288:	fidivr DWORD PTR [eax-0xd8ece30]
  41828e:	ficomp DWORD PTR [eax]
  418290:	daa    
  418291:	lods   eax,DWORD PTR ds:[esi]
  418292:	dec    ebx
  418293:	cdq    
  418294:	push   cs
  418295:	test   DWORD PTR [eax+eiz*2+0x30a1147e],edi
  41829c:	outs   dx,BYTE PTR ds:[esi]
  41829d:	addr16 pop ss
  41829f:	hlt    
  4182a0:	inc    eax
  4182a1:	in     al,dx
  4182a2:	sti    
  4182a3:	repnz mov bh,BYTE PTR [edx]
  4182a6:	inc    ebx
  4182a7:	mov    esi,0x97adf6a4
  4182ac:	cmp    eax,0x9a1a0c94
  4182b1:	loope  0x41830b
  4182b3:	fld    QWORD PTR [ebx+0x7a4ab11d]
  4182b9:	push   ds
  4182ba:	scas   eax,DWORD PTR es:[edi]
  4182bb:	xor    esi,DWORD PTR [ebx-0x1cf2a2a2]
  4182c1:	mov    edi,0x5cff6f0c
  4182c6:	ins    BYTE PTR es:[edi],dx
  4182c7:	mov    BYTE PTR [edx],al
  4182c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182ca:	xchg   esi,eax
  4182cb:	dec    ecx
  4182cc:	inc    ecx
  4182cd:	sbb    bh,BYTE PTR [edx-0x75]
  4182d0:	sbb    DWORD PTR [eax],ebp
  4182d2:	xchg   ah,bh
  4182d4:	das    
  4182d5:	test   DWORD PTR [edi],esp
  4182d7:	pusha  
  4182d8:	fs js  0x4182bf
  4182db:	bound  eax,QWORD PTR [ecx+0x31]
  4182de:	iret   
  4182df:	inc    ebx
  4182e0:	inc    esp
  4182e1:	jnp    0x41832d
  4182e3:	jp     0x418353
  4182e5:	test   eax,0x7c118e7
  4182eb:	add    DWORD PTR [ebp+0x78],esi
  4182ee:	mov    WORD PTR [ecx+0x1f],es
  4182f1:	inc    edi
  4182f2:	mov    WORD PTR [eax+edx*1-0x2db6579f],fs
  4182f9:	mov    ah,0x44
  4182fb:	mov    edi,0x36c04808
  418300:	jp     0x4182e5
  418302:	sub    ecx,DWORD PTR [ebx+edi*2-0x1b]
  418306:	lods   eax,DWORD PTR ds:[esi]
  418307:	inc    ebx
  418308:	jle    0x4182d8
  41830a:	pop    esp
  41830b:	imul   edx,DWORD PTR [ebx],0xcdcd527d
  418311:	mul    al
  418313:	dec    esp
  418314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418315:	mov    ?,WORD PTR [edx-0x49]
  418318:	out    dx,al
  418319:	cmp    cl,ah
  41831b:	lea    eax,[ecx+0x567bf5a7]
  418321:	fidiv  WORD PTR [edi+0x24a1ba9c]
  418327:	xchg   ecx,eax
  418328:	add    BYTE PTR [ecx+0x46177e76],ch
  41832e:	sti    
  41832f:	(bad)
  418333:	push   cs
  418334:	dec    ebx
  418335:	or     ebp,DWORD PTR [ecx]
  418337:	and    cl,ah
  418339:	aam    0xcb
  41833b:	jp     0x41830d
  41833d:	xor    bl,dh
  41833f:	sbb    eax,DWORD PTR [ebx-0x60]
  418342:	and    eax,0xb81537e
  418347:	dec    ebp
  418348:	mul    BYTE PTR [esi+ebp*1]
  41834b:	xchg   esi,eax
  41834c:	std    
  41834d:	ficom  WORD PTR gs:[ebx+0x95a136b]
  418354:	xchg   esp,edx
  418356:	je     0x41830d
  418358:	cmp    al,0xc1
  41835a:	add    BYTE PTR [eax],al
  41835c:	jo     0x4183ac
  41835e:	and    al,0xdb
  418360:	push   ss
  418361:	icebp  
  418362:	and    dl,cl
  418364:	xor    ebp,0x43
  418367:	inc    edx
  418368:	lock cmp dh,0x90
  41836c:	adc    esp,DWORD PTR [edi+0x57a8d78b]
  418372:	in     eax,0xc0
  418374:	push   esi
  418375:	push   ss
  418376:	xor    DWORD PTR [edi-0x3f],0xf3e1342b
  41837d:	pop    eax
  41837e:	sbb    al,0xca
  418380:	push   ds
  418381:	outs   dx,BYTE PTR ds:[esi]
  418382:	xchg   esp,eax
  418383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418384:	push   ecx
  418385:	mov    esp,0xd20747e8
  41838a:	rcl    ebx,0x42
  41838d:	enter  0x2e75,0xe0
  418391:	push   edi
  418392:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418393:	mov    DWORD PTR [edi-0x33d1889a],esi
  418399:	jg     0x41836b
  41839b:	cmp    BYTE PTR [eax+ecx*1+0x24],al
  41839f:	jmp    0x418379
  4183a1:	ins    BYTE PTR es:[edi],dx
  4183a2:	aam    0xe6
  4183a4:	jne    0x4183ec
  4183a6:	cmp    DWORD PTR [ecx-0x5a0c16aa],ebp
  4183ac:	mov    eax,0x6e923393
  4183b1:	jnp    0x4183d5
  4183b3:	jmp    0x4183d6
  4183b5:	ins    DWORD PTR es:[edi],dx
  4183b6:	pop    ds
  4183b7:	nop
  4183b8:	cs dec ebp
  4183ba:	or     eax,0x91a0be6c
  4183bf:	fld    DWORD PTR [esi]
  4183c1:	loopne 0x418442
  4183c3:	aad    0x5e
  4183c5:	fldenv ds:0xd846913b
  4183cb:	xor    cl,BYTE PTR ds:0xf021e673
  4183d1:	cmp    DWORD PTR [ecx-0xd01e038],0x98c9235e
  4183db:	scas   al,BYTE PTR es:[edi]
  4183dc:	mov    eax,ds:0xfeb91a28
  4183e1:	ja     0x4183bc
  4183e3:	and    BYTE PTR [edx+ebx*2+0x2a208d0d],0x9d
  4183eb:	xor    DWORD PTR [esi+0x67b26216],0x59
  4183f2:	bound  esp,QWORD PTR [ecx]
  4183f4:	cdq    
  4183f5:	sbb    bh,BYTE PTR [edx-0xa79ba6c]
  4183fb:	clc    
  4183fc:	jb     0x418433
  4183fe:	outs   dx,DWORD PTR ds:[esi]
  4183ff:	push   edi
  418400:	in     al,0x49
  418402:	pop    ebx
  418403:	inc    esp
  418404:	popf   
  418405:	adc    al,0x78
  418407:	das    
  418408:	es xchg ecx,eax
  41840a:	push   0xe3dc0e6b
  41840f:	pop    ecx
  418410:	out    dx,al
  418411:	sub    edx,DWORD PTR [edi+0x520379cd]
  418417:	inc    ecx
  418418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418419:	jl     0x418412
  41841b:	jbe    0x418401
  41841d:	push   0x1d
  41841f:	outs   dx,DWORD PTR ds:[esi]
  418420:	ret    
  418421:	mov    ds,WORD PTR [eax-0x2d]
  418424:	inc    edx
  418426:	dec    esi
  418427:	shr    DWORD PTR [esi-0x59a28c14],0x2e
  41842e:	es add BYTE PTR fs:[ecx+edi*1+0x46],bl
  418434:	jmp    0x4183e7
  418436:	cmp    dl,ah
  418438:	cld    
  418439:	sti    
  41843a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41843b:	fisttp WORD PTR [edi]
  41843d:	mov    eax,0x2f439bee
  418442:	or     BYTE PTR [edx+eax*4-0x3],bh
  418446:	add    ebx,DWORD PTR [edi-0x39]
  418449:	xchg   BYTE PTR [eax],ah
  41844b:	sti    
  41844c:	mov    ah,0x38
  41844e:	ins    DWORD PTR es:[edi],dx
  41844f:	mov    dl,0xa3
  418451:	stc    
  418452:	or     DWORD PTR [eax],edi
  418454:	lods   al,BYTE PTR ds:[esi]
  418455:	in     eax,dx
  418456:	jb     0x418455
  418458:	xchg   edx,eax
  418459:	aaa    
  41845a:	fnstsw WORD PTR [edi+0x7658dd6e]
  418460:	mov    ss,WORD PTR [esi]
  418462:	push   ecx
  418463:	stos   DWORD PTR es:[edi],eax
  418464:	call   0xcb149a3
  418469:	mov    al,ds:0xb201f78a
  41846e:	push   es
  41846f:	adc    edi,DWORD PTR [edx+0x7e]
  418472:	add    ebp,esp
  418474:	jle    0x4184af
  418476:	jg     0x418427
  418478:	pop    ecx
  418479:	cmp    DWORD PTR [edi+esi*4+0x5dd01e3a],edi
  418480:	xlat   BYTE PTR ds:[ebx]
  418481:	scas   al,BYTE PTR es:[edi]
  418482:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418483:	sub    al,BYTE PTR [esi-0x54fc8639]
  418489:	sub    ebp,esp
  41848b:	fwait
  41848c:	mov    dl,0x22
  41848e:	push   es
  41848f:	add    eax,0x6e036103
  418494:	and    DWORD PTR [ecx-0x602990f9],0x30cd5cf4
  41849e:	int    0x2f
  4184a0:	(bad)  
  4184a1:	cmp    DWORD PTR [ebp+0x7aa415e2],ebp
  4184a7:	mov    eax,0xc760cc6e
  4184ac:	mov    DWORD PTR [esi+0x26],ecx
  4184af:	in     al,0x13
  4184b1:	add    al,BYTE PTR [edi]
  4184b3:	mov    ds:0xcd9048c9,al
  4184b8:	mov    ds:0xaf8b87e1,eax
  4184bd:	mov    al,ds:0x1f57fce1
  4184c2:	in     al,dx
  4184c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c4:	sbb    BYTE PTR [edx],0xb7
  4184c7:	push   ebp
  4184c8:	lea    ebp,[ebp-0x62]
  4184cb:	in     al,0x13
  4184cd:	ret    
  4184ce:	outs   dx,DWORD PTR ds:[esi]
  4184cf:	inc    edi
  4184d0:	pop    DWORD PTR [edx]
  4184d2:	dec    DWORD PTR [ecx]
  4184d4:	xor    BYTE PTR [ebp-0x54],cl
  4184d7:	push   0xad142d77
  4184dc:	push   es
  4184dd:	fistp  QWORD PTR [ecx+0x23fae3f1]
  4184e3:	jae    0x418510
  4184e5:	fisttp WORD PTR [ebx+0x2bccae96]
  4184eb:	fst    QWORD PTR [esi+0x7e]
  4184ee:	psubq  mm4,mm6
  4184f1:	std    
  4184f2:	or     DWORD PTR [edx+0x65],edi
  4184f5:	xchg   ebp,eax
  4184f6:	jbe    0x418533
  4184f8:	retf   
  4184f9:	adc    DWORD PTR [esi+0x4de8d58e],eax
  4184ff:	push   ss
  418500:	ja     0x4184fd
  418502:	stos   BYTE PTR es:[edi],al
  418503:	jmp    0xda4c:0x5fc03ec6
  41850a:	ret    
  41850b:	not    DWORD PTR [edi-0x6b68dbcf]
  418511:	fst    DWORD PTR ss:[edx+0x62]
  418515:	sbb    DWORD PTR [ebx+0x47e56d6d],ebx
  41851b:	mov    ch,0x16
  41851d:	inc    edx
  41851e:	mov    edx,0x58ec1c36
  418523:	push   ebx
  418524:	fild   WORD PTR [edi]
  418526:	jns    0x4184e9
  418528:	test   eax,0x1bebdb16
  41852d:	imul   edi,DWORD PTR [eax+0x5d5143bd],0x55981ef5
  418537:	push   eax
  418538:	jg     0x4184be
  41853a:	pop    ebx
  41853b:	mov    eax,0xea1db82a
  418540:	xchg   ecx,eax
  418541:	mov    dh,0x21
  418543:	(bad)  
  418544:	lds    esi,FWORD PTR [ebp+0x1f634e42]
  41854a:	sbb    ah,0x4c
  41854d:	mov    BYTE PTR [eax],ah
  41854f:	jae    0x418501
  418551:	mov    ebx,0x1b68070d
  418556:	popf   
  418557:	fidiv  WORD PTR [edx+0x73582a9d]
  41855d:	jmp    0xa3d2330b
  418562:	jl     0x4185ba
  418564:	cmp    ah,al
  418566:	mov    eax,ds:0x51702664
  41856b:	retf   
  41856c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41856d:	cld    
  41856e:	mov    ch,0xb0
  418570:	in     al,dx
  418571:	cld    
  418572:	mov    ds:0x90598c2e,eax
  418577:	adc    DWORD PTR [eax+ebx*8],0x1f7411b2
  41857e:	adc    cl,BYTE PTR [ecx-0x4ee4d25b]
  418584:	mov    al,ds:0x14f6f053
  418589:	or     ecx,0xffffffe5
  41858c:	rol    DWORD PTR [eax+0x71179437],cl
  418592:	add    edx,DWORD PTR [esi]
  418594:	dec    edi
  418595:	lods   eax,DWORD PTR ds:[esi]
  418596:	shl    BYTE PTR [eax-0x43],0x1e
  41859a:	jmp    0xb9277b3
  41859f:	pop    ds
  4185a0:	cld    
  4185a1:	retf   
  4185a2:	or     bh,BYTE PTR [edx+0x34e51c4e]
  4185a8:	jp     0x4185cb
  4185aa:	imul   bl
  4185ac:	test   DWORD PTR [ebx],edx
  4185ae:	pop    esi
  4185af:	mov    esi,0xe07fe8f0
  4185b4:	mov    cl,0xde
  4185b6:	div    DWORD PTR [esi-0x5c4d252f]
  4185bc:	loop   0x418618
  4185be:	jmp    0x764ff7bb
  4185c3:	dec    edi
  4185c4:	lods   eax,DWORD PTR ds:[esi]
  4185c5:	adc    al,0xa
  4185c7:	(bad)  
  4185c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c9:	shl    BYTE PTR [ebx+esi*4-0x68d01526],cl
  4185d0:	adc    eax,0xad1f78f2
  4185d5:	mov    cl,0x3
  4185d7:	dec    esp
  4185d8:	das    
  4185d9:	(bad)  
  4185da:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4185dc:	xor    al,0x3f
  4185de:	push   0xf6629968
  4185e3:	pop    eax
  4185e4:	inc    ecx
  4185e5:	or     bh,bl
  4185e7:	sahf   
  4185e8:	and    dl,BYTE PTR [ebp-0x783cd8bd]
  4185ee:	call   0x78f0f9e8
  4185f3:	mov    esp,0x1bb91287
  4185f8:	pop    ss
  4185f9:	loop   0x418671
  4185fb:	outs   dx,BYTE PTR ds:[esi]
  4185fc:	add    DWORD PTR [ecx+0x2d6d28f0],edi
  418602:	adc    al,0x4b
  418604:	daa    
  418605:	les    ebp,FWORD PTR [esi]
  418607:	mov    cl,0x4c
  418609:	jecxz  0x4185e9
  41860b:	and    DWORD PTR [ebp-0xb2e11b8],ecx
  418611:	icebp  
  418612:	test   al,0x17
  418614:	xchg   esi,eax
  418615:	fnstsw WORD PTR [edi+0x42df59e3]
  41861b:	adc    al,0x53
  41861d:	ss das 
  41861f:	cs jnp 0x418601
  418622:	js     0x418638
  418624:	xchg   ebx,eax
  418625:	mov    ah,0xe5
  418627:	fwait
  418628:	and    eax,0x2a2a7f8e
  41862d:	ins    DWORD PTR es:[edi],dx
  41862e:	(bad)  
  41862f:	push   esi
  418630:	call   0xabc666a4
  418635:	lahf   
  418636:	mov    al,0x29
  418638:	mov    edx,0x8a915573
  41863d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41863e:	scas   al,BYTE PTR es:[edi]
  41863f:	call   0x83d8:0x4485ab8b
  418646:	aad    0xf9
  418648:	pop    esp
  418649:	push   ebp
  41864a:	fwait
  41864b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41864c:	std    
  41864d:	hlt    
  41864e:	pop    es
  41864f:	mov    dh,0x4e
  418651:	push   ds
  418652:	mov    DWORD PTR [edi],eax
  418654:	fwait
  418655:	or     eax,0xbfc0bb31
  41865a:	sbb    eax,0x49f5e3f0
  41865f:	(bad)  
  418660:	(bad)  
  418661:	in     eax,0xa9
  418663:	cmc    
  418664:	or     DWORD PTR [esi+ebx*1-0x3246cd56],esp
  41866b:	push   cs
  41866c:	inc    ebx
  41866d:	mov    esi,0xf1a2f0b4
  418672:	stos   DWORD PTR es:[edi],eax
  418673:	mov    dl,dl
  418675:	aaa    
  418676:	daa    
  418677:	mov    ah,0x94
  418679:	pop    edx
  41867a:	xor    dl,BYTE PTR [esi]
  41867c:	xor    BYTE PTR [ecx-0x25],al
  41867f:	dec    ebx
  418680:	add    ah,al
  418682:	adc    esp,DWORD PTR [edx+0x36]
  418685:	idiv   BYTE PTR [eax+0x1e]
  418688:	out    dx,al
  418689:	mov    ebx,0x7e8b3d8e
  41868e:	mov    dl,0x3d
  418690:	mov    dl,0x89
  418692:	ror    DWORD PTR [edi+0x69],cl
  418695:	cmp    esp,DWORD PTR fs:[esi+eax*4-0x77694c56]
  41869d:	in     al,dx
  41869e:	adc    esi,eax
  4186a0:	fsubr  QWORD PTR [eax-0x6bf4c214]
  4186a6:	clc    
  4186a7:	idiv   ah
  4186a9:	retf   0xa9b8
  4186ac:	and    edx,DWORD PTR [eax]
  4186ae:	jns    0x41866b
  4186b0:	cwde   
  4186b1:	push   esp
  4186b2:	test   BYTE PTR [edi+ebp*8+0x3c6d31a2],dh
  4186b9:	adc    edi,0x162d5877
  4186bf:	adc    BYTE PTR [esi],dh
  4186c1:	fadd   DWORD PTR [eax]
  4186c3:	mov    bl,0xd9
  4186c5:	mov    WORD PTR [ebx-0x20],?
  4186c8:	jnp    0x418671
  4186ca:	jle    0x418735
  4186cc:	ins    BYTE PTR es:[edi],dx
  4186cd:	pop    ds
  4186ce:	mov    bh,ch
  4186d0:	mov    BYTE PTR [edi],dl
  4186d2:	sub    edx,edx
  4186d4:	adc    edi,DWORD PTR [ecx]
  4186d6:	push   edi
  4186d7:	aaa    
  4186d8:	(bad)  
  4186da:	and    bl,BYTE PTR [esi+ecx*4-0x39]
  4186de:	fist   WORD PTR [ebp+0x28]
  4186e1:	scas   al,BYTE PTR es:[edi]
  4186e2:	push   edx
  4186e3:	jmp    0x4186fd
  4186e5:	bound  ebx,QWORD PTR [edi-0x131de4f4]
  4186eb:	mov    esp,0x2fa0c08d
  4186f0:	test   BYTE PTR [ebp+0x5c],0xf2
  4186f4:	int    0x5a
  4186f6:	daa    
  4186f7:	mov    ds:0x1bfda32d,al
  4186fc:	cwde   
  4186fd:	ja     0x4186a0
  4186ff:	adc    eax,0xff92b7eb
  418704:	(bad)  
  418706:	arpl   WORD PTR [edx],di
  418708:	sbb    bl,BYTE PTR ds:0x9ad8f368
  41870e:	dec    esi
  41870f:	mov    ?,WORD PTR [eax-0x492ed1d3]
  418715:	dec    ebp
  418716:	mov    bh,0x27
  418718:	pop    ebx
  418719:	xchg   DWORD PTR [edx-0x5f2ca67f],edi
  41871f:	(bad)  
  418721:	out    dx,al
  418722:	aaa    
  418723:	test   al,0x65
  418725:	call   FWORD PTR [edi]
  418727:	jae    0x418704
  418729:	outs   dx,DWORD PTR ds:[esi]
  41872a:	xor    esp,DWORD PTR [ebx-0x763f6c48]
  418730:	pop    ecx
  418731:	sar    DWORD PTR [edx+edx*2-0x2f0f4d4b],1
  418738:	mov    esi,esi
  41873a:	xor    al,cl
  41873c:	imul   ebx,DWORD PTR [edx-0x26],0xfffffff2
  418740:	retf   
  418741:	ror    BYTE PTR [ecx-0x49],0xd6
  418745:	jl     0x418705
  418747:	pusha  
  418748:	and    eax,0xcf906a31
  41874d:	cmc    
  41874e:	cmp    esp,ecx
  418750:	shr    dh,0x2
  418753:	cwde   
  418754:	pop    edi
  418755:	xchg   esp,eax
  418756:	ins    BYTE PTR es:[edi],dx
  418757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418758:	xor    cl,BYTE PTR [ecx]
  41875a:	mov    WORD PTR [edx+ebx*8+0x1b48524a],?
  418761:	out    dx,eax
  418762:	adc    al,0xdd
  418764:	daa    
  418765:	fimul  WORD PTR [ebx+edx*1-0x419c679]
  41876c:	je     0x418722
  41876e:	push   edi
  41876f:	mov    gs,WORD PTR [edx-0x7249631c]
  418775:	dec    ebx
  418776:	mov    esp,edx
  418778:	jg     0x4187ce
  41877a:	fild   WORD PTR [edx-0x25]
  41877d:	rol    DWORD PTR [edx+0x3b],cl
  418780:	jnp    0x4187a8
  418782:	mov    esp,0x43aa016e
  418787:	repz mov ch,0xd
  41878a:	icebp  
  41878b:	adc    eax,0xd1039e8f
  418790:	xchg   esp,eax
  418791:	cmp    ch,ch
  418793:	lods   al,BYTE PTR ds:[esi]
  418794:	shrd   DWORD PTR [esi+0xe],esi,cl
  418798:	es cmp edx,edx
  41879b:	fcom   QWORD PTR ds:0x9595b778
  4187a1:	jecxz  0x418775
  4187a3:	mov    al,ds:0x61a41024
  4187a8:	pop    ss
  4187a9:	loopne 0x4187c4
  4187ab:	xchg   DWORD PTR [esi+eiz*8-0x4bc64070],ebx
  4187b2:	fwait
  4187b3:	pop    ss
  4187b4:	icebp  
  4187b5:	fcom   DWORD PTR [ebx-0x32]
  4187b8:	xor    esi,eax
  4187ba:	mov    bh,0xd2
  4187bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187bd:	rep lods eax,DWORD PTR ds:[esi]
  4187bf:	xchg   ebp,eax
  4187c0:	loope  0x4187a0
  4187c2:	xor    eax,0xf0135232
  4187c7:	call   ecx
  4187c9:	hlt    
  4187ca:	sbb    al,0x4a
  4187cc:	or     ebp,0xd81a3665
  4187d2:	xchg   BYTE PTR [ebp-0x2d9121fa],bl
  4187d8:	dec    eax
  4187d9:	(bad)  [ebx-0x2cd44966]
  4187df:	ins    BYTE PTR es:[edi],dx
  4187e0:	bound  eax,QWORD PTR [ebp+eiz*1+0x57c1659e]
  4187e7:	xor    esp,ecx
  4187e9:	enter  0xfff8,0x4f
  4187ed:	outs   dx,DWORD PTR ds:[esi]
  4187ee:	xor    eax,0xee38c99f
  4187f3:	sbb    esp,ebx
  4187f5:	pop    esi
  4187f6:	xor    eax,0x56247762
  4187fb:	xchg   edi,eax
  4187fc:	mov    edx,0x3f0aa182
  418801:	std    
  418802:	jo     0x4187e5
  418804:	out    0xf,eax
  418806:	xor    DWORD PTR [eax+0x65],ebx
  418809:	inc    ecx
  41880a:	mov    al,0x95
  41880c:	push   0x13c8b28
  418811:	or     DWORD PTR [eax+ecx*1-0xa],eax
  418815:	dec    ebp
  418816:	inc    esp
  418817:	nop
  418818:	mov    al,0x4c
  41881a:	and    DWORD PTR [edx+ebx*1-0x2f],edi
  41881e:	mov    eax,ds:0xeb89ee1b
  418823:	lea    eax,[ebp+0x8]
  418826:	and    al,0x8a
  418828:	ret    
  418829:	int    0x32
  41882b:	jge    0x4187cf
  41882d:	rol    BYTE PTR [edx],0xe0
  418830:	pop    ss
  418831:	jbe    0x418861
  418833:	popa   
  418834:	fsub   QWORD PTR [edi-0x16596cc1]
  41883a:	stos   BYTE PTR es:[edi],al
  41883b:	sub    DWORD PTR [edx+0xfda968b],edx
  418841:	mov    dl,0xc6
  418843:	and    al,BYTE PTR [edx-0x3106d9f1]
  418849:	imul   eax,DWORD PTR [ebx+0x52],0x1e
  41884d:	dec    bx
  41884f:	lds    esi,FWORD PTR [esp+esi*2-0x75]
  418853:	mov    ds:0xe09bab71,al
  418858:	push   esi
  418859:	jae    0x41887a
  41885b:	dec    edi
  41885c:	ds leave 
  41885e:	fsub   DWORD PTR [edx+0x4b]
  418861:	cmp    edi,DWORD PTR [eax+0x69973c7c]
  418867:	ja     0x418816
  418869:	xchg   BYTE PTR [ebp-0x65],ch
  41886c:	js     0x41888f
  41886e:	aam    0xdb
  418870:	out    dx,al
  418871:	neg    DWORD PTR [eax+ebx*1]
  418874:	in     eax,0xdb
  418876:	sbb    al,0xfe
  418878:	inc    ecx
  418879:	mov    BYTE PTR [esi],ch
  41887b:	mov    bh,0xcb
  41887d:	(bad)  
  41887e:	scas   al,BYTE PTR es:[edi]
  41887f:	test   al,0x80
  418881:	mov    al,ds:0x3dec21c2
  418886:	jmp    0x9fb5f98f
  41888b:	xchg   esi,eax
  41888c:	or     ecx,DWORD PTR [ebx-0x2cd158fb]
  418892:	dec    edx
  418893:	cli    
  418894:	mov    ds:0xef75f045,eax
  418899:	mov    eax,0x6c6a42fe
  41889e:	xor    eax,0x9b465063
  4188a3:	icebp  
  4188a4:	push   ebx
  4188a5:	test   eax,0xa2a6b039
  4188aa:	adc    dl,cl
  4188ac:	dec    ecx
  4188ad:	outs   dx,BYTE PTR ds:[esi]
  4188ae:	add    al,0x15
  4188b0:	inc    ebx
  4188b1:	loop   0x418881
  4188b3:	cmp    DWORD PTR ss:[eax-0x10d9d206],0x3
  4188bb:	push   ecx
  4188bc:	xor    al,0xc8
  4188be:	jmp    0xd98a:0xa9c2d62d
  4188c5:	xlat   BYTE PTR ds:[ebx]
  4188c6:	inc    ebp
  4188c7:	aaa    
  4188c8:	jl     0x418910
  4188ca:	cmp    bl,BYTE PTR [edi+0x23]
  4188cd:	mov    ebp,0x85dfa54b
  4188d2:	xchg   ecx,eax
  4188d3:	clc    
  4188d4:	sbb    eax,0xcb7e2805
  4188d9:	xchg   esp,eax
  4188da:	push   esi
  4188db:	pop    ecx
  4188dc:	fwait
  4188dd:	inc    ebx
  4188de:	push   gs
  4188e0:	sbb    bh,BYTE PTR [edx]
  4188e2:	cmp    DWORD PTR [ecx],eax
  4188e4:	fstp   QWORD PTR [edx+0x18380803]
  4188ea:	jle    0x41893d
  4188ec:	(bad)  
  4188ed:	test   esi,0xfaa3938f
  4188f3:	hlt    
  4188f4:	rol    DWORD PTR [edi-0x598b349],0x36
  4188fb:	leave  
  4188fc:	dec    ecx
  4188fd:	lods   eax,DWORD PTR ds:[esi]
  4188fe:	dec    ebp
  4188ff:	das    
  418900:	ret    
  418901:	push   ecx
  418902:	sbb    DWORD PTR [ecx],0x654e74c4
  418908:	arpl   bx,dx
  41890a:	pop    esp
  41890b:	neg    BYTE PTR [ebx+eiz*4]
  41890e:	push   eax
  41890f:	mov    bh,0xb0
  418911:	aad    0x6c
  418913:	xor    eax,0x4a39b900
  418918:	jno    0x4188f4
  41891a:	pop    eax
  41891b:	sti    
  41891c:	inc    edx
  41891d:	enter  0x98af,0x82
  418921:	out    dx,eax
  418922:	adc    edi,DWORD PTR [esi+ebp*2]
  418925:	imul   esp,edx,0x28
  418928:	mov    esp,ecx
  41892a:	inc    ebx
  41892b:	cmp    al,0x8b
  41892d:	adc    DWORD PTR cs:[edi],edi
  418930:	mov    edx,DWORD PTR [ecx+eiz*2]
  418933:	push   ss
  418934:	and    DWORD PTR [eax-0x59f5c3dd],ebx
  41893a:	xchg   esi,eax
  41893b:	es jp  0x41898b
  41893e:	(bad)  
  418940:	leave  
  418941:	cld    
  418942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418943:	sbb    esp,DWORD PTR [ecx]
  418945:	xlat   BYTE PTR ds:[ebx]
  418946:	and    bh,BYTE PTR [esi-0x6e06e49d]
  41894c:	push   DWORD PTR [edi]
  41894e:	cwde   
  41894f:	pop    ds
  418950:	shr    BYTE PTR [ecx-0xe0047d2],0xf1
  418957:	aad    0xf1
  418959:	inc    esp
  41895a:	inc    ebx
  41895b:	int    0x2f
  41895d:	aam    0x3e
  41895f:	mov    ch,0x3f
  418961:	icebp  
  418962:	sub    DWORD PTR [edx+0x5dcecee1],0xd69806f6
  41896c:	push   edx
  41896d:	and    dh,BYTE PTR [esi+0x125352e0]
  418973:	push   es
  418974:	sub    ah,0x88
  418977:	inc    esi
  418978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418979:	stos   BYTE PTR es:[edi],al
  41897a:	jp     0x4189b8
  41897c:	iret   
  41897d:	std    
  41897e:	adc    eax,0x614c921
  418983:	sbb    DWORD PTR [ebx+edi*1],eax
  418986:	test   dh,bh
  418988:	in     eax,dx
  418989:	das    
  41898a:	pminub mm0,QWORD PTR [ecx+0x27637989]
  418991:	stos   DWORD PTR es:[edi],eax
  418992:	arpl   sp,si
  418994:	hlt    
  418995:	adc    BYTE PTR cs:[esi-0x2a],ch
  418999:	ss lahf 
  41899b:	or     eax,0xdb58e175
  4189a0:	aam    0xdb
  4189a2:	test   BYTE PTR [eax+0x5892b693],cl
  4189a8:	daa    
  4189a9:	jp     0x41894b
  4189ab:	inc    ecx
  4189ac:	mov    al,ds:0xdda29f66
  4189b1:	mov    ebx,0xd9e0f9ce
  4189b6:	fwait
  4189b7:	and    eax,0x73d24cb9
  4189bc:	enter  0x34fc,0x72
  4189c0:	mov    dl,0xee
  4189c2:	pop    ebx
  4189c3:	loop   0x4189af
  4189c5:	adc    BYTE PTR [edx+eax*2+0x7045a594],al
  4189cc:	retf   0xbaa7
  4189cf:	sar    edi,0xdd
  4189d2:	lods   eax,DWORD PTR ds:[esi]
  4189d3:	dec    esp
  4189d4:	gs cdq 
  4189d6:	cmp    DWORD PTR [esi-0x1feafb51],edx
  4189dc:	iret   
  4189dd:	jge    0x4189c8
  4189df:	sub    dl,BYTE PTR [edi]
  4189e1:	mov    ds:0xce111bad,al
  4189e6:	adc    bl,cl
  4189e8:	lds    ecx,FWORD PTR [edi]
  4189ea:	test   DWORD PTR [eax-0x356652e8],0xac1d9f0b
  4189f4:	and    cl,BYTE PTR [edi+0x25]
  4189f7:	mov    esp,0x325ae228
  4189fc:	mov    ebp,0xa6f1f8bd
  418a01:	imul   BYTE PTR [ebp-0x2e]
  418a04:	jg     0x4189cf
  418a06:	mov    ds:0xd696138b,al
  418a0b:	ret    
  418a0c:	sub    BYTE PTR [ebx+0x78],dl
  418a0f:	mov    edi,DWORD PTR [esp+ebp*1]
  418a12:	cli    
  418a13:	nop
  418a14:	xor    DWORD PTR ds:0x74afe97b,0x45
  418a1b:	(bad)  
  418a1c:	mov    ds:0x31bad8f0,al
  418a21:	shr    BYTE PTR [edx+0x70ece9d9],1
  418a27:	add    al,0x13
  418a29:	dec    esi
  418a2a:	(bad)  
  418a2b:	mov    BYTE PTR [bp+si],bh
  418a2e:	or     eax,0xdce5f0d6
  418a33:	add    bl,BYTE PTR [edx-0xe]
  418a36:	jle    0x4189f5
  418a38:	leave  
  418a39:	in     al,dx
  418a3a:	pop    eax
  418a3b:	mov    bl,BYTE PTR [ecx]
  418a3d:	in     eax,dx
  418a3e:	mov    bh,bh
  418a40:	sbb    BYTE PTR [edi-0xd6e9a3a],dh
  418a46:	jno    0x4189d6
  418a48:	daa    
  418a49:	xor    eax,0x768f2326
  418a4e:	or     ebp,DWORD PTR [edx+eiz*1+0x73548151]
  418a55:	jne    0x418a4a
  418a57:	stc    
  418a58:	push   ebx
  418a59:	mov    ds:0xbcf3416,al
  418a5e:	cli    
  418a5f:	and    eax,0xdaf59b89
  418a64:	or     eax,DWORD PTR [ecx+0xc57c9a5]
  418a6a:	dec    esp
  418a6b:	sbb    bl,dh
  418a6d:	push   eax
  418a6e:	adc    al,0x76
  418a70:	or     al,0x61
  418a72:	pop    eax
  418a73:	pop    esp
  418a74:	sbb    eax,0x3cbec602
  418a79:	ins    DWORD PTR es:[edi],dx
  418a7a:	push   0xba1a54ae
  418a7f:	popa   
  418a80:	jo     0x418ad7
  418a82:	call   0x699d:0x36e0e812
  418a89:	inc    esi
  418a8a:	xchg   DWORD PTR [edx-0x36],edi
  418a8d:	jle    0x418a2b
  418a8f:	pop    ebx
  418a90:	lea    edx,[ecx+0xc]
  418a93:	add    al,0x16
  418a95:	ins    BYTE PTR es:[edi],dx
  418a96:	push   esi
  418a97:	call   0x1b0b43b6
  418a9c:	(bad)  
  418a9d:	jl     0x418ad2
  418a9f:	xchg   BYTE PTR [edx-0x74],dh
  418aa2:	imul   esp,DWORD PTR [esi-0x64217e7],0xffffff85
  418aa9:	lods   eax,DWORD PTR ds:[esi]
  418aaa:	mov    ds:0x41eb316d,eax
  418aaf:	pop    esp
  418ab0:	pop    DWORD PTR [ebx-0x25183088]
  418ab6:	adc    ebp,DWORD PTR ds:0xc4c7d154
  418abc:	push   ds
  418abd:	repz pop edx
  418abf:	mov    dl,0xe0
  418ac1:	bound  ebp,QWORD PTR [ebx-0x52b90e3f]
  418ac7:	pop    es
  418ac8:	jecxz  0x418b2f
  418aca:	jg     0x418b1d
  418acc:	pushf  
  418acd:	add    al,0xd0
  418acf:	xor    BYTE PTR [eax],cl
  418ad1:	mov    edi,0xd578a9e
  418ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad7:	ja     0x418a62
  418ad9:	pop    ebx
  418ada:	enter  0x3bed,0xe6
  418ade:	(bad)  
  418adf:	mov    ecx,0xa3155acc
  418ae4:	add    esp,DWORD PTR [edi+ebp*1+0x5e]
  418ae8:	xchg   edx,eax
  418ae9:	xchg   BYTE PTR [edi],ch
  418aeb:	fcomip st,st(5)
  418aed:	(bad)  
  418aee:	push   eax
  418aef:	in     al,0x9a
  418af1:	xchg   esi,eax
  418af2:	mov    dl,0xf0
  418af4:	cmp    esi,DWORD PTR [ebp-0x67]
  418af7:	lds    edx,FWORD PTR [ebx]
  418af9:	mov    ds:0xc1152aaa,al
  418afe:	inc    edi
  418aff:	repz or al,0xf1
  418b02:	push   esp
  418b03:	xchg   ebx,eax
  418b04:	loopne 0x418abb
  418b06:	fcomi  st,st(5)
  418b08:	aam    0xfe
  418b0a:	mov    bl,0xf2
  418b0c:	stos   DWORD PTR es:[edi],eax
  418b0d:	aas    
  418b0e:	ds sar edx,1
  418b11:	int    0x68
  418b13:	pop    edx
  418b14:	bnd js 0x418b31
  418b17:	mov    BYTE PTR [edi+0x66],bl
  418b1a:	lods   eax,DWORD PTR ds:[esi]
  418b1b:	call   0x319e:0xd3620e37
  418b22:	loopne 0x418b62
  418b24:	cmc    
  418b25:	pop    ds
  418b26:	jge    0x418b0d
  418b28:	outs   dx,DWORD PTR ds:[esi]
  418b29:	push   ss
  418b2a:	shl    BYTE PTR [eax-0x3e],1
  418b2d:	xchg   ebp,eax
  418b2e:	push   ds
  418b2f:	pop    ecx
  418b30:	popf   
  418b31:	jle    0x418b7e
  418b33:	test   DWORD PTR [eax],ecx
  418b35:	div    BYTE PTR [ebx+0x545d1cad]
  418b3b:	(bad)  
  418b3c:	imul   ecx,DWORD PTR [edx+edi*2-0x2d],0x79
  418b41:	jecxz  0x418b2d
  418b43:	mov    edx,0x976b1fa6
  418b48:	xchg   edi,eax
  418b49:	shl    BYTE PTR [edx+0x2d],1
  418b4c:	pop    esi
  418b4d:	push   ds
  418b4e:	test   eax,0x47d6dab5
  418b53:	ss (bad) 
  418b55:	scas   eax,DWORD PTR es:[edi]
  418b56:	sub    al,0x62
  418b58:	inc    ecx
  418b59:	jecxz  0x418af8
  418b5b:	pop    eax
  418b5c:	dec    ebp
  418b5d:	jmp    0x418ba1
  418b5f:	pop    es
  418b60:	(bad)  
  418b61:	inc    esp
  418b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b63:	rol    DWORD PTR [edx],1
  418b65:	jbe    0x418b15
  418b67:	js     0x418af4
  418b69:	dec    edx
  418b6a:	adc    ch,cl
  418b6c:	mov    DWORD PTR [esi-0x38597480],ecx
  418b72:	mov    fs,WORD PTR [ebp+0x5c3171c0]
  418b78:	or     ebp,DWORD PTR [edx-0x3a7e3683]
  418b7e:	push   ebx
  418b7f:	pusha  
  418b80:	cdq    
  418b81:	xlat   BYTE PTR ds:[ebx]
  418b82:	rcr    DWORD PTR [edx+0x33],1
  418b85:	data16 xor BYTE PTR [esi+edx*4+0x3e],dl
  418b8a:	pop    ebx
  418b8b:	sti    
  418b8c:	pop    esi
  418b8d:	test   BYTE PTR [edi+0x79f1ee9b],ch
  418b93:	xor    eax,DWORD PTR [ecx+0x63d4f7d0]
  418b99:	jecxz  0x418bbe
  418b9b:	xchg   ch,dl
  418b9d:	xor    al,0xee
  418b9f:	ror    al,cl
  418ba1:	add    eax,0x7f8b5925
  418ba6:	sbb    DWORD PTR [edx+0x78bac0e6],esi
  418bac:	fdivr  st,st(0)
  418bae:	addr16 push esi
  418bb0:	addr16 inc ebx
  418bb2:	pop    esp
  418bb3:	push   0x1c47e1dd
  418bb8:	mov    bh,0x12
  418bba:	pushf  
  418bbb:	and    ebp,DWORD PTR [edi]
  418bbd:	adc    esp,DWORD PTR [ebx+0x4e]
  418bc0:	fsub   DWORD PTR [ebx]
  418bc2:	fdiv   QWORD PTR [eax]
  418bc4:	push   ss
  418bc5:	mov    esi,0xa7f4135c
  418bca:	mov    BYTE PTR [ebp+0x55103aa2],al
  418bd0:	and    ecx,eax
  418bd2:	mov    eax,esp
  418bd4:	xor    al,0x36
  418bd6:	or     dh,BYTE PTR [edi-0x29cebc1]
  418bdc:	or     edx,DWORD PTR [edi]
  418bde:	mov    fs,WORD PTR [esi]
  418be0:	add    eax,0xbccdff66
  418be5:	mov    WORD PTR [edi+esi*4+0x65d5e751],cs
  418bec:	mov    al,0xe8
  418bee:	arpl   WORD PTR [eax-0x3d3ea90b],si
  418bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bf5:	test   ecx,0x4a1123ee
  418bfb:	ja     0x418ba7
  418bfd:	(bad)  
  418bfe:	aas    
  418bff:	cmp    BYTE PTR [edi+0x48],bl
  418c02:	cmp    al,BYTE PTR [esi+edi*2+0x5c]
  418c06:	sub    edx,DWORD PTR [eax-0x8]
  418c09:	and    ecx,ebx
  418c0b:	or     eax,DWORD PTR [esi+0x1f]
  418c0e:	out    0x8d,al
  418c10:	xchg   ebp,eax
  418c11:	retf   
  418c12:	daa    
  418c13:	mov    ebx,0xafd33243
  418c18:	mov    dh,al
  418c1a:	jnp    0x418b9e
  418c1c:	nop
  418c1d:	add    ebp,DWORD PTR [esi]
  418c1f:	(bad)  
  418c21:	cmp    ah,0x61
  418c24:	cmp    BYTE PTR [ebp-0x4da62de8],bl
  418c2a:	(bad)  
  418c2b:	and    DWORD PTR [edi-0x32],esi
  418c2e:	call   0xc377dda2
  418c33:	push   cs
  418c34:	cmp    al,0x16
  418c36:	push   ss
  418c37:	and    BYTE PTR [edi],al
  418c39:	add    eax,0x97cbfd98
  418c3e:	or     bl,bh
  418c40:	xlat   BYTE PTR ds:[ebx]
  418c41:	hlt    
  418c42:	jl     0x418c7d
  418c44:	dec    ecx
  418c45:	jg     0x418bd3
  418c47:	dec    ecx
  418c48:	test   DWORD PTR [ebx-0x74],ebp
  418c4b:	sbb    al,0xf2
  418c4d:	mov    ds:0xa92869b3,eax
  418c52:	jne    0x418c34
  418c54:	out    0x94,al
  418c56:	sub    eax,0x395c32f
  418c5b:	lds    ebp,FWORD PTR [ebx]
  418c5d:	push   ebx
  418c5e:	into   
  418c5f:	sub    bl,BYTE PTR [ecx]
  418c61:	fs js  0x418c95
  418c64:	and    BYTE PTR [edi-0x6a54cab9],ah
  418c6a:	mov    dh,0xa
  418c6c:	jae    0x418cd9
  418c6e:	ror    al,cl
  418c70:	das    
  418c71:	inc    ecx
  418c72:	cmp    eax,DWORD PTR [edx]
  418c74:	in     eax,dx
  418c75:	lea    ebp,[ecx]
  418c77:	or     DWORD PTR [ebx],0xf59ff42a
  418c7d:	or     DWORD PTR [esi+0x31],0xffffffbb
  418c81:	(bad)  
  418c82:	cli    
  418c83:	(bad)  
  418c84:	cmp    BYTE PTR ds:0x9e0f40e5,bh
  418c8a:	adc    edi,DWORD PTR [ebx+eax*2]
  418c8d:	mov    ebp,0xf8b430f3
  418c92:	xchg   ebx,eax
  418c93:	ja     0x418caa
  418c95:	cmp    BYTE PTR [ebp+0x5097473f],bh
  418c9b:	pop    ss
  418c9c:	xchg   DWORD PTR [ebp-0x28],ecx
  418c9f:	adc    DWORD PTR [esi-0xa],edi
  418ca2:	add    al,dh
  418ca4:	pop    esp
  418ca5:	shr    BYTE PTR [ebx+eiz*4-0x17],0xc7
  418caa:	cs push ebx
  418cac:	test   DWORD PTR [ebp+0xd271b4e],ebp
  418cb2:	gs ins BYTE PTR es:[edi],dx
  418cb4:	mov    ebp,0xf1efad32
  418cb9:	push   edi
  418cba:	cmp    edi,0x7d
  418cbd:	(bad)  
  418cbe:	cmp    al,0xe1
  418cc0:	xchg   edx,eax
  418cc1:	or     BYTE PTR [edx+0x1c],dh
  418cc4:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  418cc6:	mov    ds:0xb920b9cb,al
  418ccb:	mov    eax,ds:0x3e94bbc8
  418cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cd1:	sbb    WORD PTR [ecx+0x2affead],sp
  418cd8:	add    eax,0xdae1fd
  418cdd:	loop   0x418d05
  418cdf:	aad    0xd1
  418ce1:	add    DWORD PTR [edx+0x62],esi
  418ce4:	mov    ds:0x5d8b0ff4,eax
  418ce9:	outs   dx,DWORD PTR ds:[esi]
  418cea:	push   si
  418cec:	dec    ebp
  418ced:	mov    ch,0x32
  418cef:	repnz scas al,BYTE PTR es:[edi]
  418cf1:	sbb    DWORD PTR [eax-0x65],ebp
  418cf4:	pop    ecx
  418cf5:	fimul  WORD PTR [edx+0xd]
  418cf8:	mov    ch,0x60
  418cfa:	imul   edx,DWORD PTR [ebx+0x7c],0x65bdbbb7
  418d01:	leave  
  418d02:	outs   dx,BYTE PTR ds:[esi]
  418d03:	sbb    esp,DWORD PTR [eax]
  418d05:	retf   
  418d06:	xor    eax,0xd761b800
  418d0b:	or     eax,0xce630940
  418d10:	js     0x418d17
  418d12:	div    BYTE PTR [edi+0x5020cb25]
  418d18:	shl    DWORD PTR [esi+0x7b],cl
  418d1b:	lods   al,BYTE PTR ds:[esi]
  418d1c:	gs cmp bh,bl
  418d1f:	mov    es,WORD PTR [ecx+edi*2]
  418d22:	loope  0x418d99
  418d24:	fstp   DWORD PTR [esi-0x69edc931]
  418d2a:	sbb    al,BYTE PTR [ebx+0x27bec186]
  418d30:	push   edi
  418d32:	xchg   ebx,eax
  418d33:	mov    esi,0x98031205
  418d38:	int3   
  418d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d3a:	push   eax
  418d3b:	gs xchg ebx,eax
  418d3d:	jno    0x418d69
  418d3f:	pop    ecx
  418d40:	dec    DWORD PTR [eax+0x11]
  418d43:	out    dx,al
  418d44:	out    dx,eax
  418d45:	int3   
  418d46:	mov    al,ds:0x2d8becd4
  418d4b:	push   es
  418d4c:	cmp    eax,0x66f92c5b
  418d51:	push   ss
  418d52:	out    0x53,al
  418d54:	hlt    
  418d55:	imul   ebx,DWORD PTR [ebx],0x97d884d9
  418d5b:	mov    DWORD PTR [ecx-0x681263a8],esp
  418d61:	aas    
  418d62:	cdq    
  418d63:	aam    0xce
  418d65:	ss pusha 
  418d67:	mov    ebp,0xfcde7efe
  418d6c:	inc    esi
  418d6d:	out    dx,eax
  418d6e:	leave  
  418d6f:	mov    ah,0xe8
  418d71:	jle    0x418da7
  418d73:	stos   BYTE PTR es:[edi],al
  418d74:	xchg   ebx,eax
  418d75:	inc    ecx
  418d76:	sbb    al,0x94
  418d78:	mov    bl,0x30
  418d7a:	ret    
  418d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d7c:	shr    BYTE PTR [edi],0x92
  418d7f:	adc    al,0xc9
  418d81:	leave  
  418d82:	outs   dx,BYTE PTR ds:[esi]
  418d83:	test   ah,0x1c
  418d86:	inc    ebp
  418d87:	push   edx
  418d88:	stos   BYTE PTR es:[edi],al
  418d89:	mov    ch,BYTE PTR [ebx+0x5b816564]
  418d8f:	mov    esp,0x323fe18f
  418d94:	xor    eax,0xc0a665fa
  418d99:	cmp    BYTE PTR [ebx],ah
  418d9b:	repz sbb DWORD PTR [eax+0x39673661],ebp
  418da2:	xor    al,0x65
  418da4:	jbe    0x418dc1
  418da6:	in     al,0xc
  418da8:	in     eax,0x36
  418daa:	push   ebp
  418dab:	push   0x772abe06
  418db0:	retf   0x16a5
  418db3:	xor    bh,BYTE PTR [edi+0x16]
  418db6:	pop    esp
  418db7:	mov    cl,0x96
  418db9:	js     0x418ddb
  418dbb:	mov    eax,ebx
  418dbd:	popa   
  418dbe:	sbb    al,0xd5
  418dc0:	sbb    ah,BYTE PTR [esi]
  418dc2:	xchg   ebx,eax
  418dc3:	adc    edi,0xdeecc69a
  418dc9:	out    0x2,eax
  418dcb:	mov    ds:0x58762432,eax
  418dd0:	pushf  
  418dd1:	fwait
  418dd2:	arpl   WORD PTR [eax],ax
  418dd4:	adc    ebx,DWORD PTR ds:0x2f3b2416
  418dda:	mov    bl,0x14
  418ddc:	or     bl,BYTE PTR [edi-0x47c470fe]
  418de2:	dec    esi
  418de3:	cld    
  418de4:	cmp    eax,0x98ca22d2
  418de9:	lea    esi,[edi-0x46]
  418dec:	lods   eax,DWORD PTR ds:[esi]
  418ded:	fucomi st,st(7)
  418def:	pusha  
  418df0:	add    ch,al
  418df2:	pop    ss
  418df3:	sub    bl,0xb6
  418df6:	mov    esp,0xb705332f
  418dfb:	repnz rol DWORD PTR [esi+0x1d],0x9a
  418e00:	loopne 0x418e0e
  418e02:	jmp    0x6103:0xf6af913f
  418e09:	dec    edi
  418e0a:	dec    esp
  418e0b:	sub    eax,0xe8335695
  418e10:	jne    0x418def
  418e12:	jecxz  0x418e70
  418e14:	sbb    DWORD PTR [ebx-0x40],ebp
  418e17:	lds    ecx,FWORD PTR [eax+0x177cd130]
  418e1d:	es in  al,dx
  418e1f:	push   esp
  418e20:	(bad)  
  418e21:	mov    eax,ds:0x16077cac
  418e26:	jge    0x418dd2
  418e28:	mov    eax,ds:0x141dc1fe
  418e2d:	in     al,0x78
  418e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e30:	arpl   WORD PTR [edi],sp
  418e32:	cmp    DWORD PTR [ebx],0x7
  418e35:	fidivr WORD PTR [edi]
  418e37:	(bad)  
  418e38:	loop   0x418de8
  418e3a:	cmp    bl,0x0
  418e3d:	aas    
  418e3e:	dec    esp
  418e3f:	or     eax,0x1bfa57ae
  418e44:	xor    BYTE PTR [ecx+0x70],0x15
  418e48:	ja     0x418e50
  418e4a:	xchg   ebp,eax
  418e4b:	xor    ecx,DWORD PTR [eax]
  418e4d:	adc    eax,0x511d6735
  418e52:	stos   BYTE PTR es:[edi],al
  418e53:	mov    ah,0xee
  418e55:	and    DWORD PTR [ebx-0x76],eax
  418e58:	or     eax,0x705f6346
  418e5d:	and    al,0x3b
  418e5f:	hlt    
  418e60:	or     DWORD PTR [edx+eax*8+0x22],0xdfdb94c7
  418e68:	sub    esp,edi
  418e6a:	(bad)  
  418e6b:	dec    esi
  418e6c:	ror    BYTE PTR ss:[bx+di-0x1f],cl
  418e71:	jmp    0x418e64
  418e73:	repnz into 
  418e75:	or     eax,0x9d8de410
  418e7a:	jb     0x418e5e
  418e7c:	mov    esi,0xe7a6d988
  418e81:	add    BYTE PTR [ecx+0x0],bl
  418e84:	sub    al,0xb0
  418e86:	mov    cl,cl
  418e88:	cli    
  418e89:	push   eax
  418e8a:	push   ecx
  418e8b:	cmp    dh,BYTE PTR [esi-0x64549bbf]
  418e91:	xor    DWORD PTR [edx+0x74],0x5d10bb42
  418e98:	cld    
  418e99:	mov    ebp,0x4dc81627
  418e9e:	and    BYTE PTR [eax],dl
  418ea0:	int3   
  418ea1:	(bad)
  418ea5:	rcr    DWORD PTR [ebx],1
  418ea7:	sar    bl,1
  418ea9:	sub    BYTE PTR [esi+0x7ce80577],ah
  418eaf:	or     BYTE PTR [edx-0x4fbff3d3],al
  418eb5:	icebp  
  418eb6:	push   eax
  418eb7:	mov    dh,0x45
  418eb9:	jg     0x418ec4
  418ebb:	aam    0x21
  418ebd:	sahf   
  418ebe:	sub    bh,BYTE PTR [ecx+ebp*1]
  418ec1:	jmp    0x418eaf
  418ec3:	jae    0x418e56
  418ec5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ec6:	aam    0x5
  418ec8:	xor    bh,ah
  418eca:	xlat   BYTE PTR ds:[ebx]
  418ecb:	mov    WORD PTR [edx],cs
  418ecd:	xor    ebp,ebp
  418ecf:	jle    0x418ed6
  418ed1:	jg     0x418f13
  418ed3:	adc    ebp,ebx
  418ed5:	or     DWORD PTR [edi-0x421c493f],eax
  418edb:	ret    
  418edc:	mov    dh,0x3e
  418ede:	lock sub BYTE PTR [ebp+0x5a],dl
  418ee2:	xchg   ecx,eax
  418ee3:	rol    BYTE PTR [esi-0x747f1cad],cl
  418ee9:	mov    eax,ds:0xd3671968
  418eee:	cmp    al,0xba
  418ef0:	jg     0x418ea7
  418ef2:	pop    edi
  418ef3:	loope  0x418ee4
  418ef5:	mov    bl,0x20
  418ef7:	out    dx,eax
  418ef8:	into   
  418ef9:	inc    eax
  418efa:	or     esp,ebp
  418efc:	dec    esi
  418efd:	fiadd  WORD PTR [edi]
  418eff:	mov    cl,0x3
  418f01:	sahf   
  418f02:	add    dh,cl
  418f04:	mov    WORD PTR [ebx],?
  418f06:	test   eax,0xbddccb22
  418f0b:	xchg   ebp,eax
  418f0c:	jns    0x418eae
  418f0e:	sub    esi,esi
  418f10:	cwde   
  418f11:	pop    ss
  418f12:	push   ds
  418f13:	shl    BYTE PTR [ecx-0x3b],cl
  418f16:	dec    eax
  418f17:	jmp    0x418f4c
  418f19:	not    DWORD PTR [edx-0x3199b72e]
  418f1f:	lldt   WORD PTR [esi]
  418f22:	mov    esi,0xe109e681
  418f27:	out    0x13,al
  418f29:	pop    ecx
  418f2a:	fist   WORD PTR [eax-0x58]
  418f2d:	loop   0x418f70
  418f2f:	clc    
  418f30:	leave  
  418f31:	jns    0x418f44
  418f33:	jb     0x418eeb
  418f35:	fldenv [esi+0x5619ba6f]
  418f3b:	add    ebx,DWORD PTR [esi-0x3b]
  418f3e:	stos   DWORD PTR es:[edi],eax
  418f3f:	les    ebx,FWORD PTR [ecx-0x7928f37f]
  418f45:	call   0x397eb0b8
  418f4a:	push   0xffffffb3
  418f4c:	loop   0x418f06
  418f4e:	rcl    eax,0x9
  418f51:	(bad)  
  418f52:	jge    0x418f7e
  418f54:	mov    ah,0xb3
  418f56:	inc    edi
  418f57:	ret    0x8e94
  418f5a:	cld    
  418f5b:	or     eax,0x8d71ac55
  418f60:	pushf  
  418f61:	mov    cl,0x1e
  418f63:	(bad)  
  418f64:	ins    BYTE PTR es:[edi],dx
  418f65:	scas   eax,DWORD PTR es:[edi]
  418f66:	and    al,0xff
  418f68:	lea    ebx,[ecx-0x18c26b64]
  418f6e:	dec    esp
  418f6f:	sub    DWORD PTR [eax-0x7f],0xd2692eb8
  418f76:	ins    BYTE PTR es:[edi],dx
  418f77:	mov    al,0xae
  418f79:	adc    al,0x9d
  418f7b:	mov    DWORD PTR [edx-0x124db4c2],ebp
  418f81:	mov    ds:0x420b8e7c,al
  418f86:	push   edi
  418f87:	dec    ebx
  418f88:	sub    al,0xb6
  418f8a:	hlt    
  418f8b:	or     BYTE PTR [eax+0x7713ff35],dh
  418f91:	outs   dx,BYTE PTR ds:[esi]
  418f92:	test   ebp,0x4177e95e
  418f98:	push   es
  418f99:	sti    
  418f9a:	test   al,0x75
  418f9c:	dec    edi
  418f9d:	add    al,0xcf
  418f9f:	cmp    BYTE PTR ds:0x64b0d5ba,dh
  418fa5:	fdecstp 
  418fa7:	xchg   BYTE PTR [ecx-0x41],dh
  418faa:	sbb    DWORD PTR [ebx+0x34],esp
  418fad:	mov    ebp,0xb02a8f56
  418fb2:	xor    BYTE PTR [ecx+eiz*8+0x6171aa61],ah
  418fb9:	push   ss
  418fba:	xchg   edx,eax
  418fbb:	dec    ebx
  418fbc:	aaa    
  418fbd:	aas    
  418fbe:	pop    eax
  418fbf:	xor    BYTE PTR [ebx-0x68e67d07],bl
  418fc5:	js     0x418fd2
  418fc7:	xchg   DWORD PTR [edi+edx*4+0x54],ebp
  418fcb:	stc    
  418fcc:	sub    DWORD PTR [ebp-0x32],ecx
  418fcf:	leave  
  418fd0:	cmp    ch,0x4d
  418fd3:	add    dh,BYTE PTR [edx+ebx*1]
  418fd6:	scas   al,BYTE PTR es:[edi]
  418fd7:	sub    dl,BYTE PTR [edx+ebp*2-0x6d]
  418fdb:	or     DWORD PTR [ebx-0x79],ebp
  418fde:	rol    BYTE PTR [ecx],0xeb
  418fe1:	push   ebp
  418fe2:	pop    ds
  418fe3:	ss inc eax
  418fe5:	mov    cs,ecx
  418fe7:	adc    al,0x2c
  418fe9:	pop    eax
  418fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418feb:	int3   
  418fec:	ins    DWORD PTR es:[edi],dx
  418fed:	imul   ebx,DWORD PTR [ebx],0x3c
  418ff0:	aaa    
  418ff1:	sub    DWORD PTR [eax],edx
  418ff3:	mov    fs,WORD PTR [edx+ecx*2]
  418ff6:	sar    BYTE PTR [eax],0x81
  418ff9:	sub    eax,0x8d4164d1
  418ffe:	mov    esi,0x208208fc
  419003:	pushf  
  419004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419005:	xchg   BYTE PTR [edx+0x70afd7f3],al
  41900b:	dec    ebp
  41900c:	pop    es
  41900d:	and    DWORD PTR [edi+ecx*2-0x19556a0d],eax
  419014:	cmc    
  419015:	or     ch,dh
  419017:	and    BYTE PTR [ebx],dh
  419019:	xchg   DWORD PTR [esi],esp
  41901b:	repnz push ss
  41901d:	push   ds
  41901e:	popa   
  41901f:	mov    ds:0xfc140e36,al
  419024:	and    BYTE PTR [ecx-0xd],dh
  419027:	mov    al,0x75
  419029:	fcomp  QWORD PTR [edi-0x2c7e845e]
  41902f:	xor    al,0xf4
  419031:	mov    edx,0xee487554
  419036:	sbb    al,BYTE PTR [esp+esi*2+0x5d]
  41903a:	push   esp
  41903b:	jmp    0x75626fae
  419040:	sti    
  419041:	(bad)  
  419042:	lods   eax,DWORD PTR ds:[esi]
  419043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419044:	in     al,dx
  419045:	fstp   DWORD PTR [edx+edi*2-0xa24b503]
  41904c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41904d:	xchg   esi,eax
  41904e:	sbb    BYTE PTR [esi+edx*1+0x6107a6a8],dh
  419055:	push   0x1128d356
  41905a:	xor    BYTE PTR [edi+0x2a],0x6e
  41905e:	xor    BYTE PTR [edi+0x5e],ah
  419061:	cmc    
  419062:	out    0x8d,al
  419064:	dec    edx
  419065:	adc    eax,0x2caf8952
  41906a:	popf   
  41906b:	and    eax,0xe877eda
  419070:	mov    ebx,0xfffb6414
  419075:	gs mov eax,ds
  419078:	inc    ebp
  419079:	int3   
  41907a:	push   ecx
  41907b:	fmul   QWORD PTR [ecx]
  41907d:	ins    DWORD PTR es:[edi],dx
  41907e:	push   ebp
  41907f:	cwde   
  419080:	sar    BYTE PTR [ebx-0x12],1
  419083:	test   DWORD PTR [eax-0x1b],edi
  419086:	test   dh,ah
  419088:	mov    dl,0x79
  41908a:	out    dx,eax
  41908b:	dec    edx
  41908c:	dec    ebp
  41908d:	mov    esp,0xbdb05814
  419092:	iret   
  419093:	adc    eax,0x155a7eaa
  419098:	mov    edx,0x7251c81c
  41909d:	test   eax,0x674565c1
  4190a2:	dec    ebx
  4190a3:	jecxz  0x41908d
  4190a5:	or     ebx,esi
  4190a7:	cmp    BYTE PTR [edi+0x5d],al
  4190aa:	mov    ebx,0x542a8d61
  4190af:	pop    edi
  4190b0:	stc    
  4190b1:	rcl    BYTE PTR [edx+ebp*1-0x69],0x40
  4190b6:	lahf   
  4190b7:	xor    esi,DWORD PTR [edi-0x2755356]
  4190bd:	lock jg 0x4190db
  4190c0:	mov    esi,0x180deaae
  4190c5:	fs loop 0x41904c
  4190c8:	cmp    al,0xef
  4190ca:	xor    edi,DWORD PTR [esi-0x6e19dd87]
  4190d0:	push   ebp
  4190d1:	leave  
  4190d2:	pop    ds
  4190d3:	jae    0x4190d2
  4190d5:	mov    ds,WORD PTR [edi]
  4190d7:	jbe    0x41908b
  4190d9:	xor    edi,DWORD PTR [edi-0x7a]
  4190dc:	in     eax,dx
  4190dd:	loop   0x419146
  4190df:	sub    al,0x48
  4190e1:	call   0x18f5:0xb4f245aa
  4190e8:	lds    eax,FWORD PTR [edx-0x6a]
  4190eb:	fild   DWORD PTR [ebx+0x56]
  4190ee:	sub    edi,ebx
  4190f0:	sbb    al,0x20
  4190f2:	scas   al,BYTE PTR es:[edi]
  4190f3:	pop    ss
  4190f4:	mov    ch,0x25
  4190f6:	call   FWORD PTR [edx+0x4d9bdfe0]
  4190fc:	pop    ss
  4190fd:	push   ss
  4190fe:	jo     0x41908e
  419100:	call   0xbc7d82bd
  419105:	ins    BYTE PTR es:[edi],dx
  419106:	sub    BYTE PTR [ecx+0x6d],0xf8
  41910a:	idiv   DWORD PTR [ecx-0x5aae2175]
  419110:	std    
  419111:	mov    ds:0x2a598b09,eax
  419116:	cmp    BYTE PTR [ebx],al
  419118:	or     ebx,ebp
  41911a:	pop    ebx
  41911b:	ds or  eax,0x6d91ea7e
  419121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419122:	lods   al,BYTE PTR ds:[esi]
  419123:	dec    esi
  419124:	aas    
  419125:	mov    dl,0x52
  419127:	pop    ss
  419128:	dec    ecx
  419129:	ret    0xaa3a
  41912c:	fsubr  DWORD PTR [edx-0xa44438b]
  419132:	jg     0x4190ec
  419134:	pop    esi
  419135:	push   cs
  419136:	add    DWORD PTR [esi+0x7c526fe3],ebx
  41913c:	paddusb mm4,QWORD PTR [edx]
  41913f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419140:	fld    QWORD PTR [edi-0x744faa77]
  419146:	push   ebp
  419147:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  41914d:	and    edx,ebx
  41914f:	mov    DWORD PTR [ebp-0x4c],edx
  419152:	mov    edx,DWORD PTR [ebp+0x8]
  419155:	mov    ebx,DWORD PTR [ebp-0x48]
  419158:	lea    edx,[ebx+edx*1+0x241fcdf]
  41915f:	mov    DWORD PTR [ebp-0x48],edx
  419162:	mov    edx,DWORD PTR [ebp+0x8]
  419165:	mov    ebx,0xfa5e1524
  41916a:	sub    ebx,edx
  41916c:	add    ebx,DWORD PTR [ebp-0x44]
  41916f:	mov    DWORD PTR [ebp-0x44],ebx
  419172:	mov    edx,DWORD PTR [ebp+0x8]
  419175:	xor    edx,eax
  419177:	add    edx,esi
  419179:	jne    0x416da2
  41917f:	mov    edx,DWORD PTR [ebp-0x8]
  419182:	mov    ebx,DWORD PTR [ebp-0xc]
  419185:	xor    edx,eax
  419187:	lea    edx,[edx+ebx*1+0x3272f5]
  41918e:	mov    DWORD PTR [ebp-0xc],edx
  419191:	mov    edx,DWORD PTR [ebp-0x10]
  419194:	xor    edx,eax
  419196:	add    edx,esi
  419198:	jne    0x4124bd
  41919e:	jmp    0x41b615
  4191a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4191a6:	mov    DWORD PTR [ebp+0x8],ecx
  4191a9:	jmp    0x41b582
  4191ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4191b1:	mov    edx,DWORD PTR [ebp-0x8]
  4191b4:	xor    ecx,eax
  4191b6:	xor    edx,eax
  4191b8:	sub    ecx,edx
  4191ba:	sub    ecx,esi
  4191bc:	xor    ecx,eax
  4191be:	mov    DWORD PTR [ebp+0x8],ecx
  4191c1:	mov    ecx,DWORD PTR [ebp+0x8]
  4191c4:	mov    edx,DWORD PTR [ebp-0x58]
  4191c7:	add    ecx,0x5708e2
  4191cd:	imul   ecx,edx
  4191d0:	mov    DWORD PTR [ebp-0x58],ecx
  4191d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4191d6:	mov    edx,DWORD PTR [ebp-0x54]
  4191d9:	add    ecx,0x64f880
  4191df:	or     ecx,edx
  4191e1:	mov    DWORD PTR [ebp-0x54],ecx
  4191e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4191e7:	mov    edx,DWORD PTR [ebp-0x50]
  4191ea:	add    ecx,0x242ebf1
  4191f0:	xor    ecx,edx
  4191f2:	mov    DWORD PTR [ebp-0x50],ecx
  4191f5:	jmp    0x41b555
  4191fa:	pop    edx
  4191fb:	cmp    al,0xf8
  4191fd:	inc    esp
  4191fe:	xchg   esi,eax
  4191ff:	test   dl,cl
  419201:	and    al,BYTE PTR [edx+0x5f7278c]
  419207:	fist   WORD PTR [ecx-0x7fdfcc4c]
  41920d:	cmp    DWORD PTR [esi],0x5e
  419210:	add    DWORD PTR [ebx+0x7d63ab14],0x61
  419217:	mov    cl,0xd1
  419219:	popa   
  41921a:	push   ecx
  41921b:	(bad)  
  41921c:	push   ebx
  41921d:	pop    edi
  41921e:	clc    
  41921f:	leave  
  419220:	jo     0x4191da
  419222:	push   cs
  419223:	add    ebp,DWORD PTR [eax]
  419225:	cmc    
  419226:	mov    eax,ds:0x71607e06
  41922b:	pop    es
  41922c:	fnsave [edi]
  41922e:	std    
  41922f:	push   ss
  419230:	ss out dx,eax
  419232:	jp     0x4191c6
  419234:	lds    esi,FWORD PTR [eax]
  419236:	fstp   DWORD PTR [edx+0x27ac0776]
  41923c:	inc    esp
  41923d:	adc    al,0xf6
  41923f:	mov    WORD PTR [ebp+0x5a],?
  419242:	sbb    ebx,DWORD PTR [esi+0x41]
  419245:	mov    al,0x6d
  419247:	loopne 0x41927b
  419249:	xor    ah,dh
  41924b:	and    BYTE PTR [edx+0x27],0xf0
  41924f:	fld    DWORD PTR [ecx+0x69]
  419252:	cmc    
  419253:	ins    BYTE PTR es:[edi],dx
  419254:	sub    esp,eax
  419256:	ds rcr esp,1
  419259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41925a:	xor    eax,0x34726adc
  41925f:	ds inc eax
  419261:	xor    eax,0x810e2ed2
  419266:	ror    BYTE PTR [esi-0x4],cl
  419269:	mov    esi,0x3e173477
  41926e:	sbb    al,0x7e
  419270:	aam    0x44
  419272:	sub    ebx,DWORD PTR [esi]
  419274:	aas    
  419275:	jbe    0x4192d0
  419277:	mov    al,0x9a
  419279:	push   cs
  41927a:	or     ecx,DWORD PTR [eax]
  41927c:	cwde   
  41927d:	mov    edi,0x98698a4d
  419282:	cmp    al,ah
  419284:	out    dx,al
  419285:	xor    edx,edx
  419287:	shr    DWORD PTR [eax-0x1d],0x83
  41928b:	cdq    
  41928c:	sti    
  41928d:	popf   
  41928e:	loope  0x4192f4
  419290:	pop    ss
  419291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419292:	push   ebp
  419293:	lds    eax,FWORD PTR [edx]
  419295:	in     al,0x8c
  419297:	pop    eax
  419298:	xchg   edx,eax
  419299:	xchg   esp,eax
  41929a:	pop    edx
  41929b:	mov    esp,0x378b121
  4192a0:	fs ds add al,0xab
  4192a4:	into   
  4192a5:	rcr    BYTE PTR [ebp-0x3e],0xc5
  4192a9:	cmp    al,0x96
  4192ab:	lods   al,BYTE PTR ds:[esi]
  4192ac:	ret    0x668c
  4192af:	mov    ds:0x9476aeb8,eax
  4192b4:	cmp    eax,0xe56ff2d5
  4192b9:	push   esp
  4192ba:	xor    ebx,ecx
  4192bc:	daa    
  4192bd:	std    
  4192be:	push   ss
  4192bf:	jo     0x41930c
  4192c1:	test   edi,edi
  4192c3:	out    0xf6,al
  4192c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c6:	retf   
  4192c7:	push   edx
  4192c8:	pushf  
  4192c9:	cld    
  4192ca:	lods   al,BYTE PTR ds:[esi]
  4192cb:	pcmpeqw mm0,QWORD PTR ds:0x6946eaa7
  4192d2:	jb     0x41929e
  4192d4:	and    BYTE PTR [edi],dh
  4192d6:	jno    0x4192a9
  4192d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d9:	mov    esi,0x89f41dcf
  4192de:	add    edx,ebx
  4192e0:	ret    0xcd43
  4192e3:	mov    eax,0x4dc843ce
  4192e8:	mov    ebp,0x9a55f44c
  4192ed:	pop    eax
  4192ee:	imul   DWORD PTR [edx+0x3d67617c]
  4192f4:	ins    BYTE PTR es:[edi],dx
  4192f5:	dec    ecx
  4192f6:	jp     0x419317
  4192f8:	mov    edx,0xb5155434
  4192fd:	dec    ebx
  4192fe:	xchg   edi,eax
  4192ff:	mov    edi,edi
  419301:	xor    esi,DWORD PTR cs:[esi]
  419304:	xor    dh,BYTE PTR [edi-0x2809998f]
  41930a:	rcl    DWORD PTR [ebp+0x61],1
  41930d:	pop    esi
  41930e:	add    eax,0x91f91ba0
  419313:	lock pop eax
  419315:	mov    esi,0x34f1a8c4
  41931a:	jne    0x41934e
  41931c:	scas   eax,DWORD PTR es:[edi]
  41931d:	jbe    0x4192cc
  41931f:	dec    ebx
  419320:	mov    esi,0xbd5f56eb
  419325:	pop    ebp
  419326:	out    0xc5,al
  419328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419329:	sbb    BYTE PTR [ebp+0x48],bl
  41932c:	nop
  41932d:	and    esi,DWORD PTR [eax]
  41932f:	inc    ecx
  419330:	rcl    DWORD PTR [esi],cl
  419332:	mov    dh,0x5
  419334:	outs   dx,DWORD PTR ds:[esi]
  419335:	mov    DWORD PTR [ecx-0x6a5412a5],edi
  41933b:	arpl   WORD PTR [ecx],bp
  41933d:	leave  
  41933e:	das    
  41933f:	daa    
  419340:	stc    
  419341:	loopne 0x41930c
  419343:	or     eax,0x2ecd899d
  419348:	inc    edi
  419349:	(bad)  
  41934a:	aam    0xc1
  41934c:	je     0x4193a3
  41934e:	pop    eax
  41934f:	inc    dh
  419351:	(bad)  
  419352:	jnp    0x4193bf
  419354:	cmp    BYTE PTR [edx+0x2f],0xeb
  419358:	pop    ss
  419359:	push   esi
  41935a:	cmp    al,BYTE PTR [edx+edi*8-0x40]
  41935e:	xchg   ebx,eax
  41935f:	test   eax,0x267f456b
  419364:	(bad)  
  419366:	add    al,0xc4
  419368:	mov    ebx,0x94e9ad31
  41936d:	sub    al,0x4d
  41936f:	outs   dx,DWORD PTR ds:[esi]
  419370:	cs pop ss
  419372:	hlt    
  419373:	adc    eax,0x9aab6410
  419378:	inc    esi
  419379:	popa   
  41937a:	xor    eax,0x8ddd476f
  41937f:	xlat   BYTE PTR ds:[ebx]
  419380:	push   eax
  419381:	fcomi  st,st(6)
  419383:	and    al,0x7d
  419385:	add    ebx,DWORD PTR [edx-0x4fe92977]
  41938b:	call   0xa2ca:0xf78e723e
  419392:	mov    dl,0x72
  419394:	outs   dx,DWORD PTR ds:[esi]
  419395:	loop   0x419387
  419397:	pop    es
  419398:	call   0xc55ee7e
  41939d:	jmp    0x4fe4b981
  4193a2:	inc    ecx
  4193a3:	int3   
  4193a4:	sbb    DWORD PTR [eax-0x5],esp
  4193a7:	leave  
  4193a8:	outs   dx,BYTE PTR ds:[esi]
  4193a9:	stos   BYTE PTR es:[edi],al
  4193aa:	fisttp QWORD PTR ds:0x1c04fbad
  4193b0:	iret   
  4193b1:	stos   BYTE PTR es:[edi],al
  4193b2:	loope  0x41936c
  4193b4:	and    eax,0xfbc27bf8
  4193b9:	test   eax,0x87b9abe2
  4193be:	xchg   ecx,eax
  4193bf:	popf   
  4193c0:	int    0xfb
  4193c2:	fld    TBYTE PTR ds:0x74b06967
  4193c8:	cmp    ebx,DWORD PTR [edx]
  4193ca:	xchg   ecx,eax
  4193cb:	leave  
  4193cc:	sbb    al,BYTE PTR [ebx]
  4193ce:	inc    eax
  4193cf:	fwait
  4193d0:	add    bh,BYTE PTR [ecx]
  4193d2:	xchg   ecx,eax
  4193d3:	sbb    dh,cl
  4193d5:	mov    ebx,0xe2000304
  4193da:	mov    ds:0x2846ae3c,al
  4193df:	push   ds
  4193e0:	outs   dx,BYTE PTR ds:[esi]
  4193e1:	xor    al,0xb1
  4193e3:	mov    ebx,0x34476fb3
  4193e8:	or     DWORD PTR [edi-0x4935192b],eax
  4193ee:	mov    ebx,0x9053dd9f
  4193f3:	adc    bl,bl
  4193f5:	sub    ebp,DWORD PTR [ebx+0x46df332c]
  4193fb:	(bad)
  4193fe:	xchg   edi,eax
  4193ff:	in     al,dx
  419400:	fwait
  419401:	sbb    al,0x9
  419403:	lds    ecx,FWORD PTR [edx+esi*4+0x32344977]
  41940a:	dec    ecx
  41940b:	inc    edx
  41940c:	rcr    edx,0x2e
  41940f:	fnstenv ds:0x9148f94
  419415:	mov    esp,0x286a3b72
  41941a:	retf   
  41941b:	arpl   WORD PTR [edi+0x7a1fa2df],cx
  419421:	cld    
  419422:	dec    edx
  419423:	loop   0x41940d
  419425:	adc    DWORD PTR [ecx-0x222772bd],edx
  41942b:	ins    BYTE PTR es:[edi],dx
  41942c:	aad    0xe6
  41942e:	popf   
  41942f:	ins    BYTE PTR es:[edi],dx
  419430:	(bad)  
  419431:	jp     0x4193b3
  419433:	fistp  DWORD PTR [eax+0x6b]
  419436:	jl     0x419461
  419438:	cld    
  419439:	dec    edi
  41943a:	data16 add ch,BYTE PTR [esi]
  41943d:	mov    ebp,0x126ab803
  419442:	cmp    bh,ah
  419444:	outs   dx,DWORD PTR ds:[esi]
  419445:	fisub  DWORD PTR [edi+0x283a12df]
  41944b:	lds    esi,FWORD PTR [ebp+edi*1-0x73]
  41944f:	adc    eax,0x37bab88d
  419454:	xchg   esi,eax
  419455:	bound  eax,QWORD PTR [eax-0x372fefd3]
  41945b:	int3   
  41945c:	pop    ebx
  41945d:	sar    DWORD PTR [esi+0x5e],0xb9
  419461:	shl    DWORD PTR [eax-0x58],1
  419464:	test   DWORD PTR gs:0xa65accd7,ebp
  41946b:	outs   dx,BYTE PTR ds:[esi]
  41946c:	sahf   
  41946d:	add    eax,0x382d9da1
  419472:	mov    al,0x99
  419474:	ret    
  419475:	into   
  419476:	or     al,0x51
  419478:	fsubr  DWORD PTR [eax]
  41947a:	push   ecx
  41947b:	cs dec eax
  41947d:	fcomi  st,st(1)
  41947f:	div    DWORD PTR [eax+0x6102ed36]
  419485:	cmp    eax,0xe6a06606
  41948a:	inc    esi
  41948b:	sub    dl,BYTE PTR [eax-0x2abc7c80]
  419491:	or     ah,bh
  419493:	pop    ss
  419494:	add    al,0x6b
  419496:	das    
  419497:	iret   
  419498:	test   eax,0x3ae331f
  41949d:	ror    cl,1
  41949f:	mov    eax,ds:0x88997541
  4194a4:	sub    esi,ebx
  4194a6:	fdivr  DWORD PTR [edx]
  4194a8:	cs repz loopne 0x419481
  4194ac:	(bad)  
  4194ad:	or     DWORD PTR [ebp+0x4c],edi
  4194b0:	sub    eax,0xb514ac6b
  4194b5:	aam    0x62
  4194b7:	push   edi
  4194b8:	imul   esi,DWORD PTR [eax],0x2b
  4194bb:	pop    eax
  4194bc:	ss add ch,ah
  4194bf:	mov    dh,0x4b
  4194c1:	jmp    0x171:0xf2a07462
  4194c8:	retf   
  4194c9:	cmp    esp,DWORD PTR [eax+0x66e34846]
  4194cf:	cmp    al,0x2
  4194d2:	dec    ebp
  4194d3:	test   al,0xb1
  4194d5:	test   BYTE PTR [eax],0x25
  4194d8:	mov    eax,ds:0xf0f3c587
  4194dd:	cmp    BYTE PTR [edx],bh
  4194df:	push   eax
  4194e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e1:	inc    edx
  4194e2:	aad    0xba
  4194e4:	outs   dx,BYTE PTR ds:[esi]
  4194e5:	or     eax,ecx
  4194e7:	xor    al,0x20
  4194e9:	in     al,0x6a
  4194eb:	xor    eax,edi
  4194ed:	ffreep st(5)
  4194ef:	sub    DWORD PTR [eax+0x5d2ac46d],edx
  4194f5:	lahf   
  4194f6:	cmc    
  4194f7:	dec    ebx
  4194f8:	ret    
  4194f9:	jbe    0x4194a9
  4194fb:	mov    ds:0xb29cb6d3,al
  419500:	jns    0x4194e3
  419502:	adc    al,0x67
  419504:	les    ebp,FWORD PTR [eax+0x40]
  419507:	scas   al,BYTE PTR es:[edi]
  419508:	pop    eax
  419509:	icebp  
  41950a:	mov    ds:0x62632eeb,eax
  41950f:	icebp  
  419510:	paddd  mm0,QWORD PTR [esi+0x50]
  419514:	loop   0x4194b7
  419516:	loop   0x419579
  419518:	or     al,0x32
  41951a:	pop    eax
  41951b:	inc    esi
  41951c:	dec    edi
  41951d:	push   0xffffff8e
  41951f:	std    
  419520:	int3   
  419521:	inc    edx
  419522:	dec    ecx
  419523:	addr16 push edi
  419525:	mov    esi,DWORD PTR [edi-0x39]
  419528:	dec    edi
  419529:	in     eax,0x60
  41952b:	pop    esi
  41952c:	retf   0xa0cf
  41952f:	daa    
  419530:	stc    
  419531:	add    ebx,DWORD PTR ds:0xa1b8e220
  419537:	jne    0x419504
  419539:	jmp    0x575c4514
  41953e:	jb     0x419527
  419540:	pop    edi
  419541:	mov    edi,DWORD PTR [eax-0x7f]
  419544:	adc    ch,dl
  419546:	icebp  
  419547:	sub    BYTE PTR [ebx],ch
  419549:	ins    DWORD PTR es:[edi],dx
  41954a:	(bad)  
  41954b:	(bad)  
  41954c:	jmp    0x4e6d3908
  419551:	inc    edi
  419552:	jo     0x4194ef
  419554:	aam    0xd4
  419556:	jge    0x41953e
  419558:	shr    DWORD PTR fs:[ebp+0x67a95414],0xb1
  419560:	popf   
  419561:	lods   al,BYTE PTR ds:[esi]
  419562:	mov    edx,0x4294283f
  419567:	fidiv  DWORD PTR [ebx+0x33d72e0]
  41956d:	or     al,0x19
  41956f:	inc    eax
  419570:	push   ss
  419571:	gs retf 0x616c
  419575:	add    DWORD PTR [ebp-0x7e4f8680],0xffffff94
  41957c:	cld    
  41957d:	jno    0x4195e5
  41957f:	inc    edx
  419580:	xchg   BYTE PTR ds:[ebx+0x6c],al
  419584:	sbb    BYTE PTR ds:0x8789bfe4,dh
  41958a:	outs   dx,BYTE PTR ds:[esi]
  41958b:	loope  0x4195b0
  41958d:	xor    DWORD PTR [ebp+0x53],esi
  419590:	or     BYTE PTR [edx-0x7d2227f9],dl
  419596:	loopne 0x4195d8
  419598:	fld    TBYTE PTR [esp+edi*1-0x1abd5381]
  41959f:	xchg   esi,eax
  4195a0:	mov    eax,0x115321b9
  4195a5:	popf   
  4195a6:	test   eax,0x215ace0b
  4195ab:	inc    edi
  4195ac:	pushf  
  4195ad:	xor    BYTE PTR [esi],ch
  4195af:	cmp    al,BYTE PTR [edi]
  4195b1:	xor    DWORD PTR [ecx-0x697cdb95],ecx
  4195b7:	push   esi
  4195b8:	xlat   BYTE PTR ds:[ebx]
  4195b9:	xchg   ebx,eax
  4195ba:	daa    
  4195bb:	das    
  4195bc:	jle    0x419552
  4195be:	mov    esi,0x2fd52f16
  4195c3:	and    bl,BYTE PTR [edi+ecx*4-0x32]
  4195c7:	ja     0x41959a
  4195c9:	ja     0x419565
  4195cb:	ret    0xe42
  4195ce:	pushf  
  4195cf:	ret    
  4195d0:	lods   eax,DWORD PTR ds:[esi]
  4195d1:	addr16 aad 0xf7
  4195d4:	call   0xe610954b
  4195d9:	outs   dx,BYTE PTR ds:[esi]
  4195da:	jl     0x4195bf
  4195dc:	stc    
  4195dd:	push   0xfffffff5
  4195df:	push   cs
  4195e0:	or     al,0x84
  4195e2:	mov    bh,0x1f
  4195e4:	jge    0x4195b8
  4195e6:	mov    esp,0x4c64e31
  4195eb:	icebp  
  4195ec:	pop    ss
  4195ed:	es ja  0x41964b
  4195f0:	mov    ebx,0x6dd2c9c
  4195f5:	jle    0x419583
  4195f7:	es loop 0x4195f5
  4195fa:	mov    WORD PTR [esi+0x612f1636],ds
  419600:	test   BYTE PTR [eax+0x56a9d870],dl
  419606:	pop    ss
  419607:	lods   eax,DWORD PTR ds:[esi]
  419608:	arpl   WORD PTR [ebp-0x3a],ax
  41960b:	cmp    dl,BYTE PTR [edi-0x99b6a11]
  419611:	xadd   BYTE PTR [eax],dh
  419614:	ds xchg edx,eax
  419616:	or     al,0x9a
  419618:	sar    DWORD PTR [ecx-0xb389227],1
  41961e:	jb     0x419621
  419620:	int3   
  419621:	call   0xcef9d078
  419626:	mov    al,0xd1
  419628:	mov    eax,ds:0x84a9b1d9
  41962d:	ins    BYTE PTR es:[edi],dx
  41962e:	xchg   ecx,eax
  41962f:	sub    eax,0xe8cf9010
  419634:	sub    BYTE PTR [eax-0x41aeeb0e],0xc0
  41963b:	pop    ebx
  41963c:	stos   BYTE PTR es:[edi],al
  41963d:	jnp    0x4195cc
  41963f:	and    al,0x19
  419641:	idiv   BYTE PTR fs:[edi-0x1757372f]
  419648:	fnstcw WORD PTR [eax-0x71]
  41964b:	outs   dx,DWORD PTR ds:[esi]
  41964c:	xchg   ebx,eax
  41964d:	iret   
  41964e:	ror    DWORD PTR [esi+0x70563f00],cl
  419654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419655:	sbb    ebp,DWORD PTR [esi-0x73f876b0]
  41965b:	in     eax,dx
  41965c:	add    DWORD PTR [ecx+0x40],edi
  41965f:	cmp    al,0x88
  419661:	pop    ds
  419662:	bound  esp,QWORD PTR [esi]
  419664:	shr    cl,cl
  419666:	pop    ecx
  419667:	or     bl,BYTE PTR [esi+ecx*8]
  41966a:	outs   dx,BYTE PTR ds:[esi]
  41966b:	inc    eax
  41966c:	test   al,0xfb
  41966e:	adc    dh,ah
  419670:	add    al,0xc6
  419672:	rcr    BYTE PTR [esi],0xf4
  419675:	das    
  419676:	mov    dh,0x59
  419678:	jb     0x41968c
  41967a:	push   ss
  41967b:	bound  ebp,QWORD PTR [ebx-0x76d5ca86]
  419681:	xlat   BYTE PTR ds:[ebx]
  419682:	adc    al,0x8e
  419684:	xor    al,0x1c
  419686:	inc    ebx
  419687:	cmp    eax,0x6b5a0519
  41968c:	shl    BYTE PTR [ebp-0x3b],1
  41968f:	push   0x20
  419691:	int3   
  419692:	gs mov ah,0x5
  419695:	mov    esi,0x45eeaa12
  41969a:	pop    eax
  41969b:	in     al,dx
  41969c:	adc    BYTE PTR [edx+0x2edd26fb],0x71
  4196a3:	or     BYTE PTR [ebx-0x771847f2],dl
  4196a9:	sbb    dh,BYTE PTR [ebx+eax*2+0x64]
  4196ad:	jecxz  0x41969d
  4196af:	cdq    
  4196b0:	aaa    
  4196b1:	cld    
  4196b2:	in     al,0x66
  4196b4:	mov    ebp,?
  4196b6:	and    dl,BYTE PTR [esi-0x6c]
  4196b9:	addr16 push esi
  4196bb:	sahf   
  4196bc:	pop    ss
  4196bd:	dec    ecx
  4196be:	loopne 0x41965e
  4196c0:	mov    WORD PTR [esi+ebx*4-0xe],ss
  4196c4:	dec    ebp
  4196c5:	aam    0xde
  4196c7:	mov    esp,0xcc0d8345
  4196cc:	mov    dh,0x4a
  4196ce:	inc    edi
  4196cf:	adc    eax,0xd24e446e
  4196d4:	and    eax,0x6a244643
  4196d9:	dec    ecx
  4196da:	push   0xa05c9228
  4196df:	mov    esp,0x62385c64
  4196e4:	rcl    DWORD PTR [ecx+0x45],0xac
  4196e8:	neg    BYTE PTR [esi]
  4196ea:	jbe    0x4196c8
  4196ec:	mov    edi,0x4de99f95
  4196f1:	pop    ebx
  4196f2:	jnp    0x419703
  4196f4:	add    al,0x71
  4196f6:	jle    0x41970b
  4196f8:	lods   eax,DWORD PTR ds:[esi]
  4196f9:	push   esp
  4196fa:	shl    BYTE PTR [eax],1
  4196fc:	in     al,0xb3
  4196fe:	cmp    dh,al
  419700:	arpl   WORD PTR [edx],si
  419702:	dec    ecx
  419703:	sub    cl,ah
  419705:	mov    eax,0x4d98445b
  41970a:	jl     0x41974a
  41970c:	mov    esp,0xc7481969
  419711:	fisttp WORD PTR [eax+edi*2]
  419714:	shl    BYTE PTR [esi+ebx*1+0x75],0xe6
  419719:	mov    edx,0xb298083d
  41971e:	mov    gs,WORD PTR [edi-0x1d132613]
  419724:	pusha  
  419725:	clc    
  419726:	and    al,0xc2
  419728:	ret    
  419729:	jne    0x4196ea
  41972b:	out    dx,al
  41972c:	jg     0x419716
  41972e:	jbe    0x4196ce
  419730:	repz mov al,ds:0x7e69d6be
  419736:	imul   esp,DWORD PTR [ebp-0x35],0xe9ca21d1
  41973d:	gs into 
  41973f:	push   esi
  419740:	(bad)  
  419741:	mov    bl,0xc5
  419743:	mov    cl,0x77
  419745:	push   ss
  419746:	sti    
  419747:	sti    
  419748:	(bad)  
  419749:	sti    
  41974a:	ins    BYTE PTR es:[edi],dx
  41974b:	jecxz  0x4197af
  41974d:	out    dx,al
  41974e:	mov    ah,0x25
  419750:	xlat   BYTE PTR ds:[ebx]
  419751:	push   ds
  419752:	repz add ecx,DWORD PTR [ebp-0x52d1a1c6]
  419759:	mov    bl,0x5d
  41975b:	sbb    BYTE PTR [edx],cl
  41975d:	lock stos BYTE PTR es:[edi],al
  41975f:	das    
  419760:	(bad)  
  419761:	mov    ebp,0x4cb6cc63
  419766:	sti    
  419767:	mov    eax,0x32791aa1
  41976c:	or     BYTE PTR [edx-0x38364ea7],bh
  419772:	mov    bh,0xc8
  419774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419775:	push   edx
  419776:	or     al,0xdc
  419778:	std    
  419779:	imul   edx,DWORD PTR [eax-0x1270f10],0x62bab4ff
  419783:	or     ecx,edx
  419785:	inc    ebp
  419786:	mov    ch,0xc2
  419788:	push   edx
  419789:	in     al,0xcb
  41978b:	aam    0xc
  41978d:	data16 sbb al,0x0
  419790:	stc    
  419791:	pop    eax
  419792:	dec    BYTE PTR [edx-0x3d]
  419795:	cmp    eax,0x59a6ece7
  41979a:	arpl   WORD PTR ds:[ebp-0x15],di
  41979e:	mov    ebx,0xbd41aff9
  4197a3:	cmp    DWORD PTR [ecx+0x75],0xbacdc728
  4197aa:	popf   
  4197ab:	adc    BYTE PTR [edx-0x73cd3fde],al
  4197b1:	mul    BYTE PTR [edx]
  4197b3:	inc    esi
  4197b4:	popa   
  4197b5:	inc    esi
  4197b6:	leave  
  4197b7:	push   ecx
  4197b8:	xchg   ecx,eax
  4197b9:	call   0xade8:0x582e0622
  4197c0:	cwde   
  4197c1:	xchg   edi,eax
  4197c2:	push   cs
  4197c3:	int    0xe3
  4197c5:	pop    ebp
  4197c6:	imul   esi,DWORD PTR [edx-0xfaae1b],0x71
  4197cd:	imul   ebx,eax,0x55
  4197d0:	push   ebp
  4197d1:	fcmovnu st,st(6)
  4197d3:	cwde   
  4197d4:	fadd   QWORD PTR [edx+0x74]
  4197d7:	mov    esi,0x1e262cc4
  4197dc:	push   ecx
  4197dd:	bound  esi,QWORD PTR [ebp+eax*2-0x75c497eb]
  4197e4:	push   ecx
  4197e5:	imul   ecx,DWORD PTR [ebp+0x34],0xf5c2e249
  4197ec:	loop   0x419835
  4197ee:	sbb    eax,0x31812a04
  4197f3:	pop    esi
  4197f4:	outs   dx,BYTE PTR ds:[esi]
  4197f5:	jmp    0x4197ae
  4197f7:	sbb    al,0x63
  4197f9:	inc    edx
  4197fa:	push   ds
  4197fb:	adc    eax,0xe72b225c
  419800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419802:	or     BYTE PTR [ecx],0xa7
  419805:	lahf   
  419806:	(bad)  
  419807:	mov    bh,0x54
  419809:	ret    
  41980a:	mov    al,0xc3
  41980c:	xor    DWORD PTR [ebx-0x1549a80c],0x40d58301
  419816:	mov    eax,0x9572d64e
  41981b:	and    BYTE PTR [eax],cl
  41981d:	push   cs
  41981e:	sbb    al,0x95
  419820:	pop    esi
  419821:	shl    BYTE PTR [ebx],1
  419823:	xor    ebp,DWORD PTR [ebx+0x71]
  419826:	push   cs
  419827:	mov    ch,0x94
  419829:	fisub  DWORD PTR [eax]
  41982b:	js     0x4197d9
  41982d:	lea    esi,[edx+eax*4]
  419830:	pushf  
  419831:	mov    ?,WORD PTR [edi]
  419833:	add    edx,DWORD PTR [ebx+0x33e04883]
  419839:	into   
  41983a:	and    dh,BYTE PTR [ecx+0x5a]
  41983d:	das    
  41983e:	dec    esp
  41983f:	and    al,0x97
  419841:	popa   
  419842:	pop    eax
  419843:	xchg   esi,eax
  419844:	mov    DWORD PTR [ebx+0x3d],ebx
  419847:	pop    esp
  419848:	mov    bh,0x66
  41984a:	push   esp
  41984b:	enter  0xe997,0x27
  41984f:	icebp  
  419850:	into   
  419851:	test   DWORD PTR [esi+0x3c6af9b6],0xdb4b0a5a
  41985b:	mov    ch,0x66
  41985d:	enter  0xb0c2,0xc2
  419861:	retf   0xc64d
  419864:	add    eax,0x9275f1fd
  419869:	mov    dh,0x37
  41986b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41986c:	out    0xb9,al
  41986e:	repz mov ds:0xeba49841,al
  419874:	mov    BYTE PTR [ecx-0x734cc0a5],al
  41987a:	mov    ecx,edi
  41987c:	mov    eax,0x4737554e
  419881:	pop    ebx
  419882:	pop    ecx
  419883:	fwait
  419884:	dec    esi
  419885:	sub    BYTE PTR ds:0xb74e3b69,dh
  41988b:	or     ebx,DWORD PTR [ecx+ecx*1-0x2022b4fb]
  419892:	popa   
  419893:	aam    0xd4
  419895:	sub    eax,ebp
  419897:	addr16 mov ebp,0x7f76dabb
  41989d:	sbb    al,0x55
  41989f:	mov    BYTE PTR ds:0xc2672264,cl
  4198a5:	xor    al,0xe8
  4198a7:	pop    ss
  4198a8:	int3   
  4198a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198aa:	push   edi
  4198ab:	push   0xd42a2a86
  4198b0:	push   ebx
  4198b1:	cmp    eax,0x31d1061d
  4198b6:	dec    ebx
  4198b7:	out    dx,eax
  4198b8:	dec    eax
  4198b9:	fst    DWORD PTR [esp+edi*1+0x4c2831b2]
  4198c0:	mov    ch,0xeb
  4198c2:	cmp    eax,0xe6506bb4
  4198c7:	mov    ecx,0x2b9dffa1
  4198cc:	or     ecx,edx
  4198ce:	ins    BYTE PTR es:[edi],dx
  4198cf:	jge    0x41990b
  4198d1:	in     al,0x94
  4198d3:	stc    
  4198d4:	fcomi  st,st(0)
  4198d6:	xchg   edi,eax
  4198d7:	cwde   
  4198d8:	mov    WORD PTR [eax-0x5d2ff843],cs
  4198de:	push   ecx
  4198df:	add    eax,0xdbe515ac
  4198e4:	sub    DWORD PTR [esi],ebp
  4198e6:	ror    BYTE PTR [ebp+0x54c12ee2],0x72
  4198ed:	lods   al,BYTE PTR ds:[esi]
  4198ee:	jnp    0x41988f
  4198f0:	iret   
  4198f1:	fsubr  DWORD PTR [ecx+ebp*4+0x15]
  4198f5:	push   es
  4198f6:	inc    esp
  4198f7:	nop
  4198f8:	sub    eax,0x1579f892
  4198fd:	add    ah,dl
  4198ff:	fcom   st(4)
  419901:	mov    ds:0x1a9c5fec,ax
  419907:	outs   dx,BYTE PTR ds:[esi]
  419908:	xor    BYTE PTR [esi-0x59],0x7e
  41990c:	pop    ebx
  41990d:	pop    edx
  41990e:	mov    bl,0x1e
  419910:	ja     0x419987
  419912:	je     0x419921
  419914:	mov    ecx,0xa58efff4
  419919:	imul   BYTE PTR [ebx]
  41991b:	push   ds
  41991c:	pop    ds
  41991d:	dec    ecx
  41991e:	in     eax,dx
  41991f:	mov    bl,0xe4
  419921:	adc    eax,0xb66bce7e
  419926:	pop    eax
  419927:	inc    edi
  419928:	dec    ebp
  419929:	sbb    bl,cl
  41992b:	sbb    ecx,0x6ff82a71
  419931:	in     al,0x51
  419933:	jae    0x4198fd
  419935:	ret    0x52d3
  419938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419939:	dec    esp
  41993a:	inc    esi
  41993b:	fild   QWORD PTR [ebx+0xd]
  41993e:	scas   eax,DWORD PTR es:[edi]
  41993f:	and    eax,0x524f9fff
  419944:	lds    edi,FWORD PTR [eax-0x25]
  419947:	repnz inc ebx
  419949:	mov    ds:0x956a4af8,al
  41994e:	xlat   BYTE PTR ds:[ebx]
  41994f:	sub    al,BYTE PTR [ecx]
  419951:	or     BYTE PTR [ecx],dh
  419953:	inc    edx
  419954:	jle    0x419960
  419956:	loope  0x419965
  419958:	mov    cl,0x75
  41995a:	icebp  
  41995b:	cdq    
  41995c:	data16 fwait
  41995e:	shl    ch,0xc1
  419961:	repnz cwde 
  419963:	(bad)  [esi-0x26]
  419966:	jp     0x4199b4
  419968:	fld    DWORD PTR [esi-0x6a75d1c6]
  41996e:	jbe    0x419963
  419970:	mov    cl,0x16
  419972:	pop    edi
  419973:	mov    esp,0xaa97c01a
  419978:	loopne 0x41994e
  41997a:	cmp    eax,0xbe23a265
  41997f:	cwde   
  419980:	fwait
  419981:	add    DWORD PTR [esi-0x4cdb0de7],edx
  419987:	sbb    ecx,DWORD PTR [ecx]
  419989:	outs   dx,BYTE PTR ds:[esi]
  41998a:	(bad)  
  41998b:	cmp    edx,DWORD PTR [eax]
  41998d:	sub    ch,BYTE PTR [esi]
  41998f:	sbb    eax,0x548dad73
  419994:	pop    ecx
  419995:	mov    WORD PTR [ecx-0x5b62c311],ss
  41999b:	mov    edi,0x22eed086
  4199a0:	outs   dx,BYTE PTR ds:[esi]
  4199a1:	xor    al,0x3a
  4199a3:	cmp    eax,0x462a385d
  4199a8:	dec    ebx
  4199a9:	call   0x88b7ddb7
  4199ae:	rol    BYTE PTR [eax+0x1e],0x81
  4199b2:	push   ecx
  4199b3:	int3   
  4199b4:	pop    edx
  4199b5:	pop    ss
  4199b6:	jl     0x41996a
  4199b8:	ror    DWORD PTR [edx+0x21ffe6e],0xf
  4199bf:	bswap  ebp
  4199c1:	add    dh,BYTE PTR [esi+edx*1+0x1a]
  4199c5:	(bad)  
  4199c6:	leave  
  4199c7:	sbb    BYTE PTR [edi],bl
  4199c9:	call   0x22f52524
  4199ce:	nop
  4199cf:	lea    ebp,[edi]
  4199d1:	dec    eax
  4199d2:	push   ecx
  4199d3:	(bad)  
  4199d4:	pop    ebx
  4199d5:	sub    al,0x8b
  4199d7:	push   ebp
  4199d8:	iret   
  4199d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199da:	and    al,BYTE PTR [ebp-0x3a599118]
  4199e0:	repnz in al,dx
  4199e2:	xchg   ebp,eax
  4199e3:	adc    dh,BYTE PTR [edx+ebp*8+0x51]
  4199e7:	sbb    BYTE PTR [ecx+0x2f1e8529],dl
  4199ed:	fwait
  4199ee:	aaa    
  4199ef:	outs   dx,BYTE PTR es:[esi]
  4199f1:	divps  xmm7,XMMWORD PTR [esi-0x4a]
  4199f5:	mov    al,0xb
  4199f7:	mov    al,ds:0x9795387f
  4199fc:	cli    
  4199fd:	mov    cl,BYTE PTR [ebx]
  4199ff:	rol    DWORD PTR gs:[eax+0x3a0b18f0],cl
  419a06:	fild   WORD PTR [ebp+0x11]
  419a09:	sbb    eax,0x526c42d4
  419a0e:	pop    ss
  419a0f:	mov    dh,0xd3
  419a11:	fcomi  st,st(0)
  419a13:	pop    es
  419a14:	sbb    bl,BYTE PTR [ecx]
  419a16:	(bad)  
  419a17:	xlat   BYTE PTR ds:[ebx]
  419a18:	inc    esp
  419a19:	mov    dh,0x3e
  419a1b:	or     cl,BYTE PTR [eax+0x4b]
  419a1e:	ror    DWORD PTR [ebp+esi*8+0x705b7a75],1
  419a25:	neg    esp
  419a27:	inc    edi
  419a28:	adc    DWORD PTR [edi+0x46b8681b],esp
  419a2e:	leave  
  419a2f:	lahf   
  419a30:	pop    ss
  419a31:	in     al,0x3e
  419a33:	(bad)  
  419a34:	inc    edx
  419a35:	mov    ebx,0xa04444f0
  419a3a:	adc    dh,0x0
  419a3d:	dec    edi
  419a3e:	xchg   DWORD PTR ds:0xba0bfd49,esp
  419a44:	dec    ebp
  419a45:	xchg   ebx,eax
  419a46:	or     edi,ebp
  419a48:	jmp    0x419ac4
  419a4a:	neg    DWORD PTR [edi+0x6562b9b1]
  419a50:	in     al,dx
  419a51:	mov    ah,0x4a
  419a53:	and    cl,al
  419a55:	in     eax,0x94
  419a57:	in     eax,dx
  419a58:	dec    edi
  419a59:	call   0x6864:0xeffb70cb
  419a60:	sub    eax,0xe41f1265
  419a65:	sbb    ecx,ebx
  419a67:	add    al,0x60
  419a69:	cmp    BYTE PTR [ebx+0x18],bl
  419a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a6d:	xchg   BYTE PTR [eax+0x6469d21f],cl
  419a73:	test   eax,0x544db801
  419a78:	sub    eax,ecx
  419a7a:	ds jecxz 0x419ac3
  419a7d:	pop    esp
  419a7e:	vpaddusw xmm7,xmm5,XMMWORD PTR es:[edx+0x18]
  419a84:	adc    DWORD PTR [eax],ebx
  419a86:	mov    dh,0x46
  419a88:	sub    al,0x34
  419a8a:	ss mov al,0xdc
  419a8d:	and    eax,0xef29fd34
  419a92:	gs and al,0x7f
  419a95:	jmp    0x859a:0xcd6f8f88
  419a9c:	jl     0x419ad4
  419a9e:	sub    edx,DWORD PTR [ecx-0xede766a]
  419aa4:	inc    eax
  419aa5:	(bad)  
  419aa6:	and    eax,0x1d7348f0
  419aab:	(bad)  
  419aad:	dec    esp
  419aae:	pushf  
  419aaf:	mov    ch,0xf5
  419ab1:	xor    ebx,DWORD PTR [edi+0x6a]
  419ab4:	ins    DWORD PTR es:[edi],dx
  419ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ab6:	adc    DWORD PTR [ebp-0x3aef308e],esi
  419abc:	es mov cl,0xb6
  419abf:	into   
  419ac0:	das    
  419ac1:	in     eax,0x8c
  419ac3:	mov    bh,0x92
  419ac5:	jmp    0xb609139d
  419aca:	std    
  419acb:	mov    WORD PTR [ebx-0x1c],gs
  419ace:	pop    edx
  419acf:	and    al,0xd1
  419ad1:	push   eax
  419ad2:	mov    eax,0x651fa304
  419ad7:	test   DWORD PTR [ecx-0x25],0x274c8901
  419ade:	cmp    DWORD PTR [edx-0x5e],eax
  419ae1:	lea    edx,[ebx]
  419ae3:	scas   eax,DWORD PTR es:[edi]
  419ae4:	sete   cl
  419ae7:	push   es
  419ae8:	push   ebp
  419ae9:	jge    0x419b58
  419aeb:	push   edx
  419aec:	shr    DWORD PTR [eax+0x33e46524],0xe1
  419af3:	adc    al,0xb9
  419af5:	(bad)  
  419af6:	mov    ebp,0x34f08c56
  419afb:	ret    
  419afc:	jge    0x419b5d
  419afe:	mov    ss,WORD PTR [ebx+0x30]
  419b01:	sti    
  419b02:	iret   
  419b03:	mov    cl,0x1a
  419b05:	not    DWORD PTR ds:0x433205b8
  419b0b:	jmp    0x419b5a
  419b0d:	jecxz  0x419b8b
  419b0f:	in     al,dx
  419b10:	repz pop esi
  419b12:	je     0x419b73
  419b14:	out    dx,eax
  419b15:	adc    ch,ah
  419b17:	stos   DWORD PTR es:[edi],eax
  419b18:	fucomip st,st(6)
  419b1a:	mov    ds:0xdc60dd7,eax
  419b1f:	fdivp  st(5),st
  419b21:	mov    ebp,0xa30c07e7
  419b26:	ins    BYTE PTR es:[edi],dx
  419b27:	out    0x90,al
  419b29:	push   esi
  419b2a:	mov    eax,ds:0x7a323b43
  419b2f:	xor    DWORD PTR [ebp+ebx*4+0x9],ebp
  419b33:	mov    al,0x64
  419b35:	add    al,0xc
  419b37:	push   edx
  419b38:	jnp    0x419b49
  419b3a:	clc    
  419b3b:	jo     0x419b8e
  419b3d:	dec    ebx
  419b3e:	xchg   esp,eax
  419b3f:	aaa    
  419b40:	sbb    eax,0x361c8ae1
  419b45:	sti    
  419b46:	push   0x46740ddb
  419b4b:	jmp    0xa5bd154
  419b50:	push   eax
  419b51:	loope  0x419b36
  419b53:	(bad)  
  419b55:	ja     0x419b3e
  419b57:	cmc    
  419b58:	lea    esi,[esi]
  419b5a:	xchg   ebp,eax
  419b5b:	shl    DWORD PTR [ecx+0x2938fa07],0x74
  419b62:	xchg   BYTE PTR [ecx],bl
  419b64:	xor    dh,cl
  419b66:	retfw  0xad3
  419b6a:	lods   eax,DWORD PTR ds:[esi]
  419b6b:	popf   
  419b6c:	or     al,0xd8
  419b6e:	les    ecx,FWORD PTR [ecx-0x11ce44e2]
  419b74:	jbe    0x419b05
  419b76:	inc    ebp
  419b77:	outs   dx,DWORD PTR ds:[esi]
  419b78:	xchg   ebp,eax
  419b79:	es add eax,edx
  419b7c:	xchg   DWORD PTR [edi+0x52c9903e],esp
  419b82:	or     al,0x71
  419b84:	icebp  
  419b85:	adc    al,0x93
  419b87:	cmp    ecx,DWORD PTR [eax-0x8]
  419b8a:	mov    edi,0x6322d55d
  419b8f:	cmp    BYTE PTR [edi-0x38b2a9ad],cl
  419b95:	or     BYTE PTR ds:0xe065c1f7,dl
  419b9b:	xor    al,0x48
  419b9d:	pop    edi
  419b9e:	or     al,0xf7
  419ba0:	aad    0x79
  419ba2:	dec    esp
  419ba3:	mov    edx,0x5a2ed521
  419ba8:	outs   dx,DWORD PTR ds:[esi]
  419ba9:	mov    edi,DWORD PTR [edi+0xefee8b6]
  419baf:	dec    edi
  419bb0:	and    eax,0x89b7b390
  419bb5:	pop    edx
  419bb6:	aam    0xf2
  419bb8:	sbb    ah,BYTE PTR [edx+0xa4a5ac]
  419bbe:	sbb    ebx,DWORD PTR [ecx+edi*8-0x7]
  419bc2:	add    BYTE PTR [esi],ch
  419bc4:	test   eax,0xb78f1b7f
  419bc9:	pop    ebp
  419bca:	sti    
  419bcb:	xor    esp,ecx
  419bcd:	into   
  419bce:	mov    dh,0x92
  419bd0:	mov    WORD PTR [ecx-0x60],es
  419bd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd4:	dec    eax
  419bd5:	cld    
  419bd6:	out    0x57,eax
  419bd8:	ret    0xac27
  419bdb:	xchg   esp,eax
  419bdc:	xchg   BYTE PTR [ebx],bh
  419bde:	mov    ebx,0xb94ea850
  419be3:	fldcw  WORD PTR ds:0x2c9e3ed1
  419be9:	xchg   edi,eax
  419bea:	jecxz  0x419c30
  419bec:	aaa    
  419bed:	lahf   
  419bee:	sbb    al,0x83
  419bf0:	sub    al,0x4a
  419bf2:	retf   0xbffd
  419bf5:	mov    ecx,0x3bc248bd
  419bfa:	mov    edx,0x3d0129f7
  419bff:	xor    al,0x43
  419c01:	out    0xe7,eax
  419c03:	lea    eax,[ebp-0x30]
  419c06:	les    edx,FWORD PTR [ecx+esi*4+0x23e0699c]
  419c0d:	test   DWORD PTR [esi+0x1c6099d9],eax
  419c13:	call   0x476e:0x674db0b7
  419c1a:	sbb    dh,ah
  419c1c:	rcr    DWORD PTR [eax+0x8],cl
  419c1f:	shl    BYTE PTR [ebp-0x51983267],cl
  419c25:	xchg   edx,eax
  419c26:	int    0x39
  419c28:	xchg   ecx,eax
  419c29:	adc    ah,bl
  419c2b:	(bad)  
  419c2c:	mov    esp,0x2c73d67e
  419c31:	(bad)  
  419c32:	dec    edi
  419c33:	xchg   esp,eax
  419c34:	dec    ebx
  419c35:	dec    edx
  419c36:	ins    BYTE PTR es:[edi],dx
  419c37:	lock dec esi
  419c39:	mov    bh,0xc1
  419c3b:	std    
  419c3c:	test   DWORD PTR [ecx-0x37067e8],ebp
  419c42:	add    edi,DWORD PTR [edi+0xc]
  419c45:	pop    esp
  419c46:	sub    eax,0xf75a2a01
  419c4b:	scas   eax,DWORD PTR es:[edi]
  419c4c:	jl     0x419c24
  419c4e:	adc    ch,BYTE PTR [esi+0x7b]
  419c51:	add    eax,0x961c200c
  419c56:	push   esi
  419c57:	sbb    ebp,DWORD PTR [eax-0x1a]
  419c5a:	pop    ebp
  419c5b:	gs jne 0x419cd5
  419c5e:	pop    esp
  419c5f:	enter  0xb522,0x91
  419c63:	cmp    BYTE PTR [ecx-0x11fbcdb3],ch
  419c69:	cmp    bl,bl
  419c6b:	push   eax
  419c6c:	lock jb 0x419c71
  419c6f:	ja     0x419c8f
  419c71:	out    dx,eax
  419c72:	(bad)  
  419c73:	xlat   BYTE PTR ds:[ebx]
  419c74:	jo     0x419cc8
  419c76:	test   BYTE PTR [esp+eax*8-0x5a],cl
  419c7a:	or     al,0x40
  419c7c:	dec    ebp
  419c7d:	out    dx,al
  419c7e:	xchg   esi,eax
  419c7f:	call   0xaab5:0xdf60a784
  419c86:	dec    eax
  419c87:	fist   DWORD PTR [edx-0x2ca2de75]
  419c8d:	and    eax,0xe3c20b9d
  419c92:	mov    edx,0x6f561cf2
  419c97:	push   es
  419c98:	(bad)  
  419c99:	sub    ebx,DWORD PTR [esi+eax*8]
  419c9c:	ret    
  419c9d:	cmp    ebx,DWORD PTR [ecx-0x5]
  419ca0:	in     al,0x83
  419ca2:	in     eax,0x1c
  419ca4:	stos   BYTE PTR es:[edi],al
  419ca5:	js     0x419c2d
  419ca7:	in     eax,0x23
  419ca9:	repz mov ds,WORD PTR [edi+esi*8+0x78216d83]
  419cb1:	and    ebx,DWORD PTR [ebp+0x449a4904]
  419cb7:	enter  0xd1d1,0xd2
  419cbb:	leave  
  419cbc:	ja     0x419c67
  419cbe:	inc    ecx
  419cbf:	adc    DWORD PTR [esi+0x1d],esi
  419cc2:	sar    BYTE PTR [esi],cl
  419cc4:	test   al,0x3e
  419cc6:	shl    BYTE PTR [edi-0x68],0xcc
  419cca:	stc    
  419ccb:	dec    edx
  419ccc:	std    
  419ccd:	sbb    al,0xcf
  419ccf:	pop    ecx
  419cd0:	jmp    0x53d06871
  419cd5:	(bad)  [esi+ecx*2]
  419cd8:	retf   0xe207
  419cdb:	or     ebp,esp
  419cdd:	icebp  
  419cde:	nop
  419cdf:	dec    esi
  419ce0:	cdq    
  419ce1:	sahf   
  419ce2:	in     al,0xdd
  419ce4:	jle    0x419d0e
  419ce6:	or     ebp,DWORD PTR [edi-0x49ccecdc]
  419cec:	xchg   edx,eax
  419ced:	sub    eax,0x4102226d
  419cf2:	cmp    ebx,esp
  419cf4:	pusha  
  419cf5:	je     0x419c9f
  419cf7:	cli    
  419cf8:	cs mov bh,ah
  419cfb:	shr    cl,cl
  419cfd:	sub    al,0xc0
  419cff:	jle    0x419cb0
  419d01:	inc    ebp
  419d02:	inc    esp
  419d03:	mov    ch,0x87
  419d05:	shl    DWORD PTR [ebx],cl
  419d07:	scas   al,BYTE PTR es:[edi]
  419d08:	div    BYTE PTR [esi-0x51ea5886]
  419d0e:	or     eax,0xd48e6c01
  419d13:	data16 mov ch,0xfc
  419d16:	pop    edx
  419d17:	or     bl,BYTE PTR [edx-0x46]
  419d1a:	add    DWORD PTR [ebx],edi
  419d1c:	jno    0x419d20
  419d1e:	dec    edx
  419d1f:	std    
  419d20:	es add eax,0x9b29f77
  419d26:	out    0x8f,al
  419d28:	xchg   esp,eax
  419d29:	loop   0x419d74
  419d2b:	fbld   TBYTE PTR [ebx+0x61]
  419d2e:	xchg   esi,eax
  419d2f:	xor    eax,0x7c6ba197
  419d34:	int    0xed
  419d36:	lods   al,BYTE PTR ds:[esi]
  419d37:	fiadd  WORD PTR [esp+ebp*4+0x1510d816]
  419d3e:	stos   DWORD PTR es:[edi],eax
  419d3f:	(bad)  
  419d41:	das    
  419d42:	fild   DWORD PTR [eax-0x42]
  419d45:	cmp    al,bh
  419d47:	inc    ch
  419d49:	sbb    al,0x6e
  419d4b:	xor    bl,BYTE PTR [ecx]
  419d4d:	dec    edx
  419d4e:	and    BYTE PTR [esi+0x6d7ce05a],bh
  419d54:	jg     0x419dd4
  419d56:	inc    ebp
  419d57:	sub    bl,BYTE PTR [ebx-0x67c70a17]
  419d5d:	mov    ch,0x89
  419d5f:	sub    al,0x4c
  419d61:	dec    ecx
  419d62:	ror    DWORD PTR [edi+0x53],0x88
  419d66:	ror    dl,1
  419d68:	cdq    
  419d69:	mov    edx,0xcc474051
  419d6e:	or     BYTE PTR ds:0xf6a3be47,bh
  419d74:	pop    edx
  419d75:	dec    ebx
  419d76:	and    bl,BYTE PTR [edx+0x4c]
  419d79:	mov    eax,ds:0xc133da35
  419d7e:	mov    ecx,0x52012a8e
  419d83:	push   ss
  419d84:	push   ebx
  419d85:	rol    DWORD PTR [ebp-0x2833d00e],1
  419d8b:	push   ss
  419d8c:	fidivr DWORD PTR [edx+0xcaeb7a0]
  419d92:	es jmp 0x419d4b
  419d95:	lock aad 0xe3
  419d98:	push   esp
  419d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9a:	repnz gs sbb eax,0x9d6e14b5
  419da1:	dec    ecx
  419da2:	cmp    BYTE PTR [edx],dh
  419da4:	pop    edx
  419da5:	cmove  edx,esi
  419da8:	std    
  419da9:	xchg   ebx,eax
  419daa:	lods   eax,DWORD PTR ds:[esi]
  419dab:	lahf   
  419dac:	and    edx,eax
  419dae:	sahf   
  419daf:	push   0xc82e96a1
  419db4:	sti    
  419db5:	dec    esp
  419db7:	push   ds
  419db8:	cmp    ah,BYTE PTR es:[eax+esi*1+0x3f]
  419dbd:	mov    BYTE PTR [ebx+esi*2+0x6d],al
  419dc1:	push   cs
  419dc2:	or     DWORD PTR [ebp-0x6ce8f95e],eax
  419dc8:	ja     0x419d4a
  419dca:	sub    al,BYTE PTR [eax+0x7f]
  419dcd:	out    dx,eax
  419dce:	jns    0x419da5
  419dd0:	into   
  419dd1:	add    BYTE PTR [eax],al
  419dd3:	scas   al,BYTE PTR es:[edi]
  419dd4:	dec    ebx
  419dd5:	and    eax,0x3d6ee1fa
  419dda:	lods   al,BYTE PTR ds:[esi]
  419ddb:	nop
  419ddc:	int3   
  419ddd:	pop    edx
  419dde:	call   0x1aa05aa1
  419de3:	fwait
  419de4:	mov    ds:0x46e555fd,eax
  419de9:	pop    esi
  419dea:	jne    0x419e60
  419dec:	xchg   edi,eax
  419ded:	call   0xc31241a5
  419df2:	fldcw  WORD PTR [esi]
  419df4:	cwde   
  419df5:	jnp    0x419e11
  419df7:	cmp    DWORD PTR [eax-0x6b179cf3],esi
  419dfd:	sbb    DWORD PTR [ebp-0x7c6ce90],esp
  419e03:	xchg   DWORD PTR [ecx],esp
  419e05:	retf   0x6f70
  419e08:	mov    DWORD PTR [ecx+0x4c],ecx
  419e0b:	sub    eax,0x404ed6d7
  419e10:	sub    al,0x76
  419e12:	add    eax,0x48bdb9a1
  419e17:	in     eax,0x2c
  419e19:	in     al,dx
  419e1a:	scas   eax,DWORD PTR es:[edi]
  419e1b:	bnd addr16 jnp 0x419dc0
  419e1f:	js     0x419e4c
  419e21:	call   0x45aa:0xdb46b9d9
  419e28:	and    al,0xd5
  419e2a:	in     eax,0x6a
  419e2c:	mov    esp,0x8760818c
  419e31:	popa   
  419e32:	mov    dh,0xa4
  419e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e35:	addr16 mov edx,0x5b7278f
  419e3b:	xor    DWORD PTR [edx+0x69],ecx
  419e3e:	je     0x419de8
  419e40:	addr16 cmp edi,esi
  419e43:	sub    BYTE PTR [ebx],al
  419e45:	push   esi
  419e46:	xor    al,0x2c
  419e48:	push   ecx
  419e49:	or     DWORD PTR [ecx+0x19],0xd268478e
  419e50:	test   eax,0x51f67d2a
  419e55:	sar    DWORD PTR [ebx+0x3a937018],1
  419e5b:	or     BYTE PTR [edi],dh
  419e5d:	xchg   BYTE PTR [esi-0x3931694b],dl
  419e63:	fadd   QWORD PTR [edi-0x1b]
  419e66:	inc    ebx
  419e67:	fst    DWORD PTR [edx+edx*8]
  419e6a:	outs   dx,DWORD PTR ds:[esi]
  419e6b:	adc    ebx,DWORD PTR [eax-0x2d]
  419e6e:	hlt    
  419e6f:	cs enter 0xee28,0x40
  419e74:	sti    
  419e75:	cmc    
  419e76:	xchg   DWORD PTR [eax],edi
  419e78:	and    BYTE PTR ds:0xc5159c69,ch
  419e7e:	jnp    0x419e26
  419e80:	shl    DWORD PTR [edi+0x15],0xd5
  419e84:	pushf  
  419e85:	push   ss
  419e86:	adc    DWORD PTR [edx-0x8],esp
  419e89:	fsub   QWORD PTR [ebx]
  419e8b:	xchg   ebp,eax
  419e8c:	mov    bh,0x79
  419e8e:	ins    DWORD PTR es:[edi],dx
  419e8f:	and    BYTE PTR [ecx-0x7d3ad191],al
  419e95:	scas   al,BYTE PTR es:[edi]
  419e96:	jl     0x419eee
  419e98:	loopne 0x419efb
  419e9a:	push   ebp
  419e9b:	sbb    eax,0x133f059a
  419ea0:	jecxz  0x419ea7
  419ea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ea3:	or     DWORD PTR [esi+0x3c19983b],0xf28da5bc
  419ead:	(bad)  
  419eae:	mov    esp,0xfae6c5f5
  419eb3:	jmp    0x9a55:0x5e135f6d
  419eba:	pop    ecx
  419ebb:	repnz push ebx
  419ebd:	inc    edx
  419ebe:	call   0x4d8f:0x119be4a1
  419ec5:	inc    esi
  419ec6:	fs dec esp
  419ec8:	pop    esi
  419ec9:	mov    esp,0x5c07ebb1
  419ece:	sbb    dh,BYTE PTR [esi+0x6d4222ff]
  419ed4:	add    eax,0x2e1f2791
  419ed9:	test   al,0x5
  419edb:	dec    esi
  419edc:	das    
  419edd:	rcr    BYTE PTR ds:0xe3b9cceb,cl
  419ee3:	pop    ds
  419ee4:	sub    al,al
  419ee6:	cli    
  419ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ee8:	(bad)  
  419ee9:	mov    es,WORD PTR ds:0x33a1b68e
  419eef:	out    dx,eax
  419ef0:	imul   esp,edi,0x6a
  419ef3:	mov    ds:0xedbf3481,al
  419ef8:	std    
  419ef9:	popa   
  419efa:	ds enter 0x7060,0x51
  419eff:	adc    bl,ch
  419f01:	cmp    DWORD PTR [esi+0x50],0x55
  419f05:	dec    ebp
  419f06:	cmp    DWORD PTR [ebx+0x4b],edi
  419f09:	mov    ecx,DWORD PTR [edi-0x2d]
  419f0c:	mov    ah,0xab
  419f0e:	pop    DWORD PTR [esp+ebx*1]
  419f11:	cmp    edi,0xffffffbc
  419f14:	add    BYTE PTR [ebx-0x5d],ah
  419f17:	or     ecx,ebp
  419f19:	stos   DWORD PTR es:[edi],eax
  419f1a:	pop    ebx
  419f1b:	sub    BYTE PTR [esi-0x1b],dh
  419f1e:	push   edi
  419f1f:	fcmovnb st,st(6)
  419f21:	ja     0x419ee3
  419f23:	push   edx
  419f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f25:	cmp    ebp,DWORD PTR [edi-0x605bdd2e]
  419f2b:	test   BYTE PTR [ecx-0x6b],0x2b
  419f2f:	ins    BYTE PTR es:[edi],dx
  419f30:	jecxz  0x419f26
  419f32:	xor    esp,ecx
  419f34:	retf   0xbd21
  419f37:	xchg   esi,eax
  419f38:	inc    edx
  419f39:	fcmove st,st(2)
  419f3b:	xor    esp,DWORD PTR [ebx-0x9]
  419f3e:	retf   0x3ade
  419f41:	call   0x466c:0xf1375987
  419f48:	inc    ecx
  419f49:	out    dx,al
  419f4a:	xor    eax,0xa99f69d5
  419f4f:	scas   al,BYTE PTR es:[edi]
  419f50:	js     0x419f5d
  419f52:	jae    0x419f7c
  419f54:	sbb    BYTE PTR [ecx+0x73],0xb0
  419f58:	mov    dh,0x8c
  419f5a:	inc    ecx
  419f5b:	xor    ebp,ebx
  419f5d:	sub    ch,BYTE PTR [esi+0x4a]
  419f60:	gs cmp edx,esi
  419f63:	std    
  419f64:	test   dh,ah
  419f66:	xor    eax,0xbee2acf1
  419f6b:	push   ecx
  419f6c:	enter  0x531b,0x9c
  419f70:	inc    ebx
  419f71:	jne    0x419faf
  419f73:	call   0x644ee50e
  419f78:	into   
  419f79:	ret    
  419f7a:	inc    edx
  419f7b:	and    dh,dl
  419f7d:	xor    DWORD PTR [ebp+eiz*2+0x5eb45a2f],0xa142b7b8
  419f88:	call   0x8d0d:0xa8533447
  419f8f:	out    0x60,al
  419f91:	inc    ecx
  419f92:	mov    dl,0x8b
  419f94:	imul   DWORD PTR [esi-0x104cd0c4]
  419f9a:	lods   al,BYTE PTR ds:[si]
  419f9c:	lahf   
  419f9d:	sbb    ecx,esp
  419f9f:	mov    ds:0x69765409,eax
  419fa4:	or     al,0x88
  419fa6:	mov    ch,0xc4
  419fa8:	xchg   edi,eax
  419fa9:	push   esi
  419faa:	in     al,0xac
  419fac:	fnstenv [eax-0x4f]
  419faf:	clc    
  419fb0:	xchg   ebx,eax
  419fb1:	pop    edi
  419fb2:	mov    ecx,0x7a8c2d8
  419fb7:	ret    
  419fb8:	sub    ebp,DWORD PTR [ebx]
  419fba:	enter  0xea76,0xb1
  419fbe:	int    0x6d
  419fc0:	xor    eax,0x1b50ac46
  419fc5:	push   ss
  419fc6:	outs   dx,BYTE PTR ds:[esi]
  419fc7:	push   0x3e
  419fc9:	out    0xd9,al
  419fcb:	inc    eax
  419fcc:	ret    
  419fcd:	int    0xfc
  419fcf:	sbb    BYTE PTR [ebx-0x7f],dl
  419fd2:	pop    es
  419fd3:	ins    DWORD PTR es:[edi],dx
  419fd4:	xchg   ebx,edx
  419fd6:	cmp    DWORD PTR [edx],edx
  419fd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fd9:	mov    al,0x94
  419fdb:	sub    edi,edi
  419fdd:	fs cmc 
  419fdf:	push   ecx
  419fe0:	pop    ebp
  419fe1:	(bad)  
  419fe2:	mov    esi,0x50b6f3ae
  419fe7:	imul   edi,esi,0xb22f7a98
  419fed:	cs mov edx,0xd8177aa
  419ff3:	fld    TBYTE PTR [esi+0x2b]
  419ff6:	jo     0x419f93
  419ff8:	enter  0x755c,0x3b
  419ffc:	adc    eax,0x4de646cd
  41a001:	test   eax,0xc94f5d6e
  41a006:	in     eax,0x90
  41a008:	pop    ss
  41a009:	repnz cli 
  41a00b:	in     al,dx
  41a00c:	(bad)  [edx]
  41a00e:	retf   0x821f
  41a011:	into   
  41a012:	or     ebp,DWORD PTR [eax]
  41a014:	inc    ebp
  41a015:	add    BYTE PTR [eax],bl
  41a017:	ds pop edi
  41a01a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a01b:	ud2    
  41a01d:	xchg   ebx,eax
  41a01e:	(bad)  
  41a01f:	stc    
  41a020:	mov    BYTE PTR [ecx+0x4b],dl
  41a023:	sahf   
  41a024:	mov    ecx,0x9cdc8d10
  41a029:	pop    ss
  41a02a:	lea    ecx,[ebx+0x1e3b42de]
  41a030:	call   0xfbca8dc1
  41a035:	xor    al,cl
  41a037:	and    ebx,DWORD PTR [ebp+0x1d]
  41a03a:	or     BYTE PTR [esi],bh
  41a03c:	mov    ds:0x3f9af301,eax
  41a041:	lds    esp,FWORD PTR [esi-0x3f]
  41a044:	adc    cl,bl
  41a046:	repz popa 
  41a048:	dec    eax
  41a049:	je     0x41a07a
  41a04b:	adc    ah,ch
  41a04d:	test   al,0x65
  41a04f:	bnd call 0xfb047893
  41a055:	or     ebx,DWORD PTR [edx+0x3618f2ce]
  41a05b:	add    eax,0xeea35e80
  41a060:	outs   dx,DWORD PTR ds:[esi]
  41a061:	dec    esp
  41a062:	or     ch,BYTE PTR [ebp-0x3fa7d73c]
  41a068:	and    BYTE PTR [edi-0x8],0x11
  41a06c:	push   0x67
  41a06e:	neg    cl
  41a070:	mov    ebp,0x92cc8788
  41a075:	sub    dl,bl
  41a077:	inc    eax
  41a078:	fnstenv [ebx-0x5d]
  41a07b:	das    
  41a07c:	fdivrp st(2),st
  41a07e:	xchg   BYTE PTR ds:0x5ec655c7,dh
  41a084:	mov    bh,0x93
  41a086:	out    0x1d,eax
  41a088:	retf   
  41a089:	sbb    ebx,ebx
  41a08b:	push   0x3715235a
  41a090:	iret   
  41a091:	jns    0x41a055
  41a093:	leave  
  41a094:	pop    ds
  41a095:	stos   BYTE PTR es:[edi],al
  41a096:	jl     0x41a0ff
  41a098:	mov    esi,0x8c6f00f
  41a09d:	push   ss
  41a09e:	shl    BYTE PTR [edx+ecx*4],1
  41a0a1:	inc    ebp
  41a0a2:	jne    0x41a02f
  41a0a4:	js     0x41a079
  41a0a6:	sbb    eax,0x19e26d34
  41a0ab:	or     esp,0x3
  41a0ae:	adc    edi,edi
  41a0b0:	fscale 
  41a0b2:	jns    0x41a067
  41a0b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b5:	jbe    0x41a0c5
  41a0b7:	pop    ss
  41a0b8:	xlat   BYTE PTR ds:[ebx]
  41a0b9:	stos   DWORD PTR es:[edi],eax
  41a0ba:	xchg   ecx,eax
  41a0bb:	add    DWORD PTR [ecx],0x55
  41a0be:	inc    edx
  41a0bf:	mov    al,ds:0xc2938696
  41a0c4:	mov    edx,0xe128ddaa
  41a0c9:	mov    edi,0x6c25f461
  41a0ce:	xchg   esp,eax
  41a0cf:	rcl    BYTE PTR [edi-0x165a5eba],0x9e
  41a0d6:	jb     0x41a0ba
  41a0d8:	rcl    dl,cl
  41a0da:	cmp    al,0x87
  41a0dc:	es in  al,0x70
  41a0df:	es in  al,dx
  41a0e1:	jmp    0xb2b89094
  41a0e6:	sahf   
  41a0e7:	push   ss
  41a0e8:	xor    DWORD PTR [eax],ebp
  41a0ea:	aas    
  41a0eb:	push   eax
  41a0ec:	jge    0x41a0d4
  41a0ee:	push   es
  41a0ef:	adc    al,0x33
  41a0f1:	cli    
  41a0f2:	dec    edx
  41a0f3:	pop    esi
  41a0f4:	pop    eax
  41a0f5:	loopne 0x41a113
  41a0f7:	sub    eax,0xde520a3
  41a0fc:	fadd   QWORD PTR [eax]
  41a0fe:	addr16 (bad) 
  41a101:	out    dx,eax
  41a102:	xor    eax,0x1edb2dc
  41a107:	pop    es
  41a108:	leave  
  41a109:	jo     0x41a172
  41a10b:	add    edi,DWORD PTR [ecx+0x4a4ce903]
  41a111:	cmp    al,0x4c
  41a113:	into   
  41a114:	dec    eax
  41a115:	gs stc 
  41a117:	popa   
  41a118:	jl     0x41a142
  41a11a:	mov    ah,0x36
  41a11c:	arpl   WORD PTR ds:0xaab16873,bx
  41a122:	mov    dh,0x9a
  41a124:	pop    ebx
  41a125:	pop    esp
  41a126:	mov    cl,ah
  41a128:	arpl   WORD PTR [bx+si-0x36],sp
  41a12c:	ss push eax
  41a12e:	out    0x86,eax
  41a130:	jmp    0xac18:0xa96b4184
  41a137:	jns    0x41a0ec
  41a139:	mov    ebp,0x219231d
  41a13e:	pop    esp
  41a13f:	addr16 gs test al,0x32
  41a143:	sub    eax,0xac20c8b2
  41a148:	(bad)  
  41a149:	int3   
  41a14a:	fdiv   QWORD PTR [eax+0x5d11b42]
  41a150:	rol    DWORD PTR [edx],1
  41a152:	into   
  41a153:	mov    al,0x80
  41a155:	cdq    
  41a156:	lods   al,BYTE PTR ds:[esi]
  41a157:	xchg   edi,eax
  41a158:	push   edi
  41a159:	mov    ebp,0xdcb3b55f
  41a15e:	inc    ecx
  41a15f:	mov    ebx,0x906c0aff
  41a164:	call   0x2f6c5a45
  41a169:	jp     0x41a1de
  41a16b:	cli    
  41a16c:	dec    edx
  41a16d:	pop    ebp
  41a16e:	aad    0x98
  41a170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a171:	jl     0x41a19c
  41a173:	sub    eax,0xfdc031f9
  41a178:	fwait
  41a179:	inc    ecx
  41a17a:	xor    BYTE PTR [ecx],dl
  41a17c:	adc    eax,0x35e546bb
  41a181:	sub    BYTE PTR [edx-0x60],dl
  41a184:	(bad)  
  41a186:	jmp    0x27830d26
  41a18b:	out    0xc0,eax
  41a18d:	into   
  41a18e:	inc    ebp
  41a18f:	sub    al,0x53
  41a191:	lods   eax,DWORD PTR ds:[esi]
  41a192:	xor    eax,0x2c4713c9
  41a197:	adc    eax,0xdf1896f3
  41a19c:	xor    ebx,0x17
  41a19f:	(bad)  
  41a1a1:	loope  0x41a153
  41a1a3:	out    dx,eax
  41a1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a5:	xchg   ch,bh
  41a1a7:	inc    edx
  41a1a8:	mov    cl,0xa2
  41a1aa:	(bad)  
  41a1ab:	inc    ecx
  41a1ac:	les    eax,FWORD PTR [edi+0x35dd260c]
  41a1b2:	dec    ecx
  41a1b3:	jne    0x41a19b
  41a1b5:	jp     0x41a13c
  41a1b7:	fxch   st(0)
  41a1b9:	mov    al,0x7e
  41a1bb:	mov    DWORD PTR [edi+0x3a],0xf267a0f8
  41a1c2:	icebp  
  41a1c3:	test   eax,0x834f4696
  41a1c8:	pop    ecx
  41a1c9:	mov    esi,0xef4200f1
  41a1ce:	lods   al,BYTE PTR ds:[esi]
  41a1cf:	sti    
  41a1d0:	sbb    dh,BYTE PTR [edx+0x1a]
  41a1d3:	jle    0x41a1df
  41a1d5:	je     0x41a20d
  41a1d7:	xchg   ecx,eax
  41a1d8:	mov    ecx,0xea7aa5f2
  41a1dd:	test   BYTE PTR [esi+0x76],0xe
  41a1e1:	call   0x6ca03081
  41a1e6:	mov    ebx,DWORD PTR [esi-0xe]
  41a1e9:	push   0x49688daa
  41a1ee:	ret    0x991b
  41a1f1:	aaa    
  41a1f2:	scas   eax,DWORD PTR es:[edi]
  41a1f3:	inc    edi
  41a1f4:	lock and DWORD PTR [ebp+ebx*4+0x713a0bd9],0x166af02f
  41a200:	pop    edi
  41a201:	imul   ebx,DWORD PTR [edx-0xe],0xffffffce
  41a205:	out    dx,eax
  41a206:	sar    ebx,cl
  41a208:	pop    ecx
  41a209:	and    eax,0x890586f0
  41a20e:	loop   0x41a208
  41a210:	ret    0x4f6f
  41a213:	push   ebx
  41a214:	mov    cl,0x2c
  41a216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a217:	ja     0x41a265
  41a219:	fisubr WORD PTR [eax-0x331def17]
  41a21f:	fist   WORD PTR [ecx]
  41a221:	loop   0x41a1c3
  41a223:	mov    al,0x7b
  41a225:	fnstenv [edx+0x1f]
  41a228:	popf   
  41a229:	push   edi
  41a22a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a22c:	mov    esp,0x1c16f55c
  41a231:	mov    esp,ecx
  41a233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a234:	ins    DWORD PTR es:[edi],dx
  41a235:	lods   eax,DWORD PTR ds:[esi]
  41a236:	scas   eax,DWORD PTR es:[edi]
  41a237:	mov    ah,0x25
  41a239:	outs   dx,DWORD PTR ds:[esi]
  41a23a:	mov    gs,ecx
  41a23c:	mov    eax,0xf65e759b
  41a241:	sub    esi,DWORD PTR [esi+0x29]
  41a244:	and    ch,BYTE PTR [eax]
  41a246:	push   esp
  41a247:	fld    QWORD PTR [esi+0x5d]
  41a24a:	mov    ebx,0xaba81bec
  41a24f:	int    0xef
  41a251:	lods   eax,DWORD PTR ds:[esi]
  41a252:	fs adc eax,edx
  41a255:	add    al,0x8b
  41a257:	int3   
  41a258:	mov    edx,0x5f3714a4
  41a25d:	sub    cl,BYTE PTR [edi]
  41a25f:	or     bl,BYTE PTR [ebp+ebp*2+0x13]
  41a263:	mov    ss,WORD PTR [esi]
  41a265:	jl     0x41a1fa
  41a267:	ficom  WORD PTR [ebp-0x6ce883e7]
  41a26d:	jo     0x41a22b
  41a26f:	mov    bl,0xa8
  41a271:	and    eax,DWORD PTR [ebx]
  41a273:	add    DWORD PTR [esi],ebp
  41a275:	ret    0xb892
  41a278:	call   0x7b12c53f
  41a27d:	or     al,0x6d
  41a27f:	sbb    eax,0x9f271a9e
  41a284:	add    al,0xc5
  41a286:	retf   0x2e89
  41a289:	dec    edx
  41a28a:	adc    bh,cl
  41a28c:	and    BYTE PTR [ecx],al
  41a28e:	test   BYTE PTR [ecx],0x3e
  41a291:	in     al,dx
  41a292:	mov    bl,0x70
  41a294:	and    eax,0x58fb5de1
  41a299:	pop    ss
  41a29a:	jne    0x41a222
  41a29c:	fimul  WORD PTR [edx]
  41a29e:	outs   dx,BYTE PTR ds:[esi]
  41a29f:	iret   
  41a2a0:	or     DWORD PTR ds:[eax+0x3770ff32],0x5f2f9a17
  41a2ab:	outs   dx,BYTE PTR ds:[esi]
  41a2ac:	scas   al,BYTE PTR es:[edi]
  41a2ad:	pop    es
  41a2ae:	(bad)  
  41a2af:	and    edi,DWORD PTR ds:0x7f080786
  41a2b5:	push   edx
  41a2b6:	push   esi
  41a2b7:	jle    0x41a2b7
  41a2b9:	sahf   
  41a2ba:	inc    eax
  41a2bb:	into   
  41a2bc:	jg     0x41a261
  41a2be:	lods   al,BYTE PTR ds:[esi]
  41a2bf:	test   eax,0x64b3376
  41a2c4:	ds inc ecx
  41a2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c7:	xor    bh,al
  41a2c9:	adc    DWORD PTR [ebx],esi
  41a2cb:	rcr    BYTE PTR [edx-0x2a],1
  41a2ce:	ins    DWORD PTR es:[edi],dx
  41a2cf:	xchg   esp,eax
  41a2d0:	xchg   ecx,eax
  41a2d1:	int    0x5
  41a2d3:	mov    dh,0xe4
  41a2d5:	stos   BYTE PTR es:[edi],al
  41a2d6:	stos   DWORD PTR es:[edi],eax
  41a2d7:	dec    ecx
  41a2d8:	and    ch,BYTE PTR [ebx-0x2908f892]
  41a2de:	push   ebp
  41a2df:	and    ebp,DWORD PTR [ebp-0x76]
  41a2e2:	test   al,0xfa
  41a2e4:	xchg   ecx,eax
  41a2e5:	sti    
  41a2e6:	push   0xb678858
  41a2eb:	pop    edi
  41a2ec:	icebp  
  41a2ed:	call   0x7be80ec
  41a2f2:	or     eax,0x798d7e03
  41a2f7:	jbe    0x41a2e4
  41a2f9:	loop   0x41a2d5
  41a2fb:	dec    eax
  41a2fc:	(bad)  
  41a2fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2fe:	dec    ebx
  41a2ff:	ss retf 
  41a301:	add    dh,BYTE PTR [edi]
  41a303:	push   edi
  41a304:	ja     0x41a307
  41a306:	ror    DWORD PTR [edi+0x21a37cd3],1
  41a30c:	dec    esp
  41a30d:	cdq    
  41a30e:	xlat   BYTE PTR ds:[ebx]
  41a30f:	daa    
  41a310:	mov    ebp,0x7b99b236
  41a315:	data16 adc al,0x20
  41a318:	mov    ah,0xba
  41a31a:	inc    ebx
  41a31b:	loope  0x41a2f7
  41a31d:	test   BYTE PTR [ebp+ebp*4+0x1d04f658],0xdd
  41a325:	mov    dh,0x3d
  41a327:	xor    DWORD PTR [ebp+0x1],eax
  41a32a:	pushf  
  41a32b:	retf   
  41a32c:	mov    ecx,0x5d70d6bd
  41a331:	pop    edi
  41a332:	mov    dh,0xec
  41a334:	mov    eax,0x8fd81109
  41a339:	mov    ebp,0xccf7fd5a
  41a33e:	int    0x35
  41a340:	pop    esp
  41a341:	lods   al,BYTE PTR ds:[esi]
  41a342:	xchg   esi,eax
  41a343:	jb     0x41a318
  41a345:	mov    edx,0x2a165cec
  41a34a:	mov    eax,0xc8e0663
  41a34f:	popf   
  41a350:	jo     0x41a39c
  41a352:	dec    esi
  41a353:	xchg   esi,eax
  41a354:	dec    ebx
  41a355:	mov    ebx,0xff9dd5d1
  41a35a:	jle    0x41a37e
  41a35c:	jge    0x41a2e3
  41a35e:	cli    
  41a35f:	je     0x41a2e7
  41a361:	jecxz  0x41a320
  41a363:	aad    0x1
  41a365:	xlat   BYTE PTR ds:[ebx]
  41a366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a367:	jle    0x41a3aa
  41a369:	jg     0x41a335
  41a36b:	ss push edi
  41a36d:	in     al,0x39
  41a36f:	mov    ebx,0x1ea2a1c
  41a374:	pop    esp
  41a375:	jmp    0x41a30c
  41a377:	cs imul ebx,ecx,0xffffffe0
  41a37b:	ja     0x41a374
  41a37d:	shr    BYTE PTR [ecx+0x63ae0b22],0x4f
  41a384:	loopne 0x41a333
  41a386:	(bad)  
  41a387:	sub    al,0xe4
  41a389:	fidiv  WORD PTR [ebx-0x1b9f735a]
  41a38f:	mov    ?,WORD PTR [eax+0x1f]
  41a392:	mov    al,0x54
  41a394:	retf   0x664f
  41a397:	and    al,0x1b
  41a399:	das    
  41a39a:	scas   eax,DWORD PTR es:[edi]
  41a39b:	mov    al,ds:0x5de2cfe
  41a3a0:	jge    0x41a3b8
  41a3a2:	xor    DWORD PTR [edx+0x518543ee],ebx
  41a3a8:	test   ebp,eax
  41a3aa:	fidiv  WORD PTR [esi+0x2dbb24cc]
  41a3b0:	mov    cl,0x1f
  41a3b2:	fwait
  41a3b3:	stc    
  41a3b4:	pop    edx
  41a3b5:	add    DWORD PTR [ecx+0x5b],0xc69e9a96
  41a3bc:	ss mov bl,0xeb
  41a3bf:	jmp    0x41a3be
  41a3c1:	mov    ds:0x8deb3004,al
  41a3c6:	and    bh,BYTE PTR [ebp+0x38]
  41a3c9:	or     eax,0x7b590ff8
  41a3ce:	into   
  41a3cf:	jl     0x41a351
  41a3d1:	rol    DWORD PTR [ebp-0x734de5cc],cl
  41a3d7:	(bad)  
  41a3d8:	xor    BYTE PTR [esi],dh
  41a3da:	dec    ebx
  41a3db:	jmp    0x2c17:0x74524992
  41a3e2:	add    BYTE PTR [esi],cl
  41a3e4:	sbb    BYTE PTR [edx-0x6ead9926],dl
  41a3ea:	inc    esi
  41a3eb:	and    dl,al
  41a3ed:	jge    0x41a42c
  41a3ef:	push   esp
  41a3f0:	fwait
  41a3f1:	jp     0x41a471
  41a3f3:	and    al,0xcf
  41a3f5:	pop    edi
  41a3f6:	push   eax
  41a3f7:	jl     0x41a44f
  41a3f9:	pop    ecx
  41a3fa:	js     0x41a42e
  41a3fc:	sub    eax,0xd20d932e
  41a401:	clc    
  41a402:	ss repnz std 
  41a405:	cmp    edx,edi
  41a407:	push   ds
  41a408:	mov    ebx,0xf6192842
  41a40d:	cmp    eax,0xb60f8a7f
  41a412:	outs   dx,DWORD PTR ds:[esi]
  41a413:	pop    edx
  41a414:	loopne 0x41a3de
  41a416:	push   edi
  41a417:	sub    bh,BYTE PTR [esi]
  41a419:	jno    0x41a3c6
  41a41b:	push   es
  41a41c:	ins    BYTE PTR es:[edi],dx
  41a41d:	ins    BYTE PTR es:[edi],dx
  41a41e:	sub    DWORD PTR [ecx+edi*2+0x61d4b976],ecx
  41a425:	shl    edx,cl
  41a427:	and    esp,DWORD PTR [esi]
  41a429:	push   ds
  41a42a:	xlat   BYTE PTR ds:[ebx]
  41a42b:	sbb    al,0xb1
  41a42d:	dec    esi
  41a42e:	dec    ebx
  41a42f:	and    ebp,DWORD PTR [edx]
  41a431:	jge    0x41a441
  41a433:	fstp   DWORD PTR [edi]
  41a435:	ins    DWORD PTR es:[edi],dx
  41a436:	ror    dh,cl
  41a438:	je     0x41a455
  41a43a:	in     al,dx
  41a43b:	pushf  
  41a43c:	or     BYTE PTR [esi],0xf
  41a43f:	pop    edx
  41a440:	adc    esp,DWORD PTR [edx]
  41a442:	js     0x41a493
  41a444:	in     eax,dx
  41a445:	jge    0x41a3f3
  41a447:	and    bh,cl
  41a449:	outs   dx,DWORD PTR ds:[esi]
  41a44a:	scas   al,BYTE PTR es:[edi]
  41a44b:	jmp    0x41a467
  41a44d:	cmp    BYTE PTR [ebp+0x7],bl
  41a450:	add    ebx,DWORD PTR [edi+ebp*1]
  41a453:	sbb    DWORD PTR [esi-0x80],0xf4d542e2
  41a45a:	cmp    al,0xbf
  41a45c:	bsr    eax,DWORD PTR [esi]
  41a45f:	push   0x78
  41a461:	sbb    esi,DWORD PTR [edi+0x2]
  41a464:	adc    bh,BYTE PTR [edi+edi*4]
  41a467:	imul   esp,DWORD PTR [esi-0x1e],0x578c4cea
  41a46e:	push   ecx
  41a46f:	aaa    
  41a470:	ja     0x41a41c
  41a472:	push   esp
  41a473:	popf   
  41a474:	mov    edi,0x576217c7
  41a479:	inc    esp
  41a47a:	stc    
  41a47b:	push   0x16
  41a47d:	sub    ecx,edx
  41a47f:	cdq    
  41a480:	sbb    al,0xb5
  41a482:	xchg   edi,eax
  41a483:	jno    0x41a45c
  41a485:	sbb    al,0x8a
  41a487:	jg     0x41a431
  41a489:	ds ds nop
  41a48c:	jbe    0x41a4d0
  41a48e:	pushf  
  41a48f:	jae    0x41a4a2
  41a491:	sahf   
  41a492:	push   cs
  41a493:	xchg   esi,eax
  41a494:	dec    esi
  41a495:	out    dx,al
  41a496:	out    dx,eax
  41a497:	push   esp
  41a498:	clc    
  41a499:	sub    eax,0x94b4d348
  41a49e:	pop    es
  41a49f:	adc    eax,0x76fafd4f
  41a4a4:	mov    ah,0x5c
  41a4a6:	add    al,0x41
  41a4a8:	mov    al,0xd3
  41a4aa:	xor    DWORD PTR [edx+0x5ca3f2bf],ebx
  41a4b0:	rcl    BYTE PTR [esi-0x5a0d4640],0xa7
  41a4b7:	sub    DWORD PTR [eax-0x80],ebx
  41a4ba:	jne    0x41a4dc
  41a4bc:	nop
  41a4bd:	dec    edx
  41a4be:	leave  
  41a4bf:	loopne 0x41a44f
  41a4c1:	mov    eax,DWORD PTR [ecx-0x4710000d]
  41a4c7:	or     eax,0xd840ab6
  41a4cc:	xlat   BYTE PTR ds:[ebx]
  41a4cd:	sub    bl,cl
  41a4cf:	dec    esp
  41a4d0:	out    dx,al
  41a4d1:	adc    DWORD PTR [esi],esi
  41a4d3:	pop    ebx
  41a4d4:	add    eax,0x2960c98e
  41a4d9:	mov    gs,WORD PTR [esi-0x63]
  41a4dc:	and    BYTE PTR [ecx-0x4b1c84e],bh
  41a4e2:	push   0x8a3e3d73
  41a4e7:	ss in  al,0x23
  41a4ea:	nop
  41a4eb:	fistp  QWORD PTR [eax]
  41a4ed:	das    
  41a4ee:	xlat   BYTE PTR ds:[ebx]
  41a4ef:	cld    
  41a4f0:	retf   
  41a4f1:	push   es
  41a4f2:	push   ss
  41a4f3:	adc    eax,0xabd81a63
  41a4f8:	call   0x812a:0x96d1b5f3
  41a4ff:	mov    al,ds:0x57e4dff
  41a504:	rcr    BYTE PTR [ecx+0x6cda3d6a],1
  41a50a:	sbb    eax,0xa01c321e
  41a50f:	dec    esp
  41a510:	mov    DWORD PTR [edi+0x3f],esi
  41a513:	sbb    al,0xfa
  41a515:	mov    eax,0x95ff1604
  41a51a:	add    ebx,0xffffffe8
  41a51d:	int3   
  41a51e:	push   0x6dcf9fc8
  41a523:	shl    BYTE PTR [ebx-0x38],1
  41a526:	aad    0x6f
  41a528:	in     al,dx
  41a529:	rol    dl,1
  41a52b:	push   ebx
  41a52c:	mov    BYTE PTR [eax+ebx*1],dl
  41a52f:	cmp    BYTE PTR [edx],cl
  41a531:	jl     0x41a50b
  41a533:	fcomp  DWORD PTR [ecx+ebx*2]
  41a536:	adc    BYTE PTR ds:0x6ed1919a,ah
  41a53c:	dec    esi
  41a53d:	push   ecx
  41a53e:	add    al,0xad
  41a540:	stos   DWORD PTR es:[edi],eax
  41a541:	lock daa 
  41a543:	leave  
  41a544:	jge    0x41a5ba
  41a546:	mov    ebp,0x75c00573
  41a54b:	jl     0x41a554
  41a54d:	(bad)  
  41a54e:	lods   eax,DWORD PTR ds:[esi]
  41a54f:	cmp    edi,DWORD PTR [bp+di+0x2c]
  41a553:	sub    al,0xef
  41a555:	sbb    edx,ebx
  41a557:	or     eax,0x488c98c3
  41a55c:	mov    eax,0xc66f4cee
  41a561:	mov    bl,0xa9
  41a563:	pop    edx
  41a564:	cld    
  41a565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a566:	inc    eax
  41a567:	scas   eax,DWORD PTR es:[edi]
  41a568:	fincstp 
  41a56a:	stos   DWORD PTR es:[edi],eax
  41a56b:	cld    
  41a56c:	ss pop ebx
  41a56e:	mov    esp,0xe7f3e4ca
  41a573:	test   al,0xf8
  41a575:	mov    ecx,0x1e91cbe5
  41a57a:	aad    0xe9
  41a57c:	rol    DWORD PTR [edi+0x55],1
  41a57f:	pop    edi
  41a580:	dec    edi
  41a581:	repz adc cl,bl
  41a584:	jmp    0xfe72:0xb56cbaa9
  41a58b:	out    dx,eax
  41a58c:	mov    ebx,0xb7edc69
  41a591:	int    0x3b
  41a593:	repz mov edi,0x42234e9c
  41a599:	mov    eax,0x197b25f
  41a59e:	les    ecx,FWORD PTR [ebx]
  41a5a0:	test   DWORD PTR [ecx+0x2be2d9d4],ebp
  41a5a6:	ror    ch,1
  41a5a8:	push   ebx
  41a5a9:	sahf   
  41a5aa:	loopne 0x41a562
  41a5ac:	not    DWORD PTR [eax]
  41a5ae:	or     esi,DWORD PTR [edi]
  41a5b0:	mov    esi,ecx
  41a5b2:	sbb    esi,edi
  41a5b4:	mov    ebx,esp
  41a5b6:	pusha  
  41a5b7:	jno    0x41a576
  41a5b9:	popf   
  41a5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5bb:	xor    eax,0xc655566c
  41a5c0:	scas   al,BYTE PTR es:[edi]
  41a5c1:	mov    ecx,DWORD PTR [edi]
  41a5c3:	jo     0x41a644
  41a5c5:	jmp    0x45acb91c
  41a5ca:	es out 0xd5,al
  41a5cd:	inc    ebp
  41a5ce:	in     al,dx
  41a5cf:	mov    ds:0x474573fe,al
  41a5d4:	sbb    al,0x5f
  41a5d6:	adc    eax,0xa0a79acc
  41a5db:	xor    BYTE PTR [edi+0x33],0x6f
  41a5df:	and    dh,al
  41a5e1:	inc    ebp
  41a5e2:	push   ebx
  41a5e3:	mov    dh,0xe3
  41a5e5:	or     ch,bh
  41a5e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5e8:	into   
  41a5e9:	aad    0x76
  41a5eb:	shr    BYTE PTR [ebx],cl
  41a5ed:	dec    ebx
  41a5ee:	cwde   
  41a5ef:	inc    ebp
  41a5f0:	dec    ebp
  41a5f1:	test   al,0x6c
  41a5f3:	dec    edi
  41a5f4:	loope  0x41a5a5
  41a5f6:	jne    0x41a5af
  41a5f8:	mov    ss,WORD PTR [edi+0x5e98a426]
  41a5fe:	sbb    eax,0x771dcb59
  41a603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a604:	xor    dl,BYTE PTR [edx+0x49b663ee]
  41a60a:	mov    ecx,0x22414966
  41a60f:	out    0xd1,eax
  41a611:	cmp    al,0xe4
  41a613:	pop    eax
  41a614:	xor    ecx,DWORD PTR [edx+0xe]
  41a617:	push   ss
  41a618:	dec    ebx
  41a619:	call   0x47623593
  41a61e:	mov    esp,0x77cd98b3
  41a623:	mov    cl,0xbf
  41a625:	push   eax
  41a626:	out    0x67,eax
  41a628:	jg     0x41a5f1
  41a62a:	xchg   ebx,eax
  41a62b:	ret    
  41a62c:	jge    0x41a610
  41a62e:	mov    cl,0x8a
  41a630:	ja     0x41a667
  41a632:	mov    ds:0x69111f80,al
  41a637:	mov    cl,0x3a
  41a639:	das    
  41a63a:	enter  0x6155,0xf3
  41a63e:	jle    0x41a646
  41a640:	fisubr DWORD PTR [edx-0x54]
  41a643:	dec    edx
  41a644:	mov    ebp,0x55a9eacf
  41a649:	adc    DWORD PTR [esi-0xf074857],0x40044ccb
  41a653:	fs call 0x1642:0x74c66f5f
  41a65b:	mov    esp,0xb9b4c089
  41a660:	daa    
  41a661:	inc    esi
  41a662:	(bad)  
  41a663:	jecxz  0x41a618
  41a665:	out    dx,al
  41a666:	ret    
  41a667:	pop    ecx
  41a668:	xchg   esp,eax
  41a669:	addr16 mov ebx,0x538b8306
  41a66f:	aaa    
  41a670:	ss xchg edi,eax
  41a672:	in     eax,dx
  41a673:	xchg   ecx,eax
  41a674:	jb     0x41a624
  41a676:	popf   
  41a677:	sub    al,0xd4
  41a679:	pop    ds
  41a67a:	fisttp DWORD PTR [esi+0xe]
  41a67d:	dec    esi
  41a67e:	sbb    al,0x91
  41a680:	(bad)  [edx+0x3324432b]
  41a686:	mov    ch,0x11
  41a688:	jl     0x41a6bd
  41a68a:	push   ecx
  41a68b:	mov    ebx,0x5a999bf3
  41a690:	pop    es
  41a691:	test   DWORD PTR [edx+0x23],0x8c7b78d
  41a698:	xchg   esi,eax
  41a699:	imul   edi,DWORD PTR [ecx+0x78],0xfffffffb
  41a69d:	and    ch,BYTE PTR [ebp+0x37]
  41a6a0:	cs (bad) 
  41a6a2:	and    cl,dh
  41a6a4:	add    BYTE PTR [ecx+0x1762b173],dl
  41a6aa:	sub    eax,0x70f12c94
  41a6af:	mov    eax,0xc9ada6e2
  41a6b4:	sub    BYTE PTR [edi+0x3e618353],bh
  41a6ba:	sub    bh,0x80
  41a6bd:	mov    bl,0x1e
  41a6bf:	test   ax,dx
  41a6c2:	dec    edi
  41a6c3:	dec    esi
  41a6c4:	loope  0x41a6f6
  41a6c6:	in     eax,0xc4
  41a6c8:	scas   eax,DWORD PTR es:[edi]
  41a6c9:	add    ah,BYTE PTR [ecx]
  41a6cb:	jle    0x41a670
  41a6cd:	stc    
  41a6ce:	in     eax,dx
  41a6cf:	adc    BYTE PTR [edi-0x21],cl
  41a6d2:	pop    eax
  41a6d3:	shl    DWORD PTR [esp+ebp*2-0x8ebc725],cl
  41a6da:	sbb    eax,0xed0515b1
  41a6df:	jp     0x41a693
  41a6e1:	dec    ebp
  41a6e2:	pusha  
  41a6e3:	std    
  41a6e4:	jmp    0xdece70b3
  41a6e9:	mov    ds:0xc2d86241,al
  41a6ee:	shr    BYTE PTR [eax+0x1390b594],0xd5
  41a6f5:	cmp    esp,DWORD PTR [edx]
  41a6f7:	ret    0x403b
  41a6fa:	aam    0x49
  41a6fc:	inc    esp
  41a6fd:	xchg   ebx,eax
  41a6fe:	fwait
  41a6ff:	push   esi
  41a700:	in     eax,0x99
  41a702:	sahf   
  41a703:	div    DWORD PTR [ebx+0x56]
  41a706:	out    0xe6,al
  41a708:	jno    0x41a69e
  41a70a:	ins    BYTE PTR es:[edi],dx
  41a70b:	dec    ebx
  41a70c:	pop    ebp
  41a70d:	loop   0x41a6e7
  41a70f:	xchg   ebx,eax
  41a710:	xchg   edi,eax
  41a711:	mov    ds:0x4176920d,eax
  41a716:	push   esi
  41a717:	mov    ecx,0x64475e0d
  41a71c:	xor    al,BYTE PTR [ecx+0x1]
  41a71f:	push   ecx
  41a720:	mov    ds:0x75a0a45b,eax
  41a725:	xchg   esp,eax
  41a726:	sahf   
  41a727:	rcr    DWORD PTR [esi+0xe2aa3e5],0xf3
  41a72e:	leave  
  41a72f:	and    BYTE PTR [esi-0x74],dh
  41a732:	dec    ebp
  41a733:	fistp  DWORD PTR [edi]
  41a735:	pop    ds
  41a736:	inc    cx
  41a738:	sub    DWORD PTR ds:0xa50c0f0e,ebx
  41a73e:	mov    bl,0x32
  41a740:	arpl   WORD PTR fs:[edx+0x49],bx
  41a744:	push   es
  41a745:	xchg   BYTE PTR [edx-0x2437b484],bl
  41a74b:	cmp    al,0x67
  41a74d:	pusha  
  41a74e:	pop    eax
  41a74f:	and    DWORD PTR [ecx+0x32266c38],0xec414cd0
  41a759:	pop    ebx
  41a75a:	inc    si
  41a75c:	pop    edi
  41a75d:	pop    eax
  41a75e:	dec    edi
  41a75f:	das    
  41a760:	inc    ebx
  41a761:	sbb    DWORD PTR [edi+0x180549ba],esi
  41a767:	aas    
  41a768:	out    0xd4,eax
  41a76a:	arpl   dx,cx
  41a76c:	scas   al,BYTE PTR es:[edi]
  41a76d:	call   0x6b712183
  41a772:	xlat   BYTE PTR ds:[ebx]
  41a773:	xlat   BYTE PTR ds:[ebx]
  41a774:	pop    ds
  41a775:	pop    ss
  41a776:	ret    0x794c
  41a779:	xchg   ebx,eax
  41a77a:	and    ebx,DWORD PTR [ebx+0x12e0c48e]
  41a780:	sar    al,0x0
  41a783:	gs nop
  41a785:	or     al,0x5b
  41a787:	sub    eax,0x539ec6de
  41a78c:	jnp    0x41a7e2
  41a78e:	cli    
  41a78f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a790:	test   BYTE PTR [ebx-0x57],bl
  41a793:	xor    DWORD PTR [ecx-0x78],edx
  41a796:	mov    ds:0x36d7b2f7,al
  41a79b:	xtest  
  41a79e:	out    dx,eax
  41a79f:	sub    ch,BYTE PTR [esi-0x74]
  41a7a2:	stos   BYTE PTR es:[edi],al
  41a7a3:	dec    ebx
  41a7a4:	push   ebp
  41a7a5:	inc    esi
  41a7a6:	mov    ch,0xa6
  41a7a8:	outs   dx,BYTE PTR ds:[esi]
  41a7a9:	jge    0x41a7c7
  41a7ab:	or     al,BYTE PTR [ebx+0x4a]
  41a7ae:	or     BYTE PTR [edi-0x44],cl
  41a7b1:	in     al,0xea
  41a7b3:	sbb    bh,BYTE PTR [edx-0x39]
  41a7b6:	xor    DWORD PTR [eax],ebx
  41a7b8:	enter  0x49a3,0x7c
  41a7bc:	mov    ds:0xd675abbd,al
  41a7c1:	adc    edx,DWORD PTR [eax]
  41a7c3:	jmp    0x2658:0x62b730ed
  41a7ca:	sbb    eax,0xb6cdfd96
  41a7cf:	arpl   WORD PTR [ebp+0x1f],bp
  41a7d2:	cmp    al,0x3d
  41a7d4:	pushf  
  41a7d5:	out    dx,eax
  41a7d6:	add    al,0xfa
  41a7d8:	mov    ebx,0x56dd3057
  41a7dd:	jo     0x41a7c9
  41a7df:	and    ebp,DWORD PTR [edi+0x14]
  41a7e2:	adc    al,al
  41a7e4:	iret   
  41a7e5:	jecxz  0x41a7fc
  41a7e7:	out    0xac,al
  41a7e9:	loop   0x41a85b
  41a7eb:	hlt    
  41a7ec:	data16 jns 0x41a836
  41a7ef:	push   ebx
  41a7f0:	mov    ah,0xb
  41a7f2:	cmp    DWORD PTR [ebp+0x3bd3780f],esp
  41a7f8:	adc    BYTE PTR [edx-0x8],al
  41a7fb:	push   cs
  41a7fc:	imul   BYTE PTR ds:0x47cfbd3
  41a802:	jns    0x41a85d
  41a804:	add    edx,DWORD PTR [esi+0x70]
  41a807:	xchg   edx,eax
  41a808:	pusha  
  41a809:	push   edi
  41a80a:	lahf   
  41a80b:	jns    0x41a804
  41a80d:	mov    es,WORD PTR [esi]
  41a80f:	stos   DWORD PTR es:[edi],eax
  41a810:	xchg   DWORD PTR [esi-0x77],edx
  41a813:	jmp    0x41a802
  41a815:	repz enter 0xe67a,0x58
  41a81a:	dec    edx
  41a81b:	push   ds
  41a81c:	sbb    al,0x38
  41a81e:	and    eax,DWORD PTR [esi]
  41a820:	xchg   ecx,eax
  41a821:	fwait
  41a822:	sbb    eax,0x940a318e
  41a827:	sbb    BYTE PTR [edi+edx*8-0x59],bl
  41a82b:	jg     0x41a801
  41a82d:	(bad)  
  41a82e:	sbb    BYTE PTR [ecx-0x7b36dde9],bl
  41a834:	xor    edi,DWORD PTR [esi-0x6e]
  41a837:	push   edx
  41a838:	dec    edx
  41a839:	les    ebp,FWORD PTR [ecx-0x4c]
  41a83c:	cmp    esi,esp
  41a83e:	imul   eax,DWORD PTR [ecx+0x1fe00807],0x8af940a4
  41a848:	jecxz  0x41a7fb
  41a84a:	cmp    BYTE PTR [edx],0x87
  41a84d:	rcr    DWORD PTR [esi+0x6],cl
  41a850:	jne    0x41a816
  41a852:	rcr    DWORD PTR [ebx],cl
  41a854:	pop    ebx
  41a855:	repz lahf 
  41a857:	(bad)  
  41a858:	sysenter 
  41a85a:	(bad)  
  41a85c:	sar    BYTE PTR [ecx],1
  41a85e:	inc    eax
  41a85f:	(bad)  
  41a861:	cmp    al,0xf2
  41a863:	xchg   ebp,eax
  41a864:	jmp    0x1700bb0e
  41a869:	cwde   
  41a86a:	mov    esp,0x27775c01
  41a86f:	xchg   edi,eax
  41a870:	jg     0x41a8f0
  41a872:	lahf   
  41a873:	loopne 0x41a82c
  41a875:	fcmovnu st,st(1)
  41a877:	sbb    edi,DWORD PTR [edx+0x38]
  41a87a:	sbb    BYTE PTR [edx-0x6cd73040],dl
  41a880:	mov    esi,0xf90ec7ab
  41a885:	nop
  41a886:	push   es
  41a887:	push   cs
  41a888:	push   0xbafb2fbb
  41a88d:	loop   0x41a873
  41a88f:	push   ebp
  41a890:	lahf   
  41a891:	push   ebx
  41a892:	jmp    0xe9f52f98
  41a897:	pop    bx
  41a899:	xchg   edi,eax
  41a89a:	arpl   WORD PTR [esi+0x39],si
  41a89d:	or     edi,DWORD PTR [edi-0x1cd806ae]
  41a8a3:	outs   dx,BYTE PTR ds:[esi]
  41a8a4:	sbb    DWORD PTR [ebx+ecx*1-0x4b7aaa78],esp
  41a8ab:	loopne 0x41a8f5
  41a8ad:	jo     0x41a8ef
  41a8af:	or     ah,dl
  41a8b1:	inc    edx
  41a8b2:	dec    ecx
  41a8b3:	add    dl,BYTE PTR [edi+edx*4-0x766781e5]
  41a8ba:	xor    eax,0x624e509a
  41a8bf:	js     0x41a869
  41a8c1:	mov    WORD PTR [eax],ss
  41a8c3:	adc    edi,DWORD PTR ds:0x952f275f
  41a8c9:	pop    edx
  41a8ca:	ja     0x41a911
  41a8cc:	les    edx,FWORD PTR [ebx-0x7a01f98f]
  41a8d2:	test   eax,0x16b725d
  41a8d7:	cmp    cl,BYTE PTR [ecx]
  41a8d9:	mov    BYTE PTR [eax+0xd605668],ch
  41a8df:	dec    esi
  41a8e0:	das    
  41a8e1:	pop    ebx
  41a8e2:	int3   
  41a8e3:	outs   dx,BYTE PTR ds:[si]
  41a8e5:	push   ebx
  41a8e6:	jne    0x41a8ff
  41a8e8:	lahf   
  41a8e9:	das    
  41a8ea:	loop   0x41a8de
  41a8ec:	or     eax,0xe51acd64
  41a8f1:	xchg   ebp,eax
  41a8f2:	xchg   esi,eax
  41a8f3:	or     eax,0x4c5bcd65
  41a8f8:	mov    al,cs:0xd1e30141
  41a8fe:	icebp  
  41a8ff:	inc    esi
  41a900:	dec    edx
  41a901:	dec    ebp
  41a902:	data16 loopne 0x41a8e0
  41a905:	repnz retf 
  41a907:	call   0xdff0def3
  41a90c:	ja     0x41a8f1
  41a90e:	mov    ds:0xf236438d,al
  41a913:	pop    ds
  41a914:	push   esp
  41a915:	mov    cl,0x16
  41a917:	and    al,BYTE PTR [edi]
  41a919:	push   cs
  41a91a:	out    dx,eax
  41a91b:	mov    bh,0xd3
  41a91d:	mov    ds:0xf044a166,eax
  41a922:	inc    esp
  41a923:	scas   al,BYTE PTR es:[edi]
  41a924:	gs scas al,BYTE PTR es:[edi]
  41a926:	add    al,0x79
  41a928:	mov    al,0x65
  41a92a:	shr    al,cl
  41a92c:	fnstenv [ebx]
  41a92e:	mov    DWORD PTR [ebx],edi
  41a930:	(bad)  
  41a932:	mov    al,bh
  41a934:	push   0x45
  41a936:	sbb    eax,0xeb3f76cc
  41a93b:	ficomp DWORD PTR [eax]
  41a93d:	cwde   
  41a93e:	pop    ecx
  41a93f:	aam    0xcf
  41a941:	rcl    DWORD PTR ds:0x34d0bcbe,0x5e
  41a948:	adc    eax,0x5c620637
  41a94d:	test   eax,0x6eea91d3
  41a952:	sahf   
  41a953:	(bad)  
  41a954:	js     0x41a938
  41a956:	mov    ecx,0xfc5fc803
  41a95b:	jbe    0x41a988
  41a95d:	fisttp WORD PTR [eax+0x11c2874a]
  41a963:	xchg   DWORD PTR [edi+0x43f93a77],ebp
  41a969:	sub    bh,dl
  41a96b:	ds push es
  41a96d:	push   0xb0c62b13
  41a972:	mov    BYTE PTR [edx],al
  41a974:	icebp  
  41a975:	add    esi,esi
  41a977:	shl    BYTE PTR [edx+0x76],1
  41a97a:	fisttp DWORD PTR [edx-0x22]
  41a97e:	mov    ebp,0x4e80dce1
  41a983:	daa    
  41a984:	loope  0x41a9cb
  41a986:	push   es
  41a987:	mov    cl,0x34
  41a989:	inc    ebp
  41a98a:	outs   dx,DWORD PTR ds:[esi]
  41a98b:	iret   
  41a98c:	pusha  
  41a98d:	xor    ah,BYTE PTR [esi-0x79d208c4]
  41a993:	shr    DWORD PTR [ecx+edi*1-0x35],cl
  41a997:	add    bh,al
  41a999:	lods   al,BYTE PTR ds:[esi]
  41a99a:	out    dx,al
  41a99b:	(bad)  
  41a99c:	pop    ds
  41a99d:	mov    cl,0xc7
  41a99f:	(bad)  
  41a9a0:	mov    cl,0x77
  41a9a2:	daa    
  41a9a3:	fstp   DWORD PTR ds:0x93bb0e58
  41a9a9:	cld    
  41a9aa:	sub    BYTE PTR [esi+0x67ac0e77],dl
  41a9b0:	(bad)  
  41a9b1:	iret   
  41a9b2:	push   0xffffffe8
  41a9b4:	push   ebx
  41a9b5:	bound  eax,QWORD PTR [eax]
  41a9b7:	and    DWORD PTR [esi-0x1],ecx
  41a9ba:	xchg   ebx,eax
  41a9bb:	in     al,0xf2
  41a9bd:	or     DWORD PTR [edi-0x61a73bce],0x30
  41a9c4:	pop    ds
  41a9c5:	fimul  WORD PTR [ebx]
  41a9c7:	or     eax,0x19490c2b
  41a9cc:	push   ebp
  41a9cd:	xchg   ebx,eax
  41a9ce:	ret    
  41a9cf:	loop   0x41a95a
  41a9d1:	dec    eax
  41a9d2:	ret    
  41a9d3:	pop    eax
  41a9d4:	in     al,dx
  41a9d5:	les    esp,FWORD PTR [ebp+0x5d]
  41a9d8:	pop    si
  41a9da:	arpl   WORD PTR [edx+0x63],bp
  41a9dd:	pop    esi
  41a9de:	mov    ds,WORD PTR [eax+0x4d1a90b9]
  41a9e4:	pop    ss
  41a9e5:	mov    esp,0x6ce27563
  41a9ea:	mov    ecx,0xdf79606c
  41a9ef:	jp     0x41a9a0
  41a9f1:	mov    dl,0x5c
  41a9f3:	and    ecx,DWORD PTR [esi]
  41a9f5:	fwait
  41a9f6:	inc    ebx
  41a9f7:	or     cl,bh
  41a9f9:	add    ebp,ebp
  41a9fb:	sub    al,0xc
  41a9fd:	outs   dx,BYTE PTR ds:[esi]
  41a9fe:	scas   al,BYTE PTR es:[edi]
  41a9ff:	push   ebx
  41aa00:	fistp  DWORD PTR [edx]
  41aa02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa03:	iret   
  41aa04:	in     eax,0x5c
  41aa06:	ins    DWORD PTR es:[edi],dx
  41aa07:	or     ebx,ebp
  41aa09:	mov    ?,WORD PTR [edx-0x13]
  41aa0c:	sbb    BYTE PTR [eax+0x6ed7342e],cl
  41aa12:	int    0x21
  41aa14:	fstp   st(1)
  41aa16:	loopne 0x41aa34
  41aa18:	cdq    
  41aa19:	(bad)
  41aa1c:	add    DWORD PTR [edx+0x724040e3],0x61e85640
  41aa26:	push   eax
  41aa27:	jmp    0x41a9b9
  41aa29:	sti    
  41aa2a:	pop    esp
  41aa2b:	cmp    eax,0xbae5267c
  41aa30:	inc    ebx
  41aa31:	or     eax,0x8f33a24
  41aa36:	cdq    
  41aa37:	pop    ss
  41aa38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa39:	fild   QWORD PTR [ebx]
  41aa3b:	fst    st(2)
  41aa3d:	mov    al,ds:0x1587da17
  41aa42:	cdq    
  41aa43:	fdiv   st(7),st
  41aa45:	(bad)  
  41aa46:	nop
  41aa47:	(bad)  
  41aa48:	adc    al,0xdf
  41aa4a:	xor    DWORD PTR [eax-0x21],eax
  41aa4d:	stos   DWORD PTR es:[edi],eax
  41aa4e:	jmp    0xe413:0x6b4c5f1b
  41aa55:	pop    ebx
  41aa56:	call   0x22806df
  41aa5b:	inc    eax
  41aa5c:	push   cs
  41aa5d:	push   es
  41aa5e:	cwde   
  41aa5f:	mov    cl,0xc9
  41aa61:	cmc    
  41aa62:	cdq    
  41aa63:	sub    eax,0x4e28051e
  41aa68:	lods   eax,DWORD PTR ds:[esi]
  41aa69:	hlt    
  41aa6a:	sbb    ecx,DWORD PTR [ecx-0x60f178b3]
  41aa70:	pop    ebp
  41aa71:	xchg   ebx,eax
  41aa72:	xor    al,BYTE PTR [esi-0x5]
  41aa75:	inc    eax
  41aa76:	in     eax,dx
  41aa77:	jle    0x41aaa1
  41aa79:	cmp    BYTE PTR [esi],al
  41aa7b:	call   0xe83d5cb8
  41aa80:	iret   
  41aa81:	sub    DWORD PTR [eax],edx
  41aa83:	imul   eax,DWORD PTR gs:[ebx-0x3eb3da8c],0x1129b55c
  41aa8e:	mov    BYTE PTR [ebp-0x11],al
  41aa91:	and    eax,0xe2bf787
  41aa96:	test   BYTE PTR [edx-0x63],cl
  41aa99:	mov    ecx,0xd1ed2ef0
  41aa9e:	add    edi,DWORD PTR [edx]
  41aaa0:	mov    ebp,0xaa6beb87
  41aaa5:	and    ebx,DWORD PTR ds:0x3328a299
  41aaab:	in     eax,dx
  41aaac:	out    0xfc,eax
  41aaae:	div    DWORD PTR [edi+ebx*2+0x57]
  41aab2:	xor    DWORD PTR [edi],ebx
  41aab4:	sar    BYTE PTR [ecx-0x20],0x64
  41aab8:	rol    DWORD PTR [ecx+0xb18a105],0xb3
  41aabf:	push   0xbd94dd5f
  41aac4:	dec    esp
  41aac5:	daa    
  41aac6:	push   ecx
  41aac7:	pop    ebp
  41aac8:	bound  esp,QWORD PTR [edx-0x3a]
  41aacb:	daa    
  41aacc:	push   ds
  41aacd:	cli    
  41aace:	int3   
  41aacf:	fs push esp
  41aad1:	jle    0x41aaf6
  41aad3:	or     BYTE PTR fs:[ecx-0x11],bh
  41aad7:	and    eax,0xa6b4955a
  41aadc:	outs   dx,DWORD PTR ds:[esi]
  41aadd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aade:	sbb    DWORD PTR [edi-0x4a49633b],edi
  41aae4:	dec    ecx
  41aae5:	push   ebx
  41aae6:	ret    
  41aae7:	push   es
  41aae8:	mul    DWORD PTR [edx+ebx*2-0x24]
  41aaec:	sub    BYTE PTR [esi+eiz*4-0x52ebdabe],0x3d
  41aaf4:	ja     0x41ab07
  41aaf6:	mov    BYTE PTR [esp+esi*4+0x9f8ea68],dh
  41aafd:	jbe    0x41aa94
  41aaff:	cmp    edi,DWORD PTR [esi-0x6c3ec3cb]
  41ab05:	mov    eax,edi
  41ab07:	shl    al,cl
  41ab09:	idiv   BYTE PTR [ebp-0x2c]
  41ab0c:	sbb    DWORD PTR [edx+0x82a2a03],eax
  41ab12:	cmp    ah,BYTE PTR [ebp+0x1c]
  41ab15:	add    BYTE PTR [eax+0x5e],ch
  41ab18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab19:	mov    eax,ds:0x1a66d6ba
  41ab1e:	pop    ss
  41ab1f:	xchg   edi,eax
  41ab20:	mov    ds:0x1ec6a3b1,al
  41ab25:	mov    bl,0x2d
  41ab27:	cmp    dl,dl
  41ab29:	mov    ch,0xfb
  41ab2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab2c:	jl     0x41aadf
  41ab2e:	adc    eax,0x95196ec8
  41ab33:	inc    edi
  41ab34:	pop    esi
  41ab35:	sar    eax,1
  41ab37:	add    BYTE PTR [edx+0x1ccdf806],bl
  41ab3d:	aam    0x61
  41ab3f:	inc    eax
  41ab40:	rcr    BYTE PTR [ebx+0x65],cl
  41ab43:	enter  0x3a44,0x47
  41ab47:	or     al,0x1f
  41ab49:	out    0xb4,eax
  41ab4b:	adc    BYTE PTR [ebx+0x30],al
  41ab4e:	ins    BYTE PTR es:[edi],dx
  41ab4f:	outs   dx,BYTE PTR ds:[esi]
  41ab50:	mov    al,BYTE PTR [ecx+0x7b]
  41ab53:	mov    al,0x38
  41ab55:	and    BYTE PTR ds:0x89f7c38f,bh
  41ab5b:	pop    eax
  41ab5c:	mov    esp,eax
  41ab5e:	pop    edi
  41ab5f:	sbb    esi,edi
  41ab61:	mov    esp,0x86546a46
  41ab66:	int    0xd3
  41ab68:	push   0x74755348
  41ab6d:	jle    0x41ab79
  41ab6f:	cmp    esp,esp
  41ab71:	jg     0x41ab44
  41ab73:	xchg   ebp,eax
  41ab74:	pop    es
  41ab75:	mov    cl,0xd0
  41ab77:	sub    edx,ecx
  41ab79:	xor    DWORD PTR [ebx],esi
  41ab7b:	stos   BYTE PTR es:[edi],al
  41ab7c:	xor    cl,ch
  41ab7e:	fild   WORD PTR [eax]
  41ab80:	outs   dx,DWORD PTR ds:[esi]
  41ab81:	sti    
  41ab82:	daa    
  41ab83:	xlat   BYTE PTR ds:[ebx]
  41ab84:	dec    ecx
  41ab85:	sbb    ah,BYTE PTR [eax+0x5607b536]
  41ab8b:	pop    ebp
  41ab8c:	hlt    
  41ab8d:	in     al,0x93
  41ab8f:	sbb    eax,0xa8cfa2d5
  41ab94:	mov    bh,0xa0
  41ab96:	repnz scas eax,DWORD PTR es:[edi]
  41ab98:	mov    dh,0x86
  41ab9a:	add    ecx,ebx
  41ab9c:	shl    DWORD PTR [eax+0x55],0x2f
  41aba0:	jle    0x41abb2
  41aba2:	js     0x41abbe
  41aba4:	pop    ds
  41aba5:	shr    DWORD PTR [esi+0x73],1
  41aba8:	cmp    dl,BYTE PTR [ebx]
  41abaa:	adc    eax,0x36df3ded
  41abaf:	mov    WORD PTR [edi+esi*2+0x6eab014],ss
  41abb6:	mov    eax,ds:0x761c472d
  41abbb:	dec    edx
  41abbc:	aad    0x65
  41abbe:	mov    ds:0x5331734b,al
  41abc3:	jp     0x41ab49
  41abc5:	int3   
  41abc6:	scas   eax,DWORD PTR es:[edi]
  41abc7:	jns    0x41ac1f
  41abc9:	and    ecx,ebx
  41abcb:	fisubr WORD PTR [esi-0x159f5815]
  41abd1:	mov    ebx,0xfeba27f0
  41abd6:	sbb    eax,0x9da672bc
  41abdb:	xor    esp,esp
  41abdd:	sub    DWORD PTR [edx-0x66e2a8cd],edi
  41abe3:	push   ds
  41abe4:	test   DWORD PTR [ebx],esp
  41abe6:	dec    edi
  41abe7:	rcl    cl,cl
  41abe9:	sub    al,0xcb
  41abeb:	test   eax,0x7d6632b9
  41abf0:	pop    ecx
  41abf1:	out    dx,eax
  41abf2:	or     al,0xfb
  41abf4:	sbb    ch,0xbb
  41abf7:	idiv   BYTE PTR [esi+esi*2]
  41abfa:	add    eax,0x4543d315
  41abff:	rol    BYTE PTR [edi],1
  41ac01:	add    edi,DWORD PTR [eax+0x38]
  41ac04:	hlt    
  41ac05:	inc    edx
  41ac06:	or     al,BYTE PTR [ecx+0x66ab732c]
  41ac0c:	pop    ecx
  41ac0d:	push   ss
  41ac0e:	fsub   st,st(3)
  41ac10:	in     eax,0xf4
  41ac12:	jle    0x41abfa
  41ac14:	int3   
  41ac15:	mov    WORD PTR [edi+0x253fedc7],cs
  41ac1b:	repnz mov edi,0x89dd2e64
  41ac21:	scas   eax,DWORD PTR es:[edi]
  41ac22:	imul   esp,DWORD PTR [ebx+0x2cbd6857],0x6076f88a
  41ac2c:	outs   dx,BYTE PTR ds:[esi]
  41ac2d:	adc    eax,0xc551f6d2
  41ac32:	retf   0x69a2
  41ac35:	or     DWORD PTR [eax],esp
  41ac37:	inc    edi
  41ac38:	clc    
  41ac39:	mov    bh,0xda
  41ac3b:	int3   
  41ac3c:	jbe    0x41ac0a
  41ac3e:	pusha  
  41ac3f:	hlt    
  41ac40:	leave  
  41ac41:	(bad)  
  41ac42:	out    0xf4,eax
  41ac44:	les    eax,FWORD PTR [ecx]
  41ac46:	jmp    0x83a7:0x24ab1602
  41ac4d:	xor    BYTE PTR [eax],bh
  41ac4f:	out    0xd7,eax
  41ac51:	pop    esi
  41ac52:	ins    DWORD PTR es:[edi],dx
  41ac53:	jmp    0x62e8e386
  41ac58:	ret    0xd985
  41ac5b:	cli    
  41ac5c:	mov    ebx,0x645d1608
  41ac61:	rcr    cl,1
  41ac63:	aaa    
  41ac64:	mov    cl,0xa5
  41ac66:	ret    
  41ac67:	add    eax,0xf22769f1
  41ac6c:	(bad)  
  41ac6d:	jecxz  0x41acae
  41ac6f:	push   edi
  41ac70:	jmp    0x41acec
  41ac72:	xchg   edi,eax
  41ac73:	mov    esi,0xbafd5a09
  41ac78:	sahf   
  41ac79:	in     al,0x9c
  41ac7b:	(bad)  
  41ac7d:	xor    DWORD PTR [eax-0x2c],edi
  41ac80:	lock pop edi
  41ac82:	sbb    ax,0xe73b
  41ac86:	gs inc esp
  41ac88:	jae    0x41ad05
  41ac8a:	mov    edi,0xfe5bfa23
  41ac8f:	jb     0x41acd0
  41ac91:	jecxz  0x41ace9
  41ac93:	or     eax,0xbfa88a65
  41ac98:	imul   ebx,DWORD PTR [edi-0x234f4b8d],0x39
  41ac9f:	pop    esi
  41aca0:	cmp    al,0x5f
  41aca2:	adc    al,0x12
  41aca4:	jne    0x41ac9b
  41aca6:	lds    ecx,FWORD PTR [esi-0xc5dbfa9]
  41acac:	mov    edx,0x609ce738
  41acb1:	sub    esp,0xc3fc1ec
  41acb7:	imul   edx,DWORD PTR [eax],0x3fd8dbe4
  41acbd:	mov    al,0x7e
  41acbf:	inc    ebx
  41acc0:	push   ds
  41acc1:	or     DWORD PTR [edx-0x4c],esp
  41acc4:	jl     0x41ad16
  41acc6:	je     0x41ad0c
  41acc8:	ja     0x41ac75
  41acca:	outs   dx,DWORD PTR ds:[esi]
  41accb:	dec    ebp
  41accc:	mov    esp,0xadb0c652
  41acd1:	adc    eax,0xff918940
  41acd6:	neg    DWORD PTR [esi-0x519c6e84]
  41acdc:	xor    bl,bh
  41acde:	add    DWORD PTR [edi+ebx*4+0x31],edx
  41ace2:	(bad)  
  41ace3:	retf   
  41ace4:	mov    WORD PTR ss:[edi-0x62],?
  41ace8:	sti    
  41ace9:	inc    eax
  41acea:	pop    esp
  41aceb:	(bad)  [ebx+0x6e]
  41acee:	lock add eax,0xbfad2f8e
  41acf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf5:	sub    ebx,DWORD PTR [ecx+0x57]
  41acf8:	ret    0x545f
  41acfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acfc:	sub    edi,DWORD PTR [edx-0x4bd7c81a]
  41ad02:	ret    0xf470
  41ad05:	xor    al,BYTE PTR [edx-0x2c243d67]
  41ad0b:	sti    
  41ad0c:	add    BYTE PTR [edi-0x1b],bh
  41ad0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad10:	cmp    al,0x42
  41ad12:	leave  
  41ad13:	sub    al,0x2a
  41ad15:	inc    esi
  41ad16:	push   edi
  41ad17:	mov    esi,0x84c4f2e1
  41ad1c:	xor    eax,0xac7244b
  41ad21:	enter  0x1a84,0x62
  41ad25:	frndint 
  41ad27:	test   al,0xfc
  41ad29:	gs popf 
  41ad2b:	test   eax,0xa92cf537
  41ad30:	push   esp
  41ad31:	dec    eax
  41ad32:	jo     0x41ad14
  41ad34:	or     dl,dh
  41ad36:	xchg   ebp,eax
  41ad37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad38:	ins    DWORD PTR es:[edi],dx
  41ad39:	ja     0x41adb4
  41ad3b:	pop    ebx
  41ad3c:	add    BYTE PTR [ebp-0x77],cl
  41ad3f:	mov    eax,ds:0x255279c2
  41ad44:	jnp    0x41ad9f
  41ad46:	jge    0x41acf4
  41ad48:	dec    edi
  41ad49:	adc    BYTE PTR [ebp+0x4ae1b179],bl
  41ad4f:	mov    esp,0xd33ac146
  41ad54:	add    eax,0x8fa4f859
  41ad59:	outs   dx,BYTE PTR ds:[esi]
  41ad5a:	enter  0xea4b,0xea
  41ad5e:	jmp    0x41ad9a
  41ad60:	fnsave [edx+0x36]
  41ad63:	cmp    BYTE PTR [ecx+eiz*2+0x5d],ch
  41ad67:	sbb    al,0x3a
  41ad69:	jo     0x41ad67
  41ad6b:	stc    
  41ad6c:	mov    ecx,0x82856c30
  41ad71:	loope  0x41ad29
  41ad73:	push   es
  41ad74:	test   BYTE PTR ds:0xc3831a8d,0xf0
  41ad7b:	jge    0x41ad93
  41ad7d:	cld    
  41ad7e:	fisttp QWORD PTR [edi]
  41ad80:	adc    eax,0x932177b1
  41ad85:	jmp    0x8b9eeb76
  41ad8a:	aam    0x30
  41ad8c:	push   esi
  41ad8d:	or     eax,0x26b4f772
  41ad92:	test   al,0x5b
  41ad94:	mov    ds:0xa37126b8,al
  41ad99:	dec    eax
  41ad9a:	les    ebp,FWORD PTR [edi+0x16]
  41ad9d:	jecxz  0x41ad24
  41ad9f:	xor    ebp,DWORD PTR [edx+0x5aa29dda]
  41ada5:	stos   BYTE PTR es:[edi],al
  41ada6:	cs sbb eax,0xa9ecfacc
  41adac:	or     DWORD PTR [eax-0x12f2a3f8],esi
  41adb2:	jmp    0x7e0bf043
  41adb7:	add    BYTE PTR [esi],ah
  41adb9:	sub    al,0xa4
  41adbb:	nop
  41adbc:	inc    ebx
  41adbd:	jg     0x41ae15
  41adbf:	(bad)  
  41adc0:	jb     0x41aded
  41adc2:	mov    ds:0x2f1505c6,eax
  41adc7:	mov    ebx,0xba2e2f6e
  41adcc:	dec    ecx
  41adcd:	pusha  
  41adce:	ins    BYTE PTR es:[edi],dx
  41adcf:	loopne 0x41ada8
  41add1:	xor    DWORD PTR [ebp-0x2c],edi
  41add4:	int    0x2d
  41add6:	xor    al,0x6
  41add8:	pushf  
  41add9:	mov    BYTE PTR [ecx-0x110d3f21],al
  41addf:	adc    bh,BYTE PTR [ecx+0x5a]
  41ade2:	sbb    al,0xbf
  41ade4:	pop    edx
  41ade5:	test   eax,0x7d472de6
  41adea:	jb     0x41ada3
  41adec:	cdq    
  41aded:	pushf  
  41adee:	mov    ecx,0x8b4a9d14
  41adf3:	cld    
  41adf4:	ss inc eax
  41adf6:	and    bh,BYTE PTR [eax+0x9]
  41adf9:	popa   
  41adfa:	dec    ecx
  41adfb:	sbb    eax,0xe9aa4e77
  41ae00:	(bad)  
  41ae01:	aad    0xc8
  41ae03:	pop    edx
  41ae04:	ja     0xd2cd32f9
  41ae0a:	je     0x41ae1a
  41ae0c:	pop    ecx
  41ae0d:	icebp  
  41ae0e:	mov    esi,0x3aae6b25
  41ae13:	sub    BYTE PTR [edx+0x65f766d1],bl
  41ae19:	call   0x66c487c2
  41ae1e:	div    edi
  41ae20:	xor    eax,0x52ac5218
  41ae25:	xchg   edi,eax
  41ae26:	or     al,BYTE PTR [ecx-0x41]
  41ae29:	dec    esi
  41ae2a:	push   ebp
  41ae2b:	adc    dh,BYTE PTR [edx]
  41ae2d:	dec    eax
  41ae2e:	dec    edi
  41ae2f:	shl    cl,0x9c
  41ae32:	ja     0x41ae21
  41ae34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae35:	cmp    eax,0xb76d4bf3
  41ae3a:	mov    ecx,edi
  41ae3c:	inc    eax
  41ae3d:	add    al,0x29
  41ae3f:	xchg   DWORD PTR [eax+0x5a],edi
  41ae42:	pop    edi
  41ae43:	or     eax,0x4f43c32e
  41ae48:	add    DWORD PTR ds:0x47dbf8e2,edi
  41ae4e:	and    BYTE PTR [ebx],ch
  41ae50:	mov    al,0x1b
  41ae52:	loope  0x41aea3
  41ae54:	iret   
  41ae55:	fstp   DWORD PTR [edi+0x1fc30884]
  41ae5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae5c:	pop    ds
  41ae5d:	sbb    eax,0xf4d3ae0d
  41ae62:	cmovs  ebp,eax
  41ae65:	inc    ebx
  41ae66:	sar    BYTE PTR [edx+ecx*4+0x42],1
  41ae6a:	dec    ecx
  41ae6b:	sub    dl,ch
  41ae6d:	xchg   cl,ch
  41ae6f:	das    
  41ae70:	push   esp
  41ae71:	test   ebp,esi
  41ae73:	xchg   DWORD PTR [edi+0x61c5177f],esp
  41ae79:	cmp    dl,BYTE PTR [ebp+0x5a]
  41ae7c:	and    DWORD PTR [esi],esi
  41ae7e:	(bad)  
  41ae80:	cli    
  41ae81:	call   DWORD PTR [edx+0x3e131f26]
  41ae87:	out    0x8e,al
  41ae89:	sti    
  41ae8a:	fcomp  DWORD PTR [edx+0x69]
  41ae8d:	and    esp,DWORD PTR [ecx]
  41ae8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae90:	fisttp DWORD PTR [ebx+eax*4]
  41ae93:	dec    esp
  41ae94:	sar    dh,cl
  41ae96:	inc    ebp
  41ae97:	stc    
  41ae98:	lea    ebx,[ecx-0x355a23da]
  41ae9e:	jge    0x41af00
  41aea0:	imul   esi,DWORD PTR [edx],0x5d19547f
  41aea6:	div    dl
  41aea8:	outs   dx,DWORD PTR ds:[esi]
  41aea9:	popf   
  41aeaa:	mov    al,ds:0xe067693c
  41aeaf:	repz adc DWORD PTR [edx+0x30],esp
  41aeb3:	cmp    ebx,DWORD PTR [ebp-0x31c5628e]
  41aeb9:	repnz mov ds:0x3075a242,eax
  41aebf:	(bad)  
  41aec0:	into   
  41aec1:	pop    edi
  41aec2:	dec    BYTE PTR [esi]
  41aec4:	adc    al,0x44
  41aec6:	pop    ebx
  41aec7:	adc    DWORD PTR [ecx+0x795ec704],esi
  41aecd:	push   esi
  41aece:	(bad)  
  41aecf:	lods   eax,DWORD PTR ds:[esi]
  41aed0:	push   edx
  41aed1:	fsubr  QWORD PTR [ecx+eiz*8-0x5a]
  41aed5:	or     DWORD PTR [ebx+0x59],0x20
  41aed9:	adc    DWORD PTR [ecx+0x709a2911],esi
  41aedf:	(bad)  
  41aee0:	sbb    DWORD PTR [ebx-0x4a],ebp
  41aee3:	jno    0x41af26
  41aee5:	aaa    
  41aee6:	je     0x41af51
  41aee8:	lahf   
  41aee9:	adc    ch,BYTE PTR ds:0x99fd77b9
  41aeef:	fild   QWORD PTR [ebp+0x51]
  41aef2:	inc    edx
  41aef3:	inc    eax
  41aef4:	pop    ecx
  41aef5:	or     esi,DWORD PTR [ecx-0x79]
  41aef8:	lahf   
  41aef9:	mov    ebx,0x333fd82d
  41aefe:	test   DWORD PTR ss:[edi+0x26],ebx
  41af02:	pop    esi
  41af03:	pop    ebp
  41af04:	ja     0x41aea1
  41af06:	jmp    0x200ffe75
  41af0b:	leave  
  41af0c:	mov    ch,0xae
  41af0e:	stos   DWORD PTR es:[edi],eax
  41af0f:	pusha  
  41af10:	retf   0x788e
  41af13:	icebp  
  41af14:	fistp  WORD PTR [esi]
  41af16:	clc    
  41af17:	stos   DWORD PTR es:[edi],eax
  41af18:	outs   dx,DWORD PTR ds:[esi]
  41af19:	(bad)  
  41af1a:	clc    
  41af1b:	out    0xb8,eax
  41af1d:	inc    ebx
  41af1e:	dec    edx
  41af1f:	inc    esp
  41af20:	out    0x94,eax
  41af22:	stos   BYTE PTR es:[edi],al
  41af23:	push   ecx
  41af24:	jmp    0xe6470400
  41af29:	dec    edx
  41af2a:	mov    WORD PTR [esi+0x43],ds
  41af2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af2e:	push   ebx
  41af2f:	cld    
  41af30:	add    ebx,ebp
  41af32:	xchg   edx,eax
  41af33:	and    ah,BYTE PTR [ecx-0x46188eff]
  41af39:	sbb    DWORD PTR ds:[ebx],esp
  41af3c:	mov    esi,0x73a0dfe
  41af41:	mov    ebx,0x4a34fd79
  41af46:	sbb    DWORD PTR [eax+eiz*1],ecx
  41af49:	stos   BYTE PTR es:[edi],al
  41af4a:	repnz sar DWORD PTR [ebp+ebx*8-0x5b0794b0],1
  41af52:	cwde   
  41af53:	pop    ebp
  41af54:	prefetch BYTE PTR [ebx-0x6f]
  41af58:	cli    
  41af59:	sbb    eax,edi
  41af5b:	jbe    0x41af6d
  41af5d:	add    bh,BYTE PTR [edx]
  41af5f:	jo     0x41af7b
  41af61:	cmp    eax,edx
  41af63:	scas   al,BYTE PTR es:[edi]
  41af64:	sbb    eax,0x6300d4e2
  41af69:	push   esi
  41af6a:	stc    
  41af6b:	mov    BYTE PTR [edi-0x69],ah
  41af6e:	cmp    DWORD PTR [edi+0x7a70fe91],ebx
  41af74:	xor    al,0x63
  41af76:	push   eax
  41af77:	fucom  st(7)
  41af79:	or     ah,BYTE PTR [esi-0x3889d123]
  41af7f:	adc    al,0xe7
  41af81:	mov    ah,0x74
  41af83:	add    al,0xa9
  41af85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af86:	rcl    dl,0x93
  41af89:	imul   ecx,esi,0xe78799e2
  41af8f:	aas    
  41af90:	inc    esp
  41af91:	push   es
  41af92:	retf   
  41af93:	cdq    
  41af94:	or     eax,0xafcaeaf1
  41af99:	pop    eax
  41af9a:	jne    0x41af40
  41af9c:	mov    ebx,DWORD PTR [eax+0x6ae245b9]
  41afa2:	std    
  41afa3:	xchg   ebp,eax
  41afa4:	in     al,dx
  41afa5:	mov    al,0x38
  41afa7:	sbb    esi,DWORD PTR [ebx]
  41afa9:	rcr    BYTE PTR [eax],cl
  41afab:	retf   
  41afac:	pop    edx
  41afad:	adc    ah,BYTE PTR [esi]
  41afaf:	mov    esp,0x94f9cd85
  41afb4:	cmc    
  41afb5:	mov    edx,0xf9c02f97
  41afba:	xor    eax,DWORD PTR [ecx]
  41afbc:	mov    ds:0x9614b81a,eax
  41afc1:	mov    cl,0x53
  41afc3:	inc    ebp
  41afc4:	test   al,0x37
  41afc6:	xrelease mov DWORD PTR [edx-0x13],esi
  41afca:	in     eax,0xa5
  41afcc:	mov    ds:0xc9841a67,eax
  41afd1:	pop    eax
  41afd2:	std    
  41afd3:	test   eax,0xfa222688
  41afd8:	push   edx
  41afd9:	add    BYTE PTR [eax+0xc333663],ch
  41afdf:	(bad)  
  41afe0:	in     eax,0xd3
  41afe2:	xlat   BYTE PTR ds:[ebx]
  41afe3:	adc    DWORD PTR [eax],esi
  41afe5:	fs mov edi,0x6620076d
  41afeb:	pop    esp
  41afec:	ss adc eax,0xea493fa2
  41aff2:	aam    0x65
  41aff4:	int    0xc8
  41aff6:	pop    ebx
  41aff7:	xchg   edi,ebp
  41aff9:	es test edi,edx
  41affc:	lods   al,BYTE PTR ds:[esi]
  41affd:	in     eax,0xbf
  41afff:	mov    dl,0xcf
  41b001:	iret   
  41b002:	mov    ds:0xa584e5e2,al
  41b007:	repnz push esp
  41b009:	xchg   edi,eax
  41b00a:	adc    BYTE PTR [ebx-0x58238524],ch
  41b010:	aas    
  41b011:	(bad)  
  41b012:	loop   0x41b03c
  41b014:	xor    eax,0xe521a0f8
  41b019:	and    eax,0xcf52f0ed
  41b01e:	(bad)  
  41b01f:	jmp    0x3c13:0xca4dd
  41b026:	push   ecx
  41b027:	add    edi,edx
  41b029:	mov    ch,0xff
  41b02b:	jle    0x41b030
  41b02d:	inc    esi
  41b02e:	int3   
  41b02f:	dec    esp
  41b030:	xchg   edx,eax
  41b031:	jl     0x41b010
  41b033:	call   0x3a5f:0xbe174ee5
  41b03a:	or     dl,BYTE PTR [eax]
  41b03c:	inc    ecx
  41b03d:	mov    ?,WORD PTR [edx+0x67]
  41b040:	fs mov edx,0x9adf6fe0
  41b046:	sbb    eax,0x9572d7c0
  41b04b:	inc    ecx
  41b04c:	stos   DWORD PTR es:[edi],eax
  41b04d:	ret    
  41b04e:	pop    eax
  41b04f:	push   es
  41b050:	icebp  
  41b051:	mov    fs,WORD PTR [esi-0x28462e71]
  41b057:	pop    es
  41b058:	push   ebp
  41b059:	imul   eax,DWORD PTR [ecx+0x33],0x7e
  41b05d:	jle    0x41b09e
  41b05f:	jl     0x41b0ba
  41b061:	(bad)  
  41b062:	dec    edi
  41b063:	and    al,0xd3
  41b065:	sbb    DWORD PTR [eax],eax
  41b067:	pusha  
  41b068:	ds aam 0xa3
  41b06b:	or     DWORD PTR [ecx-0x1a],ebx
  41b06e:	loope  0x41b09c
  41b070:	cli    
  41b071:	xchg   DWORD PTR [ebx+0x45],esp
  41b074:	int    0x36
  41b076:	arpl   WORD PTR ds:0x1cb451da,di
  41b07c:	adc    al,0xd1
  41b07e:	xchg   bh,cl
  41b080:	jecxz  0x41b059
  41b082:	aaa    
  41b083:	jle    0x41b015
  41b085:	sbb    cl,dl
  41b087:	inc    edi
  41b088:	jp     0x41b090
  41b08a:	fisubr DWORD PTR [ecx-0x3390729a]
  41b090:	lds    esi,FWORD PTR [edi-0x308dba6f]
  41b096:	nop
  41b097:	add    bh,bl
  41b099:	ficomp DWORD PTR [edi]
  41b09b:	adc    al,0x58
  41b09d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09e:	and    BYTE PTR [ebx-0x1f],0x89
  41b0a2:	sbb    BYTE PTR [ecx],al
  41b0a4:	mov    edi,0x227c4e2c
  41b0a9:	jo     0x41b039
  41b0ab:	adc    eax,0x506e31a8
  41b0b0:	or     al,0xfd
  41b0b2:	aam    0x1
  41b0b4:	daa    
  41b0b5:	and    ecx,ebp
  41b0b7:	das    
  41b0b8:	adc    dh,BYTE PTR [edx+edi*8-0x43]
  41b0bc:	xchg   ebp,eax
  41b0bd:	dec    ebx
  41b0be:	enter  0x1231,0xc7
  41b0c2:	add    al,0x39
  41b0c4:	icebp  
  41b0c5:	push   cs
  41b0c6:	repz (bad) 
  41b0c8:	fisub  WORD PTR [edi+0x3e]
  41b0cb:	jl     0x41b0f4
  41b0cd:	mov    ds:0xc036d297,eax
  41b0d2:	int    0xc7
  41b0d4:	or     al,0xdf
  41b0d6:	push   0x86dcd37b
  41b0db:	js     0x41b05d
  41b0dd:	xor    esi,eax
  41b0df:	leave  
  41b0e0:	jmp    0x41b149
  41b0e2:	xor    eax,0xfec0de51
  41b0e7:	les    esi,FWORD PTR [esi]
  41b0e9:	jmp    0xa1fe68f9
  41b0ee:	mov    esi,0xf986936b
  41b0f3:	call   0xd8ee7242
  41b0f8:	xchg   DWORD PTR [edx+0x51f861e6],edi
  41b0fe:	xchg   ebp,eax
  41b0ff:	push   cs
  41b100:	xor    al,0xd4
  41b102:	fwait
  41b103:	add    esi,edi
  41b105:	es sti 
  41b107:	dec    ch
  41b109:	mov    ah,0x21
  41b10b:	sub    eax,0xb71ca831
  41b110:	pusha  
  41b111:	ds ja  0x41b0cd
  41b114:	fsubr  DWORD PTR [ecx]
  41b116:	clc    
  41b117:	outs   dx,BYTE PTR ds:[esi]
  41b118:	adc    BYTE PTR [edx+0xf],dh
  41b11b:	jb     0x41b171
  41b11d:	bound  esp,QWORD PTR [edx-0x38203b7b]
  41b123:	test   al,0x6b
  41b125:	sub    eax,0xf356aff9
  41b12a:	mov    edi,0x2b17a003
  41b12f:	fs ds mov dl,0x38
  41b133:	add    eax,0xca6e4968
  41b138:	push   ebp
  41b139:	and    al,0x8
  41b13b:	in     eax,dx
  41b13c:	repz mov ebp,0x236d2893
  41b142:	popa   
  41b143:	push   edi
  41b144:	mov    edi,0xb058a2dd
  41b149:	imul   ecx,DWORD PTR [ecx],0x8066de8d
  41b14f:	xchg   BYTE PTR [eax-0x1f],cl
  41b152:	jmp    0x4fc63df3
  41b157:	fcom   QWORD PTR [ebx]
  41b159:	in     al,0xf1
  41b15b:	pop    eax
  41b15c:	gs js  0x41b0e9
  41b15f:	mov    ecx,0x6e1f895
  41b164:	fcmovu st,st(2)
  41b166:	out    0x53,al
  41b168:	(bad)  
  41b169:	sub    eax,0x33f6ea65
  41b16e:	or     cl,BYTE PTR [eax-0x80]
  41b171:	cmp    al,0xf1
  41b173:	sbb    ebx,DWORD PTR [eax+0x2f]
  41b176:	ins    BYTE PTR es:[edi],dx
  41b177:	push   edi
  41b178:	mov    al,0x11
  41b17a:	adc    eax,0xf7ab860
  41b17f:	mov    ebx,fs
  41b181:	mov    ebp,0x3b38533b
  41b186:	addr16 je 0x41b178
  41b189:	leave  
  41b18a:	sbb    ebp,DWORD PTR [edx-0x1b]
  41b18d:	jl     0x41b142
  41b18f:	and    ebp,DWORD PTR [esi]
  41b191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b192:	(bad)  
  41b194:	push   ds
  41b195:	cwde   
  41b196:	xor    eax,0x5650ad43
  41b19b:	inc    ecx
  41b19c:	add    al,0x9
  41b19e:	mov    ebx,0xaad65c17
  41b1a3:	xor    al,0xe9
  41b1a5:	xor    al,0xbd
  41b1a7:	retf   0x1f28
  41b1aa:	test   DWORD PTR [esi],eax
  41b1ac:	and    eax,0xd19494f9
  41b1b1:	into   
  41b1b2:	dec    ebp
  41b1b3:	pop    es
  41b1b4:	imul   edx,DWORD PTR [esi+edx*8-0x11f6c9a7],0x2
  41b1bc:	inc    edx
  41b1bd:	pop    ss
  41b1be:	mov    ah,0x9d
  41b1c0:	sbb    DWORD PTR [ebp+0x13],0x71271acf
  41b1c7:	mov    ds:0xe03665a8,al
  41b1cc:	test   eax,0x3a9c55ba
  41b1d1:	xchg   edi,eax
  41b1d2:	in     al,0x84
  41b1d4:	jg     0x41b192
  41b1d6:	out    0x63,eax
  41b1d8:	jle    0x41b1a7
  41b1da:	arpl   WORD PTR [eax-0x182a027a],bp
  41b1e0:	sti    
  41b1e1:	push   ebx
  41b1e2:	stos   DWORD PTR es:[edi],eax
  41b1e3:	test   al,0x33
  41b1e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1e6:	lock sub dh,BYTE PTR [esi*4+0x12ae6665]
  41b1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1ef:	add    ch,bl
  41b1f1:	jo     0x41b1a7
  41b1f3:	call   0xaffaecb3
  41b1f8:	(bad)  
  41b1f9:	stc    
  41b1fa:	cmp    ecx,DWORD PTR [edx-0x17402c5e]
  41b200:	aas    
  41b201:	(bad)  
  41b203:	sub    al,0x6e
  41b205:	ja     0x41b193
  41b207:	sbb    ch,BYTE PTR [eax-0x9]
  41b20a:	call   0xec09f3a7
  41b20f:	xor    al,0xd3
  41b211:	pop    ecx
  41b212:	jmp    0xa801:0xf2df6003
  41b219:	mov    ebx,0x90be2779
  41b21e:	pop    ds
  41b21f:	pop    edi
  41b220:	adc    ebx,edi
  41b222:	mov    DWORD PTR cs:[ebx],edi
  41b225:	cmp    BYTE PTR [edx+0x65],bl
  41b228:	add    dh,BYTE PTR [bp+di-0x4eea]
  41b22d:	mov    bl,0xe5
  41b22f:	push   0xffffffa8
  41b231:	popf   
  41b232:	push   edx
  41b233:	or     DWORD PTR [eax+0x77],esp
  41b236:	push   cs
  41b237:	scas   al,BYTE PTR es:[edi]
  41b238:	pushf  
  41b239:	sbb    esp,DWORD PTR [eax+0x5cbcfa45]
  41b23f:	inc    esi
  41b240:	push   ebp
  41b241:	ja     0x41b214
  41b243:	push   eax
  41b244:	mov    ch,0xc
  41b246:	psubd  mm6,QWORD PTR [ebx+0x2e]
  41b24a:	cmova  esi,ebx
  41b24d:	cld    
  41b24e:	icebp  
  41b24f:	stc    
  41b250:	mov    ebx,0x6532b8d8
  41b255:	scas   al,BYTE PTR es:[edi]
  41b256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b257:	jl     0x41b213
  41b259:	push   edi
  41b25a:	jo     0x41b2da
  41b25c:	call   0x323a310f
  41b261:	call   0xc166:0x5d6123e2
  41b268:	mov    edx,0xb95c1f29
  41b26d:	int    0x71
  41b26f:	sub    cl,al
  41b271:	ins    DWORD PTR es:[edi],dx
  41b272:	jbe    0x41b1f5
  41b274:	inc    ecx
  41b275:	add    ah,BYTE PTR [edx]
  41b277:	push   ebx
  41b278:	call   0xcae6:0x560a8d56
  41b27f:	aam    0x70
  41b281:	mov    eax,es
  41b283:	je     0x41b23f
  41b285:	aas    
  41b286:	pop    ebx
  41b287:	mov    ch,0xd1
  41b289:	add    BYTE PTR [esi+0x3c],ah
  41b28c:	bound  edi,QWORD PTR [esi+0x7b]
  41b28f:	cmp    eax,0x80322241
  41b294:	mov    eax,0xa10a2ebe
  41b299:	push   esp
  41b29a:	push   ecx
  41b29b:	xchg   ebp,eax
  41b29c:	cmp    BYTE PTR [ecx-0x47],bh
  41b29f:	xchg   ebx,eax
  41b2a0:	adc    BYTE PTR [edx+0x76],al
  41b2a3:	imul   ebp,DWORD PTR [esi+0xa],0xffffff96
  41b2a7:	xchg   BYTE PTR [edx+eax*4-0x685a08b7],bh
  41b2ae:	add    al,0x7a
  41b2b0:	(bad)  
  41b2b1:	mov    eax,edi
  41b2b3:	xchg   DWORD PTR [edx-0x37],edi
  41b2b6:	dec    esi
  41b2b7:	jp     0x41b313
  41b2b9:	xchg   esi,eax
  41b2ba:	adc    al,0x5e
  41b2bc:	popa   
  41b2bd:	clc    
  41b2be:	int3   
  41b2bf:	ss add al,0x62
  41b2c2:	mov    edi,0x5d4b7d24
  41b2c7:	(bad)  
  41b2c8:	mov    bl,0x9f
  41b2ca:	loopne 0x41b25e
  41b2cc:	xchg   DWORD PTR [eax],edi
  41b2ce:	scas   eax,DWORD PTR es:[edi]
  41b2cf:	pop    esi
  41b2d0:	sbb    BYTE PTR ds:0xaa3ac272,0x75
  41b2d7:	xchg   esp,eax
  41b2d8:	cli    
  41b2d9:	push   DWORD PTR [eax+edi*2]
  41b2dc:	retf   
  41b2dd:	scas   eax,DWORD PTR es:[edi]
  41b2de:	fimul  WORD PTR [edx]
  41b2e0:	in     al,dx
  41b2e1:	in     eax,0xbc
  41b2e3:	pop    es
  41b2e4:	in     al,0x8e
  41b2e6:	cwde   
  41b2e7:	and    al,0x4
  41b2e9:	(bad)  
  41b2ea:	dec    edx
  41b2eb:	xchg   ecx,eax
  41b2ec:	and    BYTE PTR [ebp+0x59912539],bl
  41b2f2:	rol    DWORD PTR [eax+0x7b9bc047],1
  41b2f8:	pop    ebx
  41b2f9:	rol    DWORD PTR [esi+0x18],0xb2
  41b2fd:	xor    BYTE PTR [edx+0x2c],cl
  41b300:	mov    bh,0x6
  41b302:	inc    ecx
  41b303:	mov    ah,0x72
  41b305:	mov    cl,0x3
  41b307:	xrelease xchg BYTE PTR gs:[edi-0x7c],cl
  41b30c:	es movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41b30f:	pop    eax
  41b310:	fdiv   st,st(6)
  41b312:	pop    ecx
  41b313:	int3   
  41b314:	popa   
  41b315:	jl     0x41b388
  41b317:	hlt    
  41b318:	and    eax,0x688bf6d
  41b31d:	in     al,0xb9
  41b31f:	icebp  
  41b320:	cs cmp ch,0x12
  41b324:	shl    DWORD PTR [edx+0x46],cl
  41b327:	push   eax
  41b328:	addr16 push edx
  41b32a:	xchg   ebp,eax
  41b32b:	and    al,0x96
  41b32d:	push   ebp
  41b32e:	xchg   ecx,eax
  41b32f:	scas   eax,DWORD PTR es:[edi]
  41b330:	xchg   esi,eax
  41b331:	jae    0x41b39a
  41b333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b334:	pusha  
  41b335:	mov    ds:0x1c2dac8f,eax
  41b33a:	lods   al,BYTE PTR ds:[esi]
  41b33b:	mov    ebx,0xf871e4d
  41b340:	inc    edx
  41b341:	fidiv  WORD PTR [esi+0xedf95a4]
  41b347:	loope  0x41b318
  41b349:	nop
  41b34a:	ja     0x41b308
  41b34c:	xchg   esi,eax
  41b34d:	mov    ds:0xbde90afd,al
  41b352:	in     al,dx
  41b353:	scas   eax,DWORD PTR es:[edi]
  41b354:	daa    
  41b355:	push   es
  41b356:	fsub   st,st(6)
  41b358:	(bad)  
  41b359:	ret    
  41b35a:	jle    0x41b363
  41b35c:	js     0x41b33b
  41b35e:	arpl   ax,sp
  41b360:	fs sub al,0xa5
  41b363:	cld    
  41b364:	push   edi
  41b365:	out    0x6c,eax
  41b367:	cs jb  0x41b3c4
  41b36a:	xchg   esi,eax
  41b36b:	xor    ah,BYTE PTR [edx+esi*2-0x4f]
  41b36f:	jno    0x41b3e9
  41b371:	adc    BYTE PTR [eax],0x27
  41b374:	sub    ch,BYTE PTR ds:0x72d1dd91
  41b37a:	stos   BYTE PTR es:[edi],al
  41b37b:	retf   
  41b37c:	loope  0x41b349
  41b37e:	jns    0x41b3a8
  41b380:	and    cl,ah
  41b382:	ins    DWORD PTR es:[edi],dx
  41b383:	stc    
  41b384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b385:	mov    edx,0x5ce87d29
  41b38a:	pop    edi
  41b38b:	mov    al,ds:0x55671ffb
  41b390:	mov    DWORD PTR [ecx+0x23d13279],ebx
  41b396:	adc    ch,bl
  41b398:	fwait
  41b399:	in     al,dx
  41b39a:	xchg   edi,eax
  41b39b:	mov    esi,0x150fd5b3
  41b3a0:	mov    al,0xaf
  41b3a2:	sub    eax,0x5d37ba0b
  41b3a7:	call   0x9db6:0x72016655
  41b3ae:	mov    BYTE PTR [eax],0x4d
  41b3b1:	xor    eax,0xfa4822e5
  41b3b6:	scas   eax,DWORD PTR es:[edi]
  41b3b7:	jmp    0x2f86:0xaec46997
  41b3be:	mov    ah,0xf0
  41b3c0:	ds xchg edi,eax
  41b3c2:	cdq    
  41b3c3:	push   esp
  41b3c4:	or     BYTE PTR [ebx+0x5232c15a],ch
  41b3ca:	jg     0x41b413
  41b3cc:	cmc    
  41b3cd:	cdq    
  41b3ce:	pop    ds
  41b3cf:	push   0x18c061a9
  41b3d4:	push   0x2f
  41b3d6:	jmp    0x41b37e
  41b3d8:	sbb    ch,BYTE PTR [eax-0x220f89fd]
  41b3de:	stos   BYTE PTR es:[edi],al
  41b3df:	retf   
  41b3e0:	xchg   ebx,eax
  41b3e1:	jge    0x41b44d
  41b3e3:	pop    edx
  41b3e4:	jge    0x41b36e
  41b3e6:	jle    0x41b37d
  41b3e8:	pop    ss
  41b3e9:	and    eax,0xeb9d710f
  41b3ee:	mov    al,ds:0xdde41384
  41b3f3:	jmp    0x41b435
  41b3f5:	sub    BYTE PTR [edi+0x788b671a],ah
  41b3fb:	dec    esi
  41b3fc:	mov    cl,BYTE PTR [eax]
  41b3fe:	mov    es,WORD PTR [ebx-0x35]
  41b401:	pop    esi
  41b402:	ds jno 0x41b42a
  41b405:	and    al,0x4f
  41b407:	out    dx,al
  41b408:	or     BYTE PTR [esi+0x36],cl
  41b40b:	jp     0x41b397
  41b40d:	out    dx,eax
  41b40e:	dec    esp
  41b40f:	in     al,dx
  41b410:	inc    ebp
  41b411:	cmp    ebp,DWORD PTR [esi-0x6dce28fd]
  41b417:	les    esi,FWORD PTR [esi]
  41b419:	loopne 0x41b422
  41b41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b41c:	mov    eax,0x85d72c72
  41b421:	int    0x74
  41b423:	push   0xead84731
  41b428:	ja     0x41b488
  41b42a:	xchg   BYTE PTR [edi+0x7f4441b8],cl
  41b430:	imul   esi,eax,0xc7e21c48
  41b436:	push   0x75
  41b438:	mov    esi,0xd34477a2
  41b43d:	mov    DWORD PTR [ecx],esi
  41b43f:	std    
  41b440:	cmp    DWORD PTR [ebx+edx*2-0x4713911d],esi
  41b447:	inc    eax
  41b448:	rol    dh,1
  41b44a:	pop    esi
  41b44b:	mov    ecx,0x145fe0ef
  41b450:	and    ah,al
  41b452:	and    eax,0x2dc7824a
  41b457:	retf   
  41b458:	data16 aaa 
  41b45a:	pusha  
  41b45b:	mov    ah,0x59
  41b45d:	repz pop edi
  41b45f:	jbe    0x41b45c
  41b461:	shl    cl,0x33
  41b464:	imul   edx,DWORD PTR [eax+0x66e6d3e],0x8c26fe6b
  41b46e:	addr16 rcr cl,0x12
  41b472:	(bad)
  41b475:	outs   dx,DWORD PTR ds:[esi]
  41b476:	outs   dx,BYTE PTR ds:[esi]
  41b477:	in     eax,0x15
  41b479:	mov    dl,BYTE PTR [ecx-0x48]
  41b47c:	fild   DWORD PTR [ebx+0x43]
  41b47f:	ss loop 0x41b48e
  41b482:	add    ebx,DWORD PTR [edx+edi*4+0x15]
  41b486:	adc    BYTE PTR [edi-0x1723542b],dh
  41b48c:	in     eax,dx
  41b48d:	fidiv  WORD PTR [eax]
  41b48f:	jb     0x41b4f6
  41b491:	jae    0x41b501
  41b493:	cld    
  41b494:	mov    eax,0xf86a3a6c
  41b499:	xchg   ebx,eax
  41b49a:	sbb    bh,dh
  41b49c:	inc    edi
  41b49e:	mov    ebp,0x78883d1d
  41b4a3:	dec    esp
  41b4a4:	sar    DWORD PTR [esi],0xd
  41b4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4a8:	pop    ebp
  41b4a9:	push   ecx
  41b4aa:	xor    esp,DWORD PTR [ecx+0x67]
  41b4ad:	push   0x60
  41b4af:	rol    esi,0xc3
  41b4b2:	(bad)  
  41b4b3:	ss test al,0x23
  41b4b6:	xor    ebx,ebp
  41b4b8:	xor    ebx,DWORD PTR [eax-0x3d]
  41b4bb:	mov    bl,0xd7
  41b4bd:	cmp    ebp,DWORD PTR [edx]
  41b4bf:	scas   al,BYTE PTR es:[edi]
  41b4c0:	push   esp
  41b4c1:	and    BYTE PTR [eax-0x64f364ba],bl
  41b4c7:	cmp    ebx,DWORD PTR [ecx+0x1d955c88]
  41b4cd:	or     eax,0x4dd34d6c
  41b4d2:	mov    dh,dl
  41b4d4:	inc    edx
  41b4d5:	cwde   
  41b4d6:	xor    DWORD PTR [ebp+0x6ca33f19],ebp
  41b4dc:	mov    ebp,0xeb4bda30
  41b4e1:	mov    esi,0xfbcd36a1
  41b4e6:	icebp  
  41b4e7:	sahf   
  41b4e8:	inc    ecx
  41b4e9:	ret    
  41b4ea:	jns    0x41b4ad
  41b4ec:	js     0x41b4ef
  41b4ee:	mov    ah,BYTE PTR [edi-0xf]
  41b4f1:	lods   eax,DWORD PTR ds:[esi]
  41b4f2:	not    BYTE PTR [ebx-0x65168a1c]
  41b4f8:	sbb    al,0x63
  41b4fa:	push   0x97a9acaf
  41b4ff:	and    DWORD PTR [esi+0x43],0xffffff8c
  41b503:	lds    esp,FWORD PTR [esi+ebx*4]
  41b506:	das    
  41b507:	retf   0xf89e
  41b50a:	pop    ebx
  41b50b:	mov    dl,0x56
  41b50d:	(bad)  
  41b50e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b50f:	shl    bl,0x8e
  41b512:	inc    ebx
  41b513:	in     al,dx
  41b514:	sub    BYTE PTR [ebp+0x61],0x34
  41b518:	fbstp  TBYTE PTR [ebx-0x3e]
  41b51b:	imul   ebx,DWORD PTR [ebx],0xffffffb7
  41b51e:	mov    BYTE PTR [esi],cl
  41b520:	fwait
  41b521:	xlat   BYTE PTR ds:[ebx]
  41b522:	out    dx,eax
  41b523:	inc    ecx
  41b524:	pop    ebp
  41b525:	dec    edi
  41b526:	jae    0x41b4c1
  41b528:	mov    esp,0xd350d779
  41b52d:	dec    BYTE PTR [esi-0xb]
  41b530:	bound  ecx,QWORD PTR [ecx-0x30db6962]
  41b536:	dec    eax
  41b537:	mov    DWORD PTR [ebp+0x62],esp
  41b53a:	inc    ecx
  41b53b:	cmp    ecx,DWORD PTR ds:0x6cb00a96
  41b541:	inc    ebx
  41b542:	cmc    
  41b543:	bound  ecx,QWORD PTR [ebx-0x60190665]
  41b549:	leave  
  41b54a:	mov    eax,ds:0x97dd7550
  41b54f:	dec    esp
  41b550:	push   es
  41b551:	cmp    eax,0x8bd9b02b
  41b556:	dec    ebp
  41b557:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b55d:	and    ecx,edx
  41b55f:	mov    DWORD PTR [ebp-0x4c],ecx
  41b562:	mov    ecx,DWORD PTR [ebp+0x8]
  41b565:	mov    edx,DWORD PTR [ebp-0x48]
  41b568:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b56f:	mov    DWORD PTR [ebp-0x48],ecx
  41b572:	mov    ecx,DWORD PTR [ebp+0x8]
  41b575:	mov    edx,0xfa5e1524
  41b57a:	sub    edx,ecx
  41b57c:	add    edx,DWORD PTR [ebp-0x44]
  41b57f:	mov    DWORD PTR [ebp-0x44],edx
  41b582:	mov    ecx,DWORD PTR [ebp+0x8]
  41b585:	xor    ecx,eax
  41b587:	add    ecx,esi
  41b589:	jne    0x4191ae
  41b58f:	jmp    0x41b621
  41b594:	mov    ecx,DWORD PTR [ebp+0x8]
  41b597:	mov    edx,DWORD PTR [ebp-0x8]
  41b59a:	xor    ecx,eax
  41b59c:	xor    edx,eax
  41b59e:	sub    ecx,edx
  41b5a0:	sub    ecx,esi
  41b5a2:	xor    ecx,eax
  41b5a4:	mov    DWORD PTR [ebp+0x8],ecx
  41b5a7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5aa:	mov    edx,DWORD PTR [ebp-0x58]
  41b5ad:	add    ecx,0x5708e2
  41b5b3:	imul   ecx,edx
  41b5b6:	mov    DWORD PTR [ebp-0x58],ecx
  41b5b9:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x54]
  41b5bf:	add    ecx,0x64f880
  41b5c5:	or     ecx,edx
  41b5c7:	mov    DWORD PTR [ebp-0x54],ecx
  41b5ca:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5cd:	mov    edx,DWORD PTR [ebp-0x50]
  41b5d0:	add    ecx,0x242ebf1
  41b5d6:	xor    ecx,edx
  41b5d8:	mov    DWORD PTR [ebp-0x50],ecx
  41b5db:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5de:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5e1:	add    ecx,edi
  41b5e3:	and    ecx,edx
  41b5e5:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5e8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5eb:	mov    edx,DWORD PTR [ebp-0x48]
  41b5ee:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5f5:	mov    DWORD PTR [ebp-0x48],ecx
  41b5f8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fb:	mov    edx,0xfa5e1524
  41b600:	sub    edx,ecx
  41b602:	add    edx,DWORD PTR [ebp-0x44]
  41b605:	mov    DWORD PTR [ebp-0x44],edx
  41b608:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60b:	xor    ecx,eax
  41b60d:	add    ecx,esi
  41b60f:	jne    0x41b594
  41b615:	mov    ecx,DWORD PTR [ebp-0x8]
  41b618:	xor    ecx,eax
  41b61a:	mov    eax,DWORD PTR [ebp+0x10]
  41b61d:	add    ecx,esi
  41b61f:	mov    DWORD PTR [eax],ecx
  41b621:	pop    edi
  41b622:	pop    esi
  41b623:	pop    ebx
  41b624:	leave  
  41b625:	ret    0xc
  41b628:	push   ebp
  41b629:	mov    ebp,esp
  41b62b:	sub    esp,0x78
  41b62e:	push   esi
  41b62f:	mov    DWORD PTR ds:0x42b21e,0x12
  41b639:	cmp    DWORD PTR ds:0x42b21e,0x0
  41b640:	je     0x41b684
  41b646:	cmp    DWORD PTR ds:0x42b21e,0x16
  41b64d:	jle    0x41b684
  41b653:	jmp    0x41b672
  41b658:	push   0x42b1fa
  41b65d:	push   0x8597
  41b662:	push   0x42a285
  41b667:	push   0x42a1b7
  41b66c:	call   DWORD PTR ds:0x42b31e
  41b672:	mov    esi,DWORD PTR ds:0x42b21e
  41b678:	dec    esi
  41b679:	mov    DWORD PTR ds:0x42b21e,esi
  41b67f:	jmp    0x41b639
  41b684:	push   edi
  41b685:	sub    DWORD PTR ds:0x42b1ca,0x4941
  41b68f:	mov    eax,ds:0x42a472
  41b694:	xor    esi,esi
  41b696:	xor    esi,DWORD PTR ds:0x42b1d6
  41b69c:	add    esi,DWORD PTR ds:0x42b1da
  41b6a2:	mov    DWORD PTR ds:0x42b1d6,esi
  41b6a8:	mov    DWORD PTR [ebp-0x24],eax
  41b6ab:	and    DWORD PTR ds:0x42b226,edx
  41b6b1:	mov    eax,ds:0x42a592
  41b6b6:	mov    ecx,DWORD PTR ds:0x42b256
  41b6bc:	mov    ecx,DWORD PTR [ecx]
  41b6be:	xor    DWORD PTR ds:0x42b1f2,ecx
  41b6c4:	mov    DWORD PTR [ebp-0x30],eax
  41b6c7:	mov    DWORD PTR ds:0x42b1b2,0x10
  41b6d1:	cmp    DWORD PTR ds:0x42b1b2,0x0
  41b6d8:	je     0x41b70e
  41b6de:	cmp    DWORD PTR ds:0x42b1b2,0x1e
  41b6e5:	ja     0x41b70e
  41b6eb:	jmp    0x41b6fb
  41b6f0:	push   0x25ea
  41b6f5:	call   DWORD PTR ds:0x42b322
  41b6fb:	xor    eax,eax
  41b6fd:	xor    eax,DWORD PTR ds:0x42b1b2
  41b703:	dec    eax
  41b704:	mov    ds:0x42b1b2,eax
  41b709:	jmp    0x41b6d1
  41b70e:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  41b715:	and    DWORD PTR ds:0x42b21e,0x0
  41b71f:	jmp    0x41b733
  41b724:	xor    esi,esi
  41b726:	add    esi,DWORD PTR ds:0x42b21e
  41b72c:	inc    esi
  41b72d:	mov    DWORD PTR ds:0x42b21e,esi
  41b733:	cmp    DWORD PTR ds:0x42b21e,0x14
  41b73a:	jae    0x41b77c
  41b740:	cmp    DWORD PTR ds:0x42b21e,0x7
  41b747:	jl     0x41b77c
  41b74d:	jmp    0x41b75d
  41b752:	push   0x3b69
  41b757:	call   DWORD PTR ds:0x42b326
  41b75d:	cmp    DWORD PTR ds:0x42b21e,0x6
  41b764:	jne    0x41b777
  41b76a:	mov    esi,DWORD PTR ds:0x42b21e
  41b770:	inc    esi
  41b771:	mov    DWORD PTR ds:0x42b21e,esi
  41b777:	jmp    0x41b724
  41b77c:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b783:	or     eax,DWORD PTR ds:0x42b212
  41b789:	mov    eax,DWORD PTR [ebp-0x10]
  41b78c:	and    DWORD PTR ds:0x42b1c2,0x0
  41b796:	jmp    0x41b7aa
  41b79b:	xor    ecx,ecx
  41b79d:	or     ecx,DWORD PTR ds:0x42b1c2
  41b7a3:	inc    ecx
  41b7a4:	mov    DWORD PTR ds:0x42b1c2,ecx
  41b7aa:	cmp    DWORD PTR ds:0x42b1c2,0x16
  41b7b1:	jae    0x41b7ee
  41b7b7:	cmp    DWORD PTR ds:0x42b1c2,0x22
  41b7be:	jb     0x41b7ee
  41b7c4:	jmp    0x41b7e9
  41b7c9:	push   0x42a121
  41b7ce:	push   0x73a7
  41b7d3:	push   DWORD PTR [ebp-0x18]
  41b7d6:	push   0x5cd1
  41b7db:	push   0x2368
  41b7e0:	push   DWORD PTR [ebp-0xc]
  41b7e3:	call   DWORD PTR ds:0x42b2ea
  41b7e9:	jmp    0x41b79b
  41b7ee:	mov    ecx,DWORD PTR [ebp-0x10]
  41b7f1:	mov    DWORD PTR ds:0x42b1be,0x10
  41b7fb:	cmp    DWORD PTR ds:0x42b1be,0x0
  41b802:	je     0x41b85b
  41b808:	cmp    DWORD PTR ds:0x42b1be,0x9
  41b80f:	jle    0x41b85b
  41b815:	jmp    0x41b82f
  41b81a:	push   0x42a03d
  41b81f:	push   0x0
  41b821:	push   DWORD PTR [ebp-0xc]
  41b824:	push   0x5431
  41b829:	call   DWORD PTR ds:0x42b2ee
  41b82f:	cmp    DWORD PTR ds:0x42b1be,0xa
  41b836:	jne    0x41b849
  41b83c:	mov    edi,DWORD PTR ds:0x42b1be
  41b842:	dec    edi
  41b843:	mov    DWORD PTR ds:0x42b1be,edi
  41b849:	mov    edi,DWORD PTR ds:0x42b1be
  41b84f:	dec    edi
  41b850:	mov    DWORD PTR ds:0x42b1be,edi
  41b856:	jmp    0x41b7fb
  41b85b:	sub    eax,ecx
  41b85d:	and    esi,esi
  41b85f:	jmp    0x41dbf0
  41b864:	xchg   ch,bl
  41b866:	fdiv   st,st(3)
  41b868:	test   dl,ah
  41b86a:	xchg   BYTE PTR [edx+0x1c89e04a],dl
  41b870:	inc    ebx
  41b871:	jl     0x41b7fa
  41b873:	jmp    0x41b863
  41b875:	inc    DWORD PTR [eax-0x7ca1f07d]
  41b87b:	add    DWORD PTR [ebx-0x5f],0x6d
  41b87f:	xor    al,0x49
  41b881:	stos   BYTE PTR es:[edi],al
  41b882:	inc    edi
  41b883:	xchg   esi,eax
  41b884:	into   
  41b885:	aas    
  41b886:	mov    ebx,DWORD PTR [edx+0x16df2749]
  41b88c:	mov    WORD PTR [edi+eiz*1-0x436f041b],fs
  41b893:	sbb    BYTE PTR [eax],ah
  41b895:	xchg   dh,bh
  41b897:	xchg   ecx,eax
  41b898:	add    DWORD PTR [edi-0x24aec75e],0xf
  41b89f:	out    dx,al
  41b8a0:	aam    0x8
  41b8a2:	mov    al,ds:0x1fb89d76
  41b8a7:	test   eax,0x49ed3851
  41b8ac:	push   edi
  41b8ad:	inc    edi
  41b8ae:	mov    bh,0x6c
  41b8b0:	(bad)  
  41b8b1:	lock inc eax
  41b8b3:	xchg   ecx,eax
  41b8b4:	sti    
  41b8b5:	js     0x41b907
  41b8b7:	jno    0x41b918
  41b8b9:	sbb    al,0x2f
  41b8bb:	fcmovu st,st(5)
  41b8bd:	mov    eax,ebx
  41b8bf:	call   0x99aa:0xc7cbeb57
  41b8c6:	out    dx,eax
  41b8c7:	mov    esp,0x6fe299ec
  41b8cc:	pop    ebp
  41b8cd:	jnp    0x41b8c6
  41b8cf:	mov    DWORD PTR [ebx-0x58c07de],ecx
  41b8d5:	cmp    al,0xf3
  41b8d7:	jo     0x41b940
  41b8d9:	xchg   ebp,eax
  41b8da:	sahf   
  41b8db:	js     0x41b88a
  41b8dd:	sub    cl,bl
  41b8df:	jmp    0x5eb:0x1a83778
  41b8e6:	call   FWORD PTR [edi+0x4e]
  41b8e9:	cs repnz mov ebx,0xf99f3c2d
  41b8f0:	out    dx,eax
  41b8f1:	js     0x41b917
  41b8f3:	(bad)  
  41b8f4:	int3   
  41b8f5:	in     eax,0xb1
  41b8f7:	lods   eax,DWORD PTR ds:[esi]
  41b8f8:	or     bl,BYTE PTR [edi-0x1c3e7f5c]
  41b8fe:	push   ebp
  41b8ff:	(bad)  
  41b901:	je     0x41b93e
  41b903:	repnz or cl,BYTE PTR [ebp-0xe10fd15]
  41b90a:	inc    edi
  41b90b:	or     DWORD PTR [esi],0xb9e38d24
  41b911:	jno    0x41b8b0
  41b913:	repnz mov ?,WORD PTR [ecx-0x62]
  41b917:	jbe    0x41b94e
  41b919:	ret    0x2710
  41b91c:	jg     0x41b90f
  41b91e:	out    0x39,eax
  41b920:	pop    edi
  41b921:	aam    0x43
  41b923:	sbb    BYTE PTR [edx+0x7999103e],ch
  41b929:	mov    edi,0x965361ba
  41b92e:	rcl    BYTE PTR [edi-0x26993054],1
  41b934:	inc    ebp
  41b935:	mov    dh,0x79
  41b937:	outs   dx,BYTE PTR ds:[esi]
  41b938:	push   ecx
  41b939:	fwait
  41b93a:	sub    DWORD PTR [ecx+ebx*1+0x4df54bfd],0x5e302bc5
  41b945:	xchg   esi,eax
  41b946:	out    0x9b,al
  41b948:	jmp    0x41b96c
  41b94a:	pusha  
  41b94b:	push   ds
  41b94c:	xchg   edi,eax
  41b94d:	mov    BYTE PTR [edx+0x35],cl
  41b950:	outs   dx,BYTE PTR ds:[esi]
  41b951:	jge    0x41b962
  41b953:	retf   
  41b954:	mov    bh,BYTE PTR [ebx+0x21fb5f8a]
  41b95a:	scas   eax,DWORD PTR es:[edi]
  41b95b:	pop    ecx
  41b95c:	cmc    
  41b95d:	pop    ebx
  41b95e:	sbb    al,0xf9
  41b960:	cmp    dh,BYTE PTR [ecx]
  41b962:	call   edi
  41b964:	or     DWORD PTR [ebx+0x3c],ebx
  41b967:	jns    0x41b974
  41b969:	in     eax,dx
  41b96a:	mov    dh,0xd6
  41b96c:	pop    eax
  41b96d:	pop    DWORD PTR [edi+0xe3fefee]
  41b973:	cdq    
  41b974:	scas   al,BYTE PTR es:[edi]
  41b975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b976:	out    dx,al
  41b977:	or     BYTE PTR [ebx+0x24],al
  41b97a:	add    DWORD PTR [esi],eax
  41b97c:	add    ah,BYTE PTR [eax]
  41b97e:	xchg   bl,al
  41b980:	dec    esp
  41b981:	iret   
  41b982:	xchg   edx,eax
  41b983:	das    
  41b984:	and    ah,BYTE PTR [ebp-0xf]
  41b987:	mov    al,0x33
  41b989:	mov    bh,0x60
  41b98b:	pop    es
  41b98c:	cs mov esi,0x5d1afd76
  41b992:	xchg   esp,eax
  41b993:	ja     0x41b9c4
  41b995:	jle    0x41b9f5
  41b997:	call   0x45226b1e
  41b99c:	out    dx,al
  41b99d:	adc    BYTE PTR [edx],dh
  41b99f:	lea    edi,ds:0xb1df399a
  41b9a5:	cmp    DWORD PTR ds:0x9cc5f03b,ecx
  41b9ab:	xchg   ebp,eax
  41b9ac:	mov    bh,0x4c
  41b9ae:	mov    al,0xb
  41b9b0:	sub    BYTE PTR [eax-0x69],0xd3
  41b9b4:	adc    DWORD PTR [ecx],edi
  41b9b6:	out    dx,al
  41b9b7:	icebp  
  41b9b8:	xchg   esi,eax
  41b9b9:	mov    dh,0x54
  41b9bb:	mov    eax,0xa27ec162
  41b9c0:	push   0x672459e9
  41b9c5:	(bad)  
  41b9c6:	hlt    
  41b9c7:	icebp  
  41b9c8:	lods   al,BYTE PTR ds:[esi]
  41b9c9:	push   ecx
  41b9ca:	jno    0x41b9aa
  41b9cc:	cmc    
  41b9cd:	push   0xffffff80
  41b9cf:	arpl   ax,ax
  41b9d1:	fldpi  
  41b9d3:	push   edi
  41b9d4:	aad    0x3f
  41b9d6:	(bad)  
  41b9d7:	sub    ebx,ebx
  41b9d9:	call   0xfba1b6f1
  41b9de:	(bad)  
  41b9e0:	shr    BYTE PTR ds:0x6d0bea4e,cl
  41b9e6:	adc    esp,DWORD PTR [ebp-0x63]
  41b9e9:	imul   edx,DWORD PTR [ebp+0x38be54dc],0x73b284a4
  41b9f3:	rcl    BYTE PTR [ebx+ebx*1-0x24],1
  41b9f7:	leave  
  41b9f8:	mov    bh,BYTE PTR [edi]
  41b9fa:	xor    DWORD PTR [edx+0x1f74d18f],ebx
  41ba00:	cs call 0xa996db86
  41ba06:	scas   al,BYTE PTR es:[edi]
  41ba07:	test   eax,0xa6ddc194
  41ba0c:	sub    esp,edx
  41ba0e:	(bad)  
  41ba0f:	push   esp
  41ba10:	rcl    BYTE PTR [eax+0x6],1
  41ba13:	add    bl,bh
  41ba15:	xchg   ebx,eax
  41ba16:	inc    eax
  41ba17:	xchg   edi,eax
  41ba18:	inc    ecx
  41ba19:	pusha  
  41ba1a:	pop    ds
  41ba1b:	mov    ch,0x81
  41ba1d:	(bad)  
  41ba1e:	push   ebx
  41ba1f:	push   fs
  41ba21:	lods   eax,DWORD PTR ds:[esi]
  41ba22:	popa   
  41ba23:	(bad)  
  41ba24:	retf   0xa679
  41ba27:	cs arpl ax,sp
  41ba2a:	fiadd  DWORD PTR [ebp+0x5d]
  41ba2d:	ret    
  41ba2e:	sbb    DWORD PTR [edi+0x446e84e9],ecx
  41ba34:	(bad)  
  41ba35:	cdq    
  41ba36:	sbb    BYTE PTR [eax],cl
  41ba38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba39:	sub    eax,0xac72814f
  41ba3e:	fwait
  41ba3f:	mov    ds:0xbe0d8150,eax
  41ba44:	ins    BYTE PTR es:[edi],dx
  41ba45:	(bad)  
  41ba46:	sbb    BYTE PTR [ebx+0x5d],ch
  41ba49:	(bad)  
  41ba4a:	outs   dx,BYTE PTR ds:[esi]
  41ba4b:	bswap  ebx
  41ba4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba4e:	xlat   BYTE PTR ds:[ebx]
  41ba4f:	jb     0x41ba1c
  41ba51:	xchg   edx,eax
  41ba52:	adc    esp,esi
  41ba54:	sub    BYTE PTR [esi+eax*1+0x51065255],ah
  41ba5b:	pop    esi
  41ba5c:	jae    0x41ba5e
  41ba5e:	mov    dh,0x2f
  41ba60:	dec    edx
  41ba61:	sbb    BYTE PTR [edx-0x8],dl
  41ba64:	in     al,0x4a
  41ba66:	gs out dx,al
  41ba68:	fldenv [ecx-0x48]
  41ba6b:	pop    esp
  41ba6c:	ret    0xf0f1
  41ba6f:	and    DWORD PTR [eax+0x10],edi
  41ba72:	fcmovnu st,st(2)
  41ba74:	outs   dx,DWORD PTR ds:[esi]
  41ba75:	and    al,0xa4
  41ba77:	test   eax,0x3d579728
  41ba7c:	js     0x41ba06
  41ba7e:	jmp    0x326a:0xb84fc273
  41ba85:	in     al,0x9b
  41ba87:	xor    edi,ebx
  41ba89:	pop    ebp
  41ba8a:	push   eax
  41ba8b:	mov    ds:0x8fc1862,al
  41ba90:	xchg   esi,eax
  41ba91:	pop    edx
  41ba92:	sbb    eax,0x243a97a6
  41ba97:	test   edx,eax
  41ba99:	popf   
  41ba9a:	test   BYTE PTR [edx+0x15],ch
  41ba9d:	adc    eax,0x1e422421
  41baa2:	ins    DWORD PTR es:[edi],dx
  41baa3:	nop
  41baa4:	jmp    0x41bae5
  41baa6:	sbb    eax,esp
  41baa8:	push   esp
  41baa9:	lea    ecx,[edi-0x4decd267]
  41baaf:	jno    0x41bafb
  41bab1:	xor    DWORD PTR [esi+ebp*8+0x74],esp
  41bab5:	push   esi
  41bab6:	add    ah,BYTE PTR [ebp+0x47]
  41bab9:	and    bh,0x25
  41babc:	sti    
  41babd:	js     0x41bb09
  41babf:	aaa    
  41bac0:	ret    0xea36
  41bac3:	sbb    ch,cl
  41bac5:	imul   edi,DWORD PTR [eax+0x6b],0x74
  41bac9:	ret    0xea89
  41bacc:	sub    edi,DWORD PTR [ebx-0x7c3b2dfc]
  41bad2:	mov    ebp,DWORD PTR [edi-0x1be9b347]
  41bad8:	aam    0xaa
  41bada:	sahf   
  41badb:	ins    BYTE PTR es:[edi],dx
  41badc:	mov    al,ds:0xadf8e61c
  41bae1:	out    0xc0,eax
  41bae3:	setns  BYTE PTR [ecx-0x75415837]
  41baea:	iret   
  41baeb:	sbb    BYTE PTR [esi-0x709d9080],dh
  41baf1:	and    edx,DWORD PTR [ecx]
  41baf3:	mov    ch,0x89
  41baf5:	mov    esp,0x413a47db
  41bafa:	push   edi
  41bafb:	inc    edx
  41bafc:	(bad)  
  41bafd:	stc    
  41bafe:	test   al,0x62
  41bb00:	cmp    ebp,DWORD PTR [ebx+ebx*4+0x3096a1af]
  41bb07:	or     BYTE PTR [edi-0x1b450f9e],0xb0
  41bb0e:	sub    eax,0x6bb0ae70
  41bb13:	stos   DWORD PTR es:[edi],eax
  41bb14:	push   edx
  41bb15:	fsub   st(3),st
  41bb17:	or     ch,ah
  41bb19:	test   DWORD PTR [edx+0x319378ba],edx
  41bb1f:	aam    0xb6
  41bb21:	add    DWORD PTR [eax-0x4f],edx
  41bb24:	mov    DWORD PTR [eax],ecx
  41bb26:	and    eax,0x4b17d810
  41bb2b:	leave  
  41bb2c:	jne    0x41baf2
  41bb2e:	sub    ch,BYTE PTR [edi+0x74]
  41bb31:	clc    
  41bb32:	imul   ebx,DWORD PTR [ebp-0x6f],0x7f6e5e60
  41bb39:	or     edi,DWORD PTR [edi-0x25]
  41bb3c:	sahf   
  41bb3d:	loop   0x41bb7d
  41bb3f:	pop    ebp
  41bb40:	sti    
  41bb41:	add    BYTE PTR [ecx+edx*2+0x2b],al
  41bb45:	sahf   
  41bb46:	ror    edi,1
  41bb48:	ds out dx,al
  41bb4a:	jbe    0x41bb3e
  41bb4c:	sub    DWORD PTR [esi+esi*4-0x3d],esi
  41bb50:	cmp    eax,0x5fface0c
  41bb55:	enter  0xf945,0x52
  41bb59:	stos   DWORD PTR es:[edi],eax
  41bb5a:	dec    eax
  41bb5b:	jmp    0x2f69:0xfbe48359
  41bb62:	retf   0x44e0
  41bb65:	jge    0x41bb4b
  41bb67:	xlat   BYTE PTR ds:[ebx]
  41bb68:	bound  ebp,QWORD PTR [ecx]
  41bb6a:	push   es
  41bb6b:	(bad)  
  41bb6d:	retf   
  41bb6e:	add    al,0x69
  41bb70:	je     0x41bb04
  41bb72:	test   eax,0x4fa4b322
  41bb77:	rol    edx,0x42
  41bb7a:	xchg   ecx,eax
  41bb7b:	xor    eax,0xd00dea0e
  41bb80:	cmp    BYTE PTR [eax],bh
  41bb82:	(bad)  
  41bb83:	cmp    al,0xc1
  41bb85:	mov    esi,0xa8b02ee2
  41bb8a:	mov    DWORD PTR ds:0xfbb49d53,eax
  41bb90:	mov    WORD PTR [eax],fs
  41bb92:	hlt    
  41bb93:	xchg   al,dh
  41bb95:	xor    cl,cl
  41bb97:	cmp    dh,ah
  41bb99:	adc    BYTE PTR [esi-0x73bf6b90],al
  41bb9f:	sub    DWORD PTR [edi-0x34],eax
  41bba2:	fcmovne st,st(5)
  41bba4:	add    al,0x4d
  41bba6:	inc    esi
  41bba7:	cdq    
  41bba8:	and    esi,ecx
  41bbaa:	loope  0x41bba9
  41bbac:	mov    bl,BYTE PTR [ecx]
  41bbae:	dec    esp
  41bbaf:	popf   
  41bbb0:	sub    al,0x53
  41bbb2:	sar    dh,1
  41bbb4:	popf   
  41bbb5:	ss and eax,esi
  41bbb8:	mov    bh,0x69
  41bbba:	test   eax,0x1caa6fc7
  41bbbf:	push   0xe8e21387
  41bbc4:	mov    bh,0x4
  41bbc6:	xchg   esi,eax
  41bbc7:	and    DWORD PTR [esi-0x62],esi
  41bbca:	push   ds
  41bbcb:	pop    esp
  41bbcc:	(bad)  
  41bbcd:	sbb    eax,0x6845848a
  41bbd2:	pop    ss
  41bbd3:	jmp    0x775e:0x930a8f93
  41bbda:	pop    ebp
  41bbdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdc:	je     0x41bba6
  41bbde:	ds jmp 0x4f42:0xeb0ca24d
  41bbe6:	aam    0x2e
  41bbe8:	mov    db5,ecx
  41bbeb:	dec    esp
  41bbec:	push   0x4
  41bbee:	push   0xffffffc1
  41bbf0:	fucom  st(2)
  41bbf2:	addr16 cmp dh,bl
  41bbf5:	dec    edi
  41bbf6:	out    dx,eax
  41bbf7:	fisttp QWORD PTR [edx]
  41bbf9:	adc    BYTE PTR [eax],dh
  41bbfb:	popf   
  41bbfc:	mov    dh,BYTE PTR [ecx]
  41bbfe:	fst    DWORD PTR [ebp+0x64c2a5a4]
  41bc04:	pop    es
  41bc05:	and    al,dl
  41bc07:	dec    eax
  41bc08:	xchg   ebp,eax
  41bc09:	pop    eax
  41bc0a:	mov    al,0x6d
  41bc0c:	sbb    bl,BYTE PTR [ecx+0xaf17afa]
  41bc12:	out    0x8f,al
  41bc14:	xor    esp,DWORD PTR [ecx-0x26]
  41bc17:	lock lock xor ah,ch
  41bc1b:	jne    0x41bbdd
  41bc1d:	xor    bl,BYTE PTR [ebx+0x7a572226]
  41bc23:	repz jl 0x41bbed
  41bc26:	(bad)  
  41bc27:	pop    esp
  41bc28:	cmp    eax,0xcc1c077d
  41bc2d:	(bad)  
  41bc2e:	xlat   BYTE PTR ds:[ebx]
  41bc2f:	dec    ebp
  41bc30:	cmc    
  41bc31:	push   edx
  41bc32:	addr16 fchs 
  41bc35:	nop
  41bc36:	jmp    0x41bc8d
  41bc38:	xchg   edx,eax
  41bc39:	sbb    al,0x5c
  41bc3b:	and    esi,ebp
  41bc3d:	push   0xffffffa5
  41bc3f:	xchg   esi,eax
  41bc40:	(bad)  
  41bc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc42:	pop    eax
  41bc43:	in     eax,0x24
  41bc45:	in     al,0xbf
  41bc47:	push   cs
  41bc48:	fsub   DWORD PTR [esi+eax*1]
  41bc4b:	pop    ebx
  41bc4c:	fimul  DWORD PTR [ebx+0x3a2cd594]
  41bc52:	repnz xchg esp,eax
  41bc54:	adc    ebx,DWORD PTR [edi-0x5b44089a]
  41bc5a:	cmp    ah,BYTE PTR [ecx]
  41bc5c:	bound  esp,QWORD PTR fs:[edx]
  41bc5f:	mov    ds:0xeb3a4c3f,eax
  41bc64:	pushf  
  41bc65:	add    dh,BYTE PTR [esi+0x45a24f6d]
  41bc6b:	stos   DWORD PTR es:[edi],eax
  41bc6c:	push   ds
  41bc6d:	lds    eax,FWORD PTR [ebx]
  41bc6f:	and    al,cl
  41bc71:	stos   DWORD PTR es:[edi],eax
  41bc72:	test   BYTE PTR [ebp+0x7a],ch
  41bc75:	cmp    edi,DWORD PTR [edx]
  41bc77:	imul   ebp,DWORD PTR [esi+0x1f990a8f],0x73774a89
  41bc81:	sub    eax,0xf4e9fd0a
  41bc86:	jecxz  0x41bc94
  41bc88:	xchg   ecx,eax
  41bc89:	or     BYTE PTR [esi+ebx*2+0x46],bh
  41bc8d:	add    BYTE PTR [eax],ch
  41bc8f:	jmp    0x41bc70
  41bc91:	test   BYTE PTR [ebp+0x73],al
  41bc94:	(bad)
  41bc98:	call   0x8a4081e9
  41bc9d:	xor    eax,ecx
  41bc9f:	clc    
  41bca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bca1:	cli    
  41bca2:	and    ch,dl
  41bca4:	shr    DWORD PTR [esi-0x60585100],1
  41bcaa:	repz jmp 0x41bc86
  41bcad:	cli    
  41bcae:	(bad)  
  41bcaf:	shl    BYTE PTR [edi+edi*8],1
  41bcb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcb3:	mov    ecx,0xef2dcccf
  41bcb8:	add    DWORD PTR [esi+eax*1+0x28acd532],0x49
  41bcc0:	cmc    
  41bcc1:	mov    edx,ebp
  41bcc3:	inc    esp
  41bcc4:	xchg   ecx,eax
  41bcc5:	loop   0x41bc81
  41bcc7:	inc    esi
  41bcc8:	mov    ds:0xb72f77a,al
  41bccd:	in     al,dx
  41bcce:	xchg   edi,eax
  41bccf:	and    BYTE PTR [edx],0x9a
  41bcd2:	test   eax,0x98a77b2d
  41bcd7:	jp     0x41bcef
  41bcd9:	(bad)  
  41bcda:	loopne 0x41bcda
  41bcdc:	sbb    eax,DWORD PTR [ebp-0x7d6eeb61]
  41bce2:	mov    ecx,0xe20c7207
  41bce7:	sub    ch,0x41
  41bcea:	dec    ebx
  41bceb:	mov    ebx,DWORD PTR [edx-0x435b3c02]
  41bcf1:	xor    DWORD PTR [edi-0x40],edi
  41bcf4:	xchg   ecx,eax
  41bcf5:	xor    eax,0xb0d6b4f
  41bcfa:	(bad)  
  41bcfb:	sar    DWORD PTR [ebx],cl
  41bcfd:	pusha  
  41bcfe:	cmp    DWORD PTR [ebp-0x6a057282],edx
  41bd04:	mov    ds:0x51f14762,eax
  41bd09:	cmp    ebx,edi
  41bd0b:	pop    es
  41bd0c:	in     al,0xbb
  41bd0e:	div    DWORD PTR [ebp-0x54a53f92]
  41bd14:	dec    esp
  41bd15:	sbb    ebp,DWORD PTR [ebx-0x7c71d11a]
  41bd1b:	xor    eax,0x8e384ea
  41bd20:	cmp    BYTE PTR [esi+0x39ffa6ff],ah
  41bd26:	and    al,0x54
  41bd28:	retf   0x8bd1
  41bd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd2c:	xor    BYTE PTR [eax+0x4c],bh
  41bd2f:	ret    
  41bd30:	loope  0x41bdb1
  41bd32:	je     0x41bda1
  41bd34:	sub    dl,BYTE PTR [edx+0x47]
  41bd37:	adc    esp,DWORD PTR [ecx]
  41bd39:	cmp    al,0xa9
  41bd3b:	cdq    
  41bd3c:	jnp    0x41bdab
  41bd3e:	mov    dl,0xbf
  41bd40:	sahf   
  41bd41:	adc    DWORD PTR [esi],0xe200ccc2
  41bd47:	sbb    eax,0xc44e2d33
  41bd4c:	pop    es
  41bd4d:	sub    ebx,esi
  41bd4f:	and    edx,DWORD PTR [edx+0x7f4a82c4]
  41bd55:	in     al,dx
  41bd56:	dec    eax
  41bd57:	sub    al,dh
  41bd59:	adc    eax,0x5d1b01ec
  41bd5e:	and    dh,dh
  41bd60:	lahf   
  41bd61:	xor    al,0xdd
  41bd63:	dec    edi
  41bd64:	push   ebx
  41bd65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd66:	popa   
  41bd67:	adc    al,dl
  41bd69:	arpl   WORD PTR [eax-0x35],cx
  41bd6c:	sbb    dh,bh
  41bd6e:	adc    eax,0xff6ff5df
  41bd73:	mov    ch,0xd5
  41bd75:	pushf  
  41bd76:	pop    ebp
  41bd77:	call   0x6799fa60
  41bd7c:	fistp  QWORD PTR ds:0x8a890293
  41bd82:	jle    0x41be03
  41bd84:	(bad)  
  41bd85:	(bad)  
  41bd87:	cmp    DWORD PTR [ebp+0x69529aee],eax
  41bd8d:	mov    edx,0x47ee3282
  41bd92:	popa   
  41bd93:	std    
  41bd94:	xchg   ebp,eax
  41bd95:	jns    0x41bdcc
  41bd97:	repz jmp 0x4af4:0x28b9abe2
  41bd9f:	inc    esp
  41bda0:	push   ebx
  41bda1:	mov    bl,cl
  41bda3:	jmp    0x8fa3:0x7eef5438
  41bdaa:	lea    edi,ss:[eax-0x2c]
  41bdae:	fwait
  41bdaf:	mov    ah,0xb5
  41bdb1:	(bad)  
  41bdb2:	dec    DWORD PTR [esi-0x5a691995]
  41bdb8:	sbb    cl,dl
  41bdba:	test   DWORD PTR [esi-0x39],edx
  41bdbd:	leave  
  41bdbe:	pop    ecx
  41bdbf:	pop    esp
  41bdc0:	jb     0x41bdeb
  41bdc2:	xor    bl,bh
  41bdc4:	ins    DWORD PTR es:[edi],dx
  41bdc5:	fcom   DWORD PTR [edi-0x1f8d6d28]
  41bdcb:	retf   
  41bdcc:	or     ch,dl
  41bdce:	inc    ebx
  41bdcf:	sub    DWORD PTR [edi],0x1610d8eb
  41bdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdd6:	imul   ebp,DWORD PTR [ecx],0xffffff9f
  41bdd9:	mov    WORD PTR [eax+esi*2+0xe766a5b],?
  41bde0:	xor    eax,0xb29f5b85
  41bde5:	or     BYTE PTR [esi],cl
  41bde7:	js     0x41be67
  41bde9:	pop    esp
  41bdea:	add    ebx,ebx
  41bdec:	in     eax,dx
  41bded:	clc    
  41bdee:	adc    DWORD PTR [ebx+0x3f2ba288],ebp
  41bdf4:	test   cl,dl
  41bdf6:	into   
  41bdf7:	mov    esp,0x771e92de
  41bdfc:	add    bl,BYTE PTR [eax]
  41bdfe:	mov    dh,0x4
  41be00:	and    dl,bh
  41be02:	scas   al,BYTE PTR es:[edi]
  41be03:	loopne 0x41be0b
  41be05:	cmp    esi,ebp
  41be07:	cmc    
  41be08:	call   0xb3373a00
  41be0d:	rol    BYTE PTR [edx],0x57
  41be10:	and    cl,al
  41be12:	dec    esp
  41be13:	push   esp
  41be14:	into   
  41be15:	stc    
  41be16:	sti    
  41be17:	mov    cs,WORD PTR [esi+0x620c3f64]
  41be1d:	mov    ah,0x3b
  41be1f:	sahf   
  41be20:	mov    ebp,0x699c8141
  41be25:	pop    edx
  41be26:	fwait
  41be27:	lods   eax,DWORD PTR ds:[esi]
  41be28:	mov    dl,BYTE PTR [ebx+edx*8+0x677a8965]
  41be2f:	cld    
  41be30:	jnp    0x41be24
  41be32:	stos   DWORD PTR es:[edi],eax
  41be33:	or     BYTE PTR [edi+eiz*2+0x4d],bl
  41be37:	hlt    
  41be38:	in     al,0x5
  41be3a:	das    
  41be3b:	mov    esp,edx
  41be3d:	rcr    ecx,cl
  41be3f:	lahf   
  41be40:	bound  edx,QWORD PTR [ecx]
  41be42:	fidivr WORD PTR [ecx+0x172e032b]
  41be48:	pop    edx
  41be49:	in     eax,dx
  41be4a:	and    al,0xb8
  41be4c:	dec    edi
  41be4d:	push   esp
  41be4e:	icebp  
  41be4f:	out    dx,al
  41be50:	or     BYTE PTR [eax-0x1d0beda5],al
  41be56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be57:	mov    ebx,DWORD PTR [esi-0x6a]
  41be5a:	adc    eax,0xf6d94228
  41be5f:	inc    esi
  41be60:	sub    cl,BYTE PTR [eax]
  41be62:	dec    edx
  41be63:	sub    esp,eax
  41be65:	xor    al,0xbe
  41be67:	jecxz  0x41be6f
  41be69:	cmp    dh,al
  41be6b:	sub    al,0x3d
  41be6d:	leave  
  41be6e:	addr16 pop edi
  41be70:	rol    DWORD PTR ds:0xc344a6d2,0x74
  41be77:	lahf   
  41be78:	jmp    0x41bec6
  41be7a:	and    al,0xff
  41be7c:	push   es
  41be7d:	jge    0x41be99
  41be7f:	fxch   st(0)
  41be81:	adc    eax,DWORD PTR cs:[ebx+0x5f]
  41be85:	mov    al,ds:0x66d0c1d5
  41be8a:	scas   eax,DWORD PTR es:[edi]
  41be8b:	popf   
  41be8c:	mov    ds:0x14ca979f,eax
  41be91:	mov    ?,WORD PTR [edi+edi*8-0x73d165d6]
  41be98:	push   ecx
  41be99:	aas    
  41be9a:	iret   
  41be9b:	push   esi
  41be9c:	dec    esi
  41be9d:	nop
  41be9e:	daa    
  41be9f:	jo     0x41beee
  41bea1:	pusha  
  41bea2:	xchg   ebx,eax
  41bea3:	push   esp
  41bea4:	ins    BYTE PTR es:[edi],dx
  41bea5:	push   esi
  41bea6:	cld    
  41bea7:	out    dx,al
  41bea8:	add    al,0x7a
  41beaa:	test   eax,0xf97954d1
  41beaf:	or     esp,0xffffff92
  41beb2:	daa    
  41beb3:	pop    edi
  41beb4:	fdivr  QWORD PTR [ecx+eiz*1-0x7d]
  41beb8:	xchg   ebx,eax
  41beb9:	(bad)  
  41beba:	sub    eax,0x74f9220e
  41bebf:	pop    es
  41bec0:	outs   dx,DWORD PTR ds:[esi]
  41bec1:	jns    0x41bf0f
  41bec3:	or     BYTE PTR [esi],ch
  41bec5:	xchg   edx,eax
  41bec6:	or     esi,edi
  41bec8:	test   BYTE PTR [edx-0x4a],cl
  41becb:	ja     0x41be70
  41becd:	retf   
  41bece:	ret    
  41becf:	inc    ebx
  41bed0:	nop
  41bed1:	pop    esp
  41bed2:	pop    ebx
  41bed3:	sub    edx,ebp
  41bed5:	add    eax,0xcde35b28
  41beda:	jmp    0x93542f3e
  41bedf:	mov    ah,al
  41bee1:	push   0x46
  41bee3:	sbb    edx,DWORD PTR [ebx]
  41bee5:	mov    DWORD PTR [edx],ebp
  41bee7:	int    0x5c
  41bee9:	mov    ebp,0x4f348aa3
  41beee:	adc    eax,0xed5d0d7b
  41bef3:	loop   0x41bf25
  41bef5:	pusha  
  41bef6:	pop    ecx
  41bef7:	sub    BYTE PTR [ebx-0x6d59337b],dh
  41befd:	hlt    
  41befe:	pop    es
  41beff:	cmp    eax,DWORD PTR [ebx+0x224200bc]
  41bf05:	xchg   ebp,eax
  41bf06:	test   eax,0xbb09c757
  41bf0b:	das    
  41bf0c:	cmp    edi,DWORD PTR [eax-0x5e]
  41bf0f:	xchg   edx,eax
  41bf10:	add    dh,0x2f
  41bf13:	(bad)  
  41bf14:	loope  0x41bede
  41bf16:	ja     0x41beb2
  41bf18:	lock inc esp
  41bf1a:	mov    ah,0x94
  41bf1c:	mov    cl,0x3f
  41bf1e:	pop    edi
  41bf1f:	ret    
  41bf20:	adc    ch,ch
  41bf22:	(bad)  
  41bf23:	neg    DWORD PTR [ebp-0x50]
  41bf26:	adc    BYTE PTR [eax],dl
  41bf28:	mul    bl
  41bf2a:	rol    DWORD PTR [edi],1
  41bf2c:	jl     0x41bf6e
  41bf2e:	push   ss
  41bf2f:	mov    ds:0x29616893,eax
  41bf34:	mov    ecx,0xb4dd7d6b
  41bf39:	mov    ebx,0x409c47a7
  41bf3e:	xchg   ecx,eax
  41bf3f:	inc    ebp
  41bf40:	mov    ebx,0xc060f1bf
  41bf45:	leave  
  41bf46:	std    
  41bf47:	ds pop ebx
  41bf49:	shl    edi,0xd3
  41bf4c:	ins    DWORD PTR es:[edi],dx
  41bf4d:	out    dx,eax
  41bf4e:	ss dec bx
  41bf51:	out    dx,eax
  41bf52:	sahf   
  41bf53:	shl    DWORD PTR [edx-0x5],1
  41bf56:	jnp    0x41bf97
  41bf58:	jmp    0x41bf1e
  41bf5a:	shl    DWORD PTR [edi+0x35105ed5],1
  41bf60:	or     al,0x3a
  41bf62:	or     bl,BYTE PTR [esi-0x80]
  41bf65:	pop    esp
  41bf66:	push   es
  41bf67:	enter  0x6064,0xfb
  41bf6b:	sub    eax,0x1c5df45e
  41bf70:	(bad)  
  41bf71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf72:	pop    edi
  41bf73:	jae    0x41bf30
  41bf75:	mov    esi,0x80e37b13
  41bf7a:	ret    
  41bf7b:	adc    ch,BYTE PTR [edi-0x10a19a33]
  41bf81:	sbb    eax,0xbb86f221
  41bf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf87:	cli    
  41bf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf89:	ror    BYTE PTR [edi-0x24],0xd0
  41bf8d:	mov    WORD PTR [eax-0x76e234c8],cs
  41bf93:	data16 mov ds:0x5115d2da,al
  41bf99:	jbe    0x41bf9f
  41bf9b:	mov    ecx,0x247687c2
  41bfa0:	pushf  
  41bfa1:	scas   al,BYTE PTR es:[edi]
  41bfa2:	adc    DWORD PTR [eax],esi
  41bfa4:	(bad)  
  41bfa5:	jge    0x41bf92
  41bfa7:	or     BYTE PTR [ecx-0x2d74c2b2],bh
  41bfad:	mov    bl,0x48
  41bfaf:	mov    al,ds:0x1b312590
  41bfb4:	lea    ebx,[esi+0x56]
  41bfb7:	adc    BYTE PTR [edi],0xe0
  41bfba:	es scas al,BYTE PTR es:[edi]
  41bfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfbd:	js     0x41c007
  41bfbf:	push   eax
  41bfc0:	dec    eax
  41bfc1:	cmc    
  41bfc2:	mov    eax,ds:0xa8389116
  41bfc7:	das    
  41bfc8:	fstp   TBYTE PTR [edi+0x2e]
  41bfcb:	mov    ax,ds:0xd7cb0eeb
  41bfd1:	mov    eax,ds:0xa1d05afb
  41bfd6:	push   cs
  41bfd7:	mov    dl,0x6b
  41bfd9:	lods   eax,DWORD PTR ds:[esi]
  41bfda:	hlt    
  41bfdb:	or     DWORD PTR [ebp-0x75],eax
  41bfde:	or     esi,DWORD PTR [ecx-0x10]
  41bfe1:	or     DWORD PTR [ebp+0x2],esi
  41bfe4:	daa    
  41bfe5:	bound  eax,QWORD PTR [eax]
  41bfe7:	xor    edi,DWORD PTR [eax+edx*8-0x14]
  41bfeb:	pop    esi
  41bfec:	test   BYTE PTR [eax-0x7a],cl
  41bfef:	adc    DWORD PTR [eax+0x6664fd6c],edx
  41bff5:	pop    ds
  41bff6:	adc    BYTE PTR [ebx+0x731b5401],ch
  41bffc:	inc    ebx
  41bffd:	dec    edx
  41bffe:	shr    DWORD PTR [eax],0x0
  41c001:	add    dh,cl
  41c003:	pop    eax
  41c004:	mov    DWORD PTR [edx],ebp
  41c006:	and    eax,0x28573207
  41c00b:	les    ecx,FWORD PTR es:[esi+edi*2+0x4f749b46]
  41c013:	(bad)  
  41c014:	aas    
  41c015:	cmp    esp,DWORD PTR [eax]
  41c017:	pushf  
  41c018:	inc    esp
  41c019:	shl    ebx,1
  41c01b:	cmp    BYTE PTR [esi-0x7661a4a1],ah
  41c021:	pop    ebp
  41c022:	test   BYTE PTR [edi+eiz*4+0x6f3a834a],0xa1
  41c02a:	jecxz  0x41c052
  41c02c:	call   0xb169b376
  41c031:	xlat   BYTE PTR ds:[ebx]
  41c032:	dec    edi
  41c033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c034:	call   0xb1f13373
  41c039:	jns    0x41c01e
  41c03b:	cwde   
  41c03c:	popf   
  41c03d:	or     al,0xd0
  41c03f:	or     al,0x48
  41c041:	xchg   esi,eax
  41c042:	ret    
  41c043:	test   al,0xe6
  41c045:	xchg   ebp,eax
  41c046:	jge    0x41c0bf
  41c048:	mov    edx,DWORD PTR [eax+0x115f8819]
  41c04e:	sub    DWORD PTR [ebp+0x25],esi
  41c051:	mov    edi,0x9af33681
  41c056:	les    ecx,FWORD PTR [edi]
  41c058:	outs   dx,BYTE PTR ds:[esi]
  41c059:	add    ch,BYTE PTR ds:0xeb3b73a3
  41c05f:	inc    edi
  41c060:	sbb    esi,DWORD PTR [edi+0x20]
  41c063:	sbb    eax,0x24ca789a
  41c068:	mov    DWORD PTR [eax-0x4b636982],0x6d3d8e80
  41c072:	add    al,0xde
  41c074:	(bad)  
  41c076:	(bad)  
  41c077:	push   ds
  41c078:	test   al,0xe7
  41c07a:	sub    eax,0x54c43c13
  41c07f:	enter  0x5a09,0xb4
  41c083:	ret    0x8fb7
  41c086:	call   0x621:0x853df3fa
  41c08d:	dec    edx
  41c08e:	outs   dx,BYTE PTR ds:[esi]
  41c08f:	stc    
  41c090:	or     BYTE PTR [edi-0x21],ch
  41c093:	dec    edx
  41c094:	mov    esp,0x703f6a36
  41c099:	ins    DWORD PTR es:[edi],dx
  41c09a:	pop    edi
  41c09b:	clc    
  41c09c:	cwde   
  41c09d:	(bad)
  41c0a1:	neg    BYTE PTR [ebp+0x77]
  41c0a4:	scas   al,BYTE PTR es:[edi]
  41c0a5:	sub    BYTE PTR [ecx-0x69],dl
  41c0a8:	sbb    al,0x79
  41c0aa:	mov    ch,0x96
  41c0ac:	idiv   DWORD PTR ds:[esp+ebp*4+0x7ff73caa]
  41c0b4:	sbb    al,BYTE PTR [edi+eax*8]
  41c0b7:	pop    esp
  41c0b8:	jmp    DWORD PTR [eax]
  41c0ba:	cli    
  41c0bb:	inc    edi
  41c0bc:	mov    dl,0x54
  41c0be:	adc    ch,BYTE PTR [esi-0x51]
  41c0c1:	add    ebx,DWORD PTR ds:0xea2b2ed6
  41c0c7:	(bad)  
  41c0c8:	mov    ds:0x37529f45,eax
  41c0cd:	fmulp  st(3),st
  41c0cf:	rcr    BYTE PTR ds:0x4026ffb4,cl
  41c0d5:	jo     0x41c09f
  41c0d7:	aad    0x56
  41c0d9:	xchg   esp,eax
  41c0da:	dec    ebx
  41c0db:	or     al,0xcb
  41c0dd:	inc    edi
  41c0de:	stos   DWORD PTR es:[edi],eax
  41c0df:	add    eax,0xdf988a83
  41c0e4:	or     cl,BYTE PTR [eax]
  41c0e6:	inc    esp
  41c0e7:	mov    ebp,DWORD PTR [ebp-0x1ae5fc9b]
  41c0ed:	fcmovu st,st(1)
  41c0ef:	aam    0x6e
  41c0f1:	lods   eax,DWORD PTR ds:[esi]
  41c0f2:	sbb    DWORD PTR [eax],0x3e
  41c0f5:	lahf   
  41c0f6:	ret    0x533d
  41c0f9:	in     al,0xeb
  41c0fb:	aaa    
  41c0fc:	in     al,0x71
  41c0fe:	xlat   BYTE PTR ds:[ebx]
  41c0ff:	push   edx
  41c100:	sub    esi,0xffffffb9
  41c103:	ret    0x70aa
  41c106:	dec    esi
  41c107:	mov    WORD PTR [edx],fs
  41c109:	pop    esp
  41c10a:	sbb    al,0x58
  41c10c:	dec    esp
  41c10d:	(bad)  
  41c10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c10f:	adc    dl,BYTE PTR [ebx+0x30]
  41c112:	es out dx,eax
  41c114:	je     0x41c0af
  41c116:	clc    
  41c117:	push   0x7
  41c119:	outs   dx,BYTE PTR ds:[esi]
  41c11a:	pop    ebx
  41c11b:	stos   BYTE PTR es:[edi],al
  41c11c:	mov    dl,0xed
  41c11e:	jns    0x41c15c
  41c120:	rol    DWORD PTR [eax],cl
  41c122:	pushf  
  41c123:	pushf  
  41c124:	retf   
  41c125:	in     al,dx
  41c126:	adc    BYTE PTR [edx+edx*4+0xcb06f0e],cl
  41c12d:	and    BYTE PTR [eax-0x8],dh
  41c130:	mov    es,WORD PTR [esi-0x6605c85f]
  41c136:	jbe    0x41c1b5
  41c138:	jp     0x41c0f7
  41c13a:	jge    0x41c1a9
  41c13c:	test   al,0x90
  41c13e:	ins    BYTE PTR es:[edi],dx
  41c13f:	std    
  41c140:	fistp  DWORD PTR [edx-0x32]
  41c143:	enter  0xf016,0x29
  41c147:	mov    eax,ds:0x1cec3669
  41c14c:	es dec esp
  41c14e:	mov    dl,0x7
  41c150:	rol    BYTE PTR [ecx+ebx*8+0x1a],0xbc
  41c155:	sti    
  41c156:	push   cs
  41c157:	add    eax,0x6d578739
  41c15c:	mov    bl,0x96
  41c15e:	fmul   QWORD PTR [edi+esi*1-0x7]
  41c162:	lea    esp,[ebx]
  41c164:	out    dx,al
  41c165:	push   0xef2adefe
  41c16a:	in     al,0x1c
  41c16c:	jle    0x41c10e
  41c16e:	inc    ecx
  41c16f:	ret    0xf1f2
  41c172:	and    BYTE PTR [ebx+0x23],cl
  41c175:	(bad)  
  41c176:	loop   0x41c14b
  41c178:	(bad)  
  41c179:	test   eax,0x61cb9991
  41c17e:	es (bad) 
  41c180:	cmp    eax,eax
  41c182:	push   esi
  41c183:	jns    0x41c12b
  41c185:	cmp    BYTE PTR [edx-0x23950814],dh
  41c18b:	imul   edi,DWORD PTR [edx+esi*4],0xc960ab45
  41c192:	lahf   
  41c193:	or     ebp,DWORD PTR [esi]
  41c195:	mov    dh,BYTE PTR [edx+0x46e946bc]
  41c19b:	shr    BYTE PTR [ecx-0x73],cl
  41c19e:	aas    
  41c19f:	ds in  al,0xb2
  41c1a2:	outs   dx,BYTE PTR ds:[esi]
  41c1a3:	inc    esi
  41c1a4:	ss push 0x2bb52c47
  41c1aa:	adc    edi,DWORD PTR [eax]
  41c1ac:	jns    0x41c1d9
  41c1ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1af:	push   esp
  41c1b0:	ss cwde 
  41c1b2:	mov    esi,0x8ad725e1
  41c1b7:	aad    0x12
  41c1b9:	jb     0x41c221
  41c1bb:	xchg   ebx,eax
  41c1bc:	or     al,0x99
  41c1be:	inc    edi
  41c1bf:	scas   al,BYTE PTR es:[edi]
  41c1c0:	jmp    0xe140:0x5aa5bdb0
  41c1c7:	jp     0x41c158
  41c1c9:	xchg   ebx,eax
  41c1ca:	jmp    0x5851:0x87fa2c16
  41c1d1:	pop    ds
  41c1d2:	in     eax,dx
  41c1d3:	(bad)  
  41c1d4:	mov    ebp,0x3b1e683c
  41c1d9:	inc    ebp
  41c1da:	lds    esp,FWORD PTR [ebx]
  41c1dc:	in     eax,dx
  41c1dd:	xchg   bh,dl
  41c1df:	bound  esi,QWORD PTR [ecx]
  41c1e1:	mov    ecx,0x33c07a01
  41c1e6:	sub    dh,BYTE PTR ds:0xe5c5757d
  41c1ec:	and    ecx,edi
  41c1ee:	jo     0x41c1de
  41c1f0:	fs dec esp
  41c1f2:	mov    al,ss:0x706a0bac
  41c1f8:	test   eax,0x48516c13
  41c1fd:	sti    
  41c1fe:	ror    DWORD PTR [edi+edi*8],0xa7
  41c202:	imul   ebx,DWORD PTR [esi],0xffffffce
  41c205:	(bad)  
  41c206:	shl    ch,0x24
  41c209:	(bad)  
  41c20a:	stos   DWORD PTR es:[edi],eax
  41c20b:	ss ja  0x41c260
  41c20e:	lahf   
  41c20f:	mov    eax,0x7efc8bfe
  41c215:	cmp    DWORD PTR ds:0xf393555c,ebp
  41c21b:	push   es
  41c21c:	pushf  
  41c21d:	mov    esp,0x53bdfc9c
  41c222:	out    dx,eax
  41c223:	or     eax,0x1e87769a
  41c228:	push   edx
  41c229:	pop    ecx
  41c22a:	push   esi
  41c22b:	pusha  
  41c22c:	gs mov edi,0x2d48b498
  41c232:	inc    edi
  41c233:	sahf   
  41c234:	in     eax,0x79
  41c236:	lods   eax,DWORD PTR ds:[esi]
  41c237:	sub    bh,BYTE PTR [eax-0x60d4721]
  41c23d:	nop
  41c23e:	mov    cl,0x7a
  41c240:	jg     0x41c25a
  41c242:	mov    esi,0x62e903d7
  41c247:	sar    esp,1
  41c249:	ins    DWORD PTR es:[edi],dx
  41c24a:	(bad)  
  41c24b:	lock inc esp
  41c24d:	shl    BYTE PTR [esi+0x2650547a],1
  41c253:	sti    
  41c254:	inc    eax
  41c255:	and    eax,0x4d3af854
  41c25a:	adc    BYTE PTR ds:0x7701b5a7,bh
  41c260:	ds mov edx,ecx
  41c263:	pop    edi
  41c264:	aaa    
  41c265:	daa    
  41c266:	sub    DWORD PTR gs:[ebx+0x4413fde],esp
  41c26d:	sub    al,0x83
  41c26f:	arpl   WORD PTR [eax+0x6],dx
  41c272:	jp     0x41c291
  41c274:	pop    ebx
  41c275:	inc    edx
  41c276:	push   edx
  41c277:	push   edi
  41c278:	pop    ss
  41c279:	adc    al,0xb3
  41c27b:	dec    edi
  41c27c:	gs popa 
  41c27e:	ins    BYTE PTR es:[edi],dx
  41c27f:	js     0x41c2bb
  41c281:	mov    BYTE PTR [edi+ebp*1],ah
  41c284:	cmp    BYTE PTR ds:0x2c39e5ef,bl
  41c28a:	inc    ebx
  41c28b:	mov    BYTE PTR [edx],0xf1
  41c28e:	add    al,BYTE PTR [ecx+0x47c18df3]
  41c294:	data16 int 0x9d
  41c297:	or     cl,BYTE PTR [esi]
  41c299:	div    BYTE PTR [ecx+0x3c]
  41c29c:	pop    eax
  41c29d:	mov    cl,0x16
  41c29f:	pop    ebp
  41c2a0:	jo     0x41c31c
  41c2a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2a3:	pop    ds
  41c2a4:	pushf  
  41c2a5:	pop    ebp
  41c2a6:	sbb    BYTE PTR [edi+0x1310202a],dh
  41c2ac:	je     0x41c2c6
  41c2ae:	sbb    eax,0x5c10dfe4
  41c2b3:	or     al,0x6f
  41c2b5:	or     eax,0xd4535c5b
  41c2ba:	jb     0x41c2e8
  41c2bc:	sub    DWORD PTR gs:[edi+0x6bedae07],esp
  41c2c3:	test   DWORD PTR [ebx+edi*8],0xa2420f19
  41c2ca:	mov    eax,0x103b65cb
  41c2cf:	xchg   DWORD PTR [edi+0x5443971e],edi
  41c2d5:	fistp  DWORD PTR [ebx+0x6d]
  41c2d8:	xchg   esp,eax
  41c2d9:	call   0xbe303994
  41c2de:	es retf 0xe352
  41c2e2:	pop    esi
  41c2e3:	cmp    ebx,ecx
  41c2e5:	mov    eax,eax
  41c2e7:	stos   BYTE PTR es:[edi],al
  41c2e8:	cmp    eax,0x11353ed0
  41c2ed:	ins    BYTE PTR es:[edi],dx
  41c2ee:	ins    DWORD PTR es:[edi],dx
  41c2ef:	mov    al,ds:0x66304537
  41c2f4:	shr    DWORD PTR [eax-0x35],cl
  41c2f7:	sahf   
  41c2f8:	jno    0x41c2ad
  41c2fa:	or     eax,0xf4477c59
  41c2ff:	mov    ebp,0xaac4f7e7
  41c304:	jge    0x41c309
  41c306:	mov    ds,WORD PTR [edi-0x3f6b480f]
  41c30c:	or     ah,BYTE PTR [ebx+0x46]
  41c30f:	rcl    BYTE PTR [ebx-0x11],1
  41c312:	cmp    DWORD PTR [ecx-0x7e],0xffffff93
  41c316:	xor    ah,cl
  41c318:	fadd   DWORD PTR [esi]
  41c31a:	int    0x5f
  41c31c:	add    esp,DWORD PTR [esi]
  41c31e:	test   ecx,edi
  41c320:	pusha  
  41c321:	jns    0x41c2c7
  41c323:	int3   
  41c324:	jbe    0x41c2ad
  41c326:	mov    al,0x9
  41c328:	ins    BYTE PTR es:[edi],dx
  41c329:	mov    ebx,DWORD PTR [ecx+0x7a087ed4]
  41c32f:	add    al,0x74
  41c331:	ins    BYTE PTR es:[edi],dx
  41c332:	std    
  41c333:	ss push edi
  41c335:	shl    DWORD PTR [ecx+0x60412756],cl
  41c33b:	and    ebp,DWORD PTR [eax+0x6e]
  41c33e:	pushw  ds
  41c340:	add    eax,0xe9538971
  41c345:	or     eax,0x584b5ca8
  41c34a:	in     eax,0x10
  41c34c:	jb     0x41c3c8
  41c34e:	mov    eax,ds:0xa20c74d2
  41c353:	rcl    BYTE PTR [edi+0x6c],1
  41c356:	sbb    eax,esp
  41c358:	sub    edx,DWORD PTR [ebp+eiz*4+0x69]
  41c35c:	test   edi,ebx
  41c35e:	mov    al,0x4f
  41c360:	dec    ebp
  41c361:	jl     0x41c2ec
  41c363:	lock or ch,BYTE PTR [ebx]
  41c366:	adc    al,0xa2
  41c368:	cs inc edi
  41c36a:	aaa    
  41c36b:	retf   0xd3dd
  41c36e:	or     DWORD PTR [edi-0x14],edi
  41c371:	add    eax,ebp
  41c373:	adc    BYTE PTR [ebx],bl
  41c375:	push   ebx
  41c376:	scas   eax,DWORD PTR es:[edi]
  41c377:	shr    esp,1
  41c379:	dec    edi
  41c37a:	jae    0x35e038df
  41c380:	dec    esp
  41c381:	add    ebx,DWORD PTR [edi-0x609fa8a9]
  41c387:	out    dx,eax
  41c388:	ja     0x41c346
  41c38a:	jne    0x41c344
  41c38c:	xlat   BYTE PTR ds:[ebx]
  41c38d:	leave  
  41c38e:	popa   
  41c38f:	js     0x41c37f
  41c391:	inc    ebp
  41c392:	shl    bh,1
  41c394:	shr    DWORD PTR [ebx+0x24],cl
  41c397:	dec    esp
  41c398:	jl     0x41c32b
  41c39a:	sub    eax,0xddd3e4ad
  41c39f:	adc    eax,0x20e64b34
  41c3a4:	aaa    
  41c3a5:	mov    al,BYTE PTR [esp+edi*1+0xd5c1e79]
  41c3ac:	sbb    eax,0xdd05cc6e
  41c3b1:	aad    0x22
  41c3b3:	push   ds
  41c3b4:	xchg   esp,eax
  41c3b5:	push   edi
  41c3b6:	int    0xf4
  41c3b8:	sub    eax,0xd84a0cdb
  41c3bd:	leave  
  41c3be:	adc    eax,0x5e332fc8
  41c3c3:	fdivr  DWORD PTR es:[esi+eax*4+0x7]
  41c3c8:	mov    ebp,0x5e46b722
  41c3cd:	or     eax,0x9034560a
  41c3d2:	daa    
  41c3d3:	das    
  41c3d4:	inc    ecx
  41c3d5:	rcr    DWORD PTR [ecx+eax*8+0x2b],cl
  41c3d9:	add    BYTE PTR [eax-0x2b628580],bh
  41c3df:	jmp    0xa691:0xea05b1a3
  41c3e6:	fistp  WORD PTR [ecx*4+0x4068a53c]
  41c3ed:	push   ecx
  41c3ee:	pop    es
  41c3ef:	xchg   ebx,eax
  41c3f0:	test   DWORD PTR [ebx+0x59],edx
  41c3f3:	mov    ebp,0x5d64cbc9
  41c3f8:	jae    0x41c403
  41c3fa:	outs   dx,BYTE PTR cs:[esi]
  41c3fc:	push   cs
  41c3fd:	xchg   ecx,ebp
  41c3ff:	jne    0x41c38c
  41c401:	pop    eax
  41c402:	es push edx
  41c404:	pop    ebx
  41c405:	push   edx
  41c406:	cli    
  41c407:	mov    eax,ds:0xd6879aac
  41c40c:	push   0xffffffa9
  41c40e:	mov    WORD PTR [edi+0x72],es
  41c411:	and    ecx,DWORD PTR [ebp+edi*8-0x54]
  41c415:	loope  0x41c409
  41c417:	xor    bh,al
  41c419:	pop    ecx
  41c41a:	xor    edx,DWORD PTR cs:[edi-0x22b6cd32]
  41c421:	inc    ebx
  41c422:	sub    bh,BYTE PTR [ecx+0x46]
  41c425:	pop    edi
  41c426:	mov    eax,0x7455c102
  41c42b:	scas   eax,DWORD PTR es:[edi]
  41c42c:	push   edi
  41c42d:	(bad)  [edx+0x7fe173eb]
  41c433:	inc    ecx
  41c434:	scas   al,BYTE PTR es:[edi]
  41c435:	test   bh,0x51
  41c438:	jne    0x41c4b6
  41c43a:	(bad)  
  41c43b:	pop    esp
  41c43c:	and    cl,BYTE PTR [ecx+0x1b45246e]
  41c442:	mov    esi,0x6443a34e
  41c447:	mov    ds,esp
  41c449:	inc    ecx
  41c44a:	aad    0xb6
  41c44c:	pop    es
  41c44d:	jne    0x41c479
  41c44f:	cmp    ebp,ecx
  41c451:	dec    ebp
  41c452:	and    eax,0x3b07f311
  41c457:	ja     0x41c3dd
  41c459:	mov    al,ds:0x2389941e
  41c45e:	adc    eax,esi
  41c460:	or     bh,ch
  41c462:	test   cl,al
  41c464:	xchg   edx,eax
  41c465:	adc    BYTE PTR [edx],ch
  41c467:	push   esi
  41c468:	retf   
  41c469:	es mov edi,0x2c0dfe07
  41c46f:	jmp    0x41c43b
  41c471:	adc    DWORD PTR [edx-0x441f2609],0xffffffa1
  41c478:	out    dx,eax
  41c479:	pop    ss
  41c47a:	add    dl,cl
  41c47c:	fbld   TBYTE PTR [ebx-0x7f]
  41c47f:	in     al,0x68
  41c481:	jo     0x41c497
  41c483:	imul   esi,DWORD PTR [esi+0x59b8a0cf],0xe0c5b8d3
  41c48d:	iret   
  41c48e:	sbb    BYTE PTR [ebx-0x35580705],0xc1
  41c495:	dec    edx
  41c496:	in     al,dx
  41c497:	add    bp,WORD PTR [edx+0x320f1687]
  41c49e:	xchg   esi,eax
  41c49f:	shl    al,cl
  41c4a1:	mov    edi,0x86622d4f
  41c4a6:	repz shl BYTE PTR [esi],0xe8
  41c4aa:	sbb    dl,al
  41c4ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ad:	daa    
  41c4ae:	add    DWORD PTR [ebp+0x560a6544],eax
  41c4b4:	jns    0x41c48b
  41c4b6:	(bad)  
  41c4b7:	fst    DWORD PTR [ebx]
  41c4b9:	sub    BYTE PTR [edi],0x9e
  41c4bc:	cmp    DWORD PTR [ebx],esp
  41c4be:	dec    esp
  41c4bf:	xchg   dl,dl
  41c4c1:	mov    ah,0x5a
  41c4c3:	das    
  41c4c4:	cld    
  41c4c5:	leave  
  41c4c6:	sar    dh,1
  41c4c8:	(bad)  
  41c4c9:	aad    0x1c
  41c4cb:	das    
  41c4cc:	in     eax,dx
  41c4cd:	fs inc ecx
  41c4cf:	ficom  WORD PTR [eax+eax*2]
  41c4d2:	sbb    al,0x44
  41c4d4:	test   eax,0x2e94d41d
  41c4d9:	cli    
  41c4da:	cli    
  41c4db:	mov    cl,0x6a
  41c4dd:	pop    ds
  41c4de:	dec    ecx
  41c4df:	addr16 mov edx,0x81c42ad8
  41c4e5:	jns    0x41c4eb
  41c4e7:	sbb    BYTE PTR [eax-0x2512a589],bl
  41c4ed:	pandn  mm5,QWORD PTR [ebp-0x730d4f5a]
  41c4f4:	outs   dx,DWORD PTR ds:[esi]
  41c4f5:	call   0x84fe7b64
  41c4fa:	leave  
  41c4fb:	push   0xf43a0f93
  41c500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c501:	out    dx,eax
  41c502:	outs   dx,BYTE PTR ds:[esi]
  41c503:	fimul  DWORD PTR [eax-0x4d]
  41c506:	xchg   esi,eax
  41c507:	addr16 cdq 
  41c509:	adc    dl,al
  41c50b:	xor    ah,dh
  41c50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c50e:	lods   eax,DWORD PTR ds:[esi]
  41c50f:	mov    BYTE PTR [edi+edi*8],dh
  41c512:	mov    ecx,0x6c521e09
  41c517:	pop    esi
  41c518:	pusha  
  41c519:	outs   dx,DWORD PTR ds:[esi]
  41c51a:	leave  
  41c51b:	loop   0x41c53e
  41c51d:	jecxz  0x41c4a5
  41c51f:	div    BYTE PTR [edx]
  41c521:	jg     0x41c4c0
  41c523:	sub    al,cl
  41c525:	push   ds
  41c526:	enter  0x6b87,0xeb
  41c52a:	jl     0x41c4bd
  41c52c:	inc    ecx
  41c52d:	mov    WORD PTR [esp+ebp*1+0x54],gs
  41c531:	push   edx
  41c532:	jb     0x41c533
  41c534:	je     0x41c4d0
  41c536:	(bad)  
  41c539:	(bad)  
  41c53a:	inc    BYTE PTR [edi+eiz*1+0x7eaa5a65]
  41c541:	xor    al,0x21
  41c543:	jmp    0xa40d:0x49ea8931
  41c54a:	into   
  41c54b:	data16 std 
  41c54d:	ret    
  41c54e:	jl     0x41c4fc
  41c550:	inc    edx
  41c551:	jb     0x41c56f
  41c553:	jg     0x41c512
  41c555:	arpl   si,bp
  41c557:	neg    BYTE PTR [edi-0x6a]
  41c55a:	outs   dx,BYTE PTR ds:[esi]
  41c55b:	dec    ebx
  41c55c:	sti    
  41c55d:	hlt    
  41c55e:	jnp    0x41c540
  41c560:	jmp    0x41c53b
  41c562:	stos   BYTE PTR es:[edi],al
  41c563:	cmp    ecx,ebx
  41c565:	jecxz  0x41c540
  41c567:	or     ch,ah
  41c569:	iret   
  41c56a:	ret    
  41c56b:	push   esp
  41c56c:	mov    ds:0x48e00df8,al
  41c571:	sti    
  41c572:	sar    cl,cl
  41c574:	mov    DWORD PTR [edx-0x22],ecx
  41c577:	jnp    0x41c5a2
  41c579:	call   0x942cfe01
  41c57e:	inc    edx
  41c57f:	sbb    ch,ah
  41c581:	shl    ecx,0x86
  41c584:	push   edi
  41c585:	or     al,0xaa
  41c587:	pop    ebp
  41c588:	add    al,0xbd
  41c58a:	or     bh,BYTE PTR [edx+0x12d28136]
  41c590:	je     0x41c5ea
  41c592:	cs mov bh,0xe1
  41c595:	pushf  
  41c596:	push   ds
  41c597:	hlt    
  41c598:	inc    eax
  41c599:	lea    esp,[ebp+0x2]
  41c59c:	aad    0xc9
  41c59e:	(bad)  
  41c59f:	aas    
  41c5a0:	xchg   edx,eax
  41c5a1:	sbb    al,BYTE PTR [eax]
  41c5a3:	into   
  41c5a4:	scas   eax,DWORD PTR es:[edi]
  41c5a5:	sahf   
  41c5a6:	xchg   esi,eax
  41c5a7:	push   ds
  41c5a8:	dec    esi
  41c5a9:	lea    ebp,[esi*2+0x67080892]
  41c5b0:	dec    edx
  41c5b1:	jmp    0x41c582
  41c5b3:	dec    esi
  41c5b4:	and    BYTE PTR [edx+0x78],cl
  41c5b7:	mov    DWORD PTR [eax-0x15dc1b55],ecx
  41c5bd:	dec    edi
  41c5be:	(bad)  
  41c5bf:	das    
  41c5c0:	mov    ds:0x29af61c4,eax
  41c5c5:	inc    esp
  41c5c6:	popa   
  41c5c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5c8:	mov    esi,0xe25f33c6
  41c5cd:	push   0xe77f991c
  41c5d2:	lahf   
  41c5d3:	movd   DWORD PTR [eax-0x52],mm1
  41c5d7:	push   esi
  41c5d8:	repz das 
  41c5da:	push   cs
  41c5db:	sti    
  41c5dc:	cmp    eax,0x6ba2cf3c
  41c5e1:	loopne 0x41c5de
  41c5e3:	mov    ah,0x4d
  41c5e5:	pop    eax
  41c5e6:	sbb    eax,0x109cbf5a
  41c5eb:	jnp    0x41c589
  41c5ed:	pop    eax
  41c5ef:	shl    ebx,0xe
  41c5f2:	pop    ebx
  41c5f3:	xlat   BYTE PTR ds:[ebx]
  41c5f4:	clc    
  41c5f5:	arpl   sp,dx
  41c5f7:	xchg   esp,eax
  41c5f8:	aam    0x4d
  41c5fa:	pop    ss
  41c5fb:	and    bh,BYTE PTR [eax+0x36f9eec]
  41c601:	scas   eax,DWORD PTR es:[edi]
  41c602:	fs popa 
  41c604:	mov    cl,0x2e
  41c606:	mov    esi,0x46dd1c18
  41c60b:	cwde   
  41c60c:	jne    0x41c5d4
  41c60e:	fs in  eax,0xd2
  41c611:	mov    bl,0xbb
  41c613:	or     esi,DWORD PTR [ebp-0x451f957a]
  41c619:	and    eax,0x6943d5e9
  41c61e:	push   ebp
  41c61f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c620:	sub    esi,ebx
  41c622:	test   DWORD PTR [eax+0x23],ecx
  41c625:	ds fucom st(1)
  41c628:	jl     0x41c67d
  41c62a:	mov    bl,BYTE PTR [edi-0xfdbd24d]
  41c630:	mov    edx,0x26e2e53c
  41c635:	repz mov ah,0x2b
  41c638:	cmp    al,0x59
  41c63a:	bnd jne 0x41c641
  41c63d:	sbb    eax,0x48b9392c
  41c642:	lahf   
  41c643:	faddp  st(2),st
  41c645:	adc    DWORD PTR [ebx+0x1e],ecx
  41c648:	mov    ds,WORD PTR [ebp-0x1970670b]
  41c64e:	leave  
  41c64f:	fcomp  QWORD PTR [esp+eiz*4-0x17]
  41c653:	adc    eax,0xa364cb98
  41c658:	xchg   edx,eax
  41c659:	loopne 0x41c6d2
  41c65b:	ss imul esi,edx,0xaea60767
  41c662:	xor    edi,DWORD PTR [ecx]
  41c664:	jbe    0x41c61d
  41c666:	scas   al,BYTE PTR es:[edi]
  41c667:	gs push es
  41c669:	dec    ecx
  41c66a:	jg     0x41c642
  41c66c:	test   eax,0xa760fe5d
  41c671:	jmp    FWORD PTR [ebp+0x7f]
  41c674:	repz adc eax,0x32182200
  41c67a:	fimul  DWORD PTR [esi+0x61]
  41c67d:	mov    esp,0x8a21531a
  41c682:	sti    
  41c683:	xchg   ebp,eax
  41c684:	imul   dh
  41c686:	add    ch,BYTE PTR [ebx+0x46]
  41c689:	and    ebx,DWORD PTR [esp+edi*1]
  41c68c:	jmp    0x41c6ed
  41c68e:	sbb    eax,0x9843459a
  41c693:	cmp    DWORD PTR [ecx+0x5ee08561],eax
  41c699:	bound  esi,QWORD PTR [edx]
  41c69b:	clc    
  41c69c:	ins    DWORD PTR es:[edi],dx
  41c69d:	jge    0x41c6b5
  41c69f:	push   esp
  41c6a0:	bound  ebx,QWORD PTR [ebp-0x7c]
  41c6a3:	aad    0x39
  41c6a5:	xor    ah,BYTE PTR es:[eax-0x24]
  41c6a9:	mov    ebx,ds
  41c6ab:	push   esi
  41c6ac:	test   BYTE PTR [edx*8-0x1d75e603],dh
  41c6b3:	int    0x6e
  41c6b5:	xor    eax,0xf0ad0088
  41c6ba:	dec    esi
  41c6bb:	mov    edi,0xb2c2a983
  41c6c0:	lock popf 
  41c6c2:	pop    ebx
  41c6c3:	hlt    
  41c6c4:	lds    esp,FWORD PTR [ebx]
  41c6c6:	or     esp,DWORD PTR [edi+0x27]
  41c6c9:	inc    edi
  41c6ca:	stc    
  41c6cb:	ret    
  41c6cc:	push   esp
  41c6cd:	push   ds
  41c6ce:	nop
  41c6cf:	mov    al,0x58
  41c6d1:	push   0xffffffef
  41c6d3:	int    0x8c
  41c6d5:	stos   DWORD PTR es:[edi],eax
  41c6d6:	xlat   BYTE PTR ds:[ebx]
  41c6d7:	dec    esi
  41c6d8:	or     al,0xfc
  41c6da:	ficomp DWORD PTR [edx]
  41c6dc:	sub    edx,DWORD PTR [ebp-0x2b]
  41c6df:	jecxz  0x41c740
  41c6e1:	call   0xaf95:0x1baac843
  41c6e8:	jnp    0x41c67b
  41c6ea:	outs   dx,BYTE PTR ds:[esi]
  41c6eb:	test   BYTE PTR ss:[eax+ebp*8+0xc3cfced],cl
  41c6f3:	ret    0x6d49
  41c6f6:	inc    edx
  41c6f7:	scas   al,BYTE PTR es:[edi]
  41c6f8:	popa   
  41c6f9:	mov    dl,0xbb
  41c6fb:	pop    esi
  41c6fc:	mov    edi,0xed897c05
  41c701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c702:	int3   
  41c703:	mov    DWORD PTR [eax+esi*1+0x71218e9c],ecx
  41c70a:	and    BYTE PTR [eax-0x5a],cl
  41c70d:	xor    eax,ebx
  41c70f:	icebp  
  41c710:	sbb    BYTE PTR [edx+0x2f],bh
  41c713:	(bad)  
  41c714:	lea    edx,[esi-0xb7d6a9]
  41c71a:	loop   0x41c775
  41c71c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c71d:	inc    ecx
  41c71e:	push   ss
  41c71f:	test   BYTE PTR [edi+0x27f66300],dl
  41c725:	xchg   ecx,eax
  41c726:	sbb    BYTE PTR [ecx+eiz*4-0x2bcdfb4c],bh
  41c72d:	fwait
  41c72e:	mov    bl,0x67
  41c730:	push   ds
  41c731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c732:	enter  0x8cd2,0xc2
  41c736:	or     dl,BYTE PTR [ebx]
  41c738:	mov    ah,0x72
  41c73a:	imul   eax,DWORD PTR [esi+ecx*8-0x999fdbd],0xffffffe1
  41c742:	aas    
  41c743:	push   esi
  41c744:	sub    al,BYTE PTR [ecx+0x3af5351c]
  41c74a:	lods   eax,DWORD PTR ds:[esi]
  41c74b:	nop
  41c74c:	and    esp,DWORD PTR [edi-0xb22f870]
  41c752:	ja     0x41c743
  41c754:	cwde   
  41c755:	loop   0x41c797
  41c757:	pop    ebp
  41c758:	mov    bh,0x7b
  41c75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c75b:	push   es
  41c75c:	ror    BYTE PTR [ebp+0x133bf9ae],cl
  41c762:	fstp   TBYTE PTR [ebx-0x77416fca]
  41c768:	xor    al,0x91
  41c76a:	xor    dl,BYTE PTR [ebx+0x3a]
  41c76d:	call   0xbc07:0xd080636d
  41c774:	mov    al,ds:0x51964446
  41c779:	add    eax,0xa6587845
  41c77e:	jne    0x41c71e
  41c780:	pusha  
  41c781:	out    dx,al
  41c782:	popf   
  41c783:	adc    ebx,DWORD PTR [edx]
  41c785:	sub    BYTE PTR [eax-0x79e31ccf],0xe9
  41c78c:	in     al,0xd1
  41c78e:	fdiv   QWORD PTR [ecx-0x53]
  41c791:	ret    
  41c792:	push   ss
  41c793:	cmp    bh,dh
  41c795:	dec    esp
  41c796:	ins    DWORD PTR es:[edi],dx
  41c797:	jae    0x41c7be
  41c799:	pop    es
  41c79a:	push   edi
  41c79b:	pop    es
  41c79c:	add    eax,edx
  41c79e:	xchg   ebp,eax
  41c79f:	add    eax,DWORD PTR [edx-0x4a]
  41c7a2:	inc    BYTE PTR [edi-0x19474f9f]
  41c7a8:	je     0x41c816
  41c7aa:	add    al,0xf6
  41c7ac:	jmp    0xb269:0x46daf3ba
  41c7b3:	std    
  41c7b4:	or     al,0xca
  41c7b6:	sbb    al,0x5b
  41c7b8:	mov    edi,0x80ac09ef
  41c7bd:	mov    eax,ds:0x3299d45c
  41c7c2:	hlt    
  41c7c3:	ins    DWORD PTR es:[edi],dx
  41c7c4:	stc    
  41c7c5:	shl    BYTE PTR [ecx-0x5f],0xdc
  41c7c9:	inc    ebx
  41c7ca:	jg     0x889f94aa
  41c7d0:	push   edi
  41c7d1:	ret    
  41c7d2:	sbb    ebp,edi
  41c7d4:	cld    
  41c7d5:	xchg   edx,eax
  41c7d6:	xor    al,0x4d
  41c7d8:	arpl   di,ax
  41c7da:	stos   BYTE PTR es:[edi],al
  41c7db:	jecxz  0x41c77e
  41c7dd:	xchg   edx,eax
  41c7de:	jns    0x41c80c
  41c7e0:	xchg   ebp,eax
  41c7e1:	test   esi,edi
  41c7e3:	(bad)  
  41c7e4:	fmul   DWORD PTR [eax-0x3b]
  41c7e7:	pop    ebx
  41c7e8:	lahf   
  41c7e9:	inc    ebx
  41c7ea:	jecxz  0x41c7b6
  41c7ec:	std    
  41c7ed:	sbb    dl,BYTE PTR [ebx]
  41c7ef:	scas   eax,DWORD PTR es:[edi]
  41c7f0:	imul   ebx,eax,0xffffff81
  41c7f3:	retf   
  41c7f4:	(bad)  
  41c7f5:	cmp    dh,BYTE PTR [edi+0x67]
  41c7f8:	xchg   ebx,eax
  41c7f9:	inc    esp
  41c7fa:	lods   al,BYTE PTR fs:[esi]
  41c7fc:	dec    edi
  41c7fd:	adc    al,BYTE PTR [edi]
  41c7ff:	dec    esp
  41c800:	mov    esi,0x535142aa
  41c805:	(bad)  
  41c806:	mov    cl,0xe9
  41c808:	(bad)  
  41c809:	adc    edi,DWORD PTR [esi+0x77b85ea9]
  41c80f:	or     ebp,edx
  41c811:	cmp    al,0xd3
  41c813:	or     edi,DWORD PTR [eax-0x5c]
  41c816:	ins    DWORD PTR es:[edi],dx
  41c817:	sub    eax,0x88e32c93
  41c81c:	mov    al,ds:0x525638f7
  41c821:	pusha  
  41c822:	jne    0x41c811
  41c824:	and    eax,0xf4df5fbf
  41c829:	jb     0x41c7b2
  41c82b:	and    esi,esp
  41c82d:	jns    0x41c882
  41c82f:	mov    ah,0x2f
  41c831:	pusha  
  41c832:	rol    BYTE PTR [edx],1
  41c834:	imul   ebx,edx,0x3a4f6e82
  41c83a:	cmp    dh,BYTE PTR [edi]
  41c83c:	mov    ds:0xe74eaaae,al
  41c841:	jecxz  0x41c822
  41c843:	ror    BYTE PTR [ecx-0x6],0xf7
  41c847:	cmp    DWORD PTR [eax],ebp
  41c849:	(bad)  
  41c84a:	in     eax,0xd4
  41c84c:	je     0x41c7dd
  41c84e:	push   eax
  41c84f:	push   0xc01aee95
  41c854:	mov    ebp,0x3d9eadc5
  41c859:	imul   esi,DWORD PTR [ebx+0x1e],0xffffffeb
  41c85d:	stos   BYTE PTR es:[edi],al
  41c85e:	retf   0x7687
  41c861:	aad    0xa3
  41c863:	imul   eax,DWORD PTR [ebx+edx*1],0x6c
  41c867:	enter  0xf919,0x8f
  41c86b:	and    BYTE PTR [esi+eax*4+0x6410e218],ah
  41c872:	pop    ebp
  41c873:	sbb    eax,0x4b81798
  41c878:	rcr    DWORD PTR [ecx],1
  41c87a:	aad    0x60
  41c87c:	aas    
  41c87d:	add    al,0x19
  41c87f:	(bad)  
  41c880:	jns    0x41c84a
  41c882:	pushf  
  41c883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c884:	loope  0x41c8e1
  41c886:	cli    
  41c887:	hlt    
  41c888:	adc    bh,BYTE PTR [ebx]
  41c88a:	mov    ?,ebp
  41c88c:	xchg   ebx,eax
  41c88d:	dec    esi
  41c88e:	ror    BYTE PTR [edi],cl
  41c890:	mov    bl,0x21
  41c892:	std    
  41c893:	and    al,0x39
  41c895:	jbe    0x41c90e
  41c897:	(bad)  
  41c898:	push   edx
  41c899:	mov    eax,0x2d5054b2
  41c89e:	xor    eax,edx
  41c8a0:	push   esi
  41c8a1:	daa    
  41c8a2:	sbb    al,0x23
  41c8a4:	nop
  41c8a5:	mov    bl,0x3e
  41c8a7:	dec    edx
  41c8a8:	sbb    eax,0xd7bace5f
  41c8ad:	leave  
  41c8ae:	xchg   esi,eax
  41c8af:	mov    ch,0xb2
  41c8b1:	dec    edi
  41c8b2:	ret    
  41c8b3:	add    ebx,edx
  41c8b5:	sbb    ch,BYTE PTR [eax-0x28]
  41c8b8:	cmp    al,0x82
  41c8ba:	jge    0x41c8f1
  41c8bc:	fwait
  41c8bd:	(bad)
  41c8c1:	adc    DWORD PTR [ecx],esp
  41c8c3:	in     eax,dx
  41c8c4:	rcr    BYTE PTR [edi+0x3bbffc41],1
  41c8ca:	je     0x41c946
  41c8cc:	dec    edi
  41c8cd:	scas   al,BYTE PTR es:[di]
  41c8cf:	jb     0x41c930
  41c8d1:	inc    ebp
  41c8d2:	ret    
  41c8d3:	mov    esi,0x227646
  41c8d8:	and    al,BYTE PTR [eax+edx*8+0x2a]
  41c8dc:	sub    al,0x60
  41c8de:	shr    DWORD PTR [ecx-0xa59b14],cl
  41c8e4:	pop    ss
  41c8e5:	(bad)  
  41c8e7:	dec    esi
  41c8e8:	lea    esp,[ebp-0x4843d222]
  41c8ee:	outs   dx,BYTE PTR ds:[esi]
  41c8ef:	int    0x2f
  41c8f1:	popa   
  41c8f2:	test   al,0x41
  41c8f4:	in     al,dx
  41c8f5:	mov    dh,0x31
  41c8f7:	mov    ebx,0x18422d4e
  41c8fc:	stos   DWORD PTR es:[edi],eax
  41c8fd:	push   ds
  41c8fe:	mov    edx,0xfc6b0ab3
  41c903:	and    DWORD PTR [ebp+0x45],edx
  41c906:	cmc    
  41c907:	xor    eax,0x51890df
  41c90c:	daa    
  41c90d:	out    dx,al
  41c90e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c90f:	mov    bh,0x8
  41c911:	xlat   BYTE PTR ds:[ebx]
  41c912:	fld    DWORD PTR [edi]
  41c914:	mov    esp,ebx
  41c916:	adc    DWORD PTR [edi-0x21],edx
  41c919:	push   es
  41c91a:	and    eax,0x230a1797
  41c91f:	mov    fs,WORD PTR [ebx]
  41c921:	add    al,0x64
  41c923:	hlt    
  41c924:	mov    ch,0xfe
  41c926:	push   esp
  41c927:	sub    ebx,eax
  41c929:	lock add BYTE PTR [ebx],dh
  41c92c:	pop    edx
  41c92d:	pop    eax
  41c92e:	jb     0x41c8ec
  41c930:	push   es
  41c931:	repz push ecx
  41c933:	mov    al,0xd1
  41c935:	jo     0x41c91b
  41c937:	pop    eax
  41c938:	sar    DWORD PTR [edx+0x3b],0x90
  41c93c:	outs   dx,BYTE PTR ds:[esi]
  41c93d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c93e:	mov    ds:0x61aa21d6,eax
  41c943:	(bad)  
  41c944:	data16 stos BYTE PTR es:[edi],al
  41c946:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c948:	test   DWORD PTR [ebp+0x31],edx
  41c94b:	adc    al,0x99
  41c94d:	mov    bh,0x89
  41c94f:	sbb    eax,0x4f988020
  41c954:	dec    edi
  41c955:	and    esp,DWORD PTR [esi-0x52b1803f]
  41c95b:	repz jge 0x41c968
  41c95e:	mov    edx,0x8ee5f24d
  41c963:	push   ecx
  41c964:	xor    DWORD PTR [edx+0x370f2779],edx
  41c96a:	cmp    DWORD PTR [esi],esp
  41c96c:	(bad)  
  41c96d:	shr    BYTE PTR [eax-0x697eb765],1
  41c973:	xor    edi,DWORD PTR [esi]
  41c975:	gs xor edx,ecx
  41c978:	idiv   DWORD PTR [ecx+0x486fdaed]
  41c97e:	rol    dh,0x95
  41c981:	(bad)  
  41c982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c983:	cdq    
  41c984:	xchg   esi,eax
  41c985:	pusha  
  41c986:	aad    0x64
  41c988:	sbb    BYTE PTR [edx+0x32],ch
  41c98b:	(bad)  
  41c98c:	xchg   edx,eax
  41c98d:	iret   
  41c98e:	stos   DWORD PTR es:[edi],eax
  41c98f:	xlat   BYTE PTR ds:[ebx]
  41c990:	fdivr  QWORD PTR [ecx+eax*4+0x45ba29c9]
  41c997:	mov    WORD PTR [esi],?
  41c999:	rol    BYTE PTR [edx+0x3d],1
  41c99c:	xchg   esp,eax
  41c99d:	mov    ebx,0xb6317e8
  41c9a2:	call   0x5e1c:0x3dd65569
  41c9a9:	fucom  st(2)
  41c9ab:	js     0x41c9ec
  41c9ad:	pop    ds
  41c9ae:	scas   eax,DWORD PTR es:[edi]
  41c9af:	or     eax,edi
  41c9b1:	loop   0x41ca17
  41c9b3:	in     al,0x62
  41c9b5:	in     al,0xec
  41c9b7:	fldcw  WORD PTR [edx-0x4a3ec60e]
  41c9bd:	repnz pop esi
  41c9bf:	shr    DWORD PTR [ecx],cl
  41c9c1:	aas    
  41c9c2:	int3   
  41c9c3:	push   cs
  41c9c4:	lock in eax,0x17
  41c9c7:	cli    
  41c9c8:	jge    0x41ca1a
  41c9ca:	popf   
  41c9cb:	xor    eax,0xdfc157b4
  41c9d0:	push   ss
  41c9d1:	lock push ebx
  41c9d3:	fisubr DWORD PTR [eax+0x57]
  41c9d6:	out    0xb9,al
  41c9d8:	pop    esi
  41c9d9:	cmc    
  41c9da:	push   ds
  41c9db:	rol    BYTE PTR [edi+0x66a34b84],0xe6
  41c9e2:	add    eax,0x22a706be
  41c9e7:	pop    esi
  41c9e8:	jmp    0x5d7fadaf
  41c9ed:	ins    DWORD PTR es:[edi],dx
  41c9ee:	scas   al,BYTE PTR es:[di]
  41c9f0:	mov    al,ds:0x78aa02d3
  41c9f5:	pop    esi
  41c9f6:	sub    eax,0x229c0237
  41c9fb:	int3   
  41c9fc:	test   al,0xf
  41c9fe:	jmp    0xae5:0x893e6fa9
  41ca05:	mov    al,cs:0x14c36510
  41ca0b:	jle    0x41c9b8
  41ca0d:	xlat   BYTE PTR ds:[ebx]
  41ca0e:	bound  esi,QWORD PTR [edi+0x7e01223d]
  41ca14:	mov    BYTE PTR [esi+0x1c128f16],0xb8
  41ca1b:	dec    edx
  41ca1c:	mov    sp,0xcd8f
  41ca20:	out    0xe2,eax
  41ca22:	add    al,BYTE PTR [ecx-0x656696d3]
  41ca28:	and    esi,DWORD PTR [eax+0x16ae95b8]
  41ca2e:	cwde   
  41ca2f:	pop    ecx
  41ca30:	mov    esp,ecx
  41ca32:	in     al,0xb2
  41ca34:	mov    ecx,0x427fff5e
  41ca39:	and    bh,BYTE PTR [ebx+esi*8]
  41ca3c:	ror    ch,1
  41ca3e:	repz jns 0x41ca2b
  41ca41:	inc    esi
  41ca42:	push   ecx
  41ca43:	pop    eax
  41ca44:	in     al,dx
  41ca45:	out    0x43,eax
  41ca47:	aam    0x46
  41ca49:	push   cs
  41ca4a:	sub    bh,al
  41ca4c:	adc    al,0x4d
  41ca4e:	inc    esp
  41ca4f:	mov    WORD PTR [ebp+0x26],?
  41ca52:	fs jns 0x41ca31
  41ca55:	test   eax,0x82c782e
  41ca5a:	lods   al,BYTE PTR ds:[esi]
  41ca5b:	retf   0x9554
  41ca5e:	jb     0x41ca8f
  41ca60:	mov    edi,0xf9fc8ca0
  41ca65:	(bad)  
  41ca66:	stc    
  41ca67:	test   DWORD PTR [ecx-0x4b194b93],0xda63f63e
  41ca71:	(bad)  
  41ca72:	popa   
  41ca73:	(bad)  
  41ca74:	sahf   
  41ca75:	ds pop eax
  41ca77:	xor    al,dh
  41ca79:	mov    dh,0xd5
  41ca7b:	add    DWORD PTR [edi+0x33ee1846],esp
  41ca81:	add    BYTE PTR [ebp+0xe73c972],0xc2
  41ca88:	aad    0x39
  41ca8a:	mov    ecx,0x6d3c9b5
  41ca8f:	or     BYTE PTR [ebx-0x6fe5a4b9],ah
  41ca95:	push   es
  41ca96:	push   esp
  41ca97:	pop    esp
  41ca98:	das    
  41ca99:	xor    eax,0x1b4c1e4f
  41ca9e:	cmp    DWORD PTR [ecx+ebx*4-0x6a8e31a1],edi
  41caa5:	ror    BYTE PTR [ebp+0x15],cl
  41caa8:	or     DWORD PTR [eax],esp
  41caaa:	inc    edi
  41caab:	jbe    0x41ca71
  41caad:	mov    DWORD PTR [ebp+0x3eb1c373],ebx
  41cab3:	cmp    edi,DWORD PTR [ebp+0x6b]
  41cab6:	xchg   ebx,eax
  41cab7:	or     ecx,ebp
  41cab9:	(bad)  
  41caba:	stc    
  41cabb:	into   
  41cabc:	jmp    0x41caba
  41cabe:	mov    bl,0x7
  41cac0:	and    al,0x6d
  41cac2:	cmp    esp,esi
  41cac4:	xor    DWORD PTR ds:0xc45a4101,0x34
  41cacb:	lahf   
  41cacc:	add    bh,BYTE PTR [edx]
  41cace:	dec    eax
  41cacf:	push   edx
  41cad0:	stos   BYTE PTR es:[edi],al
  41cad1:	ret    0x243c
  41cad4:	in     eax,dx
  41cad5:	leave  
  41cad6:	mov    WORD PTR [ecx-0x40d1f48e],0x2a56
  41cadf:	cmp    eax,0x62d9240b
  41cae4:	fs (bad) 
  41cae6:	jb     0x41caa5
  41cae8:	push   edx
  41cae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caea:	mov    edx,0xd377ac7d
  41caef:	ret    0xf00e
  41caf2:	stc    
  41caf3:	push   eax
  41caf4:	ret    
  41caf5:	retf   0xbfe3
  41caf8:	sbb    ah,dh
  41cafa:	rcl    DWORD PTR [eax-0x7a],1
  41cafd:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41caff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb00:	push   es
  41cb01:	pop    edi
  41cb02:	xor    DWORD PTR [esi],edi
  41cb04:	xlat   BYTE PTR ds:[ebx]
  41cb05:	mov    bl,0xb7
  41cb07:	push   0x43
  41cb09:	sub    DWORD PTR [ebx-0x7b],0x61
  41cb0d:	or     edx,eax
  41cb0f:	xchg   edx,eax
  41cb10:	pop    esi
  41cb11:	pop    eax
  41cb12:	das    
  41cb13:	jge    0x41cb4b
  41cb15:	imul   eax,DWORD PTR [ebp+0x7be7c768],0xffffff92
  41cb1c:	push   ss
  41cb1d:	lds    esp,FWORD PTR [edx-0x64]
  41cb20:	out    dx,al
  41cb21:	adc    DWORD PTR [ebx],esi
  41cb23:	dec    esi
  41cb24:	add    BYTE PTR [ebx+0x1],al
  41cb27:	sbb    eax,0xa493dd8b
  41cb2c:	fdiv   DWORD PTR [eax]
  41cb2e:	js     0x41cac9
  41cb30:	inc    edx
  41cb31:	xchg   BYTE PTR [ebx+ecx*2+0x1fd12387],cl
  41cb38:	jge    0x41cb7a
  41cb3a:	test   DWORD PTR [ebx-0x7b],esi
  41cb3d:	jnp    0x41cb33
  41cb3f:	jae    0x41cb5e
  41cb41:	push   0x140423fd
  41cb46:	mov    dh,0x39
  41cb48:	cmp    eax,0x25968ab
  41cb4d:	rcl    al,1
  41cb4f:	add    dl,cl
  41cb51:	jae    0x41cb30
  41cb53:	scas   al,BYTE PTR es:[edi]
  41cb54:	in     eax,0xaf
  41cb56:	in     eax,0xe8
  41cb58:	iret   
  41cb59:	inc    ebp
  41cb5a:	push   ebp
  41cb5b:	fs int3 
  41cb5d:	ficom  DWORD PTR [ecx-0x12db6598]
  41cb63:	div    al
  41cb65:	jno    0x41cb9d
  41cb67:	lahf   
  41cb68:	loope  0x41cb45
  41cb6a:	adc    cl,BYTE PTR [eax-0x649963a6]
  41cb70:	enter  0x5fe0,0x54
  41cb74:	cdq    
  41cb75:	pop    ds
  41cb76:	xchg   DWORD PTR [esi-0x39],edi
  41cb79:	call   0x21ed0ed1
  41cb7e:	cmp    esi,DWORD PTR [eax+0x562f5066]
  41cb84:	add    eax,0x814b922
  41cb89:	xchg   esp,eax
  41cb8a:	lock aam 0xdb
  41cb8d:	jno    0x41cba0
  41cb8f:	xchg   esp,eax
  41cb90:	ret    
  41cb91:	lods   al,BYTE PTR ds:[si]
  41cb93:	pop    ecx
  41cb94:	xchg   edi,esp
  41cb96:	push   ecx
  41cb97:	popa   
  41cb98:	loope  0x41cb8e
  41cb9a:	rcl    BYTE PTR [ecx],1
  41cb9c:	gs test al,0x26
  41cb9f:	repz or dl,dl
  41cba2:	scas   al,BYTE PTR es:[edi]
  41cba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cba4:	ja     0x41cbdc
  41cba6:	add    ebx,DWORD PTR [edx+0x10f8ebc2]
  41cbac:	and    BYTE PTR [ebx],dh
  41cbae:	and    eax,0xcde6baa0
  41cbb3:	inc    eax
  41cbb4:	ret    
  41cbb5:	xor    ecx,DWORD PTR [ecx]
  41cbb7:	pop    ebp
  41cbb8:	outs   dx,BYTE PTR ds:[esi]
  41cbb9:	(bad)  
  41cbba:	cmp    BYTE PTR ds:0xc0528e,bh
  41cbc0:	scas   eax,DWORD PTR es:[edi]
  41cbc1:	mov    dl,0x91
  41cbc3:	fldln2 
  41cbc5:	(bad)  
  41cbc6:	mov    ecx,0xef286dea
  41cbcb:	(bad)  
  41cbcc:	shl    DWORD PTR [edx],1
  41cbce:	jle    0x41cc48
  41cbd0:	sbb    eax,0xa1b1608b
  41cbd5:	fsubr  DWORD PTR [edx]
  41cbd7:	icebp  
  41cbd8:	mov    dh,0x93
  41cbda:	and    BYTE PTR [esi+esi*2],bl
  41cbdd:	shl    DWORD PTR ds:0xbce34e33,0x7b
  41cbe4:	fadd   QWORD PTR [edi+0x69]
  41cbe7:	ss cld 
  41cbe9:	jns    0x41cbf0
  41cbeb:	push   ds
  41cbec:	pop    esi
  41cbed:	pop    ebp
  41cbee:	imul   edi,DWORD PTR [edx+0x6cc8c288],0x2
  41cbf5:	rol    DWORD PTR [eax+0x76],cl
  41cbf8:	mov    dl,0x63
  41cbfa:	test   DWORD PTR [ebx],esi
  41cbfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbfd:	shl    BYTE PTR [edi+ebp*2],0x82
  41cc01:	loop   0x41cc52
  41cc03:	(bad)  [ebp-0x7f6f24cf]
  41cc09:	loope  0x41cbd1
  41cc0b:	ins    DWORD PTR es:[edi],dx
  41cc0c:	clc    
  41cc0d:	adc    cl,BYTE PTR [edi-0x3471a321]
  41cc13:	add    al,0xa7
  41cc15:	mov    ds:0x39f7f710,eax
  41cc1a:	test   BYTE PTR [ebp-0x3d6eca37],dh
  41cc20:	outs   dx,BYTE PTR ds:[esi]
  41cc21:	dec    eax
  41cc22:	xor    al,0x4e
  41cc24:	ins    BYTE PTR es:[edi],dx
  41cc25:	retf   0xba42
  41cc28:	adc    al,0xd6
  41cc2a:	push   ds
  41cc2b:	(bad)  
  41cc2c:	mov    ss,WORD PTR [esi+0x61e560fd]
  41cc32:	mov    bh,0x4
  41cc34:	jmp    0xf0cf5298
  41cc39:	es call 0x801e2ba7
  41cc3f:	cmp    ebx,DWORD PTR [edi+eiz*2]
  41cc42:	out    0x1d,eax
  41cc44:	jno    0x41cbc9
  41cc46:	adc    DWORD PTR [ebx+0x31abfe91],ecx
  41cc4c:	adc    BYTE PTR [edx-0x155cb3a3],0x79
  41cc53:	iret   
  41cc54:	sub    al,0xc8
  41cc56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc57:	pop    ecx
  41cc58:	sub    al,BYTE PTR [edx-0x5c]
  41cc5b:	fst    st(4)
  41cc5d:	or     al,BYTE PTR [eax]
  41cc5f:	jp     0x41cc84
  41cc61:	add    ebx,DWORD PTR [ebx]
  41cc63:	lea    ebx,[ecx]
  41cc65:	movaps XMMWORD PTR [edx+edx*1+0x1d],xmm4
  41cc6a:	mov    bl,0x27
  41cc6c:	(bad)  
  41cc6d:	and    edi,ebp
  41cc6f:	hlt    
  41cc70:	push   ecx
  41cc71:	xor    DWORD PTR [ecx+0x4b],esp
  41cc74:	push   edx
  41cc75:	(bad)  
  41cc76:	jp     0x41cc9d
  41cc78:	inc    edx
  41cc79:	xor    ebp,DWORD PTR [edi-0x43c5e899]
  41cc7f:	sbb    DWORD PTR [esi+0x69],0xfffffff7
  41cc83:	mov    esi,0x4ee92b8a
  41cc88:	xor    BYTE PTR [ebx+esi*4+0x7e],0xf5
  41cc8d:	in     al,dx
  41cc8e:	sbb    DWORD PTR [edx],edx
  41cc90:	mov    bh,0x15
  41cc92:	and    eax,0xb6e307c9
  41cc97:	ins    DWORD PTR es:[edi],dx
  41cc98:	test   DWORD PTR [eax-0x7542b915],edx
  41cc9e:	adc    edi,DWORD PTR [esi+0x5ae661f7]
  41cca4:	pop    DWORD PTR [ebx+0x90447de]
  41ccaa:	mov    al,ds:0x8d4360c6
  41ccaf:	push   esi
  41ccb0:	xchg   esi,eax
  41ccb1:	(bad)  
  41ccb2:	in     al,dx
  41ccb3:	fidivr DWORD PTR [ecx+eax*2+0x3]
  41ccb7:	int3   
  41ccb8:	(bad)  
  41ccb9:	std    
  41ccba:	bound  esi,QWORD PTR [edi-0x4f28c0c9]
  41ccc0:	ins    BYTE PTR es:[edi],dx
  41ccc1:	or     ah,BYTE PTR [eax-0x39]
  41ccc4:	mov    edx,0x652051b
  41ccc9:	push   eax
  41ccca:	aas    
  41cccb:	dec    ebx
  41cccc:	popf   
  41cccd:	in     eax,0xa6
  41cccf:	jb     0x41ccb1
  41ccd1:	repz pop ds
  41ccd3:	xlat   BYTE PTR ds:[ebx]
  41ccd4:	fwait
  41ccd5:	mov    bh,0xcf
  41ccd7:	add    eax,0xc4a98117
  41ccdc:	adc    al,0x6b
  41ccde:	test   al,0x13
  41cce0:	push   0x13
  41cce2:	lods   al,BYTE PTR ds:[esi]
  41cce3:	sub    al,0x10
  41cce5:	push   edx
  41cce6:	xlat   BYTE PTR ds:[ebx]
  41cce7:	pop    edi
  41cce8:	in     al,0x62
  41ccea:	dec    ebp
  41cceb:	in     al,0x49
  41cced:	pop    ecx
  41ccee:	mov    edx,0xcff9594a
  41ccf3:	lahf   
  41ccf4:	aaa    
  41ccf5:	aam    0x62
  41ccf7:	bsr    ebx,DWORD PTR [edi+ebx*1-0x43]
  41ccfc:	xor    esp,ebp
  41ccfe:	cwde   
  41ccff:	(bad)  
  41cd00:	cmp    eax,0x654752df
  41cd05:	imul   eax,edx,0xf7945063
  41cd0b:	or     BYTE PTR [ebx-0x33],dl
  41cd0e:	(bad)  
  41cd0f:	out    dx,eax
  41cd10:	xor    DWORD PTR [ecx+0x1f01f8dc],esp
  41cd16:	mov    ah,0x2f
  41cd18:	je     0x41ccb1
  41cd1a:	pop    esp
  41cd1b:	sbb    al,0x35
  41cd1d:	jecxz  0x41cd93
  41cd1f:	fld    DWORD PTR [ebx+0x4b]
  41cd22:	xor    esi,edi
  41cd24:	cli    
  41cd25:	and    BYTE PTR [eax],ah
  41cd27:	dec    esi
  41cd28:	leave  
  41cd29:	xor    BYTE PTR [ecx],cl
  41cd2b:	call   0x396c89a0
  41cd30:	push   es
  41cd31:	fstp   DWORD PTR [eax-0x71e499fb]
  41cd37:	out    0xd,eax
  41cd39:	aad    0x4f
  41cd3b:	cwde   
  41cd3c:	pop    ss
  41cd3d:	mov    ecx,0xffb43e54
  41cd42:	stos   DWORD PTR es:[edi],eax
  41cd43:	sbb    eax,0xbc4f1ab5
  41cd48:	stos   DWORD PTR es:[edi],eax
  41cd49:	sbb    cl,BYTE PTR [esi+0x52]
  41cd4c:	mov    cl,0x46
  41cd4e:	cli    
  41cd4f:	sbb    edx,ebx
  41cd51:	cmp    dh,BYTE PTR [edi-0x72093776]
  41cd57:	(bad)  
  41cd58:	popa   
  41cd59:	mov    esp,0x5a23c4d9
  41cd5e:	sti    
  41cd5f:	into   
  41cd60:	sahf   
  41cd61:	aas    
  41cd62:	push   esi
  41cd63:	sbb    esp,DWORD PTR [edx-0x3bd238ae]
  41cd69:	push   es
  41cd6a:	imul   BYTE PTR ds:0x50ddf19
  41cd70:	cmp    edx,esi
  41cd72:	aam    0x7d
  41cd74:	fs out dx,al
  41cd76:	cmp    edx,esp
  41cd78:	aaa    
  41cd79:	les    esp,FWORD PTR [edx+edx*4-0x56]
  41cd7d:	out    dx,eax
  41cd7e:	sbb    bl,bl
  41cd80:	jmp    0xd68b:0x9603ec4a
  41cd87:	xchg   ecx,eax
  41cd88:	mov    DWORD PTR [edx+ebp*4+0x2c],esi
  41cd8c:	add    DWORD PTR [ecx-0x2b165792],ebp
  41cd92:	pushf  
  41cd93:	call   0xe550:0xe6d70d90
  41cd9a:	das    
  41cd9b:	add    eax,0xea658fc
  41cda0:	lods   eax,DWORD PTR ds:[esi]
  41cda1:	xchg   edi,eax
  41cda2:	jle    0x41cda8
  41cda4:	xor    BYTE PTR [ebp+0x62],cl
  41cda7:	ftst   
  41cda9:	aad    0x4
  41cdab:	add    al,0xb7
  41cdad:	sub    eax,DWORD PTR [ecx+edi*4+0x5d75b9c5]
  41cdb4:	xor    DWORD PTR [eax-0x11],edi
  41cdb7:	sbb    DWORD PTR [eax],edx
  41cdb9:	push   edi
  41cdba:	loop   0x41cd5f
  41cdbc:	sub    dh,ah
  41cdbe:	imul   ebx,DWORD PTR [eax],0x8393ed38
  41cdc4:	bound  esi,QWORD PTR [eax]
  41cdc6:	icebp  
  41cdc7:	and    BYTE PTR [ebx],al
  41cdc9:	adc    BYTE PTR [edx+esi*2+0x66dc001c],bl
  41cdd0:	dec    esi
  41cdd1:	pop    edi
  41cdd2:	pushf  
  41cdd3:	jecxz  0x41cdce
  41cdd5:	cmp    DWORD PTR [edx+0x4],esp
  41cdd8:	jo     0x41ce11
  41cdda:	cmp    al,0xd9
  41cddc:	aad    0x34
  41cdde:	push   0x75cd79df
  41cde3:	cs gs icebp 
  41cde6:	xchg   esp,eax
  41cde7:	jae    0x41ce21
  41cde9:	ins    DWORD PTR es:[edi],dx
  41cdea:	pop    es
  41cdeb:	add    bl,dl
  41cded:	and    DWORD PTR [eax-0x62],edx
  41cdf0:	dec    edx
  41cdf1:	cwde   
  41cdf2:	inc    edx
  41cdf3:	dec    ebx
  41cdf4:	(bad)  
  41cdf5:	and    dl,al
  41cdf7:	mov    ebp,0x35cd29ff
  41cdfc:	lods   eax,DWORD PTR ds:[esi]
  41cdfd:	fstp   TBYTE PTR [eax]
  41cdff:	inc    esp
  41ce00:	mov    cl,0xf4
  41ce02:	jb     0x41cdc7
  41ce04:	cmc    
  41ce05:	int3   
  41ce06:	sub    BYTE PTR [ebx+0x76bb0d9a],ah
  41ce0c:	sbb    edi,eax
  41ce0e:	scas   eax,DWORD PTR es:[edi]
  41ce0f:	sub    al,0xae
  41ce11:	pop    edi
  41ce12:	sbb    eax,0xf1b70567
  41ce17:	int3   
  41ce18:	repnz xchg edi,eax
  41ce1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce1b:	mov    al,ds:0x4155c1d8
  41ce20:	or     eax,0x8d12ee1d
  41ce25:	jnp    0x41ce46
  41ce27:	rol    DWORD PTR [esi+eax*4],1
  41ce2a:	sbb    BYTE PTR [ecx+esi*1],ch
  41ce2d:	mov    edx,0xf76eec21
  41ce32:	jmp    0x2b38fc11
  41ce37:	push   edi
  41ce38:	cli    
  41ce39:	adc    BYTE PTR fs:[esi+0x6f],cl
  41ce3d:	xchg   edi,eax
  41ce3e:	and    eax,0x9bde5b10
  41ce43:	rcr    BYTE PTR [ebp-0x1947bbdd],1
  41ce49:	repz cmp esi,esp
  41ce4c:	scas   eax,DWORD PTR es:[edi]
  41ce4d:	xor    BYTE PTR [ebx+edi*4+0x56],bl
  41ce51:	xchg   esp,eax
  41ce52:	sti    
  41ce53:	mov    ah,BYTE PTR [ebx-0x1]
  41ce56:	jnp    0x41cea8
  41ce58:	cmc    
  41ce59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce5a:	dec    ebp
  41ce5b:	mov    ch,BYTE PTR [ebx]
  41ce5d:	stos   BYTE PTR es:[edi],al
  41ce5e:	jbe    0x41cecf
  41ce60:	pop    edx
  41ce61:	je     0x41cea3
  41ce63:	mov    BYTE PTR [edi],ch
  41ce65:	jg     0x41ce6b
  41ce67:	mov    dh,0xf0
  41ce69:	retf   0x5f2
  41ce6c:	bnd ret 
  41ce6e:	or     BYTE PTR [edi],dl
  41ce70:	stos   BYTE PTR es:[edi],al
  41ce71:	xor    dl,BYTE PTR [eax+0x51c4e1cb]
  41ce77:	in     eax,0xef
  41ce79:	inc    eax
  41ce7a:	xor    ebx,edi
  41ce7c:	pop    esp
  41ce7d:	fcomp  DWORD PTR [edx-0x7fafe825]
  41ce83:	ja     0x41ce83
  41ce85:	int3   
  41ce86:	sbb    DWORD PTR [ecx-0x2b],eax
  41ce89:	fidiv  DWORD PTR [esi-0x13b7f7ac]
  41ce8f:	pusha  
  41ce90:	inc    edx
  41ce91:	pop    ecx
  41ce92:	mov    ds:0xb6c42b3,al
  41ce97:	shl    ebx,0x8d
  41ce9a:	jmp    0x41ce36
  41ce9c:	pop    eax
  41ce9d:	dec    ebp
  41ce9e:	jae    0x41cea3
  41cea0:	out    dx,al
  41cea1:	jb     0x41ce4e
  41cea3:	pop    es
  41cea4:	js     0x41ce30
  41cea6:	mov    BYTE PTR [ebx+0x4c],0xca
  41ceaa:	push   edi
  41ceab:	(bad)  
  41cead:	fdiv   DWORD PTR fs:[esi+eiz*8+0x76]
  41ceb2:	mov    eax,ds:0x272523b0
  41ceb7:	outs   dx,DWORD PTR ds:[esi]
  41ceb8:	xlat   BYTE PTR ds:[ebx]
  41ceb9:	aas    
  41ceba:	div    BYTE PTR [edi+0x2e]
  41cebd:	jge    0x41ce8b
  41cebf:	ins    BYTE PTR es:[edi],dx
  41cec0:	cmp    eax,0x32df0718
  41cec5:	daa    
  41cec6:	mov    esp,0x7a7db057
  41cecb:	(bad)  
  41cecc:	mov    eax,0x5564e21e
  41ced1:	sbb    ah,BYTE PTR [edx+0x41]
  41ced4:	imul   esp,DWORD PTR [ebp+0x74b55172],0x79d2a326
  41cede:	sub    DWORD PTR [ebx],ecx
  41cee0:	mul    DWORD PTR [esi-0x318eb665]
  41cee6:	add    DWORD PTR [ebp-0x6f],0xffffff9d
  41ceea:	sti    
  41ceeb:	scas   al,BYTE PTR es:[edi]
  41ceec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceed:	(bad)  [ebp+0x4c]
  41cef0:	jne    0x41ceb7
  41cef2:	push   ebp
  41cef3:	ins    DWORD PTR es:[edi],dx
  41cef4:	dec    ebp
  41cef5:	mov    edx,0x6d3b42ba
  41cefa:	or     ah,BYTE PTR [edx-0x40]
  41cefd:	in     eax,0xe2
  41ceff:	bound  esi,QWORD PTR [edi-0x5d]
  41cf02:	or     eax,0xca01ed27
  41cf07:	call   0xf0769149
  41cf0c:	xor    bh,BYTE PTR [edi+esi*4+0x37e668d4]
  41cf13:	cli    
  41cf14:	in     al,dx
  41cf15:	stos   BYTE PTR es:[edi],al
  41cf16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf17:	pop    ebx
  41cf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf19:	add    BYTE PTR [eax+0x19],0xfd
  41cf1d:	imul   edx,DWORD PTR ds:0xa136034b,0x744f06d8
  41cf27:	into   
  41cf28:	in     eax,dx
  41cf29:	or     BYTE PTR [ebx+0x14204a48],ah
  41cf2f:	outs   dx,BYTE PTR ds:[esi]
  41cf30:	xor    ebp,DWORD PTR [ebx+eiz*2-0x24]
  41cf34:	sbb    cl,bl
  41cf36:	and    BYTE PTR [ebp+0x32ba331],dl
  41cf3c:	cmp    eax,0xeff65676
  41cf41:	je     0x41cf4d
  41cf43:	mov    ch,0x30
  41cf45:	push   es
  41cf46:	pop    eax
  41cf47:	pusha  
  41cf48:	push   ebp
  41cf49:	sti    
  41cf4a:	and    BYTE PTR [ecx-0x7d7895c],al
  41cf50:	or     eax,0x613f33a9
  41cf55:	jno    0x41cf2f
  41cf57:	(bad)  
  41cf58:	xlat   BYTE PTR ds:[ebx]
  41cf59:	jmp    0x41cf1f
  41cf5b:	das    
  41cf5c:	push   edx
  41cf5d:	xchg   edx,eax
  41cf5e:	mov    WORD PTR [ebx+0x58],ss
  41cf61:	leave  
  41cf62:	sbb    ebx,DWORD PTR gs:[ebp+0x2d]
  41cf66:	mov    BYTE PTR [ebp-0xbfc4848],al
  41cf6c:	scas   eax,DWORD PTR es:[edi]
  41cf6d:	cmp    cl,BYTE PTR [edx+0x5f]
  41cf70:	jbe    0x41cf04
  41cf72:	outs   dx,BYTE PTR ds:[esi]
  41cf73:	jg     0x41cfa1
  41cf75:	mov    edi,0x6514ad8c
  41cf7a:	mov    bh,0xf9
  41cf7c:	sub    dh,BYTE PTR [esi]
  41cf7e:	and    BYTE PTR [ecx+0x7f],dl
  41cf81:	jle    0x41cfe0
  41cf83:	mov    edi,0xcc7901f2
  41cf88:	xor    BYTE PTR [ebp+0x494987f0],ah
  41cf8e:	imul   eax,DWORD PTR [edx-0x278dd5e1],0x47
  41cf95:	retf   
  41cf96:	ins    DWORD PTR es:[edi],dx
  41cf97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf98:	cmp    eax,0x7c49cf57
  41cf9d:	push   0x34
  41cf9f:	jbe    0x41cf55
  41cfa1:	pop    eax
  41cfa2:	test   al,0xec
  41cfa4:	pushf  
  41cfa5:	aad    0xe0
  41cfa7:	adc    cl,BYTE PTR [edi-0x7a53e324]
  41cfad:	mov    bl,0x77
  41cfaf:	test   BYTE PTR [ebx],cl
  41cfb1:	and    DWORD PTR [ecx+eax*2-0x3f8cde43],edx
  41cfb8:	push   0x2e
  41cfba:	adc    dl,BYTE PTR [esp+edx*2]
  41cfbd:	fldcw  WORD PTR [edi-0x32]
  41cfc0:	cmp    bh,BYTE PTR [esi]
  41cfc2:	repz sub ah,BYTE PTR [ebp+0x49]
  41cfc6:	sbb    eax,0x3703fac2
  41cfcb:	js     0x41d01a
  41cfcd:	(bad)  
  41cfce:	ds scas eax,DWORD PTR es:[edi]
  41cfd0:	and    al,BYTE PTR [ebx+0x6cb13f1c]
  41cfd6:	xchg   esi,eax
  41cfd7:	pop    eax
  41cfd8:	icebp  
  41cfd9:	pop    edi
  41cfda:	sbb    DWORD PTR [esi+0x503c3fd5],ebx
  41cfe0:	push   edi
  41cfe1:	out    0xe,al
  41cfe3:	ins    BYTE PTR es:[edi],dx
  41cfe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe6:	xlat   BYTE PTR ds:[ebx]
  41cfe7:	outs   dx,DWORD PTR ds:[esi]
  41cfe8:	retf   
  41cfe9:	adc    DWORD PTR [ecx+edi*4+0x2c],0xffffffde
  41cfee:	sub    eax,0x3589acfe
  41cff3:	xor    DWORD PTR [eax],edx
  41cff5:	scas   eax,DWORD PTR es:[edi]
  41cff6:	mov    esp,0xfa8a190
  41cffb:	mov    ebp,0x83443024
  41d000:	xchg   esp,eax
  41d001:	sub    BYTE PTR [ebx-0x5ad9e5ec],dh
  41d007:	push   ds
  41d008:	out    dx,eax
  41d009:	gs inc ebp
  41d00b:	imul   BYTE PTR [edx]
  41d00d:	push   ss
  41d00e:	and    dl,bh
  41d010:	sbb    edi,0x8c93dd9d
  41d016:	push   eax
  41d017:	pop    ebx
  41d018:	and    al,0x3c
  41d01a:	fadd   DWORD PTR [ebp-0x13fab86b]
  41d020:	aas    
  41d021:	jg     0x41d092
  41d023:	jp     0x41d04f
  41d025:	clc    
  41d026:	lds    ebp,FWORD PTR [esi]
  41d028:	idiv   BYTE PTR [ecx]
  41d02a:	movntq QWORD PTR [eax],mm6
  41d02d:	ss std 
  41d02f:	idiv   BYTE PTR [esi]
  41d031:	pop    edx
  41d032:	pop    esp
  41d033:	dec    ebp
  41d034:	and    BYTE PTR [ecx+0x13],0x43
  41d038:	bound  eax,QWORD PTR [esi+0x5]
  41d03b:	jmp    0xc284:0x74f001dd
  41d042:	jmp    0x41d0b6
  41d044:	repnz out 0x43,eax
  41d047:	mov    esi,0xa785b74f
  41d04c:	dec    ecx
  41d04d:	(bad)  
  41d04e:	lods   al,BYTE PTR ds:[esi]
  41d04f:	and    ebx,0x2f
  41d052:	jg     0x41d0b7
  41d054:	pusha  
  41d055:	xchg   edx,eax
  41d056:	add    eax,0x59717cd0
  41d05b:	sub    eax,0x52dc8d5a
  41d060:	lahf   
  41d061:	push   ecx
  41d062:	fsubr  QWORD PTR [eax]
  41d064:	mov    BYTE PTR [edx+0x6cbc5c6e],dh
  41d06a:	mov    ecx,0xb2d5067f
  41d06f:	cmp    bl,dl
  41d071:	loop   0x41d021
  41d073:	pop    ebp
  41d074:	push   edx
  41d075:	sub    al,0x19
  41d077:	xor    edx,eax
  41d079:	out    0xf0,eax
  41d07b:	jmp    0x7a4b:0x368b39b
  41d082:	pop    esi
  41d083:	call   0xe2da5c41
  41d088:	or     al,BYTE PTR [edi-0x73499a5b]
  41d08e:	outs   dx,DWORD PTR ds:[esi]
  41d08f:	fs out 0x21,al
  41d092:	or     ebp,eax
  41d094:	outs   dx,DWORD PTR ds:[esi]
  41d095:	jae    0x41d0a7
  41d097:	pop    edi
  41d098:	rcl    ah,cl
  41d09a:	mov    cl,0xe4
  41d09c:	sbb    ebp,DWORD PTR [edi+0x49]
  41d09f:	fstp   TBYTE PTR [eax+edi*4-0x3a]
  41d0a3:	div    esi
  41d0a5:	in     al,0x2d
  41d0a7:	fist   DWORD PTR [edi-0x7c]
  41d0aa:	sub    eax,0x1f8a13fa
  41d0af:	pop    ecx
  41d0b0:	pop    edx
  41d0b1:	retf   0xc231
  41d0b4:	mov    esi,DWORD PTR [ebp+0x661fdece]
  41d0ba:	dec    ecx
  41d0bb:	push   0xc7645846
  41d0c0:	lock xor BYTE PTR [eax],ah
  41d0c3:	mov    cs,WORD PTR [edi+0x5c917325]
  41d0c9:	pop    esp
  41d0ca:	sbb    ecx,DWORD PTR [edx-0x2c36c6df]
  41d0d0:	ds js  0x41d115
  41d0d3:	sub    BYTE PTR gs:[esi-0x450af4cc],al
  41d0da:	or     ebp,esp
  41d0dc:	xor    eax,0xab112724
  41d0e1:	mov    ah,0x33
  41d0e3:	mov    cl,0x59
  41d0e5:	fnstsw WORD PTR [ecx-0x172f5ce7]
  41d0eb:	call   0xdee5:0x607692e5
  41d0f2:	int    0x7d
  41d0f4:	push   0xfdf2c5f9
  41d0f9:	into   
  41d0fa:	cld    
  41d0fb:	lods   al,BYTE PTR ds:[esi]
  41d0fc:	sbb    BYTE PTR [eax],al
  41d0fe:	dec    ebx
  41d0ff:	aam    0x67
  41d101:	loop   0x41d10f
  41d103:	pop    ss
  41d104:	cld    
  41d105:	or     BYTE PTR [edi+eax*1+0x28],dl
  41d109:	scas   eax,DWORD PTR es:[edi]
  41d10a:	dec    esi
  41d10b:	jnp    0x41d152
  41d10d:	into   
  41d10e:	inc    esp
  41d10f:	inc    eax
  41d110:	adc    dl,BYTE PTR [ebp+0x23]
  41d113:	xor    al,0x97
  41d115:	mov    al,ds:0x36faa790
  41d11a:	gs mov edi,0xc68c60c0
  41d120:	aad    0x54
  41d122:	retf   0x9f34
  41d125:	sbb    ebp,DWORD PTR [eax+0x12]
  41d128:	dec    DWORD PTR [edx+0x3a]
  41d12b:	js     0x41d10e
  41d12d:	and    BYTE PTR [esi+0x1d6edcbd],ah
  41d133:	xchg   esp,eax
  41d134:	sub    al,dl
  41d136:	stos   DWORD PTR es:[edi],eax
  41d137:	xchg   ebp,eax
  41d138:	ss je  0x41d14b
  41d13b:	push   edi
  41d13c:	std    
  41d13d:	xchg   DWORD PTR [edi+0x4fb802aa],edi
  41d143:	int    0xbd
  41d145:	pcmpgtw mm0,QWORD PTR [edx-0x6b4177e5]
  41d14c:	and    ah,BYTE PTR [esi+0x44c4bb8]
  41d152:	fs stos DWORD PTR es:[edi],eax
  41d154:	fiadd  DWORD PTR [edi-0x5d]
  41d157:	push   edi
  41d158:	jecxz  0x41d156
  41d15a:	icebp  
  41d15b:	mov    ebx,0x8e5d78be
  41d160:	mov    bl,0x2e
  41d162:	les    esi,FWORD PTR [esi+0x57]
  41d165:	ss ds pop ecx
  41d168:	xchg   esp,eax
  41d169:	push   ds
  41d16a:	call   0x6c686e83
  41d16f:	fnstcw WORD PTR [ebp-0x16dc1f06]
  41d175:	arpl   WORD PTR [esi+edi*2-0x53],si
  41d179:	fst    st(6)
  41d17b:	inc    ebx
  41d17c:	iret   
  41d17d:	mov    bh,0x80
  41d17f:	ja     0x41d129
  41d181:	or     edi,DWORD PTR [ebp-0x1ea27806]
  41d187:	sub    BYTE PTR [ebp-0x7b],bh
  41d18a:	out    0xfb,eax
  41d18c:	rcr    esi,cl
  41d18e:	xchg   ecx,eax
  41d18f:	jbe    0x41d20d
  41d191:	into   
  41d192:	jmp    0x41d1ab
  41d194:	lock imul DWORD PTR [edi+0x41]
  41d198:	fld    TBYTE PTR [ebp-0x20971792]
  41d19e:	rcr    BYTE PTR [ebp+0x37c69403],1
  41d1a4:	cwde   
  41d1a5:	adc    al,0xe5
  41d1a7:	(bad)  
  41d1a8:	jmp    0xba1b:0xfccd2261
  41d1af:	adc    BYTE PTR [eax],0x94
  41d1b2:	shr    DWORD PTR [esi],cl
  41d1b4:	cmp    eax,0x84ec8f63
  41d1b9:	sbb    DWORD PTR [esi+0x665ca2d2],ecx
  41d1bf:	mov    ah,0xea
  41d1c1:	adc    bl,BYTE PTR [edx-0x5f]
  41d1c4:	and    al,dh
  41d1c6:	(bad)  [esi]
  41d1c8:	xchg   ebx,eax
  41d1c9:	push   0x3f
  41d1cb:	mov    edi,0x88185159
  41d1d0:	test   eax,0x8fcfac6c
  41d1d5:	and    ecx,eax
  41d1d7:	mov    esp,0xf8ba3f68
  41d1dc:	xchg   edi,eax
  41d1dd:	sub    DWORD PTR [ebx+0x24],esi
  41d1e0:	xchg   edx,eax
  41d1e1:	xor    BYTE PTR [edi],dh
  41d1e3:	sbb    BYTE PTR [edi],bh
  41d1e5:	push   ebx
  41d1e6:	push   ds
  41d1e7:	retf   0x43f7
  41d1ea:	sysret 
  41d1ec:	adc    BYTE PTR [eax+0x4f],ah
  41d1ef:	data16 (bad) 
  41d1f1:	mov    bh,0x96
  41d1f3:	ficomp DWORD PTR ds:0xe576913b
  41d1f9:	out    dx,eax
  41d1fa:	mov    al,bl
  41d1fc:	cmp    eax,0xd6d09e8
  41d201:	jecxz  0x41d27e
  41d203:	add    esi,DWORD PTR [edi-0x30689212]
  41d209:	xchg   DWORD PTR [esi],edi
  41d20b:	adc    cl,ah
  41d20d:	std    
  41d20e:	inc    esp
  41d20f:	cli    
  41d210:	in     al,dx
  41d211:	pop    ss
  41d212:	scas   al,BYTE PTR es:[edi]
  41d213:	sti    
  41d214:	out    dx,al
  41d215:	add    eax,0x2de2133c
  41d21a:	icebp  
  41d21b:	sar    DWORD PTR [ebp+0x21],1
  41d21e:	push   esp
  41d21f:	sub    cl,BYTE PTR [edx]
  41d221:	iret   
  41d222:	push   0xa6933d95
  41d227:	jle    0x41d269
  41d229:	xor    eax,0x5bc30657
  41d22e:	int    0xed
  41d230:	aaa    
  41d231:	mov    ecx,0xf7dbb1ed
  41d236:	xor    eax,0xa9753c18
  41d23b:	sbb    DWORD PTR [edi],edx
  41d23d:	mov    dh,0xa8
  41d23f:	lahf   
  41d240:	pop    esp
  41d241:	bt     WORD PTR [ebx-0x795eca96],sp
  41d249:	out    0x44,al
  41d24b:	xchg   edx,eax
  41d24c:	xchg   esp,eax
  41d24d:	jmp    0x41d208
  41d24f:	or     eax,0xc1e553c7
  41d254:	pop    ds
  41d255:	sbb    DWORD PTR [edi-0x54],esp
  41d258:	(bad)  
  41d259:	fdivrp st(4),st
  41d25b:	dec    edx
  41d25c:	test   dh,cl
  41d25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d25f:	cmp    BYTE PTR [ecx-0x66],ah
  41d262:	push   esi
  41d263:	xor    eax,0x93b6efd0
  41d268:	retf   
  41d269:	mov    bh,0x31
  41d26b:	stos   BYTE PTR es:[edi],al
  41d26c:	jb     0x41d276
  41d26e:	in     al,dx
  41d26f:	retf   0x6364
  41d272:	jg     0x41d258
  41d274:	(bad)  
  41d275:	shl    DWORD PTR [eax+0x9],1
  41d278:	rcl    BYTE PTR [ebx],0x77
  41d27b:	xor    dl,cl
  41d27d:	retf   0x137c
  41d280:	cmp    dh,ch
  41d282:	ja     0x41d243
  41d284:	or     DWORD PTR [edi-0x16],esi
  41d287:	aam    0x5d
  41d289:	scas   al,BYTE PTR es:[edi]
  41d28a:	add    al,0x8
  41d28c:	fwait
  41d28d:	ins    DWORD PTR es:[edi],dx
  41d28e:	retf   0xd0d0
  41d291:	sbb    eax,0x893c9d88
  41d296:	xlat   BYTE PTR ds:[ebx]
  41d297:	and    eax,0xda5424ce
  41d29c:	adc    cl,BYTE PTR [ebp+0x3ff70126]
  41d2a2:	mov    ds:0x1fa70894,al
  41d2a7:	pop    edi
  41d2a8:	sbb    al,0x63
  41d2aa:	ror    DWORD PTR [ebx+0x703750a6],cl
  41d2b0:	stc    
  41d2b1:	mov    ebp,0x121d0d60
  41d2b6:	cs inc edx
  41d2b8:	jbe    0x41d26b
  41d2ba:	mov    BYTE PTR [esi],0xd0
  41d2bd:	cli    
  41d2be:	jnp    0x41d298
  41d2c0:	lods   al,BYTE PTR ds:[esi]
  41d2c1:	inc    ebp
  41d2c2:	mov    eax,ds:0x5c64e3a3
  41d2c7:	call   0xd8541a69
  41d2cc:	(bad)  
  41d2cd:	mov    dh,0xa4
  41d2cf:	in     al,dx
  41d2d0:	loop   0x41d295
  41d2d2:	dec    ebx
  41d2d3:	ret    
  41d2d4:	xchg   BYTE PTR [ecx+ecx*4],dh
  41d2d7:	or     al,bl
  41d2d9:	out    0x20,eax
  41d2db:	in     eax,dx
  41d2dc:	adc    al,0xd
  41d2de:	and    al,0xfd
  41d2e0:	dec    eax
  41d2e1:	pushf  
  41d2e2:	mov    ecx,0x8d0c3214
  41d2e7:	fnstenv [eax+0x79]
  41d2ea:	jns    0x41d34d
  41d2ec:	adc    DWORD PTR [eax+0x55253486],0x88aa001e
  41d2f6:	jle    0x41d314
  41d2f8:	bound  esi,QWORD PTR [esi-0x71fb6618]
  41d2fe:	pop    ebp
  41d2ff:	sub    BYTE PTR [ecx],ch
  41d301:	fadd   DWORD PTR [eax]
  41d303:	pop    esi
  41d304:	clc    
  41d305:	push   ss
  41d306:	sbb    ebp,0x72
  41d309:	fstp   TBYTE PTR [ecx+edi*2]
  41d30c:	ret    
  41d30d:	or     eax,0x8619192f
  41d312:	popf   
  41d313:	cwde   
  41d314:	pop    ecx
  41d315:	fs xor ch,bl
  41d318:	dec    ebx
  41d319:	cmp    BYTE PTR [eax],0xfb
  41d31c:	or     DWORD PTR [esi],ebx
  41d31e:	add    eax,0xfa2b8a95
  41d323:	or     DWORD PTR [edi-0x7efa8206],esi
  41d329:	xor    al,0xc
  41d32b:	mov    ah,0xad
  41d32d:	push   0x1181f5fa
  41d332:	sbb    al,0x6a
  41d334:	jmp    0xd778:0xa77a48a2
  41d33b:	adc    al,0x8b
  41d33d:	fisubr WORD PTR [edx-0x60eed62d]
  41d343:	mov    edi,0x6394a2d9
  41d348:	or     al,BYTE PTR [ebx-0x1adfd5fe]
  41d34e:	idiv   BYTE PTR [esi+0x32b59e45]
  41d354:	call   0x13a1:0xf3a08e17
  41d35b:	repz aas 
  41d35d:	pop    esp
  41d35e:	mov    esi,esi
  41d360:	xor    al,0x6a
  41d362:	sbb    DWORD PTR [ecx-0x35],0xecc60b2e
  41d369:	push   edx
  41d36a:	jbe    0x41d33a
  41d36c:	mov    dh,0x93
  41d36e:	inc    esi
  41d36f:	and    dh,BYTE PTR [eax+eiz*4-0x25ab17d9]
  41d376:	and    ch,ah
  41d378:	inc    esi
  41d379:	jae    0x41d2fd
  41d37b:	int3   
  41d37c:	and    esp,DWORD PTR [ebx-0x1ec2e26d]
  41d382:	cmp    esi,ebx
  41d384:	(bad)
  41d389:	push   ebx
  41d38a:	out    0x7d,al
  41d38c:	mov    WORD PTR [bx+di+0x6610],ds
  41d391:	dec    edi
  41d392:	arpl   bp,bp
  41d394:	loopne 0x41d35f
  41d396:	sahf   
  41d397:	mov    esp,edi
  41d399:	jae    0x41d3b2
  41d39b:	int    0x42
  41d39d:	cmp    ecx,DWORD PTR [edx]
  41d39f:	xchg   esi,eax
  41d3a0:	sub    eax,0xaca336e1
  41d3a5:	inc    esi
  41d3a6:	(bad)  
  41d3a7:	dec    edx
  41d3a8:	or     al,0x9d
  41d3aa:	sbb    ah,BYTE PTR [ebp+0x64]
  41d3ad:	cmp    DWORD PTR [ebx+0x4],0xffffffc7
  41d3b1:	dec    esi
  41d3b2:	or     ebx,DWORD PTR [edi-0x4e]
  41d3b5:	sub    cl,BYTE PTR [eax+0x68380d96]
  41d3bb:	inc    edx
  41d3bc:	mov    ecx,0xa8d5a1b0
  41d3c1:	jmp    0xca999a32
  41d3c6:	(bad)  
  41d3c7:	call   0x5f23584
  41d3cc:	fwait
  41d3cd:	cmc    
  41d3ce:	push   ss
  41d3cf:	and    bh,bl
  41d3d1:	push   esp
  41d3d2:	jmp    0x5142:0x75c87c90
  41d3d9:	arpl   sp,di
  41d3db:	(bad)  
  41d3dc:	repz shr dl,cl
  41d3df:	dec    edx
  41d3e0:	xchg   ebx,esi
  41d3e2:	out    dx,al
  41d3e3:	mov    ecx,0x8a8362aa
  41d3e8:	js     0x41d44a
  41d3ea:	js     0x41d434
  41d3ec:	jno    0x41d427
  41d3ee:	int    0x7d
  41d3f0:	es ret 0x94cd
  41d3f4:	jmp    0x10cc9f1a
  41d3f9:	push   0x32
  41d3fb:	ins    BYTE PTR es:[edi],dx
  41d3fc:	jnp    0x41d38a
  41d3fe:	mov    ?,edi
  41d400:	aad    0x4c
  41d402:	and    eax,DWORD PTR [eax-0x75]
  41d405:	fadd   QWORD PTR [esi+0x52]
  41d408:	outs   dx,BYTE PTR ds:[esi]
  41d409:	jl     0x41d391
  41d40b:	pusha  
  41d40c:	mov    eax,0x234904fe
  41d411:	mov    esi,0xe78cee20
  41d416:	inc    edi
  41d417:	sbb    DWORD PTR [esp+esi*1+0x5c3d96e5],ebp
  41d41e:	mov    ds:0x79050f98,eax
  41d423:	scas   al,BYTE PTR es:[edi]
  41d424:	xor    DWORD PTR [eax],edi
  41d426:	cmp    BYTE PTR [esi-0x30022db9],dl
  41d42c:	xor    eax,0x2eb257
  41d431:	mov    cl,0x8d
  41d433:	cmp    DWORD PTR [edi+0x4b],esp
  41d436:	add    DWORD PTR [ecx+0x6d],0x4d
  41d43a:	dec    esp
  41d43b:	xchg   ecx,eax
  41d43c:	lock jg 0x41d47d
  41d43f:	pop    edx
  41d440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d441:	xor    al,0x49
  41d443:	daa    
  41d444:	cmp    BYTE PTR [eax-0x18],dh
  41d447:	mov    edx,0x789d85fa
  41d44c:	mov    ah,0x1d
  41d44e:	inc    edi
  41d44f:	mov    edi,0x8e720c85
  41d454:	cmp    BYTE PTR [esi-0x3],0x26
  41d458:	into   
  41d459:	popf   
  41d45a:	mov    esp,0x12764aba
  41d45f:	push   ebp
  41d460:	lods   al,BYTE PTR ds:[esi]
  41d461:	cmc    
  41d462:	ja     0x41d4e3
  41d464:	sti    
  41d465:	xchg   ebx,eax
  41d466:	int    0xb2
  41d468:	jo     0x41d4a7
  41d46a:	push   edx
  41d46b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d46c:	out    dx,eax
  41d46d:	xchg   ebp,eax
  41d46e:	div    BYTE PTR [edx+0x27]
  41d471:	and    ebx,ebx
  41d473:	mul    BYTE PTR [esi+0x1d9aea24]
  41d479:	dec    ebp
  41d47a:	sub    BYTE PTR [ebx-0x37],ch
  41d47d:	(bad)  
  41d47e:	bound  esp,QWORD PTR ds:0x69178558
  41d484:	scas   eax,DWORD PTR es:[edi]
  41d485:	hlt    
  41d486:	neg    DWORD PTR [esi]
  41d488:	mov    eax,ds:0x74bf4344
  41d48d:	fiadd  DWORD PTR [eax-0x72]
  41d490:	and    DWORD PTR [esp+edx*8+0x3c1d130c],0x4ed2f0cd
  41d49b:	popf   
  41d49c:	jno    0x41d4fb
  41d49e:	outs   dx,DWORD PTR ds:[esi]
  41d49f:	add    BYTE PTR [ecx+0x7d1dd59c],dl
  41d4a5:	push   edi
  41d4a6:	sar    ch,1
  41d4a8:	pop    es
  41d4a9:	ret    0xf8af
  41d4ac:	aam    0x76
  41d4ae:	hlt    
  41d4af:	fucomip st,st(0)
  41d4b1:	dec    esi
  41d4b2:	cmc    
  41d4b3:	and    bh,BYTE PTR ds:0xc775850c
  41d4b9:	sbb    al,0xb0
  41d4bb:	aas    
  41d4bc:	ins    DWORD PTR es:[edi],dx
  41d4bd:	mov    ebp,0xc8a1a518
  41d4c2:	je     0x41d4d7
  41d4c4:	xor    DWORD PTR [edx+0x528e3011],0xe7693e8b
  41d4ce:	jle    0x41d522
  41d4d0:	repz add esp,DWORD PTR [eax]
  41d4d3:	(bad)  
  41d4d4:	sbb    ch,BYTE PTR [ebx]
  41d4d6:	mov    edx,cr4
  41d4d9:	or     al,0x5b
  41d4db:	add    dl,BYTE PTR [ecx]
  41d4dd:	sbb    al,0xff
  41d4df:	cmp    esi,esp
  41d4e1:	mov    dl,0x8e
  41d4e3:	cdq    
  41d4e4:	test   al,0xe9
  41d4e6:	inc    esp
  41d4e7:	mov    WORD PTR ds:0x98061b1a,gs
  41d4ed:	fst    st(5)
  41d4ef:	je     0x41d53e
  41d4f1:	fld    DWORD PTR [ecx]
  41d4f3:	mov    ds:0x6328dac4,al
  41d4f8:	fistp  WORD PTR [esi]
  41d4fa:	es repz xchg esi,eax
  41d4fd:	inc    edx
  41d4fe:	add    edx,DWORD PTR [esi+0x25]
  41d501:	(bad)
  41d504:	mov    ?,ebx
  41d506:	dec    edx
  41d507:	inc    ebx
  41d508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d509:	mov    cl,0xec
  41d50b:	not    DWORD PTR [ebx+ebx*8+0x60788620]
  41d512:	aam    0x59
  41d514:	or     DWORD PTR [ecx-0x30],ebx
  41d517:	(bad)  
  41d518:	jbe    0x41d517
  41d51a:	push   ds
  41d51b:	shl    ch,0x70
  41d51e:	sbb    BYTE PTR [esi-0x264ea978],0xf4
  41d525:	popf   
  41d526:	inc    eax
  41d527:	cmp    dl,BYTE PTR [eax]
  41d529:	jns    0x41d52b
  41d52b:	test   BYTE PTR [edi-0x43dc6170],bl
  41d531:	lods   al,BYTE PTR ds:[esi]
  41d532:	lock xor BYTE PTR [edx],bl
  41d535:	inc    ebp
  41d536:	jnp    0x41d4bf
  41d538:	rol    BYTE PTR [edi+0x67],cl
  41d53b:	and    eax,0xc27bdea9
  41d540:	das    
  41d541:	sar    BYTE PTR [eax-0x8b64ffb],0x36
  41d548:	mov    cl,0x71
  41d54a:	(bad)  
  41d54b:	mov    ch,0x13
  41d54d:	adc    DWORD PTR [ebp-0x9],0xea2fdf84
  41d554:	fistp  QWORD PTR [ecx]
  41d556:	pop    edx
  41d557:	hlt    
  41d558:	lea    ebx,[edi-0x68]
  41d55b:	jp     0x41d55c
  41d55d:	(bad)  
  41d55f:	push   es
  41d560:	call   0xe0938a63
  41d565:	fiadd  WORD PTR [esi-0x1f]
  41d568:	xchg   esp,eax
  41d569:	cld    
  41d56a:	push   ebp
  41d56b:	inc    edi
  41d56c:	mov    ebp,0xdae9d2f2
  41d571:	xchg   edi,eax
  41d572:	jmp    0x41d4f6
  41d574:	adc    eax,esp
  41d576:	daa    
  41d577:	scas   eax,DWORD PTR es:[edi]
  41d578:	mov    eax,0xae293fe
  41d57d:	mov    esp,0xb0a0099d
  41d582:	repnz adc ah,ch
  41d585:	add    BYTE PTR [ecx-0x10c0106f],cl
  41d58b:	pop    ecx
  41d58c:	ds ret 
  41d58e:	fst    QWORD PTR [edi+edx*4+0x63]
  41d592:	shr    BYTE PTR [eax+0x1fa71b4],0x54
  41d599:	xor    edx,DWORD PTR [eax+eiz*4+0x6a]
  41d59d:	mov    DWORD PTR [esp+ebp*1],0x48f55f9d
  41d5a4:	inc    esi
  41d5a5:	test   DWORD PTR [eax-0x245233b1],0x32eca33
  41d5af:	add    dl,0x45
  41d5b2:	call   0xf72ea641
  41d5b7:	stos   DWORD PTR es:[edi],eax
  41d5b8:	and    al,0xde
  41d5ba:	shl    dl,1
  41d5bc:	and    DWORD PTR [ecx+0x19],ebp
  41d5bf:	cmc    
  41d5c0:	adc    eax,0x290cb35e
  41d5c5:	sub    DWORD PTR [eax+0x45],esi
  41d5c8:	ins    BYTE PTR es:[edi],dx
  41d5c9:	sahf   
  41d5ca:	out    dx,al
  41d5cb:	outs   dx,DWORD PTR ds:[esi]
  41d5cc:	adc    ebp,edi
  41d5ce:	int    0x1b
  41d5d0:	cli    
  41d5d1:	cld    
  41d5d2:	in     al,dx
  41d5d3:	adc    al,0xde
  41d5d5:	mov    bh,0xe4
  41d5d7:	xlat   BYTE PTR ds:[ebx]
  41d5d8:	rcl    DWORD PTR [eax],1
  41d5da:	sbb    BYTE PTR ds:0x3cebd4a7,0x8
  41d5e1:	out    0x7d,al
  41d5e3:	mov    al,ds:0x4b3563f9
  41d5e8:	or     al,0xfc
  41d5ea:	xor    DWORD PTR [esi],ebp
  41d5ec:	push   esp
  41d5ed:	mov    esp,eax
  41d5ef:	imul   edx,ebp,0x76
  41d5f2:	fdiv   QWORD PTR [ebp+0x4]
  41d5f5:	les    ecx,FWORD PTR [edx-0x6ba39f6d]
  41d5fb:	xchg   edi,eax
  41d5fc:	loope  0x41d58c
  41d5fe:	int3   
  41d5ff:	and    bl,BYTE PTR [ebx+0x27524bfe]
  41d605:	bound  esi,QWORD PTR [ecx+ebx*1+0x67aa9715]
  41d60c:	jg     0x41d669
  41d60e:	fld    DWORD PTR [esi-0x16cf9f7e]
  41d614:	(bad)  
  41d615:	cmp    ch,dh
  41d617:	out    0xed,al
  41d619:	pop    es
  41d61a:	bound  edx,QWORD PTR [edi]
  41d61c:	test   edi,eax
  41d61e:	ins    BYTE PTR es:[edi],dx
  41d61f:	retf   0x1738
  41d622:	test   eax,0xe3d0447e
  41d627:	into   
  41d628:	pop    ebp
  41d629:	stc    
  41d62a:	aaa    
  41d62b:	lds    ebx,FWORD PTR [ebp-0x58]
  41d62e:	(bad)  
  41d630:	dec    edx
  41d631:	mov    eax,ds:0xde55d0c4
  41d636:	jae    0x41d67b
  41d638:	into   
  41d639:	mov    ecx,DWORD PTR [ecx+eax*1]
  41d63c:	jmpw   0xc9e4
  41d640:	cmp    esp,ebx
  41d642:	jmp    0x41d606
  41d644:	mov    ebx,0xa7bfeadd
  41d649:	xchg   edx,eax
  41d64a:	sbb    eax,0x7a591254
  41d64f:	test   BYTE PTR [eax],bl
  41d651:	sub    eax,DWORD PTR [eax+0x6a]
  41d654:	jg     0x41d669
  41d656:	je     0xe28910f1
  41d65c:	cs pop ebx
  41d65e:	or     al,0x95
  41d660:	lahf   
  41d661:	loope  0x41d5ef
  41d663:	data16 sub dl,BYTE PTR [edi]
  41d666:	lea    esp,[ecx+0x69]
  41d669:	xchg   edx,eax
  41d66a:	call   0x95f06e2f
  41d66f:	into   
  41d670:	or     BYTE PTR [eax+0x31fc166a],al
  41d676:	sti    
  41d677:	ins    BYTE PTR es:[edi],dx
  41d678:	push   0x8f7a6d42
  41d67d:	enter  0x7f32,0xd3
  41d681:	adc    eax,0x8ea25d27
  41d686:	ins    DWORD PTR es:[edi],dx
  41d687:	push   edx
  41d688:	test   al,0xd5
  41d68a:	push   0x1a255fbd
  41d68f:	aam    0xc2
  41d691:	sbb    al,ah
  41d693:	test   al,0xc6
  41d695:	loope  0x41d64f
  41d697:	push   cs
  41d698:	cmp    al,0xcf
  41d69a:	loope  0x41d67f
  41d69c:	pop    ebp
  41d69d:	and    al,0xc3
  41d69f:	pop    ebx
  41d6a0:	and    DWORD PTR [eax],0x28c0cb53
  41d6a6:	fsubr  QWORD PTR [ebp+0x5d5298c2]
  41d6ac:	fistp  QWORD PTR [esi+0xe]
  41d6af:	dec    esp
  41d6b0:	cmp    ecx,DWORD PTR [edx-0xb5a7b95]
  41d6b6:	(bad)  
  41d6b7:	repnz sti 
  41d6b9:	adc    DWORD PTR [eax+0x64e90701],ebx
  41d6bf:	sti    
  41d6c0:	sbb    DWORD PTR [ecx+0x11],ebp
  41d6c3:	mov    cl,0x55
  41d6c5:	pop    eax
  41d6c6:	jl     0x41d6a2
  41d6c8:	test   eax,0x74dff57
  41d6cd:	std    
  41d6ce:	cdq    
  41d6cf:	push   es
  41d6d0:	jae    0x41d719
  41d6d2:	jmp    0x41d714
  41d6d4:	dec    ebx
  41d6d5:	sub    al,0x12
  41d6d7:	and    BYTE PTR [ebp+eiz*2-0x2d69765c],cl
  41d6de:	inc    ecx
  41d6df:	das    
  41d6e0:	fdivr  st,st(2)
  41d6e2:	mov    ecx,0xcbeb9d13
  41d6e7:	div    BYTE PTR [ebx+ebx*4]
  41d6ea:	shr    bl,cl
  41d6ec:	loope  0x41d75c
  41d6ee:	mov    esi,0x56354bf4
  41d6f3:	adc    ebx,ecx
  41d6f5:	sub    edi,0xd
  41d6f8:	mov    ss,WORD PTR [edx+ebp*2-0x56]
  41d6fc:	mov    eax,ds:0xa4b57b28
  41d701:	push   edx
  41d702:	into   
  41d703:	cdq    
  41d704:	add    BYTE PTR [ebx+0xe],bh
  41d707:	fcomp  DWORD PTR [esi+0x4d]
  41d70a:	mov    bh,0x69
  41d70c:	dec    edx
  41d70d:	or     DWORD PTR [esi],ebp
  41d70f:	mov    ah,0x13
  41d711:	jne    0x41d770
  41d713:	cmp    ebx,edi
  41d715:	jns    0x41d727
  41d717:	and    eax,0xd1f5956b
  41d71c:	jbe    0x41d6d9
  41d71e:	ss pop edi
  41d720:	imul   esi,DWORD PTR [ecx-0x173b98b5],0xfffffff9
  41d727:	mov    al,ds:0xa146c3e1
  41d72c:	adc    BYTE PTR [ebp-0x37],bl
  41d72f:	dec    edi
  41d730:	call   0x13ea3108
  41d735:	or     edi,DWORD PTR [esi+eax*1+0x4e]
  41d739:	ss push eax
  41d73b:	ret    
  41d73c:	imul   eax,DWORD PTR [edi],0x92db3aed
  41d742:	jns    0x41d773
  41d744:	(bad)  
  41d745:	xlat   BYTE PTR ds:[ebx]
  41d746:	mov    ecx,0x96bb2353
  41d74b:	dec    esp
  41d74c:	jecxz  0x41d705
  41d74e:	(bad)  
  41d750:	cdq    
  41d751:	(bad)  
  41d752:	stc    
  41d753:	sbb    BYTE PTR gs:[ebx],dl
  41d756:	sbb    BYTE PTR [ecx],al
  41d758:	push   ebx
  41d759:	and    eax,0xb272c1ac
  41d75e:	and    DWORD PTR [esi-0x60],esp
  41d761:	pusha  
  41d762:	dec    ebp
  41d763:	and    BYTE PTR [ecx],ch
  41d765:	ins    DWORD PTR es:[edi],dx
  41d766:	xor    DWORD PTR [esi+0x68130d92],ebp
  41d76c:	cwde   
  41d76d:	push   cs
  41d76e:	add    BYTE PTR [esi+ecx*2+0x2fb0e945],cl
  41d775:	cwde   
  41d776:	jecxz  0x41d7c7
  41d778:	mov    fs,WORD PTR [esi+esi*4+0x4b8863f7]
  41d77f:	dec    ebp
  41d780:	pop    ebx
  41d781:	push   ecx
  41d782:	push   es
  41d783:	adc    esp,DWORD PTR [edi*1+0x78bfb2de]
  41d78a:	mov    ss,WORD PTR [ebp+0x7e]
  41d78d:	jno    0x41d77d
  41d78f:	pop    es
  41d790:	fst    QWORD PTR [edx]
  41d792:	je     0x41d728
  41d794:	out    dx,al
  41d795:	in     eax,dx
  41d796:	fwait
  41d797:	xor    bh,bl
  41d799:	jo     0x41d730
  41d79b:	icebp  
  41d79c:	and    ah,0xb2
  41d79f:	add    eax,ecx
  41d7a1:	das    
  41d7a2:	inc    ebp
  41d7a3:	jge    0x41d798
  41d7a5:	add    BYTE PTR ds:0x34ebbc5a,dh
  41d7ab:	cmp    BYTE PTR [edx+edx*8-0x78],cl
  41d7af:	shl    DWORD PTR [edi+0x641ad25d],0xd4
  41d7b6:	push   esp
  41d7b7:	(bad)  
  41d7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7b9:	fcmovbe st,st(6)
  41d7bb:	jne    0x41d75c
  41d7bd:	(bad)  
  41d7be:	pop    eax
  41d7bf:	cmp    al,0xa6
  41d7c1:	clc    
  41d7c2:	mov    edi,0x4ab0cd6b
  41d7c7:	std    
  41d7c8:	push   eax
  41d7c9:	mov    ebp,ebp
  41d7cb:	sbb    al,0xf0
  41d7cd:	push   eax
  41d7ce:	sub    eax,0x2104dfa5
  41d7d3:	add    ebx,DWORD PTR [edx]
  41d7d5:	xlat   BYTE PTR ds:[ebx]
  41d7d6:	(bad)  
  41d7d7:	rcl    DWORD PTR [ebx],0x6c
  41d7da:	adc    ebp,edi
  41d7dc:	dec    edi
  41d7dd:	mov    ebx,ecx
  41d7df:	mov    ah,0xea
  41d7e1:	(bad)  
  41d7e2:	jo     0x41d841
  41d7e4:	lahf   
  41d7e5:	jl     0x41d856
  41d7e7:	jmp    0x24ef5ffc
  41d7ec:	stc    
  41d7ed:	(bad)  
  41d7ee:	pop    ebp
  41d7ef:	pop    edi
  41d7f0:	fild   DWORD PTR [esi]
  41d7f2:	ins    DWORD PTR es:[edi],dx
  41d7f3:	push   cs
  41d7f4:	or     eax,0x5539f14a
  41d7f9:	mov    ds:0x657d992e,eax
  41d7fe:	ficom  WORD PTR [ebp+0x17]
  41d801:	mov    ds:0xe00d7ce,al
  41d806:	jae    0x41d84b
  41d808:	sbb    al,0xa8
  41d80a:	pop    edx
  41d80b:	stc    
  41d80c:	push   esp
  41d80d:	loop   0x41d83b
  41d80f:	cmc    
  41d810:	or     al,bh
  41d812:	xor    eax,0x5de6ec33
  41d817:	dec    ebx
  41d818:	mov    bl,0xae
  41d81a:	jns    0x41d868
  41d81c:	shr    edi,0x98
  41d81f:	int    0xf2
  41d821:	push   DWORD PTR [esp+edi*1-0x58]
  41d825:	(bad)  
  41d826:	jnp    0x41d86b
  41d828:	sub    al,dh
  41d82a:	dec    esp
  41d82b:	cmp    DWORD PTR [ebp+0x7082b865],ebp
  41d831:	cmp    DWORD PTR [ebx],edx
  41d833:	(bad)  
  41d834:	repnz in eax,dx
  41d836:	mov    cl,0xff
  41d838:	daa    
  41d839:	mov    fs,esp
  41d83b:	sbb    al,0x8c
  41d83d:	daa    
  41d83e:	leave  
  41d83f:	sbb    esp,ebx
  41d841:	sub    DWORD PTR [ebx+0x44b59488],ebp
  41d847:	aaa    
  41d848:	mov    DWORD PTR [edi-0x16341a2],esi
  41d84e:	adc    ebx,DWORD PTR [ecx+0x2ae8aa0f]
  41d854:	inc    esi
  41d855:	mov    DWORD PTR [ebx],ecx
  41d857:	mov    ecx,0xc2219058
  41d85c:	outs   dx,BYTE PTR ds:[esi]
  41d85d:	or     edx,DWORD PTR [ecx-0x3b]
  41d860:	pop    ebp
  41d861:	rol    BYTE PTR [esi-0x33],1
  41d864:	xor    BYTE PTR [esi-0x5c35ebbd],0x57
  41d86b:	in     al,0x52
  41d86d:	inc    eax
  41d86e:	push   cs
  41d86f:	fbstp  TBYTE PTR [eax-0x2]
  41d872:	mov    eax,0xb295ebac
  41d877:	imul   ebx,DWORD PTR [edi],0xffffffe2
  41d87a:	cmc    
  41d87b:	bsr    ebp,DWORD PTR [ebp-0x2a8367a9]
  41d882:	out    dx,al
  41d883:	xchg   esp,eax
  41d884:	adc    al,0xfa
  41d886:	mov    cl,0xe8
  41d888:	mov    ds:0x97ead681,al
  41d88d:	clc    
  41d88e:	sahf   
  41d88f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d890:	cmp    DWORD PTR [ebx+0x5a923654],ebx
  41d896:	arpl   WORD PTR [eax-0xe],di
  41d899:	out    dx,eax
  41d89a:	mov    ds:0x101432fc,al
  41d89f:	fild   DWORD PTR [esi+0x22]
  41d8a2:	pushf  
  41d8a3:	outs   dx,DWORD PTR ds:[esi]
  41d8a4:	fistp  DWORD PTR [ebx+0x82626d5]
  41d8aa:	outs   dx,BYTE PTR ds:[esi]
  41d8ab:	adc    eax,0x158e761d
  41d8b0:	push   0x54320d5d
  41d8b5:	dec    esi
  41d8b6:	or     eax,0x37ba94b1
  41d8bb:	cmc    
  41d8bc:	ins    DWORD PTR es:[edi],dx
  41d8bd:	mov    edx,0x6b8120f6
  41d8c2:	mov    ds:0x97fdbfb9,eax
  41d8c7:	sbb    ebp,DWORD PTR [edx]
  41d8c9:	out    dx,eax
  41d8ca:	jae    0x41d8e4
  41d8cc:	pop    esi
  41d8cd:	shl    ecx,cl
  41d8cf:	icebp  
  41d8d0:	xchg   esp,eax
  41d8d1:	jmp    0xf5532116
  41d8d6:	enter  0x527e,0x44
  41d8da:	fst    DWORD PTR [esi-0x3a093ec9]
  41d8e0:	shl    BYTE PTR [edx+0x7dc7fd2c],0x8b
  41d8e7:	push   edi
  41d8e8:	leave  
  41d8e9:	push   0xfffffff2
  41d8eb:	repnz outs dx,DWORD PTR ds:[esi]
  41d8ed:	add    BYTE PTR [ebp+0x5d],ah
  41d8f0:	pop    ecx
  41d8f1:	xor    esp,edi
  41d8f3:	ror    DWORD PTR [edx+0x19],1
  41d8f6:	or     eax,0x4d5b7760
  41d8fb:	loop   0x41d87e
  41d8fd:	adc    DWORD PTR [ebx+0xeb5579],0xffffff93
  41d904:	and    al,0xd
  41d906:	mov    ebx,DWORD PTR [ecx+0x570d3298]
  41d90c:	(bad)  
  41d90d:	aad    0x68
  41d90f:	sar    al,cl
  41d911:	and    cl,al
  41d913:	stos   BYTE PTR es:[edi],al
  41d914:	adc    ebx,DWORD PTR [ecx+0x3288b8c0]
  41d91a:	xor    DWORD PTR [ebp-0x30cb3229],0xffffffb5
  41d921:	icebp  
  41d922:	xor    BYTE PTR [eax-0x77],bl
  41d925:	data16 adc al,0x40
  41d928:	repz ds loop 0x41d92d
  41d92c:	jmp    0xeb48:0xcf9a1ddb
  41d933:	mov    ebp,0xe0c16579
  41d938:	popa   
  41d939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d93a:	mov    esp,0xd56a5e09
  41d93f:	push   ebp
  41d940:	fstp   DWORD PTR [edi+0x4e07743d]
  41d946:	and    BYTE PTR [edx-0xa0e6f18],cl
  41d94c:	or     WORD PTR [eax],sp
  41d94f:	outs   dx,BYTE PTR ds:[esi]
  41d950:	js     0x41d999
  41d952:	dec    edi
  41d953:	pop    esp
  41d954:	push   edi
  41d955:	pusha  
  41d956:	rol    DWORD PTR [ebx],1
  41d958:	jnp    0x41d9d5
  41d95a:	mov    DWORD PTR [edi-0x69],ecx
  41d95d:	cmc    
  41d95e:	pop    ss
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ss push cs
  41d962:	ret    0xcaf4
  41d965:	and    eax,0x67d10cef
  41d96a:	xlat   BYTE PTR ds:[ebx]
  41d96b:	(bad)  
  41d96c:	aaa    
  41d96d:	cmp    esi,esi
  41d96f:	fdivr  st(2),st
  41d971:	inc    eax
  41d972:	push   edx
  41d973:	je     0x41d94a
  41d975:	xor    sp,WORD PTR [ecx-0x2734b13d]
  41d97c:	and    ax,0x60a7
  41d980:	jbe    0x41d9e1
  41d982:	or     DWORD PTR [esi],0xffffff9c
  41d985:	loope  0x41d9e4
  41d987:	sub    ebp,0x71552a9e
  41d98d:	jno    0x41d9fc
  41d98f:	loopne 0x41d913
  41d991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d992:	cmp    eax,0x15eb87ef
  41d997:	jg     0x41d985
  41d999:	mov    bh,0xf6
  41d99b:	dec    esi
  41d99c:	aas    
  41d99d:	jmp    0xe21840c1
  41d9a2:	xchg   DWORD PTR [ebx-0x4a104831],edx
  41d9a8:	xor    eax,0x2845f4e2
  41d9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9ae:	dec    DWORD PTR [edx+0x4a5ed024]
  41d9b4:	dec    ebp
  41d9b5:	mov    DWORD PTR [eax],esp
  41d9b7:	into   
  41d9b8:	push   ss
  41d9b9:	jmp    0x2f44b784
  41d9be:	add    al,0x8b
  41d9c0:	and    al,0x25
  41d9c2:	jns    0x41d9c3
  41d9c4:	frstor ds:[edx]
  41d9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c8:	sbb    ecx,DWORD PTR [ecx]
  41d9ca:	jmp    0x327718ac
  41d9cf:	inc    edx
  41d9d0:	jo     0x41da3c
  41d9d2:	mov    BYTE PTR [eax+0x6],dh
  41d9d5:	adc    BYTE PTR [esi],cl
  41d9d7:	adc    eax,ebx
  41d9d9:	adc    al,0xae
  41d9db:	sbb    esi,0x3b
  41d9de:	xor    ecx,eax
  41d9e0:	in     al,dx
  41d9e1:	pop    eax
  41d9e2:	xor    DWORD PTR [ecx+0x4e],eax
  41d9e5:	mov    ds:0xf5c53e04,eax
  41d9ea:	cmp    esi,DWORD PTR [esi+0x6339732e]
  41d9f0:	add    al,0x6d
  41d9f2:	or     eax,0xffd0227
  41d9f7:	xchg   BYTE PTR [ecx+0x183c0a9c],ch
  41d9fd:	xor    eax,0x9b57b511
  41da02:	mov    edi,0x25059d5f
  41da07:	inc    BYTE PTR [edx+0xf]
  41da0a:	jge    0x41d99e
  41da0c:	xlat   BYTE PTR ds:[ebx]
  41da0d:	ja     0x41da10
  41da0f:	ret    0xe0bc
  41da12:	sbb    DWORD PTR [ebp+edi*4+0xa],edi
  41da16:	mov    BYTE PTR [ecx-0xc],dh
  41da19:	repz in eax,0x96
  41da1c:	js     0x41da9c
  41da1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da1f:	mov    esp,0xdb534110
  41da24:	mov    bh,0x4f
  41da26:	jae    0x41da31
  41da28:	sub    al,0xe6
  41da2a:	ja     0x41d9ed
  41da2c:	xchg   esi,edi
  41da2e:	sar    DWORD PTR [esp+esi*8+0x3a22e1ce],0x1a
  41da36:	cmp    BYTE PTR ds:0xfd217edb,cl
  41da3c:	mov    dl,0x43
  41da3e:	mov    dl,0xde
  41da40:	sti    
  41da41:	lods   al,BYTE PTR ds:[esi]
  41da42:	sbb    BYTE PTR [ecx-0x55d5cd08],al
  41da48:	add    eax,0x24ee2f4f
  41da4d:	fcomp  QWORD PTR [ebx]
  41da4f:	mov    cl,0x77
  41da51:	das    
  41da52:	mov    al,0x1e
  41da54:	jne    0x41da41
  41da56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da57:	je     0x41da1c
  41da59:	data16 fs fwait
  41da5c:	into   
  41da5d:	out    dx,al
  41da5e:	sbb    al,0xb1
  41da60:	dec    ecx
  41da61:	cmp    edx,DWORD PTR [ebx+edi*2+0x15]
  41da65:	jbe    0x41da5e
  41da67:	stc    
  41da68:	popf   
  41da69:	fcom   st(1)
  41da6b:	call   0x4cbb:0x43cc3d86
  41da72:	in     eax,0x3c
  41da74:	mov    ecx,0x77c64818
  41da79:	js     0x41da06
  41da7b:	jle    0x41d9fe
  41da7d:	addr16 jle 0x41dade
  41da80:	push   edi
  41da81:	icebp  
  41da82:	pop    ds
  41da83:	clc    
  41da84:	adc    bl,ah
  41da86:	push   esi
  41da87:	or     BYTE PTR [ebx],ah
  41da89:	sti    
  41da8a:	xchg   ecx,eax
  41da8b:	pop    edi
  41da8c:	stos   DWORD PTR es:[edi],eax
  41da8d:	enter  0x4b10,0x12
  41da91:	dec    edi
  41da92:	sbb    BYTE PTR [edi],bh
  41da94:	arpl   WORD PTR es:[ebx-0x1c],bp
  41da98:	pop    esp
  41da99:	retf   0x88ce
  41da9c:	mov    ds:0x4ceb3794,eax
  41daa1:	mov    ds:0xef62344f,al
  41daa6:	(bad)  
  41daa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daa8:	jo     0x41da9a
  41daaa:	lea    esp,[esp+ecx*2+0xb]
  41daae:	and    bh,BYTE PTR [edi+0x5a]
  41dab1:	sub    BYTE PTR [ebp-0x1e7daa2b],bl
  41dab7:	jp     0x41dad3
  41dab9:	gs pop es
  41dabb:	jg     0x41daad
  41dabd:	ret    
  41dabe:	lock inc eax
  41dac0:	mov    ch,0xff
  41dac3:	shr    dh,1
  41dac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dac6:	lods   al,BYTE PTR ds:[esi]
  41dac7:	stc    
  41dac8:	jnp    0x41da9c
  41daca:	test   BYTE PTR [ecx+0x2],bl
  41dacd:	loopne 0x41daa2
  41dacf:	push   ss
  41dad0:	xor    DWORD PTR [ebp-0x186eb051],ecx
  41dad6:	jecxz  0x41db22
  41dad8:	lahf   
  41dad9:	push   edx
  41dada:	ret    
  41dadb:	std    
  41dadc:	jbe    0x41dae4
  41dade:	ins    DWORD PTR es:[edi],dx
  41dadf:	inc    ebp
  41dae0:	int    0x63
  41dae2:	jl     0x41dafe
  41dae4:	mov    ah,0xea
  41dae6:	sub    DWORD PTR [ecx-0x5a],ebp
  41dae9:	aam    0x9c
  41daeb:	push   es
  41daec:	ret    
  41daed:	inc    ebp
  41daee:	imul   esp,eax,0x782b09e4
  41daf4:	(bad)  
  41daf5:	in     al,dx
  41daf6:	pusha  
  41daf7:	inc    eax
  41daf8:	add    BYTE PTR ds:0xa422461d,0x3e
  41daff:	ror    dh,0x7
  41db02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db03:	mov    bl,0xda
  41db05:	xor    BYTE PTR [ebp-0x4],dl
  41db08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db09:	push   ds
  41db0a:	ret    0x24cd
  41db0d:	mov    bh,0xac
  41db0f:	rcr    ah,1
  41db11:	cmp    BYTE PTR [ecx+0x2e],bl
  41db14:	out    0xba,al
  41db16:	rcl    DWORD PTR [eax-0xc],1
  41db19:	jl     0x41db16
  41db1b:	pusha  
  41db1c:	aad    0x7
  41db1e:	jns    0x41db2c
  41db20:	out    dx,al
  41db21:	jecxz  0x41dadf
  41db23:	push   esi
  41db24:	xchg   edx,eax
  41db25:	and    eax,0x21a23968
  41db2a:	es ins BYTE PTR es:[edi],dx
  41db2c:	mov    ah,0x2d
  41db2e:	test   eax,0xd979dade
  41db33:	ds in  eax,0x9
  41db36:	mov    BYTE PTR [ecx+0x1f09a62b],cl
  41db3c:	ret    
  41db3d:	arpl   WORD PTR [ebx-0x2e27562a],ax
  41db43:	or     DWORD PTR ds:[esp+ebp*8+0x3d7a3b13],0x62
  41db4c:	mov    BYTE PTR [esi-0x11f60f3],bh
  41db52:	ss mov esp,0x9011e386
  41db58:	inc    edi
  41db59:	inc    esp
  41db5a:	div    DWORD PTR [ebx+0x6038f35f]
  41db60:	push   edx
  41db61:	lods   al,BYTE PTR ds:[esi]
  41db62:	in     eax,0xac
  41db64:	fist   WORD PTR [ebp+0xb]
  41db67:	aaa    
  41db68:	add    ebp,DWORD PTR ds:0x860748d6
  41db6e:	pop    edx
  41db6f:	jno    0x41dbbe
  41db71:	inc    edx
  41db72:	mov    edx,0xdf217347
  41db77:	sbb    BYTE PTR [esi+0x7358a219],cl
  41db7d:	out    dx,eax
  41db7e:	push   ds
  41db7f:	rcr    edi,0x68
  41db82:	out    0xf4,al
  41db84:	pop    edi
  41db85:	or     ch,BYTE PTR [edx+eax*2+0x51726933]
  41db8c:	std    
  41db8d:	adc    edi,eax
  41db8f:	xor    ch,ah
  41db91:	push   ecx
  41db92:	mov    ds:0x8f138609,al
  41db97:	xchg   DWORD PTR [ebx],edx
  41db99:	int    0x16
  41db9b:	mov    al,ds:0xfd25d48d
  41dba0:	repnz push edx
  41dba2:	pop    ss
  41dba3:	mov    ebp,0x8d17f115
  41dba8:	lods   eax,DWORD PTR ds:[esi]
  41dba9:	ret    0x554
  41dbac:	or     dl,BYTE PTR [ecx-0x39b987dc]
  41dbb2:	out    dx,eax
  41dbb3:	mov    ds:0xaf978129,eax
  41dbb8:	repz push 0xffffffeb
  41dbbb:	xor    DWORD PTR [eax],0xcb63c5c2
  41dbc1:	sti    
  41dbc2:	das    
  41dbc3:	rcr    DWORD PTR [edx-0x107af814],1
  41dbc9:	mov    edx,0x7314e7a
  41dbce:	mov    cl,0xba
  41dbd0:	stos   BYTE PTR es:[edi],al
  41dbd1:	adc    al,0xba
  41dbd3:	pop    edx
  41dbd4:	sti    
  41dbd5:	aam    0x46
  41dbd7:	cdq    
  41dbd8:	jbe    0x41db93
  41dbda:	scas   al,BYTE PTR es:[edi]
  41dbdb:	sti    
  41dbdc:	push   eax
  41dbdd:	mov    DWORD PTR ds:0x77063951,eax
  41dbe3:	sbb    BYTE PTR [ebx-0x80],dl
  41dbe6:	inc    eax
  41dbe7:	xchg   esi,eax
  41dbe8:	jl     0x41dc52
  41dbea:	aaa    
  41dbeb:	cmp    eax,DWORD PTR [esi+0x43]
  41dbee:	cmc    
  41dbef:	adc    cl,BYTE PTR [ecx+0xd8bf045]
  41dbf5:	fidiv  WORD PTR [ecx+0xd210042]
  41dbfb:	adc    dh,BYTE PTR [edx+0x75810042]
  41dc01:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc03:	mov    ch,0x9c
  41dc05:	clc    
  41dc06:	mov    eax,DWORD PTR [ebp-0x18]
  41dc09:	mov    DWORD PTR ds:0x42b19a,0x12
  41dc13:	cmp    DWORD PTR ds:0x42b19a,0x0
  41dc1a:	je     0x41fffa
  41dc20:	cmp    DWORD PTR ds:0x42b19a,0x4
  41dc27:	jle    0x41fffa
  41dc2d:	jmp    0x41dc3b
  41dc32:	push   DWORD PTR [ebp-0x18]
  41dc35:	call   DWORD PTR ds:0x42b2f2
  41dc3b:	cmp    DWORD PTR ds:0x42b19a,0x5
  41dc42:	jne    0x41dc57
  41dc48:	xor    ecx,ecx
  41dc4a:	add    ecx,DWORD PTR ds:0x42b19a
  41dc50:	dec    ecx
  41dc51:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc57:	mov    ecx,DWORD PTR ds:0x42b19a
  41dc5d:	dec    ecx
  41dc5e:	mov    DWORD PTR ds:0x42b19a,ecx
  41dc64:	jmp    0x41dc13
  41dc69:	jmp    0x41fffa
  41dc6e:	push   cs
  41dc6f:	mov    BYTE PTR [edi-0x79d57893],0x82
  41dc76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc77:	mov    dl,0xfb
  41dc79:	cs dec edx
  41dc7b:	js     0x41dc6e
  41dc7d:	test   DWORD PTR [edx-0x25],edi
  41dc80:	add    BYTE PTR [ebx-0x7c7ca1f1],0x62
  41dc87:	jne    0x41dc12
  41dc89:	mov    DWORD PTR [ecx-0x7e],edx
  41dc8c:	and    edx,edi
  41dc8e:	mov    ebp,0x648a8069
  41dc93:	ja     0x41dcdc
  41dc95:	inc    esp
  41dc96:	ret    
  41dc97:	cmp    cl,BYTE PTR [edi+0x5f]
  41dc9a:	xor    dl,BYTE PTR [eax]
  41dc9c:	add    eax,0x3b077165
  41dca1:	jmp    0x41dcc7
  41dca3:	or     BYTE PTR [edi+0x1c7b880f],dl
  41dca9:	mov    ds:0x2a157521,al
  41dcae:	cmp    al,0x30
  41dcb0:	push   es
  41dcb1:	int    0x84
  41dcb3:	dec    edx
  41dcb4:	cli    
  41dcb5:	sti    
  41dcb6:	daa    
  41dcb7:	mov    WORD PTR [eax+0xf],cs
  41dcba:	pop    ebp
  41dcbb:	pop    ss
  41dcbc:	in     al,dx
  41dcbd:	mov    WORD PTR [edx],cs
  41dcbf:	pop    ebp
  41dcc0:	lds    ebx,FWORD PTR [edx+eiz*8-0x5b]
  41dcc4:	adc    ah,BYTE PTR [edi+0xa6740bb]
  41dcca:	xor    DWORD PTR [ebp+0x372912c0],0xb80232cd
  41dcd4:	int    0x42
  41dcd6:	out    0xe3,al
  41dcd8:	xchg   ebx,eax
  41dcd9:	retf   0xd883
  41dcdc:	jecxz  0x41dcb0
  41dcde:	out    0xe7,eax
  41dce0:	or     ch,BYTE PTR [ebx+0x644c47eb]
  41dce6:	jmp    0x4004:0x31f9ac20
  41dced:	repz mov edi,0xb03ecbe
  41dcf3:	mov    ds:0xc1275d27,al
  41dcf8:	fmul   QWORD PTR [edi]
  41dcfa:	(bad)  
  41dcfc:	int    0xba
  41dcfe:	out    dx,al
  41dcff:	je     0x41dd6b
  41dd01:	in     eax,0xfa
  41dd03:	jmp    0xf456005f
  41dd08:	mov    bh,0xd8
  41dd0a:	sahf   
  41dd0b:	cmp    ebp,DWORD PTR [esi]
  41dd0d:	pop    ecx
  41dd0e:	lods   eax,DWORD PTR ds:[esi]
  41dd0f:	fwait
  41dd10:	dec    eax
  41dd11:	pop    edi
  41dd12:	aam    0xdd
  41dd14:	iret   
  41dd15:	push   ebp
  41dd16:	les    ebx,FWORD PTR cs:[edx+ebx*4+0xd80d3eb]
  41dd1e:	xor    eax,0x41730e81
  41dd23:	enter  0xb90,0xb3
  41dd27:	dec    esp
  41dd28:	out    0xf3,eax
  41dd2a:	inc    esi
  41dd2b:	xlat   BYTE PTR ds:[ebx]
  41dd2c:	sub    eax,0xba9cfc8c
  41dd31:	cs xchg edi,eax
  41dd33:	inc    ecx
  41dd34:	retf   0xa57d
  41dd37:	fdivr  QWORD PTR [edx-0x9b19ea7]
  41dd3d:	add    ah,BYTE PTR [eax-0x1f]
  41dd40:	pop    ss
  41dd41:	push   ss
  41dd42:	mov    al,ds:0xd733efc8
  41dd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd48:	ins    DWORD PTR es:[edi],dx
  41dd49:	xor    al,BYTE PTR [esi-0x28]
  41dd4c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd4e:	add    DWORD PTR [edx],0x7aada586
  41dd54:	in     eax,dx
  41dd55:	inc    eax
  41dd56:	test   eax,0xd845187
  41dd5b:	pop    edx
  41dd5c:	and    BYTE PTR [esi-0xa8203ae],bl
  41dd62:	xchg   ebp,eax
  41dd63:	mov    al,ds:0x2057ecb5
  41dd68:	xor    eax,0xeeedf3f
  41dd6d:	mov    esp,0xdd0a7cba
  41dd72:	sbb    BYTE PTR gs:[edi+0x4018169d],0x33
  41dd7a:	and    bh,BYTE PTR ds:0x25e5f710
  41dd80:	xor    dh,bh
  41dd82:	mov    esi,0x24cfa03c
  41dd87:	fs call 0xadd7:0xf3216bad
  41dd8f:	inc    ecx
  41dd90:	sbb    eax,0x909fd7bb
  41dd95:	mov    cl,BYTE PTR [ebp+edx*1-0x253c7bec]
  41dd9c:	mov    ds:0xae140b24,al
  41dda1:	xor    BYTE PTR [edx+0x12],bl
  41dda4:	jae    0x41dd7c
  41dda6:	pusha  
  41dda7:	sbb    bl,BYTE PTR ds:0xe870d622
  41ddad:	das    
  41ddae:	scas   al,BYTE PTR es:[edi]
  41ddaf:	jns    0x41ddda
  41ddb1:	stos   DWORD PTR es:[edi],eax
  41ddb2:	inc    DWORD PTR [esi-0x29ce146b]
  41ddb8:	mov    al,0x10
  41ddba:	out    dx,eax
  41ddbb:	rcl    DWORD PTR [edi-0x7],1
  41ddbe:	ds pop ds
  41ddc0:	xlat   BYTE PTR ds:[ebx]
  41ddc1:	repz jo 0x41de35
  41ddc4:	(bad)  
  41ddc5:	loopne 0x41de33
  41ddc7:	lods   al,BYTE PTR ds:[esi]
  41ddc8:	pop    es
  41ddc9:	pop    ebx
  41ddca:	in     eax,dx
  41ddcb:	xchg   ebx,eax
  41ddcc:	xchg   DWORD PTR [ebp+0x36],ecx
  41ddcf:	or     BYTE PTR [edi],0xe5
  41ddd2:	pop    edx
  41ddd3:	js     0x41dda8
  41ddd5:	pusha  
  41ddd6:	push   eax
  41ddd7:	int3   
  41ddd8:	jno    0x41de44
  41ddda:	(bad)  
  41dddb:	outs   dx,DWORD PTR ds:[esi]
  41dddc:	mov    cl,dh
  41ddde:	icebp  
  41dddf:	aaa    
  41dde0:	push   edi
  41dde1:	cmp    eax,0x786f3e62
  41dde6:	int    0xe5
  41dde8:	sub    ah,dh
  41ddea:	mov    bl,BYTE PTR [edi]
  41ddec:	or     dl,BYTE PTR [ecx-0x53]
  41ddef:	test   BYTE PTR [edi+0x21],0x9d
  41ddf3:	mov    ebx,0xbb85e464
  41ddf8:	xchg   edi,eax
  41ddf9:	pop    ecx
  41ddfa:	fadd   QWORD PTR [ecx]
  41ddfc:	jmp    0x7c8f:0x8f405e57
  41de03:	xor    DWORD PTR [edi+0x56],edi
  41de06:	ja     0x41de55
  41de08:	sub    BYTE PTR [esi+eiz*8-0x2],ah
  41de0c:	nop
  41de0d:	retf   0xc284
  41de10:	shl    eax,1
  41de12:	loopne 0x41ddf4
  41de14:	int3   
  41de15:	pushw  0x51
  41de18:	adc    eax,0x25e3c48f
  41de1d:	mov    ebp,ecx
  41de1f:	jbe    0x41de7c
  41de21:	shr    eax,1
  41de23:	aam    0x28
  41de25:	mov    ebp,0xc6b876ff
  41de2a:	imul   eax,DWORD PTR [edx],0x168d0a41
  41de30:	mov    ecx,0x21fffec9
  41de35:	fidiv  DWORD PTR [ecx+0x3b519e43]
  41de3b:	xchg   DWORD PTR [edx-0x4c],esp
  41de3e:	jo     0x41de7e
  41de40:	sbb    BYTE PTR [ebx+edx*2-0x5b],dl
  41de44:	xor    dh,BYTE PTR [eax+0x7b16445a]
  41de4a:	pop    eax
  41de4b:	call   DWORD PTR [ebx-0x69]
  41de4e:	nop
  41de4f:	mov    ecx,0x28cdbc83
  41de54:	xchg   ecx,eax
  41de55:	pop    edi
  41de56:	xchg   edx,eax
  41de57:	fld    DWORD PTR [eax+eiz*2]
  41de5a:	les    eax,FWORD PTR [ebp+0x4]
  41de5d:	or     DWORD PTR [ebx-0x397ea2fa],edi
  41de63:	rol    BYTE PTR [edi],1
  41de65:	les    esp,FWORD PTR [ebp-0x76]
  41de68:	lods   eax,DWORD PTR ds:[esi]
  41de69:	dec    edi
  41de6a:	cmp    BYTE PTR [edi],ch
  41de6c:	push   ebp
  41de6d:	mov    esp,0xd7f8894f
  41de72:	jp     0x41de4b
  41de74:	cmp    al,0xb6
  41de76:	jg     0x41deb4
  41de78:	out    0xa4,al
  41de7a:	popa   
  41de7b:	push   edi
  41de7c:	popf   
  41de7d:	mov    dh,0x67
  41de7f:	cdq    
  41de80:	es stos BYTE PTR es:[edi],al
  41de82:	aaa    
  41de83:	inc    eax
  41de84:	cmp    esp,DWORD PTR [edx+0x599b5241]
  41de8a:	xchg   ebx,eax
  41de8b:	jle    0x41deed
  41de8d:	xchg   ebx,eax
  41de8e:	and    edi,DWORD PTR [esi]
  41de90:	arpl   WORD PTR [ecx],ax
  41de92:	stos   BYTE PTR es:[edi],al
  41de93:	rol    DWORD PTR [ebp+0x4],cl
  41de96:	ins    DWORD PTR es:[edi],dx
  41de97:	add    DWORD PTR [eax],esp
  41de99:	ror    BYTE PTR [ebx],cl
  41de9b:	(bad)  
  41de9c:	pop    esi
  41de9d:	mov    ecx,0x5acaec37
  41dea2:	push   ecx
  41dea3:	adc    al,0xb0
  41dea5:	fnstcw WORD PTR [edx-0x75]
  41dea8:	in     eax,0x96
  41deaa:	or     ebx,ebx
  41deac:	mov    bl,0xe3
  41deae:	and    DWORD PTR [eax-0x7b2447ef],ebp
  41deb4:	dec    esi
  41deb5:	inc    edi
  41deb6:	inc    edi
  41deb7:	mov    bl,0xcb
  41deb9:	les    esi,FWORD PTR [ebx-0x288879d9]
  41debf:	(bad)  
  41dec0:	xor    bh,BYTE PTR ds:0x471fb615
  41dec6:	pop    ds
  41dec7:	shl    ebx,1
  41dec9:	mov    eax,0xba34669f
  41dece:	stos   DWORD PTR es:[edi],eax
  41decf:	add    ebx,DWORD PTR [edx+ebx*1]
  41ded2:	adc    DWORD PTR [ecx-0x78],eax
  41ded5:	cli    
  41ded6:	xchg   ebp,eax
  41ded7:	lea    esp,[ebx]
  41ded9:	xor    BYTE PTR [eax-0x1d],cl
  41dedc:	ja     0x41deba
  41dede:	jno    0x41deb3
  41dee0:	jmp    0xe3621db7
  41dee5:	lds    ebx,FWORD PTR [ecx-0x266354e8]
  41deeb:	or     BYTE PTR [ebx],bl
  41deed:	or     DWORD PTR ds:[edx],esi
  41def0:	ss push edx
  41def2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def3:	and    dh,BYTE PTR [ecx-0x77473314]
  41def9:	sub    BYTE PTR [edi+0x75],ah
  41defc:	xchg   DWORD PTR [edi+0x16728d25],esi
  41df02:	sub    eax,DWORD PTR [ebp-0x6c]
  41df05:	xchg   ecx,eax
  41df06:	(bad)  
  41df07:	xchg   ecx,eax
  41df08:	mov    cl,0x70
  41df0a:	xor    al,0x3c
  41df0c:	xchg   esi,eax
  41df0d:	(bad)  
  41df0e:	(bad)  
  41df0f:	sbb    DWORD PTR [edi+0x2c787be2],0x10
  41df16:	inc    esi
  41df17:	pusha  
  41df18:	add    esi,DWORD PTR [edx-0x36]
  41df1b:	mov    dl,0x74
  41df1d:	or     eax,0xfbe52aa8
  41df22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df23:	inc    esp
  41df24:	ja     0x41df25
  41df26:	test   DWORD PTR [edx+ecx*8-0x6f],0x5c401bfa
  41df2e:	inc    edx
  41df2f:	retf   
  41df30:	or     BYTE PTR [ebx],al
  41df32:	jmp    0x17f8:0xec3e3b01
  41df39:	push   edx
  41df3a:	cmp    ebx,DWORD PTR [edi+eiz*1-0x42]
  41df3e:	lock ds jmp 0x41df98
  41df42:	fwait
  41df43:	mov    ebp,0x6946865
  41df48:	sbb    dl,al
  41df4a:	push   ss
  41df4b:	mov    eax,0xe32d595
  41df50:	xor    eax,0xaecb75a7
  41df55:	(bad)  
  41df56:	int    0x4c
  41df58:	xchg   BYTE PTR [ecx],dl
  41df5a:	cs push ecx
  41df5c:	sbb    DWORD PTR [ecx],edi
  41df5e:	pop    ebp
  41df5f:	jmp    0x41dfbc
  41df61:	sub    cl,ah
  41df63:	clc    
  41df64:	mov    ebx,0xc7a19658
  41df69:	shl    BYTE PTR [ecx+0x7f],0x4
  41df6d:	dec    esi
  41df6e:	push   edi
  41df6f:	jmp    0x41df70
  41df71:	dec    edx
  41df72:	add    esi,DWORD PTR [esp+edx*4-0x52]
  41df76:	sbb    BYTE PTR fs:[eax-0x12],dl
  41df7a:	lds    eax,FWORD PTR [esi+0x2e7cc506]
  41df80:	xlat   BYTE PTR ds:[ebx]
  41df81:	into   
  41df82:	rcr    BYTE PTR [ebx],0x83
  41df85:	mov    al,0x16
  41df87:	push   esp
  41df88:	mov    cl,0x31
  41df8a:	daa    
  41df8b:	inc    ecx
  41df8c:	ret    
  41df8d:	mov    esp,0x2a59c456
  41df92:	add    al,0xdf
  41df94:	fld    QWORD PTR [eax+0x6]
  41df97:	mov    ecx,0x15c4a930
  41df9c:	xlat   BYTE PTR ds:[ebx]
  41df9d:	adc    edx,DWORD PTR [ebp+0x7]
  41dfa0:	xor    eax,0x6a74675a
  41dfa5:	shl    DWORD PTR [ecx-0x71],1
  41dfa8:	jg     0x41df58
  41dfaa:	fld    DWORD PTR [edx]
  41dfac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfad:	into   
  41dfae:	test   eax,0xab5e542e
  41dfb3:	dec    esp
  41dfb4:	mov    ds:0x1a370cb8,eax
  41dfb9:	jae    0x41df87
  41dfbb:	fs push edx
  41dfbd:	lea    ebp,[ebx-0x1c]
  41dfc0:	outs   dx,BYTE PTR ds:[esi]
  41dfc1:	retf   0xd8b5
  41dfc4:	jbe    0x41dfbb
  41dfc6:	fwait
  41dfc7:	push   esp
  41dfc8:	add    DWORD PTR [edx+eiz*1],edx
  41dfcb:	add    edi,0x2d
  41dfce:	retf   0xf3de
  41dfd1:	sub    BYTE PTR [edi-0x65],cl
  41dfd4:	xor    BYTE PTR [edx+0x6c],al
  41dfd7:	in     al,0x5e
  41dfd9:	sbb    DWORD PTR [eax],ebp
  41dfdb:	(bad)  
  41dfdc:	xchg   ecx,eax
  41dfdd:	add    edx,0x6e5332fe
  41dfe3:	(bad)
  41dfe8:	jns    0x41df9f
  41dfea:	mov    ch,BYTE PTR [bx+di-0x4a]
  41dfee:	add    esi,DWORD PTR ss:[edi-0x1cea4b2e]
  41dff5:	ja     0x41df84
  41dff7:	shr    BYTE PTR [ecx+0x1d],1
  41dffa:	xchg   ecx,eax
  41dffb:	iret   
  41dffc:	or     DWORD PTR [esi+ebx*1+0x1ce9a4b8],esi
  41e003:	inc    esp
  41e004:	inc    ebx
  41e005:	mov    esp,0x86f43be0
  41e00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e00b:	loope  0x41dff4
  41e00d:	push   ss
  41e00e:	jg     0x41dfbc
  41e010:	inc    edx
  41e011:	mov    dh,0x52
  41e013:	enter  0xa7de,0xbb
  41e017:	cmp    BYTE PTR [edx-0x39046586],ch
  41e01d:	inc    esi
  41e01e:	dec    ecx
  41e01f:	call   ebx
  41e021:	dec    ebx
  41e022:	sbb    al,0xd2
  41e024:	sub    ebp,0xa6a8f254
  41e02a:	sub    DWORD PTR ds:0xf29935f,esi
  41e030:	fiadd  WORD PTR [edi-0x47a111a]
  41e036:	daa    
  41e037:	adc    DWORD PTR ds:0x943916c8,ebp
  41e03d:	jle    0x41e08f
  41e03f:	jo     0x41e030
  41e041:	fisub  WORD PTR [edx+0x6d]
  41e044:	inc    eax
  41e045:	or     DWORD PTR [esi+eax*4-0x58],ebx
  41e049:	or     bh,dl
  41e04b:	push   ecx
  41e04c:	aas    
  41e04d:	fs push 0xac8a4ab3
  41e053:	pop    ebp
  41e054:	std    
  41e055:	add    BYTE PTR [eax+0x9117c08],dl
  41e05b:	leave  
  41e05c:	icebp  
  41e05d:	pop    eax
  41e05e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e05f:	(bad)  
  41e060:	xor    ecx,edx
  41e062:	adc    al,0x24
  41e064:	dec    ebp
  41e065:	jmp    0xde152cf1
  41e06a:	sti    
  41e06b:	sbb    ah,BYTE PTR [ebp+esi*2-0x3ecdd5c7]
  41e072:	xchg   ebp,eax
  41e073:	xchg   edi,eax
  41e074:	jns    0x41e0d4
  41e076:	outs   dx,BYTE PTR ds:[esi]
  41e077:	fcmovnb st,st(3)
  41e079:	mov    esi,0xd6a55f97
  41e07e:	shl    DWORD PTR [eax+0x2dd1a07f],cl
  41e084:	fwait
  41e085:	cdq    
  41e086:	test   al,0x6a
  41e088:	arpl   WORD PTR [edi+esi*2-0x1c],bp
  41e08c:	ror    BYTE PTR [eax],1
  41e08e:	push   es
  41e08f:	inc    eax
  41e090:	(bad)  
  41e092:	enter  0x8c9f,0x93
  41e096:	shr    DWORD PTR [esi],cl
  41e098:	arpl   WORD PTR [edx-0x2c8cabff],bp
  41e09e:	jmp    0x4e08431b
  41e0a3:	data16 sahf 
  41e0a5:	mov    ecx,0x7089ac4e
  41e0aa:	adc    esi,ebx
  41e0ac:	arpl   WORD PTR [edi-0x68103d7c],ax
  41e0b2:	push   0x7c
  41e0b4:	ret    0x5c7a
  41e0b7:	test   eax,0xc5ae3dfd
  41e0bc:	xchg   esi,eax
  41e0bd:	test   eax,0x33c23404
  41e0c2:	add    dh,ch
  41e0c4:	xchg   esp,eax
  41e0c5:	jge    0x41e144
  41e0c7:	(bad)  
  41e0c8:	fcomp  QWORD PTR [ebp+ecx*8-0x37]
  41e0cc:	fld    QWORD PTR ds:0x13d36603
  41e0d2:	cmp    BYTE PTR [edx],0x18
  41e0d5:	call   0x929c:0xf75dc8e
  41e0dc:	in     al,dx
  41e0dd:	inc    edx
  41e0de:	ss jb  0x41e062
  41e0e1:	fs inc ebp
  41e0e3:	lods   al,BYTE PTR ds:[esi]
  41e0e4:	sub    eax,0x231bded8
  41e0e9:	sbb    ebx,DWORD PTR [esi+ecx*4-0x55]
  41e0ed:	sub    bl,dh
  41e0ef:	adc    ebp,DWORD PTR [esi-0x665dff3]
  41e0f5:	dec    eax
  41e0f6:	adc    DWORD PTR [ecx],ebp
  41e0f8:	call   0xa8b2:0xfc4cd64
  41e0ff:	dec    edx
  41e100:	sbb    BYTE PTR [ecx+eiz*8+0xc],cl
  41e104:	xlat   BYTE PTR ds:[ebx]
  41e105:	outs   dx,DWORD PTR ds:[esi]
  41e106:	pop    es
  41e107:	mov    dl,0x95
  41e109:	xor    ebx,ebp
  41e10b:	inc    ebp
  41e10c:	pop    ss
  41e10d:	push   edi
  41e10e:	sub    eax,0x741d52af
  41e113:	mov    ch,0x1c
  41e115:	sub    ebx,eax
  41e117:	push   ebx
  41e118:	shr    BYTE PTR [edx+0x35a371c3],1
  41e11e:	arpl   WORD PTR [eax+ebp*8],di
  41e121:	jno    0x41e0b7
  41e123:	popa   
  41e124:	(bad)  
  41e125:	push   0xffffff82
  41e127:	test   al,0x6e
  41e129:	dec    ebx
  41e12a:	daa    
  41e12b:	clc    
  41e12c:	test   eax,0x75d845cb
  41e131:	jnp    0x41e0c8
  41e133:	sbb    DWORD PTR [edx+0x19],eax
  41e136:	outs   dx,DWORD PTR ds:[esi]
  41e137:	xor    al,0x89
  41e139:	push   es
  41e13a:	iret   
  41e13b:	mov    ds:0x7308cf9f,al
  41e140:	mov    esp,0x7fd15a4d
  41e145:	cmp    ebx,DWORD PTR [esi+0x69b7d246]
  41e14b:	mov    ds,WORD PTR [ebp-0x11]
  41e14e:	adc    esi,edi
  41e150:	dec    ebx
  41e151:	jb     0x41e0de
  41e153:	mov    esi,0x91a1e81a
  41e158:	adc    al,0x73
  41e15a:	mov    edx,0x895cdba
  41e15f:	bound  ebp,QWORD PTR [ebp+edi*1+0x68]
  41e163:	mov    ah,0xa3
  41e165:	or     bl,0xd3
  41e168:	stos   BYTE PTR es:[edi],al
  41e169:	push   edi
  41e16a:	loop   0x41e18c
  41e16c:	scas   al,BYTE PTR es:[edi]
  41e16d:	in     al,0x9b
  41e16f:	fbstp  TBYTE PTR [ebx+0x3844113b]
  41e175:	retf   
  41e176:	test   al,0x64
  41e178:	loopne 0x41e1ed
  41e17a:	fs jp  0x41e13a
  41e17d:	loope  0x41e1f2
  41e17f:	in     al,0x32
  41e181:	(bad)  
  41e183:	dec    edi
  41e184:	xor    al,0x93
  41e186:	push   ebp
  41e187:	fnstenv [eax-0x64]
  41e18a:	ror    edi,1
  41e18c:	punpckhbw mm4,mm0
  41e18f:	or     esi,DWORD PTR [edx-0x16]
  41e192:	(bad)  
  41e193:	rol    BYTE PTR [eax],1
  41e195:	mov    eax,ebp
  41e197:	ret    0xda0
  41e19a:	es bound esp,QWORD PTR fs:[ebp+0x5]
  41e19f:	(bad)  
  41e1a1:	push   0xffffffc2
  41e1a3:	ss icebp 
  41e1a5:	push   edx
  41e1a6:	sbb    al,0xaf
  41e1a8:	mov    al,0x86
  41e1aa:	inc    edi
  41e1ab:	loope  0x41e209
  41e1ad:	mov    ds:0x1d3e7fa,al
  41e1b2:	xor    eax,0x22dce998
  41e1b7:	xor    eax,0x99c5c357
  41e1bc:	and    dh,BYTE PTR [edx-0x20]
  41e1bf:	mov    dh,ch
  41e1c1:	daa    
  41e1c2:	jle    0x41e1c4
  41e1c4:	jge    0x41e1d5
  41e1c6:	fidiv  WORD PTR [eax-0x43c25105]
  41e1cc:	xor    DWORD PTR [esi+0x1a],esi
  41e1cf:	cmp    edi,DWORD PTR [edi-0x5c]
  41e1d2:	ja     0x41e1c4
  41e1d4:	sahf   
  41e1d5:	jno    0x41e16d
  41e1d7:	int3   
  41e1d8:	lods   al,BYTE PTR ds:[esi]
  41e1d9:	je     0x41e1c6
  41e1db:	mov    al,ds:0xb829f70e
  41e1e0:	sbb    eax,0xc967feb2
  41e1e5:	fucomi st,st(6)
  41e1e7:	mov    ds:0x77d5fb97,al
  41e1ec:	clc    
  41e1ed:	test   al,0xb6
  41e1ef:	mov    dl,0x2c
  41e1f1:	lea    esi,[ebx-0x502f5a4a]
  41e1f7:	in     eax,dx
  41e1f8:	(bad)  
  41e1f9:	mov    ecx,0xc84a27ba
  41e1fe:	(bad)  
  41e1ff:	cdq    
  41e200:	data16 mov bh,0xa4
  41e203:	xor    eax,0x2d06dc3a
  41e208:	stc    
  41e209:	jne    0x41e256
  41e20b:	push   edi
  41e20c:	sar    ebx,1
  41e20e:	mov    esi,0xa6539718
  41e213:	jmp    0xc06b5ad8
  41e218:	or     BYTE PTR [eax+ebx*2+0x646e5b08],al
  41e21f:	aad    0x71
  41e221:	dec    ebx
  41e222:	adc    esp,DWORD PTR [edi+0x741682ef]
  41e228:	push   ebx
  41e229:	xchg   esi,eax
  41e22a:	jns    0x41e239
  41e22c:	and    eax,0x9c6f2c02
  41e231:	lock xchg ch,al
  41e234:	fcomp  QWORD PTR [ebx-0x2da1fadd]
  41e23a:	xor    al,0x69
  41e23c:	fs xchg edx,eax
  41e23e:	xchg   dx,ax
  41e240:	push   0x4c
  41e242:	lahf   
  41e243:	cli    
  41e244:	push   ecx
  41e245:	or     ebp,DWORD PTR [ebx+0x254b8c01]
  41e24b:	aad    0xd5
  41e24d:	stos   BYTE PTR es:[edi],al
  41e24e:	xlat   BYTE PTR ds:[ebx]
  41e24f:	pusha  
  41e250:	xchg   BYTE PTR [eax],dl
  41e252:	fsubp  st(0),st
  41e254:	push   ebx
  41e255:	imul   eax,DWORD PTR [edx+0x18],0x48
  41e259:	push   cs
  41e25a:	jg     0x41e22b
  41e25c:	call   DWORD PTR [esi-0x9fbaf71]
  41e262:	pop    esi
  41e263:	cmp    BYTE PTR [edx],al
  41e265:	jb     0x41e27a
  41e267:	mov    al,ds:0xb5097538
  41e26c:	std    
  41e26d:	mov    bl,0xb
  41e26f:	call   0x44c8f49e
  41e274:	addr16 ds dec esp
  41e277:	lods   al,BYTE PTR ds:[esi]
  41e278:	lods   eax,DWORD PTR ds:[esi]
  41e279:	xor    eax,0xeda100f8
  41e27e:	xlat   BYTE PTR ds:[ebx]
  41e27f:	icebp  
  41e280:	div    DWORD PTR [ebp+0x79919524]
  41e286:	mov    dl,BYTE PTR [eax-0x64]
  41e289:	push   ds
  41e28a:	jle    0x41e22f
  41e28c:	and    BYTE PTR [edx],cl
  41e28e:	sub    al,0x88
  41e290:	cs test esi,ebp
  41e293:	adc    DWORD PTR [edi+0x248b9cad],esp
  41e299:	jecxz  0x41e21d
  41e29b:	fcomp  DWORD PTR ds:0xf21c8e32
  41e2a1:	cdq    
  41e2a2:	scas   eax,DWORD PTR es:[edi]
  41e2a3:	xchg   esp,ebx
  41e2a5:	sets   ah
  41e2a8:	xor    bh,BYTE PTR [ebx]
  41e2aa:	mov    ch,0x7
  41e2ac:	sbb    DWORD PTR [esp+esi*1-0x51a0ef2a],0x438df439
  41e2b7:	out    0x55,eax
  41e2b9:	cmp    al,0xf6
  41e2bb:	mov    bh,0xf0
  41e2bd:	loopne 0x41e301
  41e2bf:	fcmovu st,st(2)
  41e2c1:	jmp    0x41e2c7
  41e2c3:	in     eax,0x55
  41e2c5:	out    0x72,al
  41e2c7:	mov    WORD PTR [eax+0x3d2d64ca],fs
  41e2cd:	out    0x35,al
  41e2cf:	dec    ebx
  41e2d0:	sbb    al,0xe2
  41e2d2:	frstor [eax]
  41e2d4:	sbb    DWORD PTR ds:[esi+0x69],edi
  41e2d8:	inc    ebp
  41e2d9:	sti    
  41e2da:	push   0xbcd8f17d
  41e2df:	pop    DWORD PTR [ebx+ebp*2+0xf]
  41e2e3:	fdivr  DWORD PTR ds:0xf182266
  41e2e9:	rcl    DWORD PTR [edx],1
  41e2eb:	stos   DWORD PTR es:[edi],eax
  41e2ec:	stc    
  41e2ed:	pop    edi
  41e2ee:	in     al,dx
  41e2ef:	jmp    FWORD PTR [ebp-0x42018ee6]
  41e2f5:	jno    0x41e341
  41e2f7:	fwait
  41e2f8:	in     al,dx
  41e2f9:	dec    eax
  41e2fa:	ins    BYTE PTR es:[edi],dx
  41e2fb:	push   0xff9af19b
  41e300:	mov    esi,0x8f4bffda
  41e305:	loopne 0x41e2df
  41e307:	fidivr DWORD PTR [edx-0x75]
  41e30a:	imul   ecx,esp,0xdde49f03
  41e310:	(bad)  
  41e311:	mov    esi,0x23faf4e5
  41e316:	pop    esp
  41e317:	mulps  xmm7,xmm3
  41e31a:	inc    eax
  41e31b:	dec    esi
  41e31c:	xor    ah,BYTE PTR [edx]
  41e31e:	sbb    al,0xd
  41e320:	mov    cl,0x7c
  41e322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e323:	test   eax,0x1d1ef782
  41e328:	fild   QWORD PTR [edx-0x6a72bd61]
  41e32e:	gs jge 0x41e3ae
  41e331:	dec    esi
  41e332:	dec    esi
  41e333:	pushf  
  41e334:	dec    edi
  41e335:	inc    edx
  41e336:	scas   al,BYTE PTR es:[edi]
  41e337:	jo     0x41e36a
  41e339:	or     eax,0x79516f45
  41e33e:	loopne 0x41e335
  41e340:	mov    ds:0x567779dc,al
  41e345:	dec    ebp
  41e346:	jmp    0x41e2df
  41e348:	mov    al,al
  41e34a:	mov    al,ds:0x71ee9461
  41e34f:	jno    0x41e2ec
  41e351:	imul   ecx,ebx,0xffffffc8
  41e354:	call   DWORD PTR [eax-0x16a8d110]
  41e35a:	bound  ebx,QWORD PTR [edi-0x1d8e29f0]
  41e360:	in     eax,dx
  41e361:	lea    ecx,[ecx-0x72]
  41e364:	mov    al,0x37
  41e366:	hlt    
  41e367:	sub    al,BYTE PTR [edi]
  41e369:	iret   
  41e36a:	mov    ah,al
  41e36c:	pop    es
  41e36d:	pop    es
  41e36e:	repnz adc eax,0xf9b02486
  41e374:	out    dx,al
  41e375:	test   eax,0x1fa8fced
  41e37a:	std    
  41e37b:	std    
  41e37c:	inc    ebx
  41e37d:	mov    bl,0xc7
  41e37f:	repnz mov ebx,0xf74567c8
  41e385:	out    0xff,al
  41e387:	adc    eax,0xedadfa3b
  41e38c:	jp     0x41e38d
  41e38e:	sbb    BYTE PTR [eax],al
  41e390:	ss or  al,0xb
  41e393:	ins    BYTE PTR es:[edi],dx
  41e394:	hlt    
  41e395:	ds push ecx
  41e397:	dec    ebx
  41e398:	test   BYTE PTR ds:0x6f4bb920,bh
  41e39e:	inc    DWORD PTR [ebp+esi*8+0x3734bedb]
  41e3a5:	bound  edx,QWORD PTR [esi]
  41e3a7:	imul   esp,esp,0xfffffffb
  41e3aa:	imul   esi,DWORD PTR [edx],0x91f6c511
  41e3b0:	bound  esi,QWORD PTR [ebx-0x148f3248]
  41e3b6:	shl    DWORD PTR [ebx+0x548d4fe7],0x4a
  41e3bd:	mov    ebx,0x3e90cb0b
  41e3c2:	bnd ja 0x41e36a
  41e3c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3c6:	xor    al,0x26
  41e3c8:	ret    0x5d44
  41e3cb:	cmp    edi,DWORD PTR [eax*2-0x7ccc7e6e]
  41e3d2:	sub    ecx,DWORD PTR [edi+ebx*2+0x7a]
  41e3d6:	fwait
  41e3d7:	xchg   ecx,eax
  41e3d8:	imul   esi,ecx,0xffffffbb
  41e3db:	push   edi
  41e3dc:	sbb    DWORD PTR ds:0xa437b22a,edi
  41e3e2:	test   BYTE PTR [edi-0x26],bl
  41e3e5:	dec    ebp
  41e3e6:	pop    es
  41e3e7:	dec    edi
  41e3e8:	dec    ebp
  41e3e9:	push   esi
  41e3ea:	cmp    eax,0xd848d762
  41e3ef:	les    ebx,FWORD PTR [esi-0x756856e]
  41e3f5:	pop    edx
  41e3f6:	add    esi,DWORD PTR [esi-0x3ce4cfe]
  41e3fc:	into   
  41e3fd:	ins    DWORD PTR es:[edi],dx
  41e3fe:	test   bl,cl
  41e400:	jmp    0xf7d4b2f2
  41e405:	sbb    dh,ah
  41e407:	mov    dl,0x33
  41e409:	hlt    
  41e40a:	jmp    0x41e3e0
  41e40c:	test   al,0x1
  41e40e:	fwait
  41e40f:	cdq    
  41e410:	xchg   edi,eax
  41e411:	test   DWORD PTR [ecx+0x79],eax
  41e414:	call   0xc84e:0xaa923e1c
  41e41b:	adc    bl,BYTE PTR [edx]
  41e41d:	int    0x7
  41e41f:	mov    ebp,0xd2c46abb
  41e424:	shl    BYTE PTR [eax],cl
  41e426:	jge    0x41e459
  41e428:	mov    esp,0x2ec769c0
  41e42d:	or     ebp,DWORD PTR cs:[ebx]
  41e430:	pop    ss
  41e431:	inc    ebx
  41e432:	fisubr WORD PTR [edx-0x6]
  41e435:	mov    cl,0x9e
  41e437:	cmp    ah,BYTE PTR [ecx-0x35]
  41e43a:	mov    esi,esi
  41e43c:	ret    0xed23
  41e43f:	or     ah,ah
  41e441:	xor    BYTE PTR [edx-0x72f22031],dh
  41e447:	jg     0x41e3d5
  41e449:	jge    0x41e463
  41e44b:	repnz push 0xffffff81
  41e44e:	add    eax,0x1512b809
  41e453:	sbb    dh,BYTE PTR [ebx]
  41e455:	in     eax,0xd9
  41e457:	push   0xffffffc9
  41e459:	shl    BYTE PTR ds:0xfff042f9,0xfd
  41e460:	idiv   BYTE PTR [ecx+ecx*1+0x1f]
  41e464:	add    al,0x85
  41e466:	out    dx,eax
  41e467:	xchg   BYTE PTR [edx],bh
  41e469:	push   ecx
  41e46a:	push   ss
  41e46b:	mov    ds:0xcc47a0ad,eax
  41e470:	push   edi
  41e471:	ror    DWORD PTR [edx+0x589faaf0],1
  41e477:	cwde   
  41e478:	mov    al,cl
  41e47a:	xor    DWORD PTR [eax],0x1403320d
  41e480:	cs fs xor ch,0x10
  41e485:	je     0x41e4f6
  41e487:	scas   al,BYTE PTR es:[edi]
  41e488:	mov    al,ds:0x73cec013
  41e48d:	lds    ebp,FWORD PTR [esi-0x5d]
  41e490:	sbb    ebx,DWORD PTR [ecx+eax*2]
  41e493:	fsubr  QWORD PTR gs:[esi+0x12]
  41e497:	pusha  
  41e498:	rol    eax,0x1e
  41e49b:	or     DWORD PTR gs:0x82fcb55f,ebp
  41e4a2:	sar    BYTE PTR [eax+0x4],cl
  41e4a5:	popf   
  41e4a6:	loope  0x41e47c
  41e4a8:	mov    al,ds:0xffd55f64
  41e4ad:	fbstp  TBYTE PTR [edi]
  41e4af:	sti    
  41e4b0:	mov    esp,DWORD PTR ss:[ecx-0x2bb0e2a6]
  41e4b7:	mov    ds:0x20beb6ac,al
  41e4bc:	data16 loope 0x41e44c
  41e4bf:	stos   DWORD PTR es:[edi],eax
  41e4c0:	(bad)  
  41e4c2:	adc    eax,0x28f6ca5a
  41e4c7:	add    edx,DWORD PTR [ebx]
  41e4c9:	inc    ebx
  41e4ca:	or     dh,al
  41e4cc:	push   ecx
  41e4cd:	jns    0x41e47e
  41e4cf:	cs xor al,0x81
  41e4d2:	test   BYTE PTR [ecx+0x7],cl
  41e4d5:	mov    ss,WORD PTR [eax+0x40]
  41e4d8:	lods   al,BYTE PTR ds:[esi]
  41e4d9:	adc    bh,BYTE PTR [esi]
  41e4db:	outs   dx,BYTE PTR ds:[esi]
  41e4dc:	stos   DWORD PTR es:[edi],eax
  41e4dd:	(bad)  
  41e4de:	push   cs
  41e4df:	in     eax,0xa7
  41e4e1:	pop    esp
  41e4e2:	inc    edx
  41e4e3:	sbb    DWORD PTR [esi+0x30fe215a],edi
  41e4e9:	inc    edi
  41e4ea:	repz and dl,BYTE PTR [esi]
  41e4ed:	adc    al,0x4c
  41e4ef:	js     0x41e50e
  41e4f1:	popf   
  41e4f2:	jmp    0x41e568
  41e4f4:	and    eax,0xf426b180
  41e4f9:	pop    ebx
  41e4fa:	sbb    bh,BYTE PTR [ebx+eiz*2+0x6538b65d]
  41e501:	sar    BYTE PTR [edx],1
  41e503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e504:	enter  0x6768,0x2b
  41e508:	ror    bh,1
  41e50a:	shl    DWORD PTR [ecx],0x51
  41e50d:	mov    ah,ah
  41e50f:	or     BYTE PTR [edx],cl
  41e511:	dec    ebx
  41e512:	hlt    
  41e513:	mov    ch,0xcc
  41e515:	ins    BYTE PTR es:[edi],dx
  41e516:	fiadd  WORD PTR [ebx+0x15]
  41e519:	sahf   
  41e51a:	bound  edx,QWORD PTR [esi-0x2f]
  41e51d:	imul   esp,DWORD PTR [edx],0xc
  41e520:	inc    ebx
  41e521:	cli    
  41e522:	popa   
  41e523:	dec    ecx
  41e524:	ins    BYTE PTR es:[edi],dx
  41e525:	or     dl,bl
  41e527:	dec    edx
  41e528:	inc    ebx
  41e529:	mov    esp,0x7bdb867f
  41e52e:	lea    ebx,[edx]
  41e530:	mov    eax,ds:0xd96ac3a8
  41e535:	mov    dl,0x31
  41e537:	fimul  DWORD PTR [eax+ebp*4+0x78]
  41e53b:	pop    ss
  41e53c:	ja     0x41e4ef
  41e53e:	in     al,dx
  41e53f:	cmp    cl,BYTE PTR [edx+ecx*8-0x45181e0a]
  41e546:	mov    ah,0x93
  41e548:	aas    
  41e549:	iret   
  41e54a:	inc    esp
  41e54b:	dec    edx
  41e54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e54d:	sbb    al,ah
  41e54f:	aad    0x66
  41e551:	test   al,0xbe
  41e553:	mov    edi,0x70b83995
  41e558:	(bad)  
  41e559:	ja     0x41e583
  41e55b:	mov    edx,0xac32cd9d
  41e560:	pop    ebx
  41e561:	fst    QWORD PTR ds:0x9ab14aa7
  41e567:	jne    0x41e58d
  41e569:	fcmove st,st(4)
  41e56b:	mov    esp,0x7cbd2e84
  41e570:	rcr    BYTE PTR [ecx+eiz*2+0x2e],1
  41e574:	popf   
  41e575:	(bad)  
  41e576:	mov    al,0x7b
  41e578:	jp     0x41e5a0
  41e57a:	cmp    ah,BYTE PTR [ecx]
  41e57c:	inc    BYTE PTR [ebx+ecx*2+0x2b36118b]
  41e583:	mov    bh,0x6d
  41e585:	mov    ds:0xcecb250c,eax
  41e58a:	int    0xe1
  41e58c:	inc    edx
  41e58d:	inc    ebp
  41e58e:	out    dx,eax
  41e58f:	or     edx,DWORD PTR [edx+eax*4-0x5a2ff814]
  41e596:	mov    WORD PTR [ebp-0x5b],fs
  41e599:	in     al,dx
  41e59a:	jnp    0x41e60b
  41e59c:	les    ebx,FWORD PTR [edx-0x29]
  41e59f:	dec    edx
  41e5a0:	cmp    DWORD PTR [ebx+ebp*4-0x7e403c2f],0xffffff8d
  41e5a8:	dec    esp
  41e5a9:	sbb    al,0x3f
  41e5ab:	inc    ebp
  41e5ac:	mov    esi,0x9c47bbd8
  41e5b1:	in     al,0xd
  41e5b3:	xor    bh,BYTE PTR [eax]
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	push   edx
  41e5b7:	nop
  41e5b8:	mov    ch,BYTE PTR [esi+edi*2]
  41e5bb:	cli    
  41e5bc:	or     edx,DWORD PTR ds:[edx+eax*2+0x26]
  41e5c1:	push   esp
  41e5c2:	popf   
  41e5c3:	addr16 enter 0xdbac,0x71
  41e5c8:	lahf   
  41e5c9:	mov    ah,0x4d
  41e5cb:	loop   0x41e61f
  41e5cd:	jl     0x41e558
  41e5cf:	adc    DWORD PTR [eax],esi
  41e5d1:	popa   
  41e5d2:	sbb    bh,BYTE PTR [edx-0x73]
  41e5d5:	add    BYTE PTR [edx+0x52286919],bh
  41e5db:	jle    0x41e613
  41e5dd:	ret    
  41e5de:	mov    edx,0xc8f1270a
  41e5e3:	pop    edi
  41e5e4:	fstp   DWORD PTR [ecx+0x4282c9c3]
  41e5eb:	addr16 aad 0x96
  41e5ee:	add    al,0x60
  41e5f0:	inc    ebx
  41e5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5f2:	dec    eax
  41e5f3:	out    dx,al
  41e5f4:	push   ebp
  41e5f5:	lods   al,BYTE PTR ds:[esi]
  41e5f6:	sub    ebp,DWORD PTR [edi+0x41]
  41e5f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5fa:	mov    ebp,0x2bbfaefb
  41e5ff:	and    BYTE PTR [edi],dh
  41e601:	jae    0x41e60d
  41e603:	aam    0xb4
  41e605:	mov    ah,bh
  41e607:	sbb    dl,al
  41e609:	pusha  
  41e60a:	sub    DWORD PTR [esi+0x4decb322],ebp
  41e610:	sar    cl,1
  41e612:	cli    
  41e613:	call   0x7737:0x6d453e2f
  41e61a:	xor    DWORD PTR [edx-0x69],esp
  41e61d:	popf   
  41e61e:	mov    ds:0xf460453f,eax
  41e623:	sbb    ch,cl
  41e625:	mov    ch,0xa6
  41e627:	test   eax,0x18328549
  41e62c:	jnp    0x41e622
  41e62e:	add    al,BYTE PTR [edi]
  41e630:	pop    ecx
  41e631:	and    ch,bl
  41e633:	mov    cs,ebx
  41e635:	mov    ecx,0x3edc51d5
  41e63a:	je     0x41e66e
  41e63c:	repz int 0xd2
  41e63f:	mov    ah,0xdd
  41e641:	outs   dx,DWORD PTR ds:[esi]
  41e642:	not    BYTE PTR [eax]
  41e644:	arpl   cx,si
  41e646:	xchg   esp,eax
  41e647:	dec    ebx
  41e648:	test   al,0x1b
  41e64a:	sbb    esp,DWORD PTR [esp+eiz*8+0x6060f65]
  41e651:	mov    ds:0xf34bd708,eax
  41e656:	and    al,0x46
  41e658:	test   DWORD PTR [ebp+0x67],ecx
  41e65b:	test   BYTE PTR [ecx],bl
  41e65d:	(bad)  
  41e65e:	dec    ebx
  41e65f:	push   eax
  41e660:	je     0x41e673
  41e662:	push   edi
  41e663:	add    DWORD PTR [edx+edx*8+0xf],esp
  41e667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e668:	jmp    0x9be9:0x9f9aeefc
  41e66f:	mov    bl,0xdf
  41e671:	test   DWORD PTR [ebx+0x70],edi
  41e674:	int3   
  41e675:	repz imul edx,edi,0x342f78fa
  41e67c:	or     eax,0x1f383495
  41e681:	mov    eax,0xfa60a82d
  41e686:	sbb    DWORD PTR ds:0x1be76da7,eax
  41e68c:	data16 daa 
  41e68e:	add    cl,bh
  41e690:	or     eax,0xb3498e0c
  41e695:	(bad)  
  41e697:	sbb    bh,ch
  41e699:	cmovno ebx,ebp
  41e69c:	mov    cl,0xab
  41e69e:	pushf  
  41e69f:	data16 repz jg 0x41e698
  41e6a3:	push   0x17b9dd1a
  41e6a8:	jns    0x41e632
  41e6aa:	fldcw  WORD PTR [ecx+0x72]
  41e6ad:	pop    edi
  41e6ae:	nop
  41e6af:	adc    edx,DWORD PTR [eax-0x36]
  41e6b2:	call   0xc9c5:0x7ff60cd1
  41e6b9:	je     0x41e645
  41e6bb:	lea    edx,[edx-0x4c]
  41e6be:	mov    ebx,0xd9ea9155
  41e6c3:	stos   BYTE PTR es:[edi],al
  41e6c4:	lds    edx,FWORD PTR [esi+0x234d74a1]
  41e6ca:	dec    esp
  41e6cb:	mov    ds:0x2171a76c,eax
  41e6d0:	je     0x41e706
  41e6d2:	add    BYTE PTR [ecx+0x5dfbf002],ch
  41e6d8:	xor    DWORD PTR [esi-0x3c4e8463],esp
  41e6de:	sub    dl,BYTE PTR [esi-0x63]
  41e6e1:	mov    ah,0x45
  41e6e3:	mov    dh,0x38
  41e6e5:	cmp    al,0x8
  41e6e7:	sbb    eax,DWORD PTR [ebp+eax*1+0x7414c73f]
  41e6ee:	push   ebp
  41e6ef:	add    eax,0xa7f3c8a2
  41e6f4:	adc    bl,BYTE PTR [si+0x5195]
  41e6f9:	imul   esp,DWORD PTR [ebx-0x891908e],0x4c
  41e700:	sub    BYTE PTR [esi+0x65a3b5d3],bl
  41e706:	jl     0x41e70e
  41e708:	jbe    0x41e6b6
  41e70a:	addr16 push ecx
  41e70c:	sub    ah,BYTE PTR [ebp+0x7937929d]
  41e712:	mov    WORD PTR [eax],fs
  41e714:	aas    
  41e715:	mov    dl,0x2a
  41e717:	xchg   BYTE PTR [ebp-0x7c],ah
  41e71a:	sub    eax,DWORD PTR [edi+0x0]
  41e71d:	and    DWORD PTR [esi*1+0xa0fd7ea],edi
  41e724:	mov    edx,0x2f2acd5f
  41e729:	call   FWORD PTR [esi-0x71]
  41e72c:	cld    
  41e72d:	popf   
  41e72e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e72f:	sub    esp,DWORD PTR [ebx+0x58]
  41e732:	rcr    DWORD PTR [edx+0x1227ce0],1
  41e738:	mov    esp,0x56292d2a
  41e73d:	mov    WORD PTR [esp],gs
  41e740:	aas    
  41e741:	rol    DWORD PTR [ecx-0x68a3b8d2],cl
  41e747:	cmp    al,BYTE PTR [esi]
  41e749:	imul   ebx,DWORD PTR [eax+esi*4],0xffffffac
  41e74d:	add    eax,0x3bb8ad58
  41e752:	js     0x41e7b9
  41e754:	loopne 0x41e736
  41e756:	jl     0x41e767
  41e758:	push   ss
  41e759:	mov    ch,0xb
  41e75b:	addr16 push edi
  41e75d:	adc    eax,DWORD PTR cs:[eax+0x1ab9186e]
  41e764:	inc    esi
  41e765:	lahf   
  41e766:	sbb    DWORD PTR [ebx],esi
  41e768:	test   al,0x25
  41e76a:	jle    0x41e71e
  41e76c:	jno    0x41e78f
  41e76e:	clc    
  41e76f:	call   0xe16fe781
  41e774:	cmp    BYTE PTR [eax+ebx*1],0x9b
  41e778:	xor    esi,DWORD PTR [esi+eiz*8-0x71d2eb6]
  41e77f:	mov    ch,0xfd
  41e781:	or     esi,DWORD PTR [edi*2+0x6dfeaff3]
  41e788:	dec    ebp
  41e789:	mov    cl,0xcb
  41e78b:	and    eax,0xbed28b35
  41e790:	adc    eax,0xb46fbf98
  41e795:	inc    edi
  41e796:	inc    ebp
  41e797:	or     eax,0x9ae007d7
  41e79c:	enter  0x12bb,0xf4
  41e7a0:	mov    bl,0x21
  41e7a2:	scas   eax,DWORD PTR es:[edi]
  41e7a3:	inc    ecx
  41e7a4:	popa   
  41e7a5:	cmp    eax,0x5021bf7d
  41e7aa:	push   esi
  41e7ab:	dec    eax
  41e7ac:	loop   0x41e7db
  41e7ae:	lock push ds
  41e7b0:	or     edi,DWORD PTR [edi-0x42]
  41e7b3:	das    
  41e7b4:	data16 jb 0x41e7be
  41e7b7:	sub    eax,0x95103f80
  41e7bc:	xor    ebp,DWORD PTR [ecx-0xcc11d68]
  41e7c2:	mov    al,0x15
  41e7c4:	mov    esi,0xdd9a95a6
  41e7c9:	jmp    0x41e791
  41e7cb:	neg    dl
  41e7cd:	sbb    dl,BYTE PTR [di]
  41e7d0:	retf   
  41e7d1:	into   
  41e7d2:	sub    DWORD PTR [edi-0x49a353ee],esp
  41e7d8:	mov    BYTE PTR [esi+0x435e9734],bl
  41e7de:	push   es
  41e7df:	push   DWORD PTR [ecx+0x7a]
  41e7e2:	in     eax,dx
  41e7e3:	sub    eax,0x9b9eab26
  41e7e8:	mov    edx,0x12265b94
  41e7ed:	cdq    
  41e7ee:	fidivr WORD PTR [eax]
  41e7f0:	add    bl,BYTE PTR [edi]
  41e7f2:	in     eax,dx
  41e7f3:	in     eax,0x8
  41e7f5:	xchg   ecx,eax
  41e7f6:	out    0xbe,al
  41e7f8:	add    eax,eax
  41e7fa:	pop    ebp
  41e7fb:	pop    ebp
  41e7fc:	and    al,BYTE PTR [esi-0x4f]
  41e7ff:	mov    edi,0x6bbc32ea
  41e804:	add    BYTE PTR [ebx+0x6d9f3bf4],cl
  41e80a:	lods   eax,DWORD PTR ds:[esi]
  41e80b:	arpl   bp,si
  41e80d:	out    dx,eax
  41e80e:	das    
  41e80f:	jge    0x41e82e
  41e811:	inc    edi
  41e812:	fadd   st(7),st
  41e814:	dec    ecx
  41e815:	push   ebp
  41e816:	push   ds
  41e817:	out    dx,eax
  41e818:	dec    edi
  41e819:	es aam 0x85
  41e81c:	pop    ss
  41e81d:	inc    ebx
  41e81e:	push   esp
  41e81f:	ss pop edi
  41e821:	rcr    BYTE PTR [eax-0x31],1
  41e824:	jo     0x41e7be
  41e826:	and    ch,BYTE PTR [ebp+0x7e]
  41e829:	shr    DWORD PTR [eax],0x77
  41e82c:	inc    edx
  41e82d:	mov    eax,ds:0x1887b305
  41e832:	inc    ebp
  41e833:	mov    ?,WORD PTR [eax]
  41e835:	xchg   sp,ax
  41e837:	shr    dl,cl
  41e839:	aam    0x9b
  41e83b:	xchg   ebp,eax
  41e83c:	sbb    ecx,DWORD PTR [edx]
  41e83e:	mov    DWORD PTR [esi],esp
  41e840:	inc    edx
  41e841:	retf   
  41e842:	push   eax
  41e843:	cmp    esi,DWORD PTR [esi+0xa7bc7a]
  41e849:	mov    ds:0xca68c9cb,al
  41e84e:	dec    edi
  41e84f:	mov    ?,edx
  41e851:	pop    eax
  41e852:	adc    eax,0x9aa08759
  41e857:	sub    ebp,DWORD PTR [eax-0x5aa646e3]
  41e85d:	fs push ebp
  41e85f:	xchg   edi,eax
  41e860:	arpl   WORD PTR [edi+eax*4+0x54],bx
  41e864:	add    al,0xa6
  41e866:	or     DWORD PTR [esi-0x43],edi
  41e869:	push   ebp
  41e86a:	repz cmp eax,0xed6c8678
  41e870:	add    edx,DWORD PTR [ecx-0x45]
  41e873:	and    ecx,DWORD PTR [edi+0x4bb6f]
  41e879:	bound  esi,QWORD PTR [edx+edx*4-0x474e8a6c]
  41e880:	sti    
  41e881:	add    esp,ebx
  41e883:	xchg   edx,eax
  41e884:	fnstenv ds:0xf3bf1b30
  41e88a:	popa   
  41e88b:	mov    al,ds:0x67a97bf0
  41e890:	dec    ebx
  41e891:	iret   
  41e892:	call   0xe21b2fed
  41e897:	(bad)  
  41e898:	sbb    edx,edx
  41e89a:	out    dx,al
  41e89b:	icebp  
  41e89c:	addr16 cld 
  41e89e:	dec    edx
  41e89f:	add    ch,bl
  41e8a1:	test   DWORD PTR [ebx],eax
  41e8a3:	sbb    BYTE PTR ds:0xd28b2898,0x6b
  41e8aa:	bound  eax,QWORD PTR [edi+0x45]
  41e8ad:	ja     0x41e86b
  41e8af:	push   es
  41e8b0:	push   esp
  41e8b1:	out    dx,al
  41e8b2:	dec    ebp
  41e8b3:	jge    0x41e89a
  41e8b5:	and    BYTE PTR [ebx],0x3d
  41e8b8:	icebp  
  41e8b9:	imul   DWORD PTR ds:0xa8389359
  41e8bf:	pop    esi
  41e8c0:	sbb    esp,DWORD PTR [eax+0x50969c14]
  41e8c6:	add    DWORD PTR [ebx-0x5e88a41f],0xb9232334
  41e8d0:	mov    ch,0x74
  41e8d2:	in     al,0x44
  41e8d4:	push   es
  41e8d5:	add    eax,DWORD PTR [esi]
  41e8d7:	mov    ds:0x7b009bb7,eax
  41e8dc:	pusha  
  41e8dd:	in     eax,dx
  41e8de:	and    ch,bh
  41e8e0:	mov    ch,0x8a
  41e8e3:	inc    eax
  41e8e4:	jbe    0x41e935
  41e8e6:	js     0x41e8fa
  41e8e8:	scas   al,BYTE PTR es:[edi]
  41e8e9:	mov    ebp,ebp
  41e8eb:	outs   dx,DWORD PTR ds:[esi]
  41e8ec:	pop    esp
  41e8ed:	lds    edi,FWORD PTR [edi+0x10]
  41e8f0:	shl    DWORD PTR [eax+0x1],1
  41e8f3:	and    DWORD PTR [edi+0x57b28ea8],eax
  41e8f9:	enter  0x9510,0x30
  41e8fd:	mov    eax,0x68f9f95c
  41e902:	daa    
  41e903:	pop    ebx
  41e904:	js     0x41e979
  41e906:	imul   esp,ecx,0xc36ea109
  41e90c:	xchg   ebx,edi
  41e90e:	fisubr WORD PTR [edx+0x41c666f8]
  41e914:	int    0x85
  41e916:	xchg   esp,eax
  41e917:	aaa    
  41e918:	retf   0xf41b
  41e91b:	mov    ebp,0x8441a3c7
  41e920:	mov    esp,0x5a49f286
  41e925:	mov    eax,ds:0xfc7a4dfd
  41e92a:	mov    ah,0xc0
  41e92c:	and    cl,BYTE PTR [ebx+0x7dee5ca5]
  41e932:	fs push esp
  41e934:	les    esi,FWORD PTR [edi+0x775abd18]
  41e93a:	pop    ebp
  41e93b:	outs   dx,DWORD PTR ds:[esi]
  41e93c:	inc    esi
  41e93d:	lods   eax,DWORD PTR ds:[esi]
  41e93e:	int3   
  41e93f:	aam    0xc8
  41e941:	pop    esp
  41e942:	xlat   BYTE PTR ds:[ebx]
  41e943:	dec    ebp
  41e944:	cmp    ch,0x81
  41e947:	inc    ebx
  41e948:	cmc    
  41e949:	xchg   ebp,eax
  41e94a:	or     bl,BYTE PTR [ecx+0x59]
  41e94d:	and    BYTE PTR [ebx-0x4c],bl
  41e950:	ins    BYTE PTR es:[edi],dx
  41e951:	dec    ebp
  41e952:	sbb    ch,BYTE PTR [edi-0x67]
  41e955:	lock rcl DWORD PTR [ebp-0x12b89c20],0x50
  41e95d:	cdq    
  41e95e:	arpl   WORD PTR [eax-0x7c8cf29a],bp
  41e964:	push   ebp
  41e965:	shr    eax,cl
  41e967:	and    eax,0xb8fc6aa
  41e96c:	leave  
  41e96d:	ds cwde 
  41e96f:	out    dx,eax
  41e970:	jns    0x41e995
  41e972:	clc    
  41e973:	and    eax,0x83129d98
  41e978:	pop    edx
  41e979:	adc    ah,bh
  41e97b:	pop    ebx
  41e97c:	inc    BYTE PTR [esi]
  41e97e:	pop    ebp
  41e97f:	inc    ebp
  41e980:	sahf   
  41e981:	(bad)  
  41e982:	jl     0x41e974
  41e984:	dec    ecx
  41e985:	mov    dh,0x2
  41e987:	(bad)  
  41e988:	(bad)  
  41e989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e98a:	jns    0x41e9c6
  41e98c:	mov    cl,0xe9
  41e98e:	xchg   edi,eax
  41e98f:	push   0x74
  41e991:	jle    0x41e9a7
  41e993:	pop    ebx
  41e994:	mov    ds:0xe5f1f74e,eax
  41e999:	ror    BYTE PTR [ebp-0x4b7816ef],cl
  41e99f:	mov    dh,0x29
  41e9a1:	std    
  41e9a2:	mov    ebx,0x1cf6359f
  41e9a7:	and    DWORD PTR [eax-0x2c],esi
  41e9aa:	mov    dh,ah
  41e9ac:	inc    ecx
  41e9ad:	rsqrtps xmm7,xmm4
  41e9b0:	mov    al,ds:0xbac4f9e8
  41e9b5:	imul   ebx,DWORD PTR [edx-0x3e],0xbeac5cc4
  41e9bc:	push   ss
  41e9bd:	push   ebp
  41e9be:	cmp    esp,0xb7f163d9
  41e9c4:	mov    WORD PTR [edi],cs
  41e9c6:	aaa    
  41e9c7:	mov    bl,0x28
  41e9c9:	mov    al,0x3c
  41e9cb:	les    eax,FWORD PTR [ebp+0x25fb4a1c]
  41e9d1:	pop    edx
  41e9d2:	mov    eax,0x3fe6a723
  41e9d7:	cmp    DWORD PTR [ebp-0x138fbab6],esi
  41e9dd:	or     al,0x7c
  41e9df:	cmp    edx,DWORD PTR [edx-0x68ec450a]
  41e9e5:	sti    
  41e9e6:	or     edx,DWORD PTR [esi-0x14bf826f]
  41e9ec:	aam    0x8e
  41e9ee:	pop    es
  41e9ef:	cdq    
  41e9f0:	push   cs
  41e9f1:	inc    eax
  41e9f2:	inc    ebx
  41e9f3:	or     DWORD PTR [esi],edi
  41e9f5:	femms  
  41e9f7:	xlat   BYTE PTR ds:[ebx]
  41e9f8:	clc    
  41e9f9:	xor    eax,DWORD PTR [edi-0x47c131c6]
  41e9ff:	inc    esp
  41ea00:	or     DWORD PTR [esi],edx
  41ea02:	stos   DWORD PTR es:[edi],eax
  41ea03:	xchg   esp,eax
  41ea04:	and    DWORD PTR [eax-0x591efc8c],eax
  41ea0a:	jo     0x41ea10
  41ea0c:	mov    bh,ah
  41ea0e:	sbb    ebp,ecx
  41ea10:	hlt    
  41ea11:	loopne 0x41ea02
  41ea13:	imul   esi,DWORD PTR [edx+0x49db08d],0x76
  41ea1a:	jmp    0xd79053e9
  41ea1f:	and    esp,DWORD PTR [esp+eax*1+0x54]
  41ea23:	cmp    al,0xa
  41ea25:	push   esp
  41ea26:	scas   eax,DWORD PTR es:[edi]
  41ea27:	loopne 0x41ea4b
  41ea29:	jae    0x41ea87
  41ea2b:	dec    eax
  41ea2c:	repnz push 0xbb645d06
  41ea32:	jb     0x41ea2a
  41ea34:	adc    BYTE PTR [esi+0x6b],bh
  41ea37:	sar    DWORD PTR [esi+0x3],cl
  41ea3a:	sub    esp,DWORD PTR [ebx]
  41ea3c:	enterw 0x2b5e,0x51
  41ea41:	jge    0x41ea24
  41ea43:	retf   
  41ea44:	data16 jo 0x41ea1d
  41ea47:	pop    ecx
  41ea48:	retf   0x445a
  41ea4b:	cs aas 
  41ea4d:	loope  0x41ea9e
  41ea4f:	jb     0x41ea18
  41ea51:	mov    dh,0x76
  41ea53:	push   0x5c
  41ea55:	or     esi,DWORD PTR [edx]
  41ea57:	mov    dl,0xf2
  41ea59:	in     al,dx
  41ea5a:	shr    DWORD PTR [ebx+edi*4],0xdb
  41ea5e:	xchg   esi,eax
  41ea5f:	bound  ebp,QWORD PTR [ecx]
  41ea61:	mov    ss,WORD PTR [edi]
  41ea63:	push   ebx
  41ea64:	int3   
  41ea65:	ja     0x41eaae
  41ea67:	mov    DWORD PTR [ecx+0x76f921f],ebx
  41ea6d:	dec    eax
  41ea6e:	jne    0x41ea4b
  41ea70:	sbb    BYTE PTR [esi-0x1331efe5],ch
  41ea76:	shl    DWORD PTR [edx+0x7871e8e0],cl
  41ea7c:	and    BYTE PTR [edx-0x3c],al
  41ea7f:	outs   dx,BYTE PTR ds:[esi]
  41ea80:	(bad)
  41ea84:	inc    eax
  41ea85:	and    DWORD PTR [esi+0x63],ebx
  41ea88:	xchg   ecx,eax
  41ea89:	mov    cl,0x1c
  41ea8b:	ins    BYTE PTR es:[edi],dx
  41ea8c:	mov    ds:0xdf4ef122,eax
  41ea91:	sbb    al,0xa9
  41ea93:	jp     0x41ea7e
  41ea95:	mov    eax,ds:0x81316ff7
  41ea9a:	jmp    0x86455325
  41ea9f:	scas   eax,DWORD PTR es:[edi]
  41eaa0:	dec    eax
  41eaa1:	xchg   ebx,eax
  41eaa2:	mov    ecx,0x977d5977
  41eaa7:	xchg   esi,eax
  41eaa8:	mov    cl,BYTE PTR [eax-0x140a398b]
  41eaae:	cmp    DWORD PTR ds:0xea0d2d12,0x22fae497
  41eab8:	mov    ebp,0xcdd3a76b
  41eabd:	mov    ch,0x2c
  41eabf:	xchg   ebx,eax
  41eac0:	mov    ebx,ss
  41eac2:	outs   dx,BYTE PTR ds:[esi]
  41eac3:	jb     0x41ea88
  41eac5:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac7:	popa   
  41eac8:	lahf   
  41eac9:	and    ebp,DWORD PTR [eax-0x4a6a31af]
  41eacf:	mov    bh,0xc1
  41ead1:	(bad)  
  41ead2:	xchg   ecx,eax
  41ead3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ead4:	sar    DWORD PTR [ebp+0x4d],cl
  41ead7:	pop    es
  41ead8:	push   ebx
  41ead9:	pop    esp
  41eada:	cmp    eax,0xc2501ca6
  41eadf:	test   dl,ch
  41eae1:	call   0x7b83:0x28ea7f73
  41eae8:	int3   
  41eae9:	push   0x8d82a9da
  41eaee:	and    al,0xf9
  41eaf0:	fwait
  41eaf1:	pop    ebp
  41eaf2:	xchg   ebp,eax
  41eaf3:	or     DWORD PTR [esi+0x78],ebp
  41eaf6:	push   ebx
  41eaf7:	xchg   esp,eax
  41eaf8:	(bad)  
  41eaf9:	(bad)  [eax+ecx*8+0x2d]
  41eafd:	inc    esi
  41eafe:	test   BYTE PTR [ebp-0x207111b0],cl
  41eb04:	cdq    
  41eb05:	lods   eax,DWORD PTR ds:[esi]
  41eb06:	ss cdq 
  41eb08:	jmp    0x41eaec
  41eb0a:	repz and BYTE PTR [edx+edi*4],dh
  41eb0e:	inc    ecx
  41eb0f:	fs imul esi,esi,0xffffffc9
  41eb13:	fld    QWORD PTR [eax]
  41eb15:	ret    0xdb4d
  41eb18:	cmp    eax,0xb192a9b
  41eb1d:	aad    0xf2
  41eb1f:	pop    esi
  41eb20:	pop    esp
  41eb21:	xchg   ebx,eax
  41eb22:	xchg   ecx,eax
  41eb23:	jns    0x41eb19
  41eb25:	arpl   WORD PTR [edi-0x18],sp
  41eb28:	add    BYTE PTR [eax+0x365765ce],dl
  41eb2e:	leave  
  41eb2f:	dec    esi
  41eb30:	popa   
  41eb31:	adc    eax,0xebd639b0
  41eb36:	fbstp  TBYTE PTR [ebx+ecx*1-0x3a8fca2d]
  41eb3d:	(bad)  
  41eb3e:	push   0xf1c41ed7
  41eb43:	ror    bl,cl
  41eb45:	out    0xcc,al
  41eb47:	cli    
  41eb48:	sahf   
  41eb49:	mov    ebp,0x79c68fad
  41eb4e:	sub    bh,BYTE PTR [ebx]
  41eb50:	add    BYTE PTR [esi-0x72],cl
  41eb53:	dec    ebx
  41eb54:	inc    ebp
  41eb55:	or     al,0x29
  41eb57:	pusha  
  41eb58:	scas   eax,DWORD PTR es:[edi]
  41eb59:	rol    BYTE PTR [ebp-0x1756435d],1
  41eb5f:	std    
  41eb60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb61:	test   eax,0xee9df816
  41eb66:	pop    edi
  41eb67:	push   ecx
  41eb68:	ret    
  41eb69:	aaa    
  41eb6a:	scas   al,BYTE PTR es:[edi]
  41eb6b:	es (bad) 
  41eb6d:	fldenv [ebx-0x63]
  41eb70:	cmp    eax,0xbd1217d2
  41eb75:	jecxz  0x41ebd2
  41eb77:	lods   al,BYTE PTR ds:[esi]
  41eb78:	lods   eax,DWORD PTR ds:[si]
  41eb7a:	repz test al,0x1b
  41eb7d:	loope  0x41ebc6
  41eb7f:	jbe    0x41eb70
  41eb81:	dec    edi
  41eb82:	pop    es
  41eb83:	push   es
  41eb84:	xchg   ecx,eax
  41eb85:	push   ss
  41eb86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb87:	leave  
  41eb88:	jle    0x41eb2a
  41eb8a:	clc    
  41eb8b:	(bad)  
  41eb8c:	fidivr DWORD PTR [ebp-0x2d]
  41eb8f:	mov    esp,0xd569efbe
  41eb94:	rcl    BYTE PTR [edi],cl
  41eb96:	or     BYTE PTR ds:0x339,bl
  41eb9b:	xchg   edi,eax
  41eb9c:	mov    ds:0xbaef8c82,eax
  41eba1:	inc    eax
  41eba2:	sbb    bl,BYTE PTR [ebx]
  41eba4:	pop    ss
  41eba5:	xor    eax,0xb8e41139
  41ebaa:	shl    cl,cl
  41ebac:	fwait
  41ebad:	(bad)  
  41ebae:	ficomp WORD PTR [edx-0x28]
  41ebb1:	outs   dx,DWORD PTR ds:[esi]
  41ebb2:	enter  0x31aa,0x73
  41ebb6:	stos   BYTE PTR es:[edi],al
  41ebb7:	retf   
  41ebb8:	les    ecx,FWORD PTR [edi+ecx*2]
  41ebbb:	push   ds
  41ebbc:	dec    esp
  41ebbd:	call   0x6ab6c725
  41ebc2:	lods   eax,DWORD PTR ds:[esi]
  41ebc3:	mov    ah,0x1
  41ebc5:	jmp    0x2c1e:0x689919ef
  41ebcc:	ret    0xafe9
  41ebcf:	adc    DWORD PTR [ecx-0x218ff224],0x26
  41ebd6:	ja     0x41ec04
  41ebd8:	(bad)  
  41ebd9:	loope  0x41ec4d
  41ebdb:	jl     0x41eb61
  41ebdd:	dec    edx
  41ebde:	sar    bh,cl
  41ebe0:	and    DWORD PTR [ecx],edi
  41ebe2:	in     al,dx
  41ebe3:	cmp    BYTE PTR [eax-0x6ceb7cda],al
  41ebe9:	bound  ebx,QWORD PTR [edi]
  41ebeb:	stc    
  41ebec:	jo     0x41ebea
  41ebee:	loopne 0x41ec52
  41ebf0:	loop   0x41eb75
  41ebf2:	(bad)  
  41ebf3:	repz data16 (bad) 
  41ebf6:	repnz push eax
  41ebf8:	mov    WORD PTR [esi-0x41],fs
  41ebfb:	ja     0x41ec56
  41ebfd:	push   ebp
  41ebfe:	inc    ebx
  41ebff:	cli    
  41ec00:	pop    ebp
  41ec01:	push   esp
  41ec02:	into   
  41ec03:	xchg   DWORD PTR [ebx-0x37e11205],ebx
  41ec09:	lahf   
  41ec0a:	pop    ss
  41ec0b:	mov    eax,0xc8dd0c6a
  41ec10:	call   0xbbf83666
  41ec15:	push   esi
  41ec16:	or     ah,bh
  41ec18:	stos   BYTE PTR es:[edi],al
  41ec19:	leave  
  41ec1a:	rcr    bh,1
  41ec1c:	pop    eax
  41ec1d:	lds    edx,FWORD PTR ds:0x750739a6
  41ec23:	mov    eax,ds:0xc5c9ea7d
  41ec28:	jno    0x41ebe2
  41ec2a:	mov    esp,0x6d9ff442
  41ec2f:	add    al,0x62
  41ec31:	cmp    al,0x60
  41ec33:	sar    ebp,cl
  41ec35:	push   edi
  41ec36:	pop    ebp
  41ec37:	pop    es
  41ec38:	and    esi,0xffffff96
  41ec3b:	ins    BYTE PTR es:[edi],dx
  41ec3c:	leave  
  41ec3d:	push   edi
  41ec3e:	cmp    edi,DWORD PTR [edx-0x50]
  41ec41:	and    ah,bl
  41ec43:	aaa    
  41ec44:	sbb    al,0x58
  41ec46:	cmp    eax,DWORD PTR [edi+ecx*1]
  41ec49:	repnz imul edx,edx,0x49
  41ec4d:	je     0x41ec85
  41ec4f:	pop    esi
  41ec50:	adc    eax,0x3ed3f4a3
  41ec55:	fwait
  41ec56:	imul   ebp,DWORD PTR [esi-0x5a],0x2a
  41ec5a:	js     0x41ec17
  41ec5c:	adc    DWORD PTR ds:0x2ed549,0xb39ac107
  41ec66:	std    
  41ec67:	sub    DWORD PTR [ecx],edi
  41ec69:	jnp    0x41ec52
  41ec6b:	mov    ebx,DWORD PTR [edi]
  41ec6d:	out    0x99,eax
  41ec6f:	pop    edx
  41ec70:	adc    dl,ch
  41ec72:	sbb    BYTE PTR [esi+0x5e1f4494],dh
  41ec78:	(bad)  
  41ec79:	jb     0x41ec48
  41ec7b:	(bad)  
  41ec7c:	xchg   esp,eax
  41ec7d:	add    al,dh
  41ec7f:	pushf  
  41ec80:	push   esi
  41ec81:	ret    0x9d7e
  41ec84:	inc    ebp
  41ec85:	lds    esi,FWORD PTR [ebx+0x303711d5]
  41ec8b:	mov    edx,0xf815acec
  41ec90:	sar    bh,cl
  41ec92:	or     edx,DWORD PTR [edi+0x30]
  41ec95:	or     ebx,edx
  41ec97:	loop   0x41ed07
  41ec99:	mov    WORD PTR [esi+0x5d],?
  41ec9c:	or     DWORD PTR [edi+0x2f],eax
  41ec9f:	add    eax,0x4217c148
  41eca4:	in     eax,0xd3
  41eca6:	pop    ss
  41eca7:	loope  0x41ecc0
  41eca9:	push   ebp
  41ecaa:	pop    edx
  41ecab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecac:	lds    edi,FWORD PTR [ecx+0x76]
  41ecaf:	pop    edi
  41ecb0:	ja     0x41ec3e
  41ecb2:	mov    esi,0xf934910c
  41ecb7:	jns    0x41ed05
  41ecb9:	neg    BYTE PTR [ecx]
  41ecbb:	das    
  41ecbc:	call   0x7359:0xc1c73294
  41ecc3:	test   bh,0xec
  41ecc6:	int3   
  41ecc7:	xchg   BYTE PTR [eax-0x31],cl
  41ecca:	(bad)  
  41eccb:	fst    QWORD PTR [ecx-0x63e15787]
  41ecd1:	js     0x41eca1
  41ecd3:	es ds aas 
  41ecd6:	jns    0x41ecb4
  41ecd8:	inc    DWORD PTR [edx+0x74]
  41ecdb:	jno    0x41ecd5
  41ecdd:	jmp    0x5036:0xb673b3f3
  41ece4:	cwde   
  41ece5:	mov    WORD PTR [ebp+0x1dd64fc9],fs
  41eceb:	xchg   esp,eax
  41ecec:	add    BYTE PTR [esi-0x6e6717e3],bh
  41ecf2:	pusha  
  41ecf3:	push   0x2143045b
  41ecf8:	scas   al,BYTE PTR es:[edi]
  41ecf9:	mov    dh,0xc1
  41ecfb:	outs   dx,BYTE PTR ds:[esi]
  41ecfc:	icebp  
  41ecfd:	inc    eax
  41ecfe:	cmp    dh,ch
  41ed00:	mov    dh,0xc1
  41ed02:	pop    ecx
  41ed03:	add    dh,BYTE PTR [ebx+0x16ddee2b]
  41ed09:	pop    ecx
  41ed0a:	push   ebp
  41ed0b:	adc    ecx,DWORD PTR [edi+edx*1-0x1]
  41ed0f:	mov    al,ds:0x122ee947
  41ed14:	pop    ebx
  41ed15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed16:	daa    
  41ed17:	xchg   esi,eax
  41ed18:	enter  0xa8b4,0x41
  41ed1c:	addr16 call 0x34d7:0x930356b5
  41ed24:	jecxz  0x41ecf3
  41ed26:	repz mov al,ds:0x8391f3af
  41ed2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed2d:	test   BYTE PTR [ecx+0x18],dh
  41ed30:	test   eax,0xeb36e6ab
  41ed35:	or     BYTE PTR [eax+0x6b66c476],ah
  41ed3b:	std    
  41ed3c:	push   esp
  41ed3d:	sbb    eax,DWORD PTR [ebp-0x38]
  41ed40:	xchg   edi,eax
  41ed41:	pop    edx
  41ed42:	stc    
  41ed43:	fidivr DWORD PTR ds:0x85f85899
  41ed49:	jle    0x41ecf6
  41ed4b:	sbb    ch,BYTE PTR [edi-0x9ae6042]
  41ed51:	in     eax,dx
  41ed52:	dec    edi
  41ed53:	pop    eax
  41ed54:	push   dx
  41ed56:	jb     0x41edb5
  41ed58:	fidiv  DWORD PTR [ecx+0x2536c832]
  41ed5e:	out    0x20,eax
  41ed60:	jp     0x41edb0
  41ed62:	imul   ebx,DWORD PTR [ebx],0xbe52027c
  41ed68:	jo     0x41ede2
  41ed6a:	cmp    eax,0x951c9b81
  41ed6f:	push   eax
  41ed70:	repnz pop ebx
  41ed72:	aad    0x6
  41ed74:	shl    BYTE PTR [edx-0x766ad456],0x8b
  41ed7b:	and    DWORD PTR [eax-0x2e713a3f],eax
  41ed81:	pushf  
  41ed82:	and    BYTE PTR [eax-0xf97b63b],ah
  41ed88:	cld    
  41ed89:	jne    0x41edeb
  41ed8b:	(bad)  
  41ed8c:	adc    ch,al
  41ed8e:	jp     0x41ed4a
  41ed90:	add    eax,0xee40c100
  41ed95:	in     al,0xf9
  41ed97:	call   DWORD PTR [eax+0x7c]
  41ed9a:	repz sbb DWORD PTR [eax-0x10],0x24
  41ed9f:	popf   
  41eda0:	fild   DWORD PTR [ebx+esi*1+0x43]
  41eda4:	fisub  DWORD PTR [edx]
  41eda6:	mov    ds:0x1cc58946,eax
  41edab:	hlt    
  41edac:	and    BYTE PTR [esi+0x33c30b68],ah
  41edb2:	cmp    BYTE PTR [eax+0x3487359c],dl
  41edb8:	mov    ecx,0x1b49c0cb
  41edbd:	or     eax,0x3ca226f8
  41edc2:	adc    al,0x19
  41edc4:	and    ebp,DWORD PTR [esi+0x6544c1f6]
  41edca:	ja     0x41ede2
  41edcc:	pop    edx
  41edcd:	mov    cl,0x55
  41edcf:	inc    eax
  41edd0:	in     eax,0xde
  41edd2:	iret   
  41edd3:	aad    0x57
  41edd5:	xchg   ecx,eax
  41edd6:	mov    ah,BYTE PTR [edi+0x4f]
  41edd9:	pop    esp
  41edda:	test   DWORD PTR [ebx-0x38],esp
  41eddd:	push   esp
  41edde:	ins    DWORD PTR es:[edi],dx
  41eddf:	sub    al,ch
  41ede1:	nop
  41ede2:	mov    al,0xc3
  41ede4:	push   cs
  41ede5:	in     eax,0x26
  41ede7:	sub    esi,ecx
  41ede9:	jb     0x41ee66
  41edeb:	dec    esi
  41edec:	in     al,0xb1
  41edee:	mov    dh,0xe8
  41edf0:	inc    esi
  41edf1:	repnz xor eax,esp
  41edf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edf5:	es in  eax,dx
  41edf7:	push   eax
  41edf8:	add    BYTE PTR [esi],cl
  41edfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfb:	mov    eax,ds:0xd3b2e526
  41ee00:	in     eax,0x85
  41ee02:	in     al,dx
  41ee03:	js     0x41edac
  41ee05:	int    0x95
  41ee07:	xchg   ebp,eax
  41ee08:	push   esp
  41ee09:	push   edi
  41ee0a:	and    cl,0xa6
  41ee0d:	xchg   ecx,eax
  41ee0e:	cmp    al,0x18
  41ee10:	loopne 0x41ee44
  41ee12:	dec    esp
  41ee13:	jnp    0x41ee6d
  41ee15:	icebp  
  41ee16:	cwde   
  41ee17:	pushf  
  41ee18:	pop    edi
  41ee19:	xchg   BYTE PTR [eax],cl
  41ee1b:	xor    dh,ch
  41ee1d:	inc    edi
  41ee1e:	mov    ch,0x3f
  41ee20:	and    BYTE PTR [esi+0x1b06da50],cl
  41ee26:	add    edx,eax
  41ee28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee29:	sub    BYTE PTR [ecx-0x71],dl
  41ee2c:	jbe    0x41ee6d
  41ee2e:	jl     0x41edb2
  41ee30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee31:	icebp  
  41ee32:	ret    0x19c7
  41ee35:	jns    0x41edf3
  41ee37:	xor    esi,ebp
  41ee39:	call   0x98b2:0xb838b5f5
  41ee40:	fdiv   QWORD PTR [edx+0x22]
  41ee43:	inc    edi
  41ee44:	jle    0x41ee99
  41ee46:	pop    ebp
  41ee47:	cli    
  41ee48:	pushf  
  41ee49:	add    al,0xd0
  41ee4b:	mov    BYTE PTR [edi+edi*2+0xf354eff],0xea
  41ee53:	sub    DWORD PTR [ecx+0x4ead5b3d],0x8026b949
  41ee5d:	fst    st(7)
  41ee5f:	rcl    dh,cl
  41ee61:	add    eax,0x88c64dad
  41ee66:	test   DWORD PTR [edx],ebp
  41ee68:	xor    al,0xe6
  41ee6a:	jo     0x41ee14
  41ee6c:	clc    
  41ee6d:	pop    ebp
  41ee6e:	and    ecx,ebx
  41ee70:	push   ebp
  41ee71:	xor    dh,BYTE PTR [ecx]
  41ee73:	test   eax,0x63bec610
  41ee78:	mov    ?,WORD PTR [edx-0x49]
  41ee7b:	sbb    cl,BYTE PTR [edx+0x4f]
  41ee7e:	aad    0xdc
  41ee80:	je     0x41eeb8
  41ee82:	or     bl,cl
  41ee84:	ret    0xd448
  41ee87:	cmp    eax,0xd7f0c3c4
  41ee8c:	pop    ss
  41ee8d:	xor    DWORD PTR [edx],esi
  41ee8f:	mov    ah,BYTE PTR [edx-0x63]
  41ee92:	jbe    0x41eec9
  41ee94:	data16 outs dx,BYTE PTR ds:[esi]
  41ee96:	cs cmp esp,ecx
  41ee99:	shl    ch,cl
  41ee9b:	xchg   DWORD PTR [eax+0x7c4267cb],ebp
  41eea1:	push   es
  41eea2:	sbb    BYTE PTR [ebp-0x55],cl
  41eea5:	les    ecx,FWORD PTR [ecx+0x3]
  41eea8:	shr    BYTE PTR [ebp+0xcfcd8ef],cl
  41eeae:	xchg   esp,eax
  41eeaf:	cli    
  41eeb0:	mov    ah,0xd7
  41eeb2:	repnz mov ds:0xd62c15de,al
  41eeb8:	sti    
  41eeb9:	sbb    al,0xf3
  41eebb:	in     al,0x22
  41eebd:	adc    bh,BYTE PTR [eax+edx*1-0x547255b1]
  41eec4:	adc    DWORD PTR [edi+esi*4-0x678d01a9],ebx
  41eecb:	cmp    eax,0x56c101e0
  41eed0:	cmp    al,0x91
  41eed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed3:	aad    0x9d
  41eed5:	sbb    bl,BYTE PTR [ebx]
  41eed7:	push   esp
  41eed8:	loopne 0x41ef37
  41eeda:	jg     0x41ee66
  41eedc:	fidiv  DWORD PTR [esi-0x55]
  41eedf:	rol    BYTE PTR [edx],1
  41eee1:	jmp    0x7c6:0xe8071cb7
  41eee8:	mov    bh,al
  41eeea:	adc    eax,0xe9331f03
  41eeef:	ret    0x827f
  41eef2:	dec    ecx
  41eef3:	mov    bh,0x15
  41eef5:	cmp    esp,DWORD PTR [ebp-0x7f131844]
  41eefb:	out    0x56,al
  41eefd:	adc    ebp,DWORD PTR [ebx+0x13]
  41ef00:	pop    ebp
  41ef01:	jg     0x41ee86
  41ef03:	sbb    ah,BYTE PTR [esi-0x6b]
  41ef06:	hlt    
  41ef07:	test   BYTE PTR [ecx-0x572c8f62],0x40
  41ef0e:	inc    ebx
  41ef0f:	xor    BYTE PTR [eax+edi*1-0x7f],bl
  41ef13:	xor    al,0xef
  41ef15:	retf   0xca70
  41ef18:	(bad)  
  41ef19:	fwait
  41ef1a:	sbb    eax,edi
  41ef1c:	push   ds
  41ef1d:	xor    al,0x20
  41ef1f:	and    eax,0x89c83d51
  41ef24:	out    0x4,al
  41ef26:	sbb    eax,0xea455ab8
  41ef2b:	jmp    0x16dc0427
  41ef30:	in     al,0x28
  41ef32:	sub    al,0x68
  41ef34:	sbb    ecx,DWORD PTR [ebx]
  41ef36:	(bad)  
  41ef37:	push   edx
  41ef38:	pop    esp
  41ef39:	pop    edx
  41ef3b:	adc    al,BYTE PTR [edx+esi*4+0xf0f850b]
  41ef42:	adc    edi,DWORD PTR [eax-0x4befcd42]
  41ef48:	iret   
  41ef49:	add    al,0xd
  41ef4b:	fisttp DWORD PTR [ebx]
  41ef4d:	repnz ds cmp bl,dl
  41ef51:	out    0x9b,eax
  41ef53:	cmp    al,0x4b
  41ef55:	test   ebp,0x2256120f
  41ef5b:	mov    ebx,0x4cfc371
  41ef60:	nop
  41ef61:	dec    edx
  41ef62:	xchg   DWORD PTR [edx],edi
  41ef64:	pop    edx
  41ef65:	mov    edx,fs
  41ef67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef68:	pop    eax
  41ef69:	lea    ebp,[ecx-0x48]
  41ef6c:	xor    eax,0xa2433d25
  41ef71:	jmp    0x9ec1ba0f
  41ef76:	repz cdq 
  41ef78:	xor    esp,edi
  41ef7a:	in     al,dx
  41ef7b:	pusha  
  41ef7c:	int3   
  41ef7d:	sbb    al,0xb9
  41ef7f:	inc    edx
  41ef80:	mov    ebx,0x58e98107
  41ef85:	cdq    
  41ef86:	xchg   DWORD PTR [ebx+esi*8+0x75],esi
  41ef8a:	fild   WORD PTR [esp+ebp*8-0x29]
  41ef8e:	hlt    
  41ef8f:	pop    ss
  41ef90:	adc    bh,dh
  41ef92:	xchg   ebp,eax
  41ef93:	mov    BYTE PTR [edi-0x6a],al
  41ef96:	loope  0x41ef6b
  41ef98:	dec    eax
  41ef99:	hlt    
  41ef9a:	xchg   DWORD PTR [eax-0x14],edi
  41ef9d:	xor    DWORD PTR [edi+0x2b447226],eax
  41efa3:	push   0x2b08a415
  41efa8:	cs loope 0x41f005
  41efab:	dec    ebp
  41efac:	(bad)  
  41efad:	shl    DWORD PTR ds:[eax-0x18],1
  41efb1:	ud2    
  41efb3:	sbb    BYTE PTR [esi-0x45],dh
  41efb6:	pop    es
  41efb7:	out    dx,al
  41efb8:	pop    ecx
  41efb9:	vdivss xmm3,xmm2,xmm5
  41efbd:	adc    al,0x28
  41efbf:	or     eax,0x22874500
  41efc4:	sbb    DWORD PTR cs:[esi+0x3e6672e4],edi
  41efcb:	(bad)  [eax]
  41efcd:	mov    WORD PTR [ebx+0x38],cs
  41efd0:	jge    0x41effa
  41efd2:	or     ebx,DWORD PTR [ebp+0x67]
  41efd5:	cld    
  41efd6:	jg     0x41efcf
  41efd8:	es cmc 
  41efda:	test   al,0x57
  41efdc:	add    BYTE PTR [ebx],dh
  41efde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdf:	or     ebp,DWORD PTR [ebp+0xc25dd6e]
  41efe5:	cld    
  41efe6:	mov    eax,0xf60d52c8
  41efeb:	xchg   esp,eax
  41efec:	sti    
  41efed:	punpckhbw mm4,QWORD PTR [ebx+0xe]
  41eff1:	stos   DWORD PTR es:[edi],eax
  41eff2:	pop    esp
  41eff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff4:	cld    
  41eff5:	retf   
  41eff6:	sbb    dh,BYTE PTR [edx]
  41eff8:	mov    WORD PTR [ebp+0x2d],fs
  41effb:	ins    DWORD PTR es:[edi],dx
  41effc:	adc    BYTE PTR [esi+ebp*4],ch
  41efff:	pop    edx
  41f000:	jg     0x41f01d
  41f002:	jg     0x41ef84
  41f004:	jge    0x41efa3
  41f006:	inc    esi
  41f007:	xchg   ebx,eax
  41f008:	clc    
  41f009:	(bad)  
  41f00b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f00c:	xchg   edi,eax
  41f00d:	pop    ss
  41f00e:	outs   dx,BYTE PTR ds:[esi]
  41f00f:	(bad)  
  41f010:	stos   DWORD PTR es:[edi],eax
  41f011:	push   esi
  41f012:	xchg   BYTE PTR [edx-0x57ed816f],dh
  41f018:	cmp    DWORD PTR [edi+0x6fd88210],esp
  41f01e:	pop    es
  41f01f:	in     eax,dx
  41f020:	test   BYTE PTR [ebx],0x55
  41f023:	out    dx,al
  41f024:	ds aas 
  41f026:	sub    BYTE PTR [edi+esi*2+0x5c],0x97
  41f02b:	ins    DWORD PTR es:[edi],dx
  41f02c:	mov    edx,0x870284fe
  41f031:	std    
  41f032:	imul   esi,ebp,0x15
  41f035:	add    edi,edx
  41f037:	sub    BYTE PTR [edx],dl
  41f039:	inc    edi
  41f03a:	outs   dx,BYTE PTR ds:[esi]
  41f03b:	mov    esp,0x17faf4c8
  41f040:	cwde   
  41f041:	nop
  41f042:	mov    eax,0xb5ab2c09
  41f047:	xchg   ecx,eax
  41f048:	mov    cl,BYTE PTR [esi-0x6a]
  41f04b:	push   0x71
  41f04d:	fsub   st(2),st
  41f04f:	dec    ecx
  41f050:	les    ebp,FWORD PTR [edx+0x5c]
  41f053:	jno    0x41f03a
  41f055:	into   
  41f056:	jmp    0x957f29f8
  41f05b:	jae    0x41f044
  41f05d:	dec    ebp
  41f05e:	dec    edx
  41f05f:	shr    DWORD PTR [esi+0x406b63c],0x53
  41f066:	mov    al,ds:0x29fdf26a
  41f06b:	(bad)  
  41f06c:	pop    ebp
  41f06d:	jns    0x41f05e
  41f06f:	loope  0x41f067
  41f071:	dec    esp
  41f072:	popa   
  41f073:	push   ebx
  41f074:	xchg   edi,eax
  41f075:	jg     0x41f097
  41f077:	and    edx,ebp
  41f079:	sar    DWORD PTR [edi+0x3e47ee31],1
  41f07f:	xlat   BYTE PTR ds:[ebx]
  41f080:	xchg   DWORD PTR [eax],edx
  41f082:	xor    BYTE PTR [edx],dh
  41f084:	fld    TBYTE PTR [ebx]
  41f086:	fs jle 0x41f07e
  41f089:	xor    esi,DWORD PTR [ebx-0x5aa5450a]
  41f08f:	or     al,0x38
  41f091:	mul    BYTE PTR [esp+ecx*1]
  41f094:	cld    
  41f095:	jnp    0x41f081
  41f097:	mov    esp,DWORD PTR [eax+0x7c]
  41f09a:	jmp    0x41f0cd
  41f09c:	mov    edi,0x2bb0bb7
  41f0a1:	cli    
  41f0a2:	aad    0x87
  41f0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a5:	dec    edx
  41f0a6:	inc    edx
  41f0a7:	sbb    ebp,DWORD PTR [edi-0x5f]
  41f0aa:	call   0xe8a295ad
  41f0af:	icebp  
  41f0b0:	std    
  41f0b1:	jge    0x41f098
  41f0b3:	ror    DWORD PTR [edi-0x2ad1f998],1
  41f0b9:	inc    edi
  41f0ba:	out    dx,al
  41f0bb:	lock mov ecx,0x9adcf8db
  41f0c1:	in     al,0xe9
  41f0c3:	pop    esi
  41f0c4:	jne    0x41f0da
  41f0c6:	and    eax,DWORD PTR [ecx+edx*8]
  41f0c9:	shl    BYTE PTR [edi-0x13823791],1
  41f0cf:	sub    al,0xbf
  41f0d1:	cmp    BYTE PTR [ebp-0x491efd03],dl
  41f0d7:	dec    ebx
  41f0d8:	add    eax,DWORD PTR [ecx*4+0xeda6512]
  41f0df:	ja     0x41f0f7
  41f0e1:	stos   DWORD PTR es:[edi],eax
  41f0e2:	xor    BYTE PTR [eax+ecx*8+0x70],al
  41f0e6:	jp     0x41f150
  41f0e8:	out    dx,ax
  41f0ea:	(bad)  
  41f0eb:	lods   al,BYTE PTR ds:[esi]
  41f0ec:	inc    edx
  41f0ed:	mov    WORD PTR [ebx],cs
  41f0ef:	outs   dx,BYTE PTR ds:[esi]
  41f0f0:	aad    0xb
  41f0f2:	fistp  WORD PTR ds:0xa472c8e7
  41f0f8:	fild   QWORD PTR [ebx-0x4e]
  41f0fb:	arpl   ax,bx
  41f0fd:	test   esi,0xa778dd94
  41f103:	cwde   
  41f104:	push   esp
  41f105:	jmp    0x41f17b
  41f107:	test   BYTE PTR [edi-0x2a263872],ch
  41f10d:	bound  edx,QWORD PTR [edx+eax*1-0x5]
  41f111:	sbb    BYTE PTR [ebx+ecx*4-0x3e41adb1],0x81
  41f119:	scas   al,BYTE PTR es:[edi]
  41f11a:	fmulp  st(2),st
  41f11c:	xchg   esi,eax
  41f11d:	push   0xa9831da4
  41f122:	adc    esp,edx
  41f124:	cmp    al,0x6f
  41f126:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41f128:	popf   
  41f129:	xchg   ecx,eax
  41f12a:	xor    ecx,esp
  41f12c:	push   ss
  41f12d:	push   edi
  41f12e:	pop    esi
  41f12f:	pop    ss
  41f130:	inc    esi
  41f131:	fdiv   DWORD PTR [eax+0xf7682ea]
  41f137:	imul   edx,edi,0x917b9e60
  41f13d:	sti    
  41f13e:	sbb    BYTE PTR [edi],0x57
  41f141:	jmp    0x41f14a
  41f143:	dec    eax
  41f144:	mov    dl,0x6e
  41f146:	push   esp
  41f147:	test   DWORD PTR [ebp+0x4b384918],edx
  41f14d:	cmp    ecx,DWORD PTR [ecx+edx*1-0x137cda6e]
  41f154:	sahf   
  41f155:	sbb    DWORD PTR [ebp-0x44],ebx
  41f158:	jae    0x41f158
  41f15a:	out    0x4d,eax
  41f15c:	lods   al,BYTE PTR ds:[esi]
  41f15d:	inc    ebp
  41f15e:	fs xor esp,esp
  41f161:	jle    0x41f1e0
  41f163:	les    ebp,FWORD PTR [ebx-0xa]
  41f166:	lock jl 0x41f112
  41f169:	(bad)  
  41f16b:	mov    edi,0xf653b2bf
  41f170:	test   eax,0x615cc060
  41f175:	sti    
  41f176:	out    0x58,eax
  41f178:	xlat   BYTE PTR ds:[ebx]
  41f179:	(bad)  
  41f17a:	mov    WORD PTR [ebp-0x52],es
  41f17d:	and    BYTE PTR [eax],bl
  41f17f:	mov    BYTE PTR [edi+0x14],dh
  41f182:	sub    edx,ecx
  41f184:	mov    dh,ch
  41f186:	or     DWORD PTR [edx+0x11e67a2],0xb344f322
  41f190:	xor    eax,DWORD PTR [edi-0x4d]
  41f193:	fwait
  41f194:	xchg   edx,eax
  41f195:	mov    edi,0x3b7d8fd1
  41f19a:	lock dec ebx
  41f19c:	push   ebp
  41f19d:	scas   eax,DWORD PTR es:[edi]
  41f19e:	sub    bl,BYTE PTR [esi-0x3e14e186]
  41f1a4:	gs push ecx
  41f1a6:	in     al,0xba
  41f1a8:	pop    ds
  41f1a9:	in     al,dx
  41f1aa:	add    DWORD PTR [eax-0x34],edi
  41f1ad:	push   ebx
  41f1ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1af:	icebp  
  41f1b0:	pop    ebp
  41f1b1:	xor    eax,0x457b1353
  41f1b6:	pop    eax
  41f1b7:	stos   BYTE PTR es:[edi],al
  41f1b8:	ror    BYTE PTR [edx+0x57cc5722],1
  41f1be:	add    DWORD PTR es:[edi-0x7b],edx
  41f1c2:	pop    ebx
  41f1c3:	inc    ecx
  41f1c4:	daa    
  41f1c5:	dec    eax
  41f1c6:	inc    edx
  41f1c7:	xchg   dh,dl
  41f1c9:	mov    dh,0x4d
  41f1cb:	xchg   esp,eax
  41f1cc:	jbe    0x41f189
  41f1ce:	test   DWORD PTR [edx+0x59dc4afb],eax
  41f1d4:	pop    edx
  41f1d5:	xchg   ebp,eax
  41f1d6:	push   edi
  41f1d7:	sbb    al,BYTE PTR [eax]
  41f1d9:	les    eax,FWORD PTR [ebp+0x11ce8c5]
  41f1df:	mov    ebp,0xfd1716dc
  41f1e4:	inc    ebp
  41f1e5:	cmp    BYTE PTR [edi+0x2e],cl
  41f1e8:	push   eax
  41f1e9:	inc    DWORD PTR [edx+0x78]
  41f1ec:	xchg   DWORD PTR [edi+0x5c93cb28],ebp
  41f1f2:	loope  0x41f242
  41f1f4:	test   DWORD PTR [eax],esp
  41f1f6:	out    dx,eax
  41f1f7:	and    bh,BYTE PTR [eax+0x94735cd]
  41f1fd:	fdivr  DWORD PTR [ecx+0x70b050fe]
  41f203:	sub    DWORD PTR [edx-0x32],0xa79dd28d
  41f20a:	jmp    0x41f207
  41f20c:	shl    DWORD PTR [ecx],0x0
  41f20f:	dec    edx
  41f210:	push   ebp
  41f211:	push   eax
  41f212:	dec    ah
  41f214:	pop    esp
  41f215:	daa    
  41f216:	rcr    DWORD PTR ds:0x3d198cab,0x91
  41f21d:	pop    esp
  41f21e:	mov    esi,?
  41f220:	adc    al,0xb2
  41f222:	jo     0x41f250
  41f224:	sub    esp,DWORD PTR [ebx]
  41f226:	test   eax,0xd981b5b4
  41f22b:	mov    bl,0x60
  41f22d:	popa   
  41f22e:	in     al,dx
  41f22f:	lahf   
  41f230:	loopne 0x41f2b1
  41f232:	adc    DWORD PTR [esi],0x40
  41f235:	test   DWORD PTR [ecx],0x556d96db
  41f23b:	enter  0x7be6,0x5d
  41f23f:	sub    dh,dl
  41f241:	loop   0x41f23a
  41f243:	clc    
  41f244:	outs   dx,BYTE PTR ds:[esi]
  41f245:	sub    ah,BYTE PTR [eax]
  41f247:	aad    0x94
  41f249:	out    dx,eax
  41f24a:	mov    eax,ds:0x8f2fffc6
  41f24f:	inc    ecx
  41f250:	adc    BYTE PTR [ebx],bh
  41f252:	jns    0x41f246
  41f254:	xor    DWORD PTR ds:0x7f90679c,0x56d67fcd
  41f25e:	and    DWORD PTR [eax-0x66892e09],ebx
  41f264:	dec    esi
  41f265:	mov    DWORD PTR [ecx+eiz*8+0x7f],esi
  41f269:	sahf   
  41f26a:	xor    esp,ebp
  41f26c:	adc    DWORD PTR [ebp-0x13461080],ebp
  41f272:	xlat   BYTE PTR ds:[ebx]
  41f273:	mov    WORD PTR [edx],ss
  41f275:	lea    eax,[edi+esi*4-0x5eb37620]
  41f27c:	bound  esp,QWORD PTR [edx]
  41f27e:	ret    
  41f27f:	popa   
  41f280:	mov    esp,0x218572d4
  41f285:	jmp    0x634a:0x2c743802
  41f28c:	cmp    eax,0xe3357474
  41f291:	sub    bh,BYTE PTR [edi+0xd975e8c]
  41f297:	rol    DWORD PTR [ebx-0x52],1
  41f29a:	or     al,0xfd
  41f29c:	fsub   DWORD PTR [esi-0x61ec54f1]
  41f2a2:	dec    eax
  41f2a3:	mov    al,ds:0x30553452
  41f2a8:	add    al,dh
  41f2aa:	sub    eax,0x5fd75cf9
  41f2af:	jle    0x41f28a
  41f2b1:	scas   eax,DWORD PTR es:[edi]
  41f2b2:	out    dx,al
  41f2b3:	pop    ebx
  41f2b4:	daa    
  41f2b5:	xor    dh,BYTE PTR [ebx]
  41f2b7:	xor    eax,0xa1f0ff25
  41f2bc:	xchg   ebx,eax
  41f2bd:	mov    ds:0x975b65c6,al
  41f2c2:	es in  al,dx
  41f2c4:	icebp  
  41f2c5:	adc    edi,ebx
  41f2c7:	mov    esi,gs
  41f2c9:	or     ebp,esi
  41f2cb:	arpl   WORD PTR [eax-0x2b4cc649],ax
  41f2d1:	add    esp,0x5b
  41f2d4:	and    al,0x9
  41f2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2d7:	into   
  41f2d8:	mov    ds:0xef52ff1,al
  41f2dd:	xchg   edx,eax
  41f2de:	xor    al,0xdf
  41f2e0:	dec    edx
  41f2e1:	in     eax,dx
  41f2e2:	adc    DWORD PTR ds:0x2a730366,ebp
  41f2e8:	mov    ebp,0x51cf6dc9
  41f2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2ee:	push   esi
  41f2ef:	loope  0x41f35e
  41f2f1:	test   BYTE PTR [edx+0x22],bl
  41f2f4:	js     0x41f327
  41f2f6:	push   es
  41f2f7:	aas    
  41f2f8:	test   dl,dl
  41f2fa:	rcr    DWORD PTR ds:0xf7914421,1
  41f300:	stos   BYTE PTR es:[edi],al
  41f301:	aad    0x17
  41f303:	pop    edi
  41f304:	icebp  
  41f305:	mov    ch,0x23
  41f307:	bound  ebx,QWORD PTR gs:[ebp+0x4db5c96e]
  41f30e:	add    eax,0x42ccbbb9
  41f313:	imul   ecx,esi,0xffffffa1
  41f316:	fdivrp st(0),st
  41f318:	out    0xad,al
  41f31a:	out    dx,eax
  41f31b:	std    
  41f31c:	xchg   ecx,eax
  41f31d:	xor    al,dl
  41f31f:	pop    eax
  41f320:	mov    ?,WORD PTR [eax-0x5094f282]
  41f326:	cli    
  41f327:	xor    eax,DWORD PTR [esi-0x4e]
  41f32a:	or     ebx,0x6b4ae41b
  41f330:	out    0x39,eax
  41f332:	sbb    DWORD PTR [eax],ebp
  41f334:	mov    ch,0xd8
  41f336:	push   eax
  41f337:	cwde   
  41f338:	icebp  
  41f339:	cwde   
  41f33a:	or     al,0xc3
  41f33c:	jne    0x41f34a
  41f33e:	jno    0x41f3ae
  41f340:	inc    eax
  41f341:	jle    0x41f33b
  41f343:	push   edx
  41f344:	and    al,0x28
  41f346:	sub    al,0x3e
  41f348:	test   al,0xe0
  41f34a:	in     al,dx
  41f34b:	add    al,BYTE PTR [ebp+0x6c59fd63]
  41f351:	iret   
  41f352:	push   ebp
  41f353:	in     al,0x5c
  41f355:	or     ch,BYTE PTR [edi]
  41f357:	fcom   QWORD PTR [edi+0x19f59854]
  41f35d:	and    BYTE PTR [eax],ch
  41f35f:	mov    edi,ebx
  41f361:	fadd   st(3),st
  41f363:	sub    BYTE PTR [ecx],bl
  41f365:	or     esi,DWORD PTR [edx]
  41f367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f368:	jmp    0x636eeb59
  41f36d:	int3   
  41f36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f36f:	mov    dl,0xbb
  41f371:	aas    
  41f372:	and    eax,0xdc20b29d
  41f377:	loope  0x41f3d1
  41f379:	out    dx,al
  41f37a:	jns    0x41f3a6
  41f37c:	scas   al,BYTE PTR es:[edi]
  41f37d:	imul   ebp,DWORD PTR [ebp+0x24a66812],0xbac0160c
  41f387:	mul    eax
  41f389:	mov    ch,0x69
  41f38b:	daa    
  41f38c:	arpl   dx,si
  41f38e:	fwait
  41f38f:	rcl    BYTE PTR [eax],cl
  41f391:	je     0x41f3be
  41f393:	dec    eax
  41f394:	fsubr  QWORD PTR [esi+0x44]
  41f397:	out    dx,eax
  41f398:	sub    eax,0x3b9c3201
  41f39d:	lods   eax,DWORD PTR ds:[esi]
  41f39e:	lods   al,BYTE PTR ds:[esi]
  41f39f:	xor    al,BYTE PTR [ebx+0x7b]
  41f3a2:	fbld   TBYTE PTR [ebp-0x4344aec1]
  41f3a8:	sub    dl,BYTE PTR [edx-0x7c878add]
  41f3ae:	icebp  
  41f3af:	pop    esp
  41f3b0:	inc    ebp
  41f3b1:	sub    eax,0xdcf2c371
  41f3b6:	push   eax
  41f3b7:	mov    ecx,0x64293f17
  41f3bc:	(bad)  
  41f3be:	inc    edx
  41f3bf:	popa   
  41f3c0:	mov    ah,0x57
  41f3c2:	cmp    BYTE PTR [ecx],ch
  41f3c4:	jg     0x41f413
  41f3c6:	sti    
  41f3c7:	or     al,0x1d
  41f3c9:	jno    0x41f3dd
  41f3cb:	xor    BYTE PTR [ebx],dl
  41f3cd:	add    DWORD PTR [ebx+0xbb3c6bc],ecx
  41f3d3:	pop    esp
  41f3d4:	repnz not BYTE PTR [edi-0x61695245]
  41f3db:	test   eax,0xa91d7eb2
  41f3e0:	cwde   
  41f3e1:	sub    DWORD PTR [ebx-0x549d9b17],ecx
  41f3e7:	idiv   BYTE PTR [eax]
  41f3e9:	cdq    
  41f3ea:	(bad)  
  41f3eb:	fimul  WORD PTR [ecx]
  41f3ed:	push   eax
  41f3ee:	fisub  DWORD PTR [ecx+eax*1-0x44]
  41f3f2:	scas   al,BYTE PTR es:[edi]
  41f3f3:	mov    ch,BYTE PTR ss:[esi+0x4f]
  41f3f7:	setle  ch
  41f3fa:	in     al,0x72
  41f3fc:	ret    0x1686
  41f3ff:	xor    esp,esp
  41f401:	inc    edx
  41f402:	div    ebx
  41f404:	mov    al,BYTE PTR [eax+0x41]
  41f407:	ja     0x41f39a
  41f409:	jmp    0x41f45c
  41f40b:	sub    esp,edx
  41f40d:	int3   
  41f40e:	xchg   esi,eax
  41f40f:	pop    ebx
  41f410:	pushf  
  41f411:	pop    edx
  41f412:	or     edx,ecx
  41f414:	mov    eax,ds:0x25510f0a
  41f419:	(bad)
  41f41c:	pop    edx
  41f41d:	inc    esi
  41f41e:	fmul   QWORD PTR [edx-0x5af016b8]
  41f424:	cmp    eax,0x543f5ae2
  41f429:	adc    al,0x70
  41f42b:	push   0xffffffba
  41f42d:	out    dx,al
  41f42e:	stos   DWORD PTR es:[edi],eax
  41f42f:	xor    DWORD PTR [edx+0x14],0x12b53440
  41f436:	mov    esp,0xf5a8c61b
  41f43b:	cmp    DWORD PTR [ebx-0x1b],esp
  41f43e:	or     eax,0x1167bf98
  41f443:	shr    ecx,cl
  41f445:	nop
  41f446:	inc    edi
  41f447:	out    0x47,eax
  41f449:	enter  0xab44,0xa7
  41f44d:	mov    bh,0x19
  41f44f:	jmp    0x41f426
  41f451:	mov    edx,0x4e8e3794
  41f456:	rcr    bl,1
  41f458:	inc    ecx
  41f459:	in     eax,0x47
  41f45b:	mov    eax,0x9bbefb41
  41f460:	pusha  
  41f461:	mov    edx,0xf1c4b7ff
  41f466:	xor    eax,0x76f23486
  41f46b:	test   eax,0xdede1f46
  41f470:	cwde   
  41f471:	push   esi
  41f472:	lahf   
  41f473:	test   DWORD PTR [esi-0x29],esi
  41f476:	xchg   esp,eax
  41f477:	add    dl,0xb7
  41f47a:	test   BYTE PTR [ecx],0x1b
  41f47d:	scas   eax,DWORD PTR es:[edi]
  41f47e:	stos   BYTE PTR es:[edi],al
  41f47f:	icebp  
  41f480:	mov    edi,es
  41f482:	js     0x41f4ed
  41f484:	jge    0x41f4cb
  41f486:	inc    eax
  41f487:	adc    dh,dl
  41f489:	and    cl,bh
  41f48b:	or     BYTE PTR [eax],bl
  41f48d:	mov    cl,0x7b
  41f48f:	test   eax,0x19b670bd
  41f494:	mov    esi,0xfe17bad9
  41f499:	imul   edx,DWORD PTR [ebx+0x4e37caf4],0xd33ddab
  41f4a3:	lahf   
  41f4a4:	stc    
  41f4a5:	cmp    ebp,0xffffff87
  41f4a8:	and    eax,0xa9f01320
  41f4ad:	dec    ebx
  41f4ae:	sub    eax,0x2eace9dd
  41f4b3:	sub    al,0x9b
  41f4b5:	mov    dl,0x2d
  41f4b7:	into   
  41f4b8:	push   esi
  41f4b9:	push   edi
  41f4ba:	int    0xcd
  41f4bc:	and    ch,dh
  41f4be:	leave  
  41f4bf:	push   ss
  41f4c0:	push   eax
  41f4c1:	fstp   TBYTE PTR ds:0x7483
  41f4c6:	popf   
  41f4c7:	xchg   BYTE PTR [esi],bh
  41f4c9:	je     0x41f4ae
  41f4cb:	ud1    ebx,edi
  41f4ce:	inc    eax
  41f4cf:	daa    
  41f4d0:	xchg   edx,eax
  41f4d1:	out    0x68,al
  41f4d3:	mov    ebp,0xe43b3b17
  41f4d8:	popf   
  41f4d9:	mov    ch,0xb6
  41f4db:	js     0x41f549
  41f4dd:	push   esi
  41f4de:	push   edi
  41f4df:	mov    ss:0x8f32b7de,al
  41f4e5:	xchg   edx,eax
  41f4e6:	pop    es
  41f4e7:	mov    ch,0x13
  41f4e9:	sar    BYTE PTR ds:0x7b579cf9,cl
  41f4ef:	(bad)  
  41f4f0:	popa   
  41f4f1:	mov    ?,WORD PTR [ebp-0x69be9402]
  41f4f7:	jmp    0xa87f5d18
  41f4fc:	sti    
  41f4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4fe:	lahf   
  41f4ff:	add    bh,dl
  41f501:	inc    ebx
  41f502:	lock add DWORD PTR [eax+0x1],0x7e3484e5
  41f50a:	hlt    
  41f50b:	int    0x1f
  41f50d:	dec    eax
  41f50e:	fwait
  41f50f:	jg     0x41f4e5
  41f511:	pop    edx
  41f512:	int3   
  41f513:	xor    dl,BYTE PTR [esi]
  41f515:	test   al,0xa2
  41f517:	int    0x1e
  41f519:	sti    
  41f51a:	(bad)  
  41f51c:	cmp    DWORD PTR [ebx],esp
  41f51e:	push   esp
  41f51f:	cmp    al,BYTE PTR [edx]
  41f521:	dec    DWORD PTR gs:[esi-0xb]
  41f525:	and    eax,0x4cdde6f6
  41f52a:	jb     0x41f51e
  41f52c:	dec    ebx
  41f52d:	add    al,0x5
  41f52f:	sar    DWORD PTR [esi+0x68],0xf
  41f533:	(bad)  
  41f534:	sti    
  41f535:	xlat   BYTE PTR ds:[ebx]
  41f536:	jmp    0xada26234
  41f53b:	nop
  41f53c:	(bad)  
  41f53d:	es je  0x41f53c
  41f540:	mov    ds:0xa143ae9a,eax
  41f545:	add    DWORD PTR [ebx],ecx
  41f547:	pop    ecx
  41f548:	scas   al,BYTE PTR es:[edi]
  41f549:	les    ebx,FWORD PTR [eax-0x1a490e07]
  41f54f:	and    DWORD PTR [eax+0x6c514227],0x44041edd
  41f559:	inc    esi
  41f55a:	in     al,0xf
  41f55c:	pusha  
  41f55d:	and    eax,0xfd017922
  41f562:	xchg   BYTE PTR [edi-0x54],dl
  41f565:	outs   dx,DWORD PTR ds:[esi]
  41f566:	dec    edx
  41f567:	loop   0x41f529
  41f569:	or     al,0xe3
  41f56b:	stos   BYTE PTR es:[edi],al
  41f56c:	jmp    0x5d57db4e
  41f571:	retf   
  41f572:	mov    gs,WORD PTR [ebp-0x47]
  41f575:	out    dx,eax
  41f576:	das    
  41f577:	idiv   bl
  41f579:	aas    
  41f57a:	mov    esp,0x5a5de397
  41f57f:	cdq    
  41f580:	loop   0x41f55a
  41f582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f583:	or     ebx,DWORD PTR [ebp+eax*4-0x115f50e]
  41f58a:	dec    eax
  41f58b:	inc    ecx
  41f58c:	pop    ecx
  41f58d:	xchg   ebx,eax
  41f58e:	xor    al,BYTE PTR [edi+0x51]
  41f591:	mov    ecx,0xcadc5bfe
  41f596:	add    BYTE PTR [edi+0x4b478aee],ch
  41f59c:	sbb    eax,0xa447a33a
  41f5a1:	loopne 0x41f572
  41f5a3:	imul   edi,DWORD PTR ds:0x75dd76ad,0xaf6618d
  41f5ad:	or     esi,DWORD PTR [esi]
  41f5af:	xchg   ebx,eax
  41f5b0:	mov    ebp,0x8b4ab1f0
  41f5b5:	outs   dx,DWORD PTR ds:[esi]
  41f5b6:	pushf  
  41f5b7:	xor    eax,0x2c00e0e2
  41f5bc:	in     al,dx
  41f5bd:	xchg   edi,esp
  41f5bf:	(bad)  
  41f5c0:	sbb    edi,DWORD PTR [edi]
  41f5c2:	imul   ebp,DWORD PTR [ecx],0x2668e734
  41f5c8:	hlt    
  41f5c9:	jmp    0x3fa517c8
  41f5ce:	adc    DWORD PTR es:[edi-0x66f81459],esi
  41f5d5:	mov    WORD PTR [esi],gs
  41f5d7:	shr    DWORD PTR [esp+ecx*8-0x4f],1
  41f5db:	js     0x41f5b3
  41f5dd:	pusha  
  41f5de:	adc    dl,BYTE PTR [ebx]
  41f5e0:	pusha  
  41f5e1:	xlat   BYTE PTR ds:[ebx]
  41f5e2:	push   0x3f6a0c75
  41f5e7:	adc    edx,DWORD PTR [eax]
  41f5e9:	fdivr  st(3),st
  41f5eb:	sub    BYTE PTR ds:0xf1057d79,dl
  41f5f1:	or     ebp,DWORD PTR [ebx+0x764fb629]
  41f5f7:	pop    ss
  41f5f8:	lds    ebx,FWORD PTR [esi+0x50b6d559]
  41f5fe:	js     0x41f5f2
  41f600:	sar    al,1
  41f602:	into   
  41f603:	(bad)  
  41f605:	dec    BYTE PTR [edx+0x6419c352]
  41f60b:	fwait
  41f60c:	add    al,0xb6
  41f60e:	mov    dl,0x5c
  41f610:	fcomi  st,st(1)
  41f612:	sbb    DWORD PTR [ebx],esi
  41f614:	inc    esp
  41f615:	push   ebx
  41f616:	mov    ch,0x55
  41f618:	mov    edx,0x64f48d5e
  41f61d:	and    edi,esp
  41f61f:	adc    al,0x93
  41f621:	xor    al,0x4c
  41f623:	inc    ebp
  41f624:	add    esi,DWORD PTR [esi-0xb]
  41f627:	pusha  
  41f628:	hlt    
  41f629:	jle    0x41f5e0
  41f62b:	retf   
  41f62c:	sbb    al,0xf8
  41f62e:	popa   
  41f62f:	xlat   BYTE PTR ds:[ebx]
  41f630:	sbb    esi,DWORD PTR [ecx-0x7141e10e]
  41f636:	mov    ch,0xeb
  41f638:	test   al,ah
  41f63a:	out    0x62,al
  41f63c:	xor    eax,0x66e4e9c2
  41f641:	imul   ecx,DWORD PTR [ebp+ecx*4-0x36a7e16e],0x438b629
  41f64c:	fistp  WORD PTR [ebx+0x58e78aaf]
  41f652:	mov    eax,0x8296cc6
  41f657:	pop    esp
  41f658:	sub    BYTE PTR [ebx],cl
  41f65a:	stc    
  41f65b:	mov    al,ds:0xafc31a63
  41f660:	adc    DWORD PTR [ecx+0xc],ebp
  41f663:	or     dl,BYTE PTR [eax-0x6e8a207e]
  41f669:	stc    
  41f66a:	lods   al,BYTE PTR cs:[esi]
  41f66c:	arpl   WORD PTR [esi-0x43],ax
  41f66f:	sub    BYTE PTR [eax+0x42],dl
  41f672:	mov    edi,DWORD PTR [edx+0x79a7ea69]
  41f678:	repz loope 0x41f69b
  41f67b:	push   0x9d2a974a
  41f680:	cmp    bh,BYTE PTR [ebx]
  41f682:	test   ebp,0x9e7673db
  41f688:	dec    ebp
  41f689:	adc    BYTE PTR [edi+0x40],bl
  41f68c:	push   es
  41f68d:	retf   
  41f68e:	and    al,0x52
  41f690:	sub    BYTE PTR cs:[esi-0x75],0xaa
  41f695:	icebp  
  41f696:	lahf   
  41f697:	scas   eax,DWORD PTR es:[edi]
  41f698:	cmc    
  41f699:	cmp    BYTE PTR [ebp+0x296a016b],cl
  41f69f:	dec    ecx
  41f6a0:	xor    al,0x3
  41f6a2:	cmp    bh,BYTE PTR [edx]
  41f6a4:	repz jecxz 0x41f6a8
  41f6a7:	mov    edx,0xe96daf8d
  41f6ac:	outs   dx,BYTE PTR ds:[esi]
  41f6ad:	add    cl,BYTE PTR [ebx+0x21145139]
  41f6b3:	sbb    ch,BYTE PTR [ebx]
  41f6b5:	pop    eax
  41f6b6:	or     ch,BYTE PTR [edx]
  41f6b8:	sti    
  41f6b9:	mov    cl,0xe1
  41f6bb:	push   esp
  41f6bc:	shl    BYTE PTR [edi+0x1197de8e],1
  41f6c2:	mov    cs,ecx
  41f6c4:	outs   dx,BYTE PTR ds:[esi]
  41f6c5:	cmp    al,0xce
  41f6c7:	xor    bl,BYTE PTR [eax+edx*8-0x742f329e]
  41f6ce:	cmp    ah,BYTE PTR [ebx-0x25]
  41f6d1:	add    ch,bl
  41f6d3:	push   es
  41f6d4:	or     BYTE PTR [edx+0x597203df],bl
  41f6da:	xor    eax,0x59c09185
  41f6df:	jne    0x41f669
  41f6e1:	pop    esi
  41f6e2:	ror    dl,1
  41f6e4:	lds    ebp,FWORD PTR [esi]
  41f6e6:	scas   al,BYTE PTR es:[edi]
  41f6e7:	ficomp WORD PTR [eax+0x55]
  41f6ea:	ins    DWORD PTR es:[edi],dx
  41f6eb:	jp     0x41f6cf
  41f6ed:	mov    ebp,0x5467febb
  41f6f2:	or     ch,dh
  41f6f4:	dec    di
  41f6f6:	arpl   WORD PTR [ebx+0x19],ax
  41f6f9:	xchg   BYTE PTR [ecx+eax*2],dl
  41f6fc:	pusha  
  41f6fd:	mov    ebp,0x4004d733
  41f702:	outs   dx,BYTE PTR ds:[esi]
  41f703:	icebp  
  41f704:	std    
  41f705:	jbe    0x41f746
  41f707:	push   eax
  41f708:	or     dh,BYTE PTR [ecx]
  41f70a:	push   esi
  41f70b:	clc    
  41f70c:	in     al,0x20
  41f70e:	dec    esp
  41f70f:	sub    eax,0x34aff809
  41f714:	xor    eax,0xc880578a
  41f719:	xor    bh,BYTE PTR [edx+esi*8+0x6c83ca33]
  41f720:	(bad)  
  41f721:	mov    WORD PTR [edi],?
  41f723:	xchg   ebp,eax
  41f724:	push   esp
  41f725:	test   BYTE PTR [ebx+0x43],0xf1
  41f729:	xchg   ebx,eax
  41f72a:	adc    ah,BYTE PTR [eax+ebx*1+0x6f]
  41f72e:	mov    bl,0xe6
  41f730:	mov    BYTE PTR [edx+0x281d9d95],al
  41f736:	js     0x41f754
  41f738:	or     eax,0xb98bc3ae
  41f73d:	sbb    eax,0x31644c91
  41f742:	inc    edi
  41f743:	ins    DWORD PTR es:[edi],dx
  41f744:	test   eax,0x1e48adc9
  41f749:	inc    esi
  41f74a:	mov    DWORD PTR [ebp+0x3b],ebp
  41f74d:	add    dh,BYTE PTR [ebp+0x26]
  41f750:	fild   WORD PTR es:[edi+0x577f6ba5]
  41f757:	outs   dx,BYTE PTR ds:[esi]
  41f758:	jb     0x41f74b
  41f75a:	or     ebp,edi
  41f75c:	int3   
  41f75d:	pop    esp
  41f75e:	fdiv   DWORD PTR [ebx]
  41f760:	hlt    
  41f761:	jmp    0xfac9:0xf127314f
  41f768:	xor    ebx,0x8e035176
  41f76e:	pushf  
  41f76f:	test   al,0x8a
  41f771:	or     ebp,DWORD PTR [edx+0x7ba5bd00]
  41f777:	xor    ch,BYTE PTR [eax+0x61]
  41f77a:	mov    ch,0xc
  41f77c:	xchg   ecx,eax
  41f77d:	pop    ebp
  41f77e:	clc    
  41f77f:	aad    0x3b
  41f781:	nop
  41f782:	xor    dh,ch
  41f784:	push   ds
  41f785:	xor    BYTE PTR [ebp+0x59ea859f],ah
  41f78b:	sub    ecx,DWORD PTR [edi-0x30]
  41f78e:	rcr    BYTE PTR [esi+0x2718820a],0x89
  41f795:	mov    ebx,DWORD PTR [ebp+0x28]
  41f798:	addr16 ja 0x41f7e2
  41f79b:	push   0x8
  41f79d:	ss stos DWORD PTR es:[edi],eax
  41f79f:	call   0xcf26:0x14aaf1a4
  41f7a6:	sub    eax,0x63e3a8e0
  41f7ab:	sub    BYTE PTR [eax+eiz*1-0x11e3679f],0x5f
  41f7b3:	xlat   BYTE PTR ds:[ebx]
  41f7b4:	xor    BYTE PTR [ecx-0x5e5dfc6a],bh
  41f7ba:	push   edx
  41f7bb:	loope  0x41f7b3
  41f7bd:	add    bh,BYTE PTR [ebx+edx*8]
  41f7c0:	add    ebx,esi
  41f7c2:	mov    esi,0x4a58b8b2
  41f7c7:	cmp    DWORD PTR [ebx+eiz*2-0x46a0f980],esi
  41f7ce:	and    eax,0xc3407052
  41f7d3:	pop    ebx
  41f7d4:	outs   dx,DWORD PTR ds:[esi]
  41f7d5:	in     al,0xe2
  41f7d7:	mov    dh,0xf
  41f7d9:	dec    ecx
  41f7da:	arpl   WORD PTR [ebp-0x2c],ax
  41f7dd:	inc    esp
  41f7de:	sti    
  41f7df:	nop
  41f7e0:	push   ebx
  41f7e1:	pop    ebp
  41f7e2:	(bad)  
  41f7e4:	adc    DWORD PTR [esi+0xf],eax
  41f7e7:	add    eax,0x9750b027
  41f7ec:	lds    esi,FWORD PTR [esi+0x72ca0e00]
  41f7f2:	jg     0x41f7f3
  41f7f4:	mov    esp,cs
  41f7f6:	push   ecx
  41f7f7:	pop    ebp
  41f7f8:	sahf   
  41f7f9:	xor    ecx,DWORD PTR [eax+0x61fb3239]
  41f7ff:	sbb    BYTE PTR [bx-0x41b1],ch
  41f804:	inc    esi
  41f805:	dec    eax
  41f806:	mov    cl,0x3a
  41f808:	(bad)  
  41f809:	outs   dx,DWORD PTR ds:[esi]
  41f80a:	fst    QWORD PTR [ebx+0x5f7dcbb9]
  41f810:	jbe    0x41f7a2
  41f812:	cmp    eax,0xdbf312dc
  41f817:	inc    ebp
  41f818:	(bad)  
  41f819:	push   ecx
  41f81a:	lods   eax,DWORD PTR ds:[esi]
  41f81b:	mov    ch,0x16
  41f81d:	mov    ebp,0xaa2f9756
  41f822:	jns    0x41f84b
  41f824:	inc    eax
  41f825:	inc    ebp
  41f826:	daa    
  41f827:	test   BYTE PTR [esp+edx*2],bl
  41f82a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f82b:	retf   0x663a
  41f82e:	loopne 0x41f7f9
  41f830:	leave  
  41f831:	adc    dh,dh
  41f833:	into   
  41f834:	out    0xb7,al
  41f836:	shl    BYTE PTR [esi+0x5d3ecf25],0xb2
  41f83d:	mov    al,0x99
  41f83f:	sbb    dh,bl
  41f841:	scas   al,BYTE PTR es:[edi]
  41f842:	inc    eax
  41f843:	mov    ss,WORD PTR [edi]
  41f845:	xor    eax,0xd246ef5e
  41f84a:	(bad)  
  41f84b:	imul   edx,DWORD PTR [ecx+eiz*2+0x6393d75a],0xffffffe1
  41f853:	popa   
  41f854:	mov    edi,ds
  41f856:	lock dec ecx
  41f858:	cdq    
  41f859:	mov    bl,0xf2
  41f85b:	adc    edi,DWORD PTR [edx-0x5921bcc]
  41f861:	push   ecx
  41f862:	fbstp  TBYTE PTR [eax-0x7768cc8b]
  41f868:	xor    eax,0x805fa581
  41f86d:	je     0x41f8b4
  41f86f:	dec    ecx
  41f870:	(bad)  
  41f872:	mov    dl,0xac
  41f874:	and    DWORD PTR [edi+0x54],ecx
  41f877:	imul   esp,DWORD PTR [edx-0x3acc3e84],0x1b57ab45
  41f881:	adc    eax,0x8978e61f
  41f886:	xor    esp,esp
  41f888:	jne    0x41f867
  41f88a:	data16 in al,0x6c
  41f88d:	leave  
  41f88e:	and    eax,0xb1e1c387
  41f893:	repnz fcom QWORD PTR [edx+0x25]
  41f897:	repz bound esi,QWORD PTR [esi]
  41f89a:	adc    ebp,DWORD PTR [edx]
  41f89c:	inc    eax
  41f89d:	ss out dx,eax
  41f89f:	iret   
  41f8a0:	test   BYTE PTR [ebx+0x1108cbd0],ah
  41f8a6:	loopne 0x41f8a6
  41f8a8:	arpl   si,dx
  41f8aa:	jnp    0x41f8be
  41f8ac:	sub    ebp,DWORD PTR [edi*8+0x720d1bb2]
  41f8b3:	sub    edi,DWORD PTR ds:0xf42155d7
  41f8b9:	dec    eax
  41f8ba:	mov    ds:0xb5056055,eax
  41f8bf:	sub    edi,DWORD PTR [eax+0x6]
  41f8c2:	inc    esp
  41f8c3:	iret   
  41f8c4:	outs   dx,BYTE PTR ds:[esi]
  41f8c5:	data16 icebp 
  41f8c7:	or     al,ah
  41f8c9:	test   DWORD PTR [esi],ecx
  41f8cb:	fcom   QWORD PTR [edx]
  41f8cd:	scas   eax,DWORD PTR es:[edi]
  41f8ce:	es dec esp
  41f8d0:	lea    ebx,[ecx+0x2c59d4e5]
  41f8d6:	mov    cs,WORD PTR [edx+ecx*8]
  41f8d9:	fisttp DWORD PTR [edx+0x22863d74]
  41f8df:	pop    eax
  41f8e0:	mov    cl,0xb9
  41f8e2:	lahf   
  41f8e3:	fidiv  DWORD PTR [ebp-0x6c]
  41f8e6:	sahf   
  41f8e7:	js     0x41f86c
  41f8e9:	xchg   dh,ch
  41f8eb:	or     BYTE PTR [edi+ebp*2],cl
  41f8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ef:	dec    eax
  41f8f0:	mov    ds:0x4812f56a,eax
  41f8f5:	cmp    DWORD PTR [eax+0x4eadef1e],eax
  41f8fb:	ss or  al,0xb3
  41f8fe:	idiv   esi
  41f900:	arpl   sp,bx
  41f902:	dec    edi
  41f903:	adc    eax,0x71a240f5
  41f908:	dec    esp
  41f909:	add    dl,BYTE PTR [ebx]
  41f90b:	and    BYTE PTR [edi+eiz*4-0x4f0696c7],ch
  41f912:	add    edx,DWORD PTR ds:0x1b900032
  41f918:	addr16 call 0x6b0a73f5
  41f91e:	repz jo 0x41f8fe
  41f921:	aaa    
  41f922:	hlt    
  41f923:	ds add bl,dh
  41f926:	xor    edx,DWORD PTR [edx]
  41f928:	out    0xb8,eax
  41f92a:	sbb    eax,0x151da587
  41f92f:	jns    0x41f8d4
  41f931:	dec    eax
  41f932:	inc    ecx
  41f933:	xchg   edi,eax
  41f934:	mov    edi,0x1b87bc1f
  41f939:	mov    dl,BYTE PTR [eax]
  41f93b:	addr16 inc eax
  41f93d:	into   
  41f93e:	cdq    
  41f93f:	dec    edi
  41f940:	aas    
  41f941:	das    
  41f942:	mov    edi,0x770e9a59
  41f947:	nop
  41f948:	jb     0x41f92d
  41f94a:	pusha  
  41f94b:	cmc    
  41f94c:	sub    al,0x5b
  41f94e:	inc    ebp
  41f94f:	repnz mov eax,ds:0x4a1eeb31
  41f956:	in     al,dx
  41f957:	(bad)  
  41f958:	pop    edx
  41f959:	inc    ebp
  41f95a:	jmp    0x41f94a
  41f95c:	outs   dx,DWORD PTR ds:[esi]
  41f95d:	nop
  41f95e:	xchg   esi,eax
  41f95f:	(bad)  
  41f960:	jmp    0x41f95f
  41f962:	inc    ebx
  41f963:	arpl   WORD PTR ds:0x60cb7ff7,cx
  41f969:	pop    ebp
  41f96a:	mov    edx,0xdb1403bb
  41f96f:	loop   0x41f925
  41f971:	ss mov edi,0x15ea559
  41f977:	fdivr  DWORD PTR [edi-0x56]
  41f97a:	inc    ebp
  41f97b:	xor    edx,esi
  41f97d:	push   esp
  41f97e:	adc    bl,BYTE PTR [edx+0x6f]
  41f981:	jle    0x41f9fc
  41f983:	es dec edi
  41f985:	jno    0x41f9ac
  41f987:	pop    edx
  41f988:	cli    
  41f989:	aad    0xa8
  41f98b:	inc    ebx
  41f98c:	int3   
  41f98d:	(bad)  
  41f98f:	xor    eax,ebp
  41f991:	mov    eax,0x5ff18ebe
  41f996:	sub    dh,cl
  41f998:	shr    DWORD PTR [ebx],0x21
  41f99b:	(bad)  
  41f99c:	inc    esi
  41f99d:	push   esi
  41f99e:	mov    cl,0xf2
  41f9a0:	push   ebp
  41f9a2:	in     al,dx
  41f9a3:	call   0x4923:0xeaba2291
  41f9aa:	push   ds
  41f9ab:	or     DWORD PTR [ebp-0x2428f1e3],edi
  41f9b1:	les    edi,FWORD PTR [edx+0x7bf83ab3]
  41f9b7:	cmp    eax,0x2f99855e
  41f9bc:	xchg   ebx,eax
  41f9bd:	sar    cl,1
  41f9bf:	pop    esp
  41f9c0:	or     ax,0x6075
  41f9c4:	xchg   ecx,eax
  41f9c5:	(bad)  
  41f9c7:	add    DWORD PTR [si],edi
  41f9ca:	jo     0x41fa02
  41f9cc:	mov    ebp,0xdefd8fea
  41f9d1:	test   DWORD PTR [edx-0x7997393d],esi
  41f9d7:	les    ebp,FWORD PTR [ecx]
  41f9d9:	ror    cl,0x85
  41f9dc:	xor    esp,DWORD PTR [edi-0x3a]
  41f9df:	inc    esi
  41f9e0:	jle    0x41fa12
  41f9e2:	jne    0x41fa42
  41f9e4:	sub    BYTE PTR [esi],bl
  41f9e6:	dec    ebp
  41f9e7:	ins    BYTE PTR es:[edi],dx
  41f9e8:	inc    ebx
  41f9e9:	popf   
  41f9ea:	inc    ebp
  41f9eb:	fmul   st(5),st
  41f9ed:	jmp    0x9a57:0xdf2926d4
  41f9f4:	mov    edx,0x3a1684c5
  41f9f9:	pop    ebx
  41f9fa:	pop    esp
  41f9fb:	dec    esp
  41f9fc:	pop    esi
  41f9fd:	pushf  
  41f9fe:	adc    eax,ebp
  41fa00:	cmp    BYTE PTR [esi],0x5f
  41fa03:	cmc    
  41fa04:	hlt    
  41fa05:	jg     0x41f9fb
  41fa07:	call   0x38322443
  41fa0c:	dec    edi
  41fa0d:	(bad)  
  41fa0e:	mov    ds:0x2ec6c7a7,eax
  41fa13:	and    eax,0xe395878a
  41fa18:	std    
  41fa19:	icebp  
  41fa1a:	es sbb ecx,0xfffffff5
  41fa1e:	push   0xffffffbc
  41fa20:	or     BYTE PTR [edx+0x184f3f25],0x6a
  41fa27:	imul   ebx,DWORD PTR [esi-0x2f],0x7523ae9c
  41fa2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa2f:	jbe    0x41fa63
  41fa31:	inc    edi
  41fa32:	(bad)  
  41fa33:	sti    
  41fa34:	jg     0x41fa98
  41fa36:	and    bl,BYTE PTR [ebp+0x6c]
  41fa39:	pop    edx
  41fa3a:	sbb    dh,BYTE PTR [edx+esi*1-0x14958999]
  41fa41:	xor    al,0x53
  41fa43:	adc    al,0x3d
  41fa45:	stos   DWORD PTR es:[edi],eax
  41fa46:	xor    ah,bl
  41fa48:	dec    ecx
  41fa49:	ins    BYTE PTR es:[edi],dx
  41fa4a:	scas   eax,DWORD PTR es:[edi]
  41fa4b:	adc    eax,0xe6b02260
  41fa50:	push   ss
  41fa51:	jne    0x41fa6d
  41fa53:	add    edx,DWORD PTR [eax+0x11]
  41fa56:	les    esi,FWORD PTR [edx-0x5af6c50e]
  41fa5c:	mov    ecx,0x6a59fb60
  41fa61:	pop    ecx
  41fa62:	xor    eax,0x606e7599
  41fa67:	push   DWORD PTR [edi]
  41fa69:	repz xor DWORD PTR [edx-0x16],eax
  41fa6d:	jle    0x41fa55
  41fa6f:	ret    
  41fa70:	mov    ecx,0xa8674cd9
  41fa75:	mov    esi,0x25079202
  41fa7a:	lods   eax,DWORD PTR ds:[esi]
  41fa7b:	jp     0x41fa8f
  41fa7d:	popf   
  41fa7e:	jbe    0x41fafe
  41fa80:	lea    ebx,[ebp+edi*2+0x57c920bf]
  41fa87:	(bad)  
  41fa88:	ja     0x41fa65
  41fa8a:	retf   
  41fa8b:	xchg   BYTE PTR [edx-0x5f],ah
  41fa8e:	xchg   BYTE PTR [ecx],cl
  41fa90:	arpl   WORD PTR [esi+0x28],ax
  41fa93:	xor    dl,bh
  41fa95:	cmp    BYTE PTR [edx+0x5b],0xbd
  41fa99:	cmc    
  41fa9a:	xor    BYTE PTR [esi],ah
  41fa9c:	sbb    al,0x96
  41fa9e:	push   ebp
  41fa9f:	(bad)  
  41faa0:	jo     0x41fb16
  41faa2:	test   DWORD PTR [ebp+eax*2+0xd60037a],0x1059e34e
  41faad:	inc    edi
  41faae:	fwait
  41faaf:	lods   eax,DWORD PTR ds:[esi]
  41fab0:	in     al,dx
  41fab1:	xchg   ebp,eax
  41fab2:	sbb    ah,bh
  41fab4:	add    eax,0xfb1f2211
  41fab9:	and    al,0x1a
  41fabb:	dec    ebx
  41fabc:	gs sbb ch,al
  41fabf:	fdiv   st,st(5)
  41fac1:	jmp    0xace5:0x7129b623
  41fac8:	fld    QWORD PTR [ebx-0x31]
  41facb:	pop    esp
  41facc:	mov    ecx,eax
  41face:	sti    
  41facf:	xchg   edi,eax
  41fad0:	out    0xe0,al
  41fad2:	inc    esp
  41fad3:	push   ds
  41fad4:	sub    eax,0xe1fdef86
  41fad9:	push   ebx
  41fada:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fadb:	inc    edi
  41fadc:	cmc    
  41fadd:	fld    DWORD PTR gs:[ebp+0x5e]
  41fae1:	lods   eax,DWORD PTR ds:[esi]
  41fae2:	add    al,0xc2
  41fae4:	xor    DWORD PTR [esi-0x7a4436f],ecx
  41faea:	in     eax,dx
  41faeb:	inc    ebp
  41faec:	jb     0x41fb28
  41faee:	push   ecx
  41faef:	test   al,0x71
  41faf1:	js     0x41face
  41faf3:	inc    edx
  41faf4:	sbb    al,0x9e
  41faf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf7:	jp     0x41faab
  41faf9:	inc    esi
  41fafa:	jg     0x41fb0d
  41fafc:	jmp    0xf2c21163
  41fb01:	sub    al,0x40
  41fb03:	xor    al,0xa5
  41fb05:	(bad)  
  41fb06:	repz retf 
  41fb08:	push   ds
  41fb09:	bound  ebx,QWORD PTR [edx]
  41fb0b:	cwde   
  41fb0c:	push   edx
  41fb0d:	je     0x41fb2c
  41fb0f:	inc    esi
  41fb10:	das    
  41fb11:	test   edi,eax
  41fb13:	aaa    
  41fb14:	or     al,0xe9
  41fb16:	jno    0x41fb82
  41fb18:	mov    ds:0xbbd1d412,eax
  41fb1d:	or     dl,BYTE PTR [edx+eiz*4]
  41fb20:	fstp   QWORD PTR [edx-0x28]
  41fb23:	out    dx,al
  41fb24:	call   0x776c:0x953b3b4a
  41fb2b:	fmul   QWORD PTR [edi+edi*8-0x2e]
  41fb2f:	stos   DWORD PTR es:[edi],eax
  41fb30:	mov    dl,cl
  41fb32:	add    al,0xa8
  41fb34:	mov    ah,0x71
  41fb36:	sub    dh,cl
  41fb38:	icebp  
  41fb39:	and    eax,0x5b0001b9
  41fb3e:	outs   dx,BYTE PTR ds:[esi]
  41fb3f:	sbb    DWORD PTR [ecx+0x6a],edi
  41fb42:	mov    esi,DWORD PTR [edi-0x41]
  41fb45:	xchg   DWORD PTR [ebx],ebp
  41fb47:	inc    esi
  41fb48:	repnz icebp 
  41fb4a:	shl    DWORD PTR [edx],0x31
  41fb4d:	push   cs
  41fb4e:	inc    eax
  41fb4f:	cs pop ebp
  41fb51:	xor    BYTE PTR [ecx],dl
  41fb53:	aam    0xc9
  41fb55:	push   ecx
  41fb56:	dec    esi
  41fb57:	jg     0x41fbad
  41fb59:	shl    BYTE PTR [esi-0x21],1
  41fb5c:	fild   DWORD PTR [ebx+0x66]
  41fb5f:	pop    edx
  41fb60:	(bad)  
  41fb61:	push   cs
  41fb62:	arpl   di,cx
  41fb64:	pop    eax
  41fb65:	inc    eax
  41fb66:	hlt    
  41fb67:	ret    
  41fb68:	mov    esi,0x876042ac
  41fb6d:	stos   DWORD PTR es:[edi],eax
  41fb6e:	pop    esp
  41fb6f:	xor    ch,cl
  41fb71:	sbb    eax,0xa10f0c18
  41fb76:	push   ds
  41fb77:	aam    0x74
  41fb79:	and    eax,ebx
  41fb7b:	dec    edi
  41fb7c:	xor    BYTE PTR [edx+0x29b51dae],al
  41fb82:	xor    ah,0x8e
  41fb85:	nop
  41fb86:	jno    0x41fb50
  41fb88:	mov    WORD PTR [edx],fs
  41fb8a:	mov    eax,0xde6959e5
  41fb8f:	inc    edx
  41fb90:	sub    DWORD PTR [ebx+0x7d],0xcb6953a4
  41fb97:	(bad)  
  41fb98:	pop    ecx
  41fb99:	cmp    BYTE PTR [edi],ch
  41fb9b:	push   edx
  41fb9c:	push   esi
  41fb9d:	dec    edx
  41fb9e:	jb     0x41fb48
  41fba0:	jo     0x41fb84
  41fba2:	(bad)  
  41fba3:	push   ss
  41fba4:	sub    al,0x79
  41fba6:	dec    edi
  41fba7:	or     DWORD PTR [edx],0xf6f503ce
  41fbad:	xchg   esp,eax
  41fbae:	jp     0x41fbdd
  41fbb0:	out    dx,eax
  41fbb1:	mov    edx,0x7e091727
  41fbb6:	mov    ecx,0x146315ac
  41fbbb:	ins    DWORD PTR es:[edi],dx
  41fbbc:	cld    
  41fbbd:	imul   ebx,DWORD PTR [ebx+edx*8-0x23],0x64
  41fbc2:	inc    ebp
  41fbc3:	sbb    DWORD PTR [edx],ecx
  41fbc5:	sub    eax,0x4f418291
  41fbca:	inc    esi
  41fbcb:	push   cs
  41fbcc:	scas   eax,DWORD PTR es:[edi]
  41fbcd:	and    eax,0xf0750908
  41fbd2:	xchg   edx,eax
  41fbd3:	xor    ebp,DWORD PTR ss:[ebp-0x4e]
  41fbd7:	mov    ecx,0x7057a05d
  41fbdc:	xor    BYTE PTR [ebp+0x5256d8b9],bl
  41fbe2:	retf   0x566b
  41fbe5:	lock rcr DWORD PTR [esi+0x10ce1a76],cl
  41fbec:	cli    
  41fbed:	shld   DWORD PTR [esi+0x21],ebx,cl
  41fbf1:	stc    
  41fbf2:	shr    BYTE PTR [eax-0x7c],0x32
  41fbf6:	inc    esi
  41fbf7:	xor    bh,BYTE PTR cs:[edx+0x6866e780]
  41fbfe:	(bad)  
  41fc00:	int    0x1
  41fc02:	mov    al,al
  41fc04:	push   ebx
  41fc05:	add    eax,0xf3c8e824
  41fc0a:	lds    esp,FWORD PTR [esi+eax*1]
  41fc0d:	mov    al,0xa4
  41fc0f:	inc    ebx
  41fc10:	popf   
  41fc11:	cmp    ah,ah
  41fc13:	sub    BYTE PTR [edi],dl
  41fc15:	sub    al,0x64
  41fc17:	rol    DWORD PTR [ebp+0x4b],1
  41fc1a:	xlat   BYTE PTR ds:[ebx]
  41fc1b:	adc    dl,BYTE PTR [edx-0x2d]
  41fc1e:	jae    0x41fc5b
  41fc20:	sbb    eax,esp
  41fc22:	in     al,0x4e
  41fc24:	push   ebx
  41fc25:	dec    ecx
  41fc26:	shr    ebx,cl
  41fc28:	jmp    0x6864d6aa
  41fc2d:	call   0x7fce4f6d
  41fc32:	add    esi,edx
  41fc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc35:	and    al,0x54
  41fc37:	dec    edi
  41fc38:	or     eax,esi
  41fc3a:	clc    
  41fc3b:	push   ss
  41fc3c:	add    al,0xaf
  41fc3e:	pop    ds
  41fc3f:	jnp    0x41fbde
  41fc41:	aaa    
  41fc42:	cdq    
  41fc43:	push   cs
  41fc44:	ret    
  41fc45:	mov    eax,0x658be6f0
  41fc4a:	(bad)  
  41fc4b:	leave  
  41fc4c:	jmp    0x41fc03
  41fc4e:	fdivr  st(6),st
  41fc50:	mov    gs,WORD PTR [eax-0x5e]
  41fc53:	xlat   BYTE PTR ds:[ebx]
  41fc54:	add    BYTE PTR [edi+0x458fc2d],ch
  41fc5a:	sbb    BYTE PTR [esi+ecx*4+0x70],al
  41fc5e:	cmp    al,0x46
  41fc60:	gs cld 
  41fc62:	test   DWORD PTR [ebx],esi
  41fc64:	outs   dx,DWORD PTR ds:[esi]
  41fc65:	(bad)  
  41fc66:	push   edx
  41fc67:	in     al,dx
  41fc68:	out    dx,eax
  41fc69:	dec    esi
  41fc6a:	repnz sub edi,DWORD PTR [eax]
  41fc6d:	add    bh,bl
  41fc6f:	arpl   si,dx
  41fc71:	push   ss
  41fc72:	jecxz  0x41fce9
  41fc74:	lods   al,BYTE PTR ds:[esi]
  41fc75:	and    BYTE PTR [edi-0x71477d6e],al
  41fc7b:	popf   
  41fc7c:	pop    ebp
  41fc7d:	arpl   WORD PTR [edx+edx*1-0x40],sp
  41fc81:	mov    esp,0x2017ed34
  41fc86:	pop    es
  41fc87:	popa   
  41fc88:	in     eax,0xfb
  41fc8a:	popa   
  41fc8b:	cmp    bl,0xf4
  41fc8e:	jae    0x41fcec
  41fc90:	stos   DWORD PTR es:[edi],eax
  41fc91:	mov    al,ds:0x8783ed76
  41fc96:	stc    
  41fc97:	lods   eax,DWORD PTR ds:[esi]
  41fc98:	jns    0x41fc87
  41fc9a:	sub    esp,DWORD PTR [edi-0x67]
  41fc9d:	mov    ebx,0xb479a7e3
  41fca2:	shr    BYTE PTR [ebp-0x15],0x21
  41fca6:	addr16 cmp esp,0xffffffa2
  41fcaa:	pop    ebx
  41fcab:	dec    edx
  41fcac:	stos   DWORD PTR es:[edi],eax
  41fcad:	mov    esi,0x28c445b2
  41fcb2:	adc    al,0xa5
  41fcb4:	fist   WORD PTR [edi]
  41fcb6:	push   0x559bc018
  41fcbb:	xor    eax,0xef416de7
  41fcc0:	mov    edi,0x7b733681
  41fcc5:	(bad)  
  41fcc7:	xor    ebx,ebx
  41fcc9:	xchg   BYTE PTR [edi],bl
  41fccb:	aad    0x83
  41fccd:	mov    edi,0x7240d82a
  41fcd2:	sub    eax,0x6624ee8e
  41fcd7:	push   ds
  41fcd8:	das    
  41fcd9:	xchg   DWORD PTR [ebx-0x18],eax
  41fcdc:	xchg   esp,eax
  41fcdd:	push   edx
  41fcde:	push   ebx
  41fcdf:	cli    
  41fce0:	js     0x41fcaa
  41fce2:	xor    eax,0x88e19c9
  41fce7:	std    
  41fce8:	daa    
  41fce9:	mov    dh,BYTE PTR [ebx]
  41fceb:	xchg   ebp,eax
  41fcec:	mov    ebx,0x6cf82b3
  41fcf1:	out    dx,al
  41fcf2:	mov    eax,ds:0x12831c2a
  41fcf7:	int    0xe7
  41fcf9:	jge    0x41fd3f
  41fcfb:	or     BYTE PTR [eax+0x33],bh
  41fcfe:	ret    
  41fcff:	inc    edx
  41fd00:	mov    dl,0x89
  41fd02:	ror    ecx,0xf5
  41fd05:	push   esi
  41fd06:	(bad)  
  41fd07:	call   0xbb6c:0x93f79b72
  41fd0e:	and    edi,DWORD PTR [eax-0x6ca18a8d]
  41fd14:	xor    edi,DWORD PTR [ecx+edx*8-0x74]
  41fd18:	jecxz  0x41fd38
  41fd1a:	mov    ds:0x20bf7fb5,al
  41fd1f:	mov    ecx,?
  41fd21:	loope  0x41fd53
  41fd23:	pop    ds
  41fd24:	loopne 0x41fd06
  41fd26:	pop    esi
  41fd27:	dec    edx
  41fd28:	dec    ebx
  41fd29:	and    al,bl
  41fd2b:	out    0xb3,eax
  41fd2d:	cmp    edx,DWORD PTR ds:0x25a43452
  41fd33:	lds    edi,FWORD PTR [ecx+0x12]
  41fd36:	jno    0x41fd38
  41fd38:	jns    0x41fd76
  41fd3a:	sub    al,0x6d
  41fd3c:	dec    ebx
  41fd3d:	in     eax,dx
  41fd3e:	cmp    BYTE PTR [esi-0x45479ea7],al
  41fd44:	cmp    eax,0x63526afc
  41fd4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd4b:	scas   eax,DWORD PTR es:[edi]
  41fd4c:	lahf   
  41fd4d:	fst    QWORD PTR [ecx-0xfb6ca74]
  41fd53:	rol    BYTE PTR [ebx-0x18173db7],cl
  41fd59:	fisttp QWORD PTR ds:0x9f274ec
  41fd5f:	and    DWORD PTR [edi],ebx
  41fd61:	xchg   ecx,eax
  41fd62:	xor    edi,esi
  41fd64:	xchg   ebx,eax
  41fd65:	jmp    0x41fd6f
  41fd67:	or     al,0x43
  41fd69:	sar    BYTE PTR [ecx+0x496021f0],0x8c
  41fd70:	and    al,0x63
  41fd72:	fs mov ebp,0x3dca6088
  41fd78:	sbb    DWORD PTR [ebp-0x64],edi
  41fd7b:	dec    ecx
  41fd7c:	xchg   edx,eax
  41fd7d:	es repnz out dx,eax
  41fd80:	pop    edi
  41fd81:	jmp    0x5940:0x38ffa979
  41fd88:	fidivr WORD PTR [esi]
  41fd8a:	bound  esi,QWORD PTR ds:0xd6ba5f6d
  41fd90:	inc    esp
  41fd91:	jp     0x41fd80
  41fd93:	hlt    
  41fd94:	ficomp DWORD PTR [ebp-0x5d]
  41fd97:	pop    esp
  41fd98:	test   DWORD PTR [ecx+0x27],esp
  41fd9b:	icebp  
  41fd9c:	adc    dl,dh
  41fd9e:	test   DWORD PTR [ebx],0x526a9634
  41fda4:	lods   al,BYTE PTR ds:[esi]
  41fda5:	pop    edi
  41fda6:	jbe    0x41fd7b
  41fda8:	popa   
  41fda9:	(bad)  
  41fdaa:	cmp    DWORD PTR [edx+0x73],ebp
  41fdad:	mov    esp,0x8d1276d8
  41fdb2:	sub    al,0x7b
  41fdb4:	stos   BYTE PTR es:[edi],al
  41fdb5:	vdivsd xmm0,xmm0,QWORD PTR [ebx]
  41fdb9:	adc    BYTE PTR [ecx],dh
  41fdbb:	mov    ds:0xe6a4fa23,al
  41fdc0:	in     eax,0x2f
  41fdc2:	imul   ecx,eax,0xf242d2ff
  41fdc8:	clc    
  41fdc9:	jg     0x41fd74
  41fdcb:	and    esi,esp
  41fdcd:	data16 or BYTE PTR [eax+ebp*8-0x59],dl
  41fdd2:	sahf   
  41fdd3:	lock sub al,0xa9
  41fdd6:	fwait
  41fdd7:	mov    edx,0xa58c8b6e
  41fddc:	repnz xlat BYTE PTR ds:[ebx]
  41fdde:	xor    eax,0x276f5c21
  41fde3:	inc    DWORD PTR [ebx-0x46]
  41fde6:	dec    ecx
  41fde7:	cmc    
  41fde8:	(bad)  
  41fdea:	cmp    ebp,0x9c5a742e
  41fdf0:	xchg   esp,eax
  41fdf1:	inc    eax
  41fdf2:	inc    esi
  41fdf3:	inc    ebx
  41fdf4:	add    BYTE PTR [edx+0x27],0x6b
  41fdf8:	repnz mov ds:0xc30f9d2f,eax
  41fdfe:	cli    
  41fdff:	push   ebp
  41fe00:	mov    ds:0x8e107b42,al
  41fe05:	test   eax,0x88b7705a
  41fe0a:	xor    cl,BYTE PTR [edi+0x24]
  41fe0d:	into   
  41fe0e:	aas    
  41fe0f:	(bad)  
  41fe10:	imul   ebx,DWORD PTR [edi+0xa],0xfffffff0
  41fe14:	in     al,dx
  41fe15:	inc    esp
  41fe16:	test   bl,dl
  41fe18:	xchg   ebp,eax
  41fe19:	adc    BYTE PTR [edi+0x22e3ee],bl
  41fe1f:	scas   eax,DWORD PTR es:[edi]
  41fe20:	adc    al,0x4a
  41fe22:	dec    ebx
  41fe23:	or     al,0x81
  41fe25:	ret    0xbbe9
  41fe28:	fldenv ds:0x60140a49
  41fe2e:	jg     0x41fe64
  41fe30:	das    
  41fe31:	mov    ebx,0xa85c10a1
  41fe36:	inc    esi
  41fe37:	and    cl,BYTE PTR [ebx-0x5093a97b]
  41fe3d:	rcr    ch,1
  41fe3f:	or     eax,0xd4aee0f4
  41fe44:	mov    ch,0x51
  41fe46:	cmp    eax,0xbba56b55
  41fe4b:	jnp    0x41fe59
  41fe4d:	int3   
  41fe4e:	jnp    0x41fe70
  41fe50:	sub    eax,DWORD PTR [edi]
  41fe52:	loope  0x41fe70
  41fe54:	mov    ebx,0x2b89840a
  41fe59:	out    0xd,al
  41fe5b:	sbb    cl,ch
  41fe5d:	test   BYTE PTR [ebp+0x1d],ch
  41fe60:	adc    edi,DWORD PTR [ecx]
  41fe62:	cmp    eax,0x129cc5b
  41fe67:	ds add al,dl
  41fe6a:	imul   ebx,DWORD PTR [ecx-0x4],0xe02811ad
  41fe71:	retf   
  41fe72:	jmp    FWORD PTR [edx+0x39]
  41fe75:	adc    eax,0x4682e7bd
  41fe7a:	push   ss
  41fe7b:	dec    edi
  41fe7c:	sbb    al,0x43
  41fe7e:	add    BYTE PTR [ebp+0x54],bh
  41fe81:	iret   
  41fe82:	push   eax
  41fe83:	out    dx,al
  41fe84:	jae    0x41fe11
  41fe86:	xchg   esp,eax
  41fe87:	retf   
  41fe88:	mov    bl,0xd
  41fe8a:	mov    ecx,0xc2e9479d
  41fe8f:	push   esp
  41fe90:	pushf  
  41fe91:	sbb    DWORD PTR [edx+0x4a],ebp
  41fe94:	sbb    cl,BYTE PTR [esi]
  41fe96:	and    DWORD PTR [edi-0x20ae6830],esp
  41fe9c:	ds retf 
  41fe9e:	lock fwait
  41fea0:	sbb    esp,esp
  41fea2:	push   ecx
  41fea3:	dec    ebx
  41fea4:	imul   esp,DWORD PTR [eax+edi*8-0x4204fb51],0xced75ae3
  41feaf:	ret    
  41feb0:	pop    ss
  41feb1:	out    dx,al
  41feb2:	cmp    esi,DWORD PTR [ebp+0x1006a5c5]
  41feb8:	sub    ebp,edx
  41feba:	xchg   edi,eax
  41febb:	mov    ecx,DWORD PTR [ebx+0x61]
  41febe:	or     DWORD PTR [edx+0x1d84f5f3],edx
  41fec4:	sbb    ecx,esp
  41fec6:	(bad)  
  41fec7:	sbb    al,0x8d
  41fec9:	les    esp,FWORD PTR [edx+0x74]
  41fecc:	loope  0x41fe6c
  41fece:	mov    cl,0x74
  41fed0:	je     0x41fefc
  41fed2:	stos   BYTE PTR es:[edi],al
  41fed3:	xchg   ecx,eax
  41fed4:	mov    esp,0x1c716710
  41fed9:	xchg   edx,eax
  41feda:	leave  
  41fedb:	or     DWORD PTR [edx+0xb],0x28
  41fedf:	ss jmp 0x41fec1
  41fee2:	rcl    ah,cl
  41fee4:	fwait
  41fee5:	mov    ebp,0xb7041730
  41feea:	xchg   edi,eax
  41feeb:	mov    al,0x61
  41feed:	mov    al,0x16
  41feef:	pop    ebp
  41fef0:	adc    al,0xf3
  41fef2:	ror    BYTE PTR [edx],1
  41fef4:	xor    BYTE PTR [esi-0x7fdcaaca],dl
  41fefa:	inc    ecx
  41fefb:	adc    eax,0x28c171ff
  41ff00:	inc    ebx
  41ff01:	xlat   BYTE PTR ds:[ebx]
  41ff02:	xchg   esi,eax
  41ff03:	jmp    0x41ff60
  41ff05:	jbe    0x41ff5a
  41ff07:	sub    al,0xaf
  41ff09:	call   0x6793:0xd4cd30d3
  41ff10:	clc    
  41ff11:	xchg   BYTE PTR [eax+0x2e],ah
  41ff14:	leave  
  41ff15:	fdivr  st,st(6)
  41ff17:	mov    ebp,0xe62e5ded
  41ff1c:	inc    ebx
  41ff1d:	repnz shl BYTE PTR [ecx],cl
  41ff20:	test   DWORD PTR [ecx],ebx
  41ff22:	jp     0x41feaa
  41ff24:	retf   0xf12b
  41ff27:	adc    DWORD PTR [ebx],edx
  41ff29:	scas   eax,DWORD PTR es:[edi]
  41ff2a:	mov    ebx,0x55a6e51c
  41ff2f:	(bad)  
  41ff30:	mov    ebp,0x2f04beba
  41ff35:	mov    bh,0xaf
  41ff37:	inc    edi
  41ff38:	inc    BYTE PTR [ebx+0x722032ee]
  41ff3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff3f:	mov    ecx,0x4a467ce7
  41ff44:	xlat   BYTE PTR ds:[ebx]
  41ff45:	pop    ecx
  41ff46:	xchg   edx,eax
  41ff47:	sub    al,0x34
  41ff49:	inc    edi
  41ff4a:	inc    edi
  41ff4b:	push   edi
  41ff4c:	add    al,0x49
  41ff4e:	xchg   ecx,eax
  41ff4f:	ins    BYTE PTR es:[edi],dx
  41ff50:	das    
  41ff51:	mov    WORD PTR [ebp+0x718bc900],ds
  41ff57:	mov    bl,0xc0
  41ff59:	call   0xd4ba:0x7aea4b84
  41ff60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff61:	lea    ecx,[eax+0x1b92481]
  41ff67:	and    al,0x62
  41ff69:	outs   dx,DWORD PTR ds:[esi]
  41ff6a:	in     al,0xa
  41ff6c:	mov    bh,0xdb
  41ff6e:	jg     0x41ff33
  41ff70:	popa   
  41ff71:	(bad)  
  41ff72:	pop    eax
  41ff73:	adc    BYTE PTR [ebx+0x69201df1],0xbb
  41ff7a:	aad    0x8c
  41ff7c:	rol    BYTE PTR [eax-0x4cc79ee2],0x56
  41ff83:	out    0x42,al
  41ff85:	pop    ebp
  41ff86:	xchg   edi,eax
  41ff87:	mov    eax,gs:0x24b1e248
  41ff8d:	cdq    
  41ff8e:	jne    0x42000b
  41ff90:	ss add eax,0xb1642eca
  41ff96:	inc    eax
  41ff97:	ds pop eax
  41ff99:	repnz outs dx,DWORD PTR ds:[esi]
  41ff9b:	or     ch,BYTE PTR [esi]
  41ff9d:	mov    esp,0xb91785d0
  41ffa2:	inc    ebx
  41ffa3:	inc    eax
  41ffa4:	imul   esp,DWORD PTR [ebp+0x6ed9fb2],0x22
  41ffab:	pop    ebx
  41ffac:	lods   eax,DWORD PTR ds:[esi]
  41ffad:	mov    ecx,edi
  41ffaf:	push   ds
  41ffb0:	es mov edx,edx
  41ffb3:	push   edi
  41ffb4:	or     eax,DWORD PTR [ecx-0x55]
  41ffb7:	sbb    BYTE PTR [edi+edi*1+0x23],0xb8
  41ffbc:	js     0x41ff6f
  41ffbe:	test   ebp,0x464dde75
  41ffc4:	aaa    
  41ffc5:	in     eax,0xb9
  41ffc7:	jo     0x41ffde
  41ffc9:	mov    al,ds:0x4aeb91f8
  41ffce:	jmp    0x41ffdd
  41ffd0:	push   ebx
  41ffd1:	pop    esi
  41ffd2:	cld    
  41ffd3:	xchg   ebp,eax
  41ffd4:	cmp    DWORD PTR [ebp-0x80],0xffffffde
  41ffd8:	inc    ebp
  41ffd9:	out    0x1c,al
  41ffdb:	dec    eax
  41ffdc:	mov    bh,0x1e
  41ffde:	dec    edx
  41ffdf:	cmp    cl,ch
  41ffe1:	mov    ebp,0x8a19e8bc
  41ffe6:	lahf   
  41ffe7:	jmp    0x3c021f8a
  41ffec:	and    bh,BYTE PTR [eax+0x2165f44d]
  41fff2:	leave  
  41fff3:	pop    DWORD PTR [edx+esi*1]
  41fff6:	jo     0x420026
  41fff8:	in     al,dx
  41fff9:	and    ecx,DWORD PTR [ebx-0x3ed417b3]
  41ffff:	mov    DWORD PTR [ebp-0x18],eax
  420002:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  420009:	mov    eax,DWORD PTR [ebp-0xc]
  42000c:	mov    ecx,DWORD PTR [ebp-0xc]
  42000f:	sub    eax,ecx
  420011:	mov    DWORD PTR [ebp-0xc],eax
  420014:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42001b:	mov    eax,DWORD PTR [ebp-0x1c]
  42001e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420021:	sub    eax,ecx
  420023:	mov    DWORD PTR [ebp-0x1c],eax
  420026:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  42002d:	mov    eax,DWORD PTR [ebp-0x20]
  420030:	mov    ecx,DWORD PTR [ebp-0x20]
  420033:	sub    eax,ecx
  420035:	mov    DWORD PTR [ebp-0x20],eax
  420038:	mov    eax,DWORD PTR [ebp-0x2c]
  42003b:	mov    ecx,DWORD PTR [ebp-0x20]
  42003e:	mov    esi,0x75108ae
  420043:	xor    eax,esi
  420045:	mov    edi,0x3272f5
  42004a:	add    eax,edi
  42004c:	or     eax,ecx
  42004e:	mov    DWORD PTR [ebp-0x20],eax
  420051:	mov    eax,DWORD PTR [ebp-0x4]
  420054:	mov    ecx,DWORD PTR [ebp-0x4]
  420057:	sub    eax,ecx
  420059:	mov    DWORD PTR [ebp-0x4],eax
  42005c:	or     DWORD PTR [ebp-0x4],0xf89c85be
  420063:	mov    eax,DWORD PTR [ebp-0xc]
  420066:	xor    eax,esi
  420068:	add    eax,edi
  42006a:	push   eax
  42006b:	mov    eax,DWORD PTR [ebp-0x10]
  42006e:	xor    eax,esi
  420070:	add    eax,edi
  420072:	push   eax
  420073:	mov    eax,DWORD PTR [ebp-0x4]
  420076:	xor    eax,esi
  420078:	add    eax,edi
  42007a:	push   eax
  42007b:	lea    eax,[ebp-0x78]
  42007e:	push   eax
  42007f:	push   DWORD PTR [ebp-0x2c]
  420082:	push   DWORD PTR [ebp-0x28]
  420085:	call   0x40f76f
  42008a:	test   eax,eax
  42008c:	je     0x4200ba
  420092:	lea    eax,[ebp-0x78]
  420095:	push   eax
  420096:	mov    eax,DWORD PTR [ebp-0x28]
  420099:	xor    eax,esi
  42009b:	add    eax,edi
  42009d:	push   eax
  42009e:	mov    eax,DWORD PTR [ebp-0x24]
  4200a1:	add    eax,0xaa
  4200a6:	push   eax
  4200a7:	mov    eax,DWORD PTR [ebp-0x24]
  4200aa:	mov    eax,DWORD PTR [eax+0x198]
  4200b0:	push   DWORD PTR [eax]
  4200b2:	call   0x4061fa
  4200b7:	mov    DWORD PTR [ebp-0x14],eax
  4200ba:	mov    ecx,DWORD PTR ds:0x42a56a
  4200c0:	lea    eax,[ebp+0x4]
  4200c3:	mov    DWORD PTR [ecx*4+0x42a562],eax
  4200ca:	inc    DWORD PTR ds:0x42a56a
  4200d0:	mov    eax,DWORD PTR [ebp-0x14]
  4200d3:	test   eax,eax
  4200d5:	je     0x4224ce
  4200db:	lea    eax,[ebp-0x8]
  4200de:	mov    DWORD PTR [ebp-0x34],eax
  4200e1:	mov    eax,DWORD PTR [ebp-0x30]
  4200e4:	mov    DWORD PTR [ebp-0x8],eax
  4200e7:	mov    eax,DWORD PTR [ebp-0x8]
  4200ea:	mov    ecx,DWORD PTR [ebp-0x14]
  4200ed:	sub    eax,ecx
  4200ef:	mov    DWORD PTR [ebp-0x8],eax
  4200f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4200f5:	xor    ecx,esi
  4200f7:	mov    eax,0xffcd8d0b
  4200fc:	sub    eax,ecx
  4200fe:	add    DWORD PTR [ebp-0x8],eax
  420101:	mov    eax,DWORD PTR [ebp-0x8]
  420104:	mov    ecx,DWORD PTR [ebp-0x14]
  420107:	mov    DWORD PTR [ecx+0x1],eax
  42010a:	mov    eax,DWORD PTR [ebp-0x14]
  42010d:	jmp    0x42249e
  420112:	adc    ebp,DWORD PTR [ebx]
  420114:	inc    BYTE PTR [eax-0x2a]
  420117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420118:	xchg   ecx,eax
  420119:	or     dh,bh
  42011b:	lahf   
  42011c:	cmp    eax,0x399ab0a
  420121:	inc    eax
  420122:	push   es
  420123:	mov    dh,0x80
  420125:	or     DWORD PTR [edi],0x5e
  420128:	add    DWORD PTR [ebx+0x1e65daa1],0x50
  42012f:	push   cs
  420130:	xchg   esi,eax
  420131:	jo     0x4200fc
  420133:	es pop esi
  420135:	pop    ecx
  420136:	adc    DWORD PTR [eax],edx
  420138:	pop    es
  420139:	add    al,0x92
  42013b:	jp     0x4201b7
  42013d:	dec    ebp
  42013e:	icebp  
  42013f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420140:	xor    ah,BYTE PTR gs:0x71b245a9
  420147:	add    eax,0xffffff92
  42014a:	addr16 inc ebx
  42014c:	das    
  42014d:	in     al,dx
  42014e:	jg     0x4201ba
  420150:	xchg   esi,eax
  420151:	out    0xf7,eax
  420153:	std    
  420154:	leave  
  420155:	xchg   edx,eax
  420156:	add    DWORD PTR [edx+0xee5cb9d],edx
  42015c:	daa    
  42015d:	or     al,0x37
  42015f:	adc    BYTE PTR [ecx-0x3e],cl
  420162:	jno    0x420158
  420164:	or     eax,0x5176b187
  420169:	and    al,0x69
  42016b:	gs (bad) 
  42016d:	mov    ds:0xe250d3c8,al
  420172:	in     al,dx
  420173:	popa   
  420174:	mov    ch,0xb1
  420176:	aas    
  420177:	out    0xf5,al
  420179:	adc    esi,ebx
  42017b:	jmp    0x420115
  42017d:	jnp    0x4201f6
  42017f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420180:	out    dx,al
  420181:	adc    BYTE PTR [edx-0x3c036979],dh
  420187:	xchg   esp,eax
  420188:	cdq    
  420189:	push   es
  42018a:	and    al,0x1c
  42018c:	ret    
  42018d:	pop    esi
  42018e:	jns    0x4201b1
  420190:	mov    al,0xf7
  420192:	mov    cl,0x3b
  420194:	jmp    0x8158:0x37067985
  42019b:	dec    edi
  42019c:	ret    
  42019d:	inc    edx
  42019e:	pop    ds
  42019f:	sbb    ebx,DWORD PTR [edx+0x33]
  4201a2:	push   0xffffffc2
  4201a4:	js     0x42017c
  4201a6:	jbe    0x420209
  4201a8:	nop
  4201a9:	inc    eax
  4201aa:	daa    
  4201ab:	les    ebx,FWORD PTR [edi+0x2da6fbf1]
  4201b1:	sbb    dl,cl
  4201b3:	out    dx,al
  4201b4:	pop    esi
  4201b5:	js     0x42020f
  4201b7:	shl    dh,0xf9
  4201ba:	bound  esp,QWORD PTR [ebx-0x8c54efe]
  4201c0:	dec    ecx
  4201c1:	mov    bl,0x95
  4201c3:	pop    ss
  4201c4:	pop    edi
  4201c5:	jg     0x42021e
  4201c7:	(bad)  
  4201c8:	dec    edx
  4201c9:	gs lahf 
  4201cb:	sbb    bh,BYTE PTR [esi+esi*1-0x4cb02668]
  4201d2:	mov    WORD PTR [ebx+0x388fb596],?
  4201d8:	scas   al,BYTE PTR es:[edi]
  4201d9:	pop    es
  4201da:	xor    BYTE PTR [ebp-0x3e],ah
  4201dd:	ret    0xfb3
  4201e0:	test   eax,0xf7de5b9c
  4201e5:	sbb    bl,BYTE PTR [ebx-0x124fdb5c]
  4201eb:	push   esp
  4201ec:	(bad)  
  4201ed:	pop    edx
  4201ee:	cwde   
  4201ef:	jno    0x42021c
  4201f1:	add    DWORD PTR [ebp+0x4eb938f4],eax
  4201f7:	sub    DWORD PTR [ebx-0x5c],ebx
  4201fa:	aad    0xa
  4201fc:	push   ss
  4201fd:	js     0x420263
  4201ff:	and    eax,0x97862cbc
  420204:	retf   
  420205:	out    dx,al
  420206:	mov    esi,0xbf1aa480
  42020b:	in     eax,dx
  42020c:	push   edi
  42020d:	cli    
  42020e:	test   DWORD PTR [edx+ebx*8],ebx
  420211:	cdq    
  420212:	cld    
  420213:	jg     0x420285
  420215:	ja     0x42024b
  420217:	out    dx,eax
  420218:	push   ss
  420219:	fnstsw WORD PTR [esi-0x67]
  42021c:	stc    
  42021d:	mov    WORD PTR [eax],?
  42021f:	jp     0x42028f
  420221:	sbb    eax,0x77f30fd0
  420226:	pop    esi
  420227:	and    BYTE PTR [esi],ah
  420229:	or     eax,0x6e393c70
  42022e:	cmp    esi,ecx
  420230:	sti    
  420231:	(bad)  
  420232:	or     eax,0x92f229d4
  420237:	(bad)
  42023a:	xchg   ecx,eax
  42023b:	addr16 jmp 0x4201ed
  42023e:	fisttp WORD PTR [edx]
  420240:	xchg   BYTE PTR [edx-0x480f4187],bl
  420246:	jo     0x42023f
  420248:	inc    DWORD PTR [edi]
  42024a:	pop    ecx
  42024b:	mov    BYTE PTR [ebx-0x10],cl
  42024e:	mov    esi,0x2041c23e
  420253:	fmul   DWORD PTR [ebx+0x75]
  420256:	xchg   BYTE PTR [edi],bh
  420258:	xor    cl,bl
  42025a:	mov    ch,0x71
  42025c:	repnz mov ds:0x40ea50a2,al
  420262:	in     al,0xdd
  420264:	pop    es
  420265:	ds test eax,0xc85d7c42
  42026b:	pop    ds
  42026c:	idiv   DWORD PTR [ecx-0x7f]
  42026f:	or     bl,al
  420271:	cwde   
  420272:	in     eax,0xe9
  420274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420275:	ja     0x42025e
  420277:	hlt    
  420278:	ret    
  420279:	rcl    ch,cl
  42027b:	xor    edi,DWORD PTR [edi]
  42027d:	add    al,0xf5
  42027f:	mov    al,ds:0x54f4733f
  420284:	ins    DWORD PTR es:[edi],dx
  420285:	pop    edx
  420286:	mov    al,ds:0xf847aaf4
  42028b:	inc    edi
  42028c:	cmp    ecx,DWORD PTR [esi+0x28]
  42028f:	das    
  420290:	sub    bh,bl
  420292:	or     eax,0x240c19f
  420297:	in     eax,0x52
  420299:	inc    ebx
  42029a:	scas   eax,DWORD PTR es:[edi]
  42029b:	sbb    BYTE PTR [ebx-0x9200f5],dl
  4202a1:	test   DWORD PTR [ecx-0x6a22134f],ebx
  4202a7:	jge    0x42030e
  4202a9:	fstp   TBYTE PTR [ebx+0x38]
  4202ac:	dec    ebp
  4202ad:	iret   
  4202ae:	imul   edi,DWORD PTR [edx],0xadf22a6c
  4202b4:	xor    ch,BYTE PTR [esi+0x2b]
  4202b7:	mov    ebp,0xcd600f9
  4202bc:	adc    al,0xec
  4202be:	(bad)  
  4202bf:	pop    ecx
  4202c0:	mov    ds:0x64c0a5dc,al
  4202c5:	xor    al,BYTE PTR [esi-0x76]
  4202c8:	ror    BYTE PTR [edi+0x72f02f3e],1
  4202ce:	xor    ch,al
  4202d0:	fld    QWORD PTR [eax-0x53c8a8bf]
  4202d6:	pop    esi
  4202d7:	adc    BYTE PTR [eax+0xbc996ac],al
  4202dd:	shl    DWORD PTR [ebp-0x7b722b1d],1
  4202e3:	or     ecx,DWORD PTR [eax]
  4202e5:	repz scas eax,DWORD PTR es:[edi]
  4202e7:	(bad)  
  4202e8:	jns    0x420351
  4202ea:	cmp    dh,BYTE PTR [esi+0x1]
  4202ed:	mov    bl,0xf5
  4202ef:	mov    ds:0x6fdf7322,al
  4202f4:	sub    DWORD PTR [ebx],0x3be27af6
  4202fa:	idiv   BYTE PTR [esi]
  4202fc:	sbb    al,0x2a
  4202fe:	ins    DWORD PTR es:[edi],dx
  4202ff:	cdq    
  420300:	in     eax,0x47
  420302:	inc    ebp
  420303:	adc    ch,ch
  420305:	dec    eax
  420306:	sub    DWORD PTR ds:0x1628a1cf,edi
  42030c:	ret    
  42030d:	loope  0x42033f
  42030f:	cmp    ch,BYTE PTR fs:[edx-0x63800e1d]
  420316:	fincstp 
  420318:	jno    0x420387
  42031a:	pusha  
  42031b:	ret    
  42031c:	add    ebx,ecx
  42031e:	fidivr WORD PTR [edi+edi*2]
  420321:	outs   dx,DWORD PTR ds:[esi]
  420322:	arpl   WORD PTR [ebp+0x20],dx
  420325:	rcr    DWORD PTR [ebx-0x40],0x8b
  420329:	jge    0x420318
  42032b:	dec    eax
  42032c:	imul   ebp,DWORD PTR [ecx],0x31
  42032f:	xchg   ebp,eax
  420330:	push   es
  420331:	jbe    0x4202c8
  420333:	shl    DWORD PTR [ebx-0x6f9e52ae],1
  420339:	jp     0x42036a
  42033b:	jecxz  0x4202c1
  42033d:	gs jmp 0x42031c
  420340:	jmp    0x979b411e
  420345:	nop
  420346:	xor    DWORD PTR [edi],esp
  420348:	xor    BYTE PTR [ecx+ebp*8+0x62ebbed3],0x70
  420350:	inc    ecx
  420351:	and    al,0xb
  420353:	and    DWORD PTR [ebp+0xe],0xfffffff6
  420357:	jle    0x4202dc
  420359:	je     0x420380
  42035b:	fistp  QWORD PTR [edx-0x76f8ab72]
  420361:	mov    edx,DWORD PTR [edx]
  420363:	and    eax,0x27948860
  420368:	repnz rol DWORD PTR [edi+0x465e3b8e],cl
  42036f:	mov    BYTE PTR [edx+0x67f881fc],bl
  420375:	add    al,0x88
  420377:	test   BYTE PTR [edx-0x5242a28e],0x79
  42037e:	out    0xb6,al
  420380:	mov    dl,0x6a
  420382:	cmp    edi,DWORD PTR [eax]
  420384:	mov    bh,0xfe
  420386:	dec    edx
  420387:	sbb    cl,BYTE PTR [esp+ebp*2-0x80]
  42038b:	xchg   edi,eax
  42038c:	fisttp QWORD PTR [eax-0x1c]
  42038f:	mov    WORD PTR [edx+0x1b],gs
  420392:	push   ecx
  420393:	sub    DWORD PTR [eax],eax
  420395:	or     al,0x8c
  420397:	sbb    cl,al
  420399:	sub    eax,0x4367b02a
  42039e:	in     al,0x56
  4203a0:	repz push esp
  4203a2:	mov    ch,0x23
  4203a4:	in     al,0x5f
  4203a6:	imul   esi,DWORD PTR [edx],0x1a
  4203a9:	lods   al,BYTE PTR ds:[esi]
  4203aa:	dec    ebx
  4203ab:	jno    0x420396
  4203ad:	imul   edx,edi,0x75cee548
  4203b3:	jecxz  0x42041d
  4203b5:	jmp    0x420403
  4203b7:	xor    bl,BYTE PTR [edi]
  4203b9:	push   0x2a
  4203bb:	ret    
  4203bc:	jp     0x420346
  4203be:	xchg   BYTE PTR [esp+edx*4],dl
  4203c1:	xchg   esp,eax
  4203c2:	xchg   DWORD PTR [ecx+0x23],esp
  4203c5:	(bad)  
  4203c6:	gs test ah,dl
  4203c9:	jl     0x420413
  4203cb:	xor    BYTE PTR [ebp+eax*4+0x6cf6a8a6],dh
  4203d2:	inc    ecx
  4203d3:	pop    eax
  4203d4:	ret    
  4203d5:	pop    ss
  4203d6:	xchg   ch,dl
  4203d8:	int3   
  4203d9:	inc    edx
  4203da:	das    
  4203db:	cwde   
  4203dc:	mov    edi,0x33a22f82
  4203e1:	mov    ah,0x7
  4203e3:	mov    cl,0x1
  4203e5:	dec    ecx
  4203e6:	js     0x420392
  4203e8:	iret   
  4203e9:	popa   
  4203ea:	push   edx
  4203eb:	mov    esp,0x43e4a80a
  4203f0:	push   ebp
  4203f1:	push   ss
  4203f2:	pushf  
  4203f3:	test   BYTE PTR [edi-0x5d],bl
  4203f6:	rcl    DWORD PTR ds:0xf883c4c2,1
  4203fc:	inc    esi
  4203fd:	arpl   WORD PTR [edx+0x3d8c7b88],sp
  420403:	mov    ah,cl
  420405:	js     0x42047f
  420407:	add    BYTE PTR [ecx+0x793bd9a2],0xcf
  42040e:	loopne 0x420462
  420410:	jns    0x4203ef
  420412:	mov    ds:0x8eeeb528,eax
  420417:	dec    esi
  420418:	ds jge 0x4203c8
  42041b:	test   BYTE PTR [ebp-0x1b],dl
  42041e:	push   0xca43d111
  420423:	iret   
  420424:	cmp    al,0xa9
  420426:	imul   eax,DWORD PTR [ebx+0x4c],0x1fcaa5ca
  42042d:	push   edx
  42042e:	int    0xd5
  420430:	xor    BYTE PTR [ecx+edx*1-0x1a],al
  420434:	sbb    DWORD PTR [edi-0x331f512a],edi
  42043a:	adc    al,0xb5
  42043c:	mov    cl,0x10
  42043e:	mov    al,ds:0xe6d505e7
  420443:	ficom  DWORD PTR ds:0x8c6f8040
  420449:	inc    eax
  42044a:	jp     0x420489
  42044c:	pop    ecx
  42044d:	jecxz  0x420441
  42044f:	jge    0x420434
  420451:	popa   
  420452:	pushw  es
  420454:	jmp    0x356abbcf
  420459:	xlat   BYTE PTR ds:[ebx]
  42045a:	jne    0x42049f
  42045c:	jbe    0x420421
  42045e:	mov    eax,ds:0xa7a5e941
  420463:	jmp    eax
  420465:	sbb    al,0xf
  420467:	pop    edi
  420468:	cmp    cl,BYTE PTR [ebp-0x9856ba8]
  42046e:	pop    ebp
  42046f:	xor    ah,BYTE PTR [esi]
  420471:	push   edi
  420472:	lahf   
  420473:	outs   dx,BYTE PTR ds:[esi]
  420474:	cmp    BYTE PTR [ebp+0x26],0xb4
  420478:	mov    ds:0x245069b0,eax
  42047d:	dec    ebp
  42047e:	repnz pusha 
  420480:	cdq    
  420481:	and    eax,0xf4e9e3d7
  420486:	sub    eax,0xc584fe4a
  42048b:	inc    esp
  42048c:	pop    esi
  42048d:	dec    eax
  42048e:	sbb    DWORD PTR [esi-0x2dd029c9],ebx
  420494:	sbb    BYTE PTR [esp+edi*2+0x4db04e52],bh
  42049b:	sub    eax,0x1be82ae2
  4204a0:	and    al,BYTE PTR [edi+0x1ae1ab77]
  4204a6:	or     ch,BYTE PTR [ecx]
  4204a8:	retf   0x6242
  4204ab:	cmp    DWORD PTR [eax+eiz*2+0xae56229],edi
  4204b2:	jmp    0x4dc6:0x74eca68e
  4204b9:	sbb    eax,0xbb232870
  4204be:	ror    BYTE PTR [ecx-0x7e73cfdb],0x67
  4204c5:	push   ebp
  4204c6:	jmp    0x4204c7
  4204c8:	loopne 0x4204be
  4204ca:	cli    
  4204cb:	gs mov bh,bh
  4204ce:	cwde   
  4204cf:	pop    ebx
  4204d0:	scas   al,BYTE PTR es:[edi]
  4204d1:	test   eax,0x2d558c5a
  4204d6:	sbb    BYTE PTR [ebp+0x2e],0x4b
  4204da:	pushf  
  4204db:	adc    bl,BYTE PTR [ebx+esi*2-0x52885ef3]
  4204e2:	sub    al,0xcf
  4204e4:	inc    ecx
  4204e5:	jns    0x420481
  4204e7:	mov    bh,0x49
  4204e9:	(bad)  
  4204ea:	jl     0x42050e
  4204ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204ed:	in     al,dx
  4204ee:	xor    ebp,edi
  4204f0:	ins    DWORD PTR es:[edi],dx
  4204f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204f2:	ret    0xa745
  4204f5:	sahf   
  4204f6:	mov    eax,0xba1f03cf
  4204fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204fc:	ret    
  4204fd:	jp     0x420512
  4204ff:	mov    eax,ds:0x21661a3a
  420504:	fist   DWORD PTR [eax+edi*4+0xb9f9212]
  42050b:	xor    DWORD PTR [ebp+0x2834146],ebp
  420511:	mov    ebp,0xc46fa146
  420516:	add    ebp,ecx
  420518:	das    
  420519:	bound  esp,QWORD PTR [ebp+0x7f]
  42051c:	les    ebx,FWORD PTR [edi+0x35cd7476]
  420522:	push   ebx
  420523:	cli    
  420524:	adc    eax,0xfcb39c80
  420529:	loope  0x4204fd
  42052b:	mov    ss:0x35571bf3,eax
  420531:	adc    al,0x88
  420533:	inc    esp
  420534:	fistp  WORD PTR [ebx+0x353f02fe]
  42053a:	mov    dh,0xa5
  42053c:	ret    0xd5e6
  42053f:	int    0xab
  420541:	mov    ch,0xc0
  420543:	dec    edx
  420544:	mov    ch,0xfd
  420546:	sub    DWORD PTR [edx+0x55e9e42],esp
  42054c:	mov    ecx,0x10add369
  420551:	mov    ecx,0x1a6e1396
  420556:	call   0x36ce:0xf0cd26fb
  42055d:	out    dx,al
  42055e:	loop   0x42057a
  420560:	(bad)  
  420561:	sub    al,0x3
  420563:	jmp    0x6ef8:0x40605844
  42056a:	sub    al,BYTE PTR [edi+0x47]
  42056d:	outs   dx,DWORD PTR ds:[esi]
  42056e:	cld    
  42056f:	jae    0x420569
  420571:	out    0xe1,eax
  420573:	fld    QWORD PTR [ebx+0x3d]
  420576:	mov    ds:0x97a55a1f,al
  42057b:	cmp    al,0xc4
  42057d:	and    edx,DWORD PTR [edi+eax*2+0x50996e5]
  420584:	not    DWORD PTR [edx+0x64]
  420587:	(bad)  
  420588:	pop    ds
  420589:	or     al,0xcc
  42058b:	pop    ebp
  42058c:	jmp    0x6949e2e5
  420591:	ret    
  420592:	jmp    0x7fafd694
  420597:	push   0xf212a21a
  42059c:	addr16 jge 0x4205e9
  42059f:	js     0x4205f1
  4205a1:	mov    al,ds:0xb5d54ca4
  4205a6:	inc    esp
  4205a7:	nop
  4205a8:	cmp    eax,0x8fd25c3f
  4205ad:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4205af:	mov    cl,0xb4
  4205b1:	xchg   BYTE PTR [edx+ebp*4+0x567d17d9],dl
  4205b8:	lock (bad) 
  4205ba:	push   ebp
  4205bb:	mov    ds:0xb298e09,al
  4205c0:	pop    ss
  4205c1:	or     eax,0x47e4e0cd
  4205c6:	out    dx,eax
  4205c7:	into   
  4205c8:	cli    
  4205c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205ca:	das    
  4205cb:	adc    al,0x45
  4205cd:	dec    ebp
  4205ce:	adc    eax,0x2e1df052
  4205d3:	das    
  4205d4:	inc    eax
  4205d5:	(bad)  
  4205d6:	xor    al,0xc2
  4205d8:	test   eax,0x428afe09
  4205dd:	test   DWORD PTR [edx+eax*8-0x92d8e3],esp
  4205e4:	les    ebx,FWORD PTR [esi+0x371c29b3]
  4205ea:	push   eax
  4205eb:	jo     0x420634
  4205ed:	aas    
  4205ee:	add    DWORD PTR [eax],esp
  4205f0:	mov    eax,0x814476fa
  4205f5:	xlat   BYTE PTR ds:[ebx]
  4205f6:	pop    esi
  4205f7:	cdq    
  4205f8:	(bad)  
  4205fa:	outs   dx,BYTE PTR ds:[esi]
  4205fb:	xor    cl,0x2e
  4205fe:	lea    eax,[edx-0x4a096ce4]
  420604:	(bad)  
  420605:	aam    0xb7
  420607:	pop    edx
  420608:	clc    
  420609:	fdiv   QWORD PTR [esp+esi*2+0x5b]
  42060d:	adc    eax,DWORD PTR [ecx]
  42060f:	dec    esp
  420610:	jmp    DWORD PTR [edx+ecx*2+0x18]
  420614:	jl     0x42067c
  420616:	loop   0x420639
  420618:	sahf   
  420619:	fmul   st(4),st
  42061b:	adc    esp,edx
  42061d:	jne    0x4205fc
  42061f:	sbb    eax,0xbed5248c
  420624:	test   DWORD PTR [edx-0x6a37fd7e],ebp
  42062a:	xor    al,0xd4
  42062c:	jl     0x42062b
  42062e:	mov    al,0xa2
  420630:	sub    ah,BYTE PTR [edx+eiz*4-0x12211dc]
  420637:	mov    eax,ds:0xe9898793
  42063c:	stos   BYTE PTR es:[edi],al
  42063d:	sbb    dl,BYTE PTR [ecx+eax*8-0x4]
  420641:	(bad)  
  420642:	sub    DWORD PTR [ecx-0x33],edx
  420645:	jg     0x420626
  420647:	mov    edx,0x16f3d40d
  42064c:	call   0x8f12:0xad4f310f
  420653:	jae    0x420667
  420655:	inc    esi
  420656:	sbb    al,0x99
  420658:	shr    BYTE PTR [edi+0x515c3f9f],cl
  42065e:	xchg   ecx,eax
  42065f:	mov    ecx,0xc47af3f8
  420664:	add    BYTE PTR [ebp+0x74a364a0],dh
  42066a:	fild   DWORD PTR [edx+0x6fcf0542]
  420670:	in     al,dx
  420671:	clc    
  420672:	fisttp WORD PTR [edi-0x57]
  420675:	xchg   edx,eax
  420676:	inc    ecx
  420677:	out    dx,al
  420678:	imul   edx,DWORD PTR [ebx+0x77d7a525],0x8c64120c
  420682:	mov    ebx,0xfcc46ea9
  420687:	push   ss
  420688:	repnz and al,0xfb
  42068b:	loope  0x420635
  42068d:	mov    dl,0xba
  42068f:	pop    edi
  420690:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420691:	(bad)  
  420692:	mov    ebx,0x49624739
  420697:	aad    0xdc
  420699:	jo     0x420701
  42069b:	inc    ebp
  42069c:	inc    edi
  42069d:	jge    0x420627
  42069f:	push   esp
  4206a0:	std    
  4206a1:	and    al,0x8a
  4206a3:	fidivr DWORD PTR ds:0x21693ce5
  4206a9:	ss ss dec edi
  4206ac:	ds jae 0x420644
  4206af:	sub    al,0x3a
  4206b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206b2:	jb     0x420657
  4206b4:	xchg   edi,eax
  4206b5:	pop    edx
  4206b6:	inc    ecx
  4206b7:	xchg   esi,eax
  4206b8:	sbb    DWORD PTR [edx+0x5b],0xafd2dc28
  4206bf:	sub    esp,DWORD PTR [edi]
  4206c1:	inc    ecx
  4206c2:	xchg   edi,eax
  4206c3:	xchg   esi,eax
  4206c4:	mul    BYTE PTR [ebx+edx*8+0x158d660b]
  4206cb:	in     al,0x46
  4206cd:	dec    esi
  4206ce:	out    0x81,al
  4206d0:	lock mov al,cs:0x6105f1c5
  4206d7:	mov    ah,0xc6
  4206d9:	push   ecx
  4206da:	push   ss
  4206db:	fcom   QWORD PTR [edi]
  4206dd:	adc    al,0xc
  4206df:	imul   eax,ebx,0x86080911
  4206e5:	test   DWORD PTR [esi-0x56],0xd4eecb66
  4206ec:	mov    dl,bl
  4206ee:	fnstenv [edi+0x1e0f8ac4]
  4206f4:	mov    ?,WORD PTR [edx-0xb]
  4206f7:	or     eax,0x2d777e2d
  4206fc:	rcl    BYTE PTR [ecx],0x43
  4206ff:	add    ah,dh
  420701:	mov    esp,0x8cb3e21f
  420706:	pop    esp
  420707:	push   ebx
  420708:	test   BYTE PTR [ebx-0x5a5959cc],dl
  42070e:	push   ss
  42070f:	and    edi,DWORD PTR [edx-0x34923416]
  420715:	xor    al,0xe6
  420717:	push   ebp
  420718:	add    al,0x7d
  42071a:	jmp    0xdfe54206
  42071f:	adc    al,0x87
  420721:	jecxz  0x42073f
  420723:	mov    BYTE PTR ds:0x54f36fed,al
  420729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072a:	call   0xe0612259
  42072f:	ds repnz xchg edx,eax
  420732:	pop    ebp
  420733:	xchg   ecx,eax
  420734:	jp     0x42072b
  420736:	out    0xe4,al
  420738:	sub    bl,BYTE PTR [ecx-0x13b1df3]
  42073e:	pop    eax
  42073f:	mov    cs,WORD PTR [esi]
  420741:	ret    
  420742:	inc    ebp
  420743:	or     eax,ecx
  420745:	repnz (bad) 
  420747:	scas   eax,DWORD PTR es:[edi]
  420748:	add    ecx,DWORD PTR [esp+edi*2+0x692d54a0]
  42074f:	retf   0x3e34
  420752:	xor    eax,0xaa37b519
  420757:	jl     0x42073d
  420759:	out    dx,al
  42075a:	(bad)  
  42075b:	outs   dx,DWORD PTR ds:[esi]
  42075c:	sbb    DWORD PTR [eax],0x7f3ff382
  420762:	ins    DWORD PTR es:[edi],dx
  420763:	xchg   DWORD PTR [ecx-0x58],ebx
  420766:	(bad)  
  420767:	cmp    eax,0xaeaf9749
  42076c:	fs pop edx
  42076e:	out    dx,eax
  42076f:	and    dh,BYTE PTR [edi]
  420771:	pop    ds
  420772:	cmp    al,0x4e
  420774:	jl     0x420711
  420776:	push   edx
  420777:	sti    
  420778:	(bad)  
  420779:	push   cs
  42077a:	and    edx,DWORD PTR [eax]
  42077c:	add    BYTE PTR [ebx-0x79998250],dl
  420782:	jb     0x4207b4
  420784:	mov    ds:0x8afc208a,eax
  420789:	pop    esi
  42078a:	dec    ecx
  42078b:	fld    QWORD PTR [edi-0x17ac70c7]
  420791:	cli    
  420792:	outs   dx,BYTE PTR ds:[esi]
  420793:	dec    esi
  420794:	jae    0x420762
  420796:	pop    edx
  420797:	jbe    0x42080e
  420799:	mov    dh,0x2b
  42079b:	mov    eax,gs:0x6aa442f6
  4207a1:	inc    edi
  4207a2:	jge    0x4207e0
  4207a4:	jns    0x420773
  4207a6:	(bad)  
  4207a7:	push   ds
  4207a8:	sti    
  4207a9:	xchg   BYTE PTR [ebx-0x31],dh
  4207ac:	mov    WORD PTR [edi+0x79],cs
  4207af:	mov    eax,ds:0x2b5364fb
  4207b4:	jb     0x4207ff
  4207b6:	xor    al,0x25
  4207b8:	push   ebx
  4207b9:	xchg   esi,eax
  4207ba:	xor    ebp,ebx
  4207bc:	int    0xa
  4207be:	out    dx,eax
  4207bf:	push   DWORD PTR [edi+0x1b7710aa]
  4207c5:	(bad)  
  4207c6:	iret   
  4207c7:	retf   0x36e6
  4207ca:	cmc    
  4207cb:	mov    BYTE PTR [esi+0x66],al
  4207ce:	jae    0x420840
  4207d0:	test   eax,0x62f0aa17
  4207d5:	pop    edi
  4207d6:	mov    ecx,0xf8365b2b
  4207db:	and    cl,BYTE PTR [edi]
  4207dd:	lea    esi,[eax]
  4207df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e0:	pop    ds
  4207e1:	test   eax,0x5eb4ec71
  4207e6:	cdq    
  4207e7:	mov    ah,BYTE PTR [ecx]
  4207e9:	imul   esi,DWORD PTR ds:0x84d5f82,0xffffff98
  4207f0:	jg     0x420820
  4207f2:	test   al,0xaa
  4207f4:	and    al,0x2d
  4207f6:	mov    bh,0xb8
  4207f8:	xor    al,0xd0
  4207fa:	sar    DWORD PTR es:[edi],0xd5
  4207fe:	ret    0xa41e
  420801:	test   BYTE PTR [ebx-0x75],ch
  420804:	push   edx
  420805:	mov    ebp,0x859244e
  42080a:	sub    DWORD PTR [ebx+0x53],ebp
  42080d:	hlt    
  42080e:	pop    eax
  42080f:	push   ecx
  420810:	mov    ds:0x3dfa1e6d,eax
  420815:	cmp    ebx,DWORD PTR [edi]
  420817:	pop    esi
  420818:	ret    
  420819:	adc    BYTE PTR [eax],dl
  42081b:	push   ds
  42081c:	repnz mov DWORD PTR gs:[edi-0x30],eax
  420821:	mov    ds:0x3393b6e1,eax
  420826:	(bad)  
  420827:	repnz (bad) 
  420829:	(bad)  
  42082a:	xor    ecx,DWORD PTR [eax+edi*2-0xe]
  42082e:	sbb    edi,DWORD PTR [ebp+0x7069c9a5]
  420834:	sbb    al,0xa8
  420836:	scas   ax,WORD PTR es:[edi]
  420838:	ins    BYTE PTR es:[edi],dx
  420839:	adc    al,0x2
  42083b:	fisttp DWORD PTR [esi+0x37]
  42083e:	lahf   
  42083f:	lock lea edx,[edx-0x5b9db645]
  420846:	(bad)  
  420847:	pusha  
  420848:	in     al,dx
  420849:	jp     0x42085d
  42084b:	gs sbb eax,0x71a11840
  420851:	das    
  420852:	add    ebx,0x114d0f66
  420858:	mov    ebp,0xe7d35c57
  42085d:	fld    QWORD PTR [ecx+0x69]
  420860:	pop    ebx
  420861:	sbb    esp,DWORD PTR [ebx]
  420863:	pop    ebx
  420864:	ins    DWORD PTR es:[edi],dx
  420865:	and    DWORD PTR [ecx+0x3e58bb07],edx
  42086b:	sub    ecx,DWORD PTR [ebp+0x433b64b2]
  420871:	rep lods al,BYTE PTR ds:[esi]
  420873:	add    ebp,DWORD PTR [edx]
  420875:	mov    ecx,0x8129d932
  42087a:	imul   edi,DWORD PTR [edi+0x6ddd58c6],0xfffffff3
  420881:	fst    QWORD PTR [edi-0x11dd5bab]
  420887:	mov    esp,0x6a81a387
  42088c:	iret   
  42088d:	dec    edx
  42088e:	dec    DWORD PTR [ebx]
  420890:	jecxz  0x420854
  420892:	cmp    al,0x5b
  420894:	jbe    0x420841
  420896:	push   cs
  420897:	and    edx,DWORD PTR [ebx]
  420899:	adc    esi,DWORD PTR [eax]
  42089b:	dec    BYTE PTR [ecx+0x4d53f4b9]
  4208a1:	pop    ecx
  4208a2:	das    
  4208a3:	mov    bl,0x97
  4208a5:	rcr    DWORD PTR [ecx-0x73],cl
  4208a8:	test   BYTE PTR ds:0x318f4229,ah
  4208ae:	call   0x8203:0x398e0ec1
  4208b5:	test   BYTE PTR [eax+0x79],ah
  4208b8:	xor    DWORD PTR [esi],edx
  4208ba:	pop    ss
  4208bb:	fist   DWORD PTR [eax]
  4208bd:	das    
  4208be:	adc    al,0x2d
  4208c0:	jle    0x420895
  4208c2:	(bad)  
  4208c4:	sub    al,0x3
  4208c6:	dec    eax
  4208c7:	fbstp  TBYTE PTR [ebx-0x2ab87d93]
  4208cd:	cmp    eax,0x7586c29d
  4208d2:	(bad)  
  4208d3:	into   
  4208d4:	sbb    DWORD PTR [esi],ebp
  4208d6:	into   
  4208d7:	sbb    ebx,0xf3941e93
  4208dd:	add    cl,al
  4208df:	ins    BYTE PTR es:[edi],dx
  4208e0:	enter  0x55fc,0x1d
  4208e4:	sub    ebx,DWORD PTR [ebp+edi*8+0x57efeea]
  4208eb:	mov    cl,BYTE PTR [ebp+eiz*8-0x26018efe]
  4208f2:	and    al,0xd0
  4208f4:	xor    esi,DWORD PTR ds:0xff354f97
  4208fa:	or     esi,ebp
  4208fc:	std    
  4208fd:	jmp    0x420940
  4208ff:	mov    ah,0x66
  420901:	fcom   QWORD PTR [eax]
  420903:	shl    DWORD PTR [ebx+0x7f0b07a5],0xdb
  42090a:	inc    edx
  42090b:	push   edx
  42090c:	inc    ecx
  42090d:	adc    ch,BYTE PTR [ebx-0x1f]
  420910:	lahf   
  420911:	dec    esp
  420912:	mov    esi,fs
  420914:	call   0x3c52:0x733d9a97
  42091b:	jmp    0x4208d5
  42091d:	test   eax,0x12d38961
  420922:	out    dx,al
  420923:	in     eax,0xfd
  420925:	mov    edi,0x9699be35
  42092a:	fmul   DWORD PTR [ebp+ebx*4+0x40eeef42]
  420931:	adc    DWORD PTR [ebp-0x14],0x95ee17a
  420938:	not    esp
  42093a:	imul   esi,eax,0x17
  42093d:	stos   DWORD PTR es:[edi],eax
  42093e:	test   ebx,0x8f8e703
  420944:	into   
  420945:	call   0x289e0dda
  42094a:	dec    ebx
  42094b:	cmp    ch,BYTE PTR [edx+ebx*1]
  42094e:	pop    edx
  42094f:	(bad)  
  420950:	(bad)  
  420952:	cmp    cl,BYTE PTR [ecx-0x3ac356db]
  420958:	jo     0x4208f5
  42095a:	retf   0x9a2a
  42095d:	scas   eax,DWORD PTR es:[edi]
  42095e:	outs   dx,DWORD PTR ds:[esi]
  42095f:	repnz gs loop 0x4209bb
  420963:	inc    ebx
  420964:	cs cmp ebp,edi
  420967:	clc    
  420968:	push   ss
  420969:	call   0xf4c8fa1c
  42096e:	fwait
  42096f:	inc    ebp
  420970:	into   
  420971:	sbb    al,BYTE PTR [edx+0x6a]
  420974:	dec    ebx
  420975:	xor    BYTE PTR [edx+0x65],ah
  420978:	sbb    eax,0xcb94bb71
  42097e:	jbe    0x420997
  420980:	into   
  420981:	stos   BYTE PTR es:[edi],al
  420982:	cs ret 0x212
  420986:	outs   dx,BYTE PTR ds:[esi]
  420987:	xchg   BYTE PTR [ecx-0x755db173],dh
  42098d:	mov    ds:0xbaf73fb1,al
  420992:	and    ebp,DWORD PTR [edx+0x1b]
  420995:	sub    BYTE PTR [eax+0x18],bl
  420998:	pop    edx
  420999:	inc    ebp
  42099a:	add    al,0xeb
  42099c:	dec    ebx
  42099d:	loope  0x4209cf
  42099f:	mov    eax,ds:0xbe96a62d
  4209a4:	pop    ebx
  4209a5:	adc    eax,0xfc7662d8
  4209aa:	dec    eax
  4209ab:	leave  
  4209ac:	sbb    eax,0x9b643fd5
  4209b1:	mov    ch,0x26
  4209b3:	repz xchg ecx,eax
  4209b5:	sar    BYTE PTR [edx+0x4058704e],1
  4209bb:	mov    cl,0x2d
  4209bd:	out    0x95,eax
  4209bf:	sub    ch,ah
  4209c1:	ins    BYTE PTR es:[edi],dx
  4209c2:	mov    ah,0xae
  4209c4:	and    al,0x67
  4209c6:	out    0xc2,al
  4209c8:	xor    al,dh
  4209ca:	loopne 0x4209af
  4209cc:	add    esi,ecx
  4209ce:	and    eax,DWORD PTR [eax+0x1b]
  4209d1:	inc    eax
  4209d2:	push   edx
  4209d3:	stos   BYTE PTR es:[edi],al
  4209d4:	mov    ds:0x42d8f176,eax
  4209d9:	push   ebx
  4209da:	in     eax,0xdb
  4209dc:	fisttp DWORD PTR [esi]
  4209de:	push   cs
  4209df:	cmp    bh,al
  4209e1:	popf   
  4209e2:	lahf   
  4209e3:	ins    BYTE PTR es:[edi],dx
  4209e4:	retf   0x49c3
  4209e7:	xchg   BYTE PTR [ebx+0x65],al
  4209ea:	cmp    cl,BYTE PTR [ebp+0x66]
  4209ed:	popf   
  4209ee:	cmp    cl,BYTE PTR [esi]
  4209f0:	add    esp,ecx
  4209f2:	push   ebp
  4209f3:	add    DWORD PTR es:[ebx-0x524c8204],ebx
  4209fa:	jl     0x420a05
  4209fc:	mov    esi,0xec12e8dc
  420a01:	dec    WORD PTR [ebp+0x26b3bfc3]
  420a08:	icebp  
  420a09:	rol    DWORD PTR [esi-0x11],cl
  420a0c:	pop    esi
  420a0d:	imul   ebp,DWORD PTR [esi+0x245e7409],0xffffffa7
  420a14:	or     eax,0x78b576a4
  420a19:	jl     0x420a87
  420a1b:	add    ebp,DWORD PTR [edi-0x15]
  420a1e:	les    edi,FWORD PTR [ebp+0x36]
  420a21:	or     al,0x37
  420a23:	jmp    0x44ec4a9b
  420a28:	jno    0x4209c0
  420a2a:	or     DWORD PTR [esi+eiz*4+0x7b],esi
  420a2e:	aad    0x8d
  420a30:	mov    al,ds:0xe7d42cb5
  420a35:	inc    esp
  420a36:	pop    edx
  420a37:	xchg   dl,dh
  420a39:	cmc    
  420a3a:	cli    
  420a3b:	adc    ch,dl
  420a3d:	cs dec edi
  420a3f:	jns    0x420a1a
  420a41:	std    
  420a42:	cmc    
  420a43:	pop    es
  420a44:	or     al,BYTE PTR [edx+0x5b6fe261]
  420a4a:	mov    ebp,0xa9439c16
  420a4f:	xor    DWORD PTR [ebx+eax*1-0x4c8440b],esi
  420a56:	push   0xffffffca
  420a58:	dec    ebp
  420a59:	std    
  420a5a:	mov    BYTE PTR [eax+0x21],dh
  420a5d:	out    dx,al
  420a5e:	mov    cl,0x3a
  420a60:	and    DWORD PTR [ecx],esp
  420a62:	(bad)  
  420a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a65:	inc    esp
  420a66:	mov    al,0xd3
  420a68:	mov    bl,0x22
  420a6a:	cmp    DWORD PTR [edi+edi*8],esp
  420a6d:	mov    edi,DWORD PTR [edx]
  420a6f:	xor    dl,ch
  420a71:	mov    dh,bh
  420a73:	xor    dh,cl
  420a75:	sub    DWORD PTR [edx+0x7a],edx
  420a78:	in     al,dx
  420a79:	add    bl,0x3b
  420a7c:	sar    BYTE PTR [edi+0x6f6ecb5e],cl
  420a82:	rcr    DWORD PTR [ebx],cl
  420a84:	push   ss
  420a85:	std    
  420a86:	adc    ebp,DWORD PTR [esi]
  420a88:	sub    DWORD PTR [edx+0xd],edx
  420a8b:	shl    BYTE PTR [edi+0xd440ff2],1
  420a91:	mov    bh,0x63
  420a93:	loopne 0x420a51
  420a95:	or     esp,DWORD PTR [ecx]
  420a97:	mov    bl,BYTE PTR [ecx-0x1fe43783]
  420a9d:	ins    DWORD PTR es:[edi],dx
  420a9e:	popf   
  420a9f:	test   DWORD PTR [esp+ecx*1-0x56e3162e],esi
  420aa6:	int    0x2c
  420aa8:	mov    dl,0x39
  420aaa:	sbb    BYTE PTR [ebp-0x34b06276],ah
  420ab0:	je     0x420a6c
  420ab2:	in     eax,dx
  420ab3:	rol    DWORD PTR [eax+0x420a29c9],1
  420ab9:	ret    0x601e
  420abc:	sub    eax,DWORD PTR [ebp+0x55]
  420abf:	xchg   ecx,eax
  420ac0:	(bad)  
  420ac1:	or     ah,BYTE PTR [edi+0x539f1454]
  420ac7:	ret    0x7c5a
  420aca:	pusha  
  420acb:	(bad)  
  420acc:	ja     0x420a5c
  420ace:	push   esp
  420acf:	(bad)  
  420ad0:	dec    esp
  420ad1:	or     BYTE PTR ds:0xa3ffb7c6,bh
  420ad7:	mov    dh,0x99
  420ad9:	push   ebx
  420ada:	jo     0x420ac2
  420adc:	sti    
  420add:	mov    eax,ds:0xb7a11f95
  420ae2:	push   ss
  420ae3:	fs scas eax,DWORD PTR es:[edi]
  420ae5:	mov    cl,0xe2
  420ae7:	cmp    bl,ah
  420ae9:	pushf  
  420aea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aeb:	out    dx,eax
  420aec:	(bad)  
  420aed:	lods   al,BYTE PTR ds:[esi]
  420aee:	jg     0x420b6c
  420af0:	mov    fs,WORD PTR [eax]
  420af2:	push   ss
  420af3:	dec    ebp
  420af4:	mov    al,0x73
  420af6:	pop    eax
  420af7:	(bad)  
  420af8:	jecxz  0x420b0a
  420afa:	rol    BYTE PTR [ecx+0xc],1
  420afd:	sub    al,0x1b
  420aff:	hlt    
  420b00:	cpuid  
  420b02:	jne    0x420ae9
  420b04:	and    DWORD PTR [esi+0x54],ecx
  420b07:	pop    ds
  420b08:	push   0x42e0e041
  420b0d:	xor    DWORD PTR [ebp+ecx*4-0x50ea55da],eax
  420b14:	(bad)  
  420b15:	int    0xf6
  420b17:	cld    
  420b18:	inc    edi
  420b19:	sub    DWORD PTR [ebp+0x41],eax
  420b1c:	xor    DWORD PTR [ebp+0x59],ecx
  420b1f:	(bad)  
  420b20:	arpl   sp,bp
  420b22:	lods   eax,DWORD PTR ds:[esi]
  420b23:	jecxz  0x420b0e
  420b25:	or     dl,BYTE PTR [edx+esi*2+0x20]
  420b29:	rol    BYTE PTR ds:0x9e1f5bcb,cl
  420b2f:	sbb    ecx,DWORD PTR [ecx+0x5]
  420b32:	push   ecx
  420b33:	dec    ecx
  420b34:	dec    ebx
  420b35:	scas   al,BYTE PTR es:[edi]
  420b36:	imul   edx,DWORD PTR [edx-0x7a],0x6932eaed
  420b3d:	jbe    0x420b7c
  420b3f:	je     0x420af8
  420b41:	cmp    eax,0xb2b32720
  420b46:	jbe    0x420bb5
  420b48:	push   edx
  420b49:	sbb    DWORD PTR [edi-0x71],0xffffff97
  420b4d:	repnz fwait
  420b4f:	push   cs
  420b50:	shl    BYTE PTR [ebx],0xf8
  420b53:	pop    ebp
  420b54:	lock ins DWORD PTR es:[edi],dx
  420b56:	push   ecx
  420b57:	xor    DWORD PTR [ebp+ecx*8-0x4ff828e8],edx
  420b5e:	mov    bl,0x86
  420b60:	(bad)  
  420b61:	imul   BYTE PTR [ebp+0x32046f9f]
  420b67:	dec    eax
  420b68:	in     al,dx
  420b69:	jge    0x420b6d
  420b6b:	mov    al,0x21
  420b6d:	or     al,0x70
  420b6f:	jp     0x420bab
  420b71:	inc    edi
  420b72:	push   esi
  420b73:	push   ebp
  420b74:	inc    eax
  420b75:	push   0xfffffff8
  420b77:	cli    
  420b78:	leave  
  420b79:	jg     0x420b3c
  420b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b7c:	xlat   BYTE PTR ds:[ebx]
  420b7d:	push   edx
  420b7e:	ret    
  420b7f:	bound  edi,QWORD PTR [ebp-0x27]
  420b82:	clc    
  420b83:	pop    ecx
  420b84:	push   0x1b
  420b86:	sub    eax,0xfdc62080
  420b8b:	adc    BYTE PTR es:[eax+esi*1-0x75],0x51
  420b91:	ror    BYTE PTR [esi+0x2d],cl
  420b94:	push   cs
  420b95:	lods   al,BYTE PTR ds:[esi]
  420b96:	imul   edi,DWORD PTR [edi],0xffffff96
  420b99:	add    eax,0xa911c897
  420b9e:	adc    eax,0x8c51c8cb
  420ba3:	jo     0x420c14
  420ba5:	mov    bh,0xdd
  420ba7:	pop    ecx
  420ba8:	ror    ebp,1
  420baa:	jmp    0x420b63
  420bac:	inc    edx
  420bad:	jge    0x420b35
  420baf:	inc    ecx
  420bb0:	(bad)  
  420bb1:	neg    DWORD PTR [ebx+0x338626ec]
  420bb7:	mov    WORD PTR [edx-0x3],es
  420bba:	or     DWORD PTR [edi-0x3c],edx
  420bbd:	and    esi,ecx
  420bbf:	mov    al,0x51
  420bc1:	test   eax,0x95cd5fdc
  420bc6:	inc    edx
  420bc7:	lahf   
  420bc8:	add    BYTE PTR [eax],ah
  420bca:	mov    esp,cs
  420bcc:	jbe    0x420b9a
  420bce:	aas    
  420bcf:	dec    edi
  420bd0:	addr16 jl 0x420bec
  420bd3:	int3   
  420bd4:	lods   al,BYTE PTR ds:[esi]
  420bd5:	into   
  420bd6:	jo     0x420c28
  420bd8:	dec    ecx
  420bd9:	jns    0x420c50
  420bdb:	inc    ebx
  420bdc:	jns    0x420bb1
  420bde:	(bad)  
  420bdf:	loopne 0x420c4a
  420be1:	pop    ebp
  420be2:	rcr    DWORD PTR [edx-0x6],0x5
  420be6:	lds    esi,FWORD PTR [ecx+0x4]
  420be9:	jne    0x420bc3
  420beb:	rcl    DWORD PTR [eax-0x3b],0x59
  420bef:	sub    DWORD PTR [ecx],edi
  420bf1:	mov    eax,ds:0xec3cfc51
  420bf6:	stos   DWORD PTR es:[edi],eax
  420bf7:	data16 fwait
  420bf9:	loop   0x420b9c
  420bfb:	xchg   ebx,eax
  420bfc:	add    ebp,eax
  420bfe:	mov    ecx,0xc8a26b6d
  420c03:	mov    ch,0x38
  420c05:	push   ebp
  420c06:	out    dx,al
  420c07:	xchg   ebx,eax
  420c08:	jp     0x420bd6
  420c0a:	rol    BYTE PTR [esi-0x78],1
  420c0d:	fsub   st,st(4)
  420c0f:	mov    al,0xcb
  420c11:	jg     0x420c77
  420c13:	ja     0x420c5f
  420c15:	add    al,0x2
  420c17:	stos   BYTE PTR es:[edi],al
  420c18:	sbb    al,0x12
  420c1a:	push   0x6e
  420c1c:	mov    ah,0xb0
  420c1e:	mov    WORD PTR [eax+0xdc27f38],fs
  420c24:	xor    al,0xbe
  420c26:	mov    DWORD PTR [ebx+eiz*2],edi
  420c29:	mov    ebp,DWORD PTR [esi]
  420c2b:	daa    
  420c2c:	repz sbb BYTE PTR [eax+0x28a4ad73],0xae
  420c34:	adc    BYTE PTR [eax-0x1bcebdb9],0xb4
  420c3b:	mov    esi,0xc7ea20ee
  420c40:	dec    ecx
  420c41:	xchg   ebp,eax
  420c42:	sub    DWORD PTR [ebx],eax
  420c44:	fimul  WORD PTR [esp+esi*8]
  420c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c48:	adc    eax,0x53ac27a3
  420c4d:	test   BYTE PTR [ecx],al
  420c4f:	nop
  420c50:	outs   dx,DWORD PTR ss:[esi]
  420c52:	aaa    
  420c53:	out    0x80,al
  420c55:	fisub  DWORD PTR ds:0xd394a468
  420c5b:	call   0xba62f231
  420c60:	fmulp  st(6),st
  420c62:	mov    DWORD PTR ds:0x425c0935,edx
  420c68:	xor    BYTE PTR [esi],ah
  420c6a:	mov    esp,DWORD PTR [eax-0x46]
  420c6d:	cmp    al,0x83
  420c6f:	jmp    eax
  420c71:	outs   dx,BYTE PTR ds:[esi]
  420c72:	or     dl,ah
  420c74:	adc    al,0xf3
  420c76:	push   esp
  420c77:	cmp    BYTE PTR [esi+0x36f16323],0x70
  420c7e:	pop    esi
  420c7f:	and    eax,eax
  420c81:	pop    eax
  420c82:	pop    ss
  420c83:	fsubr  st,st(2)
  420c85:	or     BYTE PTR [esi],dh
  420c87:	arpl   WORD PTR [edx+0x16],cx
  420c8a:	sti    
  420c8b:	div    DWORD PTR [ecx+0x641064f6]
  420c91:	cmc    
  420c92:	sbb    al,0x74
  420c94:	xor    al,0xf1
  420c97:	out    0xe7,eax
  420c99:	mov    eax,0x82dfddd9
  420c9e:	inc    ecx
  420c9f:	dec    ebx
  420ca0:	stos   BYTE PTR es:[edi],al
  420ca1:	mov    ebx,0xc9bf00bd
  420ca6:	mov    al,0x46
  420ca8:	je     0x420cc8
  420caa:	pop    esi
  420cab:	cli    
  420cac:	mov    ebp,fs
  420cae:	imul   eax,DWORD PTR [ebx-0x30],0xffffffa3
  420cb2:	int    0xa4
  420cb4:	or     eax,0xc708d95b
  420cb9:	inc    ecx
  420cba:	mov    BYTE PTR [eax+0x7fd83aab],al
  420cc0:	xchg   esp,eax
  420cc1:	shl    DWORD PTR [ebx-0x56],0x39
  420cc5:	jecxz  0x420c68
  420cc7:	add    dh,BYTE PTR [ebx-0x3b1eb916]
  420ccd:	retf   0x7e5e
  420cd0:	xor    al,0xbd
  420cd2:	loopne 0x420d1e
  420cd4:	xor    DWORD PTR [ebp-0x4],esp
  420cd7:	lea    edi,[ebx]
  420cd9:	jo     0x420d00
  420cdb:	cmp    al,0xf9
  420cdd:	loope  0x420cf5
  420cdf:	pop    ebp
  420ce0:	out    0x33,al
  420ce2:	jmp    0xee4eb099
  420ce7:	jo     0x420c7e
  420ce9:	clc    
  420cea:	lea    edx,[edx]
  420cec:	sbb    DWORD PTR [ebp-0x48],esi
  420cef:	stc    
  420cf0:	sahf   
  420cf1:	icebp  
  420cf2:	stos   BYTE PTR es:[edi],al
  420cf3:	adc    esi,DWORD PTR [edi+edx*8]
  420cf6:	mov    edx,0x1f182ce8
  420cfb:	jbe    0x420d26
  420cfd:	xor    eax,0x15e2e8d2
  420d02:	add    DWORD PTR [edi+0x60],0xc12fa10a
  420d09:	jmp    eax
  420d0b:	ja     0x420d5d
  420d0d:	sub    DWORD PTR [ebx+0x1f],esp
  420d10:	aad    0xe7
  420d12:	cwde   
  420d13:	loope  0x420ca1
  420d15:	push   ss
  420d16:	loopne 0x420d65
  420d18:	sub    eax,0x48804817
  420d1d:	pop    edx
  420d1e:	add    DWORD PTR [ecx+0x73],esp
  420d21:	stc    
  420d22:	sbb    DWORD PTR [ecx+0x505d1d1d],esi
  420d28:	cli    
  420d29:	test   edx,ecx
  420d2b:	inc    ebx
  420d2c:	or     BYTE PTR [ebx],ah
  420d2e:	mov    ds:0xa4431a9d,eax
  420d33:	sub    DWORD PTR [ebp-0x1695fb29],ecx
  420d39:	outs   dx,BYTE PTR ds:[esi]
  420d3a:	adc    eax,edi
  420d3c:	clc    
  420d3d:	and    BYTE PTR [ebp*8-0x180fb5f8],0x19
  420d45:	push   edx
  420d46:	mov    ah,0x7c
  420d48:	xchg   esp,eax
  420d49:	or     dl,bh
  420d4b:	outs   dx,DWORD PTR ds:[esi]
  420d4c:	out    0xd1,eax
  420d4e:	aas    
  420d4f:	and    al,0x1b
  420d52:	adc    eax,0x7dfe73c1
  420d57:	dec    ecx
  420d58:	mov    cl,0xaa
  420d5a:	mov    ebp,edx
  420d5c:	add    BYTE PTR [esi+0x18],ah
  420d5f:	adc    al,0x50
  420d61:	and    ebx,DWORD PTR [eax-0x34626793]
  420d67:	xchg   edi,eax
  420d68:	push   es
  420d69:	leave  
  420d6a:	sub    BYTE PTR [eax+0x12],bl
  420d6d:	in     eax,0x2b
  420d6f:	dec    edi
  420d70:	add    eax,0x46feffd0
  420d75:	mov    edi,DWORD PTR [eax]
  420d77:	(bad)
  420d7a:	out    0x42,al
  420d7c:	test   dh,bh
  420d7e:	test   DWORD PTR [esi-0x53],esi
  420d81:	(bad)  
  420d82:	out    0x6,eax
  420d84:	idiv   DWORD PTR [ebp+0xbc6a95]
  420d8a:	out    dx,eax
  420d8b:	fwait
  420d8c:	call   0xdb8d:0x90cc8b7f
  420d93:	cmp    esp,DWORD PTR [esi-0x66564496]
  420d99:	sbb    cl,BYTE PTR [eax]
  420d9b:	mov    al,0x33
  420d9d:	push   ss
  420d9e:	leave  
  420d9f:	stos   DWORD PTR es:[edi],eax
  420da0:	test   BYTE PTR [edi+0x16],bl
  420da3:	test   al,0x17
  420da5:	pushf  
  420da6:	sbb    ch,al
  420da8:	int3   
  420da9:	jle    0x420e08
  420dab:	pop    eax
  420dac:	dec    ecx
  420dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dae:	neg    DWORD PTR [edx-0xe]
  420db1:	pop    ebx
  420db2:	std    
  420db3:	out    dx,eax
  420db4:	jge    0x420d75
  420db6:	stc    
  420db7:	cmp    eax,0x85e578c9
  420dbc:	inc    eax
  420dbd:	and    al,dh
  420dbf:	adc    al,0x21
  420dc1:	adc    al,0x2d
  420dc3:	sbb    dh,bh
  420dc5:	clc    
  420dc6:	(bad)  
  420dc7:	xor    eax,0xd5195c9f
  420dcc:	aaa    
  420dcd:	loope  0x420dc1
  420dcf:	xchg   edi,eax
  420dd0:	test   BYTE PTR [edi-0x56d83a11],bh
  420dd6:	in     eax,dx
  420dd7:	or     al,0xb5
  420dd9:	jecxz  0x420d86
  420ddb:	call   0x597d:0xa945a0b5
  420de2:	jmp    0x420db6
  420de4:	mov    esi,0x39463297
  420de9:	lock or eax,0x7ed99ad9
  420def:	(bad)  
  420df0:	pop    ds
  420df1:	xchg   DWORD PTR [ebx+0x2dd0fb16],esp
  420df7:	outs   dx,DWORD PTR ds:[esi]
  420df8:	xchg   BYTE PTR [eax-0x6a9ad283],dh
  420dfe:	loopne 0x420de1
  420e00:	sbb    cl,BYTE PTR [ebp+0x6a35e316]
  420e06:	mov    eax,0x693df793
  420e0b:	and    DWORD PTR [esp+ebx*8],0x4ab3ecf0
  420e12:	ins    DWORD PTR es:[edi],dx
  420e13:	shl    bh,1
  420e15:	sbb    ebx,ecx
  420e17:	or     al,0x90
  420e19:	sub    ebx,ebx
  420e1b:	sti    
  420e1c:	loop   0x420da5
  420e1e:	cmp    BYTE PTR [eax+0x3f],cl
  420e21:	sbb    DWORD PTR [edx-0x5da8bbc2],eax
  420e27:	(bad)  
  420e28:	ffree  st(6)
  420e2a:	cld    
  420e2b:	scas   eax,DWORD PTR es:[edi]
  420e2c:	xor    DWORD PTR [edx+0x77b871c1],eax
  420e32:	div    BYTE PTR [ecx-0x79]
  420e35:	(bad)  
  420e36:	ror    BYTE PTR [esi+0x18d07583],1
  420e3c:	jmp    0x6655c791
  420e41:	lock or dh,ah
  420e44:	add    esi,DWORD PTR ss:[ebx]
  420e47:	call   0x4459f3f5
  420e4c:	imul   edi,esi,0xa575994b
  420e52:	adc    eax,0xd355c73b
  420e57:	add    BYTE PTR [edi+0x6a],0x1c
  420e5b:	pop    ecx
  420e5c:	imul   DWORD PTR [ebx]
  420e5e:	adc    DWORD PTR [eax+0x13],edx
  420e61:	in     eax,0x96
  420e63:	ja     0x420e45
  420e65:	sub    al,BYTE PTR [esi-0x8638af2]
  420e6b:	mov    bl,0x12
  420e6d:	jl     0x420e82
  420e6f:	dec    edi
  420e70:	cs ret 0x70ad
  420e74:	inc    ecx
  420e75:	icebp  
  420e76:	mov    esi,0x49b92b70
  420e7b:	push   ebx
  420e7c:	or     eax,0x3784b40
  420e81:	push   ecx
  420e82:	cmp    ch,BYTE PTR [edi-0x5db9b5ab]
  420e88:	sbb    al,0x6e
  420e8a:	mov    esp,0xf55fb35d
  420e8f:	mov    cl,0xc2
  420e91:	sub    al,BYTE PTR [edx]
  420e93:	leave  
  420e94:	rol    BYTE PTR [edx-0x3f],1
  420e97:	popa   
  420e98:	call   0xbcb5e844
  420e9d:	out    dx,al
  420e9e:	idiv   BYTE PTR [esp+ebx*1]
  420ea1:	lahf   
  420ea2:	pushf  
  420ea3:	dec    esp
  420ea4:	aas    
  420ea5:	add    BYTE PTR [ecx+0x5d],0x47
  420ea9:	dec    eax
  420eaa:	xchg   esi,eax
  420eab:	enter  0x9570,0xda
  420eaf:	sbb    al,0xfa
  420eb1:	or     bl,cl
  420eb3:	xchg   esp,eax
  420eb4:	dec    eax
  420eb5:	push   0xffffffff
  420eb7:	les    esi,FWORD PTR [esi]
  420eb9:	sar    DWORD PTR [edx+ebx*8-0x3f70fbb2],cl
  420ec0:	out    0x8e,al
  420ec2:	jge    0x420e53
  420ec4:	sbb    eax,0x140ae904
  420ec9:	or     al,BYTE PTR [edi]
  420ecb:	clc    
  420ecc:	adc    al,0x34
  420ece:	cmp    BYTE PTR [edx+0x28],0x48
  420ed2:	jns    0x420f27
  420ed4:	push   0x97d1e9fd
  420ed9:	xchg   ecx,eax
  420eda:	cdq    
  420edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420edc:	cmp    BYTE PTR [esi+0x6220a294],dl
  420ee2:	nop
  420ee3:	(bad)  
  420ee5:	pop    ebx
  420ee6:	mov    BYTE PTR [edi-0x422e3f0e],dh
  420eec:	call   0xc43c3dc9
  420ef1:	ds mov bh,BYTE PTR ds:[esi-0x48]
  420ef6:	mov    ebp,0xce6a47ed
  420efb:	call   0xe304:0xb593a127
  420f02:	cdq    
  420f03:	mov    esi,0xaf2f0fc6
  420f08:	hlt    
  420f09:	add    ah,dl
  420f0b:	scas   eax,DWORD PTR es:[edi]
  420f0c:	inc    edx
  420f0d:	sub    al,0x57
  420f0f:	or     bl,BYTE PTR [ebp-0x14]
  420f12:	push   esp
  420f13:	push   ecx
  420f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f15:	hlt    
  420f16:	jl     0x420eb6
  420f18:	retf   
  420f19:	mov    ebp,0x258a0437
  420f1e:	sub    ecx,DWORD PTR [edi-0x59df1682]
  420f24:	call   DWORD PTR [ecx-0x1411d5e2]
  420f2a:	out    dx,eax
  420f2b:	adc    dh,al
  420f2d:	pop    ss
  420f2e:	(bad)  
  420f2f:	pop    esi
  420f30:	jnp    0x420edd
  420f32:	stos   DWORD PTR es:[edi],eax
  420f33:	mov    es,WORD PTR [ebx-0xf]
  420f36:	int3   
  420f37:	jmp    0x9bea49a2
  420f3c:	pusha  
  420f3d:	mov    fs,WORD PTR [ecx]
  420f3f:	inc    eax
  420f40:	lods   eax,DWORD PTR ds:[esi]
  420f41:	imul   ebp,DWORD PTR [ebx+edx*2-0x11f84df0],0xfffffff2
  420f49:	aaa    
  420f4a:	jb     0x420ef0
  420f4c:	sub    BYTE PTR [eax+0x1],dh
  420f4f:	cmp    al,0xad
  420f51:	mov    WORD PTR [edx-0x4661fb7d],cs
  420f57:	aam    0x26
  420f59:	leave  
  420f5a:	jno    0x420fb7
  420f5c:	xchg   ebx,eax
  420f5d:	stc    
  420f5e:	jl     0x420f91
  420f60:	jbe    0x420fad
  420f62:	sbb    DWORD PTR [edx],0x41
  420f65:	mov    bh,0xaa
  420f67:	xor    BYTE PTR [esi],ch
  420f69:	pop    ds
  420f6a:	push   ecx
  420f6b:	imul   bl
  420f6d:	pop    edx
  420f6e:	je     0x420f13
  420f70:	push   cs
  420f71:	iret   
  420f72:	fsubr  QWORD PTR [edx-0x9]
  420f75:	scas   al,BYTE PTR es:[edi]
  420f76:	shl    BYTE PTR [ecx],0xd7
  420f79:	pop    ss
  420f7a:	push   esi
  420f7b:	and    BYTE PTR [eax+0x7c8ad44],dl
  420f81:	dec    ecx
  420f82:	ins    DWORD PTR es:[edi],dx
  420f83:	pop    esp
  420f84:	je     0x420f9a
  420f86:	sar    DWORD PTR [edi-0x6b],0x5b
  420f8a:	sbb    BYTE PTR cs:[edx+0x8],ch
  420f8e:	adc    eax,0x52174cdd
  420f93:	xchg   edx,eax
  420f94:	sbb    BYTE PTR [esi+0x11faa93f],cl
  420f9a:	ja     0x421013
  420f9c:	inc    eax
  420f9d:	jne    0x420fce
  420f9f:	cli    
  420fa0:	mov    bh,0x81
  420fa2:	xchg   DWORD PTR [esi-0x48],edi
  420fa5:	xor    edi,esp
  420fa7:	adc    BYTE PTR [edi+0x18],ch
  420faa:	pop    edx
  420fab:	pop    ds
  420fac:	mov    ds:0x6de6fb0d,al
  420fb1:	repz pop ebp
  420fb3:	sahf   
  420fb4:	sub    ebp,DWORD PTR [edx-0x6531c011]
  420fba:	mov    al,0x8e
  420fbc:	sub    esi,DWORD PTR [ebx+0x6]
  420fbf:	jle    0x420fcd
  420fc1:	or     ecx,DWORD PTR [esi+0x45]
  420fc4:	repnz rdtsc 
  420fc7:	xlat   BYTE PTR ds:[ebx]
  420fc8:	jle    0x420fde
  420fca:	cli    
  420fcb:	xchg   ebx,eax
  420fcc:	add    ah,BYTE PTR [esi-0x3f]
  420fcf:	add    DWORD PTR [ebp+0x26],eax
  420fd2:	mov    edi,0x4cf7fd54
  420fd7:	fwait
  420fd8:	push   esp
  420fd9:	inc    esi
  420fda:	sbb    ch,BYTE PTR [ecx]
  420fdc:	(bad)  
  420fdd:	pop    ebx
  420fde:	stos   BYTE PTR es:[edi],al
  420fdf:	sbb    ebp,edi
  420fe1:	add    DWORD PTR [edx-0x2a],ebx
  420fe4:	in     al,dx
  420fe5:	test   eax,0xe3d7ac48
  420fea:	rcr    DWORD PTR [ebx-0x2c],0x29
  420fee:	mov    gs,WORD PTR [edi+0x54557e78]
  420ff4:	aad    0x1
  420ff6:	ins    DWORD PTR es:[edi],dx
  420ff7:	not    DWORD PTR [esi-0x38737a97]
  420ffd:	das    
  420ffe:	jmp    0xbc176d6e
  421003:	or     eax,0x23acd02b
  421008:	int    0x1c
  42100a:	test   DWORD PTR [edi-0x7a],ecx
  42100d:	cmp    al,0xb3
  42100f:	(bad)  
  421010:	jno    0x421041
  421012:	xchg   dl,ah
  421014:	in     eax,0xdb
  421016:	ret    0xcf08
  421019:	out    dx,eax
  42101a:	mov    ecx,0x860e0031
  42101f:	sub    edx,DWORD PTR [esi+ebp*2-0x5e]
  421023:	mov    dh,0x53
  421025:	add    edx,ecx
  421027:	push   ecx
  421028:	cwde   
  421029:	adc    BYTE PTR [esp+ebx*4-0x3fbdb53d],cl
  421030:	cs neg dl
  421033:	clc    
  421034:	jge    0x421041
  421036:	bnd call 0x7d7cea7e
  42103c:	mov    dl,0xec
  42103e:	adc    al,0x6b
  421040:	loop   0x42102e
  421042:	jne    0x421088
  421044:	mov    ebp,0x7b6c811
  421049:	fucomip st,st(1)
  42104b:	adc    ah,BYTE PTR [ebx-0x4a56e8e4]
  421051:	jle    0x42101a
  421053:	mov    edx,0x9bc6c889
  421058:	repnz dec ebx
  42105a:	into   
  42105b:	dec    esi
  42105c:	inc    esi
  42105d:	dec    esp
  42105e:	and    ebp,esp
  421060:	test   BYTE PTR [edi],cl
  421062:	cld    
  421063:	cmp    bx,sp
  421066:	jb     0x421097
  421068:	pop    ecx
  421069:	sub    dh,0x41
  42106c:	sub    BYTE PTR [edi+0x4116df1],0x4c
  421073:	adc    al,dh
  421075:	pop    edx
  421076:	jmp    FWORD PTR [esi-0x1e]
  421079:	lock xor al,dh
  42107c:	fcomp  QWORD PTR [esi+0x10]
  42107f:	clc    
  421080:	pop    ss
  421081:	jmp    0x96d7c27a
  421086:	pop    eax
  421087:	xor    eax,0x422f5743
  42108c:	inc    eax
  42108d:	pushf  
  42108e:	dec    ebp
  42108f:	and    ah,ah
  421091:	mov    ds:0x7a250573,al
  421096:	rcl    dl,cl
  421098:	xchg   ecx,eax
  421099:	pushf  
  42109a:	aaa    
  42109b:	sub    eax,DWORD PTR [esi+0x69ab465d]
  4210a1:	test   al,0x4
  4210a3:	sub    BYTE PTR [ecx-0x72441051],ch
  4210a9:	and    al,0x1a
  4210ab:	jecxz  0x421115
  4210ad:	ja     0x4210b0
  4210af:	pusha  
  4210b0:	retf   
  4210b1:	out    0x7c,eax
  4210b3:	xor    eax,0xaf23b1e0
  4210b8:	(bad)  
  4210b9:	cmp    edi,ebx
  4210bb:	and    eax,0x7c089482
  4210c0:	into   
  4210c1:	xor    ebx,ebp
  4210c3:	xchg   edi,eax
  4210c4:	pop    esi
  4210c5:	adc    dl,BYTE PTR [esi+0x138bbcdf]
  4210cb:	inc    eax
  4210cc:	gs sbb eax,0xac0cdc04
  4210d2:	cmp    cl,dl
  4210d4:	push   ss
  4210d5:	sub    DWORD PTR [edi],edx
  4210d7:	fs imul edi,esp,0x7d43b402
  4210de:	daa    
  4210df:	mov    cl,0xfd
  4210e1:	repnz in eax,0x8
  4210e4:	jge    0x4210f1
  4210e6:	lock adc esi,DWORD PTR [edx]
  4210e9:	jecxz  0x42112a
  4210eb:	jb     0x4210e6
  4210ed:	cmp    BYTE PTR [eax+ebx*1],dh
  4210f0:	xchg   ebp,eax
  4210f1:	ror    DWORD PTR [esi],1
  4210f3:	repnz add bl,BYTE PTR [eax-0x26e02bf1]
  4210fa:	sub    eax,0xc2932437
  4210ff:	pop    esp
  421100:	or     eax,0xbc118fc3
  421105:	shl    ebx,0x3a
  421108:	xchg   esi,eax
  421109:	push   ds
  42110a:	inc    esi
  42110b:	cmp    edx,DWORD PTR [ecx-0x67]
  42110e:	mov    BYTE PTR [si+0x5a],bh
  421112:	pop    ds
  421113:	int3   
  421114:	sub    eax,0x40c3d920
  421119:	mov    ecx,0x548f195a
  42111e:	cbw    
  421120:	xchg   esp,eax
  421121:	sbb    ebp,DWORD PTR [esi-0x4a]
  421124:	jg     0x42111b
  421126:	adc    eax,0x795d787a
  42112b:	ins    BYTE PTR es:[edi],dx
  42112c:	bound  ebp,QWORD PTR ds:0xfbd6bc45
  421132:	xchg   esp,eax
  421133:	pop    edi
  421134:	lea    esi,[edi+0x6c]
  421137:	std    
  421138:	inc    esi
  421139:	push   ss
  42113a:	mov    ebp,0x12f1307f
  42113f:	jnp    0x4211a4
  421141:	std    
  421142:	sbb    esp,DWORD PTR [esi+0x54]
  421145:	cli    
  421146:	idiv   DWORD PTR [edi]
  421148:	adc    BYTE PTR [edx-0x6c],0x47
  42114c:	loop   0x4210fa
  42114e:	or     BYTE PTR [esi],0xcf
  421151:	jnp    0x421139
  421153:	(bad)  [edx]
  421155:	add    eax,0xc545cc11
  42115a:	iret   
  42115b:	sahf   
  42115c:	sbb    ebx,ebp
  42115e:	dec    edx
  42115f:	push   ebx
  421160:	mov    cs,WORD PTR [ebp-0x5ca277b0]
  421166:	call   0x568f2804
  42116b:	ret    
  42116c:	jne    0x4211a2
  42116e:	lock push 0x11
  421171:	pop    edx
  421172:	mov    bh,0x51
  421174:	js     0x42112c
  421176:	into   
  421177:	js     0x4211f3
  421179:	out    0xfc,eax
  42117b:	add    eax,0x4069600f
  421180:	aad    0x9f
  421182:	std    
  421183:	pusha  
  421184:	clc    
  421185:	loopne 0x421114
  421187:	sbb    DWORD PTR ds:0xaa13c94b,ecx
  42118d:	lock sub eax,0x972812e9
  421193:	and    al,0x48
  421195:	xor    eax,0xf35735f4
  42119a:	xchg   esp,eax
  42119b:	adc    DWORD PTR [eax],edi
  42119d:	ror    BYTE PTR [esi],0x4c
  4211a0:	int3   
  4211a1:	js     0x4211da
  4211a3:	js     0x421161
  4211a5:	sub    eax,DWORD PTR [ecx-0x4]
  4211a8:	mov    ds:0xa35e1731,al
  4211ad:	lods   eax,DWORD PTR ds:[esi]
  4211ae:	mov    ch,0x91
  4211b0:	enter  0x5e82,0xdc
  4211b4:	leave  
  4211b5:	mov    esp,0x8eeb11da
  4211ba:	stc    
  4211bb:	mov    DWORD PTR [eax-0x8],eax
  4211be:	dec    ebp
  4211bf:	fbstp  TBYTE PTR [ecx+0x63ed630b]
  4211c5:	dec    ebp
  4211c6:	or     edi,DWORD PTR [esi]
  4211c8:	jmp    0x421219
  4211ca:	(bad)  
  4211cb:	out    0x7f,eax
  4211cd:	xor    ebx,esi
  4211cf:	mov    ebp,0xf6e162d1
  4211d4:	test   BYTE PTR [ebx],0x74
  4211d7:	arpl   WORD PTR [esi+0xa59940f],ax
  4211dd:	inc    edx
  4211de:	or     eax,ebx
  4211e0:	(bad)  
  4211e1:	xchg   edx,eax
  4211e2:	push   ss
  4211e3:	test   DWORD PTR [eax+0x3c],edi
  4211e6:	adc    edx,ecx
  4211e8:	lods   eax,DWORD PTR ds:[esi]
  4211e9:	add    DWORD PTR [esi-0x66],eax
  4211ec:	push   es
  4211ed:	pusha  
  4211ee:	int3   
  4211ef:	ror    bl,1
  4211f1:	inc    eax
  4211f2:	pop    es
  4211f3:	xchg   ebx,edi
  4211f5:	cmp    BYTE PTR [esp+edi*2],cl
  4211f8:	mov    dl,0x8d
  4211fa:	into   
  4211fb:	xchg   ebx,eax
  4211fc:	cdq    
  4211fd:	sub    dl,BYTE PTR ds:0xa68087c2
  421203:	mov    edx,0x55c8513f
  421208:	mov    cl,0xe5
  42120a:	jne    0x421212
  42120c:	outs   dx,BYTE PTR ds:[esi]
  42120d:	adc    al,BYTE PTR ds:0xaa1250e1
  421213:	or     al,0x16
  421215:	enter  0xa05,0xc1
  421219:	dec    edx
  42121a:	aad    0xc6
  42121c:	pop    ebx
  42121d:	(bad)  
  42121e:	out    0x46,al
  421220:	jge    0x4211c5
  421222:	sar    BYTE PTR [ecx+eax*8+0x3b60910c],cl
  421229:	les    ebx,FWORD PTR [edx-0x34]
  42122c:	push   0x23
  42122e:	xchg   edx,eax
  42122f:	dec    BYTE PTR [ecx+0x6e]
  421232:	aam    0xb2
  421234:	inc    eax
  421235:	dec    esi
  421236:	fild   DWORD PTR [ecx+ebp*1-0x3fa8e226]
  42123d:	mov    edx,esi
  42123f:	push   ebp
  421240:	add    al,0xfd
  421242:	xchg   BYTE PTR [ecx],cl
  421244:	sar    ecx,1
  421246:	aad    0x19
  421248:	cmp    cl,BYTE PTR [edi-0x10676b07]
  42124e:	popa   
  42124f:	lods   al,BYTE PTR ds:[esi]
  421250:	mov    BYTE PTR [eax],dh
  421252:	sbb    al,0xc2
  421254:	imul   ebp,DWORD PTR [ebp-0x4d481979],0xc81ec099
  42125e:	jp     0x421249
  421260:	add    al,0xd7
  421262:	dec    ebx
  421263:	rol    bl,1
  421265:	xlat   BYTE PTR ds:[ebx]
  421266:	inc    edx
  421267:	inc    ecx
  421268:	in     eax,dx
  421269:	jg     0x421215
  42126b:	pop    ss
  42126c:	jnp    0x421247
  42126e:	adc    ebp,DWORD PTR [esi+0x13e98aa1]
  421274:	vorps  xmm1,xmm6,XMMWORD PTR [edi]
  421278:	out    0x55,al
  42127a:	and    edi,DWORD PTR [eax+0x12]
  42127d:	dec    edx
  42127e:	daa    
  42127f:	push   ebp
  421280:	(bad)  
  421281:	jb     0x4212d4
  421283:	push   ds
  421284:	inc    ebx
  421285:	pusha  
  421286:	fbstp  TBYTE PTR [eax+esi*1+0x10]
  42128a:	pop    es
  42128b:	push   es
  42128c:	xlat   BYTE PTR ds:[ebx]
  42128d:	lods   eax,DWORD PTR ds:[esi]
  42128e:	xchg   ebx,eax
  42128f:	cmp    ch,BYTE PTR [edx+0x49bdd7ce]
  421295:	pop    es
  421296:	xchg   esi,eax
  421297:	scas   al,BYTE PTR es:[edi]
  421298:	es jge 0x421226
  42129b:	mov    cl,0xfa
  42129d:	inc    esi
  42129f:	mov    ebp,0xf0014e80
  4212a4:	jo     0x421323
  4212a6:	push   ds
  4212a7:	xchg   ebx,eax
  4212a8:	imul   edx,DWORD PTR [edx+0xdcd3cd9],0xd922bf52
  4212b2:	jge    0x4212f6
  4212b4:	scas   al,BYTE PTR es:[edi]
  4212b5:	into   
  4212b6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4212b8:	adc    BYTE PTR [ecx+0x27],ch
  4212bb:	adc    bh,BYTE PTR [edi+0x24]
  4212be:	lods   eax,DWORD PTR ds:[esi]
  4212bf:	sub    eax,0x2df8a77e
  4212c4:	in     eax,dx
  4212c5:	dec    eax
  4212c6:	gs jnp 0x421309
  4212c9:	ret    
  4212ca:	sub    eax,0xc3dcb8d7
  4212cf:	mov    esp,0xb4a9e611
  4212d4:	pop    esp
  4212d5:	and    dl,BYTE PTR [ecx]
  4212d7:	pop    ss
  4212d8:	inc    ebp
  4212d9:	cmp    al,0x98
  4212db:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4212dd:	adc    eax,0xafadbd7f
  4212e2:	jmp    0x4212f3
  4212e4:	add    dh,BYTE PTR [edx+0x69a8b31b]
  4212ea:	adc    DWORD PTR [edx],ebp
  4212ec:	push   edx
  4212ed:	enter  0xf2d9,0x86
  4212f1:	sbb    al,0x7
  4212f3:	adc    ch,BYTE PTR [edx+esi*4-0x40db7af0]
  4212fa:	cmp    eax,0x31c257f6
  4212ff:	sbb    eax,0x20c420ee
  421304:	adc    BYTE PTR [edx+eiz*4-0x5d],bl
  421308:	push   ds
  421309:	nop
  42130a:	sbb    esp,0x59
  42130d:	xchg   edi,eax
  42130e:	pop    ebx
  42130f:	cmp    esp,DWORD PTR [ebx+0x5a]
  421312:	mov    ebx,0x4eb15432
  421317:	rol    BYTE PTR [edi-0x5d],1
  42131a:	test   DWORD PTR [eax-0x66],ebx
  42131d:	jg     0x421325
  42131f:	jno    0x4212d9
  421321:	or     esp,esi
  421323:	sbb    al,0x4d
  421325:	retf   0xb466
  421328:	test   BYTE PTR [edi],bl
  42132a:	cmp    al,ch
  42132c:	adc    ecx,edi
  42132e:	push   edi
  42132f:	add    BYTE PTR [di],0x65
  421333:	xchg   esp,eax
  421334:	pusha  
  421335:	sbb    ebx,ebx
  421337:	outs   dx,DWORD PTR ds:[esi]
  421338:	lea    ebp,[ebx-0x184afc5a]
  42133e:	mov    BYTE PTR [edi-0x64a3459f],bl
  421344:	call   0x92ccc6ab
  421349:	jnp    0x421310
  42134b:	mov    dl,ch
  42134d:	cwde   
  42134e:	add    DWORD PTR [eiz*2-0x40bad884],0xb7ba5a44
  421359:	jmp    0xac79f7cf
  42135e:	sub    DWORD PTR [ebx],ecx
  421360:	ret    0x8bb
  421363:	push   edi
  421364:	inc    ebp
  421365:	gs pop ebx
  421367:	dec    ebx
  421368:	test   al,0x69
  42136a:	jge    0x421314
  42136c:	adc    DWORD PTR [ebx],eax
  42136e:	das    
  42136f:	rol    DWORD PTR [ebx],1
  421371:	sbb    BYTE PTR [ebp+0xe],dl
  421374:	ds stos DWORD PTR es:[edi],eax
  421376:	sub    al,0xa1
  421378:	mov    bh,0xec
  42137a:	mov    ebx,DWORD PTR [ebp-0x6]
  42137d:	cmp    eax,0x9c91e0c5
  421382:	shl    DWORD PTR [esi],1
  421384:	inc    ebx
  421385:	mov    edx,0x3814e8b0
  42138a:	mov    bl,0xe4
  42138c:	xchg   ebx,eax
  42138d:	in     eax,dx
  42138e:	sti    
  42138f:	mov    ss,WORD PTR [esi+0x48]
  421392:	sahf   
  421393:	jp     0x4213d4
  421395:	xlat   BYTE PTR ds:[ebx]
  421396:	cmp    esi,DWORD PTR [ecx+0x5040fc30]
  42139c:	adc    bh,ah
  42139e:	mov    dh,bh
  4213a0:	js     0x421405
  4213a2:	pop    edx
  4213a3:	(bad)  
  4213a4:	dec    ebx
  4213a5:	rol    ecx,1
  4213a7:	push   esp
  4213a8:	sbb    BYTE PTR [esi+0x4c],dh
  4213ab:	push   eax
  4213ac:	test   DWORD PTR [edx],0xb94319b0
  4213b2:	stos   DWORD PTR es:[edi],eax
  4213b3:	mov    dl,BYTE PTR [ebx+0x27a7cf39]
  4213b9:	sub    al,0x3d
  4213bb:	or     edx,ecx
  4213bd:	loop   0x4213ed
  4213bf:	xor    eax,0xab493e2c
  4213c4:	pop    ecx
  4213c5:	stc    
  4213c6:	mov    esi,0x43bcb746
  4213cb:	push   esp
  4213cc:	sbb    BYTE PTR [ebp+0x26],0xc9
  4213d0:	sub    eax,0xdb83378e
  4213d5:	aam    0xfe
  4213d7:	dec    ebx
  4213d8:	mov    esp,0x4df71fed
  4213dd:	xchg   ebp,eax
  4213de:	jo     0x4213b9
  4213e0:	sbb    eax,0xefe54a62
  4213e5:	sub    eax,0x364d3388
  4213ea:	repz cmp BYTE PTR [eax-0x7],al
  4213ee:	and    edi,DWORD PTR ss:[esi-0xac375eb]
  4213f5:	push   0x20
  4213f7:	mov    ch,ch
  4213f9:	push   edx
  4213fa:	pop    edi
  4213fb:	push   DWORD PTR [esi]
  4213fd:	daa    
  4213fe:	pop    esp
  4213ff:	push   esi
  421400:	jns    0x421480
  421402:	loope  0x4213c3
  421404:	pop    edi
  421405:	cmp    eax,0xa4ba855b
  42140a:	sub    bh,BYTE PTR [eax-0x5274a5e0]
  421410:	or     BYTE PTR ds:0x4428bd2b,ch
  421416:	gs pushf 
  421418:	pop    edi
  421419:	ss or  eax,0xe644353
  42141f:	out    dx,eax
  421420:	xor    eax,edi
  421422:	pop    ebx
  421423:	jmp    DWORD PTR [esi+0x4877bd54]
  421429:	pop    ss
  42142a:	fimul  WORD PTR [edi+0x5c]
  42142d:	jg     0x42143e
  42142f:	push   cs
  421430:	jg     0x4213e9
  421432:	add    ebx,DWORD PTR [esi+0x116e8f2f]
  421438:	xchg   ebp,eax
  421439:	jns    0x42147a
  42143b:	inc    eax
  42143c:	jecxz  0x421491
  42143e:	retf   
  42143f:	jl     0x42147b
  421441:	addr16 ret 0x738e
  421445:	jnp    0x421436
  421447:	jg     0x42149f
  421449:	xchg   edi,eax
  42144a:	xor    BYTE PTR [ebx-0x1896df0],dh
  421450:	inc    ebx
  421451:	lods   eax,DWORD PTR ds:[esi]
  421452:	retf   0x1688
  421455:	shr    BYTE PTR [edx+edx*4],cl
  421458:	inc    eax
  421459:	ffreep st(7)
  42145b:	adc    esi,esp
  42145d:	mov    WORD PTR [ebp+eiz*4+0x1128efbe],gs
  421464:	adc    esp,DWORD PTR [ebx-0x47b12659]
  42146a:	fbstp  TBYTE PTR [ecx-0x14]
  42146d:	and    DWORD PTR [eax+0x50],esi
  421470:	xchg   DWORD PTR [edi+0x75],edx
  421473:	xchg   ebp,eax
  421474:	hlt    
  421475:	mov    bl,0x2e
  421477:	data16 std 
  421479:	jg     0x4214c4
  42147b:	test   BYTE PTR [eax+0x516ec8f6],0x13
  421482:	sub    DWORD PTR [esi+0x6bf30a2f],ebx
  421488:	repz jle 0x42143d
  42148b:	and    ebp,edx
  42148d:	arpl   WORD PTR [ecx-0x23],bp
  421490:	add    al,0x10
  421492:	sbb    ah,BYTE PTR [esi-0x22f07988]
  421498:	push   ebx
  421499:	fcmovb st,st(0)
  42149b:	push   ebp
  42149c:	jno    0x4214e6
  42149e:	repz jns 0x4214ea
  4214a1:	sbb    al,0xce
  4214a3:	retf   
  4214a4:	sub    ebp,ecx
  4214a6:	jbe    0x4214ee
  4214a8:	add    BYTE PTR [ebx+0x1c],0x20
  4214ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ad:	lahf   
  4214ae:	add    DWORD PTR [esi+0x66],edi
  4214b1:	and    BYTE PTR [ebp-0x7d],bl
  4214b4:	addr16 mov edx,0x1884bdbd
  4214ba:	mov    al,0xcf
  4214bc:	lods   eax,DWORD PTR ds:[esi]
  4214bd:	jbe    0x4214b2
  4214bf:	sbb    ah,bh
  4214c1:	retf   
  4214c2:	push   0xc
  4214c4:	xor    esp,DWORD PTR [ecx]
  4214c6:	loope  0x4214fd
  4214c8:	and    ah,ch
  4214ca:	jle    0x421530
  4214cc:	mov    al,0x3e
  4214ce:	lods   eax,DWORD PTR ds:[esi]
  4214cf:	pop    ds
  4214d0:	rol    edx,0x2
  4214d3:	inc    esi
  4214d4:	mov    al,0xc4
  4214d6:	dec    ebp
  4214d7:	mov    BYTE PTR [ebx+0x3c],cl
  4214da:	push   ebx
  4214db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214dc:	pop    ds
  4214dd:	push   ss
  4214de:	fsub   QWORD PTR [ecx-0x70]
  4214e1:	mov    ah,0xe3
  4214e3:	inc    eax
  4214e4:	jno    0x421520
  4214e6:	imul   esi,ebp,0xffffffac
  4214e9:	sbb    eax,0x39c66db6
  4214ee:	loope  0x42152a
  4214f0:	pop    edx
  4214f1:	sahf   
  4214f2:	loope  0x4214db
  4214f4:	ds dec esi
  4214f6:	mov    es,ecx
  4214f8:	cli    
  4214f9:	lds    esi,FWORD PTR [eax-0x1]
  4214fc:	and    DWORD PTR [esi-0x4371ee56],ebp
  421502:	sub    dh,BYTE PTR [edi-0x1a]
  421505:	pop    DWORD PTR [ecx-0x182ee2c5]
  42150b:	loopne 0x4214aa
  42150d:	neg    BYTE PTR [eax-0x24b05b5b]
  421513:	loopne 0x4214fc
  421515:	fiadd  DWORD PTR [eax-0x38d97852]
  42151b:	sub    ebx,ebx
  42151d:	rcl    BYTE PTR [ebp+0x43],cl
  421520:	lods   al,BYTE PTR ds:[esi]
  421521:	rcr    BYTE PTR ds:0x672a893a,0xd6
  421528:	sub    eax,0x2bee7f0a
  42152d:	daa    
  42152e:	mov    ch,BYTE PTR [ecx]
  421530:	push   ds
  421531:	push   ebp
  421532:	test   eax,0x9a0b566f
  421537:	mov    esi,0x5fa6183a
  42153c:	cmp    bl,al
  42153e:	retf   0xb29c
  421541:	mov    dh,0x4b
  421543:	or     DWORD PTR [ebp-0x6bdec22],ebp
  421549:	cli    
  42154a:	xor    bl,bh
  42154c:	aas    
  42154d:	xchg   BYTE PTR [edx],bh
  42154f:	rol    BYTE PTR [esi-0x3f],cl
  421552:	in     eax,dx
  421553:	xchg   edx,eax
  421554:	lods   al,BYTE PTR ds:[esi]
  421555:	out    dx,eax
  421556:	scas   al,BYTE PTR es:[edi]
  421557:	jns    0x4214e6
  421559:	jg     0x42157a
  42155b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42155c:	pop    edx
  42155d:	push   0x1c
  42155f:	adc    ah,dh
  421561:	mov    ah,0xea
  421563:	popa   
  421564:	pop    edi
  421565:	push   esi
  421566:	adc    DWORD PTR [ebp+0x6721f324],edi
  42156c:	(bad)  
  42156e:	loop   0x4215cd
  421570:	call   0xca96:0xa7e1641b
  421577:	pop    esp
  421578:	loop   0x4215d4
  42157a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42157b:	mov    al,ds:0x654da3fb
  421580:	dec    edx
  421581:	stos   BYTE PTR es:[edi],al
  421582:	addr16 in eax,0xd8
  421585:	pop    esp
  421586:	out    dx,eax
  421587:	scas   al,BYTE PTR es:[edi]
  421588:	jb     0x4215ae
  42158a:	in     al,dx
  42158b:	out    dx,al
  42158c:	pop    edi
  42158d:	ja     0x4215cd
  42158f:	je     0x421597
  421591:	out    dx,eax
  421592:	jge    0x421601
  421594:	pusha  
  421595:	push   cs
  421596:	sti    
  421597:	sub    bl,BYTE PTR [ebx+0xf]
  42159a:	push   edi
  42159b:	cmp    DWORD PTR [ebx+0x6076b245],ebx
  4215a1:	hlt    
  4215a2:	jmp    0xb6437176
  4215a7:	enter  0xe87f,0x9
  4215ab:	(bad)  
  4215ac:	mov    dh,0xf8
  4215ae:	jb     0x42160b
  4215b0:	loope  0x421541
  4215b2:	pop    esp
  4215b3:	mov    esp,0xc4f61fcf
  4215b8:	jno    0x421600
  4215ba:	pusha  
  4215bb:	stc    
  4215bc:	neg    DWORD PTR [esi]
  4215be:	ja     0x4215a4
  4215c0:	push   edx
  4215c1:	pop    ds
  4215c2:	push   ebx
  4215c3:	sti    
  4215c4:	and    DWORD PTR [edx],ebx
  4215c6:	popf   
  4215c7:	xchg   esi,eax
  4215c8:	icebp  
  4215c9:	fistp  QWORD PTR [ecx+0x3b8c2fb3]
  4215cf:	jns    0x4215eb
  4215d1:	dec    ebx
  4215d2:	stc    
  4215d3:	sub    eax,0xa94ee2a1
  4215d8:	jbe    0x421636
  4215da:	or     DWORD PTR [ecx-0x1],0x5e
  4215de:	pop    eax
  4215df:	inc    edx
  4215e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e1:	mov    edi,0xd15926bb
  4215e6:	fldcw  WORD PTR [eax+0x2e098eca]
  4215ec:	push   esp
  4215ed:	pavgb  mm3,QWORD PTR [eax+0x5f6c6e1b]
  4215f4:	out    dx,al
  4215f5:	and    DWORD PTR ds:0xbff6c657,eax
  4215fb:	std    
  4215fc:	and    eax,0x6f059952
  421601:	and    ah,BYTE PTR [ebp-0x7f104f7f]
  421607:	adc    al,0x28
  421609:	fs aas 
  42160b:	test   eax,0x579474da
  421610:	adc    al,0x30
  421612:	in     al,0x33
  421614:	cmp    eax,0x1e73b94f
  421619:	pop    ecx
  42161a:	scas   al,BYTE PTR es:[edi]
  42161b:	fiadd  DWORD PTR [edi]
  42161d:	xor    ecx,DWORD PTR [ebx-0x4fd0a5e5]
  421623:	xlat   BYTE PTR ds:[ebx]
  421624:	test   al,0xb
  421626:	sbb    dh,BYTE PTR [ecx+0x4e]
  421629:	dec    edi
  42162a:	xor    ecx,ebp
  42162c:	sbb    al,0xcc
  42162e:	xchg   ebp,eax
  42162f:	mov    cl,0x1d
  421631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421632:	int3   
  421633:	push   esi
  421634:	stos   BYTE PTR es:[edi],al
  421635:	push   edi
  421636:	fstp   QWORD PTR [esi+0x7]
  421639:	xchg   esp,eax
  42163a:	test   al,0x3a
  42163c:	imul   ebp,DWORD PTR [ecx+esi*2-0x61],0x8d14568a
  421644:	fs push ebp
  421646:	scas   al,BYTE PTR es:[edi]
  421647:	mov    ecx,0x5b45d35f
  42164c:	push   edi
  42164d:	aas    
  42164e:	(bad)  
  42164f:	iret   
  421650:	pop    ebp
  421651:	hlt    
  421652:	ins    DWORD PTR es:[edi],dx
  421653:	(bad)  
  421654:	adc    DWORD PTR [eax+ebx*2+0x4],ebp
  421658:	cmp    eax,0xf336f327
  42165d:	repz xor ah,bl
  421660:	pushf  
  421661:	repnz (bad) [edi-0x1825f67e]
  421668:	or     al,0x32
  42166a:	cmp    al,0x34
  42166c:	call   0x5e65:0x282bc38c
  421673:	push   DWORD PTR [eax+ebx*1]
  421676:	leave  
  421677:	adc    eax,0xf8a568de
  42167c:	popa   
  42167d:	push   cs
  42167e:	das    
  42167f:	popf   
  421680:	shl    DWORD PTR [edx],0x5
  421683:	xchg   ebx,eax
  421684:	lahf   
  421685:	repnz mov bl,0xd2
  421688:	dec    ebx
  421689:	sahf   
  42168a:	dec    ebx
  42168b:	push   edi
  42168c:	cmp    BYTE PTR [ebx],0xad
  42168f:	push   ds
  421690:	and    BYTE PTR [ecx+0x6b],bh
  421693:	inc    ebx
  421694:	(bad)  [edi]
  421696:	pop    ecx
  421697:	mov    es,WORD PTR [edi-0x58]
  42169a:	std    
  42169b:	stos   BYTE PTR es:[edi],al
  42169c:	test   eax,0x2e48fa30
  4216a1:	xchg   ebx,eax
  4216a2:	mov    dh,0x3c
  4216a4:	ret    0xf443
  4216a7:	rcl    BYTE PTR [edi],cl
  4216a9:	je     0x4216ed
  4216ab:	lahf   
  4216ac:	cli    
  4216ad:	lods   al,BYTE PTR ds:[esi]
  4216ae:	mov    eax,0x12cf9d2d
  4216b3:	pop    ss
  4216b4:	(bad)  
  4216b5:	out    0x7f,eax
  4216b7:	stc    
  4216b8:	or     ebx,ebx
  4216ba:	push   es
  4216bb:	jmp    0x2a79a50f
  4216c0:	jmp    0x4216ac
  4216c2:	out    0x79,al
  4216c4:	imul   eax,DWORD PTR [ebp+0x4133af4b],0x92c634a6
  4216ce:	outs   dx,BYTE PTR ds:[esi]
  4216cf:	jne    0x42173c
  4216d1:	sub    dl,BYTE PTR [edx]
  4216d3:	and    eax,0x3d23ef96
  4216d8:	sub    dh,dl
  4216da:	jl     0x4216e2
  4216dc:	pop    ds
  4216dd:	mov    ah,0x91
  4216df:	test   DWORD PTR [esi+0x3d8da4cc],0x43cf22d4
  4216e9:	xchg   esi,eax
  4216ea:	in     eax,dx
  4216eb:	inc    ebp
  4216ec:	pop    ebx
  4216ed:	lea    eax,[esi+0x42]
  4216f0:	icebp  
  4216f1:	push   0x14
  4216f3:	(bad)  
  4216f4:	(bad)  
  4216f5:	aaa    
  4216f6:	sbb    DWORD PTR [eax+ebp*2],ebx
  4216f9:	inc    ecx
  4216fa:	mov    cs,edx
  4216fc:	mov    bl,0xee
  4216fe:	pop    ds
  4216ff:	sar    al,0x6d
  421702:	dec    edx
  421703:	lea    ebx,fs:[ebp-0x3081b120]
  42170a:	ja     0x4216cb
  42170c:	sbb    DWORD PTR [ebx-0x16],ebx
  42170f:	mov    al,ds:0x3e3f4698
  421714:	jmp    0x9be8e836
  421719:	pop    ecx
  42171a:	mov    al,ds:0xac729c9
  42171f:	sbb    ecx,DWORD PTR [ecx-0x12eb7094]
  421725:	sbb    ch,BYTE PTR [edi+0x4f293409]
  42172b:	fdivr  DWORD PTR [ecx]
  42172d:	push   eax
  42172e:	iret   
  42172f:	stos   BYTE PTR es:[edi],al
  421730:	xchg   esp,eax
  421731:	je     0x421776
  421733:	dec    eax
  421734:	aaa    
  421735:	adc    DWORD PTR [ebx-0xbdb5842],0xebbf89b7
  42173f:	pop    es
  421740:	pop    ebx
  421741:	mov    esp,0x297f700b
  421746:	add    ecx,ebx
  421748:	(bad)  
  421749:	in     al,dx
  42174a:	pop    ebp
  42174b:	into   
  42174c:	cmp    BYTE PTR [edx+0x170cdfc8],cl
  421752:	repz or BYTE PTR [edx-0x609558a1],ah
  421759:	loope  0x421703
  42175b:	bound  eax,QWORD PTR ds:[edx+0x51afb5c4]
  421762:	outs   dx,BYTE PTR ds:[esi]
  421763:	fstp   TBYTE PTR [esi-0x3cfd5e2d]
  421769:	stc    
  42176a:	mov    ds:0xec0de32f,eax
  42176f:	jne    0x421738
  421771:	push   ebx
  421772:	push   0x53
  421774:	sub    DWORD PTR [edi+0x32],0xffffff9f
  421778:	and    BYTE PTR [esi+0x33],al
  42177b:	mov    al,ds:0x69c08c4d
  421780:	repz jne 0x421752
  421783:	add    al,0x55
  421785:	shl    DWORD PTR [ebx],0x5e
  421788:	and    DWORD PTR [edi-0x6],ecx
  42178b:	push   esi
  42178c:	popa   
  42178d:	push   eax
  42178e:	sub    BYTE PTR [eax-0x74],dh
  421791:	ret    
  421792:	lea    ebx,[edx-0x58]
  421795:	xor    ecx,DWORD PTR ss:[ecx+0x141a8d41]
  42179c:	retf   
  42179d:	jne    0x42178c
  42179f:	pop    edx
  4217a0:	stc    
  4217a1:	lea    ebp,[ebx-0x58a9adb9]
  4217a7:	xchg   edx,eax
  4217a8:	xchg   edi,eax
  4217a9:	jno    0x42180b
  4217ab:	repz fstp DWORD PTR [esi-0x37]
  4217af:	pop    ecx
  4217b0:	repnz xchg edx,eax
  4217b2:	sub    ah,BYTE PTR [esi-0x5f]
  4217b5:	icebp  
  4217b6:	ins    BYTE PTR es:[edi],dx
  4217b7:	lea    ebx,[eax]
  4217b9:	xchg   ebx,eax
  4217ba:	inc    edi
  4217bb:	add    eax,0x55c1176a
  4217c0:	loop   0x421785
  4217c2:	pop    esp
  4217c3:	(bad)  
  4217c4:	aaa    
  4217c5:	inc    esp
  4217c6:	not    edi
  4217c8:	pop    ebp
  4217c9:	test   DWORD PTR gs:[edx+0x67639bd],esi
  4217d0:	add    esi,DWORD PTR [edi+0x6f]
  4217d3:	pop    ecx
  4217d4:	mov    al,0x43
  4217d6:	mov    eax,0xa0e9802f
  4217db:	mov    ?,WORD PTR [ebp+0x53]
  4217de:	fild   QWORD PTR [ebp+0x4a]
  4217e1:	mov    ebx,0x726a58d2
  4217e6:	cmp    eax,0xb0197868
  4217eb:	add    BYTE PTR [edi-0x51fd8ee],al
  4217f1:	xor    eax,0x948f011e
  4217f6:	xor    edx,DWORD PTR [eax]
  4217f8:	lahf   
  4217f9:	cmp    esi,DWORD PTR [esi+0x5bf3ec50]
  4217ff:	inc    DWORD PTR [esi]
  421801:	dec    ebx
  421802:	xchg   ecx,eax
  421803:	or     eax,DWORD PTR [ebp+0x46a3e448]
  421809:	mov    cr4,edx
  42180c:	in     eax,dx
  42180d:	push   cs
  42180e:	bswap  ebx
  421810:	sub    al,0x9e
  421812:	sub    BYTE PTR [ecx+0x70baed34],bh
  421818:	out    0xa2,al
  42181a:	ficom  DWORD PTR [ebp+0x65]
  42181d:	dec    ebp
  42181e:	xor    ch,al
  421820:	and    al,0xf1
  421822:	or     ebp,ebp
  421824:	ins    DWORD PTR es:[edi],dx
  421825:	aam    0xac
  421827:	jg     0x42188f
  421829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42182a:	(bad)  
  42182b:	out    dx,eax
  42182c:	ret    0xacf3
  42182f:	push   esi
  421830:	or     ebx,ebx
  421832:	pop    edi
  421833:	sub    BYTE PTR [ecx+ebx*2],bh
  421836:	mov    esi,0xaabb2e74
  42183b:	jmp    0xfa4b5c82
  421840:	inc    ebx
  421841:	and    al,0x1f
  421843:	popf   
  421844:	or     bh,BYTE PTR [ebp-0x35]
  421847:	push   eax
  421848:	inc    edi
  421849:	scas   eax,DWORD PTR es:[edi]
  42184a:	and    esp,DWORD PTR [edx-0x11714632]
  421850:	mov    eax,0x34dd538b
  421855:	push   ebp
  421856:	mov    ebp,0x1b6904d
  42185b:	mov    ebx,0x3c3fc610
  421860:	push   edi
  421861:	mov    dl,0x9f
  421863:	lahf   
  421864:	int    0xf6
  421866:	lea    edx,[edi+0x70ee7131]
  42186c:	nop
  42186d:	imul   edx,DWORD PTR [esi],0x29
  421870:	mov    eax,ds:0xf6f62e2a
  421875:	bound  edx,QWORD PTR [esi-0x1625e1cd]
  42187b:	mov    bh,0xbe
  42187d:	nop
  42187e:	push   ebp
  42187f:	icebp  
  421880:	add    BYTE PTR [ebp+0x78],0x63
  421884:	or     ebx,0xec0be83c
  42188a:	scas   eax,DWORD PTR es:[edi]
  42188b:	in     al,0x85
  42188d:	inc    eax
  42188e:	dec    ecx
  42188f:	inc    eax
  421890:	add    BYTE PTR [esi+0x3b],0x52
  421894:	fidiv  WORD PTR [ebx+eiz*2-0x23d484c7]
  42189b:	jns    0x4218d0
  42189d:	xchg   ecx,eax
  42189e:	in     eax,dx
  42189f:	sbb    al,0xcc
  4218a1:	in     eax,dx
  4218a2:	dec    ebx
  4218a3:	mov    ds:0x2cd6bc38,al
  4218a8:	add    al,0x6f
  4218aa:	dec    ebp
  4218ab:	pop    edi
  4218ac:	jne    0x42185b
  4218ae:	call   FWORD PTR [ecx]
  4218b0:	sub    al,cl
  4218b2:	ret    
  4218b3:	inc    edi
  4218b4:	xchg   DWORD PTR [edx-0x3d1223b1],ebx
  4218ba:	push   ebx
  4218bb:	cmp    DWORD PTR [ecx],0xffffffee
  4218be:	int    0x82
  4218c0:	js     0x421895
  4218c2:	push   es
  4218c3:	(bad)  
  4218c4:	lods   al,BYTE PTR ds:[esi]
  4218c5:	in     al,0x97
  4218c7:	add    DWORD PTR [esp+ebx*2-0x2],eax
  4218cb:	sbb    eax,0x8ff3ddde
  4218d0:	stos   BYTE PTR es:[edi],al
  4218d1:	jg     0x4218ff
  4218d3:	out    0xb8,al
  4218d5:	sub    al,dl
  4218d7:	xor    DWORD PTR [ecx+0x4c],esp
  4218da:	push   ebp
  4218db:	jmp    0x36c76701
  4218e0:	xchg   ebp,eax
  4218e1:	mov    ah,0x9a
  4218e3:	and    ah,BYTE PTR [edx+0x72780bba]
  4218e9:	push   edx
  4218ea:	call   0x8068:0x2d63cc75
  4218f1:	mov    ah,0x17
  4218f3:	fadd   st(1),st
  4218f5:	push   ss
  4218f6:	sub    eax,0xf66beb13
  4218fb:	inc    ebp
  4218fc:	fiadd  DWORD PTR ds:0x45f828d8
  421902:	mov    eax,ds:0xdbe60462
  421907:	test   DWORD PTR [edi],0x99fa1144
  42190d:	pop    ebx
  42190e:	adc    DWORD PTR [ebp-0x49aef6f2],ebx
  421914:	call   0x53f0:0x7acc7eb
  42191b:	stc    
  42191c:	pop    edx
  42191d:	sbb    ecx,DWORD PTR [edx-0x783b51cd]
  421923:	inc    esi
  421924:	pop    ss
  421925:	mov    ch,0x38
  421927:	jg     0x421928
  421929:	xor    al,0x9b
  42192b:	jb     0x421996
  42192d:	lea    esi,[eax+ebp*1+0x1e]
  421931:	repnz push esi
  421933:	cmp    eax,esp
  421935:	sub    bl,bl
  421937:	rol    BYTE PTR [edi+0x57b905f4],cl
  42193d:	mov    al,0xbb
  42193f:	fwait
  421940:	(bad)  
  421941:	icebp  
  421942:	arpl   WORD PTR [ebx],bx
  421944:	jne    0x421909
  421946:	out    0x69,al
  421948:	imul   ecx,DWORD PTR [edx+edi*1+0x232c3fd5],0x45
  421950:	or     eax,0xe4315a6a
  421955:	cmp    eax,0xd3ebcc2a
  42195a:	pop    esi
  42195b:	div    al
  42195d:	pop    ebx
  42195e:	adc    DWORD PTR [ebp+0x307e72ca],0x28
  421965:	jns    0x421959
  421967:	mov    eax,0x93697522
  42196c:	mov    al,ds:0x160dba94
  421971:	rol    DWORD PTR [eax],cl
  421973:	sbb    bl,BYTE PTR [edx-0x2d]
  421976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421977:	mov    dh,al
  421979:	stos   DWORD PTR es:[edi],eax
  42197a:	stos   BYTE PTR es:[edi],al
  42197b:	pop    ds
  42197c:	xchg   BYTE PTR [ecx-0x1630853b],al
  421982:	mov    esp,0x50df3fc4
  421987:	lock inc ecx
  421989:	arpl   WORD PTR [ebx+edi*4],ax
  42198c:	and    BYTE PTR [ecx],0x47
  42198f:	nop
  421990:	push   cs
  421991:	mov    bl,BYTE PTR [eax-0x24751dfe]
  421997:	dec    edx
  421998:	jp     0x42191f
  42199a:	inc    eax
  42199b:	dec    BYTE PTR [edi-0x10]
  42199e:	and    DWORD PTR [ebp+ecx*1-0x576efa7b],0x558cf0ce
  4219a9:	fwait
  4219aa:	pop    eax
  4219ab:	into   
  4219ac:	enter  0x9d48,0x5d
  4219b0:	cmp    edi,edx
  4219b2:	stos   DWORD PTR es:[edi],eax
  4219b3:	inc    esp
  4219b4:	lock stos WORD PTR es:[edi],ax
  4219b7:	mov    dl,0xa2
  4219b9:	or     ebx,DWORD PTR [ebx]
  4219bb:	and    ch,BYTE PTR [edx]
  4219bd:	mov    bl,0xe6
  4219bf:	stos   DWORD PTR es:[edi],eax
  4219c0:	dec    edi
  4219c1:	js     0x42199e
  4219c3:	jmp    0xd890:0x8c2b79ee
  4219ca:	adc    al,0xf0
  4219cc:	lea    esp,[esi]
  4219ce:	(bad)  
  4219cf:	xchg   ebp,eax
  4219d0:	push   DWORD PTR [edx-0x1d]
  4219d3:	imul   esp,DWORD PTR [ecx-0x34],0xae6dc548
  4219da:	into   
  4219db:	xchg   ebp,eax
  4219dc:	jmp    0xf0c6:0xbdafe25c
  4219e3:	adc    cl,BYTE PTR [ecx+0x41]
  4219e6:	inc    ebx
  4219e7:	cli    
  4219e8:	sbb    DWORD PTR [ecx],ebx
  4219ea:	xchg   ebp,eax
  4219eb:	retf   
  4219ec:	xchg   esi,eax
  4219ed:	inc    ebx
  4219ee:	fucomp st(6)
  4219f0:	out    dx,al
  4219f1:	lods   al,BYTE PTR ds:[esi]
  4219f2:	cmp    DWORD PTR [edi-0x5d8a4b7c],0x39
  4219f9:	and    al,0xf4
  4219fb:	ds in  eax,dx
  4219fd:	and    DWORD PTR [edi],edx
  4219ff:	inc    eax
  421a00:	sub    eax,0x806e092e
  421a05:	jmp    0xd61:0xcd88a73c
  421a0c:	sahf   
  421a0d:	out    dx,al
  421a0e:	push   edx
  421a0f:	push   ss
  421a10:	push   ebx
  421a11:	sahf   
  421a12:	pushf  
  421a13:	sbb    BYTE PTR [esi],ch
  421a15:	ret    0xf3bb
  421a18:	test   DWORD PTR [edx-0x504052af],edi
  421a1e:	sbb    ecx,DWORD PTR [eax+ecx*4]
  421a21:	loopne 0x421a9f
  421a23:	sbb    dl,cl
  421a25:	sti    
  421a26:	mov    al,ds:0x607400f8
  421a2b:	into   
  421a2c:	popa   
  421a2d:	pop    ss
  421a2e:	je     0x421aa3
  421a30:	retf   0xbca5
  421a33:	lds    edi,FWORD PTR [edi]
  421a35:	popf   
  421a36:	mov    bl,BYTE PTR [ebp-0x487f2511]
  421a3c:	jge    0x421a08
  421a3e:	enter  0x4d7,0xd2
  421a42:	push   ds
  421a43:	inc    esi
  421a44:	jmp    0x4219e4
  421a46:	in     eax,dx
  421a47:	test   BYTE PTR [eax-0x23611762],0x89
  421a4e:	xchg   edi,eax
  421a4f:	adc    al,0x3b
  421a51:	or     ecx,ebx
  421a53:	call   DWORD PTR [ecx]
  421a55:	es das 
  421a57:	dec    ecx
  421a58:	mov    esp,0x1f227928
  421a5d:	and    ebp,DWORD PTR [esi]
  421a5f:	(bad)  
  421a60:	sbb    ecx,DWORD PTR [edx-0x1d]
  421a63:	(bad)  
  421a64:	and    DWORD PTR [edi],eax
  421a66:	or     eax,DWORD PTR [edi-0x2c12ea31]
  421a6c:	clc    
  421a6d:	adc    eax,0x5398efa6
  421a72:	xchg   esi,eax
  421a73:	or     BYTE PTR [ebx],bh
  421a75:	mov    al,ds:0xe9a50d88
  421a7a:	popf   
  421a7b:	int3   
  421a7c:	(bad)  
  421a7d:	and    esi,DWORD PTR [ecx]
  421a7f:	push   0x83f7c083
  421a84:	push   ds
  421a85:	pop    ss
  421a86:	cmp    DWORD PTR [eax+0x37e7175a],ecx
  421a8c:	xchg   DWORD PTR [edi+0x5bb7694f],ebp
  421a92:	push   0x75
  421a94:	jnp    0x421a50
  421a96:	fcmovb st,st(2)
  421a98:	xor    al,BYTE PTR [eax]
  421a9a:	and    DWORD PTR [eax],0x87eb5e1b
  421aa0:	pop    ebp
  421aa2:	jl     0x421af1
  421aa4:	cdq    
  421aa5:	xchg   edx,eax
  421aa6:	adc    eax,esp
  421aa8:	call   DWORD PTR [eax+0x7964d523]
  421aae:	jmp    0x421a6c
  421ab0:	jecxz  0x421a48
  421ab2:	adc    eax,0xc448c8c6
  421ab7:	jne    0x421a9e
  421ab9:	outs   dx,DWORD PTR ds:[esi]
  421aba:	push   ebp
  421abb:	(bad)  
  421abc:	fsubrp st(7),st
  421abe:	mov    dh,0xf6
  421ac0:	add    bh,BYTE PTR [eax]
  421ac2:	xor    ecx,esi
  421ac4:	test   eax,0x845c4922
  421ac9:	shr    DWORD PTR [ebp-0x34],1
  421acc:	loope  0x421a8e
  421ace:	out    0xcb,al
  421ad0:	ja     0x421a81
  421ad2:	push   edx
  421ad3:	jo     0x421b52
  421ad5:	fnstenv [edi+edx*4-0x7e]
  421ad9:	push   esi
  421ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421adb:	rol    BYTE PTR [ebp+edx*1-0x57],0xc4
  421ae0:	test   ch,dl
  421ae2:	mov    edi,0x5fb772e8
  421ae7:	imul   DWORD PTR [ebx]
  421ae9:	push   esi
  421aea:	dec    edi
  421aeb:	sub    DWORD PTR ds:0x42687c71,ebp
  421af1:	out    0xc9,al
  421af3:	imul   edi,DWORD PTR [esi-0x177e2904],0xffffffca
  421afa:	into   
  421afb:	out    0xc9,al
  421afd:	jb     0x421b20
  421aff:	pop    ds
  421b00:	mov    edi,0x5a85d15f
  421b05:	push   edx
  421b06:	test   DWORD PTR [ebx+0x57],ebx
  421b09:	iret   
  421b0a:	fs scas al,BYTE PTR es:[edi]
  421b0c:	ss xor dl,dl
  421b0f:	loopne 0x421b03
  421b11:	clc    
  421b12:	mov    eax,esi
  421b14:	(bad)  [ecx-0x58]
  421b17:	mov    ebx,DWORD PTR [ecx+0x6b]
  421b1a:	fwait
  421b1b:	dec    edx
  421b1c:	scas   eax,DWORD PTR es:[edi]
  421b1d:	sbb    DWORD PTR ds:0xa1d21599,edx
  421b23:	push   edi
  421b24:	or     bl,dh
  421b26:	mov    ds:0xc407e42d,eax
  421b2b:	xchg   ebp,eax
  421b2c:	stos   BYTE PTR es:[edi],al
  421b2d:	cmp    dh,0xe5
  421b30:	dec    ebp
  421b31:	mov    bl,0x0
  421b33:	aaa    
  421b34:	mov    esi,0x9f597545
  421b39:	sub    bh,0x6a
  421b3c:	pop    esi
  421b3d:	add    al,0x6f
  421b3f:	adc    ah,BYTE PTR ds:0xa0d1ac85
  421b45:	test   BYTE PTR [edi-0x268d8e7a],0x7c
  421b4c:	lods   al,BYTE PTR ds:[esi]
  421b4d:	imul   ecx
  421b4f:	xor    BYTE PTR [edx+0x68b83364],cl
  421b55:	outs   dx,BYTE PTR ds:[esi]
  421b56:	mov    ebp,0x19d69776
  421b5b:	jbe    0x421b13
  421b5d:	(bad)  
  421b5e:	out    dx,al
  421b5f:	sub    DWORD PTR [edi],edx
  421b61:	inc    ebp
  421b62:	push   0xffffff8b
  421b64:	sub    eax,0xa8cfb91a
  421b69:	or     eax,0x86195537
  421b6e:	mov    edx,DWORD PTR [edx-0x270e45da]
  421b74:	ins    BYTE PTR es:[edi],dx
  421b75:	push   ebx
  421b76:	shl    BYTE PTR [esi+0x77],cl
  421b79:	int3   
  421b7a:	(bad)  
  421b7b:	sub    esp,DWORD PTR [ecx+0x76]
  421b7e:	in     al,dx
  421b7f:	mov    ds:0x73e40e66,eax
  421b84:	idiv   eax
  421b86:	lods   eax,DWORD PTR ds:[esi]
  421b87:	imul   ebx,esi,0x76
  421b8a:	je     0x421c05
  421b8c:	lock xor eax,ebx
  421b8f:	stc    
  421b90:	inc    eax
  421b91:	sbb    BYTE PTR [ebx+0x3d8971e5],0x49
  421b98:	mov    ebx,0x1845c4b9
  421b9d:	and    eax,0x200879ea
  421ba2:	pop    edi
  421ba3:	adc    eax,0x3fce68c8
  421ba8:	lahf   
  421ba9:	mov    bl,0x24
  421bab:	ins    DWORD PTR es:[edi],dx
  421bac:	mov    edx,0x307f9134
  421bb1:	dec    esi
  421bb2:	mov    cl,0xad
  421bb4:	mov    eax,0xcb4afdaf
  421bb9:	add    eax,0x98d61949
  421bbe:	pop    ebx
  421bbf:	push   ss
  421bc0:	rcr    BYTE PTR [ebx],0x36
  421bc3:	fs nop
  421bc5:	lds    ebp,FWORD PTR [edx]
  421bc7:	rol    DWORD PTR [esi],0x5a
  421bca:	lock sub eax,ebx
  421bcd:	mov    eax,0x648e28db
  421bd2:	mov    al,ds:0x8927a875
  421bd7:	and    ah,BYTE PTR [eax+ebp*1-0x73facad3]
  421bde:	std    
  421bdf:	(bad)  
  421be0:	out    dx,al
  421be1:	rcl    DWORD PTR es:[eax],0xd9
  421be5:	scas   eax,DWORD PTR es:[edi]
  421be6:	add    DWORD PTR ds:0xec6c9213,0x78
  421bed:	adc    DWORD PTR [ecx],ebp
  421bef:	mov    ch,0xfd
  421bf1:	mov    eax,DWORD PTR [edi+0x367a747]
  421bf7:	lahf   
  421bf8:	lock sbb ah,dl
  421bfb:	ins    BYTE PTR es:[edi],dx
  421bfc:	sub    esi,ebp
  421bfe:	inc    esi
  421bff:	ja     0x421c73
  421c01:	jae    0x421c10
  421c03:	fsub   QWORD PTR [ecx-0x1de127fb]
  421c09:	sahf   
  421c0a:	adc    DWORD PTR [edx],eax
  421c0c:	aas    
  421c0d:	in     al,dx
  421c0e:	mov    eax,0xbd920025
  421c13:	sbb    esi,DWORD PTR [edx-0x57]
  421c16:	test   cl,dh
  421c18:	adc    al,0x85
  421c1a:	sub    edx,ecx
  421c1c:	cmp    al,BYTE PTR [esp]
  421c1f:	sti    
  421c20:	jl     0x421c8e
  421c22:	sbb    DWORD PTR [ecx-0x64cc4856],ebp
  421c28:	jmp    0x421c30
  421c2a:	add    DWORD PTR [ebx+0x45],ecx
  421c2d:	mov    dh,0xdf
  421c2f:	push   edi
  421c30:	out    dx,eax
  421c31:	pop    esp
  421c32:	aaa    
  421c33:	xor    DWORD PTR [esi],esi
  421c35:	das    
  421c36:	popa   
  421c37:	stos   DWORD PTR es:[edi],eax
  421c38:	iret   
  421c39:	and    DWORD PTR [eax+0x1ab45ac7],eax
  421c3f:	outs   dx,DWORD PTR ds:[esi]
  421c40:	retf   
  421c41:	push   esi
  421c42:	push   ebx
  421c43:	imul   esi,DWORD PTR [esi],0x2efb12d0
  421c49:	push   es
  421c4a:	xchg   ebx,eax
  421c4b:	jo     0x421c8c
  421c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c4e:	sbb    al,0x56
  421c50:	push   esi
  421c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c52:	xchg   esi,eax
  421c53:	rcl    DWORD PTR [edx+0x18],0xcd
  421c57:	arpl   bp,di
  421c59:	(bad)  
  421c5a:	sub    eax,0x3a43513c
  421c5f:	in     al,0xaf
  421c61:	mov    esi,0x595c19f5
  421c66:	lods   al,BYTE PTR ds:[esi]
  421c67:	pop    edi
  421c68:	scas   al,BYTE PTR es:[edi]
  421c69:	test   al,0xc2
  421c6b:	fist   WORD PTR [edi+0x34eeb95a]
  421c71:	cli    
  421c72:	mov    dl,0x97
  421c74:	push   es
  421c75:	pop    esp
  421c76:	stos   DWORD PTR es:[edi],eax
  421c77:	repnz mov ebp,0x93643526
  421c7d:	sbb    al,bh
  421c7f:	outs   dx,DWORD PTR ds:[esi]
  421c80:	mov    WORD PTR [edi],cs
  421c82:	cmp    eax,0x25d35855
  421c87:	push   0xe4a8825
  421c8c:	mov    al,BYTE PTR [ebx-0x12]
  421c8f:	adc    BYTE PTR [edx],dh
  421c91:	and    DWORD PTR ss:[edx],ecx
  421c94:	mov    ebx,0x4c2704d6
  421c99:	lds    esi,FWORD PTR [esi+0x1c]
  421c9c:	call   0x1cae914b
  421ca1:	test   dh,ah
  421ca3:	sub    ebx,eax
  421ca5:	mov    ds:0x631d3273,al
  421caa:	xor    eax,0x9478cef8
  421caf:	lock ret 
  421cb1:	sub    dh,BYTE PTR [eax+ebx*4]
  421cb4:	inc    ecx
  421cb5:	pop    esp
  421cb6:	pusha  
  421cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421cb8:	call   0xe326:0x7f774c44
  421cbf:	daa    
  421cc0:	mov    ecx,ss
  421cc2:	mov    esp,DWORD PTR [ebp-0x14]
  421cc5:	popf   
  421cc6:	repnz in al,0xa5
  421cc9:	add    al,0xc6
  421ccb:	mov    al,ds:0xa5719b6
  421cd0:	push   edx
  421cd1:	repnz adc eax,0x33d94d40
  421cd7:	jns    0x421c5c
  421cd9:	les    edx,FWORD PTR [ecx]
  421cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cdc:	(bad)  
  421cdd:	mov    cl,0xb4
  421cdf:	jl     0x421ca4
  421ce1:	pop    es
  421ce2:	inc    edx
  421ce3:	pop    edx
  421ce4:	xor    ebx,DWORD PTR [edi+0x1f88aa2e]
  421cea:	int3   
  421ceb:	call   0xbb57:0x11b22212
  421cf2:	(bad)
  421cf5:	btr    DWORD PTR [ecx+0x152eaf2a],esp
  421cfc:	(bad)  
  421cfd:	repnz xor eax,0xe4e32005
  421d03:	sbb    DWORD PTR [ebx],ecx
  421d05:	mov    WORD PTR [edx],es
  421d07:	out    dx,al
  421d08:	mov    ebx,0xa891393d
  421d0d:	dec    eax
  421d0e:	popa   
  421d0f:	data16 (bad) 
  421d11:	push   ecx
  421d12:	lock outs dx,BYTE PTR ds:[esi]
  421d14:	jo     0x421d07
  421d16:	mov    eax,ds:0x267f81b3
  421d1b:	adc    BYTE PTR ds:0x2275d1ed,ch
  421d21:	jmp    0x421d3d
  421d23:	mov    eax,ds:0x9a544e16
  421d28:	inc    ecx
  421d29:	clc    
  421d2a:	js     0x421d22
  421d2c:	push   0x23
  421d2e:	mov    al,0xc7
  421d30:	out    dx,eax
  421d31:	mov    edi,0x1f05d102
  421d36:	je     0x421d95
  421d38:	pop    ecx
  421d39:	popf   
  421d3a:	jp     0x421ce9
  421d3c:	push   ss
  421d3d:	cmp    DWORD PTR [ebx],ecx
  421d3f:	mov    esi,DWORD PTR [eax-0x1c]
  421d42:	cmp    bh,BYTE PTR [edi+esi*8-0xb113a14]
  421d49:	adc    edi,DWORD PTR [edi+0x2c]
  421d4c:	fcomp  QWORD PTR [esi]
  421d4e:	out    0xea,al
  421d50:	mov    es,ebp
  421d52:	mov    dl,0xe9
  421d54:	inc    ebx
  421d55:	ror    DWORD PTR [esi],0x20
  421d58:	adc    al,0xfb
  421d5a:	add    DWORD PTR [ecx-0x77],edi
  421d5d:	adc    dh,BYTE PTR [eax-0x7]
  421d60:	cmp    esi,DWORD PTR [edx+0x57]
  421d63:	cs pop esi
  421d65:	popa   
  421d66:	dec    esi
  421d67:	cmp    dh,dl
  421d69:	cmc    
  421d6a:	jnp    0x421d9b
  421d6c:	mov    WORD PTR [ecx+0x665b1aad],fs
  421d72:	mov    edx,DWORD PTR [ecx]
  421d74:	push   edi
  421d75:	popf   
  421d76:	lock les edi,FWORD PTR [edi]
  421d79:	test   eax,0x69fbbb9
  421d7e:	not    ebp
  421d80:	dec    ecx
  421d81:	jge    0x421d26
  421d83:	fisub  WORD PTR [ecx-0xc]
  421d86:	jns    0x421db1
  421d88:	mov    esi,DWORD PTR [eax-0x1b]
  421d8b:	cmp    ebx,DWORD PTR [ebx+0x6f7c5538]
  421d91:	fsub   QWORD PTR ss:[esi+0x7c]
  421d95:	bnd jge 0x421df7
  421d98:	jecxz  0x421de4
  421d9a:	dec    ebp
  421d9b:	(bad)  
  421d9d:	rol    ebp,1
  421d9f:	mov    dl,0x9d
  421da1:	jmp    0x4e08d5ab
  421da6:	pop    eax
  421da7:	sbb    eax,0xf4466aab
  421dac:	sbb    BYTE PTR [edx+ebp*2-0xa],0x61
  421db1:	mov    edx,0x1bbd1ebd
  421db6:	push   0x1a
  421db8:	lahf   
  421db9:	(bad)  
  421dbb:	add    al,bl
  421dbd:	push   eax
  421dbe:	inc    edi
  421dbf:	inc    esp
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc2:	push   eax
  421dc3:	bound  ecx,QWORD PTR [ebx+ebx*4+0x58]
  421dc7:	inc    ebp
  421dc8:	lock jne 0x421e18
  421dcb:	lds    esi,FWORD PTR [ebx+0x23c08a91]
  421dd1:	sbb    eax,0xbf92e4c5
  421dd6:	(bad)  
  421dd8:	push   ds
  421dd9:	hlt    
  421dda:	push   ebx
  421ddb:	popf   
  421ddc:	push   es
  421ddd:	inc    esi
  421dde:	push   DWORD PTR [edx-0x25e89389]
  421de4:	sbb    al,0x50
  421de6:	mov    WORD PTR [edi],es
  421de8:	shl    DWORD PTR [ecx],0x7b
  421deb:	stos   DWORD PTR es:[edi],eax
  421dec:	nop
  421ded:	loopne 0x421d95
  421def:	jle    0x421e1d
  421df1:	pop    ecx
  421df2:	outs   dx,DWORD PTR ds:[esi]
  421df3:	fadd   QWORD PTR [ecx+0x30a8cb8]
  421df9:	adc    ah,BYTE PTR [eax-0x690c3bc2]
  421dff:	xchg   ecx,eax
  421e00:	cld    
  421e01:	scas   al,BYTE PTR es:[edi]
  421e02:	icebp  
  421e03:	in     al,dx
  421e04:	sahf   
  421e05:	test   DWORD PTR [eax-0x55],edx
  421e08:	add    edi,DWORD PTR [ebx+edi*1]
  421e0b:	inc    ebx
  421e0c:	pushf  
  421e0d:	push   cs
  421e0e:	test   DWORD PTR [ebp-0x50],0x8f564420
  421e15:	js     0x421d9d
  421e17:	leave  
  421e18:	in     eax,0x82
  421e1a:	test   BYTE PTR [eax+eax*8+0x72c8037b],bl
  421e21:	(bad)  
  421e22:	jl     0x421e2f
  421e24:	jo     0x421dab
  421e26:	fistp  QWORD PTR [ecx-0x58700648]
  421e2c:	aas    
  421e2d:	int3   
  421e2e:	scas   al,BYTE PTR es:[edi]
  421e2f:	jl     0x421dc8
  421e31:	pusha  
  421e32:	in     al,dx
  421e33:	dec    ebp
  421e34:	jne    0x421e0b
  421e36:	or     eax,DWORD PTR [eax-0x30]
  421e39:	inc    ecx
  421e3a:	dec    esp
  421e3b:	and    ebx,edi
  421e3d:	shl    DWORD PTR [esi-0x5a620e55],0x5a
  421e44:	(bad)  
  421e45:	push   ss
  421e46:	mov    ecx,0x462eebf0
  421e4b:	lods   al,BYTE PTR ds:[esi]
  421e4c:	aam    0x94
  421e4e:	inc    ebp
  421e4f:	mov    bh,0xff
  421e51:	sbb    BYTE PTR [edi+0x7631596b],dh
  421e57:	in     al,dx
  421e58:	stc    
  421e59:	aas    
  421e5a:	cmc    
  421e5b:	scas   eax,DWORD PTR es:[edi]
  421e5c:	int3   
  421e5d:	in     eax,dx
  421e5e:	jo     0x421ece
  421e60:	sub    DWORD PTR [ebx+0x37675ee7],0x17
  421e67:	inc    eax
  421e68:	aam    0xf1
  421e6a:	adc    DWORD PTR [edx-0x4ef326f6],ecx
  421e70:	fst    DWORD PTR [eax-0x19]
  421e73:	jle    0x421e0e
  421e75:	in     eax,dx
  421e76:	adc    BYTE PTR [esi+ebx*4],ah
  421e79:	out    0xb0,eax
  421e7b:	dec    edi
  421e7c:	fidivr DWORD PTR [edx]
  421e7e:	add    DWORD PTR [edi],0xc686377f
  421e84:	rol    cl,0x10
  421e87:	or     BYTE PTR [ebx+edx*1+0x7dcfa6a7],ah
  421e8e:	xchg   edx,eax
  421e8f:	ds pop esp
  421e91:	or     al,0x73
  421e93:	ins    DWORD PTR es:[edi],dx
  421e94:	repnz bound ebx,QWORD PTR [esi]
  421e97:	sbb    al,0x20
  421e99:	adc    al,0x8e
  421e9b:	mov    DWORD PTR [edi+0x8a13c97],edx
  421ea1:	sbb    DWORD PTR [eax],ebx
  421ea3:	dec    ebx
  421ea4:	cld    
  421ea5:	pop    ebp
  421ea6:	dec    ecx
  421ea7:	lods   al,BYTE PTR ds:[esi]
  421ea8:	add    esp,eax
  421eaa:	mov    edi,0xcfed2f4c
  421eaf:	aad    0x50
  421eb1:	pop    esp
  421eb2:	outs   dx,DWORD PTR gs:[esi]
  421eb4:	mov    ch,0xba
  421eb6:	pop    eax
  421eb7:	nop
  421eb8:	jp     0x421ef2
  421eba:	mov    eax,0x33d34f39
  421ebf:	loopne 0x421e48
  421ec1:	inc    edi
  421ec2:	rol    bl,cl
  421ec4:	nop
  421ec5:	sbb    al,0xf8
  421ec7:	fdiv   DWORD PTR [edi+0x74e3507c]
  421ecd:	cli    
  421ece:	fs sar bh,0x9c
  421ed2:	iret   
  421ed3:	xor    eax,0x4b313615
  421ed8:	xor    DWORD PTR [edx+0x37],0xc24343a5
  421edf:	mov    dl,0x86
  421ee1:	neg    ebx
  421ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ee4:	pop    es
  421ee5:	pop    edi
  421ee6:	int3   
  421ee7:	in     al,0x41
  421ee9:	jecxz  0x421ef3
  421eeb:	and    DWORD PTR [edi+0x6787eb3],ebp
  421ef1:	stos   DWORD PTR es:[edi],eax
  421ef2:	les    edx,FWORD PTR [edx-0x598239d5]
  421ef8:	ds xchg ecx,eax
  421efa:	or     ch,BYTE PTR [esi+0x79]
  421efd:	cmp    BYTE PTR [esi+0x4f843ea2],bl
  421f03:	adc    eax,ebp
  421f05:	adc    al,0x95
  421f07:	ret    
  421f08:	loop   0x421eb5
  421f0a:	jb     0x421ea4
  421f0c:	retf   0x889
  421f0f:	push   cs
  421f10:	sbb    al,0xb7
  421f12:	sbb    eax,0xc18f9a72
  421f17:	(bad)  
  421f18:	jge    0x421f6a
  421f1a:	les    esi,FWORD PTR [eax+0x17]
  421f1d:	sub    dl,BYTE PTR [esi]
  421f1f:	cwde   
  421f20:	loopne 0x421ecf
  421f22:	inc    edi
  421f23:	and    DWORD PTR [esi+0x72cdec7d],ecx
  421f29:	int3   
  421f2a:	scas   eax,DWORD PTR es:[edi]
  421f2b:	dec    eax
  421f2c:	shl    ch,cl
  421f2e:	jmp    0xecee7a16
  421f33:	xchg   esi,eax
  421f34:	scas   eax,DWORD PTR es:[edi]
  421f35:	xchg   DWORD PTR [ecx-0x2a],edi
  421f38:	dec    ebx
  421f39:	fs in  al,dx
  421f3b:	push   ebp
  421f3c:	jp     0x421fba
  421f3e:	call   FWORD PTR [edx+0x20c85f53]
  421f44:	add    eax,0x69f06cc
  421f49:	pop    esi
  421f4a:	aaa    
  421f4b:	mov    BYTE PTR [ebx-0x38],bh
  421f4e:	inc    eax
  421f4f:	and    al,0x81
  421f51:	lods   eax,DWORD PTR ds:[esi]
  421f52:	jno    0x421f0b
  421f54:	rcr    dh,cl
  421f56:	cmp    DWORD PTR [edx+0x55091713],eax
  421f5c:	pop    esp
  421f5d:	adc    eax,DWORD PTR [ecx+edi*8-0x7f8133c5]
  421f64:	ss mov esi,0x2504ef05
  421f6a:	xor    BYTE PTR [esi+0x27],ah
  421f6d:	and    BYTE PTR [edx],0x2a
  421f70:	adc    al,0xd1
  421f72:	ins    DWORD PTR es:[edi],dx
  421f73:	stos   BYTE PTR es:[edi],al
  421f74:	push   ss
  421f75:	and    esp,edx
  421f77:	jne    0x421f42
  421f79:	jl     0x421f3e
  421f7b:	and    eax,0x6de1fd97
  421f80:	push   esi
  421f81:	(bad)  
  421f82:	xchg   esp,eax
  421f83:	imul   edx,DWORD PTR [edx+0x16],0xe
  421f87:	xchg   esp,eax
  421f88:	jge    0x421ff2
  421f8a:	pop    esi
  421f8b:	xlat   BYTE PTR ds:[ebx]
  421f8c:	adc    DWORD PTR [edx-0x61d1fc00],0x4faa9c17
  421f96:	push   0xffffffae
  421f98:	push   es
  421f99:	pop    ss
  421f9a:	(bad)  
  421f9b:	loop   0x421fcf
  421f9d:	sbb    bh,BYTE PTR [edi-0x79e3ec00]
  421fa3:	jmp    0x6baf4e58
  421fa8:	hlt    
  421fa9:	das    
  421faa:	sub    bl,BYTE PTR [ebx+ebp*2-0xd24cc91]
  421fb1:	mov    BYTE PTR [edi-0x31],cl
  421fb4:	int3   
  421fb5:	adc    bh,0x43
  421fb8:	dec    edx
  421fb9:	mov    bl,0xe0
  421fbb:	leave  
  421fbc:	cmp    ecx,DWORD PTR [ebx+0x31ae62fd]
  421fc2:	gs cmc 
  421fc4:	das    
  421fc5:	pushf  
  421fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc7:	cdq    
  421fc8:	xchg   edi,eax
  421fc9:	in     eax,dx
  421fca:	outs   dx,DWORD PTR ds:[esi]
  421fcb:	std    
  421fcc:	xor    al,0x1c
  421fce:	or     esp,DWORD PTR [edx+0x67]
  421fd1:	gs loop 0x421f6d
  421fd4:	xor    eax,0xbfba352f
  421fd9:	fmul   QWORD PTR [ebx-0x32064bb]
  421fdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fe0:	and    bh,bl
  421fe2:	mov    bl,0x17
  421fe4:	rep lods al,BYTE PTR ds:[esi]
  421fe6:	inc    esp
  421fe7:	ret    0xca20
  421fea:	adc    DWORD PTR [edx-0x6b],ebx
  421fed:	ins    BYTE PTR es:[edi],dx
  421fee:	or     BYTE PTR [edx],al
  421ff0:	jne    0x422026
  421ff2:	(bad)  
  421ff4:	xchg   esi,eax
  421ff5:	or     al,0xb1
  421ff7:	jo     0x422052
  421ff9:	into   
  421ffa:	stos   BYTE PTR es:[edi],al
  421ffb:	jmp    0xe757beba
  422000:	or     al,0xb9
  422002:	dec    esp
  422003:	jb     0x421fbf
  422005:	xchg   esp,eax
  422006:	mov    esi,0xd86ac15d
  42200b:	xchg   BYTE PTR [edi+0x63f1b624],ch
  422011:	test   al,0xf7
  422013:	rcr    DWORD PTR [edi+0x655b279b],0x83
  42201a:	push   0x94afcd0b
  42201f:	mul    BYTE PTR [edi+esi*8]
  422022:	mov    ds:0x4d5dcf2a,eax
  422027:	push   esi
  422028:	lods   eax,DWORD PTR ds:[esi]
  422029:	xor    DWORD PTR [esi-0x80],ecx
  42202c:	shl    DWORD PTR fs:0x27dff783,cl
  422033:	sbb    edi,DWORD PTR [esi]
  422035:	ins    BYTE PTR es:[edi],dx
  422036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422037:	xor    ch,BYTE PTR [esi+0x18]
  42203a:	lods   al,BYTE PTR ds:[esi]
  42203b:	xlat   BYTE PTR ds:[ebx]
  42203c:	fsubr  QWORD PTR [esi]
  42203e:	dec    BYTE PTR [edx+ebx*8]
  422041:	mov    ebp,0x87fc29e0
  422046:	pop    ecx
  422047:	fisub  DWORD PTR [ecx+0x7c]
  42204a:	mov    ch,0x83
  42204c:	mov    bh,BYTE PTR [esi]
  42204e:	add    DWORD PTR [edx+0x74],edi
  422051:	ja     0x421fe6
  422053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422054:	jmp    0x375e:0x13953ca5
  42205b:	push   ebp
  42205c:	xchg   esi,eax
  42205d:	ins    DWORD PTR es:[edi],dx
  42205e:	and    cl,dh
  422060:	in     eax,dx
  422061:	push   ss
  422062:	sub    DWORD PTR [edx],eax
  422064:	imul   edi,eax,0xffffffe4
  422067:	sbb    DWORD PTR [edx],ecx
  422069:	loop   0x4220cf
  42206b:	pop    edx
  42206c:	inc    edx
  42206d:	mov    dl,0xd5
  42206f:	neg    BYTE PTR [ecx+0x3a87dbfb]
  422075:	mov    ebp,DWORD PTR [ecx-0x63]
  422078:	aam    0x5b
  42207a:	daa    
  42207b:	xor    al,bh
  42207d:	imul   eax,DWORD PTR [esi+0x438c8f0f],0x4beb5e8c
  422087:	cwde   
  422088:	in     al,dx
  422089:	mov    ebp,0xa57f17d5
  42208e:	or     DWORD PTR [esi+0x68],eax
  422091:	dec    ebx
  422092:	in     eax,dx
  422093:	(bad)  
  422094:	xor    al,0x19
  422096:	clc    
  422097:	and    BYTE PTR [edi],cl
  422099:	test   eax,0xade9f0a4
  42209e:	xchg   esp,eax
  42209f:	call   0x580487a3
  4220a4:	adc    eax,0xfaf581d0
  4220a9:	call   0xd4ec85c7
  4220ae:	std    
  4220af:	es icebp 
  4220b1:	neg    DWORD PTR [edi]
  4220b3:	pop    esi
  4220b4:	xchg   esi,eax
  4220b5:	mov    edx,0x1a6844b
  4220ba:	(bad)  [eax+0x70cf85d1]
  4220c0:	sbb    ebx,ebp
  4220c2:	pop    ecx
  4220c3:	pushf  
  4220c4:	imul   edx
  4220c6:	dec    ebx
  4220c7:	xchg   ebp,eax
  4220c8:	(bad)  
  4220c9:	in     eax,dx
  4220ca:	mov    esp,0xcb7b6033
  4220cf:	(bad)  
  4220d0:	lods   eax,DWORD PTR ds:[esi]
  4220d1:	adc    al,0x37
  4220d3:	mov    ebp,?
  4220d5:	jle    0x42205a
  4220d7:	es ds sbb eax,0x54f2db4a
  4220de:	push   cs
  4220df:	push   0xffffffbd
  4220e1:	fsub   QWORD PTR [ebx-0x12b6e47b]
  4220e7:	in     eax,0xc3
  4220e9:	cmp    BYTE PTR [edi+0x6f],ah
  4220ec:	mov    ebp,0xc6f6fcdf
  4220f1:	popf   
  4220f2:	jmp    0x26be4b1a
  4220f7:	jb     0x42213f
  4220f9:	jae    0x4220f2
  4220fb:	(bad)  
  4220fc:	mov    BYTE PTR ds:0xf55b,ch
  422101:	(bad)  
  422102:	pop    ss
  422103:	mov    eax,ds:0x4b02b38a
  422108:	mov    eax,ds:0x60aabd1b
  42210d:	cmp    bl,dh
  42210f:	(bad)  
  422110:	sub    eax,0x49282c2c
  422115:	add    al,0x18
  422117:	and    al,0x71
  422119:	push   ss
  42211a:	ja     0x4220a4
  42211c:	ss jo  0x4220ae
  42211f:	xor    al,0xb9
  422121:	aam    0x46
  422123:	fwait
  422124:	stos   BYTE PTR es:[edi],al
  422125:	dec    edx
  422126:	into   
  422127:	loope  0x422182
  422129:	in     eax,0xcb
  42212b:	cld    
  42212c:	retf   0x19b2
  42212f:	aas    
  422130:	push   ebx
  422131:	sub    DWORD PTR [ebx*1+0x2f2d0315],edi
  422138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422139:	jno    0x4220f9
  42213b:	cli    
  42213c:	sub    eax,DWORD PTR [esi-0x2e3e0f19]
  422142:	and    al,0x68
  422144:	mov    cl,0x43
  422146:	int    0x2a
  422148:	mov    WORD PTR [esi-0x3476e59c],cs
  42214e:	mov    dh,al
  422150:	cmp    BYTE PTR [esi],bl
  422152:	inc    eax
  422153:	mov    ds:0x1d773911,al
  422158:	pop    ebx
  422159:	adc    al,0xa7
  42215b:	out    0x85,al
  42215d:	dec    ebp
  42215e:	xchg   edi,eax
  42215f:	inc    ebx
  422160:	cdq    
  422161:	cmp    ecx,ebx
  422163:	ret    0x602d
  422166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422167:	push   0x6f8ee9ef
  42216c:	inc    ebp
  42216d:	rol    DWORD PTR [ebp+0x5e],cl
  422170:	jl     0x422195
  422172:	mov    dl,0xbc
  422174:	fwait
  422175:	jno    0x4221e0
  422177:	or     esp,0xffffff98
  42217a:	jp     0x4221f7
  42217c:	fstp   TBYTE PTR [edx]
  42217e:	std    
  42217f:	push   esi
  422180:	cmp    eax,0xa176731a
  422185:	stos   DWORD PTR es:[edi],eax
  422186:	cs out dx,al
  422188:	mov    ds:0xd8036c1a,al
  42218d:	sub    DWORD PTR [ecx+0x586ea620],0x4d
  422194:	gs push es
  422196:	les    edx,FWORD PTR [edi+0x49]
  422199:	and    dh,dh
  42219b:	xchg   esi,eax
  42219c:	inc    ebp
  42219d:	cmp    BYTE PTR [ecx],bl
  42219f:	push   esi
  4221a0:	loope  0x42212e
  4221a2:	out    0xd,al
  4221a4:	fist   DWORD PTR [edi]
  4221a6:	pop    es
  4221a7:	or     ebx,ebx
  4221a9:	xchg   esi,eax
  4221aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ab:	sbb    eax,0x9f5c9cb0
  4221b0:	or     dl,al
  4221b2:	sub    edx,DWORD PTR [esi-0x7b]
  4221b5:	leave  
  4221b6:	adc    DWORD PTR [ebp-0x78],edi
  4221b9:	and    al,0x99
  4221bb:	sbb    al,0xf9
  4221bd:	cmp    eax,0x71cbd399
  4221c2:	stos   DWORD PTR es:[edi],eax
  4221c3:	(bad)  
  4221c4:	popa   
  4221c5:	jnp    0x422182
  4221c7:	out    0xe6,al
  4221c9:	add    al,0x71
  4221cb:	fs in  eax,dx
  4221cd:	or     BYTE PTR [eax-0x43],dh
  4221d0:	fiadd  DWORD PTR [eax-0x12acdf02]
  4221d6:	dec    edi
  4221d7:	dec    ecx
  4221d8:	push   ebx
  4221d9:	add    eax,0x4e39cda3
  4221de:	iret   
  4221df:	je     0x4221b7
  4221e1:	mov    ds:0xa740f670,al
  4221e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221e7:	daa    
  4221e8:	fstp   QWORD PTR [eax]
  4221ea:	test   al,0x5e
  4221ec:	shl    DWORD PTR [esp+ebp*2+0x190377b7],1
  4221f3:	bound  ecx,QWORD PTR ds:0xf7412199
  4221f9:	(bad)  
  4221fb:	aad    0x4e
  4221fd:	gs (bad) 
  422200:	xchg   esp,eax
  422201:	adc    edx,DWORD PTR [edi-0x28b0b981]
  422207:	add    dl,cl
  422209:	cmova  ecx,ecx
  42220c:	sub    eax,0xa7eb7baf
  422211:	or     dl,BYTE PTR [edi+0x13170e91]
  422217:	out    dx,al
  422218:	aaa    
  422219:	loop   0x4221f2
  42221b:	xor    BYTE PTR [ecx],ah
  42221d:	adc    eax,0x5ebaf06
  422222:	imul   edx,DWORD PTR [ebp-0x67],0xffffff9c
  422226:	pop    ds
  422227:	jle    0x42221c
  422229:	jmp    0x4221ba
  42222b:	jl     0x422271
  42222d:	stos   BYTE PTR es:[edi],al
  42222e:	iret   
  42222f:	add    ebx,DWORD PTR [edx]
  422231:	not    bl
  422233:	mov    esp,0xe2a81c08
  422238:	shl    DWORD PTR es:[ebx+0x64],cl
  42223c:	lds    edi,FWORD PTR [eax]
  42223e:	jnp    0x42229c
  422240:	nop
  422241:	push   edi
  422242:	mov    ch,bh
  422244:	or     al,0x6
  422246:	sbb    dl,dh
  422248:	jb     0x422286
  42224a:	outs   dx,DWORD PTR ds:[esi]
  42224b:	pop    es
  42224c:	or     al,0xe4
  42224e:	cdq    
  42224f:	ja     0x4222ce
  422251:	jae    0x422296
  422253:	mov    DWORD PTR [ebp+0x4d],eax
  422256:	pop    ebx
  422257:	xor    bh,dh
  422259:	dec    edi
  42225a:	ins    DWORD PTR es:[edi],dx
  42225b:	xchg   BYTE PTR fs:[ecx],dh
  42225e:	inc    ebx
  42225f:	iret   
  422260:	imul   esi,DWORD PTR [ebx-0x3befc487],0x72b15b5
  42226a:	inc    ebp
  42226b:	test   eax,0xef3fb8be
  422270:	in     al,dx
  422271:	or     edx,DWORD PTR [edi-0x7496afae]
  422277:	pop    edi
  422278:	fwait
  422279:	xchg   esp,eax
  42227a:	dec    edi
  42227b:	lock jo 0x422230
  42227e:	push   esi
  42227f:	inc    esi
  422280:	jbe    0x4222f9
  422282:	ror    DWORD PTR [ebx-0x77],cl
  422285:	mov    ah,0x3e
  422287:	mov    eax,0x13958f72
  42228c:	dec    ecx
  42228d:	xor    ah,al
  42228f:	dec    esi
  422290:	xchg   ebx,eax
  422291:	push   ecx
  422292:	inc    esi
  422293:	mov    WORD PTR es:[esi-0x2a],es
  422297:	sub    eax,0x39cc22f1
  42229c:	sub    DWORD PTR [edi],ecx
  42229e:	adc    bl,BYTE PTR [ebp-0x20]
  4222a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222a2:	out    dx,al
  4222a3:	adc    al,0xff
  4222a5:	(bad)  cs:[ecx+0x10]
  4222a9:	mov    bl,0x1b
  4222ab:	ret    0x75b0
  4222ae:	jmp    0x8c5d:0xe709b86c
  4222b5:	aas    
  4222b6:	retf   
  4222b7:	fcomi  st,st(5)
  4222b9:	in     al,dx
  4222ba:	xchg   ecx,eax
  4222bb:	adc    al,0x1
  4222bd:	pop    esi
  4222be:	cld    
  4222bf:	cmp    BYTE PTR [edx+0x188745a8],ch
  4222c5:	popf   
  4222c6:	jg     0x42224b
  4222c8:	(bad)  
  4222ca:	leave  
  4222cb:	(bad)  
  4222cc:	mov    al,ds:0xf220d54d
  4222d1:	pop    ebp
  4222d2:	test   eax,0x5af7e731
  4222d7:	inc    edi
  4222d8:	lds    edi,FWORD PTR [esi-0x72]
  4222db:	jmp    0xa7fd:0x3189468b
  4222e2:	popa   
  4222e3:	sbb    edx,DWORD PTR [edx-0x5c9f7b05]
  4222e9:	pop    ebx
  4222ea:	adc    ebp,DWORD PTR [esp+edx*1-0x3b08a77f]
  4222f1:	(bad)  
  4222f2:	jmp    0xdf3170c4
  4222f7:	loope  0x4222f7
  4222f9:	popf   
  4222fa:	sbb    al,0x65
  4222fc:	adc    eax,0xa2e43797
  422301:	nop
  422302:	add    al,0x38
  422304:	repz fld1 
  422307:	in     al,dx
  422308:	mov    bh,0xf9
  42230a:	xlat   BYTE PTR ds:[ebx]
  42230b:	cmp    DWORD PTR [ebx+0x2d67a0b],ebx
  422311:	bound  eax,QWORD PTR [eax+edi*8+0x4fbfea00]
  422318:	sahf   
  422319:	and    BYTE PTR [eax+0x4f3877c7],ah
  42231f:	xor    dh,BYTE PTR [eax+0x2c]
  422322:	cmp    al,0x7f
  422324:	out    dx,eax
  422325:	jmp    0x1990:0x489106a1
  42232c:	mov    esp,0xbc5e01c5
  422331:	dec    esp
  422332:	cmp    eax,0x15cea07c
  422337:	pop    es
  422338:	add    edi,DWORD PTR [eax]
  42233a:	dec    ecx
  42233b:	sub    DWORD PTR [ecx],esp
  42233d:	pop    es
  42233e:	test   esi,ebp
  422340:	rol    esp,1
  422342:	fcmove st,st(5)
  422344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422345:	or     eax,0xd8595a08
  42234a:	inc    DWORD PTR [eax+0x5]
  42234d:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42234f:	jle    0x4223a0
  422351:	cdq    
  422352:	pop    edi
  422353:	or     al,0x79
  422355:	cmp    BYTE PTR [edx+0x45],dh
  422358:	loopne 0x4222fe
  42235a:	sbb    DWORD PTR [edi-0x18b5ee6c],edi
  422360:	ror    BYTE PTR [edi-0x4902ee29],1
  422366:	fwait
  422367:	jmp    0x422388
  422369:	push   ecx
  42236a:	pushf  
  42236b:	mov    cl,0x58
  42236d:	mov    ds:0x198533c2,al
  422373:	jmp    ecx
  422375:	retf   
  422376:	pop    ebp
  422377:	and    al,0xa9
  422379:	cli    
  42237a:	dec    esp
  42237b:	outs   dx,DWORD PTR ds:[esi]
  42237c:	sbb    eax,0xc0c9cb5e
  422381:	inc    edi
  422382:	fcomp  QWORD PTR [ecx-0x104c4d97]
  422388:	leave  
  422389:	inc    esp
  42238a:	js     0x42237f
  42238c:	jle    0x4223c2
  42238e:	mov    ebp,0x172d3520
  422393:	fstp   DWORD PTR [eax]
  422395:	ret    0x853e
  422398:	dec    ebx
  422399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42239a:	jp     0x4223ee
  42239c:	rol    ah,0x8d
  42239f:	mov    cl,bh
  4223a1:	push   ds
  4223a2:	ret    0x23e
  4223a5:	test   al,0xab
  4223a7:	adc    al,0x1a
  4223a9:	ret    
  4223aa:	pop    edx
  4223ab:	pop    esi
  4223ac:	mov    ch,0x5e
  4223ae:	adc    eax,0x82b50342
  4223b3:	mov    esi,0x2c072563
  4223b8:	mov    ds:0xae85b569,al
  4223bd:	adc    ebx,esi
  4223bf:	pop    ebp
  4223c0:	rcr    BYTE PTR [edi-0x66],0xe0
  4223c4:	push   es
  4223c5:	mov    DWORD PTR [ebp+edx*2-0x1a],eax
  4223c9:	mov    ecx,0x5dd9086e
  4223cf:	mov    eax,ds:0xf56d373a
  4223d4:	fs sub eax,0xe1ccfddd
  4223da:	xchg   DWORD PTR [ebx],esi
  4223dc:	jne    0x422431
  4223de:	sub    al,0x63
  4223e0:	push   edx
  4223e1:	iret   
  4223e2:	cmp    edi,DWORD PTR [ecx+edx*1]
  4223e5:	mov    bh,0x36
  4223e7:	lds    ebp,FWORD PTR [ebx+esi*2]
  4223ea:	pop    esi
  4223eb:	inc    edi
  4223ec:	push   ebp
  4223ed:	int3   
  4223ee:	push   ecx
  4223ef:	mov    ah,0x4b
  4223f1:	sub    al,0x18
  4223f3:	push   ebx
  4223f4:	outs   dx,DWORD PTR ds:[esi]
  4223f5:	shr    ch,cl
  4223f7:	add    eax,0xf2edab6
  4223fc:	mov    ebx,0xf271d6c4
  422401:	xor    dl,dl
  422403:	pop    ecx
  422404:	adc    BYTE PTR cs:[esp+edx*2],0x1
  422409:	pop    ebp
  42240a:	jl     0x4223b3
  42240c:	xchg   DWORD PTR [esi-0x24fe6ce],edi
  422412:	add    BYTE PTR [edx-0x4e3119e4],dh
  422418:	dec    DWORD PTR ds:0xc806074a
  42241e:	mov    eax,ds:0xe791962c
  422423:	mov    ch,0xb0
  422425:	pop    edx
  422426:	add    DWORD PTR [ebx-0x5b],0xed416a25
  42242d:	cmp    DWORD PTR [eax],ebx
  42242f:	push   cs
  422430:	cmp    ebp,esi
  422432:	adc    eax,0x303951bd
  422437:	xchg   esp,eax
  422438:	push   edx
  422439:	popa   
  42243a:	xchg   ecx,eax
  42243b:	repnz jmp 0x5a2b:0x9201cf40
  422443:	ins    BYTE PTR es:[edi],dx
  422444:	xor    al,0x71
  422446:	mov    ecx,0xa827cd74
  42244b:	push   ebp
  42244c:	retf   0xb8c5
  42244f:	lahf   
  422450:	mov    ecx,0x6d9391b8
  422455:	push   ds
  422456:	dec    edx
  422457:	rcl    BYTE PTR [esi],1
  422459:	dec    edi
  42245a:	add    BYTE PTR [ebx+0x13a92ba],al
  422460:	inc    ecx
  422461:	xchg   edx,eax
  422462:	not    DWORD PTR [ebp-0x1a35bea0]
  422468:	mov    bl,0xb8
  42246a:	mov    ds:0x84701a00,eax
  42246f:	test   ah,dl
  422471:	hlt    
  422472:	adc    ecx,DWORD PTR [eax-0x1c]
  422475:	stc    
  422476:	pushf  
  422477:	push   ss
  422478:	sbb    BYTE PTR [edx+0x32],dl
  42247b:	xchg   edx,eax
  42247c:	sub    al,0xae
  42247e:	mov    esp,0xa8b4642a
  422483:	imul   ebp,ebx,0x28
  422486:	xchg   DWORD PTR [ebx+0x6ebff0aa],ebx
  42248c:	or     al,0x37
  42248e:	jecxz  0x42248f
  422490:	pop    edx
  422491:	and    DWORD PTR [edx],edi
  422493:	fadd   DWORD PTR [eax-0x60990361]
  422499:	shl    DWORD PTR [ecx-0xa380e],cl
  42249f:	jne    0x42247d
  4224a1:	mov    BYTE PTR [eax],0xe9
  4224a4:	mov    eax,ds:0x42a2ee
  4224a9:	push   DWORD PTR [eax]
  4224ab:	push   DWORD PTR ds:0x42a552
  4224b1:	push   DWORD PTR ds:0x42a2f6
  4224b7:	push   DWORD PTR ds:0x42a532
  4224bd:	push   DWORD PTR ds:0x42af72
  4224c3:	push   DWORD PTR [ebp-0x28]
  4224c6:	push   DWORD PTR [ebp-0x2c]
  4224c9:	mov    eax,DWORD PTR [ebp-0x14]
  4224cc:	call   eax
  4224ce:	pop    edi
  4224cf:	pop    esi
  4224d0:	leave  
  4224d1:	ret    
  4224d2:	push   ebp
  4224d3:	mov    ebp,esp
  4224d5:	sub    esp,0x34
  4224d8:	push   ebx
  4224d9:	adc    edx,DWORD PTR ds:0x42b1aa
  4224df:	push   esi
  4224e0:	movzx  ecx,BYTE PTR ds:0x42b1ea
  4224e7:	sbb    DWORD PTR ds:0x42b21a,ecx
  4224ed:	push   edi
  4224ee:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  4224f5:	and    DWORD PTR ds:0x42b1c6,0x0
  4224ff:	mov    ecx,DWORD PTR ds:0x42b1c6
  422505:	inc    ecx
  422506:	mov    DWORD PTR ds:0x42b1c6,ecx
  42250c:	cmp    DWORD PTR ds:0x42b1c6,0xd
  422513:	jg     0x422552
  422519:	jmp    0x422529
  42251e:	push   0x42b1ba
  422523:	call   DWORD PTR ds:0x42b2f6
  422529:	cmp    DWORD PTR ds:0x42b1c6,0xc
  422530:	jne    0x422545
  422536:	xor    ecx,ecx
  422538:	xor    ecx,DWORD PTR ds:0x42b1c6
  42253e:	inc    ecx
  42253f:	mov    DWORD PTR ds:0x42b1c6,ecx
  422545:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  42254c:	jb     0x4224ff
  422552:	lea    eax,[ebp+0x14]
  422555:	mov    DWORD PTR [ebp-0x4],eax
  422558:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  42255f:	lea    eax,[ebp-0xc]
  422562:	mov    DWORD PTR ds:0x42b19e,0x11
  42256c:	cmp    DWORD PTR ds:0x42b19e,0x0
  422573:	je     0x4225cf
  422579:	cmp    DWORD PTR ds:0x42b19e,0x2
  422580:	jge    0x4225cf
  422586:	jmp    0x4225a3
  42258b:	push   0x42b1fa
  422590:	push   0x42b222
  422595:	push   DWORD PTR [ebp-0x28]
  422598:	push   0x42a03d
  42259d:	call   DWORD PTR ds:0x42b2fa
  4225a3:	cmp    DWORD PTR ds:0x42b19e,0x3
  4225aa:	jne    0x4225bd
  4225b0:	mov    esi,DWORD PTR ds:0x42b19e
  4225b6:	dec    esi
  4225b7:	mov    DWORD PTR ds:0x42b19e,esi
  4225bd:	mov    esi,DWORD PTR ds:0x42b19e
  4225c3:	dec    esi
  4225c4:	mov    DWORD PTR ds:0x42b19e,esi
  4225ca:	jmp    0x42256c
  4225cf:	mov    DWORD PTR [ebp-0x14],eax
  4225d2:	and    DWORD PTR ds:0x42b1f2,0x0
  4225dc:	jmp    0x4225ee
  4225e1:	mov    esi,DWORD PTR ds:0x42b1f2
  4225e7:	inc    esi
  4225e8:	mov    DWORD PTR ds:0x42b1f2,esi
  4225ee:	cmp    DWORD PTR ds:0x42b1f2,0x1a
  4225f5:	jae    0x422622
  4225fb:	cmp    DWORD PTR ds:0x42b1f2,0x2a
  422602:	jle    0x422622
  422608:	jmp    0x42261d
  42260d:	push   0x42b1ca
  422612:	push   0x42a18d
  422617:	call   DWORD PTR ds:0x42b2fe
  42261d:	jmp    0x4225e1
  422622:	mov    eax,DWORD PTR [ebp-0xc]
  422625:	mov    DWORD PTR ds:0x42b202,0x1d
  42262f:	cmp    DWORD PTR ds:0x42b202,0x0
  422636:	je     0x422692
  42263c:	cmp    DWORD PTR ds:0x42b202,0xb
  422643:	jbe    0x422692
  422649:	jmp    0x422664
  42264e:	push   DWORD PTR [ebp-0x28]
  422651:	push   0x8416
  422656:	push   0x42a285
  42265b:	push   DWORD PTR [ebp-0xc]
  42265e:	call   DWORD PTR ds:0x42b306
  422664:	cmp    DWORD PTR ds:0x42b202,0xc
  42266b:	jne    0x42267e
  422671:	mov    esi,DWORD PTR ds:0x42b202
  422677:	dec    esi
  422678:	mov    DWORD PTR ds:0x42b202,esi
  42267e:	xor    esi,esi
  422680:	add    esi,DWORD PTR ds:0x42b202
  422686:	dec    esi
  422687:	mov    DWORD PTR ds:0x42b202,esi
  42268d:	jmp    0x42262f
  422692:	mov    edx,DWORD PTR [ebp-0x14]
  422695:	xor    esi,ecx
  422697:	mov    ecx,0x75108ae
  42269c:	sbb    esi,0x78cf
  4226a2:	xor    eax,ecx
  4226a4:	add    eax,0x3272f5
  4226a9:	mov    DWORD PTR [edx],eax
  4226ab:	xor    eax,eax
  4226ad:	or     eax,DWORD PTR ds:0x42b2b6
  4226b3:	mov    eax,DWORD PTR [eax]
  4226b5:	and    DWORD PTR ds:0x42b1c2,eax
  4226bb:	mov    eax,ds:0x42a2ea
  4226c0:	mov    edx,DWORD PTR [ebp-0x4]
  4226c3:	movzx  esi,BYTE PTR ds:0x42b1b2
  4226ca:	adc    DWORD PTR ds:0x42b206,esi
  4226d0:	mov    eax,DWORD PTR [eax]
  4226d2:	add    eax,DWORD PTR [edx]
  4226d4:	and    DWORD PTR ds:0x42b1ee,ecx
  4226da:	mov    DWORD PTR [ebp-0x8],eax
  4226dd:	mov    esi,DWORD PTR [ebp+0x8]
  4226e0:	and    DWORD PTR ds:0x42b1b2,0x0
  4226ea:	jmp    0x4226fa
  4226ef:	mov    eax,ds:0x42b1b2
  4226f4:	inc    eax
  4226f5:	mov    ds:0x42b1b2,eax
  4226fa:	cmp    DWORD PTR ds:0x42b1b2,0x15
  422701:	jae    0x422746
  422707:	cmp    DWORD PTR ds:0x42b1b2,0x9
  42270e:	jbe    0x422746
  422714:	jmp    0x422729
  422719:	push   0x42a26b
  42271e:	push   0x0
  422720:	push   DWORD PTR [ebp-0x28]
  422723:	call   DWORD PTR ds:0x42b30e
  422729:	cmp    DWORD PTR ds:0x42b1b2,0x8
  422730:	jne    0x422741
  422736:	mov    eax,ds:0x42b1b2
  42273b:	inc    eax
  42273c:	mov    ds:0x42b1b2,eax
  422741:	jmp    0x4226ef
  422746:	mov    eax,ds:0x42a472
  42274b:	mov    DWORD PTR ds:0x42b21e,0x16
  422755:	cmp    DWORD PTR ds:0x42b21e,0x0
  42275c:	je     0x42278f
  422762:	cmp    DWORD PTR ds:0x42b21e,0x19
  422769:	jbe    0x42278f
  42276f:	jmp    0x42277d
  422774:	push   DWORD PTR [ebp-0x20]
  422777:	call   DWORD PTR ds:0x42b316
  42277d:	mov    edx,DWORD PTR ds:0x42b21e
  422783:	dec    edx
  422784:	mov    DWORD PTR ds:0x42b21e,edx
  42278a:	jmp    0x422755
  42278f:	mov    eax,DWORD PTR [eax+0x198]
  422795:	movzx  edx,WORD PTR ds:0x42b18e
  42279c:	xor    edx,DWORD PTR ds:0x42b1d6
  4227a2:	mov    DWORD PTR ds:0x42b18e,edx
  4227a8:	xor    esi,ecx
  4227aa:	and    DWORD PTR ds:0x42b1c2,0x42b1b2
  4227b4:	mov    edx,0x3272f5
  4227b9:	add    DWORD PTR ds:0x42b1ce,0x42b1c2
  4227c3:	add    esi,edx
  4227c5:	mov    DWORD PTR ds:0x42b1be,0x75ce
  4227cf:	cmp    DWORD PTR [eax],esi
  4227d1:	je     0x4227e8
  4227d7:	mov    eax,DWORD PTR [eax]
  4227d9:	mov    DWORD PTR ds:0x42b18e,0x18de
  4227e3:	jmp    0x422b4e
  4227e8:	mov    eax,DWORD PTR [ebp+0x18]
  4227eb:	mov    esi,DWORD PTR ds:0x42b1ee
  4227f1:	adc    DWORD PTR ds:0x42b212,esi
  4227f7:	mov    esi,DWORD PTR [ebp+0x1c]
  4227fa:	or     ebx,0xffffffff
  4227fd:	mov    DWORD PTR ds:0x42b21a,0x5f57
  422807:	cmp    eax,0x70941f95
  42280c:	mov    DWORD PTR ds:0x42b19e,0x397d
  422816:	jne    0x422857
  42281c:	mov    DWORD PTR ds:0x42b196,0x41c1
  422826:	cmp    esi,ebx
  422828:	mov    DWORD PTR ds:0x42b18e,0x6f0
  422832:	jne    0x422857
  422838:	mov    DWORD PTR ds:0x42b1e6,0x1213
  422842:	push   ebx
  422843:	push   0x70941f94
  422848:	mov    DWORD PTR ds:0x42b1ea,0x77db
  422852:	jmp    0x422b3d
  422857:	mov    eax,DWORD PTR [ebp+0x18]
  42285a:	mov    esi,DWORD PTR [ebp+0x1c]
  42285d:	mov    DWORD PTR ds:0x42b1f6,0x6621
  422867:	cmp    eax,0x70941f94
  42286c:	jne    0x422899
  422872:	mov    DWORD PTR ds:0x42b1d2,0x1239
  42287c:	cmp    esi,ebx
  42287e:	mov    DWORD PTR ds:0x42b1ea,0x2737
  422888:	jne    0x422899
  42288e:	push   ebx
  42288f:	push   0x70941f97
  422894:	jmp    0x422b3d
  422899:	mov    eax,DWORD PTR [ebp+0x18]
  42289c:	mov    esi,DWORD PTR [ebp+0x1c]
  42289f:	cmp    eax,0x70941f97
  4228a4:	jne    0x4228c7
  4228aa:	mov    DWORD PTR ds:0x42b1ba,0x121e
  4228b4:	cmp    esi,ebx
  4228b6:	jne    0x4228c7
  4228bc:	push   ebx
  4228bd:	push   0x70941f96
  4228c2:	jmp    0x422b3d
  4228c7:	mov    eax,DWORD PTR [ebp+0x18]
  4228ca:	mov    DWORD PTR ds:0x42b202,0x572d
  4228d4:	mov    esi,DWORD PTR [ebp+0x1c]
  4228d7:	cmp    eax,0x70941f96
  4228dc:	mov    DWORD PTR ds:0x42b1aa,0x369b
  4228e6:	jne    0x42291d
  4228ec:	cmp    esi,ebx
  4228ee:	jne    0x42291d
  4228f4:	mov    DWORD PTR ds:0x42b18a,0xe5c
  4228fe:	push   ebx
  4228ff:	mov    DWORD PTR ds:0x42b22e,0x5e71
  422909:	push   0x70941f99
  42290e:	mov    DWORD PTR ds:0x42b1d6,0x2b39
  422918:	jmp    0x422b3d
  42291d:	mov    DWORD PTR ds:0x42b1da,edi
  422923:	mov    esi,DWORD PTR [ebp+0x18]
  422926:	mov    eax,0x5593
  42292b:	mov    edi,DWORD PTR [ebp+0x1c]
  42292e:	mov    eax,0x70941f98
  422933:	mov    DWORD PTR ds:0x42b1a2,0x1ef3
  42293d:	cmp    esi,eax
  42293f:	mov    DWORD PTR ds:0x42b1be,0x2a6e
  422949:	jne    0x422b21
  42294f:	cmp    edi,ebx
  422951:	mov    DWORD PTR ds:0x42b19e,0x8e7
  42295b:	jne    0x422b21
  422961:	sbb    DWORD PTR ds:0x42b1ea,0x3412
  42296b:	mov    eax,DWORD PTR [ebp+0x10]
  42296e:	or     edi,edi
  422970:	xor    eax,ecx
  422972:	sbb    DWORD PTR ds:0x42b1c2,edx
  422978:	add    eax,edx
  42297a:	mov    DWORD PTR [ebp-0x20],eax
  42297d:	mov    eax,DWORD PTR [ebp+0xc]
  422980:	mov    esi,DWORD PTR [ebp-0x8]
  422983:	xor    eax,ecx
  422985:	add    eax,edx
  422987:	imul   eax,DWORD PTR [esi]
  42298a:	mov    esi,DWORD PTR [ebp+0x8]
  42298d:	xor    esi,ecx
  42298f:	add    esi,edx
  422991:	cmp    esi,eax
  422993:	mov    eax,DWORD PTR [ebp-0x4]
  422996:	mov    edi,0xffcd8d0b
  42299b:	je     0x4229ba
  4229a1:	mov    esi,DWORD PTR [ebp-0x20]
  4229a4:	add    DWORD PTR [eax],esi
  4229a6:	mov    eax,DWORD PTR [ebp-0x4]
  4229a9:	mov    esi,DWORD PTR [ebp+0xc]
  4229ac:	xor    esi,ecx
  4229ae:	add    esi,edx
  4229b0:	imul   esi,DWORD PTR [eax]
  4229b3:	mov    DWORD PTR [eax],esi
  4229b5:	jmp    0x4229bf
  4229ba:	mov    esi,DWORD PTR [ebp+0x14]
  4229bd:	xor    DWORD PTR [eax],esi
  4229bf:	mov    eax,DWORD PTR [ebp-0x4]
  4229c2:	mov    esi,DWORD PTR [ebp+0x10]
  4229c5:	xor    esi,ecx
  4229c7:	sub    edi,esi
  4229c9:	add    DWORD PTR [eax],edi
  4229cb:	mov    eax,DWORD PTR [ebp-0x4]
  4229ce:	mov    esi,DWORD PTR [ebp-0x8]
  4229d1:	add    esi,DWORD PTR [eax]
  4229d3:	mov    DWORD PTR [ebp-0x8],esi
  4229d6:	mov    eax,DWORD PTR [ebp+0xc]
  4229d9:	mov    esi,DWORD PTR [ebp+0xc]
  4229dc:	xor    esi,ecx
  4229de:	xor    eax,ecx
  4229e0:	lea    eax,[eax+esi*1+0x64e5ea]
  4229e7:	mov    esi,DWORD PTR [ebp+0xc]
  4229ea:	xor    esi,ecx
  4229ec:	add    esi,edx
  4229ee:	imul   eax,esi
  4229f1:	mov    esi,DWORD PTR [ebp+0xc]
  4229f4:	xor    esi,ecx
  4229f6:	sub    esi,eax
  4229f8:	mov    eax,DWORD PTR [ebp-0x4]
  4229fb:	add    esi,edx
  4229fd:	cmp    DWORD PTR [eax],esi
  4229ff:	mov    eax,DWORD PTR [ebp-0x4]
  422a02:	mov    esi,DWORD PTR [ebp+0x10]
  422a05:	jg     0x422a1b
  422a0b:	xor    esi,ecx
  422a0d:	mov    edi,0xffcd8d0b
  422a12:	sub    edi,esi
  422a14:	add    DWORD PTR [eax],edi
  422a16:	jmp    0x422a21
  422a1b:	xor    esi,ecx
  422a1d:	add    esi,edx
  422a1f:	add    DWORD PTR [eax],esi
  422a21:	mov    eax,DWORD PTR [ebp-0x8]
  422a24:	mov    esi,DWORD PTR [ebp-0x10]
  422a27:	mov    eax,DWORD PTR [eax]
  422a29:	xor    esi,ecx
  422a2b:	add    esi,0x3272f4
  422a31:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a38:	mov    DWORD PTR [ebp-0x24],ebx
  422a3b:	not    esi
  422a3d:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a44:	mov    DWORD PTR [ebp-0x2c],ebx
  422a47:	mov    ebx,DWORD PTR [ebp-0x28]
  422a4a:	mov    edi,DWORD PTR [ebp-0x24]
  422a4d:	and    eax,esi
  422a4f:	mov    esi,0xa141
  422a54:	xor    bx,si
  422a57:	mov    esi,0x412c
  422a5c:	add    bx,si
  422a5f:	cmp    WORD PTR [eax],bx
  422a62:	je     0x422aac
  422a68:	mov    edi,DWORD PTR [ebp-0x10]
  422a6b:	xor    edi,ecx
  422a6d:	mov    DWORD PTR [ebp-0x28],0x7097b860
  422a74:	mov    DWORD PTR [ebp-0x24],0xffffffff
  422a7b:	mov    ebx,0xffcd8d0b
  422a80:	sub    ebx,edi
  422a82:	mov    DWORD PTR [ebp-0x30],0x7097a55e
  422a89:	add    eax,ebx
  422a8b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  422a92:	mov    edi,DWORD PTR [ebp-0x28]
  422a95:	mov    ebx,DWORD PTR [ebp-0x24]
  422a98:	mov    ebx,0xa141
  422a9d:	xor    di,bx
  422aa0:	add    di,si
  422aa3:	cmp    WORD PTR [eax],di
  422aa6:	jne    0x422a68
  422aac:	mov    edi,DWORD PTR [ebp-0x14]
  422aaf:	mov    edi,DWORD PTR [edi]
  422ab1:	mov    ebx,DWORD PTR [eax+0x3c]
  422ab4:	lea    edi,[ebx+edi*8+0x78]
  422ab8:	mov    edi,DWORD PTR [edi+eax*1]
  422abb:	mov    DWORD PTR [ebp-0x18],edi
  422abe:	mov    edi,DWORD PTR [ebp+0x8]
  422ac1:	xor    edi,ecx
  422ac3:	add    edi,edx
  422ac5:	mov    DWORD PTR [ebp-0x1c],edi
  422ac8:	mov    edi,DWORD PTR [ebp+0x8]
  422acb:	xor    edi,ecx
  422acd:	mov    ecx,DWORD PTR [ebp-0x18]
  422ad0:	add    edi,edx
  422ad2:	cmp    ecx,edi
  422ad4:	je     0x422b16
  422ada:	mov    ecx,DWORD PTR [ebp-0x18]
  422add:	add    ecx,eax
  422adf:	mov    DWORD PTR [ebp-0x1c],ecx
  422ae2:	mov    ecx,DWORD PTR [ebp-0x30]
  422ae5:	mov    edx,DWORD PTR [ebp-0x2c]
  422ae8:	mov    edx,0xa141
  422aed:	xor    cx,dx
  422af0:	mov    edx,DWORD PTR [ebp-0x1c]
  422af3:	mov    edx,DWORD PTR [edx+0xc]
  422af6:	add    cx,si
  422af9:	cmp    WORD PTR [eax+edx*1],cx
  422afd:	jne    0x422b16
  422b03:	mov    ecx,DWORD PTR ds:0x42a472
  422b09:	mov    ecx,DWORD PTR [ecx+0x198]
  422b0f:	mov    DWORD PTR [ecx],eax
  422b11:	jmp    0x422b4e
  422b16:	push   DWORD PTR [ebp+0x1c]
  422b19:	push   DWORD PTR [ebp+0x18]
  422b1c:	jmp    0x422b3d
  422b21:	mov    ecx,DWORD PTR [ebp+0x18]
  422b24:	mov    edx,DWORD PTR [ebp+0x1c]
  422b27:	cmp    ecx,0x70941f99
  422b2d:	jne    0x422b4e
  422b33:	cmp    edx,ebx
  422b35:	jne    0x422b4e
  422b3b:	push   ebx
  422b3c:	push   eax
  422b3d:	push   DWORD PTR [ebp+0x14]
  422b40:	push   DWORD PTR [ebp+0x10]
  422b43:	push   DWORD PTR [ebp+0xc]
  422b46:	push   DWORD PTR [ebp+0x8]
  422b49:	call   0x4224d2
  422b4e:	pop    edi
  422b4f:	pop    esi
  422b50:	pop    ebx
  422b51:	leave  
  422b52:	ret    0x18
  422b55:	push   ebp
  422b56:	mov    ebp,esp
  422b58:	and    esp,0xfffffff8
  422b5b:	sub    esp,0x3fc
  422b61:	or     DWORD PTR ds:0x42b1a6,0x42b1c2
  422b6b:	push   ebx
  422b6c:	xor    DWORD PTR ds:0x42b216,0x42b1b6
  422b76:	push   esi
  422b77:	push   edi
  422b78:	or     DWORD PTR ds:0x42b19e,0x42b192
  422b82:	lea    eax,[esp+0x1b8]
  422b89:	push   eax
  422b8a:	sub    DWORD PTR ds:0x42b222,0x377b
  422b94:	push   0x42a596
  422b99:	call   DWORD PTR ds:0x42b312
  422b9f:	mov    DWORD PTR ds:0x42b1ee,0x356c
  422ba9:	cmp    eax,0xffffffff
  422bac:	mov    DWORD PTR ds:0x42b1d6,0x3f42
  422bb6:	je     0x422bf9
  422bbc:	sub    DWORD PTR ds:0x42b206,0x3b29
  422bc6:	push   0x42a5ca
  422bcb:	adc    DWORD PTR ds:0x42b1a6,0xd7b
  422bd5:	push   0x89677644
  422bda:	adc    DWORD PTR ds:0x42b226,0x42b22a
  422be4:	call   DWORD PTR ds:0x42b2e2
  422bea:	mov    DWORD PTR ds:0x42b1da,0xf4c
  422bf4:	jmp    0x423de7
  422bf9:	and    DWORD PTR ds:0x42b202,0xcb9
  422c03:	mov    esi,DWORD PTR ds:0x42b302
  422c09:	add    DWORD PTR ds:0x42b21e,0x42b22a
  422c13:	push   0xf
  422c15:	lea    eax,[esp+0x44]
  422c19:	push   eax
  422c1a:	push   0x42a5de
  422c1f:	push   0x42a5f2
  422c24:	mov    DWORD PTR ds:0x42b19a,0x6718
  422c2e:	push   0x42a616
  422c33:	add    DWORD PTR ds:0x42b1fe,0x42b1be
  422c3d:	call   esi
  422c3f:	imul   eax,eax,0x300000
  422c45:	cmp    eax,0x1b00000
  422c4a:	mov    DWORD PTR ds:0x42b1a6,0x2dc4
  422c54:	je     0x422c6b
  422c5a:	xor    eax,eax
  422c5c:	mov    DWORD PTR ds:0x42b18e,0x4419
  422c66:	jmp    0x423de7
  422c6b:	add    DWORD PTR ds:0x42b19e,0x42b1e6
  422c75:	lea    eax,[esp+0x78]
  422c79:	or     DWORD PTR ds:0x42b1b2,0x1042
  422c83:	push   eax
  422c84:	add    DWORD PTR ds:0x42b1a6,0x42b1e2
  422c8e:	push   0xffffffff
  422c90:	xor    DWORD PTR ds:0x42b1be,0x42b22a
  422c9a:	call   DWORD PTR ds:0x42b30a
  422ca0:	test   eax,eax
  422ca2:	mov    DWORD PTR ds:0x42b192,0x385a
  422cac:	jne    0x422c5a
  422cb2:	and    DWORD PTR ds:0x42b1de,0x0
  422cbc:	jmp    0x422cce
  422cc1:	mov    edi,DWORD PTR ds:0x42b1de
  422cc7:	inc    edi
  422cc8:	mov    DWORD PTR ds:0x42b1de,edi
  422cce:	cmp    DWORD PTR ds:0x42b1de,0x1d
  422cd5:	jae    0x422d1a
  422cdb:	cmp    DWORD PTR ds:0x42b1de,0xe
  422ce2:	jg     0x422d1a
  422ce8:	jmp    0x422cf9
  422ced:	push   DWORD PTR [ebp-0x10]
  422cf0:	push   DWORD PTR [ebp-0x14]
  422cf3:	call   DWORD PTR ds:0x42b31a
  422cf9:	cmp    DWORD PTR ds:0x42b1de,0xd
  422d00:	jne    0x422d15
  422d06:	xor    edi,edi
  422d08:	or     edi,DWORD PTR ds:0x42b1de
  422d0e:	inc    edi
  422d0f:	mov    DWORD PTR ds:0x42b1de,edi
  422d15:	jmp    0x422cc1
  422d1a:	mov    DWORD PTR [esp+0x30],eax
  422d1e:	mov    ecx,0xf89c85a5
  422d23:	and    DWORD PTR ds:0x42b20e,0x0
  422d2d:	mov    edx,DWORD PTR ds:0x42b20e
  422d33:	inc    edx
  422d34:	mov    DWORD PTR ds:0x42b20e,edx
  422d3a:	cmp    DWORD PTR ds:0x42b20e,0x21
  422d41:	jl     0x422d73
  422d47:	jmp    0x422d66
  422d4c:	push   0x42b1a2
  422d51:	push   0x1a2f
  422d56:	push   0x42a26b
  422d5b:	push   0x42a000
  422d60:	call   DWORD PTR ds:0x42b31e
  422d66:	cmp    DWORD PTR ds:0x42b20e,0x13
  422d6d:	jb     0x422d2d
  422d73:	mov    DWORD PTR [esp+0x18],ecx
  422d77:	mov    ebx,DWORD PTR ds:0x42b28e
  422d7d:	mov    edx,DWORD PTR ds:0x42b2be
  422d83:	sub    edx,ebx
  422d85:	add    ebx,DWORD PTR [ebx+edx*1]
  422d88:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  422d90:	mov    ebx,DWORD PTR ds:0x42b26a
  422d96:	xor    edx,edx
  422d98:	or     edx,DWORD PTR ds:0x42b2aa
  422d9e:	sub    ebx,edx
  422da0:	and    ebx,DWORD PTR [ebx+edx*1]
  422da3:	lea    eax,[esp+0x3c]
  422da7:	or     edi,0x6d65
  422dad:	mov    DWORD PTR [esp+0x30],eax
  422db1:	adc    DWORD PTR ds:0x42b212,0x17e9
  422dbb:	lea    eax,[esp+0x38]
  422dbf:	and    DWORD PTR ds:0x42b20a,0x0
  422dc9:	mov    edx,DWORD PTR ds:0x42b20a
  422dcf:	inc    edx
  422dd0:	mov    DWORD PTR ds:0x42b20a,edx
  422dd6:	cmp    DWORD PTR ds:0x42b20a,0xc
  422ddd:	jle    0x422e18
  422de3:	jmp    0x422df1
  422de8:	push   DWORD PTR [ebp-0x14]
  422deb:	call   DWORD PTR ds:0x42b322
  422df1:	cmp    DWORD PTR ds:0x42b20a,0xb
  422df8:	jne    0x422e0b
  422dfe:	mov    edx,DWORD PTR ds:0x42b20a
  422e04:	inc    edx
  422e05:	mov    DWORD PTR ds:0x42b20a,edx
  422e0b:	cmp    DWORD PTR ds:0x42b20a,0x12
  422e12:	jb     0x422dc9
  422e18:	mov    DWORD PTR [esp+0x20],eax
  422e1c:	xor    edx,edx
  422e1e:	add    edx,DWORD PTR ds:0x42b292
  422e24:	mov    eax,ds:0x42b29a
  422e29:	sub    eax,edx
  422e2b:	add    edx,DWORD PTR [edx+eax*1]
  422e2e:	mov    eax,ds:0x42a472
  422e33:	mov    eax,DWORD PTR [eax+0x1c8]
  422e39:	mov    eax,DWORD PTR [eax]
  422e3b:	adc    edi,0x4659
  422e41:	mov    edx,DWORD PTR [esp+0x20]
  422e45:	xor    ebx,ebx
  422e47:	mov    edi,0x75108ae
  422e4c:	adc    ebx,DWORD PTR ds:0x42b226
  422e52:	xor    eax,edi
  422e54:	mov    ebx,DWORD PTR ds:0x42b1d2
  422e5a:	sbb    ebx,DWORD PTR ds:0x42b1ca
  422e60:	mov    DWORD PTR ds:0x42b1d2,ebx
  422e66:	mov    ebx,0x3272f5
  422e6b:	add    eax,ebx
  422e6d:	mov    DWORD PTR ds:0x42b182,0x4af1
  422e77:	mov    DWORD PTR [edx],eax
  422e79:	mov    eax,ds:0x42b042
  422e7e:	cmp    eax,0x455dedfa
  422e83:	jne    0x422fd8
  422e89:	and    DWORD PTR ds:0x42b1c6,0x0
  422e93:	mov    eax,ds:0x42b1c6
  422e98:	inc    eax
  422e99:	mov    ds:0x42b1c6,eax
  422e9e:	cmp    DWORD PTR ds:0x42b1c6,0x9
  422ea5:	ja     0x422ede
  422eab:	jmp    0x422eb9
  422eb0:	push   DWORD PTR [ebp-0x18]
  422eb3:	call   DWORD PTR ds:0x42b326
  422eb9:	cmp    DWORD PTR ds:0x42b1c6,0x8
  422ec0:	jne    0x422ed1
  422ec6:	mov    eax,ds:0x42b1c6
  422ecb:	inc    eax
  422ecc:	mov    ds:0x42b1c6,eax
  422ed1:	cmp    DWORD PTR ds:0x42b1c6,0x17
  422ed8:	jb     0x422e93
  422ede:	mov    eax,DWORD PTR [esp+0x18]
  422ee2:	and    DWORD PTR ds:0x42b1ca,0x0
  422eec:	jmp    0x422f00
  422ef1:	xor    edx,edx
  422ef3:	add    edx,DWORD PTR ds:0x42b1ca
  422ef9:	inc    edx
  422efa:	mov    DWORD PTR ds:0x42b1ca,edx
  422f00:	cmp    DWORD PTR ds:0x42b1ca,0x11
  422f07:	jae    0x422f60
  422f0d:	cmp    DWORD PTR ds:0x42b1ca,0x7
  422f14:	ja     0x422f60
  422f1a:	jmp    0x422f41
  422f1f:	push   0x42a04a
  422f24:	push   DWORD PTR [ebp-0x18]
  422f27:	push   0x268e
  422f2c:	push   0x3495
  422f31:	push   0x4b1a
  422f36:	push   0x4d1d
  422f3b:	call   DWORD PTR ds:0x42b2ea
  422f41:	cmp    DWORD PTR ds:0x42b1ca,0x6
  422f48:	jne    0x422f5b
  422f4e:	mov    edx,DWORD PTR ds:0x42b1ca
  422f54:	inc    edx
  422f55:	mov    DWORD PTR ds:0x42b1ca,edx
  422f5b:	jmp    0x422ef1
  422f60:	mov    edx,DWORD PTR ds:0x42a472
  422f66:	add    DWORD PTR ds:0x42b20e,0x42b1fe
  422f70:	mov    edx,DWORD PTR [edx+0x198]
  422f76:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  422f80:	xor    eax,edi
  422f82:	add    eax,ebx
  422f84:	sub    DWORD PTR ds:0x42b202,0x7175
  422f8e:	mov    DWORD PTR [edx],eax
  422f90:	sbb    DWORD PTR ds:0x42b1da,edi
  422f96:	mov    eax,DWORD PTR [esp+0x18]
  422f9a:	xor    eax,edi
  422f9c:	add    DWORD PTR ds:0x42b1f2,0x42b22a
  422fa6:	add    eax,ebx
  422fa8:	or     DWORD PTR ds:0x42b1c6,0x2272
  422fb2:	mov    ds:0x42b042,eax
  422fb7:	mov    eax,DWORD PTR [esp+0x18]
  422fbb:	xor    eax,edi
  422fbd:	adc    DWORD PTR ds:0x42b192,0x42b18e
  422fc7:	add    eax,ebx
  422fc9:	sbb    DWORD PTR ds:0x42b212,0x42b1b6
  422fd3:	mov    ds:0x42a56a,eax
  422fd8:	sub    DWORD PTR ds:0x42b1a6,edi
  422fde:	mov    eax,ds:0x42a472
  422fe3:	adc    DWORD PTR ds:0x42b1b2,0x42b206
  422fed:	mov    eax,DWORD PTR [eax+0x18c]
  422ff3:	adc    DWORD PTR ds:0x42b1ee,0x42b1da
  422ffd:	mov    eax,DWORD PTR [eax]
  422fff:	or     DWORD PTR ds:0x42b20e,0x42b1c6
  423009:	mov    DWORD PTR [esp+0x60],eax
  42300d:	not    eax
  42300f:	mov    eax,0xf89c85a1
  423014:	sbb    DWORD PTR ds:0x42b1d2,0xc9c
  42301e:	mov    DWORD PTR [esp+0x10],eax
  423022:	mov    DWORD PTR [esp+0x10],eax
  423026:	sbb    DWORD PTR ds:0x42b222,0x42b21e
  423030:	mov    DWORD PTR [esp+0x10],eax
  423034:	mov    DWORD PTR [esp+0x10],ecx
  423038:	sub    DWORD PTR ds:0x42b22a,0x42b1ce
  423042:	mov    DWORD PTR [esp+0x20],eax
  423046:	mov    DWORD PTR [esp+0x20],0xf89c85bd
  42304e:	and    DWORD PTR ds:0x42b1aa,0x45c4
  423058:	mov    eax,DWORD PTR [esp+0x18]
  42305c:	add    DWORD PTR ds:0x42b1c2,0x42b18a
  423066:	xor    eax,edi
  423068:	add    eax,ebx
  42306a:	jmp    0x4231b3
  42306f:	or     DWORD PTR ds:0x42b21a,0x42b18e
  423079:	lea    eax,[esp+0x1b8]
  423080:	push   eax
  423081:	push   0x42a646
  423086:	call   DWORD PTR ds:0x42b312
  42308c:	mov    DWORD PTR ds:0x42b1e2,0x6a7b
  423096:	cmp    eax,0xffffffff
  423099:	mov    DWORD PTR ds:0x42b1be,0xa85
  4230a3:	jne    0x422c5a
  4230a9:	xor    DWORD PTR ds:0x42b1ee,0x42b19a
  4230b3:	push   0xf
  4230b5:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  4230bf:	lea    eax,[esp+0x44]
  4230c3:	push   eax
  4230c4:	push   0x42a67a
  4230c9:	push   0x42a68e
  4230ce:	add    DWORD PTR ds:0x42b1ce,0x42b22a
  4230d8:	push   0x42a6b2
  4230dd:	dec    DWORD PTR ds:0x42b1f2
  4230e3:	call   esi
  4230e5:	imul   eax,eax,0x300000
  4230eb:	cmp    eax,0x1b00000
  4230f0:	jne    0x422c5a
  4230f6:	sbb    DWORD PTR ds:0x42b1be,0x817
  423100:	lea    eax,[esp+0x78]
  423104:	push   eax
  423105:	or     DWORD PTR ds:0x42b18e,0x42b1e2
  42310f:	push   0xffffffff
  423111:	add    DWORD PTR ds:0x42b1d6,0x42b18a
  42311b:	call   DWORD PTR ds:0x42b30a
  423121:	xor    DWORD PTR ds:0x42b1fe,0x42b19e
  42312b:	test   eax,eax
  42312d:	mov    DWORD PTR ds:0x42b20e,0x786b
  423137:	jne    0x422c5a
  42313d:	mov    eax,DWORD PTR [esp+0xc]
  423141:	mov    ecx,DWORD PTR [esp+0x20]
  423145:	or     DWORD PTR ds:0x42b1fa,0x5b03
  42314f:	xor    eax,edi
  423151:	and    DWORD PTR ds:0x42b182,0x42b1da
  42315b:	lea    eax,[eax+ecx*1+0x3272f5]
  423162:	push   eax
  423163:	sub    DWORD PTR ds:0x42b1fe,ecx
  423169:	mov    eax,DWORD PTR [esp+0x14]
  42316d:	xor    eax,edi
  42316f:	lea    eax,[ebp+eax*1+0x3272fd]
  423176:	add    DWORD PTR ds:0x42b212,0x505
  423180:	push   eax
  423181:	adc    eax,0xe25
  423186:	mov    eax,ds:0x42a472
  42318b:	push   DWORD PTR [eax+0x1bc]
  423191:	and    DWORD PTR ds:0x42b186,0x42b1b6
  42319b:	call   0x423df0
  4231a0:	mov    eax,DWORD PTR [esp+0xc]
  4231a4:	neg    edx
  4231a6:	mov    ecx,DWORD PTR [esp+0x20]
  4231aa:	xor    eax,edi
  4231ac:	lea    eax,[ecx+eax*1+0x3272f5]
  4231b3:	adc    ecx,DWORD PTR ds:0x42b1fa
  4231b9:	mov    ecx,DWORD PTR [esp+0xc]
  4231bd:	add    DWORD PTR ds:0x42b1ce,edi
  4231c3:	mov    edx,DWORD PTR [esp+0xc]
  4231c7:	and    DWORD PTR ds:0x42b1aa,0x42b186
  4231d1:	xor    edx,edi
  4231d3:	xor    ecx,edi
  4231d5:	not    DWORD PTR ds:0x42b1e6
  4231db:	add    ecx,edx
  4231dd:	mov    edx,DWORD PTR ds:0x42b20a
  4231e3:	and    DWORD PTR ds:0x42b222,edx
  4231e9:	mov    edx,DWORD PTR [esp+0xc]
  4231ed:	xor    edx,edi
  4231ef:	mov    DWORD PTR ds:0x42b182,0x14ab
  4231f9:	lea    ecx,[ecx+edx*1+0x9758df]
  423200:	mov    DWORD PTR ds:0x42b1e2,0x2305
  42320a:	mov    DWORD PTR [esp+0x20],eax
  42320e:	cmp    eax,ecx
  423210:	jbe    0x42306f
  423216:	xor    eax,ecx
  423218:	mov    eax,DWORD PTR [ebp+0xc]
  42321b:	adc    DWORD PTR ds:0x42b186,edi
  423221:	mov    ds:0x42a2f6,eax
  423226:	mov    ecx,DWORD PTR ds:0x42b1fe
  42322c:	adc    DWORD PTR ds:0x42b1f2,ecx
  423232:	mov    eax,DWORD PTR [ebp+0x10]
  423235:	inc    ecx
  423236:	mov    ds:0x42a552,eax
  42323b:	mov    eax,ds:0x42a2f6
  423240:	and    DWORD PTR ds:0x42b1b6,ebx
  423246:	mov    ecx,DWORD PTR [esp+0x30]
  42324a:	sub    eax,ebx
  42324c:	sbb    DWORD PTR ds:0x42b1be,0x1289
  423256:	xor    eax,edi
  423258:	xor    DWORD PTR ds:0x42b216,0x69d8
  423262:	mov    DWORD PTR [ecx],eax
  423264:	sub    DWORD PTR ds:0x42b1fe,0x6484
  42326e:	lea    eax,[esp+0x2c]
  423272:	mov    DWORD PTR [esp+0x6c],eax
  423276:	lea    eax,[ebp+0x4]
  423279:	sbb    DWORD PTR ds:0x42b1ba,0x4eab
  423283:	mov    DWORD PTR [esp+0x2c],eax
  423287:	lea    eax,[esp+0x1b8]
  42328e:	push   eax
  42328f:	xor    DWORD PTR ds:0x42b1b2,0x3d91
  423299:	push   0x42a6e2
  42329e:	mov    DWORD PTR ds:0x42b20e,0x4af0
  4232a8:	call   DWORD PTR ds:0x42b312
  4232ae:	cmp    eax,0xffffffff
  4232b1:	jne    0x422c5a
  4232b7:	push   0xf
  4232b9:	lea    eax,[esp+0x44]
  4232bd:	sub    DWORD PTR ds:0x42b20e,0x42b18a
  4232c7:	push   eax
  4232c8:	or     DWORD PTR ds:0x42b1ba,0x144a
  4232d2:	push   0x42a716
  4232d7:	push   0x42a72a
  4232dc:	sbb    DWORD PTR ds:0x42b1ba,0x42b182
  4232e6:	push   0x42a74e
  4232eb:	xor    DWORD PTR ds:0x42b19e,0x42b1fe
  4232f5:	call   esi
  4232f7:	imul   eax,eax,0x300000
  4232fd:	mov    DWORD PTR ds:0x42b1fa,0x26c3
  423307:	cmp    eax,0x1b00000
  42330c:	mov    DWORD PTR ds:0x42b19a,0x6081
  423316:	jne    0x422c5a
  42331c:	lea    eax,[esp+0x78]
  423320:	push   eax
  423321:	push   0xffffffff
  423323:	and    DWORD PTR ds:0x42b1e6,0x42b1aa
  42332d:	call   DWORD PTR ds:0x42b30a
  423333:	sbb    DWORD PTR ds:0x42b19a,0x42b1f6
  42333d:	test   eax,eax
  42333f:	mov    DWORD PTR ds:0x42b1a2,0x6ec1
  423349:	jne    0x422c5a
  42334f:	sub    DWORD PTR ds:0x42b1b2,0x1fda
  423359:	lea    eax,[esp+0x1b8]
  423360:	sbb    DWORD PTR ds:0x42b1fe,0x42b1ee
  42336a:	push   eax
  42336b:	push   0x42a77e
  423370:	adc    DWORD PTR ds:0x42b1f2,0x42b1c6
  42337a:	call   DWORD PTR ds:0x42b312
  423380:	mov    DWORD PTR ds:0x42b19e,0x2ae7
  42338a:	cmp    eax,0xffffffff
  42338d:	jne    0x422c5a
  423393:	adc    DWORD PTR ds:0x42b206,0x701e
  42339d:	push   0xf
  42339f:	lea    eax,[esp+0x44]
  4233a3:	or     DWORD PTR ds:0x42b18e,0x5b00
  4233ad:	push   eax
  4233ae:	push   0x42a7b2
  4233b3:	dec    DWORD PTR ds:0x42b1ba
  4233b9:	push   0x42a7c6
  4233be:	push   0x42a7ea
  4233c3:	sub    DWORD PTR ds:0x42b1e6,0x42b20e
  4233cd:	call   esi
  4233cf:	imul   eax,eax,0x300000
  4233d5:	mov    DWORD PTR ds:0x42b1be,0x6087
  4233df:	cmp    eax,0x1b00000
  4233e4:	mov    DWORD PTR ds:0x42b1d6,0x2e79
  4233ee:	jne    0x422c5a
  4233f4:	lea    eax,[esp+0x78]
  4233f8:	and    DWORD PTR ds:0x42b21e,0x6601
  423402:	push   eax
  423403:	add    DWORD PTR ds:0x42b206,0x4958
  42340d:	push   0xffffffff
  42340f:	and    DWORD PTR ds:0x42b1fa,0x42b1aa
  423419:	call   DWORD PTR ds:0x42b30a
  42341f:	mov    DWORD PTR ds:0x42b222,0x2f7c
  423429:	test   eax,eax
  42342b:	jne    0x422c5a
  423431:	and    DWORD PTR ds:0x42b1e2,0x6b99
  42343b:	lea    eax,[esp+0x1b8]
  423442:	push   eax
  423443:	add    DWORD PTR ds:0x42b22a,0x61ec
  42344d:	push   0x42a81a
  423452:	call   DWORD PTR ds:0x42b312
  423458:	mov    DWORD PTR ds:0x42b1c6,0x2abd
  423462:	cmp    eax,0xffffffff
  423465:	jne    0x422c5a
  42346b:	sbb    DWORD PTR ds:0x42b202,0x42b212
  423475:	push   0xf
  423477:	sub    DWORD PTR ds:0x42b192,0x503c
  423481:	lea    eax,[esp+0x44]
  423485:	push   eax
  423486:	push   0x42a84e
  42348b:	push   0x42a862
  423490:	push   0x42a886
  423495:	call   esi
  423497:	and    DWORD PTR ds:0x42b1c6,0x7bbe
  4234a1:	imul   eax,eax,0x300000
  4234a7:	cmp    eax,0x1b00000
  4234ac:	mov    DWORD PTR ds:0x42b1fe,0x19ae
  4234b6:	jne    0x422c5a
  4234bc:	lea    eax,[esp+0x78]
  4234c0:	push   eax
  4234c1:	neg    DWORD PTR ds:0x42b19e
  4234c7:	push   0xffffffff
  4234c9:	call   DWORD PTR ds:0x42b30a
  4234cf:	sbb    DWORD PTR ds:0x42b1aa,0x42b21e
  4234d9:	test   eax,eax
  4234db:	mov    DWORD PTR ds:0x42b196,0x192f
  4234e5:	jne    0x422c5a
  4234eb:	or     DWORD PTR ds:0x42b186,0x42b22e
  4234f5:	lea    eax,[esp+0x1b8]
  4234fc:	push   eax
  4234fd:	push   0x42a8b6
  423502:	sbb    DWORD PTR ds:0x42b216,0x426f
  42350c:	call   DWORD PTR ds:0x42b312
  423512:	cmp    eax,0xffffffff
  423515:	mov    DWORD PTR ds:0x42b18e,0x3e1f
  42351f:	jne    0x422c5a
  423525:	push   0xf
  423527:	or     DWORD PTR ds:0x42b182,0x42b1da
  423531:	lea    eax,[esp+0x44]
  423535:	push   eax
  423536:	push   0x42a8ea
  42353b:	xor    DWORD PTR ds:0x42b226,0x42b20a
  423545:	push   0x42a8fe
  42354a:	sub    DWORD PTR ds:0x42b226,0x42b22a
  423554:	push   0x42a922
  423559:	add    DWORD PTR ds:0x42b216,0x42b1d6
  423563:	call   esi
  423565:	add    DWORD PTR ds:0x42b1f6,0x38e
  42356f:	imul   eax,eax,0x300000
  423575:	mov    DWORD PTR ds:0x42b19a,0x2257
  42357f:	cmp    eax,0x1b00000
  423584:	mov    DWORD PTR ds:0x42b21a,0x2a1a
  42358e:	jne    0x422c5a
  423594:	adc    DWORD PTR ds:0x42b206,0x42b1a6
  42359e:	lea    eax,[esp+0x78]
  4235a2:	or     DWORD PTR ds:0x42b22e,0x42b1ca
  4235ac:	push   eax
  4235ad:	push   0xffffffff
  4235af:	call   DWORD PTR ds:0x42b30a
  4235b5:	and    DWORD PTR ds:0x42b182,0x42b1a6
  4235bf:	test   eax,eax
  4235c1:	mov    DWORD PTR ds:0x42b1aa,0x4002
  4235cb:	jne    0x422c5a
  4235d1:	dec    DWORD PTR ds:0x42b212
  4235d7:	lea    eax,[esp+0x1b8]
  4235de:	dec    DWORD PTR ds:0x42b18e
  4235e4:	push   eax
  4235e5:	or     DWORD PTR ds:0x42b1ea,0x42b212
  4235ef:	push   0x42a952
  4235f4:	add    DWORD PTR ds:0x42b202,0x42b216
  4235fe:	call   DWORD PTR ds:0x42b312
  423604:	cmp    eax,0xffffffff
  423607:	mov    DWORD PTR ds:0x42b212,0x6bd3
  423611:	jne    0x422c5a
  423617:	push   0xf
  423619:	add    DWORD PTR ds:0x42b1da,0x37be
  423623:	lea    eax,[esp+0x44]
  423627:	xor    DWORD PTR ds:0x42b216,0x42b21e
  423631:	push   eax
  423632:	push   0x42a986
  423637:	sub    DWORD PTR ds:0x42b1be,0x5164
  423641:	push   0x42a99a
  423646:	push   0x42a9be
  42364b:	or     DWORD PTR ds:0x42b182,0x42b21e
  423655:	call   esi
  423657:	and    DWORD PTR ds:0x42b20e,0x1f3e
  423661:	imul   eax,eax,0x300000
  423667:	mov    DWORD PTR ds:0x42b1ee,0x7e45
  423671:	cmp    eax,0x1b00000
  423676:	jne    0x422c5a
  42367c:	add    DWORD PTR ds:0x42b182,0x42b1b2
  423686:	lea    eax,[esp+0x78]
  42368a:	sub    DWORD PTR ds:0x42b1c6,0x42b1a6
  423694:	push   eax
  423695:	sbb    DWORD PTR ds:0x42b1b2,0x42b18a
  42369f:	push   0xffffffff
  4236a1:	adc    DWORD PTR ds:0x42b212,0x32d0
  4236ab:	call   DWORD PTR ds:0x42b30a
  4236b1:	or     DWORD PTR ds:0x42b1f2,0x42b1fe
  4236bb:	test   eax,eax
  4236bd:	jne    0x422c5a
  4236c3:	and    DWORD PTR ds:0x42b186,0x42b1fa
  4236cd:	lea    eax,[esp+0x1b8]
  4236d4:	xor    DWORD PTR ds:0x42b202,0x42b1fa
  4236de:	push   eax
  4236df:	push   0x42a9ee
  4236e4:	call   DWORD PTR ds:0x42b312
  4236ea:	mov    DWORD PTR ds:0x42b1ea,0x2426
  4236f4:	cmp    eax,0xffffffff
  4236f7:	mov    DWORD PTR ds:0x42b20a,0x3daf
  423701:	jne    0x422c5a
  423707:	sub    DWORD PTR ds:0x42b1e6,0x42b22a
  423711:	push   0xf
  423713:	adc    DWORD PTR ds:0x42b1ee,0x42b20a
  42371d:	lea    eax,[esp+0x44]
  423721:	and    DWORD PTR ds:0x42b20a,0x3b25
  42372b:	push   eax
  42372c:	push   0x42aa22
  423731:	sub    DWORD PTR ds:0x42b1fe,0x42b21e
  42373b:	push   0x42aa36
  423740:	mov    DWORD PTR ds:0x42b1fa,0x4cb4
  42374a:	push   0x42aa5a
  42374f:	call   esi
  423751:	inc    DWORD PTR ds:0x42b1a2
  423757:	imul   eax,eax,0x300000
  42375d:	cmp    eax,0x1b00000
  423762:	mov    DWORD PTR ds:0x42b1ea,0x7ee6
  42376c:	jne    0x422c5a
  423772:	or     DWORD PTR ds:0x42b1ea,0x7d0f
  42377c:	lea    eax,[esp+0x78]
  423780:	mov    DWORD PTR ds:0x42b1aa,0x7d0c
  42378a:	push   eax
  42378b:	adc    DWORD PTR ds:0x42b1aa,0x4970
  423795:	push   0xffffffff
  423797:	and    DWORD PTR ds:0x42b212,0x37c9
  4237a1:	call   DWORD PTR ds:0x42b30a
  4237a7:	sbb    DWORD PTR ds:0x42b21e,0x7cde
  4237b1:	test   eax,eax
  4237b3:	mov    DWORD PTR ds:0x42b206,0x64c2
  4237bd:	jne    0x422c5a
  4237c3:	sub    DWORD PTR ds:0x42b1c6,0x42b182
  4237cd:	lea    eax,[esp+0x1b8]
  4237d4:	add    DWORD PTR ds:0x42b19e,0x42b1ee
  4237de:	push   eax
  4237df:	and    DWORD PTR ds:0x42b212,0x42b1de
  4237e9:	push   0x42aa8a
  4237ee:	sbb    DWORD PTR ds:0x42b20e,0x42b1fe
  4237f8:	call   DWORD PTR ds:0x42b312
  4237fe:	mov    DWORD PTR ds:0x42b222,0x5e52
  423808:	cmp    eax,0xffffffff
  42380b:	mov    DWORD PTR ds:0x42b19a,0x4e9b
  423815:	jne    0x422c5a
  42381b:	or     DWORD PTR ds:0x42b1a6,0x4b96
  423825:	push   0xf
  423827:	lea    eax,[esp+0x44]
  42382b:	or     DWORD PTR ds:0x42b22e,0x42b192
  423835:	push   eax
  423836:	push   0x42aabe
  42383b:	push   0x42aad2
  423840:	push   0x42aaf6
  423845:	add    DWORD PTR ds:0x42b216,0x42b1ee
  42384f:	call   esi
  423851:	xor    DWORD PTR ds:0x42b1e2,0x982
  42385b:	imul   eax,eax,0x300000
  423861:	mov    DWORD PTR ds:0x42b1aa,0x5061
  42386b:	cmp    eax,0x1b00000
  423870:	jne    0x422c5a
  423876:	lea    eax,[esp+0x78]
  42387a:	xor    DWORD PTR ds:0x42b1fa,0x42b1ee
  423884:	push   eax
  423885:	push   0xffffffff
  423887:	call   DWORD PTR ds:0x42b30a
  42388d:	test   eax,eax
  42388f:	jne    0x422c5a
  423895:	add    DWORD PTR ds:0x42b21e,0x42b1ce
  42389f:	lea    eax,[esp+0x1b8]
  4238a6:	push   eax
  4238a7:	adc    DWORD PTR ds:0x42b1fe,0x6ad9
  4238b1:	push   0x42ab26
  4238b6:	or     DWORD PTR ds:0x42b1d6,0x42b1be
  4238c0:	call   DWORD PTR ds:0x42b312
  4238c6:	mov    DWORD PTR ds:0x42b216,0x33dc
  4238d0:	cmp    eax,0xffffffff
  4238d3:	mov    DWORD PTR ds:0x42b182,0x32d8
  4238dd:	jne    0x422c5a
  4238e3:	add    DWORD PTR ds:0x42b1b6,0x3dc0
  4238ed:	push   0xf
  4238ef:	lea    eax,[esp+0x44]
  4238f3:	xor    DWORD PTR ds:0x42b19a,0x42b1ce
  4238fd:	push   eax
  4238fe:	push   0x42ab5a
  423903:	add    DWORD PTR ds:0x42b1e6,0x62a8
  42390d:	push   0x42ab6e
  423912:	push   0x42ab92
  423917:	xor    DWORD PTR ds:0x42b19e,0x23c8
  423921:	call   esi
  423923:	xor    DWORD PTR ds:0x42b226,0x14f0
  42392d:	imul   eax,eax,0x300000
  423933:	mov    DWORD PTR ds:0x42b1ea,0x193b
  42393d:	cmp    eax,0x1b00000
  423942:	mov    DWORD PTR ds:0x42b1ee,0x7050
  42394c:	jne    0x422c5a
  423952:	or     DWORD PTR ds:0x42b1ce,0x3f0
  42395c:	lea    eax,[esp+0x78]
  423960:	push   eax
  423961:	push   0xffffffff
  423963:	call   DWORD PTR ds:0x42b30a
  423969:	test   eax,eax
  42396b:	jne    0x422c5a
  423971:	lea    eax,[esp+0x1b8]
  423978:	push   eax
  423979:	push   0x42abc2
  42397e:	call   DWORD PTR ds:0x42b312
  423984:	cmp    eax,0xffffffff
  423987:	jne    0x422c5a
  42398d:	push   0xf
  42398f:	lea    eax,[esp+0x44]
  423993:	push   eax
  423994:	push   0x42abf6
  423999:	push   0x42ac0a
  42399e:	push   0x42ac2e
  4239a3:	call   esi
  4239a5:	imul   eax,eax,0x300000
  4239ab:	cmp    eax,0x1b00000
  4239b0:	jne    0x422c5a
  4239b6:	lea    eax,[esp+0x78]
  4239ba:	push   eax
  4239bb:	push   0xffffffff
  4239bd:	call   DWORD PTR ds:0x42b30a
  4239c3:	test   eax,eax
  4239c5:	jne    0x422c5a
  4239cb:	lea    eax,[esp+0x1b8]
  4239d2:	push   eax
  4239d3:	push   0x42ac5e
  4239d8:	call   DWORD PTR ds:0x42b312
  4239de:	cmp    eax,0xffffffff
  4239e1:	jne    0x422c5a
  4239e7:	push   0xf
  4239e9:	lea    eax,[esp+0x44]
  4239ed:	push   eax
  4239ee:	push   0x42ac92
  4239f3:	push   0x42aca6
  4239f8:	push   0x42acca
  4239fd:	call   esi
  4239ff:	imul   eax,eax,0x300000
  423a05:	cmp    eax,0x1b00000
  423a0a:	jne    0x422c5a
  423a10:	lea    eax,[esp+0x78]
  423a14:	push   eax
  423a15:	push   0xffffffff
  423a17:	call   DWORD PTR ds:0x42b30a
  423a1d:	test   eax,eax
  423a1f:	jne    0x422c5a
  423a25:	lea    eax,[esp+0x1b8]
  423a2c:	push   eax
  423a2d:	push   0x42acfa
  423a32:	call   DWORD PTR ds:0x42b312
  423a38:	cmp    eax,0xffffffff
  423a3b:	jne    0x422c5a
  423a41:	push   0xf
  423a43:	lea    eax,[esp+0x44]
  423a47:	push   eax
  423a48:	push   0x42ad2e
  423a4d:	push   0x42ad42
  423a52:	push   0x42ad66
  423a57:	call   esi
  423a59:	imul   eax,eax,0x300000
  423a5f:	cmp    eax,0x1b00000
  423a64:	jne    0x422c5a
  423a6a:	lea    eax,[esp+0x78]
  423a6e:	push   eax
  423a6f:	push   0xffffffff
  423a71:	call   DWORD PTR ds:0x42b30a
  423a77:	test   eax,eax
  423a79:	jne    0x422c5a
  423a7f:	lea    eax,[esp+0x1b8]
  423a86:	push   eax
  423a87:	push   0x42ad96
  423a8c:	call   DWORD PTR ds:0x42b312
  423a92:	cmp    eax,0xffffffff
  423a95:	jne    0x422c5a
  423a9b:	push   0xf
  423a9d:	lea    eax,[esp+0x44]
  423aa1:	push   eax
  423aa2:	push   0x42adca
  423aa7:	push   0x42adde
  423aac:	push   0x42ae02
  423ab1:	call   esi
  423ab3:	imul   eax,eax,0x300000
  423ab9:	cmp    eax,0x1b00000
  423abe:	jne    0x422c5a
  423ac4:	lea    eax,[esp+0x78]
  423ac8:	push   eax
  423ac9:	push   0xffffffff
  423acb:	call   DWORD PTR ds:0x42b30a
  423ad1:	test   eax,eax
  423ad3:	jne    0x422c5a
  423ad9:	mov    eax,DWORD PTR [esp+0x3c]
  423add:	cmp    eax,0xf89c85a2
  423ae2:	je     0x423b41
  423ae8:	mov    eax,DWORD PTR [esp+0x18]
  423aec:	mov    ecx,DWORD PTR [esp+0x38]
  423af0:	xor    eax,edi
  423af2:	add    eax,ebx
  423af4:	cmp    eax,ecx
  423af6:	je     0x423b41
  423afc:	mov    eax,ds:0x42a472
  423b01:	mov    eax,DWORD PTR [eax+0x194]
  423b07:	mov    ecx,DWORD PTR [eax]
  423b09:	mov    eax,DWORD PTR [ecx+0x3c]
  423b0c:	push   DWORD PTR ds:0x42a552
  423b12:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423b16:	push   DWORD PTR ds:0x42a2f6
  423b1c:	add    eax,ecx
  423b1e:	mov    ecx,DWORD PTR ds:0x42a472
  423b24:	mov    ecx,DWORD PTR [ecx+0x194]
  423b2a:	push   DWORD PTR [ecx]
  423b2c:	call   eax
  423b2e:	mov    ecx,DWORD PTR ds:0x42a472
  423b34:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423b3a:	mov    DWORD PTR [ecx],eax
  423b3c:	jmp    0x423d6c
  423b41:	mov    eax,DWORD PTR [esp+0x18]
  423b45:	mov    ecx,DWORD PTR [esp+0x60]
  423b49:	xor    eax,edi
  423b4b:	add    eax,ebx
  423b4d:	cmp    eax,ecx
  423b4f:	jne    0x423bba
  423b55:	mov    eax,DWORD PTR [esp+0x18]
  423b59:	mov    ecx,DWORD PTR ds:0x42a472
  423b5f:	mov    ecx,DWORD PTR [ecx+0x198]
  423b65:	xor    eax,edi
  423b67:	add    eax,ebx
  423b69:	cmp    eax,DWORD PTR [ecx]
  423b6b:	jne    0x423b93
  423b71:	mov    eax,DWORD PTR [esp+0x18]
  423b75:	push   0xffffffff
  423b77:	push   0x70941f95
  423b7c:	xor    eax,edi
  423b7e:	add    eax,ebx
  423b80:	push   eax
  423b81:	push   0xf89c85a1
  423b86:	push   DWORD PTR [esp+0x1c]
  423b8a:	push   DWORD PTR [esp+0x2c]
  423b8e:	call   0x4224d2
  423b93:	push   DWORD PTR [esp+0xc]
  423b97:	push   DWORD PTR [esp+0x1c]
  423b9b:	call   0x401000
  423ba0:	mov    eax,DWORD PTR [esp+0x18]
  423ba4:	xor    eax,edi
  423ba6:	add    eax,ebx
  423ba8:	mov    ds:0x42a4fe,eax
  423bad:	mov    eax,DWORD PTR [esp+0x18]
  423bb1:	xor    eax,edi
  423bb3:	add    eax,ebx
  423bb5:	mov    ds:0x42a4f6,eax
  423bba:	mov    eax,DWORD PTR [esp+0x2c]
  423bbe:	test   eax,eax
  423bc0:	je     0x423d6c
  423bc6:	lea    eax,[esp+0x1b8]
  423bcd:	mov    DWORD PTR [esp+0x64],0xf152c3a
  423bd5:	push   eax
  423bd6:	mov    DWORD PTR [esp+0x78],0x712ed2f
  423bde:	mov    DWORD PTR [esp+0x74],0x373fc0d
  423be6:	push   0x42ae32
  423beb:	mov    DWORD PTR [esp+0x70],0x72670add
  423bf3:	call   DWORD PTR ds:0x42b312
  423bf9:	cmp    eax,0xffffffff
  423bfc:	jne    0x422c5a
  423c02:	push   0xf
  423c04:	lea    eax,[esp+0x44]
  423c08:	push   eax
  423c09:	push   0x42ae66
  423c0e:	push   0x42ae7a
  423c13:	push   0x42ae9e
  423c18:	call   esi
  423c1a:	imul   eax,eax,0x300000
  423c20:	cmp    eax,0x1b00000
  423c25:	jne    0x422c5a
  423c2b:	lea    eax,[esp+0x78]
  423c2f:	push   eax
  423c30:	push   0xffffffff
  423c32:	call   DWORD PTR ds:0x42b30a
  423c38:	test   eax,eax
  423c3a:	jne    0x422c5a
  423c40:	call   0x41b628
  423c45:	mov    eax,DWORD PTR [esp+0x34]
  423c49:	mov    eax,DWORD PTR [esp+0xc]
  423c4d:	mov    DWORD PTR [esp+0x30],eax
  423c51:	mov    eax,DWORD PTR [esp+0x18]
  423c55:	mov    DWORD PTR [esp+0xc],eax
  423c59:	mov    eax,eax
  423c5b:	mov    eax,ds:0x42a472
  423c60:	mov    ecx,DWORD PTR [eax+0x1c0]
  423c66:	mov    edx,DWORD PTR [ecx]
  423c68:	and    DWORD PTR [esp+0x14],0x0
  423c6d:	mov    esi,0xfabdbed4
  423c72:	add    edx,esi
  423c74:	adc    DWORD PTR [esp+0x14],0xffffffff
  423c79:	mov    ecx,0x8a29a141
  423c7e:	xor    edx,ecx
  423c80:	mov    DWORD PTR [esp+0x20],edx
  423c84:	mov    edx,DWORD PTR [esp+0x14]
  423c88:	xor    edx,0x0
  423c8b:	cmp    DWORD PTR [esp+0x20],0x70941f94
  423c93:	mov    DWORD PTR [esp+0x24],edx
  423c97:	jne    0x423ca6
  423c9d:	cmp    edx,0xffffffff
  423ca0:	je     0x423d0f
  423ca6:	mov    eax,DWORD PTR [eax+0x1c8]
  423cac:	mov    eax,DWORD PTR [eax]
  423cae:	cdq    
  423caf:	add    eax,esi
  423cb1:	adc    edx,0xffffffff
  423cb4:	and    DWORD PTR [esp+0x14],0x0
  423cb9:	xor    edx,0x0
  423cbc:	mov    DWORD PTR [esp+0x1c],edx
  423cc0:	mov    edx,DWORD PTR [esp+0xc]
  423cc4:	mov    DWORD PTR [esp+0x10],edx
  423cc8:	xor    eax,ecx
  423cca:	add    DWORD PTR [esp+0x10],esi
  423cce:	mov    edx,DWORD PTR [esp+0x10]
  423cd2:	adc    DWORD PTR [esp+0x14],0xffffffff
  423cd7:	xor    edx,ecx
  423cd9:	mov    DWORD PTR [esp+0x20],edx
  423cdd:	mov    edx,DWORD PTR [esp+0x14]
  423ce1:	xor    edx,0x0
  423ce4:	mov    DWORD PTR [esp+0x24],edx
  423ce8:	cmp    DWORD PTR [esp+0x20],eax
  423cec:	jne    0x423cfe
  423cf2:	mov    eax,DWORD PTR [esp+0x1c]
  423cf6:	cmp    edx,eax
  423cf8:	je     0x423d0f
  423cfe:	mov    eax,DWORD PTR [esp+0xc]
  423d02:	add    eax,DWORD PTR [esp+0x30]
  423d06:	mov    DWORD PTR [esp+0xc],eax
  423d0a:	jmp    0x423d6c
  423d0f:	mov    eax,ds:0x42a4f6
  423d14:	mov    edx,DWORD PTR ds:0x42a4fe
  423d1a:	xor    eax,edx
  423d1c:	mov    ds:0x42a4f6,eax
  423d21:	mov    edx,DWORD PTR ds:0x42a4f6
  423d27:	mov    eax,DWORD PTR [esp+0x2c]
  423d2b:	add    DWORD PTR [eax],edx
  423d2d:	mov    edx,DWORD PTR [esp+0xc]
  423d31:	mov    eax,ds:0x42a4f6
  423d36:	xor    edx,edi
  423d38:	add    edx,ebx
  423d3a:	xor    ebx,ebx
  423d3c:	add    edx,esi
  423d3e:	adc    ebx,0xffffffff
  423d41:	xor    edi,edi
  423d43:	xor    edx,ecx
  423d45:	xor    ebx,0x0
  423d48:	add    eax,esi
  423d4a:	adc    edi,0xffffffff
  423d4d:	xor    eax,ecx
  423d4f:	xor    edi,0x0
  423d52:	cmp    eax,edx
  423d54:	jne    0x423d6c
  423d5a:	cmp    edi,ebx
  423d5c:	jne    0x423d6c
  423d62:	mov    eax,ds:0x42a4f6
  423d67:	mov    ds:0x42a4fe,eax
  423d6c:	lea    eax,[esp+0x1b8]
  423d73:	push   eax
  423d74:	push   0x42aece
  423d79:	call   DWORD PTR ds:0x42b312
  423d7f:	cmp    eax,0xffffffff
  423d82:	jne    0x422c5a
  423d88:	push   0xf
  423d8a:	lea    eax,[esp+0x44]
  423d8e:	push   eax
  423d8f:	push   0x42af02
  423d94:	push   0x42af16
  423d99:	push   0x42af3a
  423d9e:	call   DWORD PTR ds:0x42b302
  423da4:	imul   eax,eax,0x300000
  423daa:	cmp    eax,0x1b00000
  423daf:	jne    0x422c5a
  423db5:	lea    eax,[esp+0x78]
  423db9:	push   eax
  423dba:	push   0xffffffff
  423dbc:	call   DWORD PTR ds:0x42b30a
  423dc2:	test   eax,eax
  423dc4:	jne    0x422c5a
  423dca:	mov    eax,ds:0x42a472
  423dcf:	push   0x4
  423dd1:	add    eax,0x1cc
  423dd6:	push   eax
  423dd7:	lea    eax,[esp+0x3c]
  423ddb:	push   eax
  423ddc:	call   0x423df0
  423de1:	mov    eax,DWORD PTR [esp+0x34]
  423de5:	mov    eax,DWORD PTR [eax]
  423de7:	pop    edi
  423de8:	pop    esi
  423de9:	pop    ebx
  423dea:	mov    esp,ebp
  423dec:	pop    ebp
  423ded:	ret    0xc
  423df0:	push   ebp
  423df1:	mov    ebp,esp
  423df3:	sub    esp,0x10
  423df6:	mov    eax,0xf89c85a5
  423dfb:	mov    DWORD PTR ds:0x42b222,0x14
  423e05:	cmp    DWORD PTR ds:0x42b222,0x0
  423e0c:	je     0x423e66
  423e12:	cmp    DWORD PTR ds:0x42b222,0x9
  423e19:	jbe    0x423e66
  423e1f:	jmp    0x423e38
  423e24:	push   0x42a03d
  423e29:	push   0x1
  423e2b:	push   0x1
  423e2d:	push   0x14be
  423e32:	call   DWORD PTR ds:0x42b2ee
  423e38:	cmp    DWORD PTR ds:0x42b222,0xa
  423e3f:	jne    0x423e54
  423e45:	xor    edx,edx
  423e47:	add    edx,DWORD PTR ds:0x42b222
  423e4d:	dec    edx
  423e4e:	mov    DWORD PTR ds:0x42b222,edx
  423e54:	mov    edx,DWORD PTR ds:0x42b222
  423e5a:	dec    edx
  423e5b:	mov    DWORD PTR ds:0x42b222,edx
  423e61:	jmp    0x423e05
  423e66:	mov    DWORD PTR [ebp-0x4],eax
  423e69:	and    DWORD PTR ds:0x42b1fa,0x0
  423e73:	jmp    0x423e85
  423e78:	mov    edx,DWORD PTR ds:0x42b1fa
  423e7e:	inc    edx
  423e7f:	mov    DWORD PTR ds:0x42b1fa,edx
  423e85:	cmp    DWORD PTR ds:0x42b1fa,0x19
  423e8c:	jae    0x423ece
  423e92:	cmp    DWORD PTR ds:0x42b1fa,0xc
  423e99:	jg     0x423ece
  423e9f:	jmp    0x423eaf
  423ea4:	push   0x863f
  423ea9:	call   DWORD PTR ds:0x42b2f2
  423eaf:	cmp    DWORD PTR ds:0x42b1fa,0xb
  423eb6:	jne    0x423ec9
  423ebc:	mov    edx,DWORD PTR ds:0x42b1fa
  423ec2:	inc    edx
  423ec3:	mov    DWORD PTR ds:0x42b1fa,edx
  423ec9:	jmp    0x423e78
  423ece:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  423ed5:	mov    edx,DWORD PTR ds:0x42b1aa
  423edb:	or     edx,DWORD PTR ds:0x42b1da
  423ee1:	mov    DWORD PTR ds:0x42b1aa,edx
  423ee7:	mov    ecx,DWORD PTR [ebp-0x4]
  423eea:	not    edx
  423eec:	push   esi
  423eed:	and    edx,esi
  423eef:	mov    edx,0x75108ae
  423ef4:	xor    ecx,edx
  423ef6:	adc    DWORD PTR ds:0x42b18e,ebx
  423efc:	mov    esi,0x3272f5
  423f01:	and    DWORD PTR ds:0x42b186,0x14f5
  423f0b:	push   edi
  423f0c:	adc    edi,DWORD PTR ds:0x42b1c2
  423f12:	mov    edi,DWORD PTR [ebp+0x10]
  423f15:	xor    DWORD PTR ds:0x42b1fa,0x42b1ce
  423f1f:	add    ecx,esi
  423f21:	mov    DWORD PTR ds:0x42b1da,0x1b10
  423f2b:	cmp    ecx,edi
  423f2d:	mov    DWORD PTR ds:0x42b1d6,0x199
  423f37:	je     0x42401c
  423f3d:	xor    edi,ecx
  423f3f:	mov    ecx,DWORD PTR [ebp-0x4]
  423f42:	sbb    DWORD PTR ds:0x42b202,0x792c
  423f4c:	mov    edi,DWORD PTR [ebp+0x10]
  423f4f:	sub    DWORD PTR ds:0x42b1ba,0xd36
  423f59:	xor    eax,eax
  423f5b:	xor    ecx,edx
  423f5d:	xor    DWORD PTR ds:0x42b216,0x49be
  423f67:	add    ecx,esi
  423f69:	add    edi,0xfabdbed4
  423f6f:	adc    eax,0xffffffff
  423f72:	xor    eax,0x0
  423f75:	mov    DWORD PTR [ebp-0xc],eax
  423f78:	push   ebx
  423f79:	xor    ebx,ebx
  423f7b:	xor    edi,0x8a29a141
  423f81:	mov    eax,ecx
  423f83:	add    eax,0xfabdbed4
  423f88:	adc    ebx,0xffffffff
  423f8b:	xor    eax,0x8a29a141
  423f90:	xor    ebx,0x0
  423f93:	cmp    eax,edi
  423f95:	jne    0x423fae
  423f9b:	cmp    ebx,DWORD PTR [ebp-0xc]
  423f9e:	je     0x424016
  423fa4:	jmp    0x423fae
  423fa9:	mov    esi,0x3272f5
  423fae:	mov    eax,DWORD PTR [ebp-0x4]
  423fb1:	mov    edi,DWORD PTR [ebp-0x8]
  423fb4:	xor    edi,edx
  423fb6:	add    edi,esi
  423fb8:	mov    esi,DWORD PTR [ebp+0x8]
  423fbb:	imul   edi,ecx
  423fbe:	mov    ebx,DWORD PTR [ebp+0xc]
  423fc1:	xor    eax,edx
  423fc3:	add    eax,ecx
  423fc5:	mov    al,BYTE PTR [ebx+eax*1+0x3272f5]
  423fcc:	mov    BYTE PTR [edi+esi*1],al
  423fcf:	mov    eax,DWORD PTR [ebp-0x8]
  423fd2:	mov    esi,DWORD PTR [ebp+0x10]
  423fd5:	xor    eax,edx
  423fd7:	xor    ebx,ebx
  423fd9:	add    esi,0xfabdbed4
  423fdf:	adc    ebx,0xffffffff
  423fe2:	lea    ecx,[ecx+eax*1+0x3272f5]
  423fe9:	xor    edi,edi
  423feb:	xor    esi,0x8a29a141
  423ff1:	xor    ebx,0x0
  423ff4:	mov    eax,ecx
  423ff6:	add    eax,0xfabdbed4
  423ffb:	adc    edi,0xffffffff
  423ffe:	xor    eax,0x8a29a141
  424003:	xor    edi,0x0
  424006:	cmp    eax,esi
  424008:	jne    0x423fa9
  42400e:	cmp    edi,ebx
  424010:	jne    0x423fa9
  424016:	mov    eax,0xf89c85a2
  42401b:	pop    ebx
  42401c:	pop    edi
  42401d:	pop    esi
  42401e:	leave  
  42401f:	ret    0xc
  424022:	push   ebp
  424023:	mov    ebp,esp
  424025:	push   ecx
  424026:	and    DWORD PTR ds:0x42b19e,0x0
  424030:	jmp    0x424043
  424035:	xor    eax,eax
  424037:	xor    eax,DWORD PTR ds:0x42b19e
  42403d:	inc    eax
  42403e:	mov    ds:0x42b19e,eax
  424043:	cmp    DWORD PTR ds:0x42b19e,0x14
  42404a:	jae    0x424072
  424050:	cmp    DWORD PTR ds:0x42b19e,0x1e
  424057:	jg     0x424072
  42405d:	jmp    0x42406d
  424062:	push   0x42b182
  424067:	call   DWORD PTR ds:0x42b2f6
  42406d:	jmp    0x424035
  424072:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424079:	and    DWORD PTR ds:0x42b1b2,0x0
  424083:	xor    ecx,ecx
  424085:	xor    ecx,DWORD PTR ds:0x42b1b2
  42408b:	inc    ecx
  42408c:	mov    DWORD PTR ds:0x42b1b2,ecx
  424092:	cmp    DWORD PTR ds:0x42b1b2,0x4
  424099:	jle    0x4240e5
  42409f:	jmp    0x4240be
  4240a4:	push   0x42b206
  4240a9:	push   0x42b1c6
  4240ae:	push   0x6e36
  4240b3:	push   0x42a0fe
  4240b8:	call   DWORD PTR ds:0x42b2fa
  4240be:	cmp    DWORD PTR ds:0x42b1b2,0x3
  4240c5:	jne    0x4240d8
  4240cb:	mov    ecx,DWORD PTR ds:0x42b1b2
  4240d1:	inc    ecx
  4240d2:	mov    DWORD PTR ds:0x42b1b2,ecx
  4240d8:	cmp    DWORD PTR ds:0x42b1b2,0x1b
  4240df:	jb     0x424083
  4240e5:	mov    eax,DWORD PTR [ebp+0x8]
  4240e8:	movsx  eax,BYTE PTR [eax]
  4240eb:	mov    edx,0x3272f5
  4240f0:	sub    eax,edx
  4240f2:	mov    ecx,0x75108ae
  4240f7:	xor    eax,ecx
  4240f9:	cmp    eax,0xf89c85f6
  4240fe:	jne    0x42412d
  424104:	mov    eax,DWORD PTR [ebp+0x8]
  424107:	push   esi
  424108:	mov    esi,DWORD PTR [ebp+0x8]
  42410b:	add    esi,DWORD PTR [eax+0x3c]
  42410e:	mov    DWORD PTR [ebp+0x8],esi
  424111:	mov    eax,DWORD PTR [ebp-0x4]
  424114:	mov    esi,DWORD PTR [ebp+0x8]
  424117:	xor    eax,ecx
  424119:	add    eax,edx
  42411b:	cmp    DWORD PTR [esi+0x54],eax
  42411e:	pop    esi
  42411f:	je     0x42412d
  424125:	mov    eax,DWORD PTR [ebp+0x8]
  424128:	jmp    0x424134
  42412d:	mov    eax,DWORD PTR [ebp-0x4]
  424130:	xor    eax,ecx
  424132:	add    eax,edx
  424134:	leave  
  424135:	ret    0x4
  424138:	push   ebp
  424139:	mov    ebp,esp
  42413b:	sub    esp,0xc
  42413e:	and    DWORD PTR ds:0x42b1c6,0x0
  424148:	jmp    0x42415a
  42414d:	mov    edx,DWORD PTR ds:0x42b1c6
  424153:	inc    edx
  424154:	mov    DWORD PTR ds:0x42b1c6,edx
  42415a:	cmp    DWORD PTR ds:0x42b1c6,0x1b
  424161:	jae    0x4241a8
  424167:	cmp    DWORD PTR ds:0x42b1c6,0xd
  42416e:	jle    0x4241a8
  424174:	jmp    0x424189
  424179:	push   0x42b216
  42417e:	push   0x42a1f3
  424183:	call   DWORD PTR ds:0x42b2fe
  424189:	cmp    DWORD PTR ds:0x42b1c6,0xc
  424190:	jne    0x4241a3
  424196:	mov    edx,DWORD PTR ds:0x42b1c6
  42419c:	inc    edx
  42419d:	mov    DWORD PTR ds:0x42b1c6,edx
  4241a3:	jmp    0x42414d
  4241a8:	push   esi
  4241a9:	and    DWORD PTR ds:0x42b222,0x0
  4241b3:	xor    esi,esi
  4241b5:	or     esi,DWORD PTR ds:0x42b222
  4241bb:	inc    esi
  4241bc:	mov    DWORD PTR ds:0x42b222,esi
  4241c2:	cmp    DWORD PTR ds:0x42b222,0x7
  4241c9:	jl     0x424211
  4241cf:	jmp    0x4241ea
  4241d4:	push   DWORD PTR [ebp-0x28]
  4241d7:	push   DWORD PTR [ebp-0x24]
  4241da:	push   0x42a1b7
  4241df:	push   0x400000
  4241e4:	call   DWORD PTR ds:0x42b306
  4241ea:	cmp    DWORD PTR ds:0x42b222,0x6
  4241f1:	jne    0x424204
  4241f7:	mov    esi,DWORD PTR ds:0x42b222
  4241fd:	inc    esi
  4241fe:	mov    DWORD PTR ds:0x42b222,esi
  424204:	cmp    DWORD PTR ds:0x42b222,0x15
  42420b:	jb     0x4241b3
  424211:	mov    esi,0xf89c85a5
  424216:	or     DWORD PTR ds:0x42b1d6,0x459e
  424220:	mov    DWORD PTR [ebp-0x8],esi
  424223:	and    DWORD PTR ds:0x42b1d6,0x0
  42422d:	jmp    0x424241
  424232:	xor    ecx,ecx
  424234:	xor    ecx,DWORD PTR ds:0x42b1d6
  42423a:	inc    ecx
  42423b:	mov    DWORD PTR ds:0x42b1d6,ecx
  424241:	cmp    DWORD PTR ds:0x42b1d6,0x1c
  424248:	jae    0x42428f
  42424e:	cmp    DWORD PTR ds:0x42b1d6,0xf
  424255:	jge    0x42428f
  42425b:	jmp    0x424270
  424260:	push   0x42a1a1
  424265:	push   0x0
  424267:	push   DWORD PTR [ebp-0x20]
  42426a:	call   DWORD PTR ds:0x42b30e
  424270:	cmp    DWORD PTR ds:0x42b1d6,0xe
  424277:	jne    0x42428a
  42427d:	mov    ecx,DWORD PTR ds:0x42b1d6
  424283:	inc    ecx
  424284:	mov    DWORD PTR ds:0x42b1d6,ecx
  42428a:	jmp    0x424232
  42428f:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424296:	push   edi
  424297:	mov    eax,eax
  424299:	mov    eax,DWORD PTR [ebp-0x4]
  42429c:	mov    edi,DWORD PTR [ebp-0x8]
  42429f:	mov    ecx,0x75108ae
  4242a4:	xor    eax,ecx
  4242a6:	xor    edi,ecx
  4242a8:	mov    edx,0x3272f5
  4242ad:	add    edi,edx
  4242af:	add    eax,edx
  4242b1:	imul   eax,edi
  4242b4:	mov    edi,DWORD PTR [ebp+0xc]
  4242b7:	jmp    0x425884
  4242bc:	jge    0x42427f
  4242be:	jnp    0x42427a
  4242c0:	mov    bh,0xb2
  4242c2:	mov    dl,0xbe
  4242c4:	jmp    0x4b2776ec
  4242c9:	retf   
  4242ca:	xchg   eax,ebx
  4242cc:	xchg   edx,eax
  4242cd:	xchg   ebp,eax
  4242ce:	add    BYTE PTR [ebx-0x7c7c932d],0x8a
  4242d5:	addr16 pop ecx
  4242d7:	mov    eax,0x982b17d7
  4242dc:	sub    bh,BYTE PTR [edi+0x1844f183]
  4242e2:	fstp   DWORD PTR [ebp+0x1f]
  4242e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242e6:	jne    0x424303
  4242e8:	repnz sub al,BYTE PTR [eax+0x75]
  4242ec:	stc    
  4242ed:	cmp    BYTE PTR [ebx+0x78],bh
  4242f0:	inc    esp
  4242f1:	mov    edx,0xb3ca134d
  4242f6:	popa   
  4242f7:	jb     0x424300
  4242f9:	fdiv   QWORD PTR [ebx]
  4242fb:	in     eax,0x10
  4242fd:	cli    
  4242fe:	mov    dl,0x58
  424300:	mov    al,0x35
  424302:	and    ah,BYTE PTR [ebx-0x2b38246e]
  424308:	xchg   edi,eax
  424309:	xchg   ebp,eax
  42430a:	sub    al,0x99
  42430c:	hlt    
  42430d:	cwde   
  42430e:	aaa    
  42430f:	mov    esi,0x17cb613a
  424314:	in     al,dx
  424315:	stos   DWORD PTR es:[edi],eax
  424316:	test   eax,0x47337e69
  42431b:	sub    ch,BYTE PTR [edi-0x7c]
  42431e:	jb     0x424322
  424320:	lods   eax,DWORD PTR ds:[esi]
  424321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424322:	jns    0x42437b
  424324:	push   eax
  424325:	mov    ds:0xa192466d,al
  42432a:	int3   
  42432b:	mov    bh,0xfb
  42432d:	cwde   
  42432e:	fsqrt  
  424330:	lods   al,BYTE PTR ds:[esi]
  424331:	or     eax,0x127df3c9
  424336:	cmc    
  424337:	outs   dx,BYTE PTR ds:[esi]
  424338:	in     al,0x59
  42433a:	test   al,0x1e
  42433c:	hlt    
  42433d:	xchg   ebx,esp
  42433f:	jnp    0x42433d
  424341:	sbb    DWORD PTR [edx-0x45aea008],0x3a71fef1
  42434b:	and    DWORD PTR [eax+0x1b472c9d],ebx
  424351:	out    dx,eax
  424352:	stos   DWORD PTR es:[edi],eax
  424353:	jmp    0x5ffcab15
  424358:	mov    ds,WORD PTR [edx]
  42435a:	mov    BYTE PTR [esi],0x1d
  42435d:	pop    ss
  42435e:	aam    0x4f
  424360:	xor    DWORD PTR ds:0x407a3055,edx
  424366:	fimul  WORD PTR [ebp-0x73078ce6]
  42436c:	or     al,0xfa
  42436e:	and    BYTE PTR [ebp-0x149aeed0],0x4c
  424375:	xchg   esp,eax
  424376:	pop    edx
  424377:	out    0x14,al
  424379:	cdq    
  42437a:	pushf  
  42437b:	jo     0x42437e
  42437d:	aam    0x60
  42437f:	int3   
  424380:	into   
  424381:	adc    al,0x2a
  424383:	jne    0x424377
  424385:	sbb    BYTE PTR [esi-0x41],0x7b
  424389:	ins    BYTE PTR es:[edi],dx
  42438a:	sub    DWORD PTR [eax+0x5d9b228d],edx
  424390:	scas   eax,DWORD PTR es:[edi]
  424391:	fdiv   st(7),st
  424393:	call   0xfa76:0xa4144a02
  42439a:	retf   
  42439b:	js     0x42432f
  42439d:	push   esp
  42439e:	mov    ch,0xf7
  4243a0:	jmp    0xe83b:0x449b7c15
  4243a7:	loopne 0x4243f7
  4243a9:	adc    eax,0xf330d372
  4243ae:	or     BYTE PTR [edx+0x995d8d7],ah
  4243b4:	pop    ebp
  4243b5:	cmc    
  4243b6:	mov    dh,0x6f
  4243b9:	or     ebx,DWORD PTR [eax+eiz*2]
  4243bc:	nop
  4243bd:	and    cl,bl
  4243bf:	cmp    ebx,eax
  4243c1:	xchg   ebx,eax
  4243c2:	mov    bl,0xac
  4243c4:	xchg   DWORD PTR [ecx],esi
  4243c6:	fs xchg esi,eax
  4243c8:	ds mov bl,0xfb
  4243cb:	push   edx
  4243cc:	test   DWORD PTR [ebx+edi*8],eax
  4243cf:	mov    cl,0x7b
  4243d1:	int    0x57
  4243d3:	cs leave 
  4243d5:	(bad)  
  4243d6:	rcl    ah,1
  4243d8:	jnp    0x42442c
  4243da:	retf   0xd579
  4243dd:	out    0x9f,eax
  4243df:	in     al,0xaa
  4243e1:	inc    edi
  4243e2:	out    0xa3,eax
  4243e4:	sti    
  4243e5:	mov    ch,0x1a
  4243e7:	push   ds
  4243e8:	push   ebp
  4243e9:	cmp    DWORD PTR [edi+0x50cb9c8],ebp
  4243ef:	adc    eax,0x9ef827d8
  4243f4:	rcl    DWORD PTR [ebp-0x677edf7d],cl
  4243fa:	xor    al,0xd8
  4243fc:	dec    ebp
  4243fd:	xchg   edi,eax
  4243fe:	jl     0x4243c9
  424400:	cmp    BYTE PTR [esp-0x5],dh
  424404:	mov    ebx,0xee6831dc
  424409:	clc    
  42440a:	fs xchg ax,ax
  42440d:	bound  ebp,QWORD PTR [ebx-0x6b6718b1]
  424413:	rol    DWORD PTR fs:[ecx+0x4b2efb4],cl
  42441a:	sub    al,0x63
  42441c:	in     eax,0x19
  42441e:	add    al,0x63
  424420:	push   edx
  424421:	xchg   ebx,eax
  424422:	repz and ebp,DWORD PTR [ecx+0x27]
  424426:	out    0x35,eax
  424428:	sahf   
  424429:	cmp    BYTE PTR [eax-0x6d],bl
  42442c:	loop   0x4243f1
  42442e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42442f:	jmp    0x7ef:0xb9aa621a
  424436:	jae    0x4244a0
  424438:	mov    DWORD PTR [esi+0x18],esi
  42443b:	cld    
  42443c:	jb     0x4243fb
  42443e:	(bad)  
  42443f:	adc    esp,DWORD PTR [eax+0xb]
  424442:	je     0x424435
  424444:	xor    DWORD PTR [ebx],edx
  424446:	imul   edi,DWORD PTR [edx+eiz*2],0xffffff8f
  42444a:	jmp    0x4244a6
  42444c:	mov    eax,0xb772393b
  424451:	idiv   DWORD PTR [esi-0x3b145e0e]
  424457:	mov    ah,0xef
  424459:	pop    esp
  42445a:	xlat   BYTE PTR ds:[ebx]
  42445b:	or     DWORD PTR ds:0x9d990cb2,0xd99dd16
  424465:	sub    eax,0xdecaa88e
  42446a:	dec    edx
  42446b:	pushf  
  42446c:	cmp    esi,edi
  42446e:	jnp    0x42449a
  424470:	push   ds
  424471:	gs jbe 0x424429
  424474:	pop    ds
  424475:	or     dh,bh
  424477:	aam    0xc6
  424479:	loopne 0x4244c0
  42447b:	int3   
  42447c:	call   0x991bebbf
  424481:	dec    ebx
  424482:	sbb    DWORD PTR [ebp+0xdaf9648],eax
  424488:	pop    ds
  424489:	(bad)  
  42448a:	jb     0x4244a4
  42448c:	popa   
  42448d:	and    ch,cl
  42448f:	outs   dx,BYTE PTR ds:[esi]
  424490:	(bad)  
  424491:	es inc edi
  424493:	push   ebx
  424494:	sub    al,0xa9
  424496:	adc    DWORD PTR [ebx-0x3d64a482],esp
  42449c:	inc    edi
  42449d:	pushf  
  42449e:	mov    cl,0xde
  4244a0:	sub    ch,BYTE PTR [ecx+ebx*4-0x42]
  4244a4:	sbb    edx,DWORD PTR [ecx]
  4244a6:	jae    0x4244d3
  4244a8:	sbb    eax,DWORD PTR [ecx-0x46]
  4244ab:	or     esp,DWORD PTR [esi+0x6a3d21c0]
  4244b1:	aam    0x1
  4244b3:	sti    
  4244b4:	adc    eax,0xe10341e6
  4244b9:	ins    DWORD PTR es:[edi],dx
  4244ba:	mov    ecx,0xaa68811e
  4244bf:	jne    0x424519
  4244c1:	idiv   ah
  4244c3:	xor    ah,al
  4244c5:	(bad)  [ebp+edi*8-0x23]
  4244c9:	shl    esp,cl
  4244cb:	(bad)  
  4244cc:	stc    
  4244cd:	jae    0x4244fd
  4244cf:	test   eax,0x180d9af3
  4244d4:	sar    BYTE PTR [eax+0x32],1
  4244d7:	(bad)  
  4244d8:	int    0x48
  4244da:	pop    ebx
  4244db:	push   es
  4244dc:	cwde   
  4244dd:	arpl   WORD PTR [eax+0x28742d3],dx
  4244e3:	mov    ecx,0xcfd676fe
  4244e8:	dec    ebx
  4244e9:	mov    edi,0xf3b47abe
  4244ee:	or     al,0x3e
  4244f0:	cld    
  4244f1:	dec    eax
  4244f2:	rol    DWORD PTR [esi],cl
  4244f4:	sti    
  4244f5:	call   0xbc19:0x7cbeafe0
  4244fc:	mov    ebx,0x24f24354
  424501:	ret    0xf1fd
  424504:	dec    ecx
  424505:	shl    BYTE PTR [esi+0x16a06f95],0x32
  42450c:	les    edx,FWORD PTR ds:0x618e8d23
  424512:	sub    BYTE PTR [eax],cl
  424514:	sub    DWORD PTR [eax],0x75
  424517:	dec    edi
  424518:	ss leavew 
  42451b:	mov    edx,gs
  42451d:	xlat   BYTE PTR ds:[ebx]
  42451e:	push   eax
  42451f:	je     0x4244d2
  424521:	dec    esi
  424522:	aas    
  424523:	in     al,dx
  424524:	mov    esp,0xe1803439
  424529:	dec    ebx
  42452a:	outs   dx,BYTE PTR ds:[esi]
  42452b:	push   eax
  42452c:	mov    ds:0x8a028036,eax
  424531:	fist   WORD PTR [ebp-0x54]
  424534:	shl    BYTE PTR [ebx],cl
  424536:	or     bl,BYTE PTR [edx]
  424538:	cmc    
  424539:	mov    edi,0x3576fe39
  42453e:	jno    0x4244c9
  424540:	cmp    dh,dl
  424542:	mov    esp,0xc6f3965d
  424547:	or     eax,0x687f9ce1
  42454c:	icebp  
  42454d:	ins    BYTE PTR es:[edi],dx
  42454e:	imul   edx,eax,0x29e80bd1
  424554:	shl    BYTE PTR [esi+0x394234b2],0x79
  42455b:	mov    al,ds:0x3bd5e2f
  424560:	mul    DWORD PTR [ebp-0x65fbe24e]
  424566:	push   ecx
  424567:	not    ebx
  424569:	fst    QWORD PTR ds:[edi+eax*8-0x23]
  42456e:	push   es
  42456f:	mov    DWORD PTR [ebx],edi
  424571:	pop    ebx
  424572:	and    eax,0xf59570ac
  424577:	daa    
  424578:	arpl   WORD PTR [edi-0x4026cc4d],bx
  42457e:	or     DWORD PTR [ebx],eax
  424580:	xor    cl,dh
  424582:	int    0x0
  424584:	popf   
  424585:	cmp    al,0xf3
  424587:	mov    ds:0xded3b85b,eax
  42458c:	sub    bh,dh
  42458e:	pop    ss
  42458f:	pop    ebp
  424590:	jae    0x424576
  424592:	xchg   ebx,eax
  424593:	push   eax
  424594:	push   ss
  424595:	sbb    esp,DWORD PTR [edi-0x69]
  424598:	xchg   BYTE PTR [edi+0xf],bl
  42459b:	popa   
  42459c:	push   ecx
  42459d:	mov    eax,ds:0x93a41593
  4245a2:	sbb    dl,BYTE PTR [ebx+eiz*4+0x183ca0f5]
  4245a9:	mov    cl,0x5a
  4245ab:	jl     0x4245f1
  4245ad:	dec    edi
  4245ae:	ret    
  4245af:	add    esp,ebx
  4245b1:	mov    ds:0x4c6f935f,al
  4245b6:	int3   
  4245b7:	rcr    bh,1
  4245b9:	xchg   ebx,eax
  4245ba:	cdq    
  4245bb:	popa   
  4245bc:	push   es
  4245bd:	inc    edi
  4245be:	cmp    DWORD PTR [edx-0x7141ae89],esp
  4245c4:	mov    edi,fs
  4245c6:	(bad)  
  4245c7:	stos   BYTE PTR es:[edi],al
  4245c8:	xchg   BYTE PTR [eax+0x38],dh
  4245cb:	sub    DWORD PTR ds:0xb7c53dbe,0xffffffee
  4245d2:	xchg   BYTE PTR [ecx-0x5a],cl
  4245d5:	jmp    0xf0bd4267
  4245da:	jge    0x42456b
  4245dc:	imul   ecx,DWORD PTR [ebp-0x21],0xffffffae
  4245e0:	dec    eax
  4245e1:	mov    edi,0x1e8d185e
  4245e6:	sub    DWORD PTR ds:0x5df405f5,0xffffffc4
  4245ed:	inc    eax
  4245ee:	cld    
  4245ef:	pop    ebp
  4245f0:	ss clc 
  4245f2:	dec    ebx
  4245f3:	mov    ecx,0x6ece2cb9
  4245f8:	sbb    DWORD PTR [edi+0x75444800],edi
  4245fe:	jo     0x4245e1
  424600:	push   ebx
  424601:	or     ah,BYTE PTR [edx-0x5c]
  424604:	fild   WORD PTR [ebx+edx*2+0x16]
  424608:	loope  0x424634
  42460a:	std    
  42460b:	sbb    al,0xc8
  42460d:	dec    esi
  42460e:	add    BYTE PTR [esi*8+0x197957e3],0xf9
  424616:	addr16 mov eax,ds:0x516c
  42461a:	sbb    ecx,eax
  42461c:	mov    bh,0x1a
  42461e:	pusha  
  42461f:	cmp    bl,BYTE PTR [ebp-0x3ce351ed]
  424625:	outs   dx,DWORD PTR ds:[esi]
  424626:	mov    eax,0x7dc0b816
  42462b:	xchg   esp,eax
  42462c:	(bad)  
  42462e:	sahf   
  42462f:	mov    cl,0xa1
  424631:	pop    eax
  424632:	jno    0x424667
  424634:	push   ss
  424635:	in     eax,dx
  424636:	shl    DWORD PTR [ebx+0x3241d1c0],0xf
  42463d:	xor    ebx,DWORD PTR [ebx-0x6b]
  424640:	push   0x7b468056
  424645:	jnp    0x42466e
  424647:	enter  0xe636,0x15
  42464b:	push   ss
  42464c:	adc    eax,0x7a08b79f
  424651:	ror    bh,1
  424653:	or     ch,BYTE PTR [esi+0x23]
  424656:	mov    ch,0x86
  424658:	pop    esp
  424659:	(bad)  [edi+0x38775f88]
  42465f:	adc    cl,BYTE PTR [ebx+edi*1-0x69]
  424663:	xor    DWORD PTR [ebx-0x4a],0x6d
  424667:	test   al,0x36
  424669:	adc    eax,DWORD PTR [edi+0x2bc22214]
  42466f:	ss shr ebx,0x5d
  424673:	mov    cl,0x53
  424675:	push   es
  424676:	lods   al,BYTE PTR ds:[esi]
  424677:	xchg   DWORD PTR [ebx],ecx
  424679:	call   0x9ddc:0x24fbd414
  424680:	test   al,0xb
  424682:	pop    ds
  424683:	sub    DWORD PTR ds:0xfe02732,0x5bd31d31
  42468d:	sahf   
  42468e:	cdq    
  42468f:	jmp    0x4246c2
  424691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424692:	or     al,0xd
  424694:	jns    0x42463c
  424696:	pop    ebx
  424697:	mov    al,ds:0x8477d849
  42469c:	jmp    0xfcbb:0x24aa1d71
  4246a3:	(bad)
  4246a6:	lahf   
  4246a7:	cdq    
  4246a8:	(bad)  
  4246a9:	imul   edx,DWORD PTR [ecx],0x97b8aa04
  4246af:	jmp    0x424637
  4246b1:	rol    DWORD PTR ds:0x2d9da51b,cl
  4246b7:	das    
  4246b8:	dec    eax
  4246b9:	lock test eax,0xa6c84355
  4246bf:	aad    0x40
  4246c1:	mov    cs,WORD PTR [esi]
  4246c3:	mov    ch,0xb2
  4246c5:	push   ecx
  4246c6:	push   esp
  4246c7:	jl     0x4246f8
  4246c9:	inc    eax
  4246ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246cb:	cmp    eax,0x6e913576
  4246d0:	repnz sub ax,0x60b6
  4246d5:	sbb    ecx,DWORD PTR ds:0x7f9086fe
  4246db:	jns    0x42466a
  4246dd:	repnz and edx,DWORD PTR [eax]
  4246e0:	(bad)  
  4246e1:	adc    DWORD PTR [eax+ebx*2-0x6d89cc85],esp
  4246e8:	fcmovnbe st,st(5)
  4246ea:	pop    ss
  4246eb:	fcomi  st,st(4)
  4246ed:	pop    eax
  4246ee:	retf   0xb66b
  4246f1:	sub    DWORD PTR [eax+esi*4],esp
  4246f4:	sub    eax,0x38254e3f
  4246f9:	in     al,0xb8
  4246fb:	push   ss
  4246fc:	outs   dx,BYTE PTR ds:[esi]
  4246fd:	sbb    ecx,0x7bbc2c3b
  424703:	and    al,0x10
  424705:	mov    al,ds:0x22386bdc
  42470a:	xchg   BYTE PTR [eax+0x7d],dl
  42470d:	ins    BYTE PTR es:[edi],dx
  42470e:	aad    0x33
  424710:	inc    eax
  424711:	fistp  QWORD PTR [edx-0xc]
  424714:	aad    0xfe
  424716:	je     0x4246ec
  424718:	retf   0x29cc
  42471b:	in     al,0x7e
  42471d:	pop    es
  42471e:	push   edi
  42471f:	test   DWORD PTR [ecx-0x1a],edx
  424722:	icebp  
  424723:	cs pushf 
  424725:	aas    
  424726:	dec    esp
  424727:	repz pop edx
  424729:	dec    ebx
  42472a:	cdq    
  42472b:	dec    ecx
  42472c:	mov    esp,0x4eed6a04
  424731:	or     cl,bh
  424733:	xor    DWORD PTR [ecx],edx
  424735:	xor    BYTE PTR [edx-0x6f],0x3b
  424739:	fstp   TBYTE PTR [edi-0x4e]
  42473c:	out    dx,eax
  42473d:	cwde   
  42473e:	ror    edx,cl
  424740:	int3   
  424741:	icebp  
  424742:	fistp  WORD PTR ds:0x4c90d426
  424748:	loop   0x4246ec
  42474a:	stc    
  42474b:	push   esi
  42474c:	les    esp,FWORD PTR [edx+0x67977ce3]
  424752:	test   al,0x7
  424754:	xchg   esp,eax
  424755:	mov    eax,ds:0x65362ad1
  42475a:	xor    al,ch
  42475c:	inc    edi
  42475d:	scas   al,BYTE PTR es:[edi]
  42475e:	retf   
  42475f:	adc    ch,BYTE PTR [esp+ebp*1]
  424762:	push   0xffffffa2
  424764:	pop    ecx
  424765:	adc    DWORD PTR [edi-0x43],edx
  424768:	into   
  424769:	jne    0x4247a8
  42476b:	mov    ds,WORD PTR [ecx+0x9dbfd20]
  424771:	mov    esp,0x99720b1b
  424776:	pop    ebp
  424777:	inc    eax
  424778:	ret    0x938d
  42477b:	dec    esi
  42477c:	sbb    BYTE PTR [edx],ch
  42477e:	fcmovu st,st(3)
  424780:	add    ah,BYTE PTR [eax]
  424782:	call   0x6014c96
  424787:	arpl   WORD PTR [edi+0x1f62d9f0],dx
  42478d:	mov    edi,0xbc881d37
  424792:	xor    DWORD PTR [edx+0x6a],ecx
  424795:	mov    DWORD PTR [eax-0xd4a6270],esp
  42479b:	pop    ebp
  42479c:	sti    
  42479d:	fs (bad) 
  42479f:	out    0x9b,eax
  4247a1:	ja     0x424746
  4247a3:	fwait
  4247a4:	out    0xd9,eax
  4247a6:	add    DWORD PTR [edx+eiz*8],ebp
  4247a9:	mov    ?,ebp
  4247ab:	inc    ebp
  4247ac:	dec    ebx
  4247ad:	pop    eax
  4247ae:	mov    ds:0x5943511,eax
  4247b3:	mov    WORD PTR [eax+0x6c],ds
  4247b6:	fistp  WORD PTR [ebx]
  4247b8:	inc    edx
  4247b9:	sar    BYTE PTR [ecx-0x15],1
  4247bc:	les    edx,FWORD PTR ds:[edi-0x7d]
  4247c0:	js     0x424800
  4247c2:	sub    bh,bh
  4247c4:	jge    0x42475a
  4247c6:	push   cs
  4247c7:	cmc    
  4247c8:	imul   ebp,DWORD PTR ds:0x35cc6716,0x5fce7edb
  4247d2:	sub    eax,DWORD PTR [esi-0x796a2abd]
  4247d8:	fdiv   DWORD PTR gs:[eax]
  4247db:	mov    ds:0x4632cb3e,al
  4247e0:	push   ebx
  4247e1:	ja     0x4247d8
  4247e3:	lods   al,BYTE PTR ds:[esi]
  4247e4:	loope  0x424780
  4247e6:	leave  
  4247e7:	gs fnclex 
  4247ea:	push   esi
  4247eb:	sbb    eax,0xa0d01fbc
  4247f0:	xchg   ebp,eax
  4247f1:	mov    dh,BYTE PTR cs:[esi]
  4247f4:	loop   0x42483f
  4247f6:	retf   
  4247f7:	cmp    cl,BYTE PTR [esi+eiz*2-0x6859e09a]
  4247fe:	and    eax,0x442f8b0b
  424803:	jne    0x42485a
  424805:	into   
  424806:	fdiv   QWORD PTR [ecx-0x5043bf6a]
  42480c:	fcmovu st,st(1)
  42480e:	jb     0x4247b7
  424810:	cld    
  424811:	ds mov esi,0xd8d66c55
  424817:	dec    ebx
  424818:	fiadd  WORD PTR [esi-0xb]
  42481b:	sbb    edx,esp
  42481d:	popa   
  42481e:	xchg   edx,eax
  42481f:	imul   edx,DWORD PTR [esi],0xdaac5b32
  424825:	xchg   ecx,eax
  424826:	jnp    0x424829
  424828:	and    dl,bh
  42482a:	lahf   
  42482b:	mov    ebp,0xfa73cc94
  424830:	dec    edi
  424831:	leave  
  424832:	push   ds
  424833:	adc    ebp,DWORD PTR [edi+0x200ba583]
  424839:	cdq    
  42483a:	retf   0x5f21
  42483d:	shr    BYTE PTR [eax],0x97
  424840:	and    BYTE PTR [ebx],bh
  424842:	cdq    
  424843:	aam    0xec
  424845:	dec    eax
  424846:	scas   al,BYTE PTR es:[edi]
  424847:	push   ebx
  424848:	arpl   WORD PTR [edi-0x58],si
  42484b:	dec    esp
  42484c:	pop    edx
  42484d:	sar    BYTE PTR [ebp-0x4f],0xc6
  424851:	xchg   esp,eax
  424852:	or     al,0xf8
  424854:	stc    
  424855:	inc    ebp
  424856:	sub    BYTE PTR [edi-0x74],bh
  424859:	xor    dl,dh
  42485b:	lock mov ch,0xb3
  42485e:	or     al,0x79
  424860:	fwait
  424861:	cdq    
  424862:	xor    eax,0x8457d61d
  424867:	and    DWORD PTR [ebp+0x110fa90a],ecx
  42486d:	adc    BYTE PTR [ebx+ecx*2-0x2ecbaa0e],dl
  424874:	sbb    DWORD PTR [ebp+eax*2+0x4424d988],ecx
  42487b:	outs   dx,DWORD PTR ds:[esi]
  42487c:	imul   ecx,DWORD PTR [ebx],0x559211df
  424882:	add    DWORD PTR [ecx*4-0xb2a2261],0xffffffbe
  42488a:	or     al,0x32
  42488c:	cmp    bl,BYTE PTR [ebp+0x63]
  42488f:	pop    esp
  424890:	jno    0x4248c8
  424892:	dec    eax
  424893:	jne    0x42490d
  424895:	mov    ebx,0x2215ea8b
  42489a:	xchg   ebx,eax
  42489b:	shl    dh,cl
  42489d:	dec    esp
  42489e:	fdiv   QWORD PTR [edi]
  4248a0:	mov    esi,0x20eb8f53
  4248a5:	pop    es
  4248a6:	idiv   DWORD PTR [edx]
  4248a8:	fs adc eax,0x419fb146
  4248ae:	retf   
  4248af:	push   ss
  4248b0:	xor    eax,0xaa423ec5
  4248b5:	and    esi,DWORD PTR [ebp-0x757ea48a]
  4248bb:	adc    eax,0xd3c1ac0b
  4248c0:	jp     0x424929
  4248c2:	in     al,dx
  4248c3:	mov    esp,0xc0d57121
  4248c8:	or     ah,BYTE PTR [ebp+0x29]
  4248cb:	cmc    
  4248cc:	mov    eax,ds:0xb30a5801
  4248d1:	js     0x42491e
  4248d3:	xor    ch,bl
  4248d5:	sbb    dl,BYTE PTR [eax]
  4248d7:	in     al,dx
  4248d8:	loopne 0x42494c
  4248da:	arpl   WORD PTR [esp+eax*8+0x6e2e57ef],bx
  4248e1:	aad    0xad
  4248e3:	mov    dh,0x44
  4248e5:	xor    eax,0xd837c8fd
  4248ea:	(bad)  
  4248eb:	push   ds
  4248ec:	inc    edx
  4248ed:	retf   
  4248ee:	mov    DWORD PTR [edx+0x169da0ea],esp
  4248f4:	adc    eax,0xe18f9dc0
  4248f9:	and    BYTE PTR [edi-0x64fb3972],al
  4248ff:	xchg   ebp,eax
  424900:	pop    edi
  424901:	adc    ebp,DWORD PTR [ebx+0x7745ed01]
  424907:	fisttp DWORD PTR cs:[esi]
  42490a:	mov    DWORD PTR cs:[ebp+0x6ffcc8b1],edx
  424911:	jge    0x42490f
  424913:	out    0x67,al
  424915:	xlat   BYTE PTR ds:[ebx]
  424916:	jl     0x42497e
  424918:	add    edx,ebp
  42491a:	push   cs
  42491b:	popf   
  42491c:	xor    al,BYTE PTR [ebp+0x70897e69]
  424922:	push   esi
  424923:	pop    eax
  424924:	leave  
  424925:	mov    cl,0x61
  424927:	in     al,dx
  424928:	loope  0x42492f
  42492a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42492b:	mul    eax
  42492d:	jne    0x424955
  42492f:	xchg   edi,eax
  424930:	jb     0x42496c
  424932:	push   ebx
  424933:	jl     0x424953
  424935:	stc    
  424936:	inc    eax
  424937:	mov    ds:0x6f01e434,al
  42493c:	and    dh,al
  42493e:	test   eax,0x316d7f99
  424943:	push   esp
  424944:	(bad)
  424947:	add    DWORD PTR [ecx+0x57],edx
  42494a:	leave  
  42494b:	dec    ebx
  42494c:	pop    edi
  42494d:	cmp    DWORD PTR [edi],0xffffffac
  424950:	repnz fidivr DWORD PTR [ecx+0x30]
  424954:	mov    eax,0x65dc09b5
  424959:	jge    0x424951
  42495b:	sub    DWORD PTR [esi],ecx
  42495d:	jmp    0x717518d9
  424962:	lahf   
  424963:	fidivr WORD PTR ds:0x1ebd01b6
  424969:	(bad)  
  42496a:	fsubr  DWORD PTR [edi-0x13]
  42496d:	lods   al,BYTE PTR ds:[esi]
  42496e:	or     edi,DWORD PTR [edx-0x6d]
  424971:	dec    esp
  424972:	in     eax,dx
  424973:	mov    edx,0xc772abe7
  424978:	mov    ah,0xa6
  42497a:	mov    WORD PTR [esi+0x55],?
  42497d:	xchg   ecx,eax
  42497e:	sbb    al,0xde
  424980:	push   eax
  424981:	icebp  
  424982:	mov    dh,0xf6
  424984:	cs mov ah,0xd2
  424987:	xchg   ebx,eax
  424988:	mov    ah,0x62
  42498a:	imul   ebx,DWORD PTR [edx-0x25f72ae],0x41badd7d
  424994:	push   ss
  424995:	and    al,0x1f
  424997:	(bad)  
  424998:	cmc    
  424999:	xchg   ebx,eax
  42499a:	add    esi,DWORD PTR [ecx-0x36]
  42499d:	ror    dl,1
  42499f:	cmp    DWORD PTR [ebp-0xf],0xd1a85ee1
  4249a6:	add    BYTE PTR [esi-0x419c6279],0x35
  4249ad:	pop    ebx
  4249ae:	cmp    DWORD PTR [edx-0x5f],edi
  4249b1:	jmp    0xf13d66ef
  4249b6:	jnp    0x4249e6
  4249b8:	fisttp QWORD PTR [ecx-0x78]
  4249bb:	push   ds
  4249bc:	jo     0x424a36
  4249be:	call   0xc79f:0xfb675503
  4249c5:	cmp    al,BYTE PTR [ecx+edx*4]
  4249c8:	rcl    BYTE PTR [edx],cl
  4249ca:	lods   eax,DWORD PTR ds:[esi]
  4249cb:	loopne 0x424a47
  4249cd:	add    DWORD PTR [eax+eiz*1-0x2c],ebp
  4249d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249d2:	dec    edi
  4249d3:	clc    
  4249d4:	jnp    0x4249e2
  4249d6:	enter  0xacdb,0xf0
  4249da:	jne    0x424966
  4249dc:	dec    eax
  4249dd:	inc    ecx
  4249de:	jae    0x424a07
  4249e0:	popa   
  4249e1:	add    al,0x7c
  4249e3:	mov    dl,0x7f
  4249e5:	jne    0x4249b9
  4249e7:	cli    
  4249e8:	and    BYTE PTR [esi-0x5b05ae43],dh
  4249ee:	sbb    eax,0x5b024c93
  4249f3:	jmp    0x42498c
  4249f5:	push   edi
  4249f6:	and    BYTE PTR [eax],0x5
  4249f9:	stos   DWORD PTR es:[edi],eax
  4249fa:	enter  0x8884,0x93
  4249fe:	push   esp
  4249ff:	(bad)  
  424a00:	mov    esi,0x31fb1b8d
  424a05:	mov    edi,0x86c088d9
  424a0a:	cmp    dl,dl
  424a0c:	sahf   
  424a0d:	out    dx,eax
  424a0e:	and    bl,bl
  424a10:	(bad)  
  424a11:	leave  
  424a12:	nop
  424a13:	push   edx
  424a14:	int3   
  424a15:	pop    edx
  424a16:	aas    
  424a17:	mov    bh,0x7
  424a19:	test   eax,0x7a565512
  424a1e:	mov    ch,0x75
  424a20:	mov    edx,0xd1981f65
  424a25:	sbb    bl,al
  424a27:	leave  
  424a28:	push   0x6c
  424a2a:	mov    edi,DWORD PTR [esi]
  424a2c:	push   edx
  424a2d:	inc    DWORD PTR [edx-0x6f]
  424a30:	scas   al,BYTE PTR es:[edi]
  424a31:	pop    ecx
  424a32:	pop    esi
  424a33:	and    ebx,DWORD PTR [edi-0x6a1795c5]
  424a39:	ror    DWORD PTR [edi],1
  424a3b:	lahf   
  424a3c:	pop    eax
  424a3d:	push   0x97f27fba
  424a42:	pop    edx
  424a43:	mov    ds:0x7b4ac105,al
  424a48:	aaa    
  424a49:	inc    ecx
  424a4a:	cmp    BYTE PTR [ebx],ch
  424a4c:	dec    edx
  424a4d:	fisttp DWORD PTR [esi+0xb5c8482]
  424a53:	mov    edi,0x4425700d
  424a58:	and    bh,BYTE PTR [esi]
  424a5a:	xor    eax,0x9156acff
  424a5f:	sbb    al,0xcc
  424a61:	jmp    0xb7250d98
  424a66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a67:	bound  ecx,QWORD PTR [ecx-0x6c]
  424a6a:	(bad)  
  424a6b:	cmp    dl,bl
  424a6d:	push   esp
  424a6e:	jg     0x424aa0
  424a70:	rol    BYTE PTR [ebx],cl
  424a72:	sbb    BYTE PTR [edi+0x56f9a8e8],0x5c
  424a79:	sbb    al,0x9b
  424a7b:	dec    esi
  424a7c:	sub    ecx,DWORD PTR [edx-0x46f7c9f9]
  424a82:	adc    al,0x6b
  424a84:	add    al,0x5a
  424a86:	cli    
  424a87:	mov    eax,0x995e7a1b
  424a8c:	mov    bh,0xc5
  424a8e:	jmp    0x424ae0
  424a90:	ret    0x2291
  424a93:	stc    
  424a94:	mov    edx,0xd849d401
  424a99:	xlat   BYTE PTR ds:[ebx]
  424a9a:	ds nop
  424a9c:	jne    0x424af5
  424a9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424a9f:	je     0x424a48
  424aa1:	jecxz  0x424a26
  424aa3:	cmp    eax,0x7fe9a8dd
  424aa8:	inc    esp
  424aa9:	outs   dx,BYTE PTR ds:[esi]
  424aaa:	push   es
  424aab:	(bad)  [ecx+eax*8+0x438ed764]
  424ab2:	mov    dh,0xb5
  424ab4:	std    
  424ab5:	push   edi
  424ab6:	lock call 0x529dd8fe
  424abc:	xchg   esp,eax
  424abd:	sar    bl,1
  424abf:	iret   
  424ac0:	test   DWORD PTR [edx+0x23],ebp
  424ac3:	cmp    edx,DWORD PTR [eax]
  424ac5:	fdivr  DWORD PTR [esp+ecx*1+0x66a8ab59]
  424acc:	retf   
  424acd:	out    0xdd,al
  424acf:	push   ecx
  424ad0:	push   ss
  424ad1:	xchg   edi,eax
  424ad2:	mov    al,ds:0x3248bd21
  424ad7:	mov    BYTE PTR [edi],al
  424ad9:	pop    es
  424ada:	sbb    BYTE PTR [ecx],ch
  424adc:	fnstsw WORD PTR [esi+0x371f1c50]
  424ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ae3:	cs pop edx
  424ae5:	mov    ebp,0x7a2ed2bf
  424aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424aeb:	sti    
  424aec:	mov    ds:0x9dd71ba8,al
  424af1:	or     eax,0xb6038c73
  424af6:	(bad)  
  424af7:	repnz outs dx,DWORD PTR ds:[esi]
  424af9:	fwait
  424afa:	pushf  
  424afb:	adc    al,0x89
  424afd:	xchg   esi,eax
  424afe:	xor    eax,0xef29a22f
  424b03:	leave  
  424b04:	push   0x9ab9d7e2
  424b09:	sbb    ch,BYTE PTR [esi+0x1e]
  424b0c:	adc    al,bh
  424b0e:	sbb    DWORD PTR [ebx],ebx
  424b10:	mov    edx,0x31284d16
  424b15:	aam    0xb3
  424b17:	add    al,0x3a
  424b19:	push   eax
  424b1a:	aad    0x85
  424b1c:	iret   
  424b1d:	add    BYTE PTR [eax-0x53],cl
  424b20:	or     al,0x26
  424b22:	push   ebp
  424b23:	push   0x17
  424b25:	test   al,0x6e
  424b27:	bound  ecx,QWORD PTR [edi-0x56afb563]
  424b2d:	(bad)  
  424b2e:	repz adc DWORD PTR [edx+0x69],esi
  424b32:	ror    ebx,0xa7
  424b35:	push   0x8403164e
  424b3a:	jns    0x424b0e
  424b3c:	pop    es
  424b3d:	dec    edi
  424b3e:	daa    
  424b3f:	fsub   QWORD PTR [esi]
  424b41:	lock adc eax,0x8bd3feb7
  424b47:	xlat   BYTE PTR ds:[ebx]
  424b48:	ds jne 0x424bc2
  424b4b:	sbb    eax,0xb04c594c
  424b50:	xor    edi,0x21797294
  424b56:	jp     0x424b74
  424b58:	push   ecx
  424b59:	cs push cs
  424b5b:	inc    eax
  424b5c:	xchg   BYTE PTR [edx],cl
  424b5e:	(bad)  
  424b60:	mov    BYTE PTR [ecx+edx*8-0x2472754d],bh
  424b67:	jecxz  0x424b92
  424b69:	add    al,cl
  424b6b:	jbe    0x424bda
  424b6d:	jg     0x424b06
  424b6f:	rol    esp,1
  424b71:	or     BYTE PTR [ebp+0x72],ch
  424b74:	xchg   ecx,eax
  424b75:	test   DWORD PTR [ebx],esi
  424b77:	mov    cl,0x3b
  424b79:	in     al,dx
  424b7a:	push   es
  424b7b:	sub    al,0x9a
  424b7d:	jg     0x424b1a
  424b7f:	or     DWORD PTR ds:0x5d2fc8d3,eax
  424b85:	loop   0x424b69
  424b87:	or     bl,al
  424b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b8a:	cwde   
  424b8b:	jmp    0x7ce2:0x9889746e
  424b92:	cmp    al,0x96
  424b94:	cwde   
  424b95:	inc    eax
  424b96:	inc    edi
  424b97:	inc    edx
  424b98:	aad    0xcc
  424b9a:	call   0xc8cfa4c2
  424b9f:	xor    DWORD PTR [edi],eax
  424ba1:	das    
  424ba2:	dec    edx
  424ba3:	lock push 0xec04d109
  424ba9:	in     eax,0x36
  424bab:	pusha  
  424bac:	sar    DWORD PTR [ecx+0x2d8fb83c],0x7a
  424bb3:	jne    0x424c07
  424bb5:	repnz sub DWORD PTR [eax],ebp
  424bb8:	pop    ds
  424bb9:	pop    esi
  424bba:	sbb    ah,bh
  424bbc:	jmp    0xea3d2d3d
  424bc1:	out    dx,eax
  424bc2:	cmp    eax,DWORD PTR [ecx]
  424bc4:	(bad)  
  424bc6:	mov    esp,0x98fb8e62
  424bcb:	ja     0x424bec
  424bcd:	mov    esi,0x733a3a54
  424bd2:	retf   0xd24c
  424bd5:	fwait
  424bd6:	push   eax
  424bd7:	push   edi
  424bd8:	push   ebx
  424bd9:	loopne 0x424c29
  424bdb:	ret    
  424bdc:	aam    0xe
  424bde:	loop   0x424c43
  424be0:	adc    al,0xb6
  424be2:	jp     0x424c20
  424be4:	sti    
  424be5:	call   0x279b1d2d
  424bea:	addr16 pop ecx
  424bec:	jo     0x424b9c
  424bee:	mov    al,0xa1
  424bf0:	dec    edi
  424bf1:	dec    edx
  424bf2:	div    BYTE PTR [ebp-0x44]
  424bf5:	add    esi,DWORD PTR [edx]
  424bf7:	and    DWORD PTR [ebp-0x21],edx
  424bfa:	clc    
  424bfb:	stos   DWORD PTR es:[edi],eax
  424bfc:	dec    ecx
  424bfd:	stos   BYTE PTR es:[edi],al
  424bfe:	push   edx
  424bff:	and    bl,ch
  424c01:	shr    DWORD PTR [edx],cl
  424c03:	lahf   
  424c04:	xchg   ebp,eax
  424c05:	dec    esi
  424c06:	push   ss
  424c07:	adc    eax,0xc238c0a8
  424c0c:	stos   DWORD PTR es:[edi],eax
  424c0d:	jmp    0x424c35
  424c0f:	push   edx
  424c10:	jno    0x424c66
  424c12:	and    ebx,DWORD PTR fs:[eax]
  424c15:	mov    ch,ch
  424c17:	inc    esi
  424c18:	push   0x7ad853b4
  424c1d:	test   eax,0x9873b3cd
  424c22:	jb     0x424c6a
  424c24:	repz mov ah,0x3b
  424c27:	jbe    0x424bc9
  424c29:	pop    esi
  424c2a:	das    
  424c2b:	inc    esi
  424c2c:	imul   esi,DWORD PTR [edi],0xffffffa7
  424c2f:	or     ecx,DWORD PTR [edx]
  424c31:	xor    eax,0x46c6dfd7
  424c36:	(bad)  
  424c37:	stc    
  424c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c39:	mov    ecx,0x82b1ff31
  424c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c3f:	jne    0x424c3b
  424c41:	aaa    
  424c42:	repz adc DWORD PTR [edx+0x1b],ebx
  424c46:	xchg   esp,eax
  424c47:	repnz adc BYTE PTR [esi],dh
  424c4a:	adc    eax,0xaab88e09
  424c4f:	cdq    
  424c50:	push   ds
  424c51:	dec    ebx
  424c52:	adc    eax,DWORD PTR [ebx]
  424c54:	mov    ss,WORD PTR [ebp-0x9624fbe]
  424c5a:	pop    ebx
  424c5b:	sub    DWORD PTR [ebx],esi
  424c5d:	jno    0x424bf6
  424c5f:	retf   
  424c60:	rcr    DWORD PTR [ecx+0x32],cl
  424c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c64:	cmp    BYTE PTR [ebp+0x52],al
  424c67:	fld    DWORD PTR [eax+esi*2+0x57]
  424c6b:	ja     0x424ce3
  424c6d:	sbb    ebx,DWORD PTR [eax]
  424c6f:	scas   eax,DWORD PTR es:[edi]
  424c70:	ficomp DWORD PTR [ebp-0x3f]
  424c73:	adc    eax,0x22a543ab
  424c78:	add    ch,al
  424c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c7b:	sbb    ebx,0x7256ca78
  424c81:	sbb    eax,0xb9b0d9bd
  424c86:	mov    edi,0x5bd2547f
  424c8b:	fldenv ds:0x7110f163
  424c91:	ja     0x424c63
  424c93:	jecxz  0x424c51
  424c95:	(bad)  
  424c96:	(bad)  
  424c97:	mov    ebx,0x11ce0212
  424c9c:	pop    eax
  424c9d:	jle    0x424c4c
  424c9f:	hlt    
  424ca0:	xchg   DWORD PTR [ecx],esp
  424ca2:	dec    esp
  424ca3:	sub    eax,DWORD PTR [esi+0x39]
  424ca6:	xor    al,0x51
  424ca8:	sub    al,0x94
  424caa:	xchg   edi,eax
  424cab:	xlat   BYTE PTR ds:[ebx]
  424cac:	and    eax,0xd0159770
  424cb1:	imul   ecx
  424cb3:	inc    esp
  424cb4:	dec    esi
  424cb5:	cs hlt 
  424cb7:	(bad)  
  424cb8:	mov    ch,0xc4
  424cba:	add    al,0x27
  424cbc:	rcr    DWORD PTR [ecx],0x48
  424cbf:	sub    esp,DWORD PTR [ecx-0x63]
  424cc2:	addr16 inc edx
  424cc4:	push   cs
  424cc5:	fst    DWORD PTR [ebx+0x2f645b3f]
  424ccb:	ficomp DWORD PTR [ebx-0x3b]
  424cce:	lock jl 0x424c77
  424cd1:	add    eax,0xe8141c0a
  424cd6:	adc    eax,0xffffffe9
  424cd9:	ret    
  424cda:	push   ebp
  424cdb:	rcr    dh,0x76
  424cde:	outs   dx,BYTE PTR ds:[esi]
  424cdf:	stos   BYTE PTR es:[edi],al
  424ce0:	dec    edx
  424ce1:	mov    ss,esi
  424ce3:	nop
  424ce4:	xor    edx,DWORD PTR ds:0x8d6c7dd2
  424cea:	sbb    al,0x9d
  424cec:	fsub   st(2),st
  424cee:	leave  
  424cef:	pop    ebx
  424cf0:	xchg   BYTE PTR [eax+edi*8],dh
  424cf3:	push   esp
  424cf4:	dec    eax
  424cf5:	xor    eax,0x27c38517
  424cfa:	jle    0x424cf4
  424cfc:	scas   al,BYTE PTR es:[edi]
  424cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cfe:	or     DWORD PTR [esi+ebx*8-0x68702cbd],esp
  424d05:	gs leave 
  424d07:	(bad)  
  424d08:	pop    ebp
  424d09:	outs   dx,DWORD PTR ds:[esi]
  424d0a:	hlt    
  424d0b:	cmc    
  424d0c:	push   edx
  424d0d:	push   edx
  424d0e:	push   es
  424d0f:	cmp    al,0x68
  424d11:	cmc    
  424d12:	mov    al,0xbf
  424d14:	cmp    al,0x9e
  424d16:	enter  0x12fe,0x80
  424d1a:	mov    ecx,DWORD PTR [edx+0x7b5f7865]
  424d20:	std    
  424d21:	adc    al,0x2b
  424d23:	xchg   ecx,eax
  424d24:	das    
  424d25:	in     eax,dx
  424d26:	stc    
  424d27:	sbb    eax,0x3bc155e1
  424d2c:	mov    bl,0x4d
  424d2e:	xchg   ecx,eax
  424d2f:	gs jb  0x424cd3
  424d32:	jnp    0x424d9a
  424d34:	fs gs push edi
  424d37:	in     eax,0xfa
  424d39:	add    esp,DWORD PTR [esi-0x3]
  424d3c:	push   esi
  424d3d:	es push ss
  424d3f:	push   ss
  424d40:	sbb    bh,BYTE PTR [ecx]
  424d42:	jecxz  0x424d6e
  424d44:	fstp   TBYTE PTR [ebp-0x3957a40e]
  424d4a:	in     eax,0xd5
  424d4c:	mov    ds:0x84ea8d2e,al
  424d51:	cmp    edx,esi
  424d53:	cwde   
  424d54:	mov    BYTE PTR [edx-0x386dfc6a],al
  424d5a:	mov    bh,0x17
  424d5c:	dec    esp
  424d5d:	push   ebx
  424d5e:	stos   DWORD PTR es:[edi],eax
  424d5f:	iret   
  424d60:	pusha  
  424d61:	pop    ebx
  424d62:	daa    
  424d63:	dec    ebp
  424d64:	xchg   edx,eax
  424d65:	sbb    DWORD PTR [ecx+0x2e36e488],esi
  424d6b:	adc    al,ah
  424d6d:	fdiv   QWORD PTR [ebx-0x61]
  424d70:	inc    ebp
  424d71:	cmp    eax,0x1da8976d
  424d76:	add    al,0x5a
  424d78:	xor    BYTE PTR [ecx],dh
  424d7a:	repz aaa 
  424d7c:	stc    
  424d7d:	popa   
  424d7e:	inc    ecx
  424d7f:	out    dx,eax
  424d80:	outs   dx,BYTE PTR ds:[esi]
  424d81:	dec    ebx
  424d82:	sar    ecx,1
  424d84:	dec    ecx
  424d85:	arpl   WORD PTR [ebx],bx
  424d87:	mov    esi,DWORD PTR es:[edi]
  424d8a:	adc    DWORD PTR ds:0x997d84a5,ebp
  424d90:	mov    dl,0xf2
  424d92:	jge    0x424dec
  424d94:	xor    BYTE PTR [edi+0xe10345e],bh
  424d9a:	add    al,0xef
  424d9c:	arpl   WORD PTR [eax-0x20875753],cx
  424da2:	bound  ecx,QWORD PTR [esp+esi*2]
  424da5:	rol    BYTE PTR [eax],cl
  424da7:	mov    ah,0x6a
  424da9:	xacquire xchg DWORD PTR [eax+ebp*4+0x73],edx
  424dae:	xor    cl,0x4e
  424db1:	dec    esp
  424db2:	sbb    ebx,DWORD PTR [eax-0x6ead74ff]
  424db8:	inc    ebx
  424db9:	sbb    eax,0xa87278eb
  424dbe:	push   edx
  424dbf:	ja     0x424db9
  424dc1:	sbb    al,0x25
  424dc3:	pop    ds
  424dc4:	int3   
  424dc5:	and    eax,ebx
  424dc7:	push   ebp
  424dc8:	xchg   esi,eax
  424dc9:	xchg   ecx,eax
  424dca:	outs   dx,DWORD PTR ds:[esi]
  424dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424dcc:	addr16 inc edi
  424dce:	xchg   ecx,eax
  424dcf:	leave  
  424dd0:	xrelease mov DWORD PTR [ebx],0xd4b82754
  424dd7:	jg     0x424dac
  424dd9:	pushf  
  424dda:	outs   dx,DWORD PTR ds:[esi]
  424ddb:	sub    al,0xe0
  424ddd:	jne    0x424de5
  424ddf:	cmp    eax,0x1b79d28b
  424de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424de5:	in     eax,0xa
  424de7:	jecxz  0x424e42
  424de9:	dec    ebx
  424dea:	xchg   esi,eax
  424deb:	rol    ch,1
  424ded:	jb     0x424dfe
  424def:	mov    eax,ds:0xd1ba102a
  424df4:	mov    ds:0x5e8956ef,eax
  424df9:	add    eax,0xe3c6eeb2
  424dfe:	pop    esp
  424dff:	mov    al,ds:0xf2c65b8f
  424e04:	mov    al,ds:0x4c09cc41
  424e09:	es jb  0x424da4
  424e0c:	jmp    0x424e0c
  424e0e:	pop    ecx
  424e0f:	jmp    0xfc0a:0xf4e240cd
  424e16:	xor    al,0x30
  424e18:	adc    al,0x90
  424e1a:	jns    0x424e5e
  424e1c:	cmp    al,0x25
  424e1e:	sbb    eax,0xe2634be3
  424e23:	adc    BYTE PTR [esi+0x4a9ea45],0xf0
  424e2a:	(bad)  
  424e2b:	js     0x424e59
  424e2d:	fst    QWORD PTR [eax]
  424e2f:	or     DWORD PTR [ebp+eiz*4-0x1c],esi
  424e33:	mov    al,ds:0xccf86861
  424e38:	pushf  
  424e39:	add    eax,edi
  424e3b:	cld    
  424e3c:	inc    ecx
  424e3d:	push   es
  424e3e:	adc    BYTE PTR [edx],0x63
  424e41:	inc    esi
  424e42:	jmp    0x424e63
  424e44:	push   es
  424e45:	ja     0x424dc8
  424e47:	xchg   edi,eax
  424e48:	add    dl,BYTE PTR [ebx]
  424e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e4b:	bnd ret 
  424e4d:	mov    fs,ecx
  424e4f:	pop    ss
  424e50:	lods   al,BYTE PTR ds:[esi]
  424e51:	stc    
  424e52:	imul   edx,DWORD PTR [ebp-0x213ce6a1],0xfffffffc
  424e59:	and    dh,ch
  424e5b:	(bad)  
  424e5c:	aam    0xc4
  424e5e:	lods   eax,DWORD PTR ds:[esi]
  424e5f:	cmp    al,0x5d
  424e61:	pop    ecx
  424e62:	aad    0xe
  424e64:	aam    0xfc
  424e66:	mov    cl,0x6
  424e68:	into   
  424e69:	fiadd  DWORD PTR [esi-0x44141286]
  424e6f:	jbe    0x424dfe
  424e71:	adc    edi,DWORD PTR [edx-0x74]
  424e74:	pop    ds
  424e75:	call   0x1d83:0x8734d620
  424e7c:	cld    
  424e7d:	(bad)  
  424e7e:	xchg   ebp,eax
  424e7f:	jp     0x424e36
  424e81:	dec    ebx
  424e82:	inc    DWORD PTR [ecx+0x145a8ceb]
  424e88:	cmp    ebp,DWORD PTR [edx]
  424e8a:	mov    dl,0xc5
  424e8c:	clc    
  424e8d:	cmp    ebp,esi
  424e8f:	daa    
  424e90:	(bad)  
  424e92:	(bad)  
  424e93:	(bad)  
  424e94:	lar    esi,sp
  424e97:	or     edi,DWORD PTR [ecx*8+0x35f7a470]
  424e9e:	imul   esi,edx,0xffffff8a
  424ea1:	xor    BYTE PTR [ebx+0x66215af2],dh
  424ea7:	dec    edx
  424ea8:	jnp    0x424f0f
  424eaa:	add    dl,al
  424eac:	ret    
  424ead:	imul   ecx,DWORD PTR [esi+0x33],0x98c6d76a
  424eb4:	pop    edi
  424eb5:	xchg   BYTE PTR [eax-0x3a],dh
  424eb8:	mov    esi,0x40e0a203
  424ebd:	adc    BYTE PTR [esi],bl
  424ebf:	or     eax,0xa68436b4
  424ec4:	dec    edx
  424ec5:	push   edx
  424ec6:	(bad)  
  424ec7:	pop    esp
  424ec8:	dec    edx
  424ec9:	xlat   BYTE PTR ds:[ebx]
  424eca:	and    al,0x43
  424ecc:	sbb    al,0xd
  424ece:	adc    bh,BYTE PTR [edi+edi*1-0x56]
  424ed2:	dec    edx
  424ed3:	fsub   QWORD PTR [ecx+0x79f3052f]
  424ed9:	(bad)  
  424eda:	jb     0x424eec
  424edc:	cdq    
  424edd:	nop
  424ede:	mov    bl,ch
  424ee0:	fist   DWORD PTR [edi]
  424ee2:	and    BYTE PTR [ebp-0x46],cl
  424ee5:	jae    0x424f27
  424ee7:	dec    edi
  424ee8:	out    dx,al
  424ee9:	jg     0x424ec3
  424eeb:	imul   edx,DWORD PTR [ecx-0x464a0bc4],0x4b417fcc
  424ef5:	xor    edi,DWORD PTR [ebp-0x77477713]
  424efb:	inc    ebp
  424efc:	pop    ebp
  424efd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424efe:	and    eax,0x2b687c87
  424f03:	out    0x42,al
  424f05:	inc    esp
  424f06:	jbe    0x424f25
  424f08:	add    al,0x50
  424f0a:	rol    DWORD PTR [eax],0xcd
  424f0d:	sbb    al,0x1c
  424f0f:	(bad)  
  424f10:	mov    al,ss:0xdff7772d
  424f16:	mov    ecx,0x616212e9
  424f1b:	shl    DWORD PTR [esp+ebx*2-0x75],0x50
  424f20:	ror    DWORD PTR [eax-0x2b505046],cl
  424f26:	fadd   QWORD PTR [eax-0x36]
  424f29:	mov    al,ds:0x383849ec
  424f2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f2f:	gs xchg edx,eax
  424f31:	loopne 0x424f00
  424f33:	dec    edi
  424f34:	mov    BYTE PTR [ebx],dh
  424f36:	xor    eax,0x1104ce57
  424f3b:	mov    eax,0xd92114b9
  424f40:	add    eax,0xa3535c83
  424f45:	mov    ebp,0xfb1e5b85
  424f4a:	jg     0x424f40
  424f4c:	scas   eax,DWORD PTR es:[edi]
  424f4d:	int    0xd2
  424f4f:	mov    ecx,0x720f997
  424f54:	push   esp
  424f55:	xchg   esi,eax
  424f56:	imul   edi,DWORD PTR [ecx+0xd425da8],0x2d801d3f
  424f60:	xor    al,0x5d
  424f62:	ss dec esi
  424f64:	out    0x1a,al
  424f66:	jl     0x424f44
  424f68:	ror    BYTE PTR [edi-0x722b90f8],cl
  424f6e:	xor    al,0xfd
  424f70:	dec    esi
  424f71:	jge    0x424eff
  424f73:	mov    ebx,DWORD PTR [eax+0x640b23f8]
  424f79:	add    eax,0x357bb45d
  424f7e:	test   esp,ecx
  424f80:	rcr    DWORD PTR [eax+0x6592d294],0x3b
  424f87:	(bad)  [edx+0x1d9c6d6b]
  424f8d:	xchg   edx,eax
  424f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f8f:	test   DWORD PTR [edx+edi*8-0x56],edx
  424f93:	xor    ebx,DWORD PTR [eax]
  424f95:	xchg   edx,eax
  424f96:	addr16 popa 
  424f98:	daa    
  424f99:	mov    DWORD PTR [ebx],ebp
  424f9b:	scas   al,BYTE PTR es:[edi]
  424f9c:	int3   
  424f9d:	adc    eax,0x6d49a7a3
  424fa2:	push   0xf1f26dd5
  424fa7:	mov    ds:0x54b305d4,eax
  424fac:	je     0x42500d
  424fae:	mov    ah,0xba
  424fb0:	fwait
  424fb1:	out    0x82,al
  424fb3:	mov    eax,ds:0x13c21152
  424fb8:	aas    
  424fb9:	mov    dh,cl
  424fbb:	xchg   esi,eax
  424fbc:	int    0x84
  424fbe:	ss sahf 
  424fc0:	sti    
  424fc1:	fcmovne st,st(0)
  424fc3:	icebp  
  424fc4:	jle    0x424f5a
  424fc6:	das    
  424fc7:	aaa    
  424fc8:	jo     0x424f89
  424fca:	pop    ebp
  424fcb:	mov    DWORD PTR [ebx],ecx
  424fcd:	jmp    0x150f8676
  424fd2:	jmp    FWORD PTR [esi-0x344b7240]
  424fd8:	clc    
  424fd9:	dec    edi
  424fda:	xchg   edx,eax
  424fdb:	xchg   esi,eax
  424fdc:	xchg   ebx,eax
  424fdd:	sbb    cl,BYTE PTR ds:0x9134
  424fe2:	aad    0x97
  424fe4:	ret    
  424fe5:	test   al,0x63
  424fe7:	dec    esp
  424fe8:	pop    edi
  424fe9:	pop    eax
  424fea:	mov    eax,ds:0x6d6d503f
  424fef:	ins    DWORD PTR es:[edi],dx
  424ff0:	repz xor esi,ecx
  424ff3:	std    
  424ff4:	lock push ecx
  424ff6:	pop    eax
  424ff7:	dec    esp
  424ff8:	jb     0x424fd1
  424ffa:	pop    edi
  424ffb:	push   ds
  424ffc:	(bad)  
  424ffd:	mov    ah,0xea
  424fff:	lahf   
  425000:	repnz iret 
  425002:	push   ss
  425003:	inc    edx
  425004:	sbb    dl,ah
  425006:	push   ss
  425007:	pop    eax
  425008:	outs   dx,BYTE PTR ds:[esi]
  425009:	mov    ecx,0x574fb10d
  42500e:	inc    edx
  42500f:	sbb    bh,BYTE PTR [ebp-0x6c]
  425012:	push   esp
  425013:	push   ds
  425014:	lea    ebx,[eax+0x6c]
  425017:	repnz sahf 
  425019:	xor    ecx,ebx
  42501b:	add    BYTE PTR [ebx],bh
  42501d:	pop    ds
  42501e:	adc    eax,0xe7db56e5
  425023:	daa    
  425024:	je     0x425035
  425026:	xor    al,0x25
  425028:	(bad)  
  425029:	(bad)  
  42502a:	fiadd  WORD PTR [esi+esi*8]
  42502d:	or     dh,BYTE PTR [eax]
  42502f:	pop    esi
  425030:	and    eax,0x4c46a8e9
  425035:	div    DWORD PTR [ecx]
  425037:	mov    bl,0xfe
  425039:	push   0xc02bdb44
  42503e:	arpl   WORD PTR [ecx],bp
  425040:	push   edx
  425041:	pushf  
  425042:	adc    BYTE PTR [edx-0x308999d3],al
  425048:	std    
  425049:	out    dx,eax
  42504a:	pop    ebx
  42504b:	cmp    eax,0x9686d545
  425050:	shr    DWORD PTR [esi+0x61],1
  425053:	js     0x425058
  425055:	bound  edi,QWORD PTR ds:0x13916c22
  42505b:	or     eax,0xfc78597e
  425060:	jp     0x425061
  425062:	das    
  425063:	cs aas 
  425065:	pop    es
  425066:	sahf   
  425067:	fst    QWORD PTR [ecx]
  425069:	cld    
  42506a:	jge    0x425094
  42506c:	inc    edi
  42506d:	mov    ebp,0x87395ed8
  425072:	sub    ah,dl
  425074:	clc    
  425075:	push   es
  425076:	sub    edx,DWORD PTR [esi+0x39]
  425079:	jecxz  0x425014
  42507b:	dec    ecx
  42507c:	fmul   st,st(4)
  42507e:	test   al,0x4a
  425080:	sbb    al,0xc7
  425082:	jg     0x4250e4
  425084:	out    dx,al
  425085:	(bad)  
  425086:	loopne 0x425031
  425088:	mov    eax,ds:0xba49918e
  42508d:	mov    al,ds:0x77a0f319
  425092:	hlt    
  425093:	imul   ebx,edi,0x97ed92e4
  425099:	xchg   ebx,eax
  42509a:	push   0x1fe3d2b7
  42509f:	and    BYTE PTR [edi],ch
  4250a1:	rol    DWORD PTR [edx],0xcd
  4250a4:	mov    al,0xec
  4250a6:	adc    al,0xa6
  4250a8:	mov    ch,0x32
  4250aa:	mov    DWORD PTR [edi-0x3c],eax
  4250ad:	shl    DWORD PTR [esi-0x72cec623],1
  4250b3:	(bad)  
  4250b4:	jb     0x42507d
  4250b6:	aas    
  4250b7:	push   ds
  4250b8:	mov    al,ch
  4250ba:	or     al,0x59
  4250bc:	inc    ebx
  4250bd:	stos   BYTE PTR es:[edi],al
  4250be:	or     DWORD PTR [ebx],esp
  4250c0:	cli    
  4250c1:	jbe    0x4250e2
  4250c3:	jp     0x42508c
  4250c5:	inc    edx
  4250c6:	pop    esp
  4250c7:	hlt    
  4250c8:	scas   eax,DWORD PTR es:[edi]
  4250c9:	aaa    
  4250ca:	inc    ebx
  4250cb:	je     0x425067
  4250cd:	sub    al,0x8a
  4250cf:	or     cl,BYTE PTR [edi+0x35bfe170]
  4250d5:	jmp    FWORD PTR ds:0xcc49cc0a
  4250db:	or     eax,0xaf12b53b
  4250e0:	(bad)  [ecx-0x1397db62]
  4250e6:	add    eax,0x5f888ba7
  4250eb:	pop    es
  4250ec:	jp     0x4250ba
  4250ee:	pop    edi
  4250ef:	sub    cl,ch
  4250f1:	pop    ss
  4250f2:	push   edi
  4250f3:	adc    al,0xa2
  4250f5:	fstp   TBYTE PTR [ecx-0x176396e0]
  4250fb:	enter  0x82b,0x94
  4250ff:	jp     0x42508a
  425101:	bound  edi,QWORD PTR [ebp+0x1974081]
  425107:	in     al,0x4b
  425109:	inc    edx
  42510a:	test   DWORD PTR [ecx],edx
  42510c:	adc    bh,ch
  42510e:	xor    al,0xed
  425110:	pop    edx
  425111:	inc    esi
  425112:	bound  esp,QWORD PTR [edi]
  425114:	mov    WORD PTR [eax],gs
  425116:	or     edi,DWORD PTR [ebx+0x377de42d]
  42511c:	adc    ah,BYTE PTR [edx]
  42511e:	xor    bh,BYTE PTR [edi]
  425120:	xchg   ebx,eax
  425121:	add    al,0xa
  425123:	jp     0x4250cb
  425125:	fnsave [esi+0x7e39a5c7]
  42512b:	pop    edi
  42512c:	xor    ah,BYTE PTR [edi]
  42512e:	mov    edi,0x7e534e68
  425133:	fdivp  st(1),st
  425135:	in     eax,dx
  425136:	cld    
  425137:	aas    
  425138:	pop    esi
  425139:	dec    ecx
  42513a:	nop
  42513b:	push   0xffffffb8
  42513d:	push   ss
  42513e:	lea    esp,[ebx]
  425140:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425141:	in     al,0x4a
  425143:	mov    al,ds:0xf52f2e26
  425148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425149:	dec    ecx
  42514a:	mov    eax,ds:0x6a932064
  42514f:	mov    eax,DWORD PTR [esi]
  425151:	das    
  425152:	or     eax,0xc1c6f783
  425157:	int    0x1c
  425159:	xchg   esp,eax
  42515a:	or     dh,ch
  42515c:	jbe    0x425164
  42515e:	add    al,0xaf
  425160:	dec    edi
  425161:	mov    dh,0xba
  425163:	xchg   edx,eax
  425164:	das    
  425165:	std    
  425166:	out    0xcf,eax
  425168:	std    
  425169:	enter  0x6f54,0xf
  42516d:	loopne 0x425136
  42516f:	xor    BYTE PTR [esi+0x8104abe],bl
  425175:	jno    0x42511e
  425177:	jns    0x425193
  425179:	xor    bh,dh
  42517b:	or     eax,0x31031782
  425180:	enter  0xce92,0x4b
  425184:	pop    ebp
  425185:	loope  0x42517d
  425187:	aad    0x61
  425189:	inc    edi
  42518a:	cmp    ebx,eax
  42518c:	mov    dl,0x9d
  42518e:	iret   
  42518f:	sbb    ax,0xb53f
  425193:	push   eax
  425194:	gs add eax,0x330ed739
  42519a:	retf   
  42519b:	and    eax,0xb0e57312
  4251a0:	xor    eax,0xa210aa3d
  4251a5:	mov    bh,0x4c
  4251a7:	ins    DWORD PTR es:[edi],dx
  4251a8:	(bad)  
  4251aa:	xchg   ebp,eax
  4251ab:	mov    dh,0x3
  4251ad:	popf   
  4251ae:	pop    eax
  4251af:	mov    bh,0xa5
  4251b1:	popa   
  4251b2:	outs   dx,BYTE PTR ds:[esi]
  4251b3:	test   al,0xc5
  4251b5:	das    
  4251b6:	shr    BYTE PTR [eax-0x12],cl
  4251b9:	inc    edi
  4251ba:	ret    
  4251bb:	cdq    
  4251bc:	lds    edi,FWORD PTR [edi+eax*1]
  4251bf:	fwait
  4251c0:	cmp    BYTE PTR [esi],bh
  4251c2:	scas   eax,DWORD PTR es:[edi]
  4251c3:	jmp    0x4bcf784d
  4251c8:	jno    0x425168
  4251ca:	or     eax,0x26211923
  4251cf:	mov    fs,ebp
  4251d1:	inc    ebp
  4251d2:	mov    WORD PTR [ebp-0x1fc24965],fs
  4251d8:	in     al,dx
  4251d9:	test   eax,0xc24aafec
  4251de:	fwait
  4251df:	or     cl,al
  4251e1:	pop    ebx
  4251e2:	mov    cl,0xa2
  4251e4:	pslld  mm4,QWORD PTR [ecx-0x72]
  4251e8:	ror    DWORD PTR [eiz*4+0x2910f9d7],0x74
  4251f0:	or     BYTE PTR [esp+ebx*4+0x3b4bf7b8],0xe0
  4251f8:	jo     0x42519f
  4251fa:	jle    0x4251a2
  4251fc:	(bad)  
  4251fd:	pop    edi
  4251fe:	sbb    al,0x88
  425200:	pop    ebp
  425201:	fst    st(7)
  425203:	mov    cs,WORD PTR [bx+si+0x70]
  425207:	xchg   ebp,eax
  425208:	xor    DWORD PTR [esi+0x33],0x72a398c9
  42520f:	push   ecx
  425210:	mov    edx,0xccfed756
  425215:	pop    edi
  425216:	fwait
  425217:	les    ecx,FWORD PTR [edx]
  425219:	add    BYTE PTR [ebx],bl
  42521b:	sbb    eax,0x95df977
  425220:	test   DWORD PTR ds:0xd60aa34b,ebx
  425226:	cmp    DWORD PTR [ebx],edx
  425228:	hlt    
  425229:	fdiv   QWORD PTR ds:0x5a3d9268
  42522f:	xor    al,0x5
  425231:	outs   dx,BYTE PTR ds:[esi]
  425232:	xchg   esi,eax
  425233:	lea    edi,[edx+0x7f]
  425236:	imul   esp,DWORD PTR [esi-0x26],0x7384c9a1
  42523d:	aaa    
  42523e:	mov    ch,0xb4
  425240:	cmp    BYTE PTR [eax+0x34456183],0x11
  425247:	rcr    BYTE PTR [eax-0x3e49f939],0x32
  42524e:	jbe    0x4251de
  425250:	inc    ecx
  425251:	in     eax,0x48
  425253:	mov    dl,0x83
  425255:	out    0x17,al
  425257:	out    0xbc,eax
  425259:	mov    esi,0x4389efc6
  42525e:	and    DWORD PTR [esi+eax*2-0x48],esi
  425262:	adc    DWORD PTR [ecx-0x55],0xffffffde
  425266:	imul   edi,DWORD PTR [ecx-0x648e862a],0xa6966d94
  425270:	popa   
  425271:	push   esp
  425272:	cmp    BYTE PTR [edi],bh
  425274:	test   DWORD PTR [ebx-0x7d],ecx
  425277:	xchg   ebx,eax
  425278:	dec    ecx
  425279:	mov    esp,0xf4a5c613
  42527e:	or     edi,DWORD PTR [edx-0x2b]
  425281:	loop   0x425295
  425283:	inc    ebp
  425284:	dec    edx
  425285:	fcom   QWORD PTR [ecx]
  425287:	frstor [esi-0x45]
  42528a:	adc    cl,BYTE PTR [eax+0x269af1ac]
  425290:	ins    DWORD PTR es:[edi],dx
  425291:	pop    esi
  425292:	xchg   edi,eax
  425293:	aam    0xda
  425295:	jbe    0x42527f
  425297:	arpl   WORD PTR [edi],dx
  425299:	cmp    eax,0xf492fafe
  42529e:	push   ss
  42529f:	lock test BYTE PTR [ecx],0x72
  4252a3:	xchg   esp,eax
  4252a4:	inc    esp
  4252a5:	in     eax,0x4b
  4252a7:	add    al,cl
  4252a9:	push   esp
  4252aa:	arpl   WORD PTR [esi],dx
  4252ac:	repz lahf 
  4252ae:	push   ebx
  4252af:	mov    dh,0x2c
  4252b1:	push   ss
  4252b2:	xchg   esp,eax
  4252b3:	adc    dl,bl
  4252b5:	mov    esp,0x459ef17d
  4252ba:	add    dh,BYTE PTR [edx-0x74b6707b]
  4252c0:	jns    0x42524e
  4252c2:	jne    0x425252
  4252c4:	and    DWORD PTR [edi+0xd],0x2bfe76e0
  4252cb:	sbb    BYTE PTR [edi],0x8b
  4252ce:	lds    ecx,FWORD PTR [ebp+0x18]
  4252d1:	mov    esp,eax
  4252d3:	pop    ebx
  4252d4:	push   cs
  4252d5:	fcom   QWORD PTR [ebp+0x71f222b2]
  4252db:	loope  0x4252e1
  4252dd:	sti    
  4252de:	push   edi
  4252df:	loop   0x425322
  4252e1:	push   edi
  4252e2:	addr16 push edx
  4252e5:	inc    esp
  4252e6:	and    al,BYTE PTR ds:0xe6700ce5
  4252ec:	mov    eax,ds:0x9ca0c6a9
  4252f1:	outs   dx,BYTE PTR ds:[esi]
  4252f2:	jno    0x4252dd
  4252f4:	bound  ebp,QWORD PTR [ebp*4-0x2700d416]
  4252fb:	scas   eax,DWORD PTR es:[edi]
  4252fc:	pop    esi
  4252fd:	daa    
  4252fe:	lea    ebx,[ebx+0xe892dea]
  425304:	mov    edi,0x9d361cbf
  425309:	jmp    ebp
  42530b:	or     eax,0x5e0626e1
  425310:	je     0x425298
  425312:	add    eax,0x10ff10a3
  425317:	shr    BYTE PTR [esi+0x5db1c7f3],0xa6
  42531e:	and    al,0xfc
  425320:	inc    esi
  425321:	pop    ebx
  425322:	rcr    BYTE PTR [esp+ecx*8-0x406b02d1],0xd
  42532a:	push   ds
  42532b:	push   edx
  42532c:	aad    0x28
  42532e:	or     edx,DWORD PTR [ebx-0x74]
  425331:	pop    ds
  425332:	shl    BYTE PTR [ebx+ecx*4+0x76b585fd],1
  425339:	aaa    
  42533a:	mov    ds:0x7471ac3a,al
  42533f:	or     al,0x1b
  425341:	mov    WORD PTR [edx-0x749aff54],es
  425347:	jmp    FWORD PTR [esi-0x128f7478]
  42534d:	clc    
  42534e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42534f:	pusha  
  425350:	jne    0x42536f
  425352:	stos   DWORD PTR es:[edi],eax
  425353:	into   
  425354:	dec    ebx
  425355:	and    cl,BYTE PTR [esi+0x50d4ee30]
  42535b:	mov    ch,0x42
  42535d:	stos   BYTE PTR es:[edi],al
  42535e:	push   0x1c
  425360:	neg    cl
  425362:	in     al,dx
  425363:	dec    ecx
  425364:	cs jmp 0xbbe9:0xf239ba0e
  42536c:	xchg   edx,eax
  42536d:	repnz mov esi,0xee02f9d6
  425373:	pop    edi
  425374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425375:	mov    al,0x17
  425377:	test   dh,al
  425379:	mov    ds:0xed4e4a55,eax
  42537e:	fst    st(6)
  425380:	jl     0x42538e
  425382:	test   ax,0x4e79
  425386:	int3   
  425387:	ret    
  425388:	shl    DWORD PTR [ecx+0x53],cl
  42538b:	ja     0x425330
  42538d:	sbb    dh,dl
  42538f:	call   0x2922f041
  425394:	xlat   BYTE PTR ds:[ebx]
  425395:	adc    BYTE PTR [ecx+0x35eb9d87],dh
  42539b:	adc    al,0x28
  42539d:	xor    DWORD PTR ds:0x4bc63b20,edx
  4253a3:	xor    eax,0x26e77b5d
  4253a8:	ins    DWORD PTR es:[edi],dx
  4253a9:	rcl    DWORD PTR [ebp+ebp*1-0x3f1f7089],0xe8
  4253b1:	jl     0x42541d
  4253b3:	in     eax,0xbc
  4253b5:	cs inc eax
  4253b7:	or     BYTE PTR [edi+0x59],dl
  4253ba:	lods   eax,DWORD PTR ds:[esi]
  4253bb:	div    DWORD PTR [eax]
  4253bd:	adc    al,ah
  4253bf:	fidiv  DWORD PTR [ecx+ecx*1+0x35f6e13b]
  4253c6:	pop    eax
  4253c7:	imul   BYTE PTR [edi]
  4253c9:	or     esp,DWORD PTR [eax]
  4253cb:	aas    
  4253cc:	pop    edi
  4253cd:	data16 xchg BYTE PTR [edx],bl
  4253d0:	mov    ds:0xac565a42,eax
  4253d5:	pop    esp
  4253d6:	push   edi
  4253d7:	add    dh,BYTE PTR [eax-0x5fae1d8f]
  4253dd:	or     bh,BYTE PTR [ebp-0x54a33c2f]
  4253e3:	aam    0x45
  4253e5:	sub    DWORD PTR [edi],edi
  4253e7:	xor    bl,BYTE PTR [ebx+0x14]
  4253ea:	add    DWORD PTR [edi-0xe],esi
  4253ed:	add    dl,al
  4253ef:	ror    DWORD PTR [edx-0x4],cl
  4253f2:	cmp    al,0x1d
  4253f4:	dec    ebp
  4253f5:	or     eax,0x4e53573a
  4253fa:	inc    edi
  4253fb:	push   esi
  4253fc:	ja     0x4253b3
  4253fe:	icebp  
  4253ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425400:	add    DWORD PTR [eax],esi
  425402:	es mov ebx,0x44e5168c
  425408:	pop    ecx
  425409:	sar    DWORD PTR [ebx+0x128a7233],0xbb
  425410:	cmp    eax,0xe1ac583f
  425415:	dec    edi
  425416:	or     eax,0x2dafb34c
  42541b:	in     eax,0x29
  42541d:	outs   dx,BYTE PTR ds:[esi]
  42541e:	and    ebp,DWORD PTR [esi]
  425420:	cs push es
  425422:	cmp    eax,DWORD PTR ds:0x68b78369
  425428:	dec    ecx
  425429:	jns    0x4254a7
  42542b:	push   esi
  42542c:	mov    ecx,0xd174faa
  425431:	out    0x51,eax
  425433:	ja     0x425470
  425435:	xchg   ebp,eax
  425436:	idiv   BYTE PTR [ebp-0x36]
  425439:	retf   0x43ad
  42543c:	lea    ebp,[esi+0x5a495da5]
  425442:	popf   
  425443:	inc    ecx
  425444:	pop    edi
  425445:	fdivr  st(6),st
  425447:	ss aas 
  425449:	test   DWORD PTR [ecx],esi
  42544b:	adc    dl,BYTE PTR [ecx-0x1c1efdac]
  425451:	cdq    
  425452:	jg     0x425478
  425454:	js     0x4253f4
  425456:	cmp    al,0x7
  425458:	sbb    eax,0x296577ce
  42545d:	adc    eax,0xff164786
  425462:	dec    ecx
  425463:	pop    esp
  425464:	inc    eax
  425465:	lea    edx,[esi-0x6]
  425468:	and    ecx,DWORD PTR [edx-0x4ac9787]
  42546e:	clc    
  42546f:	dec    edx
  425470:	gs pop eax
  425472:	in     eax,dx
  425473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425474:	popa   
  425475:	mov    edi,DWORD PTR es:[edx-0x702935e7]
  42547c:	or     al,0x28
  42547e:	jns    0x425462
  425480:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425481:	adc    ah,ch
  425483:	jmp    0xbc8c:0xeabf8cf6
  42548a:	fisttp WORD PTR [eax+0x5]
  42548d:	int    0xa8
  42548f:	dec    ebx
  425490:	scas   al,BYTE PTR es:[edi]
  425491:	outs   dx,DWORD PTR ds:[esi]
  425492:	fsubr  st,st(6)
  425494:	adc    dh,BYTE PTR [eax-0x5f]
  425497:	in     al,dx
  425498:	rcr    DWORD PTR ds:0x5aeef00a,0x82
  42549f:	sti    
  4254a0:	imul   BYTE PTR [edx+0x12e78ae5]
  4254a6:	push   es
  4254a7:	ficomp WORD PTR [eax-0x35]
  4254aa:	mov    ds:0x369a3966,al
  4254af:	push   eax
  4254b0:	sub    al,0xf1
  4254b2:	dec    DWORD PTR [edi+0x2673be39]
  4254b8:	addr16 pop eax
  4254ba:	arpl   WORD PTR [ebx-0x12],bx
  4254bd:	icebp  
  4254be:	inc    ebx
  4254bf:	pop    ebp
  4254c0:	fimul  DWORD PTR [eax]
  4254c2:	pushf  
  4254c3:	fmul   st(4),st
  4254c5:	loope  0x425485
  4254c7:	frstor [ecx+0x5d]
  4254ca:	sbb    al,0x5e
  4254cc:	mov    ebx,edx
  4254ce:	mov    ch,0xbf
  4254d0:	cld    
  4254d1:	add    ebx,edx
  4254d3:	mov    dl,bh
  4254d5:	addr16 pop ebx
  4254d7:	cld    
  4254d8:	aaa    
  4254d9:	icebp  
  4254da:	and    DWORD PTR [eax-0x4b],ecx
  4254dd:	loop   0x4254a0
  4254df:	push   esp
  4254e0:	or     ecx,esp
  4254e2:	jmp    0x1f6f:0x96b42f7c
  4254e9:	in     eax,0x91
  4254eb:	sub    DWORD PTR [eax+eiz*8+0xd],esi
  4254ef:	mov    ch,0x90
  4254f1:	or     DWORD PTR [ecx+0x51],esp
  4254f4:	push   edi
  4254f5:	or     ebp,DWORD PTR [ebp+0x43]
  4254f8:	cmp    edx,eax
  4254fa:	dec    ebx
  4254fb:	jbe    0x4254c8
  4254fd:	mov    BYTE PTR [ebp+0x4b],cl
  425500:	(bad)  
  425501:	jl     0x4254bc
  425503:	loopne 0x425571
  425505:	adc    al,bh
  425507:	xchg   ecx,eax
  425508:	imul   BYTE PTR [esi+0x776643b4]
  42550e:	fdiv   DWORD PTR ds:0xa1c7b555
  425514:	ins    DWORD PTR es:[edi],dx
  425515:	fisttp QWORD PTR [edi-0x3f]
  425518:	jo     0x4254fb
  42551a:	dec    edi
  42551b:	push   eax
  42551c:	mov    fs:0x508be09,al
  425522:	sbb    DWORD PTR [ebx+0x7b],0xffffffd9
  425526:	cli    
  425527:	and    al,0xb
  425529:	fs pop ebx
  42552b:	xor    DWORD PTR ds:[eax],edi
  42552e:	aam    0x4a
  425530:	jnp    0x4254b5
  425532:	enter  0x1783,0x91
  425536:	int    0xdf
  425538:	push   ebp
  425539:	xchg   ebx,eax
  42553a:	int3   
  42553b:	shr    BYTE PTR [eax-0x6a],0xfc
  42553f:	pop    ebx
  425540:	mov    cl,0x5e
  425542:	dec    edi
  425543:	or     BYTE PTR [eax-0x4c7a307e],ch
  425549:	add    DWORD PTR [edx+0x60],eax
  42554c:	mov    ds:0xb85ad439,al
  425551:	test   al,0xc1
  425553:	push   ebp
  425554:	in     eax,0xc7
  425556:	pop    edi
  425557:	imul   edx,DWORD PTR [eax+edi*8+0x55fe4b24],0x4e0fd810
  425562:	ss add eax,0xe36a7060
  425568:	cmp    DWORD PTR [ecx+0x30044a92],edi
  42556e:	in     al,dx
  42556f:	aas    
  425570:	test   eax,0x901591a
  425575:	pop    esp
  425576:	dec    ecx
  425577:	ss xor bh,ah
  42557a:	sub    al,0x75
  42557c:	jge    0x425524
  42557e:	mov    eax,0xa651d779
  425583:	mov    edx,0x92f43744
  425588:	pusha  
  425589:	fsubr  st(4),st
  42558b:	jge    0x4255df
  42558d:	push   ecx
  42558e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42558f:	mov    eax,ds:0x890c56e3
  425594:	cmp    DWORD PTR [edx+0x4c],eax
  425597:	xor    ebx,DWORD PTR [ebx+0x54]
  42559a:	add    eax,0x633e4994
  42559f:	lods   eax,DWORD PTR ds:[esi]
  4255a0:	mov    DWORD PTR gs:[ebx+0x2fc72f4c],esi
  4255a7:	xor    ebp,eax
  4255a9:	inc    esp
  4255aa:	inc    edi
  4255ab:	mov    edi,esp
  4255ad:	jle    0x4255da
  4255af:	js     0x42561a
  4255b1:	mov    al,ds:0x9b19ae3e
  4255b6:	push   esi
  4255b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255b8:	shl    BYTE PTR [ecx-0x4b],0xf9
  4255bc:	(bad)  
  4255bd:	mov    ebp,0xec85edf6
  4255c2:	rcr    dl,0x1
  4255c5:	inc    edi
  4255c6:	add    ecx,eax
  4255c8:	clc    
  4255c9:	or     ebx,DWORD PTR [esi+eax*8+0x63a07ed]
  4255d0:	jne    0xd84c1db3
  4255d6:	dec    edi
  4255d7:	fisttp QWORD PTR [ecx]
  4255d9:	call   FWORD PTR [edi-0x3685de64]
  4255df:	dec    esp
  4255e0:	call   0xf5201d69
  4255e5:	or     DWORD PTR [edx+esi*8-0x68e1c8c8],ebx
  4255ec:	cdq    
  4255ed:	xchg   ebp,eax
  4255ee:	imul   esp,ecx,0x5f
  4255f1:	sbb    ch,ch
  4255f3:	jns    0x425582
  4255f5:	sub    al,0xb8
  4255f7:	(bad)  
  4255f8:	push   cs
  4255f9:	mov    eax,ds:0x8d40d57c
  4255fe:	in     eax,dx
  4255ff:	loope  0x425671
  425601:	mov    ch,0x9a
  425603:	iret   
  425604:	sub    eax,0x16bdff2b
  425609:	ins    DWORD PTR es:[edi],dx
  42560a:	int    0x0
  42560c:	cwde   
  42560d:	push   ebp
  42560e:	rcr    BYTE PTR [ebp-0x188562c9],1
  425614:	cmp    edx,esp
  425616:	or     al,0x3b
  425618:	cld    
  425619:	dec    esp
  42561a:	sar    DWORD PTR [eax],1
  42561c:	push   es
  42561d:	mov    ds:0xf5ccf7a8,eax
  425622:	out    dx,al
  425623:	js     0x425668
  425625:	sbb    eax,0x4f396e
  42562a:	push   ds
  42562b:	fwait
  42562c:	and    dh,bl
  42562e:	or     eax,0x8c241206
  425633:	pusha  
  425634:	xchg   DWORD PTR [esi-0x39475b81],eax
  42563a:	dec    esi
  42563b:	xchg   edi,eax
  42563d:	xchg   edx,eax
  42563e:	jnp    0x42567e
  425640:	test   BYTE PTR [ecx+0x5a],dl
  425643:	test   DWORD PTR [edx+0x15b5ad91],esp
  425649:	test   al,0x56
  42564b:	rep lods al,BYTE PTR ds:[esi]
  42564d:	push   esi
  42564e:	push   edi
  42564f:	inc    esi
  425650:	(bad)  
  425651:	fsubr  QWORD PTR [esi+0x42]
  425654:	mov    WORD PTR [ebx-0x67cab868],?
  42565a:	and    BYTE PTR [esp+ebp*2+0x119ca5ee],bh
  425661:	fs call 0xfe0febfa
  425667:	push   edx
  425668:	fucomi st,st(0)
  42566a:	adc    BYTE PTR [ecx+edx*2+0x77],0xc6
  42566f:	ja     0x425696
  425671:	and    edx,DWORD PTR es:[ebp-0x32]
  425675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425676:	aas    
  425677:	inc    ebp
  425678:	and    eax,0x28fabc72
  42567d:	mov    BYTE PTR [edi-0x2c060b4],bh
  425683:	cs cdq 
  425685:	and    ebp,DWORD PTR ds:0xe5666be8
  42568b:	mov    BYTE PTR [eax-0x50a21a5c],bl
  425691:	enter  0x8803,0x26
  425695:	leave  
  425696:	fbld   TBYTE PTR [edi-0x58]
  425699:	in     eax,0xc7
  42569b:	inc    esp
  42569c:	das    
  42569d:	inc    esi
  42569e:	jl     0x425685
  4256a0:	mov    edi,DWORD PTR [ecx+0x2]
  4256a3:	xchg   esi,eax
  4256a4:	mov    bl,0xb0
  4256a6:	adc    eax,0x9dbeb667
  4256ab:	cmp    bh,BYTE PTR [esi]
  4256ad:	sahf   
  4256ae:	mov    dh,0x48
  4256b0:	arpl   WORD PTR [ecx],cx
  4256b2:	jbe    0x4256a9
  4256b4:	jp     0x42564a
  4256b6:	ror    DWORD PTR [edi+0x69],0x41
  4256ba:	sub    eax,0x2f84763b
  4256bf:	cld    
  4256c0:	push   esp
  4256c1:	enter  0x6d76,0x36
  4256c5:	pushf  
  4256c6:	sub    eax,0x7e03b36d
  4256cb:	dec    edx
  4256cc:	enter  0x7778,0x44
  4256d0:	xor    eax,0x2b6bd666
  4256d5:	fisubr WORD PTR [edx-0x9]
  4256d8:	sbb    eax,0xd999ee51
  4256dd:	mov    edi,0x8de5c95e
  4256e2:	lea    ebp,[edx+eax*1]
  4256e5:	mov    al,0x60
  4256e7:	mov    dl,0xcc
  4256e9:	popf   
  4256ea:	or     DWORD PTR ds:0x3fadaded,ebp
  4256f0:	sbb    ebx,0x707ab03f
  4256f6:	not    BYTE PTR [ecx]
  4256f8:	lock jge 0x425744
  4256fb:	inc    edx
  4256fc:	adc    cl,BYTE PTR [esi+0x7a]
  4256ff:	mov    eax,DWORD PTR [ebp+0x62e5dc4c]
  425705:	jg     0x4256a4
  425707:	(bad)  
  425708:	or     esi,DWORD PTR [ebp-0x4ed576c8]
  42570e:	(bad)  
  42570f:	sbb    eax,0x668c2725
  425714:	mov    eax,ds:0x8621b592
  425719:	mov    ebp,0x698e4e30
  42571e:	push   ecx
  42571f:	inc    esp
  425720:	fstp   QWORD PTR [edx+0x38]
  425723:	fadd   DWORD PTR [esi-0x7f05e630]
  425729:	dec    eax
  42572a:	loop   0x4256e2
  42572c:	inc    esi
  42572d:	mov    ds:0x87c5f98d,eax
  425732:	pop    ebx
  425733:	(bad)  
  425734:	or     al,0x40
  425736:	mul    BYTE PTR [esi]
  425738:	cmp    BYTE PTR ds:0xd53e9f30,0x58
  42573f:	ins    BYTE PTR es:[edi],dx
  425740:	sbb    eax,0xd3ab0831
  425745:	popf   
  425746:	popf   
  425747:	jl     0x42571b
  425749:	ret    0x1cbf
  42574c:	lock test al,0xd3
  42574f:	div    ch
  425751:	mov    edx,0x236cfff8
  425756:	loopne 0x42578c
  425758:	adc    al,dh
  42575a:	dec    edi
  42575b:	add    al,0x75
  42575d:	or     bl,ch
  42575f:	fwait
  425760:	bound  esi,QWORD PTR [eax-0x1d]
  425763:	test   BYTE PTR [ecx],al
  425765:	lock jmp 0x42578e
  425768:	mov    ch,0x61
  42576a:	into   
  42576b:	xlat   BYTE PTR ds:[ebx]
  42576c:	push   esi
  42576d:	sub    DWORD PTR [edi-0x347f4623],eax
  425773:	push   edi
  425774:	iret   
  425775:	pusha  
  425776:	mov    ch,0x45
  425778:	es pop edx
  42577a:	mov    ds:0xd9c2e7be,al
  42577f:	cmp    edi,DWORD PTR [ecx]
  425781:	mov    ds:0x1b2a87a4,eax
  425786:	xor    edx,DWORD PTR [esi-0x72]
  425789:	jb     0x42580a
  42578b:	xchg   DWORD PTR [eax+0x3844aebc],esi
  425791:	inc    ebx
  425792:	xor    edi,DWORD PTR [edx]
  425794:	push   0xffffffd8
  425796:	shl    BYTE PTR [edi+ebp*2],0xaa
  42579a:	fsubrp st(3),st
  42579c:	add    eax,0x207b41c3
  4257a1:	sbb    esp,esp
  4257a3:	fcomip st,st(0)
  4257a5:	fstp   TBYTE PTR [ebx+ecx*2-0x6335b693]
  4257ac:	int    0xa4
  4257ae:	shl    DWORD PTR ds:0x627ceb2f,1
  4257b4:	in     eax,0x23
  4257b6:	daa    
  4257b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257b8:	and    eax,0x85278843
  4257bd:	arpl   WORD PTR [ebp+0x690f4e1e],si
  4257c3:	ds jbe 0x425797
  4257c6:	sub    esp,DWORD PTR [ebx+0xf]
  4257c9:	adc    DWORD PTR [edi+ebx*8-0x46235740],edx
  4257d0:	addr16 or eax,0xbe3c3505
  4257d6:	pop    ebx
  4257d7:	std    
  4257d8:	inc    ecx
  4257d9:	rcl    DWORD PTR [ecx+0x7d],0x82
  4257dd:	jl     0x425783
  4257df:	imul   ebx,DWORD PTR [esi+eax*2+0x23],0x1c9de74
  4257e7:	imul   ebp,DWORD PTR [edi+0x75],0xffffffad
  4257eb:	rcl    BYTE PTR [esi],cl
  4257ed:	inc    edx
  4257ee:	in     al,0xe7
  4257f0:	pop    ebx
  4257f1:	iret   
  4257f2:	mov    ch,0x7f
  4257f4:	dec    ecx
  4257f5:	jecxz  0x4257d6
  4257f7:	pop    ecx
  4257f8:	inc    esi
  4257f9:	jl     0x42579c
  4257fb:	mov    al,ds:0x9c2be243
  425800:	fmul   DWORD PTR [edi+0x7e]
  425803:	aad    0xc3
  425805:	test   al,0x70
  425807:	push   0xffffffcc
  425809:	lea    ebx,[edx+ebx*4]
  42580c:	sbb    DWORD PTR [bp+di-0x25],ecx
  425810:	les    esp,FWORD PTR [edi]
  425812:	mov    eax,ds:0x11187811
  425817:	ins    DWORD PTR es:[edi],dx
  425818:	and    bl,BYTE PTR [esp+esi*4+0x17a2a9e8]
  42581f:	mov    ah,0x22
  425821:	imul   edx,DWORD PTR [eiz*2-0x66c84f5f],0x2d
  425829:	frstor [edx]
  42582b:	jmp    0x16a78d91
  425830:	ja     0x4257c5
  425832:	add    edx,DWORD PTR [esp+eax*1]
  425835:	mov    ds:0x49181c94,eax
  42583a:	(bad)  
  42583b:	xchg   edx,eax
  42583c:	test   BYTE PTR [edi-0xa8b5316],ch
  425842:	xor    DWORD PTR [edi-0x2ca1ed5f],edx
  425848:	mov    eax,0xae5a6e1c
  42584d:	xchg   edi,eax
  42584e:	xor    BYTE PTR [eax],bh
  425850:	xchg   ebp,eax
  425851:	push   edi
  425852:	cmp    BYTE PTR [edi],0xe0
  425855:	sbb    ebx,DWORD PTR [edi-0x544da6e1]
  42585b:	test   eax,0x6eb0be46
  425860:	lea    esp,[eax+0x58facbf7]
  425866:	cmp    BYTE PTR [ebx+0xf],dh
  425869:	dec    esp
  42586a:	bound  edx,QWORD PTR [ebp-0x45]
  42586d:	dec    edi
  42586e:	std    
  42586f:	pop    ds
  425870:	cld    
  425871:	mov    esi,edx
  425873:	adc    DWORD PTR [ebx],0xffffffe7
  425876:	icebp  
  425877:	in     al,dx
  425878:	cmp    al,0xed
  42587a:	fcmovbe st,st(3)
  42587c:	push   ebx
  42587d:	dec    ecx
  42587e:	jnp    0x42588b
  425880:	lea    esi,[edx]
  425882:	push   ds
  425883:	bound  edi,QWORD PTR [ebx]
  425885:	clc    
  425886:	je     0x4258db
  42588c:	mov    DWORD PTR [ebp-0xc],esi
  42588f:	mov    eax,DWORD PTR [ebp-0xc]
  425892:	mov    esi,DWORD PTR [ebp+0xc]
  425895:	xor    eax,ecx
  425897:	lea    eax,[eax*8+0x1939820]
  42589e:	mov    eax,DWORD PTR [esi+eax*1]
  4258a1:	mov    DWORD PTR [ebp+0xc],eax
  4258a4:	mov    eax,DWORD PTR [ebp-0x4]
  4258a7:	mov    esi,DWORD PTR [ebp-0x8]
  4258aa:	xor    eax,ecx
  4258ac:	xor    esi,ecx
  4258ae:	add    esi,edx
  4258b0:	add    eax,edx
  4258b2:	imul   eax,esi
  4258b5:	mov    esi,DWORD PTR [ebp+0xc]
  4258b8:	cmp    esi,eax
  4258ba:	je     0x4258db
  4258c0:	mov    eax,DWORD PTR [ebp-0x4]
  4258c3:	xor    eax,ecx
  4258c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4258c8:	add    eax,edx
  4258ca:	imul   eax,ecx
  4258cd:	add    eax,DWORD PTR [ebp+0x8]
  4258d0:	mov    DWORD PTR [ebp+0xc],eax
  4258d3:	mov    eax,DWORD PTR [ebp+0xc]
  4258d6:	jmp    0x4258ec
  4258db:	mov    eax,DWORD PTR [ebp-0x4]
  4258de:	mov    esi,DWORD PTR [ebp-0x8]
  4258e1:	xor    esi,ecx
  4258e3:	xor    eax,ecx
  4258e5:	add    esi,edx
  4258e7:	add    eax,edx
  4258e9:	imul   eax,esi
  4258ec:	pop    edi
  4258ed:	pop    esi
  4258ee:	leave  
  4258ef:	ret    0x8
	...
  425902:	add    BYTE PTR [eax],al
  425904:	int3   
  425905:	cmp    al,0xf3
  425907:	dec    ebp
  425908:	add    BYTE PTR [eax],al
  42590a:	add    BYTE PTR [eax],al
  42590c:	add    al,BYTE PTR [eax]
  42590e:	add    BYTE PTR [eax],al
  425910:	add    BYTE PTR ss:[eax],al
  425913:	add    BYTE PTR [eax],ah
  425915:	pop    ecx
  425916:	add    al,BYTE PTR [eax]
  425918:	and    BYTE PTR [ebp+0x2],cl
  42591b:	add    BYTE PTR [eax],al
  42591d:	add    BYTE PTR [eax],al
  42591f:	add    BYTE PTR [edx+0x53],dl
  425922:	inc    esp
  425923:	push   ebx
  425924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425925:	sbb    ch,BYTE PTR [esi+0x7c5072dc]
  42592b:	inc    ebx
  42592c:	mov    eax,ds:0x804fe910
  425931:	mov    esp,0x1f76c
  425936:	add    BYTE PTR [eax],al
  425938:	inc    edi
  425939:	cmp    bl,BYTE PTR [ebx+edx*2+0x79]
  42593d:	jae    0x42595f
  42593f:	inc    esp
  425940:	imul   esi,DWORD PTR [edx+0x20],0x5c6e6957
  425947:	inc    esi
  425948:	imul   ebp,DWORD PTR [ebp+eiz*2+0x44],0x49617461
  425950:	outs   dx,BYTE PTR ds:[esi]
  425951:	jae    0x4259bc
  425953:	fs add BYTE PTR gs:[ebx-0x137e13ab],cl
  42595b:	or     BYTE PTR [ecx],al
  42595d:	add    BYTE PTR [eax],al
  42595f:	push   ebx
  425960:	mov    eax,ebx
  425962:	xchg   ecx,eax
  425963:	mov    eax,DWORD PTR [ebp+0x8]
  425966:	cmp    eax,0xf89c85a5
  42596b:	jne    0x425e2c
  425971:	mov    eax,DWORD PTR [ebp+0xc]
  425974:	cmp    eax,0xf89c85a2
  425979:	jne    0x425e2c
  42597f:	mov    eax,DWORD PTR [ebp+0x24]
  425982:	mov    DWORD PTR [ebp-0x4],eax
  425985:	mov    eax,DWORD PTR [ebp-0x4]
  425988:	mov    eax,DWORD PTR [eax+0x1d8]
  42598e:	mov    eax,DWORD PTR [eax]
  425990:	mov    eax,DWORD PTR [eax]
  425992:	mov    DWORD PTR [ebp-0x8],eax
  425995:	mov    BYTE PTR [ebp-0x18],0x1a
  425999:	mov    BYTE PTR [ebp-0x17],0x1f
  42599d:	mov    BYTE PTR [ebp-0x16],0x18
  4259a1:	mov    BYTE PTR [ebp-0x15],0x4e
  4259a5:	mov    BYTE PTR [ebp-0x14],0x51
  4259a9:	mov    BYTE PTR [ebp-0x13],0x83
  4259ad:	mov    BYTE PTR [ebp-0x20],0xc
  4259b1:	mov    BYTE PTR [ebp-0x1f],0xe
  4259b5:	mov    BYTE PTR [ebp-0x1e],0x1c
  4259b9:	mov    BYTE PTR [ebp-0x1d],0x11
  4259bd:	mov    BYTE PTR [ebp-0x1c],0x4e
  4259c1:	mov    BYTE PTR [ebp-0x1b],0x51
  4259c5:	mov    BYTE PTR [ebp-0x1a],0x83
  4259c9:	mov    BYTE PTR [ebp-0x28],0xe
  4259cd:	mov    BYTE PTR [ebp-0x27],0x1b
  4259d1:	mov    BYTE PTR [ebp-0x26],0x17
  4259d5:	mov    BYTE PTR [ebp-0x25],0xa
  4259d9:	mov    BYTE PTR [ebp-0x24],0x20
  4259dd:	mov    BYTE PTR [ebp-0x23],0x13
  4259e1:	mov    BYTE PTR [ebp-0x22],0x18
  4259e5:	mov    BYTE PTR [ebp-0x21],0x83
  4259e9:	xor    ecx,ecx
  4259eb:	lea    eax,[ebp+ecx*1-0x18]
  4259ef:	movzx  edx,BYTE PTR [eax]
  4259f2:	xor    edx,0x7e
  4259f5:	add    edx,0x3
  4259f8:	inc    ecx
  4259f9:	mov    BYTE PTR [eax],dl
  4259fb:	cmp    ecx,0x6
  4259fe:	jb     0x4259eb
  425a00:	xor    ecx,ecx
  425a02:	lea    eax,[ebp+ecx*1-0x20]
  425a06:	movzx  edx,BYTE PTR [eax]
  425a09:	xor    edx,0x7e
  425a0c:	add    edx,0x3
  425a0f:	inc    ecx
  425a10:	mov    BYTE PTR [eax],dl
  425a12:	cmp    ecx,0x7
  425a15:	jb     0x425a02
  425a17:	xor    ecx,ecx
  425a19:	lea    eax,[ebp+ecx*1-0x28]
  425a1d:	movzx  edx,BYTE PTR [eax]
  425a20:	xor    edx,0x7e
  425a23:	add    edx,0x3
  425a26:	inc    ecx
  425a27:	mov    BYTE PTR [eax],dl
  425a29:	cmp    ecx,0x8
  425a2c:	jb     0x425a19
  425a2e:	lea    eax,[ebp-0x2c]
  425a31:	mov    DWORD PTR [ebp-0x8],eax
  425a34:	mov    ecx,DWORD PTR [ebp-0x8]
  425a37:	mov    eax,0x7113fccf
  425a3c:	mov    DWORD PTR [ecx],eax
  425a3e:	mov    ecx,DWORD PTR [ebp-0x2c]
  425a41:	push   esi
  425a42:	push   edi
  425a43:	mov    esi,0x4e3e
  425a48:	mov    ebx,0x3272f5
  425a4d:	cmp    ecx,eax
  425a4f:	jne    0x425b1a
  425a55:	lea    eax,[esi+0x39]
  425a58:	mov    WORD PTR [ebp-0x78],ax
  425a5c:	mov    eax,esi
  425a5e:	mov    WORD PTR [ebp-0x76],ax
  425a62:	add    eax,0x3f
  425a65:	mov    WORD PTR [ebp-0x74],ax
  425a69:	lea    eax,[esi-0x2]
  425a6c:	mov    WORD PTR [ebp-0x72],ax
  425a70:	add    eax,0x43
  425a73:	mov    ecx,eax
  425a75:	lea    eax,[esi-0x9]
  425a78:	mov    WORD PTR [ebp-0x66],ax
  425a7c:	mov    eax,esi
  425a7e:	mov    WORD PTR [ebp-0x64],ax
  425a82:	add    eax,0xffffffec
  425a85:	mov    WORD PTR [ebp-0x62],ax
  425a89:	mov    eax,0x443
  425a8e:	mov    WORD PTR [ebp-0x60],ax
  425a92:	mov    eax,0x5670
  425a97:	mov    WORD PTR [ebp-0x5e],ax
  425a9b:	mov    eax,0x6110
  425aa0:	mov    WORD PTR [ebp-0x5c],ax
  425aa4:	lea    eax,[ebp-0xe0]
  425aaa:	push   eax
  425aab:	mov    eax,DWORD PTR [ebp+0xc]
  425aae:	mov    edi,0x75108ae
  425ab3:	xor    eax,edi
  425ab5:	add    eax,ebx
  425ab7:	push   eax
  425ab8:	mov    WORD PTR [ebp-0x70],cx
  425abc:	lea    ecx,[esi-0xe]
  425abf:	mov    edx,ecx
  425ac1:	lea    eax,[ebp-0x78]
  425ac4:	push   eax
  425ac5:	mov    eax,DWORD PTR [ebp-0x4]
  425ac8:	mov    eax,DWORD PTR [eax+0x198]
  425ace:	mov    WORD PTR [ebp-0x6e],dx
  425ad2:	mov    edx,0x4f8a
  425ad7:	mov    WORD PTR [ebp-0x6c],dx
  425adb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e31
  425ae2:	mov    DWORD PTR [ebp-0x5a],0x4e30f1e6
  425ae9:	mov    DWORD PTR [ebp-0xe0],0x1
  425af3:	mov    DWORD PTR [ebp-0xdc],0x255
  425afd:	push   DWORD PTR [eax]
  425aff:	mov    eax,DWORD PTR [ebp+0x10]
  425b02:	call   eax
  425b04:	mov    DWORD PTR [ebp-0x8],eax
  425b07:	mov    eax,DWORD PTR [ebp-0x8]
  425b0a:	test   eax,eax
  425b0c:	je     0x425b1f
  425b0e:	xor    DWORD PTR ds:0x76586876,0x87687666
  425b18:	jmp    0x425b1f
  425b1a:	mov    edi,0x75108ae
  425b1f:	mov    eax,DWORD PTR [ebp-0x4]
  425b22:	mov    ecx,DWORD PTR [eax+0x18c]
  425b28:	xor    eax,eax
  425b2a:	cmp    DWORD PTR [ecx],eax
  425b2c:	jne    0x425d9f
  425b32:	mov    ecx,DWORD PTR [ebp-0x4]
  425b35:	mov    ecx,DWORD PTR [ecx+0x17c]
  425b3b:	mov    DWORD PTR [ecx],eax
  425b3d:	mov    ecx,DWORD PTR [ebp-0x4]
  425b40:	mov    ecx,DWORD PTR [ecx+0x180]
  425b46:	mov    DWORD PTR [ecx],eax
  425b48:	mov    eax,0x4e6d
  425b4d:	mov    WORD PTR [ebp-0x9c],ax
  425b54:	mov    eax,esi
  425b56:	mov    WORD PTR [ebp-0x9a],ax
  425b5d:	mov    eax,0x4e7d
  425b62:	mov    WORD PTR [ebp-0x98],ax
  425b69:	add    eax,0xffffffc0
  425b6c:	mov    WORD PTR [ebp-0x96],ax
  425b73:	mov    eax,0x4f8e
  425b78:	mov    WORD PTR [ebp-0x94],ax
  425b7f:	mov    eax,0x4e32
  425b84:	mov    WORD PTR [ebp-0x92],ax
  425b8b:	add    eax,0x4d
  425b8e:	mov    WORD PTR [ebp-0x90],ax
  425b95:	mov    eax,0x4e30
  425b9a:	mov    WORD PTR [ebp-0x8e],ax
  425ba1:	mov    eax,esi
  425ba3:	mov    WORD PTR [ebp-0x8c],ax
  425baa:	mov    eax,0x4e31
  425baf:	mov    WORD PTR [ebp-0x8a],ax
  425bb6:	mov    eax,0x99fd
  425bbb:	mov    WORD PTR [ebp-0x88],ax
  425bc2:	mov    eax,0x8d62
  425bc7:	mov    WORD PTR [ebp-0x86],ax
  425bce:	mov    eax,0xd66f
  425bd3:	mov    WORD PTR [ebp-0x84],ax
  425bda:	mov    eax,0xd783
  425bdf:	mov    WORD PTR [ebp-0x82],ax
  425be6:	mov    eax,0x2780
  425beb:	mov    WORD PTR [ebp-0x80],ax
  425bef:	mov    eax,0x4780
  425bf4:	mov    WORD PTR [ebp-0x7e],ax
  425bf8:	mov    eax,0x4e33
  425bfd:	push   0x8
  425bff:	mov    WORD PTR [ebp-0x7c],ax
  425c03:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  425c0a:	mov    DWORD PTR [ebp-0xc],0x83181320
  425c11:	lea    eax,[ebp-0x10]
  425c14:	pop    ecx
  425c15:	mov    dl,BYTE PTR [eax]
  425c17:	xor    dl,0x7e
  425c1a:	add    dl,0x3
  425c1d:	mov    BYTE PTR [eax],dl
  425c1f:	inc    eax
  425c20:	dec    ecx
  425c21:	jne    0x425c15
  425c23:	lea    eax,[ebp-0x10]
  425c26:	mov    DWORD PTR [ebp-0xdc],eax
  425c2c:	lea    eax,[ebp-0xe0]
  425c32:	push   eax
  425c33:	mov    eax,DWORD PTR [ebp+0xc]
  425c36:	xor    eax,edi
  425c38:	add    eax,ebx
  425c3a:	push   eax
  425c3b:	mov    eax,DWORD PTR [ebp-0x4]
  425c3e:	add    eax,0x66
  425c41:	push   eax
  425c42:	mov    eax,DWORD PTR [ebp-0x4]
  425c45:	mov    eax,DWORD PTR [eax+0x198]
  425c4b:	mov    DWORD PTR [ebp-0xe0],0x1
  425c55:	push   DWORD PTR [eax]
  425c57:	mov    eax,DWORD PTR [ebp+0x10]
  425c5a:	call   eax
  425c5c:	mov    ecx,DWORD PTR [ebp+0x8]
  425c5f:	xor    ecx,edi
  425c61:	add    ecx,ebx
  425c63:	mov    DWORD PTR [ebp-0x8],eax
  425c66:	cmp    eax,ecx
  425c68:	jne    0x425c83
  425c6a:	mov    eax,ds:0x33730bcc
  425c6f:	or     eax,0x22150bcf
  425c74:	mov    ds:0x33730bcc,eax
  425c79:	add    eax,0x3372e92f
  425c7e:	mov    ds:0x33730bcc,eax
  425c83:	mov    ecx,0x4e66
  425c88:	mov    eax,ecx
  425c8a:	mov    WORD PTR [ebp-0x40],ax
  425c8e:	add    eax,0x5
  425c91:	mov    edx,eax
  425c93:	mov    WORD PTR [ebp-0x3e],dx
  425c97:	mov    edx,0x4f93
  425c9c:	mov    WORD PTR [ebp-0x3c],dx
  425ca0:	add    edx,0xfffffff8
  425ca3:	mov    WORD PTR [ebp-0x3a],dx
  425ca7:	mov    edx,0x4f89
  425cac:	mov    WORD PTR [ebp-0x38],dx
  425cb0:	add    edx,0x3
  425cb3:	mov    WORD PTR [ebp-0x36],dx
  425cb7:	mov    edx,0x4f87
  425cbc:	mov    WORD PTR [ebp-0x34],dx
  425cc0:	mov    WORD PTR [ebp-0x32],cx
  425cc4:	mov    ecx,esi
  425cc6:	mov    WORD PTR [ebp-0x30],cx
  425cca:	lea    ecx,[edx-0x1]
  425ccd:	mov    edx,ecx
  425ccf:	mov    WORD PTR [ebp-0x54],dx
  425cd3:	mov    edx,eax
  425cd5:	mov    WORD PTR [ebp-0x52],dx
  425cd9:	mov    edx,0x4e73
  425cde:	mov    WORD PTR [ebp-0x50],dx
  425ce2:	mov    WORD PTR [ebp-0x4e],ax
  425ce6:	lea    eax,[edx-0xa]
  425ce9:	mov    WORD PTR [ebp-0x4c],ax
  425ced:	add    eax,0x3
  425cf0:	mov    WORD PTR [ebp-0x4a],ax
  425cf4:	lea    eax,[edx-0xc]
  425cf7:	mov    WORD PTR [ebp-0x48],ax
  425cfb:	mov    WORD PTR [ebp-0x46],cx
  425cff:	mov    WORD PTR [ebp-0x44],si
  425d03:	mov    eax,DWORD PTR [ebp+0x8]
  425d06:	movzx  ecx,WORD PTR [ebp-0x54]
  425d0a:	xor    eax,edi
  425d0c:	add    eax,ebx
  425d0e:	xor    eax,ecx
  425d10:	mov    WORD PTR [ebp-0x54],ax
  425d14:	mov    eax,DWORD PTR [ebp+0x8]
  425d17:	movzx  ecx,WORD PTR [ebp-0x40]
  425d1b:	xor    eax,edi
  425d1d:	add    eax,ebx
  425d1f:	xor    eax,ecx
  425d21:	mov    WORD PTR [ebp-0x40],ax
  425d25:	xor    eax,eax
  425d27:	mov    WORD PTR [ebp-0xf4],ax
  425d2e:	mov    WORD PTR [ebp-0x108],ax
  425d35:	mov    edi,DWORD PTR [ebp+0x24]
  425d38:	lea    eax,[ebp-0xf4]
  425d3e:	lea    edx,[ebp-0x54]
  425d41:	mov    DWORD PTR [ebp-0xe0],0x2
  425d4b:	mov    DWORD PTR [ebp-0xdc],eax
  425d51:	call   0x428789
  425d56:	mov    DWORD PTR [ebp-0xd8],eax
  425d5c:	lea    eax,[ebp-0xe0]
  425d62:	push   eax
  425d63:	mov    eax,DWORD PTR [ebp+0xc]
  425d66:	xor    eax,0x75108ae
  425d6b:	add    eax,ebx
  425d6d:	push   eax
  425d6e:	lea    eax,[ebp-0x9c]
  425d74:	push   eax
  425d75:	push   DWORD PTR [ebp-0x8]
  425d78:	mov    eax,DWORD PTR [ebp+0x10]
  425d7b:	call   eax
  425d7d:	mov    edi,DWORD PTR [ebp+0x24]
  425d80:	lea    eax,[ebp-0x108]
  425d86:	lea    edx,[ebp-0x40]
  425d89:	mov    DWORD PTR [ebp-0xdc],eax
  425d8f:	call   0x428789
  425d94:	mov    DWORD PTR [ebp-0xd8],eax
  425d9a:	mov    edi,0x75108ae
  425d9f:	mov    eax,DWORD PTR [ebp+0x14]
  425da2:	push   DWORD PTR [ebp-0x4]
  425da5:	push   DWORD PTR [ebp+0x20]
  425da8:	push   DWORD PTR [ebp+0x1c]
  425dab:	push   DWORD PTR [ebp+0x18]
  425dae:	push   DWORD PTR [ebp+0x10]
  425db1:	push   DWORD PTR [ebp+0x8]
  425db4:	push   DWORD PTR [ebp+0xc]
  425db7:	call   0x42702a
  425dbc:	test   eax,eax
  425dbe:	je     0x425e02
  425dc0:	add    DWORD PTR [ebp-0x4],eax
  425dc3:	push   DWORD PTR [ebp-0x4]
  425dc6:	lea    esi,[ebp+0x4]
  425dc9:	call   0x42621a
  425dce:	mov    eax,DWORD PTR [ebp-0x4]
  425dd1:	mov    eax,DWORD PTR [eax+0x1c8]
  425dd7:	mov    eax,DWORD PTR [eax]
  425dd9:	xor    eax,edi
  425ddb:	add    eax,ebx
  425ddd:	mov    eax,DWORD PTR [ebp-0x4]
  425de0:	jne    0x425df8
  425de2:	mov    ecx,DWORD PTR [ebp-0x4]
  425de5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425deb:	push   DWORD PTR [ecx]
  425ded:	mov    eax,DWORD PTR [eax+0x1e0]
  425df3:	call   DWORD PTR [eax+0x28]
  425df6:	jmp    0x425e02
  425df8:	mov    eax,DWORD PTR [eax+0x17c]
  425dfe:	mov    eax,DWORD PTR [eax]
  425e00:	add    DWORD PTR [esi],eax
  425e02:	mov    eax,DWORD PTR [ebp-0x4]
  425e05:	mov    eax,DWORD PTR [eax+0x1dc]
  425e0b:	dec    DWORD PTR [eax]
  425e0d:	mov    ecx,DWORD PTR [ebp-0x4]
  425e10:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425e16:	mov    eax,DWORD PTR [eax]
  425e18:	lea    eax,[ecx+eax*4]
  425e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  425e1e:	mov    ecx,DWORD PTR [ecx+0x17c]
  425e24:	mov    eax,DWORD PTR [eax]
  425e26:	mov    ecx,DWORD PTR [ecx]
  425e28:	add    DWORD PTR [eax],ecx
  425e2a:	pop    edi
  425e2b:	pop    esi
  425e2c:	pop    ebx
  425e2d:	leave  
  425e2e:	ret    0x20
  425e31:	push   edi
  425e32:	push   esi
  425e33:	push   ebx
  425e34:	push   ebp
  425e35:	mov    ebp,esp
  425e37:	mov    eax,DWORD PTR [ebp+0x24]
  425e3a:	add    DWORD PTR [ebp+0x28],eax
  425e3d:	push   eax
  425e3e:	cld    
  425e3f:	mov    esi,DWORD PTR [ebp+0x18]
  425e42:	add    DWORD PTR [ebp+0x1c],esi
  425e45:	push   esi
  425e46:	mov    esi,DWORD PTR [ebp+0x14]
  425e49:	lods   eax,DWORD PTR ds:[esi]
  425e4a:	xchg   edx,eax
  425e4b:	push   edx
  425e4c:	mov    cl,BYTE PTR [esi-0x2]
  425e4f:	or     eax,0xffffffff
  425e52:	shl    eax,cl
  425e54:	not    eax
  425e56:	push   eax
  425e57:	mov    cl,dh
  425e59:	or     eax,0xffffffff
  425e5c:	shl    eax,cl
  425e5e:	not    eax
  425e60:	push   eax
  425e61:	add    cl,dl
  425e63:	mov    edi,esi
  425e65:	sub    esp,0xc
  425e68:	sub    eax,eax
  425e6a:	inc    eax
  425e6b:	push   eax
  425e6c:	push   eax
  425e6d:	push   eax
  425e6e:	push   eax
  425e6f:	push   eax
  425e70:	push   edi
  425e71:	sub    esi,esi
  425e73:	push   esi
  425e74:	or     ebx,0xffffffff
  425e77:	mov    eax,0x300
  425e7c:	shl    eax,cl
  425e7e:	lea    ecx,[eax+0x736]
  425e84:	mov    eax,0x4000400
  425e89:	shr    ecx,1
  425e8b:	rep stos DWORD PTR es:[edi],eax
  425e8d:	push   0x5
  425e8f:	pop    ecx
  425e90:	call   0x42617b
  425e95:	loop   0x425e90
  425e97:	lea    esi,[esi]
  425e99:	lea    edi,[edi]
  425e9b:	mov    edi,DWORD PTR [ebp-0x4]
  425e9e:	mov    eax,DWORD PTR [ebp-0x10]
  425ea1:	sub    edi,DWORD PTR [ebp+0x24]
  425ea4:	and    eax,edi
  425ea6:	mov    DWORD PTR [ebp-0x18],eax
  425ea9:	mov    al,0x0
  425eab:	call   0x426193
  425eb0:	jne    0x425f4b
  425eb6:	mov    cl,BYTE PTR [ebp-0xc]
  425eb9:	and    edi,DWORD PTR [ebp-0x14]
  425ebc:	shl    edi,cl
  425ebe:	sub    cl,0x8
  425ec1:	neg    cl
  425ec3:	shr    esi,cl
  425ec5:	pop    eax
  425ec6:	add    edi,esi
  425ec8:	pop    esi
  425ec9:	lea    edi,[edi+edi*2]
  425ecc:	shl    edi,0x8
  425ecf:	cmp    al,0x7
  425ed1:	pop    edx
  425ed2:	lea    ecx,[esi+edi*2+0xe6c]
  425ed9:	push   ecx
  425eda:	push   esi
  425edb:	mov    esi,0x100
  425ee0:	push   eax
  425ee1:	mov    al,0x1
  425ee3:	jb     0x425f19
  425ee5:	mov    edi,DWORD PTR [ebp-0x4]
  425ee8:	sub    edi,DWORD PTR [ebp-0x24]
  425eeb:	movzx  edi,BYTE PTR [edi]
  425eee:	mov    ebp,DWORD PTR [ebp-0x34]
  425ef1:	shl    edi,1
  425ef3:	mov    ecx,esi
  425ef5:	and    esi,edi
  425ef7:	add    ecx,esi
  425ef9:	lea    ebp,[ebp+ecx*2+0x0]
  425efd:	call   0x4261b2
  425f02:	mov    ecx,eax
  425f04:	shr    esi,0x8
  425f07:	and    ecx,0x1
  425f0a:	cmp    esi,ecx
  425f0c:	mov    esi,0x100
  425f11:	jne    0x425f21
  425f13:	cmp    eax,esi
  425f15:	jb     0x425eee
  425f17:	jmp    0x425f2d
  425f19:	mov    ebp,DWORD PTR [ebp-0x34]
  425f1c:	call   0x4261b2
  425f21:	inc    eax
  425f22:	inc    esi
  425f23:	sub    eax,0x1
  425f26:	sub    esi,0x1
  425f29:	cmp    eax,esi
  425f2b:	jb     0x425f19
  425f2d:	pop    edx
  425f2e:	inc    edx
  425f2f:	cmp    edx,0x5
  425f32:	dec    edx
  425f33:	mov    ecx,edx
  425f35:	jb     0x425f46
  425f37:	inc    edx
  425f38:	cmp    edx,0xb
  425f3b:	dec    edx
  425f3c:	mov    cl,0x4
  425f3e:	dec    cl
  425f40:	jb     0x425f46
  425f42:	mov    cl,0x7
  425f44:	dec    cl
  425f46:	sub    edx,ecx
  425f48:	push   edx
  425f49:	jmp    0x425f9a
  425f4b:	mov    al,0xc1
  425f4d:	dec    al
  425f4f:	call   0x4261a3
  425f54:	jne    0x425f6a
  425f56:	pop    eax
  425f57:	pop    edi
  425f58:	pop    edx
  425f59:	pop    ecx
  425f5a:	pop    edx
  425f5b:	pop    ecx
  425f5c:	push   DWORD PTR [esp]
  425f5f:	push   ecx
  425f60:	push   edx
  425f61:	mov    edx,0x664
  425f66:	mov    cl,0x0
  425f68:	jmp    0x425fdd
  425f6a:	mov    al,0xcd
  425f6c:	dec    al
  425f6e:	call   0x4261a3
  425f73:	jne    0x425fa3
  425f75:	mov    al,0xf1
  425f77:	dec    al
  425f79:	call   0x426193
  425f7e:	jne    0x425fd3
  425f80:	pop    eax
  425f81:	cmp    al,0x7
  425f83:	mov    al,0x9
  425f85:	jb     0x425f89
  425f87:	mov    al,0xb
  425f89:	push   eax
  425f8a:	mov    esi,DWORD PTR [ebp-0x4]
  425f8d:	sub    esi,DWORD PTR [ebp-0x24]
  425f90:	cmp    esi,DWORD PTR [ebp+0x24]
  425f93:	jb     0x42616a
  425f99:	lods   al,BYTE PTR ds:[esi]
  425f9a:	mov    edi,DWORD PTR [ebp-0x4]
  425f9d:	stos   BYTE PTR es:[edi],al
  425f9e:	jmp    0x426131
  425fa3:	mov    al,0xd8
  425fa5:	call   0x4261a3
  425faa:	mov    esi,DWORD PTR [ebp-0x28]
  425fad:	je     0x425fca
  425faf:	mov    al,0xe4
  425fb1:	call   0x4261a3
  425fb6:	mov    esi,DWORD PTR [ebp-0x2c]
  425fb9:	je     0x425fc4
  425fbb:	mov    esi,DWORD PTR [ebp-0x30]
  425fbe:	mov    ecx,DWORD PTR [ebp-0x2c]
  425fc1:	mov    DWORD PTR [ebp-0x30],ecx
  425fc4:	mov    ecx,DWORD PTR [ebp-0x28]
  425fc7:	mov    DWORD PTR [ebp-0x2c],ecx
  425fca:	mov    ecx,DWORD PTR [ebp-0x24]
  425fcd:	mov    DWORD PTR [ebp-0x28],ecx
  425fd0:	mov    DWORD PTR [ebp-0x24],esi
  425fd3:	pop    eax
  425fd4:	pop    edi
  425fd5:	pop    ecx
  425fd6:	mov    edx,0xa68
  425fdb:	mov    cl,0x8
  425fdd:	add    edx,edi
  425fdf:	push   edx
  425fe0:	push   edi
  425fe1:	cmp    al,0x7
  425fe3:	mov    al,cl
  425fe5:	jb     0x425fe9
  425fe7:	add    al,0x3
  425fe9:	push   eax
  425fea:	mov    ebp,DWORD PTR [ebp-0x34]
  425fed:	call   0x4261b0
  425ff2:	jne    0x426008
  425ff4:	mov    eax,DWORD PTR [ebp-0x18]
  425ff7:	mov    edi,DWORD PTR [ebp-0x34]
  425ffa:	shl    eax,0x3
  425ffd:	sub    ecx,ecx
  425fff:	push   0x8
  426001:	pop    esi
  426002:	lea    edi,[edi+eax*2+0x4]
  426006:	jmp    0x42603d
  426008:	mov    ebp,DWORD PTR [ebp-0x34]
  42600b:	add    ebp,0x2
  42600e:	call   0x4261b0
  426013:	jne    0x42602d
  426015:	mov    eax,DWORD PTR [ebp-0x18]
  426018:	mov    edi,DWORD PTR [ebp-0x34]
  42601b:	shl    eax,0x3
  42601e:	push   0x8
  426020:	pop    ecx
  426021:	push   0x8
  426023:	pop    esi
  426024:	lea    edi,[edi+eax*2+0x104]
  42602b:	jmp    0x42603d
  42602d:	mov    edi,0x204
  426032:	add    edi,DWORD PTR [ebp-0x34]
  426035:	push   0x10
  426037:	pop    ecx
  426038:	mov    esi,0x100
  42603d:	mov    DWORD PTR [ebp-0x1c],ecx
  426040:	sub    eax,eax
  426042:	inc    eax
  426043:	mov    ebp,edi
  426045:	call   0x4261b2
  42604a:	mov    ecx,eax
  42604c:	sub    ecx,esi
  42604e:	jb     0x426043
  426050:	add    DWORD PTR [ebp-0x1c],ecx
  426053:	cmp    DWORD PTR [ebp-0x3c],0x4
  426057:	jae    0x42610d
  42605d:	add    DWORD PTR [ebp-0x3c],0x7
  426061:	mov    ecx,DWORD PTR [ebp-0x1c]
  426064:	cmp    ecx,0x4
  426067:	jb     0x42606c
  426069:	push   0x3
  42606b:	pop    ecx
  42606c:	mov    edi,DWORD PTR [ebp-0x38]
  42606f:	shl    ecx,0x6
  426072:	sub    eax,eax
  426074:	inc    eax
  426075:	push   0x40
  426077:	pop    esi
  426078:	lea    edi,[edi+ecx*2+0x360]
  42607f:	mov    ebp,edi
  426081:	call   0x4261b2
  426086:	mov    ecx,eax
  426088:	sub    ecx,esi
  42608a:	jb     0x42607f
  42608c:	mov    DWORD PTR [ebp-0x18],ecx
  42608f:	mov    DWORD PTR [ebp-0x24],ecx
  426092:	cmp    ecx,0x4
  426095:	jb     0x42610a
  426097:	mov    esi,ecx
  426099:	and    DWORD PTR [ebp-0x24],0x1
  42609d:	shr    esi,1
  42609f:	or     DWORD PTR [ebp-0x24],0x2
  4260a3:	dec    esi
  4260a4:	cmp    ecx,0xe
  4260a7:	jae    0x4260c2
  4260a9:	mov    eax,0x2af
  4260ae:	sub    eax,ecx
  4260b0:	mov    ecx,esi
  4260b2:	shl    BYTE PTR [ebp-0x24],cl
  4260b5:	add    eax,DWORD PTR [ebp-0x24]
  4260b8:	shl    eax,1
  4260ba:	add    eax,DWORD PTR [ebp-0x38]
  4260bd:	mov    DWORD PTR [ebp-0x34],eax
  4260c0:	jmp    0x4260ef
  4260c2:	sub    esi,0x4
  4260c5:	call   0x42616f
  4260ca:	shr    ebx,1
  4260cc:	shl    DWORD PTR [ebp-0x24],1
  4260cf:	cmp    DWORD PTR [ebp-0x20],ebx
  4260d2:	jb     0x4260da
  4260d4:	inc    DWORD PTR [ebp-0x24]
  4260d7:	sub    DWORD PTR [ebp-0x20],ebx
  4260da:	dec    esi
  4260db:	jne    0x4260c5
  4260dd:	mov    eax,0x644
  4260e2:	add    eax,DWORD PTR [ebp-0x38]
  4260e5:	mov    DWORD PTR [ebp-0x34],eax
  4260e8:	shl    DWORD PTR [ebp-0x24],0x4
  4260ec:	push   0x4
  4260ee:	pop    esi
  4260ef:	sub    edi,edi
  4260f1:	inc    edi
  4260f2:	mov    eax,edi
  4260f4:	mov    ebp,DWORD PTR [ebp-0x34]
  4260f7:	call   0x4261b2
  4260fc:	test   al,0x1
  4260fe:	je     0x426103
  426100:	or     DWORD PTR [ebp-0x24],edi
  426103:	shl    edi,1
  426105:	dec    esi
  426106:	jne    0x4260f4
  426108:	jmp    0x42610a
  42610a:	inc    DWORD PTR [ebp-0x24]
  42610d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426110:	add    ecx,0x2
  426113:	mov    edi,DWORD PTR [ebp-0x4]
  426116:	mov    eax,edi
  426118:	sub    eax,DWORD PTR [ebp+0x24]
  42611b:	cmp    DWORD PTR [ebp-0x24],eax
  42611e:	ja     0x42616a
  426120:	mov    esi,edi
  426122:	sub    esi,DWORD PTR [ebp-0x24]
  426125:	mov    edx,DWORD PTR [ebp+0x28]
  426128:	lods   al,BYTE PTR ds:[esi]
  426129:	stos   BYTE PTR es:[edi],al
  42612a:	cmp    edi,edx
  42612c:	jae    0x426131
  42612e:	dec    ecx
  42612f:	jne    0x426128
  426131:	mov    DWORD PTR [ebp-0x4],edi
  426134:	movzx  esi,al
  426137:	cmp    edi,DWORD PTR [ebp+0x28]
  42613a:	jb     0x425e9b
  426140:	call   0x42616f
  426145:	sub    eax,eax
  426147:	lea    ebp,[esp+0x3c]
  42614b:	mov    edx,DWORD PTR [ebp+0x20]
  42614e:	mov    esi,DWORD PTR [ebp-0x8]
  426151:	sub    esi,DWORD PTR [ebp+0x18]
  426154:	mov    DWORD PTR [edx],esi
  426156:	mov    dh,0xdd
  426158:	cmp    BYTE PTR [esi+0x7d347b7d],dh
  42615e:	sbb    BYTE PTR [esi+0x1f5af70],ch
  426164:	add    eax,0x188f893
  426169:	jmp    0x37cbeca2
  42616e:	jmp    0x4260fe
  426170:	ja     0x4260fa
  426172:	mov    BYTE PTR [eax-0x6873ae74],cl
  426178:	(bad)  
  426179:	pop    ss
  42617a:	test   al,0xe1
  42617c:	mov    dh,0x5d
  42617e:	imul   esi,DWORD PTR [ebp+ebx*2-0x8],0x55
  426183:	sbb    esi,DWORD PTR [esi+0xb8f0b9d]
  426189:	test   al,0x3a
  42618b:	scas   al,BYTE PTR es:[edi]
  42618c:	popf   
  42618d:	or     ebp,DWORD PTR [esi-0x68fe94a3]
  426193:	mov    dh,0xbd
  426195:	fwait
  426196:	les    esp,FWORD PTR [edx-0x75]
  426199:	(bad)  
  42619a:	sets   BYTE PTR [ebp+ebx*4+0x378f942b]
  4261a2:	mov    al,ds:0x948b62c4
  4261a7:	popf   
  4261a8:	fwait
  4261a9:	mov    dh,0x3d
  4261ab:	stos   DWORD PTR es:[edi],eax
  4261ac:	mov    esi,0x34889d39
  4261b1:	mov    edi,DWORD PTR [esi-0x717762c7]
  4261b7:	ja     0x426141
  4261b9:	mov    BYTE PTR [eax-0x4907aa74],cl
  4261bf:	mov    ecx,0x198f6818
  4261c4:	sbb    BYTE PTR [eax],cl
  4261c6:	test   al,0x74
  4261c8:	mov    ecx,0xfa55f918
  4261cd:	mov    dl,0xcc
  4261cf:	xchg   DWORD PTR [ecx+0x178f6818],ebx
  4261d5:	test   al,0x88
  4261d7:	push   esp
  4261d8:	and    al,0x20
  4261da:	mov    ecx,ebx
  4261dc:	movzx  edx,WORD PTR [ebp+0x0]
  4261e0:	shr    ecx,0xb
  4261e3:	imul   ecx,edx
  4261e6:	cmp    DWORD PTR [esp+0x20],ecx
  4261ea:	jae    0x426203
  4261ec:	mov    ebx,ecx
  4261ee:	mov    ecx,0x800
  4261f3:	sub    ecx,edx
  4261f5:	shr    ecx,0x5
  4261f8:	add    WORD PTR [ebp+0x0],cx
  4261fc:	add    eax,eax
  4261fe:	lea    ebp,[esp+0x40]
  426202:	ret    
  426203:	shr    edx,0x5
  426206:	sub    DWORD PTR [esp+0x20],ecx
  42620a:	sub    ebx,ecx
  42620c:	sub    WORD PTR [ebp+0x0],dx
  426210:	add    eax,eax
  426212:	add    eax,0x1
  426215:	lea    ebp,[esp+0x40]
  426219:	ret    
  42621a:	push   ebp
  42621b:	mov    ebp,esp
  42621d:	sub    esp,0x12c
  426223:	push   ebx
  426224:	push   esi
  426225:	push   edi
  426226:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42622d:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426234:	mov    eax,DWORD PTR [ebp+0x8]
  426237:	mov    DWORD PTR [ebp+0x8],eax
  42623a:	mov    ecx,DWORD PTR [ebp-0x10]
  42623d:	mov    ebx,0x75108ae
  426242:	xor    ecx,ebx
  426244:	mov    eax,0x3272f5
  426249:	add    ecx,eax
  42624b:	mov    DWORD PTR [ebp-0x24],ecx
  42624e:	mov    ecx,DWORD PTR [ebp-0x10]
  426251:	xor    ecx,ebx
  426253:	add    ecx,eax
  426255:	mov    DWORD PTR [ebp-0x40],ecx
  426258:	mov    ecx,DWORD PTR [ebp-0x10]
  42625b:	xor    ecx,ebx
  42625d:	add    ecx,eax
  42625f:	mov    DWORD PTR [ebp-0x3c],ecx
  426262:	mov    ecx,DWORD PTR [ebp-0x10]
  426265:	xor    ecx,ebx
  426267:	add    ecx,eax
  426269:	mov    DWORD PTR [ebp-0xd8],ecx
  42626f:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  426276:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  42627d:	mov    DWORD PTR [ebp-0x54],0xf89c85a1
  426284:	push   0x25
  426286:	pop    ecx
  426287:	mov    DWORD PTR [ebp-0x30],ecx
  42628a:	mov    DWORD PTR [ebp-0x30],ecx
  42628d:	push   0x65
  42628f:	pop    ecx
  426290:	mov    DWORD PTR [ebp-0x30],ecx
  426293:	mov    DWORD PTR [ebp-0x30],ecx
  426296:	mov    DWORD PTR [ebp-0x30],0x4d
  42629d:	mov    DWORD PTR [ebp-0x30],0x43
  4262a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4262a7:	xor    ecx,ebx
  4262a9:	add    ecx,eax
  4262ab:	mov    DWORD PTR [ebp-0x30],ecx
  4262ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4262b1:	xor    ecx,ebx
  4262b3:	add    ecx,eax
  4262b5:	mov    DWORD PTR [ebp-0x30],ecx
  4262b8:	mov    DWORD PTR [ebp-0x28],0x258
  4262bf:	mov    DWORD PTR [ebp-0x34],0x36
  4262c6:	mov    DWORD PTR [ebp-0x14],0x7a
  4262cd:	lea    edi,[ebp-0x10c]
  4262d3:	lea    esi,[ebp-0x12c]
  4262d9:	call   0x426f99
  4262de:	dec    DWORD PTR [ebp-0x14]
  4262e1:	jne    0x4262cd
  4262e3:	dec    DWORD PTR [ebp-0x34]
  4262e6:	jne    0x4262c6
  4262e8:	dec    DWORD PTR [ebp-0x28]
  4262eb:	jne    0x4262bf
  4262ed:	mov    DWORD PTR [ebp-0x28],0x400e
  4262f4:	mov    eax,DWORD PTR [ebp-0x10]
  4262f7:	xor    eax,ebx
  4262f9:	mov    esi,0x3272f5
  4262fe:	add    eax,esi
  426300:	mov    DWORD PTR [ebp-0x1c],eax
  426303:	mov    eax,DWORD PTR [ebp-0x10]
  426306:	and    DWORD PTR [ebp-0x94],0x0
  42630d:	xor    eax,ebx
  42630f:	add    eax,esi
  426311:	mov    DWORD PTR [ebp-0x38],eax
  426314:	mov    eax,fs:0x18
  42631a:	mov    DWORD PTR [ebp-0x94],eax
  426320:	mov    eax,DWORD PTR [eax+0x30]
  426323:	mov    DWORD PTR [ebp-0xcc],eax
  426329:	mov    eax,DWORD PTR [eax+0xc]
  42632c:	mov    DWORD PTR [ebp-0xc0],eax
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	lea    ecx,[ebp-0x94]
  42633b:	mov    DWORD PTR [eax+0x1a0],ecx
  426341:	mov    eax,DWORD PTR [ebp+0x8]
  426344:	lea    ecx,[ebp-0xcc]
  42634a:	mov    DWORD PTR [eax+0x1a4],ecx
  426350:	mov    eax,DWORD PTR [ebp+0x8]
  426353:	push   DWORD PTR [ebp+0x8]
  426356:	lea    ecx,[ebp-0xc0]
  42635c:	mov    DWORD PTR [eax+0x1a8],ecx
  426362:	call   0x42875a
  426367:	mov    ecx,DWORD PTR [ebp-0x10]
  42636a:	xor    ecx,ebx
  42636c:	add    ecx,esi
  42636e:	cmp    ecx,eax
  426370:	je     0x4266f3
  426376:	mov    eax,DWORD PTR [ebp+0x8]
  426379:	mov    eax,DWORD PTR [eax+0x194]
  42637f:	mov    ecx,DWORD PTR [eax]
  426381:	mov    eax,DWORD PTR [ebp+0x8]
  426384:	mov    eax,DWORD PTR [eax+0x194]
  42638a:	mov    eax,DWORD PTR [eax]
  42638c:	add    eax,DWORD PTR [ecx+0x3c]
  42638f:	mov    ecx,DWORD PTR [ebp+0x8]
  426392:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426398:	lea    edx,[ebp-0xec]
  42639e:	push   edx
  42639f:	mov    edx,DWORD PTR [ebp+0x8]
  4263a2:	mov    edx,DWORD PTR [edx+0x18c]
  4263a8:	mov    edx,DWORD PTR [edx]
  4263aa:	add    edx,DWORD PTR [eax+0x88]
  4263b0:	push   0x4
  4263b2:	push   DWORD PTR [eax+0x8c]
  4263b8:	push   edx
  4263b9:	call   DWORD PTR [ecx+0x1c]
  4263bc:	push   DWORD PTR [ebp+0x8]
  4263bf:	xor    eax,eax
  4263c1:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e38
  4263cb:	mov    DWORD PTR [ebp-0xa4],0x12371120
  4263d5:	mov    DWORD PTR [ebp-0xa0],0x40111c0a
  4263df:	mov    BYTE PTR [ebp-0x9c],0x83
  4263e6:	lea    edi,[ebp-0x9b]
  4263ec:	stos   DWORD PTR es:[edi],eax
  4263ed:	stos   WORD PTR es:[edi],ax
  4263ef:	stos   BYTE PTR es:[edi],al
  4263f0:	xor    eax,eax
  4263f2:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e38
  4263fc:	mov    DWORD PTR [ebp-0xb8],0x12371120
  426406:	mov    DWORD PTR [ebp-0xb4],0x2a111c0a
  426410:	mov    BYTE PTR [ebp-0xb0],0x83
  426417:	lea    edi,[ebp-0xaf]
  42641d:	stos   DWORD PTR es:[edi],eax
  42641e:	stos   WORD PTR es:[edi],ax
  426420:	stos   BYTE PTR es:[edi],al
  426421:	mov    edi,DWORD PTR [ebp+0x8]
  426424:	mov    eax,DWORD PTR [ebp+0x8]
  426427:	mov    edx,DWORD PTR [eax+0x1b8]
  42642d:	mov    DWORD PTR [ebp-0x68],0x110f0e17
  426434:	mov    DWORD PTR [ebp-0x64],0x1813141e
  42643b:	mov    WORD PTR [ebp-0x60],0x8340
  426441:	mov    DWORD PTR [ebp-0x90],0x1b3e0e38
  42644b:	mov    DWORD PTR [ebp-0x8c],0x17401120
  426455:	mov    DWORD PTR [ebp-0x88],0x35201b13
  42645f:	mov    DWORD PTR [ebp-0x84],0x111c140c
  426469:	mov    DWORD PTR [ebp-0x80],0x83401e18
  426470:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e38
  426477:	mov    DWORD PTR [ebp-0x78],0x17401120
  42647e:	mov    DWORD PTR [ebp-0x74],0x35201b13
  426485:	mov    DWORD PTR [ebp-0x70],0x111c140c
  42648c:	mov    DWORD PTR [ebp-0x6c],0x832a1e18
  426493:	call   0x428789
  426498:	push   eax
  426499:	mov    eax,DWORD PTR [ebp+0x8]
  42649c:	mov    eax,DWORD PTR [eax+0x1a8]
  4264a2:	push   DWORD PTR [eax]
  4264a4:	call   0x42842a
  4264a9:	test   eax,eax
  4264ab:	jne    0x4264fd
  4264ad:	mov    eax,DWORD PTR [ebp+0x8]
  4264b0:	mov    eax,DWORD PTR [eax+0x1e0]
  4264b6:	mov    edi,DWORD PTR [ebp+0x8]
  4264b9:	add    eax,0x4
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	mov    eax,DWORD PTR [ebp+0x8]
  4264c2:	mov    edx,DWORD PTR [eax+0x1b8]
  4264c8:	call   0x428789
  4264cd:	push   eax
  4264ce:	mov    eax,DWORD PTR [ebp-0x20]
  4264d1:	call   DWORD PTR [eax]
  4264d3:	test   eax,eax
  4264d5:	jne    0x4264fd
  4264d7:	mov    eax,DWORD PTR [ebp+0x8]
  4264da:	mov    eax,DWORD PTR [eax+0x1e0]
  4264e0:	mov    edi,DWORD PTR [ebp+0x8]
  4264e3:	add    eax,0x10
  4264e6:	mov    DWORD PTR [ebp-0x20],eax
  4264e9:	mov    eax,DWORD PTR [ebp+0x8]
  4264ec:	mov    edx,DWORD PTR [eax+0x1b8]
  4264f2:	call   0x428789
  4264f7:	push   eax
  4264f8:	mov    eax,DWORD PTR [ebp-0x20]
  4264fb:	call   DWORD PTR [eax]
  4264fd:	mov    eax,DWORD PTR [ebp-0x10]
  426500:	mov    ecx,DWORD PTR [ebp-0x28]
  426503:	xor    eax,ebx
  426505:	add    eax,esi
  426507:	cmp    eax,ecx
  426509:	je     0x4266cc
  42650f:	mov    eax,DWORD PTR [ebp-0x18]
  426512:	xor    eax,ebx
  426514:	mov    ecx,0xffcd8d0b
  426519:	sub    ecx,eax
  42651b:	add    ecx,DWORD PTR [ebp-0x28]
  42651e:	mov    eax,DWORD PTR [ebp-0x1c]
  426521:	cmp    eax,ecx
  426523:	ja     0x4266cc
  426529:	mov    DWORD PTR [ebp-0x34],0x0
  426530:	push   DWORD PTR [ebp+0x8]
  426533:	mov    edi,DWORD PTR [ebp+0x8]
  426536:	mov    eax,DWORD PTR [ebp+0x8]
  426539:	mov    edx,DWORD PTR [eax+0x1b4]
  42653f:	call   0x428789
  426544:	push   eax
  426545:	mov    eax,DWORD PTR [ebp+0x8]
  426548:	mov    eax,DWORD PTR [eax+0x1a8]
  42654e:	push   DWORD PTR [eax]
  426550:	call   0x42842a
  426555:	mov    ecx,DWORD PTR [ebp+0x8]
  426558:	mov    ecx,DWORD PTR [ecx+0x19c]
  42655e:	mov    DWORD PTR [ecx],eax
  426560:	mov    eax,DWORD PTR [ebp+0x8]
  426563:	mov    edi,DWORD PTR [eax+0x1e0]
  426569:	mov    esi,DWORD PTR [ebp+0x8]
  42656c:	xor    eax,eax
  42656e:	lea    edx,[ebp-0x7c]
  426571:	call   0x4287bf
  426576:	push   eax
  426577:	mov    eax,DWORD PTR [ebp+0x8]
  42657a:	mov    eax,DWORD PTR [eax+0x19c]
  426580:	push   DWORD PTR [eax]
  426582:	call   DWORD PTR [edi+0x8]
  426585:	mov    DWORD PTR [ebp-0x20],eax
  426588:	mov    eax,DWORD PTR [ebp+0x8]
  42658b:	mov    edi,DWORD PTR [eax+0x1e0]
  426591:	mov    esi,DWORD PTR [ebp+0x8]
  426594:	xor    eax,eax
  426596:	lea    edx,[ebp-0x90]
  42659c:	call   0x4287bf
  4265a1:	push   eax
  4265a2:	mov    eax,DWORD PTR [ebp+0x8]
  4265a5:	mov    eax,DWORD PTR [eax+0x19c]
  4265ab:	push   DWORD PTR [eax]
  4265ad:	call   DWORD PTR [edi+0x8]
  4265b0:	mov    eax,DWORD PTR [ebp+0x8]
  4265b3:	mov    edi,DWORD PTR [eax+0x1e0]
  4265b9:	mov    esi,DWORD PTR [ebp+0x8]
  4265bc:	xor    eax,eax
  4265be:	lea    edx,[ebp-0xa8]
  4265c4:	call   0x4287bf
  4265c9:	push   eax
  4265ca:	mov    eax,DWORD PTR [ebp+0x8]
  4265cd:	mov    eax,DWORD PTR [eax+0x19c]
  4265d3:	push   DWORD PTR [eax]
  4265d5:	call   DWORD PTR [edi+0x8]
  4265d8:	and    DWORD PTR [ebp-0x8],0x0
  4265dc:	mov    DWORD PTR [ebp-0x48],eax
  4265df:	mov    eax,DWORD PTR [ebp-0x8]
  4265e2:	and    eax,0x7
  4265e5:	add    eax,0x31
  4265e8:	push   eax
  4265e9:	call   DWORD PTR [ebp-0x20]
  4265ec:	test   eax,eax
  4265ee:	je     0x426632
  4265f0:	mov    eax,DWORD PTR [ebp-0x8]
  4265f3:	push   0x19
  4265f5:	xor    edx,edx
  4265f7:	pop    ecx
  4265f8:	div    ecx
  4265fa:	add    dl,0x41
  4265fd:	movzx  eax,dl
  426600:	push   eax
  426601:	call   DWORD PTR [ebp-0x48]
  426604:	test   eax,eax
  426606:	jne    0x426632
  426608:	mov    eax,DWORD PTR [ebp+0x8]
  42660b:	mov    edi,DWORD PTR [eax+0x1e0]
  426611:	mov    esi,DWORD PTR [ebp+0x8]
  426614:	xor    eax,eax
  426616:	lea    edx,[ebp-0x68]
  426619:	call   0x4287bf
  42661e:	push   eax
  42661f:	mov    eax,DWORD PTR [ebp+0x8]
  426622:	mov    eax,DWORD PTR [eax+0x198]
  426628:	push   DWORD PTR [eax]
  42662a:	call   DWORD PTR [edi+0x8]
  42662d:	mov    DWORD PTR [ebp-0x14],eax
  426630:	jmp    0x426636
  426632:	and    DWORD PTR [ebp-0x14],0x0
  426636:	inc    DWORD PTR [ebp-0x8]
  426639:	cmp    DWORD PTR [ebp-0x8],0x10
  42663d:	jb     0x4265df
  42663f:	mov    eax,DWORD PTR [ebp-0x18]
  426642:	mov    esi,DWORD PTR [ebp+0x8]
  426645:	xor    eax,ebx
  426647:	mov    edi,0x3272f5
  42664c:	add    eax,edi
  42664e:	lea    edx,[ebp-0x10c]
  426654:	call   0x4287bf
  426659:	push   eax
  42665a:	mov    eax,DWORD PTR [ebp-0x10]
  42665d:	mov    esi,DWORD PTR [ebp+0x8]
  426660:	xor    eax,ebx
  426662:	add    eax,edi
  426664:	lea    edx,[ebp-0x12c]
  42666a:	call   0x4287bf
  42666f:	push   eax
  426670:	call   DWORD PTR [ebp-0x14]
  426673:	mov    ecx,DWORD PTR [ebp-0x10]
  426676:	xor    ecx,ebx
  426678:	add    ecx,edi
  42667a:	cmp    ecx,eax
  42667c:	jne    0x426685
  42667e:	mov    DWORD PTR [ebp-0x34],0x1
  426685:	mov    eax,DWORD PTR [ebp-0x18]
  426688:	mov    ecx,DWORD PTR [ebp-0x1c]
  42668b:	xor    eax,ebx
  42668d:	lea    eax,[eax+ecx*1+0x3272f5]
  426694:	mov    DWORD PTR [ebp-0x1c],eax
  426697:	mov    eax,DWORD PTR [ebp-0x34]
  42669a:	test   eax,eax
  42669c:	je     0x4266b0
  42669e:	mov    eax,DWORD PTR [ebp-0x18]
  4266a1:	mov    ecx,DWORD PTR [ebp-0x38]
  4266a4:	xor    eax,ebx
  4266a6:	lea    eax,[eax+ecx*1+0x3272f5]
  4266ad:	mov    DWORD PTR [ebp-0x38],eax
  4266b0:	mov    eax,DWORD PTR [ebp-0x18]
  4266b3:	xor    eax,ebx
  4266b5:	mov    ecx,0xffcd8d0b
  4266ba:	sub    ecx,eax
  4266bc:	add    ecx,DWORD PTR [ebp-0x28]
  4266bf:	mov    eax,DWORD PTR [ebp-0x1c]
  4266c2:	cmp    eax,ecx
  4266c4:	jbe    0x426529
  4266ca:	mov    esi,edi
  4266cc:	mov    eax,DWORD PTR [ebp-0x38]
  4266cf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266d2:	cmp    ecx,eax
  4266d4:	jne    0x4266e7
  4266d6:	push   DWORD PTR [ebp+0x8]
  4266d9:	lea    eax,[ebp-0x40]
  4266dc:	push   eax
  4266dd:	call   0x42922e
  4266e2:	mov    DWORD PTR [ebp-0x24],eax
  4266e5:	jmp    0x4266f3
  4266e7:	mov    eax,DWORD PTR [ebp-0x24]
  4266ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ed:	xor    ecx,ebx
  4266ef:	add    ecx,esi
  4266f1:	xor    DWORD PTR [eax],ecx
  4266f3:	mov    eax,DWORD PTR [ebp-0x10]
  4266f6:	mov    ecx,DWORD PTR [ebp-0x24]
  4266f9:	xor    eax,ebx
  4266fb:	add    eax,esi
  4266fd:	cmp    eax,ecx
  4266ff:	je     0x426e77
  426705:	mov    eax,DWORD PTR [ebp-0x10]
  426708:	mov    ecx,DWORD PTR [ebp-0x40]
  42670b:	xor    eax,ebx
  42670d:	add    eax,esi
  42670f:	cmp    eax,ecx
  426711:	je     0x426e77
  426717:	mov    eax,DWORD PTR [ebp-0x10]
  42671a:	xor    eax,ebx
  42671c:	add    eax,esi
  42671e:	jmp    0x42673c
  426720:	mov    edi,DWORD PTR [ebp-0x24]
  426723:	mov    cl,al
  426725:	and    cl,0x1f
  426728:	or     dl,0xff
  42672b:	sub    dl,cl
  42672d:	add    BYTE PTR [edi+eax*1],dl
  426730:	mov    ecx,DWORD PTR [ebp-0x18]
  426733:	xor    ecx,ebx
  426735:	lea    eax,[eax+ecx*1+0x3272f5]
  42673c:	mov    ecx,DWORD PTR [ebp-0x40]
  42673f:	cmp    eax,ecx
  426741:	jb     0x426720
  426743:	mov    eax,DWORD PTR [ebp-0x40]
  426746:	mov    DWORD PTR [ebp-0x28],eax
  426749:	mov    eax,DWORD PTR [ebp-0x24]
  42674c:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  426753:	mov    DWORD PTR [ebp-0xd4],eax
  426759:	mov    edi,0xf89c85a2
  42675e:	mov    DWORD PTR [ebp-0x2c],edi
  426761:	mov    eax,DWORD PTR [ebp-0x38]
  426764:	xor    eax,ebx
  426766:	add    eax,esi
  426768:	mov    DWORD PTR [ebp-0xc],eax
  42676b:	mov    eax,DWORD PTR [ebp-0x38]
  42676e:	xor    eax,ebx
  426770:	add    eax,esi
  426772:	mov    DWORD PTR [ebp-0x8],eax
  426775:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42677c:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426783:	mov    eax,DWORD PTR [ebp-0x38]
  426786:	mov    ecx,DWORD PTR [ebp-0x28]
  426789:	xor    eax,ebx
  42678b:	add    eax,esi
  42678d:	cmp    ecx,eax
  42678f:	je     0x42698e
  426795:	jmp    0x42696a
  42679a:	mov    ecx,DWORD PTR [ebp-0xc]
  42679d:	mov    eax,DWORD PTR [ebp-0x28]
  4267a0:	sub    eax,ecx
  4267a2:	mov    ecx,DWORD PTR [ebp-0x48]
  4267a5:	xor    ecx,ebx
  4267a7:	add    ecx,esi
  4267a9:	xor    edx,edx
  4267ab:	div    ecx
  4267ad:	mov    DWORD PTR [ebp-0x8],eax
  4267b0:	mov    eax,DWORD PTR [ebp-0x4c]
  4267b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4267b6:	xor    eax,ebx
  4267b8:	add    eax,esi
  4267ba:	cmp    ecx,eax
  4267bc:	jbe    0x4267c8
  4267be:	mov    eax,DWORD PTR [ebp-0x4c]
  4267c1:	xor    eax,ebx
  4267c3:	add    eax,esi
  4267c5:	mov    DWORD PTR [ebp-0x8],eax
  4267c8:	mov    eax,DWORD PTR [ebp-0x48]
  4267cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4267ce:	xor    eax,ebx
  4267d0:	add    eax,esi
  4267d2:	imul   eax,ecx
  4267d5:	mov    DWORD PTR [ebp-0x8],eax
  4267d8:	mov    eax,DWORD PTR [ebp-0x38]
  4267db:	mov    ecx,DWORD PTR [ebp-0x8]
  4267de:	xor    eax,ebx
  4267e0:	add    eax,esi
  4267e2:	cmp    ecx,eax
  4267e4:	je     0x426958
  4267ea:	mov    eax,DWORD PTR [ebp-0x8]
  4267ed:	mov    DWORD PTR [ebp-0x14],eax
  4267f0:	mov    eax,DWORD PTR [ebp-0xc]
  4267f3:	add    eax,DWORD PTR [ebp-0xd4]
  4267f9:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  426800:	mov    DWORD PTR [ebp-0x34],edi
  426803:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  42680d:	mov    DWORD PTR [ebp-0x8],eax
  426810:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426817:	mov    DWORD PTR [ebp-0x1c],edi
  42681a:	mov    eax,DWORD PTR [ebp-0x20]
  42681d:	xor    eax,ebx
  42681f:	add    eax,esi
  426821:	jmp    0x426917
  426826:	mov    DWORD PTR [ebp-0xe0],0xf89c85b8
  426830:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  42683a:	mov    eax,DWORD PTR [ebp-0x1c]
  42683d:	mov    ecx,DWORD PTR [ebp-0x44]
  426840:	xor    eax,ebx
  426842:	add    eax,esi
  426844:	imul   eax,ecx
  426847:	mov    ecx,DWORD PTR [ebp-0x8]
  42684a:	mov    al,BYTE PTR [eax+ecx*1]
  42684d:	mov    BYTE PTR [ebp-0x2],al
  426850:	mov    eax,DWORD PTR [ebp-0x1c]
  426853:	mov    ecx,DWORD PTR [ebp-0x44]
  426856:	xor    eax,ebx
  426858:	add    eax,esi
  42685a:	imul   eax,ecx
  42685d:	mov    ecx,DWORD PTR [ebp-0xe8]
  426863:	xor    ecx,ebx
  426865:	add    eax,ecx
  426867:	mov    ecx,DWORD PTR [ebp-0x8]
  42686a:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426872:	mov    ecx,DWORD PTR [ebp-0xe0]
  426878:	xor    ecx,ebx
  42687a:	lea    eax,[ecx+eax*1+0x3272f5]
  426881:	movzx  ecx,BYTE PTR [ebp-0x2]
  426885:	xor    ecx,eax
  426887:	mov    BYTE PTR [ebp-0x2],cl
  42688a:	mov    al,BYTE PTR [ebp-0x2]
  42688d:	mov    ecx,DWORD PTR [ebp-0x1c]
  426890:	mov    edx,DWORD PTR [ebp-0x44]
  426893:	xor    ecx,ebx
  426895:	add    ecx,esi
  426897:	imul   ecx,edx
  42689a:	mov    edx,DWORD PTR [ebp-0x8]
  42689d:	mov    BYTE PTR [ecx+edx*1],al
  4268a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4268a3:	mov    ecx,DWORD PTR [ebp-0x44]
  4268a6:	xor    eax,ebx
  4268a8:	add    eax,esi
  4268aa:	imul   eax,ecx
  4268ad:	mov    ecx,DWORD PTR [ebp-0x8]
  4268b0:	mov    al,BYTE PTR [eax+ecx*1]
  4268b3:	mov    BYTE PTR [ebp-0x2],al
  4268b6:	mov    eax,DWORD PTR [ebp-0x1c]
  4268b9:	mov    ecx,DWORD PTR [ebp-0x44]
  4268bc:	xor    eax,ebx
  4268be:	add    eax,esi
  4268c0:	imul   eax,ecx
  4268c3:	mov    ecx,DWORD PTR [ebp-0x34]
  4268c6:	xor    ecx,ebx
  4268c8:	add    eax,ecx
  4268ca:	mov    ecx,DWORD PTR [ebp-0x8]
  4268cd:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  4268d5:	mov    ecx,DWORD PTR [ebp-0xc4]
  4268db:	xor    ecx,ebx
  4268dd:	lea    eax,[ecx+eax*1+0x3272f5]
  4268e4:	movzx  ecx,BYTE PTR [ebp-0x2]
  4268e8:	xor    ecx,eax
  4268ea:	mov    BYTE PTR [ebp-0x2],cl
  4268ed:	mov    al,BYTE PTR [ebp-0x2]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4268f3:	mov    edx,DWORD PTR [ebp-0x44]
  4268f6:	xor    ecx,ebx
  4268f8:	add    ecx,esi
  4268fa:	imul   ecx,edx
  4268fd:	mov    edx,DWORD PTR [ebp-0x8]
  426900:	mov    BYTE PTR [ecx+edx*1],al
  426903:	mov    eax,DWORD PTR [ebp-0x30]
  426906:	mov    ecx,DWORD PTR [ebp-0x34]
  426909:	xor    eax,ebx
  42690b:	xor    ecx,ebx
  42690d:	add    eax,esi
  42690f:	add    ecx,esi
  426911:	imul   eax,ecx
  426914:	add    eax,DWORD PTR [ebp-0x44]
  426917:	mov    DWORD PTR [ebp-0x44],eax
  42691a:	mov    eax,DWORD PTR [ebp-0x44]
  42691d:	mov    ecx,DWORD PTR [ebp-0x14]
  426920:	cmp    ecx,eax
  426922:	jb     0x426826
  426928:	mov    eax,DWORD PTR [ebp-0x34]
  42692b:	mov    ecx,DWORD PTR [ebp-0x14]
  42692e:	xor    eax,ebx
  426930:	add    eax,esi
  426932:	imul   eax,ecx
  426935:	mov    ecx,DWORD PTR [ebp-0x20]
  426938:	xor    ecx,ebx
  42693a:	add    ecx,esi
  42693c:	or     eax,ecx
  42693e:	mov    ecx,DWORD PTR [ebp-0x2c]
  426941:	xor    ecx,ebx
  426943:	add    eax,ecx
  426945:	mov    ecx,DWORD PTR [ebp-0x2c]
  426948:	xor    ecx,ebx
  42694a:	add    eax,ecx
  42694c:	mov    ecx,DWORD PTR [ebp-0xc]
  42694f:	lea    eax,[eax+ecx*1+0x64e5ea]
  426956:	jmp    0x426967
  426958:	mov    eax,DWORD PTR [ebp-0x2c]
  42695b:	mov    ecx,DWORD PTR [ebp-0xc]
  42695e:	xor    eax,ebx
  426960:	lea    eax,[eax+ecx*1+0x3272f5]
  426967:	mov    DWORD PTR [ebp-0xc],eax
  42696a:	mov    eax,DWORD PTR [ebp-0x2c]
  42696d:	xor    eax,ebx
  42696f:	mov    ecx,0xffcd8d0b
  426974:	sub    ecx,eax
  426976:	add    ecx,DWORD PTR [ebp-0x28]
  426979:	mov    eax,DWORD PTR [ebp-0x2c]
  42697c:	mov    edx,DWORD PTR [ebp-0xc]
  42697f:	xor    eax,ebx
  426981:	add    eax,esi
  426983:	imul   eax,edx
  426986:	cmp    eax,ecx
  426988:	jbe    0x42679a
  42698e:	mov    eax,DWORD PTR [ebp-0x10]
  426991:	mov    ecx,DWORD PTR [ebp-0x40]
  426994:	mov    eax,DWORD PTR [ebp+0x8]
  426997:	mov    edx,DWORD PTR [ebp-0x54]
  42699a:	mov    eax,DWORD PTR [eax+0x1e0]
  4269a0:	xor    edx,ebx
  4269a2:	add    edx,esi
  4269a4:	push   edx
  4269a5:	mov    edx,DWORD PTR [ebp-0x3c]
  4269a8:	xor    edx,ebx
  4269aa:	add    edx,esi
  4269ac:	push   edx
  4269ad:	push   ecx
  4269ae:	mov    DWORD PTR [ebp-0x30],ecx
  4269b1:	mov    ecx,DWORD PTR [ebp-0x10]
  4269b4:	xor    ecx,ebx
  4269b6:	add    ecx,esi
  4269b8:	push   ecx
  4269b9:	call   DWORD PTR [eax+0x14]
  4269bc:	mov    edi,eax
  4269be:	mov    eax,DWORD PTR [ebp-0x10]
  4269c1:	xor    eax,ebx
  4269c3:	add    eax,esi
  4269c5:	cmp    eax,edi
  4269c7:	je     0x426a22
  4269c9:	mov    eax,DWORD PTR [ebp-0x10]
  4269cc:	jmp    0x4269ef
  4269ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4269d1:	xor    eax,ebx
  4269d3:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f5]
  4269da:	mov    BYTE PTR [eax+edi*1+0x3272f5],cl
  4269e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4269e4:	xor    ecx,ebx
  4269e6:	lea    eax,[ecx+eax*1+0x3272f5]
  4269ed:	xor    eax,ebx
  4269ef:	mov    ecx,DWORD PTR [ebp-0x40]
  4269f2:	sub    ecx,esi
  4269f4:	xor    ecx,ebx
  4269f6:	cmp    eax,ecx
  4269f8:	jne    0x4269ce
  4269fa:	mov    eax,DWORD PTR [ebp+0x8]
  4269fd:	mov    ecx,DWORD PTR [ebp-0x50]
  426a00:	mov    eax,DWORD PTR [eax+0x1e0]
  426a06:	xor    ecx,ebx
  426a08:	add    ecx,esi
  426a0a:	push   ecx
  426a0b:	mov    ecx,DWORD PTR [ebp-0x10]
  426a0e:	xor    ecx,ebx
  426a10:	add    ecx,esi
  426a12:	push   ecx
  426a13:	push   DWORD PTR [ebp-0x24]
  426a16:	call   DWORD PTR [eax+0x18]
  426a19:	mov    eax,DWORD PTR [ebp-0x30]
  426a1c:	mov    DWORD PTR [ebp-0x24],edi
  426a1f:	mov    DWORD PTR [ebp-0x40],eax
  426a22:	mov    edi,DWORD PTR [ebp-0x24]
  426a25:	mov    eax,DWORD PTR [ebp-0x18]
  426a28:	mov    ecx,DWORD PTR [ebp-0x10]
  426a2b:	xor    eax,ebx
  426a2d:	mov    DWORD PTR [ebp-0x30],edi
  426a30:	add    eax,esi
  426a32:	mov    DWORD PTR [ebp-0x5c],0x402b332b
  426a39:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  426a40:	jmp    0x426a74
  426a42:	xor    ecx,ebx
  426a44:	mov    dl,BYTE PTR [ebp+ecx*1+0x327299]
  426a4b:	xor    dl,0x7e
  426a4e:	add    dl,0x3
  426a51:	mov    DWORD PTR [ebp-0x3c],ecx
  426a54:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f5]
  426a5c:	movzx  edx,dl
  426a5f:	cmp    ecx,edx
  426a61:	jne    0x426a7e
  426a63:	mov    ecx,DWORD PTR [ebp-0x18]
  426a66:	mov    edx,DWORD PTR [ebp-0x3c]
  426a69:	xor    ecx,ebx
  426a6b:	lea    ecx,[ecx+edx*1+0x3272f5]
  426a72:	xor    ecx,ebx
  426a74:	cmp    ecx,0xf89c85bd
  426a7a:	jne    0x426a42
  426a7c:	jmp    0x426a85
  426a7e:	mov    eax,DWORD PTR [ebp-0x10]
  426a81:	xor    eax,ebx
  426a83:	add    eax,esi
  426a85:	mov    ecx,DWORD PTR [ebp-0x10]
  426a88:	xor    ecx,ebx
  426a8a:	add    ecx,esi
  426a8c:	cmp    ecx,eax
  426a8e:	je     0x426c01
  426a94:	mov    eax,DWORD PTR [edi+0x8]
  426a97:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426a9e:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426aa5:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  426aac:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  426ab3:	mov    DWORD PTR [ebp-0x14],eax
  426ab6:	mov    eax,DWORD PTR [ebp+0x8]
  426ab9:	mov    ecx,DWORD PTR [ebp-0x20]
  426abc:	xor    ecx,ebx
  426abe:	add    ecx,esi
  426ac0:	push   ecx
  426ac1:	mov    ecx,DWORD PTR [ebp-0x48]
  426ac4:	mov    eax,DWORD PTR [eax+0x1e0]
  426aca:	xor    ecx,ebx
  426acc:	add    ecx,esi
  426ace:	push   ecx
  426acf:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ad2:	xor    ecx,ebx
  426ad4:	add    ecx,esi
  426ad6:	push   ecx
  426ad7:	mov    ecx,DWORD PTR [ebp-0xc]
  426ada:	xor    ecx,ebx
  426adc:	add    ecx,esi
  426ade:	push   ecx
  426adf:	call   DWORD PTR [eax+0x14]
  426ae2:	mov    edi,eax
  426ae4:	mov    eax,DWORD PTR [ebp+0x8]
  426ae7:	mov    ecx,DWORD PTR [ebp-0x20]
  426aea:	mov    eax,DWORD PTR [eax+0x1e0]
  426af0:	xor    ecx,ebx
  426af2:	add    ecx,esi
  426af4:	push   ecx
  426af5:	mov    ecx,DWORD PTR [ebp-0x48]
  426af8:	xor    ecx,ebx
  426afa:	add    ecx,esi
  426afc:	push   ecx
  426afd:	mov    ecx,DWORD PTR [ebp-0xc]
  426b00:	push   DWORD PTR [ebp-0x14]
  426b03:	xor    ecx,ebx
  426b05:	add    ecx,esi
  426b07:	push   ecx
  426b08:	call   DWORD PTR [eax+0x14]
  426b0b:	mov    ecx,DWORD PTR [ebp-0xc]
  426b0e:	xor    ecx,ebx
  426b10:	add    ecx,esi
  426b12:	mov    DWORD PTR [ebp-0x20],eax
  426b15:	cmp    ecx,edi
  426b17:	je     0x426ea4
  426b1d:	mov    ecx,DWORD PTR [ebp-0xc]
  426b20:	xor    ecx,ebx
  426b22:	add    ecx,esi
  426b24:	cmp    ecx,eax
  426b26:	je     0x426ea4
  426b2c:	mov    DWORD PTR [ebp-0x3c],0xf89c85a0
  426b33:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426b3a:	mov    ecx,DWORD PTR [ebp-0x3c]
  426b3d:	xor    cl,0xae
  426b40:	sub    cl,0xb
  426b43:	mov    BYTE PTR [edi],cl
  426b45:	mov    ecx,DWORD PTR [ebp-0xc]
  426b48:	xor    cl,0xae
  426b4b:	sub    cl,0xb
  426b4e:	mov    BYTE PTR [edi+0x1],cl
  426b51:	mov    ecx,DWORD PTR [ebp-0x54]
  426b54:	xor    cl,0xae
  426b57:	sub    cl,0xb
  426b5a:	mov    BYTE PTR [edi+0x2],cl
  426b5d:	and    DWORD PTR [ebp-0xc8],0x0
  426b64:	and    DWORD PTR [ebp-0xdc],0x0
  426b6b:	lea    ecx,[ebp-0xdc]
  426b71:	push   ecx
  426b72:	push   DWORD PTR [ebp-0x14]
  426b75:	push   eax
  426b76:	lea    eax,[ebp-0xc8]
  426b7c:	push   eax
  426b7d:	mov    eax,DWORD PTR [ebp-0x30]
  426b80:	push   DWORD PTR [eax+0xc]
  426b83:	mov    eax,DWORD PTR [ebp-0x24]
  426b86:	add    eax,0x10
  426b89:	push   eax
  426b8a:	push   edi
  426b8b:	call   0x425e31
  426b90:	mov    DWORD PTR [ebp-0x3c],eax
  426b93:	mov    eax,DWORD PTR [ebp+0x8]
  426b96:	mov    ecx,DWORD PTR [ebp-0x50]
  426b99:	mov    eax,DWORD PTR [eax+0x1e0]
  426b9f:	xor    ecx,ebx
  426ba1:	add    ecx,esi
  426ba3:	push   ecx
  426ba4:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba7:	xor    ecx,ebx
  426ba9:	add    ecx,esi
  426bab:	push   ecx
  426bac:	push   edi
  426bad:	call   DWORD PTR [eax+0x18]
  426bb0:	mov    eax,DWORD PTR [ebp-0x3c]
  426bb3:	add    eax,0xffcd8d0b
  426bb8:	xor    eax,ebx
  426bba:	cmp    eax,0xf89c85a5
  426bbf:	mov    eax,DWORD PTR [ebp+0x8]
  426bc2:	mov    eax,DWORD PTR [eax+0x1e0]
  426bc8:	mov    ecx,DWORD PTR [ebp-0x50]
  426bcb:	jne    0x426bee
  426bcd:	xor    ecx,ebx
  426bcf:	add    ecx,esi
  426bd1:	push   ecx
  426bd2:	mov    ecx,DWORD PTR [ebp-0xc]
  426bd5:	xor    ecx,ebx
  426bd7:	add    ecx,esi
  426bd9:	push   ecx
  426bda:	push   DWORD PTR [ebp-0x24]
  426bdd:	call   DWORD PTR [eax+0x18]
  426be0:	mov    eax,DWORD PTR [ebp-0x20]
  426be3:	mov    DWORD PTR [ebp-0x24],eax
  426be6:	mov    eax,DWORD PTR [ebp-0x14]
  426be9:	mov    DWORD PTR [ebp-0x40],eax
  426bec:	jmp    0x426c01
  426bee:	xor    ecx,ebx
  426bf0:	add    ecx,esi
  426bf2:	push   ecx
  426bf3:	mov    ecx,DWORD PTR [ebp-0xc]
  426bf6:	xor    ecx,ebx
  426bf8:	add    ecx,esi
  426bfa:	push   ecx
  426bfb:	push   DWORD PTR [ebp-0x20]
  426bfe:	call   DWORD PTR [eax+0x18]
  426c01:	mov    eax,DWORD PTR [ebp-0x40]
  426c04:	mov    DWORD PTR [ebp-0x38],eax
  426c07:	mov    eax,DWORD PTR [ebp-0x24]
  426c0a:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  426c11:	mov    DWORD PTR [ebp-0x3c],eax
  426c14:	mov    edi,0xf89c85a2
  426c19:	mov    DWORD PTR [ebp-0x2c],edi
  426c1c:	mov    eax,DWORD PTR [ebp-0x28]
  426c1f:	xor    eax,ebx
  426c21:	add    eax,esi
  426c23:	mov    DWORD PTR [ebp-0xc],eax
  426c26:	mov    eax,DWORD PTR [ebp-0x28]
  426c29:	xor    eax,ebx
  426c2b:	add    eax,esi
  426c2d:	mov    DWORD PTR [ebp-0x14],eax
  426c30:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  426c37:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  426c3e:	mov    eax,DWORD PTR [ebp-0x28]
  426c41:	mov    ecx,DWORD PTR [ebp-0x38]
  426c44:	xor    eax,ebx
  426c46:	add    eax,esi
  426c48:	cmp    ecx,eax
  426c4a:	je     0x426e40
  426c50:	jmp    0x426e1c
  426c55:	mov    ecx,DWORD PTR [ebp-0xc]
  426c58:	mov    eax,DWORD PTR [ebp-0x38]
  426c5b:	sub    eax,ecx
  426c5d:	mov    ecx,DWORD PTR [ebp-0x48]
  426c60:	xor    ecx,ebx
  426c62:	add    ecx,esi
  426c64:	xor    edx,edx
  426c66:	div    ecx
  426c68:	mov    DWORD PTR [ebp-0x14],eax
  426c6b:	mov    eax,DWORD PTR [ebp-0x20]
  426c6e:	mov    ecx,DWORD PTR [ebp-0x14]
  426c71:	xor    eax,ebx
  426c73:	add    eax,esi
  426c75:	cmp    ecx,eax
  426c77:	jbe    0x426c83
  426c79:	mov    eax,DWORD PTR [ebp-0x20]
  426c7c:	xor    eax,ebx
  426c7e:	add    eax,esi
  426c80:	mov    DWORD PTR [ebp-0x14],eax
  426c83:	mov    eax,DWORD PTR [ebp-0x48]
  426c86:	mov    ecx,DWORD PTR [ebp-0x14]
  426c89:	xor    eax,ebx
  426c8b:	add    eax,esi
  426c8d:	imul   eax,ecx
  426c90:	mov    DWORD PTR [ebp-0x14],eax
  426c93:	mov    eax,DWORD PTR [ebp-0x28]
  426c96:	mov    ecx,DWORD PTR [ebp-0x14]
  426c99:	xor    eax,ebx
  426c9b:	add    eax,esi
  426c9d:	cmp    ecx,eax
  426c9f:	je     0x426e0a
  426ca5:	mov    eax,DWORD PTR [ebp-0x14]
  426ca8:	mov    DWORD PTR [ebp-0x34],eax
  426cab:	mov    eax,DWORD PTR [ebp-0xc]
  426cae:	add    eax,DWORD PTR [ebp-0x3c]
  426cb1:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  426cb8:	mov    DWORD PTR [ebp-0x14],edi
  426cbb:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  426cc2:	mov    DWORD PTR [ebp-0x1c],eax
  426cc5:	mov    DWORD PTR [ebp-0x30],0xf89c85a0
  426ccc:	mov    DWORD PTR [ebp-0x8],edi
  426ccf:	mov    eax,DWORD PTR [ebp-0x4c]
  426cd2:	xor    eax,ebx
  426cd4:	add    eax,esi
  426cd6:	jmp    0x426dc9
  426cdb:	mov    DWORD PTR [ebp-0xe4],0xf89c85b8
  426ce5:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426cef:	mov    eax,DWORD PTR [ebp-0x8]
  426cf2:	mov    ecx,DWORD PTR [ebp-0x18]
  426cf5:	xor    eax,ebx
  426cf7:	add    eax,esi
  426cf9:	imul   eax,ecx
  426cfc:	mov    ecx,DWORD PTR [ebp-0x1c]
  426cff:	mov    al,BYTE PTR [eax+ecx*1]
  426d02:	mov    BYTE PTR [ebp-0x1],al
  426d05:	mov    eax,DWORD PTR [ebp-0x8]
  426d08:	mov    ecx,DWORD PTR [ebp-0x18]
  426d0b:	xor    eax,ebx
  426d0d:	add    eax,esi
  426d0f:	imul   eax,ecx
  426d12:	mov    ecx,DWORD PTR [ebp-0x54]
  426d15:	xor    ecx,ebx
  426d17:	add    eax,ecx
  426d19:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d1c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d24:	mov    ecx,DWORD PTR [ebp-0xe4]
  426d2a:	xor    ecx,ebx
  426d2c:	lea    eax,[ecx+eax*1+0x3272f5]
  426d33:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d37:	xor    ecx,eax
  426d39:	mov    BYTE PTR [ebp-0x1],cl
  426d3c:	mov    al,BYTE PTR [ebp-0x1]
  426d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  426d42:	mov    edx,DWORD PTR [ebp-0x18]
  426d45:	xor    ecx,ebx
  426d47:	add    ecx,esi
  426d49:	imul   ecx,edx
  426d4c:	mov    edx,DWORD PTR [ebp-0x1c]
  426d4f:	mov    BYTE PTR [ecx+edx*1],al
  426d52:	mov    eax,DWORD PTR [ebp-0x8]
  426d55:	mov    ecx,DWORD PTR [ebp-0x18]
  426d58:	xor    eax,ebx
  426d5a:	add    eax,esi
  426d5c:	imul   eax,ecx
  426d5f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d62:	mov    al,BYTE PTR [eax+ecx*1]
  426d65:	mov    BYTE PTR [ebp-0x1],al
  426d68:	mov    eax,DWORD PTR [ebp-0x8]
  426d6b:	mov    ecx,DWORD PTR [ebp-0x18]
  426d6e:	xor    eax,ebx
  426d70:	add    eax,esi
  426d72:	imul   eax,ecx
  426d75:	mov    ecx,DWORD PTR [ebp-0x14]
  426d78:	xor    ecx,ebx
  426d7a:	add    eax,ecx
  426d7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d7f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f5]
  426d87:	mov    ecx,DWORD PTR [ebp-0xd0]
  426d8d:	xor    ecx,ebx
  426d8f:	lea    eax,[ecx+eax*1+0x3272f5]
  426d96:	movzx  ecx,BYTE PTR [ebp-0x1]
  426d9a:	xor    ecx,eax
  426d9c:	mov    BYTE PTR [ebp-0x1],cl
  426d9f:	mov    al,BYTE PTR [ebp-0x1]
  426da2:	mov    ecx,DWORD PTR [ebp-0x8]
  426da5:	mov    edx,DWORD PTR [ebp-0x18]
  426da8:	xor    ecx,ebx
  426daa:	add    ecx,esi
  426dac:	imul   ecx,edx
  426daf:	mov    edx,DWORD PTR [ebp-0x1c]
  426db2:	mov    BYTE PTR [ecx+edx*1],al
  426db5:	mov    eax,DWORD PTR [ebp-0x30]
  426db8:	mov    ecx,DWORD PTR [ebp-0x14]
  426dbb:	xor    eax,ebx
  426dbd:	xor    ecx,ebx
  426dbf:	add    eax,esi
  426dc1:	add    ecx,esi
  426dc3:	imul   eax,ecx
  426dc6:	add    eax,DWORD PTR [ebp-0x18]
  426dc9:	mov    DWORD PTR [ebp-0x18],eax
  426dcc:	mov    eax,DWORD PTR [ebp-0x18]
  426dcf:	mov    ecx,DWORD PTR [ebp-0x34]
  426dd2:	cmp    ecx,eax
  426dd4:	jb     0x426cdb
  426dda:	mov    eax,DWORD PTR [ebp-0x14]
  426ddd:	mov    ecx,DWORD PTR [ebp-0x34]
  426de0:	xor    eax,ebx
  426de2:	add    eax,esi
  426de4:	imul   eax,ecx
  426de7:	mov    ecx,DWORD PTR [ebp-0x4c]
  426dea:	xor    ecx,ebx
  426dec:	add    ecx,esi
  426dee:	or     eax,ecx
  426df0:	mov    ecx,DWORD PTR [ebp-0x2c]
  426df3:	xor    ecx,ebx
  426df5:	add    eax,ecx
  426df7:	mov    ecx,DWORD PTR [ebp-0x2c]
  426dfa:	xor    ecx,ebx
  426dfc:	add    eax,ecx
  426dfe:	mov    ecx,DWORD PTR [ebp-0xc]
  426e01:	lea    eax,[eax+ecx*1+0x64e5ea]
  426e08:	jmp    0x426e19
  426e0a:	mov    eax,DWORD PTR [ebp-0x2c]
  426e0d:	mov    ecx,DWORD PTR [ebp-0xc]
  426e10:	xor    eax,ebx
  426e12:	lea    eax,[eax+ecx*1+0x3272f5]
  426e19:	mov    DWORD PTR [ebp-0xc],eax
  426e1c:	mov    eax,DWORD PTR [ebp-0x2c]
  426e1f:	xor    eax,ebx
  426e21:	mov    ecx,0xffcd8d0b
  426e26:	sub    ecx,eax
  426e28:	add    ecx,DWORD PTR [ebp-0x38]
  426e2b:	mov    eax,DWORD PTR [ebp-0x2c]
  426e2e:	mov    edx,DWORD PTR [ebp-0xc]
  426e31:	xor    eax,ebx
  426e33:	add    eax,esi
  426e35:	imul   eax,edx
  426e38:	cmp    eax,ecx
  426e3a:	jbe    0x426c55
  426e40:	push   DWORD PTR [ebp+0x8]
  426e43:	mov    eax,DWORD PTR [ebp+0x8]
  426e46:	push   DWORD PTR [eax+0x1cc]
  426e4c:	lea    eax,[ebp-0xd8]
  426e52:	push   eax
  426e53:	mov    eax,DWORD PTR [ebp+0x8]
  426e56:	mov    eax,DWORD PTR [eax+0x1c4]
  426e5c:	push   DWORD PTR [eax]
  426e5e:	mov    eax,DWORD PTR [ebp+0x8]
  426e61:	mov    eax,DWORD PTR [eax+0x1c0]
  426e67:	push   DWORD PTR [eax]
  426e69:	push   DWORD PTR [ebp-0x40]
  426e6c:	push   DWORD PTR [ebp-0x24]
  426e6f:	call   0x427906
  426e74:	mov    DWORD PTR [ebp-0x3c],eax
  426e77:	mov    eax,DWORD PTR [ebp-0x10]
  426e7a:	mov    ecx,DWORD PTR [ebp-0x24]
  426e7d:	xor    eax,ebx
  426e7f:	add    eax,esi
  426e81:	cmp    eax,ecx
  426e83:	je     0x426ea4
  426e85:	mov    eax,DWORD PTR [ebp+0x8]
  426e88:	mov    ecx,DWORD PTR [ebp-0x50]
  426e8b:	mov    eax,DWORD PTR [eax+0x1e0]
  426e91:	xor    ecx,ebx
  426e93:	add    ecx,esi
  426e95:	push   ecx
  426e96:	mov    ecx,DWORD PTR [ebp-0x10]
  426e99:	xor    ecx,ebx
  426e9b:	add    ecx,esi
  426e9d:	push   ecx
  426e9e:	push   DWORD PTR [ebp-0x24]
  426ea1:	call   DWORD PTR [eax+0x18]
  426ea4:	pop    edi
  426ea5:	pop    esi
  426ea6:	pop    ebx
  426ea7:	leave  
  426ea8:	ret    0x4
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	push   ecx
  426eaf:	push   ecx
  426eb0:	lea    eax,[ebp-0x8]
  426eb3:	mov    DWORD PTR [ebp-0x4],eax
  426eb6:	push   esi
  426eb7:	mov    esi,DWORD PTR [ebp-0x4]
  426eba:	mov    eax,0xf881ba2f
  426ebf:	mov    DWORD PTR [esi],eax
  426ec1:	mov    esi,DWORD PTR [ebp-0x8]
  426ec4:	cmp    esi,eax
  426ec6:	pop    esi
  426ec7:	jne    0x426ed1
  426ec9:	mov    BYTE PTR [ecx+0xa],0x83
  426ecd:	mov    BYTE PTR [edx+0x8],0x2e
  426ed1:	mov    BYTE PTR [edx+0xa],0x83
  426ed5:	mov    BYTE PTR [ecx+0x2],0x15
  426ed9:	leave  
  426eda:	ret    
  426edb:	push   ebp
  426edc:	mov    ebp,esp
  426ede:	push   ecx
  426edf:	push   ecx
  426ee0:	lea    eax,[ebp-0x8]
  426ee3:	mov    DWORD PTR [ebp-0x4],eax
  426ee6:	mov    edx,DWORD PTR [ebp-0x4]
  426ee9:	mov    eax,0xf88b0bcb
  426eee:	mov    DWORD PTR [edx],eax
  426ef0:	mov    edx,DWORD PTR [ebp-0x8]
  426ef3:	cmp    edx,eax
  426ef5:	jne    0x426f06
  426ef7:	mov    eax,DWORD PTR [ebp+0x8]
  426efa:	mov    BYTE PTR [ecx+0x9],0xf
  426efe:	mov    BYTE PTR [eax+0x7],0x56
  426f02:	mov    BYTE PTR [ecx+0x6],0xe
  426f06:	mov    BYTE PTR [ecx+0x3],0x1f
  426f0a:	leave  
  426f0b:	ret    0x4
  426f0e:	push   ebp
  426f0f:	mov    ebp,esp
  426f11:	push   ecx
  426f12:	push   ecx
  426f13:	lea    eax,[ebp-0x8]
  426f16:	mov    DWORD PTR [ebp-0x4],eax
  426f19:	mov    edx,DWORD PTR [ebp-0x4]
  426f1c:	mov    eax,0x7e0da2f
  426f21:	mov    DWORD PTR [edx],eax
  426f23:	mov    edx,DWORD PTR [ebp-0x8]
  426f26:	cmp    edx,eax
  426f28:	jne    0x426f2e
  426f2a:	mov    BYTE PTR [ecx+0x7],0x56
  426f2e:	mov    eax,DWORD PTR [ebp+0x8]
  426f31:	mov    BYTE PTR [ecx+0x1],0x18
  426f35:	mov    BYTE PTR [eax+0x9],0x2f
  426f39:	leave  
  426f3a:	ret    0x4
  426f3d:	push   ebp
  426f3e:	mov    ebp,esp
  426f40:	push   ecx
  426f41:	push   ecx
  426f42:	lea    eax,[ebp-0x8]
  426f45:	mov    DWORD PTR [ebp-0x4],eax
  426f48:	push   esi
  426f49:	mov    esi,DWORD PTR [ebp-0x4]
  426f4c:	mov    eax,0x7060e3c
  426f51:	mov    DWORD PTR [esi],eax
  426f53:	mov    esi,DWORD PTR [ebp-0x8]
  426f56:	cmp    esi,eax
  426f58:	pop    esi
  426f59:	jne    0x426f65
  426f5b:	mov    BYTE PTR [edx+0x4],0x12
  426f5f:	mov    WORD PTR [ecx+0x3],0x121f
  426f65:	mov    BYTE PTR [edx],0x3e
  426f68:	leave  
  426f69:	ret    
  426f6a:	push   ebp
  426f6b:	mov    ebp,esp
  426f6d:	push   ecx
  426f6e:	push   ecx
  426f6f:	lea    eax,[ebp-0x8]
  426f72:	mov    DWORD PTR [ebp-0x4],eax
  426f75:	mov    edx,DWORD PTR [ebp-0x4]
  426f78:	mov    eax,0xf8870b3f
  426f7d:	mov    DWORD PTR [edx],eax
  426f7f:	mov    edx,DWORD PTR [ebp-0x8]
  426f82:	cmp    edx,eax
  426f84:	jne    0x426f91
  426f86:	mov    eax,DWORD PTR [ebp+0x8]
  426f89:	mov    BYTE PTR [ecx+0x8],0xe
  426f8d:	mov    BYTE PTR [eax+0x1],0x18
  426f91:	mov    BYTE PTR [ecx+0x5],0xa
  426f95:	leave  
  426f96:	ret    0x4
  426f99:	push   esi
  426f9a:	mov    ecx,edi
  426f9c:	call   0x426f6a
  426fa1:	mov    edx,edi
  426fa3:	mov    ecx,esi
  426fa5:	mov    BYTE PTR [esi],0x1e
  426fa8:	call   0x426f3d
  426fad:	push   esi
  426fae:	mov    ecx,edi
  426fb0:	mov    BYTE PTR [esi+0x5],0xa
  426fb4:	call   0x426f0e
  426fb9:	push   esi
  426fba:	mov    BYTE PTR [esi+0x6],0xe
  426fbe:	call   0x426edb
  426fc3:	mov    BYTE PTR [esi+0x2],0x15
  426fc7:	mov    edx,esi
  426fc9:	jmp    0x426eab
  426fce:	push   ebp
  426fcf:	mov    ebp,esp
  426fd1:	push   ecx
  426fd2:	mov    ecx,DWORD PTR [edx+0x194]
  426fd8:	push   esi
  426fd9:	mov    esi,DWORD PTR [ebp+0x8]
  426fdc:	mov    esi,DWORD PTR [esi]
  426fde:	mov    DWORD PTR [ecx],esi
  426fe0:	mov    ecx,DWORD PTR [edx+0x194]
  426fe6:	mov    ecx,DWORD PTR [ecx]
  426fe8:	mov    esi,DWORD PTR [edx+0x190]
  426fee:	mov    DWORD PTR [esi],ecx
  426ff0:	mov    eax,DWORD PTR [edx+0x194]
  426ff6:	mov    ecx,DWORD PTR [eax]
  426ff8:	mov    ecx,DWORD PTR [ecx+0x3c]
  426ffb:	add    ecx,DWORD PTR [eax]
  426ffd:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  427004:	mov    eax,DWORD PTR [ebp-0x4]
  427007:	movzx  ecx,WORD PTR [ecx+0x16]
  42700b:	xor    eax,0x75108ae
  427010:	add    eax,0x3272f5
  427015:	pop    esi
  427016:	test   ecx,eax
  427018:	je     0x427026
  42701a:	mov    eax,DWORD PTR [edx+0x1c8]
  427020:	mov    DWORD PTR [eax],0xf89c85a2
  427026:	leave  
  427027:	ret    0x4
  42702a:	push   ebp
  42702b:	mov    ebp,esp
  42702d:	sub    esp,0x70
  427030:	and    DWORD PTR [ebp-0x20],0x0
  427034:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  42703b:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  427042:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  427049:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  427050:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  427057:	mov    eax,DWORD PTR [ebp+0x20]
  42705a:	mov    eax,DWORD PTR [eax+0x194]
  427060:	mov    DWORD PTR [ebp-0xc],eax
  427063:	mov    eax,DWORD PTR [ebp+0x20]
  427066:	push   ebx
  427067:	push   esi
  427068:	mov    esi,DWORD PTR [eax+0x190]
  42706e:	mov    eax,DWORD PTR [ebp+0x20]
  427071:	mov    eax,DWORD PTR [eax+0x18c]
  427077:	mov    DWORD PTR [ebp-0x8],eax
  42707a:	mov    eax,DWORD PTR [eax]
  42707c:	push   edi
  42707d:	mov    DWORD PTR [ebp-0x4],esi
  427080:	test   eax,eax
  427082:	jne    0x42708f
  427084:	push   DWORD PTR [ebp+0x1c]
  427087:	mov    edx,DWORD PTR [ebp+0x20]
  42708a:	call   0x426fce
  42708f:	mov    eax,DWORD PTR [esi]
  427091:	mov    ebx,DWORD PTR [esi]
  427093:	add    ebx,DWORD PTR [eax+0x3c]
  427096:	mov    eax,DWORD PTR [ebp+0xc]
  427099:	mov    ecx,DWORD PTR [ebp-0x8]
  42709c:	mov    ecx,DWORD PTR [ecx]
  42709e:	mov    esi,0x75108ae
  4270a3:	xor    eax,esi
  4270a5:	mov    edi,0x3272f5
  4270aa:	add    eax,edi
  4270ac:	cmp    eax,ecx
  4270ae:	jne    0x4272e6
  4270b4:	mov    eax,DWORD PTR [ebp-0xc]
  4270b7:	mov    eax,DWORD PTR [eax]
  4270b9:	mov    DWORD PTR [ebp-0x10],eax
  4270bc:	mov    eax,DWORD PTR [ebx+0x50]
  4270bf:	mov    DWORD PTR [ebp-0x68],eax
  4270c2:	mov    eax,DWORD PTR [ebp-0x18]
  4270c5:	xor    eax,esi
  4270c7:	add    eax,edi
  4270c9:	mov    DWORD PTR [ebp-0x64],eax
  4270cc:	mov    eax,DWORD PTR [ebp-0x14]
  4270cf:	and    DWORD PTR [ebp-0x6c],0x0
  4270d3:	xor    eax,esi
  4270d5:	add    eax,edi
  4270d7:	mov    DWORD PTR [ebp-0x60],eax
  4270da:	lea    eax,[ebp-0x70]
  4270dd:	push   eax
  4270de:	mov    eax,DWORD PTR [ebp+0x8]
  4270e1:	xor    eax,esi
  4270e3:	add    eax,edi
  4270e5:	push   eax
  4270e6:	mov    eax,DWORD PTR [ebp+0x20]
  4270e9:	add    eax,0xaa
  4270ee:	push   eax
  4270ef:	mov    eax,DWORD PTR [ebp+0x20]
  4270f2:	mov    eax,DWORD PTR [eax+0x198]
  4270f8:	mov    DWORD PTR [ebp-0x70],0x4
  4270ff:	push   DWORD PTR [eax]
  427101:	mov    eax,DWORD PTR [ebp+0x10]
  427104:	call   eax
  427106:	mov    ecx,DWORD PTR [ebp-0xc]
  427109:	mov    ecx,DWORD PTR [ecx]
  42710b:	mov    edx,DWORD PTR [ebp-0x8]
  42710e:	mov    DWORD PTR [ebp-0x6c],eax
  427111:	mov    DWORD PTR [ebp+0x1c],eax
  427114:	mov    DWORD PTR [edx],ecx
  427116:	mov    ecx,DWORD PTR [ebp-0x4]
  427119:	mov    DWORD PTR [ecx],eax
  42711b:	mov    eax,DWORD PTR [ebx+0x50]
  42711e:	mov    DWORD PTR [ebp-0x68],eax
  427121:	mov    eax,DWORD PTR [ebp-0x1c]
  427124:	xor    eax,esi
  427126:	add    eax,edi
  427128:	mov    DWORD PTR [ebp-0x64],eax
  42712b:	lea    eax,[ebp-0x20]
  42712e:	mov    DWORD PTR [ebp-0x60],eax
  427131:	lea    eax,[ebp-0x70]
  427134:	push   eax
  427135:	mov    eax,DWORD PTR [ebp+0x8]
  427138:	xor    eax,esi
  42713a:	add    eax,edi
  42713c:	push   eax
  42713d:	mov    eax,DWORD PTR [ebp+0x20]
  427140:	add    eax,0xee
  427145:	push   eax
  427146:	mov    eax,DWORD PTR [ebp+0x20]
  427149:	mov    eax,DWORD PTR [eax+0x198]
  42714f:	mov    DWORD PTR [ebp-0x70],0x4
  427156:	push   DWORD PTR [eax]
  427158:	mov    eax,DWORD PTR [ebp+0x10]
  42715b:	call   eax
  42715d:	test   eax,eax
  42715f:	je     0x427184
  427161:	and    DWORD PTR [ebp+0xc],0x0
  427165:	cmp    DWORD PTR [ebx+0x50],0x0
  427169:	jbe    0x427184
  42716b:	mov    eax,DWORD PTR [ebp+0x1c]
  42716e:	mov    ecx,DWORD PTR [ebp-0x10]
  427171:	sub    ecx,eax
  427173:	mov    dl,BYTE PTR [ecx+eax*1]
  427176:	inc    DWORD PTR [ebp+0xc]
  427179:	mov    BYTE PTR [eax],dl
  42717b:	mov    edx,DWORD PTR [ebp+0xc]
  42717e:	inc    eax
  42717f:	cmp    edx,DWORD PTR [ebx+0x50]
  427182:	jb     0x427173
  427184:	mov    edx,DWORD PTR [ebp+0x1c]
  427187:	mov    ecx,DWORD PTR [edx+0x3c]
  42718a:	add    ecx,edx
  42718c:	mov    eax,DWORD PTR [ecx+0xa0]
  427192:	mov    ebx,DWORD PTR [ecx+0x28]
  427195:	add    eax,edx
  427197:	sub    edx,DWORD PTR [ebp-0x10]
  42719a:	add    ebx,DWORD PTR [ebp+0x1c]
  42719d:	mov    DWORD PTR [ebp+0xc],edx
  4271a0:	mov    DWORD PTR [ebp-0x2c],ecx
  4271a3:	mov    DWORD PTR [ebp-0x14],ebx
  4271a6:	mov    DWORD PTR [ebp-0x8],0x0
  4271ad:	jmp    0x427229
  4271af:	add    edx,0xfffffff8
  4271b2:	shr    edx,1
  4271b4:	mov    DWORD PTR [ebp-0x18],edx
  4271b7:	je     0x427215
  4271b9:	lea    edx,[eax+0x8]
  4271bc:	mov    DWORD PTR [ebp-0x4],edx
  4271bf:	mov    edx,DWORD PTR [ebp-0x18]
  4271c2:	mov    DWORD PTR [ebp-0x18],edx
  4271c5:	mov    edx,DWORD PTR [ebp-0x4]
  4271c8:	movzx  edx,WORD PTR [edx]
  4271cb:	mov    DWORD PTR [ebp-0x24],edx
  4271ce:	and    edx,0xfff
  4271d4:	mov    DWORD PTR [ebp-0x28],edx
  4271d7:	mov    edx,DWORD PTR [ebp-0x24]
  4271da:	shr    edx,0xc
  4271dd:	add    edx,0xffcd8d0b
  4271e3:	xor    edx,esi
  4271e5:	cmp    edx,0xf89c85a0
  4271eb:	jne    0x42720c
  4271ed:	mov    edx,DWORD PTR [ebp-0x28]
  4271f0:	add    edx,DWORD PTR [ebp+0x1c]
  4271f3:	mov    ebx,DWORD PTR [eax]
  4271f5:	cmp    DWORD PTR [ebx+edx*1],0x0
  4271f9:	je     0x427209
  4271fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4271fe:	add    ecx,DWORD PTR [ebx+edx*1]
  427201:	mov    ebx,DWORD PTR [eax]
  427203:	mov    DWORD PTR [edx+ebx*1],ecx
  427206:	mov    ecx,DWORD PTR [ebp-0x2c]
  427209:	mov    ebx,DWORD PTR [ebp-0x14]
  42720c:	add    DWORD PTR [ebp-0x4],0x2
  427210:	dec    DWORD PTR [ebp-0x18]
  427213:	jne    0x4271c5
  427215:	mov    edx,DWORD PTR [ebp-0xc]
  427218:	add    DWORD PTR [ebp-0x8],edx
  42721b:	mov    edx,DWORD PTR [ebp-0x8]
  42721e:	cmp    edx,DWORD PTR [ecx+0xa4]
  427224:	jae    0x427237
  427226:	add    eax,DWORD PTR [ebp-0xc]
  427229:	mov    edx,DWORD PTR [eax+0x4]
  42722c:	mov    DWORD PTR [ebp-0xc],edx
  42722f:	test   edx,edx
  427231:	jne    0x4271af
  427237:	mov    eax,DWORD PTR [ebp-0x10]
  42723a:	mov    DWORD PTR [ebp-0x6c],eax
  42723d:	mov    DWORD PTR [ebp-0x70],0x4
  427244:	mov    eax,DWORD PTR [ecx+0x50]
  427247:	mov    DWORD PTR [ebp-0x68],eax
  42724a:	mov    eax,DWORD PTR [ebp-0x1c]
  42724d:	xor    eax,esi
  42724f:	add    eax,edi
  427251:	mov    DWORD PTR [ebp-0x64],eax
  427254:	lea    eax,[ebp-0x20]
  427257:	mov    DWORD PTR [ebp-0x60],eax
  42725a:	lea    eax,[ebp-0x70]
  42725d:	push   eax
  42725e:	mov    eax,DWORD PTR [ebp+0x8]
  427261:	xor    eax,esi
  427263:	add    eax,edi
  427265:	push   eax
  427266:	mov    eax,DWORD PTR [ebp+0x20]
  427269:	add    eax,0xee
  42726e:	push   eax
  42726f:	mov    eax,DWORD PTR [ebp+0x20]
  427272:	mov    eax,DWORD PTR [eax+0x198]
  427278:	push   DWORD PTR [eax]
  42727a:	mov    eax,DWORD PTR [ebp+0x10]
  42727d:	call   eax
  42727f:	mov    eax,DWORD PTR [ebp+0x20]
  427282:	mov    eax,DWORD PTR [eax+0x180]
  427288:	add    eax,DWORD PTR [ebp+0xc]
  42728b:	mov    ecx,DWORD PTR [ebp+0xc]
  42728e:	push   DWORD PTR [ebp+0x18]
  427291:	mov    DWORD PTR [eax],ecx
  427293:	push   DWORD PTR [ebp+0x14]
  427296:	push   DWORD PTR [ebp+0x1c]
  427299:	call   ebx
  42729b:	mov    ecx,DWORD PTR [ebp+0xc]
  42729e:	add    ecx,DWORD PTR [ebp+0x20]
  4272a1:	lea    eax,[ebp+0x4]
  4272a4:	mov    DWORD PTR [ebp+0x20],ecx
  4272a7:	mov    ecx,DWORD PTR [ebp+0x20]
  4272aa:	mov    ecx,DWORD PTR [ebp+0x20]
  4272ad:	mov    edx,DWORD PTR [ecx+0x190]
  4272b3:	mov    ecx,DWORD PTR [ebp+0x20]
  4272b6:	mov    ecx,DWORD PTR [ecx+0x18c]
  4272bc:	mov    esi,DWORD PTR [ecx]
  4272be:	cmp    DWORD PTR [eax],esi
  4272c0:	jb     0x4272e1
  4272c2:	mov    esi,DWORD PTR [edx]
  4272c4:	mov    edi,DWORD PTR [edx]
  4272c6:	mov    esi,DWORD PTR [esi+0x3c]
  4272c9:	lea    esi,[edi+esi*1+0x50]
  4272cd:	mov    edi,DWORD PTR [ecx]
  4272cf:	add    edi,DWORD PTR [esi]
  4272d1:	cmp    DWORD PTR [eax],edi
  4272d3:	jae    0x4272e1
  4272d5:	mov    esi,DWORD PTR [ecx]
  4272d7:	mov    ecx,DWORD PTR [eax]
  4272d9:	mov    edx,DWORD PTR [edx]
  4272db:	sub    ecx,esi
  4272dd:	add    edx,ecx
  4272df:	mov    DWORD PTR [eax],edx
  4272e1:	mov    eax,DWORD PTR [ebp+0xc]
  4272e4:	jmp    0x4272e8
  4272e6:	xor    eax,eax
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    0x1c
  4272ef:	push   ebp
  4272f0:	mov    ebp,esp
  4272f2:	sub    esp,0x1c
  4272f5:	push   esi
  4272f6:	mov    esi,eax
  4272f8:	mov    eax,DWORD PTR [ecx+0x190]
  4272fe:	cmp    DWORD PTR [eax],0x0
  427301:	je     0x427411
  427307:	test   edx,edx
  427309:	je     0x427411
  42730f:	test   esi,esi
  427311:	je     0x427411
  427317:	mov    eax,DWORD PTR [esi+0x88]
  42731d:	test   eax,eax
  42731f:	je     0x42740c
  427325:	cmp    DWORD PTR [esi+0x8c],0x10
  42732c:	je     0x42740c
  427332:	cmp    DWORD PTR [esi+0x34],edx
  427335:	je     0x42740c
  42733b:	mov    esi,DWORD PTR [ecx+0x18c]
  427341:	and    DWORD PTR [ebp-0x10],0x0
  427345:	mov    ecx,edx
  427347:	sub    ecx,DWORD PTR [esi]
  427349:	add    eax,edx
  42734b:	movzx  edx,WORD PTR [eax+0xc]
  42734f:	mov    DWORD PTR [ebp-0x1c],ecx
  427352:	movzx  ecx,WORD PTR [eax+0xe]
  427356:	add    ecx,edx
  427358:	je     0x42740c
  42735e:	lea    ecx,[eax+0x14]
  427361:	push   ebx
  427362:	mov    DWORD PTR [ebp-0x18],ecx
  427365:	mov    esi,0x7fffffff
  42736a:	push   edi
  42736b:	test   DWORD PTR [ecx],esi
  42736d:	je     0x4273ee
  42736f:	mov    edx,DWORD PTR [ecx]
  427371:	and    DWORD PTR [ebp-0xc],0x0
  427375:	and    edx,esi
  427377:	add    edx,eax
  427379:	movzx  edi,WORD PTR [edx+0xe]
  42737d:	movzx  ebx,WORD PTR [edx+0xc]
  427381:	add    edi,ebx
  427383:	je     0x4273ee
  427385:	lea    ecx,[edx+0x14]
  427388:	mov    DWORD PTR [ebp-0x14],ecx
  42738b:	test   DWORD PTR [ecx],esi
  42738d:	je     0x4273d0
  42738f:	mov    ecx,DWORD PTR [ecx]
  427391:	and    DWORD PTR [ebp-0x8],0x0
  427395:	and    ecx,esi
  427397:	add    ecx,eax
  427399:	movzx  edi,WORD PTR [ecx+0xe]
  42739d:	movzx  ebx,WORD PTR [ecx+0xc]
  4273a1:	add    edi,ebx
  4273a3:	je     0x4273d0
  4273a5:	lea    edi,[ecx+0x14]
  4273a8:	mov    DWORD PTR [ebp-0x4],edi
  4273ab:	mov    edi,DWORD PTR [ebp-0x4]
  4273ae:	mov    edi,DWORD PTR [edi]
  4273b0:	test   edi,edi
  4273b2:	je     0x4273ba
  4273b4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273b7:	add    DWORD PTR [edi+eax*1],ebx
  4273ba:	movzx  edi,WORD PTR [ecx+0xe]
  4273be:	movzx  ebx,WORD PTR [ecx+0xc]
  4273c2:	inc    DWORD PTR [ebp-0x8]
  4273c5:	add    DWORD PTR [ebp-0x4],0x8
  4273c9:	add    edi,ebx
  4273cb:	cmp    DWORD PTR [ebp-0x8],edi
  4273ce:	jb     0x4273ab
  4273d0:	movzx  edi,WORD PTR [edx+0xe]
  4273d4:	movzx  ebx,WORD PTR [edx+0xc]
  4273d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4273db:	inc    DWORD PTR [ebp-0xc]
  4273de:	add    ecx,0x8
  4273e1:	add    edi,ebx
  4273e3:	mov    DWORD PTR [ebp-0x14],ecx
  4273e6:	cmp    DWORD PTR [ebp-0xc],edi
  4273e9:	jb     0x42738b
  4273eb:	mov    ecx,DWORD PTR [ebp-0x18]
  4273ee:	movzx  edx,WORD PTR [eax+0xe]
  4273f2:	movzx  edi,WORD PTR [eax+0xc]
  4273f6:	inc    DWORD PTR [ebp-0x10]
  4273f9:	add    ecx,0x8
  4273fc:	add    edx,edi
  4273fe:	mov    DWORD PTR [ebp-0x18],ecx
  427401:	cmp    DWORD PTR [ebp-0x10],edx
  427404:	jb     0x42736b
  42740a:	pop    edi
  42740b:	pop    ebx
  42740c:	xor    eax,eax
  42740e:	inc    eax
  42740f:	jmp    0x427413
  427411:	xor    eax,eax
  427413:	pop    esi
  427414:	leave  
  427415:	ret    
  427416:	push   ebp
  427417:	mov    ebp,esp
  427419:	mov    ecx,DWORD PTR [ecx+0x190]
  42741f:	mov    eax,DWORD PTR [ebp+0xc]
  427422:	sub    esp,0x10
  427425:	push   ebx
  427426:	xor    ebx,ebx
  427428:	push   esi
  427429:	push   edi
  42742a:	cmp    DWORD PTR [ecx],ebx
  42742c:	je     0x4274b4
  427432:	cmp    eax,ebx
  427434:	je     0x4274b4
  427436:	cmp    DWORD PTR [eax+0x78],ebx
  427439:	jne    0x427440
  42743b:	xor    eax,eax
  42743d:	inc    eax
  42743e:	jmp    0x4274b6
  427440:	mov    eax,DWORD PTR [eax+0x78]
  427443:	add    eax,DWORD PTR [ebp+0x8]
  427446:	mov    ecx,DWORD PTR [eax+0x1c]
  427449:	mov    edx,DWORD PTR [eax+0x24]
  42744c:	mov    esi,DWORD PTR [eax+0x14]
  42744f:	mov    edi,DWORD PTR [eax+0x18]
  427452:	add    ecx,DWORD PTR [ebp+0x8]
  427455:	add    edx,DWORD PTR [ebp+0x8]
  427458:	mov    DWORD PTR [ebp-0x4],esi
  42745b:	cmp    esi,edi
  42745d:	ja     0x427462
  42745f:	mov    DWORD PTR [ebp-0x4],edi
  427462:	mov    DWORD PTR [ebp-0x8],ebx
  427465:	cmp    DWORD PTR [ebp-0x4],ebx
  427468:	jbe    0x42743b
  42746a:	cmp    ebx,DWORD PTR [eax+0x14]
  42746d:	jae    0x427475
  42746f:	movzx  esi,WORD PTR [edx+ebx*2]
  427473:	jmp    0x427477
  427475:	mov    esi,ebx
  427477:	lea    esi,[ecx+esi*4]
  42747a:	mov    edi,DWORD PTR [esi]
  42747c:	test   edi,edi
  42747e:	je     0x4274a9
  427480:	add    edi,DWORD PTR [ebp+0x8]
  427483:	mov    DWORD PTR [ebp-0x10],edi
  427486:	cmp    edi,eax
  427488:	jbe    0x42749a
  42748a:	mov    ebx,DWORD PTR [ebp+0xc]
  42748d:	mov    ebx,DWORD PTR [ebx+0x7c]
  427490:	add    ebx,eax
  427492:	cmp    edi,ebx
  427494:	jae    0x42749a
  427496:	mov    esi,DWORD PTR [esi]
  427498:	jmp    0x4274a2
  42749a:	sub    edi,DWORD PTR [ebp+0x8]
  42749d:	mov    DWORD PTR [esi],edi
  42749f:	mov    esi,DWORD PTR [ebp-0x10]
  4274a2:	test   esi,esi
  4274a4:	je     0x4274b4
  4274a6:	mov    ebx,DWORD PTR [ebp-0x8]
  4274a9:	inc    ebx
  4274aa:	mov    DWORD PTR [ebp-0x8],ebx
  4274ad:	cmp    ebx,DWORD PTR [ebp-0x4]
  4274b0:	jb     0x42746a
  4274b2:	jmp    0x42743b
  4274b4:	xor    eax,eax
  4274b6:	pop    edi
  4274b7:	pop    esi
  4274b8:	pop    ebx
  4274b9:	leave  
  4274ba:	ret    0x8
  4274bd:	push   ebp
  4274be:	mov    ebp,esp
  4274c0:	sub    esp,0x2c
  4274c3:	mov    edx,0xf89c85a5
  4274c8:	mov    DWORD PTR [ebp-0x4],edx
  4274cb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4274d2:	mov    eax,DWORD PTR [ebp-0x4]
  4274d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4274db:	mov    ecx,DWORD PTR [ebp-0x4]
  4274de:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4274e4:	push   ebx
  4274e5:	mov    ebx,DWORD PTR [ebp+0x10]
  4274e8:	push   esi
  4274e9:	mov    esi,0x75108ae
  4274ee:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  4274f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4274f8:	mov    ebx,DWORD PTR [ebx+0x190]
  4274fe:	push   edi
  4274ff:	mov    edi,0x3272f5
  427504:	xor    ecx,esi
  427506:	xor    eax,esi
  427508:	add    eax,edi
  42750a:	add    ecx,edi
  42750c:	mov    DWORD PTR [ebp-0x18],eax
  42750f:	cmp    ecx,DWORD PTR [ebx]
  427511:	je     0x427792
  427517:	mov    ebx,DWORD PTR [ebp-0x4]
  42751a:	mov    ecx,DWORD PTR [ebp+0xc]
  42751d:	xor    ebx,esi
  42751f:	add    ebx,edi
  427521:	cmp    ebx,ecx
  427523:	je     0x427792
  427529:	mov    ebx,DWORD PTR [ebp-0x4]
  42752c:	mov    ecx,DWORD PTR [ecx+0x80]
  427532:	xor    ebx,esi
  427534:	add    ebx,edi
  427536:	cmp    ecx,ebx
  427538:	je     0x42778d
  42753e:	add    ecx,DWORD PTR [ebp+0x8]
  427541:	mov    DWORD PTR [ebp-0x2c],ecx
  427544:	mov    ebx,edx
  427546:	xor    ebx,esi
  427548:	add    ebx,edi
  42754a:	mov    DWORD PTR [ebp-0x10],ebx
  42754d:	mov    ebx,DWORD PTR [ebp-0x10]
  427550:	cmp    ebx,edx
  427552:	je     0x427566
  427554:	mov    edx,DWORD PTR [ebp-0x10]
  427557:	mov    ebx,DWORD PTR [ebp-0x4]
  42755a:	imul   edx,edx,0x14
  42755d:	xor    ebx,esi
  42755f:	add    ebx,edi
  427561:	cmp    DWORD PTR [edx+ecx*1],ebx
  427564:	jne    0x42757d
  427566:	mov    edx,DWORD PTR [ebp-0x10]
  427569:	mov    ebx,DWORD PTR [ebp-0x4]
  42756c:	imul   edx,edx,0x14
  42756f:	xor    ebx,esi
  427571:	add    ebx,edi
  427573:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  427577:	je     0x42777f
  42757d:	mov    eax,DWORD PTR [ebp-0x4]
  427580:	mov    ebx,DWORD PTR [ebp-0x4]
  427583:	mov    eax,DWORD PTR [ebp-0x10]
  427586:	imul   eax,eax,0x14
  427589:	add    eax,ecx
  42758b:	mov    ecx,DWORD PTR [eax+0x10]
  42758e:	add    ecx,DWORD PTR [ebp+0x8]
  427591:	xor    ebx,esi
  427593:	mov    DWORD PTR [ebp-0x1c],ecx
  427596:	mov    ecx,DWORD PTR [ebp-0x4]
  427599:	mov    edx,DWORD PTR [ebp-0x4]
  42759c:	xor    ecx,esi
  42759e:	add    ecx,edi
  4275a0:	xor    edx,esi
  4275a2:	mov    DWORD PTR [ebp-0x24],ecx
  4275a5:	mov    ecx,DWORD PTR [eax]
  4275a7:	add    edx,edi
  4275a9:	add    ebx,edi
  4275ab:	cmp    ecx,edx
  4275ad:	je     0x4275b5
  4275af:	add    ecx,DWORD PTR [ebp+0x8]
  4275b2:	mov    DWORD PTR [ebp-0x24],ecx
  4275b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4275b8:	xor    ecx,esi
  4275ba:	add    ecx,DWORD PTR [eax+0xc]
  4275bd:	mov    eax,DWORD PTR [ebp+0x8]
  4275c0:	lea    eax,[ecx+eax*1+0x3272f5]
  4275c7:	mov    DWORD PTR [ebp+0xc],eax
  4275ca:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4275d1:	mov    eax,DWORD PTR [ebp+0x10]
  4275d4:	push   DWORD PTR [ebp+0xc]
  4275d7:	mov    eax,DWORD PTR [eax+0x1e0]
  4275dd:	call   DWORD PTR [eax]
  4275df:	mov    ecx,DWORD PTR [ebp-0x4]
  4275e2:	xor    ecx,esi
  4275e4:	add    ecx,edi
  4275e6:	mov    DWORD PTR [ebp-0xc],eax
  4275e9:	cmp    ecx,eax
  4275eb:	jne    0x4275ff
  4275ed:	mov    eax,DWORD PTR [ebp+0x10]
  4275f0:	push   DWORD PTR [ebp+0xc]
  4275f3:	mov    eax,DWORD PTR [eax+0x1e0]
  4275f9:	call   DWORD PTR [eax+0xc]
  4275fc:	mov    DWORD PTR [ebp-0xc],eax
  4275ff:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  427606:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  42760d:	mov    eax,DWORD PTR [ebp-0x4]
  427610:	xor    eax,esi
  427612:	add    eax,edi
  427614:	cmp    eax,DWORD PTR [ebp-0xc]
  427617:	jne    0x42763c
  427619:	mov    eax,DWORD PTR [ebp-0x8]
  42761c:	mov    ecx,DWORD PTR [ebp-0x20]
  42761f:	xor    eax,esi
  427621:	xor    ecx,esi
  427623:	lea    ebx,[ebx+eax*1+0x3272f5]
  42762a:	mov    eax,DWORD PTR [ebp+0x10]
  42762d:	mov    eax,DWORD PTR [eax+0x1e0]
  427633:	add    ecx,edi
  427635:	imul   ecx,ebx
  427638:	push   ecx
  427639:	call   DWORD PTR [eax+0x24]
  42763c:	mov    eax,DWORD PTR [ebp-0x4]
  42763f:	xor    eax,esi
  427641:	add    eax,edi
  427643:	cmp    eax,DWORD PTR [ebp-0xc]
  427646:	jne    0x427657
  427648:	mov    eax,DWORD PTR [ebp-0x28]
  42764b:	xor    eax,esi
  42764d:	add    eax,edi
  42764f:	cmp    ebx,eax
  427651:	jbe    0x4275d1
  427657:	mov    eax,DWORD PTR [ebp-0x4]
  42765a:	xor    eax,esi
  42765c:	add    eax,edi
  42765e:	cmp    eax,DWORD PTR [ebp-0xc]
  427661:	jne    0x42767a
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,esi
  42766b:	lea    eax,[ecx+eax*1+0x3272f5]
  427672:	mov    DWORD PTR [ebp-0x18],eax
  427675:	jmp    0x427769
  42767a:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427681:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  427688:	mov    ebx,DWORD PTR [ebp-0x4]
  42768b:	xor    ebx,esi
  42768d:	add    ebx,edi
  42768f:	jmp    0x427756
  427694:	mov    eax,DWORD PTR [ebp-0x4]
  427697:	xor    eax,esi
  427699:	add    eax,edi
  42769b:	mov    DWORD PTR [ebp-0x14],eax
  42769e:	mov    eax,DWORD PTR [ebp-0x4]
  4276a1:	xor    eax,esi
  4276a3:	add    eax,edi
  4276a5:	mov    DWORD PTR [ebp+0xc],eax
  4276a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4276ab:	mov    eax,DWORD PTR [ebp-0x24]
  4276ae:	xor    ecx,esi
  4276b0:	add    ecx,edi
  4276b2:	cmp    ecx,eax
  4276b4:	je     0x4276bc
  4276b6:	mov    eax,DWORD PTR [eax+ebx*4]
  4276b9:	mov    DWORD PTR [ebp-0x14],eax
  4276bc:	mov    eax,DWORD PTR [ebp-0x1c]
  4276bf:	mov    eax,DWORD PTR [eax+ebx*4]
  4276c2:	mov    DWORD PTR [ebp+0xc],eax
  4276c5:	mov    eax,DWORD PTR [ebp-0x4]
  4276c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4276cb:	xor    eax,esi
  4276cd:	add    eax,edi
  4276cf:	cmp    eax,ecx
  4276d1:	je     0x4276fc
  4276d3:	mov    eax,DWORD PTR [ebp-0x4]
  4276d6:	mov    ecx,DWORD PTR [ebp-0x14]
  4276d9:	xor    eax,esi
  4276db:	add    eax,edi
  4276dd:	shr    ecx,0x1f
  4276e0:	cmp    eax,ecx
  4276e2:	je     0x4276fc
  4276e4:	mov    ecx,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [ebp+0x10]
  4276ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4276f0:	movzx  ecx,cx
  4276f3:	push   ecx
  4276f4:	push   DWORD PTR [ebp-0xc]
  4276f7:	call   DWORD PTR [eax+0x8]
  4276fa:	jmp    0x427715
  4276fc:	mov    eax,DWORD PTR [ebp+0xc]
  4276ff:	add    eax,DWORD PTR [ebp+0x8]
  427702:	mov    ecx,DWORD PTR [ebp+0x10]
  427705:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42770b:	add    eax,0x2
  42770e:	push   eax
  42770f:	push   DWORD PTR [ebp-0xc]
  427712:	call   DWORD PTR [ecx+0x8]
  427715:	mov    DWORD PTR [ebp+0xc],eax
  427718:	mov    eax,DWORD PTR [ebp-0x4]
  42771b:	mov    ecx,DWORD PTR [ebp+0xc]
  42771e:	xor    eax,esi
  427720:	add    eax,edi
  427722:	cmp    eax,ecx
  427724:	mov    eax,DWORD PTR [ebp-0x8]
  427727:	jne    0x42773a
  427729:	mov    ecx,DWORD PTR [ebp-0x18]
  42772c:	xor    eax,esi
  42772e:	lea    eax,[ecx+eax*1+0x3272f5]
  427735:	mov    DWORD PTR [ebp-0x18],eax
  427738:	jmp    0x42774a
  42773a:	mov    ecx,DWORD PTR [ebp+0xc]
  42773d:	xor    eax,esi
  42773f:	add    eax,edi
  427741:	imul   eax,ecx
  427744:	mov    ecx,DWORD PTR [ebp-0x1c]
  427747:	mov    DWORD PTR [ecx+ebx*4],eax
  42774a:	mov    eax,DWORD PTR [ebp-0x8]
  42774d:	xor    eax,esi
  42774f:	lea    ebx,[ebx+eax*1+0x3272f5]
  427756:	mov    eax,DWORD PTR [ebp-0x4]
  427759:	mov    ecx,DWORD PTR [ebp-0x1c]
  42775c:	xor    eax,esi
  42775e:	add    eax,edi
  427760:	cmp    DWORD PTR [ecx+ebx*4],eax
  427763:	jne    0x427694
  427769:	mov    edx,DWORD PTR [ebp-0x10]
  42776c:	mov    eax,DWORD PTR [ebp-0x18]
  42776f:	mov    ecx,DWORD PTR [ebp-0x2c]
  427772:	sub    edx,0x3272f4
  427778:	xor    edx,esi
  42777a:	jmp    0x427544
  42777f:	mov    ecx,DWORD PTR [ebp-0x4]
  427782:	xor    ecx,esi
  427784:	add    ecx,edi
  427786:	cmp    eax,ecx
  427788:	mov    eax,DWORD PTR [ebp-0x4]
  42778b:	jne    0x427795
  42778d:	mov    eax,DWORD PTR [ebp-0x8]
  427790:	jmp    0x427795
  427792:	mov    eax,DWORD PTR [ebp-0x4]
  427795:	xor    eax,esi
  427797:	add    eax,edi
  427799:	pop    edi
  42779a:	pop    esi
  42779b:	pop    ebx
  42779c:	leave  
  42779d:	ret    0xc
  4277a0:	push   ebp
  4277a1:	mov    ebp,esp
  4277a3:	sub    esp,0x28
  4277a6:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4277ad:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4277b4:	mov    eax,DWORD PTR [ebp+0xc]
  4277b7:	mov    DWORD PTR [ebp+0xc],eax
  4277ba:	push   esi
  4277bb:	mov    eax,eax
  4277bd:	mov    eax,DWORD PTR [ebp-0x4]
  4277c0:	mov    esi,DWORD PTR [ebp+0x8]
  4277c3:	mov    ecx,0x75108ae
  4277c8:	xor    eax,ecx
  4277ca:	mov    edx,0x3272f5
  4277cf:	add    eax,edx
  4277d1:	cmp    esi,eax
  4277d3:	je     0x4278fa
  4277d9:	mov    eax,DWORD PTR [ebp+0x8]
  4277dc:	mov    esi,DWORD PTR [ebp+0x8]
  4277df:	add    esi,DWORD PTR [eax+0x3c]
  4277e2:	push   edi
  4277e3:	mov    DWORD PTR [ebp+0xc],esi
  4277e6:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  4277ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4277f0:	mov    esi,DWORD PTR [ebp-0x4]
  4277f3:	mov    edi,DWORD PTR [ebp+0xc]
  4277f6:	xor    esi,ecx
  4277f8:	xor    eax,ecx
  4277fa:	add    esi,edx
  4277fc:	cmp    DWORD PTR [edi+eax*8+0x1939820],esi
  427803:	je     0x4278f4
  427809:	mov    esi,DWORD PTR [ebp+0xc]
  42780c:	mov    eax,DWORD PTR [ebp+0x8]
  42780f:	add    eax,DWORD PTR [esi+0xa0]
  427815:	mov    esi,DWORD PTR [ebp+0x8]
  427818:	mov    edi,DWORD PTR [ebp+0xc]
  42781b:	sub    esi,DWORD PTR [edi+0x34]
  42781e:	mov    edi,DWORD PTR [ebp-0x4]
  427821:	xor    edi,ecx
  427823:	add    edi,edx
  427825:	mov    DWORD PTR [ebp-0x24],esi
  427828:	cmp    esi,edi
  42782a:	je     0x4278f4
  427830:	mov    esi,DWORD PTR [ebp-0x4]
  427833:	xor    esi,ecx
  427835:	add    esi,edx
  427837:	mov    DWORD PTR [ebp-0x8],esi
  42783a:	push   ebx
  42783b:	mov    DWORD PTR [ebp-0x10],0xf89c85a0
  427842:	jmp    0x4278de
  427847:	mov    esi,DWORD PTR [ebp-0x4]
  42784a:	xor    esi,ecx
  42784c:	lea    edi,[ebx-0x8]
  42784f:	add    esi,edx
  427851:	shr    edi,1
  427853:	cmp    esi,edi
  427855:	jae    0x4278c4
  427857:	sub    edi,esi
  427859:	lea    ebx,[eax+esi*2+0x8]
  42785d:	mov    DWORD PTR [ebp-0x18],edi
  427860:	movzx  esi,WORD PTR [ebx]
  427863:	and    esi,0xfff
  427869:	mov    DWORD PTR [ebp-0x14],esi
  42786c:	mov    edi,DWORD PTR [ebp-0x14]
  42786f:	mov    esi,DWORD PTR [eax]
  427871:	sub    esi,edx
  427873:	add    edi,esi
  427875:	movzx  esi,WORD PTR [ebx]
  427878:	shr    esi,0xc
  42787b:	xor    edi,ecx
  42787d:	mov    DWORD PTR [ebp-0x20],edi
  427880:	mov    DWORD PTR [ebp-0x14],esi
  427883:	mov    esi,DWORD PTR [ebp-0x20]
  427886:	mov    edi,DWORD PTR [ebp+0x8]
  427889:	xor    esi,ecx
  42788b:	lea    esi,[esi+edi*1+0x3272f5]
  427892:	mov    DWORD PTR [ebp-0x20],esi
  427895:	mov    esi,DWORD PTR [ebp-0x10]
  427898:	mov    edi,DWORD PTR [ebp-0x14]
  42789b:	xor    esi,ecx
  42789d:	add    esi,edx
  42789f:	cmp    edi,esi
  4278a1:	jne    0x4278b9
  4278a3:	mov    esi,DWORD PTR [ebp-0x10]
  4278a6:	mov    edi,DWORD PTR [ebp-0x14]
  4278a9:	xor    esi,ecx
  4278ab:	add    esi,edx
  4278ad:	cmp    edi,esi
  4278af:	jne    0x4278b9
  4278b1:	mov    esi,DWORD PTR [ebp-0x20]
  4278b4:	mov    edi,DWORD PTR [ebp-0x24]
  4278b7:	add    DWORD PTR [esi],edi
  4278b9:	add    ebx,0x2
  4278bc:	dec    DWORD PTR [ebp-0x18]
  4278bf:	jne    0x427860
  4278c1:	mov    ebx,DWORD PTR [ebp-0xc]
  4278c4:	add    DWORD PTR [ebp-0x8],ebx
  4278c7:	mov    esi,DWORD PTR [ebp-0x1c]
  4278ca:	mov    edi,DWORD PTR [ebp-0x8]
  4278cd:	mov    ebx,DWORD PTR [ebp+0xc]
  4278d0:	xor    esi,ecx
  4278d2:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939824]
  4278d9:	jae    0x4278f3
  4278db:	add    eax,DWORD PTR [ebp-0xc]
  4278de:	mov    esi,DWORD PTR [ebp-0x4]
  4278e1:	mov    ebx,DWORD PTR [eax+0x4]
  4278e4:	xor    esi,ecx
  4278e6:	add    esi,edx
  4278e8:	mov    DWORD PTR [ebp-0xc],ebx
  4278eb:	cmp    ebx,esi
  4278ed:	jne    0x427847
  4278f3:	pop    ebx
  4278f4:	mov    eax,DWORD PTR [ebp-0x28]
  4278f7:	pop    edi
  4278f8:	jmp    0x4278fd
  4278fa:	mov    eax,DWORD PTR [ebp-0x4]
  4278fd:	xor    eax,ecx
  4278ff:	add    eax,edx
  427901:	pop    esi
  427902:	leave  
  427903:	ret    0x8
  427906:	push   ebp
  427907:	mov    ebp,esp
  427909:	sub    esp,0xd8
  42790f:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427916:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  42791d:	mov    eax,DWORD PTR [ebp-0x4]
  427920:	push   ebx
  427921:	push   esi
  427922:	mov    esi,0x75108ae
  427927:	xor    eax,esi
  427929:	push   edi
  42792a:	mov    edi,0x3272f5
  42792f:	add    eax,edi
  427931:	mov    DWORD PTR [ebp-0x18],eax
  427934:	mov    eax,DWORD PTR [ebp-0x4]
  427937:	xor    eax,esi
  427939:	add    eax,edi
  42793b:	mov    DWORD PTR [ebp-0x8],eax
  42793e:	mov    ebx,DWORD PTR [ebp+0x20]
  427941:	mov    eax,DWORD PTR [ebp-0x1c]
  427944:	mov    ecx,DWORD PTR [ebp-0x1c]
  427947:	xor    eax,ecx
  427949:	mov    DWORD PTR [ebp-0x1c],eax
  42794c:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  427953:	mov    eax,DWORD PTR [ebp-0xc]
  427956:	mov    ecx,DWORD PTR [ebp-0xc]
  427959:	xor    eax,ecx
  42795b:	mov    DWORD PTR [ebp-0xc],eax
  42795e:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427965:	mov    eax,DWORD PTR [ebp-0x10]
  427968:	mov    ecx,DWORD PTR [ebp-0x10]
  42796b:	xor    eax,ecx
  42796d:	mov    DWORD PTR [ebp-0x10],eax
  427970:	add    DWORD PTR [ebp-0x10],0xf89c85a1
  427977:	mov    eax,DWORD PTR [ebp-0x28]
  42797a:	mov    ecx,DWORD PTR [ebp-0x28]
  42797d:	xor    eax,ecx
  42797f:	mov    DWORD PTR [ebp-0x28],eax
  427982:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  427989:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427990:	mov    eax,DWORD PTR [ebp+0x8]
  427993:	test   eax,eax
  427995:	je     0x427e1c
  42799b:	mov    eax,DWORD PTR [ebp+0xc]
  42799e:	test   eax,eax
  4279a0:	je     0x427e1c
  4279a6:	mov    eax,DWORD PTR [ebp+0x18]
  4279a9:	test   eax,eax
  4279ab:	je     0x427e1c
  4279b1:	mov    eax,DWORD PTR [ebp+0x20]
  4279b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4279b7:	xor    eax,0x8ae
  4279bc:	add    eax,0x72f5
  4279c1:	cmp    WORD PTR [ecx],ax
  4279c4:	jne    0x427e1c
  4279ca:	mov    eax,DWORD PTR [ebp-0x4]
  4279cd:	xor    eax,esi
  4279cf:	add    eax,edi
  4279d1:	mov    DWORD PTR [ebp-0x30],eax
  4279d4:	mov    eax,DWORD PTR [ebp-0x4]
  4279d7:	mov    ecx,DWORD PTR [ebp+0x8]
  4279da:	mov    eax,DWORD PTR [ebp+0x8]
  4279dd:	add    eax,DWORD PTR [ecx+0x3c]
  4279e0:	mov    DWORD PTR [ebp+0xc],eax
  4279e3:	mov    eax,DWORD PTR [eax+0x50]
  4279e6:	test   eax,eax
  4279e8:	je     0x427e1c
  4279ee:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  4279f5:	mov    eax,DWORD PTR [ebp-0x2c]
  4279f8:	xor    eax,esi
  4279fa:	add    eax,edi
  4279fc:	mov    DWORD PTR [ebp-0x2c],eax
  4279ff:	mov    eax,DWORD PTR [ebp-0x4]
  427a02:	mov    eax,DWORD PTR [ebx+0x190]
  427a08:	mov    ecx,DWORD PTR [eax]
  427a0a:	mov    ecx,DWORD PTR [ecx+0x3c]
  427a0d:	add    ecx,DWORD PTR [eax]
  427a0f:	mov    eax,DWORD PTR [ebp-0x4]
  427a12:	mov    eax,DWORD PTR [ebx+0x18c]
  427a18:	mov    edx,DWORD PTR [eax]
  427a1a:	mov    DWORD PTR [ebp-0x20],ecx
  427a1d:	mov    DWORD PTR [ebp+0x20],edx
  427a20:	cmp    edx,edx
  427a22:	jne    0x427a56
  427a24:	mov    eax,DWORD PTR [ebx+0x1e0]
  427a2a:	lea    edx,[ebp-0x18]
  427a2d:	push   edx
  427a2e:	mov    edx,DWORD PTR [ebp-0xc]
  427a31:	xor    edx,esi
  427a33:	add    edx,edi
  427a35:	push   edx
  427a36:	push   DWORD PTR [ecx+0x50]
  427a39:	push   DWORD PTR [ebp+0x20]
  427a3c:	call   DWORD PTR [eax+0x1c]
  427a3f:	mov    eax,DWORD PTR [ebp-0x20]
  427a42:	mov    ecx,DWORD PTR [eax+0x54]
  427a45:	mov    eax,DWORD PTR [eax+0x50]
  427a48:	sub    eax,ecx
  427a4a:	add    ecx,DWORD PTR [ebp+0x20]
  427a4d:	push   ecx
  427a4e:	call   0x4283b9
  427a53:	mov    edx,DWORD PTR [ebp+0x20]
  427a56:	mov    eax,DWORD PTR [ebx+0x194]
  427a5c:	mov    DWORD PTR [eax],edx
  427a5e:	mov    eax,DWORD PTR [ebp+0xc]
  427a61:	push   DWORD PTR [eax+0x54]
  427a64:	push   DWORD PTR [ebp+0x8]
  427a67:	push   edx
  427a68:	call   0x4282af
  427a6d:	mov    ecx,DWORD PTR [ebp+0x20]
  427a70:	mov    eax,DWORD PTR [ecx+0x3c]
  427a73:	add    eax,ecx
  427a75:	movzx  ecx,WORD PTR [eax+0x14]
  427a79:	lea    ecx,[ecx+eax*1+0x18]
  427a7d:	mov    DWORD PTR [ebp+0x18],ecx
  427a80:	mov    ecx,DWORD PTR [ebp-0x4]
  427a83:	movzx  edx,WORD PTR [eax+0x6]
  427a87:	xor    ecx,esi
  427a89:	add    ecx,edi
  427a8b:	mov    DWORD PTR [ebp+0xc],eax
  427a8e:	cmp    edx,ecx
  427a90:	je     0x427b3d
  427a96:	mov    ecx,DWORD PTR [ebp-0x4]
  427a99:	xor    ecx,esi
  427a9b:	add    ecx,edi
  427a9d:	mov    DWORD PTR [ebp-0x8],ecx
  427aa0:	mov    ecx,DWORD PTR [ebp-0x24]
  427aa3:	movzx  edx,WORD PTR [eax+0x6]
  427aa7:	xor    ecx,esi
  427aa9:	sub    edx,ecx
  427aab:	sub    edx,edi
  427aad:	cmp    DWORD PTR [ebp-0x8],edx
  427ab0:	ja     0x427b3d
  427ab6:	mov    edx,DWORD PTR [ebp+0x18]
  427ab9:	add    edx,0x8
  427abc:	mov    DWORD PTR [ebp+0x18],edx
  427abf:	jmp    0x427ac4
  427ac1:	mov    edx,DWORD PTR [ebp+0x18]
  427ac4:	mov    eax,DWORD PTR [eax+0x38]
  427ac7:	lea    ecx,[eax-0x1]
  427aca:	mov    DWORD PTR [ebp-0x38],eax
  427acd:	mov    eax,DWORD PTR [edx]
  427acf:	test   eax,ecx
  427ad1:	je     0x427ada
  427ad3:	not    ecx
  427ad5:	and    eax,ecx
  427ad7:	add    eax,DWORD PTR [ebp-0x38]
  427ada:	mov    ecx,DWORD PTR [edx+0x4]
  427add:	add    ecx,DWORD PTR [ebp+0x20]
  427ae0:	push   ecx
  427ae1:	call   0x4283b9
  427ae6:	mov    edx,DWORD PTR [ebp-0x4]
  427ae9:	mov    eax,DWORD PTR [ebp+0x18]
  427aec:	mov    ecx,DWORD PTR [eax+0x8]
  427aef:	xor    edx,esi
  427af1:	add    edx,edi
  427af3:	cmp    ecx,edx
  427af5:	je     0x427b0e
  427af7:	push   ecx
  427af8:	mov    ecx,DWORD PTR [ebp+0x8]
  427afb:	add    ecx,DWORD PTR [eax+0xc]
  427afe:	mov    eax,DWORD PTR [eax+0x4]
  427b01:	add    eax,DWORD PTR [ebp+0x20]
  427b04:	push   ecx
  427b05:	push   eax
  427b06:	call   0x4282af
  427b0b:	mov    eax,DWORD PTR [ebp+0x18]
  427b0e:	mov    ecx,DWORD PTR [ebp-0x24]
  427b11:	mov    edx,DWORD PTR [ebp-0x8]
  427b14:	add    eax,0x28
  427b17:	xor    ecx,esi
  427b19:	lea    ecx,[edx+ecx*1+0x3272f5]
  427b20:	mov    edx,DWORD PTR [ebp+0xc]
  427b23:	mov    DWORD PTR [ebp+0x18],eax
  427b26:	mov    eax,DWORD PTR [ebp-0x24]
  427b29:	movzx  edx,WORD PTR [edx+0x6]
  427b2d:	xor    eax,esi
  427b2f:	sub    edx,eax
  427b31:	mov    eax,DWORD PTR [ebp+0xc]
  427b34:	sub    edx,edi
  427b36:	mov    DWORD PTR [ebp-0x8],ecx
  427b39:	cmp    ecx,edx
  427b3b:	jbe    0x427ac1
  427b3d:	mov    edx,DWORD PTR [ebx+0x18c]
  427b43:	mov    ecx,DWORD PTR [ebp+0x20]
  427b46:	cmp    ecx,DWORD PTR [edx]
  427b48:	jne    0x427b71
  427b4a:	mov    eax,DWORD PTR [ebx+0x1e0]
  427b50:	lea    edx,[ebp-0x18]
  427b53:	push   edx
  427b54:	mov    edx,DWORD PTR [ebp-0x10]
  427b57:	xor    edx,esi
  427b59:	add    edx,edi
  427b5b:	push   edx
  427b5c:	mov    edx,DWORD PTR [ebp-0x20]
  427b5f:	push   DWORD PTR [edx+0x54]
  427b62:	push   ecx
  427b63:	call   DWORD PTR [eax+0x1c]
  427b66:	test   eax,eax
  427b68:	je     0x427e0d
  427b6e:	mov    eax,DWORD PTR [ebp+0xc]
  427b71:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427b77:	mov    ecx,DWORD PTR [ecx]
  427b79:	xor    ecx,esi
  427b7b:	add    ecx,edi
  427b7d:	je     0x427d38
  427b83:	mov    eax,DWORD PTR [ebp-0x4]
  427b86:	xor    eax,esi
  427b88:	add    eax,edi
  427b8a:	and    DWORD PTR [ebp+0x8],0x0
  427b8e:	mov    DWORD PTR [ebp-0x14],eax
  427b91:	mov    eax,0xf89c85c1
  427b96:	lea    ecx,[eax+0x18]
  427b99:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427ba0:	mov    DWORD PTR [ebp-0x54],0xf89c85d1
  427ba7:	mov    DWORD PTR [ebp-0x50],eax
  427baa:	mov    DWORD PTR [ebp-0x4c],ecx
  427bad:	mov    DWORD PTR [ebp-0x48],ecx
  427bb0:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427bb7:	mov    edx,DWORD PTR [ebp+0x8]
  427bba:	mov    ecx,0x8ae
  427bbf:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427bc4:	mov    edx,0x72f5
  427bc9:	add    cx,dx
  427bcc:	mov    edx,DWORD PTR [ebp+0x8]
  427bcf:	inc    DWORD PTR [ebp+0x8]
  427bd2:	cmp    DWORD PTR [ebp+0x8],0x6
  427bd6:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427bde:	jb     0x427bb7
  427be0:	mov    ecx,0xf89c85d3
  427be5:	mov    DWORD PTR [ebp-0xb0],eax
  427beb:	mov    DWORD PTR [ebp-0x9c],eax
  427bf1:	mov    DWORD PTR [ebp-0x74],eax
  427bf4:	mov    DWORD PTR [ebp-0x70],eax
  427bf7:	lea    eax,[ecx-0x3]
  427bfa:	lea    edx,[ecx+0x2c]
  427bfd:	mov    DWORD PTR [ebp-0x64],eax
  427c00:	mov    DWORD PTR [ebp-0x60],eax
  427c03:	mov    DWORD PTR [ebp-0xb4],0xf89c85f9
  427c0d:	mov    DWORD PTR [ebp-0xac],ecx
  427c13:	mov    DWORD PTR [ebp-0xa8],edx
  427c19:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  427c23:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427c2d:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  427c37:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  427c41:	mov    DWORD PTR [ebp-0x90],0xf89c85d1
  427c4b:	mov    DWORD PTR [ebp-0x8c],ecx
  427c51:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  427c5b:	mov    DWORD PTR [ebp-0x84],edx
  427c61:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  427c68:	mov    DWORD PTR [ebp-0x7c],ecx
  427c6b:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  427c72:	mov    DWORD PTR [ebp-0x6c],ecx
  427c75:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427c7c:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427c83:	xor    eax,eax
  427c85:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427c8c:	xor    cl,0xae
  427c8f:	sub    cl,0xb
  427c92:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427c99:	inc    eax
  427c9a:	cmp    eax,0x17
  427c9d:	jb     0x427c85
  427c9f:	mov    eax,DWORD PTR [ebx+0x1e0]
  427ca5:	lea    ecx,[ebp-0xc0]
  427cab:	push   ecx
  427cac:	call   DWORD PTR [eax+0x4]
  427caf:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427cb5:	lea    edx,[ebp-0xd8]
  427cbb:	push   edx
  427cbc:	push   eax
  427cbd:	call   DWORD PTR [ecx+0x8]
  427cc0:	mov    DWORD PTR [ebp-0x40],eax
  427cc3:	lea    eax,[ebp-0x14]
  427cc6:	push   eax
  427cc7:	mov    eax,DWORD PTR [ebx+0x18c]
  427ccd:	push   DWORD PTR [eax]
  427ccf:	mov    eax,DWORD PTR [ebp-0x40]
  427cd2:	call   eax
  427cd4:	mov    eax,DWORD PTR [ebp-0x4]
  427cd7:	xor    eax,esi
  427cd9:	add    eax,edi
  427cdb:	mov    DWORD PTR [ebp-0x34],eax
  427cde:	mov    ecx,DWORD PTR [ebp-0x4]
  427ce1:	mov    eax,DWORD PTR [ebp-0x14]
  427ce4:	xor    ecx,esi
  427ce6:	add    ecx,edi
  427ce8:	cmp    eax,ecx
  427cea:	je     0x427d35
  427cec:	mov    DWORD PTR [ebp-0x3c],eax
  427cef:	jmp    0x427d00
  427cf1:	mov    eax,DWORD PTR [eax]
  427cf3:	mov    ecx,DWORD PTR [ebp-0x3c]
  427cf6:	mov    DWORD PTR [ebp-0x14],eax
  427cf9:	mov    eax,DWORD PTR [ebp-0x14]
  427cfc:	cmp    eax,ecx
  427cfe:	je     0x427d0d
  427d00:	mov    edx,DWORD PTR [eax+0x18]
  427d03:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d09:	cmp    edx,DWORD PTR [ecx]
  427d0b:	jne    0x427cf1
  427d0d:	mov    ecx,DWORD PTR [ebx+0x18c]
  427d13:	mov    edx,DWORD PTR [eax+0x18]
  427d16:	cmp    edx,DWORD PTR [ecx]
  427d18:	jne    0x427d35
  427d1a:	mov    ecx,DWORD PTR [ebx+0x190]
  427d20:	mov    edx,DWORD PTR [ebp-0x20]
  427d23:	mov    edx,DWORD PTR [edx+0x28]
  427d26:	add    edx,DWORD PTR [ecx]
  427d28:	mov    DWORD PTR [eax+0x1c],edx
  427d2b:	mov    eax,DWORD PTR [ebp-0x24]
  427d2e:	xor    eax,esi
  427d30:	add    eax,edi
  427d32:	mov    DWORD PTR [ebp-0x34],eax
  427d35:	mov    eax,DWORD PTR [ebp+0xc]
  427d38:	push   ebx
  427d39:	push   eax
  427d3a:	push   DWORD PTR [ebp+0x20]
  427d3d:	call   0x4274bd
  427d42:	test   eax,eax
  427d44:	je     0x427e0d
  427d4a:	push   DWORD PTR [ebp+0xc]
  427d4d:	mov    ecx,ebx
  427d4f:	push   DWORD PTR [ebp+0x20]
  427d52:	call   0x427416
  427d57:	test   eax,eax
  427d59:	je     0x427e0d
  427d5f:	mov    eax,DWORD PTR [ebp+0xc]
  427d62:	mov    edx,DWORD PTR [ebp+0x20]
  427d65:	mov    ecx,ebx
  427d67:	call   0x4272ef
  427d6c:	test   eax,eax
  427d6e:	je     0x427e0d
  427d74:	push   ebx
  427d75:	push   DWORD PTR [ebp+0x20]
  427d78:	call   0x4277a0
  427d7d:	test   eax,eax
  427d7f:	je     0x427e0d
  427d85:	mov    eax,DWORD PTR [ebx+0x18c]
  427d8b:	mov    edx,DWORD PTR [ebp+0x20]
  427d8e:	cmp    edx,DWORD PTR [eax]
  427d90:	jne    0x427dac
  427d92:	mov    eax,DWORD PTR [ebx+0x1e0]
  427d98:	lea    ecx,[ebp-0x18]
  427d9b:	push   ecx
  427d9c:	push   DWORD PTR [ebp-0x18]
  427d9f:	mov    ecx,DWORD PTR [ebp-0x20]
  427da2:	push   DWORD PTR [ecx+0x54]
  427da5:	push   edx
  427da6:	call   DWORD PTR [eax+0x1c]
  427da9:	mov    edx,DWORD PTR [ebp+0x20]
  427dac:	mov    eax,DWORD PTR [ebx+0x1c8]
  427db2:	mov    eax,DWORD PTR [eax]
  427db4:	xor    eax,esi
  427db6:	add    eax,edi
  427db8:	je     0x427df1
  427dba:	mov    ecx,DWORD PTR [ebp+0xc]
  427dbd:	mov    eax,DWORD PTR [ecx+0x28]
  427dc0:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  427dc7:	mov    esi,DWORD PTR [ebp+0x8]
  427dca:	push   DWORD PTR [ebp+0x14]
  427dcd:	xor    esi,0x8ae
  427dd3:	push   DWORD PTR [ebp+0x10]
  427dd6:	add    esi,0x72f5
  427ddc:	or     WORD PTR [ecx+0x16],si
  427de0:	add    eax,edx
  427de2:	push   edx
  427de3:	call   eax
  427de5:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  427def:	jmp    0x427dfb
  427df1:	mov    eax,DWORD PTR [ebp+0xc]
  427df4:	mov    eax,DWORD PTR [eax+0x28]
  427df7:	add    eax,edx
  427df9:	call   eax
  427dfb:	mov    DWORD PTR [ebp-0x8],eax
  427dfe:	mov    eax,DWORD PTR [ebp-0x8]
  427e01:	mov    ecx,DWORD PTR [ebp+0x1c]
  427e04:	mov    DWORD PTR [ecx],eax
  427e06:	mov    DWORD PTR [ebp-0x30],0x1
  427e0d:	cmp    DWORD PTR [ebp-0x30],0x0
  427e11:	jne    0x427e17
  427e13:	and    DWORD PTR [ebp+0x20],0x0
  427e17:	mov    eax,DWORD PTR [ebp+0x20]
  427e1a:	jmp    0x427e1e
  427e1c:	xor    eax,eax
  427e1e:	pop    edi
  427e1f:	pop    esi
  427e20:	pop    ebx
  427e21:	leave  
  427e22:	ret    0x1c
  427e25:	push   ebp
  427e26:	mov    ebp,esp
  427e28:	movzx  edx,WORD PTR [ecx+0x6]
  427e2c:	movzx  eax,WORD PTR [ecx+0x14]
  427e30:	push   ebx
  427e31:	push   edi
  427e32:	xor    edi,edi
  427e34:	lea    eax,[eax+ecx*1+0x18]
  427e38:	test   edx,edx
  427e3a:	je     0x427e5b
  427e3c:	mov    ecx,DWORD PTR [eax+0xc]
  427e3f:	lea    ebx,[ecx+esi*1]
  427e42:	cmp    DWORD PTR [ebp+0x8],ebx
  427e45:	jb     0x427e53
  427e47:	mov    ebx,DWORD PTR [eax+0x8]
  427e4a:	add    ebx,ecx
  427e4c:	add    ebx,esi
  427e4e:	cmp    DWORD PTR [ebp+0x8],ebx
  427e51:	jb     0x427e5d
  427e53:	add    eax,0x28
  427e56:	inc    edi
  427e57:	cmp    edi,edx
  427e59:	jb     0x427e3c
  427e5b:	xor    eax,eax
  427e5d:	pop    edi
  427e5e:	pop    ebx
  427e5f:	pop    ebp
  427e60:	ret    0x4
  427e63:	push   ebp
  427e64:	mov    ebp,esp
  427e66:	sub    esp,0x34
  427e69:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427e70:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  427e77:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  427e7e:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  427e85:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  427e8c:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  427e93:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  427e9a:	mov    DWORD PTR [ebp-0x10],eax
  427e9d:	mov    eax,DWORD PTR [ebp+0x8]
  427ea0:	mov    DWORD PTR [ebp-0x14],eax
  427ea3:	mov    eax,DWORD PTR [ebp-0xc]
  427ea6:	push   ebx
  427ea7:	mov    ecx,0x75108ae
  427eac:	xor    eax,ecx
  427eae:	push   esi
  427eaf:	mov    esi,DWORD PTR [ebp-0x10]
  427eb2:	mov    edx,0x3272f5
  427eb7:	add    eax,edx
  427eb9:	push   edi
  427eba:	cmp    esi,eax
  427ebc:	je     0x42809b
  427ec2:	mov    eax,DWORD PTR [ebp-0xc]
  427ec5:	mov    esi,DWORD PTR [ebp-0x14]
  427ec8:	xor    eax,ecx
  427eca:	add    eax,edx
  427ecc:	cmp    esi,eax
  427ece:	je     0x42809b
  427ed4:	mov    eax,DWORD PTR [ebp-0xc]
  427ed7:	xor    eax,ecx
  427ed9:	add    eax,edx
  427edb:	mov    DWORD PTR [ebp-0x24],eax
  427ede:	mov    eax,DWORD PTR [ebp-0xc]
  427ee1:	xor    eax,ecx
  427ee3:	add    eax,edx
  427ee5:	mov    DWORD PTR [ebp-0x28],eax
  427ee8:	mov    edi,DWORD PTR [ebp-0x20]
  427eeb:	mov    ebx,DWORD PTR [ebp-0x8]
  427eee:	mov    esi,0x8ae
  427ef3:	xor    edi,esi
  427ef5:	mov    eax,0x72f5
  427efa:	xor    ebx,esi
  427efc:	add    edi,eax
  427efe:	add    ebx,eax
  427f00:	sub    ebx,edi
  427f02:	mov    WORD PTR [ebp-0x8],bx
  427f06:	jmp    0x427fcb
  427f0b:	mov    edi,DWORD PTR [ebp-0xc]
  427f0e:	mov    bx,WORD PTR [ebp-0x4]
  427f12:	xor    edi,esi
  427f14:	add    edi,eax
  427f16:	cmp    bx,di
  427f19:	je     0x42800d
  427f1f:	mov    edi,DWORD PTR [ebp-0xc]
  427f22:	mov    ebx,DWORD PTR [ebp+0xc]
  427f25:	xor    edi,ecx
  427f27:	add    edi,edx
  427f29:	cmp    ebx,edi
  427f2b:	mov    di,WORD PTR [ebp-0x4]
  427f2f:	mov    bx,WORD PTR [ebp+0x8]
  427f33:	je     0x427f9e
  427f35:	cmp    bx,di
  427f38:	je     0x427fa7
  427f3a:	mov    edi,DWORD PTR [ebp-0x20]
  427f3d:	mov    bx,WORD PTR [ebp+0x8]
  427f41:	xor    edi,esi
  427f43:	add    edi,eax
  427f45:	cmp    bx,di
  427f48:	jb     0x427f68
  427f4a:	mov    edi,DWORD PTR [ebp-0x2c]
  427f4d:	mov    bx,WORD PTR [ebp+0x8]
  427f51:	xor    edi,esi
  427f53:	add    edi,eax
  427f55:	cmp    bx,di
  427f58:	ja     0x427f68
  427f5a:	movzx  edi,WORD PTR [ebp+0x8]
  427f5e:	movzx  ebx,WORD PTR [ebp-0x8]
  427f62:	add    edi,ebx
  427f64:	mov    WORD PTR [ebp+0x8],di
  427f68:	mov    edi,DWORD PTR [ebp-0x20]
  427f6b:	mov    bx,WORD PTR [ebp-0x4]
  427f6f:	xor    edi,esi
  427f71:	add    edi,eax
  427f73:	cmp    bx,di
  427f76:	jb     0x427f96
  427f78:	mov    edi,DWORD PTR [ebp-0x2c]
  427f7b:	mov    bx,WORD PTR [ebp-0x4]
  427f7f:	xor    edi,esi
  427f81:	add    edi,eax
  427f83:	cmp    bx,di
  427f86:	ja     0x427f96
  427f88:	movzx  edi,WORD PTR [ebp-0x4]
  427f8c:	movzx  ebx,WORD PTR [ebp-0x8]
  427f90:	add    edi,ebx
  427f92:	mov    WORD PTR [ebp-0x4],di
  427f96:	mov    di,WORD PTR [ebp-0x4]
  427f9a:	mov    bx,WORD PTR [ebp+0x8]
  427f9e:	cmp    bx,di
  427fa1:	jne    0x42809b
  427fa7:	mov    edi,DWORD PTR [ebp-0x1c]
  427faa:	mov    ebx,DWORD PTR [ebp-0x10]
  427fad:	xor    edi,ecx
  427faf:	lea    edi,[edi+ebx*1+0x3272f5]
  427fb6:	mov    DWORD PTR [ebp-0x10],edi
  427fb9:	mov    edi,DWORD PTR [ebp-0x1c]
  427fbc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fbf:	xor    edi,ecx
  427fc1:	lea    edi,[edi+ebx*1+0x3272f5]
  427fc8:	mov    DWORD PTR [ebp-0x14],edi
  427fcb:	mov    edi,DWORD PTR [ebp-0x24]
  427fce:	mov    ebx,DWORD PTR [ebp-0x10]
  427fd1:	mov    di,WORD PTR [ebx+edi*2]
  427fd5:	mov    WORD PTR [ebp+0x8],di
  427fd9:	mov    edi,DWORD PTR [ebp-0x28]
  427fdc:	mov    ebx,DWORD PTR [ebp-0x14]
  427fdf:	mov    di,WORD PTR [ebx+edi*2]
  427fe3:	mov    WORD PTR [ebp-0x4],di
  427fe7:	mov    edi,DWORD PTR [ebp-0xc]
  427fea:	mov    bx,WORD PTR [ebp+0x8]
  427fee:	xor    edi,esi
  427ff0:	add    edi,eax
  427ff2:	cmp    bx,di
  427ff5:	jne    0x427f0b
  427ffb:	mov    eax,DWORD PTR [ebp-0x18]
  427ffe:	mov    esi,DWORD PTR [ebp-0xc]
  428001:	xor    eax,ecx
  428003:	add    eax,edx
  428005:	imul   eax,esi
  428008:	mov    DWORD PTR [ebp-0xc],eax
  42800b:	jmp    0x42801f
  42800d:	mov    eax,DWORD PTR [ebp-0xc]
  428010:	mov    esi,DWORD PTR [ebp-0x18]
  428013:	xor    eax,ecx
  428015:	lea    eax,[eax+esi*1+0x3272f5]
  42801c:	mov    DWORD PTR [ebp-0x18],eax
  42801f:	mov    eax,DWORD PTR [ebp-0x24]
  428022:	sub    eax,edx
  428024:	xor    eax,ecx
  428026:	mov    DWORD PTR [ebp-0x30],eax
  428029:	mov    eax,DWORD PTR [ebp-0x28]
  42802c:	sub    eax,edx
  42802e:	xor    eax,ecx
  428030:	mov    DWORD PTR [ebp-0x34],eax
  428033:	mov    eax,DWORD PTR [ebp-0x34]
  428036:	mov    esi,DWORD PTR [ebp-0x1c]
  428039:	xor    esi,ecx
  42803b:	add    esi,edx
  42803d:	xor    eax,ecx
  42803f:	add    eax,0x3272f5
  428044:	imul   esi,eax
  428047:	mov    eax,DWORD PTR [ebp-0x14]
  42804a:	movzx  eax,WORD PTR [esi+eax*1]
  42804e:	mov    esi,DWORD PTR [ebp-0x30]
  428051:	mov    edi,DWORD PTR [ebp-0x1c]
  428054:	xor    esi,ecx
  428056:	add    esi,edx
  428058:	xor    edi,ecx
  42805a:	add    edi,edx
  42805c:	imul   edi,esi
  42805f:	mov    esi,DWORD PTR [ebp-0x10]
  428062:	movzx  esi,WORD PTR [edi+esi*1]
  428066:	sub    eax,edx
  428068:	sub    esi,edx
  42806a:	xor    eax,ecx
  42806c:	xor    esi,ecx
  42806e:	cmp    esi,eax
  428070:	jne    0x42809b
  428072:	mov    eax,DWORD PTR [ebp-0x30]
  428075:	mov    esi,DWORD PTR [ebp-0x1c]
  428078:	xor    eax,ecx
  42807a:	add    eax,0x3272f5
  42807f:	xor    esi,ecx
  428081:	add    esi,edx
  428083:	imul   esi,eax
  428086:	mov    eax,DWORD PTR [ebp-0x10]
  428089:	movzx  eax,WORD PTR [esi+eax*1]
  42808d:	mov    esi,DWORD PTR [ebp-0xc]
  428090:	sub    eax,edx
  428092:	xor    eax,ecx
  428094:	cmp    eax,esi
  428096:	mov    eax,DWORD PTR [ebp-0xc]
  428099:	je     0x42809e
  42809b:	mov    eax,DWORD PTR [ebp-0x18]
  42809e:	pop    edi
  42809f:	xor    eax,ecx
  4280a1:	pop    esi
  4280a2:	add    eax,edx
  4280a4:	pop    ebx
  4280a5:	leave  
  4280a6:	ret    0x8
  4280a9:	push   ebp
  4280aa:	mov    ebp,esp
  4280ac:	push   ecx
  4280ad:	mov    cx,WORD PTR [eax]
  4280b0:	push   esi
  4280b1:	mov    esi,0x3b5c
  4280b6:	sub    cx,si
  4280b9:	mov    esi,0x8a9a
  4280be:	xor    cx,si
  4280c1:	mov    esi,0x4e3e
  4280c6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4280cd:	mov    edx,0xf89c85a5
  4280d2:	cmp    cx,si
  4280d5:	je     0x428134
  4280d7:	push   ebx
  4280d8:	push   edi
  4280d9:	movzx  ecx,cx
  4280dc:	mov    edi,0xffcd8d0b
  4280e1:	mov    esi,0x75108ae
  4280e6:	mov    ebx,0x4f9a
  4280eb:	cmp    cx,bx
  4280ee:	jne    0x4280f3
  4280f0:	mov    DWORD PTR [ebp-0x4],edx
  4280f3:	lea    edx,[edi+0x1]
  4280f6:	xor    edx,esi
  4280f8:	mov    edi,edx
  4280fa:	xor    edi,esi
  4280fc:	mov    cx,WORD PTR [eax+edi*2+0x64e5ea]
  428104:	mov    ebx,0x3b5c
  428109:	sub    cx,bx
  42810c:	mov    ebx,0x8a9a
  428111:	xor    cx,bx
  428114:	mov    ebx,0x4e3e
  428119:	cmp    cx,bx
  42811c:	jne    0x4280e6
  42811e:	mov    ecx,DWORD PTR [ebp-0x4]
  428121:	pop    edi
  428122:	pop    ebx
  428123:	cmp    ecx,0xf89c85a4
  428129:	je     0x428134
  42812b:	xor    ecx,esi
  42812d:	lea    eax,[eax+ecx*2+0x64e5ec]
  428134:	pop    esi
  428135:	leave  
  428136:	ret    
  428137:	push   ebp
  428138:	mov    ebp,esp
  42813a:	push   ecx
  42813b:	push   esi
  42813c:	push   edi
  42813d:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  428144:	mov    esi,0xf89c85a5
  428149:	call   0x4280a9
  42814e:	mov    edi,eax
  428150:	mov    al,BYTE PTR [edi]
  428152:	sub    al,0x3
  428154:	xor    al,0x7e
  428156:	cmp    al,0x83
  428158:	je     0x4281bb
  42815a:	mov    eax,edi
  42815c:	mov    edx,0xffcd8d0b
  428161:	mov    ecx,0x75108ae
  428166:	push   ebx
  428167:	mov    ax,WORD PTR [eax]
  42816a:	mov    ebx,0x3b5c
  42816f:	sub    ax,bx
  428172:	mov    ebx,0x8a9a
  428177:	xor    ax,bx
  42817a:	mov    ebx,0x4e48
  42817f:	cmp    ax,bx
  428182:	jne    0x428187
  428184:	mov    DWORD PTR [ebp-0x4],esi
  428187:	lea    esi,[edx+0x1]
  42818a:	xor    esi,ecx
  42818c:	mov    edx,esi
  42818e:	xor    edx,ecx
  428190:	lea    eax,[edi+edx*2+0x64e5ea]
  428197:	mov    bl,BYTE PTR [eax]
  428199:	sub    bl,0x3
  42819c:	xor    bl,0x7e
  42819f:	cmp    bl,0x83
  4281a2:	jne    0x428167
  4281a4:	mov    eax,DWORD PTR [ebp-0x4]
  4281a7:	pop    ebx
  4281a8:	cmp    eax,0xf89c85a4
  4281ad:	je     0x4281bb
  4281af:	xor    eax,ecx
  4281b1:	xor    ecx,ecx
  4281b3:	mov    WORD PTR [edi+eax*2+0x64e5ea],cx
  4281bb:	mov    eax,edi
  4281bd:	pop    edi
  4281be:	pop    esi
  4281bf:	leave  
  4281c0:	ret    
  4281c1:	push   ebp
  4281c2:	mov    ebp,esp
  4281c4:	push   ecx
  4281c5:	push   esi
  4281c6:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  4281cd:	mov    esi,0xf89c85a5
  4281d2:	call   0x4280a9
  4281d7:	mov    cx,WORD PTR [eax]
  4281da:	mov    edx,0x3b5c
  4281df:	sub    cx,dx
  4281e2:	mov    edx,0x8a9a
  4281e7:	xor    cx,dx
  4281ea:	mov    edx,0x4e3e
  4281ef:	cmp    cx,dx
  4281f2:	je     0x42824b
  4281f4:	push   ebx
  4281f5:	push   edi
  4281f6:	movzx  ecx,cx
  4281f9:	mov    edx,0xffcd8d0b
  4281fe:	mov    edi,0x75108ae
  428203:	mov    ebx,0x4e48
  428208:	cmp    cx,bx
  42820b:	jne    0x428210
  42820d:	mov    DWORD PTR [ebp-0x4],esi
  428210:	lea    esi,[edx+0x1]
  428213:	xor    esi,edi
  428215:	mov    edx,esi
  428217:	xor    edx,edi
  428219:	mov    cx,WORD PTR [eax+edx*2+0x64e5ea]
  428221:	mov    ebx,0x3b5c
  428226:	sub    cx,bx
  428229:	mov    ebx,0x8a9a
  42822e:	xor    cx,bx
  428231:	mov    ebx,0x4e3e
  428236:	cmp    cx,bx
  428239:	jne    0x428203
  42823b:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  428242:	pop    edi
  428243:	pop    ebx
  428244:	je     0x42824b
  428246:	xor    eax,eax
  428248:	inc    eax
  428249:	jmp    0x42824d
  42824b:	xor    eax,eax
  42824d:	pop    esi
  42824e:	leave  
  42824f:	ret    
  428250:	push   ebp
  428251:	mov    ebp,esp
  428253:	push   ecx
  428254:	mov    eax,DWORD PTR [ebp+0x8]
  428257:	movzx  ecx,WORD PTR [eax]
  42825a:	push   esi
  42825b:	lea    eax,[ecx-0x3b5c]
  428261:	mov    esi,0x8a9a
  428266:	push   edi
  428267:	xor    eax,esi
  428269:	mov    edi,0x4e3e
  42826e:	mov    DWORD PTR [ebp-0x4],edx
  428271:	cmp    ax,di
  428274:	je     0x4282a1
  428276:	mov    eax,DWORD PTR [ebp+0x8]
  428279:	sub    eax,edx
  42827b:	mov    DWORD PTR [ebp+0x8],eax
  42827e:	jmp    0x428283
  428280:	mov    eax,DWORD PTR [ebp+0x8]
  428283:	mov    WORD PTR [edx],cx
  428286:	add    edx,0x2
  428289:	movzx  edi,WORD PTR [eax+edx*1]
  42828d:	mov    ecx,edi
  42828f:	add    edi,0xffffc4a4
  428295:	xor    edi,esi
  428297:	mov    eax,0x4e3e
  42829c:	cmp    di,ax
  42829f:	jne    0x428280
  4282a1:	xor    eax,eax
  4282a3:	pop    edi
  4282a4:	mov    WORD PTR [edx],ax
  4282a7:	mov    eax,DWORD PTR [ebp-0x4]
  4282aa:	pop    esi
  4282ab:	leave  
  4282ac:	ret    0x4
  4282af:	push   ebp
  4282b0:	mov    ebp,esp
  4282b2:	sub    esp,0x18
  4282b5:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  4282bc:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  4282c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282c6:	push   esi
  4282c7:	mov    eax,0x75108ae
  4282cc:	xor    ecx,eax
  4282ce:	mov    esi,0x3272f5
  4282d3:	add    ecx,esi
  4282d5:	mov    DWORD PTR [ebp-0x4],ecx
  4282d8:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4282df:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  4282e6:	push   edi
  4282e7:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  4282ee:	jmp    0x42838f
  4282f3:	mov    ecx,DWORD PTR [ebp-0x4]
  4282f6:	mov    edx,DWORD PTR [ebp+0x10]
  4282f9:	sub    edx,ecx
  4282fb:	mov    ecx,DWORD PTR [ebp-0xc]
  4282fe:	xor    ecx,eax
  428300:	add    ecx,esi
  428302:	cmp    edx,ecx
  428304:	jbe    0x428321
  428306:	mov    edx,DWORD PTR [ebp-0x4]
  428309:	add    edx,DWORD PTR [ebp+0x8]
  42830c:	mov    ecx,DWORD PTR [ebp-0x4]
  42830f:	add    ecx,DWORD PTR [ebp+0xc]
  428312:	mov    edi,DWORD PTR [ecx]
  428314:	mov    DWORD PTR [edx],edi
  428316:	mov    ecx,DWORD PTR [ecx+0x4]
  428319:	mov    DWORD PTR [edx+0x4],ecx
  42831c:	mov    ecx,DWORD PTR [ebp-0xc]
  42831f:	jmp    0x42836e
  428321:	mov    ecx,DWORD PTR [ebp-0x4]
  428324:	mov    edx,DWORD PTR [ebp+0x10]
  428327:	sub    edx,ecx
  428329:	mov    ecx,DWORD PTR [ebp-0x10]
  42832c:	xor    ecx,eax
  42832e:	add    ecx,esi
  428330:	cmp    edx,ecx
  428332:	mov    ecx,DWORD PTR [ebp-0x4]
  428335:	jbe    0x428349
  428337:	add    ecx,DWORD PTR [ebp+0x8]
  42833a:	mov    edx,DWORD PTR [ebp-0x4]
  42833d:	add    edx,DWORD PTR [ebp+0xc]
  428340:	mov    edx,DWORD PTR [edx]
  428342:	mov    DWORD PTR [ecx],edx
  428344:	mov    ecx,DWORD PTR [ebp-0x10]
  428347:	jmp    0x42836e
  428349:	mov    edx,DWORD PTR [ebp+0x10]
  42834c:	sub    edx,ecx
  42834e:	mov    ecx,DWORD PTR [ebp-0x14]
  428351:	xor    ecx,eax
  428353:	add    ecx,esi
  428355:	cmp    edx,ecx
  428357:	mov    ecx,DWORD PTR [ebp-0x4]
  42835a:	jbe    0x42837f
  42835c:	add    ecx,DWORD PTR [ebp+0x8]
  42835f:	mov    edx,DWORD PTR [ebp-0x4]
  428362:	add    edx,DWORD PTR [ebp+0xc]
  428365:	mov    dx,WORD PTR [edx]
  428368:	mov    WORD PTR [ecx],dx
  42836b:	mov    ecx,DWORD PTR [ebp-0x14]
  42836e:	mov    edx,DWORD PTR [ebp-0x4]
  428371:	xor    ecx,eax
  428373:	lea    ecx,[ecx+edx*1+0x3272f5]
  42837a:	mov    DWORD PTR [ebp-0x4],ecx
  42837d:	jmp    0x42838f
  42837f:	add    ecx,DWORD PTR [ebp+0x8]
  428382:	mov    edx,DWORD PTR [ebp-0x4]
  428385:	add    edx,DWORD PTR [ebp+0xc]
  428388:	mov    dl,BYTE PTR [edx]
  42838a:	mov    BYTE PTR [ecx],dl
  42838c:	inc    DWORD PTR [ebp-0x4]
  42838f:	mov    ecx,DWORD PTR [ebp-0x18]
  428392:	mov    edx,DWORD PTR [ebp+0x10]
  428395:	xor    ecx,eax
  428397:	add    ecx,esi
  428399:	imul   ecx,edx
  42839c:	mov    edx,DWORD PTR [ebp-0x8]
  42839f:	mov    edi,DWORD PTR [ebp-0x4]
  4283a2:	xor    edx,eax
  4283a4:	lea    edx,[edx+edi*1+0x3272f5]
  4283ab:	cmp    edx,ecx
  4283ad:	jb     0x4282f3
  4283b3:	pop    edi
  4283b4:	pop    esi
  4283b5:	leave  
  4283b6:	ret    0xc
  4283b9:	push   ebp
  4283ba:	mov    ebp,esp
  4283bc:	sub    esp,0xc
  4283bf:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4283c6:	push   esi
  4283c7:	mov    esi,eax
  4283c9:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  4283d0:	mov    edx,DWORD PTR [ebp-0x4]
  4283d3:	mov    eax,0x75108ae
  4283d8:	xor    edx,eax
  4283da:	mov    ecx,0x3272f5
  4283df:	add    edx,ecx
  4283e1:	cmp    esi,edx
  4283e3:	je     0x428425
  4283e5:	push   ebx
  4283e6:	push   edi
  4283e7:	mov    edx,DWORD PTR [ebp-0x8]
  4283ea:	mov    ebx,DWORD PTR [ebp+0x8]
  4283ed:	xor    edx,eax
  4283ef:	mov    edi,0xffcd8d0b
  4283f4:	sub    edi,edx
  4283f6:	add    esi,edi
  4283f8:	lea    edx,[esi-0x3272f5]
  4283fe:	xor    edx,eax
  428400:	mov    DWORD PTR [ebp-0xc],edx
  428403:	mov    edx,DWORD PTR [ebp-0x4]
  428406:	mov    edi,DWORD PTR [ebp-0xc]
  428409:	xor    dl,0xae
  42840c:	sub    dl,0xb
  42840f:	xor    edi,eax
  428411:	mov    BYTE PTR [edi+ebx*1+0x3272f5],dl
  428418:	mov    edx,DWORD PTR [ebp-0x4]
  42841b:	xor    edx,eax
  42841d:	add    edx,ecx
  42841f:	cmp    esi,edx
  428421:	jne    0x4283e7
  428423:	pop    edi
  428424:	pop    ebx
  428425:	pop    esi
  428426:	leave  
  428427:	ret    0x4
  42842a:	push   ebp
  42842b:	mov    ebp,esp
  42842d:	sub    esp,0x21c
  428433:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42843a:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  428441:	mov    eax,DWORD PTR [ebp+0x10]
  428444:	mov    eax,DWORD PTR [ebp-0x4]
  428447:	mov    ecx,DWORD PTR [ebp+0x8]
  42844a:	push   esi
  42844b:	push   edi
  42844c:	mov    edi,0x75108ae
  428451:	xor    eax,edi
  428453:	mov    esi,0x3272f5
  428458:	add    eax,esi
  42845a:	cmp    eax,ecx
  42845c:	mov    eax,DWORD PTR [ebp-0x4]
  42845f:	jne    0x42846a
  428461:	xor    eax,edi
  428463:	add    eax,esi
  428465:	jmp    0x428516
  42846a:	mov    ecx,DWORD PTR [ebp+0xc]
  42846d:	xor    eax,edi
  42846f:	add    eax,esi
  428471:	cmp    eax,ecx
  428473:	jne    0x42847a
  428475:	mov    eax,DWORD PTR [ebp-0x4]
  428478:	jmp    0x428461
  42847a:	lea    eax,[ebp-0x21c]
  428480:	mov    DWORD PTR [ebp-0x8],eax
  428483:	mov    eax,DWORD PTR [ebp+0xc]
  428486:	mov    DWORD PTR [ebp-0x10],eax
  428489:	mov    eax,DWORD PTR [ebp-0x4]
  42848c:	xor    eax,edi
  42848e:	add    eax,esi
  428490:	mov    DWORD PTR [ebp+0x10],eax
  428493:	mov    eax,DWORD PTR [ebp+0xc]
  428496:	push   ebx
  428497:	call   0x4281c1
  42849c:	mov    ebx,eax
  42849e:	mov    eax,DWORD PTR [ebp+0x8]
  4284a1:	mov    eax,DWORD PTR [eax+0x14]
  4284a4:	jmp    0x4284fe
  4284a6:	mov    eax,DWORD PTR [ebp+0xc]
  4284a9:	sub    eax,0x8
  4284ac:	mov    DWORD PTR [ebp-0xc],eax
  4284af:	mov    eax,DWORD PTR [ebp-0xc]
  4284b2:	mov    eax,DWORD PTR [eax+0x28]
  4284b5:	call   0x4280a9
  4284ba:	mov    DWORD PTR [ebp+0x10],eax
  4284bd:	push   DWORD PTR [ebp+0x10]
  4284c0:	mov    edx,DWORD PTR [ebp-0x8]
  4284c3:	call   0x428250
  4284c8:	mov    eax,DWORD PTR [ebp-0x4]
  4284cb:	xor    eax,edi
  4284cd:	add    eax,esi
  4284cf:	cmp    eax,ebx
  4284d1:	jne    0x4284db
  4284d3:	mov    eax,DWORD PTR [ebp-0x8]
  4284d6:	call   0x428137
  4284db:	mov    eax,DWORD PTR [ebp-0x14]
  4284de:	xor    eax,edi
  4284e0:	add    eax,esi
  4284e2:	push   eax
  4284e3:	push   DWORD PTR [ebp-0x10]
  4284e6:	mov    eax,DWORD PTR [ebp-0x8]
  4284e9:	call   0x427e63
  4284ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4284f1:	xor    ecx,edi
  4284f3:	add    ecx,esi
  4284f5:	cmp    eax,ecx
  4284f7:	je     0x42851c
  4284f9:	mov    eax,DWORD PTR [ebp+0xc]
  4284fc:	mov    eax,DWORD PTR [eax]
  4284fe:	mov    DWORD PTR [ebp+0xc],eax
  428501:	mov    eax,DWORD PTR [ebp+0x8]
  428504:	mov    ecx,DWORD PTR [ebp+0xc]
  428507:	add    eax,0x14
  42850a:	cmp    ecx,eax
  42850c:	jne    0x4284a6
  42850e:	mov    eax,DWORD PTR [ebp-0x4]
  428511:	xor    eax,edi
  428513:	add    eax,esi
  428515:	pop    ebx
  428516:	pop    edi
  428517:	pop    esi
  428518:	leave  
  428519:	ret    0xc
  42851c:	mov    eax,DWORD PTR [ebp-0xc]
  42851f:	mov    eax,DWORD PTR [eax+0x18]
  428522:	jmp    0x428515
  428524:	push   ebp
  428525:	mov    ebp,esp
  428527:	mov    eax,DWORD PTR [ebp+0xc]
  42852a:	sub    esp,0x10
  42852d:	cmp    DWORD PTR [ebp+0x8],0x0
  428531:	push   ebx
  428532:	push   esi
  428533:	push   edi
  428534:	je     0x4285e9
  42853a:	test   eax,eax
  42853c:	je     0x4285e9
  428542:	movzx  eax,WORD PTR [eax+0x20]
  428546:	mov    ecx,eax
  428548:	mov    DWORD PTR [ebp-0x10],eax
  42854b:	xor    edx,edx
  42854d:	and    DWORD PTR [ebp-0x8],edx
  428550:	mov    eax,0x8a9a
  428555:	xor    ecx,eax
  428557:	add    ecx,0x3b5c
  42855d:	mov    DWORD PTR [ebp-0xc],ecx
  428560:	and    DWORD PTR [ebp-0x4],0x0
  428564:	xor    ecx,ecx
  428566:	push   0xffffff81
  428568:	pop    edi
  428569:	cmp    cx,WORD PTR [ebp-0xc]
  42856d:	jae    0x4285d3
  42856f:	lea    esi,[edx-0x3b5c]
  428575:	xor    esi,eax
  428577:	movzx  ecx,WORD PTR [ebp-0x4]
  42857b:	mov    ebx,DWORD PTR [ebp+0xc]
  42857e:	lea    ecx,[ebx+ecx*4]
  428581:	cmp    WORD PTR [ecx+0x2],si
  428585:	jne    0x4285be
  428587:	movzx  ecx,WORD PTR [ecx]
  42858a:	mov    edi,0x4e3e
  42858f:	cmp    cx,di
  428592:	jne    0x4285a0
  428594:	mov    ebx,DWORD PTR [ebp+0x8]
  428597:	movzx  edi,dx
  42859a:	cmp    BYTE PTR [edi+ebx*1],0x0
  42859e:	je     0x4285cd
  4285a0:	mov    ebx,DWORD PTR [ebp+0x8]
  4285a3:	movzx  edi,dx
  4285a6:	movsx  di,BYTE PTR [edi+ebx*1]
  4285ab:	mov    ebx,0x3b5c
  4285b0:	sub    di,bx
  4285b3:	xor    di,ax
  4285b6:	cmp    cx,di
  4285b9:	je     0x4285cd
  4285bb:	push   0xffffff83
  4285bd:	pop    edi
  4285be:	inc    DWORD PTR [ebp-0x4]
  4285c1:	mov    cx,WORD PTR [ebp-0xc]
  4285c5:	cmp    WORD PTR [ebp-0x4],cx
  4285c9:	jb     0x428577
  4285cb:	jmp    0x4285d3
  4285cd:	inc    DWORD PTR [ebp-0x8]
  4285d0:	push   0xffffff80
  4285d2:	pop    edi
  4285d3:	mov    esi,DWORD PTR [ebp+0x8]
  4285d6:	movzx  ecx,dx
  4285d9:	cmp    BYTE PTR [ecx+esi*1],0x0
  4285dd:	je     0x4285f2
  4285df:	inc    edx
  4285e0:	cmp    edi,0xffffff83
  4285e3:	jne    0x428560
  4285e9:	xor    eax,eax
  4285eb:	pop    edi
  4285ec:	pop    esi
  4285ed:	pop    ebx
  4285ee:	leave  
  4285ef:	ret    0x8
  4285f2:	mov    ecx,DWORD PTR [ebp-0x8]
  4285f5:	add    ecx,0xffffc4a4
  4285fb:	xor    cx,ax
  4285fe:	xor    eax,eax
  428600:	cmp    cx,WORD PTR [ebp-0x10]
  428604:	sete   al
  428607:	jmp    0x4285eb
  428609:	push   ebp
  42860a:	mov    ebp,esp
  42860c:	sub    esp,0x50
  42860f:	push   edi
  428610:	mov    edi,eax
  428612:	mov    eax,DWORD PTR [edi+0x1a8]
  428618:	cmp    DWORD PTR [eax],0x0
  42861b:	jne    0x428624
  42861d:	xor    eax,eax
  42861f:	jmp    0x428755
  428624:	push   DWORD PTR [ebp+0x8]
  428627:	push   0x2c
  428629:	pop    eax
  42862a:	call   0x4283b9
  42862f:	mov    edx,DWORD PTR [edi+0x1ac]
  428635:	lea    eax,[edi+0x22]
  428638:	mov    DWORD PTR [ebp-0x4c],eax
  42863b:	lea    eax,[edi+0x44]
  42863e:	mov    DWORD PTR [ebp-0x48],eax
  428641:	lea    eax,[edi+0x66]
  428644:	mov    DWORD PTR [ebp-0x44],eax
  428647:	lea    eax,[edi+0x88]
  42864d:	mov    DWORD PTR [ebp-0x40],eax
  428650:	lea    eax,[edi+0xaa]
  428656:	mov    DWORD PTR [ebp-0x3c],eax
  428659:	lea    eax,[edi+0xcc]
  42865f:	mov    DWORD PTR [ebp-0x38],eax
  428662:	lea    eax,[edi+0xee]
  428668:	mov    DWORD PTR [ebp-0x34],eax
  42866b:	lea    eax,[edi+0x110]
  428671:	mov    DWORD PTR [ebp-0x30],eax
  428674:	lea    eax,[edi+0x132]
  42867a:	mov    DWORD PTR [ebp-0x2c],eax
  42867d:	lea    eax,[edi+0x154]
  428683:	push   edi
  428684:	mov    DWORD PTR [ebp-0x50],edi
  428687:	mov    DWORD PTR [ebp-0x28],eax
  42868a:	call   0x428789
  42868f:	push   eax
  428690:	mov    eax,DWORD PTR [edi+0x1a8]
  428696:	push   DWORD PTR [eax]
  428698:	call   0x42842a
  42869d:	mov    DWORD PTR [ebp-0x10],eax
  4286a0:	test   eax,eax
  4286a2:	je     0x428755
  4286a8:	mov    ecx,DWORD PTR [eax+0x3c]
  4286ab:	push   ebx
  4286ac:	push   esi
  4286ad:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4286b1:	add    esi,eax
  4286b3:	mov    edi,DWORD PTR [esi+0x24]
  4286b6:	mov    ecx,DWORD PTR [esi+0x1c]
  4286b9:	mov    edx,DWORD PTR [esi+0x20]
  4286bc:	mov    ebx,DWORD PTR [esi+0x18]
  4286bf:	add    edi,eax
  4286c1:	mov    DWORD PTR [ebp-0x20],edi
  4286c4:	mov    edi,DWORD PTR [esi+0x14]
  4286c7:	add    ecx,eax
  4286c9:	add    edx,eax
  4286cb:	mov    DWORD PTR [ebp-0xc],ecx
  4286ce:	mov    DWORD PTR [ebp-0x1c],edx
  4286d1:	mov    DWORD PTR [ebp-0x8],edi
  4286d4:	cmp    edi,ebx
  4286d6:	ja     0x4286db
  4286d8:	mov    DWORD PTR [ebp-0x8],ebx
  4286db:	xor    ebx,ebx
  4286dd:	mov    DWORD PTR [ebp-0x18],ebx
  4286e0:	cmp    DWORD PTR [ebp-0x8],ebx
  4286e3:	jbe    0x428753
  4286e5:	jmp    0x4286ea
  4286e7:	mov    edx,DWORD PTR [ebp-0x1c]
  4286ea:	mov    edi,DWORD PTR [ebp-0x20]
  4286ed:	movzx  edi,WORD PTR [edi+ebx*2]
  4286f1:	cmp    ebx,DWORD PTR [esi+0x18]
  4286f4:	jae    0x428753
  4286f6:	cmp    edi,DWORD PTR [esi+0x14]
  4286f9:	jae    0x428753
  4286fb:	mov    ebx,DWORD PTR [edx+ebx*4]
  4286fe:	mov    edx,DWORD PTR [ebp+0x8]
  428701:	mov    edi,DWORD PTR [ecx+edi*4]
  428704:	mov    DWORD PTR [ebp-0x4],edx
  428707:	lea    edx,[ebp-0x50]
  42870a:	add    ebx,eax
  42870c:	add    edi,eax
  42870e:	sub    edx,DWORD PTR [ebp+0x8]
  428711:	mov    DWORD PTR [ebp-0x14],0xb
  428718:	mov    DWORD PTR [ebp-0x24],edx
  42871b:	mov    edx,DWORD PTR [ebp-0x4]
  42871e:	cmp    DWORD PTR [edx],0x0
  428721:	jne    0x42873e
  428723:	mov    eax,DWORD PTR [ebp-0x24]
  428726:	push   DWORD PTR [eax+edx*1]
  428729:	push   ebx
  42872a:	call   0x428524
  42872f:	mov    ecx,DWORD PTR [ebp-0xc]
  428732:	test   eax,eax
  428734:	je     0x42873b
  428736:	mov    eax,DWORD PTR [ebp-0x4]
  428739:	mov    DWORD PTR [eax],edi
  42873b:	mov    eax,DWORD PTR [ebp-0x10]
  42873e:	add    DWORD PTR [ebp-0x4],0x4
  428742:	dec    DWORD PTR [ebp-0x14]
  428745:	jne    0x42871b
  428747:	mov    ebx,DWORD PTR [ebp-0x18]
  42874a:	inc    ebx
  42874b:	mov    DWORD PTR [ebp-0x18],ebx
  42874e:	cmp    ebx,DWORD PTR [ebp-0x8]
  428751:	jb     0x4286e7
  428753:	pop    esi
  428754:	pop    ebx
  428755:	pop    edi
  428756:	leave  
  428757:	ret    0x4
  42875a:	push   ebp
  42875b:	mov    ebp,esp
  42875d:	mov    eax,DWORD PTR [ebp+0x8]
  428760:	push   esi
  428761:	push   DWORD PTR [eax+0x1e0]
  428767:	lea    esi,[eax+0x198]
  42876d:	mov    eax,DWORD PTR [ebp+0x8]
  428770:	call   0x428609
  428775:	mov    ecx,DWORD PTR [esi]
  428777:	mov    DWORD PTR [ecx],eax
  428779:	mov    eax,DWORD PTR [esi]
  42877b:	xor    ecx,ecx
  42877d:	cmp    DWORD PTR [eax],ecx
  42877f:	pop    esi
  428780:	setne  cl
  428783:	mov    eax,ecx
  428785:	pop    ebp
  428786:	ret    0x4
  428789:	mov    ecx,DWORD PTR [edi+0x188]
  42878f:	push   ebx
  428790:	jmp    0x4287a5
  428792:	xor    eax,0x8a9a
  428797:	add    eax,0x3b5c
  42879c:	mov    WORD PTR [ecx],ax
  42879f:	add    ecx,0x2
  4287a2:	add    edx,0x2
  4287a5:	movzx  eax,WORD PTR [edx]
  4287a8:	mov    ebx,0x4e3e
  4287ad:	cmp    ax,bx
  4287b0:	jne    0x428792
  4287b2:	xor    eax,eax
  4287b4:	mov    WORD PTR [ecx],ax
  4287b7:	mov    eax,DWORD PTR [edi+0x188]
  4287bd:	pop    ebx
  4287be:	ret    
  4287bf:	push   edi
  4287c0:	mov    edi,eax
  4287c2:	mov    eax,DWORD PTR [esi+0x188]
  4287c8:	shl    edi,0x6
  4287cb:	add    eax,edi
  4287cd:	jmp    0x4287d9
  4287cf:	xor    cl,0x7e
  4287d2:	add    cl,0x3
  4287d5:	mov    BYTE PTR [eax],cl
  4287d7:	inc    eax
  4287d8:	inc    edx
  4287d9:	mov    cl,BYTE PTR [edx]
  4287db:	cmp    cl,0x83
  4287de:	jne    0x4287cf
  4287e0:	mov    BYTE PTR [eax],0x0
  4287e3:	mov    eax,DWORD PTR [esi+0x188]
  4287e9:	add    eax,edi
  4287eb:	pop    edi
  4287ec:	ret    
  4287ed:	push   ebp
  4287ee:	mov    ebp,esp
  4287f0:	sub    esp,0x14
  4287f3:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  4287fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  428801:	mov    eax,DWORD PTR [ebx]
  428803:	mov    DWORD PTR [ebp-0x8],eax
  428806:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42880d:	push   esi
  42880e:	push   edi
  42880f:	mov    DWORD PTR [ebp-0x14],0xead71885
  428816:	mov    edi,DWORD PTR [ebp-0x4]
  428819:	mov    ecx,DWORD PTR [ebp-0x10]
  42881c:	mov    eax,0x75108ae
  428821:	xor    edi,eax
  428823:	mov    edx,0x3272f5
  428828:	xor    ecx,eax
  42882a:	add    edi,edx
  42882c:	add    ecx,edx
  42882e:	imul   edi,ecx
  428831:	jmp    0x428879
  428833:	mov    ecx,DWORD PTR [ebp-0x8]
  428836:	mov    esi,DWORD PTR [ebp-0x4]
  428839:	xor    ecx,eax
  42883b:	xor    esi,eax
  42883d:	add    ecx,edx
  42883f:	add    esi,edx
  428841:	test   esi,ecx
  428843:	mov    esi,DWORD PTR [ebp-0x8]
  428846:	mov    ecx,DWORD PTR [ebp-0x4]
  428849:	je     0x428860
  42884b:	xor    ecx,eax
  42884d:	xor    esi,eax
  42884f:	add    ecx,edx
  428851:	add    esi,edx
  428853:	shr    esi,cl
  428855:	mov    ecx,DWORD PTR [ebp-0x14]
  428858:	xor    ecx,eax
  42885a:	add    ecx,edx
  42885c:	xor    esi,ecx
  42885e:	jmp    0x42886a
  428860:	xor    esi,eax
  428862:	xor    ecx,eax
  428864:	add    esi,edx
  428866:	add    ecx,edx
  428868:	shr    esi,cl
  42886a:	mov    DWORD PTR [ebp-0x8],esi
  42886d:	mov    ecx,DWORD PTR [ebp-0x4]
  428870:	xor    ecx,eax
  428872:	lea    edi,[edi+ecx*1+0x3272f5]
  428879:	mov    ecx,DWORD PTR [ebp-0xc]
  42887c:	mov    esi,DWORD PTR [ebp-0x4]
  42887f:	xor    esi,eax
  428881:	xor    ecx,eax
  428883:	sub    ecx,esi
  428885:	cmp    edi,ecx
  428887:	jbe    0x428833
  428889:	mov    eax,DWORD PTR [ebp-0x8]
  42888c:	pop    edi
  42888d:	mov    DWORD PTR [ebx],eax
  42888f:	mov    eax,DWORD PTR [ebp-0x8]
  428892:	pop    esi
  428893:	leave  
  428894:	ret    
  428895:	push   ebp
  428896:	mov    ebp,esp
  428898:	sub    esp,0x38
  42889b:	push   ebx
  42889c:	mov    ebx,0xf89c85a5
  4288a1:	mov    DWORD PTR [ebp-0x4],ebx
  4288a4:	lea    ecx,[ebx-0x3]
  4288a7:	mov    DWORD PTR [ebp-0x24],ecx
  4288aa:	mov    eax,DWORD PTR [ebp-0x4]
  4288ad:	mov    edx,DWORD PTR [ebp+0x8]
  4288b0:	push   esi
  4288b1:	mov    esi,0x75108ae
  4288b6:	xor    eax,esi
  4288b8:	push   edi
  4288b9:	mov    edi,0x3272f5
  4288be:	add    eax,edi
  4288c0:	cmp    edx,eax
  4288c2:	mov    eax,DWORD PTR [ebp-0x4]
  4288c5:	je     0x428a2a
  4288cb:	mov    edx,DWORD PTR [ebp+0xc]
  4288ce:	xor    eax,esi
  4288d0:	add    eax,edi
  4288d2:	cmp    edx,eax
  4288d4:	je     0x428a27
  4288da:	mov    eax,DWORD PTR [ebp+0x10]
  4288dd:	mov    edx,DWORD PTR [ebp+0xc]
  4288e0:	mov    DWORD PTR [ebp-0x14],eax
  4288e3:	mov    eax,DWORD PTR [ebp+0x8]
  4288e6:	mov    DWORD PTR [ebp-0x18],0xf89c853d
  4288ed:	mov    DWORD PTR [ebp-0xc],eax
  4288f0:	lea    eax,[ebx-0x2]
  4288f3:	mov    DWORD PTR [ebp-0x1c],eax
  4288f6:	mov    DWORD PTR [ebp-0x10],ebx
  4288f9:	mov    DWORD PTR [ebp+0xc],ecx
  4288fc:	mov    DWORD PTR [ebp+0x10],eax
  4288ff:	mov    eax,DWORD PTR [ebp+0xc]
  428902:	xor    eax,esi
  428904:	mov    DWORD PTR [ebp-0x20],edx
  428907:	sub    edx,eax
  428909:	sub    edx,edi
  42890b:	mov    DWORD PTR [ebp+0x8],edx
  42890e:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  428915:	jmp    0x428a17
  42891a:	mov    eax,DWORD PTR [ebp+0xc]
  42891d:	mov    ecx,DWORD PTR [ebp+0xc]
  428920:	xor    eax,esi
  428922:	xor    ecx,esi
  428924:	lea    ecx,[eax+ecx*1+0x64e5ea]
  42892b:	mov    eax,DWORD PTR [ebp+0x8]
  42892e:	xor    edx,edx
  428930:	div    ecx
  428932:	mov    eax,DWORD PTR [ebp+0x10]
  428935:	mov    ecx,DWORD PTR [ebp+0xc]
  428938:	xor    eax,esi
  42893a:	xor    ecx,esi
  42893c:	sub    eax,ecx
  42893e:	cmp    edx,eax
  428940:	jne    0x4289d6
  428946:	mov    eax,DWORD PTR [ebp+0x8]
  428949:	mov    ecx,DWORD PTR [ebp-0xc]
  42894c:	mov    dl,BYTE PTR [eax+ecx*1]
  42894f:	mov    eax,DWORD PTR [ebp-0x10]
  428952:	mov    ecx,DWORD PTR [ebp-0x8]
  428955:	xor    eax,esi
  428957:	xor    ecx,esi
  428959:	add    eax,edi
  42895b:	add    ecx,edi
  42895d:	cmp    eax,ecx
  42895f:	jae    0x4289a7
  428961:	lea    ecx,[eax-0x3272f5]
  428967:	mov    DWORD PTR [ebp-0x4],ecx
  42896a:	mov    ebx,DWORD PTR [ebp-0x4]
  42896d:	xor    ebx,esi
  42896f:	add    ebx,0x7f55d8e3
  428975:	lea    ecx,[ebp+eax*4-0x38]
  428979:	mov    DWORD PTR [ecx],ebx
  42897b:	mov    ebx,DWORD PTR [ecx]
  42897d:	cmp    ebx,0x244ecb80
  428983:	jbe    0x42898d
  428985:	add    DWORD PTR [ecx],0x405fcc1
  42898b:	jmp    0x428993
  42898d:	add    DWORD PTR [ecx],0xfdaf433f
  428993:	mov    ecx,DWORD PTR [ebp-0x8]
  428996:	xor    ecx,esi
  428998:	inc    eax
  428999:	inc    DWORD PTR [ebp-0x4]
  42899c:	add    ecx,edi
  42899e:	cmp    eax,ecx
  4289a0:	jb     0x42896a
  4289a2:	mov    ebx,0xf89c85a5
  4289a7:	cmp    DWORD PTR [ebp-0x14],0x0
  4289ab:	jne    0x4289b5
  4289ad:	xor    dl,0x7e
  4289b0:	add    dl,0x3
  4289b3:	jmp    0x4289cb
  4289b5:	mov    eax,DWORD PTR [ebp-0x18]
  4289b8:	xor    al,0xae
  4289ba:	mov    cl,0xb
  4289bc:	sub    cl,al
  4289be:	add    dl,cl
  4289c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4289c3:	xor    cl,0xae
  4289c6:	sub    cl,0xb
  4289c9:	ror    dl,cl
  4289cb:	xor    eax,eax
  4289cd:	mov    eax,DWORD PTR [ebp+0x8]
  4289d0:	mov    ecx,DWORD PTR [ebp-0xc]
  4289d3:	mov    BYTE PTR [eax+ecx*1],dl
  4289d6:	mov    eax,DWORD PTR [ebp+0x8]
  4289d9:	mov    ecx,DWORD PTR [ebp-0x10]
  4289dc:	sub    eax,edi
  4289de:	xor    eax,esi
  4289e0:	cmp    eax,ecx
  4289e2:	jne    0x428a05
  4289e4:	mov    eax,DWORD PTR [ebp+0x10]
  4289e7:	mov    ecx,DWORD PTR [ebp+0xc]
  4289ea:	xor    eax,esi
  4289ec:	xor    ecx,esi
  4289ee:	sub    eax,ecx
  4289f0:	mov    ecx,DWORD PTR [ebp-0x20]
  4289f3:	sub    eax,edi
  4289f5:	xor    eax,esi
  4289f7:	mov    DWORD PTR [ebp+0x10],eax
  4289fa:	mov    eax,DWORD PTR [ebp+0xc]
  4289fd:	xor    eax,esi
  4289ff:	sub    ecx,eax
  428a01:	sub    ecx,edi
  428a03:	jmp    0x428a14
  428a05:	mov    eax,DWORD PTR [ebp+0xc]
  428a08:	xor    eax,esi
  428a0a:	mov    ecx,0xffcd8d0b
  428a0f:	sub    ecx,eax
  428a11:	add    ecx,DWORD PTR [ebp+0x8]
  428a14:	mov    DWORD PTR [ebp+0x8],ecx
  428a17:	mov    eax,DWORD PTR [ebp+0x10]
  428a1a:	cmp    eax,ebx
  428a1c:	jne    0x42891a
  428a22:	mov    eax,DWORD PTR [ebp-0x24]
  428a25:	jmp    0x428a2a
  428a27:	mov    eax,DWORD PTR [ebp-0x4]
  428a2a:	xor    eax,esi
  428a2c:	add    eax,edi
  428a2e:	pop    edi
  428a2f:	pop    esi
  428a30:	pop    ebx
  428a31:	leave  
  428a32:	ret    0xc
  428a35:	push   ebp
  428a36:	mov    ebp,esp
  428a38:	sub    esp,0x420
  428a3e:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  428a45:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  428a4c:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  428a53:	push   ebx
  428a54:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  428a5b:	mov    eax,DWORD PTR [ebp-0x14]
  428a5e:	push   esi
  428a5f:	mov    esi,0x75108ae
  428a64:	push   edi
  428a65:	xor    eax,esi
  428a67:	mov    edi,0x3272f5
  428a6c:	add    eax,edi
  428a6e:	mov    DWORD PTR [ebp-0x8],eax
  428a71:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428a78:	mov    DWORD PTR [ebp-0x4],0xead71885
  428a7f:	mov    DWORD PTR [ebp-0x10],0x8
  428a86:	mov    ecx,ecx
  428a88:	mov    eax,DWORD PTR [ebp-0xc]
  428a8b:	mov    ecx,DWORD PTR [ebp-0x14]
  428a8e:	xor    eax,esi
  428a90:	xor    ecx,esi
  428a92:	add    eax,edi
  428a94:	add    ecx,edi
  428a96:	imul   eax,ecx
  428a99:	jmp    0x428acc
  428a9b:	mov    eax,DWORD PTR [ebp-0x4]
  428a9e:	sub    eax,edi
  428aa0:	xor    eax,esi
  428aa2:	mov    DWORD PTR [ebp-0x8],eax
  428aa5:	lea    ebx,[ebp-0x8]
  428aa8:	call   0x4287ed
  428aad:	mov    DWORD PTR [ebp-0x8],eax
  428ab0:	mov    eax,DWORD PTR [ebp-0x8]
  428ab3:	mov    ecx,DWORD PTR [ebp-0x4]
  428ab6:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428abd:	mov    eax,DWORD PTR [ebp-0xc]
  428ac0:	mov    ecx,DWORD PTR [ebp-0x4]
  428ac3:	xor    eax,esi
  428ac5:	lea    eax,[eax+ecx*1+0x3272f5]
  428acc:	mov    DWORD PTR [ebp-0x4],eax
  428acf:	mov    eax,DWORD PTR [ebp-0x18]
  428ad2:	mov    ecx,DWORD PTR [ebp-0xc]
  428ad5:	xor    ecx,esi
  428ad7:	xor    eax,esi
  428ad9:	sub    eax,ecx
  428adb:	mov    ecx,DWORD PTR [ebp-0x4]
  428ade:	cmp    ecx,eax
  428ae0:	jbe    0x428a9b
  428ae2:	mov    eax,DWORD PTR [ebp-0x1c]
  428ae5:	xor    eax,esi
  428ae7:	add    eax,edi
  428ae9:	mov    DWORD PTR [ebp-0x8],eax
  428aec:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428af3:	mov    ebx,ebx
  428af5:	jmp    0x428b58
  428af7:	mov    ecx,DWORD PTR [ebp-0x20]
  428afa:	mov    eax,DWORD PTR [ebp-0x8]
  428afd:	xor    ecx,esi
  428aff:	add    ecx,edi
  428b01:	shr    eax,cl
  428b03:	mov    DWORD PTR [ebp-0x4],eax
  428b06:	mov    eax,DWORD PTR [ebp+0x8]
  428b09:	mov    cl,BYTE PTR [eax]
  428b0b:	mov    BYTE PTR [ebp+0xb],cl
  428b0e:	mov    cl,BYTE PTR [ebp+0xb]
  428b11:	mov    edx,DWORD PTR [ebp-0x8]
  428b14:	movzx  ecx,cl
  428b17:	xor    ecx,edx
  428b19:	mov    DWORD PTR [ebp+0x8],ecx
  428b1c:	mov    ecx,DWORD PTR [ebp-0x18]
  428b1f:	mov    edx,DWORD PTR [ebp+0x8]
  428b22:	xor    ecx,esi
  428b24:	add    ecx,edi
  428b26:	and    ecx,edx
  428b28:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428b2f:	mov    edx,DWORD PTR [ebp-0x4]
  428b32:	xor    ecx,edx
  428b34:	mov    DWORD PTR [ebp-0x8],ecx
  428b37:	mov    ecx,DWORD PTR [ebp-0xc]
  428b3a:	xor    ecx,esi
  428b3c:	lea    eax,[eax+ecx*1+0x3272f5]
  428b43:	mov    DWORD PTR [ebp+0x8],eax
  428b46:	mov    eax,DWORD PTR [ebp-0xc]
  428b49:	xor    eax,esi
  428b4b:	mov    ecx,0xffcd8d0b
  428b50:	sub    ecx,eax
  428b52:	add    ecx,DWORD PTR [ebp-0x10]
  428b55:	mov    DWORD PTR [ebp-0x10],ecx
  428b58:	mov    eax,DWORD PTR [ebp-0x14]
  428b5b:	mov    ecx,DWORD PTR [ebp-0x10]
  428b5e:	xor    eax,esi
  428b60:	add    eax,edi
  428b62:	cmp    ecx,eax
  428b64:	jne    0x428af7
  428b66:	mov    eax,DWORD PTR [ebp-0x1c]
  428b69:	mov    ecx,DWORD PTR [ebp-0x8]
  428b6c:	xor    eax,esi
  428b6e:	add    eax,edi
  428b70:	pop    edi
  428b71:	pop    esi
  428b72:	xor    eax,ecx
  428b74:	pop    ebx
  428b75:	leave  
  428b76:	ret    0x4
  428b79:	push   ebp
  428b7a:	mov    ebp,esp
  428b7c:	mov    eax,DWORD PTR [ebp+0x1c]
  428b7f:	mov    ecx,DWORD PTR [ebp+0x8]
  428b82:	mov    edx,DWORD PTR [ebp+0x10]
  428b85:	mov    eax,DWORD PTR [eax+0x190]
  428b8b:	mov    eax,DWORD PTR [eax]
  428b8d:	sub    esp,0x64
  428b90:	push   ebx
  428b91:	push   esi
  428b92:	push   edi
  428b93:	mov    edi,0x75108ae
  428b98:	xor    ecx,edi
  428b9a:	mov    ebx,0x3272f5
  428b9f:	add    ecx,ebx
  428ba1:	cmp    ecx,edx
  428ba3:	jne    0x428bb4
  428ba5:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  428baf:	jmp    0x4290b0
  428bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  428bb7:	mov    esi,DWORD PTR [ebp+0x14]
  428bba:	mov    edx,DWORD PTR [esi]
  428bbc:	xor    ecx,edi
  428bbe:	add    ecx,ebx
  428bc0:	cmp    edx,ecx
  428bc2:	je     0x42906b
  428bc8:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bcb:	mov    DWORD PTR [ebp-0x1c],eax
  428bce:	mov    DWORD PTR [ebp+0x1c],ecx
  428bd1:	mov    ecx,DWORD PTR [ebp+0x18]
  428bd4:	mov    eax,DWORD PTR [esi]
  428bd6:	mov    DWORD PTR [ebp-0x20],eax
  428bd9:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428be0:	mov    edx,0xf89c85a2
  428be5:	mov    DWORD PTR [ebp-0x8],edx
  428be8:	mov    eax,DWORD PTR [ebp+0x1c]
  428beb:	mov    DWORD PTR [ebp+0x1c],eax
  428bee:	mov    eax,DWORD PTR [ebp+0x1c]
  428bf1:	mov    eax,DWORD PTR [eax+0x190]
  428bf7:	mov    eax,DWORD PTR [eax]
  428bf9:	mov    DWORD PTR [ebp-0x24],ecx
  428bfc:	mov    ecx,DWORD PTR [ebp+0x1c]
  428bff:	mov    ecx,DWORD PTR [ecx+0x190]
  428c05:	mov    ecx,DWORD PTR [ecx]
  428c07:	add    ecx,DWORD PTR [eax+0x3c]
  428c0a:	mov    DWORD PTR [ebp+0x10],ecx
  428c0d:	mov    eax,DWORD PTR [ebp+0x8]
  428c10:	xor    eax,edi
  428c12:	add    eax,ebx
  428c14:	mov    DWORD PTR [ebp-0x4],eax
  428c17:	mov    eax,DWORD PTR [ebp+0x8]
  428c1a:	xor    eax,edi
  428c1c:	add    eax,ebx
  428c1e:	mov    DWORD PTR [ebp+0x18],eax
  428c21:	mov    eax,DWORD PTR [ebp+0x10]
  428c24:	mov    eax,DWORD PTR [eax+0x50]
  428c27:	sub    eax,0xc
  428c2a:	mov    DWORD PTR [ebp-0x28],eax
  428c2d:	mov    eax,DWORD PTR [ebp+0x10]
  428c30:	mov    eax,DWORD PTR [eax+0x38]
  428c33:	mov    ecx,DWORD PTR [ebp+0x10]
  428c36:	dec    eax
  428c37:	test   DWORD PTR [ecx+0x54],eax
  428c3a:	mov    eax,DWORD PTR [ebp+0x10]
  428c3d:	je     0x428c57
  428c3f:	mov    eax,DWORD PTR [eax+0x38]
  428c42:	mov    ecx,DWORD PTR [ebp+0x10]
  428c45:	mov    ecx,DWORD PTR [ecx+0x54]
  428c48:	dec    eax
  428c49:	not    eax
  428c4b:	and    ecx,eax
  428c4d:	mov    eax,DWORD PTR [ebp+0x10]
  428c50:	mov    eax,DWORD PTR [eax+0x38]
  428c53:	add    eax,ecx
  428c55:	jmp    0x428c5a
  428c57:	mov    eax,DWORD PTR [eax+0x54]
  428c5a:	mov    DWORD PTR [ebp+0x1c],eax
  428c5d:	mov    eax,DWORD PTR [ebp+0x8]
  428c60:	xor    eax,edi
  428c62:	add    eax,ebx
  428c64:	mov    DWORD PTR [ebp+0x18],eax
  428c67:	mov    eax,DWORD PTR [ebp+0x8]
  428c6a:	xor    eax,edi
  428c6c:	add    eax,ebx
  428c6e:	mov    DWORD PTR [ebp+0x18],eax
  428c71:	mov    eax,DWORD PTR [ebp+0x8]
  428c74:	mov    ecx,DWORD PTR [ebp-0x24]
  428c77:	xor    eax,edi
  428c79:	add    eax,ebx
  428c7b:	mov    DWORD PTR [ecx],eax
  428c7d:	mov    DWORD PTR [ebp+0x18],edx
  428c80:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  428c87:	mov    DWORD PTR [ebp+0x18],0xf89c85a0
  428c8e:	mov    DWORD PTR [ebp+0x18],0xf89c85a1
  428c95:	mov    eax,DWORD PTR [ebp-0x8]
  428c98:	mov    ecx,DWORD PTR [ebp+0x1c]
  428c9b:	xor    eax,edi
  428c9d:	add    eax,ebx
  428c9f:	imul   eax,ecx
  428ca2:	mov    ecx,DWORD PTR [ebp+0x8]
  428ca5:	mov    edx,DWORD PTR [ebp-0x28]
  428ca8:	xor    ecx,edi
  428caa:	lea    ecx,[ecx+edx*1+0x3272f5]
  428cb1:	cmp    eax,ecx
  428cb3:	jae    0x429064
  428cb9:	mov    eax,DWORD PTR [ebp+0x8]
  428cbc:	xor    eax,edi
  428cbe:	add    eax,ebx
  428cc0:	mov    DWORD PTR [ebp+0x18],eax
  428cc3:	mov    eax,DWORD PTR [ebp+0x1c]
  428cc6:	add    eax,DWORD PTR [ebp-0x1c]
  428cc9:	mov    DWORD PTR [ebp-0x4],eax
  428ccc:	push   DWORD PTR [ebp-0x4]
  428ccf:	mov    esi,DWORD PTR [ebp-0x1c]
  428cd2:	mov    ecx,DWORD PTR [ebp+0x10]
  428cd5:	call   0x427e25
  428cda:	mov    DWORD PTR [ebp+0xc],eax
  428cdd:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428ce4:	mov    eax,DWORD PTR [ebp-0x18]
  428ce7:	xor    eax,edi
  428ce9:	lea    ecx,[ebp-0x40]
  428cec:	add    eax,ebx
  428cee:	push   ecx
  428cef:	call   0x4283b9
  428cf4:	mov    eax,DWORD PTR [ebp+0xc]
  428cf7:	test   eax,eax
  428cf9:	je     0x428d49
  428cfb:	mov    eax,DWORD PTR [ebp-0x18]
  428cfe:	xor    eax,edi
  428d00:	add    eax,ebx
  428d02:	push   eax
  428d03:	push   DWORD PTR [ebp+0xc]
  428d06:	lea    eax,[ebp-0x40]
  428d09:	push   eax
  428d0a:	call   0x4282af
  428d0f:	mov    eax,DWORD PTR [ebp-0x4]
  428d12:	mov    DWORD PTR [ebp-0x18],eax
  428d15:	mov    eax,DWORD PTR [ebp-0x18]
  428d18:	mov    ecx,DWORD PTR [ebp-0x1c]
  428d1b:	sub    eax,ecx
  428d1d:	mov    DWORD PTR [ebp-0x18],eax
  428d20:	mov    eax,DWORD PTR [ebp+0xc]
  428d23:	mov    ecx,DWORD PTR [ebp+0xc]
  428d26:	mov    eax,DWORD PTR [eax+0x10]
  428d29:	add    eax,DWORD PTR [ecx+0xc]
  428d2c:	mov    ecx,DWORD PTR [ebp-0x18]
  428d2f:	cmp    ecx,eax
  428d31:	jb     0x428d49
  428d33:	mov    eax,DWORD PTR [ebp+0xc]
  428d36:	mov    eax,DWORD PTR [eax+0xc]
  428d39:	mov    ecx,DWORD PTR [ebp+0xc]
  428d3c:	add    eax,DWORD PTR [ecx+0x8]
  428d3f:	mov    ecx,DWORD PTR [ebp-0x18]
  428d42:	sub    eax,ecx
  428d44:	jmp    0x429037
  428d49:	push   0xc
  428d4b:	push   DWORD PTR [ebp-0x4]
  428d4e:	lea    eax,[ebp-0x4c]
  428d51:	push   eax
  428d52:	call   0x4282af
  428d57:	mov    eax,0xf89c85a5
  428d5c:	mov    DWORD PTR [ebp-0x2c],eax
  428d5f:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  428d66:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  428d6d:	mov    DWORD PTR [ebp-0x38],0xf89c85a0
  428d74:	lea    ecx,[ebp-0x2c]
  428d77:	mov    DWORD PTR [ebp-0xc],ecx
  428d7a:	lea    ecx,[ebp-0x30]
  428d7d:	mov    DWORD PTR [ebp-0x10],ecx
  428d80:	lea    ecx,[ebp-0x34]
  428d83:	mov    DWORD PTR [ebp+0xc],ecx
  428d86:	lea    ecx,[ebp-0x38]
  428d89:	mov    DWORD PTR [ebp-0x14],ecx
  428d8c:	mov    ecx,DWORD PTR [ebp+0x8]
  428d8f:	xor    ecx,edi
  428d91:	add    ecx,ebx
  428d93:	mov    DWORD PTR [ebp-0x18],ecx
  428d96:	jmp    0x428f92
  428d9b:	cmp    eax,0xf89c85a3
  428da0:	je     0x428fa4
  428da6:	mov    ecx,DWORD PTR [ebp-0x8]
  428da9:	xor    ecx,edi
  428dab:	mov    esi,eax
  428dad:	add    ecx,ebx
  428daf:	mov    DWORD PTR [ebp+0x18],ecx
  428db2:	mov    eax,DWORD PTR [ebp-0x18]
  428db5:	xor    esi,edi
  428db7:	lea    eax,[eax+esi*1+0x3272f5]
  428dbe:	mov    DWORD PTR [ebp-0x18],eax
  428dc1:	mov    eax,DWORD PTR [ebp-0x8]
  428dc4:	mov    ecx,DWORD PTR [ebp-0x18]
  428dc7:	xor    eax,edi
  428dc9:	add    eax,ebx
  428dcb:	cmp    ecx,eax
  428dcd:	jne    0x428de2
  428dcf:	mov    eax,DWORD PTR [ebp+0x8]
  428dd2:	xor    eax,edi
  428dd4:	add    eax,ebx
  428dd6:	push   eax
  428dd7:	push   0xc
  428dd9:	lea    eax,[ebp-0x4c]
  428ddc:	push   eax
  428ddd:	call   0x428895
  428de2:	mov    eax,DWORD PTR [ebp-0xc]
  428de5:	mov    eax,DWORD PTR [eax]
  428de7:	xor    eax,edi
  428de9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428df0:	mov    ecx,DWORD PTR [ebp+0x8]
  428df3:	xor    ecx,edi
  428df5:	movzx  eax,al
  428df8:	add    ecx,ebx
  428dfa:	cmp    eax,ecx
  428dfc:	je     0x428f7a
  428e02:	mov    eax,DWORD PTR [ebp-0x10]
  428e05:	mov    eax,DWORD PTR [eax]
  428e07:	xor    eax,edi
  428e09:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e10:	mov    ecx,DWORD PTR [ebp+0x8]
  428e13:	xor    ecx,edi
  428e15:	movzx  eax,al
  428e18:	add    ecx,ebx
  428e1a:	cmp    eax,ecx
  428e1c:	je     0x428f7a
  428e22:	mov    eax,DWORD PTR [ebp+0xc]
  428e25:	mov    eax,DWORD PTR [eax]
  428e27:	xor    eax,edi
  428e29:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e30:	mov    ecx,DWORD PTR [ebp+0x8]
  428e33:	xor    ecx,edi
  428e35:	movzx  eax,al
  428e38:	add    ecx,ebx
  428e3a:	cmp    eax,ecx
  428e3c:	je     0x428f7a
  428e42:	mov    eax,DWORD PTR [ebp-0x14]
  428e45:	mov    eax,DWORD PTR [eax]
  428e47:	xor    eax,edi
  428e49:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e50:	mov    ecx,DWORD PTR [ebp+0x8]
  428e53:	xor    ecx,edi
  428e55:	movzx  eax,al
  428e58:	add    ecx,ebx
  428e5a:	cmp    eax,ecx
  428e5c:	je     0x428f7a
  428e62:	mov    eax,DWORD PTR [ebp-0x10]
  428e65:	mov    eax,DWORD PTR [eax]
  428e67:	xor    eax,edi
  428e69:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428e70:	mov    ecx,DWORD PTR [ebp-0xc]
  428e73:	mov    ecx,DWORD PTR [ecx]
  428e75:	xor    ecx,edi
  428e77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e7e:	xor    al,cl
  428e80:	mov    ecx,DWORD PTR [ebp+0xc]
  428e83:	mov    ecx,DWORD PTR [ecx]
  428e85:	xor    ecx,edi
  428e87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428e8e:	or     al,cl
  428e90:	mov    ecx,DWORD PTR [ebp-0xc]
  428e93:	mov    ecx,DWORD PTR [ecx]
  428e95:	xor    ecx,edi
  428e97:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428e9e:	cmp    cl,al
  428ea0:	jne    0x428f7a
  428ea6:	mov    eax,DWORD PTR [ebp+0xc]
  428ea9:	mov    eax,DWORD PTR [eax]
  428eab:	xor    eax,edi
  428ead:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428eb4:	mov    ecx,DWORD PTR [ebp-0x10]
  428eb7:	mov    ecx,DWORD PTR [ecx]
  428eb9:	xor    ecx,edi
  428ebb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ec2:	xor    al,cl
  428ec4:	mov    ecx,DWORD PTR [ebp-0x14]
  428ec7:	mov    ecx,DWORD PTR [ecx]
  428ec9:	xor    ecx,edi
  428ecb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428ed2:	or     al,cl
  428ed4:	mov    ecx,DWORD PTR [ebp-0x10]
  428ed7:	mov    ecx,DWORD PTR [ecx]
  428ed9:	xor    ecx,edi
  428edb:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428ee2:	cmp    cl,al
  428ee4:	jne    0x428f7a
  428eea:	mov    eax,DWORD PTR [ebp-0x14]
  428eed:	mov    eax,DWORD PTR [eax]
  428eef:	xor    eax,edi
  428ef1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428ef8:	mov    ecx,DWORD PTR [ebp+0xc]
  428efb:	mov    ecx,DWORD PTR [ecx]
  428efd:	xor    ecx,edi
  428eff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f06:	xor    al,cl
  428f08:	mov    ecx,DWORD PTR [ebp-0xc]
  428f0b:	mov    ecx,DWORD PTR [ecx]
  428f0d:	xor    ecx,edi
  428f0f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f16:	or     al,cl
  428f18:	mov    ecx,DWORD PTR [ebp+0xc]
  428f1b:	mov    ecx,DWORD PTR [ecx]
  428f1d:	xor    ecx,edi
  428f1f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f26:	cmp    cl,al
  428f28:	jne    0x428f7a
  428f2a:	mov    eax,DWORD PTR [ebp-0x14]
  428f2d:	mov    eax,DWORD PTR [eax]
  428f2f:	xor    eax,edi
  428f31:	mov    al,BYTE PTR [ebp+eax*1+0x3272a9]
  428f38:	mov    ecx,DWORD PTR [ebp-0xc]
  428f3b:	mov    ecx,DWORD PTR [ecx]
  428f3d:	xor    ecx,edi
  428f3f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f46:	xor    al,cl
  428f48:	mov    ecx,DWORD PTR [ebp-0x10]
  428f4b:	mov    ecx,DWORD PTR [ecx]
  428f4d:	xor    ecx,edi
  428f4f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428f56:	or     al,cl
  428f58:	mov    ecx,DWORD PTR [ebp-0x14]
  428f5b:	mov    ecx,DWORD PTR [ecx]
  428f5d:	xor    ecx,edi
  428f5f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ad]
  428f66:	cmp    cl,al
  428f68:	jne    0x428f7a
  428f6a:	lea    eax,[ebp-0x4c]
  428f6d:	push   eax
  428f6e:	call   0x428a35
  428f73:	mov    ecx,DWORD PTR [ebp-0x44]
  428f76:	cmp    eax,ecx
  428f78:	je     0x428f84
  428f7a:	mov    eax,DWORD PTR [ebp+0x8]
  428f7d:	xor    eax,edi
  428f7f:	add    eax,ebx
  428f81:	mov    DWORD PTR [ebp+0x18],eax
  428f84:	mov    eax,DWORD PTR [ebp-0x8]
  428f87:	xor    eax,edi
  428f89:	lea    eax,[eax+esi*1+0x3272f5]
  428f90:	xor    eax,edi
  428f92:	mov    ecx,DWORD PTR [ebp+0x8]
  428f95:	mov    edx,DWORD PTR [ebp+0x18]
  428f98:	xor    ecx,edi
  428f9a:	add    ecx,ebx
  428f9c:	cmp    edx,ecx
  428f9e:	je     0x428d9b
  428fa4:	mov    eax,DWORD PTR [ebp+0x8]
  428fa7:	mov    ecx,DWORD PTR [ebp+0x18]
  428faa:	xor    eax,edi
  428fac:	add    eax,ebx
  428fae:	cmp    ecx,eax
  428fb0:	jne    0x428fc3
  428fb2:	mov    eax,DWORD PTR [ebp-0x8]
  428fb5:	mov    ecx,DWORD PTR [ebp+0x1c]
  428fb8:	xor    eax,edi
  428fba:	lea    eax,[eax+ecx*1+0x3272f5]
  428fc1:	jmp    0x42903a
  428fc3:	push   0x18
  428fc5:	push   DWORD PTR [ebp-0x4]
  428fc8:	lea    eax,[ebp-0x64]
  428fcb:	push   eax
  428fcc:	call   0x4282af
  428fd1:	mov    eax,DWORD PTR [ebp+0x8]
  428fd4:	mov    ecx,DWORD PTR [ebp-0x18]
  428fd7:	xor    eax,edi
  428fd9:	add    eax,ebx
  428fdb:	cmp    eax,ecx
  428fdd:	je     0x428ff2
  428fdf:	mov    eax,DWORD PTR [ebp+0x8]
  428fe2:	xor    eax,edi
  428fe4:	add    eax,ebx
  428fe6:	push   eax
  428fe7:	push   0x18
  428fe9:	lea    eax,[ebp-0x64]
  428fec:	push   eax
  428fed:	call   0x428895
  428ff2:	mov    eax,DWORD PTR [ebp-0x4]
  428ff5:	add    eax,0x18
  428ff8:	mov    DWORD PTR [ebp+0x18],eax
  428ffb:	push   DWORD PTR [ebp-0x50]
  428ffe:	push   DWORD PTR [ebp+0x18]
  429001:	mov    eax,DWORD PTR [ebp-0x54]
  429004:	add    eax,DWORD PTR [ebp-0x20]
  429007:	push   eax
  429008:	call   0x4282af
  42900d:	mov    eax,DWORD PTR [ebp+0x8]
  429010:	mov    ecx,DWORD PTR [ebp-0x18]
  429013:	xor    eax,edi
  429015:	add    eax,ebx
  429017:	cmp    eax,ecx
  429019:	je     0x42902c
  42901b:	push   0x0
  42901d:	push   DWORD PTR [ebp-0x50]
  429020:	mov    eax,DWORD PTR [ebp-0x54]
  429023:	add    eax,DWORD PTR [ebp-0x20]
  429026:	push   eax
  429027:	call   0x428895
  42902c:	mov    eax,DWORD PTR [ebp-0x24]
  42902f:	mov    ecx,DWORD PTR [ebp-0x50]
  429032:	add    DWORD PTR [eax],ecx
  429034:	mov    eax,DWORD PTR [ebp-0x50]
  429037:	add    eax,DWORD PTR [ebp+0x1c]
  42903a:	mov    DWORD PTR [ebp+0x1c],eax
  42903d:	mov    eax,DWORD PTR [ebp-0x8]
  429040:	mov    ecx,DWORD PTR [ebp+0x1c]
  429043:	xor    eax,edi
  429045:	add    eax,ebx
  429047:	imul   eax,ecx
  42904a:	mov    ecx,DWORD PTR [ebp+0x8]
  42904d:	mov    edx,DWORD PTR [ebp-0x28]
  429050:	xor    ecx,edi
  429052:	lea    ecx,[ecx+edx*1+0x3272f5]
  429059:	cmp    eax,ecx
  42905b:	jb     0x428cb9
  429061:	mov    esi,DWORD PTR [ebp+0x14]
  429064:	mov    eax,DWORD PTR [ebp-0x20]
  429067:	mov    DWORD PTR [esi],eax
  429069:	jmp    0x4290b0
  42906b:	mov    ecx,DWORD PTR [ebp+0x8]
  42906e:	mov    edx,DWORD PTR [ebp+0xc]
  429071:	xor    ecx,edi
  429073:	xor    edx,edi
  429075:	add    ecx,ebx
  429077:	add    edx,ebx
  429079:	cmp    ecx,edx
  42907b:	jne    0x42908f
  42907d:	mov    eax,ds:0x7f642ddc
  429082:	imul   eax,eax,0x9f15fccf
  429088:	mov    ds:0x7f642ddc,eax
  42908d:	jmp    0x4290b0
  42908f:	mov    ecx,DWORD PTR [ebp+0x8]
  429092:	xor    ecx,edi
  429094:	add    ecx,ebx
  429096:	cmp    eax,ecx
  429098:	je     0x4290a6
  42909a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  4290a4:	jmp    0x4290b0
  4290a6:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  4290b0:	pop    edi
  4290b1:	pop    esi
  4290b2:	pop    ebx
  4290b3:	leave  
  4290b4:	ret    0x18
  4290b7:	push   ebp
  4290b8:	mov    ebp,esp
  4290ba:	and    esp,0xfffffff8
  4290bd:	mov    eax,DWORD PTR [ebp+0x20]
  4290c0:	sub    esp,0x14
  4290c3:	push   ebx
  4290c4:	mov    ebx,DWORD PTR [ebp+0x14]
  4290c7:	push   esi
  4290c8:	push   edi
  4290c9:	cmp    eax,0xf89c85a5
  4290ce:	jne    0x4290da
  4290d0:	push   0xf89c85a2
  4290d5:	jmp    0x42920c
  4290da:	mov    eax,DWORD PTR [ebp+0x20]
  4290dd:	cmp    eax,0xf89c85a2
  4290e2:	jne    0x4290ee
  4290e4:	push   0xf89c85a3
  4290e9:	jmp    0x42920c
  4290ee:	mov    eax,DWORD PTR [ebp+0x20]
  4290f1:	cmp    eax,0xf89c85a3
  4290f6:	jne    0x429102
  4290f8:	push   0xf89c85a0
  4290fd:	jmp    0x42920c
  429102:	mov    eax,DWORD PTR [ebp+0x20]
  429105:	cmp    eax,0xf89c85a0
  42910a:	jne    0x429116
  42910c:	push   0xf89c85a1
  429111:	jmp    0x42920c
  429116:	mov    ecx,DWORD PTR [ebp+0x20]
  429119:	mov    eax,0xf89c85bc
  42911e:	cmp    ecx,eax
  429120:	jne    0x4291dc
  429126:	mov    eax,DWORD PTR [ebp+0x10]
  429129:	mov    DWORD PTR [esp+0xc],eax
  42912d:	mov    eax,DWORD PTR [ebp+0x18]
  429130:	mov    DWORD PTR [esp+0x14],eax
  429134:	mov    eax,DWORD PTR [ebp+0xc]
  429137:	mov    DWORD PTR [esp+0x18],eax
  42913b:	mov    eax,DWORD PTR [ebp+0x8]
  42913e:	mov    DWORD PTR [esp+0x10],eax
  429142:	mov    eax,DWORD PTR [esp+0x10]
  429146:	mov    ecx,DWORD PTR [esp+0x14]
  42914a:	mov    edi,0x75108ae
  42914f:	xor    eax,edi
  429151:	mov    esi,0x3272f5
  429156:	add    eax,esi
  429158:	mov    DWORD PTR [ecx],eax
  42915a:	mov    eax,DWORD PTR [esp+0xc]
  42915e:	mov    eax,DWORD PTR [eax+0x194]
  429164:	mov    ecx,DWORD PTR [eax]
  429166:	mov    eax,DWORD PTR [esp+0xc]
  42916a:	mov    eax,DWORD PTR [eax+0x194]
  429170:	mov    eax,DWORD PTR [eax]
  429172:	add    eax,DWORD PTR [ecx+0x3c]
  429175:	mov    ecx,DWORD PTR [esp+0xc]
  429179:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42917f:	mov    ecx,DWORD PTR [ecx+0x14]
  429182:	push   0x4
  429184:	push   0x3000
  429189:	push   DWORD PTR [eax+0x50]
  42918c:	push   0x0
  42918e:	call   ecx
  429190:	mov    DWORD PTR [ebx],eax
  429192:	mov    eax,DWORD PTR [esp+0x10]
  429196:	push   DWORD PTR [esp+0xc]
  42919a:	xor    eax,edi
  42919c:	add    eax,esi
  42919e:	mov    DWORD PTR [esp+0x20],eax
  4291a2:	lea    eax,[esp+0x20]
  4291a6:	push   eax
  4291a7:	push   ebx
  4291a8:	push   DWORD PTR [esp+0x20]
  4291ac:	push   DWORD PTR [esp+0x28]
  4291b0:	push   DWORD PTR [esp+0x24]
  4291b4:	call   0x428b79
  4291b9:	mov    eax,DWORD PTR [esp+0x10]
  4291bd:	mov    ecx,DWORD PTR [ebx]
  4291bf:	xor    eax,edi
  4291c1:	add    eax,esi
  4291c3:	cmp    ecx,eax
  4291c5:	je     0x429223
  4291c7:	mov    eax,DWORD PTR [esp+0x18]
  4291cb:	mov    ecx,DWORD PTR [esp+0x14]
  4291cf:	xor    eax,edi
  4291d1:	add    eax,esi
  4291d3:	imul   eax,DWORD PTR [esp+0x1c]
  4291d8:	mov    DWORD PTR [ecx],eax
  4291da:	jmp    0x429223
  4291dc:	mov    ecx,DWORD PTR [ebp+0x20]
  4291df:	cmp    ecx,0xf89c85a1
  4291e5:	jne    0x4291ee
  4291e7:	push   0xf89c85be
  4291ec:	jmp    0x42920c
  4291ee:	mov    ecx,DWORD PTR [ebp+0x20]
  4291f1:	cmp    ecx,0xf89c85be
  4291f7:	jne    0x429200
  4291f9:	push   0xf89c85bf
  4291fe:	jmp    0x42920c
  429200:	mov    ecx,DWORD PTR [ebp+0x20]
  429203:	cmp    ecx,0xf89c85bf
  429209:	jne    0x429223
  42920b:	push   eax
  42920c:	push   DWORD PTR [ebp+0x1c]
  42920f:	push   DWORD PTR [ebp+0x18]
  429212:	push   ebx
  429213:	push   DWORD PTR [ebp+0x10]
  429216:	push   DWORD PTR [ebp+0xc]
  429219:	push   DWORD PTR [ebp+0x8]
  42921c:	call   0x4290b7
  429221:	mov    DWORD PTR [ebx],eax
  429223:	mov    eax,DWORD PTR [ebx]
  429225:	pop    edi
  429226:	pop    esi
  429227:	pop    ebx
  429228:	mov    esp,ebp
  42922a:	pop    ebp
  42922b:	ret    0x1c
  42922e:	push   ebp
  42922f:	mov    ebp,esp
  429231:	sub    esp,0xc
  429234:	mov    eax,0xf89c85a5
  429239:	mov    DWORD PTR [ebp-0x8],eax
  42923c:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  429243:	mov    ecx,DWORD PTR [ebp-0x8]
  429246:	xor    ecx,0x75108ae
  42924c:	add    ecx,0x3272f5
  429252:	mov    DWORD PTR [ebp-0x4],ecx
  429255:	mov    ecx,DWORD PTR [ebp+0xc]
  429258:	push   eax
  429259:	mov    DWORD PTR [ebp+0xc],ecx
  42925c:	push   DWORD PTR [ebp+0xc]
  42925f:	lea    eax,[ebp-0x4]
  429262:	push   DWORD PTR [ebp+0x8]
  429265:	push   eax
  429266:	push   DWORD PTR [ebp+0xc]
  429269:	push   DWORD PTR [ebp-0xc]
  42926c:	push   DWORD PTR [ebp-0x8]
  42926f:	call   0x4290b7
  429274:	mov    DWORD PTR [ebp-0x4],eax
  429277:	mov    eax,DWORD PTR [ebp-0x4]
  42927a:	leave  
  42927b:	ret    0x8
