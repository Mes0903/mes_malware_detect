
43a02dab7a0673eba0ca14fe00ea2916fe6d06d261b07166ecb0256cb0862cad.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    DWORD PTR [ecx],0x64026304
64001006:	jmp    0x6401351b
6400100b:	int3   
6400100c:	int3   
6400100d:	int3   
6400100e:	int3   
6400100f:	int3   
64001010:	push   esi
64001011:	mov    esi,ecx
64001013:	mov    DWORD PTR [esi],0x64026304
64001019:	call   0x6401351b
6400101e:	test   BYTE PTR [esp+0x8],0x1
64001023:	je     0x6400102e
64001025:	push   esi
64001026:	call   0x64013402
6400102b:	add    esp,0x4
6400102e:	mov    eax,esi
64001030:	pop    esi
64001031:	ret    0x4
64001034:	int3   
64001035:	int3   
64001036:	int3   
64001037:	int3   
64001038:	int3   
64001039:	int3   
6400103a:	int3   
6400103b:	int3   
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	mov    eax,DWORD PTR [esp+0x4]
64001044:	push   0x6402c58c
64001049:	lea    ecx,[esp+0x8]
6400104d:	push   ecx
6400104e:	mov    DWORD PTR [esp+0xc],eax
64001052:	call   0x6401384b
64001057:	int3   
64001058:	int3   
64001059:	int3   
6400105a:	int3   
6400105b:	int3   
6400105c:	int3   
6400105d:	int3   
6400105e:	int3   
6400105f:	int3   
64001060:	push   ecx
64001061:	push   ebx
64001062:	push   esi
64001063:	push   edi
64001064:	push   0x2710
64001069:	call   DWORD PTR ds:0x64026050
6400106f:	mov    esi,DWORD PTR [esp+0x14]
64001073:	mov    ebx,DWORD PTR ds:0x64026088
64001079:	mov    DWORD PTR [esp+0xc],0x0
64001081:	xor    edi,edi
64001083:	push   0x0
64001085:	lea    eax,[esp+0x18]
64001089:	push   eax
6400108a:	push   0x4
6400108c:	lea    ecx,[esp+0x18]
64001090:	push   ecx
64001091:	push   esi
64001092:	call   ebx
64001094:	test   eax,eax
64001096:	je     0x640010a0
64001098:	add    edi,0x1
6400109b:	cmp    edi,0xa
6400109e:	jne    0x64001083
640010a0:	test   esi,esi
640010a2:	je     0x640010ba
640010a4:	call   DWORD PTR ds:0x64026044
640010aa:	push   esi
640010ab:	mov    edi,eax
640010ad:	call   DWORD PTR ds:0x64026040
640010b3:	push   edi
640010b4:	call   DWORD PTR ds:0x64026060
640010ba:	pop    edi
640010bb:	pop    esi
640010bc:	xor    eax,eax
640010be:	pop    ebx
640010bf:	pop    ecx
640010c0:	ret    0x4
640010c3:	int3   
640010c4:	int3   
640010c5:	int3   
640010c6:	int3   
640010c7:	int3   
640010c8:	int3   
640010c9:	int3   
640010ca:	int3   
640010cb:	int3   
640010cc:	int3   
640010cd:	int3   
640010ce:	int3   
640010cf:	int3   
640010d0:	sub    esp,0x14
640010d3:	push   ebx
640010d4:	mov    ebx,DWORD PTR ds:0x64026048
640010da:	push   esi
640010db:	mov    esi,DWORD PTR [esp+0x20]
640010df:	push   edi
640010e0:	mov    edi,DWORD PTR [esi+0xc]
640010e3:	push   0x2
640010e5:	push   0x0
640010e7:	push   0x0
640010e9:	lea    eax,[esp+0x18]
640010ed:	push   eax
640010ee:	mov    DWORD PTR [esp+0x1c],0x0
640010f6:	call   ebx
640010f8:	push   eax
640010f9:	push   edi
640010fa:	call   ebx
640010fc:	push   eax
640010fd:	call   DWORD PTR ds:0x6402607c
64001103:	test   eax,eax
64001105:	je     0x64001199
6400110b:	mov    ecx,DWORD PTR [esp+0xc]
6400110f:	push   0x0
64001111:	push   0x0
64001113:	push   ecx
64001114:	push   0x64001060
64001119:	push   0x0
6400111b:	push   0x0
6400111d:	call   DWORD PTR ds:0x64026070
64001123:	push   0x0
64001125:	lea    edx,[esp+0x18]
64001129:	push   edx
6400112a:	push   0x4
6400112c:	mov    edi,eax
6400112e:	mov    eax,DWORD PTR [esi+0x8]
64001131:	lea    ecx,[esp+0x30]
64001135:	push   ecx
64001136:	push   eax
64001137:	mov    DWORD PTR [esp+0x24],edi
6400113b:	mov    DWORD PTR [esp+0x38],0x0
64001143:	call   DWORD PTR ds:0x6402608c
64001149:	test   eax,eax
6400114b:	je     0x6400117f
6400114d:	cmp    DWORD PTR [esp+0x14],0x4
64001152:	jne    0x6400117f
64001154:	mov    edx,DWORD PTR [esp+0x24]
64001158:	mov    eax,DWORD PTR [esi+0x4]
6400115b:	push   0x0
6400115d:	lea    ecx,[esp+0x20]
64001161:	push   ecx
64001162:	mov    DWORD PTR [esp+0x20],edx
64001166:	push   0x4
64001168:	lea    edx,[esp+0x24]
6400116c:	push   edx
6400116d:	push   eax
6400116e:	call   DWORD PTR ds:0x64026088
64001174:	lea    ecx,[esp+0x10]
64001178:	call   0x64001680
6400117d:	jmp    0x64001199
6400117f:	test   edi,edi
64001181:	je     0x64001199
64001183:	call   DWORD PTR ds:0x64026044
64001189:	push   edi
6400118a:	mov    ebx,eax
6400118c:	call   DWORD PTR ds:0x64026040
64001192:	push   ebx
64001193:	call   DWORD PTR ds:0x64026060
64001199:	call   0x640016d0
6400119e:	push   esi
6400119f:	call   0x64013402
640011a4:	add    esp,0x4
640011a7:	pop    edi
640011a8:	pop    esi
640011a9:	xor    eax,eax
640011ab:	pop    ebx
640011ac:	add    esp,0x14
640011af:	ret    0x4
640011b2:	int3   
640011b3:	int3   
640011b4:	int3   
640011b5:	int3   
640011b6:	int3   
640011b7:	int3   
640011b8:	int3   
640011b9:	int3   
640011ba:	int3   
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   0xffffffff
640011c2:	push   0x64023ac9
640011c7:	mov    eax,fs:0x0
640011cd:	push   eax
640011ce:	sub    esp,0x30
640011d1:	mov    eax,ds:0x6402f09c
640011d6:	xor    eax,esp
640011d8:	mov    DWORD PTR [esp+0x2c],eax
640011dc:	push   ebx
640011dd:	push   ebp
640011de:	push   esi
640011df:	push   edi
640011e0:	mov    eax,ds:0x6402f09c
640011e5:	xor    eax,esp
640011e7:	push   eax
640011e8:	lea    eax,[esp+0x44]
640011ec:	mov    fs:0x0,eax
640011f2:	mov    esi,ecx
640011f4:	xor    ebx,ebx
640011f6:	mov    DWORD PTR [esp+0x1c],ebx
640011fa:	mov    edi,edx
640011fc:	mov    DWORD PTR [esi+0x18],0xf
64001203:	mov    DWORD PTR [esi+0x14],ebx
64001206:	mov    DWORD PTR [esp+0x20],esi
6400120a:	mov    DWORD PTR [esp+0x18],edi
6400120e:	mov    BYTE PTR [esi+0x4],bl
64001211:	mov    DWORD PTR [esp+0x4c],ebx
64001215:	mov    ebp,0x1
6400121a:	mov    DWORD PTR [esp+0x1c],ebp
6400121e:	call   DWORD PTR ds:0x64026084
64001224:	xor    ecx,ecx
64001226:	cmp    ecx,ebx
64001228:	jle    0x64001237
6400122a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
6400122f:	jne    0x64001237
64001231:	cmp    WORD PTR [eax+ecx*2],bx
64001235:	je     0x6400123b
64001237:	add    ecx,ebp
64001239:	jmp    0x64001226
6400123b:	add    ecx,ecx
6400123d:	push   ecx
6400123e:	push   eax
6400123f:	lea    ecx,[esp+0x2c]
64001243:	mov    DWORD PTR [esp+0x44],0xf
6400124b:	mov    DWORD PTR [esp+0x40],ebx
6400124f:	mov    BYTE PTR [esp+0x30],bl
64001253:	call   0x64001860
64001258:	push   ebx
64001259:	lea    edx,[esp+0x28]
6400125d:	push   edx
6400125e:	or     eax,0xffffffff
64001261:	mov    DWORD PTR [esp+0x54],ebp
64001265:	call   0x640019d0
6400126a:	mov    BYTE PTR [esp+0x4c],bl
6400126e:	cmp    DWORD PTR [esp+0x3c],0x10
64001273:	jb     0x64001282
64001275:	mov    eax,DWORD PTR [esp+0x28]
64001279:	push   eax
6400127a:	call   0x64013402
6400127f:	add    esp,0x4
64001282:	mov    edx,DWORD PTR ds:0x64030540
64001288:	mov    eax,DWORD PTR [edx+0xc]
6400128b:	mov    ecx,0x64030540
64001290:	call   eax
64001292:	add    eax,0x10
64001295:	mov    DWORD PTR [esp+0x14],eax
64001299:	mov    DWORD PTR [esp+0x4c],0x2
640012a1:	mov    eax,DWORD PTR [edi]
640012a3:	push   eax
640012a4:	lea    ecx,[esp+0x18]
640012a8:	push   0x640286c4
640012ad:	push   ecx
640012ae:	call   0x64001d40
640012b3:	mov    edi,DWORD PTR [esp+0x20]
640012b7:	mov    ebp,DWORD PTR [edi-0xc]
640012ba:	add    esp,0xc
640012bd:	cmp    DWORD PTR [edi-0x4],0x1
640012c1:	jle    0x640012d3
640012c3:	mov    edx,ebp
640012c5:	push   edx
640012c6:	lea    ecx,[esp+0x18]
640012ca:	call   0x64001950
640012cf:	mov    edi,DWORD PTR [esp+0x14]
640012d3:	lea    eax,[ebp+ebp*1+0x2]
640012d7:	push   eax
640012d8:	push   edi
640012d9:	lea    ecx,[esp+0x2c]
640012dd:	mov    DWORD PTR [esp+0x44],0xf
640012e5:	mov    DWORD PTR [esp+0x40],ebx
640012e9:	mov    BYTE PTR [esp+0x30],bl
640012ed:	call   0x64001860
640012f2:	push   ebx
640012f3:	lea    ecx,[esp+0x28]
640012f7:	push   ecx
640012f8:	or     eax,0xffffffff
640012fb:	mov    BYTE PTR [esp+0x54],0x3
64001300:	call   0x640019d0
64001305:	cmp    DWORD PTR [esp+0x3c],0x10
6400130a:	jb     0x64001319
6400130c:	mov    edx,DWORD PTR [esp+0x28]
64001310:	push   edx
64001311:	call   0x64013402
64001316:	add    esp,0x4
64001319:	add    edi,0xfffffff0
6400131c:	mov    DWORD PTR [esp+0x3c],0xf
64001324:	mov    DWORD PTR [esp+0x38],ebx
64001328:	mov    BYTE PTR [esp+0x28],bl
6400132c:	mov    BYTE PTR [esp+0x4c],bl
64001330:	lea    eax,[edi+0xc]
64001333:	or     ecx,0xffffffff
64001336:	lock xadd DWORD PTR [eax],ecx
6400133a:	dec    ecx
6400133b:	test   ecx,ecx
6400133d:	jg     0x64001349
6400133f:	mov    ecx,DWORD PTR [edi]
64001341:	mov    edx,DWORD PTR [ecx]
64001343:	mov    eax,DWORD PTR [edx+0x4]
64001346:	push   edi
64001347:	call   eax
64001349:	mov    edx,DWORD PTR ds:0x64030540
6400134f:	mov    eax,DWORD PTR [edx+0xc]
64001352:	mov    ecx,0x64030540
64001357:	call   eax
64001359:	add    eax,0x10
6400135c:	mov    DWORD PTR [esp+0x14],eax
64001360:	mov    ecx,DWORD PTR [esp+0x18]
64001364:	mov    DWORD PTR [esp+0x4c],0x4
6400136c:	mov    eax,DWORD PTR [ecx+0xc]
6400136f:	push   eax
64001370:	lea    edx,[esp+0x18]
64001374:	push   0x640286d0
64001379:	push   edx
6400137a:	call   0x64001d40
6400137f:	mov    edi,DWORD PTR [esp+0x20]
64001383:	mov    ebp,DWORD PTR [edi-0xc]
64001386:	add    esp,0xc
64001389:	cmp    DWORD PTR [edi-0x4],0x1
6400138d:	jle    0x6400139f
6400138f:	mov    eax,ebp
64001391:	push   eax
64001392:	lea    ecx,[esp+0x18]
64001396:	call   0x64001950
6400139b:	mov    edi,DWORD PTR [esp+0x14]
6400139f:	lea    ecx,[ebp+ebp*1+0x2]
640013a3:	push   ecx
640013a4:	push   edi
640013a5:	lea    ecx,[esp+0x2c]
640013a9:	mov    DWORD PTR [esp+0x44],0xf
640013b1:	mov    DWORD PTR [esp+0x40],ebx
640013b5:	mov    BYTE PTR [esp+0x30],bl
640013b9:	call   0x64001860
640013be:	push   ebx
640013bf:	lea    edx,[esp+0x28]
640013c3:	push   edx
640013c4:	or     eax,0xffffffff
640013c7:	mov    BYTE PTR [esp+0x54],0x5
640013cc:	call   0x640019d0
640013d1:	cmp    DWORD PTR [esp+0x3c],0x10
640013d6:	jb     0x640013e5
640013d8:	mov    eax,DWORD PTR [esp+0x28]
640013dc:	push   eax
640013dd:	call   0x64013402
640013e2:	add    esp,0x4
640013e5:	mov    ebp,0xf
640013ea:	add    edi,0xfffffff0
640013ed:	mov    DWORD PTR [esp+0x3c],ebp
640013f1:	mov    DWORD PTR [esp+0x38],ebx
640013f5:	mov    BYTE PTR [esp+0x28],bl
640013f9:	mov    BYTE PTR [esp+0x4c],bl
640013fd:	lea    ecx,[edi+0xc]
64001400:	or     edx,0xffffffff
64001403:	lock xadd DWORD PTR [ecx],edx
64001407:	dec    edx
64001408:	test   edx,edx
6400140a:	jg     0x64001416
6400140c:	mov    ecx,DWORD PTR [edi]
6400140e:	mov    eax,DWORD PTR [ecx]
64001410:	mov    edx,DWORD PTR [eax+0x4]
64001413:	push   edi
64001414:	call   edx
64001416:	push   0x2
64001418:	push   0x640286dc
6400141d:	lea    eax,[esp+0x30]
64001421:	push   ebp
64001422:	push   eax
64001423:	mov    DWORD PTR [esp+0x4c],ebp
64001427:	mov    DWORD PTR [esp+0x48],ebx
6400142b:	mov    BYTE PTR [esp+0x38],bl
6400142f:	call   0x640135b8
64001434:	mov    eax,DWORD PTR [esp+0x38]
64001438:	mov    edi,0x10
6400143d:	add    esp,0x10
64001440:	cmp    DWORD PTR [esp+0x3c],edi
64001444:	mov    DWORD PTR [esp+0x38],0x2
6400144c:	jae    0x64001452
6400144e:	lea    eax,[esp+0x28]
64001452:	mov    BYTE PTR [eax+0x2],bl
64001455:	push   ebx
64001456:	lea    ecx,[esp+0x28]
6400145a:	push   ecx
6400145b:	or     eax,0xffffffff
6400145e:	mov    DWORD PTR [esp+0x54],0x6
64001466:	call   0x640019d0
6400146b:	cmp    DWORD PTR [esp+0x3c],edi
6400146f:	jb     0x6400147e
64001471:	mov    edx,DWORD PTR [esp+0x28]
64001475:	push   edx
64001476:	call   0x64013402
6400147b:	add    esp,0x4
6400147e:	mov    eax,esi
64001480:	mov    ecx,DWORD PTR [esp+0x44]
64001484:	mov    DWORD PTR fs:0x0,ecx
6400148b:	pop    ecx
6400148c:	pop    edi
6400148d:	pop    esi
6400148e:	pop    ebp
6400148f:	pop    ebx
64001490:	mov    ecx,DWORD PTR [esp+0x2c]
64001494:	xor    ecx,esp
64001496:	call   0x64013c5c
6400149b:	add    esp,0x3c
6400149e:	ret    
6400149f:	int3   
640014a0:	push   0xffffffff
640014a2:	push   0x64023c38
640014a7:	mov    eax,fs:0x0
640014ad:	push   eax
640014ae:	sub    esp,0x24
640014b1:	push   ebx
640014b2:	push   ebp
640014b3:	push   esi
640014b4:	push   edi
640014b5:	mov    eax,ds:0x6402f09c
640014ba:	xor    eax,esp
640014bc:	push   eax
640014bd:	lea    eax,[esp+0x38]
640014c1:	mov    fs:0x0,eax
640014c7:	mov    eax,DWORD PTR [esp+0x48]
640014cb:	xor    edi,edi
640014cd:	push   0x10
640014cf:	mov    DWORD PTR [esp+0x28],eax
640014d3:	mov    DWORD PTR [esp+0x18],edi
640014d7:	call   0x640137e1
640014dc:	add    esp,0x4
640014df:	cmp    eax,edi
640014e1:	je     0x640014f2
640014e3:	mov    DWORD PTR [eax],edi
640014e5:	mov    DWORD PTR [eax+0x4],edi
640014e8:	mov    DWORD PTR [eax+0x8],edi
640014eb:	mov    DWORD PTR [eax+0xc],edi
640014ee:	mov    esi,eax
640014f0:	jmp    0x640014f4
640014f2:	xor    esi,esi
640014f4:	mov    DWORD PTR [esp+0x34],esi
640014f8:	push   edi
640014f9:	lea    ecx,[esp+0x2c]
640014fd:	push   ecx
640014fe:	mov    DWORD PTR [esp+0x48],edi
64001502:	lea    edx,[esp+0x24]
64001506:	push   edx
64001507:	lea    eax,[esp+0x2c]
6400150b:	push   eax
6400150c:	mov    DWORD PTR [esp+0x38],0xc
64001514:	mov    DWORD PTR [esp+0x40],0x1
6400151c:	mov    DWORD PTR [esp+0x3c],edi
64001520:	mov    DWORD PTR [esp+0x30],edi
64001524:	mov    DWORD PTR [esp+0x2c],edi
64001528:	call   DWORD PTR ds:0x64026080
6400152e:	test   eax,eax
64001530:	mov    ebx,DWORD PTR ds:0x64026044
64001536:	mov    ebp,DWORD PTR ds:0x64026040
6400153c:	je     0x64001594
6400153e:	mov    edi,DWORD PTR [esi+0x8]
64001541:	test   edi,edi
64001543:	mov    ecx,DWORD PTR [esp+0x20]
64001547:	mov    DWORD PTR [esp+0x14],ecx
6400154b:	je     0x64001561
6400154d:	call   ebx
6400154f:	push   edi
64001550:	mov    DWORD PTR [esp+0x1c],eax
64001554:	call   ebp
64001556:	mov    edx,DWORD PTR [esp+0x18]
6400155a:	push   edx
6400155b:	call   DWORD PTR ds:0x64026060
64001561:	mov    eax,DWORD PTR [esp+0x14]
64001565:	mov    DWORD PTR [esi+0x8],eax
64001568:	mov    edi,DWORD PTR [esi+0xc]
6400156b:	test   edi,edi
6400156d:	mov    ecx,DWORD PTR [esp+0x1c]
64001571:	mov    DWORD PTR [esp+0x18],ecx
64001575:	je     0x6400158b
64001577:	call   ebx
64001579:	push   edi
6400157a:	mov    DWORD PTR [esp+0x18],eax
6400157e:	call   ebp
64001580:	mov    edx,DWORD PTR [esp+0x14]
64001584:	push   edx
64001585:	call   DWORD PTR ds:0x64026060
6400158b:	mov    eax,DWORD PTR [esp+0x18]
6400158f:	mov    DWORD PTR [esi+0xc],eax
64001592:	xor    edi,edi
64001594:	push   edi
64001595:	lea    ecx,[esp+0x2c]
64001599:	push   ecx
6400159a:	lea    edx,[esp+0x24]
6400159e:	push   edx
6400159f:	lea    eax,[esp+0x2c]
640015a3:	push   eax
640015a4:	call   DWORD PTR ds:0x64026080
640015aa:	test   eax,eax
640015ac:	je     0x64001602
640015ae:	mov    edi,DWORD PTR [esi]
640015b0:	test   edi,edi
640015b2:	mov    ecx,DWORD PTR [esp+0x20]
640015b6:	mov    DWORD PTR [esp+0x18],ecx
640015ba:	je     0x640015d0
640015bc:	call   ebx
640015be:	push   edi
640015bf:	mov    DWORD PTR [esp+0x18],eax
640015c3:	call   ebp
640015c5:	mov    edx,DWORD PTR [esp+0x14]
640015c9:	push   edx
640015ca:	call   DWORD PTR ds:0x64026060
640015d0:	mov    eax,DWORD PTR [esp+0x18]
640015d4:	mov    DWORD PTR [esi],eax
640015d6:	mov    edi,DWORD PTR [esi+0x4]
640015d9:	test   edi,edi
640015db:	mov    ecx,DWORD PTR [esp+0x1c]
640015df:	mov    DWORD PTR [esp+0x18],ecx
640015e3:	je     0x640015f9
640015e5:	call   ebx
640015e7:	push   edi
640015e8:	mov    DWORD PTR [esp+0x18],eax
640015ec:	call   ebp
640015ee:	mov    edx,DWORD PTR [esp+0x14]
640015f2:	push   edx
640015f3:	call   DWORD PTR ds:0x64026060
640015f9:	mov    eax,DWORD PTR [esp+0x18]
640015fd:	mov    DWORD PTR [esi+0x4],eax
64001600:	xor    edi,edi
64001602:	mov    ecx,DWORD PTR [esp+0x24]
64001606:	mov    edx,esi
64001608:	call   0x640011c0
6400160d:	push   edi
6400160e:	push   edi
6400160f:	push   esi
64001610:	push   0x640010d0
64001615:	push   edi
64001616:	push   edi
64001617:	call   DWORD PTR ds:0x64026070
6400161d:	mov    esi,eax
6400161f:	cmp    esi,edi
64001621:	je     0x64001631
64001623:	call   ebx
64001625:	push   esi
64001626:	mov    edi,eax
64001628:	call   ebp
6400162a:	push   edi
6400162b:	call   DWORD PTR ds:0x64026060
64001631:	mov    eax,DWORD PTR [esp+0x24]
64001635:	mov    ecx,DWORD PTR [esp+0x38]
64001639:	mov    DWORD PTR fs:0x0,ecx
64001640:	pop    ecx
64001641:	pop    edi
64001642:	pop    esi
64001643:	pop    ebp
64001644:	pop    ebx
64001645:	add    esp,0x30
64001648:	ret    
64001649:	int3   
6400164a:	int3   
6400164b:	int3   
6400164c:	int3   
6400164d:	int3   
6400164e:	int3   
6400164f:	int3   
64001650:	push   esi
64001651:	mov    esi,ecx
64001653:	cmp    DWORD PTR [esi+0x18],0x10
64001657:	jb     0x64001665
64001659:	mov    eax,DWORD PTR [esi+0x4]
6400165c:	push   eax
6400165d:	call   0x64013402
64001662:	add    esp,0x4
64001665:	xor    eax,eax
64001667:	mov    DWORD PTR [esi+0x18],0xf
6400166e:	mov    DWORD PTR [esi+0x14],eax
64001671:	mov    BYTE PTR [esi+0x4],al
64001674:	pop    esi
64001675:	ret    
64001676:	int3   
64001677:	int3   
64001678:	int3   
64001679:	int3   
6400167a:	int3   
6400167b:	int3   
6400167c:	int3   
6400167d:	int3   
6400167e:	int3   
6400167f:	int3   
64001680:	push   esi
64001681:	mov    esi,ecx
64001683:	push   edi
64001684:	mov    edi,DWORD PTR [esi]
64001686:	test   edi,edi
64001688:	je     0x640016a2
6400168a:	push   ebx
6400168b:	call   DWORD PTR ds:0x64026044
64001691:	push   edi
64001692:	mov    ebx,eax
64001694:	call   DWORD PTR ds:0x64026040
6400169a:	push   ebx
6400169b:	call   DWORD PTR ds:0x64026060
640016a1:	pop    ebx
640016a2:	pop    edi
640016a3:	mov    DWORD PTR [esi],0x0
640016a9:	pop    esi
640016aa:	ret    
640016ab:	int3   
640016ac:	int3   
640016ad:	int3   
640016ae:	int3   
640016af:	int3   
640016b0:	push   esi
640016b1:	mov    esi,DWORD PTR [eax]
640016b3:	test   esi,esi
640016b5:	je     0x640016c5
640016b7:	call   0x640016d0
640016bc:	push   esi
640016bd:	call   0x64013402
640016c2:	add    esp,0x4
640016c5:	pop    esi
640016c6:	ret    
640016c7:	int3   
640016c8:	int3   
640016c9:	int3   
640016ca:	int3   
640016cb:	int3   
640016cc:	int3   
640016cd:	int3   
640016ce:	int3   
640016cf:	int3   
640016d0:	sub    esp,0x8
640016d3:	mov    eax,DWORD PTR [esi+0xc]
640016d6:	test   eax,eax
640016d8:	push   ebx
640016d9:	mov    ebx,DWORD PTR ds:0x64026040
640016df:	push   ebp
640016e0:	mov    ebp,DWORD PTR ds:0x64026060
640016e6:	push   edi
640016e7:	mov    edi,DWORD PTR ds:0x64026044
640016ed:	mov    DWORD PTR [esp+0xc],eax
640016f1:	je     0x64001707
640016f3:	call   edi
640016f5:	mov    DWORD PTR [esp+0x10],eax
640016f9:	mov    eax,DWORD PTR [esp+0xc]
640016fd:	push   eax
640016fe:	call   ebx
64001700:	mov    ecx,DWORD PTR [esp+0x10]
64001704:	push   ecx
64001705:	call   ebp
64001707:	mov    DWORD PTR [esi+0xc],0x0
6400170e:	mov    eax,DWORD PTR [esi+0x8]
64001711:	test   eax,eax
64001713:	mov    DWORD PTR [esp+0x10],eax
64001717:	je     0x6400172d
64001719:	call   edi
6400171b:	mov    edx,DWORD PTR [esp+0x10]
6400171f:	push   edx
64001720:	mov    DWORD PTR [esp+0x10],eax
64001724:	call   ebx
64001726:	mov    eax,DWORD PTR [esp+0xc]
6400172a:	push   eax
6400172b:	call   ebp
6400172d:	mov    DWORD PTR [esi+0x8],0x0
64001734:	mov    eax,DWORD PTR [esi+0x4]
64001737:	test   eax,eax
64001739:	mov    DWORD PTR [esp+0x10],eax
6400173d:	je     0x64001753
6400173f:	call   edi
64001741:	mov    ecx,DWORD PTR [esp+0x10]
64001745:	push   ecx
64001746:	mov    DWORD PTR [esp+0x10],eax
6400174a:	call   ebx
6400174c:	mov    edx,DWORD PTR [esp+0xc]
64001750:	push   edx
64001751:	call   ebp
64001753:	mov    DWORD PTR [esi+0x4],0x0
6400175a:	mov    eax,DWORD PTR [esi]
6400175c:	test   eax,eax
6400175e:	mov    DWORD PTR [esp+0x10],eax
64001762:	je     0x64001772
64001764:	call   edi
64001766:	mov    edi,eax
64001768:	mov    eax,DWORD PTR [esp+0x10]
6400176c:	push   eax
6400176d:	call   ebx
6400176f:	push   edi
64001770:	call   ebp
64001772:	pop    edi
64001773:	pop    ebp
64001774:	mov    DWORD PTR [esi],0x0
6400177a:	pop    ebx
6400177b:	add    esp,0x8
6400177e:	ret    
6400177f:	int3   
64001780:	push   ebx
64001781:	mov    ebx,DWORD PTR [esp+0x8]
64001785:	push   ebp
64001786:	mov    ebp,DWORD PTR [esp+0x10]
6400178a:	cmp    DWORD PTR [ebx+0x14],ebp
6400178d:	push   esi
6400178e:	push   edi
6400178f:	mov    esi,ecx
64001791:	jae    0x64001798
64001793:	call   0x640133be
64001798:	mov    edi,DWORD PTR [ebx+0x14]
6400179b:	mov    eax,DWORD PTR [esp+0x1c]
6400179f:	sub    edi,ebp
640017a1:	cmp    eax,edi
640017a3:	jae    0x640017a7
640017a5:	mov    edi,eax
640017a7:	cmp    esi,ebx
640017a9:	jne    0x640017ca
640017ab:	push   0xffffffff
640017ad:	add    edi,ebp
640017af:	push   edi
640017b0:	mov    ecx,esi
640017b2:	call   0x64001ac0
640017b7:	push   ebp
640017b8:	push   0x0
640017ba:	mov    ecx,esi
640017bc:	call   0x64001ac0
640017c1:	pop    edi
640017c2:	mov    eax,esi
640017c4:	pop    esi
640017c5:	pop    ebp
640017c6:	pop    ebx
640017c7:	ret    0xc
640017ca:	cmp    edi,0xfffffffe
640017cd:	jbe    0x640017d4
640017cf:	call   0x6401337f
640017d4:	mov    eax,DWORD PTR [esi+0x18]
640017d7:	cmp    eax,edi
640017d9:	jae    0x640017f6
640017db:	mov    eax,DWORD PTR [esi+0x14]
640017de:	push   eax
640017df:	push   edi
640017e0:	mov    ecx,esi
640017e2:	call   0x64001b60
640017e7:	test   edi,edi
640017e9:	jbe    0x64001851
640017eb:	cmp    DWORD PTR [ebx+0x18],0x10
640017ef:	jb     0x64001820
640017f1:	mov    edx,DWORD PTR [ebx+0x4]
640017f4:	jmp    0x64001823
640017f6:	test   edi,edi
640017f8:	jne    0x640017e9
640017fa:	cmp    eax,0x10
640017fd:	mov    DWORD PTR [esi+0x14],edi
64001800:	jb     0x64001811
64001802:	mov    eax,DWORD PTR [esi+0x4]
64001805:	pop    edi
64001806:	mov    BYTE PTR [eax],0x0
64001809:	mov    eax,esi
6400180b:	pop    esi
6400180c:	pop    ebp
6400180d:	pop    ebx
6400180e:	ret    0xc
64001811:	lea    eax,[esi+0x4]
64001814:	pop    edi
64001815:	mov    BYTE PTR [eax],0x0
64001818:	mov    eax,esi
6400181a:	pop    esi
6400181b:	pop    ebp
6400181c:	pop    ebx
6400181d:	ret    0xc
64001820:	lea    edx,[ebx+0x4]
64001823:	mov    ecx,DWORD PTR [esi+0x18]
64001826:	cmp    ecx,0x10
64001829:	lea    ebx,[esi+0x4]
6400182c:	jb     0x64001832
6400182e:	mov    eax,DWORD PTR [ebx]
64001830:	jmp    0x64001834
64001832:	mov    eax,ebx
64001834:	push   edi
64001835:	add    edx,ebp
64001837:	push   edx
64001838:	push   ecx
64001839:	push   eax
6400183a:	call   0x640135b8
6400183f:	add    esp,0x10
64001842:	cmp    DWORD PTR [esi+0x18],0x10
64001846:	mov    DWORD PTR [esi+0x14],edi
64001849:	jb     0x6400184d
6400184b:	mov    ebx,DWORD PTR [ebx]
6400184d:	mov    BYTE PTR [ebx+edi*1],0x0
64001851:	pop    edi
64001852:	mov    eax,esi
64001854:	pop    esi
64001855:	pop    ebp
64001856:	pop    ebx
64001857:	ret    0xc
6400185a:	int3   
6400185b:	int3   
6400185c:	int3   
6400185d:	int3   
6400185e:	int3   
6400185f:	int3   
64001860:	push   ebx
64001861:	push   ebp
64001862:	push   esi
64001863:	mov    esi,ecx
64001865:	mov    ecx,DWORD PTR [esi+0x18]
64001868:	cmp    ecx,0x10
6400186b:	lea    ebx,[esi+0x4]
6400186e:	jb     0x64001874
64001870:	mov    eax,DWORD PTR [ebx]
64001872:	jmp    0x64001876
64001874:	mov    eax,ebx
64001876:	mov    ebp,DWORD PTR [esp+0x10]
6400187a:	cmp    ebp,eax
6400187c:	jb     0x640018af
6400187e:	cmp    ecx,0x10
64001881:	jb     0x64001887
64001883:	mov    eax,DWORD PTR [ebx]
64001885:	jmp    0x64001889
64001887:	mov    eax,ebx
64001889:	mov    edx,DWORD PTR [esi+0x14]
6400188c:	add    edx,eax
6400188e:	cmp    edx,ebp
64001890:	jbe    0x640018af
64001892:	cmp    ecx,0x10
64001895:	jb     0x64001899
64001897:	mov    ebx,DWORD PTR [ebx]
64001899:	mov    eax,DWORD PTR [esp+0x14]
6400189d:	push   eax
6400189e:	sub    ebp,ebx
640018a0:	push   ebp
640018a1:	push   esi
640018a2:	mov    ecx,esi
640018a4:	call   0x64001780
640018a9:	pop    esi
640018aa:	pop    ebp
640018ab:	pop    ebx
640018ac:	ret    0x8
640018af:	push   edi
640018b0:	mov    edi,DWORD PTR [esp+0x18]
640018b4:	cmp    edi,0xfffffffe
640018b7:	jbe    0x640018be
640018b9:	call   0x6401337f
640018be:	mov    eax,DWORD PTR [esi+0x18]
640018c1:	cmp    eax,edi
640018c3:	jae    0x640018e1
640018c5:	mov    ecx,DWORD PTR [esi+0x14]
640018c8:	push   ecx
640018c9:	push   edi
640018ca:	mov    ecx,esi
640018cc:	call   0x64001b60
640018d1:	test   edi,edi
640018d3:	jbe    0x64001918
640018d5:	mov    ecx,DWORD PTR [esi+0x18]
640018d8:	cmp    ecx,0x10
640018db:	jb     0x640018fb
640018dd:	mov    eax,DWORD PTR [ebx]
640018df:	jmp    0x640018fd
640018e1:	test   edi,edi
640018e3:	jne    0x640018d3
640018e5:	cmp    eax,0x10
640018e8:	mov    DWORD PTR [esi+0x14],edi
640018eb:	jb     0x640018ef
640018ed:	mov    ebx,DWORD PTR [ebx]
640018ef:	pop    edi
640018f0:	mov    eax,esi
640018f2:	pop    esi
640018f3:	pop    ebp
640018f4:	mov    BYTE PTR [ebx],0x0
640018f7:	pop    ebx
640018f8:	ret    0x8
640018fb:	mov    eax,ebx
640018fd:	push   edi
640018fe:	push   ebp
640018ff:	push   ecx
64001900:	push   eax
64001901:	call   0x640135b8
64001906:	add    esp,0x10
64001909:	cmp    DWORD PTR [esi+0x18],0x10
6400190d:	mov    DWORD PTR [esi+0x14],edi
64001910:	jb     0x64001914
64001912:	mov    ebx,DWORD PTR [ebx]
64001914:	mov    BYTE PTR [ebx+edi*1],0x0
64001918:	pop    edi
64001919:	mov    eax,esi
6400191b:	pop    esi
6400191c:	pop    ebp
6400191d:	pop    ebx
6400191e:	ret    0x8
64001921:	int3   
64001922:	int3   
64001923:	int3   
64001924:	int3   
64001925:	int3   
64001926:	int3   
64001927:	int3   
64001928:	int3   
64001929:	int3   
6400192a:	int3   
6400192b:	int3   
6400192c:	int3   
6400192d:	int3   
6400192e:	int3   
6400192f:	int3   
64001930:	mov    eax,DWORD PTR [ecx]
64001932:	sub    eax,0x10
64001935:	lea    ecx,[eax+0xc]
64001938:	or     edx,0xffffffff
6400193b:	lock xadd DWORD PTR [ecx],edx
6400193f:	dec    edx
64001940:	test   edx,edx
64001942:	jg     0x6400194e
64001944:	mov    ecx,DWORD PTR [eax]
64001946:	mov    edx,DWORD PTR [ecx]
64001948:	push   eax
64001949:	mov    eax,DWORD PTR [edx+0x4]
6400194c:	call   eax
6400194e:	ret    
6400194f:	int3   
64001950:	push   ecx
64001951:	push   ebx
64001952:	push   ebp
64001953:	push   esi
64001954:	mov    esi,DWORD PTR [ecx]
64001956:	mov    ebx,DWORD PTR [esi-0xc]
64001959:	sub    esi,0x10
6400195c:	mov    DWORD PTR [esp+0xc],ecx
64001960:	mov    ecx,DWORD PTR [esi]
64001962:	mov    eax,DWORD PTR [ecx]
64001964:	mov    edx,DWORD PTR [eax+0x10]
64001967:	push   edi
64001968:	call   edx
6400196a:	mov    edx,DWORD PTR [eax]
6400196c:	mov    ebp,DWORD PTR [esp+0x18]
64001970:	push   0x2
64001972:	mov    ecx,eax
64001974:	mov    eax,DWORD PTR [edx]
64001976:	push   ebp
64001977:	call   eax
64001979:	mov    edi,eax
6400197b:	test   edi,edi
6400197d:	jne    0x64001984
6400197f:	call   0x64001b50
64001984:	cmp    ebx,ebp
64001986:	jge    0x6400198a
64001988:	mov    ebp,ebx
6400198a:	lea    eax,[ebp+ebp*1+0x2]
6400198e:	push   eax
6400198f:	lea    ecx,[esi+0x10]
64001992:	push   ecx
64001993:	push   eax
64001994:	lea    ebp,[edi+0x10]
64001997:	push   ebp
64001998:	call   0x640135b8
6400199d:	add    esp,0x10
640019a0:	mov    DWORD PTR [edi+0x4],ebx
640019a3:	lea    edx,[esi+0xc]
640019a6:	or     eax,0xffffffff
640019a9:	lock xadd DWORD PTR [edx],eax
640019ad:	dec    eax
640019ae:	test   eax,eax
640019b0:	jg     0x640019bc
640019b2:	mov    ecx,DWORD PTR [esi]
640019b4:	mov    edx,DWORD PTR [ecx]
640019b6:	mov    eax,DWORD PTR [edx+0x4]
640019b9:	push   esi
640019ba:	call   eax
640019bc:	mov    ecx,DWORD PTR [esp+0x10]
640019c0:	pop    edi
640019c1:	pop    esi
640019c2:	mov    DWORD PTR [ecx],ebp
640019c4:	pop    ebp
640019c5:	pop    ebx
640019c6:	pop    ecx
640019c7:	ret    0x4
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   ebx
640019d1:	push   ebp
640019d2:	mov    ebp,DWORD PTR [esp+0xc]
640019d6:	push   edi
640019d7:	mov    edi,DWORD PTR [esp+0x14]
640019db:	cmp    DWORD PTR [ebp+0x14],edi
640019de:	mov    ebx,eax
640019e0:	jae    0x640019e7
640019e2:	call   0x640133be
640019e7:	mov    eax,DWORD PTR [ebp+0x14]
640019ea:	sub    eax,edi
640019ec:	cmp    eax,ebx
640019ee:	jae    0x640019f2
640019f0:	mov    ebx,eax
640019f2:	mov    eax,DWORD PTR [esi+0x14]
640019f5:	or     ecx,0xffffffff
640019f8:	sub    ecx,eax
640019fa:	cmp    ecx,ebx
640019fc:	jbe    0x64001a05
640019fe:	lea    edx,[eax+ebx*1]
64001a01:	cmp    edx,eax
64001a03:	jae    0x64001a0a
64001a05:	call   0x6401337f
64001a0a:	test   ebx,ebx
64001a0c:	jbe    0x64001ab6
64001a12:	mov    edi,DWORD PTR [esi+0x14]
64001a15:	add    edi,ebx
64001a17:	cmp    edi,0xfffffffe
64001a1a:	jbe    0x64001a21
64001a1c:	call   0x6401337f
64001a21:	mov    eax,DWORD PTR [esi+0x18]
64001a24:	cmp    eax,edi
64001a26:	jae    0x64001a43
64001a28:	mov    eax,DWORD PTR [esi+0x14]
64001a2b:	push   eax
64001a2c:	push   edi
64001a2d:	mov    ecx,esi
64001a2f:	call   0x64001b60
64001a34:	test   edi,edi
64001a36:	jbe    0x64001ab6
64001a38:	cmp    DWORD PTR [ebp+0x18],0x10
64001a3c:	jb     0x64001a6b
64001a3e:	mov    ebp,DWORD PTR [ebp+0x4]
64001a41:	jmp    0x64001a6e
64001a43:	test   edi,edi
64001a45:	jne    0x64001a36
64001a47:	cmp    eax,0x10
64001a4a:	mov    DWORD PTR [esi+0x14],edi
64001a4d:	jb     0x64001a5d
64001a4f:	mov    eax,DWORD PTR [esi+0x4]
64001a52:	pop    edi
64001a53:	pop    ebp
64001a54:	mov    BYTE PTR [eax],0x0
64001a57:	mov    eax,esi
64001a59:	pop    ebx
64001a5a:	ret    0x8
64001a5d:	pop    edi
64001a5e:	lea    eax,[esi+0x4]
64001a61:	pop    ebp
64001a62:	mov    BYTE PTR [eax],0x0
64001a65:	mov    eax,esi
64001a67:	pop    ebx
64001a68:	ret    0x8
64001a6b:	add    ebp,0x4
64001a6e:	mov    eax,DWORD PTR [esi+0x18]
64001a71:	cmp    eax,0x10
64001a74:	jb     0x64001a7b
64001a76:	mov    edx,DWORD PTR [esi+0x4]
64001a79:	jmp    0x64001a7e
64001a7b:	lea    edx,[esi+0x4]
64001a7e:	mov    ecx,DWORD PTR [esi+0x14]
64001a81:	push   ebx
64001a82:	mov    ebx,DWORD PTR [esp+0x18]
64001a86:	add    ebp,ebx
64001a88:	sub    eax,ecx
64001a8a:	push   ebp
64001a8b:	push   eax
64001a8c:	add    ecx,edx
64001a8e:	push   ecx
64001a8f:	call   0x640135b8
64001a94:	add    esp,0x10
64001a97:	cmp    DWORD PTR [esi+0x18],0x10
64001a9b:	mov    DWORD PTR [esi+0x14],edi
64001a9e:	jb     0x64001aaf
64001aa0:	mov    eax,DWORD PTR [esi+0x4]
64001aa3:	mov    BYTE PTR [eax+edi*1],0x0
64001aa7:	pop    edi
64001aa8:	pop    ebp
64001aa9:	mov    eax,esi
64001aab:	pop    ebx
64001aac:	ret    0x8
64001aaf:	lea    eax,[esi+0x4]
64001ab2:	mov    BYTE PTR [eax+edi*1],0x0
64001ab6:	pop    edi
64001ab7:	pop    ebp
64001ab8:	mov    eax,esi
64001aba:	pop    ebx
64001abb:	ret    0x8
64001abe:	int3   
64001abf:	int3   
64001ac0:	push   ebx
64001ac1:	mov    ebx,DWORD PTR [esp+0x8]
64001ac5:	push   esi
64001ac6:	mov    esi,ecx
64001ac8:	cmp    DWORD PTR [esi+0x14],ebx
64001acb:	push   edi
64001acc:	jae    0x64001ad3
64001ace:	call   0x640133be
64001ad3:	mov    eax,DWORD PTR [esi+0x14]
64001ad6:	mov    edi,DWORD PTR [esp+0x14]
64001ada:	sub    eax,ebx
64001adc:	cmp    eax,edi
64001ade:	jae    0x64001ae2
64001ae0:	mov    edi,eax
64001ae2:	test   edi,edi
64001ae4:	jbe    0x64001b3b
64001ae6:	mov    ecx,DWORD PTR [esi+0x18]
64001ae9:	cmp    ecx,0x10
64001aec:	push   ebp
64001aed:	lea    ebp,[esi+0x4]
64001af0:	jb     0x64001afb
64001af2:	mov    edx,DWORD PTR [ebp+0x0]
64001af5:	mov    DWORD PTR [esp+0x14],edx
64001af9:	jmp    0x64001aff
64001afb:	mov    DWORD PTR [esp+0x14],ebp
64001aff:	cmp    ecx,0x10
64001b02:	jb     0x64001b09
64001b04:	mov    edx,DWORD PTR [ebp+0x0]
64001b07:	jmp    0x64001b0b
64001b09:	mov    edx,ebp
64001b0b:	sub    eax,edi
64001b0d:	push   eax
64001b0e:	mov    eax,DWORD PTR [esp+0x18]
64001b12:	add    eax,ebx
64001b14:	add    eax,edi
64001b16:	push   eax
64001b17:	sub    ecx,ebx
64001b19:	push   ecx
64001b1a:	add    edx,ebx
64001b1c:	push   edx
64001b1d:	call   0x64013633
64001b22:	mov    eax,DWORD PTR [esi+0x14]
64001b25:	sub    eax,edi
64001b27:	add    esp,0x10
64001b2a:	cmp    DWORD PTR [esi+0x18],0x10
64001b2e:	mov    DWORD PTR [esi+0x14],eax
64001b31:	jb     0x64001b36
64001b33:	mov    ebp,DWORD PTR [ebp+0x0]
64001b36:	mov    BYTE PTR [eax+ebp*1],0x0
64001b3a:	pop    ebp
64001b3b:	pop    edi
64001b3c:	mov    eax,esi
64001b3e:	pop    esi
64001b3f:	pop    ebx
64001b40:	ret    0x8
64001b43:	int3   
64001b44:	int3   
64001b45:	int3   
64001b46:	int3   
64001b47:	int3   
64001b48:	int3   
64001b49:	int3   
64001b4a:	int3   
64001b4b:	int3   
64001b4c:	int3   
64001b4d:	int3   
64001b4e:	int3   
64001b4f:	int3   
64001b50:	push   0x8007000e
64001b55:	call   0x64001040
64001b5a:	int3   
64001b5b:	int3   
64001b5c:	int3   
64001b5d:	int3   
64001b5e:	int3   
64001b5f:	int3   
64001b60:	push   ebp
64001b61:	mov    ebp,esp
64001b63:	push   0xffffffff
64001b65:	push   0x64023780
64001b6a:	mov    eax,fs:0x0
64001b70:	push   eax
64001b71:	sub    esp,0x1c
64001b74:	push   ebx
64001b75:	push   esi
64001b76:	push   edi
64001b77:	mov    eax,ds:0x6402f09c
64001b7c:	xor    eax,ebp
64001b7e:	push   eax
64001b7f:	lea    eax,[ebp-0xc]
64001b82:	mov    fs:0x0,eax
64001b88:	mov    DWORD PTR [ebp-0x10],esp
64001b8b:	mov    edi,ecx
64001b8d:	mov    DWORD PTR [ebp-0x14],edi
64001b90:	mov    eax,DWORD PTR [ebp+0x8]
64001b93:	mov    esi,eax
64001b95:	or     esi,0xf
64001b98:	cmp    esi,0xfffffffe
64001b9b:	jbe    0x64001ba1
64001b9d:	mov    esi,eax
64001b9f:	jmp    0x64001bc3
64001ba1:	mov    ebx,DWORD PTR [edi+0x18]
64001ba4:	mov    eax,0xaaaaaaab
64001ba9:	mul    esi
64001bab:	mov    ecx,ebx
64001bad:	shr    ecx,1
64001baf:	shr    edx,1
64001bb1:	cmp    edx,ecx
64001bb3:	jae    0x64001bc3
64001bb5:	mov    eax,0xfffffffe
64001bba:	sub    eax,ecx
64001bbc:	cmp    ebx,eax
64001bbe:	ja     0x64001bc3
64001bc0:	lea    esi,[ecx+ebx*1]
64001bc3:	xor    ebx,ebx
64001bc5:	lea    ecx,[esi+0x1]
64001bc8:	cmp    ecx,ebx
64001bca:	mov    DWORD PTR [ebp-0x4],ebx
64001bcd:	ja     0x64001bdf
64001bcf:	xor    ecx,ecx
64001bd1:	push   ecx
64001bd2:	call   0x640137e1
64001bd7:	add    esp,0x4
64001bda:	mov    DWORD PTR [ebp+0x8],eax
64001bdd:	jmp    0x64001c37
64001bdf:	or     eax,0xffffffff
64001be2:	xor    edx,edx
64001be4:	div    ecx
64001be6:	cmp    eax,0x1
64001be9:	jae    0x64001bd1
64001beb:	lea    ecx,[ebp-0x18]
64001bee:	push   ecx
64001bef:	lea    ecx,[ebp-0x28]
64001bf2:	mov    DWORD PTR [ebp-0x18],ebx
64001bf5:	call   0x6401345d
64001bfa:	push   0x6402c5c4
64001bff:	lea    edx,[ebp-0x28]
64001c02:	push   edx
64001c03:	mov    DWORD PTR [ebp-0x28],0x64026304
64001c0a:	call   0x6401384b
64001c0f:	mov    eax,DWORD PTR [ebp+0x8]
64001c12:	mov    ecx,DWORD PTR [ebp-0x14]
64001c15:	mov    DWORD PTR [ebp-0x1c],eax
64001c18:	add    eax,0x1
64001c1b:	mov    DWORD PTR [ebp-0x10],esp
64001c1e:	push   eax
64001c1f:	mov    BYTE PTR [ebp-0x4],0x2
64001c23:	call   0x64001ce0
64001c28:	mov    DWORD PTR [ebp+0x8],eax
64001c2b:	mov    eax,0x64001c31
64001c30:	ret    
64001c31:	mov    edi,DWORD PTR [ebp-0x14]
64001c34:	mov    esi,DWORD PTR [ebp-0x1c]
64001c37:	mov    ebx,DWORD PTR [ebp+0xc]
64001c3a:	test   ebx,ebx
64001c3c:	jbe    0x64001c5e
64001c3e:	cmp    DWORD PTR [edi+0x18],0x10
64001c42:	jb     0x64001c49
64001c44:	mov    eax,DWORD PTR [edi+0x4]
64001c47:	jmp    0x64001c4c
64001c49:	lea    eax,[edi+0x4]
64001c4c:	mov    ecx,DWORD PTR [ebp+0x8]
64001c4f:	push   ebx
64001c50:	push   eax
64001c51:	lea    eax,[esi+0x1]
64001c54:	push   eax
64001c55:	push   ecx
64001c56:	call   0x640135b8
64001c5b:	add    esp,0x10
64001c5e:	cmp    DWORD PTR [edi+0x18],0x10
64001c62:	jb     0x64001c70
64001c64:	mov    edx,DWORD PTR [edi+0x4]
64001c67:	push   edx
64001c68:	call   0x64013402
64001c6d:	add    esp,0x4
64001c70:	cmp    esi,0x10
64001c73:	mov    ecx,DWORD PTR [ebp+0x8]
64001c76:	lea    eax,[edi+0x4]
64001c79:	mov    BYTE PTR [eax],0x0
64001c7c:	mov    DWORD PTR [eax],ecx
64001c7e:	mov    DWORD PTR [edi+0x18],esi
64001c81:	mov    DWORD PTR [edi+0x14],ebx
64001c84:	jb     0x64001c88
64001c86:	mov    eax,ecx
64001c88:	mov    BYTE PTR [eax+ebx*1],0x0
64001c8c:	mov    ecx,DWORD PTR [ebp-0xc]
64001c8f:	mov    DWORD PTR fs:0x0,ecx
64001c96:	pop    ecx
64001c97:	pop    edi
64001c98:	pop    esi
64001c99:	pop    ebx
64001c9a:	mov    esp,ebp
64001c9c:	pop    ebp
64001c9d:	ret    0x8
64001ca0:	mov    esi,DWORD PTR [ebp-0x14]
64001ca3:	cmp    DWORD PTR [esi+0x18],0x10
64001ca7:	jb     0x64001cb5
64001ca9:	mov    eax,DWORD PTR [esi+0x4]
64001cac:	push   eax
64001cad:	call   0x64013402
64001cb2:	add    esp,0x4
64001cb5:	push   0x0
64001cb7:	mov    DWORD PTR [esi+0x18],0xf
64001cbe:	mov    DWORD PTR [esi+0x14],0x0
64001cc5:	push   0x0
64001cc7:	mov    BYTE PTR [esi+0x4],0x0
64001ccb:	call   0x6401384b
64001cd0:	int3   
64001cd1:	int3   
64001cd2:	int3   
64001cd3:	int3   
64001cd4:	int3   
64001cd5:	int3   
64001cd6:	int3   
64001cd7:	int3   
64001cd8:	int3   
64001cd9:	int3   
64001cda:	int3   
64001cdb:	int3   
64001cdc:	int3   
64001cdd:	int3   
64001cde:	int3   
64001cdf:	int3   
64001ce0:	mov    ecx,DWORD PTR [esp+0x4]
64001ce4:	sub    esp,0xc
64001ce7:	test   ecx,ecx
64001ce9:	ja     0x64001cfc
64001ceb:	xor    ecx,ecx
64001ced:	push   ecx
64001cee:	call   0x640137e1
64001cf3:	add    esp,0x4
64001cf6:	add    esp,0xc
64001cf9:	ret    0x4
64001cfc:	or     eax,0xffffffff
64001cff:	xor    edx,edx
64001d01:	div    ecx
64001d03:	cmp    eax,0x1
64001d06:	jae    0x64001ced
64001d08:	lea    eax,[esp+0x10]
64001d0c:	push   eax
64001d0d:	lea    ecx,[esp+0x4]
64001d11:	mov    DWORD PTR [esp+0x14],0x0
64001d19:	call   0x6401345d
64001d1e:	push   0x6402c5c4
64001d23:	lea    ecx,[esp+0x4]
64001d27:	push   ecx
64001d28:	mov    DWORD PTR [esp+0x8],0x64026304
64001d30:	call   0x6401384b
64001d35:	int3   
64001d36:	int3   
64001d37:	int3   
64001d38:	int3   
64001d39:	int3   
64001d3a:	int3   
64001d3b:	int3   
64001d3c:	int3   
64001d3d:	int3   
64001d3e:	int3   
64001d3f:	int3   
64001d40:	mov    ecx,DWORD PTR [esp+0x8]
64001d44:	lea    eax,[esp+0xc]
64001d48:	push   eax
64001d49:	push   ecx
64001d4a:	mov    ecx,DWORD PTR [esp+0xc]
64001d4e:	call   0x64001d80
64001d53:	ret    
64001d54:	int3   
64001d55:	int3   
64001d56:	int3   
64001d57:	int3   
64001d58:	int3   
64001d59:	int3   
64001d5a:	int3   
64001d5b:	int3   
64001d5c:	int3   
64001d5d:	int3   
64001d5e:	int3   
64001d5f:	int3   
64001d60:	mov    eax,DWORD PTR [esp+0x4]
64001d64:	push   esi
64001d65:	push   eax
64001d66:	mov    esi,ecx
64001d68:	call   0x640134c3
64001d6d:	mov    DWORD PTR [esi],0x64026304
64001d73:	mov    eax,esi
64001d75:	pop    esi
64001d76:	ret    0x4
64001d79:	int3   
64001d7a:	int3   
64001d7b:	int3   
64001d7c:	int3   
64001d7d:	int3   
64001d7e:	int3   
64001d7f:	int3   
64001d80:	push   ebx
64001d81:	mov    ebx,DWORD PTR [esp+0x8]
64001d85:	test   ebx,ebx
64001d87:	push   edi
64001d88:	mov    edi,ecx
64001d8a:	jne    0x64001d96
64001d8c:	push   0x80070057
64001d91:	call   0x64001040
64001d96:	push   ebp
64001d97:	mov    ebp,DWORD PTR [esp+0x14]
64001d9b:	push   esi
64001d9c:	push   ebp
64001d9d:	push   ebx
64001d9e:	call   0x64013ed6
64001da3:	mov    esi,eax
64001da5:	mov    eax,DWORD PTR [edi]
64001da7:	mov    edx,DWORD PTR [eax-0x8]
64001daa:	sub    eax,0x10
64001dad:	mov    ecx,0x1
64001db2:	sub    ecx,DWORD PTR [eax+0xc]
64001db5:	sub    edx,esi
64001db7:	add    esp,0x8
64001dba:	or     ecx,edx
64001dbc:	jge    0x64001dc6
64001dbe:	push   esi
64001dbf:	mov    ecx,edi
64001dc1:	call   0x64001e00
64001dc6:	mov    ecx,DWORD PTR [edi]
64001dc8:	push   ebp
64001dc9:	push   ebx
64001dca:	lea    eax,[esi+0x1]
64001dcd:	push   eax
64001dce:	push   ecx
64001dcf:	call   0x6401406b
64001dd4:	add    esp,0x10
64001dd7:	test   esi,esi
64001dd9:	jl     0x64001df4
64001ddb:	mov    eax,DWORD PTR [edi]
64001ddd:	cmp    esi,DWORD PTR [eax-0x8]
64001de0:	jg     0x64001df4
64001de2:	mov    DWORD PTR [eax-0xc],esi
64001de5:	mov    edx,DWORD PTR [edi]
64001de7:	mov    WORD PTR [edx+esi*2],0x0
64001ded:	pop    esi
64001dee:	pop    ebp
64001def:	pop    edi
64001df0:	pop    ebx
64001df1:	ret    0x8
64001df4:	push   0x80070057
64001df9:	call   0x64001040
64001dfe:	int3   
64001dff:	int3   
64001e00:	mov    eax,DWORD PTR [ecx]
64001e02:	mov    edx,DWORD PTR [esp+0x4]
64001e06:	sub    eax,0x10
64001e09:	push   esi
64001e0a:	mov    esi,DWORD PTR [eax+0x4]
64001e0d:	cmp    esi,edx
64001e0f:	jle    0x64001e13
64001e11:	mov    edx,esi
64001e13:	cmp    DWORD PTR [eax+0xc],0x1
64001e17:	pop    esi
64001e18:	jle    0x64001e23
64001e1a:	mov    DWORD PTR [esp+0x4],edx
64001e1e:	jmp    0x64001950
64001e23:	mov    eax,DWORD PTR [eax+0x8]
64001e26:	cmp    eax,edx
64001e28:	jge    0x64001e49
64001e2a:	cmp    eax,0x400
64001e2f:	jle    0x64001e38
64001e31:	add    eax,0x400
64001e36:	jmp    0x64001e3a
64001e38:	add    eax,eax
64001e3a:	cmp    eax,edx
64001e3c:	jge    0x64001e40
64001e3e:	mov    eax,edx
64001e40:	mov    DWORD PTR [esp+0x4],eax
64001e44:	jmp    0x64001e50
64001e49:	ret    0x4
64001e4c:	int3   
64001e4d:	int3   
64001e4e:	int3   
64001e4f:	int3   
64001e50:	mov    edx,DWORD PTR [esp+0x4]
64001e54:	push   esi
64001e55:	mov    esi,ecx
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	mov    ecx,DWORD PTR [eax-0x10]
64001e5c:	sub    eax,0x10
64001e5f:	cmp    DWORD PTR [eax+0x8],edx
64001e62:	jge    0x64001e79
64001e64:	test   edx,edx
64001e66:	jle    0x64001e79
64001e68:	push   edi
64001e69:	mov    edi,DWORD PTR [ecx]
64001e6b:	push   0x2
64001e6d:	push   edx
64001e6e:	push   eax
64001e6f:	mov    eax,DWORD PTR [edi+0x8]
64001e72:	call   eax
64001e74:	test   eax,eax
64001e76:	pop    edi
64001e77:	jne    0x64001e7e
64001e79:	call   0x64001b50
64001e7e:	add    eax,0x10
64001e81:	mov    DWORD PTR [esi],eax
64001e83:	pop    esi
64001e84:	ret    0x4
64001e87:	int3   
64001e88:	int3   
64001e89:	int3   
64001e8a:	int3   
64001e8b:	int3   
64001e8c:	int3   
64001e8d:	int3   
64001e8e:	int3   
64001e8f:	int3   
64001e90:	mov    eax,DWORD PTR [esp+0x4]
64001e94:	cmp    eax,0x50
64001e97:	ja     0x64001ebb
64001e99:	movzx  ecx,BYTE PTR [eax+0x64001ed8]
64001ea0:	jmp    DWORD PTR [ecx*4+0x64001ec8]
64001ea7:	push   0x8007000e
64001eac:	call   0x64001040
64001eb1:	push   0x80070057
64001eb6:	call   0x64001040
64001ebb:	push   0x80004005
64001ec0:	call   0x64001040
64001ec5:	ret    
64001ec6:	mov    edi,edi
64001ec8:	lds    ebx,FWORD PTR [esi]
64001eca:	add    BYTE PTR [edi+eiz*4+0x1e],ah
64001ece:	add    BYTE PTR [ecx+esi*4+0x1e],ah
64001ed2:	add    BYTE PTR [ebx+edi*4+0x1e],ah
64001ed6:	add    BYTE PTR [eax+eax*1+0x3],ah
64001eda:	add    eax,DWORD PTR [ebx]
64001edc:	add    eax,DWORD PTR [ebx]
64001ede:	add    eax,DWORD PTR [ebx]
64001ee0:	add    eax,DWORD PTR [ebx]
64001ee2:	add    eax,DWORD PTR [ebx]
64001ee4:	add    DWORD PTR [ebx],eax
64001ee6:	add    eax,DWORD PTR [ebx]
64001ee8:	add    eax,DWORD PTR [ebx]
64001eea:	add    eax,DWORD PTR [ebx]
64001eec:	add    eax,DWORD PTR [ebx]
64001eee:	add    al,BYTE PTR [ebx]
64001ef0:	add    eax,DWORD PTR [ebx]
64001ef2:	add    eax,DWORD PTR [ebx]
64001ef4:	add    eax,DWORD PTR [ebx]
64001ef6:	add    eax,DWORD PTR [ebx]
64001ef8:	add    eax,DWORD PTR [ebx]
64001efa:	add    al,BYTE PTR [ebx]
64001efc:	add    eax,DWORD PTR [ebx]
64001efe:	add    eax,DWORD PTR [ebx]
64001f00:	add    eax,DWORD PTR [ebx]
64001f02:	add    eax,DWORD PTR [ebx]
64001f04:	add    eax,DWORD PTR [ebx]
64001f06:	add    eax,DWORD PTR [ebx]
64001f08:	add    eax,DWORD PTR [ebx]
64001f0a:	add    eax,DWORD PTR [ebx]
64001f0c:	add    eax,DWORD PTR [ebx]
64001f0e:	add    eax,DWORD PTR [ebx]
64001f10:	add    eax,DWORD PTR [ebx]
64001f12:	add    eax,DWORD PTR [ebx]
64001f14:	add    eax,DWORD PTR [ebx]
64001f16:	add    eax,DWORD PTR [ebx]
64001f18:	add    eax,DWORD PTR [ebx]
64001f1a:	add    eax,DWORD PTR [ebx]
64001f1c:	add    eax,DWORD PTR [ebx]
64001f1e:	add    eax,DWORD PTR [ebx]
64001f20:	add    eax,DWORD PTR [ebx]
64001f22:	add    eax,DWORD PTR [ebx]
64001f24:	add    eax,DWORD PTR [ebx]
64001f26:	add    eax,DWORD PTR [ebx]
64001f28:	add    ah,cl
64001f2a:	int3   
64001f2b:	int3   
64001f2c:	int3   
64001f2d:	int3   
64001f2e:	int3   
64001f2f:	int3   
64001f30:	push   ebx
64001f31:	mov    ebx,DWORD PTR [esp+0x8]
64001f35:	push   edi
64001f36:	mov    edi,DWORD PTR [esp+0x10]
64001f3a:	push   edi
64001f3b:	push   ebx
64001f3c:	call   DWORD PTR ds:0x64026034
64001f42:	test   eax,eax
64001f44:	jne    0x64001f49
64001f46:	pop    edi
64001f47:	pop    ebx
64001f48:	ret    
64001f49:	push   esi
64001f4a:	push   eax
64001f4b:	call   DWORD PTR ds:0x64026030
64001f51:	mov    esi,eax
64001f53:	test   esi,esi
64001f55:	je     0x64001f84
64001f57:	push   edi
64001f58:	push   ebx
64001f59:	call   DWORD PTR ds:0x6402602c
64001f5f:	mov    ecx,DWORD PTR [esp+0x18]
64001f63:	add    eax,esi
64001f65:	and    ecx,0xf
64001f68:	jbe    0x64001f80
64001f6a:	lea    ebx,[ebx+0x0]
64001f70:	cmp    esi,eax
64001f72:	jae    0x64001f84
64001f74:	sub    ecx,0x1
64001f77:	movzx  edx,WORD PTR [esi]
64001f7a:	lea    esi,[esi+edx*2+0x2]
64001f7e:	jne    0x64001f70
64001f80:	cmp    esi,eax
64001f82:	jb     0x64001f8a
64001f84:	pop    esi
64001f85:	pop    edi
64001f86:	xor    eax,eax
64001f88:	pop    ebx
64001f89:	ret    
64001f8a:	mov    ax,WORD PTR [esi]
64001f8d:	neg    ax
64001f90:	sbb    eax,eax
64001f92:	and    eax,esi
64001f94:	pop    esi
64001f95:	pop    edi
64001f96:	pop    ebx
64001f97:	ret    
64001f98:	int3   
64001f99:	int3   
64001f9a:	int3   
64001f9b:	int3   
64001f9c:	int3   
64001f9d:	int3   
64001f9e:	int3   
64001f9f:	int3   
64001fa0:	push   ebx
64001fa1:	push   ebp
64001fa2:	push   esi
64001fa3:	push   edi
64001fa4:	xor    edi,edi
64001fa6:	push   edi
64001fa7:	mov    ecx,0x640304cc
64001fac:	call   0x64013031
64001fb1:	mov    esi,eax
64001fb3:	test   esi,esi
64001fb5:	lea    ebp,[edi+0x1]
64001fb8:	je     0x64002007
64001fba:	mov    ebx,DWORD PTR [esp+0x14]
64001fbe:	mov    edi,edi
64001fc0:	test   edi,edi
64001fc2:	jne    0x64002007
64001fc4:	mov    eax,DWORD PTR [esp+0x18]
64001fc8:	mov    ecx,ebx
64001fca:	shr    ecx,0x4
64001fcd:	add    ecx,0x1
64001fd0:	push   eax
64001fd1:	movzx  edx,cx
64001fd4:	push   edx
64001fd5:	push   0x6
64001fd7:	push   esi
64001fd8:	call   DWORD PTR ds:0x6402603c
64001fde:	test   eax,eax
64001fe0:	je     0x64001ff3
64001fe2:	push   ebx
64001fe3:	push   eax
64001fe4:	push   esi
64001fe5:	call   0x64001f30
64001fea:	mov    edi,eax
64001fec:	add    esp,0xc
64001fef:	test   edi,edi
64001ff1:	jne    0x6400200e
64001ff3:	push   ebp
64001ff4:	mov    ecx,0x640304cc
64001ff9:	call   0x64013031
64001ffe:	mov    esi,eax
64002000:	add    ebp,0x1
64002003:	test   esi,esi
64002005:	jne    0x64001fc0
64002007:	pop    edi
64002008:	pop    esi
64002009:	pop    ebp
6400200a:	xor    eax,eax
6400200c:	pop    ebx
6400200d:	ret    
6400200e:	pop    edi
6400200f:	mov    eax,esi
64002011:	pop    esi
64002012:	pop    ebp
64002013:	pop    ebx
64002014:	ret    
64002015:	int3   
64002016:	int3   
64002017:	int3   
64002018:	int3   
64002019:	int3   
6400201a:	int3   
6400201b:	int3   
6400201c:	int3   
6400201d:	int3   
6400201e:	int3   
6400201f:	int3   
64002020:	push   0xffffffff
64002022:	push   0x64023a58
64002027:	mov    eax,fs:0x0
6400202d:	push   eax
6400202e:	push   ecx
6400202f:	push   esi
64002030:	mov    eax,ds:0x6402f09c
64002035:	xor    eax,esp
64002037:	push   eax
64002038:	lea    eax,[esp+0xc]
6400203c:	mov    fs:0x0,eax
64002042:	mov    esi,ecx
64002044:	mov    DWORD PTR [esp+0x8],esi
64002048:	call   0x6401344c
6400204d:	xor    eax,eax
6400204f:	mov    DWORD PTR [esp+0x14],eax
64002053:	lea    ecx,[esi+0xc]
64002056:	mov    DWORD PTR [esi],0x6402644c
6400205c:	push   0xffffffff
6400205e:	mov    DWORD PTR [ecx+0x14],eax
64002061:	mov    DWORD PTR [ecx+0x18],0xf
64002068:	push   eax
64002069:	mov    BYTE PTR [ecx+0x4],al
6400206c:	mov    eax,DWORD PTR [esp+0x24]
64002070:	push   eax
64002071:	call   0x64001780
64002076:	mov    eax,esi
64002078:	mov    ecx,DWORD PTR [esp+0xc]
6400207c:	mov    DWORD PTR fs:0x0,ecx
64002083:	pop    ecx
64002084:	pop    esi
64002085:	add    esp,0x10
64002088:	ret    0x4
6400208b:	int3   
6400208c:	int3   
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   esi
64002091:	mov    esi,ecx
64002093:	mov    DWORD PTR [esi],0x6402644c
64002099:	cmp    DWORD PTR [esi+0x24],0x10
6400209d:	jb     0x640020ab
6400209f:	mov    eax,DWORD PTR [esi+0x10]
640020a2:	push   eax
640020a3:	call   0x64013402
640020a8:	add    esp,0x4
640020ab:	xor    eax,eax
640020ad:	mov    DWORD PTR [esi+0x24],0xf
640020b4:	mov    DWORD PTR [esi+0x20],eax
640020b7:	mov    BYTE PTR [esi+0x10],al
640020ba:	mov    ecx,esi
640020bc:	pop    esi
640020bd:	jmp    0x6401351b
640020c2:	int3   
640020c3:	int3   
640020c4:	int3   
640020c5:	int3   
640020c6:	int3   
640020c7:	int3   
640020c8:	int3   
640020c9:	int3   
640020ca:	int3   
640020cb:	int3   
640020cc:	int3   
640020cd:	int3   
640020ce:	int3   
640020cf:	int3   
640020d0:	push   esi
640020d1:	mov    esi,ecx
640020d3:	mov    DWORD PTR [esi],0x6402644c
640020d9:	cmp    DWORD PTR [esi+0x24],0x10
640020dd:	jb     0x640020eb
640020df:	mov    eax,DWORD PTR [esi+0x10]
640020e2:	push   eax
640020e3:	call   0x64013402
640020e8:	add    esp,0x4
640020eb:	xor    eax,eax
640020ed:	mov    DWORD PTR [esi+0x24],0xf
640020f4:	mov    DWORD PTR [esi+0x20],eax
640020f7:	mov    ecx,esi
640020f9:	mov    BYTE PTR [esi+0x10],al
640020fc:	call   0x6401351b
64002101:	test   BYTE PTR [esp+0x8],0x1
64002106:	je     0x64002111
64002108:	push   esi
64002109:	call   0x64013402
6400210e:	add    esp,0x4
64002111:	mov    eax,esi
64002113:	pop    esi
64002114:	ret    0x4
64002117:	int3   
64002118:	int3   
64002119:	int3   
6400211a:	int3   
6400211b:	int3   
6400211c:	int3   
6400211d:	int3   
6400211e:	int3   
6400211f:	int3   
64002120:	push   0xffffffff
64002122:	push   0x64023a28
64002127:	mov    eax,fs:0x0
6400212d:	push   eax
6400212e:	push   ecx
6400212f:	push   esi
64002130:	push   edi
64002131:	mov    eax,ds:0x6402f09c
64002136:	xor    eax,esp
64002138:	push   eax
64002139:	lea    eax,[esp+0x10]
6400213d:	mov    fs:0x0,eax
64002143:	mov    esi,ecx
64002145:	mov    DWORD PTR [esp+0xc],esi
64002149:	mov    edi,DWORD PTR [esp+0x20]
6400214d:	push   edi
6400214e:	call   0x640134c3
64002153:	xor    edx,edx
64002155:	mov    DWORD PTR [esp+0x18],edx
64002159:	push   0xffffffff
6400215b:	lea    ecx,[esi+0xc]
6400215e:	mov    DWORD PTR [esi],0x6402644c
64002164:	lea    eax,[edi+0xc]
64002167:	push   edx
64002168:	mov    DWORD PTR [ecx+0x18],0xf
6400216f:	mov    DWORD PTR [ecx+0x14],edx
64002172:	push   eax
64002173:	mov    BYTE PTR [ecx+0x4],dl
64002176:	call   0x64001780
6400217b:	mov    eax,esi
6400217d:	mov    ecx,DWORD PTR [esp+0x10]
64002181:	mov    DWORD PTR fs:0x0,ecx
64002188:	pop    ecx
64002189:	pop    edi
6400218a:	pop    esi
6400218b:	add    esp,0x10
6400218e:	ret    0x4
64002191:	int3   
64002192:	int3   
64002193:	int3   
64002194:	int3   
64002195:	int3   
64002196:	int3   
64002197:	int3   
64002198:	int3   
64002199:	int3   
6400219a:	int3   
6400219b:	int3   
6400219c:	int3   
6400219d:	int3   
6400219e:	int3   
6400219f:	int3   
640021a0:	push   0xffffffff
640021a2:	push   0x64024adb
640021a7:	mov    eax,fs:0x0
640021ad:	push   eax
640021ae:	sub    esp,0x41c
640021b4:	mov    eax,ds:0x6402f09c
640021b9:	xor    eax,esp
640021bb:	mov    DWORD PTR [esp+0x418],eax
640021c2:	push   ebx
640021c3:	push   ebp
640021c4:	push   esi
640021c5:	push   edi
640021c6:	mov    eax,ds:0x6402f09c
640021cb:	xor    eax,esp
640021cd:	push   eax
640021ce:	lea    eax,[esp+0x430]
640021d5:	mov    fs:0x0,eax
640021db:	mov    esi,DWORD PTR [esp+0x440]
640021e2:	mov    ebx,DWORD PTR [esp+0x444]
640021e9:	mov    ebp,DWORD PTR [esp+0x448]
640021f0:	lea    eax,[esp+0x224]
640021f7:	push   eax
640021f8:	push   0x100
640021fd:	mov    DWORD PTR [esp+0x20],esi
64002201:	mov    DWORD PTR [esp+0x1c],0x0
64002209:	call   0x6400e0f0
6400220e:	call   eax
64002210:	cmp    eax,0x100
64002215:	jbe    0x64002228
64002217:	push   0x640286e0
6400221c:	mov    ecx,esi
6400221e:	call   0x64002590
64002223:	jmp    0x640023b5
64002228:	lea    ecx,[esp+0x1c]
6400222c:	push   ecx
6400222d:	push   0x0
6400222f:	lea    edx,[esp+0x22c]
64002236:	push   0x640286e4
6400223b:	push   edx
6400223c:	call   0x6400e1d0
64002241:	call   eax
64002243:	test   eax,eax
64002245:	je     0x64002217
64002247:	mov    edi,DWORD PTR ds:0x64026050
6400224d:	xor    esi,esi
6400224f:	nop
64002250:	cmp    esi,0x708
64002256:	je     0x64002333
6400225c:	lea    eax,[esp+0x1c]
64002260:	push   eax
64002261:	call   0x6400df30
64002266:	call   eax
64002268:	test   eax,eax
6400226a:	jne    0x6400227d
6400226c:	push   esi
6400226d:	call   edi
6400226f:	add    esi,0xc8
64002275:	cmp    esi,0x7d0
6400227b:	jne    0x64002250
6400227d:	xor    esi,esi
6400227f:	cmp    esi,0x708
64002285:	je     0x64002333
6400228b:	lea    ecx,[esp+0x1c]
6400228f:	push   0x0
64002291:	push   ecx
64002292:	call   0x6400e2b0
64002297:	call   eax
64002299:	test   eax,eax
6400229b:	jne    0x640022ae
6400229d:	push   esi
6400229e:	call   edi
640022a0:	add    esi,0xc8
640022a6:	cmp    esi,0x7d0
640022ac:	jne    0x6400227f
640022ae:	lea    eax,[esp+0x1c]
640022b2:	lea    edx,[eax+0x2]
640022b5:	mov    cx,WORD PTR [eax]
640022b8:	add    eax,0x2
640022bb:	test   cx,cx
640022be:	jne    0x640022b5
640022c0:	sub    eax,edx
640022c2:	sar    eax,1
640022c4:	push   eax
640022c5:	lea    edx,[esp+0x20]
640022c9:	push   edx
640022ca:	mov    ecx,ebp
640022cc:	call   0x64002ae0
640022d1:	lea    eax,[esp+0x1c]
640022d5:	push   eax
640022d6:	lea    ecx,[esp+0x18]
640022da:	call   0x64002590
640022df:	push   0x640286ec
640022e4:	lea    ecx,[esp+0x18]
640022e8:	mov    DWORD PTR [esp+0x43c],0x0
640022f3:	call   0x64002660
640022f8:	mov    eax,DWORD PTR [ebx]
640022fa:	mov    ecx,DWORD PTR [eax-0xc]
640022fd:	push   ecx
640022fe:	push   eax
640022ff:	lea    ecx,[esp+0x1c]
64002303:	call   0x640029e0
64002308:	mov    esi,DWORD PTR [esp+0x14]
6400230c:	mov    ecx,DWORD PTR [esi-0x10]
6400230f:	mov    edx,DWORD PTR [ecx]
64002311:	mov    eax,DWORD PTR [edx+0x10]
64002314:	add    esi,0xfffffff0
64002317:	call   eax
64002319:	cmp    DWORD PTR [esi+0xc],0x0
6400231d:	lea    edx,[esi+0xc]
64002320:	jl     0x64002345
64002322:	cmp    eax,DWORD PTR [esi]
64002324:	jne    0x64002345
64002326:	mov    edi,esi
64002328:	mov    ecx,0x1
6400232d:	lock xadd DWORD PTR [edx],ecx
64002331:	jmp    0x64002381
64002333:	mov    esi,DWORD PTR [esp+0x18]
64002337:	push   0x640286e0
6400233c:	mov    ecx,esi
6400233e:	call   0x64002590
64002343:	jmp    0x640023b5
64002345:	mov    ecx,DWORD PTR [esi+0x4]
64002348:	mov    edx,DWORD PTR [eax]
6400234a:	mov    edx,DWORD PTR [edx]
6400234c:	push   0x2
6400234e:	push   ecx
6400234f:	mov    ecx,eax
64002351:	call   edx
64002353:	mov    edi,eax
64002355:	test   edi,edi
64002357:	jne    0x6400235e
64002359:	jmp    0x64001b50
6400235e:	mov    eax,DWORD PTR [esi+0x4]
64002361:	mov    DWORD PTR [edi+0x4],eax
64002364:	mov    eax,DWORD PTR [esi+0x4]
64002367:	lea    ecx,[eax+eax*1+0x2]
6400236b:	push   ecx
6400236c:	add    esi,0x10
6400236f:	lea    edx,[eax+eax*1+0x2]
64002373:	push   esi
64002374:	push   edx
64002375:	lea    eax,[edi+0x10]
64002378:	push   eax
64002379:	call   0x640135b8
6400237e:	add    esp,0x10
64002381:	mov    esi,DWORD PTR [esp+0x18]
64002385:	mov    DWORD PTR [esp+0x438],0xffffffff
64002390:	mov    eax,DWORD PTR [esp+0x14]
64002394:	add    edi,0x10
64002397:	add    eax,0xfffffff0
6400239a:	mov    DWORD PTR [esi],edi
6400239c:	lea    ecx,[eax+0xc]
6400239f:	or     edx,0xffffffff
640023a2:	lock xadd DWORD PTR [ecx],edx
640023a6:	dec    edx
640023a7:	test   edx,edx
640023a9:	jg     0x640023b5
640023ab:	mov    ecx,DWORD PTR [eax]
640023ad:	mov    edx,DWORD PTR [ecx]
640023af:	push   eax
640023b0:	mov    eax,DWORD PTR [edx+0x4]
640023b3:	call   eax
640023b5:	mov    eax,esi
640023b7:	mov    ecx,DWORD PTR [esp+0x430]
640023be:	mov    DWORD PTR fs:0x0,ecx
640023c5:	pop    ecx
640023c6:	pop    edi
640023c7:	pop    esi
640023c8:	pop    ebp
640023c9:	pop    ebx
640023ca:	mov    ecx,DWORD PTR [esp+0x418]
640023d1:	xor    ecx,esp
640023d3:	call   0x64013c5c
640023d8:	add    esp,0x428
640023de:	ret    
640023df:	int3   
640023e0:	push   0xffffffff
640023e2:	push   0x64024ab0
640023e7:	mov    eax,fs:0x0
640023ed:	push   eax
640023ee:	sub    esp,0x4c
640023f1:	push   ebx
640023f2:	push   esi
640023f3:	push   edi
640023f4:	mov    eax,ds:0x6402f09c
640023f9:	xor    eax,esp
640023fb:	push   eax
640023fc:	lea    eax,[esp+0x5c]
64002400:	mov    fs:0x0,eax
64002406:	xor    ebx,ebx
64002408:	push   ebx
64002409:	push   0x80
6400240e:	push   0x2
64002410:	push   ebx
64002411:	push   ebx
64002412:	mov    DWORD PTR [esp+0x78],ebx
64002416:	mov    edi,DWORD PTR [esp+0x80]
6400241d:	push   0x40000000
64002422:	push   edi
64002423:	call   0x6400e010
64002428:	call   eax
6400242a:	mov    esi,eax
6400242c:	mov    DWORD PTR [esp+0x10],esi
64002430:	cmp    esi,0xffffffff
64002433:	mov    BYTE PTR [esp+0x64],0x1
64002438:	push   ebx
64002439:	jne    0x6400247b
6400243b:	push   0x640286e2
64002440:	lea    ecx,[esp+0x20]
64002444:	mov    DWORD PTR [esp+0x38],0xf
6400244c:	mov    DWORD PTR [esp+0x34],ebx
64002450:	mov    BYTE PTR [esp+0x24],bl
64002454:	call   0x64001860
64002459:	lea    eax,[esp+0x18]
6400245d:	push   eax
6400245e:	lea    ecx,[esp+0x38]
64002462:	mov    BYTE PTR [esp+0x68],0x2
64002467:	call   0x64002020
6400246c:	push   0x6402c5fc
64002471:	lea    ecx,[esp+0x38]
64002475:	push   ecx
64002476:	call   0x6401384b
6400247b:	mov    eax,DWORD PTR [esp+0x78]
6400247f:	mov    ecx,DWORD PTR [esp+0x74]
64002483:	lea    edx,[esp+0x18]
64002487:	push   edx
64002488:	push   eax
64002489:	push   ecx
6400248a:	push   esi
6400248b:	call   DWORD PTR ds:0x64026088
64002491:	test   eax,eax
64002493:	jne    0x640024d6
64002495:	push   ebx
64002496:	push   0x640286e2
6400249b:	lea    ecx,[esp+0x20]
6400249f:	mov    DWORD PTR [esp+0x38],0xf
640024a7:	mov    DWORD PTR [esp+0x34],ebx
640024ab:	mov    BYTE PTR [esp+0x24],bl
640024af:	call   0x64001860
640024b4:	lea    edx,[esp+0x18]
640024b8:	push   edx
640024b9:	lea    ecx,[esp+0x38]
640024bd:	mov    BYTE PTR [esp+0x68],0x3
640024c2:	call   0x64002020
640024c7:	push   0x6402c5fc
640024cc:	lea    eax,[esp+0x38]
640024d0:	push   eax
640024d1:	call   0x6401384b
640024d6:	cmp    esi,ebx
640024d8:	je     0x640024f0
640024da:	call   DWORD PTR ds:0x64026044
640024e0:	push   esi
640024e1:	mov    ebx,eax
640024e3:	call   DWORD PTR ds:0x64026040
640024e9:	push   ebx
640024ea:	call   DWORD PTR ds:0x64026060
640024f0:	lea    eax,[edi-0x10]
640024f3:	mov    DWORD PTR [esp+0x64],0xffffffff
640024fb:	lea    ecx,[eax+0xc]
640024fe:	or     edx,0xffffffff
64002501:	lock xadd DWORD PTR [ecx],edx
64002505:	dec    edx
64002506:	test   edx,edx
64002508:	jg     0x64002514
6400250a:	mov    ecx,DWORD PTR [eax]
6400250c:	mov    edx,DWORD PTR [ecx]
6400250e:	push   eax
6400250f:	mov    eax,DWORD PTR [edx+0x4]
64002512:	call   eax
64002514:	mov    ecx,DWORD PTR [esp+0x5c]
64002518:	mov    DWORD PTR fs:0x0,ecx
6400251f:	pop    ecx
64002520:	pop    edi
64002521:	pop    esi
64002522:	pop    ebx
64002523:	add    esp,0x58
64002526:	ret    
64002527:	int3   
64002528:	int3   
64002529:	int3   
6400252a:	int3   
6400252b:	int3   
6400252c:	int3   
6400252d:	int3   
6400252e:	int3   
6400252f:	int3   
64002530:	sub    esp,0x8
64002533:	mov    DWORD PTR [esp],0x0
6400253a:	mov    DWORD PTR [esp+0x4],0x0
64002542:	call   DWORD PTR ds:0x6402f06c
64002548:	mov    eax,DWORD PTR [esp+0x10]
6400254c:	mov    eax,DWORD PTR [eax]
6400254e:	lea    ecx,[esp+0x4]
64002552:	push   ecx
64002553:	push   0x0
64002555:	lea    edx,[esp+0x8]
64002559:	push   edx
6400255a:	push   0x0
6400255c:	push   0x0
6400255e:	push   0x5
64002560:	push   0x1
64002562:	push   eax
64002563:	call   0x6400ed30
64002568:	call   eax
6400256a:	test   eax,eax
6400256c:	jne    0x6400258a
6400256e:	mov    ecx,DWORD PTR [esp]
64002571:	mov    eax,DWORD PTR [esp+0xc]
64002575:	mov    eax,DWORD PTR [eax]
64002577:	push   0x0
64002579:	push   ecx
6400257a:	push   0x0
6400257c:	push   0x0
6400257e:	push   0x4
64002580:	push   0x1
64002582:	push   eax
64002583:	call   0x6400ee10
64002588:	call   eax
6400258a:	add    esp,0x8
6400258d:	ret    
6400258e:	int3   
6400258f:	int3   
64002590:	push   0xffffffff
64002592:	push   0x64023f98
64002597:	mov    eax,fs:0x0
6400259d:	push   eax
6400259e:	push   ecx
6400259f:	push   esi
640025a0:	push   edi
640025a1:	mov    eax,ds:0x6402f09c
640025a6:	xor    eax,esp
640025a8:	push   eax
640025a9:	lea    eax,[esp+0x10]
640025ad:	mov    fs:0x0,eax
640025b3:	mov    edi,ecx
640025b5:	mov    DWORD PTR [esp+0xc],edi
640025b9:	mov    eax,ds:0x64030540
640025be:	mov    edx,DWORD PTR [eax+0xc]
640025c1:	mov    ecx,0x64030540
640025c6:	call   edx
640025c8:	add    eax,0x10
640025cb:	mov    DWORD PTR [edi],eax
640025cd:	mov    edx,DWORD PTR [esp+0x20]
640025d1:	test   edx,edx
640025d3:	mov    DWORD PTR [esp+0x18],0x0
640025db:	je     0x64002602
640025dd:	test   edx,0xffff0000
640025e3:	jne    0x64002606
640025e5:	movzx  esi,dx
640025e8:	push   0x0
640025ea:	push   esi
640025eb:	call   0x64001fa0
640025f0:	add    esp,0x8
640025f3:	test   eax,eax
640025f5:	je     0x64002628
640025f7:	push   esi
640025f8:	push   eax
640025f9:	mov    ecx,edi
640025fb:	call   0x64002910
64002600:	jmp    0x64002628
64002602:	xor    eax,eax
64002604:	jmp    0x6400261f
64002606:	mov    eax,edx
64002608:	lea    esi,[eax+0x2]
6400260b:	jmp    0x64002610
6400260d:	lea    ecx,[ecx+0x0]
64002610:	mov    cx,WORD PTR [eax]
64002613:	add    eax,0x2
64002616:	test   cx,cx
64002619:	jne    0x64002610
6400261b:	sub    eax,esi
6400261d:	sar    eax,1
6400261f:	push   eax
64002620:	push   edx
64002621:	mov    ecx,edi
64002623:	call   0x64002ae0
64002628:	mov    eax,edi
6400262a:	mov    ecx,DWORD PTR [esp+0x10]
6400262e:	mov    DWORD PTR fs:0x0,ecx
64002635:	pop    ecx
64002636:	pop    edi
64002637:	pop    esi
64002638:	add    esp,0x10
6400263b:	ret    0x4
6400263e:	int3   
6400263f:	int3   
64002640:	mov    eax,DWORD PTR [esp+0x4]
64002644:	mov    eax,DWORD PTR [eax]
64002646:	push   esi
64002647:	mov    esi,ecx
64002649:	mov    ecx,DWORD PTR [eax-0xc]
6400264c:	push   ecx
6400264d:	push   eax
6400264e:	mov    ecx,esi
64002650:	call   0x640029e0
64002655:	mov    eax,esi
64002657:	pop    esi
64002658:	ret    0x4
6400265b:	int3   
6400265c:	int3   
6400265d:	int3   
6400265e:	int3   
6400265f:	int3   
64002660:	push   0xffffffff
64002662:	push   0x64023f68
64002667:	mov    eax,fs:0x0
6400266d:	push   eax
6400266e:	push   ecx
6400266f:	push   esi
64002670:	mov    eax,ds:0x6402f09c
64002675:	xor    eax,esp
64002677:	push   eax
64002678:	lea    eax,[esp+0xc]
6400267c:	mov    fs:0x0,eax
64002682:	mov    esi,ecx
64002684:	mov    eax,DWORD PTR [esi]
64002686:	mov    ecx,DWORD PTR [eax-0x10]
64002689:	test   ecx,ecx
6400268b:	je     0x64002698
6400268d:	mov    edx,DWORD PTR [ecx]
6400268f:	mov    eax,DWORD PTR [edx+0x10]
64002692:	call   eax
64002694:	test   eax,eax
64002696:	jne    0x640026a8
64002698:	mov    edx,DWORD PTR ds:0x64030540
6400269e:	mov    eax,DWORD PTR [edx+0x10]
640026a1:	mov    ecx,0x64030540
640026a6:	call   eax
640026a8:	mov    ecx,DWORD PTR [esp+0x1c]
640026ac:	push   eax
640026ad:	push   ecx
640026ae:	lea    ecx,[esp+0x10]
640026b2:	call   0x64002760
640026b7:	mov    DWORD PTR [esp+0x14],0x0
640026bf:	mov    eax,DWORD PTR [esp+0x8]
640026c3:	mov    ecx,DWORD PTR [eax-0xc]
640026c6:	push   ecx
640026c7:	push   eax
640026c8:	mov    ecx,esi
640026ca:	call   0x640029e0
640026cf:	mov    DWORD PTR [esp+0x14],0xffffffff
640026d7:	mov    eax,DWORD PTR [esp+0x8]
640026db:	add    eax,0xfffffff0
640026de:	lea    edx,[eax+0xc]
640026e1:	or     ecx,0xffffffff
640026e4:	lock xadd DWORD PTR [edx],ecx
640026e8:	dec    ecx
640026e9:	test   ecx,ecx
640026eb:	jg     0x640026f7
640026ed:	mov    ecx,DWORD PTR [eax]
640026ef:	mov    edx,DWORD PTR [ecx]
640026f1:	push   eax
640026f2:	mov    eax,DWORD PTR [edx+0x4]
640026f5:	call   eax
640026f7:	mov    eax,esi
640026f9:	mov    ecx,DWORD PTR [esp+0xc]
640026fd:	mov    DWORD PTR fs:0x0,ecx
64002704:	pop    ecx
64002705:	pop    esi
64002706:	add    esp,0x10
64002709:	ret    0x4
6400270c:	int3   
6400270d:	int3   
6400270e:	int3   
6400270f:	int3   
64002710:	mov    edx,DWORD PTR [esp+0x4]
64002714:	push   esi
64002715:	mov    esi,ecx
64002717:	mov    eax,edx
64002719:	push   edi
6400271a:	mov    DWORD PTR [esi+0x18],0xf
64002721:	mov    DWORD PTR [esi+0x14],0x0
64002728:	mov    BYTE PTR [esi+0x4],0x0
6400272c:	lea    edi,[eax+0x1]
6400272f:	nop
64002730:	mov    cl,BYTE PTR [eax]
64002732:	add    eax,0x1
64002735:	test   cl,cl
64002737:	jne    0x64002730
64002739:	sub    eax,edi
6400273b:	push   eax
6400273c:	push   edx
6400273d:	mov    ecx,esi
6400273f:	call   0x64001860
64002744:	pop    edi
64002745:	mov    eax,esi
64002747:	pop    esi
64002748:	ret    0x4
6400274b:	int3   
6400274c:	int3   
6400274d:	int3   
6400274e:	int3   
6400274f:	int3   
64002750:	mov    eax,DWORD PTR [ecx]
64002752:	push   eax
64002753:	call   0x64013402
64002758:	pop    ecx
64002759:	ret    
6400275a:	int3   
6400275b:	int3   
6400275c:	int3   
6400275d:	int3   
6400275e:	int3   
6400275f:	int3   
64002760:	push   0xffffffff
64002762:	push   0x64023f38
64002767:	mov    eax,fs:0x0
6400276d:	push   eax
6400276e:	push   ecx
6400276f:	push   esi
64002770:	push   edi
64002771:	mov    eax,ds:0x6402f09c
64002776:	xor    eax,esp
64002778:	push   eax
64002779:	lea    eax,[esp+0x10]
6400277d:	mov    fs:0x0,eax
64002783:	mov    esi,ecx
64002785:	mov    DWORD PTR [esp+0xc],esi
64002789:	mov    ecx,DWORD PTR [esp+0x24]
6400278d:	xor    eax,eax
6400278f:	test   ecx,ecx
64002791:	setne  al
64002794:	test   eax,eax
64002796:	jne    0x640027a2
64002798:	push   0x80004005
6400279d:	call   0x64001040
640027a2:	mov    eax,DWORD PTR [ecx]
640027a4:	mov    edx,DWORD PTR [eax+0xc]
640027a7:	call   edx
640027a9:	add    eax,0x10
640027ac:	mov    DWORD PTR [esi],eax
640027ae:	mov    eax,DWORD PTR [esp+0x20]
640027b2:	test   eax,eax
640027b4:	mov    DWORD PTR [esp+0x18],0x0
640027bc:	je     0x640027e2
640027be:	test   eax,0xffff0000
640027c3:	jne    0x640027e2
640027c5:	movzx  edi,ax
640027c8:	push   0x0
640027ca:	push   edi
640027cb:	call   0x64001fa0
640027d0:	add    esp,0x8
640027d3:	test   eax,eax
640027d5:	je     0x640027ea
640027d7:	push   edi
640027d8:	push   eax
640027d9:	mov    ecx,esi
640027db:	call   0x64002910
640027e0:	jmp    0x640027ea
640027e2:	push   eax
640027e3:	mov    ecx,esi
640027e5:	call   0x64002800
640027ea:	mov    eax,esi
640027ec:	mov    ecx,DWORD PTR [esp+0x10]
640027f0:	mov    DWORD PTR fs:0x0,ecx
640027f7:	pop    ecx
640027f8:	pop    edi
640027f9:	pop    esi
640027fa:	add    esp,0x10
640027fd:	ret    0x8
64002800:	push   ebx
64002801:	mov    ebx,DWORD PTR [esp+0x8]
64002805:	test   ebx,ebx
64002807:	push   ebp
64002808:	push   esi
64002809:	push   edi
6400280a:	mov    edi,ecx
6400280c:	je     0x64002884
6400280e:	call   DWORD PTR ds:0x6402f06c
64002814:	mov    ebp,DWORD PTR ds:0x64026024
6400281a:	push   0x0
6400281c:	push   0x0
6400281e:	push   0xffffffff
64002820:	push   ebx
64002821:	push   0x0
64002823:	push   eax
64002824:	call   ebp
64002826:	mov    esi,eax
64002828:	sub    esi,0x1
6400282b:	test   esi,esi
6400282d:	jle    0x64002884
6400282f:	mov    eax,DWORD PTR [edi]
64002831:	mov    edx,DWORD PTR [eax-0x8]
64002834:	sub    eax,0x10
64002837:	mov    ecx,0x1
6400283c:	sub    ecx,DWORD PTR [eax+0xc]
6400283f:	sub    edx,esi
64002841:	or     ecx,edx
64002843:	jge    0x6400284d
64002845:	push   esi
64002846:	mov    ecx,edi
64002848:	call   0x64001e00
6400284d:	mov    eax,DWORD PTR [edi]
6400284f:	push   esi
64002850:	push   eax
64002851:	push   0xffffffff
64002853:	push   ebx
64002854:	push   0x0
64002856:	call   DWORD PTR ds:0x6402f06c
6400285c:	push   eax
6400285d:	call   ebp
6400285f:	mov    eax,DWORD PTR [edi]
64002861:	cmp    esi,DWORD PTR [eax-0x8]
64002864:	jg     0x6400287a
64002866:	mov    DWORD PTR [eax-0xc],esi
64002869:	mov    eax,DWORD PTR [edi]
6400286b:	mov    WORD PTR [eax+esi*2],0x0
64002871:	mov    eax,edi
64002873:	pop    edi
64002874:	pop    esi
64002875:	pop    ebp
64002876:	pop    ebx
64002877:	ret    0x4
6400287a:	push   0x80070057
6400287f:	call   0x64001040
64002884:	mov    ecx,edi
64002886:	call   0x64002a70
6400288b:	mov    eax,edi
6400288d:	pop    edi
6400288e:	pop    esi
6400288f:	pop    ebp
64002890:	pop    ebx
64002891:	ret    0x4
64002894:	int3   
64002895:	int3   
64002896:	int3   
64002897:	int3   
64002898:	int3   
64002899:	int3   
6400289a:	int3   
6400289b:	int3   
6400289c:	int3   
6400289d:	int3   
6400289e:	int3   
6400289f:	int3   
640028a0:	push   esi
640028a1:	mov    esi,DWORD PTR [esp+0x8]
640028a5:	mov    ecx,DWORD PTR [esi]
640028a7:	mov    eax,DWORD PTR [ecx]
640028a9:	mov    edx,DWORD PTR [eax+0x10]
640028ac:	push   edi
640028ad:	call   edx
640028af:	cmp    DWORD PTR [esi+0xc],0x0
640028b3:	lea    ecx,[esi+0xc]
640028b6:	jl     0x640028cc
640028b8:	cmp    eax,DWORD PTR [esi]
640028ba:	jne    0x640028cc
640028bc:	mov    edi,esi
640028be:	mov    eax,0x1
640028c3:	lock xadd DWORD PTR [ecx],eax
640028c7:	mov    eax,edi
640028c9:	pop    edi
640028ca:	pop    esi
640028cb:	ret    
640028cc:	mov    ecx,DWORD PTR [esi+0x4]
640028cf:	mov    edx,DWORD PTR [eax]
640028d1:	mov    edx,DWORD PTR [edx]
640028d3:	push   0x2
640028d5:	push   ecx
640028d6:	mov    ecx,eax
640028d8:	call   edx
640028da:	mov    edi,eax
640028dc:	test   edi,edi
640028de:	jne    0x640028e5
640028e0:	jmp    0x64001b50
640028e5:	mov    eax,DWORD PTR [esi+0x4]
640028e8:	mov    DWORD PTR [edi+0x4],eax
640028eb:	mov    eax,DWORD PTR [esi+0x4]
640028ee:	lea    eax,[eax+eax*1+0x2]
640028f2:	push   eax
640028f3:	add    esi,0x10
640028f6:	push   esi
640028f7:	push   eax
640028f8:	lea    ecx,[edi+0x10]
640028fb:	push   ecx
640028fc:	call   0x640135b8
64002901:	add    esp,0x10
64002904:	mov    eax,edi
64002906:	pop    edi
64002907:	pop    esi
64002908:	ret    
64002909:	int3   
6400290a:	int3   
6400290b:	int3   
6400290c:	int3   
6400290d:	int3   
6400290e:	int3   
6400290f:	int3   
64002910:	push   ebx
64002911:	push   esi
64002912:	mov    esi,DWORD PTR [esp+0x10]
64002916:	mov    eax,esi
64002918:	shr    eax,0x4
6400291b:	push   edi
6400291c:	mov    edi,DWORD PTR [esp+0x10]
64002920:	add    eax,0x1
64002923:	mov    ebx,ecx
64002925:	movzx  ecx,ax
64002928:	push   0x6
6400292a:	push   ecx
6400292b:	push   edi
6400292c:	call   DWORD PTR ds:0x64026038
64002932:	test   eax,eax
64002934:	je     0x64002947
64002936:	push   esi
64002937:	push   eax
64002938:	push   edi
64002939:	call   0x64001f30
6400293e:	mov    esi,eax
64002940:	add    esp,0xc
64002943:	test   esi,esi
64002945:	jne    0x6400294f
64002947:	pop    edi
64002948:	pop    esi
64002949:	xor    eax,eax
6400294b:	pop    ebx
6400294c:	ret    0x8
6400294f:	mov    eax,DWORD PTR [ebx]
64002951:	movzx  edi,WORD PTR [esi]
64002954:	sub    eax,0x10
64002957:	mov    edx,0x1
6400295c:	sub    edx,DWORD PTR [eax+0xc]
6400295f:	mov    eax,DWORD PTR [eax+0x8]
64002962:	sub    eax,edi
64002964:	or     edx,eax
64002966:	jge    0x64002970
64002968:	push   edi
64002969:	mov    ecx,ebx
6400296b:	call   0x64001e00
64002970:	movzx  eax,WORD PTR [esi]
64002973:	cmp    eax,0xffffffff
64002976:	push   ebp
64002977:	mov    ebp,DWORD PTR [ebx]
64002979:	lea    edx,[esi+0x2]
6400297c:	jne    0x64002995
6400297e:	mov    eax,edx
64002980:	lea    esi,[eax+0x2]
64002983:	mov    cx,WORD PTR [eax]
64002986:	add    eax,0x2
64002989:	test   cx,cx
6400298c:	jne    0x64002983
6400298e:	sub    eax,esi
64002990:	sar    eax,1
64002992:	add    eax,0x1
64002995:	lea    ecx,[eax+eax*1]
64002998:	push   ecx
64002999:	push   edx
6400299a:	lea    esi,[edi+edi*1]
6400299d:	push   esi
6400299e:	push   ebp
6400299f:	call   0x640135b8
640029a4:	push   eax
640029a5:	call   0x64001e90
640029aa:	add    esp,0x14
640029ad:	test   edi,edi
640029af:	pop    ebp
640029b0:	jl     0x640029cf
640029b2:	mov    eax,DWORD PTR [ebx]
640029b4:	cmp    edi,DWORD PTR [eax-0x8]
640029b7:	jg     0x640029cf
640029b9:	mov    DWORD PTR [eax-0xc],edi
640029bc:	mov    edx,DWORD PTR [ebx]
640029be:	pop    edi
640029bf:	mov    WORD PTR [esi+edx*1],0x0
640029c5:	pop    esi
640029c6:	mov    eax,0x1
640029cb:	pop    ebx
640029cc:	ret    0x8
640029cf:	push   0x80070057
640029d4:	call   0x64001040
640029d9:	int3   
640029da:	int3   
640029db:	int3   
640029dc:	int3   
640029dd:	int3   
640029de:	int3   
640029df:	int3   
640029e0:	push   ebx
640029e1:	push   ebp
640029e2:	push   esi
640029e3:	mov    esi,DWORD PTR [esp+0x10]
640029e7:	mov    ebp,ecx
640029e9:	mov    eax,DWORD PTR [ebp+0x0]
640029ec:	mov    ebx,DWORD PTR [eax-0xc]
640029ef:	mov    ecx,DWORD PTR [esp+0x14]
640029f3:	sub    esi,eax
640029f5:	mov    edx,0x1
640029fa:	sub    edx,DWORD PTR [eax-0x4]
640029fd:	mov    eax,DWORD PTR [eax-0x8]
64002a00:	push   edi
64002a01:	lea    edi,[ebx+ecx*1]
64002a04:	sub    eax,edi
64002a06:	sar    esi,1
64002a08:	or     edx,eax
64002a0a:	jge    0x64002a14
64002a0c:	push   edi
64002a0d:	mov    ecx,ebp
64002a0f:	call   0x64001e00
64002a14:	cmp    esi,ebx
64002a16:	mov    ecx,DWORD PTR [ebp+0x0]
64002a19:	ja     0x64002a22
64002a1b:	lea    edx,[ecx+esi*2]
64002a1e:	mov    DWORD PTR [esp+0x14],edx
64002a22:	mov    eax,DWORD PTR [esp+0x18]
64002a26:	mov    edx,DWORD PTR [esp+0x14]
64002a2a:	add    eax,eax
64002a2c:	push   eax
64002a2d:	push   edx
64002a2e:	push   eax
64002a2f:	lea    eax,[ecx+ebx*2]
64002a32:	push   eax
64002a33:	call   0x640135b8
64002a38:	add    esp,0x10
64002a3b:	test   edi,edi
64002a3d:	jl     0x64002a5a
64002a3f:	mov    eax,DWORD PTR [ebp+0x0]
64002a42:	cmp    edi,DWORD PTR [eax-0x8]
64002a45:	jg     0x64002a5a
64002a47:	mov    DWORD PTR [eax-0xc],edi
64002a4a:	mov    ecx,DWORD PTR [ebp+0x0]
64002a4d:	mov    WORD PTR [ecx+edi*2],0x0
64002a53:	pop    edi
64002a54:	pop    esi
64002a55:	pop    ebp
64002a56:	pop    ebx
64002a57:	ret    0x8
64002a5a:	push   0x80070057
64002a5f:	call   0x64001040
64002a64:	int3   
64002a65:	int3   
64002a66:	int3   
64002a67:	int3   
64002a68:	int3   
64002a69:	int3   
64002a6a:	int3   
64002a6b:	int3   
64002a6c:	int3   
64002a6d:	int3   
64002a6e:	int3   
64002a6f:	int3   
64002a70:	push   esi
64002a71:	mov    esi,ecx
64002a73:	mov    ecx,DWORD PTR [esi]
64002a75:	cmp    DWORD PTR [ecx-0xc],0x0
64002a79:	lea    eax,[ecx-0x10]
64002a7c:	push   edi
64002a7d:	mov    edi,DWORD PTR [eax]
64002a7f:	je     0x64002acf
64002a81:	cmp    DWORD PTR [eax+0xc],0x0
64002a85:	lea    edx,[eax+0xc]
64002a88:	jge    0x64002aab
64002a8a:	cmp    DWORD PTR [ecx-0x8],0x0
64002a8e:	jge    0x64002a9a
64002a90:	push   0x80070057
64002a95:	call   0x64001040
64002a9a:	mov    DWORD PTR [ecx-0xc],0x0
64002aa1:	mov    eax,DWORD PTR [esi]
64002aa3:	pop    edi
64002aa4:	mov    WORD PTR [eax],0x0
64002aa9:	pop    esi
64002aaa:	ret    
64002aab:	or     ecx,0xffffffff
64002aae:	lock xadd DWORD PTR [edx],ecx
64002ab2:	dec    ecx
64002ab3:	test   ecx,ecx
64002ab5:	jg     0x64002ac1
64002ab7:	mov    ecx,DWORD PTR [eax]
64002ab9:	mov    edx,DWORD PTR [ecx]
64002abb:	push   eax
64002abc:	mov    eax,DWORD PTR [edx+0x4]
64002abf:	call   eax
64002ac1:	mov    edx,DWORD PTR [edi]
64002ac3:	mov    eax,DWORD PTR [edx+0xc]
64002ac6:	mov    ecx,edi
64002ac8:	call   eax
64002aca:	add    eax,0x10
64002acd:	mov    DWORD PTR [esi],eax
64002acf:	pop    edi
64002ad0:	pop    esi
64002ad1:	ret    
64002ad2:	int3   
64002ad3:	int3   
64002ad4:	int3   
64002ad5:	int3   
64002ad6:	int3   
64002ad7:	int3   
64002ad8:	int3   
64002ad9:	int3   
64002ada:	int3   
64002adb:	int3   
64002adc:	int3   
64002add:	int3   
64002ade:	int3   
64002adf:	int3   
64002ae0:	push   ebx
64002ae1:	mov    ebx,DWORD PTR [esp+0xc]
64002ae5:	test   ebx,ebx
64002ae7:	push   ebp
64002ae8:	mov    ebp,ecx
64002aea:	jne    0x64002af6
64002aec:	call   0x64002a70
64002af1:	pop    ebp
64002af2:	pop    ebx
64002af3:	ret    0x8
64002af6:	push   esi
64002af7:	mov    esi,DWORD PTR [esp+0x10]
64002afb:	test   esi,esi
64002afd:	jne    0x64002b09
64002aff:	push   0x80070057
64002b04:	call   0x64001040
64002b09:	mov    eax,DWORD PTR [ebp+0x0]
64002b0c:	mov    edx,DWORD PTR [eax-0x8]
64002b0f:	mov    ecx,0x1
64002b14:	sub    ecx,DWORD PTR [eax-0x4]
64002b17:	sub    esi,eax
64002b19:	sub    edx,ebx
64002b1b:	sar    esi,1
64002b1d:	or     ecx,edx
64002b1f:	push   edi
64002b20:	mov    edi,DWORD PTR [eax-0xc]
64002b23:	jge    0x64002b2d
64002b25:	push   ebx
64002b26:	mov    ecx,ebp
64002b28:	call   0x64001e00
64002b2d:	mov    eax,DWORD PTR [ebp+0x0]
64002b30:	cmp    esi,edi
64002b32:	lea    edi,[ebx+ebx*1]
64002b35:	push   edi
64002b36:	ja     0x64002b45
64002b38:	lea    ecx,[eax+esi*2]
64002b3b:	push   ecx
64002b3c:	push   edi
64002b3d:	push   eax
64002b3e:	call   0x64013633
64002b43:	jmp    0x64002b51
64002b45:	mov    edx,DWORD PTR [esp+0x18]
64002b49:	push   edx
64002b4a:	push   edi
64002b4b:	push   eax
64002b4c:	call   0x640135b8
64002b51:	add    esp,0x10
64002b54:	test   ebx,ebx
64002b56:	jl     0x64002b73
64002b58:	mov    eax,DWORD PTR [ebp+0x0]
64002b5b:	cmp    ebx,DWORD PTR [eax-0x8]
64002b5e:	jg     0x64002b73
64002b60:	mov    DWORD PTR [eax-0xc],ebx
64002b63:	mov    eax,DWORD PTR [ebp+0x0]
64002b66:	mov    WORD PTR [edi+eax*1],0x0
64002b6c:	pop    edi
64002b6d:	pop    esi
64002b6e:	pop    ebp
64002b6f:	pop    ebx
64002b70:	ret    0x8
64002b73:	push   0x80070057
64002b78:	call   0x64001040
64002b7d:	int3   
64002b7e:	int3   
64002b7f:	int3   
64002b80:	push   esi
64002b81:	mov    esi,DWORD PTR [esp+0x8]
64002b85:	test   esi,esi
64002b87:	je     0x64002bb8
64002b89:	mov    eax,DWORD PTR [esp+0xc]
64002b8d:	test   eax,eax
64002b8f:	je     0x64002bb8
64002b91:	mov    ecx,DWORD PTR [esp+0x10]
64002b95:	mov    edx,DWORD PTR [esp+0x14]
64002b99:	push   0x0
64002b9b:	push   0x0
64002b9d:	push   ecx
64002b9e:	push   esi
64002b9f:	push   0xffffffff
64002ba1:	push   eax
64002ba2:	push   0x0
64002ba4:	push   edx
64002ba5:	mov    BYTE PTR [esi],0x0
64002ba8:	call   DWORD PTR ds:0x64026028
64002bae:	neg    eax
64002bb0:	sbb    eax,eax
64002bb2:	and    eax,esi
64002bb4:	pop    esi
64002bb5:	ret    0x10
64002bb8:	xor    eax,eax
64002bba:	pop    esi
64002bbb:	ret    0x10
64002bbe:	int3   
64002bbf:	int3   
64002bc0:	mov    eax,DWORD PTR [esi]
64002bc2:	test   eax,eax
64002bc4:	je     0x64002bd3
64002bc6:	push   eax
64002bc7:	call   DWORD PTR ds:0x64026004
64002bcd:	mov    DWORD PTR [esi],0x0
64002bd3:	ret    
64002bd4:	int3   
64002bd5:	int3   
64002bd6:	int3   
64002bd7:	int3   
64002bd8:	int3   
64002bd9:	int3   
64002bda:	int3   
64002bdb:	int3   
64002bdc:	int3   
64002bdd:	int3   
64002bde:	int3   
64002bdf:	int3   
64002be0:	push   ecx
64002be1:	mov    eax,DWORD PTR [edi]
64002be3:	lea    ecx,[esp]
64002be6:	push   ecx
64002be7:	mov    ecx,DWORD PTR [esp+0xc]
64002beb:	push   esi
64002bec:	add    eax,eax
64002bee:	lea    edx,[esp+0x14]
64002bf2:	push   edx
64002bf3:	mov    DWORD PTR [esp+0xc],eax
64002bf7:	mov    eax,DWORD PTR [esp+0x18]
64002bfb:	push   0x0
64002bfd:	mov    DWORD PTR [edi],0x0
64002c03:	mov    edx,DWORD PTR [ecx]
64002c05:	push   eax
64002c06:	push   edx
64002c07:	call   DWORD PTR ds:0x64026000
64002c0d:	test   eax,eax
64002c0f:	jne    0x64002c4e
64002c11:	mov    eax,DWORD PTR [esp+0xc]
64002c15:	cmp    eax,0x1
64002c18:	je     0x64002c1f
64002c1a:	cmp    eax,0x2
64002c1d:	jne    0x64002c3a
64002c1f:	test   esi,esi
64002c21:	mov    eax,DWORD PTR [esp]
64002c24:	je     0x64002c48
64002c26:	test   eax,eax
64002c28:	je     0x64002c43
64002c2a:	test   al,0x1
64002c2c:	jne    0x64002c3a
64002c2e:	mov    ecx,eax
64002c30:	shr    ecx,1
64002c32:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002c38:	je     0x64002c48
64002c3a:	mov    eax,0xd
64002c3f:	pop    ecx
64002c40:	ret    0x8
64002c43:	mov    WORD PTR [esi],0x0
64002c48:	shr    eax,1
64002c4a:	mov    DWORD PTR [edi],eax
64002c4c:	xor    eax,eax
64002c4e:	pop    ecx
64002c4f:	ret    0x8
64002c52:	int3   
64002c53:	int3   
64002c54:	int3   
64002c55:	int3   
64002c56:	int3   
64002c57:	int3   
64002c58:	int3   
64002c59:	int3   
64002c5a:	int3   
64002c5b:	int3   
64002c5c:	int3   
64002c5d:	int3   
64002c5e:	int3   
64002c5f:	int3   
64002c60:	ret    
64002c61:	int3   
64002c62:	int3   
64002c63:	int3   
64002c64:	int3   
64002c65:	int3   
64002c66:	int3   
64002c67:	int3   
64002c68:	int3   
64002c69:	int3   
64002c6a:	int3   
64002c6b:	int3   
64002c6c:	int3   
64002c6d:	int3   
64002c6e:	int3   
64002c6f:	int3   
64002c70:	mov    eax,DWORD PTR [esp+0xc]
64002c74:	cmp    eax,0x4
64002c77:	mov    ecx,DWORD PTR [esp+0x8]
64002c7b:	mov    edx,DWORD PTR [esp+0x4]
64002c7f:	push   esi
64002c80:	push   edi
64002c81:	jb     0x64002c97
64002c83:	mov    esi,DWORD PTR [edx]
64002c85:	cmp    esi,DWORD PTR [ecx]
64002c87:	jne    0x64002c9b
64002c89:	sub    eax,0x4
64002c8c:	add    ecx,0x4
64002c8f:	add    edx,0x4
64002c92:	cmp    eax,0x4
64002c95:	jae    0x64002c83
64002c97:	test   eax,eax
64002c99:	je     0x64002cf9
64002c9b:	movzx  esi,BYTE PTR [edx]
64002c9e:	movzx  edi,BYTE PTR [ecx]
64002ca1:	sub    esi,edi
64002ca3:	jne    0x64002cea
64002ca5:	sub    eax,0x1
64002ca8:	add    ecx,0x1
64002cab:	add    edx,0x1
64002cae:	test   eax,eax
64002cb0:	je     0x64002cf9
64002cb2:	movzx  esi,BYTE PTR [edx]
64002cb5:	movzx  edi,BYTE PTR [ecx]
64002cb8:	sub    esi,edi
64002cba:	jne    0x64002cea
64002cbc:	sub    eax,0x1
64002cbf:	add    ecx,0x1
64002cc2:	add    edx,0x1
64002cc5:	test   eax,eax
64002cc7:	je     0x64002cf9
64002cc9:	movzx  esi,BYTE PTR [edx]
64002ccc:	movzx  edi,BYTE PTR [ecx]
64002ccf:	sub    esi,edi
64002cd1:	jne    0x64002cea
64002cd3:	sub    eax,0x1
64002cd6:	add    ecx,0x1
64002cd9:	add    edx,0x1
64002cdc:	test   eax,eax
64002cde:	je     0x64002cf9
64002ce0:	movzx  esi,BYTE PTR [edx]
64002ce3:	movzx  eax,BYTE PTR [ecx]
64002ce6:	sub    esi,eax
64002ce8:	je     0x64002cf9
64002cea:	test   esi,esi
64002cec:	mov    eax,0x1
64002cf1:	jg     0x64002cfb
64002cf3:	pop    edi
64002cf4:	or     eax,0xffffffff
64002cf7:	pop    esi
64002cf8:	ret    
64002cf9:	xor    eax,eax
64002cfb:	pop    edi
64002cfc:	pop    esi
64002cfd:	ret    
64002cfe:	int3   
64002cff:	int3   
64002d00:	push   0xffffffff
64002d02:	push   0x640239f8
64002d07:	mov    eax,fs:0x0
64002d0d:	push   eax
64002d0e:	push   ecx
64002d0f:	push   esi
64002d10:	mov    eax,ds:0x6402f09c
64002d15:	xor    eax,esp
64002d17:	push   eax
64002d18:	lea    eax,[esp+0xc]
64002d1c:	mov    fs:0x0,eax
64002d22:	mov    esi,ecx
64002d24:	mov    DWORD PTR [esp+0x8],esi
64002d28:	call   0x6401344c
64002d2d:	xor    eax,eax
64002d2f:	mov    DWORD PTR [esp+0x14],eax
64002d33:	lea    ecx,[esi+0xc]
64002d36:	mov    DWORD PTR [esi],0x64026310
64002d3c:	push   0xffffffff
64002d3e:	mov    DWORD PTR [ecx+0x14],eax
64002d41:	mov    DWORD PTR [ecx+0x18],0xf
64002d48:	push   eax
64002d49:	mov    BYTE PTR [ecx+0x4],al
64002d4c:	mov    eax,DWORD PTR [esp+0x24]
64002d50:	push   eax
64002d51:	call   0x64001780
64002d56:	mov    eax,esi
64002d58:	mov    ecx,DWORD PTR [esp+0xc]
64002d5c:	mov    DWORD PTR fs:0x0,ecx
64002d63:	pop    ecx
64002d64:	pop    esi
64002d65:	add    esp,0x10
64002d68:	ret    0x4
64002d6b:	int3   
64002d6c:	int3   
64002d6d:	int3   
64002d6e:	int3   
64002d6f:	int3   
64002d70:	cmp    DWORD PTR [ecx+0x24],0x10
64002d74:	jb     0x64002d7a
64002d76:	mov    eax,DWORD PTR [ecx+0x10]
64002d79:	ret    
64002d7a:	lea    eax,[ecx+0x10]
64002d7d:	ret    
64002d7e:	int3   
64002d7f:	int3   
64002d80:	push   esi
64002d81:	mov    esi,ecx
64002d83:	mov    DWORD PTR [esi],0x64026310
64002d89:	cmp    DWORD PTR [esi+0x24],0x10
64002d8d:	jb     0x64002d9b
64002d8f:	mov    eax,DWORD PTR [esi+0x10]
64002d92:	push   eax
64002d93:	call   0x64013402
64002d98:	add    esp,0x4
64002d9b:	xor    eax,eax
64002d9d:	mov    DWORD PTR [esi+0x24],0xf
64002da4:	mov    DWORD PTR [esi+0x20],eax
64002da7:	mov    BYTE PTR [esi+0x10],al
64002daa:	mov    ecx,esi
64002dac:	pop    esi
64002dad:	jmp    0x6401351b
64002db2:	int3   
64002db3:	int3   
64002db4:	int3   
64002db5:	int3   
64002db6:	int3   
64002db7:	int3   
64002db8:	int3   
64002db9:	int3   
64002dba:	int3   
64002dbb:	int3   
64002dbc:	int3   
64002dbd:	int3   
64002dbe:	int3   
64002dbf:	int3   
64002dc0:	push   esi
64002dc1:	mov    esi,ecx
64002dc3:	mov    DWORD PTR [esi],0x64026310
64002dc9:	cmp    DWORD PTR [esi+0x24],0x10
64002dcd:	jb     0x64002ddb
64002dcf:	mov    eax,DWORD PTR [esi+0x10]
64002dd2:	push   eax
64002dd3:	call   0x64013402
64002dd8:	add    esp,0x4
64002ddb:	xor    eax,eax
64002ddd:	mov    DWORD PTR [esi+0x24],0xf
64002de4:	mov    DWORD PTR [esi+0x20],eax
64002de7:	mov    ecx,esi
64002de9:	mov    BYTE PTR [esi+0x10],al
64002dec:	call   0x6401351b
64002df1:	test   BYTE PTR [esp+0x8],0x1
64002df6:	je     0x64002e01
64002df8:	push   esi
64002df9:	call   0x64013402
64002dfe:	add    esp,0x4
64002e01:	mov    eax,esi
64002e03:	pop    esi
64002e04:	ret    0x4
64002e07:	int3   
64002e08:	int3   
64002e09:	int3   
64002e0a:	int3   
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	mov    eax,DWORD PTR [esp+0x4]
64002e14:	push   esi
64002e15:	push   eax
64002e16:	mov    esi,ecx
64002e18:	call   0x64002e30
64002e1d:	mov    DWORD PTR [esi],0x64026328
64002e23:	mov    eax,esi
64002e25:	pop    esi
64002e26:	ret    0x4
64002e29:	int3   
64002e2a:	int3   
64002e2b:	int3   
64002e2c:	int3   
64002e2d:	int3   
64002e2e:	int3   
64002e2f:	int3   
64002e30:	push   0xffffffff
64002e32:	push   0x640239c8
64002e37:	mov    eax,fs:0x0
64002e3d:	push   eax
64002e3e:	push   ecx
64002e3f:	push   esi
64002e40:	push   edi
64002e41:	mov    eax,ds:0x6402f09c
64002e46:	xor    eax,esp
64002e48:	push   eax
64002e49:	lea    eax,[esp+0x10]
64002e4d:	mov    fs:0x0,eax
64002e53:	mov    esi,ecx
64002e55:	mov    DWORD PTR [esp+0xc],esi
64002e59:	mov    edi,DWORD PTR [esp+0x20]
64002e5d:	push   edi
64002e5e:	call   0x640134c3
64002e63:	xor    edx,edx
64002e65:	mov    DWORD PTR [esp+0x18],edx
64002e69:	push   0xffffffff
64002e6b:	lea    ecx,[esi+0xc]
64002e6e:	mov    DWORD PTR [esi],0x64026310
64002e74:	lea    eax,[edi+0xc]
64002e77:	push   edx
64002e78:	mov    DWORD PTR [ecx+0x18],0xf
64002e7f:	mov    DWORD PTR [ecx+0x14],edx
64002e82:	push   eax
64002e83:	mov    BYTE PTR [ecx+0x4],dl
64002e86:	call   0x64001780
64002e8b:	mov    eax,esi
64002e8d:	mov    ecx,DWORD PTR [esp+0x10]
64002e91:	mov    DWORD PTR fs:0x0,ecx
64002e98:	pop    ecx
64002e99:	pop    edi
64002e9a:	pop    esi
64002e9b:	add    esp,0x10
64002e9e:	ret    0x4
64002ea1:	int3   
64002ea2:	int3   
64002ea3:	int3   
64002ea4:	int3   
64002ea5:	int3   
64002ea6:	int3   
64002ea7:	int3   
64002ea8:	int3   
64002ea9:	int3   
64002eaa:	int3   
64002eab:	int3   
64002eac:	int3   
64002ead:	int3   
64002eae:	int3   
64002eaf:	int3   
64002eb0:	sub    esp,0x6c
64002eb3:	mov    eax,ds:0x6402f09c
64002eb8:	xor    eax,esp
64002eba:	mov    DWORD PTR [esp+0x68],eax
64002ebe:	mov    eax,DWORD PTR [esp+0x74]
64002ec2:	movzx  ecx,BYTE PTR [eax+0xf]
64002ec6:	movzx  edx,BYTE PTR [eax+0xe]
64002eca:	push   esi
64002ecb:	push   ecx
64002ecc:	movzx  ecx,BYTE PTR [eax+0xd]
64002ed0:	push   edx
64002ed1:	movzx  edx,BYTE PTR [eax+0xc]
64002ed5:	push   ecx
64002ed6:	movzx  ecx,BYTE PTR [eax+0xb]
64002eda:	push   edx
64002edb:	movzx  edx,BYTE PTR [eax+0xa]
64002edf:	mov    esi,DWORD PTR [esp+0x84]
64002ee6:	push   ecx
64002ee7:	movzx  ecx,BYTE PTR [eax+0x9]
64002eeb:	push   edx
64002eec:	movzx  edx,BYTE PTR [eax+0x8]
64002ef0:	push   ecx
64002ef1:	movzx  ecx,WORD PTR [eax+0x6]
64002ef5:	push   edx
64002ef6:	movzx  edx,WORD PTR [eax+0x4]
64002efa:	mov    eax,DWORD PTR [eax]
64002efc:	push   ecx
64002efd:	push   edx
64002efe:	push   eax
64002eff:	push   0x640286f0
64002f04:	push   0x32
64002f06:	push   0x64028720
64002f0b:	mov    DWORD PTR [esp+0x3c],0x0
64002f13:	call   0x64006690
64002f18:	add    esp,0xc
64002f1b:	push   eax
64002f1c:	lea    ecx,[esp+0x38]
64002f20:	push   0x64
64002f22:	push   ecx
64002f23:	call   0x640147a6
64002f28:	add    esp,0x38
64002f2b:	lea    edx,[esp+0x8]
64002f2f:	push   edx
64002f30:	mov    ecx,esi
64002f32:	call   0x640063f0
64002f37:	mov    ecx,DWORD PTR [esp+0x6c]
64002f3b:	mov    eax,esi
64002f3d:	pop    esi
64002f3e:	xor    ecx,esp
64002f40:	call   0x64013c5c
64002f45:	add    esp,0x6c
64002f48:	ret    
64002f49:	int3   
64002f4a:	int3   
64002f4b:	int3   
64002f4c:	int3   
64002f4d:	int3   
64002f4e:	int3   
64002f4f:	int3   
64002f50:	push   0xffffffff
64002f52:	push   0x64023f08
64002f57:	mov    eax,fs:0x0
64002f5d:	push   eax
64002f5e:	sub    esp,0x24
64002f61:	mov    eax,ds:0x6402f09c
64002f66:	xor    eax,esp
64002f68:	mov    DWORD PTR [esp+0x20],eax
64002f6c:	push   ebx
64002f6d:	push   ebp
64002f6e:	push   edi
64002f6f:	mov    eax,ds:0x6402f09c
64002f74:	xor    eax,esp
64002f76:	push   eax
64002f77:	lea    eax,[esp+0x34]
64002f7b:	mov    fs:0x0,eax
64002f81:	mov    DWORD PTR [esp+0x3c],0x0
64002f89:	call   DWORD PTR ds:0x6402f06c
64002f8f:	mov    eax,ds:0x64026c08
64002f94:	mov    ecx,DWORD PTR ds:0x64026c0c
64002f9a:	mov    edx,DWORD PTR ds:0x64026c10
64002fa0:	mov    DWORD PTR [esp+0x20],eax
64002fa4:	mov    eax,ds:0x64026c14
64002fa9:	mov    DWORD PTR [esp+0x2c],eax
64002fad:	mov    eax,DWORD PTR [esp+0x44]
64002fb1:	mov    DWORD PTR [esp+0x24],ecx
64002fb5:	mov    DWORD PTR [esp+0x28],edx
64002fb9:	cmp    DWORD PTR [eax-0xc],0x0
64002fbd:	jle    0x64002fdd
64002fbf:	lea    ebx,[esp+0x44]
64002fc3:	call   0x640065c0
64002fc8:	mov    edi,ebx
64002fca:	call   0x64006f80
64002fcf:	call   0x64006540
64002fd4:	call   0x64006f80
64002fd9:	mov    eax,DWORD PTR [esp+0x44]
64002fdd:	cmp    DWORD PTR [eax-0x4],0x1
64002fe1:	jle    0x64002ff4
64002fe3:	mov    ecx,DWORD PTR [eax-0xc]
64002fe6:	push   ecx
64002fe7:	lea    ecx,[esp+0x48]
64002feb:	call   0x64001950
64002ff0:	mov    eax,DWORD PTR [esp+0x44]
64002ff4:	lea    edx,[esp+0x20]
64002ff8:	push   edx
64002ff9:	push   eax
64002ffa:	call   DWORD PTR ds:0x640261ac
64003000:	test   eax,eax
64003002:	je     0x64003021
64003004:	mov    eax,ds:0x64026c14
64003009:	mov    edi,DWORD PTR ds:0x64026c08
6400300f:	mov    ebx,DWORD PTR ds:0x64026c0c
64003015:	mov    ebp,DWORD PTR ds:0x64026c10
6400301b:	mov    DWORD PTR [esp+0x1c],eax
6400301f:	jmp    0x64003035
64003021:	mov    edx,DWORD PTR [esp+0x2c]
64003025:	mov    edi,DWORD PTR [esp+0x20]
64003029:	mov    ebx,DWORD PTR [esp+0x24]
6400302d:	mov    ebp,DWORD PTR [esp+0x28]
64003031:	mov    DWORD PTR [esp+0x1c],edx
64003035:	mov    DWORD PTR [esp+0x3c],0xffffffff
6400303d:	mov    eax,DWORD PTR [esp+0x44]
64003041:	add    eax,0xfffffff0
64003044:	or     edx,0xffffffff
64003047:	lea    ecx,[eax+0xc]
6400304a:	lock xadd DWORD PTR [ecx],edx
6400304e:	dec    edx
6400304f:	test   edx,edx
64003051:	jg     0x6400305d
64003053:	mov    ecx,DWORD PTR [eax]
64003055:	mov    edx,DWORD PTR [ecx]
64003057:	push   eax
64003058:	mov    eax,DWORD PTR [edx+0x4]
6400305b:	call   eax
6400305d:	mov    ecx,DWORD PTR [esp+0x1c]
64003061:	mov    DWORD PTR [esi],edi
64003063:	mov    DWORD PTR [esi+0x4],ebx
64003066:	mov    DWORD PTR [esi+0x8],ebp
64003069:	mov    eax,esi
6400306b:	mov    DWORD PTR [esi+0xc],ecx
6400306e:	mov    ecx,DWORD PTR [esp+0x34]
64003072:	mov    DWORD PTR fs:0x0,ecx
64003079:	pop    ecx
6400307a:	pop    edi
6400307b:	pop    ebp
6400307c:	pop    ebx
6400307d:	mov    ecx,DWORD PTR [esp+0x20]
64003081:	xor    ecx,esp
64003083:	call   0x64013c5c
64003088:	add    esp,0x30
6400308b:	ret    
6400308c:	int3   
6400308d:	int3   
6400308e:	int3   
6400308f:	int3   
64003090:	push   ebp
64003091:	mov    ebp,esp
64003093:	sub    esp,0x18
64003096:	mov    eax,ds:0x6402f09c
6400309b:	xor    eax,ebp
6400309d:	mov    DWORD PTR [ebp-0x4],eax
640030a0:	mov    eax,DWORD PTR [ebp+0x8]
640030a3:	push   ebx
640030a4:	push   esi
640030a5:	push   edi
640030a6:	mov    DWORD PTR [ebp-0x14],eax
640030a9:	mov    DWORD PTR [ebp-0x18],0x0
640030b0:	call   DWORD PTR ds:0x6402f06c
640030b6:	movzx  ecx,BYTE PTR [ebp+0xc]
640030ba:	push   ecx
640030bb:	push   0x64028754
640030c0:	push   0x6
640030c2:	push   0x64028790
640030c7:	mov    ebx,eax
640030c9:	call   0x64006690
640030ce:	add    esp,0xc
640030d1:	push   eax
640030d2:	lea    edx,[ebp-0x10]
640030d5:	push   edx
640030d6:	call   0x6401472b
640030db:	add    esp,0xc
640030de:	lea    eax,[ebp-0x10]
640030e1:	push   eax
640030e2:	call   DWORD PTR ds:0x64026058
640030e8:	mov    esi,eax
640030ea:	add    esi,0x1
640030ed:	cmp    esi,0x3fffffff
640030f3:	jg     0x64003121
640030f5:	lea    eax,[esi+esi*1]
640030f8:	call   0x640143e0
640030fd:	mov    edi,esp
640030ff:	test   edi,edi
64003101:	je     0x64003121
64003103:	push   esi
64003104:	push   edi
64003105:	push   0xffffffff
64003107:	lea    ecx,[ebp-0x10]
6400310a:	push   ecx
6400310b:	push   0x0
6400310d:	push   ebx
6400310e:	mov    WORD PTR [edi],0x0
64003113:	call   DWORD PTR ds:0x64026024
64003119:	neg    eax
6400311b:	sbb    eax,eax
6400311d:	and    eax,edi
6400311f:	jmp    0x64003123
64003121:	xor    eax,eax
64003123:	mov    esi,DWORD PTR [ebp-0x14]
64003126:	push   eax
64003127:	mov    ecx,esi
64003129:	call   0x64002590
6400312e:	mov    eax,esi
64003130:	lea    esp,[ebp-0x24]
64003133:	pop    edi
64003134:	pop    esi
64003135:	pop    ebx
64003136:	mov    ecx,DWORD PTR [ebp-0x4]
64003139:	xor    ecx,ebp
6400313b:	call   0x64013c5c
64003140:	mov    esp,ebp
64003142:	pop    ebp
64003143:	ret    
64003144:	int3   
64003145:	int3   
64003146:	int3   
64003147:	int3   
64003148:	int3   
64003149:	int3   
6400314a:	int3   
6400314b:	int3   
6400314c:	int3   
6400314d:	int3   
6400314e:	int3   
6400314f:	int3   
64003150:	push   0xffffffff
64003152:	push   0x64024f39
64003157:	mov    eax,fs:0x0
6400315d:	push   eax
6400315e:	sub    esp,0x20
64003161:	push   ebx
64003162:	push   ebp
64003163:	push   esi
64003164:	push   edi
64003165:	mov    eax,ds:0x6402f09c
6400316a:	xor    eax,esp
6400316c:	push   eax
6400316d:	lea    eax,[esp+0x34]
64003171:	mov    fs:0x0,eax
64003177:	xor    ebx,ebx
64003179:	mov    DWORD PTR [esp+0x3c],ebx
6400317d:	mov    DWORD PTR [esp+0x18],ebx
64003181:	mov    eax,ds:0x64030540
64003186:	mov    edx,DWORD PTR [eax+0xc]
64003189:	mov    ecx,0x64030540
6400318e:	call   edx
64003190:	mov    edi,DWORD PTR [esp+0x44]
64003194:	add    eax,0x10
64003197:	mov    DWORD PTR [edi],eax
64003199:	mov    esi,DWORD PTR [esp+0x48]
6400319d:	mov    DWORD PTR [esp+0x3c],ebx
640031a1:	mov    eax,DWORD PTR [esi]
640031a3:	mov    ecx,0x1
640031a8:	sub    eax,0x10
640031ab:	cmp    DWORD PTR [eax+0xc],ecx
640031ae:	mov    DWORD PTR [esp+0x18],ecx
640031b2:	jle    0x640031bf
640031b4:	mov    eax,DWORD PTR [eax+0x4]
640031b7:	push   eax
640031b8:	mov    ecx,esi
640031ba:	call   0x64001950
640031bf:	mov    ebp,DWORD PTR [esi]
640031c1:	movzx  eax,WORD PTR [ebp+0x0]
640031c5:	cmp    ax,bx
640031c8:	je     0x64003469
640031ce:	cmp    ax,0x41
640031d2:	jb     0x640031de
640031d4:	cmp    ax,0x5a
640031d8:	jbe    0x6400340f
640031de:	cmp    ax,0x61
640031e2:	jb     0x640031ee
640031e4:	cmp    ax,0x7a
640031e8:	jbe    0x6400340f
640031ee:	cmp    ax,0x30
640031f2:	jb     0x64003209
640031f4:	cmp    ax,0x39
640031f8:	ja     0x64003209
640031fa:	movzx  ecx,BYTE PTR [ebp+0x0]
640031fe:	push   ecx
640031ff:	call   0x64006480
64003204:	jmp    0x64003459
64003209:	cmp    ax,0x20
6400320d:	jne    0x6400325b
6400320f:	mov    eax,DWORD PTR [edi]
64003211:	mov    ebx,DWORD PTR [eax-0xc]
64003214:	mov    ecx,0x1
64003219:	sub    ecx,DWORD PTR [eax-0x4]
6400321c:	mov    eax,DWORD PTR [eax-0x8]
6400321f:	lea    esi,[ebx+0x1]
64003222:	sub    eax,esi
64003224:	or     eax,ecx
64003226:	jge    0x64003230
64003228:	push   esi
64003229:	mov    ecx,edi
6400322b:	call   0x64001e00
64003230:	test   esi,esi
64003232:	mov    eax,DWORD PTR [edi]
64003234:	mov    WORD PTR [eax+ebx*2],0x2b
6400323a:	jl     0x6400347f
64003240:	mov    eax,DWORD PTR [edi]
64003242:	cmp    esi,DWORD PTR [eax-0x8]
64003245:	jg     0x6400347f
6400324b:	mov    DWORD PTR [eax-0xc],esi
6400324e:	mov    edx,DWORD PTR [edi]
64003250:	mov    WORD PTR [edx+esi*2],0x0
64003256:	jmp    0x64003459
6400325b:	cmp    ax,0x2d
6400325f:	je     0x6400340f
64003265:	cmp    ax,0x5f
64003269:	je     0x6400340f
6400326f:	cmp    ax,0x2e
64003273:	je     0x6400340f
64003279:	cmp    ax,0x21
6400327d:	je     0x6400340f
64003283:	cmp    ax,0x7e
64003287:	je     0x6400340f
6400328d:	cmp    ax,0x2a
64003291:	je     0x6400340f
64003297:	cmp    ax,0x27
6400329b:	je     0x6400340f
640032a1:	cmp    ax,0x28
640032a5:	je     0x6400340f
640032ab:	cmp    ax,0x29
640032af:	je     0x6400340f
640032b5:	cmp    ax,0x7f
640032b9:	ja     0x640032f0
640032bb:	movzx  eax,BYTE PTR [ebp+0x0]
640032bf:	push   eax
640032c0:	lea    ecx,[esp+0x20]
640032c4:	push   ecx
640032c5:	call   0x64003090
640032ca:	add    esp,0x8
640032cd:	push   eax
640032ce:	mov    ecx,edi
640032d0:	mov    DWORD PTR [esp+0x40],0x1
640032d8:	call   0x64002640
640032dd:	lea    ecx,[esp+0x1c]
640032e1:	mov    BYTE PTR [esp+0x3c],0x0
640032e6:	call   0x64001930
640032eb:	jmp    0x64003459
640032f0:	cmp    ax,0x7ff
640032f4:	ja     0x64003365
640032f6:	shr    eax,0x6
640032f9:	or     eax,0xffffffc0
640032fc:	push   eax
640032fd:	lea    edx,[esp+0x24]
64003301:	push   edx
64003302:	call   0x64003090
64003307:	add    esp,0x8
6400330a:	push   eax
6400330b:	mov    ecx,edi
6400330d:	mov    DWORD PTR [esp+0x40],0x2
64003315:	call   0x64002640
6400331a:	lea    ecx,[esp+0x20]
6400331e:	mov    BYTE PTR [esp+0x3c],0x0
64003323:	call   0x64001930
64003328:	movzx  eax,BYTE PTR [ebp+0x0]
6400332c:	and    eax,0xffffff3f
64003331:	or     eax,0xffffff80
64003334:	push   eax
64003335:	lea    ecx,[esp+0x28]
64003339:	push   ecx
6400333a:	call   0x64003090
6400333f:	add    esp,0x8
64003342:	push   eax
64003343:	mov    ecx,edi
64003345:	mov    DWORD PTR [esp+0x40],0x3
6400334d:	call   0x64002640
64003352:	lea    ecx,[esp+0x24]
64003356:	mov    BYTE PTR [esp+0x3c],0x0
6400335b:	call   0x64001930
64003360:	jmp    0x64003459
64003365:	shr    ax,0xc
64003369:	lea    edx,[esp+0x28]
6400336d:	or     eax,0xffffffe0
64003370:	push   eax
64003371:	push   edx
64003372:	call   0x64003090
64003377:	add    esp,0x8
6400337a:	push   eax
6400337b:	mov    ecx,edi
6400337d:	mov    DWORD PTR [esp+0x40],0x4
64003385:	call   0x64002640
6400338a:	lea    ecx,[esp+0x28]
6400338e:	mov    BYTE PTR [esp+0x3c],0x0
64003393:	call   0x64001930
64003398:	movzx  eax,WORD PTR [ebp+0x0]
6400339c:	shr    ax,0x6
640033a0:	lea    ecx,[esp+0x2c]
640033a4:	and    eax,0xffffff3f
640033a9:	or     eax,0xffffff80
640033ac:	push   eax
640033ad:	push   ecx
640033ae:	call   0x64003090
640033b3:	add    esp,0x8
640033b6:	push   eax
640033b7:	mov    ecx,edi
640033b9:	mov    DWORD PTR [esp+0x40],0x5
640033c1:	call   0x64002640
640033c6:	lea    ecx,[esp+0x2c]
640033ca:	mov    BYTE PTR [esp+0x3c],0x0
640033cf:	call   0x64001930
640033d4:	movzx  edx,BYTE PTR [ebp+0x0]
640033d8:	and    edx,0xffffff3f
640033de:	or     edx,0xffffff80
640033e1:	push   edx
640033e2:	lea    eax,[esp+0x34]
640033e6:	push   eax
640033e7:	call   0x64003090
640033ec:	add    esp,0x8
640033ef:	push   eax
640033f0:	mov    ecx,edi
640033f2:	mov    DWORD PTR [esp+0x40],0x6
640033fa:	call   0x64002640
640033ff:	lea    ecx,[esp+0x30]
64003403:	mov    BYTE PTR [esp+0x3c],0x0
64003408:	call   0x64001930
6400340d:	jmp    0x64003459
6400340f:	mov    cl,BYTE PTR [ebp+0x0]
64003412:	mov    eax,DWORD PTR [edi]
64003414:	mov    ebx,DWORD PTR [eax-0xc]
64003417:	mov    BYTE PTR [esp+0x14],cl
6400341b:	mov    ecx,0x1
64003420:	sub    ecx,DWORD PTR [eax-0x4]
64003423:	mov    eax,DWORD PTR [eax-0x8]
64003426:	lea    esi,[ebx+0x1]
64003429:	sub    eax,esi
6400342b:	or     eax,ecx
6400342d:	jge    0x64003437
6400342f:	push   esi
64003430:	mov    ecx,edi
64003432:	call   0x64001e00
64003437:	test   esi,esi
64003439:	movsx  dx,BYTE PTR [esp+0x14]
6400343f:	mov    eax,DWORD PTR [edi]
64003441:	mov    WORD PTR [eax+ebx*2],dx
64003445:	jl     0x6400347f
64003447:	mov    eax,DWORD PTR [edi]
64003449:	cmp    esi,DWORD PTR [eax-0x8]
6400344c:	jg     0x6400347f
6400344e:	mov    DWORD PTR [eax-0xc],esi
64003451:	mov    eax,DWORD PTR [edi]
64003453:	mov    WORD PTR [eax+esi*2],0x0
64003459:	movzx  eax,WORD PTR [ebp+0x2]
6400345d:	add    ebp,0x2
64003460:	test   ax,ax
64003463:	jne    0x640031ce
64003469:	mov    eax,edi
6400346b:	mov    ecx,DWORD PTR [esp+0x34]
6400346f:	mov    DWORD PTR fs:0x0,ecx
64003476:	pop    ecx
64003477:	pop    edi
64003478:	pop    esi
64003479:	pop    ebp
6400347a:	pop    ebx
6400347b:	add    esp,0x2c
6400347e:	ret    
6400347f:	push   0x80070057
64003484:	call   0x64001040
64003489:	int3   
6400348a:	int3   
6400348b:	int3   
6400348c:	int3   
6400348d:	int3   
6400348e:	int3   
6400348f:	int3   
64003490:	push   0xffffffff
64003492:	push   0x64024a69
64003497:	mov    eax,fs:0x0
6400349d:	push   eax
6400349e:	sub    esp,0x48
640034a1:	push   ebx
640034a2:	push   esi
640034a3:	push   edi
640034a4:	mov    eax,ds:0x6402f09c
640034a9:	xor    eax,esp
640034ab:	push   eax
640034ac:	lea    eax,[esp+0x58]
640034b0:	mov    fs:0x0,eax
640034b6:	xor    ebx,ebx
640034b8:	mov    DWORD PTR [esp+0x60],ebx
640034bc:	mov    DWORD PTR [esp+0x10],ebx
640034c0:	mov    eax,ds:0x64030540
640034c5:	mov    edx,DWORD PTR [eax+0xc]
640034c8:	mov    ecx,0x64030540
640034cd:	call   edx
640034cf:	mov    edi,DWORD PTR [esp+0x68]
640034d3:	add    eax,0x10
640034d6:	mov    DWORD PTR [edi],eax
640034d8:	mov    DWORD PTR [esp+0x60],ebx
640034dc:	mov    ecx,0x1
640034e1:	sub    ecx,DWORD PTR [eax-0x4]
640034e4:	mov    eax,DWORD PTR [eax-0x8]
640034e7:	sub    eax,0x800
640034ec:	cmp    BYTE PTR [esp+0x6c],bl
640034f0:	mov    DWORD PTR [esp+0x10],0x1
640034f8:	je     0x6400358b
640034fe:	or     eax,ecx
64003500:	jge    0x6400350e
64003502:	push   0x800
64003507:	mov    ecx,edi
64003509:	call   0x64001e00
6400350e:	mov    eax,DWORD PTR [edi]
64003510:	push   0x800
64003515:	push   eax
64003516:	call   0x6400e470
6400351b:	call   eax
6400351d:	test   eax,eax
6400351f:	jne    0x64003612
64003525:	push   0x64028798
6400352a:	push   0x22
6400352c:	push   0x640287d4
64003531:	call   0x64006690
64003536:	mov    ecx,eax
64003538:	add    esp,0xc
6400353b:	mov    DWORD PTR [esp+0x2c],0xf
64003543:	mov    DWORD PTR [esp+0x28],ebx
64003547:	mov    BYTE PTR [esp+0x18],bl
6400354b:	lea    esi,[ecx+0x1]
6400354e:	mov    edi,edi
64003550:	mov    dl,BYTE PTR [ecx]
64003552:	add    ecx,0x1
64003555:	cmp    dl,bl
64003557:	jne    0x64003550
64003559:	sub    ecx,esi
6400355b:	push   ecx
6400355c:	push   eax
6400355d:	lea    ecx,[esp+0x1c]
64003561:	call   0x64001860
64003566:	lea    eax,[esp+0x14]
6400356a:	push   eax
6400356b:	lea    ecx,[esp+0x34]
6400356f:	mov    DWORD PTR [esp+0x64],0x1
64003577:	call   0x64002020
6400357c:	push   0x6402c5fc
64003581:	lea    ecx,[esp+0x34]
64003585:	push   ecx
64003586:	call   0x6401384b
6400358b:	or     eax,ecx
6400358d:	jge    0x6400359b
6400358f:	push   0x800
64003594:	mov    ecx,edi
64003596:	call   0x64001e00
6400359b:	mov    eax,DWORD PTR [edi]
6400359d:	push   0x800
640035a2:	push   eax
640035a3:	call   0x6400dc90
640035a8:	call   eax
640035aa:	test   eax,eax
640035ac:	jne    0x64003612
640035ae:	push   0x640287f8
640035b3:	push   0x1c
640035b5:	push   0x64028820
640035ba:	call   0x64006690
640035bf:	mov    ecx,eax
640035c1:	add    esp,0xc
640035c4:	mov    DWORD PTR [esp+0x2c],0xf
640035cc:	mov    DWORD PTR [esp+0x28],ebx
640035d0:	mov    BYTE PTR [esp+0x18],bl
640035d4:	lea    esi,[ecx+0x1]
640035d7:	mov    dl,BYTE PTR [ecx]
640035d9:	add    ecx,0x1
640035dc:	cmp    dl,bl
640035de:	jne    0x640035d7
640035e0:	sub    ecx,esi
640035e2:	push   ecx
640035e3:	push   eax
640035e4:	lea    ecx,[esp+0x1c]
640035e8:	call   0x64001860
640035ed:	lea    edx,[esp+0x14]
640035f1:	push   edx
640035f2:	lea    ecx,[esp+0x34]
640035f6:	mov    DWORD PTR [esp+0x64],0x2
640035fe:	call   0x64002020
64003603:	push   0x6402c5fc
64003608:	lea    eax,[esp+0x34]
6400360c:	push   eax
6400360d:	call   0x6401384b
64003612:	mov    edx,DWORD PTR [edi]
64003614:	cmp    edx,ebx
64003616:	jne    0x6400361c
64003618:	xor    eax,eax
6400361a:	jmp    0x64003632
6400361c:	mov    eax,edx
6400361e:	lea    esi,[eax+0x2]
64003621:	mov    cx,WORD PTR [eax]
64003624:	add    eax,0x2
64003627:	cmp    cx,bx
6400362a:	jne    0x64003621
6400362c:	sub    eax,esi
6400362e:	sar    eax,1
64003630:	js     0x64003674
64003632:	cmp    eax,DWORD PTR [edx-0x8]
64003635:	jg     0x64003674
64003637:	mov    DWORD PTR [edx-0xc],eax
6400363a:	mov    ecx,DWORD PTR [edi]
6400363c:	mov    WORD PTR [ecx+eax*2],bx
64003640:	mov    ecx,DWORD PTR [edi]
64003642:	mov    edx,DWORD PTR [ecx-0xc]
64003645:	lea    eax,[edx-0x1]
64003648:	cmp    eax,ebx
6400364a:	jl     0x64003674
6400364c:	cmp    eax,edx
6400364e:	jg     0x64003674
64003650:	movzx  eax,WORD PTR [ecx+eax*2]
64003654:	cmp    ax,0x5c
64003658:	je     0x6400365f
6400365a:	call   0x640064e0
6400365f:	mov    eax,edi
64003661:	mov    ecx,DWORD PTR [esp+0x58]
64003665:	mov    DWORD PTR fs:0x0,ecx
6400366c:	pop    ecx
6400366d:	pop    edi
6400366e:	pop    esi
6400366f:	pop    ebx
64003670:	add    esp,0x54
64003673:	ret    
64003674:	push   0x80070057
64003679:	call   0x64001040
6400367e:	int3   
6400367f:	int3   
64003680:	push   0xffffffff
64003682:	push   0x64024ed1
64003687:	mov    eax,fs:0x0
6400368d:	push   eax
6400368e:	sub    esp,0x48
64003691:	push   ebx
64003692:	push   ebp
64003693:	push   esi
64003694:	push   edi
64003695:	mov    eax,ds:0x6402f09c
6400369a:	xor    eax,esp
6400369c:	push   eax
6400369d:	lea    eax,[esp+0x5c]
640036a1:	mov    fs:0x0,eax
640036a7:	mov    esi,DWORD PTR [esp+0x6c]
640036ab:	xor    ebx,ebx
640036ad:	push   ebx
640036ae:	mov    DWORD PTR [esp+0x68],ebx
640036b2:	push   esi
640036b3:	mov    DWORD PTR [esp+0x1c],ebx
640036b7:	call   0x64003490
640036bc:	add    esp,0x8
640036bf:	mov    DWORD PTR [esp+0x64],ebx
640036c3:	mov    eax,DWORD PTR [esi]
640036c5:	mov    ebp,0x1
640036ca:	sub    eax,0x10
640036cd:	cmp    DWORD PTR [eax+0xc],ebp
640036d0:	mov    DWORD PTR [esp+0x14],ebp
640036d4:	jle    0x640036e1
640036d6:	mov    eax,DWORD PTR [eax+0x4]
640036d9:	push   eax
640036da:	mov    ecx,esi
640036dc:	call   0x64001950
640036e1:	mov    eax,DWORD PTR [esi]
640036e3:	push   0x5c
640036e5:	push   eax
640036e6:	call   0x640147c2
640036eb:	mov    edi,eax
640036ed:	add    esp,0x8
640036f0:	cmp    edi,ebx
640036f2:	jne    0x64003756
640036f4:	push   0x64028840
640036f9:	push   0x18
640036fb:	push   0x64028868
64003700:	call   0x64006690
64003705:	mov    ecx,eax
64003707:	add    esp,0xc
6400370a:	mov    DWORD PTR [esp+0x30],0xf
64003712:	mov    DWORD PTR [esp+0x2c],ebx
64003716:	mov    BYTE PTR [esp+0x1c],bl
6400371a:	lea    esi,[ecx+0x1]
6400371d:	lea    ecx,[ecx+0x0]
64003720:	mov    dl,BYTE PTR [ecx]
64003722:	add    ecx,ebp
64003724:	cmp    dl,bl
64003726:	jne    0x64003720
64003728:	sub    ecx,esi
6400372a:	push   ecx
6400372b:	push   eax
6400372c:	lea    ecx,[esp+0x20]
64003730:	call   0x64001860
64003735:	lea    ecx,[esp+0x18]
64003739:	push   ecx
6400373a:	lea    ecx,[esp+0x38]
6400373e:	mov    DWORD PTR [esp+0x68],ebp
64003742:	call   0x64002020
64003747:	push   0x6402c5fc
6400374c:	lea    edx,[esp+0x38]
64003750:	push   edx
64003751:	call   0x6401384b
64003756:	mov    eax,DWORD PTR [esi]
64003758:	sub    eax,0x10
6400375b:	cmp    DWORD PTR [eax+0xc],ebp
6400375e:	jle    0x6400376b
64003760:	mov    eax,DWORD PTR [eax+0x4]
64003763:	push   eax
64003764:	mov    ecx,esi
64003766:	call   0x64001950
6400376b:	mov    ecx,DWORD PTR [esi]
6400376d:	sub    edi,ecx
6400376f:	sar    edi,1
64003771:	add    edi,ebp
64003773:	cmp    ecx,ebx
64003775:	jne    0x6400377b
64003777:	xor    eax,eax
64003779:	jmp    0x64003796
6400377b:	mov    eax,ecx
6400377d:	lea    ebp,[eax+0x2]
64003780:	mov    dx,WORD PTR [eax]
64003783:	add    eax,0x2
64003786:	cmp    dx,bx
64003789:	jne    0x64003780
6400378b:	sub    eax,ebp
6400378d:	sar    eax,1
6400378f:	js     0x640037e9
64003791:	mov    ebp,0x1
64003796:	cmp    eax,DWORD PTR [ecx-0x8]
64003799:	jg     0x640037e9
6400379b:	mov    DWORD PTR [ecx-0xc],eax
6400379e:	mov    ecx,DWORD PTR [esi]
640037a0:	mov    WORD PTR [ecx+eax*2],bx
640037a4:	mov    eax,DWORD PTR [esi]
640037a6:	sub    eax,0x10
640037a9:	mov    ecx,ebp
640037ab:	sub    ecx,DWORD PTR [eax+0xc]
640037ae:	mov    eax,DWORD PTR [eax+0x8]
640037b1:	sub    eax,edi
640037b3:	or     eax,ecx
640037b5:	jge    0x640037bf
640037b7:	push   edi
640037b8:	mov    ecx,esi
640037ba:	call   0x64001e00
640037bf:	cmp    edi,ebx
640037c1:	jl     0x640037e9
640037c3:	mov    eax,DWORD PTR [esi]
640037c5:	cmp    edi,DWORD PTR [eax-0x8]
640037c8:	jg     0x640037e9
640037ca:	mov    DWORD PTR [eax-0xc],edi
640037cd:	mov    edx,DWORD PTR [esi]
640037cf:	mov    WORD PTR [edx+edi*2],bx
640037d3:	mov    eax,esi
640037d5:	mov    ecx,DWORD PTR [esp+0x5c]
640037d9:	mov    DWORD PTR fs:0x0,ecx
640037e0:	pop    ecx
640037e1:	pop    edi
640037e2:	pop    esi
640037e3:	pop    ebp
640037e4:	pop    ebx
640037e5:	add    esp,0x54
640037e8:	ret    
640037e9:	push   0x80070057
640037ee:	call   0x64001040
640037f3:	int3   
640037f4:	int3   
640037f5:	int3   
640037f6:	int3   
640037f7:	int3   
640037f8:	int3   
640037f9:	int3   
640037fa:	int3   
640037fb:	int3   
640037fc:	int3   
640037fd:	int3   
640037fe:	int3   
640037ff:	int3   
64003800:	push   ebp
64003801:	lea    ebp,[esp-0x78]
64003805:	sub    esp,0x78
64003808:	push   0xffffffff
6400380a:	push   0x64024fe9
6400380f:	mov    eax,fs:0x0
64003815:	push   eax
64003816:	sub    esp,0xb4
6400381c:	mov    eax,ds:0x6402f09c
64003821:	xor    eax,ebp
64003823:	mov    DWORD PTR [ebp+0x74],eax
64003826:	push   ebx
64003827:	push   esi
64003828:	push   edi
64003829:	push   eax
6400382a:	lea    eax,[ebp-0xc]
6400382d:	mov    fs:0x0,eax
64003833:	call   DWORD PTR ds:0x6402f06c
64003839:	mov    ebx,eax
6400383b:	lea    eax,[ebp+0xc]
6400383e:	push   eax
6400383f:	call   0x64003680
64003844:	add    esp,0x4
64003847:	push   0x0
64003849:	push   0x0
6400384b:	lea    ecx,[ebp+0x0]
6400384e:	push   ecx
6400384f:	lea    edx,[ebp+0x4]
64003852:	push   edx
64003853:	lea    eax,[ebp+0x8]
64003856:	push   eax
64003857:	push   0x0
64003859:	mov    DWORD PTR [ebp-0x4],0x0
64003860:	mov    ecx,DWORD PTR [ebp+0xc]
64003863:	push   0x0
64003865:	push   ecx
64003866:	call   0x6400e390
6400386b:	call   eax
6400386d:	test   eax,eax
6400386f:	jne    0x64003980
64003875:	call   DWORD PTR ds:0x64026044
6400387b:	push   0xa
6400387d:	lea    edx,[ebp+0x10]
64003880:	push   edx
64003881:	push   eax
64003882:	call   0x64014824
64003887:	mov    eax,DWORD PTR [ebp+0xc]
6400388a:	add    esp,0xc
6400388d:	test   eax,eax
6400388f:	mov    edi,eax
64003891:	je     0x640038bf
64003893:	push   eax
64003894:	call   DWORD PTR ds:0x64026054
6400389a:	add    eax,0x1
6400389d:	cmp    eax,0x3fffffff
640038a2:	jle    0x640038a8
640038a4:	xor    edi,edi
640038a6:	jmp    0x640038bf
640038a8:	lea    esi,[eax+eax*1]
640038ab:	mov    eax,esi
640038ad:	call   0x640143e0
640038b2:	mov    eax,esp
640038b4:	push   ebx
640038b5:	push   esi
640038b6:	push   edi
640038b7:	push   eax
640038b8:	call   0x64002b80
640038bd:	mov    edi,eax
640038bf:	push   0x640288c0
640038c4:	push   0x21
640038c6:	push   0x640288fc
640038cb:	call   0x64006690
640038d0:	mov    ecx,eax
640038d2:	add    esp,0xc
640038d5:	mov    DWORD PTR [ebp-0x10],0xf
640038dc:	mov    DWORD PTR [ebp-0x14],0x0
640038e3:	mov    BYTE PTR [ebp-0x24],0x0
640038e7:	lea    esi,[ecx+0x1]
640038ea:	lea    ebx,[ebx+0x0]
640038f0:	mov    dl,BYTE PTR [ecx]
640038f2:	add    ecx,0x1
640038f5:	test   dl,dl
640038f7:	jne    0x640038f0
640038f9:	sub    ecx,esi
640038fb:	push   ecx
640038fc:	push   eax
640038fd:	lea    ecx,[ebp-0x28]
64003900:	call   0x64001860
64003905:	lea    eax,[ebp-0x28]
64003908:	push   eax
64003909:	lea    esi,[ebp-0x6c]
6400390c:	mov    BYTE PTR [ebp-0x4],0x1
64003910:	call   0x64009ad0
64003915:	mov    esi,eax
64003917:	push   0x64028888
6400391c:	push   0x7
6400391e:	push   0x640288b8
64003923:	mov    BYTE PTR [ebp-0x4],0x2
64003927:	call   0x64006690
6400392c:	push   esi
6400392d:	mov    edi,eax
6400392f:	lea    esi,[ebp-0x88]
64003935:	call   0x64009ad0
6400393a:	push   eax
6400393b:	lea    edi,[ebp+0x10]
6400393e:	lea    esi,[ebp-0xc0]
64003944:	mov    BYTE PTR [ebp-0x4],0x3
64003948:	call   0x64009ad0
6400394d:	push   eax
6400394e:	mov    edi,0x64028884
64003953:	lea    esi,[ebp-0xa4]
64003959:	mov    BYTE PTR [ebp-0x4],0x4
6400395d:	call   0x64009ad0
64003962:	add    esp,0x1c
64003965:	push   eax
64003966:	lea    ecx,[ebp-0x50]
64003969:	mov    BYTE PTR [ebp-0x4],0x5
6400396d:	call   0x64002020
64003972:	push   0x6402c5fc
64003977:	lea    ecx,[ebp-0x50]
6400397a:	push   ecx
6400397b:	call   0x6401384b
64003980:	mov    esi,DWORD PTR [ebp+0x8]
64003983:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400398a:	mov    eax,DWORD PTR [ebp+0xc]
6400398d:	add    eax,0xfffffff0
64003990:	lea    edx,[eax+0xc]
64003993:	or     ecx,0xffffffff
64003996:	lock xadd DWORD PTR [edx],ecx
6400399a:	dec    ecx
6400399b:	test   ecx,ecx
6400399d:	jg     0x640039a9
6400399f:	mov    ecx,DWORD PTR [eax]
640039a1:	mov    edx,DWORD PTR [ecx]
640039a3:	push   eax
640039a4:	mov    eax,DWORD PTR [edx+0x4]
640039a7:	call   eax
640039a9:	mov    eax,esi
640039ab:	lea    esp,[ebp-0xd0]
640039b1:	mov    ecx,DWORD PTR [ebp-0xc]
640039b4:	mov    DWORD PTR fs:0x0,ecx
640039bb:	pop    ecx
640039bc:	pop    edi
640039bd:	pop    esi
640039be:	pop    ebx
640039bf:	mov    ecx,DWORD PTR [ebp+0x74]
640039c2:	xor    ecx,ebp
640039c4:	call   0x64013c5c
640039c9:	add    ebp,0x78
640039cc:	mov    esp,ebp
640039ce:	pop    ebp
640039cf:	ret    
640039d0:	push   ebp
640039d1:	mov    ebp,esp
640039d3:	and    esp,0xfffffff8
640039d6:	push   0xffffffff
640039d8:	push   0x64024a06
640039dd:	mov    eax,fs:0x0
640039e3:	push   eax
640039e4:	sub    esp,0x840
640039ea:	mov    eax,ds:0x6402f09c
640039ef:	xor    eax,esp
640039f1:	mov    DWORD PTR [esp+0x838],eax
640039f8:	push   ebx
640039f9:	push   esi
640039fa:	push   edi
640039fb:	mov    eax,ds:0x6402f09c
64003a00:	xor    eax,esp
64003a02:	push   eax
64003a03:	lea    eax,[esp+0x850]
64003a0a:	mov    fs:0x0,eax
64003a10:	xor    eax,eax
64003a12:	xor    ebx,ebx
64003a14:	mov    DWORD PTR [esp+0x34],ebx
64003a18:	mov    DWORD PTR [esp+0x38],eax
64003a1c:	mov    DWORD PTR [esp+0x3c],eax
64003a20:	mov    DWORD PTR [esp+0x40],eax
64003a24:	mov    DWORD PTR [esp+0x1c],ebx
64003a28:	push   0x64028920
64003a2d:	push   0x1f
64003a2f:	push   0x64028948
64003a34:	mov    DWORD PTR [esp+0x864],ebx
64003a3b:	call   0x64006950
64003a40:	add    esp,0xc
64003a43:	lea    ecx,[esp+0x18]
64003a47:	push   ecx
64003a48:	push   0x20019
64003a4d:	push   ebx
64003a4e:	push   eax
64003a4f:	push   0x80000002
64003a54:	mov    DWORD PTR [esp+0x2c],ebx
64003a58:	call   DWORD PTR ds:0x64026008
64003a5e:	cmp    eax,ebx
64003a60:	jne    0x64003ad7
64003a62:	mov    edx,DWORD PTR [esp+0x18]
64003a66:	push   0x64028988
64003a6b:	push   0xb
64003a6d:	push   0x640289ac
64003a72:	mov    DWORD PTR [esp+0x28],edx
64003a76:	mov    DWORD PTR [esp+0x2c],0x400
64003a7e:	call   0x64006950
64003a83:	add    esp,0xc
64003a86:	push   eax
64003a87:	lea    eax,[esp+0x20]
64003a8b:	push   eax
64003a8c:	lea    edi,[esp+0x28]
64003a90:	lea    esi,[esp+0x4c]
64003a94:	call   0x64002be0
64003a99:	test   eax,eax
64003a9b:	je     0x64003afa
64003a9d:	mov    eax,DWORD PTR [esp+0x18]
64003aa1:	test   eax,eax
64003aa3:	mov    ecx,DWORD PTR [esp+0x40]
64003aa7:	mov    esi,DWORD PTR [esp+0x34]
64003aab:	mov    edi,DWORD PTR [esp+0x38]
64003aaf:	mov    ebx,DWORD PTR [esp+0x3c]
64003ab3:	mov    DWORD PTR [esp+0x30],ecx
64003ab7:	je     0x64003ac0
64003ab9:	push   eax
64003aba:	call   DWORD PTR ds:0x64026004
64003ac0:	mov    eax,DWORD PTR [ebp+0x8]
64003ac3:	mov    edx,DWORD PTR [esp+0x30]
64003ac7:	mov    DWORD PTR [eax],esi
64003ac9:	mov    DWORD PTR [eax+0x4],edi
64003acc:	mov    DWORD PTR [eax+0x8],ebx
64003acf:	mov    DWORD PTR [eax+0xc],edx
64003ad2:	jmp    0x64003bc9
64003ad7:	mov    eax,DWORD PTR [ebp+0x8]
64003ada:	mov    ecx,DWORD PTR [esp+0x34]
64003ade:	mov    edx,DWORD PTR [esp+0x38]
64003ae2:	mov    DWORD PTR [eax],ecx
64003ae4:	mov    ecx,DWORD PTR [esp+0x3c]
64003ae8:	mov    DWORD PTR [eax+0x4],edx
64003aeb:	mov    edx,DWORD PTR [esp+0x40]
64003aef:	mov    DWORD PTR [eax+0x8],ecx
64003af2:	mov    DWORD PTR [eax+0xc],edx
64003af5:	jmp    0x64003bc9
64003afa:	push   0x640289c4
64003aff:	lea    ecx,[esp+0x18]
64003b03:	call   0x64002590
64003b08:	lea    eax,[esp+0x44]
64003b0c:	mov    BYTE PTR [esp+0x858],0x1
64003b14:	lea    edx,[eax+0x2]
64003b17:	mov    cx,WORD PTR [eax]
64003b1a:	add    eax,0x2
64003b1d:	cmp    cx,bx
64003b20:	jne    0x64003b17
64003b22:	sub    eax,edx
64003b24:	sar    eax,1
64003b26:	push   eax
64003b27:	lea    eax,[esp+0x48]
64003b2b:	push   eax
64003b2c:	lea    ecx,[esp+0x1c]
64003b30:	call   0x640029e0
64003b35:	push   0x1
64003b37:	push   0x640289c8
64003b3c:	lea    ecx,[esp+0x1c]
64003b40:	call   0x640029e0
64003b45:	mov    eax,DWORD PTR [esp+0x14]
64003b49:	cmp    DWORD PTR [eax-0x4],0x1
64003b4d:	jle    0x64003b60
64003b4f:	mov    ecx,DWORD PTR [eax-0xc]
64003b52:	push   ecx
64003b53:	lea    ecx,[esp+0x18]
64003b57:	call   0x64001950
64003b5c:	mov    eax,DWORD PTR [esp+0x14]
64003b60:	lea    edx,[esp+0x34]
64003b64:	push   edx
64003b65:	push   eax
64003b66:	call   DWORD PTR ds:0x640261dc
64003b6c:	mov    eax,DWORD PTR [esp+0x40]
64003b70:	mov    esi,DWORD PTR [esp+0x34]
64003b74:	mov    edi,DWORD PTR [esp+0x38]
64003b78:	mov    ebx,DWORD PTR [esp+0x3c]
64003b7c:	mov    DWORD PTR [esp+0x30],eax
64003b80:	mov    BYTE PTR [esp+0x858],0x0
64003b88:	mov    eax,DWORD PTR [esp+0x14]
64003b8c:	add    eax,0xfffffff0
64003b8f:	lea    ecx,[eax+0xc]
64003b92:	or     edx,0xffffffff
64003b95:	lock xadd DWORD PTR [ecx],edx
64003b99:	dec    edx
64003b9a:	test   edx,edx
64003b9c:	jg     0x64003ba8
64003b9e:	mov    ecx,DWORD PTR [eax]
64003ba0:	mov    edx,DWORD PTR [ecx]
64003ba2:	push   eax
64003ba3:	mov    eax,DWORD PTR [edx+0x4]
64003ba6:	call   eax
64003ba8:	mov    eax,DWORD PTR [esp+0x18]
64003bac:	test   eax,eax
64003bae:	je     0x64003bb7
64003bb0:	push   eax
64003bb1:	call   DWORD PTR ds:0x64026004
64003bb7:	mov    eax,DWORD PTR [ebp+0x8]
64003bba:	mov    ecx,DWORD PTR [esp+0x30]
64003bbe:	mov    DWORD PTR [eax],esi
64003bc0:	mov    DWORD PTR [eax+0x4],edi
64003bc3:	mov    DWORD PTR [eax+0x8],ebx
64003bc6:	mov    DWORD PTR [eax+0xc],ecx
64003bc9:	mov    ecx,DWORD PTR [esp+0x850]
64003bd0:	mov    DWORD PTR fs:0x0,ecx
64003bd7:	pop    ecx
64003bd8:	pop    edi
64003bd9:	pop    esi
64003bda:	pop    ebx
64003bdb:	mov    ecx,DWORD PTR [esp+0x838]
64003be2:	xor    ecx,esp
64003be4:	call   0x64013c5c
64003be9:	mov    esp,ebp
64003beb:	pop    ebp
64003bec:	ret    
64003bed:	int3   
64003bee:	int3   
64003bef:	int3   
64003bf0:	push   ebp
64003bf1:	mov    ebp,esp
64003bf3:	and    esp,0xfffffff8
64003bf6:	push   0xffffffff
64003bf8:	push   0x640249b4
64003bfd:	mov    eax,fs:0x0
64003c03:	push   eax
64003c04:	sub    esp,0x460
64003c0a:	mov    eax,ds:0x6402f09c
64003c0f:	xor    eax,esp
64003c11:	mov    DWORD PTR [esp+0x458],eax
64003c18:	push   ebx
64003c19:	push   esi
64003c1a:	push   edi
64003c1b:	mov    eax,ds:0x6402f09c
64003c20:	xor    eax,esp
64003c22:	push   eax
64003c23:	lea    eax,[esp+0x470]
64003c2a:	mov    fs:0x0,eax
64003c30:	mov    eax,DWORD PTR [ebp+0x8]
64003c33:	xor    ebx,ebx
64003c35:	test   BYTE PTR ds:0x640334ac,0x1
64003c3c:	mov    esi,ecx
64003c3e:	mov    DWORD PTR [esp+0x18],eax
64003c42:	mov    DWORD PTR [esp+0x14],esi
64003c46:	mov    DWORD PTR [esp+0x38],ebx
64003c4a:	jne    0x64003c9d
64003c4c:	or     DWORD PTR ds:0x640334ac,0x1
64003c53:	mov    DWORD PTR [esp+0x478],ebx
64003c5a:	call   0x64008050
64003c5f:	mov    ds:0x640334a4,eax
64003c64:	mov    BYTE PTR [eax+0x29],0x1
64003c68:	mov    eax,ds:0x640334a4
64003c6d:	mov    DWORD PTR [eax+0x4],eax
64003c70:	mov    eax,ds:0x640334a4
64003c75:	mov    DWORD PTR [eax],eax
64003c77:	mov    eax,ds:0x640334a4
64003c7c:	mov    DWORD PTR [eax+0x8],eax
64003c7f:	push   0x64025340
64003c84:	mov    DWORD PTR ds:0x640334a8,ebx
64003c8a:	call   0x64013d8f
64003c8f:	add    esp,0x4
64003c92:	mov    DWORD PTR [esp+0x478],0xffffffff
64003c9d:	mov    eax,DWORD PTR [esi+0x4]
64003ca0:	mov    esi,DWORD PTR [eax]
64003ca2:	mov    eax,DWORD PTR [esp+0x14]
64003ca6:	cmp    esi,DWORD PTR [eax+0x4]
64003ca9:	je     0x64003e0e
64003caf:	cmp    DWORD PTR [esi+0x24],0x10
64003cb3:	lea    edi,[esi+0xc]
64003cb6:	jb     0x64003cbd
64003cb8:	mov    ecx,DWORD PTR [edi+0x4]
64003cbb:	jmp    0x64003cc0
64003cbd:	lea    ecx,[edi+0x4]
64003cc0:	lea    edx,[esp+0x64]
64003cc4:	mov    al,BYTE PTR [ecx]
64003cc6:	mov    BYTE PTR [edx],al
64003cc8:	add    ecx,0x1
64003ccb:	add    edx,0x1
64003cce:	cmp    al,bl
64003cd0:	jne    0x64003cc4
64003cd2:	mov    ecx,DWORD PTR [esp+0x14]
64003cd6:	cmp    esi,DWORD PTR [ecx+0x4]
64003cd9:	jne    0x64003ce0
64003cdb:	call   0x640137b8
64003ce0:	push   0xffffffff
64003ce2:	push   ebx
64003ce3:	push   edi
64003ce4:	lea    ecx,[esp+0x54]
64003ce8:	mov    DWORD PTR [esp+0x6c],0xf
64003cf0:	mov    DWORD PTR [esp+0x68],ebx
64003cf4:	mov    BYTE PTR [esp+0x58],bl
64003cf8:	call   0x64001780
64003cfd:	lea    edx,[esp+0x64]
64003d01:	push   edx
64003d02:	mov    DWORD PTR [esp+0x47c],0x1
64003d0d:	call   0x64020085
64003d12:	lea    eax,[esp+0x68]
64003d16:	add    esp,0x4
64003d19:	mov    DWORD PTR [esp+0x34],0xf
64003d21:	mov    DWORD PTR [esp+0x30],ebx
64003d25:	mov    BYTE PTR [esp+0x20],bl
64003d29:	lea    edx,[eax+0x1]
64003d2c:	lea    esp,[esp+0x0]
64003d30:	mov    cl,BYTE PTR [eax]
64003d32:	add    eax,0x1
64003d35:	cmp    cl,bl
64003d37:	jne    0x64003d30
64003d39:	sub    eax,edx
64003d3b:	push   eax
64003d3c:	lea    eax,[esp+0x68]
64003d40:	push   eax
64003d41:	lea    ecx,[esp+0x24]
64003d45:	call   0x64001860
64003d4a:	lea    ecx,[esp+0x1c]
64003d4e:	push   ecx
64003d4f:	lea    edx,[esp+0x40]
64003d53:	push   edx
64003d54:	push   0x640334a0
64003d59:	mov    BYTE PTR [esp+0x484],0x2
64003d61:	call   0x64006cf0
64003d66:	mov    edi,0x10
64003d6b:	cmp    DWORD PTR [esp+0x34],edi
64003d6f:	jb     0x64003d7e
64003d71:	mov    eax,DWORD PTR [esp+0x20]
64003d75:	push   eax
64003d76:	call   0x64013402
64003d7b:	add    esp,0x4
64003d7e:	mov    DWORD PTR [esp+0x478],0xffffffff
64003d89:	cmp    DWORD PTR [esp+0x60],edi
64003d8d:	mov    DWORD PTR [esp+0x34],0xf
64003d95:	mov    DWORD PTR [esp+0x30],ebx
64003d99:	mov    BYTE PTR [esp+0x20],bl
64003d9d:	jb     0x64003dac
64003d9f:	mov    ecx,DWORD PTR [esp+0x4c]
64003da3:	push   ecx
64003da4:	call   0x64013402
64003da9:	add    esp,0x4
64003dac:	cmp    BYTE PTR [esi+0x29],bl
64003daf:	mov    DWORD PTR [esp+0x60],0xf
64003db7:	mov    DWORD PTR [esp+0x5c],ebx
64003dbb:	mov    BYTE PTR [esp+0x4c],bl
64003dbf:	je     0x64003dcb
64003dc1:	call   0x640137b8
64003dc6:	jmp    0x64003ca2
64003dcb:	mov    ecx,DWORD PTR [esi+0x8]
64003dce:	cmp    BYTE PTR [ecx+0x29],bl
64003dd1:	jne    0x64003df0
64003dd3:	mov    eax,DWORD PTR [ecx]
64003dd5:	cmp    BYTE PTR [eax+0x29],bl
64003dd8:	jne    0x64003de9
64003dda:	lea    ebx,[ebx+0x0]
64003de0:	mov    ecx,eax
64003de2:	mov    eax,DWORD PTR [ecx]
64003de4:	cmp    BYTE PTR [eax+0x29],bl
64003de7:	je     0x64003de0
64003de9:	mov    esi,ecx
64003deb:	jmp    0x64003ca2
64003df0:	mov    eax,DWORD PTR [esi+0x4]
64003df3:	cmp    BYTE PTR [eax+0x29],bl
64003df6:	jne    0x64003e07
64003df8:	cmp    esi,DWORD PTR [eax+0x8]
64003dfb:	jne    0x64003e07
64003dfd:	mov    esi,eax
64003dff:	mov    eax,DWORD PTR [eax+0x4]
64003e02:	cmp    BYTE PTR [eax+0x29],bl
64003e05:	je     0x64003df8
64003e07:	mov    esi,eax
64003e09:	jmp    0x64003ca2
64003e0e:	mov    esi,DWORD PTR [esp+0x18]
64003e12:	push   esi
64003e13:	call   0x64006c20
64003e18:	mov    eax,esi
64003e1a:	mov    ecx,DWORD PTR [esp+0x470]
64003e21:	mov    DWORD PTR fs:0x0,ecx
64003e28:	pop    ecx
64003e29:	pop    edi
64003e2a:	pop    esi
64003e2b:	pop    ebx
64003e2c:	mov    ecx,DWORD PTR [esp+0x458]
64003e33:	xor    ecx,esp
64003e35:	call   0x64013c5c
64003e3a:	mov    esp,ebp
64003e3c:	pop    ebp
64003e3d:	ret    
64003e3e:	int3   
64003e3f:	int3   
64003e40:	push   ecx
64003e41:	call   0x64007720
64003e46:	pop    ecx
64003e47:	ret    
64003e48:	int3   
64003e49:	int3   
64003e4a:	int3   
64003e4b:	int3   
64003e4c:	int3   
64003e4d:	int3   
64003e4e:	int3   
64003e4f:	int3   
64003e50:	push   ebp
64003e51:	lea    ebp,[esp-0x404]
64003e58:	sub    esp,0x404
64003e5e:	push   0xffffffff
64003e60:	push   0x64024e81
64003e65:	mov    eax,fs:0x0
64003e6b:	push   eax
64003e6c:	sub    esp,0x3c
64003e6f:	mov    eax,ds:0x6402f09c
64003e74:	xor    eax,ebp
64003e76:	mov    DWORD PTR [ebp+0x400],eax
64003e7c:	push   ebx
64003e7d:	push   esi
64003e7e:	push   edi
64003e7f:	push   eax
64003e80:	lea    eax,[ebp-0xc]
64003e83:	mov    fs:0x0,eax
64003e89:	xor    ebx,ebx
64003e8b:	mov    DWORD PTR [ebp-0x4],ebx
64003e8e:	test   BYTE PTR ds:0x640334cc,0x1
64003e95:	jne    0x64003edd
64003e97:	or     DWORD PTR ds:0x640334cc,0x1
64003e9e:	mov    BYTE PTR [ebp-0x4],0x1
64003ea2:	call   0x64008050
64003ea7:	mov    ds:0x640334c4,eax
64003eac:	mov    BYTE PTR [eax+0x29],0x1
64003eb0:	mov    eax,ds:0x640334c4
64003eb5:	mov    DWORD PTR [eax+0x4],eax
64003eb8:	mov    eax,ds:0x640334c4
64003ebd:	mov    DWORD PTR [eax],eax
64003ebf:	mov    eax,ds:0x640334c4
64003ec4:	mov    DWORD PTR [eax+0x8],eax
64003ec7:	push   0x64025350
64003ecc:	mov    DWORD PTR ds:0x640334c8,ebx
64003ed2:	call   0x64013d8f
64003ed7:	add    esp,0x4
64003eda:	mov    BYTE PTR [ebp-0x4],bl
64003edd:	cmp    DWORD PTR ds:0x640334c8,ebx
64003ee3:	jne    0x64004ca9
64003ee9:	call   0x64008050
64003eee:	mov    DWORD PTR [ebp-0x30],eax
64003ef1:	mov    BYTE PTR [eax+0x29],0x1
64003ef5:	mov    eax,DWORD PTR [ebp-0x30]
64003ef8:	mov    DWORD PTR [eax+0x4],eax
64003efb:	mov    eax,DWORD PTR [ebp-0x30]
64003efe:	mov    DWORD PTR [eax],eax
64003f00:	mov    eax,DWORD PTR [ebp-0x30]
64003f03:	mov    DWORD PTR [eax+0x8],eax
64003f06:	mov    DWORD PTR [ebp-0x2c],ebx
64003f09:	push   0x640289cc
64003f0e:	push   0x3
64003f10:	push   0x640289f0
64003f15:	mov    BYTE PTR [ebp-0x4],0x2
64003f19:	call   0x64006690
64003f1e:	mov    esi,eax
64003f20:	mov    ecx,esi
64003f22:	add    esp,0xc
64003f25:	mov    DWORD PTR [ebp-0x10],0xf
64003f2c:	mov    DWORD PTR [ebp-0x14],ebx
64003f2f:	mov    BYTE PTR [ebp-0x24],bl
64003f32:	lea    edi,[ecx+0x1]
64003f35:	mov    al,BYTE PTR [ecx]
64003f37:	add    ecx,0x1
64003f3a:	cmp    al,bl
64003f3c:	jne    0x64003f35
64003f3e:	sub    ecx,edi
64003f40:	push   ecx
64003f41:	push   esi
64003f42:	lea    ecx,[ebp-0x28]
64003f45:	call   0x64001860
64003f4a:	lea    eax,[ebp-0x28]
64003f4d:	push   eax
64003f4e:	lea    ecx,[ebp-0x40]
64003f51:	push   ecx
64003f52:	lea    edx,[ebp-0x34]
64003f55:	push   edx
64003f56:	mov    BYTE PTR [ebp-0x4],0x3
64003f5a:	call   0x64006cf0
64003f5f:	mov    BYTE PTR [ebp-0x4],0x2
64003f63:	cmp    DWORD PTR [ebp-0x10],0x10
64003f67:	jb     0x64003f75
64003f69:	mov    eax,DWORD PTR [ebp-0x24]
64003f6c:	push   eax
64003f6d:	call   0x64013402
64003f72:	add    esp,0x4
64003f75:	push   0x640289f4
64003f7a:	push   0x8
64003f7c:	push   0x64028a18
64003f81:	call   0x64006690
64003f86:	mov    esi,eax
64003f88:	mov    ecx,esi
64003f8a:	add    esp,0xc
64003f8d:	mov    DWORD PTR [ebp-0x10],0xf
64003f94:	mov    DWORD PTR [ebp-0x14],ebx
64003f97:	mov    BYTE PTR [ebp-0x24],bl
64003f9a:	lea    edx,[ecx+0x1]
64003f9d:	lea    ecx,[ecx+0x0]
64003fa0:	mov    al,BYTE PTR [ecx]
64003fa2:	add    ecx,0x1
64003fa5:	cmp    al,bl
64003fa7:	jne    0x64003fa0
64003fa9:	sub    ecx,edx
64003fab:	push   ecx
64003fac:	push   esi
64003fad:	lea    ecx,[ebp-0x28]
64003fb0:	call   0x64001860
64003fb5:	lea    ecx,[ebp-0x28]
64003fb8:	push   ecx
64003fb9:	lea    edx,[ebp-0x40]
64003fbc:	push   edx
64003fbd:	lea    eax,[ebp-0x34]
64003fc0:	push   eax
64003fc1:	mov    BYTE PTR [ebp-0x4],0x4
64003fc5:	call   0x64006cf0
64003fca:	mov    edi,0x10
64003fcf:	mov    BYTE PTR [ebp-0x4],0x2
64003fd3:	cmp    DWORD PTR [ebp-0x10],edi
64003fd6:	jb     0x64003fe4
64003fd8:	mov    ecx,DWORD PTR [ebp-0x24]
64003fdb:	push   ecx
64003fdc:	call   0x64013402
64003fe1:	add    esp,0x4
64003fe4:	push   0x64028a24
64003fe9:	push   0x8
64003feb:	push   0x64028a48
64003ff0:	call   0x64006690
64003ff5:	mov    esi,eax
64003ff7:	mov    ecx,esi
64003ff9:	add    esp,0xc
64003ffc:	mov    DWORD PTR [ebp-0x10],0xf
64004003:	mov    DWORD PTR [ebp-0x14],ebx
64004006:	mov    BYTE PTR [ebp-0x24],bl
64004009:	lea    edx,[ecx+0x1]
6400400c:	lea    esp,[esp+0x0]
64004010:	mov    al,BYTE PTR [ecx]
64004012:	add    ecx,0x1
64004015:	cmp    al,bl
64004017:	jne    0x64004010
64004019:	sub    ecx,edx
6400401b:	push   ecx
6400401c:	push   esi
6400401d:	lea    ecx,[ebp-0x28]
64004020:	call   0x64001860
64004025:	lea    edx,[ebp-0x28]
64004028:	push   edx
64004029:	lea    eax,[ebp-0x40]
6400402c:	push   eax
6400402d:	lea    ecx,[ebp-0x34]
64004030:	push   ecx
64004031:	mov    BYTE PTR [ebp-0x4],0x5
64004035:	call   0x64006cf0
6400403a:	mov    BYTE PTR [ebp-0x4],0x2
6400403e:	cmp    DWORD PTR [ebp-0x10],edi
64004041:	jb     0x6400404f
64004043:	mov    edx,DWORD PTR [ebp-0x24]
64004046:	push   edx
64004047:	call   0x64013402
6400404c:	add    esp,0x4
6400404f:	push   0x64028a54
64004054:	push   0xa
64004056:	push   0x64028a7c
6400405b:	call   0x64006690
64004060:	mov    esi,eax
64004062:	mov    ecx,esi
64004064:	add    esp,0xc
64004067:	mov    DWORD PTR [ebp-0x10],0xf
6400406e:	mov    DWORD PTR [ebp-0x14],ebx
64004071:	mov    BYTE PTR [ebp-0x24],bl
64004074:	lea    edx,[ecx+0x1]
64004077:	mov    al,BYTE PTR [ecx]
64004079:	add    ecx,0x1
6400407c:	cmp    al,bl
6400407e:	jne    0x64004077
64004080:	sub    ecx,edx
64004082:	push   ecx
64004083:	push   esi
64004084:	lea    ecx,[ebp-0x28]
64004087:	call   0x64001860
6400408c:	lea    eax,[ebp-0x28]
6400408f:	push   eax
64004090:	lea    ecx,[ebp-0x40]
64004093:	push   ecx
64004094:	lea    edx,[ebp-0x34]
64004097:	push   edx
64004098:	mov    BYTE PTR [ebp-0x4],0x6
6400409c:	call   0x64006cf0
640040a1:	mov    BYTE PTR [ebp-0x4],0x2
640040a5:	cmp    DWORD PTR [ebp-0x10],edi
640040a8:	jb     0x640040b6
640040aa:	mov    eax,DWORD PTR [ebp-0x24]
640040ad:	push   eax
640040ae:	call   0x64013402
640040b3:	add    esp,0x4
640040b6:	push   0x64028a88
640040bb:	push   0x4
640040bd:	push   0x64028ab4
640040c2:	call   0x64006690
640040c7:	mov    esi,eax
640040c9:	mov    ecx,esi
640040cb:	add    esp,0xc
640040ce:	mov    DWORD PTR [ebp-0x10],0xf
640040d5:	mov    DWORD PTR [ebp-0x14],ebx
640040d8:	mov    BYTE PTR [ebp-0x24],bl
640040db:	lea    edx,[ecx+0x1]
640040de:	mov    edi,edi
640040e0:	mov    al,BYTE PTR [ecx]
640040e2:	add    ecx,0x1
640040e5:	cmp    al,bl
640040e7:	jne    0x640040e0
640040e9:	sub    ecx,edx
640040eb:	push   ecx
640040ec:	push   esi
640040ed:	lea    ecx,[ebp-0x28]
640040f0:	call   0x64001860
640040f5:	lea    ecx,[ebp-0x28]
640040f8:	push   ecx
640040f9:	lea    edx,[ebp-0x40]
640040fc:	push   edx
640040fd:	lea    eax,[ebp-0x34]
64004100:	push   eax
64004101:	mov    BYTE PTR [ebp-0x4],0x7
64004105:	call   0x64006cf0
6400410a:	mov    BYTE PTR [ebp-0x4],0x2
6400410e:	cmp    DWORD PTR [ebp-0x10],edi
64004111:	jb     0x6400411f
64004113:	mov    ecx,DWORD PTR [ebp-0x24]
64004116:	push   ecx
64004117:	call   0x64013402
6400411c:	add    esp,0x4
6400411f:	push   0x64028abc
64004124:	push   0x8
64004126:	push   0x64028ae0
6400412b:	call   0x64006690
64004130:	mov    esi,eax
64004132:	mov    ecx,esi
64004134:	add    esp,0xc
64004137:	mov    DWORD PTR [ebp-0x10],0xf
6400413e:	mov    DWORD PTR [ebp-0x14],ebx
64004141:	mov    BYTE PTR [ebp-0x24],bl
64004144:	lea    edx,[ecx+0x1]
64004147:	mov    al,BYTE PTR [ecx]
64004149:	add    ecx,0x1
6400414c:	cmp    al,bl
6400414e:	jne    0x64004147
64004150:	sub    ecx,edx
64004152:	push   ecx
64004153:	push   esi
64004154:	lea    ecx,[ebp-0x28]
64004157:	call   0x64001860
6400415c:	lea    edx,[ebp-0x28]
6400415f:	push   edx
64004160:	lea    eax,[ebp-0x40]
64004163:	push   eax
64004164:	lea    ecx,[ebp-0x34]
64004167:	push   ecx
64004168:	mov    BYTE PTR [ebp-0x4],0x8
6400416c:	call   0x64006cf0
64004171:	mov    BYTE PTR [ebp-0x4],0x2
64004175:	cmp    DWORD PTR [ebp-0x10],edi
64004178:	jb     0x64004186
6400417a:	mov    edx,DWORD PTR [ebp-0x24]
6400417d:	push   edx
6400417e:	call   0x64013402
64004183:	add    esp,0x4
64004186:	push   0x64028aec
6400418b:	push   0x5
6400418d:	push   0x64028b2c
64004192:	call   0x64006690
64004197:	mov    esi,eax
64004199:	mov    ecx,esi
6400419b:	add    esp,0xc
6400419e:	mov    DWORD PTR [ebp-0x10],0xf
640041a5:	mov    DWORD PTR [ebp-0x14],ebx
640041a8:	mov    BYTE PTR [ebp-0x24],bl
640041ab:	lea    edx,[ecx+0x1]
640041ae:	mov    edi,edi
640041b0:	mov    al,BYTE PTR [ecx]
640041b2:	add    ecx,0x1
640041b5:	cmp    al,bl
640041b7:	jne    0x640041b0
640041b9:	sub    ecx,edx
640041bb:	push   ecx
640041bc:	push   esi
640041bd:	lea    ecx,[ebp-0x28]
640041c0:	call   0x64001860
640041c5:	lea    eax,[ebp-0x28]
640041c8:	push   eax
640041c9:	lea    ecx,[ebp-0x40]
640041cc:	push   ecx
640041cd:	lea    edx,[ebp-0x34]
640041d0:	push   edx
640041d1:	mov    BYTE PTR [ebp-0x4],0x9
640041d5:	call   0x64006cf0
640041da:	mov    BYTE PTR [ebp-0x4],0x2
640041de:	cmp    DWORD PTR [ebp-0x10],edi
640041e1:	jb     0x640041ef
640041e3:	mov    eax,DWORD PTR [ebp-0x24]
640041e6:	push   eax
640041e7:	call   0x64013402
640041ec:	add    esp,0x4
640041ef:	push   0x64028b34
640041f4:	push   0x8
640041f6:	push   0x64028b70
640041fb:	call   0x64006690
64004200:	mov    esi,eax
64004202:	mov    ecx,esi
64004204:	add    esp,0xc
64004207:	mov    DWORD PTR [ebp-0x10],0xf
6400420e:	mov    DWORD PTR [ebp-0x14],ebx
64004211:	mov    BYTE PTR [ebp-0x24],bl
64004214:	lea    edx,[ecx+0x1]
64004217:	mov    al,BYTE PTR [ecx]
64004219:	add    ecx,0x1
6400421c:	cmp    al,bl
6400421e:	jne    0x64004217
64004220:	sub    ecx,edx
64004222:	push   ecx
64004223:	push   esi
64004224:	lea    ecx,[ebp-0x28]
64004227:	call   0x64001860
6400422c:	lea    ecx,[ebp-0x28]
6400422f:	push   ecx
64004230:	lea    edx,[ebp-0x40]
64004233:	push   edx
64004234:	lea    eax,[ebp-0x34]
64004237:	push   eax
64004238:	mov    BYTE PTR [ebp-0x4],0xa
6400423c:	call   0x64006cf0
64004241:	mov    BYTE PTR [ebp-0x4],0x2
64004245:	cmp    DWORD PTR [ebp-0x10],edi
64004248:	jb     0x64004256
6400424a:	mov    ecx,DWORD PTR [ebp-0x24]
6400424d:	push   ecx
6400424e:	call   0x64013402
64004253:	add    esp,0x4
64004256:	push   0x64028b7c
6400425b:	push   0xb
6400425d:	push   0x64028bb0
64004262:	call   0x64006690
64004267:	mov    esi,eax
64004269:	mov    ecx,esi
6400426b:	add    esp,0xc
6400426e:	mov    DWORD PTR [ebp-0x10],0xf
64004275:	mov    DWORD PTR [ebp-0x14],ebx
64004278:	mov    BYTE PTR [ebp-0x24],bl
6400427b:	lea    edx,[ecx+0x1]
6400427e:	mov    edi,edi
64004280:	mov    al,BYTE PTR [ecx]
64004282:	add    ecx,0x1
64004285:	cmp    al,bl
64004287:	jne    0x64004280
64004289:	sub    ecx,edx
6400428b:	push   ecx
6400428c:	push   esi
6400428d:	lea    ecx,[ebp-0x28]
64004290:	call   0x64001860
64004295:	lea    edx,[ebp-0x28]
64004298:	push   edx
64004299:	lea    eax,[ebp-0x40]
6400429c:	push   eax
6400429d:	lea    ecx,[ebp-0x34]
640042a0:	push   ecx
640042a1:	mov    BYTE PTR [ebp-0x4],0xb
640042a5:	call   0x64006cf0
640042aa:	mov    BYTE PTR [ebp-0x4],0x2
640042ae:	cmp    DWORD PTR [ebp-0x10],edi
640042b1:	jb     0x640042bf
640042b3:	mov    edx,DWORD PTR [ebp-0x24]
640042b6:	push   edx
640042b7:	call   0x64013402
640042bc:	add    esp,0x4
640042bf:	push   0x64028bbc
640042c4:	push   0x1e
640042c6:	push   0x64028bfc
640042cb:	call   0x64006690
640042d0:	mov    esi,eax
640042d2:	mov    ecx,esi
640042d4:	add    esp,0xc
640042d7:	mov    DWORD PTR [ebp-0x10],0xf
640042de:	mov    DWORD PTR [ebp-0x14],ebx
640042e1:	mov    BYTE PTR [ebp-0x24],bl
640042e4:	lea    edx,[ecx+0x1]
640042e7:	mov    al,BYTE PTR [ecx]
640042e9:	add    ecx,0x1
640042ec:	cmp    al,bl
640042ee:	jne    0x640042e7
640042f0:	sub    ecx,edx
640042f2:	push   ecx
640042f3:	push   esi
640042f4:	lea    ecx,[ebp-0x28]
640042f7:	call   0x64001860
640042fc:	lea    eax,[ebp-0x28]
640042ff:	push   eax
64004300:	lea    ecx,[ebp-0x40]
64004303:	push   ecx
64004304:	lea    edx,[ebp-0x34]
64004307:	push   edx
64004308:	mov    BYTE PTR [ebp-0x4],0xc
6400430c:	call   0x64006cf0
64004311:	mov    BYTE PTR [ebp-0x4],0x2
64004315:	cmp    DWORD PTR [ebp-0x10],edi
64004318:	jb     0x64004326
6400431a:	mov    eax,DWORD PTR [ebp-0x24]
6400431d:	push   eax
6400431e:	call   0x64013402
64004323:	add    esp,0x4
64004326:	push   0x64028c1c
6400432b:	push   0x7
6400432d:	push   0x64028c48
64004332:	call   0x64006690
64004337:	mov    esi,eax
64004339:	mov    ecx,esi
6400433b:	add    esp,0xc
6400433e:	mov    DWORD PTR [ebp-0x10],0xf
64004345:	mov    DWORD PTR [ebp-0x14],ebx
64004348:	mov    BYTE PTR [ebp-0x24],bl
6400434b:	lea    edx,[ecx+0x1]
6400434e:	mov    edi,edi
64004350:	mov    al,BYTE PTR [ecx]
64004352:	add    ecx,0x1
64004355:	cmp    al,bl
64004357:	jne    0x64004350
64004359:	sub    ecx,edx
6400435b:	push   ecx
6400435c:	push   esi
6400435d:	lea    ecx,[ebp-0x28]
64004360:	call   0x64001860
64004365:	lea    ecx,[ebp-0x28]
64004368:	push   ecx
64004369:	lea    edx,[ebp-0x40]
6400436c:	push   edx
6400436d:	lea    eax,[ebp-0x34]
64004370:	push   eax
64004371:	mov    BYTE PTR [ebp-0x4],0xd
64004375:	call   0x64006cf0
6400437a:	mov    BYTE PTR [ebp-0x4],0x2
6400437e:	cmp    DWORD PTR [ebp-0x10],edi
64004381:	jb     0x6400438f
64004383:	mov    ecx,DWORD PTR [ebp-0x24]
64004386:	push   ecx
64004387:	call   0x64013402
6400438c:	add    esp,0x4
6400438f:	push   0x64028c50
64004394:	push   0xc
64004396:	push   0x64028c78
6400439b:	call   0x64006690
640043a0:	mov    esi,eax
640043a2:	mov    ecx,esi
640043a4:	add    esp,0xc
640043a7:	mov    DWORD PTR [ebp-0x10],0xf
640043ae:	mov    DWORD PTR [ebp-0x14],ebx
640043b1:	mov    BYTE PTR [ebp-0x24],bl
640043b4:	lea    edx,[ecx+0x1]
640043b7:	mov    al,BYTE PTR [ecx]
640043b9:	add    ecx,0x1
640043bc:	cmp    al,bl
640043be:	jne    0x640043b7
640043c0:	sub    ecx,edx
640043c2:	push   ecx
640043c3:	push   esi
640043c4:	lea    ecx,[ebp-0x28]
640043c7:	call   0x64001860
640043cc:	lea    edx,[ebp-0x28]
640043cf:	push   edx
640043d0:	lea    eax,[ebp-0x40]
640043d3:	push   eax
640043d4:	lea    ecx,[ebp-0x34]
640043d7:	push   ecx
640043d8:	mov    BYTE PTR [ebp-0x4],0xe
640043dc:	call   0x64006cf0
640043e1:	mov    BYTE PTR [ebp-0x4],0x2
640043e5:	cmp    DWORD PTR [ebp-0x10],edi
640043e8:	jb     0x640043f6
640043ea:	mov    edx,DWORD PTR [ebp-0x24]
640043ed:	push   edx
640043ee:	call   0x64013402
640043f3:	add    esp,0x4
640043f6:	push   0x64028c88
640043fb:	push   0x11
640043fd:	push   0x64028cc0
64004402:	call   0x64006690
64004407:	mov    esi,eax
64004409:	mov    ecx,esi
6400440b:	add    esp,0xc
6400440e:	mov    DWORD PTR [ebp-0x10],0xf
64004415:	mov    DWORD PTR [ebp-0x14],ebx
64004418:	mov    BYTE PTR [ebp-0x24],bl
6400441b:	lea    edx,[ecx+0x1]
6400441e:	mov    edi,edi
64004420:	mov    al,BYTE PTR [ecx]
64004422:	add    ecx,0x1
64004425:	cmp    al,bl
64004427:	jne    0x64004420
64004429:	sub    ecx,edx
6400442b:	push   ecx
6400442c:	push   esi
6400442d:	lea    ecx,[ebp-0x28]
64004430:	call   0x64001860
64004435:	lea    eax,[ebp-0x28]
64004438:	push   eax
64004439:	lea    ecx,[ebp-0x40]
6400443c:	push   ecx
6400443d:	lea    edx,[ebp-0x34]
64004440:	push   edx
64004441:	mov    BYTE PTR [ebp-0x4],0xf
64004445:	call   0x64006cf0
6400444a:	mov    BYTE PTR [ebp-0x4],0x2
6400444e:	cmp    DWORD PTR [ebp-0x10],edi
64004451:	jb     0x6400445f
64004453:	mov    eax,DWORD PTR [ebp-0x24]
64004456:	push   eax
64004457:	call   0x64013402
6400445c:	add    esp,0x4
6400445f:	push   0x64028cd4
64004464:	push   0x7
64004466:	push   0x64028d14
6400446b:	call   0x64006690
64004470:	mov    esi,eax
64004472:	mov    ecx,esi
64004474:	add    esp,0xc
64004477:	mov    DWORD PTR [ebp-0x10],0xf
6400447e:	mov    DWORD PTR [ebp-0x14],ebx
64004481:	mov    BYTE PTR [ebp-0x24],bl
64004484:	lea    edx,[ecx+0x1]
64004487:	mov    al,BYTE PTR [ecx]
64004489:	add    ecx,0x1
6400448c:	cmp    al,bl
6400448e:	jne    0x64004487
64004490:	sub    ecx,edx
64004492:	push   ecx
64004493:	push   esi
64004494:	lea    ecx,[ebp-0x28]
64004497:	call   0x64001860
6400449c:	lea    ecx,[ebp-0x28]
6400449f:	push   ecx
640044a0:	lea    edx,[ebp-0x40]
640044a3:	push   edx
640044a4:	lea    eax,[ebp-0x34]
640044a7:	push   eax
640044a8:	mov    BYTE PTR [ebp-0x4],0x10
640044ac:	call   0x64006cf0
640044b1:	mov    BYTE PTR [ebp-0x4],0x2
640044b5:	cmp    DWORD PTR [ebp-0x10],edi
640044b8:	jb     0x640044c6
640044ba:	mov    ecx,DWORD PTR [ebp-0x24]
640044bd:	push   ecx
640044be:	call   0x64013402
640044c3:	add    esp,0x4
640044c6:	push   0x64028d1c
640044cb:	push   0x6
640044cd:	push   0x64028d54
640044d2:	call   0x64006690
640044d7:	mov    esi,eax
640044d9:	mov    ecx,esi
640044db:	add    esp,0xc
640044de:	mov    DWORD PTR [ebp-0x10],0xf
640044e5:	mov    DWORD PTR [ebp-0x14],ebx
640044e8:	mov    BYTE PTR [ebp-0x24],bl
640044eb:	lea    edx,[ecx+0x1]
640044ee:	mov    edi,edi
640044f0:	mov    al,BYTE PTR [ecx]
640044f2:	add    ecx,0x1
640044f5:	cmp    al,bl
640044f7:	jne    0x640044f0
640044f9:	sub    ecx,edx
640044fb:	push   ecx
640044fc:	push   esi
640044fd:	lea    ecx,[ebp-0x28]
64004500:	call   0x64001860
64004505:	lea    edx,[ebp-0x28]
64004508:	push   edx
64004509:	lea    eax,[ebp-0x40]
6400450c:	push   eax
6400450d:	lea    ecx,[ebp-0x34]
64004510:	push   ecx
64004511:	mov    BYTE PTR [ebp-0x4],0x11
64004515:	call   0x64006cf0
6400451a:	mov    BYTE PTR [ebp-0x4],0x2
6400451e:	cmp    DWORD PTR [ebp-0x10],edi
64004521:	jb     0x6400452f
64004523:	mov    edx,DWORD PTR [ebp-0x24]
64004526:	push   edx
64004527:	call   0x64013402
6400452c:	add    esp,0x4
6400452f:	push   0x64028d5c
64004534:	push   0x3
64004536:	push   0x64028d84
6400453b:	call   0x64006690
64004540:	mov    esi,eax
64004542:	mov    ecx,esi
64004544:	add    esp,0xc
64004547:	mov    DWORD PTR [ebp-0x10],0xf
6400454e:	mov    DWORD PTR [ebp-0x14],ebx
64004551:	mov    BYTE PTR [ebp-0x24],bl
64004554:	lea    edx,[ecx+0x1]
64004557:	mov    al,BYTE PTR [ecx]
64004559:	add    ecx,0x1
6400455c:	cmp    al,bl
6400455e:	jne    0x64004557
64004560:	sub    ecx,edx
64004562:	push   ecx
64004563:	push   esi
64004564:	lea    ecx,[ebp-0x28]
64004567:	call   0x64001860
6400456c:	lea    eax,[ebp-0x28]
6400456f:	push   eax
64004570:	lea    ecx,[ebp-0x40]
64004573:	push   ecx
64004574:	lea    edx,[ebp-0x34]
64004577:	push   edx
64004578:	mov    BYTE PTR [ebp-0x4],0x12
6400457c:	call   0x64006cf0
64004581:	mov    BYTE PTR [ebp-0x4],0x2
64004585:	cmp    DWORD PTR [ebp-0x10],edi
64004588:	jb     0x64004596
6400458a:	mov    eax,DWORD PTR [ebp-0x24]
6400458d:	push   eax
6400458e:	call   0x64013402
64004593:	add    esp,0x4
64004596:	push   0x64028d88
6400459b:	push   0x8
6400459d:	push   0x64028dac
640045a2:	call   0x64006690
640045a7:	mov    esi,eax
640045a9:	mov    ecx,esi
640045ab:	add    esp,0xc
640045ae:	mov    DWORD PTR [ebp-0x10],0xf
640045b5:	mov    DWORD PTR [ebp-0x14],ebx
640045b8:	mov    BYTE PTR [ebp-0x24],bl
640045bb:	lea    edx,[ecx+0x1]
640045be:	mov    edi,edi
640045c0:	mov    al,BYTE PTR [ecx]
640045c2:	add    ecx,0x1
640045c5:	cmp    al,bl
640045c7:	jne    0x640045c0
640045c9:	sub    ecx,edx
640045cb:	push   ecx
640045cc:	push   esi
640045cd:	lea    ecx,[ebp-0x28]
640045d0:	call   0x64001860
640045d5:	lea    ecx,[ebp-0x28]
640045d8:	push   ecx
640045d9:	lea    edx,[ebp-0x40]
640045dc:	push   edx
640045dd:	lea    eax,[ebp-0x34]
640045e0:	push   eax
640045e1:	mov    BYTE PTR [ebp-0x4],0x13
640045e5:	call   0x64006cf0
640045ea:	mov    BYTE PTR [ebp-0x4],0x2
640045ee:	cmp    DWORD PTR [ebp-0x10],edi
640045f1:	jb     0x640045ff
640045f3:	mov    ecx,DWORD PTR [ebp-0x24]
640045f6:	push   ecx
640045f7:	call   0x64013402
640045fc:	add    esp,0x4
640045ff:	push   0x64028db8
64004604:	push   0xb
64004606:	push   0x64028de8
6400460b:	call   0x64006690
64004610:	mov    esi,eax
64004612:	mov    ecx,esi
64004614:	add    esp,0xc
64004617:	mov    DWORD PTR [ebp-0x10],0xf
6400461e:	mov    DWORD PTR [ebp-0x14],ebx
64004621:	mov    BYTE PTR [ebp-0x24],bl
64004624:	lea    edx,[ecx+0x1]
64004627:	mov    al,BYTE PTR [ecx]
64004629:	add    ecx,0x1
6400462c:	cmp    al,bl
6400462e:	jne    0x64004627
64004630:	sub    ecx,edx
64004632:	push   ecx
64004633:	push   esi
64004634:	lea    ecx,[ebp-0x28]
64004637:	call   0x64001860
6400463c:	lea    edx,[ebp-0x28]
6400463f:	push   edx
64004640:	lea    eax,[ebp-0x40]
64004643:	push   eax
64004644:	lea    ecx,[ebp-0x34]
64004647:	push   ecx
64004648:	mov    BYTE PTR [ebp-0x4],0x14
6400464c:	call   0x64006cf0
64004651:	mov    BYTE PTR [ebp-0x4],0x2
64004655:	cmp    DWORD PTR [ebp-0x10],edi
64004658:	jb     0x64004666
6400465a:	mov    edx,DWORD PTR [ebp-0x24]
6400465d:	push   edx
6400465e:	call   0x64013402
64004663:	add    esp,0x4
64004666:	push   0x64028df4
6400466b:	push   edi
6400466c:	push   0x64028e30
64004671:	call   0x64006690
64004676:	mov    esi,eax
64004678:	mov    ecx,esi
6400467a:	add    esp,0xc
6400467d:	mov    DWORD PTR [ebp-0x10],0xf
64004684:	mov    DWORD PTR [ebp-0x14],ebx
64004687:	mov    BYTE PTR [ebp-0x24],bl
6400468a:	lea    edx,[ecx+0x1]
6400468d:	lea    ecx,[ecx+0x0]
64004690:	mov    al,BYTE PTR [ecx]
64004692:	add    ecx,0x1
64004695:	cmp    al,bl
64004697:	jne    0x64004690
64004699:	sub    ecx,edx
6400469b:	push   ecx
6400469c:	push   esi
6400469d:	lea    ecx,[ebp-0x28]
640046a0:	call   0x64001860
640046a5:	lea    eax,[ebp-0x28]
640046a8:	push   eax
640046a9:	lea    ecx,[ebp-0x40]
640046ac:	push   ecx
640046ad:	lea    edx,[ebp-0x34]
640046b0:	push   edx
640046b1:	mov    BYTE PTR [ebp-0x4],0x15
640046b5:	call   0x64006cf0
640046ba:	mov    BYTE PTR [ebp-0x4],0x2
640046be:	cmp    DWORD PTR [ebp-0x10],edi
640046c1:	jb     0x640046cf
640046c3:	mov    eax,DWORD PTR [ebp-0x24]
640046c6:	push   eax
640046c7:	call   0x64013402
640046cc:	add    esp,0x4
640046cf:	push   0x64028e44
640046d4:	push   0x5
640046d6:	push   0x64028e6c
640046db:	call   0x64006690
640046e0:	mov    esi,eax
640046e2:	mov    ecx,esi
640046e4:	add    esp,0xc
640046e7:	mov    DWORD PTR [ebp-0x10],0xf
640046ee:	mov    DWORD PTR [ebp-0x14],ebx
640046f1:	mov    BYTE PTR [ebp-0x24],bl
640046f4:	lea    edx,[ecx+0x1]
640046f7:	mov    al,BYTE PTR [ecx]
640046f9:	add    ecx,0x1
640046fc:	cmp    al,bl
640046fe:	jne    0x640046f7
64004700:	sub    ecx,edx
64004702:	push   ecx
64004703:	push   esi
64004704:	lea    ecx,[ebp-0x28]
64004707:	call   0x64001860
6400470c:	lea    ecx,[ebp-0x28]
6400470f:	push   ecx
64004710:	lea    edx,[ebp-0x40]
64004713:	push   edx
64004714:	lea    eax,[ebp-0x34]
64004717:	push   eax
64004718:	mov    BYTE PTR [ebp-0x4],0x16
6400471c:	call   0x64006cf0
64004721:	mov    BYTE PTR [ebp-0x4],0x2
64004725:	cmp    DWORD PTR [ebp-0x10],edi
64004728:	jb     0x64004736
6400472a:	mov    ecx,DWORD PTR [ebp-0x24]
6400472d:	push   ecx
6400472e:	call   0x64013402
64004733:	add    esp,0x4
64004736:	push   0x64028e74
6400473b:	push   0x5
6400473d:	push   0x64028eac
64004742:	call   0x64006690
64004747:	mov    esi,eax
64004749:	mov    ecx,esi
6400474b:	add    esp,0xc
6400474e:	mov    DWORD PTR [ebp-0x10],0xf
64004755:	mov    DWORD PTR [ebp-0x14],ebx
64004758:	mov    BYTE PTR [ebp-0x24],bl
6400475b:	lea    edx,[ecx+0x1]
6400475e:	mov    edi,edi
64004760:	mov    al,BYTE PTR [ecx]
64004762:	add    ecx,0x1
64004765:	cmp    al,bl
64004767:	jne    0x64004760
64004769:	sub    ecx,edx
6400476b:	push   ecx
6400476c:	push   esi
6400476d:	lea    ecx,[ebp-0x28]
64004770:	call   0x64001860
64004775:	lea    edx,[ebp-0x28]
64004778:	push   edx
64004779:	lea    eax,[ebp-0x40]
6400477c:	push   eax
6400477d:	lea    ecx,[ebp-0x34]
64004780:	push   ecx
64004781:	mov    BYTE PTR [ebp-0x4],0x17
64004785:	call   0x64006cf0
6400478a:	mov    BYTE PTR [ebp-0x4],0x2
6400478e:	cmp    DWORD PTR [ebp-0x10],edi
64004791:	jb     0x6400479f
64004793:	mov    edx,DWORD PTR [ebp-0x24]
64004796:	push   edx
64004797:	call   0x64013402
6400479c:	add    esp,0x4
6400479f:	push   0x64028eb4
640047a4:	push   0x8
640047a6:	push   0x64028ed8
640047ab:	call   0x64006690
640047b0:	mov    esi,eax
640047b2:	mov    ecx,esi
640047b4:	add    esp,0xc
640047b7:	mov    DWORD PTR [ebp-0x10],0xf
640047be:	mov    DWORD PTR [ebp-0x14],ebx
640047c1:	mov    BYTE PTR [ebp-0x24],bl
640047c4:	lea    edx,[ecx+0x1]
640047c7:	mov    al,BYTE PTR [ecx]
640047c9:	add    ecx,0x1
640047cc:	cmp    al,bl
640047ce:	jne    0x640047c7
640047d0:	sub    ecx,edx
640047d2:	push   ecx
640047d3:	push   esi
640047d4:	lea    ecx,[ebp-0x28]
640047d7:	call   0x64001860
640047dc:	lea    eax,[ebp-0x28]
640047df:	push   eax
640047e0:	lea    ecx,[ebp-0x40]
640047e3:	push   ecx
640047e4:	lea    edx,[ebp-0x34]
640047e7:	push   edx
640047e8:	mov    BYTE PTR [ebp-0x4],0x18
640047ec:	call   0x64006cf0
640047f1:	mov    BYTE PTR [ebp-0x4],0x2
640047f5:	cmp    DWORD PTR [ebp-0x10],edi
640047f8:	jb     0x64004806
640047fa:	mov    eax,DWORD PTR [ebp-0x24]
640047fd:	push   eax
640047fe:	call   0x64013402
64004803:	add    esp,0x4
64004806:	push   0x64028ee4
6400480b:	push   0x8
6400480d:	push   0x64028f08
64004812:	call   0x64006690
64004817:	add    esp,0xc
6400481a:	push   eax
6400481b:	lea    ecx,[ebp-0x28]
6400481e:	call   0x64002710
64004823:	lea    ecx,[ebp-0x28]
64004826:	push   ecx
64004827:	lea    edx,[ebp-0x40]
6400482a:	push   edx
6400482b:	lea    eax,[ebp-0x34]
6400482e:	push   eax
6400482f:	mov    BYTE PTR [ebp-0x4],0x19
64004833:	call   0x64006cf0
64004838:	mov    BYTE PTR [ebp-0x4],0x2
6400483c:	cmp    DWORD PTR [ebp-0x10],edi
6400483f:	jb     0x6400484d
64004841:	mov    ecx,DWORD PTR [ebp-0x24]
64004844:	push   ecx
64004845:	call   0x64013402
6400484a:	add    esp,0x4
6400484d:	push   0x64028f14
64004852:	push   0x4
64004854:	push   0x64028f44
64004859:	call   0x64006690
6400485e:	add    esp,0xc
64004861:	push   eax
64004862:	lea    ecx,[ebp-0x28]
64004865:	call   0x64002710
6400486a:	lea    edx,[ebp-0x28]
6400486d:	push   edx
6400486e:	lea    eax,[ebp-0x40]
64004871:	push   eax
64004872:	lea    ecx,[ebp-0x34]
64004875:	push   ecx
64004876:	mov    BYTE PTR [ebp-0x4],0x1a
6400487a:	call   0x64006cf0
6400487f:	mov    BYTE PTR [ebp-0x4],0x2
64004883:	cmp    DWORD PTR [ebp-0x10],edi
64004886:	jb     0x64004894
64004888:	mov    edx,DWORD PTR [ebp-0x24]
6400488b:	push   edx
6400488c:	call   0x64013402
64004891:	add    esp,0x4
64004894:	push   0x64028f4c
64004899:	push   0xc
6400489b:	push   0x64028f8c
640048a0:	call   0x64006690
640048a5:	add    esp,0xc
640048a8:	push   eax
640048a9:	lea    ecx,[ebp-0x28]
640048ac:	call   0x64002710
640048b1:	lea    eax,[ebp-0x28]
640048b4:	push   eax
640048b5:	lea    ecx,[ebp-0x40]
640048b8:	push   ecx
640048b9:	lea    edx,[ebp-0x34]
640048bc:	push   edx
640048bd:	mov    BYTE PTR [ebp-0x4],0x1b
640048c1:	call   0x64006cf0
640048c6:	mov    BYTE PTR [ebp-0x4],0x2
640048ca:	cmp    DWORD PTR [ebp-0x10],edi
640048cd:	jb     0x640048db
640048cf:	mov    eax,DWORD PTR [ebp-0x24]
640048d2:	push   eax
640048d3:	call   0x64013402
640048d8:	add    esp,0x4
640048db:	push   0x64028f9c
640048e0:	push   edi
640048e1:	push   0x64028fcc
640048e6:	call   0x64006690
640048eb:	add    esp,0xc
640048ee:	push   eax
640048ef:	lea    ecx,[ebp-0x28]
640048f2:	call   0x64002710
640048f7:	lea    ecx,[ebp-0x28]
640048fa:	push   ecx
640048fb:	lea    edx,[ebp-0x40]
640048fe:	push   edx
640048ff:	lea    eax,[ebp-0x34]
64004902:	push   eax
64004903:	mov    BYTE PTR [ebp-0x4],0x1c
64004907:	call   0x64006cf0
6400490c:	mov    BYTE PTR [ebp-0x4],0x2
64004910:	cmp    DWORD PTR [ebp-0x10],edi
64004913:	jb     0x64004921
64004915:	mov    ecx,DWORD PTR [ebp-0x24]
64004918:	push   ecx
64004919:	call   0x64013402
6400491e:	add    esp,0x4
64004921:	push   0x64028fe0
64004926:	push   0x7
64004928:	push   0x64029010
6400492d:	call   0x64006690
64004932:	add    esp,0xc
64004935:	push   eax
64004936:	lea    ecx,[ebp-0x28]
64004939:	call   0x64002710
6400493e:	lea    edx,[ebp-0x28]
64004941:	push   edx
64004942:	lea    eax,[ebp-0x40]
64004945:	push   eax
64004946:	lea    ecx,[ebp-0x34]
64004949:	push   ecx
6400494a:	mov    BYTE PTR [ebp-0x4],0x1d
6400494e:	call   0x64006cf0
64004953:	mov    BYTE PTR [ebp-0x4],0x2
64004957:	cmp    DWORD PTR [ebp-0x10],edi
6400495a:	jb     0x64004968
6400495c:	mov    edx,DWORD PTR [ebp-0x24]
6400495f:	push   edx
64004960:	call   0x64013402
64004965:	add    esp,0x4
64004968:	push   0x64029018
6400496d:	push   0x9
6400496f:	push   0x64029050
64004974:	call   0x64006690
64004979:	add    esp,0xc
6400497c:	push   eax
6400497d:	lea    ecx,[ebp-0x28]
64004980:	call   0x64002710
64004985:	lea    eax,[ebp-0x28]
64004988:	push   eax
64004989:	lea    ecx,[ebp-0x40]
6400498c:	push   ecx
6400498d:	lea    edx,[ebp-0x34]
64004990:	push   edx
64004991:	mov    BYTE PTR [ebp-0x4],0x1e
64004995:	call   0x64006cf0
6400499a:	mov    BYTE PTR [ebp-0x4],0x2
6400499e:	cmp    DWORD PTR [ebp-0x10],edi
640049a1:	jb     0x640049af
640049a3:	mov    eax,DWORD PTR [ebp-0x24]
640049a6:	push   eax
640049a7:	call   0x64013402
640049ac:	add    esp,0x4
640049af:	push   0x6402905c
640049b4:	push   0x7
640049b6:	push   0x64029090
640049bb:	call   0x64006690
640049c0:	add    esp,0xc
640049c3:	push   eax
640049c4:	lea    ecx,[ebp-0x28]
640049c7:	call   0x64002710
640049cc:	lea    ecx,[ebp-0x28]
640049cf:	push   ecx
640049d0:	lea    edx,[ebp-0x40]
640049d3:	push   edx
640049d4:	lea    eax,[ebp-0x34]
640049d7:	push   eax
640049d8:	mov    BYTE PTR [ebp-0x4],0x1f
640049dc:	call   0x64006cf0
640049e1:	mov    BYTE PTR [ebp-0x4],0x2
640049e5:	cmp    DWORD PTR [ebp-0x10],edi
640049e8:	jb     0x640049f6
640049ea:	mov    ecx,DWORD PTR [ebp-0x24]
640049ed:	push   ecx
640049ee:	call   0x64013402
640049f3:	add    esp,0x4
640049f6:	push   0x64029098
640049fb:	push   0xb
640049fd:	push   0x640290c8
64004a02:	call   0x64006690
64004a07:	add    esp,0xc
64004a0a:	push   eax
64004a0b:	lea    ecx,[ebp-0x28]
64004a0e:	call   0x64002710
64004a13:	lea    edx,[ebp-0x28]
64004a16:	push   edx
64004a17:	lea    eax,[ebp-0x40]
64004a1a:	push   eax
64004a1b:	lea    ecx,[ebp-0x34]
64004a1e:	push   ecx
64004a1f:	mov    BYTE PTR [ebp-0x4],0x20
64004a23:	call   0x64006cf0
64004a28:	mov    BYTE PTR [ebp-0x4],0x2
64004a2c:	cmp    DWORD PTR [ebp-0x10],edi
64004a2f:	jb     0x64004a3d
64004a31:	mov    edx,DWORD PTR [ebp-0x24]
64004a34:	push   edx
64004a35:	call   0x64013402
64004a3a:	add    esp,0x4
64004a3d:	push   0x640290d4
64004a42:	push   0x6
64004a44:	push   0x640290fc
64004a49:	call   0x64006690
64004a4e:	add    esp,0xc
64004a51:	push   eax
64004a52:	lea    ecx,[ebp-0x28]
64004a55:	call   0x64002710
64004a5a:	lea    eax,[ebp-0x28]
64004a5d:	push   eax
64004a5e:	lea    ecx,[ebp-0x40]
64004a61:	push   ecx
64004a62:	lea    edx,[ebp-0x34]
64004a65:	push   edx
64004a66:	mov    BYTE PTR [ebp-0x4],0x21
64004a6a:	call   0x64006cf0
64004a6f:	mov    BYTE PTR [ebp-0x4],0x2
64004a73:	cmp    DWORD PTR [ebp-0x10],edi
64004a76:	jb     0x64004a84
64004a78:	mov    eax,DWORD PTR [ebp-0x24]
64004a7b:	push   eax
64004a7c:	call   0x64013402
64004a81:	add    esp,0x4
64004a84:	push   0x64029104
64004a89:	push   0x6
64004a8b:	push   0x6402913c
64004a90:	call   0x64006690
64004a95:	add    esp,0xc
64004a98:	push   eax
64004a99:	lea    ecx,[ebp-0x28]
64004a9c:	call   0x64002710
64004aa1:	lea    ecx,[ebp-0x28]
64004aa4:	push   ecx
64004aa5:	lea    edx,[ebp-0x40]
64004aa8:	push   edx
64004aa9:	lea    eax,[ebp-0x34]
64004aac:	push   eax
64004aad:	mov    BYTE PTR [ebp-0x4],0x22
64004ab1:	call   0x64006cf0
64004ab6:	mov    BYTE PTR [ebp-0x4],0x2
64004aba:	cmp    DWORD PTR [ebp-0x10],edi
64004abd:	jb     0x64004acb
64004abf:	mov    ecx,DWORD PTR [ebp-0x24]
64004ac2:	push   ecx
64004ac3:	call   0x64013402
64004ac8:	add    esp,0x4
64004acb:	push   0x64029144
64004ad0:	push   0x7
64004ad2:	push   0x64029178
64004ad7:	call   0x64006690
64004adc:	add    esp,0xc
64004adf:	push   eax
64004ae0:	lea    ecx,[ebp-0x28]
64004ae3:	call   0x64002710
64004ae8:	lea    edx,[ebp-0x28]
64004aeb:	push   edx
64004aec:	lea    eax,[ebp-0x40]
64004aef:	push   eax
64004af0:	lea    ecx,[ebp-0x34]
64004af3:	push   ecx
64004af4:	mov    BYTE PTR [ebp-0x4],0x23
64004af8:	call   0x64006cf0
64004afd:	mov    BYTE PTR [ebp-0x4],0x2
64004b01:	cmp    DWORD PTR [ebp-0x10],edi
64004b04:	jb     0x64004b12
64004b06:	mov    edx,DWORD PTR [ebp-0x24]
64004b09:	push   edx
64004b0a:	call   0x64013402
64004b0f:	add    esp,0x4
64004b12:	push   0x64029180
64004b17:	push   0x9
64004b19:	push   0x640291b0
64004b1e:	call   0x64006690
64004b23:	add    esp,0xc
64004b26:	push   eax
64004b27:	lea    ecx,[ebp-0x28]
64004b2a:	call   0x64002710
64004b2f:	lea    eax,[ebp-0x28]
64004b32:	push   eax
64004b33:	lea    ecx,[ebp-0x40]
64004b36:	push   ecx
64004b37:	lea    edx,[ebp-0x34]
64004b3a:	push   edx
64004b3b:	mov    BYTE PTR [ebp-0x4],0x24
64004b3f:	call   0x64006cf0
64004b44:	mov    BYTE PTR [ebp-0x4],0x2
64004b48:	cmp    DWORD PTR [ebp-0x10],edi
64004b4b:	jb     0x64004b59
64004b4d:	mov    eax,DWORD PTR [ebp-0x24]
64004b50:	push   eax
64004b51:	call   0x64013402
64004b56:	add    esp,0x4
64004b59:	push   0x640291bc
64004b5e:	push   0x7
64004b60:	push   0x640291fc
64004b65:	call   0x64006690
64004b6a:	add    esp,0xc
64004b6d:	push   eax
64004b6e:	lea    ecx,[ebp-0x28]
64004b71:	call   0x64002710
64004b76:	lea    ecx,[ebp-0x28]
64004b79:	push   ecx
64004b7a:	lea    edx,[ebp-0x40]
64004b7d:	push   edx
64004b7e:	lea    eax,[ebp-0x34]
64004b81:	push   eax
64004b82:	mov    BYTE PTR [ebp-0x4],0x25
64004b86:	call   0x64006cf0
64004b8b:	mov    BYTE PTR [ebp-0x4],0x2
64004b8f:	cmp    DWORD PTR [ebp-0x10],edi
64004b92:	jb     0x64004ba0
64004b94:	mov    ecx,DWORD PTR [ebp-0x24]
64004b97:	push   ecx
64004b98:	call   0x64013402
64004b9d:	add    esp,0x4
64004ba0:	push   0x64029204
64004ba5:	push   0x6
64004ba7:	push   0x64029240
64004bac:	call   0x64006690
64004bb1:	add    esp,0xc
64004bb4:	push   eax
64004bb5:	lea    ecx,[ebp-0x28]
64004bb8:	call   0x64002710
64004bbd:	lea    edx,[ebp-0x28]
64004bc0:	push   edx
64004bc1:	lea    eax,[ebp-0x40]
64004bc4:	push   eax
64004bc5:	lea    ecx,[ebp-0x34]
64004bc8:	push   ecx
64004bc9:	mov    BYTE PTR [ebp-0x4],0x26
64004bcd:	call   0x64006cf0
64004bd2:	mov    BYTE PTR [ebp-0x4],0x2
64004bd6:	cmp    DWORD PTR [ebp-0x10],edi
64004bd9:	jb     0x64004be7
64004bdb:	mov    edx,DWORD PTR [ebp-0x24]
64004bde:	push   edx
64004bdf:	call   0x64013402
64004be4:	add    esp,0x4
64004be7:	push   0x64029248
64004bec:	push   0x8
64004bee:	push   0x64029278
64004bf3:	call   0x64006690
64004bf8:	add    esp,0xc
64004bfb:	push   eax
64004bfc:	lea    ecx,[ebp-0x28]
64004bff:	call   0x64002710
64004c04:	lea    eax,[ebp-0x28]
64004c07:	push   eax
64004c08:	lea    ecx,[ebp-0x40]
64004c0b:	push   ecx
64004c0c:	lea    edx,[ebp-0x34]
64004c0f:	push   edx
64004c10:	mov    BYTE PTR [ebp-0x4],0x27
64004c14:	call   0x64006cf0
64004c19:	mov    BYTE PTR [ebp-0x4],0x2
64004c1d:	cmp    DWORD PTR [ebp-0x10],edi
64004c20:	jb     0x64004c2e
64004c22:	mov    eax,DWORD PTR [ebp-0x24]
64004c25:	push   eax
64004c26:	call   0x64013402
64004c2b:	add    esp,0x4
64004c2e:	push   0x64029284
64004c33:	push   0x6
64004c35:	push   0x640292ac
64004c3a:	call   0x64006690
64004c3f:	add    esp,0xc
64004c42:	push   eax
64004c43:	lea    ecx,[ebp-0x28]
64004c46:	call   0x64002710
64004c4b:	lea    ecx,[ebp-0x28]
64004c4e:	push   ecx
64004c4f:	lea    edx,[ebp-0x40]
64004c52:	push   edx
64004c53:	lea    eax,[ebp-0x34]
64004c56:	push   eax
64004c57:	mov    BYTE PTR [ebp-0x4],0x28
64004c5b:	call   0x64006cf0
64004c60:	mov    BYTE PTR [ebp-0x4],0x2
64004c64:	cmp    DWORD PTR [ebp-0x10],edi
64004c67:	jb     0x64004c75
64004c69:	mov    ecx,DWORD PTR [ebp-0x24]
64004c6c:	push   ecx
64004c6d:	call   0x64013402
64004c72:	add    esp,0x4
64004c75:	lea    edx,[ebp-0x40]
64004c78:	push   edx
64004c79:	lea    ecx,[ebp-0x34]
64004c7c:	call   0x64003bf0
64004c81:	add    esp,0x4
64004c84:	mov    ecx,0x640334c0
64004c89:	mov    BYTE PTR [ebp-0x4],0x29
64004c8d:	call   0x64006cb0
64004c92:	lea    eax,[ebp-0x40]
64004c95:	mov    BYTE PTR [ebp-0x4],0x2
64004c99:	call   0x64007720
64004c9e:	lea    eax,[ebp-0x34]
64004ca1:	mov    BYTE PTR [ebp-0x4],bl
64004ca4:	call   0x64007720
64004ca9:	call   DWORD PTR ds:0x6402f06c
64004caf:	mov    edi,DWORD PTR [ebp+0x40c]
64004cb5:	cmp    DWORD PTR [edi-0x4],0x1
64004cb9:	mov    DWORD PTR [ebp-0x48],eax
64004cbc:	jle    0x64004cd3
64004cbe:	mov    eax,DWORD PTR [edi-0xc]
64004cc1:	push   eax
64004cc2:	lea    ecx,[ebp+0x40c]
64004cc8:	call   0x64001950
64004ccd:	mov    edi,DWORD PTR [ebp+0x40c]
64004cd3:	cmp    edi,ebx
64004cd5:	jne    0x64004cdb
64004cd7:	xor    eax,eax
64004cd9:	jmp    0x64004d08
64004cdb:	push   edi
64004cdc:	call   DWORD PTR ds:0x64026054
64004ce2:	add    eax,0x1
64004ce5:	cmp    eax,0x3fffffff
64004cea:	jle    0x64004cf0
64004cec:	xor    eax,eax
64004cee:	jmp    0x64004d08
64004cf0:	lea    esi,[eax+eax*1]
64004cf3:	mov    eax,esi
64004cf5:	call   0x640143e0
64004cfa:	mov    ecx,DWORD PTR [ebp-0x48]
64004cfd:	mov    eax,esp
64004cff:	push   ecx
64004d00:	push   esi
64004d01:	push   edi
64004d02:	push   eax
64004d03:	call   0x64002b80
64004d08:	lea    edx,[ebp+0x0]
64004d0b:	jmp    0x64004d10
64004d0d:	lea    ecx,[ecx+0x0]
64004d10:	mov    cl,BYTE PTR [eax]
64004d12:	mov    BYTE PTR [edx],cl
64004d14:	add    eax,0x1
64004d17:	add    edx,0x1
64004d1a:	cmp    cl,bl
64004d1c:	jne    0x64004d10
64004d1e:	lea    edx,[ebp+0x0]
64004d21:	push   edx
64004d22:	call   0x64020085
64004d27:	add    esp,0x4
64004d2a:	lea    eax,[ebp+0x0]
64004d2d:	push   eax
64004d2e:	lea    ecx,[ebp-0x28]
64004d31:	call   0x64002710
64004d36:	lea    eax,[ebp-0x28]
64004d39:	mov    esi,0x640334c0
64004d3e:	mov    BYTE PTR [ebp-0x4],0x2a
64004d42:	call   0x64006e80
64004d47:	test   eax,eax
64004d49:	setne  BYTE PTR [ebp-0x41]
64004d4d:	cmp    DWORD PTR [ebp-0x10],0x10
64004d51:	jb     0x64004d5f
64004d53:	mov    ecx,DWORD PTR [ebp-0x24]
64004d56:	push   ecx
64004d57:	call   0x64013402
64004d5c:	add    esp,0x4
64004d5f:	lea    eax,[edi-0x10]
64004d62:	mov    DWORD PTR [ebp-0x10],0xf
64004d69:	mov    DWORD PTR [ebp-0x14],ebx
64004d6c:	mov    BYTE PTR [ebp-0x24],bl
64004d6f:	mov    DWORD PTR [ebp-0x4],0xffffffff
64004d76:	lea    edx,[eax+0xc]
64004d79:	or     ecx,0xffffffff
64004d7c:	lock xadd DWORD PTR [edx],ecx
64004d80:	dec    ecx
64004d81:	test   ecx,ecx
64004d83:	jg     0x64004d8f
64004d85:	mov    ecx,DWORD PTR [eax]
64004d87:	mov    edx,DWORD PTR [ecx]
64004d89:	push   eax
64004d8a:	mov    eax,DWORD PTR [edx+0x4]
64004d8d:	call   eax
64004d8f:	mov    al,BYTE PTR [ebp-0x41]
64004d92:	lea    esp,[ebp-0x58]
64004d95:	mov    ecx,DWORD PTR [ebp-0xc]
64004d98:	mov    DWORD PTR fs:0x0,ecx
64004d9f:	pop    ecx
64004da0:	pop    edi
64004da1:	pop    esi
64004da2:	pop    ebx
64004da3:	mov    ecx,DWORD PTR [ebp+0x400]
64004da9:	xor    ecx,ebp
64004dab:	call   0x64013c5c
64004db0:	add    ebp,0x404
64004db6:	mov    esp,ebp
64004db8:	pop    ebp
64004db9:	ret    
64004dba:	int3   
64004dbb:	int3   
64004dbc:	int3   
64004dbd:	int3   
64004dbe:	int3   
64004dbf:	int3   
64004dc0:	push   ebp
64004dc1:	lea    ebp,[esp-0x404]
64004dc8:	sub    esp,0x404
64004dce:	push   0xffffffff
64004dd0:	push   0x64024ce9
64004dd5:	mov    eax,fs:0x0
64004ddb:	push   eax
64004ddc:	sub    esp,0x3c
64004ddf:	mov    eax,ds:0x6402f09c
64004de4:	xor    eax,ebp
64004de6:	mov    DWORD PTR [ebp+0x400],eax
64004dec:	push   ebx
64004ded:	push   esi
64004dee:	push   edi
64004def:	push   eax
64004df0:	lea    eax,[ebp-0xc]
64004df3:	mov    fs:0x0,eax
64004df9:	xor    ebx,ebx
64004dfb:	mov    DWORD PTR [ebp-0x4],ebx
64004dfe:	test   BYTE PTR ds:0x640334bc,0x1
64004e05:	jne    0x64004e4d
64004e07:	or     DWORD PTR ds:0x640334bc,0x1
64004e0e:	mov    BYTE PTR [ebp-0x4],0x1
64004e12:	call   0x64008050
64004e17:	mov    ds:0x640334b4,eax
64004e1c:	mov    BYTE PTR [eax+0x29],0x1
64004e20:	mov    eax,ds:0x640334b4
64004e25:	mov    DWORD PTR [eax+0x4],eax
64004e28:	mov    eax,ds:0x640334b4
64004e2d:	mov    DWORD PTR [eax],eax
64004e2f:	mov    eax,ds:0x640334b4
64004e34:	mov    DWORD PTR [eax+0x8],eax
64004e37:	push   0x64025360
64004e3c:	mov    DWORD PTR ds:0x640334b8,ebx
64004e42:	call   0x64013d8f
64004e47:	add    esp,0x4
64004e4a:	mov    BYTE PTR [ebp-0x4],bl
64004e4d:	cmp    DWORD PTR ds:0x640334b8,ebx
64004e53:	jne    0x64005e0b
64004e59:	call   0x64008050
64004e5e:	mov    DWORD PTR [ebp-0x30],eax
64004e61:	mov    BYTE PTR [eax+0x29],0x1
64004e65:	mov    eax,DWORD PTR [ebp-0x30]
64004e68:	mov    DWORD PTR [eax+0x4],eax
64004e6b:	mov    eax,DWORD PTR [ebp-0x30]
64004e6e:	mov    DWORD PTR [eax],eax
64004e70:	mov    eax,DWORD PTR [ebp-0x30]
64004e73:	mov    DWORD PTR [eax+0x8],eax
64004e76:	mov    DWORD PTR [ebp-0x2c],ebx
64004e79:	push   0x640292b4
64004e7e:	push   0xd
64004e80:	push   0x640292dc
64004e85:	mov    BYTE PTR [ebp-0x4],0x2
64004e89:	call   0x64006690
64004e8e:	mov    esi,eax
64004e90:	mov    ecx,esi
64004e92:	add    esp,0xc
64004e95:	mov    DWORD PTR [ebp-0x10],0xf
64004e9c:	mov    DWORD PTR [ebp-0x14],ebx
64004e9f:	mov    BYTE PTR [ebp-0x24],bl
64004ea2:	lea    edi,[ecx+0x1]
64004ea5:	mov    al,BYTE PTR [ecx]
64004ea7:	add    ecx,0x1
64004eaa:	cmp    al,bl
64004eac:	jne    0x64004ea5
64004eae:	sub    ecx,edi
64004eb0:	push   ecx
64004eb1:	push   esi
64004eb2:	lea    ecx,[ebp-0x28]
64004eb5:	call   0x64001860
64004eba:	lea    eax,[ebp-0x28]
64004ebd:	push   eax
64004ebe:	lea    ecx,[ebp-0x40]
64004ec1:	push   ecx
64004ec2:	lea    edx,[ebp-0x34]
64004ec5:	push   edx
64004ec6:	mov    BYTE PTR [ebp-0x4],0x3
64004eca:	call   0x64006cf0
64004ecf:	mov    BYTE PTR [ebp-0x4],0x2
64004ed3:	cmp    DWORD PTR [ebp-0x10],0x10
64004ed7:	jb     0x64004ee5
64004ed9:	mov    eax,DWORD PTR [ebp-0x24]
64004edc:	push   eax
64004edd:	call   0x64013402
64004ee2:	add    esp,0x4
64004ee5:	push   0x640292ec
64004eea:	push   0x5
64004eec:	push   0x64029314
64004ef1:	call   0x64006690
64004ef6:	mov    esi,eax
64004ef8:	mov    ecx,esi
64004efa:	add    esp,0xc
64004efd:	mov    DWORD PTR [ebp-0x10],0xf
64004f04:	mov    DWORD PTR [ebp-0x14],ebx
64004f07:	mov    BYTE PTR [ebp-0x24],bl
64004f0a:	lea    edx,[ecx+0x1]
64004f0d:	lea    ecx,[ecx+0x0]
64004f10:	mov    al,BYTE PTR [ecx]
64004f12:	add    ecx,0x1
64004f15:	cmp    al,bl
64004f17:	jne    0x64004f10
64004f19:	sub    ecx,edx
64004f1b:	push   ecx
64004f1c:	push   esi
64004f1d:	lea    ecx,[ebp-0x28]
64004f20:	call   0x64001860
64004f25:	lea    ecx,[ebp-0x28]
64004f28:	push   ecx
64004f29:	lea    edx,[ebp-0x40]
64004f2c:	push   edx
64004f2d:	lea    eax,[ebp-0x34]
64004f30:	push   eax
64004f31:	mov    BYTE PTR [ebp-0x4],0x4
64004f35:	call   0x64006cf0
64004f3a:	mov    edi,0x10
64004f3f:	mov    BYTE PTR [ebp-0x4],0x2
64004f43:	cmp    DWORD PTR [ebp-0x10],edi
64004f46:	jb     0x64004f54
64004f48:	mov    ecx,DWORD PTR [ebp-0x24]
64004f4b:	push   ecx
64004f4c:	call   0x64013402
64004f51:	add    esp,0x4
64004f54:	push   0x6402931c
64004f59:	push   0x5
64004f5b:	push   0x64029340
64004f60:	call   0x64006690
64004f65:	mov    esi,eax
64004f67:	mov    ecx,esi
64004f69:	add    esp,0xc
64004f6c:	mov    DWORD PTR [ebp-0x10],0xf
64004f73:	mov    DWORD PTR [ebp-0x14],ebx
64004f76:	mov    BYTE PTR [ebp-0x24],bl
64004f79:	lea    edx,[ecx+0x1]
64004f7c:	lea    esp,[esp+0x0]
64004f80:	mov    al,BYTE PTR [ecx]
64004f82:	add    ecx,0x1
64004f85:	cmp    al,bl
64004f87:	jne    0x64004f80
64004f89:	sub    ecx,edx
64004f8b:	push   ecx
64004f8c:	push   esi
64004f8d:	lea    ecx,[ebp-0x28]
64004f90:	call   0x64001860
64004f95:	lea    edx,[ebp-0x28]
64004f98:	push   edx
64004f99:	lea    eax,[ebp-0x40]
64004f9c:	push   eax
64004f9d:	lea    ecx,[ebp-0x34]
64004fa0:	push   ecx
64004fa1:	mov    BYTE PTR [ebp-0x4],0x5
64004fa5:	call   0x64006cf0
64004faa:	mov    BYTE PTR [ebp-0x4],0x2
64004fae:	cmp    DWORD PTR [ebp-0x10],edi
64004fb1:	jb     0x64004fbf
64004fb3:	mov    edx,DWORD PTR [ebp-0x24]
64004fb6:	push   edx
64004fb7:	call   0x64013402
64004fbc:	add    esp,0x4
64004fbf:	push   0x64029348
64004fc4:	push   0x11
64004fc6:	push   0x64029370
64004fcb:	call   0x64006690
64004fd0:	mov    esi,eax
64004fd2:	mov    ecx,esi
64004fd4:	add    esp,0xc
64004fd7:	mov    DWORD PTR [ebp-0x10],0xf
64004fde:	mov    DWORD PTR [ebp-0x14],ebx
64004fe1:	mov    BYTE PTR [ebp-0x24],bl
64004fe4:	lea    edx,[ecx+0x1]
64004fe7:	mov    al,BYTE PTR [ecx]
64004fe9:	add    ecx,0x1
64004fec:	cmp    al,bl
64004fee:	jne    0x64004fe7
64004ff0:	sub    ecx,edx
64004ff2:	push   ecx
64004ff3:	push   esi
64004ff4:	lea    ecx,[ebp-0x28]
64004ff7:	call   0x64001860
64004ffc:	lea    eax,[ebp-0x28]
64004fff:	push   eax
64005000:	lea    ecx,[ebp-0x40]
64005003:	push   ecx
64005004:	lea    edx,[ebp-0x34]
64005007:	push   edx
64005008:	mov    BYTE PTR [ebp-0x4],0x6
6400500c:	call   0x64006cf0
64005011:	mov    BYTE PTR [ebp-0x4],0x2
64005015:	cmp    DWORD PTR [ebp-0x10],edi
64005018:	jb     0x64005026
6400501a:	mov    eax,DWORD PTR [ebp-0x24]
6400501d:	push   eax
6400501e:	call   0x64013402
64005023:	add    esp,0x4
64005026:	push   0x64029384
6400502b:	push   0x6
6400502d:	push   0x640293bc
64005032:	call   0x64006690
64005037:	mov    esi,eax
64005039:	mov    ecx,esi
6400503b:	add    esp,0xc
6400503e:	mov    DWORD PTR [ebp-0x10],0xf
64005045:	mov    DWORD PTR [ebp-0x14],ebx
64005048:	mov    BYTE PTR [ebp-0x24],bl
6400504b:	lea    edx,[ecx+0x1]
6400504e:	mov    edi,edi
64005050:	mov    al,BYTE PTR [ecx]
64005052:	add    ecx,0x1
64005055:	cmp    al,bl
64005057:	jne    0x64005050
64005059:	sub    ecx,edx
6400505b:	push   ecx
6400505c:	push   esi
6400505d:	lea    ecx,[ebp-0x28]
64005060:	call   0x64001860
64005065:	lea    ecx,[ebp-0x28]
64005068:	push   ecx
64005069:	lea    edx,[ebp-0x40]
6400506c:	push   edx
6400506d:	lea    eax,[ebp-0x34]
64005070:	push   eax
64005071:	mov    BYTE PTR [ebp-0x4],0x7
64005075:	call   0x64006cf0
6400507a:	mov    BYTE PTR [ebp-0x4],0x2
6400507e:	cmp    DWORD PTR [ebp-0x10],edi
64005081:	jb     0x6400508f
64005083:	mov    ecx,DWORD PTR [ebp-0x24]
64005086:	push   ecx
64005087:	call   0x64013402
6400508c:	add    esp,0x4
6400508f:	push   0x640293c4
64005094:	push   0x3
64005096:	push   0x640293e8
6400509b:	call   0x64006690
640050a0:	mov    esi,eax
640050a2:	mov    ecx,esi
640050a4:	add    esp,0xc
640050a7:	mov    DWORD PTR [ebp-0x10],0xf
640050ae:	mov    DWORD PTR [ebp-0x14],ebx
640050b1:	mov    BYTE PTR [ebp-0x24],bl
640050b4:	lea    edx,[ecx+0x1]
640050b7:	mov    al,BYTE PTR [ecx]
640050b9:	add    ecx,0x1
640050bc:	cmp    al,bl
640050be:	jne    0x640050b7
640050c0:	sub    ecx,edx
640050c2:	push   ecx
640050c3:	push   esi
640050c4:	lea    ecx,[ebp-0x28]
640050c7:	call   0x64001860
640050cc:	lea    edx,[ebp-0x28]
640050cf:	push   edx
640050d0:	lea    eax,[ebp-0x40]
640050d3:	push   eax
640050d4:	lea    ecx,[ebp-0x34]
640050d7:	push   ecx
640050d8:	mov    BYTE PTR [ebp-0x4],0x8
640050dc:	call   0x64006cf0
640050e1:	mov    BYTE PTR [ebp-0x4],0x2
640050e5:	cmp    DWORD PTR [ebp-0x10],edi
640050e8:	jb     0x640050f6
640050ea:	mov    edx,DWORD PTR [ebp-0x24]
640050ed:	push   edx
640050ee:	call   0x64013402
640050f3:	add    esp,0x4
640050f6:	push   0x640293ec
640050fb:	push   0x3
640050fd:	push   0x64029410
64005102:	call   0x64006690
64005107:	mov    esi,eax
64005109:	mov    ecx,esi
6400510b:	add    esp,0xc
6400510e:	mov    DWORD PTR [ebp-0x10],0xf
64005115:	mov    DWORD PTR [ebp-0x14],ebx
64005118:	mov    BYTE PTR [ebp-0x24],bl
6400511b:	lea    edx,[ecx+0x1]
6400511e:	mov    edi,edi
64005120:	mov    al,BYTE PTR [ecx]
64005122:	add    ecx,0x1
64005125:	cmp    al,bl
64005127:	jne    0x64005120
64005129:	sub    ecx,edx
6400512b:	push   ecx
6400512c:	push   esi
6400512d:	lea    ecx,[ebp-0x28]
64005130:	call   0x64001860
64005135:	lea    eax,[ebp-0x28]
64005138:	push   eax
64005139:	lea    ecx,[ebp-0x40]
6400513c:	push   ecx
6400513d:	lea    edx,[ebp-0x34]
64005140:	push   edx
64005141:	mov    BYTE PTR [ebp-0x4],0x9
64005145:	call   0x64006cf0
6400514a:	mov    BYTE PTR [ebp-0x4],0x2
6400514e:	cmp    DWORD PTR [ebp-0x10],edi
64005151:	jb     0x6400515f
64005153:	mov    eax,DWORD PTR [ebp-0x24]
64005156:	push   eax
64005157:	call   0x64013402
6400515c:	add    esp,0x4
6400515f:	push   0x64029414
64005164:	push   0x3
64005166:	push   0x64029454
6400516b:	call   0x64006690
64005170:	mov    esi,eax
64005172:	mov    ecx,esi
64005174:	add    esp,0xc
64005177:	mov    DWORD PTR [ebp-0x10],0xf
6400517e:	mov    DWORD PTR [ebp-0x14],ebx
64005181:	mov    BYTE PTR [ebp-0x24],bl
64005184:	lea    edx,[ecx+0x1]
64005187:	mov    al,BYTE PTR [ecx]
64005189:	add    ecx,0x1
6400518c:	cmp    al,bl
6400518e:	jne    0x64005187
64005190:	sub    ecx,edx
64005192:	push   ecx
64005193:	push   esi
64005194:	lea    ecx,[ebp-0x28]
64005197:	call   0x64001860
6400519c:	lea    ecx,[ebp-0x28]
6400519f:	push   ecx
640051a0:	lea    edx,[ebp-0x40]
640051a3:	push   edx
640051a4:	lea    eax,[ebp-0x34]
640051a7:	push   eax
640051a8:	mov    BYTE PTR [ebp-0x4],0xa
640051ac:	call   0x64006cf0
640051b1:	mov    BYTE PTR [ebp-0x4],0x2
640051b5:	cmp    DWORD PTR [ebp-0x10],edi
640051b8:	jb     0x640051c6
640051ba:	mov    ecx,DWORD PTR [ebp-0x24]
640051bd:	push   ecx
640051be:	call   0x64013402
640051c3:	add    esp,0x4
640051c6:	push   0x64029458
640051cb:	push   0x4
640051cd:	push   0x64029494
640051d2:	call   0x64006690
640051d7:	mov    esi,eax
640051d9:	mov    ecx,esi
640051db:	add    esp,0xc
640051de:	mov    DWORD PTR [ebp-0x10],0xf
640051e5:	mov    DWORD PTR [ebp-0x14],ebx
640051e8:	mov    BYTE PTR [ebp-0x24],bl
640051eb:	lea    edx,[ecx+0x1]
640051ee:	mov    edi,edi
640051f0:	mov    al,BYTE PTR [ecx]
640051f2:	add    ecx,0x1
640051f5:	cmp    al,bl
640051f7:	jne    0x640051f0
640051f9:	sub    ecx,edx
640051fb:	push   ecx
640051fc:	push   esi
640051fd:	lea    ecx,[ebp-0x28]
64005200:	call   0x64001860
64005205:	lea    edx,[ebp-0x28]
64005208:	push   edx
64005209:	lea    eax,[ebp-0x40]
6400520c:	push   eax
6400520d:	lea    ecx,[ebp-0x34]
64005210:	push   ecx
64005211:	mov    BYTE PTR [ebp-0x4],0xb
64005215:	call   0x64006cf0
6400521a:	mov    BYTE PTR [ebp-0x4],0x2
6400521e:	cmp    DWORD PTR [ebp-0x10],edi
64005221:	jb     0x6400522f
64005223:	mov    edx,DWORD PTR [ebp-0x24]
64005226:	push   edx
64005227:	call   0x64013402
6400522c:	add    esp,0x4
6400522f:	push   0x6402949c
64005234:	push   0x5
64005236:	push   0x640294cc
6400523b:	call   0x64006690
64005240:	mov    esi,eax
64005242:	mov    ecx,esi
64005244:	add    esp,0xc
64005247:	mov    DWORD PTR [ebp-0x10],0xf
6400524e:	mov    DWORD PTR [ebp-0x14],ebx
64005251:	mov    BYTE PTR [ebp-0x24],bl
64005254:	lea    edx,[ecx+0x1]
64005257:	mov    al,BYTE PTR [ecx]
64005259:	add    ecx,0x1
6400525c:	cmp    al,bl
6400525e:	jne    0x64005257
64005260:	sub    ecx,edx
64005262:	push   ecx
64005263:	push   esi
64005264:	lea    ecx,[ebp-0x28]
64005267:	call   0x64001860
6400526c:	lea    eax,[ebp-0x28]
6400526f:	push   eax
64005270:	lea    ecx,[ebp-0x40]
64005273:	push   ecx
64005274:	lea    edx,[ebp-0x34]
64005277:	push   edx
64005278:	mov    BYTE PTR [ebp-0x4],0xc
6400527c:	call   0x64006cf0
64005281:	mov    BYTE PTR [ebp-0x4],0x2
64005285:	cmp    DWORD PTR [ebp-0x10],edi
64005288:	jb     0x64005296
6400528a:	mov    eax,DWORD PTR [ebp-0x24]
6400528d:	push   eax
6400528e:	call   0x64013402
64005293:	add    esp,0x4
64005296:	push   0x640294d4
6400529b:	push   0x8
6400529d:	push   0x64029500
640052a2:	call   0x64006690
640052a7:	mov    esi,eax
640052a9:	mov    ecx,esi
640052ab:	add    esp,0xc
640052ae:	mov    DWORD PTR [ebp-0x10],0xf
640052b5:	mov    DWORD PTR [ebp-0x14],ebx
640052b8:	mov    BYTE PTR [ebp-0x24],bl
640052bb:	lea    edx,[ecx+0x1]
640052be:	mov    edi,edi
640052c0:	mov    al,BYTE PTR [ecx]
640052c2:	add    ecx,0x1
640052c5:	cmp    al,bl
640052c7:	jne    0x640052c0
640052c9:	sub    ecx,edx
640052cb:	push   ecx
640052cc:	push   esi
640052cd:	lea    ecx,[ebp-0x28]
640052d0:	call   0x64001860
640052d5:	lea    ecx,[ebp-0x28]
640052d8:	push   ecx
640052d9:	lea    edx,[ebp-0x40]
640052dc:	push   edx
640052dd:	lea    eax,[ebp-0x34]
640052e0:	push   eax
640052e1:	mov    BYTE PTR [ebp-0x4],0xd
640052e5:	call   0x64006cf0
640052ea:	mov    BYTE PTR [ebp-0x4],0x2
640052ee:	cmp    DWORD PTR [ebp-0x10],edi
640052f1:	jb     0x640052ff
640052f3:	mov    ecx,DWORD PTR [ebp-0x24]
640052f6:	push   ecx
640052f7:	call   0x64013402
640052fc:	add    esp,0x4
640052ff:	push   0x6402950c
64005304:	push   0x4
64005306:	push   0x64029540
6400530b:	call   0x64006690
64005310:	mov    esi,eax
64005312:	mov    ecx,esi
64005314:	add    esp,0xc
64005317:	mov    DWORD PTR [ebp-0x10],0xf
6400531e:	mov    DWORD PTR [ebp-0x14],ebx
64005321:	mov    BYTE PTR [ebp-0x24],bl
64005324:	lea    edx,[ecx+0x1]
64005327:	mov    al,BYTE PTR [ecx]
64005329:	add    ecx,0x1
6400532c:	cmp    al,bl
6400532e:	jne    0x64005327
64005330:	sub    ecx,edx
64005332:	push   ecx
64005333:	push   esi
64005334:	lea    ecx,[ebp-0x28]
64005337:	call   0x64001860
6400533c:	lea    edx,[ebp-0x28]
6400533f:	push   edx
64005340:	lea    eax,[ebp-0x40]
64005343:	push   eax
64005344:	lea    ecx,[ebp-0x34]
64005347:	push   ecx
64005348:	mov    BYTE PTR [ebp-0x4],0xe
6400534c:	call   0x64006cf0
64005351:	mov    BYTE PTR [ebp-0x4],0x2
64005355:	cmp    DWORD PTR [ebp-0x10],edi
64005358:	jb     0x64005366
6400535a:	mov    edx,DWORD PTR [ebp-0x24]
6400535d:	push   edx
6400535e:	call   0x64013402
64005363:	add    esp,0x4
64005366:	push   0x64029548
6400536b:	push   0x5
6400536d:	push   0x64029588
64005372:	call   0x64006690
64005377:	mov    esi,eax
64005379:	mov    ecx,esi
6400537b:	add    esp,0xc
6400537e:	mov    DWORD PTR [ebp-0x10],0xf
64005385:	mov    DWORD PTR [ebp-0x14],ebx
64005388:	mov    BYTE PTR [ebp-0x24],bl
6400538b:	lea    edx,[ecx+0x1]
6400538e:	mov    edi,edi
64005390:	mov    al,BYTE PTR [ecx]
64005392:	add    ecx,0x1
64005395:	cmp    al,bl
64005397:	jne    0x64005390
64005399:	sub    ecx,edx
6400539b:	push   ecx
6400539c:	push   esi
6400539d:	lea    ecx,[ebp-0x28]
640053a0:	call   0x64001860
640053a5:	lea    eax,[ebp-0x28]
640053a8:	push   eax
640053a9:	lea    ecx,[ebp-0x40]
640053ac:	push   ecx
640053ad:	lea    edx,[ebp-0x34]
640053b0:	push   edx
640053b1:	mov    BYTE PTR [ebp-0x4],0xf
640053b5:	call   0x64006cf0
640053ba:	mov    BYTE PTR [ebp-0x4],0x2
640053be:	cmp    DWORD PTR [ebp-0x10],edi
640053c1:	jb     0x640053cf
640053c3:	mov    eax,DWORD PTR [ebp-0x24]
640053c6:	push   eax
640053c7:	call   0x64013402
640053cc:	add    esp,0x4
640053cf:	push   0x64029590
640053d4:	push   0x5
640053d6:	push   0x640295d0
640053db:	call   0x64006690
640053e0:	mov    esi,eax
640053e2:	mov    ecx,esi
640053e4:	add    esp,0xc
640053e7:	mov    DWORD PTR [ebp-0x10],0xf
640053ee:	mov    DWORD PTR [ebp-0x14],ebx
640053f1:	mov    BYTE PTR [ebp-0x24],bl
640053f4:	lea    edx,[ecx+0x1]
640053f7:	mov    al,BYTE PTR [ecx]
640053f9:	add    ecx,0x1
640053fc:	cmp    al,bl
640053fe:	jne    0x640053f7
64005400:	sub    ecx,edx
64005402:	push   ecx
64005403:	push   esi
64005404:	lea    ecx,[ebp-0x28]
64005407:	call   0x64001860
6400540c:	lea    ecx,[ebp-0x28]
6400540f:	push   ecx
64005410:	lea    edx,[ebp-0x40]
64005413:	push   edx
64005414:	lea    eax,[ebp-0x34]
64005417:	push   eax
64005418:	mov    BYTE PTR [ebp-0x4],0x10
6400541c:	call   0x64006cf0
64005421:	mov    BYTE PTR [ebp-0x4],0x2
64005425:	cmp    DWORD PTR [ebp-0x10],edi
64005428:	jb     0x64005436
6400542a:	mov    ecx,DWORD PTR [ebp-0x24]
6400542d:	push   ecx
6400542e:	call   0x64013402
64005433:	add    esp,0x4
64005436:	push   0x640295d8
6400543b:	push   0x4
6400543d:	push   0x64029608
64005442:	call   0x64006690
64005447:	mov    esi,eax
64005449:	mov    ecx,esi
6400544b:	add    esp,0xc
6400544e:	mov    DWORD PTR [ebp-0x10],0xf
64005455:	mov    DWORD PTR [ebp-0x14],ebx
64005458:	mov    BYTE PTR [ebp-0x24],bl
6400545b:	lea    edx,[ecx+0x1]
6400545e:	mov    edi,edi
64005460:	mov    al,BYTE PTR [ecx]
64005462:	add    ecx,0x1
64005465:	cmp    al,bl
64005467:	jne    0x64005460
64005469:	sub    ecx,edx
6400546b:	push   ecx
6400546c:	push   esi
6400546d:	lea    ecx,[ebp-0x28]
64005470:	call   0x64001860
64005475:	lea    edx,[ebp-0x28]
64005478:	push   edx
64005479:	lea    eax,[ebp-0x40]
6400547c:	push   eax
6400547d:	lea    ecx,[ebp-0x34]
64005480:	push   ecx
64005481:	mov    BYTE PTR [ebp-0x4],0x11
64005485:	call   0x64006cf0
6400548a:	mov    BYTE PTR [ebp-0x4],0x2
6400548e:	cmp    DWORD PTR [ebp-0x10],edi
64005491:	jb     0x6400549f
64005493:	mov    edx,DWORD PTR [ebp-0x24]
64005496:	push   edx
64005497:	call   0x64013402
6400549c:	add    esp,0x4
6400549f:	push   0x64029610
640054a4:	push   0x8
640054a6:	push   0x6402964c
640054ab:	call   0x64006690
640054b0:	mov    esi,eax
640054b2:	mov    ecx,esi
640054b4:	add    esp,0xc
640054b7:	mov    DWORD PTR [ebp-0x10],0xf
640054be:	mov    DWORD PTR [ebp-0x14],ebx
640054c1:	mov    BYTE PTR [ebp-0x24],bl
640054c4:	lea    edx,[ecx+0x1]
640054c7:	mov    al,BYTE PTR [ecx]
640054c9:	add    ecx,0x1
640054cc:	cmp    al,bl
640054ce:	jne    0x640054c7
640054d0:	sub    ecx,edx
640054d2:	push   ecx
640054d3:	push   esi
640054d4:	lea    ecx,[ebp-0x28]
640054d7:	call   0x64001860
640054dc:	lea    eax,[ebp-0x28]
640054df:	push   eax
640054e0:	lea    ecx,[ebp-0x40]
640054e3:	push   ecx
640054e4:	lea    edx,[ebp-0x34]
640054e7:	push   edx
640054e8:	mov    BYTE PTR [ebp-0x4],0x12
640054ec:	call   0x64006cf0
640054f1:	mov    BYTE PTR [ebp-0x4],0x2
640054f5:	cmp    DWORD PTR [ebp-0x10],edi
640054f8:	jb     0x64005506
640054fa:	mov    eax,DWORD PTR [ebp-0x24]
640054fd:	push   eax
640054fe:	call   0x64013402
64005503:	add    esp,0x4
64005506:	push   0x64029658
6400550b:	push   0x6
6400550d:	push   0x64029698
64005512:	call   0x64006690
64005517:	mov    esi,eax
64005519:	mov    ecx,esi
6400551b:	add    esp,0xc
6400551e:	mov    DWORD PTR [ebp-0x10],0xf
64005525:	mov    DWORD PTR [ebp-0x14],ebx
64005528:	mov    BYTE PTR [ebp-0x24],bl
6400552b:	lea    edx,[ecx+0x1]
6400552e:	mov    edi,edi
64005530:	mov    al,BYTE PTR [ecx]
64005532:	add    ecx,0x1
64005535:	cmp    al,bl
64005537:	jne    0x64005530
64005539:	sub    ecx,edx
6400553b:	push   ecx
6400553c:	push   esi
6400553d:	lea    ecx,[ebp-0x28]
64005540:	call   0x64001860
64005545:	lea    ecx,[ebp-0x28]
64005548:	push   ecx
64005549:	lea    edx,[ebp-0x40]
6400554c:	push   edx
6400554d:	lea    eax,[ebp-0x34]
64005550:	push   eax
64005551:	mov    BYTE PTR [ebp-0x4],0x13
64005555:	call   0x64006cf0
6400555a:	mov    BYTE PTR [ebp-0x4],0x2
6400555e:	cmp    DWORD PTR [ebp-0x10],edi
64005561:	jb     0x6400556f
64005563:	mov    ecx,DWORD PTR [ebp-0x24]
64005566:	push   ecx
64005567:	call   0x64013402
6400556c:	add    esp,0x4
6400556f:	push   0x640296a0
64005574:	push   0x8
64005576:	push   0x640296dc
6400557b:	call   0x64006690
64005580:	mov    esi,eax
64005582:	mov    ecx,esi
64005584:	add    esp,0xc
64005587:	mov    DWORD PTR [ebp-0x10],0xf
6400558e:	mov    DWORD PTR [ebp-0x14],ebx
64005591:	mov    BYTE PTR [ebp-0x24],bl
64005594:	lea    edx,[ecx+0x1]
64005597:	mov    al,BYTE PTR [ecx]
64005599:	add    ecx,0x1
6400559c:	cmp    al,bl
6400559e:	jne    0x64005597
640055a0:	sub    ecx,edx
640055a2:	push   ecx
640055a3:	push   esi
640055a4:	lea    ecx,[ebp-0x28]
640055a7:	call   0x64001860
640055ac:	lea    edx,[ebp-0x28]
640055af:	push   edx
640055b0:	lea    eax,[ebp-0x40]
640055b3:	push   eax
640055b4:	lea    ecx,[ebp-0x34]
640055b7:	push   ecx
640055b8:	mov    BYTE PTR [ebp-0x4],0x14
640055bc:	call   0x64006cf0
640055c1:	mov    BYTE PTR [ebp-0x4],0x2
640055c5:	cmp    DWORD PTR [ebp-0x10],edi
640055c8:	jb     0x640055d6
640055ca:	mov    edx,DWORD PTR [ebp-0x24]
640055cd:	push   edx
640055ce:	call   0x64013402
640055d3:	add    esp,0x4
640055d6:	push   0x640296e8
640055db:	push   0x6
640055dd:	push   0x64029710
640055e2:	call   0x64006690
640055e7:	mov    esi,eax
640055e9:	mov    ecx,esi
640055eb:	add    esp,0xc
640055ee:	mov    DWORD PTR [ebp-0x10],0xf
640055f5:	mov    DWORD PTR [ebp-0x14],ebx
640055f8:	mov    BYTE PTR [ebp-0x24],bl
640055fb:	lea    edx,[ecx+0x1]
640055fe:	mov    edi,edi
64005600:	mov    al,BYTE PTR [ecx]
64005602:	add    ecx,0x1
64005605:	cmp    al,bl
64005607:	jne    0x64005600
64005609:	sub    ecx,edx
6400560b:	push   ecx
6400560c:	push   esi
6400560d:	lea    ecx,[ebp-0x28]
64005610:	call   0x64001860
64005615:	lea    eax,[ebp-0x28]
64005618:	push   eax
64005619:	lea    ecx,[ebp-0x40]
6400561c:	push   ecx
6400561d:	lea    edx,[ebp-0x34]
64005620:	push   edx
64005621:	mov    BYTE PTR [ebp-0x4],0x15
64005625:	call   0x64006cf0
6400562a:	mov    BYTE PTR [ebp-0x4],0x2
6400562e:	cmp    DWORD PTR [ebp-0x10],edi
64005631:	jb     0x6400563f
64005633:	mov    eax,DWORD PTR [ebp-0x24]
64005636:	push   eax
64005637:	call   0x64013402
6400563c:	add    esp,0x4
6400563f:	push   0x64029718
64005644:	push   0x7
64005646:	push   0x64029740
6400564b:	call   0x64006690
64005650:	mov    esi,eax
64005652:	mov    ecx,esi
64005654:	add    esp,0xc
64005657:	mov    DWORD PTR [ebp-0x10],0xf
6400565e:	mov    DWORD PTR [ebp-0x14],ebx
64005661:	mov    BYTE PTR [ebp-0x24],bl
64005664:	lea    edx,[ecx+0x1]
64005667:	mov    al,BYTE PTR [ecx]
64005669:	add    ecx,0x1
6400566c:	cmp    al,bl
6400566e:	jne    0x64005667
64005670:	sub    ecx,edx
64005672:	push   ecx
64005673:	push   esi
64005674:	lea    ecx,[ebp-0x28]
64005677:	call   0x64001860
6400567c:	lea    ecx,[ebp-0x28]
6400567f:	push   ecx
64005680:	lea    edx,[ebp-0x40]
64005683:	push   edx
64005684:	lea    eax,[ebp-0x34]
64005687:	push   eax
64005688:	mov    BYTE PTR [ebp-0x4],0x16
6400568c:	call   0x64006cf0
64005691:	mov    BYTE PTR [ebp-0x4],0x2
64005695:	cmp    DWORD PTR [ebp-0x10],edi
64005698:	jb     0x640056a6
6400569a:	mov    ecx,DWORD PTR [ebp-0x24]
6400569d:	push   ecx
6400569e:	call   0x64013402
640056a3:	add    esp,0x4
640056a6:	push   0x64029748
640056ab:	push   0x5
640056ad:	push   0x64029788
640056b2:	call   0x64006690
640056b7:	mov    esi,eax
640056b9:	mov    ecx,esi
640056bb:	add    esp,0xc
640056be:	mov    DWORD PTR [ebp-0x10],0xf
640056c5:	mov    DWORD PTR [ebp-0x14],ebx
640056c8:	mov    BYTE PTR [ebp-0x24],bl
640056cb:	lea    edx,[ecx+0x1]
640056ce:	mov    edi,edi
640056d0:	mov    al,BYTE PTR [ecx]
640056d2:	add    ecx,0x1
640056d5:	cmp    al,bl
640056d7:	jne    0x640056d0
640056d9:	sub    ecx,edx
640056db:	push   ecx
640056dc:	push   esi
640056dd:	lea    ecx,[ebp-0x28]
640056e0:	call   0x64001860
640056e5:	lea    edx,[ebp-0x28]
640056e8:	push   edx
640056e9:	lea    eax,[ebp-0x40]
640056ec:	push   eax
640056ed:	lea    ecx,[ebp-0x34]
640056f0:	push   ecx
640056f1:	mov    BYTE PTR [ebp-0x4],0x17
640056f5:	call   0x64006cf0
640056fa:	mov    BYTE PTR [ebp-0x4],0x2
640056fe:	cmp    DWORD PTR [ebp-0x10],edi
64005701:	jb     0x6400570f
64005703:	mov    edx,DWORD PTR [ebp-0x24]
64005706:	push   edx
64005707:	call   0x64013402
6400570c:	add    esp,0x4
6400570f:	push   0x64029790
64005714:	push   0x5
64005716:	push   0x640297b8
6400571b:	call   0x64006690
64005720:	mov    esi,eax
64005722:	mov    ecx,esi
64005724:	add    esp,0xc
64005727:	mov    DWORD PTR [ebp-0x10],0xf
6400572e:	mov    DWORD PTR [ebp-0x14],ebx
64005731:	mov    BYTE PTR [ebp-0x24],bl
64005734:	lea    edx,[ecx+0x1]
64005737:	mov    al,BYTE PTR [ecx]
64005739:	add    ecx,0x1
6400573c:	cmp    al,bl
6400573e:	jne    0x64005737
64005740:	sub    ecx,edx
64005742:	push   ecx
64005743:	push   esi
64005744:	lea    ecx,[ebp-0x28]
64005747:	call   0x64001860
6400574c:	lea    eax,[ebp-0x28]
6400574f:	push   eax
64005750:	lea    ecx,[ebp-0x40]
64005753:	push   ecx
64005754:	lea    edx,[ebp-0x34]
64005757:	push   edx
64005758:	mov    BYTE PTR [ebp-0x4],0x18
6400575c:	call   0x64006cf0
64005761:	mov    BYTE PTR [ebp-0x4],0x2
64005765:	cmp    DWORD PTR [ebp-0x10],edi
64005768:	jb     0x64005776
6400576a:	mov    eax,DWORD PTR [ebp-0x24]
6400576d:	push   eax
6400576e:	call   0x64013402
64005773:	add    esp,0x4
64005776:	push   0x640297c0
6400577b:	push   0x7
6400577d:	push   0x640297f0
64005782:	call   0x64006690
64005787:	add    esp,0xc
6400578a:	push   eax
6400578b:	lea    ecx,[ebp-0x28]
6400578e:	call   0x64002710
64005793:	lea    ecx,[ebp-0x28]
64005796:	push   ecx
64005797:	lea    edx,[ebp-0x40]
6400579a:	push   edx
6400579b:	lea    eax,[ebp-0x34]
6400579e:	push   eax
6400579f:	mov    BYTE PTR [ebp-0x4],0x19
640057a3:	call   0x64006cf0
640057a8:	mov    BYTE PTR [ebp-0x4],0x2
640057ac:	cmp    DWORD PTR [ebp-0x10],edi
640057af:	jb     0x640057bd
640057b1:	mov    ecx,DWORD PTR [ebp-0x24]
640057b4:	push   ecx
640057b5:	call   0x64013402
640057ba:	add    esp,0x4
640057bd:	push   0x640297f8
640057c2:	push   0x6
640057c4:	push   0x64029828
640057c9:	call   0x64006690
640057ce:	add    esp,0xc
640057d1:	push   eax
640057d2:	lea    ecx,[ebp-0x28]
640057d5:	call   0x64002710
640057da:	lea    edx,[ebp-0x28]
640057dd:	push   edx
640057de:	lea    eax,[ebp-0x40]
640057e1:	push   eax
640057e2:	lea    ecx,[ebp-0x34]
640057e5:	push   ecx
640057e6:	mov    BYTE PTR [ebp-0x4],0x1a
640057ea:	call   0x64006cf0
640057ef:	mov    BYTE PTR [ebp-0x4],0x2
640057f3:	cmp    DWORD PTR [ebp-0x10],edi
640057f6:	jb     0x64005804
640057f8:	mov    edx,DWORD PTR [ebp-0x24]
640057fb:	push   edx
640057fc:	call   0x64013402
64005801:	add    esp,0x4
64005804:	push   0x64029830
64005809:	push   0xe
6400580b:	push   0x6402986c
64005810:	call   0x64006690
64005815:	add    esp,0xc
64005818:	push   eax
64005819:	lea    ecx,[ebp-0x28]
6400581c:	call   0x64002710
64005821:	lea    eax,[ebp-0x28]
64005824:	push   eax
64005825:	lea    ecx,[ebp-0x40]
64005828:	push   ecx
64005829:	lea    edx,[ebp-0x34]
6400582c:	push   edx
6400582d:	mov    BYTE PTR [ebp-0x4],0x1b
64005831:	call   0x64006cf0
64005836:	mov    BYTE PTR [ebp-0x4],0x2
6400583a:	cmp    DWORD PTR [ebp-0x10],edi
6400583d:	jb     0x6400584b
6400583f:	mov    eax,DWORD PTR [ebp-0x24]
64005842:	push   eax
64005843:	call   0x64013402
64005848:	add    esp,0x4
6400584b:	push   0x6402987c
64005850:	push   0x12
64005852:	push   0x640298a0
64005857:	call   0x64006690
6400585c:	add    esp,0xc
6400585f:	push   eax
64005860:	lea    ecx,[ebp-0x28]
64005863:	call   0x64002710
64005868:	lea    ecx,[ebp-0x28]
6400586b:	push   ecx
6400586c:	lea    edx,[ebp-0x40]
6400586f:	push   edx
64005870:	lea    eax,[ebp-0x34]
64005873:	push   eax
64005874:	mov    BYTE PTR [ebp-0x4],0x1c
64005878:	call   0x64006cf0
6400587d:	mov    BYTE PTR [ebp-0x4],0x2
64005881:	cmp    DWORD PTR [ebp-0x10],edi
64005884:	jb     0x64005892
64005886:	mov    ecx,DWORD PTR [ebp-0x24]
64005889:	push   ecx
6400588a:	call   0x64013402
6400588f:	add    esp,0x4
64005892:	push   0x640298b4
64005897:	push   0x17
64005899:	push   0x640298ec
6400589e:	call   0x64006690
640058a3:	add    esp,0xc
640058a6:	push   eax
640058a7:	lea    ecx,[ebp-0x28]
640058aa:	call   0x64002710
640058af:	lea    edx,[ebp-0x28]
640058b2:	push   edx
640058b3:	lea    eax,[ebp-0x40]
640058b6:	push   eax
640058b7:	lea    ecx,[ebp-0x34]
640058ba:	push   ecx
640058bb:	mov    BYTE PTR [ebp-0x4],0x1d
640058bf:	call   0x64006cf0
640058c4:	mov    BYTE PTR [ebp-0x4],0x2
640058c8:	cmp    DWORD PTR [ebp-0x10],edi
640058cb:	jb     0x640058d9
640058cd:	mov    edx,DWORD PTR [ebp-0x24]
640058d0:	push   edx
640058d1:	call   0x64013402
640058d6:	add    esp,0x4
640058d9:	push   0x64029904
640058de:	push   0x11
640058e0:	push   0x64029930
640058e5:	call   0x64006690
640058ea:	add    esp,0xc
640058ed:	push   eax
640058ee:	lea    ecx,[ebp-0x28]
640058f1:	call   0x64002710
640058f6:	lea    eax,[ebp-0x28]
640058f9:	push   eax
640058fa:	lea    ecx,[ebp-0x40]
640058fd:	push   ecx
640058fe:	lea    edx,[ebp-0x34]
64005901:	push   edx
64005902:	mov    BYTE PTR [ebp-0x4],0x1e
64005906:	call   0x64006cf0
6400590b:	mov    BYTE PTR [ebp-0x4],0x2
6400590f:	cmp    DWORD PTR [ebp-0x10],edi
64005912:	jb     0x64005920
64005914:	mov    eax,DWORD PTR [ebp-0x24]
64005917:	push   eax
64005918:	call   0x64013402
6400591d:	add    esp,0x4
64005920:	push   0x64029944
64005925:	push   0x8
64005927:	push   0x64029984
6400592c:	call   0x64006690
64005931:	add    esp,0xc
64005934:	push   eax
64005935:	lea    ecx,[ebp-0x28]
64005938:	call   0x64002710
6400593d:	lea    ecx,[ebp-0x28]
64005940:	push   ecx
64005941:	lea    edx,[ebp-0x40]
64005944:	push   edx
64005945:	lea    eax,[ebp-0x34]
64005948:	push   eax
64005949:	mov    BYTE PTR [ebp-0x4],0x1f
6400594d:	call   0x64006cf0
64005952:	mov    BYTE PTR [ebp-0x4],0x2
64005956:	cmp    DWORD PTR [ebp-0x10],edi
64005959:	jb     0x64005967
6400595b:	mov    ecx,DWORD PTR [ebp-0x24]
6400595e:	push   ecx
6400595f:	call   0x64013402
64005964:	add    esp,0x4
64005967:	push   0x64029990
6400596c:	push   0x6
6400596e:	push   0x640299bc
64005973:	call   0x64006690
64005978:	add    esp,0xc
6400597b:	push   eax
6400597c:	lea    ecx,[ebp-0x28]
6400597f:	call   0x64002710
64005984:	lea    edx,[ebp-0x28]
64005987:	push   edx
64005988:	lea    eax,[ebp-0x40]
6400598b:	push   eax
6400598c:	lea    ecx,[ebp-0x34]
6400598f:	push   ecx
64005990:	mov    BYTE PTR [ebp-0x4],0x20
64005994:	call   0x64006cf0
64005999:	mov    BYTE PTR [ebp-0x4],0x2
6400599d:	cmp    DWORD PTR [ebp-0x10],edi
640059a0:	jb     0x640059ae
640059a2:	mov    edx,DWORD PTR [ebp-0x24]
640059a5:	push   edx
640059a6:	call   0x64013402
640059ab:	add    esp,0x4
640059ae:	push   0x640299c4
640059b3:	push   0x6
640059b5:	push   0x640299ec
640059ba:	call   0x64006690
640059bf:	add    esp,0xc
640059c2:	push   eax
640059c3:	lea    ecx,[ebp-0x28]
640059c6:	call   0x64002710
640059cb:	lea    eax,[ebp-0x28]
640059ce:	push   eax
640059cf:	lea    ecx,[ebp-0x40]
640059d2:	push   ecx
640059d3:	lea    edx,[ebp-0x34]
640059d6:	push   edx
640059d7:	mov    BYTE PTR [ebp-0x4],0x21
640059db:	call   0x64006cf0
640059e0:	mov    BYTE PTR [ebp-0x4],0x2
640059e4:	cmp    DWORD PTR [ebp-0x10],edi
640059e7:	jb     0x640059f5
640059e9:	mov    eax,DWORD PTR [ebp-0x24]
640059ec:	push   eax
640059ed:	call   0x64013402
640059f2:	add    esp,0x4
640059f5:	push   0x640299f4
640059fa:	push   0x8
640059fc:	push   0x64029a30
64005a01:	call   0x64006690
64005a06:	add    esp,0xc
64005a09:	push   eax
64005a0a:	lea    ecx,[ebp-0x28]
64005a0d:	call   0x64002710
64005a12:	lea    ecx,[ebp-0x28]
64005a15:	push   ecx
64005a16:	lea    edx,[ebp-0x40]
64005a19:	push   edx
64005a1a:	lea    eax,[ebp-0x34]
64005a1d:	push   eax
64005a1e:	mov    BYTE PTR [ebp-0x4],0x22
64005a22:	call   0x64006cf0
64005a27:	mov    BYTE PTR [ebp-0x4],0x2
64005a2b:	cmp    DWORD PTR [ebp-0x10],edi
64005a2e:	jb     0x64005a3c
64005a30:	mov    ecx,DWORD PTR [ebp-0x24]
64005a33:	push   ecx
64005a34:	call   0x64013402
64005a39:	add    esp,0x4
64005a3c:	push   0x64029a3c
64005a41:	push   0x6
64005a43:	push   0x64029a64
64005a48:	call   0x64006690
64005a4d:	add    esp,0xc
64005a50:	push   eax
64005a51:	lea    ecx,[ebp-0x28]
64005a54:	call   0x64002710
64005a59:	lea    edx,[ebp-0x28]
64005a5c:	push   edx
64005a5d:	lea    eax,[ebp-0x40]
64005a60:	push   eax
64005a61:	lea    ecx,[ebp-0x34]
64005a64:	push   ecx
64005a65:	mov    BYTE PTR [ebp-0x4],0x23
64005a69:	call   0x64006cf0
64005a6e:	mov    BYTE PTR [ebp-0x4],0x2
64005a72:	cmp    DWORD PTR [ebp-0x10],edi
64005a75:	jb     0x64005a83
64005a77:	mov    edx,DWORD PTR [ebp-0x24]
64005a7a:	push   edx
64005a7b:	call   0x64013402
64005a80:	add    esp,0x4
64005a83:	push   0x64029a70
64005a88:	push   0x7
64005a8a:	push   0x64029ab0
64005a8f:	call   0x64006690
64005a94:	add    esp,0xc
64005a97:	push   eax
64005a98:	lea    ecx,[ebp-0x28]
64005a9b:	call   0x64002710
64005aa0:	lea    eax,[ebp-0x28]
64005aa3:	push   eax
64005aa4:	lea    ecx,[ebp-0x40]
64005aa7:	push   ecx
64005aa8:	lea    edx,[ebp-0x34]
64005aab:	push   edx
64005aac:	mov    BYTE PTR [ebp-0x4],0x24
64005ab0:	call   0x64006cf0
64005ab5:	mov    BYTE PTR [ebp-0x4],0x2
64005ab9:	cmp    DWORD PTR [ebp-0x10],edi
64005abc:	jb     0x64005aca
64005abe:	mov    eax,DWORD PTR [ebp-0x24]
64005ac1:	push   eax
64005ac2:	call   0x64013402
64005ac7:	add    esp,0x4
64005aca:	push   0x64029ab8
64005acf:	push   0x6
64005ad1:	push   0x64029ae0
64005ad6:	call   0x64006690
64005adb:	add    esp,0xc
64005ade:	push   eax
64005adf:	lea    ecx,[ebp-0x28]
64005ae2:	call   0x64002710
64005ae7:	lea    ecx,[ebp-0x28]
64005aea:	push   ecx
64005aeb:	lea    edx,[ebp-0x40]
64005aee:	push   edx
64005aef:	lea    eax,[ebp-0x34]
64005af2:	push   eax
64005af3:	mov    BYTE PTR [ebp-0x4],0x25
64005af7:	call   0x64006cf0
64005afc:	mov    BYTE PTR [ebp-0x4],0x2
64005b00:	cmp    DWORD PTR [ebp-0x10],edi
64005b03:	jb     0x64005b11
64005b05:	mov    ecx,DWORD PTR [ebp-0x24]
64005b08:	push   ecx
64005b09:	call   0x64013402
64005b0e:	add    esp,0x4
64005b11:	push   0x64029ae8
64005b16:	push   0x6
64005b18:	push   0x64029b20
64005b1d:	call   0x64006690
64005b22:	add    esp,0xc
64005b25:	push   eax
64005b26:	lea    ecx,[ebp-0x28]
64005b29:	call   0x64002710
64005b2e:	lea    edx,[ebp-0x28]
64005b31:	push   edx
64005b32:	lea    eax,[ebp-0x40]
64005b35:	push   eax
64005b36:	lea    ecx,[ebp-0x34]
64005b39:	push   ecx
64005b3a:	mov    BYTE PTR [ebp-0x4],0x26
64005b3e:	call   0x64006cf0
64005b43:	mov    BYTE PTR [ebp-0x4],0x2
64005b47:	cmp    DWORD PTR [ebp-0x10],edi
64005b4a:	jb     0x64005b58
64005b4c:	mov    edx,DWORD PTR [ebp-0x24]
64005b4f:	push   edx
64005b50:	call   0x64013402
64005b55:	add    esp,0x4
64005b58:	push   0x64029b28
64005b5d:	push   0x5
64005b5f:	push   0x64029b4c
64005b64:	call   0x64006690
64005b69:	add    esp,0xc
64005b6c:	push   eax
64005b6d:	lea    ecx,[ebp-0x28]
64005b70:	call   0x64002710
64005b75:	lea    eax,[ebp-0x28]
64005b78:	push   eax
64005b79:	lea    ecx,[ebp-0x40]
64005b7c:	push   ecx
64005b7d:	lea    edx,[ebp-0x34]
64005b80:	push   edx
64005b81:	mov    BYTE PTR [ebp-0x4],0x27
64005b85:	call   0x64006cf0
64005b8a:	mov    BYTE PTR [ebp-0x4],0x2
64005b8e:	cmp    DWORD PTR [ebp-0x10],edi
64005b91:	jb     0x64005b9f
64005b93:	mov    eax,DWORD PTR [ebp-0x24]
64005b96:	push   eax
64005b97:	call   0x64013402
64005b9c:	add    esp,0x4
64005b9f:	push   0x64029b54
64005ba4:	push   0x6
64005ba6:	push   0x64029b7c
64005bab:	call   0x64006690
64005bb0:	add    esp,0xc
64005bb3:	push   eax
64005bb4:	lea    ecx,[ebp-0x28]
64005bb7:	call   0x64002710
64005bbc:	lea    ecx,[ebp-0x28]
64005bbf:	push   ecx
64005bc0:	lea    edx,[ebp-0x40]
64005bc3:	push   edx
64005bc4:	lea    eax,[ebp-0x34]
64005bc7:	push   eax
64005bc8:	mov    BYTE PTR [ebp-0x4],0x28
64005bcc:	call   0x64006cf0
64005bd1:	mov    BYTE PTR [ebp-0x4],0x2
64005bd5:	cmp    DWORD PTR [ebp-0x10],edi
64005bd8:	jb     0x64005be6
64005bda:	mov    ecx,DWORD PTR [ebp-0x24]
64005bdd:	push   ecx
64005bde:	call   0x64013402
64005be3:	add    esp,0x4
64005be6:	push   0x64029b84
64005beb:	push   0xa
64005bed:	push   0x64029bac
64005bf2:	call   0x64006690
64005bf7:	add    esp,0xc
64005bfa:	push   eax
64005bfb:	lea    ecx,[ebp-0x28]
64005bfe:	call   0x64002710
64005c03:	lea    edx,[ebp-0x28]
64005c06:	push   edx
64005c07:	lea    eax,[ebp-0x40]
64005c0a:	push   eax
64005c0b:	lea    ecx,[ebp-0x34]
64005c0e:	push   ecx
64005c0f:	mov    BYTE PTR [ebp-0x4],0x29
64005c13:	call   0x64006cf0
64005c18:	mov    BYTE PTR [ebp-0x4],0x2
64005c1c:	cmp    DWORD PTR [ebp-0x10],edi
64005c1f:	jb     0x64005c2d
64005c21:	mov    edx,DWORD PTR [ebp-0x24]
64005c24:	push   edx
64005c25:	call   0x64013402
64005c2a:	add    esp,0x4
64005c2d:	push   0x64029bb8
64005c32:	push   0xf
64005c34:	push   0x64029bf0
64005c39:	call   0x64006690
64005c3e:	add    esp,0xc
64005c41:	push   eax
64005c42:	lea    ecx,[ebp-0x28]
64005c45:	call   0x64002710
64005c4a:	lea    eax,[ebp-0x28]
64005c4d:	push   eax
64005c4e:	lea    ecx,[ebp-0x40]
64005c51:	push   ecx
64005c52:	lea    edx,[ebp-0x34]
64005c55:	push   edx
64005c56:	mov    BYTE PTR [ebp-0x4],0x2a
64005c5a:	call   0x64006cf0
64005c5f:	mov    BYTE PTR [ebp-0x4],0x2
64005c63:	cmp    DWORD PTR [ebp-0x10],edi
64005c66:	jb     0x64005c74
64005c68:	mov    eax,DWORD PTR [ebp-0x24]
64005c6b:	push   eax
64005c6c:	call   0x64013402
64005c71:	add    esp,0x4
64005c74:	push   0x64029c00
64005c79:	push   0xa
64005c7b:	push   0x64029c30
64005c80:	call   0x64006690
64005c85:	add    esp,0xc
64005c88:	push   eax
64005c89:	lea    ecx,[ebp-0x28]
64005c8c:	call   0x64002710
64005c91:	lea    ecx,[ebp-0x28]
64005c94:	push   ecx
64005c95:	lea    edx,[ebp-0x40]
64005c98:	push   edx
64005c99:	lea    eax,[ebp-0x34]
64005c9c:	push   eax
64005c9d:	mov    BYTE PTR [ebp-0x4],0x2b
64005ca1:	call   0x64006cf0
64005ca6:	mov    BYTE PTR [ebp-0x4],0x2
64005caa:	cmp    DWORD PTR [ebp-0x10],edi
64005cad:	jb     0x64005cbb
64005caf:	mov    ecx,DWORD PTR [ebp-0x24]
64005cb2:	push   ecx
64005cb3:	call   0x64013402
64005cb8:	add    esp,0x4
64005cbb:	push   0x64029c3c
64005cc0:	push   0xb
64005cc2:	push   0x64029c68
64005cc7:	call   0x64006690
64005ccc:	add    esp,0xc
64005ccf:	push   eax
64005cd0:	lea    ecx,[ebp-0x28]
64005cd3:	call   0x64002710
64005cd8:	lea    edx,[ebp-0x28]
64005cdb:	push   edx
64005cdc:	lea    eax,[ebp-0x40]
64005cdf:	push   eax
64005ce0:	lea    ecx,[ebp-0x34]
64005ce3:	push   ecx
64005ce4:	mov    BYTE PTR [ebp-0x4],0x2c
64005ce8:	call   0x64006cf0
64005ced:	mov    BYTE PTR [ebp-0x4],0x2
64005cf1:	cmp    DWORD PTR [ebp-0x10],edi
64005cf4:	jb     0x64005d02
64005cf6:	mov    edx,DWORD PTR [ebp-0x24]
64005cf9:	push   edx
64005cfa:	call   0x64013402
64005cff:	add    esp,0x4
64005d02:	push   0x64029c74
64005d07:	push   0x1e
64005d09:	push   0x64029ca0
64005d0e:	call   0x64006690
64005d13:	add    esp,0xc
64005d16:	push   eax
64005d17:	lea    ecx,[ebp-0x28]
64005d1a:	call   0x64002710
64005d1f:	lea    eax,[ebp-0x28]
64005d22:	push   eax
64005d23:	lea    ecx,[ebp-0x40]
64005d26:	push   ecx
64005d27:	lea    edx,[ebp-0x34]
64005d2a:	push   edx
64005d2b:	mov    BYTE PTR [ebp-0x4],0x2d
64005d2f:	call   0x64006cf0
64005d34:	mov    BYTE PTR [ebp-0x4],0x2
64005d38:	cmp    DWORD PTR [ebp-0x10],edi
64005d3b:	jb     0x64005d49
64005d3d:	mov    eax,DWORD PTR [ebp-0x24]
64005d40:	push   eax
64005d41:	call   0x64013402
64005d46:	add    esp,0x4
64005d49:	push   0x64029cc0
64005d4e:	push   0x16
64005d50:	push   0x64029ce8
64005d55:	call   0x64006690
64005d5a:	add    esp,0xc
64005d5d:	push   eax
64005d5e:	lea    ecx,[ebp-0x28]
64005d61:	call   0x64002710
64005d66:	lea    ecx,[ebp-0x28]
64005d69:	push   ecx
64005d6a:	lea    edx,[ebp-0x40]
64005d6d:	push   edx
64005d6e:	lea    eax,[ebp-0x34]
64005d71:	push   eax
64005d72:	mov    BYTE PTR [ebp-0x4],0x2e
64005d76:	call   0x64006cf0
64005d7b:	mov    BYTE PTR [ebp-0x4],0x2
64005d7f:	cmp    DWORD PTR [ebp-0x10],edi
64005d82:	jb     0x64005d90
64005d84:	mov    ecx,DWORD PTR [ebp-0x24]
64005d87:	push   ecx
64005d88:	call   0x64013402
64005d8d:	add    esp,0x4
64005d90:	push   0x64029d00
64005d95:	push   0x19
64005d97:	push   0x64029d3c
64005d9c:	call   0x64006690
64005da1:	add    esp,0xc
64005da4:	push   eax
64005da5:	lea    ecx,[ebp-0x28]
64005da8:	call   0x64002710
64005dad:	lea    edx,[ebp-0x28]
64005db0:	push   edx
64005db1:	lea    eax,[ebp-0x40]
64005db4:	push   eax
64005db5:	lea    ecx,[ebp-0x34]
64005db8:	push   ecx
64005db9:	mov    BYTE PTR [ebp-0x4],0x2f
64005dbd:	call   0x64006cf0
64005dc2:	mov    BYTE PTR [ebp-0x4],0x2
64005dc6:	cmp    DWORD PTR [ebp-0x10],edi
64005dc9:	jb     0x64005dd7
64005dcb:	mov    edx,DWORD PTR [ebp-0x24]
64005dce:	push   edx
64005dcf:	call   0x64013402
64005dd4:	add    esp,0x4
64005dd7:	lea    eax,[ebp-0x40]
64005dda:	push   eax
64005ddb:	lea    ecx,[ebp-0x34]
64005dde:	call   0x64003bf0
64005de3:	add    esp,0x4
64005de6:	mov    ecx,0x640334b0
64005deb:	mov    BYTE PTR [ebp-0x4],0x30
64005def:	call   0x64006cb0
64005df4:	lea    eax,[ebp-0x40]
64005df7:	mov    BYTE PTR [ebp-0x4],0x2
64005dfb:	call   0x64007720
64005e00:	lea    eax,[ebp-0x34]
64005e03:	mov    BYTE PTR [ebp-0x4],bl
64005e06:	call   0x64007720
64005e0b:	call   DWORD PTR ds:0x6402f06c
64005e11:	mov    edi,DWORD PTR [ebp+0x40c]
64005e17:	cmp    DWORD PTR [edi-0x4],0x1
64005e1b:	mov    DWORD PTR [ebp-0x48],eax
64005e1e:	jle    0x64005e35
64005e20:	mov    ecx,DWORD PTR [edi-0xc]
64005e23:	push   ecx
64005e24:	lea    ecx,[ebp+0x40c]
64005e2a:	call   0x64001950
64005e2f:	mov    edi,DWORD PTR [ebp+0x40c]
64005e35:	cmp    edi,ebx
64005e37:	jne    0x64005e3d
64005e39:	xor    eax,eax
64005e3b:	jmp    0x64005e6a
64005e3d:	push   edi
64005e3e:	call   DWORD PTR ds:0x64026054
64005e44:	add    eax,0x1
64005e47:	cmp    eax,0x3fffffff
64005e4c:	jle    0x64005e52
64005e4e:	xor    eax,eax
64005e50:	jmp    0x64005e6a
64005e52:	lea    esi,[eax+eax*1]
64005e55:	mov    eax,esi
64005e57:	call   0x640143e0
64005e5c:	mov    edx,DWORD PTR [ebp-0x48]
64005e5f:	mov    eax,esp
64005e61:	push   edx
64005e62:	push   esi
64005e63:	push   edi
64005e64:	push   eax
64005e65:	call   0x64002b80
64005e6a:	lea    edx,[ebp+0x0]
64005e6d:	lea    ecx,[ecx+0x0]
64005e70:	mov    cl,BYTE PTR [eax]
64005e72:	mov    BYTE PTR [edx],cl
64005e74:	add    eax,0x1
64005e77:	add    edx,0x1
64005e7a:	cmp    cl,bl
64005e7c:	jne    0x64005e70
64005e7e:	lea    eax,[ebp+0x0]
64005e81:	push   eax
64005e82:	call   0x64020085
64005e87:	add    esp,0x4
64005e8a:	lea    ecx,[ebp+0x0]
64005e8d:	push   ecx
64005e8e:	lea    ecx,[ebp-0x28]
64005e91:	call   0x64002710
64005e96:	lea    eax,[ebp-0x28]
64005e99:	mov    esi,0x640334b0
64005e9e:	mov    BYTE PTR [ebp-0x4],0x31
64005ea2:	call   0x64006e80
64005ea7:	test   eax,eax
64005ea9:	setne  BYTE PTR [ebp-0x41]
64005ead:	cmp    DWORD PTR [ebp-0x10],0x10
64005eb1:	jb     0x64005ebf
64005eb3:	mov    edx,DWORD PTR [ebp-0x24]
64005eb6:	push   edx
64005eb7:	call   0x64013402
64005ebc:	add    esp,0x4
64005ebf:	lea    eax,[edi-0x10]
64005ec2:	mov    DWORD PTR [ebp-0x10],0xf
64005ec9:	mov    DWORD PTR [ebp-0x14],ebx
64005ecc:	mov    BYTE PTR [ebp-0x24],bl
64005ecf:	mov    DWORD PTR [ebp-0x4],0xffffffff
64005ed6:	lea    ecx,[eax+0xc]
64005ed9:	or     edx,0xffffffff
64005edc:	lock xadd DWORD PTR [ecx],edx
64005ee0:	dec    edx
64005ee1:	test   edx,edx
64005ee3:	jg     0x64005eef
64005ee5:	mov    ecx,DWORD PTR [eax]
64005ee7:	mov    edx,DWORD PTR [ecx]
64005ee9:	push   eax
64005eea:	mov    eax,DWORD PTR [edx+0x4]
64005eed:	call   eax
64005eef:	mov    al,BYTE PTR [ebp-0x41]
64005ef2:	lea    esp,[ebp-0x58]
64005ef5:	mov    ecx,DWORD PTR [ebp-0xc]
64005ef8:	mov    DWORD PTR fs:0x0,ecx
64005eff:	pop    ecx
64005f00:	pop    edi
64005f01:	pop    esi
64005f02:	pop    ebx
64005f03:	mov    ecx,DWORD PTR [ebp+0x400]
64005f09:	xor    ecx,ebp
64005f0b:	call   0x64013c5c
64005f10:	add    ebp,0x404
64005f16:	mov    esp,ebp
64005f18:	pop    ebp
64005f19:	ret    
64005f1a:	int3   
64005f1b:	int3   
64005f1c:	int3   
64005f1d:	int3   
64005f1e:	int3   
64005f1f:	int3   
64005f20:	push   0xffffffff
64005f22:	push   0x64024f89
64005f27:	mov    eax,fs:0x0
64005f2d:	push   eax
64005f2e:	sub    esp,0x44
64005f31:	push   ebx
64005f32:	push   ebp
64005f33:	push   esi
64005f34:	push   edi
64005f35:	mov    eax,ds:0x6402f09c
64005f3a:	xor    eax,esp
64005f3c:	push   eax
64005f3d:	lea    eax,[esp+0x58]
64005f41:	mov    fs:0x0,eax
64005f47:	xor    edi,edi
64005f49:	mov    DWORD PTR [esp+0x60],edi
64005f4d:	mov    DWORD PTR [esp+0x28],edi
64005f51:	call   DWORD PTR ds:0x6402f06c
64005f57:	mov    eax,ds:0x64030540
64005f5c:	mov    edx,DWORD PTR [eax+0xc]
64005f5f:	mov    ecx,0x64030540
64005f64:	call   edx
64005f66:	mov    ebx,DWORD PTR [esp+0x68]
64005f6a:	add    eax,0x10
64005f6d:	mov    DWORD PTR [ebx],eax
64005f6f:	push   0x4
64005f71:	push   edi
64005f72:	mov    DWORD PTR [esp+0x68],edi
64005f76:	push   edi
64005f77:	mov    DWORD PTR [esp+0x34],0x1
64005f7f:	call   0x6400f190
64005f84:	call   eax
64005f86:	cmp    eax,edi
64005f88:	mov    DWORD PTR [esp+0x1c],eax
64005f8c:	je     0x64006114
64005f92:	mov    ebp,DWORD PTR ds:0x6402600c
64005f98:	lea    ecx,[esp+0x20]
64005f9c:	push   ecx
64005f9d:	lea    edx,[esp+0x1c]
64005fa1:	push   edx
64005fa2:	lea    ecx,[esp+0x2c]
64005fa6:	push   ecx
64005fa7:	push   0x24
64005fa9:	lea    edx,[esp+0x44]
64005fad:	push   edx
64005fae:	push   0x3
64005fb0:	push   0x13f
64005fb5:	push   eax
64005fb6:	mov    DWORD PTR [esp+0x40],edi
64005fba:	call   ebp
64005fbc:	mov    esi,eax
64005fbe:	call   DWORD PTR ds:0x64026044
64005fc4:	cmp    esi,edi
64005fc6:	je     0x64005fcf
64005fc8:	cmp    eax,0xea
64005fcd:	jne    0x64006014
64005fcf:	mov    esi,DWORD PTR [esp+0x24]
64005fd3:	add    esi,0x24
64005fd6:	xor    ecx,ecx
64005fd8:	mov    eax,esi
64005fda:	mov    edx,0x24
64005fdf:	mul    edx
64005fe1:	seto   cl
64005fe4:	neg    ecx
64005fe6:	or     ecx,eax
64005fe8:	push   ecx
64005fe9:	call   0x640133fd
64005fee:	add    esp,0x4
64005ff1:	mov    edi,eax
64005ff3:	lea    eax,[esp+0x20]
64005ff7:	push   eax
64005ff8:	mov    eax,DWORD PTR [esp+0x20]
64005ffc:	lea    ecx,[esp+0x1c]
64006000:	push   ecx
64006001:	lea    edx,[esp+0x2c]
64006005:	push   edx
64006006:	push   esi
64006007:	push   edi
64006008:	push   0x3
6400600a:	push   0x13f
6400600f:	push   eax
64006010:	call   ebp
64006012:	jmp    0x64006018
64006014:	mov    edi,DWORD PTR [esp+0x2c]
64006018:	xor    ebp,ebp
6400601a:	cmp    DWORD PTR [esp+0x18],ebp
6400601e:	jbe    0x64006110
64006024:	mov    ecx,DWORD PTR [edi]
64006026:	push   ecx
64006027:	lea    ecx,[esp+0x18]
6400602b:	call   0x64002590
64006030:	mov    DWORD PTR [esp+0x60],0x1
64006038:	mov    eax,DWORD PTR [esp+0x14]
6400603c:	push   ecx
6400603d:	add    eax,0xfffffff0
64006040:	mov    DWORD PTR [esp+0x34],esp
64006044:	mov    esi,esp
64006046:	push   eax
64006047:	call   0x640028a0
6400604c:	add    eax,0x10
6400604f:	add    esp,0x4
64006052:	cmp    BYTE PTR [esp+0x70],0x0
64006057:	mov    DWORD PTR [esi],eax
64006059:	je     0x64006069
6400605b:	call   0x64004dc0
64006060:	add    esp,0x4
64006063:	test   al,al
64006065:	jne    0x64006075
64006067:	jmp    0x640060db
64006069:	call   0x64003e50
6400606e:	add    esp,0x4
64006071:	test   al,al
64006073:	jne    0x640060db
64006075:	push   0x64029d58
6400607a:	push   0x4
6400607c:	push   0x64029d98
64006081:	call   0x64006690
64006086:	add    esp,0xc
64006089:	push   eax
6400608a:	mov    ecx,ebx
6400608c:	call   0x64002660
64006091:	lea    edx,[esp+0x14]
64006095:	push   edx
64006096:	lea    eax,[esp+0x30]
6400609a:	push   eax
6400609b:	call   0x64003150
640060a0:	add    esp,0x8
640060a3:	mov    BYTE PTR [esp+0x60],0x2
640060a8:	mov    eax,DWORD PTR [eax]
640060aa:	mov    ecx,DWORD PTR [eax-0xc]
640060ad:	push   ecx
640060ae:	push   eax
640060af:	mov    ecx,ebx
640060b1:	call   0x640029e0
640060b6:	mov    BYTE PTR [esp+0x60],0x1
640060bb:	mov    eax,DWORD PTR [esp+0x2c]
640060bf:	add    eax,0xfffffff0
640060c2:	lea    ecx,[eax+0xc]
640060c5:	or     edx,0xffffffff
640060c8:	lock xadd DWORD PTR [ecx],edx
640060cc:	dec    edx
640060cd:	test   edx,edx
640060cf:	jg     0x640060db
640060d1:	mov    ecx,DWORD PTR [eax]
640060d3:	mov    edx,DWORD PTR [ecx]
640060d5:	push   eax
640060d6:	mov    eax,DWORD PTR [edx+0x4]
640060d9:	call   eax
640060db:	mov    BYTE PTR [esp+0x60],0x0
640060e0:	mov    eax,DWORD PTR [esp+0x14]
640060e4:	add    eax,0xfffffff0
640060e7:	lea    ecx,[eax+0xc]
640060ea:	or     edx,0xffffffff
640060ed:	lock xadd DWORD PTR [ecx],edx
640060f1:	dec    edx
640060f2:	test   edx,edx
640060f4:	jg     0x64006100
640060f6:	mov    ecx,DWORD PTR [eax]
640060f8:	mov    edx,DWORD PTR [ecx]
640060fa:	push   eax
640060fb:	mov    eax,DWORD PTR [edx+0x4]
640060fe:	call   eax
64006100:	add    ebp,0x1
64006103:	add    edi,0x24
64006106:	cmp    ebp,DWORD PTR [esp+0x18]
6400610a:	jb     0x64006024
64006110:	mov    eax,DWORD PTR [esp+0x1c]
64006114:	push   eax
64006115:	call   0x6400f5f0
6400611a:	call   eax
6400611c:	mov    eax,ebx
6400611e:	mov    ecx,DWORD PTR [esp+0x58]
64006122:	mov    DWORD PTR fs:0x0,ecx
64006129:	pop    ecx
6400612a:	pop    edi
6400612b:	pop    esi
6400612c:	pop    ebp
6400612d:	pop    ebx
6400612e:	add    esp,0x50
64006131:	ret    
64006132:	int3   
64006133:	int3   
64006134:	int3   
64006135:	int3   
64006136:	int3   
64006137:	int3   
64006138:	int3   
64006139:	int3   
6400613a:	int3   
6400613b:	int3   
6400613c:	int3   
6400613d:	int3   
6400613e:	int3   
6400613f:	int3   
64006140:	push   ebp
64006141:	mov    ebp,esp
64006143:	push   0xffffffff
64006145:	push   0x64024960
6400614a:	mov    eax,fs:0x0
64006150:	push   eax
64006151:	sub    esp,0x15c
64006157:	mov    eax,ds:0x6402f09c
6400615c:	xor    eax,ebp
6400615e:	mov    DWORD PTR [ebp-0x14],eax
64006161:	push   ebx
64006162:	push   esi
64006163:	push   edi
64006164:	push   eax
64006165:	lea    eax,[ebp-0xc]
64006168:	mov    fs:0x0,eax
6400616e:	mov    DWORD PTR [ebp-0x10],esp
64006171:	mov    edi,DWORD PTR [ebp+0x8]
64006174:	push   0xa0
64006179:	lea    eax,[ebp-0x154]
6400617f:	push   eax
64006180:	push   0x7d0
64006185:	push   0x64000000
6400618a:	mov    DWORD PTR [ebp-0x4],0x0
64006191:	call   DWORD PTR ds:0x640261b4
64006197:	test   eax,eax
64006199:	je     0x640061e0
6400619b:	push   ecx
6400619c:	lea    edx,[ebp-0x154]
640061a2:	mov    ecx,esp
640061a4:	mov    DWORD PTR [ebp-0x158],esp
640061aa:	push   edx
640061ab:	call   0x64002590
640061b0:	lea    esi,[ebp-0x168]
640061b6:	call   0x64002f50
640061bb:	mov    ecx,DWORD PTR [eax]
640061bd:	mov    DWORD PTR [edi],ecx
640061bf:	mov    edx,DWORD PTR [eax+0x4]
640061c2:	mov    DWORD PTR [edi+0x4],edx
640061c5:	mov    ecx,DWORD PTR [eax+0x8]
640061c8:	mov    DWORD PTR [edi+0x8],ecx
640061cb:	mov    edx,DWORD PTR [eax+0xc]
640061ce:	add    esp,0x4
640061d1:	mov    DWORD PTR [edi+0xc],edx
640061d4:	mov    al,0x1
640061d6:	jmp    0x64006203
640061d8:	mov    eax,0x640061de
640061dd:	ret    
640061de:	jmp    0x64006201
640061e0:	mov    eax,ds:0x64026c08
640061e5:	mov    DWORD PTR [edi],eax
640061e7:	mov    ecx,DWORD PTR ds:0x64026c0c
640061ed:	mov    DWORD PTR [edi+0x4],ecx
640061f0:	mov    edx,DWORD PTR ds:0x64026c10
640061f6:	mov    DWORD PTR [edi+0x8],edx
640061f9:	mov    eax,ds:0x64026c14
640061fe:	mov    DWORD PTR [edi+0xc],eax
64006201:	xor    al,al
64006203:	mov    ecx,DWORD PTR [ebp-0xc]
64006206:	mov    DWORD PTR fs:0x0,ecx
6400620d:	pop    ecx
6400620e:	pop    edi
6400620f:	pop    esi
64006210:	pop    ebx
64006211:	mov    ecx,DWORD PTR [ebp-0x14]
64006214:	xor    ecx,ebp
64006216:	call   0x64013c5c
6400621b:	mov    esp,ebp
6400621d:	pop    ebp
6400621e:	ret    
6400621f:	int3   
64006220:	sub    esp,0x118
64006226:	mov    eax,ds:0x6402f09c
6400622b:	xor    eax,esp
6400622d:	mov    DWORD PTR [esp+0x114],eax
64006234:	push   esi
64006235:	push   0x110
6400623a:	lea    eax,[esp+0xc]
6400623e:	push   0x0
64006240:	push   eax
64006241:	call   0x64014360
64006246:	mov    edx,DWORD PTR ds:0x64030540
6400624c:	mov    eax,DWORD PTR [edx+0xc]
6400624f:	add    esp,0xc
64006252:	mov    ecx,0x64030540
64006257:	mov    DWORD PTR [esp+0x4],0x114
6400625f:	call   eax
64006261:	lea    ecx,[esp+0x4]
64006265:	mov    esi,eax
64006267:	push   ecx
64006268:	add    esi,0x10
6400626b:	call   DWORD PTR ds:0x6402606c
64006271:	test   eax,eax
64006273:	je     0x640062b5
64006275:	mov    edx,DWORD PTR [esp+0x8]
64006279:	mov    eax,DWORD PTR [esp+0xc]
6400627d:	mov    DWORD PTR [edi],edx
6400627f:	mov    DWORD PTR [ebx],eax
64006281:	lea    eax,[esi-0x10]
64006284:	lea    ecx,[eax+0xc]
64006287:	or     edx,0xffffffff
6400628a:	lock xadd DWORD PTR [ecx],edx
6400628e:	dec    edx
6400628f:	test   edx,edx
64006291:	jg     0x6400629d
64006293:	mov    ecx,DWORD PTR [eax]
64006295:	mov    edx,DWORD PTR [ecx]
64006297:	push   eax
64006298:	mov    eax,DWORD PTR [edx+0x4]
6400629b:	call   eax
6400629d:	mov    al,0x1
6400629f:	pop    esi
640062a0:	mov    ecx,DWORD PTR [esp+0x114]
640062a7:	xor    ecx,esp
640062a9:	call   0x64013c5c
640062ae:	add    esp,0x118
640062b4:	ret    
640062b5:	lea    eax,[esi-0x10]
640062b8:	lea    ecx,[eax+0xc]
640062bb:	or     edx,0xffffffff
640062be:	lock xadd DWORD PTR [ecx],edx
640062c2:	dec    edx
640062c3:	test   edx,edx
640062c5:	jg     0x640062d1
640062c7:	mov    ecx,DWORD PTR [eax]
640062c9:	mov    edx,DWORD PTR [ecx]
640062cb:	push   eax
640062cc:	mov    eax,DWORD PTR [edx+0x4]
640062cf:	call   eax
640062d1:	mov    ecx,DWORD PTR [esp+0x118]
640062d8:	pop    esi
640062d9:	xor    ecx,esp
640062db:	xor    al,al
640062dd:	call   0x64013c5c
640062e2:	add    esp,0x118
640062e8:	ret    
640062e9:	int3   
640062ea:	int3   
640062eb:	int3   
640062ec:	int3   
640062ed:	int3   
640062ee:	int3   
640062ef:	int3   
640062f0:	push   ebp
640062f1:	mov    ebp,esp
640062f3:	and    esp,0xfffffff8
640062f6:	push   0xffffffff
640062f8:	push   0x64024938
640062fd:	mov    eax,fs:0x0
64006303:	push   eax
64006304:	sub    esp,0x14
64006307:	push   ebx
64006308:	push   edi
64006309:	mov    eax,ds:0x6402f09c
6400630e:	xor    eax,esp
64006310:	push   eax
64006311:	lea    eax,[esp+0x20]
64006315:	mov    fs:0x0,eax
6400631b:	cmp    DWORD PTR ds:0x64033344,0x0
64006322:	jne    0x640063d5
64006328:	push   0x64029da0
6400632d:	push   0x12
6400632f:	push   0x64029dd8
64006334:	mov    DWORD PTR ds:0x64033344,0xc
6400633e:	mov    DWORD PTR ds:0x6403334c,0x0
64006348:	call   0x64006950
6400634d:	add    esp,0xc
64006350:	push   eax
64006351:	lea    ecx,[esp+0x14]
64006355:	call   0x64002590
6400635a:	lea    ebx,[esp+0x18]
6400635e:	lea    edi,[esp+0x14]
64006362:	mov    DWORD PTR [esp+0x28],0x0
6400636a:	call   0x64006220
6400636f:	test   al,al
64006371:	je     0x64006398
64006373:	cmp    DWORD PTR [esp+0x14],0x6
64006378:	jb     0x64006398
6400637a:	push   0x64029e00
6400637f:	push   0xf
64006381:	push   0x64029e40
64006386:	call   0x64006950
6400638b:	add    esp,0xc
6400638e:	push   eax
6400638f:	lea    ecx,[esp+0x14]
64006393:	call   0x64006650
64006398:	mov    eax,DWORD PTR [esp+0x10]
6400639c:	push   0x0
6400639e:	push   0x64033348
640063a3:	push   0x1
640063a5:	push   eax
640063a6:	call   0x6400eef0
640063ab:	call   eax
640063ad:	mov    DWORD PTR [esp+0x28],0xffffffff
640063b5:	mov    eax,DWORD PTR [esp+0x10]
640063b9:	add    eax,0xfffffff0
640063bc:	lea    ecx,[eax+0xc]
640063bf:	or     edx,0xffffffff
640063c2:	lock xadd DWORD PTR [ecx],edx
640063c6:	dec    edx
640063c7:	test   edx,edx
640063c9:	jg     0x640063d5
640063cb:	mov    ecx,DWORD PTR [eax]
640063cd:	mov    edx,DWORD PTR [ecx]
640063cf:	push   eax
640063d0:	mov    eax,DWORD PTR [edx+0x4]
640063d3:	call   eax
640063d5:	mov    eax,0x64033344
640063da:	mov    ecx,DWORD PTR [esp+0x20]
640063de:	mov    DWORD PTR fs:0x0,ecx
640063e5:	pop    ecx
640063e6:	pop    edi
640063e7:	pop    ebx
640063e8:	mov    esp,ebp
640063ea:	pop    ebp
640063eb:	ret    
640063ec:	int3   
640063ed:	int3   
640063ee:	int3   
640063ef:	int3   
640063f0:	push   0xffffffff
640063f2:	push   0x64024908
640063f7:	mov    eax,fs:0x0
640063fd:	push   eax
640063fe:	push   ecx
640063ff:	push   esi
64006400:	push   edi
64006401:	mov    eax,ds:0x6402f09c
64006406:	xor    eax,esp
64006408:	push   eax
64006409:	lea    eax,[esp+0x10]
6400640d:	mov    fs:0x0,eax
64006413:	mov    esi,ecx
64006415:	mov    DWORD PTR [esp+0xc],esi
64006419:	mov    eax,ds:0x64030540
6400641e:	mov    edx,DWORD PTR [eax+0xc]
64006421:	mov    ecx,0x64030540
64006426:	call   edx
64006428:	add    eax,0x10
6400642b:	mov    DWORD PTR [esi],eax
6400642d:	mov    eax,DWORD PTR [esp+0x20]
64006431:	test   eax,eax
64006433:	mov    DWORD PTR [esp+0x18],0x0
6400643b:	je     0x64006461
6400643d:	test   eax,0xffff0000
64006442:	jne    0x64006461
64006444:	movzx  edi,ax
64006447:	push   0x0
64006449:	push   edi
6400644a:	call   0x64001fa0
6400644f:	add    esp,0x8
64006452:	test   eax,eax
64006454:	je     0x64006469
64006456:	push   edi
64006457:	push   eax
64006458:	mov    ecx,esi
6400645a:	call   0x64002910
6400645f:	jmp    0x64006469
64006461:	push   eax
64006462:	mov    ecx,esi
64006464:	call   0x64002800
64006469:	mov    eax,esi
6400646b:	mov    ecx,DWORD PTR [esp+0x10]
6400646f:	mov    DWORD PTR fs:0x0,ecx
64006476:	pop    ecx
64006477:	pop    edi
64006478:	pop    esi
64006479:	add    esp,0x10
6400647c:	ret    0x4
6400647f:	int3   
64006480:	mov    eax,DWORD PTR [edi]
64006482:	mov    edx,DWORD PTR [eax-0x8]
64006485:	push   ebx
64006486:	mov    ebx,DWORD PTR [eax-0xc]
64006489:	push   esi
6400648a:	mov    ecx,0x1
6400648f:	sub    ecx,DWORD PTR [eax-0x4]
64006492:	lea    esi,[ebx+0x1]
64006495:	sub    edx,esi
64006497:	or     ecx,edx
64006499:	jge    0x640064a3
6400649b:	push   esi
6400649c:	mov    ecx,edi
6400649e:	call   0x64001e00
640064a3:	test   esi,esi
640064a5:	movsx  ax,BYTE PTR [esp+0xc]
640064ab:	mov    ecx,DWORD PTR [edi]
640064ad:	mov    WORD PTR [ecx+ebx*2],ax
640064b1:	jl     0x640064cc
640064b3:	mov    eax,DWORD PTR [edi]
640064b5:	cmp    esi,DWORD PTR [eax-0x8]
640064b8:	jg     0x640064cc
640064ba:	mov    DWORD PTR [eax-0xc],esi
640064bd:	mov    edx,DWORD PTR [edi]
640064bf:	mov    WORD PTR [edx+esi*2],0x0
640064c5:	pop    esi
640064c6:	mov    eax,edi
640064c8:	pop    ebx
640064c9:	ret    0x4
640064cc:	push   0x80070057
640064d1:	call   0x64001040
640064d6:	int3   
640064d7:	int3   
640064d8:	int3   
640064d9:	int3   
640064da:	int3   
640064db:	int3   
640064dc:	int3   
640064dd:	int3   
640064de:	int3   
640064df:	int3   
640064e0:	mov    eax,DWORD PTR [edi]
640064e2:	mov    edx,DWORD PTR [eax-0x8]
640064e5:	push   ebx
640064e6:	mov    ebx,DWORD PTR [eax-0xc]
640064e9:	push   esi
640064ea:	mov    ecx,0x1
640064ef:	sub    ecx,DWORD PTR [eax-0x4]
640064f2:	lea    esi,[ebx+0x1]
640064f5:	sub    edx,esi
640064f7:	or     ecx,edx
640064f9:	jge    0x64006503
640064fb:	push   esi
640064fc:	mov    ecx,edi
640064fe:	call   0x64001e00
64006503:	test   esi,esi
64006505:	mov    eax,DWORD PTR [edi]
64006507:	mov    WORD PTR [eax+ebx*2],0x5c
6400650d:	jl     0x64006526
6400650f:	mov    eax,DWORD PTR [edi]
64006511:	cmp    esi,DWORD PTR [eax-0x8]
64006514:	jg     0x64006526
64006516:	mov    DWORD PTR [eax-0xc],esi
64006519:	mov    ecx,DWORD PTR [edi]
6400651b:	mov    WORD PTR [ecx+esi*2],0x0
64006521:	pop    esi
64006522:	mov    eax,edi
64006524:	pop    ebx
64006525:	ret    
64006526:	push   0x80070057
6400652b:	call   0x64001040
64006530:	int3   
64006531:	int3   
64006532:	int3   
64006533:	int3   
64006534:	int3   
64006535:	int3   
64006536:	int3   
64006537:	int3   
64006538:	int3   
64006539:	int3   
6400653a:	int3   
6400653b:	int3   
6400653c:	int3   
6400653d:	int3   
6400653e:	int3   
6400653f:	int3   
64006540:	push   esi
64006541:	push   edi
64006542:	mov    edi,DWORD PTR [ebx]
64006544:	mov    ecx,edi
64006546:	movzx  eax,WORD PTR [ecx]
64006549:	xor    edx,edx
6400654b:	test   ax,ax
6400654e:	je     0x640065a5
64006550:	cmp    ax,0x7d
64006554:	jne    0x6400655e
64006556:	test   edx,edx
64006558:	jne    0x64006560
6400655a:	mov    edx,ecx
6400655c:	jmp    0x64006560
6400655e:	xor    edx,edx
64006560:	movzx  eax,WORD PTR [ecx+0x2]
64006564:	add    ecx,0x2
64006567:	test   ax,ax
6400656a:	jne    0x64006550
6400656c:	test   edx,edx
6400656e:	je     0x640065a5
64006570:	mov    ecx,DWORD PTR [edi-0x8]
64006573:	sub    edx,edi
64006575:	sar    edx,1
64006577:	mov    eax,0x1
6400657c:	sub    eax,DWORD PTR [edi-0x4]
6400657f:	mov    esi,edx
64006581:	sub    ecx,esi
64006583:	or     eax,ecx
64006585:	jge    0x6400658f
64006587:	push   esi
64006588:	mov    ecx,ebx
6400658a:	call   0x64001e00
6400658f:	test   esi,esi
64006591:	jl     0x640065aa
64006593:	mov    eax,DWORD PTR [ebx]
64006595:	cmp    esi,DWORD PTR [eax-0x8]
64006598:	jg     0x640065aa
6400659a:	mov    DWORD PTR [eax-0xc],esi
6400659d:	mov    edx,DWORD PTR [ebx]
6400659f:	mov    WORD PTR [edx+esi*2],0x0
640065a5:	pop    edi
640065a6:	mov    eax,ebx
640065a8:	pop    esi
640065a9:	ret    
640065aa:	push   0x80070057
640065af:	call   0x64001040
640065b4:	int3   
640065b5:	int3   
640065b6:	int3   
640065b7:	int3   
640065b8:	int3   
640065b9:	int3   
640065ba:	int3   
640065bb:	int3   
640065bc:	int3   
640065bd:	int3   
640065be:	int3   
640065bf:	int3   
640065c0:	mov    ecx,DWORD PTR [ebx]
640065c2:	mov    eax,ecx
640065c4:	cmp    WORD PTR [eax],0x7b
640065c8:	jne    0x640065d9
640065ca:	lea    ebx,[ebx+0x0]
640065d0:	add    eax,0x2
640065d3:	cmp    WORD PTR [eax],0x7b
640065d7:	je     0x640065d0
640065d9:	cmp    eax,ecx
640065db:	push   esi
640065dc:	je     0x64006638
640065de:	sub    eax,ecx
640065e0:	sar    eax,1
640065e2:	push   edi
640065e3:	mov    edx,0x1
640065e8:	sub    edx,DWORD PTR [ecx-0x4]
640065eb:	mov    edi,eax
640065ed:	mov    eax,DWORD PTR [ecx-0xc]
640065f0:	mov    ecx,DWORD PTR [ecx-0x8]
640065f3:	sub    ecx,eax
640065f5:	or     edx,ecx
640065f7:	jge    0x64006601
640065f9:	push   eax
640065fa:	mov    ecx,ebx
640065fc:	call   0x64001e00
64006601:	mov    eax,DWORD PTR [ebx]
64006603:	mov    esi,DWORD PTR [eax-0xc]
64006606:	sub    esi,edi
64006608:	lea    ecx,[esi+esi*1+0x2]
6400660c:	push   ecx
6400660d:	lea    edx,[eax+edi*2]
64006610:	push   edx
64006611:	push   ecx
64006612:	push   eax
64006613:	call   0x64013633
64006618:	push   eax
64006619:	call   0x64001e90
6400661e:	add    esp,0x14
64006621:	test   esi,esi
64006623:	pop    edi
64006624:	jl     0x6400663c
64006626:	mov    eax,DWORD PTR [ebx]
64006628:	cmp    esi,DWORD PTR [eax-0x8]
6400662b:	jg     0x6400663c
6400662d:	mov    DWORD PTR [eax-0xc],esi
64006630:	mov    eax,DWORD PTR [ebx]
64006632:	mov    WORD PTR [eax+esi*2],0x0
64006638:	mov    eax,ebx
6400663a:	pop    esi
6400663b:	ret    
6400663c:	push   0x80070057
64006641:	call   0x64001040
64006646:	int3   
64006647:	int3   
64006648:	int3   
64006649:	int3   
6400664a:	int3   
6400664b:	int3   
6400664c:	int3   
6400664d:	int3   
6400664e:	int3   
6400664f:	int3   
64006650:	push   esi
64006651:	mov    esi,DWORD PTR [esp+0x8]
64006655:	test   esi,esi
64006657:	jne    0x64006666
64006659:	xor    eax,eax
6400665b:	push   eax
6400665c:	push   esi
6400665d:	call   0x640029e0
64006662:	pop    esi
64006663:	ret    0x4
64006666:	mov    eax,esi
64006668:	push   edi
64006669:	lea    edi,[eax+0x2]
6400666c:	lea    esp,[esp+0x0]
64006670:	mov    dx,WORD PTR [eax]
64006673:	add    eax,0x2
64006676:	test   dx,dx
64006679:	jne    0x64006670
6400667b:	sub    eax,edi
6400667d:	pop    edi
6400667e:	sar    eax,1
64006680:	push   eax
64006681:	push   esi
64006682:	call   0x640029e0
64006687:	pop    esi
64006688:	ret    0x4
6400668b:	int3   
6400668c:	int3   
6400668d:	int3   
6400668e:	int3   
6400668f:	int3   
64006690:	push   ebp
64006691:	mov    ebp,esp
64006693:	and    esp,0xfffffff8
64006696:	push   0xffffffff
64006698:	push   0x64023ed1
6400669d:	mov    eax,fs:0x0
640066a3:	push   eax
640066a4:	sub    esp,0xd0
640066aa:	mov    eax,ds:0x6402f09c
640066af:	xor    eax,esp
640066b1:	mov    DWORD PTR [esp+0xc8],eax
640066b8:	push   ebx
640066b9:	push   esi
640066ba:	push   edi
640066bb:	mov    eax,ds:0x6402f09c
640066c0:	xor    eax,esp
640066c2:	push   eax
640066c3:	lea    eax,[esp+0xe0]
640066ca:	mov    fs:0x0,eax
640066d0:	mov    eax,ds:0x64033268
640066d5:	mov    esi,DWORD PTR [ebp+0x8]
640066d8:	xor    ebx,ebx
640066da:	cmp    eax,ebx
640066dc:	mov    DWORD PTR [esp+0x28],esi
640066e0:	jne    0x640066f0
640066e2:	push   ebx
640066e3:	push   ebx
640066e4:	push   ebx
640066e5:	call   DWORD PTR ds:0x64026064
640066eb:	mov    ds:0x64033268,eax
640066f0:	push   0xffffffff
640066f2:	push   eax
640066f3:	call   DWORD PTR ds:0x640260b4
640066f9:	test   eax,eax
640066fb:	je     0x64006704
640066fd:	mov    eax,esi
640066ff:	jmp    0x6400692b
64006704:	mov    eax,DWORD PTR [ebp+0xc]
64006707:	push   eax
64006708:	mov    edi,0xf
6400670d:	push   esi
6400670e:	lea    ecx,[esp+0xa8]
64006715:	mov    DWORD PTR [esp+0xc0],edi
6400671c:	mov    DWORD PTR [esp+0xbc],ebx
64006723:	mov    BYTE PTR [esp+0xac],bl
6400672a:	call   0x64001860
6400672f:	lea    ecx,[esp+0xa0]
64006736:	push   ecx
64006737:	lea    edx,[esp+0x18]
6400673b:	push   edx
6400673c:	mov    DWORD PTR [esp+0xf0],ebx
64006743:	call   0x64007060
64006748:	mov    ecx,eax
6400674a:	call   0x64007960
6400674f:	call   0x64007060
64006754:	mov    esi,DWORD PTR [esp+0x14]
64006758:	cmp    esi,ebx
6400675a:	mov    ecx,DWORD PTR [eax+0x4]
6400675d:	mov    DWORD PTR [esp+0x20],ecx
64006761:	je     0x64006767
64006763:	cmp    esi,eax
64006765:	je     0x6400676c
64006767:	call   0x640137b8
6400676c:	mov    edx,DWORD PTR [esp+0x20]
64006770:	cmp    DWORD PTR [esp+0x18],edx
64006774:	jne    0x64006878
6400677a:	sub    esp,0x1c
6400677d:	mov    ecx,esp
6400677f:	mov    DWORD PTR [esp+0x48],esp
64006783:	push   0xffffffff
64006785:	push   ebx
64006786:	lea    eax,[esp+0xc4]
6400678d:	mov    DWORD PTR [ecx+0x18],edi
64006790:	mov    DWORD PTR [ecx+0x14],ebx
64006793:	push   eax
64006794:	mov    BYTE PTR [ecx+0x4],bl
64006797:	call   0x64001780
6400679c:	lea    ecx,[esp+0xd8]
640067a3:	push   ecx
640067a4:	call   0x640070f0
640067a9:	add    esp,0x4
640067ac:	mov    ecx,esp
640067ae:	mov    BYTE PTR [esp+0x104],0x1
640067b6:	mov    DWORD PTR [esp+0x48],esp
640067ba:	push   0xffffffff
640067bc:	push   ebx
640067bd:	lea    edx,[esp+0xe0]
640067c4:	mov    DWORD PTR [ecx+0x18],edi
640067c7:	mov    DWORD PTR [ecx+0x14],ebx
640067ca:	push   edx
640067cb:	mov    BYTE PTR [ecx+0x4],bl
640067ce:	call   0x64001780
640067d3:	sub    esp,0x1c
640067d6:	mov    ecx,esp
640067d8:	mov    BYTE PTR [esp+0x120],0x2
640067e0:	mov    DWORD PTR [esp+0x54],esp
640067e4:	push   0xffffffff
640067e6:	push   ebx
640067e7:	lea    eax,[esp+0xe0]
640067ee:	mov    DWORD PTR [ecx+0x18],edi
640067f1:	mov    DWORD PTR [ecx+0x14],ebx
640067f4:	push   eax
640067f5:	mov    BYTE PTR [ecx+0x4],bl
640067f8:	call   0x64001780
640067fd:	lea    ecx,[esp+0xa0]
64006804:	push   ecx
64006805:	mov    BYTE PTR [esp+0x124],0x1
6400680d:	call   0x64009b80
64006812:	add    esp,0x3c
64006815:	push   eax
64006816:	lea    ecx,[esp+0x34]
6400681a:	mov    BYTE PTR [esp+0xec],0x3
64006822:	call   0x64009c20
64006827:	lea    edx,[esp+0x30]
6400682b:	push   edx
6400682c:	lea    eax,[esp+0x20]
64006830:	push   eax
64006831:	mov    BYTE PTR [esp+0xf0],0x4
64006839:	call   0x64007060
6400683e:	mov    ecx,eax
64006840:	call   0x640077d0
64006845:	lea    ecx,[esp+0x30]
64006849:	call   0x64006ee0
6400684e:	lea    ecx,[esp+0x68]
64006852:	call   0x64006ee0
64006857:	mov    BYTE PTR [esp+0xe8],bl
6400685e:	cmp    DWORD PTR [esp+0xd4],0x10
64006866:	jb     0x64006878
64006868:	mov    ecx,DWORD PTR [esp+0xc0]
6400686f:	push   ecx
64006870:	call   0x64013402
64006875:	add    esp,0x4
64006878:	mov    edx,DWORD PTR [ebp+0x10]
6400687b:	movzx  eax,BYTE PTR [edx]
6400687e:	cmp    eax,0x100
64006883:	jge    0x640068a7
64006885:	lea    ecx,[esp+0xa0]
6400688c:	push   ecx
6400688d:	lea    edx,[esp+0x20]
64006891:	push   edx
64006892:	call   0x64007060
64006897:	mov    ecx,eax
64006899:	call   0x64007960
6400689e:	mov    esi,DWORD PTR [eax]
640068a0:	mov    eax,DWORD PTR [eax+0x4]
640068a3:	mov    DWORD PTR [esp+0x18],eax
640068a7:	call   0x64007060
640068ac:	cmp    esi,ebx
640068ae:	mov    ecx,DWORD PTR [eax+0x4]
640068b1:	mov    DWORD PTR [esp+0x20],ecx
640068b5:	je     0x640068bb
640068b7:	cmp    esi,eax
640068b9:	je     0x640068c0
640068bb:	call   0x640137b8
640068c0:	mov    edi,DWORD PTR [esp+0x18]
640068c4:	cmp    edi,DWORD PTR [esp+0x20]
640068c8:	je     0x640068ed
640068ca:	cmp    esi,ebx
640068cc:	jne    0x640068d3
640068ce:	call   0x640137b8
640068d3:	cmp    edi,DWORD PTR [esi+0x4]
640068d6:	jne    0x640068dd
640068d8:	call   0x640137b8
640068dd:	cmp    DWORD PTR [edi+0x40],0x10
640068e1:	jb     0x640068e8
640068e3:	mov    edi,DWORD PTR [edi+0x2c]
640068e6:	jmp    0x640068f1
640068e8:	add    edi,0x2c
640068eb:	jmp    0x640068f1
640068ed:	mov    edi,DWORD PTR [esp+0x28]
640068f1:	mov    eax,ds:0x64033268
640068f6:	cmp    eax,ebx
640068f8:	jne    0x64006908
640068fa:	push   ebx
640068fb:	push   ebx
640068fc:	push   ebx
640068fd:	call   DWORD PTR ds:0x64026064
64006903:	mov    ds:0x64033268,eax
64006908:	push   eax
64006909:	call   DWORD PTR ds:0x64026078
6400690f:	cmp    DWORD PTR [esp+0xb8],0x10
64006917:	jb     0x64006929
64006919:	mov    edx,DWORD PTR [esp+0xa4]
64006920:	push   edx
64006921:	call   0x64013402
64006926:	add    esp,0x4
64006929:	mov    eax,edi
6400692b:	mov    ecx,DWORD PTR [esp+0xe0]
64006932:	mov    DWORD PTR fs:0x0,ecx
64006939:	pop    ecx
6400693a:	pop    edi
6400693b:	pop    esi
6400693c:	pop    ebx
6400693d:	mov    ecx,DWORD PTR [esp+0xc8]
64006944:	xor    ecx,esp
64006946:	call   0x64013c5c
6400694b:	mov    esp,ebp
6400694d:	pop    ebp
6400694e:	ret    
6400694f:	int3   
64006950:	push   ebp
64006951:	mov    ebp,esp
64006953:	and    esp,0xfffffff8
64006956:	push   0xffffffff
64006958:	push   0x64023e71
6400695d:	mov    eax,fs:0x0
64006963:	push   eax
64006964:	sub    esp,0xd0
6400696a:	mov    eax,ds:0x6402f09c
6400696f:	xor    eax,esp
64006971:	mov    DWORD PTR [esp+0xc8],eax
64006978:	push   ebx
64006979:	push   esi
6400697a:	push   edi
6400697b:	mov    eax,ds:0x6402f09c
64006980:	xor    eax,esp
64006982:	push   eax
64006983:	lea    eax,[esp+0xe0]
6400698a:	mov    fs:0x0,eax
64006990:	mov    eax,ds:0x64033268
64006995:	mov    esi,DWORD PTR [ebp+0x8]
64006998:	xor    ebx,ebx
6400699a:	cmp    eax,ebx
6400699c:	mov    DWORD PTR [esp+0x28],esi
640069a0:	jne    0x640069b0
640069a2:	push   ebx
640069a3:	push   ebx
640069a4:	push   ebx
640069a5:	call   DWORD PTR ds:0x64026064
640069ab:	mov    ds:0x64033268,eax
640069b0:	push   0xffffffff
640069b2:	push   eax
640069b3:	call   DWORD PTR ds:0x640260b4
640069b9:	test   eax,eax
640069bb:	je     0x640069c4
640069bd:	mov    eax,esi
640069bf:	jmp    0x64006bef
640069c4:	mov    eax,DWORD PTR [ebp+0xc]
640069c7:	push   eax
640069c8:	mov    edi,0x7
640069cd:	push   esi
640069ce:	lea    ecx,[esp+0xa8]
640069d5:	mov    DWORD PTR [esp+0xc0],edi
640069dc:	mov    DWORD PTR [esp+0xbc],ebx
640069e3:	mov    WORD PTR [esp+0xac],bx
640069eb:	call   0x64008480
640069f0:	lea    ecx,[esp+0xa0]
640069f7:	push   ecx
640069f8:	lea    edx,[esp+0x18]
640069fc:	push   edx
640069fd:	mov    DWORD PTR [esp+0xf0],ebx
64006a04:	call   0x640071c0
64006a09:	mov    ecx,eax
64006a0b:	call   0x64007b20
64006a10:	call   0x640071c0
64006a15:	mov    esi,DWORD PTR [esp+0x14]
64006a19:	cmp    esi,ebx
64006a1b:	mov    ecx,DWORD PTR [eax+0x4]
64006a1e:	mov    DWORD PTR [esp+0x20],ecx
64006a22:	je     0x64006a28
64006a24:	cmp    esi,eax
64006a26:	je     0x64006a2d
64006a28:	call   0x640137b8
64006a2d:	mov    edx,DWORD PTR [esp+0x20]
64006a31:	cmp    DWORD PTR [esp+0x18],edx
64006a35:	jne    0x64006b3c
64006a3b:	sub    esp,0x1c
64006a3e:	mov    ecx,esp
64006a40:	mov    DWORD PTR [esp+0x48],esp
64006a44:	push   0xffffffff
64006a46:	push   ebx
64006a47:	lea    eax,[esp+0xc4]
64006a4e:	mov    DWORD PTR [ecx+0x18],edi
64006a51:	mov    DWORD PTR [ecx+0x14],ebx
64006a54:	push   eax
64006a55:	mov    WORD PTR [ecx+0x4],bx
64006a59:	call   0x64008390
64006a5e:	lea    ecx,[esp+0xd8]
64006a65:	push   ecx
64006a66:	call   0x64007250
64006a6b:	add    esp,0x4
64006a6e:	mov    ecx,esp
64006a70:	mov    BYTE PTR [esp+0x104],0x1
64006a78:	mov    DWORD PTR [esp+0x48],esp
64006a7c:	push   0xffffffff
64006a7e:	push   ebx
64006a7f:	lea    edx,[esp+0xe0]
64006a86:	mov    DWORD PTR [ecx+0x18],edi
64006a89:	mov    DWORD PTR [ecx+0x14],ebx
64006a8c:	push   edx
64006a8d:	mov    WORD PTR [ecx+0x4],bx
64006a91:	call   0x64008390
64006a96:	sub    esp,0x1c
64006a99:	mov    ecx,esp
64006a9b:	mov    BYTE PTR [esp+0x120],0x2
64006aa3:	mov    DWORD PTR [esp+0x54],esp
64006aa7:	push   0xffffffff
64006aa9:	push   ebx
64006aaa:	lea    eax,[esp+0xe0]
64006ab1:	mov    DWORD PTR [ecx+0x18],edi
64006ab4:	mov    DWORD PTR [ecx+0x14],ebx
64006ab7:	push   eax
64006ab8:	mov    WORD PTR [ecx+0x4],bx
64006abc:	call   0x64008390
64006ac1:	lea    ecx,[esp+0xa0]
64006ac8:	push   ecx
64006ac9:	mov    BYTE PTR [esp+0x124],0x1
64006ad1:	call   0x64009ca0
64006ad6:	add    esp,0x3c
64006ad9:	push   eax
64006ada:	lea    ecx,[esp+0x34]
64006ade:	mov    BYTE PTR [esp+0xec],0x3
64006ae6:	call   0x64009d40
64006aeb:	lea    edx,[esp+0x30]
64006aef:	push   edx
64006af0:	lea    eax,[esp+0x20]
64006af4:	push   eax
64006af5:	mov    BYTE PTR [esp+0xf0],0x4
64006afd:	call   0x640071c0
64006b02:	mov    ecx,eax
64006b04:	call   0x64007a10
64006b09:	lea    ecx,[esp+0x30]
64006b0d:	call   0x64006f30
64006b12:	lea    ecx,[esp+0x68]
64006b16:	call   0x64006f30
64006b1b:	mov    BYTE PTR [esp+0xe8],bl
64006b22:	cmp    DWORD PTR [esp+0xd4],0x8
64006b2a:	jb     0x64006b3c
64006b2c:	mov    ecx,DWORD PTR [esp+0xc0]
64006b33:	push   ecx
64006b34:	call   0x64013402
64006b39:	add    esp,0x4
64006b3c:	mov    edx,DWORD PTR [ebp+0x10]
64006b3f:	movzx  eax,BYTE PTR [edx]
64006b42:	cmp    eax,0x100
64006b47:	jge    0x64006b6b
64006b49:	lea    ecx,[esp+0xa0]
64006b50:	push   ecx
64006b51:	lea    edx,[esp+0x20]
64006b55:	push   edx
64006b56:	call   0x640071c0
64006b5b:	mov    ecx,eax
64006b5d:	call   0x64007b20
64006b62:	mov    esi,DWORD PTR [eax]
64006b64:	mov    eax,DWORD PTR [eax+0x4]
64006b67:	mov    DWORD PTR [esp+0x18],eax
64006b6b:	call   0x640071c0
64006b70:	cmp    esi,ebx
64006b72:	mov    ecx,DWORD PTR [eax+0x4]
64006b75:	mov    DWORD PTR [esp+0x20],ecx
64006b79:	je     0x64006b7f
64006b7b:	cmp    esi,eax
64006b7d:	je     0x64006b84
64006b7f:	call   0x640137b8
64006b84:	mov    edi,DWORD PTR [esp+0x18]
64006b88:	cmp    edi,DWORD PTR [esp+0x20]
64006b8c:	je     0x64006bb1
64006b8e:	cmp    esi,ebx
64006b90:	jne    0x64006b97
64006b92:	call   0x640137b8
64006b97:	cmp    edi,DWORD PTR [esi+0x4]
64006b9a:	jne    0x64006ba1
64006b9c:	call   0x640137b8
64006ba1:	cmp    DWORD PTR [edi+0x40],0x8
64006ba5:	jb     0x64006bac
64006ba7:	mov    edi,DWORD PTR [edi+0x2c]
64006baa:	jmp    0x64006bb5
64006bac:	add    edi,0x2c
64006baf:	jmp    0x64006bb5
64006bb1:	mov    edi,DWORD PTR [esp+0x28]
64006bb5:	mov    eax,ds:0x64033268
64006bba:	cmp    eax,ebx
64006bbc:	jne    0x64006bcc
64006bbe:	push   ebx
64006bbf:	push   ebx
64006bc0:	push   ebx
64006bc1:	call   DWORD PTR ds:0x64026064
64006bc7:	mov    ds:0x64033268,eax
64006bcc:	push   eax
64006bcd:	call   DWORD PTR ds:0x64026078
64006bd3:	cmp    DWORD PTR [esp+0xb8],0x8
64006bdb:	jb     0x64006bed
64006bdd:	mov    edx,DWORD PTR [esp+0xa4]
64006be4:	push   edx
64006be5:	call   0x64013402
64006bea:	add    esp,0x4
64006bed:	mov    eax,edi
64006bef:	mov    ecx,DWORD PTR [esp+0xe0]
64006bf6:	mov    DWORD PTR fs:0x0,ecx
64006bfd:	pop    ecx
64006bfe:	pop    edi
64006bff:	pop    esi
64006c00:	pop    ebx
64006c01:	mov    ecx,DWORD PTR [esp+0xc8]
64006c08:	xor    ecx,esp
64006c0a:	call   0x64013c5c
64006c0f:	mov    esp,ebp
64006c11:	pop    ebp
64006c12:	ret    
64006c13:	int3   
64006c14:	int3   
64006c15:	int3   
64006c16:	int3   
64006c17:	int3   
64006c18:	int3   
64006c19:	int3   
64006c1a:	int3   
64006c1b:	int3   
64006c1c:	int3   
64006c1d:	int3   
64006c1e:	int3   
64006c1f:	int3   
64006c20:	push   ebp
64006c21:	mov    ebp,esp
64006c23:	push   0xffffffff
64006c25:	push   0x640248e0
64006c2a:	mov    eax,fs:0x0
64006c30:	push   eax
64006c31:	push   ecx
64006c32:	push   ebx
64006c33:	push   esi
64006c34:	push   edi
64006c35:	mov    eax,ds:0x6402f09c
64006c3a:	xor    eax,ebp
64006c3c:	push   eax
64006c3d:	lea    eax,[ebp-0xc]
64006c40:	mov    fs:0x0,eax
64006c46:	mov    DWORD PTR [ebp-0x10],esp
64006c49:	mov    esi,DWORD PTR [ebp+0x8]
64006c4c:	call   0x64008050
64006c51:	mov    DWORD PTR [esi+0x4],eax
64006c54:	mov    BYTE PTR [eax+0x29],0x1
64006c58:	mov    eax,DWORD PTR [esi+0x4]
64006c5b:	mov    DWORD PTR [eax+0x4],eax
64006c5e:	mov    eax,DWORD PTR [esi+0x4]
64006c61:	mov    DWORD PTR [eax],eax
64006c63:	mov    eax,DWORD PTR [esi+0x4]
64006c66:	mov    DWORD PTR [eax+0x8],eax
64006c69:	mov    ebx,0x640334a0
64006c6e:	mov    eax,esi
64006c70:	mov    DWORD PTR [esi+0x8],0x0
64006c77:	mov    DWORD PTR [ebp-0x4],0x0
64006c7e:	call   0x64007430
64006c83:	mov    eax,esi
64006c85:	mov    ecx,DWORD PTR [ebp-0xc]
64006c88:	mov    DWORD PTR fs:0x0,ecx
64006c8f:	pop    ecx
64006c90:	pop    edi
64006c91:	pop    esi
64006c92:	pop    ebx
64006c93:	mov    esp,ebp
64006c95:	pop    ebp
64006c96:	ret    0x4
64006c99:	mov    eax,DWORD PTR [ebp+0x8]
64006c9c:	call   0x64007720
64006ca1:	push   0x0
64006ca3:	push   0x0
64006ca5:	call   0x6401384b
64006caa:	int3   
64006cab:	int3   
64006cac:	int3   
64006cad:	int3   
64006cae:	int3   
64006caf:	int3   
64006cb0:	push   ebp
64006cb1:	mov    ebp,esp
64006cb3:	and    esp,0xfffffff8
64006cb6:	sub    esp,0x8
64006cb9:	push   ebx
64006cba:	push   edi
64006cbb:	mov    ebx,eax
64006cbd:	mov    edi,ecx
64006cbf:	cmp    edi,ebx
64006cc1:	je     0x64006cdd
64006cc3:	mov    eax,DWORD PTR [edi+0x4]
64006cc6:	mov    ecx,DWORD PTR [eax]
64006cc8:	push   eax
64006cc9:	push   edi
64006cca:	push   ecx
64006ccb:	push   edi
64006ccc:	lea    eax,[esp+0x18]
64006cd0:	push   eax
64006cd1:	call   0x64007320
64006cd6:	mov    eax,edi
64006cd8:	call   0x64007430
64006cdd:	mov    eax,edi
64006cdf:	pop    edi
64006ce0:	pop    ebx
64006ce1:	mov    esp,ebp
64006ce3:	pop    ebp
64006ce4:	ret    
64006ce5:	int3   
64006ce6:	int3   
64006ce7:	int3   
64006ce8:	int3   
64006ce9:	int3   
64006cea:	int3   
64006ceb:	int3   
64006cec:	int3   
64006ced:	int3   
64006cee:	int3   
64006cef:	int3   
64006cf0:	push   ebp
64006cf1:	mov    ebp,esp
64006cf3:	and    esp,0xfffffff8
64006cf6:	sub    esp,0x1c
64006cf9:	mov    ecx,DWORD PTR [ebp+0x8]
64006cfc:	mov    eax,DWORD PTR [ecx+0x4]
64006cff:	push   ebx
64006d00:	push   esi
64006d01:	mov    esi,DWORD PTR [eax+0x4]
64006d04:	cmp    BYTE PTR [esi+0x29],0x0
64006d08:	mov    ebx,eax
64006d0a:	mov    al,0x1
64006d0c:	push   edi
64006d0d:	mov    BYTE PTR [esp+0x10],al
64006d11:	jne    0x64006db2
64006d17:	mov    edx,DWORD PTR [ebp+0x10]
64006d1a:	mov    eax,DWORD PTR [edx+0x14]
64006d1d:	mov    ecx,DWORD PTR [edx+0x18]
64006d20:	mov    DWORD PTR [esp+0x18],eax
64006d24:	mov    DWORD PTR [esp+0x14],eax
64006d28:	mov    DWORD PTR [esp+0x1c],ecx
64006d2c:	jmp    0x64006d37
64006d2e:	mov    edi,edi
64006d30:	mov    edx,DWORD PTR [ebp+0x10]
64006d33:	mov    eax,DWORD PTR [esp+0x14]
64006d37:	cmp    DWORD PTR [esi+0x24],0x10
64006d3b:	mov    ebx,DWORD PTR [esi+0x20]
64006d3e:	mov    DWORD PTR [esp+0x20],esi
64006d42:	jb     0x64006d49
64006d44:	mov    ecx,DWORD PTR [esi+0x10]
64006d47:	jmp    0x64006d4c
64006d49:	lea    ecx,[esi+0x10]
64006d4c:	mov    edi,DWORD PTR [esp+0x18]
64006d50:	cmp    eax,edi
64006d52:	mov    DWORD PTR [esp+0xc],ecx
64006d56:	jae    0x64006d5a
64006d58:	mov    edi,eax
64006d5a:	cmp    edi,ebx
64006d5c:	mov    ecx,edi
64006d5e:	jb     0x64006d62
64006d60:	mov    ecx,ebx
64006d62:	cmp    DWORD PTR [esp+0x1c],0x10
64006d67:	lea    eax,[edx+0x4]
64006d6a:	jb     0x64006d6e
64006d6c:	mov    eax,DWORD PTR [eax]
64006d6e:	mov    edx,DWORD PTR [esp+0xc]
64006d72:	push   ecx
64006d73:	push   edx
64006d74:	push   eax
64006d75:	call   0x64002c70
64006d7a:	add    esp,0xc
64006d7d:	test   eax,eax
64006d7f:	jne    0x64006d93
64006d81:	cmp    edi,ebx
64006d83:	jae    0x64006d8a
64006d85:	or     eax,0xffffffff
64006d88:	jmp    0x64006d91
64006d8a:	xor    eax,eax
64006d8c:	cmp    edi,ebx
64006d8e:	setne  al
64006d91:	test   eax,eax
64006d93:	setl   al
64006d96:	test   al,al
64006d98:	mov    BYTE PTR [esp+0x10],al
64006d9c:	je     0x64006da2
64006d9e:	mov    esi,DWORD PTR [esi]
64006da0:	jmp    0x64006da5
64006da2:	mov    esi,DWORD PTR [esi+0x8]
64006da5:	cmp    BYTE PTR [esi+0x29],0x0
64006da9:	je     0x64006d30
64006dab:	mov    ebx,DWORD PTR [esp+0x20]
64006daf:	mov    ecx,DWORD PTR [ebp+0x8]
64006db2:	test   al,al
64006db4:	mov    esi,ebx
64006db6:	mov    DWORD PTR [esp+0x24],esi
64006dba:	mov    DWORD PTR [esp+0x20],ecx
64006dbe:	je     0x64006e03
64006dc0:	mov    eax,DWORD PTR [ecx+0x4]
64006dc3:	cmp    ebx,DWORD PTR [eax]
64006dc5:	jne    0x64006df6
64006dc7:	mov    edx,DWORD PTR [ebp+0x10]
64006dca:	push   edx
64006dcb:	push   0x1
64006dcd:	lea    eax,[esp+0x28]
64006dd1:	push   eax
64006dd2:	push   ecx
64006dd3:	mov    ecx,ebx
64006dd5:	call   0x640074a0
64006dda:	mov    edx,DWORD PTR [eax]
64006ddc:	mov    ecx,DWORD PTR [ebp+0xc]
64006ddf:	mov    eax,DWORD PTR [eax+0x4]
64006de2:	mov    DWORD PTR [ecx+0x4],eax
64006de5:	mov    DWORD PTR [ecx],edx
64006de7:	mov    BYTE PTR [ecx+0x8],0x1
64006deb:	mov    eax,ecx
64006ded:	pop    edi
64006dee:	pop    esi
64006def:	pop    ebx
64006df0:	mov    esp,ebp
64006df2:	pop    ebp
64006df3:	ret    0xc
64006df6:	lea    esi,[esp+0x20]
64006dfa:	call   0x64008940
64006dff:	mov    esi,DWORD PTR [esp+0x24]
64006e03:	mov    edi,DWORD PTR [ebp+0x10]
64006e06:	cmp    DWORD PTR [edi+0x18],0x10
64006e0a:	mov    edx,DWORD PTR [edi+0x14]
64006e0d:	lea    ecx,[esi+0xc]
64006e10:	jb     0x64006e17
64006e12:	mov    eax,DWORD PTR [edi+0x4]
64006e15:	jmp    0x64006e1a
64006e17:	lea    eax,[edi+0x4]
64006e1a:	push   edx
64006e1b:	mov    edx,DWORD PTR [ecx+0x14]
64006e1e:	push   eax
64006e1f:	push   edx
64006e20:	push   0x0
64006e22:	call   0x64006ff0
64006e27:	test   eax,eax
64006e29:	jge    0x64006e5d
64006e2b:	mov    eax,DWORD PTR [esp+0x10]
64006e2f:	mov    edx,DWORD PTR [ebp+0x8]
64006e32:	push   edi
64006e33:	push   eax
64006e34:	lea    ecx,[esp+0x28]
64006e38:	push   ecx
64006e39:	push   edx
64006e3a:	mov    ecx,ebx
64006e3c:	call   0x640074a0
64006e41:	mov    edx,DWORD PTR [eax]
64006e43:	mov    ecx,DWORD PTR [ebp+0xc]
64006e46:	mov    eax,DWORD PTR [eax+0x4]
64006e49:	mov    DWORD PTR [ecx+0x4],eax
64006e4c:	mov    DWORD PTR [ecx],edx
64006e4e:	mov    BYTE PTR [ecx+0x8],0x1
64006e52:	mov    eax,ecx
64006e54:	pop    edi
64006e55:	pop    esi
64006e56:	pop    ebx
64006e57:	mov    esp,ebp
64006e59:	pop    ebp
64006e5a:	ret    0xc
64006e5d:	mov    eax,DWORD PTR [ebp+0xc]
64006e60:	mov    ecx,DWORD PTR [esp+0x20]
64006e64:	pop    edi
64006e65:	mov    DWORD PTR [eax+0x4],esi
64006e68:	pop    esi
64006e69:	mov    DWORD PTR [eax],ecx
64006e6b:	mov    BYTE PTR [eax+0x8],0x0
64006e6f:	pop    ebx
64006e70:	mov    esp,ebp
64006e72:	pop    ebp
64006e73:	ret    0xc
64006e76:	int3   
64006e77:	int3   
64006e78:	int3   
64006e79:	int3   
64006e7a:	int3   
64006e7b:	int3   
64006e7c:	int3   
64006e7d:	int3   
64006e7e:	int3   
64006e7f:	int3   
64006e80:	push   ebp
64006e81:	mov    ebp,esp
64006e83:	and    esp,0xfffffff8
64006e86:	sub    esp,0x8
64006e89:	push   ebx
64006e8a:	push   edi
64006e8b:	mov    ecx,esi
64006e8d:	mov    edi,eax
64006e8f:	call   0x640088a0
64006e94:	test   esi,esi
64006e96:	mov    ebx,eax
64006e98:	jne    0x64006e9f
64006e9a:	call   0x640137b8
64006e9f:	mov    ecx,edi
64006ea1:	mov    eax,esi
64006ea3:	call   0x64008810
64006ea8:	test   esi,esi
64006eaa:	mov    edi,eax
64006eac:	jne    0x64006eb3
64006eae:	call   0x640137b8
64006eb3:	mov    DWORD PTR [esp+0xc],0x0
64006ebb:	mov    eax,DWORD PTR [esp+0xc]
64006ebf:	push   eax
64006ec0:	push   ebx
64006ec1:	push   esi
64006ec2:	push   edi
64006ec3:	push   esi
64006ec4:	lea    ebx,[esp+0x20]
64006ec8:	call   0x6400a040
64006ecd:	mov    eax,DWORD PTR [esp+0x20]
64006ed1:	add    esp,0x14
64006ed4:	pop    edi
64006ed5:	pop    ebx
64006ed6:	mov    esp,ebp
64006ed8:	pop    ebp
64006ed9:	ret    
64006eda:	int3   
64006edb:	int3   
64006edc:	int3   
64006edd:	int3   
64006ede:	int3   
64006edf:	int3   
64006ee0:	push   ebx
64006ee1:	push   esi
64006ee2:	mov    esi,ecx
64006ee4:	cmp    DWORD PTR [esi+0x34],0x10
64006ee8:	jb     0x64006ef6
64006eea:	mov    eax,DWORD PTR [esi+0x20]
64006eed:	push   eax
64006eee:	call   0x64013402
64006ef3:	add    esp,0x4
64006ef6:	xor    ebx,ebx
64006ef8:	mov    DWORD PTR [esi+0x34],0xf
64006eff:	mov    DWORD PTR [esi+0x30],ebx
64006f02:	mov    BYTE PTR [esi+0x20],bl
64006f05:	cmp    DWORD PTR [esi+0x18],0x10
64006f09:	jb     0x64006f17
64006f0b:	mov    ecx,DWORD PTR [esi+0x4]
64006f0e:	push   ecx
64006f0f:	call   0x64013402
64006f14:	add    esp,0x4
64006f17:	mov    DWORD PTR [esi+0x14],ebx
64006f1a:	mov    DWORD PTR [esi+0x18],0xf
64006f21:	mov    BYTE PTR [esi+0x4],bl
64006f24:	pop    esi
64006f25:	pop    ebx
64006f26:	ret    
64006f27:	int3   
64006f28:	int3   
64006f29:	int3   
64006f2a:	int3   
64006f2b:	int3   
64006f2c:	int3   
64006f2d:	int3   
64006f2e:	int3   
64006f2f:	int3   
64006f30:	push   esi
64006f31:	mov    esi,ecx
64006f33:	cmp    DWORD PTR [esi+0x34],0x8
64006f37:	push   edi
64006f38:	jb     0x64006f46
64006f3a:	mov    eax,DWORD PTR [esi+0x20]
64006f3d:	push   eax
64006f3e:	call   0x64013402
64006f43:	add    esp,0x4
64006f46:	xor    edi,edi
64006f48:	mov    DWORD PTR [esi+0x34],0x7
64006f4f:	mov    DWORD PTR [esi+0x30],edi
64006f52:	mov    WORD PTR [esi+0x20],di
64006f56:	cmp    DWORD PTR [esi+0x18],0x8
64006f5a:	jb     0x64006f68
64006f5c:	mov    ecx,DWORD PTR [esi+0x4]
64006f5f:	push   ecx
64006f60:	call   0x64013402
64006f65:	add    esp,0x4
64006f68:	mov    DWORD PTR [esi+0x14],edi
64006f6b:	mov    DWORD PTR [esi+0x18],0x7
64006f72:	mov    WORD PTR [esi+0x4],di
64006f76:	pop    edi
64006f77:	pop    esi
64006f78:	ret    
64006f79:	int3   
64006f7a:	int3   
64006f7b:	int3   
64006f7c:	int3   
64006f7d:	int3   
64006f7e:	int3   
64006f7f:	int3   
64006f80:	mov    ecx,DWORD PTR [eax]
64006f82:	push   esi
64006f83:	mov    esi,DWORD PTR [edi]
64006f85:	lea    eax,[ecx-0x10]
64006f88:	sub    esi,0x10
64006f8b:	cmp    eax,esi
64006f8d:	je     0x64006fdd
64006f8f:	cmp    DWORD PTR [esi+0xc],0x0
64006f93:	push   ebx
64006f94:	lea    ebx,[esi+0xc]
64006f97:	jl     0x64006fcc
64006f99:	mov    edx,DWORD PTR [eax]
64006f9b:	cmp    edx,DWORD PTR [esi]
64006f9d:	jne    0x64006fcc
64006f9f:	push   ebp
64006fa0:	push   eax
64006fa1:	call   0x640028a0
64006fa6:	mov    ebp,eax
64006fa8:	add    esp,0x4
64006fab:	or     eax,0xffffffff
64006fae:	lock xadd DWORD PTR [ebx],eax
64006fb2:	dec    eax
64006fb3:	test   eax,eax
64006fb5:	jg     0x64006fc1
64006fb7:	mov    ecx,DWORD PTR [esi]
64006fb9:	mov    edx,DWORD PTR [ecx]
64006fbb:	mov    eax,DWORD PTR [edx+0x4]
64006fbe:	push   esi
64006fbf:	call   eax
64006fc1:	add    ebp,0x10
64006fc4:	mov    DWORD PTR [edi],ebp
64006fc6:	pop    ebp
64006fc7:	pop    ebx
64006fc8:	mov    eax,edi
64006fca:	pop    esi
64006fcb:	ret    
64006fcc:	mov    edx,DWORD PTR [ecx-0xc]
64006fcf:	push   edx
64006fd0:	push   ecx
64006fd1:	mov    ecx,edi
64006fd3:	call   0x64002ae0
64006fd8:	pop    ebx
64006fd9:	mov    eax,edi
64006fdb:	pop    esi
64006fdc:	ret    
64006fdd:	mov    eax,edi
64006fdf:	pop    esi
64006fe0:	ret    
64006fe1:	int3   
64006fe2:	int3   
64006fe3:	int3   
64006fe4:	int3   
64006fe5:	int3   
64006fe6:	int3   
64006fe7:	int3   
64006fe8:	int3   
64006fe9:	int3   
64006fea:	int3   
64006feb:	int3   
64006fec:	int3   
64006fed:	int3   
64006fee:	int3   
64006fef:	int3   
64006ff0:	push   ebx
64006ff1:	push   ebp
64006ff2:	mov    ebp,DWORD PTR [esp+0xc]
64006ff6:	push   esi
64006ff7:	push   edi
64006ff8:	mov    edi,ecx
64006ffa:	cmp    DWORD PTR [edi+0x14],ebp
64006ffd:	jae    0x64007004
64006fff:	call   0x640133be
64007004:	mov    eax,DWORD PTR [edi+0x14]
64007007:	mov    esi,DWORD PTR [esp+0x18]
6400700b:	sub    eax,ebp
6400700d:	cmp    eax,esi
6400700f:	jae    0x64007013
64007011:	mov    esi,eax
64007013:	mov    ebx,DWORD PTR [esp+0x20]
64007017:	cmp    esi,ebx
64007019:	mov    eax,esi
6400701b:	jb     0x6400701f
6400701d:	mov    eax,ebx
6400701f:	cmp    DWORD PTR [edi+0x18],0x10
64007023:	jb     0x6400702a
64007025:	mov    edi,DWORD PTR [edi+0x4]
64007028:	jmp    0x6400702d
6400702a:	add    edi,0x4
6400702d:	push   eax
6400702e:	mov    eax,DWORD PTR [esp+0x20]
64007032:	push   eax
64007033:	add    edi,ebp
64007035:	push   edi
64007036:	call   0x64002c70
6400703b:	add    esp,0xc
6400703e:	test   eax,eax
64007040:	jne    0x64007057
64007042:	cmp    esi,ebx
64007044:	jae    0x64007050
64007046:	pop    edi
64007047:	pop    esi
64007048:	pop    ebp
64007049:	or     eax,0xffffffff
6400704c:	pop    ebx
6400704d:	ret    0x10
64007050:	xor    eax,eax
64007052:	cmp    esi,ebx
64007054:	setne  al
64007057:	pop    edi
64007058:	pop    esi
64007059:	pop    ebp
6400705a:	pop    ebx
6400705b:	ret    0x10
6400705e:	int3   
6400705f:	int3   
64007060:	push   0xffffffff
64007062:	push   0x64023e1e
64007067:	mov    eax,fs:0x0
6400706d:	push   eax
6400706e:	mov    eax,ds:0x6402f09c
64007073:	xor    eax,esp
64007075:	push   eax
64007076:	lea    eax,[esp+0x4]
6400707a:	mov    fs:0x0,eax
64007080:	test   BYTE PTR ds:0x64033340,0x1
64007087:	jne    0x640070d9
64007089:	or     DWORD PTR ds:0x64033340,0x1
64007090:	mov    ecx,0x64033324
64007095:	mov    DWORD PTR [esp+0xc],0x0
6400709d:	call   0x64009900
640070a2:	mov    ds:0x64033328,eax
640070a7:	mov    BYTE PTR [eax+0x45],0x1
640070ab:	mov    eax,ds:0x64033328
640070b0:	mov    DWORD PTR [eax+0x4],eax
640070b3:	mov    eax,ds:0x64033328
640070b8:	mov    DWORD PTR [eax],eax
640070ba:	mov    eax,ds:0x64033328
640070bf:	mov    DWORD PTR [eax+0x8],eax
640070c2:	push   0x640253c0
640070c7:	mov    DWORD PTR ds:0x6403332c,0x0
640070d1:	call   0x64013d8f
640070d6:	add    esp,0x4
640070d9:	mov    eax,0x64033324
640070de:	mov    ecx,DWORD PTR [esp+0x4]
640070e2:	mov    DWORD PTR fs:0x0,ecx
640070e9:	pop    ecx
640070ea:	add    esp,0xc
640070ed:	ret    
640070ee:	int3   
640070ef:	int3   
640070f0:	push   0xffffffff
640070f2:	push   0x64023998
640070f7:	mov    eax,fs:0x0
640070fd:	push   eax
640070fe:	push   ecx
640070ff:	push   ebx
64007100:	push   ebp
64007101:	push   esi
64007102:	push   edi
64007103:	mov    eax,ds:0x6402f09c
64007108:	xor    eax,esp
6400710a:	push   eax
6400710b:	lea    eax,[esp+0x18]
6400710f:	mov    fs:0x0,eax
64007115:	mov    esi,DWORD PTR [esp+0x28]
64007119:	xor    eax,eax
6400711b:	mov    DWORD PTR [esp+0x14],eax
6400711f:	mov    DWORD PTR [esp+0x20],eax
64007123:	push   0xffffffff
64007125:	mov    DWORD PTR [esi+0x14],eax
64007128:	mov    DWORD PTR [esi+0x18],0xf
6400712f:	lea    ebp,[esi+0x4]
64007132:	push   eax
64007133:	mov    BYTE PTR [ebp+0x0],al
64007136:	lea    eax,[esp+0x34]
6400713a:	push   eax
6400713b:	mov    ecx,esi
6400713d:	call   0x64001780
64007142:	mov    eax,DWORD PTR [esi+0x14]
64007145:	mov    edi,0x1
6400714a:	cmp    eax,edi
6400714c:	jbe    0x6400718d
6400714e:	cmp    edi,eax
64007150:	jbe    0x64007157
64007152:	call   0x640137b8
64007157:	cmp    DWORD PTR [esi+0x18],0x10
6400715b:	jb     0x64007162
6400715d:	mov    ebx,DWORD PTR [ebp+0x0]
64007160:	jmp    0x64007164
64007162:	mov    ebx,ebp
64007164:	lea    ecx,[edi-0x1]
64007167:	cmp    ecx,DWORD PTR [esi+0x14]
6400716a:	jbe    0x64007171
6400716c:	call   0x640137b8
64007171:	cmp    DWORD PTR [esi+0x18],0x10
64007175:	jb     0x6400717c
64007177:	mov    eax,DWORD PTR [ebp+0x0]
6400717a:	jmp    0x6400717e
6400717c:	mov    eax,ebp
6400717e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64007182:	xor    BYTE PTR [ebx+edi*1],dl
64007185:	add    edi,0x1
64007188:	cmp    edi,DWORD PTR [esi+0x14]
6400718b:	jb     0x64007157
6400718d:	cmp    DWORD PTR [esp+0x44],0x10
64007192:	jb     0x640071a1
64007194:	mov    eax,DWORD PTR [esp+0x30]
64007198:	push   eax
64007199:	call   0x64013402
6400719e:	add    esp,0x4
640071a1:	mov    eax,esi
640071a3:	mov    ecx,DWORD PTR [esp+0x18]
640071a7:	mov    DWORD PTR fs:0x0,ecx
640071ae:	pop    ecx
640071af:	pop    edi
640071b0:	pop    esi
640071b1:	pop    ebp
640071b2:	pop    ebx
640071b3:	add    esp,0x10
640071b6:	ret    
640071b7:	int3   
640071b8:	int3   
640071b9:	int3   
640071ba:	int3   
640071bb:	int3   
640071bc:	int3   
640071bd:	int3   
640071be:	int3   
640071bf:	int3   
640071c0:	push   0xffffffff
640071c2:	push   0x64023dee
640071c7:	mov    eax,fs:0x0
640071cd:	push   eax
640071ce:	mov    eax,ds:0x6402f09c
640071d3:	xor    eax,esp
640071d5:	push   eax
640071d6:	lea    eax,[esp+0x4]
640071da:	mov    fs:0x0,eax
640071e0:	test   BYTE PTR ds:0x6403333c,0x1
640071e7:	jne    0x64007239
640071e9:	or     DWORD PTR ds:0x6403333c,0x1
640071f0:	mov    ecx,0x64033330
640071f5:	mov    DWORD PTR [esp+0xc],0x0
640071fd:	call   0x64009900
64007202:	mov    ds:0x64033334,eax
64007207:	mov    BYTE PTR [eax+0x45],0x1
6400720b:	mov    eax,ds:0x64033334
64007210:	mov    DWORD PTR [eax+0x4],eax
64007213:	mov    eax,ds:0x64033334
64007218:	mov    DWORD PTR [eax],eax
6400721a:	mov    eax,ds:0x64033334
6400721f:	mov    DWORD PTR [eax+0x8],eax
64007222:	push   0x64025370
64007227:	mov    DWORD PTR ds:0x64033338,0x0
64007231:	call   0x64013d8f
64007236:	add    esp,0x4
64007239:	mov    eax,0x64033330
6400723e:	mov    ecx,DWORD PTR [esp+0x4]
64007242:	mov    DWORD PTR fs:0x0,ecx
64007249:	pop    ecx
6400724a:	add    esp,0xc
6400724d:	ret    
6400724e:	int3   
6400724f:	int3   
64007250:	push   0xffffffff
64007252:	push   0x64023968
64007257:	mov    eax,fs:0x0
6400725d:	push   eax
6400725e:	push   ecx
6400725f:	push   ebx
64007260:	push   ebp
64007261:	push   esi
64007262:	push   edi
64007263:	mov    eax,ds:0x6402f09c
64007268:	xor    eax,esp
6400726a:	push   eax
6400726b:	lea    eax,[esp+0x18]
6400726f:	mov    fs:0x0,eax
64007275:	mov    esi,DWORD PTR [esp+0x28]
64007279:	xor    eax,eax
6400727b:	mov    DWORD PTR [esp+0x14],eax
6400727f:	mov    DWORD PTR [esp+0x20],eax
64007283:	push   0xffffffff
64007285:	mov    DWORD PTR [esi+0x14],eax
64007288:	mov    DWORD PTR [esi+0x18],0x7
6400728f:	lea    ebp,[esi+0x4]
64007292:	push   eax
64007293:	mov    WORD PTR [ebp+0x0],ax
64007297:	lea    eax,[esp+0x34]
6400729b:	push   eax
6400729c:	mov    ecx,esi
6400729e:	call   0x64008390
640072a3:	mov    eax,DWORD PTR [esi+0x14]
640072a6:	mov    edi,0x1
640072ab:	cmp    eax,edi
640072ad:	jbe    0x640072f0
640072af:	cmp    edi,eax
640072b1:	jbe    0x640072b8
640072b3:	call   0x640137b8
640072b8:	cmp    DWORD PTR [esi+0x18],0x8
640072bc:	jb     0x640072c3
640072be:	mov    ebx,DWORD PTR [ebp+0x0]
640072c1:	jmp    0x640072c5
640072c3:	mov    ebx,ebp
640072c5:	lea    ecx,[edi-0x1]
640072c8:	cmp    ecx,DWORD PTR [esi+0x14]
640072cb:	jbe    0x640072d2
640072cd:	call   0x640137b8
640072d2:	cmp    DWORD PTR [esi+0x18],0x8
640072d6:	jb     0x640072dd
640072d8:	mov    eax,DWORD PTR [ebp+0x0]
640072db:	jmp    0x640072df
640072dd:	mov    eax,ebp
640072df:	mov    dx,WORD PTR [eax+edi*2-0x2]
640072e4:	xor    WORD PTR [ebx+edi*2],dx
640072e8:	add    edi,0x1
640072eb:	cmp    edi,DWORD PTR [esi+0x14]
640072ee:	jb     0x640072b8
640072f0:	cmp    DWORD PTR [esp+0x44],0x8
640072f5:	jb     0x64007304
640072f7:	mov    eax,DWORD PTR [esp+0x30]
640072fb:	push   eax
640072fc:	call   0x64013402
64007301:	add    esp,0x4
64007304:	mov    eax,esi
64007306:	mov    ecx,DWORD PTR [esp+0x18]
6400730a:	mov    DWORD PTR fs:0x0,ecx
64007311:	pop    ecx
64007312:	pop    edi
64007313:	pop    esi
64007314:	pop    ebp
64007315:	pop    ebx
64007316:	add    esp,0x10
64007319:	ret    
6400731a:	int3   
6400731b:	int3   
6400731c:	int3   
6400731d:	int3   
6400731e:	int3   
6400731f:	int3   
64007320:	mov    eax,DWORD PTR [edi+0x4]
64007323:	sub    esp,0xc
64007326:	push   ebx
64007327:	mov    ebx,DWORD PTR [eax]
64007329:	push   ebp
6400732a:	mov    ebp,DWORD PTR [esp+0x1c]
6400732e:	test   ebp,ebp
64007330:	push   esi
64007331:	je     0x64007337
64007333:	cmp    ebp,edi
64007335:	je     0x6400733c
64007337:	call   0x640137b8
6400733c:	mov    esi,DWORD PTR [esp+0x24]
64007340:	cmp    esi,ebx
64007342:	jne    0x640073a0
64007344:	mov    eax,DWORD PTR [esp+0x28]
64007348:	test   eax,eax
6400734a:	mov    ebx,DWORD PTR [edi+0x4]
6400734d:	je     0x64007353
6400734f:	cmp    eax,edi
64007351:	je     0x64007358
64007353:	call   0x640137b8
64007358:	cmp    DWORD PTR [esp+0x2c],ebx
6400735c:	jne    0x640073a0
6400735e:	mov    ecx,DWORD PTR [edi+0x4]
64007361:	mov    edx,DWORD PTR [ecx+0x4]
64007364:	push   edx
64007365:	mov    ecx,edi
64007367:	call   0x640087b0
6400736c:	mov    eax,DWORD PTR [edi+0x4]
6400736f:	mov    DWORD PTR [eax+0x4],eax
64007372:	mov    eax,DWORD PTR [edi+0x4]
64007375:	mov    DWORD PTR [edi+0x8],0x0
6400737c:	mov    DWORD PTR [eax],eax
6400737e:	mov    eax,DWORD PTR [edi+0x4]
64007381:	mov    DWORD PTR [eax+0x8],eax
64007384:	mov    eax,DWORD PTR [edi+0x4]
64007387:	mov    ecx,DWORD PTR [eax]
64007389:	mov    eax,DWORD PTR [esp+0x1c]
6400738d:	mov    DWORD PTR [eax+0x4],ecx
64007390:	mov    DWORD PTR [eax],edi
64007392:	pop    esi
64007393:	pop    ebp
64007394:	pop    ebx
64007395:	add    esp,0xc
64007398:	ret    0x14
6400739b:	jmp    0x640073a0
6400739d:	lea    ecx,[ecx+0x0]
640073a0:	test   ebp,ebp
640073a2:	je     0x640073aa
640073a4:	cmp    ebp,DWORD PTR [esp+0x28]
640073a8:	je     0x640073af
640073aa:	call   0x640137b8
640073af:	cmp    esi,DWORD PTR [esp+0x2c]
640073b3:	je     0x6400741c
640073b5:	test   ebp,ebp
640073b7:	mov    DWORD PTR [esp+0x24],esi
640073bb:	jne    0x640073c2
640073bd:	call   0x640137b8
640073c2:	cmp    BYTE PTR [esi+0x29],0x0
640073c6:	je     0x640073cf
640073c8:	call   0x640137b8
640073cd:	jmp    0x64007409
640073cf:	mov    eax,DWORD PTR [esi+0x8]
640073d2:	cmp    BYTE PTR [eax+0x29],0x0
640073d6:	jne    0x640073ee
640073d8:	mov    esi,eax
640073da:	mov    eax,DWORD PTR [esi]
640073dc:	cmp    BYTE PTR [eax+0x29],0x0
640073e0:	jne    0x64007409
640073e2:	mov    esi,eax
640073e4:	mov    eax,DWORD PTR [esi]
640073e6:	cmp    BYTE PTR [eax+0x29],0x0
640073ea:	je     0x640073e2
640073ec:	jmp    0x64007409
640073ee:	mov    eax,DWORD PTR [esi+0x4]
640073f1:	cmp    BYTE PTR [eax+0x29],0x0
640073f5:	jne    0x64007407
640073f7:	cmp    esi,DWORD PTR [eax+0x8]
640073fa:	jne    0x64007407
640073fc:	mov    esi,eax
640073fe:	mov    eax,DWORD PTR [eax+0x4]
64007401:	cmp    BYTE PTR [eax+0x29],0x0
64007405:	je     0x640073f7
64007407:	mov    esi,eax
64007409:	mov    edx,DWORD PTR [esp+0x24]
6400740d:	push   edx
6400740e:	push   ebp
6400740f:	lea    eax,[esp+0x18]
64007413:	push   eax
64007414:	push   edi
64007415:	call   0x64007bc0
6400741a:	jmp    0x640073a0
6400741c:	mov    eax,DWORD PTR [esp+0x1c]
64007420:	mov    DWORD PTR [eax+0x4],esi
64007423:	pop    esi
64007424:	mov    DWORD PTR [eax],ebp
64007426:	pop    ebp
64007427:	pop    ebx
64007428:	add    esp,0xc
6400742b:	ret    0x14
6400742e:	int3   
6400742f:	int3   
64007430:	push   esi
64007431:	mov    esi,eax
64007433:	mov    eax,DWORD PTR [ebx+0x4]
64007436:	push   edi
64007437:	mov    edi,DWORD PTR [esi+0x4]
6400743a:	add    eax,0x4
6400743d:	mov    eax,DWORD PTR [eax]
6400743f:	push   edi
64007440:	push   eax
64007441:	mov    ecx,esi
64007443:	call   0x64007ed0
64007448:	mov    DWORD PTR [edi+0x4],eax
6400744b:	mov    ecx,DWORD PTR [ebx+0x8]
6400744e:	mov    edx,DWORD PTR [esi+0x4]
64007451:	mov    DWORD PTR [esi+0x8],ecx
64007454:	mov    eax,DWORD PTR [edx+0x4]
64007457:	cmp    BYTE PTR [eax+0x29],0x0
6400745b:	jne    0x64007491
6400745d:	mov    ecx,DWORD PTR [eax]
6400745f:	cmp    BYTE PTR [ecx+0x29],0x0
64007463:	jne    0x6400746f
64007465:	mov    eax,ecx
64007467:	mov    ecx,DWORD PTR [eax]
64007469:	cmp    BYTE PTR [ecx+0x29],0x0
6400746d:	je     0x64007465
6400746f:	mov    DWORD PTR [edx],eax
64007471:	mov    esi,DWORD PTR [esi+0x4]
64007474:	mov    ecx,DWORD PTR [esi+0x4]
64007477:	mov    eax,DWORD PTR [ecx+0x8]
6400747a:	cmp    BYTE PTR [eax+0x29],0x0
6400747e:	jne    0x6400748b
64007480:	mov    ecx,eax
64007482:	mov    eax,DWORD PTR [ecx+0x8]
64007485:	cmp    BYTE PTR [eax+0x29],0x0
64007489:	je     0x64007480
6400748b:	pop    edi
6400748c:	mov    DWORD PTR [esi+0x8],ecx
6400748f:	pop    esi
64007490:	ret    
64007491:	mov    DWORD PTR [edx],edx
64007493:	mov    esi,DWORD PTR [esi+0x4]
64007496:	pop    edi
64007497:	mov    DWORD PTR [esi+0x8],esi
6400749a:	pop    esi
6400749b:	ret    
6400749c:	int3   
6400749d:	int3   
6400749e:	int3   
6400749f:	int3   
640074a0:	push   0xffffffff
640074a2:	push   0x64023db8
640074a7:	mov    eax,fs:0x0
640074ad:	push   eax
640074ae:	sub    esp,0x44
640074b1:	push   ebx
640074b2:	push   ebp
640074b3:	push   esi
640074b4:	push   edi
640074b5:	mov    eax,ds:0x6402f09c
640074ba:	xor    eax,esp
640074bc:	push   eax
640074bd:	lea    eax,[esp+0x58]
640074c1:	mov    fs:0x0,eax
640074c7:	mov    esi,ecx
640074c9:	mov    ebp,DWORD PTR [esp+0x68]
640074cd:	xor    ebx,ebx
640074cf:	cmp    DWORD PTR [ebp+0x8],0x9249248
640074d6:	jb     0x64007521
640074d8:	push   0x13
640074da:	push   0x64029e60
640074df:	lea    ecx,[esp+0x1c]
640074e3:	mov    DWORD PTR [esp+0x34],0xf
640074eb:	mov    DWORD PTR [esp+0x30],ebx
640074ef:	mov    BYTE PTR [esp+0x20],bl
640074f3:	call   0x64001860
640074f8:	lea    eax,[esp+0x14]
640074fc:	push   eax
640074fd:	lea    ecx,[esp+0x34]
64007501:	mov    DWORD PTR [esp+0x64],ebx
64007505:	call   0x64002d00
6400750a:	push   0x6402c690
6400750f:	lea    ecx,[esp+0x34]
64007513:	push   ecx
64007514:	mov    DWORD PTR [esp+0x38],0x6402631c
6400751c:	call   0x6401384b
64007521:	mov    edx,DWORD PTR [esp+0x74]
64007525:	mov    eax,DWORD PTR [ebp+0x4]
64007528:	push   ebx
64007529:	push   edx
6400752a:	push   eax
6400752b:	push   esi
6400752c:	push   eax
6400752d:	call   0x64008090
64007532:	mov    ecx,DWORD PTR [ebp+0x4]
64007535:	mov    edx,eax
64007537:	mov    eax,0x1
6400753c:	add    DWORD PTR [ebp+0x8],eax
6400753f:	cmp    esi,ecx
64007541:	mov    DWORD PTR [esp+0x68],edx
64007545:	jne    0x64007554
64007547:	mov    DWORD PTR [ecx+0x4],edx
6400754a:	mov    ecx,DWORD PTR [ebp+0x4]
6400754d:	mov    DWORD PTR [ecx],edx
6400754f:	mov    ecx,DWORD PTR [ebp+0x4]
64007552:	jmp    0x64007572
64007554:	cmp    BYTE PTR [esp+0x70],bl
64007558:	je     0x64007567
6400755a:	mov    DWORD PTR [esi],edx
6400755c:	mov    ecx,DWORD PTR [ebp+0x4]
6400755f:	cmp    esi,DWORD PTR [ecx]
64007561:	jne    0x64007575
64007563:	mov    DWORD PTR [ecx],edx
64007565:	jmp    0x64007575
64007567:	mov    DWORD PTR [esi+0x8],edx
6400756a:	mov    ecx,DWORD PTR [ebp+0x4]
6400756d:	cmp    esi,DWORD PTR [ecx+0x8]
64007570:	jne    0x64007575
64007572:	mov    DWORD PTR [ecx+0x8],edx
64007575:	mov    esi,DWORD PTR [edx+0x4]
64007578:	cmp    BYTE PTR [esi+0x28],bl
6400757b:	lea    ecx,[edx+0x4]
6400757e:	jne    0x640076f6
64007584:	mov    esi,DWORD PTR [ecx]
64007586:	mov    edi,DWORD PTR [esi+0x4]
64007589:	cmp    esi,DWORD PTR [edi]
6400758b:	jne    0x64007637
64007591:	mov    edi,DWORD PTR [edi+0x8]
64007594:	cmp    BYTE PTR [edi+0x28],bl
64007597:	je     0x6400763e
6400759d:	cmp    edx,DWORD PTR [esi+0x8]
640075a0:	jne    0x640075dd
640075a2:	mov    edx,esi
640075a4:	mov    esi,DWORD PTR [edx+0x8]
640075a7:	mov    ecx,DWORD PTR [esi]
640075a9:	mov    DWORD PTR [edx+0x8],ecx
640075ac:	mov    ecx,DWORD PTR [esi]
640075ae:	cmp    BYTE PTR [ecx+0x29],bl
640075b1:	jne    0x640075b6
640075b3:	mov    DWORD PTR [ecx+0x4],edx
640075b6:	mov    edi,DWORD PTR [edx+0x4]
640075b9:	lea    ecx,[edx+0x4]
640075bc:	mov    DWORD PTR [esi+0x4],edi
640075bf:	mov    edi,DWORD PTR [ebp+0x4]
640075c2:	cmp    edx,DWORD PTR [edi+0x4]
640075c5:	jne    0x640075cc
640075c7:	mov    DWORD PTR [edi+0x4],esi
640075ca:	jmp    0x640075d9
640075cc:	mov    edi,DWORD PTR [ecx]
640075ce:	cmp    edx,DWORD PTR [edi]
640075d0:	jne    0x640075d6
640075d2:	mov    DWORD PTR [edi],esi
640075d4:	jmp    0x640075d9
640075d6:	mov    DWORD PTR [edi+0x8],esi
640075d9:	mov    DWORD PTR [esi],edx
640075db:	mov    DWORD PTR [ecx],esi
640075dd:	mov    esi,DWORD PTR [ecx]
640075df:	mov    BYTE PTR [esi+0x28],al
640075e2:	mov    esi,DWORD PTR [ecx]
640075e4:	mov    esi,DWORD PTR [esi+0x4]
640075e7:	mov    BYTE PTR [esi+0x28],bl
640075ea:	mov    ecx,DWORD PTR [ecx]
640075ec:	mov    ecx,DWORD PTR [ecx+0x4]
640075ef:	mov    esi,DWORD PTR [ecx]
640075f1:	mov    edi,DWORD PTR [esi+0x8]
640075f4:	mov    DWORD PTR [ecx],edi
640075f6:	mov    edi,DWORD PTR [esi+0x8]
640075f9:	cmp    BYTE PTR [edi+0x29],bl
640075fc:	jne    0x64007601
640075fe:	mov    DWORD PTR [edi+0x4],ecx
64007601:	mov    edi,DWORD PTR [ecx+0x4]
64007604:	mov    DWORD PTR [esi+0x4],edi
64007607:	mov    edi,DWORD PTR [ebp+0x4]
6400760a:	cmp    ecx,DWORD PTR [edi+0x4]
6400760d:	jne    0x6400761a
6400760f:	mov    DWORD PTR [edi+0x4],esi
64007612:	mov    DWORD PTR [esi+0x8],ecx
64007615:	jmp    0x640076e0
6400761a:	mov    edi,DWORD PTR [ecx+0x4]
6400761d:	cmp    ecx,DWORD PTR [edi+0x8]
64007620:	jne    0x6400762d
64007622:	mov    DWORD PTR [edi+0x8],esi
64007625:	mov    DWORD PTR [esi+0x8],ecx
64007628:	jmp    0x640076e0
6400762d:	mov    DWORD PTR [edi],esi
6400762f:	mov    DWORD PTR [esi+0x8],ecx
64007632:	jmp    0x640076e0
64007637:	mov    edi,DWORD PTR [edi]
64007639:	cmp    BYTE PTR [edi+0x28],bl
6400763c:	jne    0x64007658
6400763e:	mov    edx,esi
64007640:	mov    BYTE PTR [edx+0x28],al
64007643:	mov    BYTE PTR [edi+0x28],al
64007646:	mov    edx,DWORD PTR [ecx]
64007648:	mov    edx,DWORD PTR [edx+0x4]
6400764b:	mov    BYTE PTR [edx+0x28],bl
6400764e:	mov    ecx,DWORD PTR [ecx]
64007650:	mov    edx,DWORD PTR [ecx+0x4]
64007653:	jmp    0x640076e3
64007658:	cmp    edx,DWORD PTR [esi]
6400765a:	jne    0x64007699
6400765c:	mov    edx,esi
6400765e:	mov    esi,DWORD PTR [edx]
64007660:	mov    ecx,DWORD PTR [esi+0x8]
64007663:	mov    DWORD PTR [edx],ecx
64007665:	mov    ecx,DWORD PTR [esi+0x8]
64007668:	cmp    BYTE PTR [ecx+0x29],bl
6400766b:	jne    0x64007670
6400766d:	mov    DWORD PTR [ecx+0x4],edx
64007670:	mov    edi,DWORD PTR [edx+0x4]
64007673:	lea    ecx,[edx+0x4]
64007676:	mov    DWORD PTR [esi+0x4],edi
64007679:	mov    edi,DWORD PTR [ebp+0x4]
6400767c:	cmp    edx,DWORD PTR [edi+0x4]
6400767f:	jne    0x64007686
64007681:	mov    DWORD PTR [edi+0x4],esi
64007684:	jmp    0x64007694
64007686:	mov    edi,DWORD PTR [ecx]
64007688:	cmp    edx,DWORD PTR [edi+0x8]
6400768b:	jne    0x64007692
6400768d:	mov    DWORD PTR [edi+0x8],esi
64007690:	jmp    0x64007694
64007692:	mov    DWORD PTR [edi],esi
64007694:	mov    DWORD PTR [esi+0x8],edx
64007697:	mov    DWORD PTR [ecx],esi
64007699:	mov    esi,DWORD PTR [ecx]
6400769b:	mov    BYTE PTR [esi+0x28],al
6400769e:	mov    esi,DWORD PTR [ecx]
640076a0:	mov    esi,DWORD PTR [esi+0x4]
640076a3:	mov    BYTE PTR [esi+0x28],bl
640076a6:	mov    ecx,DWORD PTR [ecx]
640076a8:	mov    ecx,DWORD PTR [ecx+0x4]
640076ab:	mov    esi,DWORD PTR [ecx+0x8]
640076ae:	mov    edi,DWORD PTR [esi]
640076b0:	mov    DWORD PTR [ecx+0x8],edi
640076b3:	mov    edi,DWORD PTR [esi]
640076b5:	cmp    BYTE PTR [edi+0x29],bl
640076b8:	jne    0x640076bd
640076ba:	mov    DWORD PTR [edi+0x4],ecx
640076bd:	mov    edi,DWORD PTR [ecx+0x4]
640076c0:	mov    DWORD PTR [esi+0x4],edi
640076c3:	mov    edi,DWORD PTR [ebp+0x4]
640076c6:	cmp    ecx,DWORD PTR [edi+0x4]
640076c9:	jne    0x640076d0
640076cb:	mov    DWORD PTR [edi+0x4],esi
640076ce:	jmp    0x640076de
640076d0:	mov    edi,DWORD PTR [ecx+0x4]
640076d3:	cmp    ecx,DWORD PTR [edi]
640076d5:	jne    0x640076db
640076d7:	mov    DWORD PTR [edi],esi
640076d9:	jmp    0x640076de
640076db:	mov    DWORD PTR [edi+0x8],esi
640076de:	mov    DWORD PTR [esi],ecx
640076e0:	mov    DWORD PTR [ecx+0x4],esi
640076e3:	mov    esi,DWORD PTR [edx+0x4]
640076e6:	cmp    BYTE PTR [esi+0x28],bl
640076e9:	lea    ecx,[edx+0x4]
640076ec:	je     0x64007584
640076f2:	mov    edx,DWORD PTR [esp+0x68]
640076f6:	mov    ecx,DWORD PTR [ebp+0x4]
640076f9:	mov    ecx,DWORD PTR [ecx+0x4]
640076fc:	mov    BYTE PTR [ecx+0x28],al
640076ff:	mov    ecx,DWORD PTR [esp+0x6c]
64007703:	mov    DWORD PTR [ecx+0x4],edx
64007706:	mov    DWORD PTR [ecx],ebp
64007708:	mov    eax,ecx
6400770a:	mov    ecx,DWORD PTR [esp+0x58]
6400770e:	mov    DWORD PTR fs:0x0,ecx
64007715:	pop    ecx
64007716:	pop    edi
64007717:	pop    esi
64007718:	pop    ebp
64007719:	pop    ebx
6400771a:	add    esp,0x50
6400771d:	ret    0x10
64007720:	push   ebp
64007721:	mov    ebp,esp
64007723:	and    esp,0xfffffff8
64007726:	sub    esp,0xc
64007729:	push   edi
6400772a:	mov    edi,eax
6400772c:	mov    eax,DWORD PTR [edi+0x4]
6400772f:	mov    ecx,DWORD PTR [eax]
64007731:	push   eax
64007732:	push   edi
64007733:	push   ecx
64007734:	push   edi
64007735:	lea    eax,[esp+0x18]
64007739:	push   eax
6400773a:	call   0x64007320
6400773f:	mov    ecx,DWORD PTR [edi+0x4]
64007742:	push   ecx
64007743:	call   0x64013402
64007748:	add    esp,0x4
6400774b:	xor    eax,eax
6400774d:	mov    DWORD PTR [edi+0x4],eax
64007750:	mov    DWORD PTR [edi+0x8],eax
64007753:	pop    edi
64007754:	mov    esp,ebp
64007756:	pop    ebp
64007757:	ret    
64007758:	int3   
64007759:	int3   
6400775a:	int3   
6400775b:	int3   
6400775c:	int3   
6400775d:	int3   
6400775e:	int3   
6400775f:	int3   
64007760:	cmp    DWORD PTR [esi],0x0
64007763:	jne    0x6400776a
64007765:	call   0x640137b8
6400776a:	mov    eax,DWORD PTR [esi+0x4]
6400776d:	cmp    BYTE PTR [eax+0x29],0x0
64007771:	je     0x64007778
64007773:	jmp    0x640137b8
64007778:	mov    ecx,DWORD PTR [eax+0x8]
6400777b:	cmp    BYTE PTR [ecx+0x29],0x0
6400777f:	jne    0x6400779e
64007781:	mov    eax,DWORD PTR [ecx]
64007783:	cmp    BYTE PTR [eax+0x29],0x0
64007787:	jne    0x6400779a
64007789:	lea    esp,[esp+0x0]
64007790:	mov    ecx,eax
64007792:	mov    eax,DWORD PTR [ecx]
64007794:	cmp    BYTE PTR [eax+0x29],0x0
64007798:	je     0x64007790
6400779a:	mov    DWORD PTR [esi+0x4],ecx
6400779d:	ret    
6400779e:	mov    eax,DWORD PTR [eax+0x4]
640077a1:	cmp    BYTE PTR [eax+0x29],0x0
640077a5:	jne    0x640077bd
640077a7:	mov    ecx,DWORD PTR [esi+0x4]
640077aa:	cmp    ecx,DWORD PTR [eax+0x8]
640077ad:	jne    0x640077bd
640077af:	mov    DWORD PTR [esi+0x4],eax
640077b2:	mov    edx,eax
640077b4:	mov    eax,DWORD PTR [edx+0x4]
640077b7:	cmp    BYTE PTR [eax+0x29],0x0
640077bb:	je     0x640077a7
640077bd:	mov    DWORD PTR [esi+0x4],eax
640077c0:	ret    
640077c1:	int3   
640077c2:	int3   
640077c3:	int3   
640077c4:	int3   
640077c5:	int3   
640077c6:	int3   
640077c7:	int3   
640077c8:	int3   
640077c9:	int3   
640077ca:	int3   
640077cb:	int3   
640077cc:	int3   
640077cd:	int3   
640077ce:	int3   
640077cf:	int3   
640077d0:	push   ebp
640077d1:	mov    ebp,esp
640077d3:	and    esp,0xfffffff8
640077d6:	sub    esp,0x24
640077d9:	push   ebx
640077da:	push   esi
640077db:	push   edi
640077dc:	mov    edi,ecx
640077de:	mov    eax,DWORD PTR [edi+0x4]
640077e1:	mov    esi,DWORD PTR [eax+0x4]
640077e4:	cmp    BYTE PTR [esi+0x45],0x0
640077e8:	mov    ecx,eax
640077ea:	mov    al,0x1
640077ec:	mov    DWORD PTR [esp+0x28],edi
640077f0:	mov    DWORD PTR [esp+0x10],ecx
640077f4:	mov    BYTE PTR [esp+0x18],al
640077f8:	jne    0x64007898
640077fe:	mov    edx,DWORD PTR [ebp+0xc]
64007801:	mov    eax,DWORD PTR [edx+0x14]
64007804:	mov    ecx,DWORD PTR [edx+0x18]
64007807:	mov    DWORD PTR [esp+0x20],eax
6400780b:	mov    DWORD PTR [esp+0x1c],eax
6400780f:	mov    DWORD PTR [esp+0x24],ecx
64007813:	jmp    0x6400781c
64007815:	mov    edx,DWORD PTR [ebp+0xc]
64007818:	mov    eax,DWORD PTR [esp+0x1c]
6400781c:	cmp    DWORD PTR [esi+0x24],0x10
64007820:	mov    ebx,DWORD PTR [esi+0x20]
64007823:	mov    DWORD PTR [esp+0x10],esi
64007827:	jb     0x6400782e
64007829:	mov    ecx,DWORD PTR [esi+0x10]
6400782c:	jmp    0x64007831
6400782e:	lea    ecx,[esi+0x10]
64007831:	mov    edi,DWORD PTR [esp+0x20]
64007835:	cmp    eax,edi
64007837:	mov    DWORD PTR [esp+0x14],ecx
6400783b:	jae    0x6400783f
6400783d:	mov    edi,eax
6400783f:	cmp    edi,ebx
64007841:	mov    ecx,edi
64007843:	jb     0x64007847
64007845:	mov    ecx,ebx
64007847:	cmp    DWORD PTR [esp+0x24],0x10
6400784c:	lea    eax,[edx+0x4]
6400784f:	jb     0x64007853
64007851:	mov    eax,DWORD PTR [eax]
64007853:	mov    edx,DWORD PTR [esp+0x14]
64007857:	push   ecx
64007858:	push   edx
64007859:	push   eax
6400785a:	call   0x64002c70
6400785f:	add    esp,0xc
64007862:	test   eax,eax
64007864:	jne    0x64007878
64007866:	cmp    edi,ebx
64007868:	jae    0x6400786f
6400786a:	or     eax,0xffffffff
6400786d:	jmp    0x64007876
6400786f:	xor    eax,eax
64007871:	cmp    edi,ebx
64007873:	setne  al
64007876:	test   eax,eax
64007878:	setl   al
6400787b:	test   al,al
6400787d:	mov    BYTE PTR [esp+0x18],al
64007881:	je     0x64007887
64007883:	mov    esi,DWORD PTR [esi]
64007885:	jmp    0x6400788a
64007887:	mov    esi,DWORD PTR [esi+0x8]
6400788a:	cmp    BYTE PTR [esi+0x45],0x0
6400788e:	je     0x64007815
64007890:	mov    edi,DWORD PTR [esp+0x28]
64007894:	mov    ecx,DWORD PTR [esp+0x10]
64007898:	test   al,al
6400789a:	mov    esi,ecx
6400789c:	mov    DWORD PTR [esp+0x2c],esi
640078a0:	mov    DWORD PTR [esp+0x28],edi
640078a4:	je     0x640078e9
640078a6:	mov    eax,DWORD PTR [edi+0x4]
640078a9:	cmp    ecx,DWORD PTR [eax]
640078ab:	jne    0x640078dc
640078ad:	mov    edx,DWORD PTR [ebp+0xc]
640078b0:	push   edx
640078b1:	push   ecx
640078b2:	push   0x1
640078b4:	lea    eax,[esp+0x34]
640078b8:	push   eax
640078b9:	mov    ecx,edi
640078bb:	call   0x64008140
640078c0:	mov    ecx,eax
640078c2:	mov    edx,DWORD PTR [ecx]
640078c4:	mov    eax,DWORD PTR [ebp+0x8]
640078c7:	mov    ecx,DWORD PTR [ecx+0x4]
640078ca:	mov    DWORD PTR [eax+0x4],ecx
640078cd:	mov    BYTE PTR [eax+0x8],0x1
640078d1:	mov    DWORD PTR [eax],edx
640078d3:	pop    edi
640078d4:	pop    esi
640078d5:	pop    ebx
640078d6:	mov    esp,ebp
640078d8:	pop    ebp
640078d9:	ret    0x8
640078dc:	lea    ecx,[esp+0x28]
640078e0:	call   0x640090b0
640078e5:	mov    esi,DWORD PTR [esp+0x2c]
640078e9:	mov    ebx,DWORD PTR [ebp+0xc]
640078ec:	cmp    DWORD PTR [ebx+0x18],0x10
640078f0:	mov    edx,DWORD PTR [ebx+0x14]
640078f3:	lea    ecx,[esi+0xc]
640078f6:	jb     0x640078fd
640078f8:	mov    eax,DWORD PTR [ebx+0x4]
640078fb:	jmp    0x64007900
640078fd:	lea    eax,[ebx+0x4]
64007900:	push   edx
64007901:	mov    edx,DWORD PTR [ecx+0x14]
64007904:	push   eax
64007905:	push   edx
64007906:	push   0x0
64007908:	call   0x64006ff0
6400790d:	test   eax,eax
6400790f:	jge    0x64007944
64007911:	mov    eax,DWORD PTR [esp+0x10]
64007915:	mov    ecx,DWORD PTR [esp+0x18]
64007919:	push   ebx
6400791a:	push   eax
6400791b:	push   ecx
6400791c:	lea    edx,[esp+0x34]
64007920:	push   edx
64007921:	mov    ecx,edi
64007923:	call   0x64008140
64007928:	mov    ecx,eax
6400792a:	mov    edx,DWORD PTR [ecx]
6400792c:	mov    eax,DWORD PTR [ebp+0x8]
6400792f:	mov    ecx,DWORD PTR [ecx+0x4]
64007932:	mov    DWORD PTR [eax+0x4],ecx
64007935:	mov    BYTE PTR [eax+0x8],0x1
64007939:	mov    DWORD PTR [eax],edx
6400793b:	pop    edi
6400793c:	pop    esi
6400793d:	pop    ebx
6400793e:	mov    esp,ebp
64007940:	pop    ebp
64007941:	ret    0x8
64007944:	mov    eax,DWORD PTR [ebp+0x8]
64007947:	mov    edx,DWORD PTR [esp+0x28]
6400794b:	pop    edi
6400794c:	mov    DWORD PTR [eax+0x4],esi
6400794f:	pop    esi
64007950:	mov    BYTE PTR [eax+0x8],0x0
64007954:	mov    DWORD PTR [eax],edx
64007956:	pop    ebx
64007957:	mov    esp,ebp
64007959:	pop    ebp
6400795a:	ret    0x8
6400795d:	int3   
6400795e:	int3   
6400795f:	int3   
64007960:	sub    esp,0x18
64007963:	push   ebx
64007964:	mov    ebx,DWORD PTR [esp+0x24]
64007968:	push   esi
64007969:	push   edi
6400796a:	push   ebx
6400796b:	mov    esi,ecx
6400796d:	call   0x640089c0
64007972:	test   esi,esi
64007974:	mov    edi,eax
64007976:	mov    DWORD PTR [esp+0x14],edi
6400797a:	jne    0x64007981
6400797c:	call   0x640137b8
64007981:	cmp    edi,DWORD PTR [esi+0x4]
64007984:	mov    DWORD PTR [esp+0x10],esi
64007988:	je     0x640079b4
6400798a:	cmp    DWORD PTR [edi+0x24],0x10
6400798e:	mov    eax,DWORD PTR [edi+0x20]
64007991:	jb     0x64007998
64007993:	mov    edi,DWORD PTR [edi+0x10]
64007996:	jmp    0x6400799b
64007998:	add    edi,0x10
6400799b:	push   eax
6400799c:	mov    eax,DWORD PTR [ebx+0x14]
6400799f:	push   edi
640079a0:	push   eax
640079a1:	push   0x0
640079a3:	mov    ecx,ebx
640079a5:	call   0x64006ff0
640079aa:	test   eax,eax
640079ac:	jl     0x640079b4
640079ae:	lea    ecx,[esp+0x10]
640079b2:	jmp    0x640079c3
640079b4:	mov    ecx,DWORD PTR [esi+0x4]
640079b7:	mov    DWORD PTR [esp+0x1c],ecx
640079bb:	mov    DWORD PTR [esp+0x18],esi
640079bf:	lea    ecx,[esp+0x18]
640079c3:	mov    edx,DWORD PTR [ecx]
640079c5:	mov    eax,DWORD PTR [esp+0x28]
640079c9:	mov    ecx,DWORD PTR [ecx+0x4]
640079cc:	pop    edi
640079cd:	pop    esi
640079ce:	mov    DWORD PTR [eax],edx
640079d0:	mov    DWORD PTR [eax+0x4],ecx
640079d3:	pop    ebx
640079d4:	add    esp,0x18
640079d7:	ret    0x8
640079da:	int3   
640079db:	int3   
640079dc:	int3   
640079dd:	int3   
640079de:	int3   
640079df:	int3   
640079e0:	push   esi
640079e1:	mov    esi,ecx
640079e3:	cmp    DWORD PTR [esi+0x18],0x8
640079e7:	jb     0x640079f5
640079e9:	mov    eax,DWORD PTR [esi+0x4]
640079ec:	push   eax
640079ed:	call   0x64013402
640079f2:	add    esp,0x4
640079f5:	xor    eax,eax
640079f7:	mov    DWORD PTR [esi+0x18],0x7
640079fe:	mov    DWORD PTR [esi+0x14],eax
64007a01:	mov    WORD PTR [esi+0x4],ax
64007a05:	pop    esi
64007a06:	ret    
64007a07:	int3   
64007a08:	int3   
64007a09:	int3   
64007a0a:	int3   
64007a0b:	int3   
64007a0c:	int3   
64007a0d:	int3   
64007a0e:	int3   
64007a0f:	int3   
64007a10:	push   ebp
64007a11:	mov    ebp,esp
64007a13:	and    esp,0xfffffff8
64007a16:	sub    esp,0x14
64007a19:	mov    eax,DWORD PTR [ecx+0x4]
64007a1c:	push   ebx
64007a1d:	push   esi
64007a1e:	mov    esi,DWORD PTR [eax+0x4]
64007a21:	cmp    BYTE PTR [esi+0x45],0x0
64007a25:	mov    ebx,eax
64007a27:	mov    al,0x1
64007a29:	push   edi
64007a2a:	mov    edi,DWORD PTR [ebp+0xc]
64007a2d:	mov    DWORD PTR [esp+0x14],ecx
64007a31:	mov    BYTE PTR [esp+0x10],al
64007a35:	jne    0x64007a77
64007a37:	cmp    DWORD PTR [esi+0x24],0x8
64007a3b:	mov    ecx,DWORD PTR [esi+0x20]
64007a3e:	mov    ebx,esi
64007a40:	jb     0x64007a47
64007a42:	mov    eax,DWORD PTR [esi+0x10]
64007a45:	jmp    0x64007a4a
64007a47:	lea    eax,[esi+0x10]
64007a4a:	push   ecx
64007a4b:	push   eax
64007a4c:	mov    eax,DWORD PTR [edi+0x14]
64007a4f:	push   eax
64007a50:	push   0x0
64007a52:	mov    ecx,edi
64007a54:	call   0x64009ec0
64007a59:	test   eax,eax
64007a5b:	setl   al
64007a5e:	test   al,al
64007a60:	mov    BYTE PTR [esp+0x10],al
64007a64:	je     0x64007a6a
64007a66:	mov    esi,DWORD PTR [esi]
64007a68:	jmp    0x64007a6d
64007a6a:	mov    esi,DWORD PTR [esi+0x8]
64007a6d:	cmp    BYTE PTR [esi+0x45],0x0
64007a71:	je     0x64007a37
64007a73:	mov    ecx,DWORD PTR [esp+0x14]
64007a77:	test   al,al
64007a79:	mov    esi,ebx
64007a7b:	mov    DWORD PTR [esp+0x1c],esi
64007a7f:	mov    DWORD PTR [esp+0x18],ecx
64007a83:	je     0x64007ac3
64007a85:	mov    edx,DWORD PTR [ecx+0x4]
64007a88:	cmp    ebx,DWORD PTR [edx]
64007a8a:	jne    0x64007ab6
64007a8c:	push   edi
64007a8d:	push   ebx
64007a8e:	push   0x1
64007a90:	lea    eax,[esp+0x24]
64007a94:	push   eax
64007a95:	call   0x64008560
64007a9a:	mov    ecx,eax
64007a9c:	mov    edx,DWORD PTR [ecx]
64007a9e:	mov    eax,DWORD PTR [ebp+0x8]
64007aa1:	mov    ecx,DWORD PTR [ecx+0x4]
64007aa4:	mov    DWORD PTR [eax+0x4],ecx
64007aa7:	mov    BYTE PTR [eax+0x8],0x1
64007aab:	mov    DWORD PTR [eax],edx
64007aad:	pop    edi
64007aae:	pop    esi
64007aaf:	pop    ebx
64007ab0:	mov    esp,ebp
64007ab2:	pop    ebp
64007ab3:	ret    0x8
64007ab6:	lea    ecx,[esp+0x18]
64007aba:	call   0x640090b0
64007abf:	mov    esi,DWORD PTR [esp+0x1c]
64007ac3:	cmp    DWORD PTR [edi+0x18],0x8
64007ac7:	mov    edx,DWORD PTR [edi+0x14]
64007aca:	lea    ecx,[esi+0xc]
64007acd:	jb     0x64007ad4
64007acf:	mov    eax,DWORD PTR [edi+0x4]
64007ad2:	jmp    0x64007ad7
64007ad4:	lea    eax,[edi+0x4]
64007ad7:	push   edx
64007ad8:	mov    edx,DWORD PTR [ecx+0x14]
64007adb:	push   eax
64007adc:	push   edx
64007add:	push   0x0
64007adf:	call   0x64009ec0
64007ae4:	test   eax,eax
64007ae6:	jge    0x64007afa
64007ae8:	mov    eax,DWORD PTR [esp+0x10]
64007aec:	push   edi
64007aed:	push   ebx
64007aee:	lea    ecx,[esp+0x20]
64007af2:	push   eax
64007af3:	push   ecx
64007af4:	mov    ecx,DWORD PTR [esp+0x24]
64007af8:	jmp    0x64007a95
64007afa:	mov    eax,DWORD PTR [ebp+0x8]
64007afd:	mov    edx,DWORD PTR [esp+0x18]
64007b01:	pop    edi
64007b02:	mov    DWORD PTR [eax+0x4],esi
64007b05:	pop    esi
64007b06:	mov    BYTE PTR [eax+0x8],0x0
64007b0a:	mov    DWORD PTR [eax],edx
64007b0c:	pop    ebx
64007b0d:	mov    esp,ebp
64007b0f:	pop    ebp
64007b10:	ret    0x8
64007b13:	int3   
64007b14:	int3   
64007b15:	int3   
64007b16:	int3   
64007b17:	int3   
64007b18:	int3   
64007b19:	int3   
64007b1a:	int3   
64007b1b:	int3   
64007b1c:	int3   
64007b1d:	int3   
64007b1e:	int3   
64007b1f:	int3   
64007b20:	sub    esp,0x18
64007b23:	push   ebx
64007b24:	mov    ebx,DWORD PTR [esp+0x24]
64007b28:	push   esi
64007b29:	push   edi
64007b2a:	push   ebx
64007b2b:	mov    esi,ecx
64007b2d:	call   0x64008b90
64007b32:	test   esi,esi
64007b34:	mov    edi,eax
64007b36:	mov    DWORD PTR [esp+0x14],edi
64007b3a:	jne    0x64007b41
64007b3c:	call   0x640137b8
64007b41:	cmp    edi,DWORD PTR [esi+0x4]
64007b44:	mov    DWORD PTR [esp+0x10],esi
64007b48:	je     0x64007b74
64007b4a:	cmp    DWORD PTR [edi+0x24],0x8
64007b4e:	mov    eax,DWORD PTR [edi+0x20]
64007b51:	jb     0x64007b58
64007b53:	mov    edi,DWORD PTR [edi+0x10]
64007b56:	jmp    0x64007b5b
64007b58:	add    edi,0x10
64007b5b:	push   eax
64007b5c:	mov    eax,DWORD PTR [ebx+0x14]
64007b5f:	push   edi
64007b60:	push   eax
64007b61:	push   0x0
64007b63:	mov    ecx,ebx
64007b65:	call   0x64009ec0
64007b6a:	test   eax,eax
64007b6c:	jl     0x64007b74
64007b6e:	lea    ecx,[esp+0x10]
64007b72:	jmp    0x64007b83
64007b74:	mov    ecx,DWORD PTR [esi+0x4]
64007b77:	mov    DWORD PTR [esp+0x1c],ecx
64007b7b:	mov    DWORD PTR [esp+0x18],esi
64007b7f:	lea    ecx,[esp+0x18]
64007b83:	mov    edx,DWORD PTR [ecx]
64007b85:	mov    eax,DWORD PTR [esp+0x28]
64007b89:	mov    ecx,DWORD PTR [ecx+0x4]
64007b8c:	pop    edi
64007b8d:	pop    esi
64007b8e:	mov    DWORD PTR [eax],edx
64007b90:	mov    DWORD PTR [eax+0x4],ecx
64007b93:	pop    ebx
64007b94:	add    esp,0x18
64007b97:	ret    0x8
64007b9a:	int3   
64007b9b:	int3   
64007b9c:	int3   
64007b9d:	int3   
64007b9e:	int3   
64007b9f:	int3   
64007ba0:	mov    eax,DWORD PTR [esp+0x4]
64007ba4:	push   esi
64007ba5:	push   eax
64007ba6:	mov    esi,ecx
64007ba8:	call   0x64002e30
64007bad:	mov    DWORD PTR [esi],0x6402631c
64007bb3:	mov    eax,esi
64007bb5:	pop    esi
64007bb6:	ret    0x4
64007bb9:	int3   
64007bba:	int3   
64007bbb:	int3   
64007bbc:	int3   
64007bbd:	int3   
64007bbe:	int3   
64007bbf:	int3   
64007bc0:	push   0xffffffff
64007bc2:	push   0x64023d88
64007bc7:	mov    eax,fs:0x0
64007bcd:	push   eax
64007bce:	sub    esp,0x44
64007bd1:	push   ebx
64007bd2:	push   ebp
64007bd3:	push   esi
64007bd4:	push   edi
64007bd5:	mov    eax,ds:0x6402f09c
64007bda:	xor    eax,esp
64007bdc:	push   eax
64007bdd:	lea    eax,[esp+0x58]
64007be1:	mov    fs:0x0,eax
64007be7:	mov    eax,DWORD PTR [esp+0x74]
64007beb:	cmp    BYTE PTR [eax+0x29],0x0
64007bef:	je     0x64007c3d
64007bf1:	push   0x1b
64007bf3:	xor    esi,esi
64007bf5:	push   0x64029e74
64007bfa:	lea    ecx,[esp+0x1c]
64007bfe:	mov    DWORD PTR [esp+0x34],0xf
64007c06:	mov    DWORD PTR [esp+0x30],esi
64007c0a:	mov    BYTE PTR [esp+0x20],0x0
64007c0f:	call   0x64001860
64007c14:	lea    eax,[esp+0x14]
64007c18:	push   eax
64007c19:	lea    ecx,[esp+0x34]
64007c1d:	mov    DWORD PTR [esp+0x64],esi
64007c21:	call   0x64002d00
64007c26:	push   0x6402c654
64007c2b:	lea    ecx,[esp+0x34]
64007c2f:	push   ecx
64007c30:	mov    DWORD PTR [esp+0x38],0x64026328
64007c38:	call   0x6401384b
64007c3d:	lea    esi,[esp+0x70]
64007c41:	mov    ebp,eax
64007c43:	call   0x64007760
64007c48:	mov    eax,DWORD PTR [ebp+0x0]
64007c4b:	cmp    BYTE PTR [eax+0x29],0x0
64007c4f:	je     0x64007c56
64007c51:	mov    edi,DWORD PTR [ebp+0x8]
64007c54:	jmp    0x64007c6e
64007c56:	mov    edx,DWORD PTR [ebp+0x8]
64007c59:	cmp    BYTE PTR [edx+0x29],0x0
64007c5d:	je     0x64007c63
64007c5f:	mov    edi,eax
64007c61:	jmp    0x64007c6e
64007c63:	mov    ecx,DWORD PTR [esp+0x74]
64007c67:	cmp    ecx,ebp
64007c69:	mov    edi,DWORD PTR [ecx+0x8]
64007c6c:	jne    0x64007ce2
64007c6e:	cmp    BYTE PTR [edi+0x29],0x0
64007c72:	mov    esi,DWORD PTR [ebp+0x4]
64007c75:	jne    0x64007c7a
64007c77:	mov    DWORD PTR [edi+0x4],esi
64007c7a:	mov    ecx,DWORD PTR [esp+0x68]
64007c7e:	mov    eax,DWORD PTR [ecx+0x4]
64007c81:	cmp    DWORD PTR [eax+0x4],ebp
64007c84:	jne    0x64007c8b
64007c86:	mov    DWORD PTR [eax+0x4],edi
64007c89:	jmp    0x64007c96
64007c8b:	cmp    DWORD PTR [esi],ebp
64007c8d:	jne    0x64007c93
64007c8f:	mov    DWORD PTR [esi],edi
64007c91:	jmp    0x64007c96
64007c93:	mov    DWORD PTR [esi+0x8],edi
64007c96:	mov    edx,DWORD PTR [ecx+0x4]
64007c99:	cmp    DWORD PTR [edx],ebp
64007c9b:	jne    0x64007cbd
64007c9d:	cmp    BYTE PTR [edi+0x29],0x0
64007ca1:	je     0x64007ca7
64007ca3:	mov    ecx,esi
64007ca5:	jmp    0x64007cbb
64007ca7:	mov    eax,DWORD PTR [edi]
64007ca9:	cmp    BYTE PTR [eax+0x29],0x0
64007cad:	mov    ecx,edi
64007caf:	jne    0x64007cbb
64007cb1:	mov    ecx,eax
64007cb3:	mov    eax,DWORD PTR [ecx]
64007cb5:	cmp    BYTE PTR [eax+0x29],0x0
64007cb9:	je     0x64007cb1
64007cbb:	mov    DWORD PTR [edx],ecx
64007cbd:	mov    eax,DWORD PTR [esp+0x68]
64007cc1:	mov    ebx,DWORD PTR [eax+0x4]
64007cc4:	cmp    DWORD PTR [ebx+0x8],ebp
64007cc7:	jne    0x64007d3e
64007cc9:	cmp    BYTE PTR [edi+0x29],0x0
64007ccd:	je     0x64007cd6
64007ccf:	mov    eax,esi
64007cd1:	mov    DWORD PTR [ebx+0x8],eax
64007cd4:	jmp    0x64007d3e
64007cd6:	mov    eax,edi
64007cd8:	call   0x64007fe0
64007cdd:	mov    DWORD PTR [ebx+0x8],eax
64007ce0:	jmp    0x64007d3e
64007ce2:	mov    DWORD PTR [eax+0x4],ecx
64007ce5:	mov    edx,DWORD PTR [ebp+0x0]
64007ce8:	mov    DWORD PTR [ecx],edx
64007cea:	cmp    ecx,DWORD PTR [ebp+0x8]
64007ced:	jne    0x64007cf3
64007cef:	mov    esi,ecx
64007cf1:	jmp    0x64007d0d
64007cf3:	cmp    BYTE PTR [edi+0x29],0x0
64007cf7:	mov    esi,DWORD PTR [ecx+0x4]
64007cfa:	jne    0x64007cff
64007cfc:	mov    DWORD PTR [edi+0x4],esi
64007cff:	mov    DWORD PTR [esi],edi
64007d01:	mov    eax,DWORD PTR [ebp+0x8]
64007d04:	mov    DWORD PTR [ecx+0x8],eax
64007d07:	mov    edx,DWORD PTR [ebp+0x8]
64007d0a:	mov    DWORD PTR [edx+0x4],ecx
64007d0d:	mov    eax,DWORD PTR [esp+0x68]
64007d11:	mov    eax,DWORD PTR [eax+0x4]
64007d14:	cmp    DWORD PTR [eax+0x4],ebp
64007d17:	jne    0x64007d1e
64007d19:	mov    DWORD PTR [eax+0x4],ecx
64007d1c:	jmp    0x64007d2c
64007d1e:	mov    eax,DWORD PTR [ebp+0x4]
64007d21:	cmp    DWORD PTR [eax],ebp
64007d23:	jne    0x64007d29
64007d25:	mov    DWORD PTR [eax],ecx
64007d27:	jmp    0x64007d2c
64007d29:	mov    DWORD PTR [eax+0x8],ecx
64007d2c:	mov    edx,DWORD PTR [ebp+0x4]
64007d2f:	mov    DWORD PTR [ecx+0x4],edx
64007d32:	mov    dl,BYTE PTR [ebp+0x28]
64007d35:	mov    al,BYTE PTR [ecx+0x28]
64007d38:	mov    BYTE PTR [ecx+0x28],dl
64007d3b:	mov    BYTE PTR [ebp+0x28],al
64007d3e:	mov    bl,0x1
64007d40:	cmp    BYTE PTR [ebp+0x28],bl
64007d43:	jne    0x64007e6a
64007d49:	mov    eax,DWORD PTR [esp+0x68]
64007d4d:	mov    ecx,DWORD PTR [eax+0x4]
64007d50:	cmp    edi,DWORD PTR [ecx+0x4]
64007d53:	je     0x64007e67
64007d59:	lea    esp,[esp+0x0]
64007d60:	cmp    BYTE PTR [edi+0x28],bl
64007d63:	jne    0x64007e67
64007d69:	mov    ecx,DWORD PTR [esi]
64007d6b:	cmp    edi,ecx
64007d6d:	jne    0x64007de5
64007d6f:	mov    ecx,DWORD PTR [esi+0x8]
64007d72:	cmp    BYTE PTR [ecx+0x28],0x0
64007d76:	jne    0x64007d8e
64007d78:	mov    edx,DWORD PTR [esp+0x68]
64007d7c:	mov    BYTE PTR [ecx+0x28],bl
64007d7f:	push   edx
64007d80:	mov    ecx,esi
64007d82:	mov    BYTE PTR [esi+0x28],0x0
64007d86:	call   0x64007f90
64007d8b:	mov    ecx,DWORD PTR [esi+0x8]
64007d8e:	cmp    BYTE PTR [ecx+0x29],0x0
64007d92:	jne    0x64007e19
64007d98:	mov    eax,DWORD PTR [ecx]
64007d9a:	cmp    BYTE PTR [eax+0x28],bl
64007d9d:	jne    0x64007da7
64007d9f:	mov    edx,DWORD PTR [ecx+0x8]
64007da2:	cmp    BYTE PTR [edx+0x28],bl
64007da5:	je     0x64007e15
64007da7:	mov    eax,DWORD PTR [ecx+0x8]
64007daa:	cmp    BYTE PTR [eax+0x28],bl
64007dad:	jne    0x64007dc5
64007daf:	mov    edx,DWORD PTR [ecx]
64007db1:	mov    eax,DWORD PTR [esp+0x68]
64007db5:	mov    BYTE PTR [edx+0x28],bl
64007db8:	push   eax
64007db9:	mov    BYTE PTR [ecx+0x28],0x0
64007dbd:	call   0x64008000
64007dc2:	mov    ecx,DWORD PTR [esi+0x8]
64007dc5:	mov    dl,BYTE PTR [esi+0x28]
64007dc8:	mov    BYTE PTR [ecx+0x28],dl
64007dcb:	mov    BYTE PTR [esi+0x28],bl
64007dce:	mov    eax,DWORD PTR [ecx+0x8]
64007dd1:	mov    ecx,DWORD PTR [esp+0x68]
64007dd5:	push   ecx
64007dd6:	mov    ecx,esi
64007dd8:	mov    BYTE PTR [eax+0x28],bl
64007ddb:	call   0x64007f90
64007de0:	jmp    0x64007e67
64007de5:	cmp    BYTE PTR [ecx+0x28],0x0
64007de9:	jne    0x64007e00
64007deb:	mov    eax,DWORD PTR [esp+0x68]
64007def:	mov    BYTE PTR [ecx+0x28],bl
64007df2:	push   eax
64007df3:	mov    ecx,esi
64007df5:	mov    BYTE PTR [esi+0x28],0x0
64007df9:	call   0x64008000
64007dfe:	mov    ecx,DWORD PTR [esi]
64007e00:	cmp    BYTE PTR [ecx+0x29],0x0
64007e04:	jne    0x64007e19
64007e06:	mov    edx,DWORD PTR [ecx+0x8]
64007e09:	cmp    BYTE PTR [edx+0x28],bl
64007e0c:	jne    0x64007e30
64007e0e:	mov    eax,DWORD PTR [ecx]
64007e10:	cmp    BYTE PTR [eax+0x28],bl
64007e13:	jne    0x64007e30
64007e15:	mov    BYTE PTR [ecx+0x28],0x0
64007e19:	mov    ecx,DWORD PTR [esp+0x68]
64007e1d:	mov    edx,DWORD PTR [ecx+0x4]
64007e20:	mov    edi,esi
64007e22:	cmp    edi,DWORD PTR [edx+0x4]
64007e25:	mov    esi,DWORD PTR [esi+0x4]
64007e28:	jne    0x64007d60
64007e2e:	jmp    0x64007e67
64007e30:	mov    edx,DWORD PTR [ecx]
64007e32:	cmp    BYTE PTR [edx+0x28],bl
64007e35:	jne    0x64007e4d
64007e37:	mov    eax,DWORD PTR [ecx+0x8]
64007e3a:	mov    edx,DWORD PTR [esp+0x68]
64007e3e:	mov    BYTE PTR [eax+0x28],bl
64007e41:	push   edx
64007e42:	mov    BYTE PTR [ecx+0x28],0x0
64007e46:	call   0x64007f90
64007e4b:	mov    ecx,DWORD PTR [esi]
64007e4d:	mov    al,BYTE PTR [esi+0x28]
64007e50:	mov    edx,DWORD PTR [esp+0x68]
64007e54:	mov    BYTE PTR [ecx+0x28],al
64007e57:	mov    BYTE PTR [esi+0x28],bl
64007e5a:	mov    ecx,DWORD PTR [ecx]
64007e5c:	mov    BYTE PTR [ecx+0x28],bl
64007e5f:	push   edx
64007e60:	mov    ecx,esi
64007e62:	call   0x64008000
64007e67:	mov    BYTE PTR [edi+0x28],bl
64007e6a:	cmp    DWORD PTR [ebp+0x24],0x10
64007e6e:	jb     0x64007e7c
64007e70:	mov    eax,DWORD PTR [ebp+0x10]
64007e73:	push   eax
64007e74:	call   0x64013402
64007e79:	add    esp,0x4
64007e7c:	mov    DWORD PTR [ebp+0x24],0xf
64007e83:	mov    DWORD PTR [ebp+0x20],0x0
64007e8a:	push   ebp
64007e8b:	mov    BYTE PTR [ebp+0x10],0x0
64007e8f:	call   0x64013402
64007e94:	mov    ecx,DWORD PTR [esp+0x6c]
64007e98:	mov    eax,DWORD PTR [ecx+0x8]
64007e9b:	add    esp,0x4
64007e9e:	test   eax,eax
64007ea0:	jbe    0x64007ea8
64007ea2:	add    eax,0xffffffff
64007ea5:	mov    DWORD PTR [ecx+0x8],eax
64007ea8:	mov    eax,DWORD PTR [esp+0x6c]
64007eac:	mov    ecx,DWORD PTR [esp+0x70]
64007eb0:	mov    edx,DWORD PTR [esp+0x74]
64007eb4:	mov    DWORD PTR [eax],ecx
64007eb6:	mov    DWORD PTR [eax+0x4],edx
64007eb9:	mov    ecx,DWORD PTR [esp+0x58]
64007ebd:	mov    DWORD PTR fs:0x0,ecx
64007ec4:	pop    ecx
64007ec5:	pop    edi
64007ec6:	pop    esi
64007ec7:	pop    ebp
64007ec8:	pop    ebx
64007ec9:	add    esp,0x50
64007ecc:	ret    0x10
64007ecf:	int3   
64007ed0:	push   ebp
64007ed1:	mov    ebp,esp
64007ed3:	push   0xffffffff
64007ed5:	push   0x64023940
64007eda:	mov    eax,fs:0x0
64007ee0:	push   eax
64007ee1:	sub    esp,0xc
64007ee4:	push   ebx
64007ee5:	push   esi
64007ee6:	push   edi
64007ee7:	mov    eax,ds:0x6402f09c
64007eec:	xor    eax,ebp
64007eee:	push   eax
64007eef:	lea    eax,[ebp-0xc]
64007ef2:	mov    fs:0x0,eax
64007ef8:	mov    DWORD PTR [ebp-0x10],esp
64007efb:	mov    ebx,ecx
64007efd:	mov    DWORD PTR [ebp-0x18],ebx
64007f00:	mov    edi,DWORD PTR [ebp+0x8]
64007f03:	cmp    BYTE PTR [edi+0x29],0x0
64007f07:	mov    eax,DWORD PTR [ebx+0x4]
64007f0a:	mov    DWORD PTR [ebp-0x14],eax
64007f0d:	jne    0x64007f54
64007f0f:	movzx  ecx,BYTE PTR [edi+0x28]
64007f13:	push   ecx
64007f14:	mov    ecx,DWORD PTR [ebp+0xc]
64007f17:	lea    edx,[edi+0xc]
64007f1a:	push   edx
64007f1b:	push   eax
64007f1c:	push   ecx
64007f1d:	push   eax
64007f1e:	call   0x64008090
64007f23:	mov    edx,DWORD PTR [ebp-0x14]
64007f26:	cmp    BYTE PTR [edx+0x29],0x0
64007f2a:	mov    esi,eax
64007f2c:	je     0x64007f31
64007f2e:	mov    DWORD PTR [ebp-0x14],esi
64007f31:	mov    DWORD PTR [ebp-0x4],0x0
64007f38:	mov    eax,DWORD PTR [edi]
64007f3a:	push   esi
64007f3b:	push   eax
64007f3c:	mov    ecx,ebx
64007f3e:	call   0x64007ed0
64007f43:	mov    DWORD PTR [esi],eax
64007f45:	mov    ecx,DWORD PTR [edi+0x8]
64007f48:	push   esi
64007f49:	push   ecx
64007f4a:	mov    ecx,ebx
64007f4c:	call   0x64007ed0
64007f51:	mov    DWORD PTR [esi+0x8],eax
64007f54:	mov    eax,DWORD PTR [ebp-0x14]
64007f57:	mov    ecx,DWORD PTR [ebp-0xc]
64007f5a:	mov    DWORD PTR fs:0x0,ecx
64007f61:	pop    ecx
64007f62:	pop    edi
64007f63:	pop    esi
64007f64:	pop    ebx
64007f65:	mov    esp,ebp
64007f67:	pop    ebp
64007f68:	ret    0x8
64007f6b:	mov    edx,DWORD PTR [ebp-0x14]
64007f6e:	mov    ecx,DWORD PTR [ebp-0x18]
64007f71:	push   edx
64007f72:	call   0x640087b0
64007f77:	push   0x0
64007f79:	push   0x0
64007f7b:	call   0x6401384b
64007f80:	int3   
64007f81:	int3   
64007f82:	int3   
64007f83:	int3   
64007f84:	int3   
64007f85:	int3   
64007f86:	int3   
64007f87:	int3   
64007f88:	int3   
64007f89:	int3   
64007f8a:	int3   
64007f8b:	int3   
64007f8c:	int3   
64007f8d:	int3   
64007f8e:	int3   
64007f8f:	int3   
64007f90:	mov    eax,DWORD PTR [ecx+0x8]
64007f93:	mov    edx,DWORD PTR [eax]
64007f95:	mov    DWORD PTR [ecx+0x8],edx
64007f98:	mov    edx,DWORD PTR [eax]
64007f9a:	cmp    BYTE PTR [edx+0x29],0x0
64007f9e:	jne    0x64007fa3
64007fa0:	mov    DWORD PTR [edx+0x4],ecx
64007fa3:	mov    edx,DWORD PTR [ecx+0x4]
64007fa6:	mov    DWORD PTR [eax+0x4],edx
64007fa9:	mov    edx,DWORD PTR [esp+0x4]
64007fad:	mov    edx,DWORD PTR [edx+0x4]
64007fb0:	cmp    ecx,DWORD PTR [edx+0x4]
64007fb3:	jne    0x64007fc0
64007fb5:	mov    DWORD PTR [edx+0x4],eax
64007fb8:	mov    DWORD PTR [eax],ecx
64007fba:	mov    DWORD PTR [ecx+0x4],eax
64007fbd:	ret    0x4
64007fc0:	mov    edx,DWORD PTR [ecx+0x4]
64007fc3:	cmp    ecx,DWORD PTR [edx]
64007fc5:	jne    0x64007fd1
64007fc7:	mov    DWORD PTR [edx],eax
64007fc9:	mov    DWORD PTR [eax],ecx
64007fcb:	mov    DWORD PTR [ecx+0x4],eax
64007fce:	ret    0x4
64007fd1:	mov    DWORD PTR [edx+0x8],eax
64007fd4:	mov    DWORD PTR [eax],ecx
64007fd6:	mov    DWORD PTR [ecx+0x4],eax
64007fd9:	ret    0x4
64007fdc:	int3   
64007fdd:	int3   
64007fde:	int3   
64007fdf:	int3   
64007fe0:	mov    ecx,DWORD PTR [eax+0x8]
64007fe3:	cmp    BYTE PTR [ecx+0x29],0x0
64007fe7:	jne    0x64007ffb
64007fe9:	lea    esp,[esp+0x0]
64007ff0:	mov    eax,ecx
64007ff2:	mov    ecx,DWORD PTR [eax+0x8]
64007ff5:	cmp    BYTE PTR [ecx+0x29],0x0
64007ff9:	je     0x64007ff0
64007ffb:	ret    
64007ffc:	int3   
64007ffd:	int3   
64007ffe:	int3   
64007fff:	int3   
64008000:	mov    eax,DWORD PTR [ecx]
64008002:	mov    edx,DWORD PTR [eax+0x8]
64008005:	mov    DWORD PTR [ecx],edx
64008007:	mov    edx,DWORD PTR [eax+0x8]
6400800a:	cmp    BYTE PTR [edx+0x29],0x0
6400800e:	jne    0x64008013
64008010:	mov    DWORD PTR [edx+0x4],ecx
64008013:	mov    edx,DWORD PTR [ecx+0x4]
64008016:	mov    DWORD PTR [eax+0x4],edx
64008019:	mov    edx,DWORD PTR [esp+0x4]
6400801d:	mov    edx,DWORD PTR [edx+0x4]
64008020:	cmp    ecx,DWORD PTR [edx+0x4]
64008023:	jne    0x64008031
64008025:	mov    DWORD PTR [edx+0x4],eax
64008028:	mov    DWORD PTR [eax+0x8],ecx
6400802b:	mov    DWORD PTR [ecx+0x4],eax
6400802e:	ret    0x4
64008031:	mov    edx,DWORD PTR [ecx+0x4]
64008034:	cmp    ecx,DWORD PTR [edx+0x8]
64008037:	jne    0x64008045
64008039:	mov    DWORD PTR [edx+0x8],eax
6400803c:	mov    DWORD PTR [eax+0x8],ecx
6400803f:	mov    DWORD PTR [ecx+0x4],eax
64008042:	ret    0x4
64008045:	mov    DWORD PTR [edx],eax
64008047:	mov    DWORD PTR [eax+0x8],ecx
6400804a:	mov    DWORD PTR [ecx+0x4],eax
6400804d:	ret    0x4
64008050:	push   0x2c
64008052:	call   0x640137e1
64008057:	add    esp,0x4
6400805a:	test   eax,eax
6400805c:	je     0x64008064
6400805e:	mov    DWORD PTR [eax],0x0
64008064:	lea    ecx,[eax+0x4]
64008067:	test   ecx,ecx
64008069:	je     0x64008071
6400806b:	mov    DWORD PTR [ecx],0x0
64008071:	lea    ecx,[eax+0x8]
64008074:	test   ecx,ecx
64008076:	je     0x6400807e
64008078:	mov    DWORD PTR [ecx],0x0
6400807e:	mov    BYTE PTR [eax+0x28],0x1
64008082:	mov    BYTE PTR [eax+0x29],0x0
64008086:	ret    
64008087:	int3   
64008088:	int3   
64008089:	int3   
6400808a:	int3   
6400808b:	int3   
6400808c:	int3   
6400808d:	int3   
6400808e:	int3   
6400808f:	int3   
64008090:	push   ebp
64008091:	mov    ebp,esp
64008093:	push   0xffffffff
64008095:	push   0x64023921
6400809a:	mov    eax,fs:0x0
640080a0:	push   eax
640080a1:	sub    esp,0xc
640080a4:	push   ebx
640080a5:	push   esi
640080a6:	push   edi
640080a7:	mov    eax,ds:0x6402f09c
640080ac:	xor    eax,ebp
640080ae:	push   eax
640080af:	lea    eax,[ebp-0xc]
640080b2:	mov    fs:0x0,eax
640080b8:	mov    DWORD PTR [ebp-0x10],esp
640080bb:	push   0x2c
640080bd:	call   0x640137e1
640080c2:	mov    esi,eax
640080c4:	xor    ebx,ebx
640080c6:	mov    DWORD PTR [ebp-0x4],ebx
640080c9:	add    esp,0x4
640080cc:	mov    DWORD PTR [ebp-0x14],esi
640080cf:	mov    DWORD PTR [ebp-0x18],esi
640080d2:	cmp    esi,ebx
640080d4:	mov    BYTE PTR [ebp-0x4],0x1
640080d8:	je     0x64008110
640080da:	mov    eax,DWORD PTR [ebp+0x8]
640080dd:	mov    ecx,DWORD PTR [ebp+0xc]
640080e0:	mov    edx,DWORD PTR [ebp+0x10]
640080e3:	mov    DWORD PTR [esi],eax
640080e5:	mov    eax,DWORD PTR [ebp+0x14]
640080e8:	mov    DWORD PTR [esi+0x4],ecx
640080eb:	push   0xffffffff
640080ed:	lea    ecx,[esi+0xc]
640080f0:	mov    DWORD PTR [esi+0x8],edx
640080f3:	push   ebx
640080f4:	mov    DWORD PTR [ecx+0x18],0xf
640080fb:	mov    DWORD PTR [ecx+0x14],ebx
640080fe:	push   eax
640080ff:	mov    BYTE PTR [ecx+0x4],bl
64008102:	call   0x64001780
64008107:	mov    cl,BYTE PTR [ebp+0x18]
6400810a:	mov    BYTE PTR [esi+0x28],cl
6400810d:	mov    BYTE PTR [esi+0x29],bl
64008110:	mov    eax,esi
64008112:	mov    ecx,DWORD PTR [ebp-0xc]
64008115:	mov    DWORD PTR fs:0x0,ecx
6400811c:	pop    ecx
6400811d:	pop    edi
6400811e:	pop    esi
6400811f:	pop    ebx
64008120:	mov    esp,ebp
64008122:	pop    ebp
64008123:	ret    0x14
64008126:	mov    edx,DWORD PTR [ebp-0x14]
64008129:	push   edx
6400812a:	call   0x64013402
6400812f:	add    esp,0x4
64008132:	xor    ebx,ebx
64008134:	push   ebx
64008135:	push   ebx
64008136:	call   0x6401384b
6400813b:	int3   
6400813c:	int3   
6400813d:	int3   
6400813e:	int3   
6400813f:	int3   
64008140:	push   ebp
64008141:	mov    ebp,esp
64008143:	and    esp,0xfffffff8
64008146:	push   0xffffffff
64008148:	push   0x64023d58
6400814d:	mov    eax,fs:0x0
64008153:	push   eax
64008154:	sub    esp,0x50
64008157:	push   ebx
64008158:	push   esi
64008159:	push   edi
6400815a:	mov    eax,ds:0x6402f09c
6400815f:	xor    eax,esp
64008161:	push   eax
64008162:	lea    eax,[esp+0x60]
64008166:	mov    fs:0x0,eax
6400816c:	mov    edi,ecx
6400816e:	xor    ebx,ebx
64008170:	cmp    DWORD PTR [edi+0x8],0x4924923
64008177:	jb     0x640081c2
64008179:	push   0x13
6400817b:	push   0x64029e60
64008180:	lea    ecx,[esp+0x20]
64008184:	mov    DWORD PTR [esp+0x38],0xf
6400818c:	mov    DWORD PTR [esp+0x34],ebx
64008190:	mov    BYTE PTR [esp+0x24],bl
64008194:	call   0x64001860
64008199:	lea    eax,[esp+0x18]
6400819d:	push   eax
6400819e:	lea    ecx,[esp+0x38]
640081a2:	mov    DWORD PTR [esp+0x6c],ebx
640081a6:	call   0x64002d00
640081ab:	push   0x6402c690
640081b0:	lea    ecx,[esp+0x38]
640081b4:	push   ecx
640081b5:	mov    DWORD PTR [esp+0x3c],0x6402631c
640081bd:	call   0x6401384b
640081c2:	mov    edx,DWORD PTR [ebp+0x14]
640081c5:	mov    eax,DWORD PTR [edi+0x4]
640081c8:	mov    esi,DWORD PTR [ebp+0x10]
640081cb:	push   ebx
640081cc:	push   edx
640081cd:	push   eax
640081ce:	push   esi
640081cf:	push   eax
640081d0:	call   0x64008a50
640081d5:	add    DWORD PTR [edi+0x8],0x1
640081d9:	mov    ecx,eax
640081db:	mov    eax,DWORD PTR [edi+0x4]
640081de:	cmp    esi,eax
640081e0:	mov    DWORD PTR [esp+0x14],ecx
640081e4:	jne    0x640081f6
640081e6:	mov    DWORD PTR [eax+0x4],ecx
640081e9:	mov    eax,DWORD PTR [edi+0x4]
640081ec:	mov    DWORD PTR [eax],ecx
640081ee:	mov    edx,DWORD PTR [edi+0x4]
640081f1:	mov    DWORD PTR [edx+0x8],ecx
640081f4:	jmp    0x64008216
640081f6:	cmp    BYTE PTR [ebp+0xc],bl
640081f9:	je     0x64008208
640081fb:	mov    DWORD PTR [esi],ecx
640081fd:	mov    eax,DWORD PTR [edi+0x4]
64008200:	cmp    esi,DWORD PTR [eax]
64008202:	jne    0x64008216
64008204:	mov    DWORD PTR [eax],ecx
64008206:	jmp    0x64008216
64008208:	mov    DWORD PTR [esi+0x8],ecx
6400820b:	mov    eax,DWORD PTR [edi+0x4]
6400820e:	cmp    esi,DWORD PTR [eax+0x8]
64008211:	jne    0x64008216
64008213:	mov    DWORD PTR [eax+0x8],ecx
64008216:	mov    edx,DWORD PTR [ecx+0x4]
64008219:	cmp    BYTE PTR [edx+0x44],bl
6400821c:	lea    eax,[ecx+0x4]
6400821f:	mov    esi,ecx
64008221:	jne    0x64008362
64008227:	mov    ecx,DWORD PTR [eax]
64008229:	mov    edx,DWORD PTR [ecx+0x4]
6400822c:	cmp    ecx,DWORD PTR [edx]
6400822e:	jne    0x640082d5
64008234:	mov    edx,DWORD PTR [edx+0x8]
64008237:	cmp    BYTE PTR [edx+0x44],bl
6400823a:	je     0x640082dc
64008240:	cmp    esi,DWORD PTR [ecx+0x8]
64008243:	jne    0x64008280
64008245:	mov    esi,ecx
64008247:	mov    ecx,DWORD PTR [esi+0x8]
6400824a:	mov    eax,DWORD PTR [ecx]
6400824c:	mov    DWORD PTR [esi+0x8],eax
6400824f:	mov    eax,DWORD PTR [ecx]
64008251:	cmp    BYTE PTR [eax+0x45],bl
64008254:	jne    0x64008259
64008256:	mov    DWORD PTR [eax+0x4],esi
64008259:	mov    edx,DWORD PTR [esi+0x4]
6400825c:	lea    eax,[esi+0x4]
6400825f:	mov    DWORD PTR [ecx+0x4],edx
64008262:	mov    edx,DWORD PTR [edi+0x4]
64008265:	cmp    esi,DWORD PTR [edx+0x4]
64008268:	jne    0x6400826f
6400826a:	mov    DWORD PTR [edx+0x4],ecx
6400826d:	jmp    0x6400827c
6400826f:	mov    edx,DWORD PTR [eax]
64008271:	cmp    esi,DWORD PTR [edx]
64008273:	jne    0x64008279
64008275:	mov    DWORD PTR [edx],ecx
64008277:	jmp    0x6400827c
64008279:	mov    DWORD PTR [edx+0x8],ecx
6400827c:	mov    DWORD PTR [ecx],esi
6400827e:	mov    DWORD PTR [eax],ecx
64008280:	mov    ecx,DWORD PTR [eax]
64008282:	mov    BYTE PTR [ecx+0x44],0x1
64008286:	mov    edx,DWORD PTR [eax]
64008288:	mov    ecx,DWORD PTR [edx+0x4]
6400828b:	mov    BYTE PTR [ecx+0x44],bl
6400828e:	mov    edx,DWORD PTR [eax]
64008290:	mov    eax,DWORD PTR [edx+0x4]
64008293:	mov    ecx,DWORD PTR [eax]
64008295:	mov    edx,DWORD PTR [ecx+0x8]
64008298:	mov    DWORD PTR [eax],edx
6400829a:	mov    edx,DWORD PTR [ecx+0x8]
6400829d:	cmp    BYTE PTR [edx+0x45],bl
640082a0:	jne    0x640082a5
640082a2:	mov    DWORD PTR [edx+0x4],eax
640082a5:	mov    edx,DWORD PTR [eax+0x4]
640082a8:	mov    DWORD PTR [ecx+0x4],edx
640082ab:	mov    edx,DWORD PTR [edi+0x4]
640082ae:	cmp    eax,DWORD PTR [edx+0x4]
640082b1:	jne    0x640082be
640082b3:	mov    DWORD PTR [edx+0x4],ecx
640082b6:	mov    DWORD PTR [ecx+0x8],eax
640082b9:	jmp    0x6400834c
640082be:	mov    edx,DWORD PTR [eax+0x4]
640082c1:	cmp    eax,DWORD PTR [edx+0x8]
640082c4:	jne    0x640082ce
640082c6:	mov    DWORD PTR [edx+0x8],ecx
640082c9:	mov    DWORD PTR [ecx+0x8],eax
640082cc:	jmp    0x6400834c
640082ce:	mov    DWORD PTR [edx],ecx
640082d0:	mov    DWORD PTR [ecx+0x8],eax
640082d3:	jmp    0x6400834c
640082d5:	mov    edx,DWORD PTR [edx]
640082d7:	cmp    BYTE PTR [edx+0x44],bl
640082da:	jne    0x640082f3
640082dc:	mov    BYTE PTR [ecx+0x44],0x1
640082e0:	mov    BYTE PTR [edx+0x44],0x1
640082e4:	mov    edx,DWORD PTR [eax]
640082e6:	mov    ecx,DWORD PTR [edx+0x4]
640082e9:	mov    BYTE PTR [ecx+0x44],bl
640082ec:	mov    edx,DWORD PTR [eax]
640082ee:	mov    esi,DWORD PTR [edx+0x4]
640082f1:	jmp    0x6400834f
640082f3:	cmp    esi,DWORD PTR [ecx]
640082f5:	jne    0x64008301
640082f7:	mov    esi,ecx
640082f9:	push   esi
640082fa:	mov    ecx,edi
640082fc:	call   0x64008c40
64008301:	mov    eax,DWORD PTR [esi+0x4]
64008304:	mov    BYTE PTR [eax+0x44],0x1
64008308:	mov    ecx,DWORD PTR [esi+0x4]
6400830b:	mov    edx,DWORD PTR [ecx+0x4]
6400830e:	mov    BYTE PTR [edx+0x44],bl
64008311:	mov    eax,DWORD PTR [esi+0x4]
64008314:	mov    eax,DWORD PTR [eax+0x4]
64008317:	mov    ecx,DWORD PTR [eax+0x8]
6400831a:	mov    edx,DWORD PTR [ecx]
6400831c:	mov    DWORD PTR [eax+0x8],edx
6400831f:	mov    edx,DWORD PTR [ecx]
64008321:	cmp    BYTE PTR [edx+0x45],bl
64008324:	jne    0x64008329
64008326:	mov    DWORD PTR [edx+0x4],eax
64008329:	mov    edx,DWORD PTR [eax+0x4]
6400832c:	mov    DWORD PTR [ecx+0x4],edx
6400832f:	mov    edx,DWORD PTR [edi+0x4]
64008332:	cmp    eax,DWORD PTR [edx+0x4]
64008335:	jne    0x6400833c
64008337:	mov    DWORD PTR [edx+0x4],ecx
6400833a:	jmp    0x6400834a
6400833c:	mov    edx,DWORD PTR [eax+0x4]
6400833f:	cmp    eax,DWORD PTR [edx]
64008341:	jne    0x64008347
64008343:	mov    DWORD PTR [edx],ecx
64008345:	jmp    0x6400834a
64008347:	mov    DWORD PTR [edx+0x8],ecx
6400834a:	mov    DWORD PTR [ecx],eax
6400834c:	mov    DWORD PTR [eax+0x4],ecx
6400834f:	mov    ecx,DWORD PTR [esi+0x4]
64008352:	cmp    BYTE PTR [ecx+0x44],bl
64008355:	lea    eax,[esi+0x4]
64008358:	je     0x64008227
6400835e:	mov    ecx,DWORD PTR [esp+0x14]
64008362:	mov    edx,DWORD PTR [edi+0x4]
64008365:	mov    eax,DWORD PTR [edx+0x4]
64008368:	mov    BYTE PTR [eax+0x44],0x1
6400836c:	mov    eax,DWORD PTR [ebp+0x8]
6400836f:	mov    DWORD PTR [eax+0x4],ecx
64008372:	mov    DWORD PTR [eax],edi
64008374:	mov    ecx,DWORD PTR [esp+0x60]
64008378:	mov    DWORD PTR fs:0x0,ecx
6400837f:	pop    ecx
64008380:	pop    edi
64008381:	pop    esi
64008382:	pop    ebx
64008383:	mov    esp,ebp
64008385:	pop    ebp
64008386:	ret    0x10
64008389:	int3   
6400838a:	int3   
6400838b:	int3   
6400838c:	int3   
6400838d:	int3   
6400838e:	int3   
6400838f:	int3   
64008390:	push   ebx
64008391:	mov    ebx,DWORD PTR [esp+0xc]
64008395:	push   ebp
64008396:	mov    ebp,DWORD PTR [esp+0xc]
6400839a:	cmp    DWORD PTR [ebp+0x14],ebx
6400839d:	push   esi
6400839e:	push   edi
6400839f:	mov    esi,ecx
640083a1:	jae    0x640083a8
640083a3:	call   0x640133be
640083a8:	mov    edi,DWORD PTR [ebp+0x14]
640083ab:	mov    eax,DWORD PTR [esp+0x1c]
640083af:	sub    edi,ebx
640083b1:	cmp    eax,edi
640083b3:	jae    0x640083b7
640083b5:	mov    edi,eax
640083b7:	cmp    esi,ebp
640083b9:	jne    0x640083da
640083bb:	push   0xffffffff
640083bd:	add    edi,ebx
640083bf:	push   edi
640083c0:	mov    ecx,esi
640083c2:	call   0x64008af0
640083c7:	push   ebx
640083c8:	push   0x0
640083ca:	mov    ecx,esi
640083cc:	call   0x64008af0
640083d1:	pop    edi
640083d2:	mov    eax,esi
640083d4:	pop    esi
640083d5:	pop    ebp
640083d6:	pop    ebx
640083d7:	ret    0xc
640083da:	cmp    edi,0x7ffffffe
640083e0:	jbe    0x640083e7
640083e2:	call   0x6401337f
640083e7:	mov    eax,DWORD PTR [esi+0x18]
640083ea:	cmp    eax,edi
640083ec:	jae    0x64008409
640083ee:	mov    eax,DWORD PTR [esi+0x14]
640083f1:	push   eax
640083f2:	push   edi
640083f3:	mov    ecx,esi
640083f5:	call   0x64008e50
640083fa:	test   edi,edi
640083fc:	jbe    0x64008476
640083fe:	cmp    DWORD PTR [ebp+0x18],0x8
64008402:	jb     0x64008435
64008404:	mov    ecx,DWORD PTR [ebp+0x4]
64008407:	jmp    0x64008438
64008409:	test   edi,edi
6400840b:	jne    0x640083fc
6400840d:	cmp    eax,0x8
64008410:	mov    DWORD PTR [esi+0x14],edi
64008413:	jb     0x64008424
64008415:	mov    eax,DWORD PTR [esi+0x4]
64008418:	mov    WORD PTR [eax],di
6400841b:	pop    edi
6400841c:	mov    eax,esi
6400841e:	pop    esi
6400841f:	pop    ebp
64008420:	pop    ebx
64008421:	ret    0xc
64008424:	lea    eax,[esi+0x4]
64008427:	pop    edi
64008428:	mov    WORD PTR [eax],0x0
6400842d:	mov    eax,esi
6400842f:	pop    esi
64008430:	pop    ebp
64008431:	pop    ebx
64008432:	ret    0xc
64008435:	lea    ecx,[ebp+0x4]
64008438:	cmp    DWORD PTR [esi+0x18],0x8
6400843c:	lea    ebp,[esi+0x4]
6400843f:	jb     0x64008446
64008441:	mov    eax,DWORD PTR [ebp+0x0]
64008444:	jmp    0x64008448
64008446:	mov    eax,ebp
64008448:	mov    edx,DWORD PTR [esp+0x18]
6400844c:	lea    ecx,[ecx+edx*2]
6400844f:	lea    ebx,[edi+edi*1]
64008452:	push   ebx
64008453:	push   ecx
64008454:	mov    ecx,DWORD PTR [esi+0x18]
64008457:	lea    edx,[ecx+ecx*1]
6400845a:	push   edx
6400845b:	push   eax
6400845c:	call   0x640135b8
64008461:	add    esp,0x10
64008464:	cmp    DWORD PTR [esi+0x18],0x8
64008468:	mov    DWORD PTR [esi+0x14],edi
6400846b:	jb     0x64008470
6400846d:	mov    ebp,DWORD PTR [ebp+0x0]
64008470:	mov    WORD PTR [ebx+ebp*1],0x0
64008476:	pop    edi
64008477:	mov    eax,esi
64008479:	pop    esi
6400847a:	pop    ebp
6400847b:	pop    ebx
6400847c:	ret    0xc
6400847f:	int3   
64008480:	push   ebp
64008481:	push   esi
64008482:	mov    esi,ecx
64008484:	mov    edx,DWORD PTR [esi+0x18]
64008487:	cmp    edx,0x8
6400848a:	push   edi
6400848b:	lea    ebp,[esi+0x4]
6400848e:	jb     0x64008495
64008490:	mov    ecx,DWORD PTR [ebp+0x0]
64008493:	jmp    0x64008497
64008495:	mov    ecx,ebp
64008497:	mov    eax,DWORD PTR [esp+0x10]
6400849b:	cmp    eax,ecx
6400849d:	jb     0x640084d5
6400849f:	cmp    edx,0x8
640084a2:	jb     0x640084a9
640084a4:	mov    ecx,DWORD PTR [ebp+0x0]
640084a7:	jmp    0x640084ab
640084a9:	mov    ecx,ebp
640084ab:	mov    edi,DWORD PTR [esi+0x14]
640084ae:	lea    ecx,[ecx+edi*2]
640084b1:	cmp    ecx,eax
640084b3:	jbe    0x640084d5
640084b5:	cmp    edx,0x8
640084b8:	jb     0x640084bd
640084ba:	mov    ebp,DWORD PTR [ebp+0x0]
640084bd:	mov    edx,DWORD PTR [esp+0x14]
640084c1:	sub    eax,ebp
640084c3:	push   edx
640084c4:	sar    eax,1
640084c6:	push   eax
640084c7:	push   esi
640084c8:	mov    ecx,esi
640084ca:	call   0x64008390
640084cf:	pop    edi
640084d0:	pop    esi
640084d1:	pop    ebp
640084d2:	ret    0x8
640084d5:	mov    edi,DWORD PTR [esp+0x14]
640084d9:	cmp    edi,0x7ffffffe
640084df:	jbe    0x640084e6
640084e1:	call   0x6401337f
640084e6:	mov    eax,DWORD PTR [esi+0x18]
640084e9:	cmp    eax,edi
640084eb:	jae    0x6400850a
640084ed:	mov    eax,DWORD PTR [esi+0x14]
640084f0:	push   eax
640084f1:	push   edi
640084f2:	mov    ecx,esi
640084f4:	call   0x64008e50
640084f9:	test   edi,edi
640084fb:	jbe    0x64008552
640084fd:	mov    ecx,DWORD PTR [esi+0x18]
64008500:	cmp    ecx,0x8
64008503:	jb     0x64008527
64008505:	mov    eax,DWORD PTR [ebp+0x0]
64008508:	jmp    0x64008529
6400850a:	test   edi,edi
6400850c:	jne    0x640084fb
6400850e:	cmp    eax,0x8
64008511:	mov    DWORD PTR [esi+0x14],edi
64008514:	jb     0x64008519
64008516:	mov    ebp,DWORD PTR [ebp+0x0]
64008519:	pop    edi
6400851a:	mov    eax,esi
6400851c:	pop    esi
6400851d:	mov    WORD PTR [ebp+0x0],0x0
64008523:	pop    ebp
64008524:	ret    0x8
64008527:	mov    eax,ebp
64008529:	mov    edx,DWORD PTR [esp+0x10]
6400852d:	push   ebx
6400852e:	lea    ebx,[edi+edi*1]
64008531:	push   ebx
64008532:	push   edx
64008533:	add    ecx,ecx
64008535:	push   ecx
64008536:	push   eax
64008537:	call   0x640135b8
6400853c:	add    esp,0x10
6400853f:	cmp    DWORD PTR [esi+0x18],0x8
64008543:	mov    DWORD PTR [esi+0x14],edi
64008546:	jb     0x6400854b
64008548:	mov    ebp,DWORD PTR [ebp+0x0]
6400854b:	mov    WORD PTR [ebx+ebp*1],0x0
64008551:	pop    ebx
64008552:	pop    edi
64008553:	mov    eax,esi
64008555:	pop    esi
64008556:	pop    ebp
64008557:	ret    0x8
6400855a:	int3   
6400855b:	int3   
6400855c:	int3   
6400855d:	int3   
6400855e:	int3   
6400855f:	int3   
64008560:	push   ebp
64008561:	mov    ebp,esp
64008563:	and    esp,0xfffffff8
64008566:	push   0xffffffff
64008568:	push   0x64023d28
6400856d:	mov    eax,fs:0x0
64008573:	push   eax
64008574:	sub    esp,0x50
64008577:	push   ebx
64008578:	push   esi
64008579:	push   edi
6400857a:	mov    eax,ds:0x6402f09c
6400857f:	xor    eax,esp
64008581:	push   eax
64008582:	lea    eax,[esp+0x60]
64008586:	mov    fs:0x0,eax
6400858c:	mov    edi,ecx
6400858e:	xor    ebx,ebx
64008590:	cmp    DWORD PTR [edi+0x8],0x4924923
64008597:	jb     0x640085e2
64008599:	push   0x13
6400859b:	push   0x64029e60
640085a0:	lea    ecx,[esp+0x20]
640085a4:	mov    DWORD PTR [esp+0x38],0xf
640085ac:	mov    DWORD PTR [esp+0x34],ebx
640085b0:	mov    BYTE PTR [esp+0x24],bl
640085b4:	call   0x64001860
640085b9:	lea    eax,[esp+0x18]
640085bd:	push   eax
640085be:	lea    ecx,[esp+0x38]
640085c2:	mov    DWORD PTR [esp+0x6c],ebx
640085c6:	call   0x64002d00
640085cb:	push   0x6402c690
640085d0:	lea    ecx,[esp+0x38]
640085d4:	push   ecx
640085d5:	mov    DWORD PTR [esp+0x3c],0x6402631c
640085dd:	call   0x6401384b
640085e2:	mov    edx,DWORD PTR [ebp+0x14]
640085e5:	mov    eax,DWORD PTR [edi+0x4]
640085e8:	mov    esi,DWORD PTR [ebp+0x10]
640085eb:	push   ebx
640085ec:	push   edx
640085ed:	push   eax
640085ee:	push   esi
640085ef:	push   eax
640085f0:	call   0x64008ca0
640085f5:	add    DWORD PTR [edi+0x8],0x1
640085f9:	mov    ecx,eax
640085fb:	mov    eax,DWORD PTR [edi+0x4]
640085fe:	cmp    esi,eax
64008600:	mov    DWORD PTR [esp+0x14],ecx
64008604:	jne    0x64008616
64008606:	mov    DWORD PTR [eax+0x4],ecx
64008609:	mov    eax,DWORD PTR [edi+0x4]
6400860c:	mov    DWORD PTR [eax],ecx
6400860e:	mov    edx,DWORD PTR [edi+0x4]
64008611:	mov    DWORD PTR [edx+0x8],ecx
64008614:	jmp    0x64008636
64008616:	cmp    BYTE PTR [ebp+0xc],bl
64008619:	je     0x64008628
6400861b:	mov    DWORD PTR [esi],ecx
6400861d:	mov    eax,DWORD PTR [edi+0x4]
64008620:	cmp    esi,DWORD PTR [eax]
64008622:	jne    0x64008636
64008624:	mov    DWORD PTR [eax],ecx
64008626:	jmp    0x64008636
64008628:	mov    DWORD PTR [esi+0x8],ecx
6400862b:	mov    eax,DWORD PTR [edi+0x4]
6400862e:	cmp    esi,DWORD PTR [eax+0x8]
64008631:	jne    0x64008636
64008633:	mov    DWORD PTR [eax+0x8],ecx
64008636:	mov    edx,DWORD PTR [ecx+0x4]
64008639:	cmp    BYTE PTR [edx+0x44],bl
6400863c:	lea    eax,[ecx+0x4]
6400863f:	mov    esi,ecx
64008641:	jne    0x64008782
64008647:	mov    ecx,DWORD PTR [eax]
64008649:	mov    edx,DWORD PTR [ecx+0x4]
6400864c:	cmp    ecx,DWORD PTR [edx]
6400864e:	jne    0x640086f5
64008654:	mov    edx,DWORD PTR [edx+0x8]
64008657:	cmp    BYTE PTR [edx+0x44],bl
6400865a:	je     0x640086fc
64008660:	cmp    esi,DWORD PTR [ecx+0x8]
64008663:	jne    0x640086a0
64008665:	mov    esi,ecx
64008667:	mov    ecx,DWORD PTR [esi+0x8]
6400866a:	mov    eax,DWORD PTR [ecx]
6400866c:	mov    DWORD PTR [esi+0x8],eax
6400866f:	mov    eax,DWORD PTR [ecx]
64008671:	cmp    BYTE PTR [eax+0x45],bl
64008674:	jne    0x64008679
64008676:	mov    DWORD PTR [eax+0x4],esi
64008679:	mov    edx,DWORD PTR [esi+0x4]
6400867c:	lea    eax,[esi+0x4]
6400867f:	mov    DWORD PTR [ecx+0x4],edx
64008682:	mov    edx,DWORD PTR [edi+0x4]
64008685:	cmp    esi,DWORD PTR [edx+0x4]
64008688:	jne    0x6400868f
6400868a:	mov    DWORD PTR [edx+0x4],ecx
6400868d:	jmp    0x6400869c
6400868f:	mov    edx,DWORD PTR [eax]
64008691:	cmp    esi,DWORD PTR [edx]
64008693:	jne    0x64008699
64008695:	mov    DWORD PTR [edx],ecx
64008697:	jmp    0x6400869c
64008699:	mov    DWORD PTR [edx+0x8],ecx
6400869c:	mov    DWORD PTR [ecx],esi
6400869e:	mov    DWORD PTR [eax],ecx
640086a0:	mov    ecx,DWORD PTR [eax]
640086a2:	mov    BYTE PTR [ecx+0x44],0x1
640086a6:	mov    edx,DWORD PTR [eax]
640086a8:	mov    ecx,DWORD PTR [edx+0x4]
640086ab:	mov    BYTE PTR [ecx+0x44],bl
640086ae:	mov    edx,DWORD PTR [eax]
640086b0:	mov    eax,DWORD PTR [edx+0x4]
640086b3:	mov    ecx,DWORD PTR [eax]
640086b5:	mov    edx,DWORD PTR [ecx+0x8]
640086b8:	mov    DWORD PTR [eax],edx
640086ba:	mov    edx,DWORD PTR [ecx+0x8]
640086bd:	cmp    BYTE PTR [edx+0x45],bl
640086c0:	jne    0x640086c5
640086c2:	mov    DWORD PTR [edx+0x4],eax
640086c5:	mov    edx,DWORD PTR [eax+0x4]
640086c8:	mov    DWORD PTR [ecx+0x4],edx
640086cb:	mov    edx,DWORD PTR [edi+0x4]
640086ce:	cmp    eax,DWORD PTR [edx+0x4]
640086d1:	jne    0x640086de
640086d3:	mov    DWORD PTR [edx+0x4],ecx
640086d6:	mov    DWORD PTR [ecx+0x8],eax
640086d9:	jmp    0x6400876c
640086de:	mov    edx,DWORD PTR [eax+0x4]
640086e1:	cmp    eax,DWORD PTR [edx+0x8]
640086e4:	jne    0x640086ee
640086e6:	mov    DWORD PTR [edx+0x8],ecx
640086e9:	mov    DWORD PTR [ecx+0x8],eax
640086ec:	jmp    0x6400876c
640086ee:	mov    DWORD PTR [edx],ecx
640086f0:	mov    DWORD PTR [ecx+0x8],eax
640086f3:	jmp    0x6400876c
640086f5:	mov    edx,DWORD PTR [edx]
640086f7:	cmp    BYTE PTR [edx+0x44],bl
640086fa:	jne    0x64008713
640086fc:	mov    BYTE PTR [ecx+0x44],0x1
64008700:	mov    BYTE PTR [edx+0x44],0x1
64008704:	mov    edx,DWORD PTR [eax]
64008706:	mov    ecx,DWORD PTR [edx+0x4]
64008709:	mov    BYTE PTR [ecx+0x44],bl
6400870c:	mov    edx,DWORD PTR [eax]
6400870e:	mov    esi,DWORD PTR [edx+0x4]
64008711:	jmp    0x6400876f
64008713:	cmp    esi,DWORD PTR [ecx]
64008715:	jne    0x64008721
64008717:	mov    esi,ecx
64008719:	push   esi
6400871a:	mov    ecx,edi
6400871c:	call   0x64008c40
64008721:	mov    eax,DWORD PTR [esi+0x4]
64008724:	mov    BYTE PTR [eax+0x44],0x1
64008728:	mov    ecx,DWORD PTR [esi+0x4]
6400872b:	mov    edx,DWORD PTR [ecx+0x4]
6400872e:	mov    BYTE PTR [edx+0x44],bl
64008731:	mov    eax,DWORD PTR [esi+0x4]
64008734:	mov    eax,DWORD PTR [eax+0x4]
64008737:	mov    ecx,DWORD PTR [eax+0x8]
6400873a:	mov    edx,DWORD PTR [ecx]
6400873c:	mov    DWORD PTR [eax+0x8],edx
6400873f:	mov    edx,DWORD PTR [ecx]
64008741:	cmp    BYTE PTR [edx+0x45],bl
64008744:	jne    0x64008749
64008746:	mov    DWORD PTR [edx+0x4],eax
64008749:	mov    edx,DWORD PTR [eax+0x4]
6400874c:	mov    DWORD PTR [ecx+0x4],edx
6400874f:	mov    edx,DWORD PTR [edi+0x4]
64008752:	cmp    eax,DWORD PTR [edx+0x4]
64008755:	jne    0x6400875c
64008757:	mov    DWORD PTR [edx+0x4],ecx
6400875a:	jmp    0x6400876a
6400875c:	mov    edx,DWORD PTR [eax+0x4]
6400875f:	cmp    eax,DWORD PTR [edx]
64008761:	jne    0x64008767
64008763:	mov    DWORD PTR [edx],ecx
64008765:	jmp    0x6400876a
64008767:	mov    DWORD PTR [edx+0x8],ecx
6400876a:	mov    DWORD PTR [ecx],eax
6400876c:	mov    DWORD PTR [eax+0x4],ecx
6400876f:	mov    ecx,DWORD PTR [esi+0x4]
64008772:	cmp    BYTE PTR [ecx+0x44],bl
64008775:	lea    eax,[esi+0x4]
64008778:	je     0x64008647
6400877e:	mov    ecx,DWORD PTR [esp+0x14]
64008782:	mov    edx,DWORD PTR [edi+0x4]
64008785:	mov    eax,DWORD PTR [edx+0x4]
64008788:	mov    BYTE PTR [eax+0x44],0x1
6400878c:	mov    eax,DWORD PTR [ebp+0x8]
6400878f:	mov    DWORD PTR [eax+0x4],ecx
64008792:	mov    DWORD PTR [eax],edi
64008794:	mov    ecx,DWORD PTR [esp+0x60]
64008798:	mov    DWORD PTR fs:0x0,ecx
6400879f:	pop    ecx
640087a0:	pop    edi
640087a1:	pop    esi
640087a2:	pop    ebx
640087a3:	mov    esp,ebp
640087a5:	pop    ebp
640087a6:	ret    0x10
640087a9:	int3   
640087aa:	int3   
640087ab:	int3   
640087ac:	int3   
640087ad:	int3   
640087ae:	int3   
640087af:	int3   
640087b0:	push   ebx
640087b1:	push   ebp
640087b2:	push   esi
640087b3:	mov    esi,DWORD PTR [esp+0x10]
640087b7:	xor    ebx,ebx
640087b9:	cmp    BYTE PTR [esi+0x29],bl
640087bc:	push   edi
640087bd:	mov    ebp,ecx
640087bf:	mov    edi,esi
640087c1:	jne    0x640087ff
640087c3:	mov    eax,DWORD PTR [edi+0x8]
640087c6:	push   eax
640087c7:	mov    ecx,ebp
640087c9:	call   0x640087b0
640087ce:	cmp    DWORD PTR [esi+0x24],0x10
640087d2:	mov    edi,DWORD PTR [edi]
640087d4:	jb     0x640087e2
640087d6:	mov    ecx,DWORD PTR [esi+0x10]
640087d9:	push   ecx
640087da:	call   0x64013402
640087df:	add    esp,0x4
640087e2:	mov    DWORD PTR [esi+0x24],0xf
640087e9:	mov    DWORD PTR [esi+0x20],ebx
640087ec:	push   esi
640087ed:	mov    BYTE PTR [esi+0x10],bl
640087f0:	call   0x64013402
640087f5:	add    esp,0x4
640087f8:	cmp    BYTE PTR [edi+0x29],bl
640087fb:	mov    esi,edi
640087fd:	je     0x640087c3
640087ff:	pop    edi
64008800:	pop    esi
64008801:	pop    ebp
64008802:	pop    ebx
64008803:	ret    0x4
64008806:	int3   
64008807:	int3   
64008808:	int3   
64008809:	int3   
6400880a:	int3   
6400880b:	int3   
6400880c:	int3   
6400880d:	int3   
6400880e:	int3   
6400880f:	int3   
64008810:	sub    esp,0x8
64008813:	mov    eax,DWORD PTR [eax+0x4]
64008816:	push   esi
64008817:	mov    esi,DWORD PTR [eax+0x4]
6400881a:	cmp    BYTE PTR [esi+0x29],0x0
6400881e:	mov    DWORD PTR [esp+0x4],eax
64008822:	jne    0x64008895
64008824:	mov    edx,DWORD PTR [ecx+0x18]
64008827:	push   ebx
64008828:	mov    ebx,DWORD PTR [ecx+0x14]
6400882b:	push   ebp
6400882c:	push   edi
6400882d:	mov    DWORD PTR [esp+0x14],edx
64008831:	lea    ebp,[ecx+0x4]
64008834:	cmp    DWORD PTR [esp+0x14],0x10
64008839:	jb     0x64008840
6400883b:	mov    edx,DWORD PTR [ebp+0x0]
6400883e:	jmp    0x64008842
64008840:	mov    edx,ebp
64008842:	mov    edi,DWORD PTR [esi+0x20]
64008845:	mov    eax,edi
64008847:	cmp    eax,edi
64008849:	jae    0x6400884b
6400884b:	cmp    edi,ebx
6400884d:	mov    ecx,edi
6400884f:	jb     0x64008853
64008851:	mov    ecx,ebx
64008853:	cmp    DWORD PTR [esi+0x24],0x10
64008857:	jb     0x6400885e
64008859:	mov    eax,DWORD PTR [esi+0x10]
6400885c:	jmp    0x64008861
6400885e:	lea    eax,[esi+0x10]
64008861:	push   ecx
64008862:	push   edx
64008863:	push   eax
64008864:	call   0x64002c70
64008869:	add    esp,0xc
6400886c:	test   eax,eax
6400886e:	jne    0x6400887b
64008870:	cmp    edi,ebx
64008872:	jb     0x6400887d
64008874:	cmp    edi,ebx
64008876:	setne  al
64008879:	test   eax,eax
6400887b:	jge    0x64008882
6400887d:	mov    esi,DWORD PTR [esi+0x8]
64008880:	jmp    0x64008888
64008882:	mov    DWORD PTR [esp+0x10],esi
64008886:	mov    esi,DWORD PTR [esi]
64008888:	cmp    BYTE PTR [esi+0x29],0x0
6400888c:	je     0x64008834
6400888e:	mov    eax,DWORD PTR [esp+0x10]
64008892:	pop    edi
64008893:	pop    ebp
64008894:	pop    ebx
64008895:	pop    esi
64008896:	add    esp,0x8
64008899:	ret    
6400889a:	int3   
6400889b:	int3   
6400889c:	int3   
6400889d:	int3   
6400889e:	int3   
6400889f:	int3   
640088a0:	sub    esp,0x10
640088a3:	mov    ecx,DWORD PTR [ecx+0x4]
640088a6:	push   edi
640088a7:	mov    edi,DWORD PTR [ecx+0x4]
640088aa:	cmp    BYTE PTR [edi+0x29],0x0
640088ae:	mov    DWORD PTR [esp+0x8],ecx
640088b2:	jne    0x64008931
640088b4:	mov    edx,DWORD PTR [eax+0x14]
640088b7:	mov    ecx,DWORD PTR [eax+0x18]
640088ba:	push   ebx
640088bb:	push   ebp
640088bc:	add    eax,0x4
640088bf:	push   esi
640088c0:	mov    ebp,edx
640088c2:	mov    DWORD PTR [esp+0x1c],ecx
640088c6:	mov    DWORD PTR [esp+0x10],eax
640088ca:	lea    ebx,[ebx+0x0]
640088d0:	cmp    DWORD PTR [edi+0x24],0x10
640088d4:	mov    ebx,DWORD PTR [edi+0x20]
640088d7:	jb     0x640088de
640088d9:	mov    edx,DWORD PTR [edi+0x10]
640088dc:	jmp    0x640088e1
640088de:	lea    edx,[edi+0x10]
640088e1:	mov    esi,ebp
640088e3:	cmp    esi,ebx
640088e5:	mov    ecx,esi
640088e7:	jb     0x640088eb
640088e9:	mov    ecx,ebx
640088eb:	cmp    DWORD PTR [esp+0x1c],0x10
640088f0:	mov    eax,DWORD PTR [esp+0x10]
640088f4:	jb     0x640088f8
640088f6:	mov    eax,DWORD PTR [eax]
640088f8:	push   ecx
640088f9:	push   edx
640088fa:	push   eax
640088fb:	call   0x64002c70
64008900:	add    esp,0xc
64008903:	test   eax,eax
64008905:	jne    0x64008912
64008907:	cmp    esi,ebx
64008909:	jb     0x64008914
6400890b:	cmp    esi,ebx
6400890d:	setne  al
64008910:	test   eax,eax
64008912:	jge    0x6400891c
64008914:	mov    DWORD PTR [esp+0x14],edi
64008918:	mov    edi,DWORD PTR [edi]
6400891a:	jmp    0x6400891f
6400891c:	mov    edi,DWORD PTR [edi+0x8]
6400891f:	cmp    BYTE PTR [edi+0x29],0x0
64008923:	je     0x640088d0
64008925:	mov    eax,DWORD PTR [esp+0x14]
64008929:	pop    esi
6400892a:	pop    ebp
6400892b:	pop    ebx
6400892c:	pop    edi
6400892d:	add    esp,0x10
64008930:	ret    
64008931:	mov    eax,ecx
64008933:	pop    edi
64008934:	add    esp,0x10
64008937:	ret    
64008938:	int3   
64008939:	int3   
6400893a:	int3   
6400893b:	int3   
6400893c:	int3   
6400893d:	int3   
6400893e:	int3   
6400893f:	int3   
64008940:	cmp    DWORD PTR [esi],0x0
64008943:	jne    0x6400894a
64008945:	call   0x640137b8
6400894a:	mov    eax,DWORD PTR [esi+0x4]
6400894d:	cmp    BYTE PTR [eax+0x29],0x0
64008951:	je     0x64008964
64008953:	mov    eax,DWORD PTR [eax+0x8]
64008956:	mov    DWORD PTR [esi+0x4],eax
64008959:	cmp    BYTE PTR [eax+0x29],0x0
6400895d:	je     0x640089b6
6400895f:	jmp    0x640137b8
64008964:	mov    ecx,DWORD PTR [eax]
64008966:	cmp    BYTE PTR [ecx+0x29],0x0
6400896a:	jne    0x64008984
6400896c:	mov    eax,DWORD PTR [ecx+0x8]
6400896f:	cmp    BYTE PTR [eax+0x29],0x0
64008973:	jne    0x64008980
64008975:	mov    ecx,eax
64008977:	mov    eax,DWORD PTR [ecx+0x8]
6400897a:	cmp    BYTE PTR [eax+0x29],0x0
6400897e:	je     0x64008975
64008980:	mov    DWORD PTR [esi+0x4],ecx
64008983:	ret    
64008984:	mov    eax,DWORD PTR [eax+0x4]
64008987:	cmp    BYTE PTR [eax+0x29],0x0
6400898b:	jne    0x640089a5
6400898d:	lea    ecx,[ecx+0x0]
64008990:	mov    ecx,DWORD PTR [esi+0x4]
64008993:	cmp    ecx,DWORD PTR [eax]
64008995:	jne    0x640089a5
64008997:	mov    DWORD PTR [esi+0x4],eax
6400899a:	mov    edx,eax
6400899c:	mov    eax,DWORD PTR [edx+0x4]
6400899f:	cmp    BYTE PTR [eax+0x29],0x0
640089a3:	je     0x64008990
640089a5:	mov    ecx,DWORD PTR [esi+0x4]
640089a8:	cmp    BYTE PTR [ecx+0x29],0x0
640089ac:	je     0x640089b3
640089ae:	jmp    0x640137b8
640089b3:	mov    DWORD PTR [esi+0x4],eax
640089b6:	ret    
640089b7:	int3   
640089b8:	int3   
640089b9:	int3   
640089ba:	int3   
640089bb:	int3   
640089bc:	int3   
640089bd:	int3   
640089be:	int3   
640089bf:	int3   
640089c0:	push   ecx
640089c1:	mov    eax,DWORD PTR [ecx+0x4]
640089c4:	push   esi
640089c5:	mov    esi,DWORD PTR [eax+0x4]
640089c8:	cmp    BYTE PTR [esi+0x45],0x0
640089cc:	mov    DWORD PTR [esp+0x4],eax
640089d0:	jne    0x64008a47
640089d2:	mov    eax,DWORD PTR [esp+0xc]
640089d6:	mov    ecx,DWORD PTR [eax+0x18]
640089d9:	push   ebx
640089da:	mov    ebx,DWORD PTR [eax+0x14]
640089dd:	push   ebp
640089de:	push   edi
640089df:	mov    DWORD PTR [esp+0x18],ecx
640089e3:	lea    ebp,[eax+0x4]
640089e6:	cmp    DWORD PTR [esp+0x18],0x10
640089eb:	jb     0x640089f2
640089ed:	mov    edx,DWORD PTR [ebp+0x0]
640089f0:	jmp    0x640089f4
640089f2:	mov    edx,ebp
640089f4:	mov    edi,DWORD PTR [esi+0x20]
640089f7:	mov    eax,edi
640089f9:	cmp    eax,edi
640089fb:	jae    0x640089fd
640089fd:	cmp    edi,ebx
640089ff:	mov    ecx,edi
64008a01:	jb     0x64008a05
64008a03:	mov    ecx,ebx
64008a05:	cmp    DWORD PTR [esi+0x24],0x10
64008a09:	jb     0x64008a10
64008a0b:	mov    eax,DWORD PTR [esi+0x10]
64008a0e:	jmp    0x64008a13
64008a10:	lea    eax,[esi+0x10]
64008a13:	push   ecx
64008a14:	push   edx
64008a15:	push   eax
64008a16:	call   0x64002c70
64008a1b:	add    esp,0xc
64008a1e:	test   eax,eax
64008a20:	jne    0x64008a2d
64008a22:	cmp    edi,ebx
64008a24:	jb     0x64008a2f
64008a26:	cmp    edi,ebx
64008a28:	setne  al
64008a2b:	test   eax,eax
64008a2d:	jge    0x64008a34
64008a2f:	mov    esi,DWORD PTR [esi+0x8]
64008a32:	jmp    0x64008a3a
64008a34:	mov    DWORD PTR [esp+0x10],esi
64008a38:	mov    esi,DWORD PTR [esi]
64008a3a:	cmp    BYTE PTR [esi+0x45],0x0
64008a3e:	je     0x640089e6
64008a40:	mov    eax,DWORD PTR [esp+0x10]
64008a44:	pop    edi
64008a45:	pop    ebp
64008a46:	pop    ebx
64008a47:	pop    esi
64008a48:	pop    ecx
64008a49:	ret    0x4
64008a4c:	int3   
64008a4d:	int3   
64008a4e:	int3   
64008a4f:	int3   
64008a50:	push   ebp
64008a51:	mov    ebp,esp
64008a53:	push   0xffffffff
64008a55:	push   0x640238f1
64008a5a:	mov    eax,fs:0x0
64008a60:	push   eax
64008a61:	sub    esp,0xc
64008a64:	push   ebx
64008a65:	push   esi
64008a66:	push   edi
64008a67:	mov    eax,ds:0x6402f09c
64008a6c:	xor    eax,ebp
64008a6e:	push   eax
64008a6f:	lea    eax,[ebp-0xc]
64008a72:	mov    fs:0x0,eax
64008a78:	mov    DWORD PTR [ebp-0x10],esp
64008a7b:	push   0x48
64008a7d:	call   0x640137e1
64008a82:	mov    esi,eax
64008a84:	mov    DWORD PTR [ebp-0x4],0x0
64008a8b:	add    esp,0x4
64008a8e:	mov    DWORD PTR [ebp-0x14],esi
64008a91:	mov    DWORD PTR [ebp-0x18],esi
64008a94:	test   esi,esi
64008a96:	mov    BYTE PTR [ebp-0x4],0x1
64008a9a:	je     0x64008ac3
64008a9c:	mov    eax,DWORD PTR [ebp+0x8]
64008a9f:	mov    ecx,DWORD PTR [ebp+0xc]
64008aa2:	mov    edx,DWORD PTR [ebp+0x10]
64008aa5:	mov    DWORD PTR [esi],eax
64008aa7:	mov    eax,DWORD PTR [ebp+0x14]
64008aaa:	mov    DWORD PTR [esi+0x4],ecx
64008aad:	push   eax
64008aae:	lea    ecx,[esi+0xc]
64008ab1:	mov    DWORD PTR [esi+0x8],edx
64008ab4:	call   0x64009140
64008ab9:	mov    cl,BYTE PTR [ebp+0x18]
64008abc:	mov    BYTE PTR [esi+0x44],cl
64008abf:	mov    BYTE PTR [esi+0x45],0x0
64008ac3:	mov    eax,esi
64008ac5:	mov    ecx,DWORD PTR [ebp-0xc]
64008ac8:	mov    DWORD PTR fs:0x0,ecx
64008acf:	pop    ecx
64008ad0:	pop    edi
64008ad1:	pop    esi
64008ad2:	pop    ebx
64008ad3:	mov    esp,ebp
64008ad5:	pop    ebp
64008ad6:	ret    0x14
64008ad9:	mov    edx,DWORD PTR [ebp-0x14]
64008adc:	push   edx
64008add:	call   0x64013402
64008ae2:	add    esp,0x4
64008ae5:	push   0x0
64008ae7:	push   0x0
64008ae9:	call   0x6401384b
64008aee:	int3   
64008aef:	int3   
64008af0:	push   ebx
64008af1:	mov    ebx,DWORD PTR [esp+0x8]
64008af5:	push   esi
64008af6:	mov    esi,ecx
64008af8:	cmp    DWORD PTR [esi+0x14],ebx
64008afb:	push   edi
64008afc:	jae    0x64008b03
64008afe:	call   0x640133be
64008b03:	mov    eax,DWORD PTR [esi+0x14]
64008b06:	mov    edi,DWORD PTR [esp+0x14]
64008b0a:	sub    eax,ebx
64008b0c:	cmp    eax,edi
64008b0e:	jae    0x64008b12
64008b10:	mov    edi,eax
64008b12:	test   edi,edi
64008b14:	jbe    0x64008b7f
64008b16:	mov    ecx,DWORD PTR [esi+0x18]
64008b19:	cmp    ecx,0x8
64008b1c:	push   ebp
64008b1d:	lea    ebp,[esi+0x4]
64008b20:	jb     0x64008b2b
64008b22:	mov    edx,DWORD PTR [ebp+0x0]
64008b25:	mov    DWORD PTR [esp+0x14],edx
64008b29:	jmp    0x64008b2f
64008b2b:	mov    DWORD PTR [esp+0x14],ebp
64008b2f:	cmp    ecx,0x8
64008b32:	jb     0x64008b3d
64008b34:	mov    edx,DWORD PTR [ebp+0x0]
64008b37:	mov    DWORD PTR [esp+0x18],edx
64008b3b:	jmp    0x64008b41
64008b3d:	mov    DWORD PTR [esp+0x18],ebp
64008b41:	mov    edx,DWORD PTR [esp+0x14]
64008b45:	sub    eax,edi
64008b47:	add    eax,eax
64008b49:	push   eax
64008b4a:	lea    eax,[ebx+edi*1]
64008b4d:	lea    eax,[edx+eax*2]
64008b50:	sub    ecx,ebx
64008b52:	push   eax
64008b53:	add    ecx,ecx
64008b55:	push   ecx
64008b56:	mov    ecx,DWORD PTR [esp+0x24]
64008b5a:	lea    edx,[ecx+ebx*2]
64008b5d:	push   edx
64008b5e:	call   0x64013633
64008b63:	mov    eax,DWORD PTR [esi+0x14]
64008b66:	sub    eax,edi
64008b68:	add    esp,0x10
64008b6b:	cmp    DWORD PTR [esi+0x18],0x8
64008b6f:	mov    DWORD PTR [esi+0x14],eax
64008b72:	jb     0x64008b77
64008b74:	mov    ebp,DWORD PTR [ebp+0x0]
64008b77:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64008b7e:	pop    ebp
64008b7f:	pop    edi
64008b80:	mov    eax,esi
64008b82:	pop    esi
64008b83:	pop    ebx
64008b84:	ret    0x8
64008b87:	int3   
64008b88:	int3   
64008b89:	int3   
64008b8a:	int3   
64008b8b:	int3   
64008b8c:	int3   
64008b8d:	int3   
64008b8e:	int3   
64008b8f:	int3   
64008b90:	mov    eax,DWORD PTR [ecx+0x4]
64008b93:	push   ebp
64008b94:	push   esi
64008b95:	mov    esi,DWORD PTR [eax+0x4]
64008b98:	cmp    BYTE PTR [esi+0x45],0x0
64008b9c:	mov    ebp,eax
64008b9e:	jne    0x64008be6
64008ba0:	push   ebx
64008ba1:	push   edi
64008ba2:	mov    edi,DWORD PTR [esp+0x14]
64008ba6:	lea    ebx,[edi+0x4]
64008ba9:	lea    esp,[esp+0x0]
64008bb0:	cmp    DWORD PTR [edi+0x18],0x8
64008bb4:	mov    edx,DWORD PTR [edi+0x14]
64008bb7:	lea    ecx,[esi+0xc]
64008bba:	jb     0x64008bc0
64008bbc:	mov    eax,DWORD PTR [ebx]
64008bbe:	jmp    0x64008bc2
64008bc0:	mov    eax,ebx
64008bc2:	push   edx
64008bc3:	push   eax
64008bc4:	mov    eax,DWORD PTR [ecx+0x14]
64008bc7:	push   eax
64008bc8:	push   0x0
64008bca:	call   0x64009ec0
64008bcf:	test   eax,eax
64008bd1:	jge    0x64008bd8
64008bd3:	mov    esi,DWORD PTR [esi+0x8]
64008bd6:	jmp    0x64008bdc
64008bd8:	mov    ebp,esi
64008bda:	mov    esi,DWORD PTR [esi]
64008bdc:	cmp    BYTE PTR [esi+0x45],0x0
64008be0:	je     0x64008bb0
64008be2:	pop    edi
64008be3:	mov    eax,ebp
64008be5:	pop    ebx
64008be6:	pop    esi
64008be7:	pop    ebp
64008be8:	ret    0x4
64008beb:	int3   
64008bec:	int3   
64008bed:	int3   
64008bee:	int3   
64008bef:	int3   
64008bf0:	mov    edx,DWORD PTR [esp+0x4]
64008bf4:	mov    eax,DWORD PTR [edx+0x8]
64008bf7:	push   esi
64008bf8:	mov    esi,DWORD PTR [eax]
64008bfa:	mov    DWORD PTR [edx+0x8],esi
64008bfd:	mov    esi,DWORD PTR [eax]
64008bff:	cmp    BYTE PTR [esi+0x45],0x0
64008c03:	jne    0x64008c08
64008c05:	mov    DWORD PTR [esi+0x4],edx
64008c08:	mov    esi,DWORD PTR [edx+0x4]
64008c0b:	mov    DWORD PTR [eax+0x4],esi
64008c0e:	mov    ecx,DWORD PTR [ecx+0x4]
64008c11:	cmp    edx,DWORD PTR [ecx+0x4]
64008c14:	pop    esi
64008c15:	jne    0x64008c22
64008c17:	mov    DWORD PTR [ecx+0x4],eax
64008c1a:	mov    DWORD PTR [eax],edx
64008c1c:	mov    DWORD PTR [edx+0x4],eax
64008c1f:	ret    0x4
64008c22:	mov    ecx,DWORD PTR [edx+0x4]
64008c25:	cmp    edx,DWORD PTR [ecx]
64008c27:	jne    0x64008c33
64008c29:	mov    DWORD PTR [ecx],eax
64008c2b:	mov    DWORD PTR [eax],edx
64008c2d:	mov    DWORD PTR [edx+0x4],eax
64008c30:	ret    0x4
64008c33:	mov    DWORD PTR [ecx+0x8],eax
64008c36:	mov    DWORD PTR [eax],edx
64008c38:	mov    DWORD PTR [edx+0x4],eax
64008c3b:	ret    0x4
64008c3e:	int3   
64008c3f:	int3   
64008c40:	mov    edx,DWORD PTR [esp+0x4]
64008c44:	mov    eax,DWORD PTR [edx]
64008c46:	push   esi
64008c47:	mov    esi,DWORD PTR [eax+0x8]
64008c4a:	mov    DWORD PTR [edx],esi
64008c4c:	mov    esi,DWORD PTR [eax+0x8]
64008c4f:	cmp    BYTE PTR [esi+0x45],0x0
64008c53:	jne    0x64008c58
64008c55:	mov    DWORD PTR [esi+0x4],edx
64008c58:	mov    esi,DWORD PTR [edx+0x4]
64008c5b:	mov    DWORD PTR [eax+0x4],esi
64008c5e:	mov    ecx,DWORD PTR [ecx+0x4]
64008c61:	cmp    edx,DWORD PTR [ecx+0x4]
64008c64:	pop    esi
64008c65:	jne    0x64008c73
64008c67:	mov    DWORD PTR [ecx+0x4],eax
64008c6a:	mov    DWORD PTR [eax+0x8],edx
64008c6d:	mov    DWORD PTR [edx+0x4],eax
64008c70:	ret    0x4
64008c73:	mov    ecx,DWORD PTR [edx+0x4]
64008c76:	cmp    edx,DWORD PTR [ecx+0x8]
64008c79:	jne    0x64008c87
64008c7b:	mov    DWORD PTR [ecx+0x8],eax
64008c7e:	mov    DWORD PTR [eax+0x8],edx
64008c81:	mov    DWORD PTR [edx+0x4],eax
64008c84:	ret    0x4
64008c87:	mov    DWORD PTR [ecx],eax
64008c89:	mov    DWORD PTR [eax+0x8],edx
64008c8c:	mov    DWORD PTR [edx+0x4],eax
64008c8f:	ret    0x4
64008c92:	int3   
64008c93:	int3   
64008c94:	int3   
64008c95:	int3   
64008c96:	int3   
64008c97:	int3   
64008c98:	int3   
64008c99:	int3   
64008c9a:	int3   
64008c9b:	int3   
64008c9c:	int3   
64008c9d:	int3   
64008c9e:	int3   
64008c9f:	int3   
64008ca0:	push   ebp
64008ca1:	mov    ebp,esp
64008ca3:	push   0xffffffff
64008ca5:	push   0x64023c11
64008caa:	mov    eax,fs:0x0
64008cb0:	push   eax
64008cb1:	sub    esp,0xc
64008cb4:	push   ebx
64008cb5:	push   esi
64008cb6:	push   edi
64008cb7:	mov    eax,ds:0x6402f09c
64008cbc:	xor    eax,ebp
64008cbe:	push   eax
64008cbf:	lea    eax,[ebp-0xc]
64008cc2:	mov    fs:0x0,eax
64008cc8:	mov    DWORD PTR [ebp-0x10],esp
64008ccb:	push   0x48
64008ccd:	call   0x640137e1
64008cd2:	mov    esi,eax
64008cd4:	mov    DWORD PTR [ebp-0x4],0x0
64008cdb:	add    esp,0x4
64008cde:	mov    DWORD PTR [ebp-0x14],esi
64008ce1:	mov    DWORD PTR [ebp-0x18],esi
64008ce4:	test   esi,esi
64008ce6:	mov    BYTE PTR [ebp-0x4],0x1
64008cea:	je     0x64008d13
64008cec:	mov    eax,DWORD PTR [ebp+0x8]
64008cef:	mov    ecx,DWORD PTR [ebp+0xc]
64008cf2:	mov    edx,DWORD PTR [ebp+0x10]
64008cf5:	mov    DWORD PTR [esi],eax
64008cf7:	mov    eax,DWORD PTR [ebp+0x14]
64008cfa:	mov    DWORD PTR [esi+0x4],ecx
64008cfd:	push   eax
64008cfe:	lea    ecx,[esi+0xc]
64008d01:	mov    DWORD PTR [esi+0x8],edx
64008d04:	call   0x640091c0
64008d09:	mov    cl,BYTE PTR [ebp+0x18]
64008d0c:	mov    BYTE PTR [esi+0x44],cl
64008d0f:	mov    BYTE PTR [esi+0x45],0x0
64008d13:	mov    eax,esi
64008d15:	mov    ecx,DWORD PTR [ebp-0xc]
64008d18:	mov    DWORD PTR fs:0x0,ecx
64008d1f:	pop    ecx
64008d20:	pop    edi
64008d21:	pop    esi
64008d22:	pop    ebx
64008d23:	mov    esp,ebp
64008d25:	pop    ebp
64008d26:	ret    0x14
64008d29:	mov    edx,DWORD PTR [ebp-0x14]
64008d2c:	push   edx
64008d2d:	call   0x64013402
64008d32:	add    esp,0x4
64008d35:	push   0x0
64008d37:	push   0x0
64008d39:	call   0x6401384b
64008d3e:	int3   
64008d3f:	int3   
64008d40:	push   ebp
64008d41:	mov    ebp,esp
64008d43:	and    esp,0xfffffff8
64008d46:	sub    esp,0x14
64008d49:	push   ebx
64008d4a:	push   esi
64008d4b:	push   edi
64008d4c:	mov    edi,ecx
64008d4e:	mov    eax,DWORD PTR [edi+0x4]
64008d51:	mov    ebx,DWORD PTR [eax]
64008d53:	mov    eax,DWORD PTR [ebp+0xc]
64008d56:	test   eax,eax
64008d58:	je     0x64008d5e
64008d5a:	cmp    eax,edi
64008d5c:	je     0x64008d63
64008d5e:	call   0x640137b8
64008d63:	mov    esi,DWORD PTR [ebp+0x10]
64008d66:	cmp    esi,ebx
64008d68:	jne    0x64008dc0
64008d6a:	mov    eax,DWORD PTR [ebp+0x14]
64008d6d:	test   eax,eax
64008d6f:	mov    ebx,DWORD PTR [edi+0x4]
64008d72:	je     0x64008d78
64008d74:	cmp    eax,edi
64008d76:	je     0x64008d7d
64008d78:	call   0x640137b8
64008d7d:	cmp    DWORD PTR [ebp+0x18],ebx
64008d80:	jne    0x64008dc0
64008d82:	mov    ecx,DWORD PTR [edi+0x4]
64008d85:	mov    edx,DWORD PTR [ecx+0x4]
64008d88:	push   edx
64008d89:	mov    ecx,edi
64008d8b:	call   0x64009940
64008d90:	mov    eax,DWORD PTR [edi+0x4]
64008d93:	mov    DWORD PTR [eax+0x4],eax
64008d96:	mov    eax,DWORD PTR [edi+0x4]
64008d99:	mov    DWORD PTR [edi+0x8],0x0
64008da0:	mov    DWORD PTR [eax],eax
64008da2:	mov    eax,DWORD PTR [edi+0x4]
64008da5:	mov    DWORD PTR [eax+0x8],eax
64008da8:	mov    eax,DWORD PTR [edi+0x4]
64008dab:	mov    ecx,DWORD PTR [eax]
64008dad:	mov    eax,DWORD PTR [ebp+0x8]
64008db0:	mov    DWORD PTR [eax+0x4],ecx
64008db3:	mov    DWORD PTR [eax],edi
64008db5:	pop    edi
64008db6:	pop    esi
64008db7:	pop    ebx
64008db8:	mov    esp,ebp
64008dba:	pop    ebp
64008dbb:	ret    0x14
64008dbe:	mov    edi,edi
64008dc0:	mov    ebx,DWORD PTR [ebp+0xc]
64008dc3:	test   ebx,ebx
64008dc5:	je     0x64008dcc
64008dc7:	cmp    ebx,DWORD PTR [ebp+0x14]
64008dca:	je     0x64008dd1
64008dcc:	call   0x640137b8
64008dd1:	cmp    esi,DWORD PTR [ebp+0x18]
64008dd4:	je     0x64008e3e
64008dd6:	test   ebx,ebx
64008dd8:	mov    DWORD PTR [esp+0x14],esi
64008ddc:	jne    0x64008de3
64008dde:	call   0x640137b8
64008de3:	cmp    BYTE PTR [esi+0x45],0x0
64008de7:	je     0x64008df0
64008de9:	call   0x640137b8
64008dee:	jmp    0x64008e2a
64008df0:	mov    eax,DWORD PTR [esi+0x8]
64008df3:	cmp    BYTE PTR [eax+0x45],0x0
64008df7:	jne    0x64008e0f
64008df9:	mov    esi,eax
64008dfb:	mov    eax,DWORD PTR [esi]
64008dfd:	cmp    BYTE PTR [eax+0x45],0x0
64008e01:	jne    0x64008e2a
64008e03:	mov    esi,eax
64008e05:	mov    eax,DWORD PTR [esi]
64008e07:	cmp    BYTE PTR [eax+0x45],0x0
64008e0b:	je     0x64008e03
64008e0d:	jmp    0x64008e2a
64008e0f:	mov    eax,DWORD PTR [esi+0x4]
64008e12:	cmp    BYTE PTR [eax+0x45],0x0
64008e16:	jne    0x64008e28
64008e18:	cmp    esi,DWORD PTR [eax+0x8]
64008e1b:	jne    0x64008e28
64008e1d:	mov    esi,eax
64008e1f:	mov    eax,DWORD PTR [eax+0x4]
64008e22:	cmp    BYTE PTR [eax+0x45],0x0
64008e26:	je     0x64008e18
64008e28:	mov    esi,eax
64008e2a:	mov    edx,DWORD PTR [esp+0x14]
64008e2e:	push   edx
64008e2f:	push   ebx
64008e30:	lea    eax,[esp+0x20]
64008e34:	push   eax
64008e35:	mov    ecx,edi
64008e37:	call   0x64009240
64008e3c:	jmp    0x64008dc0
64008e3e:	mov    eax,DWORD PTR [ebp+0x8]
64008e41:	pop    edi
64008e42:	mov    DWORD PTR [eax+0x4],esi
64008e45:	pop    esi
64008e46:	mov    DWORD PTR [eax],ebx
64008e48:	pop    ebx
64008e49:	mov    esp,ebp
64008e4b:	pop    ebp
64008e4c:	ret    0x14
64008e4f:	int3   
64008e50:	push   ebp
64008e51:	mov    ebp,esp
64008e53:	push   0xffffffff
64008e55:	push   0x640238c0
64008e5a:	mov    eax,fs:0x0
64008e60:	push   eax
64008e61:	sub    esp,0xc
64008e64:	push   ebx
64008e65:	push   esi
64008e66:	push   edi
64008e67:	mov    eax,ds:0x6402f09c
64008e6c:	xor    eax,ebp
64008e6e:	push   eax
64008e6f:	lea    eax,[ebp-0xc]
64008e72:	mov    fs:0x0,eax
64008e78:	mov    DWORD PTR [ebp-0x10],esp
64008e7b:	mov    edi,ecx
64008e7d:	mov    DWORD PTR [ebp-0x14],edi
64008e80:	mov    eax,DWORD PTR [ebp+0x8]
64008e83:	mov    esi,eax
64008e85:	or     esi,0x7
64008e88:	cmp    esi,0x7ffffffe
64008e8e:	jbe    0x64008e94
64008e90:	mov    esi,eax
64008e92:	jmp    0x64008eb6
64008e94:	mov    ebx,DWORD PTR [edi+0x18]
64008e97:	mov    eax,0xaaaaaaab
64008e9c:	mul    esi
64008e9e:	mov    ecx,ebx
64008ea0:	shr    ecx,1
64008ea2:	shr    edx,1
64008ea4:	cmp    edx,ecx
64008ea6:	jae    0x64008eb6
64008ea8:	mov    eax,0x7ffffffe
64008ead:	sub    eax,ecx
64008eaf:	cmp    ebx,eax
64008eb1:	ja     0x64008eb6
64008eb3:	lea    esi,[ecx+ebx*1]
64008eb6:	lea    ecx,[esi+0x1]
64008eb9:	push   ecx
64008eba:	mov    ecx,edi
64008ebc:	mov    DWORD PTR [ebp-0x4],0x0
64008ec3:	call   0x64009580
64008ec8:	mov    DWORD PTR [ebp+0x8],eax
64008ecb:	jmp    0x64008ef5
64008ecd:	mov    eax,DWORD PTR [ebp+0x8]
64008ed0:	mov    ecx,DWORD PTR [ebp-0x14]
64008ed3:	mov    DWORD PTR [ebp-0x18],eax
64008ed6:	add    eax,0x1
64008ed9:	mov    DWORD PTR [ebp-0x10],esp
64008edc:	push   eax
64008edd:	mov    BYTE PTR [ebp-0x4],0x2
64008ee1:	call   0x64009580
64008ee6:	mov    DWORD PTR [ebp+0x8],eax
64008ee9:	mov    eax,0x64008eef
64008eee:	ret    
64008eef:	mov    edi,DWORD PTR [ebp-0x14]
64008ef2:	mov    esi,DWORD PTR [ebp-0x18]
64008ef5:	mov    ebx,DWORD PTR [ebp+0xc]
64008ef8:	test   ebx,ebx
64008efa:	jbe    0x64008f20
64008efc:	cmp    DWORD PTR [edi+0x18],0x8
64008f00:	jb     0x64008f07
64008f02:	mov    eax,DWORD PTR [edi+0x4]
64008f05:	jmp    0x64008f0a
64008f07:	lea    eax,[edi+0x4]
64008f0a:	mov    ecx,DWORD PTR [ebp+0x8]
64008f0d:	lea    edx,[ebx+ebx*1]
64008f10:	push   edx
64008f11:	push   eax
64008f12:	lea    eax,[esi+esi*1+0x2]
64008f16:	push   eax
64008f17:	push   ecx
64008f18:	call   0x640135b8
64008f1d:	add    esp,0x10
64008f20:	cmp    DWORD PTR [edi+0x18],0x8
64008f24:	jb     0x64008f32
64008f26:	mov    edx,DWORD PTR [edi+0x4]
64008f29:	push   edx
64008f2a:	call   0x64013402
64008f2f:	add    esp,0x4
64008f32:	cmp    esi,0x8
64008f35:	mov    ecx,DWORD PTR [ebp+0x8]
64008f38:	lea    eax,[edi+0x4]
64008f3b:	mov    WORD PTR [eax],0x0
64008f40:	mov    DWORD PTR [eax],ecx
64008f42:	mov    DWORD PTR [edi+0x18],esi
64008f45:	mov    DWORD PTR [edi+0x14],ebx
64008f48:	jb     0x64008f4c
64008f4a:	mov    eax,ecx
64008f4c:	mov    WORD PTR [eax+ebx*2],0x0
64008f52:	mov    ecx,DWORD PTR [ebp-0xc]
64008f55:	mov    DWORD PTR fs:0x0,ecx
64008f5c:	pop    ecx
64008f5d:	pop    edi
64008f5e:	pop    esi
64008f5f:	pop    ebx
64008f60:	mov    esp,ebp
64008f62:	pop    ebp
64008f63:	ret    0x8
64008f66:	mov    esi,DWORD PTR [ebp-0x14]
64008f69:	cmp    DWORD PTR [esi+0x18],0x8
64008f6d:	jb     0x64008f7b
64008f6f:	mov    eax,DWORD PTR [esi+0x4]
64008f72:	push   eax
64008f73:	call   0x64013402
64008f78:	add    esp,0x4
64008f7b:	xor    eax,eax
64008f7d:	push   eax
64008f7e:	mov    DWORD PTR [esi+0x18],0x7
64008f85:	mov    DWORD PTR [esi+0x14],eax
64008f88:	push   eax
64008f89:	mov    WORD PTR [esi+0x4],ax
64008f8d:	call   0x6401384b
64008f92:	int3   
64008f93:	int3   
64008f94:	int3   
64008f95:	int3   
64008f96:	int3   
64008f97:	int3   
64008f98:	int3   
64008f99:	int3   
64008f9a:	int3   
64008f9b:	int3   
64008f9c:	int3   
64008f9d:	int3   
64008f9e:	int3   
64008f9f:	int3   
64008fa0:	push   ebp
64008fa1:	mov    ebp,esp
64008fa3:	and    esp,0xfffffff8
64008fa6:	sub    esp,0x14
64008fa9:	push   ebx
64008faa:	push   esi
64008fab:	push   edi
64008fac:	mov    edi,ecx
64008fae:	mov    eax,DWORD PTR [edi+0x4]
64008fb1:	mov    ebx,DWORD PTR [eax]
64008fb3:	mov    eax,DWORD PTR [ebp+0xc]
64008fb6:	test   eax,eax
64008fb8:	je     0x64008fbe
64008fba:	cmp    eax,edi
64008fbc:	je     0x64008fc3
64008fbe:	call   0x640137b8
64008fc3:	mov    esi,DWORD PTR [ebp+0x10]
64008fc6:	cmp    esi,ebx
64008fc8:	jne    0x64009020
64008fca:	mov    eax,DWORD PTR [ebp+0x14]
64008fcd:	test   eax,eax
64008fcf:	mov    ebx,DWORD PTR [edi+0x4]
64008fd2:	je     0x64008fd8
64008fd4:	cmp    eax,edi
64008fd6:	je     0x64008fdd
64008fd8:	call   0x640137b8
64008fdd:	cmp    DWORD PTR [ebp+0x18],ebx
64008fe0:	jne    0x64009020
64008fe2:	mov    ecx,DWORD PTR [edi+0x4]
64008fe5:	mov    edx,DWORD PTR [ecx+0x4]
64008fe8:	push   edx
64008fe9:	mov    ecx,edi
64008feb:	call   0x640099c0
64008ff0:	mov    eax,DWORD PTR [edi+0x4]
64008ff3:	mov    DWORD PTR [eax+0x4],eax
64008ff6:	mov    eax,DWORD PTR [edi+0x4]
64008ff9:	mov    DWORD PTR [edi+0x8],0x0
64009000:	mov    DWORD PTR [eax],eax
64009002:	mov    eax,DWORD PTR [edi+0x4]
64009005:	mov    DWORD PTR [eax+0x8],eax
64009008:	mov    eax,DWORD PTR [edi+0x4]
6400900b:	mov    ecx,DWORD PTR [eax]
6400900d:	mov    eax,DWORD PTR [ebp+0x8]
64009010:	mov    DWORD PTR [eax+0x4],ecx
64009013:	mov    DWORD PTR [eax],edi
64009015:	pop    edi
64009016:	pop    esi
64009017:	pop    ebx
64009018:	mov    esp,ebp
6400901a:	pop    ebp
6400901b:	ret    0x14
6400901e:	mov    edi,edi
64009020:	mov    ebx,DWORD PTR [ebp+0xc]
64009023:	test   ebx,ebx
64009025:	je     0x6400902c
64009027:	cmp    ebx,DWORD PTR [ebp+0x14]
6400902a:	je     0x64009031
6400902c:	call   0x640137b8
64009031:	cmp    esi,DWORD PTR [ebp+0x18]
64009034:	je     0x6400909e
64009036:	test   ebx,ebx
64009038:	mov    DWORD PTR [esp+0x14],esi
6400903c:	jne    0x64009043
6400903e:	call   0x640137b8
64009043:	cmp    BYTE PTR [esi+0x45],0x0
64009047:	je     0x64009050
64009049:	call   0x640137b8
6400904e:	jmp    0x6400908a
64009050:	mov    eax,DWORD PTR [esi+0x8]
64009053:	cmp    BYTE PTR [eax+0x45],0x0
64009057:	jne    0x6400906f
64009059:	mov    esi,eax
6400905b:	mov    eax,DWORD PTR [esi]
6400905d:	cmp    BYTE PTR [eax+0x45],0x0
64009061:	jne    0x6400908a
64009063:	mov    esi,eax
64009065:	mov    eax,DWORD PTR [esi]
64009067:	cmp    BYTE PTR [eax+0x45],0x0
6400906b:	je     0x64009063
6400906d:	jmp    0x6400908a
6400906f:	mov    eax,DWORD PTR [esi+0x4]
64009072:	cmp    BYTE PTR [eax+0x45],0x0
64009076:	jne    0x64009088
64009078:	cmp    esi,DWORD PTR [eax+0x8]
6400907b:	jne    0x64009088
6400907d:	mov    esi,eax
6400907f:	mov    eax,DWORD PTR [eax+0x4]
64009082:	cmp    BYTE PTR [eax+0x45],0x0
64009086:	je     0x64009078
64009088:	mov    esi,eax
6400908a:	mov    edx,DWORD PTR [esp+0x14]
6400908e:	push   edx
6400908f:	push   ebx
64009090:	lea    eax,[esp+0x20]
64009094:	push   eax
64009095:	mov    ecx,edi
64009097:	call   0x640095e0
6400909c:	jmp    0x64009020
6400909e:	mov    eax,DWORD PTR [ebp+0x8]
640090a1:	pop    edi
640090a2:	mov    DWORD PTR [eax+0x4],esi
640090a5:	pop    esi
640090a6:	mov    DWORD PTR [eax],ebx
640090a8:	pop    ebx
640090a9:	mov    esp,ebp
640090ab:	pop    ebp
640090ac:	ret    0x14
640090af:	int3   
640090b0:	push   esi
640090b1:	mov    esi,ecx
640090b3:	cmp    DWORD PTR [esi],0x0
640090b6:	jne    0x640090bd
640090b8:	call   0x640137b8
640090bd:	mov    eax,DWORD PTR [esi+0x4]
640090c0:	cmp    BYTE PTR [eax+0x45],0x0
640090c4:	je     0x640090d8
640090c6:	mov    eax,DWORD PTR [eax+0x8]
640090c9:	mov    DWORD PTR [esi+0x4],eax
640090cc:	cmp    BYTE PTR [eax+0x45],0x0
640090d0:	je     0x64009137
640090d2:	pop    esi
640090d3:	jmp    0x640137b8
640090d8:	mov    ecx,DWORD PTR [eax]
640090da:	cmp    BYTE PTR [ecx+0x45],0x0
640090de:	jne    0x64009100
640090e0:	mov    eax,DWORD PTR [ecx+0x8]
640090e3:	cmp    BYTE PTR [eax+0x45],0x0
640090e7:	jne    0x640090fb
640090e9:	lea    esp,[esp+0x0]
640090f0:	mov    ecx,eax
640090f2:	mov    eax,DWORD PTR [ecx+0x8]
640090f5:	cmp    BYTE PTR [eax+0x45],0x0
640090f9:	je     0x640090f0
640090fb:	mov    DWORD PTR [esi+0x4],ecx
640090fe:	pop    esi
640090ff:	ret    
64009100:	mov    eax,DWORD PTR [eax+0x4]
64009103:	cmp    BYTE PTR [eax+0x45],0x0
64009107:	jne    0x64009125
64009109:	lea    esp,[esp+0x0]
64009110:	mov    ecx,DWORD PTR [esi+0x4]
64009113:	cmp    ecx,DWORD PTR [eax]
64009115:	jne    0x64009125
64009117:	mov    DWORD PTR [esi+0x4],eax
6400911a:	mov    edx,eax
6400911c:	mov    eax,DWORD PTR [edx+0x4]
6400911f:	cmp    BYTE PTR [eax+0x45],0x0
64009123:	je     0x64009110
64009125:	mov    ecx,DWORD PTR [esi+0x4]
64009128:	cmp    BYTE PTR [ecx+0x45],0x0
6400912c:	je     0x64009134
6400912e:	pop    esi
6400912f:	jmp    0x640137b8
64009134:	mov    DWORD PTR [esi+0x4],eax
64009137:	pop    esi
64009138:	ret    
64009139:	int3   
6400913a:	int3   
6400913b:	int3   
6400913c:	int3   
6400913d:	int3   
6400913e:	int3   
6400913f:	int3   
64009140:	push   0xffffffff
64009142:	push   0x64023898
64009147:	mov    eax,fs:0x0
6400914d:	push   eax
6400914e:	push   ecx
6400914f:	push   ebx
64009150:	push   esi
64009151:	push   edi
64009152:	mov    eax,ds:0x6402f09c
64009157:	xor    eax,esp
64009159:	push   eax
6400915a:	lea    eax,[esp+0x14]
6400915e:	mov    fs:0x0,eax
64009164:	mov    esi,ecx
64009166:	mov    DWORD PTR [esp+0x10],esi
6400916a:	mov    edi,DWORD PTR [esp+0x24]
6400916e:	xor    ebx,ebx
64009170:	push   0xffffffff
64009172:	push   ebx
64009173:	mov    DWORD PTR [esi+0x18],0xf
6400917a:	mov    DWORD PTR [esi+0x14],ebx
6400917d:	push   edi
6400917e:	mov    BYTE PTR [esi+0x4],bl
64009181:	call   0x64001780
64009186:	push   0xffffffff
64009188:	lea    ecx,[esi+0x1c]
6400918b:	mov    DWORD PTR [esp+0x20],ebx
6400918f:	lea    eax,[edi+0x1c]
64009192:	push   ebx
64009193:	mov    DWORD PTR [ecx+0x18],0xf
6400919a:	mov    DWORD PTR [ecx+0x14],ebx
6400919d:	push   eax
6400919e:	mov    BYTE PTR [ecx+0x4],bl
640091a1:	call   0x64001780
640091a6:	mov    eax,esi
640091a8:	mov    ecx,DWORD PTR [esp+0x14]
640091ac:	mov    DWORD PTR fs:0x0,ecx
640091b3:	pop    ecx
640091b4:	pop    edi
640091b5:	pop    esi
640091b6:	pop    ebx
640091b7:	add    esp,0x10
640091ba:	ret    0x4
640091bd:	int3   
640091be:	int3   
640091bf:	int3   
640091c0:	push   0xffffffff
640091c2:	push   0x64023bd8
640091c7:	mov    eax,fs:0x0
640091cd:	push   eax
640091ce:	push   ecx
640091cf:	push   ebx
640091d0:	push   esi
640091d1:	push   edi
640091d2:	mov    eax,ds:0x6402f09c
640091d7:	xor    eax,esp
640091d9:	push   eax
640091da:	lea    eax,[esp+0x14]
640091de:	mov    fs:0x0,eax
640091e4:	mov    esi,ecx
640091e6:	mov    DWORD PTR [esp+0x10],esi
640091ea:	mov    ebx,DWORD PTR [esp+0x24]
640091ee:	xor    edi,edi
640091f0:	push   0xffffffff
640091f2:	push   edi
640091f3:	mov    DWORD PTR [esi+0x18],0x7
640091fa:	mov    DWORD PTR [esi+0x14],edi
640091fd:	push   ebx
640091fe:	mov    WORD PTR [esi+0x4],di
64009202:	call   0x64008390
64009207:	push   0xffffffff
64009209:	lea    ecx,[esi+0x1c]
6400920c:	mov    DWORD PTR [esp+0x20],edi
64009210:	lea    eax,[ebx+0x1c]
64009213:	push   edi
64009214:	mov    DWORD PTR [ecx+0x18],0x7
6400921b:	mov    DWORD PTR [ecx+0x14],edi
6400921e:	push   eax
6400921f:	mov    WORD PTR [ecx+0x4],di
64009223:	call   0x64008390
64009228:	mov    eax,esi
6400922a:	mov    ecx,DWORD PTR [esp+0x14]
6400922e:	mov    DWORD PTR fs:0x0,ecx
64009235:	pop    ecx
64009236:	pop    edi
64009237:	pop    esi
64009238:	pop    ebx
64009239:	add    esp,0x10
6400923c:	ret    0x4
6400923f:	int3   
64009240:	push   ebp
64009241:	mov    ebp,esp
64009243:	and    esp,0xfffffff8
64009246:	push   0xffffffff
64009248:	push   0x64023cf8
6400924d:	mov    eax,fs:0x0
64009253:	push   eax
64009254:	sub    esp,0x50
64009257:	push   ebx
64009258:	push   esi
64009259:	push   edi
6400925a:	mov    eax,ds:0x6402f09c
6400925f:	xor    eax,esp
64009261:	push   eax
64009262:	lea    eax,[esp+0x60]
64009266:	mov    fs:0x0,eax
6400926c:	mov    DWORD PTR [esp+0x14],ecx
64009270:	mov    edi,DWORD PTR [ebp+0x10]
64009273:	cmp    BYTE PTR [edi+0x45],0x0
64009277:	je     0x640092c5
64009279:	push   0x1b
6400927b:	xor    esi,esi
6400927d:	push   0x64029e74
64009282:	lea    ecx,[esp+0x20]
64009286:	mov    DWORD PTR [esp+0x38],0xf
6400928e:	mov    DWORD PTR [esp+0x34],esi
64009292:	mov    BYTE PTR [esp+0x24],0x0
64009297:	call   0x64001860
6400929c:	lea    eax,[esp+0x18]
640092a0:	push   eax
640092a1:	lea    ecx,[esp+0x38]
640092a5:	mov    DWORD PTR [esp+0x6c],esi
640092a9:	call   0x64002d00
640092ae:	push   0x6402c654
640092b3:	lea    ecx,[esp+0x38]
640092b7:	push   ecx
640092b8:	mov    DWORD PTR [esp+0x3c],0x64026328
640092c0:	call   0x6401384b
640092c5:	lea    ecx,[ebp+0xc]
640092c8:	call   0x64009a60
640092cd:	mov    ecx,DWORD PTR [edi]
640092cf:	cmp    BYTE PTR [ecx+0x45],0x0
640092d3:	je     0x640092da
640092d5:	mov    ebx,DWORD PTR [edi+0x8]
640092d8:	jmp    0x640092f1
640092da:	mov    edx,DWORD PTR [edi+0x8]
640092dd:	cmp    BYTE PTR [edx+0x45],0x0
640092e1:	je     0x640092e7
640092e3:	mov    ebx,ecx
640092e5:	jmp    0x640092f1
640092e7:	mov    eax,DWORD PTR [ebp+0x10]
640092ea:	cmp    eax,edi
640092ec:	mov    ebx,DWORD PTR [eax+0x8]
640092ef:	jne    0x6400936d
640092f1:	cmp    BYTE PTR [ebx+0x45],0x0
640092f5:	mov    esi,DWORD PTR [edi+0x4]
640092f8:	jne    0x640092fd
640092fa:	mov    DWORD PTR [ebx+0x4],esi
640092fd:	mov    ecx,DWORD PTR [esp+0x14]
64009301:	mov    eax,DWORD PTR [ecx+0x4]
64009304:	cmp    DWORD PTR [eax+0x4],edi
64009307:	jne    0x6400930e
64009309:	mov    DWORD PTR [eax+0x4],ebx
6400930c:	jmp    0x64009319
6400930e:	cmp    DWORD PTR [esi],edi
64009310:	jne    0x64009316
64009312:	mov    DWORD PTR [esi],ebx
64009314:	jmp    0x64009319
64009316:	mov    DWORD PTR [esi+0x8],ebx
64009319:	mov    eax,DWORD PTR [ecx+0x4]
6400931c:	cmp    DWORD PTR [eax],edi
6400931e:	jne    0x6400933c
64009320:	cmp    BYTE PTR [ebx+0x45],0x0
64009324:	je     0x6400932a
64009326:	mov    eax,esi
64009328:	jmp    0x64009337
6400932a:	push   ebx
6400932b:	call   0x64009a40
64009330:	mov    ecx,DWORD PTR [esp+0x18]
64009334:	add    esp,0x4
64009337:	mov    edx,DWORD PTR [ecx+0x4]
6400933a:	mov    DWORD PTR [edx],eax
6400933c:	mov    eax,DWORD PTR [ecx+0x4]
6400933f:	cmp    DWORD PTR [eax+0x8],edi
64009342:	jne    0x640093cc
64009348:	cmp    BYTE PTR [ebx+0x45],0x0
6400934c:	je     0x64009358
6400934e:	mov    edx,DWORD PTR [ecx+0x4]
64009351:	mov    eax,esi
64009353:	mov    DWORD PTR [edx+0x8],eax
64009356:	jmp    0x640093cc
64009358:	push   ebx
64009359:	call   0x64009560
6400935e:	mov    ecx,DWORD PTR [esp+0x18]
64009362:	mov    edx,DWORD PTR [ecx+0x4]
64009365:	add    esp,0x4
64009368:	mov    DWORD PTR [edx+0x8],eax
6400936b:	jmp    0x640093cc
6400936d:	mov    DWORD PTR [ecx+0x4],eax
64009370:	mov    ecx,DWORD PTR [edi]
64009372:	mov    DWORD PTR [eax],ecx
64009374:	cmp    eax,DWORD PTR [edi+0x8]
64009377:	jne    0x6400937d
64009379:	mov    esi,eax
6400937b:	jmp    0x64009397
6400937d:	cmp    BYTE PTR [ebx+0x45],0x0
64009381:	mov    esi,DWORD PTR [eax+0x4]
64009384:	jne    0x64009389
64009386:	mov    DWORD PTR [ebx+0x4],esi
64009389:	mov    DWORD PTR [esi],ebx
6400938b:	mov    edx,DWORD PTR [edi+0x8]
6400938e:	mov    DWORD PTR [eax+0x8],edx
64009391:	mov    ecx,DWORD PTR [edi+0x8]
64009394:	mov    DWORD PTR [ecx+0x4],eax
64009397:	mov    edx,DWORD PTR [esp+0x14]
6400939b:	mov    ecx,DWORD PTR [edx+0x4]
6400939e:	cmp    DWORD PTR [ecx+0x4],edi
640093a1:	jne    0x640093a8
640093a3:	mov    DWORD PTR [ecx+0x4],eax
640093a6:	jmp    0x640093b6
640093a8:	mov    ecx,DWORD PTR [edi+0x4]
640093ab:	cmp    DWORD PTR [ecx],edi
640093ad:	jne    0x640093b3
640093af:	mov    DWORD PTR [ecx],eax
640093b1:	jmp    0x640093b6
640093b3:	mov    DWORD PTR [ecx+0x8],eax
640093b6:	mov    ecx,DWORD PTR [edi+0x4]
640093b9:	mov    DWORD PTR [eax+0x4],ecx
640093bc:	mov    cl,BYTE PTR [eax+0x44]
640093bf:	mov    dl,BYTE PTR [edi+0x44]
640093c2:	mov    BYTE PTR [eax+0x44],dl
640093c5:	mov    BYTE PTR [edi+0x44],cl
640093c8:	mov    ecx,DWORD PTR [esp+0x14]
640093cc:	cmp    BYTE PTR [edi+0x44],0x1
640093d0:	jne    0x640094e1
640093d6:	mov    eax,DWORD PTR [ecx+0x4]
640093d9:	cmp    ebx,DWORD PTR [eax+0x4]
640093dc:	je     0x640094dd
640093e2:	cmp    BYTE PTR [ebx+0x44],0x1
640093e6:	jne    0x640094dd
640093ec:	mov    eax,DWORD PTR [esi]
640093ee:	cmp    ebx,eax
640093f0:	jne    0x64009460
640093f2:	mov    eax,DWORD PTR [esi+0x8]
640093f5:	cmp    BYTE PTR [eax+0x44],0x0
640093f9:	jne    0x64009410
640093fb:	mov    BYTE PTR [eax+0x44],0x1
640093ff:	push   esi
64009400:	mov    BYTE PTR [esi+0x44],0x0
64009404:	call   0x64008bf0
64009409:	mov    eax,DWORD PTR [esi+0x8]
6400940c:	mov    ecx,DWORD PTR [esp+0x14]
64009410:	cmp    BYTE PTR [eax+0x45],0x0
64009414:	jne    0x64009495
64009416:	mov    edx,DWORD PTR [eax]
64009418:	cmp    BYTE PTR [edx+0x44],0x1
6400941c:	jne    0x64009427
6400941e:	mov    edx,DWORD PTR [eax+0x8]
64009421:	cmp    BYTE PTR [edx+0x44],0x1
64009425:	je     0x64009491
64009427:	mov    edx,DWORD PTR [eax+0x8]
6400942a:	cmp    BYTE PTR [edx+0x44],0x1
6400942e:	jne    0x64009447
64009430:	mov    edx,DWORD PTR [eax]
64009432:	mov    BYTE PTR [edx+0x44],0x1
64009436:	push   eax
64009437:	mov    BYTE PTR [eax+0x44],0x0
6400943b:	call   0x64008c40
64009440:	mov    eax,DWORD PTR [esi+0x8]
64009443:	mov    ecx,DWORD PTR [esp+0x14]
64009447:	mov    dl,BYTE PTR [esi+0x44]
6400944a:	mov    BYTE PTR [eax+0x44],dl
6400944d:	mov    BYTE PTR [esi+0x44],0x1
64009451:	mov    eax,DWORD PTR [eax+0x8]
64009454:	push   esi
64009455:	mov    BYTE PTR [eax+0x44],0x1
64009459:	call   0x64008bf0
6400945e:	jmp    0x640094dd
64009460:	cmp    BYTE PTR [eax+0x44],0x0
64009464:	jne    0x6400947a
64009466:	mov    BYTE PTR [eax+0x44],0x1
6400946a:	push   esi
6400946b:	mov    BYTE PTR [esi+0x44],0x0
6400946f:	call   0x64008c40
64009474:	mov    eax,DWORD PTR [esi]
64009476:	mov    ecx,DWORD PTR [esp+0x14]
6400947a:	cmp    BYTE PTR [eax+0x45],0x0
6400947e:	jne    0x64009495
64009480:	mov    edx,DWORD PTR [eax+0x8]
64009483:	cmp    BYTE PTR [edx+0x44],0x1
64009487:	jne    0x640094a8
64009489:	mov    edx,DWORD PTR [eax]
6400948b:	cmp    BYTE PTR [edx+0x44],0x1
6400948f:	jne    0x640094a8
64009491:	mov    BYTE PTR [eax+0x44],0x0
64009495:	mov    eax,DWORD PTR [ecx+0x4]
64009498:	mov    ebx,esi
6400949a:	cmp    ebx,DWORD PTR [eax+0x4]
6400949d:	mov    esi,DWORD PTR [esi+0x4]
640094a0:	jne    0x640093e2
640094a6:	jmp    0x640094dd
640094a8:	mov    edx,DWORD PTR [eax]
640094aa:	cmp    BYTE PTR [edx+0x44],0x1
640094ae:	jne    0x640094c7
640094b0:	mov    edx,DWORD PTR [eax+0x8]
640094b3:	mov    BYTE PTR [edx+0x44],0x1
640094b7:	push   eax
640094b8:	mov    BYTE PTR [eax+0x44],0x0
640094bc:	call   0x64008bf0
640094c1:	mov    eax,DWORD PTR [esi]
640094c3:	mov    ecx,DWORD PTR [esp+0x14]
640094c7:	mov    dl,BYTE PTR [esi+0x44]
640094ca:	mov    BYTE PTR [eax+0x44],dl
640094cd:	mov    BYTE PTR [esi+0x44],0x1
640094d1:	mov    eax,DWORD PTR [eax]
640094d3:	push   esi
640094d4:	mov    BYTE PTR [eax+0x44],0x1
640094d8:	call   0x64008c40
640094dd:	mov    BYTE PTR [ebx+0x44],0x1
640094e1:	cmp    DWORD PTR [edi+0x40],0x10
640094e5:	jb     0x640094f3
640094e7:	mov    ecx,DWORD PTR [edi+0x2c]
640094ea:	push   ecx
640094eb:	call   0x64013402
640094f0:	add    esp,0x4
640094f3:	xor    esi,esi
640094f5:	mov    ebx,0xf
640094fa:	mov    DWORD PTR [edi+0x40],ebx
640094fd:	mov    DWORD PTR [edi+0x3c],esi
64009500:	mov    BYTE PTR [edi+0x2c],0x0
64009504:	cmp    DWORD PTR [edi+0x24],0x10
64009508:	jb     0x64009516
6400950a:	mov    edx,DWORD PTR [edi+0x10]
6400950d:	push   edx
6400950e:	call   0x64013402
64009513:	add    esp,0x4
64009516:	mov    DWORD PTR [edi+0x24],ebx
64009519:	mov    DWORD PTR [edi+0x20],esi
6400951c:	push   edi
6400951d:	mov    BYTE PTR [edi+0x10],0x0
64009521:	call   0x64013402
64009526:	mov    ecx,DWORD PTR [esp+0x18]
6400952a:	mov    eax,DWORD PTR [ecx+0x8]
6400952d:	add    esp,0x4
64009530:	cmp    eax,esi
64009532:	jbe    0x6400953a
64009534:	add    eax,0xffffffff
64009537:	mov    DWORD PTR [ecx+0x8],eax
6400953a:	mov    eax,DWORD PTR [ebp+0x8]
6400953d:	mov    ecx,DWORD PTR [ebp+0xc]
64009540:	mov    edx,DWORD PTR [ebp+0x10]
64009543:	mov    DWORD PTR [eax],ecx
64009545:	mov    DWORD PTR [eax+0x4],edx
64009548:	mov    ecx,DWORD PTR [esp+0x60]
6400954c:	mov    DWORD PTR fs:0x0,ecx
64009553:	pop    ecx
64009554:	pop    edi
64009555:	pop    esi
64009556:	pop    ebx
64009557:	mov    esp,ebp
64009559:	pop    ebp
6400955a:	ret    0xc
6400955d:	int3   
6400955e:	int3   
6400955f:	int3   
64009560:	mov    eax,DWORD PTR [esp+0x4]
64009564:	mov    ecx,DWORD PTR [eax+0x8]
64009567:	cmp    BYTE PTR [ecx+0x45],0x0
6400956b:	jne    0x6400957b
6400956d:	lea    ecx,[ecx+0x0]
64009570:	mov    eax,ecx
64009572:	mov    ecx,DWORD PTR [eax+0x8]
64009575:	cmp    BYTE PTR [ecx+0x45],0x0
64009579:	je     0x64009570
6400957b:	ret    
6400957c:	int3   
6400957d:	int3   
6400957e:	int3   
6400957f:	int3   
64009580:	mov    ecx,DWORD PTR [esp+0x4]
64009584:	sub    esp,0xc
64009587:	test   ecx,ecx
64009589:	ja     0x6400959f
6400958b:	xor    ecx,ecx
6400958d:	lea    edx,[ecx+ecx*1]
64009590:	push   edx
64009591:	call   0x640137e1
64009596:	add    esp,0x4
64009599:	add    esp,0xc
6400959c:	ret    0x4
6400959f:	or     eax,0xffffffff
640095a2:	xor    edx,edx
640095a4:	div    ecx
640095a6:	cmp    eax,0x2
640095a9:	jae    0x6400958d
640095ab:	lea    eax,[esp+0x10]
640095af:	push   eax
640095b0:	lea    ecx,[esp+0x4]
640095b4:	mov    DWORD PTR [esp+0x14],0x0
640095bc:	call   0x6401345d
640095c1:	push   0x6402c5c4
640095c6:	lea    ecx,[esp+0x4]
640095ca:	push   ecx
640095cb:	mov    DWORD PTR [esp+0x8],0x64026304
640095d3:	call   0x6401384b
640095d8:	int3   
640095d9:	int3   
640095da:	int3   
640095db:	int3   
640095dc:	int3   
640095dd:	int3   
640095de:	int3   
640095df:	int3   
640095e0:	push   ebp
640095e1:	mov    ebp,esp
640095e3:	and    esp,0xfffffff8
640095e6:	push   0xffffffff
640095e8:	push   0x64023cc8
640095ed:	mov    eax,fs:0x0
640095f3:	push   eax
640095f4:	sub    esp,0x50
640095f7:	push   ebx
640095f8:	push   esi
640095f9:	push   edi
640095fa:	mov    eax,ds:0x6402f09c
640095ff:	xor    eax,esp
64009601:	push   eax
64009602:	lea    eax,[esp+0x60]
64009606:	mov    fs:0x0,eax
6400960c:	mov    DWORD PTR [esp+0x14],ecx
64009610:	mov    edi,DWORD PTR [ebp+0x10]
64009613:	cmp    BYTE PTR [edi+0x45],0x0
64009617:	je     0x64009665
64009619:	push   0x1b
6400961b:	xor    esi,esi
6400961d:	push   0x64029e74
64009622:	lea    ecx,[esp+0x20]
64009626:	mov    DWORD PTR [esp+0x38],0xf
6400962e:	mov    DWORD PTR [esp+0x34],esi
64009632:	mov    BYTE PTR [esp+0x24],0x0
64009637:	call   0x64001860
6400963c:	lea    eax,[esp+0x18]
64009640:	push   eax
64009641:	lea    ecx,[esp+0x38]
64009645:	mov    DWORD PTR [esp+0x6c],esi
64009649:	call   0x64002d00
6400964e:	push   0x6402c654
64009653:	lea    ecx,[esp+0x38]
64009657:	push   ecx
64009658:	mov    DWORD PTR [esp+0x3c],0x64026328
64009660:	call   0x6401384b
64009665:	lea    ecx,[ebp+0xc]
64009668:	call   0x64009a60
6400966d:	mov    ecx,DWORD PTR [edi]
6400966f:	cmp    BYTE PTR [ecx+0x45],0x0
64009673:	je     0x6400967a
64009675:	mov    ebx,DWORD PTR [edi+0x8]
64009678:	jmp    0x64009691
6400967a:	mov    edx,DWORD PTR [edi+0x8]
6400967d:	cmp    BYTE PTR [edx+0x45],0x0
64009681:	je     0x64009687
64009683:	mov    ebx,ecx
64009685:	jmp    0x64009691
64009687:	mov    eax,DWORD PTR [ebp+0x10]
6400968a:	cmp    eax,edi
6400968c:	mov    ebx,DWORD PTR [eax+0x8]
6400968f:	jne    0x6400970d
64009691:	cmp    BYTE PTR [ebx+0x45],0x0
64009695:	mov    esi,DWORD PTR [edi+0x4]
64009698:	jne    0x6400969d
6400969a:	mov    DWORD PTR [ebx+0x4],esi
6400969d:	mov    ecx,DWORD PTR [esp+0x14]
640096a1:	mov    eax,DWORD PTR [ecx+0x4]
640096a4:	cmp    DWORD PTR [eax+0x4],edi
640096a7:	jne    0x640096ae
640096a9:	mov    DWORD PTR [eax+0x4],ebx
640096ac:	jmp    0x640096b9
640096ae:	cmp    DWORD PTR [esi],edi
640096b0:	jne    0x640096b6
640096b2:	mov    DWORD PTR [esi],ebx
640096b4:	jmp    0x640096b9
640096b6:	mov    DWORD PTR [esi+0x8],ebx
640096b9:	mov    eax,DWORD PTR [ecx+0x4]
640096bc:	cmp    DWORD PTR [eax],edi
640096be:	jne    0x640096dc
640096c0:	cmp    BYTE PTR [ebx+0x45],0x0
640096c4:	je     0x640096ca
640096c6:	mov    eax,esi
640096c8:	jmp    0x640096d7
640096ca:	push   ebx
640096cb:	call   0x64009a40
640096d0:	mov    ecx,DWORD PTR [esp+0x18]
640096d4:	add    esp,0x4
640096d7:	mov    edx,DWORD PTR [ecx+0x4]
640096da:	mov    DWORD PTR [edx],eax
640096dc:	mov    eax,DWORD PTR [ecx+0x4]
640096df:	cmp    DWORD PTR [eax+0x8],edi
640096e2:	jne    0x6400976c
640096e8:	cmp    BYTE PTR [ebx+0x45],0x0
640096ec:	je     0x640096f8
640096ee:	mov    edx,DWORD PTR [ecx+0x4]
640096f1:	mov    eax,esi
640096f3:	mov    DWORD PTR [edx+0x8],eax
640096f6:	jmp    0x6400976c
640096f8:	push   ebx
640096f9:	call   0x64009560
640096fe:	mov    ecx,DWORD PTR [esp+0x18]
64009702:	mov    edx,DWORD PTR [ecx+0x4]
64009705:	add    esp,0x4
64009708:	mov    DWORD PTR [edx+0x8],eax
6400970b:	jmp    0x6400976c
6400970d:	mov    DWORD PTR [ecx+0x4],eax
64009710:	mov    ecx,DWORD PTR [edi]
64009712:	mov    DWORD PTR [eax],ecx
64009714:	cmp    eax,DWORD PTR [edi+0x8]
64009717:	jne    0x6400971d
64009719:	mov    esi,eax
6400971b:	jmp    0x64009737
6400971d:	cmp    BYTE PTR [ebx+0x45],0x0
64009721:	mov    esi,DWORD PTR [eax+0x4]
64009724:	jne    0x64009729
64009726:	mov    DWORD PTR [ebx+0x4],esi
64009729:	mov    DWORD PTR [esi],ebx
6400972b:	mov    edx,DWORD PTR [edi+0x8]
6400972e:	mov    DWORD PTR [eax+0x8],edx
64009731:	mov    ecx,DWORD PTR [edi+0x8]
64009734:	mov    DWORD PTR [ecx+0x4],eax
64009737:	mov    edx,DWORD PTR [esp+0x14]
6400973b:	mov    ecx,DWORD PTR [edx+0x4]
6400973e:	cmp    DWORD PTR [ecx+0x4],edi
64009741:	jne    0x64009748
64009743:	mov    DWORD PTR [ecx+0x4],eax
64009746:	jmp    0x64009756
64009748:	mov    ecx,DWORD PTR [edi+0x4]
6400974b:	cmp    DWORD PTR [ecx],edi
6400974d:	jne    0x64009753
6400974f:	mov    DWORD PTR [ecx],eax
64009751:	jmp    0x64009756
64009753:	mov    DWORD PTR [ecx+0x8],eax
64009756:	mov    ecx,DWORD PTR [edi+0x4]
64009759:	mov    DWORD PTR [eax+0x4],ecx
6400975c:	mov    cl,BYTE PTR [eax+0x44]
6400975f:	mov    dl,BYTE PTR [edi+0x44]
64009762:	mov    BYTE PTR [eax+0x44],dl
64009765:	mov    BYTE PTR [edi+0x44],cl
64009768:	mov    ecx,DWORD PTR [esp+0x14]
6400976c:	cmp    BYTE PTR [edi+0x44],0x1
64009770:	jne    0x64009881
64009776:	mov    eax,DWORD PTR [ecx+0x4]
64009779:	cmp    ebx,DWORD PTR [eax+0x4]
6400977c:	je     0x6400987d
64009782:	cmp    BYTE PTR [ebx+0x44],0x1
64009786:	jne    0x6400987d
6400978c:	mov    eax,DWORD PTR [esi]
6400978e:	cmp    ebx,eax
64009790:	jne    0x64009800
64009792:	mov    eax,DWORD PTR [esi+0x8]
64009795:	cmp    BYTE PTR [eax+0x44],0x0
64009799:	jne    0x640097b0
6400979b:	mov    BYTE PTR [eax+0x44],0x1
6400979f:	push   esi
640097a0:	mov    BYTE PTR [esi+0x44],0x0
640097a4:	call   0x64008bf0
640097a9:	mov    eax,DWORD PTR [esi+0x8]
640097ac:	mov    ecx,DWORD PTR [esp+0x14]
640097b0:	cmp    BYTE PTR [eax+0x45],0x0
640097b4:	jne    0x64009835
640097b6:	mov    edx,DWORD PTR [eax]
640097b8:	cmp    BYTE PTR [edx+0x44],0x1
640097bc:	jne    0x640097c7
640097be:	mov    edx,DWORD PTR [eax+0x8]
640097c1:	cmp    BYTE PTR [edx+0x44],0x1
640097c5:	je     0x64009831
640097c7:	mov    edx,DWORD PTR [eax+0x8]
640097ca:	cmp    BYTE PTR [edx+0x44],0x1
640097ce:	jne    0x640097e7
640097d0:	mov    edx,DWORD PTR [eax]
640097d2:	mov    BYTE PTR [edx+0x44],0x1
640097d6:	push   eax
640097d7:	mov    BYTE PTR [eax+0x44],0x0
640097db:	call   0x64008c40
640097e0:	mov    eax,DWORD PTR [esi+0x8]
640097e3:	mov    ecx,DWORD PTR [esp+0x14]
640097e7:	mov    dl,BYTE PTR [esi+0x44]
640097ea:	mov    BYTE PTR [eax+0x44],dl
640097ed:	mov    BYTE PTR [esi+0x44],0x1
640097f1:	mov    eax,DWORD PTR [eax+0x8]
640097f4:	push   esi
640097f5:	mov    BYTE PTR [eax+0x44],0x1
640097f9:	call   0x64008bf0
640097fe:	jmp    0x6400987d
64009800:	cmp    BYTE PTR [eax+0x44],0x0
64009804:	jne    0x6400981a
64009806:	mov    BYTE PTR [eax+0x44],0x1
6400980a:	push   esi
6400980b:	mov    BYTE PTR [esi+0x44],0x0
6400980f:	call   0x64008c40
64009814:	mov    eax,DWORD PTR [esi]
64009816:	mov    ecx,DWORD PTR [esp+0x14]
6400981a:	cmp    BYTE PTR [eax+0x45],0x0
6400981e:	jne    0x64009835
64009820:	mov    edx,DWORD PTR [eax+0x8]
64009823:	cmp    BYTE PTR [edx+0x44],0x1
64009827:	jne    0x64009848
64009829:	mov    edx,DWORD PTR [eax]
6400982b:	cmp    BYTE PTR [edx+0x44],0x1
6400982f:	jne    0x64009848
64009831:	mov    BYTE PTR [eax+0x44],0x0
64009835:	mov    eax,DWORD PTR [ecx+0x4]
64009838:	mov    ebx,esi
6400983a:	cmp    ebx,DWORD PTR [eax+0x4]
6400983d:	mov    esi,DWORD PTR [esi+0x4]
64009840:	jne    0x64009782
64009846:	jmp    0x6400987d
64009848:	mov    edx,DWORD PTR [eax]
6400984a:	cmp    BYTE PTR [edx+0x44],0x1
6400984e:	jne    0x64009867
64009850:	mov    edx,DWORD PTR [eax+0x8]
64009853:	mov    BYTE PTR [edx+0x44],0x1
64009857:	push   eax
64009858:	mov    BYTE PTR [eax+0x44],0x0
6400985c:	call   0x64008bf0
64009861:	mov    eax,DWORD PTR [esi]
64009863:	mov    ecx,DWORD PTR [esp+0x14]
64009867:	mov    dl,BYTE PTR [esi+0x44]
6400986a:	mov    BYTE PTR [eax+0x44],dl
6400986d:	mov    BYTE PTR [esi+0x44],0x1
64009871:	mov    eax,DWORD PTR [eax]
64009873:	push   esi
64009874:	mov    BYTE PTR [eax+0x44],0x1
64009878:	call   0x64008c40
6400987d:	mov    BYTE PTR [ebx+0x44],0x1
64009881:	cmp    DWORD PTR [edi+0x40],0x8
64009885:	jb     0x64009893
64009887:	mov    ecx,DWORD PTR [edi+0x2c]
6400988a:	push   ecx
6400988b:	call   0x64013402
64009890:	add    esp,0x4
64009893:	xor    esi,esi
64009895:	mov    ebx,0x7
6400989a:	mov    DWORD PTR [edi+0x40],ebx
6400989d:	mov    DWORD PTR [edi+0x3c],esi
640098a0:	mov    WORD PTR [edi+0x2c],si
640098a4:	cmp    DWORD PTR [edi+0x24],0x8
640098a8:	jb     0x640098b6
640098aa:	mov    edx,DWORD PTR [edi+0x10]
640098ad:	push   edx
640098ae:	call   0x64013402
640098b3:	add    esp,0x4
640098b6:	mov    DWORD PTR [edi+0x24],ebx
640098b9:	mov    DWORD PTR [edi+0x20],esi
640098bc:	push   edi
640098bd:	mov    WORD PTR [edi+0x10],si
640098c1:	call   0x64013402
640098c6:	mov    ecx,DWORD PTR [esp+0x18]
640098ca:	mov    eax,DWORD PTR [ecx+0x8]
640098cd:	add    esp,0x4
640098d0:	cmp    eax,esi
640098d2:	jbe    0x640098da
640098d4:	add    eax,0xffffffff
640098d7:	mov    DWORD PTR [ecx+0x8],eax
640098da:	mov    eax,DWORD PTR [ebp+0x8]
640098dd:	mov    ecx,DWORD PTR [ebp+0xc]
640098e0:	mov    edx,DWORD PTR [ebp+0x10]
640098e3:	mov    DWORD PTR [eax],ecx
640098e5:	mov    DWORD PTR [eax+0x4],edx
640098e8:	mov    ecx,DWORD PTR [esp+0x60]
640098ec:	mov    DWORD PTR fs:0x0,ecx
640098f3:	pop    ecx
640098f4:	pop    edi
640098f5:	pop    esi
640098f6:	pop    ebx
640098f7:	mov    esp,ebp
640098f9:	pop    ebp
640098fa:	ret    0xc
640098fd:	int3   
640098fe:	int3   
640098ff:	int3   
64009900:	push   0x48
64009902:	call   0x640137e1
64009907:	add    esp,0x4
6400990a:	test   eax,eax
6400990c:	je     0x64009914
6400990e:	mov    DWORD PTR [eax],0x0
64009914:	lea    ecx,[eax+0x4]
64009917:	test   ecx,ecx
64009919:	je     0x64009921
6400991b:	mov    DWORD PTR [ecx],0x0
64009921:	lea    ecx,[eax+0x8]
64009924:	test   ecx,ecx
64009926:	je     0x6400992e
64009928:	mov    DWORD PTR [ecx],0x0
6400992e:	mov    BYTE PTR [eax+0x44],0x1
64009932:	mov    BYTE PTR [eax+0x45],0x0
64009936:	ret    
64009937:	int3   
64009938:	int3   
64009939:	int3   
6400993a:	int3   
6400993b:	int3   
6400993c:	int3   
6400993d:	int3   
6400993e:	int3   
6400993f:	int3   
64009940:	push   ecx
64009941:	push   ebx
64009942:	push   esi
64009943:	mov    esi,DWORD PTR [esp+0x10]
64009947:	xor    ebx,ebx
64009949:	cmp    BYTE PTR [esi+0x45],bl
6400994c:	push   edi
6400994d:	mov    DWORD PTR [esp+0xc],ecx
64009951:	mov    edi,esi
64009953:	jne    0x640099b6
64009955:	push   ebp
64009956:	lea    ebp,[ebx+0xf]
64009959:	lea    esp,[esp+0x0]
64009960:	mov    eax,DWORD PTR [edi+0x8]
64009963:	mov    ecx,DWORD PTR [esp+0x10]
64009967:	push   eax
64009968:	call   0x64009940
6400996d:	cmp    DWORD PTR [esi+0x40],0x10
64009971:	mov    edi,DWORD PTR [edi]
64009973:	jb     0x64009981
64009975:	mov    ecx,DWORD PTR [esi+0x2c]
64009978:	push   ecx
64009979:	call   0x64013402
6400997e:	add    esp,0x4
64009981:	mov    DWORD PTR [esi+0x40],ebp
64009984:	mov    DWORD PTR [esi+0x3c],ebx
64009987:	mov    BYTE PTR [esi+0x2c],bl
6400998a:	cmp    DWORD PTR [esi+0x24],0x10
6400998e:	jb     0x6400999c
64009990:	mov    edx,DWORD PTR [esi+0x10]
64009993:	push   edx
64009994:	call   0x64013402
64009999:	add    esp,0x4
6400999c:	mov    DWORD PTR [esi+0x24],ebp
6400999f:	mov    DWORD PTR [esi+0x20],ebx
640099a2:	push   esi
640099a3:	mov    BYTE PTR [esi+0x10],bl
640099a6:	call   0x64013402
640099ab:	add    esp,0x4
640099ae:	cmp    BYTE PTR [edi+0x45],bl
640099b1:	mov    esi,edi
640099b3:	je     0x64009960
640099b5:	pop    ebp
640099b6:	pop    edi
640099b7:	pop    esi
640099b8:	pop    ebx
640099b9:	pop    ecx
640099ba:	ret    0x4
640099bd:	int3   
640099be:	int3   
640099bf:	int3   
640099c0:	push   ecx
640099c1:	push   ebx
640099c2:	push   esi
640099c3:	mov    esi,DWORD PTR [esp+0x10]
640099c7:	xor    ebx,ebx
640099c9:	cmp    BYTE PTR [esi+0x45],bl
640099cc:	push   edi
640099cd:	mov    DWORD PTR [esp+0xc],ecx
640099d1:	mov    edi,esi
640099d3:	jne    0x64009a38
640099d5:	push   ebp
640099d6:	lea    ebp,[ebx+0x7]
640099d9:	lea    esp,[esp+0x0]
640099e0:	mov    eax,DWORD PTR [edi+0x8]
640099e3:	mov    ecx,DWORD PTR [esp+0x10]
640099e7:	push   eax
640099e8:	call   0x640099c0
640099ed:	cmp    DWORD PTR [esi+0x40],0x8
640099f1:	mov    edi,DWORD PTR [edi]
640099f3:	jb     0x64009a01
640099f5:	mov    ecx,DWORD PTR [esi+0x2c]
640099f8:	push   ecx
640099f9:	call   0x64013402
640099fe:	add    esp,0x4
64009a01:	mov    DWORD PTR [esi+0x40],ebp
64009a04:	mov    DWORD PTR [esi+0x3c],ebx
64009a07:	mov    WORD PTR [esi+0x2c],bx
64009a0b:	cmp    DWORD PTR [esi+0x24],0x8
64009a0f:	jb     0x64009a1d
64009a11:	mov    edx,DWORD PTR [esi+0x10]
64009a14:	push   edx
64009a15:	call   0x64013402
64009a1a:	add    esp,0x4
64009a1d:	mov    DWORD PTR [esi+0x24],ebp
64009a20:	mov    DWORD PTR [esi+0x20],ebx
64009a23:	push   esi
64009a24:	mov    WORD PTR [esi+0x10],bx
64009a28:	call   0x64013402
64009a2d:	add    esp,0x4
64009a30:	cmp    BYTE PTR [edi+0x45],bl
64009a33:	mov    esi,edi
64009a35:	je     0x640099e0
64009a37:	pop    ebp
64009a38:	pop    edi
64009a39:	pop    esi
64009a3a:	pop    ebx
64009a3b:	pop    ecx
64009a3c:	ret    0x4
64009a3f:	int3   
64009a40:	mov    eax,DWORD PTR [esp+0x4]
64009a44:	mov    ecx,DWORD PTR [eax]
64009a46:	cmp    BYTE PTR [ecx+0x45],0x0
64009a4a:	jne    0x64009a5a
64009a4c:	lea    esp,[esp+0x0]
64009a50:	mov    eax,ecx
64009a52:	mov    ecx,DWORD PTR [eax]
64009a54:	cmp    BYTE PTR [ecx+0x45],0x0
64009a58:	je     0x64009a50
64009a5a:	ret    
64009a5b:	int3   
64009a5c:	int3   
64009a5d:	int3   
64009a5e:	int3   
64009a5f:	int3   
64009a60:	push   esi
64009a61:	mov    esi,ecx
64009a63:	cmp    DWORD PTR [esi],0x0
64009a66:	jne    0x64009a6d
64009a68:	call   0x640137b8
64009a6d:	mov    eax,DWORD PTR [esi+0x4]
64009a70:	cmp    BYTE PTR [eax+0x45],0x0
64009a74:	je     0x64009a7c
64009a76:	pop    esi
64009a77:	jmp    0x640137b8
64009a7c:	mov    ecx,DWORD PTR [eax+0x8]
64009a7f:	cmp    BYTE PTR [ecx+0x45],0x0
64009a83:	jne    0x64009a9f
64009a85:	mov    eax,DWORD PTR [ecx]
64009a87:	cmp    BYTE PTR [eax+0x45],0x0
64009a8b:	jne    0x64009a9a
64009a8d:	lea    ecx,[ecx+0x0]
64009a90:	mov    ecx,eax
64009a92:	mov    eax,DWORD PTR [ecx]
64009a94:	cmp    BYTE PTR [eax+0x45],0x0
64009a98:	je     0x64009a90
64009a9a:	mov    DWORD PTR [esi+0x4],ecx
64009a9d:	pop    esi
64009a9e:	ret    
64009a9f:	mov    eax,DWORD PTR [eax+0x4]
64009aa2:	cmp    BYTE PTR [eax+0x45],0x0
64009aa6:	jne    0x64009abe
64009aa8:	mov    ecx,DWORD PTR [esi+0x4]
64009aab:	cmp    ecx,DWORD PTR [eax+0x8]
64009aae:	jne    0x64009abe
64009ab0:	mov    DWORD PTR [esi+0x4],eax
64009ab3:	mov    edx,eax
64009ab5:	mov    eax,DWORD PTR [edx+0x4]
64009ab8:	cmp    BYTE PTR [eax+0x45],0x0
64009abc:	je     0x64009aa8
64009abe:	mov    DWORD PTR [esi+0x4],eax
64009ac1:	pop    esi
64009ac2:	ret    
64009ac3:	int3   
64009ac4:	int3   
64009ac5:	int3   
64009ac6:	int3   
64009ac7:	int3   
64009ac8:	int3   
64009ac9:	int3   
64009aca:	int3   
64009acb:	int3   
64009acc:	int3   
64009acd:	int3   
64009ace:	int3   
64009acf:	int3   
64009ad0:	push   0xffffffff
64009ad2:	push   0x64023868
64009ad7:	mov    eax,fs:0x0
64009add:	push   eax
64009ade:	sub    esp,0x20
64009ae1:	push   ebx
64009ae2:	push   ebp
64009ae3:	mov    eax,ds:0x6402f09c
64009ae8:	xor    eax,esp
64009aea:	push   eax
64009aeb:	lea    eax,[esp+0x2c]
64009aef:	mov    fs:0x0,eax
64009af5:	mov    eax,DWORD PTR [esp+0x3c]
64009af9:	xor    ebx,ebx
64009afb:	push   0xffffffff
64009afd:	push   ebx
64009afe:	push   eax
64009aff:	lea    ecx,[esp+0x1c]
64009b03:	mov    DWORD PTR [esp+0x18],ebx
64009b07:	mov    DWORD PTR [esp+0x34],0xf
64009b0f:	mov    DWORD PTR [esp+0x30],ebx
64009b13:	mov    BYTE PTR [esp+0x20],bl
64009b17:	call   0x64001780
64009b1c:	mov    eax,edi
64009b1e:	mov    DWORD PTR [esp+0x34],ebx
64009b22:	lea    ebp,[eax+0x1]
64009b25:	mov    cl,BYTE PTR [eax]
64009b27:	add    eax,0x1
64009b2a:	cmp    cl,bl
64009b2c:	jne    0x64009b25
64009b2e:	sub    eax,ebp
64009b30:	push   eax
64009b31:	push   edi
64009b32:	lea    eax,[esp+0x18]
64009b36:	call   0x64009f50
64009b3b:	push   0xffffffff
64009b3d:	push   ebx
64009b3e:	mov    DWORD PTR [esi+0x18],0xf
64009b45:	mov    DWORD PTR [esi+0x14],ebx
64009b48:	push   eax
64009b49:	mov    ecx,esi
64009b4b:	mov    BYTE PTR [esi+0x4],bl
64009b4e:	call   0x64001780
64009b53:	cmp    DWORD PTR [esp+0x28],0x10
64009b58:	jb     0x64009b67
64009b5a:	mov    ecx,DWORD PTR [esp+0x14]
64009b5e:	push   ecx
64009b5f:	call   0x64013402
64009b64:	add    esp,0x4
64009b67:	mov    eax,esi
64009b69:	mov    ecx,DWORD PTR [esp+0x2c]
64009b6d:	mov    DWORD PTR fs:0x0,ecx
64009b74:	pop    ecx
64009b75:	pop    ebp
64009b76:	pop    ebx
64009b77:	add    esp,0x2c
64009b7a:	ret    
64009b7b:	int3   
64009b7c:	int3   
64009b7d:	int3   
64009b7e:	int3   
64009b7f:	int3   
64009b80:	push   0xffffffff
64009b82:	push   0x64023840
64009b87:	mov    eax,fs:0x0
64009b8d:	push   eax
64009b8e:	push   ecx
64009b8f:	push   esi
64009b90:	mov    eax,ds:0x6402f09c
64009b95:	xor    eax,esp
64009b97:	push   eax
64009b98:	lea    eax,[esp+0xc]
64009b9c:	mov    fs:0x0,eax
64009ba2:	mov    esi,DWORD PTR [esp+0x1c]
64009ba6:	mov    DWORD PTR [esp+0x8],0x0
64009bae:	lea    eax,[esp+0x3c]
64009bb2:	push   eax
64009bb3:	lea    ecx,[esp+0x24]
64009bb7:	push   ecx
64009bb8:	mov    ecx,esi
64009bba:	mov    DWORD PTR [esp+0x1c],0x1
64009bc2:	call   0x64009dc0
64009bc7:	cmp    DWORD PTR [esp+0x38],0x10
64009bcc:	jb     0x64009bdb
64009bce:	mov    edx,DWORD PTR [esp+0x24]
64009bd2:	push   edx
64009bd3:	call   0x64013402
64009bd8:	add    esp,0x4
64009bdb:	cmp    DWORD PTR [esp+0x54],0x10
64009be0:	mov    DWORD PTR [esp+0x38],0xf
64009be8:	mov    DWORD PTR [esp+0x34],0x0
64009bf0:	mov    BYTE PTR [esp+0x24],0x0
64009bf5:	jb     0x64009c04
64009bf7:	mov    eax,DWORD PTR [esp+0x40]
64009bfb:	push   eax
64009bfc:	call   0x64013402
64009c01:	add    esp,0x4
64009c04:	mov    eax,esi
64009c06:	mov    ecx,DWORD PTR [esp+0xc]
64009c0a:	mov    DWORD PTR fs:0x0,ecx
64009c11:	pop    ecx
64009c12:	pop    esi
64009c13:	add    esp,0x10
64009c16:	ret    
64009c17:	int3   
64009c18:	int3   
64009c19:	int3   
64009c1a:	int3   
64009c1b:	int3   
64009c1c:	int3   
64009c1d:	int3   
64009c1e:	int3   
64009c1f:	int3   
64009c20:	push   0xffffffff
64009c22:	push   0x64023808
64009c27:	mov    eax,fs:0x0
64009c2d:	push   eax
64009c2e:	push   ecx
64009c2f:	push   ebx
64009c30:	push   esi
64009c31:	push   edi
64009c32:	mov    eax,ds:0x6402f09c
64009c37:	xor    eax,esp
64009c39:	push   eax
64009c3a:	lea    eax,[esp+0x14]
64009c3e:	mov    fs:0x0,eax
64009c44:	mov    esi,ecx
64009c46:	mov    DWORD PTR [esp+0x10],esi
64009c4a:	mov    edi,DWORD PTR [esp+0x24]
64009c4e:	xor    ebx,ebx
64009c50:	push   0xffffffff
64009c52:	push   ebx
64009c53:	mov    DWORD PTR [esi+0x18],0xf
64009c5a:	mov    DWORD PTR [esi+0x14],ebx
64009c5d:	push   edi
64009c5e:	mov    BYTE PTR [esi+0x4],bl
64009c61:	call   0x64001780
64009c66:	push   0xffffffff
64009c68:	lea    ecx,[esi+0x1c]
64009c6b:	mov    DWORD PTR [esp+0x20],ebx
64009c6f:	lea    eax,[edi+0x1c]
64009c72:	push   ebx
64009c73:	mov    DWORD PTR [ecx+0x18],0xf
64009c7a:	mov    DWORD PTR [ecx+0x14],ebx
64009c7d:	push   eax
64009c7e:	mov    BYTE PTR [ecx+0x4],bl
64009c81:	call   0x64001780
64009c86:	mov    eax,esi
64009c88:	mov    ecx,DWORD PTR [esp+0x14]
64009c8c:	mov    DWORD PTR fs:0x0,ecx
64009c93:	pop    ecx
64009c94:	pop    edi
64009c95:	pop    esi
64009c96:	pop    ebx
64009c97:	add    esp,0x10
64009c9a:	ret    0x4
64009c9d:	int3   
64009c9e:	int3   
64009c9f:	int3   
64009ca0:	push   0xffffffff
64009ca2:	push   0x64023bb0
64009ca7:	mov    eax,fs:0x0
64009cad:	push   eax
64009cae:	push   ecx
64009caf:	push   esi
64009cb0:	mov    eax,ds:0x6402f09c
64009cb5:	xor    eax,esp
64009cb7:	push   eax
64009cb8:	lea    eax,[esp+0xc]
64009cbc:	mov    fs:0x0,eax
64009cc2:	mov    esi,DWORD PTR [esp+0x1c]
64009cc6:	mov    DWORD PTR [esp+0x8],0x0
64009cce:	lea    eax,[esp+0x3c]
64009cd2:	push   eax
64009cd3:	lea    ecx,[esp+0x24]
64009cd7:	push   ecx
64009cd8:	mov    ecx,esi
64009cda:	mov    DWORD PTR [esp+0x1c],0x1
64009ce2:	call   0x64009e40
64009ce7:	cmp    DWORD PTR [esp+0x38],0x8
64009cec:	jb     0x64009cfb
64009cee:	mov    edx,DWORD PTR [esp+0x24]
64009cf2:	push   edx
64009cf3:	call   0x64013402
64009cf8:	add    esp,0x4
64009cfb:	cmp    DWORD PTR [esp+0x54],0x8
64009d00:	mov    DWORD PTR [esp+0x38],0x7
64009d08:	mov    DWORD PTR [esp+0x34],0x0
64009d10:	mov    WORD PTR [esp+0x24],0x0
64009d17:	jb     0x64009d26
64009d19:	mov    eax,DWORD PTR [esp+0x40]
64009d1d:	push   eax
64009d1e:	call   0x64013402
64009d23:	add    esp,0x4
64009d26:	mov    eax,esi
64009d28:	mov    ecx,DWORD PTR [esp+0xc]
64009d2c:	mov    DWORD PTR fs:0x0,ecx
64009d33:	pop    ecx
64009d34:	pop    esi
64009d35:	add    esp,0x10
64009d38:	ret    
64009d39:	int3   
64009d3a:	int3   
64009d3b:	int3   
64009d3c:	int3   
64009d3d:	int3   
64009d3e:	int3   
64009d3f:	int3   
64009d40:	push   0xffffffff
64009d42:	push   0x64023b78
64009d47:	mov    eax,fs:0x0
64009d4d:	push   eax
64009d4e:	push   ecx
64009d4f:	push   ebx
64009d50:	push   esi
64009d51:	push   edi
64009d52:	mov    eax,ds:0x6402f09c
64009d57:	xor    eax,esp
64009d59:	push   eax
64009d5a:	lea    eax,[esp+0x14]
64009d5e:	mov    fs:0x0,eax
64009d64:	mov    esi,ecx
64009d66:	mov    DWORD PTR [esp+0x10],esi
64009d6a:	mov    ebx,DWORD PTR [esp+0x24]
64009d6e:	xor    edi,edi
64009d70:	push   0xffffffff
64009d72:	push   edi
64009d73:	mov    DWORD PTR [esi+0x18],0x7
64009d7a:	mov    DWORD PTR [esi+0x14],edi
64009d7d:	push   ebx
64009d7e:	mov    WORD PTR [esi+0x4],di
64009d82:	call   0x64008390
64009d87:	push   0xffffffff
64009d89:	lea    ecx,[esi+0x1c]
64009d8c:	mov    DWORD PTR [esp+0x20],edi
64009d90:	lea    eax,[ebx+0x1c]
64009d93:	push   edi
64009d94:	mov    DWORD PTR [ecx+0x18],0x7
64009d9b:	mov    DWORD PTR [ecx+0x14],edi
64009d9e:	push   eax
64009d9f:	mov    WORD PTR [ecx+0x4],di
64009da3:	call   0x64008390
64009da8:	mov    eax,esi
64009daa:	mov    ecx,DWORD PTR [esp+0x14]
64009dae:	mov    DWORD PTR fs:0x0,ecx
64009db5:	pop    ecx
64009db6:	pop    edi
64009db7:	pop    esi
64009db8:	pop    ebx
64009db9:	add    esp,0x10
64009dbc:	ret    0x4
64009dbf:	int3   
64009dc0:	push   0xffffffff
64009dc2:	push   0x640237d8
64009dc7:	mov    eax,fs:0x0
64009dcd:	push   eax
64009dce:	push   ecx
64009dcf:	push   ebx
64009dd0:	push   esi
64009dd1:	mov    eax,ds:0x6402f09c
64009dd6:	xor    eax,esp
64009dd8:	push   eax
64009dd9:	lea    eax,[esp+0x10]
64009ddd:	mov    fs:0x0,eax
64009de3:	mov    esi,ecx
64009de5:	mov    DWORD PTR [esp+0xc],esi
64009de9:	mov    eax,DWORD PTR [esp+0x20]
64009ded:	xor    ebx,ebx
64009def:	push   0xffffffff
64009df1:	push   ebx
64009df2:	mov    DWORD PTR [esi+0x18],0xf
64009df9:	mov    DWORD PTR [esi+0x14],ebx
64009dfc:	push   eax
64009dfd:	mov    BYTE PTR [esi+0x4],bl
64009e00:	call   0x64001780
64009e05:	mov    edx,DWORD PTR [esp+0x24]
64009e09:	push   0xffffffff
64009e0b:	lea    ecx,[esi+0x1c]
64009e0e:	mov    DWORD PTR [esp+0x1c],ebx
64009e12:	push   ebx
64009e13:	mov    DWORD PTR [ecx+0x18],0xf
64009e1a:	mov    DWORD PTR [ecx+0x14],ebx
64009e1d:	push   edx
64009e1e:	mov    BYTE PTR [ecx+0x4],bl
64009e21:	call   0x64001780
64009e26:	mov    eax,esi
64009e28:	mov    ecx,DWORD PTR [esp+0x10]
64009e2c:	mov    DWORD PTR fs:0x0,ecx
64009e33:	pop    ecx
64009e34:	pop    esi
64009e35:	pop    ebx
64009e36:	add    esp,0x10
64009e39:	ret    0x8
64009e3c:	int3   
64009e3d:	int3   
64009e3e:	int3   
64009e3f:	int3   
64009e40:	push   0xffffffff
64009e42:	push   0x64023b48
64009e47:	mov    eax,fs:0x0
64009e4d:	push   eax
64009e4e:	push   ecx
64009e4f:	push   esi
64009e50:	push   edi
64009e51:	mov    eax,ds:0x6402f09c
64009e56:	xor    eax,esp
64009e58:	push   eax
64009e59:	lea    eax,[esp+0x10]
64009e5d:	mov    fs:0x0,eax
64009e63:	mov    esi,ecx
64009e65:	mov    DWORD PTR [esp+0xc],esi
64009e69:	mov    eax,DWORD PTR [esp+0x20]
64009e6d:	xor    edi,edi
64009e6f:	push   0xffffffff
64009e71:	push   edi
64009e72:	mov    DWORD PTR [esi+0x18],0x7
64009e79:	mov    DWORD PTR [esi+0x14],edi
64009e7c:	push   eax
64009e7d:	mov    WORD PTR [esi+0x4],di
64009e81:	call   0x64008390
64009e86:	mov    edx,DWORD PTR [esp+0x24]
64009e8a:	push   0xffffffff
64009e8c:	lea    ecx,[esi+0x1c]
64009e8f:	mov    DWORD PTR [esp+0x1c],edi
64009e93:	push   edi
64009e94:	mov    DWORD PTR [ecx+0x18],0x7
64009e9b:	mov    DWORD PTR [ecx+0x14],edi
64009e9e:	push   edx
64009e9f:	mov    WORD PTR [ecx+0x4],di
64009ea3:	call   0x64008390
64009ea8:	mov    eax,esi
64009eaa:	mov    ecx,DWORD PTR [esp+0x10]
64009eae:	mov    DWORD PTR fs:0x0,ecx
64009eb5:	pop    ecx
64009eb6:	pop    edi
64009eb7:	pop    esi
64009eb8:	add    esp,0x10
64009ebb:	ret    0x8
64009ebe:	int3   
64009ebf:	int3   
64009ec0:	push   ebx
64009ec1:	push   ebp
64009ec2:	push   esi
64009ec3:	push   edi
64009ec4:	mov    edi,DWORD PTR [esp+0x14]
64009ec8:	mov    esi,ecx
64009eca:	cmp    DWORD PTR [esi+0x14],edi
64009ecd:	jae    0x64009ed4
64009ecf:	call   0x640133be
64009ed4:	mov    eax,DWORD PTR [esi+0x14]
64009ed7:	mov    ebx,DWORD PTR [esp+0x18]
64009edb:	sub    eax,edi
64009edd:	cmp    eax,ebx
64009edf:	jae    0x64009ee3
64009ee1:	mov    ebx,eax
64009ee3:	mov    ebp,DWORD PTR [esp+0x20]
64009ee7:	cmp    ebx,ebp
64009ee9:	mov    edx,ebx
64009eeb:	jb     0x64009eef
64009eed:	mov    edx,ebp
64009eef:	cmp    DWORD PTR [esi+0x18],0x8
64009ef3:	jb     0x64009efa
64009ef5:	mov    eax,DWORD PTR [esi+0x4]
64009ef8:	jmp    0x64009efd
64009efa:	lea    eax,[esi+0x4]
64009efd:	test   edx,edx
64009eff:	mov    ecx,DWORD PTR [esp+0x1c]
64009f03:	lea    eax,[eax+edi*2]
64009f06:	jbe    0x64009f2d
64009f08:	mov    si,WORD PTR [eax]
64009f0b:	cmp    si,WORD PTR [ecx]
64009f0e:	jne    0x64009f1d
64009f10:	add    eax,0x2
64009f13:	add    ecx,0x2
64009f16:	sub    edx,0x1
64009f19:	jne    0x64009f08
64009f1b:	jmp    0x64009f2d
64009f1d:	movzx  eax,WORD PTR [eax]
64009f20:	cmp    ax,WORD PTR [ecx]
64009f23:	sbb    eax,eax
64009f25:	and    eax,0xfffffffe
64009f28:	add    eax,0x1
64009f2b:	jne    0x64009f42
64009f2d:	cmp    ebx,ebp
64009f2f:	jae    0x64009f3b
64009f31:	pop    edi
64009f32:	pop    esi
64009f33:	pop    ebp
64009f34:	or     eax,0xffffffff
64009f37:	pop    ebx
64009f38:	ret    0x10
64009f3b:	xor    eax,eax
64009f3d:	cmp    ebx,ebp
64009f3f:	setne  al
64009f42:	pop    edi
64009f43:	pop    esi
64009f44:	pop    ebp
64009f45:	pop    ebx
64009f46:	ret    0x10
64009f49:	int3   
64009f4a:	int3   
64009f4b:	int3   
64009f4c:	int3   
64009f4d:	int3   
64009f4e:	int3   
64009f4f:	int3   
64009f50:	mov    ecx,DWORD PTR [esp+0x4]
64009f54:	push   ebx
64009f55:	push   ebp
64009f56:	mov    ebp,DWORD PTR [esp+0x10]
64009f5a:	push   esi
64009f5b:	mov    esi,eax
64009f5d:	mov    edx,DWORD PTR [esi+0x18]
64009f60:	cmp    edx,0x10
64009f63:	push   edi
64009f64:	lea    ebx,[esi+0x4]
64009f67:	jb     0x64009f6d
64009f69:	mov    eax,DWORD PTR [ebx]
64009f6b:	jmp    0x64009f6f
64009f6d:	mov    eax,ebx
64009f6f:	cmp    ecx,eax
64009f71:	jb     0x64009fa0
64009f73:	cmp    edx,0x10
64009f76:	jb     0x64009f7c
64009f78:	mov    eax,DWORD PTR [ebx]
64009f7a:	jmp    0x64009f7e
64009f7c:	mov    eax,ebx
64009f7e:	mov    edi,DWORD PTR [esi+0x14]
64009f81:	add    edi,eax
64009f83:	cmp    edi,ecx
64009f85:	jbe    0x64009fa0
64009f87:	cmp    edx,0x10
64009f8a:	jb     0x64009f8e
64009f8c:	mov    ebx,DWORD PTR [ebx]
64009f8e:	sub    ecx,ebx
64009f90:	push   ecx
64009f91:	push   esi
64009f92:	mov    eax,ebp
64009f94:	call   0x640019d0
64009f99:	pop    edi
64009f9a:	pop    esi
64009f9b:	pop    ebp
64009f9c:	pop    ebx
64009f9d:	ret    0x8
64009fa0:	mov    eax,DWORD PTR [esi+0x14]
64009fa3:	or     ecx,0xffffffff
64009fa6:	sub    ecx,eax
64009fa8:	cmp    ecx,ebp
64009faa:	jbe    0x64009fb3
64009fac:	lea    edx,[eax+ebp*1]
64009faf:	cmp    edx,eax
64009fb1:	jae    0x64009fb8
64009fb3:	call   0x6401337f
64009fb8:	test   ebp,ebp
64009fba:	jbe    0x6400a030
64009fbc:	mov    edi,DWORD PTR [esi+0x14]
64009fbf:	add    edi,ebp
64009fc1:	cmp    edi,0xfffffffe
64009fc4:	jbe    0x64009fcb
64009fc6:	call   0x6401337f
64009fcb:	mov    eax,DWORD PTR [esi+0x18]
64009fce:	cmp    eax,edi
64009fd0:	jae    0x64009fee
64009fd2:	mov    eax,DWORD PTR [esi+0x14]
64009fd5:	push   eax
64009fd6:	push   edi
64009fd7:	mov    ecx,esi
64009fd9:	call   0x64001b60
64009fde:	test   edi,edi
64009fe0:	jbe    0x6400a030
64009fe2:	mov    eax,DWORD PTR [esi+0x18]
64009fe5:	cmp    eax,0x10
64009fe8:	jb     0x6400a008
64009fea:	mov    edx,DWORD PTR [ebx]
64009fec:	jmp    0x6400a00a
64009fee:	test   edi,edi
64009ff0:	jne    0x64009fe0
64009ff2:	cmp    eax,0x10
64009ff5:	mov    DWORD PTR [esi+0x14],edi
64009ff8:	jb     0x64009ffc
64009ffa:	mov    ebx,DWORD PTR [ebx]
64009ffc:	pop    edi
64009ffd:	mov    eax,esi
64009fff:	pop    esi
6400a000:	pop    ebp
6400a001:	mov    BYTE PTR [ebx],0x0
6400a004:	pop    ebx
6400a005:	ret    0x8
6400a008:	mov    edx,ebx
6400a00a:	mov    ecx,DWORD PTR [esi+0x14]
6400a00d:	push   ebp
6400a00e:	mov    ebp,DWORD PTR [esp+0x18]
6400a012:	sub    eax,ecx
6400a014:	push   ebp
6400a015:	push   eax
6400a016:	add    ecx,edx
6400a018:	push   ecx
6400a019:	call   0x640135b8
6400a01e:	add    esp,0x10
6400a021:	cmp    DWORD PTR [esi+0x18],0x10
6400a025:	mov    DWORD PTR [esi+0x14],edi
6400a028:	jb     0x6400a02c
6400a02a:	mov    ebx,DWORD PTR [ebx]
6400a02c:	mov    BYTE PTR [ebx+edi*1],0x0
6400a030:	pop    edi
6400a031:	mov    eax,esi
6400a033:	pop    esi
6400a034:	pop    ebp
6400a035:	pop    ebx
6400a036:	ret    0x8
6400a039:	int3   
6400a03a:	int3   
6400a03b:	int3   
6400a03c:	int3   
6400a03d:	int3   
6400a03e:	int3   
6400a03f:	int3   
6400a040:	push   ebp
6400a041:	mov    ebp,DWORD PTR [esp+0x14]
6400a045:	push   esi
6400a046:	mov    esi,DWORD PTR [esp+0x10]
6400a04a:	push   edi
6400a04b:	mov    edi,DWORD PTR [esp+0x10]
6400a04f:	nop
6400a050:	test   edi,edi
6400a052:	je     0x6400a05a
6400a054:	cmp    edi,DWORD PTR [esp+0x18]
6400a058:	je     0x6400a05f
6400a05a:	call   0x640137b8
6400a05f:	cmp    esi,ebp
6400a061:	je     0x6400a0bb
6400a063:	add    DWORD PTR [ebx],0x1
6400a066:	test   edi,edi
6400a068:	jne    0x6400a06f
6400a06a:	call   0x640137b8
6400a06f:	cmp    BYTE PTR [esi+0x29],0x0
6400a073:	je     0x6400a07c
6400a075:	call   0x640137b8
6400a07a:	jmp    0x6400a050
6400a07c:	mov    ecx,DWORD PTR [esi+0x8]
6400a07f:	cmp    BYTE PTR [ecx+0x29],0x0
6400a083:	jne    0x6400a09e
6400a085:	mov    eax,DWORD PTR [ecx]
6400a087:	cmp    BYTE PTR [eax+0x29],0x0
6400a08b:	jne    0x6400a09a
6400a08d:	lea    ecx,[ecx+0x0]
6400a090:	mov    ecx,eax
6400a092:	mov    eax,DWORD PTR [ecx]
6400a094:	cmp    BYTE PTR [eax+0x29],0x0
6400a098:	je     0x6400a090
6400a09a:	mov    esi,ecx
6400a09c:	jmp    0x6400a050
6400a09e:	mov    eax,DWORD PTR [esi+0x4]
6400a0a1:	cmp    BYTE PTR [eax+0x29],0x0
6400a0a5:	jne    0x6400a0b7
6400a0a7:	cmp    esi,DWORD PTR [eax+0x8]
6400a0aa:	jne    0x6400a0b7
6400a0ac:	mov    esi,eax
6400a0ae:	mov    eax,DWORD PTR [eax+0x4]
6400a0b1:	cmp    BYTE PTR [eax+0x29],0x0
6400a0b5:	je     0x6400a0a7
6400a0b7:	mov    esi,eax
6400a0b9:	jmp    0x6400a050
6400a0bb:	pop    edi
6400a0bc:	pop    esi
6400a0bd:	pop    ebp
6400a0be:	ret    
6400a0bf:	int3   
6400a0c0:	push   esi
6400a0c1:	mov    esi,ecx
6400a0c3:	call   0x6400d9f0
6400a0c8:	call   eax
6400a0ca:	mov    DWORD PTR [esi],eax
6400a0cc:	mov    eax,esi
6400a0ce:	pop    esi
6400a0cf:	ret    
6400a0d0:	mov    eax,DWORD PTR [ecx]
6400a0d2:	push   eax
6400a0d3:	call   0x6400dad0
6400a0d8:	call   eax
6400a0da:	ret    
6400a0db:	int3   
6400a0dc:	int3   
6400a0dd:	int3   
6400a0de:	int3   
6400a0df:	int3   
6400a0e0:	push   ebp
6400a0e1:	mov    ebp,esp
6400a0e3:	and    esp,0xfffffff8
6400a0e6:	push   0xffffffff
6400a0e8:	push   0x640248b0
6400a0ed:	mov    eax,fs:0x0
6400a0f3:	push   eax
6400a0f4:	sub    esp,0x68
6400a0f7:	mov    eax,ds:0x6402f09c
6400a0fc:	xor    eax,esp
6400a0fe:	mov    DWORD PTR [esp+0x60],eax
6400a102:	push   ebx
6400a103:	push   esi
6400a104:	push   edi
6400a105:	mov    eax,ds:0x6402f09c
6400a10a:	xor    eax,esp
6400a10c:	push   eax
6400a10d:	lea    eax,[esp+0x78]
6400a111:	mov    fs:0x0,eax
6400a117:	mov    eax,DWORD PTR [ebp+0x14]
6400a11a:	mov    ebx,DWORD PTR [ebp+0xc]
6400a11d:	mov    DWORD PTR [esp+0x1c],ecx
6400a121:	mov    DWORD PTR [esp+0x18],eax
6400a125:	call   DWORD PTR ds:0x6402605c
6400a12b:	lea    ecx,[esp+0x44]
6400a12f:	push   ecx
6400a130:	mov    DWORD PTR [esp+0x24],eax
6400a134:	call   0x6400fcf0
6400a139:	call   eax
6400a13b:	xor    edi,edi
6400a13d:	mov    DWORD PTR [esp+0x6c],0xf
6400a145:	mov    DWORD PTR [esp+0x68],edi
6400a149:	mov    BYTE PTR [esp+0x58],0x0
6400a14e:	mov    ecx,DWORD PTR [ebp+0x10]
6400a151:	mov    eax,0x8d3dcb09
6400a156:	mul    ecx
6400a158:	mov    esi,edx
6400a15a:	shr    esi,0x8
6400a15d:	lea    eax,[esi+0x1]
6400a160:	cmp    eax,edi
6400a162:	mov    DWORD PTR [esp+0x80],edi
6400a169:	mov    BYTE PTR [esp+0x13],0x1
6400a16e:	je     0x6400a234
6400a174:	mov    edx,0x1d0
6400a179:	sub    edx,ebx
6400a17b:	mov    DWORD PTR [esp+0x14],ebx
6400a17f:	mov    DWORD PTR [esp+0x24],edx
6400a183:	mov    eax,DWORD PTR [esp+0x14]
6400a187:	add    eax,edx
6400a189:	cmp    eax,ecx
6400a18b:	jb     0x6400a286
6400a191:	mov    eax,esi
6400a193:	imul   eax,eax,0x1d0
6400a199:	mov    ebx,ecx
6400a19b:	sub    ebx,eax
6400a19d:	test   ebx,ebx
6400a19f:	je     0x6400a21c
6400a1a1:	or     ecx,0xffffffff
6400a1a4:	cmp    DWORD PTR [ebp+0x18],ecx
6400a1a7:	je     0x6400a1c0
6400a1a9:	call   DWORD PTR ds:0x6402605c
6400a1af:	sub    eax,DWORD PTR [esp+0x20]
6400a1b3:	mov    ecx,DWORD PTR [ebp+0x18]
6400a1b6:	cmp    eax,ecx
6400a1b8:	ja     0x6400a290
6400a1be:	sub    ecx,eax
6400a1c0:	mov    edx,DWORD PTR [esp+0x44]
6400a1c4:	sub    esp,0x10
6400a1c7:	mov    eax,esp
6400a1c9:	mov    DWORD PTR [eax],edx
6400a1cb:	mov    edx,DWORD PTR [esp+0x58]
6400a1cf:	mov    DWORD PTR [eax+0x4],edx
6400a1d2:	mov    edx,DWORD PTR [esp+0x5c]
6400a1d6:	mov    DWORD PTR [eax+0x8],edx
6400a1d9:	mov    edx,DWORD PTR [esp+0x60]
6400a1dd:	mov    DWORD PTR [eax+0xc],edx
6400a1e0:	mov    edx,DWORD PTR [esp+0x24]
6400a1e4:	test   edi,edi
6400a1e6:	setne  al
6400a1e9:	cmp    edi,esi
6400a1eb:	push   eax
6400a1ec:	mov    eax,DWORD PTR [ebp+0x8]
6400a1ef:	push   ecx
6400a1f0:	setb   cl
6400a1f3:	push   ecx
6400a1f4:	mov    ecx,DWORD PTR [esp+0x38]
6400a1f8:	push   edi
6400a1f9:	push   ebx
6400a1fa:	push   edx
6400a1fb:	push   eax
6400a1fc:	push   ecx
6400a1fd:	lea    edx,[esp+0x43]
6400a201:	lea    ecx,[esp+0x84]
6400a208:	call   0x6400a420
6400a20d:	test   al,al
6400a20f:	je     0x6400a2ab
6400a215:	mov    ecx,DWORD PTR [ebp+0x10]
6400a218:	mov    edx,DWORD PTR [esp+0x24]
6400a21c:	add    DWORD PTR [esp+0x14],0x1d0
6400a224:	add    edi,0x1
6400a227:	lea    eax,[esi+0x1]
6400a22a:	cmp    edi,eax
6400a22c:	jne    0x6400a183
6400a232:	xor    edi,edi
6400a234:	mov    esi,DWORD PTR [esp+0x18]
6400a238:	push   edi
6400a239:	lea    ecx,[esp+0x58]
6400a23d:	push   ecx
6400a23e:	or     eax,0xffffffff
6400a241:	call   0x640019d0
6400a246:	cmp    BYTE PTR [esp+0x13],0x0
6400a24b:	je     0x6400a3db
6400a251:	mov    DWORD PTR [esp+0x14],0xfffffffe
6400a259:	lea    esp,[esp+0x0]
6400a260:	mov    esi,0xf
6400a265:	mov    DWORD PTR [esp+0x40],esi
6400a269:	mov    DWORD PTR [esp+0x3c],edi
6400a26d:	mov    BYTE PTR [esp+0x2c],0x0
6400a272:	mov    ebx,DWORD PTR [ebp+0x18]
6400a275:	cmp    ebx,0xffffffff
6400a278:	mov    BYTE PTR [esp+0x80],0x1
6400a280:	jne    0x6400a2c6
6400a282:	or     ecx,ebx
6400a284:	jmp    0x6400a2dc
6400a286:	mov    ebx,0x1d0
6400a28b:	jmp    0x6400a1a1
6400a290:	cmp    DWORD PTR [esp+0x6c],0x10
6400a295:	jb     0x6400a2a4
6400a297:	mov    edx,DWORD PTR [esp+0x58]
6400a29b:	push   edx
6400a29c:	call   0x64013402
6400a2a1:	add    esp,0x4
6400a2a4:	xor    al,al
6400a2a6:	jmp    0x6400a3f1
6400a2ab:	cmp    DWORD PTR [esp+0x6c],0x10
6400a2b0:	jb     0x6400a2a4
6400a2b2:	mov    eax,DWORD PTR [esp+0x58]
6400a2b6:	push   eax
6400a2b7:	call   0x64013402
6400a2bc:	add    esp,0x4
6400a2bf:	xor    al,al
6400a2c1:	jmp    0x6400a3f1
6400a2c6:	call   DWORD PTR ds:0x6402605c
6400a2cc:	sub    eax,DWORD PTR [esp+0x20]
6400a2d0:	cmp    eax,ebx
6400a2d2:	ja     0x6400a36b
6400a2d8:	mov    ecx,ebx
6400a2da:	sub    ecx,eax
6400a2dc:	mov    edx,DWORD PTR [esp+0x44]
6400a2e0:	sub    esp,0x10
6400a2e3:	mov    eax,esp
6400a2e5:	mov    DWORD PTR [eax],edx
6400a2e7:	mov    edx,DWORD PTR [esp+0x58]
6400a2eb:	mov    DWORD PTR [eax+0x4],edx
6400a2ee:	mov    edx,DWORD PTR [esp+0x5c]
6400a2f2:	push   0x1
6400a2f4:	push   ecx
6400a2f5:	mov    ecx,DWORD PTR [ebp+0x8]
6400a2f8:	mov    DWORD PTR [eax+0x8],edx
6400a2fb:	mov    edx,DWORD PTR [esp+0x68]
6400a2ff:	push   edi
6400a300:	mov    DWORD PTR [eax+0xc],edx
6400a303:	mov    eax,DWORD PTR [esp+0x30]
6400a307:	mov    edx,DWORD PTR [esp+0x38]
6400a30b:	push   eax
6400a30c:	push   edi
6400a30d:	push   edi
6400a30e:	push   ecx
6400a30f:	push   edx
6400a310:	lea    edx,[esp+0x43]
6400a314:	lea    ecx,[esp+0x58]
6400a318:	call   0x6400a420
6400a31d:	test   al,al
6400a31f:	je     0x6400a399
6400a321:	cmp    DWORD PTR [esp+0x3c],edi
6400a325:	je     0x6400a3c7
6400a32b:	mov    esi,DWORD PTR [esp+0x18]
6400a32f:	push   edi
6400a330:	lea    eax,[esp+0x2c]
6400a334:	push   eax
6400a335:	or     eax,0xffffffff
6400a338:	call   0x640019d0
6400a33d:	mov    BYTE PTR [esp+0x80],0x0
6400a345:	cmp    DWORD PTR [esp+0x40],0x10
6400a34a:	jb     0x6400a359
6400a34c:	mov    ecx,DWORD PTR [esp+0x2c]
6400a350:	push   ecx
6400a351:	call   0x64013402
6400a356:	add    esp,0x4
6400a359:	sub    DWORD PTR [esp+0x14],0x1
6400a35e:	cmp    BYTE PTR [esp+0x13],0x0
6400a363:	jne    0x6400a260
6400a369:	jmp    0x6400a3db
6400a36b:	mov    ebx,0x10
6400a370:	cmp    DWORD PTR [esp+0x40],ebx
6400a374:	jb     0x6400a383
6400a376:	mov    edx,DWORD PTR [esp+0x2c]
6400a37a:	push   edx
6400a37b:	call   0x64013402
6400a380:	add    esp,0x4
6400a383:	cmp    DWORD PTR [esp+0x6c],ebx
6400a387:	mov    DWORD PTR [esp+0x40],esi
6400a38b:	mov    DWORD PTR [esp+0x3c],edi
6400a38f:	mov    BYTE PTR [esp+0x2c],0x0
6400a394:	jmp    0x6400a2b0
6400a399:	mov    ebx,0x10
6400a39e:	cmp    DWORD PTR [esp+0x40],ebx
6400a3a2:	jb     0x6400a3b1
6400a3a4:	mov    ecx,DWORD PTR [esp+0x2c]
6400a3a8:	push   ecx
6400a3a9:	call   0x64013402
6400a3ae:	add    esp,0x4
6400a3b1:	cmp    DWORD PTR [esp+0x6c],ebx
6400a3b5:	mov    DWORD PTR [esp+0x40],esi
6400a3b9:	mov    DWORD PTR [esp+0x3c],edi
6400a3bd:	mov    BYTE PTR [esp+0x2c],0x0
6400a3c2:	jmp    0x6400a295
6400a3c7:	cmp    DWORD PTR [esp+0x40],0x10
6400a3cc:	jb     0x6400a3db
6400a3ce:	mov    eax,DWORD PTR [esp+0x2c]
6400a3d2:	push   eax
6400a3d3:	call   0x64013402
6400a3d8:	add    esp,0x4
6400a3db:	cmp    DWORD PTR [esp+0x6c],0x10
6400a3e0:	jb     0x6400a3ef
6400a3e2:	mov    ecx,DWORD PTR [esp+0x58]
6400a3e6:	push   ecx
6400a3e7:	call   0x64013402
6400a3ec:	add    esp,0x4
6400a3ef:	mov    al,0x1
6400a3f1:	mov    ecx,DWORD PTR [esp+0x78]
6400a3f5:	mov    DWORD PTR fs:0x0,ecx
6400a3fc:	pop    ecx
6400a3fd:	pop    edi
6400a3fe:	pop    esi
6400a3ff:	pop    ebx
6400a400:	mov    ecx,DWORD PTR [esp+0x60]
6400a404:	xor    ecx,esp
6400a406:	call   0x64013c5c
6400a40b:	mov    esp,ebp
6400a40d:	pop    ebp
6400a40e:	ret    0x14
6400a411:	int3   
6400a412:	int3   
6400a413:	int3   
6400a414:	int3   
6400a415:	int3   
6400a416:	int3   
6400a417:	int3   
6400a418:	int3   
6400a419:	int3   
6400a41a:	int3   
6400a41b:	int3   
6400a41c:	int3   
6400a41d:	int3   
6400a41e:	int3   
6400a41f:	int3   
6400a420:	push   0xffffffff
6400a422:	push   0x6402486c
6400a427:	mov    eax,fs:0x0
6400a42d:	push   eax
6400a42e:	mov    eax,0x10074
6400a433:	call   0x64019550
6400a438:	mov    eax,ds:0x6402f09c
6400a43d:	xor    eax,esp
6400a43f:	mov    DWORD PTR [esp+0x10070],eax
6400a446:	push   ebx
6400a447:	push   ebp
6400a448:	push   esi
6400a449:	push   edi
6400a44a:	mov    eax,ds:0x6402f09c
6400a44f:	xor    eax,esp
6400a451:	push   eax
6400a452:	lea    eax,[esp+0x10088]
6400a459:	mov    fs:0x0,eax
6400a45f:	mov    eax,DWORD PTR [esp+0x10098]
6400a466:	mov    esi,DWORD PTR [esp+0x100a0]
6400a46d:	mov    ebp,DWORD PTR ds:0x640261c0
6400a473:	mov    DWORD PTR [esp+0x18],eax
6400a477:	mov    eax,DWORD PTR [esp+0x100b8]
6400a47e:	mov    DWORD PTR [esp+0x2c],ecx
6400a482:	mov    ecx,DWORD PTR [esp+0x100bc]
6400a489:	mov    DWORD PTR [esp+0x28],edx
6400a48d:	mov    edx,DWORD PTR [esp+0x100c0]
6400a494:	mov    DWORD PTR [esp+0x54],eax
6400a498:	mov    eax,DWORD PTR [esp+0x100c4]
6400a49f:	xor    ebx,ebx
6400a4a1:	mov    DWORD PTR [esp+0x1c],esi
6400a4a5:	mov    DWORD PTR [esp+0x58],ecx
6400a4a9:	mov    DWORD PTR [esp+0x5c],edx
6400a4ad:	mov    DWORD PTR [esp+0x60],eax
6400a4b1:	mov    BYTE PTR [esp+0x17],bl
6400a4b5:	xor    edi,edi
6400a4b7:	jmp    0x6400a4c0
6400a4b9:	lea    esp,[esp+0x0]
6400a4c0:	mov    DWORD PTR [esp+0x50],0xf
6400a4c8:	mov    DWORD PTR [esp+0x4c],ebx
6400a4cc:	mov    BYTE PTR [esp+0x3c],bl
6400a4d0:	mov    DWORD PTR [esp+0x10090],ebx
6400a4d7:	mov    edx,DWORD PTR [esp+0x58]
6400a4db:	mov    eax,DWORD PTR [esp+0x5c]
6400a4df:	mov    ecx,DWORD PTR [esp+0x54]
6400a4e3:	mov    DWORD PTR [esp+0x70],eax
6400a4e7:	mov    eax,DWORD PTR [esp+0x100a8]
6400a4ee:	mov    DWORD PTR [esp+0x68],ecx
6400a4f2:	mov    ecx,DWORD PTR [esp+0x60]
6400a4f6:	mov    DWORD PTR [esp+0x6c],edx
6400a4fa:	mov    dl,BYTE PTR [esp+0x100ac]
6400a501:	push   eax
6400a502:	mov    DWORD PTR [esp+0x78],ecx
6400a506:	mov    DWORD PTR [esp+0x7c],eax
6400a50a:	mov    DWORD PTR [esp+0x80],edi
6400a511:	mov    BYTE PTR [esp+0x84],dl
6400a518:	call   ebp
6400a51a:	mov    DWORD PTR [esp+0x78],eax
6400a51e:	mov    eax,DWORD PTR [esp+0x7c]
6400a522:	push   eax
6400a523:	call   ebp
6400a525:	push   0x19
6400a527:	lea    ecx,[esp+0x6c]
6400a52b:	mov    DWORD PTR [esp+0x80],eax
6400a532:	push   ecx
6400a533:	lea    eax,[esp+0x40]
6400a537:	call   0x64009f50
6400a53c:	cmp    esi,ebx
6400a53e:	je     0x6400a552
6400a540:	mov    edx,DWORD PTR [esp+0x100a4]
6400a547:	push   edx
6400a548:	push   esi
6400a549:	lea    eax,[esp+0x40]
6400a54d:	call   0x64009f50
6400a552:	cmp    DWORD PTR [esp+0x50],0x10
6400a557:	mov    eax,DWORD PTR [esp+0x3c]
6400a55b:	jae    0x6400a561
6400a55d:	lea    eax,[esp+0x3c]
6400a561:	mov    ecx,DWORD PTR [esp+0x4c]
6400a565:	push   ecx
6400a566:	push   eax
6400a567:	lea    ecx,[esp+0x2c]
6400a56b:	lea    ebx,[esp+0x38]
6400a56f:	call   0x6400d6e0
6400a574:	mov    edx,DWORD PTR [eax]
6400a576:	mov    esi,edx
6400a578:	mov    DWORD PTR [eax],0x0
6400a57e:	mov    DWORD PTR [esp+0x28],esi
6400a582:	mov    BYTE PTR [esp+0x10098],0x1
6400a58a:	mov    eax,DWORD PTR [esp+0x38]
6400a58e:	push   eax
6400a58f:	call   0x64013402
6400a594:	add    esp,0xc
6400a597:	lea    ecx,[esp+0x34]
6400a59b:	push   0x0
6400a59d:	push   ecx
6400a59e:	mov    DWORD PTR [esp+0x3c],0x0
6400a5a6:	call   0x6400eb70
6400a5ab:	call   eax
6400a5ad:	test   eax,eax
6400a5af:	je     0x6400a63e
6400a5b5:	mov    eax,DWORD PTR [esp+0x100b0]
6400a5bc:	cmp    eax,0x1388
6400a5c1:	jb     0x6400a5c8
6400a5c3:	mov    eax,0x1388
6400a5c8:	mov    ecx,DWORD PTR [esp+0x1009c]
6400a5cf:	push   eax
6400a5d0:	mov    eax,DWORD PTR [esp+0x28]
6400a5d4:	push   0xffff
6400a5d9:	lea    edx,[esp+0x8c]
6400a5e0:	push   edx
6400a5e1:	mov    edx,DWORD PTR [esp+0x24]
6400a5e5:	push   0x0
6400a5e7:	push   eax
6400a5e8:	mov    eax,DWORD PTR [edx]
6400a5ea:	push   esi
6400a5eb:	push   ecx
6400a5ec:	push   eax
6400a5ed:	call   0x6400d910
6400a5f2:	call   eax
6400a5f4:	mov    ebx,eax
6400a5f6:	test   ebx,ebx
6400a5f8:	jne    0x6400a641
6400a5fa:	push   esi
6400a5fb:	call   0x64013402
6400a600:	add    esp,0x4
6400a603:	cmp    BYTE PTR [esp+0x100b4],bl
6400a60a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a615:	je     0x6400a663
6400a617:	cmp    DWORD PTR [esp+0x50],0x10
6400a61c:	jb     0x6400a62b
6400a61e:	mov    ecx,DWORD PTR [esp+0x3c]
6400a622:	push   ecx
6400a623:	call   0x64013402
6400a628:	add    esp,0x4
6400a62b:	add    edi,0x1
6400a62e:	cmp    edi,0x5
6400a631:	je     0x6400a677
6400a633:	mov    esi,DWORD PTR [esp+0x1c]
6400a637:	xor    ebx,ebx
6400a639:	jmp    0x6400a4c0
6400a63e:	or     ebx,0xffffffff
6400a641:	push   esi
6400a642:	call   0x64013402
6400a647:	add    esp,0x4
6400a64a:	mov    DWORD PTR [esp+0x10090],0xffffffff
6400a655:	cmp    DWORD PTR [esp+0x50],0x10
6400a65a:	jb     0x6400a677
6400a65c:	mov    edx,DWORD PTR [esp+0x3c]
6400a660:	push   edx
6400a661:	jmp    0x6400a66f
6400a663:	cmp    DWORD PTR [esp+0x50],0x10
6400a668:	jb     0x6400a677
6400a66a:	mov    eax,DWORD PTR [esp+0x3c]
6400a66e:	push   eax
6400a66f:	call   0x64013402
6400a674:	add    esp,0x4
6400a677:	test   ebx,ebx
6400a679:	je     0x6400a81f
6400a67f:	mov    ax,WORD PTR [esp+0x90]
6400a687:	test   ax,ax
6400a68a:	je     0x6400a813
6400a690:	lea    ecx,[esp+0x24]
6400a694:	push   ecx
6400a695:	lea    edx,[esp+0xa4]
6400a69c:	movzx  ebx,ax
6400a69f:	push   edx
6400a6a0:	lea    edi,[esp+0x24]
6400a6a4:	call   0x6400d810
6400a6a9:	mov    ecx,DWORD PTR [eax]
6400a6ab:	mov    ebp,ecx
6400a6ad:	xor    ebx,ebx
6400a6af:	mov    DWORD PTR [eax],ebx
6400a6b1:	mov    DWORD PTR [esp+0x28],ebp
6400a6b5:	mov    DWORD PTR [esp+0x10098],0x2
6400a6c0:	mov    edx,DWORD PTR [esp+0x24]
6400a6c4:	push   edx
6400a6c5:	call   0x64013402
6400a6ca:	add    esp,0xc
6400a6cd:	cmp    ebp,ebx
6400a6cf:	je     0x6400a802
6400a6d5:	mov    eax,DWORD PTR [ebp+0x10]
6400a6d8:	push   eax
6400a6d9:	call   DWORD PTR ds:0x640261c4
6400a6df:	cmp    BYTE PTR [esp+0x100ac],bl
6400a6e6:	mov    DWORD PTR [esp+0x18],eax
6400a6ea:	mov    DWORD PTR [ebp+0x10],eax
6400a6ed:	jne    0x6400a6ff
6400a6ef:	cmp    DWORD PTR [esp+0x100a8],ebx
6400a6f6:	jle    0x6400a6ff
6400a6f8:	mov    DWORD PTR [esp+0x100a8],ebx
6400a6ff:	mov    ecx,0x10
6400a704:	lea    edx,[esp+0x54]
6400a708:	mov    esi,ebp
6400a70a:	lea    ebx,[ebx+0x0]
6400a710:	mov    eax,DWORD PTR [esi]
6400a712:	cmp    eax,DWORD PTR [edx]
6400a714:	jne    0x6400a728
6400a716:	sub    ecx,0x4
6400a719:	add    edx,0x4
6400a71c:	add    esi,0x4
6400a71f:	cmp    ecx,0x4
6400a722:	jae    0x6400a710
6400a724:	cmp    ecx,ebx
6400a726:	je     0x6400a785
6400a728:	movzx  edi,BYTE PTR [esi]
6400a72b:	movzx  eax,BYTE PTR [edx]
6400a72e:	sub    edi,eax
6400a730:	jne    0x6400a777
6400a732:	sub    ecx,0x1
6400a735:	add    edx,0x1
6400a738:	add    esi,0x1
6400a73b:	cmp    ecx,ebx
6400a73d:	je     0x6400a785
6400a73f:	movzx  edi,BYTE PTR [esi]
6400a742:	movzx  eax,BYTE PTR [edx]
6400a745:	sub    edi,eax
6400a747:	jne    0x6400a777
6400a749:	sub    ecx,0x1
6400a74c:	add    edx,0x1
6400a74f:	add    esi,0x1
6400a752:	cmp    ecx,ebx
6400a754:	je     0x6400a785
6400a756:	movzx  edi,BYTE PTR [esi]
6400a759:	movzx  eax,BYTE PTR [edx]
6400a75c:	sub    edi,eax
6400a75e:	jne    0x6400a777
6400a760:	sub    ecx,0x1
6400a763:	add    edx,0x1
6400a766:	add    esi,0x1
6400a769:	cmp    ecx,ebx
6400a76b:	je     0x6400a785
6400a76d:	movzx  edi,BYTE PTR [esi]
6400a770:	movzx  ecx,BYTE PTR [edx]
6400a773:	sub    edi,ecx
6400a775:	je     0x6400a785
6400a777:	cmp    edi,ebx
6400a779:	mov    ecx,0x1
6400a77e:	jg     0x6400a787
6400a780:	or     ecx,0xffffffff
6400a783:	jmp    0x6400a787
6400a785:	xor    ecx,ecx
6400a787:	cmp    ecx,ebx
6400a789:	jne    0x6400a802
6400a78b:	mov    edx,DWORD PTR [esp+0x100a8]
6400a792:	cmp    DWORD PTR [esp+0x18],edx
6400a796:	jne    0x6400a802
6400a798:	mov    al,BYTE PTR [ebp+0x14]
6400a79b:	mov    ecx,DWORD PTR [esp+0x28]
6400a79f:	mov    BYTE PTR [ecx],al
6400a7a1:	mov    eax,DWORD PTR [esp+0x24]
6400a7a5:	add    eax,0xffffffeb
6400a7a8:	push   eax
6400a7a9:	lea    edx,[ebp+0x15]
6400a7ac:	push   edx
6400a7ad:	lea    ecx,[esp+0x40]
6400a7b1:	mov    DWORD PTR [esp+0x58],0xf
6400a7b9:	mov    DWORD PTR [esp+0x54],ebx
6400a7bd:	mov    BYTE PTR [esp+0x44],bl
6400a7c1:	call   0x64001860
6400a7c6:	mov    ecx,DWORD PTR [esp+0x2c]
6400a7ca:	push   0xffffffff
6400a7cc:	push   ebx
6400a7cd:	lea    eax,[esp+0x40]
6400a7d1:	push   eax
6400a7d2:	mov    BYTE PTR [esp+0x1009c],0x3
6400a7da:	call   0x64001780
6400a7df:	cmp    DWORD PTR [esp+0x50],0x10
6400a7e4:	jb     0x6400a7f3
6400a7e6:	mov    ecx,DWORD PTR [esp+0x3c]
6400a7ea:	push   ecx
6400a7eb:	call   0x64013402
6400a7f0:	add    esp,0x4
6400a7f3:	push   ebp
6400a7f4:	mov    bl,0x1
6400a7f6:	call   0x64013402
6400a7fb:	add    esp,0x4
6400a7fe:	mov    al,bl
6400a800:	jmp    0x6400a823
6400a802:	mov    bl,BYTE PTR [esp+0x17]
6400a806:	push   ebp
6400a807:	call   0x64013402
6400a80c:	add    esp,0x4
6400a80f:	mov    al,bl
6400a811:	jmp    0x6400a823
6400a813:	cmp    BYTE PTR [esp+0x100ac],0x0
6400a81b:	mov    al,0x1
6400a81d:	jne    0x6400a823
6400a81f:	mov    al,BYTE PTR [esp+0x17]
6400a823:	mov    ecx,DWORD PTR [esp+0x10088]
6400a82a:	mov    DWORD PTR fs:0x0,ecx
6400a831:	pop    ecx
6400a832:	pop    edi
6400a833:	pop    esi
6400a834:	pop    ebp
6400a835:	pop    ebx
6400a836:	mov    ecx,DWORD PTR [esp+0x10070]
6400a83d:	xor    ecx,esp
6400a83f:	call   0x64013c5c
6400a844:	add    esp,0x10080
6400a84a:	ret    0x30
6400a84d:	int3   
6400a84e:	int3   
6400a84f:	int3   
6400a850:	push   0xffffffff
6400a852:	push   0x6402367b
6400a857:	mov    eax,fs:0x0
6400a85d:	push   eax
6400a85e:	push   ecx
6400a85f:	push   esi
6400a860:	mov    eax,ds:0x6402f09c
6400a865:	xor    eax,esp
6400a867:	push   eax
6400a868:	lea    eax,[esp+0xc]
6400a86c:	mov    fs:0x0,eax
6400a872:	push   0xc
6400a874:	call   0x640137e1
6400a879:	mov    esi,eax
6400a87b:	add    esp,0x4
6400a87e:	mov    DWORD PTR [esp+0x8],esi
6400a882:	test   esi,esi
6400a884:	mov    DWORD PTR [esp+0x14],0x0
6400a88c:	je     0x6400a8aa
6400a88e:	mov    eax,DWORD PTR [esp+0x1c]
6400a892:	push   eax
6400a893:	mov    DWORD PTR [esi+0x4],0x0
6400a89a:	mov    DWORD PTR [esi+0x8],0x1
6400a8a1:	call   0x6401fc20
6400a8a6:	mov    DWORD PTR [esi],eax
6400a8a8:	jmp    0x6400a8ac
6400a8aa:	xor    esi,esi
6400a8ac:	test   esi,esi
6400a8ae:	mov    DWORD PTR [esp+0x14],0xffffffff
6400a8b6:	mov    DWORD PTR [ebx],esi
6400a8b8:	jne    0x6400a8c4
6400a8ba:	push   0x8007000e
6400a8bf:	call   0x6401fdb0
6400a8c4:	mov    eax,ebx
6400a8c6:	mov    ecx,DWORD PTR [esp+0xc]
6400a8ca:	mov    DWORD PTR fs:0x0,ecx
6400a8d1:	pop    ecx
6400a8d2:	pop    esi
6400a8d3:	add    esp,0x10
6400a8d6:	ret    0x4
6400a8d9:	int3   
6400a8da:	int3   
6400a8db:	int3   
6400a8dc:	int3   
6400a8dd:	int3   
6400a8de:	int3   
6400a8df:	int3   
6400a8e0:	push   0xffffffff
6400a8e2:	push   0x6402364b
6400a8e7:	mov    eax,fs:0x0
6400a8ed:	push   eax
6400a8ee:	push   ebp
6400a8ef:	push   esi
6400a8f0:	mov    eax,ds:0x6402f09c
6400a8f5:	xor    eax,esp
6400a8f7:	push   eax
6400a8f8:	lea    eax,[esp+0xc]
6400a8fc:	mov    fs:0x0,eax
6400a902:	mov    ebp,DWORD PTR [esp+0x1c]
6400a906:	push   0xc
6400a908:	call   0x640137e1
6400a90d:	mov    esi,eax
6400a90f:	add    esp,0x4
6400a912:	mov    DWORD PTR [esp+0x1c],esi
6400a916:	test   esi,esi
6400a918:	mov    DWORD PTR [esp+0x14],0x0
6400a920:	je     0x6400a94d
6400a922:	push   edi
6400a923:	mov    DWORD PTR [esi+0x4],0x0
6400a92a:	mov    DWORD PTR [esi+0x8],0x1
6400a931:	call   DWORD PTR ds:0x640261a0
6400a937:	test   eax,eax
6400a939:	mov    DWORD PTR [esi],eax
6400a93b:	jne    0x6400a94f
6400a93d:	test   edi,edi
6400a93f:	je     0x6400a94f
6400a941:	push   0x8007000e
6400a946:	call   0x6401fdb0
6400a94b:	jmp    0x6400a94f
6400a94d:	xor    esi,esi
6400a94f:	test   esi,esi
6400a951:	mov    DWORD PTR [esp+0x14],0xffffffff
6400a959:	mov    DWORD PTR [ebp+0x0],esi
6400a95c:	jne    0x6400a968
6400a95e:	push   0x8007000e
6400a963:	call   0x6401fdb0
6400a968:	mov    eax,ebp
6400a96a:	mov    ecx,DWORD PTR [esp+0xc]
6400a96e:	mov    DWORD PTR fs:0x0,ecx
6400a975:	pop    ecx
6400a976:	pop    esi
6400a977:	pop    ebp
6400a978:	add    esp,0xc
6400a97b:	ret    0x4
6400a97e:	int3   
6400a97f:	int3   
6400a980:	push   esi
6400a981:	mov    esi,DWORD PTR [edi]
6400a983:	test   esi,esi
6400a985:	je     0x6400a9c5
6400a987:	lea    eax,[esi+0x8]
6400a98a:	push   eax
6400a98b:	call   DWORD PTR ds:0x64026098
6400a991:	test   eax,eax
6400a993:	jne    0x6400a9bf
6400a995:	test   esi,esi
6400a997:	je     0x6400a9bf
6400a999:	mov    eax,DWORD PTR [esi]
6400a99b:	test   eax,eax
6400a99d:	je     0x6400a9a6
6400a99f:	push   eax
6400a9a0:	call   DWORD PTR ds:0x640261a4
6400a9a6:	mov    eax,DWORD PTR [esi+0x4]
6400a9a9:	test   eax,eax
6400a9ab:	je     0x6400a9b6
6400a9ad:	push   eax
6400a9ae:	call   0x64014354
6400a9b3:	add    esp,0x4
6400a9b6:	push   esi
6400a9b7:	call   0x64013402
6400a9bc:	add    esp,0x4
6400a9bf:	mov    DWORD PTR [edi],0x0
6400a9c5:	pop    esi
6400a9c6:	ret    
6400a9c7:	int3   
6400a9c8:	int3   
6400a9c9:	int3   
6400a9ca:	int3   
6400a9cb:	int3   
6400a9cc:	int3   
6400a9cd:	int3   
6400a9ce:	int3   
6400a9cf:	int3   
6400a9d0:	push   0xffffffff
6400a9d2:	push   0x6402361b
6400a9d7:	mov    eax,fs:0x0
6400a9dd:	push   eax
6400a9de:	push   ebp
6400a9df:	push   esi
6400a9e0:	mov    eax,ds:0x6402f09c
6400a9e5:	xor    eax,esp
6400a9e7:	push   eax
6400a9e8:	lea    eax,[esp+0xc]
6400a9ec:	mov    fs:0x0,eax
6400a9f2:	mov    ebp,DWORD PTR [esp+0x1c]
6400a9f6:	test   ebp,ebp
6400a9f8:	je     0x6400aa0e
6400a9fa:	mov    eax,DWORD PTR [ebx]
6400a9fc:	test   eax,eax
6400a9fe:	je     0x6400aa04
6400aa00:	mov    eax,DWORD PTR [eax]
6400aa02:	jmp    0x6400aa06
6400aa04:	xor    eax,eax
6400aa06:	cmp    eax,ebp
6400aa08:	je     0x6400aab3
6400aa0e:	mov    esi,DWORD PTR [ebx]
6400aa10:	test   esi,esi
6400aa12:	je     0x6400aa52
6400aa14:	lea    eax,[esi+0x8]
6400aa17:	push   eax
6400aa18:	call   DWORD PTR ds:0x64026098
6400aa1e:	test   eax,eax
6400aa20:	jne    0x6400aa4c
6400aa22:	test   esi,esi
6400aa24:	je     0x6400aa4c
6400aa26:	mov    eax,DWORD PTR [esi]
6400aa28:	test   eax,eax
6400aa2a:	je     0x6400aa33
6400aa2c:	push   eax
6400aa2d:	call   DWORD PTR ds:0x640261a4
6400aa33:	mov    eax,DWORD PTR [esi+0x4]
6400aa36:	test   eax,eax
6400aa38:	je     0x6400aa43
6400aa3a:	push   eax
6400aa3b:	call   0x64014354
6400aa40:	add    esp,0x4
6400aa43:	push   esi
6400aa44:	call   0x64013402
6400aa49:	add    esp,0x4
6400aa4c:	mov    DWORD PTR [ebx],0x0
6400aa52:	push   0xc
6400aa54:	call   0x640137e1
6400aa59:	mov    esi,eax
6400aa5b:	add    esp,0x4
6400aa5e:	mov    DWORD PTR [esp+0x1c],esi
6400aa62:	test   esi,esi
6400aa64:	mov    DWORD PTR [esp+0x14],0x0
6400aa6c:	je     0x6400aa99
6400aa6e:	push   ebp
6400aa6f:	mov    DWORD PTR [esi+0x4],0x0
6400aa76:	mov    DWORD PTR [esi+0x8],0x1
6400aa7d:	call   DWORD PTR ds:0x640261a0
6400aa83:	test   eax,eax
6400aa85:	mov    DWORD PTR [esi],eax
6400aa87:	jne    0x6400aa9b
6400aa89:	test   ebp,ebp
6400aa8b:	je     0x6400aa9b
6400aa8d:	push   0x8007000e
6400aa92:	call   0x6401fdb0
6400aa97:	jmp    0x6400aa9b
6400aa99:	xor    esi,esi
6400aa9b:	test   esi,esi
6400aa9d:	mov    DWORD PTR [esp+0x14],0xffffffff
6400aaa5:	mov    DWORD PTR [ebx],esi
6400aaa7:	jne    0x6400aab3
6400aaa9:	push   0x8007000e
6400aaae:	call   0x6401fdb0
6400aab3:	mov    eax,ebx
6400aab5:	mov    ecx,DWORD PTR [esp+0xc]
6400aab9:	mov    DWORD PTR fs:0x0,ecx
6400aac0:	pop    ecx
6400aac1:	pop    esi
6400aac2:	pop    ebp
6400aac3:	add    esp,0xc
6400aac6:	ret    0x4
6400aac9:	int3   
6400aaca:	int3   
6400aacb:	int3   
6400aacc:	int3   
6400aacd:	int3   
6400aace:	int3   
6400aacf:	int3   
6400aad0:	push   0xffffffff
6400aad2:	push   0x640236ab
6400aad7:	mov    eax,fs:0x0
6400aadd:	push   eax
6400aade:	push   ecx
6400aadf:	push   esi
6400aae0:	push   edi
6400aae1:	mov    eax,ds:0x6402f09c
6400aae6:	xor    eax,esp
6400aae8:	push   eax
6400aae9:	lea    eax,[esp+0x10]
6400aaed:	mov    fs:0x0,eax
6400aaf3:	push   0xc
6400aaf5:	call   0x640137e1
6400aafa:	add    esp,0x4
6400aafd:	mov    DWORD PTR [esp+0xc],eax
6400ab01:	test   eax,eax
6400ab03:	mov    DWORD PTR [esp+0x18],0x0
6400ab0b:	je     0x6400ab1e
6400ab0d:	mov    ecx,DWORD PTR [esp+0x20]
6400ab11:	push   ecx
6400ab12:	push   ebx
6400ab13:	mov    edi,eax
6400ab15:	call   0x6400ac30
6400ab1a:	mov    edi,eax
6400ab1c:	jmp    0x6400ab20
6400ab1e:	xor    edi,edi
6400ab20:	test   edi,edi
6400ab22:	mov    DWORD PTR [esp+0x18],0xffffffff
6400ab2a:	jne    0x6400ab38
6400ab2c:	push   0x8007000e
6400ab31:	call   0x6401fdb0
6400ab36:	jmp    0x6400ab7e
6400ab38:	mov    esi,DWORD PTR [ebx]
6400ab3a:	test   esi,esi
6400ab3c:	je     0x6400ab7c
6400ab3e:	lea    edx,[esi+0x8]
6400ab41:	push   edx
6400ab42:	call   DWORD PTR ds:0x64026098
6400ab48:	test   eax,eax
6400ab4a:	jne    0x6400ab76
6400ab4c:	test   esi,esi
6400ab4e:	je     0x6400ab76
6400ab50:	mov    eax,DWORD PTR [esi]
6400ab52:	test   eax,eax
6400ab54:	je     0x6400ab5d
6400ab56:	push   eax
6400ab57:	call   DWORD PTR ds:0x640261a4
6400ab5d:	mov    eax,DWORD PTR [esi+0x4]
6400ab60:	test   eax,eax
6400ab62:	je     0x6400ab6d
6400ab64:	push   eax
6400ab65:	call   0x64014354
6400ab6a:	add    esp,0x4
6400ab6d:	push   esi
6400ab6e:	call   0x64013402
6400ab73:	add    esp,0x4
6400ab76:	mov    DWORD PTR [ebx],0x0
6400ab7c:	mov    DWORD PTR [ebx],edi
6400ab7e:	mov    eax,ebx
6400ab80:	mov    ecx,DWORD PTR [esp+0x10]
6400ab84:	mov    DWORD PTR fs:0x0,ecx
6400ab8b:	pop    ecx
6400ab8c:	pop    edi
6400ab8d:	pop    esi
6400ab8e:	add    esp,0x10
6400ab91:	ret    0x4
6400ab94:	int3   
6400ab95:	int3   
6400ab96:	int3   
6400ab97:	int3   
6400ab98:	int3   
6400ab99:	int3   
6400ab9a:	int3   
6400ab9b:	int3   
6400ab9c:	int3   
6400ab9d:	int3   
6400ab9e:	int3   
6400ab9f:	int3   
6400aba0:	push   0xffffffff
6400aba2:	push   0x64023759
6400aba7:	mov    eax,fs:0x0
6400abad:	push   eax
6400abae:	push   ecx
6400abaf:	push   ebx
6400abb0:	mov    eax,ds:0x6402f09c
6400abb5:	xor    eax,esp
6400abb7:	push   eax
6400abb8:	lea    eax,[esp+0xc]
6400abbc:	mov    fs:0x0,eax
6400abc2:	mov    ebx,DWORD PTR [esp+0x20]
6400abc6:	mov    eax,DWORD PTR [esp+0x1c]
6400abca:	mov    DWORD PTR [esp+0x8],0x0
6400abd2:	mov    eax,DWORD PTR [eax]
6400abd4:	test   eax,eax
6400abd6:	mov    DWORD PTR [ebx],eax
6400abd8:	je     0x6400abe4
6400abda:	add    eax,0x8
6400abdd:	push   eax
6400abde:	call   DWORD PTR ds:0x64026020
6400abe4:	mov    ecx,DWORD PTR [esp+0x24]
6400abe8:	mov    DWORD PTR [esp+0x14],0x0
6400abf0:	push   ecx
6400abf1:	mov    DWORD PTR [esp+0xc],0x1
6400abf9:	call   0x6400aad0
6400abfe:	mov    eax,ebx
6400ac00:	mov    ecx,DWORD PTR [esp+0xc]
6400ac04:	mov    DWORD PTR fs:0x0,ecx
6400ac0b:	pop    ecx
6400ac0c:	pop    ebx
6400ac0d:	add    esp,0x10
6400ac10:	ret    0xc
6400ac13:	int3   
6400ac14:	int3   
6400ac15:	int3   
6400ac16:	int3   
6400ac17:	int3   
6400ac18:	int3   
6400ac19:	int3   
6400ac1a:	int3   
6400ac1b:	int3   
6400ac1c:	int3   
6400ac1d:	int3   
6400ac1e:	int3   
6400ac1f:	int3   
6400ac20:	mov    eax,DWORD PTR [eax]
6400ac22:	test   eax,eax
6400ac24:	je     0x6400ac29
6400ac26:	mov    eax,DWORD PTR [eax]
6400ac28:	ret    
6400ac29:	xor    eax,eax
6400ac2b:	ret    
6400ac2c:	int3   
6400ac2d:	int3   
6400ac2e:	int3   
6400ac2f:	int3   
6400ac30:	mov    eax,DWORD PTR [esp+0x4]
6400ac34:	push   ebx
6400ac35:	xor    ebx,ebx
6400ac37:	mov    DWORD PTR [edi+0x4],ebx
6400ac3a:	mov    DWORD PTR [edi+0x8],0x1
6400ac41:	mov    eax,DWORD PTR [eax]
6400ac43:	cmp    eax,ebx
6400ac45:	push   ebp
6400ac46:	push   esi
6400ac47:	mov    esi,DWORD PTR ds:0x6402619c
6400ac4d:	je     0x6400ac5c
6400ac4f:	mov    eax,DWORD PTR [eax]
6400ac51:	cmp    eax,ebx
6400ac53:	je     0x6400ac5c
6400ac55:	push   eax
6400ac56:	call   esi
6400ac58:	mov    ebp,eax
6400ac5a:	jmp    0x6400ac5e
6400ac5c:	xor    ebp,ebp
6400ac5e:	mov    ecx,DWORD PTR [esp+0x14]
6400ac62:	mov    eax,DWORD PTR [ecx]
6400ac64:	cmp    eax,ebx
6400ac66:	je     0x6400ac73
6400ac68:	mov    eax,DWORD PTR [eax]
6400ac6a:	cmp    eax,ebx
6400ac6c:	je     0x6400ac73
6400ac6e:	push   eax
6400ac6f:	call   esi
6400ac71:	mov    ebx,eax
6400ac73:	lea    esi,[ebx+ebp*1]
6400ac76:	add    esi,esi
6400ac78:	push   esi
6400ac79:	push   0x0
6400ac7b:	call   DWORD PTR ds:0x6402618c
6400ac81:	test   eax,eax
6400ac83:	mov    DWORD PTR [edi],eax
6400ac85:	jne    0x6400ac99
6400ac87:	push   0x8007000e
6400ac8c:	call   0x6401fdb0
6400ac91:	pop    esi
6400ac92:	pop    ebp
6400ac93:	mov    eax,edi
6400ac95:	pop    ebx
6400ac96:	ret    0x8
6400ac99:	mov    edx,DWORD PTR [esp+0x10]
6400ac9d:	mov    ecx,DWORD PTR [edx]
6400ac9f:	test   ecx,ecx
6400aca1:	je     0x6400acbc
6400aca3:	mov    ecx,DWORD PTR [ecx]
6400aca5:	test   ecx,ecx
6400aca7:	je     0x6400acbc
6400aca9:	lea    edx,[ebp+ebp*1+0x2]
6400acad:	push   edx
6400acae:	push   ecx
6400acaf:	add    esi,0x2
6400acb2:	push   esi
6400acb3:	push   eax
6400acb4:	call   0x640135b8
6400acb9:	add    esp,0x10
6400acbc:	mov    eax,DWORD PTR [esp+0x14]
6400acc0:	mov    eax,DWORD PTR [eax]
6400acc2:	test   eax,eax
6400acc4:	je     0x6400ace1
6400acc6:	mov    ecx,DWORD PTR [eax]
6400acc8:	test   ecx,ecx
6400acca:	je     0x6400ace1
6400accc:	lea    eax,[ebx+ebx*1+0x2]
6400acd0:	push   eax
6400acd1:	push   ecx
6400acd2:	mov    ecx,DWORD PTR [edi]
6400acd4:	push   eax
6400acd5:	lea    edx,[ecx+ebp*2]
6400acd8:	push   edx
6400acd9:	call   0x640135b8
6400acde:	add    esp,0x10
6400ace1:	pop    esi
6400ace2:	pop    ebp
6400ace3:	mov    eax,edi
6400ace5:	pop    ebx
6400ace6:	ret    0x8
6400ace9:	int3   
6400acea:	int3   
6400aceb:	int3   
6400acec:	int3   
6400aced:	int3   
6400acee:	int3   
6400acef:	int3   
6400acf0:	push   ecx
6400acf1:	call   DWORD PTR ds:0x64026198
6400acf7:	ret    
6400acf8:	int3   
6400acf9:	int3   
6400acfa:	int3   
6400acfb:	int3   
6400acfc:	int3   
6400acfd:	int3   
6400acfe:	int3   
6400acff:	int3   
6400ad00:	push   0xffffffff
6400ad02:	push   0x64023718
6400ad07:	mov    eax,fs:0x0
6400ad0d:	push   eax
6400ad0e:	sub    esp,0x18
6400ad11:	push   ebx
6400ad12:	mov    eax,ds:0x6402f09c
6400ad17:	xor    eax,esp
6400ad19:	push   eax
6400ad1a:	lea    eax,[esp+0x20]
6400ad1e:	mov    fs:0x0,eax
6400ad24:	mov    ebx,ecx
6400ad26:	cmp    WORD PTR [esi],0x8
6400ad2a:	jne    0x6400ad48
6400ad2c:	mov    eax,DWORD PTR [esi+0x8]
6400ad2f:	push   eax
6400ad30:	call   0x6400a9d0
6400ad35:	mov    eax,ebx
6400ad37:	mov    ecx,DWORD PTR [esp+0x20]
6400ad3b:	mov    DWORD PTR fs:0x0,ecx
6400ad42:	pop    ecx
6400ad43:	pop    ebx
6400ad44:	add    esp,0x24
6400ad47:	ret    
6400ad48:	lea    ecx,[esp+0xc]
6400ad4c:	push   ecx
6400ad4d:	call   DWORD PTR ds:0x64026190
6400ad53:	lea    edx,[esp+0xc]
6400ad57:	cmp    edx,esi
6400ad59:	mov    DWORD PTR [esp+0x28],0x0
6400ad61:	jne    0x6400ad6b
6400ad63:	cmp    WORD PTR [esp+0xc],0x8
6400ad69:	je     0x6400ad85
6400ad6b:	push   0x8
6400ad6d:	push   0x0
6400ad6f:	push   esi
6400ad70:	lea    eax,[esp+0x18]
6400ad74:	push   eax
6400ad75:	call   DWORD PTR ds:0x64026188
6400ad7b:	test   eax,eax
6400ad7d:	jge    0x6400ad85
6400ad7f:	push   eax
6400ad80:	call   0x6401fdb0
6400ad85:	mov    ecx,DWORD PTR [esp+0x14]
6400ad89:	push   ecx
6400ad8a:	call   0x6400a9d0
6400ad8f:	lea    edx,[esp+0xc]
6400ad93:	push   edx
6400ad94:	call   DWORD PTR ds:0x64026198
6400ad9a:	mov    eax,ebx
6400ad9c:	mov    ecx,DWORD PTR [esp+0x20]
6400ada0:	mov    DWORD PTR fs:0x0,ecx
6400ada7:	pop    ecx
6400ada8:	pop    ebx
6400ada9:	add    esp,0x24
6400adac:	ret    
6400adad:	int3   
6400adae:	int3   
6400adaf:	int3   
6400adb0:	sub    esp,0x8
6400adb3:	test   eax,eax
6400adb5:	mov    BYTE PTR [edi],0x0
6400adb8:	jle    0x6400af0e
6400adbe:	push   ebx
6400adbf:	push   ebp
6400adc0:	push   esi
6400adc1:	xor    esi,esi
6400adc3:	add    eax,ecx
6400adc5:	mov    BYTE PTR [esp+0xf],0x0
6400adca:	mov    BYTE PTR [edi],0x0
6400adcd:	mov    DWORD PTR [esp+0x10],eax
6400add1:	mov    ebp,eax
6400add3:	mov    al,BYTE PTR [ebp+0x0]
6400add6:	test   al,al
6400add8:	je     0x6400ae84
6400adde:	movsx  edx,al
6400ade1:	push   edx
6400ade2:	call   0x64014acf
6400ade7:	mov    bl,al
6400ade9:	movsx  eax,bl
6400adec:	push   eax
6400aded:	call   0x64014910
6400adf2:	add    esp,0x8
6400adf5:	test   eax,eax
6400adf7:	je     0x6400adfb
6400adf9:	mov    bl,0x30
6400adfb:	shl    BYTE PTR [esi+edi*1],0x4
6400adff:	add    BYTE PTR [esp+0xf],0x1
6400ae04:	mov    cl,BYTE PTR [esi+edi*1]
6400ae07:	mov    al,bl
6400ae09:	sub    al,0x30
6400ae0b:	cmp    al,0x9
6400ae0d:	ja     0x6400ae16
6400ae0f:	or     al,cl
6400ae11:	mov    BYTE PTR [esi+edi*1],al
6400ae14:	jmp    0x6400ae28
6400ae16:	mov    dl,bl
6400ae18:	sub    dl,0x61
6400ae1b:	cmp    dl,0x5
6400ae1e:	ja     0x6400ae5a
6400ae20:	sub    bl,0x57
6400ae23:	or     bl,cl
6400ae25:	mov    BYTE PTR [esi+edi*1],bl
6400ae28:	cmp    BYTE PTR [esp+0xf],0x2
6400ae2d:	jne    0x6400ae52
6400ae2f:	mov    al,BYTE PTR [esi+edi*1]
6400ae32:	test   al,al
6400ae34:	je     0x6400ae46
6400ae36:	movsx  eax,al
6400ae39:	push   eax
6400ae3a:	call   0x6401498d
6400ae3f:	add    esp,0x4
6400ae42:	test   eax,eax
6400ae44:	je     0x6400ae5a
6400ae46:	add    esi,0x1
6400ae49:	mov    BYTE PTR [esp+0xf],0x0
6400ae4e:	mov    BYTE PTR [esi+edi*1],0x0
6400ae52:	add    ebp,0x1
6400ae55:	jmp    0x6400add3
6400ae5a:	mov    ebp,DWORD PTR [esp+0x10]
6400ae5e:	xor    esi,esi
6400ae60:	mov    bl,BYTE PTR [ebp+0x0]
6400ae63:	test   bl,bl
6400ae65:	je     0x6400ae84
6400ae67:	movsx  ecx,bl
6400ae6a:	push   ecx
6400ae6b:	call   0x6401498d
6400ae70:	add    esp,0x4
6400ae73:	test   eax,eax
6400ae75:	je     0x6400ae82
6400ae77:	mov    BYTE PTR [esi+edi*1],bl
6400ae7a:	add    esi,0x1
6400ae7d:	add    ebp,0x1
6400ae80:	jmp    0x6400ae60
6400ae82:	xor    esi,esi
6400ae84:	cmp    DWORD PTR [esp+0x18],0x0
6400ae89:	mov    BYTE PTR [esi+edi*1],0x0
6400ae8d:	je     0x6400aeb2
6400ae8f:	test   esi,esi
6400ae91:	jle    0x6400aeb2
6400ae93:	add    esi,0xffffffff
6400ae96:	shr    esi,1
6400ae98:	lea    eax,[edi+0x1]
6400ae9b:	add    esi,0x1
6400ae9e:	mov    edi,edi
6400aea0:	mov    cl,BYTE PTR [eax-0x1]
6400aea3:	mov    dl,BYTE PTR [eax]
6400aea5:	mov    BYTE PTR [eax-0x1],dl
6400aea8:	mov    BYTE PTR [eax],cl
6400aeaa:	add    eax,0x2
6400aead:	sub    esi,0x1
6400aeb0:	jne    0x6400aea0
6400aeb2:	or     ebx,0xffffffff
6400aeb5:	or     ebp,ebx
6400aeb7:	xor    esi,esi
6400aeb9:	cmp    BYTE PTR [edi],0x0
6400aebc:	je     0x6400af0b
6400aebe:	mov    edi,edi
6400aec0:	movsx  eax,BYTE PTR [esi+edi*1]
6400aec4:	push   eax
6400aec5:	call   0x64014910
6400aeca:	add    esp,0x4
6400aecd:	test   eax,eax
6400aecf:	jne    0x6400aed9
6400aed1:	test   ebp,ebp
6400aed3:	jge    0x6400aed7
6400aed5:	mov    ebp,esi
6400aed7:	mov    ebx,esi
6400aed9:	add    esi,0x1
6400aedc:	cmp    BYTE PTR [esi+edi*1],0x0
6400aee0:	jne    0x6400aec0
6400aee2:	test   ebp,ebp
6400aee4:	jl     0x6400af0b
6400aee6:	test   ebx,ebx
6400aee8:	jl     0x6400af0b
6400aeea:	cmp    ebp,ebx
6400aeec:	mov    eax,ebp
6400aeee:	jg     0x6400af05
6400aef0:	mov    edx,edi
6400aef2:	sub    edx,ebp
6400aef4:	mov    cl,BYTE PTR [eax+edi*1]
6400aef7:	test   cl,cl
6400aef9:	je     0x6400af05
6400aefb:	mov    BYTE PTR [edx+eax*1],cl
6400aefe:	add    eax,0x1
6400af01:	cmp    eax,ebx
6400af03:	jle    0x6400aef4
6400af05:	sub    eax,ebp
6400af07:	mov    BYTE PTR [eax+edi*1],0x0
6400af0b:	pop    esi
6400af0c:	pop    ebp
6400af0d:	pop    ebx
6400af0e:	mov    eax,edi
6400af10:	add    esp,0x8
6400af13:	ret    
6400af14:	int3   
6400af15:	int3   
6400af16:	int3   
6400af17:	int3   
6400af18:	int3   
6400af19:	int3   
6400af1a:	int3   
6400af1b:	int3   
6400af1c:	int3   
6400af1d:	int3   
6400af1e:	int3   
6400af1f:	int3   
6400af20:	push   ebp
6400af21:	mov    ebp,esp
6400af23:	and    esp,0xfffffff8
6400af26:	mov    eax,0x2f34
6400af2b:	call   0x64019550
6400af30:	mov    eax,ds:0x6402f09c
6400af35:	xor    eax,esp
6400af37:	mov    DWORD PTR [esp+0x2f30],eax
6400af3e:	push   ebx
6400af3f:	mov    eax,DWORD PTR [ebp+0x8]
6400af42:	mov    ecx,DWORD PTR [ebp+0xc]
6400af45:	mov    ebx,DWORD PTR [ebp+0x10]
6400af48:	push   esi
6400af49:	push   edi
6400af4a:	xor    edi,edi
6400af4c:	push   edi
6400af4d:	push   edi
6400af4e:	push   0x3
6400af50:	push   edi
6400af51:	push   0x3
6400af53:	push   edi
6400af54:	push   0x64029e90
6400af59:	push   0x12
6400af5b:	push   0x64029ecc
6400af60:	mov    DWORD PTR [esp+0x3c],eax
6400af64:	mov    DWORD PTR [esp+0x40],ecx
6400af68:	mov    BYTE PTR [esp+0x37],0x0
6400af6d:	call   0x64006950
6400af72:	add    esp,0xc
6400af75:	push   eax
6400af76:	call   0x6400e010
6400af7b:	call   eax
6400af7d:	mov    esi,eax
6400af7f:	cmp    esi,0xffffffff
6400af82:	jne    0x6400af9b
6400af84:	xor    al,al
6400af86:	pop    edi
6400af87:	pop    esi
6400af88:	pop    ebx
6400af89:	mov    ecx,DWORD PTR [esp+0x2f30]
6400af90:	xor    ecx,esp
6400af92:	call   0x64013c5c
6400af97:	mov    esp,ebp
6400af99:	pop    ebp
6400af9a:	ret    
6400af9b:	xor    eax,eax
6400af9d:	push   0x2710
6400afa2:	lea    edx,[esp+0x82c]
6400afa9:	push   edi
6400afaa:	mov    DWORD PTR [esp+0x2c],eax
6400afae:	mov    DWORD PTR [esp+0x30],eax
6400afb2:	push   edx
6400afb3:	mov    DWORD PTR [esp+0x20],edi
6400afb7:	mov    DWORD PTR [esp+0x38],eax
6400afbb:	mov    DWORD PTR [esp+0x30],edi
6400afbf:	mov    DWORD PTR [esp+0x34],edi
6400afc3:	call   0x64014360
6400afc8:	add    esp,0xc
6400afcb:	push   edi
6400afcc:	lea    eax,[esp+0x18]
6400afd0:	push   eax
6400afd1:	push   0x2710
6400afd6:	lea    ecx,[esp+0x834]
6400afdd:	push   ecx
6400afde:	push   0xc
6400afe0:	lea    edx,[esp+0x38]
6400afe4:	push   edx
6400afe5:	push   0x2d1400
6400afea:	push   esi
6400afeb:	call   0x6400e550
6400aff0:	call   eax
6400aff2:	test   eax,eax
6400aff4:	je     0x6400b051
6400aff6:	mov    eax,DWORD PTR [esp+0x838]
6400affd:	push   edi
6400affe:	lea    edi,[esp+0x444]
6400b005:	lea    ecx,[esp+0x82c]
6400b00c:	call   0x6400adb0
6400b011:	mov    eax,DWORD PTR [esp+0x844]
6400b018:	push   0x1
6400b01a:	lea    edi,[esp+0x60]
6400b01e:	lea    ecx,[esp+0x830]
6400b025:	call   0x6400adb0
6400b02a:	mov    ecx,DWORD PTR [esp+0x20]
6400b02e:	add    esp,0x8
6400b031:	mov    eax,edi
6400b033:	push   eax
6400b034:	call   0x64002800
6400b039:	lea    ecx,[esp+0x440]
6400b040:	push   ecx
6400b041:	mov    ecx,DWORD PTR [esp+0x20]
6400b045:	call   0x64002800
6400b04a:	mov    BYTE PTR [esp+0x13],0x1
6400b04f:	xor    edi,edi
6400b051:	xor    eax,eax
6400b053:	push   edi
6400b054:	lea    edx,[esp+0x24]
6400b058:	push   edx
6400b059:	push   0x28
6400b05b:	mov    DWORD PTR [esp+0x40],eax
6400b05f:	mov    DWORD PTR [esp+0x44],eax
6400b063:	mov    DWORD PTR [esp+0x48],eax
6400b067:	mov    DWORD PTR [esp+0x4c],eax
6400b06b:	mov    DWORD PTR [esp+0x50],eax
6400b06f:	mov    DWORD PTR [esp+0x54],eax
6400b073:	mov    DWORD PTR [esp+0x58],eax
6400b077:	mov    DWORD PTR [esp+0x5c],eax
6400b07b:	mov    DWORD PTR [esp+0x60],eax
6400b07f:	lea    eax,[esp+0x3c]
6400b083:	push   eax
6400b084:	push   edi
6400b085:	push   edi
6400b086:	push   0x700a0
6400b08b:	push   esi
6400b08c:	mov    DWORD PTR [esp+0x50],edi
6400b090:	mov    DWORD PTR [ebx],edi
6400b092:	mov    DWORD PTR [ebx+0x4],edi
6400b095:	call   0x6400e550
6400b09a:	call   eax
6400b09c:	test   eax,eax
6400b09e:	je     0x6400b0ad
6400b0a0:	mov    ecx,DWORD PTR [esp+0x48]
6400b0a4:	mov    edx,DWORD PTR [esp+0x4c]
6400b0a8:	mov    DWORD PTR [ebx],ecx
6400b0aa:	mov    DWORD PTR [ebx+0x4],edx
6400b0ad:	push   esi
6400b0ae:	call   DWORD PTR ds:0x64026040
6400b0b4:	mov    ecx,DWORD PTR [esp+0x2f3c]
6400b0bb:	mov    al,BYTE PTR [esp+0x13]
6400b0bf:	pop    edi
6400b0c0:	pop    esi
6400b0c1:	pop    ebx
6400b0c2:	xor    ecx,esp
6400b0c4:	call   0x64013c5c
6400b0c9:	mov    esp,ebp
6400b0cb:	pop    ebp
6400b0cc:	ret    
6400b0cd:	int3   
6400b0ce:	int3   
6400b0cf:	int3   
6400b0d0:	push   ebp
6400b0d1:	lea    ebp,[esp-0x28c]
6400b0d8:	sub    esp,0x28c
6400b0de:	push   0xffffffff
6400b0e0:	push   0x64024810
6400b0e5:	mov    eax,fs:0x0
6400b0eb:	push   eax
6400b0ec:	sub    esp,0x34
6400b0ef:	mov    eax,ds:0x6402f09c
6400b0f4:	xor    eax,ebp
6400b0f6:	mov    DWORD PTR [ebp+0x288],eax
6400b0fc:	push   ebx
6400b0fd:	push   esi
6400b0fe:	push   edi
6400b0ff:	push   eax
6400b100:	lea    eax,[ebp-0xc]
6400b103:	mov    fs:0x0,eax
6400b109:	mov    eax,DWORD PTR [ebp+0x294]
6400b10f:	lea    ecx,[ebp-0x14]
6400b112:	push   ecx
6400b113:	lea    edx,[ebp+0x0]
6400b116:	push   edx
6400b117:	mov    DWORD PTR [ebp-0x20],eax
6400b11a:	mov    DWORD PTR [ebp-0x14],0x1
6400b121:	call   0x6400dbb0
6400b126:	call   eax
6400b128:	cmp    eax,0x6f
6400b12b:	jne    0x6400b301
6400b131:	mov    eax,DWORD PTR [ebp-0x14]
6400b134:	push   eax
6400b135:	call   0x640133fd
6400b13a:	mov    ebx,eax
6400b13c:	add    esp,0x4
6400b13f:	mov    DWORD PTR [ebp-0x24],ebx
6400b142:	lea    ecx,[ebp-0x14]
6400b145:	push   ecx
6400b146:	push   ebx
6400b147:	mov    DWORD PTR [ebp-0x4],0x0
6400b14e:	call   0x6400dbb0
6400b153:	call   eax
6400b155:	test   eax,eax
6400b157:	je     0x6400b15f
6400b159:	push   ebx
6400b15a:	jmp    0x6400b2f9
6400b15f:	call   DWORD PTR ds:0x6402f06c
6400b165:	mov    edx,DWORD PTR ds:0x64030540
6400b16b:	mov    DWORD PTR [ebp-0x1c],eax
6400b16e:	mov    eax,DWORD PTR [edx+0xc]
6400b171:	mov    ecx,0x64030540
6400b176:	call   eax
6400b178:	lea    edi,[eax+0x10]
6400b17b:	mov    DWORD PTR [ebp-0x10],edi
6400b17e:	xor    esi,esi
6400b180:	mov    BYTE PTR [ebp-0x4],0x1
6400b184:	cmp    DWORD PTR [ebx+0x190],esi
6400b18a:	je     0x6400b212
6400b190:	mov    edx,DWORD PTR ds:0x64030540
6400b196:	mov    eax,DWORD PTR [edx+0xc]
6400b199:	mov    ecx,0x64030540
6400b19e:	call   eax
6400b1a0:	add    eax,0x10
6400b1a3:	mov    DWORD PTR [ebp-0x18],eax
6400b1a6:	mov    BYTE PTR [ebp-0x4],0x2
6400b1aa:	movzx  ecx,BYTE PTR [ebx+esi*1+0x194]
6400b1b2:	push   ecx
6400b1b3:	push   0x64029ef4
6400b1b8:	push   0x4
6400b1ba:	push   0x64029f34
6400b1bf:	call   0x64006950
6400b1c4:	add    esp,0xc
6400b1c7:	push   eax
6400b1c8:	lea    edx,[ebp-0x18]
6400b1cb:	push   edx
6400b1cc:	call   0x64001d40
6400b1d1:	mov    edi,DWORD PTR [ebp-0x18]
6400b1d4:	mov    eax,DWORD PTR [edi-0xc]
6400b1d7:	add    esp,0xc
6400b1da:	push   eax
6400b1db:	push   edi
6400b1dc:	lea    ecx,[ebp-0x10]
6400b1df:	call   0x640029e0
6400b1e4:	lea    eax,[edi-0x10]
6400b1e7:	mov    BYTE PTR [ebp-0x4],0x1
6400b1eb:	lea    ecx,[eax+0xc]
6400b1ee:	or     edx,0xffffffff
6400b1f1:	lock xadd DWORD PTR [ecx],edx
6400b1f5:	dec    edx
6400b1f6:	test   edx,edx
6400b1f8:	jg     0x6400b204
6400b1fa:	mov    ecx,DWORD PTR [eax]
6400b1fc:	mov    edx,DWORD PTR [ecx]
6400b1fe:	push   eax
6400b1ff:	mov    eax,DWORD PTR [edx+0x4]
6400b202:	call   eax
6400b204:	add    esi,0x1
6400b207:	cmp    esi,DWORD PTR [ebx+0x190]
6400b20d:	jne    0x6400b190
6400b20f:	mov    edi,DWORD PTR [ebp-0x10]
6400b212:	cmp    DWORD PTR [edi-0x4],0x1
6400b216:	jle    0x6400b227
6400b218:	mov    ecx,DWORD PTR [edi-0xc]
6400b21b:	push   ecx
6400b21c:	lea    ecx,[ebp-0x10]
6400b21f:	call   0x64001950
6400b224:	mov    edi,DWORD PTR [ebp-0x10]
6400b227:	test   edi,edi
6400b229:	jne    0x6400b22f
6400b22b:	xor    esi,esi
6400b22d:	jmp    0x6400b27d
6400b22f:	push   edi
6400b230:	call   DWORD PTR ds:0x64026054
6400b236:	add    eax,0x1
6400b239:	cmp    eax,0x3fffffff
6400b23e:	jg     0x6400b279
6400b240:	lea    edi,[eax+eax*1]
6400b243:	mov    eax,edi
6400b245:	call   0x640143e0
6400b24a:	mov    esi,esp
6400b24c:	test   esi,esi
6400b24e:	je     0x6400b276
6400b250:	mov    edx,DWORD PTR [ebp-0x10]
6400b253:	mov    eax,DWORD PTR [ebp-0x1c]
6400b256:	push   0x0
6400b258:	push   0x0
6400b25a:	push   edi
6400b25b:	push   esi
6400b25c:	push   0xffffffff
6400b25e:	push   edx
6400b25f:	push   0x0
6400b261:	push   eax
6400b262:	mov    BYTE PTR [esi],0x0
6400b265:	call   DWORD PTR ds:0x64026028
6400b26b:	mov    edi,DWORD PTR [ebp-0x10]
6400b26e:	neg    eax
6400b270:	sbb    eax,eax
6400b272:	and    eax,esi
6400b274:	jmp    0x6400b27b
6400b276:	mov    edi,DWORD PTR [ebp-0x10]
6400b279:	xor    eax,eax
6400b27b:	mov    esi,eax
6400b27d:	mov    eax,esi
6400b27f:	mov    DWORD PTR [ebp-0x28],0xf
6400b286:	mov    DWORD PTR [ebp-0x2c],0x0
6400b28d:	mov    BYTE PTR [ebp-0x3c],0x0
6400b291:	lea    edx,[eax+0x1]
6400b294:	mov    cl,BYTE PTR [eax]
6400b296:	add    eax,0x1
6400b299:	test   cl,cl
6400b29b:	jne    0x6400b294
6400b29d:	sub    eax,edx
6400b29f:	push   eax
6400b2a0:	push   esi
6400b2a1:	lea    ecx,[ebp-0x40]
6400b2a4:	call   0x64001860
6400b2a9:	mov    esi,DWORD PTR [ebp-0x20]
6400b2ac:	lea    ecx,[ebp-0x40]
6400b2af:	push   ecx
6400b2b0:	mov    BYTE PTR [ebp-0x4],0x3
6400b2b4:	call   0x6400b820
6400b2b9:	cmp    DWORD PTR [ebp-0x28],0x10
6400b2bd:	jb     0x6400b2cb
6400b2bf:	mov    edx,DWORD PTR [ebp-0x3c]
6400b2c2:	push   edx
6400b2c3:	call   0x64013402
6400b2c8:	add    esp,0x4
6400b2cb:	mov    ebx,DWORD PTR [ebx]
6400b2cd:	lea    eax,[edi-0x10]
6400b2d0:	mov    BYTE PTR [ebp-0x4],0x0
6400b2d4:	lea    ecx,[eax+0xc]
6400b2d7:	or     edx,0xffffffff
6400b2da:	lock xadd DWORD PTR [ecx],edx
6400b2de:	dec    edx
6400b2df:	test   edx,edx
6400b2e1:	jg     0x6400b2ed
6400b2e3:	mov    ecx,DWORD PTR [eax]
6400b2e5:	mov    edx,DWORD PTR [ecx]
6400b2e7:	push   eax
6400b2e8:	mov    eax,DWORD PTR [edx+0x4]
6400b2eb:	call   eax
6400b2ed:	test   ebx,ebx
6400b2ef:	jne    0x6400b15f
6400b2f5:	mov    ecx,DWORD PTR [ebp-0x24]
6400b2f8:	push   ecx
6400b2f9:	call   0x64013402
6400b2fe:	add    esp,0x4
6400b301:	lea    esp,[ebp-0x50]
6400b304:	mov    ecx,DWORD PTR [ebp-0xc]
6400b307:	mov    DWORD PTR fs:0x0,ecx
6400b30e:	pop    ecx
6400b30f:	pop    edi
6400b310:	pop    esi
6400b311:	pop    ebx
6400b312:	mov    ecx,DWORD PTR [ebp+0x288]
6400b318:	xor    ecx,ebp
6400b31a:	call   0x64013c5c
6400b31f:	add    ebp,0x28c
6400b325:	mov    esp,ebp
6400b327:	pop    ebp
6400b328:	ret    
6400b329:	int3   
6400b32a:	int3   
6400b32b:	int3   
6400b32c:	int3   
6400b32d:	int3   
6400b32e:	int3   
6400b32f:	int3   
6400b330:	push   0xffffffff
6400b332:	push   0x640247d0
6400b337:	mov    eax,fs:0x0
6400b33d:	push   eax
6400b33e:	sub    esp,0x50
6400b341:	push   ebx
6400b342:	push   ebp
6400b343:	push   esi
6400b344:	push   edi
6400b345:	mov    eax,ds:0x6402f09c
6400b34a:	xor    eax,esp
6400b34c:	push   eax
6400b34d:	lea    eax,[esp+0x64]
6400b351:	mov    fs:0x0,eax
6400b357:	mov    ebp,DWORD PTR [esp+0x74]
6400b35b:	lea    eax,[esp+0x18]
6400b35f:	xor    ebx,ebx
6400b361:	push   eax
6400b362:	mov    edi,0x640286e0
6400b367:	mov    DWORD PTR [esp+0x3c],ebx
6400b36b:	call   0x6400a8e0
6400b370:	push   ebx
6400b371:	push   ebx
6400b372:	mov    DWORD PTR [esp+0x74],ebx
6400b376:	call   DWORD PTR ds:0x640261d0
6400b37c:	test   eax,eax
6400b37e:	jge    0x6400b3d3
6400b380:	mov    esi,DWORD PTR [esp+0x18]
6400b384:	cmp    esi,ebx
6400b386:	mov    DWORD PTR [ebp+0x0],esi
6400b389:	je     0x6400b673
6400b38f:	lea    edi,[esi+0x8]
6400b392:	push   edi
6400b393:	call   DWORD PTR ds:0x64026020
6400b399:	push   edi
6400b39a:	call   DWORD PTR ds:0x64026098
6400b3a0:	test   eax,eax
6400b3a2:	jne    0x6400b673
6400b3a8:	mov    eax,DWORD PTR [esi]
6400b3aa:	cmp    eax,ebx
6400b3ac:	je     0x6400b3b5
6400b3ae:	push   eax
6400b3af:	call   DWORD PTR ds:0x640261a4
6400b3b5:	mov    eax,DWORD PTR [esi+0x4]
6400b3b8:	cmp    eax,ebx
6400b3ba:	je     0x6400b3c5
6400b3bc:	push   eax
6400b3bd:	call   0x64014354
6400b3c2:	add    esp,0x4
6400b3c5:	push   esi
6400b3c6:	call   0x64013402
6400b3cb:	add    esp,0x4
6400b3ce:	jmp    0x6400b673
6400b3d3:	lea    ecx,[esp+0x20]
6400b3d7:	push   ecx
6400b3d8:	push   0x64026a78
6400b3dd:	push   0x1
6400b3df:	push   ebx
6400b3e0:	push   0x64026b48
6400b3e5:	mov    DWORD PTR [esp+0x34],ebx
6400b3e9:	call   DWORD PTR ds:0x640261e0
6400b3ef:	cmp    eax,ebx
6400b3f1:	jl     0x6400b64f
6400b3f7:	push   0x64029f40
6400b3fc:	push   0xa
6400b3fe:	push   0x64029f74
6400b403:	mov    DWORD PTR [esp+0x28],ebx
6400b407:	call   0x64006950
6400b40c:	add    esp,0xc
6400b40f:	lea    edx,[esp+0x30]
6400b413:	push   edx
6400b414:	mov    edi,eax
6400b416:	call   0x6400a8e0
6400b41b:	mov    BYTE PTR [esp+0x6c],0x1
6400b420:	mov    eax,DWORD PTR [eax]
6400b422:	cmp    eax,ebx
6400b424:	je     0x6400b42a
6400b426:	mov    eax,DWORD PTR [eax]
6400b428:	jmp    0x6400b42c
6400b42a:	xor    eax,eax
6400b42c:	mov    ecx,DWORD PTR [esp+0x20]
6400b430:	mov    edx,DWORD PTR [ecx]
6400b432:	lea    esi,[esp+0x1c]
6400b436:	push   esi
6400b437:	push   ebx
6400b438:	push   ebx
6400b439:	push   ebx
6400b43a:	push   ebx
6400b43b:	push   ebx
6400b43c:	push   ebx
6400b43d:	push   eax
6400b43e:	mov    eax,DWORD PTR [edx+0xc]
6400b441:	push   ecx
6400b442:	call   eax
6400b444:	lea    edi,[esp+0x30]
6400b448:	mov    esi,eax
6400b44a:	mov    BYTE PTR [esp+0x6c],bl
6400b44e:	call   0x6400a980
6400b453:	cmp    esi,ebx
6400b455:	jge    0x6400b460
6400b457:	mov    eax,DWORD PTR [esp+0x20]
6400b45b:	jmp    0x6400b647
6400b460:	mov    eax,DWORD PTR [esp+0x1c]
6400b464:	push   ebx
6400b465:	push   ebx
6400b466:	push   0x3
6400b468:	push   0x3
6400b46a:	push   ebx
6400b46b:	push   ebx
6400b46c:	push   0xa
6400b46e:	push   eax
6400b46f:	call   DWORD PTR ds:0x640261d8
6400b475:	cmp    eax,ebx
6400b477:	jge    0x6400b48e
6400b479:	mov    eax,DWORD PTR [esp+0x1c]
6400b47d:	mov    ecx,DWORD PTR [eax]
6400b47f:	mov    edx,DWORD PTR [ecx+0x8]
6400b482:	push   eax
6400b483:	call   edx
6400b485:	mov    eax,DWORD PTR [esp+0x20]
6400b489:	jmp    0x6400b647
6400b48e:	push   0x64029f8c
6400b493:	push   0xe
6400b495:	push   0x64029fc4
6400b49a:	mov    DWORD PTR [esp+0x30],ebx
6400b49e:	call   0x64006690
6400b4a3:	add    esp,0xc
6400b4a6:	push   eax
6400b4a7:	lea    ebx,[esp+0x3c]
6400b4ab:	call   0x6400a850
6400b4b0:	mov    ecx,DWORD PTR [esp+0x78]
6400b4b4:	push   ecx
6400b4b5:	lea    edx,[esp+0x38]
6400b4b9:	push   edx
6400b4ba:	push   eax
6400b4bb:	mov    BYTE PTR [esp+0x78],0x2
6400b4c0:	call   0x6400aba0
6400b4c5:	mov    esi,eax
6400b4c7:	push   0x64029fd4
6400b4cc:	push   0x3
6400b4ce:	push   0x6402a000
6400b4d3:	mov    BYTE PTR [esp+0x78],0x3
6400b4d8:	call   0x64006690
6400b4dd:	add    esp,0xc
6400b4e0:	push   eax
6400b4e1:	lea    ebx,[esp+0x34]
6400b4e5:	call   0x6400a850
6400b4ea:	mov    BYTE PTR [esp+0x6c],0x4
6400b4ef:	mov    ecx,DWORD PTR [esi]
6400b4f1:	xor    ebx,ebx
6400b4f3:	cmp    ecx,ebx
6400b4f5:	je     0x6400b4fb
6400b4f7:	mov    ecx,DWORD PTR [ecx]
6400b4f9:	jmp    0x6400b4fd
6400b4fb:	xor    ecx,ecx
6400b4fd:	mov    eax,DWORD PTR [eax]
6400b4ff:	cmp    eax,ebx
6400b501:	je     0x6400b507
6400b503:	mov    edx,DWORD PTR [eax]
6400b505:	jmp    0x6400b509
6400b507:	xor    edx,edx
6400b509:	mov    eax,DWORD PTR [esp+0x1c]
6400b50d:	mov    esi,DWORD PTR [eax]
6400b50f:	lea    edi,[esp+0x24]
6400b513:	push   edi
6400b514:	push   ebx
6400b515:	push   0x30
6400b517:	push   ecx
6400b518:	push   edx
6400b519:	push   eax
6400b51a:	mov    eax,DWORD PTR [esi+0x50]
6400b51d:	call   eax
6400b51f:	lea    edi,[esp+0x30]
6400b523:	mov    esi,eax
6400b525:	call   0x6400a980
6400b52a:	lea    edi,[esp+0x34]
6400b52e:	call   0x6400a980
6400b533:	lea    edi,[esp+0x38]
6400b537:	mov    BYTE PTR [esp+0x6c],bl
6400b53b:	call   0x6400a980
6400b540:	cmp    esi,ebx
6400b542:	jge    0x6400b559
6400b544:	mov    eax,DWORD PTR [esp+0x1c]
6400b548:	mov    ecx,DWORD PTR [eax]
6400b54a:	mov    edx,DWORD PTR [ecx+0x8]
6400b54d:	push   eax
6400b54e:	call   edx
6400b550:	mov    eax,DWORD PTR [esp+0x20]
6400b554:	jmp    0x6400b647
6400b559:	mov    eax,DWORD PTR [esp+0x24]
6400b55d:	cmp    eax,ebx
6400b55f:	mov    DWORD PTR [esp+0x2c],ebx
6400b563:	je     0x6400b61f
6400b569:	mov    edi,DWORD PTR ds:0x64026198
6400b56f:	nop
6400b570:	mov    ecx,DWORD PTR [eax]
6400b572:	lea    edx,[esp+0x2c]
6400b576:	push   edx
6400b577:	lea    edx,[esp+0x2c]
6400b57b:	push   edx
6400b57c:	push   0x1
6400b57e:	push   0xffffffff
6400b580:	push   eax
6400b581:	mov    eax,DWORD PTR [ecx+0x10]
6400b584:	call   eax
6400b586:	cmp    DWORD PTR [esp+0x2c],ebx
6400b58a:	je     0x6400b61f
6400b590:	mov    esi,DWORD PTR [esp+0x28]
6400b594:	mov    eax,DWORD PTR [esp+0x7c]
6400b598:	mov    ebp,DWORD PTR [esi]
6400b59a:	push   ebx
6400b59b:	push   ebx
6400b59c:	lea    ecx,[esp+0x44]
6400b5a0:	push   ecx
6400b5a1:	push   ebx
6400b5a2:	call   0x6400ac20
6400b5a7:	mov    edx,DWORD PTR [ebp+0x10]
6400b5aa:	push   eax
6400b5ab:	push   esi
6400b5ac:	call   edx
6400b5ae:	cmp    eax,ebx
6400b5b0:	jl     0x6400b5ba
6400b5b2:	cmp    WORD PTR [esp+0x3c],0x8
6400b5b8:	je     0x6400b5db
6400b5ba:	lea    eax,[esp+0x3c]
6400b5be:	push   eax
6400b5bf:	call   edi
6400b5c1:	mov    eax,DWORD PTR [esp+0x28]
6400b5c5:	mov    ecx,DWORD PTR [eax]
6400b5c7:	mov    edx,DWORD PTR [ecx+0x8]
6400b5ca:	push   eax
6400b5cb:	call   edx
6400b5cd:	mov    eax,DWORD PTR [esp+0x24]
6400b5d1:	cmp    eax,ebx
6400b5d3:	mov    ebp,DWORD PTR [esp+0x74]
6400b5d7:	jne    0x6400b570
6400b5d9:	jmp    0x6400b61f
6400b5db:	lea    eax,[esp+0x4c]
6400b5df:	push   eax
6400b5e0:	call   DWORD PTR ds:0x64026190
6400b5e6:	lea    ecx,[esp+0x3c]
6400b5ea:	push   ecx
6400b5eb:	lea    edx,[esp+0x50]
6400b5ef:	push   edx
6400b5f0:	call   DWORD PTR ds:0x64026194
6400b5f6:	cmp    eax,ebx
6400b5f8:	jge    0x6400b600
6400b5fa:	push   eax
6400b5fb:	call   0x6401fdb0
6400b600:	lea    esi,[esp+0x4c]
6400b604:	lea    ecx,[esp+0x18]
6400b608:	mov    BYTE PTR [esp+0x6c],0x5
6400b60d:	call   0x6400ad00
6400b612:	mov    eax,esi
6400b614:	push   eax
6400b615:	mov    BYTE PTR [esp+0x70],bl
6400b619:	call   edi
6400b61b:	mov    ebp,DWORD PTR [esp+0x74]
6400b61f:	mov    eax,DWORD PTR [esp+0x1c]
6400b623:	mov    ecx,DWORD PTR [eax]
6400b625:	mov    edx,DWORD PTR [ecx+0x8]
6400b628:	push   eax
6400b629:	call   edx
6400b62b:	mov    eax,DWORD PTR [esp+0x20]
6400b62f:	mov    ecx,DWORD PTR [eax]
6400b631:	mov    edx,DWORD PTR [ecx+0x8]
6400b634:	push   eax
6400b635:	call   edx
6400b637:	mov    eax,DWORD PTR [esp+0x24]
6400b63b:	mov    ecx,DWORD PTR [eax]
6400b63d:	mov    edx,DWORD PTR [ecx+0x8]
6400b640:	push   eax
6400b641:	call   edx
6400b643:	mov    eax,DWORD PTR [esp+0x28]
6400b647:	mov    ecx,DWORD PTR [eax]
6400b649:	mov    edx,DWORD PTR [ecx+0x8]
6400b64c:	push   eax
6400b64d:	call   edx
6400b64f:	call   DWORD PTR ds:0x640261d4
6400b655:	mov    eax,DWORD PTR [esp+0x18]
6400b659:	cmp    eax,ebx
6400b65b:	mov    DWORD PTR [ebp+0x0],eax
6400b65e:	je     0x6400b66a
6400b660:	add    eax,0x8
6400b663:	push   eax
6400b664:	call   DWORD PTR ds:0x64026020
6400b66a:	lea    edi,[esp+0x18]
6400b66e:	call   0x6400a980
6400b673:	mov    eax,ebp
6400b675:	mov    ecx,DWORD PTR [esp+0x64]
6400b679:	mov    DWORD PTR fs:0x0,ecx
6400b680:	pop    ecx
6400b681:	pop    edi
6400b682:	pop    esi
6400b683:	pop    ebp
6400b684:	pop    ebx
6400b685:	add    esp,0x5c
6400b688:	ret    
6400b689:	int3   
6400b68a:	int3   
6400b68b:	int3   
6400b68c:	int3   
6400b68d:	int3   
6400b68e:	int3   
6400b68f:	int3   
6400b690:	push   ebp
6400b691:	mov    ebp,esp
6400b693:	and    esp,0xfffffff8
6400b696:	push   0xffffffff
6400b698:	push   0x64024b28
6400b69d:	mov    eax,fs:0x0
6400b6a3:	push   eax
6400b6a4:	sub    esp,0x14
6400b6a7:	push   esi
6400b6a8:	push   edi
6400b6a9:	mov    eax,ds:0x6402f09c
6400b6ae:	xor    eax,esp
6400b6b0:	push   eax
6400b6b1:	lea    eax,[esp+0x20]
6400b6b5:	mov    fs:0x0,eax
6400b6bb:	mov    DWORD PTR [esp+0x18],0x0
6400b6c3:	call   DWORD PTR ds:0x6402f06c
6400b6c9:	push   0x6402a004
6400b6ce:	push   0xc
6400b6d0:	push   0x6402a03c
6400b6d5:	call   0x64006950
6400b6da:	add    esp,0xc
6400b6dd:	lea    ecx,[esp+0x14]
6400b6e1:	push   ecx
6400b6e2:	mov    edi,eax
6400b6e4:	call   0x6400a8e0
6400b6e9:	push   0x6402a058
6400b6ee:	push   0x15
6400b6f0:	push   0x6402a07c
6400b6f5:	mov    DWORD PTR [esp+0x34],0x0
6400b6fd:	call   0x64006950
6400b702:	add    esp,0xc
6400b705:	lea    edx,[esp+0x10]
6400b709:	push   edx
6400b70a:	mov    edi,eax
6400b70c:	call   0x6400a8e0
6400b711:	lea    eax,[esp+0x14]
6400b715:	push   eax
6400b716:	lea    ecx,[esp+0x14]
6400b71a:	push   ecx
6400b71b:	lea    edx,[esp+0x20]
6400b71f:	push   edx
6400b720:	mov    BYTE PTR [esp+0x34],0x1
6400b725:	call   0x6400b330
6400b72a:	add    esp,0xc
6400b72d:	mov    esi,DWORD PTR [esp+0x10]
6400b731:	test   esi,esi
6400b733:	je     0x6400b769
6400b735:	lea    eax,[esi+0x8]
6400b738:	push   eax
6400b739:	call   DWORD PTR ds:0x64026098
6400b73f:	test   eax,eax
6400b741:	jne    0x6400b769
6400b743:	mov    eax,DWORD PTR [esi]
6400b745:	test   eax,eax
6400b747:	je     0x6400b750
6400b749:	push   eax
6400b74a:	call   DWORD PTR ds:0x640261a4
6400b750:	mov    eax,DWORD PTR [esi+0x4]
6400b753:	test   eax,eax
6400b755:	je     0x6400b760
6400b757:	push   eax
6400b758:	call   0x64014354
6400b75d:	add    esp,0x4
6400b760:	push   esi
6400b761:	call   0x64013402
6400b766:	add    esp,0x4
6400b769:	mov    BYTE PTR [esp+0x28],0x4
6400b76e:	mov    esi,DWORD PTR [esp+0x14]
6400b772:	test   esi,esi
6400b774:	je     0x6400b7aa
6400b776:	lea    ecx,[esi+0x8]
6400b779:	push   ecx
6400b77a:	call   DWORD PTR ds:0x64026098
6400b780:	test   eax,eax
6400b782:	jne    0x6400b7aa
6400b784:	mov    eax,DWORD PTR [esi]
6400b786:	test   eax,eax
6400b788:	je     0x6400b791
6400b78a:	push   eax
6400b78b:	call   DWORD PTR ds:0x640261a4
6400b791:	mov    eax,DWORD PTR [esi+0x4]
6400b794:	test   eax,eax
6400b796:	je     0x6400b7a1
6400b798:	push   eax
6400b799:	call   0x64014354
6400b79e:	add    esp,0x4
6400b7a1:	push   esi
6400b7a2:	call   0x64013402
6400b7a7:	add    esp,0x4
6400b7aa:	mov    esi,DWORD PTR [esp+0x18]
6400b7ae:	test   esi,esi
6400b7b0:	je     0x6400b7b6
6400b7b2:	mov    eax,DWORD PTR [esi]
6400b7b4:	jmp    0x6400b7b8
6400b7b6:	xor    eax,eax
6400b7b8:	mov    edi,DWORD PTR [ebp+0x8]
6400b7bb:	push   eax
6400b7bc:	mov    ecx,edi
6400b7be:	call   0x64002590
6400b7c3:	test   esi,esi
6400b7c5:	je     0x6400b7fb
6400b7c7:	lea    edx,[esi+0x8]
6400b7ca:	push   edx
6400b7cb:	call   DWORD PTR ds:0x64026098
6400b7d1:	test   eax,eax
6400b7d3:	jne    0x6400b7fb
6400b7d5:	mov    eax,DWORD PTR [esi]
6400b7d7:	test   eax,eax
6400b7d9:	je     0x6400b7e2
6400b7db:	push   eax
6400b7dc:	call   DWORD PTR ds:0x640261a4
6400b7e2:	mov    eax,DWORD PTR [esi+0x4]
6400b7e5:	test   eax,eax
6400b7e7:	je     0x6400b7f2
6400b7e9:	push   eax
6400b7ea:	call   0x64014354
6400b7ef:	add    esp,0x4
6400b7f2:	push   esi
6400b7f3:	call   0x64013402
6400b7f8:	add    esp,0x4
6400b7fb:	mov    eax,edi
6400b7fd:	mov    ecx,DWORD PTR [esp+0x20]
6400b801:	mov    DWORD PTR fs:0x0,ecx
6400b808:	pop    ecx
6400b809:	pop    edi
6400b80a:	pop    esi
6400b80b:	mov    esp,ebp
6400b80d:	pop    ebp
6400b80e:	ret    
6400b80f:	int3   
6400b810:	mov    ecx,DWORD PTR [eax]
6400b812:	push   ecx
6400b813:	call   0x64013402
6400b818:	pop    ecx
6400b819:	ret    
6400b81a:	int3   
6400b81b:	int3   
6400b81c:	int3   
6400b81d:	int3   
6400b81e:	int3   
6400b81f:	int3   
6400b820:	push   ebp
6400b821:	mov    ebp,esp
6400b823:	and    esp,0xfffffff8
6400b826:	sub    esp,0x8
6400b829:	push   ebx
6400b82a:	mov    ebx,DWORD PTR [esi+0x4]
6400b82d:	test   ebx,ebx
6400b82f:	push   edi
6400b830:	jne    0x6400b836
6400b832:	xor    edi,edi
6400b834:	jmp    0x6400b84e
6400b836:	mov    ecx,DWORD PTR [esi+0x8]
6400b839:	sub    ecx,ebx
6400b83b:	mov    eax,0x92492493
6400b840:	imul   ecx
6400b842:	add    edx,ecx
6400b844:	sar    edx,0x4
6400b847:	mov    edi,edx
6400b849:	shr    edi,0x1f
6400b84c:	add    edi,edx
6400b84e:	test   ebx,ebx
6400b850:	je     0x6400b8a1
6400b852:	mov    ecx,DWORD PTR [esi+0xc]
6400b855:	sub    ecx,ebx
6400b857:	mov    eax,0x92492493
6400b85c:	imul   ecx
6400b85e:	add    edx,ecx
6400b860:	sar    edx,0x4
6400b863:	mov    eax,edx
6400b865:	shr    eax,0x1f
6400b868:	add    eax,edx
6400b86a:	cmp    edi,eax
6400b86c:	jae    0x6400b8a1
6400b86e:	mov    edx,DWORD PTR [ebp+0x8]
6400b871:	mov    edi,DWORD PTR [esi+0x8]
6400b874:	mov    BYTE PTR [esp+0x8],0x0
6400b879:	mov    eax,DWORD PTR [esp+0x8]
6400b87d:	mov    ecx,DWORD PTR [esp+0x8]
6400b881:	push   eax
6400b882:	push   ecx
6400b883:	push   esi
6400b884:	push   edx
6400b885:	push   edi
6400b886:	mov    ecx,0x1
6400b88b:	call   0x6400bec0
6400b890:	add    esp,0x14
6400b893:	add    edi,0x1c
6400b896:	mov    DWORD PTR [esi+0x8],edi
6400b899:	pop    edi
6400b89a:	pop    ebx
6400b89b:	mov    esp,ebp
6400b89d:	pop    ebp
6400b89e:	ret    0x4
6400b8a1:	mov    edi,DWORD PTR [esi+0x8]
6400b8a4:	cmp    ebx,edi
6400b8a6:	jbe    0x6400b8ad
6400b8a8:	call   0x640137b8
6400b8ad:	mov    eax,DWORD PTR [ebp+0x8]
6400b8b0:	push   edi
6400b8b1:	push   esi
6400b8b2:	push   eax
6400b8b3:	lea    ecx,[esp+0x14]
6400b8b7:	push   ecx
6400b8b8:	mov    eax,esi
6400b8ba:	call   0x6400b900
6400b8bf:	pop    edi
6400b8c0:	pop    ebx
6400b8c1:	mov    esp,ebp
6400b8c3:	pop    ebp
6400b8c4:	ret    0x4
6400b8c7:	int3   
6400b8c8:	int3   
6400b8c9:	int3   
6400b8ca:	int3   
6400b8cb:	int3   
6400b8cc:	int3   
6400b8cd:	int3   
6400b8ce:	int3   
6400b8cf:	int3   
6400b8d0:	mov    eax,DWORD PTR [ecx+0x4]
6400b8d3:	test   eax,eax
6400b8d5:	jne    0x6400b8d8
6400b8d7:	ret    
6400b8d8:	mov    ecx,DWORD PTR [ecx+0x8]
6400b8db:	sub    ecx,eax
6400b8dd:	mov    eax,0x92492493
6400b8e2:	imul   ecx
6400b8e4:	add    edx,ecx
6400b8e6:	sar    edx,0x4
6400b8e9:	mov    eax,edx
6400b8eb:	shr    eax,0x1f
6400b8ee:	add    eax,edx
6400b8f0:	ret    
6400b8f1:	int3   
6400b8f2:	int3   
6400b8f3:	int3   
6400b8f4:	int3   
6400b8f5:	int3   
6400b8f6:	int3   
6400b8f7:	int3   
6400b8f8:	int3   
6400b8f9:	int3   
6400b8fa:	int3   
6400b8fb:	int3   
6400b8fc:	int3   
6400b8fd:	int3   
6400b8fe:	int3   
6400b8ff:	int3   
6400b900:	push   ecx
6400b901:	push   ebx
6400b902:	push   ebp
6400b903:	mov    ebp,DWORD PTR [esp+0x1c]
6400b907:	push   esi
6400b908:	mov    esi,eax
6400b90a:	push   edi
6400b90b:	mov    edi,DWORD PTR [esi+0x4]
6400b90e:	test   edi,edi
6400b910:	je     0x6400b92e
6400b912:	mov    ebx,DWORD PTR [esi+0x8]
6400b915:	mov    ecx,ebx
6400b917:	sub    ecx,edi
6400b919:	mov    eax,0x92492493
6400b91e:	imul   ecx
6400b920:	add    edx,ecx
6400b922:	sar    edx,0x4
6400b925:	mov    eax,edx
6400b927:	shr    eax,0x1f
6400b92a:	add    eax,edx
6400b92c:	jne    0x6400b936
6400b92e:	mov    ebx,DWORD PTR [esp+0x20]
6400b932:	xor    edi,edi
6400b934:	jmp    0x6400b967
6400b936:	cmp    edi,ebx
6400b938:	jbe    0x6400b93f
6400b93a:	call   0x640137b8
6400b93f:	mov    ebx,DWORD PTR [esp+0x20]
6400b943:	test   ebx,ebx
6400b945:	je     0x6400b94b
6400b947:	cmp    ebx,esi
6400b949:	je     0x6400b950
6400b94b:	call   0x640137b8
6400b950:	mov    ecx,ebp
6400b952:	sub    ecx,edi
6400b954:	mov    eax,0x92492493
6400b959:	imul   ecx
6400b95b:	add    edx,ecx
6400b95d:	sar    edx,0x4
6400b960:	mov    edi,edx
6400b962:	shr    edi,0x1f
6400b965:	add    edi,edx
6400b967:	mov    ecx,DWORD PTR [esp+0x1c]
6400b96b:	push   ebp
6400b96c:	push   ebx
6400b96d:	push   ecx
6400b96e:	mov    ecx,esi
6400b970:	call   0x6400b9f0
6400b975:	mov    ebx,DWORD PTR [esi+0x4]
6400b978:	cmp    ebx,DWORD PTR [esi+0x8]
6400b97b:	jbe    0x6400b982
6400b97d:	call   0x640137b8
6400b982:	lea    edx,[edi*8+0x0]
6400b989:	sub    edx,edi
6400b98b:	lea    edi,[ebx+edx*4]
6400b98e:	cmp    edi,DWORD PTR [esi+0x8]
6400b991:	mov    DWORD PTR [esp+0x24],ebx
6400b995:	ja     0x6400b99c
6400b997:	cmp    edi,DWORD PTR [esi+0x4]
6400b99a:	jae    0x6400b9a1
6400b99c:	call   0x640137b8
6400b9a1:	mov    eax,DWORD PTR [esp+0x18]
6400b9a5:	mov    DWORD PTR [eax+0x4],edi
6400b9a8:	pop    edi
6400b9a9:	mov    DWORD PTR [eax],esi
6400b9ab:	pop    esi
6400b9ac:	pop    ebp
6400b9ad:	pop    ebx
6400b9ae:	pop    ecx
6400b9af:	ret    0x10
6400b9b2:	int3   
6400b9b3:	int3   
6400b9b4:	int3   
6400b9b5:	int3   
6400b9b6:	int3   
6400b9b7:	int3   
6400b9b8:	int3   
6400b9b9:	int3   
6400b9ba:	int3   
6400b9bb:	int3   
6400b9bc:	int3   
6400b9bd:	int3   
6400b9be:	int3   
6400b9bf:	int3   
6400b9c0:	push   ecx
6400b9c1:	mov    ecx,DWORD PTR [esp+0x8]
6400b9c5:	mov    BYTE PTR [esp],0x0
6400b9c9:	mov    eax,DWORD PTR [esp]
6400b9cc:	push   eax
6400b9cd:	mov    eax,DWORD PTR [esp+0xc]
6400b9d1:	push   ecx
6400b9d2:	push   edx
6400b9d3:	push   eax
6400b9d4:	push   edi
6400b9d5:	mov    ecx,esi
6400b9d7:	call   0x6400bec0
6400b9dc:	lea    ecx,[esi*8+0x0]
6400b9e3:	sub    ecx,esi
6400b9e5:	lea    eax,[edi+ecx*4]
6400b9e8:	add    esp,0x18
6400b9eb:	ret    0x4
6400b9ee:	int3   
6400b9ef:	int3   
6400b9f0:	push   ebp
6400b9f1:	mov    ebp,esp
6400b9f3:	push   0xffffffff
6400b9f5:	push   0x64023c98
6400b9fa:	mov    eax,fs:0x0
6400ba00:	push   eax
6400ba01:	sub    esp,0x34
6400ba04:	mov    eax,ds:0x6402f09c
6400ba09:	xor    eax,ebp
6400ba0b:	mov    DWORD PTR [ebp-0x14],eax
6400ba0e:	push   ebx
6400ba0f:	push   esi
6400ba10:	push   edi
6400ba11:	push   eax
6400ba12:	lea    eax,[ebp-0xc]
6400ba15:	mov    fs:0x0,eax
6400ba1b:	mov    DWORD PTR [ebp-0x10],esp
6400ba1e:	mov    eax,DWORD PTR [ebp+0x8]
6400ba21:	push   0xffffffff
6400ba23:	xor    edi,edi
6400ba25:	mov    ebx,ecx
6400ba27:	push   edi
6400ba28:	push   eax
6400ba29:	lea    ecx,[ebp-0x30]
6400ba2c:	mov    DWORD PTR [ebp-0x3c],ebx
6400ba2f:	mov    DWORD PTR [ebp-0x18],0xf
6400ba36:	mov    DWORD PTR [ebp-0x1c],edi
6400ba39:	mov    BYTE PTR [ebp-0x2c],0x0
6400ba3d:	call   0x64001780
6400ba42:	mov    DWORD PTR [ebp-0x4],edi
6400ba45:	mov    ecx,DWORD PTR [ebx+0x4]
6400ba48:	cmp    ecx,edi
6400ba4a:	je     0x6400ba64
6400ba4c:	mov    esi,DWORD PTR [ebx+0xc]
6400ba4f:	sub    esi,ecx
6400ba51:	mov    eax,0x92492493
6400ba56:	imul   esi
6400ba58:	add    edx,esi
6400ba5a:	sar    edx,0x4
6400ba5d:	mov    edi,edx
6400ba5f:	shr    edi,0x1f
6400ba62:	add    edi,edx
6400ba64:	test   ecx,ecx
6400ba66:	jne    0x6400ba6c
6400ba68:	xor    eax,eax
6400ba6a:	jmp    0x6400ba84
6400ba6c:	mov    esi,DWORD PTR [ebx+0x8]
6400ba6f:	sub    esi,ecx
6400ba71:	mov    eax,0x92492493
6400ba76:	imul   esi
6400ba78:	add    edx,esi
6400ba7a:	sar    edx,0x4
6400ba7d:	mov    eax,edx
6400ba7f:	shr    eax,0x1f
6400ba82:	add    eax,edx
6400ba84:	mov    edx,0x9249249
6400ba89:	sub    edx,eax
6400ba8b:	cmp    edx,0x1
6400ba8e:	jae    0x6400ba95
6400ba90:	call   0x6400bd30
6400ba95:	test   ecx,ecx
6400ba97:	jne    0x6400ba9d
6400ba99:	xor    eax,eax
6400ba9b:	jmp    0x6400bab5
6400ba9d:	mov    esi,DWORD PTR [ebx+0x8]
6400baa0:	sub    esi,ecx
6400baa2:	mov    eax,0x92492493
6400baa7:	imul   esi
6400baa9:	add    edx,esi
6400baab:	sar    edx,0x4
6400baae:	mov    eax,edx
6400bab0:	shr    eax,0x1f
6400bab3:	add    eax,edx
6400bab5:	add    eax,0x1
6400bab8:	cmp    edi,eax
6400baba:	jae    0x6400bc16
6400bac0:	mov    eax,edi
6400bac2:	shr    eax,1
6400bac4:	mov    edx,0x9249249
6400bac9:	sub    edx,eax
6400bacb:	cmp    edx,edi
6400bacd:	jae    0x6400bad3
6400bacf:	xor    edi,edi
6400bad1:	jmp    0x6400bad5
6400bad3:	add    edi,eax
6400bad5:	test   ecx,ecx
6400bad7:	jne    0x6400badd
6400bad9:	xor    eax,eax
6400badb:	jmp    0x6400baf5
6400badd:	mov    esi,DWORD PTR [ebx+0x8]
6400bae0:	sub    esi,ecx
6400bae2:	mov    eax,0x92492493
6400bae7:	imul   esi
6400bae9:	add    edx,esi
6400baeb:	sar    edx,0x4
6400baee:	mov    eax,edx
6400baf0:	shr    eax,0x1f
6400baf3:	add    eax,edx
6400baf5:	add    eax,0x1
6400baf8:	cmp    edi,eax
6400bafa:	jae    0x6400bb08
6400bafc:	mov    ecx,ebx
6400bafe:	call   0x6400b8d0
6400bb03:	mov    edi,eax
6400bb05:	add    edi,0x1
6400bb08:	push   0x0
6400bb0a:	push   edi
6400bb0b:	call   0x6400be50
6400bb10:	mov    BYTE PTR [ebp-0x4],0x1
6400bb14:	mov    ecx,DWORD PTR [ebx+0x4]
6400bb17:	mov    BYTE PTR [ebp-0x34],0x0
6400bb1b:	mov    edx,DWORD PTR [ebp-0x34]
6400bb1e:	push   edx
6400bb1f:	mov    edx,DWORD PTR [ebp-0x34]
6400bb22:	push   edx
6400bb23:	mov    edx,DWORD PTR [ebp+0x10]
6400bb26:	push   ebx
6400bb27:	push   edx
6400bb28:	mov    edx,eax
6400bb2a:	mov    DWORD PTR [ebp-0x40],eax
6400bb2d:	mov    DWORD PTR [ebp-0x38],eax
6400bb30:	call   0x6400bfe0
6400bb35:	add    esp,0x18
6400bb38:	mov    esi,eax
6400bb3a:	mov    BYTE PTR [ebp-0x34],0x0
6400bb3e:	mov    eax,DWORD PTR [ebp-0x34]
6400bb41:	mov    ecx,DWORD PTR [ebp-0x34]
6400bb44:	push   eax
6400bb45:	push   ecx
6400bb46:	push   ebx
6400bb47:	lea    edx,[ebp-0x30]
6400bb4a:	push   edx
6400bb4b:	push   esi
6400bb4c:	mov    ecx,0x1
6400bb51:	mov    DWORD PTR [ebp-0x38],esi
6400bb54:	call   0x6400bec0
6400bb59:	mov    eax,DWORD PTR [ebx+0x8]
6400bb5c:	add    esp,0x14
6400bb5f:	mov    BYTE PTR [ebp-0x34],0x0
6400bb63:	mov    ecx,DWORD PTR [ebp-0x34]
6400bb66:	mov    edx,DWORD PTR [ebp-0x34]
6400bb69:	push   ecx
6400bb6a:	mov    ecx,DWORD PTR [ebp+0x10]
6400bb6d:	push   edx
6400bb6e:	add    esi,0x1c
6400bb71:	push   ebx
6400bb72:	push   eax
6400bb73:	mov    edx,esi
6400bb75:	mov    DWORD PTR [ebp-0x38],esi
6400bb78:	call   0x6400bfe0
6400bb7d:	mov    esi,DWORD PTR [ebx+0x4]
6400bb80:	add    esp,0x10
6400bb83:	test   esi,esi
6400bb85:	jne    0x6400bb8b
6400bb87:	xor    eax,eax
6400bb89:	jmp    0x6400bba3
6400bb8b:	mov    ecx,DWORD PTR [ebx+0x8]
6400bb8e:	sub    ecx,esi
6400bb90:	mov    eax,0x92492493
6400bb95:	imul   ecx
6400bb97:	add    edx,ecx
6400bb99:	sar    edx,0x4
6400bb9c:	mov    eax,edx
6400bb9e:	shr    eax,0x1f
6400bba1:	add    eax,edx
6400bba3:	add    eax,0x1
6400bba6:	test   esi,esi
6400bba8:	mov    DWORD PTR [ebp-0x34],eax
6400bbab:	je     0x6400bbcb
6400bbad:	mov    eax,DWORD PTR [ebp-0x34]
6400bbb0:	mov    ecx,DWORD PTR [ebx+0x8]
6400bbb3:	push   eax
6400bbb4:	push   ebx
6400bbb5:	push   ecx
6400bbb6:	push   esi
6400bbb7:	call   0x6400bf70
6400bbbc:	mov    edx,DWORD PTR [ebx+0x4]
6400bbbf:	push   edx
6400bbc0:	call   0x64013402
6400bbc5:	mov    eax,DWORD PTR [ebp-0x34]
6400bbc8:	add    esp,0x14
6400bbcb:	mov    ecx,DWORD PTR [ebp-0x40]
6400bbce:	lea    edx,[edi*8+0x0]
6400bbd5:	sub    edx,edi
6400bbd7:	lea    edx,[ecx+edx*4]
6400bbda:	mov    DWORD PTR [ebx+0xc],edx
6400bbdd:	lea    edx,[eax*8+0x0]
6400bbe4:	sub    edx,eax
6400bbe6:	lea    eax,[ecx+edx*4]
6400bbe9:	mov    DWORD PTR [ebx+0x8],eax
6400bbec:	mov    DWORD PTR [ebx+0x4],ecx
6400bbef:	jmp    0x6400bcd2
6400bbf4:	mov    ecx,DWORD PTR [ebp-0x38]
6400bbf7:	mov    esi,DWORD PTR [ebp-0x40]
6400bbfa:	push   ecx
6400bbfb:	mov    ecx,DWORD PTR [ebp-0x3c]
6400bbfe:	push   esi
6400bbff:	call   0x6400bd10
6400bc04:	push   esi
6400bc05:	call   0x64013402
6400bc0a:	add    esp,0x4
6400bc0d:	push   0x0
6400bc0f:	push   0x0
6400bc11:	call   0x6401384b
6400bc16:	mov    edi,DWORD PTR [ebx+0x8]
6400bc19:	mov    esi,DWORD PTR [ebp+0x10]
6400bc1c:	mov    ecx,edi
6400bc1e:	sub    ecx,esi
6400bc20:	mov    eax,0x92492493
6400bc25:	imul   ecx
6400bc27:	add    edx,ecx
6400bc29:	sar    edx,0x4
6400bc2c:	mov    eax,edx
6400bc2e:	shr    eax,0x1f
6400bc31:	add    eax,edx
6400bc33:	cmp    eax,0x1
6400bc36:	mov    edx,ebx
6400bc38:	jae    0x6400bcaa
6400bc3a:	lea    ecx,[esi+0x1c]
6400bc3d:	push   ecx
6400bc3e:	push   edi
6400bc3f:	push   esi
6400bc40:	call   0x6400bdb0
6400bc45:	mov    BYTE PTR [ebp-0x4],0x3
6400bc49:	mov    edi,DWORD PTR [ebx+0x8]
6400bc4c:	lea    edx,[ebp-0x30]
6400bc4f:	push   edx
6400bc50:	mov    ecx,edi
6400bc52:	sub    ecx,esi
6400bc54:	mov    eax,0x92492493
6400bc59:	imul   ecx
6400bc5b:	add    edx,ecx
6400bc5d:	sar    edx,0x4
6400bc60:	mov    eax,edx
6400bc62:	shr    eax,0x1f
6400bc65:	add    eax,edx
6400bc67:	mov    esi,0x1
6400bc6c:	sub    esi,eax
6400bc6e:	mov    edx,ebx
6400bc70:	call   0x6400b9c0
6400bc75:	mov    eax,DWORD PTR [ebp+0x10]
6400bc78:	mov    DWORD PTR [ebp-0x4],0x0
6400bc7f:	add    DWORD PTR [ebx+0x8],0x1c
6400bc83:	mov    ebx,DWORD PTR [ebx+0x8]
6400bc86:	lea    edi,[ebx-0x1c]
6400bc89:	jmp    0x6400bcca
6400bc8b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400bc8e:	mov    edx,DWORD PTR [ecx+0x8]
6400bc91:	mov    eax,DWORD PTR [ebp+0x10]
6400bc94:	add    edx,0x1c
6400bc97:	push   edx
6400bc98:	add    eax,0x1c
6400bc9b:	push   eax
6400bc9c:	call   0x6400bd10
6400bca1:	push   0x0
6400bca3:	push   0x0
6400bca5:	call   0x6401384b
6400bcaa:	push   edi
6400bcab:	lea    eax,[edi-0x1c]
6400bcae:	push   edi
6400bcaf:	push   eax
6400bcb0:	mov    DWORD PTR [ebp-0x34],eax
6400bcb3:	call   0x6400bdb0
6400bcb8:	mov    DWORD PTR [ebx+0x8],eax
6400bcbb:	mov    eax,DWORD PTR [ebp-0x34]
6400bcbe:	mov    ebx,esi
6400bcc0:	call   0x6400be00
6400bcc5:	lea    edi,[esi+0x1c]
6400bcc8:	mov    eax,esi
6400bcca:	lea    ebx,[ebp-0x30]
6400bccd:	call   0x6400bde0
6400bcd2:	cmp    DWORD PTR [ebp-0x18],0x10
6400bcd6:	jb     0x6400bce4
6400bcd8:	mov    ecx,DWORD PTR [ebp-0x2c]
6400bcdb:	push   ecx
6400bcdc:	call   0x64013402
6400bce1:	add    esp,0x4
6400bce4:	mov    ecx,DWORD PTR [ebp-0xc]
6400bce7:	mov    DWORD PTR fs:0x0,ecx
6400bcee:	pop    ecx
6400bcef:	pop    edi
6400bcf0:	pop    esi
6400bcf1:	pop    ebx
6400bcf2:	mov    ecx,DWORD PTR [ebp-0x14]
6400bcf5:	xor    ecx,ebp
6400bcf7:	call   0x64013c5c
6400bcfc:	mov    esp,ebp
6400bcfe:	pop    ebp
6400bcff:	ret    0xc
6400bd02:	int3   
6400bd03:	int3   
6400bd04:	int3   
6400bd05:	int3   
6400bd06:	int3   
6400bd07:	int3   
6400bd08:	int3   
6400bd09:	int3   
6400bd0a:	int3   
6400bd0b:	int3   
6400bd0c:	int3   
6400bd0d:	int3   
6400bd0e:	int3   
6400bd0f:	int3   
6400bd10:	mov    eax,DWORD PTR [esp+0x8]
6400bd14:	mov    edx,DWORD PTR [esp+0x4]
6400bd18:	push   eax
6400bd19:	push   ecx
6400bd1a:	mov    ecx,DWORD PTR [esp+0x10]
6400bd1e:	push   ecx
6400bd1f:	push   edx
6400bd20:	call   0x6400bf70
6400bd25:	add    esp,0x10
6400bd28:	ret    0x8
6400bd2b:	int3   
6400bd2c:	int3   
6400bd2d:	int3   
6400bd2e:	int3   
6400bd2f:	int3   
6400bd30:	push   ebp
6400bd31:	mov    ebp,esp
6400bd33:	and    esp,0xfffffff8
6400bd36:	push   0xffffffff
6400bd38:	push   0x64023c68
6400bd3d:	mov    eax,fs:0x0
6400bd43:	push   eax
6400bd44:	sub    esp,0x4c
6400bd47:	mov    eax,ds:0x6402f09c
6400bd4c:	xor    eax,esp
6400bd4e:	push   eax
6400bd4f:	lea    eax,[esp+0x50]
6400bd53:	mov    fs:0x0,eax
6400bd59:	push   0x12
6400bd5b:	push   0x6402a0a8
6400bd60:	lea    ecx,[esp+0x10]
6400bd64:	mov    DWORD PTR [esp+0x28],0xf
6400bd6c:	mov    DWORD PTR [esp+0x24],0x0
6400bd74:	mov    BYTE PTR [esp+0x14],0x0
6400bd79:	call   0x64001860
6400bd7e:	lea    eax,[esp+0x8]
6400bd82:	push   eax
6400bd83:	lea    ecx,[esp+0x28]
6400bd87:	mov    DWORD PTR [esp+0x5c],0x0
6400bd8f:	call   0x64002d00
6400bd94:	push   0x6402c690
6400bd99:	lea    ecx,[esp+0x28]
6400bd9d:	push   ecx
6400bd9e:	mov    DWORD PTR [esp+0x2c],0x6402631c
6400bda6:	call   0x6401384b
6400bdab:	int3   
6400bdac:	int3   
6400bdad:	int3   
6400bdae:	int3   
6400bdaf:	int3   
6400bdb0:	push   ecx
6400bdb1:	mov    ecx,DWORD PTR [esp+0xc]
6400bdb5:	mov    BYTE PTR [esp],0x0
6400bdb9:	mov    eax,DWORD PTR [esp]
6400bdbc:	push   eax
6400bdbd:	mov    eax,DWORD PTR [esp+0x10]
6400bdc1:	push   ecx
6400bdc2:	mov    ecx,DWORD PTR [esp+0x10]
6400bdc6:	push   edx
6400bdc7:	mov    edx,DWORD PTR [esp+0x1c]
6400bdcb:	push   eax
6400bdcc:	call   0x6400bfe0
6400bdd1:	add    esp,0x14
6400bdd4:	ret    0xc
6400bdd7:	int3   
6400bdd8:	int3   
6400bdd9:	int3   
6400bdda:	int3   
6400bddb:	int3   
6400bddc:	int3   
6400bddd:	int3   
6400bdde:	int3   
6400bddf:	int3   
6400bde0:	push   esi
6400bde1:	mov    esi,eax
6400bde3:	cmp    esi,edi
6400bde5:	je     0x6400bdfa
6400bde7:	push   0xffffffff
6400bde9:	push   0x0
6400bdeb:	push   ebx
6400bdec:	mov    ecx,esi
6400bdee:	call   0x64001780
6400bdf3:	add    esi,0x1c
6400bdf6:	cmp    esi,edi
6400bdf8:	jne    0x6400bde7
6400bdfa:	pop    esi
6400bdfb:	ret    
6400bdfc:	int3   
6400bdfd:	int3   
6400bdfe:	int3   
6400bdff:	int3   
6400be00:	push   ecx
6400be01:	push   esi
6400be02:	mov    esi,eax
6400be04:	mov    BYTE PTR [esp+0x4],0x0
6400be09:	mov    eax,DWORD PTR [esp+0x4]
6400be0d:	mov    ecx,DWORD PTR [esp+0x4]
6400be11:	mov    edx,DWORD PTR [esp+0x4]
6400be15:	push   eax
6400be16:	push   ecx
6400be17:	push   edx
6400be18:	push   edi
6400be19:	push   ebx
6400be1a:	mov    ecx,esi
6400be1c:	call   0x6400c120
6400be21:	sub    esi,ebx
6400be23:	mov    eax,0x92492493
6400be28:	imul   esi
6400be2a:	add    edx,esi
6400be2c:	sar    edx,0x4
6400be2f:	mov    eax,edx
6400be31:	shr    eax,0x1f
6400be34:	add    eax,edx
6400be36:	lea    ecx,[eax*8+0x0]
6400be3d:	sub    ecx,eax
6400be3f:	add    ecx,ecx
6400be41:	add    esp,0x14
6400be44:	add    ecx,ecx
6400be46:	mov    eax,edi
6400be48:	sub    eax,ecx
6400be4a:	pop    esi
6400be4b:	pop    ecx
6400be4c:	ret    
6400be4d:	int3   
6400be4e:	int3   
6400be4f:	int3   
6400be50:	mov    ecx,DWORD PTR [esp+0x4]
6400be54:	sub    esp,0xc
6400be57:	test   ecx,ecx
6400be59:	ja     0x6400be77
6400be5b:	xor    ecx,ecx
6400be5d:	lea    edx,[ecx*8+0x0]
6400be64:	sub    edx,ecx
6400be66:	add    edx,edx
6400be68:	add    edx,edx
6400be6a:	push   edx
6400be6b:	call   0x640137e1
6400be70:	add    esp,0x4
6400be73:	add    esp,0xc
6400be76:	ret    
6400be77:	or     eax,0xffffffff
6400be7a:	xor    edx,edx
6400be7c:	div    ecx
6400be7e:	cmp    eax,0x1c
6400be81:	jae    0x6400be5d
6400be83:	lea    eax,[esp+0x10]
6400be87:	push   eax
6400be88:	lea    ecx,[esp+0x4]
6400be8c:	mov    DWORD PTR [esp+0x14],0x0
6400be94:	call   0x6401345d
6400be99:	push   0x6402c5c4
6400be9e:	lea    ecx,[esp+0x4]
6400bea2:	push   ecx
6400bea3:	mov    DWORD PTR [esp+0x8],0x64026304
6400beab:	call   0x6401384b
6400beb0:	int3   
6400beb1:	int3   
6400beb2:	int3   
6400beb3:	int3   
6400beb4:	int3   
6400beb5:	int3   
6400beb6:	int3   
6400beb7:	int3   
6400beb8:	int3   
6400beb9:	int3   
6400beba:	int3   
6400bebb:	int3   
6400bebc:	int3   
6400bebd:	int3   
6400bebe:	int3   
6400bebf:	int3   
6400bec0:	push   ebp
6400bec1:	mov    ebp,esp
6400bec3:	push   0xffffffff
6400bec5:	push   0x640237b1
6400beca:	mov    eax,fs:0x0
6400bed0:	push   eax
6400bed1:	sub    esp,0x10
6400bed4:	push   ebx
6400bed5:	push   esi
6400bed6:	push   edi
6400bed7:	mov    eax,ds:0x6402f09c
6400bedc:	xor    eax,ebp
6400bede:	push   eax
6400bedf:	lea    eax,[ebp-0xc]
6400bee2:	mov    fs:0x0,eax
6400bee8:	mov    DWORD PTR [ebp-0x10],esp
6400beeb:	mov    edi,ecx
6400beed:	mov    esi,DWORD PTR [ebp+0x8]
6400bef0:	xor    ebx,ebx
6400bef2:	mov    DWORD PTR [ebp-0x14],esi
6400bef5:	mov    DWORD PTR [ebp-0x4],ebx
6400bef8:	cmp    edi,ebx
6400befa:	jbe    0x6400bf58
6400befc:	mov    DWORD PTR [ebp-0x18],esi
6400beff:	mov    DWORD PTR [ebp-0x1c],esi
6400bf02:	cmp    esi,ebx
6400bf04:	mov    BYTE PTR [ebp-0x4],0x1
6400bf08:	je     0x6400bf25
6400bf0a:	mov    eax,DWORD PTR [ebp+0xc]
6400bf0d:	push   0xffffffff
6400bf0f:	push   ebx
6400bf10:	mov    DWORD PTR [esi+0x18],0xf
6400bf17:	mov    DWORD PTR [esi+0x14],ebx
6400bf1a:	push   eax
6400bf1b:	mov    ecx,esi
6400bf1d:	mov    BYTE PTR [esi+0x4],bl
6400bf20:	call   0x64001780
6400bf25:	sub    edi,0x1
6400bf28:	add    esi,0x1c
6400bf2b:	mov    BYTE PTR [ebp-0x4],bl
6400bf2e:	mov    DWORD PTR [ebp+0x8],esi
6400bf31:	jmp    0x6400bef8
6400bf33:	mov    esi,DWORD PTR [ebp-0x14]
6400bf36:	mov    edi,DWORD PTR [ebp+0x8]
6400bf39:	cmp    esi,edi
6400bf3b:	je     0x6400bf4f
6400bf3d:	mov    ebx,DWORD PTR [ebp+0x10]
6400bf40:	push   esi
6400bf41:	mov    ecx,ebx
6400bf43:	call   0x6400bfb0
6400bf48:	add    esi,0x1c
6400bf4b:	cmp    esi,edi
6400bf4d:	jne    0x6400bf40
6400bf4f:	xor    ebx,ebx
6400bf51:	push   ebx
6400bf52:	push   ebx
6400bf53:	call   0x6401384b
6400bf58:	mov    ecx,DWORD PTR [ebp-0xc]
6400bf5b:	mov    DWORD PTR fs:0x0,ecx
6400bf62:	pop    ecx
6400bf63:	pop    edi
6400bf64:	pop    esi
6400bf65:	pop    ebx
6400bf66:	mov    esp,ebp
6400bf68:	pop    ebp
6400bf69:	ret    
6400bf6a:	int3   
6400bf6b:	int3   
6400bf6c:	int3   
6400bf6d:	int3   
6400bf6e:	int3   
6400bf6f:	int3   
6400bf70:	push   esi
6400bf71:	mov    esi,DWORD PTR [esp+0x8]
6400bf75:	push   edi
6400bf76:	mov    edi,DWORD PTR [esp+0x10]
6400bf7a:	cmp    esi,edi
6400bf7c:	je     0x6400bfa8
6400bf7e:	push   ebx
6400bf7f:	xor    ebx,ebx
6400bf81:	cmp    DWORD PTR [esi+0x18],0x10
6400bf85:	jb     0x6400bf93
6400bf87:	mov    eax,DWORD PTR [esi+0x4]
6400bf8a:	push   eax
6400bf8b:	call   0x64013402
6400bf90:	add    esp,0x4
6400bf93:	mov    DWORD PTR [esi+0x18],0xf
6400bf9a:	mov    DWORD PTR [esi+0x14],ebx
6400bf9d:	mov    BYTE PTR [esi+0x4],bl
6400bfa0:	add    esi,0x1c
6400bfa3:	cmp    esi,edi
6400bfa5:	jne    0x6400bf81
6400bfa7:	pop    ebx
6400bfa8:	pop    edi
6400bfa9:	pop    esi
6400bfaa:	ret    
6400bfab:	int3   
6400bfac:	int3   
6400bfad:	int3   
6400bfae:	int3   
6400bfaf:	int3   
6400bfb0:	push   esi
6400bfb1:	mov    esi,DWORD PTR [esp+0x8]
6400bfb5:	cmp    DWORD PTR [esi+0x18],0x10
6400bfb9:	jb     0x6400bfc7
6400bfbb:	mov    eax,DWORD PTR [esi+0x4]
6400bfbe:	push   eax
6400bfbf:	call   0x64013402
6400bfc4:	add    esp,0x4
6400bfc7:	xor    eax,eax
6400bfc9:	mov    DWORD PTR [esi+0x18],0xf
6400bfd0:	mov    DWORD PTR [esi+0x14],eax
6400bfd3:	mov    BYTE PTR [esi+0x4],al
6400bfd6:	pop    esi
6400bfd7:	ret    0x4
6400bfda:	int3   
6400bfdb:	int3   
6400bfdc:	int3   
6400bfdd:	int3   
6400bfde:	int3   
6400bfdf:	int3   
6400bfe0:	push   ebp
6400bfe1:	mov    ebp,esp
6400bfe3:	push   0xffffffff
6400bfe5:	push   0x64023b19
6400bfea:	mov    eax,fs:0x0
6400bff0:	push   eax
6400bff1:	sub    esp,0x44
6400bff4:	mov    eax,ds:0x6402f09c
6400bff9:	xor    eax,ebp
6400bffb:	mov    DWORD PTR [ebp-0x14],eax
6400bffe:	push   ebx
6400bfff:	push   esi
6400c000:	push   edi
6400c001:	push   eax
6400c002:	lea    eax,[ebp-0xc]
6400c005:	mov    fs:0x0,eax
6400c00b:	mov    DWORD PTR [ebp-0x10],esp
6400c00e:	mov    esi,edx
6400c010:	xor    eax,eax
6400c012:	mov    edi,ecx
6400c014:	mov    DWORD PTR [ebp-0x44],esi
6400c017:	mov    DWORD PTR [ebp-0x48],esi
6400c01a:	mov    DWORD PTR [ebp-0x18],0xf
6400c021:	mov    DWORD PTR [ebp-0x1c],eax
6400c024:	mov    BYTE PTR [ebp-0x2c],al
6400c027:	mov    DWORD PTR [ebp-0x4],eax
6400c02a:	mov    BYTE PTR [ebp-0x4],0x1
6400c02e:	mov    edi,edi
6400c030:	cmp    edi,DWORD PTR [ebp+0x8]
6400c033:	je     0x6400c0e9
6400c039:	mov    DWORD PTR [ebp-0x4c],esi
6400c03c:	mov    DWORD PTR [ebp-0x50],esi
6400c03f:	cmp    esi,eax
6400c041:	mov    BYTE PTR [ebp-0x4],0x2
6400c045:	je     0x6400c062
6400c047:	push   0xffffffff
6400c049:	mov    DWORD PTR [esi+0x14],eax
6400c04c:	mov    DWORD PTR [esi+0x18],0xf
6400c053:	push   eax
6400c054:	mov    BYTE PTR [esi+0x4],al
6400c057:	lea    eax,[ebp-0x30]
6400c05a:	push   eax
6400c05b:	mov    ecx,esi
6400c05d:	call   0x64001780
6400c062:	mov    BYTE PTR [ebp-0x4],0x1
6400c066:	mov    ebx,DWORD PTR [esi+0x10]
6400c069:	mov    eax,DWORD PTR [esi+0x4]
6400c06c:	mov    ecx,DWORD PTR [esi+0x8]
6400c06f:	mov    edx,DWORD PTR [esi+0xc]
6400c072:	mov    DWORD PTR [ebp-0x34],ebx
6400c075:	mov    ebx,DWORD PTR [edi+0x4]
6400c078:	mov    DWORD PTR [esi+0x4],ebx
6400c07b:	mov    ebx,DWORD PTR [edi+0x8]
6400c07e:	mov    DWORD PTR [esi+0x8],ebx
6400c081:	mov    ebx,DWORD PTR [edi+0xc]
6400c084:	mov    DWORD PTR [esi+0xc],ebx
6400c087:	mov    ebx,DWORD PTR [edi+0x10]
6400c08a:	mov    DWORD PTR [esi+0x10],ebx
6400c08d:	mov    DWORD PTR [edi+0x4],eax
6400c090:	mov    DWORD PTR [edi+0x8],ecx
6400c093:	mov    ecx,DWORD PTR [ebp-0x34]
6400c096:	mov    DWORD PTR [edi+0xc],edx
6400c099:	mov    edx,DWORD PTR [edi+0x14]
6400c09c:	mov    DWORD PTR [edi+0x10],ecx
6400c09f:	mov    eax,DWORD PTR [esi+0x14]
6400c0a2:	mov    DWORD PTR [esi+0x14],edx
6400c0a5:	mov    ecx,DWORD PTR [edi+0x18]
6400c0a8:	mov    DWORD PTR [edi+0x14],eax
6400c0ab:	mov    eax,DWORD PTR [esi+0x18]
6400c0ae:	mov    DWORD PTR [esi+0x18],ecx
6400c0b1:	mov    DWORD PTR [edi+0x18],eax
6400c0b4:	add    esi,0x1c
6400c0b7:	add    edi,0x1c
6400c0ba:	mov    DWORD PTR [ebp-0x44],esi
6400c0bd:	xor    eax,eax
6400c0bf:	jmp    0x6400c030
6400c0c4:	mov    esi,DWORD PTR [ebp-0x48]
6400c0c7:	mov    edi,DWORD PTR [ebp-0x44]
6400c0ca:	cmp    esi,edi
6400c0cc:	je     0x6400c0e0
6400c0ce:	mov    ebx,DWORD PTR [ebp+0xc]
6400c0d1:	push   esi
6400c0d2:	mov    ecx,ebx
6400c0d4:	call   0x6400bfb0
6400c0d9:	add    esi,0x1c
6400c0dc:	cmp    esi,edi
6400c0de:	jne    0x6400c0d1
6400c0e0:	push   0x0
6400c0e2:	push   0x0
6400c0e4:	call   0x6401384b
6400c0e9:	cmp    DWORD PTR [ebp-0x18],0x10
6400c0ed:	jb     0x6400c0fb
6400c0ef:	mov    edx,DWORD PTR [ebp-0x2c]
6400c0f2:	push   edx
6400c0f3:	call   0x64013402
6400c0f8:	add    esp,0x4
6400c0fb:	mov    eax,esi
6400c0fd:	mov    ecx,DWORD PTR [ebp-0xc]
6400c100:	mov    DWORD PTR fs:0x0,ecx
6400c107:	pop    ecx
6400c108:	pop    edi
6400c109:	pop    esi
6400c10a:	pop    ebx
6400c10b:	mov    ecx,DWORD PTR [ebp-0x14]
6400c10e:	xor    ecx,ebp
6400c110:	call   0x64013c5c
6400c115:	mov    esp,ebp
6400c117:	pop    ebp
6400c118:	ret    
6400c119:	int3   
6400c11a:	int3   
6400c11b:	int3   
6400c11c:	int3   
6400c11d:	int3   
6400c11e:	int3   
6400c11f:	int3   
6400c120:	push   ecx
6400c121:	mov    eax,ds:0x6402f09c
6400c126:	xor    eax,esp
6400c128:	mov    DWORD PTR [esp],eax
6400c12b:	cmp    DWORD PTR [esp+0x8],ecx
6400c12f:	mov    eax,DWORD PTR [esp+0xc]
6400c133:	je     0x6400c198
6400c135:	push   ebx
6400c136:	push   ebp
6400c137:	push   esi
6400c138:	push   edi
6400c139:	lea    esp,[esp+0x0]
6400c140:	mov    ebp,DWORD PTR [ecx-0x18]
6400c143:	mov    edx,DWORD PTR [eax-0x18]
6400c146:	mov    esi,DWORD PTR [eax-0x14]
6400c149:	mov    edi,DWORD PTR [eax-0x10]
6400c14c:	mov    ebx,DWORD PTR [eax-0xc]
6400c14f:	sub    ecx,0x1c
6400c152:	sub    eax,0x1c
6400c155:	cmp    ecx,DWORD PTR [esp+0x18]
6400c159:	mov    DWORD PTR [eax+0x4],ebp
6400c15c:	mov    ebp,DWORD PTR [ecx+0x8]
6400c15f:	mov    DWORD PTR [eax+0x8],ebp
6400c162:	mov    ebp,DWORD PTR [ecx+0xc]
6400c165:	mov    DWORD PTR [eax+0xc],ebp
6400c168:	mov    ebp,DWORD PTR [ecx+0x10]
6400c16b:	mov    DWORD PTR [eax+0x10],ebp
6400c16e:	mov    DWORD PTR [ecx+0x4],edx
6400c171:	mov    DWORD PTR [ecx+0x8],esi
6400c174:	mov    esi,DWORD PTR [ecx+0x14]
6400c177:	mov    DWORD PTR [ecx+0xc],edi
6400c17a:	mov    DWORD PTR [ecx+0x10],ebx
6400c17d:	mov    edx,DWORD PTR [eax+0x14]
6400c180:	mov    DWORD PTR [eax+0x14],esi
6400c183:	mov    esi,DWORD PTR [ecx+0x18]
6400c186:	mov    DWORD PTR [ecx+0x14],edx
6400c189:	mov    edx,DWORD PTR [eax+0x18]
6400c18c:	mov    DWORD PTR [eax+0x18],esi
6400c18f:	mov    DWORD PTR [ecx+0x18],edx
6400c192:	jne    0x6400c140
6400c194:	pop    edi
6400c195:	pop    esi
6400c196:	pop    ebp
6400c197:	pop    ebx
6400c198:	mov    ecx,DWORD PTR [esp]
6400c19b:	xor    ecx,esp
6400c19d:	call   0x64013c5c
6400c1a2:	pop    ecx
6400c1a3:	ret    
6400c1a4:	int3   
6400c1a5:	int3   
6400c1a6:	int3   
6400c1a7:	int3   
6400c1a8:	int3   
6400c1a9:	int3   
6400c1aa:	int3   
6400c1ab:	int3   
6400c1ac:	int3   
6400c1ad:	int3   
6400c1ae:	int3   
6400c1af:	int3   
6400c1b0:	sub    esp,0x800
6400c1b6:	push   ebx
6400c1b7:	push   ebp
6400c1b8:	xor    ecx,ecx
6400c1ba:	push   esi
6400c1bb:	lea    eax,[ecx+0x1]
6400c1be:	push   edi
6400c1bf:	nop
6400c1c0:	mov    edx,eax
6400c1c2:	and    dl,0x80
6400c1c5:	neg    dl
6400c1c7:	lea    esi,[eax+eax*1]
6400c1ca:	mov    DWORD PTR [esp+ecx*4+0x410],eax
6400c1d1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
6400c1d5:	sbb    edx,edx
6400c1d7:	and    edx,0x1b
6400c1da:	xor    edx,esi
6400c1dc:	xor    edx,eax
6400c1de:	and    edx,0xff
6400c1e4:	add    ecx,0x1
6400c1e7:	cmp    ecx,0x100
6400c1ed:	mov    eax,edx
6400c1ef:	jl     0x6400c1c0
6400c1f1:	mov    eax,0x1
6400c1f6:	mov    ecx,0x64031940
6400c1fb:	jmp    0x6400c200
6400c1fd:	lea    ecx,[ecx+0x0]
6400c200:	mov    edx,eax
6400c202:	and    dl,0x80
6400c205:	neg    dl
6400c207:	mov    DWORD PTR [ecx],eax
6400c209:	sbb    edx,edx
6400c20b:	and    edx,0x1b
6400c20e:	add    eax,eax
6400c210:	xor    edx,eax
6400c212:	and    edx,0xff
6400c218:	add    ecx,0x4
6400c21b:	cmp    ecx,0x64031968
6400c221:	mov    eax,edx
6400c223:	jl     0x6400c200
6400c225:	mov    BYTE PTR ds:0x64031040,0x63
6400c22c:	mov    BYTE PTR ds:0x640331cb,0x0
6400c233:	mov    ebx,0x1
6400c238:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
6400c23c:	add    ecx,ecx
6400c23e:	add    ecx,ecx
6400c240:	lea    edx,[esp+0x80c]
6400c247:	sub    edx,ecx
6400c249:	mov    eax,DWORD PTR [edx]
6400c24b:	mov    ecx,eax
6400c24d:	sar    ecx,0x7
6400c250:	lea    edx,[eax+eax*1]
6400c253:	or     ecx,edx
6400c255:	and    ecx,0xff
6400c25b:	xor    eax,ecx
6400c25d:	mov    edx,ecx
6400c25f:	sar    edx,0x7
6400c262:	add    ecx,ecx
6400c264:	or     edx,ecx
6400c266:	and    edx,0xff
6400c26c:	xor    eax,edx
6400c26e:	mov    ecx,edx
6400c270:	add    edx,edx
6400c272:	sar    ecx,0x7
6400c275:	or     ecx,edx
6400c277:	and    ecx,0xff
6400c27d:	xor    eax,ecx
6400c27f:	mov    edx,ecx
6400c281:	sar    edx,0x7
6400c284:	add    ecx,ecx
6400c286:	or     edx,ecx
6400c288:	xor    edx,0x63
6400c28b:	and    edx,0xff
6400c291:	xor    eax,edx
6400c293:	mov    BYTE PTR [ebx+0x64031040],al
6400c299:	mov    BYTE PTR [eax+0x64033168],bl
6400c29f:	add    ebx,0x1
6400c2a2:	cmp    ebx,0x100
6400c2a8:	jl     0x6400c238
6400c2aa:	xor    ecx,ecx
6400c2ac:	lea    esp,[esp+0x0]
6400c2b0:	movzx  edx,BYTE PTR [ecx+0x64031040]
6400c2b7:	mov    eax,edx
6400c2b9:	and    al,0x80
6400c2bb:	neg    al
6400c2bd:	lea    esi,[edx+edx*1]
6400c2c0:	sbb    eax,eax
6400c2c2:	and    eax,0x1b
6400c2c5:	xor    eax,esi
6400c2c7:	and    eax,0xff
6400c2cc:	mov    esi,eax
6400c2ce:	xor    eax,edx
6400c2d0:	shl    eax,0x8
6400c2d3:	xor    eax,edx
6400c2d5:	shl    eax,0x8
6400c2d8:	xor    eax,edx
6400c2da:	shl    eax,0x8
6400c2dd:	xor    eax,esi
6400c2df:	mov    DWORD PTR [ecx*4+0x64032d68],eax
6400c2e6:	rol    eax,0x8
6400c2e9:	mov    DWORD PTR [ecx*4+0x64032968],eax
6400c2f0:	rol    eax,0x8
6400c2f3:	mov    DWORD PTR [ecx*4+0x64032568],eax
6400c2fa:	rol    eax,0x8
6400c2fd:	mov    DWORD PTR [ecx*4+0x64032168],eax
6400c304:	movzx  eax,BYTE PTR [ecx+0x64033168]
6400c30b:	test   eax,eax
6400c30d:	je     0x6400c361
6400c30f:	mov    esi,DWORD PTR [esp+eax*4+0x10]
6400c313:	mov    edx,DWORD PTR [esp+0x48]
6400c317:	lea    eax,[esi+edx*1]
6400c31a:	cdq    
6400c31b:	mov    edi,0xff
6400c320:	idiv   edi
6400c322:	mov    eax,DWORD PTR [esp+0x34]
6400c326:	add    eax,esi
6400c328:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
6400c32f:	cdq    
6400c330:	idiv   edi
6400c332:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
6400c339:	mov    edx,DWORD PTR [esp+0x44]
6400c33d:	lea    eax,[esi+edx*1]
6400c340:	cdq    
6400c341:	idiv   edi
6400c343:	mov    eax,DWORD PTR [esp+0x3c]
6400c347:	add    eax,esi
6400c349:	mov    esi,0xff
6400c34e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
6400c355:	cdq    
6400c356:	idiv   esi
6400c358:	mov    edx,DWORD PTR [esp+edx*4+0x410]
6400c35f:	jmp    0x6400c369
6400c361:	xor    ebp,ebp
6400c363:	xor    ebx,ebx
6400c365:	xor    edi,edi
6400c367:	xor    edx,edx
6400c369:	shl    edx,0x8
6400c36c:	xor    edx,edi
6400c36e:	shl    edx,0x8
6400c371:	xor    edx,ebx
6400c373:	shl    edx,0x8
6400c376:	xor    edx,ebp
6400c378:	mov    DWORD PTR [ecx*4+0x64031d68],edx
6400c37f:	rol    edx,0x8
6400c382:	mov    DWORD PTR [ecx*4+0x64031968],edx
6400c389:	rol    edx,0x8
6400c38c:	mov    DWORD PTR [ecx*4+0x64031540],edx
6400c393:	rol    edx,0x8
6400c396:	mov    DWORD PTR [ecx*4+0x64031140],edx
6400c39d:	add    ecx,0x1
6400c3a0:	cmp    ecx,0x100
6400c3a6:	jl     0x6400c2b0
6400c3ac:	pop    edi
6400c3ad:	pop    esi
6400c3ae:	pop    ebp
6400c3af:	pop    ebx
6400c3b0:	add    esp,0x800
6400c3b6:	ret    
6400c3b7:	int3   
6400c3b8:	int3   
6400c3b9:	int3   
6400c3ba:	int3   
6400c3bb:	int3   
6400c3bc:	int3   
6400c3bd:	int3   
6400c3be:	int3   
6400c3bf:	int3   
6400c3c0:	cmp    DWORD PTR ds:0x6403326c,0x0
6400c3c7:	push   ebx
6400c3c8:	push   esi
6400c3c9:	push   edi
6400c3ca:	mov    edi,eax
6400c3cc:	jne    0x6400c3dd
6400c3ce:	call   0x6400c1b0
6400c3d3:	mov    DWORD PTR ds:0x6403326c,0x1
6400c3dd:	lea    eax,[edi+0x8]
6400c3e0:	mov    ecx,0x64030382
6400c3e5:	mov    esi,eax
6400c3e7:	mov    DWORD PTR [edi],0xa
6400c3ed:	mov    DWORD PTR [edi+0x4],eax
6400c3f0:	sub    esi,ecx
6400c3f2:	movzx  ebx,BYTE PTR [ecx-0x1]
6400c3f6:	xor    edx,edx
6400c3f8:	mov    dh,BYTE PTR [ecx+0x1]
6400c3fb:	add    ecx,0x4
6400c3fe:	mov    dl,BYTE PTR [ecx-0x4]
6400c401:	shl    edx,0x8
6400c404:	or     edx,ebx
6400c406:	movzx  ebx,BYTE PTR [ecx-0x6]
6400c40a:	shl    edx,0x8
6400c40d:	or     edx,ebx
6400c40f:	cmp    ecx,0x64030392
6400c415:	mov    DWORD PTR [esi+ecx*1-0x4],edx
6400c419:	jl     0x6400c3f2
6400c41b:	mov    edi,DWORD PTR [edi]
6400c41d:	sub    edi,0xa
6400c420:	je     0x6400c6dc
6400c426:	sub    edi,0x2
6400c429:	je     0x6400c50f
6400c42f:	sub    edi,0x2
6400c432:	jne    0x6400c8bf
6400c438:	push   ebp
6400c439:	mov    ebp,0x64031940
6400c43e:	mov    edi,edi
6400c440:	mov    edi,DWORD PTR [eax+0x1c]
6400c443:	xor    edx,edx
6400c445:	mov    ecx,edi
6400c447:	and    ecx,0xff
6400c44d:	mov    dh,BYTE PTR [ecx+0x64031040]
6400c453:	movzx  ecx,BYTE PTR [eax+0x1f]
6400c457:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c45e:	xor    edx,ecx
6400c460:	movzx  ecx,BYTE PTR [eax+0x1e]
6400c464:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c46b:	shl    edx,0x8
6400c46e:	xor    edx,ecx
6400c470:	movzx  ecx,BYTE PTR [eax+0x1d]
6400c474:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c47b:	mov    esi,DWORD PTR [eax+0x8]
6400c47e:	shl    edx,0x8
6400c481:	xor    edx,ecx
6400c483:	xor    edx,DWORD PTR [eax]
6400c485:	xor    ebx,ebx
6400c487:	mov    ecx,edx
6400c489:	xor    ecx,DWORD PTR [ebp+0x0]
6400c48c:	mov    edx,DWORD PTR [eax+0x4]
6400c48f:	xor    edx,ecx
6400c491:	mov    DWORD PTR [eax+0x20],ecx
6400c494:	mov    ecx,DWORD PTR [eax+0xc]
6400c497:	xor    esi,edx
6400c499:	xor    ecx,esi
6400c49b:	mov    DWORD PTR [eax+0x2c],ecx
6400c49e:	mov    DWORD PTR [eax+0x24],edx
6400c4a1:	movzx  edx,BYTE PTR [eax+0x2f]
6400c4a5:	mov    DWORD PTR [eax+0x28],esi
6400c4a8:	mov    bh,BYTE PTR [edx+0x64031040]
6400c4ae:	movzx  edx,BYTE PTR [eax+0x2e]
6400c4b2:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c4b9:	xor    ebx,edx
6400c4bb:	movzx  edx,BYTE PTR [eax+0x2d]
6400c4bf:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c4c6:	and    ecx,0xff
6400c4cc:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c4d3:	shl    ebx,0x8
6400c4d6:	xor    ebx,edx
6400c4d8:	mov    edx,DWORD PTR [eax+0x14]
6400c4db:	shl    ebx,0x8
6400c4de:	xor    ecx,ebx
6400c4e0:	xor    ecx,DWORD PTR [eax+0x10]
6400c4e3:	add    ebp,0x4
6400c4e6:	xor    edx,ecx
6400c4e8:	mov    DWORD PTR [eax+0x30],ecx
6400c4eb:	mov    ecx,DWORD PTR [eax+0x18]
6400c4ee:	xor    ecx,edx
6400c4f0:	mov    DWORD PTR [eax+0x38],ecx
6400c4f3:	xor    ecx,edi
6400c4f5:	mov    DWORD PTR [eax+0x34],edx
6400c4f8:	mov    DWORD PTR [eax+0x3c],ecx
6400c4fb:	add    eax,0x20
6400c4fe:	cmp    ebp,0x6403195c
6400c504:	jl     0x6400c440
6400c50a:	pop    ebp
6400c50b:	pop    edi
6400c50c:	pop    esi
6400c50d:	pop    ebx
6400c50e:	ret    
6400c50f:	mov    esi,0x64031944
6400c514:	mov    edi,DWORD PTR [eax+0x14]
6400c517:	xor    ecx,ecx
6400c519:	mov    edx,edi
6400c51b:	and    edx,0xff
6400c521:	mov    ch,BYTE PTR [edx+0x64031040]
6400c527:	movzx  edx,BYTE PTR [eax+0x17]
6400c52b:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c532:	xor    ecx,edx
6400c534:	movzx  edx,BYTE PTR [eax+0x16]
6400c538:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c53f:	shl    ecx,0x8
6400c542:	xor    ecx,edx
6400c544:	movzx  edx,BYTE PTR [eax+0x15]
6400c548:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c54f:	shl    ecx,0x8
6400c552:	xor    ecx,edx
6400c554:	xor    ecx,DWORD PTR [esi-0x4]
6400c557:	mov    edx,DWORD PTR [eax+0x4]
6400c55a:	xor    ecx,DWORD PTR [eax]
6400c55c:	xor    edx,ecx
6400c55e:	mov    DWORD PTR [eax+0x18],ecx
6400c561:	mov    ecx,DWORD PTR [eax+0x8]
6400c564:	xor    ecx,edx
6400c566:	mov    DWORD PTR [eax+0x1c],edx
6400c569:	mov    edx,DWORD PTR [eax+0xc]
6400c56c:	xor    edx,ecx
6400c56e:	mov    DWORD PTR [eax+0x20],ecx
6400c571:	mov    ecx,DWORD PTR [eax+0x10]
6400c574:	xor    ecx,edx
6400c576:	mov    DWORD PTR [eax+0x28],ecx
6400c579:	mov    DWORD PTR [eax+0x24],edx
6400c57c:	xor    ecx,edi
6400c57e:	mov    DWORD PTR [eax+0x2c],ecx
6400c581:	and    ecx,0xff
6400c587:	xor    edx,edx
6400c589:	mov    dh,BYTE PTR [ecx+0x64031040]
6400c58f:	movzx  ecx,BYTE PTR [eax+0x2f]
6400c593:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c59a:	xor    edx,ecx
6400c59c:	movzx  ecx,BYTE PTR [eax+0x2e]
6400c5a0:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c5a7:	shl    edx,0x8
6400c5aa:	xor    edx,ecx
6400c5ac:	movzx  ecx,BYTE PTR [eax+0x2d]
6400c5b0:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c5b7:	mov    edi,DWORD PTR [eax+0x28]
6400c5ba:	shl    edx,0x8
6400c5bd:	xor    edx,ecx
6400c5bf:	xor    edx,DWORD PTR [eax+0x18]
6400c5c2:	mov    ecx,edx
6400c5c4:	xor    ecx,DWORD PTR [esi]
6400c5c6:	mov    edx,DWORD PTR [eax+0x1c]
6400c5c9:	xor    edx,ecx
6400c5cb:	mov    DWORD PTR [eax+0x30],ecx
6400c5ce:	mov    ecx,DWORD PTR [eax+0x20]
6400c5d1:	xor    ecx,edx
6400c5d3:	mov    DWORD PTR [eax+0x34],edx
6400c5d6:	mov    edx,DWORD PTR [eax+0x24]
6400c5d9:	xor    edx,ecx
6400c5db:	mov    DWORD PTR [eax+0x38],ecx
6400c5de:	mov    ecx,DWORD PTR [eax+0x2c]
6400c5e1:	xor    edi,edx
6400c5e3:	mov    DWORD PTR [eax+0x3c],edx
6400c5e6:	xor    ecx,edi
6400c5e8:	mov    DWORD PTR [eax+0x44],ecx
6400c5eb:	and    ecx,0xff
6400c5f1:	xor    edx,edx
6400c5f3:	mov    DWORD PTR [eax+0x40],edi
6400c5f6:	mov    dh,BYTE PTR [ecx+0x64031040]
6400c5fc:	movzx  ecx,BYTE PTR [eax+0x47]
6400c600:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c607:	xor    edx,ecx
6400c609:	movzx  ecx,BYTE PTR [eax+0x46]
6400c60d:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c614:	shl    edx,0x8
6400c617:	xor    edx,ecx
6400c619:	movzx  ecx,BYTE PTR [eax+0x45]
6400c61d:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c624:	shl    edx,0x8
6400c627:	xor    edx,ecx
6400c629:	xor    edx,DWORD PTR [esi+0x4]
6400c62c:	mov    ecx,edx
6400c62e:	xor    ecx,DWORD PTR [eax+0x30]
6400c631:	mov    edx,DWORD PTR [eax+0x34]
6400c634:	xor    edx,ecx
6400c636:	mov    DWORD PTR [eax+0x48],ecx
6400c639:	mov    ecx,DWORD PTR [eax+0x38]
6400c63c:	xor    ecx,edx
6400c63e:	mov    DWORD PTR [eax+0x4c],edx
6400c641:	mov    edx,DWORD PTR [eax+0x3c]
6400c644:	xor    edx,ecx
6400c646:	mov    DWORD PTR [eax+0x50],ecx
6400c649:	mov    ecx,DWORD PTR [eax+0x44]
6400c64c:	xor    edi,edx
6400c64e:	mov    DWORD PTR [eax+0x54],edx
6400c651:	xor    ecx,edi
6400c653:	mov    DWORD PTR [eax+0x5c],ecx
6400c656:	and    ecx,0xff
6400c65c:	xor    edx,edx
6400c65e:	mov    DWORD PTR [eax+0x58],edi
6400c661:	mov    dh,BYTE PTR [ecx+0x64031040]
6400c667:	movzx  ecx,BYTE PTR [eax+0x5f]
6400c66b:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c672:	xor    edx,ecx
6400c674:	movzx  ecx,BYTE PTR [eax+0x5e]
6400c678:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c67f:	shl    edx,0x8
6400c682:	xor    edx,ecx
6400c684:	movzx  ecx,BYTE PTR [eax+0x5d]
6400c688:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400c68f:	shl    edx,0x8
6400c692:	xor    edx,ecx
6400c694:	xor    edx,DWORD PTR [esi+0x8]
6400c697:	add    esi,0x10
6400c69a:	mov    ecx,edx
6400c69c:	xor    ecx,DWORD PTR [eax+0x48]
6400c69f:	mov    edx,DWORD PTR [eax+0x4c]
6400c6a2:	xor    edx,ecx
6400c6a4:	mov    DWORD PTR [eax+0x60],ecx
6400c6a7:	mov    ecx,DWORD PTR [eax+0x50]
6400c6aa:	xor    ecx,edx
6400c6ac:	mov    DWORD PTR [eax+0x64],edx
6400c6af:	mov    edx,DWORD PTR [eax+0x54]
6400c6b2:	xor    edx,ecx
6400c6b4:	mov    DWORD PTR [eax+0x68],ecx
6400c6b7:	mov    DWORD PTR [eax+0x6c],edx
6400c6ba:	mov    ecx,edi
6400c6bc:	xor    ecx,edx
6400c6be:	mov    edx,DWORD PTR [eax+0x5c]
6400c6c1:	xor    edx,ecx
6400c6c3:	mov    DWORD PTR [eax+0x70],ecx
6400c6c6:	mov    DWORD PTR [eax+0x74],edx
6400c6c9:	add    eax,0x60
6400c6cc:	cmp    esi,0x64031964
6400c6d2:	jl     0x6400c514
6400c6d8:	pop    edi
6400c6d9:	pop    esi
6400c6da:	pop    ebx
6400c6db:	ret    
6400c6dc:	mov    ecx,0x64031944
6400c6e1:	mov    esi,DWORD PTR [eax+0xc]
6400c6e4:	mov    edx,esi
6400c6e6:	and    edx,0xff
6400c6ec:	xor    ebx,ebx
6400c6ee:	mov    bh,BYTE PTR [edx+0x64031040]
6400c6f4:	movzx  edx,BYTE PTR [eax+0xf]
6400c6f8:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c6ff:	xor    ebx,edx
6400c701:	movzx  edx,BYTE PTR [eax+0xe]
6400c705:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c70c:	mov    edi,DWORD PTR [eax+0x4]
6400c70f:	shl    ebx,0x8
6400c712:	xor    ebx,edx
6400c714:	movzx  edx,BYTE PTR [eax+0xd]
6400c718:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c71f:	shl    ebx,0x8
6400c722:	xor    ebx,edx
6400c724:	xor    ebx,DWORD PTR [ecx-0x4]
6400c727:	mov    edx,ebx
6400c729:	xor    edx,DWORD PTR [eax]
6400c72b:	mov    DWORD PTR [eax+0x10],edx
6400c72e:	xor    edi,edx
6400c730:	mov    edx,DWORD PTR [eax+0x8]
6400c733:	xor    edx,edi
6400c735:	xor    esi,edx
6400c737:	mov    DWORD PTR [eax+0x18],edx
6400c73a:	mov    DWORD PTR [eax+0x1c],esi
6400c73d:	and    esi,0xff
6400c743:	xor    edx,edx
6400c745:	mov    DWORD PTR [eax+0x14],edi
6400c748:	mov    dh,BYTE PTR [esi+0x64031040]
6400c74e:	movzx  esi,BYTE PTR [eax+0x1f]
6400c752:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c759:	xor    edx,esi
6400c75b:	movzx  esi,BYTE PTR [eax+0x1e]
6400c75f:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c766:	shl    edx,0x8
6400c769:	xor    edx,esi
6400c76b:	movzx  esi,BYTE PTR [eax+0x1d]
6400c76f:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c776:	shl    edx,0x8
6400c779:	xor    edx,esi
6400c77b:	xor    edx,DWORD PTR [ecx]
6400c77d:	mov    esi,edi
6400c77f:	xor    edx,DWORD PTR [eax+0x10]
6400c782:	xor    esi,edx
6400c784:	mov    DWORD PTR [eax+0x20],edx
6400c787:	mov    edx,DWORD PTR [eax+0x18]
6400c78a:	xor    edx,esi
6400c78c:	mov    DWORD PTR [eax+0x24],esi
6400c78f:	mov    esi,DWORD PTR [eax+0x1c]
6400c792:	xor    esi,edx
6400c794:	mov    DWORD PTR [eax+0x28],edx
6400c797:	mov    DWORD PTR [eax+0x2c],esi
6400c79a:	and    esi,0xff
6400c7a0:	xor    edx,edx
6400c7a2:	mov    dh,BYTE PTR [esi+0x64031040]
6400c7a8:	movzx  esi,BYTE PTR [eax+0x2f]
6400c7ac:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c7b3:	xor    edx,esi
6400c7b5:	movzx  esi,BYTE PTR [eax+0x2e]
6400c7b9:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c7c0:	shl    edx,0x8
6400c7c3:	xor    edx,esi
6400c7c5:	movzx  esi,BYTE PTR [eax+0x2d]
6400c7c9:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c7d0:	shl    edx,0x8
6400c7d3:	xor    edx,esi
6400c7d5:	xor    edx,DWORD PTR [ecx+0x4]
6400c7d8:	mov    esi,DWORD PTR [eax+0x24]
6400c7db:	xor    edx,DWORD PTR [eax+0x20]
6400c7de:	xor    esi,edx
6400c7e0:	mov    DWORD PTR [eax+0x30],edx
6400c7e3:	mov    edx,DWORD PTR [eax+0x28]
6400c7e6:	xor    edx,esi
6400c7e8:	mov    DWORD PTR [eax+0x34],esi
6400c7eb:	mov    esi,DWORD PTR [eax+0x2c]
6400c7ee:	xor    esi,edx
6400c7f0:	mov    DWORD PTR [eax+0x3c],esi
6400c7f3:	mov    DWORD PTR [eax+0x38],edx
6400c7f6:	and    esi,0xff
6400c7fc:	xor    edx,edx
6400c7fe:	mov    dh,BYTE PTR [esi+0x64031040]
6400c804:	movzx  esi,BYTE PTR [eax+0x3f]
6400c808:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c80f:	xor    edx,esi
6400c811:	movzx  esi,BYTE PTR [eax+0x3e]
6400c815:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c81c:	shl    edx,0x8
6400c81f:	xor    edx,esi
6400c821:	movzx  esi,BYTE PTR [eax+0x3d]
6400c825:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c82c:	shl    edx,0x8
6400c82f:	xor    edx,esi
6400c831:	xor    edx,DWORD PTR [ecx+0x8]
6400c834:	mov    esi,DWORD PTR [eax+0x34]
6400c837:	xor    edx,DWORD PTR [eax+0x30]
6400c83a:	add    ecx,0x14
6400c83d:	xor    esi,edx
6400c83f:	mov    DWORD PTR [eax+0x40],edx
6400c842:	mov    edx,DWORD PTR [eax+0x38]
6400c845:	xor    edx,esi
6400c847:	mov    DWORD PTR [eax+0x44],esi
6400c84a:	mov    esi,DWORD PTR [eax+0x3c]
6400c84d:	xor    esi,edx
6400c84f:	mov    DWORD PTR [eax+0x48],edx
6400c852:	mov    DWORD PTR [eax+0x4c],esi
6400c855:	and    esi,0xff
6400c85b:	xor    edx,edx
6400c85d:	mov    dh,BYTE PTR [esi+0x64031040]
6400c863:	movzx  esi,BYTE PTR [eax+0x4f]
6400c867:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c86e:	xor    edx,esi
6400c870:	movzx  esi,BYTE PTR [eax+0x4e]
6400c874:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c87b:	shl    edx,0x8
6400c87e:	xor    edx,esi
6400c880:	movzx  esi,BYTE PTR [eax+0x4d]
6400c884:	movzx  esi,BYTE PTR [esi+0x64031040]
6400c88b:	shl    edx,0x8
6400c88e:	xor    edx,esi
6400c890:	xor    edx,DWORD PTR [ecx-0x8]
6400c893:	mov    esi,DWORD PTR [eax+0x44]
6400c896:	xor    edx,DWORD PTR [eax+0x40]
6400c899:	add    eax,0x50
6400c89c:	xor    esi,edx
6400c89e:	mov    DWORD PTR [eax],edx
6400c8a0:	mov    edx,DWORD PTR [eax-0x8]
6400c8a3:	xor    edx,esi
6400c8a5:	mov    DWORD PTR [eax+0x4],esi
6400c8a8:	mov    esi,DWORD PTR [eax-0x4]
6400c8ab:	xor    esi,edx
6400c8ad:	cmp    ecx,0x6403196c
6400c8b3:	mov    DWORD PTR [eax+0x8],edx
6400c8b6:	mov    DWORD PTR [eax+0xc],esi
6400c8b9:	jl     0x6400c6e1
6400c8bf:	pop    edi
6400c8c0:	pop    esi
6400c8c1:	pop    ebx
6400c8c2:	ret    
6400c8c3:	int3   
6400c8c4:	int3   
6400c8c5:	int3   
6400c8c6:	int3   
6400c8c7:	int3   
6400c8c8:	int3   
6400c8c9:	int3   
6400c8ca:	int3   
6400c8cb:	int3   
6400c8cc:	int3   
6400c8cd:	int3   
6400c8ce:	int3   
6400c8cf:	int3   
6400c8d0:	sub    esp,0x11c
6400c8d6:	push   esi
6400c8d7:	push   edi
6400c8d8:	mov    edi,eax
6400c8da:	lea    esi,[edi+0x8]
6400c8dd:	lea    eax,[esp+0x8]
6400c8e1:	mov    DWORD PTR [edi],0xa
6400c8e7:	mov    DWORD PTR [edi+0x4],esi
6400c8ea:	call   0x6400c3c0
6400c8ef:	mov    eax,DWORD PTR [esp+0x8]
6400c8f3:	shl    eax,0x4
6400c8f6:	add    eax,DWORD PTR [esp+0xc]
6400c8fa:	add    esi,0x4
6400c8fd:	mov    ecx,DWORD PTR [eax]
6400c8ff:	mov    DWORD PTR [esi-0x4],ecx
6400c902:	mov    edx,DWORD PTR [eax+0x4]
6400c905:	add    eax,0x4
6400c908:	mov    DWORD PTR [esi],edx
6400c90a:	mov    ecx,DWORD PTR [eax+0x4]
6400c90d:	add    eax,0x4
6400c910:	add    esi,0x4
6400c913:	mov    DWORD PTR [esi],ecx
6400c915:	mov    edx,DWORD PTR [eax+0x4]
6400c918:	add    eax,0x4
6400c91b:	add    esi,0x4
6400c91e:	mov    DWORD PTR [esi],edx
6400c920:	mov    ecx,DWORD PTR [edi]
6400c922:	sub    ecx,0x1
6400c925:	add    esi,0x4
6400c928:	sub    eax,0x1c
6400c92b:	test   ecx,ecx
6400c92d:	jle    0x6400ca85
6400c933:	movzx  edx,BYTE PTR [eax+0x3]
6400c937:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c93e:	mov    edx,DWORD PTR [edx*4+0x64031140]
6400c945:	movzx  edi,BYTE PTR [eax+0x2]
6400c949:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c950:	xor    edx,DWORD PTR [edi*4+0x64031540]
6400c957:	movzx  edi,BYTE PTR [eax+0x1]
6400c95b:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c962:	xor    edx,DWORD PTR [edi*4+0x64031968]
6400c969:	mov    edi,DWORD PTR [eax]
6400c96b:	and    edi,0xff
6400c971:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c978:	xor    edx,DWORD PTR [edi*4+0x64031d68]
6400c97f:	add    eax,0x10
6400c982:	mov    DWORD PTR [esi],edx
6400c984:	mov    edx,DWORD PTR [eax-0xc]
6400c987:	movzx  edi,BYTE PTR [eax-0x9]
6400c98b:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c992:	and    edx,0xff
6400c998:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c99f:	mov    edx,DWORD PTR [edx*4+0x64031d68]
6400c9a6:	xor    edx,DWORD PTR [edi*4+0x64031140]
6400c9ad:	movzx  edi,BYTE PTR [eax-0xa]
6400c9b1:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c9b8:	xor    edx,DWORD PTR [edi*4+0x64031540]
6400c9bf:	movzx  edi,BYTE PTR [eax-0xb]
6400c9c3:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c9ca:	xor    edx,DWORD PTR [edi*4+0x64031968]
6400c9d1:	sub    ecx,0x1
6400c9d4:	mov    DWORD PTR [esi+0x4],edx
6400c9d7:	mov    edx,DWORD PTR [eax-0x8]
6400c9da:	movzx  edi,BYTE PTR [eax-0x5]
6400c9de:	movzx  edi,BYTE PTR [edi+0x64031040]
6400c9e5:	and    edx,0xff
6400c9eb:	movzx  edx,BYTE PTR [edx+0x64031040]
6400c9f2:	mov    edx,DWORD PTR [edx*4+0x64031d68]
6400c9f9:	xor    edx,DWORD PTR [edi*4+0x64031140]
6400ca00:	movzx  edi,BYTE PTR [eax-0x6]
6400ca04:	movzx  edi,BYTE PTR [edi+0x64031040]
6400ca0b:	xor    edx,DWORD PTR [edi*4+0x64031540]
6400ca12:	movzx  edi,BYTE PTR [eax-0x7]
6400ca16:	movzx  edi,BYTE PTR [edi+0x64031040]
6400ca1d:	xor    edx,DWORD PTR [edi*4+0x64031968]
6400ca24:	add    esi,0x10
6400ca27:	mov    DWORD PTR [esi-0x8],edx
6400ca2a:	mov    edx,DWORD PTR [eax-0x4]
6400ca2d:	movzx  edi,BYTE PTR [eax-0x1]
6400ca31:	movzx  edi,BYTE PTR [edi+0x64031040]
6400ca38:	and    edx,0xff
6400ca3e:	movzx  edx,BYTE PTR [edx+0x64031040]
6400ca45:	mov    edx,DWORD PTR [edx*4+0x64031d68]
6400ca4c:	xor    edx,DWORD PTR [edi*4+0x64031140]
6400ca53:	movzx  edi,BYTE PTR [eax-0x2]
6400ca57:	movzx  edi,BYTE PTR [edi+0x64031040]
6400ca5e:	xor    edx,DWORD PTR [edi*4+0x64031540]
6400ca65:	movzx  edi,BYTE PTR [eax-0x3]
6400ca69:	movzx  edi,BYTE PTR [edi+0x64031040]
6400ca70:	xor    edx,DWORD PTR [edi*4+0x64031968]
6400ca77:	sub    eax,0x20
6400ca7a:	test   ecx,ecx
6400ca7c:	mov    DWORD PTR [esi-0x4],edx
6400ca7f:	jg     0x6400c933
6400ca85:	mov    ecx,DWORD PTR [eax]
6400ca87:	mov    DWORD PTR [esi],ecx
6400ca89:	mov    edx,DWORD PTR [eax+0x4]
6400ca8c:	add    esi,0x4
6400ca8f:	add    eax,0x4
6400ca92:	mov    DWORD PTR [esi],edx
6400ca94:	mov    ecx,DWORD PTR [eax+0x4]
6400ca97:	add    esi,0x4
6400ca9a:	add    eax,0x4
6400ca9d:	mov    DWORD PTR [esi],ecx
6400ca9f:	mov    edx,DWORD PTR [eax+0x4]
6400caa2:	pop    edi
6400caa3:	mov    DWORD PTR [esi+0x4],edx
6400caa6:	pop    esi
6400caa7:	add    esp,0x11c
6400caad:	ret    
6400caae:	int3   
6400caaf:	int3   
6400cab0:	sub    esp,0x10
6400cab3:	xor    ecx,ecx
6400cab5:	push   ebx
6400cab6:	push   ebp
6400cab7:	mov    ebp,DWORD PTR [esp+0x1c]
6400cabb:	push   esi
6400cabc:	push   edi
6400cabd:	mov    edi,eax
6400cabf:	mov    ch,BYTE PTR [edi+0x3]
6400cac2:	movzx  edx,BYTE PTR [edi+0x1]
6400cac6:	mov    eax,DWORD PTR [ebp+0x4]
6400cac9:	movzx  esi,BYTE PTR [edi+0x9]
6400cacd:	mov    cl,BYTE PTR [edi+0x2]
6400cad0:	movzx  ebx,BYTE PTR [edi+0xd]
6400cad4:	add    eax,0x4
6400cad7:	add    eax,0x4
6400cada:	add    eax,0x4
6400cadd:	shl    ecx,0x8
6400cae0:	or     ecx,edx
6400cae2:	movzx  edx,BYTE PTR [edi]
6400cae5:	shl    ecx,0x8
6400cae8:	or     ecx,edx
6400caea:	xor    ecx,DWORD PTR [eax-0xc]
6400caed:	movzx  edx,BYTE PTR [edi+0x5]
6400caf1:	mov    DWORD PTR [esp+0x24],ecx
6400caf5:	xor    ecx,ecx
6400caf7:	mov    ch,BYTE PTR [edi+0x7]
6400cafa:	add    eax,0x4
6400cafd:	mov    cl,BYTE PTR [edi+0x6]
6400cb00:	shl    ecx,0x8
6400cb03:	or     ecx,edx
6400cb05:	movzx  edx,BYTE PTR [edi+0x4]
6400cb09:	shl    ecx,0x8
6400cb0c:	or     ecx,edx
6400cb0e:	xor    edx,edx
6400cb10:	mov    dh,BYTE PTR [edi+0xb]
6400cb13:	xor    ecx,DWORD PTR [eax-0xc]
6400cb16:	mov    dl,BYTE PTR [edi+0xa]
6400cb19:	shl    edx,0x8
6400cb1c:	or     edx,esi
6400cb1e:	movzx  esi,BYTE PTR [edi+0x8]
6400cb22:	shl    edx,0x8
6400cb25:	or     edx,esi
6400cb27:	xor    edx,DWORD PTR [eax-0x8]
6400cb2a:	mov    esi,edx
6400cb2c:	xor    edx,edx
6400cb2e:	mov    dh,BYTE PTR [edi+0xf]
6400cb31:	mov    DWORD PTR [esp+0x10],esi
6400cb35:	mov    dl,BYTE PTR [edi+0xe]
6400cb38:	movzx  edi,BYTE PTR [edi+0xc]
6400cb3c:	shl    edx,0x8
6400cb3f:	or     edx,ebx
6400cb41:	shl    edx,0x8
6400cb44:	or     edx,edi
6400cb46:	xor    edx,DWORD PTR [eax-0x4]
6400cb49:	cmp    DWORD PTR [esp+0x28],0x0
6400cb4e:	jne    0x6400cfe9
6400cb54:	mov    ebp,DWORD PTR [ebp+0x0]
6400cb57:	sar    ebp,1
6400cb59:	sub    ebp,0x1
6400cb5c:	test   ebp,ebp
6400cb5e:	jle    0x6400cd8f
6400cb64:	mov    ebx,esi
6400cb66:	movzx  edi,dh
6400cb69:	mov    esi,DWORD PTR [edi*4+0x64031968]
6400cb70:	mov    edi,ecx
6400cb72:	shr    edi,0x18
6400cb75:	shr    ebx,0x10
6400cb78:	and    ebx,0xff
6400cb7e:	xor    esi,DWORD PTR [ebx*4+0x64031540]
6400cb85:	add    eax,0x4
6400cb88:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400cb8f:	mov    edi,DWORD PTR [esp+0x24]
6400cb93:	and    edi,0xff
6400cb99:	mov    DWORD PTR [esp+0x28],esi
6400cb9d:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400cba4:	movzx  edi,BYTE PTR [esp+0x25]
6400cba9:	xor    esi,DWORD PTR [eax-0x4]
6400cbac:	add    eax,0x4
6400cbaf:	mov    DWORD PTR [esp+0x14],esi
6400cbb3:	mov    esi,edx
6400cbb5:	shr    esi,0x10
6400cbb8:	and    esi,0xff
6400cbbe:	mov    esi,DWORD PTR [esi*4+0x64031540]
6400cbc5:	xor    esi,DWORD PTR [edi*4+0x64031968]
6400cbcc:	mov    edi,DWORD PTR [esp+0x10]
6400cbd0:	shr    edi,0x18
6400cbd3:	mov    DWORD PTR [esp+0x28],esi
6400cbd7:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400cbde:	mov    edi,ecx
6400cbe0:	and    edi,0xff
6400cbe6:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400cbed:	mov    edi,DWORD PTR [esp+0x24]
6400cbf1:	xor    esi,DWORD PTR [eax-0x4]
6400cbf4:	shr    edi,0x10
6400cbf7:	mov    DWORD PTR [esp+0x18],esi
6400cbfb:	movzx  esi,ch
6400cbfe:	mov    esi,DWORD PTR [esi*4+0x64031968]
6400cc05:	and    edi,0xff
6400cc0b:	xor    esi,DWORD PTR [edi*4+0x64031540]
6400cc12:	mov    edi,edx
6400cc14:	shr    edi,0x18
6400cc17:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400cc1e:	mov    edi,DWORD PTR [esp+0x10]
6400cc22:	and    edi,0xff
6400cc28:	mov    DWORD PTR [esp+0x28],esi
6400cc2c:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400cc33:	shr    ecx,0x10
6400cc36:	xor    esi,DWORD PTR [eax]
6400cc38:	and    ecx,0xff
6400cc3e:	mov    DWORD PTR [esp+0x28],esi
6400cc42:	movzx  esi,BYTE PTR [esp+0x11]
6400cc47:	mov    ebx,DWORD PTR [esi*4+0x64031968]
6400cc4e:	xor    ebx,DWORD PTR [ecx*4+0x64031540]
6400cc55:	mov    ecx,DWORD PTR [esp+0x24]
6400cc59:	mov    esi,DWORD PTR [esp+0x28]
6400cc5d:	shr    ecx,0x18
6400cc60:	xor    ebx,DWORD PTR [ecx*4+0x64031140]
6400cc67:	and    edx,0xff
6400cc6d:	xor    ebx,DWORD PTR [edx*4+0x64031d68]
6400cc74:	add    eax,0x4
6400cc77:	xor    ebx,DWORD PTR [eax]
6400cc79:	mov    ecx,esi
6400cc7b:	shr    ecx,0x10
6400cc7e:	and    ecx,0xff
6400cc84:	movzx  edx,bh
6400cc87:	mov    edi,DWORD PTR [edx*4+0x64031968]
6400cc8e:	xor    edi,DWORD PTR [ecx*4+0x64031540]
6400cc95:	mov    edx,DWORD PTR [esp+0x18]
6400cc99:	mov    ecx,edx
6400cc9b:	shr    ecx,0x18
6400cc9e:	xor    edi,DWORD PTR [ecx*4+0x64031140]
6400cca5:	mov    ecx,DWORD PTR [esp+0x14]
6400cca9:	and    ecx,0xff
6400ccaf:	xor    edi,DWORD PTR [ecx*4+0x64031d68]
6400ccb6:	add    eax,0x4
6400ccb9:	xor    edi,DWORD PTR [eax]
6400ccbb:	mov    ecx,ebx
6400ccbd:	shr    ecx,0x10
6400ccc0:	mov    DWORD PTR [esp+0x24],edi
6400ccc4:	movzx  edi,BYTE PTR [esp+0x15]
6400ccc9:	add    eax,0x4
6400cccc:	and    ecx,0xff
6400ccd2:	mov    ecx,DWORD PTR [ecx*4+0x64031540]
6400ccd9:	xor    ecx,DWORD PTR [edi*4+0x64031968]
6400cce0:	shr    esi,0x18
6400cce3:	xor    ecx,DWORD PTR [esi*4+0x64031140]
6400ccea:	mov    esi,edx
6400ccec:	and    esi,0xff
6400ccf2:	xor    ecx,DWORD PTR [esi*4+0x64031d68]
6400ccf9:	mov    esi,DWORD PTR [esp+0x14]
6400ccfd:	xor    ecx,DWORD PTR [eax]
6400ccff:	movzx  edx,dh
6400cd02:	mov    edx,DWORD PTR [edx*4+0x64031968]
6400cd09:	mov    edi,DWORD PTR [esp+0x18]
6400cd0d:	shr    esi,0x10
6400cd10:	and    esi,0xff
6400cd16:	xor    edx,DWORD PTR [esi*4+0x64031540]
6400cd1d:	mov    esi,ebx
6400cd1f:	shr    esi,0x18
6400cd22:	xor    edx,DWORD PTR [esi*4+0x64031140]
6400cd29:	mov    esi,DWORD PTR [esp+0x28]
6400cd2d:	and    esi,0xff
6400cd33:	xor    edx,DWORD PTR [esi*4+0x64031d68]
6400cd3a:	add    eax,0x4
6400cd3d:	xor    edx,DWORD PTR [eax]
6400cd3f:	shr    edi,0x10
6400cd42:	mov    esi,edx
6400cd44:	movzx  edx,BYTE PTR [esp+0x29]
6400cd49:	mov    edx,DWORD PTR [edx*4+0x64031968]
6400cd50:	and    edi,0xff
6400cd56:	xor    edx,DWORD PTR [edi*4+0x64031540]
6400cd5d:	mov    edi,DWORD PTR [esp+0x14]
6400cd61:	shr    edi,0x18
6400cd64:	xor    edx,DWORD PTR [edi*4+0x64031140]
6400cd6b:	and    ebx,0xff
6400cd71:	xor    edx,DWORD PTR [ebx*4+0x64031d68]
6400cd78:	add    eax,0x4
6400cd7b:	xor    edx,DWORD PTR [eax]
6400cd7d:	sub    ebp,0x1
6400cd80:	add    eax,0x4
6400cd83:	test   ebp,ebp
6400cd85:	mov    DWORD PTR [esp+0x10],esi
6400cd89:	jg     0x6400cb64
6400cd8f:	mov    ebx,esi
6400cd91:	movzx  edi,dh
6400cd94:	mov    esi,DWORD PTR [edi*4+0x64031968]
6400cd9b:	mov    edi,ecx
6400cd9d:	shr    edi,0x18
6400cda0:	shr    ebx,0x10
6400cda3:	and    ebx,0xff
6400cda9:	xor    esi,DWORD PTR [ebx*4+0x64031540]
6400cdb0:	add    eax,0x4
6400cdb3:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400cdba:	mov    edi,DWORD PTR [esp+0x24]
6400cdbe:	mov    DWORD PTR [esp+0x28],esi
6400cdc2:	and    edi,0xff
6400cdc8:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400cdcf:	movzx  edi,BYTE PTR [esp+0x25]
6400cdd4:	xor    esi,DWORD PTR [eax-0x4]
6400cdd7:	add    eax,0x4
6400cdda:	mov    DWORD PTR [esp+0x14],esi
6400cdde:	mov    esi,edx
6400cde0:	shr    esi,0x10
6400cde3:	and    esi,0xff
6400cde9:	mov    esi,DWORD PTR [esi*4+0x64031540]
6400cdf0:	xor    esi,DWORD PTR [edi*4+0x64031968]
6400cdf7:	mov    edi,DWORD PTR [esp+0x10]
6400cdfb:	shr    edi,0x18
6400cdfe:	mov    DWORD PTR [esp+0x28],esi
6400ce02:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400ce09:	mov    edi,ecx
6400ce0b:	and    edi,0xff
6400ce11:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400ce18:	mov    edi,DWORD PTR [esp+0x24]
6400ce1c:	xor    esi,DWORD PTR [eax-0x4]
6400ce1f:	shr    edi,0x10
6400ce22:	mov    DWORD PTR [esp+0x18],esi
6400ce26:	movzx  esi,ch
6400ce29:	mov    esi,DWORD PTR [esi*4+0x64031968]
6400ce30:	and    edi,0xff
6400ce36:	xor    esi,DWORD PTR [edi*4+0x64031540]
6400ce3d:	mov    edi,edx
6400ce3f:	shr    edi,0x18
6400ce42:	xor    esi,DWORD PTR [edi*4+0x64031140]
6400ce49:	mov    edi,DWORD PTR [esp+0x10]
6400ce4d:	mov    DWORD PTR [esp+0x28],esi
6400ce51:	and    edi,0xff
6400ce57:	xor    esi,DWORD PTR [edi*4+0x64031d68]
6400ce5e:	shr    ecx,0x10
6400ce61:	xor    esi,DWORD PTR [eax]
6400ce63:	and    ecx,0xff
6400ce69:	mov    DWORD PTR [esp+0x28],esi
6400ce6d:	movzx  esi,BYTE PTR [esp+0x11]
6400ce72:	mov    ebx,DWORD PTR [esi*4+0x64031968]
6400ce79:	xor    ebx,DWORD PTR [ecx*4+0x64031540]
6400ce80:	mov    ecx,DWORD PTR [esp+0x24]
6400ce84:	mov    edi,DWORD PTR [esp+0x28]
6400ce88:	shr    ecx,0x18
6400ce8b:	xor    ebx,DWORD PTR [ecx*4+0x64031140]
6400ce92:	mov    ecx,DWORD PTR [esp+0x18]
6400ce96:	and    edx,0xff
6400ce9c:	xor    ebx,DWORD PTR [edx*4+0x64031d68]
6400cea3:	add    eax,0x4
6400cea6:	xor    ebx,DWORD PTR [eax]
6400cea8:	add    eax,0x4
6400ceab:	shr    ecx,0x18
6400ceae:	mov    DWORD PTR [esp+0x1c],eax
6400ceb2:	xor    eax,eax
6400ceb4:	mov    ah,BYTE PTR [ecx+0x64033168]
6400ceba:	mov    edx,edi
6400cebc:	shr    edx,0x10
6400cebf:	and    edx,0xff
6400cec5:	movzx  edx,BYTE PTR [edx+0x64033168]
6400cecc:	movzx  ecx,bh
6400cecf:	movzx  ecx,BYTE PTR [ecx+0x64033168]
6400ced6:	xor    edx,eax
6400ced8:	shl    edx,0x8
6400cedb:	xor    edx,ecx
6400cedd:	mov    ecx,DWORD PTR [esp+0x14]
6400cee1:	and    ecx,0xff
6400cee7:	movzx  ecx,BYTE PTR [ecx+0x64033168]
6400ceee:	shl    edx,0x8
6400cef1:	mov    DWORD PTR [esp+0x24],ebx
6400cef5:	xor    edx,ecx
6400cef7:	xor    ecx,ecx
6400cef9:	shr    edi,0x18
6400cefc:	mov    ch,BYTE PTR [edi+0x64033168]
6400cf02:	mov    eax,DWORD PTR [esp+0x1c]
6400cf06:	xor    edx,DWORD PTR [eax]
6400cf08:	shr    ebx,0x10
6400cf0b:	and    ebx,0xff
6400cf11:	movzx  esi,BYTE PTR [ebx+0x64033168]
6400cf18:	xor    esi,ecx
6400cf1a:	mov    ecx,DWORD PTR [esp+0x14]
6400cf1e:	shl    esi,0x8
6400cf21:	movzx  edi,ch
6400cf24:	movzx  edi,BYTE PTR [edi+0x64033168]
6400cf2b:	xor    esi,edi
6400cf2d:	mov    edi,DWORD PTR [esp+0x18]
6400cf31:	shl    esi,0x8
6400cf34:	and    edi,0xff
6400cf3a:	movzx  edi,BYTE PTR [edi+0x64033168]
6400cf41:	xor    esi,edi
6400cf43:	xor    esi,DWORD PTR [eax+0x4]
6400cf46:	shr    ecx,0x10
6400cf49:	mov    DWORD PTR [esp+0x1c],esi
6400cf4d:	and    ecx,0xff
6400cf53:	movzx  esi,BYTE PTR [ecx+0x64033168]
6400cf5a:	mov    ecx,DWORD PTR [esp+0x24]
6400cf5e:	add    eax,0x4
6400cf61:	shr    ecx,0x18
6400cf64:	xor    ebx,ebx
6400cf66:	mov    bh,BYTE PTR [ecx+0x64033168]
6400cf6c:	mov    ecx,DWORD PTR [esp+0x18]
6400cf70:	movzx  edi,ch
6400cf73:	movzx  edi,BYTE PTR [edi+0x64033168]
6400cf7a:	xor    esi,ebx
6400cf7c:	shl    esi,0x8
6400cf7f:	xor    esi,edi
6400cf81:	mov    edi,DWORD PTR [esp+0x28]
6400cf85:	shl    esi,0x8
6400cf88:	and    edi,0xff
6400cf8e:	movzx  edi,BYTE PTR [edi+0x64033168]
6400cf95:	xor    esi,edi
6400cf97:	xor    esi,DWORD PTR [eax+0x4]
6400cf9a:	add    eax,0x4
6400cf9d:	mov    DWORD PTR [esp+0x10],esi
6400cfa1:	mov    esi,DWORD PTR [esp+0x14]
6400cfa5:	shr    esi,0x18
6400cfa8:	shr    ecx,0x10
6400cfab:	xor    ebx,ebx
6400cfad:	mov    bh,BYTE PTR [esi+0x64033168]
6400cfb3:	movzx  esi,BYTE PTR [esp+0x29]
6400cfb8:	movzx  esi,BYTE PTR [esi+0x64033168]
6400cfbf:	and    ecx,0xff
6400cfc5:	movzx  ecx,BYTE PTR [ecx+0x64033168]
6400cfcc:	xor    ecx,ebx
6400cfce:	shl    ecx,0x8
6400cfd1:	xor    ecx,esi
6400cfd3:	mov    esi,DWORD PTR [esp+0x24]
6400cfd7:	and    esi,0xff
6400cfdd:	movzx  esi,BYTE PTR [esi+0x64033168]
6400cfe4:	jmp    0x6400d47c
6400cfe9:	mov    edi,DWORD PTR [ebp+0x0]
6400cfec:	sar    edi,1
6400cfee:	sub    edi,0x1
6400cff1:	test   edi,edi
6400cff3:	mov    DWORD PTR [esp+0x1c],edi
6400cff7:	jle    0x6400d233
6400cffd:	lea    ecx,[ecx+0x0]
6400d000:	shr    esi,0x10
6400d003:	and    esi,0xff
6400d009:	mov    esi,DWORD PTR [esi*4+0x64032568]
6400d010:	movzx  edi,ch
6400d013:	xor    esi,DWORD PTR [edi*4+0x64032968]
6400d01a:	mov    edi,edx
6400d01c:	shr    edi,0x18
6400d01f:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d026:	mov    edi,DWORD PTR [esp+0x24]
6400d02a:	mov    DWORD PTR [esp+0x28],esi
6400d02e:	and    edi,0xff
6400d034:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d03b:	movzx  edi,BYTE PTR [esp+0x11]
6400d040:	xor    esi,DWORD PTR [eax]
6400d042:	add    eax,0x4
6400d045:	mov    DWORD PTR [esp+0x14],esi
6400d049:	mov    esi,edx
6400d04b:	shr    esi,0x10
6400d04e:	and    esi,0xff
6400d054:	mov    esi,DWORD PTR [esi*4+0x64032568]
6400d05b:	xor    esi,DWORD PTR [edi*4+0x64032968]
6400d062:	mov    edi,DWORD PTR [esp+0x24]
6400d066:	mov    DWORD PTR [esp+0x28],esi
6400d06a:	shr    edi,0x18
6400d06d:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d074:	mov    edi,ecx
6400d076:	and    edi,0xff
6400d07c:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d083:	mov    edi,DWORD PTR [esp+0x24]
6400d087:	xor    esi,DWORD PTR [eax]
6400d089:	shr    edi,0x10
6400d08c:	mov    DWORD PTR [esp+0x18],esi
6400d090:	and    edi,0xff
6400d096:	movzx  esi,dh
6400d099:	mov    esi,DWORD PTR [esi*4+0x64032968]
6400d0a0:	xor    esi,DWORD PTR [edi*4+0x64032568]
6400d0a7:	mov    edi,ecx
6400d0a9:	shr    edi,0x18
6400d0ac:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d0b3:	mov    edi,DWORD PTR [esp+0x10]
6400d0b7:	mov    DWORD PTR [esp+0x28],esi
6400d0bb:	and    edi,0xff
6400d0c1:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d0c8:	add    eax,0x4
6400d0cb:	xor    esi,DWORD PTR [eax]
6400d0cd:	shr    ecx,0x10
6400d0d0:	mov    DWORD PTR [esp+0x28],esi
6400d0d4:	movzx  esi,BYTE PTR [esp+0x25]
6400d0d9:	and    ecx,0xff
6400d0df:	mov    ebx,DWORD PTR [ecx*4+0x64032568]
6400d0e6:	xor    ebx,DWORD PTR [esi*4+0x64032968]
6400d0ed:	mov    ecx,DWORD PTR [esp+0x10]
6400d0f1:	shr    ecx,0x18
6400d0f4:	xor    ebx,DWORD PTR [ecx*4+0x64032168]
6400d0fb:	mov    ecx,DWORD PTR [esp+0x18]
6400d0ff:	and    edx,0xff
6400d105:	xor    ebx,DWORD PTR [edx*4+0x64032d68]
6400d10c:	mov    edx,DWORD PTR [esp+0x28]
6400d110:	xor    ebx,DWORD PTR [eax+0x4]
6400d113:	add    eax,0x4
6400d116:	mov    esi,edx
6400d118:	shr    esi,0x10
6400d11b:	and    esi,0xff
6400d121:	mov    ebp,DWORD PTR [esi*4+0x64032568]
6400d128:	movzx  edi,ch
6400d12b:	xor    ebp,DWORD PTR [edi*4+0x64032968]
6400d132:	mov    esi,ebx
6400d134:	shr    esi,0x18
6400d137:	xor    ebp,DWORD PTR [esi*4+0x64032168]
6400d13e:	mov    esi,DWORD PTR [esp+0x14]
6400d142:	mov    edi,esi
6400d144:	and    edi,0xff
6400d14a:	xor    ebp,DWORD PTR [edi*4+0x64032d68]
6400d151:	add    eax,0x4
6400d154:	xor    ebp,DWORD PTR [eax]
6400d156:	mov    edi,ebx
6400d158:	shr    edi,0x10
6400d15b:	add    eax,0x4
6400d15e:	mov    DWORD PTR [esp+0x24],ebp
6400d162:	and    edi,0xff
6400d168:	movzx  edx,dh
6400d16b:	mov    edi,DWORD PTR [edi*4+0x64032568]
6400d172:	xor    edi,DWORD PTR [edx*4+0x64032968]
6400d179:	mov    edx,esi
6400d17b:	shr    edx,0x18
6400d17e:	xor    edi,DWORD PTR [edx*4+0x64032168]
6400d185:	shr    esi,0x10
6400d188:	and    esi,0xff
6400d18e:	movzx  edx,bh
6400d191:	mov    edx,DWORD PTR [edx*4+0x64032968]
6400d198:	xor    edx,DWORD PTR [esi*4+0x64032568]
6400d19f:	mov    esi,DWORD PTR [esp+0x18]
6400d1a3:	shr    esi,0x18
6400d1a6:	xor    edx,DWORD PTR [esi*4+0x64032168]
6400d1ad:	mov    esi,DWORD PTR [esp+0x28]
6400d1b1:	and    ecx,0xff
6400d1b7:	xor    edi,DWORD PTR [ecx*4+0x64032d68]
6400d1be:	and    esi,0xff
6400d1c4:	xor    edi,DWORD PTR [eax]
6400d1c6:	xor    edx,DWORD PTR [esi*4+0x64032d68]
6400d1cd:	mov    ecx,edi
6400d1cf:	xor    edx,DWORD PTR [eax+0x4]
6400d1d2:	mov    edi,DWORD PTR [esp+0x18]
6400d1d6:	add    eax,0x4
6400d1d9:	shr    edi,0x10
6400d1dc:	and    edi,0xff
6400d1e2:	mov    ebp,DWORD PTR [edi*4+0x64032568]
6400d1e9:	mov    edi,DWORD PTR [esp+0x28]
6400d1ed:	mov    esi,edx
6400d1ef:	movzx  edx,BYTE PTR [esp+0x15]
6400d1f4:	xor    ebp,DWORD PTR [edx*4+0x64032968]
6400d1fb:	shr    edi,0x18
6400d1fe:	xor    ebp,DWORD PTR [edi*4+0x64032168]
6400d205:	mov    edi,DWORD PTR [esp+0x1c]
6400d209:	and    ebx,0xff
6400d20f:	xor    ebp,DWORD PTR [ebx*4+0x64032d68]
6400d216:	add    eax,0x4
6400d219:	xor    ebp,DWORD PTR [eax]
6400d21b:	sub    edi,0x1
6400d21e:	add    eax,0x4
6400d221:	test   edi,edi
6400d223:	mov    DWORD PTR [esp+0x10],esi
6400d227:	mov    edx,ebp
6400d229:	mov    DWORD PTR [esp+0x1c],edi
6400d22d:	jg     0x6400d000
6400d233:	shr    esi,0x10
6400d236:	and    esi,0xff
6400d23c:	mov    esi,DWORD PTR [esi*4+0x64032568]
6400d243:	movzx  edi,ch
6400d246:	xor    esi,DWORD PTR [edi*4+0x64032968]
6400d24d:	mov    edi,edx
6400d24f:	shr    edi,0x18
6400d252:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d259:	mov    edi,DWORD PTR [esp+0x24]
6400d25d:	mov    DWORD PTR [esp+0x28],esi
6400d261:	and    edi,0xff
6400d267:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d26e:	movzx  edi,BYTE PTR [esp+0x11]
6400d273:	xor    esi,DWORD PTR [eax]
6400d275:	add    eax,0x4
6400d278:	mov    DWORD PTR [esp+0x14],esi
6400d27c:	mov    esi,edx
6400d27e:	shr    esi,0x10
6400d281:	and    esi,0xff
6400d287:	mov    esi,DWORD PTR [esi*4+0x64032568]
6400d28e:	xor    esi,DWORD PTR [edi*4+0x64032968]
6400d295:	mov    edi,DWORD PTR [esp+0x24]
6400d299:	shr    edi,0x18
6400d29c:	mov    DWORD PTR [esp+0x28],esi
6400d2a0:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d2a7:	mov    edi,ecx
6400d2a9:	and    edi,0xff
6400d2af:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d2b6:	mov    edi,DWORD PTR [esp+0x24]
6400d2ba:	xor    esi,DWORD PTR [eax]
6400d2bc:	shr    edi,0x10
6400d2bf:	mov    DWORD PTR [esp+0x18],esi
6400d2c3:	movzx  esi,dh
6400d2c6:	mov    esi,DWORD PTR [esi*4+0x64032968]
6400d2cd:	and    edi,0xff
6400d2d3:	xor    esi,DWORD PTR [edi*4+0x64032568]
6400d2da:	mov    edi,ecx
6400d2dc:	shr    edi,0x18
6400d2df:	xor    esi,DWORD PTR [edi*4+0x64032168]
6400d2e6:	mov    edi,DWORD PTR [esp+0x10]
6400d2ea:	mov    DWORD PTR [esp+0x28],esi
6400d2ee:	and    edi,0xff
6400d2f4:	xor    esi,DWORD PTR [edi*4+0x64032d68]
6400d2fb:	movzx  edi,BYTE PTR [esp+0x25]
6400d300:	xor    esi,DWORD PTR [eax+0x4]
6400d303:	shr    ecx,0x10
6400d306:	and    ecx,0xff
6400d30c:	add    eax,0x4
6400d30f:	mov    DWORD PTR [esp+0x28],esi
6400d313:	mov    esi,DWORD PTR [ecx*4+0x64032568]
6400d31a:	xor    esi,DWORD PTR [edi*4+0x64032968]
6400d321:	mov    ecx,DWORD PTR [esp+0x10]
6400d325:	and    edx,0xff
6400d32b:	shr    ecx,0x18
6400d32e:	xor    esi,DWORD PTR [ecx*4+0x64032168]
6400d335:	add    eax,0x4
6400d338:	xor    esi,DWORD PTR [edx*4+0x64032d68]
6400d33f:	mov    edx,DWORD PTR [esp+0x28]
6400d343:	xor    esi,DWORD PTR [eax]
6400d345:	shr    edx,0x10
6400d348:	and    edx,0xff
6400d34e:	movzx  edx,BYTE PTR [edx+0x64031040]
6400d355:	mov    ecx,esi
6400d357:	shr    ecx,0x18
6400d35a:	xor    ebx,ebx
6400d35c:	mov    bh,BYTE PTR [ecx+0x64031040]
6400d362:	movzx  ecx,BYTE PTR [esp+0x19]
6400d367:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400d36e:	xor    edx,ebx
6400d370:	shl    edx,0x8
6400d373:	xor    edx,ecx
6400d375:	mov    ecx,DWORD PTR [esp+0x14]
6400d379:	mov    edi,ecx
6400d37b:	and    edi,0xff
6400d381:	movzx  edi,BYTE PTR [edi+0x64031040]
6400d388:	shl    edx,0x8
6400d38b:	add    eax,0x4
6400d38e:	xor    edx,edi
6400d390:	xor    edx,DWORD PTR [eax]
6400d392:	mov    DWORD PTR [esp+0x24],esi
6400d396:	add    eax,0x4
6400d399:	shr    esi,0x10
6400d39c:	and    esi,0xff
6400d3a2:	movzx  esi,BYTE PTR [esi+0x64031040]
6400d3a9:	shr    ecx,0x18
6400d3ac:	xor    ebx,ebx
6400d3ae:	mov    bh,BYTE PTR [ecx+0x64031040]
6400d3b4:	movzx  ecx,BYTE PTR [esp+0x29]
6400d3b9:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400d3c0:	xor    esi,ebx
6400d3c2:	shl    esi,0x8
6400d3c5:	xor    esi,ecx
6400d3c7:	mov    ecx,DWORD PTR [esp+0x18]
6400d3cb:	mov    edi,ecx
6400d3cd:	shl    esi,0x8
6400d3d0:	and    edi,0xff
6400d3d6:	movzx  edi,BYTE PTR [edi+0x64031040]
6400d3dd:	xor    esi,edi
6400d3df:	xor    esi,DWORD PTR [eax]
6400d3e1:	mov    edi,DWORD PTR [esp+0x28]
6400d3e5:	mov    DWORD PTR [esp+0x1c],esi
6400d3e9:	mov    esi,DWORD PTR [esp+0x14]
6400d3ed:	shr    ecx,0x18
6400d3f0:	shr    esi,0x10
6400d3f3:	and    esi,0xff
6400d3f9:	movzx  esi,BYTE PTR [esi+0x64031040]
6400d400:	xor    ebx,ebx
6400d402:	mov    bh,BYTE PTR [ecx+0x64031040]
6400d408:	movzx  ecx,BYTE PTR [esp+0x25]
6400d40d:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400d414:	xor    esi,ebx
6400d416:	shl    esi,0x8
6400d419:	xor    esi,ecx
6400d41b:	mov    ecx,edi
6400d41d:	and    ecx,0xff
6400d423:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400d42a:	shl    esi,0x8
6400d42d:	xor    esi,ecx
6400d42f:	xor    esi,DWORD PTR [eax+0x4]
6400d432:	mov    ecx,DWORD PTR [esp+0x18]
6400d436:	shr    ecx,0x10
6400d439:	xor    ebx,ebx
6400d43b:	add    eax,0x4
6400d43e:	shr    edi,0x18
6400d441:	mov    bh,BYTE PTR [edi+0x64031040]
6400d447:	and    ecx,0xff
6400d44d:	movzx  ecx,BYTE PTR [ecx+0x64031040]
6400d454:	mov    DWORD PTR [esp+0x10],esi
6400d458:	movzx  esi,BYTE PTR [esp+0x15]
6400d45d:	movzx  esi,BYTE PTR [esi+0x64031040]
6400d464:	xor    ecx,ebx
6400d466:	shl    ecx,0x8
6400d469:	xor    ecx,esi
6400d46b:	mov    esi,DWORD PTR [esp+0x24]
6400d46f:	and    esi,0xff
6400d475:	movzx  esi,BYTE PTR [esi+0x64031040]
6400d47c:	shl    ecx,0x8
6400d47f:	xor    ecx,esi
6400d481:	xor    ecx,DWORD PTR [eax+0x4]
6400d484:	mov    esi,DWORD PTR [esp+0x2c]
6400d488:	mov    eax,edx
6400d48a:	shr    eax,0x8
6400d48d:	mov    BYTE PTR [esi+0x1],al
6400d490:	mov    eax,edx
6400d492:	mov    BYTE PTR [esi],dl
6400d494:	shr    edx,0x18
6400d497:	shr    eax,0x10
6400d49a:	mov    BYTE PTR [esi+0x3],dl
6400d49d:	mov    BYTE PTR [esi+0x2],al
6400d4a0:	mov    eax,DWORD PTR [esp+0x1c]
6400d4a4:	mov    edx,eax
6400d4a6:	shr    edx,0x8
6400d4a9:	mov    BYTE PTR [esi+0x5],dl
6400d4ac:	mov    BYTE PTR [esi+0x4],al
6400d4af:	mov    edx,eax
6400d4b1:	shr    edx,0x10
6400d4b4:	shr    eax,0x18
6400d4b7:	mov    BYTE PTR [esi+0x6],dl
6400d4ba:	mov    BYTE PTR [esi+0x7],al
6400d4bd:	mov    eax,DWORD PTR [esp+0x10]
6400d4c1:	mov    edx,eax
6400d4c3:	shr    edx,0x8
6400d4c6:	mov    BYTE PTR [esi+0x9],dl
6400d4c9:	mov    edx,eax
6400d4cb:	mov    BYTE PTR [esi+0x8],al
6400d4ce:	shr    edx,0x10
6400d4d1:	shr    eax,0x18
6400d4d4:	mov    BYTE PTR [esi+0xa],dl
6400d4d7:	mov    BYTE PTR [esi+0xb],al
6400d4da:	mov    eax,ecx
6400d4dc:	mov    edx,ecx
6400d4de:	mov    BYTE PTR [esi+0xc],cl
6400d4e1:	shr    eax,0x8
6400d4e4:	shr    edx,0x10
6400d4e7:	pop    edi
6400d4e8:	shr    ecx,0x18
6400d4eb:	mov    BYTE PTR [esi+0xd],al
6400d4ee:	mov    BYTE PTR [esi+0xe],dl
6400d4f1:	mov    BYTE PTR [esi+0xf],cl
6400d4f4:	pop    esi
6400d4f5:	pop    ebp
6400d4f6:	pop    ebx
6400d4f7:	add    esp,0x10
6400d4fa:	ret    
6400d4fb:	int3   
6400d4fc:	int3   
6400d4fd:	int3   
6400d4fe:	int3   
6400d4ff:	int3   
6400d500:	sub    esp,0x30
6400d503:	mov    eax,ds:0x6402f09c
6400d508:	xor    eax,esp
6400d50a:	mov    DWORD PTR [esp+0x2c],eax
6400d50e:	cmp    DWORD PTR [esp+0x38],0x0
6400d513:	mov    eax,DWORD PTR [esp+0x34]
6400d517:	push   ebx
6400d518:	push   ebp
6400d519:	mov    ebp,DWORD PTR [esp+0x44]
6400d51d:	push   esi
6400d51e:	mov    esi,DWORD PTR [esp+0x4c]
6400d522:	push   edi
6400d523:	mov    edi,edx
6400d525:	mov    DWORD PTR [esp+0x24],eax
6400d529:	jne    0x6400d5e7
6400d52f:	test   ecx,ecx
6400d531:	jle    0x6400d6c6
6400d537:	lea    eax,[ecx-0x1]
6400d53a:	mov    ebx,ebp
6400d53c:	shr    eax,0x4
6400d53f:	sub    ebx,esi
6400d541:	add    eax,0x1
6400d544:	mov    DWORD PTR [esp+0x10],eax
6400d548:	mov    edx,DWORD PTR [edi+0x4]
6400d54b:	mov    ecx,DWORD PTR [edi]
6400d54d:	mov    eax,DWORD PTR [edi+0x8]
6400d550:	push   esi
6400d551:	mov    DWORD PTR [esp+0x34],edx
6400d555:	mov    edx,DWORD PTR [esp+0x28]
6400d559:	mov    DWORD PTR [esp+0x30],ecx
6400d55d:	mov    ecx,DWORD PTR [edi+0xc]
6400d560:	mov    DWORD PTR [esp+0x38],eax
6400d564:	push   0x0
6400d566:	push   edx
6400d567:	mov    eax,edi
6400d569:	mov    DWORD PTR [esp+0x44],ecx
6400d56d:	call   0x6400cab0
6400d572:	mov    eax,esi
6400d574:	add    esp,0xc
6400d577:	lea    ecx,[ebp+0x2]
6400d57a:	mov    esi,0x4
6400d57f:	nop
6400d580:	movzx  edx,BYTE PTR [ebx+eax*1]
6400d584:	xor    BYTE PTR [eax],dl
6400d586:	movzx  edx,BYTE PTR [ecx-0x1]
6400d58a:	xor    BYTE PTR [eax+0x1],dl
6400d58d:	movzx  edx,BYTE PTR [ecx]
6400d590:	xor    BYTE PTR [eax+0x2],dl
6400d593:	movzx  edx,BYTE PTR [ecx+0x1]
6400d597:	xor    BYTE PTR [eax+0x3],dl
6400d59a:	add    eax,0x4
6400d59d:	add    ecx,0x4
6400d5a0:	sub    esi,0x1
6400d5a3:	jne    0x6400d580
6400d5a5:	mov    ecx,DWORD PTR [esp+0x2c]
6400d5a9:	mov    edx,DWORD PTR [esp+0x30]
6400d5ad:	mov    DWORD PTR [ebp+0x0],ecx
6400d5b0:	mov    ecx,DWORD PTR [esp+0x34]
6400d5b4:	mov    DWORD PTR [ebp+0x4],edx
6400d5b7:	mov    edx,DWORD PTR [esp+0x38]
6400d5bb:	add    edi,0x10
6400d5be:	sub    ebx,0x10
6400d5c1:	sub    DWORD PTR [esp+0x10],0x1
6400d5c6:	mov    DWORD PTR [ebp+0x8],ecx
6400d5c9:	mov    DWORD PTR [ebp+0xc],edx
6400d5cc:	mov    esi,eax
6400d5ce:	jne    0x6400d548
6400d5d4:	pop    edi
6400d5d5:	pop    esi
6400d5d6:	pop    ebp
6400d5d7:	pop    ebx
6400d5d8:	mov    ecx,DWORD PTR [esp+0x2c]
6400d5dc:	xor    ecx,esp
6400d5de:	call   0x64013c5c
6400d5e3:	add    esp,0x30
6400d5e6:	ret    
6400d5e7:	test   ecx,ecx
6400d5e9:	jle    0x6400d6c6
6400d5ef:	mov    eax,ebp
6400d5f1:	sub    eax,esi
6400d5f3:	mov    DWORD PTR [esp+0x10],eax
6400d5f7:	mov    eax,ebp
6400d5f9:	sub    eax,edi
6400d5fb:	mov    DWORD PTR [esp+0x14],eax
6400d5ff:	lea    eax,[ecx-0x1]
6400d602:	shr    eax,0x4
6400d605:	add    eax,0x1
6400d608:	mov    DWORD PTR [esp+0x1c],eax
6400d60c:	lea    esp,[esp+0x0]
6400d610:	lea    eax,[ebp+0x3]
6400d613:	mov    edx,esi
6400d615:	sub    edx,edi
6400d617:	mov    DWORD PTR [esp+0x20],eax
6400d61b:	lea    ecx,[esi+0x1]
6400d61e:	mov    eax,edi
6400d620:	mov    DWORD PTR [esp+0x28],edx
6400d624:	mov    DWORD PTR [esp+0x18],0x4
6400d62c:	jmp    0x6400d634
6400d62e:	mov    edi,edi
6400d630:	mov    edx,DWORD PTR [esp+0x28]
6400d634:	mov    ebx,DWORD PTR [esp+0x14]
6400d638:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400d63c:	xor    bl,BYTE PTR [eax]
6400d63e:	add    eax,0x4
6400d641:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400d645:	mov    edx,DWORD PTR [esp+0x10]
6400d649:	mov    dl,BYTE PTR [ecx+edx*1]
6400d64c:	xor    dl,BYTE PTR [eax-0x3]
6400d64f:	add    ecx,0x4
6400d652:	mov    BYTE PTR [ecx-0x4],dl
6400d655:	movzx  ebx,BYTE PTR [eax-0x2]
6400d659:	mov    edx,DWORD PTR [esp+0x20]
6400d65d:	xor    bl,BYTE PTR [edx-0x1]
6400d660:	add    edx,0x4
6400d663:	mov    BYTE PTR [ecx-0x3],bl
6400d666:	movzx  ebx,BYTE PTR [eax-0x1]
6400d66a:	xor    bl,BYTE PTR [edx-0x4]
6400d66d:	mov    DWORD PTR [esp+0x20],edx
6400d671:	mov    BYTE PTR [ecx-0x2],bl
6400d674:	mov    ebx,0x1
6400d679:	sub    DWORD PTR [esp+0x18],ebx
6400d67d:	jne    0x6400d630
6400d67f:	mov    eax,DWORD PTR [esp+0x48]
6400d683:	mov    ecx,DWORD PTR [esp+0x24]
6400d687:	push   esi
6400d688:	push   eax
6400d689:	push   ecx
6400d68a:	mov    eax,esi
6400d68c:	call   0x6400cab0
6400d691:	mov    edx,DWORD PTR [esi]
6400d693:	mov    DWORD PTR [ebp+0x0],edx
6400d696:	mov    eax,DWORD PTR [esi+0x4]
6400d699:	mov    DWORD PTR [ebp+0x4],eax
6400d69c:	mov    ecx,DWORD PTR [esi+0x8]
6400d69f:	mov    eax,0x10
6400d6a4:	sub    DWORD PTR [esp+0x20],eax
6400d6a8:	sub    DWORD PTR [esp+0x1c],eax
6400d6ac:	mov    DWORD PTR [ebp+0x8],ecx
6400d6af:	mov    edx,DWORD PTR [esi+0xc]
6400d6b2:	add    esp,0xc
6400d6b5:	add    edi,eax
6400d6b7:	add    esi,eax
6400d6b9:	sub    DWORD PTR [esp+0x1c],ebx
6400d6bd:	mov    DWORD PTR [ebp+0xc],edx
6400d6c0:	jne    0x6400d610
6400d6c6:	mov    ecx,DWORD PTR [esp+0x3c]
6400d6ca:	pop    edi
6400d6cb:	pop    esi
6400d6cc:	pop    ebp
6400d6cd:	pop    ebx
6400d6ce:	xor    ecx,esp
6400d6d0:	call   0x64013c5c
6400d6d5:	add    esp,0x30
6400d6d8:	ret    
6400d6d9:	int3   
6400d6da:	int3   
6400d6db:	int3   
6400d6dc:	int3   
6400d6dd:	int3   
6400d6de:	int3   
6400d6df:	int3   
6400d6e0:	push   0xffffffff
6400d6e2:	push   0x640236db
6400d6e7:	mov    eax,fs:0x0
6400d6ed:	push   eax
6400d6ee:	sub    esp,0x138
6400d6f4:	mov    eax,ds:0x6402f09c
6400d6f9:	xor    eax,esp
6400d6fb:	mov    DWORD PTR [esp+0x134],eax
6400d702:	push   ebp
6400d703:	push   esi
6400d704:	push   edi
6400d705:	mov    eax,ds:0x6402f09c
6400d70a:	xor    eax,esp
6400d70c:	push   eax
6400d70d:	lea    eax,[esp+0x148]
6400d714:	mov    fs:0x0,eax
6400d71a:	mov    ebp,DWORD PTR [esp+0x15c]
6400d721:	mov    eax,DWORD PTR [esp+0x158]
6400d728:	mov    DWORD PTR [esp+0x14],eax
6400d72c:	lea    esi,[ebp+0x8]
6400d72f:	mov    eax,esi
6400d731:	and    eax,0xf
6400d734:	mov    DWORD PTR [esp+0x18],ecx
6400d738:	mov    DWORD PTR [esp+0x10],0x0
6400d740:	je     0x6400d74b
6400d742:	mov    edx,0x10
6400d747:	sub    edx,eax
6400d749:	add    esi,edx
6400d74b:	push   esi
6400d74c:	call   0x640133fd
6400d751:	mov    edi,eax
6400d753:	mov    DWORD PTR [esp+0x14],edi
6400d757:	push   esi
6400d758:	mov    DWORD PTR [esp+0x158],0x0
6400d763:	call   0x640133fd
6400d768:	push   esi
6400d769:	push   0x0
6400d76b:	push   edi
6400d76c:	mov    DWORD PTR [ebx],eax
6400d76e:	call   0x64014360
6400d773:	mov    eax,DWORD PTR [esp+0x28]
6400d777:	push   ebp
6400d778:	push   eax
6400d779:	lea    ecx,[edi+0x8]
6400d77c:	mov    DWORD PTR [edi],0x52514f4b
6400d782:	push   ecx
6400d783:	mov    DWORD PTR [edi+0x4],ebp
6400d786:	call   0x64015680
6400d78b:	xor    eax,eax
6400d78d:	mov    DWORD PTR [esp+0x154],eax
6400d794:	mov    DWORD PTR [esp+0x158],eax
6400d79b:	mov    DWORD PTR [esp+0x15c],eax
6400d7a2:	mov    DWORD PTR [esp+0x160],eax
6400d7a9:	lea    eax,[esp+0x3c]
6400d7ad:	call   0x6400c3c0
6400d7b2:	mov    eax,DWORD PTR [ebx]
6400d7b4:	push   eax
6400d7b5:	lea    edx,[esp+0x158]
6400d7bc:	push   edx
6400d7bd:	lea    eax,[esp+0x44]
6400d7c1:	push   0x1
6400d7c3:	push   eax
6400d7c4:	mov    edx,edi
6400d7c6:	mov    ecx,esi
6400d7c8:	call   0x6400d500
6400d7cd:	mov    ecx,DWORD PTR [esp+0x48]
6400d7d1:	push   0x0
6400d7d3:	mov    DWORD PTR [ecx],esi
6400d7d5:	call   0x64013402
6400d7da:	push   edi
6400d7db:	call   0x64013402
6400d7e0:	add    esp,0x38
6400d7e3:	mov    eax,ebx
6400d7e5:	mov    ecx,DWORD PTR [esp+0x148]
6400d7ec:	mov    DWORD PTR fs:0x0,ecx
6400d7f3:	pop    ecx
6400d7f4:	pop    edi
6400d7f5:	pop    esi
6400d7f6:	pop    ebp
6400d7f7:	mov    ecx,DWORD PTR [esp+0x134]
6400d7fe:	xor    ecx,esp
6400d800:	call   0x64013c5c
6400d805:	add    esp,0x144
6400d80b:	ret    
6400d80c:	int3   
6400d80d:	int3   
6400d80e:	int3   
6400d80f:	int3   
6400d810:	sub    esp,0x13c
6400d816:	mov    eax,ds:0x6402f09c
6400d81b:	xor    eax,esp
6400d81d:	mov    DWORD PTR [esp+0x134],eax
6400d824:	mov    eax,DWORD PTR [esp+0x144]
6400d82b:	push   ebp
6400d82c:	mov    ebp,DWORD PTR [esp+0x144]
6400d833:	mov    DWORD PTR [esp+0x8],eax
6400d837:	xor    eax,eax
6400d839:	test   bl,0xf
6400d83c:	push   esi
6400d83d:	mov    DWORD PTR [esp+0x8],eax
6400d841:	je     0x6400d84f
6400d843:	mov    DWORD PTR [esp+0x8],eax
6400d847:	mov    DWORD PTR [edi],eax
6400d849:	push   eax
6400d84a:	jmp    0x6400d8ef
6400d84f:	push   ebx
6400d850:	call   0x640133fd
6400d855:	mov    esi,eax
6400d857:	xor    eax,eax
6400d859:	mov    DWORD PTR [esp+0x130],eax
6400d860:	mov    DWORD PTR [esp+0x134],eax
6400d867:	mov    DWORD PTR [esp+0x138],eax
6400d86e:	mov    DWORD PTR [esp+0x13c],eax
6400d875:	add    esp,0x4
6400d878:	lea    eax,[esp+0x10]
6400d87c:	call   0x6400c8d0
6400d881:	push   esi
6400d882:	lea    ecx,[esp+0x130]
6400d889:	push   ecx
6400d88a:	lea    edx,[esp+0x18]
6400d88e:	push   0x0
6400d890:	push   edx
6400d891:	mov    edx,ebp
6400d893:	mov    ecx,ebx
6400d895:	call   0x6400d500
6400d89a:	add    esp,0x10
6400d89d:	cmp    DWORD PTR [esi],0x52534f4b
6400d8a3:	je     0x6400d8ca
6400d8a5:	push   0x0
6400d8a7:	mov    DWORD PTR [esp+0xc],0x0
6400d8af:	mov    DWORD PTR [edi],0x0
6400d8b5:	call   0x64013402
6400d8ba:	add    esp,0x4
6400d8bd:	push   0x0
6400d8bf:	call   0x64013402
6400d8c4:	add    esp,0x4
6400d8c7:	push   esi
6400d8c8:	jmp    0x6400d8ef
6400d8ca:	mov    eax,DWORD PTR [esi+0x4]
6400d8cd:	mov    ecx,DWORD PTR [esp+0xc]
6400d8d1:	push   eax
6400d8d2:	lea    edx,[esi+0x8]
6400d8d5:	push   edx
6400d8d6:	push   esi
6400d8d7:	mov    DWORD PTR [ecx],eax
6400d8d9:	call   0x64014ca0
6400d8de:	add    esp,0xc
6400d8e1:	push   0x0
6400d8e3:	mov    DWORD PTR [edi],esi
6400d8e5:	call   0x64013402
6400d8ea:	add    esp,0x4
6400d8ed:	push   0x0
6400d8ef:	call   0x64013402
6400d8f4:	mov    ecx,DWORD PTR [esp+0x140]
6400d8fb:	add    esp,0x4
6400d8fe:	pop    esi
6400d8ff:	pop    ebp
6400d900:	xor    ecx,esp
6400d902:	mov    eax,edi
6400d904:	call   0x64013c5c
6400d909:	add    esp,0x13c
6400d90f:	ret    
6400d910:	push   ebp
6400d911:	mov    ebp,esp
6400d913:	and    esp,0xfffffff8
6400d916:	push   0xffffffff
6400d918:	push   0x6402477e
6400d91d:	mov    eax,fs:0x0
6400d923:	push   eax
6400d924:	push   ecx
6400d925:	push   ebx
6400d926:	push   esi
6400d927:	mov    eax,ds:0x6402f09c
6400d92c:	xor    eax,esp
6400d92e:	push   eax
6400d92f:	lea    eax,[esp+0x10]
6400d933:	mov    fs:0x0,eax
6400d939:	mov    ebx,0x1
6400d93e:	test   BYTE PTR ds:0x6403349c,bl
6400d944:	jne    0x6400d9ce
6400d94a:	or     DWORD PTR ds:0x6403349c,ebx
6400d950:	push   0x6402a0bc
6400d955:	push   0xc
6400d957:	push   0x6402a0f4
6400d95c:	mov    DWORD PTR [esp+0x24],0x0
6400d964:	call   0x64006690
6400d969:	push   0x6402a104
6400d96e:	push   0x8
6400d970:	push   0x6402a134
6400d975:	mov    esi,eax
6400d977:	call   0x64006950
6400d97c:	add    esp,0x18
6400d97f:	push   eax
6400d980:	call   DWORD PTR ds:0x64026018
6400d986:	add    DWORD PTR ds:0x64033270,ebx
6400d98c:	test   eax,eax
6400d98e:	je     0x6400d9b5
6400d990:	push   esi
6400d991:	push   eax
6400d992:	call   DWORD PTR ds:0x64026014
6400d998:	add    DWORD PTR ds:0x64033274,ebx
6400d99e:	mov    ds:0x64033498,eax
6400d9a3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9a7:	mov    DWORD PTR fs:0x0,ecx
6400d9ae:	pop    ecx
6400d9af:	pop    esi
6400d9b0:	pop    ebx
6400d9b1:	mov    esp,ebp
6400d9b3:	pop    ebp
6400d9b4:	ret    
6400d9b5:	xor    eax,eax
6400d9b7:	mov    ds:0x64033498,eax
6400d9bc:	mov    ecx,DWORD PTR [esp+0x10]
6400d9c0:	mov    DWORD PTR fs:0x0,ecx
6400d9c7:	pop    ecx
6400d9c8:	pop    esi
6400d9c9:	pop    ebx
6400d9ca:	mov    esp,ebp
6400d9cc:	pop    ebp
6400d9cd:	ret    
6400d9ce:	mov    eax,ds:0x64033498
6400d9d3:	mov    ecx,DWORD PTR [esp+0x10]
6400d9d7:	mov    DWORD PTR fs:0x0,ecx
6400d9de:	pop    ecx
6400d9df:	pop    esi
6400d9e0:	pop    ebx
6400d9e1:	mov    esp,ebp
6400d9e3:	pop    ebp
6400d9e4:	ret    
6400d9e5:	int3   
6400d9e6:	int3   
6400d9e7:	int3   
6400d9e8:	int3   
6400d9e9:	int3   
6400d9ea:	int3   
6400d9eb:	int3   
6400d9ec:	int3   
6400d9ed:	int3   
6400d9ee:	int3   
6400d9ef:	int3   
6400d9f0:	push   ebp
6400d9f1:	mov    ebp,esp
6400d9f3:	and    esp,0xfffffff8
6400d9f6:	push   0xffffffff
6400d9f8:	push   0x6402474e
6400d9fd:	mov    eax,fs:0x0
6400da03:	push   eax
6400da04:	push   ecx
6400da05:	push   ebx
6400da06:	push   esi
6400da07:	mov    eax,ds:0x6402f09c
6400da0c:	xor    eax,esp
6400da0e:	push   eax
6400da0f:	lea    eax,[esp+0x10]
6400da13:	mov    fs:0x0,eax
6400da19:	mov    ebx,0x1
6400da1e:	test   BYTE PTR ds:0x64033494,bl
6400da24:	jne    0x6400daae
6400da2a:	or     DWORD PTR ds:0x64033494,ebx
6400da30:	push   0x6402a148
6400da35:	push   0xe
6400da37:	push   0x6402a170
6400da3c:	mov    DWORD PTR [esp+0x24],0x0
6400da44:	call   0x64006690
6400da49:	push   0x6402a180
6400da4e:	push   0x8
6400da50:	push   0x6402a134
6400da55:	mov    esi,eax
6400da57:	call   0x64006950
6400da5c:	add    esp,0x18
6400da5f:	push   eax
6400da60:	call   DWORD PTR ds:0x64026018
6400da66:	add    DWORD PTR ds:0x64033270,ebx
6400da6c:	test   eax,eax
6400da6e:	je     0x6400da95
6400da70:	push   esi
6400da71:	push   eax
6400da72:	call   DWORD PTR ds:0x64026014
6400da78:	add    DWORD PTR ds:0x64033274,ebx
6400da7e:	mov    ds:0x64033490,eax
6400da83:	mov    ecx,DWORD PTR [esp+0x10]
6400da87:	mov    DWORD PTR fs:0x0,ecx
6400da8e:	pop    ecx
6400da8f:	pop    esi
6400da90:	pop    ebx
6400da91:	mov    esp,ebp
6400da93:	pop    ebp
6400da94:	ret    
6400da95:	xor    eax,eax
6400da97:	mov    ds:0x64033490,eax
6400da9c:	mov    ecx,DWORD PTR [esp+0x10]
6400daa0:	mov    DWORD PTR fs:0x0,ecx
6400daa7:	pop    ecx
6400daa8:	pop    esi
6400daa9:	pop    ebx
6400daaa:	mov    esp,ebp
6400daac:	pop    ebp
6400daad:	ret    
6400daae:	mov    eax,ds:0x64033490
6400dab3:	mov    ecx,DWORD PTR [esp+0x10]
6400dab7:	mov    DWORD PTR fs:0x0,ecx
6400dabe:	pop    ecx
6400dabf:	pop    esi
6400dac0:	pop    ebx
6400dac1:	mov    esp,ebp
6400dac3:	pop    ebp
6400dac4:	ret    
6400dac5:	int3   
6400dac6:	int3   
6400dac7:	int3   
6400dac8:	int3   
6400dac9:	int3   
6400daca:	int3   
6400dacb:	int3   
6400dacc:	int3   
6400dacd:	int3   
6400dace:	int3   
6400dacf:	int3   
6400dad0:	push   ebp
6400dad1:	mov    ebp,esp
6400dad3:	and    esp,0xfffffff8
6400dad6:	push   0xffffffff
6400dad8:	push   0x6402471e
6400dadd:	mov    eax,fs:0x0
6400dae3:	push   eax
6400dae4:	push   ecx
6400dae5:	push   ebx
6400dae6:	push   esi
6400dae7:	mov    eax,ds:0x6402f09c
6400daec:	xor    eax,esp
6400daee:	push   eax
6400daef:	lea    eax,[esp+0x10]
6400daf3:	mov    fs:0x0,eax
6400daf9:	mov    ebx,0x1
6400dafe:	test   BYTE PTR ds:0x6403348c,bl
6400db04:	jne    0x6400db8e
6400db0a:	or     DWORD PTR ds:0x6403348c,ebx
6400db10:	push   0x6402a1b0
6400db15:	push   0xf
6400db17:	push   0x6402a1d8
6400db1c:	mov    DWORD PTR [esp+0x24],0x0
6400db24:	call   0x64006690
6400db29:	push   0x6402a1e8
6400db2e:	push   0x8
6400db30:	push   0x6402a134
6400db35:	mov    esi,eax
6400db37:	call   0x64006950
6400db3c:	add    esp,0x18
6400db3f:	push   eax
6400db40:	call   DWORD PTR ds:0x64026018
6400db46:	add    DWORD PTR ds:0x64033270,ebx
6400db4c:	test   eax,eax
6400db4e:	je     0x6400db75
6400db50:	push   esi
6400db51:	push   eax
6400db52:	call   DWORD PTR ds:0x64026014
6400db58:	add    DWORD PTR ds:0x64033274,ebx
6400db5e:	mov    ds:0x64033488,eax
6400db63:	mov    ecx,DWORD PTR [esp+0x10]
6400db67:	mov    DWORD PTR fs:0x0,ecx
6400db6e:	pop    ecx
6400db6f:	pop    esi
6400db70:	pop    ebx
6400db71:	mov    esp,ebp
6400db73:	pop    ebp
6400db74:	ret    
6400db75:	xor    eax,eax
6400db77:	mov    ds:0x64033488,eax
6400db7c:	mov    ecx,DWORD PTR [esp+0x10]
6400db80:	mov    DWORD PTR fs:0x0,ecx
6400db87:	pop    ecx
6400db88:	pop    esi
6400db89:	pop    ebx
6400db8a:	mov    esp,ebp
6400db8c:	pop    ebp
6400db8d:	ret    
6400db8e:	mov    eax,ds:0x64033488
6400db93:	mov    ecx,DWORD PTR [esp+0x10]
6400db97:	mov    DWORD PTR fs:0x0,ecx
6400db9e:	pop    ecx
6400db9f:	pop    esi
6400dba0:	pop    ebx
6400dba1:	mov    esp,ebp
6400dba3:	pop    ebp
6400dba4:	ret    
6400dba5:	int3   
6400dba6:	int3   
6400dba7:	int3   
6400dba8:	int3   
6400dba9:	int3   
6400dbaa:	int3   
6400dbab:	int3   
6400dbac:	int3   
6400dbad:	int3   
6400dbae:	int3   
6400dbaf:	int3   
6400dbb0:	push   ebp
6400dbb1:	mov    ebp,esp
6400dbb3:	and    esp,0xfffffff8
6400dbb6:	push   0xffffffff
6400dbb8:	push   0x640246ee
6400dbbd:	mov    eax,fs:0x0
6400dbc3:	push   eax
6400dbc4:	push   ecx
6400dbc5:	push   ebx
6400dbc6:	push   esi
6400dbc7:	mov    eax,ds:0x6402f09c
6400dbcc:	xor    eax,esp
6400dbce:	push   eax
6400dbcf:	lea    eax,[esp+0x10]
6400dbd3:	mov    fs:0x0,eax
6400dbd9:	mov    ebx,0x1
6400dbde:	test   BYTE PTR ds:0x64033484,bl
6400dbe4:	jne    0x6400dc6e
6400dbea:	or     DWORD PTR ds:0x64033484,ebx
6400dbf0:	push   0x6402a228
6400dbf5:	push   0xf
6400dbf7:	push   0x6402a268
6400dbfc:	mov    DWORD PTR [esp+0x24],0x0
6400dc04:	call   0x64006690
6400dc09:	push   0x6402a278
6400dc0e:	push   0x8
6400dc10:	push   0x6402a134
6400dc15:	mov    esi,eax
6400dc17:	call   0x64006950
6400dc1c:	add    esp,0x18
6400dc1f:	push   eax
6400dc20:	call   DWORD PTR ds:0x64026018
6400dc26:	add    DWORD PTR ds:0x64033270,ebx
6400dc2c:	test   eax,eax
6400dc2e:	je     0x6400dc55
6400dc30:	push   esi
6400dc31:	push   eax
6400dc32:	call   DWORD PTR ds:0x64026014
6400dc38:	add    DWORD PTR ds:0x64033274,ebx
6400dc3e:	mov    ds:0x64033480,eax
6400dc43:	mov    ecx,DWORD PTR [esp+0x10]
6400dc47:	mov    DWORD PTR fs:0x0,ecx
6400dc4e:	pop    ecx
6400dc4f:	pop    esi
6400dc50:	pop    ebx
6400dc51:	mov    esp,ebp
6400dc53:	pop    ebp
6400dc54:	ret    
6400dc55:	xor    eax,eax
6400dc57:	mov    ds:0x64033480,eax
6400dc5c:	mov    ecx,DWORD PTR [esp+0x10]
6400dc60:	mov    DWORD PTR fs:0x0,ecx
6400dc67:	pop    ecx
6400dc68:	pop    esi
6400dc69:	pop    ebx
6400dc6a:	mov    esp,ebp
6400dc6c:	pop    ebp
6400dc6d:	ret    
6400dc6e:	mov    eax,ds:0x64033480
6400dc73:	mov    ecx,DWORD PTR [esp+0x10]
6400dc77:	mov    DWORD PTR fs:0x0,ecx
6400dc7e:	pop    ecx
6400dc7f:	pop    esi
6400dc80:	pop    ebx
6400dc81:	mov    esp,ebp
6400dc83:	pop    ebp
6400dc84:	ret    
6400dc85:	int3   
6400dc86:	int3   
6400dc87:	int3   
6400dc88:	int3   
6400dc89:	int3   
6400dc8a:	int3   
6400dc8b:	int3   
6400dc8c:	int3   
6400dc8d:	int3   
6400dc8e:	int3   
6400dc8f:	int3   
6400dc90:	push   ebp
6400dc91:	mov    ebp,esp
6400dc93:	and    esp,0xfffffff8
6400dc96:	push   0xffffffff
6400dc98:	push   0x640246be
6400dc9d:	mov    eax,fs:0x0
6400dca3:	push   eax
6400dca4:	push   ecx
6400dca5:	push   ebx
6400dca6:	push   esi
6400dca7:	mov    eax,ds:0x6402f09c
6400dcac:	xor    eax,esp
6400dcae:	push   eax
6400dcaf:	lea    eax,[esp+0x10]
6400dcb3:	mov    fs:0x0,eax
6400dcb9:	mov    ebx,0x1
6400dcbe:	test   BYTE PTR ds:0x6403347c,bl
6400dcc4:	jne    0x6400dd4e
6400dcca:	or     DWORD PTR ds:0x6403347c,ebx
6400dcd0:	push   0x6402a2a8
6400dcd5:	push   0x13
6400dcd7:	push   0x6402a2dc
6400dcdc:	mov    DWORD PTR [esp+0x24],0x0
6400dce4:	call   0x64006690
6400dce9:	push   0x6402a2f0
6400dcee:	push   0x8
6400dcf0:	push   0x6402a31c
6400dcf5:	mov    esi,eax
6400dcf7:	call   0x64006950
6400dcfc:	add    esp,0x18
6400dcff:	push   eax
6400dd00:	call   DWORD PTR ds:0x64026018
6400dd06:	add    DWORD PTR ds:0x64033270,ebx
6400dd0c:	test   eax,eax
6400dd0e:	je     0x6400dd35
6400dd10:	push   esi
6400dd11:	push   eax
6400dd12:	call   DWORD PTR ds:0x64026014
6400dd18:	add    DWORD PTR ds:0x64033274,ebx
6400dd1e:	mov    ds:0x64033478,eax
6400dd23:	mov    ecx,DWORD PTR [esp+0x10]
6400dd27:	mov    DWORD PTR fs:0x0,ecx
6400dd2e:	pop    ecx
6400dd2f:	pop    esi
6400dd30:	pop    ebx
6400dd31:	mov    esp,ebp
6400dd33:	pop    ebp
6400dd34:	ret    
6400dd35:	xor    eax,eax
6400dd37:	mov    ds:0x64033478,eax
6400dd3c:	mov    ecx,DWORD PTR [esp+0x10]
6400dd40:	mov    DWORD PTR fs:0x0,ecx
6400dd47:	pop    ecx
6400dd48:	pop    esi
6400dd49:	pop    ebx
6400dd4a:	mov    esp,ebp
6400dd4c:	pop    ebp
6400dd4d:	ret    
6400dd4e:	mov    eax,ds:0x64033478
6400dd53:	mov    ecx,DWORD PTR [esp+0x10]
6400dd57:	mov    DWORD PTR fs:0x0,ecx
6400dd5e:	pop    ecx
6400dd5f:	pop    esi
6400dd60:	pop    ebx
6400dd61:	mov    esp,ebp
6400dd63:	pop    ebp
6400dd64:	ret    
6400dd65:	int3   
6400dd66:	int3   
6400dd67:	int3   
6400dd68:	int3   
6400dd69:	int3   
6400dd6a:	int3   
6400dd6b:	int3   
6400dd6c:	int3   
6400dd6d:	int3   
6400dd6e:	int3   
6400dd6f:	int3   
6400dd70:	push   ebp
6400dd71:	mov    ebp,esp
6400dd73:	and    esp,0xfffffff8
6400dd76:	push   0xffffffff
6400dd78:	push   0x6402468e
6400dd7d:	mov    eax,fs:0x0
6400dd83:	push   eax
6400dd84:	push   ecx
6400dd85:	push   ebx
6400dd86:	push   esi
6400dd87:	mov    eax,ds:0x6402f09c
6400dd8c:	xor    eax,esp
6400dd8e:	push   eax
6400dd8f:	lea    eax,[esp+0x10]
6400dd93:	mov    fs:0x0,eax
6400dd99:	mov    ebx,0x1
6400dd9e:	test   BYTE PTR ds:0x64033474,bl
6400dda4:	jne    0x6400de2e
6400ddaa:	or     DWORD PTR ds:0x64033474,ebx
6400ddb0:	push   0x6402a330
6400ddb5:	push   0xe
6400ddb7:	push   0x6402a358
6400ddbc:	mov    DWORD PTR [esp+0x24],0x0
6400ddc4:	call   0x64006690
6400ddc9:	push   0x6402a368
6400ddce:	push   0x8
6400ddd0:	push   0x6402a31c
6400ddd5:	mov    esi,eax
6400ddd7:	call   0x64006950
6400dddc:	add    esp,0x18
6400dddf:	push   eax
6400dde0:	call   DWORD PTR ds:0x64026018
6400dde6:	add    DWORD PTR ds:0x64033270,ebx
6400ddec:	test   eax,eax
6400ddee:	je     0x6400de15
6400ddf0:	push   esi
6400ddf1:	push   eax
6400ddf2:	call   DWORD PTR ds:0x64026014
6400ddf8:	add    DWORD PTR ds:0x64033274,ebx
6400ddfe:	mov    ds:0x64033470,eax
6400de03:	mov    ecx,DWORD PTR [esp+0x10]
6400de07:	mov    DWORD PTR fs:0x0,ecx
6400de0e:	pop    ecx
6400de0f:	pop    esi
6400de10:	pop    ebx
6400de11:	mov    esp,ebp
6400de13:	pop    ebp
6400de14:	ret    
6400de15:	xor    eax,eax
6400de17:	mov    ds:0x64033470,eax
6400de1c:	mov    ecx,DWORD PTR [esp+0x10]
6400de20:	mov    DWORD PTR fs:0x0,ecx
6400de27:	pop    ecx
6400de28:	pop    esi
6400de29:	pop    ebx
6400de2a:	mov    esp,ebp
6400de2c:	pop    ebp
6400de2d:	ret    
6400de2e:	mov    eax,ds:0x64033470
6400de33:	mov    ecx,DWORD PTR [esp+0x10]
6400de37:	mov    DWORD PTR fs:0x0,ecx
6400de3e:	pop    ecx
6400de3f:	pop    esi
6400de40:	pop    ebx
6400de41:	mov    esp,ebp
6400de43:	pop    ebp
6400de44:	ret    
6400de45:	int3   
6400de46:	int3   
6400de47:	int3   
6400de48:	int3   
6400de49:	int3   
6400de4a:	int3   
6400de4b:	int3   
6400de4c:	int3   
6400de4d:	int3   
6400de4e:	int3   
6400de4f:	int3   
6400de50:	push   ebp
6400de51:	mov    ebp,esp
6400de53:	and    esp,0xfffffff8
6400de56:	push   0xffffffff
6400de58:	push   0x6402465e
6400de5d:	mov    eax,fs:0x0
6400de63:	push   eax
6400de64:	push   ecx
6400de65:	push   ebx
6400de66:	push   esi
6400de67:	mov    eax,ds:0x6402f09c
6400de6c:	xor    eax,esp
6400de6e:	push   eax
6400de6f:	lea    eax,[esp+0x10]
6400de73:	mov    fs:0x0,eax
6400de79:	mov    ebx,0x1
6400de7e:	test   BYTE PTR ds:0x6403346c,bl
6400de84:	jne    0x6400df0e
6400de8a:	or     DWORD PTR ds:0x6403346c,ebx
6400de90:	push   0x6402a3a8
6400de95:	push   0xb
6400de97:	push   0x6402a3cc
6400de9c:	mov    DWORD PTR [esp+0x24],0x0
6400dea4:	call   0x64006690
6400dea9:	push   0x6402a3d8
6400deae:	push   0x8
6400deb0:	push   0x6402a31c
6400deb5:	mov    esi,eax
6400deb7:	call   0x64006950
6400debc:	add    esp,0x18
6400debf:	push   eax
6400dec0:	call   DWORD PTR ds:0x64026018
6400dec6:	add    DWORD PTR ds:0x64033270,ebx
6400decc:	test   eax,eax
6400dece:	je     0x6400def5
6400ded0:	push   esi
6400ded1:	push   eax
6400ded2:	call   DWORD PTR ds:0x64026014
6400ded8:	add    DWORD PTR ds:0x64033274,ebx
6400dede:	mov    ds:0x64033468,eax
6400dee3:	mov    ecx,DWORD PTR [esp+0x10]
6400dee7:	mov    DWORD PTR fs:0x0,ecx
6400deee:	pop    ecx
6400deef:	pop    esi
6400def0:	pop    ebx
6400def1:	mov    esp,ebp
6400def3:	pop    ebp
6400def4:	ret    
6400def5:	xor    eax,eax
6400def7:	mov    ds:0x64033468,eax
6400defc:	mov    ecx,DWORD PTR [esp+0x10]
6400df00:	mov    DWORD PTR fs:0x0,ecx
6400df07:	pop    ecx
6400df08:	pop    esi
6400df09:	pop    ebx
6400df0a:	mov    esp,ebp
6400df0c:	pop    ebp
6400df0d:	ret    
6400df0e:	mov    eax,ds:0x64033468
6400df13:	mov    ecx,DWORD PTR [esp+0x10]
6400df17:	mov    DWORD PTR fs:0x0,ecx
6400df1e:	pop    ecx
6400df1f:	pop    esi
6400df20:	pop    ebx
6400df21:	mov    esp,ebp
6400df23:	pop    ebp
6400df24:	ret    
6400df25:	int3   
6400df26:	int3   
6400df27:	int3   
6400df28:	int3   
6400df29:	int3   
6400df2a:	int3   
6400df2b:	int3   
6400df2c:	int3   
6400df2d:	int3   
6400df2e:	int3   
6400df2f:	int3   
6400df30:	push   ebp
6400df31:	mov    ebp,esp
6400df33:	and    esp,0xfffffff8
6400df36:	push   0xffffffff
6400df38:	push   0x6402462e
6400df3d:	mov    eax,fs:0x0
6400df43:	push   eax
6400df44:	push   ecx
6400df45:	push   ebx
6400df46:	push   esi
6400df47:	mov    eax,ds:0x6402f09c
6400df4c:	xor    eax,esp
6400df4e:	push   eax
6400df4f:	lea    eax,[esp+0x10]
6400df53:	mov    fs:0x0,eax
6400df59:	mov    ebx,0x1
6400df5e:	test   BYTE PTR ds:0x64033464,bl
6400df64:	jne    0x6400dfee
6400df6a:	or     DWORD PTR ds:0x64033464,ebx
6400df70:	push   0x6402a414
6400df75:	push   0xb
6400df77:	push   0x6402a438
6400df7c:	mov    DWORD PTR [esp+0x24],0x0
6400df84:	call   0x64006690
6400df89:	push   0x6402a444
6400df8e:	push   0x8
6400df90:	push   0x6402a31c
6400df95:	mov    esi,eax
6400df97:	call   0x64006950
6400df9c:	add    esp,0x18
6400df9f:	push   eax
6400dfa0:	call   DWORD PTR ds:0x64026018
6400dfa6:	add    DWORD PTR ds:0x64033270,ebx
6400dfac:	test   eax,eax
6400dfae:	je     0x6400dfd5
6400dfb0:	push   esi
6400dfb1:	push   eax
6400dfb2:	call   DWORD PTR ds:0x64026014
6400dfb8:	add    DWORD PTR ds:0x64033274,ebx
6400dfbe:	mov    ds:0x64033460,eax
6400dfc3:	mov    ecx,DWORD PTR [esp+0x10]
6400dfc7:	mov    DWORD PTR fs:0x0,ecx
6400dfce:	pop    ecx
6400dfcf:	pop    esi
6400dfd0:	pop    ebx
6400dfd1:	mov    esp,ebp
6400dfd3:	pop    ebp
6400dfd4:	ret    
6400dfd5:	xor    eax,eax
6400dfd7:	mov    ds:0x64033460,eax
6400dfdc:	mov    ecx,DWORD PTR [esp+0x10]
6400dfe0:	mov    DWORD PTR fs:0x0,ecx
6400dfe7:	pop    ecx
6400dfe8:	pop    esi
6400dfe9:	pop    ebx
6400dfea:	mov    esp,ebp
6400dfec:	pop    ebp
6400dfed:	ret    
6400dfee:	mov    eax,ds:0x64033460
6400dff3:	mov    ecx,DWORD PTR [esp+0x10]
6400dff7:	mov    DWORD PTR fs:0x0,ecx
6400dffe:	pop    ecx
6400dfff:	pop    esi
6400e000:	pop    ebx
6400e001:	mov    esp,ebp
6400e003:	pop    ebp
6400e004:	ret    
6400e005:	int3   
6400e006:	int3   
6400e007:	int3   
6400e008:	int3   
6400e009:	int3   
6400e00a:	int3   
6400e00b:	int3   
6400e00c:	int3   
6400e00d:	int3   
6400e00e:	int3   
6400e00f:	int3   
6400e010:	push   ebp
6400e011:	mov    ebp,esp
6400e013:	and    esp,0xfffffff8
6400e016:	push   0xffffffff
6400e018:	push   0x640245fe
6400e01d:	mov    eax,fs:0x0
6400e023:	push   eax
6400e024:	push   ecx
6400e025:	push   ebx
6400e026:	push   esi
6400e027:	mov    eax,ds:0x6402f09c
6400e02c:	xor    eax,esp
6400e02e:	push   eax
6400e02f:	lea    eax,[esp+0x10]
6400e033:	mov    fs:0x0,eax
6400e039:	mov    ebx,0x1
6400e03e:	test   BYTE PTR ds:0x6403345c,bl
6400e044:	jne    0x6400e0ce
6400e04a:	or     DWORD PTR ds:0x6403345c,ebx
6400e050:	push   0x6402a484
6400e055:	push   0xb
6400e057:	push   0x6402a4c4
6400e05c:	mov    DWORD PTR [esp+0x24],0x0
6400e064:	call   0x64006690
6400e069:	push   0x6402a4d0
6400e06e:	push   0x8
6400e070:	push   0x6402a31c
6400e075:	mov    esi,eax
6400e077:	call   0x64006950
6400e07c:	add    esp,0x18
6400e07f:	push   eax
6400e080:	call   DWORD PTR ds:0x64026018
6400e086:	add    DWORD PTR ds:0x64033270,ebx
6400e08c:	test   eax,eax
6400e08e:	je     0x6400e0b5
6400e090:	push   esi
6400e091:	push   eax
6400e092:	call   DWORD PTR ds:0x64026014
6400e098:	add    DWORD PTR ds:0x64033274,ebx
6400e09e:	mov    ds:0x64033458,eax
6400e0a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0a7:	mov    DWORD PTR fs:0x0,ecx
6400e0ae:	pop    ecx
6400e0af:	pop    esi
6400e0b0:	pop    ebx
6400e0b1:	mov    esp,ebp
6400e0b3:	pop    ebp
6400e0b4:	ret    
6400e0b5:	xor    eax,eax
6400e0b7:	mov    ds:0x64033458,eax
6400e0bc:	mov    ecx,DWORD PTR [esp+0x10]
6400e0c0:	mov    DWORD PTR fs:0x0,ecx
6400e0c7:	pop    ecx
6400e0c8:	pop    esi
6400e0c9:	pop    ebx
6400e0ca:	mov    esp,ebp
6400e0cc:	pop    ebp
6400e0cd:	ret    
6400e0ce:	mov    eax,ds:0x64033458
6400e0d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e0d7:	mov    DWORD PTR fs:0x0,ecx
6400e0de:	pop    ecx
6400e0df:	pop    esi
6400e0e0:	pop    ebx
6400e0e1:	mov    esp,ebp
6400e0e3:	pop    ebp
6400e0e4:	ret    
6400e0e5:	int3   
6400e0e6:	int3   
6400e0e7:	int3   
6400e0e8:	int3   
6400e0e9:	int3   
6400e0ea:	int3   
6400e0eb:	int3   
6400e0ec:	int3   
6400e0ed:	int3   
6400e0ee:	int3   
6400e0ef:	int3   
6400e0f0:	push   ebp
6400e0f1:	mov    ebp,esp
6400e0f3:	and    esp,0xfffffff8
6400e0f6:	push   0xffffffff
6400e0f8:	push   0x640245ce
6400e0fd:	mov    eax,fs:0x0
6400e103:	push   eax
6400e104:	push   ecx
6400e105:	push   ebx
6400e106:	push   esi
6400e107:	mov    eax,ds:0x6402f09c
6400e10c:	xor    eax,esp
6400e10e:	push   eax
6400e10f:	lea    eax,[esp+0x10]
6400e113:	mov    fs:0x0,eax
6400e119:	mov    ebx,0x1
6400e11e:	test   BYTE PTR ds:0x64033454,bl
6400e124:	jne    0x6400e1ae
6400e12a:	or     DWORD PTR ds:0x64033454,ebx
6400e130:	push   0x6402a510
6400e135:	push   0xc
6400e137:	push   0x6402a53c
6400e13c:	mov    DWORD PTR [esp+0x24],0x0
6400e144:	call   0x64006690
6400e149:	push   0x6402a54c
6400e14e:	push   0x8
6400e150:	push   0x6402a31c
6400e155:	mov    esi,eax
6400e157:	call   0x64006950
6400e15c:	add    esp,0x18
6400e15f:	push   eax
6400e160:	call   DWORD PTR ds:0x64026018
6400e166:	add    DWORD PTR ds:0x64033270,ebx
6400e16c:	test   eax,eax
6400e16e:	je     0x6400e195
6400e170:	push   esi
6400e171:	push   eax
6400e172:	call   DWORD PTR ds:0x64026014
6400e178:	add    DWORD PTR ds:0x64033274,ebx
6400e17e:	mov    ds:0x64033450,eax
6400e183:	mov    ecx,DWORD PTR [esp+0x10]
6400e187:	mov    DWORD PTR fs:0x0,ecx
6400e18e:	pop    ecx
6400e18f:	pop    esi
6400e190:	pop    ebx
6400e191:	mov    esp,ebp
6400e193:	pop    ebp
6400e194:	ret    
6400e195:	xor    eax,eax
6400e197:	mov    ds:0x64033450,eax
6400e19c:	mov    ecx,DWORD PTR [esp+0x10]
6400e1a0:	mov    DWORD PTR fs:0x0,ecx
6400e1a7:	pop    ecx
6400e1a8:	pop    esi
6400e1a9:	pop    ebx
6400e1aa:	mov    esp,ebp
6400e1ac:	pop    ebp
6400e1ad:	ret    
6400e1ae:	mov    eax,ds:0x64033450
6400e1b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e1b7:	mov    DWORD PTR fs:0x0,ecx
6400e1be:	pop    ecx
6400e1bf:	pop    esi
6400e1c0:	pop    ebx
6400e1c1:	mov    esp,ebp
6400e1c3:	pop    ebp
6400e1c4:	ret    
6400e1c5:	int3   
6400e1c6:	int3   
6400e1c7:	int3   
6400e1c8:	int3   
6400e1c9:	int3   
6400e1ca:	int3   
6400e1cb:	int3   
6400e1cc:	int3   
6400e1cd:	int3   
6400e1ce:	int3   
6400e1cf:	int3   
6400e1d0:	push   ebp
6400e1d1:	mov    ebp,esp
6400e1d3:	and    esp,0xfffffff8
6400e1d6:	push   0xffffffff
6400e1d8:	push   0x6402459e
6400e1dd:	mov    eax,fs:0x0
6400e1e3:	push   eax
6400e1e4:	push   ecx
6400e1e5:	push   ebx
6400e1e6:	push   esi
6400e1e7:	mov    eax,ds:0x6402f09c
6400e1ec:	xor    eax,esp
6400e1ee:	push   eax
6400e1ef:	lea    eax,[esp+0x10]
6400e1f3:	mov    fs:0x0,eax
6400e1f9:	mov    ebx,0x1
6400e1fe:	test   BYTE PTR ds:0x6403344c,bl
6400e204:	jne    0x6400e28e
6400e20a:	or     DWORD PTR ds:0x6403344c,ebx
6400e210:	push   0x6402a588
6400e215:	push   0x10
6400e217:	push   0x6402a5c8
6400e21c:	mov    DWORD PTR [esp+0x24],0x0
6400e224:	call   0x64006690
6400e229:	push   0x6402a5dc
6400e22e:	push   0x8
6400e230:	push   0x6402a31c
6400e235:	mov    esi,eax
6400e237:	call   0x64006950
6400e23c:	add    esp,0x18
6400e23f:	push   eax
6400e240:	call   DWORD PTR ds:0x64026018
6400e246:	add    DWORD PTR ds:0x64033270,ebx
6400e24c:	test   eax,eax
6400e24e:	je     0x6400e275
6400e250:	push   esi
6400e251:	push   eax
6400e252:	call   DWORD PTR ds:0x64026014
6400e258:	add    DWORD PTR ds:0x64033274,ebx
6400e25e:	mov    ds:0x64033448,eax
6400e263:	mov    ecx,DWORD PTR [esp+0x10]
6400e267:	mov    DWORD PTR fs:0x0,ecx
6400e26e:	pop    ecx
6400e26f:	pop    esi
6400e270:	pop    ebx
6400e271:	mov    esp,ebp
6400e273:	pop    ebp
6400e274:	ret    
6400e275:	xor    eax,eax
6400e277:	mov    ds:0x64033448,eax
6400e27c:	mov    ecx,DWORD PTR [esp+0x10]
6400e280:	mov    DWORD PTR fs:0x0,ecx
6400e287:	pop    ecx
6400e288:	pop    esi
6400e289:	pop    ebx
6400e28a:	mov    esp,ebp
6400e28c:	pop    ebp
6400e28d:	ret    
6400e28e:	mov    eax,ds:0x64033448
6400e293:	mov    ecx,DWORD PTR [esp+0x10]
6400e297:	mov    DWORD PTR fs:0x0,ecx
6400e29e:	pop    ecx
6400e29f:	pop    esi
6400e2a0:	pop    ebx
6400e2a1:	mov    esp,ebp
6400e2a3:	pop    ebp
6400e2a4:	ret    
6400e2a5:	int3   
6400e2a6:	int3   
6400e2a7:	int3   
6400e2a8:	int3   
6400e2a9:	int3   
6400e2aa:	int3   
6400e2ab:	int3   
6400e2ac:	int3   
6400e2ad:	int3   
6400e2ae:	int3   
6400e2af:	int3   
6400e2b0:	push   ebp
6400e2b1:	mov    ebp,esp
6400e2b3:	and    esp,0xfffffff8
6400e2b6:	push   0xffffffff
6400e2b8:	push   0x6402456e
6400e2bd:	mov    eax,fs:0x0
6400e2c3:	push   eax
6400e2c4:	push   ecx
6400e2c5:	push   ebx
6400e2c6:	push   esi
6400e2c7:	mov    eax,ds:0x6402f09c
6400e2cc:	xor    eax,esp
6400e2ce:	push   eax
6400e2cf:	lea    eax,[esp+0x10]
6400e2d3:	mov    fs:0x0,eax
6400e2d9:	mov    ebx,0x1
6400e2de:	test   BYTE PTR ds:0x64033444,bl
6400e2e4:	jne    0x6400e36e
6400e2ea:	or     DWORD PTR ds:0x64033444,ebx
6400e2f0:	push   0x6402a61c
6400e2f5:	push   0x10
6400e2f7:	push   0x6402a654
6400e2fc:	mov    DWORD PTR [esp+0x24],0x0
6400e304:	call   0x64006690
6400e309:	push   0x6402a668
6400e30e:	push   0x8
6400e310:	push   0x6402a31c
6400e315:	mov    esi,eax
6400e317:	call   0x64006950
6400e31c:	add    esp,0x18
6400e31f:	push   eax
6400e320:	call   DWORD PTR ds:0x64026018
6400e326:	add    DWORD PTR ds:0x64033270,ebx
6400e32c:	test   eax,eax
6400e32e:	je     0x6400e355
6400e330:	push   esi
6400e331:	push   eax
6400e332:	call   DWORD PTR ds:0x64026014
6400e338:	add    DWORD PTR ds:0x64033274,ebx
6400e33e:	mov    ds:0x64033440,eax
6400e343:	mov    ecx,DWORD PTR [esp+0x10]
6400e347:	mov    DWORD PTR fs:0x0,ecx
6400e34e:	pop    ecx
6400e34f:	pop    esi
6400e350:	pop    ebx
6400e351:	mov    esp,ebp
6400e353:	pop    ebp
6400e354:	ret    
6400e355:	xor    eax,eax
6400e357:	mov    ds:0x64033440,eax
6400e35c:	mov    ecx,DWORD PTR [esp+0x10]
6400e360:	mov    DWORD PTR fs:0x0,ecx
6400e367:	pop    ecx
6400e368:	pop    esi
6400e369:	pop    ebx
6400e36a:	mov    esp,ebp
6400e36c:	pop    ebp
6400e36d:	ret    
6400e36e:	mov    eax,ds:0x64033440
6400e373:	mov    ecx,DWORD PTR [esp+0x10]
6400e377:	mov    DWORD PTR fs:0x0,ecx
6400e37e:	pop    ecx
6400e37f:	pop    esi
6400e380:	pop    ebx
6400e381:	mov    esp,ebp
6400e383:	pop    ebp
6400e384:	ret    
6400e385:	int3   
6400e386:	int3   
6400e387:	int3   
6400e388:	int3   
6400e389:	int3   
6400e38a:	int3   
6400e38b:	int3   
6400e38c:	int3   
6400e38d:	int3   
6400e38e:	int3   
6400e38f:	int3   
6400e390:	push   ebp
6400e391:	mov    ebp,esp
6400e393:	and    esp,0xfffffff8
6400e396:	push   0xffffffff
6400e398:	push   0x6402453e
6400e39d:	mov    eax,fs:0x0
6400e3a3:	push   eax
6400e3a4:	push   ecx
6400e3a5:	push   ebx
6400e3a6:	push   esi
6400e3a7:	mov    eax,ds:0x6402f09c
6400e3ac:	xor    eax,esp
6400e3ae:	push   eax
6400e3af:	lea    eax,[esp+0x10]
6400e3b3:	mov    fs:0x0,eax
6400e3b9:	mov    ebx,0x1
6400e3be:	test   BYTE PTR ds:0x6403343c,bl
6400e3c4:	jne    0x6400e44e
6400e3ca:	or     DWORD PTR ds:0x6403343c,ebx
6400e3d0:	push   0x6402a6a4
6400e3d5:	push   0x15
6400e3d7:	push   0x6402a6dc
6400e3dc:	mov    DWORD PTR [esp+0x24],0x0
6400e3e4:	call   0x64006690
6400e3e9:	push   0x6402a6f4
6400e3ee:	push   0x8
6400e3f0:	push   0x6402a31c
6400e3f5:	mov    esi,eax
6400e3f7:	call   0x64006950
6400e3fc:	add    esp,0x18
6400e3ff:	push   eax
6400e400:	call   DWORD PTR ds:0x64026018
6400e406:	add    DWORD PTR ds:0x64033270,ebx
6400e40c:	test   eax,eax
6400e40e:	je     0x6400e435
6400e410:	push   esi
6400e411:	push   eax
6400e412:	call   DWORD PTR ds:0x64026014
6400e418:	add    DWORD PTR ds:0x64033274,ebx
6400e41e:	mov    ds:0x64033438,eax
6400e423:	mov    ecx,DWORD PTR [esp+0x10]
6400e427:	mov    DWORD PTR fs:0x0,ecx
6400e42e:	pop    ecx
6400e42f:	pop    esi
6400e430:	pop    ebx
6400e431:	mov    esp,ebp
6400e433:	pop    ebp
6400e434:	ret    
6400e435:	xor    eax,eax
6400e437:	mov    ds:0x64033438,eax
6400e43c:	mov    ecx,DWORD PTR [esp+0x10]
6400e440:	mov    DWORD PTR fs:0x0,ecx
6400e447:	pop    ecx
6400e448:	pop    esi
6400e449:	pop    ebx
6400e44a:	mov    esp,ebp
6400e44c:	pop    ebp
6400e44d:	ret    
6400e44e:	mov    eax,ds:0x64033438
6400e453:	mov    ecx,DWORD PTR [esp+0x10]
6400e457:	mov    DWORD PTR fs:0x0,ecx
6400e45e:	pop    ecx
6400e45f:	pop    esi
6400e460:	pop    ebx
6400e461:	mov    esp,ebp
6400e463:	pop    ebp
6400e464:	ret    
6400e465:	int3   
6400e466:	int3   
6400e467:	int3   
6400e468:	int3   
6400e469:	int3   
6400e46a:	int3   
6400e46b:	int3   
6400e46c:	int3   
6400e46d:	int3   
6400e46e:	int3   
6400e46f:	int3   
6400e470:	push   ebp
6400e471:	mov    ebp,esp
6400e473:	and    esp,0xfffffff8
6400e476:	push   0xffffffff
6400e478:	push   0x6402450e
6400e47d:	mov    eax,fs:0x0
6400e483:	push   eax
6400e484:	push   ecx
6400e485:	push   ebx
6400e486:	push   esi
6400e487:	mov    eax,ds:0x6402f09c
6400e48c:	xor    eax,esp
6400e48e:	push   eax
6400e48f:	lea    eax,[esp+0x10]
6400e493:	mov    fs:0x0,eax
6400e499:	mov    ebx,0x1
6400e49e:	test   BYTE PTR ds:0x64033434,bl
6400e4a4:	jne    0x6400e52e
6400e4aa:	or     DWORD PTR ds:0x64033434,ebx
6400e4b0:	push   0x6402a72c
6400e4b5:	push   0x18
6400e4b7:	push   0x6402a76c
6400e4bc:	mov    DWORD PTR [esp+0x24],0x0
6400e4c4:	call   0x64006690
6400e4c9:	push   0x6402a788
6400e4ce:	push   0x8
6400e4d0:	push   0x6402a31c
6400e4d5:	mov    esi,eax
6400e4d7:	call   0x64006950
6400e4dc:	add    esp,0x18
6400e4df:	push   eax
6400e4e0:	call   DWORD PTR ds:0x64026018
6400e4e6:	add    DWORD PTR ds:0x64033270,ebx
6400e4ec:	test   eax,eax
6400e4ee:	je     0x6400e515
6400e4f0:	push   esi
6400e4f1:	push   eax
6400e4f2:	call   DWORD PTR ds:0x64026014
6400e4f8:	add    DWORD PTR ds:0x64033274,ebx
6400e4fe:	mov    ds:0x64033430,eax
6400e503:	mov    ecx,DWORD PTR [esp+0x10]
6400e507:	mov    DWORD PTR fs:0x0,ecx
6400e50e:	pop    ecx
6400e50f:	pop    esi
6400e510:	pop    ebx
6400e511:	mov    esp,ebp
6400e513:	pop    ebp
6400e514:	ret    
6400e515:	xor    eax,eax
6400e517:	mov    ds:0x64033430,eax
6400e51c:	mov    ecx,DWORD PTR [esp+0x10]
6400e520:	mov    DWORD PTR fs:0x0,ecx
6400e527:	pop    ecx
6400e528:	pop    esi
6400e529:	pop    ebx
6400e52a:	mov    esp,ebp
6400e52c:	pop    ebp
6400e52d:	ret    
6400e52e:	mov    eax,ds:0x64033430
6400e533:	mov    ecx,DWORD PTR [esp+0x10]
6400e537:	mov    DWORD PTR fs:0x0,ecx
6400e53e:	pop    ecx
6400e53f:	pop    esi
6400e540:	pop    ebx
6400e541:	mov    esp,ebp
6400e543:	pop    ebp
6400e544:	ret    
6400e545:	int3   
6400e546:	int3   
6400e547:	int3   
6400e548:	int3   
6400e549:	int3   
6400e54a:	int3   
6400e54b:	int3   
6400e54c:	int3   
6400e54d:	int3   
6400e54e:	int3   
6400e54f:	int3   
6400e550:	push   ebp
6400e551:	mov    ebp,esp
6400e553:	and    esp,0xfffffff8
6400e556:	push   0xffffffff
6400e558:	push   0x640244de
6400e55d:	mov    eax,fs:0x0
6400e563:	push   eax
6400e564:	push   ecx
6400e565:	push   ebx
6400e566:	push   esi
6400e567:	mov    eax,ds:0x6402f09c
6400e56c:	xor    eax,esp
6400e56e:	push   eax
6400e56f:	lea    eax,[esp+0x10]
6400e573:	mov    fs:0x0,eax
6400e579:	mov    ebx,0x1
6400e57e:	test   BYTE PTR ds:0x6403342c,bl
6400e584:	jne    0x6400e60e
6400e58a:	or     DWORD PTR ds:0x6403342c,ebx
6400e590:	push   0x6402a7b8
6400e595:	push   0xf
6400e597:	push   0x6402a7dc
6400e59c:	mov    DWORD PTR [esp+0x24],0x0
6400e5a4:	call   0x64006690
6400e5a9:	push   0x6402a7ec
6400e5ae:	push   0x8
6400e5b0:	push   0x6402a31c
6400e5b5:	mov    esi,eax
6400e5b7:	call   0x64006950
6400e5bc:	add    esp,0x18
6400e5bf:	push   eax
6400e5c0:	call   DWORD PTR ds:0x64026018
6400e5c6:	add    DWORD PTR ds:0x64033270,ebx
6400e5cc:	test   eax,eax
6400e5ce:	je     0x6400e5f5
6400e5d0:	push   esi
6400e5d1:	push   eax
6400e5d2:	call   DWORD PTR ds:0x64026014
6400e5d8:	add    DWORD PTR ds:0x64033274,ebx
6400e5de:	mov    ds:0x64033428,eax
6400e5e3:	mov    ecx,DWORD PTR [esp+0x10]
6400e5e7:	mov    DWORD PTR fs:0x0,ecx
6400e5ee:	pop    ecx
6400e5ef:	pop    esi
6400e5f0:	pop    ebx
6400e5f1:	mov    esp,ebp
6400e5f3:	pop    ebp
6400e5f4:	ret    
6400e5f5:	xor    eax,eax
6400e5f7:	mov    ds:0x64033428,eax
6400e5fc:	mov    ecx,DWORD PTR [esp+0x10]
6400e600:	mov    DWORD PTR fs:0x0,ecx
6400e607:	pop    ecx
6400e608:	pop    esi
6400e609:	pop    ebx
6400e60a:	mov    esp,ebp
6400e60c:	pop    ebp
6400e60d:	ret    
6400e60e:	mov    eax,ds:0x64033428
6400e613:	mov    ecx,DWORD PTR [esp+0x10]
6400e617:	mov    DWORD PTR fs:0x0,ecx
6400e61e:	pop    ecx
6400e61f:	pop    esi
6400e620:	pop    ebx
6400e621:	mov    esp,ebp
6400e623:	pop    ebp
6400e624:	ret    
6400e625:	int3   
6400e626:	int3   
6400e627:	int3   
6400e628:	int3   
6400e629:	int3   
6400e62a:	int3   
6400e62b:	int3   
6400e62c:	int3   
6400e62d:	int3   
6400e62e:	int3   
6400e62f:	int3   
6400e630:	push   ebp
6400e631:	mov    ebp,esp
6400e633:	and    esp,0xfffffff8
6400e636:	push   0xffffffff
6400e638:	push   0x640244ae
6400e63d:	mov    eax,fs:0x0
6400e643:	push   eax
6400e644:	push   ecx
6400e645:	push   ebx
6400e646:	push   esi
6400e647:	mov    eax,ds:0x6402f09c
6400e64c:	xor    eax,esp
6400e64e:	push   eax
6400e64f:	lea    eax,[esp+0x10]
6400e653:	mov    fs:0x0,eax
6400e659:	mov    ebx,0x1
6400e65e:	test   BYTE PTR ds:0x64033424,bl
6400e664:	jne    0x6400e6ee
6400e66a:	or     DWORD PTR ds:0x64033424,ebx
6400e670:	push   0x6402a824
6400e675:	push   0x14
6400e677:	push   0x6402a848
6400e67c:	mov    DWORD PTR [esp+0x24],0x0
6400e684:	call   0x64006690
6400e689:	push   0x6402a860
6400e68e:	push   0x8
6400e690:	push   0x6402a31c
6400e695:	mov    esi,eax
6400e697:	call   0x64006950
6400e69c:	add    esp,0x18
6400e69f:	push   eax
6400e6a0:	call   DWORD PTR ds:0x64026018
6400e6a6:	add    DWORD PTR ds:0x64033270,ebx
6400e6ac:	test   eax,eax
6400e6ae:	je     0x6400e6d5
6400e6b0:	push   esi
6400e6b1:	push   eax
6400e6b2:	call   DWORD PTR ds:0x64026014
6400e6b8:	add    DWORD PTR ds:0x64033274,ebx
6400e6be:	mov    ds:0x64033420,eax
6400e6c3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6c7:	mov    DWORD PTR fs:0x0,ecx
6400e6ce:	pop    ecx
6400e6cf:	pop    esi
6400e6d0:	pop    ebx
6400e6d1:	mov    esp,ebp
6400e6d3:	pop    ebp
6400e6d4:	ret    
6400e6d5:	xor    eax,eax
6400e6d7:	mov    ds:0x64033420,eax
6400e6dc:	mov    ecx,DWORD PTR [esp+0x10]
6400e6e0:	mov    DWORD PTR fs:0x0,ecx
6400e6e7:	pop    ecx
6400e6e8:	pop    esi
6400e6e9:	pop    ebx
6400e6ea:	mov    esp,ebp
6400e6ec:	pop    ebp
6400e6ed:	ret    
6400e6ee:	mov    eax,ds:0x64033420
6400e6f3:	mov    ecx,DWORD PTR [esp+0x10]
6400e6f7:	mov    DWORD PTR fs:0x0,ecx
6400e6fe:	pop    ecx
6400e6ff:	pop    esi
6400e700:	pop    ebx
6400e701:	mov    esp,ebp
6400e703:	pop    ebp
6400e704:	ret    
6400e705:	int3   
6400e706:	int3   
6400e707:	int3   
6400e708:	int3   
6400e709:	int3   
6400e70a:	int3   
6400e70b:	int3   
6400e70c:	int3   
6400e70d:	int3   
6400e70e:	int3   
6400e70f:	int3   
6400e710:	push   ebp
6400e711:	mov    ebp,esp
6400e713:	and    esp,0xfffffff8
6400e716:	push   0xffffffff
6400e718:	push   0x6402447e
6400e71d:	mov    eax,fs:0x0
6400e723:	push   eax
6400e724:	push   ecx
6400e725:	push   ebx
6400e726:	push   esi
6400e727:	mov    eax,ds:0x6402f09c
6400e72c:	xor    eax,esp
6400e72e:	push   eax
6400e72f:	lea    eax,[esp+0x10]
6400e733:	mov    fs:0x0,eax
6400e739:	mov    ebx,0x1
6400e73e:	test   BYTE PTR ds:0x6403341c,bl
6400e744:	jne    0x6400e7ce
6400e74a:	or     DWORD PTR ds:0x6403341c,ebx
6400e750:	push   0x6402a894
6400e755:	push   0x14
6400e757:	push   0x6402a8bc
6400e75c:	mov    DWORD PTR [esp+0x24],0x0
6400e764:	call   0x64006690
6400e769:	push   0x6402a8d4
6400e76e:	push   0x8
6400e770:	push   0x6402a31c
6400e775:	mov    esi,eax
6400e777:	call   0x64006950
6400e77c:	add    esp,0x18
6400e77f:	push   eax
6400e780:	call   DWORD PTR ds:0x64026018
6400e786:	add    DWORD PTR ds:0x64033270,ebx
6400e78c:	test   eax,eax
6400e78e:	je     0x6400e7b5
6400e790:	push   esi
6400e791:	push   eax
6400e792:	call   DWORD PTR ds:0x64026014
6400e798:	add    DWORD PTR ds:0x64033274,ebx
6400e79e:	mov    ds:0x64033418,eax
6400e7a3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7a7:	mov    DWORD PTR fs:0x0,ecx
6400e7ae:	pop    ecx
6400e7af:	pop    esi
6400e7b0:	pop    ebx
6400e7b1:	mov    esp,ebp
6400e7b3:	pop    ebp
6400e7b4:	ret    
6400e7b5:	xor    eax,eax
6400e7b7:	mov    ds:0x64033418,eax
6400e7bc:	mov    ecx,DWORD PTR [esp+0x10]
6400e7c0:	mov    DWORD PTR fs:0x0,ecx
6400e7c7:	pop    ecx
6400e7c8:	pop    esi
6400e7c9:	pop    ebx
6400e7ca:	mov    esp,ebp
6400e7cc:	pop    ebp
6400e7cd:	ret    
6400e7ce:	mov    eax,ds:0x64033418
6400e7d3:	mov    ecx,DWORD PTR [esp+0x10]
6400e7d7:	mov    DWORD PTR fs:0x0,ecx
6400e7de:	pop    ecx
6400e7df:	pop    esi
6400e7e0:	pop    ebx
6400e7e1:	mov    esp,ebp
6400e7e3:	pop    ebp
6400e7e4:	ret    
6400e7e5:	int3   
6400e7e6:	int3   
6400e7e7:	int3   
6400e7e8:	int3   
6400e7e9:	int3   
6400e7ea:	int3   
6400e7eb:	int3   
6400e7ec:	int3   
6400e7ed:	int3   
6400e7ee:	int3   
6400e7ef:	int3   
6400e7f0:	push   ebp
6400e7f1:	mov    ebp,esp
6400e7f3:	and    esp,0xfffffff8
6400e7f6:	push   0xffffffff
6400e7f8:	push   0x6402444e
6400e7fd:	mov    eax,fs:0x0
6400e803:	push   eax
6400e804:	push   ecx
6400e805:	push   ebx
6400e806:	push   esi
6400e807:	mov    eax,ds:0x6402f09c
6400e80c:	xor    eax,esp
6400e80e:	push   eax
6400e80f:	lea    eax,[esp+0x10]
6400e813:	mov    fs:0x0,eax
6400e819:	mov    ebx,0x1
6400e81e:	test   BYTE PTR ds:0x64033414,bl
6400e824:	jne    0x6400e8ae
6400e82a:	or     DWORD PTR ds:0x64033414,ebx
6400e830:	push   0x6402a904
6400e835:	push   0xf
6400e837:	push   0x6402a93c
6400e83c:	mov    DWORD PTR [esp+0x24],0x0
6400e844:	call   0x64006690
6400e849:	push   0x6402a94c
6400e84e:	push   0x8
6400e850:	push   0x6402a31c
6400e855:	mov    esi,eax
6400e857:	call   0x64006950
6400e85c:	add    esp,0x18
6400e85f:	push   eax
6400e860:	call   DWORD PTR ds:0x64026018
6400e866:	add    DWORD PTR ds:0x64033270,ebx
6400e86c:	test   eax,eax
6400e86e:	je     0x6400e895
6400e870:	push   esi
6400e871:	push   eax
6400e872:	call   DWORD PTR ds:0x64026014
6400e878:	add    DWORD PTR ds:0x64033274,ebx
6400e87e:	mov    ds:0x64033410,eax
6400e883:	mov    ecx,DWORD PTR [esp+0x10]
6400e887:	mov    DWORD PTR fs:0x0,ecx
6400e88e:	pop    ecx
6400e88f:	pop    esi
6400e890:	pop    ebx
6400e891:	mov    esp,ebp
6400e893:	pop    ebp
6400e894:	ret    
6400e895:	xor    eax,eax
6400e897:	mov    ds:0x64033410,eax
6400e89c:	mov    ecx,DWORD PTR [esp+0x10]
6400e8a0:	mov    DWORD PTR fs:0x0,ecx
6400e8a7:	pop    ecx
6400e8a8:	pop    esi
6400e8a9:	pop    ebx
6400e8aa:	mov    esp,ebp
6400e8ac:	pop    ebp
6400e8ad:	ret    
6400e8ae:	mov    eax,ds:0x64033410
6400e8b3:	mov    ecx,DWORD PTR [esp+0x10]
6400e8b7:	mov    DWORD PTR fs:0x0,ecx
6400e8be:	pop    ecx
6400e8bf:	pop    esi
6400e8c0:	pop    ebx
6400e8c1:	mov    esp,ebp
6400e8c3:	pop    ebp
6400e8c4:	ret    
6400e8c5:	int3   
6400e8c6:	int3   
6400e8c7:	int3   
6400e8c8:	int3   
6400e8c9:	int3   
6400e8ca:	int3   
6400e8cb:	int3   
6400e8cc:	int3   
6400e8cd:	int3   
6400e8ce:	int3   
6400e8cf:	int3   
6400e8d0:	push   ebp
6400e8d1:	mov    ebp,esp
6400e8d3:	and    esp,0xfffffff8
6400e8d6:	push   0xffffffff
6400e8d8:	push   0x6402441e
6400e8dd:	mov    eax,fs:0x0
6400e8e3:	push   eax
6400e8e4:	push   ecx
6400e8e5:	push   ebx
6400e8e6:	push   esi
6400e8e7:	mov    eax,ds:0x6402f09c
6400e8ec:	xor    eax,esp
6400e8ee:	push   eax
6400e8ef:	lea    eax,[esp+0x10]
6400e8f3:	mov    fs:0x0,eax
6400e8f9:	mov    ebx,0x1
6400e8fe:	test   BYTE PTR ds:0x6403340c,bl
6400e904:	jne    0x6400e98e
6400e90a:	or     DWORD PTR ds:0x6403340c,ebx
6400e910:	push   0x6402a970
6400e915:	push   0x12
6400e917:	push   0x6402a99c
6400e91c:	mov    DWORD PTR [esp+0x24],0x0
6400e924:	call   0x64006690
6400e929:	push   0x6402a9b0
6400e92e:	push   0x8
6400e930:	push   0x6402a31c
6400e935:	mov    esi,eax
6400e937:	call   0x64006950
6400e93c:	add    esp,0x18
6400e93f:	push   eax
6400e940:	call   DWORD PTR ds:0x64026018
6400e946:	add    DWORD PTR ds:0x64033270,ebx
6400e94c:	test   eax,eax
6400e94e:	je     0x6400e975
6400e950:	push   esi
6400e951:	push   eax
6400e952:	call   DWORD PTR ds:0x64026014
6400e958:	add    DWORD PTR ds:0x64033274,ebx
6400e95e:	mov    ds:0x64033408,eax
6400e963:	mov    ecx,DWORD PTR [esp+0x10]
6400e967:	mov    DWORD PTR fs:0x0,ecx
6400e96e:	pop    ecx
6400e96f:	pop    esi
6400e970:	pop    ebx
6400e971:	mov    esp,ebp
6400e973:	pop    ebp
6400e974:	ret    
6400e975:	xor    eax,eax
6400e977:	mov    ds:0x64033408,eax
6400e97c:	mov    ecx,DWORD PTR [esp+0x10]
6400e980:	mov    DWORD PTR fs:0x0,ecx
6400e987:	pop    ecx
6400e988:	pop    esi
6400e989:	pop    ebx
6400e98a:	mov    esp,ebp
6400e98c:	pop    ebp
6400e98d:	ret    
6400e98e:	mov    eax,ds:0x64033408
6400e993:	mov    ecx,DWORD PTR [esp+0x10]
6400e997:	mov    DWORD PTR fs:0x0,ecx
6400e99e:	pop    ecx
6400e99f:	pop    esi
6400e9a0:	pop    ebx
6400e9a1:	mov    esp,ebp
6400e9a3:	pop    ebp
6400e9a4:	ret    
6400e9a5:	int3   
6400e9a6:	int3   
6400e9a7:	int3   
6400e9a8:	int3   
6400e9a9:	int3   
6400e9aa:	int3   
6400e9ab:	int3   
6400e9ac:	int3   
6400e9ad:	int3   
6400e9ae:	int3   
6400e9af:	int3   
6400e9b0:	push   ebp
6400e9b1:	mov    ebp,esp
6400e9b3:	and    esp,0xfffffff8
6400e9b6:	push   0xffffffff
6400e9b8:	push   0x640243ee
6400e9bd:	mov    eax,fs:0x0
6400e9c3:	push   eax
6400e9c4:	push   ecx
6400e9c5:	push   ebx
6400e9c6:	push   esi
6400e9c7:	mov    eax,ds:0x6402f09c
6400e9cc:	xor    eax,esp
6400e9ce:	push   eax
6400e9cf:	lea    eax,[esp+0x10]
6400e9d3:	mov    fs:0x0,eax
6400e9d9:	mov    ebx,0x1
6400e9de:	test   BYTE PTR ds:0x64033404,bl
6400e9e4:	jne    0x6400ea6e
6400e9ea:	or     DWORD PTR ds:0x64033404,ebx
6400e9f0:	push   0x6402a9e0
6400e9f5:	push   0x11
6400e9f7:	push   0x6402aa08
6400e9fc:	mov    DWORD PTR [esp+0x24],0x0
6400ea04:	call   0x64006690
6400ea09:	push   0x6402aa1c
6400ea0e:	push   0x8
6400ea10:	push   0x6402a31c
6400ea15:	mov    esi,eax
6400ea17:	call   0x64006950
6400ea1c:	add    esp,0x18
6400ea1f:	push   eax
6400ea20:	call   DWORD PTR ds:0x64026018
6400ea26:	add    DWORD PTR ds:0x64033270,ebx
6400ea2c:	test   eax,eax
6400ea2e:	je     0x6400ea55
6400ea30:	push   esi
6400ea31:	push   eax
6400ea32:	call   DWORD PTR ds:0x64026014
6400ea38:	add    DWORD PTR ds:0x64033274,ebx
6400ea3e:	mov    ds:0x64033400,eax
6400ea43:	mov    ecx,DWORD PTR [esp+0x10]
6400ea47:	mov    DWORD PTR fs:0x0,ecx
6400ea4e:	pop    ecx
6400ea4f:	pop    esi
6400ea50:	pop    ebx
6400ea51:	mov    esp,ebp
6400ea53:	pop    ebp
6400ea54:	ret    
6400ea55:	xor    eax,eax
6400ea57:	mov    ds:0x64033400,eax
6400ea5c:	mov    ecx,DWORD PTR [esp+0x10]
6400ea60:	mov    DWORD PTR fs:0x0,ecx
6400ea67:	pop    ecx
6400ea68:	pop    esi
6400ea69:	pop    ebx
6400ea6a:	mov    esp,ebp
6400ea6c:	pop    ebp
6400ea6d:	ret    
6400ea6e:	mov    eax,ds:0x64033400
6400ea73:	mov    ecx,DWORD PTR [esp+0x10]
6400ea77:	mov    DWORD PTR fs:0x0,ecx
6400ea7e:	pop    ecx
6400ea7f:	pop    esi
6400ea80:	pop    ebx
6400ea81:	mov    esp,ebp
6400ea83:	pop    ebp
6400ea84:	ret    
6400ea85:	int3   
6400ea86:	int3   
6400ea87:	int3   
6400ea88:	int3   
6400ea89:	int3   
6400ea8a:	int3   
6400ea8b:	int3   
6400ea8c:	int3   
6400ea8d:	int3   
6400ea8e:	int3   
6400ea8f:	int3   
6400ea90:	push   ebp
6400ea91:	mov    ebp,esp
6400ea93:	and    esp,0xfffffff8
6400ea96:	push   0xffffffff
6400ea98:	push   0x640243be
6400ea9d:	mov    eax,fs:0x0
6400eaa3:	push   eax
6400eaa4:	push   ecx
6400eaa5:	push   ebx
6400eaa6:	push   esi
6400eaa7:	mov    eax,ds:0x6402f09c
6400eaac:	xor    eax,esp
6400eaae:	push   eax
6400eaaf:	lea    eax,[esp+0x10]
6400eab3:	mov    fs:0x0,eax
6400eab9:	mov    ebx,0x1
6400eabe:	test   BYTE PTR ds:0x640333fc,bl
6400eac4:	jne    0x6400eb4e
6400eaca:	or     DWORD PTR ds:0x640333fc,ebx
6400ead0:	push   0x6402aa4c
6400ead5:	push   0x17
6400ead7:	push   0x6402aa84
6400eadc:	mov    DWORD PTR [esp+0x24],0x0
6400eae4:	call   0x64006690
6400eae9:	push   0x6402aa9c
6400eaee:	push   0x8
6400eaf0:	push   0x6402aac0
6400eaf5:	mov    esi,eax
6400eaf7:	call   0x64006950
6400eafc:	add    esp,0x18
6400eaff:	push   eax
6400eb00:	call   DWORD PTR ds:0x64026018
6400eb06:	add    DWORD PTR ds:0x64033270,ebx
6400eb0c:	test   eax,eax
6400eb0e:	je     0x6400eb35
6400eb10:	push   esi
6400eb11:	push   eax
6400eb12:	call   DWORD PTR ds:0x64026014
6400eb18:	add    DWORD PTR ds:0x64033274,ebx
6400eb1e:	mov    ds:0x640333f8,eax
6400eb23:	mov    ecx,DWORD PTR [esp+0x10]
6400eb27:	mov    DWORD PTR fs:0x0,ecx
6400eb2e:	pop    ecx
6400eb2f:	pop    esi
6400eb30:	pop    ebx
6400eb31:	mov    esp,ebp
6400eb33:	pop    ebp
6400eb34:	ret    
6400eb35:	xor    eax,eax
6400eb37:	mov    ds:0x640333f8,eax
6400eb3c:	mov    ecx,DWORD PTR [esp+0x10]
6400eb40:	mov    DWORD PTR fs:0x0,ecx
6400eb47:	pop    ecx
6400eb48:	pop    esi
6400eb49:	pop    ebx
6400eb4a:	mov    esp,ebp
6400eb4c:	pop    ebp
6400eb4d:	ret    
6400eb4e:	mov    eax,ds:0x640333f8
6400eb53:	mov    ecx,DWORD PTR [esp+0x10]
6400eb57:	mov    DWORD PTR fs:0x0,ecx
6400eb5e:	pop    ecx
6400eb5f:	pop    esi
6400eb60:	pop    ebx
6400eb61:	mov    esp,ebp
6400eb63:	pop    ebp
6400eb64:	ret    
6400eb65:	int3   
6400eb66:	int3   
6400eb67:	int3   
6400eb68:	int3   
6400eb69:	int3   
6400eb6a:	int3   
6400eb6b:	int3   
6400eb6c:	int3   
6400eb6d:	int3   
6400eb6e:	int3   
6400eb6f:	int3   
6400eb70:	push   ebp
6400eb71:	mov    ebp,esp
6400eb73:	and    esp,0xfffffff8
6400eb76:	push   0xffffffff
6400eb78:	push   0x6402438e
6400eb7d:	mov    eax,fs:0x0
6400eb83:	push   eax
6400eb84:	push   ecx
6400eb85:	push   ebx
6400eb86:	push   esi
6400eb87:	mov    eax,ds:0x6402f09c
6400eb8c:	xor    eax,esp
6400eb8e:	push   eax
6400eb8f:	lea    eax,[esp+0x10]
6400eb93:	mov    fs:0x0,eax
6400eb99:	mov    ebx,0x1
6400eb9e:	test   BYTE PTR ds:0x640333f4,bl
6400eba4:	jne    0x6400ec2e
6400ebaa:	or     DWORD PTR ds:0x640333f4,ebx
6400ebb0:	push   0x6402aad4
6400ebb5:	push   0x19
6400ebb7:	push   0x6402ab10
6400ebbc:	mov    DWORD PTR [esp+0x24],0x0
6400ebc4:	call   0x64006690
6400ebc9:	push   0x6402ab2c
6400ebce:	push   0x7
6400ebd0:	push   0x6402ab50
6400ebd5:	mov    esi,eax
6400ebd7:	call   0x64006950
6400ebdc:	add    esp,0x18
6400ebdf:	push   eax
6400ebe0:	call   DWORD PTR ds:0x64026018
6400ebe6:	add    DWORD PTR ds:0x64033270,ebx
6400ebec:	test   eax,eax
6400ebee:	je     0x6400ec15
6400ebf0:	push   esi
6400ebf1:	push   eax
6400ebf2:	call   DWORD PTR ds:0x64026014
6400ebf8:	add    DWORD PTR ds:0x64033274,ebx
6400ebfe:	mov    ds:0x640333f0,eax
6400ec03:	mov    ecx,DWORD PTR [esp+0x10]
6400ec07:	mov    DWORD PTR fs:0x0,ecx
6400ec0e:	pop    ecx
6400ec0f:	pop    esi
6400ec10:	pop    ebx
6400ec11:	mov    esp,ebp
6400ec13:	pop    ebp
6400ec14:	ret    
6400ec15:	xor    eax,eax
6400ec17:	mov    ds:0x640333f0,eax
6400ec1c:	mov    ecx,DWORD PTR [esp+0x10]
6400ec20:	mov    DWORD PTR fs:0x0,ecx
6400ec27:	pop    ecx
6400ec28:	pop    esi
6400ec29:	pop    ebx
6400ec2a:	mov    esp,ebp
6400ec2c:	pop    ebp
6400ec2d:	ret    
6400ec2e:	mov    eax,ds:0x640333f0
6400ec33:	mov    ecx,DWORD PTR [esp+0x10]
6400ec37:	mov    DWORD PTR fs:0x0,ecx
6400ec3e:	pop    ecx
6400ec3f:	pop    esi
6400ec40:	pop    ebx
6400ec41:	mov    esp,ebp
6400ec43:	pop    ebp
6400ec44:	ret    
6400ec45:	int3   
6400ec46:	int3   
6400ec47:	int3   
6400ec48:	int3   
6400ec49:	int3   
6400ec4a:	int3   
6400ec4b:	int3   
6400ec4c:	int3   
6400ec4d:	int3   
6400ec4e:	int3   
6400ec4f:	int3   
6400ec50:	push   ebp
6400ec51:	mov    ebp,esp
6400ec53:	and    esp,0xfffffff8
6400ec56:	push   0xffffffff
6400ec58:	push   0x6402435e
6400ec5d:	mov    eax,fs:0x0
6400ec63:	push   eax
6400ec64:	push   ecx
6400ec65:	push   ebx
6400ec66:	push   esi
6400ec67:	mov    eax,ds:0x6402f09c
6400ec6c:	xor    eax,esp
6400ec6e:	push   eax
6400ec6f:	lea    eax,[esp+0x10]
6400ec73:	mov    fs:0x0,eax
6400ec79:	mov    ebx,0x1
6400ec7e:	test   BYTE PTR ds:0x640333ec,bl
6400ec84:	jne    0x6400ed0e
6400ec8a:	or     DWORD PTR ds:0x640333ec,ebx
6400ec90:	push   0x6402ab60
6400ec95:	push   0x1d
6400ec97:	push   0x6402ab90
6400ec9c:	mov    DWORD PTR [esp+0x24],0x0
6400eca4:	call   0x64006690
6400eca9:	push   0x6402abb0
6400ecae:	push   0x8
6400ecb0:	push   0x6402abdc
6400ecb5:	mov    esi,eax
6400ecb7:	call   0x64006950
6400ecbc:	add    esp,0x18
6400ecbf:	push   eax
6400ecc0:	call   DWORD PTR ds:0x64026018
6400ecc6:	add    DWORD PTR ds:0x64033270,ebx
6400eccc:	test   eax,eax
6400ecce:	je     0x6400ecf5
6400ecd0:	push   esi
6400ecd1:	push   eax
6400ecd2:	call   DWORD PTR ds:0x64026014
6400ecd8:	add    DWORD PTR ds:0x64033274,ebx
6400ecde:	mov    ds:0x640333e8,eax
6400ece3:	mov    ecx,DWORD PTR [esp+0x10]
6400ece7:	mov    DWORD PTR fs:0x0,ecx
6400ecee:	pop    ecx
6400ecef:	pop    esi
6400ecf0:	pop    ebx
6400ecf1:	mov    esp,ebp
6400ecf3:	pop    ebp
6400ecf4:	ret    
6400ecf5:	xor    eax,eax
6400ecf7:	mov    ds:0x640333e8,eax
6400ecfc:	mov    ecx,DWORD PTR [esp+0x10]
6400ed00:	mov    DWORD PTR fs:0x0,ecx
6400ed07:	pop    ecx
6400ed08:	pop    esi
6400ed09:	pop    ebx
6400ed0a:	mov    esp,ebp
6400ed0c:	pop    ebp
6400ed0d:	ret    
6400ed0e:	mov    eax,ds:0x640333e8
6400ed13:	mov    ecx,DWORD PTR [esp+0x10]
6400ed17:	mov    DWORD PTR fs:0x0,ecx
6400ed1e:	pop    ecx
6400ed1f:	pop    esi
6400ed20:	pop    ebx
6400ed21:	mov    esp,ebp
6400ed23:	pop    ebp
6400ed24:	ret    
6400ed25:	int3   
6400ed26:	int3   
6400ed27:	int3   
6400ed28:	int3   
6400ed29:	int3   
6400ed2a:	int3   
6400ed2b:	int3   
6400ed2c:	int3   
6400ed2d:	int3   
6400ed2e:	int3   
6400ed2f:	int3   
6400ed30:	push   ebp
6400ed31:	mov    ebp,esp
6400ed33:	and    esp,0xfffffff8
6400ed36:	push   0xffffffff
6400ed38:	push   0x6402432e
6400ed3d:	mov    eax,fs:0x0
6400ed43:	push   eax
6400ed44:	push   ecx
6400ed45:	push   ebx
6400ed46:	push   esi
6400ed47:	mov    eax,ds:0x6402f09c
6400ed4c:	xor    eax,esp
6400ed4e:	push   eax
6400ed4f:	lea    eax,[esp+0x10]
6400ed53:	mov    fs:0x0,eax
6400ed59:	mov    ebx,0x1
6400ed5e:	test   BYTE PTR ds:0x640333e4,bl
6400ed64:	jne    0x6400edee
6400ed6a:	or     DWORD PTR ds:0x640333e4,ebx
6400ed70:	push   0x6402abf0
6400ed75:	push   0x15
6400ed77:	push   0x6402ac24
6400ed7c:	mov    DWORD PTR [esp+0x24],0x0
6400ed84:	call   0x64006690
6400ed89:	push   0x6402ac3c
6400ed8e:	push   0x8
6400ed90:	push   0x6402abdc
6400ed95:	mov    esi,eax
6400ed97:	call   0x64006950
6400ed9c:	add    esp,0x18
6400ed9f:	push   eax
6400eda0:	call   DWORD PTR ds:0x64026018
6400eda6:	add    DWORD PTR ds:0x64033270,ebx
6400edac:	test   eax,eax
6400edae:	je     0x6400edd5
6400edb0:	push   esi
6400edb1:	push   eax
6400edb2:	call   DWORD PTR ds:0x64026014
6400edb8:	add    DWORD PTR ds:0x64033274,ebx
6400edbe:	mov    ds:0x640333e0,eax
6400edc3:	mov    ecx,DWORD PTR [esp+0x10]
6400edc7:	mov    DWORD PTR fs:0x0,ecx
6400edce:	pop    ecx
6400edcf:	pop    esi
6400edd0:	pop    ebx
6400edd1:	mov    esp,ebp
6400edd3:	pop    ebp
6400edd4:	ret    
6400edd5:	xor    eax,eax
6400edd7:	mov    ds:0x640333e0,eax
6400eddc:	mov    ecx,DWORD PTR [esp+0x10]
6400ede0:	mov    DWORD PTR fs:0x0,ecx
6400ede7:	pop    ecx
6400ede8:	pop    esi
6400ede9:	pop    ebx
6400edea:	mov    esp,ebp
6400edec:	pop    ebp
6400eded:	ret    
6400edee:	mov    eax,ds:0x640333e0
6400edf3:	mov    ecx,DWORD PTR [esp+0x10]
6400edf7:	mov    DWORD PTR fs:0x0,ecx
6400edfe:	pop    ecx
6400edff:	pop    esi
6400ee00:	pop    ebx
6400ee01:	mov    esp,ebp
6400ee03:	pop    ebp
6400ee04:	ret    
6400ee05:	int3   
6400ee06:	int3   
6400ee07:	int3   
6400ee08:	int3   
6400ee09:	int3   
6400ee0a:	int3   
6400ee0b:	int3   
6400ee0c:	int3   
6400ee0d:	int3   
6400ee0e:	int3   
6400ee0f:	int3   
6400ee10:	push   ebp
6400ee11:	mov    ebp,esp
6400ee13:	and    esp,0xfffffff8
6400ee16:	push   0xffffffff
6400ee18:	push   0x640242fe
6400ee1d:	mov    eax,fs:0x0
6400ee23:	push   eax
6400ee24:	push   ecx
6400ee25:	push   ebx
6400ee26:	push   esi
6400ee27:	mov    eax,ds:0x6402f09c
6400ee2c:	xor    eax,esp
6400ee2e:	push   eax
6400ee2f:	lea    eax,[esp+0x10]
6400ee33:	mov    fs:0x0,eax
6400ee39:	mov    ebx,0x1
6400ee3e:	test   BYTE PTR ds:0x640333dc,bl
6400ee44:	jne    0x6400eece
6400ee4a:	or     DWORD PTR ds:0x640333dc,ebx
6400ee50:	push   0x6402ac64
6400ee55:	push   0x15
6400ee57:	push   0x6402ac98
6400ee5c:	mov    DWORD PTR [esp+0x24],0x0
6400ee64:	call   0x64006690
6400ee69:	push   0x6402acb0
6400ee6e:	push   0x8
6400ee70:	push   0x6402abdc
6400ee75:	mov    esi,eax
6400ee77:	call   0x64006950
6400ee7c:	add    esp,0x18
6400ee7f:	push   eax
6400ee80:	call   DWORD PTR ds:0x64026018
6400ee86:	add    DWORD PTR ds:0x64033270,ebx
6400ee8c:	test   eax,eax
6400ee8e:	je     0x6400eeb5
6400ee90:	push   esi
6400ee91:	push   eax
6400ee92:	call   DWORD PTR ds:0x64026014
6400ee98:	add    DWORD PTR ds:0x64033274,ebx
6400ee9e:	mov    ds:0x640333d8,eax
6400eea3:	mov    ecx,DWORD PTR [esp+0x10]
6400eea7:	mov    DWORD PTR fs:0x0,ecx
6400eeae:	pop    ecx
6400eeaf:	pop    esi
6400eeb0:	pop    ebx
6400eeb1:	mov    esp,ebp
6400eeb3:	pop    ebp
6400eeb4:	ret    
6400eeb5:	xor    eax,eax
6400eeb7:	mov    ds:0x640333d8,eax
6400eebc:	mov    ecx,DWORD PTR [esp+0x10]
6400eec0:	mov    DWORD PTR fs:0x0,ecx
6400eec7:	pop    ecx
6400eec8:	pop    esi
6400eec9:	pop    ebx
6400eeca:	mov    esp,ebp
6400eecc:	pop    ebp
6400eecd:	ret    
6400eece:	mov    eax,ds:0x640333d8
6400eed3:	mov    ecx,DWORD PTR [esp+0x10]
6400eed7:	mov    DWORD PTR fs:0x0,ecx
6400eede:	pop    ecx
6400eedf:	pop    esi
6400eee0:	pop    ebx
6400eee1:	mov    esp,ebp
6400eee3:	pop    ebp
6400eee4:	ret    
6400eee5:	int3   
6400eee6:	int3   
6400eee7:	int3   
6400eee8:	int3   
6400eee9:	int3   
6400eeea:	int3   
6400eeeb:	int3   
6400eeec:	int3   
6400eeed:	int3   
6400eeee:	int3   
6400eeef:	int3   
6400eef0:	push   ebp
6400eef1:	mov    ebp,esp
6400eef3:	and    esp,0xfffffff8
6400eef6:	push   0xffffffff
6400eef8:	push   0x640242ce
6400eefd:	mov    eax,fs:0x0
6400ef03:	push   eax
6400ef04:	push   ecx
6400ef05:	push   ebx
6400ef06:	push   esi
6400ef07:	mov    eax,ds:0x6402f09c
6400ef0c:	xor    eax,esp
6400ef0e:	push   eax
6400ef0f:	lea    eax,[esp+0x10]
6400ef13:	mov    fs:0x0,eax
6400ef19:	mov    ebx,0x1
6400ef1e:	test   BYTE PTR ds:0x640333d4,bl
6400ef24:	jne    0x6400efae
6400ef2a:	or     DWORD PTR ds:0x640333d4,ebx
6400ef30:	push   0x6402acd4
6400ef35:	push   0x34
6400ef37:	push   0x6402ad14
6400ef3c:	mov    DWORD PTR [esp+0x24],0x0
6400ef44:	call   0x64006690
6400ef49:	push   0x6402ad4c
6400ef4e:	push   0x8
6400ef50:	push   0x6402abdc
6400ef55:	mov    esi,eax
6400ef57:	call   0x64006950
6400ef5c:	add    esp,0x18
6400ef5f:	push   eax
6400ef60:	call   DWORD PTR ds:0x64026018
6400ef66:	add    DWORD PTR ds:0x64033270,ebx
6400ef6c:	test   eax,eax
6400ef6e:	je     0x6400ef95
6400ef70:	push   esi
6400ef71:	push   eax
6400ef72:	call   DWORD PTR ds:0x64026014
6400ef78:	add    DWORD PTR ds:0x64033274,ebx
6400ef7e:	mov    ds:0x640333d0,eax
6400ef83:	mov    ecx,DWORD PTR [esp+0x10]
6400ef87:	mov    DWORD PTR fs:0x0,ecx
6400ef8e:	pop    ecx
6400ef8f:	pop    esi
6400ef90:	pop    ebx
6400ef91:	mov    esp,ebp
6400ef93:	pop    ebp
6400ef94:	ret    
6400ef95:	xor    eax,eax
6400ef97:	mov    ds:0x640333d0,eax
6400ef9c:	mov    ecx,DWORD PTR [esp+0x10]
6400efa0:	mov    DWORD PTR fs:0x0,ecx
6400efa7:	pop    ecx
6400efa8:	pop    esi
6400efa9:	pop    ebx
6400efaa:	mov    esp,ebp
6400efac:	pop    ebp
6400efad:	ret    
6400efae:	mov    eax,ds:0x640333d0
6400efb3:	mov    ecx,DWORD PTR [esp+0x10]
6400efb7:	mov    DWORD PTR fs:0x0,ecx
6400efbe:	pop    ecx
6400efbf:	pop    esi
6400efc0:	pop    ebx
6400efc1:	mov    esp,ebp
6400efc3:	pop    ebp
6400efc4:	ret    
6400efc5:	int3   
6400efc6:	int3   
6400efc7:	int3   
6400efc8:	int3   
6400efc9:	int3   
6400efca:	int3   
6400efcb:	int3   
6400efcc:	int3   
6400efcd:	int3   
6400efce:	int3   
6400efcf:	int3   
6400efd0:	push   ebp
6400efd1:	mov    ebp,esp
6400efd3:	and    esp,0xfffffff8
6400efd6:	push   0xffffffff
6400efd8:	push   0x6402429e
6400efdd:	mov    eax,fs:0x0
6400efe3:	push   eax
6400efe4:	push   ecx
6400efe5:	push   ebx
6400efe6:	push   esi
6400efe7:	mov    eax,ds:0x6402f09c
6400efec:	xor    eax,esp
6400efee:	push   eax
6400efef:	lea    eax,[esp+0x10]
6400eff3:	mov    fs:0x0,eax
6400eff9:	mov    ebx,0x1
6400effe:	test   BYTE PTR ds:0x640333cc,bl
6400f004:	jne    0x6400f08e
6400f00a:	or     DWORD PTR ds:0x640333cc,ebx
6400f010:	push   0x6402ad74
6400f015:	push   0xb
6400f017:	push   0x6402adac
6400f01c:	mov    DWORD PTR [esp+0x24],0x0
6400f024:	call   0x64006690
6400f029:	push   0x6402adb8
6400f02e:	push   0x8
6400f030:	push   0x6402abdc
6400f035:	mov    esi,eax
6400f037:	call   0x64006950
6400f03c:	add    esp,0x18
6400f03f:	push   eax
6400f040:	call   DWORD PTR ds:0x64026018
6400f046:	add    DWORD PTR ds:0x64033270,ebx
6400f04c:	test   eax,eax
6400f04e:	je     0x6400f075
6400f050:	push   esi
6400f051:	push   eax
6400f052:	call   DWORD PTR ds:0x64026014
6400f058:	add    DWORD PTR ds:0x64033274,ebx
6400f05e:	mov    ds:0x640333c8,eax
6400f063:	mov    ecx,DWORD PTR [esp+0x10]
6400f067:	mov    DWORD PTR fs:0x0,ecx
6400f06e:	pop    ecx
6400f06f:	pop    esi
6400f070:	pop    ebx
6400f071:	mov    esp,ebp
6400f073:	pop    ebp
6400f074:	ret    
6400f075:	xor    eax,eax
6400f077:	mov    ds:0x640333c8,eax
6400f07c:	mov    ecx,DWORD PTR [esp+0x10]
6400f080:	mov    DWORD PTR fs:0x0,ecx
6400f087:	pop    ecx
6400f088:	pop    esi
6400f089:	pop    ebx
6400f08a:	mov    esp,ebp
6400f08c:	pop    ebp
6400f08d:	ret    
6400f08e:	mov    eax,ds:0x640333c8
6400f093:	mov    ecx,DWORD PTR [esp+0x10]
6400f097:	mov    DWORD PTR fs:0x0,ecx
6400f09e:	pop    ecx
6400f09f:	pop    esi
6400f0a0:	pop    ebx
6400f0a1:	mov    esp,ebp
6400f0a3:	pop    ebp
6400f0a4:	ret    
6400f0a5:	int3   
6400f0a6:	int3   
6400f0a7:	int3   
6400f0a8:	int3   
6400f0a9:	int3   
6400f0aa:	int3   
6400f0ab:	int3   
6400f0ac:	int3   
6400f0ad:	int3   
6400f0ae:	int3   
6400f0af:	int3   
6400f0b0:	push   ebp
6400f0b1:	mov    ebp,esp
6400f0b3:	and    esp,0xfffffff8
6400f0b6:	push   0xffffffff
6400f0b8:	push   0x6402426e
6400f0bd:	mov    eax,fs:0x0
6400f0c3:	push   eax
6400f0c4:	push   ecx
6400f0c5:	push   ebx
6400f0c6:	push   esi
6400f0c7:	mov    eax,ds:0x6402f09c
6400f0cc:	xor    eax,esp
6400f0ce:	push   eax
6400f0cf:	lea    eax,[esp+0x10]
6400f0d3:	mov    fs:0x0,eax
6400f0d9:	mov    ebx,0x1
6400f0de:	test   BYTE PTR ds:0x640333c4,bl
6400f0e4:	jne    0x6400f16e
6400f0ea:	or     DWORD PTR ds:0x640333c4,ebx
6400f0f0:	push   0x6402ade8
6400f0f5:	push   0xd
6400f0f7:	push   0x6402ae18
6400f0fc:	mov    DWORD PTR [esp+0x24],0x0
6400f104:	call   0x64006690
6400f109:	push   0x6402ae28
6400f10e:	push   0x8
6400f110:	push   0x6402abdc
6400f115:	mov    esi,eax
6400f117:	call   0x64006950
6400f11c:	add    esp,0x18
6400f11f:	push   eax
6400f120:	call   DWORD PTR ds:0x64026018
6400f126:	add    DWORD PTR ds:0x64033270,ebx
6400f12c:	test   eax,eax
6400f12e:	je     0x6400f155
6400f130:	push   esi
6400f131:	push   eax
6400f132:	call   DWORD PTR ds:0x64026014
6400f138:	add    DWORD PTR ds:0x64033274,ebx
6400f13e:	mov    ds:0x640333c0,eax
6400f143:	mov    ecx,DWORD PTR [esp+0x10]
6400f147:	mov    DWORD PTR fs:0x0,ecx
6400f14e:	pop    ecx
6400f14f:	pop    esi
6400f150:	pop    ebx
6400f151:	mov    esp,ebp
6400f153:	pop    ebp
6400f154:	ret    
6400f155:	xor    eax,eax
6400f157:	mov    ds:0x640333c0,eax
6400f15c:	mov    ecx,DWORD PTR [esp+0x10]
6400f160:	mov    DWORD PTR fs:0x0,ecx
6400f167:	pop    ecx
6400f168:	pop    esi
6400f169:	pop    ebx
6400f16a:	mov    esp,ebp
6400f16c:	pop    ebp
6400f16d:	ret    
6400f16e:	mov    eax,ds:0x640333c0
6400f173:	mov    ecx,DWORD PTR [esp+0x10]
6400f177:	mov    DWORD PTR fs:0x0,ecx
6400f17e:	pop    ecx
6400f17f:	pop    esi
6400f180:	pop    ebx
6400f181:	mov    esp,ebp
6400f183:	pop    ebp
6400f184:	ret    
6400f185:	int3   
6400f186:	int3   
6400f187:	int3   
6400f188:	int3   
6400f189:	int3   
6400f18a:	int3   
6400f18b:	int3   
6400f18c:	int3   
6400f18d:	int3   
6400f18e:	int3   
6400f18f:	int3   
6400f190:	push   ebp
6400f191:	mov    ebp,esp
6400f193:	and    esp,0xfffffff8
6400f196:	push   0xffffffff
6400f198:	push   0x6402423e
6400f19d:	mov    eax,fs:0x0
6400f1a3:	push   eax
6400f1a4:	push   ecx
6400f1a5:	push   ebx
6400f1a6:	push   esi
6400f1a7:	mov    eax,ds:0x6402f09c
6400f1ac:	xor    eax,esp
6400f1ae:	push   eax
6400f1af:	lea    eax,[esp+0x10]
6400f1b3:	mov    fs:0x0,eax
6400f1b9:	mov    ebx,0x1
6400f1be:	test   BYTE PTR ds:0x640333bc,bl
6400f1c4:	jne    0x6400f24e
6400f1ca:	or     DWORD PTR ds:0x640333bc,ebx
6400f1d0:	push   0x6402ae64
6400f1d5:	push   0xe
6400f1d7:	push   0x6402ae90
6400f1dc:	mov    DWORD PTR [esp+0x24],0x0
6400f1e4:	call   0x64006690
6400f1e9:	push   0x6402aea0
6400f1ee:	push   0x8
6400f1f0:	push   0x6402abdc
6400f1f5:	mov    esi,eax
6400f1f7:	call   0x64006950
6400f1fc:	add    esp,0x18
6400f1ff:	push   eax
6400f200:	call   DWORD PTR ds:0x64026018
6400f206:	add    DWORD PTR ds:0x64033270,ebx
6400f20c:	test   eax,eax
6400f20e:	je     0x6400f235
6400f210:	push   esi
6400f211:	push   eax
6400f212:	call   DWORD PTR ds:0x64026014
6400f218:	add    DWORD PTR ds:0x64033274,ebx
6400f21e:	mov    ds:0x640333b8,eax
6400f223:	mov    ecx,DWORD PTR [esp+0x10]
6400f227:	mov    DWORD PTR fs:0x0,ecx
6400f22e:	pop    ecx
6400f22f:	pop    esi
6400f230:	pop    ebx
6400f231:	mov    esp,ebp
6400f233:	pop    ebp
6400f234:	ret    
6400f235:	xor    eax,eax
6400f237:	mov    ds:0x640333b8,eax
6400f23c:	mov    ecx,DWORD PTR [esp+0x10]
6400f240:	mov    DWORD PTR fs:0x0,ecx
6400f247:	pop    ecx
6400f248:	pop    esi
6400f249:	pop    ebx
6400f24a:	mov    esp,ebp
6400f24c:	pop    ebp
6400f24d:	ret    
6400f24e:	mov    eax,ds:0x640333b8
6400f253:	mov    ecx,DWORD PTR [esp+0x10]
6400f257:	mov    DWORD PTR fs:0x0,ecx
6400f25e:	pop    ecx
6400f25f:	pop    esi
6400f260:	pop    ebx
6400f261:	mov    esp,ebp
6400f263:	pop    ebp
6400f264:	ret    
6400f265:	int3   
6400f266:	int3   
6400f267:	int3   
6400f268:	int3   
6400f269:	int3   
6400f26a:	int3   
6400f26b:	int3   
6400f26c:	int3   
6400f26d:	int3   
6400f26e:	int3   
6400f26f:	int3   
6400f270:	push   ebp
6400f271:	mov    ebp,esp
6400f273:	and    esp,0xfffffff8
6400f276:	push   0xffffffff
6400f278:	push   0x6402420e
6400f27d:	mov    eax,fs:0x0
6400f283:	push   eax
6400f284:	push   ecx
6400f285:	push   ebx
6400f286:	push   esi
6400f287:	mov    eax,ds:0x6402f09c
6400f28c:	xor    eax,esp
6400f28e:	push   eax
6400f28f:	lea    eax,[esp+0x10]
6400f293:	mov    fs:0x0,eax
6400f299:	mov    ebx,0x1
6400f29e:	test   BYTE PTR ds:0x640333b4,bl
6400f2a4:	jne    0x6400f32e
6400f2aa:	or     DWORD PTR ds:0x640333b4,ebx
6400f2b0:	push   0x6402aed4
6400f2b5:	push   0x14
6400f2b7:	push   0x6402af04
6400f2bc:	mov    DWORD PTR [esp+0x24],0x0
6400f2c4:	call   0x64006690
6400f2c9:	push   0x6402af1c
6400f2ce:	push   0x8
6400f2d0:	push   0x6402abdc
6400f2d5:	mov    esi,eax
6400f2d7:	call   0x64006950
6400f2dc:	add    esp,0x18
6400f2df:	push   eax
6400f2e0:	call   DWORD PTR ds:0x64026018
6400f2e6:	add    DWORD PTR ds:0x64033270,ebx
6400f2ec:	test   eax,eax
6400f2ee:	je     0x6400f315
6400f2f0:	push   esi
6400f2f1:	push   eax
6400f2f2:	call   DWORD PTR ds:0x64026014
6400f2f8:	add    DWORD PTR ds:0x64033274,ebx
6400f2fe:	mov    ds:0x640333b0,eax
6400f303:	mov    ecx,DWORD PTR [esp+0x10]
6400f307:	mov    DWORD PTR fs:0x0,ecx
6400f30e:	pop    ecx
6400f30f:	pop    esi
6400f310:	pop    ebx
6400f311:	mov    esp,ebp
6400f313:	pop    ebp
6400f314:	ret    
6400f315:	xor    eax,eax
6400f317:	mov    ds:0x640333b0,eax
6400f31c:	mov    ecx,DWORD PTR [esp+0x10]
6400f320:	mov    DWORD PTR fs:0x0,ecx
6400f327:	pop    ecx
6400f328:	pop    esi
6400f329:	pop    ebx
6400f32a:	mov    esp,ebp
6400f32c:	pop    ebp
6400f32d:	ret    
6400f32e:	mov    eax,ds:0x640333b0
6400f333:	mov    ecx,DWORD PTR [esp+0x10]
6400f337:	mov    DWORD PTR fs:0x0,ecx
6400f33e:	pop    ecx
6400f33f:	pop    esi
6400f340:	pop    ebx
6400f341:	mov    esp,ebp
6400f343:	pop    ebp
6400f344:	ret    
6400f345:	int3   
6400f346:	int3   
6400f347:	int3   
6400f348:	int3   
6400f349:	int3   
6400f34a:	int3   
6400f34b:	int3   
6400f34c:	int3   
6400f34d:	int3   
6400f34e:	int3   
6400f34f:	int3   
6400f350:	push   ebp
6400f351:	mov    ebp,esp
6400f353:	and    esp,0xfffffff8
6400f356:	push   0xffffffff
6400f358:	push   0x640241de
6400f35d:	mov    eax,fs:0x0
6400f363:	push   eax
6400f364:	push   ecx
6400f365:	push   ebx
6400f366:	push   esi
6400f367:	mov    eax,ds:0x6402f09c
6400f36c:	xor    eax,esp
6400f36e:	push   eax
6400f36f:	lea    eax,[esp+0x10]
6400f373:	mov    fs:0x0,eax
6400f379:	mov    ebx,0x1
6400f37e:	test   BYTE PTR ds:0x640333ac,bl
6400f384:	jne    0x6400f40e
6400f38a:	or     DWORD PTR ds:0x640333ac,ebx
6400f390:	push   0x6402af40
6400f395:	push   0xd
6400f397:	push   0x6402af7c
6400f39c:	mov    DWORD PTR [esp+0x24],0x0
6400f3a4:	call   0x64006690
6400f3a9:	push   0x6402af8c
6400f3ae:	push   0x8
6400f3b0:	push   0x6402abdc
6400f3b5:	mov    esi,eax
6400f3b7:	call   0x64006950
6400f3bc:	add    esp,0x18
6400f3bf:	push   eax
6400f3c0:	call   DWORD PTR ds:0x64026018
6400f3c6:	add    DWORD PTR ds:0x64033270,ebx
6400f3cc:	test   eax,eax
6400f3ce:	je     0x6400f3f5
6400f3d0:	push   esi
6400f3d1:	push   eax
6400f3d2:	call   DWORD PTR ds:0x64026014
6400f3d8:	add    DWORD PTR ds:0x64033274,ebx
6400f3de:	mov    ds:0x640333a8,eax
6400f3e3:	mov    ecx,DWORD PTR [esp+0x10]
6400f3e7:	mov    DWORD PTR fs:0x0,ecx
6400f3ee:	pop    ecx
6400f3ef:	pop    esi
6400f3f0:	pop    ebx
6400f3f1:	mov    esp,ebp
6400f3f3:	pop    ebp
6400f3f4:	ret    
6400f3f5:	xor    eax,eax
6400f3f7:	mov    ds:0x640333a8,eax
6400f3fc:	mov    ecx,DWORD PTR [esp+0x10]
6400f400:	mov    DWORD PTR fs:0x0,ecx
6400f407:	pop    ecx
6400f408:	pop    esi
6400f409:	pop    ebx
6400f40a:	mov    esp,ebp
6400f40c:	pop    ebp
6400f40d:	ret    
6400f40e:	mov    eax,ds:0x640333a8
6400f413:	mov    ecx,DWORD PTR [esp+0x10]
6400f417:	mov    DWORD PTR fs:0x0,ecx
6400f41e:	pop    ecx
6400f41f:	pop    esi
6400f420:	pop    ebx
6400f421:	mov    esp,ebp
6400f423:	pop    ebp
6400f424:	ret    
6400f425:	int3   
6400f426:	int3   
6400f427:	int3   
6400f428:	int3   
6400f429:	int3   
6400f42a:	int3   
6400f42b:	int3   
6400f42c:	int3   
6400f42d:	int3   
6400f42e:	int3   
6400f42f:	int3   
6400f430:	push   ebp
6400f431:	mov    ebp,esp
6400f433:	and    esp,0xfffffff8
6400f436:	push   0xffffffff
6400f438:	push   0x640241ae
6400f43d:	mov    eax,fs:0x0
6400f443:	push   eax
6400f444:	push   ecx
6400f445:	push   ebx
6400f446:	push   esi
6400f447:	mov    eax,ds:0x6402f09c
6400f44c:	xor    eax,esp
6400f44e:	push   eax
6400f44f:	lea    eax,[esp+0x10]
6400f453:	mov    fs:0x0,eax
6400f459:	mov    ebx,0x1
6400f45e:	test   BYTE PTR ds:0x640333a4,bl
6400f464:	jne    0x6400f4ee
6400f46a:	or     DWORD PTR ds:0x640333a4,ebx
6400f470:	push   0x6402afb8
6400f475:	push   0xe
6400f477:	push   0x6402afe4
6400f47c:	mov    DWORD PTR [esp+0x24],0x0
6400f484:	call   0x64006690
6400f489:	push   0x6402aff8
6400f48e:	push   0x8
6400f490:	push   0x6402abdc
6400f495:	mov    esi,eax
6400f497:	call   0x64006950
6400f49c:	add    esp,0x18
6400f49f:	push   eax
6400f4a0:	call   DWORD PTR ds:0x64026018
6400f4a6:	add    DWORD PTR ds:0x64033270,ebx
6400f4ac:	test   eax,eax
6400f4ae:	je     0x6400f4d5
6400f4b0:	push   esi
6400f4b1:	push   eax
6400f4b2:	call   DWORD PTR ds:0x64026014
6400f4b8:	add    DWORD PTR ds:0x64033274,ebx
6400f4be:	mov    ds:0x640333a0,eax
6400f4c3:	mov    ecx,DWORD PTR [esp+0x10]
6400f4c7:	mov    DWORD PTR fs:0x0,ecx
6400f4ce:	pop    ecx
6400f4cf:	pop    esi
6400f4d0:	pop    ebx
6400f4d1:	mov    esp,ebp
6400f4d3:	pop    ebp
6400f4d4:	ret    
6400f4d5:	xor    eax,eax
6400f4d7:	mov    ds:0x640333a0,eax
6400f4dc:	mov    ecx,DWORD PTR [esp+0x10]
6400f4e0:	mov    DWORD PTR fs:0x0,ecx
6400f4e7:	pop    ecx
6400f4e8:	pop    esi
6400f4e9:	pop    ebx
6400f4ea:	mov    esp,ebp
6400f4ec:	pop    ebp
6400f4ed:	ret    
6400f4ee:	mov    eax,ds:0x640333a0
6400f4f3:	mov    ecx,DWORD PTR [esp+0x10]
6400f4f7:	mov    DWORD PTR fs:0x0,ecx
6400f4fe:	pop    ecx
6400f4ff:	pop    esi
6400f500:	pop    ebx
6400f501:	mov    esp,ebp
6400f503:	pop    ebp
6400f504:	ret    
6400f505:	int3   
6400f506:	int3   
6400f507:	int3   
6400f508:	int3   
6400f509:	int3   
6400f50a:	int3   
6400f50b:	int3   
6400f50c:	int3   
6400f50d:	int3   
6400f50e:	int3   
6400f50f:	int3   
6400f510:	push   ebp
6400f511:	mov    ebp,esp
6400f513:	and    esp,0xfffffff8
6400f516:	push   0xffffffff
6400f518:	push   0x6402417e
6400f51d:	mov    eax,fs:0x0
6400f523:	push   eax
6400f524:	push   ecx
6400f525:	push   ebx
6400f526:	push   esi
6400f527:	mov    eax,ds:0x6402f09c
6400f52c:	xor    eax,esp
6400f52e:	push   eax
6400f52f:	lea    eax,[esp+0x10]
6400f533:	mov    fs:0x0,eax
6400f539:	mov    ebx,0x1
6400f53e:	test   BYTE PTR ds:0x6403339c,bl
6400f544:	jne    0x6400f5ce
6400f54a:	or     DWORD PTR ds:0x6403339c,ebx
6400f550:	push   0x6402b038
6400f555:	push   0xf
6400f557:	push   0x6402b06c
6400f55c:	mov    DWORD PTR [esp+0x24],0x0
6400f564:	call   0x64006690
6400f569:	push   0x6402b07c
6400f56e:	push   0x8
6400f570:	push   0x6402abdc
6400f575:	mov    esi,eax
6400f577:	call   0x64006950
6400f57c:	add    esp,0x18
6400f57f:	push   eax
6400f580:	call   DWORD PTR ds:0x64026018
6400f586:	add    DWORD PTR ds:0x64033270,ebx
6400f58c:	test   eax,eax
6400f58e:	je     0x6400f5b5
6400f590:	push   esi
6400f591:	push   eax
6400f592:	call   DWORD PTR ds:0x64026014
6400f598:	add    DWORD PTR ds:0x64033274,ebx
6400f59e:	mov    ds:0x64033398,eax
6400f5a3:	mov    ecx,DWORD PTR [esp+0x10]
6400f5a7:	mov    DWORD PTR fs:0x0,ecx
6400f5ae:	pop    ecx
6400f5af:	pop    esi
6400f5b0:	pop    ebx
6400f5b1:	mov    esp,ebp
6400f5b3:	pop    ebp
6400f5b4:	ret    
6400f5b5:	xor    eax,eax
6400f5b7:	mov    ds:0x64033398,eax
6400f5bc:	mov    ecx,DWORD PTR [esp+0x10]
6400f5c0:	mov    DWORD PTR fs:0x0,ecx
6400f5c7:	pop    ecx
6400f5c8:	pop    esi
6400f5c9:	pop    ebx
6400f5ca:	mov    esp,ebp
6400f5cc:	pop    ebp
6400f5cd:	ret    
6400f5ce:	mov    eax,ds:0x64033398
6400f5d3:	mov    ecx,DWORD PTR [esp+0x10]
6400f5d7:	mov    DWORD PTR fs:0x0,ecx
6400f5de:	pop    ecx
6400f5df:	pop    esi
6400f5e0:	pop    ebx
6400f5e1:	mov    esp,ebp
6400f5e3:	pop    ebp
6400f5e4:	ret    
6400f5e5:	int3   
6400f5e6:	int3   
6400f5e7:	int3   
6400f5e8:	int3   
6400f5e9:	int3   
6400f5ea:	int3   
6400f5eb:	int3   
6400f5ec:	int3   
6400f5ed:	int3   
6400f5ee:	int3   
6400f5ef:	int3   
6400f5f0:	push   ebp
6400f5f1:	mov    ebp,esp
6400f5f3:	and    esp,0xfffffff8
6400f5f6:	push   0xffffffff
6400f5f8:	push   0x6402414e
6400f5fd:	mov    eax,fs:0x0
6400f603:	push   eax
6400f604:	push   ecx
6400f605:	push   ebx
6400f606:	push   esi
6400f607:	mov    eax,ds:0x6402f09c
6400f60c:	xor    eax,esp
6400f60e:	push   eax
6400f60f:	lea    eax,[esp+0x10]
6400f613:	mov    fs:0x0,eax
6400f619:	mov    ebx,0x1
6400f61e:	test   BYTE PTR ds:0x64033394,bl
6400f624:	jne    0x6400f6ae
6400f62a:	or     DWORD PTR ds:0x64033394,ebx
6400f630:	push   0x6402b0b8
6400f635:	push   0x12
6400f637:	push   0x6402b0f4
6400f63c:	mov    DWORD PTR [esp+0x24],0x0
6400f644:	call   0x64006690
6400f649:	push   0x6402b108
6400f64e:	push   0x8
6400f650:	push   0x6402abdc
6400f655:	mov    esi,eax
6400f657:	call   0x64006950
6400f65c:	add    esp,0x18
6400f65f:	push   eax
6400f660:	call   DWORD PTR ds:0x64026018
6400f666:	add    DWORD PTR ds:0x64033270,ebx
6400f66c:	test   eax,eax
6400f66e:	je     0x6400f695
6400f670:	push   esi
6400f671:	push   eax
6400f672:	call   DWORD PTR ds:0x64026014
6400f678:	add    DWORD PTR ds:0x64033274,ebx
6400f67e:	mov    ds:0x64033390,eax
6400f683:	mov    ecx,DWORD PTR [esp+0x10]
6400f687:	mov    DWORD PTR fs:0x0,ecx
6400f68e:	pop    ecx
6400f68f:	pop    esi
6400f690:	pop    ebx
6400f691:	mov    esp,ebp
6400f693:	pop    ebp
6400f694:	ret    
6400f695:	xor    eax,eax
6400f697:	mov    ds:0x64033390,eax
6400f69c:	mov    ecx,DWORD PTR [esp+0x10]
6400f6a0:	mov    DWORD PTR fs:0x0,ecx
6400f6a7:	pop    ecx
6400f6a8:	pop    esi
6400f6a9:	pop    ebx
6400f6aa:	mov    esp,ebp
6400f6ac:	pop    ebp
6400f6ad:	ret    
6400f6ae:	mov    eax,ds:0x64033390
6400f6b3:	mov    ecx,DWORD PTR [esp+0x10]
6400f6b7:	mov    DWORD PTR fs:0x0,ecx
6400f6be:	pop    ecx
6400f6bf:	pop    esi
6400f6c0:	pop    ebx
6400f6c1:	mov    esp,ebp
6400f6c3:	pop    ebp
6400f6c4:	ret    
6400f6c5:	int3   
6400f6c6:	int3   
6400f6c7:	int3   
6400f6c8:	int3   
6400f6c9:	int3   
6400f6ca:	int3   
6400f6cb:	int3   
6400f6cc:	int3   
6400f6cd:	int3   
6400f6ce:	int3   
6400f6cf:	int3   
6400f6d0:	push   ebp
6400f6d1:	mov    ebp,esp
6400f6d3:	and    esp,0xfffffff8
6400f6d6:	push   0xffffffff
6400f6d8:	push   0x6402411e
6400f6dd:	mov    eax,fs:0x0
6400f6e3:	push   eax
6400f6e4:	push   ecx
6400f6e5:	push   ebx
6400f6e6:	push   esi
6400f6e7:	mov    eax,ds:0x6402f09c
6400f6ec:	xor    eax,esp
6400f6ee:	push   eax
6400f6ef:	lea    eax,[esp+0x10]
6400f6f3:	mov    fs:0x0,eax
6400f6f9:	mov    ebx,0x1
6400f6fe:	test   BYTE PTR ds:0x6403338c,bl
6400f704:	jne    0x6400f78e
6400f70a:	or     DWORD PTR ds:0x6403338c,ebx
6400f710:	push   0x6402b134
6400f715:	push   0xf
6400f717:	push   0x6402b158
6400f71c:	mov    DWORD PTR [esp+0x24],0x0
6400f724:	call   0x64006690
6400f729:	push   0x6402b168
6400f72e:	push   0x8
6400f730:	push   0x6402abdc
6400f735:	mov    esi,eax
6400f737:	call   0x64006950
6400f73c:	add    esp,0x18
6400f73f:	push   eax
6400f740:	call   DWORD PTR ds:0x64026018
6400f746:	add    DWORD PTR ds:0x64033270,ebx
6400f74c:	test   eax,eax
6400f74e:	je     0x6400f775
6400f750:	push   esi
6400f751:	push   eax
6400f752:	call   DWORD PTR ds:0x64026014
6400f758:	add    DWORD PTR ds:0x64033274,ebx
6400f75e:	mov    ds:0x64033388,eax
6400f763:	mov    ecx,DWORD PTR [esp+0x10]
6400f767:	mov    DWORD PTR fs:0x0,ecx
6400f76e:	pop    ecx
6400f76f:	pop    esi
6400f770:	pop    ebx
6400f771:	mov    esp,ebp
6400f773:	pop    ebp
6400f774:	ret    
6400f775:	xor    eax,eax
6400f777:	mov    ds:0x64033388,eax
6400f77c:	mov    ecx,DWORD PTR [esp+0x10]
6400f780:	mov    DWORD PTR fs:0x0,ecx
6400f787:	pop    ecx
6400f788:	pop    esi
6400f789:	pop    ebx
6400f78a:	mov    esp,ebp
6400f78c:	pop    ebp
6400f78d:	ret    
6400f78e:	mov    eax,ds:0x64033388
6400f793:	mov    ecx,DWORD PTR [esp+0x10]
6400f797:	mov    DWORD PTR fs:0x0,ecx
6400f79e:	pop    ecx
6400f79f:	pop    esi
6400f7a0:	pop    ebx
6400f7a1:	mov    esp,ebp
6400f7a3:	pop    ebp
6400f7a4:	ret    
6400f7a5:	int3   
6400f7a6:	int3   
6400f7a7:	int3   
6400f7a8:	int3   
6400f7a9:	int3   
6400f7aa:	int3   
6400f7ab:	int3   
6400f7ac:	int3   
6400f7ad:	int3   
6400f7ae:	int3   
6400f7af:	int3   
6400f7b0:	push   ebp
6400f7b1:	mov    ebp,esp
6400f7b3:	and    esp,0xfffffff8
6400f7b6:	push   0xffffffff
6400f7b8:	push   0x640240ee
6400f7bd:	mov    eax,fs:0x0
6400f7c3:	push   eax
6400f7c4:	push   ecx
6400f7c5:	push   ebx
6400f7c6:	push   esi
6400f7c7:	mov    eax,ds:0x6402f09c
6400f7cc:	xor    eax,esp
6400f7ce:	push   eax
6400f7cf:	lea    eax,[esp+0x10]
6400f7d3:	mov    fs:0x0,eax
6400f7d9:	mov    ebx,0x1
6400f7de:	test   BYTE PTR ds:0x64033384,bl
6400f7e4:	jne    0x6400f86e
6400f7ea:	or     DWORD PTR ds:0x64033384,ebx
6400f7f0:	push   0x6402b19c
6400f7f5:	push   0xd
6400f7f7:	push   0x6402b1d4
6400f7fc:	mov    DWORD PTR [esp+0x24],0x0
6400f804:	call   0x64006690
6400f809:	push   0x6402b1e4
6400f80e:	push   0x8
6400f810:	push   0x6402abdc
6400f815:	mov    esi,eax
6400f817:	call   0x64006950
6400f81c:	add    esp,0x18
6400f81f:	push   eax
6400f820:	call   DWORD PTR ds:0x64026018
6400f826:	add    DWORD PTR ds:0x64033270,ebx
6400f82c:	test   eax,eax
6400f82e:	je     0x6400f855
6400f830:	push   esi
6400f831:	push   eax
6400f832:	call   DWORD PTR ds:0x64026014
6400f838:	add    DWORD PTR ds:0x64033274,ebx
6400f83e:	mov    ds:0x64033380,eax
6400f843:	mov    ecx,DWORD PTR [esp+0x10]
6400f847:	mov    DWORD PTR fs:0x0,ecx
6400f84e:	pop    ecx
6400f84f:	pop    esi
6400f850:	pop    ebx
6400f851:	mov    esp,ebp
6400f853:	pop    ebp
6400f854:	ret    
6400f855:	xor    eax,eax
6400f857:	mov    ds:0x64033380,eax
6400f85c:	mov    ecx,DWORD PTR [esp+0x10]
6400f860:	mov    DWORD PTR fs:0x0,ecx
6400f867:	pop    ecx
6400f868:	pop    esi
6400f869:	pop    ebx
6400f86a:	mov    esp,ebp
6400f86c:	pop    ebp
6400f86d:	ret    
6400f86e:	mov    eax,ds:0x64033380
6400f873:	mov    ecx,DWORD PTR [esp+0x10]
6400f877:	mov    DWORD PTR fs:0x0,ecx
6400f87e:	pop    ecx
6400f87f:	pop    esi
6400f880:	pop    ebx
6400f881:	mov    esp,ebp
6400f883:	pop    ebp
6400f884:	ret    
6400f885:	int3   
6400f886:	int3   
6400f887:	int3   
6400f888:	int3   
6400f889:	int3   
6400f88a:	int3   
6400f88b:	int3   
6400f88c:	int3   
6400f88d:	int3   
6400f88e:	int3   
6400f88f:	int3   
6400f890:	push   ebp
6400f891:	mov    ebp,esp
6400f893:	and    esp,0xfffffff8
6400f896:	push   0xffffffff
6400f898:	push   0x640240be
6400f89d:	mov    eax,fs:0x0
6400f8a3:	push   eax
6400f8a4:	push   ecx
6400f8a5:	push   ebx
6400f8a6:	push   esi
6400f8a7:	mov    eax,ds:0x6402f09c
6400f8ac:	xor    eax,esp
6400f8ae:	push   eax
6400f8af:	lea    eax,[esp+0x10]
6400f8b3:	mov    fs:0x0,eax
6400f8b9:	mov    ebx,0x1
6400f8be:	test   BYTE PTR ds:0x6403337c,bl
6400f8c4:	jne    0x6400f94e
6400f8ca:	or     DWORD PTR ds:0x6403337c,ebx
6400f8d0:	push   0x6402b21c
6400f8d5:	push   0xc
6400f8d7:	push   0x6402b244
6400f8dc:	mov    DWORD PTR [esp+0x24],0x0
6400f8e4:	call   0x64006690
6400f8e9:	push   0x6402b254
6400f8ee:	push   0x8
6400f8f0:	push   0x6402abdc
6400f8f5:	mov    esi,eax
6400f8f7:	call   0x64006950
6400f8fc:	add    esp,0x18
6400f8ff:	push   eax
6400f900:	call   DWORD PTR ds:0x64026018
6400f906:	add    DWORD PTR ds:0x64033270,ebx
6400f90c:	test   eax,eax
6400f90e:	je     0x6400f935
6400f910:	push   esi
6400f911:	push   eax
6400f912:	call   DWORD PTR ds:0x64026014
6400f918:	add    DWORD PTR ds:0x64033274,ebx
6400f91e:	mov    ds:0x64033378,eax
6400f923:	mov    ecx,DWORD PTR [esp+0x10]
6400f927:	mov    DWORD PTR fs:0x0,ecx
6400f92e:	pop    ecx
6400f92f:	pop    esi
6400f930:	pop    ebx
6400f931:	mov    esp,ebp
6400f933:	pop    ebp
6400f934:	ret    
6400f935:	xor    eax,eax
6400f937:	mov    ds:0x64033378,eax
6400f93c:	mov    ecx,DWORD PTR [esp+0x10]
6400f940:	mov    DWORD PTR fs:0x0,ecx
6400f947:	pop    ecx
6400f948:	pop    esi
6400f949:	pop    ebx
6400f94a:	mov    esp,ebp
6400f94c:	pop    ebp
6400f94d:	ret    
6400f94e:	mov    eax,ds:0x64033378
6400f953:	mov    ecx,DWORD PTR [esp+0x10]
6400f957:	mov    DWORD PTR fs:0x0,ecx
6400f95e:	pop    ecx
6400f95f:	pop    esi
6400f960:	pop    ebx
6400f961:	mov    esp,ebp
6400f963:	pop    ebp
6400f964:	ret    
6400f965:	int3   
6400f966:	int3   
6400f967:	int3   
6400f968:	int3   
6400f969:	int3   
6400f96a:	int3   
6400f96b:	int3   
6400f96c:	int3   
6400f96d:	int3   
6400f96e:	int3   
6400f96f:	int3   
6400f970:	push   ebp
6400f971:	mov    ebp,esp
6400f973:	and    esp,0xfffffff8
6400f976:	push   0xffffffff
6400f978:	push   0x6402408e
6400f97d:	mov    eax,fs:0x0
6400f983:	push   eax
6400f984:	push   ecx
6400f985:	push   ebx
6400f986:	push   esi
6400f987:	mov    eax,ds:0x6402f09c
6400f98c:	xor    eax,esp
6400f98e:	push   eax
6400f98f:	lea    eax,[esp+0x10]
6400f993:	mov    fs:0x0,eax
6400f999:	mov    ebx,0x1
6400f99e:	test   BYTE PTR ds:0x64033374,bl
6400f9a4:	jne    0x6400fa2e
6400f9aa:	or     DWORD PTR ds:0x64033374,ebx
6400f9b0:	push   0x6402b288
6400f9b5:	push   0x11
6400f9b7:	push   0x6402b2bc
6400f9bc:	mov    DWORD PTR [esp+0x24],0x0
6400f9c4:	call   0x64006690
6400f9c9:	push   0x6402b2d0
6400f9ce:	push   0x8
6400f9d0:	push   0x6402abdc
6400f9d5:	mov    esi,eax
6400f9d7:	call   0x64006950
6400f9dc:	add    esp,0x18
6400f9df:	push   eax
6400f9e0:	call   DWORD PTR ds:0x64026018
6400f9e6:	add    DWORD PTR ds:0x64033270,ebx
6400f9ec:	test   eax,eax
6400f9ee:	je     0x6400fa15
6400f9f0:	push   esi
6400f9f1:	push   eax
6400f9f2:	call   DWORD PTR ds:0x64026014
6400f9f8:	add    DWORD PTR ds:0x64033274,ebx
6400f9fe:	mov    ds:0x64033370,eax
6400fa03:	mov    ecx,DWORD PTR [esp+0x10]
6400fa07:	mov    DWORD PTR fs:0x0,ecx
6400fa0e:	pop    ecx
6400fa0f:	pop    esi
6400fa10:	pop    ebx
6400fa11:	mov    esp,ebp
6400fa13:	pop    ebp
6400fa14:	ret    
6400fa15:	xor    eax,eax
6400fa17:	mov    ds:0x64033370,eax
6400fa1c:	mov    ecx,DWORD PTR [esp+0x10]
6400fa20:	mov    DWORD PTR fs:0x0,ecx
6400fa27:	pop    ecx
6400fa28:	pop    esi
6400fa29:	pop    ebx
6400fa2a:	mov    esp,ebp
6400fa2c:	pop    ebp
6400fa2d:	ret    
6400fa2e:	mov    eax,ds:0x64033370
6400fa33:	mov    ecx,DWORD PTR [esp+0x10]
6400fa37:	mov    DWORD PTR fs:0x0,ecx
6400fa3e:	pop    ecx
6400fa3f:	pop    esi
6400fa40:	pop    ebx
6400fa41:	mov    esp,ebp
6400fa43:	pop    ebp
6400fa44:	ret    
6400fa45:	int3   
6400fa46:	int3   
6400fa47:	int3   
6400fa48:	int3   
6400fa49:	int3   
6400fa4a:	int3   
6400fa4b:	int3   
6400fa4c:	int3   
6400fa4d:	int3   
6400fa4e:	int3   
6400fa4f:	int3   
6400fa50:	push   ebp
6400fa51:	mov    ebp,esp
6400fa53:	and    esp,0xfffffff8
6400fa56:	push   0xffffffff
6400fa58:	push   0x6402405e
6400fa5d:	mov    eax,fs:0x0
6400fa63:	push   eax
6400fa64:	push   ecx
6400fa65:	push   ebx
6400fa66:	push   esi
6400fa67:	mov    eax,ds:0x6402f09c
6400fa6c:	xor    eax,esp
6400fa6e:	push   eax
6400fa6f:	lea    eax,[esp+0x10]
6400fa73:	mov    fs:0x0,eax
6400fa79:	mov    ebx,0x1
6400fa7e:	test   BYTE PTR ds:0x6403336c,bl
6400fa84:	jne    0x6400fb0e
6400fa8a:	or     DWORD PTR ds:0x6403336c,ebx
6400fa90:	push   0x6402b300
6400fa95:	push   0x16
6400fa97:	push   0x6402b324
6400fa9c:	mov    DWORD PTR [esp+0x24],0x0
6400faa4:	call   0x64006690
6400faa9:	push   0x6402b33c
6400faae:	push   0x8
6400fab0:	push   0x6402abdc
6400fab5:	mov    esi,eax
6400fab7:	call   0x64006950
6400fabc:	add    esp,0x18
6400fabf:	push   eax
6400fac0:	call   DWORD PTR ds:0x64026018
6400fac6:	add    DWORD PTR ds:0x64033270,ebx
6400facc:	test   eax,eax
6400face:	je     0x6400faf5
6400fad0:	push   esi
6400fad1:	push   eax
6400fad2:	call   DWORD PTR ds:0x64026014
6400fad8:	add    DWORD PTR ds:0x64033274,ebx
6400fade:	mov    ds:0x64033368,eax
6400fae3:	mov    ecx,DWORD PTR [esp+0x10]
6400fae7:	mov    DWORD PTR fs:0x0,ecx
6400faee:	pop    ecx
6400faef:	pop    esi
6400faf0:	pop    ebx
6400faf1:	mov    esp,ebp
6400faf3:	pop    ebp
6400faf4:	ret    
6400faf5:	xor    eax,eax
6400faf7:	mov    ds:0x64033368,eax
6400fafc:	mov    ecx,DWORD PTR [esp+0x10]
6400fb00:	mov    DWORD PTR fs:0x0,ecx
6400fb07:	pop    ecx
6400fb08:	pop    esi
6400fb09:	pop    ebx
6400fb0a:	mov    esp,ebp
6400fb0c:	pop    ebp
6400fb0d:	ret    
6400fb0e:	mov    eax,ds:0x64033368
6400fb13:	mov    ecx,DWORD PTR [esp+0x10]
6400fb17:	mov    DWORD PTR fs:0x0,ecx
6400fb1e:	pop    ecx
6400fb1f:	pop    esi
6400fb20:	pop    ebx
6400fb21:	mov    esp,ebp
6400fb23:	pop    ebp
6400fb24:	ret    
6400fb25:	int3   
6400fb26:	int3   
6400fb27:	int3   
6400fb28:	int3   
6400fb29:	int3   
6400fb2a:	int3   
6400fb2b:	int3   
6400fb2c:	int3   
6400fb2d:	int3   
6400fb2e:	int3   
6400fb2f:	int3   
6400fb30:	push   ebp
6400fb31:	mov    ebp,esp
6400fb33:	and    esp,0xfffffff8
6400fb36:	push   0xffffffff
6400fb38:	push   0x6402402e
6400fb3d:	mov    eax,fs:0x0
6400fb43:	push   eax
6400fb44:	push   ecx
6400fb45:	push   ebx
6400fb46:	push   esi
6400fb47:	mov    eax,ds:0x6402f09c
6400fb4c:	xor    eax,esp
6400fb4e:	push   eax
6400fb4f:	lea    eax,[esp+0x10]
6400fb53:	mov    fs:0x0,eax
6400fb59:	mov    ebx,0x1
6400fb5e:	test   BYTE PTR ds:0x64033364,bl
6400fb64:	jne    0x6400fbee
6400fb6a:	or     DWORD PTR ds:0x64033364,ebx
6400fb70:	push   0x6402b374
6400fb75:	push   0x10
6400fb77:	push   0x6402b39c
6400fb7c:	mov    DWORD PTR [esp+0x24],0x0
6400fb84:	call   0x64006690
6400fb89:	push   0x6402b3b0
6400fb8e:	push   0x8
6400fb90:	push   0x6402abdc
6400fb95:	mov    esi,eax
6400fb97:	call   0x64006950
6400fb9c:	add    esp,0x18
6400fb9f:	push   eax
6400fba0:	call   DWORD PTR ds:0x64026018
6400fba6:	add    DWORD PTR ds:0x64033270,ebx
6400fbac:	test   eax,eax
6400fbae:	je     0x6400fbd5
6400fbb0:	push   esi
6400fbb1:	push   eax
6400fbb2:	call   DWORD PTR ds:0x64026014
6400fbb8:	add    DWORD PTR ds:0x64033274,ebx
6400fbbe:	mov    ds:0x64033360,eax
6400fbc3:	mov    ecx,DWORD PTR [esp+0x10]
6400fbc7:	mov    DWORD PTR fs:0x0,ecx
6400fbce:	pop    ecx
6400fbcf:	pop    esi
6400fbd0:	pop    ebx
6400fbd1:	mov    esp,ebp
6400fbd3:	pop    ebp
6400fbd4:	ret    
6400fbd5:	xor    eax,eax
6400fbd7:	mov    ds:0x64033360,eax
6400fbdc:	mov    ecx,DWORD PTR [esp+0x10]
6400fbe0:	mov    DWORD PTR fs:0x0,ecx
6400fbe7:	pop    ecx
6400fbe8:	pop    esi
6400fbe9:	pop    ebx
6400fbea:	mov    esp,ebp
6400fbec:	pop    ebp
6400fbed:	ret    
6400fbee:	mov    eax,ds:0x64033360
6400fbf3:	mov    ecx,DWORD PTR [esp+0x10]
6400fbf7:	mov    DWORD PTR fs:0x0,ecx
6400fbfe:	pop    ecx
6400fbff:	pop    esi
6400fc00:	pop    ebx
6400fc01:	mov    esp,ebp
6400fc03:	pop    ebp
6400fc04:	ret    
6400fc05:	int3   
6400fc06:	int3   
6400fc07:	int3   
6400fc08:	int3   
6400fc09:	int3   
6400fc0a:	int3   
6400fc0b:	int3   
6400fc0c:	int3   
6400fc0d:	int3   
6400fc0e:	int3   
6400fc0f:	int3   
6400fc10:	push   ebp
6400fc11:	mov    ebp,esp
6400fc13:	and    esp,0xfffffff8
6400fc16:	push   0xffffffff
6400fc18:	push   0x64023ffe
6400fc1d:	mov    eax,fs:0x0
6400fc23:	push   eax
6400fc24:	push   ecx
6400fc25:	push   ebx
6400fc26:	push   esi
6400fc27:	mov    eax,ds:0x6402f09c
6400fc2c:	xor    eax,esp
6400fc2e:	push   eax
6400fc2f:	lea    eax,[esp+0x10]
6400fc33:	mov    fs:0x0,eax
6400fc39:	mov    ebx,0x1
6400fc3e:	test   BYTE PTR ds:0x6403335c,bl
6400fc44:	jne    0x6400fcce
6400fc4a:	or     DWORD PTR ds:0x6403335c,ebx
6400fc50:	push   0x6402b3d4
6400fc55:	push   0xd
6400fc57:	push   0x6402b3f8
6400fc5c:	mov    DWORD PTR [esp+0x24],0x0
6400fc64:	call   0x64006690
6400fc69:	push   0x6402b408
6400fc6e:	push   0x7
6400fc70:	push   0x6402b444
6400fc75:	mov    esi,eax
6400fc77:	call   0x64006950
6400fc7c:	add    esp,0x18
6400fc7f:	push   eax
6400fc80:	call   DWORD PTR ds:0x64026018
6400fc86:	add    DWORD PTR ds:0x64033270,ebx
6400fc8c:	test   eax,eax
6400fc8e:	je     0x6400fcb5
6400fc90:	push   esi
6400fc91:	push   eax
6400fc92:	call   DWORD PTR ds:0x64026014
6400fc98:	add    DWORD PTR ds:0x64033274,ebx
6400fc9e:	mov    ds:0x64033358,eax
6400fca3:	mov    ecx,DWORD PTR [esp+0x10]
6400fca7:	mov    DWORD PTR fs:0x0,ecx
6400fcae:	pop    ecx
6400fcaf:	pop    esi
6400fcb0:	pop    ebx
6400fcb1:	mov    esp,ebp
6400fcb3:	pop    ebp
6400fcb4:	ret    
6400fcb5:	xor    eax,eax
6400fcb7:	mov    ds:0x64033358,eax
6400fcbc:	mov    ecx,DWORD PTR [esp+0x10]
6400fcc0:	mov    DWORD PTR fs:0x0,ecx
6400fcc7:	pop    ecx
6400fcc8:	pop    esi
6400fcc9:	pop    ebx
6400fcca:	mov    esp,ebp
6400fccc:	pop    ebp
6400fccd:	ret    
6400fcce:	mov    eax,ds:0x64033358
6400fcd3:	mov    ecx,DWORD PTR [esp+0x10]
6400fcd7:	mov    DWORD PTR fs:0x0,ecx
6400fcde:	pop    ecx
6400fcdf:	pop    esi
6400fce0:	pop    ebx
6400fce1:	mov    esp,ebp
6400fce3:	pop    ebp
6400fce4:	ret    
6400fce5:	int3   
6400fce6:	int3   
6400fce7:	int3   
6400fce8:	int3   
6400fce9:	int3   
6400fcea:	int3   
6400fceb:	int3   
6400fcec:	int3   
6400fced:	int3   
6400fcee:	int3   
6400fcef:	int3   
6400fcf0:	push   ebp
6400fcf1:	mov    ebp,esp
6400fcf3:	and    esp,0xfffffff8
6400fcf6:	push   0xffffffff
6400fcf8:	push   0x64023fce
6400fcfd:	mov    eax,fs:0x0
6400fd03:	push   eax
6400fd04:	push   ecx
6400fd05:	push   ebx
6400fd06:	push   esi
6400fd07:	mov    eax,ds:0x6402f09c
6400fd0c:	xor    eax,esp
6400fd0e:	push   eax
6400fd0f:	lea    eax,[esp+0x10]
6400fd13:	mov    fs:0x0,eax
6400fd19:	mov    ebx,0x1
6400fd1e:	test   BYTE PTR ds:0x64033354,bl
6400fd24:	jne    0x6400fdae
6400fd2a:	or     DWORD PTR ds:0x64033354,ebx
6400fd30:	push   0x6402b454
6400fd35:	push   0xc
6400fd37:	push   0x6402b494
6400fd3c:	mov    DWORD PTR [esp+0x24],0x0
6400fd44:	call   0x64006690
6400fd49:	push   0x6402b4a4
6400fd4e:	push   0x5
6400fd50:	push   0x6402b4e0
6400fd55:	mov    esi,eax
6400fd57:	call   0x64006950
6400fd5c:	add    esp,0x18
6400fd5f:	push   eax
6400fd60:	call   DWORD PTR ds:0x64026018
6400fd66:	add    DWORD PTR ds:0x64033270,ebx
6400fd6c:	test   eax,eax
6400fd6e:	je     0x6400fd95
6400fd70:	push   esi
6400fd71:	push   eax
6400fd72:	call   DWORD PTR ds:0x64026014
6400fd78:	add    DWORD PTR ds:0x64033274,ebx
6400fd7e:	mov    ds:0x64033350,eax
6400fd83:	mov    ecx,DWORD PTR [esp+0x10]
6400fd87:	mov    DWORD PTR fs:0x0,ecx
6400fd8e:	pop    ecx
6400fd8f:	pop    esi
6400fd90:	pop    ebx
6400fd91:	mov    esp,ebp
6400fd93:	pop    ebp
6400fd94:	ret    
6400fd95:	xor    eax,eax
6400fd97:	mov    ds:0x64033350,eax
6400fd9c:	mov    ecx,DWORD PTR [esp+0x10]
6400fda0:	mov    DWORD PTR fs:0x0,ecx
6400fda7:	pop    ecx
6400fda8:	pop    esi
6400fda9:	pop    ebx
6400fdaa:	mov    esp,ebp
6400fdac:	pop    ebp
6400fdad:	ret    
6400fdae:	mov    eax,ds:0x64033350
6400fdb3:	mov    ecx,DWORD PTR [esp+0x10]
6400fdb7:	mov    DWORD PTR fs:0x0,ecx
6400fdbe:	pop    ecx
6400fdbf:	pop    esi
6400fdc0:	pop    ebx
6400fdc1:	mov    esp,ebp
6400fdc3:	pop    ebp
6400fdc4:	ret    
6400fdc5:	int3   
6400fdc6:	int3   
6400fdc7:	int3   
6400fdc8:	int3   
6400fdc9:	int3   
6400fdca:	int3   
6400fdcb:	int3   
6400fdcc:	int3   
6400fdcd:	int3   
6400fdce:	int3   
6400fdcf:	int3   
6400fdd0:	push   esi
6400fdd1:	push   edi
6400fdd2:	mov    edi,DWORD PTR [esp+0xc]
6400fdd6:	mov    esi,DWORD PTR [edi+0xc]
6400fdd9:	cmp    esi,DWORD PTR [edi+0x14]
6400fddc:	je     0x6400fdf4
6400fdde:	mov    edi,edi
6400fde0:	mov    eax,DWORD PTR [esi-0x4]
6400fde3:	mov    ecx,DWORD PTR [esi-0x8]
6400fde6:	push   eax
6400fde7:	call   ecx
6400fde9:	add    esi,0xfffffff8
6400fdec:	add    esp,0x4
6400fdef:	cmp    esi,DWORD PTR [edi+0x14]
6400fdf2:	jne    0x6400fde0
6400fdf4:	mov    edx,DWORD PTR [edi+0x14]
6400fdf7:	push   edx
6400fdf8:	call   0x64014af6
6400fdfd:	mov    edi,DWORD PTR [edi+0x8]
6400fe00:	mov    esi,DWORD PTR [edi]
6400fe02:	push   edi
6400fe03:	call   0x64014af6
6400fe08:	add    esp,0x8
6400fe0b:	test   esi,esi
6400fe0d:	je     0x6400fe21
6400fe0f:	nop
6400fe10:	mov    eax,esi
6400fe12:	mov    esi,DWORD PTR [esi]
6400fe14:	push   eax
6400fe15:	call   0x64014af6
6400fe1a:	add    esp,0x4
6400fe1d:	test   esi,esi
6400fe1f:	jne    0x6400fe10
6400fe21:	pop    edi
6400fe22:	pop    esi
6400fe23:	ret    
6400fe24:	int3   
6400fe25:	int3   
6400fe26:	int3   
6400fe27:	int3   
6400fe28:	int3   
6400fe29:	int3   
6400fe2a:	int3   
6400fe2b:	int3   
6400fe2c:	int3   
6400fe2d:	int3   
6400fe2e:	int3   
6400fe2f:	int3   
6400fe30:	push   esi
6400fe31:	mov    esi,DWORD PTR [esp+0x8]
6400fe35:	push   edi
6400fe36:	mov    edi,DWORD PTR [esp+0x10]
6400fe3a:	lea    eax,[edi+0x4]
6400fe3d:	push   eax
6400fe3e:	mov    DWORD PTR [esi+0x18],edi
6400fe41:	call   0x64014bd3
6400fe46:	xor    ecx,ecx
6400fe48:	add    esp,0x4
6400fe4b:	cmp    eax,ecx
6400fe4d:	je     0x6400fe6a
6400fe4f:	mov    DWORD PTR [esi+0x8],eax
6400fe52:	mov    DWORD PTR [esi],edi
6400fe54:	lea    edx,[eax+0x4]
6400fe57:	mov    DWORD PTR [esi+0x4],edx
6400fe5a:	mov    DWORD PTR [eax],ecx
6400fe5c:	pop    edi
6400fe5d:	mov    DWORD PTR [esi+0xc],ecx
6400fe60:	mov    DWORD PTR [esi+0x10],ecx
6400fe63:	mov    DWORD PTR [esi+0x14],ecx
6400fe66:	mov    al,0x1
6400fe68:	pop    esi
6400fe69:	ret    
6400fe6a:	pop    edi
6400fe6b:	xor    al,al
6400fe6d:	pop    esi
6400fe6e:	ret    
6400fe6f:	int3   
6400fe70:	mov    ecx,DWORD PTR [ebx]
6400fe72:	push   esi
6400fe73:	mov    esi,eax
6400fe75:	add    esi,0x3
6400fe78:	and    esi,0xfffffffc
6400fe7b:	cmp    ecx,esi
6400fe7d:	jae    0x6400feb3
6400fe7f:	push   edi
6400fe80:	mov    edi,DWORD PTR [ebx+0x18]
6400fe83:	cmp    edi,esi
6400fe85:	jae    0x6400fe8d
6400fe87:	add    edi,edi
6400fe89:	cmp    edi,esi
6400fe8b:	jb     0x6400fe87
6400fe8d:	lea    eax,[edi+0x4]
6400fe90:	push   eax
6400fe91:	call   0x64014bd3
6400fe96:	mov    edx,DWORD PTR [ebx+0x8]
6400fe99:	mov    DWORD PTR [eax],edx
6400fe9b:	add    esp,0x4
6400fe9e:	sub    edi,esi
6400fea0:	lea    ecx,[eax+0x4]
6400fea3:	mov    DWORD PTR [ebx+0x8],eax
6400fea6:	lea    eax,[ecx+esi*1]
6400fea9:	mov    DWORD PTR [ebx],edi
6400feab:	pop    edi
6400feac:	mov    DWORD PTR [ebx+0x4],eax
6400feaf:	mov    eax,ecx
6400feb1:	pop    esi
6400feb2:	ret    
6400feb3:	mov    eax,DWORD PTR [ebx+0x4]
6400feb6:	sub    ecx,esi
6400feb8:	mov    DWORD PTR [ebx],ecx
6400feba:	lea    ecx,[eax+esi*1]
6400febd:	mov    DWORD PTR [ebx+0x4],ecx
6400fec0:	pop    esi
6400fec1:	ret    
6400fec2:	int3   
6400fec3:	int3   
6400fec4:	int3   
6400fec5:	int3   
6400fec6:	int3   
6400fec7:	int3   
6400fec8:	int3   
6400fec9:	int3   
6400feca:	int3   
6400fecb:	int3   
6400fecc:	int3   
6400fecd:	int3   
6400fece:	int3   
6400fecf:	int3   
6400fed0:	push   ebx
6400fed1:	mov    DWORD PTR [esi],0x6
6400fed7:	mov    DWORD PTR [esi+0x8],0x0
6400fede:	mov    ebx,DWORD PTR [ecx]
6400fee0:	shl    eax,0x4
6400fee3:	call   0x6400fe70
6400fee8:	mov    DWORD PTR [esi+0xc],eax
6400feeb:	neg    eax
6400feed:	sbb    eax,eax
6400feef:	neg    eax
6400fef1:	sub    eax,0x1
6400fef4:	pop    ebx
6400fef5:	ret    
6400fef6:	int3   
6400fef7:	int3   
6400fef8:	int3   
6400fef9:	int3   
6400fefa:	int3   
6400fefb:	int3   
6400fefc:	int3   
6400fefd:	int3   
6400fefe:	int3   
6400feff:	int3   
6400ff00:	push   ebx
6400ff01:	mov    DWORD PTR [esi],0x7
6400ff07:	mov    DWORD PTR [esi+0x8],0x0
6400ff0e:	mov    ebx,DWORD PTR [ecx]
6400ff10:	shl    eax,0x5
6400ff13:	call   0x6400fe70
6400ff18:	mov    DWORD PTR [esi+0xc],eax
6400ff1b:	neg    eax
6400ff1d:	sbb    eax,eax
6400ff1f:	neg    eax
6400ff21:	sub    eax,0x1
6400ff24:	pop    ebx
6400ff25:	ret    
6400ff26:	int3   
6400ff27:	int3   
6400ff28:	int3   
6400ff29:	int3   
6400ff2a:	int3   
6400ff2b:	int3   
6400ff2c:	int3   
6400ff2d:	int3   
6400ff2e:	int3   
6400ff2f:	int3   
6400ff30:	int3   
6400ff31:	int3   
6400ff32:	int3   
6400ff33:	int3   
6400ff34:	int3   
6400ff35:	int3   
6400ff36:	int3   
6400ff37:	int3   
6400ff38:	int3   
6400ff39:	int3   
6400ff3a:	int3   
6400ff3b:	int3   
6400ff3c:	int3   
6400ff3d:	int3   
6400ff3e:	int3   
6400ff3f:	int3   
6400ff40:	sub    esp,0x44
6400ff43:	mov    eax,DWORD PTR [esp+0x54]
6400ff47:	mov    edx,DWORD PTR [esp+0x4c]
6400ff4b:	mov    ecx,DWORD PTR [esp+0x48]
6400ff4f:	mov    eax,DWORD PTR [eax]
6400ff51:	push   ebx
6400ff52:	push   ebp
6400ff53:	push   esi
6400ff54:	mov    esi,DWORD PTR [esp+0x5c]
6400ff58:	add    eax,edx
6400ff5a:	add    edx,esi
6400ff5c:	mov    esi,DWORD PTR [ecx+0xc]
6400ff5f:	mov    DWORD PTR [esp+0x18],esi
6400ff63:	mov    esi,DWORD PTR [ecx+0x8]
6400ff66:	mov    ecx,DWORD PTR [ecx+0x10]
6400ff69:	push   edi
6400ff6a:	xor    edi,edi
6400ff6c:	cmp    eax,edx
6400ff6e:	mov    DWORD PTR [esp+0x60],ecx
6400ff72:	mov    DWORD PTR [esp+0x14],eax
6400ff76:	mov    DWORD PTR [esp+0x20],edx
6400ff7a:	mov    DWORD PTR [esp+0x18],esi
6400ff7e:	lea    ecx,[edi+0x20]
6400ff81:	je     0x64010801
6400ff87:	mov    ebp,DWORD PTR [esp+0x38]
6400ff8b:	jmp    0x6400ff90
6400ff8d:	lea    ecx,[ecx+0x0]
6400ff90:	mov    eax,DWORD PTR [esp+0x18]
6400ff94:	test   eax,eax
6400ff96:	mov    ebx,DWORD PTR [esp+0x14]
6400ff9a:	jne    0x640100af
6400ffa0:	mov    al,BYTE PTR [ebx]
6400ffa2:	cmp    al,0x7f
6400ffa4:	ja     0x6400ffba
6400ffa6:	movzx  eax,al
6400ffa9:	cdq    
6400ffaa:	mov    ebx,0x2
6400ffaf:	mov    ebp,eax
6400ffb1:	mov    DWORD PTR [esp+0x3c],edx
6400ffb5:	jmp    0x6401068c
6400ffba:	cmp    al,0xe0
6400ffbc:	jb     0x6400ffe2
6400ffbe:	cmp    al,0xff
6400ffc0:	ja     0x6400ffe2
6400ffc2:	test   al,al
6400ffc4:	movsx  eax,al
6400ffc7:	cdq    
6400ffc8:	mov    ebp,eax
6400ffca:	mov    DWORD PTR [esp+0x3c],edx
6400ffce:	mov    DWORD PTR [esp+0x38],ebp
6400ffd2:	jl     0x640102eb
6400ffd8:	mov    ebx,0x2
6400ffdd:	jmp    0x64010690
6400ffe2:	cmp    al,0xc0
6400ffe4:	jb     0x6401007e
6400ffea:	cmp    al,0xdf
6400ffec:	ja     0x6401007e
6400fff2:	movzx  eax,al
6400fff5:	lea    ecx,[eax-0xc0]
6400fffb:	cmp    ecx,0x1f
6400fffe:	ja     0x64010805
64010004:	movzx  ecx,BYTE PTR [ecx+0x64010850]
6401000b:	jmp    DWORD PTR [ecx*4+0x64010838]
64010012:	xor    ebx,ebx
64010014:	jmp    0x64010690
64010019:	mov    BYTE PTR [esp+0x38],0x0
6401001e:	mov    ebp,DWORD PTR [esp+0x38]
64010022:	mov    ebx,0x1
64010027:	jmp    0x64010690
6401002c:	mov    ebx,0x1
64010031:	mov    BYTE PTR [esp+0x38],bl
64010035:	mov    ebp,DWORD PTR [esp+0x38]
64010039:	jmp    0x64010690
6401003e:	mov    ecx,eax
64010040:	and    ecx,0x3
64010043:	mov    esi,0x1
64010048:	shl    esi,cl
6401004a:	and    eax,0x1f
6401004d:	add    ebx,0x1
64010050:	mov    DWORD PTR [esp+0x18],eax
64010054:	mov    DWORD PTR [esp+0x1c],esi
64010058:	mov    DWORD PTR [esp+0x14],ebx
6401005c:	jmp    0x640100b3
6401005e:	mov    ecx,eax
64010060:	and    ecx,0x1
64010063:	mov    esi,0x2
64010068:	shl    esi,cl
6401006a:	and    eax,0x1f
6401006d:	add    ebx,0x1
64010070:	mov    DWORD PTR [esp+0x18],eax
64010074:	mov    DWORD PTR [esp+0x1c],esi
64010078:	mov    DWORD PTR [esp+0x14],ebx
6401007c:	jmp    0x640100b3
6401007e:	cmp    al,0xa0
64010080:	jb     0x640105e2
64010086:	cmp    al,0xbf
64010088:	ja     0x640105e2
6401008e:	and    eax,0x1f
64010091:	mov    esi,eax
64010093:	mov    DWORD PTR [esp+0x1c],esi
64010097:	je     0x6401038d
6401009d:	mov    eax,0x20
640100a2:	add    ebx,0x1
640100a5:	mov    DWORD PTR [esp+0x18],eax
640100a9:	mov    DWORD PTR [esp+0x14],ebx
640100ad:	jmp    0x640100b3
640100af:	mov    esi,DWORD PTR [esp+0x1c]
640100b3:	mov    ecx,edx
640100b5:	sub    ecx,ebx
640100b7:	cmp    ecx,esi
640100b9:	jb     0x64010801
640100bf:	mov    edi,ebx
640100c1:	add    eax,0xfffffff6
640100c4:	cmp    eax,0x16
640100c7:	lea    ebx,[ebx+esi*1-0x1]
640100cb:	mov    DWORD PTR [esp+0x14],ebx
640100cf:	ja     0x64010805
640100d5:	jmp    DWORD PTR [eax*4+0x64010870]
640100dc:	xor    eax,eax
640100de:	mov    ah,BYTE PTR [edi]
640100e0:	mov    al,BYTE PTR [edi+0x1]
640100e3:	mov    esi,eax
640100e5:	test   esi,esi
640100e7:	jmp    0x64010093
640100e9:	movzx  eax,BYTE PTR [edi+0x2]
640100ed:	xor    ecx,ecx
640100ef:	mov    ch,BYTE PTR [edi]
640100f1:	mov    cl,BYTE PTR [edi+0x1]
640100f4:	shl    ecx,0x8
640100f7:	or     ecx,eax
640100f9:	movzx  eax,BYTE PTR [edi+0x3]
640100fd:	shl    ecx,0x8
64010100:	or     ecx,eax
64010102:	mov    esi,ecx
64010104:	jmp    0x64010093
64010106:	movzx  edx,BYTE PTR [edi+0x2]
6401010a:	movzx  eax,BYTE PTR [edi+0x3]
6401010e:	xor    ecx,ecx
64010110:	mov    ch,BYTE PTR [edi]
64010112:	mov    ebx,0x4
64010117:	mov    cl,BYTE PTR [edi+0x1]
6401011a:	shl    ecx,0x8
6401011d:	or     ecx,edx
6401011f:	shl    ecx,0x8
64010122:	or     ecx,eax
64010124:	mov    DWORD PTR [esp+0x24],ecx
64010128:	fld    DWORD PTR [esp+0x24]
6401012c:	fstp   QWORD PTR [esp+0x38]
64010130:	mov    ebp,DWORD PTR [esp+0x38]
64010134:	jmp    0x64010690
64010139:	movzx  eax,BYTE PTR [edi]
6401013c:	cdq    
6401013d:	shld   edx,eax,0x8
64010141:	shl    eax,0x8
64010144:	mov    ecx,eax
64010146:	movzx  eax,BYTE PTR [edi+0x1]
6401014a:	mov    esi,edx
6401014c:	cdq    
6401014d:	or     ecx,eax
6401014f:	movzx  eax,BYTE PTR [edi+0x2]
64010153:	or     esi,edx
64010155:	shld   esi,ecx,0x8
64010159:	shl    ecx,0x8
6401015c:	cdq    
6401015d:	or     ecx,eax
6401015f:	movzx  eax,BYTE PTR [edi+0x3]
64010163:	or     esi,edx
64010165:	shld   esi,ecx,0x8
64010169:	shl    ecx,0x8
6401016c:	cdq    
6401016d:	or     ecx,eax
6401016f:	movzx  eax,BYTE PTR [edi+0x4]
64010173:	or     esi,edx
64010175:	shld   esi,ecx,0x8
64010179:	shl    ecx,0x8
6401017c:	cdq    
6401017d:	or     ecx,eax
6401017f:	movzx  eax,BYTE PTR [edi+0x5]
64010183:	or     esi,edx
64010185:	shld   esi,ecx,0x8
64010189:	shl    ecx,0x8
6401018c:	cdq    
6401018d:	or     ecx,eax
6401018f:	movzx  eax,BYTE PTR [edi+0x6]
64010193:	or     esi,edx
64010195:	shld   esi,ecx,0x8
64010199:	shl    ecx,0x8
6401019c:	cdq    
6401019d:	or     ecx,eax
6401019f:	movzx  eax,BYTE PTR [edi+0x7]
640101a3:	or     esi,edx
640101a5:	shld   esi,ecx,0x8
640101a9:	cdq    
640101aa:	shl    ecx,0x8
640101ad:	or     ecx,eax
640101af:	or     esi,edx
640101b1:	mov    DWORD PTR [esp+0x28],ecx
640101b5:	mov    DWORD PTR [esp+0x2c],esi
640101b9:	mov    ebx,0x4
640101be:	fld    QWORD PTR [esp+0x28]
640101c2:	fstp   QWORD PTR [esp+0x38]
640101c6:	mov    ebp,DWORD PTR [esp+0x38]
640101ca:	jmp    0x64010690
640101cf:	movzx  eax,BYTE PTR [edi]
640101d2:	cdq    
640101d3:	mov    ebx,0x2
640101d8:	mov    ebp,eax
640101da:	mov    DWORD PTR [esp+0x3c],edx
640101de:	jmp    0x6401068c
640101e3:	xor    edx,edx
640101e5:	mov    dh,BYTE PTR [edi]
640101e7:	mov    ebx,0x2
640101ec:	mov    dl,BYTE PTR [edi+0x1]
640101ef:	movzx  eax,dx
640101f2:	cdq    
640101f3:	mov    ebp,eax
640101f5:	mov    DWORD PTR [esp+0x3c],edx
640101f9:	jmp    0x6401068c
640101fe:	movzx  ecx,BYTE PTR [edi+0x2]
64010202:	movzx  edx,BYTE PTR [edi+0x3]
64010206:	xor    eax,eax
64010208:	mov    ah,BYTE PTR [edi]
6401020a:	mov    ebx,0x2
6401020f:	mov    DWORD PTR [esp+0x3c],0x0
64010217:	mov    al,BYTE PTR [edi+0x1]
6401021a:	shl    eax,0x8
6401021d:	or     eax,ecx
6401021f:	shl    eax,0x8
64010222:	or     eax,edx
64010224:	mov    ebp,eax
64010226:	jmp    0x6401068c
6401022b:	movzx  eax,BYTE PTR [edi]
6401022e:	cdq    
6401022f:	shld   edx,eax,0x8
64010233:	shl    eax,0x8
64010236:	mov    ecx,eax
64010238:	movzx  eax,BYTE PTR [edi+0x1]
6401023c:	mov    esi,edx
6401023e:	cdq    
6401023f:	or     ecx,eax
64010241:	movzx  eax,BYTE PTR [edi+0x2]
64010245:	or     esi,edx
64010247:	shld   esi,ecx,0x8
6401024b:	shl    ecx,0x8
6401024e:	cdq    
6401024f:	or     ecx,eax
64010251:	movzx  eax,BYTE PTR [edi+0x3]
64010255:	or     esi,edx
64010257:	shld   esi,ecx,0x8
6401025b:	shl    ecx,0x8
6401025e:	cdq    
6401025f:	or     ecx,eax
64010261:	movzx  eax,BYTE PTR [edi+0x4]
64010265:	or     esi,edx
64010267:	shld   esi,ecx,0x8
6401026b:	shl    ecx,0x8
6401026e:	cdq    
6401026f:	or     ecx,eax
64010271:	movzx  eax,BYTE PTR [edi+0x5]
64010275:	or     esi,edx
64010277:	shld   esi,ecx,0x8
6401027b:	shl    ecx,0x8
6401027e:	cdq    
6401027f:	or     ecx,eax
64010281:	movzx  eax,BYTE PTR [edi+0x6]
64010285:	or     esi,edx
64010287:	shld   esi,ecx,0x8
6401028b:	cdq    
6401028c:	shl    ecx,0x8
6401028f:	or     ecx,eax
64010291:	movzx  eax,BYTE PTR [edi+0x7]
64010295:	or     esi,edx
64010297:	mov    ebp,ecx
64010299:	mov    ecx,esi
6401029b:	shld   ecx,ebp,0x8
6401029f:	cdq    
640102a0:	shl    ebp,0x8
640102a3:	or     ebp,eax
640102a5:	mov    ebx,0x2
640102aa:	or     ecx,edx
640102ac:	jmp    0x64010688
640102b1:	mov    al,BYTE PTR [edi]
640102b3:	jmp    0x6400ffc2
640102b8:	xor    edx,edx
640102ba:	mov    dh,BYTE PTR [edi]
640102bc:	mov    dl,BYTE PTR [edi+0x1]
640102bf:	movzx  eax,dx
640102c2:	test   ax,ax
640102c5:	movsx  eax,ax
640102c8:	jmp    0x6400ffc7
640102cd:	movzx  ecx,BYTE PTR [edi+0x2]
640102d1:	movzx  edx,BYTE PTR [edi+0x3]
640102d5:	xor    eax,eax
640102d7:	mov    ah,BYTE PTR [edi]
640102d9:	mov    al,BYTE PTR [edi+0x1]
640102dc:	shl    eax,0x8
640102df:	or     eax,ecx
640102e1:	shl    eax,0x8
640102e4:	or     eax,edx
640102e6:	jmp    0x6400ffc7
640102eb:	mov    ebx,0x3
640102f0:	jmp    0x64010690
640102f5:	movzx  eax,BYTE PTR [edi]
640102f8:	cdq    
640102f9:	shld   edx,eax,0x8
640102fd:	shl    eax,0x8
64010300:	mov    ecx,eax
64010302:	movzx  eax,BYTE PTR [edi+0x1]
64010306:	mov    esi,edx
64010308:	cdq    
64010309:	or     ecx,eax
6401030b:	movzx  eax,BYTE PTR [edi+0x2]
6401030f:	or     esi,edx
64010311:	shld   esi,ecx,0x8
64010315:	shl    ecx,0x8
64010318:	cdq    
64010319:	or     ecx,eax
6401031b:	movzx  eax,BYTE PTR [edi+0x3]
6401031f:	or     esi,edx
64010321:	shld   esi,ecx,0x8
64010325:	shl    ecx,0x8
64010328:	cdq    
64010329:	or     ecx,eax
6401032b:	movzx  eax,BYTE PTR [edi+0x4]
6401032f:	or     esi,edx
64010331:	shld   esi,ecx,0x8
64010335:	shl    ecx,0x8
64010338:	cdq    
64010339:	or     ecx,eax
6401033b:	movzx  eax,BYTE PTR [edi+0x5]
6401033f:	or     esi,edx
64010341:	shld   esi,ecx,0x8
64010345:	shl    ecx,0x8
64010348:	cdq    
64010349:	or     ecx,eax
6401034b:	movzx  eax,BYTE PTR [edi+0x6]
6401034f:	or     esi,edx
64010351:	shld   esi,ecx,0x8
64010355:	cdq    
64010356:	shl    ecx,0x8
64010359:	or     ecx,eax
6401035b:	movzx  eax,BYTE PTR [edi+0x7]
6401035f:	or     esi,edx
64010361:	mov    ebp,ecx
64010363:	mov    ecx,esi
64010365:	shld   ecx,ebp,0x8
64010369:	cdq    
6401036a:	shl    ebp,0x8
6401036d:	or     ebp,eax
6401036f:	or     ecx,edx
64010371:	jl     0x64010383
64010373:	jg     0x64010379
64010375:	test   ebp,ebp
64010377:	jb     0x64010383
64010379:	mov    ebx,0x2
6401037e:	jmp    0x64010688
64010383:	mov    ebx,0x3
64010388:	jmp    0x64010688
6401038d:	mov    edx,DWORD PTR [esp+0x58]
64010391:	mov    ebx,0x5
64010396:	mov    DWORD PTR [esp+0x3c],edi
6401039a:	mov    ebp,esi
6401039c:	mov    BYTE PTR [edx+0x4],0x1
640103a0:	jmp    0x6401068c
640103a5:	cmp    DWORD PTR [esp+0x60],0x20
640103aa:	jae    0x64010805
640103b0:	mov    eax,DWORD PTR [esp+0x60]
640103b4:	mov    ecx,DWORD PTR [esp+0x58]
640103b8:	lea    eax,[eax+eax*4]
640103bb:	lea    esi,[ecx+eax*8+0x18]
640103bf:	xor    eax,eax
640103c1:	mov    ah,BYTE PTR [edi]
640103c3:	mov    al,BYTE PTR [edi+0x1]
640103c6:	mov    DWORD PTR [esi],0x6
640103cc:	mov    DWORD PTR [esi+0x8],0x0
640103d3:	mov    ebx,DWORD PTR [ecx]
640103d5:	shl    eax,0x4
640103d8:	call   0x6400fe70
640103dd:	test   eax,eax
640103df:	mov    DWORD PTR [esi+0xc],eax
640103e2:	je     0x64010805
640103e8:	xor    ecx,ecx
640103ea:	mov    ch,BYTE PTR [edi]
640103ec:	mov    cl,BYTE PTR [edi+0x1]
640103ef:	test   cx,cx
640103f2:	jne    0x64010409
640103f4:	mov    edx,DWORD PTR [esi+0x4]
640103f7:	mov    ebx,DWORD PTR [esi]
640103f9:	mov    ebp,DWORD PTR [esi+0x8]
640103fc:	mov    DWORD PTR [esp+0x34],edx
64010400:	mov    DWORD PTR [esp+0x3c],eax
64010404:	jmp    0x6401068c
64010409:	xor    ecx,ecx
6401040b:	add    DWORD PTR [esp+0x60],0x1
64010410:	mov    DWORD PTR [esi+0x14],0x0
64010417:	mov    ch,BYTE PTR [edi]
64010419:	mov    cl,BYTE PTR [edi+0x1]
6401041c:	mov    DWORD PTR [esi+0x10],ecx
6401041f:	jmp    0x640107ba
64010424:	cmp    DWORD PTR [esp+0x60],0x20
64010429:	jae    0x64010805
6401042f:	mov    eax,DWORD PTR [esp+0x60]
64010433:	mov    ecx,DWORD PTR [esp+0x58]
64010437:	lea    edx,[eax+eax*4]
6401043a:	xor    eax,eax
6401043c:	mov    ah,BYTE PTR [edi]
6401043e:	lea    esi,[ecx+edx*8+0x18]
64010442:	movzx  edx,BYTE PTR [edi+0x2]
64010446:	mov    al,BYTE PTR [edi+0x1]
64010449:	shl    eax,0x8
6401044c:	or     eax,edx
6401044e:	movzx  edx,BYTE PTR [edi+0x3]
64010452:	shl    eax,0x8
64010455:	or     eax,edx
64010457:	mov    DWORD PTR [esi],0x6
6401045d:	mov    DWORD PTR [esi+0x8],0x0
64010464:	mov    ebx,DWORD PTR [ecx]
64010466:	shl    eax,0x4
64010469:	call   0x6400fe70
6401046e:	test   eax,eax
64010470:	mov    DWORD PTR [esi+0xc],eax
64010473:	je     0x64010805
64010479:	movzx  ecx,BYTE PTR [edi+0x2]
6401047d:	movzx  edx,BYTE PTR [edi+0x3]
64010481:	xor    eax,eax
64010483:	mov    ah,BYTE PTR [edi]
64010485:	mov    al,BYTE PTR [edi+0x1]
64010488:	shl    eax,0x8
6401048b:	or     eax,ecx
6401048d:	shl    eax,0x8
64010490:	or     eax,edx
64010492:	je     0x64010679
64010498:	xor    edx,edx
6401049a:	mov    DWORD PTR [esi+0x14],0x0
640104a1:	mov    dh,BYTE PTR [edi]
640104a3:	movzx  eax,BYTE PTR [edi+0x2]
640104a7:	movzx  ecx,BYTE PTR [edi+0x3]
640104ab:	mov    dl,BYTE PTR [edi+0x1]
640104ae:	shl    edx,0x8
640104b1:	or     edx,eax
640104b3:	shl    edx,0x8
640104b6:	or     edx,ecx
640104b8:	add    DWORD PTR [esp+0x60],0x1
640104bd:	jmp    0x640107b7
640104c2:	cmp    DWORD PTR [esp+0x60],0x20
640104c7:	jae    0x64010805
640104cd:	mov    eax,DWORD PTR [esp+0x60]
640104d1:	mov    ecx,DWORD PTR [esp+0x58]
640104d5:	lea    edx,[eax+eax*4]
640104d8:	xor    eax,eax
640104da:	mov    ah,BYTE PTR [edi]
640104dc:	lea    esi,[ecx+edx*8+0x18]
640104e0:	mov    al,BYTE PTR [edi+0x1]
640104e3:	mov    DWORD PTR [esi],0x7
640104e9:	mov    DWORD PTR [esi+0x8],0x0
640104f0:	mov    ebx,DWORD PTR [ecx]
640104f2:	shl    eax,0x5
640104f5:	call   0x6400fe70
640104fa:	test   eax,eax
640104fc:	mov    DWORD PTR [esi+0xc],eax
640104ff:	je     0x64010805
64010505:	xor    eax,eax
64010507:	mov    ah,BYTE PTR [edi]
64010509:	mov    al,BYTE PTR [edi+0x1]
6401050c:	test   ax,ax
6401050f:	jne    0x64010529
64010511:	mov    ecx,DWORD PTR [esi+0x4]
64010514:	mov    edx,DWORD PTR [esi+0xc]
64010517:	mov    ebx,DWORD PTR [esi]
64010519:	mov    ebp,DWORD PTR [esi+0x8]
6401051c:	mov    DWORD PTR [esp+0x34],ecx
64010520:	mov    DWORD PTR [esp+0x3c],edx
64010524:	jmp    0x6401068c
64010529:	xor    ecx,ecx
6401052b:	mov    eax,0x1
64010530:	add    DWORD PTR [esp+0x60],eax
64010534:	mov    DWORD PTR [esi+0x14],eax
64010537:	mov    ch,BYTE PTR [edi]
64010539:	mov    cl,BYTE PTR [edi+0x1]
6401053c:	mov    DWORD PTR [esi+0x10],ecx
6401053f:	jmp    0x640107ba
64010544:	cmp    DWORD PTR [esp+0x60],0x20
64010549:	jae    0x64010805
6401054f:	mov    eax,DWORD PTR [esp+0x60]
64010553:	mov    ecx,DWORD PTR [esp+0x58]
64010557:	lea    edx,[eax+eax*4]
6401055a:	xor    eax,eax
6401055c:	mov    ah,BYTE PTR [edi]
6401055e:	lea    esi,[ecx+edx*8+0x18]
64010562:	movzx  edx,BYTE PTR [edi+0x2]
64010566:	mov    al,BYTE PTR [edi+0x1]
64010569:	shl    eax,0x8
6401056c:	or     eax,edx
6401056e:	movzx  edx,BYTE PTR [edi+0x3]
64010572:	shl    eax,0x8
64010575:	or     eax,edx
64010577:	mov    DWORD PTR [esi],0x7
6401057d:	mov    DWORD PTR [esi+0x8],0x0
64010584:	mov    ebx,DWORD PTR [ecx]
64010586:	shl    eax,0x5
64010589:	call   0x6400fe70
6401058e:	test   eax,eax
64010590:	mov    DWORD PTR [esi+0xc],eax
64010593:	je     0x64010805
64010599:	movzx  ecx,BYTE PTR [edi+0x2]
6401059d:	movzx  edx,BYTE PTR [edi+0x3]
640105a1:	xor    eax,eax
640105a3:	mov    ah,BYTE PTR [edi]
640105a5:	mov    al,BYTE PTR [edi+0x1]
640105a8:	shl    eax,0x8
640105ab:	or     eax,ecx
640105ad:	shl    eax,0x8
640105b0:	or     eax,edx
640105b2:	je     0x64010679
640105b8:	xor    edx,edx
640105ba:	mov    eax,0x1
640105bf:	mov    DWORD PTR [esi+0x14],eax
640105c2:	mov    dh,BYTE PTR [edi]
640105c4:	movzx  ecx,BYTE PTR [edi+0x2]
640105c8:	mov    dl,BYTE PTR [edi+0x1]
640105cb:	shl    edx,0x8
640105ce:	or     edx,ecx
640105d0:	movzx  ecx,BYTE PTR [edi+0x3]
640105d4:	shl    edx,0x8
640105d7:	or     edx,ecx
640105d9:	add    DWORD PTR [esp+0x60],eax
640105dd:	jmp    0x640107b7
640105e2:	cmp    al,0x90
640105e4:	jb     0x64010633
640105e6:	cmp    al,0x9f
640105e8:	ja     0x64010633
640105ea:	cmp    DWORD PTR [esp+0x60],ecx
640105ee:	jae    0x64010805
640105f4:	mov    ecx,DWORD PTR [esp+0x60]
640105f8:	lea    edx,[ecx+ecx*4]
640105fb:	mov    ecx,DWORD PTR [esp+0x58]
640105ff:	lea    esi,[ecx+edx*8+0x18]
64010603:	and    eax,0xf
64010606:	call   0x6400fed0
6401060b:	test   eax,eax
6401060d:	jl     0x64010805
64010613:	mov    eax,DWORD PTR [esp+0x14]
64010617:	test   BYTE PTR [eax],0xf
6401061a:	je     0x64010679
6401061c:	mov    DWORD PTR [esi+0x14],0x0
64010623:	movzx  edx,BYTE PTR [eax]
64010626:	and    edx,0xf
64010629:	add    DWORD PTR [esp+0x60],0x1
6401062e:	jmp    0x640107b7
64010633:	cmp    al,0x80
64010635:	jb     0x64010805
6401063b:	cmp    al,0x8f
6401063d:	ja     0x64010805
64010643:	cmp    DWORD PTR [esp+0x60],ecx
64010647:	jae    0x64010805
6401064d:	mov    ecx,DWORD PTR [esp+0x60]
64010651:	lea    edx,[ecx+ecx*4]
64010654:	mov    ecx,DWORD PTR [esp+0x58]
64010658:	lea    esi,[ecx+edx*8+0x18]
6401065c:	and    eax,0xf
6401065f:	call   0x6400ff00
64010664:	test   eax,eax
64010666:	jl     0x64010805
6401066c:	mov    eax,DWORD PTR [esp+0x14]
64010670:	test   BYTE PTR [eax],0xf
64010673:	jne    0x640107a5
64010679:	mov    eax,DWORD PTR [esi+0x4]
6401067c:	mov    ecx,DWORD PTR [esi+0xc]
6401067f:	mov    ebp,DWORD PTR [esi+0x8]
64010682:	mov    ebx,DWORD PTR [esi]
64010684:	mov    DWORD PTR [esp+0x34],eax
64010688:	mov    DWORD PTR [esp+0x3c],ecx
6401068c:	mov    DWORD PTR [esp+0x38],ebp
64010690:	mov    eax,DWORD PTR [esp+0x60]
64010694:	lea    edx,[eax+eax*4]
64010697:	mov    eax,DWORD PTR [esp+0x58]
6401069b:	lea    edx,[eax+edx*8+0x18]
6401069f:	lea    eax,[edx-0x28]
640106a2:	add    edx,0xfffffff0
640106a5:	mov    esi,0x1
640106aa:	lea    ebx,[ebx+0x0]
640106b0:	cmp    DWORD PTR [esp+0x60],0x0
640106b5:	je     0x640107e1
640106bb:	mov    ecx,DWORD PTR [eax+0x14]
640106be:	sub    ecx,0x0
640106c1:	je     0x6401073d
640106c3:	sub    ecx,esi
640106c5:	je     0x64010788
640106cb:	sub    ecx,esi
640106cd:	jne    0x64010805
640106d3:	mov    ecx,DWORD PTR [edx+0x4]
640106d6:	mov    esi,DWORD PTR [edx]
640106d8:	mov    DWORD PTR [esp+0x44],ecx
640106dc:	mov    ecx,DWORD PTR [edx+0x8]
640106df:	mov    DWORD PTR [esp+0x48],ecx
640106e3:	mov    ecx,DWORD PTR [edx+0xc]
640106e6:	mov    DWORD PTR [esp+0x4c],ecx
640106ea:	mov    ecx,DWORD PTR [eax+0x8]
640106ed:	shl    ecx,0x5
640106f0:	add    ecx,DWORD PTR [eax+0xc]
640106f3:	mov    DWORD PTR [ecx],esi
640106f5:	mov    esi,DWORD PTR [esp+0x44]
640106f9:	mov    DWORD PTR [ecx+0x4],esi
640106fc:	mov    esi,DWORD PTR [esp+0x48]
64010700:	mov    DWORD PTR [ecx+0x8],esi
64010703:	mov    esi,DWORD PTR [esp+0x4c]
64010707:	mov    DWORD PTR [ecx+0xc],esi
6401070a:	mov    ecx,DWORD PTR [eax+0x8]
6401070d:	mov    esi,DWORD PTR [eax+0xc]
64010710:	shl    ecx,0x5
64010713:	lea    ecx,[ecx+esi*1+0x10]
64010717:	mov    esi,DWORD PTR [esp+0x34]
6401071b:	mov    DWORD PTR [ecx],ebx
6401071d:	mov    DWORD PTR [ecx+0x4],esi
64010720:	mov    esi,DWORD PTR [esp+0x3c]
64010724:	mov    DWORD PTR [ecx+0x8],ebp
64010727:	mov    DWORD PTR [ecx+0xc],esi
6401072a:	mov    esi,0x1
6401072f:	add    DWORD PTR [eax+0x8],esi
64010732:	add    DWORD PTR [eax+0x10],0xffffffff
64010736:	je     0x64010762
64010738:	mov    DWORD PTR [eax+0x14],esi
6401073b:	jmp    0x640107ba
6401073d:	mov    ecx,DWORD PTR [eax+0x8]
64010740:	shl    ecx,0x4
64010743:	add    ecx,DWORD PTR [eax+0xc]
64010746:	mov    DWORD PTR [ecx],ebx
64010748:	mov    ebx,DWORD PTR [esp+0x34]
6401074c:	mov    DWORD PTR [ecx+0x4],ebx
6401074f:	mov    ebx,DWORD PTR [esp+0x3c]
64010753:	mov    DWORD PTR [ecx+0x8],ebp
64010756:	mov    DWORD PTR [ecx+0xc],ebx
64010759:	add    DWORD PTR [eax+0x8],esi
6401075c:	add    DWORD PTR [eax+0x10],0xffffffff
64010760:	jne    0x640107ba
64010762:	mov    ecx,DWORD PTR [eax+0x4]
64010765:	mov    ebp,DWORD PTR [eax+0x8]
64010768:	mov    ebx,DWORD PTR [eax]
6401076a:	sub    DWORD PTR [esp+0x60],esi
6401076e:	mov    DWORD PTR [esp+0x34],ecx
64010772:	mov    ecx,DWORD PTR [eax+0xc]
64010775:	sub    eax,0x28
64010778:	mov    DWORD PTR [esp+0x38],ebp
6401077c:	mov    DWORD PTR [esp+0x3c],ecx
64010780:	sub    edx,0x28
64010783:	jmp    0x640106b0
64010788:	mov    edx,DWORD PTR [esp+0x34]
6401078c:	mov    ecx,DWORD PTR [esp+0x3c]
64010790:	mov    DWORD PTR [eax+0x18],ebx
64010793:	mov    DWORD PTR [eax+0x1c],edx
64010796:	mov    DWORD PTR [eax+0x20],ebp
64010799:	mov    DWORD PTR [eax+0x24],ecx
6401079c:	mov    DWORD PTR [eax+0x14],0x2
640107a3:	jmp    0x640107ba
640107a5:	mov    ecx,0x1
640107aa:	mov    DWORD PTR [esi+0x14],ecx
640107ad:	movzx  edx,BYTE PTR [eax]
640107b0:	and    edx,0xf
640107b3:	add    DWORD PTR [esp+0x60],ecx
640107b7:	mov    DWORD PTR [esi+0x10],edx
640107ba:	mov    eax,DWORD PTR [esp+0x14]
640107be:	add    eax,0x1
640107c1:	cmp    eax,DWORD PTR [esp+0x20]
640107c5:	mov    DWORD PTR [esp+0x18],0x0
640107cd:	mov    DWORD PTR [esp+0x14],eax
640107d1:	je     0x64010801
640107d3:	mov    edx,DWORD PTR [esp+0x20]
640107d7:	mov    ecx,0x20
640107dc:	jmp    0x6400ff90
640107e1:	mov    eax,DWORD PTR [esp+0x58]
640107e5:	mov    ecx,DWORD PTR [esp+0x34]
640107e9:	mov    edx,DWORD PTR [esp+0x3c]
640107ed:	add    DWORD PTR [esp+0x14],esi
640107f1:	mov    DWORD PTR [eax+0x18],ebx
640107f4:	mov    DWORD PTR [eax+0x1c],ecx
640107f7:	mov    DWORD PTR [eax+0x20],ebp
640107fa:	mov    DWORD PTR [eax+0x24],edx
640107fd:	mov    eax,esi
640107ff:	jmp    0x64010808
64010801:	xor    eax,eax
64010803:	jmp    0x64010808
64010805:	or     eax,0xffffffff
64010808:	mov    ecx,DWORD PTR [esp+0x58]
6401080c:	mov    edx,DWORD PTR [esp+0x18]
64010810:	mov    DWORD PTR [ecx+0x8],edx
64010813:	mov    edx,DWORD PTR [esp+0x1c]
64010817:	mov    DWORD PTR [ecx+0xc],edx
6401081a:	mov    edx,DWORD PTR [esp+0x60]
6401081e:	mov    DWORD PTR [ecx+0x10],edx
64010821:	mov    ecx,DWORD PTR [esp+0x14]
64010825:	sub    ecx,DWORD PTR [esp+0x5c]
64010829:	mov    edx,DWORD PTR [esp+0x64]
6401082d:	pop    edi
6401082e:	pop    esi
6401082f:	pop    ebp
64010830:	mov    DWORD PTR [edx],ecx
64010832:	pop    ebx
64010833:	add    esp,0x44
64010836:	ret    
64010837:	nop
64010838:	adc    al,BYTE PTR [eax]
6401083a:	add    DWORD PTR [ecx+ebx*1+0x0],esp
6401083e:	add    DWORD PTR [esp+ebp*1+0x0],esp
64010842:	add    DWORD PTR [esi+edi*1+0x0],esp
64010846:	add    DWORD PTR [esi+ebx*2+0x0],esp
6401084a:	add    DWORD PTR [ebp+eax*1+0x8],esp
6401084e:	add    DWORD PTR [eax+eax*1+0x5],esp
64010852:	add    DWORD PTR [edx],eax
64010854:	add    eax,0x5050505
64010859:	add    eax,0x3030303
6401085e:	add    eax,DWORD PTR [ebx]
64010860:	add    eax,DWORD PTR [ebx]
64010862:	add    eax,DWORD PTR [ebx]
64010864:	add    eax,0x5050505
64010869:	add    eax,0x4040404
6401086e:	add    al,0x4
64010870:	push   es
64010871:	add    DWORD PTR [ecx],eax
64010873:	cmp    DWORD PTR fs:[ecx],eax
64010876:	add    DWORD PTR [edi+ecx*8+0x1],esp
6401087a:	add    DWORD PTR [ebx+eiz*8+0x1],esp
6401087e:	add    DWORD PTR [esi+edi*8+0x1],esp
64010882:	add    DWORD PTR [ebx+ebp*1+0x2],esp
64010886:	add    DWORD PTR [ecx+esi*4+0x2],esp
6401088a:	add    DWORD PTR [eax+edi*4+0x2],esp
6401088e:	add    DWORD PTR [ebp+ecx*8+0x2],esp
64010892:	add    DWORD PTR [ebp+esi*8+0x2],esp
64010896:	add    DWORD PTR [ebp+eax*1+0x8],esp
6401089a:	add    DWORD PTR [ebp+eax*1+0x8],esp
6401089e:	add    DWORD PTR [ebp+eax*1+0x8],esp
640108a2:	add    DWORD PTR [ebp+eax*1+0x8],esp
640108a6:	add    DWORD PTR [ebp+eax*1+0x8],esp
640108aa:	add    DWORD PTR [ebp+eax*1+0x8],esp
640108ae:	add    DWORD PTR [esp+ebx*8+0x0],esp
640108b2:	add    DWORD PTR [ecx+ebp*8+0x0],esp
640108b6:	add    DWORD PTR [ebp+eiz*4+0x3],esp
640108ba:	add    DWORD PTR [esp+0x4],esp
640108be:	add    DWORD PTR [edx+eax*8+0x4],esp
640108c2:	add    DWORD PTR [esp+eax*2+0x5],esp
640108c6:	add    DWORD PTR [ebp+ecx*4+0x3],esp
640108ca:	add    DWORD PTR [esp+ecx*8-0x34],esp
640108ce:	int3   
640108cf:	int3   
640108d0:	push   ebp
640108d1:	mov    ebp,esp
640108d3:	and    esp,0xfffffff8
640108d6:	sub    esp,0x51c
640108dc:	push   ebx
640108dd:	push   esi
640108de:	mov    esi,DWORD PTR [ebp+0x10]
640108e1:	xor    ebx,ebx
640108e3:	xor    eax,eax
640108e5:	cmp    esi,ebx
640108e7:	push   edi
640108e8:	mov    DWORD PTR [esp+0xc],eax
640108ec:	je     0x640108f4
640108ee:	mov    eax,DWORD PTR [esi]
640108f0:	mov    DWORD PTR [esp+0xc],eax
640108f4:	mov    edi,DWORD PTR [ebp+0xc]
640108f7:	cmp    edi,eax
640108f9:	ja     0x64010904
640108fb:	xor    eax,eax
640108fd:	pop    edi
640108fe:	pop    esi
640108ff:	pop    ebx
64010900:	mov    esp,ebp
64010902:	pop    ebp
64010903:	ret    
64010904:	mov    edx,DWORD PTR [ebp+0x8]
64010907:	xor    eax,eax
64010909:	lea    ecx,[esp+0xc]
6401090d:	push   ecx
6401090e:	mov    DWORD PTR [esp+0x2c],eax
64010912:	mov    DWORD PTR [esp+0x30],eax
64010916:	mov    DWORD PTR [esp+0x34],eax
6401091a:	mov    DWORD PTR [esp+0x38],eax
6401091e:	mov    eax,DWORD PTR [ebp+0x14]
64010921:	push   edi
64010922:	mov    DWORD PTR [esp+0x18],eax
64010926:	push   edx
64010927:	lea    eax,[esp+0x1c]
6401092b:	push   eax
6401092c:	mov    DWORD PTR [esp+0x28],ebx
64010930:	mov    DWORD PTR [esp+0x2c],ebx
64010934:	mov    DWORD PTR [esp+0x30],ebx
64010938:	mov    BYTE PTR [esp+0x24],bl
6401093c:	call   0x6400ff40
64010941:	add    esp,0x10
64010944:	cmp    eax,ebx
64010946:	jge    0x64010952
64010948:	or     eax,0xffffffff
6401094b:	pop    edi
6401094c:	pop    esi
6401094d:	pop    ebx
6401094e:	mov    esp,ebp
64010950:	pop    ebp
64010951:	ret    
64010952:	cmp    esi,ebx
64010954:	mov    ecx,DWORD PTR [esp+0xc]
64010958:	je     0x6401095c
6401095a:	mov    DWORD PTR [esi],ecx
6401095c:	cmp    eax,ebx
6401095e:	je     0x640108fb
64010960:	mov    eax,DWORD PTR [ebp+0x18]
64010963:	mov    edx,DWORD PTR [esp+0x28]
64010967:	mov    DWORD PTR [eax],edx
64010969:	mov    edx,DWORD PTR [esp+0x2c]
6401096d:	mov    DWORD PTR [eax+0x4],edx
64010970:	mov    edx,DWORD PTR [esp+0x30]
64010974:	mov    DWORD PTR [eax+0x8],edx
64010977:	mov    edx,DWORD PTR [esp+0x34]
6401097b:	cmp    ecx,edi
6401097d:	pop    edi
6401097e:	mov    DWORD PTR [eax+0xc],edx
64010981:	sbb    eax,eax
64010983:	pop    esi
64010984:	add    eax,0x2
64010987:	pop    ebx
64010988:	mov    esp,ebp
6401098a:	pop    ebp
6401098b:	ret    
6401098c:	int3   
6401098d:	int3   
6401098e:	int3   
6401098f:	int3   
64010990:	mov    eax,DWORD PTR [esp+0x8]
64010994:	sub    eax,0x1
64010997:	jne    0x640109a2
64010999:	mov    eax,DWORD PTR [esp+0x4]
6401099d:	mov    ds:0x640304a4,eax
640109a2:	mov    eax,0x1
640109a7:	ret    0xc
640109aa:	int3   
640109ab:	int3   
640109ac:	int3   
640109ad:	int3   
640109ae:	int3   
640109af:	int3   
640109b0:	cmp    BYTE PTR ds:0x640304a0,0x0
640109b7:	jne    0x64010a16
640109b9:	push   esi
640109ba:	push   edi
640109bb:	push   0x640263c4
640109c0:	mov    BYTE PTR ds:0x640304a0,0x1
640109c7:	call   DWORD PTR ds:0x64026018
640109cd:	push   0x64026390
640109d2:	push   0xb
640109d4:	push   0x64026384
640109d9:	mov    esi,eax
640109db:	call   0x64006690
640109e0:	mov    edi,DWORD PTR ds:0x64026014
640109e6:	add    esp,0xc
640109e9:	push   eax
640109ea:	push   esi
640109eb:	call   edi
640109ed:	push   0x6402634c
640109f2:	push   0x19
640109f4:	push   0x64026330
640109f9:	mov    ds:0x64030498,eax
640109fe:	call   0x64006690
64010a03:	add    esp,0xc
64010a06:	push   eax
64010a07:	push   esi
64010a08:	call   edi
64010a0a:	pop    edi
64010a0b:	mov    ds:0x6403049c,eax
64010a10:	pop    esi
64010a11:	jmp    0x64012da0
64010a16:	ret    
64010a17:	int3   
64010a18:	int3   
64010a19:	int3   
64010a1a:	int3   
64010a1b:	int3   
64010a1c:	int3   
64010a1d:	int3   
64010a1e:	int3   
64010a1f:	int3   
64010a20:	call   0x640109b0
64010a25:	mov    eax,ds:0x64030498
64010a2a:	test   eax,eax
64010a2c:	je     0x64010a30
64010a2e:	jmp    eax
64010a30:	ret    0x8
64010a33:	int3   
64010a34:	int3   
64010a35:	int3   
64010a36:	int3   
64010a37:	int3   
64010a38:	int3   
64010a39:	int3   
64010a3a:	int3   
64010a3b:	int3   
64010a3c:	int3   
64010a3d:	int3   
64010a3e:	int3   
64010a3f:	int3   
64010a40:	call   0x640109b0
64010a45:	mov    eax,ds:0x6403049c
64010a4a:	test   eax,eax
64010a4c:	je     0x64010a50
64010a4e:	jmp    eax
64010a50:	ret    0x4
64010a53:	int3   
64010a54:	int3   
64010a55:	int3   
64010a56:	int3   
64010a57:	int3   
64010a58:	int3   
64010a59:	int3   
64010a5a:	int3   
64010a5b:	int3   
64010a5c:	int3   
64010a5d:	int3   
64010a5e:	int3   
64010a5f:	int3   
64010a60:	mov    eax,DWORD PTR [esp+0x4]
64010a64:	mov    edx,DWORD PTR [ecx]
64010a66:	mov    DWORD PTR [eax],edx
64010a68:	mov    edx,DWORD PTR [ecx+0x4]
64010a6b:	mov    DWORD PTR [eax+0x4],edx
64010a6e:	mov    edx,DWORD PTR [ecx+0x8]
64010a71:	mov    ecx,DWORD PTR [ecx+0xc]
64010a74:	mov    DWORD PTR [eax+0x8],edx
64010a77:	mov    DWORD PTR [eax+0xc],ecx
64010a7a:	ret    0x4
64010a7d:	int3   
64010a7e:	int3   
64010a7f:	int3   
64010a80:	jmp    0x6401356f
64010a85:	int3   
64010a86:	int3   
64010a87:	int3   
64010a88:	int3   
64010a89:	int3   
64010a8a:	int3   
64010a8b:	int3   
64010a8c:	int3   
64010a8d:	int3   
64010a8e:	int3   
64010a8f:	int3   
64010a90:	push   esi
64010a91:	mov    esi,ecx
64010a93:	call   0x6401356f
64010a98:	test   BYTE PTR [esp+0x8],0x1
64010a9d:	je     0x64010aa8
64010a9f:	push   esi
64010aa0:	call   0x64013402
64010aa5:	add    esp,0x4
64010aa8:	mov    eax,esi
64010aaa:	pop    esi
64010aab:	ret    0x4
64010aae:	int3   
64010aaf:	int3   
64010ab0:	sub    esp,0x804
64010ab6:	mov    eax,ds:0x6402f09c
64010abb:	xor    eax,esp
64010abd:	mov    DWORD PTR [esp+0x800],eax
64010ac4:	call   DWORD PTR ds:0x6402604c
64010aca:	and    eax,0xff
64010acf:	cmp    eax,0x5
64010ad2:	jb     0x64010ae5
64010ad4:	push   0x64026430
64010ad9:	push   0x400
64010ade:	lea    eax,[esp+0x8]
64010ae2:	push   eax
64010ae3:	jmp    0x64010af4
64010ae5:	push   0x64026424
64010aea:	push   0x400
64010aef:	lea    ecx,[esp+0x8]
64010af3:	push   ecx
64010af4:	call   0x64014100
64010af9:	add    esp,0xc
64010afc:	push   0x64026414
64010b01:	lea    edx,[esp+0x4]
64010b05:	push   0x400
64010b0a:	push   edx
64010b0b:	call   0x64014086
64010b10:	add    esp,0xc
64010b13:	push   0x0
64010b15:	push   0x80
64010b1a:	push   0x3
64010b1c:	push   0x0
64010b1e:	push   0x0
64010b20:	lea    eax,[esp+0x14]
64010b24:	push   0xc0000000
64010b29:	push   eax
64010b2a:	call   0x6400e010
64010b2f:	call   eax
64010b31:	cmp    eax,0xffffffff
64010b34:	jne    0x64010b57
64010b36:	call   DWORD PTR ds:0x64026044
64010b3c:	cmp    eax,0x20
64010b3f:	sete   al
64010b42:	mov    ecx,DWORD PTR [esp+0x800]
64010b49:	xor    ecx,esp
64010b4b:	call   0x64013c5c
64010b50:	add    esp,0x804
64010b56:	ret    
64010b57:	push   eax
64010b58:	call   DWORD PTR ds:0x64026040
64010b5e:	mov    ecx,DWORD PTR [esp+0x800]
64010b65:	xor    ecx,esp
64010b67:	mov    al,0x1
64010b69:	call   0x64013c5c
64010b6e:	add    esp,0x804
64010b74:	ret    
64010b75:	int3   
64010b76:	int3   
64010b77:	int3   
64010b78:	int3   
64010b79:	int3   
64010b7a:	int3   
64010b7b:	int3   
64010b7c:	int3   
64010b7d:	int3   
64010b7e:	int3   
64010b7f:	int3   
64010b80:	push   ebx
64010b81:	mov    ebx,DWORD PTR ds:0x64026050
64010b87:	push   esi
64010b88:	push   edi
64010b89:	mov    edi,DWORD PTR [esp+0x10]
64010b8d:	xor    esi,esi
64010b8f:	nop
64010b90:	lea    eax,[esp+0x10]
64010b94:	push   0x0
64010b96:	push   eax
64010b97:	mov    DWORD PTR [esp+0x18],0x0
64010b9f:	call   0x6400eb70
64010ba4:	call   eax
64010ba6:	test   eax,eax
64010ba8:	je     0x64010bb9
64010baa:	cmp    edi,0xffffffff
64010bad:	je     0x64010bb9
64010baf:	add    esi,0x3e8
64010bb5:	cmp    esi,edi
64010bb7:	ja     0x64010bc2
64010bb9:	push   0x3e8
64010bbe:	call   ebx
64010bc0:	jmp    0x64010b90
64010bc2:	pop    edi
64010bc3:	pop    esi
64010bc4:	mov    al,0x1
64010bc6:	pop    ebx
64010bc7:	ret    
64010bc8:	int3   
64010bc9:	int3   
64010bca:	int3   
64010bcb:	int3   
64010bcc:	int3   
64010bcd:	int3   
64010bce:	int3   
64010bcf:	int3   
64010bd0:	mov    ecx,DWORD PTR [esp+0x4]
64010bd4:	sub    esp,0xc
64010bd7:	test   ecx,ecx
64010bd9:	ja     0x64010bf1
64010bdb:	xor    ecx,ecx
64010bdd:	lea    edx,[ecx*4+0x0]
64010be4:	push   edx
64010be5:	call   0x640137e1
64010bea:	add    esp,0x4
64010bed:	add    esp,0xc
64010bf0:	ret    
64010bf1:	or     eax,0xffffffff
64010bf4:	xor    edx,edx
64010bf6:	div    ecx
64010bf8:	cmp    eax,0x4
64010bfb:	jae    0x64010bdd
64010bfd:	lea    eax,[esp+0x10]
64010c01:	push   eax
64010c02:	lea    ecx,[esp+0x4]
64010c06:	mov    DWORD PTR [esp+0x14],0x0
64010c0e:	call   0x6401345d
64010c13:	push   0x6402c5c4
64010c18:	lea    ecx,[esp+0x4]
64010c1c:	push   ecx
64010c1d:	mov    DWORD PTR [esp+0x8],0x64026304
64010c25:	call   0x6401384b
64010c2a:	int3   
64010c2b:	int3   
64010c2c:	int3   
64010c2d:	int3   
64010c2e:	int3   
64010c2f:	int3   
64010c30:	push   esi
64010c31:	mov    esi,DWORD PTR [ecx]
64010c33:	test   esi,esi
64010c35:	je     0x64010c46
64010c37:	push   esi
64010c38:	call   0x6400fdd0
64010c3d:	push   esi
64010c3e:	call   0x64013402
64010c43:	add    esp,0x8
64010c46:	pop    esi
64010c47:	ret    
64010c48:	int3   
64010c49:	int3   
64010c4a:	int3   
64010c4b:	int3   
64010c4c:	int3   
64010c4d:	int3   
64010c4e:	int3   
64010c4f:	int3   
64010c50:	push   esi
64010c51:	mov    esi,DWORD PTR [ecx+0x10]
64010c54:	test   esi,esi
64010c56:	je     0x64010c67
64010c58:	push   esi
64010c59:	call   0x6400fdd0
64010c5e:	push   esi
64010c5f:	call   0x64013402
64010c64:	add    esp,0x8
64010c67:	pop    esi
64010c68:	ret    
64010c69:	int3   
64010c6a:	int3   
64010c6b:	int3   
64010c6c:	int3   
64010c6d:	int3   
64010c6e:	int3   
64010c6f:	int3   
64010c70:	mov    ecx,DWORD PTR [esp+0x8]
64010c74:	test   ecx,ecx
64010c76:	jne    0x64010c82
64010c78:	push   0x80004005
64010c7d:	call   0x64001040
64010c82:	mov    eax,DWORD PTR [esp+0x4]
64010c86:	mov    eax,DWORD PTR [eax]
64010c88:	mov    dx,WORD PTR [eax]
64010c8b:	cmp    dx,WORD PTR [ecx]
64010c8e:	jne    0x64010cb6
64010c90:	test   dx,dx
64010c93:	je     0x64010caa
64010c95:	mov    dx,WORD PTR [eax+0x2]
64010c99:	cmp    dx,WORD PTR [ecx+0x2]
64010c9d:	jne    0x64010cb6
64010c9f:	add    eax,0x4
64010ca2:	add    ecx,0x4
64010ca5:	test   dx,dx
64010ca8:	jne    0x64010c88
64010caa:	xor    eax,eax
64010cac:	xor    ecx,ecx
64010cae:	test   eax,eax
64010cb0:	setne  cl
64010cb3:	mov    al,cl
64010cb5:	ret    
64010cb6:	sbb    eax,eax
64010cb8:	sbb    eax,0xffffffff
64010cbb:	xor    ecx,ecx
64010cbd:	test   eax,eax
64010cbf:	setne  cl
64010cc2:	mov    al,cl
64010cc4:	ret    
64010cc5:	int3   
64010cc6:	int3   
64010cc7:	int3   
64010cc8:	int3   
64010cc9:	int3   
64010cca:	int3   
64010ccb:	int3   
64010ccc:	int3   
64010ccd:	int3   
64010cce:	int3   
64010ccf:	int3   
64010cd0:	mov    eax,DWORD PTR [esp+0x4]
64010cd4:	mov    ecx,DWORD PTR [esp+0x8]
64010cd8:	cmp    eax,ecx
64010cda:	je     0x64010ced
64010cdc:	mov    edx,DWORD PTR [esp+0xc]
64010ce0:	push   esi
64010ce1:	mov    esi,DWORD PTR [edx]
64010ce3:	mov    DWORD PTR [eax],esi
64010ce5:	add    eax,0x4
64010ce8:	cmp    eax,ecx
64010cea:	jne    0x64010ce1
64010cec:	pop    esi
64010ced:	ret    
64010cee:	int3   
64010cef:	int3   
64010cf0:	mov    eax,DWORD PTR [esp+0x8]
64010cf4:	mov    edx,DWORD PTR [esp+0x4]
64010cf8:	sub    eax,edx
64010cfa:	sar    eax,0x2
64010cfd:	push   esi
64010cfe:	mov    esi,DWORD PTR [esp+0x10]
64010d02:	lea    ecx,[eax*4+0x0]
64010d09:	sub    esi,ecx
64010d0b:	test   eax,eax
64010d0d:	jle    0x64010d1b
64010d0f:	push   ecx
64010d10:	push   edx
64010d11:	push   ecx
64010d12:	push   esi
64010d13:	call   0x64013633
64010d18:	add    esp,0x10
64010d1b:	mov    eax,esi
64010d1d:	pop    esi
64010d1e:	ret    
64010d1f:	int3   
64010d20:	mov    eax,DWORD PTR [esp+0x14]
64010d24:	push   ebp
64010d25:	mov    ebp,DWORD PTR [esp+0x8]
64010d29:	push   esi
64010d2a:	mov    esi,DWORD PTR [esp+0x14]
64010d2e:	push   edi
64010d2f:	lea    edi,[esi+eax*1]
64010d32:	mov    eax,DWORD PTR [ebp+0x0]
64010d35:	mov    edx,DWORD PTR [eax-0x8]
64010d38:	sub    eax,0x10
64010d3b:	mov    ecx,0x1
64010d40:	sub    ecx,DWORD PTR [eax+0xc]
64010d43:	sub    edx,edi
64010d45:	or     ecx,edx
64010d47:	jge    0x64010d51
64010d49:	push   edi
64010d4a:	mov    ecx,ebp
64010d4c:	call   0x64001e00
64010d51:	mov    eax,DWORD PTR [esp+0x14]
64010d55:	push   ebx
64010d56:	mov    ebx,DWORD PTR [ebp+0x0]
64010d59:	add    esi,esi
64010d5b:	push   esi
64010d5c:	push   eax
64010d5d:	push   esi
64010d5e:	push   ebx
64010d5f:	call   0x640135b8
64010d64:	mov    eax,DWORD PTR [esp+0x34]
64010d68:	mov    ecx,DWORD PTR [esp+0x30]
64010d6c:	add    eax,eax
64010d6e:	push   eax
64010d6f:	push   ecx
64010d70:	push   eax
64010d71:	add    esi,ebx
64010d73:	push   esi
64010d74:	call   0x640135b8
64010d79:	add    esp,0x20
64010d7c:	test   edi,edi
64010d7e:	pop    ebx
64010d7f:	jl     0x64010d99
64010d81:	mov    eax,DWORD PTR [ebp+0x0]
64010d84:	cmp    edi,DWORD PTR [eax-0x8]
64010d87:	jg     0x64010d99
64010d89:	mov    DWORD PTR [eax-0xc],edi
64010d8c:	mov    edx,DWORD PTR [ebp+0x0]
64010d8f:	mov    WORD PTR [edx+edi*2],0x0
64010d95:	pop    edi
64010d96:	pop    esi
64010d97:	pop    ebp
64010d98:	ret    
64010d99:	push   0x80070057
64010d9e:	call   0x64001040
64010da3:	int3   
64010da4:	int3   
64010da5:	int3   
64010da6:	int3   
64010da7:	int3   
64010da8:	int3   
64010da9:	int3   
64010daa:	int3   
64010dab:	int3   
64010dac:	int3   
64010dad:	int3   
64010dae:	int3   
64010daf:	int3   
64010db0:	push   0xffffffff
64010db2:	push   0x64023239
64010db7:	mov    eax,fs:0x0
64010dbd:	push   eax
64010dbe:	push   ecx
64010dbf:	push   esi
64010dc0:	push   edi
64010dc1:	mov    eax,ds:0x6402f09c
64010dc6:	xor    eax,esp
64010dc8:	push   eax
64010dc9:	lea    eax,[esp+0x10]
64010dcd:	mov    fs:0x0,eax
64010dd3:	mov    edi,DWORD PTR [esp+0x24]
64010dd7:	mov    DWORD PTR [esp+0xc],0x0
64010ddf:	mov    eax,DWORD PTR [edi]
64010de1:	mov    ecx,DWORD PTR [eax-0x10]
64010de4:	test   ecx,ecx
64010de6:	mov    DWORD PTR [esp+0x18],0x0
64010dee:	je     0x64010dfb
64010df0:	mov    edx,DWORD PTR [ecx]
64010df2:	mov    eax,DWORD PTR [edx+0x10]
64010df5:	call   eax
64010df7:	test   eax,eax
64010df9:	jne    0x64010e0b
64010dfb:	mov    edx,DWORD PTR ds:0x64030540
64010e01:	mov    eax,DWORD PTR [edx+0x10]
64010e04:	mov    ecx,0x64030540
64010e09:	call   eax
64010e0b:	xor    ecx,ecx
64010e0d:	test   eax,eax
64010e0f:	setne  cl
64010e12:	test   ecx,ecx
64010e14:	jne    0x64010e20
64010e16:	push   0x80004005
64010e1b:	call   0x64001040
64010e20:	mov    edx,DWORD PTR [eax]
64010e22:	mov    ecx,eax
64010e24:	mov    eax,DWORD PTR [edx+0xc]
64010e27:	call   eax
64010e29:	mov    esi,DWORD PTR [esp+0x20]
64010e2d:	add    eax,0x10
64010e30:	mov    DWORD PTR [esi],eax
64010e32:	mov    ecx,DWORD PTR [esp+0x28]
64010e36:	mov    eax,DWORD PTR [ecx]
64010e38:	mov    edx,DWORD PTR [eax-0xc]
64010e3b:	mov    ecx,DWORD PTR [edi]
64010e3d:	mov    edi,DWORD PTR [ecx-0xc]
64010e40:	push   edx
64010e41:	push   eax
64010e42:	push   edi
64010e43:	push   ecx
64010e44:	push   esi
64010e45:	mov    DWORD PTR [esp+0x2c],0x0
64010e4d:	mov    DWORD PTR [esp+0x20],0x1
64010e55:	call   0x64010d20
64010e5a:	add    esp,0x14
64010e5d:	mov    eax,esi
64010e5f:	mov    ecx,DWORD PTR [esp+0x10]
64010e63:	mov    DWORD PTR fs:0x0,ecx
64010e6a:	pop    ecx
64010e6b:	pop    edi
64010e6c:	pop    esi
64010e6d:	add    esp,0x10
64010e70:	ret    
64010e71:	int3   
64010e72:	int3   
64010e73:	int3   
64010e74:	int3   
64010e75:	int3   
64010e76:	int3   
64010e77:	int3   
64010e78:	int3   
64010e79:	int3   
64010e7a:	int3   
64010e7b:	int3   
64010e7c:	int3   
64010e7d:	int3   
64010e7e:	int3   
64010e7f:	int3   
64010e80:	push   0xffffffff
64010e82:	push   0x64023279
64010e87:	mov    eax,fs:0x0
64010e8d:	push   eax
64010e8e:	push   ecx
64010e8f:	push   ebp
64010e90:	push   esi
64010e91:	push   edi
64010e92:	mov    eax,ds:0x6402f09c
64010e97:	xor    eax,esp
64010e99:	push   eax
64010e9a:	lea    eax,[esp+0x14]
64010e9e:	mov    fs:0x0,eax
64010ea4:	mov    ebp,DWORD PTR [esp+0x28]
64010ea8:	mov    DWORD PTR [esp+0x10],0x0
64010eb0:	mov    eax,DWORD PTR [ebp+0x0]
64010eb3:	mov    ecx,DWORD PTR [eax-0x10]
64010eb6:	test   ecx,ecx
64010eb8:	mov    DWORD PTR [esp+0x1c],0x0
64010ec0:	je     0x64010ecd
64010ec2:	mov    edx,DWORD PTR [ecx]
64010ec4:	mov    eax,DWORD PTR [edx+0x10]
64010ec7:	call   eax
64010ec9:	test   eax,eax
64010ecb:	jne    0x64010edd
64010ecd:	mov    edx,DWORD PTR ds:0x64030540
64010ed3:	mov    eax,DWORD PTR [edx+0x10]
64010ed6:	mov    ecx,0x64030540
64010edb:	call   eax
64010edd:	xor    ecx,ecx
64010edf:	test   eax,eax
64010ee1:	setne  cl
64010ee4:	test   ecx,ecx
64010ee6:	jne    0x64010ef2
64010ee8:	push   0x80004005
64010eed:	call   0x64001040
64010ef2:	mov    edx,DWORD PTR [eax]
64010ef4:	mov    ecx,eax
64010ef6:	mov    eax,DWORD PTR [edx+0xc]
64010ef9:	call   eax
64010efb:	mov    esi,DWORD PTR [esp+0x24]
64010eff:	add    eax,0x10
64010f02:	mov    DWORD PTR [esi],eax
64010f04:	mov    edi,DWORD PTR [esp+0x2c]
64010f08:	test   edi,edi
64010f0a:	mov    DWORD PTR [esp+0x1c],0x0
64010f12:	mov    DWORD PTR [esp+0x10],0x1
64010f1a:	jne    0x64010f20
64010f1c:	xor    eax,eax
64010f1e:	jmp    0x64010f34
64010f20:	mov    eax,edi
64010f22:	lea    edx,[eax+0x2]
64010f25:	mov    cx,WORD PTR [eax]
64010f28:	add    eax,0x2
64010f2b:	test   cx,cx
64010f2e:	jne    0x64010f25
64010f30:	sub    eax,edx
64010f32:	sar    eax,1
64010f34:	mov    ecx,DWORD PTR [ebp+0x0]
64010f37:	mov    edx,DWORD PTR [ecx-0xc]
64010f3a:	push   eax
64010f3b:	push   edi
64010f3c:	push   edx
64010f3d:	push   ecx
64010f3e:	push   esi
64010f3f:	call   0x64010d20
64010f44:	add    esp,0x14
64010f47:	mov    eax,esi
64010f49:	mov    ecx,DWORD PTR [esp+0x14]
64010f4d:	mov    DWORD PTR fs:0x0,ecx
64010f54:	pop    ecx
64010f55:	pop    edi
64010f56:	pop    esi
64010f57:	pop    ebp
64010f58:	add    esp,0x10
64010f5b:	ret    
64010f5c:	int3   
64010f5d:	int3   
64010f5e:	int3   
64010f5f:	int3   
64010f60:	mov    eax,DWORD PTR [esp+0x8]
64010f64:	mov    ecx,DWORD PTR [esp+0x4]
64010f68:	mov    edx,DWORD PTR [esp+0xc]
64010f6c:	sub    eax,ecx
64010f6e:	sar    eax,0x2
64010f71:	lea    eax,[eax*4+0x0]
64010f78:	push   esi
64010f79:	lea    esi,[eax+edx*1]
64010f7c:	je     0x64010f8a
64010f7e:	push   eax
64010f7f:	push   ecx
64010f80:	push   eax
64010f81:	push   edx
64010f82:	call   0x64013633
64010f87:	add    esp,0x10
64010f8a:	mov    eax,esi
64010f8c:	pop    esi
64010f8d:	ret    0xc
64010f90:	push   esi
64010f91:	mov    esi,DWORD PTR [esp+0xc]
64010f95:	test   esi,esi
64010f97:	push   edi
64010f98:	mov    edi,DWORD PTR [esp+0xc]
64010f9c:	mov    eax,esi
64010f9e:	mov    ecx,edi
64010fa0:	jbe    0x64010fb6
64010fa2:	mov    edx,DWORD PTR [esp+0x14]
64010fa6:	push   ebx
64010fa7:	mov    ebx,DWORD PTR [edx]
64010fa9:	mov    DWORD PTR [ecx],ebx
64010fab:	sub    eax,0x1
64010fae:	add    ecx,0x4
64010fb1:	test   eax,eax
64010fb3:	ja     0x64010fa7
64010fb5:	pop    ebx
64010fb6:	lea    eax,[edi+esi*4]
64010fb9:	pop    edi
64010fba:	pop    esi
64010fbb:	ret    0xc
64010fbe:	int3   
64010fbf:	int3   
64010fc0:	mov    eax,DWORD PTR [esp+0x4]
64010fc4:	push   esi
64010fc5:	push   eax
64010fc6:	mov    esi,ecx
64010fc8:	call   0x64013557
64010fcd:	mov    DWORD PTR [esi],0x64026400
64010fd3:	mov    eax,esi
64010fd5:	pop    esi
64010fd6:	ret    0x4
64010fd9:	int3   
64010fda:	int3   
64010fdb:	int3   
64010fdc:	int3   
64010fdd:	int3   
64010fde:	int3   
64010fdf:	int3   
64010fe0:	push   0xffffffff
64010fe2:	push   0x640232a8
64010fe7:	mov    eax,fs:0x0
64010fed:	push   eax
64010fee:	sub    esp,0x44
64010ff1:	mov    eax,ds:0x6402f09c
64010ff6:	xor    eax,esp
64010ff8:	push   eax
64010ff9:	lea    eax,[esp+0x48]
64010ffd:	mov    fs:0x0,eax
64011003:	push   0x12
64011005:	push   0x6402a0a8
6401100a:	lea    ecx,[esp+0xc]
6401100e:	mov    DWORD PTR [esp+0x24],0xf
64011016:	mov    DWORD PTR [esp+0x20],0x0
6401101e:	mov    BYTE PTR [esp+0x10],0x0
64011023:	call   0x64001860
64011028:	lea    eax,[esp+0x4]
6401102c:	push   eax
6401102d:	lea    ecx,[esp+0x24]
64011031:	mov    DWORD PTR [esp+0x54],0x0
64011039:	call   0x64002d00
6401103e:	push   0x6402c690
64011043:	lea    ecx,[esp+0x24]
64011047:	push   ecx
64011048:	mov    DWORD PTR [esp+0x28],0x6402631c
64011050:	call   0x6401384b
64011055:	int3   
64011056:	int3   
64011057:	int3   
64011058:	int3   
64011059:	int3   
6401105a:	int3   
6401105b:	int3   
6401105c:	int3   
6401105d:	int3   
6401105e:	int3   
6401105f:	int3   
64011060:	sub    esp,0x10
64011063:	mov    edx,DWORD PTR [ecx+0x4]
64011066:	mov    eax,DWORD PTR [ecx]
64011068:	cmp    eax,0x5
6401106b:	mov    DWORD PTR [esp+0x4],edx
6401106f:	mov    edx,DWORD PTR [ecx+0x8]
64011072:	mov    ecx,DWORD PTR [ecx+0xc]
64011075:	je     0x6401109c
64011077:	push   0x64026408
6401107c:	lea    ecx,[esp+0x4]
64011080:	call   0x6401353e
64011085:	push   0x6402bb40
6401108a:	lea    eax,[esp+0x4]
6401108e:	push   eax
6401108f:	mov    DWORD PTR [esp+0x8],0x64026400
64011097:	call   0x6401384b
6401109c:	push   edx
6401109d:	push   ecx
6401109e:	mov    ecx,DWORD PTR [esp+0x1c]
640110a2:	call   0x64001860
640110a7:	add    esp,0x10
640110aa:	ret    0x4
640110ad:	int3   
640110ae:	int3   
640110af:	int3   
640110b0:	push   0xffffffff
640110b2:	push   0x640232ee
640110b7:	mov    eax,fs:0x0
640110bd:	push   eax
640110be:	sub    esp,0x9c
640110c4:	push   ebx
640110c5:	push   ebp
640110c6:	push   edi
640110c7:	mov    eax,ds:0x6402f09c
640110cc:	xor    eax,esp
640110ce:	push   eax
640110cf:	lea    eax,[esp+0xac]
640110d6:	mov    fs:0x0,eax
640110dc:	xor    ebx,ebx
640110de:	push   0x1c
640110e0:	mov    DWORD PTR [esp+0x14],ebx
640110e4:	call   0x640137e1
640110e9:	mov    edi,eax
640110eb:	add    esp,0x4
640110ee:	cmp    edi,ebx
640110f0:	je     0x64011102
640110f2:	push   0x2000
640110f7:	push   edi
640110f8:	call   0x6400fe30
640110fd:	add    esp,0x8
64011100:	jmp    0x64011104
64011102:	xor    edi,edi
64011104:	mov    DWORD PTR [esp+0x20],edi
64011108:	mov    ecx,DWORD PTR [esp+0xc4]
6401110f:	mov    edx,DWORD PTR [esp+0xc0]
64011116:	lea    eax,[esp+0x10]
6401111a:	push   eax
6401111b:	mov    eax,DWORD PTR [esp+0xc0]
64011122:	push   edi
64011123:	push   ecx
64011124:	push   edx
64011125:	push   eax
64011126:	mov    DWORD PTR [esp+0xc8],ebx
6401112d:	call   0x640108d0
64011132:	add    esp,0x14
64011135:	sub    eax,ebx
64011137:	je     0x64011206
6401113d:	sub    eax,0x1
64011140:	je     0x640111e9
64011146:	sub    eax,0x1
64011149:	je     0x64011198
6401114b:	push   0xb
6401114d:	push   0x64026474
64011152:	lea    ecx,[esp+0x2c]
64011156:	mov    DWORD PTR [esp+0x44],0xf
6401115e:	mov    DWORD PTR [esp+0x40],ebx
64011162:	mov    BYTE PTR [esp+0x30],bl
64011166:	call   0x64001860
6401116b:	lea    ecx,[esp+0x24]
6401116f:	push   ecx
64011170:	lea    ecx,[esp+0x60]
64011174:	mov    BYTE PTR [esp+0xb8],0x2
6401117c:	call   0x64002020
64011181:	push   0x6402bbc4
64011186:	lea    edx,[esp+0x60]
6401118a:	push   edx
6401118b:	mov    DWORD PTR [esp+0x64],0x64026458
64011193:	call   0x6401384b
64011198:	mov    eax,DWORD PTR [esp+0x10]
6401119c:	mov    ecx,DWORD PTR [esp+0x14]
640111a0:	mov    edx,DWORD PTR [esp+0x18]
640111a4:	mov    DWORD PTR [esi],eax
640111a6:	mov    eax,DWORD PTR [esp+0x1c]
640111aa:	mov    DWORD PTR [esi+0x4],ecx
640111ad:	mov    DWORD PTR [esi+0x8],edx
640111b0:	mov    DWORD PTR [esi+0xc],eax
640111b3:	mov    ebp,DWORD PTR [esi+0x10]
640111b6:	cmp    edi,ebp
640111b8:	je     0x640111cd
640111ba:	cmp    ebp,ebx
640111bc:	je     0x640111cd
640111be:	push   ebp
640111bf:	call   0x6400fdd0
640111c4:	push   ebp
640111c5:	call   0x64013402
640111ca:	add    esp,0x8
640111cd:	mov    DWORD PTR [esi+0x10],edi
640111d0:	mov    ecx,DWORD PTR [esp+0xac]
640111d7:	mov    DWORD PTR fs:0x0,ecx
640111de:	pop    ecx
640111df:	pop    edi
640111e0:	pop    ebp
640111e1:	pop    ebx
640111e2:	add    esp,0xa8
640111e8:	ret    
640111e9:	mov    ecx,DWORD PTR [esp+0x10]
640111ed:	mov    edx,DWORD PTR [esp+0x14]
640111f1:	mov    eax,DWORD PTR [esp+0x18]
640111f5:	mov    DWORD PTR [esi],ecx
640111f7:	mov    ecx,DWORD PTR [esp+0x1c]
640111fb:	mov    DWORD PTR [esi+0x4],edx
640111fe:	mov    DWORD PTR [esi+0x8],eax
64011201:	mov    DWORD PTR [esi+0xc],ecx
64011204:	jmp    0x640111b3
64011206:	push   0x12
64011208:	push   0x64026460
6401120d:	lea    ecx,[esp+0x48]
64011211:	mov    DWORD PTR [esp+0x60],0xf
64011219:	mov    DWORD PTR [esp+0x5c],ebx
6401121d:	mov    BYTE PTR [esp+0x4c],bl
64011221:	call   0x64001860
64011226:	lea    edx,[esp+0x40]
6401122a:	push   edx
6401122b:	lea    ecx,[esp+0x88]
64011232:	mov    BYTE PTR [esp+0xb8],0x1
6401123a:	call   0x64002020
6401123f:	push   0x6402bbc4
64011244:	lea    eax,[esp+0x88]
6401124b:	push   eax
6401124c:	mov    DWORD PTR [esp+0x8c],0x64026458
64011257:	call   0x6401384b
6401125c:	int3   
6401125d:	int3   
6401125e:	int3   
6401125f:	int3   
64011260:	mov    eax,DWORD PTR [esp+0x4]
64011264:	push   esi
64011265:	push   eax
64011266:	mov    esi,ecx
64011268:	call   0x64002120
6401126d:	mov    DWORD PTR [esi],0x64026458
64011273:	mov    eax,esi
64011275:	pop    esi
64011276:	ret    0x4
64011279:	int3   
6401127a:	int3   
6401127b:	int3   
6401127c:	int3   
6401127d:	int3   
6401127e:	int3   
6401127f:	int3   
64011280:	cmp    DWORD PTR [esp+0x4],0x6
64011285:	push   esi
64011286:	mov    esi,ecx
64011288:	je     0x640112af
6401128a:	push   0x64026408
6401128f:	lea    ecx,[esp+0xc]
64011293:	call   0x6401353e
64011298:	push   0x6402bb40
6401129d:	lea    eax,[esp+0xc]
640112a1:	push   eax
640112a2:	mov    DWORD PTR [esp+0x10],0x64026400
640112aa:	call   0x6401384b
640112af:	push   ebx
640112b0:	mov    ebx,DWORD PTR [esp+0x14]
640112b4:	test   ebx,ebx
640112b6:	jbe    0x640112d9
640112b8:	mov    ecx,DWORD PTR [esi]
640112ba:	push   edi
640112bb:	mov    edi,DWORD PTR [esp+0x1c]
640112bf:	push   ecx
640112c0:	mov    ecx,edi
640112c2:	call   0x64011060
640112c7:	cmp    ebx,0x1
640112ca:	jbe    0x640112d8
640112cc:	mov    edx,DWORD PTR [esi+0x4]
640112cf:	push   edx
640112d0:	lea    ecx,[edi+0x10]
640112d3:	call   0x64011060
640112d8:	pop    edi
640112d9:	pop    ebx
640112da:	pop    esi
640112db:	ret    0x10
640112de:	int3   
640112df:	int3   
640112e0:	mov    eax,DWORD PTR [esp+0x10]
640112e4:	push   ebx
640112e5:	push   esi
640112e6:	mov    esi,ecx
640112e8:	mov    ecx,DWORD PTR [eax]
640112ea:	mov    DWORD PTR [esp+0x18],ecx
640112ee:	mov    ecx,DWORD PTR [esi+0x4]
640112f1:	test   ecx,ecx
640112f3:	push   edi
640112f4:	jne    0x640112fa
640112f6:	xor    edi,edi
640112f8:	jmp    0x64011302
640112fa:	mov    edi,DWORD PTR [esi+0xc]
640112fd:	sub    edi,ecx
640112ff:	sar    edi,0x2
64011302:	mov    ebx,DWORD PTR [esp+0x18]
64011306:	test   ebx,ebx
64011308:	je     0x6401148f
6401130e:	test   ecx,ecx
64011310:	jne    0x64011316
64011312:	xor    eax,eax
64011314:	jmp    0x6401131e
64011316:	mov    eax,DWORD PTR [esi+0x8]
64011319:	sub    eax,ecx
6401131b:	sar    eax,0x2
6401131e:	mov    edx,0x3fffffff
64011323:	sub    edx,eax
64011325:	cmp    edx,ebx
64011327:	jae    0x6401132e
64011329:	call   0x64010fe0
6401132e:	test   ecx,ecx
64011330:	jne    0x64011336
64011332:	xor    eax,eax
64011334:	jmp    0x6401133e
64011336:	mov    eax,DWORD PTR [esi+0x8]
64011339:	sub    eax,ecx
6401133b:	sar    eax,0x2
6401133e:	add    eax,ebx
64011340:	cmp    edi,eax
64011342:	push   ebp
64011343:	jae    0x640113fd
64011349:	mov    eax,edi
6401134b:	shr    eax,1
6401134d:	mov    edx,0x3fffffff
64011352:	sub    edx,eax
64011354:	cmp    edx,edi
64011356:	jae    0x6401135c
64011358:	xor    edi,edi
6401135a:	jmp    0x6401135e
6401135c:	add    edi,eax
6401135e:	test   ecx,ecx
64011360:	jne    0x64011366
64011362:	xor    eax,eax
64011364:	jmp    0x6401136e
64011366:	mov    eax,DWORD PTR [esi+0x8]
64011369:	sub    eax,ecx
6401136b:	sar    eax,0x2
6401136e:	add    eax,ebx
64011370:	cmp    edi,eax
64011372:	jae    0x64011386
64011374:	test   ecx,ecx
64011376:	jne    0x6401137c
64011378:	xor    edi,edi
6401137a:	jmp    0x64011384
6401137c:	mov    edi,DWORD PTR [esi+0x8]
6401137f:	sub    edi,ecx
64011381:	sar    edi,0x2
64011384:	add    edi,ebx
64011386:	push   0x0
64011388:	push   edi
64011389:	call   0x64010bd0
6401138e:	mov    ecx,DWORD PTR [esi+0x4]
64011391:	add    esp,0x8
64011394:	mov    ebp,eax
64011396:	mov    eax,DWORD PTR [esp+0x18]
6401139a:	push   ebp
6401139b:	push   eax
6401139c:	push   ecx
6401139d:	mov    ecx,esi
6401139f:	call   0x64010f60
640113a4:	lea    edx,[esp+0x20]
640113a8:	push   edx
640113a9:	push   ebx
640113aa:	push   eax
640113ab:	mov    ecx,esi
640113ad:	call   0x64010f90
640113b2:	mov    ecx,DWORD PTR [esp+0x18]
640113b6:	push   eax
640113b7:	mov    eax,DWORD PTR [esi+0x8]
640113ba:	push   eax
640113bb:	push   ecx
640113bc:	mov    ecx,esi
640113be:	call   0x64010f60
640113c3:	mov    eax,DWORD PTR [esi+0x4]
640113c6:	test   eax,eax
640113c8:	jne    0x640113ce
640113ca:	xor    ecx,ecx
640113cc:	jmp    0x640113d6
640113ce:	mov    ecx,DWORD PTR [esi+0x8]
640113d1:	sub    ecx,eax
640113d3:	sar    ecx,0x2
640113d6:	add    ebx,ecx
640113d8:	test   eax,eax
640113da:	je     0x640113e5
640113dc:	push   eax
640113dd:	call   0x64013402
640113e2:	add    esp,0x4
640113e5:	lea    edx,[ebp+edi*4+0x0]
640113e9:	lea    eax,[ebp+ebx*4+0x0]
640113ed:	mov    DWORD PTR [esi+0x4],ebp
640113f0:	pop    ebp
640113f1:	pop    edi
640113f2:	mov    DWORD PTR [esi+0xc],edx
640113f5:	mov    DWORD PTR [esi+0x8],eax
640113f8:	pop    esi
640113f9:	pop    ebx
640113fa:	ret    0x10
640113fd:	mov    ebp,DWORD PTR [esi+0x8]
64011400:	mov    edi,DWORD PTR [esp+0x18]
64011404:	mov    ecx,ebp
64011406:	sub    ecx,edi
64011408:	sar    ecx,0x2
6401140b:	lea    eax,[ebx*4+0x0]
64011412:	cmp    ecx,ebx
64011414:	mov    DWORD PTR [esp+0x1c],eax
64011418:	mov    ecx,esi
6401141a:	jae    0x64011462
6401141c:	add    eax,edi
6401141e:	push   eax
6401141f:	push   ebp
64011420:	push   edi
64011421:	call   0x64010f60
64011426:	mov    eax,DWORD PTR [esi+0x8]
64011429:	mov    ecx,eax
6401142b:	sub    ecx,edi
6401142d:	sar    ecx,0x2
64011430:	lea    edx,[esp+0x20]
64011434:	push   edx
64011435:	sub    ebx,ecx
64011437:	push   ebx
64011438:	push   eax
64011439:	mov    ecx,esi
6401143b:	call   0x64010f90
64011440:	mov    eax,DWORD PTR [esp+0x1c]
64011444:	add    DWORD PTR [esi+0x8],eax
64011447:	mov    esi,DWORD PTR [esi+0x8]
6401144a:	lea    edx,[esp+0x20]
6401144e:	push   edx
6401144f:	sub    esi,eax
64011451:	push   esi
64011452:	push   edi
64011453:	call   0x64010cd0
64011458:	add    esp,0xc
6401145b:	pop    ebp
6401145c:	pop    edi
6401145d:	pop    esi
6401145e:	pop    ebx
6401145f:	ret    0x10
64011462:	push   ebp
64011463:	mov    ebx,ebp
64011465:	sub    ebx,eax
64011467:	push   ebp
64011468:	push   ebx
64011469:	call   0x64010f60
6401146e:	push   ebp
6401146f:	push   ebx
64011470:	push   edi
64011471:	mov    DWORD PTR [esi+0x8],eax
64011474:	call   0x64010cf0
64011479:	mov    ecx,DWORD PTR [esp+0x28]
6401147d:	lea    eax,[esp+0x2c]
64011481:	push   eax
64011482:	add    ecx,edi
64011484:	push   ecx
64011485:	push   edi
64011486:	call   0x64010cd0
6401148b:	add    esp,0x18
6401148e:	pop    ebp
6401148f:	pop    edi
64011490:	pop    esi
64011491:	pop    ebx
64011492:	ret    0x10
64011495:	int3   
64011496:	int3   
64011497:	int3   
64011498:	int3   
64011499:	int3   
6401149a:	int3   
6401149b:	int3   
6401149c:	int3   
6401149d:	int3   
6401149e:	int3   
6401149f:	int3   
640114a0:	push   ecx
640114a1:	push   ebx
640114a2:	push   ebp
640114a3:	mov    ebp,DWORD PTR [esp+0x14]
640114a7:	push   esi
640114a8:	mov    esi,ecx
640114aa:	push   edi
640114ab:	mov    edi,DWORD PTR [esi+0x4]
640114ae:	test   edi,edi
640114b0:	je     0x640114be
640114b2:	mov    eax,DWORD PTR [esi+0x8]
640114b5:	mov    ecx,eax
640114b7:	sub    ecx,edi
640114b9:	sar    ecx,0x2
640114bc:	jne    0x640114c2
640114be:	xor    ebx,ebx
640114c0:	jmp    0x640114e1
640114c2:	cmp    edi,eax
640114c4:	jbe    0x640114cb
640114c6:	call   0x640137b8
640114cb:	test   ebp,ebp
640114cd:	je     0x640114d3
640114cf:	cmp    ebp,esi
640114d1:	je     0x640114d8
640114d3:	call   0x640137b8
640114d8:	mov    ebx,DWORD PTR [esp+0x20]
640114dc:	sub    ebx,edi
640114de:	sar    ebx,0x2
640114e1:	mov    edx,DWORD PTR [esp+0x24]
640114e5:	mov    eax,DWORD PTR [esp+0x20]
640114e9:	push   edx
640114ea:	push   0x1
640114ec:	push   eax
640114ed:	push   ebp
640114ee:	mov    ecx,esi
640114f0:	call   0x640112e0
640114f5:	mov    edi,DWORD PTR [esi+0x4]
640114f8:	cmp    edi,DWORD PTR [esi+0x8]
640114fb:	jbe    0x64011502
640114fd:	call   0x640137b8
64011502:	mov    DWORD PTR [esp+0x20],edi
64011506:	lea    edi,[edi+ebx*4]
64011509:	cmp    edi,DWORD PTR [esi+0x8]
6401150c:	ja     0x64011513
6401150e:	cmp    edi,DWORD PTR [esi+0x4]
64011511:	jae    0x64011518
64011513:	call   0x640137b8
64011518:	mov    eax,DWORD PTR [esp+0x18]
6401151c:	mov    DWORD PTR [eax+0x4],edi
6401151f:	pop    edi
64011520:	mov    DWORD PTR [eax],esi
64011522:	pop    esi
64011523:	pop    ebp
64011524:	pop    ebx
64011525:	pop    ecx
64011526:	ret    0x10
64011529:	int3   
6401152a:	int3   
6401152b:	int3   
6401152c:	int3   
6401152d:	int3   
6401152e:	int3   
6401152f:	int3   
64011530:	sub    esp,0x8
64011533:	push   esi
64011534:	mov    esi,ecx
64011536:	mov    edx,DWORD PTR [esi+0x4]
64011539:	test   edx,edx
6401153b:	jne    0x64011541
6401153d:	xor    ecx,ecx
6401153f:	jmp    0x64011549
64011541:	mov    ecx,DWORD PTR [esi+0x8]
64011544:	sub    ecx,edx
64011546:	sar    ecx,0x2
64011549:	test   edx,edx
6401154b:	je     0x64011571
6401154d:	mov    eax,DWORD PTR [esi+0xc]
64011550:	sub    eax,edx
64011552:	sar    eax,0x2
64011555:	cmp    ecx,eax
64011557:	jae    0x64011571
64011559:	mov    eax,DWORD PTR [esi+0x8]
6401155c:	mov    ecx,DWORD PTR [esp+0x10]
64011560:	mov    edx,DWORD PTR [ecx]
64011562:	mov    DWORD PTR [eax],edx
64011564:	add    eax,0x4
64011567:	mov    DWORD PTR [esi+0x8],eax
6401156a:	pop    esi
6401156b:	add    esp,0x8
6401156e:	ret    0x4
64011571:	push   edi
64011572:	mov    edi,DWORD PTR [esi+0x8]
64011575:	cmp    edx,edi
64011577:	jbe    0x6401157e
64011579:	call   0x640137b8
6401157e:	mov    eax,DWORD PTR [esp+0x14]
64011582:	push   eax
64011583:	push   edi
64011584:	push   esi
64011585:	lea    ecx,[esp+0x14]
64011589:	push   ecx
6401158a:	mov    ecx,esi
6401158c:	call   0x640114a0
64011591:	pop    edi
64011592:	pop    esi
64011593:	add    esp,0x8
64011596:	ret    0x4
64011599:	int3   
6401159a:	int3   
6401159b:	int3   
6401159c:	int3   
6401159d:	int3   
6401159e:	int3   
6401159f:	int3   
640115a0:	sub    esp,0x20
640115a3:	mov    eax,DWORD PTR [ecx]
640115a5:	mov    edx,DWORD PTR [ecx+0x4]
640115a8:	mov    DWORD PTR [esp],eax
640115ab:	mov    eax,DWORD PTR [ecx+0x8]
640115ae:	mov    ecx,DWORD PTR [ecx+0xc]
640115b1:	mov    DWORD PTR [esp+0x4],edx
640115b5:	lea    edx,[esp+0x10]
640115b9:	mov    DWORD PTR [esp+0xc],ecx
640115bd:	push   edx
640115be:	lea    ecx,[esp+0x4]
640115c2:	mov    DWORD PTR [esp+0xc],eax
640115c6:	call   0x64010a60
640115cb:	mov    ecx,DWORD PTR [esp+0x24]
640115cf:	lea    edx,[ecx+0x1c]
640115d2:	mov    DWORD PTR [esp],edx
640115d5:	mov    edx,DWORD PTR [eax]
640115d7:	mov    DWORD PTR [esp+0x4],ecx
640115db:	sub    esp,0x10
640115de:	mov    ecx,esp
640115e0:	mov    DWORD PTR [ecx],edx
640115e2:	mov    edx,DWORD PTR [eax+0x4]
640115e5:	mov    DWORD PTR [ecx+0x4],edx
640115e8:	mov    edx,DWORD PTR [eax+0x8]
640115eb:	mov    eax,DWORD PTR [eax+0xc]
640115ee:	mov    DWORD PTR [ecx+0x8],edx
640115f1:	mov    DWORD PTR [ecx+0xc],eax
640115f4:	lea    ecx,[esp+0x10]
640115f8:	call   0x64011280
640115fd:	add    esp,0x20
64011600:	ret    0x4
64011603:	int3   
64011604:	int3   
64011605:	int3   
64011606:	int3   
64011607:	int3   
64011608:	int3   
64011609:	int3   
6401160a:	int3   
6401160b:	int3   
6401160c:	int3   
6401160d:	int3   
6401160e:	int3   
6401160f:	int3   
64011610:	push   ebp
64011611:	lea    ebp,[esp-0x74]
64011615:	sub    esp,0x74
64011618:	push   0xffffffff
6401161a:	push   0x64023358
6401161f:	mov    eax,fs:0x0
64011625:	push   eax
64011626:	sub    esp,0x70
64011629:	mov    eax,ds:0x6402f09c
6401162e:	xor    eax,ebp
64011630:	mov    DWORD PTR [ebp+0x70],eax
64011633:	push   ebx
64011634:	push   esi
64011635:	push   edi
64011636:	push   eax
64011637:	lea    eax,[ebp-0xc]
6401163a:	mov    fs:0x0,eax
64011640:	mov    DWORD PTR [ebp-0x10],esp
64011643:	mov    eax,DWORD PTR [ebp+0x7c]
64011646:	mov    ecx,0xf
6401164b:	xor    edi,edi
6401164d:	mov    DWORD PTR [ebp+0x50],ecx
64011650:	mov    DWORD PTR [ebp+0x4c],edi
64011653:	mov    BYTE PTR [ebp+0x3c],0x0
64011657:	mov    DWORD PTR [ebp+0x6c],ecx
6401165a:	mov    DWORD PTR [ebp+0x68],edi
6401165d:	mov    BYTE PTR [ebp+0x58],0x0
64011661:	mov    DWORD PTR [ebp-0x4],edi
64011664:	mov    DWORD PTR [ebp-0x38],edi
64011667:	mov    DWORD PTR [ebp-0x28],edi
6401166a:	mov    ecx,DWORD PTR [eax+0x14]
6401166d:	mov    ebx,0x10
64011672:	cmp    DWORD PTR [eax+0x18],ebx
64011675:	mov    BYTE PTR [ebp-0x4],0x2
64011679:	jb     0x64011680
6401167b:	mov    eax,DWORD PTR [eax+0x4]
6401167e:	jmp    0x64011683
64011680:	add    eax,0x4
64011683:	push   edi
64011684:	push   ecx
64011685:	push   eax
64011686:	lea    esi,[ebp-0x38]
64011689:	call   0x640110b0
6401168e:	add    esp,0xc
64011691:	lea    eax,[ebp+0x38]
64011694:	push   eax
64011695:	mov    ecx,esi
64011697:	call   0x640115a0
6401169c:	mov    DWORD PTR [ebp-0x4],0x1
640116a3:	call   DWORD PTR ds:0x6402f06c
640116a9:	cmp    DWORD PTR [ebp+0x6c],ebx
640116ac:	mov    DWORD PTR [ebp+0x0],eax
640116af:	mov    BYTE PTR [ebp-0x4],0x4
640116b3:	jb     0x640116c0
640116b5:	mov    ebx,DWORD PTR [ebp+0x58]
640116b8:	cmp    ebx,edi
640116ba:	jne    0x640116c3
640116bc:	xor    eax,eax
640116be:	jmp    0x6401170a
640116c0:	lea    ebx,[ebp+0x58]
640116c3:	push   ebx
640116c4:	call   DWORD PTR ds:0x64026058
640116ca:	mov    edi,eax
640116cc:	add    edi,0x1
640116cf:	cmp    edi,0x3fffffff
640116d5:	jg     0x64011706
640116d7:	lea    eax,[edi+edi*1]
640116da:	call   0x640143e0
640116df:	mov    esi,esp
640116e1:	test   esi,esi
640116e3:	mov    DWORD PTR [ebp-0x10],esp
640116e6:	je     0x64011706
640116e8:	mov    ecx,DWORD PTR [ebp+0x0]
640116eb:	push   edi
640116ec:	push   esi
640116ed:	push   0xffffffff
640116ef:	push   ebx
640116f0:	push   0x0
640116f2:	push   ecx
640116f3:	mov    WORD PTR [esi],0x0
640116f8:	call   DWORD PTR ds:0x64026024
640116fe:	neg    eax
64011700:	sbb    eax,eax
64011702:	and    eax,esi
64011704:	jmp    0x64011708
64011706:	xor    eax,eax
64011708:	xor    edi,edi
6401170a:	push   eax
6401170b:	lea    ecx,[ebp+0x10]
6401170e:	call   0x64002590
64011713:	mov    edx,DWORD PTR ds:0x64030540
64011719:	mov    eax,DWORD PTR [edx+0xc]
6401171c:	mov    ecx,0x64030540
64011721:	mov    BYTE PTR [ebp-0x4],0x5
64011725:	call   eax
64011727:	add    eax,0x10
6401172a:	mov    DWORD PTR [ebp+0x14],eax
6401172d:	lea    ecx,[ebp+0x14]
64011730:	push   ecx
64011731:	lea    edx,[ebp+0x10]
64011734:	push   edx
64011735:	lea    eax,[ebp+0x18]
64011738:	push   eax
64011739:	mov    BYTE PTR [ebp-0x4],0x6
6401173d:	call   0x640021a0
64011742:	add    esp,0xc
64011745:	lea    ecx,[ebp+0x18]
64011748:	push   0x640286e0
6401174d:	push   ecx
6401174e:	mov    BYTE PTR [ebp-0x4],0x7
64011752:	call   0x64010c70
64011757:	add    esp,0x8
6401175a:	test   al,al
6401175c:	je     0x64011934
64011762:	mov    esi,DWORD PTR [ebp+0x14]
64011765:	call   0x6400df30
6401176a:	push   esi
6401176b:	call   eax
6401176d:	cmp    DWORD PTR [ebp+0x50],0x10
64011771:	mov    edx,DWORD PTR [ebp+0x4c]
64011774:	mov    eax,DWORD PTR [ebp+0x3c]
64011777:	push   edx
64011778:	jae    0x6401177d
6401177a:	lea    eax,[ebp+0x3c]
6401177d:	push   eax
6401177e:	mov    eax,DWORD PTR [ebp+0x18]
64011781:	push   ecx
64011782:	add    eax,0xfffffff0
64011785:	mov    DWORD PTR [ebp+0xc],esp
64011788:	mov    esi,esp
6401178a:	push   eax
6401178b:	call   0x640028a0
64011790:	add    eax,0x10
64011793:	add    esp,0x4
64011796:	mov    DWORD PTR [esi],eax
64011798:	call   0x640023e0
6401179d:	add    esp,0xc
640117a0:	lea    eax,[ebp+0xc]
640117a3:	push   edi
640117a4:	push   eax
640117a5:	call   0x64003490
640117aa:	add    esp,0x8
640117ad:	push   0x64026480
640117b2:	push   eax
640117b3:	lea    ecx,[ebp+0x8]
640117b6:	push   ecx
640117b7:	mov    BYTE PTR [ebp-0x4],0x8
640117bb:	call   0x64010e80
640117c0:	add    esp,0xc
640117c3:	mov    eax,DWORD PTR [ebp+0xc]
640117c6:	add    eax,0xfffffff0
640117c9:	mov    BYTE PTR [ebp-0x4],0xa
640117cd:	lea    edx,[eax+0xc]
640117d0:	or     ecx,0xffffffff
640117d3:	lock xadd DWORD PTR [edx],ecx
640117d7:	dec    ecx
640117d8:	test   ecx,ecx
640117da:	jg     0x640117e6
640117dc:	mov    ecx,DWORD PTR [eax]
640117de:	mov    edx,DWORD PTR [ecx]
640117e0:	push   eax
640117e1:	mov    eax,DWORD PTR [edx+0x4]
640117e4:	call   eax
640117e6:	mov    eax,DWORD PTR [ebp+0x18]
640117e9:	cmp    eax,edi
640117eb:	mov    ebx,eax
640117ed:	jne    0x640117f3
640117ef:	xor    eax,eax
640117f1:	jmp    0x64011823
640117f3:	push   eax
640117f4:	call   DWORD PTR ds:0x64026054
640117fa:	add    eax,0x1
640117fd:	cmp    eax,0x3fffffff
64011802:	jle    0x64011808
64011804:	xor    eax,eax
64011806:	jmp    0x64011823
64011808:	lea    esi,[eax+eax*1]
6401180b:	mov    eax,esi
6401180d:	call   0x640143e0
64011812:	mov    ecx,DWORD PTR [ebp+0x0]
64011815:	mov    DWORD PTR [ebp-0x10],esp
64011818:	mov    eax,esp
6401181a:	push   ecx
6401181b:	push   esi
6401181c:	push   ebx
6401181d:	push   eax
6401181e:	call   0x64002b80
64011823:	push   eax
64011824:	lea    ecx,[ebp+0x4]
64011827:	call   0x640063f0
6401182c:	lea    edx,[ebp+0x8]
6401182f:	push   edx
64011830:	lea    eax,[ebp+0x4]
64011833:	push   eax
64011834:	mov    BYTE PTR [ebp-0x4],0xb
64011838:	call   0x64002530
6401183d:	mov    eax,DWORD PTR [ebp+0x4]
64011840:	add    eax,0xfffffff0
64011843:	add    esp,0x8
64011846:	mov    BYTE PTR [ebp-0x4],0xa
6401184a:	lea    ecx,[eax+0xc]
6401184d:	or     edx,0xffffffff
64011850:	lock xadd DWORD PTR [ecx],edx
64011854:	dec    edx
64011855:	test   edx,edx
64011857:	jg     0x64011863
64011859:	mov    ecx,DWORD PTR [eax]
6401185b:	mov    edx,DWORD PTR [ecx]
6401185d:	push   eax
6401185e:	mov    eax,DWORD PTR [edx+0x4]
64011861:	call   eax
64011863:	push   0x40
64011865:	xor    eax,eax
64011867:	lea    ecx,[ebp-0x78]
6401186a:	push   edi
6401186b:	push   ecx
6401186c:	mov    DWORD PTR [ebp-0x20],edi
6401186f:	mov    DWORD PTR [ebp-0x1c],eax
64011872:	mov    DWORD PTR [ebp-0x18],eax
64011875:	mov    DWORD PTR [ebp-0x14],eax
64011878:	call   0x64014360
6401187d:	lea    edx,[ebp+0x1c]
64011880:	push   edx
64011881:	mov    DWORD PTR [ebp-0x7c],0x44
64011888:	call   0x640014a0
6401188d:	add    esp,0x10
64011890:	cmp    DWORD PTR [ebp+0x34],0x10
64011894:	mov    ebx,DWORD PTR [ebp+0x20]
64011897:	mov    BYTE PTR [ebp-0x4],0xc
6401189b:	jae    0x640118a0
6401189d:	lea    ebx,[ebp+0x20]
640118a0:	mov    esi,DWORD PTR [ebp+0x18]
640118a3:	call   0x6400dd70
640118a8:	lea    ecx,[ebp-0x20]
640118ab:	push   ecx
640118ac:	lea    edx,[ebp-0x7c]
640118af:	push   edx
640118b0:	push   edi
640118b1:	push   ebx
640118b2:	push   0x400
640118b7:	push   0x1
640118b9:	push   edi
640118ba:	push   edi
640118bb:	push   edi
640118bc:	push   esi
640118bd:	call   eax
640118bf:	cmp    eax,edi
640118c1:	je     0x640118d5
640118c3:	mov    eax,DWORD PTR [ebp-0x1c]
640118c6:	mov    esi,DWORD PTR ds:0x64026040
640118cc:	push   eax
640118cd:	call   esi
640118cf:	mov    ecx,DWORD PTR [ebp-0x20]
640118d2:	push   ecx
640118d3:	call   esi
640118d5:	mov    esi,DWORD PTR [ebp+0x18]
640118d8:	call   0x6400de50
640118dd:	push   0x4
640118df:	push   edi
640118e0:	push   esi
640118e1:	call   eax
640118e3:	mov    esi,DWORD PTR [ebp+0x14]
640118e6:	call   0x6400de50
640118eb:	push   0x4
640118ed:	push   edi
640118ee:	push   esi
640118ef:	call   eax
640118f1:	cmp    DWORD PTR [ebp+0x34],0x10
640118f5:	jb     0x64011903
640118f7:	mov    edx,DWORD PTR [ebp+0x20]
640118fa:	push   edx
640118fb:	call   0x64013402
64011900:	add    esp,0x4
64011903:	mov    eax,DWORD PTR [ebp+0x8]
64011906:	add    eax,0xfffffff0
64011909:	mov    DWORD PTR [ebp+0x34],0xf
64011910:	mov    DWORD PTR [ebp+0x30],edi
64011913:	mov    BYTE PTR [ebp+0x20],0x0
64011917:	mov    BYTE PTR [ebp-0x4],0x7
6401191b:	lea    ecx,[eax+0xc]
6401191e:	or     edx,0xffffffff
64011921:	lock xadd DWORD PTR [ecx],edx
64011925:	dec    edx
64011926:	test   edx,edx
64011928:	jg     0x64011934
6401192a:	mov    ecx,DWORD PTR [eax]
6401192c:	mov    edx,DWORD PTR [ecx]
6401192e:	push   eax
6401192f:	mov    eax,DWORD PTR [edx+0x4]
64011932:	call   eax
64011934:	mov    eax,DWORD PTR [ebp+0x18]
64011937:	add    eax,0xfffffff0
6401193a:	mov    BYTE PTR [ebp-0x4],0x6
6401193e:	lea    ecx,[eax+0xc]
64011941:	or     edx,0xffffffff
64011944:	lock xadd DWORD PTR [ecx],edx
64011948:	dec    edx
64011949:	test   edx,edx
6401194b:	jg     0x64011957
6401194d:	mov    ecx,DWORD PTR [eax]
6401194f:	mov    edx,DWORD PTR [ecx]
64011951:	push   eax
64011952:	mov    eax,DWORD PTR [edx+0x4]
64011955:	call   eax
64011957:	mov    eax,DWORD PTR [ebp+0x14]
6401195a:	add    eax,0xfffffff0
6401195d:	mov    BYTE PTR [ebp-0x4],0x5
64011961:	lea    ecx,[eax+0xc]
64011964:	or     edx,0xffffffff
64011967:	lock xadd DWORD PTR [ecx],edx
6401196b:	dec    edx
6401196c:	test   edx,edx
6401196e:	jg     0x6401197a
64011970:	mov    ecx,DWORD PTR [eax]
64011972:	mov    edx,DWORD PTR [ecx]
64011974:	push   eax
64011975:	mov    eax,DWORD PTR [edx+0x4]
64011978:	call   eax
6401197a:	mov    eax,DWORD PTR [ebp+0x10]
6401197d:	add    eax,0xfffffff0
64011980:	mov    BYTE PTR [ebp-0x4],0x4
64011984:	lea    ecx,[eax+0xc]
64011987:	or     edx,0xffffffff
6401198a:	lock xadd DWORD PTR [ecx],edx
6401198e:	dec    edx
6401198f:	test   edx,edx
64011991:	jg     0x640119a7
64011993:	mov    ecx,DWORD PTR [eax]
64011995:	mov    edx,DWORD PTR [ecx]
64011997:	push   eax
64011998:	mov    eax,DWORD PTR [edx+0x4]
6401199b:	call   eax
6401199d:	jmp    0x640119a7
6401199f:	mov    eax,0x640119a5
640119a4:	ret    
640119a5:	xor    edi,edi
640119a7:	mov    esi,DWORD PTR [ebp-0x28]
640119aa:	cmp    esi,edi
640119ac:	je     0x640119bd
640119ae:	push   esi
640119af:	call   0x6400fdd0
640119b4:	push   esi
640119b5:	call   0x64013402
640119ba:	add    esp,0x8
640119bd:	mov    esi,0x10
640119c2:	cmp    DWORD PTR [ebp+0x6c],esi
640119c5:	jb     0x640119d3
640119c7:	mov    ecx,DWORD PTR [ebp+0x58]
640119ca:	push   ecx
640119cb:	call   0x64013402
640119d0:	add    esp,0x4
640119d3:	cmp    DWORD PTR [ebp+0x50],esi
640119d6:	mov    DWORD PTR [ebp+0x6c],0xf
640119dd:	mov    DWORD PTR [ebp+0x68],edi
640119e0:	mov    BYTE PTR [ebp+0x58],0x0
640119e4:	jb     0x64011a0a
640119e6:	mov    edx,DWORD PTR [ebp+0x3c]
640119e9:	push   edx
640119ea:	call   0x64013402
640119ef:	add    esp,0x4
640119f2:	jmp    0x64011a0a
640119f4:	mov    eax,0x640119fa
640119f9:	ret    
640119fa:	lea    ecx,[ebp-0x38]
640119fd:	call   0x64010c50
64011a02:	lea    ecx,[ebp+0x38]
64011a05:	call   0x64006ee0
64011a0a:	lea    esp,[ebp-0x8c]
64011a10:	mov    ecx,DWORD PTR [ebp-0xc]
64011a13:	mov    DWORD PTR fs:0x0,ecx
64011a1a:	pop    ecx
64011a1b:	pop    edi
64011a1c:	pop    esi
64011a1d:	pop    ebx
64011a1e:	mov    ecx,DWORD PTR [ebp+0x70]
64011a21:	xor    ecx,ebp
64011a23:	call   0x64013c5c
64011a28:	add    ebp,0x74
64011a2b:	mov    esp,ebp
64011a2d:	pop    ebp
64011a2e:	ret    
64011a2f:	int3   
64011a30:	push   ecx
64011a31:	push   esi
64011a32:	mov    esi,ecx
64011a34:	mov    eax,DWORD PTR [esi+0x4]
64011a37:	test   eax,eax
64011a39:	je     0x64011a57
64011a3b:	mov    ecx,DWORD PTR [esp+0x4]
64011a3f:	mov    edx,DWORD PTR [esi+0x8]
64011a42:	push   ecx
64011a43:	push   esi
64011a44:	push   edx
64011a45:	push   eax
64011a46:	call   0x6400bf70
64011a4b:	mov    eax,DWORD PTR [esi+0x4]
64011a4e:	push   eax
64011a4f:	call   0x64013402
64011a54:	add    esp,0x14
64011a57:	mov    DWORD PTR [esi+0x4],0x0
64011a5e:	mov    DWORD PTR [esi+0x8],0x0
64011a65:	mov    DWORD PTR [esi+0xc],0x0
64011a6c:	pop    esi
64011a6d:	pop    ecx
64011a6e:	ret    
64011a6f:	int3   
64011a70:	push   0xffffffff
64011a72:	push   0x6402338e
64011a77:	mov    eax,fs:0x0
64011a7d:	push   eax
64011a7e:	push   ecx
64011a7f:	push   ebx
64011a80:	push   esi
64011a81:	push   edi
64011a82:	mov    eax,ds:0x6402f09c
64011a87:	xor    eax,esp
64011a89:	push   eax
64011a8a:	lea    eax,[esp+0x14]
64011a8e:	mov    fs:0x0,eax
64011a94:	mov    eax,0x1
64011a99:	test   BYTE PTR ds:0x640304c8,al
64011a9f:	jne    0x64011ada
64011aa1:	or     DWORD PTR ds:0x640304c8,eax
64011aa7:	push   0x64025410
64011aac:	mov    DWORD PTR ds:0x640304bc,0x0
64011ab6:	mov    DWORD PTR ds:0x640304c0,0x0
64011ac0:	mov    DWORD PTR ds:0x640304c4,0x0
64011aca:	call   0x64013d8f
64011acf:	add    esp,0x4
64011ad2:	mov    DWORD PTR [esp+0x1c],0xffffffff
64011ada:	mov    esi,DWORD PTR ds:0x640304bc
64011ae0:	test   esi,esi
64011ae2:	je     0x64011af7
64011ae4:	mov    edi,DWORD PTR ds:0x640304c0
64011aea:	mov    eax,edi
64011aec:	sub    eax,esi
64011aee:	sar    eax,0x2
64011af1:	jne    0x64011c0d
64011af7:	push   0x640265a8
64011afc:	push   0xc
64011afe:	push   0x64026598
64011b03:	call   0x64006690
64011b08:	mov    esi,DWORD PTR ds:0x640261c8
64011b0e:	add    esp,0xc
64011b11:	push   eax
64011b12:	call   esi
64011b14:	lea    ecx,[esp+0x10]
64011b18:	push   ecx
64011b19:	mov    ecx,0x640304b8
64011b1e:	mov    DWORD PTR [esp+0x14],eax
64011b22:	call   0x64011530
64011b27:	push   0x64026558
64011b2c:	push   0xc
64011b2e:	push   0x64026548
64011b33:	call   0x64006690
64011b38:	add    esp,0xc
64011b3b:	push   eax
64011b3c:	call   esi
64011b3e:	lea    edx,[esp+0x10]
64011b42:	push   edx
64011b43:	mov    ecx,0x640304b8
64011b48:	mov    DWORD PTR [esp+0x14],eax
64011b4c:	call   0x64011530
64011b51:	push   0x6402650c
64011b56:	push   0xc
64011b58:	push   0x64026548
64011b5d:	call   0x64006690
64011b62:	add    esp,0xc
64011b65:	push   eax
64011b66:	call   esi
64011b68:	mov    DWORD PTR [esp+0x10],eax
64011b6c:	lea    eax,[esp+0x10]
64011b70:	push   eax
64011b71:	mov    ecx,0x640304b8
64011b76:	call   0x64011530
64011b7b:	push   0x640264d0
64011b80:	push   0xc
64011b82:	push   0x640264c0
64011b87:	call   0x64006690
64011b8c:	add    esp,0xc
64011b8f:	push   eax
64011b90:	call   esi
64011b92:	lea    ecx,[esp+0x10]
64011b96:	push   ecx
64011b97:	mov    ecx,0x640304b8
64011b9c:	mov    DWORD PTR [esp+0x14],eax
64011ba0:	call   0x64011530
64011ba5:	push   0x64026498
64011baa:	push   0xc
64011bac:	push   0x640264c0
64011bb1:	call   0x64006690
64011bb6:	add    esp,0xc
64011bb9:	push   eax
64011bba:	call   esi
64011bbc:	lea    edx,[esp+0x10]
64011bc0:	push   edx
64011bc1:	mov    ecx,0x640304b8
64011bc6:	mov    DWORD PTR [esp+0x14],eax
64011bca:	call   0x64011530
64011bcf:	call   DWORD PTR ds:0x6402605c
64011bd5:	push   eax
64011bd6:	call   0x6401440c
64011bdb:	mov    eax,ds:0x640304bc
64011be0:	add    esp,0x4
64011be3:	test   eax,eax
64011be5:	jne    0x64011beb
64011be7:	xor    esi,esi
64011be9:	jmp    0x64011bf6
64011beb:	mov    esi,DWORD PTR ds:0x640304c0
64011bf1:	sub    esi,eax
64011bf3:	sar    esi,0x2
64011bf6:	call   0x64014419
64011bfb:	mov    edi,DWORD PTR ds:0x640304c0
64011c01:	xor    edx,edx
64011c03:	div    esi
64011c05:	mov    esi,DWORD PTR ds:0x640304bc
64011c0b:	jmp    0x64011c13
64011c0d:	mov    edx,DWORD PTR ds:0x640304b4
64011c13:	test   esi,esi
64011c15:	jne    0x64011c1b
64011c17:	xor    ecx,ecx
64011c19:	jmp    0x64011c22
64011c1b:	mov    ecx,edi
64011c1d:	sub    ecx,esi
64011c1f:	sar    ecx,0x2
64011c22:	lea    eax,[edx+0x1]
64011c25:	xor    edx,edx
64011c27:	div    ecx
64011c29:	test   esi,esi
64011c2b:	mov    DWORD PTR ds:0x640304b4,edx
64011c31:	mov    ebx,edx
64011c33:	je     0x64011c3e
64011c35:	sub    edi,esi
64011c37:	sar    edi,0x2
64011c3a:	cmp    edx,edi
64011c3c:	jb     0x64011c5e
64011c3e:	call   0x640137b8
64011c43:	mov    eax,ds:0x640304bc
64011c48:	mov    eax,DWORD PTR [eax+ebx*4]
64011c4b:	mov    ecx,DWORD PTR [esp+0x14]
64011c4f:	mov    DWORD PTR fs:0x0,ecx
64011c56:	pop    ecx
64011c57:	pop    edi
64011c58:	pop    esi
64011c59:	pop    ebx
64011c5a:	add    esp,0x10
64011c5d:	ret    
64011c5e:	mov    eax,DWORD PTR [esi+ebx*4]
64011c61:	mov    ecx,DWORD PTR [esp+0x14]
64011c65:	mov    DWORD PTR fs:0x0,ecx
64011c6c:	pop    ecx
64011c6d:	pop    edi
64011c6e:	pop    esi
64011c6f:	pop    ebx
64011c70:	add    esp,0x10
64011c73:	ret    
64011c74:	int3   
64011c75:	int3   
64011c76:	int3   
64011c77:	int3   
64011c78:	int3   
64011c79:	int3   
64011c7a:	int3   
64011c7b:	int3   
64011c7c:	int3   
64011c7d:	int3   
64011c7e:	int3   
64011c7f:	int3   
64011c80:	push   ebp
64011c81:	mov    ebp,esp
64011c83:	push   0xffffffff
64011c85:	push   0x640233b8
64011c8a:	mov    eax,fs:0x0
64011c90:	push   eax
64011c91:	sub    esp,0x8
64011c94:	push   ebx
64011c95:	push   esi
64011c96:	push   edi
64011c97:	mov    eax,ds:0x6402f09c
64011c9c:	xor    eax,ebp
64011c9e:	push   eax
64011c9f:	lea    eax,[ebp-0xc]
64011ca2:	mov    fs:0x0,eax
64011ca8:	mov    DWORD PTR [ebp-0x10],esp
64011cab:	xor    ebx,ebx
64011cad:	mov    DWORD PTR [ebp-0x4],ebx
64011cb0:	call   0x64011a70
64011cb5:	lea    ecx,[ebp-0x14]
64011cb8:	mov    edi,eax
64011cba:	call   0x6400a0c0
64011cbf:	mov    eax,DWORD PTR [ebp+0x8]
64011cc2:	cmp    DWORD PTR [eax+0x18],0x10
64011cc6:	mov    ecx,DWORD PTR [eax+0x14]
64011cc9:	mov    BYTE PTR [ebp-0x4],0x1
64011ccd:	jb     0x64011cd4
64011ccf:	mov    eax,DWORD PTR [eax+0x4]
64011cd2:	jmp    0x64011cd7
64011cd4:	add    eax,0x4
64011cd7:	mov    esi,DWORD PTR [ebp+0xc]
64011cda:	push   0xffffffff
64011cdc:	push   esi
64011cdd:	add    ecx,0x1
64011ce0:	push   ecx
64011ce1:	push   eax
64011ce2:	push   edi
64011ce3:	lea    ecx,[ebp-0x14]
64011ce6:	call   0x6400a0e0
64011ceb:	cmp    al,bl
64011ced:	je     0x64011d0e
64011cef:	lea    ecx,[ebp-0x14]
64011cf2:	mov    BYTE PTR [ebp-0x4],bl
64011cf5:	call   0x6400a0d0
64011cfa:	mov    al,0x1
64011cfc:	mov    ecx,DWORD PTR [ebp-0xc]
64011cff:	mov    DWORD PTR fs:0x0,ecx
64011d06:	pop    ecx
64011d07:	pop    edi
64011d08:	pop    esi
64011d09:	pop    ebx
64011d0a:	mov    esp,ebp
64011d0c:	pop    ebp
64011d0d:	ret    
64011d0e:	push   ebx
64011d0f:	push   0x640286e2
64011d14:	mov    ecx,esi
64011d16:	call   0x64001860
64011d1b:	lea    ecx,[ebp-0x14]
64011d1e:	mov    BYTE PTR [ebp-0x4],bl
64011d21:	call   0x6400a0d0
64011d26:	xor    al,al
64011d28:	mov    ecx,DWORD PTR [ebp-0xc]
64011d2b:	mov    DWORD PTR fs:0x0,ecx
64011d32:	pop    ecx
64011d33:	pop    edi
64011d34:	pop    esi
64011d35:	pop    ebx
64011d36:	mov    esp,ebp
64011d38:	pop    ebp
64011d39:	ret    
64011d3a:	mov    eax,0x64011d26
64011d3f:	ret    
64011d40:	push   ecx
64011d41:	push   esi
64011d42:	push   0x64026600
64011d47:	push   0x17
64011d49:	push   0x640265e8
64011d4e:	mov    DWORD PTR [esp+0x10],0x0
64011d56:	call   0x64006690
64011d5b:	mov    esi,DWORD PTR [esp+0x18]
64011d5f:	add    esp,0xc
64011d62:	push   eax
64011d63:	mov    ecx,esi
64011d65:	call   0x640063f0
64011d6a:	mov    eax,esi
64011d6c:	pop    esi
64011d6d:	pop    ecx
64011d6e:	ret    
64011d6f:	int3   
64011d70:	push   0xffffffff
64011d72:	push   0x640233e8
64011d77:	mov    eax,fs:0x0
64011d7d:	push   eax
64011d7e:	push   ecx
64011d7f:	push   esi
64011d80:	mov    eax,ds:0x6402f09c
64011d85:	xor    eax,esp
64011d87:	push   eax
64011d88:	lea    eax,[esp+0xc]
64011d8c:	mov    fs:0x0,eax
64011d92:	lea    eax,[esp+0x8]
64011d96:	push   eax
64011d97:	call   0x64011d40
64011d9c:	add    esp,0x4
64011d9f:	mov    eax,DWORD PTR [eax]
64011da1:	push   eax
64011da2:	push   0x0
64011da4:	mov    DWORD PTR [esp+0x1c],0x0
64011dac:	call   0x640062f0
64011db1:	push   eax
64011db2:	call   DWORD PTR ds:0x64026064
64011db8:	mov    esi,eax
64011dba:	mov    eax,DWORD PTR [esp+0x8]
64011dbe:	add    eax,0xfffffff0
64011dc1:	mov    DWORD PTR [esp+0x14],0xffffffff
64011dc9:	lea    ecx,[eax+0xc]
64011dcc:	or     edx,0xffffffff
64011dcf:	lock xadd DWORD PTR [ecx],edx
64011dd3:	dec    edx
64011dd4:	test   edx,edx
64011dd6:	jg     0x64011de2
64011dd8:	mov    ecx,DWORD PTR [eax]
64011dda:	mov    edx,DWORD PTR [ecx]
64011ddc:	push   eax
64011ddd:	mov    eax,DWORD PTR [edx+0x4]
64011de0:	call   eax
64011de2:	test   esi,esi
64011de4:	jne    0x64011df9
64011de6:	xor    al,al
64011de8:	mov    ecx,DWORD PTR [esp+0xc]
64011dec:	mov    DWORD PTR fs:0x0,ecx
64011df3:	pop    ecx
64011df4:	pop    esi
64011df5:	add    esp,0x10
64011df8:	ret    
64011df9:	push   0x0
64011dfb:	push   esi
64011dfc:	call   DWORD PTR ds:0x640260b4
64011e02:	test   eax,eax
64011e04:	sete   al
64011e07:	mov    ecx,DWORD PTR [esp+0xc]
64011e0b:	mov    DWORD PTR fs:0x0,ecx
64011e12:	pop    ecx
64011e13:	pop    esi
64011e14:	add    esp,0x10
64011e17:	ret    
64011e18:	int3   
64011e19:	int3   
64011e1a:	int3   
64011e1b:	int3   
64011e1c:	int3   
64011e1d:	int3   
64011e1e:	int3   
64011e1f:	int3   
64011e20:	push   0xffffffff
64011e22:	push   0x64023420
64011e27:	mov    eax,fs:0x0
64011e2d:	push   eax
64011e2e:	sub    esp,0x8
64011e31:	push   ebx
64011e32:	push   esi
64011e33:	push   edi
64011e34:	mov    eax,ds:0x6402f09c
64011e39:	xor    eax,esp
64011e3b:	push   eax
64011e3c:	lea    eax,[esp+0x18]
64011e40:	mov    fs:0x0,eax
64011e46:	xor    ebx,ebx
64011e48:	mov    DWORD PTR [esp+0x14],ebx
64011e4c:	push   0x64026644
64011e51:	push   0xf
64011e53:	push   0x64026624
64011e58:	mov    DWORD PTR [esp+0x2c],ebx
64011e5c:	call   0x64006950
64011e61:	add    esp,0xc
64011e64:	push   eax
64011e65:	lea    ecx,[esp+0x14]
64011e69:	call   0x64002590
64011e6e:	mov    eax,DWORD PTR [esp+0x10]
64011e72:	push   ebx
64011e73:	push   ebx
64011e74:	push   0x3
64011e76:	push   ebx
64011e77:	push   ebx
64011e78:	push   0xc0000000
64011e7d:	push   eax
64011e7e:	mov    BYTE PTR [esp+0x3c],0x1
64011e83:	call   0x6400e010
64011e88:	call   eax
64011e8a:	mov    esi,eax
64011e8c:	mov    eax,DWORD PTR [esp+0x10]
64011e90:	add    eax,0xfffffff0
64011e93:	mov    DWORD PTR [esp+0x14],esi
64011e97:	mov    BYTE PTR [esp+0x20],bl
64011e9b:	or     edx,0xffffffff
64011e9e:	lea    ecx,[eax+0xc]
64011ea1:	lock xadd DWORD PTR [ecx],edx
64011ea5:	dec    edx
64011ea6:	cmp    esi,0xffffffff
64011ea9:	je     0x64011ee8
64011eab:	test   edx,edx
64011ead:	jg     0x64011eb9
64011eaf:	mov    ecx,DWORD PTR [eax]
64011eb1:	mov    edx,DWORD PTR [ecx]
64011eb3:	push   eax
64011eb4:	mov    eax,DWORD PTR [edx+0x4]
64011eb7:	call   eax
64011eb9:	cmp    esi,ebx
64011ebb:	je     0x64011ed3
64011ebd:	call   DWORD PTR ds:0x64026044
64011ec3:	push   esi
64011ec4:	mov    edi,eax
64011ec6:	call   DWORD PTR ds:0x64026040
64011ecc:	push   edi
64011ecd:	call   DWORD PTR ds:0x64026060
64011ed3:	mov    al,0x1
64011ed5:	mov    ecx,DWORD PTR [esp+0x18]
64011ed9:	mov    DWORD PTR fs:0x0,ecx
64011ee0:	pop    ecx
64011ee1:	pop    edi
64011ee2:	pop    esi
64011ee3:	pop    ebx
64011ee4:	add    esp,0x14
64011ee7:	ret    
64011ee8:	test   edx,edx
64011eea:	jg     0x64011ef6
64011eec:	mov    ecx,DWORD PTR [eax]
64011eee:	mov    edx,DWORD PTR [ecx]
64011ef0:	push   eax
64011ef1:	mov    eax,DWORD PTR [edx+0x4]
64011ef4:	call   eax
64011ef6:	call   DWORD PTR ds:0x64026044
64011efc:	push   0xffffffff
64011efe:	mov    esi,eax
64011f00:	call   DWORD PTR ds:0x64026040
64011f06:	push   esi
64011f07:	call   DWORD PTR ds:0x64026060
64011f0d:	xor    al,al
64011f0f:	mov    ecx,DWORD PTR [esp+0x18]
64011f13:	mov    DWORD PTR fs:0x0,ecx
64011f1a:	pop    ecx
64011f1b:	pop    edi
64011f1c:	pop    esi
64011f1d:	pop    ebx
64011f1e:	add    esp,0x14
64011f21:	ret    
64011f22:	int3   
64011f23:	int3   
64011f24:	int3   
64011f25:	int3   
64011f26:	int3   
64011f27:	int3   
64011f28:	int3   
64011f29:	int3   
64011f2a:	int3   
64011f2b:	int3   
64011f2c:	int3   
64011f2d:	int3   
64011f2e:	int3   
64011f2f:	int3   
64011f30:	push   ebp
64011f31:	lea    ebp,[esp-0x128]
64011f38:	sub    esp,0x128
64011f3e:	push   0xffffffff
64011f40:	push   0x64023541
64011f45:	mov    eax,fs:0x0
64011f4b:	push   eax
64011f4c:	sub    esp,0x90
64011f52:	mov    eax,ds:0x6402f09c
64011f57:	xor    eax,ebp
64011f59:	mov    DWORD PTR [ebp+0x124],eax
64011f5f:	push   ebx
64011f60:	push   esi
64011f61:	push   edi
64011f62:	push   eax
64011f63:	lea    eax,[ebp-0xc]
64011f66:	mov    fs:0x0,eax
64011f6c:	mov    esi,DWORD PTR [ebp+0x130]
64011f72:	xor    ebx,ebx
64011f74:	mov    DWORD PTR [ebp-0x4],ebx
64011f77:	mov    DWORD PTR [ebp-0x58],esi
64011f7a:	mov    DWORD PTR [ebp-0x50],ebx
64011f7d:	call   DWORD PTR ds:0x6402f06c
64011f83:	mov    eax,ds:0x64030540
64011f88:	mov    edx,DWORD PTR [eax+0xc]
64011f8b:	mov    ecx,0x64030540
64011f90:	call   edx
64011f92:	add    eax,0x10
64011f95:	mov    DWORD PTR [esi],eax
64011f97:	push   0x640269d8
64011f9c:	push   0xd
64011f9e:	mov    edi,0x1
64011fa3:	push   0x640269c8
64011fa8:	mov    DWORD PTR [ebp-0x4],ebx
64011fab:	mov    DWORD PTR [ebp-0x50],edi
64011fae:	call   0x64006690
64011fb3:	add    esp,0xc
64011fb6:	push   eax
64011fb7:	mov    ecx,esi
64011fb9:	call   0x64002660
64011fbe:	push   0x6402699c
64011fc3:	push   0x3
64011fc5:	push   0x64026998
64011fca:	call   0x64006690
64011fcf:	add    esp,0xc
64011fd2:	push   eax
64011fd3:	mov    ecx,esi
64011fd5:	call   0x64002660
64011fda:	push   0x6402698c
64011fdf:	mov    ecx,esi
64011fe1:	call   0x64002660
64011fe6:	push   0x64026960
64011feb:	push   0x3
64011fed:	push   0x6402695c
64011ff2:	call   0x64006690
64011ff7:	add    esp,0xc
64011ffa:	push   eax
64011ffb:	mov    ecx,esi
64011ffd:	call   0x64002660
64012002:	push   0x64026954
64012007:	mov    ecx,esi
64012009:	call   0x64002660
6401200e:	mov    eax,ds:0x64030540
64012013:	mov    edx,DWORD PTR [eax+0xc]
64012016:	mov    ecx,0x64030540
6401201b:	call   edx
6401201d:	add    eax,0x10
64012020:	mov    DWORD PTR [ebp-0x4c],eax
64012023:	mov    eax,ds:0x64030540
64012028:	mov    edx,DWORD PTR [eax+0xc]
6401202b:	mov    ecx,0x64030540
64012030:	mov    DWORD PTR [ebp-0x4],edi
64012033:	call   edx
64012035:	add    eax,0x10
64012038:	mov    DWORD PTR [ebp-0x54],eax
6401203b:	lea    eax,[ebp+0x114]
64012041:	push   eax
64012042:	mov    BYTE PTR [ebp-0x4],0x2
64012046:	call   0x64006140
6401204b:	add    esp,0x4
6401204e:	test   al,al
64012050:	je     0x640120f0
64012056:	push   0x64026914
6401205b:	push   0x4
6401205d:	push   0x6402690c
64012062:	call   0x64006690
64012067:	add    esp,0xc
6401206a:	push   eax
6401206b:	lea    ecx,[ebp-0x10]
6401206e:	call   0x640063f0
64012073:	mov    eax,DWORD PTR [eax]
64012075:	mov    ecx,DWORD PTR [eax-0xc]
64012078:	push   ecx
64012079:	push   eax
6401207a:	mov    ecx,esi
6401207c:	mov    BYTE PTR [ebp-0x4],0x3
64012080:	call   0x640029e0
64012085:	mov    eax,DWORD PTR [ebp-0x10]
64012088:	add    eax,0xfffffff0
6401208b:	mov    BYTE PTR [ebp-0x4],0x2
6401208f:	lea    ecx,[eax+0xc]
64012092:	or     edx,0xffffffff
64012095:	lock xadd DWORD PTR [ecx],edx
64012099:	dec    edx
6401209a:	test   edx,edx
6401209c:	jg     0x640120a8
6401209e:	mov    ecx,DWORD PTR [eax]
640120a0:	mov    edx,DWORD PTR [ecx]
640120a2:	push   eax
640120a3:	mov    eax,DWORD PTR [edx+0x4]
640120a6:	call   eax
640120a8:	lea    ecx,[ebp+0x114]
640120ae:	push   ecx
640120af:	lea    edx,[ebp-0x10]
640120b2:	push   edx
640120b3:	call   0x64002eb0
640120b8:	add    esp,0x8
640120bb:	mov    eax,DWORD PTR [eax]
640120bd:	mov    ecx,DWORD PTR [eax-0xc]
640120c0:	push   ecx
640120c1:	push   eax
640120c2:	mov    ecx,esi
640120c4:	mov    BYTE PTR [ebp-0x4],0x4
640120c8:	call   0x640029e0
640120cd:	mov    eax,DWORD PTR [ebp-0x10]
640120d0:	add    eax,0xfffffff0
640120d3:	mov    BYTE PTR [ebp-0x4],0x2
640120d7:	lea    ecx,[eax+0xc]
640120da:	or     edx,0xffffffff
640120dd:	lock xadd DWORD PTR [ecx],edx
640120e1:	dec    edx
640120e2:	test   edx,edx
640120e4:	jg     0x640120f0
640120e6:	mov    ecx,DWORD PTR [eax]
640120e8:	mov    edx,DWORD PTR [ecx]
640120ea:	push   eax
640120eb:	mov    eax,DWORD PTR [edx+0x4]
640120ee:	call   eax
640120f0:	call   0x64010ab0
640120f5:	test   al,al
640120f7:	je     0x64012115
640120f9:	push   0x640268d8
640120fe:	push   0x6
64012100:	push   0x640268d0
64012105:	call   0x64006690
6401210a:	add    esp,0xc
6401210d:	push   eax
6401210e:	mov    ecx,esi
64012110:	call   0x64002660
64012115:	call   0x64011e20
6401211a:	test   al,al
6401211c:	je     0x6401213a
6401211e:	push   0x640268a8
64012123:	push   0x6
64012125:	push   0x640268a0
6401212a:	call   0x64006690
6401212f:	add    esp,0xc
64012132:	push   eax
64012133:	mov    ecx,esi
64012135:	call   0x64002660
6401213a:	mov    edx,DWORD PTR ds:0x64030540
64012140:	mov    eax,DWORD PTR [edx+0xc]
64012143:	mov    ecx,0x64030540
64012148:	call   eax
6401214a:	add    eax,0x10
6401214d:	mov    DWORD PTR [ebp-0x28],eax
64012150:	mov    edx,DWORD PTR ds:0x64030540
64012156:	mov    eax,DWORD PTR [edx+0xc]
64012159:	mov    ecx,0x64030540
6401215e:	mov    BYTE PTR [ebp-0x4],0x5
64012162:	call   eax
64012164:	add    eax,0x10
64012167:	mov    DWORD PTR [ebp-0x48],eax
6401216a:	mov    edx,DWORD PTR ds:0x64030540
64012170:	mov    eax,DWORD PTR [edx+0xc]
64012173:	mov    ecx,0x64030540
64012178:	mov    BYTE PTR [ebp-0x4],0x6
6401217c:	call   eax
6401217e:	add    eax,0x10
64012181:	mov    DWORD PTR [ebp-0x24],eax
64012184:	lea    ecx,[ebp-0x44]
64012187:	push   ecx
64012188:	lea    edx,[ebp-0x24]
6401218b:	push   edx
6401218c:	lea    eax,[ebp-0x28]
6401218f:	push   eax
64012190:	mov    BYTE PTR [ebp-0x4],0x7
64012194:	mov    DWORD PTR [ebp-0x44],ebx
64012197:	mov    DWORD PTR [ebp-0x40],ebx
6401219a:	call   0x6400af20
6401219f:	add    esp,0xc
640121a2:	test   al,al
640121a4:	je     0x640123e5
640121aa:	lea    ecx,[ebp-0x24]
640121ad:	push   ecx
640121ae:	lea    edx,[ebp-0x14]
640121b1:	push   edx
640121b2:	call   0x64003150
640121b7:	mov    edi,eax
640121b9:	push   0x6402687c
640121be:	push   0x5
640121c0:	mov    bl,0x8
640121c2:	push   0x64026874
640121c7:	mov    BYTE PTR [ebp-0x4],bl
640121ca:	call   0x64006690
640121cf:	add    esp,0x14
640121d2:	push   eax
640121d3:	lea    ecx,[ebp-0x18]
640121d6:	call   0x640063f0
640121db:	push   edi
640121dc:	push   eax
640121dd:	lea    eax,[ebp-0x10]
640121e0:	push   eax
640121e1:	mov    BYTE PTR [ebp-0x4],0x9
640121e5:	call   0x64010db0
640121ea:	add    esp,0xc
640121ed:	mov    eax,DWORD PTR [eax]
640121ef:	mov    ecx,DWORD PTR [eax-0xc]
640121f2:	push   ecx
640121f3:	push   eax
640121f4:	mov    ecx,esi
640121f6:	mov    BYTE PTR [ebp-0x4],0xa
640121fa:	call   0x640029e0
640121ff:	mov    eax,DWORD PTR [ebp-0x10]
64012202:	add    eax,0xfffffff0
64012205:	mov    BYTE PTR [ebp-0x4],0x9
64012209:	lea    ecx,[eax+0xc]
6401220c:	or     edx,0xffffffff
6401220f:	lock xadd DWORD PTR [ecx],edx
64012213:	dec    edx
64012214:	test   edx,edx
64012216:	jg     0x64012222
64012218:	mov    ecx,DWORD PTR [eax]
6401221a:	mov    edx,DWORD PTR [ecx]
6401221c:	push   eax
6401221d:	mov    eax,DWORD PTR [edx+0x4]
64012220:	call   eax
64012222:	mov    eax,DWORD PTR [ebp-0x18]
64012225:	add    eax,0xfffffff0
64012228:	mov    BYTE PTR [ebp-0x4],bl
6401222b:	lea    ecx,[eax+0xc]
6401222e:	or     edx,0xffffffff
64012231:	lock xadd DWORD PTR [ecx],edx
64012235:	dec    edx
64012236:	test   edx,edx
64012238:	jg     0x64012244
6401223a:	mov    ecx,DWORD PTR [eax]
6401223c:	mov    edx,DWORD PTR [ecx]
6401223e:	push   eax
6401223f:	mov    eax,DWORD PTR [edx+0x4]
64012242:	call   eax
64012244:	mov    eax,DWORD PTR [ebp-0x14]
64012247:	add    eax,0xfffffff0
6401224a:	mov    BYTE PTR [ebp-0x4],0x7
6401224e:	lea    ecx,[eax+0xc]
64012251:	or     edx,0xffffffff
64012254:	lock xadd DWORD PTR [ecx],edx
64012258:	dec    edx
64012259:	test   edx,edx
6401225b:	jg     0x64012267
6401225d:	mov    ecx,DWORD PTR [eax]
6401225f:	mov    edx,DWORD PTR [ecx]
64012261:	push   eax
64012262:	mov    eax,DWORD PTR [edx+0x4]
64012265:	call   eax
64012267:	lea    ecx,[ebp-0x28]
6401226a:	push   ecx
6401226b:	lea    edx,[ebp-0x10]
6401226e:	push   edx
6401226f:	call   0x64003150
64012274:	mov    edi,eax
64012276:	push   0x64026840
6401227b:	push   0x7
6401227d:	mov    bl,0xb
6401227f:	push   0x64026838
64012284:	mov    BYTE PTR [ebp-0x4],bl
64012287:	call   0x64006690
6401228c:	add    esp,0x14
6401228f:	push   eax
64012290:	lea    ecx,[ebp-0x18]
64012293:	call   0x640063f0
64012298:	push   edi
64012299:	push   eax
6401229a:	lea    eax,[ebp-0x14]
6401229d:	push   eax
6401229e:	mov    BYTE PTR [ebp-0x4],0xc
640122a2:	call   0x64010db0
640122a7:	add    esp,0xc
640122aa:	mov    eax,DWORD PTR [eax]
640122ac:	mov    ecx,DWORD PTR [eax-0xc]
640122af:	push   ecx
640122b0:	push   eax
640122b1:	mov    ecx,esi
640122b3:	mov    BYTE PTR [ebp-0x4],0xd
640122b7:	call   0x640029e0
640122bc:	mov    eax,DWORD PTR [ebp-0x14]
640122bf:	add    eax,0xfffffff0
640122c2:	mov    BYTE PTR [ebp-0x4],0xc
640122c6:	lea    ecx,[eax+0xc]
640122c9:	or     edx,0xffffffff
640122cc:	lock xadd DWORD PTR [ecx],edx
640122d0:	dec    edx
640122d1:	test   edx,edx
640122d3:	jg     0x640122df
640122d5:	mov    ecx,DWORD PTR [eax]
640122d7:	mov    edx,DWORD PTR [ecx]
640122d9:	push   eax
640122da:	mov    eax,DWORD PTR [edx+0x4]
640122dd:	call   eax
640122df:	mov    eax,DWORD PTR [ebp-0x18]
640122e2:	add    eax,0xfffffff0
640122e5:	mov    BYTE PTR [ebp-0x4],bl
640122e8:	lea    ecx,[eax+0xc]
640122eb:	or     edx,0xffffffff
640122ee:	lock xadd DWORD PTR [ecx],edx
640122f2:	dec    edx
640122f3:	test   edx,edx
640122f5:	jg     0x64012301
640122f7:	mov    ecx,DWORD PTR [eax]
640122f9:	mov    edx,DWORD PTR [ecx]
640122fb:	push   eax
640122fc:	mov    eax,DWORD PTR [edx+0x4]
640122ff:	call   eax
64012301:	mov    eax,DWORD PTR [ebp-0x10]
64012304:	add    eax,0xfffffff0
64012307:	mov    BYTE PTR [ebp-0x4],0x7
6401230b:	lea    ecx,[eax+0xc]
6401230e:	or     edx,0xffffffff
64012311:	lock xadd DWORD PTR [ecx],edx
64012315:	dec    edx
64012316:	test   edx,edx
64012318:	jg     0x64012324
6401231a:	mov    ecx,DWORD PTR [eax]
6401231c:	mov    edx,DWORD PTR [ecx]
6401231e:	push   eax
6401231f:	mov    eax,DWORD PTR [edx+0x4]
64012322:	call   eax
64012324:	mov    edx,DWORD PTR ds:0x64030540
6401232a:	mov    eax,DWORD PTR [edx+0xc]
6401232d:	mov    ecx,0x64030540
64012332:	call   eax
64012334:	add    eax,0x10
64012337:	mov    DWORD PTR [ebp-0x10],eax
6401233a:	mov    ecx,DWORD PTR [ebp-0x40]
6401233d:	mov    edx,DWORD PTR [ebp-0x44]
64012340:	push   ecx
64012341:	push   edx
64012342:	push   0x64026814
64012347:	push   0xc
64012349:	push   0x640267f8
6401234e:	mov    BYTE PTR [ebp-0x4],0xe
64012352:	call   0x64006950
64012357:	add    esp,0xc
6401235a:	push   eax
6401235b:	lea    eax,[ebp-0x10]
6401235e:	push   eax
6401235f:	call   0x64001d40
64012364:	add    esp,0x10
64012367:	call   DWORD PTR ds:0x6402f06c
6401236d:	mov    edi,DWORD PTR [ebp-0x10]
64012370:	cmp    DWORD PTR [edi-0x4],0x1
64012374:	mov    DWORD PTR [ebp-0x14],eax
64012377:	jle    0x64012388
64012379:	mov    ecx,DWORD PTR [edi-0xc]
6401237c:	push   ecx
6401237d:	lea    ecx,[ebp-0x10]
64012380:	call   0x64001950
64012385:	mov    edi,DWORD PTR [ebp-0x10]
64012388:	test   edi,edi
6401238a:	jne    0x64012390
6401238c:	xor    eax,eax
6401238e:	jmp    0x640123bd
64012390:	push   edi
64012391:	call   DWORD PTR ds:0x64026054
64012397:	add    eax,0x1
6401239a:	cmp    eax,0x3fffffff
6401239f:	jle    0x640123a5
640123a1:	xor    eax,eax
640123a3:	jmp    0x640123bd
640123a5:	lea    ebx,[eax+eax*1]
640123a8:	mov    eax,ebx
640123aa:	call   0x640143e0
640123af:	mov    edx,DWORD PTR [ebp-0x14]
640123b2:	mov    eax,esp
640123b4:	push   edx
640123b5:	push   ebx
640123b6:	push   edi
640123b7:	push   eax
640123b8:	call   0x64002b80
640123bd:	push   eax
640123be:	mov    ecx,esi
640123c0:	call   0x64002660
640123c5:	add    edi,0xfffffff0
640123c8:	mov    BYTE PTR [ebp-0x4],0x7
640123cc:	lea    eax,[edi+0xc]
640123cf:	or     ecx,0xffffffff
640123d2:	lock xadd DWORD PTR [eax],ecx
640123d6:	dec    ecx
640123d7:	test   ecx,ecx
640123d9:	jg     0x640123e5
640123db:	mov    ecx,DWORD PTR [edi]
640123dd:	mov    edx,DWORD PTR [ecx]
640123df:	mov    eax,DWORD PTR [edx+0x4]
640123e2:	push   edi
640123e3:	call   eax
640123e5:	xor    edi,edi
640123e7:	mov    DWORD PTR [ebp-0x38],edi
640123ea:	mov    DWORD PTR [ebp-0x34],edi
640123ed:	mov    DWORD PTR [ebp-0x30],edi
640123f0:	lea    ecx,[ebp-0x3c]
640123f3:	push   ecx
640123f4:	mov    BYTE PTR [ebp-0x4],0xf
640123f8:	call   0x6400b0d0
640123fd:	add    esp,0x4
64012400:	mov    DWORD PTR [ebp-0x10],edi
64012403:	xor    ebx,ebx
64012405:	mov    eax,DWORD PTR [ebp-0x38]
64012408:	cmp    eax,edi
6401240a:	jne    0x64012410
6401240c:	xor    eax,eax
6401240e:	jmp    0x64012428
64012410:	mov    ecx,DWORD PTR [ebp-0x34]
64012413:	sub    ecx,eax
64012415:	mov    eax,0x92492493
6401241a:	imul   ecx
6401241c:	add    edx,ecx
6401241e:	sar    edx,0x4
64012421:	mov    eax,edx
64012423:	shr    eax,0x1f
64012426:	add    eax,edx
64012428:	cmp    DWORD PTR [ebp-0x10],eax
6401242b:	je     0x640124d6
64012431:	push   0x640267d4
64012436:	push   0x5
64012438:	push   0x640267cc
6401243d:	call   0x64006690
64012442:	add    esp,0xc
64012445:	push   eax
64012446:	lea    ecx,[ebp-0x14]
64012449:	call   0x640063f0
6401244e:	mov    eax,DWORD PTR [eax]
64012450:	mov    ecx,DWORD PTR [eax-0xc]
64012453:	push   ecx
64012454:	push   eax
64012455:	mov    ecx,esi
64012457:	mov    BYTE PTR [ebp-0x4],0x10
6401245b:	call   0x640029e0
64012460:	mov    eax,DWORD PTR [ebp-0x14]
64012463:	add    eax,0xfffffff0
64012466:	mov    BYTE PTR [ebp-0x4],0xf
6401246a:	lea    edx,[eax+0xc]
6401246d:	or     ecx,0xffffffff
64012470:	lock xadd DWORD PTR [edx],ecx
64012474:	dec    ecx
64012475:	test   ecx,ecx
64012477:	jg     0x64012483
64012479:	mov    ecx,DWORD PTR [eax]
6401247b:	mov    edx,DWORD PTR [ecx]
6401247d:	push   eax
6401247e:	mov    eax,DWORD PTR [edx+0x4]
64012481:	call   eax
64012483:	mov    edi,DWORD PTR [ebp-0x38]
64012486:	test   edi,edi
64012488:	je     0x640124a7
6401248a:	mov    ecx,DWORD PTR [ebp-0x34]
6401248d:	sub    ecx,edi
6401248f:	mov    eax,0x92492493
64012494:	imul   ecx
64012496:	add    edx,ecx
64012498:	sar    edx,0x4
6401249b:	mov    eax,edx
6401249d:	shr    eax,0x1f
640124a0:	add    eax,edx
640124a2:	cmp    DWORD PTR [ebp-0x10],eax
640124a5:	jb     0x640124af
640124a7:	call   0x640137b8
640124ac:	mov    edi,DWORD PTR [ebp-0x38]
640124af:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
640124b4:	jb     0x640124bc
640124b6:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
640124ba:	jmp    0x640124c0
640124bc:	lea    edi,[ebx+edi*1+0x4]
640124c0:	push   edi
640124c1:	mov    ecx,esi
640124c3:	call   0x64002660
640124c8:	add    DWORD PTR [ebp-0x10],0x1
640124cc:	add    ebx,0x1c
640124cf:	xor    edi,edi
640124d1:	jmp    0x64012405
640124d6:	call   DWORD PTR ds:0x6402f06c
640124dc:	push   0x110
640124e1:	lea    ecx,[ebp+0x4]
640124e4:	push   edi
640124e5:	push   ecx
640124e6:	mov    DWORD PTR [ebp-0x14],eax
640124e9:	call   0x64014360
640124ee:	mov    edx,DWORD PTR ds:0x64030540
640124f4:	mov    eax,DWORD PTR [edx+0xc]
640124f7:	add    esp,0xc
640124fa:	mov    ecx,0x64030540
640124ff:	mov    DWORD PTR [ebp+0x0],0x114
64012506:	call   eax
64012508:	add    eax,0x10
6401250b:	mov    DWORD PTR [ebp-0x10],eax
6401250e:	lea    ecx,[ebp+0x0]
64012511:	push   ecx
64012512:	mov    BYTE PTR [ebp-0x4],0x11
64012516:	call   DWORD PTR ds:0x6402606c
6401251c:	test   eax,eax
6401251e:	lea    ecx,[ebp-0x10]
64012521:	je     0x6401253b
64012523:	mov    edx,DWORD PTR [ebp+0x8]
64012526:	mov    eax,DWORD PTR [ebp+0x4]
64012529:	push   edx
6401252a:	push   eax
6401252b:	push   0x640267a4
64012530:	push   ecx
64012531:	call   0x64001d40
64012536:	add    esp,0x10
64012539:	jmp    0x64012547
6401253b:	push   0xc
6401253d:	push   0x64026788
64012542:	call   0x64002ae0
64012547:	xor    eax,eax
64012549:	lea    edx,[ebp-0x8c]
6401254f:	push   edx
64012550:	mov    DWORD PTR [ebp-0x8c],edi
64012556:	mov    DWORD PTR [ebp-0x88],eax
6401255c:	mov    DWORD PTR [ebp-0x84],eax
64012562:	mov    DWORD PTR [ebp-0x80],eax
64012565:	mov    DWORD PTR [ebp-0x7c],eax
64012568:	mov    DWORD PTR [ebp-0x78],eax
6401256b:	mov    DWORD PTR [ebp-0x74],eax
6401256e:	mov    DWORD PTR [ebp-0x70],eax
64012571:	mov    DWORD PTR [ebp-0x6c],eax
64012574:	call   DWORD PTR ds:0x64026068
6401257a:	movzx  eax,WORD PTR [ebp-0x8c]
64012581:	cmp    eax,edi
64012583:	je     0x64012593
64012585:	cmp    eax,0x9
64012588:	jne    0x640125a2
6401258a:	push   0x4
6401258c:	push   0x6402677c
64012591:	jmp    0x6401259a
64012593:	push   0x4
64012595:	push   0x64026770
6401259a:	lea    ecx,[ebp-0x10]
6401259d:	call   0x640029e0
640125a2:	mov    ebx,DWORD PTR [ebp-0x10]
640125a5:	cmp    ebx,edi
640125a7:	jne    0x640125ad
640125a9:	xor    eax,eax
640125ab:	jmp    0x640125f6
640125ad:	push   ebx
640125ae:	call   DWORD PTR ds:0x64026054
640125b4:	add    eax,0x1
640125b7:	cmp    eax,0x3fffffff
640125bc:	jg     0x640125f1
640125be:	lea    ebx,[eax+eax*1]
640125c1:	mov    eax,ebx
640125c3:	call   0x640143e0
640125c8:	mov    edi,esp
640125ca:	test   edi,edi
640125cc:	je     0x640125f1
640125ce:	mov    eax,DWORD PTR [ebp-0x10]
640125d1:	mov    ecx,DWORD PTR [ebp-0x14]
640125d4:	push   0x0
640125d6:	push   0x0
640125d8:	push   ebx
640125d9:	push   edi
640125da:	push   0xffffffff
640125dc:	push   eax
640125dd:	push   0x0
640125df:	push   ecx
640125e0:	mov    BYTE PTR [edi],0x0
640125e3:	call   DWORD PTR ds:0x64026028
640125e9:	neg    eax
640125eb:	sbb    eax,eax
640125ed:	and    eax,edi
640125ef:	jmp    0x640125f3
640125f1:	xor    eax,eax
640125f3:	mov    ebx,DWORD PTR [ebp-0x10]
640125f6:	push   eax
640125f7:	mov    ecx,esi
640125f9:	call   0x64002660
640125fe:	lea    eax,[ebx-0x10]
64012601:	mov    BYTE PTR [ebp-0x4],0xf
64012605:	lea    edx,[eax+0xc]
64012608:	or     ecx,0xffffffff
6401260b:	lock xadd DWORD PTR [edx],ecx
6401260f:	dec    ecx
64012610:	test   ecx,ecx
64012612:	jg     0x6401261e
64012614:	mov    ecx,DWORD PTR [eax]
64012616:	mov    edx,DWORD PTR [ecx]
64012618:	push   eax
64012619:	mov    eax,DWORD PTR [edx+0x4]
6401261c:	call   eax
6401261e:	lea    ecx,[ebp-0x20]
64012621:	push   ecx
64012622:	call   0x6400b690
64012627:	push   eax
64012628:	lea    edx,[ebp-0x10]
6401262b:	push   edx
6401262c:	mov    BYTE PTR [ebp-0x4],0x12
64012630:	call   0x64003150
64012635:	mov    edi,eax
64012637:	push   0x64026744
6401263c:	push   0x7
6401263e:	push   0x6402673c
64012643:	mov    BYTE PTR [ebp-0x4],0x13
64012647:	call   0x64006690
6401264c:	add    esp,0x18
6401264f:	push   eax
64012650:	lea    ecx,[ebp-0x18]
64012653:	call   0x640063f0
64012658:	push   edi
64012659:	push   eax
6401265a:	lea    eax,[ebp-0x14]
6401265d:	mov    bl,0x14
6401265f:	push   eax
64012660:	mov    BYTE PTR [ebp-0x4],bl
64012663:	call   0x64010db0
64012668:	add    esp,0xc
6401266b:	mov    eax,DWORD PTR [eax]
6401266d:	mov    ecx,DWORD PTR [eax-0xc]
64012670:	push   ecx
64012671:	push   eax
64012672:	mov    ecx,esi
64012674:	mov    BYTE PTR [ebp-0x4],0x15
64012678:	call   0x640029e0
6401267d:	mov    eax,DWORD PTR [ebp-0x14]
64012680:	add    eax,0xfffffff0
64012683:	mov    BYTE PTR [ebp-0x4],bl
64012686:	lea    ecx,[eax+0xc]
64012689:	or     edx,0xffffffff
6401268c:	lock xadd DWORD PTR [ecx],edx
64012690:	dec    edx
64012691:	test   edx,edx
64012693:	jg     0x6401269f
64012695:	mov    ecx,DWORD PTR [eax]
64012697:	mov    edx,DWORD PTR [ecx]
64012699:	push   eax
6401269a:	mov    eax,DWORD PTR [edx+0x4]
6401269d:	call   eax
6401269f:	mov    eax,DWORD PTR [ebp-0x18]
640126a2:	add    eax,0xfffffff0
640126a5:	mov    BYTE PTR [ebp-0x4],0x13
640126a9:	lea    ecx,[eax+0xc]
640126ac:	or     edx,0xffffffff
640126af:	lock xadd DWORD PTR [ecx],edx
640126b3:	dec    edx
640126b4:	test   edx,edx
640126b6:	jg     0x640126c2
640126b8:	mov    ecx,DWORD PTR [eax]
640126ba:	mov    edx,DWORD PTR [ecx]
640126bc:	push   eax
640126bd:	mov    eax,DWORD PTR [edx+0x4]
640126c0:	call   eax
640126c2:	mov    eax,DWORD PTR [ebp-0x10]
640126c5:	add    eax,0xfffffff0
640126c8:	mov    BYTE PTR [ebp-0x4],0x12
640126cc:	lea    ecx,[eax+0xc]
640126cf:	or     edx,0xffffffff
640126d2:	lock xadd DWORD PTR [ecx],edx
640126d6:	dec    edx
640126d7:	test   edx,edx
640126d9:	jg     0x640126e5
640126db:	mov    ecx,DWORD PTR [eax]
640126dd:	mov    edx,DWORD PTR [ecx]
640126df:	push   eax
640126e0:	mov    eax,DWORD PTR [edx+0x4]
640126e3:	call   eax
640126e5:	mov    eax,DWORD PTR [ebp-0x20]
640126e8:	add    eax,0xfffffff0
640126eb:	mov    BYTE PTR [ebp-0x4],0xf
640126ef:	lea    ecx,[eax+0xc]
640126f2:	or     edx,0xffffffff
640126f5:	lock xadd DWORD PTR [ecx],edx
640126f9:	dec    edx
640126fa:	test   edx,edx
640126fc:	jg     0x64012708
640126fe:	mov    ecx,DWORD PTR [eax]
64012700:	mov    edx,DWORD PTR [ecx]
64012702:	push   eax
64012703:	mov    eax,DWORD PTR [edx+0x4]
64012706:	call   eax
64012708:	call   DWORD PTR ds:0x6402f06c
6401270e:	mov    edx,DWORD PTR ds:0x64030540
64012714:	mov    DWORD PTR [ebp-0x14],eax
64012717:	mov    eax,DWORD PTR [edx+0xc]
6401271a:	mov    ecx,0x64030540
6401271f:	call   eax
64012721:	add    eax,0x10
64012724:	mov    DWORD PTR [ebp-0x10],eax
64012727:	mov    BYTE PTR [ebp-0x4],0x16
6401272b:	call   0x64003800
64012730:	push   eax
64012731:	push   0x64026700
64012736:	push   0x4
64012738:	push   0x640266f4
6401273d:	call   0x64006950
64012742:	add    esp,0xc
64012745:	push   eax
64012746:	lea    ecx,[ebp-0x10]
64012749:	push   ecx
6401274a:	call   0x64001d40
6401274f:	mov    ebx,DWORD PTR [ebp-0x10]
64012752:	mov    eax,DWORD PTR [ebx-0x8]
64012755:	mov    ecx,0x1
6401275a:	sub    ecx,DWORD PTR [ebx-0x4]
6401275d:	add    eax,0x1
64012760:	add    esp,0xc
64012763:	or     eax,ecx
64012765:	jge    0x64012774
64012767:	push   0xffffffff
64012769:	lea    ecx,[ebp-0x10]
6401276c:	call   0x64001e00
64012771:	mov    ebx,DWORD PTR [ebp-0x10]
64012774:	test   ebx,ebx
64012776:	je     0x640127bc
64012778:	push   ebx
64012779:	call   DWORD PTR ds:0x64026054
6401277f:	add    eax,0x1
64012782:	cmp    eax,0x3fffffff
64012787:	jg     0x640127bc
64012789:	add    eax,eax
6401278b:	mov    DWORD PTR [ebp-0x20],eax
6401278e:	call   0x640143e0
64012793:	mov    edi,esp
64012795:	test   edi,edi
64012797:	je     0x640127bc
64012799:	mov    edx,DWORD PTR [ebp-0x20]
6401279c:	mov    eax,DWORD PTR [ebp-0x14]
6401279f:	push   0x0
640127a1:	push   0x0
640127a3:	push   edx
640127a4:	push   edi
640127a5:	push   0xffffffff
640127a7:	push   ebx
640127a8:	push   0x0
640127aa:	push   eax
640127ab:	mov    BYTE PTR [edi],0x0
640127ae:	call   DWORD PTR ds:0x64026028
640127b4:	neg    eax
640127b6:	sbb    eax,eax
640127b8:	and    eax,edi
640127ba:	jmp    0x640127be
640127bc:	xor    eax,eax
640127be:	push   eax
640127bf:	lea    ecx,[ebp-0x1c]
640127c2:	call   0x640063f0
640127c7:	mov    edi,eax
640127c9:	push   0x640266c0
640127ce:	push   0x5
640127d0:	push   0x640266b8
640127d5:	mov    BYTE PTR [ebp-0x4],0x17
640127d9:	call   0x64006690
640127de:	add    esp,0xc
640127e1:	push   eax
640127e2:	lea    ecx,[ebp-0x2c]
640127e5:	call   0x640063f0
640127ea:	push   edi
640127eb:	push   eax
640127ec:	lea    ecx,[ebp-0x18]
640127ef:	push   ecx
640127f0:	mov    BYTE PTR [ebp-0x4],0x18
640127f4:	call   0x64010db0
640127f9:	add    esp,0xc
640127fc:	mov    eax,DWORD PTR [eax]
640127fe:	mov    ecx,DWORD PTR [eax-0xc]
64012801:	push   ecx
64012802:	push   eax
64012803:	mov    ecx,esi
64012805:	mov    BYTE PTR [ebp-0x4],0x19
64012809:	call   0x640029e0
6401280e:	mov    eax,DWORD PTR [ebp-0x18]
64012811:	add    eax,0xfffffff0
64012814:	mov    BYTE PTR [ebp-0x4],0x18
64012818:	lea    edx,[eax+0xc]
6401281b:	or     ecx,0xffffffff
6401281e:	lock xadd DWORD PTR [edx],ecx
64012822:	dec    ecx
64012823:	test   ecx,ecx
64012825:	jg     0x64012831
64012827:	mov    ecx,DWORD PTR [eax]
64012829:	mov    edx,DWORD PTR [ecx]
6401282b:	push   eax
6401282c:	mov    eax,DWORD PTR [edx+0x4]
6401282f:	call   eax
64012831:	mov    eax,DWORD PTR [ebp-0x2c]
64012834:	add    eax,0xfffffff0
64012837:	mov    BYTE PTR [ebp-0x4],0x17
6401283b:	lea    ecx,[eax+0xc]
6401283e:	or     edx,0xffffffff
64012841:	lock xadd DWORD PTR [ecx],edx
64012845:	dec    edx
64012846:	test   edx,edx
64012848:	jg     0x64012854
6401284a:	mov    ecx,DWORD PTR [eax]
6401284c:	mov    edx,DWORD PTR [ecx]
6401284e:	push   eax
6401284f:	mov    eax,DWORD PTR [edx+0x4]
64012852:	call   eax
64012854:	mov    eax,DWORD PTR [ebp-0x1c]
64012857:	add    eax,0xfffffff0
6401285a:	mov    BYTE PTR [ebp-0x4],0x16
6401285e:	lea    ecx,[eax+0xc]
64012861:	or     edx,0xffffffff
64012864:	lock xadd DWORD PTR [ecx],edx
64012868:	dec    edx
64012869:	test   edx,edx
6401286b:	jg     0x64012877
6401286d:	mov    ecx,DWORD PTR [eax]
6401286f:	mov    edx,DWORD PTR [ecx]
64012871:	push   eax
64012872:	mov    eax,DWORD PTR [edx+0x4]
64012875:	call   eax
64012877:	add    ebx,0xfffffff0
6401287a:	mov    BYTE PTR [ebp-0x4],0xf
6401287e:	lea    ecx,[ebx+0xc]
64012881:	or     edx,0xffffffff
64012884:	lock xadd DWORD PTR [ecx],edx
64012888:	dec    edx
64012889:	test   edx,edx
6401288b:	jg     0x64012897
6401288d:	mov    ecx,DWORD PTR [ebx]
6401288f:	mov    eax,DWORD PTR [ecx]
64012891:	mov    edx,DWORD PTR [eax+0x4]
64012894:	push   ebx
64012895:	call   edx
64012897:	lea    eax,[ebp-0x9c]
6401289d:	push   eax
6401289e:	call   0x640039d0
640128a3:	mov    ecx,DWORD PTR [eax]
640128a5:	mov    DWORD PTR [ebp-0x68],ecx
640128a8:	mov    edx,DWORD PTR [eax+0x4]
640128ab:	mov    DWORD PTR [ebp-0x64],edx
640128ae:	mov    ecx,DWORD PTR [eax+0x8]
640128b1:	push   0x64026678
640128b6:	mov    DWORD PTR [ebp-0x60],ecx
640128b9:	mov    edx,DWORD PTR [eax+0xc]
640128bc:	push   0x5
640128be:	push   0x6402666c
640128c3:	mov    DWORD PTR [ebp-0x5c],edx
640128c6:	call   0x64006690
640128cb:	add    esp,0x10
640128ce:	push   eax
640128cf:	lea    ecx,[ebp-0x10]
640128d2:	call   0x640063f0
640128d7:	lea    eax,[ebp-0x68]
640128da:	push   eax
640128db:	lea    ecx,[ebp-0x2c]
640128de:	push   ecx
640128df:	mov    BYTE PTR [ebp-0x4],0x1a
640128e3:	call   0x64002eb0
640128e8:	push   eax
640128e9:	lea    edx,[ebp-0x10]
640128ec:	push   edx
640128ed:	lea    eax,[ebp-0x1c]
640128f0:	mov    bl,0x1b
640128f2:	push   eax
640128f3:	mov    BYTE PTR [ebp-0x4],bl
640128f6:	call   0x64010db0
640128fb:	add    esp,0x14
640128fe:	mov    eax,DWORD PTR [eax]
64012900:	mov    ecx,DWORD PTR [eax-0xc]
64012903:	push   ecx
64012904:	push   eax
64012905:	mov    ecx,esi
64012907:	mov    BYTE PTR [ebp-0x4],0x1c
6401290b:	call   0x640029e0
64012910:	mov    eax,DWORD PTR [ebp-0x1c]
64012913:	add    eax,0xfffffff0
64012916:	mov    BYTE PTR [ebp-0x4],bl
64012919:	lea    ecx,[eax+0xc]
6401291c:	or     edx,0xffffffff
6401291f:	lock xadd DWORD PTR [ecx],edx
64012923:	dec    edx
64012924:	test   edx,edx
64012926:	jg     0x64012932
64012928:	mov    ecx,DWORD PTR [eax]
6401292a:	mov    edx,DWORD PTR [ecx]
6401292c:	push   eax
6401292d:	mov    eax,DWORD PTR [edx+0x4]
64012930:	call   eax
64012932:	mov    eax,DWORD PTR [ebp-0x2c]
64012935:	add    eax,0xfffffff0
64012938:	mov    BYTE PTR [ebp-0x4],0x1a
6401293c:	lea    ecx,[eax+0xc]
6401293f:	or     edx,0xffffffff
64012942:	lock xadd DWORD PTR [ecx],edx
64012946:	dec    edx
64012947:	test   edx,edx
64012949:	jg     0x64012955
6401294b:	mov    ecx,DWORD PTR [eax]
6401294d:	mov    edx,DWORD PTR [ecx]
6401294f:	push   eax
64012950:	mov    eax,DWORD PTR [edx+0x4]
64012953:	call   eax
64012955:	mov    eax,DWORD PTR [ebp-0x10]
64012958:	add    eax,0xfffffff0
6401295b:	mov    BYTE PTR [ebp-0x4],0xf
6401295f:	lea    ecx,[eax+0xc]
64012962:	or     edx,0xffffffff
64012965:	lock xadd DWORD PTR [ecx],edx
64012969:	dec    edx
6401296a:	test   edx,edx
6401296c:	jg     0x64012978
6401296e:	mov    ecx,DWORD PTR [eax]
64012970:	mov    edx,DWORD PTR [ecx]
64012972:	push   eax
64012973:	mov    eax,DWORD PTR [edx+0x4]
64012976:	call   eax
64012978:	lea    ecx,[ebp-0x1c]
6401297b:	push   0x1
6401297d:	push   ecx
6401297e:	call   0x64005f20
64012983:	add    esp,0x8
64012986:	mov    eax,DWORD PTR [eax]
64012988:	mov    ecx,DWORD PTR [eax-0xc]
6401298b:	push   ecx
6401298c:	push   eax
6401298d:	mov    ecx,esi
6401298f:	mov    BYTE PTR [ebp-0x4],0x1d
64012993:	call   0x640029e0
64012998:	mov    eax,DWORD PTR [ebp-0x1c]
6401299b:	add    eax,0xfffffff0
6401299e:	mov    BYTE PTR [ebp-0x4],0xf
640129a2:	lea    edx,[eax+0xc]
640129a5:	or     ecx,0xffffffff
640129a8:	lock xadd DWORD PTR [edx],ecx
640129ac:	dec    ecx
640129ad:	test   ecx,ecx
640129af:	jg     0x640129bb
640129b1:	mov    ecx,DWORD PTR [eax]
640129b3:	mov    edx,DWORD PTR [ecx]
640129b5:	push   eax
640129b6:	mov    eax,DWORD PTR [edx+0x4]
640129b9:	call   eax
640129bb:	mov    eax,DWORD PTR [ebp-0x38]
640129be:	xor    edi,edi
640129c0:	cmp    eax,edi
640129c2:	je     0x640129e2
640129c4:	mov    ecx,DWORD PTR [ebp-0x58]
640129c7:	push   ecx
640129c8:	mov    ecx,DWORD PTR [ebp-0x34]
640129cb:	lea    edx,[ebp-0x3c]
640129ce:	push   edx
640129cf:	push   ecx
640129d0:	push   eax
640129d1:	call   0x6400bf70
640129d6:	mov    edx,DWORD PTR [ebp-0x38]
640129d9:	push   edx
640129da:	call   0x64013402
640129df:	add    esp,0x14
640129e2:	mov    eax,DWORD PTR [ebp-0x24]
640129e5:	add    eax,0xfffffff0
640129e8:	mov    DWORD PTR [ebp-0x38],edi
640129eb:	mov    DWORD PTR [ebp-0x34],edi
640129ee:	mov    DWORD PTR [ebp-0x30],edi
640129f1:	mov    BYTE PTR [ebp-0x4],0x6
640129f5:	lea    ecx,[eax+0xc]
640129f8:	or     edx,0xffffffff
640129fb:	lock xadd DWORD PTR [ecx],edx
640129ff:	dec    edx
64012a00:	test   edx,edx
64012a02:	jg     0x64012a0e
64012a04:	mov    ecx,DWORD PTR [eax]
64012a06:	mov    edx,DWORD PTR [ecx]
64012a08:	push   eax
64012a09:	mov    eax,DWORD PTR [edx+0x4]
64012a0c:	call   eax
64012a0e:	mov    eax,DWORD PTR [ebp-0x48]
64012a11:	add    eax,0xfffffff0
64012a14:	mov    BYTE PTR [ebp-0x4],0x5
64012a18:	lea    ecx,[eax+0xc]
64012a1b:	or     edx,0xffffffff
64012a1e:	lock xadd DWORD PTR [ecx],edx
64012a22:	dec    edx
64012a23:	test   edx,edx
64012a25:	jg     0x64012a31
64012a27:	mov    ecx,DWORD PTR [eax]
64012a29:	mov    edx,DWORD PTR [ecx]
64012a2b:	push   eax
64012a2c:	mov    eax,DWORD PTR [edx+0x4]
64012a2f:	call   eax
64012a31:	mov    eax,DWORD PTR [ebp-0x28]
64012a34:	add    eax,0xfffffff0
64012a37:	mov    BYTE PTR [ebp-0x4],0x2
64012a3b:	lea    ecx,[eax+0xc]
64012a3e:	or     edx,0xffffffff
64012a41:	lock xadd DWORD PTR [ecx],edx
64012a45:	dec    edx
64012a46:	test   edx,edx
64012a48:	jg     0x64012a54
64012a4a:	mov    ecx,DWORD PTR [eax]
64012a4c:	mov    edx,DWORD PTR [ecx]
64012a4e:	push   eax
64012a4f:	mov    eax,DWORD PTR [edx+0x4]
64012a52:	call   eax
64012a54:	mov    eax,DWORD PTR [ebp-0x54]
64012a57:	add    eax,0xfffffff0
64012a5a:	mov    BYTE PTR [ebp-0x4],0x1
64012a5e:	lea    ecx,[eax+0xc]
64012a61:	or     edx,0xffffffff
64012a64:	lock xadd DWORD PTR [ecx],edx
64012a68:	dec    edx
64012a69:	test   edx,edx
64012a6b:	jg     0x64012a77
64012a6d:	mov    ecx,DWORD PTR [eax]
64012a6f:	mov    edx,DWORD PTR [ecx]
64012a71:	push   eax
64012a72:	mov    eax,DWORD PTR [edx+0x4]
64012a75:	call   eax
64012a77:	mov    eax,DWORD PTR [ebp-0x4c]
64012a7a:	add    eax,0xfffffff0
64012a7d:	mov    BYTE PTR [ebp-0x4],0x0
64012a81:	lea    ecx,[eax+0xc]
64012a84:	or     edx,0xffffffff
64012a87:	lock xadd DWORD PTR [ecx],edx
64012a8b:	dec    edx
64012a8c:	test   edx,edx
64012a8e:	jg     0x64012a9a
64012a90:	mov    ecx,DWORD PTR [eax]
64012a92:	mov    edx,DWORD PTR [ecx]
64012a94:	push   eax
64012a95:	mov    eax,DWORD PTR [edx+0x4]
64012a98:	call   eax
64012a9a:	mov    eax,esi
64012a9c:	lea    esp,[ebp-0xac]
64012aa2:	mov    ecx,DWORD PTR [ebp-0xc]
64012aa5:	mov    DWORD PTR fs:0x0,ecx
64012aac:	pop    ecx
64012aad:	pop    edi
64012aae:	pop    esi
64012aaf:	pop    ebx
64012ab0:	mov    ecx,DWORD PTR [ebp+0x124]
64012ab6:	xor    ecx,ebp
64012ab8:	call   0x64013c5c
64012abd:	add    ebp,0x128
64012ac3:	mov    esp,ebp
64012ac5:	pop    ebp
64012ac6:	ret    
64012ac7:	int3   
64012ac8:	int3   
64012ac9:	int3   
64012aca:	int3   
64012acb:	int3   
64012acc:	int3   
64012acd:	int3   
64012ace:	int3   
64012acf:	int3   
64012ad0:	push   ebp
64012ad1:	mov    ebp,esp
64012ad3:	push   0xffffffff
64012ad5:	push   0x64023588
64012ada:	mov    eax,fs:0x0
64012ae0:	push   eax
64012ae1:	sub    esp,0x50
64012ae4:	mov    eax,ds:0x6402f09c
64012ae9:	xor    eax,ebp
64012aeb:	mov    DWORD PTR [ebp-0x10],eax
64012aee:	push   ebx
64012aef:	push   esi
64012af0:	push   edi
64012af1:	push   eax
64012af2:	lea    eax,[ebp-0xc]
64012af5:	mov    fs:0x0,eax
64012afb:	call   DWORD PTR ds:0x6402f06c
64012b01:	push   0xea60
64012b06:	mov    DWORD PTR [ebp-0x3c],eax
64012b09:	call   0x64010b80
64012b0e:	add    esp,0x4
64012b11:	mov    DWORD PTR [ebp-0x34],0x0
64012b18:	lea    eax,[ebp-0x30]
64012b1b:	push   eax
64012b1c:	call   0x64011f30
64012b21:	add    esp,0x4
64012b24:	xor    esi,esi
64012b26:	mov    DWORD PTR [ebp-0x4],esi
64012b29:	mov    DWORD PTR [ebp-0x14],0xf
64012b30:	mov    DWORD PTR [ebp-0x18],esi
64012b33:	mov    BYTE PTR [ebp-0x28],0x0
64012b37:	mov    eax,DWORD PTR [ebp-0x30]
64012b3a:	cmp    eax,esi
64012b3c:	mov    BYTE PTR [ebp-0x4],0x1
64012b40:	mov    ebx,eax
64012b42:	jne    0x64012b48
64012b44:	xor    ecx,ecx
64012b46:	jmp    0x64012b8f
64012b48:	push   eax
64012b49:	call   DWORD PTR ds:0x64026054
64012b4f:	add    eax,0x1
64012b52:	cmp    eax,0x3fffffff
64012b57:	jg     0x64012b89
64012b59:	lea    edi,[eax+eax*1]
64012b5c:	mov    eax,edi
64012b5e:	call   0x640143e0
64012b63:	mov    esi,esp
64012b65:	test   esi,esi
64012b67:	je     0x64012b89
64012b69:	mov    ecx,DWORD PTR [ebp-0x3c]
64012b6c:	push   0x0
64012b6e:	push   0x0
64012b70:	push   edi
64012b71:	push   esi
64012b72:	push   0xffffffff
64012b74:	push   ebx
64012b75:	push   0x0
64012b77:	push   ecx
64012b78:	mov    BYTE PTR [esi],0x0
64012b7b:	call   DWORD PTR ds:0x64026028
64012b81:	neg    eax
64012b83:	sbb    eax,eax
64012b85:	and    eax,esi
64012b87:	jmp    0x64012b8b
64012b89:	xor    eax,eax
64012b8b:	mov    ecx,eax
64012b8d:	xor    esi,esi
64012b8f:	mov    eax,ecx
64012b91:	mov    DWORD PTR [ebp-0x48],esi
64012b94:	mov    DWORD PTR [ebp-0x44],0xf
64012b9b:	mov    BYTE PTR [ebp-0x58],0x0
64012b9f:	lea    esi,[eax+0x1]
64012ba2:	mov    dl,BYTE PTR [eax]
64012ba4:	add    eax,0x1
64012ba7:	test   dl,dl
64012ba9:	jne    0x64012ba2
64012bab:	sub    eax,esi
64012bad:	push   eax
64012bae:	push   ecx
64012baf:	lea    ecx,[ebp-0x5c]
64012bb2:	call   0x64001860
64012bb7:	lea    edx,[ebp-0x2c]
64012bba:	push   edx
64012bbb:	lea    eax,[ebp-0x5c]
64012bbe:	push   eax
64012bbf:	mov    BYTE PTR [ebp-0x4],0x2
64012bc3:	call   0x64011c80
64012bc8:	mov    edi,0x10
64012bcd:	add    esp,0x8
64012bd0:	cmp    DWORD PTR [ebp-0x44],edi
64012bd3:	mov    bl,al
64012bd5:	mov    BYTE PTR [ebp-0x4],0x1
64012bd9:	jb     0x64012be7
64012bdb:	mov    ecx,DWORD PTR [ebp-0x58]
64012bde:	push   ecx
64012bdf:	call   0x64013402
64012be4:	add    esp,0x4
64012be7:	test   bl,bl
64012be9:	jne    0x64012c7c
64012bef:	xor    ebx,ebx
64012bf1:	xor    esi,esi
64012bf3:	lea    edx,[ebp-0x38]
64012bf6:	push   ebx
64012bf7:	push   edx
64012bf8:	mov    DWORD PTR [ebp-0x38],ebx
64012bfb:	call   0x6400eb70
64012c00:	call   eax
64012c02:	test   eax,eax
64012c04:	je     0x64012c14
64012c06:	add    esi,0x3e8
64012c0c:	cmp    esi,0x493e0
64012c12:	ja     0x64012c21
64012c14:	push   0x3e8
64012c19:	call   DWORD PTR ds:0x64026050
64012c1f:	jmp    0x64012bf3
64012c21:	cmp    DWORD PTR [ebp-0x14],edi
64012c24:	jb     0x64012c32
64012c26:	mov    eax,DWORD PTR [ebp-0x28]
64012c29:	push   eax
64012c2a:	call   0x64013402
64012c2f:	add    esp,0x4
64012c32:	mov    eax,DWORD PTR [ebp-0x30]
64012c35:	add    eax,0xfffffff0
64012c38:	mov    DWORD PTR [ebp-0x14],0xf
64012c3f:	mov    DWORD PTR [ebp-0x18],ebx
64012c42:	mov    BYTE PTR [ebp-0x28],0x0
64012c46:	mov    DWORD PTR [ebp-0x4],0xffffffff
64012c4d:	lea    ecx,[eax+0xc]
64012c50:	or     edx,0xffffffff
64012c53:	lock xadd DWORD PTR [ecx],edx
64012c57:	dec    edx
64012c58:	test   edx,edx
64012c5a:	jg     0x64012c66
64012c5c:	mov    ecx,DWORD PTR [eax]
64012c5e:	mov    edx,DWORD PTR [ecx]
64012c60:	push   eax
64012c61:	mov    eax,DWORD PTR [edx+0x4]
64012c64:	call   eax
64012c66:	mov    eax,DWORD PTR [ebp-0x34]
64012c69:	add    eax,0x1
64012c6c:	cmp    eax,0x3
64012c6f:	mov    DWORD PTR [ebp-0x34],eax
64012c72:	jne    0x64012b18
64012c78:	xor    ebx,ebx
64012c7a:	jmp    0x64012cd4
64012c7c:	xor    ebx,ebx
64012c7e:	cmp    DWORD PTR [ebp-0x18],ebx
64012c81:	je     0x64012c8f
64012c83:	lea    ecx,[ebp-0x2c]
64012c86:	push   ecx
64012c87:	call   0x64011610
64012c8c:	add    esp,0x4
64012c8f:	cmp    DWORD PTR [ebp-0x14],edi
64012c92:	jb     0x64012ca0
64012c94:	mov    edx,DWORD PTR [ebp-0x28]
64012c97:	push   edx
64012c98:	call   0x64013402
64012c9d:	add    esp,0x4
64012ca0:	mov    eax,DWORD PTR [ebp-0x30]
64012ca3:	add    eax,0xfffffff0
64012ca6:	mov    DWORD PTR [ebp-0x14],0xf
64012cad:	mov    DWORD PTR [ebp-0x18],ebx
64012cb0:	mov    BYTE PTR [ebp-0x28],0x0
64012cb4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64012cbb:	lea    ecx,[eax+0xc]
64012cbe:	or     edx,0xffffffff
64012cc1:	lock xadd DWORD PTR [ecx],edx
64012cc5:	dec    edx
64012cc6:	test   edx,edx
64012cc8:	jg     0x64012cd4
64012cca:	mov    ecx,DWORD PTR [eax]
64012ccc:	mov    edx,DWORD PTR [ecx]
64012cce:	push   eax
64012ccf:	mov    eax,DWORD PTR [edx+0x4]
64012cd2:	call   eax
64012cd4:	xor    esi,esi
64012cd6:	lea    ecx,[ebp-0x40]
64012cd9:	push   ebx
64012cda:	push   ecx
64012cdb:	mov    DWORD PTR [ebp-0x40],ebx
64012cde:	call   0x6400eb70
64012ce3:	call   eax
64012ce5:	test   eax,eax
64012ce7:	je     0x64012cfb
64012ce9:	add    esi,0x3e8
64012cef:	cmp    esi,0x12e1fc0
64012cf5:	ja     0x64012b11
64012cfb:	push   0x3e8
64012d00:	call   DWORD PTR ds:0x64026050
64012d06:	jmp    0x64012cd6
64012d08:	int3   
64012d09:	int3   
64012d0a:	int3   
64012d0b:	int3   
64012d0c:	int3   
64012d0d:	int3   
64012d0e:	int3   
64012d0f:	int3   
64012d10:	sub    esp,0x20c
64012d16:	mov    eax,ds:0x6402f09c
64012d1b:	xor    eax,esp
64012d1d:	mov    DWORD PTR [esp+0x208],eax
64012d24:	push   0x208
64012d29:	lea    eax,[esp+0x4]
64012d2d:	push   eax
64012d2e:	push   0x0
64012d30:	call   DWORD PTR ds:0x64026074
64012d36:	test   eax,eax
64012d38:	je     0x64012d87
64012d3a:	lea    ecx,[esp]
64012d3d:	push   0x104
64012d42:	push   ecx
64012d43:	call   0x64014341
64012d48:	lea    edx,[esp+0x8]
64012d4c:	push   0x64026a10
64012d51:	push   edx
64012d52:	call   0x64013da1
64012d57:	add    esp,0x10
64012d5a:	test   eax,eax
64012d5c:	je     0x64012d87
64012d5e:	call   0x64011d70
64012d63:	test   al,al
64012d65:	je     0x64012d87
64012d67:	push   0x0
64012d69:	push   0x0
64012d6b:	push   0x0
64012d6d:	push   0x64012ad0
64012d72:	push   0x0
64012d74:	push   0x0
64012d76:	call   DWORD PTR ds:0x64026070
64012d7c:	test   eax,eax
64012d7e:	je     0x64012d87
64012d80:	push   eax
64012d81:	call   DWORD PTR ds:0x64026040
64012d87:	mov    ecx,DWORD PTR [esp+0x208]
64012d8e:	xor    ecx,esp
64012d90:	xor    eax,eax
64012d92:	call   0x64013c5c
64012d97:	add    esp,0x20c
64012d9d:	ret    0x4
64012da0:	push   0x0
64012da2:	push   0x0
64012da4:	push   0x0
64012da6:	push   0x64012d10
64012dab:	push   0x0
64012dad:	push   0x0
64012daf:	call   DWORD PTR ds:0x64026070
64012db5:	ret    
64012db6:	push   ebp
64012db7:	mov    ebp,esp
64012db9:	sub    esp,0xc
64012dbc:	mov    eax,ds:0x6402f09c
64012dc1:	xor    eax,ebp
64012dc3:	mov    DWORD PTR [ebp-0x4],eax
64012dc6:	push   esi
64012dc7:	xor    esi,esi
64012dc9:	call   DWORD PTR ds:0x640260e8
64012dcf:	push   0x7
64012dd1:	lea    ecx,[ebp-0xc]
64012dd4:	push   ecx
64012dd5:	push   0x1004
64012dda:	push   eax
64012ddb:	call   DWORD PTR ds:0x640260e4
64012de1:	test   eax,eax
64012de3:	je     0x64012e04
64012de5:	mov    cl,BYTE PTR [ebp-0xc]
64012de8:	test   cl,cl
64012dea:	lea    eax,[ebp-0xc]
64012ded:	je     0x64012e04
64012def:	imul   esi,esi,0xa
64012df2:	movsx  ecx,cl
64012df5:	inc    eax
64012df6:	lea    esi,[esi+ecx*1-0x30]
64012dfa:	mov    cl,BYTE PTR [eax]
64012dfc:	test   cl,cl
64012dfe:	jne    0x64012def
64012e00:	test   esi,esi
64012e02:	jne    0x64012e0c
64012e04:	call   DWORD PTR ds:0x640260e0
64012e0a:	mov    esi,eax
64012e0c:	mov    ecx,DWORD PTR [ebp-0x4]
64012e0f:	mov    eax,esi
64012e11:	xor    ecx,ebp
64012e13:	pop    esi
64012e14:	call   0x64013c5c
64012e19:	leave  
64012e1a:	ret    
64012e1b:	push   0x3
64012e1d:	pop    eax
64012e1e:	ret    
64012e1f:	push   ebp
64012e20:	mov    ebp,esp
64012e22:	sub    esp,0x98
64012e28:	mov    eax,ds:0x6402f09c
64012e2d:	xor    eax,ebp
64012e2f:	mov    DWORD PTR [ebp-0x4],eax
64012e32:	lea    eax,[ebp-0x98]
64012e38:	push   eax
64012e39:	mov    DWORD PTR [ebp-0x98],0x94
64012e43:	call   DWORD PTR ds:0x640260ec
64012e49:	cmp    DWORD PTR [ebp-0x88],0x2
64012e50:	jne    0x64012e60
64012e52:	cmp    DWORD PTR [ebp-0x94],0x5
64012e59:	mov    eax,0x64012e1b
64012e5e:	jae    0x64012e65
64012e60:	mov    eax,0x64012db6
64012e65:	push   eax
64012e66:	push   0x6402f06c
64012e6b:	call   DWORD PTR ds:0x640260dc
64012e71:	call   DWORD PTR ds:0x6402f06c
64012e77:	mov    ecx,DWORD PTR [ebp-0x4]
64012e7a:	xor    ecx,ebp
64012e7c:	call   0x64013c5c
64012e81:	leave  
64012e82:	ret    
64012e83:	push   esi
64012e84:	mov    esi,ecx
64012e86:	mov    eax,DWORD PTR [esi]
64012e88:	test   eax,eax
64012e8a:	je     0x64012e96
64012e8c:	push   eax
64012e8d:	call   0x64014af6
64012e92:	and    DWORD PTR [esi],0x0
64012e95:	pop    ecx
64012e96:	and    DWORD PTR [esi+0x4],0x0
64012e9a:	and    DWORD PTR [esi+0x8],0x0
64012e9e:	pop    esi
64012e9f:	ret    
64012ea0:	push   esi
64012ea1:	push   0x18
64012ea3:	mov    esi,ecx
64012ea5:	push   0x0
64012ea7:	push   esi
64012ea8:	call   0x64014360
64012ead:	add    esp,0xc
64012eb0:	mov    eax,esi
64012eb2:	pop    esi
64012eb3:	ret    
64012eb4:	push   0xc
64012eb6:	push   0x6402bf58
64012ebb:	call   0x64015220
64012ec0:	and    DWORD PTR [ebp-0x4],0x0
64012ec4:	push   ecx
64012ec5:	call   DWORD PTR ds:0x6402601c
64012ecb:	and    DWORD PTR [ebp-0x1c],0x0
64012ecf:	jmp    0x64012eef
64012ed1:	mov    eax,DWORD PTR [ebp-0x14]
64012ed4:	mov    eax,DWORD PTR [eax]
64012ed6:	mov    eax,DWORD PTR [eax]
64012ed8:	xor    ecx,ecx
64012eda:	cmp    eax,0xc0000017
64012edf:	sete   cl
64012ee2:	mov    eax,ecx
64012ee4:	ret    
64012ee5:	mov    esp,DWORD PTR [ebp-0x18]
64012ee8:	mov    DWORD PTR [ebp-0x1c],0x8007000e
64012eef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012ef6:	mov    eax,DWORD PTR [ebp-0x1c]
64012ef9:	call   0x64015265
64012efe:	ret    
64012eff:	mov    eax,DWORD PTR [esp+0x4]
64012f03:	test   eax,eax
64012f05:	jne    0x64012f0e
64012f07:	mov    eax,0x80070057
64012f0c:	jmp    0x64012f1f
64012f0e:	cmp    DWORD PTR [eax],0x2c
64012f11:	jne    0x64012f07
64012f13:	and    DWORD PTR [eax+0x1c],0x0
64012f17:	lea    ecx,[eax+0x4]
64012f1a:	call   0x64012eb4
64012f1f:	ret    0x4
64012f22:	mov    eax,DWORD PTR [esp+0x4]
64012f26:	test   eax,eax
64012f28:	jl     0x64012f37
64012f2a:	cmp    eax,DWORD PTR [ecx+0x4]
64012f2d:	jge    0x64012f37
64012f2f:	mov    ecx,DWORD PTR [ecx]
64012f31:	lea    eax,[ecx+eax*2]
64012f34:	ret    0x4
64012f37:	push   0x0
64012f39:	push   0x0
64012f3b:	push   0x1
64012f3d:	push   0xc000008c
64012f42:	call   DWORD PTR ds:0x640260f0
64012f48:	int3   
64012f49:	mov    eax,DWORD PTR [esp+0x4]
64012f4d:	test   eax,eax
64012f4f:	jl     0x64012f5e
64012f51:	cmp    eax,DWORD PTR [ecx+0x4]
64012f54:	jge    0x64012f5e
64012f56:	mov    ecx,DWORD PTR [ecx]
64012f58:	lea    eax,[ecx+eax*4]
64012f5b:	ret    0x4
64012f5e:	push   0x0
64012f60:	push   0x0
64012f62:	push   0x1
64012f64:	push   0xc000008c
64012f69:	call   DWORD PTR ds:0x640260f0
64012f6f:	int3   
64012f70:	push   esi
64012f71:	mov    esi,ecx
64012f73:	lea    ecx,[esi+0x4]
64012f76:	call   0x64012ea0
64012f7b:	xor    eax,eax
64012f7d:	mov    DWORD PTR [esi+0x20],eax
64012f80:	mov    DWORD PTR [esi+0x24],eax
64012f83:	mov    DWORD PTR [esi+0x28],eax
64012f86:	mov    eax,esi
64012f88:	pop    esi
64012f89:	ret    
64012f8a:	push   esi
64012f8b:	mov    esi,DWORD PTR [esp+0x8]
64012f8f:	test   esi,esi
64012f91:	jne    0x64012f9a
64012f93:	mov    eax,0x80070057
64012f98:	jmp    0x64012fe6
64012f9a:	mov    eax,DWORD PTR [esi]
64012f9c:	test   eax,eax
64012f9e:	je     0x64012fe4
64012fa0:	cmp    eax,0x2c
64012fa3:	jne    0x64012f93
64012fa5:	push   edi
64012fa6:	xor    edi,edi
64012fa8:	cmp    DWORD PTR [esi+0x24],edi
64012fab:	jle    0x64012fce
64012fad:	push   ebx
64012fae:	lea    ebx,[esi+0x20]
64012fb1:	push   edi
64012fb2:	mov    ecx,ebx
64012fb4:	call   0x64012f22
64012fb9:	movzx  eax,WORD PTR [eax]
64012fbc:	push   DWORD PTR [esp+0x14]
64012fc0:	push   eax
64012fc1:	call   DWORD PTR ds:0x640261b8
64012fc7:	inc    edi
64012fc8:	cmp    edi,DWORD PTR [esi+0x24]
64012fcb:	jl     0x64012fb1
64012fcd:	pop    ebx
64012fce:	lea    ecx,[esi+0x20]
64012fd1:	call   0x64012e83
64012fd6:	lea    eax,[esi+0x4]
64012fd9:	push   eax
64012fda:	call   DWORD PTR ds:0x640260a4
64012fe0:	and    DWORD PTR [esi],0x0
64012fe3:	pop    edi
64012fe4:	xor    eax,eax
64012fe6:	pop    esi
64012fe7:	ret    0x8
64012fea:	push   esi
64012feb:	mov    esi,ecx
64012fed:	cmp    BYTE PTR [esi+0x4],0x0
64012ff1:	je     0x64012fff
64012ff3:	push   DWORD PTR [esi]
64012ff5:	call   DWORD PTR ds:0x640260a0
64012ffb:	mov    BYTE PTR [esi+0x4],0x0
64012fff:	pop    esi
64013000:	ret    
64013001:	push   esi
64013002:	mov    esi,ecx
64013004:	lea    ecx,[esi+0x18]
64013007:	call   0x64012ea0
6401300c:	xor    eax,eax
6401300e:	mov    DWORD PTR [esi+0x30],eax
64013011:	mov    DWORD PTR [esi+0x34],eax
64013014:	mov    DWORD PTR [esi+0x38],eax
64013017:	mov    eax,esi
64013019:	pop    esi
6401301a:	ret    
6401301b:	push   esi
6401301c:	mov    esi,ecx
6401301e:	lea    eax,[esi+0x18]
64013021:	push   eax
64013022:	call   DWORD PTR ds:0x640260a4
64013028:	lea    ecx,[esi+0x30]
6401302b:	pop    esi
6401302c:	jmp    0x64012e83
64013031:	push   ebp
64013032:	mov    ebp,esp
64013034:	push   ecx
64013035:	push   ecx
64013036:	push   esi
64013037:	mov    esi,ecx
64013039:	lea    eax,[esi+0x18]
6401303c:	push   eax
6401303d:	mov    DWORD PTR [ebp-0x8],eax
64013040:	call   DWORD PTR ds:0x6402609c
64013046:	mov    eax,DWORD PTR [esi+0x34]
64013049:	mov    ecx,DWORD PTR [ebp+0x8]
6401304c:	cmp    ecx,eax
6401304e:	mov    BYTE PTR [ebp-0x4],0x1
64013052:	jg     0x64013078
64013054:	test   ecx,ecx
64013056:	jl     0x64013078
64013058:	cmp    ecx,eax
6401305a:	jne    0x6401306b
6401305c:	mov    esi,DWORD PTR [esi+0x8]
6401305f:	lea    ecx,[ebp-0x8]
64013062:	call   0x64012fea
64013067:	mov    eax,esi
64013069:	jmp    0x64013082
6401306b:	push   ecx
6401306c:	lea    ecx,[esi+0x30]
6401306f:	call   0x64012f49
64013074:	mov    esi,DWORD PTR [eax]
64013076:	jmp    0x6401305f
64013078:	lea    ecx,[ebp-0x8]
6401307b:	call   0x64012fea
64013080:	xor    eax,eax
64013082:	pop    esi
64013083:	leave  
64013084:	ret    0x4
64013087:	push   esi
64013088:	mov    esi,ecx
6401308a:	call   0x64012f70
6401308f:	push   esi
64013090:	mov    DWORD PTR [esi],0x2c
64013096:	call   0x64012eff
6401309b:	test   eax,eax
6401309d:	jge    0x640130a9
6401309f:	mov    BYTE PTR ds:0x64033320,0x1
640130a6:	and    DWORD PTR [esi],0x0
640130a9:	mov    eax,esi
640130ab:	pop    esi
640130ac:	ret    
640130ad:	push   ebp
640130ae:	lea    ebp,[esp-0x78]
640130b2:	sub    esp,0x98
640130b8:	mov    eax,ds:0x6402f09c
640130bd:	xor    eax,ebp
640130bf:	mov    DWORD PTR [ebp+0x74],eax
640130c2:	push   esi
640130c3:	mov    esi,ecx
640130c5:	call   0x64013001
640130ca:	mov    eax,0x64000000
640130cf:	push   0x94
640130d4:	mov    DWORD PTR [esi+0x8],eax
640130d7:	mov    DWORD PTR [esi+0x4],eax
640130da:	lea    eax,[ebp-0x20]
640130dd:	push   0x0
640130df:	push   eax
640130e0:	mov    DWORD PTR [esi],0x3c
640130e6:	mov    BYTE PTR [esi+0xc],0x0
640130ea:	call   0x64014360
640130ef:	add    esp,0xc
640130f2:	lea    eax,[ebp-0x20]
640130f5:	push   eax
640130f6:	mov    DWORD PTR [ebp-0x20],0x94
640130fd:	call   DWORD PTR ds:0x640260ec
64013103:	cmp    DWORD PTR [ebp-0x10],0x2
64013107:	jne    0x64013111
64013109:	cmp    DWORD PTR [ebp-0x1c],0x5
6401310d:	jb     0x64013129
6401310f:	jmp    0x64013125
64013111:	cmp    DWORD PTR [ebp-0x10],0x1
64013115:	jne    0x64013129
64013117:	cmp    DWORD PTR [ebp-0x1c],0x4
6401311b:	ja     0x64013125
6401311d:	jne    0x64013129
6401311f:	cmp    DWORD PTR [ebp-0x18],0x0
64013123:	jbe    0x64013129
64013125:	mov    BYTE PTR [esi+0xc],0x1
64013129:	lea    ecx,[esi+0x18]
6401312c:	mov    DWORD PTR [esi+0x10],0x800
64013133:	mov    DWORD PTR [esi+0x14],0x64026c28
6401313a:	call   0x64012eb4
6401313f:	test   eax,eax
64013141:	jge    0x6401314a
64013143:	mov    BYTE PTR ds:0x64033320,0x1
6401314a:	mov    ecx,DWORD PTR [ebp+0x74]
6401314d:	mov    eax,esi
6401314f:	xor    ecx,ebp
64013151:	pop    esi
64013152:	call   0x64013c5c
64013157:	add    ebp,0x78
6401315a:	leave  
6401315b:	ret    
6401315c:	push   esi
6401315d:	push   DWORD PTR ds:0x640304d0
64013163:	mov    esi,ecx
64013165:	push   esi
64013166:	call   0x64012f8a
6401316b:	lea    ecx,[esi+0x20]
6401316e:	pop    esi
6401316f:	jmp    0x64012e83
64013174:	cmp    BYTE PTR [ecx+0x8],0x0
64013178:	mov    DWORD PTR [ecx],0x64026c38
6401317e:	je     0x6401318e
64013180:	mov    ecx,DWORD PTR [ecx+0x4]
64013183:	test   ecx,ecx
64013185:	je     0x6401318e
64013187:	push   ecx
64013188:	call   DWORD PTR ds:0x640260f4
6401318e:	ret    
6401318f:	push   DWORD PTR [esp+0x4]
64013193:	push   0x0
64013195:	push   DWORD PTR [ecx+0x4]
64013198:	call   DWORD PTR ds:0x640260f8
6401319e:	ret    0x4
640131a1:	cmp    DWORD PTR [esp+0x4],0x0
640131a6:	je     0x640131b7
640131a8:	push   DWORD PTR [esp+0x4]
640131ac:	push   0x0
640131ae:	push   DWORD PTR [ecx+0x4]
640131b1:	call   DWORD PTR ds:0x640260fc
640131b7:	ret    0x4
640131ba:	push   ebp
640131bb:	mov    ebp,esp
640131bd:	xor    eax,eax
640131bf:	cmp    DWORD PTR [ebp+0x8],eax
640131c2:	jne    0x640131cd
640131c4:	push   DWORD PTR [ebp+0xc]
640131c7:	mov    eax,DWORD PTR [ecx]
640131c9:	call   DWORD PTR [eax]
640131cb:	jmp    0x640131ee
640131cd:	cmp    DWORD PTR [ebp+0xc],eax
640131d0:	jne    0x640131de
640131d2:	push   DWORD PTR [ebp+0x8]
640131d5:	mov    eax,DWORD PTR [ecx]
640131d7:	call   DWORD PTR [eax+0x4]
640131da:	xor    eax,eax
640131dc:	jmp    0x640131ee
640131de:	push   DWORD PTR [ebp+0xc]
640131e1:	push   DWORD PTR [ebp+0x8]
640131e4:	push   eax
640131e5:	push   DWORD PTR [ecx+0x4]
640131e8:	call   DWORD PTR ds:0x64026100
640131ee:	pop    ebp
640131ef:	ret    0x8
640131f2:	push   DWORD PTR [esp+0x4]
640131f6:	push   0x0
640131f8:	push   DWORD PTR [ecx+0x4]
640131fb:	call   DWORD PTR ds:0x64026104
64013201:	ret    0x4
64013204:	push   esi
64013205:	mov    esi,ecx
64013207:	call   0x64013174
6401320c:	test   BYTE PTR [esp+0x8],0x1
64013211:	je     0x6401321a
64013213:	push   esi
64013214:	call   0x64013402
64013219:	pop    ecx
6401321a:	mov    eax,esi
6401321c:	pop    esi
6401321d:	ret    0x4
64013220:	mov    eax,ecx
64013222:	mov    ecx,DWORD PTR [esp+0x4]
64013226:	mov    DWORD PTR [eax+0x4],ecx
64013229:	mov    DWORD PTR [eax],0x64026c4c
6401322f:	xor    ecx,ecx
64013231:	mov    DWORD PTR [eax+0x14],0x2
64013238:	mov    DWORD PTR [eax+0xc],ecx
6401323b:	mov    DWORD PTR [eax+0x10],ecx
6401323e:	mov    WORD PTR [eax+0x18],cx
64013242:	mov    WORD PTR [eax+0x1a],cx
64013246:	mov    DWORD PTR [eax+0x8],eax
64013249:	ret    0x4
6401324c:	mov    eax,DWORD PTR [esp+0x8]
64013250:	mul    DWORD PTR [esp+0xc]
64013254:	test   edx,edx
64013256:	ja     0x6401325d
64013258:	cmp    eax,0xffffffff
6401325b:	jbe    0x64013263
6401325d:	mov    eax,0x80070057
64013262:	ret    
64013263:	mov    ecx,DWORD PTR [esp+0x4]
64013267:	mov    DWORD PTR [ecx],eax
64013269:	xor    eax,eax
6401326b:	ret    
6401326c:	mov    ecx,DWORD PTR [ecx+0x4]
6401326f:	mov    eax,DWORD PTR [ecx]
64013271:	jmp    DWORD PTR [eax+0x4]
64013274:	xor    edx,edx
64013276:	lea    eax,[ecx+0x14]
64013279:	inc    edx
6401327a:	lock xadd DWORD PTR [eax],edx
6401327e:	lea    eax,[ecx+0x8]
64013281:	ret    
64013282:	mov    eax,ecx
64013284:	ret    
64013285:	test   BYTE PTR [esp+0x4],0x1
6401328a:	push   esi
6401328b:	mov    esi,ecx
6401328d:	mov    DWORD PTR [esi],0x64026c4c
64013293:	je     0x6401329c
64013295:	push   esi
64013296:	call   0x64013402
6401329b:	pop    ecx
6401329c:	mov    eax,esi
6401329e:	pop    esi
6401329f:	ret    0x4
640132a2:	mov    eax,DWORD PTR [esp+0x8]
640132a6:	mov    ecx,DWORD PTR [esp+0xc]
640132aa:	or     edx,0xffffffff
640132ad:	sub    edx,eax
640132af:	cmp    edx,ecx
640132b1:	jae    0x640132b9
640132b3:	mov    eax,0x80070057
640132b8:	ret    
640132b9:	add    eax,ecx
640132bb:	mov    ecx,DWORD PTR [esp+0x4]
640132bf:	mov    DWORD PTR [ecx],eax
640132c1:	xor    eax,eax
640132c3:	ret    
640132c4:	push   ebp
640132c5:	mov    ebp,esp
640132c7:	push   esi
640132c8:	mov    esi,DWORD PTR [ebp+0x8]
640132cb:	push   edi
640132cc:	push   DWORD PTR [ebp+0xc]
640132cf:	add    esi,0x8
640132d2:	and    esi,0xfffffff8
640132d5:	lea    eax,[ebp+0x8]
640132d8:	push   esi
640132d9:	push   eax
640132da:	mov    edi,ecx
640132dc:	call   0x6401324c
640132e1:	add    esp,0xc
640132e4:	test   eax,eax
640132e6:	jl     0x6401331e
640132e8:	push   DWORD PTR [ebp+0x8]
640132eb:	lea    eax,[ebp+0x8]
640132ee:	push   0x10
640132f0:	push   eax
640132f1:	call   0x640132a2
640132f6:	add    esp,0xc
640132f9:	test   eax,eax
640132fb:	jl     0x6401331e
640132fd:	mov    ecx,DWORD PTR [edi+0x4]
64013300:	push   DWORD PTR [ebp+0x8]
64013303:	mov    eax,DWORD PTR [ecx]
64013305:	call   DWORD PTR [eax]
64013307:	test   eax,eax
64013309:	je     0x6401331e
6401330b:	dec    esi
6401330c:	and    DWORD PTR [eax+0x4],0x0
64013310:	mov    DWORD PTR [eax],edi
64013312:	mov    DWORD PTR [eax+0xc],0x1
64013319:	mov    DWORD PTR [eax+0x8],esi
6401331c:	jmp    0x64013320
6401331e:	xor    eax,eax
64013320:	pop    edi
64013321:	pop    esi
64013322:	pop    ebp
64013323:	ret    0x8
64013326:	push   ebp
64013327:	mov    ebp,esp
64013329:	push   esi
6401332a:	mov    esi,DWORD PTR [ebp+0xc]
6401332d:	push   edi
6401332e:	push   DWORD PTR [ebp+0x10]
64013331:	add    esi,0x8
64013334:	and    esi,0xfffffff8
64013337:	lea    eax,[ebp+0xc]
6401333a:	push   esi
6401333b:	push   eax
6401333c:	mov    edi,ecx
6401333e:	call   0x6401324c
64013343:	add    esp,0xc
64013346:	test   eax,eax
64013348:	jl     0x64013377
6401334a:	push   DWORD PTR [ebp+0xc]
6401334d:	lea    eax,[ebp+0xc]
64013350:	push   0x10
64013352:	push   eax
64013353:	call   0x640132a2
64013358:	add    esp,0xc
6401335b:	test   eax,eax
6401335d:	jl     0x64013377
6401335f:	push   DWORD PTR [ebp+0xc]
64013362:	mov    ecx,DWORD PTR [edi+0x4]
64013365:	push   DWORD PTR [ebp+0x8]
64013368:	mov    eax,DWORD PTR [ecx]
6401336a:	call   DWORD PTR [eax+0x8]
6401336d:	test   eax,eax
6401336f:	je     0x64013377
64013371:	dec    esi
64013372:	mov    DWORD PTR [eax+0x8],esi
64013375:	jmp    0x64013379
64013377:	xor    eax,eax
64013379:	pop    edi
6401337a:	pop    esi
6401337b:	pop    ebp
6401337c:	ret    0xc
6401337f:	push   0x44
64013381:	mov    eax,0x640235b5
64013386:	call   0x640154ab
6401338b:	push   0x64026c64
64013390:	lea    ecx,[ebp-0x28]
64013393:	call   0x64002710
64013398:	and    DWORD PTR [ebp-0x4],0x0
6401339c:	lea    eax,[ebp-0x28]
6401339f:	push   eax
640133a0:	lea    ecx,[ebp-0x50]
640133a3:	call   0x64002d00
640133a8:	push   0x6402c690
640133ad:	lea    eax,[ebp-0x50]
640133b0:	push   eax
640133b1:	mov    DWORD PTR [ebp-0x50],0x6402631c
640133b8:	call   0x6401384b
640133bd:	int3   
640133be:	push   0x44
640133c0:	mov    eax,0x640235d8
640133c5:	call   0x640154ab
640133ca:	push   0x64026c74
640133cf:	lea    ecx,[ebp-0x28]
640133d2:	call   0x64002710
640133d7:	and    DWORD PTR [ebp-0x4],0x0
640133db:	lea    eax,[ebp-0x28]
640133de:	push   eax
640133df:	lea    ecx,[ebp-0x50]
640133e2:	call   0x64002d00
640133e7:	push   0x6402c654
640133ec:	lea    eax,[ebp-0x50]
640133ef:	push   eax
640133f0:	mov    DWORD PTR [ebp-0x50],0x64026328
640133f7:	call   0x6401384b
640133fc:	int3   
640133fd:	jmp    0x640137e1
64013402:	jmp    0x64014af6
64013407:	push   ecx
64013408:	mov    DWORD PTR [ecx],0x64026c90
6401340e:	call   0x64015514
64013413:	pop    ecx
64013414:	ret    
64013415:	push   esi
64013416:	mov    esi,ecx
64013418:	call   0x64013407
6401341d:	test   BYTE PTR [esp+0x8],0x1
64013422:	je     0x6401342b
64013424:	push   esi
64013425:	call   0x64013402
6401342a:	pop    ecx
6401342b:	mov    eax,esi
6401342d:	pop    esi
6401342e:	ret    0x4
64013431:	mov    eax,DWORD PTR [esp+0x4]
64013435:	add    ecx,0x9
64013438:	push   ecx
64013439:	add    eax,0x9
6401343c:	push   eax
6401343d:	call   0x64015590
64013442:	neg    eax
64013444:	pop    ecx
64013445:	sbb    eax,eax
64013447:	pop    ecx
64013448:	inc    eax
64013449:	ret    0x4
6401344c:	mov    eax,ecx
6401344e:	and    DWORD PTR [eax+0x4],0x0
64013452:	and    DWORD PTR [eax+0x8],0x0
64013456:	mov    DWORD PTR [eax],0x64026c98
6401345c:	ret    
6401345d:	push   ebx
6401345e:	mov    ebx,DWORD PTR [esp+0x8]
64013462:	push   esi
64013463:	push   edi
64013464:	mov    edi,ecx
64013466:	mov    DWORD PTR [edi],0x64026c98
6401346c:	mov    eax,DWORD PTR [ebx]
6401346e:	test   eax,eax
64013470:	je     0x64013498
64013472:	push   eax
64013473:	call   0x64015420
64013478:	mov    esi,eax
6401347a:	inc    esi
6401347b:	push   esi
6401347c:	call   0x64014bd3
64013481:	test   eax,eax
64013483:	pop    ecx
64013484:	pop    ecx
64013485:	mov    DWORD PTR [edi+0x4],eax
64013488:	je     0x6401349c
6401348a:	push   DWORD PTR [ebx]
6401348c:	push   esi
6401348d:	push   eax
6401348e:	call   0x64015618
64013493:	add    esp,0xc
64013496:	jmp    0x6401349c
64013498:	and    DWORD PTR [edi+0x4],0x0
6401349c:	mov    DWORD PTR [edi+0x8],0x1
640134a3:	mov    eax,edi
640134a5:	pop    edi
640134a6:	pop    esi
640134a7:	pop    ebx
640134a8:	ret    0x4
640134ab:	mov    eax,ecx
640134ad:	mov    ecx,DWORD PTR [esp+0x4]
640134b1:	mov    DWORD PTR [eax],0x64026c98
640134b7:	mov    ecx,DWORD PTR [ecx]
640134b9:	and    DWORD PTR [eax+0x8],0x0
640134bd:	mov    DWORD PTR [eax+0x4],ecx
640134c0:	ret    0x8
640134c3:	push   ebx
640134c4:	mov    ebx,DWORD PTR [esp+0x8]
640134c8:	push   esi
640134c9:	mov    esi,ecx
640134cb:	mov    DWORD PTR [esi],0x64026c98
640134d1:	mov    eax,DWORD PTR [ebx+0x8]
640134d4:	mov    DWORD PTR [esi+0x8],eax
640134d7:	test   eax,eax
640134d9:	mov    eax,DWORD PTR [ebx+0x4]
640134dc:	push   edi
640134dd:	je     0x64013510
640134df:	test   eax,eax
640134e1:	je     0x6401350a
640134e3:	push   eax
640134e4:	call   0x64015420
640134e9:	mov    edi,eax
640134eb:	inc    edi
640134ec:	push   edi
640134ed:	call   0x64014bd3
640134f2:	test   eax,eax
640134f4:	pop    ecx
640134f5:	pop    ecx
640134f6:	mov    DWORD PTR [esi+0x4],eax
640134f9:	je     0x64013513
640134fb:	push   DWORD PTR [ebx+0x4]
640134fe:	push   edi
640134ff:	push   eax
64013500:	call   0x64015618
64013505:	add    esp,0xc
64013508:	jmp    0x64013513
6401350a:	and    DWORD PTR [esi+0x4],0x0
6401350e:	jmp    0x64013513
64013510:	mov    DWORD PTR [esi+0x4],eax
64013513:	pop    edi
64013514:	mov    eax,esi
64013516:	pop    esi
64013517:	pop    ebx
64013518:	ret    0x4
6401351b:	cmp    DWORD PTR [ecx+0x8],0x0
6401351f:	mov    DWORD PTR [ecx],0x64026c98
64013525:	je     0x64013530
64013527:	push   DWORD PTR [ecx+0x4]
6401352a:	call   0x64014af6
6401352f:	pop    ecx
64013530:	ret    
64013531:	mov    eax,DWORD PTR [ecx+0x4]
64013534:	test   eax,eax
64013536:	jne    0x6401353d
64013538:	mov    eax,0x64026ca0
6401353d:	ret    
6401353e:	push   esi
6401353f:	lea    eax,[esp+0x8]
64013543:	push   eax
64013544:	mov    esi,ecx
64013546:	call   0x6401345d
6401354b:	mov    DWORD PTR [esi],0x64026cb8
64013551:	mov    eax,esi
64013553:	pop    esi
64013554:	ret    0x4
64013557:	push   esi
64013558:	push   DWORD PTR [esp+0x8]
6401355c:	mov    esi,ecx
6401355e:	call   0x640134c3
64013563:	mov    DWORD PTR [esi],0x64026cb8
64013569:	mov    eax,esi
6401356b:	pop    esi
6401356c:	ret    0x4
6401356f:	mov    DWORD PTR [ecx],0x64026cb8
64013575:	jmp    0x6401351b
6401357a:	push   esi
6401357b:	mov    esi,ecx
6401357d:	call   0x6401351b
64013582:	test   BYTE PTR [esp+0x8],0x1
64013587:	je     0x64013590
64013589:	push   esi
6401358a:	call   0x64013402
6401358f:	pop    ecx
64013590:	mov    eax,esi
64013592:	pop    esi
64013593:	ret    0x4
64013596:	push   esi
64013597:	mov    esi,ecx
64013599:	mov    DWORD PTR [esi],0x64026cb8
6401359f:	call   0x6401351b
640135a4:	test   BYTE PTR [esp+0x8],0x1
640135a9:	je     0x640135b2
640135ab:	push   esi
640135ac:	call   0x64013402
640135b1:	pop    ecx
640135b2:	mov    eax,esi
640135b4:	pop    esi
640135b5:	ret    0x4
640135b8:	push   ebp
640135b9:	mov    ebp,esp
640135bb:	push   esi
640135bc:	mov    esi,DWORD PTR [ebp+0x14]
640135bf:	push   edi
640135c0:	xor    edi,edi
640135c2:	cmp    esi,edi
640135c4:	jne    0x640135ca
640135c6:	xor    eax,eax
640135c8:	jmp    0x6401362f
640135ca:	cmp    DWORD PTR [ebp+0x8],edi
640135cd:	jne    0x640135ea
640135cf:	call   0x64015a20
640135d4:	push   0x16
640135d6:	pop    esi
640135d7:	mov    DWORD PTR [eax],esi
640135d9:	push   edi
640135da:	push   edi
640135db:	push   edi
640135dc:	push   edi
640135dd:	push   edi
640135de:	call   0x64013794
640135e3:	add    esp,0x14
640135e6:	mov    eax,esi
640135e8:	jmp    0x6401362f
640135ea:	cmp    DWORD PTR [ebp+0x10],edi
640135ed:	je     0x64013605
640135ef:	cmp    DWORD PTR [ebp+0xc],esi
640135f2:	jb     0x64013605
640135f4:	push   esi
640135f5:	push   DWORD PTR [ebp+0x10]
640135f8:	push   DWORD PTR [ebp+0x8]
640135fb:	call   0x64015680
64013600:	add    esp,0xc
64013603:	jmp    0x640135c6
64013605:	push   DWORD PTR [ebp+0xc]
64013608:	push   edi
64013609:	push   DWORD PTR [ebp+0x8]
6401360c:	call   0x64014360
64013611:	add    esp,0xc
64013614:	cmp    DWORD PTR [ebp+0x10],edi
64013617:	je     0x640135cf
64013619:	cmp    DWORD PTR [ebp+0xc],esi
6401361c:	jae    0x6401362c
6401361e:	call   0x64015a20
64013623:	push   0x22
64013625:	pop    ecx
64013626:	mov    DWORD PTR [eax],ecx
64013628:	mov    esi,ecx
6401362a:	jmp    0x640135d9
6401362c:	push   0x16
6401362e:	pop    eax
6401362f:	pop    edi
64013630:	pop    esi
64013631:	pop    ebp
64013632:	ret    
64013633:	push   ebp
64013634:	mov    ebp,esp
64013636:	mov    eax,DWORD PTR [ebp+0x14]
64013639:	push   esi
6401363a:	push   edi
6401363b:	xor    edi,edi
6401363d:	cmp    eax,edi
6401363f:	je     0x64013688
64013641:	cmp    DWORD PTR [ebp+0x8],edi
64013644:	jne    0x64013661
64013646:	call   0x64015a20
6401364b:	push   0x16
6401364d:	pop    esi
6401364e:	mov    DWORD PTR [eax],esi
64013650:	push   edi
64013651:	push   edi
64013652:	push   edi
64013653:	push   edi
64013654:	push   edi
64013655:	call   0x64013794
6401365a:	add    esp,0x14
6401365d:	mov    eax,esi
6401365f:	jmp    0x6401368a
64013661:	cmp    DWORD PTR [ebp+0x10],edi
64013664:	je     0x64013646
64013666:	cmp    DWORD PTR [ebp+0xc],eax
64013669:	jae    0x64013679
6401366b:	call   0x64015a20
64013670:	push   0x22
64013672:	pop    ecx
64013673:	mov    DWORD PTR [eax],ecx
64013675:	mov    esi,ecx
64013677:	jmp    0x64013650
64013679:	push   eax
6401367a:	push   DWORD PTR [ebp+0x10]
6401367d:	push   DWORD PTR [ebp+0x8]
64013680:	call   0x64014ca0
64013685:	add    esp,0xc
64013688:	xor    eax,eax
6401368a:	pop    edi
6401368b:	pop    esi
6401368c:	pop    ebp
6401368d:	ret    
6401368e:	mov    eax,DWORD PTR [esp+0x4]
64013692:	mov    ds:0x6403055c,eax
64013697:	ret    
64013698:	push   ebp
64013699:	lea    ebp,[esp-0x2a8]
640136a0:	sub    esp,0x328
640136a6:	mov    eax,ds:0x6402f09c
640136ab:	xor    eax,ebp
640136ad:	mov    DWORD PTR [ebp+0x2a4],eax
640136b3:	push   esi
640136b4:	mov    DWORD PTR [ebp+0x88],eax
640136ba:	mov    DWORD PTR [ebp+0x84],ecx
640136c0:	mov    DWORD PTR [ebp+0x80],edx
640136c6:	mov    DWORD PTR [ebp+0x7c],ebx
640136c9:	mov    DWORD PTR [ebp+0x78],esi
640136cc:	mov    DWORD PTR [ebp+0x74],edi
640136cf:	data16 mov WORD PTR [ebp+0xa0],ss
640136d6:	data16 mov WORD PTR [ebp+0x94],cs
640136dd:	data16 mov WORD PTR [ebp+0x70],ds
640136e1:	data16 mov WORD PTR [ebp+0x6c],es
640136e5:	data16 mov WORD PTR [ebp+0x68],fs
640136e9:	data16 mov WORD PTR [ebp+0x64],gs
640136ed:	pushf  
640136ee:	pop    DWORD PTR [ebp+0x98]
640136f4:	mov    esi,DWORD PTR [ebp+0x2ac]
640136fa:	lea    eax,[ebp+0x2ac]
64013700:	mov    DWORD PTR [ebp+0x9c],eax
64013706:	mov    DWORD PTR [ebp-0x28],0x10001
6401370d:	mov    DWORD PTR [ebp+0x90],esi
64013713:	mov    eax,DWORD PTR [eax-0x4]
64013716:	push   0x50
64013718:	mov    DWORD PTR [ebp+0x8c],eax
6401371e:	lea    eax,[ebp-0x80]
64013721:	push   0x0
64013723:	push   eax
64013724:	call   0x64014360
64013729:	lea    eax,[ebp-0x80]
6401372c:	mov    DWORD PTR [ebp-0x30],eax
6401372f:	lea    eax,[ebp-0x28]
64013732:	add    esp,0xc
64013735:	mov    DWORD PTR [ebp-0x80],0xc000000d
6401373c:	mov    DWORD PTR [ebp-0x74],esi
6401373f:	mov    DWORD PTR [ebp-0x2c],eax
64013742:	call   DWORD PTR ds:0x64026118
64013748:	push   0x0
6401374a:	mov    esi,eax
6401374c:	call   DWORD PTR ds:0x64026114
64013752:	lea    eax,[ebp-0x30]
64013755:	push   eax
64013756:	call   DWORD PTR ds:0x64026110
6401375c:	test   eax,eax
6401375e:	jne    0x6401376c
64013760:	test   esi,esi
64013762:	jne    0x6401376c
64013764:	push   0x2
64013766:	call   0x64015a64
6401376b:	pop    ecx
6401376c:	push   0xc000000d
64013771:	call   DWORD PTR ds:0x64026048
64013777:	push   eax
64013778:	call   DWORD PTR ds:0x6402610c
6401377e:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013784:	xor    ecx,ebp
64013786:	pop    esi
64013787:	call   0x64013c5c
6401378c:	add    ebp,0x2a8
64013792:	leave  
64013793:	ret    
64013794:	push   ebp
64013795:	mov    ebp,esp
64013797:	push   DWORD PTR ds:0x6403055c
6401379d:	call   0x64015b4f
640137a2:	test   eax,eax
640137a4:	pop    ecx
640137a5:	je     0x640137aa
640137a7:	pop    ebp
640137a8:	jmp    eax
640137aa:	push   0x2
640137ac:	call   0x64015a64
640137b1:	pop    ecx
640137b2:	pop    ebp
640137b3:	jmp    0x64013698
640137b8:	xor    eax,eax
640137ba:	push   eax
640137bb:	push   eax
640137bc:	push   eax
640137bd:	push   eax
640137be:	push   eax
640137bf:	call   0x64013794
640137c4:	add    esp,0x14
640137c7:	ret    
640137c8:	push   esi
640137c9:	push   0x1
640137cb:	push   0x6402f098
640137d0:	mov    esi,ecx
640137d2:	call   0x640134ab
640137d7:	mov    DWORD PTR [esi],0x64026304
640137dd:	mov    eax,esi
640137df:	pop    esi
640137e0:	ret    
640137e1:	push   ebp
640137e2:	mov    ebp,esp
640137e4:	sub    esp,0xc
640137e7:	jmp    0x640137f6
640137e9:	push   DWORD PTR [ebp+0x8]
640137ec:	call   0x6401609b
640137f1:	test   eax,eax
640137f3:	pop    ecx
640137f4:	je     0x64013805
640137f6:	push   DWORD PTR [ebp+0x8]
640137f9:	call   0x64014bd3
640137fe:	test   eax,eax
64013800:	pop    ecx
64013801:	je     0x640137e9
64013803:	leave  
64013804:	ret    
64013805:	test   BYTE PTR ds:0x6403056c,0x1
6401380c:	mov    esi,0x64030560
64013811:	jne    0x6401382c
64013813:	or     DWORD PTR ds:0x6403056c,0x1
6401381a:	mov    ecx,esi
6401381c:	call   0x640137c8
64013821:	push   0x6402546a
64013826:	call   0x64013d8f
6401382b:	pop    ecx
6401382c:	push   esi
6401382d:	lea    ecx,[ebp-0xc]
64013830:	call   0x640134c3
64013835:	push   0x6402c5c4
6401383a:	lea    eax,[ebp-0xc]
6401383d:	push   eax
6401383e:	mov    DWORD PTR [ebp-0xc],0x64026304
64013845:	call   0x6401384b
6401384a:	int3   
6401384b:	push   ebp
6401384c:	mov    ebp,esp
6401384e:	sub    esp,0x20
64013851:	mov    eax,DWORD PTR [ebp+0x8]
64013854:	push   esi
64013855:	push   edi
64013856:	push   0x8
64013858:	pop    ecx
64013859:	mov    esi,0x64026cc0
6401385e:	lea    edi,[ebp-0x20]
64013861:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64013863:	mov    DWORD PTR [ebp-0x8],eax
64013866:	mov    eax,DWORD PTR [ebp+0xc]
64013869:	test   eax,eax
6401386b:	pop    edi
6401386c:	mov    DWORD PTR [ebp-0x4],eax
6401386f:	pop    esi
64013870:	je     0x6401387e
64013872:	test   BYTE PTR [eax],0x8
64013875:	je     0x6401387e
64013877:	mov    DWORD PTR [ebp-0xc],0x1994000
6401387e:	lea    eax,[ebp-0xc]
64013881:	push   eax
64013882:	push   DWORD PTR [ebp-0x10]
64013885:	push   DWORD PTR [ebp-0x1c]
64013888:	push   DWORD PTR [ebp-0x20]
6401388b:	call   DWORD PTR ds:0x640260f0
64013891:	leave  
64013892:	ret    0x8
64013895:	push   ebp
64013896:	mov    ebp,esp
64013898:	push   ecx
64013899:	push   ebx
6401389a:	mov    eax,DWORD PTR [ebp+0xc]
6401389d:	add    eax,0xc
640138a0:	mov    DWORD PTR [ebp-0x4],eax
640138a3:	mov    ebx,DWORD PTR fs:0x0
640138aa:	mov    eax,DWORD PTR [ebx]
640138ac:	mov    fs:0x0,eax
640138b2:	mov    eax,DWORD PTR [ebp+0x8]
640138b5:	mov    ebx,DWORD PTR [ebp+0xc]
640138b8:	mov    ebp,DWORD PTR [ebp-0x4]
640138bb:	mov    esp,DWORD PTR [ebx-0x4]
640138be:	jmp    eax
640138c0:	pop    ebx
640138c1:	leave  
640138c2:	ret    0x8
640138c5:	pop    eax
640138c6:	pop    ecx
640138c7:	xchg   DWORD PTR [esp],eax
640138ca:	jmp    eax
640138cc:	push   ebp
640138cd:	mov    ebp,esp
640138cf:	push   ecx
640138d0:	push   ecx
640138d1:	push   ebx
640138d2:	push   esi
640138d3:	push   edi
640138d4:	mov    esi,DWORD PTR fs:0x0
640138db:	mov    DWORD PTR [ebp-0x4],esi
640138de:	mov    DWORD PTR [ebp-0x8],0x640138f5
640138e5:	push   0x0
640138e7:	push   DWORD PTR [ebp+0xc]
640138ea:	push   DWORD PTR [ebp-0x8]
640138ed:	push   DWORD PTR [ebp+0x8]
640138f0:	call   0x6401fecc
640138f5:	mov    eax,DWORD PTR [ebp+0xc]
640138f8:	mov    eax,DWORD PTR [eax+0x4]
640138fb:	and    eax,0xfffffffd
640138fe:	mov    ecx,DWORD PTR [ebp+0xc]
64013901:	mov    DWORD PTR [ecx+0x4],eax
64013904:	mov    edi,DWORD PTR fs:0x0
6401390b:	mov    ebx,DWORD PTR [ebp-0x4]
6401390e:	mov    DWORD PTR [ebx],edi
64013910:	mov    DWORD PTR fs:0x0,ebx
64013917:	pop    edi
64013918:	pop    esi
64013919:	pop    ebx
6401391a:	leave  
6401391b:	ret    0x8
6401391e:	push   ebp
6401391f:	mov    ebp,esp
64013921:	sub    esp,0x8
64013924:	push   ebx
64013925:	push   esi
64013926:	push   edi
64013927:	cld    
64013928:	mov    DWORD PTR [ebp-0x4],eax
6401392b:	xor    eax,eax
6401392d:	push   eax
6401392e:	push   eax
6401392f:	push   eax
64013930:	push   DWORD PTR [ebp-0x4]
64013933:	push   DWORD PTR [ebp+0x14]
64013936:	push   DWORD PTR [ebp+0x10]
64013939:	push   DWORD PTR [ebp+0xc]
6401393c:	push   DWORD PTR [ebp+0x8]
6401393f:	call   0x64016c63
64013944:	add    esp,0x20
64013947:	mov    DWORD PTR [ebp-0x8],eax
6401394a:	pop    edi
6401394b:	pop    esi
6401394c:	pop    ebx
6401394d:	mov    eax,DWORD PTR [ebp-0x8]
64013950:	mov    esp,ebp
64013952:	pop    ebp
64013953:	ret    
64013954:	push   esi
64013955:	cld    
64013956:	mov    esi,DWORD PTR [esp+0xc]
6401395a:	mov    ecx,DWORD PTR [esi+0x8]
6401395d:	xor    ecx,esi
6401395f:	call   0x64013c5c
64013964:	push   0x0
64013966:	push   esi
64013967:	push   DWORD PTR [esi+0x14]
6401396a:	push   DWORD PTR [esi+0xc]
6401396d:	push   0x0
6401396f:	push   DWORD PTR [esp+0x24]
64013973:	push   DWORD PTR [esi+0x10]
64013976:	push   DWORD PTR [esp+0x24]
6401397a:	call   0x64016c63
6401397f:	add    esp,0x20
64013982:	pop    esi
64013983:	ret    
64013984:	push   ebp
64013985:	mov    ebp,esp
64013987:	sub    esp,0x38
6401398a:	push   ebx
6401398b:	cmp    DWORD PTR [ebp+0x8],0x123
64013992:	jne    0x640139a6
64013994:	mov    eax,0x64013a2d
64013999:	mov    ecx,DWORD PTR [ebp+0xc]
6401399c:	mov    DWORD PTR [ecx],eax
6401399e:	xor    eax,eax
640139a0:	inc    eax
640139a1:	jmp    0x64013a56
640139a6:	and    DWORD PTR [ebp-0x28],0x0
640139aa:	mov    DWORD PTR [ebp-0x24],0x64013a59
640139b1:	mov    eax,ds:0x6402f09c
640139b6:	lea    ecx,[ebp-0x28]
640139b9:	xor    eax,ecx
640139bb:	mov    DWORD PTR [ebp-0x20],eax
640139be:	mov    eax,DWORD PTR [ebp+0x18]
640139c1:	mov    DWORD PTR [ebp-0x1c],eax
640139c4:	mov    eax,DWORD PTR [ebp+0xc]
640139c7:	mov    DWORD PTR [ebp-0x18],eax
640139ca:	mov    eax,DWORD PTR [ebp+0x1c]
640139cd:	mov    DWORD PTR [ebp-0x14],eax
640139d0:	mov    eax,DWORD PTR [ebp+0x20]
640139d3:	mov    DWORD PTR [ebp-0x10],eax
640139d6:	and    DWORD PTR [ebp-0xc],0x0
640139da:	and    DWORD PTR [ebp-0x8],0x0
640139de:	and    DWORD PTR [ebp-0x4],0x0
640139e2:	mov    DWORD PTR [ebp-0xc],esp
640139e5:	mov    DWORD PTR [ebp-0x8],ebp
640139e8:	mov    eax,fs:0x0
640139ee:	mov    DWORD PTR [ebp-0x28],eax
640139f1:	lea    eax,[ebp-0x28]
640139f4:	mov    fs:0x0,eax
640139fa:	mov    DWORD PTR [ebp-0x38],0x1
64013a01:	mov    eax,DWORD PTR [ebp+0x8]
64013a04:	mov    DWORD PTR [ebp-0x34],eax
64013a07:	mov    eax,DWORD PTR [ebp+0x10]
64013a0a:	mov    DWORD PTR [ebp-0x30],eax
64013a0d:	call   0x64015d6b
64013a12:	mov    eax,DWORD PTR [eax+0x80]
64013a18:	mov    DWORD PTR [ebp-0x2c],eax
64013a1b:	lea    eax,[ebp-0x34]
64013a1e:	push   eax
64013a1f:	mov    eax,DWORD PTR [ebp+0x8]
64013a22:	push   DWORD PTR [eax]
64013a24:	call   DWORD PTR [ebp-0x2c]
64013a27:	pop    ecx
64013a28:	pop    ecx
64013a29:	and    DWORD PTR [ebp-0x38],0x0
64013a2d:	cmp    DWORD PTR [ebp-0x4],0x0
64013a31:	je     0x64013a4a
64013a33:	mov    ebx,DWORD PTR fs:0x0
64013a3a:	mov    eax,DWORD PTR [ebx]
64013a3c:	mov    ebx,DWORD PTR [ebp-0x28]
64013a3f:	mov    DWORD PTR [ebx],eax
64013a41:	mov    DWORD PTR fs:0x0,ebx
64013a48:	jmp    0x64013a53
64013a4a:	mov    eax,DWORD PTR [ebp-0x28]
64013a4d:	mov    fs:0x0,eax
64013a53:	mov    eax,DWORD PTR [ebp-0x38]
64013a56:	pop    ebx
64013a57:	leave  
64013a58:	ret    
64013a59:	push   ebp
64013a5a:	mov    ebp,esp
64013a5c:	push   ecx
64013a5d:	push   ebx
64013a5e:	cld    
64013a5f:	mov    eax,DWORD PTR [ebp+0xc]
64013a62:	mov    ecx,DWORD PTR [eax+0x8]
64013a65:	xor    ecx,DWORD PTR [ebp+0xc]
64013a68:	call   0x64013c5c
64013a6d:	mov    eax,DWORD PTR [ebp+0x8]
64013a70:	mov    eax,DWORD PTR [eax+0x4]
64013a73:	and    eax,0x66
64013a76:	je     0x64013a89
64013a78:	mov    eax,DWORD PTR [ebp+0xc]
64013a7b:	mov    DWORD PTR [eax+0x24],0x1
64013a82:	xor    eax,eax
64013a84:	inc    eax
64013a85:	jmp    0x64013af3
64013a87:	jmp    0x64013af3
64013a89:	push   0x1
64013a8b:	mov    eax,DWORD PTR [ebp+0xc]
64013a8e:	push   DWORD PTR [eax+0x18]
64013a91:	mov    eax,DWORD PTR [ebp+0xc]
64013a94:	push   DWORD PTR [eax+0x14]
64013a97:	mov    eax,DWORD PTR [ebp+0xc]
64013a9a:	push   DWORD PTR [eax+0xc]
64013a9d:	push   0x0
64013a9f:	push   DWORD PTR [ebp+0x10]
64013aa2:	mov    eax,DWORD PTR [ebp+0xc]
64013aa5:	push   DWORD PTR [eax+0x10]
64013aa8:	push   DWORD PTR [ebp+0x8]
64013aab:	call   0x64016c63
64013ab0:	add    esp,0x20
64013ab3:	mov    eax,DWORD PTR [ebp+0xc]
64013ab6:	cmp    DWORD PTR [eax+0x24],0x0
64013aba:	jne    0x64013ac7
64013abc:	push   DWORD PTR [ebp+0x8]
64013abf:	push   DWORD PTR [ebp+0xc]
64013ac2:	call   0x640138cc
64013ac7:	push   0x0
64013ac9:	push   0x0
64013acb:	push   0x0
64013acd:	push   0x0
64013acf:	push   0x0
64013ad1:	lea    eax,[ebp-0x4]
64013ad4:	push   eax
64013ad5:	push   0x123
64013ada:	call   0x64013984
64013adf:	add    esp,0x1c
64013ae2:	mov    eax,DWORD PTR [ebp-0x4]
64013ae5:	mov    ebx,DWORD PTR [ebp+0xc]
64013ae8:	mov    esp,DWORD PTR [ebx+0x1c]
64013aeb:	mov    ebp,DWORD PTR [ebx+0x20]
64013aee:	jmp    eax
64013af0:	xor    eax,eax
64013af2:	inc    eax
64013af3:	pop    ebx
64013af4:	leave  
64013af5:	ret    
64013af6:	push   ebp
64013af7:	mov    ebp,esp
64013af9:	push   ecx
64013afa:	push   ebx
64013afb:	push   esi
64013afc:	push   edi
64013afd:	mov    edi,DWORD PTR [ebp+0x8]
64013b00:	mov    eax,DWORD PTR [edi+0x10]
64013b03:	mov    esi,DWORD PTR [edi+0xc]
64013b06:	mov    DWORD PTR [ebp-0x4],eax
64013b09:	mov    ebx,esi
64013b0b:	jmp    0x64013b3a
64013b0d:	cmp    esi,0xffffffff
64013b10:	jne    0x64013b17
64013b12:	call   0x64016d93
64013b17:	mov    ecx,DWORD PTR [ebp-0x4]
64013b1a:	dec    esi
64013b1b:	mov    eax,esi
64013b1d:	imul   eax,eax,0x14
64013b20:	add    eax,ecx
64013b22:	mov    ecx,DWORD PTR [ebp+0x10]
64013b25:	cmp    DWORD PTR [eax+0x4],ecx
64013b28:	jge    0x64013b2f
64013b2a:	cmp    ecx,DWORD PTR [eax+0x8]
64013b2d:	jle    0x64013b34
64013b2f:	cmp    esi,0xffffffff
64013b32:	jne    0x64013b3d
64013b34:	dec    DWORD PTR [ebp+0xc]
64013b37:	mov    ebx,DWORD PTR [ebp+0x8]
64013b3a:	mov    DWORD PTR [ebp+0x8],esi
64013b3d:	cmp    DWORD PTR [ebp+0xc],0x0
64013b41:	jge    0x64013b0d
64013b43:	mov    eax,DWORD PTR [ebp+0x14]
64013b46:	inc    esi
64013b47:	mov    DWORD PTR [eax],esi
64013b49:	mov    eax,DWORD PTR [ebp+0x18]
64013b4c:	mov    DWORD PTR [eax],ebx
64013b4e:	cmp    ebx,DWORD PTR [edi+0xc]
64013b51:	ja     0x64013b57
64013b53:	cmp    esi,ebx
64013b55:	jbe    0x64013b5c
64013b57:	call   0x64016d93
64013b5c:	mov    eax,esi
64013b5e:	imul   eax,eax,0x14
64013b61:	add    eax,DWORD PTR [ebp-0x4]
64013b64:	pop    edi
64013b65:	pop    esi
64013b66:	pop    ebx
64013b67:	leave  
64013b68:	ret    
64013b69:	mov    eax,DWORD PTR [esp+0x8]
64013b6d:	push   esi
64013b6e:	mov    esi,DWORD PTR [esp+0x8]
64013b72:	mov    DWORD PTR [esi],eax
64013b74:	call   0x64015d6b
64013b79:	mov    eax,DWORD PTR [eax+0x98]
64013b7f:	mov    DWORD PTR [esi+0x4],eax
64013b82:	call   0x64015d6b
64013b87:	mov    DWORD PTR [eax+0x98],esi
64013b8d:	mov    eax,esi
64013b8f:	pop    esi
64013b90:	ret    
64013b91:	call   0x64015d6b
64013b96:	mov    eax,DWORD PTR [eax+0x98]
64013b9c:	jmp    0x64013ba9
64013b9e:	mov    ecx,DWORD PTR [eax]
64013ba0:	cmp    ecx,DWORD PTR [esp+0x4]
64013ba4:	je     0x64013baf
64013ba6:	mov    eax,DWORD PTR [eax+0x4]
64013ba9:	test   eax,eax
64013bab:	jne    0x64013b9e
64013bad:	inc    eax
64013bae:	ret    
64013baf:	xor    eax,eax
64013bb1:	ret    
64013bb2:	push   esi
64013bb3:	call   0x64015d6b
64013bb8:	mov    esi,DWORD PTR [esp+0x8]
64013bbc:	cmp    esi,DWORD PTR [eax+0x98]
64013bc2:	jne    0x64013bd4
64013bc4:	call   0x64015d6b
64013bc9:	mov    ecx,DWORD PTR [esi+0x4]
64013bcc:	mov    DWORD PTR [eax+0x98],ecx
64013bd2:	pop    esi
64013bd3:	ret    
64013bd4:	call   0x64015d6b
64013bd9:	mov    eax,DWORD PTR [eax+0x98]
64013bdf:	jmp    0x64013bea
64013be1:	mov    ecx,DWORD PTR [eax+0x4]
64013be4:	cmp    esi,ecx
64013be6:	je     0x64013bf6
64013be8:	mov    eax,ecx
64013bea:	cmp    DWORD PTR [eax+0x4],0x0
64013bee:	jne    0x64013be1
64013bf0:	pop    esi
64013bf1:	jmp    0x64016d93
64013bf6:	mov    ecx,DWORD PTR [esi+0x4]
64013bf9:	mov    DWORD PTR [eax+0x4],ecx
64013bfc:	pop    esi
64013bfd:	ret    
64013bfe:	push   ebp
64013bff:	mov    ebp,esp
64013c01:	sub    esp,0x18
64013c04:	mov    eax,ds:0x6402f09c
64013c09:	and    DWORD PTR [ebp-0x18],0x0
64013c0d:	lea    ecx,[ebp-0x18]
64013c10:	xor    eax,ecx
64013c12:	mov    ecx,DWORD PTR [ebp+0x8]
64013c15:	mov    DWORD PTR [ebp-0x10],eax
64013c18:	mov    eax,DWORD PTR [ebp+0xc]
64013c1b:	mov    DWORD PTR [ebp-0xc],eax
64013c1e:	mov    eax,DWORD PTR [ebp+0x14]
64013c21:	inc    eax
64013c22:	mov    DWORD PTR [ebp-0x14],0x64013954
64013c29:	mov    DWORD PTR [ebp-0x8],ecx
64013c2c:	mov    DWORD PTR [ebp-0x4],eax
64013c2f:	mov    eax,fs:0x0
64013c35:	mov    DWORD PTR [ebp-0x18],eax
64013c38:	lea    eax,[ebp-0x18]
64013c3b:	mov    fs:0x0,eax
64013c41:	push   DWORD PTR [ebp+0x18]
64013c44:	push   ecx
64013c45:	push   DWORD PTR [ebp+0x10]
64013c48:	call   0x64016de0
64013c4d:	mov    ecx,eax
64013c4f:	mov    eax,DWORD PTR [ebp-0x18]
64013c52:	mov    fs:0x0,eax
64013c58:	mov    eax,ecx
64013c5a:	leave  
64013c5b:	ret    
64013c5c:	cmp    ecx,DWORD PTR ds:0x6402f09c
64013c62:	jne    0x64013c66
64013c64:	repz ret 
64013c66:	jmp    0x64016e2c
64013c6b:	push   ecx
64013c6c:	push   ebx
64013c6d:	push   ebp
64013c6e:	push   esi
64013c6f:	push   edi
64013c70:	push   DWORD PTR ds:0x64034630
64013c76:	call   0x64015b4f
64013c7b:	push   DWORD PTR ds:0x6403462c
64013c81:	mov    esi,eax
64013c83:	mov    DWORD PTR [esp+0x18],esi
64013c87:	call   0x64015b4f
64013c8c:	mov    edi,eax
64013c8e:	cmp    edi,esi
64013c90:	pop    ecx
64013c91:	pop    ecx
64013c92:	jb     0x64013d1c
64013c98:	mov    ebx,edi
64013c9a:	sub    ebx,esi
64013c9c:	lea    ebp,[ebx+0x4]
64013c9f:	cmp    ebp,0x4
64013ca2:	jb     0x64013d1c
64013ca4:	push   esi
64013ca5:	call   0x64017003
64013caa:	mov    esi,eax
64013cac:	cmp    esi,ebp
64013cae:	pop    ecx
64013caf:	jae    0x64013cfb
64013cb1:	mov    eax,0x800
64013cb6:	cmp    esi,eax
64013cb8:	jae    0x64013cbc
64013cba:	mov    eax,esi
64013cbc:	add    eax,esi
64013cbe:	cmp    eax,esi
64013cc0:	jb     0x64013cd2
64013cc2:	push   eax
64013cc3:	push   DWORD PTR [esp+0x14]
64013cc7:	call   0x64016fb8
64013ccc:	test   eax,eax
64013cce:	pop    ecx
64013ccf:	pop    ecx
64013cd0:	jne    0x64013ce9
64013cd2:	lea    eax,[esi+0x10]
64013cd5:	cmp    eax,esi
64013cd7:	jb     0x64013d1c
64013cd9:	push   eax
64013cda:	push   DWORD PTR [esp+0x14]
64013cde:	call   0x64016fb8
64013ce3:	test   eax,eax
64013ce5:	pop    ecx
64013ce6:	pop    ecx
64013ce7:	je     0x64013d1c
64013ce9:	sar    ebx,0x2
64013cec:	push   eax
64013ced:	lea    edi,[eax+ebx*4]
64013cf0:	call   0x64015ad8
64013cf5:	pop    ecx
64013cf6:	mov    ds:0x64034630,eax
64013cfb:	push   DWORD PTR [esp+0x18]
64013cff:	call   0x64015ad8
64013d04:	mov    DWORD PTR [edi],eax
64013d06:	add    edi,0x4
64013d09:	push   edi
64013d0a:	call   0x64015ad8
64013d0f:	pop    ecx
64013d10:	mov    ds:0x6403462c,eax
64013d15:	mov    eax,DWORD PTR [esp+0x1c]
64013d19:	pop    ecx
64013d1a:	jmp    0x64013d1e
64013d1c:	xor    eax,eax
64013d1e:	pop    edi
64013d1f:	pop    esi
64013d20:	pop    ebp
64013d21:	pop    ebx
64013d22:	pop    ecx
64013d23:	ret    
64013d24:	push   esi
64013d25:	push   0x4
64013d27:	push   0x20
64013d29:	call   0x64016f70
64013d2e:	mov    esi,eax
64013d30:	push   esi
64013d31:	call   0x64015ad8
64013d36:	add    esp,0xc
64013d39:	test   esi,esi
64013d3b:	mov    ds:0x64034630,eax
64013d40:	mov    ds:0x6403462c,eax
64013d45:	jne    0x64013d4c
64013d47:	push   0x18
64013d49:	pop    eax
64013d4a:	pop    esi
64013d4b:	ret    
64013d4c:	and    DWORD PTR [esi],0x0
64013d4f:	xor    eax,eax
64013d51:	pop    esi
64013d52:	ret    
64013d53:	push   0xc
64013d55:	push   0x6402bfd0
64013d5a:	call   0x64015220
64013d5f:	call   0x64017105
64013d64:	and    DWORD PTR [ebp-0x4],0x0
64013d68:	push   DWORD PTR [ebp+0x8]
64013d6b:	call   0x64013c6b
64013d70:	pop    ecx
64013d71:	mov    DWORD PTR [ebp-0x1c],eax
64013d74:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013d7b:	call   0x64013d89
64013d80:	mov    eax,DWORD PTR [ebp-0x1c]
64013d83:	call   0x64015265
64013d88:	ret    
64013d89:	call   0x6401710e
64013d8e:	ret    
64013d8f:	push   DWORD PTR [esp+0x4]
64013d93:	call   0x64013d53
64013d98:	neg    eax
64013d9a:	sbb    eax,eax
64013d9c:	neg    eax
64013d9e:	pop    ecx
64013d9f:	dec    eax
64013da0:	ret    
64013da1:	mov    eax,DWORD PTR [esp+0x4]
64013da5:	push   ebx
64013da6:	mov    ebx,DWORD PTR [esp+0xc]
64013daa:	cmp    WORD PTR [ebx],0x0
64013dae:	push   edi
64013daf:	mov    edi,eax
64013db1:	je     0x64013df8
64013db3:	movzx  ecx,WORD PTR [eax]
64013db6:	test   cx,cx
64013db9:	je     0x64013df6
64013dbb:	movzx  edx,cx
64013dbe:	sub    eax,ebx
64013dc0:	test   dx,dx
64013dc3:	mov    ecx,DWORD PTR [esp+0x10]
64013dc7:	je     0x64013de4
64013dc9:	movzx  edx,WORD PTR [ecx]
64013dcc:	test   dx,dx
64013dcf:	je     0x64013dfb
64013dd1:	movzx  ebx,WORD PTR [eax+ecx*1]
64013dd5:	movzx  edx,dx
64013dd8:	sub    ebx,edx
64013dda:	jne    0x64013de4
64013ddc:	inc    ecx
64013ddd:	inc    ecx
64013dde:	cmp    WORD PTR [eax+ecx*1],bx
64013de2:	jne    0x64013dc9
64013de4:	cmp    WORD PTR [ecx],0x0
64013de8:	je     0x64013dfb
64013dea:	inc    edi
64013deb:	inc    edi
64013dec:	movzx  edx,WORD PTR [edi]
64013def:	inc    eax
64013df0:	inc    eax
64013df1:	test   dx,dx
64013df4:	jne    0x64013dc0
64013df6:	xor    eax,eax
64013df8:	pop    edi
64013df9:	pop    ebx
64013dfa:	ret    
64013dfb:	mov    eax,edi
64013dfd:	jmp    0x64013df8
64013dff:	mov    eax,DWORD PTR [esp+0x4]
64013e03:	test   eax,eax
64013e05:	push   esi
64013e06:	mov    esi,ecx
64013e08:	mov    BYTE PTR [esi+0xc],0x0
64013e0c:	jne    0x64013e71
64013e0e:	call   0x64015d6b
64013e13:	mov    DWORD PTR [esi+0x8],eax
64013e16:	mov    ecx,DWORD PTR [eax+0x6c]
64013e19:	mov    DWORD PTR [esi],ecx
64013e1b:	mov    ecx,DWORD PTR [eax+0x68]
64013e1e:	mov    DWORD PTR [esi+0x4],ecx
64013e21:	mov    ecx,DWORD PTR [esi]
64013e23:	cmp    ecx,DWORD PTR ds:0x6402f870
64013e29:	je     0x64013e3d
64013e2b:	mov    ecx,DWORD PTR ds:0x6402f78c
64013e31:	test   DWORD PTR [eax+0x70],ecx
64013e34:	jne    0x64013e3d
64013e36:	call   0x64017cef
64013e3b:	mov    DWORD PTR [esi],eax
64013e3d:	mov    eax,DWORD PTR [esi+0x4]
64013e40:	cmp    eax,DWORD PTR ds:0x6402f690
64013e46:	je     0x64013e5e
64013e48:	mov    eax,DWORD PTR [esi+0x8]
64013e4b:	mov    ecx,DWORD PTR ds:0x6402f78c
64013e51:	test   DWORD PTR [eax+0x70],ecx
64013e54:	jne    0x64013e5e
64013e56:	call   0x640175b0
64013e5b:	mov    DWORD PTR [esi+0x4],eax
64013e5e:	mov    eax,DWORD PTR [esi+0x8]
64013e61:	test   BYTE PTR [eax+0x70],0x2
64013e65:	jne    0x64013e7b
64013e67:	or     DWORD PTR [eax+0x70],0x2
64013e6b:	mov    BYTE PTR [esi+0xc],0x1
64013e6f:	jmp    0x64013e7b
64013e71:	mov    ecx,DWORD PTR [eax]
64013e73:	mov    DWORD PTR [esi],ecx
64013e75:	mov    eax,DWORD PTR [eax+0x4]
64013e78:	mov    DWORD PTR [esi+0x4],eax
64013e7b:	mov    eax,esi
64013e7d:	pop    esi
64013e7e:	ret    0x4
64013e81:	push   ebp
64013e82:	mov    ebp,esp
64013e84:	sub    esp,0x20
64013e87:	push   esi
64013e88:	xor    esi,esi
64013e8a:	cmp    DWORD PTR [ebp+0xc],esi
64013e8d:	jne    0x64013eac
64013e8f:	call   0x64015a20
64013e94:	push   esi
64013e95:	push   esi
64013e96:	push   esi
64013e97:	push   esi
64013e98:	push   esi
64013e99:	mov    DWORD PTR [eax],0x16
64013e9f:	call   0x64013794
64013ea4:	add    esp,0x14
64013ea7:	or     eax,0xffffffff
64013eaa:	jmp    0x64013ed3
64013eac:	push   DWORD PTR [ebp+0x14]
64013eaf:	lea    eax,[ebp-0x20]
64013eb2:	push   DWORD PTR [ebp+0x10]
64013eb5:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64013ebc:	push   DWORD PTR [ebp+0xc]
64013ebf:	mov    DWORD PTR [ebp-0x14],0x42
64013ec6:	push   eax
64013ec7:	mov    DWORD PTR [ebp-0x18],esi
64013eca:	mov    DWORD PTR [ebp-0x20],esi
64013ecd:	call   DWORD PTR [ebp+0x8]
64013ed0:	add    esp,0x10
64013ed3:	pop    esi
64013ed4:	leave  
64013ed5:	ret    
64013ed6:	push   DWORD PTR [esp+0x8]
64013eda:	push   0x0
64013edc:	push   DWORD PTR [esp+0xc]
64013ee0:	push   0x64017f0f
64013ee5:	call   0x64013e81
64013eea:	add    esp,0x10
64013eed:	ret    
64013eee:	push   ebp
64013eef:	mov    ebp,esp
64013ef1:	sub    esp,0x20
64013ef4:	push   ebx
64013ef5:	xor    ebx,ebx
64013ef7:	cmp    DWORD PTR [ebp+0x14],ebx
64013efa:	jne    0x64013f1c
64013efc:	call   0x64015a20
64013f01:	push   ebx
64013f02:	push   ebx
64013f03:	push   ebx
64013f04:	push   ebx
64013f05:	push   ebx
64013f06:	mov    DWORD PTR [eax],0x16
64013f0c:	call   0x64013794
64013f11:	add    esp,0x14
64013f14:	or     eax,0xffffffff
64013f17:	jmp    0x64013fe1
64013f1c:	push   esi
64013f1d:	mov    esi,DWORD PTR [ebp+0xc]
64013f20:	push   edi
64013f21:	mov    edi,DWORD PTR [ebp+0x10]
64013f24:	cmp    edi,ebx
64013f26:	je     0x64013f4c
64013f28:	cmp    esi,ebx
64013f2a:	jne    0x64013f4c
64013f2c:	call   0x64015a20
64013f31:	push   ebx
64013f32:	push   ebx
64013f33:	push   ebx
64013f34:	push   ebx
64013f35:	push   ebx
64013f36:	mov    DWORD PTR [eax],0x16
64013f3c:	call   0x64013794
64013f41:	add    esp,0x14
64013f44:	or     eax,0xffffffff
64013f47:	jmp    0x64013fdf
64013f4c:	cmp    edi,0x3fffffff
64013f52:	mov    DWORD PTR [ebp-0x14],0x42
64013f59:	mov    DWORD PTR [ebp-0x18],esi
64013f5c:	mov    DWORD PTR [ebp-0x20],esi
64013f5f:	jbe    0x64013f6a
64013f61:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64013f68:	jmp    0x64013f70
64013f6a:	lea    eax,[edi+edi*1]
64013f6d:	mov    DWORD PTR [ebp-0x1c],eax
64013f70:	push   DWORD PTR [ebp+0x1c]
64013f73:	lea    eax,[ebp-0x20]
64013f76:	push   DWORD PTR [ebp+0x18]
64013f79:	push   DWORD PTR [ebp+0x14]
64013f7c:	push   eax
64013f7d:	call   DWORD PTR [ebp+0x8]
64013f80:	add    esp,0x10
64013f83:	cmp    esi,ebx
64013f85:	mov    DWORD PTR [ebp+0x14],eax
64013f88:	je     0x64013fdf
64013f8a:	cmp    eax,ebx
64013f8c:	jl     0x64013fd0
64013f8e:	dec    DWORD PTR [ebp-0x1c]
64013f91:	js     0x64013f9d
64013f93:	mov    eax,DWORD PTR [ebp-0x20]
64013f96:	mov    BYTE PTR [eax],bl
64013f98:	inc    DWORD PTR [ebp-0x20]
64013f9b:	jmp    0x64013fae
64013f9d:	lea    eax,[ebp-0x20]
64013fa0:	push   eax
64013fa1:	push   ebx
64013fa2:	call   0x64017d65
64013fa7:	cmp    eax,0xffffffff
64013faa:	pop    ecx
64013fab:	pop    ecx
64013fac:	je     0x64013fd0
64013fae:	dec    DWORD PTR [ebp-0x1c]
64013fb1:	js     0x64013fba
64013fb3:	mov    eax,DWORD PTR [ebp-0x20]
64013fb6:	mov    BYTE PTR [eax],bl
64013fb8:	jmp    0x64013fcb
64013fba:	lea    eax,[ebp-0x20]
64013fbd:	push   eax
64013fbe:	push   ebx
64013fbf:	call   0x64017d65
64013fc4:	cmp    eax,0xffffffff
64013fc7:	pop    ecx
64013fc8:	pop    ecx
64013fc9:	je     0x64013fd0
64013fcb:	mov    eax,DWORD PTR [ebp+0x14]
64013fce:	jmp    0x64013fdf
64013fd0:	xor    eax,eax
64013fd2:	cmp    DWORD PTR [ebp-0x1c],ebx
64013fd5:	mov    WORD PTR [esi+edi*2-0x2],bx
64013fda:	setge  al
64013fdd:	dec    eax
64013fde:	dec    eax
64013fdf:	pop    edi
64013fe0:	pop    esi
64013fe1:	pop    ebx
64013fe2:	leave  
64013fe3:	ret    
64013fe4:	push   ebp
64013fe5:	mov    ebp,esp
64013fe7:	push   esi
64013fe8:	xor    esi,esi
64013fea:	cmp    DWORD PTR [ebp+0x10],esi
64013fed:	jne    0x6401400c
64013fef:	call   0x64015a20
64013ff4:	push   esi
64013ff5:	push   esi
64013ff6:	push   esi
64013ff7:	push   esi
64013ff8:	push   esi
64013ff9:	mov    DWORD PTR [eax],0x16
64013fff:	call   0x64013794
64014004:	add    esp,0x14
64014007:	or     eax,0xffffffff
6401400a:	jmp    0x64014068
6401400c:	push   edi
6401400d:	mov    edi,DWORD PTR [ebp+0x8]
64014010:	cmp    edi,esi
64014012:	je     0x64014019
64014014:	cmp    DWORD PTR [ebp+0xc],esi
64014017:	ja     0x64014026
64014019:	call   0x64015a20
6401401e:	mov    DWORD PTR [eax],0x16
64014024:	jmp    0x64014057
64014026:	push   DWORD PTR [ebp+0x18]
64014029:	push   DWORD PTR [ebp+0x14]
6401402c:	push   DWORD PTR [ebp+0x10]
6401402f:	push   DWORD PTR [ebp+0xc]
64014032:	push   edi
64014033:	push   0x6401886e
64014038:	call   0x64013eee
6401403d:	add    esp,0x18
64014040:	cmp    eax,esi
64014042:	jge    0x64014047
64014044:	mov    WORD PTR [edi],si
64014047:	cmp    eax,0xfffffffe
6401404a:	jne    0x64014067
6401404c:	call   0x64015a20
64014051:	mov    DWORD PTR [eax],0x22
64014057:	push   esi
64014058:	push   esi
64014059:	push   esi
6401405a:	push   esi
6401405b:	push   esi
6401405c:	call   0x64013794
64014061:	add    esp,0x14
64014064:	or     eax,0xffffffff
64014067:	pop    edi
64014068:	pop    esi
64014069:	pop    ebp
6401406a:	ret    
6401406b:	push   DWORD PTR [esp+0x10]
6401406f:	push   0x0
64014071:	push   DWORD PTR [esp+0x14]
64014075:	push   DWORD PTR [esp+0x14]
64014079:	push   DWORD PTR [esp+0x14]
6401407d:	call   0x64013fe4
64014082:	add    esp,0x14
64014085:	ret    
64014086:	mov    edx,DWORD PTR [esp+0x4]
6401408a:	push   ebx
6401408b:	push   esi
6401408c:	xor    esi,esi
6401408e:	cmp    edx,esi
64014090:	push   edi
64014091:	je     0x6401409b
64014093:	mov    ebx,DWORD PTR [esp+0x14]
64014097:	cmp    ebx,esi
64014099:	ja     0x640140b6
6401409b:	call   0x64015a20
640140a0:	push   0x16
640140a2:	pop    edi
640140a3:	mov    DWORD PTR [eax],edi
640140a5:	push   esi
640140a6:	push   esi
640140a7:	push   esi
640140a8:	push   esi
640140a9:	push   esi
640140aa:	call   0x64013794
640140af:	add    esp,0x14
640140b2:	mov    eax,edi
640140b4:	jmp    0x640140fc
640140b6:	mov    edi,DWORD PTR [esp+0x18]
640140ba:	cmp    edi,esi
640140bc:	jne    0x640140c3
640140be:	mov    WORD PTR [edx],si
640140c1:	jmp    0x6401409b
640140c3:	mov    ecx,edx
640140c5:	cmp    WORD PTR [ecx],si
640140c8:	je     0x640140cf
640140ca:	inc    ecx
640140cb:	inc    ecx
640140cc:	dec    ebx
640140cd:	jne    0x640140c5
640140cf:	cmp    ebx,esi
640140d1:	je     0x640140be
640140d3:	movzx  eax,WORD PTR [edi]
640140d6:	mov    WORD PTR [ecx],ax
640140d9:	inc    ecx
640140da:	inc    ecx
640140db:	inc    edi
640140dc:	inc    edi
640140dd:	cmp    ax,si
640140e0:	je     0x640140e5
640140e2:	dec    ebx
640140e3:	jne    0x640140d3
640140e5:	cmp    ebx,esi
640140e7:	jne    0x640140fa
640140e9:	mov    WORD PTR [edx],si
640140ec:	call   0x64015a20
640140f1:	push   0x22
640140f3:	pop    ecx
640140f4:	mov    DWORD PTR [eax],ecx
640140f6:	mov    edi,ecx
640140f8:	jmp    0x640140a5
640140fa:	xor    eax,eax
640140fc:	pop    edi
640140fd:	pop    esi
640140fe:	pop    ebx
640140ff:	ret    
64014100:	mov    ecx,DWORD PTR [esp+0x4]
64014104:	push   ebx
64014105:	push   esi
64014106:	push   edi
64014107:	xor    edi,edi
64014109:	cmp    ecx,edi
6401410b:	je     0x64014115
6401410d:	mov    ebx,DWORD PTR [esp+0x14]
64014111:	cmp    ebx,edi
64014113:	ja     0x64014130
64014115:	call   0x64015a20
6401411a:	push   0x16
6401411c:	pop    esi
6401411d:	mov    DWORD PTR [eax],esi
6401411f:	push   edi
64014120:	push   edi
64014121:	push   edi
64014122:	push   edi
64014123:	push   edi
64014124:	call   0x64013794
64014129:	add    esp,0x14
6401412c:	mov    eax,esi
6401412e:	jmp    0x64014168
64014130:	mov    esi,DWORD PTR [esp+0x18]
64014134:	cmp    esi,edi
64014136:	jne    0x6401413d
64014138:	mov    WORD PTR [ecx],di
6401413b:	jmp    0x64014115
6401413d:	mov    edx,ecx
6401413f:	movzx  eax,WORD PTR [esi]
64014142:	mov    WORD PTR [edx],ax
64014145:	inc    edx
64014146:	inc    edx
64014147:	inc    esi
64014148:	inc    esi
64014149:	cmp    ax,di
6401414c:	je     0x64014151
6401414e:	dec    ebx
6401414f:	jne    0x6401413f
64014151:	cmp    ebx,edi
64014153:	jne    0x64014166
64014155:	mov    WORD PTR [ecx],di
64014158:	call   0x64015a20
6401415d:	push   0x22
6401415f:	pop    ecx
64014160:	mov    DWORD PTR [eax],ecx
64014162:	mov    esi,ecx
64014164:	jmp    0x6401411f
64014166:	xor    eax,eax
64014168:	pop    edi
64014169:	pop    esi
6401416a:	pop    ebx
6401416b:	ret    
6401416c:	mov    eax,DWORD PTR [esp+0x4]
64014170:	test   eax,eax
64014172:	je     0x64014186
64014174:	sub    eax,0x8
64014177:	cmp    DWORD PTR [eax],0xdddd
6401417d:	jne    0x64014186
6401417f:	push   eax
64014180:	call   0x64014af6
64014185:	pop    ecx
64014186:	ret    
64014187:	push   ebp
64014188:	mov    ebp,esp
6401418a:	sub    esp,0xc
6401418d:	mov    eax,ds:0x6402f09c
64014192:	xor    eax,ebp
64014194:	mov    DWORD PTR [ebp-0x4],eax
64014197:	push   esi
64014198:	xor    esi,esi
6401419a:	cmp    ebx,esi
6401419c:	push   edi
6401419d:	jne    0x640141bd
6401419f:	call   0x64015a20
640141a4:	push   0x16
640141a6:	pop    edi
640141a7:	push   esi
640141a8:	push   esi
640141a9:	push   esi
640141aa:	push   esi
640141ab:	push   esi
640141ac:	mov    DWORD PTR [eax],edi
640141ae:	call   0x64013794
640141b3:	add    esp,0x14
640141b6:	mov    eax,edi
640141b8:	jmp    0x640142fd
640141bd:	push   DWORD PTR [ebp+0x8]
640141c0:	push   ebx
640141c1:	call   0x6401942b
640141c6:	cmp    eax,DWORD PTR [ebp+0x8]
640141c9:	pop    ecx
640141ca:	pop    ecx
640141cb:	jb     0x640141d2
640141cd:	mov    WORD PTR [ebx],si
640141d0:	jmp    0x6401419f
640141d2:	mov    edx,DWORD PTR [ebp+0xc]
640141d5:	mov    eax,DWORD PTR [edx]
640141d7:	mov    ecx,DWORD PTR [eax+0x14]
640141da:	cmp    ecx,esi
640141dc:	jne    0x64014208
640141de:	cmp    WORD PTR [ebx],si
640141e1:	mov    eax,ebx
640141e3:	je     0x64014201
640141e5:	movzx  ecx,WORD PTR [eax]
640141e8:	cmp    cx,0x41
640141ec:	jb     0x640141fa
640141ee:	cmp    cx,0x5a
640141f2:	ja     0x640141fa
640141f4:	add    ecx,0x20
640141f7:	mov    WORD PTR [eax],cx
640141fa:	inc    eax
640141fb:	inc    eax
640141fc:	cmp    WORD PTR [eax],si
640141ff:	jne    0x640141e5
64014201:	xor    eax,eax
64014203:	jmp    0x640142fd
64014208:	push   DWORD PTR [eax+0x4]
6401420b:	mov    edi,0x100
64014210:	push   esi
64014211:	push   esi
64014212:	push   0xffffffff
64014214:	push   ebx
64014215:	push   edi
64014216:	push   ecx
64014217:	push   edx
64014218:	call   0x640193eb
6401421d:	mov    ecx,eax
6401421f:	add    esp,0x20
64014222:	cmp    ecx,esi
64014224:	mov    DWORD PTR [ebp-0xc],ecx
64014227:	jne    0x64014240
64014229:	call   0x64015a20
6401422e:	mov    DWORD PTR [eax],0x2a
64014234:	call   0x64015a20
64014239:	mov    eax,DWORD PTR [eax]
6401423b:	jmp    0x640142fd
64014240:	cmp    DWORD PTR [ebp+0x8],ecx
64014243:	jae    0x64014254
64014245:	mov    WORD PTR [ebx],si
64014248:	call   0x64015a20
6401424d:	push   0x22
6401424f:	jmp    0x640141a6
64014254:	cmp    ecx,esi
64014256:	jle    0x6401429e
64014258:	push   0xffffffe0
6401425a:	xor    edx,edx
6401425c:	pop    eax
6401425d:	div    ecx
6401425f:	cmp    eax,0x2
64014262:	jb     0x6401429e
64014264:	lea    eax,[ecx+ecx*1+0x8]
64014268:	cmp    eax,0x400
6401426d:	ja     0x64014282
6401426f:	call   0x640143e0
64014274:	mov    eax,esp
64014276:	cmp    eax,esi
64014278:	je     0x64014296
6401427a:	mov    DWORD PTR [eax],0xcccc
64014280:	jmp    0x64014293
64014282:	push   eax
64014283:	call   0x64014bd3
64014288:	cmp    eax,esi
6401428a:	pop    ecx
6401428b:	je     0x64014296
6401428d:	mov    DWORD PTR [eax],0xdddd
64014293:	add    eax,0x8
64014296:	mov    ecx,DWORD PTR [ebp-0xc]
64014299:	mov    DWORD PTR [ebp-0x8],eax
6401429c:	jmp    0x640142a1
6401429e:	mov    DWORD PTR [ebp-0x8],esi
640142a1:	cmp    DWORD PTR [ebp-0x8],esi
640142a4:	jne    0x640142b3
640142a6:	call   0x64015a20
640142ab:	mov    DWORD PTR [eax],0xc
640142b1:	jmp    0x64014234
640142b3:	mov    edx,DWORD PTR [ebp+0xc]
640142b6:	mov    eax,DWORD PTR [edx]
640142b8:	push   DWORD PTR [eax+0x4]
640142bb:	push   ecx
640142bc:	push   DWORD PTR [ebp-0x8]
640142bf:	push   0xffffffff
640142c1:	push   ebx
640142c2:	push   edi
640142c3:	push   DWORD PTR [eax+0x14]
640142c6:	push   edx
640142c7:	call   0x640193eb
640142cc:	add    esp,0x20
640142cf:	test   eax,eax
640142d1:	je     0x640142e6
640142d3:	push   DWORD PTR [ebp-0x8]
640142d6:	push   DWORD PTR [ebp+0x8]
640142d9:	push   ebx
640142da:	call   0x64014100
640142df:	add    esp,0xc
640142e2:	mov    esi,eax
640142e4:	jmp    0x640142f2
640142e6:	call   0x64015a20
640142eb:	push   0x2a
640142ed:	pop    ecx
640142ee:	mov    DWORD PTR [eax],ecx
640142f0:	mov    esi,ecx
640142f2:	push   DWORD PTR [ebp-0x8]
640142f5:	call   0x6401416c
640142fa:	pop    ecx
640142fb:	mov    eax,esi
640142fd:	lea    esp,[ebp-0x14]
64014300:	pop    edi
64014301:	pop    esi
64014302:	mov    ecx,DWORD PTR [ebp-0x4]
64014305:	xor    ecx,ebp
64014307:	call   0x64013c5c
6401430c:	leave  
6401430d:	ret    
6401430e:	push   ebp
6401430f:	mov    ebp,esp
64014311:	sub    esp,0x10
64014314:	push   ebx
64014315:	push   DWORD PTR [ebp+0x10]
64014318:	lea    ecx,[ebp-0x10]
6401431b:	call   0x64013dff
64014320:	mov    ebx,DWORD PTR [ebp+0x8]
64014323:	lea    eax,[ebp-0x10]
64014326:	push   eax
64014327:	push   DWORD PTR [ebp+0xc]
6401432a:	call   0x64014187
6401432f:	cmp    BYTE PTR [ebp-0x4],0x0
64014333:	pop    ecx
64014334:	pop    ecx
64014335:	pop    ebx
64014336:	je     0x6401433f
64014338:	mov    ecx,DWORD PTR [ebp-0x8]
6401433b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401433f:	leave  
64014340:	ret    
64014341:	push   0x0
64014343:	push   DWORD PTR [esp+0xc]
64014347:	push   DWORD PTR [esp+0xc]
6401434b:	call   0x6401430e
64014350:	add    esp,0xc
64014353:	ret    
64014354:	jmp    0x64013402
64014359:	int3   
6401435a:	int3   
6401435b:	int3   
6401435c:	int3   
6401435d:	int3   
6401435e:	int3   
6401435f:	int3   
64014360:	mov    edx,DWORD PTR [esp+0xc]
64014364:	mov    ecx,DWORD PTR [esp+0x4]
64014368:	test   edx,edx
6401436a:	je     0x640143d5
6401436c:	xor    eax,eax
6401436e:	mov    al,BYTE PTR [esp+0x8]
64014372:	test   al,al
64014374:	jne    0x6401438c
64014376:	cmp    edx,0x100
6401437c:	jb     0x6401438c
6401437e:	cmp    DWORD PTR ds:0x64034624,0x0
64014385:	je     0x6401438c
64014387:	jmp    0x6401949e
6401438c:	push   edi
6401438d:	mov    edi,ecx
6401438f:	cmp    edx,0x4
64014392:	jb     0x640143c5
64014394:	neg    ecx
64014396:	and    ecx,0x3
64014399:	je     0x640143a7
6401439b:	sub    edx,ecx
6401439d:	mov    BYTE PTR [edi],al
6401439f:	add    edi,0x1
640143a2:	sub    ecx,0x1
640143a5:	jne    0x6401439d
640143a7:	mov    ecx,eax
640143a9:	shl    eax,0x8
640143ac:	add    eax,ecx
640143ae:	mov    ecx,eax
640143b0:	shl    eax,0x10
640143b3:	add    eax,ecx
640143b5:	mov    ecx,edx
640143b7:	and    edx,0x3
640143ba:	shr    ecx,0x2
640143bd:	je     0x640143c5
640143bf:	rep stos DWORD PTR es:[edi],eax
640143c1:	test   edx,edx
640143c3:	je     0x640143cf
640143c5:	mov    BYTE PTR [edi],al
640143c7:	add    edi,0x1
640143ca:	sub    edx,0x1
640143cd:	jne    0x640143c5
640143cf:	mov    eax,DWORD PTR [esp+0x8]
640143d3:	pop    edi
640143d4:	ret    
640143d5:	mov    eax,DWORD PTR [esp+0x4]
640143d9:	ret    
640143da:	int3   
640143db:	int3   
640143dc:	int3   
640143dd:	int3   
640143de:	int3   
640143df:	int3   
640143e0:	push   ecx
640143e1:	lea    ecx,[esp+0x8]
640143e5:	sub    ecx,eax
640143e7:	and    ecx,0xf
640143ea:	add    eax,ecx
640143ec:	sbb    ecx,ecx
640143ee:	or     eax,ecx
640143f0:	pop    ecx
640143f1:	jmp    0x64019550
640143f6:	push   ecx
640143f7:	lea    ecx,[esp+0x8]
640143fb:	sub    ecx,eax
640143fd:	and    ecx,0x7
64014400:	add    eax,ecx
64014402:	sbb    ecx,ecx
64014404:	or     eax,ecx
64014406:	pop    ecx
64014407:	jmp    0x64019550
6401440c:	call   0x64015d6b
64014411:	mov    ecx,DWORD PTR [esp+0x4]
64014415:	mov    DWORD PTR [eax+0x14],ecx
64014418:	ret    
64014419:	call   0x64015d6b
6401441e:	mov    ecx,DWORD PTR [eax+0x14]
64014421:	imul   ecx,ecx,0x343fd
64014427:	add    ecx,0x269ec3
6401442d:	mov    DWORD PTR [eax+0x14],ecx
64014430:	mov    eax,ecx
64014432:	shr    eax,0x10
64014435:	and    eax,0x7fff
6401443a:	ret    
6401443b:	push   ebp
6401443c:	mov    ebp,esp
6401443e:	push   ecx
6401443f:	mov    eax,DWORD PTR [ebp+0xc]
64014442:	cmp    eax,0x1
64014445:	push   ebx
64014446:	push   esi
64014447:	push   edi
64014448:	jne    0x64014565
6401444e:	mov    ebx,DWORD PTR ds:0x64026108
64014454:	mov    edi,0x94
64014459:	push   edi
6401445a:	push   0x0
6401445c:	call   ebx
6401445e:	push   eax
6401445f:	call   DWORD PTR ds:0x640260f8
64014465:	mov    esi,eax
64014467:	test   esi,esi
64014469:	jne    0x64014472
6401446b:	xor    eax,eax
6401446d:	jmp    0x6401460d
64014472:	push   esi
64014473:	mov    DWORD PTR [esi],edi
64014475:	call   DWORD PTR ds:0x640260ec
6401447b:	test   eax,eax
6401447d:	push   esi
6401447e:	push   0x0
64014480:	jne    0x6401448d
64014482:	call   ebx
64014484:	push   eax
64014485:	call   DWORD PTR ds:0x640260fc
6401448b:	jmp    0x6401446b
6401448d:	mov    eax,DWORD PTR [esi+0x10]
64014490:	mov    edi,DWORD PTR [esi+0xc]
64014493:	mov    DWORD PTR [ebp+0xc],eax
64014496:	mov    eax,DWORD PTR [esi+0x4]
64014499:	mov    DWORD PTR [ebp+0x10],eax
6401449c:	mov    eax,DWORD PTR [esi+0x8]
6401449f:	mov    DWORD PTR [ebp-0x4],eax
640144a2:	and    edi,0x7fff
640144a8:	call   ebx
640144aa:	push   eax
640144ab:	call   DWORD PTR ds:0x640260fc
640144b1:	mov    eax,DWORD PTR [ebp+0xc]
640144b4:	cmp    eax,0x2
640144b7:	je     0x640144bf
640144b9:	or     edi,0x8000
640144bf:	mov    ecx,DWORD PTR [ebp-0x4]
640144c2:	mov    ds:0x640308d4,eax
640144c7:	mov    eax,DWORD PTR [ebp+0x10]
640144ca:	mov    edx,eax
640144cc:	shl    edx,0x8
640144cf:	add    edx,ecx
640144d1:	push   0x1
640144d3:	mov    DWORD PTR ds:0x640308dc,edx
640144d9:	mov    ds:0x640308e0,eax
640144de:	mov    DWORD PTR ds:0x640308e4,ecx
640144e4:	mov    DWORD PTR ds:0x640308d8,edi
640144ea:	call   0x64019d1f
640144ef:	test   eax,eax
640144f1:	pop    ecx
640144f2:	je     0x6401446b
640144f8:	call   0x64015f0d
640144fd:	test   eax,eax
640144ff:	jne    0x6401450b
64014501:	call   0x64019d79
64014506:	jmp    0x6401446b
6401450b:	call   0x64019c7c
64014510:	call   DWORD PTR ds:0x64026124
64014516:	mov    ds:0x64034640,eax
6401451b:	call   0x64019b47
64014520:	mov    ds:0x64030574,eax
64014525:	call   0x6401957b
6401452a:	test   eax,eax
6401452c:	jge    0x64014535
6401452e:	call   0x64015bf8
64014533:	jmp    0x64014501
64014535:	call   0x64019a8e
6401453a:	test   eax,eax
6401453c:	jl     0x6401455e
6401453e:	call   0x6401981b
64014543:	test   eax,eax
64014545:	jl     0x6401455e
64014547:	push   0x0
64014549:	call   0x640171c2
6401454e:	test   eax,eax
64014550:	pop    ecx
64014551:	jne    0x6401455e
64014553:	inc    DWORD PTR ds:0x64030570
64014559:	jmp    0x6401460a
6401455e:	call   0x640197cf
64014563:	jmp    0x6401452e
64014565:	xor    edi,edi
64014567:	cmp    eax,edi
64014569:	jne    0x640145a0
6401456b:	cmp    DWORD PTR ds:0x64030570,edi
64014571:	jle    0x6401446b
64014577:	dec    DWORD PTR ds:0x64030570
6401457d:	cmp    DWORD PTR ds:0x64030910,edi
64014583:	jne    0x6401458a
64014585:	call   0x64017347
6401458a:	cmp    DWORD PTR [ebp+0x10],edi
6401458d:	jne    0x6401460a
6401458f:	call   0x640197cf
64014594:	call   0x64015bf8
64014599:	call   0x64019d79
6401459e:	jmp    0x6401460a
640145a0:	cmp    eax,0x2
640145a3:	jne    0x640145fe
640145a5:	call   0x64015bc6
640145aa:	push   0x214
640145af:	push   0x1
640145b1:	call   0x64016f70
640145b6:	mov    esi,eax
640145b8:	cmp    esi,edi
640145ba:	pop    ecx
640145bb:	pop    ecx
640145bc:	je     0x6401446b
640145c2:	push   esi
640145c3:	push   DWORD PTR ds:0x6402f230
640145c9:	push   DWORD PTR ds:0x64030594
640145cf:	call   0x64015b4f
640145d4:	pop    ecx
640145d5:	call   eax
640145d7:	test   eax,eax
640145d9:	je     0x640145f2
640145db:	push   edi
640145dc:	push   esi
640145dd:	call   0x64015c35
640145e2:	pop    ecx
640145e3:	pop    ecx
640145e4:	call   DWORD PTR ds:0x64026120
640145ea:	or     DWORD PTR [esi+0x4],0xffffffff
640145ee:	mov    DWORD PTR [esi],eax
640145f0:	jmp    0x6401460a
640145f2:	push   esi
640145f3:	call   0x64014af6
640145f8:	pop    ecx
640145f9:	jmp    0x6401446b
640145fe:	cmp    eax,0x3
64014601:	jne    0x6401460a
64014603:	push   edi
64014604:	call   0x64015ea4
64014609:	pop    ecx
6401460a:	xor    eax,eax
6401460c:	inc    eax
6401460d:	pop    edi
6401460e:	pop    esi
6401460f:	pop    ebx
64014610:	leave  
64014611:	ret    0xc
64014614:	push   0xc
64014616:	push   0x6402bff0
6401461b:	call   0x64015220
64014620:	mov    edi,ecx
64014622:	mov    esi,edx
64014624:	mov    ebx,DWORD PTR [ebp+0x8]
64014627:	xor    eax,eax
64014629:	inc    eax
6401462a:	mov    DWORD PTR [ebp-0x1c],eax
6401462d:	test   esi,esi
6401462f:	jne    0x6401463d
64014631:	cmp    DWORD PTR ds:0x64030570,edx
64014637:	je     0x64014702
6401463d:	and    DWORD PTR [ebp-0x4],0x0
64014641:	cmp    esi,eax
64014643:	je     0x6401464a
64014645:	cmp    esi,0x2
64014648:	jne    0x64014678
6401464a:	mov    eax,ds:0x64026ce0
6401464f:	test   eax,eax
64014651:	je     0x6401465b
64014653:	push   edi
64014654:	push   esi
64014655:	push   ebx
64014656:	call   eax
64014658:	mov    DWORD PTR [ebp-0x1c],eax
6401465b:	cmp    DWORD PTR [ebp-0x1c],0x0
6401465f:	je     0x640146fb
64014665:	push   edi
64014666:	push   esi
64014667:	push   ebx
64014668:	call   0x6401443b
6401466d:	mov    DWORD PTR [ebp-0x1c],eax
64014670:	test   eax,eax
64014672:	je     0x640146fb
64014678:	push   edi
64014679:	push   esi
6401467a:	push   ebx
6401467b:	call   0x64010990
64014680:	mov    DWORD PTR [ebp-0x1c],eax
64014683:	cmp    esi,0x1
64014686:	jne    0x640146ac
64014688:	test   eax,eax
6401468a:	jne    0x640146ac
6401468c:	push   edi
6401468d:	push   eax
6401468e:	push   ebx
6401468f:	call   0x64010990
64014694:	push   edi
64014695:	push   0x0
64014697:	push   ebx
64014698:	call   0x6401443b
6401469d:	mov    eax,ds:0x64026ce0
640146a2:	test   eax,eax
640146a4:	je     0x640146ac
640146a6:	push   edi
640146a7:	push   0x0
640146a9:	push   ebx
640146aa:	call   eax
640146ac:	test   esi,esi
640146ae:	je     0x640146b5
640146b0:	cmp    esi,0x3
640146b3:	jne    0x640146db
640146b5:	push   edi
640146b6:	push   esi
640146b7:	push   ebx
640146b8:	call   0x6401443b
640146bd:	test   eax,eax
640146bf:	jne    0x640146c4
640146c1:	and    DWORD PTR [ebp-0x1c],eax
640146c4:	cmp    DWORD PTR [ebp-0x1c],0x0
640146c8:	je     0x640146db
640146ca:	mov    eax,ds:0x64026ce0
640146cf:	test   eax,eax
640146d1:	je     0x640146db
640146d3:	push   edi
640146d4:	push   esi
640146d5:	push   ebx
640146d6:	call   eax
640146d8:	mov    DWORD PTR [ebp-0x1c],eax
640146db:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640146e2:	mov    eax,DWORD PTR [ebp-0x1c]
640146e5:	jmp    0x64014704
640146e7:	mov    eax,DWORD PTR [ebp-0x14]
640146ea:	mov    ecx,DWORD PTR [eax]
640146ec:	mov    ecx,DWORD PTR [ecx]
640146ee:	push   eax
640146ef:	push   ecx
640146f0:	call   0x64019f4b
640146f5:	pop    ecx
640146f6:	pop    ecx
640146f7:	ret    
640146f8:	mov    esp,DWORD PTR [ebp-0x18]
640146fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014702:	xor    eax,eax
64014704:	call   0x64015265
64014709:	ret    
6401470a:	cmp    DWORD PTR [esp+0x8],0x1
6401470f:	jne    0x64014716
64014711:	call   0x64019f66
64014716:	push   DWORD PTR [esp+0x4]
6401471a:	mov    ecx,DWORD PTR [esp+0x10]
6401471e:	mov    edx,DWORD PTR [esp+0xc]
64014722:	call   0x64014614
64014727:	pop    ecx
64014728:	ret    0xc
6401472b:	push   ebp
6401472c:	mov    ebp,esp
6401472e:	sub    esp,0x20
64014731:	push   ebx
64014732:	xor    ebx,ebx
64014734:	cmp    DWORD PTR [ebp+0xc],ebx
64014737:	jne    0x64014756
64014739:	call   0x64015a20
6401473e:	push   ebx
6401473f:	push   ebx
64014740:	push   ebx
64014741:	push   ebx
64014742:	push   ebx
64014743:	mov    DWORD PTR [eax],0x16
64014749:	call   0x64013794
6401474e:	add    esp,0x14
64014751:	or     eax,0xffffffff
64014754:	jmp    0x640147a3
64014756:	mov    eax,DWORD PTR [ebp+0x8]
64014759:	cmp    eax,ebx
6401475b:	je     0x64014739
6401475d:	push   esi
6401475e:	mov    DWORD PTR [ebp-0x18],eax
64014761:	mov    DWORD PTR [ebp-0x20],eax
64014764:	lea    eax,[ebp+0x10]
64014767:	push   eax
64014768:	push   ebx
64014769:	push   DWORD PTR [ebp+0xc]
6401476c:	lea    eax,[ebp-0x20]
6401476f:	push   eax
64014770:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014777:	mov    DWORD PTR [ebp-0x14],0x42
6401477e:	call   0x6401a044
64014783:	add    esp,0x10
64014786:	dec    DWORD PTR [ebp-0x1c]
64014789:	mov    esi,eax
6401478b:	js     0x64014794
6401478d:	mov    eax,DWORD PTR [ebp-0x20]
64014790:	mov    BYTE PTR [eax],bl
64014792:	jmp    0x640147a0
64014794:	lea    eax,[ebp-0x20]
64014797:	push   eax
64014798:	push   ebx
64014799:	call   0x64017d65
6401479e:	pop    ecx
6401479f:	pop    ecx
640147a0:	mov    eax,esi
640147a2:	pop    esi
640147a3:	pop    ebx
640147a4:	leave  
640147a5:	ret    
640147a6:	lea    eax,[esp+0x10]
640147aa:	push   eax
640147ab:	push   0x0
640147ad:	push   DWORD PTR [esp+0x14]
640147b1:	push   DWORD PTR [esp+0x14]
640147b5:	push   DWORD PTR [esp+0x14]
640147b9:	call   0x6401aaa2
640147be:	add    esp,0x14
640147c1:	ret    
640147c2:	mov    eax,DWORD PTR [esp+0x4]
640147c6:	mov    dx,WORD PTR [esp+0x8]
640147cb:	jmp    0x640147d4
640147cd:	cmp    cx,dx
640147d0:	je     0x640147e3
640147d2:	inc    eax
640147d3:	inc    eax
640147d4:	movzx  ecx,WORD PTR [eax]
640147d7:	test   cx,cx
640147da:	jne    0x640147cd
640147dc:	cmp    WORD PTR [eax],dx
640147df:	je     0x640147e3
640147e1:	xor    eax,eax
640147e3:	ret    
640147e4:	cmp    DWORD PTR [esp+0x8],0x0
640147e9:	je     0x640147f1
640147eb:	mov    BYTE PTR [ecx],0x2d
640147ee:	inc    ecx
640147ef:	neg    eax
640147f1:	push   esi
640147f2:	mov    esi,ecx
640147f4:	xor    edx,edx
640147f6:	div    DWORD PTR [esp+0x8]
640147fa:	cmp    edx,0x9
640147fd:	jbe    0x64014804
640147ff:	add    dl,0x57
64014802:	jmp    0x64014807
64014804:	add    dl,0x30
64014807:	mov    BYTE PTR [ecx],dl
64014809:	inc    ecx
6401480a:	test   eax,eax
6401480c:	ja     0x640147f4
6401480e:	mov    BYTE PTR [ecx],0x0
64014811:	dec    ecx
64014812:	mov    dl,BYTE PTR [esi]
64014814:	mov    al,BYTE PTR [ecx]
64014816:	mov    BYTE PTR [ecx],dl
64014818:	dec    ecx
64014819:	mov    BYTE PTR [esi],al
6401481b:	inc    esi
6401481c:	cmp    esi,ecx
6401481e:	jb     0x64014812
64014820:	pop    esi
64014821:	ret    0x8
64014824:	push   ebp
64014825:	mov    ebp,esp
64014827:	xor    eax,eax
64014829:	cmp    DWORD PTR [ebp+0x10],0xa
6401482d:	jne    0x64014835
6401482f:	cmp    DWORD PTR [ebp+0x8],eax
64014832:	jge    0x64014835
64014834:	inc    eax
64014835:	mov    ecx,DWORD PTR [ebp+0xc]
64014838:	push   eax
64014839:	push   DWORD PTR [ebp+0x10]
6401483c:	mov    eax,DWORD PTR [ebp+0x8]
6401483f:	call   0x640147e4
64014844:	mov    eax,DWORD PTR [ebp+0xc]
64014847:	pop    ebp
64014848:	ret    
64014849:	push   ebp
6401484a:	mov    ebp,esp
6401484c:	sub    esp,0x10
6401484f:	push   DWORD PTR [ebp+0xc]
64014852:	lea    ecx,[ebp-0x10]
64014855:	call   0x64013dff
6401485a:	mov    eax,DWORD PTR [ebp-0x10]
6401485d:	cmp    DWORD PTR [eax+0xac],0x1
64014864:	jle    0x64014879
64014866:	lea    eax,[ebp-0x10]
64014869:	push   eax
6401486a:	push   0x4
6401486c:	push   DWORD PTR [ebp+0x8]
6401486f:	call   0x6401abc5
64014874:	add    esp,0xc
64014877:	jmp    0x64014889
64014879:	mov    eax,DWORD PTR [eax+0xc8]
6401487f:	mov    ecx,DWORD PTR [ebp+0x8]
64014882:	movzx  eax,BYTE PTR [eax+ecx*2]
64014886:	and    eax,0x4
64014889:	cmp    BYTE PTR [ebp-0x4],0x0
6401488d:	je     0x64014896
6401488f:	mov    ecx,DWORD PTR [ebp-0x8]
64014892:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014896:	leave  
64014897:	ret    
64014898:	cmp    DWORD PTR ds:0x64030934,0x0
6401489f:	jne    0x640148b3
640148a1:	mov    eax,DWORD PTR [esp+0x4]
640148a5:	mov    ecx,DWORD PTR ds:0x6402f860
640148ab:	movzx  eax,BYTE PTR [ecx+eax*2]
640148af:	and    eax,0x4
640148b2:	ret    
640148b3:	push   0x0
640148b5:	push   DWORD PTR [esp+0x8]
640148b9:	call   0x64014849
640148be:	pop    ecx
640148bf:	pop    ecx
640148c0:	ret    
640148c1:	push   ebp
640148c2:	mov    ebp,esp
640148c4:	sub    esp,0x10
640148c7:	push   DWORD PTR [ebp+0xc]
640148ca:	lea    ecx,[ebp-0x10]
640148cd:	call   0x64013dff
640148d2:	mov    eax,DWORD PTR [ebp-0x10]
640148d5:	cmp    DWORD PTR [eax+0xac],0x1
640148dc:	jle    0x640148f1
640148de:	lea    eax,[ebp-0x10]
640148e1:	push   eax
640148e2:	push   0x8
640148e4:	push   DWORD PTR [ebp+0x8]
640148e7:	call   0x6401abc5
640148ec:	add    esp,0xc
640148ef:	jmp    0x64014901
640148f1:	mov    eax,DWORD PTR [eax+0xc8]
640148f7:	mov    ecx,DWORD PTR [ebp+0x8]
640148fa:	movzx  eax,BYTE PTR [eax+ecx*2]
640148fe:	and    eax,0x8
64014901:	cmp    BYTE PTR [ebp-0x4],0x0
64014905:	je     0x6401490e
64014907:	mov    ecx,DWORD PTR [ebp-0x8]
6401490a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401490e:	leave  
6401490f:	ret    
64014910:	cmp    DWORD PTR ds:0x64030934,0x0
64014917:	jne    0x6401492b
64014919:	mov    eax,DWORD PTR [esp+0x4]
6401491d:	mov    ecx,DWORD PTR ds:0x6402f860
64014923:	movzx  eax,BYTE PTR [ecx+eax*2]
64014927:	and    eax,0x8
6401492a:	ret    
6401492b:	push   0x0
6401492d:	push   DWORD PTR [esp+0x8]
64014931:	call   0x640148c1
64014936:	pop    ecx
64014937:	pop    ecx
64014938:	ret    
64014939:	push   ebp
6401493a:	mov    ebp,esp
6401493c:	sub    esp,0x10
6401493f:	push   DWORD PTR [ebp+0xc]
64014942:	lea    ecx,[ebp-0x10]
64014945:	call   0x64013dff
6401494a:	mov    eax,DWORD PTR [ebp-0x10]
6401494d:	cmp    DWORD PTR [eax+0xac],0x1
64014954:	jle    0x6401496c
64014956:	lea    eax,[ebp-0x10]
64014959:	push   eax
6401495a:	push   0x157
6401495f:	push   DWORD PTR [ebp+0x8]
64014962:	call   0x6401abc5
64014967:	add    esp,0xc
6401496a:	jmp    0x6401497e
6401496c:	mov    eax,DWORD PTR [eax+0xc8]
64014972:	mov    ecx,DWORD PTR [ebp+0x8]
64014975:	movzx  eax,WORD PTR [eax+ecx*2]
64014979:	and    eax,0x157
6401497e:	cmp    BYTE PTR [ebp-0x4],0x0
64014982:	je     0x6401498b
64014984:	mov    ecx,DWORD PTR [ebp-0x8]
64014987:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401498b:	leave  
6401498c:	ret    
6401498d:	cmp    DWORD PTR ds:0x64030934,0x0
64014994:	jne    0x640149aa
64014996:	mov    eax,DWORD PTR [esp+0x4]
6401499a:	mov    ecx,DWORD PTR ds:0x6402f860
640149a0:	movzx  eax,WORD PTR [ecx+eax*2]
640149a4:	and    eax,0x157
640149a9:	ret    
640149aa:	push   0x0
640149ac:	push   DWORD PTR [esp+0x8]
640149b0:	call   0x64014939
640149b5:	pop    ecx
640149b6:	pop    ecx
640149b7:	ret    
640149b8:	push   ebp
640149b9:	mov    ebp,esp
640149bb:	sub    esp,0x18
640149be:	push   ebx
640149bf:	push   esi
640149c0:	push   DWORD PTR [ebp+0xc]
640149c3:	lea    ecx,[ebp-0x18]
640149c6:	call   0x64013dff
640149cb:	mov    ebx,DWORD PTR [ebp+0x8]
640149ce:	mov    esi,0x100
640149d3:	cmp    ebx,esi
640149d5:	jae    0x64014a2b
640149d7:	mov    ecx,DWORD PTR [ebp-0x18]
640149da:	cmp    DWORD PTR [ecx+0xac],0x1
640149e1:	jle    0x640149f7
640149e3:	lea    eax,[ebp-0x18]
640149e6:	push   eax
640149e7:	push   0x1
640149e9:	push   ebx
640149ea:	call   0x6401abc5
640149ef:	mov    ecx,DWORD PTR [ebp-0x18]
640149f2:	add    esp,0xc
640149f5:	jmp    0x64014a04
640149f7:	mov    eax,DWORD PTR [ecx+0xc8]
640149fd:	movzx  eax,BYTE PTR [eax+ebx*2]
64014a01:	and    eax,0x1
64014a04:	test   eax,eax
64014a06:	je     0x64014a17
64014a08:	mov    eax,DWORD PTR [ecx+0xcc]
64014a0e:	movzx  eax,BYTE PTR [eax+ebx*1]
64014a12:	jmp    0x64014abe
64014a17:	cmp    BYTE PTR [ebp-0xc],0x0
64014a1b:	je     0x64014a24
64014a1d:	mov    eax,DWORD PTR [ebp-0x10]
64014a20:	and    DWORD PTR [eax+0x70],0xfffffffd
64014a24:	mov    eax,ebx
64014a26:	jmp    0x64014acb
64014a2b:	mov    eax,DWORD PTR [ebp-0x18]
64014a2e:	cmp    DWORD PTR [eax+0xac],0x1
64014a35:	jle    0x64014a68
64014a37:	mov    DWORD PTR [ebp+0x8],ebx
64014a3a:	sar    DWORD PTR [ebp+0x8],0x8
64014a3e:	lea    eax,[ebp-0x18]
64014a41:	push   eax
64014a42:	mov    eax,DWORD PTR [ebp+0x8]
64014a45:	and    eax,0xff
64014a4a:	push   eax
64014a4b:	call   0x6401b060
64014a50:	test   eax,eax
64014a52:	pop    ecx
64014a53:	pop    ecx
64014a54:	je     0x64014a68
64014a56:	mov    al,BYTE PTR [ebp+0x8]
64014a59:	push   0x2
64014a5b:	mov    BYTE PTR [ebp-0x4],al
64014a5e:	mov    BYTE PTR [ebp-0x3],bl
64014a61:	mov    BYTE PTR [ebp-0x2],0x0
64014a65:	pop    ecx
64014a66:	jmp    0x64014a7d
64014a68:	call   0x64015a20
64014a6d:	mov    DWORD PTR [eax],0x2a
64014a73:	xor    ecx,ecx
64014a75:	mov    BYTE PTR [ebp-0x4],bl
64014a78:	mov    BYTE PTR [ebp-0x3],0x0
64014a7c:	inc    ecx
64014a7d:	mov    eax,DWORD PTR [ebp-0x18]
64014a80:	push   0x1
64014a82:	push   DWORD PTR [eax+0x4]
64014a85:	lea    edx,[ebp-0x8]
64014a88:	push   0x3
64014a8a:	push   edx
64014a8b:	push   ecx
64014a8c:	lea    ecx,[ebp-0x4]
64014a8f:	push   ecx
64014a90:	push   esi
64014a91:	push   DWORD PTR [eax+0x14]
64014a94:	lea    eax,[ebp-0x18]
64014a97:	push   eax
64014a98:	call   0x6401b01d
64014a9d:	add    esp,0x24
64014aa0:	test   eax,eax
64014aa2:	je     0x64014a17
64014aa8:	cmp    eax,0x1
64014aab:	jne    0x64014ab3
64014aad:	movzx  eax,BYTE PTR [ebp-0x8]
64014ab1:	jmp    0x64014abe
64014ab3:	movzx  ecx,BYTE PTR [ebp-0x7]
64014ab7:	xor    eax,eax
64014ab9:	mov    ah,BYTE PTR [ebp-0x8]
64014abc:	or     eax,ecx
64014abe:	cmp    BYTE PTR [ebp-0xc],0x0
64014ac2:	je     0x64014acb
64014ac4:	mov    ecx,DWORD PTR [ebp-0x10]
64014ac7:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014acb:	pop    esi
64014acc:	pop    ebx
64014acd:	leave  
64014ace:	ret    
64014acf:	cmp    DWORD PTR ds:0x64030934,0x0
64014ad6:	jne    0x64014ae8
64014ad8:	mov    eax,DWORD PTR [esp+0x4]
64014adc:	lea    ecx,[eax-0x41]
64014adf:	cmp    ecx,0x19
64014ae2:	ja     0x64014af5
64014ae4:	add    eax,0x20
64014ae7:	ret    
64014ae8:	push   0x0
64014aea:	push   DWORD PTR [esp+0x8]
64014aee:	call   0x640149b8
64014af3:	pop    ecx
64014af4:	pop    ecx
64014af5:	ret    
64014af6:	push   0xc
64014af8:	push   0x6402c010
64014afd:	call   0x64015220
64014b02:	mov    esi,DWORD PTR [ebp+0x8]
64014b05:	test   esi,esi
64014b07:	je     0x64014b7e
64014b09:	cmp    DWORD PTR ds:0x640344fc,0x3
64014b10:	jne    0x64014b55
64014b12:	push   0x4
64014b14:	call   0x6401b21a
64014b19:	pop    ecx
64014b1a:	and    DWORD PTR [ebp-0x4],0x0
64014b1e:	push   esi
64014b1f:	call   0x6401b293
64014b24:	pop    ecx
64014b25:	mov    DWORD PTR [ebp-0x1c],eax
64014b28:	test   eax,eax
64014b2a:	je     0x64014b35
64014b2c:	push   esi
64014b2d:	push   eax
64014b2e:	call   0x6401b2be
64014b33:	pop    ecx
64014b34:	pop    ecx
64014b35:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014b3c:	call   0x64014b4c
64014b41:	cmp    DWORD PTR [ebp-0x1c],0x0
64014b45:	jne    0x64014b7e
64014b47:	push   DWORD PTR [ebp+0x8]
64014b4a:	jmp    0x64014b56
64014b4c:	push   0x4
64014b4e:	call   0x6401b142
64014b53:	pop    ecx
64014b54:	ret    
64014b55:	push   esi
64014b56:	push   0x0
64014b58:	push   DWORD PTR ds:0x64030a6c
64014b5e:	call   DWORD PTR ds:0x640260fc
64014b64:	test   eax,eax
64014b66:	jne    0x64014b7e
64014b68:	call   0x64015a20
64014b6d:	mov    esi,eax
64014b6f:	call   DWORD PTR ds:0x64026044
64014b75:	push   eax
64014b76:	call   0x640159e5
64014b7b:	mov    DWORD PTR [esi],eax
64014b7d:	pop    ecx
64014b7e:	call   0x64015265
64014b83:	ret    
64014b84:	push   0xc
64014b86:	push   0x6402c030
64014b8b:	call   0x64015220
64014b90:	and    DWORD PTR [ebp-0x1c],0x0
64014b94:	mov    esi,DWORD PTR [ebp+0x8]
64014b97:	cmp    esi,DWORD PTR ds:0x640344ec
64014b9d:	ja     0x64014bc1
64014b9f:	push   0x4
64014ba1:	call   0x6401b21a
64014ba6:	pop    ecx
64014ba7:	and    DWORD PTR [ebp-0x4],0x0
64014bab:	push   esi
64014bac:	call   0x6401ba67
64014bb1:	pop    ecx
64014bb2:	mov    DWORD PTR [ebp-0x1c],eax
64014bb5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014bbc:	call   0x64014bca
64014bc1:	mov    eax,DWORD PTR [ebp-0x1c]
64014bc4:	call   0x64015265
64014bc9:	ret    
64014bca:	push   0x4
64014bcc:	call   0x6401b142
64014bd1:	pop    ecx
64014bd2:	ret    
64014bd3:	push   ebp
64014bd4:	mov    ebp,DWORD PTR [esp+0x8]
64014bd8:	cmp    ebp,0xffffffe0
64014bdb:	ja     0x64014c80
64014be1:	push   ebx
64014be2:	mov    ebx,DWORD PTR ds:0x640260f8
64014be8:	push   esi
64014be9:	push   edi
64014bea:	xor    esi,esi
64014bec:	cmp    DWORD PTR ds:0x64030a6c,esi
64014bf2:	mov    edi,ebp
64014bf4:	jne    0x64014c0e
64014bf6:	call   0x6401beea
64014bfb:	push   0x1e
64014bfd:	call   0x6401bd4a
64014c02:	push   0xff
64014c07:	call   0x640170f0
64014c0c:	pop    ecx
64014c0d:	pop    ecx
64014c0e:	mov    eax,ds:0x640344fc
64014c13:	cmp    eax,0x1
64014c16:	jne    0x64014c26
64014c18:	cmp    ebp,esi
64014c1a:	je     0x64014c20
64014c1c:	mov    eax,ebp
64014c1e:	jmp    0x64014c23
64014c20:	xor    eax,eax
64014c22:	inc    eax
64014c23:	push   eax
64014c24:	jmp    0x64014c44
64014c26:	cmp    eax,0x3
64014c29:	jne    0x64014c36
64014c2b:	push   ebp
64014c2c:	call   0x64014b84
64014c31:	cmp    eax,esi
64014c33:	pop    ecx
64014c34:	jne    0x64014c4d
64014c36:	cmp    ebp,esi
64014c38:	jne    0x64014c3d
64014c3a:	xor    edi,edi
64014c3c:	inc    edi
64014c3d:	add    edi,0xf
64014c40:	and    edi,0xfffffff0
64014c43:	push   edi
64014c44:	push   esi
64014c45:	push   DWORD PTR ds:0x64030a6c
64014c4b:	call   ebx
64014c4d:	mov    esi,eax
64014c4f:	test   esi,esi
64014c51:	jne    0x64014c79
64014c53:	cmp    DWORD PTR ds:0x64030ee4,eax
64014c59:	push   0xc
64014c5b:	pop    edi
64014c5c:	je     0x64014c6b
64014c5e:	push   ebp
64014c5f:	call   0x6401609b
64014c64:	test   eax,eax
64014c66:	pop    ecx
64014c67:	jne    0x64014bea
64014c69:	jmp    0x64014c72
64014c6b:	call   0x64015a20
64014c70:	mov    DWORD PTR [eax],edi
64014c72:	call   0x64015a20
64014c77:	mov    DWORD PTR [eax],edi
64014c79:	pop    edi
64014c7a:	mov    eax,esi
64014c7c:	pop    esi
64014c7d:	pop    ebx
64014c7e:	pop    ebp
64014c7f:	ret    
64014c80:	push   ebp
64014c81:	call   0x6401609b
64014c86:	pop    ecx
64014c87:	call   0x64015a20
64014c8c:	mov    DWORD PTR [eax],0xc
64014c92:	xor    eax,eax
64014c94:	pop    ebp
64014c95:	ret    
64014c96:	int3   
64014c97:	int3   
64014c98:	int3   
64014c99:	int3   
64014c9a:	int3   
64014c9b:	int3   
64014c9c:	int3   
64014c9d:	int3   
64014c9e:	int3   
64014c9f:	int3   
64014ca0:	push   ebp
64014ca1:	mov    ebp,esp
64014ca3:	push   edi
64014ca4:	push   esi
64014ca5:	mov    esi,DWORD PTR [ebp+0xc]
64014ca8:	mov    ecx,DWORD PTR [ebp+0x10]
64014cab:	mov    edi,DWORD PTR [ebp+0x8]
64014cae:	mov    eax,ecx
64014cb0:	mov    edx,ecx
64014cb2:	add    eax,esi
64014cb4:	cmp    edi,esi
64014cb6:	jbe    0x64014cc0
64014cb8:	cmp    edi,eax
64014cba:	jb     0x64014e64
64014cc0:	cmp    ecx,0x100
64014cc6:	jb     0x64014ce7
64014cc8:	cmp    DWORD PTR ds:0x64034624,0x0
64014ccf:	je     0x64014ce7
64014cd1:	push   edi
64014cd2:	push   esi
64014cd3:	and    edi,0xf
64014cd6:	and    esi,0xf
64014cd9:	cmp    edi,esi
64014cdb:	pop    esi
64014cdc:	pop    edi
64014cdd:	jne    0x64014ce7
64014cdf:	pop    esi
64014ce0:	pop    edi
64014ce1:	pop    ebp
64014ce2:	jmp    0x6401bfaa
64014ce7:	test   edi,0x3
64014ced:	jne    0x64014d04
64014cef:	shr    ecx,0x2
64014cf2:	and    edx,0x3
64014cf5:	cmp    ecx,0x8
64014cf8:	jb     0x64014d24
64014cfa:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014cfc:	jmp    DWORD PTR [edx*4+0x64014e14]
64014d03:	nop
64014d04:	mov    eax,edi
64014d06:	mov    edx,0x3
64014d0b:	sub    ecx,0x4
64014d0e:	jb     0x64014d1c
64014d10:	and    eax,0x3
64014d13:	add    ecx,eax
64014d15:	jmp    DWORD PTR [eax*4+0x64014d28]
64014d1c:	jmp    DWORD PTR [ecx*4+0x64014e24]
64014d23:	nop
64014d24:	jmp    DWORD PTR [ecx*4+0x64014da8]
64014d2b:	nop
64014d2c:	cmp    BYTE PTR [ebp+0x1],cl
64014d2f:	fs fs dec ebp
64014d32:	add    DWORD PTR [eax+ecx*4+0x4d],esp
64014d36:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64014d3a:	mov    al,BYTE PTR [esi]
64014d3c:	mov    BYTE PTR [edi],al
64014d3e:	mov    al,BYTE PTR [esi+0x1]
64014d41:	mov    BYTE PTR [edi+0x1],al
64014d44:	mov    al,BYTE PTR [esi+0x2]
64014d47:	shr    ecx,0x2
64014d4a:	mov    BYTE PTR [edi+0x2],al
64014d4d:	add    esi,0x3
64014d50:	add    edi,0x3
64014d53:	cmp    ecx,0x8
64014d56:	jb     0x64014d24
64014d58:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014d5a:	jmp    DWORD PTR [edx*4+0x64014e14]
64014d61:	lea    ecx,[ecx+0x0]
64014d64:	and    edx,ecx
64014d66:	mov    al,BYTE PTR [esi]
64014d68:	mov    BYTE PTR [edi],al
64014d6a:	mov    al,BYTE PTR [esi+0x1]
64014d6d:	shr    ecx,0x2
64014d70:	mov    BYTE PTR [edi+0x1],al
64014d73:	add    esi,0x2
64014d76:	add    edi,0x2
64014d79:	cmp    ecx,0x8
64014d7c:	jb     0x64014d24
64014d7e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014d80:	jmp    DWORD PTR [edx*4+0x64014e14]
64014d87:	nop
64014d88:	and    edx,ecx
64014d8a:	mov    al,BYTE PTR [esi]
64014d8c:	mov    BYTE PTR [edi],al
64014d8e:	add    esi,0x1
64014d91:	shr    ecx,0x2
64014d94:	add    edi,0x1
64014d97:	cmp    ecx,0x8
64014d9a:	jb     0x64014d24
64014d9c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014d9e:	jmp    DWORD PTR [edx*4+0x64014e14]
64014da5:	lea    ecx,[ecx+0x0]
64014da8:	or     ecx,DWORD PTR [esi+0x1]
64014dab:	fs clc 
64014dad:	dec    ebp
64014dae:	add    DWORD PTR [eax+esi*8+0x4d],esp
64014db2:	add    DWORD PTR [eax+ebp*8+0x4d],esp
64014db6:	add    DWORD PTR [eax+eiz*8+0x4d],esp
64014dba:	add    DWORD PTR [eax+ebx*8+0x4d],esp
64014dbe:	add    DWORD PTR [eax+edx*8+0x4d],esp
64014dc2:	add    DWORD PTR [eax+ecx*8+0x4d],esp
64014dc6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64014dca:	mov    fs,esp
64014dcc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64014dd0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64014dd4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64014dd8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64014ddc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64014de0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64014de4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64014de8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64014dec:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64014df0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64014df4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64014df8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64014dfc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64014e00:	lea    eax,[ecx*4+0x0]
64014e07:	add    esi,eax
64014e09:	add    edi,eax
64014e0b:	jmp    DWORD PTR [edx*4+0x64014e14]
64014e12:	mov    edi,edi
64014e14:	and    al,0x4e
64014e16:	add    DWORD PTR [esp+ebp*1+0x4e],esp
64014e1a:	add    DWORD PTR [eax+edi*1+0x4e],esp
64014e1e:	add    DWORD PTR [esp+ecx*2+0x4e],esp
64014e22:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014e26:	or     BYTE PTR [esi+0x5f],bl
64014e29:	leave  
64014e2a:	ret    
64014e2b:	nop
64014e2c:	mov    al,BYTE PTR [esi]
64014e2e:	mov    BYTE PTR [edi],al
64014e30:	mov    eax,DWORD PTR [ebp+0x8]
64014e33:	pop    esi
64014e34:	pop    edi
64014e35:	leave  
64014e36:	ret    
64014e37:	nop
64014e38:	mov    al,BYTE PTR [esi]
64014e3a:	mov    BYTE PTR [edi],al
64014e3c:	mov    al,BYTE PTR [esi+0x1]
64014e3f:	mov    BYTE PTR [edi+0x1],al
64014e42:	mov    eax,DWORD PTR [ebp+0x8]
64014e45:	pop    esi
64014e46:	pop    edi
64014e47:	leave  
64014e48:	ret    
64014e49:	lea    ecx,[ecx+0x0]
64014e4c:	mov    al,BYTE PTR [esi]
64014e4e:	mov    BYTE PTR [edi],al
64014e50:	mov    al,BYTE PTR [esi+0x1]
64014e53:	mov    BYTE PTR [edi+0x1],al
64014e56:	mov    al,BYTE PTR [esi+0x2]
64014e59:	mov    BYTE PTR [edi+0x2],al
64014e5c:	mov    eax,DWORD PTR [ebp+0x8]
64014e5f:	pop    esi
64014e60:	pop    edi
64014e61:	leave  
64014e62:	ret    
64014e63:	nop
64014e64:	lea    esi,[ecx+esi*1-0x4]
64014e68:	lea    edi,[ecx+edi*1-0x4]
64014e6c:	test   edi,0x3
64014e72:	jne    0x64014e98
64014e74:	shr    ecx,0x2
64014e77:	and    edx,0x3
64014e7a:	cmp    ecx,0x8
64014e7d:	jb     0x64014e8c
64014e7f:	std    
64014e80:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014e82:	cld    
64014e83:	jmp    DWORD PTR [edx*4+0x64014fb0]
64014e8a:	mov    edi,edi
64014e8c:	neg    ecx
64014e8e:	jmp    DWORD PTR [ecx*4+0x64014f60]
64014e95:	lea    ecx,[ecx+0x0]
64014e98:	mov    eax,edi
64014e9a:	mov    edx,0x3
64014e9f:	cmp    ecx,0x4
64014ea2:	jb     0x64014eb0
64014ea4:	and    eax,0x3
64014ea7:	sub    ecx,eax
64014ea9:	jmp    DWORD PTR [eax*4+0x64014eb4]
64014eb0:	jmp    DWORD PTR [ecx*4+0x64014fb0]
64014eb7:	nop
64014eb8:	les    ecx,FWORD PTR [esi+0x1]
64014ebb:	fs call 0x7465500f
64014ec1:	dec    edi
64014ec2:	add    DWORD PTR [edx+ecx*4+0x46],esp
64014ec6:	add    esp,DWORD PTR [ebx]
64014ec8:	ror    DWORD PTR [eax-0x117cfcb9],1
64014ece:	add    ecx,eax
64014ed0:	jmp    0x65f0d1d7
64014ed5:	cmp    ecx,0x8
64014ed8:	jb     0x64014e8c
64014eda:	std    
64014edb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014edd:	cld    
64014ede:	jmp    DWORD PTR [edx*4+0x64014fb0]
64014ee5:	lea    ecx,[ecx+0x0]
64014ee8:	mov    al,BYTE PTR [esi+0x3]
64014eeb:	and    edx,ecx
64014eed:	mov    BYTE PTR [edi+0x3],al
64014ef0:	mov    al,BYTE PTR [esi+0x2]
64014ef3:	shr    ecx,0x2
64014ef6:	mov    BYTE PTR [edi+0x2],al
64014ef9:	sub    esi,0x2
64014efc:	sub    edi,0x2
64014eff:	cmp    ecx,0x8
64014f02:	jb     0x64014e8c
64014f04:	std    
64014f05:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014f07:	cld    
64014f08:	jmp    DWORD PTR [edx*4+0x64014fb0]
64014f0f:	nop
64014f10:	mov    al,BYTE PTR [esi+0x3]
64014f13:	and    edx,ecx
64014f15:	mov    BYTE PTR [edi+0x3],al
64014f18:	mov    al,BYTE PTR [esi+0x2]
64014f1b:	mov    BYTE PTR [edi+0x2],al
64014f1e:	mov    al,BYTE PTR [esi+0x1]
64014f21:	shr    ecx,0x2
64014f24:	mov    BYTE PTR [edi+0x1],al
64014f27:	sub    esi,0x3
64014f2a:	sub    edi,0x3
64014f2d:	cmp    ecx,0x8
64014f30:	jb     0x64014e8c
64014f36:	std    
64014f37:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64014f39:	cld    
64014f3a:	jmp    DWORD PTR [edx*4+0x64014fb0]
64014f41:	lea    ecx,[ecx+0x0]
64014f44:	fs dec edi
64014f46:	add    DWORD PTR [esp+ebp*2+0x4f],esp
64014f4a:	add    DWORD PTR [esp+esi*2+0x4f],esp
64014f4e:	add    DWORD PTR [esp+edi*2+0x4f],esp
64014f52:	add    DWORD PTR [esp+eax*4+0x4f],esp
64014f56:	add    DWORD PTR [esp+ecx*4+0x4f],esp
64014f5a:	add    DWORD PTR [esp+edx*4+0x4f],esp
64014f5e:	add    DWORD PTR [edi+eiz*4+0x4f],esp
64014f62:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64014f66:	mov    ds,WORD PTR [ecx+ecx*4]
64014f69:	inc    esp
64014f6a:	(bad)  
64014f6b:	sbb    al,0x8b
64014f6d:	inc    esp
64014f6e:	mov    ds,WORD PTR [eax]
64014f70:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64014f74:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64014f78:	mov    DWORD PTR [edi+ecx*4+0x14],eax
64014f7c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64014f80:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64014f84:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64014f88:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64014f8c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64014f90:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64014f94:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64014f98:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64014f9c:	lea    eax,[ecx*4+0x0]
64014fa3:	add    esi,eax
64014fa5:	add    edi,eax
64014fa7:	jmp    DWORD PTR [edx*4+0x64014fb0]
64014fae:	mov    edi,edi
64014fb0:	ror    BYTE PTR [edi+0x1],0x64
64014fb4:	enter  0x14f,0x64
64014fb8:	fmul   DWORD PTR [edi+0x1]
64014fbb:	fs in  al,dx
64014fbd:	dec    edi
64014fbe:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64014fc2:	or     BYTE PTR [esi+0x5f],bl
64014fc5:	leave  
64014fc6:	ret    
64014fc7:	nop
64014fc8:	mov    al,BYTE PTR [esi+0x3]
64014fcb:	mov    BYTE PTR [edi+0x3],al
64014fce:	mov    eax,DWORD PTR [ebp+0x8]
64014fd1:	pop    esi
64014fd2:	pop    edi
64014fd3:	leave  
64014fd4:	ret    
64014fd5:	lea    ecx,[ecx+0x0]
64014fd8:	mov    al,BYTE PTR [esi+0x3]
64014fdb:	mov    BYTE PTR [edi+0x3],al
64014fde:	mov    al,BYTE PTR [esi+0x2]
64014fe1:	mov    BYTE PTR [edi+0x2],al
64014fe4:	mov    eax,DWORD PTR [ebp+0x8]
64014fe7:	pop    esi
64014fe8:	pop    edi
64014fe9:	leave  
64014fea:	ret    
64014feb:	nop
64014fec:	mov    al,BYTE PTR [esi+0x3]
64014fef:	mov    BYTE PTR [edi+0x3],al
64014ff2:	mov    al,BYTE PTR [esi+0x2]
64014ff5:	mov    BYTE PTR [edi+0x2],al
64014ff8:	mov    al,BYTE PTR [esi+0x1]
64014ffb:	mov    BYTE PTR [edi+0x1],al
64014ffe:	mov    eax,DWORD PTR [ebp+0x8]
64015001:	pop    esi
64015002:	pop    edi
64015003:	leave  
64015004:	ret    
64015005:	push   0x10
64015007:	push   0x6402c050
6401500c:	call   0x64015220
64015011:	mov    ebx,DWORD PTR [ebp+0x8]
64015014:	test   ebx,ebx
64015016:	jne    0x64015026
64015018:	push   DWORD PTR [ebp+0xc]
6401501b:	call   0x64014bd3
64015020:	pop    ecx
64015021:	jmp    0x640151f2
64015026:	mov    esi,DWORD PTR [ebp+0xc]
64015029:	test   esi,esi
6401502b:	jne    0x64015039
6401502d:	push   ebx
6401502e:	call   0x64014af6
64015033:	pop    ecx
64015034:	jmp    0x640151f0
64015039:	cmp    DWORD PTR ds:0x640344fc,0x3
64015040:	jne    0x640151d9
64015046:	xor    edi,edi
64015048:	mov    DWORD PTR [ebp-0x1c],edi
6401504b:	cmp    esi,0xffffffe0
6401504e:	ja     0x640151de
64015054:	push   0x4
64015056:	call   0x6401b21a
6401505b:	pop    ecx
6401505c:	mov    DWORD PTR [ebp-0x4],edi
6401505f:	push   ebx
64015060:	call   0x6401b293
64015065:	pop    ecx
64015066:	mov    DWORD PTR [ebp-0x20],eax
64015069:	cmp    eax,edi
6401506b:	je     0x6401510f
64015071:	cmp    esi,DWORD PTR ds:0x640344ec
64015077:	ja     0x640150c2
64015079:	push   esi
6401507a:	push   ebx
6401507b:	push   eax
6401507c:	call   0x6401b788
64015081:	add    esp,0xc
64015084:	test   eax,eax
64015086:	je     0x6401508d
64015088:	mov    DWORD PTR [ebp-0x1c],ebx
6401508b:	jmp    0x640150c2
6401508d:	push   esi
6401508e:	call   0x6401ba67
64015093:	pop    ecx
64015094:	mov    DWORD PTR [ebp-0x1c],eax
64015097:	cmp    eax,edi
64015099:	je     0x640150c2
6401509b:	mov    eax,DWORD PTR [ebx-0x4]
6401509e:	dec    eax
6401509f:	cmp    eax,esi
640150a1:	jb     0x640150a5
640150a3:	mov    eax,esi
640150a5:	push   eax
640150a6:	push   ebx
640150a7:	push   DWORD PTR [ebp-0x1c]
640150aa:	call   0x64015680
640150af:	push   ebx
640150b0:	call   0x6401b293
640150b5:	mov    DWORD PTR [ebp-0x20],eax
640150b8:	push   ebx
640150b9:	push   eax
640150ba:	call   0x6401b2be
640150bf:	add    esp,0x18
640150c2:	cmp    DWORD PTR [ebp-0x1c],edi
640150c5:	jne    0x6401510f
640150c7:	cmp    esi,edi
640150c9:	jne    0x640150d1
640150cb:	xor    esi,esi
640150cd:	inc    esi
640150ce:	mov    DWORD PTR [ebp+0xc],esi
640150d1:	add    esi,0xf
640150d4:	and    esi,0xfffffff0
640150d7:	mov    DWORD PTR [ebp+0xc],esi
640150da:	push   esi
640150db:	push   edi
640150dc:	push   DWORD PTR ds:0x64030a6c
640150e2:	call   DWORD PTR ds:0x640260f8
640150e8:	mov    DWORD PTR [ebp-0x1c],eax
640150eb:	cmp    eax,edi
640150ed:	je     0x6401510f
640150ef:	mov    eax,DWORD PTR [ebx-0x4]
640150f2:	dec    eax
640150f3:	cmp    eax,esi
640150f5:	jb     0x640150f9
640150f7:	mov    eax,esi
640150f9:	push   eax
640150fa:	push   ebx
640150fb:	push   DWORD PTR [ebp-0x1c]
640150fe:	call   0x64015680
64015103:	push   ebx
64015104:	push   DWORD PTR [ebp-0x20]
64015107:	call   0x6401b2be
6401510c:	add    esp,0x14
6401510f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015116:	call   0x64015149
6401511b:	cmp    DWORD PTR [ebp-0x20],0x0
6401511f:	jne    0x64015152
64015121:	test   esi,esi
64015123:	jne    0x64015126
64015125:	inc    esi
64015126:	add    esi,0xf
64015129:	and    esi,0xfffffff0
6401512c:	mov    DWORD PTR [ebp+0xc],esi
6401512f:	push   esi
64015130:	push   ebx
64015131:	push   0x0
64015133:	push   DWORD PTR ds:0x64030a6c
64015139:	call   DWORD PTR ds:0x64026100
6401513f:	mov    edi,eax
64015141:	jmp    0x64015155
64015143:	mov    esi,DWORD PTR [ebp+0xc]
64015146:	mov    ebx,DWORD PTR [ebp+0x8]
64015149:	push   0x4
6401514b:	call   0x6401b142
64015150:	pop    ecx
64015151:	ret    
64015152:	mov    edi,DWORD PTR [ebp-0x1c]
64015155:	test   edi,edi
64015157:	jne    0x6401521c
6401515d:	cmp    DWORD PTR ds:0x64030ee4,edi
64015163:	je     0x64015191
64015165:	push   esi
64015166:	call   0x6401609b
6401516b:	pop    ecx
6401516c:	test   eax,eax
6401516e:	jne    0x64015046
64015174:	call   0x64015a20
64015179:	cmp    DWORD PTR [ebp-0x20],edi
6401517c:	jne    0x640151ea
6401517e:	mov    esi,eax
64015180:	call   DWORD PTR ds:0x64026044
64015186:	push   eax
64015187:	call   0x640159e5
6401518c:	pop    ecx
6401518d:	mov    DWORD PTR [esi],eax
6401518f:	jmp    0x640151f0
64015191:	test   edi,edi
64015193:	jne    0x6401521c
64015199:	call   0x64015a20
6401519e:	cmp    DWORD PTR [ebp-0x20],edi
640151a1:	je     0x6401520b
640151a3:	mov    DWORD PTR [eax],0xc
640151a9:	jmp    0x6401521c
640151ab:	test   esi,esi
640151ad:	jne    0x640151b0
640151af:	inc    esi
640151b0:	push   esi
640151b1:	push   ebx
640151b2:	push   0x0
640151b4:	push   DWORD PTR ds:0x64030a6c
640151ba:	call   DWORD PTR ds:0x64026100
640151c0:	mov    edi,eax
640151c2:	test   edi,edi
640151c4:	jne    0x6401521c
640151c6:	cmp    DWORD PTR ds:0x64030ee4,eax
640151cc:	je     0x64015202
640151ce:	push   esi
640151cf:	call   0x6401609b
640151d4:	pop    ecx
640151d5:	test   eax,eax
640151d7:	je     0x640151f8
640151d9:	cmp    esi,0xffffffe0
640151dc:	jbe    0x640151ab
640151de:	push   esi
640151df:	call   0x6401609b
640151e4:	pop    ecx
640151e5:	call   0x64015a20
640151ea:	mov    DWORD PTR [eax],0xc
640151f0:	xor    eax,eax
640151f2:	call   0x64015265
640151f7:	ret    
640151f8:	call   0x64015a20
640151fd:	jmp    0x6401517e
64015202:	test   edi,edi
64015204:	jne    0x6401521c
64015206:	call   0x64015a20
6401520b:	mov    esi,eax
6401520d:	call   DWORD PTR ds:0x64026044
64015213:	push   eax
64015214:	call   0x640159e5
64015219:	mov    DWORD PTR [esi],eax
6401521b:	pop    ecx
6401521c:	mov    eax,edi
6401521e:	jmp    0x640151f2
64015220:	push   0x64015280
64015225:	push   DWORD PTR fs:0x0
6401522c:	mov    eax,DWORD PTR [esp+0x10]
64015230:	mov    DWORD PTR [esp+0x10],ebp
64015234:	lea    ebp,[esp+0x10]
64015238:	sub    esp,eax
6401523a:	push   ebx
6401523b:	push   esi
6401523c:	push   edi
6401523d:	mov    eax,ds:0x6402f09c
64015242:	xor    DWORD PTR [ebp-0x4],eax
64015245:	xor    eax,ebp
64015247:	push   eax
64015248:	mov    DWORD PTR [ebp-0x18],esp
6401524b:	push   DWORD PTR [ebp-0x8]
6401524e:	mov    eax,DWORD PTR [ebp-0x4]
64015251:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015258:	mov    DWORD PTR [ebp-0x8],eax
6401525b:	lea    eax,[ebp-0x10]
6401525e:	mov    fs:0x0,eax
64015264:	ret    
64015265:	mov    ecx,DWORD PTR [ebp-0x10]
64015268:	mov    DWORD PTR fs:0x0,ecx
6401526f:	pop    ecx
64015270:	pop    edi
64015271:	pop    edi
64015272:	pop    esi
64015273:	pop    ebx
64015274:	mov    esp,ebp
64015276:	pop    ebp
64015277:	push   ecx
64015278:	ret    
64015279:	int3   
6401527a:	int3   
6401527b:	int3   
6401527c:	int3   
6401527d:	int3   
6401527e:	int3   
6401527f:	int3   
64015280:	sub    esp,0x14
64015283:	push   ebx
64015284:	mov    ebx,DWORD PTR [esp+0x20]
64015288:	push   ebp
64015289:	push   esi
6401528a:	mov    esi,DWORD PTR [ebx+0x8]
6401528d:	xor    esi,DWORD PTR ds:0x6402f09c
64015293:	push   edi
64015294:	mov    eax,DWORD PTR [esi]
64015296:	cmp    eax,0xfffffffe
64015299:	mov    BYTE PTR [esp+0x13],0x0
6401529e:	mov    DWORD PTR [esp+0x18],0x1
640152a6:	lea    edi,[ebx+0x10]
640152a9:	je     0x640152b8
640152ab:	mov    ecx,DWORD PTR [esi+0x4]
640152ae:	add    ecx,edi
640152b0:	xor    ecx,DWORD PTR [eax+edi*1]
640152b3:	call   0x64013c5c
640152b8:	mov    ecx,DWORD PTR [esi+0xc]
640152bb:	mov    eax,DWORD PTR [esi+0x8]
640152be:	add    ecx,edi
640152c0:	xor    ecx,DWORD PTR [eax+edi*1]
640152c3:	call   0x64013c5c
640152c8:	mov    eax,DWORD PTR [esp+0x28]
640152cc:	test   BYTE PTR [eax+0x4],0x66
640152d0:	jne    0x640153f5
640152d6:	mov    ebp,DWORD PTR [ebx+0xc]
640152d9:	cmp    ebp,0xfffffffe
640152dc:	mov    ecx,DWORD PTR [esp+0x30]
640152e0:	lea    edx,[esp+0x1c]
640152e4:	mov    DWORD PTR [esp+0x1c],eax
640152e8:	mov    DWORD PTR [esp+0x20],ecx
640152ec:	mov    DWORD PTR [ebx-0x4],edx
640152ef:	je     0x6401534f
640152f1:	lea    eax,[ebp+ebp*2+0x0]
640152f5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
640152f9:	test   ecx,ecx
640152fb:	lea    ebx,[esi+eax*4+0x10]
640152ff:	mov    eax,DWORD PTR [ebx]
64015301:	mov    DWORD PTR [esp+0x14],eax
64015305:	je     0x6401531d
64015307:	mov    edx,edi
64015309:	call   0x6401c182
6401530e:	test   eax,eax
64015310:	mov    BYTE PTR [esp+0x13],0x1
64015315:	jl     0x6401535b
64015317:	jg     0x64015365
64015319:	mov    eax,DWORD PTR [esp+0x14]
6401531d:	cmp    eax,0xfffffffe
64015320:	mov    ebp,eax
64015322:	jne    0x640152f1
64015324:	cmp    BYTE PTR [esp+0x13],0x0
64015329:	je     0x6401534f
6401532b:	mov    eax,DWORD PTR [esi]
6401532d:	cmp    eax,0xfffffffe
64015330:	je     0x6401533f
64015332:	mov    ecx,DWORD PTR [esi+0x4]
64015335:	add    ecx,edi
64015337:	xor    ecx,DWORD PTR [eax+edi*1]
6401533a:	call   0x64013c5c
6401533f:	mov    ecx,DWORD PTR [esi+0xc]
64015342:	mov    eax,DWORD PTR [esi+0x8]
64015345:	add    ecx,edi
64015347:	xor    ecx,DWORD PTR [eax+edi*1]
6401534a:	call   0x64013c5c
6401534f:	mov    eax,DWORD PTR [esp+0x18]
64015353:	pop    edi
64015354:	pop    esi
64015355:	pop    ebp
64015356:	pop    ebx
64015357:	add    esp,0x14
6401535a:	ret    
6401535b:	mov    DWORD PTR [esp+0x18],0x0
64015363:	jmp    0x6401532b
64015365:	mov    ecx,DWORD PTR [esp+0x28]
64015369:	cmp    DWORD PTR [ecx],0xe06d7363
6401536f:	jne    0x6401539b
64015371:	cmp    DWORD PTR ds:0x64026d48,0x0
64015378:	je     0x6401539b
6401537a:	push   0x64026d48
6401537f:	call   0x6401c270
64015384:	add    esp,0x4
64015387:	test   eax,eax
64015389:	je     0x6401539b
6401538b:	mov    edx,DWORD PTR [esp+0x28]
6401538f:	push   0x1
64015391:	push   edx
64015392:	call   DWORD PTR ds:0x64026d48
64015398:	add    esp,0x8
6401539b:	mov    ecx,DWORD PTR [esp+0x2c]
6401539f:	call   0x6401c1b2
640153a4:	mov    eax,DWORD PTR [esp+0x2c]
640153a8:	cmp    DWORD PTR [eax+0xc],ebp
640153ab:	je     0x640153c0
640153ad:	push   0x6402f09c
640153b2:	push   edi
640153b3:	mov    edx,ebp
640153b5:	mov    ecx,eax
640153b7:	call   0x6401c1cc
640153bc:	mov    eax,DWORD PTR [esp+0x2c]
640153c0:	mov    ecx,DWORD PTR [esp+0x14]
640153c4:	mov    DWORD PTR [eax+0xc],ecx
640153c7:	mov    eax,DWORD PTR [esi]
640153c9:	cmp    eax,0xfffffffe
640153cc:	je     0x640153db
640153ce:	mov    ecx,DWORD PTR [esi+0x4]
640153d1:	add    ecx,edi
640153d3:	xor    ecx,DWORD PTR [eax+edi*1]
640153d6:	call   0x64013c5c
640153db:	mov    ecx,DWORD PTR [esi+0xc]
640153de:	mov    edx,DWORD PTR [esi+0x8]
640153e1:	add    ecx,edi
640153e3:	xor    ecx,DWORD PTR [edx+edi*1]
640153e6:	call   0x64013c5c
640153eb:	mov    ecx,DWORD PTR [ebx+0x8]
640153ee:	mov    edx,edi
640153f0:	jmp    0x6401c199
640153f5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
640153f9:	je     0x6401534f
640153ff:	push   0x6402f09c
64015404:	push   edi
64015405:	mov    ecx,ebx
64015407:	mov    edx,0xfffffffe
6401540c:	call   0x6401c1cc
64015411:	jmp    0x6401532b
64015416:	int3   
64015417:	int3   
64015418:	int3   
64015419:	int3   
6401541a:	int3   
6401541b:	int3   
6401541c:	int3   
6401541d:	int3   
6401541e:	int3   
6401541f:	int3   
64015420:	mov    ecx,DWORD PTR [esp+0x4]
64015424:	test   ecx,0x3
6401542a:	je     0x64015450
6401542c:	mov    al,BYTE PTR [ecx]
6401542e:	add    ecx,0x1
64015431:	test   al,al
64015433:	je     0x64015483
64015435:	test   ecx,0x3
6401543b:	jne    0x6401542c
6401543d:	add    eax,0x0
64015442:	lea    esp,[esp+0x0]
64015449:	lea    esp,[esp+0x0]
64015450:	mov    eax,DWORD PTR [ecx]
64015452:	mov    edx,0x7efefeff
64015457:	add    edx,eax
64015459:	xor    eax,0xffffffff
6401545c:	xor    eax,edx
6401545e:	add    ecx,0x4
64015461:	test   eax,0x81010100
64015466:	je     0x64015450
64015468:	mov    eax,DWORD PTR [ecx-0x4]
6401546b:	test   al,al
6401546d:	je     0x640154a1
6401546f:	test   ah,ah
64015471:	je     0x64015497
64015473:	test   eax,0xff0000
64015478:	je     0x6401548d
6401547a:	test   eax,0xff000000
6401547f:	je     0x64015483
64015481:	jmp    0x64015450
64015483:	lea    eax,[ecx-0x1]
64015486:	mov    ecx,DWORD PTR [esp+0x4]
6401548a:	sub    eax,ecx
6401548c:	ret    
6401548d:	lea    eax,[ecx-0x2]
64015490:	mov    ecx,DWORD PTR [esp+0x4]
64015494:	sub    eax,ecx
64015496:	ret    
64015497:	lea    eax,[ecx-0x3]
6401549a:	mov    ecx,DWORD PTR [esp+0x4]
6401549e:	sub    eax,ecx
640154a0:	ret    
640154a1:	lea    eax,[ecx-0x4]
640154a4:	mov    ecx,DWORD PTR [esp+0x4]
640154a8:	sub    eax,ecx
640154aa:	ret    
640154ab:	push   eax
640154ac:	push   DWORD PTR fs:0x0
640154b3:	lea    eax,[esp+0xc]
640154b7:	sub    esp,DWORD PTR [esp+0xc]
640154bb:	push   ebx
640154bc:	push   esi
640154bd:	push   edi
640154be:	mov    DWORD PTR [eax],ebp
640154c0:	mov    ebp,eax
640154c2:	mov    eax,ds:0x6402f09c
640154c7:	xor    eax,ebp
640154c9:	push   eax
640154ca:	push   DWORD PTR [ebp-0x4]
640154cd:	mov    DWORD PTR [ebp-0x4],0xffffffff
640154d4:	lea    eax,[ebp-0xc]
640154d7:	mov    fs:0x0,eax
640154dd:	ret    
640154de:	push   eax
640154df:	push   DWORD PTR fs:0x0
640154e6:	lea    eax,[esp+0xc]
640154ea:	sub    esp,DWORD PTR [esp+0xc]
640154ee:	push   ebx
640154ef:	push   esi
640154f0:	push   edi
640154f1:	mov    DWORD PTR [eax],ebp
640154f3:	mov    ebp,eax
640154f5:	mov    eax,ds:0x6402f09c
640154fa:	xor    eax,ebp
640154fc:	push   eax
640154fd:	mov    DWORD PTR [ebp-0x10],esp
64015500:	push   DWORD PTR [ebp-0x4]
64015503:	mov    DWORD PTR [ebp-0x4],0xffffffff
6401550a:	lea    eax,[ebp-0xc]
6401550d:	mov    fs:0x0,eax
64015513:	ret    
64015514:	push   0xc
64015516:	push   0x6402c070
6401551b:	call   0x64015220
64015520:	push   0xe
64015522:	call   0x6401b21a
64015527:	pop    ecx
64015528:	and    DWORD PTR [ebp-0x4],0x0
6401552c:	mov    esi,DWORD PTR [ebp+0x8]
6401552f:	mov    ecx,DWORD PTR [esi+0x4]
64015532:	test   ecx,ecx
64015534:	je     0x64015565
64015536:	mov    eax,ds:0x64030588
6401553b:	mov    edx,0x64030584
64015540:	mov    DWORD PTR [ebp-0x1c],eax
64015543:	test   eax,eax
64015545:	je     0x64015558
64015547:	cmp    DWORD PTR [eax],ecx
64015549:	jne    0x64015577
6401554b:	mov    ecx,DWORD PTR [eax+0x4]
6401554e:	mov    DWORD PTR [edx+0x4],ecx
64015551:	push   eax
64015552:	call   0x64014af6
64015557:	pop    ecx
64015558:	push   DWORD PTR [esi+0x4]
6401555b:	call   0x64014af6
64015560:	pop    ecx
64015561:	and    DWORD PTR [esi+0x4],0x0
64015565:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401556c:	call   0x6401557b
64015571:	call   0x64015265
64015576:	ret    
64015577:	mov    edx,eax
64015579:	jmp    0x64015540
6401557b:	push   0xe
6401557d:	call   0x6401b142
64015582:	pop    ecx
64015583:	ret    
64015584:	int3   
64015585:	int3   
64015586:	int3   
64015587:	int3   
64015588:	int3   
64015589:	int3   
6401558a:	int3   
6401558b:	int3   
6401558c:	int3   
6401558d:	int3   
6401558e:	int3   
6401558f:	int3   
64015590:	mov    edx,DWORD PTR [esp+0x4]
64015594:	mov    ecx,DWORD PTR [esp+0x8]
64015598:	test   edx,0x3
6401559e:	jne    0x640155dc
640155a0:	mov    eax,DWORD PTR [edx]
640155a2:	cmp    al,BYTE PTR [ecx]
640155a4:	jne    0x640155d4
640155a6:	or     al,al
640155a8:	je     0x640155d0
640155aa:	cmp    ah,BYTE PTR [ecx+0x1]
640155ad:	jne    0x640155d4
640155af:	or     ah,ah
640155b1:	je     0x640155d0
640155b3:	shr    eax,0x10
640155b6:	cmp    al,BYTE PTR [ecx+0x2]
640155b9:	jne    0x640155d4
640155bb:	or     al,al
640155bd:	je     0x640155d0
640155bf:	cmp    ah,BYTE PTR [ecx+0x3]
640155c2:	jne    0x640155d4
640155c4:	add    ecx,0x4
640155c7:	add    edx,0x4
640155ca:	or     ah,ah
640155cc:	jne    0x640155a0
640155ce:	mov    edi,edi
640155d0:	xor    eax,eax
640155d2:	ret    
640155d3:	nop
640155d4:	sbb    eax,eax
640155d6:	shl    eax,1
640155d8:	add    eax,0x1
640155db:	ret    
640155dc:	test   edx,0x1
640155e2:	je     0x640155fc
640155e4:	mov    al,BYTE PTR [edx]
640155e6:	add    edx,0x1
640155e9:	cmp    al,BYTE PTR [ecx]
640155eb:	jne    0x640155d4
640155ed:	add    ecx,0x1
640155f0:	or     al,al
640155f2:	je     0x640155d0
640155f4:	test   edx,0x2
640155fa:	je     0x640155a0
640155fc:	mov    ax,WORD PTR [edx]
640155ff:	add    edx,0x2
64015602:	cmp    al,BYTE PTR [ecx]
64015604:	jne    0x640155d4
64015606:	or     al,al
64015608:	je     0x640155d0
6401560a:	cmp    ah,BYTE PTR [ecx+0x1]
6401560d:	jne    0x640155d4
6401560f:	or     ah,ah
64015611:	je     0x640155d0
64015613:	add    ecx,0x2
64015616:	jmp    0x640155a0
64015618:	mov    ecx,DWORD PTR [esp+0x4]
6401561c:	push   ebx
6401561d:	xor    ebx,ebx
6401561f:	cmp    ecx,ebx
64015621:	push   esi
64015622:	push   edi
64015623:	je     0x6401562d
64015625:	mov    edi,DWORD PTR [esp+0x14]
64015629:	cmp    edi,ebx
6401562b:	ja     0x64015648
6401562d:	call   0x64015a20
64015632:	push   0x16
64015634:	pop    esi
64015635:	mov    DWORD PTR [eax],esi
64015637:	push   ebx
64015638:	push   ebx
64015639:	push   ebx
6401563a:	push   ebx
6401563b:	push   ebx
6401563c:	call   0x64013794
64015641:	add    esp,0x14
64015644:	mov    eax,esi
64015646:	jmp    0x64015679
64015648:	mov    esi,DWORD PTR [esp+0x18]
6401564c:	cmp    esi,ebx
6401564e:	jne    0x64015654
64015650:	mov    BYTE PTR [ecx],bl
64015652:	jmp    0x6401562d
64015654:	mov    edx,ecx
64015656:	mov    al,BYTE PTR [esi]
64015658:	mov    BYTE PTR [edx],al
6401565a:	inc    edx
6401565b:	inc    esi
6401565c:	cmp    al,bl
6401565e:	je     0x64015663
64015660:	dec    edi
64015661:	jne    0x64015656
64015663:	cmp    edi,ebx
64015665:	jne    0x64015677
64015667:	mov    BYTE PTR [ecx],bl
64015669:	call   0x64015a20
6401566e:	push   0x22
64015670:	pop    ecx
64015671:	mov    DWORD PTR [eax],ecx
64015673:	mov    esi,ecx
64015675:	jmp    0x64015637
64015677:	xor    eax,eax
64015679:	pop    edi
6401567a:	pop    esi
6401567b:	pop    ebx
6401567c:	ret    
6401567d:	int3   
6401567e:	int3   
6401567f:	int3   
64015680:	push   ebp
64015681:	mov    ebp,esp
64015683:	push   edi
64015684:	push   esi
64015685:	mov    esi,DWORD PTR [ebp+0xc]
64015688:	mov    ecx,DWORD PTR [ebp+0x10]
6401568b:	mov    edi,DWORD PTR [ebp+0x8]
6401568e:	mov    eax,ecx
64015690:	mov    edx,ecx
64015692:	add    eax,esi
64015694:	cmp    edi,esi
64015696:	jbe    0x640156a0
64015698:	cmp    edi,eax
6401569a:	jb     0x64015844
640156a0:	cmp    ecx,0x100
640156a6:	jb     0x640156c7
640156a8:	cmp    DWORD PTR ds:0x64034624,0x0
640156af:	je     0x640156c7
640156b1:	push   edi
640156b2:	push   esi
640156b3:	and    edi,0xf
640156b6:	and    esi,0xf
640156b9:	cmp    edi,esi
640156bb:	pop    esi
640156bc:	pop    edi
640156bd:	jne    0x640156c7
640156bf:	pop    esi
640156c0:	pop    edi
640156c1:	pop    ebp
640156c2:	jmp    0x6401bfaa
640156c7:	test   edi,0x3
640156cd:	jne    0x640156e4
640156cf:	shr    ecx,0x2
640156d2:	and    edx,0x3
640156d5:	cmp    ecx,0x8
640156d8:	jb     0x64015704
640156da:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640156dc:	jmp    DWORD PTR [edx*4+0x640157f4]
640156e3:	nop
640156e4:	mov    eax,edi
640156e6:	mov    edx,0x3
640156eb:	sub    ecx,0x4
640156ee:	jb     0x640156fc
640156f0:	and    eax,0x3
640156f3:	add    ecx,eax
640156f5:	jmp    DWORD PTR [eax*4+0x64015708]
640156fc:	jmp    DWORD PTR [ecx*4+0x64015804]
64015703:	nop
64015704:	jmp    DWORD PTR [ecx*4+0x64015788]
6401570b:	nop
6401570c:	sbb    BYTE PTR [edi+0x1],dl
6401570f:	fs inc esp
64015711:	push   edi
64015712:	add    DWORD PTR [eax+ebp*2+0x57],esp
64015716:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401571a:	mov    al,BYTE PTR [esi]
6401571c:	mov    BYTE PTR [edi],al
6401571e:	mov    al,BYTE PTR [esi+0x1]
64015721:	mov    BYTE PTR [edi+0x1],al
64015724:	mov    al,BYTE PTR [esi+0x2]
64015727:	shr    ecx,0x2
6401572a:	mov    BYTE PTR [edi+0x2],al
6401572d:	add    esi,0x3
64015730:	add    edi,0x3
64015733:	cmp    ecx,0x8
64015736:	jb     0x64015704
64015738:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401573a:	jmp    DWORD PTR [edx*4+0x640157f4]
64015741:	lea    ecx,[ecx+0x0]
64015744:	and    edx,ecx
64015746:	mov    al,BYTE PTR [esi]
64015748:	mov    BYTE PTR [edi],al
6401574a:	mov    al,BYTE PTR [esi+0x1]
6401574d:	shr    ecx,0x2
64015750:	mov    BYTE PTR [edi+0x1],al
64015753:	add    esi,0x2
64015756:	add    edi,0x2
64015759:	cmp    ecx,0x8
6401575c:	jb     0x64015704
6401575e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015760:	jmp    DWORD PTR [edx*4+0x640157f4]
64015767:	nop
64015768:	and    edx,ecx
6401576a:	mov    al,BYTE PTR [esi]
6401576c:	mov    BYTE PTR [edi],al
6401576e:	add    esi,0x1
64015771:	shr    ecx,0x2
64015774:	add    edi,0x1
64015777:	cmp    ecx,0x8
6401577a:	jb     0x64015704
6401577c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401577e:	jmp    DWORD PTR [edx*4+0x640157f4]
64015785:	lea    ecx,[ecx+0x0]
64015788:	jmp    0x640157e1
6401578a:	add    DWORD PTR [eax+ebx*8+0x57],esp
6401578e:	add    DWORD PTR [eax+edx*8+0x57],esp
64015792:	add    DWORD PTR [eax+ecx*8+0x57],esp
64015796:	add    DWORD PTR [eax+eax*8+0x57],esp
6401579a:	add    DWORD PTR [eax+edi*4+0x57],esp
6401579e:	add    DWORD PTR [eax+esi*4+0x57],esp
640157a2:	add    DWORD PTR [eax+ebp*4+0x57],esp
640157a6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640157aa:	mov    fs,esp
640157ac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640157b0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640157b4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640157b8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640157bc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640157c0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640157c4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640157c8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640157cc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640157d0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640157d4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640157d8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640157dc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640157e0:	lea    eax,[ecx*4+0x0]
640157e7:	add    esi,eax
640157e9:	add    edi,eax
640157eb:	jmp    DWORD PTR [edx*4+0x640157f4]
640157f2:	mov    edi,edi
640157f4:	add    al,0x58
640157f6:	add    DWORD PTR [esp+ecx*1+0x58],esp
640157fa:	add    DWORD PTR [eax+ebx*1+0x58],esp
640157fe:	add    DWORD PTR [esp+ebp*1+0x58],esp
64015802:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015806:	or     BYTE PTR [esi+0x5f],bl
64015809:	leave  
6401580a:	ret    
6401580b:	nop
6401580c:	mov    al,BYTE PTR [esi]
6401580e:	mov    BYTE PTR [edi],al
64015810:	mov    eax,DWORD PTR [ebp+0x8]
64015813:	pop    esi
64015814:	pop    edi
64015815:	leave  
64015816:	ret    
64015817:	nop
64015818:	mov    al,BYTE PTR [esi]
6401581a:	mov    BYTE PTR [edi],al
6401581c:	mov    al,BYTE PTR [esi+0x1]
6401581f:	mov    BYTE PTR [edi+0x1],al
64015822:	mov    eax,DWORD PTR [ebp+0x8]
64015825:	pop    esi
64015826:	pop    edi
64015827:	leave  
64015828:	ret    
64015829:	lea    ecx,[ecx+0x0]
6401582c:	mov    al,BYTE PTR [esi]
6401582e:	mov    BYTE PTR [edi],al
64015830:	mov    al,BYTE PTR [esi+0x1]
64015833:	mov    BYTE PTR [edi+0x1],al
64015836:	mov    al,BYTE PTR [esi+0x2]
64015839:	mov    BYTE PTR [edi+0x2],al
6401583c:	mov    eax,DWORD PTR [ebp+0x8]
6401583f:	pop    esi
64015840:	pop    edi
64015841:	leave  
64015842:	ret    
64015843:	nop
64015844:	lea    esi,[ecx+esi*1-0x4]
64015848:	lea    edi,[ecx+edi*1-0x4]
6401584c:	test   edi,0x3
64015852:	jne    0x64015878
64015854:	shr    ecx,0x2
64015857:	and    edx,0x3
6401585a:	cmp    ecx,0x8
6401585d:	jb     0x6401586c
6401585f:	std    
64015860:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015862:	cld    
64015863:	jmp    DWORD PTR [edx*4+0x64015990]
6401586a:	mov    edi,edi
6401586c:	neg    ecx
6401586e:	jmp    DWORD PTR [ecx*4+0x64015940]
64015875:	lea    ecx,[ecx+0x0]
64015878:	mov    eax,edi
6401587a:	mov    edx,0x3
6401587f:	cmp    ecx,0x4
64015882:	jb     0x64015890
64015884:	and    eax,0x3
64015887:	sub    ecx,eax
64015889:	jmp    DWORD PTR [eax*4+0x64015894]
64015890:	jmp    DWORD PTR [ecx*4+0x64015990]
64015897:	nop
64015898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64015899:	pop    eax
6401589a:	add    DWORD PTR [eax+ecx*8+0x58],esp
6401589e:	add    DWORD PTR [eax+esi*8+0x58],esp
640158a2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640158a6:	add    esp,DWORD PTR [ebx]
640158a8:	ror    DWORD PTR [eax-0x117cfcb9],1
640158ae:	add    ecx,eax
640158b0:	jmp    0x65f0dbb7
640158b5:	cmp    ecx,0x8
640158b8:	jb     0x6401586c
640158ba:	std    
640158bb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640158bd:	cld    
640158be:	jmp    DWORD PTR [edx*4+0x64015990]
640158c5:	lea    ecx,[ecx+0x0]
640158c8:	mov    al,BYTE PTR [esi+0x3]
640158cb:	and    edx,ecx
640158cd:	mov    BYTE PTR [edi+0x3],al
640158d0:	mov    al,BYTE PTR [esi+0x2]
640158d3:	shr    ecx,0x2
640158d6:	mov    BYTE PTR [edi+0x2],al
640158d9:	sub    esi,0x2
640158dc:	sub    edi,0x2
640158df:	cmp    ecx,0x8
640158e2:	jb     0x6401586c
640158e4:	std    
640158e5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640158e7:	cld    
640158e8:	jmp    DWORD PTR [edx*4+0x64015990]
640158ef:	nop
640158f0:	mov    al,BYTE PTR [esi+0x3]
640158f3:	and    edx,ecx
640158f5:	mov    BYTE PTR [edi+0x3],al
640158f8:	mov    al,BYTE PTR [esi+0x2]
640158fb:	mov    BYTE PTR [edi+0x2],al
640158fe:	mov    al,BYTE PTR [esi+0x1]
64015901:	shr    ecx,0x2
64015904:	mov    BYTE PTR [edi+0x1],al
64015907:	sub    esi,0x3
6401590a:	sub    edi,0x3
6401590d:	cmp    ecx,0x8
64015910:	jb     0x6401586c
64015916:	std    
64015917:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015919:	cld    
6401591a:	jmp    DWORD PTR [edx*4+0x64015990]
64015921:	lea    ecx,[ecx+0x0]
64015924:	inc    esp
64015925:	pop    ecx
64015926:	add    DWORD PTR [esp+ecx*2+0x59],esp
6401592a:	add    DWORD PTR [esp+edx*2+0x59],esp
6401592e:	add    DWORD PTR [esp+ebx*2+0x59],esp
64015932:	add    DWORD PTR [esp+eiz*2+0x59],esp
64015936:	add    DWORD PTR [esp+ebp*2+0x59],esp
6401593a:	add    DWORD PTR [esp+esi*2+0x59],esp
6401593e:	add    DWORD PTR [edi+eax*4+0x59],esp
64015942:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64015946:	mov    ds,WORD PTR [ecx+ecx*4]
64015949:	inc    esp
6401594a:	(bad)  
6401594b:	sbb    al,0x8b
6401594d:	inc    esp
6401594e:	mov    ds,WORD PTR [eax]
64015950:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64015954:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64015958:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401595c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64015960:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64015964:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64015968:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401596c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64015970:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64015974:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64015978:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401597c:	lea    eax,[ecx*4+0x0]
64015983:	add    esi,eax
64015985:	add    edi,eax
64015987:	jmp    DWORD PTR [edx*4+0x64015990]
6401598e:	mov    edi,edi
64015990:	mov    al,ds:0xa8640159
64015995:	pop    ecx
64015996:	add    DWORD PTR [eax+edi*4+0x59],esp
6401599a:	add    DWORD PTR [esp+ecx*8+0x59],esp
6401599e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640159a2:	or     BYTE PTR [esi+0x5f],bl
640159a5:	leave  
640159a6:	ret    
640159a7:	nop
640159a8:	mov    al,BYTE PTR [esi+0x3]
640159ab:	mov    BYTE PTR [edi+0x3],al
640159ae:	mov    eax,DWORD PTR [ebp+0x8]
640159b1:	pop    esi
640159b2:	pop    edi
640159b3:	leave  
640159b4:	ret    
640159b5:	lea    ecx,[ecx+0x0]
640159b8:	mov    al,BYTE PTR [esi+0x3]
640159bb:	mov    BYTE PTR [edi+0x3],al
640159be:	mov    al,BYTE PTR [esi+0x2]
640159c1:	mov    BYTE PTR [edi+0x2],al
640159c4:	mov    eax,DWORD PTR [ebp+0x8]
640159c7:	pop    esi
640159c8:	pop    edi
640159c9:	leave  
640159ca:	ret    
640159cb:	nop
640159cc:	mov    al,BYTE PTR [esi+0x3]
640159cf:	mov    BYTE PTR [edi+0x3],al
640159d2:	mov    al,BYTE PTR [esi+0x2]
640159d5:	mov    BYTE PTR [edi+0x2],al
640159d8:	mov    al,BYTE PTR [esi+0x1]
640159db:	mov    BYTE PTR [edi+0x1],al
640159de:	mov    eax,DWORD PTR [ebp+0x8]
640159e1:	pop    esi
640159e2:	pop    edi
640159e3:	leave  
640159e4:	ret    
640159e5:	mov    eax,DWORD PTR [esp+0x4]
640159e9:	xor    ecx,ecx
640159eb:	cmp    eax,DWORD PTR [ecx*8+0x6402f0c0]
640159f2:	je     0x64015a06
640159f4:	inc    ecx
640159f5:	cmp    ecx,0x2d
640159f8:	jb     0x640159eb
640159fa:	lea    ecx,[eax-0x13]
640159fd:	cmp    ecx,0x11
64015a00:	ja     0x64015a0e
64015a02:	push   0xd
64015a04:	pop    eax
64015a05:	ret    
64015a06:	mov    eax,DWORD PTR [ecx*8+0x6402f0c4]
64015a0d:	ret    
64015a0e:	add    eax,0xffffff44
64015a13:	push   0xe
64015a15:	pop    ecx
64015a16:	cmp    ecx,eax
64015a18:	sbb    eax,eax
64015a1a:	and    eax,ecx
64015a1c:	add    eax,0x8
64015a1f:	ret    
64015a20:	call   0x64015cf4
64015a25:	test   eax,eax
64015a27:	jne    0x64015a2f
64015a29:	mov    eax,0x6402f228
64015a2e:	ret    
64015a2f:	add    eax,0x8
64015a32:	ret    
64015a33:	call   0x64015cf4
64015a38:	test   eax,eax
64015a3a:	jne    0x64015a42
64015a3c:	mov    eax,0x6402f22c
64015a41:	ret    
64015a42:	add    eax,0xc
64015a45:	ret    
64015a46:	push   esi
64015a47:	call   0x64015a33
64015a4c:	mov    ecx,DWORD PTR [esp+0x8]
64015a50:	push   ecx
64015a51:	mov    DWORD PTR [eax],ecx
64015a53:	call   0x640159e5
64015a58:	pop    ecx
64015a59:	mov    esi,eax
64015a5b:	call   0x64015a20
64015a60:	mov    DWORD PTR [eax],esi
64015a62:	pop    esi
64015a63:	ret    
64015a64:	and    DWORD PTR ds:0x6403463c,0x0
64015a6b:	ret    
64015a6c:	push   ebp
64015a6d:	mov    ebp,esp
64015a6f:	push   ecx
64015a70:	push   ecx
64015a71:	push   ebx
64015a72:	push   esi
64015a73:	xor    esi,esi
64015a75:	lea    eax,[ebp-0x4]
64015a78:	inc    esi
64015a79:	xor    ebx,ebx
64015a7b:	push   eax
64015a7c:	mov    DWORD PTR [ebp-0x8],esi
64015a7f:	mov    DWORD PTR [ebp-0x4],ebx
64015a82:	call   0x64017186
64015a87:	cmp    DWORD PTR [ebp-0x4],0x5
64015a8b:	pop    ecx
64015a8c:	jle    0x64015a92
64015a8e:	mov    eax,esi
64015a90:	jmp    0x64015ad4
64015a92:	push   edi
64015a93:	push   ebx
64015a94:	call   DWORD PTR ds:0x64026128
64015a9a:	mov    esi,DWORD PTR [eax+0x3c]
64015a9d:	add    esi,eax
64015a9f:	cmp    WORD PTR [esi+0x6],bx
64015aa3:	movzx  eax,WORD PTR [esi+0x14]
64015aa7:	lea    edi,[eax+esi*1+0x18]
64015aab:	jbe    0x64015ad0
64015aad:	push   edi
64015aae:	push   0x64026ce4
64015ab3:	call   0x64015590
64015ab8:	test   eax,eax
64015aba:	pop    ecx
64015abb:	pop    ecx
64015abc:	je     0x64015acc
64015abe:	movzx  eax,WORD PTR [esi+0x6]
64015ac2:	inc    ebx
64015ac3:	add    edi,0x28
64015ac6:	cmp    ebx,eax
64015ac8:	jb     0x64015aad
64015aca:	jmp    0x64015ad0
64015acc:	and    DWORD PTR [ebp-0x8],0x0
64015ad0:	mov    eax,DWORD PTR [ebp-0x8]
64015ad3:	pop    edi
64015ad4:	pop    esi
64015ad5:	pop    ebx
64015ad6:	leave  
64015ad7:	ret    
64015ad8:	push   esi
64015ad9:	push   DWORD PTR ds:0x6402f234
64015adf:	mov    esi,DWORD PTR ds:0x6402612c
64015ae5:	call   esi
64015ae7:	test   eax,eax
64015ae9:	je     0x64015b0c
64015aeb:	mov    eax,ds:0x6402f230
64015af0:	cmp    eax,0xffffffff
64015af3:	je     0x64015b0c
64015af5:	push   eax
64015af6:	push   DWORD PTR ds:0x6402f234
64015afc:	call   esi
64015afe:	call   eax
64015b00:	test   eax,eax
64015b02:	je     0x64015b0c
64015b04:	mov    eax,DWORD PTR [eax+0x1f8]
64015b0a:	jmp    0x64015b32
64015b0c:	push   0x64026cfc
64015b11:	call   DWORD PTR ds:0x64026128
64015b17:	mov    esi,eax
64015b19:	test   esi,esi
64015b1b:	je     0x64015b40
64015b1d:	call   0x64015a6c
64015b22:	test   eax,eax
64015b24:	je     0x64015b40
64015b26:	push   0x64026cec
64015b2b:	push   esi
64015b2c:	call   DWORD PTR ds:0x64026014
64015b32:	test   eax,eax
64015b34:	je     0x64015b40
64015b36:	push   DWORD PTR [esp+0x8]
64015b3a:	call   eax
64015b3c:	mov    DWORD PTR [esp+0x8],eax
64015b40:	mov    eax,DWORD PTR [esp+0x8]
64015b44:	pop    esi
64015b45:	ret    
64015b46:	push   0x0
64015b48:	call   0x64015ad8
64015b4d:	pop    ecx
64015b4e:	ret    
64015b4f:	push   esi
64015b50:	push   DWORD PTR ds:0x6402f234
64015b56:	mov    esi,DWORD PTR ds:0x6402612c
64015b5c:	call   esi
64015b5e:	test   eax,eax
64015b60:	je     0x64015b83
64015b62:	mov    eax,ds:0x6402f230
64015b67:	cmp    eax,0xffffffff
64015b6a:	je     0x64015b83
64015b6c:	push   eax
64015b6d:	push   DWORD PTR ds:0x6402f234
64015b73:	call   esi
64015b75:	call   eax
64015b77:	test   eax,eax
64015b79:	je     0x64015b83
64015b7b:	mov    eax,DWORD PTR [eax+0x1fc]
64015b81:	jmp    0x64015ba9
64015b83:	push   0x64026cfc
64015b88:	call   DWORD PTR ds:0x64026128
64015b8e:	mov    esi,eax
64015b90:	test   esi,esi
64015b92:	je     0x64015bb7
64015b94:	call   0x64015a6c
64015b99:	test   eax,eax
64015b9b:	je     0x64015bb7
64015b9d:	push   0x64026d0c
64015ba2:	push   esi
64015ba3:	call   DWORD PTR ds:0x64026014
64015ba9:	test   eax,eax
64015bab:	je     0x64015bb7
64015bad:	push   DWORD PTR [esp+0x8]
64015bb1:	call   eax
64015bb3:	mov    DWORD PTR [esp+0x8],eax
64015bb7:	mov    eax,DWORD PTR [esp+0x8]
64015bbb:	pop    esi
64015bbc:	ret    
64015bbd:	call   DWORD PTR ds:0x64026130
64015bc3:	ret    0x4
64015bc6:	push   esi
64015bc7:	push   DWORD PTR ds:0x6402f234
64015bcd:	call   DWORD PTR ds:0x6402612c
64015bd3:	mov    esi,eax
64015bd5:	test   esi,esi
64015bd7:	jne    0x64015bf4
64015bd9:	push   DWORD PTR ds:0x64030590
64015bdf:	call   0x64015b4f
64015be4:	pop    ecx
64015be5:	mov    esi,eax
64015be7:	push   esi
64015be8:	push   DWORD PTR ds:0x6402f234
64015bee:	call   DWORD PTR ds:0x64026134
64015bf4:	mov    eax,esi
64015bf6:	pop    esi
64015bf7:	ret    
64015bf8:	mov    eax,ds:0x6402f230
64015bfd:	cmp    eax,0xffffffff
64015c00:	je     0x64015c18
64015c02:	push   eax
64015c03:	push   DWORD PTR ds:0x64030598
64015c09:	call   0x64015b4f
64015c0e:	pop    ecx
64015c0f:	call   eax
64015c11:	or     DWORD PTR ds:0x6402f230,0xffffffff
64015c18:	mov    eax,ds:0x6402f234
64015c1d:	cmp    eax,0xffffffff
64015c20:	je     0x64015c30
64015c22:	push   eax
64015c23:	call   DWORD PTR ds:0x64026138
64015c29:	or     DWORD PTR ds:0x6402f234,0xffffffff
64015c30:	jmp    0x6401b0ed
64015c35:	push   0xc
64015c37:	push   0x6402c090
64015c3c:	call   0x64015220
64015c41:	push   0x64026cfc
64015c46:	call   DWORD PTR ds:0x64026128
64015c4c:	mov    DWORD PTR [ebp-0x1c],eax
64015c4f:	mov    esi,DWORD PTR [ebp+0x8]
64015c52:	mov    DWORD PTR [esi+0x5c],0x6402f8c8
64015c59:	xor    edi,edi
64015c5b:	inc    edi
64015c5c:	mov    DWORD PTR [esi+0x14],edi
64015c5f:	test   eax,eax
64015c61:	je     0x64015c92
64015c63:	call   0x64015a6c
64015c68:	test   eax,eax
64015c6a:	je     0x64015c92
64015c6c:	push   0x64026cec
64015c71:	push   DWORD PTR [ebp-0x1c]
64015c74:	mov    ebx,DWORD PTR ds:0x64026014
64015c7a:	call   ebx
64015c7c:	mov    DWORD PTR [esi+0x1f8],eax
64015c82:	push   0x64026d0c
64015c87:	push   DWORD PTR [ebp-0x1c]
64015c8a:	call   ebx
64015c8c:	mov    DWORD PTR [esi+0x1fc],eax
64015c92:	mov    DWORD PTR [esi+0x70],edi
64015c95:	mov    BYTE PTR [esi+0xc8],0x43
64015c9c:	mov    BYTE PTR [esi+0x14b],0x43
64015ca3:	mov    eax,0x6402f268
64015ca8:	mov    DWORD PTR [esi+0x68],eax
64015cab:	push   eax
64015cac:	call   DWORD PTR ds:0x64026020
64015cb2:	push   0xc
64015cb4:	call   0x6401b21a
64015cb9:	pop    ecx
64015cba:	and    DWORD PTR [ebp-0x4],0x0
64015cbe:	mov    eax,DWORD PTR [ebp+0xc]
64015cc1:	mov    DWORD PTR [esi+0x6c],eax
64015cc4:	test   eax,eax
64015cc6:	jne    0x64015cd0
64015cc8:	mov    eax,ds:0x6402f870
64015ccd:	mov    DWORD PTR [esi+0x6c],eax
64015cd0:	push   DWORD PTR [esi+0x6c]
64015cd3:	call   0x64017b9f
64015cd8:	pop    ecx
64015cd9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ce0:	call   0x64015ceb
64015ce5:	call   0x64015265
64015cea:	ret    
64015ceb:	push   0xc
64015ced:	call   0x6401b142
64015cf2:	pop    ecx
64015cf3:	ret    
64015cf4:	push   esi
64015cf5:	push   edi
64015cf6:	call   DWORD PTR ds:0x64026044
64015cfc:	push   DWORD PTR ds:0x6402f230
64015d02:	mov    edi,eax
64015d04:	call   0x64015bc6
64015d09:	call   eax
64015d0b:	mov    esi,eax
64015d0d:	test   esi,esi
64015d0f:	jne    0x64015d5f
64015d11:	push   0x214
64015d16:	push   0x1
64015d18:	call   0x64016f70
64015d1d:	mov    esi,eax
64015d1f:	test   esi,esi
64015d21:	pop    ecx
64015d22:	pop    ecx
64015d23:	je     0x64015d5f
64015d25:	push   esi
64015d26:	push   DWORD PTR ds:0x6402f230
64015d2c:	push   DWORD PTR ds:0x64030594
64015d32:	call   0x64015b4f
64015d37:	pop    ecx
64015d38:	call   eax
64015d3a:	test   eax,eax
64015d3c:	je     0x64015d56
64015d3e:	push   0x0
64015d40:	push   esi
64015d41:	call   0x64015c35
64015d46:	pop    ecx
64015d47:	pop    ecx
64015d48:	call   DWORD PTR ds:0x64026120
64015d4e:	or     DWORD PTR [esi+0x4],0xffffffff
64015d52:	mov    DWORD PTR [esi],eax
64015d54:	jmp    0x64015d5f
64015d56:	push   esi
64015d57:	call   0x64014af6
64015d5c:	pop    ecx
64015d5d:	xor    esi,esi
64015d5f:	push   edi
64015d60:	call   DWORD PTR ds:0x64026060
64015d66:	pop    edi
64015d67:	mov    eax,esi
64015d69:	pop    esi
64015d6a:	ret    
64015d6b:	push   esi
64015d6c:	call   0x64015cf4
64015d71:	mov    esi,eax
64015d73:	test   esi,esi
64015d75:	jne    0x64015d7f
64015d77:	push   0x10
64015d79:	call   0x640170a6
64015d7e:	pop    ecx
64015d7f:	mov    eax,esi
64015d81:	pop    esi
64015d82:	ret    
64015d83:	push   0x8
64015d85:	push   0x6402c0b0
64015d8a:	call   0x64015220
64015d8f:	mov    esi,DWORD PTR [ebp+0x8]
64015d92:	test   esi,esi
64015d94:	je     0x64015e84
64015d9a:	mov    eax,DWORD PTR [esi+0x24]
64015d9d:	test   eax,eax
64015d9f:	je     0x64015da8
64015da1:	push   eax
64015da2:	call   0x64014af6
64015da7:	pop    ecx
64015da8:	mov    eax,DWORD PTR [esi+0x2c]
64015dab:	test   eax,eax
64015dad:	je     0x64015db6
64015daf:	push   eax
64015db0:	call   0x64014af6
64015db5:	pop    ecx
64015db6:	mov    eax,DWORD PTR [esi+0x34]
64015db9:	test   eax,eax
64015dbb:	je     0x64015dc4
64015dbd:	push   eax
64015dbe:	call   0x64014af6
64015dc3:	pop    ecx
64015dc4:	mov    eax,DWORD PTR [esi+0x3c]
64015dc7:	test   eax,eax
64015dc9:	je     0x64015dd2
64015dcb:	push   eax
64015dcc:	call   0x64014af6
64015dd1:	pop    ecx
64015dd2:	mov    eax,DWORD PTR [esi+0x44]
64015dd5:	test   eax,eax
64015dd7:	je     0x64015de0
64015dd9:	push   eax
64015dda:	call   0x64014af6
64015ddf:	pop    ecx
64015de0:	mov    eax,DWORD PTR [esi+0x48]
64015de3:	test   eax,eax
64015de5:	je     0x64015dee
64015de7:	push   eax
64015de8:	call   0x64014af6
64015ded:	pop    ecx
64015dee:	mov    eax,DWORD PTR [esi+0x5c]
64015df1:	cmp    eax,0x6402f8c8
64015df6:	je     0x64015dff
64015df8:	push   eax
64015df9:	call   0x64014af6
64015dfe:	pop    ecx
64015dff:	push   0xd
64015e01:	call   0x6401b21a
64015e06:	pop    ecx
64015e07:	and    DWORD PTR [ebp-0x4],0x0
64015e0b:	mov    edi,DWORD PTR [esi+0x68]
64015e0e:	test   edi,edi
64015e10:	je     0x64015e2c
64015e12:	push   edi
64015e13:	call   DWORD PTR ds:0x64026098
64015e19:	test   eax,eax
64015e1b:	jne    0x64015e2c
64015e1d:	cmp    edi,0x6402f268
64015e23:	je     0x64015e2c
64015e25:	push   edi
64015e26:	call   0x64014af6
64015e2b:	pop    ecx
64015e2c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015e33:	call   0x64015e8f
64015e38:	push   0xc
64015e3a:	call   0x6401b21a
64015e3f:	pop    ecx
64015e40:	mov    DWORD PTR [ebp-0x4],0x1
64015e47:	mov    edi,DWORD PTR [esi+0x6c]
64015e4a:	test   edi,edi
64015e4c:	je     0x64015e71
64015e4e:	push   edi
64015e4f:	call   0x64017c25
64015e54:	pop    ecx
64015e55:	cmp    edi,DWORD PTR ds:0x6402f870
64015e5b:	je     0x64015e71
64015e5d:	cmp    edi,0x6402f798
64015e63:	je     0x64015e71
64015e65:	cmp    DWORD PTR [edi],0x0
64015e68:	jne    0x64015e71
64015e6a:	push   edi
64015e6b:	call   0x64017a5f
64015e70:	pop    ecx
64015e71:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015e78:	call   0x64015e9b
64015e7d:	push   esi
64015e7e:	call   0x64014af6
64015e83:	pop    ecx
64015e84:	call   0x64015265
64015e89:	ret    0x4
64015e8c:	mov    esi,DWORD PTR [ebp+0x8]
64015e8f:	push   0xd
64015e91:	call   0x6401b142
64015e96:	pop    ecx
64015e97:	ret    
64015e98:	mov    esi,DWORD PTR [ebp+0x8]
64015e9b:	push   0xc
64015e9d:	call   0x6401b142
64015ea2:	pop    ecx
64015ea3:	ret    
64015ea4:	cmp    DWORD PTR ds:0x6402f230,0xffffffff
64015eab:	je     0x64015ef9
64015ead:	push   edi
64015eae:	mov    edi,DWORD PTR [esp+0x8]
64015eb2:	test   edi,edi
64015eb4:	jne    0x64015edc
64015eb6:	push   esi
64015eb7:	push   DWORD PTR ds:0x6402f234
64015ebd:	mov    esi,DWORD PTR ds:0x6402612c
64015ec3:	call   esi
64015ec5:	test   eax,eax
64015ec7:	je     0x64015edb
64015ec9:	push   DWORD PTR ds:0x6402f230
64015ecf:	push   DWORD PTR ds:0x6402f234
64015ed5:	call   esi
64015ed7:	call   eax
64015ed9:	mov    edi,eax
64015edb:	pop    esi
64015edc:	push   0x0
64015ede:	push   DWORD PTR ds:0x6402f230
64015ee4:	push   DWORD PTR ds:0x64030594
64015eea:	call   0x64015b4f
64015eef:	pop    ecx
64015ef0:	call   eax
64015ef2:	push   edi
64015ef3:	call   0x64015d83
64015ef8:	pop    edi
64015ef9:	mov    eax,ds:0x6402f234
64015efe:	cmp    eax,0xffffffff
64015f01:	je     0x64015f0c
64015f03:	push   0x0
64015f05:	push   eax
64015f06:	call   DWORD PTR ds:0x64026134
64015f0c:	ret    
64015f0d:	push   edi
64015f0e:	push   0x64026cfc
64015f13:	call   DWORD PTR ds:0x64026128
64015f19:	mov    edi,eax
64015f1b:	test   edi,edi
64015f1d:	jne    0x64015f28
64015f1f:	call   0x64015bf8
64015f24:	xor    eax,eax
64015f26:	pop    edi
64015f27:	ret    
64015f28:	push   esi
64015f29:	mov    esi,DWORD PTR ds:0x64026014
64015f2f:	push   0x64026d3c
64015f34:	push   edi
64015f35:	call   esi
64015f37:	push   0x64026d30
64015f3c:	push   edi
64015f3d:	mov    ds:0x6403058c,eax
64015f42:	call   esi
64015f44:	push   0x64026d24
64015f49:	push   edi
64015f4a:	mov    ds:0x64030590,eax
64015f4f:	call   esi
64015f51:	push   0x64026d1c
64015f56:	push   edi
64015f57:	mov    ds:0x64030594,eax
64015f5c:	call   esi
64015f5e:	cmp    DWORD PTR ds:0x6403058c,0x0
64015f65:	mov    esi,DWORD PTR ds:0x64026134
64015f6b:	mov    ds:0x64030598,eax
64015f70:	je     0x64015f88
64015f72:	cmp    DWORD PTR ds:0x64030590,0x0
64015f79:	je     0x64015f88
64015f7b:	cmp    DWORD PTR ds:0x64030594,0x0
64015f82:	je     0x64015f88
64015f84:	test   eax,eax
64015f86:	jne    0x64015fac
64015f88:	mov    eax,ds:0x6402612c
64015f8d:	mov    ds:0x64030590,eax
64015f92:	mov    eax,ds:0x64026138
64015f97:	mov    DWORD PTR ds:0x6403058c,0x64015bbd
64015fa1:	mov    DWORD PTR ds:0x64030594,esi
64015fa7:	mov    ds:0x64030598,eax
64015fac:	call   DWORD PTR ds:0x64026130
64015fb2:	cmp    eax,0xffffffff
64015fb5:	mov    ds:0x6402f234,eax
64015fba:	je     0x6401608c
64015fc0:	push   DWORD PTR ds:0x64030590
64015fc6:	push   eax
64015fc7:	call   esi
64015fc9:	test   eax,eax
64015fcb:	je     0x6401608c
64015fd1:	call   0x64017356
64015fd6:	push   DWORD PTR ds:0x6403058c
64015fdc:	call   0x64015ad8
64015fe1:	push   DWORD PTR ds:0x64030590
64015fe7:	mov    ds:0x6403058c,eax
64015fec:	call   0x64015ad8
64015ff1:	push   DWORD PTR ds:0x64030594
64015ff7:	mov    ds:0x64030590,eax
64015ffc:	call   0x64015ad8
64016001:	push   DWORD PTR ds:0x64030598
64016007:	mov    ds:0x64030594,eax
6401600c:	call   0x64015ad8
64016011:	add    esp,0x10
64016014:	mov    ds:0x64030598,eax
64016019:	call   0x6401b0a4
6401601e:	test   eax,eax
64016020:	je     0x64016087
64016022:	push   0x64015d83
64016027:	push   DWORD PTR ds:0x6403058c
6401602d:	call   0x64015b4f
64016032:	pop    ecx
64016033:	call   eax
64016035:	cmp    eax,0xffffffff
64016038:	mov    ds:0x6402f230,eax
6401603d:	je     0x64016087
6401603f:	push   0x214
64016044:	push   0x1
64016046:	call   0x64016f70
6401604b:	mov    esi,eax
6401604d:	test   esi,esi
6401604f:	pop    ecx
64016050:	pop    ecx
64016051:	je     0x64016087
64016053:	push   esi
64016054:	push   DWORD PTR ds:0x6402f230
6401605a:	push   DWORD PTR ds:0x64030594
64016060:	call   0x64015b4f
64016065:	pop    ecx
64016066:	call   eax
64016068:	test   eax,eax
6401606a:	je     0x64016087
6401606c:	push   0x0
6401606e:	push   esi
6401606f:	call   0x64015c35
64016074:	pop    ecx
64016075:	pop    ecx
64016076:	call   DWORD PTR ds:0x64026120
6401607c:	or     DWORD PTR [esi+0x4],0xffffffff
64016080:	mov    DWORD PTR [esi],eax
64016082:	xor    eax,eax
64016084:	inc    eax
64016085:	jmp    0x6401608e
64016087:	call   0x64015bf8
6401608c:	xor    eax,eax
6401608e:	pop    esi
6401608f:	pop    edi
64016090:	ret    
64016091:	mov    eax,DWORD PTR [esp+0x4]
64016095:	mov    ds:0x6403059c,eax
6401609a:	ret    
6401609b:	push   DWORD PTR ds:0x6403059c
640160a1:	call   0x64015b4f
640160a6:	test   eax,eax
640160a8:	pop    ecx
640160a9:	je     0x640160ba
640160ab:	push   DWORD PTR [esp+0x4]
640160af:	call   eax
640160b1:	test   eax,eax
640160b3:	pop    ecx
640160b4:	je     0x640160ba
640160b6:	xor    eax,eax
640160b8:	inc    eax
640160b9:	ret    
640160ba:	xor    eax,eax
640160bc:	ret    
640160bd:	mov    DWORD PTR [ecx],0x64026d50
640160c3:	jmp    0x6401351b
640160c8:	push   esi
640160c9:	mov    esi,ecx
640160cb:	mov    DWORD PTR [esi],0x64026d50
640160d1:	call   0x6401351b
640160d6:	test   BYTE PTR [esp+0x8],0x1
640160db:	je     0x640160e4
640160dd:	push   esi
640160de:	call   0x64013402
640160e3:	pop    ecx
640160e4:	mov    eax,esi
640160e6:	pop    esi
640160e7:	ret    0x4
640160ea:	push   esi
640160eb:	push   edi
640160ec:	mov    edi,DWORD PTR [esp+0xc]
640160f0:	mov    eax,DWORD PTR [edi+0x4]
640160f3:	test   eax,eax
640160f5:	je     0x64016140
640160f7:	lea    edx,[eax+0x8]
640160fa:	cmp    BYTE PTR [edx],0x0
640160fd:	je     0x64016140
640160ff:	mov    esi,DWORD PTR [esp+0x10]
64016103:	mov    ecx,DWORD PTR [esi+0x4]
64016106:	cmp    eax,ecx
64016108:	je     0x6401611e
6401610a:	add    ecx,0x8
6401610d:	push   ecx
6401610e:	push   edx
6401610f:	call   0x64015590
64016114:	test   eax,eax
64016116:	pop    ecx
64016117:	pop    ecx
64016118:	je     0x6401611e
6401611a:	xor    eax,eax
6401611c:	jmp    0x64016143
6401611e:	test   BYTE PTR [esi],0x2
64016121:	je     0x64016128
64016123:	test   BYTE PTR [edi],0x8
64016126:	je     0x6401611a
64016128:	mov    eax,DWORD PTR [esp+0x14]
6401612c:	mov    eax,DWORD PTR [eax]
6401612e:	test   al,0x1
64016130:	je     0x64016137
64016132:	test   BYTE PTR [edi],0x1
64016135:	je     0x6401611a
64016137:	test   al,0x2
64016139:	je     0x64016140
6401613b:	test   BYTE PTR [edi],0x2
6401613e:	je     0x6401611a
64016140:	xor    eax,eax
64016142:	inc    eax
64016143:	pop    edi
64016144:	pop    esi
64016145:	ret    
64016146:	mov    eax,DWORD PTR [esp+0x4]
6401614a:	mov    eax,DWORD PTR [eax]
6401614c:	mov    eax,DWORD PTR [eax]
6401614e:	cmp    eax,0xe0434f4d
64016153:	je     0x6401616d
64016155:	cmp    eax,0xe06d7363
6401615a:	jne    0x64016187
6401615c:	call   0x64015d6b
64016161:	and    DWORD PTR [eax+0x90],0x0
64016168:	jmp    0x64016d47
6401616d:	call   0x64015d6b
64016172:	cmp    DWORD PTR [eax+0x90],0x0
64016179:	jle    0x64016187
6401617b:	call   0x64015d6b
64016180:	add    eax,0x90
64016185:	dec    DWORD PTR [eax]
64016187:	xor    eax,eax
64016189:	ret    
6401618a:	push   0x10
6401618c:	push   0x6402c0d8
64016191:	call   0x64015220
64016196:	mov    edi,DWORD PTR [ebp+0x10]
64016199:	mov    ebx,DWORD PTR [ebp+0x8]
6401619c:	cmp    DWORD PTR [edi+0x4],0x80
640161a3:	jg     0x640161ab
640161a5:	movsx  esi,BYTE PTR [ebx+0x8]
640161a9:	jmp    0x640161ae
640161ab:	mov    esi,DWORD PTR [ebx+0x8]
640161ae:	mov    DWORD PTR [ebp-0x1c],esi
640161b1:	call   0x64015d6b
640161b6:	add    eax,0x90
640161bb:	inc    DWORD PTR [eax]
640161bd:	and    DWORD PTR [ebp-0x4],0x0
640161c1:	cmp    esi,DWORD PTR [ebp+0x14]
640161c4:	je     0x6401622b
640161c6:	cmp    esi,0xffffffff
640161c9:	jle    0x640161d0
640161cb:	cmp    esi,DWORD PTR [edi+0x4]
640161ce:	jl     0x640161d5
640161d0:	call   0x64016d93
640161d5:	mov    eax,esi
640161d7:	shl    eax,0x3
640161da:	mov    ecx,DWORD PTR [edi+0x8]
640161dd:	add    ecx,eax
640161df:	mov    esi,DWORD PTR [ecx]
640161e1:	mov    DWORD PTR [ebp-0x20],esi
640161e4:	mov    DWORD PTR [ebp-0x4],0x1
640161eb:	cmp    DWORD PTR [ecx+0x4],0x0
640161ef:	je     0x64016206
640161f1:	mov    DWORD PTR [ebx+0x8],esi
640161f4:	push   0x103
640161f9:	push   ebx
640161fa:	mov    ecx,DWORD PTR [edi+0x8]
640161fd:	push   DWORD PTR [ecx+eax*1+0x4]
64016201:	call   0x64016de0
64016206:	and    DWORD PTR [ebp-0x4],0x0
6401620a:	jmp    0x64016226
6401620c:	push   DWORD PTR [ebp-0x14]
6401620f:	call   0x64016146
64016214:	pop    ecx
64016215:	ret    
64016216:	mov    esp,DWORD PTR [ebp-0x18]
64016219:	and    DWORD PTR [ebp-0x4],0x0
6401621d:	mov    edi,DWORD PTR [ebp+0x10]
64016220:	mov    ebx,DWORD PTR [ebp+0x8]
64016223:	mov    esi,DWORD PTR [ebp-0x20]
64016226:	mov    DWORD PTR [ebp-0x1c],esi
64016229:	jmp    0x640161c1
6401622b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016232:	call   0x64016250
64016237:	cmp    esi,DWORD PTR [ebp+0x14]
6401623a:	je     0x64016241
6401623c:	call   0x64016d93
64016241:	mov    DWORD PTR [ebx+0x8],esi
64016244:	call   0x64015265
64016249:	ret    
6401624a:	mov    ebx,DWORD PTR [ebp+0x8]
6401624d:	mov    esi,DWORD PTR [ebp-0x1c]
64016250:	call   0x64015d6b
64016255:	cmp    DWORD PTR [eax+0x90],0x0
6401625c:	jle    0x6401626a
6401625e:	call   0x64015d6b
64016263:	add    eax,0x90
64016268:	dec    DWORD PTR [eax]
6401626a:	ret    
6401626b:	mov    eax,DWORD PTR [eax]
6401626d:	cmp    DWORD PTR [eax],0xe06d7363
64016273:	jne    0x640162ad
64016275:	cmp    DWORD PTR [eax+0x10],0x3
64016279:	jne    0x640162ad
6401627b:	mov    ecx,DWORD PTR [eax+0x14]
6401627e:	cmp    ecx,0x19930520
64016284:	je     0x64016296
64016286:	cmp    ecx,0x19930521
6401628c:	je     0x64016296
6401628e:	cmp    ecx,0x19930522
64016294:	jne    0x640162ad
64016296:	cmp    DWORD PTR [eax+0x1c],0x0
6401629a:	jne    0x640162ad
6401629c:	call   0x64015d6b
640162a1:	xor    ecx,ecx
640162a3:	inc    ecx
640162a4:	mov    DWORD PTR [eax+0x20c],ecx
640162aa:	mov    eax,ecx
640162ac:	ret    
640162ad:	xor    eax,eax
640162af:	ret    
640162b0:	push   0x8
640162b2:	push   0x6402c100
640162b7:	call   0x64015220
640162bc:	mov    ecx,DWORD PTR [ebp+0x8]
640162bf:	test   ecx,ecx
640162c1:	je     0x640162ed
640162c3:	cmp    DWORD PTR [ecx],0xe06d7363
640162c9:	jne    0x640162ed
640162cb:	mov    eax,DWORD PTR [ecx+0x1c]
640162ce:	test   eax,eax
640162d0:	je     0x640162ed
640162d2:	mov    eax,DWORD PTR [eax+0x4]
640162d5:	test   eax,eax
640162d7:	je     0x640162ed
640162d9:	and    DWORD PTR [ebp-0x4],0x0
640162dd:	push   eax
640162de:	push   DWORD PTR [ecx+0x18]
640162e1:	call   0x640138c5
640162e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640162ed:	call   0x64015265
640162f2:	ret    
640162f3:	xor    eax,eax
640162f5:	cmp    BYTE PTR [ebp+0xc],al
640162f8:	setne  al
640162fb:	ret    
640162fc:	mov    esp,DWORD PTR [ebp-0x18]
640162ff:	jmp    0x64016d47
64016304:	mov    ecx,DWORD PTR [esp+0x8]
64016308:	mov    eax,DWORD PTR [ecx]
6401630a:	push   esi
6401630b:	mov    esi,DWORD PTR [esp+0x8]
6401630f:	add    eax,esi
64016311:	cmp    DWORD PTR [ecx+0x4],0x0
64016315:	jl     0x64016327
64016317:	mov    edx,DWORD PTR [ecx+0x4]
6401631a:	mov    ecx,DWORD PTR [ecx+0x8]
6401631d:	mov    esi,DWORD PTR [edx+esi*1]
64016320:	mov    ecx,DWORD PTR [esi+ecx*1]
64016323:	add    ecx,edx
64016325:	add    eax,ecx
64016327:	pop    esi
64016328:	ret    
64016329:	push   ebp
6401632a:	mov    ebp,esp
6401632c:	sub    esp,0xc
6401632f:	test   edi,edi
64016331:	jne    0x6401633d
64016333:	call   0x64016d93
64016338:	jmp    0x64016d47
6401633d:	and    DWORD PTR [ebp-0x8],0x0
64016341:	cmp    DWORD PTR [edi],0x0
64016344:	mov    BYTE PTR [ebp-0x1],0x0
64016348:	jle    0x6401639d
6401634a:	push   ebx
6401634b:	push   esi
6401634c:	mov    eax,DWORD PTR [ebp+0x8]
6401634f:	mov    eax,DWORD PTR [eax+0x1c]
64016352:	mov    eax,DWORD PTR [eax+0xc]
64016355:	mov    ebx,DWORD PTR [eax]
64016357:	test   ebx,ebx
64016359:	lea    esi,[eax+0x4]
6401635c:	jle    0x64016391
6401635e:	mov    eax,DWORD PTR [ebp-0x8]
64016361:	shl    eax,0x4
64016364:	mov    DWORD PTR [ebp-0xc],eax
64016367:	mov    ecx,DWORD PTR [ebp+0x8]
6401636a:	push   DWORD PTR [ecx+0x1c]
6401636d:	mov    eax,DWORD PTR [esi]
6401636f:	push   eax
64016370:	mov    eax,DWORD PTR [edi+0x4]
64016373:	add    eax,DWORD PTR [ebp-0xc]
64016376:	push   eax
64016377:	call   0x640160ea
6401637c:	add    esp,0xc
6401637f:	test   eax,eax
64016381:	jne    0x6401638d
64016383:	dec    ebx
64016384:	add    esi,0x4
64016387:	test   ebx,ebx
64016389:	jg     0x64016367
6401638b:	jmp    0x64016391
6401638d:	mov    BYTE PTR [ebp-0x1],0x1
64016391:	inc    DWORD PTR [ebp-0x8]
64016394:	mov    eax,DWORD PTR [ebp-0x8]
64016397:	cmp    eax,DWORD PTR [edi]
64016399:	jl     0x6401634c
6401639b:	pop    esi
6401639c:	pop    ebx
6401639d:	mov    al,BYTE PTR [ebp-0x1]
640163a0:	leave  
640163a1:	ret    
640163a2:	push   0x4
640163a4:	mov    eax,0x640235f3
640163a9:	call   0x640154de
640163ae:	call   0x64015d6b
640163b3:	cmp    DWORD PTR [eax+0x94],0x0
640163ba:	je     0x640163c1
640163bc:	call   0x64016d93
640163c1:	and    DWORD PTR [ebp-0x4],0x0
640163c5:	call   0x64016d80
640163ca:	or     DWORD PTR [ebp-0x4],0xffffffff
640163ce:	jmp    0x64016d47
640163d3:	call   0x64015d6b
640163d8:	mov    ecx,DWORD PTR [ebp+0x8]
640163db:	push   0x0
640163dd:	push   0x0
640163df:	mov    DWORD PTR [eax+0x94],ecx
640163e5:	call   0x6401384b
640163ea:	int3   
640163eb:	push   0x2c
640163ed:	push   0x6402c178
640163f2:	call   0x64015220
640163f7:	mov    ebx,ecx
640163f9:	mov    edi,DWORD PTR [ebp+0xc]
640163fc:	mov    esi,DWORD PTR [ebp+0x8]
640163ff:	mov    DWORD PTR [ebp-0x1c],ebx
64016402:	and    DWORD PTR [ebp-0x34],0x0
64016406:	mov    eax,DWORD PTR [edi-0x4]
64016409:	mov    DWORD PTR [ebp-0x24],eax
6401640c:	push   DWORD PTR [esi+0x18]
6401640f:	lea    eax,[ebp-0x3c]
64016412:	push   eax
64016413:	call   0x64013b69
64016418:	pop    ecx
64016419:	pop    ecx
6401641a:	mov    DWORD PTR [ebp-0x28],eax
6401641d:	call   0x64015d6b
64016422:	mov    eax,DWORD PTR [eax+0x88]
64016428:	mov    DWORD PTR [ebp-0x2c],eax
6401642b:	call   0x64015d6b
64016430:	mov    eax,DWORD PTR [eax+0x8c]
64016436:	mov    DWORD PTR [ebp-0x30],eax
64016439:	call   0x64015d6b
6401643e:	mov    DWORD PTR [eax+0x88],esi
64016444:	call   0x64015d6b
64016449:	mov    ecx,DWORD PTR [ebp+0x10]
6401644c:	mov    DWORD PTR [eax+0x8c],ecx
64016452:	and    DWORD PTR [ebp-0x4],0x0
64016456:	xor    eax,eax
64016458:	inc    eax
64016459:	mov    DWORD PTR [ebp+0x10],eax
6401645c:	mov    DWORD PTR [ebp-0x4],eax
6401645f:	push   DWORD PTR [ebp+0x1c]
64016462:	push   DWORD PTR [ebp+0x18]
64016465:	push   ebx
64016466:	push   DWORD PTR [ebp+0x14]
64016469:	push   edi
6401646a:	call   0x64013bfe
6401646f:	add    esp,0x14
64016472:	mov    DWORD PTR [ebp-0x1c],eax
64016475:	and    DWORD PTR [ebp-0x4],0x0
64016479:	jmp    0x640164ea
6401647b:	mov    eax,DWORD PTR [ebp-0x14]
6401647e:	call   0x6401626b
64016483:	ret    
64016484:	mov    esp,DWORD PTR [ebp-0x18]
64016487:	call   0x64015d6b
6401648c:	and    DWORD PTR [eax+0x20c],0x0
64016493:	mov    esi,DWORD PTR [ebp+0x14]
64016496:	mov    edi,DWORD PTR [ebp+0xc]
64016499:	cmp    DWORD PTR [esi+0x4],0x80
640164a0:	jg     0x640164a8
640164a2:	movsx  ecx,BYTE PTR [edi+0x8]
640164a6:	jmp    0x640164ab
640164a8:	mov    ecx,DWORD PTR [edi+0x8]
640164ab:	mov    ebx,DWORD PTR [esi+0x10]
640164ae:	and    DWORD PTR [ebp-0x20],0x0
640164b2:	mov    eax,DWORD PTR [ebp-0x20]
640164b5:	cmp    eax,DWORD PTR [esi+0xc]
640164b8:	jae    0x640164d2
640164ba:	imul   eax,eax,0x14
640164bd:	add    eax,ebx
640164bf:	mov    edx,DWORD PTR [eax+0x4]
640164c2:	cmp    ecx,edx
640164c4:	jle    0x64016506
640164c6:	cmp    ecx,DWORD PTR [eax+0x8]
640164c9:	jg     0x64016506
640164cb:	mov    eax,DWORD PTR [esi+0x8]
640164ce:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
640164d2:	push   ecx
640164d3:	push   esi
640164d4:	push   0x0
640164d6:	push   edi
640164d7:	call   0x6401618a
640164dc:	add    esp,0x10
640164df:	and    DWORD PTR [ebp-0x1c],0x0
640164e3:	and    DWORD PTR [ebp-0x4],0x0
640164e7:	mov    esi,DWORD PTR [ebp+0x8]
640164ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640164f1:	mov    DWORD PTR [ebp+0x10],0x0
640164f8:	call   0x64016511
640164fd:	mov    eax,DWORD PTR [ebp-0x1c]
64016500:	call   0x64015265
64016505:	ret    
64016506:	inc    DWORD PTR [ebp-0x20]
64016509:	jmp    0x640164b2
6401650b:	mov    edi,DWORD PTR [ebp+0xc]
6401650e:	mov    esi,DWORD PTR [ebp+0x8]
64016511:	mov    eax,DWORD PTR [ebp-0x24]
64016514:	mov    DWORD PTR [edi-0x4],eax
64016517:	push   DWORD PTR [ebp-0x28]
6401651a:	call   0x64013bb2
6401651f:	pop    ecx
64016520:	call   0x64015d6b
64016525:	mov    ecx,DWORD PTR [ebp-0x2c]
64016528:	mov    DWORD PTR [eax+0x88],ecx
6401652e:	call   0x64015d6b
64016533:	mov    ecx,DWORD PTR [ebp-0x30]
64016536:	mov    DWORD PTR [eax+0x8c],ecx
6401653c:	cmp    DWORD PTR [esi],0xe06d7363
64016542:	jne    0x64016586
64016544:	cmp    DWORD PTR [esi+0x10],0x3
64016548:	jne    0x64016586
6401654a:	mov    eax,DWORD PTR [esi+0x14]
6401654d:	cmp    eax,0x19930520
64016552:	je     0x64016562
64016554:	cmp    eax,0x19930521
64016559:	je     0x64016562
6401655b:	cmp    eax,0x19930522
64016560:	jne    0x64016586
64016562:	cmp    DWORD PTR [ebp-0x34],0x0
64016566:	jne    0x64016586
64016568:	cmp    DWORD PTR [ebp-0x1c],0x0
6401656c:	je     0x64016586
6401656e:	push   DWORD PTR [esi+0x18]
64016571:	call   0x64013b91
64016576:	pop    ecx
64016577:	test   eax,eax
64016579:	je     0x64016586
6401657b:	push   DWORD PTR [ebp+0x10]
6401657e:	push   esi
6401657f:	call   0x640162b0
64016584:	pop    ecx
64016585:	pop    ecx
64016586:	ret    
64016587:	push   0xc
64016589:	push   0x6402c1a0
6401658e:	call   0x64015220
64016593:	xor    edx,edx
64016595:	mov    DWORD PTR [ebp-0x1c],edx
64016598:	mov    eax,DWORD PTR [ebp+0x10]
6401659b:	mov    ecx,DWORD PTR [eax+0x4]
6401659e:	cmp    ecx,edx
640165a0:	je     0x640166fe
640165a6:	cmp    BYTE PTR [ecx+0x8],dl
640165a9:	je     0x640166fe
640165af:	mov    ecx,DWORD PTR [eax+0x8]
640165b2:	cmp    ecx,edx
640165b4:	jne    0x640165c2
640165b6:	test   DWORD PTR [eax],0x80000000
640165bc:	je     0x640166fe
640165c2:	mov    eax,DWORD PTR [eax]
640165c4:	mov    esi,DWORD PTR [ebp+0xc]
640165c7:	test   eax,eax
640165c9:	js     0x640165cf
640165cb:	lea    esi,[ecx+esi*1+0xc]
640165cf:	mov    DWORD PTR [ebp-0x4],edx
640165d2:	xor    ebx,ebx
640165d4:	inc    ebx
640165d5:	push   ebx
640165d6:	test   al,0x8
640165d8:	je     0x6401661b
640165da:	mov    edi,DWORD PTR [ebp+0x8]
640165dd:	push   DWORD PTR [edi+0x18]
640165e0:	call   0x6401c32b
640165e5:	pop    ecx
640165e6:	pop    ecx
640165e7:	test   eax,eax
640165e9:	je     0x640166e1
640165ef:	push   ebx
640165f0:	push   esi
640165f1:	call   0x6401c32b
640165f6:	pop    ecx
640165f7:	pop    ecx
640165f8:	test   eax,eax
640165fa:	je     0x640166e1
64016600:	mov    eax,DWORD PTR [edi+0x18]
64016603:	mov    DWORD PTR [esi],eax
64016605:	mov    ecx,DWORD PTR [ebp+0x14]
64016608:	add    ecx,0x8
6401660b:	push   ecx
6401660c:	push   eax
6401660d:	call   0x64016304
64016612:	pop    ecx
64016613:	pop    ecx
64016614:	mov    DWORD PTR [esi],eax
64016616:	jmp    0x640166e6
6401661b:	mov    edi,DWORD PTR [ebp+0x14]
6401661e:	mov    eax,DWORD PTR [ebp+0x8]
64016621:	push   DWORD PTR [eax+0x18]
64016624:	test   BYTE PTR [edi],bl
64016626:	je     0x64016670
64016628:	call   0x6401c32b
6401662d:	pop    ecx
6401662e:	pop    ecx
6401662f:	test   eax,eax
64016631:	je     0x640166e1
64016637:	push   ebx
64016638:	push   esi
64016639:	call   0x6401c32b
6401663e:	pop    ecx
6401663f:	pop    ecx
64016640:	test   eax,eax
64016642:	je     0x640166e1
64016648:	push   DWORD PTR [edi+0x14]
6401664b:	mov    eax,DWORD PTR [ebp+0x8]
6401664e:	push   DWORD PTR [eax+0x18]
64016651:	push   esi
64016652:	call   0x64014ca0
64016657:	add    esp,0xc
6401665a:	cmp    DWORD PTR [edi+0x14],0x4
6401665e:	jne    0x640166e6
64016664:	mov    eax,DWORD PTR [esi]
64016666:	test   eax,eax
64016668:	je     0x640166e6
6401666a:	add    edi,0x8
6401666d:	push   edi
6401666e:	jmp    0x6401660c
64016670:	cmp    DWORD PTR [edi+0x18],edx
64016673:	jne    0x640166ad
64016675:	call   0x6401c32b
6401667a:	pop    ecx
6401667b:	pop    ecx
6401667c:	test   eax,eax
6401667e:	je     0x640166e1
64016680:	push   ebx
64016681:	push   esi
64016682:	call   0x6401c32b
64016687:	pop    ecx
64016688:	pop    ecx
64016689:	test   eax,eax
6401668b:	je     0x640166e1
6401668d:	push   DWORD PTR [edi+0x14]
64016690:	add    edi,0x8
64016693:	push   edi
64016694:	mov    eax,DWORD PTR [ebp+0x8]
64016697:	push   DWORD PTR [eax+0x18]
6401669a:	call   0x64016304
6401669f:	pop    ecx
640166a0:	pop    ecx
640166a1:	push   eax
640166a2:	push   esi
640166a3:	call   0x64014ca0
640166a8:	add    esp,0xc
640166ab:	jmp    0x640166e6
640166ad:	call   0x6401c32b
640166b2:	pop    ecx
640166b3:	pop    ecx
640166b4:	test   eax,eax
640166b6:	je     0x640166e1
640166b8:	push   ebx
640166b9:	push   esi
640166ba:	call   0x6401c32b
640166bf:	pop    ecx
640166c0:	pop    ecx
640166c1:	test   eax,eax
640166c3:	je     0x640166e1
640166c5:	push   DWORD PTR [edi+0x18]
640166c8:	call   0x6401c32b
640166cd:	pop    ecx
640166ce:	test   eax,eax
640166d0:	je     0x640166e1
640166d2:	test   BYTE PTR [edi],0x4
640166d5:	push   0x0
640166d7:	pop    eax
640166d8:	setne  al
640166db:	inc    eax
640166dc:	mov    DWORD PTR [ebp-0x1c],eax
640166df:	jmp    0x640166e6
640166e1:	call   0x64016d93
640166e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640166ed:	mov    eax,DWORD PTR [ebp-0x1c]
640166f0:	jmp    0x64016700
640166f2:	xor    eax,eax
640166f4:	inc    eax
640166f5:	ret    
640166f6:	mov    esp,DWORD PTR [ebp-0x18]
640166f9:	jmp    0x64016d47
640166fe:	xor    eax,eax
64016700:	call   0x64015265
64016705:	ret    
64016706:	push   0x8
64016708:	push   0x6402c1c0
6401670d:	call   0x64015220
64016712:	mov    eax,DWORD PTR [ebp+0x10]
64016715:	test   DWORD PTR [eax],0x80000000
6401671b:	je     0x64016722
6401671d:	mov    ebx,DWORD PTR [ebp+0xc]
64016720:	jmp    0x6401672c
64016722:	mov    ecx,DWORD PTR [eax+0x8]
64016725:	mov    edx,DWORD PTR [ebp+0xc]
64016728:	lea    ebx,[ecx+edx*1+0xc]
6401672c:	and    DWORD PTR [ebp-0x4],0x0
64016730:	mov    esi,DWORD PTR [ebp+0x14]
64016733:	push   esi
64016734:	push   eax
64016735:	push   DWORD PTR [ebp+0xc]
64016738:	mov    edi,DWORD PTR [ebp+0x8]
6401673b:	push   edi
6401673c:	call   0x64016587
64016741:	add    esp,0x10
64016744:	dec    eax
64016745:	je     0x64016766
64016747:	dec    eax
64016748:	jne    0x6401677e
6401674a:	push   0x1
6401674c:	lea    eax,[esi+0x8]
6401674f:	push   eax
64016750:	push   DWORD PTR [edi+0x18]
64016753:	call   0x64016304
64016758:	pop    ecx
64016759:	pop    ecx
6401675a:	push   eax
6401675b:	push   DWORD PTR [esi+0x18]
6401675e:	push   ebx
6401675f:	call   0x640138c5
64016764:	jmp    0x6401677e
64016766:	lea    eax,[esi+0x8]
64016769:	push   eax
6401676a:	push   DWORD PTR [edi+0x18]
6401676d:	call   0x64016304
64016772:	pop    ecx
64016773:	pop    ecx
64016774:	push   eax
64016775:	push   DWORD PTR [esi+0x18]
64016778:	push   ebx
64016779:	call   0x640138c5
6401677e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016785:	call   0x64015265
6401678a:	ret    
6401678b:	xor    eax,eax
6401678d:	inc    eax
6401678e:	ret    
6401678f:	mov    esp,DWORD PTR [ebp-0x18]
64016792:	jmp    0x64016d47
64016797:	push   ebp
64016798:	mov    ebp,esp
6401679a:	cmp    DWORD PTR [ebp+0x18],0x0
6401679e:	je     0x640167b0
640167a0:	push   DWORD PTR [ebp+0x18]
640167a3:	push   ebx
640167a4:	push   esi
640167a5:	push   DWORD PTR [ebp+0x8]
640167a8:	call   0x64016706
640167ad:	add    esp,0x10
640167b0:	cmp    DWORD PTR [ebp+0x20],0x0
640167b4:	push   DWORD PTR [ebp+0x8]
640167b7:	jne    0x640167bc
640167b9:	push   esi
640167ba:	jmp    0x640167bf
640167bc:	push   DWORD PTR [ebp+0x20]
640167bf:	call   0x640138cc
640167c4:	push   DWORD PTR [edi]
640167c6:	push   DWORD PTR [ebp+0x14]
640167c9:	push   DWORD PTR [ebp+0x10]
640167cc:	push   esi
640167cd:	call   0x6401618a
640167d2:	mov    eax,DWORD PTR [edi+0x4]
640167d5:	push   0x100
640167da:	push   DWORD PTR [ebp+0x1c]
640167dd:	inc    eax
640167de:	push   DWORD PTR [ebp+0x14]
640167e1:	mov    DWORD PTR [esi+0x8],eax
640167e4:	push   DWORD PTR [ebp+0xc]
640167e7:	mov    ecx,DWORD PTR [ebx+0xc]
640167ea:	push   esi
640167eb:	push   DWORD PTR [ebp+0x8]
640167ee:	call   0x640163eb
640167f3:	add    esp,0x28
640167f6:	test   eax,eax
640167f8:	je     0x64016801
640167fa:	push   esi
640167fb:	push   eax
640167fc:	call   0x64013895
64016801:	pop    ebp
64016802:	ret    
64016803:	push   ebp
64016804:	mov    ebp,esp
64016806:	push   ecx
64016807:	push   ecx
64016808:	push   esi
64016809:	mov    esi,DWORD PTR [ebp+0x8]
6401680c:	cmp    DWORD PTR [esi],0x80000003
64016812:	je     0x640168f2
64016818:	push   edi
64016819:	call   0x64015d6b
6401681e:	cmp    DWORD PTR [eax+0x80],0x0
64016825:	je     0x64016866
64016827:	call   0x64015d6b
6401682c:	lea    edi,[eax+0x80]
64016832:	call   0x64015b46
64016837:	cmp    DWORD PTR [edi],eax
64016839:	je     0x64016866
6401683b:	cmp    DWORD PTR [esi],0xe0434f4d
64016841:	je     0x64016866
64016843:	push   DWORD PTR [ebp+0x24]
64016846:	push   DWORD PTR [ebp+0x20]
64016849:	push   DWORD PTR [ebp+0x18]
6401684c:	push   DWORD PTR [ebp+0x14]
6401684f:	push   DWORD PTR [ebp+0x10]
64016852:	push   DWORD PTR [ebp+0xc]
64016855:	push   esi
64016856:	call   0x64013984
6401685b:	add    esp,0x1c
6401685e:	test   eax,eax
64016860:	jne    0x640168f1
64016866:	mov    edi,DWORD PTR [ebp+0x18]
64016869:	cmp    DWORD PTR [edi+0xc],0x0
6401686d:	jne    0x64016874
6401686f:	call   0x64016d93
64016874:	mov    esi,DWORD PTR [ebp+0x1c]
64016877:	lea    eax,[ebp-0x8]
6401687a:	push   eax
6401687b:	lea    eax,[ebp-0x4]
6401687e:	push   eax
6401687f:	push   esi
64016880:	push   DWORD PTR [ebp+0x20]
64016883:	push   edi
64016884:	call   0x64013af6
64016889:	mov    edi,eax
6401688b:	mov    eax,DWORD PTR [ebp-0x4]
6401688e:	add    esp,0x14
64016891:	cmp    eax,DWORD PTR [ebp-0x8]
64016894:	jae    0x640168f1
64016896:	push   ebx
64016897:	cmp    esi,DWORD PTR [edi]
64016899:	jl     0x640168e2
6401689b:	cmp    esi,DWORD PTR [edi+0x4]
6401689e:	jg     0x640168e2
640168a0:	mov    eax,DWORD PTR [edi+0xc]
640168a3:	mov    ecx,DWORD PTR [edi+0x10]
640168a6:	shl    eax,0x4
640168a9:	add    eax,ecx
640168ab:	mov    ecx,DWORD PTR [eax-0xc]
640168ae:	test   ecx,ecx
640168b0:	je     0x640168b8
640168b2:	cmp    BYTE PTR [ecx+0x8],0x0
640168b6:	jne    0x640168e2
640168b8:	lea    ebx,[eax-0x10]
640168bb:	test   BYTE PTR [ebx],0x40
640168be:	jne    0x640168e2
640168c0:	push   DWORD PTR [ebp+0x24]
640168c3:	mov    esi,DWORD PTR [ebp+0xc]
640168c6:	push   DWORD PTR [ebp+0x20]
640168c9:	push   0x0
640168cb:	push   DWORD PTR [ebp+0x18]
640168ce:	push   DWORD PTR [ebp+0x14]
640168d1:	push   DWORD PTR [ebp+0x10]
640168d4:	push   DWORD PTR [ebp+0x8]
640168d7:	call   0x64016797
640168dc:	mov    esi,DWORD PTR [ebp+0x1c]
640168df:	add    esp,0x1c
640168e2:	inc    DWORD PTR [ebp-0x4]
640168e5:	mov    eax,DWORD PTR [ebp-0x4]
640168e8:	add    edi,0x14
640168eb:	cmp    eax,DWORD PTR [ebp-0x8]
640168ee:	jb     0x64016897
640168f0:	pop    ebx
640168f1:	pop    edi
640168f2:	pop    esi
640168f3:	leave  
640168f4:	ret    
640168f5:	push   ebp
640168f6:	mov    ebp,esp
640168f8:	sub    esp,0x2c
640168fb:	mov    ecx,DWORD PTR [ebp+0xc]
640168fe:	push   ebx
640168ff:	mov    ebx,DWORD PTR [ebp+0x18]
64016902:	mov    eax,DWORD PTR [ebx+0x4]
64016905:	cmp    eax,0x80
6401690a:	push   esi
6401690b:	push   edi
6401690c:	mov    BYTE PTR [ebp-0x1],0x0
64016910:	jg     0x64016918
64016912:	movsx  ecx,BYTE PTR [ecx+0x8]
64016916:	jmp    0x6401691b
64016918:	mov    ecx,DWORD PTR [ecx+0x8]
6401691b:	cmp    ecx,0xffffffff
6401691e:	mov    DWORD PTR [ebp-0x8],ecx
64016921:	jl     0x64016927
64016923:	cmp    ecx,eax
64016925:	jl     0x6401692c
64016927:	call   0x64016d93
6401692c:	mov    esi,DWORD PTR [ebp+0x8]
6401692f:	mov    edi,0xe06d7363
64016934:	cmp    DWORD PTR [esi],edi
64016936:	jne    0x64016c07
6401693c:	cmp    DWORD PTR [esi+0x10],0x3
64016940:	mov    ebx,0x19930520
64016945:	jne    0x64016a74
6401694b:	mov    eax,DWORD PTR [esi+0x14]
6401694e:	cmp    eax,ebx
64016950:	je     0x64016964
64016952:	cmp    eax,0x19930521
64016957:	je     0x64016964
64016959:	cmp    eax,0x19930522
6401695e:	jne    0x64016a74
64016964:	cmp    DWORD PTR [esi+0x1c],0x0
64016968:	jne    0x64016a74
6401696e:	call   0x64015d6b
64016973:	cmp    DWORD PTR [eax+0x88],0x0
6401697a:	je     0x64016c46
64016980:	call   0x64015d6b
64016985:	mov    esi,DWORD PTR [eax+0x88]
6401698b:	mov    DWORD PTR [ebp+0x8],esi
6401698e:	call   0x64015d6b
64016993:	mov    eax,DWORD PTR [eax+0x8c]
64016999:	push   0x1
6401699b:	push   esi
6401699c:	mov    DWORD PTR [ebp+0x10],eax
6401699f:	call   0x6401c32b
640169a4:	test   eax,eax
640169a6:	pop    ecx
640169a7:	pop    ecx
640169a8:	jne    0x640169af
640169aa:	call   0x64016d93
640169af:	cmp    DWORD PTR [esi],edi
640169b1:	jne    0x640169d9
640169b3:	cmp    DWORD PTR [esi+0x10],0x3
640169b7:	jne    0x640169d9
640169b9:	mov    eax,DWORD PTR [esi+0x14]
640169bc:	cmp    eax,ebx
640169be:	je     0x640169ce
640169c0:	cmp    eax,0x19930521
640169c5:	je     0x640169ce
640169c7:	cmp    eax,0x19930522
640169cc:	jne    0x640169d9
640169ce:	cmp    DWORD PTR [esi+0x1c],0x0
640169d2:	jne    0x640169d9
640169d4:	call   0x64016d93
640169d9:	call   0x64015d6b
640169de:	cmp    DWORD PTR [eax+0x94],0x0
640169e5:	je     0x64016a74
640169eb:	call   0x64015d6b
640169f0:	mov    edi,DWORD PTR [eax+0x94]
640169f6:	call   0x64015d6b
640169fb:	push   DWORD PTR [ebp+0x8]
640169fe:	xor    esi,esi
64016a00:	mov    DWORD PTR [eax+0x94],esi
64016a06:	call   0x64016329
64016a0b:	test   al,al
64016a0d:	pop    ecx
64016a0e:	jne    0x64016a6c
64016a10:	xor    ebx,ebx
64016a12:	cmp    DWORD PTR [edi],ebx
64016a14:	jle    0x64016a33
64016a16:	mov    eax,DWORD PTR [edi+0x4]
64016a19:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64016a1d:	push   0x6402f23c
64016a22:	call   0x64013431
64016a27:	test   al,al
64016a29:	jne    0x64016a38
64016a2b:	inc    esi
64016a2c:	add    ebx,0x10
64016a2f:	cmp    esi,DWORD PTR [edi]
64016a31:	jl     0x64016a16
64016a33:	jmp    0x64016d47
64016a38:	push   0x1
64016a3a:	push   DWORD PTR [ebp+0x8]
64016a3d:	call   0x640162b0
64016a42:	pop    ecx
64016a43:	pop    ecx
64016a44:	lea    eax,[ebp+0x8]
64016a47:	push   eax
64016a48:	lea    ecx,[ebp-0x2c]
64016a4b:	mov    DWORD PTR [ebp+0x8],0x64026d58
64016a52:	call   0x6401345d
64016a57:	push   0x6402c1dc
64016a5c:	lea    eax,[ebp-0x2c]
64016a5f:	push   eax
64016a60:	mov    DWORD PTR [ebp-0x2c],0x64026d50
64016a67:	call   0x6401384b
64016a6c:	mov    esi,DWORD PTR [ebp+0x8]
64016a6f:	mov    edi,0xe06d7363
64016a74:	cmp    DWORD PTR [esi],edi
64016a76:	jne    0x64016c04
64016a7c:	cmp    DWORD PTR [esi+0x10],0x3
64016a80:	jne    0x64016c04
64016a86:	mov    eax,DWORD PTR [esi+0x14]
64016a89:	cmp    eax,ebx
64016a8b:	je     0x64016a9f
64016a8d:	cmp    eax,0x19930521
64016a92:	je     0x64016a9f
64016a94:	cmp    eax,0x19930522
64016a99:	jne    0x64016c04
64016a9f:	mov    edi,DWORD PTR [ebp+0x18]
64016aa2:	cmp    DWORD PTR [edi+0xc],0x0
64016aa6:	jbe    0x64016b6b
64016aac:	lea    eax,[ebp-0x1c]
64016aaf:	push   eax
64016ab0:	lea    eax,[ebp-0x10]
64016ab3:	push   eax
64016ab4:	push   DWORD PTR [ebp-0x8]
64016ab7:	push   DWORD PTR [ebp+0x20]
64016aba:	push   edi
64016abb:	call   0x64013af6
64016ac0:	add    esp,0x14
64016ac3:	mov    edi,eax
64016ac5:	mov    eax,DWORD PTR [ebp-0x10]
64016ac8:	cmp    eax,DWORD PTR [ebp-0x1c]
64016acb:	jae    0x64016b68
64016ad1:	mov    eax,DWORD PTR [ebp-0x8]
64016ad4:	cmp    DWORD PTR [edi],eax
64016ad6:	jg     0x64016b5d
64016adc:	cmp    eax,DWORD PTR [edi+0x4]
64016adf:	jg     0x64016b5d
64016ae1:	mov    eax,DWORD PTR [edi+0x10]
64016ae4:	mov    DWORD PTR [ebp-0xc],eax
64016ae7:	mov    eax,DWORD PTR [edi+0xc]
64016aea:	test   eax,eax
64016aec:	mov    DWORD PTR [ebp-0x18],eax
64016aef:	jle    0x64016b5d
64016af1:	mov    eax,DWORD PTR [esi+0x1c]
64016af4:	mov    eax,DWORD PTR [eax+0xc]
64016af7:	lea    ebx,[eax+0x4]
64016afa:	mov    eax,DWORD PTR [eax]
64016afc:	test   eax,eax
64016afe:	mov    DWORD PTR [ebp-0x14],eax
64016b01:	jle    0x64016b26
64016b03:	push   DWORD PTR [esi+0x1c]
64016b06:	mov    eax,DWORD PTR [ebx]
64016b08:	push   eax
64016b09:	push   DWORD PTR [ebp-0xc]
64016b0c:	mov    DWORD PTR [ebp-0x20],eax
64016b0f:	call   0x640160ea
64016b14:	add    esp,0xc
64016b17:	test   eax,eax
64016b19:	jne    0x64016b35
64016b1b:	dec    DWORD PTR [ebp-0x14]
64016b1e:	add    ebx,0x4
64016b21:	cmp    DWORD PTR [ebp-0x14],eax
64016b24:	jg     0x64016b03
64016b26:	dec    DWORD PTR [ebp-0x18]
64016b29:	add    DWORD PTR [ebp-0xc],0x10
64016b2d:	cmp    DWORD PTR [ebp-0x18],0x0
64016b31:	jg     0x64016af1
64016b33:	jmp    0x64016b5d
64016b35:	push   DWORD PTR [ebp+0x24]
64016b38:	mov    ebx,DWORD PTR [ebp-0xc]
64016b3b:	push   DWORD PTR [ebp+0x20]
64016b3e:	mov    BYTE PTR [ebp-0x1],0x1
64016b42:	push   DWORD PTR [ebp-0x20]
64016b45:	push   DWORD PTR [ebp+0x18]
64016b48:	push   DWORD PTR [ebp+0x14]
64016b4b:	push   DWORD PTR [ebp+0x10]
64016b4e:	push   esi
64016b4f:	mov    esi,DWORD PTR [ebp+0xc]
64016b52:	call   0x64016797
64016b57:	mov    esi,DWORD PTR [ebp+0x8]
64016b5a:	add    esp,0x1c
64016b5d:	inc    DWORD PTR [ebp-0x10]
64016b60:	add    edi,0x14
64016b63:	jmp    0x64016ac5
64016b68:	mov    edi,DWORD PTR [ebp+0x18]
64016b6b:	cmp    BYTE PTR [ebp+0x1c],0x0
64016b6f:	je     0x64016b7b
64016b71:	push   0x1
64016b73:	push   esi
64016b74:	call   0x640162b0
64016b79:	pop    ecx
64016b7a:	pop    ecx
64016b7b:	cmp    BYTE PTR [ebp-0x1],0x0
64016b7f:	jne    0x64016c33
64016b85:	mov    eax,DWORD PTR [edi]
64016b87:	and    eax,0x1fffffff
64016b8c:	cmp    eax,0x19930521
64016b91:	jb     0x64016c33
64016b97:	mov    edi,DWORD PTR [edi+0x1c]
64016b9a:	test   edi,edi
64016b9c:	je     0x64016c33
64016ba2:	push   esi
64016ba3:	call   0x64016329
64016ba8:	test   al,al
64016baa:	pop    ecx
64016bab:	jne    0x64016c33
64016bb1:	call   0x64015d6b
64016bb6:	call   0x64015d6b
64016bbb:	call   0x64015d6b
64016bc0:	mov    DWORD PTR [eax+0x88],esi
64016bc6:	call   0x64015d6b
64016bcb:	cmp    DWORD PTR [ebp+0x24],0x0
64016bcf:	mov    ecx,DWORD PTR [ebp+0x10]
64016bd2:	mov    DWORD PTR [eax+0x8c],ecx
64016bd8:	push   esi
64016bd9:	jne    0x64016be0
64016bdb:	push   DWORD PTR [ebp+0xc]
64016bde:	jmp    0x64016be3
64016be0:	push   DWORD PTR [ebp+0x24]
64016be3:	call   0x640138cc
64016be8:	mov    esi,DWORD PTR [ebp+0x18]
64016beb:	push   0xffffffff
64016bed:	push   esi
64016bee:	push   DWORD PTR [ebp+0x14]
64016bf1:	push   DWORD PTR [ebp+0xc]
64016bf4:	call   0x6401618a
64016bf9:	add    esp,0x10
64016bfc:	push   DWORD PTR [esi+0x1c]
64016bff:	call   0x640163a2
64016c04:	mov    ebx,DWORD PTR [ebp+0x18]
64016c07:	cmp    DWORD PTR [ebx+0xc],0x0
64016c0b:	jbe    0x64016c33
64016c0d:	cmp    BYTE PTR [ebp+0x1c],0x0
64016c11:	jne    0x64016a33
64016c17:	push   DWORD PTR [ebp+0x24]
64016c1a:	push   DWORD PTR [ebp+0x20]
64016c1d:	push   DWORD PTR [ebp-0x8]
64016c20:	push   ebx
64016c21:	push   DWORD PTR [ebp+0x14]
64016c24:	push   DWORD PTR [ebp+0x10]
64016c27:	push   DWORD PTR [ebp+0xc]
64016c2a:	push   esi
64016c2b:	call   0x64016803
64016c30:	add    esp,0x20
64016c33:	call   0x64015d6b
64016c38:	cmp    DWORD PTR [eax+0x94],0x0
64016c3f:	je     0x64016c46
64016c41:	call   0x64016d93
64016c46:	pop    edi
64016c47:	pop    esi
64016c48:	pop    ebx
64016c49:	leave  
64016c4a:	ret    
64016c4b:	push   esi
64016c4c:	push   DWORD PTR [esp+0x8]
64016c50:	mov    esi,ecx
64016c52:	call   0x640134c3
64016c57:	mov    DWORD PTR [esi],0x64026d50
64016c5d:	mov    eax,esi
64016c5f:	pop    esi
64016c60:	ret    0x4
64016c63:	push   ebp
64016c64:	mov    ebp,esp
64016c66:	push   ebx
64016c67:	push   esi
64016c68:	push   edi
64016c69:	call   0x64015d6b
64016c6e:	cmp    DWORD PTR [eax+0x20c],0x0
64016c75:	mov    eax,DWORD PTR [ebp+0x18]
64016c78:	mov    ecx,DWORD PTR [ebp+0x8]
64016c7b:	mov    edi,0xe06d7363
64016c80:	mov    esi,0x1fffffff
64016c85:	mov    ebx,0x19930522
64016c8a:	jne    0x64016cac
64016c8c:	mov    edx,DWORD PTR [ecx]
64016c8e:	cmp    edx,edi
64016c90:	je     0x64016cac
64016c92:	cmp    edx,0x80000026
64016c98:	je     0x64016cac
64016c9a:	mov    edx,DWORD PTR [eax]
64016c9c:	and    edx,esi
64016c9e:	cmp    edx,ebx
64016ca0:	jb     0x64016cac
64016ca2:	test   BYTE PTR [eax+0x20],0x1
64016ca6:	jne    0x64016d3f
64016cac:	test   BYTE PTR [ecx+0x4],0x66
64016cb0:	je     0x64016cd5
64016cb2:	cmp    DWORD PTR [eax+0x4],0x0
64016cb6:	je     0x64016d3f
64016cbc:	cmp    DWORD PTR [ebp+0x1c],0x0
64016cc0:	jne    0x64016d3f
64016cc2:	push   0xffffffff
64016cc4:	push   eax
64016cc5:	push   DWORD PTR [ebp+0x14]
64016cc8:	push   DWORD PTR [ebp+0xc]
64016ccb:	call   0x6401618a
64016cd0:	add    esp,0x10
64016cd3:	jmp    0x64016d3f
64016cd5:	cmp    DWORD PTR [eax+0xc],0x0
64016cd9:	jne    0x64016ced
64016cdb:	mov    edx,DWORD PTR [eax]
64016cdd:	and    edx,esi
64016cdf:	cmp    edx,0x19930521
64016ce5:	jb     0x64016d3f
64016ce7:	cmp    DWORD PTR [eax+0x1c],0x0
64016ceb:	je     0x64016d3f
64016ced:	cmp    DWORD PTR [ecx],edi
64016cef:	jne    0x64016d23
64016cf1:	cmp    DWORD PTR [ecx+0x10],0x3
64016cf5:	jb     0x64016d23
64016cf7:	cmp    DWORD PTR [ecx+0x14],ebx
64016cfa:	jbe    0x64016d23
64016cfc:	mov    edx,DWORD PTR [ecx+0x1c]
64016cff:	mov    edx,DWORD PTR [edx+0x8]
64016d02:	test   edx,edx
64016d04:	je     0x64016d23
64016d06:	movzx  esi,BYTE PTR [ebp+0x24]
64016d0a:	push   esi
64016d0b:	push   DWORD PTR [ebp+0x20]
64016d0e:	push   DWORD PTR [ebp+0x1c]
64016d11:	push   eax
64016d12:	push   DWORD PTR [ebp+0x14]
64016d15:	push   DWORD PTR [ebp+0x10]
64016d18:	push   DWORD PTR [ebp+0xc]
64016d1b:	push   ecx
64016d1c:	call   edx
64016d1e:	add    esp,0x20
64016d21:	jmp    0x64016d42
64016d23:	push   DWORD PTR [ebp+0x20]
64016d26:	push   DWORD PTR [ebp+0x1c]
64016d29:	push   DWORD PTR [ebp+0x24]
64016d2c:	push   eax
64016d2d:	push   DWORD PTR [ebp+0x14]
64016d30:	push   DWORD PTR [ebp+0x10]
64016d33:	push   DWORD PTR [ebp+0xc]
64016d36:	push   ecx
64016d37:	call   0x640168f5
64016d3c:	add    esp,0x20
64016d3f:	xor    eax,eax
64016d41:	inc    eax
64016d42:	pop    edi
64016d43:	pop    esi
64016d44:	pop    ebx
64016d45:	pop    ebp
64016d46:	ret    
64016d47:	push   0x8
64016d49:	push   0x6402c218
64016d4e:	call   0x64015220
64016d53:	call   0x64015d6b
64016d58:	mov    eax,DWORD PTR [eax+0x78]
64016d5b:	test   eax,eax
64016d5d:	je     0x64016d75
64016d5f:	and    DWORD PTR [ebp-0x4],0x0
64016d63:	call   eax
64016d65:	jmp    0x64016d6e
64016d67:	xor    eax,eax
64016d69:	inc    eax
64016d6a:	ret    
64016d6b:	mov    esp,DWORD PTR [ebp-0x18]
64016d6e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016d75:	call   0x6401c338
64016d7a:	call   0x64015265
64016d7f:	ret    
64016d80:	call   0x64015d6b
64016d85:	mov    eax,DWORD PTR [eax+0x7c]
64016d88:	test   eax,eax
64016d8a:	je     0x64016d8e
64016d8c:	call   eax
64016d8e:	jmp    0x64016d47
64016d93:	push   0x8
64016d95:	push   0x6402c238
64016d9a:	call   0x64015220
64016d9f:	push   DWORD PTR ds:0x640305a0
64016da5:	call   0x64015b4f
64016daa:	pop    ecx
64016dab:	test   eax,eax
64016dad:	je     0x64016dc5
64016daf:	and    DWORD PTR [ebp-0x4],0x0
64016db3:	call   eax
64016db5:	jmp    0x64016dbe
64016db7:	xor    eax,eax
64016db9:	inc    eax
64016dba:	ret    
64016dbb:	mov    esp,DWORD PTR [ebp-0x18]
64016dbe:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016dc5:	jmp    0x64016d47
64016dca:	push   0x64016d47
64016dcf:	call   0x64015ad8
64016dd4:	pop    ecx
64016dd5:	mov    ds:0x640305a0,eax
64016dda:	ret    
64016ddb:	int3   
64016ddc:	int3   
64016ddd:	int3   
64016dde:	int3   
64016ddf:	int3   
64016de0:	push   ebp
64016de1:	mov    ebp,esp
64016de3:	sub    esp,0x4
64016de6:	push   ebx
64016de7:	push   ecx
64016de8:	mov    eax,DWORD PTR [ebp+0xc]
64016deb:	add    eax,0xc
64016dee:	mov    DWORD PTR [ebp-0x4],eax
64016df1:	mov    eax,DWORD PTR [ebp+0x8]
64016df4:	push   ebp
64016df5:	push   DWORD PTR [ebp+0x10]
64016df8:	mov    ecx,DWORD PTR [ebp+0x10]
64016dfb:	mov    ebp,DWORD PTR [ebp-0x4]
64016dfe:	call   0x6401c538
64016e03:	push   esi
64016e04:	push   edi
64016e05:	call   eax
64016e07:	pop    edi
64016e08:	pop    esi
64016e09:	mov    ebx,ebp
64016e0b:	pop    ebp
64016e0c:	mov    ecx,DWORD PTR [ebp+0x10]
64016e0f:	push   ebp
64016e10:	mov    ebp,ebx
64016e12:	cmp    ecx,0x100
64016e18:	jne    0x64016e1f
64016e1a:	mov    ecx,0x2
64016e1f:	push   ecx
64016e20:	call   0x6401c538
64016e25:	pop    ebp
64016e26:	pop    ecx
64016e27:	pop    ebx
64016e28:	leave  
64016e29:	ret    0xc
64016e2c:	push   ebp
64016e2d:	mov    ebp,esp
64016e2f:	sub    esp,0x328
64016e35:	mov    ds:0x640306b0,eax
64016e3a:	mov    DWORD PTR ds:0x640306ac,ecx
64016e40:	mov    DWORD PTR ds:0x640306a8,edx
64016e46:	mov    DWORD PTR ds:0x640306a4,ebx
64016e4c:	mov    DWORD PTR ds:0x640306a0,esi
64016e52:	mov    DWORD PTR ds:0x6403069c,edi
64016e58:	data16 mov WORD PTR ds:0x640306c8,ss
64016e5f:	data16 mov WORD PTR ds:0x640306bc,cs
64016e66:	data16 mov WORD PTR ds:0x64030698,ds
64016e6d:	data16 mov WORD PTR ds:0x64030694,es
64016e74:	data16 mov WORD PTR ds:0x64030690,fs
64016e7b:	data16 mov WORD PTR ds:0x6403068c,gs
64016e82:	pushf  
64016e83:	pop    DWORD PTR ds:0x640306c0
64016e89:	mov    eax,DWORD PTR [ebp+0x0]
64016e8c:	mov    ds:0x640306b4,eax
64016e91:	mov    eax,DWORD PTR [ebp+0x4]
64016e94:	mov    ds:0x640306b8,eax
64016e99:	lea    eax,[ebp+0x8]
64016e9c:	mov    ds:0x640306c4,eax
64016ea1:	mov    eax,DWORD PTR [ebp-0x320]
64016ea7:	mov    DWORD PTR ds:0x64030600,0x10001
64016eb1:	mov    eax,ds:0x640306b8
64016eb6:	mov    ds:0x640305b4,eax
64016ebb:	mov    DWORD PTR ds:0x640305a8,0xc0000409
64016ec5:	mov    DWORD PTR ds:0x640305ac,0x1
64016ecf:	mov    eax,ds:0x6402f09c
64016ed4:	mov    DWORD PTR [ebp-0x328],eax
64016eda:	mov    eax,ds:0x6402f0a0
64016edf:	mov    DWORD PTR [ebp-0x324],eax
64016ee5:	call   DWORD PTR ds:0x64026118
64016eeb:	mov    ds:0x640305f8,eax
64016ef0:	push   0x1
64016ef2:	call   0x64015a64
64016ef7:	pop    ecx
64016ef8:	push   0x0
64016efa:	call   DWORD PTR ds:0x64026114
64016f00:	push   0x64026d68
64016f05:	call   DWORD PTR ds:0x64026110
64016f0b:	cmp    DWORD PTR ds:0x640305f8,0x0
64016f12:	jne    0x64016f1c
64016f14:	push   0x1
64016f16:	call   0x64015a64
64016f1b:	pop    ecx
64016f1c:	push   0xc0000409
64016f21:	call   DWORD PTR ds:0x64026048
64016f27:	push   eax
64016f28:	call   DWORD PTR ds:0x6402610c
64016f2e:	leave  
64016f2f:	ret    
64016f30:	push   esi
64016f31:	push   edi
64016f32:	xor    esi,esi
64016f34:	push   DWORD PTR [esp+0xc]
64016f38:	call   0x64014bd3
64016f3d:	mov    edi,eax
64016f3f:	test   edi,edi
64016f41:	pop    ecx
64016f42:	jne    0x64016f6b
64016f44:	cmp    DWORD PTR ds:0x640308cc,eax
64016f4a:	jbe    0x64016f6b
64016f4c:	push   esi
64016f4d:	call   DWORD PTR ds:0x64026050
64016f53:	lea    eax,[esi+0x3e8]
64016f59:	cmp    eax,DWORD PTR ds:0x640308cc
64016f5f:	jbe    0x64016f64
64016f61:	or     eax,0xffffffff
64016f64:	cmp    eax,0xffffffff
64016f67:	mov    esi,eax
64016f69:	jne    0x64016f34
64016f6b:	mov    eax,edi
64016f6d:	pop    edi
64016f6e:	pop    esi
64016f6f:	ret    
64016f70:	push   esi
64016f71:	push   edi
64016f72:	xor    esi,esi
64016f74:	push   0x0
64016f76:	push   DWORD PTR [esp+0x14]
64016f7a:	push   DWORD PTR [esp+0x14]
64016f7e:	call   0x6401c563
64016f83:	mov    edi,eax
64016f85:	add    esp,0xc
64016f88:	test   edi,edi
64016f8a:	jne    0x64016fb3
64016f8c:	cmp    DWORD PTR ds:0x640308cc,eax
64016f92:	jbe    0x64016fb3
64016f94:	push   esi
64016f95:	call   DWORD PTR ds:0x64026050
64016f9b:	lea    eax,[esi+0x3e8]
64016fa1:	cmp    eax,DWORD PTR ds:0x640308cc
64016fa7:	jbe    0x64016fac
64016fa9:	or     eax,0xffffffff
64016fac:	cmp    eax,0xffffffff
64016faf:	mov    esi,eax
64016fb1:	jne    0x64016f74
64016fb3:	mov    eax,edi
64016fb5:	pop    edi
64016fb6:	pop    esi
64016fb7:	ret    
64016fb8:	push   esi
64016fb9:	push   edi
64016fba:	xor    esi,esi
64016fbc:	push   DWORD PTR [esp+0x10]
64016fc0:	push   DWORD PTR [esp+0x10]
64016fc4:	call   0x64015005
64016fc9:	mov    edi,eax
64016fcb:	test   edi,edi
64016fcd:	pop    ecx
64016fce:	pop    ecx
64016fcf:	jne    0x64016ffe
64016fd1:	cmp    DWORD PTR [esp+0x10],eax
64016fd5:	je     0x64016ffe
64016fd7:	cmp    DWORD PTR ds:0x640308cc,eax
64016fdd:	jbe    0x64016ffe
64016fdf:	push   esi
64016fe0:	call   DWORD PTR ds:0x64026050
64016fe6:	lea    eax,[esi+0x3e8]
64016fec:	cmp    eax,DWORD PTR ds:0x640308cc
64016ff2:	jbe    0x64016ff7
64016ff4:	or     eax,0xffffffff
64016ff7:	cmp    eax,0xffffffff
64016ffa:	mov    esi,eax
64016ffc:	jne    0x64016fbc
64016ffe:	mov    eax,edi
64017000:	pop    edi
64017001:	pop    esi
64017002:	ret    
64017003:	push   0x10
64017005:	push   0x6402c258
6401700a:	call   0x64015220
6401700f:	xor    eax,eax
64017011:	mov    ebx,DWORD PTR [ebp+0x8]
64017014:	xor    edi,edi
64017016:	cmp    ebx,edi
64017018:	setne  al
6401701b:	cmp    eax,edi
6401701d:	jne    0x6401703c
6401701f:	call   0x64015a20
64017024:	mov    DWORD PTR [eax],0x16
6401702a:	push   edi
6401702b:	push   edi
6401702c:	push   edi
6401702d:	push   edi
6401702e:	push   edi
6401702f:	call   0x64013794
64017034:	add    esp,0x14
64017037:	or     eax,0xffffffff
6401703a:	jmp    0x6401708f
6401703c:	cmp    DWORD PTR ds:0x640344fc,0x3
64017043:	jne    0x6401707d
64017045:	push   0x4
64017047:	call   0x6401b21a
6401704c:	pop    ecx
6401704d:	mov    DWORD PTR [ebp-0x4],edi
64017050:	push   ebx
64017051:	call   0x6401b293
64017056:	pop    ecx
64017057:	mov    DWORD PTR [ebp-0x20],eax
6401705a:	cmp    eax,edi
6401705c:	je     0x64017069
6401705e:	mov    esi,DWORD PTR [ebx-0x4]
64017061:	sub    esi,0x9
64017064:	mov    DWORD PTR [ebp-0x1c],esi
64017067:	jmp    0x6401706c
64017069:	mov    esi,DWORD PTR [ebp-0x1c]
6401706c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017073:	call   0x6401709d
64017078:	cmp    DWORD PTR [ebp-0x20],edi
6401707b:	jne    0x6401708d
6401707d:	push   ebx
6401707e:	push   edi
6401707f:	push   DWORD PTR ds:0x64030a6c
64017085:	call   DWORD PTR ds:0x64026104
6401708b:	mov    esi,eax
6401708d:	mov    eax,esi
6401708f:	call   0x64015265
64017094:	ret    
64017095:	xor    edi,edi
64017097:	mov    ebx,DWORD PTR [ebp+0x8]
6401709a:	mov    esi,DWORD PTR [ebp-0x1c]
6401709d:	push   0x4
6401709f:	call   0x6401b142
640170a4:	pop    ecx
640170a5:	ret    
640170a6:	call   0x6401beea
640170ab:	push   DWORD PTR [esp+0x4]
640170af:	call   0x6401bd4a
640170b4:	push   DWORD PTR ds:0x6402f260
640170ba:	call   0x64015b4f
640170bf:	push   0xff
640170c4:	call   eax
640170c6:	add    esp,0xc
640170c9:	ret    
640170ca:	push   0x64026d80
640170cf:	call   DWORD PTR ds:0x64026128
640170d5:	test   eax,eax
640170d7:	je     0x640170ef
640170d9:	push   0x64026d70
640170de:	push   eax
640170df:	call   DWORD PTR ds:0x64026014
640170e5:	test   eax,eax
640170e7:	je     0x640170ef
640170e9:	push   DWORD PTR [esp+0x4]
640170ed:	call   eax
640170ef:	ret    
640170f0:	push   DWORD PTR [esp+0x4]
640170f4:	call   0x640170ca
640170f9:	pop    ecx
640170fa:	push   DWORD PTR [esp+0x4]
640170fe:	call   DWORD PTR ds:0x6402613c
64017104:	int3   
64017105:	push   0x8
64017107:	call   0x6401b21a
6401710c:	pop    ecx
6401710d:	ret    
6401710e:	push   0x8
64017110:	call   0x6401b142
64017115:	pop    ecx
64017116:	ret    
64017117:	push   esi
64017118:	mov    esi,eax
6401711a:	jmp    0x64017127
6401711c:	mov    eax,DWORD PTR [esi]
6401711e:	test   eax,eax
64017120:	je     0x64017124
64017122:	call   eax
64017124:	add    esi,0x4
64017127:	cmp    esi,DWORD PTR [esp+0x8]
6401712b:	jb     0x6401711c
6401712d:	pop    esi
6401712e:	ret    
6401712f:	push   esi
64017130:	mov    esi,DWORD PTR [esp+0x8]
64017134:	xor    eax,eax
64017136:	jmp    0x64017147
64017138:	test   eax,eax
6401713a:	jne    0x6401714d
6401713c:	mov    ecx,DWORD PTR [esi]
6401713e:	test   ecx,ecx
64017140:	je     0x64017144
64017142:	call   ecx
64017144:	add    esi,0x4
64017147:	cmp    esi,DWORD PTR [esp+0xc]
6401714b:	jb     0x64017138
6401714d:	pop    esi
6401714e:	ret    
6401714f:	mov    ecx,DWORD PTR [esp+0x4]
64017153:	push   esi
64017154:	xor    esi,esi
64017156:	cmp    ecx,esi
64017158:	jne    0x64017177
6401715a:	call   0x64015a20
6401715f:	push   esi
64017160:	push   esi
64017161:	push   esi
64017162:	push   esi
64017163:	push   esi
64017164:	mov    DWORD PTR [eax],0x16
6401716a:	call   0x64013794
6401716f:	add    esp,0x14
64017172:	push   0x16
64017174:	pop    eax
64017175:	pop    esi
64017176:	ret    
64017177:	mov    eax,ds:0x640308d4
6401717c:	cmp    eax,esi
6401717e:	je     0x6401715a
64017180:	mov    DWORD PTR [ecx],eax
64017182:	xor    eax,eax
64017184:	pop    esi
64017185:	ret    
64017186:	mov    eax,DWORD PTR [esp+0x4]
6401718a:	push   esi
6401718b:	xor    esi,esi
6401718d:	cmp    eax,esi
6401718f:	jne    0x640171ae
64017191:	call   0x64015a20
64017196:	push   esi
64017197:	push   esi
64017198:	push   esi
64017199:	push   esi
6401719a:	push   esi
6401719b:	mov    DWORD PTR [eax],0x16
640171a1:	call   0x64013794
640171a6:	add    esp,0x14
640171a9:	push   0x16
640171ab:	pop    eax
640171ac:	pop    esi
640171ad:	ret    
640171ae:	cmp    DWORD PTR ds:0x640308d4,esi
640171b4:	je     0x64017191
640171b6:	mov    ecx,DWORD PTR ds:0x640308e0
640171bc:	mov    DWORD PTR [eax],ecx
640171be:	xor    eax,eax
640171c0:	pop    esi
640171c1:	ret    
640171c2:	cmp    DWORD PTR ds:0x640285f4,0x0
640171c9:	je     0x640171e5
640171cb:	push   0x640285f4
640171d0:	call   0x6401c270
640171d5:	test   eax,eax
640171d7:	pop    ecx
640171d8:	je     0x640171e5
640171da:	push   DWORD PTR [esp+0x4]
640171de:	call   DWORD PTR ds:0x640285f4
640171e4:	pop    ecx
640171e5:	call   0x6401c681
640171ea:	push   0x640262c4
640171ef:	push   0x640262ac
640171f4:	call   0x6401712f
640171f9:	test   eax,eax
640171fb:	pop    ecx
640171fc:	pop    ecx
640171fd:	jne    0x64017253
640171ff:	push   esi
64017200:	push   edi
64017201:	push   0x64019ca0
64017206:	call   0x64013d8f
6401720b:	mov    esi,0x640261e8
64017210:	mov    eax,esi
64017212:	mov    edi,0x640262a8
64017217:	cmp    eax,edi
64017219:	pop    ecx
6401721a:	jae    0x6401722b
6401721c:	mov    eax,DWORD PTR [esi]
6401721e:	test   eax,eax
64017220:	je     0x64017224
64017222:	call   eax
64017224:	add    esi,0x4
64017227:	cmp    esi,edi
64017229:	jb     0x6401721c
6401722b:	cmp    DWORD PTR ds:0x64034638,0x0
64017232:	pop    edi
64017233:	pop    esi
64017234:	je     0x64017251
64017236:	push   0x64034638
6401723b:	call   0x6401c270
64017240:	test   eax,eax
64017242:	pop    ecx
64017243:	je     0x64017251
64017245:	push   0x0
64017247:	push   0x2
64017249:	push   0x0
6401724b:	call   DWORD PTR ds:0x64034638
64017251:	xor    eax,eax
64017253:	ret    
64017254:	push   0x10
64017256:	push   0x6402c278
6401725b:	call   0x64015220
64017260:	push   0x8
64017262:	call   0x6401b21a
64017267:	pop    ecx
64017268:	xor    edi,edi
6401726a:	mov    DWORD PTR [ebp-0x4],edi
6401726d:	xor    ebx,ebx
6401726f:	inc    ebx
64017270:	cmp    DWORD PTR ds:0x64030914,ebx
64017276:	je     0x640172f6
64017278:	mov    DWORD PTR ds:0x64030910,ebx
6401727e:	mov    al,BYTE PTR [ebp+0x10]
64017281:	mov    ds:0x6403090c,al
64017286:	cmp    DWORD PTR [ebp+0xc],edi
64017289:	jne    0x640172e6
6401728b:	push   DWORD PTR ds:0x64034630
64017291:	call   0x64015b4f
64017296:	mov    DWORD PTR [ebp-0x1c],eax
64017299:	push   DWORD PTR ds:0x6403462c
6401729f:	call   0x64015b4f
640172a4:	pop    ecx
640172a5:	pop    ecx
640172a6:	mov    esi,eax
640172a8:	mov    DWORD PTR [ebp-0x20],esi
640172ab:	cmp    DWORD PTR [ebp-0x1c],edi
640172ae:	je     0x640172d6
640172b0:	sub    esi,0x4
640172b3:	mov    DWORD PTR [ebp-0x20],esi
640172b6:	cmp    esi,DWORD PTR [ebp-0x1c]
640172b9:	jb     0x640172d6
640172bb:	cmp    DWORD PTR [esi],0x0
640172be:	je     0x640172b0
640172c0:	mov    edi,DWORD PTR [esi]
640172c2:	call   0x64015b46
640172c7:	cmp    edi,eax
640172c9:	je     0x640172b0
640172cb:	push   edi
640172cc:	call   0x64015b4f
640172d1:	pop    ecx
640172d2:	call   eax
640172d4:	jmp    0x640172b0
640172d6:	push   0x640262d4
640172db:	mov    eax,0x640262c8
640172e0:	call   0x64017117
640172e5:	pop    ecx
640172e6:	push   0x640262dc
640172eb:	mov    eax,0x640262d8
640172f0:	call   0x64017117
640172f5:	pop    ecx
640172f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640172fd:	call   0x64017321
64017302:	cmp    DWORD PTR [ebp+0x10],0x0
64017306:	jne    0x64017330
64017308:	mov    DWORD PTR ds:0x64030914,ebx
6401730e:	push   0x8
64017310:	call   0x6401b142
64017315:	pop    ecx
64017316:	push   DWORD PTR [ebp+0x8]
64017319:	call   0x640170f0
6401731e:	xor    ebx,ebx
64017320:	inc    ebx
64017321:	cmp    DWORD PTR [ebp+0x10],0x0
64017325:	je     0x6401732f
64017327:	push   0x8
64017329:	call   0x6401b142
6401732e:	pop    ecx
6401732f:	ret    
64017330:	call   0x64015265
64017335:	ret    
64017336:	push   0x0
64017338:	push   0x1
6401733a:	push   DWORD PTR [esp+0xc]
6401733e:	call   0x64017254
64017343:	add    esp,0xc
64017346:	ret    
64017347:	push   0x1
64017349:	push   0x0
6401734b:	push   0x0
6401734d:	call   0x64017254
64017352:	add    esp,0xc
64017355:	ret    
64017356:	push   esi
64017357:	call   0x64015b46
6401735c:	mov    esi,eax
6401735e:	push   esi
6401735f:	call   0x64016091
64017364:	push   esi
64017365:	call   0x6401c8be
6401736a:	push   esi
6401736b:	call   0x6401368e
64017370:	push   esi
64017371:	call   0x6401c8b4
64017376:	push   esi
64017377:	call   0x6401c8aa
6401737c:	push   esi
6401737d:	call   0x6401c6a0
64017382:	push   esi
64017383:	call   0x640200e7
64017388:	push   esi
64017389:	call   0x64016dca
6401738e:	push   0x64017336
64017393:	call   0x64015ad8
64017398:	add    esp,0x24
6401739b:	mov    ds:0x6402f260,eax
640173a0:	pop    esi
640173a1:	ret    
640173a2:	sub    eax,0x3a4
640173a7:	je     0x640173cb
640173a9:	sub    eax,0x4
640173ac:	je     0x640173c5
640173ae:	sub    eax,0xd
640173b1:	je     0x640173bf
640173b3:	dec    eax
640173b4:	je     0x640173b9
640173b6:	xor    eax,eax
640173b8:	ret    
640173b9:	mov    eax,0x404
640173be:	ret    
640173bf:	mov    eax,0x412
640173c4:	ret    
640173c5:	mov    eax,0x804
640173ca:	ret    
640173cb:	mov    eax,0x411
640173d0:	ret    
640173d1:	push   ebx
640173d2:	push   ebp
640173d3:	push   esi
640173d4:	push   edi
640173d5:	mov    ebp,0x101
640173da:	mov    esi,eax
640173dc:	push   ebp
640173dd:	xor    edi,edi
640173df:	lea    ebx,[esi+0x1c]
640173e2:	push   edi
640173e3:	push   ebx
640173e4:	call   0x64014360
640173e9:	mov    DWORD PTR [esi+0x4],edi
640173ec:	mov    DWORD PTR [esi+0x8],edi
640173ef:	mov    DWORD PTR [esi+0xc],edi
640173f2:	xor    eax,eax
640173f4:	lea    edi,[esi+0x10]
640173f7:	stos   DWORD PTR es:[edi],eax
640173f8:	stos   DWORD PTR es:[edi],eax
640173f9:	stos   DWORD PTR es:[edi],eax
640173fa:	mov    eax,0x6402f268
640173ff:	add    esp,0xc
64017402:	sub    eax,esi
64017404:	mov    cl,BYTE PTR [eax+ebx*1]
64017407:	mov    BYTE PTR [ebx],cl
64017409:	inc    ebx
6401740a:	dec    ebp
6401740b:	jne    0x64017404
6401740d:	lea    ecx,[esi+0x11d]
64017413:	mov    esi,0x100
64017418:	mov    dl,BYTE PTR [ecx+eax*1]
6401741b:	mov    BYTE PTR [ecx],dl
6401741d:	inc    ecx
6401741e:	dec    esi
6401741f:	jne    0x64017418
64017421:	pop    edi
64017422:	pop    esi
64017423:	pop    ebp
64017424:	pop    ebx
64017425:	ret    
64017426:	push   ebp
64017427:	lea    ebp,[esp-0x49c]
6401742e:	sub    esp,0x51c
64017434:	mov    eax,ds:0x6402f09c
64017439:	xor    eax,ebp
6401743b:	mov    DWORD PTR [ebp+0x498],eax
64017441:	push   ebx
64017442:	push   edi
64017443:	lea    eax,[ebp-0x7c]
64017446:	push   eax
64017447:	push   DWORD PTR [esi+0x4]
6401744a:	call   DWORD PTR ds:0x64026140
64017450:	test   eax,eax
64017452:	mov    edi,0x100
64017457:	je     0x6401754c
6401745d:	xor    eax,eax
6401745f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64017466:	inc    eax
64017467:	cmp    eax,edi
64017469:	jb     0x6401745f
6401746b:	mov    al,BYTE PTR [ebp-0x76]
6401746e:	test   al,al
64017470:	mov    BYTE PTR [ebp+0x398],0x20
64017477:	je     0x640174a4
64017479:	lea    ebx,[ebp-0x75]
6401747c:	movzx  ecx,al
6401747f:	movzx  eax,BYTE PTR [ebx]
64017482:	cmp    ecx,eax
64017484:	ja     0x6401749c
64017486:	sub    eax,ecx
64017488:	inc    eax
64017489:	push   eax
6401748a:	lea    edx,[ebp+ecx*1+0x398]
64017491:	push   0x20
64017493:	push   edx
64017494:	call   0x64014360
64017499:	add    esp,0xc
6401749c:	inc    ebx
6401749d:	mov    al,BYTE PTR [ebx]
6401749f:	inc    ebx
640174a0:	test   al,al
640174a2:	jne    0x6401747c
640174a4:	push   0x0
640174a6:	push   DWORD PTR [esi+0xc]
640174a9:	lea    eax,[ebp-0x68]
640174ac:	push   DWORD PTR [esi+0x4]
640174af:	push   eax
640174b0:	push   edi
640174b1:	lea    eax,[ebp+0x398]
640174b7:	push   eax
640174b8:	push   0x1
640174ba:	push   0x0
640174bc:	call   0x6401cb55
640174c1:	xor    ebx,ebx
640174c3:	push   ebx
640174c4:	push   DWORD PTR [esi+0x4]
640174c7:	lea    eax,[ebp+0x298]
640174cd:	push   edi
640174ce:	push   eax
640174cf:	push   edi
640174d0:	lea    eax,[ebp+0x398]
640174d6:	push   eax
640174d7:	push   edi
640174d8:	push   DWORD PTR [esi+0xc]
640174db:	push   ebx
640174dc:	call   0x6401b01d
640174e1:	add    esp,0x44
640174e4:	push   ebx
640174e5:	push   DWORD PTR [esi+0x4]
640174e8:	lea    eax,[ebp+0x198]
640174ee:	push   edi
640174ef:	push   eax
640174f0:	push   edi
640174f1:	lea    eax,[ebp+0x398]
640174f7:	push   eax
640174f8:	push   0x200
640174fd:	push   DWORD PTR [esi+0xc]
64017500:	push   ebx
64017501:	call   0x6401b01d
64017506:	add    esp,0x24
64017509:	xor    eax,eax
6401750b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64017510:	test   cl,0x1
64017513:	je     0x64017523
64017515:	or     BYTE PTR [esi+eax*1+0x1d],0x10
6401751a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64017521:	jmp    0x64017534
64017523:	test   cl,0x2
64017526:	je     0x6401753d
64017528:	or     BYTE PTR [esi+eax*1+0x1d],0x20
6401752d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64017534:	mov    BYTE PTR [esi+eax*1+0x11d],cl
6401753b:	jmp    0x64017545
6401753d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64017545:	inc    eax
64017546:	cmp    eax,edi
64017548:	jb     0x6401750b
6401754a:	jmp    0x64017599
6401754c:	lea    eax,[esi+0x11d]
64017552:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64017559:	xor    ecx,ecx
6401755b:	sub    DWORD PTR [ebp-0x80],eax
6401755e:	mov    edx,DWORD PTR [ebp-0x80]
64017561:	lea    eax,[esi+ecx*1+0x11d]
64017568:	add    edx,eax
6401756a:	lea    ebx,[edx+0x20]
6401756d:	cmp    ebx,0x19
64017570:	ja     0x6401757e
64017572:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64017577:	mov    dl,cl
64017579:	add    dl,0x20
6401757c:	jmp    0x6401758d
6401757e:	cmp    edx,0x19
64017581:	ja     0x64017591
64017583:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64017588:	mov    dl,cl
6401758a:	sub    dl,0x20
6401758d:	mov    BYTE PTR [eax],dl
6401758f:	jmp    0x64017594
64017591:	mov    BYTE PTR [eax],0x0
64017594:	inc    ecx
64017595:	cmp    ecx,edi
64017597:	jb     0x6401755e
64017599:	mov    ecx,DWORD PTR [ebp+0x498]
6401759f:	pop    edi
640175a0:	xor    ecx,ebp
640175a2:	pop    ebx
640175a3:	call   0x64013c5c
640175a8:	add    ebp,0x49c
640175ae:	leave  
640175af:	ret    
640175b0:	push   0xc
640175b2:	push   0x6402c298
640175b7:	call   0x64015220
640175bc:	call   0x64015d6b
640175c1:	mov    edi,eax
640175c3:	mov    eax,ds:0x6402f78c
640175c8:	test   DWORD PTR [edi+0x70],eax
640175cb:	je     0x640175ea
640175cd:	cmp    DWORD PTR [edi+0x6c],0x0
640175d1:	je     0x640175ea
640175d3:	mov    esi,DWORD PTR [edi+0x68]
640175d6:	test   esi,esi
640175d8:	jne    0x640175e2
640175da:	push   0x20
640175dc:	call   0x640170a6
640175e1:	pop    ecx
640175e2:	mov    eax,esi
640175e4:	call   0x64015265
640175e9:	ret    
640175ea:	push   0xd
640175ec:	call   0x6401b21a
640175f1:	pop    ecx
640175f2:	and    DWORD PTR [ebp-0x4],0x0
640175f6:	mov    esi,DWORD PTR [edi+0x68]
640175f9:	mov    DWORD PTR [ebp-0x1c],esi
640175fc:	cmp    esi,DWORD PTR ds:0x6402f690
64017602:	je     0x6401763a
64017604:	test   esi,esi
64017606:	je     0x64017622
64017608:	push   esi
64017609:	call   DWORD PTR ds:0x64026098
6401760f:	test   eax,eax
64017611:	jne    0x64017622
64017613:	cmp    esi,0x6402f268
64017619:	je     0x64017622
6401761b:	push   esi
6401761c:	call   0x64014af6
64017621:	pop    ecx
64017622:	mov    eax,ds:0x6402f690
64017627:	mov    DWORD PTR [edi+0x68],eax
6401762a:	mov    esi,DWORD PTR ds:0x6402f690
64017630:	mov    DWORD PTR [ebp-0x1c],esi
64017633:	push   esi
64017634:	call   DWORD PTR ds:0x64026020
6401763a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017641:	call   0x6401764b
64017646:	jmp    0x640175d6
64017648:	mov    esi,DWORD PTR [ebp-0x1c]
6401764b:	push   0xd
6401764d:	call   0x6401b142
64017652:	pop    ecx
64017653:	ret    
64017654:	push   ebp
64017655:	mov    ebp,esp
64017657:	sub    esp,0x10
6401765a:	push   ebx
6401765b:	xor    ebx,ebx
6401765d:	push   ebx
6401765e:	lea    ecx,[ebp-0x10]
64017661:	call   0x64013dff
64017666:	cmp    esi,0xfffffffe
64017669:	mov    DWORD PTR ds:0x64030918,ebx
6401766f:	jne    0x6401768f
64017671:	mov    DWORD PTR ds:0x64030918,0x1
6401767b:	call   DWORD PTR ds:0x64026144
64017681:	cmp    BYTE PTR [ebp-0x4],bl
64017684:	je     0x640176cb
64017686:	mov    ecx,DWORD PTR [ebp-0x8]
64017689:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401768d:	jmp    0x640176cb
6401768f:	cmp    esi,0xfffffffd
64017692:	jne    0x640176a6
64017694:	mov    DWORD PTR ds:0x64030918,0x1
6401769e:	call   DWORD PTR ds:0x640260e0
640176a4:	jmp    0x64017681
640176a6:	cmp    esi,0xfffffffc
640176a9:	jne    0x640176bd
640176ab:	mov    eax,DWORD PTR [ebp-0x10]
640176ae:	mov    eax,DWORD PTR [eax+0x4]
640176b1:	mov    DWORD PTR ds:0x64030918,0x1
640176bb:	jmp    0x64017681
640176bd:	cmp    BYTE PTR [ebp-0x4],bl
640176c0:	je     0x640176c9
640176c2:	mov    eax,DWORD PTR [ebp-0x8]
640176c5:	and    DWORD PTR [eax+0x70],0xfffffffd
640176c9:	mov    eax,esi
640176cb:	pop    ebx
640176cc:	leave  
640176cd:	ret    
640176ce:	push   ebp
640176cf:	mov    ebp,esp
640176d1:	sub    esp,0x20
640176d4:	mov    eax,ds:0x6402f09c
640176d9:	xor    eax,ebp
640176db:	mov    DWORD PTR [ebp-0x4],eax
640176de:	push   ebx
640176df:	mov    ebx,DWORD PTR [ebp+0xc]
640176e2:	push   esi
640176e3:	mov    esi,DWORD PTR [ebp+0x8]
640176e6:	push   edi
640176e7:	call   0x64017654
640176ec:	mov    edi,eax
640176ee:	xor    esi,esi
640176f0:	cmp    edi,esi
640176f2:	mov    DWORD PTR [ebp+0x8],edi
640176f5:	jne    0x64017705
640176f7:	mov    eax,ebx
640176f9:	call   0x640173d1
640176fe:	xor    eax,eax
64017700:	jmp    0x64017898
64017705:	mov    DWORD PTR [ebp-0x1c],esi
64017708:	xor    eax,eax
6401770a:	cmp    DWORD PTR [eax+0x6402f698],edi
64017710:	je     0x640177a7
64017716:	inc    DWORD PTR [ebp-0x1c]
64017719:	add    eax,0x30
6401771c:	cmp    eax,0xf0
64017721:	jb     0x6401770a
64017723:	cmp    edi,0xfde8
64017729:	je     0x64017895
6401772f:	cmp    edi,0xfde9
64017735:	je     0x64017895
6401773b:	movzx  eax,di
6401773e:	push   eax
6401773f:	call   DWORD PTR ds:0x64026148
64017745:	test   eax,eax
64017747:	je     0x64017895
6401774d:	lea    eax,[ebp-0x18]
64017750:	push   eax
64017751:	push   edi
64017752:	call   DWORD PTR ds:0x64026140
64017758:	test   eax,eax
6401775a:	je     0x64017889
64017760:	push   0x101
64017765:	lea    eax,[ebx+0x1c]
64017768:	push   esi
64017769:	push   eax
6401776a:	call   0x64014360
6401776f:	xor    edx,edx
64017771:	inc    edx
64017772:	add    esp,0xc
64017775:	cmp    DWORD PTR [ebp-0x18],edx
64017778:	mov    DWORD PTR [ebx+0x4],edi
6401777b:	mov    DWORD PTR [ebx+0xc],esi
6401777e:	jbe    0x6401787c
64017784:	cmp    BYTE PTR [ebp-0x12],0x0
64017788:	je     0x6401785d
6401778e:	lea    esi,[ebp-0x11]
64017791:	mov    cl,BYTE PTR [esi]
64017793:	test   cl,cl
64017795:	je     0x6401785d
6401779b:	movzx  eax,BYTE PTR [esi-0x1]
6401779f:	movzx  ecx,cl
640177a2:	jmp    0x6401784d
640177a7:	push   0x101
640177ac:	lea    eax,[ebx+0x1c]
640177af:	push   esi
640177b0:	push   eax
640177b1:	call   0x64014360
640177b6:	mov    ecx,DWORD PTR [ebp-0x1c]
640177b9:	add    esp,0xc
640177bc:	imul   ecx,ecx,0x30
640177bf:	mov    DWORD PTR [ebp-0x20],esi
640177c2:	lea    esi,[ecx+0x6402f6a8]
640177c8:	mov    DWORD PTR [ebp-0x1c],esi
640177cb:	jmp    0x640177f7
640177cd:	mov    al,BYTE PTR [esi+0x1]
640177d0:	test   al,al
640177d2:	je     0x640177fc
640177d4:	movzx  edi,BYTE PTR [esi]
640177d7:	movzx  eax,al
640177da:	jmp    0x640177ee
640177dc:	mov    eax,DWORD PTR [ebp-0x20]
640177df:	mov    al,BYTE PTR [eax+0x6402f694]
640177e5:	or     BYTE PTR [ebx+edi*1+0x1d],al
640177e9:	movzx  eax,BYTE PTR [esi+0x1]
640177ed:	inc    edi
640177ee:	cmp    edi,eax
640177f0:	jbe    0x640177dc
640177f2:	mov    edi,DWORD PTR [ebp+0x8]
640177f5:	inc    esi
640177f6:	inc    esi
640177f7:	cmp    BYTE PTR [esi],0x0
640177fa:	jne    0x640177cd
640177fc:	mov    esi,DWORD PTR [ebp-0x1c]
640177ff:	inc    DWORD PTR [ebp-0x20]
64017802:	add    esi,0x8
64017805:	cmp    DWORD PTR [ebp-0x20],0x4
64017809:	mov    DWORD PTR [ebp-0x1c],esi
6401780c:	jb     0x640177f7
6401780e:	mov    eax,edi
64017810:	mov    DWORD PTR [ebx+0x4],edi
64017813:	mov    DWORD PTR [ebx+0x8],0x1
6401781a:	call   0x640173a2
6401781f:	push   0x6
64017821:	mov    DWORD PTR [ebx+0xc],eax
64017824:	lea    eax,[ebx+0x10]
64017827:	lea    ecx,[ecx+0x6402f69c]
6401782d:	pop    edx
6401782e:	mov    si,WORD PTR [ecx]
64017831:	inc    ecx
64017832:	mov    WORD PTR [eax],si
64017835:	inc    ecx
64017836:	inc    eax
64017837:	inc    eax
64017838:	dec    edx
64017839:	jne    0x6401782e
6401783b:	mov    esi,ebx
6401783d:	call   0x64017426
64017842:	jmp    0x640176fe
64017847:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6401784c:	inc    eax
6401784d:	cmp    eax,ecx
6401784f:	jbe    0x64017847
64017851:	inc    esi
64017852:	inc    esi
64017853:	cmp    BYTE PTR [esi-0x1],0x0
64017857:	jne    0x64017791
6401785d:	lea    eax,[ebx+0x1e]
64017860:	mov    ecx,0xfe
64017865:	or     BYTE PTR [eax],0x8
64017868:	inc    eax
64017869:	dec    ecx
6401786a:	jne    0x64017865
6401786c:	mov    eax,DWORD PTR [ebx+0x4]
6401786f:	call   0x640173a2
64017874:	mov    DWORD PTR [ebx+0xc],eax
64017877:	mov    DWORD PTR [ebx+0x8],edx
6401787a:	jmp    0x6401787f
6401787c:	mov    DWORD PTR [ebx+0x8],esi
6401787f:	xor    eax,eax
64017881:	lea    edi,[ebx+0x10]
64017884:	stos   DWORD PTR es:[edi],eax
64017885:	stos   DWORD PTR es:[edi],eax
64017886:	stos   DWORD PTR es:[edi],eax
64017887:	jmp    0x6401783b
64017889:	cmp    DWORD PTR ds:0x64030918,esi
6401788f:	jne    0x640176f7
64017895:	or     eax,0xffffffff
64017898:	mov    ecx,DWORD PTR [ebp-0x4]
6401789b:	pop    edi
6401789c:	pop    esi
6401789d:	xor    ecx,ebp
6401789f:	pop    ebx
640178a0:	call   0x64013c5c
640178a5:	leave  
640178a6:	ret    
640178a7:	push   0x14
640178a9:	push   0x6402c2b8
640178ae:	call   0x64015220
640178b3:	or     DWORD PTR [ebp-0x20],0xffffffff
640178b7:	call   0x64015d6b
640178bc:	mov    edi,eax
640178be:	mov    DWORD PTR [ebp-0x24],edi
640178c1:	call   0x640175b0
640178c6:	mov    ebx,DWORD PTR [edi+0x68]
640178c9:	mov    esi,DWORD PTR [ebp+0x8]
640178cc:	call   0x64017654
640178d1:	mov    DWORD PTR [ebp+0x8],eax
640178d4:	cmp    eax,DWORD PTR [ebx+0x4]
640178d7:	je     0x64017a34
640178dd:	push   0x220
640178e2:	call   0x64016f30
640178e7:	pop    ecx
640178e8:	mov    ebx,eax
640178ea:	test   ebx,ebx
640178ec:	je     0x64017a38
640178f2:	mov    ecx,0x88
640178f7:	mov    esi,DWORD PTR [edi+0x68]
640178fa:	mov    edi,ebx
640178fc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640178fe:	and    DWORD PTR [ebx],0x0
64017901:	push   ebx
64017902:	push   DWORD PTR [ebp+0x8]
64017905:	call   0x640176ce
6401790a:	pop    ecx
6401790b:	pop    ecx
6401790c:	mov    DWORD PTR [ebp-0x20],eax
6401790f:	test   eax,eax
64017911:	jne    0x64017a13
64017917:	mov    esi,DWORD PTR [ebp-0x24]
6401791a:	push   DWORD PTR [esi+0x68]
6401791d:	call   DWORD PTR ds:0x64026098
64017923:	test   eax,eax
64017925:	jne    0x64017938
64017927:	mov    eax,DWORD PTR [esi+0x68]
6401792a:	cmp    eax,0x6402f268
6401792f:	je     0x64017938
64017931:	push   eax
64017932:	call   0x64014af6
64017937:	pop    ecx
64017938:	mov    DWORD PTR [esi+0x68],ebx
6401793b:	push   ebx
6401793c:	mov    edi,DWORD PTR ds:0x64026020
64017942:	call   edi
64017944:	test   BYTE PTR [esi+0x70],0x2
64017948:	jne    0x64017a38
6401794e:	test   BYTE PTR ds:0x6402f78c,0x1
64017955:	jne    0x64017a38
6401795b:	push   0xd
6401795d:	call   0x6401b21a
64017962:	pop    ecx
64017963:	and    DWORD PTR [ebp-0x4],0x0
64017967:	mov    eax,DWORD PTR [ebx+0x4]
6401796a:	mov    ds:0x64030928,eax
6401796f:	mov    eax,DWORD PTR [ebx+0x8]
64017972:	mov    ds:0x6403092c,eax
64017977:	mov    eax,DWORD PTR [ebx+0xc]
6401797a:	mov    ds:0x64030930,eax
6401797f:	xor    eax,eax
64017981:	mov    DWORD PTR [ebp-0x1c],eax
64017984:	cmp    eax,0x5
64017987:	jge    0x64017999
64017989:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401798e:	mov    WORD PTR [eax*2+0x6403091c],cx
64017996:	inc    eax
64017997:	jmp    0x64017981
64017999:	xor    eax,eax
6401799b:	mov    DWORD PTR [ebp-0x1c],eax
6401799e:	cmp    eax,0x101
640179a3:	jge    0x640179b2
640179a5:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
640179a9:	mov    BYTE PTR [eax+0x6402f488],cl
640179af:	inc    eax
640179b0:	jmp    0x6401799b
640179b2:	xor    eax,eax
640179b4:	mov    DWORD PTR [ebp-0x1c],eax
640179b7:	cmp    eax,0x100
640179bc:	jge    0x640179ce
640179be:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
640179c5:	mov    BYTE PTR [eax+0x6402f590],cl
640179cb:	inc    eax
640179cc:	jmp    0x640179b4
640179ce:	push   DWORD PTR ds:0x6402f690
640179d4:	call   DWORD PTR ds:0x64026098
640179da:	test   eax,eax
640179dc:	jne    0x640179f1
640179de:	mov    eax,ds:0x6402f690
640179e3:	cmp    eax,0x6402f268
640179e8:	je     0x640179f1
640179ea:	push   eax
640179eb:	call   0x64014af6
640179f0:	pop    ecx
640179f1:	mov    DWORD PTR ds:0x6402f690,ebx
640179f7:	push   ebx
640179f8:	call   edi
640179fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017a01:	call   0x64017a08
64017a06:	jmp    0x64017a38
64017a08:	push   0xd
64017a0a:	call   0x6401b142
64017a0f:	pop    ecx
64017a10:	ret    
64017a11:	jmp    0x64017a38
64017a13:	cmp    eax,0xffffffff
64017a16:	jne    0x64017a38
64017a18:	cmp    ebx,0x6402f268
64017a1e:	je     0x64017a27
64017a20:	push   ebx
64017a21:	call   0x64014af6
64017a26:	pop    ecx
64017a27:	call   0x64015a20
64017a2c:	mov    DWORD PTR [eax],0x16
64017a32:	jmp    0x64017a38
64017a34:	and    DWORD PTR [ebp-0x20],0x0
64017a38:	mov    eax,DWORD PTR [ebp-0x20]
64017a3b:	call   0x64015265
64017a40:	ret    
64017a41:	cmp    DWORD PTR ds:0x64034634,0x0
64017a48:	jne    0x64017a5c
64017a4a:	push   0xfffffffd
64017a4c:	call   0x640178a7
64017a51:	pop    ecx
64017a52:	mov    DWORD PTR ds:0x64034634,0x1
64017a5c:	xor    eax,eax
64017a5e:	ret    
64017a5f:	push   ebx
64017a60:	push   ebp
64017a61:	push   esi
64017a62:	mov    esi,DWORD PTR [esp+0x10]
64017a66:	mov    eax,DWORD PTR [esi+0xbc]
64017a6c:	xor    ebp,ebp
64017a6e:	cmp    eax,ebp
64017a70:	push   edi
64017a71:	je     0x64017ae2
64017a73:	cmp    eax,0x6402fc40
64017a78:	je     0x64017ae2
64017a7a:	mov    eax,DWORD PTR [esi+0xb0]
64017a80:	cmp    eax,ebp
64017a82:	je     0x64017ae2
64017a84:	cmp    DWORD PTR [eax],ebp
64017a86:	jne    0x64017ae2
64017a88:	mov    eax,DWORD PTR [esi+0xb8]
64017a8e:	cmp    eax,ebp
64017a90:	je     0x64017aa9
64017a92:	cmp    DWORD PTR [eax],ebp
64017a94:	jne    0x64017aa9
64017a96:	push   eax
64017a97:	call   0x64014af6
64017a9c:	push   DWORD PTR [esi+0xbc]
64017aa2:	call   0x6401cd65
64017aa7:	pop    ecx
64017aa8:	pop    ecx
64017aa9:	mov    eax,DWORD PTR [esi+0xb4]
64017aaf:	cmp    eax,ebp
64017ab1:	je     0x64017aca
64017ab3:	cmp    DWORD PTR [eax],ebp
64017ab5:	jne    0x64017aca
64017ab7:	push   eax
64017ab8:	call   0x64014af6
64017abd:	push   DWORD PTR [esi+0xbc]
64017ac3:	call   0x6401cd25
64017ac8:	pop    ecx
64017ac9:	pop    ecx
64017aca:	push   DWORD PTR [esi+0xb0]
64017ad0:	call   0x64014af6
64017ad5:	push   DWORD PTR [esi+0xbc]
64017adb:	call   0x64014af6
64017ae0:	pop    ecx
64017ae1:	pop    ecx
64017ae2:	mov    eax,DWORD PTR [esi+0xc0]
64017ae8:	cmp    eax,ebp
64017aea:	je     0x64017b30
64017aec:	cmp    DWORD PTR [eax],ebp
64017aee:	jne    0x64017b30
64017af0:	mov    eax,DWORD PTR [esi+0xc4]
64017af6:	sub    eax,0xfe
64017afb:	push   eax
64017afc:	call   0x64014af6
64017b01:	mov    eax,DWORD PTR [esi+0xcc]
64017b07:	mov    edi,0x80
64017b0c:	sub    eax,edi
64017b0e:	push   eax
64017b0f:	call   0x64014af6
64017b14:	mov    eax,DWORD PTR [esi+0xd0]
64017b1a:	sub    eax,edi
64017b1c:	push   eax
64017b1d:	call   0x64014af6
64017b22:	push   DWORD PTR [esi+0xc0]
64017b28:	call   0x64014af6
64017b2d:	add    esp,0x10
64017b30:	lea    edi,[esi+0xd4]
64017b36:	mov    eax,DWORD PTR [edi]
64017b38:	cmp    eax,0x6402fb80
64017b3d:	je     0x64017b56
64017b3f:	cmp    DWORD PTR [eax+0xb4],ebp
64017b45:	jne    0x64017b56
64017b47:	push   eax
64017b48:	call   0x6401cb95
64017b4d:	push   DWORD PTR [edi]
64017b4f:	call   0x64014af6
64017b54:	pop    ecx
64017b55:	pop    ecx
64017b56:	push   0x6
64017b58:	lea    edi,[esi+0x50]
64017b5b:	pop    ebx
64017b5c:	cmp    DWORD PTR [edi-0x8],0x6402f790
64017b63:	je     0x64017b76
64017b65:	mov    eax,DWORD PTR [edi]
64017b67:	cmp    eax,ebp
64017b69:	je     0x64017b76
64017b6b:	cmp    DWORD PTR [eax],ebp
64017b6d:	jne    0x64017b76
64017b6f:	push   eax
64017b70:	call   0x64014af6
64017b75:	pop    ecx
64017b76:	cmp    DWORD PTR [edi-0x4],ebp
64017b79:	je     0x64017b8d
64017b7b:	mov    eax,DWORD PTR [edi+0x4]
64017b7e:	cmp    eax,ebp
64017b80:	je     0x64017b8d
64017b82:	cmp    DWORD PTR [eax],ebp
64017b84:	jne    0x64017b8d
64017b86:	push   eax
64017b87:	call   0x64014af6
64017b8c:	pop    ecx
64017b8d:	add    edi,0x10
64017b90:	dec    ebx
64017b91:	jne    0x64017b5c
64017b93:	push   esi
64017b94:	call   0x64014af6
64017b99:	pop    ecx
64017b9a:	pop    edi
64017b9b:	pop    esi
64017b9c:	pop    ebp
64017b9d:	pop    ebx
64017b9e:	ret    
64017b9f:	push   ebx
64017ba0:	push   ebp
64017ba1:	push   esi
64017ba2:	mov    esi,DWORD PTR [esp+0x10]
64017ba6:	push   edi
64017ba7:	mov    edi,DWORD PTR ds:0x64026020
64017bad:	push   esi
64017bae:	call   edi
64017bb0:	mov    eax,DWORD PTR [esi+0xb0]
64017bb6:	test   eax,eax
64017bb8:	je     0x64017bbd
64017bba:	push   eax
64017bbb:	call   edi
64017bbd:	mov    eax,DWORD PTR [esi+0xb8]
64017bc3:	test   eax,eax
64017bc5:	je     0x64017bca
64017bc7:	push   eax
64017bc8:	call   edi
64017bca:	mov    eax,DWORD PTR [esi+0xb4]
64017bd0:	test   eax,eax
64017bd2:	je     0x64017bd7
64017bd4:	push   eax
64017bd5:	call   edi
64017bd7:	mov    eax,DWORD PTR [esi+0xc0]
64017bdd:	test   eax,eax
64017bdf:	je     0x64017be4
64017be1:	push   eax
64017be2:	call   edi
64017be4:	push   0x6
64017be6:	lea    ebx,[esi+0x50]
64017be9:	pop    ebp
64017bea:	cmp    DWORD PTR [ebx-0x8],0x6402f790
64017bf1:	je     0x64017bfc
64017bf3:	mov    eax,DWORD PTR [ebx]
64017bf5:	test   eax,eax
64017bf7:	je     0x64017bfc
64017bf9:	push   eax
64017bfa:	call   edi
64017bfc:	cmp    DWORD PTR [ebx-0x4],0x0
64017c00:	je     0x64017c0c
64017c02:	mov    eax,DWORD PTR [ebx+0x4]
64017c05:	test   eax,eax
64017c07:	je     0x64017c0c
64017c09:	push   eax
64017c0a:	call   edi
64017c0c:	add    ebx,0x10
64017c0f:	dec    ebp
64017c10:	jne    0x64017bea
64017c12:	mov    eax,DWORD PTR [esi+0xd4]
64017c18:	add    eax,0xb4
64017c1d:	push   eax
64017c1e:	call   edi
64017c20:	pop    edi
64017c21:	pop    esi
64017c22:	pop    ebp
64017c23:	pop    ebx
64017c24:	ret    
64017c25:	push   esi
64017c26:	mov    esi,DWORD PTR [esp+0x8]
64017c2a:	test   esi,esi
64017c2c:	je     0x64017cad
64017c2e:	push   ebx
64017c2f:	push   ebp
64017c30:	push   edi
64017c31:	mov    edi,DWORD PTR ds:0x64026098
64017c37:	push   esi
64017c38:	call   edi
64017c3a:	mov    eax,DWORD PTR [esi+0xb0]
64017c40:	test   eax,eax
64017c42:	je     0x64017c47
64017c44:	push   eax
64017c45:	call   edi
64017c47:	mov    eax,DWORD PTR [esi+0xb8]
64017c4d:	test   eax,eax
64017c4f:	je     0x64017c54
64017c51:	push   eax
64017c52:	call   edi
64017c54:	mov    eax,DWORD PTR [esi+0xb4]
64017c5a:	test   eax,eax
64017c5c:	je     0x64017c61
64017c5e:	push   eax
64017c5f:	call   edi
64017c61:	mov    eax,DWORD PTR [esi+0xc0]
64017c67:	test   eax,eax
64017c69:	je     0x64017c6e
64017c6b:	push   eax
64017c6c:	call   edi
64017c6e:	push   0x6
64017c70:	lea    ebx,[esi+0x50]
64017c73:	pop    ebp
64017c74:	cmp    DWORD PTR [ebx-0x8],0x6402f790
64017c7b:	je     0x64017c86
64017c7d:	mov    eax,DWORD PTR [ebx]
64017c7f:	test   eax,eax
64017c81:	je     0x64017c86
64017c83:	push   eax
64017c84:	call   edi
64017c86:	cmp    DWORD PTR [ebx-0x4],0x0
64017c8a:	je     0x64017c96
64017c8c:	mov    eax,DWORD PTR [ebx+0x4]
64017c8f:	test   eax,eax
64017c91:	je     0x64017c96
64017c93:	push   eax
64017c94:	call   edi
64017c96:	add    ebx,0x10
64017c99:	dec    ebp
64017c9a:	jne    0x64017c74
64017c9c:	mov    eax,DWORD PTR [esi+0xd4]
64017ca2:	add    eax,0xb4
64017ca7:	push   eax
64017ca8:	call   edi
64017caa:	pop    edi
64017cab:	pop    ebp
64017cac:	pop    ebx
64017cad:	mov    eax,esi
64017caf:	pop    esi
64017cb0:	ret    
64017cb1:	test   edi,edi
64017cb3:	je     0x64017cec
64017cb5:	test   eax,eax
64017cb7:	je     0x64017cec
64017cb9:	push   esi
64017cba:	mov    esi,DWORD PTR [eax]
64017cbc:	cmp    esi,edi
64017cbe:	je     0x64017ce8
64017cc0:	push   edi
64017cc1:	mov    DWORD PTR [eax],edi
64017cc3:	call   0x64017b9f
64017cc8:	test   esi,esi
64017cca:	pop    ecx
64017ccb:	je     0x64017ce8
64017ccd:	push   esi
64017cce:	call   0x64017c25
64017cd3:	cmp    DWORD PTR [esi],0x0
64017cd6:	pop    ecx
64017cd7:	jne    0x64017ce8
64017cd9:	cmp    esi,0x6402f798
64017cdf:	je     0x64017ce8
64017ce1:	push   esi
64017ce2:	call   0x64017a5f
64017ce7:	pop    ecx
64017ce8:	mov    eax,edi
64017cea:	pop    esi
64017ceb:	ret    
64017cec:	xor    eax,eax
64017cee:	ret    
64017cef:	push   0xc
64017cf1:	push   0x6402c2d8
64017cf6:	call   0x64015220
64017cfb:	call   0x64015d6b
64017d00:	mov    esi,eax
64017d02:	mov    eax,ds:0x6402f78c
64017d07:	test   DWORD PTR [esi+0x70],eax
64017d0a:	je     0x64017d2e
64017d0c:	cmp    DWORD PTR [esi+0x6c],0x0
64017d10:	je     0x64017d2e
64017d12:	call   0x64015d6b
64017d17:	mov    esi,DWORD PTR [eax+0x6c]
64017d1a:	test   esi,esi
64017d1c:	jne    0x64017d26
64017d1e:	push   0x20
64017d20:	call   0x640170a6
64017d25:	pop    ecx
64017d26:	mov    eax,esi
64017d28:	call   0x64015265
64017d2d:	ret    
64017d2e:	push   0xc
64017d30:	call   0x6401b21a
64017d35:	pop    ecx
64017d36:	and    DWORD PTR [ebp-0x4],0x0
64017d3a:	lea    eax,[esi+0x6c]
64017d3d:	mov    edi,DWORD PTR ds:0x6402f870
64017d43:	call   0x64017cb1
64017d48:	mov    DWORD PTR [ebp-0x1c],eax
64017d4b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d52:	call   0x64017d59
64017d57:	jmp    0x64017d1a
64017d59:	push   0xc
64017d5b:	call   0x6401b142
64017d60:	pop    ecx
64017d61:	mov    esi,DWORD PTR [ebp-0x1c]
64017d64:	ret    
64017d65:	push   ebp
64017d66:	mov    ebp,esp
64017d68:	push   ecx
64017d69:	push   esi
64017d6a:	mov    esi,DWORD PTR [ebp+0xc]
64017d6d:	push   esi
64017d6e:	call   0x6401da7d
64017d73:	mov    DWORD PTR [ebp+0xc],eax
64017d76:	mov    eax,DWORD PTR [esi+0xc]
64017d79:	test   al,0x82
64017d7b:	pop    ecx
64017d7c:	jne    0x64017d95
64017d7e:	call   0x64015a20
64017d83:	mov    DWORD PTR [eax],0x9
64017d89:	or     DWORD PTR [esi+0xc],0x20
64017d8d:	or     eax,0xffffffff
64017d90:	jmp    0x64017ec2
64017d95:	test   al,0x40
64017d97:	je     0x64017da6
64017d99:	call   0x64015a20
64017d9e:	mov    DWORD PTR [eax],0x22
64017da4:	jmp    0x64017d89
64017da6:	push   ebx
64017da7:	xor    ebx,ebx
64017da9:	test   al,0x1
64017dab:	je     0x64017dc3
64017dad:	test   al,0x10
64017daf:	mov    DWORD PTR [esi+0x4],ebx
64017db2:	je     0x64017e3d
64017db8:	mov    ecx,DWORD PTR [esi+0x8]
64017dbb:	and    eax,0xfffffffe
64017dbe:	mov    DWORD PTR [esi],ecx
64017dc0:	mov    DWORD PTR [esi+0xc],eax
64017dc3:	mov    eax,DWORD PTR [esi+0xc]
64017dc6:	and    eax,0xffffffef
64017dc9:	or     eax,0x2
64017dcc:	test   ax,0x10c
64017dd0:	mov    DWORD PTR [esi+0xc],eax
64017dd3:	mov    DWORD PTR [esi+0x4],ebx
64017dd6:	mov    DWORD PTR [ebp-0x4],ebx
64017dd9:	jne    0x64017e07
64017ddb:	call   0x6401d8dc
64017de0:	add    eax,0x20
64017de3:	cmp    esi,eax
64017de5:	je     0x64017df3
64017de7:	call   0x6401d8dc
64017dec:	add    eax,0x40
64017def:	cmp    esi,eax
64017df1:	jne    0x64017e00
64017df3:	push   DWORD PTR [ebp+0xc]
64017df6:	call   0x6401d87e
64017dfb:	test   eax,eax
64017dfd:	pop    ecx
64017dfe:	jne    0x64017e07
64017e00:	push   esi
64017e01:	call   0x6401d83a
64017e06:	pop    ecx
64017e07:	test   WORD PTR [esi+0xc],0x108
64017e0d:	push   edi
64017e0e:	je     0x64017e94
64017e14:	mov    eax,DWORD PTR [esi+0x8]
64017e17:	mov    edi,DWORD PTR [esi]
64017e19:	lea    ecx,[eax+0x1]
64017e1c:	mov    DWORD PTR [esi],ecx
64017e1e:	mov    ecx,DWORD PTR [esi+0x18]
64017e21:	sub    edi,eax
64017e23:	dec    ecx
64017e24:	cmp    edi,ebx
64017e26:	mov    DWORD PTR [esi+0x4],ecx
64017e29:	jle    0x64017e48
64017e2b:	push   edi
64017e2c:	push   eax
64017e2d:	push   DWORD PTR [ebp+0xc]
64017e30:	call   0x6401d75e
64017e35:	add    esp,0xc
64017e38:	mov    DWORD PTR [ebp-0x4],eax
64017e3b:	jmp    0x64017e8a
64017e3d:	or     eax,0x20
64017e40:	mov    DWORD PTR [esi+0xc],eax
64017e43:	or     eax,0xffffffff
64017e46:	jmp    0x64017ec1
64017e48:	mov    ecx,DWORD PTR [ebp+0xc]
64017e4b:	cmp    ecx,0xffffffff
64017e4e:	je     0x64017e6b
64017e50:	cmp    ecx,0xfffffffe
64017e53:	je     0x64017e6b
64017e55:	mov    eax,ecx
64017e57:	and    eax,0x1f
64017e5a:	mov    edx,ecx
64017e5c:	sar    edx,0x5
64017e5f:	shl    eax,0x6
64017e62:	add    eax,DWORD PTR [edx*4+0x64034520]
64017e69:	jmp    0x64017e70
64017e6b:	mov    eax,0x6402f880
64017e70:	test   BYTE PTR [eax+0x4],0x20
64017e74:	je     0x64017e8a
64017e76:	push   0x2
64017e78:	push   ebx
64017e79:	push   ebx
64017e7a:	push   ecx
64017e7b:	call   0x6401d023
64017e80:	and    eax,edx
64017e82:	add    esp,0x10
64017e85:	cmp    eax,0xffffffff
64017e88:	je     0x64017eaf
64017e8a:	mov    eax,DWORD PTR [esi+0x8]
64017e8d:	mov    cl,BYTE PTR [ebp+0x8]
64017e90:	mov    BYTE PTR [eax],cl
64017e92:	jmp    0x64017eaa
64017e94:	xor    edi,edi
64017e96:	inc    edi
64017e97:	push   edi
64017e98:	lea    eax,[ebp+0x8]
64017e9b:	push   eax
64017e9c:	push   DWORD PTR [ebp+0xc]
64017e9f:	call   0x6401d75e
64017ea4:	add    esp,0xc
64017ea7:	mov    DWORD PTR [ebp-0x4],eax
64017eaa:	cmp    DWORD PTR [ebp-0x4],edi
64017ead:	je     0x64017eb8
64017eaf:	or     DWORD PTR [esi+0xc],0x20
64017eb3:	or     eax,0xffffffff
64017eb6:	jmp    0x64017ec0
64017eb8:	mov    eax,DWORD PTR [ebp+0x8]
64017ebb:	and    eax,0xff
64017ec0:	pop    edi
64017ec1:	pop    ebx
64017ec2:	pop    esi
64017ec3:	leave  
64017ec4:	ret    
64017ec5:	test   BYTE PTR [eax+0xc],0x40
64017ec9:	je     0x64017ed1
64017ecb:	cmp    DWORD PTR [eax+0x8],0x0
64017ecf:	je     0x64017ee7
64017ed1:	push   eax
64017ed2:	push   DWORD PTR [esp+0x8]
64017ed6:	call   0x6401daaa
64017edb:	cmp    ax,0xffff
64017edf:	pop    ecx
64017ee0:	pop    ecx
64017ee1:	jne    0x64017ee7
64017ee3:	or     DWORD PTR [esi],0xffffffff
64017ee6:	ret    
64017ee7:	inc    DWORD PTR [esi]
64017ee9:	ret    
64017eea:	push   ebp
64017eeb:	mov    ebp,esp
64017eed:	push   esi
64017eee:	mov    esi,eax
64017ef0:	jmp    0x64017f06
64017ef2:	push   DWORD PTR [ebp+0x8]
64017ef5:	mov    eax,DWORD PTR [ebp+0x10]
64017ef8:	dec    DWORD PTR [ebp+0xc]
64017efb:	call   0x64017ec5
64017f00:	cmp    DWORD PTR [esi],0xffffffff
64017f03:	pop    ecx
64017f04:	je     0x64017f0c
64017f06:	cmp    DWORD PTR [ebp+0xc],0x0
64017f0a:	jg     0x64017ef2
64017f0c:	pop    esi
64017f0d:	pop    ebp
64017f0e:	ret    
64017f0f:	push   ebp
64017f10:	lea    ebp,[esp-0x3f4]
64017f17:	sub    esp,0x474
64017f1d:	mov    eax,ds:0x6402f09c
64017f22:	xor    eax,ebp
64017f24:	mov    DWORD PTR [ebp+0x3f0],eax
64017f2a:	mov    eax,DWORD PTR [ebp+0x3fc]
64017f30:	push   ebx
64017f31:	mov    ebx,DWORD PTR [ebp+0x408]
64017f37:	push   esi
64017f38:	mov    esi,DWORD PTR [ebp+0x400]
64017f3e:	push   edi
64017f3f:	push   DWORD PTR [ebp+0x404]
64017f45:	xor    edi,edi
64017f47:	lea    ecx,[ebp-0x64]
64017f4a:	mov    DWORD PTR [ebp-0x3c],eax
64017f4d:	mov    DWORD PTR [ebp-0x28],ebx
64017f50:	mov    DWORD PTR [ebp-0x54],edi
64017f53:	mov    DWORD PTR [ebp-0x14],edi
64017f56:	mov    DWORD PTR [ebp-0x38],edi
64017f59:	mov    DWORD PTR [ebp-0x18],edi
64017f5c:	mov    DWORD PTR [ebp-0x30],edi
64017f5f:	mov    DWORD PTR [ebp-0x48],edi
64017f62:	mov    DWORD PTR [ebp-0x34],edi
64017f65:	call   0x64013dff
64017f6a:	cmp    DWORD PTR [ebp-0x3c],edi
64017f6d:	jne    0x64017f9c
64017f6f:	call   0x64015a20
64017f74:	push   edi
64017f75:	push   edi
64017f76:	push   edi
64017f77:	push   edi
64017f78:	mov    DWORD PTR [eax],0x16
64017f7e:	push   edi
64017f7f:	call   0x64013794
64017f84:	add    esp,0x14
64017f87:	cmp    BYTE PTR [ebp-0x58],0x0
64017f8b:	je     0x64017f94
64017f8d:	mov    eax,DWORD PTR [ebp-0x5c]
64017f90:	and    DWORD PTR [eax+0x70],0xfffffffd
64017f94:	or     eax,0xffffffff
64017f97:	jmp    0x640187e7
64017f9c:	cmp    esi,edi
64017f9e:	je     0x64017f6f
64017fa0:	movzx  edx,WORD PTR [esi]
64017fa3:	xor    ecx,ecx
64017fa5:	cmp    dx,di
64017fa8:	mov    DWORD PTR [ebp-0x2c],edi
64017fab:	mov    DWORD PTR [ebp-0x20],edi
64017fae:	mov    DWORD PTR [ebp-0x50],edi
64017fb1:	mov    DWORD PTR [ebp-0x24],edx
64017fb4:	je     0x640187d7
64017fba:	push   0x2
64017fbc:	pop    edi
64017fbd:	add    esi,edi
64017fbf:	cmp    DWORD PTR [ebp-0x2c],0x0
64017fc3:	mov    DWORD PTR [ebp-0x4c],esi
64017fc6:	jl     0x640187d7
64017fcc:	lea    eax,[edx-0x20]
64017fcf:	cmp    ax,0x58
64017fd3:	ja     0x64017fe4
64017fd5:	movzx  eax,dx
64017fd8:	movzx  eax,BYTE PTR [eax+0x64026e10]
64017fdf:	and    eax,0xf
64017fe2:	jmp    0x64017fe6
64017fe4:	xor    eax,eax
64017fe6:	movsx  eax,BYTE PTR [ecx+eax*8+0x64026e30]
64017fee:	push   0x7
64017ff0:	sar    eax,0x4
64017ff3:	pop    ecx
64017ff4:	cmp    eax,ecx
64017ff6:	mov    DWORD PTR [ebp-0x68],eax
64017ff9:	ja     0x640187a5
64017fff:	jmp    DWORD PTR [eax*4+0x640187ff]
64018006:	xor    eax,eax
64018008:	or     DWORD PTR [ebp-0x18],0xffffffff
6401800c:	mov    DWORD PTR [ebp-0x6c],eax
6401800f:	mov    DWORD PTR [ebp-0x48],eax
64018012:	mov    DWORD PTR [ebp-0x38],eax
64018015:	mov    DWORD PTR [ebp-0x30],eax
64018018:	mov    DWORD PTR [ebp-0x14],eax
6401801b:	mov    DWORD PTR [ebp-0x34],eax
6401801e:	jmp    0x640187a5
64018023:	movzx  eax,dx
64018026:	sub    eax,0x20
64018029:	je     0x64018069
6401802b:	sub    eax,0x3
6401802e:	je     0x6401805d
64018030:	sub    eax,0x8
64018033:	je     0x64018054
64018035:	sub    eax,edi
64018037:	je     0x6401804b
64018039:	sub    eax,0x3
6401803c:	jne    0x640187a5
64018042:	or     DWORD PTR [ebp-0x14],0x8
64018046:	jmp    0x640187a5
6401804b:	or     DWORD PTR [ebp-0x14],0x4
6401804f:	jmp    0x640187a5
64018054:	or     DWORD PTR [ebp-0x14],0x1
64018058:	jmp    0x640187a5
6401805d:	or     DWORD PTR [ebp-0x14],0x80
64018064:	jmp    0x640187a5
64018069:	or     DWORD PTR [ebp-0x14],edi
6401806c:	jmp    0x640187a5
64018071:	cmp    dx,0x2a
64018075:	jne    0x64018097
64018077:	add    ebx,0x4
6401807a:	mov    DWORD PTR [ebp-0x28],ebx
6401807d:	mov    ebx,DWORD PTR [ebx-0x4]
64018080:	test   ebx,ebx
64018082:	mov    DWORD PTR [ebp-0x38],ebx
64018085:	jge    0x640187a5
6401808b:	or     DWORD PTR [ebp-0x14],0x4
6401808f:	neg    DWORD PTR [ebp-0x38]
64018092:	jmp    0x640187a5
64018097:	mov    eax,DWORD PTR [ebp-0x38]
6401809a:	imul   eax,eax,0xa
6401809d:	movzx  ecx,dx
640180a0:	lea    eax,[eax+ecx*1-0x30]
640180a4:	mov    DWORD PTR [ebp-0x38],eax
640180a7:	jmp    0x640187a5
640180ac:	and    DWORD PTR [ebp-0x18],0x0
640180b0:	jmp    0x640187a5
640180b5:	cmp    dx,0x2a
640180b9:	jne    0x640180d8
640180bb:	add    ebx,0x4
640180be:	mov    DWORD PTR [ebp-0x28],ebx
640180c1:	mov    ebx,DWORD PTR [ebx-0x4]
640180c4:	test   ebx,ebx
640180c6:	mov    DWORD PTR [ebp-0x18],ebx
640180c9:	jge    0x640187a5
640180cf:	or     DWORD PTR [ebp-0x18],0xffffffff
640180d3:	jmp    0x640187a5
640180d8:	mov    eax,DWORD PTR [ebp-0x18]
640180db:	imul   eax,eax,0xa
640180de:	movzx  ecx,dx
640180e1:	lea    eax,[eax+ecx*1-0x30]
640180e5:	mov    DWORD PTR [ebp-0x18],eax
640180e8:	jmp    0x640187a5
640180ed:	movzx  eax,dx
640180f0:	cmp    eax,0x49
640180f3:	je     0x6401813d
640180f5:	cmp    eax,0x68
640180f8:	je     0x64018134
640180fa:	cmp    eax,0x6c
640180fd:	je     0x64018114
640180ff:	cmp    eax,0x77
64018102:	jne    0x640187a5
64018108:	or     DWORD PTR [ebp-0x14],0x800
6401810f:	jmp    0x640187a5
64018114:	cmp    WORD PTR [esi],0x6c
64018118:	jne    0x6401812b
6401811a:	add    esi,edi
6401811c:	or     DWORD PTR [ebp-0x14],0x1000
64018123:	mov    DWORD PTR [ebp-0x4c],esi
64018126:	jmp    0x640187a5
6401812b:	or     DWORD PTR [ebp-0x14],0x10
6401812f:	jmp    0x640187a5
64018134:	or     DWORD PTR [ebp-0x14],0x20
64018138:	jmp    0x640187a5
6401813d:	movzx  eax,WORD PTR [esi]
64018140:	cmp    ax,0x36
64018144:	jne    0x6401815f
64018146:	cmp    WORD PTR [esi+0x2],0x34
6401814b:	jne    0x6401815f
6401814d:	add    esi,0x4
64018150:	or     DWORD PTR [ebp-0x14],0x8000
64018157:	mov    DWORD PTR [ebp-0x4c],esi
6401815a:	jmp    0x640187a5
6401815f:	cmp    ax,0x33
64018163:	jne    0x6401817e
64018165:	cmp    WORD PTR [esi+0x2],0x32
6401816a:	jne    0x6401817e
6401816c:	add    esi,0x4
6401816f:	and    DWORD PTR [ebp-0x14],0xffff7fff
64018176:	mov    DWORD PTR [ebp-0x4c],esi
64018179:	jmp    0x640187a5
6401817e:	cmp    ax,0x64
64018182:	je     0x640187a5
64018188:	cmp    ax,0x69
6401818c:	je     0x640187a5
64018192:	cmp    ax,0x6f
64018196:	je     0x640187a5
6401819c:	cmp    ax,0x75
640181a0:	je     0x640187a5
640181a6:	cmp    ax,0x78
640181aa:	je     0x640187a5
640181b0:	cmp    ax,0x58
640181b4:	je     0x640187a5
640181ba:	and    DWORD PTR [ebp-0x68],0x0
640181be:	mov    eax,DWORD PTR [ebp-0x3c]
640181c1:	push   edx
640181c2:	lea    esi,[ebp-0x2c]
640181c5:	mov    DWORD PTR [ebp-0x34],0x1
640181cc:	call   0x64017ec5
640181d1:	jmp    0x640187a4
640181d6:	movzx  eax,dx
640181d9:	cmp    eax,0x64
640181dc:	jg     0x64018389
640181e2:	je     0x64018408
640181e8:	cmp    eax,0x53
640181eb:	jg     0x640182c8
640181f1:	je     0x64018252
640181f3:	sub    eax,0x41
640181f6:	je     0x64018208
640181f8:	sub    eax,edi
640181fa:	je     0x6401823d
640181fc:	sub    eax,edi
640181fe:	je     0x64018208
64018200:	sub    eax,edi
64018202:	jne    0x64018689
64018208:	add    edx,0x20
6401820b:	mov    DWORD PTR [ebp-0x6c],0x1
64018212:	mov    DWORD PTR [ebp-0x24],edx
64018215:	or     DWORD PTR [ebp-0x14],0x40
64018219:	cmp    DWORD PTR [ebp-0x18],0x0
6401821d:	lea    esi,[ebp-0x10]
64018220:	mov    eax,0x200
64018225:	mov    DWORD PTR [ebp-0x1c],esi
64018228:	mov    DWORD PTR [ebp-0x20],eax
6401822b:	jge    0x6401842c
64018231:	mov    DWORD PTR [ebp-0x18],0x6
64018238:	jmp    0x64018479
6401823d:	test   WORD PTR [ebp-0x14],0x830
64018243:	jne    0x640182e5
64018249:	or     DWORD PTR [ebp-0x14],0x20
6401824d:	jmp    0x640182e5
64018252:	test   WORD PTR [ebp-0x14],0x830
64018258:	jne    0x6401825e
6401825a:	or     DWORD PTR [ebp-0x14],0x20
6401825e:	mov    edi,DWORD PTR [ebp-0x18]
64018261:	cmp    edi,0xffffffff
64018264:	jne    0x6401826b
64018266:	mov    edi,0x7fffffff
6401826b:	add    ebx,0x4
6401826e:	test   BYTE PTR [ebp-0x14],0x20
64018272:	mov    DWORD PTR [ebp-0x28],ebx
64018275:	mov    ebx,DWORD PTR [ebx-0x4]
64018278:	mov    DWORD PTR [ebp-0x1c],ebx
6401827b:	je     0x6401865c
64018281:	test   ebx,ebx
64018283:	jne    0x6401828d
64018285:	mov    eax,ds:0x6402f950
6401828a:	mov    DWORD PTR [ebp-0x1c],eax
6401828d:	and    DWORD PTR [ebp-0x20],0x0
64018291:	test   edi,edi
64018293:	mov    esi,DWORD PTR [ebp-0x1c]
64018296:	jle    0x64018689
6401829c:	mov    al,BYTE PTR [esi]
6401829e:	test   al,al
640182a0:	je     0x64018689
640182a6:	lea    ecx,[ebp-0x64]
640182a9:	movzx  eax,al
640182ac:	push   ecx
640182ad:	push   eax
640182ae:	call   0x6401b060
640182b3:	test   eax,eax
640182b5:	pop    ecx
640182b6:	pop    ecx
640182b7:	je     0x640182ba
640182b9:	inc    esi
640182ba:	inc    esi
640182bb:	inc    DWORD PTR [ebp-0x20]
640182be:	cmp    DWORD PTR [ebp-0x20],edi
640182c1:	jl     0x6401829c
640182c3:	jmp    0x64018689
640182c8:	sub    eax,0x58
640182cb:	je     0x64018514
640182d1:	sub    eax,edi
640182d3:	je     0x6401833c
640182d5:	sub    eax,ecx
640182d7:	je     0x64018215
640182dd:	sub    eax,edi
640182df:	jne    0x64018689
640182e5:	movzx  eax,WORD PTR [ebx]
640182e8:	add    ebx,0x4
640182eb:	xor    esi,esi
640182ed:	inc    esi
640182ee:	test   BYTE PTR [ebp-0x14],0x20
640182f2:	mov    DWORD PTR [ebp-0x34],esi
640182f5:	mov    DWORD PTR [ebp-0x28],ebx
640182f8:	mov    DWORD PTR [ebp-0x70],eax
640182fb:	je     0x6401832a
640182fd:	mov    BYTE PTR [ebp-0x40],al
64018300:	lea    eax,[ebp-0x64]
64018303:	push   eax
64018304:	mov    eax,DWORD PTR [ebp-0x64]
64018307:	mov    BYTE PTR [ebp-0x3f],0x0
6401830b:	push   DWORD PTR [eax+0xac]
64018311:	lea    eax,[ebp-0x40]
64018314:	push   eax
64018315:	lea    eax,[ebp-0x10]
64018318:	push   eax
64018319:	call   0x6401dc9e
6401831e:	add    esp,0x10
64018321:	test   eax,eax
64018323:	jge    0x6401832e
64018325:	mov    DWORD PTR [ebp-0x48],esi
64018328:	jmp    0x6401832e
6401832a:	mov    WORD PTR [ebp-0x10],ax
6401832e:	lea    eax,[ebp-0x10]
64018331:	mov    DWORD PTR [ebp-0x1c],eax
64018334:	mov    DWORD PTR [ebp-0x20],esi
64018337:	jmp    0x64018689
6401833c:	mov    eax,DWORD PTR [ebx]
6401833e:	add    ebx,0x4
64018341:	test   eax,eax
64018343:	mov    DWORD PTR [ebp-0x28],ebx
64018346:	je     0x64018375
64018348:	mov    ecx,DWORD PTR [eax+0x4]
6401834b:	test   ecx,ecx
6401834d:	je     0x64018375
6401834f:	test   WORD PTR [ebp-0x14],0x800
64018355:	movsx  eax,WORD PTR [eax]
64018358:	mov    DWORD PTR [ebp-0x1c],ecx
6401835b:	je     0x6401836c
6401835d:	cdq    
6401835e:	sub    eax,edx
64018360:	mov    DWORD PTR [ebp-0x34],0x1
64018367:	jmp    0x64018684
6401836c:	and    DWORD PTR [ebp-0x34],0x0
64018370:	jmp    0x64018686
64018375:	mov    eax,ds:0x6402f950
6401837a:	mov    DWORD PTR [ebp-0x1c],eax
6401837d:	push   eax
6401837e:	call   0x64015420
64018383:	pop    ecx
64018384:	jmp    0x64018686
64018389:	cmp    eax,0x70
6401838c:	jg     0x64018519
64018392:	je     0x6401850d
64018398:	cmp    eax,0x65
6401839b:	jl     0x64018689
640183a1:	cmp    eax,0x67
640183a4:	jle    0x64018215
640183aa:	cmp    eax,0x69
640183ad:	je     0x64018408
640183af:	cmp    eax,0x6e
640183b2:	je     0x640183d3
640183b4:	cmp    eax,0x6f
640183b7:	jne    0x64018689
640183bd:	test   BYTE PTR [ebp-0x14],0x80
640183c1:	mov    DWORD PTR [ebp-0x24],0x8
640183c8:	je     0x64018413
640183ca:	or     DWORD PTR [ebp-0x14],0x200
640183d1:	jmp    0x64018413
640183d3:	mov    esi,DWORD PTR [ebx]
640183d5:	add    ebx,0x4
640183d8:	mov    DWORD PTR [ebp-0x28],ebx
640183db:	call   0x6401dc88
640183e0:	test   eax,eax
640183e2:	je     0x640187c0
640183e8:	test   BYTE PTR [ebp-0x14],0x20
640183ec:	je     0x640183f7
640183ee:	mov    ax,WORD PTR [ebp-0x2c]
640183f2:	mov    WORD PTR [esi],ax
640183f5:	jmp    0x640183fc
640183f7:	mov    eax,DWORD PTR [ebp-0x2c]
640183fa:	mov    DWORD PTR [esi],eax
640183fc:	mov    DWORD PTR [ebp-0x48],0x1
64018403:	jmp    0x64018792
64018408:	or     DWORD PTR [ebp-0x14],0x40
6401840c:	mov    DWORD PTR [ebp-0x24],0xa
64018413:	test   WORD PTR [ebp-0x14],0x8000
64018419:	je     0x64018563
6401841f:	mov    eax,DWORD PTR [ebx]
64018421:	mov    edx,DWORD PTR [ebx+0x4]
64018424:	add    ebx,0x8
64018427:	jmp    0x6401859c
6401842c:	jne    0x6401843d
6401842e:	cmp    dx,0x67
64018432:	jne    0x64018479
64018434:	mov    DWORD PTR [ebp-0x18],0x1
6401843b:	jmp    0x64018479
6401843d:	cmp    DWORD PTR [ebp-0x18],eax
64018440:	jle    0x64018445
64018442:	mov    DWORD PTR [ebp-0x18],eax
64018445:	cmp    DWORD PTR [ebp-0x18],0xa3
6401844c:	jle    0x64018479
6401844e:	mov    edi,DWORD PTR [ebp-0x18]
64018451:	add    edi,0x15d
64018457:	push   edi
64018458:	call   0x64016f30
6401845d:	test   eax,eax
6401845f:	mov    edx,DWORD PTR [ebp-0x24]
64018462:	pop    ecx
64018463:	mov    DWORD PTR [ebp-0x50],eax
64018466:	je     0x64018472
64018468:	mov    DWORD PTR [ebp-0x1c],eax
6401846b:	mov    DWORD PTR [ebp-0x20],edi
6401846e:	mov    esi,eax
64018470:	jmp    0x64018479
64018472:	mov    DWORD PTR [ebp-0x18],0xa3
64018479:	mov    eax,DWORD PTR [ebx]
6401847b:	add    ebx,0x8
6401847e:	mov    DWORD PTR [ebp-0x78],eax
64018481:	mov    eax,DWORD PTR [ebx-0x4]
64018484:	mov    DWORD PTR [ebp-0x74],eax
64018487:	lea    eax,[ebp-0x64]
6401848a:	push   eax
6401848b:	push   DWORD PTR [ebp-0x6c]
6401848e:	movsx  eax,dl
64018491:	push   DWORD PTR [ebp-0x18]
64018494:	mov    DWORD PTR [ebp-0x28],ebx
64018497:	push   eax
64018498:	push   DWORD PTR [ebp-0x20]
6401849b:	lea    eax,[ebp-0x78]
6401849e:	push   esi
6401849f:	push   eax
640184a0:	push   DWORD PTR ds:0x6402fb64
640184a6:	call   0x64015b4f
640184ab:	pop    ecx
640184ac:	call   eax
640184ae:	mov    ebx,DWORD PTR [ebp-0x14]
640184b1:	add    esp,0x1c
640184b4:	and    ebx,0x80
640184ba:	je     0x640184d7
640184bc:	cmp    DWORD PTR [ebp-0x18],0x0
640184c0:	jne    0x640184d7
640184c2:	lea    eax,[ebp-0x64]
640184c5:	push   eax
640184c6:	push   esi
640184c7:	push   DWORD PTR ds:0x6402fb70
640184cd:	call   0x64015b4f
640184d2:	pop    ecx
640184d3:	call   eax
640184d5:	pop    ecx
640184d6:	pop    ecx
640184d7:	cmp    WORD PTR [ebp-0x24],0x67
640184dc:	jne    0x640184f7
640184de:	test   ebx,ebx
640184e0:	jne    0x640184f7
640184e2:	lea    eax,[ebp-0x64]
640184e5:	push   eax
640184e6:	push   esi
640184e7:	push   DWORD PTR ds:0x6402fb6c
640184ed:	call   0x64015b4f
640184f2:	pop    ecx
640184f3:	call   eax
640184f5:	pop    ecx
640184f6:	pop    ecx
640184f7:	cmp    BYTE PTR [esi],0x2d
640184fa:	jne    0x64018507
640184fc:	or     DWORD PTR [ebp-0x14],0x100
64018503:	inc    esi
64018504:	mov    DWORD PTR [ebp-0x1c],esi
64018507:	push   esi
64018508:	jmp    0x6401837e
6401850d:	mov    DWORD PTR [ebp-0x18],0x8
64018514:	mov    DWORD PTR [ebp-0x54],ecx
64018517:	jmp    0x6401853a
64018519:	sub    eax,0x73
6401851c:	je     0x6401825e
64018522:	sub    eax,edi
64018524:	je     0x6401840c
6401852a:	sub    eax,0x3
6401852d:	jne    0x64018689
64018533:	mov    DWORD PTR [ebp-0x54],0x27
6401853a:	test   BYTE PTR [ebp-0x14],0x80
6401853e:	mov    DWORD PTR [ebp-0x24],0x10
64018545:	je     0x64018413
6401854b:	mov    eax,DWORD PTR [ebp-0x54]
6401854e:	add    eax,0x51
64018551:	mov    WORD PTR [ebp-0x44],0x30
64018557:	mov    WORD PTR [ebp-0x42],ax
6401855b:	mov    DWORD PTR [ebp-0x30],edi
6401855e:	jmp    0x64018413
64018563:	test   WORD PTR [ebp-0x14],0x1000
64018569:	jne    0x6401841f
6401856f:	add    ebx,0x4
64018572:	test   BYTE PTR [ebp-0x14],0x20
64018576:	je     0x6401858e
64018578:	test   BYTE PTR [ebp-0x14],0x40
6401857c:	mov    DWORD PTR [ebp-0x28],ebx
6401857f:	je     0x64018587
64018581:	movsx  eax,WORD PTR [ebx-0x4]
64018585:	jmp    0x6401858b
64018587:	movzx  eax,WORD PTR [ebx-0x4]
6401858b:	cdq    
6401858c:	jmp    0x6401859f
6401858e:	test   BYTE PTR [ebp-0x14],0x40
64018592:	mov    eax,DWORD PTR [ebx-0x4]
64018595:	je     0x6401859a
64018597:	cdq    
64018598:	jmp    0x6401859c
6401859a:	xor    edx,edx
6401859c:	mov    DWORD PTR [ebp-0x28],ebx
6401859f:	test   BYTE PTR [ebp-0x14],0x40
640185a3:	je     0x640185bd
640185a5:	test   edx,edx
640185a7:	jg     0x640185bd
640185a9:	jl     0x640185af
640185ab:	test   eax,eax
640185ad:	jae    0x640185bd
640185af:	neg    eax
640185b1:	adc    edx,0x0
640185b4:	neg    edx
640185b6:	or     DWORD PTR [ebp-0x14],0x100
640185bd:	test   WORD PTR [ebp-0x14],0x9000
640185c3:	mov    ebx,edx
640185c5:	mov    edi,eax
640185c7:	jne    0x640185cb
640185c9:	xor    ebx,ebx
640185cb:	cmp    DWORD PTR [ebp-0x18],0x0
640185cf:	jge    0x640185da
640185d1:	mov    DWORD PTR [ebp-0x18],0x1
640185d8:	jmp    0x640185eb
640185da:	and    DWORD PTR [ebp-0x14],0xfffffff7
640185de:	mov    eax,0x200
640185e3:	cmp    DWORD PTR [ebp-0x18],eax
640185e6:	jle    0x640185eb
640185e8:	mov    DWORD PTR [ebp-0x18],eax
640185eb:	mov    eax,edi
640185ed:	or     eax,ebx
640185ef:	jne    0x640185f4
640185f1:	and    DWORD PTR [ebp-0x30],eax
640185f4:	lea    esi,[ebp+0x1ef]
640185fa:	mov    eax,DWORD PTR [ebp-0x18]
640185fd:	dec    DWORD PTR [ebp-0x18]
64018600:	test   eax,eax
64018602:	jg     0x6401860a
64018604:	mov    eax,edi
64018606:	or     eax,ebx
64018608:	je     0x6401862e
6401860a:	mov    eax,DWORD PTR [ebp-0x24]
6401860d:	cdq    
6401860e:	push   edx
6401860f:	push   eax
64018610:	push   ebx
64018611:	push   edi
64018612:	call   0x6401ab30
64018617:	add    ecx,0x30
6401861a:	cmp    ecx,0x39
6401861d:	mov    DWORD PTR [ebp-0x7c],ebx
64018620:	mov    edi,eax
64018622:	mov    ebx,edx
64018624:	jle    0x64018629
64018626:	add    ecx,DWORD PTR [ebp-0x54]
64018629:	mov    BYTE PTR [esi],cl
6401862b:	dec    esi
6401862c:	jmp    0x640185fa
6401862e:	lea    eax,[ebp+0x1ef]
64018634:	sub    eax,esi
64018636:	inc    esi
64018637:	test   WORD PTR [ebp-0x14],0x200
6401863d:	mov    DWORD PTR [ebp-0x20],eax
64018640:	mov    DWORD PTR [ebp-0x1c],esi
64018643:	je     0x64018689
64018645:	test   eax,eax
64018647:	je     0x64018650
64018649:	mov    ecx,esi
6401864b:	cmp    BYTE PTR [ecx],0x30
6401864e:	je     0x64018689
64018650:	dec    DWORD PTR [ebp-0x1c]
64018653:	mov    ecx,DWORD PTR [ebp-0x1c]
64018656:	mov    BYTE PTR [ecx],0x30
64018659:	inc    eax
6401865a:	jmp    0x64018686
6401865c:	test   ebx,ebx
6401865e:	jne    0x64018668
64018660:	mov    eax,ds:0x6402f954
64018665:	mov    DWORD PTR [ebp-0x1c],eax
64018668:	mov    eax,DWORD PTR [ebp-0x1c]
6401866b:	mov    DWORD PTR [ebp-0x34],0x1
64018672:	jmp    0x6401867d
64018674:	dec    edi
64018675:	cmp    WORD PTR [eax],0x0
64018679:	je     0x64018681
6401867b:	inc    eax
6401867c:	inc    eax
6401867d:	test   edi,edi
6401867f:	jne    0x64018674
64018681:	sub    eax,DWORD PTR [ebp-0x1c]
64018684:	sar    eax,1
64018686:	mov    DWORD PTR [ebp-0x20],eax
64018689:	cmp    DWORD PTR [ebp-0x48],0x0
6401868d:	jne    0x64018792
64018693:	mov    eax,DWORD PTR [ebp-0x14]
64018696:	test   al,0x40
64018698:	je     0x640186c5
6401869a:	test   ax,0x100
6401869e:	je     0x640186a8
640186a0:	mov    WORD PTR [ebp-0x44],0x2d
640186a6:	jmp    0x640186be
640186a8:	test   al,0x1
640186aa:	je     0x640186b4
640186ac:	mov    WORD PTR [ebp-0x44],0x2b
640186b2:	jmp    0x640186be
640186b4:	test   al,0x2
640186b6:	je     0x640186c5
640186b8:	mov    WORD PTR [ebp-0x44],0x20
640186be:	mov    DWORD PTR [ebp-0x30],0x1
640186c5:	mov    ebx,DWORD PTR [ebp-0x38]
640186c8:	mov    esi,DWORD PTR [ebp-0x20]
640186cb:	sub    ebx,esi
640186cd:	sub    ebx,DWORD PTR [ebp-0x30]
640186d0:	test   BYTE PTR [ebp-0x14],0xc
640186d4:	jne    0x640186e7
640186d6:	push   DWORD PTR [ebp-0x3c]
640186d9:	lea    eax,[ebp-0x2c]
640186dc:	push   ebx
640186dd:	push   0x20
640186df:	call   0x64017eea
640186e4:	add    esp,0xc
640186e7:	push   DWORD PTR [ebp-0x30]
640186ea:	mov    edi,DWORD PTR [ebp-0x3c]
640186ed:	lea    eax,[ebp-0x2c]
640186f0:	lea    ecx,[ebp-0x44]
640186f3:	call   0x6401881f
640186f8:	test   BYTE PTR [ebp-0x14],0x8
640186fc:	pop    ecx
640186fd:	je     0x64018714
640186ff:	test   BYTE PTR [ebp-0x14],0x4
64018703:	jne    0x64018714
64018705:	push   edi
64018706:	push   ebx
64018707:	push   0x30
64018709:	lea    eax,[ebp-0x2c]
6401870c:	call   0x64017eea
64018711:	add    esp,0xc
64018714:	cmp    DWORD PTR [ebp-0x34],0x0
64018718:	jne    0x64018768
6401871a:	test   esi,esi
6401871c:	jle    0x64018768
6401871e:	mov    edi,DWORD PTR [ebp-0x1c]
64018721:	mov    DWORD PTR [ebp-0x24],esi
64018724:	dec    DWORD PTR [ebp-0x24]
64018727:	lea    eax,[ebp-0x64]
6401872a:	push   eax
6401872b:	mov    eax,DWORD PTR [ebp-0x64]
6401872e:	push   DWORD PTR [eax+0xac]
64018734:	lea    eax,[ebp-0x70]
64018737:	push   edi
64018738:	push   eax
64018739:	call   0x6401dc9e
6401873e:	add    esp,0x10
64018741:	test   eax,eax
64018743:	mov    DWORD PTR [ebp-0x7c],eax
64018746:	jle    0x64018762
64018748:	push   DWORD PTR [ebp-0x70]
6401874b:	mov    eax,DWORD PTR [ebp-0x3c]
6401874e:	lea    esi,[ebp-0x2c]
64018751:	call   0x64017ec5
64018756:	add    edi,DWORD PTR [ebp-0x7c]
64018759:	cmp    DWORD PTR [ebp-0x24],0x0
6401875d:	pop    ecx
6401875e:	jg     0x64018724
64018760:	jmp    0x64018775
64018762:	or     DWORD PTR [ebp-0x2c],0xffffffff
64018766:	jmp    0x64018775
64018768:	mov    ecx,DWORD PTR [ebp-0x1c]
6401876b:	push   esi
6401876c:	lea    eax,[ebp-0x2c]
6401876f:	call   0x6401881f
64018774:	pop    ecx
64018775:	cmp    DWORD PTR [ebp-0x2c],0x0
64018779:	jl     0x64018792
6401877b:	test   BYTE PTR [ebp-0x14],0x4
6401877f:	je     0x64018792
64018781:	push   DWORD PTR [ebp-0x3c]
64018784:	lea    eax,[ebp-0x2c]
64018787:	push   ebx
64018788:	push   0x20
6401878a:	call   0x64017eea
6401878f:	add    esp,0xc
64018792:	cmp    DWORD PTR [ebp-0x50],0x0
64018796:	je     0x640187a5
64018798:	push   DWORD PTR [ebp-0x50]
6401879b:	call   0x64014af6
640187a0:	and    DWORD PTR [ebp-0x50],0x0
640187a4:	pop    ecx
640187a5:	mov    esi,DWORD PTR [ebp-0x4c]
640187a8:	movzx  eax,WORD PTR [esi]
640187ab:	test   ax,ax
640187ae:	mov    DWORD PTR [ebp-0x24],eax
640187b1:	je     0x640187d7
640187b3:	mov    ecx,DWORD PTR [ebp-0x68]
640187b6:	mov    ebx,DWORD PTR [ebp-0x28]
640187b9:	mov    edx,eax
640187bb:	jmp    0x64017fba
640187c0:	call   0x64015a20
640187c5:	mov    DWORD PTR [eax],0x16
640187cb:	xor    eax,eax
640187cd:	push   eax
640187ce:	push   eax
640187cf:	push   eax
640187d0:	push   eax
640187d1:	push   eax
640187d2:	jmp    0x64017f7f
640187d7:	cmp    BYTE PTR [ebp-0x58],0x0
640187db:	je     0x640187e4
640187dd:	mov    eax,DWORD PTR [ebp-0x5c]
640187e0:	and    DWORD PTR [eax+0x70],0xfffffffd
640187e4:	mov    eax,DWORD PTR [ebp-0x2c]
640187e7:	mov    ecx,DWORD PTR [ebp+0x3f0]
640187ed:	pop    edi
640187ee:	pop    esi
640187ef:	xor    ecx,ebp
640187f1:	pop    ebx
640187f2:	call   0x64013c5c
640187f7:	add    ebp,0x3f4
640187fd:	leave  
640187fe:	ret    
640187ff:	mov    esi,0x6640181
64018804:	add    BYTE PTR [ecx],0x64
64018807:	and    eax,DWORD PTR [eax-0x7f8e9bff]
6401880d:	add    DWORD PTR [esp+ebp*4-0x80],esp
64018811:	add    DWORD PTR [ebp+esi*4-0x80],esp
64018815:	add    DWORD PTR [ebp+ebp*8-0x80],esp
64018819:	add    DWORD PTR [esi+edx*8-0x7f],esp
6401881d:	add    DWORD PTR [esi+esi*8+0x47],esp
64018821:	or     al,0x40
64018823:	push   ebx
64018824:	push   esi
64018825:	mov    esi,eax
64018827:	mov    ebx,ecx
64018829:	je     0x64018864
6401882b:	cmp    DWORD PTR [edi+0x8],0x0
6401882f:	jne    0x64018864
64018831:	mov    eax,DWORD PTR [esp+0xc]
64018835:	add    DWORD PTR [esi],eax
64018837:	jmp    0x6401886b
64018839:	movzx  eax,WORD PTR [ebx]
6401883c:	dec    DWORD PTR [esp+0xc]
64018840:	push   eax
64018841:	mov    eax,edi
64018843:	call   0x64017ec5
64018848:	inc    ebx
64018849:	inc    ebx
6401884a:	cmp    DWORD PTR [esi],0xffffffff
6401884d:	pop    ecx
6401884e:	jne    0x64018864
64018850:	call   0x64015a20
64018855:	cmp    DWORD PTR [eax],0x2a
64018858:	jne    0x6401886b
6401885a:	push   0x3f
6401885c:	mov    eax,edi
6401885e:	call   0x64017ec5
64018863:	pop    ecx
64018864:	cmp    DWORD PTR [esp+0xc],0x0
64018869:	jg     0x64018839
6401886b:	pop    esi
6401886c:	pop    ebx
6401886d:	ret    
6401886e:	push   ebp
6401886f:	lea    ebp,[esp-0x3f4]
64018876:	sub    esp,0x474
6401887c:	mov    eax,ds:0x6402f09c
64018881:	xor    eax,ebp
64018883:	mov    DWORD PTR [ebp+0x3f0],eax
64018889:	push   ebx
6401888a:	mov    ebx,DWORD PTR [ebp+0x408]
64018890:	push   esi
64018891:	mov    esi,DWORD PTR [ebp+0x3fc]
64018897:	xor    eax,eax
64018899:	push   edi
6401889a:	push   DWORD PTR [ebp+0x404]
640188a0:	mov    edi,DWORD PTR [ebp+0x400]
640188a6:	lea    ecx,[ebp-0x58]
640188a9:	mov    DWORD PTR [ebp-0x48],esi
640188ac:	mov    DWORD PTR [ebp-0x24],ebx
640188af:	mov    DWORD PTR [ebp-0x60],eax
640188b2:	mov    DWORD PTR [ebp-0x14],eax
640188b5:	mov    DWORD PTR [ebp-0x38],eax
640188b8:	mov    DWORD PTR [ebp-0x18],eax
640188bb:	mov    DWORD PTR [ebp-0x30],eax
640188be:	mov    DWORD PTR [ebp-0x5c],eax
640188c1:	mov    DWORD PTR [ebp-0x34],eax
640188c4:	call   0x64013dff
640188c9:	test   esi,esi
640188cb:	jne    0x640188fc
640188cd:	call   0x64015a20
640188d2:	mov    DWORD PTR [eax],0x16
640188d8:	xor    eax,eax
640188da:	push   eax
640188db:	push   eax
640188dc:	push   eax
640188dd:	push   eax
640188de:	push   eax
640188df:	call   0x64013794
640188e4:	add    esp,0x14
640188e7:	cmp    BYTE PTR [ebp-0x4c],0x0
640188eb:	je     0x640188f4
640188ed:	mov    eax,DWORD PTR [ebp-0x50]
640188f0:	and    DWORD PTR [eax+0x70],0xfffffffd
640188f4:	or     eax,0xffffffff
640188f7:	jmp    0x64019152
640188fc:	xor    esi,esi
640188fe:	cmp    edi,esi
64018900:	jne    0x64018914
64018902:	call   0x64015a20
64018907:	push   esi
64018908:	push   esi
64018909:	push   esi
6401890a:	push   esi
6401890b:	mov    DWORD PTR [eax],0x16
64018911:	push   esi
64018912:	jmp    0x640188df
64018914:	movzx  ecx,WORD PTR [edi]
64018917:	cmp    cx,si
6401891a:	mov    DWORD PTR [ebp-0x2c],esi
6401891d:	mov    DWORD PTR [ebp-0x20],esi
64018920:	mov    DWORD PTR [ebp-0x40],esi
64018923:	mov    DWORD PTR [ebp-0x64],esi
64018926:	mov    DWORD PTR [ebp-0x28],ecx
64018929:	je     0x64019142
6401892f:	push   0x2
64018931:	pop    esi
64018932:	add    edi,esi
64018934:	xor    eax,eax
64018936:	cmp    DWORD PTR [ebp-0x2c],eax
64018939:	mov    DWORD PTR [ebp-0x6c],edi
6401893c:	jl     0x64019132
64018942:	lea    edx,[ecx-0x20]
64018945:	cmp    dx,0x58
64018949:	ja     0x64018958
6401894b:	movzx  eax,cx
6401894e:	movzx  eax,BYTE PTR [eax+0x640284b8]
64018955:	and    eax,0xf
64018958:	mov    edx,DWORD PTR [ebp-0x40]
6401895b:	imul   eax,eax,0x9
6401895e:	movzx  eax,BYTE PTR [eax+edx*1+0x640284d8]
64018966:	push   0x8
64018968:	shr    eax,0x4
6401896b:	pop    edx
6401896c:	cmp    eax,edx
6401896e:	mov    DWORD PTR [ebp-0x40],eax
64018971:	je     0x640188cd
64018977:	cmp    eax,0x7
6401897a:	ja     0x6401911a
64018980:	jmp    DWORD PTR [eax*4+0x6401916a]
64018987:	xor    eax,eax
64018989:	or     DWORD PTR [ebp-0x18],0xffffffff
6401898d:	mov    DWORD PTR [ebp-0x68],eax
64018990:	mov    DWORD PTR [ebp-0x5c],eax
64018993:	mov    DWORD PTR [ebp-0x38],eax
64018996:	mov    DWORD PTR [ebp-0x30],eax
64018999:	mov    DWORD PTR [ebp-0x14],eax
6401899c:	mov    DWORD PTR [ebp-0x34],eax
6401899f:	jmp    0x64019120
640189a4:	movzx  eax,cx
640189a7:	sub    eax,0x20
640189aa:	je     0x640189e8
640189ac:	sub    eax,0x3
640189af:	je     0x640189dc
640189b1:	sub    eax,edx
640189b3:	je     0x640189d3
640189b5:	sub    eax,esi
640189b7:	je     0x640189ca
640189b9:	sub    eax,0x3
640189bc:	jne    0x6401911a
640189c2:	or     DWORD PTR [ebp-0x14],edx
640189c5:	jmp    0x64019120
640189ca:	or     DWORD PTR [ebp-0x14],0x4
640189ce:	jmp    0x64019120
640189d3:	or     DWORD PTR [ebp-0x14],0x1
640189d7:	jmp    0x64019120
640189dc:	or     DWORD PTR [ebp-0x14],0x80
640189e3:	jmp    0x64019120
640189e8:	or     DWORD PTR [ebp-0x14],esi
640189eb:	jmp    0x64019120
640189f0:	cmp    cx,0x2a
640189f4:	jne    0x64018a15
640189f6:	mov    eax,DWORD PTR [ebx]
640189f8:	add    ebx,0x4
640189fb:	test   eax,eax
640189fd:	mov    DWORD PTR [ebp-0x24],ebx
64018a00:	mov    DWORD PTR [ebp-0x38],eax
64018a03:	jge    0x64019120
64018a09:	or     DWORD PTR [ebp-0x14],0x4
64018a0d:	neg    DWORD PTR [ebp-0x38]
64018a10:	jmp    0x64019120
64018a15:	mov    eax,DWORD PTR [ebp-0x38]
64018a18:	imul   eax,eax,0xa
64018a1b:	movzx  ecx,cx
64018a1e:	lea    eax,[eax+ecx*1-0x30]
64018a22:	mov    DWORD PTR [ebp-0x38],eax
64018a25:	jmp    0x64019120
64018a2a:	and    DWORD PTR [ebp-0x18],0x0
64018a2e:	jmp    0x64019120
64018a33:	cmp    cx,0x2a
64018a37:	jne    0x64018a55
64018a39:	mov    eax,DWORD PTR [ebx]
64018a3b:	add    ebx,0x4
64018a3e:	test   eax,eax
64018a40:	mov    DWORD PTR [ebp-0x24],ebx
64018a43:	mov    DWORD PTR [ebp-0x18],eax
64018a46:	jge    0x64019120
64018a4c:	or     DWORD PTR [ebp-0x18],0xffffffff
64018a50:	jmp    0x64019120
64018a55:	mov    eax,DWORD PTR [ebp-0x18]
64018a58:	imul   eax,eax,0xa
64018a5b:	movzx  ecx,cx
64018a5e:	lea    eax,[eax+ecx*1-0x30]
64018a62:	mov    DWORD PTR [ebp-0x18],eax
64018a65:	jmp    0x64019120
64018a6a:	movzx  eax,cx
64018a6d:	cmp    eax,0x49
64018a70:	je     0x64018ab7
64018a72:	cmp    eax,0x68
64018a75:	je     0x64018aae
64018a77:	cmp    eax,0x6c
64018a7a:	je     0x64018a91
64018a7c:	cmp    eax,0x77
64018a7f:	jne    0x64019120
64018a85:	or     DWORD PTR [ebp-0x14],0x800
64018a8c:	jmp    0x64019120
64018a91:	cmp    WORD PTR [edi],0x6c
64018a95:	jne    0x64018aa5
64018a97:	add    edi,esi
64018a99:	or     DWORD PTR [ebp-0x14],0x1000
64018aa0:	jmp    0x64019120
64018aa5:	or     DWORD PTR [ebp-0x14],0x10
64018aa9:	jmp    0x64019120
64018aae:	or     DWORD PTR [ebp-0x14],0x20
64018ab2:	jmp    0x64019120
64018ab7:	movzx  eax,WORD PTR [edi]
64018aba:	cmp    ax,0x36
64018abe:	jne    0x64018ad6
64018ac0:	cmp    WORD PTR [edi+0x2],0x34
64018ac5:	jne    0x64018ad6
64018ac7:	add    edi,0x4
64018aca:	or     DWORD PTR [ebp-0x14],0x8000
64018ad1:	jmp    0x64019120
64018ad6:	cmp    ax,0x33
64018ada:	jne    0x64018af2
64018adc:	cmp    WORD PTR [edi+0x2],0x32
64018ae1:	jne    0x64018af2
64018ae3:	add    edi,0x4
64018ae6:	and    DWORD PTR [ebp-0x14],0xffff7fff
64018aed:	jmp    0x64019120
64018af2:	cmp    ax,0x64
64018af6:	je     0x64019120
64018afc:	cmp    ax,0x69
64018b00:	je     0x64019120
64018b06:	cmp    ax,0x6f
64018b0a:	je     0x64019120
64018b10:	cmp    ax,0x75
64018b14:	je     0x64019120
64018b1a:	cmp    ax,0x78
64018b1e:	je     0x64019120
64018b24:	cmp    ax,0x58
64018b28:	je     0x64019120
64018b2e:	and    DWORD PTR [ebp-0x40],0x0
64018b32:	mov    eax,DWORD PTR [ebp-0x48]
64018b35:	push   ecx
64018b36:	lea    esi,[ebp-0x2c]
64018b39:	mov    DWORD PTR [ebp-0x34],0x1
64018b40:	call   0x64017ec5
64018b45:	pop    ecx
64018b46:	jmp    0x64019120
64018b4b:	movzx  eax,cx
64018b4e:	cmp    eax,0x64
64018b51:	jg     0x64018cff
64018b57:	je     0x64018d7a
64018b5d:	cmp    eax,0x53
64018b60:	jg     0x64018c3d
64018b66:	je     0x64018bc7
64018b68:	sub    eax,0x41
64018b6b:	je     0x64018b7d
64018b6d:	sub    eax,esi
64018b6f:	je     0x64018bb2
64018b71:	sub    eax,esi
64018b73:	je     0x64018b7d
64018b75:	sub    eax,esi
64018b77:	jne    0x64018ffe
64018b7d:	add    ecx,0x20
64018b80:	mov    DWORD PTR [ebp-0x68],0x1
64018b87:	mov    DWORD PTR [ebp-0x28],ecx
64018b8a:	or     DWORD PTR [ebp-0x14],0x40
64018b8e:	cmp    DWORD PTR [ebp-0x18],0x0
64018b92:	lea    esi,[ebp-0x10]
64018b95:	mov    eax,0x200
64018b9a:	mov    DWORD PTR [ebp-0x1c],esi
64018b9d:	mov    DWORD PTR [ebp-0x20],eax
64018ba0:	jge    0x64018d9e
64018ba6:	mov    DWORD PTR [ebp-0x18],0x6
64018bad:	jmp    0x64018dee
64018bb2:	test   WORD PTR [ebp-0x14],0x830
64018bb8:	jne    0x64018c5b
64018bbe:	or     DWORD PTR [ebp-0x14],0x20
64018bc2:	jmp    0x64018c5b
64018bc7:	test   WORD PTR [ebp-0x14],0x830
64018bcd:	jne    0x64018bd3
64018bcf:	or     DWORD PTR [ebp-0x14],0x20
64018bd3:	mov    edi,DWORD PTR [ebp-0x18]
64018bd6:	cmp    edi,0xffffffff
64018bd9:	jne    0x64018be0
64018bdb:	mov    edi,0x7fffffff
64018be0:	add    ebx,0x4
64018be3:	test   BYTE PTR [ebp-0x14],0x20
64018be7:	mov    DWORD PTR [ebp-0x24],ebx
64018bea:	mov    ebx,DWORD PTR [ebx-0x4]
64018bed:	mov    DWORD PTR [ebp-0x1c],ebx
64018bf0:	je     0x64018fd1
64018bf6:	test   ebx,ebx
64018bf8:	jne    0x64018c02
64018bfa:	mov    eax,ds:0x6402f950
64018bff:	mov    DWORD PTR [ebp-0x1c],eax
64018c02:	and    DWORD PTR [ebp-0x20],0x0
64018c06:	test   edi,edi
64018c08:	mov    esi,DWORD PTR [ebp-0x1c]
64018c0b:	jle    0x64018ffe
64018c11:	mov    al,BYTE PTR [esi]
64018c13:	test   al,al
64018c15:	je     0x64018ffe
64018c1b:	lea    ecx,[ebp-0x58]
64018c1e:	movzx  eax,al
64018c21:	push   ecx
64018c22:	push   eax
64018c23:	call   0x6401b060
64018c28:	test   eax,eax
64018c2a:	pop    ecx
64018c2b:	pop    ecx
64018c2c:	je     0x64018c2f
64018c2e:	inc    esi
64018c2f:	inc    esi
64018c30:	inc    DWORD PTR [ebp-0x20]
64018c33:	cmp    DWORD PTR [ebp-0x20],edi
64018c36:	jl     0x64018c11
64018c38:	jmp    0x64018ffe
64018c3d:	sub    eax,0x58
64018c40:	je     0x64018e85
64018c46:	sub    eax,esi
64018c48:	je     0x64018cb2
64018c4a:	sub    eax,0x7
64018c4d:	je     0x64018b8a
64018c53:	sub    eax,esi
64018c55:	jne    0x64018ffe
64018c5b:	movzx  eax,WORD PTR [ebx]
64018c5e:	add    ebx,0x4
64018c61:	xor    esi,esi
64018c63:	inc    esi
64018c64:	test   BYTE PTR [ebp-0x14],0x20
64018c68:	mov    DWORD PTR [ebp-0x34],esi
64018c6b:	mov    DWORD PTR [ebp-0x24],ebx
64018c6e:	mov    DWORD PTR [ebp-0x70],eax
64018c71:	je     0x64018ca0
64018c73:	mov    BYTE PTR [ebp-0x44],al
64018c76:	lea    eax,[ebp-0x58]
64018c79:	push   eax
64018c7a:	mov    eax,DWORD PTR [ebp-0x58]
64018c7d:	mov    BYTE PTR [ebp-0x43],0x0
64018c81:	push   DWORD PTR [eax+0xac]
64018c87:	lea    eax,[ebp-0x44]
64018c8a:	push   eax
64018c8b:	lea    eax,[ebp-0x10]
64018c8e:	push   eax
64018c8f:	call   0x6401dc9e
64018c94:	add    esp,0x10
64018c97:	test   eax,eax
64018c99:	jge    0x64018ca4
64018c9b:	mov    DWORD PTR [ebp-0x5c],esi
64018c9e:	jmp    0x64018ca4
64018ca0:	mov    WORD PTR [ebp-0x10],ax
64018ca4:	lea    eax,[ebp-0x10]
64018ca7:	mov    DWORD PTR [ebp-0x1c],eax
64018caa:	mov    DWORD PTR [ebp-0x20],esi
64018cad:	jmp    0x64018ffe
64018cb2:	mov    eax,DWORD PTR [ebx]
64018cb4:	add    ebx,0x4
64018cb7:	test   eax,eax
64018cb9:	mov    DWORD PTR [ebp-0x24],ebx
64018cbc:	je     0x64018ceb
64018cbe:	mov    ecx,DWORD PTR [eax+0x4]
64018cc1:	test   ecx,ecx
64018cc3:	je     0x64018ceb
64018cc5:	test   WORD PTR [ebp-0x14],0x800
64018ccb:	movsx  eax,WORD PTR [eax]
64018cce:	mov    DWORD PTR [ebp-0x1c],ecx
64018cd1:	je     0x64018ce2
64018cd3:	cdq    
64018cd4:	sub    eax,edx
64018cd6:	mov    DWORD PTR [ebp-0x34],0x1
64018cdd:	jmp    0x64018ff9
64018ce2:	and    DWORD PTR [ebp-0x34],0x0
64018ce6:	jmp    0x64018ffb
64018ceb:	mov    eax,ds:0x6402f950
64018cf0:	mov    DWORD PTR [ebp-0x1c],eax
64018cf3:	push   eax
64018cf4:	call   0x64015420
64018cf9:	pop    ecx
64018cfa:	jmp    0x64018ffb
64018cff:	cmp    eax,0x70
64018d02:	jg     0x64018e8e
64018d08:	je     0x64018e82
64018d0e:	cmp    eax,0x65
64018d11:	jl     0x64018ffe
64018d17:	cmp    eax,0x67
64018d1a:	jle    0x64018b8a
64018d20:	cmp    eax,0x69
64018d23:	je     0x64018d7a
64018d25:	cmp    eax,0x6e
64018d28:	je     0x64018d45
64018d2a:	cmp    eax,0x6f
64018d2d:	jne    0x64018ffe
64018d33:	test   BYTE PTR [ebp-0x14],0x80
64018d37:	mov    DWORD PTR [ebp-0x28],edx
64018d3a:	je     0x64018d85
64018d3c:	or     DWORD PTR [ebp-0x14],0x200
64018d43:	jmp    0x64018d85
64018d45:	mov    esi,DWORD PTR [ebx]
64018d47:	add    ebx,0x4
64018d4a:	mov    DWORD PTR [ebp-0x24],ebx
64018d4d:	call   0x6401dc88
64018d52:	test   eax,eax
64018d54:	je     0x640188cd
64018d5a:	test   BYTE PTR [ebp-0x14],0x20
64018d5e:	je     0x64018d69
64018d60:	mov    ax,WORD PTR [ebp-0x2c]
64018d64:	mov    WORD PTR [esi],ax
64018d67:	jmp    0x64018d6e
64018d69:	mov    eax,DWORD PTR [ebp-0x2c]
64018d6c:	mov    DWORD PTR [esi],eax
64018d6e:	mov    DWORD PTR [ebp-0x5c],0x1
64018d75:	jmp    0x64019107
64018d7a:	or     DWORD PTR [ebp-0x14],0x40
64018d7e:	mov    DWORD PTR [ebp-0x28],0xa
64018d85:	test   WORD PTR [ebp-0x14],0x8000
64018d8b:	je     0x64018ed8
64018d91:	add    ebx,edx
64018d93:	mov    eax,DWORD PTR [ebx-0x8]
64018d96:	mov    edx,DWORD PTR [ebx-0x4]
64018d99:	jmp    0x64018f11
64018d9e:	jne    0x64018daf
64018da0:	cmp    cx,0x67
64018da4:	jne    0x64018dee
64018da6:	mov    DWORD PTR [ebp-0x18],0x1
64018dad:	jmp    0x64018dee
64018daf:	cmp    DWORD PTR [ebp-0x18],eax
64018db2:	jle    0x64018db7
64018db4:	mov    DWORD PTR [ebp-0x18],eax
64018db7:	cmp    DWORD PTR [ebp-0x18],0xa3
64018dbe:	jle    0x64018dee
64018dc0:	mov    edi,DWORD PTR [ebp-0x18]
64018dc3:	add    edi,0x15d
64018dc9:	push   edi
64018dca:	call   0x64016f30
64018dcf:	test   eax,eax
64018dd1:	pop    ecx
64018dd2:	mov    ecx,DWORD PTR [ebp-0x28]
64018dd5:	push   0x8
64018dd7:	mov    DWORD PTR [ebp-0x64],eax
64018dda:	pop    edx
64018ddb:	je     0x64018de7
64018ddd:	mov    DWORD PTR [ebp-0x1c],eax
64018de0:	mov    DWORD PTR [ebp-0x20],edi
64018de3:	mov    esi,eax
64018de5:	jmp    0x64018dee
64018de7:	mov    DWORD PTR [ebp-0x18],0xa3
64018dee:	add    ebx,edx
64018df0:	mov    eax,DWORD PTR [ebx-0x8]
64018df3:	mov    DWORD PTR [ebp-0x78],eax
64018df6:	mov    eax,DWORD PTR [ebx-0x4]
64018df9:	mov    DWORD PTR [ebp-0x74],eax
64018dfc:	lea    eax,[ebp-0x58]
64018dff:	push   eax
64018e00:	push   DWORD PTR [ebp-0x68]
64018e03:	movsx  eax,cl
64018e06:	push   DWORD PTR [ebp-0x18]
64018e09:	mov    DWORD PTR [ebp-0x24],ebx
64018e0c:	push   eax
64018e0d:	push   DWORD PTR [ebp-0x20]
64018e10:	lea    eax,[ebp-0x78]
64018e13:	push   esi
64018e14:	push   eax
64018e15:	push   DWORD PTR ds:0x6402fb64
64018e1b:	call   0x64015b4f
64018e20:	pop    ecx
64018e21:	call   eax
64018e23:	mov    ebx,DWORD PTR [ebp-0x14]
64018e26:	add    esp,0x1c
64018e29:	and    ebx,0x80
64018e2f:	je     0x64018e4c
64018e31:	cmp    DWORD PTR [ebp-0x18],0x0
64018e35:	jne    0x64018e4c
64018e37:	lea    eax,[ebp-0x58]
64018e3a:	push   eax
64018e3b:	push   esi
64018e3c:	push   DWORD PTR ds:0x6402fb70
64018e42:	call   0x64015b4f
64018e47:	pop    ecx
64018e48:	call   eax
64018e4a:	pop    ecx
64018e4b:	pop    ecx
64018e4c:	cmp    WORD PTR [ebp-0x28],0x67
64018e51:	jne    0x64018e6c
64018e53:	test   ebx,ebx
64018e55:	jne    0x64018e6c
64018e57:	lea    eax,[ebp-0x58]
64018e5a:	push   eax
64018e5b:	push   esi
64018e5c:	push   DWORD PTR ds:0x6402fb6c
64018e62:	call   0x64015b4f
64018e67:	pop    ecx
64018e68:	call   eax
64018e6a:	pop    ecx
64018e6b:	pop    ecx
64018e6c:	cmp    BYTE PTR [esi],0x2d
64018e6f:	jne    0x64018e7c
64018e71:	or     DWORD PTR [ebp-0x14],0x100
64018e78:	inc    esi
64018e79:	mov    DWORD PTR [ebp-0x1c],esi
64018e7c:	push   esi
64018e7d:	jmp    0x64018cf4
64018e82:	mov    DWORD PTR [ebp-0x18],edx
64018e85:	mov    DWORD PTR [ebp-0x60],0x7
64018e8c:	jmp    0x64018eaf
64018e8e:	sub    eax,0x73
64018e91:	je     0x64018bd3
64018e97:	sub    eax,esi
64018e99:	je     0x64018d7e
64018e9f:	sub    eax,0x3
64018ea2:	jne    0x64018ffe
64018ea8:	mov    DWORD PTR [ebp-0x60],0x27
64018eaf:	test   BYTE PTR [ebp-0x14],0x80
64018eb3:	mov    DWORD PTR [ebp-0x28],0x10
64018eba:	je     0x64018d85
64018ec0:	mov    eax,DWORD PTR [ebp-0x60]
64018ec3:	add    eax,0x51
64018ec6:	mov    WORD PTR [ebp-0x3c],0x30
64018ecc:	mov    WORD PTR [ebp-0x3a],ax
64018ed0:	mov    DWORD PTR [ebp-0x30],esi
64018ed3:	jmp    0x64018d85
64018ed8:	test   WORD PTR [ebp-0x14],0x1000
64018ede:	jne    0x64018d91
64018ee4:	add    ebx,0x4
64018ee7:	test   BYTE PTR [ebp-0x14],0x20
64018eeb:	je     0x64018f03
64018eed:	test   BYTE PTR [ebp-0x14],0x40
64018ef1:	mov    DWORD PTR [ebp-0x24],ebx
64018ef4:	je     0x64018efc
64018ef6:	movsx  eax,WORD PTR [ebx-0x4]
64018efa:	jmp    0x64018f00
64018efc:	movzx  eax,WORD PTR [ebx-0x4]
64018f00:	cdq    
64018f01:	jmp    0x64018f14
64018f03:	test   BYTE PTR [ebp-0x14],0x40
64018f07:	mov    eax,DWORD PTR [ebx-0x4]
64018f0a:	je     0x64018f0f
64018f0c:	cdq    
64018f0d:	jmp    0x64018f11
64018f0f:	xor    edx,edx
64018f11:	mov    DWORD PTR [ebp-0x24],ebx
64018f14:	test   BYTE PTR [ebp-0x14],0x40
64018f18:	je     0x64018f32
64018f1a:	test   edx,edx
64018f1c:	jg     0x64018f32
64018f1e:	jl     0x64018f24
64018f20:	test   eax,eax
64018f22:	jae    0x64018f32
64018f24:	neg    eax
64018f26:	adc    edx,0x0
64018f29:	neg    edx
64018f2b:	or     DWORD PTR [ebp-0x14],0x100
64018f32:	test   WORD PTR [ebp-0x14],0x9000
64018f38:	mov    ebx,edx
64018f3a:	mov    edi,eax
64018f3c:	jne    0x64018f40
64018f3e:	xor    ebx,ebx
64018f40:	cmp    DWORD PTR [ebp-0x18],0x0
64018f44:	jge    0x64018f4f
64018f46:	mov    DWORD PTR [ebp-0x18],0x1
64018f4d:	jmp    0x64018f60
64018f4f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64018f53:	mov    eax,0x200
64018f58:	cmp    DWORD PTR [ebp-0x18],eax
64018f5b:	jle    0x64018f60
64018f5d:	mov    DWORD PTR [ebp-0x18],eax
64018f60:	mov    eax,edi
64018f62:	or     eax,ebx
64018f64:	jne    0x64018f69
64018f66:	and    DWORD PTR [ebp-0x30],eax
64018f69:	lea    esi,[ebp+0x1ef]
64018f6f:	mov    eax,DWORD PTR [ebp-0x18]
64018f72:	dec    DWORD PTR [ebp-0x18]
64018f75:	test   eax,eax
64018f77:	jg     0x64018f7f
64018f79:	mov    eax,edi
64018f7b:	or     eax,ebx
64018f7d:	je     0x64018fa3
64018f7f:	mov    eax,DWORD PTR [ebp-0x28]
64018f82:	cdq    
64018f83:	push   edx
64018f84:	push   eax
64018f85:	push   ebx
64018f86:	push   edi
64018f87:	call   0x6401ab30
64018f8c:	add    ecx,0x30
64018f8f:	cmp    ecx,0x39
64018f92:	mov    DWORD PTR [ebp-0x7c],ebx
64018f95:	mov    edi,eax
64018f97:	mov    ebx,edx
64018f99:	jle    0x64018f9e
64018f9b:	add    ecx,DWORD PTR [ebp-0x60]
64018f9e:	mov    BYTE PTR [esi],cl
64018fa0:	dec    esi
64018fa1:	jmp    0x64018f6f
64018fa3:	lea    eax,[ebp+0x1ef]
64018fa9:	sub    eax,esi
64018fab:	inc    esi
64018fac:	test   WORD PTR [ebp-0x14],0x200
64018fb2:	mov    DWORD PTR [ebp-0x20],eax
64018fb5:	mov    DWORD PTR [ebp-0x1c],esi
64018fb8:	je     0x64018ffe
64018fba:	test   eax,eax
64018fbc:	je     0x64018fc5
64018fbe:	mov    ecx,esi
64018fc0:	cmp    BYTE PTR [ecx],0x30
64018fc3:	je     0x64018ffe
64018fc5:	dec    DWORD PTR [ebp-0x1c]
64018fc8:	mov    ecx,DWORD PTR [ebp-0x1c]
64018fcb:	mov    BYTE PTR [ecx],0x30
64018fce:	inc    eax
64018fcf:	jmp    0x64018ffb
64018fd1:	test   ebx,ebx
64018fd3:	jne    0x64018fdd
64018fd5:	mov    eax,ds:0x6402f954
64018fda:	mov    DWORD PTR [ebp-0x1c],eax
64018fdd:	mov    eax,DWORD PTR [ebp-0x1c]
64018fe0:	mov    DWORD PTR [ebp-0x34],0x1
64018fe7:	jmp    0x64018ff2
64018fe9:	dec    edi
64018fea:	cmp    WORD PTR [eax],0x0
64018fee:	je     0x64018ff6
64018ff0:	add    eax,esi
64018ff2:	test   edi,edi
64018ff4:	jne    0x64018fe9
64018ff6:	sub    eax,DWORD PTR [ebp-0x1c]
64018ff9:	sar    eax,1
64018ffb:	mov    DWORD PTR [ebp-0x20],eax
64018ffe:	cmp    DWORD PTR [ebp-0x5c],0x0
64019002:	jne    0x64019107
64019008:	mov    eax,DWORD PTR [ebp-0x14]
6401900b:	test   al,0x40
6401900d:	je     0x6401903a
6401900f:	test   ax,0x100
64019013:	je     0x6401901d
64019015:	mov    WORD PTR [ebp-0x3c],0x2d
6401901b:	jmp    0x64019033
6401901d:	test   al,0x1
6401901f:	je     0x64019029
64019021:	mov    WORD PTR [ebp-0x3c],0x2b
64019027:	jmp    0x64019033
64019029:	test   al,0x2
6401902b:	je     0x6401903a
6401902d:	mov    WORD PTR [ebp-0x3c],0x20
64019033:	mov    DWORD PTR [ebp-0x30],0x1
6401903a:	mov    ebx,DWORD PTR [ebp-0x38]
6401903d:	mov    esi,DWORD PTR [ebp-0x20]
64019040:	sub    ebx,esi
64019042:	sub    ebx,DWORD PTR [ebp-0x30]
64019045:	test   BYTE PTR [ebp-0x14],0xc
64019049:	jne    0x6401905c
6401904b:	push   DWORD PTR [ebp-0x48]
6401904e:	lea    eax,[ebp-0x2c]
64019051:	push   ebx
64019052:	push   0x20
64019054:	call   0x64017eea
64019059:	add    esp,0xc
6401905c:	push   DWORD PTR [ebp-0x30]
6401905f:	mov    edi,DWORD PTR [ebp-0x48]
64019062:	lea    eax,[ebp-0x2c]
64019065:	lea    ecx,[ebp-0x3c]
64019068:	call   0x6401881f
6401906d:	test   BYTE PTR [ebp-0x14],0x8
64019071:	pop    ecx
64019072:	je     0x64019089
64019074:	test   BYTE PTR [ebp-0x14],0x4
64019078:	jne    0x64019089
6401907a:	push   edi
6401907b:	push   ebx
6401907c:	push   0x30
6401907e:	lea    eax,[ebp-0x2c]
64019081:	call   0x64017eea
64019086:	add    esp,0xc
64019089:	cmp    DWORD PTR [ebp-0x34],0x0
6401908d:	jne    0x640190dd
6401908f:	test   esi,esi
64019091:	jle    0x640190dd
64019093:	mov    edi,DWORD PTR [ebp-0x1c]
64019096:	mov    DWORD PTR [ebp-0x28],esi
64019099:	dec    DWORD PTR [ebp-0x28]
6401909c:	lea    eax,[ebp-0x58]
6401909f:	push   eax
640190a0:	mov    eax,DWORD PTR [ebp-0x58]
640190a3:	push   DWORD PTR [eax+0xac]
640190a9:	lea    eax,[ebp-0x70]
640190ac:	push   edi
640190ad:	push   eax
640190ae:	call   0x6401dc9e
640190b3:	add    esp,0x10
640190b6:	test   eax,eax
640190b8:	mov    DWORD PTR [ebp-0x7c],eax
640190bb:	jle    0x640190d7
640190bd:	push   DWORD PTR [ebp-0x70]
640190c0:	mov    eax,DWORD PTR [ebp-0x48]
640190c3:	lea    esi,[ebp-0x2c]
640190c6:	call   0x64017ec5
640190cb:	add    edi,DWORD PTR [ebp-0x7c]
640190ce:	cmp    DWORD PTR [ebp-0x28],0x0
640190d2:	pop    ecx
640190d3:	jg     0x64019099
640190d5:	jmp    0x640190ea
640190d7:	or     DWORD PTR [ebp-0x2c],0xffffffff
640190db:	jmp    0x640190ea
640190dd:	mov    ecx,DWORD PTR [ebp-0x1c]
640190e0:	push   esi
640190e1:	lea    eax,[ebp-0x2c]
640190e4:	call   0x6401881f
640190e9:	pop    ecx
640190ea:	cmp    DWORD PTR [ebp-0x2c],0x0
640190ee:	jl     0x64019107
640190f0:	test   BYTE PTR [ebp-0x14],0x4
640190f4:	je     0x64019107
640190f6:	push   DWORD PTR [ebp-0x48]
640190f9:	lea    eax,[ebp-0x2c]
640190fc:	push   ebx
640190fd:	push   0x20
640190ff:	call   0x64017eea
64019104:	add    esp,0xc
64019107:	cmp    DWORD PTR [ebp-0x64],0x0
6401910b:	je     0x6401911a
6401910d:	push   DWORD PTR [ebp-0x64]
64019110:	call   0x64014af6
64019115:	and    DWORD PTR [ebp-0x64],0x0
64019119:	pop    ecx
6401911a:	mov    edi,DWORD PTR [ebp-0x6c]
6401911d:	mov    ebx,DWORD PTR [ebp-0x24]
64019120:	movzx  eax,WORD PTR [edi]
64019123:	test   ax,ax
64019126:	mov    DWORD PTR [ebp-0x28],eax
64019129:	je     0x64019132
6401912b:	mov    ecx,eax
6401912d:	jmp    0x6401892f
64019132:	cmp    DWORD PTR [ebp-0x40],0x0
64019136:	je     0x64019142
64019138:	cmp    DWORD PTR [ebp-0x40],0x7
6401913c:	jne    0x640188cd
64019142:	cmp    BYTE PTR [ebp-0x4c],0x0
64019146:	je     0x6401914f
64019148:	mov    eax,DWORD PTR [ebp-0x50]
6401914b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401914f:	mov    eax,DWORD PTR [ebp-0x2c]
64019152:	mov    ecx,DWORD PTR [ebp+0x3f0]
64019158:	pop    edi
64019159:	pop    esi
6401915a:	xor    ecx,ebp
6401915c:	pop    ebx
6401915d:	call   0x64013c5c
64019162:	add    ebp,0x3f4
64019168:	leave  
64019169:	ret    
6401916a:	xor    cl,BYTE PTR [ebx-0x76789bff]
64019170:	add    DWORD PTR [esp+eiz*4-0x77],esp
64019174:	add    DWORD PTR [eax+esi*8-0x77],esp
64019178:	add    DWORD PTR [edx+ebp*1-0x76],esp
6401917c:	add    DWORD PTR [ebx+esi*1-0x76],esp
64019180:	add    DWORD PTR [edx+ebp*2-0x76],esp
64019184:	add    DWORD PTR [ebx+ecx*2-0x75],esp
64019188:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401918c:	in     al,dx
6401918d:	sub    esp,0x10
64019190:	mov    eax,ds:0x6402f09c
64019195:	xor    eax,ebp
64019197:	mov    DWORD PTR [ebp-0x4],eax
6401919a:	push   ebx
6401919b:	push   esi
6401919c:	mov    esi,DWORD PTR ds:0x64026150
640191a2:	xor    ebx,ebx
640191a4:	cmp    DWORD PTR ds:0x64030958,ebx
640191aa:	push   edi
640191ab:	mov    edi,ecx
640191ad:	jne    0x640191e5
640191af:	push   ebx
640191b0:	push   ebx
640191b1:	push   0x1
640191b3:	push   0x640286dc
640191b8:	push   0x100
640191bd:	push   ebx
640191be:	call   esi
640191c0:	test   eax,eax
640191c2:	je     0x640191d0
640191c4:	mov    DWORD PTR ds:0x64030958,0x1
640191ce:	jmp    0x640191e5
640191d0:	call   DWORD PTR ds:0x64026044
640191d6:	cmp    eax,0x78
640191d9:	jne    0x640191e5
640191db:	mov    DWORD PTR ds:0x64030958,0x2
640191e5:	cmp    DWORD PTR [ebp+0x14],ebx
640191e8:	jle    0x64019207
640191ea:	mov    ecx,DWORD PTR [ebp+0x14]
640191ed:	mov    eax,DWORD PTR [ebp+0x10]
640191f0:	dec    ecx
640191f1:	cmp    WORD PTR [eax],bx
640191f4:	je     0x640191ff
640191f6:	inc    eax
640191f7:	inc    eax
640191f8:	cmp    ecx,ebx
640191fa:	jne    0x640191f0
640191fc:	or     ecx,0xffffffff
640191ff:	or     eax,0xffffffff
64019202:	sub    eax,ecx
64019204:	add    DWORD PTR [ebp+0x14],eax
64019207:	mov    eax,ds:0x64030958
6401920c:	cmp    eax,0x1
6401920f:	jne    0x6401922a
64019211:	push   DWORD PTR [ebp+0x1c]
64019214:	push   DWORD PTR [ebp+0x18]
64019217:	push   DWORD PTR [ebp+0x14]
6401921a:	push   DWORD PTR [ebp+0x10]
6401921d:	push   DWORD PTR [ebp+0xc]
64019220:	push   DWORD PTR [ebp+0x8]
64019223:	call   esi
64019225:	jmp    0x640193d9
6401922a:	cmp    eax,0x2
6401922d:	je     0x64019233
6401922f:	cmp    eax,ebx
64019231:	jne    0x64019285
64019233:	cmp    DWORD PTR [ebp+0x8],ebx
64019236:	mov    DWORD PTR [ebp-0xc],ebx
64019239:	jne    0x64019243
6401923b:	mov    eax,DWORD PTR [edi]
6401923d:	mov    eax,DWORD PTR [eax+0x14]
64019240:	mov    DWORD PTR [ebp+0x8],eax
64019243:	cmp    DWORD PTR [ebp+0x20],ebx
64019246:	jne    0x64019250
64019248:	mov    eax,DWORD PTR [edi]
6401924a:	mov    eax,DWORD PTR [eax+0x4]
6401924d:	mov    DWORD PTR [ebp+0x20],eax
64019250:	push   DWORD PTR [ebp+0x8]
64019253:	call   0x6401e7cf
64019258:	cmp    DWORD PTR [ebp+0x20],eax
6401925b:	pop    ecx
6401925c:	je     0x64019266
6401925e:	cmp    eax,0xffffffff
64019261:	je     0x64019266
64019263:	mov    DWORD PTR [ebp+0x20],eax
64019266:	mov    esi,DWORD PTR ds:0x64026028
6401926c:	push   ebx
6401926d:	push   ebx
6401926e:	push   ebx
6401926f:	push   ebx
64019270:	push   DWORD PTR [ebp+0x14]
64019273:	push   DWORD PTR [ebp+0x10]
64019276:	push   ebx
64019277:	push   DWORD PTR [ebp+0x20]
6401927a:	call   esi
6401927c:	mov    edi,eax
6401927e:	cmp    edi,ebx
64019280:	mov    DWORD PTR [ebp-0x10],edi
64019283:	jne    0x6401928c
64019285:	xor    eax,eax
64019287:	jmp    0x640193d9
6401928c:	jle    0x640192d0
6401928e:	push   0xffffffe0
64019290:	xor    edx,edx
64019292:	pop    eax
64019293:	div    edi
64019295:	cmp    eax,0x1
64019298:	jb     0x640192d0
6401929a:	lea    eax,[edi+0x8]
6401929d:	cmp    eax,0x400
640192a2:	ja     0x640192b7
640192a4:	call   0x640143e0
640192a9:	mov    eax,esp
640192ab:	cmp    eax,ebx
640192ad:	je     0x640192cb
640192af:	mov    DWORD PTR [eax],0xcccc
640192b5:	jmp    0x640192c8
640192b7:	push   eax
640192b8:	call   0x64014bd3
640192bd:	cmp    eax,ebx
640192bf:	pop    ecx
640192c0:	je     0x640192cb
640192c2:	mov    DWORD PTR [eax],0xdddd
640192c8:	add    eax,0x8
640192cb:	mov    DWORD PTR [ebp-0x8],eax
640192ce:	jmp    0x640192d3
640192d0:	mov    DWORD PTR [ebp-0x8],ebx
640192d3:	cmp    DWORD PTR [ebp-0x8],ebx
640192d6:	je     0x64019285
640192d8:	push   ebx
640192d9:	push   ebx
640192da:	push   edi
640192db:	push   DWORD PTR [ebp-0x8]
640192de:	push   DWORD PTR [ebp+0x14]
640192e1:	push   DWORD PTR [ebp+0x10]
640192e4:	push   ebx
640192e5:	push   DWORD PTR [ebp+0x20]
640192e8:	call   esi
640192ea:	test   eax,eax
640192ec:	je     0x640193cd
640192f2:	push   ebx
640192f3:	push   ebx
640192f4:	push   edi
640192f5:	push   DWORD PTR [ebp-0x8]
640192f8:	mov    edi,DWORD PTR ds:0x6402614c
640192fe:	push   DWORD PTR [ebp+0xc]
64019301:	push   DWORD PTR [ebp+0x8]
64019304:	call   edi
64019306:	mov    esi,eax
64019308:	cmp    esi,ebx
6401930a:	je     0x640193cd
64019310:	jle    0x64019351
64019312:	push   0xffffffe0
64019314:	xor    edx,edx
64019316:	pop    eax
64019317:	div    esi
64019319:	cmp    eax,0x1
6401931c:	jb     0x64019351
6401931e:	lea    eax,[esi+0x8]
64019321:	cmp    eax,0x400
64019326:	ja     0x6401933b
64019328:	call   0x640143e0
6401932d:	mov    eax,esp
6401932f:	cmp    eax,ebx
64019331:	je     0x6401934f
64019333:	mov    DWORD PTR [eax],0xcccc
64019339:	jmp    0x6401934c
6401933b:	push   eax
6401933c:	call   0x64014bd3
64019341:	cmp    eax,ebx
64019343:	pop    ecx
64019344:	je     0x6401934f
64019346:	mov    DWORD PTR [eax],0xdddd
6401934c:	add    eax,0x8
6401934f:	mov    ebx,eax
64019351:	test   ebx,ebx
64019353:	je     0x640193cd
64019355:	push   esi
64019356:	push   ebx
64019357:	push   DWORD PTR [ebp-0x10]
6401935a:	push   DWORD PTR [ebp-0x8]
6401935d:	push   DWORD PTR [ebp+0xc]
64019360:	push   DWORD PTR [ebp+0x8]
64019363:	call   edi
64019365:	test   eax,eax
64019367:	je     0x640193c6
64019369:	test   WORD PTR [ebp+0xc],0x400
6401936f:	je     0x640193a5
64019371:	mov    eax,DWORD PTR [ebp+0x1c]
64019374:	xor    edi,edi
64019376:	cmp    eax,edi
64019378:	mov    DWORD PTR [ebp-0xc],esi
6401937b:	je     0x640193c6
6401937d:	cmp    eax,esi
6401937f:	jg     0x64019384
64019381:	lea    esi,[eax-0x1]
64019384:	push   esi
64019385:	push   ebx
64019386:	push   eax
64019387:	push   DWORD PTR [ebp+0x18]
6401938a:	call   0x6401cea6
6401938f:	add    esp,0x10
64019392:	test   eax,eax
64019394:	je     0x640193c6
64019396:	push   edi
64019397:	push   edi
64019398:	push   edi
64019399:	push   edi
6401939a:	push   edi
6401939b:	call   0x64013698
640193a0:	add    esp,0x14
640193a3:	jmp    0x640193c6
640193a5:	xor    eax,eax
640193a7:	cmp    DWORD PTR [ebp+0x1c],eax
640193aa:	jne    0x640193b0
640193ac:	push   eax
640193ad:	push   eax
640193ae:	jmp    0x640193b6
640193b0:	push   DWORD PTR [ebp+0x1c]
640193b3:	push   DWORD PTR [ebp+0x18]
640193b6:	push   esi
640193b7:	push   ebx
640193b8:	push   0x1
640193ba:	push   DWORD PTR [ebp+0x20]
640193bd:	call   DWORD PTR ds:0x64026024
640193c3:	mov    DWORD PTR [ebp-0xc],eax
640193c6:	push   ebx
640193c7:	call   0x6401416c
640193cc:	pop    ecx
640193cd:	push   DWORD PTR [ebp-0x8]
640193d0:	call   0x6401416c
640193d5:	mov    eax,DWORD PTR [ebp-0xc]
640193d8:	pop    ecx
640193d9:	lea    esp,[ebp-0x1c]
640193dc:	pop    edi
640193dd:	pop    esi
640193de:	pop    ebx
640193df:	mov    ecx,DWORD PTR [ebp-0x4]
640193e2:	xor    ecx,ebp
640193e4:	call   0x64013c5c
640193e9:	leave  
640193ea:	ret    
640193eb:	push   ebp
640193ec:	mov    ebp,esp
640193ee:	sub    esp,0x10
640193f1:	push   DWORD PTR [ebp+0x8]
640193f4:	lea    ecx,[ebp-0x10]
640193f7:	call   0x64013dff
640193fc:	push   DWORD PTR [ebp+0x24]
640193ff:	lea    ecx,[ebp-0x10]
64019402:	push   DWORD PTR [ebp+0x20]
64019405:	push   DWORD PTR [ebp+0x1c]
64019408:	push   DWORD PTR [ebp+0x18]
6401940b:	push   DWORD PTR [ebp+0x14]
6401940e:	push   DWORD PTR [ebp+0x10]
64019411:	push   DWORD PTR [ebp+0xc]
64019414:	call   0x6401918a
64019419:	add    esp,0x1c
6401941c:	cmp    BYTE PTR [ebp-0x4],0x0
64019420:	je     0x64019429
64019422:	mov    ecx,DWORD PTR [ebp-0x8]
64019425:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019429:	leave  
6401942a:	ret    
6401942b:	xor    eax,eax
6401942d:	cmp    DWORD PTR [esp+0x8],eax
64019431:	jbe    0x64019446
64019433:	mov    ecx,DWORD PTR [esp+0x4]
64019437:	cmp    WORD PTR [ecx],0x0
6401943b:	je     0x64019446
6401943d:	inc    eax
6401943e:	inc    ecx
6401943f:	inc    ecx
64019440:	cmp    eax,DWORD PTR [esp+0x8]
64019444:	jb     0x64019437
64019446:	ret    
64019447:	push   ebp
64019448:	mov    ebp,esp
6401944a:	sub    esp,0x4
6401944d:	mov    DWORD PTR [ebp-0x4],edi
64019450:	mov    edi,DWORD PTR [ebp+0x8]
64019453:	mov    ecx,DWORD PTR [ebp+0xc]
64019456:	shr    ecx,0x7
64019459:	pxor   xmm0,xmm0
6401945d:	jmp    0x64019467
6401945f:	lea    esp,[esp+0x0]
64019466:	nop
64019467:	movdqa XMMWORD PTR [edi],xmm0
6401946b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64019470:	movdqa XMMWORD PTR [edi+0x20],xmm0
64019475:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401947a:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401947f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64019484:	movdqa XMMWORD PTR [edi+0x60],xmm0
64019489:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401948e:	lea    edi,[edi+0x80]
64019494:	dec    ecx
64019495:	jne    0x64019467
64019497:	mov    edi,DWORD PTR [ebp-0x4]
6401949a:	mov    esp,ebp
6401949c:	pop    ebp
6401949d:	ret    
6401949e:	push   ebp
6401949f:	mov    ebp,esp
640194a1:	sub    esp,0x10
640194a4:	mov    DWORD PTR [ebp-0x4],edi
640194a7:	mov    eax,DWORD PTR [ebp+0x8]
640194aa:	cdq    
640194ab:	mov    edi,eax
640194ad:	xor    edi,edx
640194af:	sub    edi,edx
640194b1:	and    edi,0xf
640194b4:	xor    edi,edx
640194b6:	sub    edi,edx
640194b8:	test   edi,edi
640194ba:	jne    0x640194f8
640194bc:	mov    ecx,DWORD PTR [ebp+0x10]
640194bf:	mov    edx,ecx
640194c1:	and    edx,0x7f
640194c4:	mov    DWORD PTR [ebp-0xc],edx
640194c7:	cmp    ecx,edx
640194c9:	je     0x640194dd
640194cb:	sub    ecx,edx
640194cd:	push   ecx
640194ce:	push   eax
640194cf:	call   0x64019447
640194d4:	add    esp,0x8
640194d7:	mov    eax,DWORD PTR [ebp+0x8]
640194da:	mov    edx,DWORD PTR [ebp-0xc]
640194dd:	test   edx,edx
640194df:	je     0x64019526
640194e1:	add    eax,DWORD PTR [ebp+0x10]
640194e4:	sub    eax,edx
640194e6:	mov    DWORD PTR [ebp-0x8],eax
640194e9:	xor    eax,eax
640194eb:	mov    edi,DWORD PTR [ebp-0x8]
640194ee:	mov    ecx,DWORD PTR [ebp-0xc]
640194f1:	rep stos BYTE PTR es:[edi],al
640194f3:	mov    eax,DWORD PTR [ebp+0x8]
640194f6:	jmp    0x64019526
640194f8:	neg    edi
640194fa:	add    edi,0x10
640194fd:	mov    DWORD PTR [ebp-0x10],edi
64019500:	xor    eax,eax
64019502:	mov    edi,DWORD PTR [ebp+0x8]
64019505:	mov    ecx,DWORD PTR [ebp-0x10]
64019508:	rep stos BYTE PTR es:[edi],al
6401950a:	mov    eax,DWORD PTR [ebp-0x10]
6401950d:	mov    ecx,DWORD PTR [ebp+0x8]
64019510:	mov    edx,DWORD PTR [ebp+0x10]
64019513:	add    ecx,eax
64019515:	sub    edx,eax
64019517:	push   edx
64019518:	push   0x0
6401951a:	push   ecx
6401951b:	call   0x6401949e
64019520:	add    esp,0xc
64019523:	mov    eax,DWORD PTR [ebp+0x8]
64019526:	mov    edi,DWORD PTR [ebp-0x4]
64019529:	mov    esp,ebp
6401952b:	pop    ebp
6401952c:	ret    
6401952d:	and    DWORD PTR ds:0x64034620,0x0
64019534:	call   0x6401ea18
64019539:	mov    ds:0x64034620,eax
6401953e:	xor    eax,eax
64019540:	ret    
64019541:	int3   
64019542:	int3   
64019543:	int3   
64019544:	int3   
64019545:	int3   
64019546:	int3   
64019547:	int3   
64019548:	int3   
64019549:	int3   
6401954a:	int3   
6401954b:	int3   
6401954c:	int3   
6401954d:	int3   
6401954e:	int3   
6401954f:	int3   
64019550:	push   ecx
64019551:	lea    ecx,[esp+0x4]
64019555:	sub    ecx,eax
64019557:	sbb    eax,eax
64019559:	not    eax
6401955b:	and    ecx,eax
6401955d:	mov    eax,esp
6401955f:	and    eax,0xfffff000
64019564:	cmp    ecx,eax
64019566:	jb     0x64019572
64019568:	mov    eax,ecx
6401956a:	pop    ecx
6401956b:	xchg   esp,eax
6401956c:	mov    eax,DWORD PTR [eax]
6401956e:	mov    DWORD PTR [esp],eax
64019571:	ret    
64019572:	sub    eax,0x1000
64019577:	test   DWORD PTR [eax],eax
64019579:	jmp    0x64019564
6401957b:	push   0x54
6401957d:	push   0x6402c2f8
64019582:	call   0x64015220
64019587:	xor    edi,edi
64019589:	mov    DWORD PTR [ebp-0x4],edi
6401958c:	lea    eax,[ebp-0x64]
6401958f:	push   eax
64019590:	call   DWORD PTR ds:0x64026160
64019596:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401959d:	push   0x40
6401959f:	push   0x20
640195a1:	pop    esi
640195a2:	push   esi
640195a3:	call   0x64016f70
640195a8:	pop    ecx
640195a9:	pop    ecx
640195aa:	cmp    eax,edi
640195ac:	je     0x640197c6
640195b2:	mov    ds:0x64034520,eax
640195b7:	mov    DWORD PTR ds:0x64034500,esi
640195bd:	lea    ecx,[eax+0x800]
640195c3:	jmp    0x640195f5
640195c5:	mov    BYTE PTR [eax+0x4],0x0
640195c9:	or     DWORD PTR [eax],0xffffffff
640195cc:	mov    BYTE PTR [eax+0x5],0xa
640195d0:	mov    DWORD PTR [eax+0x8],edi
640195d3:	mov    BYTE PTR [eax+0x24],0x0
640195d7:	mov    BYTE PTR [eax+0x25],0xa
640195db:	mov    BYTE PTR [eax+0x26],0xa
640195df:	mov    DWORD PTR [eax+0x38],edi
640195e2:	mov    BYTE PTR [eax+0x34],0x0
640195e6:	add    eax,0x40
640195e9:	mov    ecx,DWORD PTR ds:0x64034520
640195ef:	add    ecx,0x800
640195f5:	cmp    eax,ecx
640195f7:	jb     0x640195c5
640195f9:	cmp    WORD PTR [ebp-0x32],di
640195fd:	je     0x6401970d
64019603:	mov    eax,DWORD PTR [ebp-0x30]
64019606:	cmp    eax,edi
64019608:	je     0x6401970d
6401960e:	mov    edi,DWORD PTR [eax]
64019610:	lea    ebx,[eax+0x4]
64019613:	lea    eax,[ebx+edi*1]
64019616:	mov    DWORD PTR [ebp-0x1c],eax
64019619:	mov    esi,0x800
6401961e:	cmp    edi,esi
64019620:	jl     0x64019624
64019622:	mov    edi,esi
64019624:	mov    DWORD PTR [ebp-0x20],0x1
6401962b:	jmp    0x64019688
6401962d:	push   0x40
6401962f:	push   0x20
64019631:	call   0x64016f70
64019636:	pop    ecx
64019637:	pop    ecx
64019638:	test   eax,eax
6401963a:	je     0x64019692
6401963c:	mov    ecx,DWORD PTR [ebp-0x20]
6401963f:	lea    ecx,[ecx*4+0x64034520]
64019646:	mov    DWORD PTR [ecx],eax
64019648:	add    DWORD PTR ds:0x64034500,0x20
6401964f:	lea    edx,[eax+0x800]
64019655:	jmp    0x64019681
64019657:	mov    BYTE PTR [eax+0x4],0x0
6401965b:	or     DWORD PTR [eax],0xffffffff
6401965e:	mov    BYTE PTR [eax+0x5],0xa
64019662:	and    DWORD PTR [eax+0x8],0x0
64019666:	and    BYTE PTR [eax+0x24],0x80
6401966a:	mov    BYTE PTR [eax+0x25],0xa
6401966e:	mov    BYTE PTR [eax+0x26],0xa
64019672:	and    DWORD PTR [eax+0x38],0x0
64019676:	mov    BYTE PTR [eax+0x34],0x0
6401967a:	add    eax,0x40
6401967d:	mov    edx,DWORD PTR [ecx]
6401967f:	add    edx,esi
64019681:	cmp    eax,edx
64019683:	jb     0x64019657
64019685:	inc    DWORD PTR [ebp-0x20]
64019688:	cmp    DWORD PTR ds:0x64034500,edi
6401968e:	jl     0x6401962d
64019690:	jmp    0x64019698
64019692:	mov    edi,DWORD PTR ds:0x64034500
64019698:	and    DWORD PTR [ebp-0x20],0x0
6401969c:	test   edi,edi
6401969e:	jle    0x6401970d
640196a0:	mov    eax,DWORD PTR [ebp-0x1c]
640196a3:	mov    ecx,DWORD PTR [eax]
640196a5:	cmp    ecx,0xffffffff
640196a8:	je     0x64019700
640196aa:	cmp    ecx,0xfffffffe
640196ad:	je     0x64019700
640196af:	mov    al,BYTE PTR [ebx]
640196b1:	test   al,0x1
640196b3:	je     0x64019700
640196b5:	test   al,0x8
640196b7:	jne    0x640196c4
640196b9:	push   ecx
640196ba:	call   DWORD PTR ds:0x6402615c
640196c0:	test   eax,eax
640196c2:	je     0x64019700
640196c4:	mov    esi,DWORD PTR [ebp-0x20]
640196c7:	mov    eax,esi
640196c9:	sar    eax,0x5
640196cc:	and    esi,0x1f
640196cf:	shl    esi,0x6
640196d2:	add    esi,DWORD PTR [eax*4+0x64034520]
640196d9:	mov    eax,DWORD PTR [ebp-0x1c]
640196dc:	mov    eax,DWORD PTR [eax]
640196de:	mov    DWORD PTR [esi],eax
640196e0:	mov    al,BYTE PTR [ebx]
640196e2:	mov    BYTE PTR [esi+0x4],al
640196e5:	push   0xfa0
640196ea:	lea    eax,[esi+0xc]
640196ed:	push   eax
640196ee:	call   0x6401c8d8
640196f3:	pop    ecx
640196f4:	pop    ecx
640196f5:	test   eax,eax
640196f7:	je     0x640197c6
640196fd:	inc    DWORD PTR [esi+0x8]
64019700:	inc    DWORD PTR [ebp-0x20]
64019703:	inc    ebx
64019704:	add    DWORD PTR [ebp-0x1c],0x4
64019708:	cmp    DWORD PTR [ebp-0x20],edi
6401970b:	jl     0x640196a0
6401970d:	xor    ebx,ebx
6401970f:	mov    esi,ebx
64019711:	shl    esi,0x6
64019714:	add    esi,DWORD PTR ds:0x64034520
6401971a:	mov    eax,DWORD PTR [esi]
6401971c:	cmp    eax,0xffffffff
6401971f:	je     0x6401972c
64019721:	cmp    eax,0xfffffffe
64019724:	je     0x6401972c
64019726:	or     BYTE PTR [esi+0x4],0x80
6401972a:	jmp    0x6401979e
6401972c:	mov    BYTE PTR [esi+0x4],0x81
64019730:	test   ebx,ebx
64019732:	jne    0x64019739
64019734:	push   0xfffffff6
64019736:	pop    eax
64019737:	jmp    0x64019743
64019739:	mov    eax,ebx
6401973b:	dec    eax
6401973c:	neg    eax
6401973e:	sbb    eax,eax
64019740:	add    eax,0xfffffff5
64019743:	push   eax
64019744:	call   DWORD PTR ds:0x64026158
6401974a:	mov    edi,eax
6401974c:	cmp    edi,0xffffffff
6401974f:	je     0x64019794
64019751:	test   edi,edi
64019753:	je     0x64019794
64019755:	push   edi
64019756:	call   DWORD PTR ds:0x6402615c
6401975c:	test   eax,eax
6401975e:	je     0x64019794
64019760:	mov    DWORD PTR [esi],edi
64019762:	and    eax,0xff
64019767:	cmp    eax,0x2
6401976a:	jne    0x64019772
6401976c:	or     BYTE PTR [esi+0x4],0x40
64019770:	jmp    0x6401977b
64019772:	cmp    eax,0x3
64019775:	jne    0x6401977b
64019777:	or     BYTE PTR [esi+0x4],0x8
6401977b:	push   0xfa0
64019780:	lea    eax,[esi+0xc]
64019783:	push   eax
64019784:	call   0x6401c8d8
64019789:	pop    ecx
6401978a:	pop    ecx
6401978b:	test   eax,eax
6401978d:	je     0x640197c6
6401978f:	inc    DWORD PTR [esi+0x8]
64019792:	jmp    0x6401979e
64019794:	or     BYTE PTR [esi+0x4],0x40
64019798:	mov    DWORD PTR [esi],0xfffffffe
6401979e:	inc    ebx
6401979f:	cmp    ebx,0x3
640197a2:	jl     0x6401970f
640197a8:	push   DWORD PTR ds:0x64034500
640197ae:	call   DWORD PTR ds:0x64026154
640197b4:	xor    eax,eax
640197b6:	jmp    0x640197c9
640197b8:	xor    eax,eax
640197ba:	inc    eax
640197bb:	ret    
640197bc:	mov    esp,DWORD PTR [ebp-0x18]
640197bf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640197c6:	or     eax,0xffffffff
640197c9:	call   0x64015265
640197ce:	ret    
640197cf:	push   esi
640197d0:	push   edi
640197d1:	mov    esi,0x64034520
640197d6:	mov    edi,DWORD PTR [esi]
640197d8:	test   edi,edi
640197da:	je     0x6401980d
640197dc:	lea    eax,[edi+0x800]
640197e2:	jmp    0x640197fe
640197e4:	cmp    DWORD PTR [edi+0x8],0x0
640197e8:	je     0x640197f4
640197ea:	lea    eax,[edi+0xc]
640197ed:	push   eax
640197ee:	call   DWORD PTR ds:0x640260a4
640197f4:	mov    eax,DWORD PTR [esi]
640197f6:	add    edi,0x40
640197f9:	add    eax,0x800
640197fe:	cmp    edi,eax
64019800:	jb     0x640197e4
64019802:	push   DWORD PTR [esi]
64019804:	call   0x64014af6
64019809:	and    DWORD PTR [esi],0x0
6401980c:	pop    ecx
6401980d:	add    esi,0x4
64019810:	cmp    esi,0x64034620
64019816:	jl     0x640197d6
64019818:	pop    edi
64019819:	pop    esi
6401981a:	ret    
6401981b:	push   ebx
6401981c:	xor    ebx,ebx
6401981e:	cmp    DWORD PTR ds:0x64034634,ebx
64019824:	push   esi
64019825:	push   edi
64019826:	jne    0x6401982d
64019828:	call   0x64017a41
6401982d:	mov    esi,DWORD PTR ds:0x64030574
64019833:	xor    edi,edi
64019835:	cmp    esi,ebx
64019837:	jne    0x64019851
64019839:	or     eax,0xffffffff
6401983c:	jmp    0x640198dc
64019841:	cmp    al,0x3d
64019843:	je     0x64019846
64019845:	inc    edi
64019846:	push   esi
64019847:	call   0x64015420
6401984c:	pop    ecx
6401984d:	lea    esi,[esi+eax*1+0x1]
64019851:	mov    al,BYTE PTR [esi]
64019853:	cmp    al,bl
64019855:	jne    0x64019841
64019857:	push   0x4
64019859:	inc    edi
6401985a:	push   edi
6401985b:	call   0x64016f70
64019860:	mov    edi,eax
64019862:	cmp    edi,ebx
64019864:	pop    ecx
64019865:	pop    ecx
64019866:	mov    DWORD PTR ds:0x640308f4,edi
6401986c:	je     0x64019839
6401986e:	mov    esi,DWORD PTR ds:0x64030574
64019874:	push   ebp
64019875:	jmp    0x640198b7
64019877:	push   esi
64019878:	call   0x64015420
6401987d:	mov    ebp,eax
6401987f:	inc    ebp
64019880:	cmp    BYTE PTR [esi],0x3d
64019883:	pop    ecx
64019884:	je     0x640198b5
64019886:	push   0x1
64019888:	push   ebp
64019889:	call   0x64016f70
6401988e:	cmp    eax,ebx
64019890:	pop    ecx
64019891:	pop    ecx
64019892:	mov    DWORD PTR [edi],eax
64019894:	je     0x640198e0
64019896:	push   esi
64019897:	push   ebp
64019898:	push   eax
64019899:	call   0x64015618
6401989e:	add    esp,0xc
640198a1:	test   eax,eax
640198a3:	je     0x640198b2
640198a5:	push   ebx
640198a6:	push   ebx
640198a7:	push   ebx
640198a8:	push   ebx
640198a9:	push   ebx
640198aa:	call   0x64013698
640198af:	add    esp,0x14
640198b2:	add    edi,0x4
640198b5:	add    esi,ebp
640198b7:	cmp    BYTE PTR [esi],bl
640198b9:	jne    0x64019877
640198bb:	push   DWORD PTR ds:0x64030574
640198c1:	call   0x64014af6
640198c6:	mov    DWORD PTR ds:0x64030574,ebx
640198cc:	mov    DWORD PTR [edi],ebx
640198ce:	mov    DWORD PTR ds:0x64034628,0x1
640198d8:	xor    eax,eax
640198da:	pop    ecx
640198db:	pop    ebp
640198dc:	pop    edi
640198dd:	pop    esi
640198de:	pop    ebx
640198df:	ret    
640198e0:	push   DWORD PTR ds:0x640308f4
640198e6:	call   0x64014af6
640198eb:	mov    DWORD PTR ds:0x640308f4,ebx
640198f1:	or     eax,0xffffffff
640198f4:	jmp    0x640198da
640198f6:	push   ebp
640198f7:	mov    ebp,esp
640198f9:	push   ecx
640198fa:	mov    ecx,DWORD PTR [ebp+0x10]
640198fd:	push   ebx
640198fe:	xor    eax,eax
64019900:	cmp    DWORD PTR [ebp+0x8],eax
64019903:	push   esi
64019904:	mov    DWORD PTR [edi],eax
64019906:	mov    esi,edx
64019908:	mov    edx,DWORD PTR [ebp+0xc]
6401990b:	mov    DWORD PTR [ecx],0x1
64019911:	je     0x6401991c
64019913:	mov    ebx,DWORD PTR [ebp+0x8]
64019916:	add    DWORD PTR [ebp+0x8],0x4
6401991a:	mov    DWORD PTR [ebx],edx
6401991c:	mov    DWORD PTR [ebp-0x4],eax
6401991f:	cmp    BYTE PTR [esi],0x22
64019922:	jne    0x64019934
64019924:	xor    eax,eax
64019926:	cmp    DWORD PTR [ebp-0x4],eax
64019929:	mov    bl,0x22
6401992b:	sete   al
6401992e:	inc    esi
6401992f:	mov    DWORD PTR [ebp-0x4],eax
64019932:	jmp    0x64019970
64019934:	inc    DWORD PTR [edi]
64019936:	test   edx,edx
64019938:	je     0x64019942
6401993a:	mov    al,BYTE PTR [esi]
6401993c:	mov    BYTE PTR [edx],al
6401993e:	inc    edx
6401993f:	mov    DWORD PTR [ebp+0xc],edx
64019942:	mov    bl,BYTE PTR [esi]
64019944:	movzx  eax,bl
64019947:	push   eax
64019948:	inc    esi
64019949:	call   0x6401ead6
6401994e:	test   eax,eax
64019950:	pop    ecx
64019951:	je     0x64019966
64019953:	inc    DWORD PTR [edi]
64019955:	cmp    DWORD PTR [ebp+0xc],0x0
64019959:	je     0x64019965
6401995b:	mov    ecx,DWORD PTR [ebp+0xc]
6401995e:	mov    al,BYTE PTR [esi]
64019960:	inc    DWORD PTR [ebp+0xc]
64019963:	mov    BYTE PTR [ecx],al
64019965:	inc    esi
64019966:	test   bl,bl
64019968:	mov    edx,DWORD PTR [ebp+0xc]
6401996b:	mov    ecx,DWORD PTR [ebp+0x10]
6401996e:	je     0x640199a2
64019970:	cmp    DWORD PTR [ebp-0x4],0x0
64019974:	jne    0x6401991f
64019976:	cmp    bl,0x20
64019979:	je     0x64019980
6401997b:	cmp    bl,0x9
6401997e:	jne    0x6401991f
64019980:	test   edx,edx
64019982:	je     0x64019988
64019984:	mov    BYTE PTR [edx-0x1],0x0
64019988:	and    DWORD PTR [ebp-0x4],0x0
6401998c:	cmp    BYTE PTR [esi],0x0
6401998f:	je     0x64019a7e
64019995:	mov    al,BYTE PTR [esi]
64019997:	cmp    al,0x20
64019999:	je     0x6401999f
6401999b:	cmp    al,0x9
6401999d:	jne    0x640199a5
6401999f:	inc    esi
640199a0:	jmp    0x64019995
640199a2:	dec    esi
640199a3:	jmp    0x64019988
640199a5:	cmp    BYTE PTR [esi],0x0
640199a8:	je     0x64019a7e
640199ae:	cmp    DWORD PTR [ebp+0x8],0x0
640199b2:	je     0x640199bd
640199b4:	mov    eax,DWORD PTR [ebp+0x8]
640199b7:	add    DWORD PTR [ebp+0x8],0x4
640199bb:	mov    DWORD PTR [eax],edx
640199bd:	inc    DWORD PTR [ecx]
640199bf:	xor    ebx,ebx
640199c1:	inc    ebx
640199c2:	xor    ecx,ecx
640199c4:	jmp    0x640199c8
640199c6:	inc    esi
640199c7:	inc    ecx
640199c8:	cmp    BYTE PTR [esi],0x5c
640199cb:	je     0x640199c6
640199cd:	cmp    BYTE PTR [esi],0x22
640199d0:	jne    0x640199f8
640199d2:	test   cl,0x1
640199d5:	jne    0x640199f6
640199d7:	cmp    DWORD PTR [ebp-0x4],0x0
640199db:	je     0x640199e9
640199dd:	lea    eax,[esi+0x1]
640199e0:	cmp    BYTE PTR [eax],0x22
640199e3:	jne    0x640199e9
640199e5:	mov    esi,eax
640199e7:	jmp    0x640199f6
640199e9:	xor    eax,eax
640199eb:	xor    ebx,ebx
640199ed:	cmp    DWORD PTR [ebp-0x4],eax
640199f0:	sete   al
640199f3:	mov    DWORD PTR [ebp-0x4],eax
640199f6:	shr    ecx,1
640199f8:	test   ecx,ecx
640199fa:	je     0x64019a0e
640199fc:	dec    ecx
640199fd:	test   edx,edx
640199ff:	je     0x64019a05
64019a01:	mov    BYTE PTR [edx],0x5c
64019a04:	inc    edx
64019a05:	inc    DWORD PTR [edi]
64019a07:	test   ecx,ecx
64019a09:	jne    0x640199fc
64019a0b:	mov    DWORD PTR [ebp+0xc],edx
64019a0e:	mov    al,BYTE PTR [esi]
64019a10:	test   al,al
64019a12:	je     0x64019a69
64019a14:	cmp    DWORD PTR [ebp-0x4],0x0
64019a18:	jne    0x64019a22
64019a1a:	cmp    al,0x20
64019a1c:	je     0x64019a69
64019a1e:	cmp    al,0x9
64019a20:	je     0x64019a69
64019a22:	test   ebx,ebx
64019a24:	je     0x64019a63
64019a26:	test   edx,edx
64019a28:	movsx  eax,al
64019a2b:	push   eax
64019a2c:	je     0x64019a51
64019a2e:	call   0x6401ead6
64019a33:	test   eax,eax
64019a35:	pop    ecx
64019a36:	je     0x64019a45
64019a38:	mov    al,BYTE PTR [esi]
64019a3a:	mov    ecx,DWORD PTR [ebp+0xc]
64019a3d:	inc    DWORD PTR [ebp+0xc]
64019a40:	mov    BYTE PTR [ecx],al
64019a42:	inc    esi
64019a43:	inc    DWORD PTR [edi]
64019a45:	mov    ecx,DWORD PTR [ebp+0xc]
64019a48:	mov    al,BYTE PTR [esi]
64019a4a:	inc    DWORD PTR [ebp+0xc]
64019a4d:	mov    BYTE PTR [ecx],al
64019a4f:	jmp    0x64019a5e
64019a51:	call   0x6401ead6
64019a56:	test   eax,eax
64019a58:	pop    ecx
64019a59:	je     0x64019a5e
64019a5b:	inc    esi
64019a5c:	inc    DWORD PTR [edi]
64019a5e:	inc    DWORD PTR [edi]
64019a60:	mov    edx,DWORD PTR [ebp+0xc]
64019a63:	inc    esi
64019a64:	jmp    0x640199bf
64019a69:	test   edx,edx
64019a6b:	je     0x64019a74
64019a6d:	mov    BYTE PTR [edx],0x0
64019a70:	inc    edx
64019a71:	mov    DWORD PTR [ebp+0xc],edx
64019a74:	inc    DWORD PTR [edi]
64019a76:	mov    ecx,DWORD PTR [ebp+0x10]
64019a79:	jmp    0x6401998c
64019a7e:	mov    eax,DWORD PTR [ebp+0x8]
64019a81:	test   eax,eax
64019a83:	pop    esi
64019a84:	pop    ebx
64019a85:	je     0x64019a8a
64019a87:	and    DWORD PTR [eax],0x0
64019a8a:	inc    DWORD PTR [ecx]
64019a8c:	leave  
64019a8d:	ret    
64019a8e:	push   ebp
64019a8f:	mov    ebp,esp
64019a91:	sub    esp,0xc
64019a94:	push   ebx
64019a95:	xor    ebx,ebx
64019a97:	cmp    DWORD PTR ds:0x64034634,ebx
64019a9d:	push   esi
64019a9e:	push   edi
64019a9f:	jne    0x64019aa6
64019aa1:	call   0x64017a41
64019aa6:	push   0x104
64019aab:	mov    esi,0x64030960
64019ab0:	push   esi
64019ab1:	push   ebx
64019ab2:	mov    BYTE PTR ds:0x64030a64,bl
64019ab8:	call   DWORD PTR ds:0x64026164
64019abe:	mov    eax,ds:0x64034640
64019ac3:	cmp    eax,ebx
64019ac5:	mov    DWORD PTR ds:0x64030904,esi
64019acb:	je     0x64019ad4
64019acd:	cmp    BYTE PTR [eax],bl
64019acf:	mov    DWORD PTR [ebp-0x4],eax
64019ad2:	jne    0x64019ad7
64019ad4:	mov    DWORD PTR [ebp-0x4],esi
64019ad7:	mov    edx,DWORD PTR [ebp-0x4]
64019ada:	lea    eax,[ebp-0x8]
64019add:	push   eax
64019ade:	push   ebx
64019adf:	push   ebx
64019ae0:	lea    edi,[ebp-0xc]
64019ae3:	call   0x640198f6
64019ae8:	mov    eax,DWORD PTR [ebp-0x8]
64019aeb:	add    esp,0xc
64019aee:	cmp    eax,0x3fffffff
64019af3:	jae    0x64019b3f
64019af5:	mov    ecx,DWORD PTR [ebp-0xc]
64019af8:	cmp    ecx,0xffffffff
64019afb:	jae    0x64019b3f
64019afd:	mov    edi,eax
64019aff:	shl    edi,0x2
64019b02:	lea    eax,[edi+ecx*1]
64019b05:	cmp    eax,ecx
64019b07:	jb     0x64019b3f
64019b09:	push   eax
64019b0a:	call   0x64016f30
64019b0f:	mov    esi,eax
64019b11:	cmp    esi,ebx
64019b13:	pop    ecx
64019b14:	je     0x64019b3f
64019b16:	mov    edx,DWORD PTR [ebp-0x4]
64019b19:	lea    eax,[ebp-0x8]
64019b1c:	push   eax
64019b1d:	add    edi,esi
64019b1f:	push   edi
64019b20:	push   esi
64019b21:	lea    edi,[ebp-0xc]
64019b24:	call   0x640198f6
64019b29:	mov    eax,DWORD PTR [ebp-0x8]
64019b2c:	add    esp,0xc
64019b2f:	dec    eax
64019b30:	mov    ds:0x640308e8,eax
64019b35:	mov    DWORD PTR ds:0x640308ec,esi
64019b3b:	xor    eax,eax
64019b3d:	jmp    0x64019b42
64019b3f:	or     eax,0xffffffff
64019b42:	pop    edi
64019b43:	pop    esi
64019b44:	pop    ebx
64019b45:	leave  
64019b46:	ret    
64019b47:	push   ecx
64019b48:	push   ecx
64019b49:	mov    eax,ds:0x64030a68
64019b4e:	push   ebx
64019b4f:	push   ebp
64019b50:	push   esi
64019b51:	push   edi
64019b52:	mov    edi,DWORD PTR ds:0x64026084
64019b58:	xor    ebx,ebx
64019b5a:	xor    esi,esi
64019b5c:	cmp    eax,ebx
64019b5e:	push   0x2
64019b60:	pop    ebp
64019b61:	jne    0x64019b90
64019b63:	call   edi
64019b65:	mov    esi,eax
64019b67:	cmp    esi,ebx
64019b69:	je     0x64019b77
64019b6b:	mov    DWORD PTR ds:0x64030a68,0x1
64019b75:	jmp    0x64019b99
64019b77:	call   DWORD PTR ds:0x64026044
64019b7d:	cmp    eax,0x78
64019b80:	jne    0x64019b8b
64019b82:	mov    eax,ebp
64019b84:	mov    ds:0x64030a68,eax
64019b89:	jmp    0x64019b90
64019b8b:	mov    eax,ds:0x64030a68
64019b90:	cmp    eax,0x1
64019b93:	jne    0x64019c1d
64019b99:	cmp    esi,ebx
64019b9b:	jne    0x64019bac
64019b9d:	call   edi
64019b9f:	mov    esi,eax
64019ba1:	cmp    esi,ebx
64019ba3:	jne    0x64019bac
64019ba5:	xor    eax,eax
64019ba7:	jmp    0x64019c75
64019bac:	cmp    WORD PTR [esi],bx
64019baf:	mov    eax,esi
64019bb1:	je     0x64019bc1
64019bb3:	add    eax,ebp
64019bb5:	cmp    WORD PTR [eax],bx
64019bb8:	jne    0x64019bb3
64019bba:	add    eax,ebp
64019bbc:	cmp    WORD PTR [eax],bx
64019bbf:	jne    0x64019bb3
64019bc1:	mov    edi,DWORD PTR ds:0x64026028
64019bc7:	push   ebx
64019bc8:	push   ebx
64019bc9:	push   ebx
64019bca:	sub    eax,esi
64019bcc:	push   ebx
64019bcd:	sar    eax,1
64019bcf:	inc    eax
64019bd0:	push   eax
64019bd1:	push   esi
64019bd2:	push   ebx
64019bd3:	push   ebx
64019bd4:	mov    DWORD PTR [esp+0x34],eax
64019bd8:	call   edi
64019bda:	mov    ebp,eax
64019bdc:	cmp    ebp,ebx
64019bde:	je     0x64019c12
64019be0:	push   ebp
64019be1:	call   0x64016f30
64019be6:	cmp    eax,ebx
64019be8:	pop    ecx
64019be9:	mov    DWORD PTR [esp+0x10],eax
64019bed:	je     0x64019c12
64019bef:	push   ebx
64019bf0:	push   ebx
64019bf1:	push   ebp
64019bf2:	push   eax
64019bf3:	push   DWORD PTR [esp+0x24]
64019bf7:	push   esi
64019bf8:	push   ebx
64019bf9:	push   ebx
64019bfa:	call   edi
64019bfc:	test   eax,eax
64019bfe:	jne    0x64019c0e
64019c00:	push   DWORD PTR [esp+0x10]
64019c04:	call   0x64014af6
64019c09:	pop    ecx
64019c0a:	mov    DWORD PTR [esp+0x10],ebx
64019c0e:	mov    ebx,DWORD PTR [esp+0x10]
64019c12:	push   esi
64019c13:	call   DWORD PTR ds:0x64026170
64019c19:	mov    eax,ebx
64019c1b:	jmp    0x64019c75
64019c1d:	cmp    eax,ebp
64019c1f:	je     0x64019c25
64019c21:	cmp    eax,ebx
64019c23:	jne    0x64019ba5
64019c25:	call   DWORD PTR ds:0x6402616c
64019c2b:	mov    esi,eax
64019c2d:	cmp    esi,ebx
64019c2f:	je     0x64019ba5
64019c35:	cmp    BYTE PTR [esi],bl
64019c37:	je     0x64019c43
64019c39:	inc    eax
64019c3a:	cmp    BYTE PTR [eax],bl
64019c3c:	jne    0x64019c39
64019c3e:	inc    eax
64019c3f:	cmp    BYTE PTR [eax],bl
64019c41:	jne    0x64019c39
64019c43:	sub    eax,esi
64019c45:	inc    eax
64019c46:	mov    ebp,eax
64019c48:	push   ebp
64019c49:	call   0x64016f30
64019c4e:	mov    edi,eax
64019c50:	cmp    edi,ebx
64019c52:	pop    ecx
64019c53:	jne    0x64019c61
64019c55:	push   esi
64019c56:	call   DWORD PTR ds:0x64026168
64019c5c:	jmp    0x64019ba5
64019c61:	push   ebp
64019c62:	push   esi
64019c63:	push   edi
64019c64:	call   0x64015680
64019c69:	add    esp,0xc
64019c6c:	push   esi
64019c6d:	call   DWORD PTR ds:0x64026168
64019c73:	mov    eax,edi
64019c75:	pop    edi
64019c76:	pop    esi
64019c77:	pop    ebp
64019c78:	pop    ebx
64019c79:	pop    ecx
64019c7a:	pop    ecx
64019c7b:	ret    
64019c7c:	push   esi
64019c7d:	push   edi
64019c7e:	mov    eax,0x6402bad8
64019c83:	mov    edi,0x6402bad8
64019c88:	cmp    eax,edi
64019c8a:	mov    esi,eax
64019c8c:	jae    0x64019c9d
64019c8e:	mov    eax,DWORD PTR [esi]
64019c90:	test   eax,eax
64019c92:	je     0x64019c96
64019c94:	call   eax
64019c96:	add    esi,0x4
64019c99:	cmp    esi,edi
64019c9b:	jb     0x64019c8e
64019c9d:	pop    edi
64019c9e:	pop    esi
64019c9f:	ret    
64019ca0:	push   esi
64019ca1:	push   edi
64019ca2:	mov    eax,0x6402bae0
64019ca7:	mov    edi,0x6402bae0
64019cac:	cmp    eax,edi
64019cae:	mov    esi,eax
64019cb0:	jae    0x64019cc1
64019cb2:	mov    eax,DWORD PTR [esi]
64019cb4:	test   eax,eax
64019cb6:	je     0x64019cba
64019cb8:	call   eax
64019cba:	add    esi,0x4
64019cbd:	cmp    esi,edi
64019cbf:	jb     0x64019cb2
64019cc1:	pop    edi
64019cc2:	pop    esi
64019cc3:	ret    
64019cc4:	push   ebp
64019cc5:	mov    ebp,esp
64019cc7:	push   ecx
64019cc8:	push   ecx
64019cc9:	push   esi
64019cca:	lea    eax,[ebp-0x4]
64019ccd:	xor    esi,esi
64019ccf:	push   eax
64019cd0:	mov    DWORD PTR [ebp-0x4],esi
64019cd3:	mov    DWORD PTR [ebp-0x8],esi
64019cd6:	call   0x6401714f
64019cdb:	test   eax,eax
64019cdd:	pop    ecx
64019cde:	je     0x64019ced
64019ce0:	push   esi
64019ce1:	push   esi
64019ce2:	push   esi
64019ce3:	push   esi
64019ce4:	push   esi
64019ce5:	call   0x64013698
64019cea:	add    esp,0x14
64019ced:	lea    eax,[ebp-0x8]
64019cf0:	push   eax
64019cf1:	call   0x64017186
64019cf6:	test   eax,eax
64019cf8:	pop    ecx
64019cf9:	je     0x64019d08
64019cfb:	push   esi
64019cfc:	push   esi
64019cfd:	push   esi
64019cfe:	push   esi
64019cff:	push   esi
64019d00:	call   0x64013698
64019d05:	add    esp,0x14
64019d08:	cmp    DWORD PTR [ebp-0x4],0x2
64019d0c:	pop    esi
64019d0d:	jne    0x64019d1a
64019d0f:	cmp    DWORD PTR [ebp-0x8],0x5
64019d13:	jb     0x64019d1a
64019d15:	xor    eax,eax
64019d17:	inc    eax
64019d18:	leave  
64019d19:	ret    
64019d1a:	push   0x3
64019d1c:	pop    eax
64019d1d:	leave  
64019d1e:	ret    
64019d1f:	xor    eax,eax
64019d21:	cmp    DWORD PTR [esp+0x4],eax
64019d25:	push   0x0
64019d27:	sete   al
64019d2a:	push   0x1000
64019d2f:	push   eax
64019d30:	call   DWORD PTR ds:0x64026174
64019d36:	test   eax,eax
64019d38:	mov    ds:0x64030a6c,eax
64019d3d:	jne    0x64019d42
64019d3f:	xor    eax,eax
64019d41:	ret    
64019d42:	call   0x64019cc4
64019d47:	cmp    eax,0x3
64019d4a:	mov    ds:0x640344fc,eax
64019d4f:	jne    0x64019d75
64019d51:	push   0x3f8
64019d56:	call   0x6401b24b
64019d5b:	test   eax,eax
64019d5d:	pop    ecx
64019d5e:	jne    0x64019d75
64019d60:	push   DWORD PTR ds:0x64030a6c
64019d66:	call   DWORD PTR ds:0x640260f4
64019d6c:	and    DWORD PTR ds:0x64030a6c,0x0
64019d73:	jmp    0x64019d3f
64019d75:	xor    eax,eax
64019d77:	inc    eax
64019d78:	ret    
64019d79:	push   ebp
64019d7a:	xor    ebp,ebp
64019d7c:	cmp    DWORD PTR ds:0x640344fc,0x3
64019d83:	jne    0x64019dd9
64019d85:	push   ebx
64019d86:	mov    ebx,DWORD PTR ds:0x640260fc
64019d8c:	push   edi
64019d8d:	xor    edi,edi
64019d8f:	cmp    DWORD PTR ds:0x640344e4,ebp
64019d95:	jle    0x64019dc8
64019d97:	push   esi
64019d98:	mov    esi,DWORD PTR ds:0x640344e8
64019d9e:	add    esi,0x10
64019da1:	push   0x8000
64019da6:	push   ebp
64019da7:	push   DWORD PTR [esi-0x4]
64019daa:	call   DWORD PTR ds:0x64026178
64019db0:	push   DWORD PTR [esi]
64019db2:	push   ebp
64019db3:	push   DWORD PTR ds:0x64030a6c
64019db9:	call   ebx
64019dbb:	add    esi,0x14
64019dbe:	inc    edi
64019dbf:	cmp    edi,DWORD PTR ds:0x640344e4
64019dc5:	jl     0x64019da1
64019dc7:	pop    esi
64019dc8:	push   DWORD PTR ds:0x640344e8
64019dce:	push   ebp
64019dcf:	push   DWORD PTR ds:0x64030a6c
64019dd5:	call   ebx
64019dd7:	pop    edi
64019dd8:	pop    ebx
64019dd9:	push   DWORD PTR ds:0x64030a6c
64019ddf:	call   DWORD PTR ds:0x640260f4
64019de5:	mov    DWORD PTR ds:0x64030a6c,ebp
64019deb:	pop    ebp
64019dec:	ret    
64019ded:	push   ebp
64019dee:	mov    ebp,esp
64019df0:	push   ecx
64019df1:	push   ecx
64019df2:	push   esi
64019df3:	call   0x64015cf4
64019df8:	mov    esi,eax
64019dfa:	test   esi,esi
64019dfc:	je     0x64019f48
64019e02:	mov    edx,DWORD PTR [esi+0x5c]
64019e05:	mov    eax,ds:0x6402f94c
64019e0a:	push   edi
64019e0b:	mov    edi,DWORD PTR [ebp+0x8]
64019e0e:	mov    ecx,edx
64019e10:	push   ebx
64019e11:	cmp    DWORD PTR [ecx],edi
64019e13:	je     0x64019e23
64019e15:	mov    ebx,eax
64019e17:	imul   ebx,ebx,0xc
64019e1a:	add    ecx,0xc
64019e1d:	add    ebx,edx
64019e1f:	cmp    ecx,ebx
64019e21:	jb     0x64019e11
64019e23:	imul   eax,eax,0xc
64019e26:	add    eax,edx
64019e28:	cmp    ecx,eax
64019e2a:	jae    0x64019e34
64019e2c:	cmp    DWORD PTR [ecx],edi
64019e2e:	jne    0x64019e34
64019e30:	mov    eax,ecx
64019e32:	jmp    0x64019e36
64019e34:	xor    eax,eax
64019e36:	test   eax,eax
64019e38:	je     0x64019e44
64019e3a:	mov    ebx,DWORD PTR [eax+0x8]
64019e3d:	test   ebx,ebx
64019e3f:	mov    DWORD PTR [ebp-0x4],ebx
64019e42:	jne    0x64019e4b
64019e44:	xor    eax,eax
64019e46:	jmp    0x64019f46
64019e4b:	cmp    ebx,0x5
64019e4e:	jne    0x64019e5c
64019e50:	and    DWORD PTR [eax+0x8],0x0
64019e54:	xor    eax,eax
64019e56:	inc    eax
64019e57:	jmp    0x64019f46
64019e5c:	cmp    ebx,0x1
64019e5f:	je     0x64019f43
64019e65:	mov    ecx,DWORD PTR [esi+0x60]
64019e68:	mov    DWORD PTR [ebp-0x8],ecx
64019e6b:	mov    ecx,DWORD PTR [ebp+0xc]
64019e6e:	mov    DWORD PTR [esi+0x60],ecx
64019e71:	mov    ecx,DWORD PTR [eax+0x4]
64019e74:	cmp    ecx,0x8
64019e77:	jne    0x64019f35
64019e7d:	mov    ecx,DWORD PTR ds:0x6402f940
64019e83:	mov    edi,DWORD PTR ds:0x6402f944
64019e89:	mov    edx,ecx
64019e8b:	add    edi,ecx
64019e8d:	cmp    edx,edi
64019e8f:	jge    0x64019eb5
64019e91:	imul   ecx,ecx,0xc
64019e94:	mov    edi,DWORD PTR [esi+0x5c]
64019e97:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64019e9c:	mov    edi,DWORD PTR ds:0x6402f940
64019ea2:	mov    ebx,DWORD PTR ds:0x6402f944
64019ea8:	inc    edx
64019ea9:	add    ebx,edi
64019eab:	add    ecx,0xc
64019eae:	cmp    edx,ebx
64019eb0:	jl     0x64019e94
64019eb2:	mov    ebx,DWORD PTR [ebp-0x4]
64019eb5:	mov    eax,DWORD PTR [eax]
64019eb7:	cmp    eax,0xc000008e
64019ebc:	mov    edi,DWORD PTR [esi+0x64]
64019ebf:	jne    0x64019eca
64019ec1:	mov    DWORD PTR [esi+0x64],0x83
64019ec8:	jmp    0x64019f28
64019eca:	cmp    eax,0xc0000090
64019ecf:	jne    0x64019eda
64019ed1:	mov    DWORD PTR [esi+0x64],0x81
64019ed8:	jmp    0x64019f28
64019eda:	cmp    eax,0xc0000091
64019edf:	jne    0x64019eea
64019ee1:	mov    DWORD PTR [esi+0x64],0x84
64019ee8:	jmp    0x64019f28
64019eea:	cmp    eax,0xc0000093
64019eef:	jne    0x64019efa
64019ef1:	mov    DWORD PTR [esi+0x64],0x85
64019ef8:	jmp    0x64019f28
64019efa:	cmp    eax,0xc000008d
64019eff:	jne    0x64019f0a
64019f01:	mov    DWORD PTR [esi+0x64],0x82
64019f08:	jmp    0x64019f28
64019f0a:	cmp    eax,0xc000008f
64019f0f:	jne    0x64019f1a
64019f11:	mov    DWORD PTR [esi+0x64],0x86
64019f18:	jmp    0x64019f28
64019f1a:	cmp    eax,0xc0000092
64019f1f:	jne    0x64019f28
64019f21:	mov    DWORD PTR [esi+0x64],0x8a
64019f28:	push   DWORD PTR [esi+0x64]
64019f2b:	push   0x8
64019f2d:	call   ebx
64019f2f:	pop    ecx
64019f30:	mov    DWORD PTR [esi+0x64],edi
64019f33:	jmp    0x64019f3c
64019f35:	and    DWORD PTR [eax+0x8],0x0
64019f39:	push   ecx
64019f3a:	call   ebx
64019f3c:	mov    eax,DWORD PTR [ebp-0x8]
64019f3f:	pop    ecx
64019f40:	mov    DWORD PTR [esi+0x60],eax
64019f43:	or     eax,0xffffffff
64019f46:	pop    ebx
64019f47:	pop    edi
64019f48:	pop    esi
64019f49:	leave  
64019f4a:	ret    
64019f4b:	mov    eax,0xe06d7363
64019f50:	cmp    DWORD PTR [esp+0x4],eax
64019f54:	jne    0x64019f63
64019f56:	push   DWORD PTR [esp+0x8]
64019f5a:	push   eax
64019f5b:	call   0x64019ded
64019f60:	pop    ecx
64019f61:	pop    ecx
64019f62:	ret    
64019f63:	xor    eax,eax
64019f65:	ret    
64019f66:	push   ebp
64019f67:	mov    ebp,esp
64019f69:	sub    esp,0x10
64019f6c:	mov    eax,ds:0x6402f09c
64019f71:	and    DWORD PTR [ebp-0x8],0x0
64019f75:	and    DWORD PTR [ebp-0x4],0x0
64019f79:	push   ebx
64019f7a:	push   edi
64019f7b:	mov    edi,0xbb40e64e
64019f80:	cmp    eax,edi
64019f82:	mov    ebx,0xffff0000
64019f87:	je     0x64019f96
64019f89:	test   ebx,eax
64019f8b:	je     0x64019f96
64019f8d:	not    eax
64019f8f:	mov    ds:0x6402f0a0,eax
64019f94:	jmp    0x64019ff6
64019f96:	push   esi
64019f97:	lea    eax,[ebp-0x8]
64019f9a:	push   eax
64019f9b:	call   DWORD PTR ds:0x640260cc
64019fa1:	mov    esi,DWORD PTR [ebp-0x4]
64019fa4:	xor    esi,DWORD PTR [ebp-0x8]
64019fa7:	call   DWORD PTR ds:0x64026180
64019fad:	xor    esi,eax
64019faf:	call   DWORD PTR ds:0x64026120
64019fb5:	xor    esi,eax
64019fb7:	call   DWORD PTR ds:0x6402605c
64019fbd:	xor    esi,eax
64019fbf:	lea    eax,[ebp-0x10]
64019fc2:	push   eax
64019fc3:	call   DWORD PTR ds:0x6402617c
64019fc9:	mov    eax,DWORD PTR [ebp-0xc]
64019fcc:	xor    eax,DWORD PTR [ebp-0x10]
64019fcf:	xor    esi,eax
64019fd1:	cmp    esi,edi
64019fd3:	jne    0x64019fdc
64019fd5:	mov    esi,0xbb40e64f
64019fda:	jmp    0x64019fe7
64019fdc:	test   ebx,esi
64019fde:	jne    0x64019fe7
64019fe0:	mov    eax,esi
64019fe2:	shl    eax,0x10
64019fe5:	or     esi,eax
64019fe7:	mov    DWORD PTR ds:0x6402f09c,esi
64019fed:	not    esi
64019fef:	mov    DWORD PTR ds:0x6402f0a0,esi
64019ff5:	pop    esi
64019ff6:	pop    edi
64019ff7:	pop    ebx
64019ff8:	leave  
64019ff9:	ret    
64019ffa:	test   BYTE PTR [edi+0xc],0x40
64019ffe:	push   ebx
64019fff:	push   esi
6401a000:	mov    esi,eax
6401a002:	mov    ebx,ecx
6401a004:	je     0x6401a03a
6401a006:	cmp    DWORD PTR [edi+0x8],0x0
6401a00a:	jne    0x6401a03a
6401a00c:	mov    eax,DWORD PTR [esp+0xc]
6401a010:	add    DWORD PTR [esi],eax
6401a012:	jmp    0x6401a041
6401a014:	mov    al,BYTE PTR [ebx]
6401a016:	dec    DWORD PTR [esp+0xc]
6401a01a:	mov    ecx,edi
6401a01c:	call   0x6401ddc8
6401a021:	inc    ebx
6401a022:	cmp    DWORD PTR [esi],0xffffffff
6401a025:	jne    0x6401a03a
6401a027:	call   0x64015a20
6401a02c:	cmp    DWORD PTR [eax],0x2a
6401a02f:	jne    0x6401a041
6401a031:	mov    ecx,edi
6401a033:	mov    al,0x3f
6401a035:	call   0x6401ddc8
6401a03a:	cmp    DWORD PTR [esp+0xc],0x0
6401a03f:	jg     0x6401a014
6401a041:	pop    esi
6401a042:	pop    ebx
6401a043:	ret    
6401a044:	push   ebp
6401a045:	lea    ebp,[esp-0x1f8]
6401a04c:	sub    esp,0x278
6401a052:	mov    eax,ds:0x6402f09c
6401a057:	xor    eax,ebp
6401a059:	mov    DWORD PTR [ebp+0x1f4],eax
6401a05f:	mov    eax,DWORD PTR [ebp+0x200]
6401a065:	push   ebx
6401a066:	mov    ebx,DWORD PTR [ebp+0x204]
6401a06c:	push   esi
6401a06d:	xor    esi,esi
6401a06f:	push   edi
6401a070:	mov    edi,DWORD PTR [ebp+0x20c]
6401a076:	push   DWORD PTR [ebp+0x208]
6401a07c:	lea    ecx,[ebp-0x64]
6401a07f:	mov    DWORD PTR [ebp-0x30],eax
6401a082:	mov    DWORD PTR [ebp-0x2c],edi
6401a085:	mov    DWORD PTR [ebp-0x4c],esi
6401a088:	mov    DWORD PTR [ebp-0x18],esi
6401a08b:	mov    DWORD PTR [ebp-0x40],esi
6401a08e:	mov    DWORD PTR [ebp-0x20],esi
6401a091:	mov    DWORD PTR [ebp-0x3c],esi
6401a094:	mov    DWORD PTR [ebp-0x50],esi
6401a097:	mov    DWORD PTR [ebp-0x44],esi
6401a09a:	call   0x64013dff
6401a09f:	cmp    DWORD PTR [ebp-0x30],esi
6401a0a2:	jne    0x6401a0d1
6401a0a4:	call   0x64015a20
6401a0a9:	push   esi
6401a0aa:	push   esi
6401a0ab:	push   esi
6401a0ac:	push   esi
6401a0ad:	mov    DWORD PTR [eax],0x16
6401a0b3:	push   esi
6401a0b4:	call   0x64013794
6401a0b9:	add    esp,0x14
6401a0bc:	cmp    BYTE PTR [ebp-0x58],0x0
6401a0c0:	je     0x6401a0c9
6401a0c2:	mov    eax,DWORD PTR [ebp-0x5c]
6401a0c5:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a0c9:	or     eax,0xffffffff
6401a0cc:	jmp    0x6401a9a0
6401a0d1:	mov    eax,DWORD PTR [ebp-0x30]
6401a0d4:	test   BYTE PTR [eax+0xc],0x40
6401a0d8:	jne    0x6401a182
6401a0de:	push   eax
6401a0df:	call   0x6401da7d
6401a0e4:	cmp    eax,0xffffffff
6401a0e7:	pop    ecx
6401a0e8:	je     0x6401a120
6401a0ea:	push   DWORD PTR [ebp-0x30]
6401a0ed:	call   0x6401da7d
6401a0f2:	cmp    eax,0xfffffffe
6401a0f5:	pop    ecx
6401a0f6:	je     0x6401a120
6401a0f8:	push   DWORD PTR [ebp-0x30]
6401a0fb:	call   0x6401da7d
6401a100:	push   DWORD PTR [ebp-0x30]
6401a103:	sar    eax,0x5
6401a106:	lea    esi,[eax*4+0x64034520]
6401a10d:	call   0x6401da7d
6401a112:	and    eax,0x1f
6401a115:	shl    eax,0x6
6401a118:	add    eax,DWORD PTR [esi]
6401a11a:	pop    ecx
6401a11b:	pop    ecx
6401a11c:	xor    esi,esi
6401a11e:	jmp    0x6401a125
6401a120:	mov    eax,0x6402f880
6401a125:	test   BYTE PTR [eax+0x24],0x7f
6401a129:	jne    0x6401a0a4
6401a12f:	push   DWORD PTR [ebp-0x30]
6401a132:	call   0x6401da7d
6401a137:	cmp    eax,0xffffffff
6401a13a:	pop    ecx
6401a13b:	je     0x6401a173
6401a13d:	push   DWORD PTR [ebp-0x30]
6401a140:	call   0x6401da7d
6401a145:	cmp    eax,0xfffffffe
6401a148:	pop    ecx
6401a149:	je     0x6401a173
6401a14b:	push   DWORD PTR [ebp-0x30]
6401a14e:	call   0x6401da7d
6401a153:	push   DWORD PTR [ebp-0x30]
6401a156:	sar    eax,0x5
6401a159:	lea    esi,[eax*4+0x64034520]
6401a160:	call   0x6401da7d
6401a165:	and    eax,0x1f
6401a168:	shl    eax,0x6
6401a16b:	add    eax,DWORD PTR [esi]
6401a16d:	pop    ecx
6401a16e:	pop    ecx
6401a16f:	xor    esi,esi
6401a171:	jmp    0x6401a178
6401a173:	mov    eax,0x6402f880
6401a178:	test   BYTE PTR [eax+0x24],0x80
6401a17c:	jne    0x6401a0a4
6401a182:	cmp    ebx,esi
6401a184:	je     0x6401a0a4
6401a18a:	mov    dl,BYTE PTR [ebx]
6401a18c:	xor    ecx,ecx
6401a18e:	test   dl,dl
6401a190:	mov    DWORD PTR [ebp-0x34],esi
6401a193:	mov    DWORD PTR [ebp-0x28],esi
6401a196:	mov    DWORD PTR [ebp-0x54],esi
6401a199:	mov    BYTE PTR [ebp-0x19],dl
6401a19c:	je     0x6401a990
6401a1a2:	inc    ebx
6401a1a3:	cmp    DWORD PTR [ebp-0x34],0x0
6401a1a7:	mov    DWORD PTR [ebp-0x48],ebx
6401a1aa:	jl     0x6401a990
6401a1b0:	mov    al,dl
6401a1b2:	sub    al,0x20
6401a1b4:	cmp    al,0x58
6401a1b6:	ja     0x6401a1c9
6401a1b8:	movsx  eax,dl
6401a1bb:	movzx  eax,BYTE PTR [eax+0x64026e10]
6401a1c2:	and    eax,0xf
6401a1c5:	xor    esi,esi
6401a1c7:	jmp    0x6401a1cd
6401a1c9:	xor    esi,esi
6401a1cb:	xor    eax,eax
6401a1cd:	movsx  eax,BYTE PTR [ecx+eax*8+0x64026e30]
6401a1d5:	push   0x7
6401a1d7:	sar    eax,0x4
6401a1da:	pop    ecx
6401a1db:	cmp    eax,ecx
6401a1dd:	mov    DWORD PTR [ebp-0x74],eax
6401a1e0:	ja     0x6401a960
6401a1e6:	jmp    DWORD PTR [eax*4+0x6401a9b8]
6401a1ed:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a1f1:	mov    DWORD PTR [ebp-0x78],esi
6401a1f4:	mov    DWORD PTR [ebp-0x50],esi
6401a1f7:	mov    DWORD PTR [ebp-0x40],esi
6401a1fa:	mov    DWORD PTR [ebp-0x3c],esi
6401a1fd:	mov    DWORD PTR [ebp-0x18],esi
6401a200:	mov    DWORD PTR [ebp-0x44],esi
6401a203:	jmp    0x6401a960
6401a208:	movsx  eax,dl
6401a20b:	sub    eax,0x20
6401a20e:	je     0x6401a24e
6401a210:	sub    eax,0x3
6401a213:	je     0x6401a242
6401a215:	sub    eax,0x8
6401a218:	je     0x6401a239
6401a21a:	dec    eax
6401a21b:	dec    eax
6401a21c:	je     0x6401a230
6401a21e:	sub    eax,0x3
6401a221:	jne    0x6401a960
6401a227:	or     DWORD PTR [ebp-0x18],0x8
6401a22b:	jmp    0x6401a960
6401a230:	or     DWORD PTR [ebp-0x18],0x4
6401a234:	jmp    0x6401a960
6401a239:	or     DWORD PTR [ebp-0x18],0x1
6401a23d:	jmp    0x6401a960
6401a242:	or     DWORD PTR [ebp-0x18],0x80
6401a249:	jmp    0x6401a960
6401a24e:	or     DWORD PTR [ebp-0x18],0x2
6401a252:	jmp    0x6401a960
6401a257:	cmp    dl,0x2a
6401a25a:	jne    0x6401a27c
6401a25c:	add    edi,0x4
6401a25f:	mov    DWORD PTR [ebp-0x2c],edi
6401a262:	mov    edi,DWORD PTR [edi-0x4]
6401a265:	cmp    edi,esi
6401a267:	mov    DWORD PTR [ebp-0x40],edi
6401a26a:	jge    0x6401a960
6401a270:	or     DWORD PTR [ebp-0x18],0x4
6401a274:	neg    DWORD PTR [ebp-0x40]
6401a277:	jmp    0x6401a960
6401a27c:	mov    eax,DWORD PTR [ebp-0x40]
6401a27f:	imul   eax,eax,0xa
6401a282:	movsx  ecx,dl
6401a285:	lea    eax,[eax+ecx*1-0x30]
6401a289:	mov    DWORD PTR [ebp-0x40],eax
6401a28c:	jmp    0x6401a960
6401a291:	mov    DWORD PTR [ebp-0x20],esi
6401a294:	jmp    0x6401a960
6401a299:	cmp    dl,0x2a
6401a29c:	jne    0x6401a2bb
6401a29e:	add    edi,0x4
6401a2a1:	mov    DWORD PTR [ebp-0x2c],edi
6401a2a4:	mov    edi,DWORD PTR [edi-0x4]
6401a2a7:	cmp    edi,esi
6401a2a9:	mov    DWORD PTR [ebp-0x20],edi
6401a2ac:	jge    0x6401a960
6401a2b2:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a2b6:	jmp    0x6401a960
6401a2bb:	mov    eax,DWORD PTR [ebp-0x20]
6401a2be:	imul   eax,eax,0xa
6401a2c1:	movsx  ecx,dl
6401a2c4:	lea    eax,[eax+ecx*1-0x30]
6401a2c8:	mov    DWORD PTR [ebp-0x20],eax
6401a2cb:	jmp    0x6401a960
6401a2d0:	cmp    dl,0x49
6401a2d3:	je     0x6401a31b
6401a2d5:	cmp    dl,0x68
6401a2d8:	je     0x6401a312
6401a2da:	cmp    dl,0x6c
6401a2dd:	je     0x6401a2f4
6401a2df:	cmp    dl,0x77
6401a2e2:	jne    0x6401a960
6401a2e8:	or     DWORD PTR [ebp-0x18],0x800
6401a2ef:	jmp    0x6401a960
6401a2f4:	cmp    BYTE PTR [ebx],0x6c
6401a2f7:	jne    0x6401a309
6401a2f9:	inc    ebx
6401a2fa:	or     DWORD PTR [ebp-0x18],0x1000
6401a301:	mov    DWORD PTR [ebp-0x48],ebx
6401a304:	jmp    0x6401a960
6401a309:	or     DWORD PTR [ebp-0x18],0x10
6401a30d:	jmp    0x6401a960
6401a312:	or     DWORD PTR [ebp-0x18],0x20
6401a316:	jmp    0x6401a960
6401a31b:	mov    al,BYTE PTR [ebx]
6401a31d:	cmp    al,0x36
6401a31f:	jne    0x6401a338
6401a321:	cmp    BYTE PTR [ebx+0x1],0x34
6401a325:	jne    0x6401a338
6401a327:	inc    ebx
6401a328:	inc    ebx
6401a329:	or     DWORD PTR [ebp-0x18],0x8000
6401a330:	mov    DWORD PTR [ebp-0x48],ebx
6401a333:	jmp    0x6401a960
6401a338:	cmp    al,0x33
6401a33a:	jne    0x6401a353
6401a33c:	cmp    BYTE PTR [ebx+0x1],0x32
6401a340:	jne    0x6401a353
6401a342:	inc    ebx
6401a343:	inc    ebx
6401a344:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401a34b:	mov    DWORD PTR [ebp-0x48],ebx
6401a34e:	jmp    0x6401a960
6401a353:	cmp    al,0x64
6401a355:	je     0x6401a960
6401a35b:	cmp    al,0x69
6401a35d:	je     0x6401a960
6401a363:	cmp    al,0x6f
6401a365:	je     0x6401a960
6401a36b:	cmp    al,0x75
6401a36d:	je     0x6401a960
6401a373:	cmp    al,0x78
6401a375:	je     0x6401a960
6401a37b:	cmp    al,0x58
6401a37d:	je     0x6401a960
6401a383:	mov    DWORD PTR [ebp-0x74],esi
6401a386:	lea    eax,[ebp-0x64]
6401a389:	push   eax
6401a38a:	movzx  eax,dl
6401a38d:	push   eax
6401a38e:	mov    DWORD PTR [ebp-0x44],esi
6401a391:	call   0x6401b060
6401a396:	pop    ecx
6401a397:	test   eax,eax
6401a399:	mov    al,BYTE PTR [ebp-0x19]
6401a39c:	pop    ecx
6401a39d:	je     0x6401a3b8
6401a39f:	mov    ecx,DWORD PTR [ebp-0x30]
6401a3a2:	lea    esi,[ebp-0x34]
6401a3a5:	call   0x6401ddc8
6401a3aa:	mov    al,BYTE PTR [ebx]
6401a3ac:	inc    ebx
6401a3ad:	test   al,al
6401a3af:	mov    DWORD PTR [ebp-0x48],ebx
6401a3b2:	je     0x6401a979
6401a3b8:	mov    ecx,DWORD PTR [ebp-0x30]
6401a3bb:	lea    esi,[ebp-0x34]
6401a3be:	call   0x6401ddc8
6401a3c3:	jmp    0x6401a960
6401a3c8:	movsx  eax,dl
6401a3cb:	cmp    eax,0x64
6401a3ce:	jg     0x6401a546
6401a3d4:	je     0x6401a5c5
6401a3da:	cmp    eax,0x53
6401a3dd:	jg     0x6401a48e
6401a3e3:	je     0x6401a43f
6401a3e5:	sub    eax,0x41
6401a3e8:	je     0x6401a3fa
6401a3ea:	dec    eax
6401a3eb:	dec    eax
6401a3ec:	je     0x6401a42e
6401a3ee:	dec    eax
6401a3ef:	dec    eax
6401a3f0:	je     0x6401a3fa
6401a3f2:	dec    eax
6401a3f3:	dec    eax
6401a3f4:	jne    0x6401a848
6401a3fa:	add    dl,0x20
6401a3fd:	mov    DWORD PTR [ebp-0x78],0x1
6401a404:	mov    BYTE PTR [ebp-0x19],dl
6401a407:	or     DWORD PTR [ebp-0x18],0x40
6401a40b:	cmp    DWORD PTR [ebp-0x20],esi
6401a40e:	lea    ebx,[ebp-0x14]
6401a411:	mov    eax,0x200
6401a416:	mov    DWORD PTR [ebp-0x24],ebx
6401a419:	mov    DWORD PTR [ebp-0x68],eax
6401a41c:	jge    0x6401a5e9
6401a422:	mov    DWORD PTR [ebp-0x20],0x6
6401a429:	jmp    0x6401a637
6401a42e:	test   WORD PTR [ebp-0x18],0x830
6401a434:	jne    0x6401a4ab
6401a436:	or     DWORD PTR [ebp-0x18],0x800
6401a43d:	jmp    0x6401a4ab
6401a43f:	test   WORD PTR [ebp-0x18],0x830
6401a445:	jne    0x6401a44e
6401a447:	or     DWORD PTR [ebp-0x18],0x800
6401a44e:	mov    ecx,DWORD PTR [ebp-0x20]
6401a451:	cmp    ecx,0xffffffff
6401a454:	jne    0x6401a45b
6401a456:	mov    ecx,0x7fffffff
6401a45b:	add    edi,0x4
6401a45e:	test   WORD PTR [ebp-0x18],0x810
6401a464:	mov    DWORD PTR [ebp-0x2c],edi
6401a467:	mov    edi,DWORD PTR [edi-0x4]
6401a46a:	mov    DWORD PTR [ebp-0x24],edi
6401a46d:	je     0x6401a826
6401a473:	cmp    edi,esi
6401a475:	jne    0x6401a47f
6401a477:	mov    eax,ds:0x6402f954
6401a47c:	mov    DWORD PTR [ebp-0x24],eax
6401a47f:	mov    eax,DWORD PTR [ebp-0x24]
6401a482:	mov    DWORD PTR [ebp-0x44],0x1
6401a489:	jmp    0x6401a81b
6401a48e:	sub    eax,0x58
6401a491:	je     0x6401a6d0
6401a497:	dec    eax
6401a498:	dec    eax
6401a499:	je     0x6401a4f8
6401a49b:	sub    eax,ecx
6401a49d:	je     0x6401a407
6401a4a3:	dec    eax
6401a4a4:	dec    eax
6401a4a5:	jne    0x6401a848
6401a4ab:	add    edi,0x4
6401a4ae:	test   WORD PTR [ebp-0x18],0x810
6401a4b4:	mov    DWORD PTR [ebp-0x2c],edi
6401a4b7:	je     0x6401a4e0
6401a4b9:	movzx  eax,WORD PTR [edi-0x4]
6401a4bd:	push   eax
6401a4be:	push   0x200
6401a4c3:	lea    eax,[ebp-0x14]
6401a4c6:	push   eax
6401a4c7:	lea    eax,[ebp-0x28]
6401a4ca:	push   eax
6401a4cb:	call   0x6401ec48
6401a4d0:	add    esp,0x10
6401a4d3:	test   eax,eax
6401a4d5:	je     0x6401a4ed
6401a4d7:	mov    DWORD PTR [ebp-0x50],0x1
6401a4de:	jmp    0x6401a4ed
6401a4e0:	mov    al,BYTE PTR [edi-0x4]
6401a4e3:	mov    BYTE PTR [ebp-0x14],al
6401a4e6:	mov    DWORD PTR [ebp-0x28],0x1
6401a4ed:	lea    eax,[ebp-0x14]
6401a4f0:	mov    DWORD PTR [ebp-0x24],eax
6401a4f3:	jmp    0x6401a848
6401a4f8:	mov    eax,DWORD PTR [edi]
6401a4fa:	add    edi,0x4
6401a4fd:	cmp    eax,esi
6401a4ff:	mov    DWORD PTR [ebp-0x2c],edi
6401a502:	je     0x6401a532
6401a504:	mov    ecx,DWORD PTR [eax+0x4]
6401a507:	cmp    ecx,esi
6401a509:	je     0x6401a532
6401a50b:	test   WORD PTR [ebp-0x18],0x800
6401a511:	movsx  eax,WORD PTR [eax]
6401a514:	mov    DWORD PTR [ebp-0x24],ecx
6401a517:	je     0x6401a52a
6401a519:	cdq    
6401a51a:	sub    eax,edx
6401a51c:	sar    eax,1
6401a51e:	mov    DWORD PTR [ebp-0x44],0x1
6401a525:	jmp    0x6401a845
6401a52a:	mov    DWORD PTR [ebp-0x44],esi
6401a52d:	jmp    0x6401a845
6401a532:	mov    eax,ds:0x6402f950
6401a537:	mov    DWORD PTR [ebp-0x24],eax
6401a53a:	push   eax
6401a53b:	call   0x64015420
6401a540:	pop    ecx
6401a541:	jmp    0x6401a845
6401a546:	cmp    eax,0x70
6401a549:	jg     0x6401a6d5
6401a54f:	je     0x6401a6c9
6401a555:	cmp    eax,0x65
6401a558:	jl     0x6401a848
6401a55e:	cmp    eax,0x67
6401a561:	jle    0x6401a407
6401a567:	cmp    eax,0x69
6401a56a:	je     0x6401a5c5
6401a56c:	cmp    eax,0x6e
6401a56f:	je     0x6401a590
6401a571:	cmp    eax,0x6f
6401a574:	jne    0x6401a848
6401a57a:	test   BYTE PTR [ebp-0x18],0x80
6401a57e:	mov    DWORD PTR [ebp-0x28],0x8
6401a585:	je     0x6401a5d0
6401a587:	or     DWORD PTR [ebp-0x18],0x200
6401a58e:	jmp    0x6401a5d0
6401a590:	mov    esi,DWORD PTR [edi]
6401a592:	add    edi,0x4
6401a595:	mov    DWORD PTR [ebp-0x2c],edi
6401a598:	call   0x6401dc88
6401a59d:	test   eax,eax
6401a59f:	je     0x6401a979
6401a5a5:	test   BYTE PTR [ebp-0x18],0x20
6401a5a9:	je     0x6401a5b4
6401a5ab:	mov    ax,WORD PTR [ebp-0x34]
6401a5af:	mov    WORD PTR [esi],ax
6401a5b2:	jmp    0x6401a5b9
6401a5b4:	mov    eax,DWORD PTR [ebp-0x34]
6401a5b7:	mov    DWORD PTR [esi],eax
6401a5b9:	mov    DWORD PTR [ebp-0x50],0x1
6401a5c0:	jmp    0x6401a94d
6401a5c5:	or     DWORD PTR [ebp-0x18],0x40
6401a5c9:	mov    DWORD PTR [ebp-0x28],0xa
6401a5d0:	mov    ecx,DWORD PTR [ebp-0x18]
6401a5d3:	test   cx,cx
6401a5d6:	jns    0x6401a71f
6401a5dc:	mov    eax,DWORD PTR [edi]
6401a5de:	mov    edx,DWORD PTR [edi+0x4]
6401a5e1:	add    edi,0x8
6401a5e4:	jmp    0x6401a754
6401a5e9:	jne    0x6401a5f9
6401a5eb:	cmp    dl,0x67
6401a5ee:	jne    0x6401a637
6401a5f0:	mov    DWORD PTR [ebp-0x20],0x1
6401a5f7:	jmp    0x6401a637
6401a5f9:	cmp    DWORD PTR [ebp-0x20],eax
6401a5fc:	jle    0x6401a601
6401a5fe:	mov    DWORD PTR [ebp-0x20],eax
6401a601:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a608:	jle    0x6401a637
6401a60a:	mov    esi,DWORD PTR [ebp-0x20]
6401a60d:	add    esi,0x15d
6401a613:	push   esi
6401a614:	call   0x64016f30
6401a619:	test   eax,eax
6401a61b:	mov    dl,BYTE PTR [ebp-0x19]
6401a61e:	pop    ecx
6401a61f:	mov    DWORD PTR [ebp-0x54],eax
6401a622:	je     0x6401a62e
6401a624:	mov    DWORD PTR [ebp-0x24],eax
6401a627:	mov    DWORD PTR [ebp-0x68],esi
6401a62a:	mov    ebx,eax
6401a62c:	jmp    0x6401a635
6401a62e:	mov    DWORD PTR [ebp-0x20],0xa3
6401a635:	xor    esi,esi
6401a637:	mov    eax,DWORD PTR [edi]
6401a639:	add    edi,0x8
6401a63c:	mov    DWORD PTR [ebp-0x80],eax
6401a63f:	mov    eax,DWORD PTR [edi-0x4]
6401a642:	mov    DWORD PTR [ebp-0x7c],eax
6401a645:	lea    eax,[ebp-0x64]
6401a648:	push   eax
6401a649:	push   DWORD PTR [ebp-0x78]
6401a64c:	movsx  eax,dl
6401a64f:	push   DWORD PTR [ebp-0x20]
6401a652:	mov    DWORD PTR [ebp-0x2c],edi
6401a655:	push   eax
6401a656:	push   DWORD PTR [ebp-0x68]
6401a659:	lea    eax,[ebp-0x80]
6401a65c:	push   ebx
6401a65d:	push   eax
6401a65e:	push   DWORD PTR ds:0x6402fb64
6401a664:	call   0x64015b4f
6401a669:	pop    ecx
6401a66a:	call   eax
6401a66c:	mov    edi,DWORD PTR [ebp-0x18]
6401a66f:	add    esp,0x1c
6401a672:	and    edi,0x80
6401a678:	je     0x6401a694
6401a67a:	cmp    DWORD PTR [ebp-0x20],esi
6401a67d:	jne    0x6401a694
6401a67f:	lea    eax,[ebp-0x64]
6401a682:	push   eax
6401a683:	push   ebx
6401a684:	push   DWORD PTR ds:0x6402fb70
6401a68a:	call   0x64015b4f
6401a68f:	pop    ecx
6401a690:	call   eax
6401a692:	pop    ecx
6401a693:	pop    ecx
6401a694:	cmp    BYTE PTR [ebp-0x19],0x67
6401a698:	jne    0x6401a6b3
6401a69a:	cmp    edi,esi
6401a69c:	jne    0x6401a6b3
6401a69e:	lea    eax,[ebp-0x64]
6401a6a1:	push   eax
6401a6a2:	push   ebx
6401a6a3:	push   DWORD PTR ds:0x6402fb6c
6401a6a9:	call   0x64015b4f
6401a6ae:	pop    ecx
6401a6af:	call   eax
6401a6b1:	pop    ecx
6401a6b2:	pop    ecx
6401a6b3:	cmp    BYTE PTR [ebx],0x2d
6401a6b6:	jne    0x6401a6c3
6401a6b8:	or     DWORD PTR [ebp-0x18],0x100
6401a6bf:	inc    ebx
6401a6c0:	mov    DWORD PTR [ebp-0x24],ebx
6401a6c3:	push   ebx
6401a6c4:	jmp    0x6401a53b
6401a6c9:	mov    DWORD PTR [ebp-0x20],0x8
6401a6d0:	mov    DWORD PTR [ebp-0x4c],ecx
6401a6d3:	jmp    0x6401a6f6
6401a6d5:	sub    eax,0x73
6401a6d8:	je     0x6401a44e
6401a6de:	dec    eax
6401a6df:	dec    eax
6401a6e0:	je     0x6401a5c9
6401a6e6:	sub    eax,0x3
6401a6e9:	jne    0x6401a848
6401a6ef:	mov    DWORD PTR [ebp-0x4c],0x27
6401a6f6:	test   BYTE PTR [ebp-0x18],0x80
6401a6fa:	mov    DWORD PTR [ebp-0x28],0x10
6401a701:	je     0x6401a5d0
6401a707:	mov    al,BYTE PTR [ebp-0x4c]
6401a70a:	add    al,0x51
6401a70c:	mov    BYTE PTR [ebp-0x38],0x30
6401a710:	mov    BYTE PTR [ebp-0x37],al
6401a713:	mov    DWORD PTR [ebp-0x3c],0x2
6401a71a:	jmp    0x6401a5d0
6401a71f:	test   cx,0x1000
6401a724:	jne    0x6401a5dc
6401a72a:	add    edi,0x4
6401a72d:	test   cl,0x20
6401a730:	je     0x6401a747
6401a732:	test   cl,0x40
6401a735:	mov    DWORD PTR [ebp-0x2c],edi
6401a738:	je     0x6401a740
6401a73a:	movsx  eax,WORD PTR [edi-0x4]
6401a73e:	jmp    0x6401a744
6401a740:	movzx  eax,WORD PTR [edi-0x4]
6401a744:	cdq    
6401a745:	jmp    0x6401a757
6401a747:	test   cl,0x40
6401a74a:	mov    eax,DWORD PTR [edi-0x4]
6401a74d:	je     0x6401a752
6401a74f:	cdq    
6401a750:	jmp    0x6401a754
6401a752:	xor    edx,edx
6401a754:	mov    DWORD PTR [ebp-0x2c],edi
6401a757:	test   cl,0x40
6401a75a:	je     0x6401a774
6401a75c:	cmp    edx,esi
6401a75e:	jg     0x6401a774
6401a760:	jl     0x6401a766
6401a762:	cmp    eax,esi
6401a764:	jae    0x6401a774
6401a766:	neg    eax
6401a768:	adc    edx,0x0
6401a76b:	neg    edx
6401a76d:	or     DWORD PTR [ebp-0x18],0x100
6401a774:	test   WORD PTR [ebp-0x18],0x9000
6401a77a:	mov    ebx,edx
6401a77c:	mov    edi,eax
6401a77e:	jne    0x6401a782
6401a780:	xor    ebx,ebx
6401a782:	cmp    DWORD PTR [ebp-0x20],0x0
6401a786:	jge    0x6401a791
6401a788:	mov    DWORD PTR [ebp-0x20],0x1
6401a78f:	jmp    0x6401a7a2
6401a791:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401a795:	mov    eax,0x200
6401a79a:	cmp    DWORD PTR [ebp-0x20],eax
6401a79d:	jle    0x6401a7a2
6401a79f:	mov    DWORD PTR [ebp-0x20],eax
6401a7a2:	mov    eax,edi
6401a7a4:	or     eax,ebx
6401a7a6:	jne    0x6401a7ab
6401a7a8:	and    DWORD PTR [ebp-0x3c],eax
6401a7ab:	lea    esi,[ebp+0x1eb]
6401a7b1:	mov    eax,DWORD PTR [ebp-0x20]
6401a7b4:	dec    DWORD PTR [ebp-0x20]
6401a7b7:	test   eax,eax
6401a7b9:	jg     0x6401a7c1
6401a7bb:	mov    eax,edi
6401a7bd:	or     eax,ebx
6401a7bf:	je     0x6401a7e5
6401a7c1:	mov    eax,DWORD PTR [ebp-0x28]
6401a7c4:	cdq    
6401a7c5:	push   edx
6401a7c6:	push   eax
6401a7c7:	push   ebx
6401a7c8:	push   edi
6401a7c9:	call   0x6401ab30
6401a7ce:	add    ecx,0x30
6401a7d1:	cmp    ecx,0x39
6401a7d4:	mov    DWORD PTR [ebp-0x68],ebx
6401a7d7:	mov    edi,eax
6401a7d9:	mov    ebx,edx
6401a7db:	jle    0x6401a7e0
6401a7dd:	add    ecx,DWORD PTR [ebp-0x4c]
6401a7e0:	mov    BYTE PTR [esi],cl
6401a7e2:	dec    esi
6401a7e3:	jmp    0x6401a7b1
6401a7e5:	lea    eax,[ebp+0x1eb]
6401a7eb:	sub    eax,esi
6401a7ed:	inc    esi
6401a7ee:	test   WORD PTR [ebp-0x18],0x200
6401a7f4:	mov    DWORD PTR [ebp-0x28],eax
6401a7f7:	mov    DWORD PTR [ebp-0x24],esi
6401a7fa:	je     0x6401a848
6401a7fc:	test   eax,eax
6401a7fe:	je     0x6401a807
6401a800:	mov    ecx,esi
6401a802:	cmp    BYTE PTR [ecx],0x30
6401a805:	je     0x6401a848
6401a807:	dec    DWORD PTR [ebp-0x24]
6401a80a:	mov    ecx,DWORD PTR [ebp-0x24]
6401a80d:	mov    BYTE PTR [ecx],0x30
6401a810:	inc    eax
6401a811:	jmp    0x6401a845
6401a813:	dec    ecx
6401a814:	cmp    WORD PTR [eax],si
6401a817:	je     0x6401a81f
6401a819:	inc    eax
6401a81a:	inc    eax
6401a81b:	cmp    ecx,esi
6401a81d:	jne    0x6401a813
6401a81f:	sub    eax,DWORD PTR [ebp-0x24]
6401a822:	sar    eax,1
6401a824:	jmp    0x6401a845
6401a826:	cmp    edi,esi
6401a828:	jne    0x6401a832
6401a82a:	mov    eax,ds:0x6402f950
6401a82f:	mov    DWORD PTR [ebp-0x24],eax
6401a832:	mov    eax,DWORD PTR [ebp-0x24]
6401a835:	jmp    0x6401a83e
6401a837:	dec    ecx
6401a838:	cmp    BYTE PTR [eax],0x0
6401a83b:	je     0x6401a842
6401a83d:	inc    eax
6401a83e:	cmp    ecx,esi
6401a840:	jne    0x6401a837
6401a842:	sub    eax,DWORD PTR [ebp-0x24]
6401a845:	mov    DWORD PTR [ebp-0x28],eax
6401a848:	cmp    DWORD PTR [ebp-0x50],0x0
6401a84c:	jne    0x6401a94d
6401a852:	mov    eax,DWORD PTR [ebp-0x18]
6401a855:	test   al,0x40
6401a857:	je     0x6401a87e
6401a859:	test   ax,0x100
6401a85d:	je     0x6401a865
6401a85f:	mov    BYTE PTR [ebp-0x38],0x2d
6401a863:	jmp    0x6401a877
6401a865:	test   al,0x1
6401a867:	je     0x6401a86f
6401a869:	mov    BYTE PTR [ebp-0x38],0x2b
6401a86d:	jmp    0x6401a877
6401a86f:	test   al,0x2
6401a871:	je     0x6401a87e
6401a873:	mov    BYTE PTR [ebp-0x38],0x20
6401a877:	mov    DWORD PTR [ebp-0x3c],0x1
6401a87e:	mov    ebx,DWORD PTR [ebp-0x40]
6401a881:	sub    ebx,DWORD PTR [ebp-0x28]
6401a884:	sub    ebx,DWORD PTR [ebp-0x3c]
6401a887:	test   BYTE PTR [ebp-0x18],0xc
6401a88b:	jne    0x6401a89e
6401a88d:	push   DWORD PTR [ebp-0x30]
6401a890:	lea    eax,[ebp-0x34]
6401a893:	push   ebx
6401a894:	push   0x20
6401a896:	call   0x6401ddfb
6401a89b:	add    esp,0xc
6401a89e:	push   DWORD PTR [ebp-0x3c]
6401a8a1:	mov    edi,DWORD PTR [ebp-0x30]
6401a8a4:	lea    eax,[ebp-0x34]
6401a8a7:	lea    ecx,[ebp-0x38]
6401a8aa:	call   0x64019ffa
6401a8af:	test   BYTE PTR [ebp-0x18],0x8
6401a8b3:	pop    ecx
6401a8b4:	je     0x6401a8cb
6401a8b6:	test   BYTE PTR [ebp-0x18],0x4
6401a8ba:	jne    0x6401a8cb
6401a8bc:	push   edi
6401a8bd:	push   ebx
6401a8be:	push   0x30
6401a8c0:	lea    eax,[ebp-0x34]
6401a8c3:	call   0x6401ddfb
6401a8c8:	add    esp,0xc
6401a8cb:	cmp    DWORD PTR [ebp-0x44],0x0
6401a8cf:	mov    eax,DWORD PTR [ebp-0x28]
6401a8d2:	je     0x6401a925
6401a8d4:	test   eax,eax
6401a8d6:	jle    0x6401a925
6401a8d8:	mov    esi,DWORD PTR [ebp-0x24]
6401a8db:	mov    DWORD PTR [ebp-0x68],eax
6401a8de:	movzx  eax,WORD PTR [esi]
6401a8e1:	dec    DWORD PTR [ebp-0x68]
6401a8e4:	push   eax
6401a8e5:	push   0x6
6401a8e7:	lea    eax,[ebp+0x1ec]
6401a8ed:	push   eax
6401a8ee:	lea    eax,[ebp-0x70]
6401a8f1:	inc    esi
6401a8f2:	push   eax
6401a8f3:	inc    esi
6401a8f4:	call   0x6401ec48
6401a8f9:	add    esp,0x10
6401a8fc:	test   eax,eax
6401a8fe:	jne    0x6401a91f
6401a900:	cmp    DWORD PTR [ebp-0x70],eax
6401a903:	je     0x6401a91f
6401a905:	push   DWORD PTR [ebp-0x70]
6401a908:	lea    eax,[ebp-0x34]
6401a90b:	lea    ecx,[ebp+0x1ec]
6401a911:	call   0x64019ffa
6401a916:	cmp    DWORD PTR [ebp-0x68],0x0
6401a91a:	pop    ecx
6401a91b:	jne    0x6401a8de
6401a91d:	jmp    0x6401a932
6401a91f:	or     DWORD PTR [ebp-0x34],0xffffffff
6401a923:	jmp    0x6401a932
6401a925:	mov    ecx,DWORD PTR [ebp-0x24]
6401a928:	push   eax
6401a929:	lea    eax,[ebp-0x34]
6401a92c:	call   0x64019ffa
6401a931:	pop    ecx
6401a932:	cmp    DWORD PTR [ebp-0x34],0x0
6401a936:	jl     0x6401a94d
6401a938:	test   BYTE PTR [ebp-0x18],0x4
6401a93c:	je     0x6401a94d
6401a93e:	push   edi
6401a93f:	push   ebx
6401a940:	push   0x20
6401a942:	lea    eax,[ebp-0x34]
6401a945:	call   0x6401ddfb
6401a94a:	add    esp,0xc
6401a94d:	cmp    DWORD PTR [ebp-0x54],0x0
6401a951:	je     0x6401a960
6401a953:	push   DWORD PTR [ebp-0x54]
6401a956:	call   0x64014af6
6401a95b:	and    DWORD PTR [ebp-0x54],0x0
6401a95f:	pop    ecx
6401a960:	mov    ebx,DWORD PTR [ebp-0x48]
6401a963:	mov    al,BYTE PTR [ebx]
6401a965:	test   al,al
6401a967:	mov    BYTE PTR [ebp-0x19],al
6401a96a:	je     0x6401a990
6401a96c:	mov    ecx,DWORD PTR [ebp-0x74]
6401a96f:	mov    edi,DWORD PTR [ebp-0x2c]
6401a972:	mov    dl,al
6401a974:	jmp    0x6401a1a2
6401a979:	call   0x64015a20
6401a97e:	mov    DWORD PTR [eax],0x16
6401a984:	xor    eax,eax
6401a986:	push   eax
6401a987:	push   eax
6401a988:	push   eax
6401a989:	push   eax
6401a98a:	push   eax
6401a98b:	jmp    0x6401a0b4
6401a990:	cmp    BYTE PTR [ebp-0x58],0x0
6401a994:	je     0x6401a99d
6401a996:	mov    eax,DWORD PTR [ebp-0x5c]
6401a999:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a99d:	mov    eax,DWORD PTR [ebp-0x34]
6401a9a0:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401a9a6:	pop    edi
6401a9a7:	pop    esi
6401a9a8:	xor    ecx,ebp
6401a9aa:	pop    ebx
6401a9ab:	call   0x64013c5c
6401a9b0:	add    ebp,0x1f8
6401a9b6:	leave  
6401a9b7:	ret    
6401a9b8:	xchg   BYTE PTR [ebx-0x5e129bff],ah
6401a9be:	add    DWORD PTR [eax+ecx*1-0x5e],esp
6401a9c2:	add    DWORD PTR [edi+edx*2-0x5e],esp
6401a9c6:	add    DWORD PTR [ecx+edx*4-0x5e],esp
6401a9ca:	add    DWORD PTR [ecx+ebx*4-0x5e],esp
6401a9ce:	add    DWORD PTR [eax+edx*8-0x5e],esp
6401a9d2:	add    DWORD PTR [eax+ecx*8-0x5d],esp
6401a9d6:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401a9da:	in     al,dx
6401a9db:	sub    esp,0x20
6401a9de:	push   ebx
6401a9df:	xor    ebx,ebx
6401a9e1:	cmp    DWORD PTR [ebp+0x14],ebx
6401a9e4:	jne    0x6401aa06
6401a9e6:	call   0x64015a20
6401a9eb:	push   ebx
6401a9ec:	push   ebx
6401a9ed:	push   ebx
6401a9ee:	push   ebx
6401a9ef:	push   ebx
6401a9f0:	mov    DWORD PTR [eax],0x16
6401a9f6:	call   0x64013794
6401a9fb:	add    esp,0x14
6401a9fe:	or     eax,0xffffffff
6401aa01:	jmp    0x6401aa9f
6401aa06:	push   esi
6401aa07:	mov    esi,DWORD PTR [ebp+0xc]
6401aa0a:	push   edi
6401aa0b:	mov    edi,DWORD PTR [ebp+0x10]
6401aa0e:	cmp    edi,ebx
6401aa10:	je     0x6401aa33
6401aa12:	cmp    esi,ebx
6401aa14:	jne    0x6401aa33
6401aa16:	call   0x64015a20
6401aa1b:	push   ebx
6401aa1c:	push   ebx
6401aa1d:	push   ebx
6401aa1e:	push   ebx
6401aa1f:	push   ebx
6401aa20:	mov    DWORD PTR [eax],0x16
6401aa26:	call   0x64013794
6401aa2b:	add    esp,0x14
6401aa2e:	or     eax,0xffffffff
6401aa31:	jmp    0x6401aa9d
6401aa33:	mov    eax,0x7fffffff
6401aa38:	cmp    edi,eax
6401aa3a:	mov    DWORD PTR [ebp-0x1c],eax
6401aa3d:	ja     0x6401aa42
6401aa3f:	mov    DWORD PTR [ebp-0x1c],edi
6401aa42:	push   DWORD PTR [ebp+0x1c]
6401aa45:	lea    eax,[ebp-0x20]
6401aa48:	push   DWORD PTR [ebp+0x18]
6401aa4b:	mov    DWORD PTR [ebp-0x14],0x42
6401aa52:	push   DWORD PTR [ebp+0x14]
6401aa55:	mov    DWORD PTR [ebp-0x18],esi
6401aa58:	push   eax
6401aa59:	mov    DWORD PTR [ebp-0x20],esi
6401aa5c:	call   DWORD PTR [ebp+0x8]
6401aa5f:	add    esp,0x10
6401aa62:	cmp    esi,ebx
6401aa64:	mov    DWORD PTR [ebp+0x14],eax
6401aa67:	je     0x6401aa9d
6401aa69:	cmp    eax,ebx
6401aa6b:	jl     0x6401aa8f
6401aa6d:	dec    DWORD PTR [ebp-0x1c]
6401aa70:	js     0x6401aa79
6401aa72:	mov    eax,DWORD PTR [ebp-0x20]
6401aa75:	mov    BYTE PTR [eax],bl
6401aa77:	jmp    0x6401aa8a
6401aa79:	lea    eax,[ebp-0x20]
6401aa7c:	push   eax
6401aa7d:	push   ebx
6401aa7e:	call   0x64017d65
6401aa83:	cmp    eax,0xffffffff
6401aa86:	pop    ecx
6401aa87:	pop    ecx
6401aa88:	je     0x6401aa8f
6401aa8a:	mov    eax,DWORD PTR [ebp+0x14]
6401aa8d:	jmp    0x6401aa9d
6401aa8f:	xor    eax,eax
6401aa91:	cmp    DWORD PTR [ebp-0x1c],ebx
6401aa94:	mov    BYTE PTR [esi+edi*1-0x1],bl
6401aa98:	setge  al
6401aa9b:	dec    eax
6401aa9c:	dec    eax
6401aa9d:	pop    edi
6401aa9e:	pop    esi
6401aa9f:	pop    ebx
6401aaa0:	leave  
6401aaa1:	ret    
6401aaa2:	push   ebp
6401aaa3:	mov    ebp,esp
6401aaa5:	push   ebx
6401aaa6:	xor    ebx,ebx
6401aaa8:	cmp    DWORD PTR [ebp+0x10],ebx
6401aaab:	jne    0x6401aaca
6401aaad:	call   0x64015a20
6401aab2:	push   ebx
6401aab3:	push   ebx
6401aab4:	push   ebx
6401aab5:	push   ebx
6401aab6:	push   ebx
6401aab7:	mov    DWORD PTR [eax],0x16
6401aabd:	call   0x64013794
6401aac2:	add    esp,0x14
6401aac5:	or     eax,0xffffffff
6401aac8:	jmp    0x6401ab25
6401aaca:	push   esi
6401aacb:	mov    esi,DWORD PTR [ebp+0x8]
6401aace:	cmp    esi,ebx
6401aad0:	je     0x6401aad7
6401aad2:	cmp    DWORD PTR [ebp+0xc],ebx
6401aad5:	ja     0x6401aae4
6401aad7:	call   0x64015a20
6401aadc:	mov    DWORD PTR [eax],0x16
6401aae2:	jmp    0x6401ab14
6401aae4:	push   DWORD PTR [ebp+0x18]
6401aae7:	push   DWORD PTR [ebp+0x14]
6401aaea:	push   DWORD PTR [ebp+0x10]
6401aaed:	push   DWORD PTR [ebp+0xc]
6401aaf0:	push   esi
6401aaf1:	push   0x6401de1f
6401aaf6:	call   0x6401a9d8
6401aafb:	add    esp,0x18
6401aafe:	cmp    eax,ebx
6401ab00:	jge    0x6401ab04
6401ab02:	mov    BYTE PTR [esi],bl
6401ab04:	cmp    eax,0xfffffffe
6401ab07:	jne    0x6401ab24
6401ab09:	call   0x64015a20
6401ab0e:	mov    DWORD PTR [eax],0x22
6401ab14:	push   ebx
6401ab15:	push   ebx
6401ab16:	push   ebx
6401ab17:	push   ebx
6401ab18:	push   ebx
6401ab19:	call   0x64013794
6401ab1e:	add    esp,0x14
6401ab21:	or     eax,0xffffffff
6401ab24:	pop    esi
6401ab25:	pop    ebx
6401ab26:	pop    ebp
6401ab27:	ret    
6401ab28:	int3   
6401ab29:	int3   
6401ab2a:	int3   
6401ab2b:	int3   
6401ab2c:	int3   
6401ab2d:	int3   
6401ab2e:	int3   
6401ab2f:	int3   
6401ab30:	push   esi
6401ab31:	mov    eax,DWORD PTR [esp+0x14]
6401ab35:	or     eax,eax
6401ab37:	jne    0x6401ab61
6401ab39:	mov    ecx,DWORD PTR [esp+0x10]
6401ab3d:	mov    eax,DWORD PTR [esp+0xc]
6401ab41:	xor    edx,edx
6401ab43:	div    ecx
6401ab45:	mov    ebx,eax
6401ab47:	mov    eax,DWORD PTR [esp+0x8]
6401ab4b:	div    ecx
6401ab4d:	mov    esi,eax
6401ab4f:	mov    eax,ebx
6401ab51:	mul    DWORD PTR [esp+0x10]
6401ab55:	mov    ecx,eax
6401ab57:	mov    eax,esi
6401ab59:	mul    DWORD PTR [esp+0x10]
6401ab5d:	add    edx,ecx
6401ab5f:	jmp    0x6401aba8
6401ab61:	mov    ecx,eax
6401ab63:	mov    ebx,DWORD PTR [esp+0x10]
6401ab67:	mov    edx,DWORD PTR [esp+0xc]
6401ab6b:	mov    eax,DWORD PTR [esp+0x8]
6401ab6f:	shr    ecx,1
6401ab71:	rcr    ebx,1
6401ab73:	shr    edx,1
6401ab75:	rcr    eax,1
6401ab77:	or     ecx,ecx
6401ab79:	jne    0x6401ab6f
6401ab7b:	div    ebx
6401ab7d:	mov    esi,eax
6401ab7f:	mul    DWORD PTR [esp+0x14]
6401ab83:	mov    ecx,eax
6401ab85:	mov    eax,DWORD PTR [esp+0x10]
6401ab89:	mul    esi
6401ab8b:	add    edx,ecx
6401ab8d:	jb     0x6401ab9d
6401ab8f:	cmp    edx,DWORD PTR [esp+0xc]
6401ab93:	ja     0x6401ab9d
6401ab95:	jb     0x6401aba6
6401ab97:	cmp    eax,DWORD PTR [esp+0x8]
6401ab9b:	jbe    0x6401aba6
6401ab9d:	dec    esi
6401ab9e:	sub    eax,DWORD PTR [esp+0x10]
6401aba2:	sbb    edx,DWORD PTR [esp+0x14]
6401aba6:	xor    ebx,ebx
6401aba8:	sub    eax,DWORD PTR [esp+0x8]
6401abac:	sbb    edx,DWORD PTR [esp+0xc]
6401abb0:	neg    edx
6401abb2:	neg    eax
6401abb4:	sbb    edx,0x0
6401abb7:	mov    ecx,edx
6401abb9:	mov    edx,ebx
6401abbb:	mov    ebx,ecx
6401abbd:	mov    ecx,eax
6401abbf:	mov    eax,esi
6401abc1:	pop    esi
6401abc2:	ret    0x10
6401abc5:	push   ebp
6401abc6:	mov    ebp,esp
6401abc8:	sub    esp,0x18
6401abcb:	push   ebx
6401abcc:	push   DWORD PTR [ebp+0x10]
6401abcf:	lea    ecx,[ebp-0x18]
6401abd2:	call   0x64013dff
6401abd7:	mov    ebx,DWORD PTR [ebp+0x8]
6401abda:	lea    eax,[ebx+0x1]
6401abdd:	cmp    eax,0x100
6401abe2:	ja     0x6401abf3
6401abe4:	mov    eax,DWORD PTR [ebp-0x18]
6401abe7:	mov    eax,DWORD PTR [eax+0xc8]
6401abed:	movzx  eax,WORD PTR [eax+ebx*2]
6401abf1:	jmp    0x6401ac68
6401abf3:	mov    DWORD PTR [ebp+0x8],ebx
6401abf6:	sar    DWORD PTR [ebp+0x8],0x8
6401abfa:	lea    eax,[ebp-0x18]
6401abfd:	push   eax
6401abfe:	mov    eax,DWORD PTR [ebp+0x8]
6401ac01:	and    eax,0xff
6401ac06:	push   eax
6401ac07:	call   0x6401b060
6401ac0c:	test   eax,eax
6401ac0e:	pop    ecx
6401ac0f:	pop    ecx
6401ac10:	je     0x6401ac24
6401ac12:	mov    al,BYTE PTR [ebp+0x8]
6401ac15:	push   0x2
6401ac17:	mov    BYTE PTR [ebp-0x8],al
6401ac1a:	mov    BYTE PTR [ebp-0x7],bl
6401ac1d:	mov    BYTE PTR [ebp-0x6],0x0
6401ac21:	pop    ecx
6401ac22:	jmp    0x6401ac2e
6401ac24:	xor    ecx,ecx
6401ac26:	mov    BYTE PTR [ebp-0x8],bl
6401ac29:	mov    BYTE PTR [ebp-0x7],0x0
6401ac2d:	inc    ecx
6401ac2e:	mov    eax,DWORD PTR [ebp-0x18]
6401ac31:	push   0x1
6401ac33:	push   DWORD PTR [eax+0x14]
6401ac36:	push   DWORD PTR [eax+0x4]
6401ac39:	lea    eax,[ebp-0x4]
6401ac3c:	push   eax
6401ac3d:	push   ecx
6401ac3e:	lea    eax,[ebp-0x8]
6401ac41:	push   eax
6401ac42:	lea    eax,[ebp-0x18]
6401ac45:	push   0x1
6401ac47:	push   eax
6401ac48:	call   0x6401cb55
6401ac4d:	add    esp,0x20
6401ac50:	test   eax,eax
6401ac52:	jne    0x6401ac64
6401ac54:	cmp    BYTE PTR [ebp-0xc],al
6401ac57:	je     0x6401ac60
6401ac59:	mov    eax,DWORD PTR [ebp-0x10]
6401ac5c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ac60:	xor    eax,eax
6401ac62:	jmp    0x6401ac78
6401ac64:	movzx  eax,WORD PTR [ebp-0x4]
6401ac68:	and    eax,DWORD PTR [ebp+0xc]
6401ac6b:	cmp    BYTE PTR [ebp-0xc],0x0
6401ac6f:	je     0x6401ac78
6401ac71:	mov    ecx,DWORD PTR [ebp-0x10]
6401ac74:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ac78:	pop    ebx
6401ac79:	leave  
6401ac7a:	ret    
6401ac7b:	push   ebp
6401ac7c:	mov    ebp,esp
6401ac7e:	sub    esp,0x14
6401ac81:	mov    eax,ds:0x6402f09c
6401ac86:	xor    eax,ebp
6401ac88:	mov    DWORD PTR [ebp-0x4],eax
6401ac8b:	push   ebx
6401ac8c:	push   esi
6401ac8d:	xor    ebx,ebx
6401ac8f:	cmp    DWORD PTR ds:0x64030a70,ebx
6401ac95:	push   edi
6401ac96:	mov    esi,ecx
6401ac98:	jne    0x6401acd2
6401ac9a:	push   ebx
6401ac9b:	push   ebx
6401ac9c:	xor    edi,edi
6401ac9e:	inc    edi
6401ac9f:	push   edi
6401aca0:	push   0x640286dc
6401aca5:	push   0x100
6401acaa:	push   ebx
6401acab:	call   DWORD PTR ds:0x64026150
6401acb1:	test   eax,eax
6401acb3:	je     0x6401acbd
6401acb5:	mov    DWORD PTR ds:0x64030a70,edi
6401acbb:	jmp    0x6401acd2
6401acbd:	call   DWORD PTR ds:0x64026044
6401acc3:	cmp    eax,0x78
6401acc6:	jne    0x6401acd2
6401acc8:	mov    DWORD PTR ds:0x64030a70,0x2
6401acd2:	cmp    DWORD PTR [ebp+0x14],ebx
6401acd5:	jle    0x6401acf9
6401acd7:	mov    ecx,DWORD PTR [ebp+0x14]
6401acda:	mov    eax,DWORD PTR [ebp+0x10]
6401acdd:	dec    ecx
6401acde:	cmp    BYTE PTR [eax],bl
6401ace0:	je     0x6401acea
6401ace2:	inc    eax
6401ace3:	cmp    ecx,ebx
6401ace5:	jne    0x6401acdd
6401ace7:	or     ecx,0xffffffff
6401acea:	mov    eax,DWORD PTR [ebp+0x14]
6401aced:	sub    eax,ecx
6401acef:	dec    eax
6401acf0:	cmp    eax,DWORD PTR [ebp+0x14]
6401acf3:	jge    0x6401acf6
6401acf5:	inc    eax
6401acf6:	mov    DWORD PTR [ebp+0x14],eax
6401acf9:	mov    eax,ds:0x64030a70
6401acfe:	cmp    eax,0x2
6401ad01:	je     0x6401aeb2
6401ad07:	cmp    eax,ebx
6401ad09:	je     0x6401aeb2
6401ad0f:	cmp    eax,0x1
6401ad12:	jne    0x6401aee3
6401ad18:	cmp    DWORD PTR [ebp+0x20],ebx
6401ad1b:	mov    DWORD PTR [ebp-0x8],ebx
6401ad1e:	jne    0x6401ad28
6401ad20:	mov    eax,DWORD PTR [esi]
6401ad22:	mov    eax,DWORD PTR [eax+0x4]
6401ad25:	mov    DWORD PTR [ebp+0x20],eax
6401ad28:	mov    esi,DWORD PTR ds:0x64026024
6401ad2e:	xor    eax,eax
6401ad30:	cmp    DWORD PTR [ebp+0x24],ebx
6401ad33:	push   ebx
6401ad34:	push   ebx
6401ad35:	push   DWORD PTR [ebp+0x14]
6401ad38:	setne  al
6401ad3b:	push   DWORD PTR [ebp+0x10]
6401ad3e:	lea    eax,[eax*8+0x1]
6401ad45:	push   eax
6401ad46:	push   DWORD PTR [ebp+0x20]
6401ad49:	call   esi
6401ad4b:	mov    edi,eax
6401ad4d:	cmp    edi,ebx
6401ad4f:	je     0x6401aee3
6401ad55:	jle    0x6401ad9a
6401ad57:	push   0xffffffe0
6401ad59:	xor    edx,edx
6401ad5b:	pop    eax
6401ad5c:	div    edi
6401ad5e:	cmp    eax,0x2
6401ad61:	jb     0x6401ad9a
6401ad63:	lea    eax,[edi+edi*1+0x8]
6401ad67:	cmp    eax,0x400
6401ad6c:	ja     0x6401ad81
6401ad6e:	call   0x640143e0
6401ad73:	mov    eax,esp
6401ad75:	cmp    eax,ebx
6401ad77:	je     0x6401ad95
6401ad79:	mov    DWORD PTR [eax],0xcccc
6401ad7f:	jmp    0x6401ad92
6401ad81:	push   eax
6401ad82:	call   0x64014bd3
6401ad87:	cmp    eax,ebx
6401ad89:	pop    ecx
6401ad8a:	je     0x6401ad95
6401ad8c:	mov    DWORD PTR [eax],0xdddd
6401ad92:	add    eax,0x8
6401ad95:	mov    DWORD PTR [ebp-0xc],eax
6401ad98:	jmp    0x6401ad9d
6401ad9a:	mov    DWORD PTR [ebp-0xc],ebx
6401ad9d:	cmp    DWORD PTR [ebp-0xc],ebx
6401ada0:	je     0x6401aee3
6401ada6:	push   edi
6401ada7:	push   DWORD PTR [ebp-0xc]
6401adaa:	push   DWORD PTR [ebp+0x14]
6401adad:	push   DWORD PTR [ebp+0x10]
6401adb0:	push   0x1
6401adb2:	push   DWORD PTR [ebp+0x20]
6401adb5:	call   esi
6401adb7:	test   eax,eax
6401adb9:	je     0x6401aea1
6401adbf:	mov    esi,DWORD PTR ds:0x64026150
6401adc5:	push   ebx
6401adc6:	push   ebx
6401adc7:	push   edi
6401adc8:	push   DWORD PTR [ebp-0xc]
6401adcb:	push   DWORD PTR [ebp+0xc]
6401adce:	push   DWORD PTR [ebp+0x8]
6401add1:	call   esi
6401add3:	mov    ecx,eax
6401add5:	cmp    ecx,ebx
6401add7:	mov    DWORD PTR [ebp-0x8],ecx
6401adda:	je     0x6401aea1
6401ade0:	test   WORD PTR [ebp+0xc],0x400
6401ade6:	je     0x6401ae11
6401ade8:	cmp    DWORD PTR [ebp+0x1c],ebx
6401adeb:	je     0x6401aea1
6401adf1:	cmp    ecx,DWORD PTR [ebp+0x1c]
6401adf4:	jg     0x6401aea1
6401adfa:	push   DWORD PTR [ebp+0x1c]
6401adfd:	push   DWORD PTR [ebp+0x18]
6401ae00:	push   edi
6401ae01:	push   DWORD PTR [ebp-0xc]
6401ae04:	push   DWORD PTR [ebp+0xc]
6401ae07:	push   DWORD PTR [ebp+0x8]
6401ae0a:	call   esi
6401ae0c:	jmp    0x6401aea1
6401ae11:	cmp    ecx,ebx
6401ae13:	jle    0x6401ae5a
6401ae15:	push   0xffffffe0
6401ae17:	xor    edx,edx
6401ae19:	pop    eax
6401ae1a:	div    ecx
6401ae1c:	cmp    eax,0x2
6401ae1f:	jb     0x6401ae5a
6401ae21:	lea    eax,[ecx+ecx*1+0x8]
6401ae25:	cmp    eax,0x400
6401ae2a:	ja     0x6401ae42
6401ae2c:	call   0x640143e0
6401ae31:	mov    esi,esp
6401ae33:	cmp    esi,ebx
6401ae35:	je     0x6401aea1
6401ae37:	mov    DWORD PTR [esi],0xcccc
6401ae3d:	add    esi,0x8
6401ae40:	jmp    0x6401ae5c
6401ae42:	push   eax
6401ae43:	call   0x64014bd3
6401ae48:	cmp    eax,ebx
6401ae4a:	pop    ecx
6401ae4b:	je     0x6401ae56
6401ae4d:	mov    DWORD PTR [eax],0xdddd
6401ae53:	add    eax,0x8
6401ae56:	mov    esi,eax
6401ae58:	jmp    0x6401ae5c
6401ae5a:	xor    esi,esi
6401ae5c:	cmp    esi,ebx
6401ae5e:	je     0x6401aea1
6401ae60:	push   DWORD PTR [ebp-0x8]
6401ae63:	push   esi
6401ae64:	push   edi
6401ae65:	push   DWORD PTR [ebp-0xc]
6401ae68:	push   DWORD PTR [ebp+0xc]
6401ae6b:	push   DWORD PTR [ebp+0x8]
6401ae6e:	call   DWORD PTR ds:0x64026150
6401ae74:	test   eax,eax
6401ae76:	je     0x6401ae9a
6401ae78:	cmp    DWORD PTR [ebp+0x1c],ebx
6401ae7b:	push   ebx
6401ae7c:	push   ebx
6401ae7d:	jne    0x6401ae83
6401ae7f:	push   ebx
6401ae80:	push   ebx
6401ae81:	jmp    0x6401ae89
6401ae83:	push   DWORD PTR [ebp+0x1c]
6401ae86:	push   DWORD PTR [ebp+0x18]
6401ae89:	push   DWORD PTR [ebp-0x8]
6401ae8c:	push   esi
6401ae8d:	push   ebx
6401ae8e:	push   DWORD PTR [ebp+0x20]
6401ae91:	call   DWORD PTR ds:0x64026028
6401ae97:	mov    DWORD PTR [ebp-0x8],eax
6401ae9a:	push   esi
6401ae9b:	call   0x6401416c
6401aea0:	pop    ecx
6401aea1:	push   DWORD PTR [ebp-0xc]
6401aea4:	call   0x6401416c
6401aea9:	mov    eax,DWORD PTR [ebp-0x8]
6401aeac:	pop    ecx
6401aead:	jmp    0x6401b00b
6401aeb2:	cmp    DWORD PTR [ebp+0x8],ebx
6401aeb5:	mov    DWORD PTR [ebp-0xc],ebx
6401aeb8:	mov    DWORD PTR [ebp-0x10],ebx
6401aebb:	jne    0x6401aec5
6401aebd:	mov    eax,DWORD PTR [esi]
6401aebf:	mov    eax,DWORD PTR [eax+0x14]
6401aec2:	mov    DWORD PTR [ebp+0x8],eax
6401aec5:	cmp    DWORD PTR [ebp+0x20],ebx
6401aec8:	jne    0x6401aed2
6401aeca:	mov    eax,DWORD PTR [esi]
6401aecc:	mov    eax,DWORD PTR [eax+0x4]
6401aecf:	mov    DWORD PTR [ebp+0x20],eax
6401aed2:	push   DWORD PTR [ebp+0x8]
6401aed5:	call   0x6401e7cf
6401aeda:	cmp    eax,0xffffffff
6401aedd:	pop    ecx
6401aede:	mov    DWORD PTR [ebp-0x14],eax
6401aee1:	jne    0x6401aeea
6401aee3:	xor    eax,eax
6401aee5:	jmp    0x6401b00b
6401aeea:	cmp    eax,DWORD PTR [ebp+0x20]
6401aeed:	je     0x6401afce
6401aef3:	push   ebx
6401aef4:	push   ebx
6401aef5:	lea    ecx,[ebp+0x14]
6401aef8:	push   ecx
6401aef9:	push   DWORD PTR [ebp+0x10]
6401aefc:	push   eax
6401aefd:	push   DWORD PTR [ebp+0x20]
6401af00:	call   0x6401e816
6401af05:	add    esp,0x18
6401af08:	cmp    eax,ebx
6401af0a:	mov    DWORD PTR [ebp-0xc],eax
6401af0d:	je     0x6401aee3
6401af0f:	mov    esi,DWORD PTR ds:0x6402614c
6401af15:	push   ebx
6401af16:	push   ebx
6401af17:	push   DWORD PTR [ebp+0x14]
6401af1a:	push   eax
6401af1b:	push   DWORD PTR [ebp+0xc]
6401af1e:	push   DWORD PTR [ebp+0x8]
6401af21:	call   esi
6401af23:	cmp    eax,ebx
6401af25:	mov    DWORD PTR [ebp-0x8],eax
6401af28:	jne    0x6401af31
6401af2a:	xor    esi,esi
6401af2c:	jmp    0x6401afe8
6401af31:	jle    0x6401af70
6401af33:	cmp    eax,0xffffffe0
6401af36:	ja     0x6401af70
6401af38:	add    eax,0x8
6401af3b:	cmp    eax,0x400
6401af40:	ja     0x6401af58
6401af42:	call   0x640143e0
6401af47:	mov    edi,esp
6401af49:	cmp    edi,ebx
6401af4b:	je     0x6401af2a
6401af4d:	mov    DWORD PTR [edi],0xcccc
6401af53:	add    edi,0x8
6401af56:	jmp    0x6401af72
6401af58:	push   eax
6401af59:	call   0x64014bd3
6401af5e:	cmp    eax,ebx
6401af60:	pop    ecx
6401af61:	je     0x6401af6c
6401af63:	mov    DWORD PTR [eax],0xdddd
6401af69:	add    eax,0x8
6401af6c:	mov    edi,eax
6401af6e:	jmp    0x6401af72
6401af70:	xor    edi,edi
6401af72:	cmp    edi,ebx
6401af74:	je     0x6401af2a
6401af76:	push   DWORD PTR [ebp-0x8]
6401af79:	push   ebx
6401af7a:	push   edi
6401af7b:	call   0x64014360
6401af80:	add    esp,0xc
6401af83:	push   DWORD PTR [ebp-0x8]
6401af86:	push   edi
6401af87:	push   DWORD PTR [ebp+0x14]
6401af8a:	push   DWORD PTR [ebp-0xc]
6401af8d:	push   DWORD PTR [ebp+0xc]
6401af90:	push   DWORD PTR [ebp+0x8]
6401af93:	call   esi
6401af95:	cmp    eax,ebx
6401af97:	mov    DWORD PTR [ebp-0x8],eax
6401af9a:	jne    0x6401afa0
6401af9c:	xor    esi,esi
6401af9e:	jmp    0x6401afc5
6401afa0:	push   DWORD PTR [ebp+0x1c]
6401afa3:	lea    eax,[ebp-0x8]
6401afa6:	push   DWORD PTR [ebp+0x18]
6401afa9:	push   eax
6401afaa:	push   edi
6401afab:	push   DWORD PTR [ebp+0x20]
6401afae:	push   DWORD PTR [ebp-0x14]
6401afb1:	call   0x6401e816
6401afb6:	mov    esi,eax
6401afb8:	mov    DWORD PTR [ebp-0x10],esi
6401afbb:	add    esp,0x18
6401afbe:	neg    esi
6401afc0:	sbb    esi,esi
6401afc2:	and    esi,DWORD PTR [ebp-0x8]
6401afc5:	push   edi
6401afc6:	call   0x6401416c
6401afcb:	pop    ecx
6401afcc:	jmp    0x6401afe8
6401afce:	push   DWORD PTR [ebp+0x1c]
6401afd1:	push   DWORD PTR [ebp+0x18]
6401afd4:	push   DWORD PTR [ebp+0x14]
6401afd7:	push   DWORD PTR [ebp+0x10]
6401afda:	push   DWORD PTR [ebp+0xc]
6401afdd:	push   DWORD PTR [ebp+0x8]
6401afe0:	call   DWORD PTR ds:0x6402614c
6401afe6:	mov    esi,eax
6401afe8:	cmp    DWORD PTR [ebp-0xc],ebx
6401afeb:	je     0x6401aff6
6401afed:	push   DWORD PTR [ebp-0xc]
6401aff0:	call   0x64014af6
6401aff5:	pop    ecx
6401aff6:	mov    eax,DWORD PTR [ebp-0x10]
6401aff9:	cmp    eax,ebx
6401affb:	je     0x6401b009
6401affd:	cmp    DWORD PTR [ebp+0x18],eax
6401b000:	je     0x6401b009
6401b002:	push   eax
6401b003:	call   0x64014af6
6401b008:	pop    ecx
6401b009:	mov    eax,esi
6401b00b:	lea    esp,[ebp-0x20]
6401b00e:	pop    edi
6401b00f:	pop    esi
6401b010:	pop    ebx
6401b011:	mov    ecx,DWORD PTR [ebp-0x4]
6401b014:	xor    ecx,ebp
6401b016:	call   0x64013c5c
6401b01b:	leave  
6401b01c:	ret    
6401b01d:	push   ebp
6401b01e:	mov    ebp,esp
6401b020:	sub    esp,0x10
6401b023:	push   DWORD PTR [ebp+0x8]
6401b026:	lea    ecx,[ebp-0x10]
6401b029:	call   0x64013dff
6401b02e:	push   DWORD PTR [ebp+0x28]
6401b031:	lea    ecx,[ebp-0x10]
6401b034:	push   DWORD PTR [ebp+0x24]
6401b037:	push   DWORD PTR [ebp+0x20]
6401b03a:	push   DWORD PTR [ebp+0x1c]
6401b03d:	push   DWORD PTR [ebp+0x18]
6401b040:	push   DWORD PTR [ebp+0x14]
6401b043:	push   DWORD PTR [ebp+0x10]
6401b046:	push   DWORD PTR [ebp+0xc]
6401b049:	call   0x6401ac7b
6401b04e:	add    esp,0x20
6401b051:	cmp    BYTE PTR [ebp-0x4],0x0
6401b055:	je     0x6401b05e
6401b057:	mov    ecx,DWORD PTR [ebp-0x8]
6401b05a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b05e:	leave  
6401b05f:	ret    
6401b060:	push   ebp
6401b061:	mov    ebp,esp
6401b063:	sub    esp,0x10
6401b066:	push   DWORD PTR [ebp+0xc]
6401b069:	lea    ecx,[ebp-0x10]
6401b06c:	call   0x64013dff
6401b071:	movzx  eax,BYTE PTR [ebp+0x8]
6401b075:	mov    ecx,DWORD PTR [ebp-0x10]
6401b078:	mov    ecx,DWORD PTR [ecx+0xc8]
6401b07e:	movzx  eax,WORD PTR [ecx+eax*2]
6401b082:	and    eax,0x8000
6401b087:	cmp    BYTE PTR [ebp-0x4],0x0
6401b08b:	je     0x6401b094
6401b08d:	mov    ecx,DWORD PTR [ebp-0x8]
6401b090:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401b094:	leave  
6401b095:	ret    
6401b096:	push   0x0
6401b098:	push   DWORD PTR [esp+0x8]
6401b09c:	call   0x6401b060
6401b0a1:	pop    ecx
6401b0a2:	pop    ecx
6401b0a3:	ret    
6401b0a4:	push   esi
6401b0a5:	push   edi
6401b0a6:	xor    esi,esi
6401b0a8:	mov    edi,0x64030a78
6401b0ad:	cmp    DWORD PTR [esi*8+0x6402f964],0x1
6401b0b5:	jne    0x6401b0d5
6401b0b7:	lea    eax,[esi*8+0x6402f960]
6401b0be:	mov    DWORD PTR [eax],edi
6401b0c0:	push   0xfa0
6401b0c5:	push   DWORD PTR [eax]
6401b0c7:	add    edi,0x18
6401b0ca:	call   0x6401c8d8
6401b0cf:	test   eax,eax
6401b0d1:	pop    ecx
6401b0d2:	pop    ecx
6401b0d3:	je     0x6401b0e1
6401b0d5:	inc    esi
6401b0d6:	cmp    esi,0x24
6401b0d9:	jl     0x6401b0ad
6401b0db:	xor    eax,eax
6401b0dd:	inc    eax
6401b0de:	pop    edi
6401b0df:	pop    esi
6401b0e0:	ret    
6401b0e1:	and    DWORD PTR [esi*8+0x6402f960],0x0
6401b0e9:	xor    eax,eax
6401b0eb:	jmp    0x6401b0de
6401b0ed:	push   ebx
6401b0ee:	mov    ebx,DWORD PTR ds:0x640260a4
6401b0f4:	push   esi
6401b0f5:	mov    esi,0x6402f960
6401b0fa:	push   edi
6401b0fb:	mov    edi,DWORD PTR [esi]
6401b0fd:	test   edi,edi
6401b0ff:	je     0x6401b114
6401b101:	cmp    DWORD PTR [esi+0x4],0x1
6401b105:	je     0x6401b114
6401b107:	push   edi
6401b108:	call   ebx
6401b10a:	push   edi
6401b10b:	call   0x64014af6
6401b110:	and    DWORD PTR [esi],0x0
6401b113:	pop    ecx
6401b114:	add    esi,0x8
6401b117:	cmp    esi,0x6402fa80
6401b11d:	jl     0x6401b0fb
6401b11f:	mov    esi,0x6402f960
6401b124:	pop    edi
6401b125:	mov    eax,DWORD PTR [esi]
6401b127:	test   eax,eax
6401b129:	je     0x6401b134
6401b12b:	cmp    DWORD PTR [esi+0x4],0x1
6401b12f:	jne    0x6401b134
6401b131:	push   eax
6401b132:	call   ebx
6401b134:	add    esi,0x8
6401b137:	cmp    esi,0x6402fa80
6401b13d:	jl     0x6401b125
6401b13f:	pop    esi
6401b140:	pop    ebx
6401b141:	ret    
6401b142:	push   ebp
6401b143:	mov    ebp,esp
6401b145:	mov    eax,DWORD PTR [ebp+0x8]
6401b148:	push   DWORD PTR [eax*8+0x6402f960]
6401b14f:	call   DWORD PTR ds:0x640260a0
6401b155:	pop    ebp
6401b156:	ret    
6401b157:	push   0xc
6401b159:	push   0x6402c318
6401b15e:	call   0x64015220
6401b163:	xor    edi,edi
6401b165:	inc    edi
6401b166:	mov    DWORD PTR [ebp-0x1c],edi
6401b169:	xor    ebx,ebx
6401b16b:	cmp    DWORD PTR ds:0x64030a6c,ebx
6401b171:	jne    0x6401b18b
6401b173:	call   0x6401beea
6401b178:	push   0x1e
6401b17a:	call   0x6401bd4a
6401b17f:	push   0xff
6401b184:	call   0x640170f0
6401b189:	pop    ecx
6401b18a:	pop    ecx
6401b18b:	mov    esi,DWORD PTR [ebp+0x8]
6401b18e:	lea    esi,[esi*8+0x6402f960]
6401b195:	cmp    DWORD PTR [esi],ebx
6401b197:	je     0x6401b19d
6401b199:	mov    eax,edi
6401b19b:	jmp    0x6401b20b
6401b19d:	push   0x18
6401b19f:	call   0x64016f30
6401b1a4:	pop    ecx
6401b1a5:	mov    edi,eax
6401b1a7:	cmp    edi,ebx
6401b1a9:	jne    0x6401b1ba
6401b1ab:	call   0x64015a20
6401b1b0:	mov    DWORD PTR [eax],0xc
6401b1b6:	xor    eax,eax
6401b1b8:	jmp    0x6401b20b
6401b1ba:	push   0xa
6401b1bc:	call   0x6401b21a
6401b1c1:	pop    ecx
6401b1c2:	mov    DWORD PTR [ebp-0x4],ebx
6401b1c5:	cmp    DWORD PTR [esi],ebx
6401b1c7:	jne    0x6401b1f5
6401b1c9:	push   0xfa0
6401b1ce:	push   edi
6401b1cf:	call   0x6401c8d8
6401b1d4:	pop    ecx
6401b1d5:	pop    ecx
6401b1d6:	test   eax,eax
6401b1d8:	jne    0x6401b1f1
6401b1da:	push   edi
6401b1db:	call   0x64014af6
6401b1e0:	pop    ecx
6401b1e1:	call   0x64015a20
6401b1e6:	mov    DWORD PTR [eax],0xc
6401b1ec:	mov    DWORD PTR [ebp-0x1c],ebx
6401b1ef:	jmp    0x6401b1fc
6401b1f1:	mov    DWORD PTR [esi],edi
6401b1f3:	jmp    0x6401b1fc
6401b1f5:	push   edi
6401b1f6:	call   0x64014af6
6401b1fb:	pop    ecx
6401b1fc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b203:	call   0x6401b211
6401b208:	mov    eax,DWORD PTR [ebp-0x1c]
6401b20b:	call   0x64015265
6401b210:	ret    
6401b211:	push   0xa
6401b213:	call   0x6401b142
6401b218:	pop    ecx
6401b219:	ret    
6401b21a:	push   ebp
6401b21b:	mov    ebp,esp
6401b21d:	mov    eax,DWORD PTR [ebp+0x8]
6401b220:	push   esi
6401b221:	lea    esi,[eax*8+0x6402f960]
6401b228:	cmp    DWORD PTR [esi],0x0
6401b22b:	jne    0x6401b240
6401b22d:	push   eax
6401b22e:	call   0x6401b157
6401b233:	test   eax,eax
6401b235:	pop    ecx
6401b236:	jne    0x6401b240
6401b238:	push   0x11
6401b23a:	call   0x640170a6
6401b23f:	pop    ecx
6401b240:	push   DWORD PTR [esi]
6401b242:	call   DWORD PTR ds:0x6402609c
6401b248:	pop    esi
6401b249:	pop    ebp
6401b24a:	ret    
6401b24b:	push   0x140
6401b250:	push   0x0
6401b252:	push   DWORD PTR ds:0x64030a6c
6401b258:	call   DWORD PTR ds:0x640260f8
6401b25e:	test   eax,eax
6401b260:	mov    ds:0x640344e8,eax
6401b265:	jne    0x6401b268
6401b267:	ret    
6401b268:	mov    ecx,DWORD PTR [esp+0x4]
6401b26c:	and    DWORD PTR ds:0x64030bc8,0x0
6401b273:	and    DWORD PTR ds:0x640344e4,0x0
6401b27a:	mov    ds:0x640344f0,eax
6401b27f:	xor    eax,eax
6401b281:	mov    DWORD PTR ds:0x640344ec,ecx
6401b287:	mov    DWORD PTR ds:0x640344f4,0x10
6401b291:	inc    eax
6401b292:	ret    
6401b293:	mov    ecx,DWORD PTR ds:0x640344e4
6401b299:	mov    eax,ds:0x640344e8
6401b29e:	imul   ecx,ecx,0x14
6401b2a1:	add    ecx,eax
6401b2a3:	jmp    0x6401b2b7
6401b2a5:	mov    edx,DWORD PTR [esp+0x4]
6401b2a9:	sub    edx,DWORD PTR [eax+0xc]
6401b2ac:	cmp    edx,0x100000
6401b2b2:	jb     0x6401b2bd
6401b2b4:	add    eax,0x14
6401b2b7:	cmp    eax,ecx
6401b2b9:	jb     0x6401b2a5
6401b2bb:	xor    eax,eax
6401b2bd:	ret    
6401b2be:	push   ebp
6401b2bf:	mov    ebp,esp
6401b2c1:	sub    esp,0x10
6401b2c4:	mov    ecx,DWORD PTR [ebp+0x8]
6401b2c7:	mov    eax,DWORD PTR [ecx+0x10]
6401b2ca:	push   esi
6401b2cb:	mov    esi,DWORD PTR [ebp+0xc]
6401b2ce:	push   edi
6401b2cf:	mov    edi,esi
6401b2d1:	sub    edi,DWORD PTR [ecx+0xc]
6401b2d4:	add    esi,0xfffffffc
6401b2d7:	shr    edi,0xf
6401b2da:	mov    ecx,edi
6401b2dc:	imul   ecx,ecx,0x204
6401b2e2:	lea    ecx,[ecx+eax*1+0x144]
6401b2e9:	mov    DWORD PTR [ebp-0x10],ecx
6401b2ec:	mov    ecx,DWORD PTR [esi]
6401b2ee:	dec    ecx
6401b2ef:	test   cl,0x1
6401b2f2:	mov    DWORD PTR [ebp-0x4],ecx
6401b2f5:	jne    0x6401b5ce
6401b2fb:	push   ebx
6401b2fc:	lea    ebx,[ecx+esi*1]
6401b2ff:	mov    edx,DWORD PTR [ebx]
6401b301:	mov    DWORD PTR [ebp-0xc],edx
6401b304:	mov    edx,DWORD PTR [esi-0x4]
6401b307:	mov    DWORD PTR [ebp-0x8],edx
6401b30a:	mov    edx,DWORD PTR [ebp-0xc]
6401b30d:	test   dl,0x1
6401b310:	mov    DWORD PTR [ebp+0xc],ebx
6401b313:	jne    0x6401b389
6401b315:	sar    edx,0x4
6401b318:	dec    edx
6401b319:	cmp    edx,0x3f
6401b31c:	jbe    0x6401b321
6401b31e:	push   0x3f
6401b320:	pop    edx
6401b321:	mov    ecx,DWORD PTR [ebx+0x4]
6401b324:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b327:	jne    0x6401b36b
6401b329:	cmp    edx,0x20
6401b32c:	mov    ebx,0x80000000
6401b331:	jae    0x6401b34c
6401b333:	mov    ecx,edx
6401b335:	shr    ebx,cl
6401b337:	lea    ecx,[edx+eax*1+0x4]
6401b33b:	not    ebx
6401b33d:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b341:	dec    BYTE PTR [ecx]
6401b343:	jne    0x6401b368
6401b345:	mov    ecx,DWORD PTR [ebp+0x8]
6401b348:	and    DWORD PTR [ecx],ebx
6401b34a:	jmp    0x6401b368
6401b34c:	lea    ecx,[edx-0x20]
6401b34f:	shr    ebx,cl
6401b351:	lea    ecx,[edx+eax*1+0x4]
6401b355:	not    ebx
6401b357:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b35e:	dec    BYTE PTR [ecx]
6401b360:	jne    0x6401b368
6401b362:	mov    ecx,DWORD PTR [ebp+0x8]
6401b365:	and    DWORD PTR [ecx+0x4],ebx
6401b368:	mov    ebx,DWORD PTR [ebp+0xc]
6401b36b:	mov    edx,DWORD PTR [ebx+0x8]
6401b36e:	mov    ebx,DWORD PTR [ebx+0x4]
6401b371:	mov    ecx,DWORD PTR [ebp-0x4]
6401b374:	add    ecx,DWORD PTR [ebp-0xc]
6401b377:	mov    DWORD PTR [edx+0x4],ebx
6401b37a:	mov    edx,DWORD PTR [ebp+0xc]
6401b37d:	mov    ebx,DWORD PTR [edx+0x4]
6401b380:	mov    edx,DWORD PTR [edx+0x8]
6401b383:	mov    DWORD PTR [ebx+0x8],edx
6401b386:	mov    DWORD PTR [ebp-0x4],ecx
6401b389:	mov    edx,ecx
6401b38b:	sar    edx,0x4
6401b38e:	dec    edx
6401b38f:	cmp    edx,0x3f
6401b392:	jbe    0x6401b397
6401b394:	push   0x3f
6401b396:	pop    edx
6401b397:	mov    ebx,DWORD PTR [ebp-0x8]
6401b39a:	and    ebx,0x1
6401b39d:	mov    DWORD PTR [ebp-0xc],ebx
6401b3a0:	jne    0x6401b435
6401b3a6:	sub    esi,DWORD PTR [ebp-0x8]
6401b3a9:	mov    ebx,DWORD PTR [ebp-0x8]
6401b3ac:	sar    ebx,0x4
6401b3af:	push   0x3f
6401b3b1:	mov    DWORD PTR [ebp+0xc],esi
6401b3b4:	dec    ebx
6401b3b5:	pop    esi
6401b3b6:	cmp    ebx,esi
6401b3b8:	jbe    0x6401b3bc
6401b3ba:	mov    ebx,esi
6401b3bc:	add    ecx,DWORD PTR [ebp-0x8]
6401b3bf:	mov    edx,ecx
6401b3c1:	sar    edx,0x4
6401b3c4:	dec    edx
6401b3c5:	cmp    edx,esi
6401b3c7:	mov    DWORD PTR [ebp-0x4],ecx
6401b3ca:	jbe    0x6401b3ce
6401b3cc:	mov    edx,esi
6401b3ce:	cmp    ebx,edx
6401b3d0:	je     0x6401b430
6401b3d2:	mov    ecx,DWORD PTR [ebp+0xc]
6401b3d5:	mov    esi,DWORD PTR [ecx+0x4]
6401b3d8:	cmp    esi,DWORD PTR [ecx+0x8]
6401b3db:	jne    0x6401b418
6401b3dd:	cmp    ebx,0x20
6401b3e0:	mov    esi,0x80000000
6401b3e5:	jae    0x6401b3fe
6401b3e7:	mov    ecx,ebx
6401b3e9:	shr    esi,cl
6401b3eb:	not    esi
6401b3ed:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b3f1:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b3f5:	jne    0x6401b418
6401b3f7:	mov    ecx,DWORD PTR [ebp+0x8]
6401b3fa:	and    DWORD PTR [ecx],esi
6401b3fc:	jmp    0x6401b418
6401b3fe:	lea    ecx,[ebx-0x20]
6401b401:	shr    esi,cl
6401b403:	not    esi
6401b405:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b40c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b410:	jne    0x6401b418
6401b412:	mov    ecx,DWORD PTR [ebp+0x8]
6401b415:	and    DWORD PTR [ecx+0x4],esi
6401b418:	mov    ecx,DWORD PTR [ebp+0xc]
6401b41b:	mov    esi,DWORD PTR [ecx+0x8]
6401b41e:	mov    ecx,DWORD PTR [ecx+0x4]
6401b421:	mov    DWORD PTR [esi+0x4],ecx
6401b424:	mov    ecx,DWORD PTR [ebp+0xc]
6401b427:	mov    esi,DWORD PTR [ecx+0x4]
6401b42a:	mov    ecx,DWORD PTR [ecx+0x8]
6401b42d:	mov    DWORD PTR [esi+0x8],ecx
6401b430:	mov    esi,DWORD PTR [ebp+0xc]
6401b433:	jmp    0x6401b438
6401b435:	mov    ebx,DWORD PTR [ebp+0x8]
6401b438:	cmp    DWORD PTR [ebp-0xc],0x0
6401b43c:	jne    0x6401b446
6401b43e:	cmp    ebx,edx
6401b440:	je     0x6401b4c6
6401b446:	mov    ecx,DWORD PTR [ebp-0x10]
6401b449:	lea    ecx,[ecx+edx*8]
6401b44c:	mov    ebx,DWORD PTR [ecx+0x4]
6401b44f:	mov    DWORD PTR [esi+0x8],ecx
6401b452:	mov    DWORD PTR [esi+0x4],ebx
6401b455:	mov    DWORD PTR [ecx+0x4],esi
6401b458:	mov    ecx,DWORD PTR [esi+0x4]
6401b45b:	mov    DWORD PTR [ecx+0x8],esi
6401b45e:	mov    ecx,DWORD PTR [esi+0x4]
6401b461:	cmp    ecx,DWORD PTR [esi+0x8]
6401b464:	jne    0x6401b4c6
6401b466:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b46a:	mov    BYTE PTR [ebp+0xf],cl
6401b46d:	inc    cl
6401b46f:	cmp    edx,0x20
6401b472:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b476:	jae    0x6401b49d
6401b478:	cmp    BYTE PTR [ebp+0xf],0x0
6401b47c:	jne    0x6401b48c
6401b47e:	mov    ecx,edx
6401b480:	mov    ebx,0x80000000
6401b485:	shr    ebx,cl
6401b487:	mov    ecx,DWORD PTR [ebp+0x8]
6401b48a:	or     DWORD PTR [ecx],ebx
6401b48c:	mov    ebx,0x80000000
6401b491:	mov    ecx,edx
6401b493:	shr    ebx,cl
6401b495:	lea    eax,[eax+edi*4+0x44]
6401b499:	or     DWORD PTR [eax],ebx
6401b49b:	jmp    0x6401b4c6
6401b49d:	cmp    BYTE PTR [ebp+0xf],0x0
6401b4a1:	jne    0x6401b4b3
6401b4a3:	lea    ecx,[edx-0x20]
6401b4a6:	mov    ebx,0x80000000
6401b4ab:	shr    ebx,cl
6401b4ad:	mov    ecx,DWORD PTR [ebp+0x8]
6401b4b0:	or     DWORD PTR [ecx+0x4],ebx
6401b4b3:	lea    ecx,[edx-0x20]
6401b4b6:	mov    edx,0x80000000
6401b4bb:	shr    edx,cl
6401b4bd:	lea    eax,[eax+edi*4+0xc4]
6401b4c4:	or     DWORD PTR [eax],edx
6401b4c6:	mov    eax,DWORD PTR [ebp-0x4]
6401b4c9:	mov    DWORD PTR [esi],eax
6401b4cb:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b4cf:	mov    eax,DWORD PTR [ebp-0x10]
6401b4d2:	dec    DWORD PTR [eax]
6401b4d4:	jne    0x6401b5cd
6401b4da:	mov    eax,ds:0x64030bc8
6401b4df:	test   eax,eax
6401b4e1:	je     0x6401b5bf
6401b4e7:	mov    ecx,DWORD PTR ds:0x640344f8
6401b4ed:	mov    esi,DWORD PTR ds:0x64026178
6401b4f3:	push   0x4000
6401b4f8:	shl    ecx,0xf
6401b4fb:	add    ecx,DWORD PTR [eax+0xc]
6401b4fe:	mov    ebx,0x8000
6401b503:	push   ebx
6401b504:	push   ecx
6401b505:	call   esi
6401b507:	mov    ecx,DWORD PTR ds:0x640344f8
6401b50d:	mov    eax,ds:0x64030bc8
6401b512:	mov    edx,0x80000000
6401b517:	shr    edx,cl
6401b519:	or     DWORD PTR [eax+0x8],edx
6401b51c:	mov    eax,ds:0x64030bc8
6401b521:	mov    eax,DWORD PTR [eax+0x10]
6401b524:	mov    ecx,DWORD PTR ds:0x640344f8
6401b52a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b532:	mov    eax,ds:0x64030bc8
6401b537:	mov    eax,DWORD PTR [eax+0x10]
6401b53a:	dec    BYTE PTR [eax+0x43]
6401b53d:	mov    eax,ds:0x64030bc8
6401b542:	mov    ecx,DWORD PTR [eax+0x10]
6401b545:	cmp    BYTE PTR [ecx+0x43],0x0
6401b549:	jne    0x6401b554
6401b54b:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b54f:	mov    eax,ds:0x64030bc8
6401b554:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b558:	jne    0x6401b5bf
6401b55a:	push   ebx
6401b55b:	push   0x0
6401b55d:	push   DWORD PTR [eax+0xc]
6401b560:	call   esi
6401b562:	mov    eax,ds:0x64030bc8
6401b567:	push   DWORD PTR [eax+0x10]
6401b56a:	push   0x0
6401b56c:	push   DWORD PTR ds:0x64030a6c
6401b572:	call   DWORD PTR ds:0x640260fc
6401b578:	mov    ecx,DWORD PTR ds:0x640344e4
6401b57e:	mov    eax,ds:0x64030bc8
6401b583:	imul   ecx,ecx,0x14
6401b586:	mov    edx,DWORD PTR ds:0x640344e8
6401b58c:	sub    ecx,eax
6401b58e:	lea    ecx,[ecx+edx*1-0x14]
6401b592:	push   ecx
6401b593:	lea    ecx,[eax+0x14]
6401b596:	push   ecx
6401b597:	push   eax
6401b598:	call   0x64014ca0
6401b59d:	mov    eax,DWORD PTR [ebp+0x8]
6401b5a0:	add    esp,0xc
6401b5a3:	dec    DWORD PTR ds:0x640344e4
6401b5a9:	cmp    eax,DWORD PTR ds:0x64030bc8
6401b5af:	jbe    0x6401b5b5
6401b5b1:	sub    DWORD PTR [ebp+0x8],0x14
6401b5b5:	mov    eax,ds:0x640344e8
6401b5ba:	mov    ds:0x640344f0,eax
6401b5bf:	mov    eax,DWORD PTR [ebp+0x8]
6401b5c2:	mov    ds:0x64030bc8,eax
6401b5c7:	mov    DWORD PTR ds:0x640344f8,edi
6401b5cd:	pop    ebx
6401b5ce:	pop    edi
6401b5cf:	pop    esi
6401b5d0:	leave  
6401b5d1:	ret    
6401b5d2:	mov    eax,ds:0x640344f4
6401b5d7:	push   esi
6401b5d8:	mov    esi,DWORD PTR ds:0x640344e4
6401b5de:	push   edi
6401b5df:	xor    edi,edi
6401b5e1:	cmp    esi,eax
6401b5e3:	jne    0x6401b619
6401b5e5:	add    eax,0x10
6401b5e8:	imul   eax,eax,0x14
6401b5eb:	push   eax
6401b5ec:	push   DWORD PTR ds:0x640344e8
6401b5f2:	push   edi
6401b5f3:	push   DWORD PTR ds:0x64030a6c
6401b5f9:	call   DWORD PTR ds:0x64026100
6401b5ff:	cmp    eax,edi
6401b601:	jne    0x6401b607
6401b603:	xor    eax,eax
6401b605:	jmp    0x6401b67f
6401b607:	add    DWORD PTR ds:0x640344f4,0x10
6401b60e:	mov    esi,DWORD PTR ds:0x640344e4
6401b614:	mov    ds:0x640344e8,eax
6401b619:	imul   esi,esi,0x14
6401b61c:	add    esi,DWORD PTR ds:0x640344e8
6401b622:	push   0x41c4
6401b627:	push   0x8
6401b629:	push   DWORD PTR ds:0x64030a6c
6401b62f:	call   DWORD PTR ds:0x640260f8
6401b635:	cmp    eax,edi
6401b637:	mov    DWORD PTR [esi+0x10],eax
6401b63a:	je     0x6401b603
6401b63c:	push   0x4
6401b63e:	push   0x2000
6401b643:	push   0x100000
6401b648:	push   edi
6401b649:	call   DWORD PTR ds:0x640260c8
6401b64f:	cmp    eax,edi
6401b651:	mov    DWORD PTR [esi+0xc],eax
6401b654:	jne    0x6401b668
6401b656:	push   DWORD PTR [esi+0x10]
6401b659:	push   edi
6401b65a:	push   DWORD PTR ds:0x64030a6c
6401b660:	call   DWORD PTR ds:0x640260fc
6401b666:	jmp    0x6401b603
6401b668:	or     DWORD PTR [esi+0x8],0xffffffff
6401b66c:	mov    DWORD PTR [esi],edi
6401b66e:	mov    DWORD PTR [esi+0x4],edi
6401b671:	inc    DWORD PTR ds:0x640344e4
6401b677:	mov    eax,DWORD PTR [esi+0x10]
6401b67a:	or     DWORD PTR [eax],0xffffffff
6401b67d:	mov    eax,esi
6401b67f:	pop    edi
6401b680:	pop    esi
6401b681:	ret    
6401b682:	push   ebp
6401b683:	mov    ebp,esp
6401b685:	push   ecx
6401b686:	push   ecx
6401b687:	mov    ecx,DWORD PTR [ebp+0x8]
6401b68a:	mov    eax,DWORD PTR [ecx+0x8]
6401b68d:	push   ebx
6401b68e:	push   esi
6401b68f:	mov    esi,DWORD PTR [ecx+0x10]
6401b692:	push   edi
6401b693:	xor    ebx,ebx
6401b695:	jmp    0x6401b69a
6401b697:	add    eax,eax
6401b699:	inc    ebx
6401b69a:	test   eax,eax
6401b69c:	jge    0x6401b697
6401b69e:	mov    eax,ebx
6401b6a0:	imul   eax,eax,0x204
6401b6a6:	lea    eax,[eax+esi*1+0x144]
6401b6ad:	push   0x3f
6401b6af:	mov    DWORD PTR [ebp-0x8],eax
6401b6b2:	pop    edx
6401b6b3:	mov    DWORD PTR [eax+0x8],eax
6401b6b6:	mov    DWORD PTR [eax+0x4],eax
6401b6b9:	add    eax,0x8
6401b6bc:	dec    edx
6401b6bd:	jne    0x6401b6b3
6401b6bf:	push   0x4
6401b6c1:	mov    edi,ebx
6401b6c3:	push   0x1000
6401b6c8:	shl    edi,0xf
6401b6cb:	add    edi,DWORD PTR [ecx+0xc]
6401b6ce:	push   0x8000
6401b6d3:	push   edi
6401b6d4:	call   DWORD PTR ds:0x640260c8
6401b6da:	test   eax,eax
6401b6dc:	jne    0x6401b6e6
6401b6de:	or     eax,0xffffffff
6401b6e1:	jmp    0x6401b783
6401b6e6:	lea    edx,[edi+0x7000]
6401b6ec:	cmp    edi,edx
6401b6ee:	mov    DWORD PTR [ebp-0x4],edx
6401b6f1:	ja     0x6401b736
6401b6f3:	mov    ecx,edx
6401b6f5:	sub    ecx,edi
6401b6f7:	shr    ecx,0xc
6401b6fa:	lea    eax,[edi+0x10]
6401b6fd:	inc    ecx
6401b6fe:	or     DWORD PTR [eax-0x8],0xffffffff
6401b702:	or     DWORD PTR [eax+0xfec],0xffffffff
6401b709:	lea    edx,[eax+0xffc]
6401b70f:	mov    DWORD PTR [eax],edx
6401b711:	lea    edx,[eax-0x1004]
6401b717:	mov    DWORD PTR [eax-0x4],0xff0
6401b71e:	mov    DWORD PTR [eax+0x4],edx
6401b721:	mov    DWORD PTR [eax+0xfe8],0xff0
6401b72b:	add    eax,0x1000
6401b730:	dec    ecx
6401b731:	jne    0x6401b6fe
6401b733:	mov    edx,DWORD PTR [ebp-0x4]
6401b736:	mov    eax,DWORD PTR [ebp-0x8]
6401b739:	add    eax,0x1f8
6401b73e:	lea    ecx,[edi+0xc]
6401b741:	mov    DWORD PTR [eax+0x4],ecx
6401b744:	mov    DWORD PTR [ecx+0x8],eax
6401b747:	lea    ecx,[edx+0xc]
6401b74a:	mov    DWORD PTR [eax+0x8],ecx
6401b74d:	mov    DWORD PTR [ecx+0x4],eax
6401b750:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401b755:	xor    edi,edi
6401b757:	inc    edi
6401b758:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401b75f:	mov    al,BYTE PTR [esi+0x43]
6401b762:	mov    cl,al
6401b764:	inc    cl
6401b766:	test   al,al
6401b768:	mov    eax,DWORD PTR [ebp+0x8]
6401b76b:	mov    BYTE PTR [esi+0x43],cl
6401b76e:	jne    0x6401b773
6401b770:	or     DWORD PTR [eax+0x4],edi
6401b773:	mov    edx,0x80000000
6401b778:	mov    ecx,ebx
6401b77a:	shr    edx,cl
6401b77c:	not    edx
6401b77e:	and    DWORD PTR [eax+0x8],edx
6401b781:	mov    eax,ebx
6401b783:	pop    edi
6401b784:	pop    esi
6401b785:	pop    ebx
6401b786:	leave  
6401b787:	ret    
6401b788:	push   ebp
6401b789:	mov    ebp,esp
6401b78b:	sub    esp,0xc
6401b78e:	mov    ecx,DWORD PTR [ebp+0x8]
6401b791:	mov    eax,DWORD PTR [ecx+0x10]
6401b794:	push   ebx
6401b795:	push   esi
6401b796:	mov    esi,DWORD PTR [ebp+0x10]
6401b799:	push   edi
6401b79a:	mov    edi,DWORD PTR [ebp+0xc]
6401b79d:	mov    edx,edi
6401b79f:	sub    edx,DWORD PTR [ecx+0xc]
6401b7a2:	add    esi,0x17
6401b7a5:	shr    edx,0xf
6401b7a8:	mov    ecx,edx
6401b7aa:	imul   ecx,ecx,0x204
6401b7b0:	lea    ecx,[ecx+eax*1+0x144]
6401b7b7:	mov    DWORD PTR [ebp-0xc],ecx
6401b7ba:	mov    ecx,DWORD PTR [edi-0x4]
6401b7bd:	and    esi,0xfffffff0
6401b7c0:	dec    ecx
6401b7c1:	cmp    esi,ecx
6401b7c3:	lea    edi,[ecx+edi*1-0x4]
6401b7c7:	mov    ebx,DWORD PTR [edi]
6401b7c9:	mov    DWORD PTR [ebp+0x10],ecx
6401b7cc:	mov    DWORD PTR [ebp-0x4],ebx
6401b7cf:	jle    0x6401b92a
6401b7d5:	test   bl,0x1
6401b7d8:	jne    0x6401b923
6401b7de:	add    ebx,ecx
6401b7e0:	cmp    esi,ebx
6401b7e2:	jg     0x6401b923
6401b7e8:	mov    ecx,DWORD PTR [ebp-0x4]
6401b7eb:	sar    ecx,0x4
6401b7ee:	dec    ecx
6401b7ef:	cmp    ecx,0x3f
6401b7f2:	mov    DWORD PTR [ebp-0x8],ecx
6401b7f5:	jbe    0x6401b7fd
6401b7f7:	push   0x3f
6401b7f9:	pop    ecx
6401b7fa:	mov    DWORD PTR [ebp-0x8],ecx
6401b7fd:	mov    ebx,DWORD PTR [edi+0x4]
6401b800:	cmp    ebx,DWORD PTR [edi+0x8]
6401b803:	jne    0x6401b848
6401b805:	cmp    ecx,0x20
6401b808:	mov    ebx,0x80000000
6401b80d:	jae    0x6401b829
6401b80f:	shr    ebx,cl
6401b811:	mov    ecx,DWORD PTR [ebp-0x8]
6401b814:	lea    ecx,[ecx+eax*1+0x4]
6401b818:	not    ebx
6401b81a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401b81e:	dec    BYTE PTR [ecx]
6401b820:	jne    0x6401b848
6401b822:	mov    ecx,DWORD PTR [ebp+0x8]
6401b825:	and    DWORD PTR [ecx],ebx
6401b827:	jmp    0x6401b848
6401b829:	add    ecx,0xffffffe0
6401b82c:	shr    ebx,cl
6401b82e:	mov    ecx,DWORD PTR [ebp-0x8]
6401b831:	lea    ecx,[ecx+eax*1+0x4]
6401b835:	not    ebx
6401b837:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401b83e:	dec    BYTE PTR [ecx]
6401b840:	jne    0x6401b848
6401b842:	mov    ecx,DWORD PTR [ebp+0x8]
6401b845:	and    DWORD PTR [ecx+0x4],ebx
6401b848:	mov    ecx,DWORD PTR [edi+0x8]
6401b84b:	mov    ebx,DWORD PTR [edi+0x4]
6401b84e:	mov    DWORD PTR [ecx+0x4],ebx
6401b851:	mov    ecx,DWORD PTR [edi+0x4]
6401b854:	mov    edi,DWORD PTR [edi+0x8]
6401b857:	mov    DWORD PTR [ecx+0x8],edi
6401b85a:	mov    ecx,DWORD PTR [ebp+0x10]
6401b85d:	sub    ecx,esi
6401b85f:	add    DWORD PTR [ebp-0x4],ecx
6401b862:	cmp    DWORD PTR [ebp-0x4],0x0
6401b866:	jle    0x6401b911
6401b86c:	mov    edi,DWORD PTR [ebp-0x4]
6401b86f:	mov    ecx,DWORD PTR [ebp+0xc]
6401b872:	sar    edi,0x4
6401b875:	dec    edi
6401b876:	cmp    edi,0x3f
6401b879:	lea    ecx,[ecx+esi*1-0x4]
6401b87d:	jbe    0x6401b882
6401b87f:	push   0x3f
6401b881:	pop    edi
6401b882:	mov    ebx,DWORD PTR [ebp-0xc]
6401b885:	lea    ebx,[ebx+edi*8]
6401b888:	mov    DWORD PTR [ebp+0x10],ebx
6401b88b:	mov    ebx,DWORD PTR [ebx+0x4]
6401b88e:	mov    DWORD PTR [ecx+0x4],ebx
6401b891:	mov    ebx,DWORD PTR [ebp+0x10]
6401b894:	mov    DWORD PTR [ecx+0x8],ebx
6401b897:	mov    DWORD PTR [ebx+0x4],ecx
6401b89a:	mov    ebx,DWORD PTR [ecx+0x4]
6401b89d:	mov    DWORD PTR [ebx+0x8],ecx
6401b8a0:	mov    ebx,DWORD PTR [ecx+0x4]
6401b8a3:	cmp    ebx,DWORD PTR [ecx+0x8]
6401b8a6:	jne    0x6401b8ff
6401b8a8:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401b8ac:	mov    BYTE PTR [ebp+0x13],cl
6401b8af:	inc    cl
6401b8b1:	cmp    edi,0x20
6401b8b4:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401b8b8:	jae    0x6401b8d6
6401b8ba:	cmp    BYTE PTR [ebp+0x13],0x0
6401b8be:	jne    0x6401b8ce
6401b8c0:	mov    ecx,edi
6401b8c2:	mov    ebx,0x80000000
6401b8c7:	shr    ebx,cl
6401b8c9:	mov    ecx,DWORD PTR [ebp+0x8]
6401b8cc:	or     DWORD PTR [ecx],ebx
6401b8ce:	lea    eax,[eax+edx*4+0x44]
6401b8d2:	mov    ecx,edi
6401b8d4:	jmp    0x6401b8f6
6401b8d6:	cmp    BYTE PTR [ebp+0x13],0x0
6401b8da:	jne    0x6401b8ec
6401b8dc:	lea    ecx,[edi-0x20]
6401b8df:	mov    ebx,0x80000000
6401b8e4:	shr    ebx,cl
6401b8e6:	mov    ecx,DWORD PTR [ebp+0x8]
6401b8e9:	or     DWORD PTR [ecx+0x4],ebx
6401b8ec:	lea    eax,[eax+edx*4+0xc4]
6401b8f3:	lea    ecx,[edi-0x20]
6401b8f6:	mov    edx,0x80000000
6401b8fb:	shr    edx,cl
6401b8fd:	or     DWORD PTR [eax],edx
6401b8ff:	mov    edx,DWORD PTR [ebp+0xc]
6401b902:	mov    ecx,DWORD PTR [ebp-0x4]
6401b905:	lea    eax,[edx+esi*1-0x4]
6401b909:	mov    DWORD PTR [eax],ecx
6401b90b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401b90f:	jmp    0x6401b914
6401b911:	mov    edx,DWORD PTR [ebp+0xc]
6401b914:	lea    eax,[esi+0x1]
6401b917:	mov    DWORD PTR [edx-0x4],eax
6401b91a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401b91e:	jmp    0x6401ba5f
6401b923:	xor    eax,eax
6401b925:	jmp    0x6401ba62
6401b92a:	jge    0x6401ba5f
6401b930:	mov    ebx,DWORD PTR [ebp+0xc]
6401b933:	sub    DWORD PTR [ebp+0x10],esi
6401b936:	lea    ecx,[esi+0x1]
6401b939:	mov    DWORD PTR [ebx-0x4],ecx
6401b93c:	lea    ebx,[ebx+esi*1-0x4]
6401b940:	mov    esi,DWORD PTR [ebp+0x10]
6401b943:	sar    esi,0x4
6401b946:	dec    esi
6401b947:	cmp    esi,0x3f
6401b94a:	mov    DWORD PTR [ebp+0xc],ebx
6401b94d:	mov    DWORD PTR [ebx-0x4],ecx
6401b950:	jbe    0x6401b955
6401b952:	push   0x3f
6401b954:	pop    esi
6401b955:	test   BYTE PTR [ebp-0x4],0x1
6401b959:	jne    0x6401b9df
6401b95f:	mov    esi,DWORD PTR [ebp-0x4]
6401b962:	sar    esi,0x4
6401b965:	dec    esi
6401b966:	cmp    esi,0x3f
6401b969:	jbe    0x6401b96e
6401b96b:	push   0x3f
6401b96d:	pop    esi
6401b96e:	mov    ecx,DWORD PTR [edi+0x4]
6401b971:	cmp    ecx,DWORD PTR [edi+0x8]
6401b974:	jne    0x6401b9b8
6401b976:	cmp    esi,0x20
6401b979:	mov    ebx,0x80000000
6401b97e:	jae    0x6401b999
6401b980:	mov    ecx,esi
6401b982:	shr    ebx,cl
6401b984:	lea    esi,[esi+eax*1+0x4]
6401b988:	not    ebx
6401b98a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401b98e:	dec    BYTE PTR [esi]
6401b990:	jne    0x6401b9b5
6401b992:	mov    ecx,DWORD PTR [ebp+0x8]
6401b995:	and    DWORD PTR [ecx],ebx
6401b997:	jmp    0x6401b9b5
6401b999:	lea    ecx,[esi-0x20]
6401b99c:	shr    ebx,cl
6401b99e:	lea    ecx,[esi+eax*1+0x4]
6401b9a2:	not    ebx
6401b9a4:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401b9ab:	dec    BYTE PTR [ecx]
6401b9ad:	jne    0x6401b9b5
6401b9af:	mov    ecx,DWORD PTR [ebp+0x8]
6401b9b2:	and    DWORD PTR [ecx+0x4],ebx
6401b9b5:	mov    ebx,DWORD PTR [ebp+0xc]
6401b9b8:	mov    ecx,DWORD PTR [edi+0x8]
6401b9bb:	mov    esi,DWORD PTR [edi+0x4]
6401b9be:	mov    DWORD PTR [ecx+0x4],esi
6401b9c1:	mov    esi,DWORD PTR [edi+0x8]
6401b9c4:	mov    ecx,DWORD PTR [edi+0x4]
6401b9c7:	mov    DWORD PTR [ecx+0x8],esi
6401b9ca:	mov    esi,DWORD PTR [ebp+0x10]
6401b9cd:	add    esi,DWORD PTR [ebp-0x4]
6401b9d0:	mov    DWORD PTR [ebp+0x10],esi
6401b9d3:	sar    esi,0x4
6401b9d6:	dec    esi
6401b9d7:	cmp    esi,0x3f
6401b9da:	jbe    0x6401b9df
6401b9dc:	push   0x3f
6401b9de:	pop    esi
6401b9df:	mov    ecx,DWORD PTR [ebp-0xc]
6401b9e2:	lea    ecx,[ecx+esi*8]
6401b9e5:	mov    edi,DWORD PTR [ecx+0x4]
6401b9e8:	mov    DWORD PTR [ebx+0x8],ecx
6401b9eb:	mov    DWORD PTR [ebx+0x4],edi
6401b9ee:	mov    DWORD PTR [ecx+0x4],ebx
6401b9f1:	mov    ecx,DWORD PTR [ebx+0x4]
6401b9f4:	mov    DWORD PTR [ecx+0x8],ebx
6401b9f7:	mov    ecx,DWORD PTR [ebx+0x4]
6401b9fa:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b9fd:	jne    0x6401ba56
6401b9ff:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401ba03:	mov    BYTE PTR [ebp+0xf],cl
6401ba06:	inc    cl
6401ba08:	cmp    esi,0x20
6401ba0b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401ba0f:	jae    0x6401ba2d
6401ba11:	cmp    BYTE PTR [ebp+0xf],0x0
6401ba15:	jne    0x6401ba25
6401ba17:	mov    ecx,esi
6401ba19:	mov    edi,0x80000000
6401ba1e:	shr    edi,cl
6401ba20:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba23:	or     DWORD PTR [ecx],edi
6401ba25:	lea    eax,[eax+edx*4+0x44]
6401ba29:	mov    ecx,esi
6401ba2b:	jmp    0x6401ba4d
6401ba2d:	cmp    BYTE PTR [ebp+0xf],0x0
6401ba31:	jne    0x6401ba43
6401ba33:	lea    ecx,[esi-0x20]
6401ba36:	mov    edi,0x80000000
6401ba3b:	shr    edi,cl
6401ba3d:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba40:	or     DWORD PTR [ecx+0x4],edi
6401ba43:	lea    eax,[eax+edx*4+0xc4]
6401ba4a:	lea    ecx,[esi-0x20]
6401ba4d:	mov    edx,0x80000000
6401ba52:	shr    edx,cl
6401ba54:	or     DWORD PTR [eax],edx
6401ba56:	mov    eax,DWORD PTR [ebp+0x10]
6401ba59:	mov    DWORD PTR [ebx],eax
6401ba5b:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401ba5f:	xor    eax,eax
6401ba61:	inc    eax
6401ba62:	pop    edi
6401ba63:	pop    esi
6401ba64:	pop    ebx
6401ba65:	leave  
6401ba66:	ret    
6401ba67:	push   ebp
6401ba68:	mov    ebp,esp
6401ba6a:	sub    esp,0x14
6401ba6d:	mov    eax,ds:0x640344e4
6401ba72:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba75:	imul   eax,eax,0x14
6401ba78:	add    eax,DWORD PTR ds:0x640344e8
6401ba7e:	add    ecx,0x17
6401ba81:	and    ecx,0xfffffff0
6401ba84:	mov    DWORD PTR [ebp-0x10],ecx
6401ba87:	sar    ecx,0x4
6401ba8a:	push   ebx
6401ba8b:	dec    ecx
6401ba8c:	cmp    ecx,0x20
6401ba8f:	push   esi
6401ba90:	push   edi
6401ba91:	jge    0x6401ba9e
6401ba93:	or     esi,0xffffffff
6401ba96:	shr    esi,cl
6401ba98:	or     DWORD PTR [ebp-0x8],0xffffffff
6401ba9c:	jmp    0x6401baab
6401ba9e:	add    ecx,0xffffffe0
6401baa1:	or     edx,0xffffffff
6401baa4:	xor    esi,esi
6401baa6:	shr    edx,cl
6401baa8:	mov    DWORD PTR [ebp-0x8],edx
6401baab:	mov    ecx,DWORD PTR ds:0x640344f0
6401bab1:	mov    ebx,ecx
6401bab3:	jmp    0x6401bac6
6401bab5:	mov    edx,DWORD PTR [ebx+0x4]
6401bab8:	mov    edi,DWORD PTR [ebx]
6401baba:	and    edx,DWORD PTR [ebp-0x8]
6401babd:	and    edi,esi
6401babf:	or     edx,edi
6401bac1:	jne    0x6401bacd
6401bac3:	add    ebx,0x14
6401bac6:	cmp    ebx,eax
6401bac8:	mov    DWORD PTR [ebp+0x8],ebx
6401bacb:	jb     0x6401bab5
6401bacd:	cmp    ebx,eax
6401bacf:	jne    0x6401bb50
6401bad1:	mov    ebx,DWORD PTR ds:0x640344e8
6401bad7:	jmp    0x6401baea
6401bad9:	mov    edx,DWORD PTR [ebx+0x4]
6401badc:	mov    edi,DWORD PTR [ebx]
6401bade:	and    edx,DWORD PTR [ebp-0x8]
6401bae1:	and    edi,esi
6401bae3:	or     edx,edi
6401bae5:	jne    0x6401baf1
6401bae7:	add    ebx,0x14
6401baea:	cmp    ebx,ecx
6401baec:	mov    DWORD PTR [ebp+0x8],ebx
6401baef:	jb     0x6401bad9
6401baf1:	cmp    ebx,ecx
6401baf3:	jne    0x6401bb50
6401baf5:	jmp    0x6401bb03
6401baf7:	cmp    DWORD PTR [ebx+0x8],0x0
6401bafb:	jne    0x6401bb07
6401bafd:	add    ebx,0x14
6401bb00:	mov    DWORD PTR [ebp+0x8],ebx
6401bb03:	cmp    ebx,eax
6401bb05:	jb     0x6401baf7
6401bb07:	cmp    ebx,eax
6401bb09:	jne    0x6401bb3c
6401bb0b:	mov    ebx,DWORD PTR ds:0x640344e8
6401bb11:	jmp    0x6401bb1c
6401bb13:	cmp    DWORD PTR [ebx+0x8],0x0
6401bb17:	jne    0x6401bb23
6401bb19:	add    ebx,0x14
6401bb1c:	cmp    ebx,ecx
6401bb1e:	mov    DWORD PTR [ebp+0x8],ebx
6401bb21:	jb     0x6401bb13
6401bb23:	cmp    ebx,ecx
6401bb25:	jne    0x6401bb3c
6401bb27:	call   0x6401b5d2
6401bb2c:	mov    ebx,eax
6401bb2e:	test   ebx,ebx
6401bb30:	mov    DWORD PTR [ebp+0x8],ebx
6401bb33:	jne    0x6401bb3c
6401bb35:	xor    eax,eax
6401bb37:	jmp    0x6401bd45
6401bb3c:	push   ebx
6401bb3d:	call   0x6401b682
6401bb42:	pop    ecx
6401bb43:	mov    ecx,DWORD PTR [ebx+0x10]
6401bb46:	mov    DWORD PTR [ecx],eax
6401bb48:	mov    eax,DWORD PTR [ebx+0x10]
6401bb4b:	cmp    DWORD PTR [eax],0xffffffff
6401bb4e:	je     0x6401bb35
6401bb50:	mov    DWORD PTR ds:0x640344f0,ebx
6401bb56:	mov    eax,DWORD PTR [ebx+0x10]
6401bb59:	mov    edx,DWORD PTR [eax]
6401bb5b:	cmp    edx,0xffffffff
6401bb5e:	mov    DWORD PTR [ebp-0x4],edx
6401bb61:	je     0x6401bb77
6401bb63:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bb6a:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401bb6e:	and    ecx,DWORD PTR [ebp-0x8]
6401bb71:	and    edi,esi
6401bb73:	or     ecx,edi
6401bb75:	jne    0x6401bba0
6401bb77:	and    DWORD PTR [ebp-0x4],0x0
6401bb7b:	mov    edx,DWORD PTR [eax+0xc4]
6401bb81:	lea    ecx,[eax+0x44]
6401bb84:	mov    edi,DWORD PTR [ecx]
6401bb86:	and    edx,DWORD PTR [ebp-0x8]
6401bb89:	and    edi,esi
6401bb8b:	or     edx,edi
6401bb8d:	jne    0x6401bb9d
6401bb8f:	inc    DWORD PTR [ebp-0x4]
6401bb92:	mov    edx,DWORD PTR [ecx+0x84]
6401bb98:	add    ecx,0x4
6401bb9b:	jmp    0x6401bb84
6401bb9d:	mov    edx,DWORD PTR [ebp-0x4]
6401bba0:	mov    ecx,edx
6401bba2:	imul   ecx,ecx,0x204
6401bba8:	lea    ecx,[ecx+eax*1+0x144]
6401bbaf:	mov    DWORD PTR [ebp-0xc],ecx
6401bbb2:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401bbb6:	xor    edi,edi
6401bbb8:	and    ecx,esi
6401bbba:	jne    0x6401bbce
6401bbbc:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bbc3:	and    ecx,DWORD PTR [ebp-0x8]
6401bbc6:	push   0x20
6401bbc8:	pop    edi
6401bbc9:	jmp    0x6401bbce
6401bbcb:	add    ecx,ecx
6401bbcd:	inc    edi
6401bbce:	test   ecx,ecx
6401bbd0:	jge    0x6401bbcb
6401bbd2:	mov    ecx,DWORD PTR [ebp-0xc]
6401bbd5:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401bbd9:	mov    ecx,DWORD PTR [edx]
6401bbdb:	sub    ecx,DWORD PTR [ebp-0x10]
6401bbde:	mov    esi,ecx
6401bbe0:	sar    esi,0x4
6401bbe3:	dec    esi
6401bbe4:	cmp    esi,0x3f
6401bbe7:	mov    DWORD PTR [ebp-0x8],ecx
6401bbea:	jle    0x6401bbef
6401bbec:	push   0x3f
6401bbee:	pop    esi
6401bbef:	cmp    esi,edi
6401bbf1:	je     0x6401bcf8
6401bbf7:	mov    ecx,DWORD PTR [edx+0x4]
6401bbfa:	cmp    ecx,DWORD PTR [edx+0x8]
6401bbfd:	jne    0x6401bc5b
6401bbff:	cmp    edi,0x20
6401bc02:	mov    ebx,0x80000000
6401bc07:	jge    0x6401bc2f
6401bc09:	mov    ecx,edi
6401bc0b:	shr    ebx,cl
6401bc0d:	mov    ecx,DWORD PTR [ebp-0x4]
6401bc10:	lea    edi,[eax+edi*1+0x4]
6401bc14:	not    ebx
6401bc16:	mov    DWORD PTR [ebp-0x14],ebx
6401bc19:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401bc1d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401bc21:	dec    BYTE PTR [edi]
6401bc23:	jne    0x6401bc58
6401bc25:	mov    ecx,DWORD PTR [ebp-0x14]
6401bc28:	mov    ebx,DWORD PTR [ebp+0x8]
6401bc2b:	and    DWORD PTR [ebx],ecx
6401bc2d:	jmp    0x6401bc5b
6401bc2f:	lea    ecx,[edi-0x20]
6401bc32:	shr    ebx,cl
6401bc34:	mov    ecx,DWORD PTR [ebp-0x4]
6401bc37:	lea    ecx,[eax+ecx*4+0xc4]
6401bc3e:	lea    edi,[eax+edi*1+0x4]
6401bc42:	not    ebx
6401bc44:	and    DWORD PTR [ecx],ebx
6401bc46:	dec    BYTE PTR [edi]
6401bc48:	mov    DWORD PTR [ebp-0x14],ebx
6401bc4b:	jne    0x6401bc58
6401bc4d:	mov    ebx,DWORD PTR [ebp+0x8]
6401bc50:	mov    ecx,DWORD PTR [ebp-0x14]
6401bc53:	and    DWORD PTR [ebx+0x4],ecx
6401bc56:	jmp    0x6401bc5b
6401bc58:	mov    ebx,DWORD PTR [ebp+0x8]
6401bc5b:	cmp    DWORD PTR [ebp-0x8],0x0
6401bc5f:	mov    ecx,DWORD PTR [edx+0x8]
6401bc62:	mov    edi,DWORD PTR [edx+0x4]
6401bc65:	mov    DWORD PTR [ecx+0x4],edi
6401bc68:	mov    ecx,DWORD PTR [edx+0x4]
6401bc6b:	mov    edi,DWORD PTR [edx+0x8]
6401bc6e:	mov    DWORD PTR [ecx+0x8],edi
6401bc71:	je     0x6401bd04
6401bc77:	mov    ecx,DWORD PTR [ebp-0xc]
6401bc7a:	lea    ecx,[ecx+esi*8]
6401bc7d:	mov    edi,DWORD PTR [ecx+0x4]
6401bc80:	mov    DWORD PTR [edx+0x8],ecx
6401bc83:	mov    DWORD PTR [edx+0x4],edi
6401bc86:	mov    DWORD PTR [ecx+0x4],edx
6401bc89:	mov    ecx,DWORD PTR [edx+0x4]
6401bc8c:	mov    DWORD PTR [ecx+0x8],edx
6401bc8f:	mov    ecx,DWORD PTR [edx+0x4]
6401bc92:	cmp    ecx,DWORD PTR [edx+0x8]
6401bc95:	jne    0x6401bcf5
6401bc97:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bc9b:	mov    BYTE PTR [ebp+0xb],cl
6401bc9e:	inc    cl
6401bca0:	cmp    esi,0x20
6401bca3:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bca7:	jge    0x6401bccc
6401bca9:	cmp    BYTE PTR [ebp+0xb],0x0
6401bcad:	jne    0x6401bcba
6401bcaf:	mov    edi,0x80000000
6401bcb4:	mov    ecx,esi
6401bcb6:	shr    edi,cl
6401bcb8:	or     DWORD PTR [ebx],edi
6401bcba:	mov    ecx,esi
6401bcbc:	mov    edi,0x80000000
6401bcc1:	shr    edi,cl
6401bcc3:	mov    ecx,DWORD PTR [ebp-0x4]
6401bcc6:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401bcca:	jmp    0x6401bcf5
6401bccc:	cmp    BYTE PTR [ebp+0xb],0x0
6401bcd0:	jne    0x6401bcdf
6401bcd2:	lea    ecx,[esi-0x20]
6401bcd5:	mov    edi,0x80000000
6401bcda:	shr    edi,cl
6401bcdc:	or     DWORD PTR [ebx+0x4],edi
6401bcdf:	mov    ecx,DWORD PTR [ebp-0x4]
6401bce2:	lea    edi,[eax+ecx*4+0xc4]
6401bce9:	lea    ecx,[esi-0x20]
6401bcec:	mov    esi,0x80000000
6401bcf1:	shr    esi,cl
6401bcf3:	or     DWORD PTR [edi],esi
6401bcf5:	mov    ecx,DWORD PTR [ebp-0x8]
6401bcf8:	test   ecx,ecx
6401bcfa:	je     0x6401bd07
6401bcfc:	mov    DWORD PTR [edx],ecx
6401bcfe:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401bd02:	jmp    0x6401bd07
6401bd04:	mov    ecx,DWORD PTR [ebp-0x8]
6401bd07:	mov    esi,DWORD PTR [ebp-0x10]
6401bd0a:	add    edx,ecx
6401bd0c:	lea    ecx,[esi+0x1]
6401bd0f:	mov    DWORD PTR [edx],ecx
6401bd11:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401bd15:	mov    esi,DWORD PTR [ebp-0xc]
6401bd18:	mov    ecx,DWORD PTR [esi]
6401bd1a:	test   ecx,ecx
6401bd1c:	lea    edi,[ecx+0x1]
6401bd1f:	mov    DWORD PTR [esi],edi
6401bd21:	jne    0x6401bd3d
6401bd23:	cmp    ebx,DWORD PTR ds:0x64030bc8
6401bd29:	jne    0x6401bd3d
6401bd2b:	mov    ecx,DWORD PTR [ebp-0x4]
6401bd2e:	cmp    ecx,DWORD PTR ds:0x640344f8
6401bd34:	jne    0x6401bd3d
6401bd36:	and    DWORD PTR ds:0x64030bc8,0x0
6401bd3d:	mov    ecx,DWORD PTR [ebp-0x4]
6401bd40:	mov    DWORD PTR [eax],ecx
6401bd42:	lea    eax,[edx+0x4]
6401bd45:	pop    edi
6401bd46:	pop    esi
6401bd47:	pop    ebx
6401bd48:	leave  
6401bd49:	ret    
6401bd4a:	push   ecx
6401bd4b:	push   ebx
6401bd4c:	mov    ebx,DWORD PTR [esp+0xc]
6401bd50:	push   esi
6401bd51:	push   edi
6401bd52:	xor    esi,esi
6401bd54:	xor    edi,edi
6401bd56:	cmp    ebx,DWORD PTR [edi*8+0x6402fa80]
6401bd5d:	je     0x6401bd65
6401bd5f:	inc    edi
6401bd60:	cmp    edi,0x17
6401bd63:	jb     0x6401bd56
6401bd65:	cmp    edi,0x17
6401bd68:	jae    0x6401bee5
6401bd6e:	push   ebp
6401bd6f:	push   0x3
6401bd71:	call   0x6401ee20
6401bd76:	cmp    eax,0x1
6401bd79:	pop    ecx
6401bd7a:	je     0x6401beb1
6401bd80:	push   0x3
6401bd82:	call   0x6401ee20
6401bd87:	test   eax,eax
6401bd89:	pop    ecx
6401bd8a:	jne    0x6401bd99
6401bd8c:	cmp    DWORD PTR ds:0x64030580,0x1
6401bd93:	je     0x6401beb1
6401bd99:	cmp    ebx,0xfc
6401bd9f:	je     0x6401bee4
6401bda5:	push   0x64027430
6401bdaa:	mov    ebx,0x314
6401bdaf:	push   ebx
6401bdb0:	mov    ebp,0x64030bd0
6401bdb5:	push   ebp
6401bdb6:	call   0x64015618
6401bdbb:	add    esp,0xc
6401bdbe:	test   eax,eax
6401bdc0:	je     0x6401bdcf
6401bdc2:	push   esi
6401bdc3:	push   esi
6401bdc4:	push   esi
6401bdc5:	push   esi
6401bdc6:	push   esi
6401bdc7:	call   0x64013698
6401bdcc:	add    esp,0x14
6401bdcf:	push   0x104
6401bdd4:	mov    esi,0x64030be9
6401bdd9:	push   esi
6401bdda:	push   0x0
6401bddc:	mov    BYTE PTR ds:0x64030ced,0x0
6401bde3:	call   DWORD PTR ds:0x64026164
6401bde9:	test   eax,eax
6401bdeb:	jne    0x6401be13
6401bded:	push   0x64027418
6401bdf2:	push   0x2fb
6401bdf7:	push   esi
6401bdf8:	call   0x64015618
6401bdfd:	add    esp,0xc
6401be00:	test   eax,eax
6401be02:	je     0x6401be13
6401be04:	xor    eax,eax
6401be06:	push   eax
6401be07:	push   eax
6401be08:	push   eax
6401be09:	push   eax
6401be0a:	push   eax
6401be0b:	call   0x64013698
6401be10:	add    esp,0x14
6401be13:	push   esi
6401be14:	call   0x64015420
6401be19:	inc    eax
6401be1a:	cmp    eax,0x3c
6401be1d:	pop    ecx
6401be1e:	jbe    0x6401be58
6401be20:	push   esi
6401be21:	call   0x64015420
6401be26:	sub    esi,0x3b
6401be29:	add    eax,esi
6401be2b:	push   0x3
6401be2d:	mov    ecx,0x64030ee4
6401be32:	push   0x64027414
6401be37:	sub    ecx,eax
6401be39:	push   ecx
6401be3a:	push   eax
6401be3b:	call   0x6401cea6
6401be40:	add    esp,0x14
6401be43:	test   eax,eax
6401be45:	je     0x6401be58
6401be47:	xor    esi,esi
6401be49:	push   esi
6401be4a:	push   esi
6401be4b:	push   esi
6401be4c:	push   esi
6401be4d:	push   esi
6401be4e:	call   0x64013698
6401be53:	add    esp,0x14
6401be56:	jmp    0x6401be5a
6401be58:	xor    esi,esi
6401be5a:	push   0x64027410
6401be5f:	push   ebx
6401be60:	push   ebp
6401be61:	call   0x6401cdee
6401be66:	add    esp,0xc
6401be69:	test   eax,eax
6401be6b:	je     0x6401be7a
6401be6d:	push   esi
6401be6e:	push   esi
6401be6f:	push   esi
6401be70:	push   esi
6401be71:	push   esi
6401be72:	call   0x64013698
6401be77:	add    esp,0x14
6401be7a:	push   DWORD PTR [edi*8+0x6402fa84]
6401be81:	push   ebx
6401be82:	push   ebp
6401be83:	call   0x6401cdee
6401be88:	add    esp,0xc
6401be8b:	test   eax,eax
6401be8d:	je     0x6401be9c
6401be8f:	push   esi
6401be90:	push   esi
6401be91:	push   esi
6401be92:	push   esi
6401be93:	push   esi
6401be94:	call   0x64013698
6401be99:	add    esp,0x14
6401be9c:	push   0x12010
6401bea1:	push   0x640273e8
6401bea6:	push   ebp
6401bea7:	call   0x6401ec63
6401beac:	add    esp,0xc
6401beaf:	jmp    0x6401bee4
6401beb1:	push   0xfffffff4
6401beb3:	call   DWORD PTR ds:0x64026158
6401beb9:	mov    ebp,eax
6401bebb:	cmp    ebp,esi
6401bebd:	je     0x6401bee4
6401bebf:	cmp    ebp,0xffffffff
6401bec2:	je     0x6401bee4
6401bec4:	push   0x0
6401bec6:	lea    eax,[esp+0x14]
6401beca:	push   eax
6401becb:	lea    esi,[edi*8+0x6402fa84]
6401bed2:	push   DWORD PTR [esi]
6401bed4:	call   0x64015420
6401bed9:	pop    ecx
6401beda:	push   eax
6401bedb:	push   DWORD PTR [esi]
6401bedd:	push   ebp
6401bede:	call   DWORD PTR ds:0x64026088
6401bee4:	pop    ebp
6401bee5:	pop    edi
6401bee6:	pop    esi
6401bee7:	pop    ebx
6401bee8:	pop    ecx
6401bee9:	ret    
6401beea:	push   0x3
6401beec:	call   0x6401ee20
6401bef1:	cmp    eax,0x1
6401bef4:	pop    ecx
6401bef5:	je     0x6401bf0c
6401bef7:	push   0x3
6401bef9:	call   0x6401ee20
6401befe:	test   eax,eax
6401bf00:	pop    ecx
6401bf01:	jne    0x6401bf22
6401bf03:	cmp    DWORD PTR ds:0x64030580,0x1
6401bf0a:	jne    0x6401bf22
6401bf0c:	push   0xfc
6401bf11:	call   0x6401bd4a
6401bf16:	push   0xff
6401bf1b:	call   0x6401bd4a
6401bf20:	pop    ecx
6401bf21:	pop    ecx
6401bf22:	ret    
6401bf23:	push   ebp
6401bf24:	mov    ebp,esp
6401bf26:	sub    esp,0x8
6401bf29:	mov    DWORD PTR [ebp-0x4],edi
6401bf2c:	mov    DWORD PTR [ebp-0x8],esi
6401bf2f:	mov    esi,DWORD PTR [ebp+0xc]
6401bf32:	mov    edi,DWORD PTR [ebp+0x8]
6401bf35:	mov    ecx,DWORD PTR [ebp+0x10]
6401bf38:	shr    ecx,0x7
6401bf3b:	jmp    0x6401bf43
6401bf3d:	lea    ebx,[ebx+0x0]
6401bf43:	movdqa xmm0,XMMWORD PTR [esi]
6401bf47:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401bf4c:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401bf51:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401bf56:	movdqa XMMWORD PTR [edi],xmm0
6401bf5a:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401bf5f:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401bf64:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401bf69:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401bf6e:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401bf73:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401bf78:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401bf7d:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401bf82:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401bf87:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401bf8c:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401bf91:	lea    esi,[esi+0x80]
6401bf97:	lea    edi,[edi+0x80]
6401bf9d:	dec    ecx
6401bf9e:	jne    0x6401bf43
6401bfa0:	mov    esi,DWORD PTR [ebp-0x8]
6401bfa3:	mov    edi,DWORD PTR [ebp-0x4]
6401bfa6:	mov    esp,ebp
6401bfa8:	pop    ebp
6401bfa9:	ret    
6401bfaa:	push   ebp
6401bfab:	mov    ebp,esp
6401bfad:	sub    esp,0x1c
6401bfb0:	mov    DWORD PTR [ebp-0xc],edi
6401bfb3:	mov    DWORD PTR [ebp-0x8],esi
6401bfb6:	mov    DWORD PTR [ebp-0x4],ebx
6401bfb9:	mov    ebx,DWORD PTR [ebp+0xc]
6401bfbc:	mov    eax,ebx
6401bfbe:	cdq    
6401bfbf:	mov    ecx,eax
6401bfc1:	mov    eax,DWORD PTR [ebp+0x8]
6401bfc4:	xor    ecx,edx
6401bfc6:	sub    ecx,edx
6401bfc8:	and    ecx,0xf
6401bfcb:	xor    ecx,edx
6401bfcd:	sub    ecx,edx
6401bfcf:	cdq    
6401bfd0:	mov    edi,eax
6401bfd2:	xor    edi,edx
6401bfd4:	sub    edi,edx
6401bfd6:	and    edi,0xf
6401bfd9:	xor    edi,edx
6401bfdb:	sub    edi,edx
6401bfdd:	mov    edx,ecx
6401bfdf:	or     edx,edi
6401bfe1:	jne    0x6401c02d
6401bfe3:	mov    esi,DWORD PTR [ebp+0x10]
6401bfe6:	mov    ecx,esi
6401bfe8:	and    ecx,0x7f
6401bfeb:	mov    DWORD PTR [ebp-0x18],ecx
6401bfee:	cmp    esi,ecx
6401bff0:	je     0x6401c005
6401bff2:	sub    esi,ecx
6401bff4:	push   esi
6401bff5:	push   ebx
6401bff6:	push   eax
6401bff7:	call   0x6401bf23
6401bffc:	add    esp,0xc
6401bfff:	mov    eax,DWORD PTR [ebp+0x8]
6401c002:	mov    ecx,DWORD PTR [ebp-0x18]
6401c005:	test   ecx,ecx
6401c007:	je     0x6401c080
6401c009:	mov    ebx,DWORD PTR [ebp+0x10]
6401c00c:	mov    edx,DWORD PTR [ebp+0xc]
6401c00f:	add    edx,ebx
6401c011:	sub    edx,ecx
6401c013:	mov    DWORD PTR [ebp-0x14],edx
6401c016:	add    ebx,eax
6401c018:	sub    ebx,ecx
6401c01a:	mov    DWORD PTR [ebp-0x10],ebx
6401c01d:	mov    esi,DWORD PTR [ebp-0x14]
6401c020:	mov    edi,DWORD PTR [ebp-0x10]
6401c023:	mov    ecx,DWORD PTR [ebp-0x18]
6401c026:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c028:	mov    eax,DWORD PTR [ebp+0x8]
6401c02b:	jmp    0x6401c080
6401c02d:	cmp    ecx,edi
6401c02f:	jne    0x6401c066
6401c031:	neg    ecx
6401c033:	add    ecx,0x10
6401c036:	mov    DWORD PTR [ebp-0x1c],ecx
6401c039:	mov    esi,DWORD PTR [ebp+0xc]
6401c03c:	mov    edi,DWORD PTR [ebp+0x8]
6401c03f:	mov    ecx,DWORD PTR [ebp-0x1c]
6401c042:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c044:	mov    ecx,DWORD PTR [ebp+0x8]
6401c047:	add    ecx,DWORD PTR [ebp-0x1c]
6401c04a:	mov    edx,DWORD PTR [ebp+0xc]
6401c04d:	add    edx,DWORD PTR [ebp-0x1c]
6401c050:	mov    eax,DWORD PTR [ebp+0x10]
6401c053:	sub    eax,DWORD PTR [ebp-0x1c]
6401c056:	push   eax
6401c057:	push   edx
6401c058:	push   ecx
6401c059:	call   0x6401bfaa
6401c05e:	add    esp,0xc
6401c061:	mov    eax,DWORD PTR [ebp+0x8]
6401c064:	jmp    0x6401c080
6401c066:	mov    esi,DWORD PTR [ebp+0xc]
6401c069:	mov    edi,DWORD PTR [ebp+0x8]
6401c06c:	mov    ecx,DWORD PTR [ebp+0x10]
6401c06f:	mov    edx,ecx
6401c071:	shr    ecx,0x2
6401c074:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c076:	mov    ecx,edx
6401c078:	and    ecx,0x3
6401c07b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401c07d:	mov    eax,DWORD PTR [ebp+0x8]
6401c080:	mov    ebx,DWORD PTR [ebp-0x4]
6401c083:	mov    esi,DWORD PTR [ebp-0x8]
6401c086:	mov    edi,DWORD PTR [ebp-0xc]
6401c089:	mov    esp,ebp
6401c08b:	pop    ebp
6401c08c:	ret    
6401c08d:	int3   
6401c08e:	int3   
6401c08f:	int3   
6401c090:	push   ebx
6401c091:	push   esi
6401c092:	push   edi
6401c093:	mov    edx,DWORD PTR [esp+0x10]
6401c097:	mov    eax,DWORD PTR [esp+0x14]
6401c09b:	mov    ecx,DWORD PTR [esp+0x18]
6401c09f:	push   ebp
6401c0a0:	push   edx
6401c0a1:	push   eax
6401c0a2:	push   ecx
6401c0a3:	push   ecx
6401c0a4:	push   0x6401c120
6401c0a9:	push   DWORD PTR fs:0x0
6401c0b0:	mov    eax,ds:0x6402f09c
6401c0b5:	xor    eax,esp
6401c0b7:	mov    DWORD PTR [esp+0x8],eax
6401c0bb:	mov    DWORD PTR fs:0x0,esp
6401c0c2:	mov    eax,DWORD PTR [esp+0x30]
6401c0c6:	mov    ebx,DWORD PTR [eax+0x8]
6401c0c9:	mov    ecx,DWORD PTR [esp+0x2c]
6401c0cd:	xor    ebx,DWORD PTR [ecx]
6401c0cf:	mov    esi,DWORD PTR [eax+0xc]
6401c0d2:	cmp    esi,0xfffffffe
6401c0d5:	je     0x6401c112
6401c0d7:	mov    edx,DWORD PTR [esp+0x34]
6401c0db:	cmp    edx,0xfffffffe
6401c0de:	je     0x6401c0e4
6401c0e0:	cmp    esi,edx
6401c0e2:	jbe    0x6401c112
6401c0e4:	lea    esi,[esi+esi*2]
6401c0e7:	lea    ebx,[ebx+esi*4+0x10]
6401c0eb:	mov    ecx,DWORD PTR [ebx]
6401c0ed:	mov    DWORD PTR [eax+0xc],ecx
6401c0f0:	cmp    DWORD PTR [ebx+0x4],0x0
6401c0f4:	jne    0x6401c0c2
6401c0f6:	push   0x101
6401c0fb:	mov    eax,DWORD PTR [ebx+0x8]
6401c0fe:	call   0x6401c541
6401c103:	mov    ecx,0x1
6401c108:	mov    eax,DWORD PTR [ebx+0x8]
6401c10b:	call   0x6401c560
6401c110:	jmp    0x6401c0c2
6401c112:	pop    DWORD PTR fs:0x0
6401c119:	add    esp,0x18
6401c11c:	pop    edi
6401c11d:	pop    esi
6401c11e:	pop    ebx
6401c11f:	ret    
6401c120:	mov    ecx,DWORD PTR [esp+0x4]
6401c124:	test   DWORD PTR [ecx+0x4],0x6
6401c12b:	mov    eax,0x1
6401c130:	je     0x6401c165
6401c132:	mov    eax,DWORD PTR [esp+0x8]
6401c136:	mov    ecx,DWORD PTR [eax+0x8]
6401c139:	xor    ecx,eax
6401c13b:	call   0x64013c5c
6401c140:	push   ebp
6401c141:	mov    ebp,DWORD PTR [eax+0x18]
6401c144:	push   DWORD PTR [eax+0xc]
6401c147:	push   DWORD PTR [eax+0x10]
6401c14a:	push   DWORD PTR [eax+0x14]
6401c14d:	call   0x6401c090
6401c152:	add    esp,0xc
6401c155:	pop    ebp
6401c156:	mov    eax,DWORD PTR [esp+0x8]
6401c15a:	mov    edx,DWORD PTR [esp+0x10]
6401c15e:	mov    DWORD PTR [edx],eax
6401c160:	mov    eax,0x3
6401c165:	ret    
6401c166:	push   ebp
6401c167:	mov    ecx,DWORD PTR [esp+0x8]
6401c16b:	mov    ebp,DWORD PTR [ecx]
6401c16d:	push   DWORD PTR [ecx+0x1c]
6401c170:	push   DWORD PTR [ecx+0x18]
6401c173:	push   DWORD PTR [ecx+0x28]
6401c176:	call   0x6401c090
6401c17b:	add    esp,0xc
6401c17e:	pop    ebp
6401c17f:	ret    0x4
6401c182:	push   ebp
6401c183:	push   esi
6401c184:	push   edi
6401c185:	push   ebx
6401c186:	mov    ebp,edx
6401c188:	xor    eax,eax
6401c18a:	xor    ebx,ebx
6401c18c:	xor    edx,edx
6401c18e:	xor    esi,esi
6401c190:	xor    edi,edi
6401c192:	call   ecx
6401c194:	pop    ebx
6401c195:	pop    edi
6401c196:	pop    esi
6401c197:	pop    ebp
6401c198:	ret    
6401c199:	mov    ebp,edx
6401c19b:	mov    esi,ecx
6401c19d:	mov    eax,ecx
6401c19f:	push   0x1
6401c1a1:	call   0x6401c541
6401c1a6:	xor    eax,eax
6401c1a8:	xor    ebx,ebx
6401c1aa:	xor    ecx,ecx
6401c1ac:	xor    edx,edx
6401c1ae:	xor    edi,edi
6401c1b0:	jmp    esi
6401c1b2:	push   ebp
6401c1b3:	mov    ebp,esp
6401c1b5:	push   ebx
6401c1b6:	push   esi
6401c1b7:	push   edi
6401c1b8:	push   0x0
6401c1ba:	push   0x0
6401c1bc:	push   0x6401c1c7
6401c1c1:	push   ecx
6401c1c2:	call   0x6401fecc
6401c1c7:	pop    edi
6401c1c8:	pop    esi
6401c1c9:	pop    ebx
6401c1ca:	pop    ebp
6401c1cb:	ret    
6401c1cc:	push   ebp
6401c1cd:	mov    ebp,DWORD PTR [esp+0x8]
6401c1d1:	push   edx
6401c1d2:	push   ecx
6401c1d3:	push   DWORD PTR [esp+0x14]
6401c1d7:	call   0x6401c090
6401c1dc:	add    esp,0xc
6401c1df:	pop    ebp
6401c1e0:	ret    0x8
6401c1e3:	int3   
6401c1e4:	int3   
6401c1e5:	int3   
6401c1e6:	int3   
6401c1e7:	int3   
6401c1e8:	int3   
6401c1e9:	int3   
6401c1ea:	int3   
6401c1eb:	int3   
6401c1ec:	int3   
6401c1ed:	int3   
6401c1ee:	int3   
6401c1ef:	int3   
6401c1f0:	mov    ecx,DWORD PTR [esp+0x4]
6401c1f4:	cmp    WORD PTR [ecx],0x5a4d
6401c1f9:	je     0x6401c1fe
6401c1fb:	xor    eax,eax
6401c1fd:	ret    
6401c1fe:	mov    eax,DWORD PTR [ecx+0x3c]
6401c201:	add    eax,ecx
6401c203:	cmp    DWORD PTR [eax],0x4550
6401c209:	jne    0x6401c1fb
6401c20b:	xor    ecx,ecx
6401c20d:	cmp    WORD PTR [eax+0x18],0x10b
6401c213:	sete   cl
6401c216:	mov    eax,ecx
6401c218:	ret    
6401c219:	int3   
6401c21a:	int3   
6401c21b:	int3   
6401c21c:	int3   
6401c21d:	int3   
6401c21e:	int3   
6401c21f:	int3   
6401c220:	mov    eax,DWORD PTR [esp+0x4]
6401c224:	mov    ecx,DWORD PTR [eax+0x3c]
6401c227:	add    ecx,eax
6401c229:	movzx  eax,WORD PTR [ecx+0x14]
6401c22d:	push   ebx
6401c22e:	push   esi
6401c22f:	movzx  esi,WORD PTR [ecx+0x6]
6401c233:	xor    edx,edx
6401c235:	test   esi,esi
6401c237:	push   edi
6401c238:	lea    eax,[eax+ecx*1+0x18]
6401c23c:	jbe    0x6401c25c
6401c23e:	mov    edi,DWORD PTR [esp+0x14]
6401c242:	mov    ecx,DWORD PTR [eax+0xc]
6401c245:	cmp    edi,ecx
6401c247:	jb     0x6401c252
6401c249:	mov    ebx,DWORD PTR [eax+0x8]
6401c24c:	add    ebx,ecx
6401c24e:	cmp    edi,ebx
6401c250:	jb     0x6401c25e
6401c252:	add    edx,0x1
6401c255:	add    eax,0x28
6401c258:	cmp    edx,esi
6401c25a:	jb     0x6401c242
6401c25c:	xor    eax,eax
6401c25e:	pop    edi
6401c25f:	pop    esi
6401c260:	pop    ebx
6401c261:	ret    
6401c262:	int3   
6401c263:	int3   
6401c264:	int3   
6401c265:	int3   
6401c266:	int3   
6401c267:	int3   
6401c268:	int3   
6401c269:	int3   
6401c26a:	int3   
6401c26b:	int3   
6401c26c:	int3   
6401c26d:	int3   
6401c26e:	int3   
6401c26f:	int3   
6401c270:	push   ebp
6401c271:	mov    ebp,esp
6401c273:	push   0xfffffffe
6401c275:	push   0x6402c338
6401c27a:	push   0x64015280
6401c27f:	mov    eax,fs:0x0
6401c285:	push   eax
6401c286:	sub    esp,0x8
6401c289:	push   ebx
6401c28a:	push   esi
6401c28b:	push   edi
6401c28c:	mov    eax,ds:0x6402f09c
6401c291:	xor    DWORD PTR [ebp-0x8],eax
6401c294:	xor    eax,ebp
6401c296:	push   eax
6401c297:	lea    eax,[ebp-0x10]
6401c29a:	mov    fs:0x0,eax
6401c2a0:	mov    DWORD PTR [ebp-0x18],esp
6401c2a3:	mov    DWORD PTR [ebp-0x4],0x0
6401c2aa:	push   0x64000000
6401c2af:	call   0x6401c1f0
6401c2b4:	add    esp,0x4
6401c2b7:	test   eax,eax
6401c2b9:	je     0x6401c310
6401c2bb:	mov    eax,DWORD PTR [ebp+0x8]
6401c2be:	sub    eax,0x64000000
6401c2c3:	push   eax
6401c2c4:	push   0x64000000
6401c2c9:	call   0x6401c220
6401c2ce:	add    esp,0x8
6401c2d1:	test   eax,eax
6401c2d3:	je     0x6401c310
6401c2d5:	mov    eax,DWORD PTR [eax+0x24]
6401c2d8:	shr    eax,0x1f
6401c2db:	not    eax
6401c2dd:	and    eax,0x1
6401c2e0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c2e7:	mov    ecx,DWORD PTR [ebp-0x10]
6401c2ea:	mov    DWORD PTR fs:0x0,ecx
6401c2f1:	pop    ecx
6401c2f2:	pop    edi
6401c2f3:	pop    esi
6401c2f4:	pop    ebx
6401c2f5:	mov    esp,ebp
6401c2f7:	pop    ebp
6401c2f8:	ret    
6401c2f9:	mov    eax,DWORD PTR [ebp-0x14]
6401c2fc:	mov    ecx,DWORD PTR [eax]
6401c2fe:	mov    eax,DWORD PTR [ecx]
6401c300:	xor    edx,edx
6401c302:	cmp    eax,0xc0000005
6401c307:	sete   dl
6401c30a:	mov    eax,edx
6401c30c:	ret    
6401c30d:	mov    esp,DWORD PTR [ebp-0x18]
6401c310:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c317:	xor    eax,eax
6401c319:	mov    ecx,DWORD PTR [ebp-0x10]
6401c31c:	mov    DWORD PTR fs:0x0,ecx
6401c323:	pop    ecx
6401c324:	pop    edi
6401c325:	pop    esi
6401c326:	pop    ebx
6401c327:	mov    esp,ebp
6401c329:	pop    ebp
6401c32a:	ret    
6401c32b:	xor    eax,eax
6401c32d:	inc    eax
6401c32e:	cmp    DWORD PTR [esp+0x4],0x0
6401c333:	jne    0x6401c337
6401c335:	xor    eax,eax
6401c337:	ret    
6401c338:	push   ebp
6401c339:	lea    ebp,[esp-0x2a8]
6401c340:	sub    esp,0x328
6401c346:	mov    eax,ds:0x6402f09c
6401c34b:	xor    eax,ebp
6401c34d:	mov    DWORD PTR [ebp+0x2a4],eax
6401c353:	test   BYTE PTR ds:0x6402fb38,0x1
6401c35a:	push   esi
6401c35b:	je     0x6401c365
6401c35d:	push   0xa
6401c35f:	call   0x6401bd4a
6401c364:	pop    ecx
6401c365:	call   0x6401c6ed
6401c36a:	test   eax,eax
6401c36c:	je     0x6401c376
6401c36e:	push   0x16
6401c370:	call   0x6401c6fa
6401c375:	pop    ecx
6401c376:	test   BYTE PTR ds:0x6402fb38,0x2
6401c37d:	je     0x6401c423
6401c383:	mov    DWORD PTR [ebp+0x88],eax
6401c389:	mov    DWORD PTR [ebp+0x84],ecx
6401c38f:	mov    DWORD PTR [ebp+0x80],edx
6401c395:	mov    DWORD PTR [ebp+0x7c],ebx
6401c398:	mov    DWORD PTR [ebp+0x78],esi
6401c39b:	mov    DWORD PTR [ebp+0x74],edi
6401c39e:	data16 mov WORD PTR [ebp+0xa0],ss
6401c3a5:	data16 mov WORD PTR [ebp+0x94],cs
6401c3ac:	data16 mov WORD PTR [ebp+0x70],ds
6401c3b0:	data16 mov WORD PTR [ebp+0x6c],es
6401c3b4:	data16 mov WORD PTR [ebp+0x68],fs
6401c3b8:	data16 mov WORD PTR [ebp+0x64],gs
6401c3bc:	pushf  
6401c3bd:	pop    DWORD PTR [ebp+0x98]
6401c3c3:	mov    esi,DWORD PTR [ebp+0x2ac]
6401c3c9:	lea    eax,[ebp+0x2ac]
6401c3cf:	mov    DWORD PTR [ebp+0x9c],eax
6401c3d5:	mov    DWORD PTR [ebp-0x28],0x10001
6401c3dc:	mov    DWORD PTR [ebp+0x90],esi
6401c3e2:	mov    eax,DWORD PTR [eax-0x4]
6401c3e5:	push   0x50
6401c3e7:	mov    DWORD PTR [ebp+0x8c],eax
6401c3ed:	lea    eax,[ebp-0x80]
6401c3f0:	push   0x0
6401c3f2:	push   eax
6401c3f3:	call   0x64014360
6401c3f8:	lea    eax,[ebp-0x80]
6401c3fb:	add    esp,0xc
6401c3fe:	mov    DWORD PTR [ebp-0x30],eax
6401c401:	lea    eax,[ebp-0x28]
6401c404:	push   0x0
6401c406:	mov    DWORD PTR [ebp-0x80],0x40000015
6401c40d:	mov    DWORD PTR [ebp-0x74],esi
6401c410:	mov    DWORD PTR [ebp-0x2c],eax
6401c413:	call   DWORD PTR ds:0x64026114
6401c419:	lea    eax,[ebp-0x30]
6401c41c:	push   eax
6401c41d:	call   DWORD PTR ds:0x64026110
6401c423:	push   0x3
6401c425:	call   0x64017336
6401c42a:	int3   
6401c42b:	int3   
6401c42c:	push   ebp
6401c42d:	mov    ebp,esp
6401c42f:	push   ebx
6401c430:	push   esi
6401c431:	push   edi
6401c432:	push   ebp
6401c433:	push   0x0
6401c435:	push   0x0
6401c437:	push   0x6401c444
6401c43c:	push   DWORD PTR [ebp+0x8]
6401c43f:	call   0x6401fecc
6401c444:	pop    ebp
6401c445:	pop    edi
6401c446:	pop    esi
6401c447:	pop    ebx
6401c448:	mov    esp,ebp
6401c44a:	pop    ebp
6401c44b:	ret    
6401c44c:	mov    ecx,DWORD PTR [esp+0x4]
6401c450:	test   DWORD PTR [ecx+0x4],0x6
6401c457:	mov    eax,0x1
6401c45c:	je     0x6401c490
6401c45e:	mov    eax,DWORD PTR [esp+0x14]
6401c462:	mov    ecx,DWORD PTR [eax-0x4]
6401c465:	xor    ecx,eax
6401c467:	call   0x64013c5c
6401c46c:	push   ebp
6401c46d:	mov    ebp,DWORD PTR [eax+0x10]
6401c470:	mov    edx,DWORD PTR [eax+0x28]
6401c473:	push   edx
6401c474:	mov    edx,DWORD PTR [eax+0x24]
6401c477:	push   edx
6401c478:	call   0x6401c491
6401c47d:	add    esp,0x8
6401c480:	pop    ebp
6401c481:	mov    eax,DWORD PTR [esp+0x8]
6401c485:	mov    edx,DWORD PTR [esp+0x10]
6401c489:	mov    DWORD PTR [edx],eax
6401c48b:	mov    eax,0x3
6401c490:	ret    
6401c491:	push   ebx
6401c492:	push   esi
6401c493:	push   edi
6401c494:	mov    eax,DWORD PTR [esp+0x10]
6401c498:	push   ebp
6401c499:	push   eax
6401c49a:	push   0xfffffffe
6401c49c:	push   0x6401c44c
6401c4a1:	push   DWORD PTR fs:0x0
6401c4a8:	mov    eax,ds:0x6402f09c
6401c4ad:	xor    eax,esp
6401c4af:	push   eax
6401c4b0:	lea    eax,[esp+0x4]
6401c4b4:	mov    fs:0x0,eax
6401c4ba:	mov    eax,DWORD PTR [esp+0x28]
6401c4be:	mov    ebx,DWORD PTR [eax+0x8]
6401c4c1:	mov    esi,DWORD PTR [eax+0xc]
6401c4c4:	cmp    esi,0xffffffff
6401c4c7:	je     0x6401c503
6401c4c9:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401c4ce:	je     0x6401c4d6
6401c4d0:	cmp    esi,DWORD PTR [esp+0x2c]
6401c4d4:	jbe    0x6401c503
6401c4d6:	lea    esi,[esi+esi*2]
6401c4d9:	mov    ecx,DWORD PTR [ebx+esi*4]
6401c4dc:	mov    DWORD PTR [esp+0xc],ecx
6401c4e0:	mov    DWORD PTR [eax+0xc],ecx
6401c4e3:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401c4e8:	jne    0x6401c501
6401c4ea:	push   0x101
6401c4ef:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401c4f3:	call   0x6401c541
6401c4f8:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401c4fc:	call   0x6401c560
6401c501:	jmp    0x6401c4ba
6401c503:	mov    ecx,DWORD PTR [esp+0x4]
6401c507:	mov    DWORD PTR fs:0x0,ecx
6401c50e:	add    esp,0x18
6401c511:	pop    edi
6401c512:	pop    esi
6401c513:	pop    ebx
6401c514:	ret    
6401c515:	xor    eax,eax
6401c517:	mov    ecx,DWORD PTR fs:0x0
6401c51e:	cmp    DWORD PTR [ecx+0x4],0x6401c44c
6401c525:	jne    0x6401c537
6401c527:	mov    edx,DWORD PTR [ecx+0xc]
6401c52a:	mov    edx,DWORD PTR [edx+0xc]
6401c52d:	cmp    DWORD PTR [ecx+0x8],edx
6401c530:	jne    0x6401c537
6401c532:	mov    eax,0x1
6401c537:	ret    
6401c538:	push   ebx
6401c539:	push   ecx
6401c53a:	mov    ebx,0x6402fb3c
6401c53f:	jmp    0x6401c54c
6401c541:	push   ebx
6401c542:	push   ecx
6401c543:	mov    ebx,0x6402fb3c
6401c548:	mov    ecx,DWORD PTR [esp+0xc]
6401c54c:	mov    DWORD PTR [ebx+0x8],ecx
6401c54f:	mov    DWORD PTR [ebx+0x4],eax
6401c552:	mov    DWORD PTR [ebx+0xc],ebp
6401c555:	push   ebp
6401c556:	push   ecx
6401c557:	push   eax
6401c558:	pop    eax
6401c559:	pop    ecx
6401c55a:	pop    ebp
6401c55b:	pop    ecx
6401c55c:	pop    ebx
6401c55d:	ret    0x4
6401c560:	call   eax
6401c562:	ret    
6401c563:	push   0xc
6401c565:	push   0x6402c358
6401c56a:	call   0x64015220
6401c56f:	mov    ecx,DWORD PTR [ebp+0x8]
6401c572:	xor    edi,edi
6401c574:	cmp    ecx,edi
6401c576:	jbe    0x6401c5a6
6401c578:	push   0xffffffe0
6401c57a:	pop    eax
6401c57b:	xor    edx,edx
6401c57d:	div    ecx
6401c57f:	cmp    eax,DWORD PTR [ebp+0xc]
6401c582:	sbb    eax,eax
6401c584:	inc    eax
6401c585:	jne    0x6401c5a6
6401c587:	call   0x64015a20
6401c58c:	mov    DWORD PTR [eax],0xc
6401c592:	push   edi
6401c593:	push   edi
6401c594:	push   edi
6401c595:	push   edi
6401c596:	push   edi
6401c597:	call   0x64013794
6401c59c:	add    esp,0x14
6401c59f:	xor    eax,eax
6401c5a1:	jmp    0x6401c67b
6401c5a6:	imul   ecx,DWORD PTR [ebp+0xc]
6401c5aa:	mov    esi,ecx
6401c5ac:	mov    DWORD PTR [ebp+0x8],esi
6401c5af:	cmp    esi,edi
6401c5b1:	jne    0x6401c5b6
6401c5b3:	xor    esi,esi
6401c5b5:	inc    esi
6401c5b6:	xor    ebx,ebx
6401c5b8:	mov    DWORD PTR [ebp-0x1c],ebx
6401c5bb:	cmp    esi,0xffffffe0
6401c5be:	ja     0x6401c629
6401c5c0:	cmp    DWORD PTR ds:0x640344fc,0x3
6401c5c7:	jne    0x6401c614
6401c5c9:	add    esi,0xf
6401c5cc:	and    esi,0xfffffff0
6401c5cf:	mov    DWORD PTR [ebp+0xc],esi
6401c5d2:	mov    eax,DWORD PTR [ebp+0x8]
6401c5d5:	cmp    eax,DWORD PTR ds:0x640344ec
6401c5db:	ja     0x6401c614
6401c5dd:	push   0x4
6401c5df:	call   0x6401b21a
6401c5e4:	pop    ecx
6401c5e5:	mov    DWORD PTR [ebp-0x4],edi
6401c5e8:	push   DWORD PTR [ebp+0x8]
6401c5eb:	call   0x6401ba67
6401c5f0:	pop    ecx
6401c5f1:	mov    DWORD PTR [ebp-0x1c],eax
6401c5f4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c5fb:	call   0x6401c65f
6401c600:	mov    ebx,DWORD PTR [ebp-0x1c]
6401c603:	cmp    ebx,edi
6401c605:	je     0x6401c618
6401c607:	push   DWORD PTR [ebp+0x8]
6401c60a:	push   edi
6401c60b:	push   ebx
6401c60c:	call   0x64014360
6401c611:	add    esp,0xc
6401c614:	cmp    ebx,edi
6401c616:	jne    0x6401c679
6401c618:	push   esi
6401c619:	push   0x8
6401c61b:	push   DWORD PTR ds:0x64030a6c
6401c621:	call   DWORD PTR ds:0x640260f8
6401c627:	mov    ebx,eax
6401c629:	cmp    ebx,edi
6401c62b:	jne    0x6401c679
6401c62d:	cmp    DWORD PTR ds:0x64030ee4,edi
6401c633:	je     0x6401c668
6401c635:	push   esi
6401c636:	call   0x6401609b
6401c63b:	pop    ecx
6401c63c:	test   eax,eax
6401c63e:	jne    0x6401c5b6
6401c644:	mov    eax,DWORD PTR [ebp+0x10]
6401c647:	cmp    eax,edi
6401c649:	je     0x6401c59f
6401c64f:	mov    DWORD PTR [eax],0xc
6401c655:	jmp    0x6401c59f
6401c65a:	xor    edi,edi
6401c65c:	mov    esi,DWORD PTR [ebp+0xc]
6401c65f:	push   0x4
6401c661:	call   0x6401b142
6401c666:	pop    ecx
6401c667:	ret    
6401c668:	cmp    ebx,edi
6401c66a:	jne    0x6401c679
6401c66c:	mov    eax,DWORD PTR [ebp+0x10]
6401c66f:	cmp    eax,edi
6401c671:	je     0x6401c679
6401c673:	mov    DWORD PTR [eax],0xc
6401c679:	mov    eax,ebx
6401c67b:	call   0x64015265
6401c680:	ret    
6401c681:	push   esi
6401c682:	push   edi
6401c683:	xor    edi,edi
6401c685:	lea    esi,[edi+0x6402fb4c]
6401c68b:	push   DWORD PTR [esi]
6401c68d:	call   0x64015ad8
6401c692:	add    edi,0x4
6401c695:	cmp    edi,0x28
6401c698:	pop    ecx
6401c699:	mov    DWORD PTR [esi],eax
6401c69b:	jb     0x6401c685
6401c69d:	pop    edi
6401c69e:	pop    esi
6401c69f:	ret    
6401c6a0:	mov    eax,DWORD PTR [esp+0x4]
6401c6a4:	mov    ds:0x64030f24,eax
6401c6a9:	mov    ds:0x64030f28,eax
6401c6ae:	mov    ds:0x64030f2c,eax
6401c6b3:	mov    ds:0x64030f30,eax
6401c6b8:	ret    
6401c6b9:	mov    eax,DWORD PTR [esp+0x4]
6401c6bd:	mov    ecx,DWORD PTR ds:0x6402f94c
6401c6c3:	push   esi
6401c6c4:	cmp    DWORD PTR [eax+0x4],edx
6401c6c7:	je     0x6401c6d9
6401c6c9:	mov    esi,ecx
6401c6cb:	imul   esi,esi,0xc
6401c6ce:	add    esi,DWORD PTR [esp+0x8]
6401c6d2:	add    eax,0xc
6401c6d5:	cmp    eax,esi
6401c6d7:	jb     0x6401c6c4
6401c6d9:	imul   ecx,ecx,0xc
6401c6dc:	add    ecx,DWORD PTR [esp+0x8]
6401c6e0:	pop    esi
6401c6e1:	cmp    eax,ecx
6401c6e3:	jae    0x6401c6ea
6401c6e5:	cmp    DWORD PTR [eax+0x4],edx
6401c6e8:	je     0x6401c6ec
6401c6ea:	xor    eax,eax
6401c6ec:	ret    
6401c6ed:	push   DWORD PTR ds:0x64030f2c
6401c6f3:	call   0x64015b4f
6401c6f8:	pop    ecx
6401c6f9:	ret    
6401c6fa:	push   0x20
6401c6fc:	push   0x6402c378
6401c701:	call   0x64015220
6401c706:	xor    edi,edi
6401c708:	mov    DWORD PTR [ebp-0x1c],edi
6401c70b:	mov    DWORD PTR [ebp-0x28],edi
6401c70e:	mov    ebx,DWORD PTR [ebp+0x8]
6401c711:	cmp    ebx,0xb
6401c714:	jg     0x6401c762
6401c716:	je     0x6401c72d
6401c718:	mov    eax,ebx
6401c71a:	push   0x2
6401c71c:	pop    ecx
6401c71d:	sub    eax,ecx
6401c71f:	je     0x6401c743
6401c721:	sub    eax,ecx
6401c723:	je     0x6401c72d
6401c725:	sub    eax,ecx
6401c727:	je     0x6401c78d
6401c729:	sub    eax,ecx
6401c72b:	jne    0x6401c771
6401c72d:	call   0x64015cf4
6401c732:	mov    edi,eax
6401c734:	mov    DWORD PTR [ebp-0x28],edi
6401c737:	test   edi,edi
6401c739:	jne    0x6401c74f
6401c73b:	or     eax,0xffffffff
6401c73e:	jmp    0x6401c8a4
6401c743:	mov    esi,0x64030f24
6401c748:	mov    eax,ds:0x64030f24
6401c74d:	jmp    0x6401c7af
6401c74f:	push   DWORD PTR [edi+0x5c]
6401c752:	mov    edx,ebx
6401c754:	call   0x6401c6b9
6401c759:	mov    esi,eax
6401c75b:	add    esi,0x8
6401c75e:	mov    eax,DWORD PTR [esi]
6401c760:	jmp    0x6401c7bc
6401c762:	mov    eax,ebx
6401c764:	sub    eax,0xf
6401c767:	je     0x6401c7a5
6401c769:	sub    eax,0x6
6401c76c:	je     0x6401c799
6401c76e:	dec    eax
6401c76f:	je     0x6401c78d
6401c771:	call   0x64015a20
6401c776:	mov    DWORD PTR [eax],0x16
6401c77c:	xor    eax,eax
6401c77e:	push   eax
6401c77f:	push   eax
6401c780:	push   eax
6401c781:	push   eax
6401c782:	push   eax
6401c783:	call   0x64013794
6401c788:	add    esp,0x14
6401c78b:	jmp    0x6401c73b
6401c78d:	mov    esi,0x64030f2c
6401c792:	mov    eax,ds:0x64030f2c
6401c797:	jmp    0x6401c7af
6401c799:	mov    esi,0x64030f28
6401c79e:	mov    eax,ds:0x64030f28
6401c7a3:	jmp    0x6401c7af
6401c7a5:	mov    esi,0x64030f30
6401c7aa:	mov    eax,ds:0x64030f30
6401c7af:	mov    DWORD PTR [ebp-0x1c],0x1
6401c7b6:	push   eax
6401c7b7:	call   0x64015b4f
6401c7bc:	mov    DWORD PTR [ebp-0x20],eax
6401c7bf:	pop    ecx
6401c7c0:	xor    eax,eax
6401c7c2:	cmp    DWORD PTR [ebp-0x20],0x1
6401c7c6:	je     0x6401c8a4
6401c7cc:	cmp    DWORD PTR [ebp-0x20],eax
6401c7cf:	jne    0x6401c7d8
6401c7d1:	push   0x3
6401c7d3:	call   0x64017336
6401c7d8:	cmp    DWORD PTR [ebp-0x1c],eax
6401c7db:	je     0x6401c7e4
6401c7dd:	push   eax
6401c7de:	call   0x6401b21a
6401c7e3:	pop    ecx
6401c7e4:	xor    eax,eax
6401c7e6:	mov    DWORD PTR [ebp-0x4],eax
6401c7e9:	cmp    ebx,0x8
6401c7ec:	je     0x6401c7f8
6401c7ee:	cmp    ebx,0xb
6401c7f1:	je     0x6401c7f8
6401c7f3:	cmp    ebx,0x4
6401c7f6:	jne    0x6401c813
6401c7f8:	mov    ecx,DWORD PTR [edi+0x60]
6401c7fb:	mov    DWORD PTR [ebp-0x2c],ecx
6401c7fe:	mov    DWORD PTR [edi+0x60],eax
6401c801:	cmp    ebx,0x8
6401c804:	jne    0x6401c846
6401c806:	mov    ecx,DWORD PTR [edi+0x64]
6401c809:	mov    DWORD PTR [ebp-0x30],ecx
6401c80c:	mov    DWORD PTR [edi+0x64],0x8c
6401c813:	cmp    ebx,0x8
6401c816:	jne    0x6401c846
6401c818:	mov    ecx,DWORD PTR ds:0x6402f940
6401c81e:	mov    DWORD PTR [ebp-0x24],ecx
6401c821:	mov    ecx,DWORD PTR ds:0x6402f944
6401c827:	mov    edx,DWORD PTR ds:0x6402f940
6401c82d:	add    ecx,edx
6401c82f:	cmp    DWORD PTR [ebp-0x24],ecx
6401c832:	jge    0x6401c84d
6401c834:	mov    ecx,DWORD PTR [ebp-0x24]
6401c837:	imul   ecx,ecx,0xc
6401c83a:	mov    edx,DWORD PTR [edi+0x5c]
6401c83d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401c841:	inc    DWORD PTR [ebp-0x24]
6401c844:	jmp    0x6401c821
6401c846:	call   0x64015b46
6401c84b:	mov    DWORD PTR [esi],eax
6401c84d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c854:	call   0x6401c86e
6401c859:	cmp    ebx,0x8
6401c85c:	jne    0x6401c87d
6401c85e:	push   DWORD PTR [edi+0x64]
6401c861:	push   ebx
6401c862:	call   DWORD PTR [ebp-0x20]
6401c865:	pop    ecx
6401c866:	jmp    0x6401c881
6401c868:	mov    ebx,DWORD PTR [ebp+0x8]
6401c86b:	mov    edi,DWORD PTR [ebp-0x28]
6401c86e:	cmp    DWORD PTR [ebp-0x1c],0x0
6401c872:	je     0x6401c87c
6401c874:	push   0x0
6401c876:	call   0x6401b142
6401c87b:	pop    ecx
6401c87c:	ret    
6401c87d:	push   ebx
6401c87e:	call   DWORD PTR [ebp-0x20]
6401c881:	pop    ecx
6401c882:	cmp    ebx,0x8
6401c885:	je     0x6401c891
6401c887:	cmp    ebx,0xb
6401c88a:	je     0x6401c891
6401c88c:	cmp    ebx,0x4
6401c88f:	jne    0x6401c8a2
6401c891:	mov    eax,DWORD PTR [ebp-0x2c]
6401c894:	mov    DWORD PTR [edi+0x60],eax
6401c897:	cmp    ebx,0x8
6401c89a:	jne    0x6401c8a2
6401c89c:	mov    eax,DWORD PTR [ebp-0x30]
6401c89f:	mov    DWORD PTR [edi+0x64],eax
6401c8a2:	xor    eax,eax
6401c8a4:	call   0x64015265
6401c8a9:	ret    
6401c8aa:	mov    eax,DWORD PTR [esp+0x4]
6401c8ae:	mov    ds:0x64030f38,eax
6401c8b3:	ret    
6401c8b4:	mov    eax,DWORD PTR [esp+0x4]
6401c8b8:	mov    ds:0x64030f44,eax
6401c8bd:	ret    
6401c8be:	mov    eax,DWORD PTR [esp+0x4]
6401c8c2:	mov    ds:0x64030f48,eax
6401c8c7:	ret    
6401c8c8:	push   DWORD PTR [esp+0x4]
6401c8cc:	call   DWORD PTR ds:0x6402601c
6401c8d2:	xor    eax,eax
6401c8d4:	inc    eax
6401c8d5:	ret    0x8
6401c8d8:	push   0x14
6401c8da:	push   0x6402c398
6401c8df:	call   0x64015220
6401c8e4:	xor    edi,edi
6401c8e6:	mov    DWORD PTR [ebp-0x1c],edi
6401c8e9:	push   DWORD PTR ds:0x64030f48
6401c8ef:	call   0x64015b4f
6401c8f4:	pop    ecx
6401c8f5:	mov    esi,eax
6401c8f7:	cmp    esi,edi
6401c8f9:	jne    0x6401c94e
6401c8fb:	lea    eax,[ebp-0x1c]
6401c8fe:	push   eax
6401c8ff:	call   0x6401714f
6401c904:	pop    ecx
6401c905:	cmp    eax,edi
6401c907:	je     0x6401c916
6401c909:	push   edi
6401c90a:	push   edi
6401c90b:	push   edi
6401c90c:	push   edi
6401c90d:	push   edi
6401c90e:	call   0x64013698
6401c913:	add    esp,0x14
6401c916:	cmp    DWORD PTR [ebp-0x1c],0x1
6401c91a:	je     0x6401c93d
6401c91c:	push   0x64027b90
6401c921:	call   DWORD PTR ds:0x64026128
6401c927:	cmp    eax,edi
6401c929:	je     0x6401c93d
6401c92b:	push   0x64027b68
6401c930:	push   eax
6401c931:	call   DWORD PTR ds:0x64026014
6401c937:	mov    esi,eax
6401c939:	cmp    esi,edi
6401c93b:	jne    0x6401c942
6401c93d:	mov    esi,0x6401c8c8
6401c942:	push   esi
6401c943:	call   0x64015ad8
6401c948:	pop    ecx
6401c949:	mov    ds:0x64030f48,eax
6401c94e:	mov    DWORD PTR [ebp-0x4],edi
6401c951:	push   DWORD PTR [ebp+0xc]
6401c954:	push   DWORD PTR [ebp+0x8]
6401c957:	call   esi
6401c959:	mov    DWORD PTR [ebp-0x20],eax
6401c95c:	jmp    0x6401c98d
6401c95e:	mov    eax,DWORD PTR [ebp-0x14]
6401c961:	mov    eax,DWORD PTR [eax]
6401c963:	mov    eax,DWORD PTR [eax]
6401c965:	mov    DWORD PTR [ebp-0x24],eax
6401c968:	xor    ecx,ecx
6401c96a:	cmp    eax,0xc0000017
6401c96f:	sete   cl
6401c972:	mov    eax,ecx
6401c974:	ret    
6401c975:	mov    esp,DWORD PTR [ebp-0x18]
6401c978:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401c97f:	jne    0x6401c989
6401c981:	push   0x8
6401c983:	call   DWORD PTR ds:0x64026060
6401c989:	and    DWORD PTR [ebp-0x20],0x0
6401c98d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401c994:	mov    eax,DWORD PTR [ebp-0x20]
6401c997:	call   0x64015265
6401c99c:	ret    
6401c99d:	push   ebp
6401c99e:	mov    ebp,esp
6401c9a0:	push   ecx
6401c9a1:	push   ecx
6401c9a2:	mov    eax,ds:0x6402f09c
6401c9a7:	xor    eax,ebp
6401c9a9:	mov    DWORD PTR [ebp-0x4],eax
6401c9ac:	mov    eax,ds:0x64030f4c
6401c9b1:	push   ebx
6401c9b2:	push   esi
6401c9b3:	xor    ebx,ebx
6401c9b5:	cmp    eax,ebx
6401c9b7:	push   edi
6401c9b8:	mov    edi,ecx
6401c9ba:	jne    0x6401c9f6
6401c9bc:	lea    eax,[ebp-0x8]
6401c9bf:	push   eax
6401c9c0:	xor    esi,esi
6401c9c2:	inc    esi
6401c9c3:	push   esi
6401c9c4:	push   0x640286dc
6401c9c9:	push   esi
6401c9ca:	call   DWORD PTR ds:0x640260bc
6401c9d0:	test   eax,eax
6401c9d2:	je     0x6401c9dc
6401c9d4:	mov    DWORD PTR ds:0x64030f4c,esi
6401c9da:	jmp    0x6401ca10
6401c9dc:	call   DWORD PTR ds:0x64026044
6401c9e2:	cmp    eax,0x78
6401c9e5:	jne    0x6401c9f1
6401c9e7:	push   0x2
6401c9e9:	pop    eax
6401c9ea:	mov    ds:0x64030f4c,eax
6401c9ef:	jmp    0x6401c9f6
6401c9f1:	mov    eax,ds:0x64030f4c
6401c9f6:	cmp    eax,0x2
6401c9f9:	je     0x6401cace
6401c9ff:	cmp    eax,ebx
6401ca01:	je     0x6401cace
6401ca07:	cmp    eax,0x1
6401ca0a:	jne    0x6401caf8
6401ca10:	cmp    DWORD PTR [ebp+0x18],ebx
6401ca13:	mov    DWORD PTR [ebp-0x8],ebx
6401ca16:	jne    0x6401ca20
6401ca18:	mov    eax,DWORD PTR [edi]
6401ca1a:	mov    eax,DWORD PTR [eax+0x4]
6401ca1d:	mov    DWORD PTR [ebp+0x18],eax
6401ca20:	mov    esi,DWORD PTR ds:0x64026024
6401ca26:	xor    eax,eax
6401ca28:	cmp    DWORD PTR [ebp+0x20],ebx
6401ca2b:	push   ebx
6401ca2c:	push   ebx
6401ca2d:	push   DWORD PTR [ebp+0x10]
6401ca30:	setne  al
6401ca33:	push   DWORD PTR [ebp+0xc]
6401ca36:	lea    eax,[eax*8+0x1]
6401ca3d:	push   eax
6401ca3e:	push   DWORD PTR [ebp+0x18]
6401ca41:	call   esi
6401ca43:	mov    edi,eax
6401ca45:	cmp    edi,ebx
6401ca47:	je     0x6401caf8
6401ca4d:	jle    0x6401ca8b
6401ca4f:	cmp    edi,0x7ffffff0
6401ca55:	ja     0x6401ca8b
6401ca57:	lea    eax,[edi+edi*1+0x8]
6401ca5b:	cmp    eax,0x400
6401ca60:	ja     0x6401ca75
6401ca62:	call   0x640143e0
6401ca67:	mov    eax,esp
6401ca69:	cmp    eax,ebx
6401ca6b:	je     0x6401ca89
6401ca6d:	mov    DWORD PTR [eax],0xcccc
6401ca73:	jmp    0x6401ca86
6401ca75:	push   eax
6401ca76:	call   0x64014bd3
6401ca7b:	cmp    eax,ebx
6401ca7d:	pop    ecx
6401ca7e:	je     0x6401ca89
6401ca80:	mov    DWORD PTR [eax],0xdddd
6401ca86:	add    eax,0x8
6401ca89:	mov    ebx,eax
6401ca8b:	test   ebx,ebx
6401ca8d:	je     0x6401caf8
6401ca8f:	lea    eax,[edi+edi*1]
6401ca92:	push   eax
6401ca93:	push   0x0
6401ca95:	push   ebx
6401ca96:	call   0x64014360
6401ca9b:	add    esp,0xc
6401ca9e:	push   edi
6401ca9f:	push   ebx
6401caa0:	push   DWORD PTR [ebp+0x10]
6401caa3:	push   DWORD PTR [ebp+0xc]
6401caa6:	push   0x1
6401caa8:	push   DWORD PTR [ebp+0x18]
6401caab:	call   esi
6401caad:	test   eax,eax
6401caaf:	je     0x6401cac2
6401cab1:	push   DWORD PTR [ebp+0x14]
6401cab4:	push   eax
6401cab5:	push   ebx
6401cab6:	push   DWORD PTR [ebp+0x8]
6401cab9:	call   DWORD PTR ds:0x640260bc
6401cabf:	mov    DWORD PTR [ebp-0x8],eax
6401cac2:	push   ebx
6401cac3:	call   0x6401416c
6401cac8:	mov    eax,DWORD PTR [ebp-0x8]
6401cacb:	pop    ecx
6401cacc:	jmp    0x6401cb43
6401cace:	xor    esi,esi
6401cad0:	cmp    DWORD PTR [ebp+0x1c],ebx
6401cad3:	jne    0x6401cadd
6401cad5:	mov    eax,DWORD PTR [edi]
6401cad7:	mov    eax,DWORD PTR [eax+0x14]
6401cada:	mov    DWORD PTR [ebp+0x1c],eax
6401cadd:	cmp    DWORD PTR [ebp+0x18],ebx
6401cae0:	jne    0x6401caea
6401cae2:	mov    eax,DWORD PTR [edi]
6401cae4:	mov    eax,DWORD PTR [eax+0x4]
6401cae7:	mov    DWORD PTR [ebp+0x18],eax
6401caea:	push   DWORD PTR [ebp+0x1c]
6401caed:	call   0x6401e7cf
6401caf2:	cmp    eax,0xffffffff
6401caf5:	pop    ecx
6401caf6:	jne    0x6401cafc
6401caf8:	xor    eax,eax
6401cafa:	jmp    0x6401cb43
6401cafc:	cmp    eax,DWORD PTR [ebp+0x18]
6401caff:	je     0x6401cb1f
6401cb01:	push   ebx
6401cb02:	push   ebx
6401cb03:	lea    ecx,[ebp+0x10]
6401cb06:	push   ecx
6401cb07:	push   DWORD PTR [ebp+0xc]
6401cb0a:	push   eax
6401cb0b:	push   DWORD PTR [ebp+0x18]
6401cb0e:	call   0x6401e816
6401cb13:	mov    esi,eax
6401cb15:	add    esp,0x18
6401cb18:	cmp    esi,ebx
6401cb1a:	je     0x6401caf8
6401cb1c:	mov    DWORD PTR [ebp+0xc],esi
6401cb1f:	push   DWORD PTR [ebp+0x14]
6401cb22:	push   DWORD PTR [ebp+0x10]
6401cb25:	push   DWORD PTR [ebp+0xc]
6401cb28:	push   DWORD PTR [ebp+0x8]
6401cb2b:	push   DWORD PTR [ebp+0x1c]
6401cb2e:	call   DWORD PTR ds:0x640260c0
6401cb34:	cmp    esi,ebx
6401cb36:	mov    edi,eax
6401cb38:	je     0x6401cb41
6401cb3a:	push   esi
6401cb3b:	call   0x64014af6
6401cb40:	pop    ecx
6401cb41:	mov    eax,edi
6401cb43:	lea    esp,[ebp-0x14]
6401cb46:	pop    edi
6401cb47:	pop    esi
6401cb48:	pop    ebx
6401cb49:	mov    ecx,DWORD PTR [ebp-0x4]
6401cb4c:	xor    ecx,ebp
6401cb4e:	call   0x64013c5c
6401cb53:	leave  
6401cb54:	ret    
6401cb55:	push   ebp
6401cb56:	mov    ebp,esp
6401cb58:	sub    esp,0x10
6401cb5b:	push   DWORD PTR [ebp+0x8]
6401cb5e:	lea    ecx,[ebp-0x10]
6401cb61:	call   0x64013dff
6401cb66:	push   DWORD PTR [ebp+0x24]
6401cb69:	lea    ecx,[ebp-0x10]
6401cb6c:	push   DWORD PTR [ebp+0x20]
6401cb6f:	push   DWORD PTR [ebp+0x1c]
6401cb72:	push   DWORD PTR [ebp+0x18]
6401cb75:	push   DWORD PTR [ebp+0x14]
6401cb78:	push   DWORD PTR [ebp+0x10]
6401cb7b:	push   DWORD PTR [ebp+0xc]
6401cb7e:	call   0x6401c99d
6401cb83:	add    esp,0x1c
6401cb86:	cmp    BYTE PTR [ebp-0x4],0x0
6401cb8a:	je     0x6401cb93
6401cb8c:	mov    ecx,DWORD PTR [ebp-0x8]
6401cb8f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401cb93:	leave  
6401cb94:	ret    
6401cb95:	push   esi
6401cb96:	mov    esi,DWORD PTR [esp+0x8]
6401cb9a:	test   esi,esi
6401cb9c:	je     0x6401cd23
6401cba2:	push   DWORD PTR [esi+0x4]
6401cba5:	call   0x64014af6
6401cbaa:	push   DWORD PTR [esi+0x8]
6401cbad:	call   0x64014af6
6401cbb2:	push   DWORD PTR [esi+0xc]
6401cbb5:	call   0x64014af6
6401cbba:	push   DWORD PTR [esi+0x10]
6401cbbd:	call   0x64014af6
6401cbc2:	push   DWORD PTR [esi+0x14]
6401cbc5:	call   0x64014af6
6401cbca:	push   DWORD PTR [esi+0x18]
6401cbcd:	call   0x64014af6
6401cbd2:	push   DWORD PTR [esi]
6401cbd4:	call   0x64014af6
6401cbd9:	push   DWORD PTR [esi+0x20]
6401cbdc:	call   0x64014af6
6401cbe1:	push   DWORD PTR [esi+0x24]
6401cbe4:	call   0x64014af6
6401cbe9:	push   DWORD PTR [esi+0x28]
6401cbec:	call   0x64014af6
6401cbf1:	push   DWORD PTR [esi+0x2c]
6401cbf4:	call   0x64014af6
6401cbf9:	push   DWORD PTR [esi+0x30]
6401cbfc:	call   0x64014af6
6401cc01:	push   DWORD PTR [esi+0x34]
6401cc04:	call   0x64014af6
6401cc09:	push   DWORD PTR [esi+0x1c]
6401cc0c:	call   0x64014af6
6401cc11:	push   DWORD PTR [esi+0x38]
6401cc14:	call   0x64014af6
6401cc19:	push   DWORD PTR [esi+0x3c]
6401cc1c:	call   0x64014af6
6401cc21:	add    esp,0x40
6401cc24:	push   DWORD PTR [esi+0x40]
6401cc27:	call   0x64014af6
6401cc2c:	push   DWORD PTR [esi+0x44]
6401cc2f:	call   0x64014af6
6401cc34:	push   DWORD PTR [esi+0x48]
6401cc37:	call   0x64014af6
6401cc3c:	push   DWORD PTR [esi+0x4c]
6401cc3f:	call   0x64014af6
6401cc44:	push   DWORD PTR [esi+0x50]
6401cc47:	call   0x64014af6
6401cc4c:	push   DWORD PTR [esi+0x54]
6401cc4f:	call   0x64014af6
6401cc54:	push   DWORD PTR [esi+0x58]
6401cc57:	call   0x64014af6
6401cc5c:	push   DWORD PTR [esi+0x5c]
6401cc5f:	call   0x64014af6
6401cc64:	push   DWORD PTR [esi+0x60]
6401cc67:	call   0x64014af6
6401cc6c:	push   DWORD PTR [esi+0x64]
6401cc6f:	call   0x64014af6
6401cc74:	push   DWORD PTR [esi+0x68]
6401cc77:	call   0x64014af6
6401cc7c:	push   DWORD PTR [esi+0x6c]
6401cc7f:	call   0x64014af6
6401cc84:	push   DWORD PTR [esi+0x70]
6401cc87:	call   0x64014af6
6401cc8c:	push   DWORD PTR [esi+0x74]
6401cc8f:	call   0x64014af6
6401cc94:	push   DWORD PTR [esi+0x78]
6401cc97:	call   0x64014af6
6401cc9c:	push   DWORD PTR [esi+0x7c]
6401cc9f:	call   0x64014af6
6401cca4:	add    esp,0x40
6401cca7:	push   DWORD PTR [esi+0x80]
6401ccad:	call   0x64014af6
6401ccb2:	push   DWORD PTR [esi+0x84]
6401ccb8:	call   0x64014af6
6401ccbd:	push   DWORD PTR [esi+0x88]
6401ccc3:	call   0x64014af6
6401ccc8:	push   DWORD PTR [esi+0x8c]
6401ccce:	call   0x64014af6
6401ccd3:	push   DWORD PTR [esi+0x90]
6401ccd9:	call   0x64014af6
6401ccde:	push   DWORD PTR [esi+0x94]
6401cce4:	call   0x64014af6
6401cce9:	push   DWORD PTR [esi+0x98]
6401ccef:	call   0x64014af6
6401ccf4:	push   DWORD PTR [esi+0x9c]
6401ccfa:	call   0x64014af6
6401ccff:	push   DWORD PTR [esi+0xa0]
6401cd05:	call   0x64014af6
6401cd0a:	push   DWORD PTR [esi+0xa4]
6401cd10:	call   0x64014af6
6401cd15:	push   DWORD PTR [esi+0xa8]
6401cd1b:	call   0x64014af6
6401cd20:	add    esp,0x2c
6401cd23:	pop    esi
6401cd24:	ret    
6401cd25:	push   esi
6401cd26:	mov    esi,DWORD PTR [esp+0x8]
6401cd2a:	test   esi,esi
6401cd2c:	je     0x6401cd63
6401cd2e:	mov    eax,DWORD PTR [esi]
6401cd30:	cmp    eax,DWORD PTR ds:0x6402fc40
6401cd36:	je     0x6401cd3f
6401cd38:	push   eax
6401cd39:	call   0x64014af6
6401cd3e:	pop    ecx
6401cd3f:	mov    eax,DWORD PTR [esi+0x4]
6401cd42:	cmp    eax,DWORD PTR ds:0x6402fc44
6401cd48:	je     0x6401cd51
6401cd4a:	push   eax
6401cd4b:	call   0x64014af6
6401cd50:	pop    ecx
6401cd51:	mov    esi,DWORD PTR [esi+0x8]
6401cd54:	cmp    esi,DWORD PTR ds:0x6402fc48
6401cd5a:	je     0x6401cd63
6401cd5c:	push   esi
6401cd5d:	call   0x64014af6
6401cd62:	pop    ecx
6401cd63:	pop    esi
6401cd64:	ret    
6401cd65:	push   esi
6401cd66:	mov    esi,DWORD PTR [esp+0x8]
6401cd6a:	test   esi,esi
6401cd6c:	je     0x6401cdec
6401cd6e:	mov    eax,DWORD PTR [esi+0xc]
6401cd71:	cmp    eax,DWORD PTR ds:0x6402fc4c
6401cd77:	je     0x6401cd80
6401cd79:	push   eax
6401cd7a:	call   0x64014af6
6401cd7f:	pop    ecx
6401cd80:	mov    eax,DWORD PTR [esi+0x10]
6401cd83:	cmp    eax,DWORD PTR ds:0x6402fc50
6401cd89:	je     0x6401cd92
6401cd8b:	push   eax
6401cd8c:	call   0x64014af6
6401cd91:	pop    ecx
6401cd92:	mov    eax,DWORD PTR [esi+0x14]
6401cd95:	cmp    eax,DWORD PTR ds:0x6402fc54
6401cd9b:	je     0x6401cda4
6401cd9d:	push   eax
6401cd9e:	call   0x64014af6
6401cda3:	pop    ecx
6401cda4:	mov    eax,DWORD PTR [esi+0x18]
6401cda7:	cmp    eax,DWORD PTR ds:0x6402fc58
6401cdad:	je     0x6401cdb6
6401cdaf:	push   eax
6401cdb0:	call   0x64014af6
6401cdb5:	pop    ecx
6401cdb6:	mov    eax,DWORD PTR [esi+0x1c]
6401cdb9:	cmp    eax,DWORD PTR ds:0x6402fc5c
6401cdbf:	je     0x6401cdc8
6401cdc1:	push   eax
6401cdc2:	call   0x64014af6
6401cdc7:	pop    ecx
6401cdc8:	mov    eax,DWORD PTR [esi+0x20]
6401cdcb:	cmp    eax,DWORD PTR ds:0x6402fc60
6401cdd1:	je     0x6401cdda
6401cdd3:	push   eax
6401cdd4:	call   0x64014af6
6401cdd9:	pop    ecx
6401cdda:	mov    esi,DWORD PTR [esi+0x24]
6401cddd:	cmp    esi,DWORD PTR ds:0x6402fc64
6401cde3:	je     0x6401cdec
6401cde5:	push   esi
6401cde6:	call   0x64014af6
6401cdeb:	pop    ecx
6401cdec:	pop    esi
6401cded:	ret    
6401cdee:	mov    eax,DWORD PTR [esp+0x4]
6401cdf2:	push   ebx
6401cdf3:	xor    ebx,ebx
6401cdf5:	cmp    eax,ebx
6401cdf7:	push   esi
6401cdf8:	push   edi
6401cdf9:	je     0x6401ce03
6401cdfb:	mov    edi,DWORD PTR [esp+0x14]
6401cdff:	cmp    edi,ebx
6401ce01:	ja     0x6401ce1e
6401ce03:	call   0x64015a20
6401ce08:	push   0x16
6401ce0a:	pop    esi
6401ce0b:	mov    DWORD PTR [eax],esi
6401ce0d:	push   ebx
6401ce0e:	push   ebx
6401ce0f:	push   ebx
6401ce10:	push   ebx
6401ce11:	push   ebx
6401ce12:	call   0x64013794
6401ce17:	add    esp,0x14
6401ce1a:	mov    eax,esi
6401ce1c:	jmp    0x6401ce5b
6401ce1e:	mov    esi,DWORD PTR [esp+0x18]
6401ce22:	cmp    esi,ebx
6401ce24:	jne    0x6401ce2a
6401ce26:	mov    BYTE PTR [eax],bl
6401ce28:	jmp    0x6401ce03
6401ce2a:	mov    edx,eax
6401ce2c:	cmp    BYTE PTR [edx],bl
6401ce2e:	je     0x6401ce34
6401ce30:	inc    edx
6401ce31:	dec    edi
6401ce32:	jne    0x6401ce2c
6401ce34:	cmp    edi,ebx
6401ce36:	je     0x6401ce26
6401ce38:	mov    cl,BYTE PTR [esi]
6401ce3a:	mov    BYTE PTR [edx],cl
6401ce3c:	inc    edx
6401ce3d:	inc    esi
6401ce3e:	cmp    cl,bl
6401ce40:	je     0x6401ce45
6401ce42:	dec    edi
6401ce43:	jne    0x6401ce38
6401ce45:	cmp    edi,ebx
6401ce47:	jne    0x6401ce59
6401ce49:	mov    BYTE PTR [eax],bl
6401ce4b:	call   0x64015a20
6401ce50:	push   0x22
6401ce52:	pop    ecx
6401ce53:	mov    DWORD PTR [eax],ecx
6401ce55:	mov    esi,ecx
6401ce57:	jmp    0x6401ce0d
6401ce59:	xor    eax,eax
6401ce5b:	pop    edi
6401ce5c:	pop    esi
6401ce5d:	pop    ebx
6401ce5e:	ret    
6401ce5f:	int3   
6401ce60:	push   ebp
6401ce61:	mov    ebp,esp
6401ce63:	push   esi
6401ce64:	xor    eax,eax
6401ce66:	push   eax
6401ce67:	push   eax
6401ce68:	push   eax
6401ce69:	push   eax
6401ce6a:	push   eax
6401ce6b:	push   eax
6401ce6c:	push   eax
6401ce6d:	push   eax
6401ce6e:	mov    edx,DWORD PTR [ebp+0xc]
6401ce71:	lea    ecx,[ecx+0x0]
6401ce74:	mov    al,BYTE PTR [edx]
6401ce76:	or     al,al
6401ce78:	je     0x6401ce83
6401ce7a:	add    edx,0x1
6401ce7d:	bts    DWORD PTR [esp],eax
6401ce81:	jmp    0x6401ce74
6401ce83:	mov    esi,DWORD PTR [ebp+0x8]
6401ce86:	or     ecx,0xffffffff
6401ce89:	lea    ecx,[ecx+0x0]
6401ce8c:	add    ecx,0x1
6401ce8f:	mov    al,BYTE PTR [esi]
6401ce91:	or     al,al
6401ce93:	je     0x6401ce9e
6401ce95:	add    esi,0x1
6401ce98:	bt     DWORD PTR [esp],eax
6401ce9c:	jae    0x6401ce8c
6401ce9e:	mov    eax,ecx
6401cea0:	add    esp,0x20
6401cea3:	pop    esi
6401cea4:	leave  
6401cea5:	ret    
6401cea6:	push   ebp
6401cea7:	mov    ebp,esp
6401cea9:	push   ebx
6401ceaa:	push   esi
6401ceab:	mov    esi,DWORD PTR [ebp+0x8]
6401ceae:	xor    ebx,ebx
6401ceb0:	cmp    DWORD PTR [ebp+0x14],ebx
6401ceb3:	push   edi
6401ceb4:	jne    0x6401cec6
6401ceb6:	cmp    esi,ebx
6401ceb8:	jne    0x6401ceca
6401ceba:	cmp    DWORD PTR [ebp+0xc],ebx
6401cebd:	jne    0x6401ced1
6401cebf:	xor    eax,eax
6401cec1:	pop    edi
6401cec2:	pop    esi
6401cec3:	pop    ebx
6401cec4:	pop    ebp
6401cec5:	ret    
6401cec6:	cmp    esi,ebx
6401cec8:	je     0x6401ced1
6401ceca:	mov    edi,DWORD PTR [ebp+0xc]
6401cecd:	cmp    edi,ebx
6401cecf:	ja     0x6401ceec
6401ced1:	call   0x64015a20
6401ced6:	push   0x16
6401ced8:	pop    esi
6401ced9:	mov    DWORD PTR [eax],esi
6401cedb:	push   ebx
6401cedc:	push   ebx
6401cedd:	push   ebx
6401cede:	push   ebx
6401cedf:	push   ebx
6401cee0:	call   0x64013794
6401cee5:	add    esp,0x14
6401cee8:	mov    eax,esi
6401ceea:	jmp    0x6401cec1
6401ceec:	cmp    DWORD PTR [ebp+0x14],ebx
6401ceef:	jne    0x6401cef5
6401cef1:	mov    BYTE PTR [esi],bl
6401cef3:	jmp    0x6401cebf
6401cef5:	mov    edx,DWORD PTR [ebp+0x10]
6401cef8:	cmp    edx,ebx
6401cefa:	jne    0x6401cf00
6401cefc:	mov    BYTE PTR [esi],bl
6401cefe:	jmp    0x6401ced1
6401cf00:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401cf04:	mov    eax,esi
6401cf06:	jne    0x6401cf17
6401cf08:	mov    cl,BYTE PTR [edx]
6401cf0a:	mov    BYTE PTR [eax],cl
6401cf0c:	inc    eax
6401cf0d:	inc    edx
6401cf0e:	cmp    cl,bl
6401cf10:	je     0x6401cf30
6401cf12:	dec    edi
6401cf13:	jne    0x6401cf08
6401cf15:	jmp    0x6401cf30
6401cf17:	mov    cl,BYTE PTR [edx]
6401cf19:	mov    BYTE PTR [eax],cl
6401cf1b:	inc    eax
6401cf1c:	inc    edx
6401cf1d:	cmp    cl,bl
6401cf1f:	je     0x6401cf29
6401cf21:	dec    edi
6401cf22:	je     0x6401cf29
6401cf24:	dec    DWORD PTR [ebp+0x14]
6401cf27:	jne    0x6401cf17
6401cf29:	cmp    DWORD PTR [ebp+0x14],ebx
6401cf2c:	jne    0x6401cf30
6401cf2e:	mov    BYTE PTR [eax],bl
6401cf30:	cmp    edi,ebx
6401cf32:	jne    0x6401cebf
6401cf34:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401cf38:	jne    0x6401cf49
6401cf3a:	mov    eax,DWORD PTR [ebp+0xc]
6401cf3d:	push   0x50
6401cf3f:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401cf43:	pop    eax
6401cf44:	jmp    0x6401cec1
6401cf49:	mov    BYTE PTR [esi],bl
6401cf4b:	call   0x64015a20
6401cf50:	push   0x22
6401cf52:	pop    ecx
6401cf53:	mov    DWORD PTR [eax],ecx
6401cf55:	mov    esi,ecx
6401cf57:	jmp    0x6401cedb
6401cf59:	int3   
6401cf5a:	int3   
6401cf5b:	int3   
6401cf5c:	int3   
6401cf5d:	int3   
6401cf5e:	int3   
6401cf5f:	int3   
6401cf60:	push   ebp
6401cf61:	mov    ebp,esp
6401cf63:	push   esi
6401cf64:	xor    eax,eax
6401cf66:	push   eax
6401cf67:	push   eax
6401cf68:	push   eax
6401cf69:	push   eax
6401cf6a:	push   eax
6401cf6b:	push   eax
6401cf6c:	push   eax
6401cf6d:	push   eax
6401cf6e:	mov    edx,DWORD PTR [ebp+0xc]
6401cf71:	lea    ecx,[ecx+0x0]
6401cf74:	mov    al,BYTE PTR [edx]
6401cf76:	or     al,al
6401cf78:	je     0x6401cf83
6401cf7a:	add    edx,0x1
6401cf7d:	bts    DWORD PTR [esp],eax
6401cf81:	jmp    0x6401cf74
6401cf83:	mov    esi,DWORD PTR [ebp+0x8]
6401cf86:	mov    edi,edi
6401cf88:	mov    al,BYTE PTR [esi]
6401cf8a:	or     al,al
6401cf8c:	je     0x6401cf9a
6401cf8e:	add    esi,0x1
6401cf91:	bt     DWORD PTR [esp],eax
6401cf95:	jae    0x6401cf88
6401cf97:	lea    eax,[esi-0x1]
6401cf9a:	add    esp,0x20
6401cf9d:	pop    esi
6401cf9e:	leave  
6401cf9f:	ret    
6401cfa0:	push   ebp
6401cfa1:	mov    ebp,esp
6401cfa3:	push   ecx
6401cfa4:	push   ecx
6401cfa5:	mov    eax,DWORD PTR [ebp+0xc]
6401cfa8:	push   esi
6401cfa9:	mov    esi,DWORD PTR [ebp+0x8]
6401cfac:	mov    DWORD PTR [ebp-0x8],eax
6401cfaf:	mov    eax,DWORD PTR [ebp+0x10]
6401cfb2:	push   edi
6401cfb3:	push   esi
6401cfb4:	mov    DWORD PTR [ebp-0x4],eax
6401cfb7:	call   0x6401ef3f
6401cfbc:	or     edi,0xffffffff
6401cfbf:	cmp    eax,edi
6401cfc1:	pop    ecx
6401cfc2:	jne    0x6401cfd5
6401cfc4:	call   0x64015a20
6401cfc9:	mov    DWORD PTR [eax],0x9
6401cfcf:	mov    eax,edi
6401cfd1:	mov    edx,edi
6401cfd3:	jmp    0x6401d01f
6401cfd5:	push   DWORD PTR [ebp+0x14]
6401cfd8:	lea    ecx,[ebp-0x4]
6401cfdb:	push   ecx
6401cfdc:	push   DWORD PTR [ebp-0x8]
6401cfdf:	push   eax
6401cfe0:	call   DWORD PTR ds:0x640260d8
6401cfe6:	cmp    eax,edi
6401cfe8:	mov    DWORD PTR [ebp-0x8],eax
6401cfeb:	jne    0x6401d000
6401cfed:	call   DWORD PTR ds:0x64026044
6401cff3:	test   eax,eax
6401cff5:	je     0x6401d000
6401cff7:	push   eax
6401cff8:	call   0x64015a46
6401cffd:	pop    ecx
6401cffe:	jmp    0x6401cfcf
6401d000:	mov    eax,esi
6401d002:	sar    eax,0x5
6401d005:	mov    eax,DWORD PTR [eax*4+0x64034520]
6401d00c:	and    esi,0x1f
6401d00f:	shl    esi,0x6
6401d012:	lea    eax,[eax+esi*1+0x4]
6401d016:	and    BYTE PTR [eax],0xfd
6401d019:	mov    eax,DWORD PTR [ebp-0x8]
6401d01c:	mov    edx,DWORD PTR [ebp-0x4]
6401d01f:	pop    edi
6401d020:	pop    esi
6401d021:	leave  
6401d022:	ret    
6401d023:	push   0x14
6401d025:	push   0x6402c3b8
6401d02a:	call   0x64015220
6401d02f:	or     esi,0xffffffff
6401d032:	mov    DWORD PTR [ebp-0x24],esi
6401d035:	mov    DWORD PTR [ebp-0x20],esi
6401d038:	mov    eax,DWORD PTR [ebp+0x8]
6401d03b:	cmp    eax,0xfffffffe
6401d03e:	jne    0x6401d05c
6401d040:	call   0x64015a33
6401d045:	and    DWORD PTR [eax],0x0
6401d048:	call   0x64015a20
6401d04d:	mov    DWORD PTR [eax],0x9
6401d053:	mov    eax,esi
6401d055:	mov    edx,esi
6401d057:	jmp    0x6401d12c
6401d05c:	xor    edi,edi
6401d05e:	cmp    eax,edi
6401d060:	jl     0x6401d06a
6401d062:	cmp    eax,DWORD PTR ds:0x64034500
6401d068:	jb     0x6401d08b
6401d06a:	call   0x64015a33
6401d06f:	mov    DWORD PTR [eax],edi
6401d071:	call   0x64015a20
6401d076:	mov    DWORD PTR [eax],0x9
6401d07c:	push   edi
6401d07d:	push   edi
6401d07e:	push   edi
6401d07f:	push   edi
6401d080:	push   edi
6401d081:	call   0x64013794
6401d086:	add    esp,0x14
6401d089:	jmp    0x6401d053
6401d08b:	mov    ecx,eax
6401d08d:	sar    ecx,0x5
6401d090:	lea    ebx,[ecx*4+0x64034520]
6401d097:	mov    esi,eax
6401d099:	and    esi,0x1f
6401d09c:	shl    esi,0x6
6401d09f:	mov    ecx,DWORD PTR [ebx]
6401d0a1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401d0a6:	and    ecx,0x1
6401d0a9:	jne    0x6401d0d1
6401d0ab:	call   0x64015a33
6401d0b0:	mov    DWORD PTR [eax],edi
6401d0b2:	call   0x64015a20
6401d0b7:	mov    DWORD PTR [eax],0x9
6401d0bd:	push   edi
6401d0be:	push   edi
6401d0bf:	push   edi
6401d0c0:	push   edi
6401d0c1:	push   edi
6401d0c2:	call   0x64013794
6401d0c7:	add    esp,0x14
6401d0ca:	or     edx,0xffffffff
6401d0cd:	mov    eax,edx
6401d0cf:	jmp    0x6401d12c
6401d0d1:	push   eax
6401d0d2:	call   0x6401efb0
6401d0d7:	pop    ecx
6401d0d8:	mov    DWORD PTR [ebp-0x4],edi
6401d0db:	mov    eax,DWORD PTR [ebx]
6401d0dd:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401d0e2:	je     0x6401d100
6401d0e4:	push   DWORD PTR [ebp+0x14]
6401d0e7:	push   DWORD PTR [ebp+0x10]
6401d0ea:	push   DWORD PTR [ebp+0xc]
6401d0ed:	push   DWORD PTR [ebp+0x8]
6401d0f0:	call   0x6401cfa0
6401d0f5:	add    esp,0x10
6401d0f8:	mov    DWORD PTR [ebp-0x24],eax
6401d0fb:	mov    DWORD PTR [ebp-0x20],edx
6401d0fe:	jmp    0x6401d11a
6401d100:	call   0x64015a20
6401d105:	mov    DWORD PTR [eax],0x9
6401d10b:	call   0x64015a33
6401d110:	mov    DWORD PTR [eax],edi
6401d112:	or     DWORD PTR [ebp-0x24],0xffffffff
6401d116:	or     DWORD PTR [ebp-0x20],0xffffffff
6401d11a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d121:	call   0x6401d132
6401d126:	mov    eax,DWORD PTR [ebp-0x24]
6401d129:	mov    edx,DWORD PTR [ebp-0x20]
6401d12c:	call   0x64015265
6401d131:	ret    
6401d132:	push   DWORD PTR [ebp+0x8]
6401d135:	call   0x6401f050
6401d13a:	pop    ecx
6401d13b:	ret    
6401d13c:	push   ebp
6401d13d:	lea    ebp,[esp-0x514]
6401d144:	sub    esp,0x590
6401d14a:	mov    eax,ds:0x6402f09c
6401d14f:	xor    eax,ebp
6401d151:	mov    DWORD PTR [ebp+0x510],eax
6401d157:	mov    eax,DWORD PTR [ebp+0x520]
6401d15d:	push   esi
6401d15e:	xor    esi,esi
6401d160:	cmp    DWORD PTR [ebp+0x524],esi
6401d166:	mov    DWORD PTR [ebp-0x64],eax
6401d169:	mov    DWORD PTR [ebp-0x60],esi
6401d16c:	mov    DWORD PTR [ebp-0x68],esi
6401d16f:	jne    0x6401d178
6401d171:	xor    eax,eax
6401d173:	jmp    0x6401d748
6401d178:	cmp    eax,esi
6401d17a:	jne    0x6401d1a3
6401d17c:	call   0x64015a33
6401d181:	mov    DWORD PTR [eax],esi
6401d183:	call   0x64015a20
6401d188:	push   esi
6401d189:	push   esi
6401d18a:	push   esi
6401d18b:	push   esi
6401d18c:	push   esi
6401d18d:	mov    DWORD PTR [eax],0x16
6401d193:	call   0x64013794
6401d198:	add    esp,0x14
6401d19b:	or     eax,0xffffffff
6401d19e:	jmp    0x6401d748
6401d1a3:	push   ebx
6401d1a4:	push   edi
6401d1a5:	mov    edi,DWORD PTR [ebp+0x51c]
6401d1ab:	mov    eax,edi
6401d1ad:	sar    eax,0x5
6401d1b0:	lea    esi,[eax*4+0x64034520]
6401d1b7:	mov    eax,DWORD PTR [esi]
6401d1b9:	and    edi,0x1f
6401d1bc:	shl    edi,0x6
6401d1bf:	add    eax,edi
6401d1c1:	mov    bl,BYTE PTR [eax+0x24]
6401d1c4:	add    bl,bl
6401d1c6:	sar    bl,1
6401d1c8:	cmp    bl,0x2
6401d1cb:	mov    DWORD PTR [ebp-0x70],esi
6401d1ce:	mov    BYTE PTR [ebp-0x71],bl
6401d1d1:	je     0x6401d1d8
6401d1d3:	cmp    bl,0x1
6401d1d6:	jne    0x6401d20b
6401d1d8:	mov    ecx,DWORD PTR [ebp+0x524]
6401d1de:	not    ecx
6401d1e0:	test   cl,0x1
6401d1e3:	jne    0x6401d20b
6401d1e5:	call   0x64015a33
6401d1ea:	xor    esi,esi
6401d1ec:	mov    DWORD PTR [eax],esi
6401d1ee:	call   0x64015a20
6401d1f3:	push   esi
6401d1f4:	push   esi
6401d1f5:	push   esi
6401d1f6:	push   esi
6401d1f7:	push   esi
6401d1f8:	mov    DWORD PTR [eax],0x16
6401d1fe:	call   0x64013794
6401d203:	add    esp,0x14
6401d206:	jmp    0x6401d73b
6401d20b:	test   BYTE PTR [eax+0x4],0x20
6401d20f:	je     0x6401d225
6401d211:	push   0x2
6401d213:	push   0x0
6401d215:	push   0x0
6401d217:	push   DWORD PTR [ebp+0x51c]
6401d21d:	call   0x6401cfa0
6401d222:	add    esp,0x10
6401d225:	push   DWORD PTR [ebp+0x51c]
6401d22b:	call   0x6401d87e
6401d230:	test   eax,eax
6401d232:	pop    ecx
6401d233:	je     0x6401d472
6401d239:	mov    eax,DWORD PTR [esi]
6401d23b:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401d240:	je     0x6401d472
6401d246:	call   0x64015d6b
6401d24b:	mov    eax,DWORD PTR [eax+0x6c]
6401d24e:	xor    ecx,ecx
6401d250:	cmp    DWORD PTR [eax+0x14],ecx
6401d253:	lea    eax,[ebp-0x7c]
6401d256:	sete   cl
6401d259:	push   eax
6401d25a:	mov    eax,DWORD PTR [esi]
6401d25c:	push   DWORD PTR [edi+eax*1]
6401d25f:	mov    DWORD PTR [ebp-0x78],ecx
6401d262:	call   DWORD PTR ds:0x640260d0
6401d268:	test   eax,eax
6401d26a:	je     0x6401d472
6401d270:	xor    ecx,ecx
6401d272:	cmp    DWORD PTR [ebp-0x78],ecx
6401d275:	je     0x6401d27f
6401d277:	test   bl,bl
6401d279:	je     0x6401d474
6401d27f:	call   DWORD PTR ds:0x640260d4
6401d285:	mov    ebx,DWORD PTR [ebp-0x64]
6401d288:	mov    DWORD PTR [ebp-0x7c],eax
6401d28b:	xor    eax,eax
6401d28d:	cmp    DWORD PTR [ebp+0x524],eax
6401d293:	mov    DWORD PTR [ebp-0x5c],eax
6401d296:	jbe    0x6401d6e3
6401d29c:	mov    DWORD PTR [ebp-0x54],eax
6401d29f:	mov    al,BYTE PTR [ebp-0x71]
6401d2a2:	test   al,al
6401d2a4:	jne    0x6401d3e7
6401d2aa:	mov    cl,BYTE PTR [ebx]
6401d2ac:	mov    esi,DWORD PTR [ebp-0x70]
6401d2af:	xor    eax,eax
6401d2b1:	cmp    cl,0xa
6401d2b4:	sete   al
6401d2b7:	mov    DWORD PTR [ebp-0x78],eax
6401d2ba:	mov    eax,DWORD PTR [esi]
6401d2bc:	add    eax,edi
6401d2be:	cmp    DWORD PTR [eax+0x38],0x0
6401d2c2:	je     0x6401d2e2
6401d2c4:	mov    dl,BYTE PTR [eax+0x34]
6401d2c7:	mov    BYTE PTR [ebp+0x508],dl
6401d2cd:	mov    BYTE PTR [ebp+0x509],cl
6401d2d3:	and    DWORD PTR [eax+0x38],0x0
6401d2d7:	push   0x2
6401d2d9:	lea    eax,[ebp+0x508]
6401d2df:	push   eax
6401d2e0:	jmp    0x6401d327
6401d2e2:	movsx  eax,cl
6401d2e5:	push   eax
6401d2e6:	call   0x6401b096
6401d2eb:	test   eax,eax
6401d2ed:	pop    ecx
6401d2ee:	je     0x6401d324
6401d2f0:	mov    ecx,DWORD PTR [ebp-0x64]
6401d2f3:	sub    ecx,ebx
6401d2f5:	add    ecx,DWORD PTR [ebp+0x524]
6401d2fb:	xor    eax,eax
6401d2fd:	inc    eax
6401d2fe:	cmp    ecx,eax
6401d300:	jbe    0x6401d45c
6401d306:	push   0x2
6401d308:	lea    eax,[ebp-0x58]
6401d30b:	push   ebx
6401d30c:	push   eax
6401d30d:	call   0x6401ddb1
6401d312:	add    esp,0xc
6401d315:	cmp    eax,0xffffffff
6401d318:	je     0x6401d6dd
6401d31e:	inc    ebx
6401d31f:	inc    DWORD PTR [ebp-0x54]
6401d322:	jmp    0x6401d33c
6401d324:	push   0x1
6401d326:	push   ebx
6401d327:	lea    eax,[ebp-0x58]
6401d32a:	push   eax
6401d32b:	call   0x6401ddb1
6401d330:	add    esp,0xc
6401d333:	cmp    eax,0xffffffff
6401d336:	je     0x6401d6dd
6401d33c:	xor    eax,eax
6401d33e:	push   eax
6401d33f:	push   eax
6401d340:	push   0x5
6401d342:	lea    ecx,[ebp+0x508]
6401d348:	push   ecx
6401d349:	push   0x1
6401d34b:	lea    ecx,[ebp-0x58]
6401d34e:	push   ecx
6401d34f:	push   eax
6401d350:	push   DWORD PTR [ebp-0x7c]
6401d353:	inc    ebx
6401d354:	inc    DWORD PTR [ebp-0x54]
6401d357:	call   DWORD PTR ds:0x64026028
6401d35d:	mov    esi,eax
6401d35f:	test   esi,esi
6401d361:	je     0x6401d6dd
6401d367:	push   0x0
6401d369:	lea    eax,[ebp-0x5c]
6401d36c:	push   eax
6401d36d:	push   esi
6401d36e:	lea    eax,[ebp+0x508]
6401d374:	push   eax
6401d375:	mov    eax,DWORD PTR [ebp-0x70]
6401d378:	mov    eax,DWORD PTR [eax]
6401d37a:	push   DWORD PTR [edi+eax*1]
6401d37d:	call   DWORD PTR ds:0x64026088
6401d383:	test   eax,eax
6401d385:	je     0x6401d6d4
6401d38b:	mov    eax,DWORD PTR [ebp-0x54]
6401d38e:	mov    ecx,DWORD PTR [ebp-0x68]
6401d391:	add    eax,ecx
6401d393:	cmp    DWORD PTR [ebp-0x5c],esi
6401d396:	mov    DWORD PTR [ebp-0x60],eax
6401d399:	jl     0x6401d6dd
6401d39f:	cmp    DWORD PTR [ebp-0x78],0x0
6401d3a3:	je     0x6401d448
6401d3a9:	push   0x0
6401d3ab:	lea    eax,[ebp-0x5c]
6401d3ae:	push   eax
6401d3af:	push   0x1
6401d3b1:	lea    eax,[ebp+0x508]
6401d3b7:	push   eax
6401d3b8:	mov    eax,DWORD PTR [ebp-0x70]
6401d3bb:	mov    eax,DWORD PTR [eax]
6401d3bd:	mov    BYTE PTR [ebp+0x508],0xd
6401d3c4:	push   DWORD PTR [edi+eax*1]
6401d3c7:	call   DWORD PTR ds:0x64026088
6401d3cd:	test   eax,eax
6401d3cf:	je     0x6401d6d4
6401d3d5:	cmp    DWORD PTR [ebp-0x5c],0x1
6401d3d9:	jl     0x6401d6dd
6401d3df:	inc    DWORD PTR [ebp-0x68]
6401d3e2:	inc    DWORD PTR [ebp-0x60]
6401d3e5:	jmp    0x6401d448
6401d3e7:	cmp    al,0x1
6401d3e9:	je     0x6401d3ef
6401d3eb:	cmp    al,0x2
6401d3ed:	jne    0x6401d407
6401d3ef:	movzx  esi,WORD PTR [ebx]
6401d3f2:	xor    ecx,ecx
6401d3f4:	cmp    si,0xa
6401d3f8:	sete   cl
6401d3fb:	inc    ebx
6401d3fc:	inc    ebx
6401d3fd:	add    DWORD PTR [ebp-0x54],0x2
6401d401:	mov    DWORD PTR [ebp-0x58],esi
6401d404:	mov    DWORD PTR [ebp-0x78],ecx
6401d407:	cmp    al,0x1
6401d409:	je     0x6401d40f
6401d40b:	cmp    al,0x2
6401d40d:	jne    0x6401d448
6401d40f:	push   DWORD PTR [ebp-0x58]
6401d412:	call   0x6401f072
6401d417:	cmp    ax,WORD PTR [ebp-0x58]
6401d41b:	pop    ecx
6401d41c:	jne    0x6401d6d4
6401d422:	inc    DWORD PTR [ebp-0x60]
6401d425:	cmp    DWORD PTR [ebp-0x78],0x0
6401d429:	je     0x6401d448
6401d42b:	push   0xd
6401d42d:	pop    eax
6401d42e:	push   eax
6401d42f:	mov    DWORD PTR [ebp-0x58],eax
6401d432:	call   0x6401f072
6401d437:	cmp    ax,WORD PTR [ebp-0x58]
6401d43b:	pop    ecx
6401d43c:	jne    0x6401d6d4
6401d442:	inc    DWORD PTR [ebp-0x60]
6401d445:	inc    DWORD PTR [ebp-0x68]
6401d448:	mov    eax,DWORD PTR [ebp+0x524]
6401d44e:	cmp    DWORD PTR [ebp-0x54],eax
6401d451:	jb     0x6401d29f
6401d457:	jmp    0x6401d6dd
6401d45c:	mov    ecx,DWORD PTR [esi]
6401d45e:	mov    dl,BYTE PTR [ebx]
6401d460:	inc    DWORD PTR [ebp-0x60]
6401d463:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401d467:	mov    ecx,DWORD PTR [esi]
6401d469:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401d46d:	jmp    0x6401d6dd
6401d472:	xor    ecx,ecx
6401d474:	mov    eax,DWORD PTR [esi]
6401d476:	add    eax,edi
6401d478:	test   BYTE PTR [eax+0x4],0x80
6401d47c:	je     0x6401d6ad
6401d482:	test   bl,bl
6401d484:	mov    eax,DWORD PTR [ebp-0x64]
6401d487:	mov    DWORD PTR [ebp-0x58],ecx
6401d48a:	jne    0x6401d526
6401d490:	cmp    DWORD PTR [ebp+0x524],ecx
6401d496:	mov    DWORD PTR [ebp-0x5c],eax
6401d499:	jbe    0x6401d713
6401d49f:	jmp    0x6401d4a4
6401d4a1:	mov    esi,DWORD PTR [ebp-0x70]
6401d4a4:	mov    ecx,DWORD PTR [ebp-0x5c]
6401d4a7:	and    DWORD PTR [ebp-0x54],0x0
6401d4ab:	sub    ecx,DWORD PTR [ebp-0x64]
6401d4ae:	lea    eax,[ebp-0x50]
6401d4b1:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d4b7:	jae    0x6401d4e0
6401d4b9:	mov    edx,DWORD PTR [ebp-0x5c]
6401d4bc:	inc    DWORD PTR [ebp-0x5c]
6401d4bf:	mov    dl,BYTE PTR [edx]
6401d4c1:	inc    ecx
6401d4c2:	cmp    dl,0xa
6401d4c5:	jne    0x6401d4d1
6401d4c7:	inc    DWORD PTR [ebp-0x68]
6401d4ca:	mov    BYTE PTR [eax],0xd
6401d4cd:	inc    eax
6401d4ce:	inc    DWORD PTR [ebp-0x54]
6401d4d1:	mov    BYTE PTR [eax],dl
6401d4d3:	inc    eax
6401d4d4:	inc    DWORD PTR [ebp-0x54]
6401d4d7:	cmp    DWORD PTR [ebp-0x54],0x400
6401d4de:	jb     0x6401d4b1
6401d4e0:	mov    ebx,eax
6401d4e2:	lea    eax,[ebp-0x50]
6401d4e5:	sub    ebx,eax
6401d4e7:	push   0x0
6401d4e9:	lea    eax,[ebp-0x6c]
6401d4ec:	push   eax
6401d4ed:	push   ebx
6401d4ee:	lea    eax,[ebp-0x50]
6401d4f1:	push   eax
6401d4f2:	mov    eax,DWORD PTR [esi]
6401d4f4:	push   DWORD PTR [edi+eax*1]
6401d4f7:	call   DWORD PTR ds:0x64026088
6401d4fd:	test   eax,eax
6401d4ff:	je     0x6401d6d4
6401d505:	mov    eax,DWORD PTR [ebp-0x6c]
6401d508:	add    DWORD PTR [ebp-0x60],eax
6401d50b:	cmp    eax,ebx
6401d50d:	jl     0x6401d6dd
6401d513:	mov    eax,DWORD PTR [ebp-0x5c]
6401d516:	sub    eax,DWORD PTR [ebp-0x64]
6401d519:	cmp    eax,DWORD PTR [ebp+0x524]
6401d51f:	jb     0x6401d4a1
6401d521:	jmp    0x6401d6dd
6401d526:	cmp    bl,0x2
6401d529:	mov    DWORD PTR [ebp-0x54],eax
6401d52c:	jne    0x6401d5d5
6401d532:	cmp    DWORD PTR [ebp+0x524],ecx
6401d538:	jbe    0x6401d713
6401d53e:	jmp    0x6401d543
6401d540:	mov    esi,DWORD PTR [ebp-0x70]
6401d543:	mov    ecx,DWORD PTR [ebp-0x54]
6401d546:	and    DWORD PTR [ebp-0x5c],0x0
6401d54a:	sub    ecx,DWORD PTR [ebp-0x64]
6401d54d:	lea    eax,[ebp-0x50]
6401d550:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d556:	jae    0x6401d58b
6401d558:	mov    edx,DWORD PTR [ebp-0x54]
6401d55b:	add    DWORD PTR [ebp-0x54],0x2
6401d55f:	movzx  edx,WORD PTR [edx]
6401d562:	inc    ecx
6401d563:	inc    ecx
6401d564:	cmp    dx,0xa
6401d568:	jne    0x6401d579
6401d56a:	add    DWORD PTR [ebp-0x68],0x2
6401d56e:	mov    WORD PTR [eax],0xd
6401d573:	inc    eax
6401d574:	inc    eax
6401d575:	add    DWORD PTR [ebp-0x5c],0x2
6401d579:	add    DWORD PTR [ebp-0x5c],0x2
6401d57d:	mov    WORD PTR [eax],dx
6401d580:	inc    eax
6401d581:	inc    eax
6401d582:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401d589:	jb     0x6401d550
6401d58b:	mov    ebx,eax
6401d58d:	lea    eax,[ebp-0x50]
6401d590:	sub    ebx,eax
6401d592:	push   0x0
6401d594:	lea    eax,[ebp-0x6c]
6401d597:	push   eax
6401d598:	push   ebx
6401d599:	lea    eax,[ebp-0x50]
6401d59c:	push   eax
6401d59d:	mov    eax,DWORD PTR [esi]
6401d59f:	push   DWORD PTR [edi+eax*1]
6401d5a2:	call   DWORD PTR ds:0x64026088
6401d5a8:	test   eax,eax
6401d5aa:	je     0x6401d6d4
6401d5b0:	mov    eax,DWORD PTR [ebp-0x6c]
6401d5b3:	add    DWORD PTR [ebp-0x60],eax
6401d5b6:	cmp    eax,ebx
6401d5b8:	jl     0x6401d6dd
6401d5be:	mov    eax,DWORD PTR [ebp-0x54]
6401d5c1:	sub    eax,DWORD PTR [ebp-0x64]
6401d5c4:	cmp    eax,DWORD PTR [ebp+0x524]
6401d5ca:	jb     0x6401d540
6401d5d0:	jmp    0x6401d6dd
6401d5d5:	cmp    DWORD PTR [ebp+0x524],ecx
6401d5db:	jbe    0x6401d713
6401d5e1:	mov    ecx,DWORD PTR [ebp-0x54]
6401d5e4:	and    DWORD PTR [ebp-0x5c],0x0
6401d5e8:	sub    ecx,DWORD PTR [ebp-0x64]
6401d5eb:	push   0x2
6401d5ed:	lea    eax,[ebp+0x3b4]
6401d5f3:	pop    esi
6401d5f4:	cmp    ecx,DWORD PTR [ebp+0x524]
6401d5fa:	jae    0x6401d628
6401d5fc:	mov    edx,DWORD PTR [ebp-0x54]
6401d5ff:	movzx  edx,WORD PTR [edx]
6401d602:	add    DWORD PTR [ebp-0x54],esi
6401d605:	add    ecx,esi
6401d607:	cmp    dx,0xa
6401d60b:	jne    0x6401d617
6401d60d:	mov    WORD PTR [eax],0xd
6401d612:	add    eax,esi
6401d614:	add    DWORD PTR [ebp-0x5c],esi
6401d617:	add    DWORD PTR [ebp-0x5c],esi
6401d61a:	mov    WORD PTR [eax],dx
6401d61d:	add    eax,esi
6401d61f:	cmp    DWORD PTR [ebp-0x5c],0x152
6401d626:	jb     0x6401d5f4
6401d628:	xor    esi,esi
6401d62a:	push   esi
6401d62b:	push   esi
6401d62c:	push   0x2ab
6401d631:	lea    ecx,[ebp+0x104]
6401d637:	push   ecx
6401d638:	lea    ecx,[ebp+0x3b4]
6401d63e:	sub    eax,ecx
6401d640:	cdq    
6401d641:	sub    eax,edx
6401d643:	sar    eax,1
6401d645:	push   eax
6401d646:	mov    eax,ecx
6401d648:	push   eax
6401d649:	push   esi
6401d64a:	push   0xfde9
6401d64f:	call   DWORD PTR ds:0x64026028
6401d655:	mov    ebx,eax
6401d657:	cmp    ebx,esi
6401d659:	je     0x6401d6d4
6401d65b:	push   0x0
6401d65d:	lea    eax,[ebp-0x6c]
6401d660:	push   eax
6401d661:	mov    eax,ebx
6401d663:	sub    eax,esi
6401d665:	push   eax
6401d666:	lea    eax,[ebp+esi*1+0x104]
6401d66d:	push   eax
6401d66e:	mov    eax,DWORD PTR [ebp-0x70]
6401d671:	mov    eax,DWORD PTR [eax]
6401d673:	push   DWORD PTR [edi+eax*1]
6401d676:	call   DWORD PTR ds:0x64026088
6401d67c:	test   eax,eax
6401d67e:	je     0x6401d689
6401d680:	add    esi,DWORD PTR [ebp-0x6c]
6401d683:	cmp    ebx,esi
6401d685:	jg     0x6401d65b
6401d687:	jmp    0x6401d692
6401d689:	call   DWORD PTR ds:0x64026044
6401d68f:	mov    DWORD PTR [ebp-0x58],eax
6401d692:	cmp    ebx,esi
6401d694:	jg     0x6401d6dd
6401d696:	mov    eax,DWORD PTR [ebp-0x54]
6401d699:	sub    eax,DWORD PTR [ebp-0x64]
6401d69c:	cmp    eax,DWORD PTR [ebp+0x524]
6401d6a2:	mov    DWORD PTR [ebp-0x60],eax
6401d6a5:	jb     0x6401d5e1
6401d6ab:	jmp    0x6401d6dd
6401d6ad:	push   0x0
6401d6af:	lea    ecx,[ebp-0x6c]
6401d6b2:	push   ecx
6401d6b3:	push   DWORD PTR [ebp+0x524]
6401d6b9:	push   DWORD PTR [ebp-0x64]
6401d6bc:	push   DWORD PTR [eax]
6401d6be:	call   DWORD PTR ds:0x64026088
6401d6c4:	test   eax,eax
6401d6c6:	je     0x6401d6d4
6401d6c8:	mov    eax,DWORD PTR [ebp-0x6c]
6401d6cb:	and    DWORD PTR [ebp-0x58],0x0
6401d6cf:	mov    DWORD PTR [ebp-0x60],eax
6401d6d2:	jmp    0x6401d6dd
6401d6d4:	call   DWORD PTR ds:0x64026044
6401d6da:	mov    DWORD PTR [ebp-0x58],eax
6401d6dd:	cmp    DWORD PTR [ebp-0x60],0x0
6401d6e1:	jne    0x6401d740
6401d6e3:	cmp    DWORD PTR [ebp-0x58],0x0
6401d6e7:	je     0x6401d710
6401d6e9:	push   0x5
6401d6eb:	pop    esi
6401d6ec:	cmp    DWORD PTR [ebp-0x58],esi
6401d6ef:	jne    0x6401d705
6401d6f1:	call   0x64015a20
6401d6f6:	mov    DWORD PTR [eax],0x9
6401d6fc:	call   0x64015a33
6401d701:	mov    DWORD PTR [eax],esi
6401d703:	jmp    0x6401d73b
6401d705:	push   DWORD PTR [ebp-0x58]
6401d708:	call   0x64015a46
6401d70d:	pop    ecx
6401d70e:	jmp    0x6401d73b
6401d710:	mov    esi,DWORD PTR [ebp-0x70]
6401d713:	mov    eax,DWORD PTR [esi]
6401d715:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401d71a:	je     0x6401d728
6401d71c:	mov    eax,DWORD PTR [ebp-0x64]
6401d71f:	cmp    BYTE PTR [eax],0x1a
6401d722:	jne    0x6401d728
6401d724:	xor    eax,eax
6401d726:	jmp    0x6401d746
6401d728:	call   0x64015a20
6401d72d:	mov    DWORD PTR [eax],0x1c
6401d733:	call   0x64015a33
6401d738:	and    DWORD PTR [eax],0x0
6401d73b:	or     eax,0xffffffff
6401d73e:	jmp    0x6401d746
6401d740:	mov    eax,DWORD PTR [ebp-0x60]
6401d743:	sub    eax,DWORD PTR [ebp-0x68]
6401d746:	pop    edi
6401d747:	pop    ebx
6401d748:	mov    ecx,DWORD PTR [ebp+0x510]
6401d74e:	xor    ecx,ebp
6401d750:	pop    esi
6401d751:	call   0x64013c5c
6401d756:	add    ebp,0x514
6401d75c:	leave  
6401d75d:	ret    
6401d75e:	push   0x10
6401d760:	push   0x6402c3d8
6401d765:	call   0x64015220
6401d76a:	mov    eax,DWORD PTR [ebp+0x8]
6401d76d:	cmp    eax,0xfffffffe
6401d770:	jne    0x6401d78d
6401d772:	call   0x64015a33
6401d777:	and    DWORD PTR [eax],0x0
6401d77a:	call   0x64015a20
6401d77f:	mov    DWORD PTR [eax],0x9
6401d785:	or     eax,0xffffffff
6401d788:	jmp    0x6401d82a
6401d78d:	xor    edi,edi
6401d78f:	cmp    eax,edi
6401d791:	jl     0x6401d79b
6401d793:	cmp    eax,DWORD PTR ds:0x64034500
6401d799:	jb     0x6401d7bc
6401d79b:	call   0x64015a33
6401d7a0:	mov    DWORD PTR [eax],edi
6401d7a2:	call   0x64015a20
6401d7a7:	mov    DWORD PTR [eax],0x9
6401d7ad:	push   edi
6401d7ae:	push   edi
6401d7af:	push   edi
6401d7b0:	push   edi
6401d7b1:	push   edi
6401d7b2:	call   0x64013794
6401d7b7:	add    esp,0x14
6401d7ba:	jmp    0x6401d785
6401d7bc:	mov    ecx,eax
6401d7be:	sar    ecx,0x5
6401d7c1:	lea    ebx,[ecx*4+0x64034520]
6401d7c8:	mov    esi,eax
6401d7ca:	and    esi,0x1f
6401d7cd:	shl    esi,0x6
6401d7d0:	mov    ecx,DWORD PTR [ebx]
6401d7d2:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401d7d7:	and    ecx,0x1
6401d7da:	je     0x6401d79b
6401d7dc:	push   eax
6401d7dd:	call   0x6401efb0
6401d7e2:	pop    ecx
6401d7e3:	mov    DWORD PTR [ebp-0x4],edi
6401d7e6:	mov    eax,DWORD PTR [ebx]
6401d7e8:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401d7ed:	je     0x6401d805
6401d7ef:	push   DWORD PTR [ebp+0x10]
6401d7f2:	push   DWORD PTR [ebp+0xc]
6401d7f5:	push   DWORD PTR [ebp+0x8]
6401d7f8:	call   0x6401d13c
6401d7fd:	add    esp,0xc
6401d800:	mov    DWORD PTR [ebp-0x1c],eax
6401d803:	jmp    0x6401d81b
6401d805:	call   0x64015a20
6401d80a:	mov    DWORD PTR [eax],0x9
6401d810:	call   0x64015a33
6401d815:	mov    DWORD PTR [eax],edi
6401d817:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401d81b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401d822:	call   0x6401d830
6401d827:	mov    eax,DWORD PTR [ebp-0x1c]
6401d82a:	call   0x64015265
6401d82f:	ret    
6401d830:	push   DWORD PTR [ebp+0x8]
6401d833:	call   0x6401f050
6401d838:	pop    ecx
6401d839:	ret    
6401d83a:	inc    DWORD PTR ds:0x64030f54
6401d840:	push   0x1000
6401d845:	call   0x64016f30
6401d84a:	test   eax,eax
6401d84c:	pop    ecx
6401d84d:	mov    ecx,DWORD PTR [esp+0x4]
6401d851:	mov    DWORD PTR [ecx+0x8],eax
6401d854:	je     0x6401d863
6401d856:	or     DWORD PTR [ecx+0xc],0x8
6401d85a:	mov    DWORD PTR [ecx+0x18],0x1000
6401d861:	jmp    0x6401d874
6401d863:	or     DWORD PTR [ecx+0xc],0x4
6401d867:	lea    eax,[ecx+0x14]
6401d86a:	mov    DWORD PTR [ecx+0x8],eax
6401d86d:	mov    DWORD PTR [ecx+0x18],0x2
6401d874:	mov    eax,DWORD PTR [ecx+0x8]
6401d877:	and    DWORD PTR [ecx+0x4],0x0
6401d87b:	mov    DWORD PTR [ecx],eax
6401d87d:	ret    
6401d87e:	mov    eax,DWORD PTR [esp+0x4]
6401d882:	cmp    eax,0xfffffffe
6401d885:	jne    0x6401d895
6401d887:	call   0x64015a20
6401d88c:	mov    DWORD PTR [eax],0x9
6401d892:	xor    eax,eax
6401d894:	ret    
6401d895:	push   esi
6401d896:	xor    esi,esi
6401d898:	cmp    eax,esi
6401d89a:	jl     0x6401d8a4
6401d89c:	cmp    eax,DWORD PTR ds:0x64034500
6401d8a2:	jb     0x6401d8c0
6401d8a4:	call   0x64015a20
6401d8a9:	push   esi
6401d8aa:	push   esi
6401d8ab:	push   esi
6401d8ac:	push   esi
6401d8ad:	push   esi
6401d8ae:	mov    DWORD PTR [eax],0x9
6401d8b4:	call   0x64013794
6401d8b9:	add    esp,0x14
6401d8bc:	xor    eax,eax
6401d8be:	pop    esi
6401d8bf:	ret    
6401d8c0:	mov    ecx,eax
6401d8c2:	and    eax,0x1f
6401d8c5:	sar    ecx,0x5
6401d8c8:	mov    ecx,DWORD PTR [ecx*4+0x64034520]
6401d8cf:	shl    eax,0x6
6401d8d2:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401d8d7:	and    eax,0x40
6401d8da:	pop    esi
6401d8db:	ret    
6401d8dc:	mov    eax,0x6402fc80
6401d8e1:	ret    
6401d8e2:	mov    eax,ds:0x640344e0
6401d8e7:	test   eax,eax
6401d8e9:	push   esi
6401d8ea:	push   0x14
6401d8ec:	pop    esi
6401d8ed:	jne    0x6401d8f6
6401d8ef:	mov    eax,0x200
6401d8f4:	jmp    0x6401d8fc
6401d8f6:	cmp    eax,esi
6401d8f8:	jge    0x6401d901
6401d8fa:	mov    eax,esi
6401d8fc:	mov    ds:0x640344e0,eax
6401d901:	push   0x4
6401d903:	push   eax
6401d904:	call   0x64016f70
6401d909:	test   eax,eax
6401d90b:	pop    ecx
6401d90c:	pop    ecx
6401d90d:	mov    ds:0x640334d0,eax
6401d912:	jne    0x6401d932
6401d914:	push   0x4
6401d916:	push   esi
6401d917:	mov    DWORD PTR ds:0x640344e0,esi
6401d91d:	call   0x64016f70
6401d922:	test   eax,eax
6401d924:	pop    ecx
6401d925:	pop    ecx
6401d926:	mov    ds:0x640334d0,eax
6401d92b:	jne    0x6401d932
6401d92d:	push   0x1a
6401d92f:	pop    eax
6401d930:	pop    esi
6401d931:	ret    
6401d932:	xor    edx,edx
6401d934:	mov    ecx,0x6402fc80
6401d939:	jmp    0x6401d940
6401d93b:	mov    eax,ds:0x640334d0
6401d940:	mov    DWORD PTR [edx+eax*1],ecx
6401d943:	add    ecx,0x20
6401d946:	add    edx,0x4
6401d949:	cmp    ecx,0x6402ff00
6401d94f:	jl     0x6401d93b
6401d951:	push   0xfffffffe
6401d953:	pop    esi
6401d954:	xor    edx,edx
6401d956:	mov    ecx,0x6402fc90
6401d95b:	push   edi
6401d95c:	mov    eax,edx
6401d95e:	sar    eax,0x5
6401d961:	mov    eax,DWORD PTR [eax*4+0x64034520]
6401d968:	mov    edi,edx
6401d96a:	and    edi,0x1f
6401d96d:	shl    edi,0x6
6401d970:	mov    eax,DWORD PTR [edi+eax*1]
6401d973:	cmp    eax,0xffffffff
6401d976:	je     0x6401d980
6401d978:	cmp    eax,esi
6401d97a:	je     0x6401d980
6401d97c:	test   eax,eax
6401d97e:	jne    0x6401d982
6401d980:	mov    DWORD PTR [ecx],esi
6401d982:	add    ecx,0x20
6401d985:	inc    edx
6401d986:	cmp    ecx,0x6402fcf0
6401d98c:	jl     0x6401d95c
6401d98e:	pop    edi
6401d98f:	xor    eax,eax
6401d991:	pop    esi
6401d992:	ret    
6401d993:	call   0x6401f351
6401d998:	cmp    BYTE PTR ds:0x6403090c,0x0
6401d99f:	je     0x6401d9a6
6401d9a1:	call   0x6401f134
6401d9a6:	push   DWORD PTR ds:0x640334d0
6401d9ac:	call   0x64014af6
6401d9b1:	pop    ecx
6401d9b2:	ret    
6401d9b3:	push   esi
6401d9b4:	mov    esi,DWORD PTR [esp+0x8]
6401d9b8:	mov    eax,0x6402fc80
6401d9bd:	cmp    esi,eax
6401d9bf:	jb     0x6401d9e3
6401d9c1:	cmp    esi,0x6402fee0
6401d9c7:	ja     0x6401d9e3
6401d9c9:	mov    ecx,esi
6401d9cb:	sub    ecx,eax
6401d9cd:	sar    ecx,0x5
6401d9d0:	add    ecx,0x10
6401d9d3:	push   ecx
6401d9d4:	call   0x6401b21a
6401d9d9:	or     DWORD PTR [esi+0xc],0x8000
6401d9e0:	pop    ecx
6401d9e1:	pop    esi
6401d9e2:	ret    
6401d9e3:	add    esi,0x20
6401d9e6:	push   esi
6401d9e7:	call   DWORD PTR ds:0x6402609c
6401d9ed:	pop    esi
6401d9ee:	ret    
6401d9ef:	mov    eax,DWORD PTR [esp+0x4]
6401d9f3:	cmp    eax,0x14
6401d9f6:	jge    0x6401da0e
6401d9f8:	add    eax,0x10
6401d9fb:	push   eax
6401d9fc:	call   0x6401b21a
6401da01:	mov    eax,DWORD PTR [esp+0xc]
6401da05:	or     DWORD PTR [eax+0xc],0x8000
6401da0c:	pop    ecx
6401da0d:	ret    
6401da0e:	mov    eax,DWORD PTR [esp+0x8]
6401da12:	add    eax,0x20
6401da15:	push   eax
6401da16:	call   DWORD PTR ds:0x6402609c
6401da1c:	ret    
6401da1d:	mov    eax,DWORD PTR [esp+0x4]
6401da21:	mov    ecx,0x6402fc80
6401da26:	cmp    eax,ecx
6401da28:	jb     0x6401da48
6401da2a:	cmp    eax,0x6402fee0
6401da2f:	ja     0x6401da48
6401da31:	and    DWORD PTR [eax+0xc],0xffff7fff
6401da38:	sub    eax,ecx
6401da3a:	sar    eax,0x5
6401da3d:	add    eax,0x10
6401da40:	push   eax
6401da41:	call   0x6401b142
6401da46:	pop    ecx
6401da47:	ret    
6401da48:	add    eax,0x20
6401da4b:	push   eax
6401da4c:	call   DWORD PTR ds:0x640260a0
6401da52:	ret    
6401da53:	mov    ecx,DWORD PTR [esp+0x4]
6401da57:	cmp    ecx,0x14
6401da5a:	mov    eax,DWORD PTR [esp+0x8]
6401da5e:	jge    0x6401da72
6401da60:	and    DWORD PTR [eax+0xc],0xffff7fff
6401da67:	add    ecx,0x10
6401da6a:	push   ecx
6401da6b:	call   0x6401b142
6401da70:	pop    ecx
6401da71:	ret    
6401da72:	add    eax,0x20
6401da75:	push   eax
6401da76:	call   DWORD PTR ds:0x640260a0
6401da7c:	ret    
6401da7d:	mov    eax,DWORD PTR [esp+0x4]
6401da81:	push   esi
6401da82:	xor    esi,esi
6401da84:	cmp    eax,esi
6401da86:	jne    0x6401daa5
6401da88:	call   0x64015a20
6401da8d:	push   esi
6401da8e:	push   esi
6401da8f:	push   esi
6401da90:	push   esi
6401da91:	push   esi
6401da92:	mov    DWORD PTR [eax],0x16
6401da98:	call   0x64013794
6401da9d:	add    esp,0x14
6401daa0:	or     eax,0xffffffff
6401daa3:	pop    esi
6401daa4:	ret    
6401daa5:	mov    eax,DWORD PTR [eax+0x10]
6401daa8:	pop    esi
6401daa9:	ret    
6401daaa:	push   ebp
6401daab:	mov    ebp,esp
6401daad:	sub    esp,0x10
6401dab0:	mov    eax,ds:0x6402f09c
6401dab5:	xor    eax,ebp
6401dab7:	mov    DWORD PTR [ebp-0x4],eax
6401daba:	push   ebx
6401dabb:	push   esi
6401dabc:	mov    esi,DWORD PTR [ebp+0xc]
6401dabf:	test   BYTE PTR [esi+0xc],0x40
6401dac3:	push   edi
6401dac4:	jne    0x6401dc59
6401daca:	push   esi
6401dacb:	call   0x6401da7d
6401dad0:	cmp    eax,0xffffffff
6401dad3:	pop    ecx
6401dad4:	mov    edi,0x6402f880
6401dad9:	je     0x6401db09
6401dadb:	push   esi
6401dadc:	call   0x6401da7d
6401dae1:	cmp    eax,0xfffffffe
6401dae4:	pop    ecx
6401dae5:	je     0x6401db09
6401dae7:	push   esi
6401dae8:	call   0x6401da7d
6401daed:	sar    eax,0x5
6401daf0:	push   esi
6401daf1:	lea    ebx,[eax*4+0x64034520]
6401daf8:	call   0x6401da7d
6401dafd:	and    eax,0x1f
6401db00:	pop    ecx
6401db01:	shl    eax,0x6
6401db04:	add    eax,DWORD PTR [ebx]
6401db06:	pop    ecx
6401db07:	jmp    0x6401db0b
6401db09:	mov    eax,edi
6401db0b:	mov    al,BYTE PTR [eax+0x24]
6401db0e:	and    al,0x7f
6401db10:	cmp    al,0x2
6401db12:	je     0x6401dc59
6401db18:	push   esi
6401db19:	call   0x6401da7d
6401db1e:	cmp    eax,0xffffffff
6401db21:	pop    ecx
6401db22:	je     0x6401db52
6401db24:	push   esi
6401db25:	call   0x6401da7d
6401db2a:	cmp    eax,0xfffffffe
6401db2d:	pop    ecx
6401db2e:	je     0x6401db52
6401db30:	push   esi
6401db31:	call   0x6401da7d
6401db36:	sar    eax,0x5
6401db39:	push   esi
6401db3a:	lea    ebx,[eax*4+0x64034520]
6401db41:	call   0x6401da7d
6401db46:	and    eax,0x1f
6401db49:	pop    ecx
6401db4a:	shl    eax,0x6
6401db4d:	add    eax,DWORD PTR [ebx]
6401db4f:	pop    ecx
6401db50:	jmp    0x6401db54
6401db52:	mov    eax,edi
6401db54:	mov    al,BYTE PTR [eax+0x24]
6401db57:	and    al,0x7f
6401db59:	cmp    al,0x1
6401db5b:	jne    0x6401dbb9
6401db5d:	dec    DWORD PTR [esi+0x4]
6401db60:	mov    ebx,DWORD PTR [ebp+0x8]
6401db63:	js     0x6401db73
6401db65:	mov    eax,DWORD PTR [esi]
6401db67:	mov    BYTE PTR [eax],bl
6401db69:	mov    ecx,DWORD PTR [esi]
6401db6b:	movzx  eax,BYTE PTR [ecx]
6401db6e:	inc    ecx
6401db6f:	mov    DWORD PTR [esi],ecx
6401db71:	jmp    0x6401db7f
6401db73:	movsx  eax,bl
6401db76:	push   esi
6401db77:	push   eax
6401db78:	call   0x64017d65
6401db7d:	pop    ecx
6401db7e:	pop    ecx
6401db7f:	cmp    eax,0xffffffff
6401db82:	jne    0x6401db8d
6401db84:	or     ax,0xffff
6401db88:	jmp    0x6401dc79
6401db8d:	dec    DWORD PTR [esi+0x4]
6401db90:	js     0x6401dba0
6401db92:	mov    eax,DWORD PTR [esi]
6401db94:	mov    BYTE PTR [eax],bh
6401db96:	mov    ecx,DWORD PTR [esi]
6401db98:	movzx  eax,BYTE PTR [ecx]
6401db9b:	inc    ecx
6401db9c:	mov    DWORD PTR [esi],ecx
6401db9e:	jmp    0x6401dbac
6401dba0:	movsx  eax,bh
6401dba3:	push   esi
6401dba4:	push   eax
6401dba5:	call   0x64017d65
6401dbaa:	pop    ecx
6401dbab:	pop    ecx
6401dbac:	cmp    eax,0xffffffff
6401dbaf:	je     0x6401db84
6401dbb1:	mov    ax,bx
6401dbb4:	jmp    0x6401dc79
6401dbb9:	push   esi
6401dbba:	call   0x6401da7d
6401dbbf:	cmp    eax,0xffffffff
6401dbc2:	pop    ecx
6401dbc3:	je     0x6401dbf3
6401dbc5:	push   esi
6401dbc6:	call   0x6401da7d
6401dbcb:	cmp    eax,0xfffffffe
6401dbce:	pop    ecx
6401dbcf:	je     0x6401dbf3
6401dbd1:	push   esi
6401dbd2:	call   0x6401da7d
6401dbd7:	sar    eax,0x5
6401dbda:	push   esi
6401dbdb:	lea    ebx,[eax*4+0x64034520]
6401dbe2:	call   0x6401da7d
6401dbe7:	and    eax,0x1f
6401dbea:	pop    ecx
6401dbeb:	shl    eax,0x6
6401dbee:	add    eax,DWORD PTR [ebx]
6401dbf0:	pop    ecx
6401dbf1:	jmp    0x6401dbf5
6401dbf3:	mov    eax,edi
6401dbf5:	test   BYTE PTR [eax+0x4],0x80
6401dbf9:	je     0x6401dc59
6401dbfb:	push   DWORD PTR [ebp+0x8]
6401dbfe:	lea    eax,[ebp-0xc]
6401dc01:	push   0x5
6401dc03:	push   eax
6401dc04:	lea    eax,[ebp-0x10]
6401dc07:	push   eax
6401dc08:	call   0x6401ec48
6401dc0d:	add    esp,0x10
6401dc10:	test   eax,eax
6401dc12:	jne    0x6401db84
6401dc18:	xor    ebx,ebx
6401dc1a:	cmp    DWORD PTR [ebp-0x10],ebx
6401dc1d:	jle    0x6401dc53
6401dc1f:	dec    DWORD PTR [esi+0x4]
6401dc22:	js     0x6401dc36
6401dc24:	mov    eax,DWORD PTR [esi]
6401dc26:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401dc2a:	mov    BYTE PTR [eax],cl
6401dc2c:	mov    ecx,DWORD PTR [esi]
6401dc2e:	movzx  eax,BYTE PTR [ecx]
6401dc31:	inc    ecx
6401dc32:	mov    DWORD PTR [esi],ecx
6401dc34:	jmp    0x6401dc44
6401dc36:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401dc3b:	push   esi
6401dc3c:	push   eax
6401dc3d:	call   0x64017d65
6401dc42:	pop    ecx
6401dc43:	pop    ecx
6401dc44:	cmp    eax,0xffffffff
6401dc47:	je     0x6401db84
6401dc4d:	inc    ebx
6401dc4e:	cmp    ebx,DWORD PTR [ebp-0x10]
6401dc51:	jl     0x6401dc1f
6401dc53:	mov    ax,WORD PTR [ebp+0x8]
6401dc57:	jmp    0x6401dc79
6401dc59:	add    DWORD PTR [esi+0x4],0xfffffffe
6401dc5d:	js     0x6401dc6c
6401dc5f:	mov    ecx,DWORD PTR [esi]
6401dc61:	mov    eax,DWORD PTR [ebp+0x8]
6401dc64:	mov    WORD PTR [ecx],ax
6401dc67:	add    DWORD PTR [esi],0x2
6401dc6a:	jmp    0x6401dc79
6401dc6c:	movzx  eax,WORD PTR [ebp+0x8]
6401dc70:	push   esi
6401dc71:	push   eax
6401dc72:	call   0x6401f35a
6401dc77:	pop    ecx
6401dc78:	pop    ecx
6401dc79:	mov    ecx,DWORD PTR [ebp-0x4]
6401dc7c:	pop    edi
6401dc7d:	pop    esi
6401dc7e:	xor    ecx,ebp
6401dc80:	pop    ebx
6401dc81:	call   0x64013c5c
6401dc86:	leave  
6401dc87:	ret    
6401dc88:	mov    eax,ds:0x6402f09c
6401dc8d:	or     eax,0x1
6401dc90:	xor    ecx,ecx
6401dc92:	cmp    DWORD PTR ds:0x64030f58,eax
6401dc98:	sete   cl
6401dc9b:	mov    eax,ecx
6401dc9d:	ret    
6401dc9e:	push   ebp
6401dc9f:	mov    ebp,esp
6401dca1:	sub    esp,0x10
6401dca4:	push   ebx
6401dca5:	push   esi
6401dca6:	mov    esi,DWORD PTR [ebp+0xc]
6401dca9:	xor    ebx,ebx
6401dcab:	cmp    esi,ebx
6401dcad:	je     0x6401dcc2
6401dcaf:	cmp    DWORD PTR [ebp+0x10],ebx
6401dcb2:	je     0x6401dcc2
6401dcb4:	cmp    BYTE PTR [esi],bl
6401dcb6:	jne    0x6401dcc8
6401dcb8:	mov    eax,DWORD PTR [ebp+0x8]
6401dcbb:	cmp    eax,ebx
6401dcbd:	je     0x6401dcc2
6401dcbf:	mov    WORD PTR [eax],bx
6401dcc2:	xor    eax,eax
6401dcc4:	pop    esi
6401dcc5:	pop    ebx
6401dcc6:	leave  
6401dcc7:	ret    
6401dcc8:	push   DWORD PTR [ebp+0x14]
6401dccb:	lea    ecx,[ebp-0x10]
6401dcce:	call   0x64013dff
6401dcd3:	mov    eax,DWORD PTR [ebp-0x10]
6401dcd6:	cmp    DWORD PTR [eax+0x14],ebx
6401dcd9:	jne    0x6401dcfa
6401dcdb:	mov    eax,DWORD PTR [ebp+0x8]
6401dcde:	cmp    eax,ebx
6401dce0:	je     0x6401dce9
6401dce2:	movzx  cx,BYTE PTR [esi]
6401dce6:	mov    WORD PTR [eax],cx
6401dce9:	cmp    BYTE PTR [ebp-0x4],bl
6401dcec:	je     0x6401dcf5
6401dcee:	mov    eax,DWORD PTR [ebp-0x8]
6401dcf1:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dcf5:	xor    eax,eax
6401dcf7:	inc    eax
6401dcf8:	jmp    0x6401dcc4
6401dcfa:	lea    eax,[ebp-0x10]
6401dcfd:	push   eax
6401dcfe:	movzx  eax,BYTE PTR [esi]
6401dd01:	push   eax
6401dd02:	call   0x6401b060
6401dd07:	test   eax,eax
6401dd09:	pop    ecx
6401dd0a:	pop    ecx
6401dd0b:	je     0x6401dd8a
6401dd0d:	mov    eax,DWORD PTR [ebp-0x10]
6401dd10:	mov    ecx,DWORD PTR [eax+0xac]
6401dd16:	cmp    ecx,0x1
6401dd19:	jle    0x6401dd40
6401dd1b:	cmp    DWORD PTR [ebp+0x10],ecx
6401dd1e:	jl     0x6401dd40
6401dd20:	xor    edx,edx
6401dd22:	cmp    DWORD PTR [ebp+0x8],ebx
6401dd25:	setne  dl
6401dd28:	push   edx
6401dd29:	push   DWORD PTR [ebp+0x8]
6401dd2c:	push   ecx
6401dd2d:	push   esi
6401dd2e:	push   0x9
6401dd30:	push   DWORD PTR [eax+0x4]
6401dd33:	call   DWORD PTR ds:0x64026024
6401dd39:	test   eax,eax
6401dd3b:	mov    eax,DWORD PTR [ebp-0x10]
6401dd3e:	jne    0x6401dd50
6401dd40:	mov    ecx,DWORD PTR [ebp+0x10]
6401dd43:	cmp    ecx,DWORD PTR [eax+0xac]
6401dd49:	jb     0x6401dd6b
6401dd4b:	cmp    BYTE PTR [esi+0x1],bl
6401dd4e:	je     0x6401dd6b
6401dd50:	cmp    BYTE PTR [ebp-0x4],bl
6401dd53:	mov    eax,DWORD PTR [eax+0xac]
6401dd59:	je     0x6401dcc4
6401dd5f:	mov    ecx,DWORD PTR [ebp-0x8]
6401dd62:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401dd66:	jmp    0x6401dcc4
6401dd6b:	call   0x64015a20
6401dd70:	mov    DWORD PTR [eax],0x2a
6401dd76:	cmp    BYTE PTR [ebp-0x4],bl
6401dd79:	je     0x6401dd82
6401dd7b:	mov    eax,DWORD PTR [ebp-0x8]
6401dd7e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dd82:	or     eax,0xffffffff
6401dd85:	jmp    0x6401dcc4
6401dd8a:	xor    eax,eax
6401dd8c:	cmp    DWORD PTR [ebp+0x8],ebx
6401dd8f:	setne  al
6401dd92:	push   eax
6401dd93:	push   DWORD PTR [ebp+0x8]
6401dd96:	mov    eax,DWORD PTR [ebp-0x10]
6401dd99:	push   0x1
6401dd9b:	push   esi
6401dd9c:	push   0x9
6401dd9e:	push   DWORD PTR [eax+0x4]
6401dda1:	call   DWORD PTR ds:0x64026024
6401dda7:	test   eax,eax
6401dda9:	jne    0x6401dce9
6401ddaf:	jmp    0x6401dd6b
6401ddb1:	push   0x0
6401ddb3:	push   DWORD PTR [esp+0x10]
6401ddb7:	push   DWORD PTR [esp+0x10]
6401ddbb:	push   DWORD PTR [esp+0x10]
6401ddbf:	call   0x6401dc9e
6401ddc4:	add    esp,0x10
6401ddc7:	ret    
6401ddc8:	test   BYTE PTR [ecx+0xc],0x40
6401ddcc:	je     0x6401ddd4
6401ddce:	cmp    DWORD PTR [ecx+0x8],0x0
6401ddd2:	je     0x6401ddf8
6401ddd4:	dec    DWORD PTR [ecx+0x4]
6401ddd7:	js     0x6401dde4
6401ddd9:	mov    edx,DWORD PTR [ecx]
6401dddb:	mov    BYTE PTR [edx],al
6401dddd:	inc    DWORD PTR [ecx]
6401dddf:	movzx  eax,al
6401dde2:	jmp    0x6401ddf0
6401dde4:	movsx  eax,al
6401dde7:	push   ecx
6401dde8:	push   eax
6401dde9:	call   0x64017d65
6401ddee:	pop    ecx
6401ddef:	pop    ecx
6401ddf0:	cmp    eax,0xffffffff
6401ddf3:	jne    0x6401ddf8
6401ddf5:	or     DWORD PTR [esi],eax
6401ddf7:	ret    
6401ddf8:	inc    DWORD PTR [esi]
6401ddfa:	ret    
6401ddfb:	push   ebp
6401ddfc:	mov    ebp,esp
6401ddfe:	push   esi
6401ddff:	mov    esi,eax
6401de01:	jmp    0x6401de16
6401de03:	mov    ecx,DWORD PTR [ebp+0x10]
6401de06:	mov    al,BYTE PTR [ebp+0x8]
6401de09:	dec    DWORD PTR [ebp+0xc]
6401de0c:	call   0x6401ddc8
6401de11:	cmp    DWORD PTR [esi],0xffffffff
6401de14:	je     0x6401de1c
6401de16:	cmp    DWORD PTR [ebp+0xc],0x0
6401de1a:	jg     0x6401de03
6401de1c:	pop    esi
6401de1d:	pop    ebp
6401de1e:	ret    
6401de1f:	push   ebp
6401de20:	lea    ebp,[esp-0x1f8]
6401de27:	sub    esp,0x278
6401de2d:	mov    eax,ds:0x6402f09c
6401de32:	xor    eax,ebp
6401de34:	mov    DWORD PTR [ebp+0x1f4],eax
6401de3a:	mov    eax,DWORD PTR [ebp+0x200]
6401de40:	push   ebx
6401de41:	mov    ebx,DWORD PTR [ebp+0x204]
6401de47:	push   esi
6401de48:	xor    esi,esi
6401de4a:	push   edi
6401de4b:	mov    edi,DWORD PTR [ebp+0x20c]
6401de51:	push   DWORD PTR [ebp+0x208]
6401de57:	lea    ecx,[ebp-0x5c]
6401de5a:	mov    DWORD PTR [ebp-0x30],eax
6401de5d:	mov    DWORD PTR [ebp-0x2c],edi
6401de60:	mov    DWORD PTR [ebp-0x64],esi
6401de63:	mov    DWORD PTR [ebp-0x18],esi
6401de66:	mov    DWORD PTR [ebp-0x40],esi
6401de69:	mov    DWORD PTR [ebp-0x20],esi
6401de6c:	mov    DWORD PTR [ebp-0x3c],esi
6401de6f:	mov    DWORD PTR [ebp-0x68],esi
6401de72:	mov    DWORD PTR [ebp-0x44],esi
6401de75:	call   0x64013dff
6401de7a:	cmp    DWORD PTR [ebp-0x30],esi
6401de7d:	jne    0x6401deac
6401de7f:	call   0x64015a20
6401de84:	push   esi
6401de85:	push   esi
6401de86:	push   esi
6401de87:	push   esi
6401de88:	mov    DWORD PTR [eax],0x16
6401de8e:	push   esi
6401de8f:	call   0x64013794
6401de94:	add    esp,0x14
6401de97:	cmp    BYTE PTR [ebp-0x50],0x0
6401de9b:	je     0x6401dea4
6401de9d:	mov    eax,DWORD PTR [ebp-0x54]
6401dea0:	and    DWORD PTR [eax+0x70],0xfffffffd
6401dea4:	or     eax,0xffffffff
6401dea7:	jmp    0x6401e796
6401deac:	mov    eax,DWORD PTR [ebp-0x30]
6401deaf:	test   BYTE PTR [eax+0xc],0x40
6401deb3:	jne    0x6401df5d
6401deb9:	push   eax
6401deba:	call   0x6401da7d
6401debf:	cmp    eax,0xffffffff
6401dec2:	pop    ecx
6401dec3:	je     0x6401defb
6401dec5:	push   DWORD PTR [ebp-0x30]
6401dec8:	call   0x6401da7d
6401decd:	cmp    eax,0xfffffffe
6401ded0:	pop    ecx
6401ded1:	je     0x6401defb
6401ded3:	push   DWORD PTR [ebp-0x30]
6401ded6:	call   0x6401da7d
6401dedb:	push   DWORD PTR [ebp-0x30]
6401dede:	sar    eax,0x5
6401dee1:	lea    esi,[eax*4+0x64034520]
6401dee8:	call   0x6401da7d
6401deed:	and    eax,0x1f
6401def0:	shl    eax,0x6
6401def3:	add    eax,DWORD PTR [esi]
6401def5:	pop    ecx
6401def6:	pop    ecx
6401def7:	xor    esi,esi
6401def9:	jmp    0x6401df00
6401defb:	mov    eax,0x6402f880
6401df00:	test   BYTE PTR [eax+0x24],0x7f
6401df04:	jne    0x6401de7f
6401df0a:	push   DWORD PTR [ebp-0x30]
6401df0d:	call   0x6401da7d
6401df12:	cmp    eax,0xffffffff
6401df15:	pop    ecx
6401df16:	je     0x6401df4e
6401df18:	push   DWORD PTR [ebp-0x30]
6401df1b:	call   0x6401da7d
6401df20:	cmp    eax,0xfffffffe
6401df23:	pop    ecx
6401df24:	je     0x6401df4e
6401df26:	push   DWORD PTR [ebp-0x30]
6401df29:	call   0x6401da7d
6401df2e:	push   DWORD PTR [ebp-0x30]
6401df31:	sar    eax,0x5
6401df34:	lea    esi,[eax*4+0x64034520]
6401df3b:	call   0x6401da7d
6401df40:	and    eax,0x1f
6401df43:	shl    eax,0x6
6401df46:	add    eax,DWORD PTR [esi]
6401df48:	pop    ecx
6401df49:	pop    ecx
6401df4a:	xor    esi,esi
6401df4c:	jmp    0x6401df53
6401df4e:	mov    eax,0x6402f880
6401df53:	test   BYTE PTR [eax+0x24],0x80
6401df57:	jne    0x6401de7f
6401df5d:	cmp    ebx,esi
6401df5f:	je     0x6401de7f
6401df65:	mov    dl,BYTE PTR [ebx]
6401df67:	test   dl,dl
6401df69:	mov    DWORD PTR [ebp-0x34],esi
6401df6c:	mov    DWORD PTR [ebp-0x28],esi
6401df6f:	mov    DWORD PTR [ebp-0x48],esi
6401df72:	mov    DWORD PTR [ebp-0x60],esi
6401df75:	mov    BYTE PTR [ebp-0x19],dl
6401df78:	je     0x6401e786
6401df7e:	inc    ebx
6401df7f:	xor    eax,eax
6401df81:	cmp    DWORD PTR [ebp-0x34],eax
6401df84:	mov    DWORD PTR [ebp-0x4c],ebx
6401df87:	jl     0x6401e775
6401df8d:	mov    cl,dl
6401df8f:	sub    cl,0x20
6401df92:	cmp    cl,0x58
6401df95:	ja     0x6401dfa4
6401df97:	movsx  eax,dl
6401df9a:	movzx  eax,BYTE PTR [eax+0x640284b8]
6401dfa1:	and    eax,0xf
6401dfa4:	mov    ecx,DWORD PTR [ebp-0x48]
6401dfa7:	imul   eax,eax,0x9
6401dfaa:	movzx  eax,BYTE PTR [eax+ecx*1+0x640284d8]
6401dfb2:	push   0x8
6401dfb4:	shr    eax,0x4
6401dfb7:	pop    esi
6401dfb8:	cmp    eax,esi
6401dfba:	mov    DWORD PTR [ebp-0x48],eax
6401dfbd:	je     0x6401e75e
6401dfc3:	push   0x7
6401dfc5:	pop    ecx
6401dfc6:	cmp    eax,ecx
6401dfc8:	ja     0x6401e748
6401dfce:	jmp    DWORD PTR [eax*4+0x6401e7af]
6401dfd5:	xor    eax,eax
6401dfd7:	or     DWORD PTR [ebp-0x20],0xffffffff
6401dfdb:	mov    DWORD PTR [ebp-0x74],eax
6401dfde:	mov    DWORD PTR [ebp-0x68],eax
6401dfe1:	mov    DWORD PTR [ebp-0x40],eax
6401dfe4:	mov    DWORD PTR [ebp-0x3c],eax
6401dfe7:	mov    DWORD PTR [ebp-0x18],eax
6401dfea:	mov    DWORD PTR [ebp-0x44],eax
6401dfed:	jmp    0x6401e748
6401dff2:	movsx  eax,dl
6401dff5:	sub    eax,0x20
6401dff8:	je     0x6401e036
6401dffa:	sub    eax,0x3
6401dffd:	je     0x6401e02a
6401dfff:	sub    eax,esi
6401e001:	je     0x6401e021
6401e003:	dec    eax
6401e004:	dec    eax
6401e005:	je     0x6401e018
6401e007:	sub    eax,0x3
6401e00a:	jne    0x6401e748
6401e010:	or     DWORD PTR [ebp-0x18],esi
6401e013:	jmp    0x6401e748
6401e018:	or     DWORD PTR [ebp-0x18],0x4
6401e01c:	jmp    0x6401e748
6401e021:	or     DWORD PTR [ebp-0x18],0x1
6401e025:	jmp    0x6401e748
6401e02a:	or     DWORD PTR [ebp-0x18],0x80
6401e031:	jmp    0x6401e748
6401e036:	or     DWORD PTR [ebp-0x18],0x2
6401e03a:	jmp    0x6401e748
6401e03f:	cmp    dl,0x2a
6401e042:	jne    0x6401e064
6401e044:	add    edi,0x4
6401e047:	mov    DWORD PTR [ebp-0x2c],edi
6401e04a:	mov    edi,DWORD PTR [edi-0x4]
6401e04d:	test   edi,edi
6401e04f:	mov    DWORD PTR [ebp-0x40],edi
6401e052:	jge    0x6401e748
6401e058:	or     DWORD PTR [ebp-0x18],0x4
6401e05c:	neg    DWORD PTR [ebp-0x40]
6401e05f:	jmp    0x6401e748
6401e064:	mov    eax,DWORD PTR [ebp-0x40]
6401e067:	imul   eax,eax,0xa
6401e06a:	movsx  ecx,dl
6401e06d:	lea    eax,[eax+ecx*1-0x30]
6401e071:	mov    DWORD PTR [ebp-0x40],eax
6401e074:	jmp    0x6401e748
6401e079:	and    DWORD PTR [ebp-0x20],0x0
6401e07d:	jmp    0x6401e748
6401e082:	cmp    dl,0x2a
6401e085:	jne    0x6401e0a4
6401e087:	add    edi,0x4
6401e08a:	mov    DWORD PTR [ebp-0x2c],edi
6401e08d:	mov    edi,DWORD PTR [edi-0x4]
6401e090:	test   edi,edi
6401e092:	mov    DWORD PTR [ebp-0x20],edi
6401e095:	jge    0x6401e748
6401e09b:	or     DWORD PTR [ebp-0x20],0xffffffff
6401e09f:	jmp    0x6401e748
6401e0a4:	mov    eax,DWORD PTR [ebp-0x20]
6401e0a7:	imul   eax,eax,0xa
6401e0aa:	movsx  ecx,dl
6401e0ad:	lea    eax,[eax+ecx*1-0x30]
6401e0b1:	mov    DWORD PTR [ebp-0x20],eax
6401e0b4:	jmp    0x6401e748
6401e0b9:	cmp    dl,0x49
6401e0bc:	je     0x6401e104
6401e0be:	cmp    dl,0x68
6401e0c1:	je     0x6401e0fb
6401e0c3:	cmp    dl,0x6c
6401e0c6:	je     0x6401e0dd
6401e0c8:	cmp    dl,0x77
6401e0cb:	jne    0x6401e748
6401e0d1:	or     DWORD PTR [ebp-0x18],0x800
6401e0d8:	jmp    0x6401e748
6401e0dd:	cmp    BYTE PTR [ebx],0x6c
6401e0e0:	jne    0x6401e0f2
6401e0e2:	inc    ebx
6401e0e3:	or     DWORD PTR [ebp-0x18],0x1000
6401e0ea:	mov    DWORD PTR [ebp-0x4c],ebx
6401e0ed:	jmp    0x6401e748
6401e0f2:	or     DWORD PTR [ebp-0x18],0x10
6401e0f6:	jmp    0x6401e748
6401e0fb:	or     DWORD PTR [ebp-0x18],0x20
6401e0ff:	jmp    0x6401e748
6401e104:	mov    al,BYTE PTR [ebx]
6401e106:	cmp    al,0x36
6401e108:	jne    0x6401e121
6401e10a:	cmp    BYTE PTR [ebx+0x1],0x34
6401e10e:	jne    0x6401e121
6401e110:	inc    ebx
6401e111:	inc    ebx
6401e112:	or     DWORD PTR [ebp-0x18],0x8000
6401e119:	mov    DWORD PTR [ebp-0x4c],ebx
6401e11c:	jmp    0x6401e748
6401e121:	cmp    al,0x33
6401e123:	jne    0x6401e13c
6401e125:	cmp    BYTE PTR [ebx+0x1],0x32
6401e129:	jne    0x6401e13c
6401e12b:	inc    ebx
6401e12c:	inc    ebx
6401e12d:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401e134:	mov    DWORD PTR [ebp-0x4c],ebx
6401e137:	jmp    0x6401e748
6401e13c:	cmp    al,0x64
6401e13e:	je     0x6401e748
6401e144:	cmp    al,0x69
6401e146:	je     0x6401e748
6401e14c:	cmp    al,0x6f
6401e14e:	je     0x6401e748
6401e154:	cmp    al,0x75
6401e156:	je     0x6401e748
6401e15c:	cmp    al,0x78
6401e15e:	je     0x6401e748
6401e164:	cmp    al,0x58
6401e166:	je     0x6401e748
6401e16c:	and    DWORD PTR [ebp-0x48],0x0
6401e170:	and    DWORD PTR [ebp-0x44],0x0
6401e174:	lea    eax,[ebp-0x5c]
6401e177:	push   eax
6401e178:	movzx  eax,dl
6401e17b:	push   eax
6401e17c:	call   0x6401b060
6401e181:	pop    ecx
6401e182:	test   eax,eax
6401e184:	mov    al,BYTE PTR [ebp-0x19]
6401e187:	pop    ecx
6401e188:	je     0x6401e1a3
6401e18a:	mov    ecx,DWORD PTR [ebp-0x30]
6401e18d:	lea    esi,[ebp-0x34]
6401e190:	call   0x6401ddc8
6401e195:	mov    al,BYTE PTR [ebx]
6401e197:	inc    ebx
6401e198:	test   al,al
6401e19a:	mov    DWORD PTR [ebp-0x4c],ebx
6401e19d:	je     0x6401e75e
6401e1a3:	mov    ecx,DWORD PTR [ebp-0x30]
6401e1a6:	lea    esi,[ebp-0x34]
6401e1a9:	call   0x6401ddc8
6401e1ae:	jmp    0x6401e748
6401e1b3:	movsx  eax,dl
6401e1b6:	cmp    eax,0x64
6401e1b9:	jg     0x6401e333
6401e1bf:	je     0x6401e3ae
6401e1c5:	cmp    eax,0x53
6401e1c8:	jg     0x6401e27a
6401e1ce:	je     0x6401e22b
6401e1d0:	sub    eax,0x41
6401e1d3:	je     0x6401e1e5
6401e1d5:	dec    eax
6401e1d6:	dec    eax
6401e1d7:	je     0x6401e21a
6401e1d9:	dec    eax
6401e1da:	dec    eax
6401e1db:	je     0x6401e1e5
6401e1dd:	dec    eax
6401e1de:	dec    eax
6401e1df:	jne    0x6401e630
6401e1e5:	add    dl,0x20
6401e1e8:	mov    DWORD PTR [ebp-0x74],0x1
6401e1ef:	mov    BYTE PTR [ebp-0x19],dl
6401e1f2:	or     DWORD PTR [ebp-0x18],0x40
6401e1f6:	cmp    DWORD PTR [ebp-0x20],0x0
6401e1fa:	lea    ebx,[ebp-0x14]
6401e1fd:	mov    eax,0x200
6401e202:	mov    DWORD PTR [ebp-0x24],ebx
6401e205:	mov    DWORD PTR [ebp-0x6c],eax
6401e208:	jge    0x6401e3d2
6401e20e:	mov    DWORD PTR [ebp-0x20],0x6
6401e215:	jmp    0x6401e421
6401e21a:	test   WORD PTR [ebp-0x18],0x830
6401e220:	jne    0x6401e297
6401e222:	or     DWORD PTR [ebp-0x18],0x800
6401e229:	jmp    0x6401e297
6401e22b:	test   WORD PTR [ebp-0x18],0x830
6401e231:	jne    0x6401e23a
6401e233:	or     DWORD PTR [ebp-0x18],0x800
6401e23a:	mov    ecx,DWORD PTR [ebp-0x20]
6401e23d:	cmp    ecx,0xffffffff
6401e240:	jne    0x6401e247
6401e242:	mov    ecx,0x7fffffff
6401e247:	add    edi,0x4
6401e24a:	test   WORD PTR [ebp-0x18],0x810
6401e250:	mov    DWORD PTR [ebp-0x2c],edi
6401e253:	mov    edi,DWORD PTR [edi-0x4]
6401e256:	mov    DWORD PTR [ebp-0x24],edi
6401e259:	je     0x6401e60e
6401e25f:	test   edi,edi
6401e261:	jne    0x6401e26b
6401e263:	mov    eax,ds:0x6402f954
6401e268:	mov    DWORD PTR [ebp-0x24],eax
6401e26b:	mov    eax,DWORD PTR [ebp-0x24]
6401e26e:	mov    DWORD PTR [ebp-0x44],0x1
6401e275:	jmp    0x6401e603
6401e27a:	sub    eax,0x58
6401e27d:	je     0x6401e4b7
6401e283:	dec    eax
6401e284:	dec    eax
6401e285:	je     0x6401e2e4
6401e287:	sub    eax,ecx
6401e289:	je     0x6401e1f2
6401e28f:	dec    eax
6401e290:	dec    eax
6401e291:	jne    0x6401e630
6401e297:	add    edi,0x4
6401e29a:	test   WORD PTR [ebp-0x18],0x810
6401e2a0:	mov    DWORD PTR [ebp-0x2c],edi
6401e2a3:	je     0x6401e2cc
6401e2a5:	movzx  eax,WORD PTR [edi-0x4]
6401e2a9:	push   eax
6401e2aa:	push   0x200
6401e2af:	lea    eax,[ebp-0x14]
6401e2b2:	push   eax
6401e2b3:	lea    eax,[ebp-0x28]
6401e2b6:	push   eax
6401e2b7:	call   0x6401ec48
6401e2bc:	add    esp,0x10
6401e2bf:	test   eax,eax
6401e2c1:	je     0x6401e2d9
6401e2c3:	mov    DWORD PTR [ebp-0x68],0x1
6401e2ca:	jmp    0x6401e2d9
6401e2cc:	mov    al,BYTE PTR [edi-0x4]
6401e2cf:	mov    BYTE PTR [ebp-0x14],al
6401e2d2:	mov    DWORD PTR [ebp-0x28],0x1
6401e2d9:	lea    eax,[ebp-0x14]
6401e2dc:	mov    DWORD PTR [ebp-0x24],eax
6401e2df:	jmp    0x6401e630
6401e2e4:	mov    eax,DWORD PTR [edi]
6401e2e6:	add    edi,0x4
6401e2e9:	test   eax,eax
6401e2eb:	mov    DWORD PTR [ebp-0x2c],edi
6401e2ee:	je     0x6401e31f
6401e2f0:	mov    ecx,DWORD PTR [eax+0x4]
6401e2f3:	test   ecx,ecx
6401e2f5:	je     0x6401e31f
6401e2f7:	test   WORD PTR [ebp-0x18],0x800
6401e2fd:	movsx  eax,WORD PTR [eax]
6401e300:	mov    DWORD PTR [ebp-0x24],ecx
6401e303:	je     0x6401e316
6401e305:	cdq    
6401e306:	sub    eax,edx
6401e308:	sar    eax,1
6401e30a:	mov    DWORD PTR [ebp-0x44],0x1
6401e311:	jmp    0x6401e62d
6401e316:	and    DWORD PTR [ebp-0x44],0x0
6401e31a:	jmp    0x6401e62d
6401e31f:	mov    eax,ds:0x6402f950
6401e324:	mov    DWORD PTR [ebp-0x24],eax
6401e327:	push   eax
6401e328:	call   0x64015420
6401e32d:	pop    ecx
6401e32e:	jmp    0x6401e62d
6401e333:	cmp    eax,0x70
6401e336:	jg     0x6401e4bc
6401e33c:	je     0x6401e4b4
6401e342:	cmp    eax,0x65
6401e345:	jl     0x6401e630
6401e34b:	cmp    eax,0x67
6401e34e:	jle    0x6401e1f2
6401e354:	cmp    eax,0x69
6401e357:	je     0x6401e3ae
6401e359:	cmp    eax,0x6e
6401e35c:	je     0x6401e379
6401e35e:	cmp    eax,0x6f
6401e361:	jne    0x6401e630
6401e367:	test   BYTE PTR [ebp-0x18],0x80
6401e36b:	mov    DWORD PTR [ebp-0x28],esi
6401e36e:	je     0x6401e3b9
6401e370:	or     DWORD PTR [ebp-0x18],0x200
6401e377:	jmp    0x6401e3b9
6401e379:	mov    esi,DWORD PTR [edi]
6401e37b:	add    edi,0x4
6401e37e:	mov    DWORD PTR [ebp-0x2c],edi
6401e381:	call   0x6401dc88
6401e386:	test   eax,eax
6401e388:	je     0x6401e75e
6401e38e:	test   BYTE PTR [ebp-0x18],0x20
6401e392:	je     0x6401e39d
6401e394:	mov    ax,WORD PTR [ebp-0x34]
6401e398:	mov    WORD PTR [esi],ax
6401e39b:	jmp    0x6401e3a2
6401e39d:	mov    eax,DWORD PTR [ebp-0x34]
6401e3a0:	mov    DWORD PTR [esi],eax
6401e3a2:	mov    DWORD PTR [ebp-0x68],0x1
6401e3a9:	jmp    0x6401e735
6401e3ae:	or     DWORD PTR [ebp-0x18],0x40
6401e3b2:	mov    DWORD PTR [ebp-0x28],0xa
6401e3b9:	mov    ecx,DWORD PTR [ebp-0x18]
6401e3bc:	test   cx,cx
6401e3bf:	jns    0x6401e506
6401e3c5:	add    edi,esi
6401e3c7:	mov    eax,DWORD PTR [edi-0x8]
6401e3ca:	mov    edx,DWORD PTR [edi-0x4]
6401e3cd:	jmp    0x6401e53b
6401e3d2:	jne    0x6401e3e2
6401e3d4:	cmp    dl,0x67
6401e3d7:	jne    0x6401e421
6401e3d9:	mov    DWORD PTR [ebp-0x20],0x1
6401e3e0:	jmp    0x6401e421
6401e3e2:	cmp    DWORD PTR [ebp-0x20],eax
6401e3e5:	jle    0x6401e3ea
6401e3e7:	mov    DWORD PTR [ebp-0x20],eax
6401e3ea:	cmp    DWORD PTR [ebp-0x20],0xa3
6401e3f1:	jle    0x6401e421
6401e3f3:	mov    esi,DWORD PTR [ebp-0x20]
6401e3f6:	add    esi,0x15d
6401e3fc:	push   esi
6401e3fd:	call   0x64016f30
6401e402:	test   eax,eax
6401e404:	mov    dl,BYTE PTR [ebp-0x19]
6401e407:	pop    ecx
6401e408:	mov    DWORD PTR [ebp-0x60],eax
6401e40b:	push   0x8
6401e40d:	je     0x6401e419
6401e40f:	mov    DWORD PTR [ebp-0x24],eax
6401e412:	mov    DWORD PTR [ebp-0x6c],esi
6401e415:	mov    ebx,eax
6401e417:	jmp    0x6401e420
6401e419:	mov    DWORD PTR [ebp-0x20],0xa3
6401e420:	pop    esi
6401e421:	add    edi,esi
6401e423:	mov    eax,DWORD PTR [edi-0x8]
6401e426:	mov    DWORD PTR [ebp-0x80],eax
6401e429:	mov    eax,DWORD PTR [edi-0x4]
6401e42c:	mov    DWORD PTR [ebp-0x7c],eax
6401e42f:	lea    eax,[ebp-0x5c]
6401e432:	push   eax
6401e433:	push   DWORD PTR [ebp-0x74]
6401e436:	movsx  eax,dl
6401e439:	push   DWORD PTR [ebp-0x20]
6401e43c:	mov    DWORD PTR [ebp-0x2c],edi
6401e43f:	push   eax
6401e440:	push   DWORD PTR [ebp-0x6c]
6401e443:	lea    eax,[ebp-0x80]
6401e446:	push   ebx
6401e447:	push   eax
6401e448:	push   DWORD PTR ds:0x6402fb64
6401e44e:	call   0x64015b4f
6401e453:	pop    ecx
6401e454:	call   eax
6401e456:	mov    edi,DWORD PTR [ebp-0x18]
6401e459:	add    esp,0x1c
6401e45c:	and    edi,0x80
6401e462:	je     0x6401e47f
6401e464:	cmp    DWORD PTR [ebp-0x20],0x0
6401e468:	jne    0x6401e47f
6401e46a:	lea    eax,[ebp-0x5c]
6401e46d:	push   eax
6401e46e:	push   ebx
6401e46f:	push   DWORD PTR ds:0x6402fb70
6401e475:	call   0x64015b4f
6401e47a:	pop    ecx
6401e47b:	call   eax
6401e47d:	pop    ecx
6401e47e:	pop    ecx
6401e47f:	cmp    BYTE PTR [ebp-0x19],0x67
6401e483:	jne    0x6401e49e
6401e485:	test   edi,edi
6401e487:	jne    0x6401e49e
6401e489:	lea    eax,[ebp-0x5c]
6401e48c:	push   eax
6401e48d:	push   ebx
6401e48e:	push   DWORD PTR ds:0x6402fb6c
6401e494:	call   0x64015b4f
6401e499:	pop    ecx
6401e49a:	call   eax
6401e49c:	pop    ecx
6401e49d:	pop    ecx
6401e49e:	cmp    BYTE PTR [ebx],0x2d
6401e4a1:	jne    0x6401e4ae
6401e4a3:	or     DWORD PTR [ebp-0x18],0x100
6401e4aa:	inc    ebx
6401e4ab:	mov    DWORD PTR [ebp-0x24],ebx
6401e4ae:	push   ebx
6401e4af:	jmp    0x6401e328
6401e4b4:	mov    DWORD PTR [ebp-0x20],esi
6401e4b7:	mov    DWORD PTR [ebp-0x64],ecx
6401e4ba:	jmp    0x6401e4dd
6401e4bc:	sub    eax,0x73
6401e4bf:	je     0x6401e23a
6401e4c5:	dec    eax
6401e4c6:	dec    eax
6401e4c7:	je     0x6401e3b2
6401e4cd:	sub    eax,0x3
6401e4d0:	jne    0x6401e630
6401e4d6:	mov    DWORD PTR [ebp-0x64],0x27
6401e4dd:	test   BYTE PTR [ebp-0x18],0x80
6401e4e1:	mov    DWORD PTR [ebp-0x28],0x10
6401e4e8:	je     0x6401e3b9
6401e4ee:	mov    al,BYTE PTR [ebp-0x64]
6401e4f1:	add    al,0x51
6401e4f3:	mov    BYTE PTR [ebp-0x38],0x30
6401e4f7:	mov    BYTE PTR [ebp-0x37],al
6401e4fa:	mov    DWORD PTR [ebp-0x3c],0x2
6401e501:	jmp    0x6401e3b9
6401e506:	test   cx,0x1000
6401e50b:	jne    0x6401e3c5
6401e511:	add    edi,0x4
6401e514:	test   cl,0x20
6401e517:	je     0x6401e52e
6401e519:	test   cl,0x40
6401e51c:	mov    DWORD PTR [ebp-0x2c],edi
6401e51f:	je     0x6401e527
6401e521:	movsx  eax,WORD PTR [edi-0x4]
6401e525:	jmp    0x6401e52b
6401e527:	movzx  eax,WORD PTR [edi-0x4]
6401e52b:	cdq    
6401e52c:	jmp    0x6401e53e
6401e52e:	test   cl,0x40
6401e531:	mov    eax,DWORD PTR [edi-0x4]
6401e534:	je     0x6401e539
6401e536:	cdq    
6401e537:	jmp    0x6401e53b
6401e539:	xor    edx,edx
6401e53b:	mov    DWORD PTR [ebp-0x2c],edi
6401e53e:	test   cl,0x40
6401e541:	je     0x6401e55b
6401e543:	test   edx,edx
6401e545:	jg     0x6401e55b
6401e547:	jl     0x6401e54d
6401e549:	test   eax,eax
6401e54b:	jae    0x6401e55b
6401e54d:	neg    eax
6401e54f:	adc    edx,0x0
6401e552:	neg    edx
6401e554:	or     DWORD PTR [ebp-0x18],0x100
6401e55b:	test   WORD PTR [ebp-0x18],0x9000
6401e561:	mov    ebx,edx
6401e563:	mov    edi,eax
6401e565:	jne    0x6401e569
6401e567:	xor    ebx,ebx
6401e569:	cmp    DWORD PTR [ebp-0x20],0x0
6401e56d:	jge    0x6401e578
6401e56f:	mov    DWORD PTR [ebp-0x20],0x1
6401e576:	jmp    0x6401e589
6401e578:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401e57c:	mov    eax,0x200
6401e581:	cmp    DWORD PTR [ebp-0x20],eax
6401e584:	jle    0x6401e589
6401e586:	mov    DWORD PTR [ebp-0x20],eax
6401e589:	mov    eax,edi
6401e58b:	or     eax,ebx
6401e58d:	jne    0x6401e592
6401e58f:	and    DWORD PTR [ebp-0x3c],eax
6401e592:	lea    esi,[ebp+0x1eb]
6401e598:	mov    eax,DWORD PTR [ebp-0x20]
6401e59b:	dec    DWORD PTR [ebp-0x20]
6401e59e:	test   eax,eax
6401e5a0:	jg     0x6401e5a8
6401e5a2:	mov    eax,edi
6401e5a4:	or     eax,ebx
6401e5a6:	je     0x6401e5cc
6401e5a8:	mov    eax,DWORD PTR [ebp-0x28]
6401e5ab:	cdq    
6401e5ac:	push   edx
6401e5ad:	push   eax
6401e5ae:	push   ebx
6401e5af:	push   edi
6401e5b0:	call   0x6401ab30
6401e5b5:	add    ecx,0x30
6401e5b8:	cmp    ecx,0x39
6401e5bb:	mov    DWORD PTR [ebp-0x6c],ebx
6401e5be:	mov    edi,eax
6401e5c0:	mov    ebx,edx
6401e5c2:	jle    0x6401e5c7
6401e5c4:	add    ecx,DWORD PTR [ebp-0x64]
6401e5c7:	mov    BYTE PTR [esi],cl
6401e5c9:	dec    esi
6401e5ca:	jmp    0x6401e598
6401e5cc:	lea    eax,[ebp+0x1eb]
6401e5d2:	sub    eax,esi
6401e5d4:	inc    esi
6401e5d5:	test   WORD PTR [ebp-0x18],0x200
6401e5db:	mov    DWORD PTR [ebp-0x28],eax
6401e5de:	mov    DWORD PTR [ebp-0x24],esi
6401e5e1:	je     0x6401e630
6401e5e3:	test   eax,eax
6401e5e5:	je     0x6401e5ee
6401e5e7:	mov    ecx,esi
6401e5e9:	cmp    BYTE PTR [ecx],0x30
6401e5ec:	je     0x6401e630
6401e5ee:	dec    DWORD PTR [ebp-0x24]
6401e5f1:	mov    ecx,DWORD PTR [ebp-0x24]
6401e5f4:	mov    BYTE PTR [ecx],0x30
6401e5f7:	inc    eax
6401e5f8:	jmp    0x6401e62d
6401e5fa:	dec    ecx
6401e5fb:	cmp    WORD PTR [eax],0x0
6401e5ff:	je     0x6401e607
6401e601:	inc    eax
6401e602:	inc    eax
6401e603:	test   ecx,ecx
6401e605:	jne    0x6401e5fa
6401e607:	sub    eax,DWORD PTR [ebp-0x24]
6401e60a:	sar    eax,1
6401e60c:	jmp    0x6401e62d
6401e60e:	test   edi,edi
6401e610:	jne    0x6401e61a
6401e612:	mov    eax,ds:0x6402f950
6401e617:	mov    DWORD PTR [ebp-0x24],eax
6401e61a:	mov    eax,DWORD PTR [ebp-0x24]
6401e61d:	jmp    0x6401e626
6401e61f:	dec    ecx
6401e620:	cmp    BYTE PTR [eax],0x0
6401e623:	je     0x6401e62a
6401e625:	inc    eax
6401e626:	test   ecx,ecx
6401e628:	jne    0x6401e61f
6401e62a:	sub    eax,DWORD PTR [ebp-0x24]
6401e62d:	mov    DWORD PTR [ebp-0x28],eax
6401e630:	cmp    DWORD PTR [ebp-0x68],0x0
6401e634:	jne    0x6401e735
6401e63a:	mov    eax,DWORD PTR [ebp-0x18]
6401e63d:	test   al,0x40
6401e63f:	je     0x6401e666
6401e641:	test   ax,0x100
6401e645:	je     0x6401e64d
6401e647:	mov    BYTE PTR [ebp-0x38],0x2d
6401e64b:	jmp    0x6401e65f
6401e64d:	test   al,0x1
6401e64f:	je     0x6401e657
6401e651:	mov    BYTE PTR [ebp-0x38],0x2b
6401e655:	jmp    0x6401e65f
6401e657:	test   al,0x2
6401e659:	je     0x6401e666
6401e65b:	mov    BYTE PTR [ebp-0x38],0x20
6401e65f:	mov    DWORD PTR [ebp-0x3c],0x1
6401e666:	mov    ebx,DWORD PTR [ebp-0x40]
6401e669:	sub    ebx,DWORD PTR [ebp-0x28]
6401e66c:	sub    ebx,DWORD PTR [ebp-0x3c]
6401e66f:	test   BYTE PTR [ebp-0x18],0xc
6401e673:	jne    0x6401e686
6401e675:	push   DWORD PTR [ebp-0x30]
6401e678:	lea    eax,[ebp-0x34]
6401e67b:	push   ebx
6401e67c:	push   0x20
6401e67e:	call   0x6401ddfb
6401e683:	add    esp,0xc
6401e686:	push   DWORD PTR [ebp-0x3c]
6401e689:	mov    edi,DWORD PTR [ebp-0x30]
6401e68c:	lea    eax,[ebp-0x34]
6401e68f:	lea    ecx,[ebp-0x38]
6401e692:	call   0x64019ffa
6401e697:	test   BYTE PTR [ebp-0x18],0x8
6401e69b:	pop    ecx
6401e69c:	je     0x6401e6b3
6401e69e:	test   BYTE PTR [ebp-0x18],0x4
6401e6a2:	jne    0x6401e6b3
6401e6a4:	push   edi
6401e6a5:	push   ebx
6401e6a6:	push   0x30
6401e6a8:	lea    eax,[ebp-0x34]
6401e6ab:	call   0x6401ddfb
6401e6b0:	add    esp,0xc
6401e6b3:	cmp    DWORD PTR [ebp-0x44],0x0
6401e6b7:	mov    eax,DWORD PTR [ebp-0x28]
6401e6ba:	je     0x6401e70d
6401e6bc:	test   eax,eax
6401e6be:	jle    0x6401e70d
6401e6c0:	mov    esi,DWORD PTR [ebp-0x24]
6401e6c3:	mov    DWORD PTR [ebp-0x6c],eax
6401e6c6:	movzx  eax,WORD PTR [esi]
6401e6c9:	dec    DWORD PTR [ebp-0x6c]
6401e6cc:	push   eax
6401e6cd:	push   0x6
6401e6cf:	lea    eax,[ebp+0x1ec]
6401e6d5:	push   eax
6401e6d6:	lea    eax,[ebp-0x78]
6401e6d9:	inc    esi
6401e6da:	push   eax
6401e6db:	inc    esi
6401e6dc:	call   0x6401ec48
6401e6e1:	add    esp,0x10
6401e6e4:	test   eax,eax
6401e6e6:	jne    0x6401e707
6401e6e8:	cmp    DWORD PTR [ebp-0x78],eax
6401e6eb:	je     0x6401e707
6401e6ed:	push   DWORD PTR [ebp-0x78]
6401e6f0:	lea    eax,[ebp-0x34]
6401e6f3:	lea    ecx,[ebp+0x1ec]
6401e6f9:	call   0x64019ffa
6401e6fe:	cmp    DWORD PTR [ebp-0x6c],0x0
6401e702:	pop    ecx
6401e703:	jne    0x6401e6c6
6401e705:	jmp    0x6401e71a
6401e707:	or     DWORD PTR [ebp-0x34],0xffffffff
6401e70b:	jmp    0x6401e71a
6401e70d:	mov    ecx,DWORD PTR [ebp-0x24]
6401e710:	push   eax
6401e711:	lea    eax,[ebp-0x34]
6401e714:	call   0x64019ffa
6401e719:	pop    ecx
6401e71a:	cmp    DWORD PTR [ebp-0x34],0x0
6401e71e:	jl     0x6401e735
6401e720:	test   BYTE PTR [ebp-0x18],0x4
6401e724:	je     0x6401e735
6401e726:	push   edi
6401e727:	push   ebx
6401e728:	push   0x20
6401e72a:	lea    eax,[ebp-0x34]
6401e72d:	call   0x6401ddfb
6401e732:	add    esp,0xc
6401e735:	cmp    DWORD PTR [ebp-0x60],0x0
6401e739:	je     0x6401e748
6401e73b:	push   DWORD PTR [ebp-0x60]
6401e73e:	call   0x64014af6
6401e743:	and    DWORD PTR [ebp-0x60],0x0
6401e747:	pop    ecx
6401e748:	mov    ebx,DWORD PTR [ebp-0x4c]
6401e74b:	mov    al,BYTE PTR [ebx]
6401e74d:	test   al,al
6401e74f:	mov    BYTE PTR [ebp-0x19],al
6401e752:	je     0x6401e775
6401e754:	mov    edi,DWORD PTR [ebp-0x2c]
6401e757:	mov    dl,al
6401e759:	jmp    0x6401df7e
6401e75e:	call   0x64015a20
6401e763:	mov    DWORD PTR [eax],0x16
6401e769:	xor    eax,eax
6401e76b:	push   eax
6401e76c:	push   eax
6401e76d:	push   eax
6401e76e:	push   eax
6401e76f:	push   eax
6401e770:	jmp    0x6401de8f
6401e775:	xor    esi,esi
6401e777:	cmp    DWORD PTR [ebp-0x48],esi
6401e77a:	je     0x6401e786
6401e77c:	cmp    DWORD PTR [ebp-0x48],0x7
6401e780:	jne    0x6401de7f
6401e786:	cmp    BYTE PTR [ebp-0x50],0x0
6401e78a:	je     0x6401e793
6401e78c:	mov    eax,DWORD PTR [ebp-0x54]
6401e78f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401e793:	mov    eax,DWORD PTR [ebp-0x34]
6401e796:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401e79c:	pop    edi
6401e79d:	pop    esi
6401e79e:	xor    ecx,ebp
6401e7a0:	pop    ebx
6401e7a1:	call   0x64013c5c
6401e7a6:	add    ebp,0x1f8
6401e7ac:	leave  
6401e7ad:	ret    
6401e7ae:	nop
6401e7af:	jo     0x6401e792
6401e7b1:	add    DWORD PTR [ebp+edx*8-0x21],esp
6401e7b5:	add    DWORD PTR [edx+esi*8-0x21],esp
6401e7b9:	add    DWORD PTR [edi+edi*1-0x20],esp
6401e7bd:	add    DWORD PTR [ecx+edi*2-0x20],esp
6401e7c1:	add    DWORD PTR [edx+eax*4-0x20],esp
6401e7c5:	add    DWORD PTR [ecx+edi*4-0x20],esp
6401e7c9:	add    DWORD PTR [ebx+esi*4-0x1f],esp
6401e7cd:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401e7d1:	in     al,dx
6401e7d2:	sub    esp,0xc
6401e7d5:	mov    eax,ds:0x6402f09c
6401e7da:	xor    eax,ebp
6401e7dc:	mov    DWORD PTR [ebp-0x4],eax
6401e7df:	push   0x6
6401e7e1:	lea    eax,[ebp-0xc]
6401e7e4:	push   eax
6401e7e5:	push   0x1004
6401e7ea:	push   DWORD PTR [ebp+0x8]
6401e7ed:	mov    BYTE PTR [ebp-0x6],0x0
6401e7f1:	call   DWORD PTR ds:0x640260e4
6401e7f7:	test   eax,eax
6401e7f9:	jne    0x6401e800
6401e7fb:	or     eax,0xffffffff
6401e7fe:	jmp    0x6401e80a
6401e800:	lea    eax,[ebp-0xc]
6401e803:	push   eax
6401e804:	call   0x6401eea4
6401e809:	pop    ecx
6401e80a:	mov    ecx,DWORD PTR [ebp-0x4]
6401e80d:	xor    ecx,ebp
6401e80f:	call   0x64013c5c
6401e814:	leave  
6401e815:	ret    
6401e816:	push   ebp
6401e817:	mov    ebp,esp
6401e819:	sub    esp,0x34
6401e81c:	mov    eax,ds:0x6402f09c
6401e821:	xor    eax,ebp
6401e823:	mov    DWORD PTR [ebp-0x4],eax
6401e826:	mov    eax,DWORD PTR [ebp+0x10]
6401e829:	mov    ecx,DWORD PTR [ebp+0x18]
6401e82c:	mov    DWORD PTR [ebp-0x28],eax
6401e82f:	mov    eax,DWORD PTR [ebp+0x14]
6401e832:	push   ebx
6401e833:	mov    DWORD PTR [ebp-0x30],eax
6401e836:	mov    eax,DWORD PTR [eax]
6401e838:	push   esi
6401e839:	mov    DWORD PTR [ebp-0x24],eax
6401e83c:	mov    eax,DWORD PTR [ebp+0x8]
6401e83f:	push   edi
6401e840:	xor    edi,edi
6401e842:	cmp    eax,DWORD PTR [ebp+0xc]
6401e845:	mov    DWORD PTR [ebp-0x34],ecx
6401e848:	mov    DWORD PTR [ebp-0x20],edi
6401e84b:	mov    DWORD PTR [ebp-0x2c],edi
6401e84e:	je     0x6401e9b3
6401e854:	mov    esi,DWORD PTR ds:0x64026140
6401e85a:	lea    ecx,[ebp-0x18]
6401e85d:	push   ecx
6401e85e:	push   eax
6401e85f:	call   esi
6401e861:	test   eax,eax
6401e863:	mov    ebx,DWORD PTR ds:0x64026024
6401e869:	je     0x6401e8c9
6401e86b:	cmp    DWORD PTR [ebp-0x18],0x1
6401e86f:	jne    0x6401e8c9
6401e871:	lea    eax,[ebp-0x18]
6401e874:	push   eax
6401e875:	push   DWORD PTR [ebp+0xc]
6401e878:	call   esi
6401e87a:	test   eax,eax
6401e87c:	je     0x6401e8c9
6401e87e:	cmp    DWORD PTR [ebp-0x18],0x1
6401e882:	jne    0x6401e8c9
6401e884:	mov    esi,DWORD PTR [ebp-0x24]
6401e887:	cmp    esi,0xffffffff
6401e88a:	mov    DWORD PTR [ebp-0x2c],0x1
6401e891:	jne    0x6401e89f
6401e893:	push   DWORD PTR [ebp-0x28]
6401e896:	call   0x64015420
6401e89b:	mov    esi,eax
6401e89d:	pop    ecx
6401e89e:	inc    esi
6401e89f:	cmp    esi,edi
6401e8a1:	jle    0x6401e8fe
6401e8a3:	cmp    esi,0x7ffffff0
6401e8a9:	ja     0x6401e8fe
6401e8ab:	lea    eax,[esi+esi*1+0x8]
6401e8af:	cmp    eax,0x400
6401e8b4:	ja     0x6401e8e5
6401e8b6:	call   0x640143e0
6401e8bb:	mov    eax,esp
6401e8bd:	cmp    eax,edi
6401e8bf:	je     0x6401e8f9
6401e8c1:	mov    DWORD PTR [eax],0xcccc
6401e8c7:	jmp    0x6401e8f6
6401e8c9:	push   edi
6401e8ca:	push   edi
6401e8cb:	push   DWORD PTR [ebp-0x24]
6401e8ce:	push   DWORD PTR [ebp-0x28]
6401e8d1:	push   0x1
6401e8d3:	push   DWORD PTR [ebp+0x8]
6401e8d6:	call   ebx
6401e8d8:	mov    esi,eax
6401e8da:	cmp    esi,edi
6401e8dc:	jne    0x6401e8a1
6401e8de:	xor    eax,eax
6401e8e0:	jmp    0x6401e9b6
6401e8e5:	push   eax
6401e8e6:	call   0x64014bd3
6401e8eb:	cmp    eax,edi
6401e8ed:	pop    ecx
6401e8ee:	je     0x6401e8f9
6401e8f0:	mov    DWORD PTR [eax],0xdddd
6401e8f6:	add    eax,0x8
6401e8f9:	mov    DWORD PTR [ebp-0x1c],eax
6401e8fc:	jmp    0x6401e901
6401e8fe:	mov    DWORD PTR [ebp-0x1c],edi
6401e901:	cmp    DWORD PTR [ebp-0x1c],edi
6401e904:	je     0x6401e8de
6401e906:	lea    eax,[esi+esi*1]
6401e909:	push   eax
6401e90a:	push   edi
6401e90b:	push   DWORD PTR [ebp-0x1c]
6401e90e:	call   0x64014360
6401e913:	add    esp,0xc
6401e916:	push   esi
6401e917:	push   DWORD PTR [ebp-0x1c]
6401e91a:	push   DWORD PTR [ebp-0x24]
6401e91d:	push   DWORD PTR [ebp-0x28]
6401e920:	push   0x1
6401e922:	push   DWORD PTR [ebp+0x8]
6401e925:	call   ebx
6401e927:	test   eax,eax
6401e929:	je     0x6401e9aa
6401e92b:	mov    ebx,DWORD PTR [ebp-0x34]
6401e92e:	cmp    ebx,edi
6401e930:	je     0x6401e94f
6401e932:	push   edi
6401e933:	push   edi
6401e934:	push   DWORD PTR [ebp+0x1c]
6401e937:	push   ebx
6401e938:	push   esi
6401e939:	push   DWORD PTR [ebp-0x1c]
6401e93c:	push   edi
6401e93d:	push   DWORD PTR [ebp+0xc]
6401e940:	call   DWORD PTR ds:0x64026028
6401e946:	test   eax,eax
6401e948:	je     0x6401e9aa
6401e94a:	mov    DWORD PTR [ebp-0x20],ebx
6401e94d:	jmp    0x6401e9aa
6401e94f:	cmp    DWORD PTR [ebp-0x2c],edi
6401e952:	mov    ebx,DWORD PTR ds:0x64026028
6401e958:	jne    0x6401e96e
6401e95a:	push   edi
6401e95b:	push   edi
6401e95c:	push   edi
6401e95d:	push   edi
6401e95e:	push   esi
6401e95f:	push   DWORD PTR [ebp-0x1c]
6401e962:	push   edi
6401e963:	push   DWORD PTR [ebp+0xc]
6401e966:	call   ebx
6401e968:	mov    esi,eax
6401e96a:	cmp    esi,edi
6401e96c:	je     0x6401e9aa
6401e96e:	push   esi
6401e96f:	push   0x1
6401e971:	call   0x64016f70
6401e976:	cmp    eax,edi
6401e978:	pop    ecx
6401e979:	pop    ecx
6401e97a:	mov    DWORD PTR [ebp-0x20],eax
6401e97d:	je     0x6401e9aa
6401e97f:	push   edi
6401e980:	push   edi
6401e981:	push   esi
6401e982:	push   eax
6401e983:	push   esi
6401e984:	push   DWORD PTR [ebp-0x1c]
6401e987:	push   edi
6401e988:	push   DWORD PTR [ebp+0xc]
6401e98b:	call   ebx
6401e98d:	cmp    eax,edi
6401e98f:	jne    0x6401e99f
6401e991:	push   DWORD PTR [ebp-0x20]
6401e994:	call   0x64014af6
6401e999:	pop    ecx
6401e99a:	mov    DWORD PTR [ebp-0x20],edi
6401e99d:	jmp    0x6401e9aa
6401e99f:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401e9a3:	je     0x6401e9aa
6401e9a5:	mov    ecx,DWORD PTR [ebp-0x30]
6401e9a8:	mov    DWORD PTR [ecx],eax
6401e9aa:	push   DWORD PTR [ebp-0x1c]
6401e9ad:	call   0x6401416c
6401e9b2:	pop    ecx
6401e9b3:	mov    eax,DWORD PTR [ebp-0x20]
6401e9b6:	lea    esp,[ebp-0x40]
6401e9b9:	pop    edi
6401e9ba:	pop    esi
6401e9bb:	pop    ebx
6401e9bc:	mov    ecx,DWORD PTR [ebp-0x4]
6401e9bf:	xor    ecx,ebp
6401e9c1:	call   0x64013c5c
6401e9c6:	leave  
6401e9c7:	ret    
6401e9c8:	push   0xc
6401e9ca:	push   0x6402c3f8
6401e9cf:	call   0x64015220
6401e9d4:	and    DWORD PTR [ebp-0x4],0x0
6401e9d8:	movapd xmm0,xmm1
6401e9dc:	mov    DWORD PTR [ebp-0x1c],0x1
6401e9e3:	jmp    0x6401ea08
6401e9e5:	mov    eax,DWORD PTR [ebp-0x14]
6401e9e8:	mov    eax,DWORD PTR [eax]
6401e9ea:	mov    eax,DWORD PTR [eax]
6401e9ec:	cmp    eax,0xc0000005
6401e9f1:	je     0x6401e9fd
6401e9f3:	cmp    eax,0xc000001d
6401e9f8:	je     0x6401e9fd
6401e9fa:	xor    eax,eax
6401e9fc:	ret    
6401e9fd:	xor    eax,eax
6401e9ff:	inc    eax
6401ea00:	ret    
6401ea01:	mov    esp,DWORD PTR [ebp-0x18]
6401ea04:	and    DWORD PTR [ebp-0x1c],0x0
6401ea08:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea0f:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea12:	call   0x64015265
6401ea17:	ret    
6401ea18:	push   ebp
6401ea19:	mov    ebp,esp
6401ea1b:	sub    esp,0x18
6401ea1e:	xor    eax,eax
6401ea20:	push   ebx
6401ea21:	mov    DWORD PTR [ebp-0x4],eax
6401ea24:	mov    DWORD PTR [ebp-0xc],eax
6401ea27:	mov    DWORD PTR [ebp-0x8],eax
6401ea2a:	push   ebx
6401ea2b:	pushf  
6401ea2c:	pop    eax
6401ea2d:	mov    ecx,eax
6401ea2f:	xor    eax,0x200000
6401ea34:	push   eax
6401ea35:	popf   
6401ea36:	pushf  
6401ea37:	pop    edx
6401ea38:	sub    edx,ecx
6401ea3a:	je     0x6401ea5b
6401ea3c:	push   ecx
6401ea3d:	popf   
6401ea3e:	xor    eax,eax
6401ea40:	cpuid  
6401ea42:	mov    DWORD PTR [ebp-0xc],eax
6401ea45:	mov    DWORD PTR [ebp-0x18],ebx
6401ea48:	mov    DWORD PTR [ebp-0x14],edx
6401ea4b:	mov    DWORD PTR [ebp-0x10],ecx
6401ea4e:	mov    eax,0x1
6401ea53:	cpuid  
6401ea55:	mov    DWORD PTR [ebp-0x4],edx
6401ea58:	mov    DWORD PTR [ebp-0x8],eax
6401ea5b:	pop    ebx
6401ea5c:	test   DWORD PTR [ebp-0x4],0x4000000
6401ea63:	je     0x6401ea73
6401ea65:	call   0x6401e9c8
6401ea6a:	test   eax,eax
6401ea6c:	je     0x6401ea73
6401ea6e:	xor    eax,eax
6401ea70:	inc    eax
6401ea71:	jmp    0x6401ea75
6401ea73:	xor    eax,eax
6401ea75:	pop    ebx
6401ea76:	leave  
6401ea77:	ret    
6401ea78:	call   0x6401ea18
6401ea7d:	mov    ds:0x64034624,eax
6401ea82:	xor    eax,eax
6401ea84:	ret    
6401ea85:	push   ebp
6401ea86:	mov    ebp,esp
6401ea88:	sub    esp,0x10
6401ea8b:	push   DWORD PTR [ebp+0x8]
6401ea8e:	lea    ecx,[ebp-0x10]
6401ea91:	call   0x64013dff
6401ea96:	movzx  eax,BYTE PTR [ebp+0xc]
6401ea9a:	mov    ecx,DWORD PTR [ebp-0xc]
6401ea9d:	mov    dl,BYTE PTR [ebp+0x14]
6401eaa0:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401eaa4:	jne    0x6401eac4
6401eaa6:	cmp    DWORD PTR [ebp+0x10],0x0
6401eaaa:	je     0x6401eabe
6401eaac:	mov    ecx,DWORD PTR [ebp-0x10]
6401eaaf:	mov    ecx,DWORD PTR [ecx+0xc8]
6401eab5:	movzx  eax,WORD PTR [ecx+eax*2]
6401eab9:	and    eax,DWORD PTR [ebp+0x10]
6401eabc:	jmp    0x6401eac0
6401eabe:	xor    eax,eax
6401eac0:	test   eax,eax
6401eac2:	je     0x6401eac7
6401eac4:	xor    eax,eax
6401eac6:	inc    eax
6401eac7:	cmp    BYTE PTR [ebp-0x4],0x0
6401eacb:	je     0x6401ead4
6401eacd:	mov    ecx,DWORD PTR [ebp-0x8]
6401ead0:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ead4:	leave  
6401ead5:	ret    
6401ead6:	push   0x4
6401ead8:	push   0x0
6401eada:	push   DWORD PTR [esp+0xc]
6401eade:	push   0x0
6401eae0:	call   0x6401ea85
6401eae5:	add    esp,0x10
6401eae8:	ret    
6401eae9:	push   ebp
6401eaea:	mov    ebp,esp
6401eaec:	sub    esp,0x10
6401eaef:	push   ebx
6401eaf0:	push   esi
6401eaf1:	mov    esi,DWORD PTR [ebp+0xc]
6401eaf4:	xor    ebx,ebx
6401eaf6:	cmp    esi,ebx
6401eaf8:	push   edi
6401eaf9:	mov    edi,DWORD PTR [ebp+0x10]
6401eafc:	jne    0x6401eb0f
6401eafe:	cmp    edi,ebx
6401eb00:	jbe    0x6401eb0f
6401eb02:	mov    eax,DWORD PTR [ebp+0x8]
6401eb05:	cmp    eax,ebx
6401eb07:	je     0x6401eb0b
6401eb09:	mov    DWORD PTR [eax],ebx
6401eb0b:	xor    eax,eax
6401eb0d:	jmp    0x6401eb8e
6401eb0f:	mov    eax,DWORD PTR [ebp+0x8]
6401eb12:	cmp    eax,ebx
6401eb14:	je     0x6401eb19
6401eb16:	or     DWORD PTR [eax],0xffffffff
6401eb19:	cmp    edi,0x7fffffff
6401eb1f:	jbe    0x6401eb3c
6401eb21:	call   0x64015a20
6401eb26:	push   0x16
6401eb28:	pop    esi
6401eb29:	push   ebx
6401eb2a:	push   ebx
6401eb2b:	push   ebx
6401eb2c:	push   ebx
6401eb2d:	push   ebx
6401eb2e:	mov    DWORD PTR [eax],esi
6401eb30:	call   0x64013794
6401eb35:	add    esp,0x14
6401eb38:	mov    eax,esi
6401eb3a:	jmp    0x6401eb8e
6401eb3c:	push   DWORD PTR [ebp+0x18]
6401eb3f:	lea    ecx,[ebp-0x10]
6401eb42:	call   0x64013dff
6401eb47:	mov    eax,DWORD PTR [ebp-0x10]
6401eb4a:	cmp    DWORD PTR [eax+0x14],ebx
6401eb4d:	jne    0x6401ebe7
6401eb53:	mov    ax,WORD PTR [ebp+0x14]
6401eb57:	cmp    ax,0xff
6401eb5b:	jbe    0x6401eb93
6401eb5d:	cmp    esi,ebx
6401eb5f:	je     0x6401eb70
6401eb61:	cmp    edi,ebx
6401eb63:	jbe    0x6401eb70
6401eb65:	push   edi
6401eb66:	push   ebx
6401eb67:	push   esi
6401eb68:	call   0x64014360
6401eb6d:	add    esp,0xc
6401eb70:	call   0x64015a20
6401eb75:	mov    DWORD PTR [eax],0x2a
6401eb7b:	call   0x64015a20
6401eb80:	cmp    BYTE PTR [ebp-0x4],bl
6401eb83:	mov    eax,DWORD PTR [eax]
6401eb85:	je     0x6401eb8e
6401eb87:	mov    ecx,DWORD PTR [ebp-0x8]
6401eb8a:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401eb8e:	pop    edi
6401eb8f:	pop    esi
6401eb90:	pop    ebx
6401eb91:	leave  
6401eb92:	ret    
6401eb93:	cmp    esi,ebx
6401eb95:	je     0x6401ebc5
6401eb97:	cmp    edi,ebx
6401eb99:	ja     0x6401ebc3
6401eb9b:	call   0x64015a20
6401eba0:	push   0x22
6401eba2:	pop    esi
6401eba3:	push   ebx
6401eba4:	push   ebx
6401eba5:	push   ebx
6401eba6:	push   ebx
6401eba7:	push   ebx
6401eba8:	mov    DWORD PTR [eax],esi
6401ebaa:	call   0x64013794
6401ebaf:	add    esp,0x14
6401ebb2:	cmp    BYTE PTR [ebp-0x4],bl
6401ebb5:	je     0x6401eb38
6401ebb7:	mov    eax,DWORD PTR [ebp-0x8]
6401ebba:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ebbe:	jmp    0x6401eb38
6401ebc3:	mov    BYTE PTR [esi],al
6401ebc5:	mov    eax,DWORD PTR [ebp+0x8]
6401ebc8:	cmp    eax,ebx
6401ebca:	je     0x6401ebd2
6401ebcc:	mov    DWORD PTR [eax],0x1
6401ebd2:	cmp    BYTE PTR [ebp-0x4],bl
6401ebd5:	je     0x6401eb0b
6401ebdb:	mov    eax,DWORD PTR [ebp-0x8]
6401ebde:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ebe2:	jmp    0x6401eb0b
6401ebe7:	lea    ecx,[ebp+0xc]
6401ebea:	push   ecx
6401ebeb:	push   ebx
6401ebec:	push   edi
6401ebed:	push   esi
6401ebee:	push   0x1
6401ebf0:	lea    ecx,[ebp+0x14]
6401ebf3:	push   ecx
6401ebf4:	push   ebx
6401ebf5:	mov    DWORD PTR [ebp+0xc],ebx
6401ebf8:	push   DWORD PTR [eax+0x4]
6401ebfb:	call   DWORD PTR ds:0x64026028
6401ec01:	cmp    eax,ebx
6401ec03:	je     0x6401ec19
6401ec05:	cmp    DWORD PTR [ebp+0xc],ebx
6401ec08:	jne    0x6401eb70
6401ec0e:	mov    ecx,DWORD PTR [ebp+0x8]
6401ec11:	cmp    ecx,ebx
6401ec13:	je     0x6401ebd2
6401ec15:	mov    DWORD PTR [ecx],eax
6401ec17:	jmp    0x6401ebd2
6401ec19:	call   DWORD PTR ds:0x64026044
6401ec1f:	cmp    eax,0x7a
6401ec22:	jne    0x6401eb70
6401ec28:	cmp    esi,ebx
6401ec2a:	je     0x6401eb9b
6401ec30:	cmp    edi,ebx
6401ec32:	jbe    0x6401eb9b
6401ec38:	push   edi
6401ec39:	push   ebx
6401ec3a:	push   esi
6401ec3b:	call   0x64014360
6401ec40:	add    esp,0xc
6401ec43:	jmp    0x6401eb9b
6401ec48:	push   0x0
6401ec4a:	push   DWORD PTR [esp+0x14]
6401ec4e:	push   DWORD PTR [esp+0x14]
6401ec52:	push   DWORD PTR [esp+0x14]
6401ec56:	push   DWORD PTR [esp+0x14]
6401ec5a:	call   0x6401eae9
6401ec5f:	add    esp,0x14
6401ec62:	ret    
6401ec63:	push   ebp
6401ec64:	mov    ebp,esp
6401ec66:	sub    esp,0x20
6401ec69:	push   ebx
6401ec6a:	push   esi
6401ec6b:	push   edi
6401ec6c:	call   0x64015b46
6401ec71:	xor    ebx,ebx
6401ec73:	cmp    DWORD PTR ds:0x64030f5c,ebx
6401ec79:	mov    DWORD PTR [ebp-0x8],eax
6401ec7c:	mov    DWORD PTR [ebp-0x4],ebx
6401ec7f:	mov    DWORD PTR [ebp-0xc],ebx
6401ec82:	mov    DWORD PTR [ebp-0x10],ebx
6401ec85:	jne    0x6401ed39
6401ec8b:	push   0x64028598
6401ec90:	call   DWORD PTR ds:0x640260c4
6401ec96:	mov    edi,eax
6401ec98:	cmp    edi,ebx
6401ec9a:	je     0x6401ee19
6401eca0:	mov    esi,DWORD PTR ds:0x64026014
6401eca6:	push   0x6402858c
6401ecab:	push   edi
6401ecac:	call   esi
6401ecae:	cmp    eax,ebx
6401ecb0:	je     0x6401ee19
6401ecb6:	push   eax
6401ecb7:	call   0x64015ad8
6401ecbc:	mov    DWORD PTR [esp],0x6402857c
6401ecc3:	push   edi
6401ecc4:	mov    ds:0x64030f5c,eax
6401ecc9:	call   esi
6401eccb:	push   eax
6401eccc:	call   0x64015ad8
6401ecd1:	mov    DWORD PTR [esp],0x64028568
6401ecd8:	push   edi
6401ecd9:	mov    ds:0x64030f60,eax
6401ecde:	call   esi
6401ece0:	push   eax
6401ece1:	call   0x64015ad8
6401ece6:	mov    ds:0x64030f64,eax
6401eceb:	lea    eax,[ebp-0xc]
6401ecee:	push   eax
6401ecef:	call   0x6401714f
6401ecf4:	test   eax,eax
6401ecf6:	pop    ecx
6401ecf7:	pop    ecx
6401ecf8:	je     0x6401ed07
6401ecfa:	push   ebx
6401ecfb:	push   ebx
6401ecfc:	push   ebx
6401ecfd:	push   ebx
6401ecfe:	push   ebx
6401ecff:	call   0x64013698
6401ed04:	add    esp,0x14
6401ed07:	cmp    DWORD PTR [ebp-0xc],0x2
6401ed0b:	jne    0x6401ed39
6401ed0d:	push   0x6402854c
6401ed12:	push   edi
6401ed13:	call   esi
6401ed15:	push   eax
6401ed16:	call   0x64015ad8
6401ed1b:	cmp    eax,ebx
6401ed1d:	pop    ecx
6401ed1e:	mov    ds:0x64030f6c,eax
6401ed23:	je     0x6401ed39
6401ed25:	push   0x64028534
6401ed2a:	push   edi
6401ed2b:	call   esi
6401ed2d:	push   eax
6401ed2e:	call   0x64015ad8
6401ed33:	pop    ecx
6401ed34:	mov    ds:0x64030f68,eax
6401ed39:	mov    eax,ds:0x64030f68
6401ed3e:	mov    ecx,DWORD PTR [ebp-0x8]
6401ed41:	cmp    eax,ecx
6401ed43:	je     0x6401edbe
6401ed45:	cmp    DWORD PTR ds:0x64030f6c,ecx
6401ed4b:	je     0x6401edbe
6401ed4d:	push   eax
6401ed4e:	call   0x64015b4f
6401ed53:	push   DWORD PTR ds:0x64030f6c
6401ed59:	mov    esi,eax
6401ed5b:	call   0x64015b4f
6401ed60:	cmp    esi,ebx
6401ed62:	pop    ecx
6401ed63:	pop    ecx
6401ed64:	mov    edi,eax
6401ed66:	je     0x6401edbe
6401ed68:	cmp    edi,ebx
6401ed6a:	je     0x6401edbe
6401ed6c:	call   esi
6401ed6e:	cmp    eax,ebx
6401ed70:	je     0x6401ed8b
6401ed72:	lea    ecx,[ebp-0x14]
6401ed75:	push   ecx
6401ed76:	push   0xc
6401ed78:	lea    ecx,[ebp-0x20]
6401ed7b:	push   ecx
6401ed7c:	push   0x1
6401ed7e:	push   eax
6401ed7f:	call   edi
6401ed81:	test   eax,eax
6401ed83:	je     0x6401ed8b
6401ed85:	test   BYTE PTR [ebp-0x18],0x1
6401ed89:	jne    0x6401edbe
6401ed8b:	lea    eax,[ebp-0x10]
6401ed8e:	push   eax
6401ed8f:	call   0x64017186
6401ed94:	test   eax,eax
6401ed96:	pop    ecx
6401ed97:	je     0x6401eda6
6401ed99:	push   ebx
6401ed9a:	push   ebx
6401ed9b:	push   ebx
6401ed9c:	push   ebx
6401ed9d:	push   ebx
6401ed9e:	call   0x64013698
6401eda3:	add    esp,0x14
6401eda6:	cmp    DWORD PTR [ebp-0x10],0x4
6401edaa:	jb     0x6401edb5
6401edac:	or     DWORD PTR [ebp+0x10],0x200000
6401edb3:	jmp    0x6401edf9
6401edb5:	or     DWORD PTR [ebp+0x10],0x40000
6401edbc:	jmp    0x6401edf9
6401edbe:	mov    eax,ds:0x64030f60
6401edc3:	cmp    eax,DWORD PTR [ebp-0x8]
6401edc6:	je     0x6401edf9
6401edc8:	push   eax
6401edc9:	call   0x64015b4f
6401edce:	cmp    eax,ebx
6401edd0:	pop    ecx
6401edd1:	je     0x6401edf9
6401edd3:	call   eax
6401edd5:	cmp    eax,ebx
6401edd7:	mov    DWORD PTR [ebp-0x4],eax
6401edda:	je     0x6401edf9
6401eddc:	mov    eax,ds:0x64030f64
6401ede1:	cmp    eax,DWORD PTR [ebp-0x8]
6401ede4:	je     0x6401edf9
6401ede6:	push   eax
6401ede7:	call   0x64015b4f
6401edec:	cmp    eax,ebx
6401edee:	pop    ecx
6401edef:	je     0x6401edf9
6401edf1:	push   DWORD PTR [ebp-0x4]
6401edf4:	call   eax
6401edf6:	mov    DWORD PTR [ebp-0x4],eax
6401edf9:	push   DWORD PTR ds:0x64030f5c
6401edff:	call   0x64015b4f
6401ee04:	cmp    eax,ebx
6401ee06:	pop    ecx
6401ee07:	je     0x6401ee19
6401ee09:	push   DWORD PTR [ebp+0x10]
6401ee0c:	push   DWORD PTR [ebp+0xc]
6401ee0f:	push   DWORD PTR [ebp+0x8]
6401ee12:	push   DWORD PTR [ebp-0x4]
6401ee15:	call   eax
6401ee17:	jmp    0x6401ee1b
6401ee19:	xor    eax,eax
6401ee1b:	pop    edi
6401ee1c:	pop    esi
6401ee1d:	pop    ebx
6401ee1e:	leave  
6401ee1f:	ret    
6401ee20:	mov    ecx,DWORD PTR [esp+0x4]
6401ee24:	push   esi
6401ee25:	xor    esi,esi
6401ee27:	cmp    ecx,esi
6401ee29:	jl     0x6401ee49
6401ee2b:	cmp    ecx,0x2
6401ee2e:	jle    0x6401ee3c
6401ee30:	cmp    ecx,0x3
6401ee33:	jne    0x6401ee49
6401ee35:	mov    eax,ds:0x6403057c
6401ee3a:	pop    esi
6401ee3b:	ret    
6401ee3c:	mov    eax,ds:0x6403057c
6401ee41:	mov    DWORD PTR ds:0x6403057c,ecx
6401ee47:	pop    esi
6401ee48:	ret    
6401ee49:	call   0x64015a20
6401ee4e:	push   esi
6401ee4f:	push   esi
6401ee50:	push   esi
6401ee51:	push   esi
6401ee52:	push   esi
6401ee53:	mov    DWORD PTR [eax],0x16
6401ee59:	call   0x64013794
6401ee5e:	add    esp,0x14
6401ee61:	or     eax,0xffffffff
6401ee64:	pop    esi
6401ee65:	ret    
6401ee66:	int3   
6401ee67:	int3   
6401ee68:	int3   
6401ee69:	int3   
6401ee6a:	int3   
6401ee6b:	int3   
6401ee6c:	int3   
6401ee6d:	int3   
6401ee6e:	int3   
6401ee6f:	int3   
6401ee70:	mov    eax,DWORD PTR [esp+0x8]
6401ee74:	mov    ecx,DWORD PTR [esp+0x10]
6401ee78:	or     ecx,eax
6401ee7a:	mov    ecx,DWORD PTR [esp+0xc]
6401ee7e:	jne    0x6401ee89
6401ee80:	mov    eax,DWORD PTR [esp+0x4]
6401ee84:	mul    ecx
6401ee86:	ret    0x10
6401ee89:	push   ebx
6401ee8a:	mul    ecx
6401ee8c:	mov    ebx,eax
6401ee8e:	mov    eax,DWORD PTR [esp+0x8]
6401ee92:	mul    DWORD PTR [esp+0x14]
6401ee96:	add    ebx,eax
6401ee98:	mov    eax,DWORD PTR [esp+0x8]
6401ee9c:	mul    ecx
6401ee9e:	add    edx,ebx
6401eea0:	pop    ebx
6401eea1:	ret    0x10
6401eea4:	push   0xa
6401eea6:	push   0x0
6401eea8:	push   DWORD PTR [esp+0xc]
6401eeac:	call   0x6401f6f5
6401eeb1:	add    esp,0xc
6401eeb4:	ret    
6401eeb5:	push   0x2
6401eeb7:	call   0x640170a6
6401eebc:	pop    ecx
6401eebd:	ret    
6401eebe:	mov    ecx,DWORD PTR [esp+0x4]
6401eec2:	push   ebx
6401eec3:	xor    ebx,ebx
6401eec5:	cmp    ecx,ebx
6401eec7:	push   esi
6401eec8:	push   edi
6401eec9:	jl     0x6401ef26
6401eecb:	cmp    ecx,DWORD PTR ds:0x64034500
6401eed1:	jae    0x6401ef26
6401eed3:	mov    eax,ecx
6401eed5:	sar    eax,0x5
6401eed8:	mov    esi,ecx
6401eeda:	lea    edi,[eax*4+0x64034520]
6401eee1:	mov    eax,DWORD PTR [edi]
6401eee3:	and    esi,0x1f
6401eee6:	shl    esi,0x6
6401eee9:	add    eax,esi
6401eeeb:	test   BYTE PTR [eax+0x4],0x1
6401eeef:	je     0x6401ef26
6401eef1:	cmp    DWORD PTR [eax],0xffffffff
6401eef4:	je     0x6401ef26
6401eef6:	cmp    DWORD PTR ds:0x64030580,0x1
6401eefd:	jne    0x6401ef1c
6401eeff:	sub    ecx,ebx
6401ef01:	je     0x6401ef13
6401ef03:	dec    ecx
6401ef04:	je     0x6401ef0e
6401ef06:	dec    ecx
6401ef07:	jne    0x6401ef1c
6401ef09:	push   ebx
6401ef0a:	push   0xfffffff4
6401ef0c:	jmp    0x6401ef16
6401ef0e:	push   ebx
6401ef0f:	push   0xfffffff5
6401ef11:	jmp    0x6401ef16
6401ef13:	push   ebx
6401ef14:	push   0xfffffff6
6401ef16:	call   DWORD PTR ds:0x64026094
6401ef1c:	mov    eax,DWORD PTR [edi]
6401ef1e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401ef22:	xor    eax,eax
6401ef24:	jmp    0x6401ef3b
6401ef26:	call   0x64015a20
6401ef2b:	mov    DWORD PTR [eax],0x9
6401ef31:	call   0x64015a33
6401ef36:	mov    DWORD PTR [eax],ebx
6401ef38:	or     eax,0xffffffff
6401ef3b:	pop    edi
6401ef3c:	pop    esi
6401ef3d:	pop    ebx
6401ef3e:	ret    
6401ef3f:	mov    eax,DWORD PTR [esp+0x4]
6401ef43:	cmp    eax,0xfffffffe
6401ef46:	jne    0x6401ef5f
6401ef48:	call   0x64015a33
6401ef4d:	and    DWORD PTR [eax],0x0
6401ef50:	call   0x64015a20
6401ef55:	mov    DWORD PTR [eax],0x9
6401ef5b:	or     eax,0xffffffff
6401ef5e:	ret    
6401ef5f:	push   esi
6401ef60:	xor    esi,esi
6401ef62:	cmp    eax,esi
6401ef64:	jl     0x6401ef88
6401ef66:	cmp    eax,DWORD PTR ds:0x64034500
6401ef6c:	jae    0x6401ef88
6401ef6e:	mov    ecx,eax
6401ef70:	and    eax,0x1f
6401ef73:	sar    ecx,0x5
6401ef76:	mov    ecx,DWORD PTR [ecx*4+0x64034520]
6401ef7d:	shl    eax,0x6
6401ef80:	add    eax,ecx
6401ef82:	test   BYTE PTR [eax+0x4],0x1
6401ef86:	jne    0x6401efac
6401ef88:	call   0x64015a33
6401ef8d:	mov    DWORD PTR [eax],esi
6401ef8f:	call   0x64015a20
6401ef94:	push   esi
6401ef95:	push   esi
6401ef96:	push   esi
6401ef97:	push   esi
6401ef98:	push   esi
6401ef99:	mov    DWORD PTR [eax],0x9
6401ef9f:	call   0x64013794
6401efa4:	add    esp,0x14
6401efa7:	or     eax,0xffffffff
6401efaa:	pop    esi
6401efab:	ret    
6401efac:	mov    eax,DWORD PTR [eax]
6401efae:	pop    esi
6401efaf:	ret    
6401efb0:	push   0xc
6401efb2:	push   0x6402c418
6401efb7:	call   0x64015220
6401efbc:	mov    edi,DWORD PTR [ebp+0x8]
6401efbf:	mov    eax,edi
6401efc1:	sar    eax,0x5
6401efc4:	mov    esi,edi
6401efc6:	and    esi,0x1f
6401efc9:	shl    esi,0x6
6401efcc:	add    esi,DWORD PTR [eax*4+0x64034520]
6401efd3:	mov    DWORD PTR [ebp-0x1c],0x1
6401efda:	xor    ebx,ebx
6401efdc:	cmp    DWORD PTR [esi+0x8],ebx
6401efdf:	jne    0x6401f017
6401efe1:	push   0xa
6401efe3:	call   0x6401b21a
6401efe8:	pop    ecx
6401efe9:	mov    DWORD PTR [ebp-0x4],ebx
6401efec:	cmp    DWORD PTR [esi+0x8],ebx
6401efef:	jne    0x6401f00b
6401eff1:	push   0xfa0
6401eff6:	lea    eax,[esi+0xc]
6401eff9:	push   eax
6401effa:	call   0x6401c8d8
6401efff:	pop    ecx
6401f000:	pop    ecx
6401f001:	test   eax,eax
6401f003:	jne    0x6401f008
6401f005:	mov    DWORD PTR [ebp-0x1c],ebx
6401f008:	inc    DWORD PTR [esi+0x8]
6401f00b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f012:	call   0x6401f047
6401f017:	cmp    DWORD PTR [ebp-0x1c],ebx
6401f01a:	je     0x6401f039
6401f01c:	mov    eax,edi
6401f01e:	sar    eax,0x5
6401f021:	and    edi,0x1f
6401f024:	shl    edi,0x6
6401f027:	mov    eax,DWORD PTR [eax*4+0x64034520]
6401f02e:	lea    eax,[eax+edi*1+0xc]
6401f032:	push   eax
6401f033:	call   DWORD PTR ds:0x6402609c
6401f039:	mov    eax,DWORD PTR [ebp-0x1c]
6401f03c:	call   0x64015265
6401f041:	ret    
6401f042:	xor    ebx,ebx
6401f044:	mov    edi,DWORD PTR [ebp+0x8]
6401f047:	push   0xa
6401f049:	call   0x6401b142
6401f04e:	pop    ecx
6401f04f:	ret    
6401f050:	mov    eax,DWORD PTR [esp+0x4]
6401f054:	mov    ecx,eax
6401f056:	and    eax,0x1f
6401f059:	sar    ecx,0x5
6401f05c:	mov    ecx,DWORD PTR [ecx*4+0x64034520]
6401f063:	shl    eax,0x6
6401f066:	lea    eax,[ecx+eax*1+0xc]
6401f06a:	push   eax
6401f06b:	call   DWORD PTR ds:0x640260a0
6401f071:	ret    
6401f072:	push   ebp
6401f073:	mov    ebp,esp
6401f075:	sub    esp,0x10
6401f078:	mov    eax,ds:0x6402f09c
6401f07d:	xor    eax,ebp
6401f07f:	mov    DWORD PTR [ebp-0x4],eax
6401f082:	push   esi
6401f083:	xor    esi,esi
6401f085:	cmp    DWORD PTR ds:0x6402ffb0,esi
6401f08b:	je     0x6401f0db
6401f08d:	cmp    DWORD PTR ds:0x64030024,0xfffffffe
6401f094:	jne    0x6401f09b
6401f096:	call   0x6401f781
6401f09b:	mov    eax,ds:0x64030024
6401f0a0:	cmp    eax,0xffffffff
6401f0a3:	jne    0x6401f0ab
6401f0a5:	or     ax,0xffff
6401f0a9:	jmp    0x6401f11b
6401f0ab:	push   esi
6401f0ac:	lea    ecx,[ebp-0x10]
6401f0af:	push   ecx
6401f0b0:	push   0x1
6401f0b2:	lea    ecx,[ebp+0x8]
6401f0b5:	push   ecx
6401f0b6:	push   eax
6401f0b7:	call   DWORD PTR ds:0x640260ac
6401f0bd:	test   eax,eax
6401f0bf:	jne    0x6401f128
6401f0c1:	cmp    DWORD PTR ds:0x6402ffb0,0x2
6401f0c8:	jne    0x6401f0a5
6401f0ca:	call   DWORD PTR ds:0x64026044
6401f0d0:	cmp    eax,0x78
6401f0d3:	jne    0x6401f0a5
6401f0d5:	mov    DWORD PTR ds:0x6402ffb0,esi
6401f0db:	push   esi
6401f0dc:	push   esi
6401f0dd:	push   0x5
6401f0df:	lea    eax,[ebp-0xc]
6401f0e2:	push   eax
6401f0e3:	push   0x1
6401f0e5:	lea    eax,[ebp+0x8]
6401f0e8:	push   eax
6401f0e9:	push   esi
6401f0ea:	call   DWORD PTR ds:0x640260a8
6401f0f0:	push   eax
6401f0f1:	call   DWORD PTR ds:0x64026028
6401f0f7:	mov    ecx,DWORD PTR ds:0x64030024
6401f0fd:	cmp    ecx,0xffffffff
6401f100:	je     0x6401f0a5
6401f102:	push   esi
6401f103:	lea    edx,[ebp-0x10]
6401f106:	push   edx
6401f107:	push   eax
6401f108:	lea    eax,[ebp-0xc]
6401f10b:	push   eax
6401f10c:	push   ecx
6401f10d:	call   DWORD PTR ds:0x64026090
6401f113:	test   eax,eax
6401f115:	je     0x6401f0a5
6401f117:	mov    ax,WORD PTR [ebp+0x8]
6401f11b:	mov    ecx,DWORD PTR [ebp-0x4]
6401f11e:	xor    ecx,ebp
6401f120:	pop    esi
6401f121:	call   0x64013c5c
6401f126:	leave  
6401f127:	ret    
6401f128:	mov    DWORD PTR ds:0x6402ffb0,0x1
6401f132:	jmp    0x6401f117
6401f134:	push   0x10
6401f136:	push   0x6402c438
6401f13b:	call   0x64015220
6401f140:	xor    ebx,ebx
6401f142:	mov    DWORD PTR [ebp-0x1c],ebx
6401f145:	push   0x1
6401f147:	call   0x6401b21a
6401f14c:	pop    ecx
6401f14d:	mov    DWORD PTR [ebp-0x4],ebx
6401f150:	push   0x3
6401f152:	pop    edi
6401f153:	mov    DWORD PTR [ebp-0x20],edi
6401f156:	cmp    edi,DWORD PTR ds:0x640344e0
6401f15c:	jge    0x6401f1b5
6401f15e:	mov    esi,edi
6401f160:	shl    esi,0x2
6401f163:	mov    eax,ds:0x640334d0
6401f168:	add    eax,esi
6401f16a:	cmp    DWORD PTR [eax],ebx
6401f16c:	je     0x6401f1b2
6401f16e:	mov    eax,DWORD PTR [eax]
6401f170:	test   BYTE PTR [eax+0xc],0x83
6401f174:	je     0x6401f185
6401f176:	push   eax
6401f177:	call   0x6401f83f
6401f17c:	pop    ecx
6401f17d:	cmp    eax,0xffffffff
6401f180:	je     0x6401f185
6401f182:	inc    DWORD PTR [ebp-0x1c]
6401f185:	cmp    edi,0x14
6401f188:	jl     0x6401f1b2
6401f18a:	mov    eax,ds:0x640334d0
6401f18f:	mov    eax,DWORD PTR [esi+eax*1]
6401f192:	add    eax,0x20
6401f195:	push   eax
6401f196:	call   DWORD PTR ds:0x640260a4
6401f19c:	mov    eax,ds:0x640334d0
6401f1a1:	push   DWORD PTR [esi+eax*1]
6401f1a4:	call   0x64014af6
6401f1a9:	pop    ecx
6401f1aa:	mov    eax,ds:0x640334d0
6401f1af:	mov    DWORD PTR [esi+eax*1],ebx
6401f1b2:	inc    edi
6401f1b3:	jmp    0x6401f153
6401f1b5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f1bc:	call   0x6401f1ca
6401f1c1:	mov    eax,DWORD PTR [ebp-0x1c]
6401f1c4:	call   0x64015265
6401f1c9:	ret    
6401f1ca:	push   0x1
6401f1cc:	call   0x6401b142
6401f1d1:	pop    ecx
6401f1d2:	ret    
6401f1d3:	push   ebx
6401f1d4:	push   esi
6401f1d5:	mov    esi,DWORD PTR [esp+0xc]
6401f1d9:	mov    eax,DWORD PTR [esi+0xc]
6401f1dc:	mov    ecx,eax
6401f1de:	and    cl,0x3
6401f1e1:	xor    ebx,ebx
6401f1e3:	cmp    cl,0x2
6401f1e6:	jne    0x6401f227
6401f1e8:	test   ax,0x108
6401f1ec:	je     0x6401f227
6401f1ee:	mov    eax,DWORD PTR [esi+0x8]
6401f1f1:	push   edi
6401f1f2:	mov    edi,DWORD PTR [esi]
6401f1f4:	sub    edi,eax
6401f1f6:	test   edi,edi
6401f1f8:	jle    0x6401f226
6401f1fa:	push   edi
6401f1fb:	push   eax
6401f1fc:	push   esi
6401f1fd:	call   0x6401da7d
6401f202:	pop    ecx
6401f203:	push   eax
6401f204:	call   0x6401d75e
6401f209:	add    esp,0xc
6401f20c:	cmp    eax,edi
6401f20e:	jne    0x6401f21f
6401f210:	mov    eax,DWORD PTR [esi+0xc]
6401f213:	test   al,al
6401f215:	jns    0x6401f226
6401f217:	and    eax,0xfffffffd
6401f21a:	mov    DWORD PTR [esi+0xc],eax
6401f21d:	jmp    0x6401f226
6401f21f:	or     DWORD PTR [esi+0xc],0x20
6401f223:	or     ebx,0xffffffff
6401f226:	pop    edi
6401f227:	mov    eax,DWORD PTR [esi+0x8]
6401f22a:	and    DWORD PTR [esi+0x4],0x0
6401f22e:	mov    DWORD PTR [esi],eax
6401f230:	pop    esi
6401f231:	mov    eax,ebx
6401f233:	pop    ebx
6401f234:	ret    
6401f235:	push   esi
6401f236:	mov    esi,DWORD PTR [esp+0x8]
6401f23a:	test   esi,esi
6401f23c:	jne    0x6401f247
6401f23e:	push   esi
6401f23f:	call   0x6401f277
6401f244:	pop    ecx
6401f245:	pop    esi
6401f246:	ret    
6401f247:	push   esi
6401f248:	call   0x6401f1d3
6401f24d:	test   eax,eax
6401f24f:	pop    ecx
6401f250:	je     0x6401f257
6401f252:	or     eax,0xffffffff
6401f255:	pop    esi
6401f256:	ret    
6401f257:	test   WORD PTR [esi+0xc],0x4000
6401f25d:	je     0x6401f273
6401f25f:	push   esi
6401f260:	call   0x6401da7d
6401f265:	push   eax
6401f266:	call   0x6401f8bb
6401f26b:	pop    ecx
6401f26c:	pop    ecx
6401f26d:	neg    eax
6401f26f:	sbb    eax,eax
6401f271:	pop    esi
6401f272:	ret    
6401f273:	xor    eax,eax
6401f275:	pop    esi
6401f276:	ret    
6401f277:	push   0x14
6401f279:	push   0x6402c458
6401f27e:	call   0x64015220
6401f283:	xor    edi,edi
6401f285:	mov    DWORD PTR [ebp-0x1c],edi
6401f288:	mov    DWORD PTR [ebp-0x24],edi
6401f28b:	push   0x1
6401f28d:	call   0x6401b21a
6401f292:	pop    ecx
6401f293:	mov    DWORD PTR [ebp-0x4],edi
6401f296:	xor    esi,esi
6401f298:	mov    DWORD PTR [ebp-0x20],esi
6401f29b:	cmp    esi,DWORD PTR ds:0x640344e0
6401f2a1:	jge    0x6401f32a
6401f2a7:	mov    eax,ds:0x640334d0
6401f2ac:	lea    eax,[eax+esi*4]
6401f2af:	cmp    DWORD PTR [eax],edi
6401f2b1:	je     0x6401f311
6401f2b3:	mov    eax,DWORD PTR [eax]
6401f2b5:	test   BYTE PTR [eax+0xc],0x83
6401f2b9:	je     0x6401f311
6401f2bb:	push   eax
6401f2bc:	push   esi
6401f2bd:	call   0x6401d9ef
6401f2c2:	pop    ecx
6401f2c3:	pop    ecx
6401f2c4:	xor    edx,edx
6401f2c6:	inc    edx
6401f2c7:	mov    DWORD PTR [ebp-0x4],edx
6401f2ca:	mov    eax,ds:0x640334d0
6401f2cf:	mov    eax,DWORD PTR [eax+esi*4]
6401f2d2:	mov    ecx,DWORD PTR [eax+0xc]
6401f2d5:	test   cl,0x83
6401f2d8:	je     0x6401f309
6401f2da:	cmp    DWORD PTR [ebp+0x8],edx
6401f2dd:	jne    0x6401f2f0
6401f2df:	push   eax
6401f2e0:	call   0x6401f235
6401f2e5:	pop    ecx
6401f2e6:	cmp    eax,0xffffffff
6401f2e9:	je     0x6401f309
6401f2eb:	inc    DWORD PTR [ebp-0x1c]
6401f2ee:	jmp    0x6401f309
6401f2f0:	cmp    DWORD PTR [ebp+0x8],edi
6401f2f3:	jne    0x6401f309
6401f2f5:	test   cl,0x2
6401f2f8:	je     0x6401f309
6401f2fa:	push   eax
6401f2fb:	call   0x6401f235
6401f300:	pop    ecx
6401f301:	cmp    eax,0xffffffff
6401f304:	jne    0x6401f309
6401f306:	or     DWORD PTR [ebp-0x24],eax
6401f309:	mov    DWORD PTR [ebp-0x4],edi
6401f30c:	call   0x6401f319
6401f311:	inc    esi
6401f312:	jmp    0x6401f298
6401f314:	xor    edi,edi
6401f316:	mov    esi,DWORD PTR [ebp-0x20]
6401f319:	mov    eax,ds:0x640334d0
6401f31e:	push   DWORD PTR [eax+esi*4]
6401f321:	push   esi
6401f322:	call   0x6401da53
6401f327:	pop    ecx
6401f328:	pop    ecx
6401f329:	ret    
6401f32a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f331:	call   0x6401f348
6401f336:	cmp    DWORD PTR [ebp+0x8],0x1
6401f33a:	mov    eax,DWORD PTR [ebp-0x1c]
6401f33d:	je     0x6401f342
6401f33f:	mov    eax,DWORD PTR [ebp-0x24]
6401f342:	call   0x64015265
6401f347:	ret    
6401f348:	push   0x1
6401f34a:	call   0x6401b142
6401f34f:	pop    ecx
6401f350:	ret    
6401f351:	push   0x1
6401f353:	call   0x6401f277
6401f358:	pop    ecx
6401f359:	ret    
6401f35a:	push   ebp
6401f35b:	mov    ebp,esp
6401f35d:	push   ecx
6401f35e:	push   esi
6401f35f:	mov    esi,DWORD PTR [ebp+0xc]
6401f362:	push   esi
6401f363:	call   0x6401da7d
6401f368:	mov    DWORD PTR [ebp+0xc],eax
6401f36b:	mov    eax,DWORD PTR [esi+0xc]
6401f36e:	test   al,0x82
6401f370:	pop    ecx
6401f371:	jne    0x6401f38c
6401f373:	call   0x64015a20
6401f378:	mov    DWORD PTR [eax],0x9
6401f37e:	or     DWORD PTR [esi+0xc],0x20
6401f382:	mov    eax,0xffff
6401f387:	jmp    0x6401f4c7
6401f38c:	test   al,0x40
6401f38e:	je     0x6401f39d
6401f390:	call   0x64015a20
6401f395:	mov    DWORD PTR [eax],0x22
6401f39b:	jmp    0x6401f37e
6401f39d:	test   al,0x1
6401f39f:	je     0x6401f3b8
6401f3a1:	and    DWORD PTR [esi+0x4],0x0
6401f3a5:	test   al,0x10
6401f3a7:	je     0x6401f438
6401f3ad:	mov    ecx,DWORD PTR [esi+0x8]
6401f3b0:	and    eax,0xfffffffe
6401f3b3:	mov    DWORD PTR [esi],ecx
6401f3b5:	mov    DWORD PTR [esi+0xc],eax
6401f3b8:	mov    eax,DWORD PTR [esi+0xc]
6401f3bb:	and    DWORD PTR [esi+0x4],0x0
6401f3bf:	and    DWORD PTR [ebp-0x4],0x0
6401f3c3:	push   ebx
6401f3c4:	push   0x2
6401f3c6:	and    eax,0xffffffef
6401f3c9:	pop    ebx
6401f3ca:	or     eax,ebx
6401f3cc:	test   ax,0x10c
6401f3d0:	mov    DWORD PTR [esi+0xc],eax
6401f3d3:	jne    0x6401f401
6401f3d5:	call   0x6401d8dc
6401f3da:	add    eax,0x20
6401f3dd:	cmp    esi,eax
6401f3df:	je     0x6401f3ed
6401f3e1:	call   0x6401d8dc
6401f3e6:	add    eax,0x40
6401f3e9:	cmp    esi,eax
6401f3eb:	jne    0x6401f3fa
6401f3ed:	push   DWORD PTR [ebp+0xc]
6401f3f0:	call   0x6401d87e
6401f3f5:	test   eax,eax
6401f3f7:	pop    ecx
6401f3f8:	jne    0x6401f401
6401f3fa:	push   esi
6401f3fb:	call   0x6401d83a
6401f400:	pop    ecx
6401f401:	test   WORD PTR [esi+0xc],0x108
6401f407:	push   edi
6401f408:	je     0x6401f491
6401f40e:	mov    eax,DWORD PTR [esi+0x8]
6401f411:	mov    edi,DWORD PTR [esi]
6401f413:	lea    ecx,[eax+0x2]
6401f416:	mov    DWORD PTR [esi],ecx
6401f418:	mov    ecx,DWORD PTR [esi+0x18]
6401f41b:	sub    edi,eax
6401f41d:	sub    ecx,ebx
6401f41f:	test   edi,edi
6401f421:	mov    DWORD PTR [esi+0x4],ecx
6401f424:	jle    0x6401f443
6401f426:	push   edi
6401f427:	push   eax
6401f428:	push   DWORD PTR [ebp+0xc]
6401f42b:	call   0x6401d75e
6401f430:	add    esp,0xc
6401f433:	mov    DWORD PTR [ebp-0x4],eax
6401f436:	jmp    0x6401f486
6401f438:	or     eax,0x20
6401f43b:	mov    DWORD PTR [esi+0xc],eax
6401f43e:	jmp    0x6401f382
6401f443:	mov    ecx,DWORD PTR [ebp+0xc]
6401f446:	cmp    ecx,0xffffffff
6401f449:	je     0x6401f466
6401f44b:	cmp    ecx,0xfffffffe
6401f44e:	je     0x6401f466
6401f450:	mov    eax,ecx
6401f452:	and    eax,0x1f
6401f455:	mov    edx,ecx
6401f457:	sar    edx,0x5
6401f45a:	shl    eax,0x6
6401f45d:	add    eax,DWORD PTR [edx*4+0x64034520]
6401f464:	jmp    0x6401f46b
6401f466:	mov    eax,0x6402f880
6401f46b:	test   BYTE PTR [eax+0x4],0x20
6401f46f:	je     0x6401f486
6401f471:	push   ebx
6401f472:	push   0x0
6401f474:	push   0x0
6401f476:	push   ecx
6401f477:	call   0x6401d023
6401f47c:	and    eax,edx
6401f47e:	add    esp,0x10
6401f481:	cmp    eax,0xffffffff
6401f484:	je     0x6401f4b3
6401f486:	mov    eax,DWORD PTR [esi+0x8]
6401f489:	mov    ebx,DWORD PTR [ebp+0x8]
6401f48c:	mov    WORD PTR [eax],bx
6401f48f:	jmp    0x6401f4ae
6401f491:	push   0x2
6401f493:	lea    eax,[ebp-0x4]
6401f496:	push   eax
6401f497:	push   DWORD PTR [ebp+0xc]
6401f49a:	mov    edi,ebx
6401f49c:	mov    ebx,DWORD PTR [ebp+0x8]
6401f49f:	mov    WORD PTR [ebp-0x4],bx
6401f4a3:	call   0x6401d75e
6401f4a8:	add    esp,0xc
6401f4ab:	mov    DWORD PTR [ebp-0x4],eax
6401f4ae:	cmp    DWORD PTR [ebp-0x4],edi
6401f4b1:	je     0x6401f4be
6401f4b3:	or     DWORD PTR [esi+0xc],0x20
6401f4b7:	mov    eax,0xffff
6401f4bc:	jmp    0x6401f4c5
6401f4be:	mov    eax,ebx
6401f4c0:	and    eax,0xffff
6401f4c5:	pop    edi
6401f4c6:	pop    ebx
6401f4c7:	pop    esi
6401f4c8:	leave  
6401f4c9:	ret    
6401f4ca:	push   ebp
6401f4cb:	mov    ebp,esp
6401f4cd:	sub    esp,0x14
6401f4d0:	push   esi
6401f4d1:	push   edi
6401f4d2:	push   DWORD PTR [ebp+0x8]
6401f4d5:	lea    ecx,[ebp-0x14]
6401f4d8:	call   0x64013dff
6401f4dd:	mov    eax,DWORD PTR [ebp+0x10]
6401f4e0:	mov    esi,DWORD PTR [ebp+0xc]
6401f4e3:	xor    edi,edi
6401f4e5:	cmp    eax,edi
6401f4e7:	je     0x6401f4eb
6401f4e9:	mov    DWORD PTR [eax],esi
6401f4eb:	cmp    esi,edi
6401f4ed:	jne    0x6401f51b
6401f4ef:	call   0x64015a20
6401f4f4:	push   edi
6401f4f5:	push   edi
6401f4f6:	push   edi
6401f4f7:	push   edi
6401f4f8:	push   edi
6401f4f9:	mov    DWORD PTR [eax],0x16
6401f4ff:	call   0x64013794
6401f504:	add    esp,0x14
6401f507:	cmp    BYTE PTR [ebp-0x8],0x0
6401f50b:	je     0x6401f514
6401f50d:	mov    eax,DWORD PTR [ebp-0xc]
6401f510:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f514:	xor    eax,eax
6401f516:	jmp    0x6401f6f1
6401f51b:	cmp    DWORD PTR [ebp+0x14],edi
6401f51e:	je     0x6401f52c
6401f520:	cmp    DWORD PTR [ebp+0x14],0x2
6401f524:	jl     0x6401f4ef
6401f526:	cmp    DWORD PTR [ebp+0x14],0x24
6401f52a:	jg     0x6401f4ef
6401f52c:	mov    ecx,DWORD PTR [ebp-0x14]
6401f52f:	push   ebx
6401f530:	mov    bl,BYTE PTR [esi]
6401f532:	mov    DWORD PTR [ebp-0x4],edi
6401f535:	lea    edi,[esi+0x1]
6401f538:	cmp    DWORD PTR [ecx+0xac],0x1
6401f53f:	jle    0x6401f558
6401f541:	lea    eax,[ebp-0x14]
6401f544:	push   eax
6401f545:	movzx  eax,bl
6401f548:	push   0x8
6401f54a:	push   eax
6401f54b:	call   0x6401abc5
6401f550:	mov    ecx,DWORD PTR [ebp-0x14]
6401f553:	add    esp,0xc
6401f556:	jmp    0x6401f568
6401f558:	mov    edx,DWORD PTR [ecx+0xc8]
6401f55e:	movzx  eax,bl
6401f561:	movzx  eax,BYTE PTR [edx+eax*2]
6401f565:	and    eax,0x8
6401f568:	test   eax,eax
6401f56a:	je     0x6401f571
6401f56c:	mov    bl,BYTE PTR [edi]
6401f56e:	inc    edi
6401f56f:	jmp    0x6401f538
6401f571:	cmp    bl,0x2d
6401f574:	jne    0x6401f57c
6401f576:	or     DWORD PTR [ebp+0x18],0x2
6401f57a:	jmp    0x6401f581
6401f57c:	cmp    bl,0x2b
6401f57f:	jne    0x6401f584
6401f581:	mov    bl,BYTE PTR [edi]
6401f583:	inc    edi
6401f584:	mov    eax,DWORD PTR [ebp+0x14]
6401f587:	test   eax,eax
6401f589:	jl     0x6401f6d8
6401f58f:	cmp    eax,0x1
6401f592:	je     0x6401f6d8
6401f598:	cmp    eax,0x24
6401f59b:	jg     0x6401f6d8
6401f5a1:	test   eax,eax
6401f5a3:	jne    0x6401f5cf
6401f5a5:	cmp    bl,0x30
6401f5a8:	je     0x6401f5b3
6401f5aa:	mov    DWORD PTR [ebp+0x14],0xa
6401f5b1:	jmp    0x6401f5e7
6401f5b3:	mov    al,BYTE PTR [edi]
6401f5b5:	cmp    al,0x78
6401f5b7:	je     0x6401f5c6
6401f5b9:	cmp    al,0x58
6401f5bb:	je     0x6401f5c6
6401f5bd:	mov    DWORD PTR [ebp+0x14],0x8
6401f5c4:	jmp    0x6401f5e7
6401f5c6:	mov    DWORD PTR [ebp+0x14],0x10
6401f5cd:	jmp    0x6401f5d9
6401f5cf:	cmp    eax,0x10
6401f5d2:	jne    0x6401f5e7
6401f5d4:	cmp    bl,0x30
6401f5d7:	jne    0x6401f5e7
6401f5d9:	mov    al,BYTE PTR [edi]
6401f5db:	cmp    al,0x78
6401f5dd:	je     0x6401f5e3
6401f5df:	cmp    al,0x58
6401f5e1:	jne    0x6401f5e7
6401f5e3:	inc    edi
6401f5e4:	mov    bl,BYTE PTR [edi]
6401f5e6:	inc    edi
6401f5e7:	mov    esi,DWORD PTR [ecx+0xc8]
6401f5ed:	or     eax,0xffffffff
6401f5f0:	xor    edx,edx
6401f5f2:	div    DWORD PTR [ebp+0x14]
6401f5f5:	movzx  ecx,bl
6401f5f8:	movzx  ecx,WORD PTR [esi+ecx*2]
6401f5fc:	test   cl,0x4
6401f5ff:	je     0x6401f609
6401f601:	movsx  ecx,bl
6401f604:	sub    ecx,0x30
6401f607:	jmp    0x6401f623
6401f609:	test   cx,0x103
6401f60e:	je     0x6401f641
6401f610:	mov    cl,bl
6401f612:	sub    cl,0x61
6401f615:	cmp    cl,0x19
6401f618:	movsx  ecx,bl
6401f61b:	ja     0x6401f620
6401f61d:	sub    ecx,0x20
6401f620:	add    ecx,0xffffffc9
6401f623:	cmp    ecx,DWORD PTR [ebp+0x14]
6401f626:	jae    0x6401f641
6401f628:	or     DWORD PTR [ebp+0x18],0x8
6401f62c:	cmp    DWORD PTR [ebp-0x4],eax
6401f62f:	jb     0x6401f658
6401f631:	jne    0x6401f637
6401f633:	cmp    ecx,edx
6401f635:	jbe    0x6401f658
6401f637:	or     DWORD PTR [ebp+0x18],0x4
6401f63b:	cmp    DWORD PTR [ebp+0x10],0x0
6401f63f:	jne    0x6401f664
6401f641:	mov    eax,DWORD PTR [ebp+0x18]
6401f644:	dec    edi
6401f645:	test   al,0x8
6401f647:	jne    0x6401f669
6401f649:	cmp    DWORD PTR [ebp+0x10],0x0
6401f64d:	je     0x6401f652
6401f64f:	mov    edi,DWORD PTR [ebp+0xc]
6401f652:	and    DWORD PTR [ebp-0x4],0x0
6401f656:	jmp    0x6401f6b4
6401f658:	mov    ebx,DWORD PTR [ebp-0x4]
6401f65b:	imul   ebx,DWORD PTR [ebp+0x14]
6401f65f:	add    ebx,ecx
6401f661:	mov    DWORD PTR [ebp-0x4],ebx
6401f664:	mov    bl,BYTE PTR [edi]
6401f666:	inc    edi
6401f667:	jmp    0x6401f5f5
6401f669:	test   al,0x4
6401f66b:	mov    esi,0x7fffffff
6401f670:	jne    0x6401f68d
6401f672:	test   al,0x1
6401f674:	jne    0x6401f6b4
6401f676:	and    eax,0x2
6401f679:	je     0x6401f684
6401f67b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401f682:	ja     0x6401f68d
6401f684:	test   eax,eax
6401f686:	jne    0x6401f6b4
6401f688:	cmp    DWORD PTR [ebp-0x4],esi
6401f68b:	jbe    0x6401f6b4
6401f68d:	call   0x64015a20
6401f692:	test   BYTE PTR [ebp+0x18],0x1
6401f696:	mov    DWORD PTR [eax],0x22
6401f69c:	je     0x6401f6a4
6401f69e:	or     DWORD PTR [ebp-0x4],0xffffffff
6401f6a2:	jmp    0x6401f6b4
6401f6a4:	mov    al,BYTE PTR [ebp+0x18]
6401f6a7:	and    al,0x2
6401f6a9:	neg    al
6401f6ab:	sbb    eax,eax
6401f6ad:	neg    eax
6401f6af:	add    eax,esi
6401f6b1:	mov    DWORD PTR [ebp-0x4],eax
6401f6b4:	mov    eax,DWORD PTR [ebp+0x10]
6401f6b7:	test   eax,eax
6401f6b9:	je     0x6401f6bd
6401f6bb:	mov    DWORD PTR [eax],edi
6401f6bd:	test   BYTE PTR [ebp+0x18],0x2
6401f6c1:	je     0x6401f6c6
6401f6c3:	neg    DWORD PTR [ebp-0x4]
6401f6c6:	cmp    BYTE PTR [ebp-0x8],0x0
6401f6ca:	je     0x6401f6d3
6401f6cc:	mov    eax,DWORD PTR [ebp-0xc]
6401f6cf:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f6d3:	mov    eax,DWORD PTR [ebp-0x4]
6401f6d6:	jmp    0x6401f6f0
6401f6d8:	mov    eax,DWORD PTR [ebp+0x10]
6401f6db:	test   eax,eax
6401f6dd:	je     0x6401f6e1
6401f6df:	mov    DWORD PTR [eax],esi
6401f6e1:	cmp    BYTE PTR [ebp-0x8],0x0
6401f6e5:	je     0x6401f6ee
6401f6e7:	mov    eax,DWORD PTR [ebp-0xc]
6401f6ea:	and    DWORD PTR [eax+0x70],0xfffffffd
6401f6ee:	xor    eax,eax
6401f6f0:	pop    ebx
6401f6f1:	pop    edi
6401f6f2:	pop    esi
6401f6f3:	leave  
6401f6f4:	ret    
6401f6f5:	push   ebp
6401f6f6:	mov    ebp,esp
6401f6f8:	xor    eax,eax
6401f6fa:	cmp    DWORD PTR ds:0x64030934,eax
6401f700:	push   eax
6401f701:	push   DWORD PTR [ebp+0x10]
6401f704:	push   DWORD PTR [ebp+0xc]
6401f707:	push   DWORD PTR [ebp+0x8]
6401f70a:	jne    0x6401f713
6401f70c:	push   0x6402f878
6401f711:	jmp    0x6401f714
6401f713:	push   eax
6401f714:	call   0x6401f4ca
6401f719:	add    esp,0x14
6401f71c:	pop    ebp
6401f71d:	ret    
6401f71e:	int3   
6401f71f:	int3   
6401f720:	push   ebp
6401f721:	mov    ebp,esp
6401f723:	push   edi
6401f724:	push   esi
6401f725:	push   ebx
6401f726:	mov    ecx,DWORD PTR [ebp+0x10]
6401f729:	or     ecx,ecx
6401f72b:	je     0x6401f77a
6401f72d:	mov    esi,DWORD PTR [ebp+0x8]
6401f730:	mov    edi,DWORD PTR [ebp+0xc]
6401f733:	mov    bh,0x41
6401f735:	mov    bl,0x5a
6401f737:	mov    dh,0x20
6401f739:	lea    ecx,[ecx+0x0]
6401f73c:	mov    ah,BYTE PTR [esi]
6401f73e:	or     ah,ah
6401f740:	mov    al,BYTE PTR [edi]
6401f742:	je     0x6401f76b
6401f744:	or     al,al
6401f746:	je     0x6401f76b
6401f748:	add    esi,0x1
6401f74b:	add    edi,0x1
6401f74e:	cmp    ah,bh
6401f750:	jb     0x6401f758
6401f752:	cmp    ah,bl
6401f754:	ja     0x6401f758
6401f756:	add    ah,dh
6401f758:	cmp    al,bh
6401f75a:	jb     0x6401f762
6401f75c:	cmp    al,bl
6401f75e:	ja     0x6401f762
6401f760:	add    al,dh
6401f762:	cmp    ah,al
6401f764:	jne    0x6401f771
6401f766:	sub    ecx,0x1
6401f769:	jne    0x6401f73c
6401f76b:	xor    ecx,ecx
6401f76d:	cmp    ah,al
6401f76f:	je     0x6401f77a
6401f771:	mov    ecx,0xffffffff
6401f776:	jb     0x6401f77a
6401f778:	neg    ecx
6401f77a:	mov    eax,ecx
6401f77c:	pop    ebx
6401f77d:	pop    esi
6401f77e:	pop    edi
6401f77f:	leave  
6401f780:	ret    
6401f781:	xor    eax,eax
6401f783:	push   eax
6401f784:	push   eax
6401f785:	push   0x3
6401f787:	push   eax
6401f788:	push   0x3
6401f78a:	push   0x40000000
6401f78f:	push   0x640285e4
6401f794:	call   DWORD PTR ds:0x640260b0
6401f79a:	mov    ds:0x64030024,eax
6401f79f:	ret    
6401f7a0:	mov    eax,ds:0x64030024
6401f7a5:	cmp    eax,0xffffffff
6401f7a8:	push   esi
6401f7a9:	mov    esi,DWORD PTR ds:0x64026040
6401f7af:	je     0x6401f7b9
6401f7b1:	cmp    eax,0xfffffffe
6401f7b4:	je     0x6401f7b9
6401f7b6:	push   eax
6401f7b7:	call   esi
6401f7b9:	mov    eax,ds:0x64030020
6401f7be:	cmp    eax,0xffffffff
6401f7c1:	je     0x6401f7cb
6401f7c3:	cmp    eax,0xfffffffe
6401f7c6:	je     0x6401f7cb
6401f7c8:	push   eax
6401f7c9:	call   esi
6401f7cb:	pop    esi
6401f7cc:	ret    
6401f7cd:	push   ebx
6401f7ce:	push   esi
6401f7cf:	mov    esi,DWORD PTR [esp+0xc]
6401f7d3:	push   edi
6401f7d4:	xor    edi,edi
6401f7d6:	or     ebx,0xffffffff
6401f7d9:	cmp    esi,edi
6401f7db:	jne    0x6401f7f9
6401f7dd:	call   0x64015a20
6401f7e2:	push   edi
6401f7e3:	push   edi
6401f7e4:	push   edi
6401f7e5:	push   edi
6401f7e6:	push   edi
6401f7e7:	mov    DWORD PTR [eax],0x16
6401f7ed:	call   0x64013794
6401f7f2:	add    esp,0x14
6401f7f5:	or     eax,ebx
6401f7f7:	jmp    0x6401f83b
6401f7f9:	test   BYTE PTR [esi+0xc],0x83
6401f7fd:	je     0x6401f836
6401f7ff:	push   esi
6401f800:	call   0x6401f1d3
6401f805:	push   esi
6401f806:	mov    ebx,eax
6401f808:	call   0x6401fb1a
6401f80d:	push   esi
6401f80e:	call   0x6401da7d
6401f813:	push   eax
6401f814:	call   0x6401fa4d
6401f819:	add    esp,0x10
6401f81c:	test   eax,eax
6401f81e:	jge    0x6401f825
6401f820:	or     ebx,0xffffffff
6401f823:	jmp    0x6401f836
6401f825:	mov    eax,DWORD PTR [esi+0x1c]
6401f828:	cmp    eax,edi
6401f82a:	je     0x6401f836
6401f82c:	push   eax
6401f82d:	call   0x64014af6
6401f832:	pop    ecx
6401f833:	mov    DWORD PTR [esi+0x1c],edi
6401f836:	mov    DWORD PTR [esi+0xc],edi
6401f839:	mov    eax,ebx
6401f83b:	pop    edi
6401f83c:	pop    esi
6401f83d:	pop    ebx
6401f83e:	ret    
6401f83f:	push   0xc
6401f841:	push   0x6402c480
6401f846:	call   0x64015220
6401f84b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401f84f:	xor    eax,eax
6401f851:	mov    esi,DWORD PTR [ebp+0x8]
6401f854:	xor    edi,edi
6401f856:	cmp    esi,edi
6401f858:	setne  al
6401f85b:	cmp    eax,edi
6401f85d:	jne    0x6401f87c
6401f85f:	call   0x64015a20
6401f864:	mov    DWORD PTR [eax],0x16
6401f86a:	push   edi
6401f86b:	push   edi
6401f86c:	push   edi
6401f86d:	push   edi
6401f86e:	push   edi
6401f86f:	call   0x64013794
6401f874:	add    esp,0x14
6401f877:	or     eax,0xffffffff
6401f87a:	jmp    0x6401f888
6401f87c:	test   BYTE PTR [esi+0xc],0x40
6401f880:	je     0x6401f88e
6401f882:	mov    DWORD PTR [esi+0xc],edi
6401f885:	mov    eax,DWORD PTR [ebp-0x1c]
6401f888:	call   0x64015265
6401f88d:	ret    
6401f88e:	push   esi
6401f88f:	call   0x6401d9b3
6401f894:	pop    ecx
6401f895:	mov    DWORD PTR [ebp-0x4],edi
6401f898:	push   esi
6401f899:	call   0x6401f7cd
6401f89e:	pop    ecx
6401f89f:	mov    DWORD PTR [ebp-0x1c],eax
6401f8a2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f8a9:	call   0x6401f8b3
6401f8ae:	jmp    0x6401f885
6401f8b0:	mov    esi,DWORD PTR [ebp+0x8]
6401f8b3:	push   esi
6401f8b4:	call   0x6401da1d
6401f8b9:	pop    ecx
6401f8ba:	ret    
6401f8bb:	push   0x10
6401f8bd:	push   0x6402c4a0
6401f8c2:	call   0x64015220
6401f8c7:	mov    eax,DWORD PTR [ebp+0x8]
6401f8ca:	cmp    eax,0xfffffffe
6401f8cd:	jne    0x6401f8e2
6401f8cf:	call   0x64015a20
6401f8d4:	mov    DWORD PTR [eax],0x9
6401f8da:	or     eax,0xffffffff
6401f8dd:	jmp    0x6401f98c
6401f8e2:	xor    ebx,ebx
6401f8e4:	cmp    eax,ebx
6401f8e6:	jl     0x6401f8f0
6401f8e8:	cmp    eax,DWORD PTR ds:0x64034500
6401f8ee:	jb     0x6401f90a
6401f8f0:	call   0x64015a20
6401f8f5:	mov    DWORD PTR [eax],0x9
6401f8fb:	push   ebx
6401f8fc:	push   ebx
6401f8fd:	push   ebx
6401f8fe:	push   ebx
6401f8ff:	push   ebx
6401f900:	call   0x64013794
6401f905:	add    esp,0x14
6401f908:	jmp    0x6401f8da
6401f90a:	mov    ecx,eax
6401f90c:	sar    ecx,0x5
6401f90f:	lea    edi,[ecx*4+0x64034520]
6401f916:	mov    esi,eax
6401f918:	and    esi,0x1f
6401f91b:	shl    esi,0x6
6401f91e:	mov    ecx,DWORD PTR [edi]
6401f920:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401f925:	and    ecx,0x1
6401f928:	je     0x6401f8f0
6401f92a:	push   eax
6401f92b:	call   0x6401efb0
6401f930:	pop    ecx
6401f931:	mov    DWORD PTR [ebp-0x4],ebx
6401f934:	mov    eax,DWORD PTR [edi]
6401f936:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401f93b:	je     0x6401f96e
6401f93d:	push   DWORD PTR [ebp+0x8]
6401f940:	call   0x6401ef3f
6401f945:	pop    ecx
6401f946:	push   eax
6401f947:	call   DWORD PTR ds:0x640260b8
6401f94d:	test   eax,eax
6401f94f:	jne    0x6401f95c
6401f951:	call   DWORD PTR ds:0x64026044
6401f957:	mov    DWORD PTR [ebp-0x1c],eax
6401f95a:	jmp    0x6401f95f
6401f95c:	mov    DWORD PTR [ebp-0x1c],ebx
6401f95f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401f962:	je     0x6401f97d
6401f964:	call   0x64015a33
6401f969:	mov    ecx,DWORD PTR [ebp-0x1c]
6401f96c:	mov    DWORD PTR [eax],ecx
6401f96e:	call   0x64015a20
6401f973:	mov    DWORD PTR [eax],0x9
6401f979:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401f97d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401f984:	call   0x6401f992
6401f989:	mov    eax,DWORD PTR [ebp-0x1c]
6401f98c:	call   0x64015265
6401f991:	ret    
6401f992:	push   DWORD PTR [ebp+0x8]
6401f995:	call   0x6401f050
6401f99a:	pop    ecx
6401f99b:	ret    
6401f99c:	xor    eax,eax
6401f99e:	cmp    DWORD PTR [esp+0x8],eax
6401f9a2:	jbe    0x6401f9b5
6401f9a4:	mov    ecx,DWORD PTR [esp+0x4]
6401f9a8:	cmp    BYTE PTR [ecx],0x0
6401f9ab:	je     0x6401f9b5
6401f9ad:	inc    eax
6401f9ae:	inc    ecx
6401f9af:	cmp    eax,DWORD PTR [esp+0x8]
6401f9b3:	jb     0x6401f9a8
6401f9b5:	ret    
6401f9b6:	push   esi
6401f9b7:	mov    esi,DWORD PTR [esp+0x8]
6401f9bb:	push   edi
6401f9bc:	push   esi
6401f9bd:	call   0x6401ef3f
6401f9c2:	cmp    eax,0xffffffff
6401f9c5:	pop    ecx
6401f9c6:	je     0x6401fa18
6401f9c8:	cmp    esi,0x1
6401f9cb:	mov    eax,ds:0x64034520
6401f9d0:	jne    0x6401f9db
6401f9d2:	test   BYTE PTR [eax+0x84],0x1
6401f9d9:	jne    0x6401f9e6
6401f9db:	cmp    esi,0x2
6401f9de:	jne    0x6401f9fc
6401f9e0:	test   BYTE PTR [eax+0x44],0x1
6401f9e4:	je     0x6401f9fc
6401f9e6:	push   0x2
6401f9e8:	call   0x6401ef3f
6401f9ed:	push   0x1
6401f9ef:	mov    edi,eax
6401f9f1:	call   0x6401ef3f
6401f9f6:	cmp    eax,edi
6401f9f8:	pop    ecx
6401f9f9:	pop    ecx
6401f9fa:	je     0x6401fa18
6401f9fc:	push   esi
6401f9fd:	call   0x6401ef3f
6401fa02:	pop    ecx
6401fa03:	push   eax
6401fa04:	call   DWORD PTR ds:0x64026040
6401fa0a:	test   eax,eax
6401fa0c:	jne    0x6401fa18
6401fa0e:	call   DWORD PTR ds:0x64026044
6401fa14:	mov    edi,eax
6401fa16:	jmp    0x6401fa1a
6401fa18:	xor    edi,edi
6401fa1a:	push   esi
6401fa1b:	call   0x6401eebe
6401fa20:	mov    eax,esi
6401fa22:	sar    eax,0x5
6401fa25:	mov    eax,DWORD PTR [eax*4+0x64034520]
6401fa2c:	and    esi,0x1f
6401fa2f:	shl    esi,0x6
6401fa32:	test   edi,edi
6401fa34:	pop    ecx
6401fa35:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401fa3a:	je     0x6401fa48
6401fa3c:	push   edi
6401fa3d:	call   0x64015a46
6401fa42:	pop    ecx
6401fa43:	or     eax,0xffffffff
6401fa46:	jmp    0x6401fa4a
6401fa48:	xor    eax,eax
6401fa4a:	pop    edi
6401fa4b:	pop    esi
6401fa4c:	ret    
6401fa4d:	push   0x10
6401fa4f:	push   0x6402c4c0
6401fa54:	call   0x64015220
6401fa59:	mov    eax,DWORD PTR [ebp+0x8]
6401fa5c:	cmp    eax,0xfffffffe
6401fa5f:	jne    0x6401fa7c
6401fa61:	call   0x64015a33
6401fa66:	and    DWORD PTR [eax],0x0
6401fa69:	call   0x64015a20
6401fa6e:	mov    DWORD PTR [eax],0x9
6401fa74:	or     eax,0xffffffff
6401fa77:	jmp    0x6401fb0a
6401fa7c:	xor    edi,edi
6401fa7e:	cmp    eax,edi
6401fa80:	jl     0x6401fa8a
6401fa82:	cmp    eax,DWORD PTR ds:0x64034500
6401fa88:	jb     0x6401faab
6401fa8a:	call   0x64015a33
6401fa8f:	mov    DWORD PTR [eax],edi
6401fa91:	call   0x64015a20
6401fa96:	mov    DWORD PTR [eax],0x9
6401fa9c:	push   edi
6401fa9d:	push   edi
6401fa9e:	push   edi
6401fa9f:	push   edi
6401faa0:	push   edi
6401faa1:	call   0x64013794
6401faa6:	add    esp,0x14
6401faa9:	jmp    0x6401fa74
6401faab:	mov    ecx,eax
6401faad:	sar    ecx,0x5
6401fab0:	lea    ebx,[ecx*4+0x64034520]
6401fab7:	mov    esi,eax
6401fab9:	and    esi,0x1f
6401fabc:	shl    esi,0x6
6401fabf:	mov    ecx,DWORD PTR [ebx]
6401fac1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401fac6:	and    ecx,0x1
6401fac9:	je     0x6401fa8a
6401facb:	push   eax
6401facc:	call   0x6401efb0
6401fad1:	pop    ecx
6401fad2:	mov    DWORD PTR [ebp-0x4],edi
6401fad5:	mov    eax,DWORD PTR [ebx]
6401fad7:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401fadc:	je     0x6401faec
6401fade:	push   DWORD PTR [ebp+0x8]
6401fae1:	call   0x6401f9b6
6401fae6:	pop    ecx
6401fae7:	mov    DWORD PTR [ebp-0x1c],eax
6401faea:	jmp    0x6401fafb
6401faec:	call   0x64015a20
6401faf1:	mov    DWORD PTR [eax],0x9
6401faf7:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401fafb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fb02:	call   0x6401fb10
6401fb07:	mov    eax,DWORD PTR [ebp-0x1c]
6401fb0a:	call   0x64015265
6401fb0f:	ret    
6401fb10:	push   DWORD PTR [ebp+0x8]
6401fb13:	call   0x6401f050
6401fb18:	pop    ecx
6401fb19:	ret    
6401fb1a:	push   esi
6401fb1b:	mov    esi,DWORD PTR [esp+0x8]
6401fb1f:	mov    eax,DWORD PTR [esi+0xc]
6401fb22:	test   al,0x83
6401fb24:	je     0x6401fb44
6401fb26:	test   al,0x8
6401fb28:	je     0x6401fb44
6401fb2a:	push   DWORD PTR [esi+0x8]
6401fb2d:	call   0x64014af6
6401fb32:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401fb39:	xor    eax,eax
6401fb3b:	pop    ecx
6401fb3c:	mov    DWORD PTR [esi],eax
6401fb3e:	mov    DWORD PTR [esi+0x8],eax
6401fb41:	mov    DWORD PTR [esi+0x4],eax
6401fb44:	pop    esi
6401fb45:	ret    
6401fb46:	int3   
6401fb47:	int3   
6401fb48:	int3   
6401fb49:	int3   
6401fb4a:	int3   
6401fb4b:	int3   
6401fb4c:	int3   
6401fb4d:	int3   
6401fb4e:	int3   
6401fb4f:	int3   
6401fb50:	lea    eax,[edx-0x1]
6401fb53:	pop    ebx
6401fb54:	ret    
6401fb55:	lea    esp,[esp+0x0]
6401fb5c:	lea    esp,[esp+0x0]
6401fb60:	xor    eax,eax
6401fb62:	mov    al,BYTE PTR [esp+0x8]
6401fb66:	push   ebx
6401fb67:	mov    ebx,eax
6401fb69:	shl    eax,0x8
6401fb6c:	mov    edx,DWORD PTR [esp+0x8]
6401fb70:	test   edx,0x3
6401fb76:	je     0x6401fb8d
6401fb78:	mov    cl,BYTE PTR [edx]
6401fb7a:	add    edx,0x1
6401fb7d:	cmp    cl,bl
6401fb7f:	je     0x6401fb50
6401fb81:	test   cl,cl
6401fb83:	je     0x6401fbd6
6401fb85:	test   edx,0x3
6401fb8b:	jne    0x6401fb78
6401fb8d:	or     ebx,eax
6401fb8f:	push   edi
6401fb90:	mov    eax,ebx
6401fb92:	shl    ebx,0x10
6401fb95:	push   esi
6401fb96:	or     ebx,eax
6401fb98:	mov    ecx,DWORD PTR [edx]
6401fb9a:	mov    edi,0x7efefeff
6401fb9f:	mov    eax,ecx
6401fba1:	mov    esi,edi
6401fba3:	xor    ecx,ebx
6401fba5:	add    esi,eax
6401fba7:	add    edi,ecx
6401fba9:	xor    ecx,0xffffffff
6401fbac:	xor    eax,0xffffffff
6401fbaf:	xor    ecx,edi
6401fbb1:	xor    eax,esi
6401fbb3:	add    edx,0x4
6401fbb6:	and    ecx,0x81010100
6401fbbc:	jne    0x6401fbda
6401fbbe:	and    eax,0x81010100
6401fbc3:	je     0x6401fb98
6401fbc5:	and    eax,0x1010100
6401fbca:	jne    0x6401fbd4
6401fbcc:	and    esi,0x80000000
6401fbd2:	jne    0x6401fb98
6401fbd4:	pop    esi
6401fbd5:	pop    edi
6401fbd6:	pop    ebx
6401fbd7:	xor    eax,eax
6401fbd9:	ret    
6401fbda:	mov    eax,DWORD PTR [edx-0x4]
6401fbdd:	cmp    al,bl
6401fbdf:	je     0x6401fc17
6401fbe1:	test   al,al
6401fbe3:	je     0x6401fbd4
6401fbe5:	cmp    ah,bl
6401fbe7:	je     0x6401fc10
6401fbe9:	test   ah,ah
6401fbeb:	je     0x6401fbd4
6401fbed:	shr    eax,0x10
6401fbf0:	cmp    al,bl
6401fbf2:	je     0x6401fc09
6401fbf4:	test   al,al
6401fbf6:	je     0x6401fbd4
6401fbf8:	cmp    ah,bl
6401fbfa:	je     0x6401fc02
6401fbfc:	test   ah,ah
6401fbfe:	je     0x6401fbd4
6401fc00:	jmp    0x6401fb98
6401fc02:	pop    esi
6401fc03:	pop    edi
6401fc04:	lea    eax,[edx-0x1]
6401fc07:	pop    ebx
6401fc08:	ret    
6401fc09:	lea    eax,[edx-0x2]
6401fc0c:	pop    esi
6401fc0d:	pop    edi
6401fc0e:	pop    ebx
6401fc0f:	ret    
6401fc10:	lea    eax,[edx-0x3]
6401fc13:	pop    esi
6401fc14:	pop    edi
6401fc15:	pop    ebx
6401fc16:	ret    
6401fc17:	lea    eax,[edx-0x4]
6401fc1a:	pop    esi
6401fc1b:	pop    edi
6401fc1c:	pop    ebx
6401fc1d:	ret    
6401fc1e:	int3   
6401fc1f:	int3   
6401fc20:	push   ebp
6401fc21:	mov    ebp,esp
6401fc23:	push   0xfffffffe
6401fc25:	push   0x6402c4e0
6401fc2a:	push   0x64015280
6401fc2f:	mov    eax,fs:0x0
6401fc35:	push   eax
6401fc36:	sub    esp,0x18
6401fc39:	mov    eax,ds:0x6402f09c
6401fc3e:	xor    DWORD PTR [ebp-0x8],eax
6401fc41:	xor    eax,ebp
6401fc43:	mov    DWORD PTR [ebp-0x1c],eax
6401fc46:	push   ebx
6401fc47:	push   esi
6401fc48:	push   edi
6401fc49:	push   eax
6401fc4a:	lea    eax,[ebp-0x10]
6401fc4d:	mov    fs:0x0,eax
6401fc53:	mov    DWORD PTR [ebp-0x18],esp
6401fc56:	mov    esi,DWORD PTR [ebp+0x8]
6401fc59:	test   esi,esi
6401fc5b:	je     0x6401fcb2
6401fc5d:	push   esi
6401fc5e:	call   DWORD PTR ds:0x64026058
6401fc64:	mov    edi,eax
6401fc66:	add    edi,0x1
6401fc69:	mov    DWORD PTR [ebp-0x20],edi
6401fc6c:	push   0x0
6401fc6e:	push   0x0
6401fc70:	push   edi
6401fc71:	push   esi
6401fc72:	push   0x0
6401fc74:	push   0x0
6401fc76:	call   DWORD PTR ds:0x64026024
6401fc7c:	mov    esi,eax
6401fc7e:	mov    DWORD PTR [ebp-0x28],esi
6401fc81:	test   esi,esi
6401fc83:	jne    0x6401fcb9
6401fc85:	mov    esi,DWORD PTR ds:0x64026044
6401fc8b:	call   esi
6401fc8d:	test   eax,eax
6401fc8f:	jg     0x6401fca0
6401fc91:	call   esi
6401fc93:	push   eax
6401fc94:	call   0x6401fdb0
6401fc99:	xor    eax,eax
6401fc9b:	jmp    0x6401fd80
6401fca0:	call   esi
6401fca2:	and    eax,0xffff
6401fca7:	or     eax,0x80070000
6401fcac:	push   eax
6401fcad:	call   0x6401fdb0
6401fcb2:	xor    eax,eax
6401fcb4:	jmp    0x6401fd80
6401fcb9:	mov    DWORD PTR [ebp-0x4],0x0
6401fcc0:	lea    eax,[esi+esi*1]
6401fcc3:	cmp    esi,0x1000
6401fcc9:	jge    0x6401fce3
6401fccb:	call   0x640143e0
6401fcd0:	mov    DWORD PTR [ebp-0x18],esp
6401fcd3:	mov    eax,esp
6401fcd5:	mov    ebx,eax
6401fcd7:	mov    DWORD PTR [ebp-0x24],ebx
6401fcda:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fce1:	jmp    0x6401fd15
6401fce3:	push   eax
6401fce4:	call   0x64014bd3
6401fce9:	add    esp,0x4
6401fcec:	mov    ebx,eax
6401fcee:	mov    DWORD PTR [ebp-0x24],ebx
6401fcf1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fcf8:	jmp    0x6401fd15
6401fcfa:	mov    eax,0x1
6401fcff:	ret    
6401fd00:	mov    esp,DWORD PTR [ebp-0x18]
6401fd03:	xor    ebx,ebx
6401fd05:	mov    DWORD PTR [ebp-0x24],ebx
6401fd08:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401fd0f:	mov    edi,DWORD PTR [ebp-0x20]
6401fd12:	mov    esi,DWORD PTR [ebp-0x28]
6401fd15:	test   ebx,ebx
6401fd17:	jne    0x6401fd27
6401fd19:	push   0x8007000e
6401fd1e:	call   0x6401fdb0
6401fd23:	xor    eax,eax
6401fd25:	jmp    0x6401fd80
6401fd27:	push   esi
6401fd28:	push   ebx
6401fd29:	push   edi
6401fd2a:	mov    ecx,DWORD PTR [ebp+0x8]
6401fd2d:	push   ecx
6401fd2e:	push   0x0
6401fd30:	push   0x0
6401fd32:	call   DWORD PTR ds:0x64026024
6401fd38:	test   eax,eax
6401fd3a:	jne    0x6401fd56
6401fd3c:	cmp    esi,0x1000
6401fd42:	jl     0x6401fc85
6401fd48:	push   ebx
6401fd49:	call   0x64014af6
6401fd4e:	add    esp,0x4
6401fd51:	jmp    0x6401fc85
6401fd56:	push   ebx
6401fd57:	call   DWORD PTR ds:0x640261a0
6401fd5d:	mov    edi,eax
6401fd5f:	cmp    esi,0x1000
6401fd65:	jl     0x6401fd70
6401fd67:	push   ebx
6401fd68:	call   0x64014af6
6401fd6d:	add    esp,0x4
6401fd70:	test   edi,edi
6401fd72:	jne    0x6401fd7e
6401fd74:	push   0x8007000e
6401fd79:	call   0x6401fdb0
6401fd7e:	mov    eax,edi
6401fd80:	lea    esp,[ebp-0x38]
6401fd83:	mov    ecx,DWORD PTR [ebp-0x10]
6401fd86:	mov    DWORD PTR fs:0x0,ecx
6401fd8d:	pop    ecx
6401fd8e:	pop    edi
6401fd8f:	pop    esi
6401fd90:	pop    ebx
6401fd91:	mov    ecx,DWORD PTR [ebp-0x1c]
6401fd94:	xor    ecx,ebp
6401fd96:	call   0x64013c5c
6401fd9b:	mov    esp,ebp
6401fd9d:	pop    ebp
6401fd9e:	ret    0x4
6401fda1:	int3   
6401fda2:	int3   
6401fda3:	int3   
6401fda4:	int3   
6401fda5:	int3   
6401fda6:	int3   
6401fda7:	int3   
6401fda8:	int3   
6401fda9:	int3   
6401fdaa:	int3   
6401fdab:	int3   
6401fdac:	int3   
6401fdad:	int3   
6401fdae:	int3   
6401fdaf:	int3   
6401fdb0:	mov    eax,DWORD PTR [esp+0x4]
6401fdb4:	push   0x0
6401fdb6:	push   eax
6401fdb7:	call   DWORD PTR ds:0x64030040
6401fdbd:	ret    0x4
6401fdc0:	push   esi
6401fdc1:	mov    esi,ecx
6401fdc3:	mov    eax,DWORD PTR [esi+0x8]
6401fdc6:	test   eax,eax
6401fdc8:	mov    DWORD PTR [esi],0x640285f0
6401fdce:	je     0x6401fdd8
6401fdd0:	mov    ecx,DWORD PTR [eax]
6401fdd2:	mov    edx,DWORD PTR [ecx+0x8]
6401fdd5:	push   eax
6401fdd6:	call   edx
6401fdd8:	cmp    DWORD PTR [esi+0xc],0x0
6401fddc:	je     0x6401fdf5
6401fdde:	call   DWORD PTR ds:0x64026108
6401fde4:	test   eax,eax
6401fde6:	je     0x6401fdf5
6401fde8:	mov    ecx,DWORD PTR [esi+0xc]
6401fdeb:	push   ecx
6401fdec:	push   0x0
6401fdee:	push   eax
6401fdef:	call   DWORD PTR ds:0x640260fc
6401fdf5:	pop    esi
6401fdf6:	ret    
6401fdf7:	int3   
6401fdf8:	int3   
6401fdf9:	int3   
6401fdfa:	int3   
6401fdfb:	int3   
6401fdfc:	int3   
6401fdfd:	int3   
6401fdfe:	int3   
6401fdff:	int3   
6401fe00:	sub    esp,0x10
6401fe03:	mov    eax,DWORD PTR [esp+0x14]
6401fe07:	mov    ecx,DWORD PTR [esp+0x18]
6401fe0b:	push   0x6402c4fc
6401fe10:	lea    edx,[esp+0x4]
6401fe14:	push   edx
6401fe15:	mov    DWORD PTR [esp+0x8],0x640285f0
6401fe1d:	mov    DWORD PTR [esp+0xc],eax
6401fe21:	mov    DWORD PTR [esp+0x10],ecx
6401fe25:	mov    DWORD PTR [esp+0x14],0x0
6401fe2d:	call   0x6401384b
6401fe32:	int3   
6401fe33:	int3   
6401fe34:	int3   
6401fe35:	int3   
6401fe36:	int3   
6401fe37:	int3   
6401fe38:	int3   
6401fe39:	int3   
6401fe3a:	int3   
6401fe3b:	int3   
6401fe3c:	int3   
6401fe3d:	int3   
6401fe3e:	int3   
6401fe3f:	int3   
6401fe40:	mov    eax,DWORD PTR [esp+0x4]
6401fe44:	push   esi
6401fe45:	mov    esi,ecx
6401fe47:	mov    DWORD PTR [esi],0x640285f0
6401fe4d:	mov    ecx,DWORD PTR [eax+0x4]
6401fe50:	mov    DWORD PTR [esi+0x4],ecx
6401fe53:	mov    edx,DWORD PTR [eax+0x8]
6401fe56:	mov    eax,edx
6401fe58:	test   eax,eax
6401fe5a:	mov    DWORD PTR [esi+0x8],edx
6401fe5d:	mov    DWORD PTR [esi+0xc],0x0
6401fe64:	je     0x6401fe6e
6401fe66:	mov    ecx,DWORD PTR [eax]
6401fe68:	mov    edx,DWORD PTR [ecx+0x4]
6401fe6b:	push   eax
6401fe6c:	call   edx
6401fe6e:	mov    eax,esi
6401fe70:	pop    esi
6401fe71:	ret    0x4
6401fe74:	int3   
6401fe75:	int3   
6401fe76:	int3   
6401fe77:	int3   
6401fe78:	int3   
6401fe79:	int3   
6401fe7a:	int3   
6401fe7b:	int3   
6401fe7c:	int3   
6401fe7d:	int3   
6401fe7e:	int3   
6401fe7f:	int3   
6401fe80:	push   esi
6401fe81:	mov    esi,ecx
6401fe83:	mov    eax,DWORD PTR [esi+0x8]
6401fe86:	test   eax,eax
6401fe88:	mov    DWORD PTR [esi],0x640285f0
6401fe8e:	je     0x6401fe98
6401fe90:	mov    ecx,DWORD PTR [eax]
6401fe92:	mov    edx,DWORD PTR [ecx+0x8]
6401fe95:	push   eax
6401fe96:	call   edx
6401fe98:	cmp    DWORD PTR [esi+0xc],0x0
6401fe9c:	je     0x6401feb5
6401fe9e:	call   DWORD PTR ds:0x64026108
6401fea4:	test   eax,eax
6401fea6:	je     0x6401feb5
6401fea8:	mov    ecx,DWORD PTR [esi+0xc]
6401feab:	push   ecx
6401feac:	push   0x0
6401feae:	push   eax
6401feaf:	call   DWORD PTR ds:0x640260fc
6401feb5:	test   BYTE PTR [esp+0x8],0x1
6401feba:	je     0x6401fec5
6401febc:	push   esi
6401febd:	call   0x64013402
6401fec2:	add    esp,0x4
6401fec5:	mov    eax,esi
6401fec7:	pop    esi
6401fec8:	ret    0x4
6401fecb:	int3   
6401fecc:	jmp    DWORD PTR ds:0x6402611c
6401fed2:	push   ebp
6401fed3:	mov    ebp,esp
6401fed5:	sub    esp,0xc
6401fed8:	mov    eax,ds:0x6402f09c
6401fedd:	xor    eax,ebp
6401fedf:	mov    DWORD PTR [ebp-0x4],eax
6401fee2:	push   ebx
6401fee3:	push   esi
6401fee4:	push   edi
6401fee5:	mov    edi,DWORD PTR [ebp+0x8]
6401fee8:	xor    ebx,ebx
6401feea:	cmp    edi,ebx
6401feec:	jne    0x6401ff0a
6401feee:	call   0x64015a20
6401fef3:	push   0x16
6401fef5:	pop    esi
6401fef6:	push   ebx
6401fef7:	push   ebx
6401fef8:	push   ebx
6401fef9:	push   ebx
6401fefa:	push   ebx
6401fefb:	mov    DWORD PTR [eax],esi
6401fefd:	call   0x64013794
6401ff02:	add    esp,0x14
6401ff05:	jmp    0x6402003f
6401ff0a:	push   DWORD PTR [ebp+0xc]
6401ff0d:	push   edi
6401ff0e:	call   0x6401f99c
6401ff13:	cmp    eax,DWORD PTR [ebp+0xc]
6401ff16:	pop    ecx
6401ff17:	pop    ecx
6401ff18:	jb     0x6401ff1e
6401ff1a:	mov    BYTE PTR [edi],bl
6401ff1c:	jmp    0x6401feee
6401ff1e:	mov    edx,DWORD PTR [ebp+0x10]
6401ff21:	mov    eax,DWORD PTR [edx]
6401ff23:	mov    ecx,DWORD PTR [eax+0x14]
6401ff26:	cmp    ecx,ebx
6401ff28:	jne    0x6401ff4a
6401ff2a:	cmp    BYTE PTR [edi],bl
6401ff2c:	mov    ecx,edi
6401ff2e:	je     0x6401ff43
6401ff30:	mov    al,BYTE PTR [ecx]
6401ff32:	cmp    al,0x41
6401ff34:	jl     0x6401ff3e
6401ff36:	cmp    al,0x5a
6401ff38:	jg     0x6401ff3e
6401ff3a:	add    al,0x20
6401ff3c:	mov    BYTE PTR [ecx],al
6401ff3e:	inc    ecx
6401ff3f:	cmp    BYTE PTR [ecx],bl
6401ff41:	jne    0x6401ff30
6401ff43:	xor    eax,eax
6401ff45:	jmp    0x64020041
6401ff4a:	push   0x1
6401ff4c:	push   DWORD PTR [eax+0x4]
6401ff4f:	mov    esi,0x100
6401ff54:	push   ebx
6401ff55:	push   ebx
6401ff56:	push   0xffffffff
6401ff58:	push   edi
6401ff59:	push   esi
6401ff5a:	push   ecx
6401ff5b:	push   edx
6401ff5c:	call   0x6401b01d
6401ff61:	mov    ecx,eax
6401ff63:	add    esp,0x24
6401ff66:	cmp    ecx,ebx
6401ff68:	mov    DWORD PTR [ebp-0xc],ecx
6401ff6b:	jne    0x6401ff84
6401ff6d:	call   0x64015a20
6401ff72:	mov    DWORD PTR [eax],0x2a
6401ff78:	call   0x64015a20
6401ff7d:	mov    eax,DWORD PTR [eax]
6401ff7f:	jmp    0x64020041
6401ff84:	cmp    DWORD PTR [ebp+0xc],ecx
6401ff87:	jae    0x6401ff97
6401ff89:	mov    BYTE PTR [edi],bl
6401ff8b:	call   0x64015a20
6401ff90:	push   0x22
6401ff92:	jmp    0x6401fef5
6401ff97:	cmp    ecx,ebx
6401ff99:	jle    0x6401ffe0
6401ff9b:	push   0xffffffe0
6401ff9d:	xor    edx,edx
6401ff9f:	pop    eax
6401ffa0:	div    ecx
6401ffa2:	cmp    eax,0x1
6401ffa5:	jb     0x6401ffe0
6401ffa7:	lea    eax,[ecx+0x8]
6401ffaa:	cmp    eax,0x400
6401ffaf:	ja     0x6401ffc4
6401ffb1:	call   0x640143e0
6401ffb6:	mov    eax,esp
6401ffb8:	cmp    eax,ebx
6401ffba:	je     0x6401ffd8
6401ffbc:	mov    DWORD PTR [eax],0xcccc
6401ffc2:	jmp    0x6401ffd5
6401ffc4:	push   eax
6401ffc5:	call   0x64014bd3
6401ffca:	cmp    eax,ebx
6401ffcc:	pop    ecx
6401ffcd:	je     0x6401ffd8
6401ffcf:	mov    DWORD PTR [eax],0xdddd
6401ffd5:	add    eax,0x8
6401ffd8:	mov    ecx,DWORD PTR [ebp-0xc]
6401ffdb:	mov    DWORD PTR [ebp-0x8],eax
6401ffde:	jmp    0x6401ffe3
6401ffe0:	mov    DWORD PTR [ebp-0x8],ebx
6401ffe3:	cmp    DWORD PTR [ebp-0x8],ebx
6401ffe6:	jne    0x6401fff5
6401ffe8:	call   0x64015a20
6401ffed:	mov    DWORD PTR [eax],0xc
6401fff3:	jmp    0x6401ff78
6401fff5:	mov    edx,DWORD PTR [ebp+0x10]
6401fff8:	mov    eax,DWORD PTR [edx]
6401fffa:	push   0x1
6401fffc:	push   DWORD PTR [eax+0x4]
6401ffff:	push   ecx
64020000:	push   DWORD PTR [ebp-0x8]
64020003:	push   0xffffffff
64020005:	push   edi
64020006:	push   esi
64020007:	push   DWORD PTR [eax+0x14]
6402000a:	push   edx
6402000b:	call   0x6401b01d
64020010:	add    esp,0x24
64020013:	test   eax,eax
64020015:	je     0x6402002a
64020017:	push   DWORD PTR [ebp-0x8]
6402001a:	push   DWORD PTR [ebp+0xc]
6402001d:	push   edi
6402001e:	call   0x64015618
64020023:	add    esp,0xc
64020026:	mov    esi,eax
64020028:	jmp    0x64020036
6402002a:	call   0x64015a20
6402002f:	push   0x2a
64020031:	pop    ecx
64020032:	mov    DWORD PTR [eax],ecx
64020034:	mov    esi,ecx
64020036:	push   DWORD PTR [ebp-0x8]
64020039:	call   0x6401416c
6402003e:	pop    ecx
6402003f:	mov    eax,esi
64020041:	lea    esp,[ebp-0x18]
64020044:	pop    edi
64020045:	pop    esi
64020046:	pop    ebx
64020047:	mov    ecx,DWORD PTR [ebp-0x4]
6402004a:	xor    ecx,ebp
6402004c:	call   0x64013c5c
64020051:	leave  
64020052:	ret    
64020053:	push   ebp
64020054:	mov    ebp,esp
64020056:	sub    esp,0x10
64020059:	push   DWORD PTR [ebp+0x10]
6402005c:	lea    ecx,[ebp-0x10]
6402005f:	call   0x64013dff
64020064:	lea    eax,[ebp-0x10]
64020067:	push   eax
64020068:	push   DWORD PTR [ebp+0xc]
6402006b:	push   DWORD PTR [ebp+0x8]
6402006e:	call   0x6401fed2
64020073:	add    esp,0xc
64020076:	cmp    BYTE PTR [ebp-0x4],0x0
6402007a:	je     0x64020083
6402007c:	mov    ecx,DWORD PTR [ebp-0x8]
6402007f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64020083:	leave  
64020084:	ret    
64020085:	push   ebx
64020086:	xor    ebx,ebx
64020088:	cmp    DWORD PTR ds:0x64030934,ebx
6402008e:	jne    0x640200d2
64020090:	mov    eax,DWORD PTR [esp+0x8]
64020094:	cmp    eax,ebx
64020096:	jne    0x640200b4
64020098:	call   0x64015a20
6402009d:	push   ebx
6402009e:	push   ebx
6402009f:	push   ebx
640200a0:	push   ebx
640200a1:	push   ebx
640200a2:	mov    DWORD PTR [eax],0x16
640200a8:	call   0x64013794
640200ad:	add    esp,0x14
640200b0:	xor    eax,eax
640200b2:	pop    ebx
640200b3:	ret    
640200b4:	cmp    BYTE PTR [eax],bl
640200b6:	mov    edx,eax
640200b8:	je     0x640200e5
640200ba:	mov    cl,BYTE PTR [edx]
640200bc:	cmp    cl,0x41
640200bf:	jl     0x640200cb
640200c1:	cmp    cl,0x5a
640200c4:	jg     0x640200cb
640200c6:	add    cl,0x20
640200c9:	mov    BYTE PTR [edx],cl
640200cb:	inc    edx
640200cc:	cmp    BYTE PTR [edx],bl
640200ce:	jne    0x640200ba
640200d0:	pop    ebx
640200d1:	ret    
640200d2:	push   ebx
640200d3:	push   0xffffffff
640200d5:	push   DWORD PTR [esp+0x10]
640200d9:	call   0x64020053
640200de:	mov    eax,DWORD PTR [esp+0x14]
640200e2:	add    esp,0xc
640200e5:	pop    ebx
640200e6:	ret    
640200e7:	ret    
640200e8:	mov    eax,0x64020bf3
640200ed:	mov    ds:0x6402fb4c,eax
640200f2:	mov    DWORD PTR ds:0x6402fb50,0x640202ef
640200fc:	mov    DWORD PTR ds:0x6402fb54,0x640202ad
64020106:	mov    DWORD PTR ds:0x6402fb58,0x640202e1
64020110:	mov    DWORD PTR ds:0x6402fb5c,0x64020257
6402011a:	mov    ds:0x6402fb60,eax
6402011f:	mov    DWORD PTR ds:0x6402fb64,0x64020b6d
64020129:	mov    DWORD PTR ds:0x6402fb68,0x6402026d
64020133:	mov    DWORD PTR ds:0x6402fb6c,0x640201d7
6402013d:	mov    DWORD PTR ds:0x6402fb70,0x64020166
64020147:	ret    
64020148:	call   0x640200e8
6402014d:	call   0x64020c79
64020152:	cmp    DWORD PTR [esp+0x4],0x0
64020157:	mov    ds:0x64031034,eax
6402015c:	je     0x64020163
6402015e:	call   0x64020c14
64020163:	fnclex 
64020165:	ret    
64020166:	push   ebp
64020167:	mov    ebp,esp
64020169:	sub    esp,0x10
6402016c:	push   esi
6402016d:	push   DWORD PTR [ebp+0xc]
64020170:	lea    ecx,[ebp-0x10]
64020173:	call   0x64013dff
64020178:	mov    esi,DWORD PTR [ebp+0x8]
6402017b:	movsx  eax,BYTE PTR [esi]
6402017e:	push   eax
6402017f:	call   0x64014acf
64020184:	cmp    eax,0x65
64020187:	jmp    0x64020195
64020189:	inc    esi
6402018a:	movzx  eax,BYTE PTR [esi]
6402018d:	push   eax
6402018e:	call   0x64014898
64020193:	test   eax,eax
64020195:	pop    ecx
64020196:	jne    0x64020189
64020198:	movsx  eax,BYTE PTR [esi]
6402019b:	push   eax
6402019c:	call   0x64014acf
640201a1:	cmp    eax,0x78
640201a4:	pop    ecx
640201a5:	jne    0x640201a9
640201a7:	inc    esi
640201a8:	inc    esi
640201a9:	mov    ecx,DWORD PTR [ebp-0x10]
640201ac:	mov    ecx,DWORD PTR [ecx+0xbc]
640201b2:	mov    ecx,DWORD PTR [ecx]
640201b4:	mov    al,BYTE PTR [esi]
640201b6:	mov    cl,BYTE PTR [ecx]
640201b8:	mov    BYTE PTR [esi],cl
640201ba:	inc    esi
640201bb:	mov    cl,BYTE PTR [esi]
640201bd:	mov    BYTE PTR [esi],al
640201bf:	mov    al,cl
640201c1:	mov    cl,BYTE PTR [esi]
640201c3:	inc    esi
640201c4:	test   cl,cl
640201c6:	jne    0x640201bb
640201c8:	cmp    BYTE PTR [ebp-0x4],cl
640201cb:	pop    esi
640201cc:	je     0x640201d5
640201ce:	mov    eax,DWORD PTR [ebp-0x8]
640201d1:	and    DWORD PTR [eax+0x70],0xfffffffd
640201d5:	leave  
640201d6:	ret    
640201d7:	push   ebp
640201d8:	mov    ebp,esp
640201da:	sub    esp,0x10
640201dd:	push   esi
640201de:	push   DWORD PTR [ebp+0xc]
640201e1:	lea    ecx,[ebp-0x10]
640201e4:	call   0x64013dff
640201e9:	mov    eax,DWORD PTR [ebp+0x8]
640201ec:	mov    cl,BYTE PTR [eax]
640201ee:	test   cl,cl
640201f0:	mov    esi,DWORD PTR [ebp-0x10]
640201f3:	je     0x6402020a
640201f5:	mov    edx,DWORD PTR [esi+0xbc]
640201fb:	mov    edx,DWORD PTR [edx]
640201fd:	mov    dl,BYTE PTR [edx]
640201ff:	cmp    cl,dl
64020201:	je     0x6402020a
64020203:	inc    eax
64020204:	mov    cl,BYTE PTR [eax]
64020206:	test   cl,cl
64020208:	jne    0x640201ff
6402020a:	mov    cl,BYTE PTR [eax]
6402020c:	inc    eax
6402020d:	test   cl,cl
6402020f:	je     0x64020247
64020211:	jmp    0x6402021e
64020213:	cmp    cl,0x65
64020216:	je     0x64020224
64020218:	cmp    cl,0x45
6402021b:	je     0x64020224
6402021d:	inc    eax
6402021e:	mov    cl,BYTE PTR [eax]
64020220:	test   cl,cl
64020222:	jne    0x64020213
64020224:	mov    edx,eax
64020226:	dec    eax
64020227:	cmp    BYTE PTR [eax],0x30
6402022a:	je     0x64020226
6402022c:	mov    ecx,DWORD PTR [esi+0xbc]
64020232:	mov    ecx,DWORD PTR [ecx]
64020234:	push   ebx
64020235:	mov    bl,BYTE PTR [eax]
64020237:	cmp    bl,BYTE PTR [ecx]
64020239:	pop    ebx
6402023a:	jne    0x6402023d
6402023c:	dec    eax
6402023d:	mov    cl,BYTE PTR [edx]
6402023f:	inc    eax
64020240:	inc    edx
64020241:	test   cl,cl
64020243:	mov    BYTE PTR [eax],cl
64020245:	jne    0x6402023d
64020247:	cmp    BYTE PTR [ebp-0x4],0x0
6402024b:	pop    esi
6402024c:	je     0x64020255
6402024e:	mov    eax,DWORD PTR [ebp-0x8]
64020251:	and    DWORD PTR [eax+0x70],0xfffffffd
64020255:	leave  
64020256:	ret    
64020257:	fldz   
64020259:	mov    eax,DWORD PTR [esp+0x4]
6402025d:	fcomp  QWORD PTR [eax]
6402025f:	fnstsw ax
64020261:	test   ah,0x41
64020264:	jp     0x6402026a
64020266:	xor    eax,eax
64020268:	inc    eax
64020269:	ret    
6402026a:	xor    eax,eax
6402026c:	ret    
6402026d:	push   ebp
6402026e:	mov    ebp,esp
64020270:	push   ecx
64020271:	push   ecx
64020272:	cmp    DWORD PTR [ebp+0x8],0x0
64020276:	push   DWORD PTR [ebp+0x14]
64020279:	push   DWORD PTR [ebp+0x10]
6402027c:	je     0x64020297
6402027e:	lea    eax,[ebp-0x8]
64020281:	push   eax
64020282:	call   0x64020cdd
64020287:	mov    ecx,DWORD PTR [ebp-0x8]
6402028a:	mov    eax,DWORD PTR [ebp+0xc]
6402028d:	mov    DWORD PTR [eax],ecx
6402028f:	mov    ecx,DWORD PTR [ebp-0x4]
64020292:	mov    DWORD PTR [eax+0x4],ecx
64020295:	jmp    0x640202a8
64020297:	lea    eax,[ebp+0x8]
6402029a:	push   eax
6402029b:	call   0x64020d83
640202a0:	mov    eax,DWORD PTR [ebp+0xc]
640202a3:	mov    ecx,DWORD PTR [ebp+0x8]
640202a6:	mov    DWORD PTR [eax],ecx
640202a8:	add    esp,0xc
640202ab:	leave  
640202ac:	ret    
640202ad:	push   0x0
640202af:	push   DWORD PTR [esp+0x10]
640202b3:	push   DWORD PTR [esp+0x10]
640202b7:	push   DWORD PTR [esp+0x10]
640202bb:	call   0x6402026d
640202c0:	add    esp,0x10
640202c3:	ret    
640202c4:	test   edi,edi
640202c6:	push   esi
640202c7:	mov    esi,eax
640202c9:	je     0x640202df
640202cb:	push   esi
640202cc:	call   0x64015420
640202d1:	inc    eax
640202d2:	push   eax
640202d3:	push   esi
640202d4:	add    esi,edi
640202d6:	push   esi
640202d7:	call   0x64014ca0
640202dc:	add    esp,0x10
640202df:	pop    esi
640202e0:	ret    
640202e1:	push   0x0
640202e3:	push   DWORD PTR [esp+0x8]
640202e7:	call   0x64020166
640202ec:	pop    ecx
640202ed:	pop    ecx
640202ee:	ret    
640202ef:	push   0x0
640202f1:	push   DWORD PTR [esp+0x8]
640202f5:	call   0x640201d7
640202fa:	pop    ecx
640202fb:	pop    ecx
640202fc:	ret    
640202fd:	push   ebp
640202fe:	mov    ebp,esp
64020300:	sub    esp,0x10
64020303:	push   ebx
64020304:	push   esi
64020305:	push   edi
64020306:	push   DWORD PTR [ebp+0x1c]
64020309:	lea    ecx,[ebp-0x10]
6402030c:	mov    ebx,eax
6402030e:	call   0x64013dff
64020313:	xor    esi,esi
64020315:	cmp    ebx,esi
64020317:	jne    0x64020344
64020319:	call   0x64015a20
6402031e:	push   0x16
64020320:	pop    edi
64020321:	push   esi
64020322:	push   esi
64020323:	push   esi
64020324:	push   esi
64020325:	push   esi
64020326:	mov    DWORD PTR [eax],edi
64020328:	call   0x64013794
6402032d:	add    esp,0x14
64020330:	cmp    BYTE PTR [ebp-0x4],0x0
64020334:	je     0x6402033d
64020336:	mov    eax,DWORD PTR [ebp-0x8]
64020339:	and    DWORD PTR [eax+0x70],0xfffffffd
6402033d:	mov    eax,edi
6402033f:	jmp    0x64020465
64020344:	cmp    DWORD PTR [ebp+0x8],esi
64020347:	jbe    0x64020319
64020349:	cmp    DWORD PTR [ebp+0xc],esi
6402034c:	jle    0x64020353
6402034e:	mov    eax,DWORD PTR [ebp+0xc]
64020351:	jmp    0x64020355
64020353:	xor    eax,eax
64020355:	add    eax,0x9
64020358:	cmp    DWORD PTR [ebp+0x8],eax
6402035b:	ja     0x64020366
6402035d:	call   0x64015a20
64020362:	push   0x22
64020364:	jmp    0x64020320
64020366:	cmp    BYTE PTR [ebp+0x18],0x0
6402036a:	je     0x6402038a
6402036c:	mov    edx,DWORD PTR [ebp+0x14]
6402036f:	xor    eax,eax
64020371:	cmp    DWORD PTR [ebp+0xc],esi
64020374:	setg   al
64020377:	xor    ecx,ecx
64020379:	cmp    DWORD PTR [edx],0x2d
6402037c:	sete   cl
6402037f:	mov    edi,eax
64020381:	add    ecx,ebx
64020383:	mov    eax,ecx
64020385:	call   0x640202c4
6402038a:	mov    edi,DWORD PTR [ebp+0x14]
6402038d:	cmp    DWORD PTR [edi],0x2d
64020390:	mov    esi,ebx
64020392:	jne    0x6402039a
64020394:	mov    BYTE PTR [ebx],0x2d
64020397:	lea    esi,[ebx+0x1]
6402039a:	cmp    DWORD PTR [ebp+0xc],0x0
6402039e:	jle    0x640203b8
640203a0:	lea    eax,[esi+0x1]
640203a3:	mov    cl,BYTE PTR [eax]
640203a5:	mov    BYTE PTR [esi],cl
640203a7:	mov    esi,eax
640203a9:	mov    eax,DWORD PTR [ebp-0x10]
640203ac:	mov    eax,DWORD PTR [eax+0xbc]
640203b2:	mov    eax,DWORD PTR [eax]
640203b4:	mov    al,BYTE PTR [eax]
640203b6:	mov    BYTE PTR [esi],al
640203b8:	xor    eax,eax
640203ba:	cmp    BYTE PTR [ebp+0x18],al
640203bd:	sete   al
640203c0:	add    eax,DWORD PTR [ebp+0xc]
640203c3:	add    esi,eax
640203c5:	cmp    DWORD PTR [ebp+0x8],0xffffffff
640203c9:	jne    0x640203d0
640203cb:	or     ebx,0xffffffff
640203ce:	jmp    0x640203d5
640203d0:	sub    ebx,esi
640203d2:	add    ebx,DWORD PTR [ebp+0x8]
640203d5:	push   0x64028600
640203da:	push   ebx
640203db:	push   esi
640203dc:	call   0x64015618
640203e1:	add    esp,0xc
640203e4:	xor    ebx,ebx
640203e6:	test   eax,eax
640203e8:	je     0x640203f7
640203ea:	push   ebx
640203eb:	push   ebx
640203ec:	push   ebx
640203ed:	push   ebx
640203ee:	push   ebx
640203ef:	call   0x64013698
640203f4:	add    esp,0x14
640203f7:	cmp    DWORD PTR [ebp+0x10],ebx
640203fa:	lea    ecx,[esi+0x2]
640203fd:	je     0x64020402
640203ff:	mov    BYTE PTR [esi],0x45
64020402:	mov    eax,DWORD PTR [edi+0xc]
64020405:	inc    esi
64020406:	cmp    BYTE PTR [eax],0x30
64020409:	je     0x64020439
6402040b:	mov    eax,DWORD PTR [edi+0x4]
6402040e:	dec    eax
6402040f:	jns    0x64020416
64020411:	neg    eax
64020413:	mov    BYTE PTR [esi],0x2d
64020416:	inc    esi
64020417:	cmp    eax,0x64
6402041a:	jl     0x64020426
6402041c:	cdq    
6402041d:	push   0x64
6402041f:	pop    edi
64020420:	idiv   edi
64020422:	add    BYTE PTR [esi],al
64020424:	mov    eax,edx
64020426:	inc    esi
64020427:	cmp    eax,0xa
6402042a:	jl     0x64020436
6402042c:	cdq    
6402042d:	push   0xa
6402042f:	pop    edi
64020430:	idiv   edi
64020432:	add    BYTE PTR [esi],al
64020434:	mov    eax,edx
64020436:	add    BYTE PTR [esi+0x1],al
64020439:	test   BYTE PTR ds:0x64031038,0x1
64020440:	je     0x64020456
64020442:	cmp    BYTE PTR [ecx],0x30
64020445:	jne    0x64020456
64020447:	push   0x3
64020449:	lea    eax,[ecx+0x1]
6402044c:	push   eax
6402044d:	push   ecx
6402044e:	call   0x64014ca0
64020453:	add    esp,0xc
64020456:	cmp    BYTE PTR [ebp-0x4],0x0
6402045a:	je     0x64020463
6402045c:	mov    eax,DWORD PTR [ebp-0x8]
6402045f:	and    DWORD PTR [eax+0x70],0xfffffffd
64020463:	xor    eax,eax
64020465:	pop    edi
64020466:	pop    esi
64020467:	pop    ebx
64020468:	leave  
64020469:	ret    
6402046a:	push   ebp
6402046b:	mov    ebp,esp
6402046d:	sub    esp,0x2c
64020470:	mov    eax,ds:0x6402f09c
64020475:	xor    eax,ebp
64020477:	mov    DWORD PTR [ebp-0x4],eax
6402047a:	mov    eax,DWORD PTR [ebp+0x8]
6402047d:	push   ebx
6402047e:	push   esi
6402047f:	push   edi
64020480:	mov    edi,DWORD PTR [ebp+0xc]
64020483:	push   0x16
64020485:	pop    esi
64020486:	push   esi
64020487:	lea    ecx,[ebp-0x1c]
6402048a:	push   ecx
6402048b:	lea    ecx,[ebp-0x2c]
6402048e:	push   ecx
6402048f:	push   DWORD PTR [eax+0x4]
64020492:	push   DWORD PTR [eax]
64020494:	call   0x64020fa1
64020499:	xor    ebx,ebx
6402049b:	add    esp,0x14
6402049e:	cmp    edi,ebx
640204a0:	jne    0x640204ba
640204a2:	call   0x64015a20
640204a7:	push   ebx
640204a8:	push   ebx
640204a9:	push   ebx
640204aa:	push   ebx
640204ab:	push   ebx
640204ac:	mov    DWORD PTR [eax],esi
640204ae:	call   0x64013794
640204b3:	add    esp,0x14
640204b6:	mov    eax,esi
640204b8:	jmp    0x64020529
640204ba:	mov    eax,DWORD PTR [ebp+0x10]
640204bd:	cmp    eax,ebx
640204bf:	jbe    0x640204a2
640204c1:	cmp    eax,0xffffffff
640204c4:	mov    esi,DWORD PTR [ebp+0x14]
640204c7:	jne    0x640204ce
640204c9:	or     eax,0xffffffff
640204cc:	jmp    0x640204e2
640204ce:	xor    ecx,ecx
640204d0:	cmp    DWORD PTR [ebp-0x2c],0x2d
640204d4:	sete   cl
640204d7:	sub    eax,ecx
640204d9:	xor    ecx,ecx
640204db:	cmp    esi,ebx
640204dd:	setg   cl
640204e0:	sub    eax,ecx
640204e2:	lea    ecx,[ebp-0x2c]
640204e5:	push   ecx
640204e6:	lea    ecx,[esi+0x1]
640204e9:	push   ecx
640204ea:	push   eax
640204eb:	xor    eax,eax
640204ed:	cmp    DWORD PTR [ebp-0x2c],0x2d
640204f1:	sete   al
640204f4:	xor    ecx,ecx
640204f6:	cmp    esi,ebx
640204f8:	setg   cl
640204fb:	add    eax,edi
640204fd:	add    ecx,eax
640204ff:	push   ecx
64020500:	call   0x64020e29
64020505:	add    esp,0x10
64020508:	cmp    eax,ebx
6402050a:	je     0x64020510
6402050c:	mov    BYTE PTR [edi],bl
6402050e:	jmp    0x64020529
64020510:	push   DWORD PTR [ebp+0x1c]
64020513:	lea    eax,[ebp-0x2c]
64020516:	push   ebx
64020517:	push   eax
64020518:	push   DWORD PTR [ebp+0x18]
6402051b:	mov    eax,edi
6402051d:	push   esi
6402051e:	push   DWORD PTR [ebp+0x10]
64020521:	call   0x640202fd
64020526:	add    esp,0x18
64020529:	mov    ecx,DWORD PTR [ebp-0x4]
6402052c:	pop    edi
6402052d:	pop    esi
6402052e:	xor    ecx,ebp
64020530:	pop    ebx
64020531:	call   0x64013c5c
64020536:	leave  
64020537:	ret    
64020538:	push   ebp
64020539:	mov    ebp,esp
6402053b:	push   0x0
6402053d:	push   DWORD PTR [ebp+0x18]
64020540:	push   DWORD PTR [ebp+0x14]
64020543:	push   DWORD PTR [ebp+0x10]
64020546:	push   DWORD PTR [ebp+0xc]
64020549:	push   DWORD PTR [ebp+0x8]
6402054c:	call   0x6402046a
64020551:	add    esp,0x18
64020554:	pop    ebp
64020555:	ret    
64020556:	push   ebp
64020557:	mov    ebp,esp
64020559:	sub    esp,0x24
6402055c:	push   esi
6402055d:	push   edi
6402055e:	push   DWORD PTR [ebp+0x1c]
64020561:	lea    ecx,[ebp-0x24]
64020564:	mov    DWORD PTR [ebp-0x14],0x3ff
6402056b:	xor    edi,edi
6402056d:	mov    DWORD PTR [ebp-0x4],0x30
64020574:	call   0x64013dff
64020579:	cmp    DWORD PTR [ebp+0x14],edi
6402057c:	jge    0x64020581
6402057e:	mov    DWORD PTR [ebp+0x14],edi
64020581:	mov    esi,DWORD PTR [ebp+0xc]
64020584:	cmp    esi,edi
64020586:	jne    0x640205b3
64020588:	call   0x64015a20
6402058d:	push   0x16
6402058f:	pop    esi
64020590:	push   edi
64020591:	push   edi
64020592:	push   edi
64020593:	push   edi
64020594:	push   edi
64020595:	mov    DWORD PTR [eax],esi
64020597:	call   0x64013794
6402059c:	add    esp,0x14
6402059f:	cmp    BYTE PTR [ebp-0x18],0x0
640205a3:	je     0x640205ac
640205a5:	mov    eax,DWORD PTR [ebp-0x1c]
640205a8:	and    DWORD PTR [eax+0x70],0xfffffffd
640205ac:	mov    eax,esi
640205ae:	jmp    0x640208c3
640205b3:	cmp    DWORD PTR [ebp+0x10],edi
640205b6:	jbe    0x64020588
640205b8:	mov    eax,DWORD PTR [ebp+0x14]
640205bb:	add    eax,0xb
640205be:	cmp    DWORD PTR [ebp+0x10],eax
640205c1:	mov    BYTE PTR [esi],0x0
640205c4:	ja     0x640205cf
640205c6:	call   0x64015a20
640205cb:	push   0x22
640205cd:	jmp    0x6402058f
640205cf:	mov    edi,DWORD PTR [ebp+0x8]
640205d2:	mov    eax,DWORD PTR [edi]
640205d4:	mov    DWORD PTR [ebp-0xc],eax
640205d7:	mov    eax,DWORD PTR [edi+0x4]
640205da:	mov    ecx,eax
640205dc:	shr    ecx,0x14
640205df:	mov    edx,0x7ff
640205e4:	push   ebx
640205e5:	and    ecx,edx
640205e7:	xor    ebx,ebx
640205e9:	cmp    ecx,edx
640205eb:	jne    0x64020681
640205f1:	test   ebx,ebx
640205f3:	jne    0x64020681
640205f9:	mov    eax,DWORD PTR [ebp+0x10]
640205fc:	cmp    eax,0xffffffff
640205ff:	jne    0x64020605
64020601:	or     eax,eax
64020603:	jmp    0x64020608
64020605:	add    eax,0xfffffffe
64020608:	push   0x0
6402060a:	push   DWORD PTR [ebp+0x14]
6402060d:	lea    ebx,[esi+0x2]
64020610:	push   eax
64020611:	push   ebx
64020612:	push   edi
64020613:	call   0x64020538
64020618:	add    esp,0x14
6402061b:	test   eax,eax
6402061d:	je     0x64020638
6402061f:	cmp    BYTE PTR [ebp-0x18],0x0
64020623:	mov    BYTE PTR [esi],0x0
64020626:	je     0x640208c2
6402062c:	mov    ecx,DWORD PTR [ebp-0x1c]
6402062f:	and    DWORD PTR [ecx+0x70],0xfffffffd
64020633:	jmp    0x640208c2
64020638:	cmp    BYTE PTR [ebx],0x2d
6402063b:	jne    0x64020641
6402063d:	mov    BYTE PTR [esi],0x2d
64020640:	inc    esi
64020641:	mov    BYTE PTR [esi],0x30
64020644:	inc    esi
64020645:	cmp    DWORD PTR [ebp+0x18],0x0
64020649:	push   0x65
6402064b:	sete   al
6402064e:	dec    al
64020650:	and    al,0xe0
64020652:	add    al,0x78
64020654:	mov    BYTE PTR [esi],al
64020656:	inc    esi
64020657:	push   esi
64020658:	call   0x64020cb0
6402065d:	test   eax,eax
6402065f:	pop    ecx
64020660:	pop    ecx
64020661:	je     0x640208b3
64020667:	cmp    DWORD PTR [ebp+0x18],0x0
6402066b:	sete   cl
6402066e:	dec    cl
64020670:	and    cl,0xe0
64020673:	add    cl,0x70
64020676:	mov    BYTE PTR [eax],cl
64020678:	mov    BYTE PTR [eax+0x3],0x0
6402067c:	jmp    0x640208b3
64020681:	and    eax,0x80000000
64020686:	xor    ecx,ecx
64020688:	or     ecx,eax
6402068a:	je     0x64020690
6402068c:	mov    BYTE PTR [esi],0x2d
6402068f:	inc    esi
64020690:	mov    ebx,DWORD PTR [ebp+0x18]
64020693:	mov    BYTE PTR [esi],0x30
64020696:	inc    esi
64020697:	test   ebx,ebx
64020699:	sete   al
6402069c:	dec    al
6402069e:	and    al,0xe0
640206a0:	add    al,0x78
640206a2:	mov    BYTE PTR [esi],al
640206a4:	mov    ecx,DWORD PTR [edi+0x4]
640206a7:	inc    esi
640206a8:	neg    ebx
640206aa:	sbb    ebx,ebx
640206ac:	and    ebx,0xffffffe0
640206af:	and    ecx,0x7ff00000
640206b5:	xor    eax,eax
640206b7:	add    ebx,0x27
640206ba:	xor    edx,edx
640206bc:	or     eax,ecx
640206be:	jne    0x640206e1
640206c0:	mov    BYTE PTR [esi],0x30
640206c3:	mov    ecx,DWORD PTR [edi+0x4]
640206c6:	mov    eax,DWORD PTR [edi]
640206c8:	and    ecx,0xfffff
640206ce:	inc    esi
640206cf:	or     eax,ecx
640206d1:	jne    0x640206d8
640206d3:	mov    DWORD PTR [ebp-0x14],edx
640206d6:	jmp    0x640206e5
640206d8:	mov    DWORD PTR [ebp-0x14],0x3fe
640206df:	jmp    0x640206e5
640206e1:	mov    BYTE PTR [esi],0x31
640206e4:	inc    esi
640206e5:	mov    eax,esi
640206e7:	inc    esi
640206e8:	cmp    DWORD PTR [ebp+0x14],edx
640206eb:	mov    DWORD PTR [ebp+0xc],eax
640206ee:	jne    0x640206f4
640206f0:	mov    BYTE PTR [eax],dl
640206f2:	jmp    0x64020703
640206f4:	mov    ecx,DWORD PTR [ebp-0x24]
640206f7:	mov    ecx,DWORD PTR [ecx+0xbc]
640206fd:	mov    ecx,DWORD PTR [ecx]
640206ff:	mov    cl,BYTE PTR [ecx]
64020701:	mov    BYTE PTR [eax],cl
64020703:	mov    ecx,DWORD PTR [edi+0x4]
64020706:	mov    eax,DWORD PTR [edi]
64020708:	and    ecx,0xfffff
6402070e:	mov    DWORD PTR [ebp-0x8],ecx
64020711:	ja     0x6402071b
64020713:	cmp    eax,edx
64020715:	jbe    0x640207d0
6402071b:	mov    DWORD PTR [ebp-0xc],edx
6402071e:	mov    DWORD PTR [ebp-0x8],0xf0000
64020725:	cmp    DWORD PTR [ebp+0x14],0x0
64020729:	jle    0x64020778
6402072b:	mov    edx,DWORD PTR [edi+0x4]
6402072e:	and    edx,DWORD PTR [ebp-0x8]
64020731:	mov    eax,DWORD PTR [edi]
64020733:	movsx  ecx,WORD PTR [ebp-0x4]
64020737:	and    eax,DWORD PTR [ebp-0xc]
6402073a:	and    edx,0xfffff
64020740:	call   0x64021110
64020745:	add    ax,0x30
64020749:	movzx  eax,ax
6402074c:	cmp    ax,0x39
64020750:	jbe    0x64020754
64020752:	add    eax,ebx
64020754:	mov    ecx,DWORD PTR [ebp-0x8]
64020757:	sub    DWORD PTR [ebp-0x4],0x4
6402075b:	mov    BYTE PTR [esi],al
6402075d:	mov    eax,DWORD PTR [ebp-0xc]
64020760:	shrd   eax,ecx,0x4
64020764:	shr    ecx,0x4
64020767:	inc    esi
64020768:	dec    DWORD PTR [ebp+0x14]
6402076b:	cmp    WORD PTR [ebp-0x4],0x0
64020770:	mov    DWORD PTR [ebp-0xc],eax
64020773:	mov    DWORD PTR [ebp-0x8],ecx
64020776:	jge    0x64020725
64020778:	cmp    WORD PTR [ebp-0x4],0x0
6402077d:	jl     0x640207d0
6402077f:	mov    edx,DWORD PTR [edi+0x4]
64020782:	and    edx,DWORD PTR [ebp-0x8]
64020785:	mov    eax,DWORD PTR [edi]
64020787:	movsx  ecx,WORD PTR [ebp-0x4]
6402078b:	and    eax,DWORD PTR [ebp-0xc]
6402078e:	and    edx,0xfffff
64020794:	call   0x64021110
64020799:	cmp    ax,0x8
6402079d:	jbe    0x640207d0
6402079f:	lea    eax,[esi-0x1]
640207a2:	mov    cl,BYTE PTR [eax]
640207a4:	cmp    cl,0x66
640207a7:	je     0x640207ae
640207a9:	cmp    cl,0x46
640207ac:	jne    0x640207b4
640207ae:	mov    BYTE PTR [eax],0x30
640207b1:	dec    eax
640207b2:	jmp    0x640207a2
640207b4:	cmp    eax,DWORD PTR [ebp+0xc]
640207b7:	je     0x640207cd
640207b9:	mov    cl,BYTE PTR [eax]
640207bb:	cmp    cl,0x39
640207be:	jne    0x640207c7
640207c0:	add    bl,0x3a
640207c3:	mov    BYTE PTR [eax],bl
640207c5:	jmp    0x640207d0
640207c7:	inc    cl
640207c9:	mov    BYTE PTR [eax],cl
640207cb:	jmp    0x640207d0
640207cd:	inc    BYTE PTR [eax-0x1]
640207d0:	cmp    DWORD PTR [ebp+0x14],0x0
640207d4:	jle    0x640207e7
640207d6:	push   DWORD PTR [ebp+0x14]
640207d9:	push   0x30
640207db:	push   esi
640207dc:	call   0x64014360
640207e1:	add    esp,0xc
640207e4:	add    esi,DWORD PTR [ebp+0x14]
640207e7:	mov    eax,DWORD PTR [ebp+0xc]
640207ea:	cmp    BYTE PTR [eax],0x0
640207ed:	jne    0x640207f1
640207ef:	mov    esi,eax
640207f1:	cmp    DWORD PTR [ebp+0x18],0x0
640207f5:	mov    cl,0x34
640207f7:	sete   al
640207fa:	dec    al
640207fc:	and    al,0xe0
640207fe:	add    al,0x70
64020800:	mov    BYTE PTR [esi],al
64020802:	mov    eax,DWORD PTR [edi]
64020804:	mov    edx,DWORD PTR [edi+0x4]
64020807:	inc    esi
64020808:	call   0x64021110
6402080d:	xor    ebx,ebx
6402080f:	and    eax,0x7ff
64020814:	and    edx,ebx
64020816:	sub    eax,DWORD PTR [ebp-0x14]
64020819:	push   ebx
6402081a:	pop    ecx
6402081b:	sbb    edx,ecx
6402081d:	js     0x6402082b
6402081f:	jg     0x64020825
64020821:	cmp    eax,ebx
64020823:	jb     0x6402082b
64020825:	mov    BYTE PTR [esi],0x2b
64020828:	inc    esi
64020829:	jmp    0x64020835
6402082b:	mov    BYTE PTR [esi],0x2d
6402082e:	inc    esi
6402082f:	neg    eax
64020831:	adc    edx,ebx
64020833:	neg    edx
64020835:	cmp    edx,ebx
64020837:	mov    edi,esi
64020839:	mov    BYTE PTR [esi],0x30
6402083c:	jl     0x64020862
6402083e:	mov    ecx,0x3e8
64020843:	jg     0x64020849
64020845:	cmp    eax,ecx
64020847:	jb     0x64020862
64020849:	push   ebx
6402084a:	push   ecx
6402084b:	push   edx
6402084c:	push   eax
6402084d:	call   0x64021030
64020852:	add    al,0x30
64020854:	mov    BYTE PTR [esi],al
64020856:	inc    esi
64020857:	cmp    esi,edi
64020859:	mov    DWORD PTR [ebp-0x10],edx
6402085c:	mov    eax,ecx
6402085e:	mov    edx,ebx
64020860:	jne    0x6402086d
64020862:	test   edx,edx
64020864:	jl     0x64020884
64020866:	jg     0x6402086d
64020868:	cmp    eax,0x64
6402086b:	jb     0x64020884
6402086d:	push   0x0
6402086f:	push   0x64
64020871:	push   edx
64020872:	push   eax
64020873:	call   0x64021030
64020878:	add    al,0x30
6402087a:	mov    BYTE PTR [esi],al
6402087c:	mov    DWORD PTR [ebp-0x10],edx
6402087f:	inc    esi
64020880:	mov    eax,ecx
64020882:	mov    edx,ebx
64020884:	cmp    esi,edi
64020886:	jne    0x64020893
64020888:	test   edx,edx
6402088a:	jl     0x640208ab
6402088c:	jg     0x64020893
6402088e:	cmp    eax,0xa
64020891:	jb     0x640208ab
64020893:	push   0x0
64020895:	push   0xa
64020897:	push   edx
64020898:	push   eax
64020899:	call   0x64021030
6402089e:	add    al,0x30
640208a0:	mov    BYTE PTR [esi],al
640208a2:	mov    DWORD PTR [ebp-0x10],edx
640208a5:	inc    esi
640208a6:	mov    eax,ecx
640208a8:	mov    DWORD PTR [ebp-0x10],ebx
640208ab:	add    al,0x30
640208ad:	mov    BYTE PTR [esi],al
640208af:	mov    BYTE PTR [esi+0x1],0x0
640208b3:	cmp    BYTE PTR [ebp-0x18],0x0
640208b7:	je     0x640208c0
640208b9:	mov    eax,DWORD PTR [ebp-0x1c]
640208bc:	and    DWORD PTR [eax+0x70],0xfffffffd
640208c0:	xor    eax,eax
640208c2:	pop    ebx
640208c3:	pop    edi
640208c4:	pop    esi
640208c5:	leave  
640208c6:	ret    
640208c7:	push   ebp
640208c8:	mov    ebp,esp
640208ca:	sub    esp,0x10
640208cd:	push   ebx
640208ce:	push   esi
640208cf:	push   edi
640208d0:	push   DWORD PTR [ebp+0x14]
640208d3:	mov    ebx,eax
640208d5:	mov    esi,DWORD PTR [ebx+0x4]
640208d8:	mov    edi,ecx
640208da:	lea    ecx,[ebp-0x10]
640208dd:	dec    esi
640208de:	call   0x64013dff
640208e3:	test   edi,edi
640208e5:	jne    0x64020914
640208e7:	call   0x64015a20
640208ec:	push   0x16
640208ee:	pop    esi
640208ef:	mov    DWORD PTR [eax],esi
640208f1:	xor    eax,eax
640208f3:	push   eax
640208f4:	push   eax
640208f5:	push   eax
640208f6:	push   eax
640208f7:	push   eax
640208f8:	call   0x64013794
640208fd:	add    esp,0x14
64020900:	cmp    BYTE PTR [ebp-0x4],0x0
64020904:	je     0x6402090d
64020906:	mov    eax,DWORD PTR [ebp-0x8]
64020909:	and    DWORD PTR [eax+0x70],0xfffffffd
6402090d:	mov    eax,esi
6402090f:	jmp    0x640209b7
64020914:	cmp    DWORD PTR [ebp+0x8],0x0
64020918:	jbe    0x640208e7
6402091a:	cmp    BYTE PTR [ebp+0x10],0x0
6402091e:	je     0x64020938
64020920:	cmp    esi,DWORD PTR [ebp+0xc]
64020923:	jne    0x64020938
64020925:	xor    eax,eax
64020927:	cmp    DWORD PTR [ebx],0x2d
6402092a:	sete   al
6402092d:	add    eax,esi
6402092f:	add    eax,edi
64020931:	mov    BYTE PTR [eax],0x30
64020934:	mov    BYTE PTR [eax+0x1],0x0
64020938:	cmp    DWORD PTR [ebx],0x2d
6402093b:	mov    esi,edi
6402093d:	jne    0x64020945
6402093f:	mov    BYTE PTR [edi],0x2d
64020942:	lea    esi,[edi+0x1]
64020945:	mov    eax,DWORD PTR [ebx+0x4]
64020948:	xor    edi,edi
6402094a:	inc    edi
6402094b:	test   eax,eax
6402094d:	jg     0x6402095c
6402094f:	mov    eax,esi
64020951:	call   0x640202c4
64020956:	mov    BYTE PTR [esi],0x30
64020959:	inc    esi
6402095a:	jmp    0x6402095e
6402095c:	add    esi,eax
6402095e:	cmp    DWORD PTR [ebp+0xc],0x0
64020962:	jle    0x640209a8
64020964:	mov    eax,esi
64020966:	call   0x640202c4
6402096b:	mov    eax,DWORD PTR [ebp-0x10]
6402096e:	mov    eax,DWORD PTR [eax+0xbc]
64020974:	mov    eax,DWORD PTR [eax]
64020976:	mov    al,BYTE PTR [eax]
64020978:	mov    BYTE PTR [esi],al
6402097a:	mov    ebx,DWORD PTR [ebx+0x4]
6402097d:	inc    esi
6402097e:	test   ebx,ebx
64020980:	jge    0x640209a8
64020982:	neg    ebx
64020984:	cmp    BYTE PTR [ebp+0x10],0x0
64020988:	jne    0x6402098f
6402098a:	cmp    DWORD PTR [ebp+0xc],ebx
6402098d:	jl     0x64020992
6402098f:	mov    DWORD PTR [ebp+0xc],ebx
64020992:	mov    edi,DWORD PTR [ebp+0xc]
64020995:	mov    eax,esi
64020997:	call   0x640202c4
6402099c:	push   edi
6402099d:	push   0x30
6402099f:	push   esi
640209a0:	call   0x64014360
640209a5:	add    esp,0xc
640209a8:	cmp    BYTE PTR [ebp-0x4],0x0
640209ac:	je     0x640209b5
640209ae:	mov    eax,DWORD PTR [ebp-0x8]
640209b1:	and    DWORD PTR [eax+0x70],0xfffffffd
640209b5:	xor    eax,eax
640209b7:	pop    edi
640209b8:	pop    esi
640209b9:	pop    ebx
640209ba:	leave  
640209bb:	ret    
640209bc:	push   ebp
640209bd:	mov    ebp,esp
640209bf:	sub    esp,0x2c
640209c2:	mov    eax,ds:0x6402f09c
640209c7:	xor    eax,ebp
640209c9:	mov    DWORD PTR [ebp-0x4],eax
640209cc:	mov    eax,DWORD PTR [ebp+0x8]
640209cf:	push   ebx
640209d0:	push   esi
640209d1:	push   edi
640209d2:	mov    edi,DWORD PTR [ebp+0xc]
640209d5:	push   0x16
640209d7:	pop    esi
640209d8:	push   esi
640209d9:	lea    ecx,[ebp-0x1c]
640209dc:	push   ecx
640209dd:	lea    ecx,[ebp-0x2c]
640209e0:	push   ecx
640209e1:	push   DWORD PTR [eax+0x4]
640209e4:	push   DWORD PTR [eax]
640209e6:	call   0x64020fa1
640209eb:	xor    ebx,ebx
640209ed:	add    esp,0x14
640209f0:	cmp    edi,ebx
640209f2:	jne    0x64020a0c
640209f4:	call   0x64015a20
640209f9:	push   ebx
640209fa:	push   ebx
640209fb:	push   ebx
640209fc:	push   ebx
640209fd:	push   ebx
640209fe:	mov    DWORD PTR [eax],esi
64020a00:	call   0x64013794
64020a05:	add    esp,0x14
64020a08:	mov    eax,esi
64020a0a:	jmp    0x64020a66
64020a0c:	mov    eax,DWORD PTR [ebp+0x10]
64020a0f:	cmp    eax,ebx
64020a11:	jbe    0x640209f4
64020a13:	cmp    eax,0xffffffff
64020a16:	jne    0x64020a1c
64020a18:	or     eax,eax
64020a1a:	jmp    0x64020a27
64020a1c:	xor    ecx,ecx
64020a1e:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020a22:	sete   cl
64020a25:	sub    eax,ecx
64020a27:	mov    esi,DWORD PTR [ebp+0x14]
64020a2a:	lea    ecx,[ebp-0x2c]
64020a2d:	push   ecx
64020a2e:	mov    ecx,DWORD PTR [ebp-0x28]
64020a31:	add    ecx,esi
64020a33:	push   ecx
64020a34:	push   eax
64020a35:	xor    eax,eax
64020a37:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020a3b:	sete   al
64020a3e:	add    eax,edi
64020a40:	push   eax
64020a41:	call   0x64020e29
64020a46:	add    esp,0x10
64020a49:	cmp    eax,ebx
64020a4b:	je     0x64020a51
64020a4d:	mov    BYTE PTR [edi],bl
64020a4f:	jmp    0x64020a66
64020a51:	push   DWORD PTR [ebp+0x18]
64020a54:	lea    eax,[ebp-0x2c]
64020a57:	push   ebx
64020a58:	push   esi
64020a59:	push   DWORD PTR [ebp+0x10]
64020a5c:	mov    ecx,edi
64020a5e:	call   0x640208c7
64020a63:	add    esp,0x10
64020a66:	mov    ecx,DWORD PTR [ebp-0x4]
64020a69:	pop    edi
64020a6a:	pop    esi
64020a6b:	xor    ecx,ebp
64020a6d:	pop    ebx
64020a6e:	call   0x64013c5c
64020a73:	leave  
64020a74:	ret    
64020a75:	push   ebp
64020a76:	mov    ebp,esp
64020a78:	sub    esp,0x30
64020a7b:	mov    eax,ds:0x6402f09c
64020a80:	xor    eax,ebp
64020a82:	mov    DWORD PTR [ebp-0x4],eax
64020a85:	mov    eax,DWORD PTR [ebp+0x8]
64020a88:	push   ebx
64020a89:	push   esi
64020a8a:	mov    esi,DWORD PTR [ebp+0xc]
64020a8d:	push   edi
64020a8e:	push   0x16
64020a90:	pop    edi
64020a91:	push   edi
64020a92:	lea    ecx,[ebp-0x1c]
64020a95:	push   ecx
64020a96:	lea    ecx,[ebp-0x30]
64020a99:	push   ecx
64020a9a:	push   DWORD PTR [eax+0x4]
64020a9d:	push   DWORD PTR [eax]
64020a9f:	call   0x64020fa1
64020aa4:	xor    ebx,ebx
64020aa6:	add    esp,0x14
64020aa9:	cmp    esi,ebx
64020aab:	jne    0x64020ac8
64020aad:	call   0x64015a20
64020ab2:	push   ebx
64020ab3:	push   ebx
64020ab4:	push   ebx
64020ab5:	push   ebx
64020ab6:	push   ebx
64020ab7:	mov    DWORD PTR [eax],edi
64020ab9:	call   0x64013794
64020abe:	add    esp,0x14
64020ac1:	mov    eax,edi
64020ac3:	jmp    0x64020b5e
64020ac8:	mov    ecx,DWORD PTR [ebp+0x10]
64020acb:	cmp    ecx,ebx
64020acd:	jbe    0x64020aad
64020acf:	mov    eax,DWORD PTR [ebp-0x2c]
64020ad2:	dec    eax
64020ad3:	mov    DWORD PTR [ebp-0x20],eax
64020ad6:	xor    eax,eax
64020ad8:	cmp    DWORD PTR [ebp-0x30],0x2d
64020adc:	sete   al
64020adf:	cmp    ecx,0xffffffff
64020ae2:	lea    edi,[eax+esi*1]
64020ae5:	jne    0x64020aeb
64020ae7:	or     ecx,ecx
64020ae9:	jmp    0x64020aed
64020aeb:	sub    ecx,eax
64020aed:	lea    eax,[ebp-0x30]
64020af0:	push   eax
64020af1:	push   DWORD PTR [ebp+0x14]
64020af4:	push   ecx
64020af5:	push   edi
64020af6:	call   0x64020e29
64020afb:	add    esp,0x10
64020afe:	cmp    eax,ebx
64020b00:	je     0x64020b06
64020b02:	mov    BYTE PTR [esi],bl
64020b04:	jmp    0x64020b5e
64020b06:	mov    eax,DWORD PTR [ebp-0x2c]
64020b09:	dec    eax
64020b0a:	cmp    DWORD PTR [ebp-0x20],eax
64020b0d:	setl   cl
64020b10:	cmp    eax,0xfffffffc
64020b13:	jl     0x64020b42
64020b15:	cmp    eax,DWORD PTR [ebp+0x14]
64020b18:	jge    0x64020b42
64020b1a:	cmp    cl,bl
64020b1c:	je     0x64020b28
64020b1e:	mov    al,BYTE PTR [edi]
64020b20:	inc    edi
64020b21:	test   al,al
64020b23:	jne    0x64020b1e
64020b25:	mov    BYTE PTR [edi-0x2],bl
64020b28:	push   DWORD PTR [ebp+0x1c]
64020b2b:	lea    eax,[ebp-0x30]
64020b2e:	push   0x1
64020b30:	push   DWORD PTR [ebp+0x14]
64020b33:	mov    ecx,esi
64020b35:	push   DWORD PTR [ebp+0x10]
64020b38:	call   0x640208c7
64020b3d:	add    esp,0x10
64020b40:	jmp    0x64020b5e
64020b42:	push   DWORD PTR [ebp+0x1c]
64020b45:	lea    eax,[ebp-0x30]
64020b48:	push   0x1
64020b4a:	push   eax
64020b4b:	push   DWORD PTR [ebp+0x18]
64020b4e:	mov    eax,esi
64020b50:	push   DWORD PTR [ebp+0x14]
64020b53:	push   DWORD PTR [ebp+0x10]
64020b56:	call   0x640202fd
64020b5b:	add    esp,0x18
64020b5e:	mov    ecx,DWORD PTR [ebp-0x4]
64020b61:	pop    edi
64020b62:	pop    esi
64020b63:	xor    ecx,ebp
64020b65:	pop    ebx
64020b66:	call   0x64013c5c
64020b6b:	leave  
64020b6c:	ret    
64020b6d:	push   ebp
64020b6e:	mov    ebp,esp
64020b70:	mov    eax,DWORD PTR [ebp+0x14]
64020b73:	cmp    eax,0x65
64020b76:	je     0x64020bd7
64020b78:	cmp    eax,0x45
64020b7b:	je     0x64020bd7
64020b7d:	cmp    eax,0x66
64020b80:	jne    0x64020b9b
64020b82:	push   DWORD PTR [ebp+0x20]
64020b85:	push   DWORD PTR [ebp+0x18]
64020b88:	push   DWORD PTR [ebp+0x10]
64020b8b:	push   DWORD PTR [ebp+0xc]
64020b8e:	push   DWORD PTR [ebp+0x8]
64020b91:	call   0x640209bc
64020b96:	add    esp,0x14
64020b99:	pop    ebp
64020b9a:	ret    
64020b9b:	cmp    eax,0x61
64020b9e:	je     0x64020bbe
64020ba0:	cmp    eax,0x41
64020ba3:	je     0x64020bbe
64020ba5:	push   DWORD PTR [ebp+0x20]
64020ba8:	push   DWORD PTR [ebp+0x1c]
64020bab:	push   DWORD PTR [ebp+0x18]
64020bae:	push   DWORD PTR [ebp+0x10]
64020bb1:	push   DWORD PTR [ebp+0xc]
64020bb4:	push   DWORD PTR [ebp+0x8]
64020bb7:	call   0x64020a75
64020bbc:	jmp    0x64020bee
64020bbe:	push   DWORD PTR [ebp+0x20]
64020bc1:	push   DWORD PTR [ebp+0x1c]
64020bc4:	push   DWORD PTR [ebp+0x18]
64020bc7:	push   DWORD PTR [ebp+0x10]
64020bca:	push   DWORD PTR [ebp+0xc]
64020bcd:	push   DWORD PTR [ebp+0x8]
64020bd0:	call   0x64020556
64020bd5:	jmp    0x64020bee
64020bd7:	push   DWORD PTR [ebp+0x20]
64020bda:	push   DWORD PTR [ebp+0x1c]
64020bdd:	push   DWORD PTR [ebp+0x18]
64020be0:	push   DWORD PTR [ebp+0x10]
64020be3:	push   DWORD PTR [ebp+0xc]
64020be6:	push   DWORD PTR [ebp+0x8]
64020be9:	call   0x6402046a
64020bee:	add    esp,0x18
64020bf1:	pop    ebp
64020bf2:	ret    
64020bf3:	push   ebp
64020bf4:	mov    ebp,esp
64020bf6:	push   0x0
64020bf8:	push   DWORD PTR [ebp+0x1c]
64020bfb:	push   DWORD PTR [ebp+0x18]
64020bfe:	push   DWORD PTR [ebp+0x14]
64020c01:	push   DWORD PTR [ebp+0x10]
64020c04:	push   DWORD PTR [ebp+0xc]
64020c07:	push   DWORD PTR [ebp+0x8]
64020c0a:	call   0x64020b6d
64020c0f:	add    esp,0x1c
64020c12:	pop    ebp
64020c13:	ret    
64020c14:	push   esi
64020c15:	push   0x30000
64020c1a:	push   0x10000
64020c1f:	xor    esi,esi
64020c21:	push   esi
64020c22:	call   0x6402112f
64020c27:	add    esp,0xc
64020c2a:	test   eax,eax
64020c2c:	je     0x64020c3b
64020c2e:	push   esi
64020c2f:	push   esi
64020c30:	push   esi
64020c31:	push   esi
64020c32:	push   esi
64020c33:	call   0x64013698
64020c38:	add    esp,0x14
64020c3b:	pop    esi
64020c3c:	ret    
64020c3d:	push   ebp
64020c3e:	mov    ebp,esp
64020c40:	sub    esp,0x18
64020c43:	fld    QWORD PTR ds:0x64028610
64020c49:	fstp   QWORD PTR [ebp-0x10]
64020c4c:	fld    QWORD PTR ds:0x64028608
64020c52:	fstp   QWORD PTR [ebp-0x18]
64020c55:	fld    QWORD PTR [ebp-0x18]
64020c58:	fdiv   QWORD PTR [ebp-0x10]
64020c5b:	fmul   QWORD PTR [ebp-0x10]
64020c5e:	fsubr  QWORD PTR [ebp-0x18]
64020c61:	fstp   QWORD PTR [ebp-0x8]
64020c64:	fld1   
64020c66:	fcomp  QWORD PTR [ebp-0x8]
64020c69:	fnstsw ax
64020c6b:	test   ah,0x5
64020c6e:	jp     0x64020c75
64020c70:	xor    eax,eax
64020c72:	inc    eax
64020c73:	leave  
64020c74:	ret    
64020c75:	xor    eax,eax
64020c77:	leave  
64020c78:	ret    
64020c79:	push   0x64028634
64020c7e:	call   DWORD PTR ds:0x64026128
64020c84:	test   eax,eax
64020c86:	je     0x64020c9d
64020c88:	push   0x64028618
64020c8d:	push   eax
64020c8e:	call   DWORD PTR ds:0x64026014
64020c94:	test   eax,eax
64020c96:	je     0x64020c9d
64020c98:	push   0x0
64020c9a:	call   eax
64020c9c:	ret    
64020c9d:	jmp    0x64020c3d
64020ca2:	int3   
64020ca3:	int3   
64020ca4:	int3   
64020ca5:	int3   
64020ca6:	int3   
64020ca7:	int3   
64020ca8:	int3   
64020ca9:	int3   
64020caa:	int3   
64020cab:	int3   
64020cac:	int3   
64020cad:	int3   
64020cae:	int3   
64020caf:	int3   
64020cb0:	push   ebp
64020cb1:	mov    ebp,esp
64020cb3:	push   edi
64020cb4:	mov    edi,DWORD PTR [ebp+0x8]
64020cb7:	xor    eax,eax
64020cb9:	or     ecx,0xffffffff
64020cbc:	repnz scas al,BYTE PTR es:[edi]
64020cbe:	add    ecx,0x1
64020cc1:	neg    ecx
64020cc3:	sub    edi,0x1
64020cc6:	mov    al,BYTE PTR [ebp+0xc]
64020cc9:	std    
64020cca:	repnz scas al,BYTE PTR es:[edi]
64020ccc:	add    edi,0x1
64020ccf:	cmp    BYTE PTR [edi],al
64020cd1:	je     0x64020cd7
64020cd3:	xor    eax,eax
64020cd5:	jmp    0x64020cd9
64020cd7:	mov    eax,edi
64020cd9:	cld    
64020cda:	pop    edi
64020cdb:	leave  
64020cdc:	ret    
64020cdd:	push   ebp
64020cde:	mov    ebp,esp
64020ce0:	sub    esp,0x28
64020ce3:	mov    eax,ds:0x6402f09c
64020ce8:	xor    eax,ebp
64020cea:	mov    DWORD PTR [ebp-0x4],eax
64020ced:	push   ebx
64020cee:	push   esi
64020cef:	mov    esi,DWORD PTR [ebp+0x8]
64020cf2:	push   edi
64020cf3:	push   DWORD PTR [ebp+0x10]
64020cf6:	mov    edi,DWORD PTR [ebp+0xc]
64020cf9:	lea    ecx,[ebp-0x24]
64020cfc:	call   0x64013dff
64020d01:	lea    eax,[ebp-0x24]
64020d04:	push   eax
64020d05:	xor    ebx,ebx
64020d07:	push   ebx
64020d08:	push   ebx
64020d09:	push   ebx
64020d0a:	push   ebx
64020d0b:	push   edi
64020d0c:	lea    eax,[ebp-0x28]
64020d0f:	push   eax
64020d10:	lea    eax,[ebp-0x10]
64020d13:	push   eax
64020d14:	call   0x64021c1d
64020d19:	mov    DWORD PTR [ebp-0x14],eax
64020d1c:	lea    eax,[ebp-0x10]
64020d1f:	push   esi
64020d20:	push   eax
64020d21:	call   0x64021199
64020d26:	add    esp,0x28
64020d29:	test   BYTE PTR [ebp-0x14],0x3
64020d2d:	jne    0x64020d5a
64020d2f:	cmp    eax,0x1
64020d32:	jne    0x64020d45
64020d34:	cmp    BYTE PTR [ebp-0x18],bl
64020d37:	je     0x64020d40
64020d39:	mov    eax,DWORD PTR [ebp-0x1c]
64020d3c:	and    DWORD PTR [eax+0x70],0xfffffffd
64020d40:	push   0x3
64020d42:	pop    eax
64020d43:	jmp    0x64020d74
64020d45:	cmp    eax,0x2
64020d48:	jne    0x64020d66
64020d4a:	cmp    BYTE PTR [ebp-0x18],bl
64020d4d:	je     0x64020d56
64020d4f:	mov    eax,DWORD PTR [ebp-0x1c]
64020d52:	and    DWORD PTR [eax+0x70],0xfffffffd
64020d56:	push   0x4
64020d58:	jmp    0x64020d42
64020d5a:	test   BYTE PTR [ebp-0x14],0x1
64020d5e:	jne    0x64020d4a
64020d60:	test   BYTE PTR [ebp-0x14],0x2
64020d64:	jne    0x64020d34
64020d66:	cmp    BYTE PTR [ebp-0x18],bl
64020d69:	je     0x64020d72
64020d6b:	mov    eax,DWORD PTR [ebp-0x1c]
64020d6e:	and    DWORD PTR [eax+0x70],0xfffffffd
64020d72:	xor    eax,eax
64020d74:	mov    ecx,DWORD PTR [ebp-0x4]
64020d77:	pop    edi
64020d78:	pop    esi
64020d79:	xor    ecx,ebp
64020d7b:	pop    ebx
64020d7c:	call   0x64013c5c
64020d81:	leave  
64020d82:	ret    
64020d83:	push   ebp
64020d84:	mov    ebp,esp
64020d86:	sub    esp,0x28
64020d89:	mov    eax,ds:0x6402f09c
64020d8e:	xor    eax,ebp
64020d90:	mov    DWORD PTR [ebp-0x4],eax
64020d93:	push   ebx
64020d94:	push   esi
64020d95:	mov    esi,DWORD PTR [ebp+0x8]
64020d98:	push   edi
64020d99:	push   DWORD PTR [ebp+0x10]
64020d9c:	mov    edi,DWORD PTR [ebp+0xc]
64020d9f:	lea    ecx,[ebp-0x24]
64020da2:	call   0x64013dff
64020da7:	lea    eax,[ebp-0x24]
64020daa:	push   eax
64020dab:	xor    ebx,ebx
64020dad:	push   ebx
64020dae:	push   ebx
64020daf:	push   ebx
64020db0:	push   ebx
64020db1:	push   edi
64020db2:	lea    eax,[ebp-0x28]
64020db5:	push   eax
64020db6:	lea    eax,[ebp-0x10]
64020db9:	push   eax
64020dba:	call   0x64021c1d
64020dbf:	mov    DWORD PTR [ebp-0x14],eax
64020dc2:	lea    eax,[ebp-0x10]
64020dc5:	push   esi
64020dc6:	push   eax
64020dc7:	call   0x640216db
64020dcc:	add    esp,0x28
64020dcf:	test   BYTE PTR [ebp-0x14],0x3
64020dd3:	jne    0x64020e00
64020dd5:	cmp    eax,0x1
64020dd8:	jne    0x64020deb
64020dda:	cmp    BYTE PTR [ebp-0x18],bl
64020ddd:	je     0x64020de6
64020ddf:	mov    eax,DWORD PTR [ebp-0x1c]
64020de2:	and    DWORD PTR [eax+0x70],0xfffffffd
64020de6:	push   0x3
64020de8:	pop    eax
64020de9:	jmp    0x64020e1a
64020deb:	cmp    eax,0x2
64020dee:	jne    0x64020e0c
64020df0:	cmp    BYTE PTR [ebp-0x18],bl
64020df3:	je     0x64020dfc
64020df5:	mov    eax,DWORD PTR [ebp-0x1c]
64020df8:	and    DWORD PTR [eax+0x70],0xfffffffd
64020dfc:	push   0x4
64020dfe:	jmp    0x64020de8
64020e00:	test   BYTE PTR [ebp-0x14],0x1
64020e04:	jne    0x64020df0
64020e06:	test   BYTE PTR [ebp-0x14],0x2
64020e0a:	jne    0x64020dda
64020e0c:	cmp    BYTE PTR [ebp-0x18],bl
64020e0f:	je     0x64020e18
64020e11:	mov    eax,DWORD PTR [ebp-0x1c]
64020e14:	and    DWORD PTR [eax+0x70],0xfffffffd
64020e18:	xor    eax,eax
64020e1a:	mov    ecx,DWORD PTR [ebp-0x4]
64020e1d:	pop    edi
64020e1e:	pop    esi
64020e1f:	xor    ecx,ebp
64020e21:	pop    ebx
64020e22:	call   0x64013c5c
64020e27:	leave  
64020e28:	ret    
64020e29:	push   ebp
64020e2a:	mov    ebp,esp
64020e2c:	mov    ecx,DWORD PTR [ebp+0x14]
64020e2f:	push   ebx
64020e30:	push   esi
64020e31:	mov    esi,DWORD PTR [ebp+0x8]
64020e34:	xor    ebx,ebx
64020e36:	cmp    esi,ebx
64020e38:	push   edi
64020e39:	mov    edi,DWORD PTR [ecx+0xc]
64020e3c:	jne    0x64020e5c
64020e3e:	call   0x64015a20
64020e43:	push   0x16
64020e45:	pop    esi
64020e46:	mov    DWORD PTR [eax],esi
64020e48:	push   ebx
64020e49:	push   ebx
64020e4a:	push   ebx
64020e4b:	push   ebx
64020e4c:	push   ebx
64020e4d:	call   0x64013794
64020e52:	add    esp,0x14
64020e55:	mov    eax,esi
64020e57:	jmp    0x64020ee1
64020e5c:	cmp    DWORD PTR [ebp+0xc],ebx
64020e5f:	jbe    0x64020e3e
64020e61:	mov    edx,DWORD PTR [ebp+0x10]
64020e64:	cmp    edx,ebx
64020e66:	mov    BYTE PTR [esi],bl
64020e68:	jle    0x64020e6e
64020e6a:	mov    eax,edx
64020e6c:	jmp    0x64020e70
64020e6e:	xor    eax,eax
64020e70:	inc    eax
64020e71:	cmp    DWORD PTR [ebp+0xc],eax
64020e74:	ja     0x64020e84
64020e76:	call   0x64015a20
64020e7b:	push   0x22
64020e7d:	pop    ecx
64020e7e:	mov    DWORD PTR [eax],ecx
64020e80:	mov    esi,ecx
64020e82:	jmp    0x64020e48
64020e84:	cmp    edx,ebx
64020e86:	mov    BYTE PTR [esi],0x30
64020e89:	lea    eax,[esi+0x1]
64020e8c:	jle    0x64020ea8
64020e8e:	mov    cl,BYTE PTR [edi]
64020e90:	cmp    cl,bl
64020e92:	je     0x64020e9a
64020e94:	movsx  ecx,cl
64020e97:	inc    edi
64020e98:	jmp    0x64020e9d
64020e9a:	push   0x30
64020e9c:	pop    ecx
64020e9d:	mov    BYTE PTR [eax],cl
64020e9f:	inc    eax
64020ea0:	dec    edx
64020ea1:	cmp    edx,ebx
64020ea3:	jg     0x64020e8e
64020ea5:	mov    ecx,DWORD PTR [ebp+0x14]
64020ea8:	cmp    edx,ebx
64020eaa:	mov    BYTE PTR [eax],bl
64020eac:	jl     0x64020ec0
64020eae:	cmp    BYTE PTR [edi],0x35
64020eb1:	jl     0x64020ec0
64020eb3:	jmp    0x64020eb8
64020eb5:	mov    BYTE PTR [eax],0x30
64020eb8:	dec    eax
64020eb9:	cmp    BYTE PTR [eax],0x39
64020ebc:	je     0x64020eb5
64020ebe:	inc    BYTE PTR [eax]
64020ec0:	cmp    BYTE PTR [esi],0x31
64020ec3:	jne    0x64020eca
64020ec5:	inc    DWORD PTR [ecx+0x4]
64020ec8:	jmp    0x64020edf
64020eca:	lea    edi,[esi+0x1]
64020ecd:	push   edi
64020ece:	call   0x64015420
64020ed3:	inc    eax
64020ed4:	push   eax
64020ed5:	push   edi
64020ed6:	push   esi
64020ed7:	call   0x64014ca0
64020edc:	add    esp,0x10
64020edf:	xor    eax,eax
64020ee1:	pop    edi
64020ee2:	pop    esi
64020ee3:	pop    ebx
64020ee4:	pop    ebp
64020ee5:	ret    
64020ee6:	push   ebp
64020ee7:	mov    ebp,esp
64020ee9:	push   ecx
64020eea:	mov    edx,DWORD PTR [ebp+0xc]
64020eed:	movzx  eax,WORD PTR [edx+0x6]
64020ef1:	push   ebx
64020ef2:	mov    ecx,eax
64020ef4:	push   esi
64020ef5:	push   edi
64020ef6:	shr    ecx,0x4
64020ef9:	and    eax,0x8000
64020efe:	mov    edi,0x7ff
64020f03:	and    ecx,edi
64020f05:	mov    DWORD PTR [ebp+0xc],eax
64020f08:	mov    eax,DWORD PTR [edx+0x4]
64020f0b:	mov    edx,DWORD PTR [edx]
64020f0d:	movzx  ebx,cx
64020f10:	mov    esi,0x80000000
64020f15:	and    eax,0xfffff
64020f1a:	test   ebx,ebx
64020f1c:	mov    DWORD PTR [ebp-0x4],esi
64020f1f:	je     0x64020f34
64020f21:	cmp    ebx,edi
64020f23:	je     0x64020f2d
64020f25:	add    ecx,0x3c00
64020f2b:	jmp    0x64020f55
64020f2d:	mov    edi,0x7fff
64020f32:	jmp    0x64020f58
64020f34:	xor    ebx,ebx
64020f36:	cmp    eax,ebx
64020f38:	jne    0x64020f4c
64020f3a:	cmp    edx,ebx
64020f3c:	jne    0x64020f4c
64020f3e:	mov    eax,DWORD PTR [ebp+0x8]
64020f41:	mov    cx,WORD PTR [ebp+0xc]
64020f45:	mov    DWORD PTR [eax+0x4],ebx
64020f48:	mov    DWORD PTR [eax],ebx
64020f4a:	jmp    0x64020f98
64020f4c:	add    ecx,0x3c01
64020f52:	mov    DWORD PTR [ebp-0x4],ebx
64020f55:	movzx  edi,cx
64020f58:	mov    ecx,edx
64020f5a:	shr    ecx,0x15
64020f5d:	shl    eax,0xb
64020f60:	or     ecx,eax
64020f62:	or     ecx,DWORD PTR [ebp-0x4]
64020f65:	mov    eax,DWORD PTR [ebp+0x8]
64020f68:	shl    edx,0xb
64020f6b:	test   esi,ecx
64020f6d:	mov    DWORD PTR [eax+0x4],ecx
64020f70:	mov    DWORD PTR [eax],edx
64020f72:	jne    0x64020f93
64020f74:	mov    ecx,DWORD PTR [eax]
64020f76:	mov    edx,DWORD PTR [eax+0x4]
64020f79:	mov    ebx,ecx
64020f7b:	add    edx,edx
64020f7d:	shr    ebx,0x1f
64020f80:	or     edx,ebx
64020f82:	add    ecx,ecx
64020f84:	add    edi,0xffff
64020f8a:	test   esi,edx
64020f8c:	mov    DWORD PTR [eax+0x4],edx
64020f8f:	mov    DWORD PTR [eax],ecx
64020f91:	je     0x64020f74
64020f93:	mov    ecx,DWORD PTR [ebp+0xc]
64020f96:	or     ecx,edi
64020f98:	pop    edi
64020f99:	pop    esi
64020f9a:	mov    WORD PTR [eax+0x8],cx
64020f9e:	pop    ebx
64020f9f:	leave  
64020fa0:	ret    
64020fa1:	push   ebp
64020fa2:	mov    ebp,esp
64020fa4:	sub    esp,0x30
64020fa7:	mov    eax,ds:0x6402f09c
64020fac:	xor    eax,ebp
64020fae:	mov    DWORD PTR [ebp-0x4],eax
64020fb1:	mov    eax,DWORD PTR [ebp+0x14]
64020fb4:	push   ebx
64020fb5:	mov    ebx,DWORD PTR [ebp+0x10]
64020fb8:	push   esi
64020fb9:	mov    DWORD PTR [ebp-0x30],eax
64020fbc:	push   edi
64020fbd:	lea    eax,[ebp+0x8]
64020fc0:	push   eax
64020fc1:	lea    eax,[ebp-0x10]
64020fc4:	push   eax
64020fc5:	call   0x64020ee6
64020fca:	pop    ecx
64020fcb:	pop    ecx
64020fcc:	lea    eax,[ebp-0x2c]
64020fcf:	push   eax
64020fd0:	push   0x0
64020fd2:	push   0x11
64020fd4:	sub    esp,0xc
64020fd7:	lea    esi,[ebp-0x10]
64020fda:	mov    edi,esp
64020fdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020fdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64020fde:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64020fe0:	call   0x640222dd
64020fe5:	mov    esi,DWORD PTR [ebp-0x30]
64020fe8:	mov    DWORD PTR [ebx+0x8],eax
64020feb:	movsx  eax,BYTE PTR [ebp-0x2a]
64020fef:	mov    DWORD PTR [ebx],eax
64020ff1:	movsx  eax,WORD PTR [ebp-0x2c]
64020ff5:	mov    DWORD PTR [ebx+0x4],eax
64020ff8:	lea    eax,[ebp-0x28]
64020ffb:	push   eax
64020ffc:	push   DWORD PTR [ebp+0x18]
64020fff:	push   esi
64021000:	call   0x64015618
64021005:	add    esp,0x24
64021008:	test   eax,eax
6402100a:	je     0x6402101b
6402100c:	xor    eax,eax
6402100e:	push   eax
6402100f:	push   eax
64021010:	push   eax
64021011:	push   eax
64021012:	push   eax
64021013:	call   0x64013698
64021018:	add    esp,0x14
6402101b:	mov    ecx,DWORD PTR [ebp-0x4]
6402101e:	pop    edi
6402101f:	mov    DWORD PTR [ebx+0xc],esi
64021022:	pop    esi
64021023:	mov    eax,ebx
64021025:	xor    ecx,ebp
64021027:	pop    ebx
64021028:	call   0x64013c5c
6402102d:	leave  
6402102e:	ret    
6402102f:	int3   
64021030:	push   edi
64021031:	push   esi
64021032:	push   ebp
64021033:	xor    edi,edi
64021035:	xor    ebp,ebp
64021037:	mov    eax,DWORD PTR [esp+0x14]
6402103b:	or     eax,eax
6402103d:	jge    0x64021054
6402103f:	inc    edi
64021040:	inc    ebp
64021041:	mov    edx,DWORD PTR [esp+0x10]
64021045:	neg    eax
64021047:	neg    edx
64021049:	sbb    eax,0x0
6402104c:	mov    DWORD PTR [esp+0x14],eax
64021050:	mov    DWORD PTR [esp+0x10],edx
64021054:	mov    eax,DWORD PTR [esp+0x1c]
64021058:	or     eax,eax
6402105a:	jge    0x64021070
6402105c:	inc    edi
6402105d:	mov    edx,DWORD PTR [esp+0x18]
64021061:	neg    eax
64021063:	neg    edx
64021065:	sbb    eax,0x0
64021068:	mov    DWORD PTR [esp+0x1c],eax
6402106c:	mov    DWORD PTR [esp+0x18],edx
64021070:	or     eax,eax
64021072:	jne    0x6402109c
64021074:	mov    ecx,DWORD PTR [esp+0x18]
64021078:	mov    eax,DWORD PTR [esp+0x14]
6402107c:	xor    edx,edx
6402107e:	div    ecx
64021080:	mov    ebx,eax
64021082:	mov    eax,DWORD PTR [esp+0x10]
64021086:	div    ecx
64021088:	mov    esi,eax
6402108a:	mov    eax,ebx
6402108c:	mul    DWORD PTR [esp+0x18]
64021090:	mov    ecx,eax
64021092:	mov    eax,esi
64021094:	mul    DWORD PTR [esp+0x18]
64021098:	add    edx,ecx
6402109a:	jmp    0x640210e3
6402109c:	mov    ebx,eax
6402109e:	mov    ecx,DWORD PTR [esp+0x18]
640210a2:	mov    edx,DWORD PTR [esp+0x14]
640210a6:	mov    eax,DWORD PTR [esp+0x10]
640210aa:	shr    ebx,1
640210ac:	rcr    ecx,1
640210ae:	shr    edx,1
640210b0:	rcr    eax,1
640210b2:	or     ebx,ebx
640210b4:	jne    0x640210aa
640210b6:	div    ecx
640210b8:	mov    esi,eax
640210ba:	mul    DWORD PTR [esp+0x1c]
640210be:	mov    ecx,eax
640210c0:	mov    eax,DWORD PTR [esp+0x18]
640210c4:	mul    esi
640210c6:	add    edx,ecx
640210c8:	jb     0x640210d8
640210ca:	cmp    edx,DWORD PTR [esp+0x14]
640210ce:	ja     0x640210d8
640210d0:	jb     0x640210e1
640210d2:	cmp    eax,DWORD PTR [esp+0x10]
640210d6:	jbe    0x640210e1
640210d8:	dec    esi
640210d9:	sub    eax,DWORD PTR [esp+0x18]
640210dd:	sbb    edx,DWORD PTR [esp+0x1c]
640210e1:	xor    ebx,ebx
640210e3:	sub    eax,DWORD PTR [esp+0x10]
640210e7:	sbb    edx,DWORD PTR [esp+0x14]
640210eb:	dec    ebp
640210ec:	jns    0x640210f5
640210ee:	neg    edx
640210f0:	neg    eax
640210f2:	sbb    edx,0x0
640210f5:	mov    ecx,edx
640210f7:	mov    edx,ebx
640210f9:	mov    ebx,ecx
640210fb:	mov    ecx,eax
640210fd:	mov    eax,esi
640210ff:	dec    edi
64021100:	jne    0x64021109
64021102:	neg    edx
64021104:	neg    eax
64021106:	sbb    edx,0x0
64021109:	pop    ebp
6402110a:	pop    esi
6402110b:	pop    edi
6402110c:	ret    0x10
6402110f:	int3   
64021110:	cmp    cl,0x40
64021113:	jae    0x6402112a
64021115:	cmp    cl,0x20
64021118:	jae    0x64021120
6402111a:	shrd   eax,edx,cl
6402111d:	shr    edx,cl
6402111f:	ret    
64021120:	mov    eax,edx
64021122:	xor    edx,edx
64021124:	and    cl,0x1f
64021127:	shr    eax,cl
64021129:	ret    
6402112a:	xor    eax,eax
6402112c:	xor    edx,edx
6402112e:	ret    
6402112f:	push   ebp
64021130:	mov    ebp,esp
64021132:	mov    eax,DWORD PTR [ebp+0x10]
64021135:	mov    ecx,DWORD PTR [ebp+0xc]
64021138:	and    eax,0xfff7ffff
6402113d:	and    ecx,eax
6402113f:	test   ecx,0xfcf0fce0
64021145:	push   esi
64021146:	je     0x64021179
64021148:	push   edi
64021149:	mov    edi,DWORD PTR [ebp+0x8]
6402114c:	xor    esi,esi
6402114e:	cmp    edi,esi
64021150:	je     0x6402115d
64021152:	push   esi
64021153:	push   esi
64021154:	call   0x64022cd1
64021159:	pop    ecx
6402115a:	pop    ecx
6402115b:	mov    DWORD PTR [edi],eax
6402115d:	call   0x64015a20
64021162:	push   0x16
64021164:	pop    edi
64021165:	push   esi
64021166:	push   esi
64021167:	push   esi
64021168:	push   esi
64021169:	push   esi
6402116a:	mov    DWORD PTR [eax],edi
6402116c:	call   0x64013794
64021171:	add    esp,0x14
64021174:	mov    eax,edi
64021176:	pop    edi
64021177:	jmp    0x64021196
64021179:	mov    esi,DWORD PTR [ebp+0x8]
6402117c:	test   esi,esi
6402117e:	push   eax
6402117f:	push   DWORD PTR [ebp+0xc]
64021182:	je     0x6402118d
64021184:	call   0x64022cd1
64021189:	mov    DWORD PTR [esi],eax
6402118b:	jmp    0x64021192
6402118d:	call   0x64022cd1
64021192:	pop    ecx
64021193:	pop    ecx
64021194:	xor    eax,eax
64021196:	pop    esi
64021197:	pop    ebp
64021198:	ret    
64021199:	push   ebp
6402119a:	mov    ebp,esp
6402119c:	sub    esp,0x2c
6402119f:	mov    eax,DWORD PTR [ebp+0x8]
640211a2:	movzx  ecx,WORD PTR [eax+0xa]
640211a6:	push   ebx
640211a7:	mov    ebx,ecx
640211a9:	and    ecx,0x8000
640211af:	mov    DWORD PTR [ebp-0x14],ecx
640211b2:	mov    ecx,DWORD PTR [eax+0x6]
640211b5:	mov    DWORD PTR [ebp-0x20],ecx
640211b8:	mov    ecx,DWORD PTR [eax+0x2]
640211bb:	movzx  eax,WORD PTR [eax]
640211be:	and    ebx,0x7fff
640211c4:	sub    ebx,0x3fff
640211ca:	shl    eax,0x10
640211cd:	cmp    ebx,0xffffc001
640211d3:	push   edi
640211d4:	mov    DWORD PTR [ebp-0x1c],ecx
640211d7:	mov    DWORD PTR [ebp-0x18],eax
640211da:	jne    0x64021203
640211dc:	xor    ebx,ebx
640211de:	xor    eax,eax
640211e0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
640211e4:	jne    0x640211f3
640211e6:	inc    eax
640211e7:	cmp    eax,0x3
640211ea:	jl     0x640211e0
640211ec:	xor    eax,eax
640211ee:	jmp    0x64021698
640211f3:	xor    eax,eax
640211f5:	lea    edi,[ebp-0x20]
640211f8:	stos   DWORD PTR es:[edi],eax
640211f9:	stos   DWORD PTR es:[edi],eax
640211fa:	push   0x2
640211fc:	stos   DWORD PTR es:[edi],eax
640211fd:	pop    eax
640211fe:	jmp    0x64021698
64021203:	and    DWORD PTR [ebp+0x8],0x0
64021207:	push   esi
64021208:	lea    esi,[ebp-0x20]
6402120b:	lea    edi,[ebp-0x2c]
6402120e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402120f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021211:	mov    esi,DWORD PTR ds:0x64030078
64021217:	dec    esi
64021218:	lea    ecx,[esi+0x1]
6402121b:	mov    eax,ecx
6402121d:	cdq    
6402121e:	and    edx,0x1f
64021221:	add    eax,edx
64021223:	sar    eax,0x5
64021226:	mov    edx,ecx
64021228:	and    edx,0x8000001f
6402122e:	mov    DWORD PTR [ebp-0x10],ebx
64021231:	mov    DWORD PTR [ebp-0xc],eax
64021234:	jns    0x6402123b
64021236:	dec    edx
64021237:	or     edx,0xffffffe0
6402123a:	inc    edx
6402123b:	lea    edi,[ebp+eax*4-0x20]
6402123f:	push   0x1f
64021241:	xor    eax,eax
64021243:	pop    ecx
64021244:	sub    ecx,edx
64021246:	inc    eax
64021247:	shl    eax,cl
64021249:	mov    DWORD PTR [ebp-0x8],ecx
6402124c:	test   DWORD PTR [edi],eax
6402124e:	je     0x640212e1
64021254:	mov    eax,DWORD PTR [ebp-0xc]
64021257:	or     edx,0xffffffff
6402125a:	shl    edx,cl
6402125c:	not    edx
6402125e:	test   DWORD PTR [ebp+eax*4-0x20],edx
64021262:	jmp    0x64021269
64021264:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021269:	jne    0x64021273
6402126b:	inc    eax
6402126c:	cmp    eax,0x3
6402126f:	jl     0x64021264
64021271:	jmp    0x640212e1
64021273:	mov    eax,esi
64021275:	cdq    
64021276:	push   0x1f
64021278:	pop    ecx
64021279:	and    edx,ecx
6402127b:	add    eax,edx
6402127d:	sar    eax,0x5
64021280:	and    esi,0x8000001f
64021286:	jns    0x6402128d
64021288:	dec    esi
64021289:	or     esi,0xffffffe0
6402128c:	inc    esi
6402128d:	and    DWORD PTR [ebp-0x4],0x0
64021291:	sub    ecx,esi
64021293:	xor    edx,edx
64021295:	inc    edx
64021296:	shl    edx,cl
64021298:	lea    ecx,[ebp+eax*4-0x20]
6402129c:	mov    esi,DWORD PTR [ecx]
6402129e:	add    esi,edx
640212a0:	mov    DWORD PTR [ebp+0x8],esi
640212a3:	mov    esi,DWORD PTR [ecx]
640212a5:	cmp    DWORD PTR [ebp+0x8],esi
640212a8:	jb     0x640212cc
640212aa:	cmp    DWORD PTR [ebp+0x8],edx
640212ad:	jmp    0x640212ca
640212af:	test   ecx,ecx
640212b1:	je     0x640212de
640212b3:	and    DWORD PTR [ebp-0x4],0x0
640212b7:	lea    ecx,[ebp+eax*4-0x20]
640212bb:	mov    edx,DWORD PTR [ecx]
640212bd:	lea    esi,[edx+0x1]
640212c0:	cmp    esi,edx
640212c2:	mov    DWORD PTR [ebp+0x8],esi
640212c5:	jb     0x640212cc
640212c7:	cmp    esi,0x1
640212ca:	jae    0x640212d3
640212cc:	mov    DWORD PTR [ebp-0x4],0x1
640212d3:	dec    eax
640212d4:	mov    edx,DWORD PTR [ebp+0x8]
640212d7:	mov    DWORD PTR [ecx],edx
640212d9:	mov    ecx,DWORD PTR [ebp-0x4]
640212dc:	jns    0x640212af
640212de:	mov    DWORD PTR [ebp+0x8],ecx
640212e1:	mov    ecx,DWORD PTR [ebp-0x8]
640212e4:	or     eax,0xffffffff
640212e7:	shl    eax,cl
640212e9:	and    DWORD PTR [edi],eax
640212eb:	mov    eax,DWORD PTR [ebp-0xc]
640212ee:	inc    eax
640212ef:	cmp    eax,0x3
640212f2:	jge    0x64021301
640212f4:	push   0x3
640212f6:	pop    ecx
640212f7:	lea    edi,[ebp+eax*4-0x20]
640212fb:	sub    ecx,eax
640212fd:	xor    eax,eax
640212ff:	rep stos DWORD PTR es:[edi],eax
64021301:	cmp    DWORD PTR [ebp+0x8],0x0
64021305:	je     0x64021308
64021307:	inc    ebx
64021308:	mov    eax,ds:0x64030074
6402130d:	mov    ecx,eax
6402130f:	sub    ecx,DWORD PTR ds:0x64030078
64021315:	cmp    ebx,ecx
64021317:	jge    0x64021326
64021319:	xor    eax,eax
6402131b:	lea    edi,[ebp-0x20]
6402131e:	stos   DWORD PTR es:[edi],eax
6402131f:	stos   DWORD PTR es:[edi],eax
64021320:	stos   DWORD PTR es:[edi],eax
64021321:	jmp    0x64021533
64021326:	cmp    ebx,eax
64021328:	jg     0x6402153d
6402132e:	sub    eax,DWORD PTR [ebp-0x10]
64021331:	lea    esi,[ebp-0x2c]
64021334:	mov    ecx,eax
64021336:	lea    edi,[ebp-0x20]
64021339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402133a:	cdq    
6402133b:	and    edx,0x1f
6402133e:	add    eax,edx
64021340:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021341:	mov    edx,ecx
64021343:	sar    eax,0x5
64021346:	and    edx,0x8000001f
6402134c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402134d:	jns    0x64021354
6402134f:	dec    edx
64021350:	or     edx,0xffffffe0
64021353:	inc    edx
64021354:	and    DWORD PTR [ebp-0xc],0x0
64021358:	and    DWORD PTR [ebp+0x8],0x0
6402135c:	or     edi,0xffffffff
6402135f:	mov    ecx,edx
64021361:	shl    edi,cl
64021363:	mov    DWORD PTR [ebp-0x4],0x20
6402136a:	sub    DWORD PTR [ebp-0x4],edx
6402136d:	not    edi
6402136f:	mov    ebx,DWORD PTR [ebp+0x8]
64021372:	lea    ebx,[ebp+ebx*4-0x20]
64021376:	mov    esi,DWORD PTR [ebx]
64021378:	mov    ecx,esi
6402137a:	and    ecx,edi
6402137c:	mov    DWORD PTR [ebp-0x10],ecx
6402137f:	mov    ecx,edx
64021381:	shr    esi,cl
64021383:	mov    ecx,DWORD PTR [ebp-0x4]
64021386:	or     esi,DWORD PTR [ebp-0xc]
64021389:	mov    DWORD PTR [ebx],esi
6402138b:	mov    esi,DWORD PTR [ebp-0x10]
6402138e:	shl    esi,cl
64021390:	inc    DWORD PTR [ebp+0x8]
64021393:	cmp    DWORD PTR [ebp+0x8],0x3
64021397:	mov    DWORD PTR [ebp-0xc],esi
6402139a:	jl     0x6402136f
6402139c:	mov    esi,eax
6402139e:	push   0x2
640213a0:	shl    esi,0x2
640213a3:	lea    ecx,[ebp-0x18]
640213a6:	pop    edx
640213a7:	sub    ecx,esi
640213a9:	cmp    edx,eax
640213ab:	jl     0x640213b5
640213ad:	mov    esi,DWORD PTR [ecx]
640213af:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640213b3:	jmp    0x640213ba
640213b5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640213ba:	dec    edx
640213bb:	sub    ecx,0x4
640213be:	test   edx,edx
640213c0:	jge    0x640213a9
640213c2:	mov    esi,DWORD PTR ds:0x64030078
640213c8:	dec    esi
640213c9:	lea    ecx,[esi+0x1]
640213cc:	mov    eax,ecx
640213ce:	cdq    
640213cf:	and    edx,0x1f
640213d2:	add    eax,edx
640213d4:	sar    eax,0x5
640213d7:	mov    edx,ecx
640213d9:	and    edx,0x8000001f
640213df:	mov    DWORD PTR [ebp-0xc],eax
640213e2:	jns    0x640213e9
640213e4:	dec    edx
640213e5:	or     edx,0xffffffe0
640213e8:	inc    edx
640213e9:	push   0x1f
640213eb:	pop    ecx
640213ec:	sub    ecx,edx
640213ee:	xor    edx,edx
640213f0:	inc    edx
640213f1:	shl    edx,cl
640213f3:	lea    ebx,[ebp+eax*4-0x20]
640213f7:	mov    DWORD PTR [ebp-0x10],ecx
640213fa:	test   DWORD PTR [ebx],edx
640213fc:	je     0x64021484
64021402:	or     edx,0xffffffff
64021405:	shl    edx,cl
64021407:	not    edx
64021409:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402140d:	jmp    0x64021414
6402140f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021414:	jne    0x6402141e
64021416:	inc    eax
64021417:	cmp    eax,0x3
6402141a:	jl     0x6402140f
6402141c:	jmp    0x64021484
6402141e:	mov    eax,esi
64021420:	cdq    
64021421:	push   0x1f
64021423:	pop    ecx
64021424:	and    edx,ecx
64021426:	add    eax,edx
64021428:	sar    eax,0x5
6402142b:	and    esi,0x8000001f
64021431:	jns    0x64021438
64021433:	dec    esi
64021434:	or     esi,0xffffffe0
64021437:	inc    esi
64021438:	and    DWORD PTR [ebp+0x8],0x0
6402143c:	xor    edx,edx
6402143e:	sub    ecx,esi
64021440:	inc    edx
64021441:	shl    edx,cl
64021443:	lea    ecx,[ebp+eax*4-0x20]
64021447:	mov    esi,DWORD PTR [ecx]
64021449:	lea    edi,[esi+edx*1]
6402144c:	cmp    edi,esi
6402144e:	jb     0x64021454
64021450:	cmp    edi,edx
64021452:	jae    0x6402145b
64021454:	mov    DWORD PTR [ebp+0x8],0x1
6402145b:	mov    DWORD PTR [ecx],edi
6402145d:	mov    ecx,DWORD PTR [ebp+0x8]
64021460:	jmp    0x64021481
64021462:	test   ecx,ecx
64021464:	je     0x64021484
64021466:	lea    ecx,[ebp+eax*4-0x20]
6402146a:	mov    edx,DWORD PTR [ecx]
6402146c:	lea    esi,[edx+0x1]
6402146f:	xor    edi,edi
64021471:	cmp    esi,edx
64021473:	jb     0x6402147a
64021475:	cmp    esi,0x1
64021478:	jae    0x6402147d
6402147a:	xor    edi,edi
6402147c:	inc    edi
6402147d:	mov    DWORD PTR [ecx],esi
6402147f:	mov    ecx,edi
64021481:	dec    eax
64021482:	jns    0x64021462
64021484:	mov    ecx,DWORD PTR [ebp-0x10]
64021487:	or     eax,0xffffffff
6402148a:	shl    eax,cl
6402148c:	and    DWORD PTR [ebx],eax
6402148e:	mov    eax,DWORD PTR [ebp-0xc]
64021491:	inc    eax
64021492:	cmp    eax,0x3
64021495:	jge    0x640214a4
64021497:	push   0x3
64021499:	pop    ecx
6402149a:	lea    edi,[ebp+eax*4-0x20]
6402149e:	sub    ecx,eax
640214a0:	xor    eax,eax
640214a2:	rep stos DWORD PTR es:[edi],eax
640214a4:	mov    ecx,DWORD PTR ds:0x6403007c
640214aa:	inc    ecx
640214ab:	mov    eax,ecx
640214ad:	cdq    
640214ae:	and    edx,0x1f
640214b1:	add    eax,edx
640214b3:	mov    edx,ecx
640214b5:	sar    eax,0x5
640214b8:	and    edx,0x8000001f
640214be:	jns    0x640214c5
640214c0:	dec    edx
640214c1:	or     edx,0xffffffe0
640214c4:	inc    edx
640214c5:	and    DWORD PTR [ebp-0xc],0x0
640214c9:	and    DWORD PTR [ebp+0x8],0x0
640214cd:	or     edi,0xffffffff
640214d0:	mov    ecx,edx
640214d2:	shl    edi,cl
640214d4:	mov    DWORD PTR [ebp-0x4],0x20
640214db:	sub    DWORD PTR [ebp-0x4],edx
640214de:	not    edi
640214e0:	mov    ebx,DWORD PTR [ebp+0x8]
640214e3:	lea    ebx,[ebp+ebx*4-0x20]
640214e7:	mov    esi,DWORD PTR [ebx]
640214e9:	mov    ecx,esi
640214eb:	and    ecx,edi
640214ed:	mov    DWORD PTR [ebp-0x10],ecx
640214f0:	mov    ecx,edx
640214f2:	shr    esi,cl
640214f4:	mov    ecx,DWORD PTR [ebp-0x4]
640214f7:	or     esi,DWORD PTR [ebp-0xc]
640214fa:	mov    DWORD PTR [ebx],esi
640214fc:	mov    esi,DWORD PTR [ebp-0x10]
640214ff:	shl    esi,cl
64021501:	inc    DWORD PTR [ebp+0x8]
64021504:	cmp    DWORD PTR [ebp+0x8],0x3
64021508:	mov    DWORD PTR [ebp-0xc],esi
6402150b:	jl     0x640214e0
6402150d:	mov    esi,eax
6402150f:	push   0x2
64021511:	shl    esi,0x2
64021514:	lea    ecx,[ebp-0x18]
64021517:	pop    edx
64021518:	sub    ecx,esi
6402151a:	cmp    edx,eax
6402151c:	jl     0x64021526
6402151e:	mov    esi,DWORD PTR [ecx]
64021520:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021524:	jmp    0x6402152b
64021526:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402152b:	dec    edx
6402152c:	sub    ecx,0x4
6402152f:	test   edx,edx
64021531:	jge    0x6402151a
64021533:	push   0x2
64021535:	xor    ebx,ebx
64021537:	pop    eax
64021538:	jmp    0x64021697
6402153d:	cmp    ebx,DWORD PTR ds:0x64030070
64021543:	mov    ecx,DWORD PTR ds:0x6403007c
64021549:	jl     0x640215fc
6402154f:	xor    eax,eax
64021551:	lea    edi,[ebp-0x20]
64021554:	stos   DWORD PTR es:[edi],eax
64021555:	stos   DWORD PTR es:[edi],eax
64021556:	stos   DWORD PTR es:[edi],eax
64021557:	or     DWORD PTR [ebp-0x20],0x80000000
6402155e:	mov    eax,ecx
64021560:	cdq    
64021561:	and    edx,0x1f
64021564:	add    eax,edx
64021566:	mov    edx,ecx
64021568:	sar    eax,0x5
6402156b:	and    edx,0x8000001f
64021571:	jns    0x64021578
64021573:	dec    edx
64021574:	or     edx,0xffffffe0
64021577:	inc    edx
64021578:	and    DWORD PTR [ebp-0xc],0x0
6402157c:	and    DWORD PTR [ebp+0x8],0x0
64021580:	or     edi,0xffffffff
64021583:	mov    ecx,edx
64021585:	shl    edi,cl
64021587:	mov    DWORD PTR [ebp-0x4],0x20
6402158e:	sub    DWORD PTR [ebp-0x4],edx
64021591:	not    edi
64021593:	mov    ebx,DWORD PTR [ebp+0x8]
64021596:	lea    ebx,[ebp+ebx*4-0x20]
6402159a:	mov    esi,DWORD PTR [ebx]
6402159c:	mov    ecx,esi
6402159e:	and    ecx,edi
640215a0:	mov    DWORD PTR [ebp-0x10],ecx
640215a3:	mov    ecx,edx
640215a5:	shr    esi,cl
640215a7:	mov    ecx,DWORD PTR [ebp-0x4]
640215aa:	or     esi,DWORD PTR [ebp-0xc]
640215ad:	mov    DWORD PTR [ebx],esi
640215af:	mov    esi,DWORD PTR [ebp-0x10]
640215b2:	shl    esi,cl
640215b4:	inc    DWORD PTR [ebp+0x8]
640215b7:	cmp    DWORD PTR [ebp+0x8],0x3
640215bb:	mov    DWORD PTR [ebp-0xc],esi
640215be:	jl     0x64021593
640215c0:	mov    esi,eax
640215c2:	push   0x2
640215c4:	shl    esi,0x2
640215c7:	lea    ecx,[ebp-0x18]
640215ca:	pop    edx
640215cb:	sub    ecx,esi
640215cd:	cmp    edx,eax
640215cf:	jl     0x640215d9
640215d1:	mov    esi,DWORD PTR [ecx]
640215d3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640215d7:	jmp    0x640215de
640215d9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640215de:	dec    edx
640215df:	sub    ecx,0x4
640215e2:	test   edx,edx
640215e4:	jge    0x640215cd
640215e6:	mov    eax,ds:0x64030070
640215eb:	mov    ecx,DWORD PTR ds:0x64030084
640215f1:	lea    ebx,[ecx+eax*1]
640215f4:	xor    eax,eax
640215f6:	inc    eax
640215f7:	jmp    0x64021697
640215fc:	mov    eax,ds:0x64030084
64021601:	and    DWORD PTR [ebp-0x20],0x7fffffff
64021608:	add    ebx,eax
6402160a:	mov    eax,ecx
6402160c:	cdq    
6402160d:	and    edx,0x1f
64021610:	add    eax,edx
64021612:	mov    edx,ecx
64021614:	sar    eax,0x5
64021617:	and    edx,0x8000001f
6402161d:	jns    0x64021624
6402161f:	dec    edx
64021620:	or     edx,0xffffffe0
64021623:	inc    edx
64021624:	and    DWORD PTR [ebp-0xc],0x0
64021628:	and    DWORD PTR [ebp+0x8],0x0
6402162c:	or     esi,0xffffffff
6402162f:	mov    ecx,edx
64021631:	shl    esi,cl
64021633:	mov    DWORD PTR [ebp-0x4],0x20
6402163a:	sub    DWORD PTR [ebp-0x4],edx
6402163d:	not    esi
6402163f:	mov    ecx,DWORD PTR [ebp+0x8]
64021642:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64021646:	mov    ecx,edi
64021648:	and    ecx,esi
6402164a:	mov    DWORD PTR [ebp-0x10],ecx
6402164d:	mov    ecx,edx
6402164f:	shr    edi,cl
64021651:	mov    ecx,DWORD PTR [ebp+0x8]
64021654:	or     edi,DWORD PTR [ebp-0xc]
64021657:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6402165b:	mov    edi,DWORD PTR [ebp-0x10]
6402165e:	mov    ecx,DWORD PTR [ebp-0x4]
64021661:	shl    edi,cl
64021663:	inc    DWORD PTR [ebp+0x8]
64021666:	cmp    DWORD PTR [ebp+0x8],0x3
6402166a:	mov    DWORD PTR [ebp-0xc],edi
6402166d:	jl     0x6402163f
6402166f:	mov    esi,eax
64021671:	push   0x2
64021673:	shl    esi,0x2
64021676:	lea    ecx,[ebp-0x18]
64021679:	pop    edx
6402167a:	sub    ecx,esi
6402167c:	cmp    edx,eax
6402167e:	jl     0x64021688
64021680:	mov    esi,DWORD PTR [ecx]
64021682:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021686:	jmp    0x6402168d
64021688:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6402168d:	dec    edx
6402168e:	sub    ecx,0x4
64021691:	test   edx,edx
64021693:	jge    0x6402167c
64021695:	xor    eax,eax
64021697:	pop    esi
64021698:	push   0x1f
6402169a:	pop    ecx
6402169b:	sub    ecx,DWORD PTR ds:0x6403007c
640216a1:	shl    ebx,cl
640216a3:	mov    ecx,DWORD PTR [ebp-0x14]
640216a6:	neg    ecx
640216a8:	sbb    ecx,ecx
640216aa:	and    ecx,0x80000000
640216b0:	or     ebx,ecx
640216b2:	mov    ecx,DWORD PTR ds:0x64030080
640216b8:	or     ebx,DWORD PTR [ebp-0x20]
640216bb:	cmp    ecx,0x40
640216be:	jne    0x640216cd
640216c0:	mov    ecx,DWORD PTR [ebp+0xc]
640216c3:	mov    edx,DWORD PTR [ebp-0x1c]
640216c6:	mov    DWORD PTR [ecx+0x4],ebx
640216c9:	mov    DWORD PTR [ecx],edx
640216cb:	jmp    0x640216d7
640216cd:	cmp    ecx,0x20
640216d0:	jne    0x640216d7
640216d2:	mov    ecx,DWORD PTR [ebp+0xc]
640216d5:	mov    DWORD PTR [ecx],ebx
640216d7:	pop    edi
640216d8:	pop    ebx
640216d9:	leave  
640216da:	ret    
640216db:	push   ebp
640216dc:	mov    ebp,esp
640216de:	sub    esp,0x2c
640216e1:	mov    eax,DWORD PTR [ebp+0x8]
640216e4:	movzx  ecx,WORD PTR [eax+0xa]
640216e8:	push   ebx
640216e9:	mov    ebx,ecx
640216eb:	and    ecx,0x8000
640216f1:	mov    DWORD PTR [ebp-0x14],ecx
640216f4:	mov    ecx,DWORD PTR [eax+0x6]
640216f7:	mov    DWORD PTR [ebp-0x20],ecx
640216fa:	mov    ecx,DWORD PTR [eax+0x2]
640216fd:	movzx  eax,WORD PTR [eax]
64021700:	and    ebx,0x7fff
64021706:	sub    ebx,0x3fff
6402170c:	shl    eax,0x10
6402170f:	cmp    ebx,0xffffc001
64021715:	push   edi
64021716:	mov    DWORD PTR [ebp-0x1c],ecx
64021719:	mov    DWORD PTR [ebp-0x18],eax
6402171c:	jne    0x64021745
6402171e:	xor    ebx,ebx
64021720:	xor    eax,eax
64021722:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
64021726:	jne    0x64021735
64021728:	inc    eax
64021729:	cmp    eax,0x3
6402172c:	jl     0x64021722
6402172e:	xor    eax,eax
64021730:	jmp    0x64021bda
64021735:	xor    eax,eax
64021737:	lea    edi,[ebp-0x20]
6402173a:	stos   DWORD PTR es:[edi],eax
6402173b:	stos   DWORD PTR es:[edi],eax
6402173c:	push   0x2
6402173e:	stos   DWORD PTR es:[edi],eax
6402173f:	pop    eax
64021740:	jmp    0x64021bda
64021745:	and    DWORD PTR [ebp+0x8],0x0
64021749:	push   esi
6402174a:	lea    esi,[ebp-0x20]
6402174d:	lea    edi,[ebp-0x2c]
64021750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021753:	mov    esi,DWORD PTR ds:0x64030090
64021759:	dec    esi
6402175a:	lea    ecx,[esi+0x1]
6402175d:	mov    eax,ecx
6402175f:	cdq    
64021760:	and    edx,0x1f
64021763:	add    eax,edx
64021765:	sar    eax,0x5
64021768:	mov    edx,ecx
6402176a:	and    edx,0x8000001f
64021770:	mov    DWORD PTR [ebp-0x10],ebx
64021773:	mov    DWORD PTR [ebp-0xc],eax
64021776:	jns    0x6402177d
64021778:	dec    edx
64021779:	or     edx,0xffffffe0
6402177c:	inc    edx
6402177d:	lea    edi,[ebp+eax*4-0x20]
64021781:	push   0x1f
64021783:	xor    eax,eax
64021785:	pop    ecx
64021786:	sub    ecx,edx
64021788:	inc    eax
64021789:	shl    eax,cl
6402178b:	mov    DWORD PTR [ebp-0x8],ecx
6402178e:	test   DWORD PTR [edi],eax
64021790:	je     0x64021823
64021796:	mov    eax,DWORD PTR [ebp-0xc]
64021799:	or     edx,0xffffffff
6402179c:	shl    edx,cl
6402179e:	not    edx
640217a0:	test   DWORD PTR [ebp+eax*4-0x20],edx
640217a4:	jmp    0x640217ab
640217a6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
640217ab:	jne    0x640217b5
640217ad:	inc    eax
640217ae:	cmp    eax,0x3
640217b1:	jl     0x640217a6
640217b3:	jmp    0x64021823
640217b5:	mov    eax,esi
640217b7:	cdq    
640217b8:	push   0x1f
640217ba:	pop    ecx
640217bb:	and    edx,ecx
640217bd:	add    eax,edx
640217bf:	sar    eax,0x5
640217c2:	and    esi,0x8000001f
640217c8:	jns    0x640217cf
640217ca:	dec    esi
640217cb:	or     esi,0xffffffe0
640217ce:	inc    esi
640217cf:	and    DWORD PTR [ebp-0x4],0x0
640217d3:	sub    ecx,esi
640217d5:	xor    edx,edx
640217d7:	inc    edx
640217d8:	shl    edx,cl
640217da:	lea    ecx,[ebp+eax*4-0x20]
640217de:	mov    esi,DWORD PTR [ecx]
640217e0:	add    esi,edx
640217e2:	mov    DWORD PTR [ebp+0x8],esi
640217e5:	mov    esi,DWORD PTR [ecx]
640217e7:	cmp    DWORD PTR [ebp+0x8],esi
640217ea:	jb     0x6402180e
640217ec:	cmp    DWORD PTR [ebp+0x8],edx
640217ef:	jmp    0x6402180c
640217f1:	test   ecx,ecx
640217f3:	je     0x64021820
640217f5:	and    DWORD PTR [ebp-0x4],0x0
640217f9:	lea    ecx,[ebp+eax*4-0x20]
640217fd:	mov    edx,DWORD PTR [ecx]
640217ff:	lea    esi,[edx+0x1]
64021802:	cmp    esi,edx
64021804:	mov    DWORD PTR [ebp+0x8],esi
64021807:	jb     0x6402180e
64021809:	cmp    esi,0x1
6402180c:	jae    0x64021815
6402180e:	mov    DWORD PTR [ebp-0x4],0x1
64021815:	dec    eax
64021816:	mov    edx,DWORD PTR [ebp+0x8]
64021819:	mov    DWORD PTR [ecx],edx
6402181b:	mov    ecx,DWORD PTR [ebp-0x4]
6402181e:	jns    0x640217f1
64021820:	mov    DWORD PTR [ebp+0x8],ecx
64021823:	mov    ecx,DWORD PTR [ebp-0x8]
64021826:	or     eax,0xffffffff
64021829:	shl    eax,cl
6402182b:	and    DWORD PTR [edi],eax
6402182d:	mov    eax,DWORD PTR [ebp-0xc]
64021830:	inc    eax
64021831:	cmp    eax,0x3
64021834:	jge    0x64021843
64021836:	push   0x3
64021838:	pop    ecx
64021839:	lea    edi,[ebp+eax*4-0x20]
6402183d:	sub    ecx,eax
6402183f:	xor    eax,eax
64021841:	rep stos DWORD PTR es:[edi],eax
64021843:	cmp    DWORD PTR [ebp+0x8],0x0
64021847:	je     0x6402184a
64021849:	inc    ebx
6402184a:	mov    eax,ds:0x6403008c
6402184f:	mov    ecx,eax
64021851:	sub    ecx,DWORD PTR ds:0x64030090
64021857:	cmp    ebx,ecx
64021859:	jge    0x64021868
6402185b:	xor    eax,eax
6402185d:	lea    edi,[ebp-0x20]
64021860:	stos   DWORD PTR es:[edi],eax
64021861:	stos   DWORD PTR es:[edi],eax
64021862:	stos   DWORD PTR es:[edi],eax
64021863:	jmp    0x64021a75
64021868:	cmp    ebx,eax
6402186a:	jg     0x64021a7f
64021870:	sub    eax,DWORD PTR [ebp-0x10]
64021873:	lea    esi,[ebp-0x2c]
64021876:	mov    ecx,eax
64021878:	lea    edi,[ebp-0x20]
6402187b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402187c:	cdq    
6402187d:	and    edx,0x1f
64021880:	add    eax,edx
64021882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021883:	mov    edx,ecx
64021885:	sar    eax,0x5
64021888:	and    edx,0x8000001f
6402188e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402188f:	jns    0x64021896
64021891:	dec    edx
64021892:	or     edx,0xffffffe0
64021895:	inc    edx
64021896:	and    DWORD PTR [ebp-0xc],0x0
6402189a:	and    DWORD PTR [ebp+0x8],0x0
6402189e:	or     edi,0xffffffff
640218a1:	mov    ecx,edx
640218a3:	shl    edi,cl
640218a5:	mov    DWORD PTR [ebp-0x4],0x20
640218ac:	sub    DWORD PTR [ebp-0x4],edx
640218af:	not    edi
640218b1:	mov    ebx,DWORD PTR [ebp+0x8]
640218b4:	lea    ebx,[ebp+ebx*4-0x20]
640218b8:	mov    esi,DWORD PTR [ebx]
640218ba:	mov    ecx,esi
640218bc:	and    ecx,edi
640218be:	mov    DWORD PTR [ebp-0x10],ecx
640218c1:	mov    ecx,edx
640218c3:	shr    esi,cl
640218c5:	mov    ecx,DWORD PTR [ebp-0x4]
640218c8:	or     esi,DWORD PTR [ebp-0xc]
640218cb:	mov    DWORD PTR [ebx],esi
640218cd:	mov    esi,DWORD PTR [ebp-0x10]
640218d0:	shl    esi,cl
640218d2:	inc    DWORD PTR [ebp+0x8]
640218d5:	cmp    DWORD PTR [ebp+0x8],0x3
640218d9:	mov    DWORD PTR [ebp-0xc],esi
640218dc:	jl     0x640218b1
640218de:	mov    esi,eax
640218e0:	push   0x2
640218e2:	shl    esi,0x2
640218e5:	lea    ecx,[ebp-0x18]
640218e8:	pop    edx
640218e9:	sub    ecx,esi
640218eb:	cmp    edx,eax
640218ed:	jl     0x640218f7
640218ef:	mov    esi,DWORD PTR [ecx]
640218f1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
640218f5:	jmp    0x640218fc
640218f7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
640218fc:	dec    edx
640218fd:	sub    ecx,0x4
64021900:	test   edx,edx
64021902:	jge    0x640218eb
64021904:	mov    esi,DWORD PTR ds:0x64030090
6402190a:	dec    esi
6402190b:	lea    ecx,[esi+0x1]
6402190e:	mov    eax,ecx
64021910:	cdq    
64021911:	and    edx,0x1f
64021914:	add    eax,edx
64021916:	sar    eax,0x5
64021919:	mov    edx,ecx
6402191b:	and    edx,0x8000001f
64021921:	mov    DWORD PTR [ebp-0xc],eax
64021924:	jns    0x6402192b
64021926:	dec    edx
64021927:	or     edx,0xffffffe0
6402192a:	inc    edx
6402192b:	push   0x1f
6402192d:	pop    ecx
6402192e:	sub    ecx,edx
64021930:	xor    edx,edx
64021932:	inc    edx
64021933:	shl    edx,cl
64021935:	lea    ebx,[ebp+eax*4-0x20]
64021939:	mov    DWORD PTR [ebp-0x10],ecx
6402193c:	test   DWORD PTR [ebx],edx
6402193e:	je     0x640219c6
64021944:	or     edx,0xffffffff
64021947:	shl    edx,cl
64021949:	not    edx
6402194b:	test   DWORD PTR [ebp+eax*4-0x20],edx
6402194f:	jmp    0x64021956
64021951:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
64021956:	jne    0x64021960
64021958:	inc    eax
64021959:	cmp    eax,0x3
6402195c:	jl     0x64021951
6402195e:	jmp    0x640219c6
64021960:	mov    eax,esi
64021962:	cdq    
64021963:	push   0x1f
64021965:	pop    ecx
64021966:	and    edx,ecx
64021968:	add    eax,edx
6402196a:	sar    eax,0x5
6402196d:	and    esi,0x8000001f
64021973:	jns    0x6402197a
64021975:	dec    esi
64021976:	or     esi,0xffffffe0
64021979:	inc    esi
6402197a:	and    DWORD PTR [ebp+0x8],0x0
6402197e:	xor    edx,edx
64021980:	sub    ecx,esi
64021982:	inc    edx
64021983:	shl    edx,cl
64021985:	lea    ecx,[ebp+eax*4-0x20]
64021989:	mov    esi,DWORD PTR [ecx]
6402198b:	lea    edi,[esi+edx*1]
6402198e:	cmp    edi,esi
64021990:	jb     0x64021996
64021992:	cmp    edi,edx
64021994:	jae    0x6402199d
64021996:	mov    DWORD PTR [ebp+0x8],0x1
6402199d:	mov    DWORD PTR [ecx],edi
6402199f:	mov    ecx,DWORD PTR [ebp+0x8]
640219a2:	jmp    0x640219c3
640219a4:	test   ecx,ecx
640219a6:	je     0x640219c6
640219a8:	lea    ecx,[ebp+eax*4-0x20]
640219ac:	mov    edx,DWORD PTR [ecx]
640219ae:	lea    esi,[edx+0x1]
640219b1:	xor    edi,edi
640219b3:	cmp    esi,edx
640219b5:	jb     0x640219bc
640219b7:	cmp    esi,0x1
640219ba:	jae    0x640219bf
640219bc:	xor    edi,edi
640219be:	inc    edi
640219bf:	mov    DWORD PTR [ecx],esi
640219c1:	mov    ecx,edi
640219c3:	dec    eax
640219c4:	jns    0x640219a4
640219c6:	mov    ecx,DWORD PTR [ebp-0x10]
640219c9:	or     eax,0xffffffff
640219cc:	shl    eax,cl
640219ce:	and    DWORD PTR [ebx],eax
640219d0:	mov    eax,DWORD PTR [ebp-0xc]
640219d3:	inc    eax
640219d4:	cmp    eax,0x3
640219d7:	jge    0x640219e6
640219d9:	push   0x3
640219db:	pop    ecx
640219dc:	lea    edi,[ebp+eax*4-0x20]
640219e0:	sub    ecx,eax
640219e2:	xor    eax,eax
640219e4:	rep stos DWORD PTR es:[edi],eax
640219e6:	mov    ecx,DWORD PTR ds:0x64030094
640219ec:	inc    ecx
640219ed:	mov    eax,ecx
640219ef:	cdq    
640219f0:	and    edx,0x1f
640219f3:	add    eax,edx
640219f5:	mov    edx,ecx
640219f7:	sar    eax,0x5
640219fa:	and    edx,0x8000001f
64021a00:	jns    0x64021a07
64021a02:	dec    edx
64021a03:	or     edx,0xffffffe0
64021a06:	inc    edx
64021a07:	and    DWORD PTR [ebp-0xc],0x0
64021a0b:	and    DWORD PTR [ebp+0x8],0x0
64021a0f:	or     edi,0xffffffff
64021a12:	mov    ecx,edx
64021a14:	shl    edi,cl
64021a16:	mov    DWORD PTR [ebp-0x4],0x20
64021a1d:	sub    DWORD PTR [ebp-0x4],edx
64021a20:	not    edi
64021a22:	mov    ebx,DWORD PTR [ebp+0x8]
64021a25:	lea    ebx,[ebp+ebx*4-0x20]
64021a29:	mov    esi,DWORD PTR [ebx]
64021a2b:	mov    ecx,esi
64021a2d:	and    ecx,edi
64021a2f:	mov    DWORD PTR [ebp-0x10],ecx
64021a32:	mov    ecx,edx
64021a34:	shr    esi,cl
64021a36:	mov    ecx,DWORD PTR [ebp-0x4]
64021a39:	or     esi,DWORD PTR [ebp-0xc]
64021a3c:	mov    DWORD PTR [ebx],esi
64021a3e:	mov    esi,DWORD PTR [ebp-0x10]
64021a41:	shl    esi,cl
64021a43:	inc    DWORD PTR [ebp+0x8]
64021a46:	cmp    DWORD PTR [ebp+0x8],0x3
64021a4a:	mov    DWORD PTR [ebp-0xc],esi
64021a4d:	jl     0x64021a22
64021a4f:	mov    esi,eax
64021a51:	push   0x2
64021a53:	shl    esi,0x2
64021a56:	lea    ecx,[ebp-0x18]
64021a59:	pop    edx
64021a5a:	sub    ecx,esi
64021a5c:	cmp    edx,eax
64021a5e:	jl     0x64021a68
64021a60:	mov    esi,DWORD PTR [ecx]
64021a62:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021a66:	jmp    0x64021a6d
64021a68:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021a6d:	dec    edx
64021a6e:	sub    ecx,0x4
64021a71:	test   edx,edx
64021a73:	jge    0x64021a5c
64021a75:	push   0x2
64021a77:	xor    ebx,ebx
64021a79:	pop    eax
64021a7a:	jmp    0x64021bd9
64021a7f:	cmp    ebx,DWORD PTR ds:0x64030088
64021a85:	mov    ecx,DWORD PTR ds:0x64030094
64021a8b:	jl     0x64021b3e
64021a91:	xor    eax,eax
64021a93:	lea    edi,[ebp-0x20]
64021a96:	stos   DWORD PTR es:[edi],eax
64021a97:	stos   DWORD PTR es:[edi],eax
64021a98:	stos   DWORD PTR es:[edi],eax
64021a99:	or     DWORD PTR [ebp-0x20],0x80000000
64021aa0:	mov    eax,ecx
64021aa2:	cdq    
64021aa3:	and    edx,0x1f
64021aa6:	add    eax,edx
64021aa8:	mov    edx,ecx
64021aaa:	sar    eax,0x5
64021aad:	and    edx,0x8000001f
64021ab3:	jns    0x64021aba
64021ab5:	dec    edx
64021ab6:	or     edx,0xffffffe0
64021ab9:	inc    edx
64021aba:	and    DWORD PTR [ebp-0xc],0x0
64021abe:	and    DWORD PTR [ebp+0x8],0x0
64021ac2:	or     edi,0xffffffff
64021ac5:	mov    ecx,edx
64021ac7:	shl    edi,cl
64021ac9:	mov    DWORD PTR [ebp-0x4],0x20
64021ad0:	sub    DWORD PTR [ebp-0x4],edx
64021ad3:	not    edi
64021ad5:	mov    ebx,DWORD PTR [ebp+0x8]
64021ad8:	lea    ebx,[ebp+ebx*4-0x20]
64021adc:	mov    esi,DWORD PTR [ebx]
64021ade:	mov    ecx,esi
64021ae0:	and    ecx,edi
64021ae2:	mov    DWORD PTR [ebp-0x10],ecx
64021ae5:	mov    ecx,edx
64021ae7:	shr    esi,cl
64021ae9:	mov    ecx,DWORD PTR [ebp-0x4]
64021aec:	or     esi,DWORD PTR [ebp-0xc]
64021aef:	mov    DWORD PTR [ebx],esi
64021af1:	mov    esi,DWORD PTR [ebp-0x10]
64021af4:	shl    esi,cl
64021af6:	inc    DWORD PTR [ebp+0x8]
64021af9:	cmp    DWORD PTR [ebp+0x8],0x3
64021afd:	mov    DWORD PTR [ebp-0xc],esi
64021b00:	jl     0x64021ad5
64021b02:	mov    esi,eax
64021b04:	push   0x2
64021b06:	shl    esi,0x2
64021b09:	lea    ecx,[ebp-0x18]
64021b0c:	pop    edx
64021b0d:	sub    ecx,esi
64021b0f:	cmp    edx,eax
64021b11:	jl     0x64021b1b
64021b13:	mov    esi,DWORD PTR [ecx]
64021b15:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021b19:	jmp    0x64021b20
64021b1b:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021b20:	dec    edx
64021b21:	sub    ecx,0x4
64021b24:	test   edx,edx
64021b26:	jge    0x64021b0f
64021b28:	mov    eax,ds:0x64030088
64021b2d:	mov    ecx,DWORD PTR ds:0x6403009c
64021b33:	lea    ebx,[ecx+eax*1]
64021b36:	xor    eax,eax
64021b38:	inc    eax
64021b39:	jmp    0x64021bd9
64021b3e:	mov    eax,ds:0x6403009c
64021b43:	and    DWORD PTR [ebp-0x20],0x7fffffff
64021b4a:	add    ebx,eax
64021b4c:	mov    eax,ecx
64021b4e:	cdq    
64021b4f:	and    edx,0x1f
64021b52:	add    eax,edx
64021b54:	mov    edx,ecx
64021b56:	sar    eax,0x5
64021b59:	and    edx,0x8000001f
64021b5f:	jns    0x64021b66
64021b61:	dec    edx
64021b62:	or     edx,0xffffffe0
64021b65:	inc    edx
64021b66:	and    DWORD PTR [ebp-0xc],0x0
64021b6a:	and    DWORD PTR [ebp+0x8],0x0
64021b6e:	or     esi,0xffffffff
64021b71:	mov    ecx,edx
64021b73:	shl    esi,cl
64021b75:	mov    DWORD PTR [ebp-0x4],0x20
64021b7c:	sub    DWORD PTR [ebp-0x4],edx
64021b7f:	not    esi
64021b81:	mov    ecx,DWORD PTR [ebp+0x8]
64021b84:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
64021b88:	mov    ecx,edi
64021b8a:	and    ecx,esi
64021b8c:	mov    DWORD PTR [ebp-0x10],ecx
64021b8f:	mov    ecx,edx
64021b91:	shr    edi,cl
64021b93:	mov    ecx,DWORD PTR [ebp+0x8]
64021b96:	or     edi,DWORD PTR [ebp-0xc]
64021b99:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
64021b9d:	mov    edi,DWORD PTR [ebp-0x10]
64021ba0:	mov    ecx,DWORD PTR [ebp-0x4]
64021ba3:	shl    edi,cl
64021ba5:	inc    DWORD PTR [ebp+0x8]
64021ba8:	cmp    DWORD PTR [ebp+0x8],0x3
64021bac:	mov    DWORD PTR [ebp-0xc],edi
64021baf:	jl     0x64021b81
64021bb1:	mov    esi,eax
64021bb3:	push   0x2
64021bb5:	shl    esi,0x2
64021bb8:	lea    ecx,[ebp-0x18]
64021bbb:	pop    edx
64021bbc:	sub    ecx,esi
64021bbe:	cmp    edx,eax
64021bc0:	jl     0x64021bca
64021bc2:	mov    esi,DWORD PTR [ecx]
64021bc4:	mov    DWORD PTR [ebp+edx*4-0x20],esi
64021bc8:	jmp    0x64021bcf
64021bca:	and    DWORD PTR [ebp+edx*4-0x20],0x0
64021bcf:	dec    edx
64021bd0:	sub    ecx,0x4
64021bd3:	test   edx,edx
64021bd5:	jge    0x64021bbe
64021bd7:	xor    eax,eax
64021bd9:	pop    esi
64021bda:	push   0x1f
64021bdc:	pop    ecx
64021bdd:	sub    ecx,DWORD PTR ds:0x64030094
64021be3:	shl    ebx,cl
64021be5:	mov    ecx,DWORD PTR [ebp-0x14]
64021be8:	neg    ecx
64021bea:	sbb    ecx,ecx
64021bec:	and    ecx,0x80000000
64021bf2:	or     ebx,ecx
64021bf4:	mov    ecx,DWORD PTR ds:0x64030098
64021bfa:	or     ebx,DWORD PTR [ebp-0x20]
64021bfd:	cmp    ecx,0x40
64021c00:	jne    0x64021c0f
64021c02:	mov    ecx,DWORD PTR [ebp+0xc]
64021c05:	mov    edx,DWORD PTR [ebp-0x1c]
64021c08:	mov    DWORD PTR [ecx+0x4],ebx
64021c0b:	mov    DWORD PTR [ecx],edx
64021c0d:	jmp    0x64021c19
64021c0f:	cmp    ecx,0x20
64021c12:	jne    0x64021c19
64021c14:	mov    ecx,DWORD PTR [ebp+0xc]
64021c17:	mov    DWORD PTR [ecx],ebx
64021c19:	pop    edi
64021c1a:	pop    ebx
64021c1b:	leave  
64021c1c:	ret    
64021c1d:	push   ebp
64021c1e:	mov    ebp,esp
64021c20:	sub    esp,0x7c
64021c23:	mov    eax,ds:0x6402f09c
64021c28:	xor    eax,ebp
64021c2a:	mov    DWORD PTR [ebp-0x4],eax
64021c2d:	mov    eax,DWORD PTR [ebp+0x8]
64021c30:	push   ebx
64021c31:	xor    ebx,ebx
64021c33:	push   esi
64021c34:	xor    esi,esi
64021c36:	mov    DWORD PTR [ebp-0x7c],eax
64021c39:	mov    eax,DWORD PTR [ebp+0xc]
64021c3c:	inc    esi
64021c3d:	xor    ecx,ecx
64021c3f:	cmp    DWORD PTR [ebp+0x24],ebx
64021c42:	push   edi
64021c43:	mov    DWORD PTR [ebp-0x70],eax
64021c46:	lea    edi,[ebp-0x20]
64021c49:	mov    DWORD PTR [ebp-0x74],ebx
64021c4c:	mov    DWORD PTR [ebp-0x68],esi
64021c4f:	mov    DWORD PTR [ebp-0x4c],ebx
64021c52:	mov    DWORD PTR [ebp-0x58],ebx
64021c55:	mov    DWORD PTR [ebp-0x5c],ebx
64021c58:	mov    DWORD PTR [ebp-0x60],ebx
64021c5b:	mov    DWORD PTR [ebp-0x64],ebx
64021c5e:	mov    DWORD PTR [ebp-0x50],ebx
64021c61:	mov    DWORD PTR [ebp-0x6c],ebx
64021c64:	jne    0x64021c85
64021c66:	call   0x64015a20
64021c6b:	push   ebx
64021c6c:	push   ebx
64021c6d:	push   ebx
64021c6e:	push   ebx
64021c6f:	push   ebx
64021c70:	mov    DWORD PTR [eax],0x16
64021c76:	call   0x64013794
64021c7b:	add    esp,0x14
64021c7e:	xor    eax,eax
64021c80:	jmp    0x6402229e
64021c85:	mov    edx,DWORD PTR [ebp+0x10]
64021c88:	mov    DWORD PTR [ebp-0x54],edx
64021c8b:	mov    al,BYTE PTR [edx]
64021c8d:	cmp    al,0x20
64021c8f:	je     0x64021c9d
64021c91:	cmp    al,0x9
64021c93:	je     0x64021c9d
64021c95:	cmp    al,0xa
64021c97:	je     0x64021c9d
64021c99:	cmp    al,0xd
64021c9b:	jne    0x64021ca0
64021c9d:	inc    edx
64021c9e:	jmp    0x64021c8b
64021ca0:	mov    bl,0x30
64021ca2:	mov    al,BYTE PTR [edx]
64021ca4:	inc    edx
64021ca5:	cmp    ecx,0xb
64021ca8:	ja     0x64021edd
64021cae:	jmp    DWORD PTR [ecx*4+0x640222ad]
64021cb5:	mov    cl,al
64021cb7:	sub    cl,0x31
64021cba:	cmp    cl,0x8
64021cbd:	ja     0x64021cc5
64021cbf:	push   0x3
64021cc1:	pop    ecx
64021cc2:	dec    edx
64021cc3:	jmp    0x64021ca2
64021cc5:	mov    ecx,DWORD PTR [ebp+0x24]
64021cc8:	mov    ecx,DWORD PTR [ecx]
64021cca:	mov    ecx,DWORD PTR [ecx+0xbc]
64021cd0:	mov    ecx,DWORD PTR [ecx]
64021cd2:	cmp    al,BYTE PTR [ecx]
64021cd4:	jne    0x64021cdb
64021cd6:	push   0x5
64021cd8:	pop    ecx
64021cd9:	jmp    0x64021ca2
64021cdb:	movsx  eax,al
64021cde:	sub    eax,0x2b
64021ce1:	je     0x64021d00
64021ce3:	dec    eax
64021ce4:	dec    eax
64021ce5:	je     0x64021cf4
64021ce7:	sub    eax,0x3
64021cea:	jne    0x64021e7b
64021cf0:	mov    ecx,esi
64021cf2:	jmp    0x64021ca2
64021cf4:	push   0x2
64021cf6:	pop    ecx
64021cf7:	mov    DWORD PTR [ebp-0x74],0x8000
64021cfe:	jmp    0x64021ca2
64021d00:	and    DWORD PTR [ebp-0x74],0x0
64021d04:	push   0x2
64021d06:	pop    ecx
64021d07:	jmp    0x64021ca2
64021d09:	mov    cl,al
64021d0b:	sub    cl,0x31
64021d0e:	cmp    cl,0x8
64021d11:	mov    DWORD PTR [ebp-0x58],esi
64021d14:	jbe    0x64021cbf
64021d16:	mov    ecx,DWORD PTR [ebp+0x24]
64021d19:	mov    ecx,DWORD PTR [ecx]
64021d1b:	mov    ecx,DWORD PTR [ecx+0xbc]
64021d21:	mov    ecx,DWORD PTR [ecx]
64021d23:	cmp    al,BYTE PTR [ecx]
64021d25:	jne    0x64021d2b
64021d27:	push   0x4
64021d29:	jmp    0x64021cd8
64021d2b:	cmp    al,0x2b
64021d2d:	je     0x64021d57
64021d2f:	cmp    al,0x2d
64021d31:	je     0x64021d57
64021d33:	cmp    al,bl
64021d35:	je     0x64021cf0
64021d37:	cmp    al,0x43
64021d39:	jle    0x64021e7b
64021d3f:	cmp    al,0x45
64021d41:	jle    0x64021d53
64021d43:	cmp    al,0x63
64021d45:	jle    0x64021e7b
64021d4b:	cmp    al,0x65
64021d4d:	jg     0x64021e7b
64021d53:	push   0x6
64021d55:	jmp    0x64021cd8
64021d57:	dec    edx
64021d58:	push   0xb
64021d5a:	jmp    0x64021cd8
64021d5f:	mov    cl,al
64021d61:	sub    cl,0x31
64021d64:	cmp    cl,0x8
64021d67:	jbe    0x64021cbf
64021d6d:	mov    ecx,DWORD PTR [ebp+0x24]
64021d70:	mov    ecx,DWORD PTR [ecx]
64021d72:	mov    ecx,DWORD PTR [ecx+0xbc]
64021d78:	mov    ecx,DWORD PTR [ecx]
64021d7a:	cmp    al,BYTE PTR [ecx]
64021d7c:	je     0x64021cd6
64021d82:	cmp    al,bl
64021d84:	je     0x64021cf0
64021d8a:	mov    edx,DWORD PTR [ebp-0x54]
64021d8d:	jmp    0x64021ea6
64021d92:	mov    DWORD PTR [ebp-0x58],esi
64021d95:	jmp    0x64021db1
64021d97:	cmp    al,0x39
64021d99:	jg     0x64021db5
64021d9b:	cmp    DWORD PTR [ebp-0x4c],0x19
64021d9f:	jae    0x64021dab
64021da1:	inc    DWORD PTR [ebp-0x4c]
64021da4:	sub    al,bl
64021da6:	mov    BYTE PTR [edi],al
64021da8:	inc    edi
64021da9:	jmp    0x64021dae
64021dab:	inc    DWORD PTR [ebp-0x50]
64021dae:	mov    al,BYTE PTR [edx]
64021db0:	inc    edx
64021db1:	cmp    al,bl
64021db3:	jge    0x64021d97
64021db5:	mov    ecx,DWORD PTR [ebp+0x24]
64021db8:	mov    ecx,DWORD PTR [ecx]
64021dba:	mov    ecx,DWORD PTR [ecx+0xbc]
64021dc0:	mov    ecx,DWORD PTR [ecx]
64021dc2:	cmp    al,BYTE PTR [ecx]
64021dc4:	je     0x64021d27
64021dca:	cmp    al,0x2b
64021dcc:	je     0x64021d57
64021dce:	cmp    al,0x2d
64021dd0:	je     0x64021d57
64021dd2:	jmp    0x64021d37
64021dd7:	cmp    DWORD PTR [ebp-0x4c],0x0
64021ddb:	mov    DWORD PTR [ebp-0x58],esi
64021dde:	mov    DWORD PTR [ebp-0x5c],esi
64021de1:	jne    0x64021e09
64021de3:	jmp    0x64021deb
64021de5:	dec    DWORD PTR [ebp-0x50]
64021de8:	mov    al,BYTE PTR [edx]
64021dea:	inc    edx
64021deb:	cmp    al,bl
64021ded:	je     0x64021de5
64021def:	jmp    0x64021e09
64021df1:	cmp    al,0x39
64021df3:	jg     0x64021dca
64021df5:	cmp    DWORD PTR [ebp-0x4c],0x19
64021df9:	jae    0x64021e06
64021dfb:	inc    DWORD PTR [ebp-0x4c]
64021dfe:	sub    al,bl
64021e00:	mov    BYTE PTR [edi],al
64021e02:	inc    edi
64021e03:	dec    DWORD PTR [ebp-0x50]
64021e06:	mov    al,BYTE PTR [edx]
64021e08:	inc    edx
64021e09:	cmp    al,bl
64021e0b:	jge    0x64021df1
64021e0d:	jmp    0x64021dca
64021e0f:	sub    al,bl
64021e11:	cmp    al,0x9
64021e13:	mov    DWORD PTR [ebp-0x5c],esi
64021e16:	ja     0x64021d8a
64021e1c:	push   0x4
64021e1e:	jmp    0x64021cc1
64021e23:	lea    ecx,[edx-0x2]
64021e26:	mov    DWORD PTR [ebp-0x54],ecx
64021e29:	mov    cl,al
64021e2b:	sub    cl,0x31
64021e2e:	cmp    cl,0x8
64021e31:	ja     0x64021e3a
64021e33:	push   0x9
64021e35:	jmp    0x64021cc1
64021e3a:	movsx  eax,al
64021e3d:	sub    eax,0x2b
64021e40:	je     0x64021e62
64021e42:	dec    eax
64021e43:	dec    eax
64021e44:	je     0x64021e56
64021e46:	sub    eax,0x3
64021e49:	jne    0x64021d8a
64021e4f:	push   0x8
64021e51:	jmp    0x64021cd8
64021e56:	or     DWORD PTR [ebp-0x68],0xffffffff
64021e5a:	push   0x7
64021e5c:	pop    ecx
64021e5d:	jmp    0x64021ca2
64021e62:	push   0x7
64021e64:	jmp    0x64021cd8
64021e69:	mov    DWORD PTR [ebp-0x60],esi
64021e6c:	jmp    0x64021e71
64021e6e:	mov    al,BYTE PTR [edx]
64021e70:	inc    edx
64021e71:	cmp    al,bl
64021e73:	je     0x64021e6e
64021e75:	sub    al,0x31
64021e77:	cmp    al,0x8
64021e79:	jbe    0x64021e33
64021e7b:	dec    edx
64021e7c:	jmp    0x64021ea6
64021e7e:	mov    cl,al
64021e80:	sub    cl,0x31
64021e83:	cmp    cl,0x8
64021e86:	jbe    0x64021e33
64021e88:	cmp    al,bl
64021e8a:	jmp    0x64021e49
64021e8c:	cmp    DWORD PTR [ebp+0x20],0x0
64021e90:	je     0x64021ed9
64021e92:	movsx  eax,al
64021e95:	sub    eax,0x2b
64021e98:	lea    ecx,[edx-0x1]
64021e9b:	mov    DWORD PTR [ebp-0x54],ecx
64021e9e:	je     0x64021e62
64021ea0:	dec    eax
64021ea1:	dec    eax
64021ea2:	je     0x64021e56
64021ea4:	mov    edx,ecx
64021ea6:	cmp    DWORD PTR [ebp-0x58],0x0
64021eaa:	mov    eax,DWORD PTR [ebp-0x70]
64021ead:	mov    DWORD PTR [eax],edx
64021eaf:	je     0x64022259
64021eb5:	push   0x18
64021eb7:	pop    eax
64021eb8:	cmp    DWORD PTR [ebp-0x4c],eax
64021ebb:	jbe    0x64021ecd
64021ebd:	cmp    BYTE PTR [ebp-0x9],0x5
64021ec1:	jl     0x64021ec6
64021ec3:	inc    BYTE PTR [ebp-0x9]
64021ec6:	dec    edi
64021ec7:	inc    DWORD PTR [ebp-0x50]
64021eca:	mov    DWORD PTR [ebp-0x4c],eax
64021ecd:	cmp    DWORD PTR [ebp-0x4c],0x0
64021ed1:	jbe    0x64022280
64021ed7:	jmp    0x64021f32
64021ed9:	push   0xa
64021edb:	pop    ecx
64021edc:	dec    edx
64021edd:	cmp    ecx,0xa
64021ee0:	jne    0x64021ca2
64021ee6:	jmp    0x64021ea6
64021ee8:	mov    DWORD PTR [ebp-0x60],esi
64021eeb:	xor    ecx,ecx
64021eed:	jmp    0x64021f08
64021eef:	cmp    al,0x39
64021ef1:	jg     0x64021f13
64021ef3:	imul   ecx,ecx,0xa
64021ef6:	movsx  esi,al
64021ef9:	lea    ecx,[ecx+esi*1-0x30]
64021efd:	cmp    ecx,0x1450
64021f03:	jg     0x64021f0e
64021f05:	mov    al,BYTE PTR [edx]
64021f07:	inc    edx
64021f08:	cmp    al,bl
64021f0a:	jge    0x64021eef
64021f0c:	jmp    0x64021f13
64021f0e:	mov    ecx,0x1451
64021f13:	mov    DWORD PTR [ebp-0x64],ecx
64021f16:	jmp    0x64021f23
64021f18:	cmp    al,0x39
64021f1a:	jg     0x64021e7b
64021f20:	mov    al,BYTE PTR [edx]
64021f22:	inc    edx
64021f23:	cmp    al,bl
64021f25:	jge    0x64021f18
64021f27:	jmp    0x64021e7b
64021f2c:	dec    DWORD PTR [ebp-0x4c]
64021f2f:	inc    DWORD PTR [ebp-0x50]
64021f32:	dec    edi
64021f33:	cmp    BYTE PTR [edi],0x0
64021f36:	je     0x64021f2c
64021f38:	lea    eax,[ebp-0x3c]
64021f3b:	push   eax
64021f3c:	push   DWORD PTR [ebp-0x4c]
64021f3f:	lea    eax,[ebp-0x20]
64021f42:	push   eax
64021f43:	call   0x64022fd4
64021f48:	mov    eax,DWORD PTR [ebp-0x64]
64021f4b:	xor    ecx,ecx
64021f4d:	add    esp,0xc
64021f50:	cmp    DWORD PTR [ebp-0x68],ecx
64021f53:	jge    0x64021f57
64021f55:	neg    eax
64021f57:	add    eax,DWORD PTR [ebp-0x50]
64021f5a:	cmp    DWORD PTR [ebp-0x60],ecx
64021f5d:	jne    0x64021f62
64021f5f:	add    eax,DWORD PTR [ebp+0x18]
64021f62:	cmp    DWORD PTR [ebp-0x5c],ecx
64021f65:	jne    0x64021f6a
64021f67:	sub    eax,DWORD PTR [ebp+0x1c]
64021f6a:	cmp    eax,0x1450
64021f6f:	jg     0x64022262
64021f75:	cmp    eax,0xffffebb0
64021f7a:	jl     0x64022279
64021f80:	mov    esi,0x640300a0
64021f85:	sub    esi,0x60
64021f88:	cmp    eax,ecx
64021f8a:	mov    DWORD PTR [ebp-0x54],eax
64021f8d:	je     0x64022247
64021f93:	jge    0x64021fa2
64021f95:	neg    eax
64021f97:	mov    esi,0x64030200
64021f9c:	mov    DWORD PTR [ebp-0x54],eax
64021f9f:	sub    esi,0x60
64021fa2:	cmp    DWORD PTR [ebp+0x14],ecx
64021fa5:	jne    0x64021fab
64021fa7:	mov    WORD PTR [ebp-0x3c],cx
64021fab:	cmp    DWORD PTR [ebp-0x54],ecx
64021fae:	je     0x64022247
64021fb4:	mov    eax,DWORD PTR [ebp-0x54]
64021fb7:	sar    DWORD PTR [ebp-0x54],0x3
64021fbb:	add    esi,0x54
64021fbe:	and    eax,0x7
64021fc1:	test   eax,eax
64021fc3:	mov    DWORD PTR [ebp-0x4c],esi
64021fc6:	je     0x6402223d
64021fcc:	imul   eax,eax,0xc
64021fcf:	add    eax,esi
64021fd1:	mov    ebx,eax
64021fd3:	cmp    WORD PTR [ebx],0x8000
64021fd8:	mov    DWORD PTR [ebp-0x70],ebx
64021fdb:	jb     0x64021ff1
64021fdd:	mov    esi,ebx
64021fdf:	lea    edi,[ebp-0x48]
64021fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021fe4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021fe5:	dec    DWORD PTR [ebp-0x46]
64021fe8:	mov    esi,DWORD PTR [ebp-0x4c]
64021feb:	lea    ebx,[ebp-0x48]
64021fee:	mov    DWORD PTR [ebp-0x70],ebx
64021ff1:	movzx  edx,WORD PTR [ebx+0xa]
64021ff5:	mov    ecx,DWORD PTR [ebp-0x32]
64021ff8:	xor    eax,eax
64021ffa:	mov    DWORD PTR [ebp-0x50],eax
64021ffd:	mov    DWORD PTR [ebp-0x2c],eax
64022000:	mov    DWORD PTR [ebp-0x28],eax
64022003:	mov    DWORD PTR [ebp-0x24],eax
64022006:	mov    eax,edx
64022008:	mov    edi,0x7fff
6402200d:	xor    eax,ecx
6402200f:	and    ecx,edi
64022011:	and    edx,edi
64022013:	and    eax,0x8000
64022018:	cmp    cx,0x7fff
6402201d:	lea    edi,[edx+ecx*1]
64022020:	movzx  edi,di
64022023:	jae    0x64022223
64022029:	cmp    dx,0x7fff
6402202e:	jae    0x64022223
64022034:	cmp    di,0xbffd
64022039:	ja     0x64022223
6402203f:	cmp    di,0x3fbf
64022044:	ja     0x64022053
64022046:	xor    eax,eax
64022048:	mov    DWORD PTR [ebp-0x38],eax
6402204b:	mov    DWORD PTR [ebp-0x3c],eax
6402204e:	jmp    0x6402223a
64022053:	test   cx,cx
64022056:	jne    0x64022077
64022058:	inc    edi
64022059:	test   DWORD PTR [ebp-0x34],0x7fffffff
64022060:	jne    0x64022077
64022062:	cmp    DWORD PTR [ebp-0x38],0x0
64022066:	jne    0x64022077
64022068:	cmp    DWORD PTR [ebp-0x3c],0x0
6402206c:	jne    0x64022077
6402206e:	and    WORD PTR [ebp-0x32],cx
64022072:	jmp    0x6402223d
64022077:	xor    ecx,ecx
64022079:	cmp    dx,cx
6402207c:	jne    0x6402209f
6402207e:	inc    edi
6402207f:	test   DWORD PTR [ebx+0x8],0x7fffffff
64022086:	jne    0x6402209f
64022088:	cmp    DWORD PTR [ebx+0x4],ecx
6402208b:	jne    0x6402209f
6402208d:	cmp    DWORD PTR [ebx],ecx
6402208f:	jne    0x6402209f
64022091:	mov    DWORD PTR [ebp-0x34],ecx
64022094:	mov    DWORD PTR [ebp-0x38],ecx
64022097:	mov    DWORD PTR [ebp-0x3c],ecx
6402209a:	jmp    0x6402223d
6402209f:	and    DWORD PTR [ebp-0x68],ecx
640220a2:	lea    esi,[ebp-0x28]
640220a5:	mov    DWORD PTR [ebp-0x58],0x5
640220ac:	mov    ecx,DWORD PTR [ebp-0x68]
640220af:	mov    edx,DWORD PTR [ebp-0x58]
640220b2:	add    ecx,ecx
640220b4:	test   edx,edx
640220b6:	mov    DWORD PTR [ebp-0x64],edx
640220b9:	jle    0x64022110
640220bb:	lea    ecx,[ebp+ecx*1-0x3c]
640220bf:	add    ebx,0x8
640220c2:	mov    DWORD PTR [ebp-0x5c],ecx
640220c5:	mov    DWORD PTR [ebp-0x60],ebx
640220c8:	mov    ecx,DWORD PTR [ebp-0x60]
640220cb:	mov    edx,DWORD PTR [ebp-0x5c]
640220ce:	movzx  edx,WORD PTR [edx]
640220d1:	movzx  ecx,WORD PTR [ecx]
640220d4:	and    DWORD PTR [ebp-0x78],0x0
640220d8:	imul   ecx,edx
640220db:	mov    edx,DWORD PTR [esi-0x4]
640220de:	lea    ebx,[edx+ecx*1]
640220e1:	cmp    ebx,edx
640220e3:	jb     0x640220e9
640220e5:	cmp    ebx,ecx
640220e7:	jae    0x640220f0
640220e9:	mov    DWORD PTR [ebp-0x78],0x1
640220f0:	cmp    DWORD PTR [ebp-0x78],0x0
640220f4:	mov    DWORD PTR [esi-0x4],ebx
640220f7:	je     0x640220fc
640220f9:	inc    WORD PTR [esi]
640220fc:	add    DWORD PTR [ebp-0x5c],0x2
64022100:	sub    DWORD PTR [ebp-0x60],0x2
64022104:	dec    DWORD PTR [ebp-0x64]
64022107:	cmp    DWORD PTR [ebp-0x64],0x0
6402210b:	jg     0x640220c8
6402210d:	mov    ebx,DWORD PTR [ebp-0x70]
64022110:	inc    esi
64022111:	inc    esi
64022112:	inc    DWORD PTR [ebp-0x68]
64022115:	dec    DWORD PTR [ebp-0x58]
64022118:	cmp    DWORD PTR [ebp-0x58],0x0
6402211c:	jg     0x640220ac
6402211e:	add    edi,0xc002
64022124:	test   di,di
64022127:	jle    0x64022164
64022129:	test   DWORD PTR [ebp-0x24],0x80000000
64022130:	jne    0x6402215f
64022132:	mov    esi,DWORD PTR [ebp-0x28]
64022135:	mov    ecx,DWORD PTR [ebp-0x2c]
64022138:	shl    DWORD PTR [ebp-0x2c],1
6402213b:	shr    ecx,0x1f
6402213e:	mov    edx,esi
64022140:	add    esi,esi
64022142:	or     esi,ecx
64022144:	mov    ecx,DWORD PTR [ebp-0x24]
64022147:	shr    edx,0x1f
6402214a:	add    ecx,ecx
6402214c:	or     ecx,edx
6402214e:	add    edi,0xffff
64022154:	test   di,di
64022157:	mov    DWORD PTR [ebp-0x28],esi
6402215a:	mov    DWORD PTR [ebp-0x24],ecx
6402215d:	jg     0x64022129
6402215f:	test   di,di
64022162:	jg     0x640221b1
64022164:	add    edi,0xffff
6402216a:	test   di,di
6402216d:	jge    0x640221b1
6402216f:	mov    ecx,edi
64022171:	neg    ecx
64022173:	movzx  esi,cx
64022176:	add    edi,esi
64022178:	test   BYTE PTR [ebp-0x2c],0x1
6402217c:	je     0x64022181
6402217e:	inc    DWORD PTR [ebp-0x50]
64022181:	mov    ecx,DWORD PTR [ebp-0x24]
64022184:	mov    ebx,DWORD PTR [ebp-0x28]
64022187:	mov    edx,DWORD PTR [ebp-0x28]
6402218a:	shr    DWORD PTR [ebp-0x24],1
6402218d:	shl    ecx,0x1f
64022190:	shr    ebx,1
64022192:	or     ebx,ecx
64022194:	mov    ecx,DWORD PTR [ebp-0x2c]
64022197:	shl    edx,0x1f
6402219a:	shr    ecx,1
6402219c:	or     ecx,edx
6402219e:	dec    esi
6402219f:	mov    DWORD PTR [ebp-0x28],ebx
640221a2:	mov    DWORD PTR [ebp-0x2c],ecx
640221a5:	jne    0x64022178
640221a7:	cmp    DWORD PTR [ebp-0x50],esi
640221aa:	je     0x640221b1
640221ac:	or     WORD PTR [ebp-0x2c],0x1
640221b1:	cmp    WORD PTR [ebp-0x2c],0x8000
640221b7:	ja     0x640221ca
640221b9:	mov    ecx,DWORD PTR [ebp-0x2c]
640221bc:	and    ecx,0x1ffff
640221c2:	cmp    ecx,0x18000
640221c8:	jne    0x640221fd
640221ca:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
640221ce:	jne    0x640221fa
640221d0:	and    DWORD PTR [ebp-0x2a],0x0
640221d4:	cmp    DWORD PTR [ebp-0x26],0xffffffff
640221d8:	jne    0x640221f5
640221da:	and    DWORD PTR [ebp-0x26],0x0
640221de:	cmp    WORD PTR [ebp-0x22],0xffff
640221e4:	jne    0x640221ef
640221e6:	mov    WORD PTR [ebp-0x22],0x8000
640221ec:	inc    edi
640221ed:	jmp    0x640221fd
640221ef:	inc    WORD PTR [ebp-0x22]
640221f3:	jmp    0x640221fd
640221f5:	inc    DWORD PTR [ebp-0x26]
640221f8:	jmp    0x640221fd
640221fa:	inc    DWORD PTR [ebp-0x2a]
640221fd:	cmp    di,0x7fff
64022202:	mov    esi,DWORD PTR [ebp-0x4c]
64022205:	jae    0x64022223
64022207:	mov    cx,WORD PTR [ebp-0x2a]
6402220b:	mov    WORD PTR [ebp-0x3c],cx
6402220f:	mov    ecx,DWORD PTR [ebp-0x28]
64022212:	mov    DWORD PTR [ebp-0x3a],ecx
64022215:	mov    ecx,DWORD PTR [ebp-0x24]
64022218:	or     edi,eax
6402221a:	mov    DWORD PTR [ebp-0x36],ecx
6402221d:	mov    WORD PTR [ebp-0x32],di
64022221:	jmp    0x6402223d
64022223:	neg    ax
64022226:	sbb    eax,eax
64022228:	and    DWORD PTR [ebp-0x38],0x0
6402222c:	and    eax,0x80000000
64022231:	add    eax,0x7fff8000
64022236:	and    DWORD PTR [ebp-0x3c],0x0
6402223a:	mov    DWORD PTR [ebp-0x34],eax
6402223d:	cmp    DWORD PTR [ebp-0x54],0x0
64022241:	jne    0x64021fb4
64022247:	mov    eax,DWORD PTR [ebp-0x34]
6402224a:	movzx  ecx,WORD PTR [ebp-0x3c]
6402224e:	mov    esi,DWORD PTR [ebp-0x3a]
64022251:	mov    edx,DWORD PTR [ebp-0x36]
64022254:	shr    eax,0x10
64022257:	jmp    0x64022288
64022259:	mov    DWORD PTR [ebp-0x6c],0x4
64022260:	jmp    0x64022280
64022262:	xor    esi,esi
64022264:	mov    eax,0x7fff
64022269:	mov    edx,0x80000000
6402226e:	xor    ecx,ecx
64022270:	mov    DWORD PTR [ebp-0x6c],0x2
64022277:	jmp    0x64022288
64022279:	mov    DWORD PTR [ebp-0x6c],0x1
64022280:	xor    ecx,ecx
64022282:	xor    eax,eax
64022284:	xor    edx,edx
64022286:	xor    esi,esi
64022288:	mov    edi,DWORD PTR [ebp-0x7c]
6402228b:	or     eax,DWORD PTR [ebp-0x74]
6402228e:	mov    WORD PTR [edi],cx
64022291:	mov    WORD PTR [edi+0xa],ax
64022295:	mov    eax,DWORD PTR [ebp-0x6c]
64022298:	mov    DWORD PTR [edi+0x2],esi
6402229b:	mov    DWORD PTR [edi+0x6],edx
6402229e:	mov    ecx,DWORD PTR [ebp-0x4]
640222a1:	pop    edi
640222a2:	pop    esi
640222a3:	xor    ecx,ebp
640222a5:	pop    ebx
640222a6:	call   0x64013c5c
640222ab:	leave  
640222ac:	ret    
640222ad:	mov    ch,0x1c
640222af:	add    ah,BYTE PTR [ecx+ecx*1+0x1d]
640222b3:	add    ah,BYTE PTR [edi+ebx*2+0x1d]
640222b7:	add    ah,BYTE PTR [edx+edx*4+0x1d]
640222bb:	add    ah,BYTE PTR [edi+edx*8+0x1d]
640222bf:	add    ah,BYTE PTR [edi+ecx*1+0x1e]
640222c3:	add    ah,BYTE PTR [ebx+eiz*1+0x1e]
640222c7:	add    ah,BYTE PTR [esi+edi*2+0x1e]
640222cb:	add    ah,BYTE PTR [ecx+ebp*2+0x1e]
640222cf:	add    ah,BYTE PTR [eax+ebp*8+0x1e]
640222d3:	add    ah,BYTE PTR [ebp+ebx*8+0x1e]
640222d7:	add    ah,BYTE PTR [esp+ecx*4+0x1e]
640222db:	add    ah,BYTE PTR [ebp+edx*2-0x75]
640222df:	in     al,dx
640222e0:	sub    esp,0x74
640222e3:	mov    eax,ds:0x6402f09c
640222e8:	xor    eax,ebp
640222ea:	mov    DWORD PTR [ebp-0x4],eax
640222ed:	push   ebx
640222ee:	mov    ebx,DWORD PTR [ebp+0x1c]
640222f1:	push   esi
640222f2:	push   edi
640222f3:	lea    esi,[ebp+0x8]
640222f6:	lea    edi,[ebp-0x10]
640222f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640222fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640222fb:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
640222fd:	mov    edx,DWORD PTR [ebp-0x8]
64022300:	mov    ecx,edx
64022302:	mov    eax,0x8000
64022307:	and    ecx,eax
64022309:	and    edx,0x7fff
6402230f:	test   cx,cx
64022312:	mov    DWORD PTR [ebp-0x60],ebx
64022315:	mov    BYTE PTR [ebp-0x30],0xcc
64022319:	mov    BYTE PTR [ebp-0x2f],0xcc
6402231d:	mov    BYTE PTR [ebp-0x2e],0xcc
64022321:	mov    BYTE PTR [ebp-0x2d],0xcc
64022325:	mov    BYTE PTR [ebp-0x2c],0xcc
64022329:	mov    BYTE PTR [ebp-0x2b],0xcc
6402232d:	mov    BYTE PTR [ebp-0x2a],0xcc
64022331:	mov    BYTE PTR [ebp-0x29],0xcc
64022335:	mov    BYTE PTR [ebp-0x28],0xcc
64022339:	mov    BYTE PTR [ebp-0x27],0xcc
6402233d:	mov    BYTE PTR [ebp-0x26],0xfb
64022341:	mov    BYTE PTR [ebp-0x25],0x3f
64022345:	mov    DWORD PTR [ebp-0x74],0x1
6402234c:	mov    DWORD PTR [ebp-0x6c],ecx
6402234f:	je     0x64022357
64022351:	mov    BYTE PTR [ebx+0x2],0x2d
64022355:	jmp    0x6402235b
64022357:	mov    BYTE PTR [ebx+0x2],0x20
6402235b:	test   dx,dx
6402235e:	mov    esi,DWORD PTR [ebp-0xc]
64022361:	mov    edi,DWORD PTR [ebp-0x10]
64022364:	jne    0x64022394
64022366:	test   esi,esi
64022368:	jne    0x64022394
6402236a:	test   edi,edi
6402236c:	jne    0x64022394
6402236e:	and    WORD PTR [ebx],di
64022371:	cmp    cx,ax
64022374:	setne  al
64022377:	dec    al
64022379:	and    al,0xd
6402237b:	add    al,0x20
6402237d:	mov    BYTE PTR [ebx+0x2],al
64022380:	mov    BYTE PTR [ebx+0x3],0x1
64022384:	mov    BYTE PTR [ebx+0x4],0x30
64022388:	mov    BYTE PTR [ebx+0x5],0x0
6402238c:	xor    eax,eax
6402238e:	inc    eax
6402238f:	jmp    0x64022b5b
64022394:	cmp    dx,0x7fff
64022399:	jne    0x6402243d
6402239f:	mov    eax,0x80000000
640223a4:	cmp    esi,eax
640223a6:	mov    WORD PTR [ebx],0x1
640223ab:	jne    0x640223b1
640223ad:	test   edi,edi
640223af:	je     0x640223c0
640223b1:	test   esi,0x40000000
640223b7:	jne    0x640223c0
640223b9:	push   0x64028658
640223be:	jmp    0x64022411
640223c0:	test   cx,cx
640223c3:	je     0x640223d8
640223c5:	cmp    esi,0xc0000000
640223cb:	jne    0x640223d8
640223cd:	test   edi,edi
640223cf:	jne    0x6402240c
640223d1:	push   0x64028650
640223d6:	jmp    0x640223e5
640223d8:	cmp    esi,eax
640223da:	jne    0x6402240c
640223dc:	test   edi,edi
640223de:	jne    0x6402240c
640223e0:	push   0x64028648
640223e5:	lea    eax,[ebx+0x4]
640223e8:	push   0x16
640223ea:	push   eax
640223eb:	call   0x64015618
640223f0:	add    esp,0xc
640223f3:	xor    esi,esi
640223f5:	test   eax,eax
640223f7:	je     0x64022406
640223f9:	push   esi
640223fa:	push   esi
640223fb:	push   esi
640223fc:	push   esi
640223fd:	push   esi
640223fe:	call   0x64013698
64022403:	add    esp,0x14
64022406:	mov    BYTE PTR [ebx+0x3],0x5
6402240a:	jmp    0x64022436
6402240c:	push   0x64028640
64022411:	lea    eax,[ebx+0x4]
64022414:	push   0x16
64022416:	push   eax
64022417:	call   0x64015618
6402241c:	add    esp,0xc
6402241f:	xor    esi,esi
64022421:	test   eax,eax
64022423:	je     0x64022432
64022425:	push   esi
64022426:	push   esi
64022427:	push   esi
64022428:	push   esi
64022429:	push   esi
6402242a:	call   0x64013698
6402242f:	add    esp,0x14
64022432:	mov    BYTE PTR [ebx+0x3],0x6
64022436:	xor    eax,eax
64022438:	jmp    0x64022b5b
6402243d:	movzx  ecx,dx
64022440:	mov    ebx,ecx
64022442:	imul   ecx,ecx,0x4d10
64022448:	shr    ebx,0x8
6402244b:	mov    eax,esi
6402244d:	shr    eax,0x18
64022450:	lea    eax,[ebx+eax*2]
64022453:	imul   eax,eax,0x4d
64022456:	lea    eax,[eax+ecx*1-0x134312f4]
6402245d:	sar    eax,0x10
64022460:	movzx  ecx,ax
64022463:	movsx  ebx,cx
64022466:	mov    DWORD PTR [ebp-0x4c],ecx
64022469:	xor    eax,eax
6402246b:	mov    ecx,0x640300a0
64022470:	neg    ebx
64022472:	sub    ecx,0x60
64022475:	cmp    ebx,eax
64022477:	mov    WORD PTR [ebp-0x16],dx
6402247b:	mov    DWORD PTR [ebp-0x1a],esi
6402247e:	mov    DWORD PTR [ebp-0x1e],edi
64022481:	mov    WORD PTR [ebp-0x20],ax
64022485:	mov    DWORD PTR [ebp-0x68],ecx
64022488:	je     0x6402273c
6402248e:	jge    0x6402249d
64022490:	mov    ecx,0x64030200
64022495:	neg    ebx
64022497:	sub    ecx,0x60
6402249a:	mov    DWORD PTR [ebp-0x68],ecx
6402249d:	cmp    ebx,eax
6402249f:	je     0x6402273c
640224a5:	add    DWORD PTR [ebp-0x68],0x54
640224a9:	mov    ecx,ebx
640224ab:	and    ecx,0x7
640224ae:	sar    ebx,0x3
640224b1:	test   ecx,ecx
640224b3:	je     0x64022732
640224b9:	imul   ecx,ecx,0xc
640224bc:	add    ecx,DWORD PTR [ebp-0x68]
640224bf:	cmp    WORD PTR [ecx],0x8000
640224c4:	mov    DWORD PTR [ebp-0x64],ecx
640224c7:	jb     0x640224dc
640224c9:	mov    esi,ecx
640224cb:	lea    edi,[ebp-0x3c]
640224ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640224cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640224d0:	lea    eax,[ebp-0x3c]
640224d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640224d4:	dec    DWORD PTR [ebp-0x3a]
640224d7:	mov    DWORD PTR [ebp-0x64],eax
640224da:	mov    ecx,eax
640224dc:	movzx  edi,WORD PTR [ecx+0xa]
640224e0:	mov    edx,DWORD PTR [ebp-0x16]
640224e3:	xor    eax,eax
640224e5:	mov    ecx,edi
640224e7:	mov    esi,0x7fff
640224ec:	xor    ecx,edx
640224ee:	and    edx,esi
640224f0:	and    edi,esi
640224f2:	mov    DWORD PTR [ebp-0x48],eax
640224f5:	mov    DWORD PTR [ebp-0x10],eax
640224f8:	mov    DWORD PTR [ebp-0xc],eax
640224fb:	mov    DWORD PTR [ebp-0x8],eax
640224fe:	and    ecx,0x8000
64022504:	cmp    dx,si
64022507:	lea    eax,[edi+edx*1]
6402250a:	movzx  eax,ax
6402250d:	jae    0x64022716
64022513:	cmp    di,si
64022516:	jae    0x64022716
6402251c:	cmp    ax,0xbffd
64022520:	ja     0x64022716
64022526:	cmp    ax,0x3fbf
6402252a:	ja     0x6402253c
6402252c:	xor    eax,eax
6402252e:	mov    DWORD PTR [ebp-0x18],eax
64022531:	mov    DWORD PTR [ebp-0x1c],eax
64022534:	mov    DWORD PTR [ebp-0x20],eax
64022537:	jmp    0x64022732
6402253c:	xor    esi,esi
6402253e:	cmp    dx,si
64022541:	jne    0x64022560
64022543:	inc    eax
64022544:	test   DWORD PTR [ebp-0x18],0x7fffffff
6402254b:	jne    0x64022560
6402254d:	cmp    DWORD PTR [ebp-0x1c],esi
64022550:	jne    0x64022560
64022552:	cmp    DWORD PTR [ebp-0x20],esi
64022555:	jne    0x64022560
64022557:	mov    WORD PTR [ebp-0x16],si
6402255b:	jmp    0x64022732
64022560:	cmp    di,si
64022563:	jne    0x64022589
64022565:	mov    edx,DWORD PTR [ebp-0x64]
64022568:	inc    eax
64022569:	test   DWORD PTR [edx+0x8],0x7fffffff
64022570:	jne    0x64022589
64022572:	cmp    DWORD PTR [edx+0x4],esi
64022575:	jne    0x64022589
64022577:	cmp    DWORD PTR [edx],esi
64022579:	jne    0x64022589
6402257b:	mov    DWORD PTR [ebp-0x18],esi
6402257e:	mov    DWORD PTR [ebp-0x1c],esi
64022581:	mov    DWORD PTR [ebp-0x20],esi
64022584:	jmp    0x64022732
64022589:	lea    edi,[ebp-0xc]
6402258c:	mov    DWORD PTR [ebp-0x5c],esi
6402258f:	mov    DWORD PTR [ebp-0x44],edi
64022592:	mov    DWORD PTR [ebp-0x40],0x5
64022599:	mov    edx,DWORD PTR [ebp-0x5c]
6402259c:	mov    esi,DWORD PTR [ebp-0x40]
6402259f:	add    edx,edx
640225a1:	test   esi,esi
640225a3:	mov    DWORD PTR [ebp-0x50],esi
640225a6:	jle    0x64022600
640225a8:	lea    edx,[ebp+edx*1-0x20]
640225ac:	mov    DWORD PTR [ebp-0x58],edx
640225af:	mov    edx,DWORD PTR [ebp-0x64]
640225b2:	add    edx,0x8
640225b5:	mov    DWORD PTR [ebp-0x54],edx
640225b8:	mov    edx,DWORD PTR [ebp-0x58]
640225bb:	mov    esi,DWORD PTR [ebp-0x54]
640225be:	movzx  esi,WORD PTR [esi]
640225c1:	movzx  edx,WORD PTR [edx]
640225c4:	mov    edi,DWORD PTR [edi-0x4]
640225c7:	imul   edx,esi
640225ca:	and    DWORD PTR [ebp-0x70],0x0
640225ce:	lea    esi,[edi+edx*1]
640225d1:	cmp    esi,edi
640225d3:	jb     0x640225d9
640225d5:	cmp    esi,edx
640225d7:	jae    0x640225e0
640225d9:	mov    DWORD PTR [ebp-0x70],0x1
640225e0:	cmp    DWORD PTR [ebp-0x70],0x0
640225e4:	mov    edi,DWORD PTR [ebp-0x44]
640225e7:	mov    DWORD PTR [edi-0x4],esi
640225ea:	je     0x640225ef
640225ec:	inc    WORD PTR [edi]
640225ef:	add    DWORD PTR [ebp-0x58],0x2
640225f3:	sub    DWORD PTR [ebp-0x54],0x2
640225f7:	dec    DWORD PTR [ebp-0x50]
640225fa:	cmp    DWORD PTR [ebp-0x50],0x0
640225fe:	jg     0x640225b8
64022600:	inc    edi
64022601:	inc    edi
64022602:	inc    DWORD PTR [ebp-0x5c]
64022605:	dec    DWORD PTR [ebp-0x40]
64022608:	cmp    DWORD PTR [ebp-0x40],0x0
6402260c:	mov    DWORD PTR [ebp-0x44],edi
6402260f:	jg     0x64022599
64022611:	add    eax,0xc002
64022616:	test   ax,ax
64022619:	jle    0x64022656
6402261b:	test   DWORD PTR [ebp-0x8],0x80000000
64022622:	jne    0x64022651
64022624:	mov    edx,DWORD PTR [ebp-0x10]
64022627:	mov    edi,DWORD PTR [ebp-0xc]
6402262a:	mov    esi,DWORD PTR [ebp-0xc]
6402262d:	shl    DWORD PTR [ebp-0x10],1
64022630:	shr    edx,0x1f
64022633:	add    edi,edi
64022635:	or     edi,edx
64022637:	mov    edx,DWORD PTR [ebp-0x8]
6402263a:	shr    esi,0x1f
6402263d:	add    edx,edx
6402263f:	or     edx,esi
64022641:	add    eax,0xffff
64022646:	test   ax,ax
64022649:	mov    DWORD PTR [ebp-0xc],edi
6402264c:	mov    DWORD PTR [ebp-0x8],edx
6402264f:	jg     0x6402261b
64022651:	test   ax,ax
64022654:	jg     0x640226a8
64022656:	add    eax,0xffff
6402265b:	test   ax,ax
6402265e:	jge    0x640226a8
64022660:	mov    edx,eax
64022662:	neg    edx
64022664:	movzx  edx,dx
64022667:	mov    DWORD PTR [ebp-0x44],edx
6402266a:	add    eax,edx
6402266c:	test   BYTE PTR [ebp-0x10],0x1
64022670:	je     0x64022675
64022672:	inc    DWORD PTR [ebp-0x48]
64022675:	mov    edx,DWORD PTR [ebp-0x8]
64022678:	mov    edi,DWORD PTR [ebp-0xc]
6402267b:	mov    esi,DWORD PTR [ebp-0xc]
6402267e:	shr    DWORD PTR [ebp-0x8],1
64022681:	shl    edx,0x1f
64022684:	shr    edi,1
64022686:	or     edi,edx
64022688:	mov    edx,DWORD PTR [ebp-0x10]
6402268b:	shl    esi,0x1f
6402268e:	shr    edx,1
64022690:	or     edx,esi
64022692:	dec    DWORD PTR [ebp-0x44]
64022695:	mov    DWORD PTR [ebp-0xc],edi
64022698:	mov    DWORD PTR [ebp-0x10],edx
6402269b:	jne    0x6402266c
6402269d:	cmp    DWORD PTR [ebp-0x48],0x0
640226a1:	je     0x640226a8
640226a3:	or     WORD PTR [ebp-0x10],0x1
640226a8:	cmp    WORD PTR [ebp-0x10],0x8000
640226ae:	ja     0x640226c1
640226b0:	mov    edx,DWORD PTR [ebp-0x10]
640226b3:	and    edx,0x1ffff
640226b9:	cmp    edx,0x18000
640226bf:	jne    0x640226f4
640226c1:	cmp    DWORD PTR [ebp-0xe],0xffffffff
640226c5:	jne    0x640226f1
640226c7:	and    DWORD PTR [ebp-0xe],0x0
640226cb:	cmp    DWORD PTR [ebp-0xa],0xffffffff
640226cf:	jne    0x640226ec
640226d1:	and    DWORD PTR [ebp-0xa],0x0
640226d5:	cmp    WORD PTR [ebp-0x6],0xffff
640226db:	jne    0x640226e6
640226dd:	mov    WORD PTR [ebp-0x6],0x8000
640226e3:	inc    eax
640226e4:	jmp    0x640226f4
640226e6:	inc    WORD PTR [ebp-0x6]
640226ea:	jmp    0x640226f4
640226ec:	inc    DWORD PTR [ebp-0xa]
640226ef:	jmp    0x640226f4
640226f1:	inc    DWORD PTR [ebp-0xe]
640226f4:	cmp    ax,0x7fff
640226f8:	jae    0x64022716
640226fa:	mov    dx,WORD PTR [ebp-0xe]
640226fe:	mov    WORD PTR [ebp-0x20],dx
64022702:	mov    edx,DWORD PTR [ebp-0xc]
64022705:	mov    DWORD PTR [ebp-0x1e],edx
64022708:	mov    edx,DWORD PTR [ebp-0x8]
6402270b:	or     eax,ecx
6402270d:	mov    DWORD PTR [ebp-0x1a],edx
64022710:	mov    WORD PTR [ebp-0x16],ax
64022714:	jmp    0x64022732
64022716:	neg    cx
64022719:	sbb    ecx,ecx
6402271b:	and    DWORD PTR [ebp-0x1c],0x0
6402271f:	and    ecx,0x80000000
64022725:	add    ecx,0x7fff8000
6402272b:	and    DWORD PTR [ebp-0x20],0x0
6402272f:	mov    DWORD PTR [ebp-0x18],ecx
64022732:	test   ebx,ebx
64022734:	jne    0x640224a5
6402273a:	xor    eax,eax
6402273c:	mov    ecx,DWORD PTR [ebp-0x18]
6402273f:	shr    ecx,0x10
64022742:	cmp    cx,0x3fff
64022747:	mov    ebx,0x7fff
6402274c:	jb     0x6402299a
64022752:	mov    esi,DWORD PTR [ebp-0x26]
64022755:	inc    DWORD PTR [ebp-0x4c]
64022758:	movzx  edx,cx
6402275b:	mov    ecx,esi
6402275d:	xor    ecx,edx
6402275f:	and    edx,ebx
64022761:	and    esi,ebx
64022763:	and    ecx,0x8000
64022769:	cmp    dx,bx
6402276c:	lea    edi,[esi+edx*1]
6402276f:	mov    DWORD PTR [ebp-0x58],eax
64022772:	mov    DWORD PTR [ebp-0x10],eax
64022775:	mov    DWORD PTR [ebp-0xc],eax
64022778:	mov    DWORD PTR [ebp-0x8],eax
6402277b:	movzx  edi,di
6402277e:	jae    0x64022980
64022784:	cmp    si,bx
64022787:	jae    0x64022980
6402278d:	cmp    di,0xbffd
64022792:	ja     0x64022980
64022798:	cmp    di,0x3fbf
6402279d:	ja     0x640227a7
6402279f:	mov    DWORD PTR [ebp-0x18],eax
640227a2:	jmp    0x64022994
640227a7:	cmp    dx,ax
640227aa:	jne    0x640227c9
640227ac:	inc    edi
640227ad:	test   DWORD PTR [ebp-0x18],0x7fffffff
640227b4:	jne    0x640227c9
640227b6:	cmp    DWORD PTR [ebp-0x1c],eax
640227b9:	jne    0x640227c9
640227bb:	cmp    DWORD PTR [ebp-0x20],eax
640227be:	jne    0x640227c9
640227c0:	mov    WORD PTR [ebp-0x16],ax
640227c4:	jmp    0x6402299a
640227c9:	cmp    si,ax
640227cc:	jne    0x640227e2
640227ce:	inc    edi
640227cf:	test   DWORD PTR [ebp-0x28],0x7fffffff
640227d6:	jne    0x640227e2
640227d8:	cmp    DWORD PTR [ebp-0x2c],eax
640227db:	jne    0x640227e2
640227dd:	cmp    DWORD PTR [ebp-0x30],eax
640227e0:	je     0x6402279f
640227e2:	and    DWORD PTR [ebp-0x54],0x0
640227e6:	lea    eax,[ebp-0xc]
640227e9:	mov    DWORD PTR [ebp-0x40],0x5
640227f0:	mov    edx,DWORD PTR [ebp-0x54]
640227f3:	mov    esi,DWORD PTR [ebp-0x40]
640227f6:	add    edx,edx
640227f8:	test   esi,esi
640227fa:	mov    DWORD PTR [ebp-0x50],esi
640227fd:	jle    0x64022851
640227ff:	lea    esi,[ebp-0x28]
64022802:	lea    edx,[ebp+edx*1-0x20]
64022806:	mov    DWORD PTR [ebp-0x5c],esi
64022809:	mov    DWORD PTR [ebp-0x48],edx
6402280c:	mov    edx,DWORD PTR [ebp-0x5c]
6402280f:	mov    esi,DWORD PTR [ebp-0x48]
64022812:	movzx  esi,WORD PTR [esi]
64022815:	movzx  edx,WORD PTR [edx]
64022818:	and    DWORD PTR [ebp-0x44],0x0
6402281c:	imul   edx,esi
6402281f:	mov    esi,DWORD PTR [eax-0x4]
64022822:	lea    ebx,[esi+edx*1]
64022825:	cmp    ebx,esi
64022827:	jb     0x6402282d
64022829:	cmp    ebx,edx
6402282b:	jae    0x64022834
6402282d:	mov    DWORD PTR [ebp-0x44],0x1
64022834:	cmp    DWORD PTR [ebp-0x44],0x0
64022838:	mov    DWORD PTR [eax-0x4],ebx
6402283b:	je     0x64022840
6402283d:	inc    WORD PTR [eax]
64022840:	add    DWORD PTR [ebp-0x48],0x2
64022844:	sub    DWORD PTR [ebp-0x5c],0x2
64022848:	dec    DWORD PTR [ebp-0x50]
6402284b:	cmp    DWORD PTR [ebp-0x50],0x0
6402284f:	jg     0x6402280c
64022851:	inc    eax
64022852:	inc    eax
64022853:	inc    DWORD PTR [ebp-0x54]
64022856:	dec    DWORD PTR [ebp-0x40]
64022859:	cmp    DWORD PTR [ebp-0x40],0x0
6402285d:	jg     0x640227f0
6402285f:	add    edi,0xc002
64022865:	xor    eax,eax
64022867:	cmp    di,ax
6402286a:	jle    0x640228a8
6402286c:	test   DWORD PTR [ebp-0x8],0x80000000
64022873:	jne    0x640228a3
64022875:	mov    edx,DWORD PTR [ebp-0x10]
64022878:	mov    ebx,DWORD PTR [ebp-0xc]
6402287b:	mov    esi,DWORD PTR [ebp-0xc]
6402287e:	shl    DWORD PTR [ebp-0x10],1
64022881:	shr    edx,0x1f
64022884:	add    ebx,ebx
64022886:	or     ebx,edx
64022888:	mov    edx,DWORD PTR [ebp-0x8]
6402288b:	shr    esi,0x1f
6402288e:	add    edx,edx
64022890:	or     edx,esi
64022892:	add    edi,0xffff
64022898:	cmp    di,ax
6402289b:	mov    DWORD PTR [ebp-0xc],ebx
6402289e:	mov    DWORD PTR [ebp-0x8],edx
640228a1:	jg     0x6402286c
640228a3:	cmp    di,ax
640228a6:	jg     0x640228f5
640228a8:	add    edi,0xffff
640228ae:	cmp    di,ax
640228b1:	jge    0x640228f5
640228b3:	mov    eax,edi
640228b5:	neg    eax
640228b7:	movzx  eax,ax
640228ba:	add    edi,eax
640228bc:	test   BYTE PTR [ebp-0x10],0x1
640228c0:	je     0x640228c5
640228c2:	inc    DWORD PTR [ebp-0x58]
640228c5:	mov    edx,DWORD PTR [ebp-0x8]
640228c8:	mov    ebx,DWORD PTR [ebp-0xc]
640228cb:	mov    esi,DWORD PTR [ebp-0xc]
640228ce:	shr    DWORD PTR [ebp-0x8],1
640228d1:	shl    edx,0x1f
640228d4:	shr    ebx,1
640228d6:	or     ebx,edx
640228d8:	mov    edx,DWORD PTR [ebp-0x10]
640228db:	shl    esi,0x1f
640228de:	shr    edx,1
640228e0:	or     edx,esi
640228e2:	dec    eax
640228e3:	mov    DWORD PTR [ebp-0xc],ebx
640228e6:	mov    DWORD PTR [ebp-0x10],edx
640228e9:	jne    0x640228bc
640228eb:	cmp    DWORD PTR [ebp-0x58],eax
640228ee:	je     0x640228f5
640228f0:	or     WORD PTR [ebp-0x10],0x1
640228f5:	cmp    WORD PTR [ebp-0x10],0x8000
640228fb:	ja     0x6402290e
640228fd:	mov    edx,DWORD PTR [ebp-0x10]
64022900:	and    edx,0x1ffff
64022906:	cmp    edx,0x18000
6402290c:	jne    0x6402293f
6402290e:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022912:	jne    0x6402293c
64022914:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64022918:	mov    DWORD PTR [ebp-0xe],eax
6402291b:	jne    0x64022937
6402291d:	cmp    WORD PTR [ebp-0x6],0xffff
64022923:	mov    DWORD PTR [ebp-0xa],eax
64022926:	jne    0x64022931
64022928:	mov    WORD PTR [ebp-0x6],0x8000
6402292e:	inc    edi
6402292f:	jmp    0x6402293f
64022931:	inc    WORD PTR [ebp-0x6]
64022935:	jmp    0x6402293f
64022937:	inc    DWORD PTR [ebp-0xa]
6402293a:	jmp    0x6402293f
6402293c:	inc    DWORD PTR [ebp-0xe]
6402293f:	cmp    di,0x7fff
64022944:	jb     0x64022964
64022946:	neg    cx
64022949:	mov    DWORD PTR [ebp-0x1c],eax
6402294c:	mov    DWORD PTR [ebp-0x20],eax
6402294f:	sbb    ecx,ecx
64022951:	and    ecx,0x80000000
64022957:	add    ecx,0x7fff8000
6402295d:	mov    DWORD PTR [ebp-0x18],ecx
64022960:	xor    eax,eax
64022962:	jmp    0x6402299a
64022964:	mov    ax,WORD PTR [ebp-0xe]
64022968:	mov    WORD PTR [ebp-0x20],ax
6402296c:	mov    eax,DWORD PTR [ebp-0xc]
6402296f:	mov    DWORD PTR [ebp-0x1e],eax
64022972:	mov    eax,DWORD PTR [ebp-0x8]
64022975:	or     edi,ecx
64022977:	mov    DWORD PTR [ebp-0x1a],eax
6402297a:	mov    WORD PTR [ebp-0x16],di
6402297e:	jmp    0x64022960
64022980:	neg    cx
64022983:	sbb    ecx,ecx
64022985:	and    ecx,0x80000000
6402298b:	add    ecx,0x7fff8000
64022991:	mov    DWORD PTR [ebp-0x18],ecx
64022994:	mov    DWORD PTR [ebp-0x1c],eax
64022997:	mov    DWORD PTR [ebp-0x20],eax
6402299a:	test   BYTE PTR [ebp+0x18],0x1
6402299e:	mov    edx,DWORD PTR [ebp-0x60]
640229a1:	mov    ecx,DWORD PTR [ebp-0x4c]
640229a4:	mov    WORD PTR [edx],cx
640229a7:	je     0x640229db
640229a9:	movsx  ecx,cx
640229ac:	add    DWORD PTR [ebp+0x14],ecx
640229af:	cmp    DWORD PTR [ebp+0x14],eax
640229b2:	jg     0x640229db
640229b4:	and    WORD PTR [edx],0x0
640229b8:	cmp    WORD PTR [ebp-0x6c],0x8000
640229be:	mov    BYTE PTR [edx+0x3],0x1
640229c2:	setne  al
640229c5:	dec    al
640229c7:	and    al,0xd
640229c9:	add    al,0x20
640229cb:	mov    BYTE PTR [edx+0x2],al
640229ce:	mov    BYTE PTR [edx+0x4],0x30
640229d2:	mov    BYTE PTR [edx+0x5],0x0
640229d6:	jmp    0x6402238c
640229db:	push   0x15
640229dd:	pop    ecx
640229de:	cmp    DWORD PTR [ebp+0x14],ecx
640229e1:	jle    0x640229e6
640229e3:	mov    DWORD PTR [ebp+0x14],ecx
640229e6:	mov    esi,DWORD PTR [ebp-0x18]
640229e9:	shr    esi,0x10
640229ec:	push   0x8
640229ee:	sub    esi,0x3ffe
640229f4:	mov    WORD PTR [ebp-0x16],ax
640229f8:	pop    ebx
640229f9:	mov    eax,DWORD PTR [ebp-0x20]
640229fc:	mov    edi,DWORD PTR [ebp-0x1c]
640229ff:	mov    ecx,DWORD PTR [ebp-0x1c]
64022a02:	shl    DWORD PTR [ebp-0x20],1
64022a05:	shr    eax,0x1f
64022a08:	add    edi,edi
64022a0a:	or     edi,eax
64022a0c:	mov    eax,DWORD PTR [ebp-0x18]
64022a0f:	shr    ecx,0x1f
64022a12:	add    eax,eax
64022a14:	or     eax,ecx
64022a16:	dec    ebx
64022a17:	mov    DWORD PTR [ebp-0x1c],edi
64022a1a:	mov    DWORD PTR [ebp-0x18],eax
64022a1d:	jne    0x640229f9
64022a1f:	test   esi,esi
64022a21:	jge    0x64022a55
64022a23:	neg    esi
64022a25:	and    esi,0xff
64022a2b:	jle    0x64022a55
64022a2d:	mov    eax,DWORD PTR [ebp-0x18]
64022a30:	mov    edi,DWORD PTR [ebp-0x1c]
64022a33:	mov    ecx,DWORD PTR [ebp-0x1c]
64022a36:	shr    DWORD PTR [ebp-0x18],1
64022a39:	shl    eax,0x1f
64022a3c:	shr    edi,1
64022a3e:	or     edi,eax
64022a40:	mov    eax,DWORD PTR [ebp-0x20]
64022a43:	shl    ecx,0x1f
64022a46:	shr    eax,1
64022a48:	or     eax,ecx
64022a4a:	dec    esi
64022a4b:	test   esi,esi
64022a4d:	mov    DWORD PTR [ebp-0x1c],edi
64022a50:	mov    DWORD PTR [ebp-0x20],eax
64022a53:	jg     0x64022a2d
64022a55:	mov    eax,DWORD PTR [ebp+0x14]
64022a58:	inc    eax
64022a59:	test   eax,eax
64022a5b:	lea    ebx,[edx+0x4]
64022a5e:	mov    DWORD PTR [ebp-0x40],ebx
64022a61:	mov    DWORD PTR [ebp-0x4c],eax
64022a64:	jle    0x64022b1f
64022a6a:	mov    edx,DWORD PTR [ebp-0x20]
64022a6d:	mov    eax,DWORD PTR [ebp-0x1c]
64022a70:	lea    esi,[ebp-0x20]
64022a73:	lea    edi,[ebp-0x3c]
64022a76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022a79:	shl    DWORD PTR [ebp-0x20],1
64022a7c:	mov    edi,DWORD PTR [ebp-0x20]
64022a7f:	shl    DWORD PTR [ebp-0x20],1
64022a82:	shr    edx,0x1f
64022a85:	lea    ecx,[eax+eax*1]
64022a88:	or     ecx,edx
64022a8a:	mov    edx,DWORD PTR [ebp-0x18]
64022a8d:	mov    esi,eax
64022a8f:	shr    esi,0x1f
64022a92:	add    edx,edx
64022a94:	or     edx,esi
64022a96:	mov    eax,ecx
64022a98:	lea    esi,[ecx+ecx*1]
64022a9b:	shr    eax,0x1f
64022a9e:	lea    ecx,[edx+edx*1]
64022aa1:	mov    edx,DWORD PTR [ebp-0x3c]
64022aa4:	shr    edi,0x1f
64022aa7:	or     ecx,eax
64022aa9:	mov    eax,DWORD PTR [ebp-0x20]
64022aac:	or     esi,edi
64022aae:	lea    edi,[edx+eax*1]
64022ab1:	cmp    edi,eax
64022ab3:	jb     0x64022ab9
64022ab5:	cmp    edi,edx
64022ab7:	jae    0x64022ad1
64022ab9:	lea    eax,[esi+0x1]
64022abc:	xor    edx,edx
64022abe:	cmp    eax,esi
64022ac0:	jb     0x64022ac7
64022ac2:	cmp    eax,0x1
64022ac5:	jae    0x64022aca
64022ac7:	xor    edx,edx
64022ac9:	inc    edx
64022aca:	test   edx,edx
64022acc:	mov    esi,eax
64022ace:	je     0x64022ad1
64022ad0:	inc    ecx
64022ad1:	mov    eax,DWORD PTR [ebp-0x38]
64022ad4:	lea    edx,[eax+esi*1]
64022ad7:	cmp    edx,esi
64022ad9:	mov    DWORD PTR [ebp-0x44],edx
64022adc:	jb     0x64022ae2
64022ade:	cmp    edx,eax
64022ae0:	jae    0x64022ae3
64022ae2:	inc    ecx
64022ae3:	add    ecx,DWORD PTR [ebp-0x34]
64022ae6:	shr    edx,0x1f
64022ae9:	add    ecx,ecx
64022aeb:	or     ecx,edx
64022aed:	lea    esi,[edi+edi*1]
64022af0:	mov    DWORD PTR [ebp-0x20],esi
64022af3:	mov    esi,DWORD PTR [ebp-0x44]
64022af6:	mov    DWORD PTR [ebp-0x18],ecx
64022af9:	shr    ecx,0x18
64022afc:	add    esi,esi
64022afe:	add    cl,0x30
64022b01:	mov    eax,edi
64022b03:	shr    eax,0x1f
64022b06:	or     esi,eax
64022b08:	mov    BYTE PTR [ebx],cl
64022b0a:	inc    ebx
64022b0b:	dec    DWORD PTR [ebp-0x4c]
64022b0e:	cmp    DWORD PTR [ebp-0x4c],0x0
64022b12:	mov    DWORD PTR [ebp-0x1c],esi
64022b15:	mov    BYTE PTR [ebp-0x15],0x0
64022b19:	jg     0x64022a6a
64022b1f:	dec    ebx
64022b20:	mov    al,BYTE PTR [ebx]
64022b22:	dec    ebx
64022b23:	cmp    al,0x35
64022b25:	jge    0x64022b35
64022b27:	mov    ecx,DWORD PTR [ebp-0x40]
64022b2a:	jmp    0x64022b70
64022b2c:	cmp    BYTE PTR [ebx],0x39
64022b2f:	jne    0x64022b3a
64022b31:	mov    BYTE PTR [ebx],0x30
64022b34:	dec    ebx
64022b35:	cmp    ebx,DWORD PTR [ebp-0x40]
64022b38:	jae    0x64022b2c
64022b3a:	cmp    ebx,DWORD PTR [ebp-0x40]
64022b3d:	mov    eax,DWORD PTR [ebp-0x60]
64022b40:	jae    0x64022b46
64022b42:	inc    ebx
64022b43:	inc    WORD PTR [eax]
64022b46:	inc    BYTE PTR [ebx]
64022b48:	sub    bl,al
64022b4a:	sub    bl,0x3
64022b4d:	movsx  ecx,bl
64022b50:	mov    BYTE PTR [eax+0x3],bl
64022b53:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
64022b58:	mov    eax,DWORD PTR [ebp-0x74]
64022b5b:	mov    ecx,DWORD PTR [ebp-0x4]
64022b5e:	pop    edi
64022b5f:	pop    esi
64022b60:	xor    ecx,ebp
64022b62:	pop    ebx
64022b63:	call   0x64013c5c
64022b68:	leave  
64022b69:	ret    
64022b6a:	cmp    BYTE PTR [ebx],0x30
64022b6d:	jne    0x64022b74
64022b6f:	dec    ebx
64022b70:	cmp    ebx,ecx
64022b72:	jae    0x64022b6a
64022b74:	cmp    ebx,ecx
64022b76:	mov    eax,DWORD PTR [ebp-0x60]
64022b79:	jae    0x64022b48
64022b7b:	and    WORD PTR [eax],0x0
64022b7f:	cmp    WORD PTR [ebp-0x6c],0x8000
64022b85:	mov    BYTE PTR [eax+0x3],0x1
64022b89:	setne  dl
64022b8c:	dec    dl
64022b8e:	and    dl,0xd
64022b91:	add    dl,0x20
64022b94:	mov    BYTE PTR [eax+0x2],dl
64022b97:	mov    BYTE PTR [ecx],0x30
64022b9a:	mov    BYTE PTR [eax+0x5],0x0
64022b9e:	jmp    0x6402238c
64022ba3:	xor    eax,eax
64022ba5:	test   bl,0x10
64022ba8:	je     0x64022bab
64022baa:	inc    eax
64022bab:	test   bl,0x8
64022bae:	je     0x64022bb3
64022bb0:	or     eax,0x4
64022bb3:	test   bl,0x4
64022bb6:	je     0x64022bbb
64022bb8:	or     eax,0x8
64022bbb:	test   bl,0x2
64022bbe:	je     0x64022bc3
64022bc0:	or     eax,0x10
64022bc3:	test   bl,0x1
64022bc6:	je     0x64022bcb
64022bc8:	or     eax,0x20
64022bcb:	test   ebx,0x80000
64022bd1:	je     0x64022bd6
64022bd3:	or     eax,0x2
64022bd6:	mov    ecx,ebx
64022bd8:	mov    edx,0x300
64022bdd:	and    ecx,edx
64022bdf:	push   esi
64022be0:	mov    esi,0x200
64022be5:	je     0x64022c0a
64022be7:	cmp    ecx,0x100
64022bed:	je     0x64022c05
64022bef:	cmp    ecx,esi
64022bf1:	je     0x64022bfe
64022bf3:	cmp    ecx,edx
64022bf5:	jne    0x64022c0a
64022bf7:	or     eax,0xc00
64022bfc:	jmp    0x64022c0a
64022bfe:	or     eax,0x800
64022c03:	jmp    0x64022c0a
64022c05:	or     eax,0x400
64022c0a:	mov    ecx,ebx
64022c0c:	and    ecx,0x30000
64022c12:	je     0x64022c20
64022c14:	cmp    ecx,0x10000
64022c1a:	jne    0x64022c22
64022c1c:	or     eax,esi
64022c1e:	jmp    0x64022c22
64022c20:	or     eax,edx
64022c22:	test   ebx,0x40000
64022c28:	pop    esi
64022c29:	je     0x64022c30
64022c2b:	or     eax,0x1000
64022c30:	ret    
64022c31:	xor    eax,eax
64022c33:	test   dl,0x10
64022c36:	je     0x64022c3d
64022c38:	mov    eax,0x80
64022c3d:	test   dl,0x8
64022c40:	push   ebx
64022c41:	push   esi
64022c42:	push   edi
64022c43:	mov    ebx,0x200
64022c48:	je     0x64022c4c
64022c4a:	or     eax,ebx
64022c4c:	test   dl,0x4
64022c4f:	je     0x64022c56
64022c51:	or     eax,0x400
64022c56:	test   dl,0x2
64022c59:	je     0x64022c60
64022c5b:	or     eax,0x800
64022c60:	test   dl,0x1
64022c63:	je     0x64022c6a
64022c65:	or     eax,0x1000
64022c6a:	test   edx,0x80000
64022c70:	mov    edi,0x100
64022c75:	je     0x64022c79
64022c77:	or     eax,edi
64022c79:	mov    ecx,edx
64022c7b:	mov    esi,0x300
64022c80:	and    ecx,esi
64022c82:	je     0x64022ca3
64022c84:	cmp    ecx,edi
64022c86:	je     0x64022c9e
64022c88:	cmp    ecx,ebx
64022c8a:	je     0x64022c97
64022c8c:	cmp    ecx,esi
64022c8e:	jne    0x64022ca3
64022c90:	or     eax,0x6000
64022c95:	jmp    0x64022ca3
64022c97:	or     eax,0x4000
64022c9c:	jmp    0x64022ca3
64022c9e:	or     eax,0x2000
64022ca3:	mov    ecx,0x3000000
64022ca8:	pop    edi
64022ca9:	and    edx,ecx
64022cab:	cmp    edx,0x1000000
64022cb1:	pop    esi
64022cb2:	pop    ebx
64022cb3:	je     0x64022ccb
64022cb5:	cmp    edx,0x2000000
64022cbb:	je     0x64022cc7
64022cbd:	cmp    edx,ecx
64022cbf:	jne    0x64022cd0
64022cc1:	or     eax,0x8000
64022cc6:	ret    
64022cc7:	or     eax,0x40
64022cca:	ret    
64022ccb:	or     eax,0x8040
64022cd0:	ret    
64022cd1:	sub    esp,0x10
64022cd4:	push   ebx
64022cd5:	push   ebp
64022cd6:	push   esi
64022cd7:	push   edi
64022cd8:	fstcw  WORD PTR [esp+0x14]
64022cdd:	mov    ebx,DWORD PTR [esp+0x14]
64022ce1:	xor    edx,edx
64022ce3:	test   bl,0x1
64022ce6:	je     0x64022ceb
64022ce8:	push   0x10
64022cea:	pop    edx
64022ceb:	test   bl,0x4
64022cee:	je     0x64022cf3
64022cf0:	or     edx,0x8
64022cf3:	test   bl,0x8
64022cf6:	je     0x64022cfb
64022cf8:	or     edx,0x4
64022cfb:	test   bl,0x10
64022cfe:	je     0x64022d03
64022d00:	or     edx,0x2
64022d03:	test   bl,0x20
64022d06:	je     0x64022d0b
64022d08:	or     edx,0x1
64022d0b:	test   bl,0x2
64022d0e:	je     0x64022d16
64022d10:	or     edx,0x80000
64022d16:	movzx  ecx,bx
64022d19:	mov    eax,ecx
64022d1b:	mov    edi,0xc00
64022d20:	and    eax,edi
64022d22:	mov    ebp,0x300
64022d27:	mov    esi,0x200
64022d2c:	je     0x64022d4e
64022d2e:	cmp    eax,0x400
64022d33:	je     0x64022d48
64022d35:	cmp    eax,0x800
64022d3a:	je     0x64022d44
64022d3c:	cmp    eax,edi
64022d3e:	jne    0x64022d4e
64022d40:	or     edx,ebp
64022d42:	jmp    0x64022d4e
64022d44:	or     edx,esi
64022d46:	jmp    0x64022d4e
64022d48:	or     edx,0x100
64022d4e:	and    ecx,ebp
64022d50:	je     0x64022d5e
64022d52:	cmp    ecx,esi
64022d54:	jne    0x64022d64
64022d56:	or     edx,0x10000
64022d5c:	jmp    0x64022d64
64022d5e:	or     edx,0x20000
64022d64:	test   bx,0x1000
64022d69:	je     0x64022d71
64022d6b:	or     edx,0x40000
64022d71:	mov    esi,DWORD PTR [esp+0x28]
64022d75:	mov    ecx,DWORD PTR [esp+0x24]
64022d79:	mov    eax,esi
64022d7b:	not    eax
64022d7d:	and    eax,edx
64022d7f:	and    ecx,esi
64022d81:	or     eax,ecx
64022d83:	cmp    eax,edx
64022d85:	mov    DWORD PTR [esp+0x1c],eax
64022d89:	je     0x64022e39
64022d8f:	mov    ebx,eax
64022d91:	call   0x64022ba3
64022d96:	movzx  eax,ax
64022d99:	mov    DWORD PTR [esp+0x10],eax
64022d9d:	fldcw  WORD PTR [esp+0x10]
64022da1:	fstcw  WORD PTR [esp+0x10]
64022da6:	mov    ebx,DWORD PTR [esp+0x10]
64022daa:	xor    edx,edx
64022dac:	test   bl,0x1
64022daf:	je     0x64022db4
64022db1:	push   0x10
64022db3:	pop    edx
64022db4:	test   bl,0x4
64022db7:	je     0x64022dbc
64022db9:	or     edx,0x8
64022dbc:	test   bl,0x8
64022dbf:	je     0x64022dc4
64022dc1:	or     edx,0x4
64022dc4:	test   bl,0x10
64022dc7:	je     0x64022dcc
64022dc9:	or     edx,0x2
64022dcc:	test   bl,0x20
64022dcf:	je     0x64022dd4
64022dd1:	or     edx,0x1
64022dd4:	test   bl,0x2
64022dd7:	je     0x64022ddf
64022dd9:	or     edx,0x80000
64022ddf:	movzx  ecx,bx
64022de2:	mov    eax,ecx
64022de4:	and    eax,edi
64022de6:	je     0x64022e0c
64022de8:	cmp    eax,0x400
64022ded:	je     0x64022e06
64022def:	cmp    eax,0x800
64022df4:	je     0x64022dfe
64022df6:	cmp    eax,edi
64022df8:	jne    0x64022e0c
64022dfa:	or     edx,ebp
64022dfc:	jmp    0x64022e0c
64022dfe:	or     edx,0x200
64022e04:	jmp    0x64022e0c
64022e06:	or     edx,0x100
64022e0c:	and    ecx,ebp
64022e0e:	je     0x64022e20
64022e10:	cmp    ecx,0x200
64022e16:	jne    0x64022e26
64022e18:	or     edx,0x10000
64022e1e:	jmp    0x64022e26
64022e20:	or     edx,0x20000
64022e26:	test   bx,0x1000
64022e2b:	je     0x64022e33
64022e2d:	or     edx,0x40000
64022e33:	mov    eax,edx
64022e35:	mov    DWORD PTR [esp+0x1c],edx
64022e39:	cmp    DWORD PTR ds:0x64034624,0x0
64022e40:	je     0x64022fcc
64022e46:	and    esi,0x308031f
64022e4c:	mov    edi,esi
64022e4e:	stmxcsr DWORD PTR [esp+0x18]
64022e53:	mov    eax,DWORD PTR [esp+0x18]
64022e57:	xor    esi,esi
64022e59:	test   al,al
64022e5b:	jns    0x64022e60
64022e5d:	push   0x10
64022e5f:	pop    esi
64022e60:	test   ax,0x200
64022e64:	je     0x64022e69
64022e66:	or     esi,0x8
64022e69:	test   ax,0x400
64022e6d:	je     0x64022e72
64022e6f:	or     esi,0x4
64022e72:	test   ax,0x800
64022e76:	je     0x64022e7b
64022e78:	or     esi,0x2
64022e7b:	test   ax,0x1000
64022e7f:	je     0x64022e84
64022e81:	or     esi,0x1
64022e84:	test   ax,0x100
64022e88:	je     0x64022e90
64022e8a:	or     esi,0x80000
64022e90:	mov    ecx,eax
64022e92:	mov    ebp,0x6000
64022e97:	and    ecx,ebp
64022e99:	je     0x64022ec5
64022e9b:	cmp    ecx,0x2000
64022ea1:	je     0x64022ebf
64022ea3:	cmp    ecx,0x4000
64022ea9:	je     0x64022eb7
64022eab:	cmp    ecx,ebp
64022ead:	jne    0x64022ec5
64022eaf:	or     esi,0x300
64022eb5:	jmp    0x64022ec5
64022eb7:	or     esi,0x200
64022ebd:	jmp    0x64022ec5
64022ebf:	or     esi,0x100
64022ec5:	mov    ebx,0x8040
64022eca:	and    eax,ebx
64022ecc:	sub    eax,0x40
64022ecf:	je     0x64022eed
64022ed1:	sub    eax,0x7fc0
64022ed6:	je     0x64022ee5
64022ed8:	sub    eax,0x40
64022edb:	jne    0x64022ef3
64022edd:	or     esi,0x1000000
64022ee3:	jmp    0x64022ef3
64022ee5:	or     esi,0x3000000
64022eeb:	jmp    0x64022ef3
64022eed:	or     esi,0x2000000
64022ef3:	mov    edx,edi
64022ef5:	and    edi,DWORD PTR [esp+0x24]
64022ef9:	not    edx
64022efb:	and    edx,esi
64022efd:	or     edx,edi
64022eff:	cmp    edx,esi
64022f01:	jne    0x64022f0a
64022f03:	mov    eax,esi
64022f05:	jmp    0x64022fb5
64022f0a:	call   0x64022c31
64022f0f:	push   eax
64022f10:	mov    DWORD PTR [esp+0x2c],eax
64022f14:	call   0x640231a0
64022f19:	pop    ecx
64022f1a:	stmxcsr DWORD PTR [esp+0x28]
64022f1f:	mov    eax,DWORD PTR [esp+0x28]
64022f23:	xor    edx,edx
64022f25:	test   al,al
64022f27:	jns    0x64022f2c
64022f29:	push   0x10
64022f2b:	pop    edx
64022f2c:	mov    edi,0x200
64022f31:	test   edi,eax
64022f33:	je     0x64022f38
64022f35:	or     edx,0x8
64022f38:	test   ax,0x400
64022f3c:	je     0x64022f41
64022f3e:	or     edx,0x4
64022f41:	test   ax,0x800
64022f45:	je     0x64022f4a
64022f47:	or     edx,0x2
64022f4a:	test   ax,0x1000
64022f4e:	je     0x64022f53
64022f50:	or     edx,0x1
64022f53:	mov    esi,0x100
64022f58:	test   esi,eax
64022f5a:	je     0x64022f62
64022f5c:	or     edx,0x80000
64022f62:	mov    ecx,eax
64022f64:	and    ecx,ebp
64022f66:	je     0x64022f8a
64022f68:	cmp    ecx,0x2000
64022f6e:	je     0x64022f88
64022f70:	cmp    ecx,0x4000
64022f76:	je     0x64022f84
64022f78:	cmp    ecx,ebp
64022f7a:	jne    0x64022f8a
64022f7c:	or     edx,0x300
64022f82:	jmp    0x64022f8a
64022f84:	or     edx,edi
64022f86:	jmp    0x64022f8a
64022f88:	or     edx,esi
64022f8a:	and    eax,ebx
64022f8c:	sub    eax,0x40
64022f8f:	je     0x64022fad
64022f91:	sub    eax,0x7fc0
64022f96:	je     0x64022fa5
64022f98:	sub    eax,0x40
64022f9b:	jne    0x64022fb3
64022f9d:	or     edx,0x1000000
64022fa3:	jmp    0x64022fb3
64022fa5:	or     edx,0x3000000
64022fab:	jmp    0x64022fb3
64022fad:	or     edx,0x2000000
64022fb3:	mov    eax,edx
64022fb5:	mov    ecx,DWORD PTR [esp+0x1c]
64022fb9:	mov    edx,eax
64022fbb:	xor    edx,ecx
64022fbd:	or     eax,ecx
64022fbf:	test   edx,0x8031f
64022fc5:	je     0x64022fcc
64022fc7:	or     eax,0x80000000
64022fcc:	pop    edi
64022fcd:	pop    esi
64022fce:	pop    ebp
64022fcf:	pop    ebx
64022fd0:	add    esp,0x10
64022fd3:	ret    
64022fd4:	push   ebp
64022fd5:	mov    ebp,esp
64022fd7:	sub    esp,0x18
64022fda:	mov    eax,ds:0x6402f09c
64022fdf:	xor    eax,ebp
64022fe1:	mov    DWORD PTR [ebp-0x4],eax
64022fe4:	mov    eax,DWORD PTR [ebp+0x10]
64022fe7:	push   ebx
64022fe8:	push   esi
64022fe9:	xor    esi,esi
64022feb:	cmp    DWORD PTR [ebp+0xc],esi
64022fee:	push   edi
64022fef:	mov    DWORD PTR [ebp-0x18],0x404e
64022ff6:	mov    DWORD PTR [eax],esi
64022ff8:	mov    DWORD PTR [eax+0x4],esi
64022ffb:	mov    DWORD PTR [eax+0x8],esi
64022ffe:	jbe    0x6402314a
64023004:	mov    edx,DWORD PTR [eax]
64023006:	mov    ebx,DWORD PTR [eax+0x4]
64023009:	mov    esi,eax
6402300b:	lea    edi,[ebp-0x10]
6402300e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402300f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64023010:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64023011:	mov    ecx,edx
64023013:	shr    ecx,0x1f
64023016:	lea    edi,[edx+edx*1]
64023019:	lea    edx,[ebx+ebx*1]
6402301c:	or     edx,ecx
6402301e:	mov    ecx,DWORD PTR [eax+0x8]
64023021:	mov    esi,ebx
64023023:	shr    esi,0x1f
64023026:	add    ecx,ecx
64023028:	or     ecx,esi
6402302a:	mov    DWORD PTR [ebp-0x14],edi
6402302d:	mov    esi,edi
6402302f:	and    DWORD PTR [ebp-0x14],0x0
64023033:	mov    ebx,edx
64023035:	shr    ebx,0x1f
64023038:	add    ecx,ecx
6402303a:	shr    edi,0x1f
6402303d:	or     ecx,ebx
6402303f:	mov    ebx,DWORD PTR [ebp-0x10]
64023042:	add    esi,esi
64023044:	add    edx,edx
64023046:	or     edx,edi
64023048:	lea    edi,[esi+ebx*1]
6402304b:	cmp    edi,esi
6402304d:	mov    DWORD PTR [eax],esi
6402304f:	mov    DWORD PTR [eax+0x4],edx
64023052:	mov    DWORD PTR [eax+0x8],ecx
64023055:	jb     0x6402305b
64023057:	cmp    edi,ebx
64023059:	jae    0x64023062
6402305b:	mov    DWORD PTR [ebp-0x14],0x1
64023062:	xor    ebx,ebx
64023064:	cmp    DWORD PTR [ebp-0x14],ebx
64023067:	mov    DWORD PTR [eax],edi
64023069:	je     0x64023085
6402306b:	lea    esi,[edx+0x1]
6402306e:	cmp    esi,edx
64023070:	jb     0x64023077
64023072:	cmp    esi,0x1
64023075:	jae    0x6402307a
64023077:	xor    ebx,ebx
64023079:	inc    ebx
6402307a:	test   ebx,ebx
6402307c:	mov    DWORD PTR [eax+0x4],esi
6402307f:	je     0x64023085
64023081:	inc    ecx
64023082:	mov    DWORD PTR [eax+0x8],ecx
64023085:	mov    ecx,DWORD PTR [eax+0x4]
64023088:	mov    edx,DWORD PTR [ebp-0xc]
6402308b:	lea    ebx,[ecx+edx*1]
6402308e:	xor    esi,esi
64023090:	cmp    ebx,ecx
64023092:	jb     0x64023098
64023094:	cmp    ebx,edx
64023096:	jae    0x6402309b
64023098:	xor    esi,esi
6402309a:	inc    esi
6402309b:	test   esi,esi
6402309d:	mov    DWORD PTR [eax+0x4],ebx
640230a0:	je     0x640230a5
640230a2:	inc    DWORD PTR [eax+0x8]
640230a5:	mov    ecx,DWORD PTR [ebp-0x8]
640230a8:	add    DWORD PTR [eax+0x8],ecx
640230ab:	and    DWORD PTR [ebp-0x14],0x0
640230af:	lea    ecx,[edi+edi*1]
640230b2:	mov    edx,edi
640230b4:	shr    edx,0x1f
640230b7:	lea    edi,[ebx+ebx*1]
640230ba:	or     edi,edx
640230bc:	mov    edx,DWORD PTR [eax+0x8]
640230bf:	mov    esi,ebx
640230c1:	shr    esi,0x1f
640230c4:	lea    ebx,[edx+edx*1]
640230c7:	mov    edx,DWORD PTR [ebp+0x8]
640230ca:	or     ebx,esi
640230cc:	mov    DWORD PTR [eax],ecx
640230ce:	mov    DWORD PTR [eax+0x4],edi
640230d1:	mov    DWORD PTR [eax+0x8],ebx
640230d4:	movsx  edx,BYTE PTR [edx]
640230d7:	lea    esi,[ecx+edx*1]
640230da:	cmp    esi,ecx
640230dc:	mov    DWORD PTR [ebp-0x10],edx
640230df:	jb     0x640230e5
640230e1:	cmp    esi,edx
640230e3:	jae    0x640230ec
640230e5:	mov    DWORD PTR [ebp-0x14],0x1
640230ec:	cmp    DWORD PTR [ebp-0x14],0x0
640230f0:	mov    DWORD PTR [eax],esi
640230f2:	je     0x64023110
640230f4:	lea    ecx,[edi+0x1]
640230f7:	xor    edx,edx
640230f9:	cmp    ecx,edi
640230fb:	jb     0x64023102
640230fd:	cmp    ecx,0x1
64023100:	jae    0x64023105
64023102:	xor    edx,edx
64023104:	inc    edx
64023105:	test   edx,edx
64023107:	mov    DWORD PTR [eax+0x4],ecx
6402310a:	je     0x64023110
6402310c:	inc    ebx
6402310d:	mov    DWORD PTR [eax+0x8],ebx
64023110:	dec    DWORD PTR [ebp+0xc]
64023113:	inc    DWORD PTR [ebp+0x8]
64023116:	cmp    DWORD PTR [ebp+0xc],0x0
6402311a:	ja     0x64023004
64023120:	xor    esi,esi
64023122:	jmp    0x6402314a
64023124:	mov    ecx,DWORD PTR [eax+0x4]
64023127:	mov    edx,ecx
64023129:	shr    edx,0x10
6402312c:	mov    DWORD PTR [eax+0x8],edx
6402312f:	mov    edx,DWORD PTR [eax]
64023131:	mov    edi,edx
64023133:	shl    ecx,0x10
64023136:	shr    edi,0x10
64023139:	or     ecx,edi
6402313b:	shl    edx,0x10
6402313e:	add    DWORD PTR [ebp-0x18],0xfff0
64023145:	mov    DWORD PTR [eax+0x4],ecx
64023148:	mov    DWORD PTR [eax],edx
6402314a:	cmp    DWORD PTR [eax+0x8],esi
6402314d:	je     0x64023124
6402314f:	mov    ebx,0x8000
64023154:	test   DWORD PTR [eax+0x8],ebx
64023157:	jne    0x64023189
64023159:	mov    esi,DWORD PTR [eax]
6402315b:	mov    edi,DWORD PTR [eax+0x4]
6402315e:	add    DWORD PTR [ebp-0x18],0xffff
64023165:	mov    ecx,esi
64023167:	add    esi,esi
64023169:	shr    ecx,0x1f
6402316c:	mov    DWORD PTR [eax],esi
6402316e:	lea    esi,[edi+edi*1]
64023171:	or     esi,ecx
64023173:	mov    ecx,DWORD PTR [eax+0x8]
64023176:	mov    edx,edi
64023178:	shr    edx,0x1f
6402317b:	add    ecx,ecx
6402317d:	or     ecx,edx
6402317f:	test   ebx,ecx
64023181:	mov    DWORD PTR [eax+0x4],esi
64023184:	mov    DWORD PTR [eax+0x8],ecx
64023187:	je     0x64023159
64023189:	mov    cx,WORD PTR [ebp-0x18]
6402318d:	mov    WORD PTR [eax+0xa],cx
64023191:	mov    ecx,DWORD PTR [ebp-0x4]
64023194:	pop    edi
64023195:	pop    esi
64023196:	xor    ecx,ebp
64023198:	pop    ebx
64023199:	call   0x64013c5c
6402319e:	leave  
6402319f:	ret    
640231a0:	push   0x8
640231a2:	push   0x6402c530
640231a7:	call   0x64015220
640231ac:	xor    eax,eax
640231ae:	cmp    DWORD PTR ds:0x64034624,eax
640231b4:	je     0x6402320c
640231b6:	test   BYTE PTR [ebp+0x8],0x40
640231ba:	je     0x64023204
640231bc:	cmp    DWORD PTR ds:0x64030374,eax
640231c2:	je     0x64023204
640231c4:	mov    DWORD PTR [ebp-0x4],eax
640231c7:	ldmxcsr DWORD PTR [ebp+0x8]
640231cb:	jmp    0x640231fb
640231cd:	mov    eax,DWORD PTR [ebp-0x14]
640231d0:	mov    eax,DWORD PTR [eax]
640231d2:	mov    eax,DWORD PTR [eax]
640231d4:	cmp    eax,0xc0000005
640231d9:	je     0x640231e5
640231db:	cmp    eax,0xc000001d
640231e0:	je     0x640231e5
640231e2:	xor    eax,eax
640231e4:	ret    
640231e5:	xor    eax,eax
640231e7:	inc    eax
640231e8:	ret    
640231e9:	mov    esp,DWORD PTR [ebp-0x18]
640231ec:	and    DWORD PTR ds:0x64030374,0x0
640231f3:	and    DWORD PTR [ebp+0x8],0xffffffbf
640231f7:	ldmxcsr DWORD PTR [ebp+0x8]
640231fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64023202:	jmp    0x6402320c
64023204:	and    DWORD PTR [ebp+0x8],0xffffffbf
64023208:	ldmxcsr DWORD PTR [ebp+0x8]
6402320c:	call   0x64015265
64023211:	ret    
64023212:	int3   
64023213:	int3   
64023214:	int3   
64023215:	int3   
64023216:	int3   
64023217:	int3   
64023218:	int3   
64023219:	int3   
6402321a:	int3   
6402321b:	int3   
6402321c:	int3   
6402321d:	int3   
6402321e:	int3   
6402321f:	int3   
64023220:	mov    eax,DWORD PTR [ebp-0x10]
64023223:	and    eax,0x1
64023226:	je     0x64023238
6402322c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023230:	mov    ecx,DWORD PTR [ebp+0x4]
64023233:	jmp    0x64001930
64023238:	ret    
64023239:	mov    edx,DWORD PTR [esp+0x8]
6402323d:	lea    eax,[edx-0xc]
64023240:	mov    ecx,DWORD PTR [edx-0x10]
64023243:	xor    ecx,eax
64023245:	call   0x64013c5c
6402324a:	mov    eax,0x6402baf0
6402324f:	jmp    0x6401391e
64023254:	int3   
64023255:	int3   
64023256:	int3   
64023257:	int3   
64023258:	int3   
64023259:	int3   
6402325a:	int3   
6402325b:	int3   
6402325c:	int3   
6402325d:	int3   
6402325e:	int3   
6402325f:	int3   
64023260:	mov    eax,DWORD PTR [ebp-0x10]
64023263:	and    eax,0x1
64023266:	je     0x64023278
6402326c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023270:	mov    ecx,DWORD PTR [ebp+0x4]
64023273:	jmp    0x64001930
64023278:	ret    
64023279:	mov    edx,DWORD PTR [esp+0x8]
6402327d:	lea    eax,[edx-0x10]
64023280:	mov    ecx,DWORD PTR [edx-0x14]
64023283:	xor    ecx,eax
64023285:	call   0x64013c5c
6402328a:	mov    eax,0x6402bb1c
6402328f:	jmp    0x6401391e
64023294:	int3   
64023295:	int3   
64023296:	int3   
64023297:	int3   
64023298:	int3   
64023299:	int3   
6402329a:	int3   
6402329b:	int3   
6402329c:	int3   
6402329d:	int3   
6402329e:	int3   
6402329f:	int3   
640232a0:	lea    ecx,[ebp-0x50]
640232a3:	jmp    0x64001650
640232a8:	mov    edx,DWORD PTR [esp+0x8]
640232ac:	lea    eax,[edx-0x44]
640232af:	mov    ecx,DWORD PTR [edx-0x48]
640232b2:	xor    ecx,eax
640232b4:	call   0x64013c5c
640232b9:	mov    eax,0x6402bba0
640232be:	jmp    0x6401391e
640232c3:	int3   
640232c4:	int3   
640232c5:	int3   
640232c6:	int3   
640232c7:	int3   
640232c8:	int3   
640232c9:	int3   
640232ca:	int3   
640232cb:	int3   
640232cc:	int3   
640232cd:	int3   
640232ce:	int3   
640232cf:	int3   
640232d0:	lea    ecx,[ebp-0x98]
640232d6:	jmp    0x64010c30
640232db:	lea    ecx,[ebp-0x94]
640232e1:	jmp    0x64001650
640232e6:	lea    ecx,[ebp-0x78]
640232e9:	jmp    0x64001650
640232ee:	mov    edx,DWORD PTR [esp+0x8]
640232f2:	lea    eax,[edx-0xa8]
640232f8:	mov    ecx,DWORD PTR [edx-0xac]
640232fe:	xor    ecx,eax
64023300:	call   0x64013c5c
64023305:	mov    eax,0x6402bbec
6402330a:	jmp    0x6401391e
6402330f:	int3   
64023310:	lea    ecx,[ebp+0x38]
64023313:	jmp    0x64006ee0
64023318:	lea    ecx,[ebp-0x38]
6402331b:	jmp    0x64010c50
64023320:	lea    ecx,[ebp+0x10]
64023323:	jmp    0x64001930
64023328:	lea    ecx,[ebp+0x14]
6402332b:	jmp    0x64001930
64023330:	lea    ecx,[ebp+0x18]
64023333:	jmp    0x64001930
64023338:	lea    ecx,[ebp+0xc]
6402333b:	jmp    0x64001930
64023340:	lea    ecx,[ebp+0x8]
64023343:	jmp    0x64001930
64023348:	lea    ecx,[ebp+0x4]
6402334b:	jmp    0x64001930
64023350:	lea    ecx,[ebp+0x1c]
64023353:	jmp    0x64001650
64023358:	mov    edx,DWORD PTR [esp+0x8]
6402335c:	lea    eax,[edx+0xc]
6402335f:	mov    ecx,DWORD PTR [edx-0x80]
64023362:	xor    ecx,eax
64023364:	call   0x64013c5c
64023369:	mov    ecx,DWORD PTR [edx+0x7c]
6402336c:	xor    ecx,eax
6402336e:	call   0x64013c5c
64023373:	mov    eax,0x6402bc5c
64023378:	jmp    0x6401391e
6402337d:	int3   
6402337e:	int3   
6402337f:	int3   
64023380:	mov    eax,ds:0x640304c8
64023385:	and    eax,0xfffffffe
64023388:	mov    ds:0x640304c8,eax
6402338d:	ret    
6402338e:	mov    edx,DWORD PTR [esp+0x8]
64023392:	lea    eax,[edx-0x10]
64023395:	mov    ecx,DWORD PTR [edx-0x14]
64023398:	xor    ecx,eax
6402339a:	call   0x64013c5c
6402339f:	mov    eax,0x6402bd20
640233a4:	jmp    0x6401391e
640233a9:	int3   
640233aa:	int3   
640233ab:	int3   
640233ac:	int3   
640233ad:	int3   
640233ae:	int3   
640233af:	int3   
640233b0:	lea    ecx,[ebp-0x14]
640233b3:	jmp    0x6400a0d0
640233b8:	mov    edx,DWORD PTR [esp+0x8]
640233bc:	lea    eax,[edx+0xc]
640233bf:	mov    ecx,DWORD PTR [edx-0x18]
640233c2:	xor    ecx,eax
640233c4:	call   0x64013c5c
640233c9:	mov    eax,0x6402bd80
640233ce:	jmp    0x6401391e
640233d3:	int3   
640233d4:	int3   
640233d5:	int3   
640233d6:	int3   
640233d7:	int3   
640233d8:	int3   
640233d9:	int3   
640233da:	int3   
640233db:	int3   
640233dc:	int3   
640233dd:	int3   
640233de:	int3   
640233df:	int3   
640233e0:	lea    ecx,[ebp-0x10]
640233e3:	jmp    0x64001930
640233e8:	mov    edx,DWORD PTR [esp+0x8]
640233ec:	lea    eax,[edx-0x8]
640233ef:	mov    ecx,DWORD PTR [edx-0xc]
640233f2:	xor    ecx,eax
640233f4:	call   0x64013c5c
640233f9:	mov    eax,0x6402bdac
640233fe:	jmp    0x6401391e
64023403:	int3   
64023404:	int3   
64023405:	int3   
64023406:	int3   
64023407:	int3   
64023408:	int3   
64023409:	int3   
6402340a:	int3   
6402340b:	int3   
6402340c:	int3   
6402340d:	int3   
6402340e:	int3   
6402340f:	int3   
64023410:	lea    ecx,[ebp-0x10]
64023413:	jmp    0x64001680
64023418:	lea    ecx,[ebp-0x14]
6402341b:	jmp    0x64001930
64023420:	mov    edx,DWORD PTR [esp+0x8]
64023424:	lea    eax,[edx-0x14]
64023427:	mov    ecx,DWORD PTR [edx-0x18]
6402342a:	xor    ecx,eax
6402342c:	call   0x64013c5c
64023431:	mov    eax,0x6402bde0
64023436:	jmp    0x6401391e
6402343b:	int3   
6402343c:	int3   
6402343d:	int3   
6402343e:	int3   
6402343f:	int3   
64023440:	mov    eax,DWORD PTR [ebp-0x50]
64023443:	and    eax,0x1
64023446:	je     0x64023458
6402344c:	and    DWORD PTR [ebp-0x50],0xfffffffe
64023450:	mov    ecx,DWORD PTR [ebp-0x58]
64023453:	jmp    0x64001930
64023458:	ret    
64023459:	lea    ecx,[ebp-0x4c]
6402345c:	jmp    0x64001930
64023461:	lea    ecx,[ebp-0x54]
64023464:	jmp    0x64001930
64023469:	lea    ecx,[ebp-0x10]
6402346c:	jmp    0x64001930
64023471:	lea    ecx,[ebp-0x10]
64023474:	jmp    0x64001930
64023479:	lea    ecx,[ebp-0x28]
6402347c:	jmp    0x64001930
64023481:	lea    ecx,[ebp-0x48]
64023484:	jmp    0x64001930
64023489:	lea    ecx,[ebp-0x24]
6402348c:	jmp    0x64001930
64023491:	lea    ecx,[ebp-0x14]
64023494:	jmp    0x64001930
64023499:	lea    ecx,[ebp-0x18]
6402349c:	jmp    0x64001930
640234a1:	lea    ecx,[ebp-0x10]
640234a4:	jmp    0x64001930
640234a9:	lea    ecx,[ebp-0x10]
640234ac:	jmp    0x64001930
640234b1:	lea    ecx,[ebp-0x18]
640234b4:	jmp    0x64001930
640234b9:	lea    ecx,[ebp-0x14]
640234bc:	jmp    0x64001930
640234c1:	lea    ecx,[ebp-0x10]
640234c4:	jmp    0x64001930
640234c9:	lea    ecx,[ebp-0x3c]
640234cc:	jmp    0x64011a30
640234d1:	lea    ecx,[ebp-0x14]
640234d4:	jmp    0x64001930
640234d9:	lea    ecx,[ebp-0x10]
640234dc:	jmp    0x64001930
640234e1:	lea    ecx,[ebp-0x20]
640234e4:	jmp    0x64001930
640234e9:	lea    ecx,[ebp-0x10]
640234ec:	jmp    0x64001930
640234f1:	lea    ecx,[ebp-0x18]
640234f4:	jmp    0x64001930
640234f9:	lea    ecx,[ebp-0x14]
640234fc:	jmp    0x64001930
64023501:	lea    ecx,[ebp-0x10]
64023504:	jmp    0x64001930
64023509:	lea    ecx,[ebp-0x1c]
6402350c:	jmp    0x64001930
64023511:	lea    ecx,[ebp-0x2c]
64023514:	jmp    0x64001930
64023519:	lea    ecx,[ebp-0x18]
6402351c:	jmp    0x64001930
64023521:	lea    ecx,[ebp-0x10]
64023524:	jmp    0x64001930
64023529:	lea    ecx,[ebp-0x2c]
6402352c:	jmp    0x64001930
64023531:	lea    ecx,[ebp-0x1c]
64023534:	jmp    0x64001930
64023539:	lea    ecx,[ebp-0x1c]
6402353c:	jmp    0x64001930
64023541:	mov    edx,DWORD PTR [esp+0x8]
64023545:	lea    eax,[edx+0xc]
64023548:	mov    ecx,DWORD PTR [edx-0xa0]
6402354e:	xor    ecx,eax
64023550:	call   0x64013c5c
64023555:	mov    ecx,DWORD PTR [edx+0x130]
6402355b:	xor    ecx,eax
6402355d:	call   0x64013c5c
64023562:	mov    eax,0x6402be04
64023567:	jmp    0x6401391e
6402356c:	int3   
6402356d:	int3   
6402356e:	int3   
6402356f:	int3   
64023570:	lea    ecx,[ebp-0x30]
64023573:	jmp    0x64001930
64023578:	lea    ecx,[ebp-0x2c]
6402357b:	jmp    0x64001650
64023580:	lea    ecx,[ebp-0x5c]
64023583:	jmp    0x64001650
64023588:	mov    edx,DWORD PTR [esp+0x8]
6402358c:	lea    eax,[edx+0xc]
6402358f:	mov    ecx,DWORD PTR [edx-0x60]
64023592:	xor    ecx,eax
64023594:	call   0x64013c5c
64023599:	mov    ecx,DWORD PTR [edx-0x4]
6402359c:	xor    ecx,eax
6402359e:	call   0x64013c5c
640235a3:	mov    eax,0x6402bf30
640235a8:	jmp    0x6401391e
640235ad:	lea    ecx,[ebp-0x28]
640235b0:	jmp    0x64001650
640235b5:	mov    edx,DWORD PTR [esp+0x8]
640235b9:	lea    eax,[edx+0xc]
640235bc:	mov    ecx,DWORD PTR [edx-0x54]
640235bf:	xor    ecx,eax
640235c1:	call   0x64013c5c
640235c6:	mov    eax,0x6402bf7c
640235cb:	jmp    0x6401391e
640235d0:	lea    ecx,[ebp-0x28]
640235d3:	jmp    0x64001650
640235d8:	mov    edx,DWORD PTR [esp+0x8]
640235dc:	lea    eax,[edx+0xc]
640235df:	mov    ecx,DWORD PTR [edx-0x54]
640235e2:	xor    ecx,eax
640235e4:	call   0x64013c5c
640235e9:	mov    eax,0x6402bfa8
640235ee:	jmp    0x6401391e
640235f3:	mov    edx,DWORD PTR [esp+0x8]
640235f7:	lea    eax,[edx+0xc]
640235fa:	mov    ecx,DWORD PTR [edx-0x14]
640235fd:	xor    ecx,eax
640235ff:	call   0x64013c5c
64023604:	mov    eax,0x6402c150
64023609:	jmp    0x6401391e
6402360e:	int3   
6402360f:	int3   
64023610:	mov    eax,DWORD PTR [ebp+0x4]
64023613:	push   eax
64023614:	call   0x64013402
64023619:	pop    ecx
6402361a:	ret    
6402361b:	mov    edx,DWORD PTR [esp+0x8]
6402361f:	lea    eax,[edx-0x8]
64023622:	mov    ecx,DWORD PTR [edx-0xc]
64023625:	xor    ecx,eax
64023627:	call   0x64013c5c
6402362c:	mov    eax,0x6402c6a8
64023631:	jmp    0x6401391e
64023636:	int3   
64023637:	int3   
64023638:	int3   
64023639:	int3   
6402363a:	int3   
6402363b:	int3   
6402363c:	int3   
6402363d:	int3   
6402363e:	int3   
6402363f:	int3   
64023640:	mov    eax,DWORD PTR [ebp+0x4]
64023643:	push   eax
64023644:	call   0x64013402
64023649:	pop    ecx
6402364a:	ret    
6402364b:	mov    edx,DWORD PTR [esp+0x8]
6402364f:	lea    eax,[edx-0x8]
64023652:	mov    ecx,DWORD PTR [edx-0xc]
64023655:	xor    ecx,eax
64023657:	call   0x64013c5c
6402365c:	mov    eax,0x6402c6d4
64023661:	jmp    0x6401391e
64023666:	int3   
64023667:	int3   
64023668:	int3   
64023669:	int3   
6402366a:	int3   
6402366b:	int3   
6402366c:	int3   
6402366d:	int3   
6402366e:	int3   
6402366f:	int3   
64023670:	mov    eax,DWORD PTR [ebp-0x10]
64023673:	push   eax
64023674:	call   0x64013402
64023679:	pop    ecx
6402367a:	ret    
6402367b:	mov    edx,DWORD PTR [esp+0x8]
6402367f:	lea    eax,[edx-0x8]
64023682:	mov    ecx,DWORD PTR [edx-0xc]
64023685:	xor    ecx,eax
64023687:	call   0x64013c5c
6402368c:	mov    eax,0x6402c700
64023691:	jmp    0x6401391e
64023696:	int3   
64023697:	int3   
64023698:	int3   
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	mov    eax,DWORD PTR [ebp-0x10]
640236a3:	push   eax
640236a4:	call   0x64013402
640236a9:	pop    ecx
640236aa:	ret    
640236ab:	mov    edx,DWORD PTR [esp+0x8]
640236af:	lea    eax,[edx-0xc]
640236b2:	mov    ecx,DWORD PTR [edx-0x10]
640236b5:	xor    ecx,eax
640236b7:	call   0x64013c5c
640236bc:	mov    eax,0x6402c72c
640236c1:	jmp    0x6401391e
640236c6:	int3   
640236c7:	int3   
640236c8:	int3   
640236c9:	int3   
640236ca:	int3   
640236cb:	int3   
640236cc:	int3   
640236cd:	int3   
640236ce:	int3   
640236cf:	int3   
640236d0:	lea    ecx,[ebp-0x144]
640236d6:	jmp    0x64002750
640236db:	mov    edx,DWORD PTR [esp+0x8]
640236df:	lea    eax,[edx-0x144]
640236e5:	mov    ecx,DWORD PTR [edx-0x148]
640236eb:	xor    ecx,eax
640236ed:	call   0x64013c5c
640236f2:	add    eax,0xc
640236f5:	mov    ecx,DWORD PTR [edx-0x4]
640236f8:	xor    ecx,eax
640236fa:	call   0x64013c5c
640236ff:	mov    eax,0x6402c758
64023704:	jmp    0x6401391e
64023709:	int3   
6402370a:	int3   
6402370b:	int3   
6402370c:	int3   
6402370d:	int3   
6402370e:	int3   
6402370f:	int3   
64023710:	lea    ecx,[ebp-0x20]
64023713:	jmp    0x6400acf0
64023718:	mov    edx,DWORD PTR [esp+0x8]
6402371c:	lea    eax,[edx-0x1c]
6402371f:	mov    ecx,DWORD PTR [edx-0x20]
64023722:	xor    ecx,eax
64023724:	call   0x64013c5c
64023729:	mov    eax,0x6402c784
6402372e:	jmp    0x6401391e
64023733:	int3   
64023734:	int3   
64023735:	int3   
64023736:	int3   
64023737:	int3   
64023738:	int3   
64023739:	int3   
6402373a:	int3   
6402373b:	int3   
6402373c:	int3   
6402373d:	int3   
6402373e:	int3   
6402373f:	int3   
64023740:	mov    eax,DWORD PTR [ebp-0x10]
64023743:	and    eax,0x1
64023746:	je     0x64023758
6402374c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023750:	mov    edi,DWORD PTR [ebp+0x8]
64023753:	jmp    0x6400a980
64023758:	ret    
64023759:	mov    edx,DWORD PTR [esp+0x8]
6402375d:	lea    eax,[edx-0x8]
64023760:	mov    ecx,DWORD PTR [edx-0xc]
64023763:	xor    ecx,eax
64023765:	call   0x64013c5c
6402376a:	mov    eax,0x6402c7b0
6402376f:	jmp    0x6401391e
64023774:	int3   
64023775:	int3   
64023776:	int3   
64023777:	int3   
64023778:	int3   
64023779:	int3   
6402377a:	int3   
6402377b:	int3   
6402377c:	int3   
6402377d:	int3   
6402377e:	int3   
6402377f:	int3   
64023780:	mov    edx,DWORD PTR [esp+0x8]
64023784:	lea    eax,[edx+0xc]
64023787:	mov    ecx,DWORD PTR [edx-0x2c]
6402378a:	xor    ecx,eax
6402378c:	call   0x64013c5c
64023791:	mov    eax,0x6402c83c
64023796:	jmp    0x6401391e
6402379b:	int3   
6402379c:	int3   
6402379d:	int3   
6402379e:	int3   
6402379f:	int3   
640237a0:	mov    eax,DWORD PTR [ebp-0x18]
640237a3:	push   eax
640237a4:	mov    ecx,DWORD PTR [ebp-0x1c]
640237a7:	push   ecx
640237a8:	call   0x64002c60
640237ad:	add    esp,0x8
640237b0:	ret    
640237b1:	mov    edx,DWORD PTR [esp+0x8]
640237b5:	lea    eax,[edx+0xc]
640237b8:	mov    ecx,DWORD PTR [edx-0x20]
640237bb:	xor    ecx,eax
640237bd:	call   0x64013c5c
640237c2:	mov    eax,0x6402c89c
640237c7:	jmp    0x6401391e
640237cc:	int3   
640237cd:	int3   
640237ce:	int3   
640237cf:	int3   
640237d0:	mov    ecx,DWORD PTR [ebp-0x10]
640237d3:	jmp    0x64001650
640237d8:	mov    edx,DWORD PTR [esp+0x8]
640237dc:	lea    eax,[edx-0xc]
640237df:	mov    ecx,DWORD PTR [edx-0x10]
640237e2:	xor    ecx,eax
640237e4:	call   0x64013c5c
640237e9:	mov    eax,0x6402c8c8
640237ee:	jmp    0x6401391e
640237f3:	int3   
640237f4:	int3   
640237f5:	int3   
640237f6:	int3   
640237f7:	int3   
640237f8:	int3   
640237f9:	int3   
640237fa:	int3   
640237fb:	int3   
640237fc:	int3   
640237fd:	int3   
640237fe:	int3   
640237ff:	int3   
64023800:	mov    ecx,DWORD PTR [ebp-0x10]
64023803:	jmp    0x64001650
64023808:	mov    edx,DWORD PTR [esp+0x8]
6402380c:	lea    eax,[edx-0x10]
6402380f:	mov    ecx,DWORD PTR [edx-0x14]
64023812:	xor    ecx,eax
64023814:	call   0x64013c5c
64023819:	mov    eax,0x6402c8f4
6402381e:	jmp    0x6401391e
64023823:	int3   
64023824:	int3   
64023825:	int3   
64023826:	int3   
64023827:	int3   
64023828:	int3   
64023829:	int3   
6402382a:	int3   
6402382b:	int3   
6402382c:	int3   
6402382d:	int3   
6402382e:	int3   
6402382f:	int3   
64023830:	lea    ecx,[ebp+0x24]
64023833:	jmp    0x64001650
64023838:	lea    ecx,[ebp+0x8]
6402383b:	jmp    0x64001650
64023840:	mov    edx,DWORD PTR [esp+0x8]
64023844:	lea    eax,[edx-0x8]
64023847:	mov    ecx,DWORD PTR [edx-0xc]
6402384a:	xor    ecx,eax
6402384c:	call   0x64013c5c
64023851:	mov    eax,0x6402c928
64023856:	jmp    0x6401391e
6402385b:	int3   
6402385c:	int3   
6402385d:	int3   
6402385e:	int3   
6402385f:	int3   
64023860:	lea    ecx,[ebp-0x28]
64023863:	jmp    0x64001650
64023868:	mov    edx,DWORD PTR [esp+0x8]
6402386c:	lea    eax,[edx-0x28]
6402386f:	mov    ecx,DWORD PTR [edx-0x2c]
64023872:	xor    ecx,eax
64023874:	call   0x64013c5c
64023879:	mov    eax,0x6402c954
6402387e:	jmp    0x6401391e
64023883:	int3   
64023884:	int3   
64023885:	int3   
64023886:	int3   
64023887:	int3   
64023888:	int3   
64023889:	int3   
6402388a:	int3   
6402388b:	int3   
6402388c:	int3   
6402388d:	int3   
6402388e:	int3   
6402388f:	int3   
64023890:	mov    ecx,DWORD PTR [ebp-0x10]
64023893:	jmp    0x64001650
64023898:	mov    edx,DWORD PTR [esp+0x8]
6402389c:	lea    eax,[edx-0x10]
6402389f:	mov    ecx,DWORD PTR [edx-0x14]
640238a2:	xor    ecx,eax
640238a4:	call   0x64013c5c
640238a9:	mov    eax,0x6402c980
640238ae:	jmp    0x6401391e
640238b3:	int3   
640238b4:	int3   
640238b5:	int3   
640238b6:	int3   
640238b7:	int3   
640238b8:	int3   
640238b9:	int3   
640238ba:	int3   
640238bb:	int3   
640238bc:	int3   
640238bd:	int3   
640238be:	int3   
640238bf:	int3   
640238c0:	mov    edx,DWORD PTR [esp+0x8]
640238c4:	lea    eax,[edx+0xc]
640238c7:	mov    ecx,DWORD PTR [edx-0x1c]
640238ca:	xor    ecx,eax
640238cc:	call   0x64013c5c
640238d1:	mov    eax,0x6402ca0c
640238d6:	jmp    0x6401391e
640238db:	int3   
640238dc:	int3   
640238dd:	int3   
640238de:	int3   
640238df:	int3   
640238e0:	mov    eax,DWORD PTR [ebp-0x14]
640238e3:	push   eax
640238e4:	mov    ecx,DWORD PTR [ebp-0x18]
640238e7:	push   ecx
640238e8:	call   0x64002c60
640238ed:	add    esp,0x8
640238f0:	ret    
640238f1:	mov    edx,DWORD PTR [esp+0x8]
640238f5:	lea    eax,[edx+0xc]
640238f8:	mov    ecx,DWORD PTR [edx-0x1c]
640238fb:	xor    ecx,eax
640238fd:	call   0x64013c5c
64023902:	mov    eax,0x6402ca6c
64023907:	jmp    0x6401391e
6402390c:	int3   
6402390d:	int3   
6402390e:	int3   
6402390f:	int3   
64023910:	mov    eax,DWORD PTR [ebp-0x14]
64023913:	push   eax
64023914:	mov    ecx,DWORD PTR [ebp-0x18]
64023917:	push   ecx
64023918:	call   0x64002c60
6402391d:	add    esp,0x8
64023920:	ret    
64023921:	mov    edx,DWORD PTR [esp+0x8]
64023925:	lea    eax,[edx+0xc]
64023928:	mov    ecx,DWORD PTR [edx-0x1c]
6402392b:	xor    ecx,eax
6402392d:	call   0x64013c5c
64023932:	mov    eax,0x6402cacc
64023937:	jmp    0x6401391e
6402393c:	int3   
6402393d:	int3   
6402393e:	int3   
6402393f:	int3   
64023940:	mov    edx,DWORD PTR [esp+0x8]
64023944:	lea    eax,[edx+0xc]
64023947:	mov    ecx,DWORD PTR [edx-0x1c]
6402394a:	xor    ecx,eax
6402394c:	call   0x64013c5c
64023951:	mov    eax,0x6402cb24
64023956:	jmp    0x6401391e
6402395b:	int3   
6402395c:	int3   
6402395d:	int3   
6402395e:	int3   
6402395f:	int3   
64023960:	lea    ecx,[ebp+0x8]
64023963:	jmp    0x640079e0
64023968:	mov    edx,DWORD PTR [esp+0x8]
6402396c:	lea    eax,[edx-0x14]
6402396f:	mov    ecx,DWORD PTR [edx-0x18]
64023972:	xor    ecx,eax
64023974:	call   0x64013c5c
64023979:	mov    eax,0x6402cb50
6402397e:	jmp    0x6401391e
64023983:	int3   
64023984:	int3   
64023985:	int3   
64023986:	int3   
64023987:	int3   
64023988:	int3   
64023989:	int3   
6402398a:	int3   
6402398b:	int3   
6402398c:	int3   
6402398d:	int3   
6402398e:	int3   
6402398f:	int3   
64023990:	lea    ecx,[ebp+0x8]
64023993:	jmp    0x64001650
64023998:	mov    edx,DWORD PTR [esp+0x8]
6402399c:	lea    eax,[edx-0x14]
6402399f:	mov    ecx,DWORD PTR [edx-0x18]
640239a2:	xor    ecx,eax
640239a4:	call   0x64013c5c
640239a9:	mov    eax,0x6402cb7c
640239ae:	jmp    0x6401391e
640239b3:	int3   
640239b4:	int3   
640239b5:	int3   
640239b6:	int3   
640239b7:	int3   
640239b8:	int3   
640239b9:	int3   
640239ba:	int3   
640239bb:	int3   
640239bc:	int3   
640239bd:	int3   
640239be:	int3   
640239bf:	int3   
640239c0:	mov    ecx,DWORD PTR [ebp-0x10]
640239c3:	jmp    0x6401351b
640239c8:	mov    edx,DWORD PTR [esp+0x8]
640239cc:	lea    eax,[edx-0xc]
640239cf:	mov    ecx,DWORD PTR [edx-0x10]
640239d2:	xor    ecx,eax
640239d4:	call   0x64013c5c
640239d9:	mov    eax,0x6402cba8
640239de:	jmp    0x6401391e
640239e3:	int3   
640239e4:	int3   
640239e5:	int3   
640239e6:	int3   
640239e7:	int3   
640239e8:	int3   
640239e9:	int3   
640239ea:	int3   
640239eb:	int3   
640239ec:	int3   
640239ed:	int3   
640239ee:	int3   
640239ef:	int3   
640239f0:	mov    ecx,DWORD PTR [ebp-0x10]
640239f3:	jmp    0x6401351b
640239f8:	mov    edx,DWORD PTR [esp+0x8]
640239fc:	lea    eax,[edx-0x8]
640239ff:	mov    ecx,DWORD PTR [edx-0xc]
64023a02:	xor    ecx,eax
64023a04:	call   0x64013c5c
64023a09:	mov    eax,0x6402cbd4
64023a0e:	jmp    0x6401391e
64023a13:	int3   
64023a14:	int3   
64023a15:	int3   
64023a16:	int3   
64023a17:	int3   
64023a18:	int3   
64023a19:	int3   
64023a1a:	int3   
64023a1b:	int3   
64023a1c:	int3   
64023a1d:	int3   
64023a1e:	int3   
64023a1f:	int3   
64023a20:	mov    ecx,DWORD PTR [ebp-0x10]
64023a23:	jmp    0x6401351b
64023a28:	mov    edx,DWORD PTR [esp+0x8]
64023a2c:	lea    eax,[edx-0xc]
64023a2f:	mov    ecx,DWORD PTR [edx-0x10]
64023a32:	xor    ecx,eax
64023a34:	call   0x64013c5c
64023a39:	mov    eax,0x6402cc00
64023a3e:	jmp    0x6401391e
64023a43:	int3   
64023a44:	int3   
64023a45:	int3   
64023a46:	int3   
64023a47:	int3   
64023a48:	int3   
64023a49:	int3   
64023a4a:	int3   
64023a4b:	int3   
64023a4c:	int3   
64023a4d:	int3   
64023a4e:	int3   
64023a4f:	int3   
64023a50:	mov    ecx,DWORD PTR [ebp-0x10]
64023a53:	jmp    0x6401351b
64023a58:	mov    edx,DWORD PTR [esp+0x8]
64023a5c:	lea    eax,[edx-0x8]
64023a5f:	mov    ecx,DWORD PTR [edx-0xc]
64023a62:	xor    ecx,eax
64023a64:	call   0x64013c5c
64023a69:	mov    eax,0x6402cc2c
64023a6e:	jmp    0x6401391e
64023a73:	int3   
64023a74:	int3   
64023a75:	int3   
64023a76:	int3   
64023a77:	int3   
64023a78:	int3   
64023a79:	int3   
64023a7a:	int3   
64023a7b:	int3   
64023a7c:	int3   
64023a7d:	int3   
64023a7e:	int3   
64023a7f:	int3   
64023a80:	mov    eax,DWORD PTR [ebp-0x34]
64023a83:	and    eax,0x1
64023a86:	je     0x64023a98
64023a8c:	and    DWORD PTR [ebp-0x34],0xfffffffe
64023a90:	mov    ecx,DWORD PTR [ebp-0x30]
64023a93:	jmp    0x64001650
64023a98:	ret    
64023a99:	lea    ecx,[ebp-0x2c]
64023a9c:	jmp    0x64001650
64023aa1:	lea    ecx,[ebp-0x3c]
64023aa4:	jmp    0x64001930
64023aa9:	lea    ecx,[ebp-0x2c]
64023aac:	jmp    0x64001650
64023ab1:	lea    ecx,[ebp-0x3c]
64023ab4:	jmp    0x64001930
64023ab9:	lea    ecx,[ebp-0x2c]
64023abc:	jmp    0x64001650
64023ac1:	lea    ecx,[ebp-0x2c]
64023ac4:	jmp    0x64001650
64023ac9:	mov    edx,DWORD PTR [esp+0x8]
64023acd:	lea    eax,[edx-0x40]
64023ad0:	mov    ecx,DWORD PTR [edx-0x44]
64023ad3:	xor    ecx,eax
64023ad5:	call   0x64013c5c
64023ada:	add    eax,0x10
64023add:	mov    ecx,DWORD PTR [edx-0x4]
64023ae0:	xor    ecx,eax
64023ae2:	call   0x64013c5c
64023ae7:	mov    eax,0x6402cc88
64023aec:	jmp    0x6401391e
64023af1:	int3   
64023af2:	int3   
64023af3:	int3   
64023af4:	int3   
64023af5:	int3   
64023af6:	int3   
64023af7:	int3   
64023af8:	int3   
64023af9:	int3   
64023afa:	int3   
64023afb:	int3   
64023afc:	int3   
64023afd:	int3   
64023afe:	int3   
64023aff:	int3   
64023b00:	lea    ecx,[ebp-0x30]
64023b03:	jmp    0x64001650
64023b08:	mov    eax,DWORD PTR [ebp-0x4c]
64023b0b:	push   eax
64023b0c:	mov    ecx,DWORD PTR [ebp-0x50]
64023b0f:	push   ecx
64023b10:	call   0x64002c60
64023b15:	add    esp,0x8
64023b18:	ret    
64023b19:	mov    edx,DWORD PTR [esp+0x8]
64023b1d:	lea    eax,[edx+0xc]
64023b20:	mov    ecx,DWORD PTR [edx-0x54]
64023b23:	xor    ecx,eax
64023b25:	call   0x64013c5c
64023b2a:	mov    ecx,DWORD PTR [edx-0x8]
64023b2d:	xor    ecx,eax
64023b2f:	call   0x64013c5c
64023b34:	mov    eax,0x6402ccf8
64023b39:	jmp    0x6401391e
64023b3e:	int3   
64023b3f:	int3   
64023b40:	mov    ecx,DWORD PTR [ebp-0x10]
64023b43:	jmp    0x640079e0
64023b48:	mov    edx,DWORD PTR [esp+0x8]
64023b4c:	lea    eax,[edx-0xc]
64023b4f:	mov    ecx,DWORD PTR [edx-0x10]
64023b52:	xor    ecx,eax
64023b54:	call   0x64013c5c
64023b59:	mov    eax,0x6402cd24
64023b5e:	jmp    0x6401391e
64023b63:	int3   
64023b64:	int3   
64023b65:	int3   
64023b66:	int3   
64023b67:	int3   
64023b68:	int3   
64023b69:	int3   
64023b6a:	int3   
64023b6b:	int3   
64023b6c:	int3   
64023b6d:	int3   
64023b6e:	int3   
64023b6f:	int3   
64023b70:	mov    ecx,DWORD PTR [ebp-0x10]
64023b73:	jmp    0x640079e0
64023b78:	mov    edx,DWORD PTR [esp+0x8]
64023b7c:	lea    eax,[edx-0x10]
64023b7f:	mov    ecx,DWORD PTR [edx-0x14]
64023b82:	xor    ecx,eax
64023b84:	call   0x64013c5c
64023b89:	mov    eax,0x6402cd50
64023b8e:	jmp    0x6401391e
64023b93:	int3   
64023b94:	int3   
64023b95:	int3   
64023b96:	int3   
64023b97:	int3   
64023b98:	int3   
64023b99:	int3   
64023b9a:	int3   
64023b9b:	int3   
64023b9c:	int3   
64023b9d:	int3   
64023b9e:	int3   
64023b9f:	int3   
64023ba0:	lea    ecx,[ebp+0x24]
64023ba3:	jmp    0x640079e0
64023ba8:	lea    ecx,[ebp+0x8]
64023bab:	jmp    0x640079e0
64023bb0:	mov    edx,DWORD PTR [esp+0x8]
64023bb4:	lea    eax,[edx-0x8]
64023bb7:	mov    ecx,DWORD PTR [edx-0xc]
64023bba:	xor    ecx,eax
64023bbc:	call   0x64013c5c
64023bc1:	mov    eax,0x6402cd84
64023bc6:	jmp    0x6401391e
64023bcb:	int3   
64023bcc:	int3   
64023bcd:	int3   
64023bce:	int3   
64023bcf:	int3   
64023bd0:	mov    ecx,DWORD PTR [ebp-0x10]
64023bd3:	jmp    0x640079e0
64023bd8:	mov    edx,DWORD PTR [esp+0x8]
64023bdc:	lea    eax,[edx-0x10]
64023bdf:	mov    ecx,DWORD PTR [edx-0x14]
64023be2:	xor    ecx,eax
64023be4:	call   0x64013c5c
64023be9:	mov    eax,0x6402cdb0
64023bee:	jmp    0x6401391e
64023bf3:	int3   
64023bf4:	int3   
64023bf5:	int3   
64023bf6:	int3   
64023bf7:	int3   
64023bf8:	int3   
64023bf9:	int3   
64023bfa:	int3   
64023bfb:	int3   
64023bfc:	int3   
64023bfd:	int3   
64023bfe:	int3   
64023bff:	int3   
64023c00:	mov    eax,DWORD PTR [ebp-0x14]
64023c03:	push   eax
64023c04:	mov    ecx,DWORD PTR [ebp-0x18]
64023c07:	push   ecx
64023c08:	call   0x64002c60
64023c0d:	add    esp,0x8
64023c10:	ret    
64023c11:	mov    edx,DWORD PTR [esp+0x8]
64023c15:	lea    eax,[edx+0xc]
64023c18:	mov    ecx,DWORD PTR [edx-0x1c]
64023c1b:	xor    ecx,eax
64023c1d:	call   0x64013c5c
64023c22:	mov    eax,0x6402ce10
64023c27:	jmp    0x6401391e
64023c2c:	int3   
64023c2d:	int3   
64023c2e:	int3   
64023c2f:	int3   
64023c30:	lea    eax,[ebp-0x10]
64023c33:	jmp    0x640016b0
64023c38:	mov    edx,DWORD PTR [esp+0x8]
64023c3c:	lea    eax,[edx-0x34]
64023c3f:	mov    ecx,DWORD PTR [edx-0x38]
64023c42:	xor    ecx,eax
64023c44:	call   0x64013c5c
64023c49:	mov    eax,0x6402ce3c
64023c4e:	jmp    0x6401391e
64023c53:	int3   
64023c54:	int3   
64023c55:	int3   
64023c56:	int3   
64023c57:	int3   
64023c58:	int3   
64023c59:	int3   
64023c5a:	int3   
64023c5b:	int3   
64023c5c:	int3   
64023c5d:	int3   
64023c5e:	int3   
64023c5f:	int3   
64023c60:	lea    ecx,[ebp-0x54]
64023c63:	jmp    0x64001650
64023c68:	mov    edx,DWORD PTR [esp+0x8]
64023c6c:	lea    eax,[edx-0x4c]
64023c6f:	mov    ecx,DWORD PTR [edx-0x50]
64023c72:	xor    ecx,eax
64023c74:	call   0x64013c5c
64023c79:	mov    eax,0x6402ce68
64023c7e:	jmp    0x6401391e
64023c83:	int3   
64023c84:	int3   
64023c85:	int3   
64023c86:	int3   
64023c87:	int3   
64023c88:	int3   
64023c89:	int3   
64023c8a:	int3   
64023c8b:	int3   
64023c8c:	int3   
64023c8d:	int3   
64023c8e:	int3   
64023c8f:	int3   
64023c90:	lea    ecx,[ebp-0x30]
64023c93:	jmp    0x64001650
64023c98:	mov    edx,DWORD PTR [esp+0x8]
64023c9c:	lea    eax,[edx+0xc]
64023c9f:	mov    ecx,DWORD PTR [edx-0x44]
64023ca2:	xor    ecx,eax
64023ca4:	call   0x64013c5c
64023ca9:	mov    ecx,DWORD PTR [edx-0x8]
64023cac:	xor    ecx,eax
64023cae:	call   0x64013c5c
64023cb3:	mov    eax,0x6402cefc
64023cb8:	jmp    0x6401391e
64023cbd:	int3   
64023cbe:	int3   
64023cbf:	int3   
64023cc0:	lea    ecx,[ebp-0x54]
64023cc3:	jmp    0x64001650
64023cc8:	mov    edx,DWORD PTR [esp+0x8]
64023ccc:	lea    eax,[edx-0x5c]
64023ccf:	mov    ecx,DWORD PTR [edx-0x60]
64023cd2:	xor    ecx,eax
64023cd4:	call   0x64013c5c
64023cd9:	mov    eax,0x6402cf28
64023cde:	jmp    0x6401391e
64023ce3:	int3   
64023ce4:	int3   
64023ce5:	int3   
64023ce6:	int3   
64023ce7:	int3   
64023ce8:	int3   
64023ce9:	int3   
64023cea:	int3   
64023ceb:	int3   
64023cec:	int3   
64023ced:	int3   
64023cee:	int3   
64023cef:	int3   
64023cf0:	lea    ecx,[ebp-0x54]
64023cf3:	jmp    0x64001650
64023cf8:	mov    edx,DWORD PTR [esp+0x8]
64023cfc:	lea    eax,[edx-0x5c]
64023cff:	mov    ecx,DWORD PTR [edx-0x60]
64023d02:	xor    ecx,eax
64023d04:	call   0x64013c5c
64023d09:	mov    eax,0x6402cf54
64023d0e:	jmp    0x6401391e
64023d13:	int3   
64023d14:	int3   
64023d15:	int3   
64023d16:	int3   
64023d17:	int3   
64023d18:	int3   
64023d19:	int3   
64023d1a:	int3   
64023d1b:	int3   
64023d1c:	int3   
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	lea    ecx,[ebp-0x54]
64023d23:	jmp    0x64001650
64023d28:	mov    edx,DWORD PTR [esp+0x8]
64023d2c:	lea    eax,[edx-0x5c]
64023d2f:	mov    ecx,DWORD PTR [edx-0x60]
64023d32:	xor    ecx,eax
64023d34:	call   0x64013c5c
64023d39:	mov    eax,0x6402cf80
64023d3e:	jmp    0x6401391e
64023d43:	int3   
64023d44:	int3   
64023d45:	int3   
64023d46:	int3   
64023d47:	int3   
64023d48:	int3   
64023d49:	int3   
64023d4a:	int3   
64023d4b:	int3   
64023d4c:	int3   
64023d4d:	int3   
64023d4e:	int3   
64023d4f:	int3   
64023d50:	lea    ecx,[ebp-0x54]
64023d53:	jmp    0x64001650
64023d58:	mov    edx,DWORD PTR [esp+0x8]
64023d5c:	lea    eax,[edx-0x5c]
64023d5f:	mov    ecx,DWORD PTR [edx-0x60]
64023d62:	xor    ecx,eax
64023d64:	call   0x64013c5c
64023d69:	mov    eax,0x6402cfac
64023d6e:	jmp    0x6401391e
64023d73:	int3   
64023d74:	int3   
64023d75:	int3   
64023d76:	int3   
64023d77:	int3   
64023d78:	int3   
64023d79:	int3   
64023d7a:	int3   
64023d7b:	int3   
64023d7c:	int3   
64023d7d:	int3   
64023d7e:	int3   
64023d7f:	int3   
64023d80:	lea    ecx,[ebp-0x50]
64023d83:	jmp    0x64001650
64023d88:	mov    edx,DWORD PTR [esp+0x8]
64023d8c:	lea    eax,[edx-0x54]
64023d8f:	mov    ecx,DWORD PTR [edx-0x58]
64023d92:	xor    ecx,eax
64023d94:	call   0x64013c5c
64023d99:	mov    eax,0x6402cfd8
64023d9e:	jmp    0x6401391e
64023da3:	int3   
64023da4:	int3   
64023da5:	int3   
64023da6:	int3   
64023da7:	int3   
64023da8:	int3   
64023da9:	int3   
64023daa:	int3   
64023dab:	int3   
64023dac:	int3   
64023dad:	int3   
64023dae:	int3   
64023daf:	int3   
64023db0:	lea    ecx,[ebp-0x50]
64023db3:	jmp    0x64001650
64023db8:	mov    edx,DWORD PTR [esp+0x8]
64023dbc:	lea    eax,[edx-0x54]
64023dbf:	mov    ecx,DWORD PTR [edx-0x58]
64023dc2:	xor    ecx,eax
64023dc4:	call   0x64013c5c
64023dc9:	mov    eax,0x6402d004
64023dce:	jmp    0x6401391e
64023dd3:	int3   
64023dd4:	int3   
64023dd5:	int3   
64023dd6:	int3   
64023dd7:	int3   
64023dd8:	int3   
64023dd9:	int3   
64023dda:	int3   
64023ddb:	int3   
64023ddc:	int3   
64023ddd:	int3   
64023dde:	int3   
64023ddf:	int3   
64023de0:	mov    eax,ds:0x6403333c
64023de5:	and    eax,0xfffffffe
64023de8:	mov    ds:0x6403333c,eax
64023ded:	ret    
64023dee:	mov    edx,DWORD PTR [esp+0x8]
64023df2:	lea    eax,[edx]
64023df4:	mov    ecx,DWORD PTR [edx-0x4]
64023df7:	xor    ecx,eax
64023df9:	call   0x64013c5c
64023dfe:	mov    eax,0x6402d030
64023e03:	jmp    0x6401391e
64023e08:	int3   
64023e09:	int3   
64023e0a:	int3   
64023e0b:	int3   
64023e0c:	int3   
64023e0d:	int3   
64023e0e:	int3   
64023e0f:	int3   
64023e10:	mov    eax,ds:0x64033340
64023e15:	and    eax,0xfffffffe
64023e18:	mov    ds:0x64033340,eax
64023e1d:	ret    
64023e1e:	mov    edx,DWORD PTR [esp+0x8]
64023e22:	lea    eax,[edx]
64023e24:	mov    ecx,DWORD PTR [edx-0x4]
64023e27:	xor    ecx,eax
64023e29:	call   0x64013c5c
64023e2e:	mov    eax,0x6402d05c
64023e33:	jmp    0x6401391e
64023e38:	int3   
64023e39:	int3   
64023e3a:	int3   
64023e3b:	int3   
64023e3c:	int3   
64023e3d:	int3   
64023e3e:	int3   
64023e3f:	int3   
64023e40:	lea    ecx,[ebp-0x4c]
64023e43:	jmp    0x640079e0
64023e48:	lea    ecx,[ebp-0x30]
64023e4b:	jmp    0x640079e0
64023e50:	mov    ecx,DWORD PTR [ebp-0xc0]
64023e56:	jmp    0x640079e0
64023e5b:	lea    ecx,[ebp-0x84]
64023e61:	jmp    0x64006f30
64023e66:	lea    ecx,[ebp-0xbc]
64023e6c:	jmp    0x64006f30
64023e71:	mov    edx,DWORD PTR [esp+0x8]
64023e75:	lea    eax,[edx-0xdc]
64023e7b:	mov    ecx,DWORD PTR [edx-0xe0]
64023e81:	xor    ecx,eax
64023e83:	call   0x64013c5c
64023e88:	add    eax,0xc
64023e8b:	mov    ecx,DWORD PTR [edx-0x8]
64023e8e:	xor    ecx,eax
64023e90:	call   0x64013c5c
64023e95:	mov    eax,0x6402d0a8
64023e9a:	jmp    0x6401391e
64023e9f:	int3   
64023ea0:	lea    ecx,[ebp-0x4c]
64023ea3:	jmp    0x64001650
64023ea8:	lea    ecx,[ebp-0x30]
64023eab:	jmp    0x64001650
64023eb0:	mov    ecx,DWORD PTR [ebp-0xc0]
64023eb6:	jmp    0x64001650
64023ebb:	lea    ecx,[ebp-0x84]
64023ec1:	jmp    0x64006ee0
64023ec6:	lea    ecx,[ebp-0xbc]
64023ecc:	jmp    0x64006ee0
64023ed1:	mov    edx,DWORD PTR [esp+0x8]
64023ed5:	lea    eax,[edx-0xdc]
64023edb:	mov    ecx,DWORD PTR [edx-0xe0]
64023ee1:	xor    ecx,eax
64023ee3:	call   0x64013c5c
64023ee8:	add    eax,0xc
64023eeb:	mov    ecx,DWORD PTR [edx-0x8]
64023eee:	xor    ecx,eax
64023ef0:	call   0x64013c5c
64023ef5:	mov    eax,0x6402d0f4
64023efa:	jmp    0x6401391e
64023eff:	int3   
64023f00:	lea    ecx,[ebp+0x4]
64023f03:	jmp    0x64001930
64023f08:	mov    edx,DWORD PTR [esp+0x8]
64023f0c:	lea    eax,[edx-0x30]
64023f0f:	mov    ecx,DWORD PTR [edx-0x34]
64023f12:	xor    ecx,eax
64023f14:	call   0x64013c5c
64023f19:	add    eax,0xc
64023f1c:	mov    ecx,DWORD PTR [edx-0x4]
64023f1f:	xor    ecx,eax
64023f21:	call   0x64013c5c
64023f26:	mov    eax,0x6402d120
64023f2b:	jmp    0x6401391e
64023f30:	mov    ecx,DWORD PTR [ebp-0x10]
64023f33:	jmp    0x64001930
64023f38:	mov    edx,DWORD PTR [esp+0x8]
64023f3c:	lea    eax,[edx-0xc]
64023f3f:	mov    ecx,DWORD PTR [edx-0x10]
64023f42:	xor    ecx,eax
64023f44:	call   0x64013c5c
64023f49:	mov    eax,0x6402d14c
64023f4e:	jmp    0x6401391e
64023f53:	int3   
64023f54:	int3   
64023f55:	int3   
64023f56:	int3   
64023f57:	int3   
64023f58:	int3   
64023f59:	int3   
64023f5a:	int3   
64023f5b:	int3   
64023f5c:	int3   
64023f5d:	int3   
64023f5e:	int3   
64023f5f:	int3   
64023f60:	lea    ecx,[ebp-0x10]
64023f63:	jmp    0x64001930
64023f68:	mov    edx,DWORD PTR [esp+0x8]
64023f6c:	lea    eax,[edx-0x8]
64023f6f:	mov    ecx,DWORD PTR [edx-0xc]
64023f72:	xor    ecx,eax
64023f74:	call   0x64013c5c
64023f79:	mov    eax,0x6402d178
64023f7e:	jmp    0x6401391e
64023f83:	int3   
64023f84:	int3   
64023f85:	int3   
64023f86:	int3   
64023f87:	int3   
64023f88:	int3   
64023f89:	int3   
64023f8a:	int3   
64023f8b:	int3   
64023f8c:	int3   
64023f8d:	int3   
64023f8e:	int3   
64023f8f:	int3   
64023f90:	mov    ecx,DWORD PTR [ebp-0x10]
64023f93:	jmp    0x64001930
64023f98:	mov    edx,DWORD PTR [esp+0x8]
64023f9c:	lea    eax,[edx-0xc]
64023f9f:	mov    ecx,DWORD PTR [edx-0x10]
64023fa2:	xor    ecx,eax
64023fa4:	call   0x64013c5c
64023fa9:	mov    eax,0x6402d1a4
64023fae:	jmp    0x6401391e
64023fb3:	int3   
64023fb4:	int3   
64023fb5:	int3   
64023fb6:	int3   
64023fb7:	int3   
64023fb8:	int3   
64023fb9:	int3   
64023fba:	int3   
64023fbb:	int3   
64023fbc:	int3   
64023fbd:	int3   
64023fbe:	int3   
64023fbf:	int3   
64023fc0:	mov    eax,ds:0x64033354
64023fc5:	and    eax,0xfffffffe
64023fc8:	mov    ds:0x64033354,eax
64023fcd:	ret    
64023fce:	mov    edx,DWORD PTR [esp+0x8]
64023fd2:	lea    eax,[edx-0xc]
64023fd5:	mov    ecx,DWORD PTR [edx-0x10]
64023fd8:	xor    ecx,eax
64023fda:	call   0x64013c5c
64023fdf:	mov    eax,0x6402d1d0
64023fe4:	jmp    0x6401391e
64023fe9:	int3   
64023fea:	int3   
64023feb:	int3   
64023fec:	int3   
64023fed:	int3   
64023fee:	int3   
64023fef:	int3   
64023ff0:	mov    eax,ds:0x6403335c
64023ff5:	and    eax,0xfffffffe
64023ff8:	mov    ds:0x6403335c,eax
64023ffd:	ret    
64023ffe:	mov    edx,DWORD PTR [esp+0x8]
64024002:	lea    eax,[edx-0xc]
64024005:	mov    ecx,DWORD PTR [edx-0x10]
64024008:	xor    ecx,eax
6402400a:	call   0x64013c5c
6402400f:	mov    eax,0x6402d1fc
64024014:	jmp    0x6401391e
64024019:	int3   
6402401a:	int3   
6402401b:	int3   
6402401c:	int3   
6402401d:	int3   
6402401e:	int3   
6402401f:	int3   
64024020:	mov    eax,ds:0x64033364
64024025:	and    eax,0xfffffffe
64024028:	mov    ds:0x64033364,eax
6402402d:	ret    
6402402e:	mov    edx,DWORD PTR [esp+0x8]
64024032:	lea    eax,[edx-0xc]
64024035:	mov    ecx,DWORD PTR [edx-0x10]
64024038:	xor    ecx,eax
6402403a:	call   0x64013c5c
6402403f:	mov    eax,0x6402d228
64024044:	jmp    0x6401391e
64024049:	int3   
6402404a:	int3   
6402404b:	int3   
6402404c:	int3   
6402404d:	int3   
6402404e:	int3   
6402404f:	int3   
64024050:	mov    eax,ds:0x6403336c
64024055:	and    eax,0xfffffffe
64024058:	mov    ds:0x6403336c,eax
6402405d:	ret    
6402405e:	mov    edx,DWORD PTR [esp+0x8]
64024062:	lea    eax,[edx-0xc]
64024065:	mov    ecx,DWORD PTR [edx-0x10]
64024068:	xor    ecx,eax
6402406a:	call   0x64013c5c
6402406f:	mov    eax,0x6402d254
64024074:	jmp    0x6401391e
64024079:	int3   
6402407a:	int3   
6402407b:	int3   
6402407c:	int3   
6402407d:	int3   
6402407e:	int3   
6402407f:	int3   
64024080:	mov    eax,ds:0x64033374
64024085:	and    eax,0xfffffffe
64024088:	mov    ds:0x64033374,eax
6402408d:	ret    
6402408e:	mov    edx,DWORD PTR [esp+0x8]
64024092:	lea    eax,[edx-0xc]
64024095:	mov    ecx,DWORD PTR [edx-0x10]
64024098:	xor    ecx,eax
6402409a:	call   0x64013c5c
6402409f:	mov    eax,0x6402d280
640240a4:	jmp    0x6401391e
640240a9:	int3   
640240aa:	int3   
640240ab:	int3   
640240ac:	int3   
640240ad:	int3   
640240ae:	int3   
640240af:	int3   
640240b0:	mov    eax,ds:0x6403337c
640240b5:	and    eax,0xfffffffe
640240b8:	mov    ds:0x6403337c,eax
640240bd:	ret    
640240be:	mov    edx,DWORD PTR [esp+0x8]
640240c2:	lea    eax,[edx-0xc]
640240c5:	mov    ecx,DWORD PTR [edx-0x10]
640240c8:	xor    ecx,eax
640240ca:	call   0x64013c5c
640240cf:	mov    eax,0x6402d2ac
640240d4:	jmp    0x6401391e
640240d9:	int3   
640240da:	int3   
640240db:	int3   
640240dc:	int3   
640240dd:	int3   
640240de:	int3   
640240df:	int3   
640240e0:	mov    eax,ds:0x64033384
640240e5:	and    eax,0xfffffffe
640240e8:	mov    ds:0x64033384,eax
640240ed:	ret    
640240ee:	mov    edx,DWORD PTR [esp+0x8]
640240f2:	lea    eax,[edx-0xc]
640240f5:	mov    ecx,DWORD PTR [edx-0x10]
640240f8:	xor    ecx,eax
640240fa:	call   0x64013c5c
640240ff:	mov    eax,0x6402d2d8
64024104:	jmp    0x6401391e
64024109:	int3   
6402410a:	int3   
6402410b:	int3   
6402410c:	int3   
6402410d:	int3   
6402410e:	int3   
6402410f:	int3   
64024110:	mov    eax,ds:0x6403338c
64024115:	and    eax,0xfffffffe
64024118:	mov    ds:0x6403338c,eax
6402411d:	ret    
6402411e:	mov    edx,DWORD PTR [esp+0x8]
64024122:	lea    eax,[edx-0xc]
64024125:	mov    ecx,DWORD PTR [edx-0x10]
64024128:	xor    ecx,eax
6402412a:	call   0x64013c5c
6402412f:	mov    eax,0x6402d304
64024134:	jmp    0x6401391e
64024139:	int3   
6402413a:	int3   
6402413b:	int3   
6402413c:	int3   
6402413d:	int3   
6402413e:	int3   
6402413f:	int3   
64024140:	mov    eax,ds:0x64033394
64024145:	and    eax,0xfffffffe
64024148:	mov    ds:0x64033394,eax
6402414d:	ret    
6402414e:	mov    edx,DWORD PTR [esp+0x8]
64024152:	lea    eax,[edx-0xc]
64024155:	mov    ecx,DWORD PTR [edx-0x10]
64024158:	xor    ecx,eax
6402415a:	call   0x64013c5c
6402415f:	mov    eax,0x6402d330
64024164:	jmp    0x6401391e
64024169:	int3   
6402416a:	int3   
6402416b:	int3   
6402416c:	int3   
6402416d:	int3   
6402416e:	int3   
6402416f:	int3   
64024170:	mov    eax,ds:0x6403339c
64024175:	and    eax,0xfffffffe
64024178:	mov    ds:0x6403339c,eax
6402417d:	ret    
6402417e:	mov    edx,DWORD PTR [esp+0x8]
64024182:	lea    eax,[edx-0xc]
64024185:	mov    ecx,DWORD PTR [edx-0x10]
64024188:	xor    ecx,eax
6402418a:	call   0x64013c5c
6402418f:	mov    eax,0x6402d35c
64024194:	jmp    0x6401391e
64024199:	int3   
6402419a:	int3   
6402419b:	int3   
6402419c:	int3   
6402419d:	int3   
6402419e:	int3   
6402419f:	int3   
640241a0:	mov    eax,ds:0x640333a4
640241a5:	and    eax,0xfffffffe
640241a8:	mov    ds:0x640333a4,eax
640241ad:	ret    
640241ae:	mov    edx,DWORD PTR [esp+0x8]
640241b2:	lea    eax,[edx-0xc]
640241b5:	mov    ecx,DWORD PTR [edx-0x10]
640241b8:	xor    ecx,eax
640241ba:	call   0x64013c5c
640241bf:	mov    eax,0x6402d388
640241c4:	jmp    0x6401391e
640241c9:	int3   
640241ca:	int3   
640241cb:	int3   
640241cc:	int3   
640241cd:	int3   
640241ce:	int3   
640241cf:	int3   
640241d0:	mov    eax,ds:0x640333ac
640241d5:	and    eax,0xfffffffe
640241d8:	mov    ds:0x640333ac,eax
640241dd:	ret    
640241de:	mov    edx,DWORD PTR [esp+0x8]
640241e2:	lea    eax,[edx-0xc]
640241e5:	mov    ecx,DWORD PTR [edx-0x10]
640241e8:	xor    ecx,eax
640241ea:	call   0x64013c5c
640241ef:	mov    eax,0x6402d3b4
640241f4:	jmp    0x6401391e
640241f9:	int3   
640241fa:	int3   
640241fb:	int3   
640241fc:	int3   
640241fd:	int3   
640241fe:	int3   
640241ff:	int3   
64024200:	mov    eax,ds:0x640333b4
64024205:	and    eax,0xfffffffe
64024208:	mov    ds:0x640333b4,eax
6402420d:	ret    
6402420e:	mov    edx,DWORD PTR [esp+0x8]
64024212:	lea    eax,[edx-0xc]
64024215:	mov    ecx,DWORD PTR [edx-0x10]
64024218:	xor    ecx,eax
6402421a:	call   0x64013c5c
6402421f:	mov    eax,0x6402d3e0
64024224:	jmp    0x6401391e
64024229:	int3   
6402422a:	int3   
6402422b:	int3   
6402422c:	int3   
6402422d:	int3   
6402422e:	int3   
6402422f:	int3   
64024230:	mov    eax,ds:0x640333bc
64024235:	and    eax,0xfffffffe
64024238:	mov    ds:0x640333bc,eax
6402423d:	ret    
6402423e:	mov    edx,DWORD PTR [esp+0x8]
64024242:	lea    eax,[edx-0xc]
64024245:	mov    ecx,DWORD PTR [edx-0x10]
64024248:	xor    ecx,eax
6402424a:	call   0x64013c5c
6402424f:	mov    eax,0x6402d40c
64024254:	jmp    0x6401391e
64024259:	int3   
6402425a:	int3   
6402425b:	int3   
6402425c:	int3   
6402425d:	int3   
6402425e:	int3   
6402425f:	int3   
64024260:	mov    eax,ds:0x640333c4
64024265:	and    eax,0xfffffffe
64024268:	mov    ds:0x640333c4,eax
6402426d:	ret    
6402426e:	mov    edx,DWORD PTR [esp+0x8]
64024272:	lea    eax,[edx-0xc]
64024275:	mov    ecx,DWORD PTR [edx-0x10]
64024278:	xor    ecx,eax
6402427a:	call   0x64013c5c
6402427f:	mov    eax,0x6402d438
64024284:	jmp    0x6401391e
64024289:	int3   
6402428a:	int3   
6402428b:	int3   
6402428c:	int3   
6402428d:	int3   
6402428e:	int3   
6402428f:	int3   
64024290:	mov    eax,ds:0x640333cc
64024295:	and    eax,0xfffffffe
64024298:	mov    ds:0x640333cc,eax
6402429d:	ret    
6402429e:	mov    edx,DWORD PTR [esp+0x8]
640242a2:	lea    eax,[edx-0xc]
640242a5:	mov    ecx,DWORD PTR [edx-0x10]
640242a8:	xor    ecx,eax
640242aa:	call   0x64013c5c
640242af:	mov    eax,0x6402d464
640242b4:	jmp    0x6401391e
640242b9:	int3   
640242ba:	int3   
640242bb:	int3   
640242bc:	int3   
640242bd:	int3   
640242be:	int3   
640242bf:	int3   
640242c0:	mov    eax,ds:0x640333d4
640242c5:	and    eax,0xfffffffe
640242c8:	mov    ds:0x640333d4,eax
640242cd:	ret    
640242ce:	mov    edx,DWORD PTR [esp+0x8]
640242d2:	lea    eax,[edx-0xc]
640242d5:	mov    ecx,DWORD PTR [edx-0x10]
640242d8:	xor    ecx,eax
640242da:	call   0x64013c5c
640242df:	mov    eax,0x6402d490
640242e4:	jmp    0x6401391e
640242e9:	int3   
640242ea:	int3   
640242eb:	int3   
640242ec:	int3   
640242ed:	int3   
640242ee:	int3   
640242ef:	int3   
640242f0:	mov    eax,ds:0x640333dc
640242f5:	and    eax,0xfffffffe
640242f8:	mov    ds:0x640333dc,eax
640242fd:	ret    
640242fe:	mov    edx,DWORD PTR [esp+0x8]
64024302:	lea    eax,[edx-0xc]
64024305:	mov    ecx,DWORD PTR [edx-0x10]
64024308:	xor    ecx,eax
6402430a:	call   0x64013c5c
6402430f:	mov    eax,0x6402d4bc
64024314:	jmp    0x6401391e
64024319:	int3   
6402431a:	int3   
6402431b:	int3   
6402431c:	int3   
6402431d:	int3   
6402431e:	int3   
6402431f:	int3   
64024320:	mov    eax,ds:0x640333e4
64024325:	and    eax,0xfffffffe
64024328:	mov    ds:0x640333e4,eax
6402432d:	ret    
6402432e:	mov    edx,DWORD PTR [esp+0x8]
64024332:	lea    eax,[edx-0xc]
64024335:	mov    ecx,DWORD PTR [edx-0x10]
64024338:	xor    ecx,eax
6402433a:	call   0x64013c5c
6402433f:	mov    eax,0x6402d4e8
64024344:	jmp    0x6401391e
64024349:	int3   
6402434a:	int3   
6402434b:	int3   
6402434c:	int3   
6402434d:	int3   
6402434e:	int3   
6402434f:	int3   
64024350:	mov    eax,ds:0x640333ec
64024355:	and    eax,0xfffffffe
64024358:	mov    ds:0x640333ec,eax
6402435d:	ret    
6402435e:	mov    edx,DWORD PTR [esp+0x8]
64024362:	lea    eax,[edx-0xc]
64024365:	mov    ecx,DWORD PTR [edx-0x10]
64024368:	xor    ecx,eax
6402436a:	call   0x64013c5c
6402436f:	mov    eax,0x6402d514
64024374:	jmp    0x6401391e
64024379:	int3   
6402437a:	int3   
6402437b:	int3   
6402437c:	int3   
6402437d:	int3   
6402437e:	int3   
6402437f:	int3   
64024380:	mov    eax,ds:0x640333f4
64024385:	and    eax,0xfffffffe
64024388:	mov    ds:0x640333f4,eax
6402438d:	ret    
6402438e:	mov    edx,DWORD PTR [esp+0x8]
64024392:	lea    eax,[edx-0xc]
64024395:	mov    ecx,DWORD PTR [edx-0x10]
64024398:	xor    ecx,eax
6402439a:	call   0x64013c5c
6402439f:	mov    eax,0x6402d540
640243a4:	jmp    0x6401391e
640243a9:	int3   
640243aa:	int3   
640243ab:	int3   
640243ac:	int3   
640243ad:	int3   
640243ae:	int3   
640243af:	int3   
640243b0:	mov    eax,ds:0x640333fc
640243b5:	and    eax,0xfffffffe
640243b8:	mov    ds:0x640333fc,eax
640243bd:	ret    
640243be:	mov    edx,DWORD PTR [esp+0x8]
640243c2:	lea    eax,[edx-0xc]
640243c5:	mov    ecx,DWORD PTR [edx-0x10]
640243c8:	xor    ecx,eax
640243ca:	call   0x64013c5c
640243cf:	mov    eax,0x6402d56c
640243d4:	jmp    0x6401391e
640243d9:	int3   
640243da:	int3   
640243db:	int3   
640243dc:	int3   
640243dd:	int3   
640243de:	int3   
640243df:	int3   
640243e0:	mov    eax,ds:0x64033404
640243e5:	and    eax,0xfffffffe
640243e8:	mov    ds:0x64033404,eax
640243ed:	ret    
640243ee:	mov    edx,DWORD PTR [esp+0x8]
640243f2:	lea    eax,[edx-0xc]
640243f5:	mov    ecx,DWORD PTR [edx-0x10]
640243f8:	xor    ecx,eax
640243fa:	call   0x64013c5c
640243ff:	mov    eax,0x6402d598
64024404:	jmp    0x6401391e
64024409:	int3   
6402440a:	int3   
6402440b:	int3   
6402440c:	int3   
6402440d:	int3   
6402440e:	int3   
6402440f:	int3   
64024410:	mov    eax,ds:0x6403340c
64024415:	and    eax,0xfffffffe
64024418:	mov    ds:0x6403340c,eax
6402441d:	ret    
6402441e:	mov    edx,DWORD PTR [esp+0x8]
64024422:	lea    eax,[edx-0xc]
64024425:	mov    ecx,DWORD PTR [edx-0x10]
64024428:	xor    ecx,eax
6402442a:	call   0x64013c5c
6402442f:	mov    eax,0x6402d5c4
64024434:	jmp    0x6401391e
64024439:	int3   
6402443a:	int3   
6402443b:	int3   
6402443c:	int3   
6402443d:	int3   
6402443e:	int3   
6402443f:	int3   
64024440:	mov    eax,ds:0x64033414
64024445:	and    eax,0xfffffffe
64024448:	mov    ds:0x64033414,eax
6402444d:	ret    
6402444e:	mov    edx,DWORD PTR [esp+0x8]
64024452:	lea    eax,[edx-0xc]
64024455:	mov    ecx,DWORD PTR [edx-0x10]
64024458:	xor    ecx,eax
6402445a:	call   0x64013c5c
6402445f:	mov    eax,0x6402d5f0
64024464:	jmp    0x6401391e
64024469:	int3   
6402446a:	int3   
6402446b:	int3   
6402446c:	int3   
6402446d:	int3   
6402446e:	int3   
6402446f:	int3   
64024470:	mov    eax,ds:0x6403341c
64024475:	and    eax,0xfffffffe
64024478:	mov    ds:0x6403341c,eax
6402447d:	ret    
6402447e:	mov    edx,DWORD PTR [esp+0x8]
64024482:	lea    eax,[edx-0xc]
64024485:	mov    ecx,DWORD PTR [edx-0x10]
64024488:	xor    ecx,eax
6402448a:	call   0x64013c5c
6402448f:	mov    eax,0x6402d61c
64024494:	jmp    0x6401391e
64024499:	int3   
6402449a:	int3   
6402449b:	int3   
6402449c:	int3   
6402449d:	int3   
6402449e:	int3   
6402449f:	int3   
640244a0:	mov    eax,ds:0x64033424
640244a5:	and    eax,0xfffffffe
640244a8:	mov    ds:0x64033424,eax
640244ad:	ret    
640244ae:	mov    edx,DWORD PTR [esp+0x8]
640244b2:	lea    eax,[edx-0xc]
640244b5:	mov    ecx,DWORD PTR [edx-0x10]
640244b8:	xor    ecx,eax
640244ba:	call   0x64013c5c
640244bf:	mov    eax,0x6402d648
640244c4:	jmp    0x6401391e
640244c9:	int3   
640244ca:	int3   
640244cb:	int3   
640244cc:	int3   
640244cd:	int3   
640244ce:	int3   
640244cf:	int3   
640244d0:	mov    eax,ds:0x6403342c
640244d5:	and    eax,0xfffffffe
640244d8:	mov    ds:0x6403342c,eax
640244dd:	ret    
640244de:	mov    edx,DWORD PTR [esp+0x8]
640244e2:	lea    eax,[edx-0xc]
640244e5:	mov    ecx,DWORD PTR [edx-0x10]
640244e8:	xor    ecx,eax
640244ea:	call   0x64013c5c
640244ef:	mov    eax,0x6402d674
640244f4:	jmp    0x6401391e
640244f9:	int3   
640244fa:	int3   
640244fb:	int3   
640244fc:	int3   
640244fd:	int3   
640244fe:	int3   
640244ff:	int3   
64024500:	mov    eax,ds:0x64033434
64024505:	and    eax,0xfffffffe
64024508:	mov    ds:0x64033434,eax
6402450d:	ret    
6402450e:	mov    edx,DWORD PTR [esp+0x8]
64024512:	lea    eax,[edx-0xc]
64024515:	mov    ecx,DWORD PTR [edx-0x10]
64024518:	xor    ecx,eax
6402451a:	call   0x64013c5c
6402451f:	mov    eax,0x6402d6a0
64024524:	jmp    0x6401391e
64024529:	int3   
6402452a:	int3   
6402452b:	int3   
6402452c:	int3   
6402452d:	int3   
6402452e:	int3   
6402452f:	int3   
64024530:	mov    eax,ds:0x6403343c
64024535:	and    eax,0xfffffffe
64024538:	mov    ds:0x6403343c,eax
6402453d:	ret    
6402453e:	mov    edx,DWORD PTR [esp+0x8]
64024542:	lea    eax,[edx-0xc]
64024545:	mov    ecx,DWORD PTR [edx-0x10]
64024548:	xor    ecx,eax
6402454a:	call   0x64013c5c
6402454f:	mov    eax,0x6402d6cc
64024554:	jmp    0x6401391e
64024559:	int3   
6402455a:	int3   
6402455b:	int3   
6402455c:	int3   
6402455d:	int3   
6402455e:	int3   
6402455f:	int3   
64024560:	mov    eax,ds:0x64033444
64024565:	and    eax,0xfffffffe
64024568:	mov    ds:0x64033444,eax
6402456d:	ret    
6402456e:	mov    edx,DWORD PTR [esp+0x8]
64024572:	lea    eax,[edx-0xc]
64024575:	mov    ecx,DWORD PTR [edx-0x10]
64024578:	xor    ecx,eax
6402457a:	call   0x64013c5c
6402457f:	mov    eax,0x6402d6f8
64024584:	jmp    0x6401391e
64024589:	int3   
6402458a:	int3   
6402458b:	int3   
6402458c:	int3   
6402458d:	int3   
6402458e:	int3   
6402458f:	int3   
64024590:	mov    eax,ds:0x6403344c
64024595:	and    eax,0xfffffffe
64024598:	mov    ds:0x6403344c,eax
6402459d:	ret    
6402459e:	mov    edx,DWORD PTR [esp+0x8]
640245a2:	lea    eax,[edx-0xc]
640245a5:	mov    ecx,DWORD PTR [edx-0x10]
640245a8:	xor    ecx,eax
640245aa:	call   0x64013c5c
640245af:	mov    eax,0x6402d724
640245b4:	jmp    0x6401391e
640245b9:	int3   
640245ba:	int3   
640245bb:	int3   
640245bc:	int3   
640245bd:	int3   
640245be:	int3   
640245bf:	int3   
640245c0:	mov    eax,ds:0x64033454
640245c5:	and    eax,0xfffffffe
640245c8:	mov    ds:0x64033454,eax
640245cd:	ret    
640245ce:	mov    edx,DWORD PTR [esp+0x8]
640245d2:	lea    eax,[edx-0xc]
640245d5:	mov    ecx,DWORD PTR [edx-0x10]
640245d8:	xor    ecx,eax
640245da:	call   0x64013c5c
640245df:	mov    eax,0x6402d750
640245e4:	jmp    0x6401391e
640245e9:	int3   
640245ea:	int3   
640245eb:	int3   
640245ec:	int3   
640245ed:	int3   
640245ee:	int3   
640245ef:	int3   
640245f0:	mov    eax,ds:0x6403345c
640245f5:	and    eax,0xfffffffe
640245f8:	mov    ds:0x6403345c,eax
640245fd:	ret    
640245fe:	mov    edx,DWORD PTR [esp+0x8]
64024602:	lea    eax,[edx-0xc]
64024605:	mov    ecx,DWORD PTR [edx-0x10]
64024608:	xor    ecx,eax
6402460a:	call   0x64013c5c
6402460f:	mov    eax,0x6402d77c
64024614:	jmp    0x6401391e
64024619:	int3   
6402461a:	int3   
6402461b:	int3   
6402461c:	int3   
6402461d:	int3   
6402461e:	int3   
6402461f:	int3   
64024620:	mov    eax,ds:0x64033464
64024625:	and    eax,0xfffffffe
64024628:	mov    ds:0x64033464,eax
6402462d:	ret    
6402462e:	mov    edx,DWORD PTR [esp+0x8]
64024632:	lea    eax,[edx-0xc]
64024635:	mov    ecx,DWORD PTR [edx-0x10]
64024638:	xor    ecx,eax
6402463a:	call   0x64013c5c
6402463f:	mov    eax,0x6402d7a8
64024644:	jmp    0x6401391e
64024649:	int3   
6402464a:	int3   
6402464b:	int3   
6402464c:	int3   
6402464d:	int3   
6402464e:	int3   
6402464f:	int3   
64024650:	mov    eax,ds:0x6403346c
64024655:	and    eax,0xfffffffe
64024658:	mov    ds:0x6403346c,eax
6402465d:	ret    
6402465e:	mov    edx,DWORD PTR [esp+0x8]
64024662:	lea    eax,[edx-0xc]
64024665:	mov    ecx,DWORD PTR [edx-0x10]
64024668:	xor    ecx,eax
6402466a:	call   0x64013c5c
6402466f:	mov    eax,0x6402d7d4
64024674:	jmp    0x6401391e
64024679:	int3   
6402467a:	int3   
6402467b:	int3   
6402467c:	int3   
6402467d:	int3   
6402467e:	int3   
6402467f:	int3   
64024680:	mov    eax,ds:0x64033474
64024685:	and    eax,0xfffffffe
64024688:	mov    ds:0x64033474,eax
6402468d:	ret    
6402468e:	mov    edx,DWORD PTR [esp+0x8]
64024692:	lea    eax,[edx-0xc]
64024695:	mov    ecx,DWORD PTR [edx-0x10]
64024698:	xor    ecx,eax
6402469a:	call   0x64013c5c
6402469f:	mov    eax,0x6402d800
640246a4:	jmp    0x6401391e
640246a9:	int3   
640246aa:	int3   
640246ab:	int3   
640246ac:	int3   
640246ad:	int3   
640246ae:	int3   
640246af:	int3   
640246b0:	mov    eax,ds:0x6403347c
640246b5:	and    eax,0xfffffffe
640246b8:	mov    ds:0x6403347c,eax
640246bd:	ret    
640246be:	mov    edx,DWORD PTR [esp+0x8]
640246c2:	lea    eax,[edx-0xc]
640246c5:	mov    ecx,DWORD PTR [edx-0x10]
640246c8:	xor    ecx,eax
640246ca:	call   0x64013c5c
640246cf:	mov    eax,0x6402d82c
640246d4:	jmp    0x6401391e
640246d9:	int3   
640246da:	int3   
640246db:	int3   
640246dc:	int3   
640246dd:	int3   
640246de:	int3   
640246df:	int3   
640246e0:	mov    eax,ds:0x64033484
640246e5:	and    eax,0xfffffffe
640246e8:	mov    ds:0x64033484,eax
640246ed:	ret    
640246ee:	mov    edx,DWORD PTR [esp+0x8]
640246f2:	lea    eax,[edx-0xc]
640246f5:	mov    ecx,DWORD PTR [edx-0x10]
640246f8:	xor    ecx,eax
640246fa:	call   0x64013c5c
640246ff:	mov    eax,0x6402d858
64024704:	jmp    0x6401391e
64024709:	int3   
6402470a:	int3   
6402470b:	int3   
6402470c:	int3   
6402470d:	int3   
6402470e:	int3   
6402470f:	int3   
64024710:	mov    eax,ds:0x6403348c
64024715:	and    eax,0xfffffffe
64024718:	mov    ds:0x6403348c,eax
6402471d:	ret    
6402471e:	mov    edx,DWORD PTR [esp+0x8]
64024722:	lea    eax,[edx-0xc]
64024725:	mov    ecx,DWORD PTR [edx-0x10]
64024728:	xor    ecx,eax
6402472a:	call   0x64013c5c
6402472f:	mov    eax,0x6402d884
64024734:	jmp    0x6401391e
64024739:	int3   
6402473a:	int3   
6402473b:	int3   
6402473c:	int3   
6402473d:	int3   
6402473e:	int3   
6402473f:	int3   
64024740:	mov    eax,ds:0x64033494
64024745:	and    eax,0xfffffffe
64024748:	mov    ds:0x64033494,eax
6402474d:	ret    
6402474e:	mov    edx,DWORD PTR [esp+0x8]
64024752:	lea    eax,[edx-0xc]
64024755:	mov    ecx,DWORD PTR [edx-0x10]
64024758:	xor    ecx,eax
6402475a:	call   0x64013c5c
6402475f:	mov    eax,0x6402d8b0
64024764:	jmp    0x6401391e
64024769:	int3   
6402476a:	int3   
6402476b:	int3   
6402476c:	int3   
6402476d:	int3   
6402476e:	int3   
6402476f:	int3   
64024770:	mov    eax,ds:0x6403349c
64024775:	and    eax,0xfffffffe
64024778:	mov    ds:0x6403349c,eax
6402477d:	ret    
6402477e:	mov    edx,DWORD PTR [esp+0x8]
64024782:	lea    eax,[edx-0xc]
64024785:	mov    ecx,DWORD PTR [edx-0x10]
64024788:	xor    ecx,eax
6402478a:	call   0x64013c5c
6402478f:	mov    eax,0x6402d8dc
64024794:	jmp    0x6401391e
64024799:	int3   
6402479a:	int3   
6402479b:	int3   
6402479c:	int3   
6402479d:	int3   
6402479e:	int3   
6402479f:	int3   
640247a0:	lea    edi,[ebp-0x58]
640247a3:	jmp    0x6400a980
640247a8:	lea    edi,[ebp-0x40]
640247ab:	jmp    0x6400a980
640247b0:	lea    edi,[ebp-0x38]
640247b3:	jmp    0x6400a980
640247b8:	lea    edi,[ebp-0x3c]
640247bb:	jmp    0x6400a980
640247c0:	lea    edi,[ebp-0x40]
640247c3:	jmp    0x6400a980
640247c8:	lea    ecx,[ebp-0x24]
640247cb:	jmp    0x6400acf0
640247d0:	mov    edx,DWORD PTR [esp+0x8]
640247d4:	lea    eax,[edx-0x60]
640247d7:	mov    ecx,DWORD PTR [edx-0x64]
640247da:	xor    ecx,eax
640247dc:	call   0x64013c5c
640247e1:	mov    eax,0x6402d930
640247e6:	jmp    0x6401391e
640247eb:	int3   
640247ec:	int3   
640247ed:	int3   
640247ee:	int3   
640247ef:	int3   
640247f0:	lea    eax,[ebp-0x24]
640247f3:	jmp    0x6400b810
640247f8:	lea    ecx,[ebp-0x10]
640247fb:	jmp    0x64001930
64024800:	lea    ecx,[ebp-0x18]
64024803:	jmp    0x64001930
64024808:	lea    ecx,[ebp-0x40]
6402480b:	jmp    0x64001650
64024810:	mov    edx,DWORD PTR [esp+0x8]
64024814:	lea    eax,[edx+0xc]
64024817:	mov    ecx,DWORD PTR [edx-0x44]
6402481a:	xor    ecx,eax
6402481c:	call   0x64013c5c
64024821:	mov    ecx,DWORD PTR [edx+0x294]
64024827:	xor    ecx,eax
64024829:	call   0x64013c5c
6402482e:	mov    eax,0x6402d974
64024833:	jmp    0x6401391e
64024838:	int3   
64024839:	int3   
6402483a:	int3   
6402483b:	int3   
6402483c:	int3   
6402483d:	int3   
6402483e:	int3   
6402483f:	int3   
64024840:	lea    ecx,[ebp-0x1005c]
64024846:	jmp    0x64001650
6402484b:	lea    ecx,[ebp-0x10074]
64024851:	jmp    0x64002750
64024856:	lea    ecx,[ebp-0x10074]
6402485c:	jmp    0x64002750
64024861:	lea    ecx,[ebp-0x1005c]
64024867:	jmp    0x64001650
6402486c:	mov    edx,DWORD PTR [esp+0x8]
64024870:	lea    eax,[edx-0x10084]
64024876:	mov    ecx,DWORD PTR [edx-0x10088]
6402487c:	xor    ecx,eax
6402487e:	call   0x64013c5c
64024883:	add    eax,0x10
64024886:	mov    ecx,DWORD PTR [edx-0x4]
64024889:	xor    ecx,eax
6402488b:	call   0x64013c5c
64024890:	mov    eax,0x6402d9b8
64024895:	jmp    0x6401391e
6402489a:	int3   
6402489b:	int3   
6402489c:	int3   
6402489d:	int3   
6402489e:	int3   
6402489f:	int3   
640248a0:	lea    ecx,[ebp-0x30]
640248a3:	jmp    0x64001650
640248a8:	lea    ecx,[ebp-0x5c]
640248ab:	jmp    0x64001650
640248b0:	mov    edx,DWORD PTR [esp+0x8]
640248b4:	lea    eax,[edx-0x74]
640248b7:	mov    ecx,DWORD PTR [edx-0x78]
640248ba:	xor    ecx,eax
640248bc:	call   0x64013c5c
640248c1:	add    eax,0xc
640248c4:	mov    ecx,DWORD PTR [edx-0x8]
640248c7:	xor    ecx,eax
640248c9:	call   0x64013c5c
640248ce:	mov    eax,0x6402d9ec
640248d3:	jmp    0x6401391e
640248d8:	int3   
640248d9:	int3   
640248da:	int3   
640248db:	int3   
640248dc:	int3   
640248dd:	int3   
640248de:	int3   
640248df:	int3   
640248e0:	mov    edx,DWORD PTR [esp+0x8]
640248e4:	lea    eax,[edx+0xc]
640248e7:	mov    ecx,DWORD PTR [edx-0x14]
640248ea:	xor    ecx,eax
640248ec:	call   0x64013c5c
640248f1:	mov    eax,0x6402da44
640248f6:	jmp    0x6401391e
640248fb:	int3   
640248fc:	int3   
640248fd:	int3   
640248fe:	int3   
640248ff:	int3   
64024900:	mov    ecx,DWORD PTR [ebp-0x10]
64024903:	jmp    0x64001930
64024908:	mov    edx,DWORD PTR [esp+0x8]
6402490c:	lea    eax,[edx-0xc]
6402490f:	mov    ecx,DWORD PTR [edx-0x10]
64024912:	xor    ecx,eax
64024914:	call   0x64013c5c
64024919:	mov    eax,0x6402da70
6402491e:	jmp    0x6401391e
64024923:	int3   
64024924:	int3   
64024925:	int3   
64024926:	int3   
64024927:	int3   
64024928:	int3   
64024929:	int3   
6402492a:	int3   
6402492b:	int3   
6402492c:	int3   
6402492d:	int3   
6402492e:	int3   
6402492f:	int3   
64024930:	lea    ecx,[ebp-0x1c]
64024933:	jmp    0x64001930
64024938:	mov    edx,DWORD PTR [esp+0x8]
6402493c:	lea    eax,[edx-0x1c]
6402493f:	mov    ecx,DWORD PTR [edx-0x20]
64024942:	xor    ecx,eax
64024944:	call   0x64013c5c
64024949:	mov    eax,0x6402da9c
6402494e:	jmp    0x6401391e
64024953:	int3   
64024954:	int3   
64024955:	int3   
64024956:	int3   
64024957:	int3   
64024958:	int3   
64024959:	int3   
6402495a:	int3   
6402495b:	int3   
6402495c:	int3   
6402495d:	int3   
6402495e:	int3   
6402495f:	int3   
64024960:	mov    edx,DWORD PTR [esp+0x8]
64024964:	lea    eax,[edx+0xc]
64024967:	mov    ecx,DWORD PTR [edx-0x16c]
6402496d:	xor    ecx,eax
6402496f:	call   0x64013c5c
64024974:	mov    ecx,DWORD PTR [edx-0x8]
64024977:	xor    ecx,eax
64024979:	call   0x64013c5c
6402497e:	mov    eax,0x6402daf4
64024983:	jmp    0x6401391e
64024988:	int3   
64024989:	int3   
6402498a:	int3   
6402498b:	int3   
6402498c:	int3   
6402498d:	int3   
6402498e:	int3   
6402498f:	int3   
64024990:	mov    eax,ds:0x640334ac
64024995:	and    eax,0xfffffffe
64024998:	mov    ds:0x640334ac,eax
6402499d:	ret    
6402499e:	lea    ecx,[ebp-0x434]
640249a4:	jmp    0x64001650
640249a9:	lea    ecx,[ebp-0x460]
640249af:	jmp    0x64001650
640249b4:	mov    edx,DWORD PTR [esp+0x8]
640249b8:	lea    eax,[edx-0x46c]
640249be:	mov    ecx,DWORD PTR [edx-0x470]
640249c4:	xor    ecx,eax
640249c6:	call   0x64013c5c
640249cb:	add    eax,0xc
640249ce:	mov    ecx,DWORD PTR [edx-0x8]
640249d1:	xor    ecx,eax
640249d3:	call   0x64013c5c
640249d8:	mov    eax,0x6402db30
640249dd:	jmp    0x6401391e
640249e2:	int3   
640249e3:	int3   
640249e4:	int3   
640249e5:	int3   
640249e6:	int3   
640249e7:	int3   
640249e8:	int3   
640249e9:	int3   
640249ea:	int3   
640249eb:	int3   
640249ec:	int3   
640249ed:	int3   
640249ee:	int3   
640249ef:	int3   
640249f0:	lea    esi,[ebp-0x840]
640249f6:	jmp    0x64002bc0
640249fb:	lea    ecx,[ebp-0x848]
64024a01:	jmp    0x64001930
64024a06:	mov    edx,DWORD PTR [esp+0x8]
64024a0a:	lea    eax,[edx-0x84c]
64024a10:	mov    ecx,DWORD PTR [edx-0x850]
64024a16:	xor    ecx,eax
64024a18:	call   0x64013c5c
64024a1d:	add    eax,0xc
64024a20:	mov    ecx,DWORD PTR [edx-0x8]
64024a23:	xor    ecx,eax
64024a25:	call   0x64013c5c
64024a2a:	mov    eax,0x6402db64
64024a2f:	jmp    0x6401391e
64024a34:	int3   
64024a35:	int3   
64024a36:	int3   
64024a37:	int3   
64024a38:	int3   
64024a39:	int3   
64024a3a:	int3   
64024a3b:	int3   
64024a3c:	int3   
64024a3d:	int3   
64024a3e:	int3   
64024a3f:	int3   
64024a40:	mov    eax,DWORD PTR [ebp-0x54]
64024a43:	and    eax,0x1
64024a46:	je     0x64024a58
64024a4c:	and    DWORD PTR [ebp-0x54],0xfffffffe
64024a50:	mov    ecx,DWORD PTR [ebp+0x4]
64024a53:	jmp    0x64001930
64024a58:	ret    
64024a59:	lea    ecx,[ebp-0x50]
64024a5c:	jmp    0x64001650
64024a61:	lea    ecx,[ebp-0x50]
64024a64:	jmp    0x64001650
64024a69:	mov    edx,DWORD PTR [esp+0x8]
64024a6d:	lea    eax,[edx-0x54]
64024a70:	mov    ecx,DWORD PTR [edx-0x58]
64024a73:	xor    ecx,eax
64024a75:	call   0x64013c5c
64024a7a:	mov    eax,0x6402dba0
64024a7f:	jmp    0x6401391e
64024a84:	int3   
64024a85:	int3   
64024a86:	int3   
64024a87:	int3   
64024a88:	int3   
64024a89:	int3   
64024a8a:	int3   
64024a8b:	int3   
64024a8c:	int3   
64024a8d:	int3   
64024a8e:	int3   
64024a8f:	int3   
64024a90:	lea    ecx,[ebp+0x4]
64024a93:	jmp    0x64001930
64024a98:	lea    ecx,[ebp-0x58]
64024a9b:	jmp    0x64001680
64024aa0:	lea    ecx,[ebp-0x50]
64024aa3:	jmp    0x64001650
64024aa8:	lea    ecx,[ebp-0x50]
64024aab:	jmp    0x64001650
64024ab0:	mov    edx,DWORD PTR [esp+0x8]
64024ab4:	lea    eax,[edx-0x58]
64024ab7:	mov    ecx,DWORD PTR [edx-0x5c]
64024aba:	xor    ecx,eax
64024abc:	call   0x64013c5c
64024ac1:	mov    eax,0x6402dbe4
64024ac6:	jmp    0x6401391e
64024acb:	int3   
64024acc:	int3   
64024acd:	int3   
64024ace:	int3   
64024acf:	int3   
64024ad0:	lea    ecx,[ebp-0x428]
64024ad6:	jmp    0x64001930
64024adb:	mov    edx,DWORD PTR [esp+0x8]
64024adf:	lea    eax,[edx-0x42c]
64024ae5:	mov    ecx,DWORD PTR [edx-0x430]
64024aeb:	xor    ecx,eax
64024aed:	call   0x64013c5c
64024af2:	add    eax,0x10
64024af5:	mov    ecx,DWORD PTR [edx-0x4]
64024af8:	xor    ecx,eax
64024afa:	call   0x64013c5c
64024aff:	mov    eax,0x6402dc10
64024b04:	jmp    0x6401391e
64024b09:	int3   
64024b0a:	int3   
64024b0b:	int3   
64024b0c:	int3   
64024b0d:	int3   
64024b0e:	int3   
64024b0f:	int3   
64024b10:	lea    edi,[ebp-0x18]
64024b13:	jmp    0x6400a980
64024b18:	lea    edi,[ebp-0x1c]
64024b1b:	jmp    0x6400a980
64024b20:	lea    edi,[ebp-0x14]
64024b23:	jmp    0x6400a980
64024b28:	mov    edx,DWORD PTR [esp+0x8]
64024b2c:	lea    eax,[edx-0x1c]
64024b2f:	mov    ecx,DWORD PTR [edx-0x20]
64024b32:	xor    ecx,eax
64024b34:	call   0x64013c5c
64024b39:	mov    eax,0x6402dc5c
64024b3e:	jmp    0x6401391e
64024b43:	int3   
64024b44:	int3   
64024b45:	int3   
64024b46:	int3   
64024b47:	int3   
64024b48:	int3   
64024b49:	int3   
64024b4a:	int3   
64024b4b:	int3   
64024b4c:	int3   
64024b4d:	int3   
64024b4e:	int3   
64024b4f:	int3   
64024b50:	lea    ecx,[ebp+0x40c]
64024b56:	jmp    0x64001930
64024b5b:	mov    eax,ds:0x640334bc
64024b60:	and    eax,0xfffffffe
64024b63:	mov    ds:0x640334bc,eax
64024b68:	ret    
64024b69:	lea    eax,[ebp-0x34]
64024b6c:	jmp    0x64003e40
64024b71:	lea    ecx,[ebp-0x28]
64024b74:	jmp    0x64001650
64024b79:	lea    ecx,[ebp-0x28]
64024b7c:	jmp    0x64001650
64024b81:	lea    ecx,[ebp-0x28]
64024b84:	jmp    0x64001650
64024b89:	lea    ecx,[ebp-0x28]
64024b8c:	jmp    0x64001650
64024b91:	lea    ecx,[ebp-0x28]
64024b94:	jmp    0x64001650
64024b99:	lea    ecx,[ebp-0x28]
64024b9c:	jmp    0x64001650
64024ba1:	lea    ecx,[ebp-0x28]
64024ba4:	jmp    0x64001650
64024ba9:	lea    ecx,[ebp-0x28]
64024bac:	jmp    0x64001650
64024bb1:	lea    ecx,[ebp-0x28]
64024bb4:	jmp    0x64001650
64024bb9:	lea    ecx,[ebp-0x28]
64024bbc:	jmp    0x64001650
64024bc1:	lea    ecx,[ebp-0x28]
64024bc4:	jmp    0x64001650
64024bc9:	lea    ecx,[ebp-0x28]
64024bcc:	jmp    0x64001650
64024bd1:	lea    ecx,[ebp-0x28]
64024bd4:	jmp    0x64001650
64024bd9:	lea    ecx,[ebp-0x28]
64024bdc:	jmp    0x64001650
64024be1:	lea    ecx,[ebp-0x28]
64024be4:	jmp    0x64001650
64024be9:	lea    ecx,[ebp-0x28]
64024bec:	jmp    0x64001650
64024bf1:	lea    ecx,[ebp-0x28]
64024bf4:	jmp    0x64001650
64024bf9:	lea    ecx,[ebp-0x28]
64024bfc:	jmp    0x64001650
64024c01:	lea    ecx,[ebp-0x28]
64024c04:	jmp    0x64001650
64024c09:	lea    ecx,[ebp-0x28]
64024c0c:	jmp    0x64001650
64024c11:	lea    ecx,[ebp-0x28]
64024c14:	jmp    0x64001650
64024c19:	lea    ecx,[ebp-0x28]
64024c1c:	jmp    0x64001650
64024c21:	lea    ecx,[ebp-0x28]
64024c24:	jmp    0x64001650
64024c29:	lea    ecx,[ebp-0x28]
64024c2c:	jmp    0x64001650
64024c31:	lea    ecx,[ebp-0x28]
64024c34:	jmp    0x64001650
64024c39:	lea    ecx,[ebp-0x28]
64024c3c:	jmp    0x64001650
64024c41:	lea    ecx,[ebp-0x28]
64024c44:	jmp    0x64001650
64024c49:	lea    ecx,[ebp-0x28]
64024c4c:	jmp    0x64001650
64024c51:	lea    ecx,[ebp-0x28]
64024c54:	jmp    0x64001650
64024c59:	lea    ecx,[ebp-0x28]
64024c5c:	jmp    0x64001650
64024c61:	lea    ecx,[ebp-0x28]
64024c64:	jmp    0x64001650
64024c69:	lea    ecx,[ebp-0x28]
64024c6c:	jmp    0x64001650
64024c71:	lea    ecx,[ebp-0x28]
64024c74:	jmp    0x64001650
64024c79:	lea    ecx,[ebp-0x28]
64024c7c:	jmp    0x64001650
64024c81:	lea    ecx,[ebp-0x28]
64024c84:	jmp    0x64001650
64024c89:	lea    ecx,[ebp-0x28]
64024c8c:	jmp    0x64001650
64024c91:	lea    ecx,[ebp-0x28]
64024c94:	jmp    0x64001650
64024c99:	lea    ecx,[ebp-0x28]
64024c9c:	jmp    0x64001650
64024ca1:	lea    ecx,[ebp-0x28]
64024ca4:	jmp    0x64001650
64024ca9:	lea    ecx,[ebp-0x28]
64024cac:	jmp    0x64001650
64024cb1:	lea    ecx,[ebp-0x28]
64024cb4:	jmp    0x64001650
64024cb9:	lea    ecx,[ebp-0x28]
64024cbc:	jmp    0x64001650
64024cc1:	lea    ecx,[ebp-0x28]
64024cc4:	jmp    0x64001650
64024cc9:	lea    ecx,[ebp-0x28]
64024ccc:	jmp    0x64001650
64024cd1:	lea    ecx,[ebp-0x28]
64024cd4:	jmp    0x64001650
64024cd9:	lea    eax,[ebp-0x40]
64024cdc:	jmp    0x64003e40
64024ce1:	lea    ecx,[ebp-0x28]
64024ce4:	jmp    0x64001650
64024ce9:	mov    edx,DWORD PTR [esp+0x8]
64024ced:	lea    eax,[edx+0xc]
64024cf0:	mov    ecx,DWORD PTR [edx-0x4c]
64024cf3:	xor    ecx,eax
64024cf5:	call   0x64013c5c
64024cfa:	mov    ecx,DWORD PTR [edx+0x40c]
64024d00:	xor    ecx,eax
64024d02:	call   0x64013c5c
64024d07:	mov    eax,0x6402de10
64024d0c:	jmp    0x6401391e
64024d11:	int3   
64024d12:	int3   
64024d13:	int3   
64024d14:	int3   
64024d15:	int3   
64024d16:	int3   
64024d17:	int3   
64024d18:	int3   
64024d19:	int3   
64024d1a:	int3   
64024d1b:	int3   
64024d1c:	int3   
64024d1d:	int3   
64024d1e:	int3   
64024d1f:	int3   
64024d20:	lea    ecx,[ebp+0x40c]
64024d26:	jmp    0x64001930
64024d2b:	mov    eax,ds:0x640334cc
64024d30:	and    eax,0xfffffffe
64024d33:	mov    ds:0x640334cc,eax
64024d38:	ret    
64024d39:	lea    eax,[ebp-0x34]
64024d3c:	jmp    0x64003e40
64024d41:	lea    ecx,[ebp-0x28]
64024d44:	jmp    0x64001650
64024d49:	lea    ecx,[ebp-0x28]
64024d4c:	jmp    0x64001650
64024d51:	lea    ecx,[ebp-0x28]
64024d54:	jmp    0x64001650
64024d59:	lea    ecx,[ebp-0x28]
64024d5c:	jmp    0x64001650
64024d61:	lea    ecx,[ebp-0x28]
64024d64:	jmp    0x64001650
64024d69:	lea    ecx,[ebp-0x28]
64024d6c:	jmp    0x64001650
64024d71:	lea    ecx,[ebp-0x28]
64024d74:	jmp    0x64001650
64024d79:	lea    ecx,[ebp-0x28]
64024d7c:	jmp    0x64001650
64024d81:	lea    ecx,[ebp-0x28]
64024d84:	jmp    0x64001650
64024d89:	lea    ecx,[ebp-0x28]
64024d8c:	jmp    0x64001650
64024d91:	lea    ecx,[ebp-0x28]
64024d94:	jmp    0x64001650
64024d99:	lea    ecx,[ebp-0x28]
64024d9c:	jmp    0x64001650
64024da1:	lea    ecx,[ebp-0x28]
64024da4:	jmp    0x64001650
64024da9:	lea    ecx,[ebp-0x28]
64024dac:	jmp    0x64001650
64024db1:	lea    ecx,[ebp-0x28]
64024db4:	jmp    0x64001650
64024db9:	lea    ecx,[ebp-0x28]
64024dbc:	jmp    0x64001650
64024dc1:	lea    ecx,[ebp-0x28]
64024dc4:	jmp    0x64001650
64024dc9:	lea    ecx,[ebp-0x28]
64024dcc:	jmp    0x64001650
64024dd1:	lea    ecx,[ebp-0x28]
64024dd4:	jmp    0x64001650
64024dd9:	lea    ecx,[ebp-0x28]
64024ddc:	jmp    0x64001650
64024de1:	lea    ecx,[ebp-0x28]
64024de4:	jmp    0x64001650
64024de9:	lea    ecx,[ebp-0x28]
64024dec:	jmp    0x64001650
64024df1:	lea    ecx,[ebp-0x28]
64024df4:	jmp    0x64001650
64024df9:	lea    ecx,[ebp-0x28]
64024dfc:	jmp    0x64001650
64024e01:	lea    ecx,[ebp-0x28]
64024e04:	jmp    0x64001650
64024e09:	lea    ecx,[ebp-0x28]
64024e0c:	jmp    0x64001650
64024e11:	lea    ecx,[ebp-0x28]
64024e14:	jmp    0x64001650
64024e19:	lea    ecx,[ebp-0x28]
64024e1c:	jmp    0x64001650
64024e21:	lea    ecx,[ebp-0x28]
64024e24:	jmp    0x64001650
64024e29:	lea    ecx,[ebp-0x28]
64024e2c:	jmp    0x64001650
64024e31:	lea    ecx,[ebp-0x28]
64024e34:	jmp    0x64001650
64024e39:	lea    ecx,[ebp-0x28]
64024e3c:	jmp    0x64001650
64024e41:	lea    ecx,[ebp-0x28]
64024e44:	jmp    0x64001650
64024e49:	lea    ecx,[ebp-0x28]
64024e4c:	jmp    0x64001650
64024e51:	lea    ecx,[ebp-0x28]
64024e54:	jmp    0x64001650
64024e59:	lea    ecx,[ebp-0x28]
64024e5c:	jmp    0x64001650
64024e61:	lea    ecx,[ebp-0x28]
64024e64:	jmp    0x64001650
64024e69:	lea    ecx,[ebp-0x28]
64024e6c:	jmp    0x64001650
64024e71:	lea    eax,[ebp-0x40]
64024e74:	jmp    0x64003e40
64024e79:	lea    ecx,[ebp-0x28]
64024e7c:	jmp    0x64001650
64024e81:	mov    edx,DWORD PTR [esp+0x8]
64024e85:	lea    eax,[edx+0xc]
64024e88:	mov    ecx,DWORD PTR [edx-0x4c]
64024e8b:	xor    ecx,eax
64024e8d:	call   0x64013c5c
64024e92:	mov    ecx,DWORD PTR [edx+0x40c]
64024e98:	xor    ecx,eax
64024e9a:	call   0x64013c5c
64024e9f:	mov    eax,0x6402df90
64024ea4:	jmp    0x6401391e
64024ea9:	int3   
64024eaa:	int3   
64024eab:	int3   
64024eac:	int3   
64024ead:	int3   
64024eae:	int3   
64024eaf:	int3   
64024eb0:	mov    eax,DWORD PTR [ebp-0x54]
64024eb3:	and    eax,0x1
64024eb6:	je     0x64024ec8
64024ebc:	and    DWORD PTR [ebp-0x54],0xfffffffe
64024ec0:	mov    ecx,DWORD PTR [ebp+0x4]
64024ec3:	jmp    0x64001930
64024ec8:	ret    
64024ec9:	lea    ecx,[ebp-0x50]
64024ecc:	jmp    0x64001650
64024ed1:	mov    edx,DWORD PTR [esp+0x8]
64024ed5:	lea    eax,[edx-0x58]
64024ed8:	mov    ecx,DWORD PTR [edx-0x5c]
64024edb:	xor    ecx,eax
64024edd:	call   0x64013c5c
64024ee2:	mov    eax,0x6402dfc4
64024ee7:	jmp    0x6401391e
64024eec:	int3   
64024eed:	int3   
64024eee:	int3   
64024eef:	int3   
64024ef0:	mov    eax,DWORD PTR [ebp-0x28]
64024ef3:	and    eax,0x1
64024ef6:	je     0x64024f08
64024efc:	and    DWORD PTR [ebp-0x28],0xfffffffe
64024f00:	mov    ecx,DWORD PTR [ebp+0x4]
64024f03:	jmp    0x64001930
64024f08:	ret    
64024f09:	lea    ecx,[ebp-0x24]
64024f0c:	jmp    0x64001930
64024f11:	lea    ecx,[ebp-0x20]
64024f14:	jmp    0x64001930
64024f19:	lea    ecx,[ebp-0x1c]
64024f1c:	jmp    0x64001930
64024f21:	lea    ecx,[ebp-0x18]
64024f24:	jmp    0x64001930
64024f29:	lea    ecx,[ebp-0x14]
64024f2c:	jmp    0x64001930
64024f31:	lea    ecx,[ebp-0x10]
64024f34:	jmp    0x64001930
64024f39:	mov    edx,DWORD PTR [esp+0x8]
64024f3d:	lea    eax,[edx-0x30]
64024f40:	mov    ecx,DWORD PTR [edx-0x34]
64024f43:	xor    ecx,eax
64024f45:	call   0x64013c5c
64024f4a:	mov    eax,0x6402e020
64024f4f:	jmp    0x6401391e
64024f54:	int3   
64024f55:	int3   
64024f56:	int3   
64024f57:	int3   
64024f58:	int3   
64024f59:	int3   
64024f5a:	int3   
64024f5b:	int3   
64024f5c:	int3   
64024f5d:	int3   
64024f5e:	int3   
64024f5f:	int3   
64024f60:	mov    eax,DWORD PTR [ebp-0x3c]
64024f63:	and    eax,0x1
64024f66:	je     0x64024f78
64024f6c:	and    DWORD PTR [ebp-0x3c],0xfffffffe
64024f70:	mov    ecx,DWORD PTR [ebp+0x4]
64024f73:	jmp    0x64001930
64024f78:	ret    
64024f79:	lea    ecx,[ebp-0x50]
64024f7c:	jmp    0x64001930
64024f81:	lea    ecx,[ebp-0x38]
64024f84:	jmp    0x64001930
64024f89:	mov    edx,DWORD PTR [esp+0x8]
64024f8d:	lea    eax,[edx-0x54]
64024f90:	mov    ecx,DWORD PTR [edx-0x58]
64024f93:	xor    ecx,eax
64024f95:	call   0x64013c5c
64024f9a:	mov    eax,0x6402e05c
64024f9f:	jmp    0x6401391e
64024fa4:	int3   
64024fa5:	int3   
64024fa6:	int3   
64024fa7:	int3   
64024fa8:	int3   
64024fa9:	int3   
64024faa:	int3   
64024fab:	int3   
64024fac:	int3   
64024fad:	int3   
64024fae:	int3   
64024faf:	int3   
64024fb0:	lea    ecx,[ebp+0xc]
64024fb3:	jmp    0x64001930
64024fb8:	lea    ecx,[ebp-0x28]
64024fbb:	jmp    0x64001650
64024fc0:	lea    ecx,[ebp-0x6c]
64024fc3:	jmp    0x64001650
64024fc8:	lea    ecx,[ebp-0x88]
64024fce:	jmp    0x64001650
64024fd3:	lea    ecx,[ebp-0xc0]
64024fd9:	jmp    0x64001650
64024fde:	lea    ecx,[ebp-0xa4]
64024fe4:	jmp    0x64001650
64024fe9:	mov    edx,DWORD PTR [esp+0x8]
64024fed:	lea    eax,[edx+0xc]
64024ff0:	mov    ecx,DWORD PTR [edx-0xc4]
64024ff6:	xor    ecx,eax
64024ff8:	call   0x64013c5c
64024ffd:	mov    ecx,DWORD PTR [edx+0x80]
64025003:	xor    ecx,eax
64025005:	call   0x64013c5c
6402500a:	mov    eax,0x6402e0b0
6402500f:	jmp    0x6401391e
64025014:	int3   
64025015:	int3   
64025016:	int3   
64025017:	int3   
64025018:	int3   
64025019:	int3   
6402501a:	int3   
6402501b:	int3   
6402501c:	int3   
6402501d:	int3   
6402501e:	int3   
6402501f:	int3   
64025020:	call   0x6400d910
64025025:	mov    ds:0x64033294,eax
6402502a:	ret    
6402502b:	int3   
6402502c:	int3   
6402502d:	int3   
6402502e:	int3   
6402502f:	int3   
64025030:	call   0x6400d9f0
64025035:	mov    ds:0x640332ec,eax
6402503a:	ret    
6402503b:	int3   
6402503c:	int3   
6402503d:	int3   
6402503e:	int3   
6402503f:	int3   
64025040:	call   0x6400dad0
64025045:	mov    ds:0x64033304,eax
6402504a:	ret    
6402504b:	int3   
6402504c:	int3   
6402504d:	int3   
6402504e:	int3   
6402504f:	int3   
64025050:	call   0x6400dbb0
64025055:	mov    ds:0x64033284,eax
6402505a:	ret    
6402505b:	int3   
6402505c:	int3   
6402505d:	int3   
6402505e:	int3   
6402505f:	int3   
64025060:	call   0x6400dc90
64025065:	mov    ds:0x64033308,eax
6402506a:	ret    
6402506b:	int3   
6402506c:	int3   
6402506d:	int3   
6402506e:	int3   
6402506f:	int3   
64025070:	call   0x6400dd70
64025075:	mov    ds:0x64033280,eax
6402507a:	ret    
6402507b:	int3   
6402507c:	int3   
6402507d:	int3   
6402507e:	int3   
6402507f:	int3   
64025080:	call   0x6400de50
64025085:	mov    ds:0x640332b0,eax
6402508a:	ret    
6402508b:	int3   
6402508c:	int3   
6402508d:	int3   
6402508e:	int3   
6402508f:	int3   
64025090:	call   0x6400df30
64025095:	mov    ds:0x640332e0,eax
6402509a:	ret    
6402509b:	int3   
6402509c:	int3   
6402509d:	int3   
6402509e:	int3   
6402509f:	int3   
640250a0:	call   0x6400e010
640250a5:	mov    ds:0x6403330c,eax
640250aa:	ret    
640250ab:	int3   
640250ac:	int3   
640250ad:	int3   
640250ae:	int3   
640250af:	int3   
640250b0:	call   0x6400e0f0
640250b5:	mov    ds:0x640332e8,eax
640250ba:	ret    
640250bb:	int3   
640250bc:	int3   
640250bd:	int3   
640250be:	int3   
640250bf:	int3   
640250c0:	call   0x6400e1d0
640250c5:	mov    ds:0x640332bc,eax
640250ca:	ret    
640250cb:	int3   
640250cc:	int3   
640250cd:	int3   
640250ce:	int3   
640250cf:	int3   
640250d0:	call   0x6400e2b0
640250d5:	mov    ds:0x6403329c,eax
640250da:	ret    
640250db:	int3   
640250dc:	int3   
640250dd:	int3   
640250de:	int3   
640250df:	int3   
640250e0:	call   0x6400e390
640250e5:	mov    ds:0x640332d4,eax
640250ea:	ret    
640250eb:	int3   
640250ec:	int3   
640250ed:	int3   
640250ee:	int3   
640250ef:	int3   
640250f0:	call   0x6400e470
640250f5:	mov    ds:0x6403328c,eax
640250fa:	ret    
640250fb:	int3   
640250fc:	int3   
640250fd:	int3   
640250fe:	int3   
640250ff:	int3   
64025100:	call   0x6400e550
64025105:	mov    ds:0x6403327c,eax
6402510a:	ret    
6402510b:	int3   
6402510c:	int3   
6402510d:	int3   
6402510e:	int3   
6402510f:	int3   
64025110:	call   0x6400e630
64025115:	mov    ds:0x640332f8,eax
6402511a:	ret    
6402511b:	int3   
6402511c:	int3   
6402511d:	int3   
6402511e:	int3   
6402511f:	int3   
64025120:	call   0x6400e710
64025125:	mov    ds:0x640332b8,eax
6402512a:	ret    
6402512b:	int3   
6402512c:	int3   
6402512d:	int3   
6402512e:	int3   
6402512f:	int3   
64025130:	call   0x6400e7f0
64025135:	mov    ds:0x640332dc,eax
6402513a:	ret    
6402513b:	int3   
6402513c:	int3   
6402513d:	int3   
6402513e:	int3   
6402513f:	int3   
64025140:	call   0x6400e8d0
64025145:	mov    ds:0x64033278,eax
6402514a:	ret    
6402514b:	int3   
6402514c:	int3   
6402514d:	int3   
6402514e:	int3   
6402514f:	int3   
64025150:	call   0x6400e9b0
64025155:	mov    ds:0x640332f4,eax
6402515a:	ret    
6402515b:	int3   
6402515c:	int3   
6402515d:	int3   
6402515e:	int3   
6402515f:	int3   
64025160:	call   0x6400ea90
64025165:	mov    ds:0x640332ac,eax
6402516a:	ret    
6402516b:	int3   
6402516c:	int3   
6402516d:	int3   
6402516e:	int3   
6402516f:	int3   
64025170:	call   0x6400eb70
64025175:	mov    ds:0x64033290,eax
6402517a:	ret    
6402517b:	int3   
6402517c:	int3   
6402517d:	int3   
6402517e:	int3   
6402517f:	int3   
64025180:	call   0x6400ec50
64025185:	mov    ds:0x64033298,eax
6402518a:	ret    
6402518b:	int3   
6402518c:	int3   
6402518d:	int3   
6402518e:	int3   
6402518f:	int3   
64025190:	call   0x6400ed30
64025195:	mov    ds:0x64033318,eax
6402519a:	ret    
6402519b:	int3   
6402519c:	int3   
6402519d:	int3   
6402519e:	int3   
6402519f:	int3   
640251a0:	call   0x6400ee10
640251a5:	mov    ds:0x640332a4,eax
640251aa:	ret    
640251ab:	int3   
640251ac:	int3   
640251ad:	int3   
640251ae:	int3   
640251af:	int3   
640251b0:	call   0x6400eef0
640251b5:	mov    ds:0x640332d8,eax
640251ba:	ret    
640251bb:	int3   
640251bc:	int3   
640251bd:	int3   
640251be:	int3   
640251bf:	int3   
640251c0:	call   0x6400efd0
640251c5:	mov    ds:0x64033288,eax
640251ca:	ret    
640251cb:	int3   
640251cc:	int3   
640251cd:	int3   
640251ce:	int3   
640251cf:	int3   
640251d0:	call   0x6400f0b0
640251d5:	mov    ds:0x640332e4,eax
640251da:	ret    
640251db:	int3   
640251dc:	int3   
640251dd:	int3   
640251de:	int3   
640251df:	int3   
640251e0:	call   0x6400f190
640251e5:	mov    ds:0x640332c8,eax
640251ea:	ret    
640251eb:	int3   
640251ec:	int3   
640251ed:	int3   
640251ee:	int3   
640251ef:	int3   
640251f0:	call   0x6400f270
640251f5:	mov    ds:0x640332b4,eax
640251fa:	ret    
640251fb:	int3   
640251fc:	int3   
640251fd:	int3   
640251fe:	int3   
640251ff:	int3   
64025200:	call   0x6400f350
64025205:	mov    ds:0x640332d0,eax
6402520a:	ret    
6402520b:	int3   
6402520c:	int3   
6402520d:	int3   
6402520e:	int3   
6402520f:	int3   
64025210:	call   0x6400f430
64025215:	mov    ds:0x640332cc,eax
6402521a:	ret    
6402521b:	int3   
6402521c:	int3   
6402521d:	int3   
6402521e:	int3   
6402521f:	int3   
64025220:	call   0x6400f510
64025225:	mov    ds:0x640332c0,eax
6402522a:	ret    
6402522b:	int3   
6402522c:	int3   
6402522d:	int3   
6402522e:	int3   
6402522f:	int3   
64025230:	call   0x6400f5f0
64025235:	mov    ds:0x64033310,eax
6402523a:	ret    
6402523b:	int3   
6402523c:	int3   
6402523d:	int3   
6402523e:	int3   
6402523f:	int3   
64025240:	call   0x6400f6d0
64025245:	mov    ds:0x6403331c,eax
6402524a:	ret    
6402524b:	int3   
6402524c:	int3   
6402524d:	int3   
6402524e:	int3   
6402524f:	int3   
64025250:	call   0x6400f7b0
64025255:	mov    ds:0x640332a0,eax
6402525a:	ret    
6402525b:	int3   
6402525c:	int3   
6402525d:	int3   
6402525e:	int3   
6402525f:	int3   
64025260:	call   0x6400f890
64025265:	mov    ds:0x640332a8,eax
6402526a:	ret    
6402526b:	int3   
6402526c:	int3   
6402526d:	int3   
6402526e:	int3   
6402526f:	int3   
64025270:	call   0x6400f970
64025275:	mov    ds:0x64033300,eax
6402527a:	ret    
6402527b:	int3   
6402527c:	int3   
6402527d:	int3   
6402527e:	int3   
6402527f:	int3   
64025280:	call   0x6400fa50
64025285:	mov    ds:0x64033314,eax
6402528a:	ret    
6402528b:	int3   
6402528c:	int3   
6402528d:	int3   
6402528e:	int3   
6402528f:	int3   
64025290:	call   0x6400fb30
64025295:	mov    ds:0x640332c4,eax
6402529a:	ret    
6402529b:	int3   
6402529c:	int3   
6402529d:	int3   
6402529e:	int3   
6402529f:	int3   
640252a0:	call   0x6400fc10
640252a5:	mov    ds:0x640332fc,eax
640252aa:	ret    
640252ab:	int3   
640252ac:	int3   
640252ad:	int3   
640252ae:	int3   
640252af:	int3   
640252b0:	call   0x6400fcf0
640252b5:	mov    ds:0x640332f0,eax
640252ba:	ret    
640252bb:	mov    ecx,0x640304cc
640252c0:	call   0x640130ad
640252c5:	push   0x64025441
640252ca:	call   0x64013d8f
640252cf:	pop    ecx
640252d0:	ret    
640252d1:	mov    ecx,0x64030508
640252d6:	call   0x64013087
640252db:	push   0x6402544b
640252e0:	call   0x64013d8f
640252e5:	pop    ecx
640252e6:	ret    
640252e7:	call   DWORD PTR ds:0x64026108
640252ed:	push   0x64025455
640252f2:	mov    DWORD PTR ds:0x64030534,0x64026c38
640252fc:	mov    ds:0x64030538,eax
64025301:	mov    BYTE PTR ds:0x6403053c,0x0
64025308:	call   0x64013d8f
6402530d:	pop    ecx
6402530e:	ret    
6402530f:	push   0x64030534
64025314:	mov    ecx,0x64030540
64025319:	call   0x64013220
6402531e:	push   0x6402545f
64025323:	call   0x64013d8f
64025328:	pop    ecx
64025329:	ret    
6402532a:	int3   
6402532b:	int3   
6402532c:	int3   
6402532d:	int3   
6402532e:	int3   
6402532f:	int3   
64025330:	push   0x64025480
64025335:	call   0x64013d8f
6402533a:	pop    ecx
6402533b:	ret    
6402533c:	int3   
6402533d:	int3   
6402533e:	int3   
6402533f:	int3   
64025340:	push   ecx
64025341:	mov    eax,0x640334a0
64025346:	call   0x64007720
6402534b:	pop    ecx
6402534c:	ret    
6402534d:	int3   
6402534e:	int3   
6402534f:	int3   
64025350:	mov    eax,0x640334c0
64025355:	jmp    0x64007720
6402535a:	int3   
6402535b:	int3   
6402535c:	int3   
6402535d:	int3   
6402535e:	int3   
6402535f:	int3   
64025360:	mov    eax,0x640334b0
64025365:	jmp    0x64007720
6402536a:	int3   
6402536b:	int3   
6402536c:	int3   
6402536d:	int3   
6402536e:	int3   
6402536f:	int3   
64025370:	push   ebp
64025371:	mov    ebp,esp
64025373:	and    esp,0xfffffff8
64025376:	mov    eax,ds:0x64033334
6402537b:	mov    edx,DWORD PTR [eax]
6402537d:	sub    esp,0xc
64025380:	push   esi
64025381:	push   eax
64025382:	mov    ecx,0x64033330
64025387:	push   ecx
64025388:	push   edx
64025389:	mov    esi,ecx
6402538b:	push   esi
6402538c:	lea    eax,[esp+0x18]
64025390:	push   eax
64025391:	call   0x64008fa0
64025396:	mov    ecx,DWORD PTR ds:0x64033334
6402539c:	push   ecx
6402539d:	call   0x64013402
640253a2:	add    esp,0x4
640253a5:	xor    eax,eax
640253a7:	mov    ds:0x64033334,eax
640253ac:	mov    ds:0x64033338,eax
640253b1:	pop    esi
640253b2:	mov    esp,ebp
640253b4:	pop    ebp
640253b5:	ret    
640253b6:	int3   
640253b7:	int3   
640253b8:	int3   
640253b9:	int3   
640253ba:	int3   
640253bb:	int3   
640253bc:	int3   
640253bd:	int3   
640253be:	int3   
640253bf:	int3   
640253c0:	push   ebp
640253c1:	mov    ebp,esp
640253c3:	and    esp,0xfffffff8
640253c6:	mov    eax,ds:0x64033328
640253cb:	mov    edx,DWORD PTR [eax]
640253cd:	sub    esp,0xc
640253d0:	push   esi
640253d1:	push   eax
640253d2:	mov    ecx,0x64033324
640253d7:	push   ecx
640253d8:	push   edx
640253d9:	mov    esi,ecx
640253db:	push   esi
640253dc:	lea    eax,[esp+0x18]
640253e0:	push   eax
640253e1:	call   0x64008d40
640253e6:	mov    ecx,DWORD PTR ds:0x64033328
640253ec:	push   ecx
640253ed:	call   0x64013402
640253f2:	add    esp,0x4
640253f5:	xor    eax,eax
640253f7:	mov    ds:0x64033328,eax
640253fc:	mov    ds:0x6403332c,eax
64025401:	pop    esi
64025402:	mov    esp,ebp
64025404:	pop    ebp
64025405:	ret    
64025406:	int3   
64025407:	int3   
64025408:	int3   
64025409:	int3   
6402540a:	int3   
6402540b:	int3   
6402540c:	int3   
6402540d:	int3   
6402540e:	int3   
6402540f:	int3   
64025410:	mov    eax,ds:0x640304bc
64025415:	test   eax,eax
64025417:	je     0x64025422
64025419:	push   eax
6402541a:	call   0x64013402
6402541f:	add    esp,0x4
64025422:	mov    DWORD PTR ds:0x640304bc,0x0
6402542c:	mov    DWORD PTR ds:0x640304c0,0x0
64025436:	mov    DWORD PTR ds:0x640304c4,0x0
64025440:	ret    
64025441:	mov    ecx,0x640304cc
64025446:	jmp    0x6401301b
6402544b:	mov    ecx,0x64030508
64025450:	jmp    0x6401315c
64025455:	mov    ecx,0x64030534
6402545a:	jmp    0x64013174
6402545f:	mov    DWORD PTR ds:0x64030540,0x64026c4c
64025469:	ret    
6402546a:	mov    DWORD PTR ds:0x64030560,0x64026304
64025474:	mov    ecx,0x64030560
64025479:	jmp    0x6401351b
6402547e:	int3   
6402547f:	int3   
64025480:	push   0x64030030
64025485:	call   DWORD PTR ds:0x64026198
6402548b:	ret    
